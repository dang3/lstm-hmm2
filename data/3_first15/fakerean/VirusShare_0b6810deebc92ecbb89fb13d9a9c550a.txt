push
mov
push
push
andl
andl
lea
push
call
sub
neg
sbb
inc
leave
ret
push
mov
push
push
mov
xor
sub
mov
and
cmp
mov
jne
sub
jmp
xor
roll
inc
mov
inc
cmp
jb
xor
pop
inc
pop
pop
ret
push
mov
push
lea
call
test
je
call
jmp
mov
mov
mov
pop
pop
ret
push
mov
sub
push
movl
mov
xor
push
pop
div
mov
mov
shl
mov
xor
push
pop
div
push
pop
sub
mov
sar
or
mov
mov
mov
pushl
call
mov
pop
leave
ret
push
mov
sub
push
push
push
push
call
mov
push
push
push
push
call
add
cmp
jne
mov
mov
movl
jmp
mov
xor
push
pop
div
mov
mov
shl
mov
mov
and
mov
mov
sub
mov
mov
and
mov
mov
xor
push
pop
div
mov
mov
sar
mov
xor
push
pop
div
push
pop
sub
mov
shl
or
mov
mov
mov
push
mov
mov
call
pop
cmp
je
mov
mov
xor
push
pop
div
push
pop
mov
sar
mov
mov
mov
jmp
lea
push
push
push
pushl
call
lea
push
pushl
call
mov
mov
or
mov
mov
add
mov
cmpl
jne
mov
mov
mov
add
mov
call
push
push
call
pop
pop
xor
jmp
push
push
call
xor
inc
pop
pop
leave
ret
in
into
addb
jmp
push
cmp
push
daa
mov
aas
sbb
enter
stc
ds
sti
xor
mov
stc
push
dec
pop
sbb
aaa
inc
scas
je
inc
jle
enter
adc
imul
pop
push
aas
int3
jb
lret
fistpl
hlt
loop
cltd
cs
mov
mov
out
dec
out
loopne
aam
adc
movsb
negb
mov
pop
les
les
dec
fcoml
xchg
stc
add
push
out
add
inc
andl
cmpsl
mov
lahf
xchg
stc
insl
sub
fdivrs
mov
dec
or
dec
xor
adc
mov
add
lods
je
sbbl
inc
xchg
sub
pop
jl
jnp
xchg
adc
push
and
xchg
scas
cltd
fsubrl
iret
sti
jo
stc
scas
push
push
rcl
dec
cmp
and
test
outsl
test
in
pop
adc
pop
lds
jp
lock
push
push
in
nop
push
lea
dec
add
xchg
lcall
push
loopne
lret
subb
cmp
jge
pop
pop
inc
lcall
dec
sub
cmp
mov
sbb
jb
imul
sbb
xchg
add
popf
mov
push
mov
out
rorb
xchg
jae
or
les
jmp
or
dec
rcr
pop
jmp
test
repz
mov
push
lock
pop
rclb
push
inc
cmc
cmpsl
add
mov
adc
repnz
cli
or
cmp
adc
jle
test
testl
in
cmp
fcoms
pop
mov
xchg
dec
or
mov
lea
insb
jb
push
xchg
arpl
sbb
arpl
sub
inc
cmc
mov
repz
add
test
mov
mov
notb
movsl
stc
sbb
jecxz
pop
decl
inc
cmp
sub
adc
jno
mov
int3
push
sbb
add
push
dec
fs
int
clc
push
add
pop
mov
rorb
mov
and
out
pop
fistpll
mov
scas
xchg
pop
mov
cmp
inc
and
add
loope
jns
sbb
inc
test
fisubrs
ja
outsb
lret
dec
lcall
xchg
negb
imul
in
push
fwait
inc
cmp
call
xor
push
repnz
pushl
test
mov
add
push
mov
test
cmp
cmp
lret
cltd
test
aaa
xchg
loope
das
inc
sarl
imul
lcall
loop
lods
sbb
scas
mov
push
js
iret
jle
jns
xchg
mov
popa
jp
shrl
ret
mull
mov
das
fnstcw
in
mov
push
push
pop
outsl
mov
add
stc
mov
test
sub
lods
add
sbb
xchg
xor
mov
jg
lcall
xor
test
jge
data16
cmp
mov
push
jecxz
ret
pushf
jnp
insl
mov
incl
inc
stos
fwait
cld
push
jmp
jns
add
insb
hlt
mov
int
mov
or
xor
les
aad
dec
scas
xchg
pop
xchg
std
and
xchg
cs
sub
sub
mov
scas
mov
xchg
jae
add
inc
xchg
popf
mov
lret
sub
test
pop
push
push
daa
in
push
fstpl
repnz
mov
jnp
jp
mov
inc
popf
mov
and
inc
fs
add
and
fsub
pop
adc
inc
aam
push
cli
dec
inc
xchg
lret
mov
xor
pop
adc
or
pop
ret
insl
mov
mov
jnp
adc
jne
in
mov
decl
cmpsl
cld
in
and
sub
int
repz
ja
sahf
cmpsl
dec
cltd
push
addb
movsl
icebp
pushf
cmpxchg
push
jp
adcb
inc
mov
push
or
stc
lcall
fcoml
push
clc
enter
sbb
das
cmc
adc
int
iret
sbb
push
or
mov
into
fucompp
adc
xor
loop
cwtl
ror
cltd
xor
outsb
aas
jg
xchg
pop
adc
mov
xchg
push
push
outsl
mov
in
test
mov
xchg
faddl
lahf
push
mov
jmp
les
mov
aaa
dec
ljmp
sub
test
hlt
imul
push
les
aas
cmc
sub
jp
hlt
mov
sbb
jecxz
out
mov
or
xchg
push
sbb
jno
mov
out
inc
dec
inc
hlt
adc
xchg
insl
ret
jp
xor
xor
add
leave
and
std
sub
scas
pop
arpl
add
insl
jle
testl
pop
xchg
out
aaa
daa
cmpsb
push
push
dec
add
sarb
movsb
jle
pop
push
lret
andl
adc
push
aam
xor
mov
xor
and
fcmovnbe
pusha
sbb
pop
shr
ret
mov
push
cmpsb
pusha
cmp
repz
add
stos
add
movsb
sub
orb
pop
and
cli
movsb
dec
or
mov
and
xorb
outsl
int3
outsb
sbbl
push
in
add
outsb
mov
or
jne
mov
adc
add
inc
ja
inc
outsb
mov
sub
out
push
filds
xchg
jns
adcb
inc
iret
js
push
and
dec
pop
pop
dec
fsubl
mov
repnz
shlb
cltd
aaa
cwtl
push
mov
imull
mov
ljmp
xlat
jl
sbb
or
jae
adc
jb
test
push
insl
lods
lea
scas
cld
iret
inc
sbb
xchg
mov
pusha
icebp
xchg
mov
xchg
lret
mov
shl
cmp
jbe
mov
cmp
in
pop
lret
dec
in
add
xchg
xor
ret
aad
add
sub
stos
pop
aas
jae
lret
mov
adc
push
hlt
push
xchg
or
push
sub
scas
sub
push
leave
xchg
jmp
std
fisubl
lret
call
jecxz
and
or
pop
cmp
mov
mov
mov
sub
idivl
adcl
mulb
ret
cmpsl
jb
push
fistpll
lock
mov
fsubs
xlat
outsb
pushl
addb
insb
sub
movb
add
push
inc
orl
out
dec
sub
jp
dec
xchg
xlat
test
jnp
jp
xchg
into
xor
pop
mov
mov
sbb
cmp
mov
fnstsw
add
xor
inc
movsb
stos
sbb
fcomps
mov
test
jecxz
faddl
mov
xlat
inc
cwtl
arpl
push
stc
loop
xchg
push
lahf
outsb
mov
inc
aad
bound
std
push
xchg
js
repnz
das
cwtl
enter
add
jnp
jbe
or
mov
push
push
imul
ret
push
lret
insb
leave
add
in
adc
sbb
mov
jmp
or
xchg
negl
sbb
add
vmwrite
out
mov
cmp
and
xchg
out
jle
data16
imul
sub
inc
xor
rorb
sbb
xchg
push
dec
imul
lds
loop
jae
in
je
mov
mov
xchg
fbld
add
shll
push
pop
daa
lcall
cwtl
jns
and
mov
mov
dec
push
xchg
add
cmp
push
jecxz
dec
pop
cmp
mov
sub
rcl
mov
jmp
inc
fbld
les
xchg
jo
cltd
stos
fs
mov
sub
lahf
loopne
imul
xchg
push
lds
insl
test
sub
mov
mov
inc
leave
mov
or
cwtl
and
ret
cmp
pushf
cmp
push
fldenv
arpl
or
test
cmp
dec
sub
sbb
clc
pop
xor
leave
rolb
dec
xor
nop
and
mov
inc
inc
jecxz
jg
insl
std
jmp
lret
inc
enter
lahf
pop
inc
fsubl
nop
dec
or
jne
mov
dec
imul
jnp
andl
in
jno
push
push
jnp
pop
in
rclb
stos
cmpl
xchg
dec
push
jns
outsl
xor
int3
sti
hlt
lods
and
scas
popa
pop
dec
test
push
or
lea
cmp
stos
adc
and
add
dec
test
xor
mov
das
rcll
nop
or
sub
jbe
ror
sarl
dec
ljmp
lea
inc
rcll
adc
pop
clc
popl
scas
sub
push
jns
and
rorb
repnz
cmp
clc
imulb
orb
pop
cmp
cwtl
xor
mov
cmc
sub
popa
lret
movsb
daa
pop
xor
ljmp
push
mov
adc
dec
in
lret
lock
and
movsl
jbe
popa
sti
cmc
test
arpl
adc
add
lods
testl
jne
punpckhwd
xlat
and
fistpl
jns
push
mov
ljmp
arpl
clc
bound
aam
jo
add
or
jbe
mov
mov
ja
pop
imul
sbb
negl
ss
nop
adc
xchg
test
movsb
push
jo
adc
lret
popa
sub
in
out
push
mov
mov
and
dec
int
aaa
out
fs
mov
xchg
mov
mov
add
push
pop
scas
cmp
enter
stos
push
into
xor
leave
mov
add
cmp
rcrb
shll
out
or
lahf
and
xchg
lock
cmp
in
cld
out
insl
inc
repz
test
sub
mov
lock
dec
fcompl
mov
fs
adc
adc
mov
mov
repnz
test
cmp
pop
mov
jl
dec
and
push
sbb
test
test
add
pusha
sub
jne
sbb
dec
daa
pop
das
fdivs
lret
loope
je
mov
test
add
in
inc
sub
mov
jbe
rcrl
cmp
inc
into
aam
xor
fisttps
and
fisubrl
inc
repz
int3
aaa
clc
mov
je
jle
in
movsl
mov
pusha
jle
ja
popl
cs
push
fsubr
mov
shlb
lods
lcall
scas
pop
adc
adc
pop
fnsave
je
pop
mul
or
clc
push
mov
lods
iret
fidivrl
cmpsb
loop
push
rcrl
push
dec
xlat
fidivrs
stc
notb
orl
dec
mov
sbb
xor
lea
cmp
jg
inc
sti
jle
cmpsl
mov
test
xor
call
cltd
aad
out
shl
movsb
pop
jo
xchg
test
clc
js
mov
fwait
cmp
push
lea
loope
orl
adc
sub
mov
mov
int
repnz
insl
cmpsb
mov
jge
jg
push
push
pop
jns
sbbb
andb
xor
sbb
jecxz
push
adc
negl
push
mov
and
test
pop
cmp
fistps
cmp
int3
dec
ja
cli
and
hlt
daa
into
and
pusha
shlw
orl
outsl
iret
lods
xor
xchg
aaa
xor
jle
xchg
movsb
mov
cli
cmp
pop
lahf
push
jl
test
imul
insl
and
clc
aas
into
inc
pop
std
ljmp
xchg
jg
rorl
add
sbb
lcall
negl
cli
test
dec
popa
dec
jne
loopne
inc
fmuls
lods
sub
dec
push
cmp
or
orb
jbe
sbb
sbb
aaa
and
stos
mov
pop
push
xor
xlat
rorl
cld
jp
sub
push
lods
xlat
pop
orl
mov
scas
mov
fimull
pop
mov
or
xchg
or
dec
mov
out
cmp
pop
inc
sahf
add
xlat
jne
lret
mov
notl
hlt
in
dec
or
push
and
jp
in
mov
inc
inc
call
xchg
xlat
rcrb
cli
and
adc
sub
push
sbb
imul
and
xlat
cli
out
jecxz
out
lds
pop
icebp
push
cmp
aad
push
add
jecxz
aaa
mov
mov
adc
pop
sahf
lods
repz
push
push
insb
lock
loopne
jo
pusha
fst
lds
lcall
sbb
inc
cs
add
jp
xor
clc
ret
pushf
adc
push
xor
test
insl
and
inc
adc
xchg
lret
out
sub
aas
adc
cmp
inc
repnz
fs
call
movsl
dec
xlat
ret
shlb
int
mov
mull
sarl
pop
mov
movsb
sub
imul
jg
jo
movsl
sub
push
xor
push
data16
cmp
jl
aam
adc
push
cld
mov
push
dec
mov
cmp
xor
and
xor
add
testl
cmp
inc
pushl
or
or
clc
adc
das
adc
add
sub
xorl
lret
aam
aam
lock
jg
mov
into
out
mov
push
dec
lahf
and
dec
inc
push
or
cmp
jle
scas
push
jmp
out
out
repnz
push
in
cltd
sbb
out
mov
jle
hlt
rorl
outsb
outsl
pop
prefetchw
or
notb
jl
and
add
cld
cld
les
popf
mov
movsb
mov
xor
mov
jge
ffreep
jge
stos
arpl
rolb
xor
jae
and
mov
pop
jns
in
and
sbb
ljmp
mov
es
push
xchg
int
mov
sub
mov
sarb
cmc
push
das
shrb
stc
cli
lret
mov
push
rcrb
jge
push
jne
mov
arpl
mov
jmp
mov
and
and
and
mov
sbb
add
scas
in
testl
inc
daa
movsl
mov
mov
insl
pop
jbe
out
pop
xchg
cmp
or
push
push
das
fbstp
adc
inc
cmp
push
in
mov
dec
filds
push
pop
int3
clc
cs
jno
iret
lods
pop
lret
and
add
jne
xor
mov
cwtl
xchg
push
pushf
push
js
mov
pop
xor
outsb
lods
mov
xchg
and
xor
popl
ljmp
sbb
xor
dec
and
sbb
out
xchg
xor
cmpsb
out
ss
cmp
outsb
jle
movsl
fbld
scas
push
pop
mov
or
stc
lret
mov
scas
fbstp
and
cmp
and
stos
or
and
pop
movsl
fstps
cli
testl
push
jecxz
mov
scas
test
lods
sahf
out
cmpxchg
sbb
push
loop
dec
or
lret
jge
sahf
rcrb
sbb
stc
pop
dec
je
scas
xor
mov
stos
loope
lcall
pxor
add
add
insl
push
add
pop
aaa
aaa
adc
dec
add
cmpsb
xchg
hlt
call
mov
pusha
sbb
neg
ret
js
fists
ds
sbb
mov
sub
mov
jg
loop
push
dec
inc
in
imul
cmpl
lret
sbb
loopne
jns
dec
or
int
push
ret
in
lds
push
or
ret
jo
loop
jmp
add
cmpsl
mov
mov
in
in
and
loope
and
outsl
into
inc
lea
mov
jo
or
dec
sbbl
stc
scas
mov
out
inc
mov
mov
fildll
jl
cmc
sahf
bound
punpckhwd
and
call
das
push
jmp
dec
insb
cwtl
aad
lahf
xor
in
imulb
cli
mov
andl
loopne
mov
shlb
mov
cmp
in
fnstsw
loopne
imull
cltd
in
cmpsl
mov
cltd
xchg
iret
ret
push
cmc
mov
aaa
call
push
fsubrs
or
out
adc
xor
arpl
jmp
lcall
imul
push
les
pop
sub
jg
out
sub
iret
mov
addr16
call
ds
dec
jae
or
mov
insl
stos
dec
xor
test
ret
sti
cmp
fmul
or
std
add
dec
jecxz
cmp
fs
bndstx
jp
lret
mov
testb
es
mov
mov
mov
sub
movsb
xchg
outsl
ja
mov
cmp
cltd
es
add
mov
jns
lcall
pop
dec
hlt
dec
scas
sub
mov
adc
das
das
and
add
movsb
out
mov
sub
pusha
mov
pop
fdivrs
cltd
or
iret
lods
ds
xorps
mov
adc
pop
add
dec
mov
mov
jne
inc
xchg
push
sub
adc
inc
push
cli
out
sahf
into
fistps
mov
xchg
jb
mov
out
push
pop
or
sbb
sub
mov
xchg
mov
xor
and
sbb
mov
lods
mov
mov
cwtl
add
mov
js
push
lret
fsubrl
jnp
cmc
sbb
add
jo
ret
lods
pop
inc
push
hlt
add
mov
aad
shll
pop
lea
xchg
add
popf
or
aad
mov
cwtl
adc
call
ret
pop
add
jg
mov
ljmp
addr16
or
cli
sub
xor
pop
icebp
mov
dec
inc
mov
lahf
div
mov
sub
jno
inc
or
xchg
mov
in
pop
inc
jmp
adc
jge
add
add
movsb
stos
ja
dec
xor
hlt
pushf
cmp
pop
xchg
adc
lcall
cmp
imul
jp
sahf
mov
ja
add
xor
movsl
xchg
mov
inc
mov
clc
int
cmpl
inc
aaa
fildl
mov
pusha
xchg
jae
mov
fcomp
mov
out
xor
add
dec
arpl
jno
xchg
fidivrl
cmp
fs
addr16
mov
lahf
mov
out
fsubr
pop
fcoml
aad
or
or
mov
mov
xadd
dec
jmp
ja
inc
mov
addr16
cmp
lret
xchg
jnp
adc
mov
push
notb
mov
dec
inc
mov
aam
lret
sub
jnp
je
push
jmp
fnsave
fxch
int
scas
faddl
add
lds
shlb
push
xchg
out
sbb
stc
in
and
filds
jecxz
ljmp
imul
jmp
mov
pushf
xchg
xchg
sub
loop
mov
xor
aaa
aad
dec
or
inc
jmp
jmp
add
mov
aas
sub
pusha
cli
sbb
xchg
out
pop
outsl
call
cmc
adc
mov
gs
sub
in
scas
inc
aas
hlt
xchg
push
adc
pop
and
mov
sub
cmp
jb
push
popa
scas
roll
and
cmp
pop
adc
push
and
aam
jl
shll
jnp
mov
jecxz
out
es
lock
insb
fnsave
cmpsb
sbb
add
add
imul
sbb
pop
out
mov
shll
jbe
lds
jnp
cld
lret
scas
stos
inc
sub
mov
xor
jae
adc
enter
xchg
call
mov
outsb
or
dec
scas
sub
fdivs
jns
lods
sub
jno
and
pop
jno
scas
push
xchg
flds
cvttps2pi
xorl
cmp
xchg
outsl
dec
jp
xchg
jnp
rorl
mov
mov
aam
mov
mov
aam
sub
imul
adc
incb
mov
mov
int3
fxch
in
out
loopne
push
dec
out
cli
mov
mov
xor
push
dec
mov
in
fnstsw
nop
ret
mov
stos
ss
insb
shrb
mov
jno
insl
ja
push
sahf
mov
inc
outsb
mov
sub
pushf
inc
ja
inc
and
rclb
xor
add
and
xor
fbstp
and
adcl
mov
push
add
lgs
jns
jb
shlb
sub
dec
in
clc
pop
movsb
jo
ret
out
sbb
mov
lea
add
mov
fidivrl
cmpsl
aaa
hlt
stos
cmp
mov
jmp
inc
fidivrs
mov
lahf
out
xchg
jae
jg
jnp
mov
cmp
jne
jo
push
arpl
jno
icebp
mov
pop
pop
mov
rcl
cltd
das
xchg
mov
sbb
shlb
popf
jno
test
lahf
jae
pop
jmp
in
cmpsb
iret
mov
ret
mov
inc
and
rcll
rclb
or
mov
mov
iret
lock
xchg
add
xor
stos
xchg
fadd
dec
mov
enter
idivb
sub
inc
popa
mov
pop
cmp
xchg
ljmp
xor
xor
and
into
mov
pop
mov
inc
hlt
jecxz
and
jns
movsb
dec
push
addr16
push
negl
mov
adc
filds
xchg
dec
outsb
adc
jae
call
cmp
add
pop
arpl
sbb
ret
sub
pop
or
add
push
js
xor
sbb
xchg
outsl
xchg
sub
dec
idivl
mov
dec
ret
push
push
mov
jg
fisubrs
lcall
xchg
cmp
js
or
xor
push
add
add
and
out
cli
iret
mov
sub
or
inc
jecxz
mov
sbbb
mov
ss
mov
push
adc
lahf
xor
inc
ret
hlt
cli
lahf
sahf
nop
mov
jecxz
loop
dec
xchg
scas
xor
mov
sub
pop
jae
pusha
jnp
jns
mov
idiv
mov
sub
fwait
cltd
dec
fwait
mov
outsl
ljmp
mov
or
mov
push
sub
cmp
idiv
push
fildll
stos
dec
hlt
clc
jmp
je
xor
addr16
inc
adc
mov
dec
mov
repnz
inc
insb
inc
pop
outsb
fsubl
jp
xlat
insb
std
fsubs
js
into
fstp
jmp
push
cld
dec
sub
cmp
sub
pop
cmp
jno
push
fcmovbe
imul
je
es
cmp
pop
mov
mov
dec
pop
inc
inc
sbb
loope
test
adc
jo
xchg
aaa
inc
call
movsb
sbb
pop
repz
std
pop
sbb
adc
aas
inc
pop
cmp
inc
es
fcoms
int3
clc
pop
sbb
or
mov
ss
adc
dec
adc
mov
mov
pop
sbb
add
aad
adc
cmp
sti
daa
dec
stos
leave
lcall
cmp
sbb
cli
push
test
pushf
pop
or
pop
sbb
mov
leave
jmp
nop
mov
sub
mov
jbe
rol
cmp
cs
lret
movsl
pusha
xor
testl
sbbb
stos
out
and
mov
adc
dec
stos
xor
int
mov
cld
out
adc
scas
testl
rcll
sbb
cwtl
into
aaa
stc
mov
xchg
mov
out
sbb
jne
mov
jbe
push
add
add
inc
sbb
das
mov
or
xor
in
inc
shll
ret
mov
push
mov
test
mov
xor
pop
xor
fs
dec
int
cli
xor
stc
cmp
add
lods
inc
inc
cld
and
xchg
fwait
xchg
push
or
dec
mov
push
mov
clc
mul
out
insb
mov
add
clc
cwtl
in
jbe
ret
ds
hlt
xchg
add
push
shlb
xchg
and
xorb
fisubs
fdivl
fs
dec
push
es
xor
shlb
in
out
dec
int3
xbegin
popa
adc
pop
sti
test
or
je
in
icebp
pop
outsb
mov
ljmp
out
in
ljmp
fdivl
adc
pop
movsl
inc
and
push
daa
inc
outsb
push
pop
in
mov
jmp
xor
in
js
setne
lcall
in
es
jp
mov
and
cmp
les
pop
jne
xchg
and
jmp
jecxz
jecxz
push
adc
frstor
mov
test
in
je
cld
inc
mov
mov
das
lods
jl
and
std
add
mov
fiaddl
insb
push
sub
lea
cld
lods
fimuls
cmp
dec
and
stc
gs
cs
sbb
jg
data16
aad
xchg
cmp
cmp
and
aam
adc
movsb
gs
pop
push
cmpl
lods
sub
outsb
mov
int3
sbb
repz
in
mov
xchg
push
sbb
adc
sub
fcom
sub
scas
adc
jno,pn
push
xor
sub
jmp
fnstsw
sbb
iret
pop
mov
jno
divb
or
popf
out
popf
outsb
lods
adc
inc
lock
mov
pop
pop
xor
cmc
push
xchg
pop
sti
inc
mov
push
mov
inc
lcall
decb
into
mov
xchg
and
jo
sub
inc
ds
out
and
pop
in
pop
std
cli
lcall
cs
cmp
push
cli
dec
mov
std
push
dec
pop
mov
xchg
int
or
sub
pop
loopne
xchg
jmp
or
mov
push
or
push
pop
pusha
mov
add
cltd
jnp
mov
mov
call
dec
mov
inc
test
or
jl
mov
xor
inc
inc
mov
xor
push
mov
mov
ss
dec
shlb
mov
sti
shl
imul
push
xor
lret
andb
je
data16
sub
pop
fs
mov
sbb
mov
rolb
mov
dec
loopne
cmp
and
pop
adc
sub
mov
inc
inc
mov
add
inc
mov
mov
enter
sbb
jge
cmp
adc
or
lea
popa
xchg
mov
ljmp
subl
push
idiv
push
mov
rcll
mov
div
fildl
and
xchg
inc
pushf
mov
cmpsb
sbb
fstpt
fwait
repnz
cmp
adc
sarb
jge
std
add
xor
jle
leave
inc
js
jmp
sub
les
stos
mov
mov
bound
or
es
jnp
inc
and
aas
pop
in
push
sbb
xor
icebp
add
and
aad
push
pusha
data16
cmpsb
nop
xchg
jge
aad
cmp
jno
in
pop
pop
lods
imul
or
sub
mov
jl
sub
das
aaa
call
lret
nop
cmp
and
stc
movsl
and
push
mov
enter
shl
mov
in
addr16
pop
xchg
cs
fidivrs
or
sbb
popf
sub
cmpsb
jge
setp
std
inc
sarl
dec
xchg
hlt
shl
sbb
xor
aad
xor
idiv
mov
sbb
repnz
inc
adc
jmp
mov
in
lcall
xchg
mov
call
pop
add
popw
test
mov
into
xchg
sbbl
pop
in
dec
adc
call
mov
enter
mov
or
imul
stc
cmpsl
test
test
pop
inc
movsb
pushf
pushf
imul
int
mov
mov
cld
sbb
add
les
sahf
xchg
sbb
mov
icebp
mov
cwtl
cmp
sbb
mov
dec
les
ret
ljmp
out
cmp
sahf
mov
push
arpl
push
lcall
inc
je
mov
popf
push
imul
ss
dec
cmp
or
fadd
outsl
mov
imul
invd
lods
inc
cmp
push
inc
push
xchg
xor
es
ja
mov
out
lret
sub
inc
adc
cmp
flds
sub
ret
adc
and
xor
push
ffree
jl
mov
stos
pop
lds
sub
mov
xchg
lds
mov
or
bound
addr16
pand
ret
dec
movsl
add
cmp
lret
adc
fidivs
fcom
dec
stc
rolb
xor
mov
and
dec
in
jno
or
jmp
shll
ret
jae
pusha
or
mov
mov
pop
inc
adc
pop
xor
int3
test
pop
aad
inc
cmp
enter
fwait
dec
mov
aam
adc
and
roll
mov
and
xchg
mov
int3
ret
pop
addb
int3
dec
sub
mov
les
data16
dec
inc
mov
adc
add
jns
pop
or
xchg
fisttpll
dec
out
mov
inc
test
imul
mov
pop
shlb
stc
dec
lret
enter
lock
lods
gs
lret
mov
add
flds
cli
scas
cwtl
sbb
cmp
mov
jmp
dec
stos
hlt
push
js
lret
mov
inc
call
mov
rclb
and
gs
add
out
inc
gs
mov
stos
and
test
adc
mov
ror
mov
pop
ret
jns
mov
icebp
out
je
mov
test
mov
xor
mov
jae
adc
mov
cmpsb
add
mov
mov
push
enter
jb
in
xor
movsb
cmp
es
jnp
cli
mov
dec
jb
nop
inc
mov
add
ss
fisttpll
xor
icebp
jmp
mov
adcl
fnstenv
jnp
add
pop
scas
or
cmpsb
stos
popa
mov
jge
lahf
in
hlt
xlat
out
dec
rcr
idivl
cmp
je
push
pop
dec
test
fimuls
lock
mov
jmp
push
jae
decl
jo
cmpl
outsb
shrb
sub
adc
addr16
repz
cli
push
incl
dec
nop
jle
adc
push
mov
aad
fadds
add
jmp
mul
inc
fcmovnb
pop
test
push
mulb
push
push
arpl
add
fucom
dec
and
in
add
into
sbb
gs
decl
xor
out
cmp
and
add
dec
out
out
mov
mov
repnz
loopne
gs
push
arpl
clc
mov
out
ss
jnp
and
and
cmpsw
scas
push
lahf
adc
rcr
fstpl
call
pop
movsb
inc
cmpsl
jne
xchg
imul
push
fsubrs
je
inc
mov
inc
je
leave
mov
xchg
repz
adc
loopne
aam
sbb
mov
add
fidivrl
mov
mov
mov
pop
and
ret
mov
dec
xor
xor
scas
mov
cmpsb
loope
pop
and
mov
ret
push
lret
inc
rol
nop
cmpsl
mov
fwait
adc
or
in
mov
into
jb
out
xchg
orl
jge
push
inc
pop
lods
test
cmp
loop
sbb
jl
dec
adc
lea
pop
add
push
xor
mov
ret
sub
jnp
mov
fidivl
mov
pop
push
ds
cwtl
inc
xchg
sub
mov
gs
add
gs
pop
imul
ljmp
int
xchg
fwait
ja
or
fdivr
int3
mov
sar
mov
div
arpl
mov
scas
jmp
fwait
aaa
movsl
jecxz
test
popl
pop
dec
aas
push
lahf
and
ds
jo
shlb
ds
out
inc
dec
rcrb
lds
pushf
leave
stc
out
pushf
dec
mov
pop
jno
in
mov
lret
jg
sbb
mov
lret
int
mov
and
add
push
xor
stc
fnstenv
add
dec
sbb
lea
rorb
out
sets
imulb
pushf
sbb
out
and
sbbl
push
sub
leave
push
cmpsl
lahf
mov
sahf
pushf
mov
ds
mov
jmp
or
jb
adc
jp
mov
subb
jle
xchg
jl
cmpsb
pop
xchg
ljmp
xchg
push
mov
into
jne
shlb
jmp
sub
loopne
lods
mov
aad
fimull
out
iret
sub
inc
inc
cmp
popa
jle
cmpsb
xor
push
mov
ds
cli
hlt
mov
test
test
inc
jp
add
stos
rorl
xchg
xor
sub
mov
movsb
imulb
shrl
rcrl
adc
push
mov
sub
mov
andb
adc
or
les
inc
lahf
call
orl
shr
scas
mov
repz
push
out
daa
leave
outsb
in
in
arpl
repnz
loop
cli
mov
dec
test
sbb
xchg
sti
mov
and
outsl
inc
and
lret
jecxz
shl
xchg
or
pop
push
xor
shlb
cmp
das
add
cmp
mov
popf
sahf
dec
adc
fnsave
xor
sbb
sub
push
ret
adc
mov
daa
sub
dec
lcall
pop
xorl
popa
enter
inc
jle
test
jno
test
les
jl
sbb
mov
sahf
clc
sahf
in
mov
cmp
iret
dec
cmp
add
dec
ljmp
pop
mov
sahf
inc
dec
inc
fiaddl
or
popf
loopne
pusha
outsb
stos
adc
jbe
aaa
jb
adc
mov
and
and
mov
push
adc
pop
cmp
imul
and
mov
leave
sti
and
or
loop
fsubl
jnp
in
cmp
sub
out
stc
xchg
xchg
sub
cmpsb
stc
rorb
fcmovnbe
xor
and
or
mov
bound
lcall
and
outsl
mov
mov
add
sub
jl
adc
cltd
pushf
out
jbe
mov
cmp
xchg
jo
mov
in
cmp
cmpsb
mov
sub
loop
cmp
mov
ds
pushf
inc
test
repz
mov
out
aad
int3
lock
rcrl
xchg
aam
in
push
dec
ss
mov
xor
jg
jns
arpl
mov
dec
fmuls
clc
jb
and
cltd
jno
jb
add
jb
push
imul
into
int
push
mov
and
sti
adcb
and
andl
sub
mov
pop
jmp
imull
push
cmc
std
scas
enter
sub
in
addr16
sub
clc
mov
js
sbb
mov
or
inc
or
insl
movsb
add
mov
xchg
dec
icebp
out
test
nop
push
jo
mov
or
in
inc
mov
iret
push
cwtl
xor
andb
lock
out
cmp
aaa
mov
adc
xor
jl
jg
loop
mov
cmp
push
sbb
sahf
popf
mov
or
mov
ret
add
cmp
nop
cmp
lods
jo
in
and
aas
add
mov
ds
add
hlt
cli
or
or
lahf
pop
fcmove
jp
int
push
dec
gs
out
loope
in
mov
and
and
shl
jl
mov
loopne
sub
pop
inc
nop
add
xchg
lea
aam
les
mov
jb
mov
mov
out
xchg
push
je
add
sti
sbb
ror
sbb
in
adc
bound
xchg
add
cld
scas
xlat
aad
mov
pushf
enter
stos
mov
pop
mov
jns
xor
aad
and
imul
sahf
sub
in
pop
movsb
mov
mov
and
dec
mov
mov
push
add
inc
fucomp
mov
and
insl
test
xor
stc
scas
test
fld
scas
stos
outsb
lret
addb
bound
adc
and
jb
xchg
pop
mov
outsb
adc
mov
mov
je
adc
iret
adc
xchg
jno
jmp
int
xorl
mov
sbb
dec
ud1
xor
std
xchg
fidivrs
pop
add
imul
lods
xor
jmp
test
ljmp
push
fs
sbb
push
jo
sbb
mov
sub
fldl
push
mov
subb
insb
jne
mov
sbb
xchg
dec
in
and
pop
push
dec
and
mov
out
pop
mov
add
inc
aad
cltd
push
mov
push
push
je
pop
xchg
mov
sbb
leave
rorb
mov
adc
xor
into
xor
mov
icebp
add
or
and
mov
je
pop
and
icebp
hlt
pop
xchg
mov
mov
fistpll
jmp
add
ljmp
pop
xchg
xchg
sbb
dec
xor
leave
pop
sbb
xor
std
inc
sub
sbb
mov
cmpsl
loope
stos
inc
notl
ficoml
jmp
ret
mov
out
aaa
lock
icebp
lcall
in
push
mov
aad
cli
jecxz
mov
lret
pop
sahf
xor
hlt
repz
and
jo
nop
pusha
cli
xchg
popa
xchg
xor
clc
cmp
subb
and
sub
in
pop
cltd
addr16
inc
pop
push
mov
add
rolb
pop
enter
add
add
adc
icebp
sub
lods
inc
lods
cltd
xlat
and
mov
mov
mov
jns
loopne
out
shlb
xchg
mov
dec
clc
iret
mov
cmp
xor
xor
mov
mov
add
push
jb
clc
add
xor
jp
sbb
test
movsl
fimuls
mov
mov
push
and
add
popf
mov
movsb
xchg
jmp
mov
push
scas
add
mov
mov
xor
mov
aam
lahf
pushf
into
jno
mov
mov
adc
xor
in
stos
mov
sub
dec
pop
cmp
sub
test
in
lcall
pop
xchg
add
push
cld
xor
push
or
in
xor
jae,pt
xchg
fs
mov
inc
pop
or
dec
fs
fimull
xor
enter
dec
xchg
xor
mov
cmp
and
lret
inc
mov
inc
push
xor
xor
arpl
aaa
cmp
mov
out
fwait
jmp
adc
fnstcw
iret
mov
jne
xchg
add
iret
pushf
gs
lcall
mov
icebp
pop
stc
ja
nop
add
ss
inc
bound
fldt
jae
jne
sub
inc
jns
mov
rclb
and
jp
in
xchg
add
clc
lds
lods
add
sub
arpl
aam
cld
xchg
jge
inc
sub
lods
das
mov
pop
sub
mov
and
jnp
imul
fistpl
cli
sub
fistl
mov
xlat
adc
cmpsb
and
inc
lds
loop
sub
add
sbb
push
adc
pop
loopne
and
cli
fisubrl
vaddsubps
loop
or
push
test
push
cmpsl
scas
mov
jge
cld
stos
sub
les
cmp
fldpi
inc
adc
inc
sarb
test
xchg
scas
cltd
out
jl
mov
loop
lods
or
in
inc
aad
lahf
daa
and
addr16
fiaddl
dec
in
cmc
jp
inc
or
or
cmc
xchg
rcll
fisubrl
inc
xlat
out
aam
cmp
jp
mov
push
imul
mov
out
loop
iret
es
mov
test
mov
fdivrl
xchg
in
xchg
outsl
sub
sbb
adc
mov
adc
pop
nop
orb
push
jns
imul
mov
xchg
out
pop
pop
pushf
cld
into
push
lea
cmp
inc
pusha
outsl
lods
xchg
loop
dec
pop
scas
jo
call
mov
cli
outsb
mov
scas
icebp
orl
dec
in
xlat
xor
inc
pop
es
push
dec
add
jp
lahf
sbb
je
xor
add
in
xchg
adc
in
or
mov
rorl
inc
lea
inc
ret
fistpl
jle
fwait
sbb
and
in
pop
add
push
outsb
out
push
mov
adc
inc
mov
bound
cmp
sbb
pop
push
pop
adc
loop
lea
out
std
cmc
mov
jbe
xchg
xchg
push
fildll
cli
pop
mov
adc
fildl
inc
push
mov
sub
mov
aas
enter
ret
xor
jle
adc
cmpsb
lock
test
jmp
jne
sbb
push
jns
pop
pusha
ja
data16
rorl
add
cld
sbb
inc
arpl
movsl
push
xchg
out
ds
fildl
push
es
pop
hlt
sahf
mov
sahf
scas
lcall
std
inc
ret
mov
cmpb
loopne
dec
push
andb
stos
mov
push
sub
sbb
push
shrb
jns
mov
push
shll
add
inc
push
mov
rclb
mov
inc
popf
sahf
push
fidivrs
roll
sub
add
xchg
add
mov
mov
es
mov
lods
insl
and
mov
incl
and
je
das
movsb
adc
push
mov
mov
xchg
fstps
in
popl
sahf
pop
add
mov
shrb
xchg
jns
push
push
mov
jns
mov
movsl
and
out
cmp
les
mov
sbb
leave
pop
xor
and
mov
mov
mov
lods
pop
fwait
rcll
xchg
rorl
adc
dec
xchg
mov
pop
mov
sub
dec
and
pop
ljmp
lret
jbe
cmc
nop
cli
cli
jne
jge
lea
mov
mov
int
or
test
je
jno
inc
sbb
imul
ret
fistpll
sbb
or
push
dec
popf
roll
and
shll
sti
dec
lock
mov
outsb
sbb
mov
sub
mov
push
cwtl
fistpl
fbld
add
pop
sub
mov
sub
stos
add
jnp
mov
insb
pop
and
or
pop
dec
pop
sub
lahf
ja
xchg
test
push
pop
fnstcw
int3
pop
sbb
int3
xor
fsubrs
fdivrs
scas
cmp
dec
cld
mov
xchg
cli
adc
mov
xor
jl
rolb
insl
stc
ljmp
jnp
sbb
add
push
orb
jb
and
in
push
adc
or
sub
gs
ret
dec
and
xor
dec
cmpsb
test
popa
xor
iret
pop
flds
popa
ret
sub
cmc
push
int
jg
adc
pop
cmp
jae
insl
repz
jg
pushf
cwtl
subl
jecxz
orb
mov
adc
sub
push
fcoms
and
mov
scas
push
lds
loopne
movsl
cld
imull
call
or
xor
pop
jl
sbb
daa
pop
rcl
insb
es
gs
inc
icebp
mov
dec
lcall
xor
xor
scas
test
xor
testl
and
bswap
out
sar
sbb
add
lret
cli
incl
fistl
orb
push
push
rcll
ret
aas
in
loopne
and
loopne
cli
ficomps
ror
stc
rorl
mov
pop
jno
jno
rclb
pushf
jae
nop
jne
xchg
dec
int
insb
jo
dec
mov
xor
ret
in
fwait
push
mov
mov
xchg
aad
adc
daa
and
stos
mov
pop
jns
out
leave
push
jb
inc
jns
inc
dec
adc
int3
cmp
fildll
jmp
push
pop
fcomps
repnz
divl
fistpll
imul
and
cmp
add
xchg
mov
rolb
inc
ret
icebp
push
push
cmc
std
mov
call
addr16
mov
rcr
adc
dec
mov
mov
jns
lahf
les
lds
sub
mov
pop
inc
mov
push
cmp
imul
jecxz
dec
aas
loope
int
dec
shrl
jo
es
call
pop
pop
loopne
cmp
or
adc
addr16
xor
dec
xor
jge
sahf
pop
icebp
sub
jo
xor
mov
mov
test
dec
push
mov
mov
jecxz
jne
xchg
pop
test
repnz
xlat
dec
test
ret
inc
or
cmp
cmp
pop
xchg
sbb
jae
fwait
and
push
repnz
sti
imul
aas
cmp
ds
mov
sbb
ljmp
es
mov
xchg
mov
jl
adc
jl
adc
mov
and
repnz
cwtl
fwait
fs
ficompl
popf
lahf
adc
rcll
test
xchg
lds
js
movsb
sbbl
mov
lret
xor
mov
push
sbb
loopne
mov
sbb
daa
out
xor
call
jns
mov
mov
in
hlt
orl
inc
rcrl
pop
iret
out
add
push
jb
or
adc
inc
js
pusha
pop
pop
xchg
sbb
mov
add
push
hlt
pushf
repz
data16
cmp
cmc
stos
out
xchg
mov
movsl
lret
imul
rcrb
scas
ret
inc
sahf
loopne
movsl
push
inc
push
pop
dec
xchg
frstor
and
icebp
inc
mov
dec
xor
jmp
ljmp
jmp
mov
mov
jl
dec
icebp
sbb
sub
shll
lods
mov
daa
dec
inc
jg
shll
sub
xchg
cmp
mov
test
inc
pop
xchg
pop
push
ja
mov
cmp
mov
shl
jae
cmpsb
movsb
push
fidivrs
xorb
add
lcall
sub
lods
mov
mov
pusha
cmp
daa
inc
cltd
mov
xchg
orb
dec
shl
mov
ss
mov
fsubrs
mov
iret
and
nop
push
call
mov
mov
pusha
and
add
enter
xchg
cltd
sbb
sub
in
mov
sub
int3
decl
mov
outsl
adc
negl
jecxz
add
dec
popa
jmp
inc
mov
mov
push
cli
adc
iret
aas
shrb
lods
jmp
test
add
push
jae
jmp
mov
inc
add
push
outsb
pop
cmp
roll
cwtl
pop
rclb
popa
jbe
sbb
nop
sbb
mov
std
mov
xor
data16
rcll
xor
nop
dec
inc
fiadds
cmp
inc
jns
rorb
test
jecxz
push
mov
in
scas
fs
xlat
dec
aam
pushf
jge
jg
jae
lfs
mov
dec
jmp
jo
lods
mov
das
rorl
jno
sbb
imul
adc
push
sahf
jno
gs
jl
push
pop
xchg
adc
adc
xchg
cmp
loopne
sub
push
lods
insb
mov
pop
mov
cmpsb
sub
lahf
mov
cmc
xchg
mov
incb
in
sbb
pop
fsubl
jp
or
fwait
insb
popf
push
add
push
and
arpl
fbstp
test
shrb
add
outsl
outsb
stc
xchg
test
sbb
mov
pusha
fs
jno
test
pop
xor
cli
pop
dec
jmp
push
into
mov
mov
pop
mov
pop
shr
loop
push
fisttps
pop
xchg
inc
xchg
roll
xchg
pop
sahf
popa
adc
shrb
sbb
xchg
fwait
ret
data16
sarl
outsb
pop
push
or
jno
push
fiadds
push
push
mov
lock
cmp
and
dec
sbb
cmp
mov
loope
popf
cmp
or
xor
mov
fs
and
push
hlt
hlt
sub
out
push
ljmp
pop
xchg
fisubrl
call
cmpsl
jg
xchg
sub
fmul
inc
xorb
cmp
outsl
mov
pop
push
mov
mov
lds
push
mov
std
jle
jo
addl
mov
jg
aaa
arpl
mov
fidivrs
xchg
sub
stc
rorl
aas
jbe
inc
adc
jmp
inc
add
nop
sub
dec
mov
sub
sub
mov
mov
sbb
sub
pushf
ret
cmp
dec
or
ljmp
jp
mov
iret
dec
and
xor
pop
hlt
mov
xchg
cli
imul
xchg
push
pop
lds
dec
out
mov
movsb
filds
mov
or
dec
jle
mov
adc
jg
in
movsb
push
dec
fisttpll
lock
or
jb
pop
cmpb
test
pusha
subl
cmp
mov
cmp
jbe
out
ja
icebp
lods
daa
mov
push
adc
sbb
dec
mov
jg
das
xchg
cmpl
jnp
push
sti
cmp
mov
inc
out
roll
cs
or
stc
xor
sbb
jmp
ljmp
iret
push
loopne
rclb
push
imul
sahf
pop
sub
jl
sti
sbb
mov
outsl
shl
adc
subl
push
ss
ja
lret
mov
imul
jne
mov
inc
int
jl
mov
clc
stc
mov
sti
inc
push
in
lahf
xchg
push
pop
pop
ret
mov
sub
outsl
or
loope
aaa
pop
or
out
rcrb
jecxz
and
xor
adcl
icebp
inc
fcomps
mov
dec
cmp
mov
pop
inc
cwtl
adc
dec
push
jns
push
int3
mov
cmp
cmp
or
inc
add
loopne
cmp
lds
xor
or
xorb
jge
icebp
or
or
outsl
scas
xchg
sahf
les
pop
mov
sbb
stos
pop
sahf
scas
cmpsb
sbb
das
filds
dec
jmp
cltd
add
lea
xchg
imul
int
sbb
jl
imul
aas
mov
sub
hlt
rol
xchg
imul
sbb
out
jl
idivl
int
pandn
lahf
into
mov
mov
sbb
pushf
and
cltd
mov
out
add
fstl
cmpsb
sbb
sbb
aad
and
pop
outsb
mov
fwait
xor
ja
shrb
push
flds
cmp
insl
jne
jecxz
sub
and
push
repz
xor
mov
mov
sub
roll
and
pop
jle
out
dec
sub
push
pop
arpl
pusha
cli
jbe
fistl
sar
sahf
stos
test
pop
pop
mov
fisubrs
sti
enter
pop
xor
adc
sarb
or
mov
outsb
pop
in
mov
jmp
aaa
test
mov
dec
jo
mov
mov
in
aaa
mov
insb
ja
push
addr16
test
xcrypt-ofb
cmpsl
jmp
push
adc
pop
ret
dec
ss
ja
inc
loop
xchg
inc
rcrb
sub
test
pop
inc
and
sahf
pusha
sub
or
xorl
add
jl
xchg
push
arpl
dec
scas
ret
mov
and
lldt
ljmp
xor
sbb
pop
fisubs
or
sarb
sahf
inc
push
mov
adc
pop
ljmp
sbb
push
scas
cld
fisttpll
das
insb
inc
or
and
leave
out
btc
mov
mov
add
sub
and
mov
mov
cld
sti
insb
mov
adc
pop
push
enter
mov
adc
jecxz
mov
push
outsl
fnstenv
add
aam
dec
jnp
and
ret
out
je
mov
out
xchg
xor
sub
clc
mov
jnp
sbb
shlb
std
jno
leave
movsl
loopne
pop
mov
mov
push
cmp
or
cltd
or
test
sub
lea
mov
add
pop
fsubrl
sahf
jne
fadd
push
lods
jp
outsb
push
pop
xchg
cmpsl
xchg
and
jns
mov
fcomps
mov
ja
lods
fstpl
xchg
test
movsl
xor
scas
and
xchg
cmpb
pushl
test
test
dec
outsb
add
cli
mov
shll
rcrb
add
ror
sub
aas
sub
xor
flds
out
xchg
sub
sti
pop
fcomi
dec
add
movsb
into
xchg
cltd
out
jle
sub
mov
aaa
and
das
addr16
xorl
andl
inc
inc
or
ja
mov
sbb
mov
lock
fstpt
adc
jl
inc
cmp
orl
push
pop
je
fcoms
push
push
cmp
mov
add
jg
hlt
lods
dec
aad
lock
mov
sub
int3
dec
imul
mov
ja
dec
xor
daa
icebp
lret
adc
inc
test
std
cli
mov
and
ljmp
lret
xchg
popf
and
mov
fisttpl
mov
and
test
add
push
mov
or
mov
fucomi
dec
inc
xchg
loope
inc
xchg
xorb
inc
mov
mov
loopne
mov
inc
jnp
sbb
mov
mov
sbb
fadds
push
movsb
outsb
pop
loopne
jecxz
inc
lds
sbb
xchg
or
push
inc
sbb
and
int
adcb
pop
sub
jns
dec
mov
xchg
nop
add
scas
dec
add
sbb
push
enter
xor
jne
mov
adc
sub
mov
std
sar
and
and
loopne
sub
adc
jno
push
pop
add
mull
mov
das
add
pop
call
push
add
xchg
loope
xchg
push
movsb
dec
cmp
xor
xchg
loop
pop
jecxz
jp
inc
push
dec
dec
shrb
dec
std
mov
fsubrs
mull
sub
xchg
xchg
mov
push
and
sub
outsl
shr
int3
inc
ss
sbb
mov
lcall
xor
xchg
jle
jns
pop
in
lea
out
and
fstp
pop
xchg
test
or
mov
jns
inc
es
stos
cwtl
in
cmp
xor
call
ret
test
in
jp
and
sbb
iret
gs
adc
popa
lahf
ret
xor
imul
cwtl
add
sub
inc
cmp
xlat
cmp
inc
and
pop
dec
inc
popa
pusha
or
mov
and
push
hlt
xchg
xchg
adc
int3
sahf
xchg
arpl
xor
adc
mov
fwait
lds
dec
shl
cwtl
pop
fnsave
mov
jnp
lds
jle,pt
addr16
pop
cvttps2pi
loope
dec
xchg
stc
and
mulb
sub
hlt
jp
push
adc
mov
adc
inc
ss
lcall
sti
das
push
push
rorb
sarb
lret
or
adc
sbb
sub
sub
lock
jg
data16
mov
into
sub
repz
ja
mov
int
out
sub
xchg
loopne
imul
inc
repnz
test
outsb
and
movsb
sub
push
fisubrl
adc
mov
push
sbb
sbb
add
in
scas
out
adc
lods
xlat
stc
or
loop
cmp
inc
test
aad
inc
xor
ss
cmp
sbb
inc
or
adc
xchg
iret
cmp
mov
int3
mov
push
mov
mov
and
hlt
mov
outsl
mov
mov
mov
mov
lock
add
xor
jo
in
push
insl
out
jge
ljmp
aam
cs
push
in
dec
repz
jb
jge
jne
pop
push
imulb
cs
shll
testl
movsb
movsl
repz
inc
and
mov
cmpsl
lret
sbb
jbe
cmp
inc
inc
xchg
cmpsl
add
mov
cld
mov
xchg
loopne
or
add
push
xor
and
jge
jecxz
pop
ret
fisubs
cmp
inc
jo
pminsw
pop
mov
int
jle
cmp
out
in
mov
sub
push
cmp
lea
daa
xchg
mov
cli
mov
gs
xchg
jl
jecxz
cmp
push
add
sahf
xchg
ljmp
icebp
nop
incb
dec
fcomps
icebp
adc
dec
ds
cmp
pop
jns
inc
mov
cmp
loop
dec
loop
popf
xor
mov
push
pop
rcll
mov
add
and
ljmp
pop
push
xchg
fwait
fwait
fs
cmp
fdivrl
call
inc
dec
roll
out
test
pushf
les
cltd
jb
mov
xorl
cmp
lods
mov
mov
cld
or
in
push
arpl
pop
push
jge
or
sub
mov
inc
fstps
outsb
pop
sub
adc
sbb
mov
add
shll
cmpxchg
dec
push
cltd
mov
clc
test
mov
hlt
jle
sahf
out
or
sub
popf
rol
cmp
lahf
insl
inc
inc
inc
push
jae
dec
pop
ret
mov
jb
or
sub
adc
adc
sbb
lret
lods
mov
into
adc
orb
in
fwait
add
test
js
mov
and
repnz
mov
cmp
jecxz
cmp
cmp
sbb
pop
js
mov
xchg
sbb
jnp
in
mov
int3
shr
mov
xor
jecxz
dec
cwtl
into
xor
mov
hlt
out
das
icebp
cmpb
xchg
sub
stc
sbb
into
sbb
dec
arpl
mov
sahf
adc
test
jnp
addr16
push
sub
movsl
jl
ss
mov
aaa
mov
xchg
pushf
icebp
test
mov
cmpsb
ret
xchg
insb
or
jne
and
dec
adc
mov
sub
cmp
sub
dec
sarl
sub
sahf
sub
sub
sahf
push
insb
push
mov
rorb
push
and
in
lret
je
in
cmp
cmp
jecxz
dec
xchg
arpl
andl
xor
mov
shrl
js
movsb
inc
inc
jae
pop
xchg
push
sub
xchg
sub
pushf
and
arpl
leave
dec
nop
mov
mov
fwait
inc
fimull
mov
sub
sub
xchg
rol
sbbb
loope
add
arpl
pop
into
sub
xorl
mov
stos
aaa
add
cmp
lea
push
xor
xor
jbe
cmpsl
std
fbld
xor
cmp
mov
gs
ds
inc
dec
cmp
insl
pusha
sbb
jle
imul
insl
out
inc
pop
inc
mov
dec
lret
jge
dec
or
data16
loope
cmp
fwait
add
shll
insl
mov
lret
jno
das
mov
stos
xchg
xchg
mov
lds
xor
imul
jg
sub
jbe
popw
xchg
dec
add
sbb
mov
sbb
lea
loope
pop
inc
cmp
sbb
nop
xchg
stc
push
xor
ret
cwtl
lahf
adc
adc
scas
add
adc
xor
cmp
xor
sbb
jnp
fcos
sahf
jne
pop
andb
cs
push
gs
jnp
cmpsb
out
pop
lds
test
mov
or
jge
cmc
subb
push
stc
push
xor
lea
fmuls
dec
add
out
dec
xchg
sub
cmp
dec
pop
jae
inc
or
stos
ss
dec
jns
xor
lahf
sti
and
test
lcall
inc
clc
push
jb
roll
cmp
dec
cmp
sub
addr16
insb
fisubl
andb
rcl
imul
aas
ljmp
dec
movb
out
out
loope
rcll
ffreep
jo
out
push
sub
adc
clc
jecxz
or
jge
fwait
lods
mov
clc
hlt
negl
fcompl
mov
and
jecxz
lcall
xchg
insb
jmp
mov
mov
push
or
aas
testl
inc
pop
sbb
mov
fstps
add
dec
dec
mov
mov
pop
js
jmp
push
outsl
lock
jle
andl
mov
pusha
push
movsl
sahf
fwait
in
int3
mov
lock
dec
shlb
add
push
xorb
in
stos
in
rorl
repz
dec
cmpsl
ja
call
movsl
or
enter
adc
xchg
clc
movsl
and
scas
cmp
pop
cmpb
mov
adc
add
cwtl
mov
cmpsb
in
movb
cmpsb
sub
pop
mov
mov
lea
jbe
insl
xor
sarl
cmpsb
dec
leave
testb
addl
push
sub
mov
into
das
pop
sbb
and
xchg
bound
outsb
jecxz
or
mov
push
xchg
sub
ret
dec
pop
xchg
add
lret
xchg
add
jge
popf
mov
pop
div
mov
push
jae
rcll
xlat
push
inc
push
inc
jnp
add
xchg
mov
pop
inc
add
push
testl
dec
mov
insb
cmp
jp
xor
xchg
aaa
mov
sti
mov
mov
and
ds
icebp
imul
jl
ret
out
xchg
cld
shl
xchg
bound
lahf
mov
jae
mov
cmp
sub
lret
fmulp
repz
addr16
push
push
fwait
js
call
leave
jne
cli
shr
cmpsl
jno
inc
les
lcall
jo
call
mov
pop
mov
inc
xlat
jno
or
fildll
je
in
push
repz
mov
push
out
and
loopne
test
cmp
mov
arpl
and
push
mov
ficompl
cwtl
loope
cld
lods
sub
adc
xchg
idiv
sub
sbb
add
movsl
aas
out
aam
dec
mov
jbe
ljmp
idivb
xor
mov
xchg
rcr
sub
aad
js
enter
test
stos
rcll
je
add
cmc
pop
psadbw
dec
aas
jmp
sbb
stos
pop
xchg
ja
cmp
insb
jns
pop
cmp
test
or
stc
pop
div
sub
out
and
or
jae
mov
push
push
mov
jne
mov
negl
xchg
and
es
mov
mov
out
pop
in
int3
out
call
insb
sub
fcoml
adc
jl
inc
mov
sub
xlat
movsl
cmc
ds
mov
hlt
adc
lahf
adc
aaa
std
popa
xor
add
fsubrl
cmp
cmp
punpcklwd
jl
call
out
scas
scas
mov
sub
imull
mov
pop
cmp
test
leave
jne
repnz
in
adc
fidivrs
mov
xchg
xor
addl
inc
inc
push
xchg
pop
mov
js
mov
mov
dec
sub
add
inc
pop
jae
ljmp
iret
loop
stos
xor
add
lock
xchg
and
call
mov
cltd
lock
popf
sbb
fs
out
cli
add
rcl
test
dec
inc
mov
inc
js
pop
sbb
mov
inc
std
dec
popa
sub
jmp
in
xchg
lahf
scas
jns
mov
fdivl
jp
call
jmp
jne
mov
xorb
iret
lods
repnz
scas
adc
adc
mov
aad
adc
pusha
push
aad
lods
jl
mov
mov
sub
mov
cmp
xor
xor
idiv
ja
or
in
aaa
jnp
cmpsb
rclb
ret
test
sbb
in
out
fwait
pop
sarl
lock
ds
test
lret
mov
inc
call
add
jnp
and
fisttpll
sbb
dec
and
aam
inc
add
bound
int
jbe
inc
in
or
fisttpl
faddl
rorl
fcmovne
sbb
inc
in
pop
aaa
repz
jno
cmp
mov
push
ds
adc
push
and
push
outsl
and
and
xor
pop
fdivl
pop
ljmp
jmp
or
jae
xor
xchg
sbb
add
mov
pop
mov
adc
inc
sbb
mov
out
sub
lods
mov
xor
shl
pop
add
xchg
call
out
mov
dec
imul
jb
les
cmpb
sub
cmp
mov
dec
push
inc
lds
aaa
cs
int
fstps
je
jb
sbb
pop
outsl
jno
mov
call
mov
mov
pop
test
sbb
pop
insl
fistps
or
sti
mov
dec
sbb
mov
subb
ja
popf
sub
insl
stos
imul
adc
lock
cwtl
sub
push
mov
mov
or
jl
jle
adc
sub
xor
add
in
inc
ljmp
pop
stc
insl
jmp
rcrl
sbb
dec
push
sbb
inc
subb
jbe
inc
and
mul
or
test
and
fs
pushf
and
jecxz
jno
push
ss
push
mov
loopne
cli
sbbl
aam
inc
jecxz
sar
std
inc
subl
cmp
push
scas
lret
and
mov
stos
cmp
xchg
scas
leave
or
mov
pop
mov
cmp
faddl
mov
hlt
jne
aad
sub
add
xor
adc
add
in
dec
push
pop
push
inc
or
js
mov
cmpsl
das
sub
sti
or
ficomps
dec
or
in
cmp
lcall
das
jecxz
pop
leave
adc
lret
ja
icebp
inc
cmp
cmp
xchg
mov
popf
sub
inc
inc
adc
mov
sub
mov
loop
push
xor
sar
push
loope
fildl
and
jg
sbb
imul
shll
fisttpl
mov
ficomps
lds
stos
cmp
imulb
add
fimull
cmp
icebp
pop
cmp
scas
mov
pop
fildl
in
into
mov
es
inc
mov
mov
push
adc
push
fsubs
ljmp
xlat
xchg
add
or
add
call
shrb
addr16
mov
add
in
int
outsl
test
adc
and
jmp
dec
int
ficompl
push
ret
pop
cmc
ss
je
or
pop
movsb
push
jo
je
stc
shrl
pop
fistpl
in
cmp
mov
cmp
xor
ljmp
mov
je
add
test
xchg
pop
xor
sahf
xor
incl
sub
dec
mov
xlat
cmp
out
arpl
nop
jge
out
mov
mov
dec
adc
jl
jae
push
loope
xor
mov
xchg
push
push
jns
push
xlat
inc
adc
shll
jmp
test
imul
fildl
ss
mov
push
xor
cmpsb
gs
test
lcall
sub
pop
cld
add
mov
repz
push
mov
ficompl
mov
sti
adc
and
ret
decb
xchg
insb
or
lods
mov
mov
jnp
mov
outsl
lods
xor
stos
xor
jae
push
sbb
iret
loope
adc
pusha
arpl
and
stos
cmc
in
sarb
pop
push
call
xchg
xlat
lock
out
add
test
nop
lods
stc
sbb
cmp
and
popf
cmp
scas
or
pop
scas
int
pop
push
enter
daa
lret
jne
iret
pop
in
cmp
add
xlat
test
add
flds
flds
ljmp
push
jmp
xchg
adc
pop
cld
rcrl
pop
dec
data16
mov
rclb
sub
repnz
repnz
lds
out
xchg
sti
lods
andl
movl
cld
mov
xchg
push
cmp
push
imul
inc
jb
and
das
or
call
xchg
dec
fdivrs
sub
mov
cmpsl
ja
mov
sub
fcomps
leave
jno
mov
repz
in
mov
mov
mov
out
add
dec
jg
sbb
test
lahf
call
sbb
inc
call
lahf
push
es
std
jge
imul
out
push
pop
add
and
sbb
or
lods
lret
sub
les
loopne
int3
sub
pusha
adc
das
mov
lds
mov
inc
push
adc
add
call
dec
shlb
notb
cmp
mov
cmc
dec
mov
cmpb
sbb
repnz
jl
sub
push
in
mov
cmpsb
test
in
inc
rcrb
xchg
fbstp
add
xor
jnp
int
push
push
xchg
fwait
pop
push
xchg
cli
andb
aas
in
jo
rorl
sbb
movsl
adc
inc
rcrl
push
aad
jnp
dec
fs
mov
cmp
insb
jg
sbb
daa
mov
pop
into
es
inc
cmp
call
xchg
push
int
sub
or
add
mov
mov
in
fnsave
jg
dec
insl
fsubl
xor
xchg
adc
and
jp
leave
or
dec
sbb
jmp
insl
xchg
insl
leave
lods
add
add
roll
push
jo
mov
es
scas
or
es
clc
pop
mov
stos
xchg
jl
stos
scas
inc
push
out
pop
pop
and
test
lret
jno
sbb
add
les
or
pop
repz
mov
and
nop
incl
int3
jg
in
push
push
xchg
push
jge
fiadds
push
repz
insb
add
test
aaa
ljmp
arpl
pop
fldt
push
mov
pop
insl
cmpsl
inc
inc
adc
dec
xchg
and
inc
aad
adc
push
in
xchg
jbe
sub
adc
mov
rolb
int3
adc
test
mov
sub
test
mov
cmp
scas
and
sbb
outsl
push
pushl
ror
adc
adc
mov
jle
jl
test
lods
loopne
add
jg
xor
inc
push
sbb
fcomps
jmp
sub
push
int
push
inc
loopne
dec
or
adc
repnz
xchg
bswap
cmp
outsb
push
arpl
mov
and
repnz
sti
fwait
es
pop
out
std
frstor
sahf
cmp
or
shlb
or
notl
push
mov
pop
mov
push
or
jle
decb
notb
mov
add
add
das
testb
repnz
loop
scas
ret
ret
daa
pusha
pop
push
mov
daa
cltd
aam
mov
mov
sahf
xchg
popf
push
mov
es
sub
sbb
es
addr16
mov
xchg
xor
mov
sbb
mov
and
jl
std
push
push
cli
mov
adc
xor
cli
addr16
adc
and
in
or
out
sbb
sub
lods
icebp
xchg
xchg
sti
vcvttps2dq
shlb
push
pop
mov
cwtl
add
jge
in
stos
jnp
or
cmpsl
pop
jb
and
push
pop
ss
orl
popf
ljmp
jle
or
xchg
add
lea
mov
incb
jp
les
fcomp
xor
addr16
and
fidivl
ljmp
mov
aad
jecxz
fwait
pushf
xchg
gs
movsb
test
xor
loopne
pushf
jnp
sub
mov
push
loope
push
popa
jmp
jo
mov
test
repnz
scas
inc
add
scas
idivb
pushf
pushf
bound
jmp
and
xor
or
jecxz
ret
fidivs
shl
incb
sub
pop
push
stc
sub
lods
lahf
divl
cmp
xor
ds
inc
push
icebp
or
leave
in
dec
push
push
lcall
insb
mov
mov
adc
mov
cltd
les
bound
or
push
mov
sbb
mov
pop
and
mov
xchg
pusha
sub
sub
dec
dec
mov
adc
add
pushf
dec
sbb
movsb
cltd
cs
xlat
in
daa
outsb
adc
push
dec
xchg
mov
cmp
dec
sbb
test
mov
lret
in
shl
sub
inc
jl
lock
aas
cmpb
test
in
ljmp
cmpsl
or
das
sbb
lret
dec
sarb
adc
jb
outsl
sub
jp
test
addl
loope
mov
nop
das
dec
lcall
fbstp
iret
jl
pop
das
add
std
outsb
addr16
and
clc
jno
addr16
mov
mov
dec
iret
jg
xor
iret
jmp
sbb
or
fs
pop
jmp
mov
shll
int3
addr16
inc
push
lret
and
rol
jge
aam
pop
fnstenv
data16
jge
jge
shll
iret
out
inc
push
test
xlat
rorl
cmpsl
push
dec
aam
sti
sti
sub
bound
ret
clc
jge
cld
add
cmp
mov
jae
jecxz
sbb
pushf
test
ss
sti
dec
loope
mov
push
jmp
dec
pop
cltd
fisttps
mov
jge
icebp
fstps
in
repz
push
cmp
icebp
and
lock
add
ljmp
gs
outsl
adc
or
jg
aam
push
aaa
push
pop
add
cltd
or
ret
imull
in
mov
shrl
push
insb
mov
mov
mov
add
cmc
pop
inc
pusha
ss
loope
in
lods
les
lahf
adc
scas
cmpsb
dec
cmpsb
inc
sbbb
ret
sub
shlb
rolb
jnp
icebp
jno
cwtl
ret
adc
pop
clc
shrb
jle
fcompl
jl
push
dec
mov
fdivl
mov
cmp
movsb
loopne
incl
cmp
inc
push
outsl
inc
mov
xchg
mov
mov
mulb
sbb
cmpsb
xchg
adcb
xlat
inc
outsb
xchg
pop
dec
pop
pusha
adc
fcoms
icebp
pop
dec
xor
mov
push
iret
fcompl
lock
xchg
jnp
cmc
leave
frstor
jbe
push
sub
jo
vaddsubpd
arpl
pushf
fs
mov
mov
cmp
arpl
in
icebp
sub
or
sub
pop
xchg
lcall
xor
stc
sbb
jecxz
lds
rcll
jns
popa
outsl
push
lock
sti
mov
sub
push
mov
std
add
add
test
cmp
int
cmp
dec
sbb
inc
xchg
push
jg
jae
decl
jae
fidivrs
sbb
add
mov
das
or
test
shl
dec
fwait
cvtps2pi
jo
test
movsl
mov
dec
pop
pop
mov
dec
push
sti
imul
fimull
test
pop
cmp
mov
adc
insl
xor
in
test
adc
icebp
mov
test
mov
es
aas
mov
pop
pop
lea
cmp
das
jbe
in
test
adc
sub
jbe
ja
adc
not
fstl
xor
mov
sbb
popa
out
sub
inc
cmc
test
clc
push
les
and
inc
movsl
insl
inc
dec
shll
in
sahf
fistps
fcmovnu
push
mov
push
test
inc
mov
mov
adc
sbb
inc
or
xorb
lret
out
jecxz
pusha
ret
pop
inc
cmp
mov
xor
loope
xchg
ret
ret
clc
sahf
sahf
jle
mov
nop
out
fstps
bound
and
ja
and
mov
jl
mov
bnd
mov
pop
xchg
lahf
xchg
orl
inc
push
stc
test
inc
sub
add
push
loope
fcoml
test
pop
mov
and
lcall
data16
test
inc
pop
in
and
fstp
or
jno
cmp
std
push
aam
les
dec
xor
push
dec
fstl
jbe
xchg
daa
sub
xlat
mov
dec
rcr
xchg
stc
and
xor
mov
into
dec
bound
repz
lcall
xor
xor
mov
cmp
and
cltd
mov
mov
out
movsb
insb
push
mov
push
or
jmp
pop
popf
mul
cltd
mov
adc
mov
clc
aas
nop
cmpl
cltd
jp
das
mov
mov
std
arpl
sub
mov
cmpsl
daa
scas
fiaddl
dec
loopne
scas
sbb
push
adc
stos
pop
lcall
pusha
pop
cs
mov
fs
ret
loop
sbb
jne
mov
jle
fsubrl
jns
incb
xchg
test
xorb
ds
dec
mov
or
pop
test
and
stos
jb
xchg
mov
pusha
fildl
cli
sbb
mov
aam
bound
flds
mov
aad
out
cmpsb
in
outsb
pop
push
subl
push
dec
nop
cmp
adc
loope
sub
pop
inc
dec
jp
ss
insl
xchg
mov
in
mov
push
mov
pop
fidivrs
frstor
xchg
jle
int3
fs
lcall
pop
loope
lods
ficoms
jl
sbb
xor
pop
out
decl
jmp
and
rolb
push
imul
mov
push
inc
clc
inc
aas
push
mov
ud2
int3
icebp
lcall
imul
lods
push
pop
xor
pop
mov
mov
jge
inc
xchg
xchg
insl
arpl
fnstenv
je
xor
ja
andb
mov
push
rorl
cmp
sub
add
testb
pop
jmp
insb
stos
pop
lds
imul
sbb
and
fs
cmp
mull
idivb
lea
sahf
gs
cltd
push
adc
push
push
ljmp
mov
inc
test
lds
idivl
pop
and
jae
cmp
cmp
push
ficompl
push
mov
dec
mov
add
in
xchg
add
pop
adc
test
fxtract
in
xchg
lea
push
mov
in
loopne
cld
mov
es
push
arpl
jns
or
outsb
int
mov
mov
push
sbbl
mov
dec
xor
ret
jae
sub
scas
outsl
mov
xchg
mov
cltd
add
cmp
xor
les
test
dec
neg
xor
and
pop
arpl
jno
mov
dec
gs
out
fstpl
mov
add
addr16
dec
adc
jp
fwait
je
pop
test
repz
pop
clc
loope
pop
push
lea
mov
push
xchg
xor
and
adcl
pop
pop
in
imul
jmp
dec
and
vmovd
jae
mov
gs
dec
das
pop
les
outsb
jmp
cmpsl
lods
fs
call
in
adc
sbb
sti
lcall
adc
dec
lea
es
and
rcrb
push
adc
sub
mov
pop
clc
or
push
mov
cmp
mov
xchg
jb
and
aam
pop
mov
mov
xor
imul
clc
xor
ljmp
ja
out
test
push
add
icebp
sbb
cmp
sub
xor
arpl
lret
repz
fadd
repnz
pop
sub
ljmp
jle
sbb
hlt
sbb
pop
lret
sub
mov
xchg
add
scas
repnz
aaa
lcall
aad
xor
cmp
cld
int3
inc
or
movsl
out
lods
fidivl
faddl
pop
and
adc
jbe
pusha
push
pop
movsl
fsubl
stos
mov
xchg
pop
adc
rorb
shrb
test
out
inc
movsl
cmp
outsb
test
orb
dec
cmp
lcall
dec
stos
and
frstor
pop
dec
test
mov
ds
dec
mov
inc
cmc
ss
jne
adc
add
fcomps
ljmp
fwait
or
into
push
scas
xlat
shr
dec
add
lcall
sti
in
add
das
push
inc
xor
sub
or
xchg
popf
pop
repz
popa
sub
sbb
xor
inc
xor
sbb
push
push
or
or
test
add
imul
pop
and
mov
data16
fcmovb
jbe
aaa
pop
into
push
mov
and
clc
jge
test
sti
add
mov
mov
out
cld
in
sti
jp
push
loopne
mov
mov
push
cmp
adc
cmpsl
stc
xlat
inc
mov
mov
mov
icebp
nop
pop
outsl
and
mov
pop
xlat
jbe
and
fnsave
pop
push
xchg
es
push
push
cmc
mov
mov
sub
sub
in
into
jl
fwait
mov
je
lcall
xchg
fldcw
dec
xchg
mov
push
sub
std
les
mov
jp
adc
mov
and
lahf
lret
dec
mov
mov
pop
sub
test
roll
dec
mov
pop
aam
fldcw
gs
pop
lods
std
test
xchg
jo
insl
cli
fistpl
sbb
inc
and
mov
jo
inc
js
push
fisubrs
mov
mov
push
pusha
push
add
jg
data16
fiaddl
add
bound
inc
subb
cmpsb
push
add
cmp
sub
addr16
mov
popa
cld
int3
xor
xchg
mov
pusha
out
or
enter
mov
lods
jb
test
xor
pop
sbb
mov
adc
rolb
adc
lds
scas
mov
jmp
mov
sbb
faddl
and
fisubs
addb
dec
repnz
pop
dec
pop
lds
in
xchg
pop
push
loop
lds
rcrl
divl
push
push
lahf
adc
mov
scas
jo
inc
imul
mov
call
mov
mov
aas
lods
jge
dec
and
push
daa
out
stos
sub
imul
fists
add
inc
mov
mov
ja
rorl
pop
jl
xor
xlat
or
sub
into
adc
jmp
mov
mov
xchg
add
or
stos
jnp
inc
push
stc
lahf
dec
inc
bound
jno
ret
call
sub
addl
sub
les
mov
add
and
fnstsw
cmp
and
iret
dec
xchg
xchg
adc
loop
xchg
mov
dec
std
pop
add
mov
mov
jo
or
push
mov
pop
bound
push
aaa
inc
orl
mov
pop
and
in
push
cmpsl
mov
mov
push
or
mov
out
inc
or
add
es
dec
and
jp
xor
pop
enter
adc
lock
xor
mov
add
into
lds
or
jge
add
push
leave
mov
add
mov
push
cmc
in
loope
mov
das
jge
jmp
aam
ljmp
mov
sbb
pop
call
je
insb
loopne
std
mov
adc
mov
jbe
ja
fiaddl
sub
xchg
inc
gs
adc
fwait
jb
hlt
popf
test
jp
xchg
xchg
dec
push
cmc
lods
lret
movb
movb
into
adc
or
adc
loopne
repnz
add
lds
adc
jnp
xchg
lret
jp
sar
in
inc
mulb
jb
cmpsl
lret
jbe
jmp
dec
push
push
xor
xlat
shlb
clc
sahf
mov
inc
test
mov
jp
mov
sbb
add
clc
mov
ret
mov
in
xor
fnstcw
xor
les
in
cmpsb
loope
arpl
xor
and
sbb
insb
inc
cmpsl
pushf
mov
push
sub
or
test
and
cmc
nop
sarl
test
faddl
mov
mov
lods
mov
cli
sahf
in
hlt
lret
inc
xchg
pop
xchg
nop
sub
jbe
ja
mov
and
aas
adc
jg
or
ret
push
dec
sbb
call
popf
push
testb
jg
shlb
xor
adc
or
xchg
and
stc
push
or
loopne
xorl
jbe
cmp
aas
loope
xorl
pusha
jmp
lea
lret
jae
scas
data16
mov
rcrb
mov
cmpsl
hlt
mov
sub
mov
pop
lcall
mov
xor
test
shrd
xor
jne
dec
adc
mov
or
ss
add
mov
inc
add
rol
pop
fildl
pop
popf
lahf
push
sbb
inc
mov
xchg
aad
ffree
mov
out
jmp
xor
xlat
inc
mov
cltd
stos
sbb
mov
adc
xor
ss
cmp
sbb
push
adc
in
sub
pop
cmpsl
rorb
stc
lds
mov
movsb
add
push
sbb
xchg
pop
adc
mov
lods
push
cmpsb
lahf
lret
jge
pop
daa
xor
inc
lret
adc
xor
inc
fcmovbe
jbe
add
jo
out
adc
cltd
addr16
lods
imul
ljmp
dec
sarb
sbb
add
mov
jge
adc
cmp
cmp
fidivs
jecxz
aad
adcb
adcb
imull
sbb
xchg
hlt
mov
lcall
cmp
lds
adc
pusha
mov
ljmp
call
pop
daa
out
xlat
and
cmp
mov
mov
pop
hlt
loop
neg
mov
cwtl
scas
into
mov
push
sbb
inc
mov
daa
test
dec
mov
movsb
dec
rcrl
insb
les
cwtl
jp
mov
hlt
xchg
sbb
fsubrl
imul
cmc
sbb
in
mov
push
cld
inc
jecxz
stc
push
fucomip
sti
shrb
inc
add
lea
outsl
imul
and
xor
mov
dec
push
inc
ljmp
sti
test
insb
mov
sbb
or
cmp
adc
jg
outsl
cmp
push
lock
orb
outsl
or
incl
mov
add
lret
mov
push
repnz
dec
shlb
lds
movsl
ret
adc
scas
aaa
pusha
mov
mov
mov
pop
in
bound
lcall
cmp
outsb
cld
jmp
loop
lret
jg
cs
pop
or
roll
mov
add
mov
pusha
insl
sub
inc
je
pushf
icebp
ret
fistpll
or
mov
stos
call
push
pop
iret
cmp
xor
into
push
into
in
pop
pop
fsubs
setg
loopne
jle
cmp
inc
dec
mov
xor
scas
sbb
sub
xor
jle
push
sub
sbb
repnz
in
and
aam
rcll
and
shr
sub
mov
pop
push
ret
sbbl
jne
out
outsl
imul
sbb
sbb
adc
negb
shlb
out
inc
loopne
mov
and
add
xor
mov
adc
cs
bound
and
mov
push
jb
aas
inc
xchg
shll
add
fildll
jno
mov
sbb
scas
push
stc
nop
in
in
pop
je
pop
out
js
xor
adc
adcb
orb
adc
sub
mov
outsb
adc
push
jns
dec
xchg
xchg
test
pop
fsubs
or
orl
mov
jmp
or
cmpsb
pushf
ljmp
cltd
loopne
jbe
outsb
dec
xor
push
les
popf
les
insb
dec
pop
loop
adcl
fsubrs
lock
lods
adc
je
sbb
sbbl
ljmp
adc
scas
push
dec
rcrb
sbb
cmp
cld
sub
call
ret
loop
fwait
lods
cmp
shr
jb
push
stc
popf
add
insb
pop
int3
dec
cltd
xor
ret
nop
in
push
inc
push
test
lock
and
jge
cmp
xchg
nop
push
icebp
jge
fwait
adc
cmp
mov
or
lret
push
paddq
lea
arpl
ret
cmp
dec
push
push
jl
rcrb
pop
les
dec
jge
out
mov
dec
fs
rorl
js
jb
inc
mov
cs
or
nop
stc
cmp
mov
cmpsl
jp
test
cmp
filds
outsb
sete
cmpsl
in
mov
pop
pop
sbb
leave
lea
sti
insl
lcall
iret
ja
mov
mov
push
push
pop
pop
cmp
push
adc
mov
push
mov
sub
sbb
sbb
push
fisttps
xchg
mov
nop
jb
in
pop
mov
in
stc
inc
aam
rcr
scas
loop
xchg
insb
scas
lock
inc
jo
push
lea
notb
out
pop
arpl
adc
inc
xor
sub
das
xorb
jo
sub
repz
cmp
jb
lahf
or
mov
shlb
jne
xchg
sbb
and
xchg
mov
cmp
mov
or
push
dec
and
rclb
or
gs
cmp
cwtl
xchg
mov
jnp
cmp
pop
inc
pop
dec
pop
addr16
jge
pusha
bsf
add
xor
jmp
lret
push
movsl
arpl
lret
icebp
stos
jno
aas
add
stos
fs
xor
inc
aam
stos
in
in
aam
cwtl
sbb
dec
or
mov
jmp
mov
gs
sti
mov
sub
les
aas
fildl
stos
mov
lahf
test
jns
bound
movsl
xor
or
mov
sbb
push
mov
xchg
sbb
int3
xchg
lds
add
repnz
jl
mov
add
rcl
ret
and
das
mov
rclb
outsb
push
rcrb
dec
mov
mov
add
aam
imul
in
mov
std
mov
std
push
outsl
add
aas
lret
rcrl
sbbl
mull
inc
lret
lods
bound
sti
loopne
lods
cltd
inc
cmp
adc
aas
xchg
or
lock
pop
call
add
dec
mov
dec
jle
nop
in
dec
popa
lock
loopne
js
leave
fbld
xchg
jecxz
or
test
jns
jge
enter
stc
inc
and
sub
pop
sbb
pop
pop
enter
mov
jle
and
jnp
cmp
adc
cmc
out
ret
iret
in
xor
xorb
lods
push
out
das
daa
cmp
ret
fldt
pop
jecxz
push
cli
movsb
pop
das
sub
sbb
mov
adc
cwtl
jno
adc
jbe
aam
xchg
jecxz
js
pop
push
jno
mov
mov
cmp
mov
dec
mov
mov
in
outsl
jnp
sub
roll
nop
in
dec
cmp
and
inc
push
and
cmp
jmp
cmp
mov
sbb
cmpsl
aaa
or
or
jo
stc
ljmp
call
add
pop
nop
jge
loop
imull
add
je
ljmp
adc
out
sbb
js
ss
stc
push
fidivl
mov
mov
adc
mov
jge
aas
ret
adc
stos
pusha
movsl
ret
leave
jle
jge
stos
push
out
jge
jno
es
sbbl
enter
and
mov
fcoml
jge
cmc
pop
cld
enter
dec
pop
sahf
push
aam
repz
incb
mov
cmp
lock
aam
outsb
mov
push
push
push
mov
imul
mov
jge
lret
std
xchg
ss
or
xchg
outsb
sbb
add
loope
mov
mov
push
shl
clc
mov
push
lret
iret
subb
pop
es
movsl
fldcw
push
mov
cmp
cmp
cltd
pop
xchg
add
cmp
js
sub
xchg
xor
adc
jo
and
dec
loopne
mov
in
pop
jg
pop
sbbl
insl
jb
repz
aaa
das
scas
mov
inc
aas
xorb
add
dec
subl
popf
mov
sarb
test
int3
jb
outsb
jne
in
imul
push
and
or
and
ficoms
orb
xchg
xor
xchg
testb
jl
sbb
arpl
push
inc
and
movsb
jp
adc
xchg
xchg
pop
lds
lahf
push
xor
and
repz
fsubs
inc
scas
int
cmc
stos
ret
gs
lahf
loope
inc
pop
sbb
push
rcr
or
xor
mov
mov
inc
out
or
push
pop
lret
je
cmpsb
arpl
hlt
and
and
lods
inc
adc
dec
xor
push
mov
pop
jnp
cltd
push
insl
jae
xchg
mov
jnp
xor
pushf
pop
call
inc
push
fildll
jl
xor
push
inc
mov
push
icebp
test
inc
inc
outsl
popf
das
adcb
pop
jmp
cmp
shll
push
fstl
mov
cmpsl
mov
fs
dec
push
imul
pop
xchg
fdivl
mov
out
dec
cmp
push
add
outsb
and
int
or
pop
sti
popf
cld
in
push
imul
or
or
aad
adc
cwtl
ror
xchg
in
or
addr16
sbb
orl
scas
cld
sbb
cmp
xchg
inc
push
jo
fsubl
icebp
cmp
inc
xor
subb
pop
mov
push
jge
jle
das
fmuls
fwait
push
mov
pop
or
add
push
movsl
cmpb
in
push
jl
ds
stos
inc
stos
cmpsb
mov
xor
inc
aam
sub
xchg
inc
int
cmp
ret
inc
jne
pop
or
mov
ds
fidivrs
mov
fs
test
test
cs
dec
add
loop
cli
mov
sub
mov
icebp
sarl
adc
in
inc
lret
push
popa
push
adc
fwait
mov
lret
dec
nop
jl
out
mov
daa
push
pop
push
sbbb
out
mov
sub
out
scas
inc
dec
repz
cmp
cmp
mov
pop
into
xchg
sub
pop
out
pop
xor
push
xor
dec
fld
test
inc
cmp
mov
pusha
pop
outsl
pop
or
lea
mov
mov
cmp
insl
push
jnp
loop
mov
sub
sbb
insl
xchg
sar
outsb
in
test
es
or
aas
mov
nop
out
mov
jg
dec
enter
test
xor
popa
mov
jmp
or
arpl
lods
dec
jl
not
jb
xchg
adc
or
hlt
pop
fnstenv
or
xor
jg
inc
mov
and
into
cmp
mov
mov
js
cmc
sahf
pop
es
mov
cmpsb
bnd
ja
and
xchg
inc
frstor
lcall
mov
xchg
or
jp
mov
enter
pop
push
xor
or
andl
jns
cmc
loope
cs
adc
daa
lcall
stos
mov
pop
insb
dec
push
push
and
and
call
loop
mov
movsl
rcrl
ret
iret
aad
movsb
mov
call
jecxz
sub
push
shll
add
les
add
testb
js
sbb
loopne
push
add
aam
ljmp
mov
sub
pop
pop
mov
idivl
cwtl
aaa
sbb
add
pop
ja
cmp
lods
xchg
test
notb
clc
mov
mov
pusha
ficompl
xlat
pop
cmpsl
adc
data16
das
inc
leave
sti
sub
ja
dec
mov
jp
aad
mov
data16
das
cmpsb
pop
mov
repz
adc
xchg
mov
mov
divl
fs
popf
inc
cs
jecxz
xor
notb
and
pop
sub
mov
sub
stos
xchg
pop
je
mov
sbb
jns
push
cmp
in
and
pop
es
cmp
xchg
decb
dec
lret
cmp
xor
push
adc
add
test
cmpsb
adc
push
rcl
imul
cld
dec
daa
xlat
xchg
stos
add
add
inc
sub
sub
cmpl
push
popw
sub
jmp
aad
ret
fsubl
in
mov
xchg
insb
shrb
test
pop
pop
cmp
adc
sahf
mov
hlt
repnz
xchg
adc
push
and
inc
jne
cmc
fildl
lret
adc
xchg
flds
jo
addr16
pop
sub
adc
jge
push
cmp
leave
pop
xor
jnp
cmpl
xorb
loop,pn
stos
in
hlt
fidivl
fmul
and
call
roll
test
pop
addr16
std
fdivrp
mov
lret
shrl
js
mov
or
fld
pop
fcmove
push
in
popa
cmpb
jp
sahf
arpl
shll
dec
in
push
jae
add
add
and
push
adc
inc
push
xchg
call
or
test
pop
inc
das
loop
push
xor
xchg
sub
xchg
add
stos
cmp
mov
aas
and
adc
jne
sub
pop
jmp
mov
or
test
dec
jmp
sub
shll
mov
ljmp
out
mov
dec
push
mov
jl
int3
push
dec
add
sti
jae
dec
fistps
cld
xor
add
les
sbb
cmp
sar
in
xorb
call
stc
mov
jns
jp
sub
adc
in
stc
xchg
int3
call
xchg
jmp
mov
rol
out
pop
xchg
jg
repz
inc
lods
or
out
mov
cltd
in
or
mov
pop
sbb
xchg
shrb
movsb
push
jp
pop
aad
arpl
sarb
js
stc
and
pusha
jmp
jne
xchg
mov
jmp
inc
outsl
xor
jbe
jl
idiv
dec
push
stos
dec
cmpsb
add
test
or
sbb
cmp
inc
nop
rorb
xor
out
mov
jno
cmp
fists
dec
mov
orb
jmp
cld
jns
xor
fidivs
or
mov
xor
inc
arpl
cmovl
and
fiaddl
aam
inc
mov
cmc
mov
and
ret
sti
xor
cld
push
out
push
flds
les
or
mov
test
xor
mov
iret
bound
divl
xchg
sbb
rcll
aas
vmaxsd
jae
iret
inc
fmull
mov
popf
jp
sarl
rorb
out
mov
sub
add
out
cmp
pop
aad
mov
jecxz
or
adc
rclb
xchg
ljmp
adc
mov
sub
pop
sbb
es
adc
push
mov
sub
and
inc
fistps
mov
ds
rcll
sub
into
mov
jbe
inc
std
add
push
mov
mov
jmp
dec
call
xchg
jbe
jno
sbb
mov
xlat
rcl
stc
push
add
inc
xchg
add
inc
sub
icebp
dec
fsubrp
jp
repz
in
jae
adc
mov
push
mov
xorb
icebp
cli
sti
pop
sub
jne
jle
jmp
dec
das
lret
in
lahf
jg
mov
call
xor
addl
adc
cltd
jle
and
sub
mov
fsts
arpl
or
mov
jmp
mov
mov
lea
loop
fimuls
and
lcall
lods
adc
aam
shll
adc
sub
sbb
aad
xchg
sti
popl
dec
mov
clc
iret
stc
xchg
dec
andb
jecxz
mov
mov
cmp
iret
hlt
mov
dec
sub
je
icebp
push
jl
or
lods
gs
adc
repz
std
mov
in
dec
iret
xor
add
scas
repz
xor
out
loopne
adc
sbb
aad
ljmp
xor
in
test
loope
enter
fdivp
pop
lret
and
jmp
or
jle
jae
lods
fwait
cmp
out
imul
sub
xor
inc
lods
mov
pop
xor
mov
adc
loopne
adc
mov
mov
stos
enter
loop
cld
stc
lods
test
pop
fadd
aam
sub
jle
dec
fwait
int3
cmp
in
je
adc
js
sub
adc
inc
xchg
pop
xchg
dec
mov
test
mov
icebp
adc
add
sbbb
pushf
adc
lods
jmp
dec
out
dec
sbb
inc
mov
test
dec
rcl
adc
ficompl
xchg
sti
fwait
sbbb
mov
scas
mov
repz
sub
test
or
push
ds
fstpl
add
xchg
into
aam
std
ret
mov
cld
cmp
fld
and
xor
in
das
push
popa
cld
insb
dec
pop
call
fnstsw
xchg
pop
rorb
xchg
mov
ret
in
mov
lcall
xchg
insb
das
pushf
pop
shrl
fcompl
mov
iret
sahf
and
lret
outsb
lock
vpaddd
test
adc
xor
movsl
imul
cmpsb
xchg
scas
enter
stos
jnp
push
fistpl
xchg
fnstsw
mov
push
not
mov
jo
dec
inc
add
popa
clc
adc
xchg
ret
out
mov
mov
pop
test
cmpsb
and
shll
mov
lcall
dec
cmp
insl
or
sub
clc
nop
xor
insb
sbbb
cmpsl
cs
cmp
stc
ss
jno
jl
dec
cmp
lods
lock
stc
mov
lods
pop
push
or
dec
dec
rcll
iret
hlt
adc
icebp
idivb
mov
add
jle
xchg
jne
stos
lret
mov
jnp
imul
cmp
out
es
stc
incl
lea
cli
push
movsl
int3
mov
flds
cltd
test
pop
daa
cli
sahf
xchg
sbb
sub
add
int3
outsl
aas
mov
les
je
loope
adc
nop
pop
ss
mov
mov
int3
cmp
sbb
cld
test
es
push
shrl
lcall
iret
lock
out
mov
gs
inc
gs
mov
cmp
fmull
sub
aaa
mov
push
add
or
ret
add
clc
jnp
leave
mov
mov
sbb
loopne
aas
or
lcall
lret
lods
aam
fists
in
ret
mov
cli
add
popa
dec
sub
and
pop
inc
addr16
inc
jp
sbb
fs
push
std
sub
or
imul
pop
icebp
repnz
test
out
mov
test
xchg
cmp
mov
pop
lods
shl
cli
pop
lods
pop
mov
outsl
sbb
cld
adc
ret
cmp
mov
sub
xchg
rclb
outsl
jae
std
pop
in
out
or
nop
xor
jmp
arpl
dec
mov
lock
rcrb
mov
dec
pop
popa
cmp
popf
xor
xor
mov
mov
mov
addr16
into
sbb
push
ret
dec
push
sub
ds
mov
sahf
fnstsw
jb
xor
sub
pop
nop
int3
daa
sbb
stos
fistpl
jmp
jns
add
mov
push
loopne
cld
es
xchg
cli
add
jl
das
jle
xorb
mov
sub
dec
jns
scas
cli
adc
xor
inc
cmp
sbb
outsl
mov
cld
push
mov
shll
or
out
out
xor
sbb
out
dec
pop
popf
xchg
scas
jnp
ret
mov
cmpb
orb
push
and
xchg
mov
je
repnz
jmp
rcll
mov
mov
outsl
and
ja
jns
and
jecxz
inc
xchg
and
les
nop
xor
test
out
mulb
inc
js
cmp
dec
addl
pop
gs
cmpsl
rolb
mov
or
jno
stos
xor
xor
ja
xlat
jle
or
push
and
movhps
xor
fcomi
sbb
sub
mov
pushf
fadds
popf
cs
fldenv
cmp
cmpsl
aaa
push
roll
xor
sti
test
xor
fcmove
jbe
call
mov
out
popf
jns
mov
insb
cmp
fcmovnbe
and
pusha
add
or
sar
ret
mov
mov
ljmp
xchg
or
int
add
sub
aas
pop
and
mov
icebp
pop
jne
sub
xor
aad
pop
ljmp
fwait
mov
jecxz
xchg
mov
subl
js
mov
xchg
and
ret
fldenv
dec
sbb
ja
movsl
cmp
jmp
jmp
jg
enter
lcall
or
lret
push
jmp
adc
dec
out
outsl
stos
cld
lcall
orb
mov
les
dec
mov
xor
sahf
xor
mov
push
cs
sbb
sbb
dec
mov
push
dec
push
sbb
mov
add
nop
and
cld
repz
push
aad
jne
push
mov
out
pop
pop
sar
dec
push
push
xor
push
pop
rcrb
cmpsl
arpl
mov
sub
xchg
cli
sbb
add
ds
or
stos
xchg
cmp
adc
push
aas
ficomps
sti
xchg
popf
dec
adc
and
icebp
push
popa
pop
push
push
aad
scas
sahf
mov
or
sbb
and
insb
repnz
push
or
mov
stos
fwait
mov
bound
jge
cltd
fnstenv
mov
sub
gs
cltd
sbb
ljmp
sbb
loope
movsb
andb
xor
push
fnstenv
rcll
and
clc
loopne
sub
shll
lahf
add
adc
lret
shl
jge
leave
js
daa
sub
cmp
mov
jg
imul
adc
dec
jbe
pop
or
mov
jbe
das
insl
fstpl
je
int
nopl
jl
xor
decb
or
xor
and
in
dec
add
or
push
cld
or
cmp
lods
mov
jno
sbb
shr
gs
dec
adcl
inc
fadds
inc
das
inc
pop
pop
cwtl
fldcw
rorb
mov
ret
subl
xchg
in
pop
xchg
aas
notb
outsl
jp
adc
test
pushf
inc
lods
inc
popa
jmp
sub
jo
sbb
insb
mov
jae
lds
subl
inc
fadds
jno
ret
jl
jle
or
sbb
cmp
mov
divb
jns
pop
xor
jno
dec
jg
push
test
push
or
imul
mov
aas
dec
jns
fsub
roll
cmp
insb
dec
iret
aad
and
mov
adcl
or
cmpsb
loope
aad
test
pop
dec
add
pop
sub
loop
movsb
lods
xlat
sbb
jecxz
mov
rorb
cmpb
scas
test
cmc
mov
call
mov
lods
push
rclb
jecxz
mov
mov
std
mov
cwtl
cld
xchg
es
inc
pop
nop
int3
cmp
decl
dec
push
cmpsb
data16
daa
out
in
mov
in
or
repz
std
ja
mov
mov
insl
dec
xchg
mov
mov
js
leave
movsl
or
mov
mov
sub
lahf
loope
or
shrb
and
call
push
fisubl
enter
jp
bound
sbb
push
jle
xor
adc
mov
dec
xchg
xor
and
enter
pop
test
jno
rcll
inc
call
sahf
test
dec
imul
enter
mov
repz
fistpll
jmp
mov
dec
xorl
or
mov
push
scas
loop
pushf
add
or
cli
or
ret
clc
inc
call
adcb
xchg
adc
shr
lret
cmp
xlat
outsb
and
jo
push
out
clc
imul
imul
insl
or
scas
movsl
fisttpl
sub
cmp
add
dec
fisubrl
jne
sti
in
rcr
xor
rcll
mov
repnz
pop
lods
sbb
scas
inc
pop
mov
shrb
mov
fidivrl
jno
sbb
outsl
sbb
cmc
int
adc
jns
mov
push
fistpl
das
mov
mov
insl
inc
hlt
popf
and
xor
jl
jmp
mov
aam
test
adc
arpl
lea
xor
xchg
push
xchg
jecxz
cwtl
loope
in
sti
pop
cltd
dec
inc
ficoms
movsb
jo
fildl
out
test
iret
mov
cmp
sbb
sbb
jle
cs
xor
dec
jb
mul
ja
js
mov
cmpb
sbb
stos
gs
js
ficompl
pop
pusha
adc
dec
ficomps
mov
in
jno
mov
inc
daa
sub
pop
xor
xor
stos
sahf
cmp
lea
and
sub
cmp
push
stos
push
or
add
mov
push
adc
mov
adc
fdivrs
add
cwtl
mov
adc
xor
mov
mov
xor
cmp
push
addr16
pusha
xor
nop
jae,pn
cmp
movsl
out
enter
adc
nop
pop
leave
rorl
int3
pop
jmp
add
dec
data16
inc
cld
iret
cmp
push
orb
shl
lock
cmp
in
popf
push
testl
lods
dec
test
inc
xchg
and
arpl
jnp
dec
push
pop
lock
mov
mov
cmpsl
imul
negb
sub
cmc
cld
sahf
leave
pushf
repnz
cmpsb
stos
icebp
hlt
popa
mov
xchg
dec
pop
insl
lcall
addb
insl
inc
imul
pop
mov
mov
inc
mov
push
add
stos
stc
enter
cmp
and
mov
ror
sahf
lods
inc
dec
or
mov
mov
jo
push
sub
push
rcr
xor
js
outsl
leave
mov
mov
cwtl
xlat
xchg
les
jp
mov
lods
pop
or
mov
pop
push
cmp
xor
pop
aaa
or
lock
lods
movsl
insb
imul
adc
jmp
jl
shrb
push
shlb
idivb
mov
inc
bnd
clc
push
sbbb
shlb
pop
jo
xor
aas
sbb
push
mov
cmp
jo
into
jg
int
test
push
pushf
and
pop
mov
cmp
into
je
or
daa
add
and
cmp
jbe
pushf
mov
mov
xor
xor
cmc
in
pop
mov
test
into
adc
idiv
mov
out
and
inc
loop
and
lds
aam
and
add
lahf
in
push
insl
pop
jb
add
adc
adc
test
stc
stos
push
fst
outsl
cwtl
sbb
clc
adc
dec
stos
rcll
out
cmp
js
aad
add
sub
imul
xlat
add
mov
add
adc
fcmove
rclb
es
cmp
mov
repnz
xchg
xchg
lds
add
es
jmp
rol
cmp
fs
scas
jg
cmp
subb
jg
cmp
aaa
mov
scas
cmp
mov
or
or
fmull
mov
jl
push
and
cmp
push
push
sub
pop
fstpl
jnp
bound
fcomps
xor
cmpsb
jge
out
test
xchg
xchg
mov
popa
into
iret
mov
out
icebp
mov
push
xor
ja
test
cmpsl
out
and
stos
add
cmovge
xorb
ds
dec
cltd
pop
jo
daa
jmp
stos
pop
test
icebp
adcl
imul
xchg
dec
ljmp
movsl
mov
loopne
push
aad
sti
insb
lahf
cmp
arpl
in
out
mov
ja
xchg
imul
sbb
mov
or
push
dec
lcall
xchg
push
jecxz
aam
mov
xor
je
fmull
sbb
negb
fisubrl
cmpsb
sbb
add
rcll
stos
movsb
dec
xor
cmp
and
inc
rolb
movsb
add
cld
hlt
pusha
jmp
daa
dec
mov
imul
push
lock
int3
dec
add
sahf
pop
pop
push
in
push
xor
adc
dec
insb
add
lret
pushf
cmpsl
lcallw
in
out
mov
ficoml
add
xchg
cmpsb
cld
adc
hlt
out
adc
scas
es
jl
arpl
fstl
mov
mov
insb
movsb
and
xchg
mov
fmull
jnp
jle
sahf
cmp
leave
jbe
sbb
inc
xor
lahf
add
inc
cmp
loope
popf
mov
jne
aas
push
push
loopne
mov
js
cs
jnp
ja
push
in
sbb
popa
mov
push
shrb
xchg
inc
add
push
push
clc
jnp
dec
js
cs
outsl
aam
sbb
ds
adc
arpl
mov
cltd
outsl
adc
ja
push
jg
inc
call
stos
cmc
xchg
dec
dec
ret
imul
mov
xchg
or
xchg
lea
cmp
inc
sbb
mov
jnp
mov
pop
movsb
test
xor
aad
xor
sbbl
sbb
lea
shr
sbb
xchg
xor
iret
into
in
insb
cmp
sbb
adc
jae
pop
adc
add
in
call
rcrb
nop
sbb
int
ljmp
shll
or
xor
mov
outsb
sbb
pop
add
insb
das
fldcw
xor
sbb
enter
call
sub
insl
and
push
mov
mov
in
sbb
das
push
pop
mov
push
pop
ja
je
inc
pusha
xor
mov
movsb
push
ljmp
adc
in
popa
cmpsl
jnp
or
pop
inc
adc
sbb
movsb
mov
lahf
adc
ds
repnz
mov
clc
stos
je
fisttpll
or
scas
cmc
ja
xor
mov
fsts
and
cltd
rorb
mov
mov
inc
dec
xchg
mov
pop
jns
mov
or
js
lods
mov
fs
lcall
mov
xchg
mov
mov
sbb
mov
sbb
push
mov
mov
cld
jae
les
loop
cmp
xchg
mov
fildl
xor
and
decb
sahf
xchg
cli
or
and
lea
mov
enter
inc
cs
outsl
cmpsb
lock
fs
jmp
dec
sub
loop
add
dec
pop
or
adc
pop
xchg
xchg
adc
jecxz
inc
lcall
jne
loopne
add
insl
add
out
jg
out
mov
ret
mov
repnz
lods
fsubp
mov
xchg
jmp
or
cmp
pop
movsl
adc
cltd
cmp
or
push
lcall
das
mov
mov
mov
dec
cmp
mov
jb
mov
dec
aas
outsb
test
int
daa
mov
rolb
int
inc
pop
mov
aaa
adc
xchg
pop
xorb
dec
jns
std
imul
adc
or
jbe
cmpsb
jecxz
movsb
or
lock
inc
xor
aam
lcall
out
ss
iret
adc
xchg
sub
push
aas
push
std
call
lahf
jnp
rorl
insb
sub
cmp
cmp
subb
out
mov
dec
jge
xor
lcall
aam
xor
mov
jmp
push
sub
jle
out
pop
out
jae
add
dec
les
xor
js
mov
adc
lea
das
pop
call
and
inc
xchg
repz
sarl
call
idivb
mov
loop
fstpt
mov
pushf
iret
push
sbb
loopne
pop
stos
adc
adc
data16
mov
nop
push
and
loopne
sub
stos
or
adc
pusha
or
dec
loopne
out
jg
and
and
bound
lcall
in
lock
xor
dec
add
xor
sbb
notb
cmp
xor
or
adc
aam
arpl
jbe
dec
stc
mov
pop
popf
into
xchg
cmp
pusha
and
leave
jg
loop
mov
js
sarb
inc
lea
dec
lret
pop
inc
sbb
push
cmp
xchg
fstp
mov
movnti
orl
insb
mov
cwtl
mov
xchg
jle
and
inc
xchg
jmp
rorb
mov
dec
mov
or
inc
rcl
mov
ja
lods
shll
add
mov
lds
pop
cmpsb
in
sbb
cmpsb
lret
mov
pop
pop
dec
and
mov
pop
push
sbb
movsb
ljmp
mov
ficomps
in
jl
and
dec
stos
inc
roll
push
jnp
dec
fdivs
lods
imul
call
rorl
repz
mov
stc
ret
push
cmp
sbb
adc
jle
insl
cwtl
jne
mov
shlb
mov
mov
scas
sti
fisubs
jp
jecxz
cmp
dec
adc
int3
in
or
push
cmp
fstpt
popa
or
je
adc
mov
jae
sub
sub
lods
clc
dec
mov
mov
and
cmpsb
cmp
xor
jo
sub
jl
xor
stc
movsl
call
scas
aam
adc
xchg
adc
imul
addl
fnsave
outsb
loopne
push
insb
and
xchg
pop
jl
cmp
mov
mov
inc
mov
je
repz
in
xchg
cmpl
dec
and
xchg
xchg
pop
fdivrl
ficomps
jmp
push
insl
cmp
or
into
test
mov
inc
cmpsb
or
push
bound
jge
shl
fistps
aaa
scas
test
inc
sub
cmp
mov
push
addr16
int
sbb
sbb
std
push
fistps
push
rcr
shrb
adc
jno
into
pushf
adc
pop
fldt
sub
notl
sar
fcompl
bound
add
push
push
jge
aas
in
dec
mov
jp
xor
or
xchg
jo
fsts
lds
divb
jne
push
int3
pop
sbb
and
aam
inc
pop
stc
jno
cltd
mov
push
xor
xor
or
in
mov
movsb
add
loopne
int3
test
fsubs
lcall
out
dec
repnz
sub
adc
nop
pop
outsb
mov
adc
pop
adc
cmp
movsb
insb
jle
call
jo
daa
scas
ret
push
cwtl
mov
lock
lods
loope
cld
int3
pop
add
lds
popf
inc
and
push
in
jg
add
adc
cmp
leave
das
sarl
xchg
add
xor
cmp
rcrl
inc
outsb
clc
pop
inc
lock
dec
inc
repnz
das
jmp
rcrl
dec
aaa
les
test
adc
daa
in
push
adc
mov
dec
fucom
dec
cmp
and
push
loop
cwtl
mov
cmp
add
jmp
fcmovbe
adc
shrb
push
mov
mov
shrl
sar
mov
push
insb
cmpsl
cmpsb
inc
sahf
dec
loop
jle
push
loopne
scas
adc
aas
test
adc
sbb
ljmp
lods
and
test
add
xchg
mov
mov
sahf
mov
add
scas
cmc
pushf
cmp
outsl
mov
mov
sbb
lods
jns
push
add
pushf
jno
lret
pop
cmp
jecxz
adc
mov
push
in
jno
sbb
clc
out
sbb
popf
frstor
lret
push
push
and
push
push
popf
mov
inc
fistpl
bound
mov
mov
jle
jbe
xor
add
adc
pinsrw
pop
ja
fsubrl
or
ja
cwtl
out
mov
mov
sbb
push
je
rorl
imul
popl
sbb
test
lret
int3
das
jbe
fstp
jg
sub
lahf
and
add
add
sbb
xchg
push
cmp
fbstp
cmp
adc
jno
sbb
push
dec
inc
mulb
rorl
or
cmp
mov
adc
sbb
fistpl
mov
mov
xchg
pop
add
cmp
mov
lret
in
popf
in
or
mov
ret
mov
call
mov
ja
lcall
pop
adc
xorl
push
adcb
cltd
mov
add
sti
push
outsb
add
sub
out
push
push
xchg
or
arpl
xabort
out
punpcklbw
neg
test
mov
dec
or
addl
xchg
cs
sub
cmp
or
add
nop
sbb
add
daa
add
test
mov
mov
or
jge
mov
add
test
mov
stos
cli
mov
sbb
loopne
adc
dec
jg
in
inc
mov
icebp
push
insl
mov
test
pop
push
sub
lret
in
push
add
cmp
xchg
inc
test
pop
jp
es
xor
mov
hlt
push
xchg
test
push
lods
out
add
mov
and
adc
cmp
fwait
adc
test
cmp
mov
jle
inc
ljmp
jmp
mov
mov
inc
fs
cmp
mov
stc
ret
loope
xchg
stc
ljmp
fisttpl
or
cmp
call
sub
movsb
lods
cli
daa
pop
fstpl
pop
xor
clc
call
jmp
mov
adc
arpl
dec
sbbb
roll
inc
iret
mov
or
sti
adc
rorb
aam
insb
fucom
rorb
into
hlt
xchg
or
test
sbb
into
pop
jb
jecxz
sub
rcrl
sbb
mov
incb
and
jmp
test
movsl
cmp
das
ret
and
push
in
or
rolb
les
or
push
jno
or
adc
insb
aas
jne
pop
stc
xorl
add
ss
and
es
int
rorb
cwtl
popf
mov
xchg
and
adc
mov
test
aas
pop
xor
sub
and
mov
insb
lea
out
pop
pop
xchg
xor
pop
inc
pop
das
push
icebp
push
pop
rclb
hlt
fistpll
adc
adcb
jg
jecxz
inc
loope
or
push
sub
push
or
inc
jbe
pushf
orl
bound
stos
out
je
mov
cltd
pop
gs
je
les
mov
cmp
add
clc
pop
std
fwait
mov
pop
cld
idiv
cmp
xchg
fwait
add
xor
adc
mov
cltd
mov
aaa
repz
push
push
in
xor
outsb
lret
mov
fsubrl
adc
xlat
pop
mov
mov
mov
mov
push
lret
fs
cmpl
dec
mov
popa
jmp
and
mov
jbe
stos
ss
xchg
dec
lret
cmp
into
push
stos
xchg
scas
pop
dec
lods
xor
aaa
mov
jmp
fisttps
or
imul
std
pop
fmull
jmp
adc
push
push
nop
pop
les
repz
cmp
mul
cli
rclb
dec
push
int
aaa
and
lret
mov
cmp
mov
jbe
and
jns
cmpsl
mov
push
addr16
out
push
test
nop
xchg
push
fwait
movsl
mov
inc
mov
mov
push
and
jae
adc
iret
xchg
dec
push
mov
int
sti
xchg
cmp
nop
imul
and
lods
pop
jne
add
push
mov
pop
out
push
and
push
mov
movsb
and
adc
adc
aad
orb
outsb
jl
jb
dec
mov
int
mov
pop
jecxz
or
insb
sub
je
ss
movsb
in
rcrb
imul
rcrl
add
or
pop
lods
es
out
sub
inc
dec
scas
inc
adc
pop
icebp
cmpsl
cmc
test
inc
mov
fistps
jecxz
aaa
jnp
pop
mov
mov
sbb
int
inc
push
jae
and
mov
pushf
cmp
jl
pop
xor
movsl
xorb
int
shll
sahf
sub
adc
pop
imul
push
xchg
js
ds
and
jnp
cmp
mov
call
push
outsl
mov
xchg
jb
out
rcrb
mov
add
stc
jl
repz
dec
adc
push
mov
movsl
push
ss
xchg
fistl
lret
sub
jge
fcoml
sarb
loope
test
call
mov
push
push
insl
gs
or
not
insb
mov
lock
out
ds
add
mov
out
outsb
cmp
push
test
sub
sbb
push
bound
cmp
rolb
ret
scas
sbb
and
insl
or
mov
push
aaa
push
jp
in
sbb
call
inc
scas
push
rorl
add
in
dec
or
xchg
cmc
rolw
push
cwtl
pop
ficomps
push
sub
rcl
xlat
adc
imul
pushf
addr16
pop
mov
cmc
or
dec
movsl
clc
sub
jbe
in
insb
sbb
add
mov
pop
popf
push
push
repnz
or
cwtl
push
std
dec
sti
add
aam
jne
jl
pop
outsb
mov
scas
or
std
mov
dec
add
adc
cld
scas
mov
dec
xor
sub
pusha
mov
enter
dec
movsl
pop
cli
jl
xchg
and
movsl
jge
adc
mov
xor
into
add
rol
into
cld
or
mov
lahf
xchg
ja
mov
mov
repnz
in
inc
lcall
push
pop
imul
or
add
repnz
cmc
and
cmp
fadd
push
push
stc
rcll
mov
shlb
adc
ds
mov
mov
cli
lock
inc
add
les
push
push
ds
mov
inc
mov
roll
and
in
xor
pop
stos
xor
pop
mov
dec
jae
pop
jl
aam
xchg
ja
jns
cmp
pop
or
xor
addr16
cmp
sub
mov
sub
push
jne
dec
push
push
adc
iret
mov
pop
sbb
push
cs
test
fisubl
cld
xor
mov
movsb
xor
push
sbb
div
out
mov
stos
push
cmp
bound
sbb
and
fdivs
repz
gs
and
xlat
dec
push
lret
mov
xor
out
and
cmp
int3
xchg
mov
ljmp
bound
inc
mov
into
pop
xor
pushf
stos
rcrb
mov
adc
clc
and
xor
and
popf
testl
into
repz
push
fmulp
mov
mov
addr16
xor
jg
mov
or
or
lea
jnp
cmp
cmp
mov
scas
xor
les
ret
add
xor
mov
ret
push
repnz
andl
jmp
movsl
lods
dec
rcrl
inc
xor
adc
dec
iret
xchg
hlt
lods
dec
aad
mov
movsb
icebp
aam
in
sub
fisubrs
into
inc
addb
dec
or
xor
or
add
xchg
xchg
into
pop
pop
out
out
sbb
mov
in
jl
push
loopne
jno
loopne
call
dec
mull
sbb
mov
lods
inc
outsl
mov
or
pop
adc
insb
out
out
pop
scas
mov
test
jo
repz
add
sub
pop
ret
lods
sbbl
jp
mov
sub
enter
cmp
xchg
cmp
add
into
scas
add
adc
push
cwtl
sbb
dec
inc
and
lods
add
jge
cmp
jae
sub
fldl
mov
lea
add
cs
and
cmp
inc
es
pop
mov
sbb
xchg
mov
pop
mov
cmp
and
sub
out
adc
mov
pop
inc
lea
add
mov
or
lahf
popf
in
and
fbstp
and
mov
push
fdivp
sub
dec
mov
mov
fdivl
or
loopne
xor
adc
fimull
test
pop
mov
mov
dec
push
xchg
imul
sub
pop
sahf
into
int
mov
xchg
add
push
lcall
mov
iret
and
dec
inc
pop
add
xor
jge
stc
jb
in
ret
in
jnp
mov
ljmp
jne
or
popf
xlat
mov
pop
jnp
sub
mov
repz
jecxz
sbb
xor
roll
sub
mov
sub
mov
inc
outsb
enter
ljmp
dec
repz
aam
xor
movb
xor
cmp
pop
inc
add
ss
xor
popf
int
push
or
ja
push
mov
iret
fstl
add
sub
arpl
lahf
stos
inc
push
adc
dec
dec
inc
mov
imul
jns
in
jmp
xchg
cltd
pop
xchg
jg
push
xchg
mov
lock
xchg
test
jg
mov
iret
icebp
hlt
ret
xlat
rol
aaa
stos
movsb
pop
or
fsts
sbb
leave
cmp
pop
aad
adc
sbb
addr16
xchg
mov
test
shlb
mov
loop
inc
aas
mov
loopne
mov
adc
jecxz
ja
push
pop
je
cmp
mov
sub
lds
cmp
cmp
push
or
shrb
out
test
scas
int3
test
or
inc
push
clc
repz
push
enter
cmc
or
xchg
mov
lahf
mov
sahf
negl
mov
lock
repz
cmp
cmp
cs
incb
inc
arpl
iret
cmp
enter
cmp
xor
adcb
mov
xchg
mov
or
out
pop
sub
fsubl
inc
mov
dec
addl
cwtl
pushf
icebp
pop
or
add
mov
add
insb
jns
ja
cmpsb
hlt
int
mov
cwtl
xchg
das
or
fsubl
adc
scas
xor
in
sbb
adc
pop
inc
jb
sti
mov
mov
incl
xchg
dec
mov
nop
pop
cmpsb
inc
test
pusha
inc
mov
sarl
push
push
jae
aaa
repz
rolb
lcall
push
bound
lods
je
lret
xchg
popf
pmaxub
sub
stos
sub
jp
addr16
stos
dec
jno
sar
int
ds
imul
les
mov
push
mov
cmp
mov
inc
loopne
or
fildl
movsl
and
xor
xchg
stos
dec
jno
out
inc
les
rcll
imulb
xchg
xchg
call
xchg
mov
xor
dec
xor
hlt
lods
jnp
fwait
dec
mov
pop
dec
lahf
and
and
inc
fimuls
ss
insl
add
inc
jecxz
leave
mov
das
xchg
cli
and
cmp
and
sub
xchg
fnstsw
popa
pop
repnz
loope
gs
push
lods
enter
aas
in
mov
jns
push
ss
cmp
xlat
adcb
xor
sbb
ja
inc
jnp
push
clc
jno
rcr
aaa
xor
xchg
pushl
mov
mov
xchg
add
push
sarb
xor
int
jmp
cwtl
sbb
mov
pop
cmp
xor
xchg
cmpsl
push
in
mov
xor
inc
bound
rorl
scas
scas
les
arpl
dec
cmp
fldt
cmpl
hlt
icebp
inc
repnz
lock
jo
adc
dec
fdiv
inc
ror
data16
pop
mov
aad
add
and
fmull
cmp
lods
sbb
or
in
pop
shr
andl
pop
jae
out
lock
je
data16
jne
out
pop
cmp
les
in
inc
aam
push
mov
adc
pushf
cmpsl
enter
pop
outsb
dec
sbb
mov
jge
xlat
int
cld
icebp
mov
cmp
dec
push
add
push
lret
pop
add
popa
icebp
ficomps
repz
and
daa
cmp
stc
into
repz
jmp
dec
adc
addl
mov
adc
or
stos
sbb
pop
fdivrl
mov
dec
mov
add
xor
sti
push
gs
imul
add
lret
xor
pop
aas
jg
push
xlat
call
call
repz
xchg
mov
in
xchg
push
sti
pusha
push
cmp
xchg
daa
add
inc
mov
call
inc
dec
cmp
mov
mov
jge
mov
pushl
out
pusha
add
cltd
add
fcmove
xchg
movsl
mov
dec
mov
pop
loope
sbb
and
lea
sbb
std
inc
iret
mov
pop
fstp
dec
mov
jle
or
dec
sbb
inc
push
sarl
outsb
sbb
xlat
lea
dec
xor
cld
mov
and
jno
pop
imul
jp
xor
iret
cmpsb
push
stos
adc
cmp
push
mull
ja
jge
jmp
sti
inc
cli
rcrl
cmpsb
stc
outsb
xchg
andb
and
push
lds
jns
sbb
stc
sbb
arpl
mov
addl
xchg
sbb
xor
pop
jl
arpl
nop
mov
and
ljmp
out
xor
sbb
in
in
mov
push
dec
ffreep
pop
outsb
aam
mov
add
sbb
in
pop
push
xchg
cli
fstpl
lcall
pop
leave
insb
bound
adc
call
in
jbe
pop
imul
dec
jle
mov
fmul
cmpsl
inc
int3
mov
mov
fidivrs
sbb
sahf
rcr
dec
add
and
cmp
dec
cli
xchg
cmc
mov
aaa
adc
jmp
movsb
inc
xchg
std
lea
iret
push
add
mov
daa
insb
xchg
xor
popl
push
jae
fwait
scas
add
fs
jno
and
push
mov
js
push
xor
sub
test
xor
inc
cwtl
fsubrl
fistpl
cmc
xchg
popf
push
outsb
cmp
daa
xchg
in
fsubl
mov
sbb
mov
movb
stos
sub
or
mov
and
loop
aas
stos
xchg
jmp
inc
or
ss
mov
js
loope
jo
mov
movsbl
pop
lea
dec
inc
mov
and
into
sbb
xor
cli
jl
jbe
mov
sbb
sbb
jl
jle
es
imull
arpl
mov
stc
push
dec
fdivrp
mov
mov
fs
es
push
test
mov
ret
jl
lcall
rcrb
xchg
mov
aad
jnp
mov
popf
nop
cmp
adc
bound
pop
jne
lea
shrl
lcall
jo
mov
jns
sahf
scas
fucomip
sbb
es
inc
pop
popa
jmp
add
and
sub
mov
adc
insb
sbb
int3
mov
xchg
fildll
bound
sbb
mov
cmpsb
cmp
test
fbld
std
lcall
idivb
insb
lea
lret
lret
pop
sbb
pop
aam
xor
mov
mov
and
popf
xor
mov
inc
xor
xchg
push
shlb
nop
pop
push
sbb
sbb
ret
pop
xchg
pushf
sub
jae
nop
icebp
mov
fimuls
jl
jmp
add
cmpsb
ja
mov
sub
inc
test
pushl
mov
xchg
lods
push
mov
sbb
xor
push
shr
pusha
or
or
imulb
clc
int3
mov
je
jo
lock
pusha
xchg
ja
stc
lods
inc
movsl
iret
xlat
jge
dec
and
sbb
or
add
test
lret
sub
aas
adc
lcall
mov
stos
jp
fbstp
sbb
pop
xchg
jns
icebp
popf
dec
hlt
xchg
pop
emms
add
pusha
jge
adc
jecxz
jo
fiaddl
pop
xorl
rclb
cmp
jb
cwtl
std
mov
dec
mov
es
pop
xchg
xchg
idivl
shl
shrl
mov
push
push
aas
je
xchg
mov
pop
jb
mov
outsl
pop
push
mov
js
roll
dec
ljmp
jns
jmp
mov
jge
ds
inc
hlt
mov
cmp
mov
sbb
dec
pop
xchg
es
dec
mov
push
nop
shl
fidivs
rorl
or
mov
and
mov
insl
xor
and
mov
or
xor
sahf
sbb
or
je
sub
out
daa
mov
insb
scas
inc
pop
out
xor
sub
aam
addr16
arpl
hlt
pop
loopne
lods
rorl
jne
ret
jno
jl
sbb
mov
je
inc
scas
fnsave
ret
popa
sub
aaa
jge
fcomps
sbb
call
cltd
dec
mov
scas
out
cmp
stc
sub
xlat
ret
pushf
loope
jmp
jbe
mov
xchg
xchg
test
and
pop
cltd
cmp
add
and
pop
jecxz
adc
mov
insl
outsl
shrl
sti
sbbl
and
movsb
and
sub
xor
cmp
hlt
or
mov
stos
inc
in
lods
outsb
fcompl
jnp
imul
cmc
icebp
xchg
fmuls
bound
out
adc
outsb
dec
lret
orb
xchg
movsb
rol
in
jp
and
cmc
jle
les
das
gs
sbb
testl
fmull
or
adc
fdivs
mov
mov
jno
imul
and
mov
mov
mov
jg
mov
sub
cmp
dec
in
dec
xor
enter
mov
pop
mov
ja
out
and
mov
jge
repz
pop
adc
xchg
mov
xchg
dec
les
in
loopne
shlb
or
lret
cmpl
or
addl
lods
int
ret
dec
jb
gs
xchg
fcoml
dec
jp
sbb
outsb
pop
add
test
ret
lds
unpckhps
scas
xchg
test
arpl
dec
sti
idivl
xor
inc
repz
outsb
pushl
dec
pop
mov
adc
jb
clc
outsl
sbb
or
cld
insl
push
cmp
aam
pushf
cmp
into
xchg
aad
adcl
popf
nop
hlt
fistps
emms
movsl
lods
in
and
rcrl
dec
inc
jo
subb
call
pushf
push
xor
push
and
push
fs
std
pop
push
sub
xchg
xchg
test
push
js
mov
adc
adc
int
cs
ja
inc
mov
sub
and
dec
fldt
lods
add
js
mov
outsl
int
nop
inc
mov
ja
popf
aad
add
jmp
out
pop
dec
fcmovu
gs
xchg
xchg
jmp
int3
mov
daa
test
mov
mov
mov
xchg
xor
out
xchg
shr
data16
pop
out
lea
cmp
arpl
test
imulb
jmp
xor
mov
mov
insb
push
xchg
into
mov
jecxz
popf
mov
push
int
out
or
push
inc
xchg
xchg
mov
sbb
cltd
mov
pop
fsts
fsubs
lcall
push
cmp
jecxz
outsb
movsb
push
lods
aaa
xchg
js
repnz
mov
push
out
or
sbb
cmpsl
mov
sbb
jle
aas
repnz
outsb
dec
pop
daa
add
and
jmp
sarb
mov
xor
or
repz
out
scas
mov
aam
jae
pop
mov
inc
cmpb
push
daa
sbb
outsb
lock
mov
std
mov
repnz
pop
jnp
faddl
dec
dec
push
push
pop
rcr
lods
pop
xchg
fs
jbe
and
dec
and
out
in
loope
inc
mov
adc
mov
mov
add
push
mov
stos
test
aaa
xchg
or
cld
sub
and
movsb
mov
push
in
jge
fistl
jl
jp
mov
or
add
sarb
mov
mov
pop
outsl
fwait
cld
sub
fnstcw
push
xchg
push
in
mov
sti
pop
outsl
cmp
adc
cmp
sbb
es
mov
loopne
push
ds
mov
pop
cwtl
adc
data16
call
popa
gs
sarb
mov
lea
mov
leave
rorl
jns
jp
loopne
adc
inc
jp
or
pusha
pop
stos
insl
ret
sbb
subps
cmp
scas
fisttpl
sub
sahf
inc
fs
ja
fdivrs
pop
scas
mov
mov
xsaveopt
insl
nop
cmovle
inc
sub
jns
stc
mov
push
sbb
out
pop
bound
clc
mov
fwait
xchg
addr16
iret
iret
dec
lock
shlb
sbb
push
sub
push
jns
xor
xchg
iret
mov
pushf
in
hlt
pop
sbb
xchg
insb
jo
mov
dec
mov
insb
idiv
inc
inc
ss
fwait
rcrb
data16
out
popf
xorb
mov
cwtl
hlt
vpmaxsw
clc
sub
shll
cwtl
hlt
cmpl
int
scas
data16
repnz
leave
lea
push
pop
sti
jo
mov
divl
push
out
jae
mov
jp
and
mov
loope
jl
fimuls
sub
in
pop
adc
mov
iret
mov
int
mov
mov
mov
mov
and
push
mov
inc
cltd
and
dec
fdivrs
arpl
pop
inc
test
fiaddl
les
aad
test
push
mov
imul
lds
addr16
popf
or
inc
hlt
push
jmp
add
pop
inc
pop
dec
popf
sbb
ret
pusha
in
mov
xchg
out
imul
shll
call
enter
sub
inc
push
popf
data16
nop
cld
jp
xchg
xor
fwait
test
xchg
lods
cli
push
push
mov
mov
adc
lret
daa
repnz
clc
aas
mov
int
xchg
sub
ja
aam
jecxz
add
dec
cmpl
sub
clc
ds
dec
sbb
mov
cmp
jg
inc
jmp
loop
or
push
mov
imul
sub
dec
push
pusha
daa
push
pop
and
xlat
mov
out
stos
mov
sarb
in
fsubp
jbe
mov
imul
pop
sti
lea
mov
lock
shll
jae
pop
aaa
cltd
or
jl
shlb
inc
inc
add
push
and
scas
cmp
jecxz
test
imul
stos
xchg
enter
dec
into
push
out
push
adcl
popf
pop
sbb
dec
jb
test
mov
and
xlat
inc
push
subb
jae
int3
cs
int
mov
push
out
scas
cmp
add
jae
cmp
xchg
xchg
sbb
xchg
pop
mov
lret
push
cmpsb
mov
outsl
pushf
and
in
fstl
push
out
or
inc
mov
sub
and
adc
push
shrb
sbb
jo
ja
sub
out
push
cmpsb
inc
push
hlt
ret
aas
add
nop
jmp
add
push
jns
or
sbb
dec
xor
sbb
add
dec
iret
arpl
xor
lret
sarb
in
xchg
fistpll
pop
or
stc
jo
daa
cmc
jg
add
addr16
std
aad
inc
dec
dec
mov
sbb
mov
fwait
in
push
movsl
cld
adcl
mov
data16
inc
cltd
adc
add
xchg
mov
repnz
call
dec
aad
mov
clc
jne
adcb
cltd
shr
jno
adc
pop
xor
scas
inc
sbb
int
jg
movsl
rclb
jle
test
fdivrs
jb
jle
pop
inc
enter
cli
sbb
inc
adcb
insl
testl
mov
pop
lahf
push
mov
fidivrs
bnd
mov
mov
or
inc
add
fistps
sub
xchg
test
testb
in
add
daa
andb
add
add
int
add
dec
add
sub
jg
notb
cmp
and
or
adc
mov
hlt
pop
push
mov
pop
jo
adc
jno
popa
adc
push
jp
dec
mov
gs
xchg
sti
out
push
call
push
mov
push
clc
lock
icebp
push
fildll
iret
add
push
pop
dec
pop
dec
pop
into
aas
or
xchg
adc
xchg
enter
xchg
push
test
out
or
dec
out
imul
mov
xor
xor
or
adc
lea
and
inc
aad
sbb
out
mov
lcall
aaa
movsl
data16
lcall
mov
and
mov
inc
ja
xchg
out
lret
cmpsl
cli
cmp
jle
mov
out
add
mov
mov
dec
xlat
in
pop
loop
or
mov
popaw
mov
lock
jae
push
push
jbe
jb
mov
lahf
pop
jecxz
and
xor
add
into
mov
fnstsw
scas
adc
push
push
stos
cmp
cmp
jge
inc
sub
leave
test
xor
mov
stc
mov
or
sahf
add
jl
push
adc
mov
out
pop
jns
or
and
mov
dec
or
sbb
shrl
jg
sub
mov
add
sbbb
adc
sbb
test
dec
repnz
xchg
sub
aas
dec
cmp
rol
adc
fiaddl
add
inc
arpl
cwtl
test
cmpsl
cltd
inc
and
lcall
xchg
jge
dec
pop
ret
sub
sti
or
mov
int3
and
js
ljmp
push
adc
mov
adc
mov
cmp
enter
faddp
sub
sti
sti
lret
inc
sbb
dec
daa
into
loope
pop
xlat
mov
push
add
iret
mov
fiaddl
push
add
adc
movsl
xchg
repnz
rcrl
cmp
dec
fidivl
enter
ficompl
adc
in
pop
test
sub
or
cmpsb
sub
sub
or
repz
pop
push
push
dec
sbb
repnz
int3
cltd
mov
or
out
jo
fcmovnu
pushl
jg
push
ljmp
cmpsl
faddl
dec
or
inc
pushl
lcall
mov
fmuls
mov
icebp
adc
dec
sub
push
pop
std
mov
test
imull
ret
addr16
and
fmull
test
aad
fnstenv
in
push
fldl
arpl
and
loop
mov
fsts
mov
mov
add
icebp
jp
mov
cmp
inc
inc
inc
xchg
gs
stos
cli
adc
xchg
dec
dec
xlat
mov
ficompl
add
arpl
popa
xchg
insl
push
into
and
aam
mov
adc
push
test
mov
sbb
push
lea
hlt
fimuls
or
xchg
dec
adc
aas
lcall
aad
sub
push
cs
add
int
sti
lret
cld
or
pop
cld
hlt
pusha
adc
mov
push
push
dec
cmp
popa
jno
ljmp
inc
cmp
subb
dec
mov
xlat
dec
es
jo
int3
ret
and
sub
inc
sub
inc
aas
jl
sbb
jo
outsl
fidivs
and
bnd
xchg
cwtl
jge
pop
push
or
cli
adc
add
add
xchg
mov
sbbb
dec
out
out
xor
out
aad
xchg
clc
fs
or
pop
insl
popa
sub
call
out
pop
test
add
enter
mov
pop
mov
and
sbb
adc
sbb
jmp
shr
icebp
push
pop
add
push
jmp
mov
adc
xchg
bound
out
push
out
mov
push
mov
mov
mov
sub
test
jg
mov
push
mov
scas
xor
clc
add
loope
sbb
lahf
into
arpl
xchg
jmp
mov
es
mov
add
lods
shlb
pop
mov
lret
or
clc
xchg
xchg
lahf
pop
in
cmpsl
jmp
fisubrs
iret
push
dec
or
pop
xor
in
xchg
out
inc
adc
arpl
andb
sti
mov
adcb
cmc
shlb
lea
repz
lahf
incl
jg
inc
repnz
pop
inc
push
adc
loop
lret
in
inc
sbb
imul
lret
lretw
cmp
sub
push
arpl
mov
outsl
testb
popa
or
jle
sahf
pop
jmp
arpl
cmp
push
mov
rcr
popl
dec
rcrl
das
push
pop
jbe
dec
mov
enter
cli
cli
mov
pop
fldlg2
mov
stc
xchg
xor
or
fcomip
xchg
mov
cmp
fisubrs
xor
out
push
pop
std
adc
jne
mov
insl
gs
pop
aam
mov
std
add
scas
add
push
rcl
mov
loope
sti
lods
xchg
push
push
fs
add
jns
ret
insb
cmp
stc
ret
movsb
cmpsl
insl
les
lds
ljmp
imul
nop
shr
cmp
mov
out
imull
xchg
jmp
mov
punpcklbw
inc
cmp
leave
jp
cld
xchg
lahf
inc
nop
movsb
xchg
pop
ds
mov
imul
or
jae
xchg
jne
push
and
dec
jle
jmp
mov
mov
adc
aad
add
nop
mov
xlat
xlat
inc
pop
pop
push
fcoms
adc
stos
xor
icebp
sbb
cltd
call
cltd
lcall
jg
push
repnz
and
add
enter
or
pop
inc
gs
aaa
add
insb
push
mov
cld
push
or
push
andl
notl
adc
lcall
inc
mov
add
fs
xor
add
inc
cltd
pusha
pop
out
mov
daa
pop
inc
xchg
xor
inc
mov
iret
jb
clc
jp
stc
push
dec
into
inc
jg
xor
cltd
test
pushf
dec
adc
fcoms
inc
pop
cwtl
dec
xorb
sub
jecxz
dec
cltd
push
pop
nop
add
adc
mov
push
jmp
and
std
popa
lret
out
push
insl
mov
imul
ret
mov
add
cltd
cmc
fcompl
ljmp
fistl
push
pop
pop
push
mov
imulb
jbe
and
dec
jns
dec
jg
inc
lds
lds
jae
adc
xchg
dec
nop
or
shrl
jnp
xchg
loopne
rcrb
das
xchg
mov
sbbb
mov
lahf
cmp
sub
std
icebp
nop
rep
mov
les
mov
sbb
outsl
sub
inc
sub
cmp
xchg
clc
ror
jno
lock
mov
or
and
and
dec
sbb
add
add
mov
cli
xor
iret
cmp
mov
xchg
ret
outsl
sbb
inc
add
sub
fnsave
leave
xlat
mov
addb
mov
cmpl
loopne
pushf
outsl
jo
sub
jp
cmpsl
push
mov
jbe
clc
lds
movb
push
testb
sbb
add
push
stos
hlt
std
and
jmp
lods
mov
cltd
or
fidivrs
test
shlb
xchg
out
mov
out
mov
push
dec
push
sub
aad
mov
xchg
stc
dec
std
in
mov
movsl
adc
fisubrl
into
fwait
scas
sti
fwait
xchg
inc
lcall
sbb
insl
hlt
push
add
xchg
or
add
jo
and
xchg
ret
xor
xchg
loope
lret
adc
sbb
movsb
push
loop
js
int
mov
jns
mov
mov
aaa
cmp
enter
lods
mov
das
into
and
nop
push
test
aad
jp
mov
cmp
std
pop
ficompl
mov
and
mov
mov
flds
iret
in
lcall
into
scas
test
ret
mov
cltd
add
ss
add
arpl
mov
mov
idiv
xchg
into
es
pop
xor
add
dec
fcompl
stos
mov
ret
dec
sti
popf
mov
lods
add
arpl
fs
test
testb
inc
insb
ss
mov
nop
imul
les
xchg
mov
test
in
pushf
dec
pop
notl
ficoms
mov
pop
inc
test
inc
xchg
in
sbb
cs
movsl
or
mov
stos
jne
outsl
mov
das
out
and
mov
stos
jbe
add
mov
xchg
aam
sahf
sahf
adc
jb
lahf
mov
jmp
or
inc
push
xlat
addb
mov
jle
sub
test
testl
out
data16
cmp
push
pushf
mov
sub
movsl
xchg
xor
fcompl
sbb
repnz
cmpb
je
xchg
cli
lock
push
aaa
cli
adc
outsl
in
xchg
or
mov
jno
mov
cli
bound
dec
in
cmp
addr16
push
adc
pop
shll
cltd
push
ljmp
scas
les
ds
popf
mov
xchg
mov
inc
inc
fldt
ja
test
inc
test
shl
popf
mov
xchg
or
dec
cmp
addr16
imul
push
xchg
pop
out
mov
insb
sbb
push
js
jp
inc
xor
cmp
xor
icebp
pop
aaa
jmp
int3
jecxz
testl
cs
jle
pop
cmp
fimuls
int3
stos
imul
pop
sbb
loope
mov
stos
iret
cmp
pop
pop
sub
xchg
xor
adc
shl
xchg
xchg
and
fmuls
sub
xlat
test
sti
gs
inc
gs
enter
adc
cmp
imul
js
pushf
ret
cmp
mov
outsb
push
call
rorl
repz
mov
ds
aaa
fnstcw
aad
dec
jnp
or
inc
inc
jp
push
repnz
jmp
test
adc
push
pusha
iret
inc
lahf
pop
inc
dec
push
pusha
sub
sub
inc
fsub
lahf
sub
lds
stos
jmp
std
call
or
in
aam
dec
fistl
in
and
inc
into
fwait
ja
and
icebp
xchg
idivb
pop
jge
stos
jp
ret
repz
mov
inc
das
cmp
push
dec
mov
inc
dec
daa
je
mov
inc
add
movb
outsl
cmp
mov
int3
dec
mov
enter
in
out
cmp
ficompl
pop
lahf
lea
fbstp
idivb
sbb
dec
or
cs
and
add
sti
scas
xchg
repnz
mov
loopne
or
addl
lds
push
jg
bound
pop
dec
and
mov
je
jle
test
aam
mov
mov
push
cmp
xlat
mov
sbb
cs
repnz
pop
pop
inc
inc
and
add
in
sub
fcoms
int3
ss
int
mov
jnp
pusha
cmpsl
jge
mov
cmp
dec
xor
movsl
adc
mov
in
bound
test
clc
scas
incb
jmp
rcrl
mov
adc
ds
hlt
pop
popf
icebp
out
adc
bound
sub
xor
mov
sti
sbb
ret
add
xchg
pop
or
in
imul
adc
pushf
mov
mov
rcr
jp
aas
mov
ficompl
jb
xor
adc
dec
iret
shlb
aas
notb
adc
das
aam
sub
sbb
xor
cld
cmpsl
cmp
sahf
movsl
arpl
dec
pop
fmul
sbb
mov
into
ds
mov
inc
mov
cmp
mov
lock
add
rcr
sub
xor
add
mov
lret
push
or
das
in
mov
cmc
das
ljmp
jp
inc
stos
in
dec
pop
inc
rcll
pop
in
jns
mov
sub
add
out
sarl
xor
push
rorb
pmuludq
sbb
dec
adc
lock
andb
xor
jl
mov
rclb
rorl
sahf
sub
stc
sub
dec
das
mov
outsl
jnp
pop
jae
sbb
cld
or
stos
adc
mov
adc
mov
rol
jno
mov
lods
insl
inc
ret
testb
add
add
add
add
add
aas
daa
add
jnp
add
add
mov
add
str
add
or
daa
jnp
dec
ret
in
or
imull
or
shlb
lock
mov
cmpsb
cltd
lea
push
sbb
sub
inc
xchg
sub
and
xchg
insb
adc
mov
dec
dec
hlt
pop
cmp
pop
push
push
dec
or
rcll
mov
mov
xor
insl
shrb
jo
cmp
or
add
fcompl
push
or
int
mov
dec
cmp
sarb
ret
push
bound
ret
xchg
mov
jb
xchg
inc
inc
jg
cmc
shlb
xchg
cmp
xor
dec
or
lods
test
adc
fsubp
jmp
fistps
arpl
and
enter
lea
fdivs
mov
push
insb
jg
std
mov
xor
loopne
aad
xchg
jb
adc
xlat
inc
push
push
jg
aaa
mov
jle
xor
xor
add
jb
or
aad
dec
pop
adc
leave
arpl
add
push
subb
scas
sbb
mov
add
in
hlt
int3
dec
and
jmp
mov
into
pop
negl
xchg
xor
adc
inc
jl
inc
sbb
into
mov
dec
fnstcw
dec
dec
lea
mov
lcall
bswap
sub
dec
aas
xchg
mov
sbb
cmp
inc
cmp
xlat
jmp
flds
and
incl
push
aas
ss
fwait
push
call
ret
and
pop
pop
out
pop
push
ret
stos
outsl
inc
jnp
and
adc
push
xchg
pop
xor
mov
xchg
stc
addr16
lock
sub
gs
in
je
test
imul
insb
adcb
jne
negb
pop
ljmp
shr
std
sub
sahf
movsb
push
test
fistps
js
cmp
xchg
insb
lret
fwait
movsb
lods
out
lret
cmp
lods
sarb
pop
inc
in
ret
aas
jbe
repnz
icebp
cli
in
push
js
add
lahf
filds
mov
test
loope
inc
pop
xor
insb
gs
xchg
jg
enter
xor
sbb
adc
out
stc
aad
push
jmp
bound
push
add
push
jmp
mov
cld
cld
mov
roll
and
lock
adc
mov
jbe
shll
ret
xchg
test
out
dec
fcoms
jnp
xlat
push
inc
mov
pusha
lods
cmp
aad
and
lea
outsl
add
mov
sub
fstpl
loopne
fs
and
int3
xor
imul
cmp
test
fldcw
adc
test
push
aaa
outsl
sub
pop
cmpsl
jo
sub
push
xchg
mov
cmp
push
cmc
out
ss
pop
ja
lods
pop
ret
imul
pop
pop
cwtl
mov
pop
xor
fwait
lcall
add
loop
jle
adc
lcall
xor
scas
adc
or
mov
xor
pop
nop
repz
jle
xchg
insl
dec
fincstp
cli
xchg
or
in
jnp
fs
push
idivb
push
mov
mov
lahf
shr
imulb
add
lret
mov
scas
xor
test
jbe
push
das
inc
das
jb
lods
sub
loope
pop
or
mov
cmc
xchg
fwait
sub
and
and
mov
loope
in
mov
leave
mov
nop
das
es
packsswb
jno
and
frstor
adc
mov
data16
stos
inc
xor
ret
mov
xor
int3
push
fmuls
subb
cltd
dec
lods
ret
add
andl
call
in
ljmp
push
mov
or
add
push
addb
js
mov
pop
xor
jbe
cmp
sti
in
jecxz
cmp
pop
clc
sbb
pusha
push
mov
sbb
imul
cmp
hlt
mov
movsb
mov
inc
and
jns
addb
fsubrl
inc
ret
ret
call
ret
push
xor
in
outsb
push
hlt
mov
stos
sbb
xor
ds
mov
xor
xchg
cltd
in
sahf
or
cmc
cs
and
movsl
mov
into
mov
shll
inc
adc
push
out
and
sbb
xchg
flds
push
push
mov
sar
in
loop
int
cli
dec
pop
call
test
xchg
jle
or
pushf
mov
jge
ja
push
daa
fists
jl
movb
frstor
pop
enter
xor
js
sbb
cwtl
shr
pop
add
cmp
jp
outsb
ds
add
lret
cmc
or
push
sti
xchg
cltd
jae
sub
repz
pop
cmp
mov
ret
add
or
cld
sub
adc
or
push
dec
pushf
pop
fiaddl
mov
lods
stos
test
addr16
xchg
push
stos
jne
popa
lahf
mov
fcmovbe
mov
sbb
mov
inc
mov
mov
push
cltd
cmp
lret
xchg
mov
sub
icebp
push
ret
mov
rcrb
mov
sbb
mov
call
jne
mov
pop
aad
jne
sub
push
decl
push
shll
dec
push
pop
in
scas
pop
jl
ror
xchg
xchg
dec
cld
subl
jns
aaa
rcr
cmc
push
je
lret
mov
mov
jb
imul
repz
retw
sahf
jg
xchg
inc
xor
pop
inc
jmp
call
les
popa
inc
dec
fbstp
mov
subl
lock
mov
stc
push
mov
xor
es
fcomi
aas
add
inc
mov
or
inc
stos
enter
aas
xchg
in
mov
lret
mov
out
fidivrs
sub
cltd
dec
jbe
ja
add
mov
cltd
cmp
pushf
test
daa
je
add
hlt
int
das
test
fbld
sbb
pop
out
clc
scas
jle,pt
jge
test
inc
pushf
inc
jmp
ja
notb
rclb
pop
enter
sbb
mov
cmpsb
cs
je
xchg
jo
or
push
mov
inc
or
mov
dec
fmul
fildll
divb
xchg
sub
xchg
sub
int3
popf
loope
aas
push
enter
mov
xchg
xchg
iret
sub
loop
jle
jno
or
movsl
in
mov
pop
fs
testl
loop
xor
lea
xchg
out
leave
xchg
mov
repz
mov
dec
or
rorl
pop
pop
out
push
inc
std
cmp
in
pmaxsw
int3
add
out
jmp
ljmp
or
inc
cmp
fcompp
sbb
enter
mov
out
push
mov
stos
dec
ja
mov
rol
mov
into
mov
imul
jno
inc
in
outsl
push
inc
push
add
adc
cmpsl
out
lods
sti
mov
lock
push
push
arpl
cltd
in
inc
adc
pop
lahf
gs
aad
mov
mov
pop
cmp
iret
enter
xor
in
mov
xchg
shlb
loop
lock
push
mov
adc
or
mov
shlb
es
mov
lea
shlb
jp
xor
mov
jp
fistps
pop
in
mov
mov
adcb
ds
and
jmp
fnstenv
cwtl
lret
and
add
mov
sti
andb
mov
xchg
cmc
ret
mov
dec
loope
sbb
lods
push
call
test
mov
scas
sub
and
fdiv
dec
mov
out
lea
testl
pop
fistps
sbb
pop
les
mov
dec
fdivs
test
pushf
cmp
leave
xor
sub
sub
jmp
int
fbstp
sahf
test
rolb
mov
cmpsl
jo
dec
push
daa
mov
inc
imul
repnz
repz
inc
mov
rorl
andb
test
inc
mov
in
call
stc
mov
mov
xor
inc
pushf
xchg
push
ja
sbb
xchg
decl
xor
stos
fbstp
add
push
cmp
aad
cli
cltd
gs
aas
in
scas
dec
pushf
popl
mov
andb
jno
repnz
dec
add
test
jo
cwtl
dec
loope
leave
data16
out
xchg
xor
cmp
add
test
movsl
mov
jo
test
inc
push
sahf
jo
pop
push
sub
push
mov
cwtl
dec
cmp
outsl
fcomps
arpl
cwtl
dec
cmp
sub
fnstsw
inc
fistl
fwait
jg
add
nop
data16
jp
lds
test
daa
fwait
dec
xor
sub
in
insb
cmpsl
lret
bound
or
stos
add
test
jb
hlt
jecxz
std
add
rorb
aaa
or
mov
jns
jl
decl
adc
out
xor
std
in
xchg
mov
push
mov
jbe
adcl
and
jb
mov
jo
fs
or
outsl
push
add
incb
mov
xchg
std
popa
sub
in
jg
fwait
loopne
cmpb
mov
ror
out
fisubrl
jae
cltd
cltd
xor
test
xchg
mov
dec
in
es
aad
jmp
pop
pop
push
mov
cmp
cli
jns,pn
mov
xchg
jae
sbb
jmp
xchg
aam
xchg
cmpsb
inc
sbb
cwtl
sahf
lods
sahf
fnsave
inc
cwtl
push
jo
mov
js
mov
popa
mov
repnz
call
inc
or
mov
imul
jmp
xchg
pushf
sub
inc
lcall
push
dec
inc
or
fcmove
repz
les
push
bound
enter
dec
pop
outsb
fistpll
sbb
lock
jmp
fisttpll
out
mov
cltd
dec
clc
xchg
test
xor
jle
inc
xchg
iret
and
jle
enter
mov
in
lock
int
pop
and
add
repnz
call
push
in
test
in
or
pop
leave
or
aam
ja
jl
insl
mov
pop
inc
cmpsl
cmpsb
cs
mov
mov
inc
jae
loope
adc
cmp
rcrb
adc
scas
lea
push
xor
iret
mov
xchg
mov
or
mov
push
loopne
lcall
push
int
pop
xor
popf
pop
outsl
cs
jecxz
xor
jg
mov
int3
pop
nop
jns
and
das
or
ljmp
fldt
iret
pop
sbb
das
mov
mov
sub
sub
notl
fs
fs
iret
hlt
mov
out
sbb
dec
xlat
mov
xor
mov
dec
push
inc
dec
add
cmp
mov
push
sub
jbe
mov
js
pop
dec
dec
sub
push
aam
jle
int3
outsb
in
pop
or
lahf
sbb
lcall
ljmp
repz
push
incb
rorl
scas
bound
loop
pop
jbe
lcall
mov
push
divb
or
test
lret
pusha
aas
mov
aaa
pop
loopne
mov
push
cmp
jb
ror
xor
sub
insl
xor
hlt
mov
inc
adc
pop
bound
push
push
push
lcall
les
add
in
adc
pop
stos
imul
stos
cmp
or
mov
ret
jmp
push
pop
mov
jecxz
mov
pop
in
test
push
add
rclb
dec
fildll
or
xlat
lcall
cltd
xchg
enter
daa
pop
dec
mov
or
xor
in
das
jne
xchg
inc
jp
lods
lret
lret
in
inc
adc
jle
or
fwait
rdpmc
cmp
dec
stc
leave
mov
sub
mov
add
mov
stos
jecxz
fsubl
inc
lods
push
gs
cld
and
test
jmp
lds
mov
or
fcomp
sbbb
stc
inc
shll
iret
or
mov
add
push
xchg
test
jp
xor
stc
lock
imul
xchg
mov
mov
testb
loope
dec
arpl
pop
mov
loopne
cmp
mov
pop
and
inc
xchg
inc
xchg
mov
push
ss
adc
sarb
data16
lea
fnstenv
xor
inc
and
lret
and
pusha
aaa
jle
jecxz
mov
aaa
movsl
outsl
imul
lock
ret
pop
jmp
and
js
fsubs
dec
adc
or
cli
nop
add
push
sbb
scas
sub
pmulhw
mov
ret
or
popf
mov
clc
or
dec
out
andl
xchg
aas
movsb
test
cmp
scas
inc
jnp
es
int
or
mov
adc
cmp
or
je
loop
inc
mov
jne
pop
pop
aam
imul
addb
gs
push
in
loopne
xor
push
dec
out
adc
jae
mov
es
mov
xor
push
out
xchg
sbb
out
in
popf
test
xchg
xchg
ret
push
or
cld
gs
rcrb
mov
popa
ss
cli
sub
push
or
ret
jmp
ja
lahf
add
pop
lods
xor
push
shlb
mov
cmc
mov
fcoml
enter
lock
addr16
sub
mov
dec
inc
and
sbb
inc
jp
loopne
cs
out
gs
xchg
sbb
decl
jl
stos
xchg
and
pop
mov
stos
and
mov
lock
inc
add
add
out
mov
int
shrb
scas
mov
xorl
dec
pusha
popf
shlb
insb
vpshuflw
arpl
push
in
repz
cmp
repnz
movsb
jbe
adc
xchg
add
adc
aaa
lret
push
shlb
fistps
mov
xor
and
push
sbb
mov
add
movlps
push
push
dec
out
arpl
adc
or
and
sub
int
mov
push
jns
ret
fld
cmp
out
push
mov
dec
jb
scas
mov
push
iret
cwtl
jne
or
push
fdivrs
mov
negb
add
adc
sbb
in
stos
loop
pop
mov
xor
lock
push
ret
into
bound
test
lcall
fcoml
mov
mov
pop
mov
and
cs
popf
loop
jns
mulb
xchg
adc
pushf
push
dec
movsl
mov
add
imul
stos
inc
pop
inc
idiv
hlt
lahf
loop
xor
inc
mov
out
cltd
in
mov
jmp
loopne
repnz
xchg
sbb
outsl
sti
addl
fimuls
sub
mov
xor
je
xchg
and
dec
and
dec
pop
sub
push
ficoms
sub
leave
mov
enter
dec
int
movsb
xchg
icebp
hlt
cmc
hlt
sbb
sub
cmpsb
or
push
mov
mov
ret
cmc
adc
mov
adc
xor
xchg
mov
ja
inc
inc
enter
xchg
lahf
cmp
adc
in
jecxz
or
dec
pushf
jo
rcrl
pop
das
cs
mov
or
push
enter
mov
push
shlb
out
mov
pop
movsb
lods
imul
mov
pop
cltd
pop
mov
sbb
ds
mov
mov
or
mov
mov
sub
cltd
or
mov
adc
push
test
imul
pop
add
ret
push
or
fwait
mov
mov
mov
and
sub
pop
dec
mov
lcall
or
fwait
test
arpl
cmp
orb
push
inc
dec
daa
lahf
in
ljmp
jbe
call
js
clc
sub
mov
sbb
fisttpll
mov
and
aad
mov
dec
mov
fsubl
or
dec
mov
icebp
mov
adc
jno
movsb
test
xchg
dec
popf
repnz
fstpl
movsb
push
adc
xor
out
add
shr
push
das
sti
cld
sti
fiaddl
andl
andb
fildll
jns
pop
jno
cltd
pop
out
dec
push
aas
xor
mov
xchg
mov
rorb
cmp
stc
sahf
xorl
scas
pusha
or
inc
ljmp
das
aas
lret
sbb
testl
out
or
and
and
add
add
imul
mov
push
xchg
imul
rorl
das
xlat
jb
pop
jae
xchg
daa
mov
das
and
adc
hlt
shrl
stos
push
aam
xchg
pop
push
ja
pop
movsl
push
pop
and
icebp
xlat
or
sbb
xchg
mov
inc
mov
pop
add
ret
sub
mov
push
jmp
dec
push
sub
aas
mov
add
cmpsl
mov
cmpsl
mov
add
adcb
or
mov
cmp
mov
inc
inc
mov
push
aaa
add
jnp
mov
dec
inc
xor
scas
mov
push
shrl
orl
cmpl
inc
inc
sbb
cld
push
xchg
popf
xor
mov
out
jge
mov
in
sarl
add
fisubs
daa
imul
dec
outsl
cmp
jmp
dec
sbb
rolb
ret
cmpsl
loopne
dec
mov
lahf
mov
cmp
inc
loop
out
fnstenv
cmpsl
fcoms
imul
mov
das
push
dec
mov
loope
mull
mov
scas
fimull
loope
cltd
dec
insl
test
out
jecxz
pop
cmp
lods
adc
rcr
lahf
std
xchg
in
jg
scas
dec
mov
test
inc
lds
dec
add
or
push
xchg
sub
pop
mov
add
ds
xor
in
mov
incl
mov
lds
sbb
js
cmpsl
aas
adc
inc
push
cmpsb
jge
repz
adc
pop
pop
mov
dec
enter
scas
je
addr16
inc
mov
icebp
pusha
addr16
sbbb
in
test
push
xchg
lcall
mov
mov
or
mov
push
lret
jmp
pop
daa
pop
sub
xchg
jo
and
aaa
pushf
insb
mov
push
push
aam
fs
mov
push
lods
test
mov
push
xchg
loop
stos
and
cs
xchg
pushf
pushl
loope
es
out
mov
sbb
mov
outsb
pop
add
popf
mov
call
sar
aas
xor
rep
ret
xor
jnp
je
mov
fnstenv
xchg
fildl
int3
insl
or
andl
add
jle
jle
lret
mov
call
push
sbb
out
stos
mov
sti
dec
mov
jns
leave
out
lock
pop
push
adcb
or
stos
mov
and
into
sbb
arpl
mov
ja
in
cmovns
clc
mov
jnp
jae
sbb
dec
orb
lret
xor
test
push
cmp
inc
adc
roll
lcall
sbb
sar
sub
inc
movsb
xchg
xor
xor
stc
adc
or
rolb
scas
insl
outsl
repnz
xchg
arpl
xorl
nop
jo
mov
cs
pop
stos
in
mov
lret
adc
inc
repz
mov
mov
fnstenv
test
movsb
shrb
sub
lret
xchg
jb
jne
ljmp
mov
shrl
or
repz
sub
sub
inc
insb
inc
fs
mov
idivl
shll
inc
cmp
ja
inc
push
leave
cmp
insl
stos
bound
fs
iret
mov
lods
in
dec
mov
push
in
testb
mul
or
jbe
adc
outsb
loopne
jbe
xchg
inc
pushf
aam
gs
sbb
es
shrb
scas
out
or
lret
inc
mov
xor
mov
jo
je
and
lea
xchg
push
gs
jns
or
mov
out
mov
call
pop
cmpsl
out
in
enter
mov
sbb
outsl
add
mov
inc
and
or
push
les
jle
std
xchg
xor
je
pop
cli
pop
sub
adc
shl
cmpsl
lret
pushf
cmp
lock
inc
add
pop
lret
mov
xchg
pop
pop
imul
fdiv
stc
jecxz
xor
sbb
shlb
mov
dec
pop
enter
aad
cmp
cmpsl
and
and
sti
jae
mov
movsb
mov
mov
push
loope
fstpt
rol
jbe
call
insl
mov
test
popl
or
roll
fstpt
fidivl
mov
sbb
mov
out
fbld
or
and
xchg
or
sbbb
ljmp
and
xor
out
mov
pop
push
push
mov
int
mov
xor
aas
sbb
sbb
sbb
filds
push
lret
test
cmp
popa
fiaddl
outsb
rolb
jne
add
sar
mov
xor
in
inc
loopne
add
and
sbb
dec
adc
sbb
push
leave
incl
pop
dec
push
adc
lock
cs
popl
scas
push
xchg
imul
out
aad
lret
sti
add
sahf
les
stos
cmp
vpmacsww
cld
in
lcall
ja
outsb
cld
frstor
sbb
jbe
mov
and
jecxz
subl
mov
or
cmp
mov
or
cmc
js
inc
aas
xchg
xor
add
movl
rcr
dec
cmp
lock
iret
je
pop
rcll
fwait
shl
in
bound
or
mov
cmp
sub
sub
lret
mov
daa
fnstcw
xchg
sbbb
cmp
mov
adc
push
insb
jmp
hlt
mov
pushf
xor
icebp
adc
pusha
or
daa
pop
sbb
pop
movsb
xorl
add
sbb
orb
cs
mov
sbb
inc
pop
cli
test
adc
loop
daa
das
push
push
shrb
in
jle
add
imul
stos
popa
scas
sub
pop
and
lcall
in
lcall
idivl
lods
call
dec
adc
dec
out
xchg
mov
dec
push
xchg
push
cmpsl
inc
faddl
insl
jo
icebp
jmp
push
call
jae
mov
cmp
lret
mov
nop
subl
addl
cmp
push
test
shl
jne
pop
cmpsb
jmp
and
jmp
leave
lock
push
sti
mov
adc
movsl
and
rolb
sub
icebp
lret
inc
scas
xlat
shll
cmc
adcb
jmp
das
mov
mov
cmpsl
adc
sub
icebp
mov
jl
add
shll
mov
adc
test
mov
push
jne
jmp
movsb
imul
mov
hlt
adc
add
cmp
fdivl
add
add
cltd
and
cltd
ret
fcoms
mov
xchg
dec
mov
cltd
push
adc
xor
push
int
pop
jo
mov
cmpsb
push
dec
sbb
scas
xor
push
mov
push
sub
cmp
popa
fwait
sti
scas
cli
cmpsb
mov
inc
fiadds
xchg
shl
push
jecxz
pop
and
arpl
mov
bound
in
sbb
ljmp
sub
push
movsb
sub
dec
into
pushf
inc
stc
mov
das
dec
ret
inc
push
lret
mov
mov
sahf
fsubs
xor
jmp
jp
fs
loop
outsb
mov
and
cmp
int
add
lods
mov
je
and
push
xor
mov
mov
xchg
pop
sub
imul
jb,pt
aam
ss
xor
dec
icebp
test
outsb
jnp
loop
out
mov
out
jg
ss
ret
jb
lcall
sub
lock
fs
mov
rorb
mov
imul
fmuls
pusha
out
stc
inc
fdivl
lods
inc
ret
or
xor
push
shrl
in
xor
pop
push
fisttps
lret
addr16
les
push
test
rolb
adc
jmp
imul
sub
fstps
roll
push
xor
test
fsubrs
fwait
cmp
jnp
add
dec
out
cli
lea
push
dec
in
and
adc
xor
fs
call
rsqrtps
xlat
ja
or
and
arpl
mov
dec
cli
xchg
shl
sti
mov
adc
mov
mov
jae
fidivrs
inc
jae
mov
sub
popa
ds
testl
aad
jb
clc
cmp
jno
pop
mov
test
and
aaa
sub
mov
es
out
fadd
jnp
sub
xor
movl
scas
mov
sbb
inc
xor
lods
or
fs
mov
stc
in
add
lods
xchg
shl
std
xlat
hlt
inc
mov
xlat
daa
jno
clc
fwait
iret
add
cmp
sbb
sbb
test
sti
aaa
jmp
movsb
ror
roll
jge
ds
push
cmp
out
push
inc
mov
stc
aad
xchg
loop
or
iret
loop
push
int
ret
inc
sbb
test
int
or
jbe
es
imul
dec
adc
lcall
lret
cmp
sub
pop
test
or
ljmp
inc
clc
icebp
mov
sbb
repnz
xchg
and
clc
jne
enter
dec
outsl
lods
mov
into
test
dec
sub
cmpsl
mov
mov
mov
insb
mulb
adc
jb
lds
fstpl
std
add
mov
jl
sub
out
add
add
loopne
jg
ljmp
neg
sbb
cs
xor
rcrl
dec
jmp
cmpsl
cwtl
loop
mov
jbe
sbb
lret
in
sarl
pop
and
out
lods
and
mov
sub
das
lret
or
shl
mov
ljmp
imul
and
les
sbb
adc
ja
cmpsl
sbb
les
add
jbe,pt
ret
dec
sti
dec
ficompl
mov
or
rclb
nop
dec
imul
cmp
pop
bnd
mov
adc
lods
test
pop
ds
mov
stos
cmp
aad
aad
jg
es
in
cmp
jge
inc
mov
sbb
jg
int
jae
into
test
bswap
adc
pop
pop
mov
out
jmp
pop
cmp
shr
lods
adc
leave
pop
cmpl
jp
inc
stc
dec
xchg
ljmp
add
xchg
ja,pn
movsl
or
dec
int3
xchg
pop
negl
inc
push
cld
jb
cs
in
out
sbb
inc
xchg
lret
or
fbstp
push
jbe
je
cmp
ret
pop
jae
idivl
pop
jmp
add
or
lret
mov
and
cs
sbb
inc
jle
into
btc
cs
aas
xor
mov
sbb
jp
fdivrs
pop
ret
mov
cmc
cmpsl
mov
xlat
in
jne
aam
pop
mov
inc
jg
das
xor
paddd
mov
bound
xchg
or
cmpsb
jp
pop
mov
adc
aad
or
into
lods
in
or
pop
ljmp
popf
rorl
aaa
sbb
cmpsb
cwtl
jo
mov
add
fistps
test
ja
push
pop
pop
pusha
in
xor
jge
sbb
enter
or
and
pop
push
jb
jo
dec
sbb
sub
repz
sahf
pop
aad
fistl
dec
jmp
xor
cwtl
sti
in
mov
mov
lahf
sbb
in
push
jb
test
insb
in
add
mov
jae
subl
clc
insb
mov
xor
out
jmp
add
jo
icebp
sbb
mov
jne
sahf
jae
jg
inc
sub
outsl
les
mov
push
push
push
icebp
inc
in
daa
popa
cltd
and
or
ss
adc
xchg
sahf
adc
sbb
or
push
cmpsb
inc
or
incl
imul
lock
jp
jle
push
or
rcrl
mov
int3
inc
pop
cltd
popa
dec
adc
fwait
lock
fisttpl
aas
mov
pushf
jecxz
xchg
arpl
ljmp
ret
jae
cmpl
jno
or
int3
jl
add
push
aad
add
or
sbb
lock
cmp
mov
mov
pushf
insb
pusha
andb
pushf
cltd
pop
pushf
or
fldcw
jnp
inc
push
pcmpeqw
in
lret
scas
inc
repnz
pushf
adc
add
xchg
stos
fs
fists
movsl
xlat
stos
push
add
mov
std
gs
sahf
lret
roll
pushf
push
add
jnp
add
repnz
aam
sub
dec
xor
fsubp
cmp
push
lods
mov
sub
cmp
sbb
or
mov
pop
int
decl
or
je
add
cmp
out
sub
cmpsb
mov
call
sub
aam
gs
pop
ljmp
add
ljmp
stc
or
cli
xlat
insb
pop
mov
lahf
lea
fs
fistpl
test
push
xchg
jge
adc
cmpsl
and
fisttpl
mov
mov
cmp
dec
jmp
pop
dec
sbb
out
inc
cmc
dec
aad
addr16
dec
pop
cmp
push
sbb
mov
mov
push
xor
cmp
cmc
mov
or
xor
dec
add
std
std
int
dec
jae
pusha
mov
push
cs
sbb
ret
inc
sub
fiaddl
push
dec
dec
test
sbb
in
pop
mov
out
jmp
jl
mov
cmpsb
adc
jge
stos
push
push
int
fsubr
mov
repnz
mov
mov
cmp
scas
lods
fidivl
and
shrl
test
fld
stos
sbb
je
mov
dec
int
cmc
xchg
add
rolb
ja
sub
add
mov
and
sub
leave
cmp
sar
test
sarl
stc
imul
fcmovnu
in
xor
jnp
sarb
mov
repz
aad
mov
xor
push
dec
xchg
aaa
jmp
cmc
sub
jo
lcall
test
sbb
sarb
inc
lds
jecxz
imul
or
sub
arpl
pop
cmp
ss
sarl
arpl
jle
and
xchg
dec
push
push
loope
add
jecxz
nop
les
pop
out
and
sbb
add
mov
movsb
xor
rcrl
dec
std
mov
mov
dec
or
shlb
pop
shrl
out
repnz
xchg
mov
int3
je
mov
insl
dec
call
fistpl
lahf
adc
xchg
add
or
jecxz
mov
inc
jg
mov
in
aad
pop
loope
pop
shll
scas
test
cmp
mov
jl
sbb
adc
pop
rcrb
mov
dec
adc
dec
dec
xchg
call
sub
or
xlat
sbb
out
jne
jbe
ret
and
mov
mov
out
sub
mov
cli
push
stc
mov
iret
add
inc
jmp
add
mov
push
outsl
xchg
mov
ret
push
cld
jge
and
xchg
fadds
xor
push
shl
add
push
mov
jecxz
or
xchg
in
mov
dec
adc
mov
xor
jmp
cld
out
lret
add
add
ja
pop
sbb
enter
dec
aad
jp
mov
loop
aas
dec
push
and
dec
out
pop
mov
vpextrw
lds
mov
adc
ficomps
cmp
sbb
test
cmp
or
out
enter
outsb
outsl
rcl
loopne
stos
jle
xchg
inc
fstpt
jno
jo
dec
stos
adc
sbb
dec
fs
leave
xchg
iret
jmp
push
mov
lcall
xchg
nop
cmp
xor
fcoms
dec
jae
and
jp
pop
fsub
add
sub
daa
mov
jnp
clc
call
dec
xchg
test
xchg
mov
loopne
xchg
stos
test
or
out
and
push
sub
mov
loop
inc
sti
shl
leave
xchg
mov
sbb
jae
sbb
mov
mov
frstpm(287
lock
push
orl
mov
inc
sub
dec
test
xchg
and
adc
xchg
add
testl
cmp
roll
xchg
lock
rorl
test
mov
into
cmp
lret
adc
pop
mov
movsb
std
sarb
fs
add
roll
inc
test
mov
repnz
sbbl
add
in
add
out
and
add
mov
xchg
jo
pop
jmp
mov
adc
fstp
push
jo
out
mov
loopne
test
js,pt
test
andb
inc
jle
je
shlb
jno
mov
add
mov
adc
push
mov
ficomps
gs
inc
cli
push
push
jne
pop
mov
pop
out
inc
mov
mov
loop
cwtl
daa
xchg
push
inc
mov
in
mov
in
out
test
inc
add
aas
sub
add
clc
xchg
cmp
pop
and
mov
dec
popf
repnz
mov
repnz
andb
lds
push
aad
dec
aaa
jl
or
pop
leave
in
cmp
sbb
outsb
ss
mov
loope
adc
cltd
test
mov
sti
shll
mov
test
mov
pop
cmp
scas
test
daa
in
mov
jge
lcall
xchg
dec
jp
sub
cmp
push
stos
stos
popa
dec
add
sub
add
push
lcall
push
or
pop
test
stos
jno
xchg
jmp
jmp
pop
lds
mov
lcall
adc
mov
popa
insb
dec
sbb
dec
sub
test
aad
cmpsl
and
cld
aam
sbb
mov
or
push
adc
aas
lds
repz
push
mov
inc
dec
mov
xchg
ja
mov
mov
and
mov
jbe
sub
dec
insl
push
cmpsb
daa
xor
aas
out
jecxz
jnp
dec
inc
push
cltd
or
mov
and
inc
add
mov
std
mov
push
push
sbb
dec
dec
and
insl
hlt
jmp
js
xor
or
add
loop
sbb
mov
sbb
into
adc
pop
scas
adcb
add
sti
ss
jl
int
lods
or
dec
sub
into
pop
inc
jmp
push
leave
xor
adc
add
add
sub
pop
sbb
cwtl
xchg
jb
jne
mov
out
jne
call
aas
pop
clc
pusha
jb
stos
jle
push
xor
mov
and
fs
adc
test
imul
fwait
cwtl
sub
out
scas
stc
inc
push
xchg
xor
and
sub
jnp
dec
mov
loope
jno
dec
leave
stos
add
cs
dec
inc
mov
or
mov
gs
pop
cmpsl
push
jge
mov
sbb
dec
mov
into
aad
lcall
ljmp
loop
std
sub
in
aad
push
int3
and
mov
mov
xchg
pusha
mov
test
rorb
fs
mov
fnstsw
clc
out
sbb
sti
xchg
lret
fildl
movsl
int3
sbb
mov
rcrb
or
mov
inc
das
out
pushf
jmp
add
out
adc
outsl
pushf
clc
or
into
es
mov
fs
stc
cwtl
sub
fstps
in
je
push
insl
bound
popf
je
adc
sahf
pop
inc
bound
cmp
cmc
in
pop
das
stos
push
mov
adc
bnd
test
jg
pop
xor
jbe
insb
xchg
repnz
mov
xchg
jmp
repnz
jecxz
lock
std
int
les
push
fwait
push
mov
and
jae
out
xchg
pop
js
lods
mov
pop
pushf
sub
ss
call
sub
xlat
stos
jae
insb
ljmp
cmp
sbb
cmpl
sbb
inc
pop
mov
xor
enter
xchg
jb
fbld
xchg
in
lahf
lods
shrl
pop
lret
and
mov
or
jmp
lods
inc
and
outsb
push
into
push
adc
sarb
and
sbb
dec
inc
sub
jbe
mov
sbb
loope
mov
xor
inc
mov
jmp
in
xchg
shrl
loopne
mov
shrb
sarl
insl
adc
cmp
stos
add
xor
inc
nop
mov
pop
add
shl
or
and
out
pop
xorb
and
jecxz
inc
cmp
jmp
push
add
inc
inc
mov
sar
add
push
ret
rolb
sti
inc
js
or
mov
popf
and
cmc
fs
add
cmpl
cwtl
mov
xchg
add
ja
xchg
lret
shl
not
stc
or
in
push
adc
popa
jge
loop
icebp
jns
cmp
xor
fwait
arpl
arpl
push
sbb
xor
push
imul
and
and
push
insl
mov
xor
cmp
test
movsb
cmp
je
adc
fsubrp
fisttpll
adc
leave
imul
mov
xchg
cmpsb
cmp
inc
es
xor
inc
jb
mov
adc
cwtl
push
stos
out
lds
inc
addr16
fisubs
jmp
clc
or
xor
lret
push
push
repz
pop
mov
decl
or
xchg
sbb
enter
clc
andl
outsl
inc
fiaddl
xor
stos
xor
nop
lcall
in
fwait
stos
pop
mov
mov
jnp
out
test
and
sub
jg
leave
js
lock
dec
or
aas
fwait
mov
mov
cmpsl
or
cmp
xchg
push
sbbl
insl
add
fs
jmp
mov
mov
pop
fisttpl
adc
into
mov
inc
cltd
xor
sbb
nop
imul
adc
cmp
xchg
adc
jnp
mov
cmpsb
pop
outsl
outsb
into
lahf
inc
hlt
decb
mov
inc
fucomi
dec
inc
or
shlb
fisttpll
mov
inc
loope
inc
xchg
es
xchg
xchg
ret
sbb
insl
mov
enter
bnd
add
mov
jecxz
out
call
pop
dec
sub
sbb
icebp
push
das
les
mov
notl
into
addl
mov
aaa
loop
push
pushf
add
xor
jae
cmp
inc
out
jbe
in
daa
mov
fsubs
repnz
add
pop
sbb
or
ds
call
jge
or
rorb
jns
sub
xor
ffree
or
xchg
out
fs
stos
addr16
jae
cmp
mov
aad
push
test
orb
dec
jmp
test
push
out
pop
push
add
inc
pop
lods
jae
or
repnz
movsb
das
add
movsl
dec
loop
mov
popa
movsl
sub
xor
dec
test
mov
push
add
lea
inc
mov
cmp
out
out
push
mov
sarl
xchg
shll
daa
xchg
pop
out
lret
adc
add
outsb
leave
jae
push
int3
nop
inc
lea
or
adc
mov
in
aaa
inc
add
mov
xlat
xchg
std
cs
std
add
mov
stos
or
je
or
mov
and
pusha
shr
je
in
inc
mov
and
mov
xlat
lcall
lods
test
jl
pop
mov
into
loopne
test
xor
mov
mov
loope
xor
popa
lret
pop
mov
test
dec
pop
push
push
in
jo
pop
les
jnp
adc
ret
pop
lret
pop
xor
dec
xor
bound
fistpll
imul
punpckhdq
jnp
mov
xchg
bnd
push
out
xor
out
mov
cmpsb
cmp
mov
daa
jge
ds
inc
test
in
aad
adc
and
inc
leave
rclb
std
jge
cmp
incl
sbb
jb
xchg
add
fnsave
popf
push
add
mov
pop
fsubrl
or
aaa
cmp
jle
cmpb
jge
and
mov
xchg
mov
push
dec
push
sbb
xor
wbinvd
mov
testl
or
dec
test
enter
imul
mov
mov
repnz
stc
pop
jecxz
lcall
ret
int3
push
mov
lods
sarl
push
pop
call
fs
or
mov
jg
mov
dec
xchg
in
or
cmp
aas
iret
fnstsw
fdivrs
sbb
shlb
clc
mov
jg
push
imul
pop
inc
cld
lods
insb
call
pop
xchg
aad
dec
pop
fnstenv
or
movsl
pop
lea
ss
sbbl
out
test
sub
cmp
push
sbb
fs
aas
std
outsl
sbb
test
scas
inc
and
xchg
pushf
shrb
pop
bound
ss
mov
xor
mov
popf
cmp
aam
lahf
roll
out
mov
jne
daa
push
mov
popf
jne
inc
add
and
pusha
push
pop
pop
je
pop
jg
enter
addr16
clc
inc
xor
mov
scas
mov
jns
cmp
xchg
rcrl
loope
fimuls
xor
iret
fldl
mov
mov
jecxz
adc
loope
and
sub
in
mov
popf
out
or
imul
fstps
arpl
jne
xchg
shlb
pop
sub
add
dec
fwait
jb
mov
mov
push
inc
sub
jmp
je
add
cmp
ret
sbb
xchg
sub
sub
lock
popf
jge
in
add
lahf
loope
sub
cltd
js
jno
mov
arpl
and
jp
xchg
sub
mov
xor
inc
jns
mov
int3
addl
loope
iret
fimull
xlat
add
xor
negl
pusha
jnp
push
mov
les
mov
mov
xor
and
stos
or
popa
rep
cmp
pushf
mov
test
xlat
inc
pop
test
test
imul
loopne
cld
lock
push
scas
jmp
or
dec
inc
push
sub
out
sub
xor
sbb
mov
test
pushf
inc
cwtl
lea
stc
inc
and
aaa
popf
stos
daa
jae
adc
pmuludq
add
cmpsl
cmp
xchg
mov
movsb
aaa
sub
inc
jle
xchg
sbb
or
lcall
sbb
sbb
xor
mov
lret
fidivrs
rol
push
and
cmpsl
mov
ljmp
add
and
add
sbb
ret
stc
mov
xchg
mov
mov
jb
xor
xor
mov
adc
push
nop
test
adc
inc
pop
popf
fisttps
xchg
imul
out
test
test
jp
push
aad
insl
or
push
notl
cmpsl
stc
cwtl
or
xor
xchg
shrl
outsl
mov
jl
cltd
fidivs
pop
popl
mov
mov
dec
inc
out
movsl
sub
cmp
aaa
jmp
jns
ret
fldenv
sbb
push
ret
shl
mov
leave
out
fdivrs
mov
icebp
outsl
mov
mov
and
jecxz
repnz
sbb
das
fcoml
test
mov
pop
cmp
call
dec
push
mov
add
and
aas
in
mov
rcrl
mov
scas
and
outsb
xchg
stc
xor
sbb
in
mov
xor
sbb
sti
pop
loop
or
out
les
cmp
jecxz
movzbl
addb
out
cmpsb
bound
dec
add
mov
jns
mov
jns
test
sahf
cmpsl
cltd
inc
shll
mov
stos
cmp
es
loop
sub
pop
outsb
xor
push
enter
je
dec
cmp
mov
push
push
sub
mov
insb
add
daa
adcl
pop
cmpsb
into
sbbb
jge
sbb
aaa
add
xorb
jo
fisubs
sbb
and
fistpll
stc
js
add
add
pop
stc
dec
iret
mov
xor
lcall
faddl
aad
cmpsl
imul
add
dec
pop
add
inc
iret
pop
mov
mov
ret
mov
mov
inc
mov
inc
push
mov
dec
mov
ficoms
insb
fdivrl
pop
les
inc
cmpb
cltd
mov
hlt
outsl
mov
jge
jp
repnz
addr16
sub
cmp
stc
std
mov
xchg
and
jcxz
jmp
add
cltd
insb
jne
sbb
lahf
stc
inc
xor
inc
pushf
loop
xchg
loope
data16
fists
xlat
mov
push
cmp
orb
sbb
cmc
fdiv
insl
jnp
mov
jl
pop
loope
xor
int
push
mov
stos
dec
mov
cmpsl
idiv
mov
xchg
jns
jle
xchg
repz
ss
xor
mov
outsb
mov
xor
lock
xchg
retw
mov
scas
xchg
dec
mov
je
push
into
push
sub
inc
mov
push
ljmp
or
pop
cmpsl
test
pop
jle
lcall
add
push
and
loop
call
imul
cmp
adc
outsb
or
cmp
lods
rcrb
pop
aaa
xor
cmp
jnp
dec
ds
sahf
fildll
pop
out
push
or
enter
decl
out
and
mov
inc
jbe
mov
adc
xchg
sub
and
mov
push
dec
sbb
add
sub
pop
pusha
repz
incl
sti
jg,pn
dec
daa
push
xor
add
imul
fmuls
stos
and
mov
jns
xchg
sbb
pusha
adc
sbb
inc
sti
pop
and
mov
push
mov
and
in
shr
xchg
dec
lods
enter
push
cmp
mov
popf
adc
popf
out
cltd
frndint
gs
ja
jle
jo
jae
idiv
arpl
movsb
or
movsl
push
cli
push
cmp
pop
push
jo
loope
mov
or
lds
mov
pushf
adc
insb
mov
outsl
mov
mov
jl
add
pop
inc
dec
xchg
imul
xlat
push
out
adc
lods
lods
dec
imul
jns
pop
mov
out
or
push
mov
daa
data16
dec
add
inc
mov
adc
mov
out
je
adc
lret
sti
xchg
push
pop
pusha
movsb
push
cmpsb
ror
cld
xchg
in
and
inc
jl
inc
and
mov
pop
stos
test
sahf
pop
push
cmp
imul
jge
sub
scas
dec
adc
fistpll
mov
mov
xor
mov
adc
sbb
and
movsl
dec
ret
jne
in
enter
cmp
aas
dec
ret
sbb
in
and
cmp
mov
xchg
insl
inc
cwtl
push
mov
mov
sub
lds
daa
jb
pop
xor
js
push
fld
sbb
mov
mov
dec
and
cwtl
mov
fisubl
out
popf
mov
inc
jl
push
js
gs
dec
cmpb
inc
xchg
int3
imul
cmc
cli
or
stos
loope
lret
mov
sub
sbb
xor
lods
push
dec
mov
nop
ss
mov
out
mov
andl
sar
dec
movb
inc
add
mov
sub
fwait
call
test
adc
inc
cli
imul
adc
int3
das
das
imul
shl
or
add
push
ficompl
ljmp
dec
sbb
callw
push
or
dec
jge
cmp
jmp
cs
cwtl
mov
stos
sub
inc
xchg
push
xchg
push
dec
mov
jle
and
addl
push
mov
lret
pop
push
push
pushf
xchg
rcll
pop
scas
lds
push
jge
dec
shll
pop
ljmp
push
fadd
cwtl
loop
jne
bound
or
insl
sahf
fsubl
in
or
push
push
movsb
test
cmp
addl
jns
repnz
cmp
repz
rcl
ret
rorb
cmp
fcmovnb
or
sub
loopne
pop
xlat
cmp
ret
test
mov
inc
xor
mov
xor
xlat
or
mov
movb
les
out
adc
sub
ljmp
mov
fldpi
repnz
xor
into
mov
test
cmp
ljmp
and
test
insb
jnp
jo
out
sub
jl
xorl
data16
leave
and
in
lahf
imul
hlt
sbb
cmc
out
add
leave
add
sbb
loopne
sbb
test
scas
inc
mov
aas
and
mov
ja
sbb
mov
lock
cmp
and
cltd
adc
lock
push
mov
aas
movsl
jmp
mov
fnstsw
hlt
scas
add
pop
iret
jl
fwait
fs
cmp
rorl
rcrb
pop
rorl
mov
add
push
fs
and
xor
push
lods
xor
movsb
xchg
shll
daa
popa
fwait
sbb
in
test
cs
jecxz
cmp
lds
lds
loopne
mov
mov
mov
shrl
add
mov
pusha
xor
jecxz
repnz
ss
mov
mulb
cli
gs
fs
int
loope
and
pop
sub
int
jbe
mov
rorb
pop
dec
dec
lods
das
xchg
ret
or
add
fsubrs
dec
cli
int3
add
xchg
pop
jmp
stos
fadds
in
and
jnp
xchg
rorb
and
dec
adc
sub
mov
insb
pop
add
push
cmp
rorb
mov
sub
or
and
push
mov
movsw
and
xchg
fld1
cmp
lea
jne
jg
push
push
aaa
gs
or
xchg
fs
insl
add
enter
ja
mov
into
or
clc
dec
push
addr16
inc
cs
inc
scas
jne
outsl
mov
mov
xchg
cmp
push
ljmp
mov
shlb
call
aaa
add
jle
mov
das
add
imul
or
jp
push
lea
push
dec
sub
jns
xlat
sti
jne
rolb
fucomp
js
testb
jle
mov
shll
imul
pusha
clc
cmc
mov
sub
cmp
int
mov
cltd
imul
add
mov
add
push
adc
mov
push
jno
es
stos
sahf
testl
xor
jbe
push
movsb
mov
popa
pop
pop
imul
ljmp
enter
repz
push
lock
aam
add
lds
stos
dec
pop
sahf
out
jo
imull
sub
sbb
outsl
sub
jne
bound
xchg
xchg
mov
mov
pushf
shr
sbb
outsb
pop
outsl
aad
pop
sub
jns
inc
test
call
lea
pop
pusha
stos
aam
lods
mov
and
cs
or
xor
mov
cs
sarl
mov
and
add
mov
xchg
cmp
xor
into
sub
ja
xor
jle
cmpsl
imul
fstp
std
insb
push
mov
mov
add
mov
mov
icebp
jecxz
out
sub
sahf
idivl
cmp
enter
nop
dec
mov
aaa
push
imul
fldl
ljmp
sbb
or
sbb
test
mov
sbb
xchg
add
lret
cmp
scas
movnti
mov
jns
mov
xchg
shl
sbb
or
aaa
mov
aad
sub
jae
test
fidivl
mov
dec
cmc
jmp
imul
kandnb
inc
sub
leave
divl
test
outsl
test
pop
in
cmp
mov
divl
and
cwtl
push
sbb
dec
fstpt
mov
test
enter
clc
sarb
mov
jge
xor
sbb
push
xor
pop
daa
fidivs
shl
into
add
pop
out
cmp
xchg
hlt
or
insb
ja
sub
fmul
sub
and
cmc
lea
xor
xchg
cmp
out
test
cmp
xchg
cmp
pop
test
jns
cltd
aas
test
xor
bound
insl
push
push
mul
pop
adc
repz
inc
int
rolb
jmp
cmpsl
nop
mov
test
adc
cli
jle
sub
fdivp
int3
fdivr
ret
insb
ljmp
loopne
imul
les
lea
pop
lds
add
repnz
inc
mov
shrb
sti
mov
sbb
repz
insb
sbb
mov
jl
jne
es
rolb
and
out
je
arpl
stos
pop
xor
sub
cmpsb
pop
iret
stos
sar
and
outsb
sar
cld
pop
daa
push
std
pushf
cmp
inc
outsb
or
or
pop
jbe
icebp
in
mov
test
mov
ja
call
outsb
aad
in
out
adc
fdivrl
lcall
adc
push
adc
jo
adc
dec
mov
mov
adc
insb
mov
adc
clc
adc
dec
or
test
add
jbe
cmpsl
adc
imull
fists
aam
test
sar
inc
mov
mov
mov
in
push
fldt
jno
jecxz
xchg
add
stos
fildl
int
iret
mov
rcrl
mov
push
jnp
fstpl
mov
or
xchg
mov
cmpb
push
mov
push
adc
into
cmp
lds
xchg
xchg
cwtl
jnp
arpl
or
cmpl
aaa
add
call
out
les
loopne
jge
push
xchg
das
movl
xor
jg
stos
stc
cmp
popa
sbb
sub
mov
mov
add
mov
push
fdivs
das
or
iret
fmull
test
leave
test
outsl
pop
adc
movsb
inc
pop
ret
jne
stos
es
data16
push
adc
push
add
jle
sbb
js
clc
les
xchg
out
push
out
ds
or
xlat
push
mov
imul
xchg
in
out
shrl
jb
rcrb
inc
jg
cli
mov
cmp
insb
push
clc
jno
add
mov
sbb
imul
lock
cmpsl
jge
sbb
jle
mov
mov
imul
jae
lods
or
adc
sbb
push
sub
jne
imul
les
sbb
bnd
loop
mov
stos
adcl
cltd
insb
ljmp
inc
aam
pusha
jne
xchg
rcrb
lcall
push
lock
inc
mov
lods
out
jle
cmp
or
and
pusha
pop
sub
cmpsl
test
xchg
loop
les
ret
pop
cmp
lods
loope
lods
jnp
lret
lods
icebp
cmpsb
cmc
cmpsl
xchg
mov
lret
pop
call
mov
aaa
ss
jl
jne
mov
xchg
add
xor
sbb
sub
pop
es
push
imul
push
clc
out
pushf
mov
jo
sbbb
fidivrl
ja
movsb
pop
test
stos
mov
rolb
jbe
xor
mov
insl
sti
cmc
imulb
dec
pushf
scas
cli
cltd
jae
test
cmc
fdivl
sbbb
mov
sbb
inc
xchg
pop
pop
pop
jle
mov
jecxz
stos
push
aaa
leave
call
mov
mov
and
sbb
aad
push
and
fistpl
ret
mov
aaa
cmpl
outsb
popf
dec
mov
xor
mov
sub
pusha
mov
dec
pop
push
xchg
cmc
fistl
stos
aas
jno
out
idivb
stos
push
or
ja
add
ss
leave
mov
mov
pop
cmp
dec
loope
es
ret
jmp
out
or
jp
das
cld
in
cltd
pusha
sahf
cs
lret
cmp
cmp
adc
lea
or
mov
stc
add
cs
rcrl
dec
rolb
xchg
sbb
repz
mov
mov
aaa
or
shrl
xlat
shrb
xor
sbb
fmuls
adc
mov
pop
orl
ret
pop
jp
xchg
sub
jns
into
pop
ja
sub
dec
in
int
inc
cmp
adc
cmpsl
sub
add
inc
cli
dec
dec
imul
jp
add
sbb
repnz
imul
jl
arpl
ljmp
pushf
pop
das
aam
xchg
cld
repnz
lea
mov
jo
daa
clc
scas
mov
xor
es
cmpsl
pushf
popa
je
and
leave
jle
je
jb
ljmp
xchg
cmp
lret
push
dec
push
sbb
sbb
mov
bound
xlat
leave
mov
push
xchg
insb
xchg
or
movsl
xor
cmpsl
out
mov
jg
sub
push
push
sbb
jns
push
ret
mov
loop
pushf
add
aam
scas
inc
clc
lods
sub
repz
fnsave
dec
xchg
jle
xlat
jmp
int3
out
dec
sahf
lret
idiv
mov
ss
jb
pop
ret
mov
and
nop
nop
xor
jbe
sahf
cmpsb
jmp
cmp
push
push
jno
pop
lock
filds
or
or
cs
jo
filds
mov
adc
sub
dec
mov
shr
lea
std
xor
repz
xor
dec
test
leave
into
dec
stos
mov
sub
push
or
cmp
mov
mov
inc
lods
mov
mov
xchg
mov
js
push
pop
in
les
icebp
pop
push
stos
lods
sbb
out
cmp
aad
mov
mov
arpl
test
dec
pminsw
sbb
dec
repz
adc
adc
andb
pop
pop
movsb
fnsave
sahf
lods
aam
int3
or
inc
push
cmp
fcomp
rcll
cmp
ffree
scas
adc
shll
inc
out
hlt
cmp
jge
lds
inc
bound
scas
sub
xor
xchg
pop
push
stc
shll
xchg
jno
sti
lahf
pop
mov
dec
shll
xchg
adcl
sbb
cmp
jecxz
sub
pop
jle
arpl
xchg
pop
int
enter
fcompl
loop
adc
cmpsb
sub
jnp
ret
lds
mov
pop
lcall
fwait
push
rcrb
rolb
cmpsb
and
bound
cwtl
mov
jecxz
loope
out
scas
movsb
cmp
sar
pop
int3
cmpsb
and
imul
test
fists
es
das
jne
clc
jg
je
loope
sub
sti
loop
pop
sub
adcl
xchg
ficoms
scas
mov
fs
inc
pop
or
imul
fs
xor
es
mov
cmp
loop
cmp
add
push
addr16
insb
sub
inc
pop
push
jbe
mov
mov
jg
jge
sub
fistpll
pop
add
mov
leave
mov
icebp
imul
cmc
add
testl
lret
dec
jge
repz
cmp
or
in
ss
loop
sub
outsb
pop
insb
dec
dec
push
lock
int
cmpsb
inc
mov
push
lods
shlw
rclb
fidivrs
into
mov
test
jo
outsl
in
add
lock
mov
sahf
sbb
sub
std
mov
sub
mov
pusha
ret
shl
sahf
dec
xlat
aad
jo
mov
data16
loopne
pop
daa
add
movsb
pop
sti
mov
mov
pop
out
daa
add
push
xchg
loopne
xchg
push
add
jo
push
mov
hlt
and
adc
inc
fistpll
mov
ficoms
xor
inc
or
in
xchg
int
xor
push
mov
adc
adc
jns
shrb
mov
adc
xchg
pop
jg
lret
sub
jge
xor
jbe
gs
jmp
sub
pop
pop
ret
in
adc
pusha
call
xchg
adc
je
dec
mov
arpl
repz
lcall
mov
mov
fbld
sbb
jae
or
xor
pushf
push
scas
dec
imul
mov
sti
je
mov
jle
scas
jecxz
cmp
xlat
push
cmp
imul
arpl
mov
stos
cmp
mov
sbb
xchg
cmpl
mov
mov
dec
inc
pop
mov
fnsave
jg
push
iret
ror
fxch
xor
jg
aaa
int3
in
push
iret
lret
lea
xor
jnp
outsl
pushf
clc
jb
cmp
js
adc
daa
jbe
xor
mov
xchg
mov
cld
fisttpll
cmp
mov
inc
loopne
sbb
pop
xchg
cmp
gs
mov
stos
push
iret
fxtract
inc
push
icebp
inc
mov
adc
cmp
or
sbb
jmp
outsl
xor
mov
push
adcb
cmpsb
jne
arpl
sbb
iret
and
pop
add
stc
popf
sti
mov
ret
mov
mov
and
ret
push
xchg
cmp
xchg
sub
dec
xchg
pop
jns
jmp
sub
scas
jmp
push
popf
dec
imul
leave
adc
fisttpll
js
cs
lret
imul
pop
imul
push
mov
add
pop
push
fisttps
push
in
loope
js
movsl
js
push
movsl
lods
push
jmp
mov
adc
popw
sbb
jp
or
adc
jne
icebp
out
lea
arpl
mov
inc
inc
repnz
jl
addl
cmp
mov
orb
pop
negl
push
jo
sti
dec
inc
mov
lahf
pushf
jno
daa
push
bound
xor
rcr
adc
push
rcrb
adc
cmp
sub
dec
cld
mov
fwait
mov
jnp
fs
sbb
dec
in
mov
lea
lods
mov
ret
xchg
mov
mov
les
xchg
iret
out
ret
shl
test
imul
lret
lcall
cwtl
xor
call
in
jb
imull
jl
out
cmc
jo
xor
jo
inc
pop
imul
roll
aas
sbb
ss
fnstenv
jecxz
pop
insb
mov
mov
mov
inc
popf
popa
enter
mov
sub
jecxz
data16
fadd
inc
cmp
ds
stc
cmp
call
lret
aad
movsb
xor
lcall
mov
jo
data16
aas
int3
inc
fucomip
pop
lods
xorl
jo
in
cmp
or
push
outsb
dec
dec
or
or
enter
xchg
dec
sbb
pop
inc
pop
and
test
pop
insb
lahf
sub
ds
and
mov
cmp
clc
ret
sub
mov
out
adc
mov
ret
mov
dec
pop
roll
imul
sahf
mov
cmp
dec
sbb
add
movsb
daa
cwtl
mov
lcall
sbb
andl
lret
dec
popa
fsts
adc
outsb
jmp
xchg
jo
dec
rcrb
or
jnp
sbb
add
sti
jnp
adc
rorl
inc
or
adc
and
out
dec
add
leave
nop
ret
sbb
xchg
lock
loop
add
push
movsb
xor
sub
fcmovnu
pop
jmp
pop
xchg
xor
sub
push
dec
jb
push
mov
enter
mov
jbe
dec
scas
cltd
xchg
lret
mov
cmpl
pop
xchg
nop
jmp
pop
fs
inc
add
insl
insl
inc
ss
aas
leave
cmp
test
addr16
jno
sbb
or
and
mov
test
shl
cmpb
inc
stos
adc
and
nop
add
and
imul
test
fistl
pusha
xor
movsb
xchg
rcll
jecxz
fwait
iret
lahf
sbb
jg
xchg
xlat
sbb
ds
jbe
sbb
inc
xchg
cmpsb
fiadds
int
aam
loop
and
push
lcall
add
jp
push
jb
out
cmc
and
lods
push
sub
int
cmp
jle
or
sub
jbe
ffree
lret
sub
push
negb
sbb
sbb
sub
cmp
sbb
sub
mov
cmp
pop
mov
mov
fisttps
inc
inc
in
cs
cmp
fadd
or
xor
jg
iret
fsubs
pop
sbb
sub
mov
cmp
pop
icebp
cli
rolb
mov
in
jg
clc
sbb
jl
lds
out
arpl
insb
aaa
stos
add
lock
xchg
push
xchg
dec
sub
out
ss
das
pop
xchg
sub
mov
movl
and
cmc
int3
push
mov
xchg
jl
mov
push
mov
or
or
imul
push
and
mov
xchg
lret
push
aas
jbe
mov
jp
mov
cmp
push
or
shlb
mov
xchg
les
fstps
mov
adc
mov
nop
dec
arpl
cmpsb
iret
sbb
mov
pop
cmp
mov
test
dec
out
add
xchg
push
add
inc
pop
hlt
out
fidivs
jae
lods
mov
aam
jge
dec
pop
and
popf
cmpsb
cmp
pop
fistpll
cltd
push
jge
pop
shl
or
cld
pop
stos
push
data16
add
dec
dec
push
and
icebp
lods
leave
lds
das
sub
sub
mov
loopne
xchg
icebp
aad
iret
in
test
notl
lock
test
in
xor
mov
aad
sbb
push
insl
mov
insl
adc
or
dec
insb
outsb
lret
aaa
nop
aas
sarl
call
orl
jo
xor
shll
shlb
pop
and
ljmp
cmp
xchg
cs
pop
push
sub
mov
jns
cmpsb
cmp
mov
call
inc
aas
xor
xchg
fidivrl
outsl
xor
in
mov
inc
or
adc
scas
jae
xchg
adc
loop
sub
mov
insb
dec
sbb
dec
sti
adc
xlat
push
bound
ret
xor
pop
movsb
in
mov
mov
xchg
ljmp
mov
push
jle
dec
jo
ss
and
xor
rcll
rorl
mov
insl
jb
xchg
fsubs
in
cmp
inc
outsl
cmc
sub
xor
mov
adc
and
ret
xor
aam
fbld
cmpsl
push
add
cmp
mov
dec
lds
in
or
push
pop
flds
test
je
push
dec
add
cmp
inc
filds
inc
dec
dec
mov
xor
jmp
daa
pop
mov
fimuls
enter
lahf
dec
pop
push
scas
sub
cmp
push
loop
test
sub
ja
xchg
popa
mov
or
lods
xor
jns
lock
scas
pop
sub
mov
ds
xchg
cmp
adc
pop
sbb
popa
cmp
mov
jmp
stos
fbld
mov
push
fisttpl
fsubrp
mov
data16
cmp
cmpsb
test
popa
mov
mov
mov
lods
ret
cmp
adc
sbb
mov
js
jo
cmpsb
adc
pop
xchg
cmp
pop
push
xor
pop
ljmp
sub
sbb
mov
mov
jecxz
jnp
pushl
pop
repnz
nop
mov
jmp
fcomip
add
scas
insb
dec
rorb
loop
push
xchg
fwait
jno
fmuls
push
mov
fdivs
jns
loopne
mov
xorb
mov
xchg
sbb
xchg
rolb
cmpsb
test
lds
iret
mov
js
jmp
mov
add
mov
dec
add
dec
fistpl
fnstenv
test
lret
pop
jle
cmc
mov
cmp
popl
pushl
sub
mov
and
mov
cmp
roll
push
lock
rcrl
stos
ljmp
xchg
insl
leave
int
xor
mov
rcr
jmp
popa
dec
clc
cld
aam
jne
in
adc
mov
cmp
pop
clc
sub
mov
jno
ljmp
addr16
cs
shrb
dec
mov
enter
sub
sub
inc
jb
lea
jae
dec
mov
xlat
aam
lods
add
imul
fsubrp
xchg
enter
mov
xchg
jmp
out
and
jl
std
lret
pop
pop
jmp
sbb
aaa
sbb
dec
cmp
cld
enter
out
cmp
cltd
push
xor
fistpl
jno
sub
cld
lret
popa
jb
add
mov
mov
mov
out
sbb
je
leave
addr16
sbb
add
adc
inc
dec
das
sbb
jp
pop
mov
das
and
incl
push
daa
or
lret
out
sub
movsb
dec
mov
mov
pushf
adc
iret
fistpll
push
daa
test
adc
in
lods
fdivrs
repz
repz
mov
xor
and
lea
popa
cmp
push
inc
testl
iret
idiv
insb
fistps
xchg
mov
nop
push
repnz
dec
jno
adc
lahf
insb
in
inc
and
and
cmp
sbb
mov
fidivrl
mov
jb
out
aaa
std
adc
add
add
movsb
ficompl
lcall
insb
pop
js
cmp
and
nop
jne
lret
pusha
sti
int3
lret
mov
lds
and
cwtl
sbb
and
sbb
sarl
popa
mov
ficomps
push
fdivrp
add
xchg
sbb
hlt
or
xchg
rol
push
xchg
lock
in
cmp
scas
jmp
ja
popf
movsb
cmp
lahf
insl
xchg
sbb
xchg
jne
pop
fnstenv
imul
adc
rcr
ret
xor
sub
es
loop
hlt
or
push
sbb
sub
loop
hlt
mov
stos
fisttpll
nop
adc
call
adc
shrl
jmp
mov
xor
push
mov
andl
in
jns
inc
sbb
lret
and
jmp
mov
das
in
lods
mov
mov
xchg
mov
enter
lock
lahf
inc
cmp
call
imul
add
push
xor
jne
pop
xchg
pop
out
out
or
cmpsb
js
mov
mov
push
mov
flds
xor
aad
dec
add
cld
daa
push
adc
lret
je
xor
mov
push
test
ret
out
sub
ret
andb
movb
adc
mov
add
shl
fcmovbe
dec
repz
mov
pop
movsl
cmp
pop
icebp
aad
cs
inc
cmp
xor
or
cmp
and
fldt
in
addr16
mov
jns
in
fidivrs
push
ret
pop
xlat
sarb
rol
jecxz
popf
sbb
fisubrl
or
testl
out
dec
xchg
xchg
enter
lods
sbb
adc
dec
inc
notl
fs
dec
and
and
inc
or
vpunpcklqdq
sbb
or
fimull
or
repz
ss
and
sbb
imul
mov
lods
lock
mov
lods
lret
inc
stc
movsb
push
cmp
arpl
int
mov
and
adcb
jp
mov
mov
add
adc
mov
out
or
outsb
dec
pop
in
sbb
xor
and
enter
and
shl
xor
push
pop
jg
outsl
mov
jg
xchg
sub
pop
scas
jb
pop
mov
push
adc
leave
push
dec
mov
fs
add
dec
sbb
cli
dec
sub
mov
repnz
and
sahf
push
cwtl
xchg
xor
pop
mov
jnp
push
dec
jecxz
xor
and
add
mov
push
push
enter
orps
dec
pop
stos
cwtl
mov
andps
dec
mov
cld
test
sub
or
xlat
fadds
adc
iret
lahf
or
vmaxpd
add
xchg
dec
ds
push
mov
cmpsb
js
sub
int3
add
mov
movsl
ret
jmp
push
sbbb
repnz
cmp
push
pop
fistpl
adc
in
clc
int3
jo
int
insl
stos
push
push
add
inc
adc
ret
sub
mov
test
adc
jo
sub
pop
aad
addr16
mov
mov
or
sbb
dec
add
jb
pop
mov
inc
les
mov
xchg
cmp
push
pushf
xorl
in
cs
in
movsl
imul
shrl
push
jl
xor
mov
test
or
push
pop
mov
add
fidivrs
mov
add
into
dec
dec
std
push
in
jbe
scas
inc
decb
add
pushf
in
andb
test
ja
aas
fidivl
pusha
and
lret
mov
out
sbb
testl
mov
adc
add
jp
gs
jnp
xor
mov
dec
push
int3
add
call
ss
xor
arpl
insb
sub
stos
fwait
arpl
mov
movsb
mov
pop
imul
xor
inc
dec
rcl
xor
pop
cld
lret
push
dec
sub
pushf
jmp
or
test
sbb
cmp
popf
out
pop
push
aas
dec
hlt
test
jns
cmp
inc
shl
cmp
nop
adc
insl
ja
int
js
fdivrs
and
jbe
test
test
f2xm1
and
xchg
int3
inc
mov
iret
sbb
mov
mov
jecxz
mov
sub
adc
mov
inc
imul
dec
sub
jecxz
jae
lea
outsb
popf
std
sbb
and
pop
adc
out
divl
lods
data16
push
pusha
jge
sub
iret
lret
mov
xchg
mov
jb
add
and
add
jecxz
push
je
push
push
jns
popa
sarl
loop
arpl
lods
xchg
xor
data16
loopne
fcmovb
divl
movsb
lds
inc
sbb
and
jo
adc
cmpsl
push
push
testb
orb
fs
subl
cmp
arpl
loopne
add
ret
mov
cmpb
sub
inc
xchg
imul
push
push
test
adc
jp
push
notl
clc
cwtl
mov
mov
scas
or
dec
mov
ror
loope
pop
pop
mov
cmc
push
mov
xor
jg
daa
cmpsb
int
fistpl
push
outsb
scas
outsl
xor
sub
push
add
jnp
rcrl
popa
adc
push
mov
add
mov
fcmovne
ret
loop
movsl
sbb
cld
xchg
push
xchg
hlt
add
pop
movsb
dec
pusha
je
lock
loop
es
xchg
popa
lods
pop
mov
sub
aam
stos
cs
cmp
add
xlat
adc
int
cmpsb
or
je
and
sbb
fs
push
dec
cmp
outsb
jo
jb
cltd
jecxz,pt
inc
push
cmp
in
fmull
lret
iret
ds
clc
cli
mov
adc
jne
sub
ds
clc
out
lahf
aad
inc
lods
cltd
add
shl
mov
loop
lcall
incb
int
imul
push
xor
je
je
pop
jl
sbb
fnstenv
xor
or
mov
push
jns
sahf
push
mov
into
andl
repnz
mov
jnp
je
rolb
mov
repnz
jge
inc
outsb
aam
push
ds
rep
or
les
jbe
or
insb
or
out
repz
add
insl
in
shll
sbb
lods
scas
lret
jo
or
mov
jbe
inc
push
lahf
in
jnp
or
cltd
gs
arpl
imul
xlat
mov
pop
push
jbe
mov
xchg
stc
jo
jbe
pop
fsubl
imul
popa
mov
sub
push
jns
jle
mov
mov
daa
lret
aaa
loop
push
add
popf
sbb
stos
pop
xchg
jecxz
scas
mov
push
pop
notb
adc
or
pushf
mov
dec
call
outsb
jg
mov
bswap
cmp
mov
dec
test
cli
bound
adc
fiaddl
adc
loop
adc
loopne
repnz
cltd
mov
xor
xchg
cs
push
sar
dec
sub
adc
xor
xchg
jns
movsb
add
sar
fwait
out
push
cmc
cmp
push
mov
fsts
mov
outsb
dec
mov
adc
leave
or
int
nop
adc
nop
jne
movsl
ret
xchg
dec
mov
sub
bound
mov
mov
xchg
icebp
xor
xchg
xor
mov
pop
gs
and
xor
and
std
fldenv
dec
lds
cmp
xchg
movsl
jnp
jnp
std
jmp
aad
lcall
movsl
pop
sti
scas
or
roll
repz
push
iret
js
ds
push
mov
xchg
push
leave
jb
jnp
or
xor
mov
enter
mov
jmp
lods
mov
xchg
fwait
ljmp
sbb
cmp
mov
outsl
sbb
xor
push
repnz
sti
outsl
and
sub
dec
out
rolb
push
push
lret
mull
sbb
in
lods
ss
pusha
clc
ret
fadds
jg
push
loopne
mov
repz
loope
loopne
fiadds
stos
add
pop
jnp
adc
imul
divl
push
jne
or
imul
andl
rcrb
adc
dec
or
mov
jnp
ror
in
sbb
lret
dec
cwtl
xchg
lcall
pop
xor
js
dec
dec
ficoml
pop
and
nop
jbe
cmp
testb
gs
je
mov
in
nop
add
insb
out
xchg
mov
data16
rolb
jo
adc
xchg
aaa
mov
mov
xchg
dec
cmp
test
mov
dec
fs
mov
jmp
adc
mov
xchg
xchg
inc
or
lret
les
ss
cmp
test
or
aaa
arpl
push
aam
ja
sti
xor
mov
imul
xlat
out
cmp
xor
xor
fidivl
inc
dec
add
js
jb
cli
fistl
xchg
mov
adc
aam
in
pusha
cwtl
adc
out
movsb
or
add
imul
dec
cli
arpl
ljmp
xor
push
pop
mov
jo
fsubl
add
push
pushf
jp
fwait
inc
mov
xchg
enter
dec
mov
push
nop
xchg
cli
push
flds
adc
ret
stc
lods
push
dec
push
vmaxsd
insb
outsl
mov
mov
incb
stos
lock
or
push
mov
cli
push
xchg
shlb
popa
add
add
push
xchg
je
push
ret
iret
add
add
roll
dec
ret
stos
sarl
xor
pop
lcall
mov
mov
cmp
lods
outsb
mov
cmc
inc
jae
push
mov
xchg
xchg
jl
or
fimuls
fistpl
push
sub
jge
adc
and
ret
jo
cltd
cmc
aas
jo
je
outsb
jo
inc
aam
xor
repnz
bnd
jg
or
cld
call
inc
mov
jnp
out
pop
mov
mov
out
dec
jp
dec
cmp
push
sub
les
push
cmpsl
xchg
test
ja
pop
fisubrs
sbb
iret
inc
push
or
push
ret
and
gs
ret
loop
cmpsb
stc
daa
sbb
add
ss
and
stc
lods
mov
aaa
icebp
ficoms
jns
lahf
and
shl
imul
pop
loope
push
inc
les
stos
popf
jno
ret
aad
rcl
stc
dec
pop
aas
ja
test
cwtl
mov
pusha
mov
mov
lcall
jne
les
dec
lahf
mov
sbb
sahf
aad
lcall
xchg
and
pushl
mov
push
lea
push
xor
pop
nop
jg
mov
daa
jl
jbe
imul
lret
pop
jge
jl
movsb
xlat
lock
add
fsub
faddl
jo
jle
mov
mov
sti
outsb
mov
mov
nop
xchg
jns
cltd
cltd
dec
fcompl
jecxz
adc
add
jb
mov
or
fisubs
push
or
jg
xorb
aad
out
pop
dec
fucomip
shlb
out
sbb
sub
push
xor
sub
out
sahf
and
andl
mov
xchg
je
ds
ljmp
dec
sub
sub
pop
dec
cmc
sbb
pop
dec
cmpsl
pop
test
mov
sbb
or
movsb
and
mov
dec
jns
imul
leave
push
mov
add
dec
imul
jae
testl
mov
int3
or
fs
or
lahf
mov
mov
and
arpl
mov
cwtl
mov
test
jae
xor
hlt
adc
inc
mov
pusha
popf
mov
mov
inc
sbb
out
repnz
push
pushf
push
enter
mov
bound
js,pt
rorl
dec
out
cmp
fwait
movl
sahf
imul
pop
sbb
shlb
stos
insl
out
out
mov
repz
push
popf
add
mov
sar
stos
xor
xchg
subb
mov
imul
test
xor
inc
lods
popa
scas
cmpb
mov
mov
imul
push
jp
push
and
out
mov
rorl
jge
mov
data16
ss
std
jmp
jmp
gs
push
dec
cs
add
cmp
xor
cwtl
test
insb
ret
scas
scas
fldcw
xchg
xor
sarb
push
data16
enter
mov
sarl
repz
outsl
in
cmc
cmp
cwtl
fwait
lds
dec
sub
jg
lea
mov
addr16
xor
imull
add
or
enter
cld
sbb
jne
xor
shl
repnz
xor
or
pop
mov
xchg
dec
rolb
mov
mov
adc
lret
inc
cmp
cmpsb
cmpsl
cmp
and
mov
sbb
xor
mov
rolb
jle
imul
or
pop
arpl
jmp
push
cli
mov
aaa
vunpckhps
rcll
popa
xchg
lods
add
sub
movsb
mov
lods
lahf
xlat
mov
pusha
mov
in
cmp
mov
sahf
lret
pop
mov
add
jge
call
or
loop
or
movsb
js
ret
mov
pop
in
pop
ret
cmp
mov
cmc
stos
int
adc
pushf
sub
out
sub
sbb
xor
push
aad
mov
sbb
adc
mov
scas
lret
repnz
arpl
ror
stos
jg
jne
jecxz
int
xchg
mull
mov
jo
ja
femms
shl
pop
neg
popa
pop
xchg
inc
mov
cltd
push
fcomps
mov
add
insl
loopne
inc
cli
or
cli
mov
outsl
fsubrs
stos
bound
sbbl
js
hlt
mov
repnz
add
jle
aas
daa
jg
cmpsl
lret
mov
divl
andb
xchg
out
xchg
inc
mov
adc
movsl
xchg
add
out
add
ret
dec
xor
jmp
mov
mov
sub
pop
inc
add
dec
pusha
xchg
xorl
aad
mov
rolb
sbb
enter
add
adc
in
xchg
xor
add
fwait
ret
and
leave
aaa
pop
mov
add
xchg
push
pop
addr16
sbb
xchg
dec
push
adc
push
aaa
testl
jnp
mov
adc
xor
mov
dec
jle
or
sbb
xchg
cmpsl
jg
cmp
xchg
mov
xor
mov
mov
and
in
sbb
sahf
mov
sub
mov
xor
adc
xlat
fs
shl
repz
push
push
sti
cmp
jb
jae
ss
pop
std
cli
adc
adc
lahf
ss
mov
jmp
sti
and
pop
jmp
dec
dec
adc
cmp
iret
outsl
clc
mov
data16
stos
clc
mov
movsb
mov
movsl
out
sub
into
test
dec
cld
das
lret
cmp
ja
loopne
pop
imul
aad
insb
pusha
sub
cmpsl
ficompl
and
popf
push
aas
cmp
dec
pop
mov
jle
push
sbb
out
xchg
lds
xchg
std
es
add
ljmp
push
mov
orb
daa
enter
or
push
pop
dec
fstpl
sbb
sahf
or
inc
movb
push
mov
or
dec
dec
rcl
and
nop
ret
je
adc
sbb
or
fwait
stos
fs
xchg
in
cmpsl
mov
jne
mov
iret
jns
jp
cltd
and
repz
adc
xchg
clc
xchg
cwtl
add
lret
lret
push
jae
imul
addr16
mov
lds
imul
cmpsb
jg
push
mov
std
lret
sub
movsl
iret
push
sub
fiaddl
or
xchg
adc
cmc
push
mov
push
notb
xchg
negb
xchg
mov
jl
xchg
pop
loopne
push
push
cmp
pop
je
xor
aad
jae
xor
xlat
rclb
repz
lods
aad
add
pop
jge
movb
add
pop
in
addb
ljmp
jge
clc
mov
add
jmp
jno,pn
rolb
imul
pop
dec
or
int
dec
ja
jnp
inc
mov
xchg
and
ljmp
mov
jl
sbb
push
xchg
dec
pop
mov
rorb
ret
xchg
aad
cwtl
mov
push
data16
cwtl
cli
jecxz
dec
ja
or
add
mov
ror
int
or
aad
insb
gs
insb
lds
test
pop
mov
ret
mov
lahf
sbb
cmp
adc
push
js
test
xchg
jno
sbb
add
add
aaa
pop
xchg
stos
ja
jne
outsb
or
std
adc
dec
xchg
dec
insb
adc
cmp
push
xor
xchg
or
ss
mov
lock
subb
xor
sti
pop
out
and
js
or
mov
jnp
sub
je
ret
xchg
test
inc
mov
lcall
popa
push
cltd
leave
mov
stc
data16
pusha
jmp
je
repnz
faddp
mov
in
jno
push
pop
pop
xor
popf
sbb
call
aad
xor
into
enter
cld
xor
jns
jae
push
xor
or
sbb
out
sbbl
mov
ljmp
test
aad
sarl
jecxz
imul
xor
out
ja
xchg
xchg
xchg
inc
adcb
and
jg
insl
aam
into
pop
cld
cwtl
sbb
outsb
loopne
and
sbb
xlat
and
repz
fnstcw
dec
jb
pushf
cmc
mov
in
mov
movsl
push
mov
pop
outsb
jns
iret
jmp
jl
and
cwtl
pop
cltd
xchg
xor
pop
add
fs
xor
inc
and
add
sarl
jecxz
dec
push
pop
sbb
enter
mov
mov
dec
push
leave
jecxz
add
xchg
inc
xchg
bound
in
jno
fmull
sbb
leave
xor
cli
push
fldenv
rcrl
cmpb
xchg
es
lahf
pop
mov
subl
stos
int3
das
pop
enterw
hlt
bound
cs
fisubl
ja
cmp
fwait
hlt
dec
mov
lret
xorb
and
loope
stos
sub
fcoms
and
je
pop
xlat
adc
inc
in
out
sarl
or
aaa
addr16
sarw
pop
xchg
mov
jns
hlt
testl
sbb
add
inc
mov
sar
sbb
into
ret
push
cmp
call
out
adc
mov
rclb
xchg
xchg
decl
dec
xor
xlat
jl
cld
mov
call
lods
lea
ja
sbb
jns
add
mov
and
pop
and
sub
cltd
stc
mov
in
add
fimuls
fwait
mov
push
mov
popa
int3
call
push
xchg
fldt
add
ret
jp
in
mov
inc
sbb
ja
or
cmc
int
jb
fldl
sbb
loope
fsubp
insl
mov
outsl
ret
and
inc
cmp
lahf
cmp
mov
mov
jmp
jg
jno
sub
addb
insl
daa
mov
sub
and
mov
test
mov
and
idivb
aas
popa
in
jbe
fwait
cs
movsb
es
sub
rcrl
jecxz
stos
fcoms
and
or
cmp
xchg
push
sub
adc
mov
nop
scas
sub
mul
lods
test
push
imul
stc
cld
getsec
mov
les
mov
adc
or
imul
lcall
negl
push
stos
xor
out
test
or
add
int3
nop
outsl
in
test
add
imul
cs
add
stos
cmp
mov
xorl
mov
adc
xor
rcl
sbb
ds
dec
leave
mov
cli
inc
insb
jmp
pop
or
push
scas
push
pop
and
push
adc
pusha
dec
repnz
mov
pop
xlat
jb
inc
mov
mov
xchg
add
sub
aaa
jecxz
outsl
insb
addb
pop
mov
sbb
lahf
jmp
fnstsw
shlb
mov
add
mov
dec
mov
es
sbb
movsb
addr16
adc
loop
xchg
lret
mov
pop
or
stos
adc
add
xlat
sbb
adc
ja
jge
push
mov
adc
mov
ss
fcmove
sub
jns
mov
push
add
lret
notl
mov
inc
iret
stc
iret
test
mov
xchg
sub
pop
clc
scas
xchg
jecxz
push
movsl
call
pop
pop
adc
hlt
sarl
inc
fdivl
js
insb
into
out
aad
push
fldl
cs
mov
inc
call
js
jno
xchg
sbb
mov
in
sbbb
cmp
das
rclb
adc
or
pop
das
xlat
cmp
outsl
fwait
mov
sub
daa
iret
mov
shl
cmp
icebp
lock
jp
inc
jae
int3
test
mov
push
shll
leave
dec
repz
push
jg
and
rcrb
xor
popa
push
fstp
jno
cmp
js
xlat
add
dec
dec
out
xchg
add
negb
pushf
sbb
adc
cmp
sarl
sbb
ret
inc
jmp
or
shlb
or
in
add
push
mov
mov
adc
insl
mov
mov
notb
insb
ss
push
aam
cwtl
add
push
sahf
fdivl
into
popf
dec
jecxz
loopne
jne
xor
push
dec
adc
outsl
or
xchg
jge
lock
push
repz
lcall
popa
sbbb
push
out
cmp
push
dec
in
push
mov
xchg
and
lcall
xchg
mov
ss
lret
push
pop
adc
ja
lahf
das
mov
fxch
cmp
jecxz
mov
and
mov
xor
lea
and
or
xchg
jnp
popf
jb
jmp
insl
jl
hlt
ror
jp
fwait
sub
inc
xor
sub
mov
mov
sbb
lods
jbe
mov
mov
add
inc
push
jae
or
popf
sub
xchg
ror
fsub
in
fnstsw
dec
les
cmp
push
fdivs
push
pop
xor
cld
js
add
mov
sbb
mov
xorb
out
shlb
pop
add
lahf
cmpsl
pop
jl
lret
call
jb
jnp
sbb
inc
sub
mov
or
push
fimull
outsb
push
fidivl
loop
xor
adc
loopne
loopne
imul
push
mov
aas
or
scas
stos
jnp
inc
add
scas
mov
cli
pop
sub
mov
lock
popa
push
int3
mov
jg
pop
bound
orl
add
mov
xchg
sbb
cmp
leave
cmpsb
jo
je
sti
cmpb
movl
es
daa
test
arpl
mov
and
dec
push
lods
nop
mov
ret
xchg
lahf
stc
push
enter
sti
cmp
jg
test
mov
clc
cld
inc
sbb
test
ljmp
pushf
sbb
sub
pop
cmpsl
loope
pop
dec
dec
dec
ja
stc
jge
add
lret
fwait
sti
mov
xlat
sbb
nop
out
gs
mov
mov
popf
lods
jl
or
fsts
js
jb
cltd
add
fiadds
pop
sbb
dec
inc
ret
add
mull
or
lods
insb
mov
sub
test
pop
scas
push
aaa
add
cmp
dec
frstor
in
add
jb
pop
ss
push
mov
inc
shrb
sub
aam
mov
xchg
xor
push
or
add
std
pusha
cwtl
push
and
mov
icebp
lret
xchg
push
or
sbb
mov
xchg
xor
shll
std
mov
mov
stos
shl
add
int
dec
mov
out
in
leave
dec
sub
mov
sub
stos
jmp
subb
lock
mov
mov
ljmp
or
std
or
inc
or
xchg
sbb
ror
xor
xchg
mov
jb
mov
shl
inc
fimull
jb
or
ss
dec
shr
idiv
cmp
lret
les
sbb
mov
or
loopne
loop
sahf
cld
icebp
jbe
adc
xorb
add
inc
pushf
ret
add
fs
sbb
xor
jno
cmp
and
out
pop
rcrl
ret
cmp
out
cmpb
ja
add
mov
popf
dec
fidivrl
push
jle
enter
and
je
or
jnp
or
pop
sub
fsubr
pop
mov
cmp
loop
ljmp
sub
dec
ss
insb
shrb
jle
jns
int
sarl
mov
in
push
cmpsl
out
imul
mov
cmp
enter
xchg
test
or
pop
dec
sbb
cmp
push
cmpsl
lcall
fbstp
push
lock
mov
and
int3
sbb
cmp
gs
cltd
pop
add
push
sbb
ja
and
mov
in
sub
xlat
mov
mov
nop
cmpsb
mov
lods
inc
loopne
in
ds
pop
mov
xchg
dec
pop
and
inc
xchg
ror
out
aaa
rol
add
clc
lea
popf
in
ljmp
pop
cmp
ss
mov
xchg
dec
aam
fdiv
leave
js
or
cltd
mov
or
adc
pop
sti
mov
jno
add
sub
imul
adc
subb
adc
pop
pop
xor
lods
and
jno
mov
mov
add
add
mov
aam
and
mov
cmp
or
std
pushf
push
pop
mov
in
push
in
rcrb
xchg
sahf
test
mov
testb
mov
add
adc
xor
scas
mov
pop
int
xor
dec
cmp
test
push
push
cmp
shrb
out
add
xchg
mov
nop
mov
mov
adcb
add
push
ljmp
arpl
mov
xchg
es
sti
mov
repz
pop
popf
aas
mov
inc
push
lret
hlt
xchg
data16
xchg
pop
pop
or
test
out
cmp
cltd
fistps
and
outsb
popa
add
inc
adc
icebp
into
fstp
mov
xchg
push
rclb
jne
xchg
addr16
jno
test
fcmovbe
add
and
mov
inc
stos
mov
xor
repnz
punpcklwd
sub
jg
pop
dec
inc
fcmovne
rclb
cmp
cmpsl
sub
mov
icebp
pop
mov
pop
add
xorl
add
jl
mov
je
mov
push
fiadds
xor
jmp
ljmp
lea
mov
lods
pushl
ret
lcall
bound
mov
clc
mov
aam
cmpsb
sub
xchg
lods
inc
pop
push
cmp
imul
scas
mov
in
lea
shr
call
fsts
xlat
pop
imul
ja
sub
push
fiaddl
stos
or
dec
jecxz
sbb
dec
jbe
fdivr
es
adc
mov
incl
inc
jo
sub
add
dec
fmuls
movsl
aaa
fcompl
clc
jl
inc
push
decl
mov
loope
xlat
and
xor
lods
fdivrs
test
stos
popf
xlat
gs
enter
push
enter
mov
push
dec
sub
xor
cmp
adc
stos
fcmovu
push
pop
or
cltd
xor
cmpsl
mov
inc
push
cmp
sbbl
jle
aas
stos
in
movsb
inc
mov
int
jae
lock
ficoms
ljmp
movsl
cli
in
mov
adc
cmpsb
or
aam
push
rol
cld
xchg
dec
pushf
cltd
xlat
stc
inc
ss
fmulp
stos
and
mov
push
mov
pusha
js
lahf
les
mov
dec
test
insl
adc
mov
mov
jae
mov
jle
popf
lods
nop
daa
dec
cmp
jg
jecxz
mov
in
adc
enter
xchg
pop
push
jmp
add
fs
or
cwtl
addl
insl
fimuls
mov
mov
scas
mov
mov
and
inc
mull
or
xlat
sub
fdiv
add
mov
les
mov
inc
pop
and
ror
inc
outsl
or
add
add
loopne
ficoms
movsl
add
sbb
push
fldenv
sub
jns
adc
in
mov
and
sbb
mov
adc
inc
or
das
push
and
hlt
xchg
shrb
lcall
add
push
rcr
jmp
pop
cmc
add
test
loopne
or
daa
loop
add
orl
sti
mov
lahf
fsubr
fcos
les
mov
mov
dec
and
addr16
xor
cmp
cmp
sub
sub
adc
push
cmp
fwait
add
xchg
pop
xor
dec
pusha
jbe
push
add
leave
arpl
dec
popf
mov
mov
xchg
and
pop
sbb
das
subb
es
jbe
xor
mov
call
inc
lahf
into
pop
xor
dec
mov
hlt
mov
push
jno
and
shll
pop
je
xchg
pop
xor
jns
cmp
jge
and
push
test
mov
xor
add
mov
cmp
in
loop
out
cmp
test
cmp
andl
jmp
xchg
inc
dec
insb
dec
fadds
dec
sub
loopne
sti
push
je
push
cvtps2pd
in
sbb
in
inc
movsl
jp
mov
xchg
push
sub
mov
cmpsb
inc
mov
cmp
sbb
dec
pop
popf
cmp
inc
fs
js
adc
push
inc
stos
out
sbb
loop
dec
xchg
mov
dec
in
pop
loope
pop
cmp
ret
xchg
inc
sub
lcall
out
lock
jg
or
lock
cld
mov
inc
sub
mov
mov
outsb
mov
mov
addr16
rep
mov
pop
mov
subl
fisubs
xchg
clc
and
inc
cmp
out
nop
les
mov
cmp
sub
jecxz
jg
sahf
push
cmp
sar
int3
jns
inc
xchg
test
push
jae
inc
outsb
xchg
mov
sbb
sub
scas
ja
adc
sub
ret
test
data16
pop
pop
repz
js
jmp
int3
and
arpl
sbb
mov
adc
pop
in
aas
and
mov
inc
fmuls
jo
inc
cmp
in
test
mov
mov
mov
ret
add
cmpsl
ja
pop
xor
loope
jb
mov
xchg
fildll
mov
dec
push
jl
test
xchg
push
jbe
xor
out
cs
jne
scas
lods
pushf
jg
add
pop
push
pop
push
rcr
pop
jns
sub
cmp
sbb
and
fldcw
jae
mov
fstpl
iret
in
ljmp
mov
add
gs
scas
mov
in
cmp
dec
std
inc
aam
or
call
adc
and
scas
cmp
jmp
ljmp
shl
and
adc
sarb
stc
js
mov
cmp
sbb
inc
in
xor
jae
in
jge
mov
scas
xor
test
mov
sti
daa
pushf
repnz
sar
stc
pop
js
sar
cmp
xor
ret
fmuls
call
lea
test
jle
jmp
out
daa
int
jbe
jns
and
jge
fcomip
addr16
popf
inc
push
int3
add
mov
cmp
add
push
movsl
add
mov
sub
jb
mov
loopne
aas
jl
mov
int
fsts
jmp
stc
popf
sbb
cmp
mov
shrl
sarb
shl
jae
or
in
movsb
sbb
inc
inc
sub
push
xchg
leave
aad
pushf
mov
pop
sub
cltd
push
pop
aas
ljmp
xchg
scas
jae
adc
mov
aam
shrb
aam
repz
push
idiv
sbb
scas
cmp
fwait
push
xchg
in
mov
xchg
gs
loop
lea
cmp
push
or
push
movsl
add
fs
out
dec
shrl
or
or
call
push
rolb
cvtdq2ps
loopne
scas
das
push
int
push
adc
pusha
mov
jle
fldl
cli
push
xor
jecxz
xorl
and
inc
add
cs
inc
int3
stc
sahf
lods
test
xchg
orl
mov
lds
sti
aam
aaa
shrl
call
shlb
stos
icebp
lahf
push
js
mov
pop
push
jns
and
pop
or
xchg
rorl
ret
inc
fs
xor
push
and
pop
call
aas
add
sbb
mov
push
popf
popa
push
lods
add
mov
daa
out
and
cwtl
test
xor
sbb
rclb
lock
js
dec
ret
add
adc
pop
je
xchg
sbb
xchg
mov
inc
or
cltd
dec
std
jae
adc
xchg
fcmovnb
push
popf
cmp
mov
aas
pushf
mov
cmp
fs
xchg
icebp
jle
mov
sti
lock
or
das
mov
nop
nop
xchg
movsb
mov
adc
inc
pop
rorl
int3
push
inc
std
notb
inc
enter
loop
scas
out
jno
xchg
std
fs
cmp
jb
or
aam
and
or
mov
dec
xchg
dec
adc
sbb
or
xchg
fadd
jge
jae
insl
or
cmp
mov
add
cmp
jns
arpl
mov
negb
nop
bound
dec
adcb
test
incl
into
cmp
dec
or
inc
out
mov
dec
dec
add
jle
and
sbb
jmp
or
les
arpl
and
sbbl
or
testb
cmp
adc
and
das
mov
mov
jb
dec
and
push
cmpsb
lcall
imul
inc
dec
xor
jg
jo
shlb
hlt
mov
mov
sbb
pop
pushf
mov
jl
xchg
jbe
jo
and
push
in
xlat
ljmp
mov
popa
mov
adc
orl
icebp
adc
and
popa
push
clc
or
andl
or
pushf
psubsb
imull
or
fstps
in
mov
dec
cmp
jae
mov
hlt
adc
iret
push
xchg
test
jne
lock
xchg
jnp
jmp
push
push
jb
mov
jg
rol
dec
add
into
in
arpl
repz
stos
pop
bound
cmp
sub
sbb
jnp
adc
cltd
push
mov
cwtl
mov
jge
ds
cmp
sbb
aam
mov
add
mov
fcompl
push
mov
daa
imul
lcall
ror
int
and
sbb
mov
or
mov
ja
jb
sbbl
repnz
mov
push
xlat
inc
mov
mov
repz
and
xchg
push
in
in
out
mov
dec
lahf
push
dec
cltd
stos
inc
cwtl
pop
mov
loopne
mov
lock
add
fmull
rcrb
xor
push
adc
xor
andl
enter
xor
andb
leave
lods
mov
dec
jmp
xchg
fs
lock
pop
adc
outsb
xchg
repnz
std
jb
pop
jae
inc
call
and
out
nop
cmpsb
xor
xchg
fnsetpm(287
lods
or
cmp
cmp
test
push
adc
and
jge
fst
sub
adc
mov
fsubr
sub
xchg
pop
mov
test
sub
fcoms
pushf
lock
ret
push
inc
fidivrs
int3
and
nop
push
jg
dec
jg
add
xchg
xchg
jl
ret
out
dec
pushf
xor
rcrb
stos
push
imul
sbb
and
lahf
std
mov
jmp
mov
out
mov
mov
les
sarb
add
adcl
mov
rcl
xchg
cmp
fisttps
push
adc
push
jp
mov
dec
jmp
mov
addr16
aad
emms
hlt
add
or
mov
lcall
ss
mov
add
xor
xchg
ret
aas
je
pop
scas
out
ret
sarb
mull
jge
mov
adc
push
jnp
mov
sbb
adcl
addr16
loopne
inc
out
mov
inc
shl
jb
loop
jle
inc
lret
lret
repz
mov
leave
loope
int
pop
fsts
cwtl
mov
imul
xlat
das
push
push
test
jecxz
mov
and
pop
mov
cli
shlb
mov
jae
lock
iret
stc
xchg
adc
push
cmpsl
ficoml
insb
xor
sbb
jp
sbb
lds
xchg
mov
push
scas
add
push
sbb
scas
sar
icebp
lcall
in
ds
pop
stos
popf
lods
test
xchg
loop
jge
fnstcw
mov
addr16
xor
xchg
clc
clc
sbb
pop
iret
jl
mov
adc
lea
sub
adc
lock
push
pushf
and
cvtdq2ps
xor
in
mov
fsubrp
lea
xchg
sbb
adc
pop
pop
mov
fcomip
pop
cmpl
popf
idivb
leave
push
das
ficoms
inc
fdivrs
std
jp
stos
and
cmpsl
addr16
dec
clc
repz
lds
rcll
fisubrs
out
ss
hlt
stc
js
mov
jo
gs
mov
out
sbb
inc
or
jmp
and
fbstp
cmp
test
int3
sbb
mov
je
sbb
fisubrl
fnstsw
aas
pop
loope
cmpsl
out
lods
loopne
enter
xorb
lcall
lahf
fldl
dec
adc
mov
cmp
or
sub
cltd
mov
insb
inc
xchg
inc
jns
cltd
mov
dec
insb
xchg
dec
cmpsb
jb
lcall
cmove
lahf
jmp
jae
ja
fsubrs
adc
or
call
dec
das
scas
mov
mov
call
inc
mov
jge
dec
sub
push
adc
sar
sub
push
les
das
and
popf
shl
xchg
push
cs
mov
inc
pop
repz
xorl
popa
dec
sbb
mov
shrl
sti
hlt
xor
fcmovnu
fisttpl
data16
in
popa
push
cltd
and
mov
add
mov
arpl
lds
adcl
cmp
add
inc
or
jbe
clc
out
jb
lret
mov
sarl
xchg
loop
scas
rolb
loopne,pn
lods
pop
loopne
push
mov
das
ja
pop
xchg
dec
scas
push
dec
adc
imul
add
rorb
inc
sbb
mov
loopne
test
lea
xchg
idiv
popf
dec
stc
dec
scas
gs
inc
jnp
ds
test
arpl
outsl
cmpsb
adc
mov
mov
add
repnz
loopne
mov
nop
pop
jo
imul
aas
cmpsb
jle
jl
dec
rcrb
dec
inc
pop
stos
sarl
jbe
js
out
mov
repnz
mov
std
stos
push
pop
sbb
sbb
ss
icebp
add
cs
jge
je
mov
mov
and
cmp
rclb
rcll
and
push
sub
lds
and
aam
inc
bound
mov
ja
xor
jb
movsb
or
popf
cs
out
icebp
popa
dec
scas
sub
outsl
aam
ss
popf
push
iret
idivb
bound
imul
xchg
mov
xchg
sbb
xchg
push
rcll
jmp
nop
aam
pop
stc
xor
je
cmp
fs
or
ds
test
js
push
and
mov
cs
add
sub
lea
inc
gs
setnp
inc
jecxz
push
inc
cmpsl
inc
pop
in
sub
mov
push
lahf
adc
push
in
pusha
mov
pusha
fildll
jmp
mov
add
imul
xor
loopne
cmp
cld
sub
lods
add
outsb
fld1
push
mov
pop
cmpsl
pop
in
cmc
mov
adc
cld
mull
lahf
add
mov
in
or
or
sub
icebp
jns
stc
jl
popf
mov
inc
lods
repz
sarl
sbb
std
sarl
arpl
xchg
enter
mov
mov
clc
dec
mov
and
mov
xchg
mov
mov
je
das
and
shl
loop
lahf
sbb
cmp
lock
cmpb
and
push
push
pop
repnz
adc
jb
pop
mov
mov
sub
push
repnz
bnd
dec
xor
imul
jecxz
mov
ret
adc
cmp
bound
mov
mov
cwtl
xchg
add
pop
fcomp
lods
cmp
shlb
jl
jo
push
leave
fadd
xor
xchg
jg
roll
cld
fld
add
jecxz
and
inc
insb
les
in
or
push
jbe
je
mov
fs
insl
adc
jp
mov
mov
mov
rcrb
fists
mov
clc
mov
ficompl
ror
fmuls
outsb
sbb
pop
fisttpll
xchg
outsb
inc
sbb
xlat
jbe
mov
mov
xor
sub
pushf
dec
test
es
and
test
ds
out
stos
ficomps
and
loop
das
cmp
xchg
pop
shlb
inc
adc
bound
push
in
enter
and
mov
iret
xchg
pop
scas
dec
leave
sbb
ds
xchg
bts
mov
shrl
adc
dec
or
stos
jbe
pop
and
sbb
cmp
mov
inc
jl
call
or
ja
or
cmpsl
mov
call
sub
dec
aaa
jmp
test
adcb
mov
faddl
dec
cld
xchg
cli
mov
mov
ret
pop
clc
ds
mov
xchg
mov
pusha
adc
mov
cmp
sub
cmc
xchg
jg
insb
loop
pushf
jecxz
stos
or
stos
dec
outsl
pop
mov
sub
cmp
push
lods
out
fldt
push
push
push
lods
test
add
sub
inc
call
mov
sbb
jecxz
or
or
call
or
mov
scas
movsl
cwtl
fs
je
lods
mov
ja
out
insl
and
into
jle
inc
push
sbb
iret
outsl
orl
loop
pop
inc
popa
rcll
dec
dec
add
xchg
lcall
pop
push
aaa
lret
xchg
sbb
cmc
cmp
popf
sub
cld
inc
mov
xor
test
push
push
mov
add
cmpl
or
pop
aaa
xchg
lock
dec
mov
xor
jle
dec
mov
push
add
mov
xchg
adc
fwait
or
mov
adc
mov
movsb
mov
fdivs
js
mov
xor
cld
cmpsl
shrb
cli
jmp
push
push
movsb
xor
and
mov
lcall
lret
pop
popa
dec
or
ljmp
pop
adc
pop
jmp
lods
mov
jmp
in
popa
inc
je
leave
dec
repz
pop
fisubs
loopne
scas
lods
repnz
jecxz
fsts
dec
popa
aam
mov
push
pop
fistl
jmp
sbbb
ljmp
stos
pop
cs
daa
mov
out
in
sbb
dec
dec
mov
dec
and
mov
lret
icebp
sbb
in
inc
aaa
pop
sub
pop
mov
idiv
pop
adc
cmpb
int
push
add
pop
lret
jo
into
popf
mov
int
std
mov
rcl
sarb
sub
mov
mov
inc
pop
in
pop
pop
sub
mov
or
pop
and
sub
ftst
or
push
shlb
dec
pop
out
jle
pop
sti
bound
movsl
inc
enter
repz
into
shlb
add
or
dec
test
mov
and
dec
lcall
mov
stos
je
adc
out
jge
cmp
sbb
aas
rclb
pop
js
loope
pusha
cmpsb
sbb
dec
in
fdivrp
jp
sbb
push
out
cmp
sarb
pusha
das
andl
mov
and
add
fldcw
sbb
push
andb
inc
repz
mov
xchg
sbb
xchg
xchg
imul
jno
mov
mov
pop
push
xor
xor
pop
mov
dec
push
push
ljmp
int3
or
sub
cmpsb
lds
adc
arpl
rcll
pop
mov
dec
sahf
push
jno
fs
jns
push
xor
mov
mov
cmp
xchg
and
xor
sub
aas
lret
dec
gs
dec
or
out
adc
outsb
inc
in
out
mov
inc
sub
fsubrs
jns
test
lret
je
das
cmp
xchg
jl
inc
jmp
sti
push
mov
lds
mov
out
or
ret
mov
xchg
aad
push
sbbl
outsb
aaa
push
nop
pop
mov
mov
inc
lahf
pushf
loop,pn
and
aas
cld
or
mov
mov
loope
sbb
cmp
cmp
fwait
adc
dec
sub
int3
xor
mov
cmp
and
scas
sarb
fildl
mov
mov
aaa
jae
enter
dec
jne
jne
dec
jmp
dec
mov
lret
jns
or
dec
jmp
fistps
lock
xchg
inc
sbb
dec
andl
ds
insl
mov
sahf
imull
out
lds
fdiv
call
sbb
add
icebp
popf
aas
push
iret
fwait
and
xchg
out
ret
gs
in
jnp
flds
xor
cmp
int3
mov
fld
cmc
inc
scas
jge
sbb
sub
leave
or
cmp
xor
out
jge
sub
insb
int3
jns
xchg
int
push
push
nop
filds
xchg
mov
jmp
cs
jmp
repz
js
jmp
loopne
sarb
jae
or
scas
aaa
mov
data16
icebp
pop
imul
xor
aaa
jecxz
and
mov
fstps
dec
dec
sub
xor
ret
js
pop
inc
mov
loopne
icebp
out
imul
adc
adc
out
dec
jle
xchg
iret
popa
pop
ret
cld
mov
out
loop
fsubs
jmp
cmpb
inc
pop
loope
outsb
pop
xor
inc
xor
push
jle
add
aad
pushf
shll
or
pop
mov
jp
inc
outsb
and
int
lcall
add
ret
gs
imul
cs
add
loopne
mov
cwtl
push
inc
cmp
sub
cmpl
and
std
and
push
and
int
andl
aaa
dec
adc
lcall
sbb
mov
loop
rorb
or
xchg
sub
inc
scas
test
iret
cmpsb
insl
mov
jle
xlat
daa
jp
ss
std
inc
cltd
test
lahf
mulb
nop
test
inc
adc
mov
xchg
mov
shrb
dec
and
cld
ljmp
push
sub
rcl
outsl
push
add
xlat
xor
imul
xor
lods
sbb
imull
and
mov
mov
shlb
pop
jnp
add
add
int3
mov
fidivl
fiadds
xor
mov
ds
pop
enter
inc
aaa
imul
fldl
cmp
adc
jae
mov
pop
inc
and
aas
inc
lret
pusha
fwait
lret
out
dec
sbb
mov
loope
inc
vpcmpeqb
push
dec
lea
mov
fisttpll
sbb
cmpsb
gs
rclb
xchg
and
out
nop
fwait
pop
loopne
xor
stos
sbb
jp
gs
jle
movsl
es
push
addr16
xor
cwtl
pusha
adc
inc
es
lcall
jb
fstpt
xchg
mov
or
lret
xlat
or
inc
mov
shrl
out
push
pop
jo
fdivl
inc
jo
idivb
inc
jge
mov
in
inc
fisttps
sahf
popa
jecxz
xor
lcall
sarl
mov
add
jbe
dec
cmpb
mov
mov
xor
pop
lcall
push
cmp
pop
fstps
sbb
xchg
inc
cmc
in
ja
jecxz
loop
int3
shlb
inc
sahf
pop
lds
inc
mov
mov
push
lods
daa
xor
leave
push
rcrb
add
pop
or
pop
jbe
loop
sub
adc
xchg
in
inc
xlat
or
mov
dec
push
imul
fnstsw
je
cmp
jge
cli
jnp
in
cwtl
push
stc
dec
mov
sar
and
mov
data16
push
xchg
sahf
mov
nop
jp
xchg
jb
imul
js
xchg
jle
cltd
add
jo
pop
fildll
daa
xor
and
push
data16
xchg
popa
pop
and
mov
jmp
mov
mov
shr
shlb
scas
sub
mov
cmp
mov
xrelease
mov
ret
mov
stos
xchg
lods
lcall
shlb
add
fisubrs
sub
xacquire
fidivl
xchg
and
pusha
shll
imul
pop
sbb
lcall
cld
sbb
or
inc
pushf
pop
mov
daa
add
inc
mov
je
out
xlat
add
lret
sub
pop
inc
push
imul
lods
aaa
mov
aad
inc
add
jne
pop
pop
das
xchg
mov
les
addl
cmp
push
mov
sahf
lds
rolb
test
repnz
xchg
mov
inc
movsb
mov
fcomp
lods
scas
jle
or
jmp
xor
add
and
mov
jno
mov
sahf
bswap
jmp
dec
insl
mov
cmp
mov
push
add
jae
insl
add
or
dec
ret
cld
or
inc
addr16
mov
inc
je
loope
sti
mov
aad
mov
outsb
jbe
sub
outsb
xchg
sbbl
and
dec
pop
cmp
push
adc
jecxz
fadds
into
inc
nop
dec
into
arpl
jae
lds
cmp
ss
cmp
rorb
data16
jnp
fidivs
dec
sahf
mov
sbb
aam
sarb
jb
mov
inc
inc
ljmp
cmp
loop
sub
dec
xchg
xchg
stc
jmp
dec
xor
lcall
dec
les
ret
mov
and
loope
push
add
fistps
stos
xor
int3
push
xlat
push
push
mov
inc
test
pop
fcmove
xor
mov
pushf
fxch
gs
xor
sti
push
lock
sub
xor
imul
movsl
insl
ljmp
inc
dec
pop
das
sahf
ljmp
mov
adc
xchg
jecxz
sbb
adc
fiaddl
xor
daa
mov
pop
mov
push
inc
sbb
inc
mov
sbbl
pop
push
jb
insl
and
fnop
pop
test
pop
sti
push
xchg
aad
push
out
lods
daa
push
pusha
out
pop
stos
inc
popl
shll
lods
sub
lock
test
stos
clc
pop
cmpsb
fbld
sarb
xchg
outsb
in
lea
les
mov
dec
outsl
mov
test
push
lahf
sub
mov
cmp
xchg
clc
sbb
popa
mov
mov
data16
jnp
mov
pushf
xchg
adc
xchg
imulb
or
push
ret
cwtl
int3
stc
fwait
decl
mov
inc
dec
vmwrite
pop
sbb
inc
pop
sahf
popf
pop
ja
or
outsb
out
jl
stos
in
add
ds
divl
test
cs
jg
dec
push
cmpsb
nop
pusha
pop
or
into
jns
pop
inc
scas
jge
cli
push
addr16
imul
ret
push
mov
pop
addr16
add
repnz
jecxz
mov
xchg
loope
shrb
mov
fnstcw
xchg
nop
adc
int3
xor
repz
insl
push
jmp
inc
imul
mov
dec
cmp
fdivl
ja
mov
lds
mov
clc
aas
lea
jle
stos
das
out
pop
or
inc
add
clc
xchg
push
mov
fwait
mov
rolb
imul
jg
ss
add
inc
rol
sbbb
and
xor
ja
test
add
pop
insb
std
add
les
mov
jmp
mov
das
jbe
iret
cmpl
xlat
xor
int3
sbb
lock
shlb
add
xlat
mov
test
xchg
mov
push
fwait
hlt
pushw
dec
inc
mov
or
lea
dec
and
fwait
or
and
cmp
nop
or
sbb
mov
arpl
cli
addb
daa
jecxz
lret
imul
jle
lret
int3
movsl
dec
and
out
loope
xchg
insb
dec
inc
lcall
aad
fdivrs
subb
pop
or
push
pop
inc
outsl
lock
xchg
mov
mov
loope
fiadds
int3
mov
bound
xchg
add
push
xchg
lret
lods
xchg
inc
pop
jb
inc
pop
rcrl
repz
cmp
and
out
add
shr
sbb
mov
inc
push
push
xor
sahf
aas
in
test
popa
pop
ror
or
pop
jne
sub
in
das
movmskps
iret
cltd
mov
outsl
sbb
mov
call
stc
sub
push
int3
add
jl
sbb
movsl
xchg
inc
and
shll
mov
jmp
push
rcrb
je
xor
daa
mov
add
jle
cwtl
pop
loopne
das
test
data16
rcr
loopne
mov
js
pop
add
scas
and
and
pop
insb
add
out
movsb
push
aaa
xchg
cmp
pop
bound
mov
mov
ret
inc
addl
inc
xor
fcmovnb
mov
call
xor
pushf
sbb
pop
aam
push
in
clc
mov
and
cmc
loop
das
adc
mov
popf
sbb
jmp
sbb
push
cmp
and
mov
xchg
jle
das
lret
jb
pop
pop
js
cmpsb
add
dec
xchg
or
or
mov
dec
aam
dec
lcall
mov
sub
pusha
loop
sub
in
fcoms
pusha
inc
cmpsb
popa
dec
mov
gs
iret
stos
jge
out
rcrl
dec
and
sbb
inc
mov
inc
cli
aaa
pop
or
push
pop
xor
shlb
jnp
add
xor
test
inc
xchg
arpl
dec
arpl
adc
push
and
xchg
xchg
mov
nop
shll
out
or
mov
mov
xor
lret
xor
dec
fidivs
sti
clc
xchg
mov
mov
and
stc
jbe
sbb
cmp
sbb
dec
cmp
cmp
sub
dec
jnp
loop
mov
xchg
into
sub
dec
jno
iret
cld
mov
adc
jnp
xchg
push
fwait
jo
insb
jmp
movsl
mov
adc
push
mov
jns
repnz
jp
dec
sub
ljmp
aad
pop
xchg
test
shlb
jbe
int3
fldl
xchg
repz
outsb
or
mov
aad
xchg
xor
fildll
push
jmp
mov
pop
sub
mov
dec
sbb
mov
mov
mov
lods
sbb
xchg
push
sbb
into
xlat
ret
or
aad
or
iret
std
js
mov
jnp
xor
push
sub
push
add
call
push
mov
adc
inc
jecxz
mov
sti
cmp
pop
and
add
out
mov
jno
imul
mov
mov
iret
push
fcmovnu
xchg
stos
fs
push
mov
imul
and
xchg
shrl
fiaddl
push
and
sti
mov
add
add
pusha
out
pop
push
leave
push
and
sbb
int
lods
xlat
pop
test
testb
adc
pushf
inc
mov
jl
pop
mov
and
in
sub
and
test
and
mov
or
sub
push
xor
ljmp
mov
mov
int3
xlat
lods
xorb
divl
cmpsb
pop
cmp
dec
pushf
and
mov
mov
dec
sub
pushf
jecxz
pushf
jo
push
bound
xor
cmp
dec
call
or
mov
mov
pop
pop
adc
rclb
pusha
jle
mov
stos
movsb
decl
pushl
dec
int
inc
xchg
add
movsl
ljmp
mov
push
mov
mov
lret
sub
int3
aas
mov
popa
hlt
fisubrs
jmp
scas
jb
cmp
and
lods
test
or
fldenv
push
nop
in
lock
lods
sbb
and
popf
xor
bound
clc
xchg
mov
jns
mov
cli
jecxz
ds
mov
inc
addr16
adc
in
and
cmpsb
call
roll
or
maskmovq
negl
mov
jno
mov
mov
pop
xchg
repnz
popa
lea
sbb
cmp
xchg
pop
xor
dec
mov
jg
mov
mov
sarb
lods
pushl
or
mov
ja
add
add
cmpsb
mov
adcb
lds
jge
loope
jmp
pop
pop
xor
ja
movsl
add
fbstp
lods
mov
xor
mov
inc
sti
in
mov
ret
aas
mov
insl
dec
and
pop
popa
mov
test
hlt
push
mov
cltd
lcall
xchg
ret
fcmovnu
arpl
pop
jle
stos
mov
test
enter
inc
mov
inc
mov
lcall
sbb
pop
or
imul
add
cmpsb
cmp
clc
xchg
movsb
mov
xchg
lods
jae
jns,pt
pop
mov
or
ret
mov
arpl
jge
inc
jge
pop
ss
lahf
repz
xor
fbstp
and
mov
and
outsb
jne
sbb
pop
es
hlt
filds
push
push
out
in
sarl
lea
pop
inc
in
pop
cwtl
push
addr16
inc
jl
lods
sahf
xchg
and
pop
mov
jbe
popl
sahf
outsl
dec
fldl
pop
js
lea
mov
push
sub
mov
inc
or
xor
cmp
mov
xor
mov
xchg
mov
mov
cmp
inc
xchg
scas
fcomps
pop
aam
mov
jae
cmp
bound
scas
inc
icebp
loopne
xor
out
rclb
add
loop
out
pop
test
and
sub
sub
push
test
shlb
stos
loopne
push
lret
in
roll
sub
inc
push
orb
daa
pop
call
cltd
sgdtl
add
fidivs
xchg
mov
jno
inc
sbb
sub
mov
dec
xchg
subl
outsb
jp
pop
dec
sahf
pop
ja
cmc
jb
xor
sub
stos
mov
scas
lahf
sub
aas
enter
inc
dec
mov
push
jg
clts
and
es
fwait
inc
mov
mov
push
imul
data16
repz
xor
in
shr
cmp
sbb
pop
nop
mov
popf
ficoms
sbb
xchg
notl
cmpsb
std
cmp
jo
iret
mov
and
push
adc
pop
pop
add
mov
inc
cmp
jl
fdivl
std
push
push
adc
mov
ja
inc
inc
mov
sub
subb
and
stos
adc
das
loope
daa
rolb
stos
int3
push
sahf
orl
shll
dec
insb
icebp
add
lret
scas
pop
push
jae
fdivrs
cltd
shlb
or
or
sbb
adc
sahf
push
lods
ds
cwtl
fistps
fcompl
into
jge
cmp
push
pop
push
shl
jmp
sti
and
cmp
push
pop
icebp
or
sti
sub
push
fwait
sub
outsb
inc
hlt
mov
testl
push
lcall
stos
mov
mov
add
inc
xor
sti
gs
pusha
in
cmp
inc
es
sbb
rcrl
fisttpll
int3
inc
or
aad
decl
mov
pop
aad
fwait
lcall
add
push
movsb
sbb
mov
sti
sbb
jno
jb
cltd
cmc
pop
daa
lea
sub
sahf
xchg
push
stc
dec
add
adc
loope
push
add
adc
push
push
dec
mov
in
push
lahf
mov
xchg
jnp
dec
inc
push
adc
and
int3
rcl
xor
push
jae
enter
pop
ret
fcoml
scas
push
push
addr16
cmp
test
push
add
std
xchg
mov
adc
ret
push
in
push
cld
testl
push
xchg
cmpsl
xchg
dec
mov
mov
dec
pop
jg
dec
pop
int
fbld
inc
andl
push
push
rclb
jmp
add
movsb
adc
pop
sub
sbb
pushf
in
out
add
sbb
pop
inc
leave
and
dec
and
xchg
and
adc
or
add
and
ret
dec
lcall
les
into
push
xlat
popa
mov
outsl
sub
or
fcmove
bound
or
sahf
int
mov
or
xor
mov
int3
loopne
push
and
out
clc
adc
cmc
xchg
xchg
lds
mov
pop
jne
or
clc
pop
push
shll
xor
jne
push
mov
repnz
push
mov
mov
mov
js
fsubl
dec
adcb
or
mov
inc
inc
xchg
push
test
insl
and
movsb
dec
jle
adc
inc
mov
ds
rorl
add
popf
cmpsb
nop
mov
shrb
lahf
in
pushf
push
jmp
xor
arpl
movsl
jl
test
add
scas
or
arpl
jno
test
in
stc
or
adc
sub
xor
xor
cmp
jno
push
insb
int3
jg
inc
mov
xchg
out
mov
mov
mov
cmp
sub
lret
and
popa
mov
into
pop
or
cltd
mov
pop
sbb
cmp
push
and
and
dec
mov
icebp
pop
test
loop
leave
inc
and
call
xchg
out
out
call
mov
fildl
xlat
test
punpckldq
cld
ret
push
pop
imul
adc
mov
aam
inc
jle
mov
add
ss
mov
int
daa
lret
ljmp
jg
fiaddl
lret
inc
pop
in
leave
mov
mov
call
jns
mov
js
push
repnz
icebp
in
mov
sbb
out
in
xorl
gs
sub
enter
inc
repz
mov
icebp
int
iret
cmp
push
mov
lock
push
push
ja
dec
ret
dec
sub
pop
pmulhuw
mov
xchg
adc
sbb
mov
jge
repz
sub
sbbl
ss
out
mov
clc
lods
jp
cmp
jbe
mov
mov
mov
and
nop
pop
push
mov
inc
mov
xchg
push
mov
ret
adc
cli
aas
in
enter
add
sub
inc
out
es
mov
lret
cmp
orb
scas
idivb
lea
xor
lret
pop
outsl
icebp
loope
mov
mov
mov
iret
xlat
repnz
lret
int
fldcw
lahf
dec
je
dec
inc
xor
adc
call
ds
mov
ss
add
mov
bound
mov
sahf
pop
pop
sbb
test
sti
mov
imul
imul
shrb
push
mov
add
pop
mov
pop
movhps
inc
add
add
notb
daa
push
lret
push
in
and
in
ss
mov
fidivl
xchg
sub
jge
jae
data16
popf
std
push
dec
jb
test
push
call
cmp
add
ret
flds
jo
imul
inc
jl
mov
mov
add
dec
cmpb
nop
fsubrs
test
mov
pop
icebp
dec
pusha
mov
call
mov
mov
movsl
stos
jae
test
mov
cld
jecxz
insb
and
jbe
xchg
mov
xor
sub
stos
fmuls
dec
sbb
and
fistl
mov
push
sub
jecxz
sub
inc
mov
addr16
or
stos
xorl
ljmp
pop
es
sub
sbb
xor
jnp
ret
push
lock
loopne
test
je
lcall
sub
mov
mov
and
mov
mov
cmp
jge
les
insl
or
mov
sahf
push
xchg
sbb
or
and
orl
test
sbb
push
push
mov
adc
addr16
xchg
ficompl
in
sub
xor
jle
push
pop
je
xchg
pop
jae
sub
inc
std
rcr
jmp
sub
xchg
dec
rolb
lock
movsl
ret
int
dec
mov
and
imul
xlat
xlat
sbb
push
aad
adc
fsubrl
fistpll
aas
push
popf
xor
mov
aas
popf
adc
iret
sub
pop
add
ret
lret
fld
cltd
test
ljmp
sub
flds
ret
pop
inc
sub
add
sub
sub
ljmp
xchg
in
lea
pop
fnstenv
enter
sbb
cmp
lods
fdivr
lds
gs
shlb
rcrb
jge
or
pop
pop
fs
or
out
leave
add
addb
and
cmp
int3
stos
fcmovbe
cli
sub
mov
jmp
cmp
out
test
push
inc
xchg
jne
js
jge
inc
inc
in
int
mov
sub
sub
sub
pusha
imul
gs
push
jmp
sbb
loope
sbb
mov
jae
movsl
xchg
dec
pop
daa
shll
mov
mov
and
cld
mov
shlb
rep
divb
hlt
jns
test
ret
pop
divb
jle
in
fmull
and
inc
add
inc
mov
pop
js
push
loop
aam
imul
mov
imull
in
jae
push
fstpl
movsb
inc
mov
and
cmp
add
mov
or
mov
test
pop
outsb
rcr
add
push
lret
mov
popa
mov
cs
decb
push
adc
mov
fadd
push
mov
pop
sub
enter
test
outsl
sub
filds
adc
sub
adc
mov
hlt
fbld
outsb
add
xchg
in
cmp
scas
test
pop
rolb
gs
mov
push
push
adc
push
insb
loop
and
aad
lea
inc
xchg
inc
jae
sbb
decb
lods
jb
jno
mov
inc
push
loope
inc
stos
shlb
pop
lahf
xor
movsb
mov
xchg
sub
ljmp
aas
mov
add
and
push
xchg
ret
test
mov
out
jae
fwait
andb
imul
jne
push
xchg
jne
sti
jg
add
cmp
hlt
mov
test
mov
lret
daa
int3
lret
inc
dec
push
add
xor
sbb
add
rcrb
pop
cld
mov
mov
add
and
push
xchg
add
fildll
mov
mov
scas
cmpsb
ja
inc
lret
mov
mov
cmp
mov
fimuls
ss
mov
push
push
push
and
dec
orb
repnz
and
fidivrl
rcll
push
mov
push
adc
lods
insb
in
or
add
mov
cmp
in
lock
xor
sbb
or
mov
shlb
ret
push
cmp
sbb
shr
sub
popa
xchg
out
ds
popa
daa
mov
dec
adc
mov
pop
jle
jge
dec
cmpsb
fs
mov
adc
add
sub
mov
and
xchg
addl
dec
outsl
loope
jb
inc
icebp
sti
imul
stc
dec
jo
into
push
pop
jp
out
sarb
roll
ja
adc
mov
jl
add
adc
enter
loopne
sbb
and
jecxz
xchg
xchg
or
mov
dec
pushl
mov
lods
cmp
or
push
add
lahf
bound
xchg
sub
das
pop
js
mov
std
mov
jno
std
add
imul
xchg
pop
xchg
jp
in
shrb
mov
outsb
dec
xchg
subb
mov
es
xchg
jg
mov
xor
es
out
cmp
sub
in
repz
cmpsb
xchg
pusha
add
jmp
mov
cmp
push
dec
and
imul
dec
add
lret
dec
sahf
and
call
ret
std
add
jne
mov
in
inc
add
loope
mov
mov
adc
lock
cmc
push
cmp
push
pop
lahf
es
and
scas
ja
enter
mov
xchg
jmp
loopne
inc
or
loope
xchg
adcb
and
jne
push
push
inc
pop
das
enter
or
inc
jb
in
dec
in
pop
rcll
out
mov
mov
sti
cmp
dec
mov
xchg
sub
dec
xchg
or
push
cmpsb
or
or
inc
mov
ljmp
pop
loopne
mov
lret
mov
add
push
pop
ss
mov
imul
pop
jge
fwait
inc
mov
xchg
dec
add
mov
or
ficoms
mov
fsts
decl
fmull
clc
stc
mov
out
jno
ret
xchg
xor
out
and
sub
pop
iret
add
xor
adc
adc
jo
test
cmpsb
lods
or
xchg
call
rclb
xchg
mov
cmp
das
jmp
or
mov
sbb
xchg
mov
leave
lcall
add
xor
into
sbb
int3
dec
clc
pusha
xor
fmuls
gs
testb
xor
scas
add
mov
mov
sti
push
sbb
cmp
xor
in
popf
dec
jne
imul
sbb
cmp
cmp
pop
call
bswap
movsl
xchg
fstpl
rcrl
nop
or
cmp
and
data16
shll
jb
mov
adc
push
popa
adcl
xchg
mov
repnz
hlt
xor
or
in
mov
mov
mov
or
jae
into
mov
jle
insl
sbb
test
sti
in
cmpsl
xlat
jle
cmpsb
dec
mov
dec
fcmove
cltd
cmp
sbbl
sub
ret
ror
or
add
add
dec
rcrb
call
add
xor
test
jge
jo
jnp
push
insl
dec
lea
mov
rcll
iret
adc
fsubs
push
xchg
jae
sub
imul
push
xchg
mov
mov
imul
ror
fwait
mov
jne
data16
sar
xchg
push
sub
scas
jnp
mov
mov
aas
mov
jge
les
sarb
inc
frstor
xchg
sub
ret
push
jmp
outsb
in
stos
aas
das
push
pop
mov
dec
mov
addr16
jecxz
mov
lret
jmp
push
xchg
pop
lret
in
int3
nop
inc
std
mov
rcr
fwait
mov
adc
push
jp
push
imul
aas
adc
add
popaw
sub
shll
mov
mov
inc
stos
icebp
pop
xchg
and
addr16
xchg
divps
add
icebp
aam
jle
fnstsw
loope
fwait
ds
imul
fstps
xor
sub
pop
cwtl
xor
add
inc
mov
lret
pop
jg
test
aaa
cmpsb
xor
sbb
nop
mov
pop
mov
and
or
dec
xchg
nop
push
popf
les
mov
jle
mov
inc
imul
inc
fidivs
lret
push
cli
psllw
stc
lea
push
ss
dec
inc
ss
mov
insb
cmpsl
call
pop
cmc
xor
sub
popf
sub
mov
adc
jle
lds
jnp
mov
repnz
jae
adc
mov
push
repnz
jp
popa
mov
add
arpl
sti
in
mov
movsl
ja
scas
xchg
rcrl
inc
jne
jmp
cltd
pop
cmpsb
mov
dec
enter
mov
idivb
out
push
mov
stos
insb
and
leave
push
scas
seto
push
or
testb
or
xor
stos
jbe
dec
pop
test
mov
idivb
mov
jo
frstor
test
inc
push
shl
and
xor
jbe
into
adc
xchg
shr
lcall
dec
or
lods
std
sti
gs
pop
mov
cmp
xchg
xchg
xchg
mov
jmp
in
in
xor
mov
stc
nop
imull
add
std
aas
enter
add
and
jmp
add
scas
aad
scas
test
push
mov
mov
rcrl
add
pop
insl
inc
sub
in
sub
test
and
or
mov
ret
shll
lret
notb
out
loope
inc
add
cmp
sbb
out
mov
or
dec
repz
hlt
mov
mov
xor
pop
in
es
fsubrl
lret
sub
fs
mov
fsubr
in
fimuls
jle
inc
jo
lahf
call
shl
pop
jnp
jge
mull
ds
rolb
pushf
cmp
xlat
bound
fmulp
inc
in
and
xor
adc
outsb
lock
shr
mov
xor
aad
enter
cli
adc
sbb
sub
or
pop
movsb
add
cmp
lods
mov
ss
out
je
fwait
popa
sbb
loopne
sbb
mov
sub
mov
mov
cli
or
sub
sbb
jp
addr16
sbb
sahf
cmp
jmp
sbb
xor
cmp
popa
lds
mov
mov
dec
pop
push
aam
push
and
lcall
inc
xchg
aas
mov
add
in
arpl
cltd
icebp
push
lret
pop
cld
mov
mov
loop
shll
jo
fildll
fiaddl
inc
and
jo
std
mov
cmpsb
push
leave
push
xor
sbb
lock
je
popf
roll
lods
sub
adc
mov
loopne
adcb
add
inc
jo
enter
mov
loopne
gs
loopne
pop
popl
pop
hlt
sub
ret
or
fcompl
call
adc
ss
or
add
cmp
subb
pop
jno
in
dec
int3
or
sub
sub
inc
push
dec
icebp
sbb
sahf
cmp
mov
pushl
scas
cmp
xchg
sub
cmp
and
or
add
pop
push
outsb
adc
mov
mov
mov
jbe
testl
jbe
xchg
or
rcr
fmulp
mov
inc
outsl
push
inc
pop
adc
in
or
sbb
push
or
inc
test
push
or
inc
sub
add
pop
mov
and
fmuls
push
clc
gs
pop
cmpsb
jo
ja
mov
ret
sahf
cmp
cmc
push
cmp
pusha
into
aaa
jg
roll
and
dec
aas
popa
sub
xor
push
jo
lds
scas
lds
pop
mov
dec
je
sub
add
mov
pushf
adc
clc
sbb
movsb
xchg
lret
and
inc
add
test
int3
notb
push
fimuls
jecxz
jbe
cli
mov
pop
sub
adc
les
dec
jecxz
outsb
icebp
push
in
movsl
add
int
cmpsb
mov
or
inc
cmp
int3
packsswb
push
iret
jecxz
adc
and
push
shll
xchg
mov
jne
fs
xlat
fists
xor
or
roll
lods
hlt
jg
mov
push
sub
in
add
aaa
sbb
lods
push
aas
addb
add
or
mov
shrl
cmp
cld
rcrl
sub
jge
adc
sub
cmp
fs
movsb
aam
call
scas
mov
sub
and
mov
call
jmp
cmp
mov
adc
pusha
pop
inc
imul
subb
mov
xchg
sub
inc
test
and
daa
movsl
lret
fsubrs
cmp
popf
ljmp
loop
pusha
add
notb
int3
jo
bound
inc
xor
test
inc
add
data16
int3
mov
mov
fadd
fldt
arpl
inc
mov
sub
fisttpl
data16
sub
cltd
jnp
sub
mov
adc
inc
pop
rolb
jmp
sti
lcall
mov
and
adc
pusha
ja
ljmp
je
push
adc
cmp
fistps
pop
repnz
out
daa
and
sbb
int
outsl
sub
data16
xchg
subl
pushf
cs
dec
xchg
repz
mov
inc
mov
xchg
lret
ds
rol
and
outsb
and
add
sub
add
fwait
dec
sub
jbe
inc
xchg
repnz
and
xchg
lret
les
int3
sahf
rcll
push
nop
fcoml
mov
or
sub
mov
pop
nop
lods
and
ja
scas
mov
xlat
jmp
std
ja
sbb
clc
and
sbb
pop
shll
adcl
lods
adc
scas
cmp
sub
sti
aas
movsl
dec
sub
in
jne
aas
icebp
jecxz
stos
pop
dec
pop
test
jmp
icebp
test
add
js
jge
movsl
call
xchg
jns
mov
pushw
mov
cld
add
rorb
jb
popa
lds
iret
inc
push
scas
ficomps
rclb
mov
dec
pop
add
and
je
add
and
out
sbbb
jbe
or
pop
and
out
test
inc
push
mov
push
hlt
faddl
push
or
sbb
sbb
mov
push
shll
stos
les
dec
test
push
aam
adc
inc
stos
stos
or
xor
xchg
insb
fwait
add
mov
ret
and
push
dec
xchg
testb
stos
mov
pop
push
out
add
cmp
sub
xchg
or
rcl
sar
push
pop
cmp
lods
pop
and
into
stc
addr16
outsl
jnp
ds
xlat
dec
cs
ds
icebp
int3
sarw
inc
and
jb
test
add
and
pop
push
mov
icebp
lea
pop
lds
filds
dec
mov
stc
in
cmp
fildl
in
dec
dec
sub
shlb
inc
es
cmp
repz
mov
lret
sbb
jmp
jp
and
cmp
xor
mov
xchg
dec
cmpb
movsl
xor
push
dec
jp
std
or
xchg
out
into
inc
movsl
test
inc
and
mov
dec
or
add
rol
and
mov
aam
cmpl
gs
addr16
add
aam
rclb
cmp
lods
xchg
out
cmp
lcall
jl
inc
cmpsb
mov
das
mov
in
add
std
mov
xchg
rorb
fiadds
into
in
push
adc
mov
mov
xchg
insb
sbb
repz
mov
adc
sub
sbb
insb
int3
jle,pn
gs
hlt
in
jo
test
dec
imul
fdivs
jns
cmpb
sti
mov
fldcw
sarb
push
sub
fs
push
xor
fnstenv
sub
sti
cmpsl
or
mov
cmp
aam
inc
inc
adc
or
pop
sahf
or
and
xor
add
xchg
pushl
insb
and
add
aaa
lea
mov
dec
cmpsl
aad
xchg
addr16
rorl
cmp
in
mov
dec
rclb
xchg
mov
stos
cmp
cmp
in
inc
fwait
adc
sbb
out
mov
bound
add
dec
fldcw
sbb
mov
lcall
push
notl
lods
into
push
rcll
mov
cmp
xor
xlat
xor
setne
jecxz
ljmp
push
jmp
xor
xchg
popa
out
popa
push
jg
repnz
int
push
sbb
subb
lahf
jbe
idiv
leave
loop
mov
mov
add
dec
or
sub
add
imul
stos
stos
xchg
xchg
mov
cmpsb
scas
sbb
ds
pop
and
call
in
and
lret
cli
push
lahf
adc
sbb
push
or
or
outsl
into
fs
push
lock
pop
mov
add
lret
negb
int
dec
mov
xlat
decb
cmc
mov
sub
stc
push
sbb
xorl
mov
mov
pop
and
mov
mov
bound
mov
mov
std
repnz
test
jmp
cli
xchg
jno
adc
enter
and
or
cmpl
xchg
push
inc
mov
pop
shl
xor
lret
out
inc
rcrb
mov
dec
mov
in
aad
dec
push
jp
addr16
cmp
rolb
pushf
adc
cmp
xchg
ficomps
je
mov
push
gs
icebp
and
or
mov
fcoml
dec
lods
nop
imul
push
ror
push
es
jmp
lcall
inc
mov
mov
xor
mov
mov
sub
aam
lock
pop
test
in
outsl
sub
dec
push
jbe
pop
mov
out
fstps
pinsrw
inc
xchg
sahf
gs
xchg
lret
test
fwait
das
inc
pop
test
test
fwait
inc
push
sub
inc
xor
mov
shrl
imul
bound
sub
aaa
push
filds
iret
fcmove
or
nop
or
push
inc
shll
out
mov
sbb
mov
popf
mov
pop
xchg
pop
adc
in
shrl
loope
or
hlt
in
dec
jnp
clc
add
adc
lret
aaa
stos
dec
push
push
inc
xor
or
sub
loopne
or
push
cltd
inc
divl
push
adc
and
dec
lret
lds
mov
shlb
in
sub
cmc
stc
or
pushf
flds
add
mov
cli
rorb
int3
jnp
mov
inc
sub
jge
push
fstps
stc
mov
leave
dec
push
adc
lock
test
movsl
pop
cmp
iret
fwait
push
cltd
inc
add
push
movsl
push
add
add
shlb
ret
xor
insb
out
pop
push
pop
nop
test
mov
sub
pop
ret
repnz
xchg
xchg
adc
scas
mov
mov
movsl
sbb
adc
xchg
loop
imul
subl
jl
adc
xlat
lea
xchg
inc
sub
and
and
xchg
inc
test
pusha
mov
ror
scas
push
cmc
cmc
dec
andb
jecxz
xor
int3
in
outsl
jle
iret
movsb
ret
arpl
mov
popf
loop
dec
sub
add
cmpsl
cmpl
test
dec
jae
or
cld
push
cmp
inc
lock
push
or
cmp
jno
jnp
mov
shr
testb
jae
call
lea
jno
fdivl
adc
in
mov
or
mov
lds
scas
aam
mov
or
jmp
jge
add
lahf
int3
icebp
fwait
mov
jecxz
push
push
cmp
jne
leave
mov
pop
aaa
lahf
xchg
aam
pop
addr16
jecxz
stos
fistpl
pushf
inc
enter
pop
leave
and
mov
xchg
and
scas
xor
enter
push
dec
xchg
idiv
test
jl
test
xorl
test
pop
loop
cld
mov
gs
subb
std
and
inc
jl
jns
loope
pop
ds
sbb
arpl
aad
cmp
bound
lock
cmp
jp
outsb
or
xor
ret
mov
icebp
insl
mov
call
fstpl
jnp
mov
fs
das
jae
push
and
nop
sbb
push
push
jne
mov
js
jo
jg
icebp
pop
mov
shrb
xchg
cmp
push
ja
out
sub
and
lods
jg
jg
push
fwait
inc
mov
jnp
inc
scas
nop
fs
sahf
push
or
in
stos
adc
add
cwtl
pop
push
fmulp
jl
ljmp
lcall
ror
out
sar
lods
imul
dec
popa
mov
mov
add
mov
pop
add
loop
fs
lcall
mov
mov
pop
push
add
fs
lcall
stc
andb
xchg
hlt
insb
xchg
andb
mov
fcmovu
or
scas
clc
mov
mov
adc
mov
xorl
stos
cmp
aas
fwait
jmp
ss
mov
xchg
les
pop
push
or
hlt
or
movsb
jmp
cltd
dec
ljmp
adc
aad
shlb
adc
out
pop
or
cmp
int
call
nop
int
pop
xchg
mul
iret
adc
mov
jmp
inc
cmpsb
add
dec
icebp
and
ss
jbe
addb
push
cmpl
imul
mov
fcomps
dec
data16
add
add
rcrb
loop
jns
hlt
sbb
cmp
mov
aad
dec
vmwrite
shll
sbb
lock
lea
in
ret
addl
gs
aam
or
or
cmp
pop
lss
cmpsl
cli
orb
addr16
movsb
rcl
push
push
cltd
adc
lods
outsl
inc
daa
xchg
cwtl
dec
out
iret
mov
push
stos
sarb
lods
mov
ljmp
jle
lods
cld
and
dec
jo
orb
fadds
subb
adc
jns
int3
out
cmpb
xor
jne
mov
push
lcall
imul
pop
dec
dec
sub
inc
lds
nop
into
cmpl
cmp
cmc
sbb
push
inc
pop
add
and
sbb
iret
xchg
add
push
icebp
dec
push
cmp
hlt
pushf
iret
xchg
es
stos
xchg
das
push
xchg
icebp
sbb
mov
push
inc
fisttpl
aam
sub
ljmp
mov
pop
addl
stos
int3
fisttpl
leave
add
lods
insb
call
je
lock
xor
test
mov
mov
pop
fiadds
cld
push
nop
aam
mov
add
or
cwtl
daa
sarb
rcl
sti
rorw
in
mov
fidivrl
and
loope
jl
mov
cmp
call
pushf
adc
stos
inc
pop
mov
cmpsl
and
lret
pushf
rorl
nop
mov
sbb
and
adc
lcall
cmp
mov
push
mov
stos
mov
cltd
inc
pop
lds
add
fs
xchg
je
fmul
push
add
pop
adc
test
jne
xchg
outsl
jo
cmp
pushf
sbb
jmp
fisubl
inc
add
shll
sub
push
js
cltd
in
push
loopne
lret
mov
dec
sub
dec
lea
and
imul
mov
xchg
mov
xor
in
pop
jecxz
daa
stos
imulb
push
inc
xchg
mov
xchg
jp
add
adc
cltd
call
arpl
loopne
push
insb
jp
repz
jmp
xchg
xchg
mov
mov
test
inc
in
xchg
popa
or
cmp
dec
and
adc
sub
loope
stc
pusha
fcompp
jmp
hlt
fsubl
mull
icebp
popf
jmp
out
iret
sbb
je
pop
sahf
jo
inc
enter
cwtl
cwtl
sbb
jae
mov
movsb
cmc
daa
out
notb
fstpl
repnz
mov
incb
sub
fcmovnu
into
test
sti
arpl
mov
pop
add
ja
mov
pushf
sar
enter
adc
fiadds
mov
jae
neg
mov
jge
into
jns
pop
jmp
test
xor
ss
adc
repnz
jbe
out
testb
xchg
jg
jo
repnz
loop
cmc
cmc
cmp
aad
jne
xor
fsub
sbb
and
lods
js
loop
mov
jno
dec
aad
xchg
add
sub
std
jae
xor
fsubr
ljmp
imul
enter
mov
sbb
insl
push
push
ficompl
xor
insl
mov
or
adc
adc
cwtl
lcall
jns
mov
jnp
inc
enter
jbe
das
clc
jp
sbb
inc
mov
sahf
push
in
aaa
mov
xor
add
fs
xchg
push
adc
add
mov
xchg
ljmp
push
imul
jg
lea
enter
push
adcb
cmp
inc
js
lods
inc
xchg
push
subb
inc
les
and
ljmp
inc
mov
jmp
test
mov
push
inc
fdivl
scas
cmpsl
mov
leave
pop
add
sbb
lret
xor
or
cmpsb
lcall
fistps
shll
add
sub
aas
or
pop
mov
les
je
pop
jg
jg
sahf
cmp
dec
scas
movsb
fs
test
rorl
xor
push
push
mov
cmp
xor
lds
ficoms
pop
mov
enter
mov
adc
push
add
imul
in
mov
je
mov
dec
lahf
dec
pushf
xchg
add
bndldx
clc
dec
lret
pop
clc
in
sbb
das
push
mov
scas
cmp
add
xchg
out
and
push
mov
jmp
mov
insb
test
jb
mov
push
push
push
and
dec
je
jno
xchg
xor
test
stc
sub
mov
inc
pushf
in
mov
bnd
sub
orb
imul
imul
push
fcom
xor
fcmovnb
inc
jge
icebp
subb
pusha
scas
ljmp
mov
clc
push
sub
subb
dec
in
jae
mull
sarb
dec
xchg
push
adc
push
movsl
pop
pop
loop
mov
sub
xchg
push
lock
lock
into
sti
or
outsb
or
ja
pusha
xchg
data16
ret
loop
lahf
pusha
jecxz
jg
push
ror
clc
sub
inc
jg
pop
pop
mov
dec
lds
aas
sub
pop
inc
cld
push
sbb
or
push
fiaddl
or
sub
and
mov
dec
insb
mov
dec
repz
mov
in
add
outsb
fdivrl
orb
xchg
sub
rcrl
std
stc
negb
call
sarl
je
push
std
sub
jge
cmpsb
add
mov
lret
sahf
push
and
les
cmp
add
inc
sbbb
cmpsl
loop
sub
jge
jmp
sbb
loop
mov
cmp
jl
jge
or
imul
and
sbb
mov
leave
mov
jbe
shl
cmpsl
cmp
pop
or
idiv
clc
mov
fldenv
dec
mov
rcll
arpl
ret
add
scas
add
data16
dec
test
lcall
xchg
or
cmp
and
sti
mov
jno
repnz
adc
or
int
push
cmpsb
add
dec
insl
insl
mov
aam
jmp
lret
or
lods
bnd
out
sub
sarl
xor
mov
or
xchg
xchg
movsb
sbb
push
mov
push
and
insb
outsb
mov
adc
xor
mov
jae
cmp
test
loope
xchg
sbb
iret
and
popf
inc
test
sbb
xor
std
jg
shrl
ds
test
inc
bound
fstp
ret
cmp
jne
mov
and
pop
mov
fadds
xchg
lahf
mov
cmp
inc
daa
cwtl
pop
xchg
or
cmpsl
std
add
in
ja
gs
jecxz
enter
adc
pop
jp
int
or
pop
add
push
fists
mov
int
cmp
inc
sbb
leave
mov
cmp
cmp
mov
ja
loop
jmp
mov
popf
repnz
add
nop
outsb
mov
adc
imul
cmp
faddl
inc
xor
inc
es
xor
ljmp
and
push
cld
mov
repnz
jne
add
or
sub
ljmp
into
imul
mov
push
jg
sarl
jmp
daa
leave
aam
push
aas
push
divb
xchg
lahf
dec
fdivs
sarb
dec
stos
jl
adc
ret
xor
sbb
push
aad
dec
lret
adc
jmp
cmp
push
inc
cltd
push
inc
rorl
nop
xchg
push
push
loop
xchg
icebp
adc
pop
xor
and
insb
jo
ret
les
arpl
fs
lret
test
pop
dec
ret
repnz
jmp
lock
sbb
cmp
stc
rcll
mov
cmp
pop
es
test
rol
addr16
and
push
out
ss
ss
mov
mov
outsl
pusha
xor
fdivl
jb
addr16
das
push
push
push
xchg
je
in
imul
test
pop
scas
jnp
cmpsl
cwtl
pushf
sbb
push
ljmp
or
vmwrite
lcall
ljmp
lret
aas
pop
fistps
inc
jge
push
xor
outsl
mov
add
dec
popl
pusha
mov
fisubrs
lds
fcmovb
shll
pusha
bound
push
and
int
xor
pushf
in
stos
mov
loopne
dec
sub
mov
int
add
daa
add
dec
or
sbb
pop
cmc
inc
pop
insl
in
add
jle
sub
pop
and
lcall
xlat
out
add
imul
jnp
push
xlat
rclb
or
test
pop
mov
stos
pop
add
bound
leave
insb
movsb
dec
ret
add
popf
ret
pop
dec
and
addr16
adc
jo
out
inc
cmp
dec
add
aad
popf
test
mov
mov
cwtl
inc
and
sbb
rcr
jmp
leave
xchg
jne
jno
and
es
add
pop
shlb
cwtl
jp
add
adc
jne
or
test
cwtl
roll
adc
xchg
dec
pop
inc
out
ret
ljmp
pop
mov
mov
hlt
out
mov
cli
and
icebp
push
inc
or
outsl
push
insb
adc
into
fwait
push
rcrl
cmp
pop
or
mov
fistps
sbb
and
fnstsw
test
pop
scas
test
in
or
cmp
add
testl
sub
imul
lret
nop
repnz
pop
sbb
das
xor
bound
in
lcall
push
add
es
cmc
adc
xchg
mov
mov
cmp
push
mov
sbbl
imul
repnz
mov
sub
addr16
fmulp
xor
fs
jmp
pop
test
cmp
mov
sub
out
add
lods
cmp
sub
into
jns
and
outsb
pop
cltd
outsb
pushf
xchg
mov
data16
sub
and
and
push
jmp
xchg
movsb
push
sbb
adc
stos
mov
std
cmp
pop
call
outsl
ljmp
mov
and
fwait
xchg
loope
mov
sub
dec
mov
xchg
fs
pop
outsb
adc
adc
mov
jbe
loope
xchg
ret
imul
movsl
enter
aas
mov
cmp
in
sbb
sarb
inc
xor
lea
fwait
cwtl
addr16
xchg
push
pop
add
subb
les
sbb
fldl
mov
mov
rcrb
or
pushf
ret
icebp
movsb
mov
test
roll
js
mov
insb
in
test
cs
inc
cmp
dec
dec
or
outsl
add
cmp
shrl
inc
pop
dec
sti
xchg
adc
inc
inc
ds
xor
xchg
pop
sub
adc
mov
cld
pop
sbb
cmp
cmp
adc
xchg
lods
loop
inc
insb
lcall
cmpsb
lahf
inc
push
fstpl
ficoml
aas
push
push
cltd
shrb
dec
arpl
mov
outsb
ret
repnz
and
aaa
jle
lods
jg
mov
filds
inc
xchg
js
testl
push
ret
add
test
inc
lahf
dec
cmp
lods
mov
mov
sub
push
pop
test
adc
sbb
xor
push
jae
cmp
dec
loopne
mov
stc
mov
out
adc
or
fcmovnu
mov
or
adc
push
sub
lock
push
cwtl
clc
sarb
pop
pop
idivl
add
pop
clc
shlb
cmp
adc
out
in
add
fucom
add
sub
rorb
push
enter
cmp
lahf
repz
sarl
leave
push
fwait
cmp
andb
cmpsb
repnz
jl
pop
repnz
cmp
push
inc
mov
jg
shll
pop
cmc
jnp
arpl
jl
cmovae
mov
addr16
test
dec
jno
mov
add
mov
cld
adc
in
out
jge
fcomps
mov
mov
test
add
in
testl
add
fdivrl
adc
fistl
add
xchg
mov
jne
pop
push
std
add
push
xor
pop
ljmp
push
repnz
jl
fsubr
sub
sarb
stos
cmpsb
sarb
push
fcoms
hlt
setno
fcmovnu
mov
js
sbb
push
xor
outsl
lea
adc
lret
adc
adc
icebp
lret
js
xchg
jb
int3
lea
xchg
dec
jg
leave
mov
and
mov
std
xor
push
mov
xor
and
stos
mov
out
mov
pushl
push
mov
add
movsb
lds
inc
mov
jge
sbb
dec
mov
mov
fbstp
into
xor
push
outsb
out
inc
add
cmpl
sub
call
dec
jae
or
lret
xchg
clc
push
mov
jg
mov
mov
xlat
int3
sub
repz
sbb
scas
and
jns
lods
xor
xor
icebp
shl
roll
or
mov
jp
mov
fdivrl
lea
mov
in
hlt
sbb
bound
sahf
and
mov
mov
fists
pusha
xchg
pop
and
scas
xor
cltd
adc
ss
cs
mov
sub
imul
imul
in
stc
leave
repz
lods
add
daa
insl
xchg
sub
jo
inc
aas
inc
mov
fldl
mov
data16
out
call
adc
sbb
cwtl
lret
enter
and
ret
stos
xor
push
inc
andb
adc
and
add
or
mov
in
rorl
xchg
or
mov
lret
out
int3
fidivl
lret
jno
cli
and
shll
cli
cmp
inc
test
icebp
test
addb
dec
or
add
jmp
push
fmul
sub
or
mov
pop
inc
scas
add
nop
arpl
mov
ficoml
enter
jmp
outsl
or
ja
lret
xchg
mov
jge
cmp
adc
cmpsl
leave
sbb
dec
xchg
mov
mov
in
mov
inc
shlb
jecxz
cmp
inc
cmp
test
add
inc
aas
jmp
or
jns
pop
xor
jnp
rcll
add
ret
add
cmp
mov
fstl
pop
xor
cmp
arpl
cmpsb
mov
ret
fisubs
sbb
stos
mov
mov
std
in
adc
hlt
in
in
jnp
int
test
or
inc
inc
mov
push
fcmovu
jno
dec
jl
xchg
lret
rcrb
sbb
lret
dec
insb
xor
pop
jb
loop
cltd
pop
movsl
ficoml
iret
fs
ret
int
ljmp
scas
mov
xlat
sub
test
in
mov
ret
mov
dec
jne
xchg
je
decl
mov
mov
fnsave
mov
mov
lods
add
sbb
das
shll
pop
push
imul
xlat
dec
dec
dec
lods
out
xor
imul
xchg
nop
dec
insl
adc
inc
test
in
push
cmp
inc
sub
lcall
in
xor
outsl
jge
pop
push
js
cmp
loope
inc
in
fadd
js
mov
jae
mov
mov
add
jae
std
shrb
rcll
test
inc
inc
incl
lock
pop
fcompl
int
outsb
into
popf
push
cmp
mov
xchg
sub
push
shlb
lock
adc
das
out
mov
sub
lea
add
inc
movsl
loope
pop
lea
outsl
in
push
gs
mov
ret
inc
int3
add
outsb
jno
push
add
pop
fstps
insl
mov
jno,pn
test
icebp
pop
stos
cmp
jbe
push
dec
cmpsl
push
insl
mov
shl
fsts
loop
incl
int
int
mov
pushl
cmpl
mov
outsb
mov
cmp
jg
push
pop
mov
lds
mov
int3
xchg
fwait
mov
and
fwait
xchg
scas
cmpl
not
dec
push
dec
xchg
nop
pop
pop
inc
inc
or
jne
in
rolb
inc
sub
gs
dec
push
mov
xchg
and
lcall
jns
adc
sahf
mov
fisttpll
lret
test
divl
into
mov
out
insl
ds
pop
sbb
int
xchg
cmp
dec
sub
cmpb
test
add
jmp
jmp
das
xchg
add
jle
out
jecxz
xor
sub
rclb
dec
outsl
lds
push
aad
push
add
push
and
sbb
mov
pop
jo
jo
add
xchg
int3
mov
mov
mov
mov
cld
je
jg
or
ss
and
or
ds
sub
add
mov
mov
out
andb
push
dec
mov
add
pop
rcrb
cmp
pop
mov
push
cmp
cmpsl
divb
or
out
pushl
mov
loopne
jnp
push
sbb
jo
xor
and
test
push
jno
into
push
rcrb
cmovae
sahf
aad
popa
outsb
jno
cmp
loopne
js
sub
xlat
arpl
inc
dec
adc
mov
push
mov
fisubrs
scas
pop
addl
shrl
mov
jg
mov
push
xor
jp
pop
sti
sub
pop
mov
add
xchg
bound
adc
lock
aad
xor
movsb
mov
pop
jmp
pop
and
into
xchg
in
mov
xor
fbstp
sbb
adc
enter
sbbb
sarb
jne
adc
xor
insl
rol
test
clc
mov
push
jbe
dec
jb
cmpsb
out
inc
aad
daa
dec
dec
sub
scas
lods
sub
daa
jno
push
lea
pushf
mov
add
mov
mov
rcr
dec
mov
int
or
xchg
inc
sahf
test
call
fisttpll
les
xor
shll
out
sahf
fmul
xchg
std
inc
sarl
lcall
sbb
mov
cmp
sbb
fimuls
addr16
cmpsb
push
fdivrp
dec
xor
xor
pop
push
arpl
push
push
xor
dec
xor
add
lock
fistl
dec
movsl
mov
scas
and
jns
cmpsl
pushf
ljmp
mov
inc
push
or
inc
test
xchg
adc
xor
sub
add
js
aad
in
dec
jbe
sub
push
push
cmpsb
imul
add
cmp
mov
movsb
call
sbb
sbb
addr16
je
fstl
sahf
jecxz
movsl
or
mov
stos
mov
fistpl
adc
out
sub
fs
cmpsl
andb
and
hlt
xchg
cmpsl
mov
add
xchg
mov
in
roll
pop
and
cmc
jmp
mov
outsb
ds
jae
and
clc
inc
shll
int3
rcrb
sti
sub
out
jg
xchg
adc
divb
xchg
dec
add
pop
incl
jecxz
add
xor
sbb
sub
fildll
fisttps
gs
data16
pop
pop
adc
icebp
aad
adc
pusha
dec
xlat
int3
push
fucom
jg
sbb
sbb
cmp
je
shr
adcb
jge
and
add
insb
stos
roll
xor
mov
jb
lods
and
lods
int
sahf
cmp
stos
ret
inc
imul
lret
bound
les
cmp
and
pop
and
pop
cltd
lret
xchg
push
stc
ljmp
cld
xchg
adc
sahf
lock
addr16
dec
xor
mov
insl
aam
xor
and
pop
or
data16
and
imul
xchg
sub
jno
mov
sbb
cld
loopne
sub
xor
orb
inc
or
clc
std
addr16
inc
das
imul
inc
adc
jge
loopne
mov
ds
pop
jge
test
and
into
popl
inc
and
mov
test
ds
push
sbb
iret
mov
fisttps
mov
rolb
jns
pop
and
and
xorb
fsubr
jnp
out
loop
daa
cmc
jne
pop
cmpsl
sbbl
loop
mov
aad
fbld
cltd
fwait
int
sub
add
inc
into
es
arpl
lahf
or
lcall
cmp
mov
add
xchg
pop
mov
call
push
jp
push
fdivl
mov
clc
jecxz
cmp
cli
fwait
popf
jl
xchg
mov
jne
xchg
jae
cmp
xchg
fadds
dec
xchg
std
and
dec
sbb
rol
dec
loopne
cmp
push
xor
std
sti
scas
add
push
jmp
mov
mov
jbe
or
and
push
loopne
nop
dec
ljmp
jmp
dec
fdivs
mov
out
xor
pop
sarb
in
xchg
cwtl
push
jne
dec
sti
jmp
sub
mov
inc
hlt
jne
mov
jns
sub
push
push
in
dec
repnz
or
xor
or
call
dec
mov
adc
dec
daa
sahf
popa
pop
add
push
int
stos
out
icebp
adc
test
xor
lock
cs
inc
jp
daa
mov
in
ret
testl
push
faddp
outsb
push
and
lcall
pop
arpl
pop
xchg
pusha
inc
pusha
lods
in
pop
jecxz
scas
mov
xor
push
pop
or
aam
mov
and
mov
mov
push
lea
insl
dec
jmp
pop
inc
inc
sub
data16
push
jno
inc
xor
les
fwait
xchg
imul
xchg
push
jno
rcrl
jnp
shll
push
bound
mov
test
add
std
incl
out
mov
movups
insb
push
ret
roll
ja
movsl
hlt
stc
jno
out
xchg
stc
idiv
or
in
dec
and
bnd
or
into
aad
dec
mov
loopne
mov
inc
xchg
fucom
mov
and
adcl
push
dec
xlat
cmpsl
adc
xchg
rcrb
dec
mov
mov
jnp
jl
fidivs
inc
negl
and
lods
fbld
jnp
adc
jae
pop
shrl
fisttpll
sub
or
mov
inc
popl
mov
imul
and
repz
jbe
leave
arpl
popa
lret
and
andb
testb
mov
cltd
notb
mov
mov
clc
adc
or
push
push
push
lahf
notb
fwait
clc
ror
pop
leave
lret
andb
rcrb
stc
sub
mov
sub
loope
or
mov
es
pop
sbb
fstpt
sbb
negl
sub
sarl
mov
inc
dec
out
es
mov
fs
and
dec
loope
pop
xchg
cmp
cmpsb
lock
movsl
cmpsl
or
popa
or
lcall
lds
ror
jecxz
in
add
cmpsl
and
stc
mov
fcmovne
jno
add
mov
fidivrl
jge
add
repz
mov
sub
cmp
xor
pop
dec
les
cmp
test
fistpl
xor
adc
mov
shufps
mov
add
fdivl
lahf
ja
xchg
inc
inc
inc
fwait
mov
xchg
jo
lods
or
cli
push
fstp
sbb
testb
in
adc
inc
xchg
in
jmp
pop
xor
jmp
loopne
cmpsl
adc
push
xchg
popf
inc
js
adc
mov
hlt
test
push
and
sbb
dec
stos
stc
hlt
mov
cmp
adc
outsl
mov
loopne
and
xchg
mov
sahf
adc
ret
adc
repnz
in
push
outsl
and
add
std
ljmp
mov
ret
in
sub
jnp
outsb
mov
pop
xlat
popf
dec
aaa
pop
xor
push
pushf
add
adc
cmp
popa
xor
aad
mov
xor
mov
xchg
stos
nop
mov
push
dec
stos
mov
movsb
cmp
int
bound
mov
es
sar
lret
add
stos
pmuludq
sbb
jne
xor
or
test
cltd
sbb
lcall
mov
insl
and
sub
js
pop
je
ja
mov
and
lret
xor
lcall
add
jl
sbb
mov
and
add
cwtl
call
sbb
cmp
push
pop
hlt
inc
cmpsl
in
xchg
sti
cmp
adc
mov
clc
sti
enter
xor
adcb
out
adc
aam
jmp
xlat
xor
add
sub
and
pop
lret
or
cmp
mov
data16
cmpsb
mov
xchg
push
push
sub
aad
les
fimuls
lods
in
shl
inc
enter
lcall
ljmp
mov
mov
inc
xchg
bound
pusha
in
xchg
lcall
sbb
inc
mov
insb
and
lock
mov
sub
and
js
sub
jbe
adc
sub
mov
mov
mov
movsl
mov
and
adc
dec
jb
daa
adc
dec
ds
pushf
jbe
fildl
js
rcrb
out
inc
mov
sbb
inc
jae
push
les
in
and
dec
sti
iret
xchg
xor
mov
fsubs
push
and
fisubrl
sub
push
mov
and
ret
xor
nop
lret
dec
testb
in
movsl
imul
psrld
jns
sub
sub
std
xor
jo
jb
mov
sbb
out
push
jo
shll
test
ror
decl
push
out
loop
int3
mov
out
xlat
rol
scas
in
mov
mov
nop
outsl
test
jg
pop
mov
lret
stos
push
lods
cltd
xchg
cmp
daa
jg
fwait
lret
daa
rcrb
shrl
andl
mov
sub
test
cmp
mov
sub
jae
add
roll
mov
jns
mov
outsb
outsb
adc
and
mov
jno
cmp
xchg
mov
cmp
add
mov
fmuls
xchg
cmc
or
mov
lret
int
fisttpll
xchg
push
outsb
fldenv
orl
es
loopne
rolb
iret
pop
xchg
ja
pop
and
filds
fdivs
decb
shl
mov
and
shlb
xchg
push
mov
jns
sub
in
out
ds
cmp
push
cltd
or
xchg
es
test
mov
int
push
and
js
mov
iret
lret
movsb
gs
jle
pop
daa
gs
mov
cli
fmul
push
adc
js
and
les
xor
insb
in
push
mov
pushf
lock
aas
sub
xorb
xchg
ds
jl
aam
imul
mov
xchg
ret
ret
xchg
je
dec
leave
test
in
mov
mov
pop
lods
sbb
pop
outsl
inc
in
ss
mov
test
adc
push
mov
and
jbe
pop
ss
imul
cmp
push
fiaddl
xlat
jecxz
jne
cli
call
dec
lret
adc
xchg
or
es
test
and
sbb
out
dec
pop
lds
jmp
cmp
cmp
sarl
jnp
xchg
inc
pop
lret
decb
push
mov
rcrl
daa
jle
cmpsb
sbbb
std
insb
jge
mov
iret
dec
add
sbbb
add
out
loop
mov
jno
test
std
in
xchg
nop
jl
dec
clc
lret
stc
inc
jge
cld
push
jp
test
cltd
dec
ss
inc
gs
xchg
or
fcmovb
or
cld
dec
sahf
or
int
or
adc
sahf
inc
pop
test
jns
or
pushf
or
enter
mov
lcall
iret
in
ss
in
xchg
mov
push
pusha
inc
dec
xor
inc
shll
dec
movsl
cmp
mov
out
jns
lods
inc
adc
lock
jp
jg
sbb
loopne
dec
sub
mov
test
int
into
dec
inc
insb
dec
or
mov
jne
js
jnp
mov
aad
sti
fdivrl
sub
loop
mov
lods
cmpsb
mov
inc
xchg
dec
push
mov
rorl
jbe
jnp
xchg
mov
cmp
mov
inc
test
js
bound
jns
out
fwait
in
mov
inc
jae
sbb
icebp
icebp
or
shll
cmp
dec
lret
popa
adc
cltd
xor
out
out
shlb
mov
dec
sbb
cmc
gs
orl
pop
stc
mov
jle
lcall
adc
fdiv
inc
pop
cli
mov
in
dec
mov
xchg
loopne
out
lret
or
cld
movsl
pop
xchg
pop
es
push
scas
pushf
add
and
dec
pop
cmpsl
push
and
mov
push
sbb
int
or
scas
repz
sbb
cmpsb
add
sarb
sbb
daa
adc
imul
push
mov
stos
pop
dec
cli
jecxz
xor
xchg
mov
aad
lods
xor
popf
iret
xor
pusha
idivl
test
pop
loope
test
fsubl
mov
add
cwtl
push
lods
push
add
loopne
imul
stc
test
sub
mov
mov
xchg
xor
mov
push
dec
sub
cmp
dec
icebp
dec
inc
mov
nop
imul
in
sbb
mov
lds
pop
ljmp
cmpsb
or
fsubr
mov
movsl
mov
pop
push
call
inc
push
ror
adc
dec
cwtl
sbb
lcall
ja
lds
sti
cmpsb
adc
inc
mov
xchg
lret
adc
movsl
pusha
adc
pushf
mov
or
dec
mov
les
add
pop
mov
push
mov
imul
sub
jo
cmc
sub
scas
lods
stc
sub
mov
stos
das
gs
imul
dec
and
out
movsl
mov
sub
jne
jno
pop
adc
add
dec
jl
jle
cmpsb
push
test
or
iret
lret
cmp
mov
fnstcw
adc
inc
in
pop
dec
fldt
lret
mov
cmp
or
movsb
xor
adcb
sub
adc
push
xor
xor
mov
pop
sbb
and
add
dec
into
dec
mov
stos
mov
jmp
xchg
dec
adc
movsb
xor
repnz
shl
mov
inc
xor
orb
xchg
cmpsl
dec
or
iret
push
roll
mov
clc
sbb
test
jle
xchg
nop
lcall
cmp
call
pop
pop
nop
fcoml
lret
mov
add
arpl
mov
dec
jb
cmp
hlt
ret
daa
lea
cmp
scas
ss
test
aam
int
xchg
fs
mov
stos
aaa
sbb
test
cmp
mov
adc
mov
leave
xor
dec
arpl
cmp
imul
mov
mov
enter
add
add
repz
cmpsb
je
subb
shrb
jle
inc
mov
xor
mov
outsb
in
xor
lcall
in
dec
jg
add
test
xor
mov
xor
xor
push
mov
lods
pop
stc
or
daa
adc
pop
jle
pusha
fs
jns
jl
add
dec
inc
test
add
cmpsb
push
insb
adc
jae
fimull
push
jmp
decb
sahf
cmc
xchg
inc
sti
inc
fs
dec
mov
and
ss
inc
nop
movsb
lea
aaa
inc
scas
sti
mov
jae
imul
mov
rcr
xchg
dec
lcallw
add
mov
int3
sub
xor
mov
fisttps
sub
push
cltd
stc
push
cmp
cld
sub
and
es
call
xchg
jns
jno
lods
dec
int3
bound
popf
pop
adc
pop
jp
adc
adc
cmp
fstpl
ljmp
int
aaa
mov
clc
out
loop
std
inc
lret
lret
ret
xchg
mov
leave
jne
push
jmp
mov
xchg
jnp
sub
and
jmp
sub
daa
repz
flds
xor
shll
loope
ja
pop
leave
push
jb
sbb
fldcw
mov
jl
sbb
in
lods
fwait
and
mov
jle
adc
pop
lret
sub
mov
fcmovnb
jae
push
lret
fwait
mov
cli
jnp
aaa
les
sub
adc
pop
push
xor
js
push
xor
repnz
push
scas
stos
jo
mov
jmp
fs
cmpl
repnz
mov
or
cmp
mov
aam
imul
xor
mov
xchg
out
add
mov
inc
sub
add
cmp
fs
push
jp
or
seta
push
movzwl
sti
pop
repnz
loop
pusha
lea
dec
test
jnp
shll
movsl
loope
adc
loop
add
jge
hlt
repz
sbb
fidivrs
cmp
adc
add
icebp
fidivs
cmpsb
sbb
imul
and
jp
mov
cmpsb
add
mov
cmp
sub
clc
ss
add
xor
mov
adc
cmp
sbb
data16
jmp
fnsave
cmpb
cmp
pushw
std
scas
pop
and
rclb
or
adc
jns
cmp
cmp
sbb
xchg
dec
push
cmp
sub
pop
pushf
cmp
and
clc
scas
cmp
stos
jecxz
lret
movsl
insl
fistpl
mov
mov
adc
into
out
ss
xor
enter
xchg
or
add
fnsetpm(287
imul
mov
lcall
dec
sub
pop
mov
cmpsl
jns
or
xchg
push
xchg
sbb
arpl
rcrl
test
sub
xchg
test
push
mov
inc
mov
pminsw
enter
test
xlat
cmp
xlat
or
mov
mov
pop
jae
icebp
es
pop
or
ret
sbb
and
sub
jnp
into
int3
pop
inc
mov
cmp
call
fldenv
push
mov
ficompl
fnstsw
push
sbb
cli
or
xchg
mov
xor
subb
das
imul
pop
pop
add
aad
pop
and
sbb
lods
lcall
in
call
inc
inc
mov
scas
dec
inc
leave
std
sbb
shlb
lds
cmp
pushf
jecxz
sarl
mov
push
call
push
loop
jmp
sub
call
stc
out
lods
inc
test
jg
jo
and
pop
popa
adc
mov
cld
mov
sti
loop
icebp
sti
xor
cs
mov
inc
aam
mov
sbb
mov
jo
mov
jecxz
mov
rcr
sub
xchg
int3
add
push
lret
es
stos
push
out
push
adc
loopne
sub
mov
mov
push
and
jnp
shll
dec
repnz
add
sti
cmp
xchg
dec
mov
jae
mov
dec
cld
or
rorb
stos
dec
mov
loope
aas
ljmp
jg
repz
push
dec
popa
call
mov
loop
shl
pop
lods
sbb
test
lcall
lods
enter
frstpm(287
add
sbb
sub
mov
sbb
dec
out
xor
pop
push
cmp
mov
repz
mov
xor
push
mov
dec
sub
int3
hlt
cmp
movsl
nop
shlb
dec
sbb
nop
cmp
insl
and
sub
mov
out
test
adc
adc
lods
fisubrs
aaa
cltd
mov
push
repnz
das
clc
and
das
cmp
sbb
in
es
clc
mov
sub
push
arpl
xchg
push
sarb
dec
imul
fdivrl
loope
sbb
mov
rorl
pop
mov
add
jno
cmp
push
movsb
repz
adc
aad
out
insb
hlt
pop
nop
or
jl
cld
jnp
xchg
packssdw
push
mov
inc
ret
or
out
test
cmp
pop
pop
subl
sub
lds
xchg
jnp
adc
mov
bound
popa
or
sbb
lcall
aas
pop
adc
or
loop
int3
jl
push
lods
fmul
cmp
xor
ret
pop
jb
adc
jp
loopne
test
inc
push
xchg
shll
jg
mov
dec
pop
xor
popa
js
icebp
cmp
xor
inc
divb
dec
xchg
shlb
add
in
cmp
ss
lahf
cmp
inc
pusha
mov
js
add
xorb
fsubrs
test
notl
or
repnz
push
adc
mov
scas
shlb
or
inc
sbb
sbb
pop
push
fdivrs
push
jnp
mov
inc
or
jp,pn
outsb
jne
sti
arpl
lcall
sbb
ret
out
and
aaa
xor
inc
hlt
dec
fiadds
adc
mov
pop
stos
movsl
xchg
push
pop
fisubs
aas
adc
imul
test
xchg
loop
cmp
adc
hlt
mov
pop
cli
mov
in
sbb
arpl
iret
cmp
cmpsl
pop
in
sti
mov
jb
push
sbb
cmpsb
push
add
stc
and
rolb
ljmp
mov
or
ror
mov
xor
mov
sub
leave
test
pop
imul
or
sbbb
cmpsb
xchg
cmpsl
xchg
inc
sub
inc
push
adc
int3
and
js
inc
jp
loopne
pop
movsl
lcall
xchg
aaa
sub
sub
hlt
je
jge
out
jge
inc
cmp
push
clc
out
mov
ret
fnstcw
jnp
adc
push
pop
push
or
mov
sub
stc
inc
pop
add
ljmp
xor
inc
mov
and
iret
shrl
sub
aam
adc
sub
pop
adc
rcl
aam
ja
pop
add
nop
stos
dec
or
lods
add
jbe
mov
lret
push
jmp
int3
sub
or
fiadds
jnp
sbb
mov
mov
and
xchg
mov
mov
rcll
repnz
cmp
inc
xchg
adc
pop
inc
jmp
mov
lock
and
ja
cwtl
popf
lret
pusha
adc
cmp
sbb
dec
xor
repz
xor
movsl
rol
or
loopew
into
dec
or
jg
lods
xchg
xor
xlat
pop
cli
std
dec
loope
mov
xor
add
out
add
in
xor
ret
mov
adc
data16
mov
jnp
pop
lea
sub
add
cmp
in
or
mov
cltd
out
jns
mov
push
xchg
stos
dec
sbb
insb
lcall
les
jmp
add
test
mov
mov
jl
jl
imul
sarb
or
push
add
shll
movsb
mov
mov
xchg
inc
imul
in
rcrb
not
push
out
movsb
dec
jecxz
pusha
or
pop
push
repz
rcl
aad
pop
sub
add
shl
and
mov
scas
fwait
cmpsl
or
pop
lcall
aad
sub
sbb
scas
out
cli
in
in
enter
mov
pop
adc
call
int
xchg
cmp
pop
mov
xchg
inc
arpl
imul
rcrl
pusha
pop
inc
push
sub
ret
sahf
arpl
adc
sub
push
push
iret
push
jle
arpl
mov
rcrb
stos
inc
fstl
nop
xor
stc
testb
sub
aam
shl
pop
cmc
pop
inc
pushf
lcall
sbb
xor
and
mov
pop
xor
orb
mull
dec
dec
mov
pop
inc
jg
mov
sub
std
push
mov
fwait
inc
aad
xchg
loop
mov
scas
call
push
add
push
cmp
push
lahf
out
sbb
repz
jo
jecxz
ja
test
scas
dec
gs
movsl
repnz
adc
adc
pop
out
xor
mov
fisttpl
xor
mov
pop
insb
push
shr
leave
movsl
loope
cwtl
xor
or
out
push
mov
mov
mov
dec
lcall
bound
call
jne
test
ja
mov
test
shrb
bound
adc
jmp
xchg
mov
fstl
xchg
ss
and
pop
push
icebp
mov
jnp
mov
mov
cmc
out
repz
mov
pop
dec
add
loop
xchg
push
aad
sub
cld
jg
divb
dec
pop
out
cmpsb
inc
inc
add
xor
dec
ss
cld
out
xor
iret
mov
daa
ret
pop
call
push
push
popa
cmpsb
data16
mov
popf
mov
idivl
push
lea
push
bound
imul
sbb
push
sbb
in
jge
dec
daa
test
movsb
mov
add
push
and
fst
loope
push
pusha
cs
jbe
xchg
sbb
mov
ret
xor
inc
jne
lcall
pop
mov
clc
sub
mov
adc
sarb
and
cmp
imul
add
dec
cmp
in
xchg
push
rol
or
sub
cmp
sub
xchg
lods
dec
stos
shl
jo
iret
testl
iret
adc
mov
shrb
add
stos
mov
and
xor
jge
mov
jle
sub
mov
fwait
xchg
pop
mov
lret
cltd
cli
mov
cmp
or
mov
fstps
sbb
cltd
dec
ss
call
leave
dec
inc
scas
mov
mov
sub
and
jae
adc
mov
add
cwtl
xor
mov
mov
scas
mov
sbb
hlt
sbb
stos
pop
xor
mov
inc
jg
cmp
aam
ficoml
or
imul
mov
in
push
mov
enter
addl
push
in
jge
cmp
imul
xor
stos
in
ret
popf
push
imul
lds
add
bound
imul
pop
mov
ficomps
xor
stos
out
push
xchg
xchg
mov
pop
out
mov
aas
outsl
add
jle
repnz
inc
xlat
test
iret
pop
push
push
mov
mov
push
mov
mov
push
stos
inc
mov
mov
push
jnp
leave
ljmp
jge
xor
out
sub
mov
callw
loope
xlat
dec
and
fmul
mov
cmp
mov
push
and
sti
sbb
out
lock
mov
add
stos
mov
cmpsl
mov
xor
mov
not
xchg
int
jo
mov
scas
mov
pop
inc
testl
leave
popa
cmpsl
mov
add
push
mov
fisubs
aam
inc
cltd
movsb
daa
sbb
pusha
mov
jmp
popf
xor
lcall
dec
dec
push
repnz
sahf
fidivl
fnsave
fldl
stos
dec
add
sbb
jns
mov
into
xor
aad
push
xchg
inc
add
imul
inc
data16
dec
into
adc
jo
in
test
enter
mov
xlat
test
jne
push
mov
and
fcompl
and
setbe
sbb
pop
xlat
popf
dec
mov
and
pop
scas
out
sbb
shl
popl
xchg
jecxz
jae
jne
and
dec
push
and
nop
pusha
xor
jmp
inc
out
movsb
inc
pop
cmp
mov
sub
js
xor
fs
cld
add
mov
push
mov
mov
cmp
cltd
movb
xchg
cmp
test
mov
cli
inc
pop
and
and
adc
outsl
loopne
dec
cmp
mov
or
sub
clc
cmp
cwtl
mov
xchg
sbb
jnp
rcr
stos
dec
stos
dec
iret
pop
cmpl
add
push
adc
xor
inc
xchg
jmp
pop
mov
jno
xlat
inc
lods
jg
into
add
imul
jg
aaa
jg
cli
test
mov
add
andb
scas
pop
push
test
sub
ljmp
push
adc
lea
dec
push
popf
inc
addb
pop
mov
add
mov
or
loope
add
ret
les
mov
dec
sub
daa
jb
push
enter
std
movsl
and
push
or
xchg
lcall
adc
or
test
scas
mov
lahf
icebp
cs
fisttpl
xor
outsl
les
sub
mov
push
test
pop
mov
inc
pop
and
imul
mov
inc
stc
nop
cmp
adc
xor
cmpsl
pop
jmp
mov
js
sbb
mov
dec
pop
pop
out
pop
out
add
cmp
xchg
mov
adc
lods
data16
sub
mov
jmp
nopl
in
daa
push
out
jecxz
pop
sub
icebp
shll
icebp
fwait
jns
inc
sub
sbb
sub
pop
lea
loopne
push
ret
push
loop
rsqrtps
movsb
das
pushf
movsl
cmpsl
cltd
mov
aas
push
and
ret
int
add
movb
jg
xchg
pop
insl
insb
cmc
sub
mov
adc
mov
cmp
clc
pop
out
mov
cmp
adc
into
push
mov
mov
fptan
imul
xchg
xor
loopne
push
jecxz
cwtl
leave
sahf
push
pop
fucomip
sbb
sbb
es
pop
adc
or
push
loop
dec
mov
push
mov
popa
push
jns
dec
add
aam
adcb
mov
and
aaa
fisubrl
jl
test
adc
push
ljmp
into
jmp
or
scas
lret
push
and
rol
mov
and
into
push
sub
push
popf
mov
mov
add
loop
add
sbbl
pushf
lods
std
in
je
mov
pop
or
jmp
adc
add
jae
in
fistps
pop
push
iret
data16
std
jnp
fists
lahf
pop
and
std
fcoml
mov
ss
lods
dec
xchg
xchg
stos
lcall
sub
out
dec
add
cmp
jbe
mov
aas
out
ja
and
sbb
mov
outsb
cmp
xchg
outsl
push
cmp
xchg
shlb
mov
or
insl
iret
adc
sbb
pop
xor
xchg
or
shll
push
sbb
pop
hlt
insl
sub
push
cmp
cmp
pop
shrb
pop
xlat
stos
call
cmp
jl
test
fidivs
fstpt
cwtl
mov
sti
loope
xor
loopne
dec
sti
decb
test
sub
movsb
sub
add
fnstcw
lods
dec
test
sub
fs
nop
pop
pop
xor
add
lcall
cmp
ret
and
xchg
lods
cli
xchg
adc
scas
sbb
jmp
mov
add
adc
popf
int
lahf
call
add
shll
jns
push
mov
and
dec
xchg
cmp
xchg
fmul
xchg
aaa
or
rol
pop
mov
sub
xchg
sahf
es
andb
fimuls
and
mov
in
cwtl
insl
lock
mov
das
lock
inc
sarl
sub
dec
out
xchg
jne
ja
pop
hlt
loop
jg
ret
cmp
pusha
inc
icebp
iret
sub
imul
mov
outsl
xor
aas
mov
aad
loop
int
mov
sbb
sbb
lock
or
or
lret
nop
test
dec
and
test
or
mov
jb
iret
call
lock
int3
add
sub
push
repnz
add
jne
push
jo
mov
cmp
sbbb
stc
dec
xchg
lods
mov
mov
sarl
and
imul
arpl
sahf
cmp
jmp
jp
jb
sbb
xchg
iret
test
rorl
jbe
daa
imul
jne
mov
adc
movsl
or
int
andb
adc
adc
pop
push
iret
and
das
dec
dec
add
jecxz
xchg
adc
stos
pop
test
test
rcr
sahf
fists
jbe
pop
imul
fistpll
sub
shll
fldcw
cmp
jnp
adc
pop
jmp
xchg
cmpsl
js
cmp
mov
movsl
int
nop
rcll
or
in
cmpsb
jg
sti
daa
aaa
ljmp
outsl
loop
mov
sbb
sub
cwtl
cld
imul
in
lret
lret
mov
call
fmul
movswl
jl
testl
mulb
dec
or
movsl
push
je
pusha
dec
jmp
dec
jl
das
jmp
cmp
jo
or
loope
shrb
stc
push
sbb
or
je
pop
mov
push
add
jge
subl
stos
mov
fsubs
and
pop
cmc
jbe
and
outsl
push
pop
xor
rclb
lds
leave
sbb
jae
pushf
push
rcll
lods
in
add
nop
ret
dec
push
jmp
xlat
push
sub
test
cmc
rolb
bound
xor
and
ja
aaa
dec
lea
cmpsl
sbb
mov
sub
outsl
loop
fnstcw
pop
fdivl
pop
sbb
fucomp
jmp
lods
cmp
bnd
add
aas
lahf
fisubrs
inc
jb
out
out
in
xchg
fs
insb
pop
jge
syscall
je,pn
push
jns
mov
xchg
test
rep
hlt
adc
sbb
or
rcr
push
xchg
loope
hlt
jecxz
das
scas
fsubrl
aad
ret
stos
xchg
push
imul
sub
xchg
adc
inc
stc
das
xchg
push
les
imul
and
js
inc
shl
pop
adc
cmp
fistl
pop
push
shll
jmp
mov
inc
into
fwait
leave
mov
mov
incl
leave
rorl
xlat
punpcklbw
or
test
push
jg
fwait
pop
fsts
xor
in
ljmp
decb
mov
inc
or
fs
imulb
ss
fdivp
sub
shr
inc
imul
inc
lahf
dec
lock
xrelease
xchg
test
jns
xchg
mov
xor
shll
cmp
and
push
sbb
adc
push
jbe
addr16
das
xor
pop
hlt
fmulp
roll
ss
std
into
pop
out
sbb
add
dec
ds
cli
add
daa
int
mov
mov
mov
inc
arpl
adc
movsb
mov
inc
pop
dec
fists
cld
jnp
xchg
cmpsl
clc
jae
xchg
test
jns
pop
dec
cwtl
mov
adcl
pop
gs
test
sub
incl
push
out
repnz
jne
xor
out
rorb
inc
cmp
push
test
cs
add
insb
add
test
mov
pop
xchg
mov
sbb
jne
mov
divl
cld
mov
les
outsl
xor
xchg
jne
sub
mov
or
in
sbb
jne
repz
push
notl
inc
cmp
les
ret
jo
xlat
iret
movsl
into
jne
push
faddl
inc
mov
lahf
xor
addl
dec
fcomp
lahf
and
fadds
mov
sub
int3
imul
inc
pop
scas
xchg
ljmp
add
cmp
insl
jns
xor
outsl
shrb
jnp
es
fcmovb
insl
lods
mov
pop
loope
outsl
pop
daa
sbb
mov
jl
aam
inc
je
mov
pop
out
sbb
push
sbb
outsl
lods
gs
inc
in
pop
sub
bound
cld
add
aam
push
jno
popf
xor
add
add
les
cmp
imul
insb
stos
jnp
sbb
jns
and
cmpsl
leave
int3
dec
mov
dec
addr16
or
add
test
scas
jae
jmp
orl
or
enter
fsubl
in
or
stc
dec
fucom
mov
dec
and
hlt
lret
mov
lcall
push
push
mov
or
mov
roll
shlb
jns
add
or
pushf
arpl
fidivl
insl
fists
jg
and
push
add
into
rcll
out
lods
mov
and
mov
xorb
xchg
je
jae
lods
xor
pop
je
cmpsl
icebp
ja
cmp
movsl
sub
jmp
jg
pop
pop
add
aam
xchg
repz
inc
mov
mov
ss
push
push
jbe
dec
iret
out
stc
inc
sub
mov
jmp
add
or
jno
push
pop
clc
test
dec
sub
mov
jle
les
push
lock
out
lahf
incl
scas
lock
cmp
xor
xchg
shlb
mov
add
loopne
add
or
movsl
ja
push
xor
sub
pop
xchg
ret
and
pop
dec
lds
rcr
enter
in
int
inc
out
cmpsl
aaa
cmp
inc
cmpsb
decl
mov
jbe
and
lods
cli
aad
lahf
pop
jge
lahf
aas
lcall
lret
ficompl
jno
mov
popa
js
leave
test
sbb
or
popf
sar
aas
mov
shlb
jns
into
loope
pushf
and
inc
push
js
sub
sbb
insb
cs
mov
out
inc
jp
and
lahf
sub
mov
push
xor
lds
popf
jg
cmp
jle
hlt
jge
mov
stos
in
dec
push
mov
std
fcomps
jbe
adc
lock
xor
lods
mov
test
xchg
or
xor
dec
orl
xorb
jne
sbb
sub
and
cmp
fcomps
lret
mov
or
aam
call
stos
jb
mov
push
icebp
js
int3
repnz
jae
testb
iret
pop
inc
ss
fwait
inc
aas
add
fcoms
gs
dec
loopne
xor
adc
sub
nop
pop
inc
mov
ljmp
imul
and
in
insb
fnstsw
sbb
pop
mov
mov
cld
ret
insb
add
jmp
mov
pushf
pop
fnsave
outsl
add
cmovae
push
cld
loopne
pop
xor
jle
mov
shr
inc
dec
loopne
add
fidivl
es
mov
ss
pop
int
xor
movsb
fisttpll
movsb
mov
js
xchg
inc
or
dec
fldl
fwait
sti
psraw
divl
loopne
jns
cltd
pop
dec
pop
fidivs
pop
mov
cmp
ljmp
dec
add
sti
out
lock
ljmp
push
movsl
mov
lods
and
fcoml
inc
aas
inc
nop
cmp
insl
jb
mov
lret
pop
mov
je
mov
push
sarl
jo
xchg
jne
pop
test
out
clc
in
push
sbb
xchg
dec
int
cmp
loop
mov
dec
jmp
gs
pop
sub
outsl
ja
fninit
push
sahf
jecxz
nop
call
add
fsubl
or
lret
xchg
xchg
sub
jbe
roll
minps
cmp
mov
js
notl
cmp
inc
test
stos
insb
jbe
xchg
jbe
add
sub
shl
shlb
imul
sbb
rolb
loop
shll
fnsave
cld
dec
mov
ds
mov
mov
push
pop
hlt
push
test
xchg
pusha
sub
js
push
cmp
mov
push
mov
out
dec
push
push
outsl
ficoms
mov
sub
les
sbb
xor
mull
push
pop
lret
xor
pop
dec
lock
xchg
dec
test
jbe
std
scas
xor
sbb
lcall
sbb
je
test
xchg
add
ss
xor
inc
or
push
sbb
mov
aas
sbb
push
sbb
iret
jl
and
pop
xchg
inc
inc
push
imul
pop
dec
addr16
sub
jb
cwtl
adcl
unpcklps
pop
or
and
xor
sub
cld
mov
push
lret
pop
repz
mov
outsb
lcall
pop
sbb
pop
js
jnp
out
jp
aad
push
cli
cmp
add
push
sbb
sti
pop
mov
cmp
or
fwait
lods
gs
mov
mov
mov
fsub
dec
cltd
jno
mov
xor
push
xor
mov
or
inc
cltd
dec
or
xor
mov
rorl
es
test
nop
xor
gs
adc
lret
cmp
rorl
in
lock
push
lahf
jmp
xor
int3
idivb
adc
lret
std
push
andb
loop
mov
dec
adc
add
ss
faddp
cs
mov
adc
jne
inc
inc
gs
mov
lcall
into
movsb
xchg
push
cmp
out
pop
push
in
push
pop
popf
aaa
decl
cmp
adc
mov
mov
xor
push
xlat
int3
pop
push
xlat
adc
mov
jp
mov
push
lods
push
jp
es
stos
pop
mov
fsub
int
push
mov
push
cwtl
cld
jle
aam
cmpsb
fbld
mov
cmp
jb
pop
cli
std
xor
adc
push
push
scas
movsl
pop
xchg
adc
fisttpl
mov
fcmovu
repnz
repnz
loop
stc
pop
xlat
lret
add
push
das
mov
outsb
cmc
std
dec
arpl
ja
sar
xor
int3
cmp
mov
xor
mov
xor
lahf
aas
ja
iret
dec
rolb
mov
pop
je
push
lds
in
imull
adc
cltd
and
cmpsb
dec
cli
in
repz
sbb
lcall
call
mov
pop
cwtl
mov
jg
dec
mov
dec
lods
loop
add
rcl
in
fidivl
cli
push
mov
cmp
jge
pop
ds
sub
int3
push
imul
int3
sbb
rorl
push
fstpl
aam
cmp
sub
lods
and
mov
loope
jbe
sbb
mov
jle
jge
push
push
sub
pop
sub
rcll
sub
jo
and
loopne
lods
mov
pop
push
idivl
push
lret
popf
add
mov
mov
and
xor
cld
popf
dec
mov
pop
sbb
mov
pop
xchg
mov
adc
lock
dec
push
xor
sub
les
mov
fisttps
xchg
pop
mov
jbe
dec
test
into
pusha
call
xchg
push
mov
mov
inc
sub
mov
adc
or
jecxz
lods
cmp
and
leave
cmp
mov
push
mov
iret
xchg
xor
int3
mov
mov
lock
loopne
dec
sarl
mov
in
push
xorb
loope
pusha
inc
add
cmp
lcall
fadds
and
negb
repz
cmp
push
or
pop
nop
jo
lahf
xchg
jp
mov
icebp
adc
aaa
bound
testb
mov
lods
xchg
sub
jno
push
setne
cmpsb
push
jp
push
cmpsl
inc
hlt
add
repz
and
mov
out
sub
lods
jnp
rolb
push
add
lret
add
ret
inc
jle
movsb
test
test
jae
mov
mov
mov
sub
sbb
shlb
pop
test
adc
jns
push
sbb
fsts
push
push
or
push
repnz
scas
pusha
jbe
lcall
dec
inc
push
hlt
mov
out
push
sbbb
popa
xor
out
insl
or
fmull
add
push
daa
jl
or
imul
mov
xchg
jbe
adc
xlat
sub
push
stc
dec
push
cltd
sti
insl
adc
lahf
shrb
xchg
stos
and
inc
imul
dec
call
mov
pop
add
jns
add
dec
enter
jp
adc
loop
popf
repnz
sbb
aaa
out
push
and
dec
pop
sub
xchg
pop
fisubrs
mov
je
cwtl
jle
xor
mov
xchg
sbb
pop
movsb
add
test
sbb
jge
inc
test
jle
pop
or
ret
add
test
mov
mov
push
mov
add
fstpl
jge
mov
sti
push
fs
mov
out
inc
adc
outsl
sub
push
pop
adcb
jl
sarb
and
lahf
lahf
push
mov
in
inc
movsl
inc
inc
lock
ficompl
or
add
ret
pushf
sbbl
cmpsb
sub
push
mov
xchg
xchg
fistpll
and
out
mov
data16
mov
andb
scas
test
or
xchg
adc
xchg
out
sti
inc
cwtl
mov
xor
imul
loop
incb
mov
push
push
mov
outsl
xchg
ret
pop
sbb
push
mov
sbb
dec
fimuls
inc
cwtl
dec
insl
mov
lods
dec
pushf
mov
or
lds
xchg
cwtl
cld
jnp
inc
call
pop
mov
loopne
es
sub
dec
inc
push
push
not
cwtl
xchg
inc
xchg
dec
jae
dec
out
jg
pusha
jo
arpl
adc
jp
ja
loope
gs
mull
gs
pop
cli
fwait
cmp
mov
idivl
fwait
add
lret
in
aas
lods
lods
cld
mov
cltd
mov
pop
jmp
inc
hlt
jbe
xchg
insb
addr16
add
dec
sub
fidivs
mov
fidivl
gs
dec
cltd
rolw
mov
dec
test
pop
adc
mov
addr16
movl
xor
pop
sub
outsl
mov
push
xor
mov
pop
dec
out
je
ljmp
pop
inc
jb
jo
push
shrb
dec
or
xchg
cmp
pop
mov
fwait
icebp
testl
outsl
xor
sub
outsl
inc
xlat
jno
cs
push
lret
sarl
jge
sbb
lods
test
pop
popf
cmp
xchg
or
mov
push
imul
dec
jne
mov
adc
sbb
xchg
mov
aas
and
or
and
mov
mov
lahf
aad
inc
jbe
adc
stc
pushf
adc
add
inc
dec
rcl
mov
dec
jo
mov
cmp
or
jbe
mov
push
jbe
scas
sahf
rcrb
jl
sub
in
dec
bound
mov
adc
pop
sub
jg
lods
pop
xor
sbb
imul
lds
xor
popf
iret
lcall
das
mov
das
cmc
cmpb
jo
shl
and
dec
ret
dec
repnz
jns
jge
aam
jg
or
daa
mov
test
push
test
xor
leave
pop
dec
aam
push
pop
add
inc
add
lret
pop
repz
aas
ds
gs
xor
mov
inc
mov
dec
mov
mov
jp
cwtl
or
pop
sbb
push
nop
arpl
shrb
push
lret
lret
daa
xchg
les
leave
lods
sbb
andb
sbb
pop
add
mov
sub
xchg
xchg
int3
cltd
and
add
pop
shl
or
ja
ljmp
js
xlat
sub
stos
lahf
lods
movsl
hlt
pop
cld
cwtl
adcb
inc
mov
inc
test
xchg
sub
adcl
add
add
orl
loopne
push
dec
aas
mov
or
shlb
leave
out
jae
arpl
loope
inc
data16
jecxz
into
scas
sub
sub
and
dec
sbb
adc
leave
call
jp
mov
sbb
ret
insb
or
je
faddl
mov
inc
cltd
dec
mov
hlt
adc
fucomip
xor
int3
sub
mov
xor
sub
push
lea
mov
cmp
pop
subl
sbb
lahf
lea
push
jmp
cld
insl
sbb
jecxz
popf
xorl
mov
adc
dec
lret
sbb
das
pop
mov
push
ds
iret
xchg
mov
mov
xchg
std
push
pop
in
pop
and
ficompl
add
inc
pusha
pop
out
mov
movsb
mov
and
imul
jo
sbb
pop
addr16
push
fdivs
sub
jno
jne
ja
sbb
xor
add
fwait
mov
shll
fildll
pushf
adcl
cmp
mov
shl
pop
push
mov
repz
outsb
popf
hlt
dec
sub
incb
or
add
cltd
hlt
cmpsl
repnz
stos
push
jb
push
scas
xchg
xchg
sub
xchg
aas
mov
jb
pop
fcmove
aas
lahf
addr16
in
ror
movsl
lds
ja
pop
sub
popa
mov
and
pop
pop
dec
repnz
ds
mov
mov
in
add
adc
pushf
andb
and
lcall
cmc
lods
ja
jmp
fcomps
xchg
imul
loopne
jae
lods
dec
sti
sub
pop
cmpsb
fidivrs
mov
jae
pop
insb
xchg
pop
sub
jmp
out
lds
call
test
push
inc
lret
lret
lahf
or
sub
pop
mov
fildll
pop
xchg
push
push
shlb
jge
cmp
cmc
xchg
mov
sub
jp
jns
pop
test
cwtl
push
sbb
xor
push
inc
mov
cld
jo
inc
dec
push
xchg
int
aad
inc
rcrb
dec
fucomi
jecxz
mov
push
cli
adc
mov
jae
inc
hlt
aam
fadds
xchg
call
in
dec
fcom
scas
aas
sub
mov
into
jbe
sbb
pop
sahf
mov
or
out
not
pop
mov
loopne
andb
stos
in
dec
aas
ljmp
pusha
sbb
lods
in
lret
in
or
xchg
cmp
mov
pop
and
dec
jge
jb
inc
mov
mov
pop
fidivrl
daa
mov
popa
jp
mov
stc
mov
pop
mov
sbb
jns
int3
cmpsl
lock
orb
cld
notl
dec
xchg
adc
add
cmpb
repz
dec
xchg
ja
pop
mov
and
test
loop
lods
sub
dec
mov
adcl
test
or
insl
leave
jg
bound
ret
sbb
dec
xchg
ja
into
aad
cltd
outsl
add
into
mov
push
jns
mov
mov
cmc
sbb
cmp
cmpsb
jl
mov
cmp
xchg
cmpsl
aaa
aam
scas
popf
loopne
cmp
and
repnz
add
mov
sub
lds
and
arpl
icebp
adc
pop
sub
cwtl
or
lret
lret
cmp
cmp
dec
jbe
int3
leave
pop
adc
cmp
in
test
out
aas
cmp
test
test
pusha
mov
dec
xchg
scas
ret
pusha
and
push
cli
scas
jge
into
cltd
fwait
aaa
aad
pop
mov
sti
add
xchg
xor
mov
sbb
loopne
mov
stc
and
xor
xor
das
stc
movsb
mov
add
popf
or
into
jp
or
cld
jmp
je
movsl
sti
fisttps
jl
or
popa
and
xchg
outsb
stos
mov
inc
xchg
push
cld
xor
lods
cltd
and
add
fiaddl
orl
movsl
or
pop
fsub
fsubrl
ficompl
in
jp
add
dec
or
cmp
shl
roll
push
xor
data16
xchg
pop
rorl
cmp
and
cwtl
and
pop
leave
fldenv
xchg
orl
dec
or
mov
dec
cmp
jae
dec
cld
test
ss
jp
test
stos
or
out
int
sbb
call
cmp
adc
aam
sbb
repnz
mov
clc
adc
sub
cli
popa
cmpsb
repnz
cmp
or
mov
ja
les
add
cmpsb
add
mov
pop
jnp
mov
pop
push
dec
push
and
movsb
add
in
cmp
and
decl
enter
aam
insl
pop
cs
xor
dec
test
sub
add
mov
scas
popa
mov
std
les
push
mov
ds
insl
loopne
jo
dec
fstps
cmpsl
sub
sub
stos
movsb
and
fwait
pop
add
jbe
push
pop
mov
add
test
mov
mov
sub
fiadds
mov
pop
dec
les
inc
cmp
sub
out
inc
xlat
push
cmc
or
cmp
sbb
out
push
testb
xor
inc
and
lock
push
jle
cmpsl
fldcw
call
rcll
orb
xchg
jo
fwait
stc
pop
test
mov
sub
divb
cmp
pop
cmp
and
leave
cmp
fcoms
jne
add
inc
jnp
lods
in
cmp
pop
das
lods
add
test
movsb
and
test
ss
add
popf
pop
pop
or
xor
and
pop
inc
loopne
add
addr16
jge
cmp
push
fldl
leave
fsubrs
lods
bound
and
mov
jp
pop
inc
mov
repz
dec
pop
inc
xchg
cmp
xchg
jp
sub
mov
testl
xchg
push
lret
rcl
mov
xchg
loopne
and
lret
sub
pop
mov
cmp
stc
inc
inc
mulps
movsb
jo
lods
jnp
sub
lods
scas
push
stc
and
pop
mov
pop
xchg
pop
or
imul
dec
loope
enter
aam
aas
nop
shr
adc
aas
xor
dec
jg
xchg
and
fwait
adc
mov
mov
pushf
dec
andb
enter
fwait
inc
sub
xchg
stos
or
push
jae
sbb
pop
icebp
mov
cmp
rclb
das
leave
daa
sub
mov
sbb
scas
jnp
add
add
or
jp
mov
and
out
dec
sahf
fidivs
loopne
cmpsb
mov
lods
push
push
xchg
add
test
data16
inc
xor
addl
jge
into
bound
test
dec
pop
adc
xchg
xchg
mov
xchg
aas
fwait
jbe
aaa
adc
jae
pop
jge
and
rcrl
sub
cli
inc
outsl
mov
jl
and
fwait
scas
mov
lret
out
cwtl
cmp
rolb
inc
bnd
fmull
or
call
and
rcr
push
outsb
ret
jge
ja
fadd
cld
mov
mov
loope
jo
mov
inc
cmp
icebp
cltd
xor
insl
xchg
insb
pop
fistpl
out
mov
jg
push
loop,pt
lods
xchg
ret
and
mov
lcall
shr
pop
lds
repz
xchg
into
iret
std
ds
inc
and
pop
fistl
pop
leave
mov
jg
adc
adc
dec
shrl
mov
push
lods
outsb
std
or
cmp
inc
mov
add
cmp
push
lods
mov
call
int
orb
mov
insl
push
call
mov
add
stos
lea
xor
mov
xor
add
or
aam
xchg
mov
jbe
pop
decl
sbb
lock
mov
int3
mov
inc
adc
sbb
mov
jmp
and
sbb
xor
push
leave
push
mov
lcall
mov
scas
sub
pusha
dec
pop
mov
insb
inc
scas
lret
test
gs
ljmp
das
lea
in
js
cmc
and
mov
xor
xor
xchg
adc
sbb
pop
dec
mov
popa
enter
mov
xchg
mov
or
cmp
and
sbb
mov
and
aad
fisubrs
aas
cwtl
jbe
xor
jnp
pop
insb
out
pop
pop
pushf
sbb
cld
and
adc
rorl
or
mov
and
sbb
sbb
inc
out
cmp
push
jns
jle
sbb
sti
sbb
push
mov
and
xor
scas
mov
mov
aad
lods
pop
shl
pop
mov
push
ret
les
aas
sub
xchg
jo
sub
jle
ds
jae
inc
or
cmp
dec
loop
sub
push
scas
aad
daa
inc
ja
and
push
sub
mov
rclb
xor
jo
cmp
popa
or
mov
mov
sub
ja
adc
mov
imul
ds
int
sbbb
cwtl
jg
pop
lret
mov
jecxz
mov
lret
jecxz
sub
lock
push
adc
push
push
decl
into
jecxz
stc
mov
mov
mov
mov
jle
sbb
push
pop
jnp
mov
aas
iret
in
inc
sbb
inc
inc
push
jmp
pusha
or
mov
sbb
aad
mov
and
aad
int3
pop
jns
add
iret
jg
sbb
mov
mov
xchg
xchg
and
dec
mov
mov
jp
or
sti
mov
inc
loope
js
nop
lock
jo
insb
outsl
mov
out
push
fiadds
add
xor
repz
es
add
add
xchg
adc
jno
or
jge
jle
xor
out
sub
dec
hlt
stos
add
stos
mov
je
mov
insb
and
neg
cwtl
ret
mov
pop
cltd
imul
cmp
mov
fsts
adc
gs
nop
mov
pop
sahf
orb
xor
cld
std
int3
inc
cltd
and
jno
aam
fs
rcll
loope
jne
jl
pop
adc
sub
push
push
push
ror
ljmp
loope
scas
outsb
mov
rcrb
xor
and
decl
cmp
out
fimull
mov
fdivr
sarb
cli
inc
in
popf
test
movsl
add
dec
lret
daa
xchg
mov
xchg
lret
cltd
xchg
out
lods
xor
imul
in
xor
mov
xchg
mov
jns
js
in
mov
in
iret
fsubrp
jb
push
into
adc
cmp
arpl
xchg
mov
in
pop
mov
mov
in
sub
mov
ds
mov
jg
loope
imul
or
xchg
mov
fildl
cmpsl
cmp
outsb
sbb
in
and
mov
clc
clc
pusha
popf
rcrl
cltd
divb
imul
popf
lods
sahf
push
sbb
test
sahf
push
out
int
pop
jecxz
fwait
jmp
or
add
or
xor
sbb
push
or
shrl
lcall
arpl
mov
repnz
push
add
pushf
xlat
sub
mov
cmp
je
xor
mov
add
and
mov
insb
push
call
test
pop
push
add
adc
scas
out
sbbl
jmp
imul
ret
cltd
jl
pop
sub
mov
dec
push
jp
fdivr
sbb
dec
xor
mov
pusha
sbb
out
and
push
call
leave
ret
insl
mov
add
dec
jmp
xlat
notb
insl
outsl
xchg
xor
aas
jne
fcmovbe
mov
sbb
sqrtps
imul
inc
or
pushf
push
hlt
shl
xchg
mov
mov
cmc
xlat
movsb
jnp
jae
cmpl
mov
stc
lcall
add
add
and
cmpsl
push
mov
cmp
mov
cmc
ljmp
xchg
addr16
imul
sub
jecxz
jg
int3
xor
lods
std
fimuls
mov
jb
loop
jmp
fiaddl
testl
loopne
cmp
nop
mov
mov
jo
fmull
pop
aas
mov
mov
lods
dec
fadds
sbb
add
ror
adc
jecxz
mov
push
and
ljmp
xchg
sub
dec
mov
xchg
clc
das
repnz
adc
pop
add
loop
or
mov
mov
std
inc
inc
mov
cmpl
in
mov
aaa
cwtl
lcall
xor
push
nop
ret
lret
outsb
ljmp
popa
add
mov
gs
mov
or
leave
je
add
xor
xchg
hlt
and
mov
sbb
pop
xor
ja
xorl
lcall
jns
out
push
gs
push
lret
pop
fs
stc
data16
push
mov
movsl
insb
std
adc
loopne
mov
sbbl
jno
cmp
and
lods
mov
dec
cli
decl
dec
pop
sub
add
inc
outsb
and
jae
jno,pt
repz
and
test
cs
jns
es
mov
and
shll
jge
push
push
gs
std
add
dec
cld
nop
inc
and
cmp
cmpsl
pop
fistpl
leave
jp
pop
mov
cs
btc
jle
mov
jge
aas
ret
and
fnsave
or
add
mov
cmc
cmpsb
dec
popa
jne
inc
adc
filds
cmp
scas
repz
inc
or
push
sub
fadds
imul
pop
push
xchg
pop
sbb
dec
into
outsl
lods
xlat
sub
or
inc
mov
insb
jmp
or
cmp
stc
inc
dec
add
dec
testb
push
inc
dec
pop
xchg
dec
dec
mov
and
cli
ss
mov
ds
lds
dec
call
jp
fstps
pop
ret
jne
ljmp
mov
mov
xchg
push
or
outsb
xchg
mov
out
inc
ss
cmp
mov
cmp
movsb
add
or
adc
dec
jae
shrl
adc
nop
repnz
inc
xchg
push
iret
out
nop
mov
and
pop
mov
in
jecxz
jle
push
lret
inc
std
lret
cmp
push
jecxz
stos
scas
and
or
cmc
lcall
adc
test
push
test
xchg
stc
adc
ret
sub
insb
mov
call
xor
pop
sub
push
or
dec
cmp
cli
push
dec
insl
sub
in
in
sbb
adc
mov
in
test
dec
lret
fnstsw
ret
push
push
adc
ljmp
loop
pop
cltd
adc
dec
shlb
clc
pop
pop
insb
cmp
lcall
sbb
in
out
jno
or
popa
xor
sub
cmpsl
jns
stc
sbb
adc
fprem1
adc
push
adcb
jnp
test
pop
mov
inc
test
loope
sub
mov
mov
xor
dec
das
adc
in
jnp
push
fdivrl
push
and
loop
pusha
icebp
or
push
aas
xchg
sub
fsubs
or
pusha
and
dec
xchg
xlat
bound
std
push
jl
aad
cmpsb
pop
or
das
stos
ss
mov
pop
sub
inc
out
cmp
jo
pushf
dec
xchg
in
push
pop
into
pop
push
dec
cmc
add
stc
jbe
cmp
mov
or
out
jmp
sub
aam
movsb
dec
push
xchg
cltd
mov
das
aad
jne
not
movsl
pop
lock
loope
shlb
ss
das
inc
addr16
inc
inc
out
int
inc
fmul
sub
sbb
add
lcall
int3
sbb
int
pop
test
jne
jae
adc
push
sub
cmp
cmpl
add
cmp
dec
xchg
mov
fists
adc
loope
push
sub
ja
cld
aaa
push
gs
mov
cmpsl
shlb
pop
pop
dec
and
and
ficompl
xchg
mov
std
pusha
loopne
pop
gs
aad
pop
sub
mov
jecxz
das
or
xchg
leave
stc
js
fisttpll
xchg
and
lret
mov
and
out
push
repz
mov
add
pop
test
jns
adc
pop
add
int3
in
in
mov
std
push
dec
jmp
outsl
xor
in
loope
add
jae
push
mov
lods
sub
adc
push
xor
xchg
imul
inc
imul
mov
cmp
enter
cs
enter
adc
pop
cmp
push
leave
out
leave
repnz
inc
popf
push
psllw
inc
rcr
xchg
add
add
je
fsub
sub
mov
and
add
fs
mov
sbb
mov
test
rolb
mov
mov
dec
imul
mov
into
mov
mov
sub
push
aam
std
out
into
fldl
daa
add
pushf
cmp
inc
shll
fs
add
push
or
xor
sub
rcrl
pop
es
jp
pop
xchg
add
and
test
sbb
pop
mov
loope
imul
in
cmp
sub
mov
xor
sbb
mov
ret
push
icebp
or
mov
movsb
or
fidivrs
jg
sub
mov
fiadds
cmpsb
in
test
add
mov
mov
or
shll
arpl
xlat
into
mov
xor
xor
repz
pop
pop
pop
xor
pushf
fwait
mulb
testb
add
in
into
inc
inc
loopne
sbb
pop
push
loope
loop
in
pop
testb
push
pop
mov
xor
adc
fdivrs
inc
andb
or
pop
insl
rcr
aad
sbb
sub
mov
sti
adc
fbstp
sbb
xor
negl
sti
cmpsb
fisubl
jb
mov
and
add
mov
inc
mov
pop
call
rclb
les
stos
int
sub
xor
xchg
stos
add
es
sbb
add
fs
pusha
lret
bnd
xchg
lods
aam
aam
ljmp
pop
sub
and
sahf
mov
jns
add
push
push
cmp
inc
inc
ret
sub
mov
das
fsubs
xor
cmpsl
xchg
xchg
jns
dec
pop
outsl
std
sub
push
adc
or
sbb
ret
in
js
xchg
cmpsl
push
loope
lcall
ds
out
mov
out
push
call
push
pop
push
cmc
cmp
xor
cmp
cmpsl
adc
xor
ficoml
sbb
mov
into
test
into
lds
jle
int3
pop
push
jo
mov
stos
icebp
or
mov
int
imul
sub
shl
jp
leave
sub
clc
adc
repnz
mov
lret
mov
sub
shll
mov
jo
sub
fstpl
pushf
int
addl
wbinvd
lds
test
stos
aaa
sbb
mov
insb
hlt
mov
inc
jg
xchg
jp
mov
add
subl
push
pop
xor
in
xchg
stos
dec
dec
repnz
sub
push
xchg
pop
push
inc
pop
jmp
ljmp
out
daa
ss
jg
pop
lds
cmpb
inc
adc
pop
xor
mov
mov
cmp
mov
stc
mov
inc
mov
push
xchg
mov
cwtl
sub
mov
push
scas
fucomi
add
mov
mov
dec
fisttpl
int3
mov
clc
insl
cld
xor
and
xchg
int3
pop
push
ret
stc
jo
outsb
popf
or
nop
sub
stos
andl
mov
out
xor
stc
inc
iret
mov
xchg
mov
out
test
les
lock
sub
cmp
sti
iret
leave
push
loope
scas
adc
dec
out
fs
ss
lahf
cmp
fs
xor
mov
insb
push
dec
test
in
or
sub
and
mov
jp
mov
mov
dec
sub
fisubrs
pop
lret
push
loopne
cld
pop
xor
mov
sub
push
add
ss
or
sbb
jmp
es
enter
rorb
repz
shll
mov
fistl
mov
mov
out
sub
sbb
jmp
xor
testb
dec
push
lret
test
shrb
pop
enter
pop
sub
lods
pop
xchg
es
test
outsb
adc
dec
aam
loopne
loope
test
mov
inc
mov
orl
movsl
lret
es
and
fs
shlb
or
js
add
in
dec
or
out
push
inc
mov
jmp
dec
jp
stc
inc
sub
test
mov
pop
mov
jecxz
mov
icebp
push
movsb
inc
outsl
sub
mov
lea
push
or
dec
ljmp
xor
jo
testb
cmp
lock
and
out
jns
shll
call
aam
pop
fisubrl
test
bnd
pop
flds
mov
std
stos
xor
dec
mov
jb
or
sbb
cwtl
pushf
mov
mov
popf
xor
mov
jecxz
movsl
mov
xchg
inc
pop
rcrl
mov
push
sub
pop
pop
rcll
std
mov
push
jg
shl
fnstsw
inc
vpshufhw
push
push
jecxz
into
and
xchg
pusha
cmpsl
pop
add
ds
mov
movsb
inc
inc
mov
adc
adc
leave
xchg
shl
pusha
lods
pop
scas
cmp
js
jecxz
sub
pop
gs
mov
sub
or
in
test
in
mov
leave
push
push
gs
mov
jecxz
mov
dec
repnz
sbb
lcall
cmpsb
push
jecxz
pop
push
jecxz
icebp
push
push
pop
mov
icebp
push
cwtl
cmpsb
jl
sub
and
cmp
mov
decl
int
das
ret
add
jmp
out
and
or
in
adc
lcall
pop
jnp
xchg
in
jge
in
xor
xchg
push
pop
int3
out
cmc
pop
jg
mov
scas
add
push
sbb
pop
pop
push
icebp
add
xchg
mov
xlat
aad
jae
jnp
and
push
push
iret
aaa
adc
out
incb
shll
and
stc
fcmove
enter
xchg
push
inc
push
leave
push
subl
xor
push
xchg
inc
pop
push
jae
sbb
or
test
add
fldt
jns
jg
ret
or
ljmp
mov
sbb
insl
lock
test
int
loopne
adc
and
adc
mov
jo
dec
shrl
add
arpl
add
adc
enter
push
jbe
add
push
scas
jmp
adc
fistps
dec
imul
sub
fsubs
sub
jae
rorl
mov
or
add
fistps
adc
ret
rorb
and
jmp
inc
and
sbb
add
outsb
les
mull
xchg
fstl
cmp
incl
or
xlat
dec
add
icebp
sub
jg
lcall
inc
mov
lods
insl
jg
test
faddl
loopne
mov
add
lock
stos
sub
jnp
mov
loop
movsb
stos
test
xorl
and
clc
push
jg
xchg
pop
cmp
mov
add
xchg
stc
insb
push
push
aad
cmp
imul
test
jns
das
rcr
and
lock
or
inc
mov
sahf
inc
lea
and
leave
push
and
mov
jecxz
not
into
mov
push
push
sbbl
out
pop
mov
lahf
in
pop
or
mov
mov
aad
enter
xchg
lds
adc
mov
and
dec
mov
lret
aas
sbb
hlt
mov
out
test
test
je
or
push
jns
and
push
inc
pop
jo
xchg
push
mov
jmp
sbb
adc
add
push
scas
ljmp
push
mov
js
xor
adc
pop
xchg
stos
fnstcw
and
jmp
popa
rclb
adc
repz
jno
adc
mov
mov
ss
sbb
xor
repz
imul
sbb
mov
mov
movsl
xor
adc
stos
jmp
sbb
push
mov
je
mov
mov
es
adc
push
popf
movsb
imul
xchg
cmp
or
stos
mov
fwait
leave
cltd
dec
pusha
push
inc
dec
movsl
into
sub
mov
bnd
imul
mov
iret
loopne
addl
pop
mov
shrl
jno
pop
aaa
pop
and
in
cmp
jl
aaa
test
cmpsl
xor
xchg
fildl
sti
lds
jb
cwtl
mov
pop
push
or
xchg
jmp
aad
outsl
jb
mov
ljmp
mov
cltd
dec
loopne
xlat
insb
clc
pop
cwtl
push
and
and
cs
cmp
and
sub
and
or
inc
mov
jg
or
out
jae
loopne
mov
sti
cmpsl
movsb
inc
jnp
std
xchg
jo
adc
movsb
shrb
mov
mov
xchg
inc
cmp
test
or
inc
aaa
hlt
stos
sub
rclb
sti
jbe
adc
icebp
and
pop
into
aam
out
scas
std
add
std
jg
push
lcall
insb
test
and
mov
add
mov
ret
hlt
mov
dec
sub
out
jle
xchg
sti
pop
and
inc
movsl
and
es
jno
inc
push
xor
cltd
andl
out
shrl
xchg
hlt
mov
loop
inc
fucomi
int3
adc
inc
inc
xor
int
or
sarb
sbb
push
scas
jo
or
mov
jmp
repnz
pop
add
sbb
xor
repz
pop
lea
xor
insb
or
cmp
inc
inc
bound
sahf
insl
stos
and
inc
nop
cmp
dec
jo
and
mov
outsl
inc
mov
mov
dec
xchg
into
rcrl
pop
shll
outsb
cmp
inc
into
mull
pop
xor
mov
pop
test
orb
pop
test
sbb
jo
cli
inc
cli
add
loop
std
dec
in
jmp
orl
std
xchg
inc
pop
out
lret
outsb
cs
mov
jb
mov
nop
insb
hlt
jg
mov
jmp
in
dec
jne
or
int3
jb
ret
aam
dec
cmpsl
lea
sti
repz
mov
rol
xor
or
aad
test
push
call
add
xor
imul
sbb
in
inc
push
in
mov
or
or
hlt
das
loopne
push
lret
xchg
movl
dec
fcom
push
xchg
pop
lock
push
mov
fsubl
cld
mov
fidivrs
int3
in
pop
cmp
inc
push
mov
xchg
fstpl
xor
fcmove
add
add
mov
fistl
iret
pop
aad
out
xchg
push
sbb
or
lods
jmp
test
nop
cwtl
ficoms
xchg
cs
loop
pop
stos
idivb
cwtl
cwtl
xor
mov
sbb
and
testb
push
inc
daa
push
inc
cmp
out
pop
sub
cwtl
hlt
push
add
jg
mov
mov
das
out
mov
lahf
mov
mov
outsl
sub
push
jns
lcall
fiadds
jae
push
pop
jmp
mov
lret
jl,pt
mov
sub
call
cltd
popf
fstps
loope
iret
add
ss
mov
inc
fdivrl
stos
push
aas
xchg
jecxz
xchg
stos
push
mov
test
sarb
sbb
or
dec
xchg
push
call
jmp
dec
stos
mov
mov
icebp
sub
push
notl
mov
xchg
dec
stc
mov
aam
inc
xor
test
mov
push
cmp
push
int
mov
lock
and
sub
fbld
leave
or
imul
sub
in
jl
ror
cmp
jp
jp
scas
aad
pop
jmp
testl
xlat
cmpl
pop
sarb
cmp
insl
shll
xor
jbe
mov
xor
or
ret
lea
adc
sub
or
rcr
sbb
adc
cmp
or
add
js
add
cmpsb
testl
xor
xor
jp
xor
lds
dec
shl
adc
loope
xchg
cmp
or
mov
shrb
jne
sbb
add
xchg
xchg
fdivrs
lcall
cmpsl
vpmacssdqh
cmc
call
rcl
out
push
cmc
xor
sub
decl
adc
sub
sarb
push
mov
mov
dec
add
ljmp
xchg
adc
dec
fcmove
out
add
sub
pop
jbe
sti
inc
in
cs
xor
enter
rorl
imul
cmp
cmp
inc
das
push
cmpsl
jecxz
in
inc
inc
leave
stc
xchg
inc
adc
outsl
idivl
addr16
pop
adc
dec
pushf
sbb
push
in
push
push
jp
cmp
aas
mov
sub
xor
or
pop
out
jle
es
lds
fstl
cmp
push
xor
cmp
aas
mov
rclb
inc
mov
enter
inc
xor
push
push
or
or
push
out
addr16
les
dec
scas
int
cmp
mov
inc
xor
mov
lcall
xor
dec
mov
jl
or
pop
mov
fiadds
mov
popf
cmp
lock
jmp
les
xchg
jp
dec
arpl
loop
mov
add
pop
mov
add
lock
leave
int
inc
or
pop
xchg
daa
sbb
xchg
clc
jp
pop
outsl
cld
mov
adc
andb
or
mov
and
fistpl
mov
pop
sbb
or
xchg
dec
pop
jno
aaa
pop
xor
incl
pushf
mov
xchg
sbb
jge
sbb
sbb
mov
pop
hlt
cmovle
jl
in
into
out
cli
mov
pop
pop
addr16
adc
or
mov
in
adc
cltd
inc
xchg
fimuls
addr16
push
out
aaa
div
aas
nop
js
mov
mov
ficoml
lret
andb
cwtl
xchg
jge
and
pop
pop
imul
dec
sbb
enter
inc
and
aam
ds
dec
lcall
add
test
inc
mov
mov
daa
or
iret
aad
outsl
cmp
push
fwait
or
dec
pop
xchg
and
xor
insl
test
sub
sbb
loope
stos
adc
jae
jns
daa
push
sbb
and
cmc
daa
rcll
jge
dec
sbb
enter
lret
clc
jge
lds
es
in
popw
jno
sub
into
xchg
sbb
cltd
loopne
stc
pop
loope
or
xchg
inc
xorl
mov
into
push
lds
aad
or
gs
adc
lods
jecxz
rcll
mov
popa
xlat
popf
cld
es
adc
mov
imul
adc
sub
ret
jp
popa
or
cmc
add
fildl
leave
fsubrl
lret
fs
cmp
pop
cld
adc
arpl
sub
fmull
jecxz
int
sbb
adc
les
mov
push
lea
mov
sub
imul
inc
mov
imul
cmc
adc
push
test
rclb
ja
dec
sbb
pop
and
std
in
xchg
adc
sub
cmp
test
dec
push
aam
call
test
mov
add
push
icebp
cmp
js
test
test
and
dec
xor
mov
mov
push
and
imul
bound
fwait
jle
mov
cld
xor
lods
xchg
idivl
insl
out
stc
seto
insl
cld
incl
mov
cmc
adc
cld
sbb
adc
xor
adc
ds
cmp
push
xchg
pop
or
mov
imul
add
inc
std
cmp
jb
ja
cmp
sbb
jnp
into
or
pop
or
rorl
movsb
jecxz
ss
inc
xchg
and
and
sbb
scas
gs
jne
mov
sbb
dec
xchg
int
lock
lods
loop
xor
dec
inc
pop
pop
xlat
test
daa
je
mov
ds
das
rcr
adc
mov
addl
sub
adc
addr16
xor
sub
cltd
in
addr16
mul
mov
mov
dec
sub
ss
cmp
dec
testb
push
pop
aas
cmpsb
or
cmp
jb
adc
mov
sbb
sub
jbe
and
mov
mov
and
insb
sbb
jno
sahf
or
mov
sub
das
inc
adc
call
xchg
mov
adc
inc
nop
mov
push
inc
imul
fidivrs
cli
lods
mov
mov
and
subb
xchg
sub
and
repz
out
or
fimuls
and
fidivrs
cli
cmp
mov
popa
dec
sub
add
aas
pop
test
int
adc
fdivs
cmp
mov
std
scas
fs
idivb
lods
movsb
es
rcll
or
lods
pop
pop
xchg
or
cld
rcrl
mov
decb
repnz
sub
ljmp
jno
sbb
cmc
lods
mov
ljmp
sbb
sahf
and
outsb
cmp
mov
cmpsb
xor
pop
outsb
inc
shl
fbstp
pop
pop
daa
cmp
ret
repnz
add
imul
and
xchg
or
adc
out
mull
cmpsl
pop
lods
outsb
sub
loop
inc
das
sbb
inc
inc
jae
stos
inc
push
rcll
inc
bound
mov
push
gs
adc
test
inc
aad
xlat
mov
shrl
cmp
aas
push
mov
andb
js
push
inc
mov
mov
into
ds
or
scas
pop
popf
add
dec
pop
pop
or
adc
in
inc
sbb
loopne
jp
faddl
jmp
pop
aam
stos
dec
mov
and
sub
sahf
jns
andb
icebp
sarl
movsb
sbb
push
repnz
sbb
xchg
movsb
lea
mov
dec
mov
mov
adc
inc
arpl
push
in
or
daa
jp
mov
dec
push
pop
mov
dec
dec
cmp
pushw
aam
adc
jp
bound
add
fwait
dec
push
sahf
out
movsb
cmp
mov
enter
inc
xchg
adc
popa
or
out
iret
pushf
imul
mov
lahf
mov
mov
cmpsb
fstpl
mov
or
movsb
sbb
pop
push
call
add
pop
fwait
clc
je
xchg
es
ja
adc
bound
and
adcb
sbb
js
outsb
sbb
mov
popf
mov
inc
aaa
mov
ja
jae
push
fldt
pushf
pop
cwtl
pop
inc
cmp
sbb
cmc
push
lret
or
or
sub
data16
and
fcoms
xchg
mov
xchg
push
outsb
mov
out
lods
dec
orb
push
in
dec
cmpsb
icebp
pop
fmuls
stc
lods
enter
pop
xchg
fistpll
push
pop
movsl
clc
inc
ljmp
adc
sub
jno
out
pop
js
repnz
mov
dec
lret
outsl
sbb
mov
shl
popf
test
and
dec
add
dec
mov
movsl
repnz
jne
inc
xchg
notl
jnp
mov
sbb
or
repnz
or
std
push
gs
lret
and
pop
lret
aad
dec
mov
movsb
in
xchg
shrb
inc
push
enter
mov
cli
xchg
dec
inc
les
cmp
test
stos
fdivs
jns,pn
inc
lret
cmpsl
popf
mov
lods
add
xchg
testl
inc
out
push
into
pop
test
jno
dec
call
cmp
cmp
ja
adc
xchg
xlat
loope
adc
mov
ret
jg
sbb
dec
test
cmc
shr
roll
test
jl
notl
nop
aam
iret
in
inc
add
jmp
push
xchg
cmpsl
dec
mov
divl
mov
inc
xor
mov
jae
leave
xchg
ret
sub
jns
fwait
ss
xchg
sbb
js
mov
cmp
and
fimull
jg
jl
cmpsl
cmp
std
adcl
pop
aad
xchg
lds
dec
scas
movb
jle
in
xor
inc
mov
jmp
std
fcmove
cmp
adc
mov
ret
arpl
stc
pop
notrack
dec
push
mov
stos
loop
pop
sti
ret
push
fst
xchg
add
jbe
and
inc
subb
jg
xchg
lcall
clc
pop
test
popa
mov
sbb
neg
mov
lods
add
jnp
outsl
mov
cmp
add
ret
sub
jl
jecxz
leave
in
sub
std
xchg
rclb
popa
dec
push
nop
cmp
xchg
scas
pand
ds
and
dec
outsl
cltd
pop
scas
shr
shlb
xor
ds
test
cmp
xor
rcr
lock
xorl
int3
mov
js
mov
jmp
cs
fwait
jge
rorb
outsb
mov
sub
aaa
repnz
addr16
addr16
lret
test
jl
jne
sbb
in
mov
outsl
lretw
xchg
cmp
in
inc
or
orb
movsb
cli
mov
or
int
insl
sbb
jne
loop
adc
sub
rol
movsb
pusha
push
or
into
mov
mov
cld
jmp
mov
add
out
ljmp
and
pop
gs
mov
cmpsl
aas
inc
mov
daa
mov
push
inc
or
test
and
orl
lcall
pusha
cmp
fcoml
ficomps
fidivl
cmp
pop
movsl
popf
jne
mov
mov
fwait
scas
xor
xor
ret
ret
cmpsb
loopne
xchg
les
jecxz
imul
dec
mov
dec
push
xchg
xorl
push
mov
in
jle
sbb
and
int3
cwtl
in
bound
dec
incl
inc
sbb
fcompl
lock
xor
mov
aam
and
cmp
out
shrd
adc
xchg
in
sub
mov
xchg
lret
jecxz
cmpsl
movsb
cmpsl
push
mov
pushf
outsb
in
mov
pop
lret
mul
das
pop
aas
popf
negb
leave
ja
jb
push
mov
in
in
fdivrl
and
push
imul
loope
sbb
xchg
jecxz
pushf
mov
jb
pop
sub
pop
ja
mov
mov
mov
or
insb
mov
out
repz
pop
call
push
test
add
loopne
jmp
mov
shl
ljmp
inc
xor
fidivrl
adc
sub
orb
aam
out
mov
pop
aad
pop
jo
pop
flds
insl
incl
xor
or
into
insb
push
outsl
std
fadds
pop
xchg
fs
daa
mov
mov
mov
xorb
push
adc
sbb
out
cmp
sub
and
pop
ljmp
in
cli
sub
mov
insl
cmp
push
js
bound
test
repnz
movsl
mov
xchg
pusha
adc
testl
sub
nop
daa
mov
icebp
push
cmp
xchg
add
jp
xor
cmc
mov
inc
repnz
jbe
add
daa
or
jle
lock
imul
sbb
dec
imul
in
rorb
pusha
addr16
sahf
xchg
jno
dec
pop
lea
stc
ds
push
cmp
mov
out
fimull
shll
movsb
or
mov
adc
mov
mov
or
repz
ja
mov
or
xchg
out
popa
cwtl
push
pop
add
mov
xchg
cvttps2pi
test
mov
stos
shlb
aad
out
mov
xor
push
jle
xchg
pop
in
add
mov
jnp
cmp
mov
inc
or
xor
adc
pop
rclb
jno
pop
movsl
aas
daa
mov
xchg
loope
and
xorl
movsl
or
or
popa
negl
frstor
mov
pop
xor
mov
jo
cmpsb
lods
lods
push
dec
or
sub
mov
hlt
adc
in
jae
pop
push
shll
dec
pushf
jp
add
inc
jl
out
insl
jb
sbb
iret
stos
mov
pop
test
lods
mov
mov
push
pop
inc
enter
mov
jae
add
negb
data16
dec
jb
fmuls
add
xor
pop
je
data16
int
adcl
adc
pop
mov
stos
cmp
mov
movsl
mov
xor
sub
mov
mov
repnz
loop
and
adc
xchg
jns
pop
inc
dec
sub
push
dec
cld
iret
movsl
add
ret
push
xchg
ret
hlt
mov
sbb
jmp
xor
jg
sbb
xor
mov
pop
fildl
aas
sbb
rclb
jmp
sarb
mov
pop
lds
jnp
ljmp
es
jnp
mov
cli
dec
scas
ret
pop
cmp
or
or
ret
mov
sbb
cld
and
dec
cmp
push
lahf
mov
or
push
mov
mov
pusha
xchg
addb
dec
test
xor
js
fcmovbe
add
scas
and
out
push
sbb
xlat
mov
push
enter
stos
dec
cltd
ds
pop
ret
aas
cli
mov
adc
int3
add
cmp
cltd
cmp
ss
fidivrl
shrb
sbb
mov
jne
fcoml
add
test
inc
nop
or
mov
pop
mov
lret
lock
pop
push
rorb
mov
cld
adc
inc
mov
ja
push
test
push
adc
push
nop
push
mov
pushf
cltd
mov
dec
push
outsb
fdivl
add
add
sub
pop
cmpsb
jle
out
sbb
xchg
push
pusha
sub
test
jbe
nop
ss
add
popl
add
movsb
adc
in
mov
xchg
mov
mov
aaa
test
movb
add
imul
jbe
mov
push
mov
cmp
dec
test
jmp
flds
adc
inc
scas
add
mov
jae
lret
dec
fadd
adc
inc
push
xchg
sub
push
pop
nop
xor
ja
ss
mov
je
dec
sub
insb
pop
cmpb
mov
xchg
movsl
jo
bound
mov
xchg
scas
hlt
adc
std
mov
lock
bound
subb
repz
fsubrs
mov
daa
outsb
push
pop
shl
sti
mov
shlb
adc
out
xchg
sti
cmp
lods
popa
push
sub
cli
and
xor
mov
outsl
incb
je
sbb
popa
inc
jb
push
lea
cld
pop
cmp
sub
arpl
std
pop
out
lods
movsb
cmp
repz
adc
fstps
mov
sbb
fimull
fcoms
addr16
ficoms
sub
dec
push
xor
out
or
hlt
in
mov
mov
lods
test
int3
aad
popl
lahf
fsubs
mov
ljmp
rorb
in
jmp
imul
sub
test
std
out
mov
xchg
aas
mov
xchg
xchg
mov
pop
cmp
xchg
test
arpl
loopne
mov
push
dec
xchg
pusha
jo
inc
hlt
int3
xlat
xchg
jg
scas
cmp
in
inc
push
inc
repz
mov
xchg
push
scas
in
and
mov
sbb
jns
leave
iret
pop
push
and
stos
mov
and
jno
lret
rcll
add
or
inc
loopne
pop
push
jo
loope
mov
test
in
push
and
sbbl
dec
and
sub
and
pop
push
push
call
mov
fwait
shl
jbe
mov
in
in
mov
sbb
or
jle
lcall
push
mov
inc
sub
jmp
cmp
std
cmc
add
loope
xchg
das
scas
sbb
and
sub
bound
jnp
add
xchg
movsb
sbb
ljmp
jp
test
mov
fcom
pop
fdivs
sub
shll
xchg
adc
out
cltd
sub
mov
repz
or
pop
xor
ja
test
push
sbb
cmpsb
push
or
pop
push
jl
mov
adc
pusha
push
rol
cmp
shrl
pop
pop
dec
cmpsl
or
or
sub
cs
sub
imul
push
inc
jo
cltd
insb
push
inc
mov
movsb
add
cmc
out
leave
adc
loop
aaa
xchg
jecxz
dec
icebp
ret
filds
decb
stc
pop
clc
jne
dec
add
inc
inc
into
cmp
jecxz
sbb
fadds
test
mov
iret
fidivs
imul
inc
mov
pop
push
test
xchg
or
xchg
mov
xor
popf
push
xor
in
jns
mov
xor
jne
insl
adc
cmc
out
mov
lods
ss
cwtl
loop
in
jb
lods
arpl
xor
arpl
mov
in
add
das
cmp
pop
sbbl
enter
push
ljmp
mov
loop
jle
cmp
inc
bts
adc
sub
cs
ret
aas
adc
js
jle
adc
xorl
in
and
sti
mov
push
mov
out
lods
push
pop
rcll
decb
mov
stc
popf
push
aaa
cmp
sub
ljmp
fsubs
je
popf
lods
cs
and
js
jecxz
loop
and
add
cmp
inc
jns
sub
data16
dec
adc
inc
cltd
inc
les
add
ja
int3
sti
fisubl
mov
mov
in
ljmp
into
xchg
jns
ror
shlb
cmp
mov
rorb
pop
fistpll
stos
out
iret
lods
cmp
mov
mov
jge
testl
ss
push
adc
adc
scas
pop
pop
pop
cmp
pop
xchg
cmpsl
push
je
cld
outsb
cs
pop
xor
push
jl
ret
psrlq
arpl
add
shl
imul
idivl
cwtl
stos
mov
lods
sub
pop
hlt
movb
dec
sbb
push
mov
xchg
test
xlat
jnp
xor
sbb
add
shlb
lock
add
insb
mov
add
call
pop
cltd
lret
lret
outsl
ss
fidivl
sbb
pop
mov
push
add
jmp
dec
and
inc
mov
aas
jg
fcoms
add
shll
xchg
cmpsl
rorb
fwait
jmp
xchg
jns
pop
imul
enter
mov
push
jl
mov
jnp
test
stos
inc
jge
adc
xchg
mov
cmp
ret
out
mov
dec
pushf
std
rorl
xor
mov
rol
mov
or
inc
mov
jo
insl
in
arpl
adcb
add
pop
je
shlb
mov
imul
call
jbe
loope
insl
jmp
addl
push
call
ljmp
push
jle
inc
bound
ret
int
pop
add
and
pop
mov
sarl
rclb
inc
icebp
pushf
daa
and
mov
movsl
aaa
mov
imul
leave
dec
pop
ljmp
in
iret
int
fildll
xor
inc
ficompl
inc
sub
cli
pushf
fwait
ljmp
mov
out
jns
test
jnp
mov
lret
rorl
sbb
xor
pop
mov
ljmp
jp
loope
pusha
vmulpd
or
adc
imul
mov
cltd
jae
lods
dec
out
or
mov
gs
lods
jno
jb
stos
insb
hlt
std
ret
xchg
int3
sub
es
cmc
dec
popf
test
mov
lret
sub
negl
mov
add
mov
mov
ja
mov
lahf
stc
shlb
jl
lahf
rolb
mov
jo
pop
adcb
rol
or
pop
ljmp
gs
aas
lea
out
mov
pop
out
xchg
sti
dec
adc
add
xor
ja
mov
adc
and
pop
lods
fsts
xor
sub
mov
sbb
lods
adc
flds
in
sub
dec
adc
mov
push
jl
lsl
adc
dec
push
mov
mov
icebp
out
call
ja
mov
jb
aam
movsb
xor
jno
cltd
or
cmpsb
pop
loop
in
leave
popa
bound
shl
and
xor
shrl
or
dec
inc
push
fcoml
or
push
push
push
shrl
mov
adc
in
mov
aas
js
jae
into
push
mov
sbb
shll
pusha
jmp
mov
jno
ja
add
pop
out
mov
repz
fstpt
enter
cmp
leave
cmp
sub
add
push
jns
jne
popa
xor
cmp
jb
inc
xchg
add
mov
xchg
pushf
jo
sbbl
mov
fcmovb
out
xchg
jl
xor
enter
and
jno
mov
std
mov
cmp
or
add
outsl
pop
pop
pop
ss
inc
cld
and
das
aad
cmp
adc
push
cmp
jp
push
xor
jne
mov
mov
push
hlt
jp
xor
jne
mov
adc
or
push
pop
mov
clc
jg
into
cmp
daa
out
negl
fsincos
lock
aas
pop
stc
cltd
pusha
cmpsb
in
xchg
pop
bound
iret
adc
jl
inc
mov
repz
movsl
int
cld
inc
sub
or
dec
pop
xor
or
enter
test
inc
hlt
lahf
add
mov
xor
out
shl
pop
stos
xor
jb
cmp
add
mov
lcall
movsb
inc
test
sahf
and
fwait
out
and
sub
add
sub
xchg
cwtl
movsl
xchg
aam
sub
adc
cmp
test
fucomp
jmp
xchg
pop
jns
idivl
popa
cmpsl
sti
mov
out
rorl
test
mov
je
inc
scas
movsb
xor
mov
outsb
idiv
xor
inc
mov
pop
sbb
adc
mov
cmp
bound
sbb
jmp
xchg
inc
xchg
iret
mov
and
in
dec
lock
push
xlat
call
in
pushf
xchg
jp
ret
fs
clc
mov
arpl
jp
push
daa
movsb
cmpsb
inc
and
sahf
out
cmpsb
cld
mov
js
mov
jae
jno
popf
sti
dec
arpl
pop
aam
and
les
addl
fisttps
loopne
test
sarb
and
add
mov
call
mov
bound
pop
push
pop
loopne
stos
jmp
cmp
insb
pop
sub
sub
fdivs
addl
test
rclb
add
add
mov
sti
adc
test
inc
stc
pusha
xchg
mov
iret
enter
ficomps
sar
or
sbb
push
xor
push
idivl
xor
fldcw
push
lock
mov
mov
sub
icebp
call
mov
into
cmp
aad
sahf
inc
jmp
ret
enter
sbb
data16
das
push
popa
daa
cmpsb
out
jb
adc
mov
xchg
and
int3
leave
jp
pop
dec
out
push
or
fisubrs
mov
pop
hlt
fimull
in
sarl
mov
push
es
and
aaa
jno
inc
outsb
cmp
mov
pop
jnp
roll
adc
push
in
xchg
or
dec
push
aaa
cmpsb
insl
xor
adc
imul
mov
cltd
leave
cmovge
pop
pusha
inc
lock
rclb
pop
repz
mov
mov
scas
bound
or
xchg
mov
mov
push
and
xor
inc
aaa
dec
mov
daa
add
mov
jp
fisttpll
test
scas
out
testb
pop
addr16
arpl
cmpsl
sbbb
fstl
test
popf
nop
ljmp
mov
mov
xlat
inc
cmp
notl
xchg
xchg
ret
addr16
xchg
std
out
mov
push
or
mov
sbb
jne
lods
cmc
sbb
cwtl
add
icebp
add
mov
mov
fcmove
aaa
ds
test
out
mov
dec
in
test
sahf
mov
data16
aam
push
inc
xchg
mov
loop
adc
mov
fsubrl
dec
ljmp
xor
test
push
sti
mov
xchg
ds
jne
mov
sub
pop
int
pop
in
mov
clc
jo
mov
sub
fsubrs
aaa
pop
jle
int
aam
aas
pop
xor
adc
lea
dec
xor
and
fsts
testl
lahf
sbb
sbb
inc
xor
std
lock
ds
lret
pushf
push
lcall
inc
xor
rep
test
data16
mov
es
lahf
and
and
out
in
out
cmp
xchg
add
inc
cmp
and
jg
add
pop
fbld
dec
mov
lret
in
lods
sbb
shr
sub
push
lods
pushf
cwtl
test
data16
jmp
mov
xor
xlat
movsb
ljmp
das
add
stc
mull
mov
sub
jl
sub
arpl
pop
push
ljmp
and
lock
add
out
sarl
ret
xchg
divl
and
scas
mov
fsubrl
ds
mov
movsl
out
cld
mov
dec
cld
inc
scas
fs
jp
arpl
imul
pop
adc
dec
mov
subl
fimull
aas
mov
pop
inc
jno
mov
sbb
mov
lret
mov
or
sbb
pop
pusha
andb
in
mov
push
mov
cwtl
add
test
sbb
dec
ds
add
rclb
dec
lret
inc
xchg
cmp
push
leave
xor
das
dec
inc
stos
lock
test
sub
mov
inc
iret
cmp
jl
pushf
inc
cli
scas
sub
bound
pop
loop
xchg
dec
imul
test
fwait
insl
or
call
fwait
lods
sbb
or
and
push
inc
push
fwait
in
fucomp
mov
scas
shrl
icebp
jge
sahf
xor
jg
stc
xchg
sbb
jl
adc
mov
cmpsb
ja
popa
push
mov
lea
imul
adc
icebp
dec
mov
add
jb
pop
fisubrs
push
test
sub
outsl
dec
inc
and
fdivl
scas
cltd
jnp
cwtl
xchg
outsb
stc
adc
sbb
aaa
push
cwtl
ds
adc
mov
out
jecxz
out
lret
loop
mov
xchg
out
leave
adc
mov
outsb
jle
mov
dec
in
in
in
aam
and
mov
adc
inc
mov
das
fnstcw
fdivp
add
pop
out
leave
push
xor
adc
push
jo
xor
stos
add
inc
mov
je
add
scas
lds
popf
push
test
push
nop
mov
lcall
lods
pop
fstpl
jbe
arpl
ljmp
add
adc
sub
xor
push
stc
test
push
les
push
shll
stc
xor
mov
std
int3
in
pop
pop
dec
test
scas
ret
fst
out
inc
push
adc
jnp
push
dec
and
mov
add
in
jmp
ss
fdiv
cld
mov
xor
mov
xchg
push
fwait
dec
shlb
pop
lret
mov
sahf
mov
lcall
pop
outsb
and
sbb
xlat
sbb
inc
adc
push
jo
js
jne
enter
push
cmp
pushf
into
add
clc
data16
das
out
stos
je
sub
ds
push
inc
repnz
sub
jmp
dec
push
rorb
movsb
lahf
loopne
stos
cmp
push
dec
and
or
cmpsb
push
rcll
sub
bound
push
fsub
bswap
jp
xchg
mov
in
mov
fwait
jo
insb
mov
pop
or
inc
test
push
ret
lret
xchg
push
fwait
and
dec
fsub
jl
mov
add
mov
ret
cmp
movsb
out
mov
lock
dec
lcall
mov
lea
cmp
jp
xchg
fnsave
out
xchg
ljmp
pusha
sbb
mov
les
sahf
xchg
in
lcall
or
aad
adc
add
sahf
lock
arpl
popf
push
std
sahf
and
in
loope
aaa
pop
into
jno
repz
mov
cvtpi2ps
in
sbb
rolb
test
pop
mov
cwtl
test
nop
xchg
mov
mov
test
std
push
add
hlt
jb
xchg
mov
push
and
mov
data16
cmpsb
inc
pusha
lret
sbb
outsb
mov
test
aam
scas
insb
and
das
enter
and
jg
pop
stos
subl
pop
insb
push
mov
add
inc
add
stc
sbb
xchg
adc
mov
xchg
fidivrs
stc
popa
test
sbb
cmovle
cmp
jg
jl
scas
std
addb
adcb
jge
sbb
fldcw
cli
xchg
fsubs
mov
sbb
aas
test
push
sbbl
sub
roll
pop
mov
stc
mov
add
pop
lea
jge
shrw
push
or
sbb
in
std
divl
test
scas
data16
fcoml
sti
scas
pusha
pop
enter
repz
dec
xor
pop
and
dec
stc
test
push
dec
rcrb
int3
xchg
movnti
pusha
pop
sub
fs
mov
int
cmp
mov
mov
xor
jg
iret
mov
push
jecxz
jnp
ja
xor
mov
jnp
xchg
sahf
inc
jmp
sbb
in
fisubl
sub
jp
ss
xchg
mov
adc
repz
or
cmp
jno
insl
jg
cmp
jo
int
add
pop
scas
std
lahf
cmpsb
mov
fsubrl
les
out
xchg
add
stos
movsb
sub
xor
imul
mov
icebp
sbb
addb
insl
or
xlat
dec
cwtl
pop
push
pop
inc
in
add
dec
pop
rorb
mov
mov
dec
jecxz
xchg
mov
das
and
push
rcrb
addr16
jle
jo
xchg
je
aas
xlat
lods
xlat
loope
stos
sbb
fs
sbb
aas
sets
jns
inc
inc
jno
test
hlt
out
push
sahf
pop
adc
test
scas
mov
xchg
dec
mov
sub
ret
pop
inc
jl
iret
xor
je
aaa
lret
xor
rorl
dec
cmp
pop
rcrb
scas
mov
out
les
out
add
mov
sub
cld
lahf
xchg
pop
cmc
mov
adc
daa
movsb
xor
sub
xchg
call
add
test
idivb
ja
loop
pop
jmp
daa
dec
or
xchg
out
adcl
xorl
test
lock
cmp
push
int
mov
cmp
shlb
jo
push
ud1
cmpsb
pop
fs
sub
fwait
adc
push
pop
imul
xor
push
fdivl
loop
lock
xchg
fists
ds
icebp
jo
jmp
loope
int
mov
or
fwait
clc
xchg
movsb
ficompl
and
mov
add
adc
add
lcall
pop
dec
fwait
lret
fstpt
insl
push
aas
and
outsb
mov
adc
out
cmc
sbb
mov
xor
mov
lcall
mov
push
lock
cmc
mov
loop,pn
mov
cmc
aaa
inc
loop
pop
sbb
outsb
push
shrl
push
addr16
test
int
lods
push
scas
push
jmp
rclb
mov
dec
stc
inc
adc
and
scas
and
jne
mov
jo
cmpb
adc
aad
cmp
movsb
jne
cmp
movsb
pushf
enter
and
jle
mov
mov
jl
cmpsb
sbb
dec
aad
xchg
js
push
mov
stc
inc
xchg
inc
pusha
inc
mov
mov
aad
scas
xchg
xchg
subl
jmp
insl
sub
negb
sbb
test
mov
mov
mov
jecxz
arpl
or
mov
cmp
pop
pop
ret
popa
shll
fisttps
mov
push
repnz
dec
rclb
movsl
test
outsb
jecxz
inc
repz
inc
insl
fistl
xchg
or
mov
lods
dec
adc
outsl
sbb
dec
pop
add
pop
lret
push
and
adc
mov
mov
pop
xor
cmpsb
sbbl
sbb
filds
mov
push
jle
int
inc
lods
mov
fdivrs
out
sub
lea
aaa
pop
in
fstl
das
or
scas
pop
leave
adc
mov
adc
arpl
dec
xchg
add
jge
popf
int
insb
in
adc
push
cmpl
sahf
in
mov
xchg
subl
ret
push
push
xchg
add
push
xor
std
push
mov
adc
sbb
jno
mov
data16
pop
je
call
addr16
mov
add
in
lods
test
inc
fmull
xorl
fisttpl
lock
jns
aam
push
and
lds
outsb
in
stos
xor
adc
sub
inc
xor
mov
mov
lcall
push
xchg
xchg
fiaddl
cmc
xor
sbbb
jle
or
inc
push
xchg
rorl
xchg
subl
fstpl
add
adcl
inc
loope
rcrl
push
push
cmp
loop
xchg
push
addr16
pushf
or
push
adc
cmpsb
test
pop
jge
popf
jb
mov
sbb
xor
xor
stos
push
xchg
add
lods
push
dec
add
sub
cmp
es
push
mov
lahf
pop
test
or
pop
das
decb
mov
push
or
fldt
cltd
int
sub
or
pusha
xor
inc
mov
push
cmp
and
jg
ret
push
cs
jne
add
pop
and
xchg
fistpl
inc
add
cmp
stc
sti
jne
pop
mov
add
iret
fldcw
pusha
stos
jbe
mov
xchg
adc
push
push
pop
icebp
and
pop
lods
ds
xor
pop
int
mov
inc
adc
cli
cmpsl
imul
imul
pushf
scas
imul
repz
xor
sbb
fimull
push
or
push
adc
mov
cmp
cmp
pop
rclb
dec
mov
jb
ja
mov
daa
clc
push
clc
fldz
dec
mov
popa
test
mov
mov
pop
add
push
and
jge
pop
dec
xchg
inc
mov
xlat
lcall
add
xchg
push
in
mov
sarb
in
cmp
addr16
shll
ret
push
or
mov
imul
popf
push
sub
jbe
std
in
das
fisttps
rolb
mov
pop
inc
popa
pop
add
sbb
test
dec
mov
loopne
sub
outsb
pop
jns
mov
shlb
cmp
in
push
les
fwait
cmp
ret
jle
adc
fstpl
push
addr16
push
testl
lahf
scas
clc
mov
mov
adc
lret
sbb
jmp
ljmp
test
shr
mov
out
mov
inc
dec
jle
and
shr
mov
mov
cmp
lahf
dec
stos
jb
cmp
sub
add
test
daa
inc
ret
gs
pop
sbb
xchg
shl
lock
lods
pushf
pop
mov
loop
insl
mov
ja
add
dec
or
add
cmp
js
nop
sbb
ficoms
inc
test
push
pop
stc
out
mov
bound
repz
cltd
jo
lds
mov
in
in
pop
mov
jno
mov
add
push
sbb
rorb
ret
mov
inc
adc
pop
test
daa
pop
incl
add
pusha
mov
sahf
dec
aas
xor
xchg
lods
cmp
mov
scas
dec
ljmp
aaa
sub
push
cmpsb
in
stos
cli
pop
inc
pop
and
repnz
push
mov
dec
dec
add
pop
int3
mov
jo
leave
xchg
push
inc
out
in
icebp
add
cmpsb
cmpsl
js
mov
insl
xor
mov
outsl
ficoml
cmp
ret
jmp
add
inc
xchg
pop
ror
mov
add
cmpsl
sbb
inc
and
arpl
stc
sbb
add
cwtl
sarb
jne
mov
imul
ja
into
sub
mov
das
dec
add
test
or
and
daa
inc
mov
push
in
and
cmp
mov
test
insl
lds
in
scas
sbb
pop
push
mov
mov
iret
adc
and
movsb
pop
fxtract
and
stc
sbb
or
test
push
sbb
movsl
xchg
aad
mov
jecxz
in
das
cs
xor
xchg
inc
sub
mov
ljmp
xlat
subb
call
sarb
add
ret
and
sarb
mov
mov
insb
sbb
rcll
sub
movsb
mov
push
fstpt
and
adc
add
push
add
pop
jg
and
and
jno
xchg
push
xlat
sub
scas
add
pop
ss
jo
mov
adc
div
xchg
push
lods
jecxz
fwait
cmp
fildll
mov
scas
test
jge
lcall
int
pop
cmpb
stos
inc
cmp
cmp
int3
sub
jne
mov
pop
mov
push
imul
loop
call
cli
and
loop
in
lods
loopne
pop
mov
sub
addr16
fs
xchg
xchg
rcrb
adc
mov
outsl
leave
xor
test
es
jo
or
cmc
les
sbb
xchg
cmc
ret
fsubs
adc
xor
xchg
add
xor
pop
xor
lods
cmp
pop
jo
inc
xor
and
adc
sbb
es
sbb
mov
je
orl
mov
inc
lret
inc
jecxz
pop
or
or
jo
sbb
imul
int
mov
ljmp
pop
jo
int3
push
cwtl
mov
inc
cmp
adc
frstor
test
add
ss
xchg
dec
xchg
mov
in
insb
dec
inc
orl
pop
lea
inc
lods
cmp
fstpl
and
push
sbb
fists
nop
andb
call
testl
xor
jmp
in
jnp
aas
fbld
test
push
add
mov
add
sub
fbstp
popa
mov
mov
jl
jbe
das
lock
xor
pop
jb
mov
xchg
push
sahf
cmp
adcb
adc
dec
out
pop
in
dec
gs
lods
subb
sub
sti
cli
inc
cmpsb
mov
outsb
mov
lret
gs
mov
mov
insl
arpl
int
mov
ret
dec
jp
pop
insb
push
push
jae
jo
pop
xchg
push
shrb
push
sti
fs
mov
pop
sbb
aas
push
test
mov
outsl
adc
mov
push
in
jae
inc
dec
dec
scas
jge
adc
dec
pop
lds
std
mov
pop
stos
mov
loope
mov
push
sbb
fst
cmp
push
xchg
add
in
int3
or
xchg
xor
jbe
push
imul
dec
lods
lret
lds
das
addr16
out
aad
aaa
enter
outsb
xchg
enter
jo
pop
xorl
xor
loope
les
xor
sti
adc
push
mov
adc
fisttps
cmp
sub
fldt
je
inc
and
icebp
push
aaa
lea
enter
add
shl
inc
jnp
ljmp
mov
repz
sarl
sub
daa
xchg
repnz
mov
or
repnz
cltd
movsb
inc
cs
cli
add
iret
dec
in
loopne
addb
inc
sahf
loopne
lret
sbb
or
and
test
fnstsw
mov
add
jge
and
xchg
mov
xor
jmp
push
ret
dec
and
fdivrp
pushf
cmp
xchg
cmp
xchg
add
dec
adc
in
sub
mov
dec
or
xor
add
shrl
std
mov
pop
aas
dec
fwait
aad
xchg
cmp
adc
dec
cmp
sub
fdivrl
jge
aam
cmp
in
adc
or
pop
mov
dec
aad
inc
jb
mov
adc
addr16
aam
or
and
cmp
mov
pop
iret
cmp
inc
cmpsb
and
clc
cs
mov
sub
sahf
hlt
arpl
mov
or
cmc
add
pop
jmp
push
sbb
pop
xchg
std
adc
das
mov
ss
mov
jmp
mov
mov
add
mov
aaa
mov
je
jmp
movsb
sbb
pop
jns
inc
sub
push
xchg
xor
outsl
xchg
push
push
sbb
mov
insb
movsl
jmp
mov
mov
dec
imul
sahf
mov
test
clc
inc
popf
das
jnp
scas
cltd
xchg
ret
icebp
shlb
push
mov
mov
adc
add
pop
cmp
cmc
or
xor
cmp
stos
add
pop
jl
and
mov
sbb
mov
daa
mov
xchg
in
cmp
pop
out
daa
and
outsb
scas
fistl
mov
in
xorb
push
jnp
cwtl
fistpll
inc
xor
and
sahf
out
ljmp
pop
gs
and
push
xchg
sbb
xorl
cli
ja
add
xor
imul
adc
outsb
out
shl
push
sub
dec
jecxz
fidivl
enter
scas
push
xlat
mov
adc
ret
add
xlat
add
ja
bnd
or
bound
xchg
lock
cwtl
or
mov
gs
test
loop
std
not
mov
stos
in
cmp
sbb
mov
adc
jns
shrl
jae
cmp
adc
stos
cmp
jl
imul
out
icebp
repnz
nop
les
movsb
movsl
test
sub
jo
loop
jg
lahf
loop
or
mov
sbb
xor
movsl
adc
packsswb
cmpsl
and
and
jl
mov
popf
ret
sub
and
out
lcall
fimull
arpl
push
mov
xchg
fwait
add
xor
or
ret
cs
sub
sub
adc
push
add
inc
or
ds
ror
das
jnp
sub
fistpl
icebp
add
mov
in
adc
mov
push
std
inc
clc
pop
push
mov
xor
adc
leave
mov
jo
lea
sarb
rorl
adc
arpl
out
mov
adc
mov
loope
fucomi
push
loopne
mov
hlt
lock
and
mov
mov
loopne
jmp
leave
loope
ss
test
mov
lahf
fildl
or
orl
push
and
and
test
or
adc
repz
xor
jp
add
ljmp
xchg
dec
leave
pop
inc
mov
test
dec
out
addr16
outsl
mov
and
mov
cmp
out
cld
fildll
out
mov
inc
xchg
mov
push
xchg
ds
lcall
or
mov
inc
int
cltd
fimuls
and
fisubrs
mov
daa
movsb
xchg
sub
or
push
fs
pop
pop
sub
test
and
mov
popa
jg
rcrl
mov
stos
jbe
push
inc
or
shll
cmp
outsb
sbb
std
mov
or
cli
xchg
mov
loope
jecxz
sub
aas
frstor
bound
mov
jae
sbb
test
mov
sahf
push
mov
push
shlb
add
mov
fldenv
add
add
push
cmp
push
insb
inc
das
sarb
mov
inc
xchg
lea
clc
add
jle
es
and
cmp
ret
jle
mov
xchg
mov
or
stos
lret
ret
pop
dec
cs
inc
and
ss
add
sub
movsb
into
pop
and
in
cmp
in
out
lcall
add
call
xchg
mov
fnstsw
aam
fwait
add
jg
lahf
mov
lahf
jmp
mov
loopne
loop
insl
lock
iret
cmpsl
mov
push
and
add
jp
xor
popa
xchg
sbb
into
out
scas
mov
fwait
data16
cmp
jmp
leave
inc
and
or
inc
jo
mov
ficoms
shl
cld
mov
lret
stos
je
jbe
mov
andl
mov
and
test
test
xchg
inc
sarl
sub
test
xchg
cmp
es
cs
outsl
dec
shll
mov
mov
mov
pushf
jno
add
jo
pop
and
scas
decl
mov
xchg
xchg
inc
push
ret
ja
xor
nop
mul
sub
shrl
dec
repnz
push
push
pop
call
or
fs
fs
adc
in
bound
call
fdivrp
mov
jbe
fcmovnb
pusha
in
fisttps
aad
lods
xor
mov
out
lea
clc
bswap
lock
in
sarb
pop
dec
mov
ja
pop
fnstenv
stos
mov
jmp
mov
stos
xor
ja
fcomp
ret
xchg
and
push
mov
cmpsb
jle
pusha
nop
mov
repz
pop
jno
popa
lret
lds
jbe
in
fnstcw
loopne
jne
adc
ret
into
fstps
jbe
sti
or
clc
mov
push
inc
iret
add
add
sub
lahf
vpopcntd
jbe
pop
sub
or
cwtl
dec
pop
jmp
pop
pop
clc
xor
shll
add
push
subl
add
mov
movsl
add
stos
stos
imul
inc
fmuls
mov
sbb
dec
adc
test
and
lahf
inc
in
notb
call
jecxz
xchg
xor
jae
jbe
cmp
pop
daa
iret
push
xchg
shlb
in
loop
sbbl
mov
or
adc
fsubs
jno
pop
push
inc
jb
or
dec
scas
xchg
pushf
mov
fs
mov
pop
inc
inc
xor
fsubr
jp
add
repnz
mov
call
pop
mov
rcll
int3
aaa
iret
add
pop
jb
clc
insl
test
jecxz
out
and
mov
out
or
fsub
in
or
push
xor
outsl
das
push
push
mov
imul
aas
imul
or
inc
cmpl
pop
xor
cmpsl
cs
std
push
push
or
lea
rcr
shl
jno
mov
int3
scas
repnz
int3
outsb
cmpsb
and
je
sahf
push
outsb
rorl
xor
sub
push
rcll
mov
mov
and
nop
shlb
fwait
pop
addr16
pop
das
clc
jns
sti
add
out
lahf
lock
or
inc
mov
loop
shll
or
addr16
and
xchg
add
xchg
inc
mov
or
or
mov
popa
xchg
sbb
pop
clc
xor
mov
sub
aas
and
jl
xor
push
mov
in
mov
test
aaa
jecxz
shll
adc
ss
xor
add
mov
int3
ljmp
sub
jb
cmp
mov
fnsave
fs
jnp
mov
rcrb
int3
dec
iret
adc
adc
pop
adc
shll
xchg
ja
cmpsl
loop
pop
adc
inc
jae
cmp
stc
pop
pop
pop
jns
jae
rcrb
insb
ljmp
mov
and
shrl
div
cltd
mov
dec
rorl
movsb
dec
data16
mov
lcall
insb
aad
push
dec
shlb
orb
inc
jno
mov
pop
mov
enterw
pop
and
adc
mov
adc
push
out
xchg
fwait
leave
sysexit
jmp
gs
xor
mov
icebp
test
mov
out
lcall
mov
or
lcall
adc
mov
ror
lret
dec
jb
mov
adc
rsqrtps
mov
add
push
sbb
pop
into
or
movsb
cmpsb
and
lahf
inc
js
and
xor
scas
jae
iret
jl
call
repnz
lret
xor
dec
repz
jmp
popa
test
lea
push
punpcklwd
add
lds
dec
mov
repnz
xor
in
sarl
dec
scas
aad
aas
push
fwait
fwait
add
mov
push
aad
ljmp
and
mov
add
in
inc
and
adc
lods
inc
pop
pop
sub
gs
add
cmpsl
orb
adc
sub
ss
lahf
mov
test
xchg
xor
adc
mov
push
icebp
mov
jmp
adc
sub
adc
inc
repnz
ret
decl
jecxz
lahf
in
push
lds
push
mov
xchg
dec
aad
dec
lahf
daa
popa
add
orb
jbe
adc
cmp
mov
mov
or
daa
stos
data16
mov
mov
sarb
pop
add
test
add
orl
lret
xor
jle
repnz
push
insl
inc
push
xchg
mov
cmpsb
sti
inc
xchg
pop
jge
inc
ret
fs
movsb
js
sub
sub
out
add
inc
xchg
mov
fwait
incb
rorl
inc
add
push
dec
gs
pop
leave
cmpsb
jge
loop
sbb
mov
pop
mov
hlt
stc
add
add
daa
cmp
sbbb
jne
outsb
lock
pop
lods
push
dec
add
mov
addl
add
sbb
xchg
mov
jg
shr
adc
rclb
mov
out
fbstp
cs
xlat
lods
push
inc
mov
iret
xchg
dec
jmp
sbb
or
inc
fnsave
lret
adc
aas
xor
jmp
enter
arpl
insl
adc
daa
pop
inc
mov
psllq
cwtl
popf
jae
stos
cli
add
pop
xor
inc
xchg
inc
imul
inc
mull
gs
cmp
out
and
jns
mov
imul
cmpsb
adc
push
fwait
adc
fmuls
add
pop
push
fadd
and
or
push
dec
rolb
iret
cli
mov
push
outsb
adc
cwtl
loop
push
enter
push
xor
jno
sbb
dec
lea
jne
popf
add
jg
stos
xchg
out
push
push
mov
push
or
addr16
lcall
jl
rep
dec
fidivs
xchg
sub
mov
mov
movsl
ficompl
mov
push
popa
addr16
push
scas
push
sub
stc
repz
test
jmp
sbbb
adc
sub
insb
call
push
insl
in
push
push
jb
es
adc
push
jne
push
mov
hlt
jns
mulb
icebp
sbb
mov
clc
cmpsb
loop
call
sti
push
addl
mov
aaa
out
loopne
add
dec
ret
mov
mov
cmp
out
inc
lock
std
xchg
mov
xchg
xor
daa
ljmp
mov
push
mov
xor
xchg
sub
nop
les
push
mov
mov
mov
mov
into
in
add
jp
push
hlt
cmp
adc
sbb
add
int
ret
or
and
cmp
cmp
pop
ds
stos
mov
mov
jge
mov
lcall
ja
or
outsl
cs
cmp
ret
sbb
out
int3
test
fcompl
sbb
insb
mov
cmp
mov
push
test
push
sbbl
xor
fcoms
mov
push
mov
xlat
mov
inc
cmpsb
xlat
pop
pop
stos
pop
and
sub
in
or
jecxz
cmp
in
mov
int3
cmp
add
xor
test
aam
adc
dec
or
sti
das
mov
push
jmp
and
aaa
pusha
ds
inc
dec
mov
fldcw
xchg
xor
jbe
fldenv
fisttpll
fwait
xor
push
adc
xchg
lahf
insb
mov
dec
lock
out
push
xchg
mov
leave
nop
loopne
xchg
stos
add
xor
lock
cmp
dec
mov
cltd
xor
add
mov
dec
inc
test
rcrb
xchg
loop
and
adc
jnp
mov
pop
xchg
insb
sbb
pop
imul
xchg
add
mov
sarl
ja
mov
inc
jp
rorb
cli
jo
fdivrl
outsb
cwtl
inc
lahf
leave
pop
mov
xlat
mov
pop
hlt
jno
inc
fsubr
push
adc
ret
inc
les
xchg
call
loope
pop
fcompl
cpuid
jg
dec
or
xchg
nop
ja
lds
daa
dec
mov
mov
inc
ficompl
cmp
cwtl
loopne
jne
pop
cmp
adc
add
xor
sarb
fstps
xorb
mov
or
repz
or
pop
pushf
mov
dec
shl
negl
pmulhuw
rcl
adc
mov
add
mov
cli
push
and
popl
fisubs
and
mov
in
mov
or
das
inc
std
rcr
mov
mov
cwtl
outsb
out
add
popa
add
arpl
add
dec
jg
mov
pop
bound
popa
jl
push
inc
leave
cs
test
mov
hlt
pop
lods
call
sbb
inc
add
repnz
or
mov
in
cs
sbb
ljmp
loope
movsl
incb
incl
xchg
xor
test
adc
xchg
jle
sub
push
sbb
mov
add
jb
xchg
dec
and
arpl
add
mov
cmpsb
insb
mov
sbb
adc
movsb
js
sbb
ljmp
mov
add
aas
scas
cmp
adc
and
pop
ljmp
gs
adc
mov
je
sub
dec
jecxz
sub
out
fdivl
mov
pop
clc
mov
and
ljmp
cs
shl
ja,pn
cmp
inc
jg
mov
sbb
mov
pop
rcrl
push
push
pushf
mov
aad
call
dec
cld
adc
sbb
jne
outsl
pop
dec
shrl
inc
movsl
jo
imul
xor
popf
leave
cmpsb
xchg
shlb
push
adc
arpl
stos
out
jno
outsl
icebp
cli
mov
xchg
inc
jnp
lcall
xchg
and
mov
sub
into
sub
lret
lea
xchg
rolb
popf
aad
mov
push
adc
lea
pop
mov
sbb
xor
fcoml
sub
pop
pop
std
fists
xchg
repz
cli
mov
add
js
pop
adc
pushf
das
cmp
xchg
stc
cmp
push
pusha
push
mov
rorl
repz
adc
cld
repz
outsb
or
jecxz
adc
imul
leave
scas
sbb
popf
test
daa
stos
xor
in
loop
scas
stos
sbb
xchg
sbb
std
aas
neg
sub
scas
int3
adc
cs
fisubrs
xchg
sbb
inc
mov
rcrl
popf
mov
test
or
jmp
jge
cs
jcxz
adc
data16
lahf
hlt
nop
lds
out
mov
outsl
cltd
sti
dec
aam
xor
inc
xchg
loop
mov
into
cmpsb
movsb
jbe
je
fcmovu
pop
add
scas
addr16
aas
inc
lahf
sub
mov
pop
add
inc
out
int3
pop
shr
dec
ficompl
mov
xchg
mov
les
stos
mov
cwtl
and
stos
dec
aaa
repnz
pop
mov
and
scas
jb
push
cwtl
jb
mov
stc
test
lods
mov
xchg
xchg
sar
jmp
cmp
sbb
cmp
xchg
loope
and
aam
bound
mov
daa
xor
shlb
bound
js
pop
arpl
stos
mov
pop
mov
sarb
sub
xchg
lods
clc
cmp
sbb
dec
hlt
mov
into
mov
cltd
lods
cmc
adc
sbb
test
js
jbe
jae
xor
bound
dec
and
flds
arpl
push
xchg
pop
lods
or
call
xchg
cwtl
aaa
ficoml
ret
dec
jb
adc
mov
cmpsb
mov
rcl
loope
push
push
jns
sbb
lea
pusha
sub
adc
mov
outsl
jmp
fwait
sbb
lods
sub
and
mov
jmp
and
mov
adc
push
stos
sbb
xor
lds
mov
movsl
pop
fwait
bound
jno
mov
imul
pop
dec
cmp
pop
sbb
in
addr16
gs
lret
cmp
or
add
fistpll
adc
cmpl
or
mov
cmp
cltd
or
imul
xchg
ja
pop
iret
mov
out
cmp
das
cmpsl
je
mov
mov
loope
in
xor
incl
push
xchg
xchg
mov
jbe
xor
sub
lcall
fidivl
mov
add
sub
fwait
or
pop
inc
adc
fcomi
icebp
sbbl
jl
cmp
out
icebp
popf
sarb
or
pop
das
pop
cmc
notb
mov
lcall
clc
xor
mov
rorb
mov
ss
adc
ret
repnz
popa
sub
or
jp
sbb
pop
outsb
pop
aas
push
sar
mov
jnp
cmp
jbe
dec
mov
daa
and
lods
xor
loope
push
repz
xchg
jl
outsl
fisttpl
add
dec
mov
sbb
adc
sbb
adc
push
cmovl
push
push
xor
data16
or
xor
sub
mov
cmpsb
lds
xchg
jbe
cmp
mov
js
test
into
aas
xor
xchg
mov
movsl
and
add
add
push
add
and
ret
int
jg
insl
mov
pop
push
sbb
popf
jne
fwait
xlat
std
pusha
daa
push
loop
xchg
test
sbb
pop
and
cld
and
mov
cmp
xchg
call
je
and
ja
push
scas
push
or
insl
or
test
pushf
or
push
ss
sbb
dec
xlat
roll
jp
xchg
loop
xchg
aas
in
andb
sbb
xor
sarl
dec
jecxz
pop
add
pop
cld
movsl
inc
std
andl
mov
and
inc
sbb
jmp
inc
cmp
mov
andb
adc
cmp
lods
test
cmp
and
aas
jb
lea
cmpsb
mov
push
repz
movsb
cli
xchg
je
aaa
aaa
lock
mov
aas
mov
pushf
xchg
loop
or
and
fcoms
mov
inc
lcall
gs
jecxz
rol
mov
cli
add
pop
fisubrs
lcall
add
cs
or
lods
data16
mov
out
cmp
repz
ljmp
sbb
jg
jb
add
in
lock
subl
jmp
in
adc
dec
sbb
lods
shlb
lcall
lret
xchg
xlat
jmp
inc
leave
decb
push
mov
jecxz
dec
dec
das
aam
dec
push
or
push
mov
cmp
sbb
rorl
jge
mov
adc
inc
dec
sub
into
sbb
dec
mov
xor
leave
fildll
jge
scas
push
ror
fincstp
add
xchg
mov
xor
sub
out
cs
jl
or
pop
push
mov
lea
pop
data16
stos
icebp
dec
pop
sbb
dec
lea
leave
xchg
stos
out
aaa
pop
and
ss
sar
mov
iret
ret
mov
outsb
icebp
sarb
js
ss
into
jne
sbbl
mulb
les
inc
push
xchg
xor
test
xchg
xchg
push
rclb
imul
jmp
imul
mov
das
add
cmp
imul
inc
push
lds
fstpt
insw
je
out
in
xchg
jnp
jl
dec
das
movsl
inc
pusha
mov
bnd
imul
cmp
mov
pop
push
push
dec
dec
test
sahf
test
mov
jo
mov
add
lret
insb
lods
les
movsl
pop
dec
cmp
jb
js
or
fwait
aam
loop
negb
mov
mov
adc
int3
mov
scas
add
int
push
cld
sub
enter
out
mov
repz
xor
or
push
mov
dec
mov
pop
jg
jbe
cmpsb
pop
jo
pop
xchg
cli
orl
mov
push
std
fs
dec
bound
pop
push
mov
clc
cmc
or
jb
sub
daa
cmp
loop
test
lock
shrl
mov
lcall
pushf
mov
xchg
mov
and
mov
outsl
jns
jge
arpl
inc
push
outsl
and
xchg
fnsave
pop
out
in
mov
outsb
inc
and
xor
not
sbb
imul
cs
repz
movsl
out
xor
inc
xchg
xchg
xor
inc
mov
aaa
add
pusha
js
popf
popa
mov
ja
xchg
push
and
mov
xchg
arpl
lds
clc
mov
js
decb
repz
mov
jns
fidivl
test
xchg
movsl
mov
outsl
in
lods
sbb
sub
and
fisubrl
jo
sub
cmp
sub
cltd
inc
sub
rcrb
hlt
ss
sub
aam
inc
xchg
sahf
adc
dec
adc
push
mov
addl
scas
daa
daa
lcall
dec
scas
rcrl
rcll
jb
add
insl
dec
rcl
xchg
shr
mov
jg,pn
loop
and
ja
sbb
xchg
lret
sub
pop
mov
pop
lods
jecxz
iret
orl
pop
sbb
in
inc
adc
push
std
inc
mov
adcl
push
mov
push
adc
pop
lds
mov
lcall
mov
fsubrp
es
cmc
int3
inc
adc
mov
iret
sbb
nop
mov
jp
fwait
pop
push
data16
sub
inc
js
xchg
jmp
nop
addl
jns
mov
inc
idivl
push
or
shll
popa
xor
push
xchg
inc
xchg
data16
hlt
testl
fisttps
or
cmp
outsl
xor
outsb
leave
inc
fnstsw
xchg
adcl
dec
bound
jb
lds
mov
mov
pushf
shlb
and
mov
rolb
mov
hlt
outsb
addb
dec
popf
push
stos
clc
lods
enter
mov
and
lock
push
sub
or
mov
mov
inc
add
out
popf
cmp
call
in
mov
and
sbb
mov
or
push
pop
jge
mov
test
loop
mov
sub
repnz
cmpb
dec
or
gs
and
ret
mov
pop
pop
or
mov
jecxz
in
xchg
mov
mov
pop
test
je
test
jp
pop
xchg
push
add
add
or
scas
sub
insb
mov
dec
sti
bound
shlb
ja
pop
andb
les
adc
jo
std
adc
into
decl
push
call
inc
pop
push
ret
out
dec
jo
mov
xor
adc
rcl
jns
and
test
or
sahf
ret
inc
mov
lahf
xchg
push
or
xchg
sub
iret
or
push
daa
add
call
xor
jge
scas
hlt
push
les
in
or
adc
pusha
or
rclb
adc
cmp
stos
mov
cltd
adc
xchg
fldt
mov
popl
imul
lods
sbb
xchg
ja
dec
rolb
shll
push
repz
adc
lea
xchg
pop
nopl
test
and
mov
inc
push
aaa
jmp
adc
sub
jo
adc
cs
jae
xlat
push
xlat
cmp
das
mov
xchg
mov
sub
fiadds
xor
mov
jnp
pop
popf
mov
push
lods
int
out
daa
cmp
or
rorl
sbb
js
arpl
xor
lret
movsl
lds
push
add
mov
mov
dec
xchg
pop
cmpsb
cltd
mov
fimuls
fsubrs
lcall
std
jl
push
fcmovb
or
xor
adc
mov
sbb
push
mov
xor
mov
push
dec
add
xchg
ds
cmp
cld
insb
aad
mov
lods
scas
mov
bound
mov
sbb
mov
xor
dec
push
pop
xchg
stc
lds
sti
add
jl
aam
sub
or
sub
mov
aam
pop
or
fsubrs
loop
out
sub
ja
inc
rcrb
shlb
pop
in
adc
mov
nop
pop
pop
pusha
fstl
stos
outsb
scas
hlt
addr16
mov
push
sbb
data16
data16
xchg
in
jae
inc
push
fstps
xor
mov
imul
dec
imul
aas
jg,pt
adc
push
mov
cmp
inc
lahf
or
out
mov
xchg
xchg
inc
sub
xchg
lret
sub
loopne
or
ret
xchg
or
outsb
mov
sbb
aam
mov
push
pusha
dec
sahf
adc
in
ss
out
je
adc
push
out
and
roll
mov
mov
out
popf
mov
xchg
daa
push
push
jbe
pop
dec
jle
mov
dec
inc
push
pop
in
lret
inc
and
shrl
inc
push
leave
aas
sti
insl
jae
mov
f2xm1
ds
and
mov
or
fcmovbe
mov
mov
jne
push
hlt
pop
adc
cmc
mov
lret
jl
and
rcl
pusha
adc
lods
insb
push
iret
pop
lds
call
or
outsb
or
mov
mov
add
jle
aas
gs
sub
inc
dec
fidivrs
xor
dec
fmul
jecxz
sub
push
pusha
call
es
push
mov
fucom
inc
push
cmp
ss
imul
lock
lods
je
dec
cwtl
dec
pop
popa
xor
fisubl
jo
mov
lret
cmp
dec
pop
ret
ljmp
sub
lret
push
xor
mov
loop
ficompl
pop
jge
sbb
cltd
call
int
mov
mov
ja
ror
jbe
fsubrs
add
outsb
cmp
mov
fstpl
stos
mov
mov
push
shrb
xlat
or
push
inc
mov
outsl
sbb
inc
lea
xlat
sub
std
pop
lds
cmp
daa
lret
inc
dec
fsubl
mov
rorl
xor
leave
cli
andb
in
jg
repz
sbb
es
adc
shl
arpl
vandps
jno
out
cmp
nop
int
jae
std
mov
je
stos
push
push
or
sbb
xchg
add
sbb
inc
shrb
loope
or
xor
push
stc
test
js
cs
inc
addr16
daa
adc
lahf
addr16
stos
xchg
cmc
testl
mov
pop
and
mov
stos
je
xchg
xor
sub
into
adc
andb
inc
subb
pop
xchg
jo
cmp
sub
stc
jbe
dec
and
and
mov
dec
mov
and
pop
adc
mov
test
xchg
jp
fcmovb
xchg
add
xor
xor
cmc
enter
inc
mov
out
dec
ljmp
test
dec
pop
jmp
daa
dec
cltd
repz
loop
loopne
xlat
jmp
xor
cmc
cmp
fdivl
mov
push
xchg
repnz
jecxz
imul
mov
cltd
pop
filds
cmpsb
mov
cmp
xchg
test
sub
and
xor
repz
inc
sbb
lea
ss
test
ja
cmpsb
xchg
into
cmp
sbb
jl
or
cmp
push
mov
xor
or
mov
mov
dec
addr16
jb
punpckhwd
pop
insl
push
std
jbe
or
jle
pop
xchg
outsl
mov
jne
ja
icebp
add
in
in
jno
mov
push
mov
dec
js
scas
adc
and
lret
pop
fldt
sub
dec
in
stos
arpl
lea
sbb
sbb
mov
cld
xor
or
pop
sbb
adc
cs
aaa
xor
add
mov
xchg
daa
xor
pop
popf
xchg
mov
fucom
cmp
lds
out
stc
ret
mov
push
je
testl
cmp
adc
jns
shrb
std
xchg
push
out
mov
mov
pop
inc
xchg
fsub
shrl
rclb
dec
iret
addr16
and
mov
pusha
xchg
mov
dec
gs
push
addr16
rcrl
popa
decl
jmp
sahf
pop
lods
les
popa
push
or
adc
lfs
in
push
push
jns
pop
lret
insb
mov
ljmp
mov
call
lahf
mov
js
dec
popf
xchg
stc
mov
out
loope
or
divl
lock
fadd
pop
lods
inc
jns
dec
es
xor
sub
lods
aaa
pop
enter
adc
popa
jbe
dec
push
mov
fsubrs
push
mov
div
sub
push
cwtl
or
inc
push
roll
fwait
inc
xlat
pop
inc
push
jle
incl
in
jl
sbb
sbb
or
lcall
jle
lds
dec
inc
xor
inc
mov
lret
or
aas
fcmovnb
cwtl
mov
sti
sub
mov
fildl
cmp
mov
push
or
out
imul
gs
lahf
sbb
jg
stos
adcb
xor
sub
div
xchg
or
pop
mov
jb
test
sbb
add
insb
or
lahf
cmpsl
push
adc
test
ret
stos
rcrb
mov
inc
outsb
cmp
sub
sub
xlat
popf
adc
jns
scas
mov
in
jo
sub
cmp
xchg
fidivrl
lcall
mov
xchg
jge
cmp
xor
sbbb
int
push
cmpb
ds
cmpsb
xchg
lret
mov
pop
mov
add
xchg
iret
mov
pop
pop
nop
js
push
mov
push
pop
adc
imul
stos
sahf
xor
jle
or
cmp
mov
fcoml
sub
cmp
jb
add
and
push
ljmp
inc
mov
inc
mov
mov
icebp
in
in
or
and
or
sub
cmp
push
cmpsl
mov
hlt
xchg
enter
and
jecxz
sbb
iret
cmpsl
or
sbb
addb
xchg
xlat
mov
movl
jl
fcomps
lret
imul
addb
leave
mov
sub
lods
sbb
cmp
sbb
xchg
mov
arpl
inc
ficoms
mov
cmp
add
cmp
xor
add
lods
and
inc
mov
data16
ljmp
int3
ds
decl
cmp
test
mov
mov
aas
jecxz
fildl
popf
aas
not
shll
addb
jae
xor
cmp
rol
bound
je
cmc
inc
enter
aad
addr16
js
pop
scas
mov
jno
ret
imul
xchg
cmp
xchg
xchg
into
lds
cltd
push
std
xor
dec
push
push
fldl
inc
or
add
cmp
or
jle
xchg
es
mov
jle
jno
gs
dec
mov
mov
js
aas
and
push
sbb
xchg
cltd
and
jmp
push
stc
cmp
cmp
add
lret
repnz
cmp
in
fwait
cli
ljmp
add
dec
mov
adc
loope
sub
pop
xchg
insl
inc
outsb
cli
sarb
or
cmp
fldenv
dec
in
add
jecxz,pt
ljmp
and
inc
ljmp
dec
mov
pop
xchg
add
mov
cmp
outsb
pushl
mov
out
fnstsw
mov
outsl
sbb
into
mov
faddl
outsb
les
fidivl
out
pusha
push
jnp
std
std
sarb
jmp
pop
int
out
stos
pushf
xchg
adc
jnp
add
mov
lods
stos
xchg
lock
add
adc
sbb
pop
xchg
daa
aad
mov
xchg
push
daa
mov
jno
add
or
es
sahf
cs
movsb
and
les
xchg
sub
out
adc
add
and
nop
fdivl
aam
scas
lock
lods
cmp
and
pusha
push
enter
and
xor
jmp
mov
jle
mov
mov
leave
sahf
je
pushf
and
test
push
mov
xlat
jmp
les
inc
incl
jo
ja
stos
test
fists
jle
loope
or
imul
xchg
sub
mov
push
cmp
pop
add
push
loope
leave
or
and
xchg
cmp
fistpl
loop
mov
lret
into
and
sbb
or
mov
fwait
sti
xor
fisubrl
jmp
insb
lret
add
inc
mov
into
push
xchg
dec
jns
repz
mov
call
push
out
daa
mov
sub
arpl
test
adc
fmull
lea
adc
sbbb
inc
sti
std
xor
fldcw
lcall
jl
out
sub
pusha
cmpsl
and
lahf
notb
aad
enter
out
xor
mov
fistpl
add
out
pop
mov
cli
and
pop
movsl
dec
pop
loop
and
and
cltd
sbb
out
mov
jmp
pop
call
jo
mov
mov
jne
xlat
and
repz
stos
fisubl
jmp
arpl
insl
xor
psllq
gs
fwait
dec
push
xchg
push
lret
mov
dec
and
fcoms
shl
sbb
xor
fildl
push
lcall
stc
imul
and
xchg
cmp
sbb
test
dec
mov
mov
mov
adc
push
in
imul
mov
mov
mov
aas
stos
icebp
mov
xchg
mov
repnz
mov
lret
and
aam
xor
jnp
test
subl
pop
dec
int
sbb
add
jae,pn
jno
xor
subl
mov
ljmp
lcall
daa
adc
sub
jecxz
push
and
aam
icebp
rolb
in
adc
hlt
add
adc
gs
or
dec
lcall
inc
mov
xor
mov
mov
mov
mov
pcmpgtw
mov
xchg
inc
xchg
ja
push
stos
repnz
sbb
mov
inc
rclb
xor
stos
cmp
fstp
or
add
mov
and
leave
add
jne
ds
mov
ss
jbe
mov
hlt
xchg
sub
scas
pop
out
push
sbb
lret
loope
ret
jle
leave
or
xchg
je
pop
mov
cltd
mov
xchg
in
mov
lods
into
sbb
xor
aaa
xor
mov
xchg
jl
adc
push
push
int
movsb
and
lret
jmp
mov
xor
negl
dec
cmp
and
jae
rcll
enter
add
push
rcrb
fs
sbb
xor
xchg
inc
scas
xor
mov
jp
jecxz
je
test
pop
hlt
push
jle
pusha
adc
fbld
sub
sbb
cmpsb
shl
and
lret
cwtl
daa
leave
mov
or
xchg
ds
add
dec
pop
cmp
es
xlat
push
pop
mov
mov
fidivrs
jbe
jg
jl
in
shrl
or
ss
mov
mov
mov
testb
dec
xor
xor
xor
shlb
and
fpatan
mov
hlt
mov
ja
cmpsl
lds
mov
popf
inc
aam
subb
or
iret
cmp
sti
pop
add
jmp
imul
cmpsb
call
lods
adc
cmc
inc
fs
jmp
lea
xchg
lcall
pushl
or
xchg
or
test
test
jecxz
cmpsb
push
push
mov
lods
cmpsl
imul
shll
call
mov
mov
shrl
jp
xor
sbb
movb
adc
inc
xchg
sbbb
pop
push
jmp
add
add
daa
out
sbb
cmp
dec
imul
jl
xor
mulb
push
xchg
inc
jp
jb
cmpsl
gs
jmp
pop
dec
daa
add
out
lret
shl
cli
test
xchg
aad
sub
in
sbb
add
mov
mov
ljmp
movsb
popf
xor
shlb
lret
movsb
add
test
adc
lock
mov
js
adc
cmpb
cmp
aas
icebp
dec
mov
fstp
dec
add
xor
mov
orl
cmp
adc
lea
icebp
outsl
or
mov
movsl
push
rcll
lock
lods
mov
pop
and
dec
dec
and
sub
adc
lock
sbb
daa
cs
js
inc
out
dec
or
fisubrs
jno
dec
cmp
or
cmp
xor
xor
xor
sti
andb
cmp
test
lods
mov
push
dec
aas
jno
and
xor
or
or
xor
lods
sarl
clc
mov
pop
jb
cmp
cltd
mov
inc
scas
stos
out
jns
nop
wbinvd
jne
xchg
int3
jg
outsb
imul
iret
ss
fildl
cmc
les
and
sub
fisubl
sti
push
push
cltd
add
sub
dec
jae
jle
insb
into
call
call
mov
sti
jecxz
pop
dec
mov
jb
enter
rclb
inc
movsl
sub
outsb
movsb
aas
shlb
inc
mov
sub
add
push
test
subl
jmp
cwtl
cli
test
sarl
out
cwtl
mov
icebp
mov
jne
dec
jmp
jnp
xor
insb
cmp
xchg
or
cmpsb
pop
mov
xor
jae
xlat
ret
pushl
push
enter
sub
jge
ret
jp
insl
shrl
sub
inc
or
and
sbb
scas
add
lock
mov
mov
lods
pop
mov
sahf
adcl
loope
mov
add
mov
push
rolb
fs
pop
dec
inc
adc
repnz
mov
xor
pusha
std
push
ficompl
mov
mov
daa
aad
fstpl
push
setg
adc
fs
sub
jbe
pushf
push
dec
pop
jno
xorb
into
scas
add
add
and
pop
pop
popa
cwtl
fnclex
lock
add
fsubl
js
test
into
out
add
or
inc
mov
push
mov
mov
mov
jae
enter
xor
sub
in
pop
push
nop
ret
jae
scas
cmp
sti
mov
sbb
data16
mov
ss
mov
mov
cmpsl
xor
mov
cltd
push
push
cmpsl
pop
imul
inc
pop
jp
xchg
mov
add
inc
cmp
insb
mov
xchg
sbb
or
ds
xor
mov
mov
and
cmpb
idivb
pop
cmp
dec
aad
dec
mov
inc
sub
add
fwait
add
and
inc
xchg
leave
pop
stc
mov
data16
push
ret
cltd
test
push
sbb
xor
mov
sub
inc
lahf
xor
mov
ja
jno
inc
test
lods
popa
daa
inc
lods
sbb
aas
outsb
jecxz
dec
icebp
mov
cmp
notl
xor
sub
push
sub
pusha
mov
jp
pop
mov
push
outsl
cmp
loop
pop
sub
test
inc
out
mov
cwtl
mov
aaa
jno
imul
cwtl
mov
scas
push
adc
mov
xchg
adc
popa
or
push
gs
cmp
andl
push
stc
sahf
sbb
and
sub
flds
scas
and
sub
mov
cmpb
and
pop
dec
ret
icebp
int
outsl
add
incl
add
add
aas
pushf
jmp
lahf
xchg
mov
movsb
sub
cmc
adc
fldl
jmp
rcl
fldl
xchg
aas
shll
insl
test
cs
push
mov
or
and
inc
mov
push
xchg
inc
lret
push
call
pop
push
sahf
and
nop
or
and
adc
mov
add
cmp
cmpsb
in
push
cld
addr16
stos
addr16
xor
pop
stos
fidivl
mov
xor
jo
std
mov
cli
xchg
test
adc
jmp
xchg
hlt
pop
js
nop
inc
imul
sub
mov
xor
popf
aam
movsl
sub
hlt
xchg
dec
cs
outsb
lds
dec
jns
imul
cmp
loope
xor
xchg
mov
pop
dec
sub
pushf
dec
cmc
pop
xor
popa
and
add
pop
push
jb
sub
nop
inc
mov
mov
adc
jne
pusha
jecxz
in
imul
inc
scas
fwait
pop
test
sarb
push
hlt
add
mov
in
ljmp
xor
mov
push
push
mov
shr
scas
mov
fwait
push
lea
mulb
lret
inc
stos
cs
push
leave
outsb
push
jb
cltd
cmp
mov
ja
cmp
loop
adc
add
fisttpl
fstpt
xor
or
movsb
inc
sbbb
out
je
adc
add
pop
js
mov
out
pop
sub
out
mov
stc
mov
in
adc
mov
dec
les
jno
push
loop
xor
cmp
xlat
out
mov
test
push
mov
nop
imul
or
addb
jecxz
pusha
or
iret
inc
lds
shr
or
inc
mov
lcall
jnp
cmp
repnz
iret
sbb
or
outsb
pop
in
inc
shll
push
dec
in
lcall
rol
int3
aas
lahf
sahf
popa
rcrb
adc
mov
pop
cmp
aam
outsb
xchg
xor
cs
add
mov
dec
mov
add
and
das
add
fs
je
pushf
out
sbb
repnz
and
mulb
and
lods
test
sbb
mov
rclb
and
mov
test
mov
xor
movsb
pop
or
or
js
bound
push
or
cmpsl
lds
out
inc
ljmp
dec
in
mov
adc
xor
test
int3
movsl
add
nop
or
sbb
sub
jno
lds
and
popf
mov
outsl
dec
cmp
xor
push
cld
xchg
iret
sar
out
cmp
mov
jb
jne
and
ftst
popf
testl
xchg
sbb
popa
mov
fldcw
mov
test
add
sub
stc
xchg
inc
fdiv
scas
ljmp
xchg
xor
sbb
inc
pop
ds
dec
push
es
clc
dec
fldcw
jg
ja
xchg
jnp
jb
mov
inc
pop
mov
or
fldt
pop
bound
mov
loopne
fildl
lods
or
pop
xchg
pop
mov
addb
add
fnstcw
out
sub
push
mov
dec
repnz
xchg
les
xchg
insl
iret
lock
test
movsb
daa
and
sbb
movsl
mov
das
das
sub
mov
ret
fmuls
leave
adc
aad
or
inc
push
fwait
shrb
pop
fucom
sbb
mov
add
add
enter
scas
cltd
in
pop
stc
mov
iret
mov
loope
fndisi(8087
xchg
lock
push
dec
mov
pop
mov
push
into
add
pop
mov
imul
dec
stos
cmp
out
mov
jg
cs
mov
mov
jnp
std
jg
jmp
push
pushw
mov
lods
inc
faddp
pop
mov
cli
dec
push
rcl
sbb
lds
lods
cmc
sahf
jge
cwtl
mov
scas
cmpsl
in
aad
xor
nop
movsb
gs
dec
or
negb
and
push
mov
pop
xchg
pop
mov
jae
divb
and
scas
pop
out
pop
add
xchg
addl
insl
stc
jmp
sub
mov
sub
xor
add
les
mov
xchg
jae
inc
add
dec
inc
mov
cmp
jns
jmp
jne
adc
cmpb
in
mov
and
fcoms
outsw
insl
pop
shr
es
cld
cli
fcoms
mov
aas
jns
sti
xlat
dec
les
mov
lods
inc
dec
je
dec
movsb
add
or
add
pop
sbb
lea
scas
mov
nop
add
enter
dec
mov
cld
jecxz
gs
in
sbb
dec
add
inc
mov
daa
cmp
lcall
sub
jb
sti
jbe
jg
inc
lods
clc
or
and
ret
loopne
lret
xchg
scas
leave
aam
push
xor
cmp
les
xchg
pop
xor
jbe
cwtl
sbb
in
xchg
pop
sub
les
std
xor
cli
mov
arpl
and
test
mov
adcb
hlt
mov
cmp
xchg
test
dec
jo
out
sub
cmp
cmp
fs
out
dec
mov
pop
mov
imul
mov
in
dec
int3
aaa
push
sti
sbb
cmp
sbb
add
in
jnp
inc
pop
dec
pop
or
and
mov
imul
call
gs
xchg
leave
push
daa
and
push
out
popa
jecxz
fsubs
lret
inc
add
push
ret
mov
push
pop
xchg
dec
sub
data16
adc
repz
adc
imul
mov
inc
out
push
adc
push
lret
inc
mov
xlat
or
in
xor
adc
scas
stos
iret
cwtl
ret
out
jno
fs
enter
xor
repnz
mov
push
test
fimuls
jb
sbb
mov
scas
push
add
and
inc
xchg
or
add
mov
add
push
push
jno
xlat
addr16
aas
adc
mov
rorb
xor
rcrb
sarb
sbb
cmc
jae
add
negb
leave
jle
or
or
xchg
int3
lds
in
xchg
pop
pop
and
or
jbe
xchg
int3
mov
icebp
rcrl
das
pop
pop
add
inc
mov
stos
pop
shl
dec
out
sbb
lods
cmpsl
inc
ret
jno
imulb
iret
shlb
test
ljmp
fptan
mov
xor
jle
scas
mov
add
ss
dec
cmp
push
das
into
repnz
jb
stos
mov
add
mov
sub
js
jecxz
mov
push
scas
shlb
and
jmp
inc
lret
test
xor
js
ror
nop
jnp
ja
ja
pop
xor
cmp
aas
std
or
ljmp
ljmp
pop
inc
dec
mov
mov
adc
and
push
jo
xlat
adc
int3
das
lds
pusha
movsb
jecxz
scas
push
gs
push
push
mov
cmpsb
cmp
dec
mov
into
leave
sbb
aas
lds
loopne
xchg
cld
cmp
adc
jnp
mov
stos
xlat
lahf
push
or
and
cli
or
adc
dec
fiadds
inc
push
push
out
inc
dec
inc
adc
lock
pusha
xchg
ffreep
ret
push
ds
xor
dec
push
repnz
and
mov
popa
das
dec
pop
jno
shrb
and
jg
xchg
data16
ljmp
xchg
dec
pop
sbb
sub
push
lods
adc
iret
nop
movsl
sbb
or
xchg
sbb
out
cmp
push
or
test
outsl
mov
pop
pop
xlat
dec
inc
push
scas
out
shll
pop
push
lock
inc
push
adc
cmp
adc
jl
insb
mov
dec
popf
mov
lcall
push
pop
stc
mov
stc
in
sahf
xchg
sahf
ss
dec
cmpsl
lods
push
sbb
loope
in
test
inc
cmpsb
data16
out
xorl
loop
das
daa
push
imull
pop
add
stos
pop
std
mov
sbb
push
rcrl
dec
dec
cwtl
out
test
lods
pop
pop
outsb
inc
fwait
fwait
jns
pop
clc
jbe
test
sub
push
movsl
cmp
jle
fucom
call
shr
fs
add
push
fdivp
test
pop
jecxz
lods
and
ds
xchg
push
popa
mov
pop
scas
mul
dec
mov
test
dec
adc
shll
cwtl
roll
sbb
add
loopne
mov
aam
mov
xor
fimull
and
cmp
pop
out
cmp
loope
push
stc
mov
add
cmp
pop
aam
dec
das
aad
pop
shlb
mov
int3
sbb
in
mov
mov
daa
aad
lods
xchg
imul
imul
jb
or
andl
adc
enter
jle,pn
jg
insl
add
andl
and
cmp
push
fwait
mov
movsl
loope
jmp
mov
pop
jo
mov
mov
sub
sbb
icebp
repnz
inc
inc
jae
xchg
arpl
test
fs
mov
mov
xor
cmpsl
mov
sub
inc
in
fwait
pop
push
stos
and
addr16
lret
fbstp
dec
into
jno
in
lods
mov
xchg
cwtl
mov
push
adc
sub
inc
adc
push
sti
in
outsb
test
cwtl
add
divl
dec
cmc
or
mov
jbe
push
divps
cmp
stc
and
aam
push
inc
int3
call
mov
add
jge
test
mov
inc
arpl
push
inc
sub
es
ficoms
std
xor
sbbl
sahf
add
loop
push
mov
sbb
leave
xor
jge
and
mov
push
mov
aaa
dec
shl
pusha
and
jnp
pusha
outsb
jnp
push
js
mov
sti
xor
mov
gs
enter
std
push
xor
pop
std
aas
mov
stc
dec
mov
push
lods
xchg
sbb
sub
pusha
xor
shrb
adc
dec
test
push
xchg
mov
cmp
ret
aas
sub
arpl
jmp
push
jnp
aas
aas
push
aam
jbe
rcl
repnz
rcrl
add
into
jg
mov
sub
and
test
mov
add
cmp
int3
les
dec
add
cmpsb
out
mov
ja
jo
cmp
cmp
ss
ret
jl
mov
mov
mov
lahf
xor
imul
pop
call
cmp
out
adc
jle
testb
test
dec
dec
push
imul
das
sbb
mov
scas
sbb
sbb
lcall
push
push
xchg
push
frstor
jnp
cmp
mov
ficompl
mov
shll
arpl
out
shl
in
mov
lret
inc
pop
not
mov
jae
aam
sub
mov
in
add
ret
pop
arpl
call
add
cmpl
test
pop
repnz
out
lcall
imull
jp
push
fwait
ja
inc
mov
xor
jle
push
scas
fwait
add
pushf
testb
lret
testb
imul
stos
dec
pop
add
dec
js
cmp
mov
sub
inc
xor
inc
cmpsl
mov
push
mov
mov
adc
add
or
xor
enter
icebp
inc
mov
push
rcll
add
inc
pop
aaa
or
gs
pop
push
mov
xchg
loopne
inc
sbb
in
pusha
jecxz
cmp
cmp
push
add
inc
inc
in
xchg
test
inc
sub
aad
stc
add
pop
mov
push
mov
outsl
lret
movb
or
xchg
and
lcall
hlt
sub
xor
lods
fs
mov
dec
adc
or
in
sbb
xchg
jge
test
mov
and
add
pusha
nop
andl
int3
jns
into
mov
pop
sbb
mov
mov
ljmp
dec
test
mov
fisubl
sub
sbb
sub
jecxz
pop
xor
dec
mov
or
test
dec
icebp
fstpl
jno
jo
inc
hlt
movsl
mov
outsl
push
fidivrl
scas
add
or
repz
adc
xor
xchg
push
pushl
cmp
fsts
orl
xchg
sub
xchg
js
scas
push
add
fwait
sub
insl
dec
mov
aam
lea
cmp
inc
int
pop
pushf
scas
jp
xor
stos
and
addb
mov
jle
fcom
outsb
movsw
push
jmp
pop
loop
dec
bound
dec
mov
jmp
mov
sbb
adc
dec
cmp
fsubs
cmc
jbe
or
mov
lds
and
mov
xlat
pop
or
cmp
mov
push
adcl
les
add
data16
inc
pusha
gs
add
cld
stc
aam
incb
stc
cmp
jl
and
add
lock
daa
in
fsubl
mov
xor
inc
jg
fwait
subl
sbb
addl
push
mov
aaa
jns
jns
adc
xlat
and
inc
and
and
sub
inc
mov
pop
push
stos
imul
mov
ds
insb
inc
xchg
fwait
cltd
mov
jb
xchg
outsb
out
jge
icebp
inc
dec
lock
in
xor
aad
test
jae
pushf
mov
fiadds
cmp
inc
cs
and
into
movsl
add
in
test
das
add
xchg
mov
adc
mov
xor
test
pusha
mov
js
xchg
iret
and
iret
inc
ror
iret
sbb
xor
mov
adc
mov
rclb
ret
mov
xor
pop
cmp
lods
aas
in
sahf
dec
cmp
lahf
pop
or
repz
rorb
fs
out
sub
xor
add
xchg
rclb
inc
push
ljmp
xchg
in
lahf
xor
push
pop
xchg
xor
push
xlat
das
ja
pop
xchg
cld
int
cmp
andb
cmpsb
jl
adc
xchg
push
jg
cmpsl
rcll
lods
test
jle
lock
xor
sbb
int3
iret
and
ret
pop
fcoml
sub
jne
or
pop
pop
xchg
add
aaa
lret
mov
adc
pop
mov
adc
and
push
jb
pop
stos
cmp
dec
add
add
cmp
xor
push
xchg
jns
xchg
in
mov
mov
imul
ss
das
loope
fwait
or
lret
add
xlat
lea
mov
xchg
push
push
inc
shll
cmpb
scas
sahf
push
xchg
cmp
add
mov
aaa
or
or
movsb
jp
dec
mov
loope
jmp
add
test
pop
inc
rcll
pop
xchg
xchg
dec
xor
add
inc
or
xchg
into
lcall
fnstenv
aaa
push
sub
cmp
dec
jle
orl
mov
loopne
mov
cmpsb
aaa
adc
mov
cmpsb
push
aam
into
xor
into
push
fdivs
add
mov
sub
mov
pop
rorb
pshufw
iret
int3
xchg
fildl
push
loope
fnstcw
pop
jo
mov
nop
ss
addb
lds
sub
jnp
sbb
and
xor
je
xor
mov
sbb
repnz
sbb
and
and
pop
insl
mov
in
cmp
subb
pusha
jg
push
cmc
out
lods
stos
sahf
rcrl
scas
test
addl
mov
cli
movsb
push
es
test
into
mov
add
and
fwait
push
mov
shlb
mov
test
faddl
push
push
cmp
dec
push
lahf
or
cmc
lea
pop
into
ret
push
xchg
dec
xchg
arpl
adc
ds
sahf
mov
fisttps
push
xchg
negb
pop
jo
mov
jp
jle
andb
dec
jp
mov
and
ret
sub
std
sub
shrb
ja
scas
push
mov
dec
pop
cmp
jmp
fiaddl
or
jne
jo
mov
pop
insl
push
mov
and
lahf
gs
adc
test
inc
scas
dec
jae
xor
lea
leave
leave
scas
aam
cmp
or
int3
icebp
outsl
out
inc
incb
sar
fcomi
mov
sti
cs
push
push
jge
rolb
inc
push
stos
xor
stc
adc
icebp
rorb
sub
imul
cli
dec
jle
jnp
inc
pusha
scas
add
xchg
dec
xchg
test
add
push
or
sahf
pop
mov
xchg
mov
rclb
jns
rolb
xor
jne
mov
dec
xchg
dec
mov
bound
rol
xor
ljmp
xchg
jb
and
in
sbb
daa
mov
push
shrb
sbb
adc
mov
or
pop
mov
ret
mov
insb
imul
xchg
fldl
push
mov
pop
xor
ficoms
aaa
push
push
adc
ret
mov
stos
mov
popa
out
popf
mov
lods
push
clc
add
jo
pushf
fnstsw
push
adc
gs
sub
push
movb
fs
outsl
sub
sub
sbb
xchg
fs
ljmp
clc
sub
push
fisubrl
fistl
data16
or
jecxz
repz
xchg
jns
or
and
or
test
daa
into
or
push
daa
mov
dec
nop
lahf
addr16
in
xchg
in
push
in
pushf
mov
inc
cs
pop
mov
ss
pushf
iret
and
imul
popa
jl
inc
in
cwtl
dec
leave
inc
subl
adc
insb
test
or
sbb
ja
ljmp
jle
mov
daa
fs
inc
mov
lcall
sbb
bound
push
add
mov
pop
or
adc
inc
movsb
add
sub
cmp
sub
mov
inc
cwtl
adc
addl
je
std
leave
addl
adc
int3
movsb
and
mov
outsb
daa
mov
repz
jae
pop
hlt
shlb
icebp
jns
mov
pop
sub
xchg
cld
fcmovbe
mov
jmp
adc
dec
pop
loopne
xchg
repz
mov
sub
imulb
and
dec
sub
sub
test
loope
inc
addb
inc
jne
jb
sbb
scas
adc
and
aaa
cli
sub
or
inc
inc
je
in
jge
test
lods
or
ja
push
sub
shll
pop
inc
cmc
sbb
hlt
int
pop
mov
and
lret
and
xlat
in
push
clc
dec
push
inc
sbb
shrb
and
and
and
xor
push
lret
fcomps
lock
xor
sub
fidivrl
pop
popl
push
xchg
ret
pop
fucomi
push
inc
shr
repz
push
sub
adc
push
andb
aaa
mov
stc
insb
jne
mov
fcom
test
add
push
dec
out
xchg
rolb
sbb
sbb
sub
xchg
aas
adc
xchg
fsubrs
dec
sahf
test
imul
jmp
and
add
enter
movsb
add
pcmpeqb
push
xchg
fcomps
sub
and
xor
sub
sub
fidivrs
sarl
add
xchg
jnp
sbb
push
out
sbb
jmp
lret
and
and
fnsave
test
repz
sbb
mov
sub
arpl
andb
test
xchg
xchg
ds
mov
int
sub
mov
and
jge
or
push
inc
mov
xlat
xchg
sti
xchg
pop
sbb
push
loop
es
cmpsb
push
jge
cld
cmp
or
nop
shlb
lods
lret
adc
mov
mov
std
mov
es
mov
das
out
cmpsb
and
push
outsb
cwtl
lret
sbb
add
leave
dec
dec
lock
xor
out
cmp
insb
jmp
mov
dec
fsubs
ljmp
inc
inc
cld
pop
sub
sbb
pop
dec
imul
movb
adc
push
adc
mov
inc
pusha
inc
fldl
jnp
call
and
in
sbb
lea
imul
andl
bound
push
add
outsl
pop
xor
rcr
jp
std
lahf
inc
push
mov
int3
push
adc
stc
fnsave
adc
sbb
mov
subl
push
out
pop
inc
sbb
int3
mov
lds
mov
mov
ret
inc
inc
push
loope
xchg
mov
or
stos
mov
sub
pop
xchg
pop
inc
inc
xor
pop
dec
or
lds
mov
fcoml
in
push
mov
cmp
jae
jg
aas
jecxz
xchg
aas
js
sahf
xchg
insb
fistpll
pop
lea
scas
data16
jne
lea
or
das
sbb
fucom
inc
repz
mov
loope
mov
adc
in
jb
or
lods
mov
or
pop
cli
lahf
jns
lock
loope
sarl
xchg
pop
cmp
popa
mov
mov
imul
int3
xchg
mov
popl
adc
and
lods
mov
das
jns
sub
sub
mov
rclb
repnz
lods
push
les
out
enter
xchg
sub
mov
fisubrs
sbb
leave
adc
mov
fidivs
and
adc
rep
push
push
cltd
xchg
or
jne
stc
mov
in
rcrl
adc
pop
fcomps
shl
mov
vmwrite
jno
into
enter
cld
xor
sbb
test
in
out
sub
or
cmp
mov
lods
xchg
sbb
lret
dec
dec
dec
add
std
mov
out
nop
test
mov
push
test
or
jne
mov
orl
shlb
dec
fdivrs
mov
push
test
adc
daa
sub
or
add
jnp
xor
sbb
and
mov
pop
cmp
daa
scas
into
sbb
xchg
cmc
fcoml
scas
xchg
dec
push
jle
and
gs
sbb
movsl
add
aad
js
xor
cld
out
and
shlb
push
xchg
dec
jp
shrb
fwait
pop
mov
jb
jns
inc
xlat
lea
stos
adc
cmp
cs
pop
lea
movsl
xchg
push
push
pop
add
bound
into
mov
xor
sbb
sbb
and
add
bound
movsl
scas
ret
xor
std
or
sbb
enter
into
insl
cmp
cmpsb
xchg
insl
push
add
icebp
ret
mov
fistps
xchg
inc
adc
scas
lcall
imul
sbb
test
and
scas
in
insb
jge
sub
push
daa
jg
fiaddl
pop
jno
push
adc
cmp
xor
inc
dec
jae
xchg
jo
inc
push
outsl
push
sub
insl
lahf
pop
rcll
scas
test
mov
pop
fcmovnu
fcmovne
sbb
ja
or
mov
loopne
in
mov
out
cmp
ja
or
scas
fwait
jg
dec
push
cs
shr
mov
dec
wrmsr
cmp
jge
xorl
cli
test
sbb
push
pop
lea
gs
jb
call
sub
out
dec
or
sub
sub
push
arpl
int3
jnp
mov
mov
xchg
lret
mov
outsl
gs
int
leave
mov
or
sbb
in
into
mov
fldl
mov
addr16
mov
mov
sbb
lds
sbb
test
mov
aaa
xor
xor
sub
mov
rorb
xlat
movsl
int3
jle
push
pop
cmp
add
scas
negl
dec
adc
andb
scas
or
dec
cmp
out
movsl
jp
pusha
cmp
xchg
into
sub
jno
ret
insb
paddusw
mov
imull
insl
push
jns
iret
pop
xchg
shlb
scas
roll
mov
imul
cmpsb
lods
aam
stc
xchg
push
je
lods
iret
into
outsl
sbb
dec
mov
hlt
mov
insl
add
dec
add
out
and
lods
pop
mov
sbb
test
out
loope
sbbl
leave
gs
adc
push
or
shrl
adc
sbbl
imul
mov
sbb
nop
int3
aad
add
mov
into
cmpsb
sbb
or
test
mov
lds
mov
test
mov
out
or
inc
jns
ss
or
push
incl
popa
cmp
jb
notb
fwait
push
lahf
pop
stos
push
mov
xchg
mov
ud2
fisttps
imul
ds
and
fwait
lea
xchg
cwtl
aad
sbb
ljmp
into
aas
push
imul
es
xchg
push
and
xchg
into
xor
jge
push
hlt
jb
lahf
and
xchg
dec
arpl
lret
cmc
push
aad
adc
push
out
push
mov
mov
jge
mov
add
bound
call
sbb
push
inc
mov
sub
lahf
mov
inc
adc
ljmp
add
mov
movsl
push
aam
xchg
adc
add
add
and
mov
xchg
popa
mov
sbb
jno
test
std
cwtl
fldcw
pop
bound
adc
inc
ficomps
xor
fsqrt
and
add
jo
inc
pop
xchg
in
loopne
pop
pop
into
rcll
sub
or
aam
js
cld
nop
and
cmp
fs
vhsubpd
aam
xlat
leave
pop
mov
adc
pusha
cmp
mov
test
les
out
fs
gs
shl
mov
adc
dec
inc
stos
stc
add
dec
push
sub
xor
popa
push
jecxz
out
cmpsl
clc
cwtl
jmp
jg
add
sti
fwait
loope
xchg
xchg
mov
movsb
gs
xchg
cmc
orl
sti
fcomp
addr16
dec
adc
lods
sti
lret
push
cmpsl
sub
mov
push
imul
popa
add
sub
mov
aas
mov
mov
testb
fistpl
jbe
test
test
jp
inc
or
sub
lods
insb
mov
mov
mul
ds
andl
xchg
sub
aas
cmp
mov
cmc
pusha
pop
lcall
jmp
orb
js
sub
inc
xor
orl
stc
shl
push
gs
ja
std
mov
jg
inc
rorb
cmpb
into
or
mov
or
xlat
cmp
sub
push
xchg
stos
lea
fsubrl
push
jnp
out
andl
shlb
adc
mov
push
mov
dec
mov
ret
fs
scas
mov
fs
lock
push
xchg
fnstsw
xorb
inc
mov
or
aas
cmc
xchg
add
dec
ret
mov
sbb
fdiv
mov
sbb
sub
push
frstor
adc
inc
cltd
in
mov
shll
fcmovnbe
pop
xchg
adcl
or
popa
jge
cmp
adc
cmp
repnz
add
add
inc
adc
sbb
stos
subb
cmc
pop
aad
pop
aad
xor
mov
and
cld
dec
popf
sub
fidivrl
jne
lcall
repnz
out
pushf
jo
mov
xchg
clc
jbe
pop
cmpsb
mov
xlat
xorl
cmpsl
and
movsb
sbb
std
xor
sbb
sub
sbb
dec
xchg
cwtl
sub
dec
pushf
inc
fsubrl
dec
adc
xor
lcall
sub
add
movsb
xchg
jecxz
stos
sub
test
mov
in
mov
es
pop
lock
int3
push
arpl
mov
sahf
and
int
lea
and
lret
cs
add
push
cli
jle
in
dec
xor
xchg
and
bound
repnz
mov
clc
popa
push
js
add
push
pop
roll
stos
push
stc
pop
mov
sub
outsb
nop
add
lahf
dec
icebp
test
stos
sahf
xor
mov
mov
aam
sbb
ror
xchg
ljmp
sub
jne
jmp
adc
add
mov
push
mov
mov
movsb
mov
pop
mov
daa
lahf
mov
or
adc
ja
lahf
and
bound
inc
inc
mov
mov
push
jecxz
dec
aas
or
dec
sbb
or
es
sbb
push
push
sbb
cli
jns
je
test
jmp
push
mov
xor
cmp
loope
adc
fisttpl
push
sub
imul
mov
sub
and
aaa
push
xor
mov
mov
in
cmp
or
cmp
xchg
or
push
adc
xchg
jno
subb
in
sub
fs
push
pmullw
outsl
adc
stos
mov
sub
jmp
idivl
fsubrl
adc
data16
mov
sub
mov
arpl
xchg
jg
xchg
xchg
adc
jl
fildl
sub
xlat
sub
inc
addr16
mov
cwtl
mov
xchg
or
mov
daa
sbb
in
inc
cld
cmp
push
cmp
out
add
jmp
pusha
dec
hlt
int
inc
loop
gs
push
add
mov
gs
das
stc
fdivs
ljmp
testl
and
and
xor
mov
arpl
in
test
popf
pop
outsl
imul
icebp
lock
rcrl
dec
pop
sbb
sti
add
out
inc
pop
adc
jne
add
jecxz
dec
sub
aad
adc
mov
or
ss
add
popa
jno
stos
fsubl
mov
mov
push
or
lret
scas
mull
mov
or
mov
out
adc
out
pusha
mov
push
jne
jae
jbe
movsl
lret
jmp
scas
cmp
lds
leave
mov
out
inc
fstpl
adc
stc
insb
fs
inc
add
mov
xchg
sbb
adc
xor
push
ljmp
idivl
out
aaa
lcall
pop
jns
aam
sbb
and
clc
xchg
and
stos
sub
jmp
jae
pop
ljmp
mov
into
add
jne
jb
nop
push
mov
jg
loopne
in
inc
das
mov
cmp
push
jae
mov
scas
mov
sti
movsb
push
mov
mov
out
xorl
add
shrl
adcl
idiv
push
or
sbb
repnz
out
cmp
add
fsubrs
loope
adc
lret
sbb
adc
cltd
xchg
mov
pusha
adc
push
push
imul
ret
icebp
or
lea
sub
call
movsl
jecxz
sub
lcall
pop
jnp
aad
mov
jo
dec
and
sbb
ret
outsl
or
insb
jbe
bound
xchg
lods
add
dec
lods
das
or
icebp
inc
adc
ret
xchg
jnp
mov
sarl
xlat
jle
in
add
dec
xchg
hlt
gs
push
mov
test
jp
dec
fiaddl
push
ja
push
sub
xor
aad
fists
and
test
mov
std
lcall
andl
pop
popf
xor
idiv
fistpl
dec
or
adc
test
out
out
fwait
les
adc
adc
sbb
jge
les
pop
sarl
lods
and
or
add
jge
mov
cmp
in
pop
bnd
idivb
cmp
mov
dec
inc
pop
inc
rolb
imul
add
sbb
mulb
xchg
jle
dec
por
mov
fs
movsb
arpl
cmp
mov
mov
add
mov
into
mov
inc
test
jecxz
divb
push
cltd
xor
fnstsw
jne
rorb
repz
mov
out
pop
xor
mov
jg,pt
fbstp
xchg
fdiv
sar
push
fmull
sbb
sbb
mov
cli
test
out
sub
sbb
lds
jne
inc
fisubrl
ss
scas
adc
ds
adc
dec
mov
mov
rorl
cmp
nop
xchg
mull
jg
jl
adc
cmp
add
and
add
leave
cmp
lods
cmp
aas
push
xor
mov
aas
inc
push
cld
repnz
jns
pop
lahf
int3
das
loopne
cs
jne
mov
pop
fsubrl
pop
fdivrs
sti
jns
addr16
dec
lock
in
lock
fwait
daa
cli
dec
fucomip
cmp
call
or
fwait
mov
jb
jb
mov
lahf
cmp
cld
cmc
and
insb
xor
push
pop
ljmp
mov
mov
mov
or
stos
adc
sti
mov
out
leave
or
xor
cwtl
testb
and
ljmp
inc
lea
test
jecxz
inc
adc
jnp
pusha
pop
jbe
into
pop
in
je
cmp
xchg
mov
jp
notl
push
cmp
les
push
sbb
test
je
pop
push
int3
inc
das
jecxz
insl
aaa
stc
push
jnp
and
inc
mov
call
adc
ljmp
dec
aam
fcoms
sbb
scas
xchg
nop
mov
fcmovnu
cltd
sub
lods
or
movsb
dec
rcrb
fldcw
add
jno
ja
mov
jbe
lret
mov
fiadds
aad
movsl
daa
arpl
out
frstor
fiaddl
bound
clc
inc
shl
or
cld
ret
mov
and
mov
dec
and
inc
jp
push
outsl
pop
ret
cs
add
loope
call
sub
push
jno
out
push
hlt
jge
mov
xchg
aad
fisubl
or
fiaddl
jno
cli
dec
sahf
shrb
add
sub
cmpsl
adc
xor
add
inc
xor
js
xchg
cmp
fcoml
popf
stc
bound
call
sub
cmp
iret
dec
outsb
fdivrl
jno
cmp
gs
mov
push
xchg
push
add
cli
jnp
rolb
and
fidivrl
mov
shrl
or
pop
xchg
popf
or
or
pushf
std
stc
mov
cmc
push
clc
or
lods
repz
jne
push
test
in
in
testb
ret
pop
lock
cli
hlt
mov
ffreep
test
dec
xor
dec
inc
lret
rolb
in
mov
addr16
dec
lock
push
ljmp
xor
into
daa
jnp
or
fwait
and
ss
test
pop
mov
push
or
stos
mov
sub
sub
shrb
dec
enter
inc
mov
mov
hlt
push
int3
aaa
fcmovnbe
adc
add
leave
pop
das
jmp
aam
leave
push
icebp
insl
adc
dec
push
push
pop
mov
xchg
mov
pop
mov
test
add
shrl
mov
cs
pop
xor
ret
sub
cwtl
jne
xchg
sub
mov
addb
xchg
dec
cltd
jecxz
jge
movsb
mov
lret
mov
insb
daa
repnz
add
and
jl
data16
rcll
or
sub
popf
daa
rclb
mov
push
cwtl
or
insl
stc
scas
daa
lods
or
sbbb
xchg
imul
and
nop
mov
sbb
ret
push
xchg
rcl
xchg
cmp
sub
mov
mov
mov
mov
cmpsb
dec
aad
lock
or
fwait
xor
jno
push
outsb
mov
pop
js
stos
shll
fisubrl
mov
dec
adc
sbb
jp
repz
xor
add
sbb
mov
push
dec
fnstcw
add
jbe
das
std
outsb
mov
mov
xor
cmp
sbb
std
loop
and
or
testb
loope
iret
dec
popa
fucomp
rcll
test
mov
or
pop
push
cmpsl
jo
and
push
or
ds
pushf
loope
dec
lcall
xchg
xor
popf
push
dec
ja
jp
mov
shl
inc
push
cmp
or
lods
xor
xor
jb
lahf
push
or
inc
cs
jmp
sub
add
jg
popa
cmc
dec
push
jne
sbb
dec
add
nop
adc
fprem
cmp
cmp
add
fisttps
mov
mov
inc
cltd
or
cld
jae
jle
inc
push
shlb
int
pushf
int3
sti
add
mov
jecxz
add
push
mov
sub
rclb
mov
orl
jmp
jg
test
sub
icebp
out
and
lods
repnz
xor
mov
push
push
pop
ljmp
pushw
pusha
test
out
push
push
sbb
cltd
enter
adc
mov
dec
ja
inc
add
jo
jle
aaa
aaa
in
jg
sub
sub
lahf
fadds
data16
iret
jge
push
imul
or
sub
test
cs
cmpl
and
lods
call
daa
stos
out
adc
dec
je
mov
inc
test
adcb
jp
loop
mov
jnp
adc
dec
in
fidivl
adc
push
xor
mov
pushw
mov
test
push
xor
xchg
or
push
sbb
sahf
stos
inc
xor
jnp
xchg
out
xchg
sbb
fwait
in
cmpsl
xor
shlb
xchg
ljmp
loop
lods
std
sbb
push
add
adc
jle
xor
mov
jno
loopne
decl
movsl
dec
xchg
pop
sbbl
fcmovnu
dec
add
push
sbb
adc
repnz
enter
adc
dec
fwait
mov
push
pop
dec
fcmovu
dec
jae
or
inc
cld
mov
mov
imul
movsb
mov
sbb
imul
scas
popa
mov
iret
std
jne
fisttpl
sbb
cs
mov
cmpsl
aaa
add
movsl
xor
inc
cmc
lahf
lods
xor
shrl
ret
jno
fs
sbb
jo
jp
mov
imul
add
fxch
testb
sahf
xchg
mov
and
inc
xor
xor
dec
push
and
outsb
rolb
push
add
lds
mov
adc
xchg
in
push
cwtl
mov
pop
test
or
mov
rol
fidivrs
mov
loopne
pop
adc
dec
out
xlat
jb
mov
fdivrp
ret
loop
add
aas
or
mov
jecxz
cli
arpl
inc
jmp
jo
in
push
pop
pusha
or
leave
nop
mov
testl
and
hlt
sti
inc
fdivs
lods
test
xchg
dec
outsb
fbld
into
fs
mov
js
ret
in
inc
ljmp
cmp
mov
sysenter
inc
das
lock
pusha
mov
mov
push
xor
xchg
sti
add
pop
jg
cli
fadds
cmpsb
and
loopne
aaa
mov
mov
rclb
cwtl
jae
ret
adc
lahf
cwtl
push
pop
imul
jo
add
mov
mov
mov
pop
push
insl
sahf
decl
cld
xchg
adc
out
insl
adc
addr16
es
jns
fcomi
xor
iret
push
sti
dec
push
loope
scas
mov
add
sbb
xchg
je
stos
dec
adc
jmp
loope
mov
mov
repz
scas
sbb
add
mov
and
or
test
or
push
jle
jge
mov
xor
std
sahf
into
cmp
daa
xor
mov
jge
sbb
mov
imulb
dec
dec
mov
bound
idivl
pop
mov
jne
mov
inc
jo,pt
and
xor
std
out
and
xchg
ret
inc
xchg
cmp
sbb
adc
subb
fdivrs
sbb
ficoml
repz
or
stc
addr16
arpl
fisttps
sbb
sub
push
xchg
int3
cltd
aam
cmp
sub
sti
and
or
mov
pushf
xor
jns
stc
or
inc
adcl
js
pop
into
jbe
mov
rcrl
mov
sub
sbb
xor
xchg
pop
mov
inc
or
lods
stos
shrb
jbe
dec
sbb
jne
loopne
movsb
jl
loope
cld
movl
add
lret
int3
mov
dec
adcl
cld
inc
push
mov
or
cmc
repz
adc
fsubs
das
push
sbb
out
add
push
insb
stos
cs
clc
js
popa
xchg
or
shll
inc
int3
sub
loope
xor
daa
xchg
in
inc
pop
push
pop
jns
cmc
xor
push
xlat
push
call
mov
xchg
leave
xchg
pop
push
pusha
dec
out
dec
pop
test
aas
pop
push
add
xor
lahf
inc
in
out
adc
loopne
loope
or
sarb
gs
lahf
out
cwtd
scas
mov
fisttpll
push
xchg
test
insb
push
mov
add
sbb
xor
mov
dec
mov
jmp
ret
arpl
and
nop
arpl
fldcw
fildll
or
jbe
pop
notl
out
mov
fiaddl
mov
xor
outsl
mov
clc
sti
mov
or
jb
xchg
sub
cmp
iret
call
push
bound
cs
mov
sub
scas
sub
dec
push
xor
lret
repnz
mov
enter
inc
out
mov
mov
jae
push
dec
es
and
lods
mov
fs
jno
cmp
mov
pop
sub
xchg
inc
mov
mov
adc
inc
jns
les
xchg
dec
test
mov
jg
mov
lret
fildl
xchg
or
xor
gs
cld
mov
data16
and
jle
in
movsb
leave
loope
xor
data16
repz
sbbb
adc
mov
pushl
andl
or
cwtl
addr16
xchg
dec
inc
xor
je
push
dec
xchg
pusha
and
mov
cmp
jg
rorb
std
adc
cmp
stos
insb
cmpl
cli
inc
xchg
popf
jnp
inc
ljmp
mov
nop
mov
mov
inc
ret
pusha
mov
imul
lahf
mov
jl
cmp
adc
sub
and
or
push
cmpl
xlat
jae
dec
lock
and
lcall
int
push
inc
jo
add
pop
inc
and
add
jge
sbb
push
rcrl
sbb
das
mov
push
arpl
add
pop
out
add
stos
cmp
dec
lret
inc
jae
jne
xchg
addl
sarb
lea
sbb
and
bound
mov
push
pop
or
dec
movsb
daa
fs
in
jmp
mov
or
mov
out
pusha
cs
and
xchg
inc
cld
ss
imul
cmp
fsubs
xchg
or
jmp
xchg
fildl
fs
fsubrs
stos
mov
dec
and
mov
or
negb
dec
inc
hlt
lods
test
pop
bnd
sub
in
inc
outsb
movsl
idiv
sub
in
sbb
push
sub
insl
icebp
cmpsb
inc
and
lcall
jle
xlat
adc
pop
push
and
mov
fs
adc
shrl
test
push
xor
test
push
cmp
dec
and
sbb
jmp
outsb
push
cmp
shll
mov
out
sar
out
ffreep
push
add
int3
das
xchg
int
in
or
popa
or
xchg
add
es
leave
popa
out
jae
mov
test
pusha
mov
jno
sbb
mov
mov
add
adc
cltd
jp
daa
ljmp
lock
sbb
lahf
mov
mov
mov
popf
inc
std
jno
fcmove
scas
stos
jle
mov
nop
int
inc
mov
dec
in
ds
scas
lret
xchg
xchg
sbb
mov
imul
aad
pop
popa
aam
ret
xchg
mov
loop
push
push
in
add
pop
rorl
les
xchg
or
push
xchg
roll
xor
in
pop
adc
xlat
clc
pop
mov
ficoms
fdivrl
inc
in
ss
mov
or
xor
adc
sbb
or
cmp
movb
ror
mov
xchg
sbb
mov
mov
jmp
mov
pop
sub
shlb
clc
inc
sbb
jo
loope
cmc
stos
adc
xor
cli
aam
mov
in
pop
gs
mov
dec
inc
pop
mov
adcl
jge
mov
sar
ja
addl
pusha
loop
ficompl
push
outsl
addr16
add
and
shll
and
je
aam
mov
sub
insl
movsl
into
jo
mov
pop
pop
pop
lods
xorb
addl
mov
in
pop
insl
inc
mov
cli
mov
sbb
jecxz
xchg
adc
pop
lock
sub
sub
leave
mov
jmp
push
dec
jg
xor
sahf
sub
push
push
mov
enter
pop
hlt
call
cltd
nop
fstpl
mov
cmp
dec
es
jns
adc
je
fs
ljmp
mov
psrlw
fisubl
push
ss
add
mov
adc
inc
pop
jmp
jl
xchg
cld
arpl
and
stos
fisubrs
pop
inc
mov
lods
jl
nop
into
in
or
bound
outsl
push
mov
iret
cld
fsubrl
sar
je
movsl
dec
fs
xchg
add
outsl
nop
push
ljmp
and
ja
scas
cmpsb
iret
lock
lock
dec
cwtl
or
sbb
xchg
cmp
jno
mov
std
daa
lods
test
inc
sahf
adc
sahf
push
dec
xchg
or
adc
fsubl
arpl
rcl
xor
push
pop
sub
out
into
cmp
popf
or
ljmp
cmpl
push
mov
xchg
mov
mov
push
aaa
mov
out
iret
shrl
lods
outsb
test
pop
inc
push
mov
push
cmpsl
cmp
dec
ds
test
test
stos
push
xchg
jo
mov
dec
out
inc
or
xor
or
and
xchg
push
push
aam
push
nop
in
dec
mov
aas
mov
popf
push
shlb
push
xor
lcall
ror
xor
movsl
fimuls
je
iret
add
fstps
push
popa
xchg
xchg
fcmovbe
fcoms
es
sub
nop
popf
in
into
or
sub
fcmovu
inc
cmp
or
out
lods
and
pop
icebp
push
rolb
outsb
mov
lods
sub
jmp
int
js
jmp
nop
cmp
orps
mov
push
add
jmp
fldcw
jo
movsl
test
int3
jecxz
pop
mov
sub
dec
cmpsl
loopne
cmp
adc
hlt
xlat
ret
pushl
and
adc
lret
imul
mov
insl
sbb
or
mov
pop
scas
mov
sarl
ret
push
dec
xchg
or
add
xor
cmpsb
sbb
dec
inc
fdivrs
adc
sahf
dec
xor
in
add
mov
push
movsb
jns
lock
dec
lahf
dec
inc
movsl
mov
mov
les
add
mov
outsl
pop
repnz
pop
add
xor
mov
pop
xchg
add
sub
xchg
xor
clc
pop
insl
mov
outsb
push
loope
iret
mov
loopne
into
fidivs
adc
clc
and
into
cmp
ds
cmp
dec
mov
sbbl
imul
xchg
loopne
ss
insl
xor
xor
xchg
fmuls
or
xchg
xchg
dec
pop
inc
pop
xchg
lods
int3
cmp
lock
movsl
jo
jb
sbb
jp
ficoml
push
jecxz
fcomps
fnstenv
ret
es
out
arpl
sub
mov
cmpsl
xchg
out
adc
inc
mov
jmp
xchg
mov
cmp
and
cmc
arpl
pushf
loopne
mov
out
stc
dec
dec
fldcw
addr16
jge
and
outsl
dec
scas
scas
and
adc
pusha
test
in
and
fildll
ja
shrb
mov
scas
iret
push
pop
lock
cwtl
and
xchg
mov
popf
adc
jo
jmp
sbb
mov
jp
add
dec
fistpl
enter
push
ja
cmp
aas
fsts
sti
xchg
jmp
jno
push
mov
dec
dec
and
adc
decl
dec
scas
and
cmp
sub
out
nop
enter
ds
jb
sub
add
mov
iret
inc
mov
stc
sahf
cmp
dec
dec
ret
std
ljmp
sbb
cmp
mov
jmpw
daa
in
scas
dec
adc
sbb
mov
cmp
jmp
add
sbb
fisttpll
leave
sub
gs
mov
out
loope
js
add
in
xchg
or
hlt
shlb
outsl
gs
mov
add
xchg
dec
push
fs
push
popa
arpl
hlt
cmp
incb
mov
hlt
or
sbb
bound
lea
fiaddl
test
cmpsb
iret
aas
dec
fwait
jne
pusha
pusha
inc
ss
hlt
jge
inc
cmp
fs
push
mov
xor
mov
xor
mov
test
out
cmp
add
push
add
fwait
mov
xchg
dec
sbb
int
or
nop
ret
mov
sbb
test
andl
dec
out
and
in
jle
cltd
mov
int
subl
sahf
cmp
jo
cmpsb
aam
or
fldl
sbb
adc
stc
aaa
mov
movsl
xchg
sbb
push
idivb
push
scas
aas
add
xchg
out
add
xchg
xor
pop
add
xor
xchg
mov
xchg
jne
push
scas
or
xor
mov
lahf
mov
add
iret
dec
sahf
call
es
fnstsw
js
test
mull
mov
in
sbb
leave
leave
lcall
ja
mov
pop
mov
pushf
mov
out
mov
jne
outsb
mov
test
jbe
jl,pt
sbb
adc
sbb
mov
jnp
test
pop
movsb
outsb
sar
test
xchg
lcall
mov
adc
call
sub
or
xadd
hlt
add
insl
cmpsl
nop
outsb
mov
outsb
sbb
add
mov
mov
insl
out
mov
stos
stc
rcl
pop
cmpb
jae
pop
mov
push
cmp
js
or
and
adc
jo
xorl
insb
aad
daa
mov
fcmove
push
ret
mov
fildll
xlat
test
inc
dec
pop
lret
fbld
inc
cld
dec
xor
fstl
fadd
cmp
mov
lods
inc
clc
xchg
fsubl
fistps
cltd
hlt
jecxz
int
ljmp
rclb
xor
sbb
sahf
loope
dec
inc
add
cmpsb
data16
inc
filds
cwtl
fldenv
movsb
pop
inc
jecxz
or
sub
test
out
std
movsl
cmp
loop
fistps
in
shll
inc
xor
scas
dec
inc
stos
or
into
xchg
ss
pop
fwait
jp
push
and
jle
hlt
adc
pop
jmp
pop
pop
fs
pusha
cltd
nop
aam
push
or
mov
repnz
pop
xchg
cmc
pop
sub
or
scas
aad
or
sahf
add
mov
aad
and
dec
add
gs
pop
mov
mov
push
out
add
xchg
and
push
push
fwait
je
es
mov
mov
test
dec
mov
enter
jo
and
mov
push
cmp
jb
stc
or
jmp
mov
mov
sbb
test
insl
push
add
cmp
into
xorl
pop
sub
push
jg
repnz
mov
js
push
cs
xor
leave
mov
sahf
pop
leave
jmp
jae
cmp
cwtl
shll
dec
add
std
mov
add
das
and
int3
sub
inc
test
mov
ret
mov
add
sub
dec
enter
std
mov
jo
insb
pop
mov
push
mov
xchg
or
pushf
jg
hlt
mov
ret
pop
pop
bound
mov
inc
cmpsb
push
mov
add
int
cmc
int
inc
add
push
jo
pop
mov
out
mov
in
push
in
push
inc
aam
shr
incb
mov
jge
les
inc
dec
adc
inc
add
jne
jb
data16
mov
leave
jp
pcmpeqd
mov
outsb
mov
mov
xchg
icebp
mov
ds
adc
in
jb
mov
lret
xor
arpl
adc
xor
ja
dec
pop
imul
daa
mov
test
repz
cmp
add
stos
enter
mov
and
popa
fwait
pushf
dec
enter
add
outsl
and
adc
lcall
stos
sub
stc
sub
xchg
pop
add
int
cmp
cmp
mov
lret
lock
icebp
or
test
fidivl
mov
fs
andb
popa
mov
mov
es
inc
mov
xchg
xor
xor
xor
pushl
add
cltd
leave
in
cld
in
addr16
mov
dec
fisubl
mov
or
popa
outsb
arpl
adc
pop
push
or
iret
xorl
mov
into
adc
cmpsl
imul
pop
movsb
popa
in
xchg
push
mov
out
in
mov
fdivrl
jns
dec
mov
dec
movsb
cs
scas
cmp
xor
lret
cmp
add
ret
out
push
outsb
jns
push
push
mov
and
loopne
shrb
lods
dec
or
jae
inc
adc
pop
loop
push
lods
xchg
bound
insl
fbstp
xchg
mov
and
and
hlt
xor
push
orb
xor
jnp
shrb
stos
mov
and
scas
pop
les
cld
cmp
sub
xor
stc
mov
or
cli
xor
pop
sbb
stos
lahf
mov
jae
pop
inc
cmp
xchg
movsl
xchg
mov
xchg
scas
fcoml
int
icebp
mov
xorl
nop
mov
out
sbb
xchg
das
sbb
popf
test
mov
jo
xlat
inc
lcall
xor
pop
xlat
cmp
inc
insl
lcall
inc
subb
xchg
mov
inc
iret
daa
rolb
fs
ja
inc
repnz
rcl
lock
jmp
mov
scas
dec
xorb
int3
push
int3
sbbb
xchg
xchg
lcall
or
cmp
ss
pusha
cmp
dec
sub
pop
jae
sahf
enter
inc
sahf
stos
inc
push
adc
pop
mov
in
pop
or
outsb
dec
dec
das
xchg
hlt
adcb
jl
jnp
cmc
add
mov
test
loopne
out
gs
inc
dec
cmp
in
add
lret
xorb
pop
xor
sarb
pop
das
roll
dec
jbe
cmp
decl
mov
pop
adc
jnp
mov
movb
clc
insl
shlb
mov
nop
js
dec
stos
cwtl
addr16
push
push
xor
dec
enter
test
xor
mov
jecxz
loop
mull
stos
push
xchg
cmpsl
mov
mov
mov
cmp
cmp
mov
or
or
adc
or
jae
dec
jle
lock
push
mov
jb
test
pop
cmc
stc
mov
sbbl
insb
stos
jns
aaa
and
add
mov
insb
sub
sbb
repnz
stos
insl
out
push
aad
mov
out
sbb
int
jmp
lret
cmp
std
cmp
dec
dec
mov
std
les
movsb
jns
loopne
push
xor
je
outsl
mov
dec
push
xor
dec
stos
jle
xor
sub
sbb
push
std
xchg
adc
fcoms
addr16
jmp
sbb
sbb
sub
insb
imul
mov
fs
jl
icebp
jb
xchg
popf
aaa
mov
xor
rcll
inc
int3
daa
subl
mov
cli
jnp
out
jmp
push
int
nop
cld
stc
outsl
or
dec
push
mov
jo
insl
xchg
testb
sbb
int3
pop
xchg
xor
ds
mov
dec
mov
mov
fldenv
ret
pop
fs
xchg
fiaddl
sti
jp
fincstp
call
sbb
mov
loope
dec
fildl
inc
stc
repz
jg
in
mov
mov
adc
or
push
jecxz
xchg
mov
and
daa
mov
cmp
mov
repz
pop
adc
test
xlat
jno
cltd
push
jo
or
test
mov
mov
push
pop
insb
mov
mov
inc
out
xchg
sub
shl
lcall
hlt
and
pushl
sbb
lcall
adc
out
and
std
sub
and
adc
lret
andb
mov
lds
jne
add
sbb
inc
cmpsb
xchg
mov
mov
and
add
push
rol
aas
fisttps
jae
mov
mov
rcll
cmc
sub
leave
orl
je
push
cmpsb
cwtl
loope
loope
mov
mov
cmp
insl
mov
pop
cmp
sub
daa
movsb
and
lods
test
jno
add
pusha
xor
mov
int3
repnz
or
lds
cmpsl
enter
sbb
mov
sub
sbb
shl
xchg
add
fwait
xchg
inc
lret
xchg
hlt
add
test
mov
inc
sbb
jmp
inc
lods
stos
sarb
mov
fwait
scas
mov
jg
out
fcomps
mov
xor
xchg
cli
add
icebp
stos
lods
rcll
lea
fcoml
mov
pop
shlb
jge
push
xor
dec
leave
add
add
rorl
add
aaa
ret
jb
gs
add
hlt
outsl
dec
push
imul
aas
insl
adc
shlb
testl
jbe
addr16
in
inc
ffree
mov
mov
shl
push
push
pop
ficoml
mov
mov
xchg
pushf
nop
imull
push
in
push
mov
adc
mov
mov
add
iret
fldl
loopne
mov
lock
out
pop
inc
dec
cmp
inc
mov
js
jae
shll
repnz
clc
lret
jge
std
mov
sbb
xchg
popf
xchg
mov
loope
xor
xchg
imul
daa
xor
pop
push
jae
xchg
insl
lret
mov
push
daa
cli
inc
mov
and
out
inc
outsb
sahf
bound
test
das
out
or
mov
jb
lea
add
or
fwait
loope
sahf
fbld
aad
call
mov
jmp
je
icebp
push
outsl
xor
or
sub
pusha
data16
ret
jmp
in
popf
and
lahf
stos
fistl
scas
add
adc
cmc
dec
pusha
jle
dec
leave
bound
jecxz
aas
mov
xchg
fisubs
push
dec
int3
cmc
out
push
pop
ret
dec
in
test
and
mov
pop
add
addl
push
mov
jno
fsubl
setle
push
jg
popa
fidivl
sbb
and
movsb
and
shl
pop
mov
sar
jp
inc
inc
andl
cmp
pop
or
das
arpl
clc
push
xchg
and
mov
or
scas
jb
mov
sub
or
dec
push
or
mov
dec
in
je
jmp
mov
dec
dec
lock
repnz
jmp
les
cli
xchg
add
or
hlt
dec
stos
mov
repz
scas
dec
gs
sub
add
push
call
cmpsb
and
cmpsl
adc
std
inc
xlat
push
inc
cmc
mov
cmpsb
cli
movsb
lock
fistl
xchg
sub
fwait
mov
mov
imul
nop
imul
sub
jp
inc
pop
add
ss
push
mov
and
or
sub
or
pusha
jge
dec
dec
lods
jecxz
fldl
cmpsb
dec
ret
sahf
or
insl
stc
les
inc
cs
sub
xchg
dec
add
push
push
cmp
or
fiadds
inc
cli
fs
loope
mov
jl
xor
scas
shl
stos
xchg
arpl
add
repnz
inc
shrl
stos
lret
dec
sub
loop
into
bound
rorb
test
push
jne
aas
inc
fmul
sti
jo
jg
cld
or
int3
mov
loopne
sub
pop
sub
lret
mov
leave
iret
femms
ror
mov
aam
stos
lcall
cli
in
lods
out
push
lret
stos
xchg
add
ret
fsts
mov
push
add
push
mov
dec
fistpl
mov
mov
mov
xor
cmp
dec
or
out
jbe
sbb
mov
cmp
dec
cmp
ljmp
inc
in
das
sbb
insb
sub
mov
pusha
std
xchg
imul
and
xlat
sub
je
pop
xchg
mov
in
xchg
adc
nop
cmp
pop
lret
push
iret
out
mov
dec
or
jge
cmp
push
xchg
mov
adcl
inc
out
mov
cmp
out
jno
mov
push
pop
les
addr16
loope
inc
inc
stos
or
adc
icebp
mov
aad
sub
fidivrs
jae
aaa
cwtl
movsl
lods
in
dec
mov
mov
xor
fisttpll
loop
pop
mov
lods
xchg
std
or
lret
sub
insb
sub
xor
add
popa
inc
out
sub
mov
sti
cmp
movsl
mov
fs
addr16
out
push
mov
stos
mov
icebp
cmp
sub
sahf
stos
mov
cmp
sti
outsl
scas
mov
lods
test
sub
loopne
mov
mov
jb
leave
push
xlat
jno
imul
or
push
into
ds
mov
jle
jp
ljmp
testb
std
int3
pop
mov
jb
fildl
mov
pop
xchg
jb
sbb
fisubrl
jns
lods
or
jne
and
das
cmp
push
xor
in
fmuls
sbb
mov
aas
push
movsb
dec
iret
repnz
mov
fdivl
add
movb
add
mov
and
icebp
and
cmc
jmp
or
nop
mov
es
sub
enter
mov
adc
test
dec
dec
jge
jmp
mov
sarl
pop
fmul
add
mov
dec
jbe
dec
xchg
sarb
in
mov
pop
cwtl
sub
lock
lock
mov
mov
dec
ret
pop
lods
mov
call
xchg
mov
jg
pop
cmpl
xor
mov
sub
or
add
cld
push
and
and
enter
imul
cltd
xchg
inc
mov
lea
sub
mov
pop
roll
mov
sub
mov
imul
lahf
test
adc
jns
cmpsb
jle
push
gs
ficoml
jge
add
inc
mov
and
ss
aaa
jmp
push
aas
popa
jl
xchg
dec
icebp
fs
push
xchg
xor
mov
mov
mov
insb
jmp
clc
adc
and
cmp
push
jno
addr16
push
jg
inc
mov
jb
xchg
and
mov
out
mov
push
fsubrl
mov
fiadds
add
ret
xchg
fwait
js
leave
add
sub
push
enter
dec
popf
ficomps
sahf
mov
in
imul
dec
xchg
sub
mov
or
xchg
xbegin
sub
and
aam
push
test
xchg
mov
lahf
test
or
sarb
sub
fnstcw
cmp
mov
cmp
add
fwait
or
sub
outsb
lds
andps
aas
fnstcw
in
xor
imul
inc
fcomp
lock
mov
fwait
fst
or
std
mov
jo
jne
push
and
push
hlt
aas
jbe
sti
inc
subl
cmp
lods
imul
pop
inc
sbb
mov
in
push
push
daa
data16
xchg
dec
mov
pusha
stc
push
or
push
sbb
mov
jnp
call
inc
cs
adc
jae
adc
mov
and
pop
jne
sub
jb
popa
lcall
popa
test
xor
sbb
ja
mov
pop
fcomps
mul
jle
ret
leave
add
sbb
mov
pop
iret
jno
xor
in
dec
in
iret
cld
push
mov
mov
daa
sarb
cld
xlat
and
test
cmp
in
fcomip
jne
or
es
cmp
mov
outsl
scas
pop
cli
aaa
gs
xor
push
adc
int3
cwtl
int
dec
pop
les
xchg
lods
inc
push
mov
dec
sub
test
les
pop
push
adc
mov
inc
ss
push
xorb
loopne
cmp
cwtl
cmpsb
inc
cmp
rolb
aaa
div
lahf
cmp
loop
add
mov
fistpl
cmp
shrl
sbb
bnd
pop
jne
cmpsl
push
add
loope
imul
lret
push
sub
add
xlat
sbb
jl
repnz
jp
nop
fistpll
add
aam
sbb
mov
inc
call
add
push
sbb
sub
pusha
out
sub
or
sbb
pop
cmp
test
cmc
loope
adc
sbb
push
dec
fwait
ja
fnsave
les
add
into
fcmovnu
xchg
mov
xchg
mov
dec
dec
adc
mov
mov
out
lods
pop
xlat
lods
push
xchg
cld
cli
mov
les
and
xchg
mov
pop
pushf
sub
jmp
push
or
and
push
sbb
pop
arpl
xor
cmc
pop
or
lret
add
int
test
aam
push
ds
lea
adc
pop
xlat
rorl
shll
call
repz
jne
loope
nop
and
les
out
adc
dec
cmp
sti
inc
std
ss
inc
mov
adc
xchg
arpl
pop
xor
add
jmp
stc
stos
add
xchg
cmp
ljmp
std
pop
icebp
test
inc
stos
adc
nop
hlt
adc
dec
adc
bound
mov
fistps
addr16
sub
ljmp
xor
adc
mov
jne
lret
push
adc
jg
jg
add
andl
roll
shrl
int
push
mov
xchg
xchg
push
xor
add
cs
or
repz
popa
adc
xchg
pushw
outsb
pop
push
jge
mov
movsl
add
or
or
jnp
test
lret
jns
fstl
repnz
dec
dec
mov
dec
sub
lcall
cmp
xchg
xchg
cmpsl
ss
mov
mov
out
mov
mov
adc
popf
push
push
aam
cli
pusha
fidivrl
fstpl
add
hlt
fbstp
mov
inc
pop
shl
sub
xchg
and
pop
add
fs
push
aas
orw
cltd
je
enter
sbb
push
push
or
pop
arpl
idivb
insl
or
and
aad
mov
imul
js
aas
aam
push
pop
sbb
and
imul
pushf
xchg
mov
nop
insl
adc
push
pop
mov
push
imulb
push
push
push
inc
in
xchg
pushl
mov
or
loope
jp
mov
inc
mov
scas
xor
outsb
mov
jp
push
inc
out
add
outsl
cmpsl
inc
sub
cmp
xchg
in
jp
sub
add
in
pop
sub
mov
push
xchg
push
add
jne
fcomps
outsl
jl
lock
and
adc
push
jb
add
mov
lahf
or
add
dec
lret
push
shrb
ja
fistps
imul
push
dec
cli
in
cltd
pop
fmuls
mov
jecxz
test
imul
push
or
inc
pop
jae
dec
in
mov
int
xor
btr
adc
test
push
aad
and
mov
pop
stos
xorl
aaa
shll
mov
cmpsb
fdivrs
cmpb
arpl
cli
add
cmp
fsts
and
in
lods
fnstcw
mov
jb
daa
mov
mov
pop
out
jo
sti
xchg
xchg
es
lea
insl
pusha
mov
outsb
push
or
fdiv
dec
xchg
push
xor
addr16
stos
add
lea
fnstcw
sbb
dec
and
pop
jne
sub
push
ja
inc
mov
sub
sub
xor
xor
jnp
mov
and
inc
insb
mov
dec
fs
or
mov
jne
mov
push
mov
pop
ficomps
sub
add
mov
arpl
outsb
or
testl
pop
xchg
shll
imul
imul
jne
rolb
jae
popa
mov
adc
push
ds
cmc
mov
ficoms
sbb
inc
in
xchg
aaa
sub
imul
hlt
arpl
and
das
inc
cmp
sub
and
mov
shll
lods
inc
xchg
sub
inc
push
ja
adc
cwtl
and
mov
aam
adc
and
frstor
cmp
in
inc
ljmp
scas
loopne
jge
and
mov
aad
fsubr
sbb
xchg
inc
and
ret
pop
xchg
into
xchg
push
leave
mov
xor
mov
and
dec
test
cs
and
jp
jmp
ja
mov
sub
cmp
cmp
mov
fwait
daa
push
pop
test
lcall
inc
xchg
lock
mov
dec
outsb
mov
loopne
jge
cmpsl
xor
or
xor
mov
loopne
les
xor
sub
cmp
test
cmp
arpl
cwtl
mov
pop
jp
sahf
xor
add
pop
push
xor
sbb
or
jg
movsl
into
xchg
and
call
cmp
das
scas
sub
or
cmc
mov
loope
movsl
shlb
add
mov
xchg
push
xor
scas
aad
pop
pop
aad
test
sbb
push
fcmovnb
inc
mov
fstl
mov
push
fbld
or
xchg
das
cmp
std
lcall
sub
test
rol
outsl
adc
adc
cmp
pop
sbb
notl
add
xchg
mov
shll
dec
mov
int3
out
cwtl
icebp
inc
sbb
mov
cmp
sbb
mov
lock
test
dec
lds
int3
jg
add
int3
ret
cwtl
pop
out
pop
ret
test
add
orl
jbe
aad
icebp
mov
cli
leave
mov
scas
or
enter
ret
inc
in
dec
ds
cmp
mov
outsl
inc
lods
imul
push
jno
inc
sbb
mov
push
xchg
es
iret
aaa
in
sub
js
jb
mov
lcall
shll
or
and
xor
repnz
inc
xchg
ss
lea
pop
int
mov
imull
out
in
sub
cwtl
jae
ljmp
les
xchg
test
data16
ficompl
fldl2t
pushl
mov
inc
jne
lahf
mov
out
mov
mov
mov
cld
sbb
icebp
inc
cwtl
stc
les
fdivs
cmpsl
or
lahf
xor
dec
pop
loope
jge
dec
dec
lea
fisttps
or
in
and
std
cmp
and
add
and
and
daa
hlt
mov
scas
in
rclb
push
cmc
xor
adc
cmp
sub
popa
jp
imul
lret
subl
rcll
roll
mov
and
js
fnsave
lock
adc
sbb
js
ret
sub
jne
inc
dec
adc
sarb
mov
clc
sbb
jge
pop
faddp
loope
enter
push
lea
push
std
or
out
into
cld
popa
aas
pop
roll
addb
or
test
cmp
nop
in
and
xor
or
push
push
lods
push
mov
mov
jns
sarl
pop
repz
adc
add
lret
lock
daa
js
jmp
mov
nop
inc
andb
push
add
in
and
pop
sub
arpl
jg
ss
pop
popf
dec
nop
adc
inc
dec
ficoml
fcomp
xlat
data16
xchg
sub
pop
mov
lret
imul
fcos
ds
movsb
ds
in
sub
push
pop
pop
mov
push
mov
fisttpll
xor
cvtps2pd
pop
inc
aaa
xor
movsl
lock
mov
rorb
movsl
pop
sbb
and
fistps
stos
pop
xor
cmp
inc
xchg
jno
pmulhw
mov
xorb
mov
push
aam
fcoms
out
xor
testb
int
ret
test
and
push
aad
lahf
sbb
sub
sub
lock
inc
mov
sub
ret
mov
jbe
dec
mov
jo
adc
add
imul
mov
aad
add
sub
fs
xchg
adc
lods
shll
jnp
mov
lret
js
shlb
mov
ret
pop
or
ja
shll
mov
pop
popf
repnz
sub
inc
stc
mov
cmc
lods
lea
xchg
call
inc
jbe
fsubs
int3
push
cmp
aad
ljmp
cmovbe
mov
iret
sti
xor
orl
pop
lods
shl
xor
lds
in
fstpl
stos
fisubs
lahf
stc
cmpsl
mov
jnp
mov
jae
pop
xor
fwait
sbb
xchg
cwtl
or
repz
inc
out
adc
pop
ss
adc
cs
dec
call
mov
movsl
ja
pop
in
mov
push
cmp
ja
mov
push
mov
aam
rcr
lods
and
repnz
popa
pop
iret
and
and
bound
les
out
adc
adcl
jne
push
dec
les
push
ljmp
out
jg
aas
iret
rcrl
aas
ds
daa
and
and
jg
add
movsl
imul
add
inc
hlt
inc
out
inc
std
push
ficomps
das
shlb
stos
lret
jmp
out
in
jecxz
cltd
hlt
xor
inc
loope
out
inc
sbb
dec
push
clc
sub
int3
repz
sub
std
push
ljmp
test
pop
dec
sahf
or
jnp
pop
in
or
xchg
adc
adc
and
stos
movsb
push
push
pop
mov
sarl
das
addr16
leave
sarl
faddl
sub
add
adc
gs
fists
nop
sub
mov
pop
sbb
adc
pusha
cwtl
mov
add
or
dec
adc
push
popf
stos
mov
push
jp
lret
adc
adc
dec
movl
mull
rorb
daa
xor
loopne
push
jg
cmp
cmp
mov
repnz
shll
daa
or
xor
insl
lret
mov
or
stos
or
pop
and
in
jecxz
inc
nop
mov
dec
push
mov
adc
adc
mov
jp
mov
ja
icebp
repnz
sahf
cmp
push
and
add
les
mov
inc
push
inc
pop
mov
and
pop
dec
in
mov
jo
sub
data16
inc
sbb
int
xchg
int3
leave
jb
hlt
stos
push
dec
dec
out
and
cmc
in
dec
jmp
dec
rclb
aam
fisubs
aad
jno
into
mov
inc
xlat
sbb
sar
mov
dec
lds
mov
xchg
pop
mov
add
das
andb
vmovlpd
jns
sbbl
mov
sbb
or
in
shl
aad
xchg
addr16
in
push
push
pop
test
xor
lret
stc
sub
ret
push
jmp
pop
int
xchg
jg
popf
cltd
push
or
pop
fildll
sbb
xchg
shl
lods
jae
in
or
xchg
pusha
mov
cli
pop
push
add
dec
lock
dec
ljmp
push
mov
scas
sahf
into
decl
cmp
rol
fiadds
push
pushf
int3
test
idivl
jge
dec
nop
hlt
stos
sub
outsl
out
mov
xor
rcr
pop
enter
jns
cmp
sti
pop
repz
mov
je
int
xchg
and
jecxz
xchg
add
mov
dec
mov
pop
dec
mov
sbb
ljmp
cli
mov
pop
loope
sub
andb
shrl
repz
shr
pop
addr16
and
sub
pop
and
ret
dec
lds
out
adc
or
std
ss
test
aam
aas
aam
stc
popf
faddl
insl
add
xor
das
std
or
add
mov
pop
stc
fwait
xor
push
fs
jae
jmp
int3
sahf
sbb
fisttpll
cmpsb
aam
leave
lea
bound
sahf
xchg
dec
loope
adc
mov
push
std
fisttpll
jne
pop
ret
mov
pop
push
inc
sub
dec
arpl
ficompl
fs
fabs
pushf
cmpsb
inc
adc
orl
shr
sbb
add
icebp
rclb
mov
bound
mov
pop
lock
stos
fisttpl
push
jecxz
fstpl
sbb
jmp
cli
cli
ljmp
pop
shll
lock
aaa
lret
mov
sti
jno
out
sti
fwait
cmp
push
jno
sub
ljmp
cmpsl
xchg
push
pop
inc
lret
ss
or
mov
scas
orb
sbb
xchg
hlt
das
xor
mov
inc
fsubrp
mov
sarl
mov
fsubl
fisubs
clc
cmp
or
xchg
cs
mov
push
popf
lds
daa
shlb
sahf
jmp
push
pop
aam
enter
int
inc
adc
sti
test
adc
push
inc
outsl
rclb
jle
cli
xor
mov
mov
rorl
jae
xor
cltd
jl
mov
push
jl
xchg
mov
mov
movzwl
lea
push
jne
mov
out
outsb
mov
jmp
inc
icebp
orb
add
fs
lret
movsl
daa
inc
ficoms
test
add
repz
jp
pop
movsb
out
ficompl
test
iret
pop
into
dec
stos
mov
mov
jns
aas
mov
xlat
adc
xor
fsubl
sub
mov
mov
sarb
lock
mov
int3
out
pop
xchg
add
push
jb
test
push
stc
fldt
mov
xor
iret
sbb
mov
dec
into
icebp
int
or
jl
pushf
iret
imul
sub
inc
jp
scas
inc
sub
lock
inc
js
sbb
fwait
mov
negl
adcb
pushf
cmp
pop
inc
jo
lret
pop
push
jbe
scas
pop
dec
sbbb
mov
inc
dec
ss
ja
add
fsub
test
scas
pop
cmpsb
xchg
out
stos
xor
mov
rcrl
repz
lds
fildll
outsl
mov
adc
sbb
mov
icebp
xor
push
je
push
dec
sbb
add
push
fadd
mov
cld
xor
pop
hlt
nop
dec
shll
mov
xrelease
mov
xor
or
sub
sub
mov
pop
cs
sbb
popa
lahf
pop
repnz
jp
or
rcrb
dec
hlt
xchg
sbb
dec
add
mov
js
in
pop
cmp
insl
test
std
push
aaa
fsubrl
mov
cmp
add
daa
std
or
sbb
xor
in
push
mov
push
movsb
cmp
cmpb
fnsetpm(287
aam
shlb
xor
cmp
jp
pop
add
add
mov
inc
fs
int3
jns
add
sbbl
fisubl
push
gs
dec
in
shl
adc
pop
cs
stos
imul
mov
js
sbb
js
xchg
hlt
ret
fdivs
mov
or
btr
in
addr16
sbb
pop
adc
loope
add
mov
push
jecxz
out
pushf
sub
dec
pop
dec
push
pop
ret
sti
jge
fs
push
sub
pop
or
cmc
movb
out
cmp
nop
fisubl
sub
in
int
add
or
mov
and
fsubl
push
inc
rcll
pop
inc
pop
andl
adc
cmp
ljmp
dec
ljmp
mov
lret
sub
pop
scas
and
out
push
push
push
sbbl
or
jecxz
dec
add
test
dec
push
cltd
xchg
inc
je
out
push
rorl
adc
sbb
mov
xor
and
lds
jl
jae
mov
mov
scas
jnp
lret
leave
out
mull
jnp
cltd
movl
jg
push
mov
push
jle
cwtl
std
push
lock
iret
test
adc
mov
pushf
fnsave
sub
cmp
clc
cmp
mov
subb
xchg
add
pop
inc
out
sbb
add
jge
movsb
jl
xchg
inc
xchg
xchg
ja
pushf
mov
ljmp
aaa
orb
jge
sbb
and
ja
mov
mov
mov
and
inc
fistps
sbbl
ss
inc
sub
cvtpi2ps
cmp
pop
inc
nop
adc
gs
mov
test
je
enter
clc
add
lock
popa
inc
ljmp
ds
jne
push
leave
gs
movsl
inc
mov
add
cmp
subl
int
cltd
sbb
xchg
js
inc
ss
rcr
xor
das
push
pop
push
cltd
sub
movsb
cmp
es
pop
jns
aaa
fidivrl
xchg
repnz
xchg
cmp
push
jl
cmpl
cwtl
fs
scas
dec
idivl
lret
ljmp
pop
into
repnz
mov
es
pop
icebp
popa
mov
lcall
xor
movl
mov
int3
mov
dec
sub
lds
vpsubusb
xchg
les
js
and
ret
cmpsb
stos
jbe
mov
nop
popf
add
adc
sarb
push
mov
out
jo
iret
mov
pop
jecxz
pop
lahf
jmp
mov
int
loope
stc
mov
ror
popf
icebp
add
movsl
mov
mov
xor
mov
in
cli
push
pop
outsb
data16
testb
xchg
add
aad
ds
adc
or
lea
add
cmp
mov
xchg
cmp
inc
test
push
adc
pop
mov
fidivl
daa
push
mov
data16
hlt
or
inc
ret
pop
sbb
xchg
cmp
xchg
fcompl
test
cmp
loop
xor
shrb
bound
adc
movsb
xor
cmp
sbb
dec
loop
pop
imul
mov
fildll
js
sbb
mov
xchg
gs
sarl
ror
sub
stos
lods
push
jae
sahf
pop
clc
push
into
push
insb
add
xor
cli
jp
hlt
or
pop
sbb
mov
or
je
loopne
cmpsb
xchg
iret
xchg
mov
pop
jle
inc
fidivrl
subl
pop
xchg
xchg
mov
outsb
cli
xchg
sbb
cmp
mov
or
fcom
mov
cmpsl
std
mov
outsl
outsb
push
lock
out
adc
add
xor
insl
push
dec
xlat
inc
stos
cmp
mov
fwait
jmp
aad
push
rcll
adc
mov
fisttpll
stos
add
pop
jo
xchg
mov
inc
jno
mov
cmpsl
mov
ret
fidivrl
fsubr
sbb
cmpsb
aaa
push
in
dec
push
sbb
mov
sub
in
fistl
push
and
fnsave
fbstp
lcall
or
aaa
hlt
dec
pop
add
ret
and
lret
mov
int
sbb
sub
mov
add
dec
test
jno
stc
repz
rolb
sub
dec
mov
fldenv
ds
out
idivl
inc
push
into
fwait
push
sbb
dec
xor
push
jne
mov
enter
xor
push
mov
popa
dec
add
out
dec
cmpsl
scas
xchg
int
outsl
nop
scas
loop
sub
jae
mov
mov
push
fstps
pop
call
frstor
out
mov
push
sub
imul
lret
mov
mov
cmp
aad
dec
pop
inc
sbb
dec
and
cli
stos
test
fcom
push
stos
outsb
lret
out
mov
and
lcall
mov
inc
xor
arpl
mov
insb
lock
test
adc
aas
jns
fnstenv
popf
out
out
in
mov
arpl
scas
outsb
mov
sbbb
in
shll
outsb
subb
xlat
xor
or
arpl
es
arpl
orl
and
fimull
mov
cmp
sbb
mov
in
adc
or
push
sarl
call
enter
or
test
fs
mov
movsb
movsl
fstpl
lock
mov
pop
scas
mov
das
ss
and
lcall
add
jecxz
stc
mov
jo
nop
outsb
sbb
loope
mov
pusha
lahf
addb
mov
cld
cmpsb
or
push
out
add
jne
pop
out
into
fldl
ds
bound
outsb
fiadds
sub
jmp
out
xor
scas
adcl
adcb
lcall
mov
cmp
outsl
mov
enter
mov
mov
mov
outsl
cmp
stc
jo
in
cmp
rcll
das
movsb
scas
pop
xchg
pop
add
inc
hlt
outsb
or
dec
lahf
movsb
push
mov
fidivrl
jne
push
pop
or
daa
mov
nop
dec
fiadds
lods
push
leave
jne
lcall
xchg
bound
sti
mov
mov
and
ljmp
pop
in
daa
and
mov
shl
xor
cmp
mov
cld
ss
roll
loop
sub
jl
rcll
negl
addr16
xor
mov
push
inc
lret
add
dec
iret
and
imul
ljmp
mov
push
lods
or
addr16
in
mov
dec
pop
pop
sub
xchg
inc
test
clc
add
mov
dec
rorl
gs
dec
enter
outsb
xorb
fwait
repnz
add
ss
xchg
jne
gs
cmp
stc
push
pop
mov
std
add
jg,pn
and
test
js
or
jo
push
push
jp
fsubrl
pop
mov
add
add
inc
pop
jns
stos
jmp
cld
push
int
and
pop
clc
add
add
pop
out
cmp
test
imul
in
fisttps
incb
inc
xchg
aam
rclb
dec
and
aaa
shll
lahf
ret
cmp
add
and
les
adc
fidivrs
pop
daa
test
add
aad
push
mov
hlt
cs
sbb
mov
ret
inc
dec
sbb
ficoml
and
cmp
lret
aad
jl
mov
daa
fsubp
aad
pop
and
jns
das
push
shl
out
inc
cmc
mov
pop
jo
add
movsb
add
or
push
push
sti
addr16
or
out
jbe
cmp
jp
pop
mov
fbld
call
pop
enter
hlt
cmp
or
mov
push
lea
lods
or
jbe
pop
enter
jmp
push
add
jbe
test
out
xor
mov
adc
in
push
jge
cmp
mov
inc
in
jge
xchg
arpl
add
jp
addr16
test
cltd
sbb
add
and
pop
addr16
push
mov
ja
adc
mov
fwait
loop
rol
das
sbb
lods
inc
aaa
fisttps
cli
inc
gs
ret
test
ljmp
dec
nop
xchg
lock
mov
xchg
sub
incl
xchg
mov
cli
jg
cmpsb
push
xor
leave
ja
and
push
sbb
sbb
in
call
or
mov
xchg
push
push
pushf
add
pop
dec
jne
dec
and
jne
aad
sub
mov
ror
push
pop
push
ja
inc
xchg
xor
cmp
jge
cli
lahf
xorb
xor
mov
in
pop
enter
daa
mov
popa
pop
lods
out
pop
jns
add
mov
xor
cmp
movsl
mov
pop
mov
ret
imul
fmul
cltd
mov
dec
call
or
mov
divb
sub
cli
xor
sub
cmp
pusha
mov
bound
mov
icebp
outsl
and
push
or
call
addr16
test
xchg
mov
pop
cmp
adc
out
xchg
shlb
push
or
clc
scas
and
jecxz
or
add
pop
jns
frstor
sub
inc
push
mov
hlt
adc
scas
or
mull
shll
jge
mov
adc
xchg
add
xor
jl
sti
lahf
jns
add
insl
mov
lcall
sahf
mov
mov
out
sbb
mov
pop
fstp
mov
out
mov
mov
ljmp
bound
ret
mov
ds
mov
xchg
movsb
ds
les
sahf
push
test
dec
lret
inc
pushf
mov
cli
jmp
enter
push
test
sahf
mov
jl
pop
jbe
push
shr
mov
pop
mov
enter
inc
pop
pop
lcall
adc
les
sub
adc
daa
bound
loopne
xor
push
call
push
mov
push
sub
pop
or
cmc
jne
push
and
xchg
or
and
gs
xor
mov
xchg
jl
scas
jno
xor
outsl
test
test
ljmp
imul
xor
adc
insl
sbb
mov
xchg
lea
jb
ss
mov
jnp
or
mov
pop
dec
gs
push
out
sbbb
cmp
push
flds
gs
pop
jno
pop
push
in
add
and
aad
xor
inc
adc
pop
push
andl
xchg
rcr
inc
sti
inc
sahf
push
sbb
inc
sbb
xor
ja
xchg
rorb
and
xchg
in
cmpsb
add
or
or
ret
sar
push
adc
add
jno
bound
cmp
mov
mov
not
mov
xchg
out
cmp
repnz
xlat
xor
icebp
adc
mov
jnp
mull
mov
push
sbb
xlat
test
dec
push
jno
mov
xchg
cld
or
idiv
fcoml
jno
popa
pushf
lea
mov
jmp
test
mov
push
repnz
test
push
outsl
faddl
aam
pop
stos
jp
mov
xchg
or
icebp
mov
cmp
mov
mov
fwait
orb
test
cmpl
movsl
call
add
lock
and
adc
or
ret
repz
movsl
add
pop
mov
in
mov
ja
add
adc
imul
out
adc
xchg
inc
jo
or
xor
insb
outsl
xor
push
into
js
sbb
rorl
subl
mov
add
lods
cmpsb
btr
add
xor
push
andl
testl
sbb
and
sub
pop
stc
inc
adc
add
adcb
cld
and
pop
and
and
and
xor
lret
filds
mov
mov
push
adc
add
push
aad
sarl
inc
imul
ret
stos
xchg
xchg
mov
ret
jne
dec
addr16
pop
push
ja
addr16
sub
cltd
popf
lahf
out
mov
push
shrb
cmp
lods
lret
mov
dec
pop
stos
addr16
mov
add
xchg
in
cmc
push
push
cmp
sbb
icebp
pop
into
xchg
je
loopne
sub
xor
inc
pushf
mov
sub
jbe,pn
sub
enter
in
sbb
inc
cmc
and
es
popf
nop
fucom
pop
pop
adc
lret
addl
scas
cmp
addr16
imul
sahf
daa
in
adc
add
mov
push
rclb
mov
adc
add
dec
lods
inc
and
movsl
and
mov
stc
jl
lahf
leave
je
lods
das
jmp
addr16
add
aaa
out
mov
mov
xor
inc
mov
roll
xor
mov
rolb
push
pop
add
dec
mov
test
inc
mov
in
add
cli
nop
mov
xchg
jmp
mov
daa
add
fs
dec
adc
test
jg
hlt
mov
gs
cld
fisubrs
xor
out
push
das
addr16
cltd
lds
rorb
ja
mov
inc
push
add
jecxz
push
and
dec
xor
mov
shrb
outsl
into
shlb
fidivrs
stos
jle
mov
sub
push
mov
mov
and
pop
mov
fcomip
push
movsl
or
xchg
sub
lds
adc
add
gs
imul
and
add
add
ss
mov
jne
repnz
call
aas
jmp
xrelease
fsubrs
ret
mov
movsl
push
mov
push
mov
lods
in
sbb
fnstsw
lret
test
or
mov
xchg
sahf
adc
icebp
stos
add
inc
pushf
out
adc
mov
int3
ret
xchg
or
filds
std
ds
repz
leave
in
out
mov
inc
push
sbb
or
pop
mov
aad
cmpsb
enter
inc
mov
xchg
cmp
test
in
enter
mov
jmp
negl
jmp
or
add
movsl
pop
sub
rorl
pop
sahf
adc
pop
movsb
sbb
pop
test
cmp
je
pop
lcall
cwtl
pop
push
mov
loopne
popf
cmp
enter
int3
fs
cs
scas
clc
adc
lock
fwait
push
mov
inc
aad
xlat
lret
jecxz
sbb
pushl
js
jno
mov
inc
movsl
jae
mov
test
jne
xchg
lock
inc
and
aam
lahf
fwait
stc
stc
sub
lods
ds
in
cld
pop
pop
sbb
xor
pop
out
dec
cmpsl
sub
xchg
lods
cmp
push
insb
dec
lds
inc
adc
xchg
movsl
js
cmp
lea
and
decl
sahf
inc
stos
mov
les
or
pop
mov
adc
repz
or
insb
pop
xor
dec
xor
out
out
stos
dec
fwait
lret
adc
push
jmp
mov
xchg
sar
cmpsb
pop
imul
push
repnz
xor
mov
mov
cmp
lea
mov
mov
push
notl
mov
dec
movsl
jle
ljmp
aas
mov
mov
mov
mov
xchg
cwtl
cs
std
clc
cmp
jnp
fbld
loope
stc
or
test
sub
and
dec
lea
cs
lcall
cwtl
push
sahf
movsb
push
xchg
mov
mov
sub
lea
hlt
jge
cld
lds
lahf
or
inc
jnp
psadbw
or
xor
pushf
insb
outsl
mov
mov
mov
adc
mov
adc
outsb
cmp
mov
mov
xchg
imul
fidivs
fnstsw
mov
pop
and
in
add
fidivl
mov
sub
je
arpl
mov
sbb
sbb
jle
ja
call
repnz
mov
push
int3
mov
sub
and
dec
pop
leave
or
pop
repnz
ret
inc
lret
mov
xchg
notl
and
and
ds
or
mov
ret
pop
and
push
cmp
adc
es
inc
mov
das
and
pop
lods
sahf
pusha
stc
mov
out
cmpsl
rclb
mov
xlat
xor
loopne
mov
aad
je
jmp
jg
adc
cmpsl
pushf
fldl
aaa
in
shll
push
cmpsb
add
cmp
jp
popl
xchg
jge
or
xchg
and
pop
push
mov
xchg
jp
add
jno
mov
insb
or
ds
dec
rcrl
sbb
in
jae
pop
jl
incl
push
cli
test
imul
stos
push
push
test
fdivr
pop
cs
mov
and
mov
repz
or
mov
jb
les
in
push
push
dec
js
in
mov
jg
sar
sub
nop
inc
add
cmp
in
mov
push
fimull
add
sub
rep
cli
insb
fs
jp
adc
addr16
jmpw
stos
pop
adc
cmpsb
ret
ds
dec
mov
mov
xchg
or
jle
mov
inc
je
mov
inc
clc
jg
lods
mov
stos
jo
aas
cld
mov
pop
xor
inc
ret
shll
push
andl
mov
xchg
or
sar
js
outsb
xchg
xchg
xchg
ffreep
ficomps
xchg
rcrl
clc
pop
sbb
aam
daa
roll
jl
dec
pop
adc
xor
insb
xor
xor
jecxz
lahf
push
hlt
in
mov
inc
dec
or
jecxz
ljmp
rcrb
das
mov
xchg
loope
iret
shll
fiaddl
mov
adc
into
ret
mov
stos
jno
inc
add
sub
xchg
sub
cmc
ret
mov
int3
shrl
jmp
adc
test
scas
jmp
dec
out
les
into
insb
dec
sbb
mov
push
or
icebp
ffreep
hlt
pusha
xor
jb
lea
gs
or
xchg
lds
cmp
int3
xchg
dec
cmp
test
outsl
sbb
push
xchg
pop
mov
xor
pop
cmc
sbb
enter
scas
lods
ja
push
mov
rolb
or
cwtl
jge
fidivrs
push
dec
subb
rcrl
aaa
jae
adc
dec
rclb
mov
cmc
sbb
bound
pop
imul
jae
push
jne
dec
xchg
loop
mov
mov
xlat
pusha
out
das
mov
cmp
hlt
aas
or
inc
mov
aas
insb
call
test
insl
lods
stos
iret
jge
data16
xchg
js
cmc
jmp
xchg
xchg
inc
pusha
movsl
lock
das
xchg
jns
nop
int3
add
dec
or
test
pushf
cmp
popa
popf
sub
stos
idivb
cmpsl
dec
loopne
scas
nop
and
ja
mov
add
mov
hlt
adc
adc
in
outsb
adc
dec
jae
xor
mov
int
mov
ljmp
push
fcoms
aad
pop
lret
cli
rolb
test
repnz
insl
aam
xor
rclb
cmp
clc
fisubrs
out
sbb
push
mov
aam
add
orl
mov
and
inc
adc
fisttps
mov
mov
aad
and
add
and
jle
cmc
leave
addl
jne
sub
mov
mov
fidivs
xchg
popa
adc
mov
inc
push
outsl
add
gs
sarl
jmp
jbe
cli
push
data16
push
je
popf
push
lahf
jne
pop
or
repnz
lods
sub
xor
mov
in
sub
imul
push
in
out
mov
dec
enter
jbe
test
jne
jg
dec
pop
arpl
cli
lret
fadds
hlt
mov
mov
xorb
das
sub
pop
test
adc
jge
xchg
arpl
inc
fisubs
push
bound
push
mov
xor
lds
mov
fwait
push
push
fisubl
add
mov
xchg
push
xor
ret
loop
cmp
lds
jno
mov
inc
push
lcall
enter
sub
imul
jae
fsubrp
pop
insl
sbb
clc
mov
add
mov
xchg
jno
fs
jnp
add
pop
into
mov
jns
add
pop
fistpl
jp
jge
xchg
adc
fstl
xlat
popf
je
jl
in
pop
cmp
inc
int
pop
xchg
mov
add
fisubl
add
fistl
or
loop
add
ja
sub
iret
mov
int3
sahf
loopne
sub
sub
jb
xor
cmp
mov
jnp
and
pop
lret
out
push
add
mov
test
aam
cmp
out
dec
jecxz
rolb
jne
hlt
mov
jno
cli
fwait
cmc
jmp
inc
arpl
push
push
fsts
out
and
push
xor
clc
roll
inc
mov
mov
push
cld
loopne
jns
and
ljmp
mov
aaa
push
push
push
and
jge
or
cmpb
push
xchg
leave
scas
bound
addr16
sub
adc
mul
push
xchg
jno
ds
sbb
sbb
mov
fidivl
mov
addr16
iret
ds
rolb
sub
stos
inc
das
push
loopne
xor
ldmxcsr
ds
inc
sub
lods
inc
fcoml
sbb
push
sahf
dec
sub
adc
mov
fisubs
lret
jb
es
insl
jo
mov
in
sub
pushf
int3
xchg
cmp
xchg
cmp
popf
and
std
jp
cmpsb
fsub
and
test
jg
cmp
adc
cmp
and
jp
stos
mov
pusha
xchg
sbb
pop
leave
loopne
addr16
push
dec
daa
mov
and
sarb
cltd
add
cmp
xor
xor
cmp
mov
cltd
cmpsl
nop
lahf
icebp
mov
stos
mov
stos
pop
sub
pushw
xor
sti
movsb
fstpt
sti
je
sbb
stos
mov
lods
outsl
mov
lahf
add
mov
leave
or
call
push
push
and
orb
mov
sarl
cmc
mov
mov
push
jae
push
lahf
sub
sub
scas
les
mov
push
outsl
aas
lahf
call
or
jo
add
idivl
or
fsub
sahf
repz
pushf
adc
jo
ds
scas
icebp
pop
adc
cli
fisubl
pushl
sbb
jns
popl
jmp
pushf
sbb
cmp
xor
sbb
data16
sbbb
insb
movsb
mov
pop
lods
ret
or
fnstcw
mov
cmp
in
out
stos
lds
cwtl
shl
inc
into
jne
inc
idivb
xor
xchg
mov
or
xor
or
aas
xchg
jle
adc
imul
nop
nop
insb
es
data16
xor
sub
push
in
int
fadd
es
pop
adc
lret
sub
sahf
test
cmp
sti
insl
xchg
push
jecxz
ja
movsb
cwtl
loop
jae
rcrl
stc
xchg
andl
scas
push
and
push
bound
outsl
aaa
ljmp
out
sub
cmp
inc
es
cltd
add
pop
mov
inc
cmpb
cmp
js
insl
cmpsl
rcrl
leave
pop
in
or
xchg
mov
outsb
lret
xchg
mov
rcll
sbb
jg
add
fwait
sbb
ljmp
adc
inc
mov
mov
xor
adc
and
dec
sbb
imul
pop
int3
lods
out
cld
xchg
out
or
adc
leave
push
imulb
inc
shll
push
mov
cmp
xchg
stc
xor
test
in
aad
xor
adc
fstpl
cmp
push
fsubs
fcomps
sbb
xchg
popa
dec
and
dec
push
and
ja
xor
pop
shll
mov
out
dec
xchg
pushf
popf
xchg
xlat
dec
das
push
movsl
and
repz
test
insb
dec
es
aas
nop
loop
pop
cmpsl
insb
mov
xchg
scas
pop
nop
and
or
push
or
scas
pusha
cwtl
outsb
xchg
mov
or
xlat
jecxz
lahf
mov
ret
fstpt
adc
insl
pop
pop
arpl
call
popf
int
std
inc
cs
sti
fsubrp
or
jecxz
mov
inc
ljmp
icebp
mov
pop
mov
push
xchg
in
mov
pop
hlt
cmp
imul
push
pop
add
xchg
ss
ss
mov
xchg
add
jns
imul
fmul
stos
mov
loope
insl
adc
push
xchg
imul
int3
mov
dec
mov
repnz
sti
mov
xchg
mov
sub
adc
sub
or
mov
mov
cmp
mov
jge
dec
insb
push
xchg
sbb
in
divl
xchg
js
inc
or
and
arpl
dec
xchg
sbb
lfs
pop
dec
inc
cltd
and
js
in
idiv
add
pop
xchg
dec
inc
mov
mov
jo
shr
fcmovnbe
push
mov
mov
dec
out
pop
pop
cmp
rcrb
jmp
mov
fidivs
add
mov
in
sub
leave
lea
out
out
stos
lret
mov
rcrl
cmpsl
pop
dec
leave
mov
iret
mov
scas
std
pop
aam
xchg
mov
xor
imulb
ffree
ljmp
lahf
push
mov
pop
sub
out
out
test
jl
mov
ja
or
shll
imul
and
mov
or
pop
mov
xlat
lea
add
jmp
je
fdivr
push
mov
mov
jae
jle
ljmp
and
mov
sub
jo
lods
mov
inc
dec
jmp
mov
in
mov
and
xor
lock
aaa
mov
movsb
sub
inc
and
test
in
cmp
pop
push
fsubrl
aas
out
fs
add
mov
add
xor
std
xchg
mov
pusha
ror
fmull
lahf
call
and
adc
js
xor
daa
dec
push
mov
movsl
pusha
andl
sar
in
xchg
pushf
cmp
adc
rcrb
stos
mov
cltd
lret
lds
repnz
push
xchg
mov
ss
dec
push
in
mov
sbb
push
outsb
push
jae
lcall
and
mov
in
adc
outsb
pop
daa
ds
and
push
xchg
sub
enter
icebp
sbb
pusha
out
sahf
lods
cmpsl
push
mov
fisttpll
es
sub
mov
stos
lret
jl
lahf
fs
lahf
scas
lcall
sahf
adc
mov
frstor
daa
sahf
das
std
mov
xchg
imul
adc
and
dec
outsb
sub
fisubl
xor
jecxz
push
dec
jp
ss
insb
ja
addr16
xlat
jbe
int
mov
or
mov
leave
push
test
xlat
call
or
lds
ljmp
inc
mov
xorb
push
and
and
stos
xor
lahf
push
mov
les
push
cmp
andb
mov
sbb
aam
nop
stos
pop
std
les
ja
stc
scas
fs
jmp
movsl
popa
icebp
mov
lock
in
mov
out
test
lret
xor
call
sub
sub
rclb
cld
cwtl
shrb
mov
cld
repnz
ret
stos
inc
sub
mov
sbb
addr16
test
xor
outsl
nop
sbb
mov
mov
pop
rep
enter
jae
mov
daa
shlb
and
data16
popf
pop
pop
out
mov
sbbb
pop
aam
ret
sub
add
lds
pop
inc
outsl
fwait
aad
pop
sahf
lds
or
aaa
add
sub
xchg
add
out
popa
dec
push
fs
or
lret
scas
rorl
fmul
xchg
jge
out
adc
and
ss
push
cmpsb
pushf
mov
jg
fsub
mov
xor
aaa
out
test
adc
stc
pop
mov
ljmp
xchg
mov
and
push
sbb
push
mov
pop
jns
lret
fildll
jmp
dec
jp
pop
and
ret
jmp
imul
scas
inc
addr16
and
push
hlt
and
sbb
pop
pushf
cmp
xor
jae
inc
cli
gs
jb
lock
lcall
bnd
out
sti
fcmovne
lods
or
movl
sbb
sbb
mov
out
mov
sbb
movsl
je
jnp
mov
loopne
push
dec
dec
shrb
xor
cmp
adc
out
leave
lahf
nop
or
mov
jmp
outsl
jmp
nop
lea
or
icebp
movl
loop
in
or
mov
push
inc
fsts
xor
push
out
jmp
movsl
scas
nop
sbb
pop
orl
gs
dec
pushf
leave
cmp
sbb
adc
pusha
iret
xchg
or
jecxz
test
cwtl
pop
repnz
mov
push
sub
rorl
in
pop
loop
or
daa
mov
add
push
add
add
daa
add
stos
sub
ja
imul
pop
dec
adc
adc
mov
stos
sbb
aad
repz
push
inc
movsb
push
or
icebp
or
fiadds
dec
add
inc
mov
ds
push
jnp
inc
pop
jb
aas
mov
pop
test
fidivrs
movsb
imul
inc
les
fwait
pop
add
pop
push
pushf
lcall
mov
rorl
inc
ja
push
sahf
pop
int
inc
push
loop
jno
movsl
test
int3
test
add
add
enter
in
pop
fidivrs
jmp
xchg
mov
fwait
or
or
jmp
test
ljmp
adc
xchg
xchg
mov
mov
shlb
iret
in
fldenv
fsubp
mov
mov
inc
adc
dec
adc
out
cltd
pop
jnp
mov
lcall
cmp
pop
fisubrs
push
aad
mov
pop
add
jmp
pop
mov
and
pop
shr
insl
scas
xor
inc
pusha
mov
push
push
adc
test
mov
sbb
push
adc
or
outsl
xchg
pushf
test
data16
jmp
jne
jg
push
repz
lea
repz
and
not
mov
mov
aas
cmp
cmp
pop
mov
imul
fwait
cmc
ja
xchg
out
lock
mov
outsl
fld
pop
xchg
fisttps
or
mov
inc
mov
inc
mov
push
nop
pop
jns
sbb
cmp
iret
jne
adc
xchg
add
sub
mov
pop
push
inc
add
jno
lock
xchg
lock
mov
xor
xchg
mov
ja
inc
gs
dec
cmp
jge
cmp
sbb
jecxz
sub
outsl
xchg
pop
enter
mov
cwtl
cmp
xchg
or
hlt
lds
dec
mov
sub
icebp
lea
out
push
sbbl
sbb
lods
jo
jge
scas
out
jg
dec
test
inc
test
xor
pop
mov
fisubs
inc
jl
mov
jnp
rorb
sbb
fsubl
rcrb
mov
xor
mov
mov
mov
sub
sarl
dec
mov
movl
pop
jb
pop
inc
fldl
pop
push
lcall
into
lock
push
nop
bound
jp
test
add
cmp
push
test
imul
lea
adc
daa
idivl
mov
xor
sahf
mov
inc
push
scas
movsl
aad
xchg
sbb
and
push
in
cmp
cmpsl
sub
xchg
inc
fimull
adc
push
xchg
imul
jnp
adc
push
jmp
add
inc
out
test
mov
int
adc
fst
rol
rolb
roll
or
cmpsb
mov
adc
aam
loopne
xor
push
pop
mov
pusha
jns
xchg
lcall
xchg
in
in
sub
in
jle
lret
push
push
ljmp
xchg
jg
mov
movsb
mov
fs
cwtl
outsb
push
inc
mov
pop
inc
pop
insl
push
and
addr16
mov
mov
scas
cmp
inc
iret
jns
adc
pop
cltd
int3
push
push
add
in
xchg
into
test
xorb
dec
divb
and
dec
sbb
fsubrl
inc
in
lcall
in
sub
xchg
cli
stc
fldl
jmp
frstpm(287
dec
or
test
lea
outsl
push
stc
loope
sub
popf
push
push
add
sbb
daa
je
jg
push
add
inc
or
sbb
out
jp
cmp
mov
mov
xchg
cmp
mov
loop
fs
push
mov
nop
jnp
jecxz
pop
out
pop
lea
test
aaa
int
mov
aas
mov
aad
and
push
jle
dec
clc
lock
out
push
sbb
je
cmc
fcomps
gs
cmp
loope
aam
into
push
jbe
ja
lds
cltd
dec
pop
mov
jg
ret
mov
mov
jne
insb
mov
mov
or
dec
dec
mov
je
test
add
dec
lcall
aas
call
testl
mov
cmp
jge
jno
repnz
mov
out
divl
jecxz
fimull
ljmp
mov
lds
aaa
push
inc
fs
jo
out
cmpsb
les
mov
push
pop
xor
cli
ret
loopne
dec
jne
mov
mov
adc
inc
out
repnz
aas
les
repz
sti
out
call
sbb
cs
repnz
or
ss
dec
mov
ficoms
idivb
xor
ja
sub
shrl
out
lock
in
push
loop
imul
stos
jb
in
sbb
jo
xor
xor
cmp
sub
cwtl
jbe
pop
sbb
scas
lock
fldl
notl
jl
ret
in
push
lcall
stos
out
or
stos
push
movsb
pop
lds
pop
ds
mov
xor
pop
fnstsw
int3
cwtl
jb
push
dec
out
xchg
mov
push
pop
call
adc
outsb
sbb
or
scas
push
data16
lock
jmp
mov
adc
outsb
outsl
mov
cmp
pop
mov
and
mov
inc
push
push
scas
adc
sub
js
push
icebp
mov
jg
js,pt
xchg
push
cmp
mov
mov
adc
and
mov
test
dec
mov
lret
or
pop
xor
and
into
insb
std
pop
subl
pusha
dec
cmpsb
push
sub
jge
dec
jbe
cmp
sti
in
stos
push
push
push
lods
subb
ja
arpl
in
adc
pop
pop
sub
push
dec
adc
push
or
push
pop
push
dec
mov
jge
xlat
inc
outsl
cmp
out
push
sbb
fisubrl
cmp
jb
xor
aaa
cmp
out
mov
cltd
jg
add
call
les
shlb
repnz
in
test
mov
jecxz
repnz
mov
outsb
adc
jecxz
jle
enter
out
fsubr
int3
lcall
mov
repnz
sub
insl
jmp
mov
fsubrl
jno
ret
bound
push
pop
repnz
mov
add
fcoms
push
sbb
jbe
or
dec
sbb
pop
push
mov
sbb
fstpt
cld
sbb
std
daa
dec
mov
cmp
leave
inc
outsb
in
mov
push
or
or
dec
jbe
rolb
jbe
push
push
xor
loopne
bound
jle
shlb
dec
hlt
xor
mov
loop
fadds
and
fmulp
or
mov
jne
dec
shrl
jmp
push
adc
jne
lret
xor
lret
lahf
xlat
cmc
aad
mov
mov
mov
loop
xor
and
rcll
mov
inc
xchg
pop
out
adc
xchg
and
mov
loope
cmpps
dec
inc
xchg
xor
mov
inc
push
bound
pop
mov
pop
adc
or
pusha
dec
xor
scas
jmp
iret
push
sarb
shrb
mov
xor
xchg
mov
sub
ljmp
test
iret
orb
adc
shr
shl
push
movsb
cmp
xchg
mov
or
fldenv
mov
outsb
adc
movl
inc
pop
pextrw
sbb
arpl
lret
cltd
call
loope
sub
in
and
aas
adc
aam
pop
or
jecxz
iret
stc
and
test
cli
inc
xchg
aad
imulb
ret
xchg
or
xchg
addr16
dec
ds
xchg
sbb
ljmp
cltd
inc
mov
sub
lahf
xchg
into
pop
rcrb
pop
inc
fstpl
outsb
shrb
es
ret
jne
or
rclb
nop
rclb
les
and
mov
xchg
xor
fisubrl
jecxz
hlt
test
push
outsb
sbb
sbb
xor
outsl
aas
fs
adc
cmp
insl
pop
and
mov
inc
jp
test
xchg
les
pop
fsts
sbb
mov
std
xchg
testb
mov
push
adc
lods
out
mov
in
sub
pop
loope
mov
add
push
dec
jns
leave
inc
pop
lahf
xchg
les
jmp
push
in
or
sub
mov
cmp
inc
test
dec
jmp
shll
sub
adc
outsb
loopne
inc
pop
je
shrl
pop
dec
dec
ljmp
pusha
int
pop
daa
pop
fcomi
mov
lret
jmp
mov
mov
inc
push
movsl
stc
gs
xor
inc
sbb
jne
fidivrs
cmp
jo
mov
int3
repz
dec
maxps
push
fbld
mov
and
xchg
clc
inc
xchg
andl
arpl
mov
jg
popa
in
xor
icebp
xor
push
pushf
mov
xor
lahf
push
js
lods
aas
adcl
or
lret
push
push
aas
cltd
lock
jmp
leave
fbstp
dec
push
mov
fs
and
add
push
dec
sbb
cmpsb
jb
cmp
mov
adc
out
xchg
sahf
jbe
add
or
insb
mov
jae
pop
mov
inc
push
pop
shrb
jbe
pop
mov
add
je
std
jns
shlb
inc
in
add
sbb
orl
mov
lods
lret
mov
je
cmpsb
repnz
js
push
stos
add
push
dec
stos
cmp
xor
pop
mov
ss
dec
cld
adc
fwait
cmp
stc
fwait
sub
dec
lock
gs
add
test
inc
adc
imul
inc
sub
out
insb
ds
xlat
mov
xor
inc
or
or
outsl
adc
dec
and
repz
iret
push
popa
pop
push
bound
xor
and
pushf
lcall
mov
inc
rorb
out
test
aas
inc
movsl
out
shll
mov
mov
divl
dec
shll
xor
ss
sti
arpl
mov
hlt
dec
jbe
movsb
jno
pusha
outsb
mov
adc
test
pop
push
pusha
or
jns
fs
pop
dec
data16
push
fimuls
ret
rclb
mov
adc
fcompl
test
xor
cmc
sbb
add
push
mov
pop
and
lea
fiaddl
mov
jbe
es
jmp
sub
sub
ss
fisubrl
test
xchg
adc
rcl
pop
out
mov
popl
push
daa
dec
adc
adc
repz
sub
mov
adc
imul
jns
mov
xchg
data16
fdiv
pop
int
cmp
xor
daa
or
lock
sub
shll
xchg
cmpsb
idivl
pop
out
fiaddl
sub
js
mov
int
imulb
nop
cmpsb
sub
rorl
lds
mov
mov
push
sub
in
sub
ficoml
sbb
in
rolb
mov
and
out
push
push
sub
and
in
cmp
cld
jno
add
xchg
or
into
adc
push
popa
xor
lods
repz
punpckhwd
popf
mov
inc
test
pop
push
push
inc
pop
std
mov
pop
pop
int
in
sbb
stos
push
or
mov
aaa
outsb
lock
pop
js
jnp
rcll
sub
enter
scas
mov
cltd
mov
out
xor
adc
leave
ss
icebp
notl
adc
in
insb
test
lret
xlat
jbe
push
push
test
mov
cltd
mov
jo
pop
sbb
cmpl
adc
mov
loope
lds
mov
add
frstor
push
test
mov
jnp
cs
jmp
cwtl
and
jle
or
rol
xor
rcrb
jl
pop
movsb
leave
mov
imul
jbe
shlb
mov
mov
mov
sbb
iret
out
and
sbb
push
flds
sbb
or
rcl
aaa
out
and
gs
sub
imul
jmp
testl
pop
or
sahf
shrb
mov
pop
mov
and
cmp
leave
push
pop
aas
adc
cmp
outsb
movsb
jge
sahf
mov
xchg
mov
push
hlt
sub
push
jg
mov
sbb
inc
cs
push
mov
xchg
lea
stos
xor
test
xchg
mov
or
mov
jg
adc
jg
lea
and
inc
cmp
xor
mov
pop
es
xchg
lods
xchg
mov
sub
stos
mov
pop
sbb
add
cmp
test
jecxz
mov
icebp
sbb
sbb
rol
popa
aad
gs
mov
leave
sbbb
or
pushl
mov
or
popl
cwtl
and
sbb
dec
out
cmp
xchg
fistps
mov
ljmp
sbb
or
xor
cmpl
push
ljmp
out
jnp
mov
pop
cmp
inc
hlt
mov
sbb
aaa
pop
jne
mov
push
push
pop
push
jne
adc
test
and
insb
insb
insl
imull
lret
fs
outsb
rclb
dec
in
cmp
inc
sub
add
xor
sub
or
adc
mov
sub
xchg
jne
sbb
adc
xor
cmp
les
jno
jl
pop
xchg
loop
xchg
enter
cmp
mov
std
mov
mov
sarb
js
in
jle
and
imul
mov
dec
adc
leave
mov
mov
icebp
dec
mov
push
sti
xchg
fwait
cltd
push
popa
xor
adc
mov
das
adc
sbbb
xchg
mov
xor
shlb
fimull
enter
sarb
xchg
lds
stos
movsb
imul
in
pushf
push
icebp
cmp
ss
pop
dec
xor
shrl
inc
flds
push
dec
jle
testl
cmc
stos
xor
cld
test
cmp
pop
loopne
or
das
lcall
stos
shlb
popf
cwtl
js
call
mov
adc
icebp
or
aad
popaw
add
xchg
movl
adc
or
sub
xchg
sub
repz
movsb
sti
ljmp
rclb
shl
cltd
and
call
fdivrl
jne
mov
ret
add
push
paddw
jg
rcrl
adc
jmp
mov
movsl
cs
jg
popa
repnz
jnp
sbb
mov
jbe
shrb
push
or
pushf
les
fdivrl
sub
imul
in
mov
inc
cmp
out
sub
and
addr16
in
cs
add
pop
mov
pop
shl
outsb
push
stc
cld
pop
cmp
push
jmp
test
mov
mov
rol
or
test
xchg
mov
into
cmpsl
push
cmp
sub
xchg
cmpl
outsb
pop
adc
jb
lock
push
lock
pop
mov
imul
mov
test
jno
push
inc
ja
fistl
dec
xchg
cmpsb
and
jp
imul
stos
mov
pop
test
lods
inc
xor
subl
aad
inc
loop
aas
popa
xor
fs
loopne
imul
repz
ja
push
pop
dec
ljmp
aaa
fisubl
pop
mov
rolb
sbb
js
xor
inc
clc
test
mov
test
lret
insl
xor
mov
sbb
adc
das
call
dec
mov
ret
int3
jns
mov
jo
sbb
adc
pop
stos
dec
popl
imul
out
ficoms
mov
aas
stc
pop
cmp
or
in
jge
insl
unpckhps
push
add
jecxz
das
sub
mov
cwtl
or
dec
scas
cmp
xchg
cld
dec
scas
jmp
xlat
ja
stos
loop
aad
pop
adc
test
xor
cwtl
jae
inc
aas
cmpsb
cmpsb
xlat
sub
or
aad
mov
fsubrl
popf
adc
mov
addl
fwait
dec
mov
cmpsl
xor
push
fistpll
push
testl
clc
inc
push
dec
jmp
or
xchg
pop
add
xchg
cmpsb
mov
fmull
xorb
xor
mov
cwtl
jge
cmpsl
and
inc
add
in
mov
sub
mov
xor
popa
int
push
cli
adc
stos
adc
test
xlat
sbb
pop
mov
idiv
repz
or
xor
clc
dec
jnp
popa
push
cmpsb
jne
bound
loop
fists
test
imul
scas
cmp
fiadds
and
out
ljmp
inc
jbe
hlt
sub
xchg
clc
push
mov
sub
fiadds
pop
cmp
pop
jns
adc
inc
mov
and
add
mov
mov
pop
add
cmp
xchg
lods
negl
imul
mov
repnz
stos
shll
push
sbb
jb
popa
xchg
xor
lcall
jae
xor
mov
cmpsl
mov
or
into
sahf
rcr
dec
notl
xor
sbb
or
sahf
nop
ja
lea
add
fisttpll
adc
xchg
cmpsl
addl
inc
testb
mov
fsubs
jns
cmpsl
and
les
jbe
cmp
xor
xchg
pop
fimuls
xor
add
add
cwtl
dec
pusha
lds
fstpl
ja
rcll
push
sub
cs
jbe
sbb
add
arpl
inc
adc
jns
cli
rdmsr
add
hlt
cld
or
inc
subl
or
xor
cld
adc
es
lods
std
iret
sti
push
cmp
pop
hlt
sbbl
stc
pop
pop
and
xchg
nop
clc
xchg
in
push
push
test
arpl
test
cmp
jmp
das
int
pop
jbe
mov
fildl
xor
and
fdivrs
loopne
sbb
mov
mov
das
hlt
pop
and
ljmp
pop
sbb
xchg
cld
sub
scas
dec
iret
insl
xor
sub
movsb
dec
into
dec
fldcw
ss
push
loop
push
pop
jl
and
bound
clc
addr16
mov
adc
fistl
insl
fidivrs
fs
fidivrl
add
hlt
lahf
pop
or
cmp
jmp
ret
test
dec
mov
clc
das
dec
pop
mov
jae
pop
xor
sub
pushf
cmc
lcall
mov
add
test
cmpsl
jb,pt
mov
rcr
lods
mov
pop
or
pop
scas
shrb
mov
jg
jg
add
js
mov
mov
aaa
cmp
mov
cmpsl
and
lock
jb
icebp
xor
icebp
imul
xchg
cmpsb
xor
adc
inc
int3
add
jp
mov
rolb
sub
cmc
xor
jge
xor
jne
jle
cmc
xor
push
add
xchg
push
dec
sub
jns
fnsetpm(287
sbb
jns
pop
jmp
xor
into
cmc
add
xlat
mov
shr
into
inc
sbb
mov
pop
insl
fisubs
aad
add
mov
lahf
cmc
movsl
add
fistpl
lods
add
sub
mov
rol
dec
push
push
mov
sub
lods
pop
jae
xor
jg
sti
cwtl
aas
mov
or
mov
mov
or
test
xchg
int
push
addr16
adc
cwtl
xor
rcl
mov
push
sub
in
lock
ficompl
dec
ljmp
insl
add
sbb
add
scas
mov
test
in
dec
fwait
push
adc
sub
pop
adc
sahf
or
mov
xor
xchg
jbe
test
sub
ret
aas
xchg
hlt
lahf
mov
stc
pop
in
roll
push
ret
cltd
lea
adc
mov
nop
inc
shrl
je
out
dec
mov
cmpsl
mov
xor
mov
into
aas
pop
gs
add
jnp
cmp
xlat
jb
iret
fnstenv
mov
rolb
add
cld
or
ljmp
fldcw
andb
repnz
inc
aaa
cmp
push
lods
hlt
fildll
pop
stos
xor
cmc
cs
mov
dec
loope
inc
fstpl
shlb
dec
lcall
sub
popf
orb
scas
jnp
add
in
ror
and
sub
sub
popa
mov
int3
xchg
push
add
pusha
test
mov
test
adc
sub
inc
mov
or
nop
mov
imul
loope
mov
jns,pt
ret
mov
jmp
sub
lds
cmp
repz
xchg
sbb
outsl
mov
sbb
es
scas
jo
adc
jle
and
rsm
push
outsl
addr16
loopne
cmp
xchg
out
sbb
inc
outsl
push
test
and
jl
cwtl
jecxz
jl
jl
movsl
mov
arpl
hlt
js
loopne
sub
sub
sub
jg
xchg
jmp
addps
stos
adc
hlt
push
inc
inc
pop
mov
push
fs
push
test
pop
sahf
sbb
or
and
push
pushf
add
dec
mov
popf
lret
and
dec
mov
inc
mov
aam
fyl2xp1
jbe
adc
jae
jo
sbb
sbb
enter
jns
loopne
push
das
xor
dec
inc
mov
inc
push
cmp
lcall
lahf
in
test
push
pop
cmp
and
cmc
in
fidivl
test
xor
mov
mov
fdivrs
and
xor
dec
cld
xchg
and
sbb
mov
outsb
iret
inc
addr16
and
subl
cli
shrb
and
mov
fwait
sub
add
lcall
push
pop
mov
sub
popf
cmp
and
je
pop
mov
xchg
sbb
ss
jle
pop
push
xchg
mov
repz
cmpsb
insl
mov
pop
add
jbe
xchg
jo
xchg
sti
mov
rorl
dec
out
sbb
movsl
fnstsw
je
imul
jno
xor
mov
icebp
roll
cmc
loope
sarl
jae
pop
js
push
scas
bound
popf
push
psubusw
sub
xor
dec
aas
mov
sbb
outsb
add
or
fcomi
je
scas
push
xchg
xchg
in
mov
add
les
mov
ja
pop
and
and
cmp
mov
inc
stc
sub
loopne
jne
cmp
push
xor
jns
ret
xchg
add
jle
mov
push
cmp
mulb
push
push
xor
cli
sahf
shl
or
mov
lock
mov
and
push
js
sub
xchg
in
mov
sbb
push
loop
idivb
lods
xor
xor
xchg
mov
sub
into
mov
or
jbe
cmpsl
lret
inc
test
mov
pop
testl
fldl
pushf
test
mov
sbb
mov
cmp
test
outsb
and
add
sub
pop
aaa
mov
cmp
mov
jbe
ljmp
int
lahf
fisubrs
arpl
shlb
jnp
in
in
test
push
lds
lock
push
ljmp
xor
dec
adc
mov
rcr
mov
sbb
outsb
dec
imul
sbbl
sub
sub
cltd
or
das
pop
divl
push
in
popa
pop
inc
adc
std
mov
sahf
mov
mov
sub
pop
out
jns
in
pop
push
add
iret
push
mov
push
fwait
js
pusha
sub
cmp
adc
dec
loopne
mov
inc
adc
add
cltd
fisttps
int3
jns
lods
stos
fwait
mov
iret
add
movsb
repnz
in
jg
mov
iret
fs
adc
pop
or
sub
mov
mov
push
fldenv
outsl
mov
incl
and
jnp
pop
lret
and
sbb
jo
cmp
sbb
jp
cmp
arpl
sti
movsb
pop
sbb
dec
fsubp
cmpsb
sti
and
mov
in
int3
enter
stos
push
add
push
faddp
lds
cmpl
mov
movl
xchg
lcall
testb
jle
clc
push
mov
inc
imull
cmc
mov
es
sbb
out
gs
rorb
rorb
sahf
popf
mov
call
sbb
mov
sub
xchg
cmpsl
and
out
cmpsl
mov
ja
mov
cltd
jg
push
mov
pop
ds
jl
out
jo
xor
adcl
push
adc
and
pusha
cmc
pop
icebp
popf
mov
nop
add
and
inc
sub
fcmovnb
mov
je
push
ret
xor
mov
das
sub
sarl
sbb
imul
or
pop
sbb
orb
test
scas
sub
aas
aas
or
mov
add
popf
add
shlb
subb
dec
lods
or
adc
mov
js
test
mov
jnp
pop
mov
inc
mov
mov
clc
insb
jo
fcomps
iret
es
aaa
pop
roll
fcoml
and
xchg
add
lret
cmp
or
inc
push
ja
cmp
rcl
mov
fbld
rclb
loopne
test
cwtl
sbb
adc
fxtract
xor
or
insl
test
popa
xor
imul
leave
lods
xor
movsb
loop
pop
mov
push
adc
shlb
cmpb
js
pop
pop
in
push
loopne
ret
adc
jbe
leave
sbbl
cli
jb
jno
cld
push
jmp
aas
xor
mov
cmp
xchg
into
aaa
and
adc
add
icebp
jle
sbb
stc
push
repz
adc
test
lahf
dec
inc
or
popa
adc
or
rorb
pop
rcl
adc
insb
sub
add
xorb
cmpl
xor
and
lahf
jbe
and
std
popf
fisubl
lcall
xchg
imul
inc
cli
pop
fdivrl
dec
fsubr
cmpsl
push
in
fcomi
pop
mov
ffreep
jle
lods
das
lods
cmp
sub
sbb
lock
cmpl
xchg
jo
fs
push
je
xchg
ret
xchg
inc
test
cmp
stos
enter
dec
ficomps
cmp
cmpl
jnp
lock
mov
out
xchg
outsb
gs
ficomps
dec
nop
imul
test
test
mov
jno
stos
inc
imul
inc
sbbl
cmp
outsb
pop
or
mov
gs
jns
push
mov
push
cmp
xchg
add
mov
add
push
aam
fisttpll
lock
jbe
push
sub
leave
movsb
cs
ljmp
lds
xchg
mov
into
mov
stos
mov
decb
xor
mov
or
out
ss
das
aas
sarb
jle
cmp
sbb
in
sbb
push
cmp
ja
push
sub
inc
je
jle
int
addr16
sti
jge
sbb
push
fsts
mov
add
and
aaa
cmp
xchg
gs
test
pop
dec
out
dec
sbb
or
icebp
mov
pop
cld
js
pop
shl
outsl
push
pop
pop
xor
cmp
leave
loop
sti
pop
insb
ja
nop
gs
icebp
fcomp
xchg
lods
xor
cmp
push
cmc
imulb
lods
ss
cmp
daa
mov
adc
mov
adc
sbb
pop
cmc
cmp
in
xchg
dec
dec
je
push
jmp
adc
test
dec
arpl
push
notl
ret
int
nop
mov
icebp
lcall
sarb
ror
adc
push
or
in
xchg
lret
push
lret
sub
push
sahf
lock
lahf
mov
pop
lret
popf
hlt
pop
add
jne
scas
or
insl
ss
test
scas
insb
xchg
cmpsl
add
inc
outsb
bound
and
adc
mov
sub
inc
sarb
xchg
xchg
push
inc
jg
into
inc
sbb
cmp
stos
xchg
dec
xor
sub
mov
nop
lock
inc
in
push
stos
pop
and
hlt
sub
arpl
or
pop
das
aam
mov
sub
xchg
pop
popf
cmpb
xor
adc
mov
sbb
sbb
mov
sub
and
xchg
rorl
jae
push
inc
aam
pop
decb
xor
icebp
insb
inc
and
push
mov
or
push
and
mov
jmp
out
xchg
adc
ret
idivl
je
cmc
rcrb
mov
out
rorb
iret
pop
jb
ss
pop
mov
in
ss
cltd
bound
mov
subb
enter
jnp
sub
add
sbb
mov
dec
sbb
push
jge
inc
ss
mov
xorb
pop
push
sbb
aad
nop
repz
pop
sub
sub
inc
push
pop
sbbb
mov
loop
and
ret
clc
int3
and
mov
cwtl
sbb
ljmp
cmp
shll
pop
cmp
and
or
pop
push
jne
stos
movsb
xchg
mov
xor
mov
and
sub
adc
divb
dec
add
dec
mov
jge
pop
daa
mov
mov
pop
inc
sub
cmp
mov
repnz
push
add
lret
pop
shll
fisttpll
cmp
dec
sub
mov
pop
jno
cmp
push
jo
cmpxchg
push
mov
mov
jb
int
scas
ficomps
inc
jns
jne
xor
mov
push
or
xor
inc
out
pusha
dec
mov
lahf
shlb
inc
ret
inc
push
les
cmpb
aad
ss
jl
push
and
sbb
pushf
pop
sbb
dec
idivb
clc
and
out
xchg
pop
jg
in
push
add
aaa
cltd
sub
pop
lcall
xchg
lods
jne
ss
xor
shl
mov
ret
add
pop
int
enter
mov
repz
pop
xchg
mov
nop
dec
push
jnp
cmp
ja
movsb
arpl
xor
or
iret
add
push
arpl
sbb
push
in
dec
adc
sti
stc
sahf
mov
popf
leave
and
push
or
add
ljmp
aas
xchg
imul
popa
sbb
in
rorl
or
pop
sub
or
mov
cltd
pushf
shl
mov
inc
out
push
lcall
inc
xchg
pop
insb
jbe
add
lret
ss
sbb
addr16
lret
imul
inc
sbb
cmpsl
sbb
inc
adc
xchg
fs
enter
mov
enter
sub
xor
ds
mov
and
addr16
lea
out
mov
in
push
loopne
data16
sahf
push
xor
push
sub
mov
push
pop
xor
mov
mov
test
jo
and
mov
mov
xor
pop
mov
sub
cmp
aas
daa
movups
out
loopne
ret
jle
scas
pop
out
mov
push
cmp
addr16
add
call
out
mov
cwtl
xor
test
adc
mov
inc
std
out
jo
aaa
sbb
and
pusha
pop
sbbl
fdivs
inc
hlt
push
lret
iret
xor
ret
imull
mov
popa
repnz
fisubs
incb
stc
jp
scas
push
and
jmp
lret
xchg
mov
add
out
loop
push
lock
push
adcl
mov
push
xor
cmpsl
cmp
daa
cmp
xchg
inc
add
sbb
lea
mov
popf
or
mov
sub
mov
cmpsl
fs
scas
adc
dec
dec
cmp
and
popa
adc
pop
cmpsl
xlat
je
mov
pop
addb
dec
add
dec
sub
inc
mov
stos
out
hlt
mov
or
int3
add
adc
imul
adc
dec
ja
fcompl
in
xchg
lods
xchg
int
scas
popa
and
js
mov
faddl
adc
sbb
scas
or
pop
inc
ret
push
push
sbb
daa
je
dec
loop
loope
xchg
stos
add
cld
addr16
jmp
adc
adc
cmpsl
inc
dec
stos
mov
mov
fisttpll
aam
push
hlt
dec
out
mov
loop
aad
dec
sbb
cli
mov
ret
popa
jp
inc
jecxz
nop
mov
mov
push
addr16
mov
fwait
sub
dec
adc
mov
lret
popa
mov
add
rcrb
inc
lahf
sub
movsb
fildll
pop
mov
push
xorl
jo
jl
jp
mov
test
in
push
cmpsl
and
jno
icebp
sti
sbb
add
rcll
lahf
pop
jle
push
jne
pmaddwd
cltd
cmp
repnz
xor
pop
aaa
jmp
mov
pusha
bound
xchg
mov
sahf
mov
cmpsb
cmp
pushf
mov
rclb
inc
in
lahf
xchg
das
and
cmp
imul
xchg
mov
lods
test
int3
arpl
test
pop
lahf
cmp
cmp
jp
rclb
xor
pop
out
mov
pop
adc
push
cwtl
mov
aas
xor
or
popf
push
es
mov
cli
aam
imul
push
jns
dec
adc
or
or
dec
or
sub
outsl
lods
mov
jmp
fcompl
and
incl
add
mov
rcrl
sbb
loopne
test
loop
or
mov
xchg
out
push
adc
lcall
pusha
int3
repz
mov
inc
push
or
lods
mov
xor
in
in
push
frstor
scas
cmc
xchg
jp
push
adc
aad
cld
dec
or
pop
in
in
add
push
xchg
inc
push
xor
mov
andb
jb
dec
pop
mov
push
repz
adc
jl
testl
mov
cmp
cwtl
out
sbb
movsb
mov
push
dec
adc
js
imul
test
pop
and
arpl
jbe
leave
pop
mov
jbe
push
jns
stos
and
mov
or
addr16
test
xchg
mov
outsl
adc
aaa
sbb
mov
mov
xchg
fildl
je
sub
div
jp
push
and
add
and
pop
pop
lds
movsl
fucomip
add
in
pop
inc
cmp
mov
shrl
enter
cmp
sub
jmp
movsb
mov
test
sub
adc
nop
divl
jno
lcall
adc
mov
xchg
jg
jb
rorl
sbb
jae
mov
mov
cmp
push
inc
add
push
pop
iret
cmpsl
fcomps
int3
icebp
jecxz
push
daa
xchg
mov
fwait
lret
stc
fsubrs
andl
std
dec
mull
jo
xor
dec
ds
ret
xorl
sub
sahf
sub
ss
jge
gs
push
jecxz
test
or
mov
mov
dec
addl
cmp
jp
pusha
and
inc
dec
insb
add
xor
in
lods
sbb
cli
cs
call
imul
sahf
arpl
jmp
pusha
or
jo
repnz
je
push
movb
add
ret
orb
lock
pop
sahf
jle
add
addr16
xor
in
pop
pop
mov
push
inc
orl
testb
insl
insb
jl
jp
and
lret
mov
sbb
out
pop
mov
xchg
mov
std
dec
ret
push
add
pop
mov
push
inc
push
cmp
push
jne
and
ds
jp
ret
mov
mov
lret
mov
adc
cwtl
jge
mov
fidivs
sub
aas
sbb
mov
ret
cmp
xchg
dec
sbb
inc
sbb
int
xor
xchg
mov
push
xor
stos
ljmp
repz
cmp
cli
jo
in
jmp
dec
out
cmc
and
fmull
lods
jmp
jae
xchg
mov
or
insl
ja
jae
popa
int
jno
or
push
mov
xor
outsl
scas
pop
lcall
in
cmc
test
arpl
movsl
sbb
mov
dec
pop
mov
adc
sub
pop
mov
jb
in
dec
push
xor
std
dec
cmc
orl
jns
adc
fimull
and
enter
or
ds
or
xchg
adc
cmpsb
in
xor
jl
mov
sahf
popa
in
adc
push
adc
mov
repnz
lcall
inc
adcl
cltd
les
repz
fmuls
cs
push
fistpl
jg
es
inc
push
movsb
jle
stos
push
jns
jns
fcompl
add
andl
pop
inc
xor
aas
xor
xor
cli
scas
aaa
xchg
adc
add
xchg
cld
dec
int
cmpsb
inc
pop
xchg
sub
addr16
pop
inc
cmc
and
sub
ficompl
insl
clc
lcall
dec
mov
cmp
and
xor
or
sub
test
aam
leave
pop
and
dec
cli
pop
xor
orl
push
sarb
mov
nop
ljmp
xchg
lea
or
clc
cld
flds
je
cmc
fadds
inc
outsl
rclb
jae
sub
mov
pop
mov
jp
pushf
xchg
add
xchg
inc
cmp
lds
and
movsb
mov
xchg
or
mov
cmpsb
xchg
pop
jb
pop
jmp
mov
call
mov
mov
ja
pusha
jnp
in
sbb
xchg
inc
add
inc
adc
jnp
insl
sub
add
xor
fdiv
fs
add
pop
outsb
lret
push
mov
inc
push
adc
fnstsw
pop
xor
jg
sahf
mov
mov
mov
pop
in
and
mov
lcall
mov
movsb
daa
push
aaa
mov
jle
dec
outsl
mov
sub
iret
push
cwtl
adc
cmp
lea
aad
cmp
cltd
lds
sbb
push
jbe
loopne
add
or
or
fs
icebp
jmp
ss
enter
mov
cmpsb
xchg
in
lock
dec
rcrl
ret
jp
stc
mov
loop
push
push
loop
jbe
pop
cmp
insb
pop
movsb
sub
jae
pop
out
xor
jno
pop
sbb
add
divb
out
cwtl
dec
mov
xor
test
and
lock
mov
ficomps
mov
cmp
jl
jae
mov
mov
lret
sahf
leave
push
mov
sbb
add
movsl
dec
xchg
push
pop
std
scas
movsl
mov
cmp
movsl
shrb
pop
aad
sub
mov
cmp
inc
or
mulb
pop
outsl
rclb
add
gs
sbb
xorl
mov
cld
scas
mov
push
ficoml
pop
es
mov
adc
repz
mov
repnz
jmp
addr16
jl
cmpsl
rcll
cmp
cli
adc
add
mov
jmp
mov
cmpxchg
push
mov
cmp
cmc
dec
add
mov
inc
xchg
sbb
or
pop
pop
dec
mov
xor
adc
push
jecxz
movsl
mov
divb
es
sbb
sub
xchg
mov
add
shlb
test
jb
movsb
outsb
sbb
cmp
mov
dec
lcall
mov
jmp
and
add
aaa
es
pop
arpl
cmpsl
add
lcall
inc
jns
call
lahf
into
sti
push
jmp
xchg
xor
pop
das
int3
test
dec
mov
in
imul
test
stos
addr16
push
or
push
dec
outsl
test
add
push
into
std
ss
push
push
mov
pop
xlat
aas
jne
insb
fstl
and
inc
add
bound
dec
and
and
movsb
aas
repnz
lods
adc
jbe
mov
adc
out
pop
mov
sub
xchg
xor
idivb
incl
xchg
cmc
rcr
sub
mov
ljmp
dec
push
mov
pop
inc
add
jmp
push
bound
mov
adc
jae
les
jbe
xlat
xchg
xchg
jp
and
pop
lods
add
in
gs
xchg
ja
dec
stos
xor
mov
rolb
pop
aas
loop
dec
inc
xchg
xchg
leave
out
mov
push
rorl
lea
gs
sbb
scas
outsb
mov
je
dec
mov
repnz
loope
add
in
inc
mov
or
repnz
movl
enter
mov
shr
cmp
ss
jne
fiaddl
int
divl
cmp
push
fisttps
js
xchg
shll
aad
js
cwtl
pop
orb
mov
mov
clc
mov
imul
mov
test
aas
orb
and
jg
sti
out
subb
imul
xor
lahf
icebp
xchg
aam
pop
mov
lret
lods
icebp
incl
in
and
sbb
test
cmpsl
shll
cmc
andb
fdivrs
pop
cmp
mov
rorl
lret
push
pop
inc
pop
add
in
pop
mov
push
adc
lret
cmc
jne
push
adc
mov
hlt
icebp
inc
dec
iret
out
pusha
ja
inc
mov
xchg
out
decl
dec
repz
push
jnp
pop
inc
jns
repz
and
jp
or
dec
adc
int
or
dec
rolb
popf
jo
lea
or
cli
mov
jge
sbb
inc
adc
fidivl
mov
test
fisubrs
xchg
ret
ds
scas
iret
adc
test
loopne
dec
aam
mov
or
pusha
sbb
sbb
mov
inc
cli
test
ljmp
shll
ret
xor
sub
popf
cmp
pop
inc
scas
jge
xchg
jns
jno
icebp
out
ret
mov
lods
fcmovbe
insl
dec
xor
imul
enter
loope
scas
push
lret
mov
add
je
mov
mov
sbb
push
add
jecxz
pop
movsb
ffree
lahf
in
lret
push
mov
adc
lahf
fadds
in
jmpw
popa
cmp
mov
aad
sbb
clc
lds
es
dec
movsl
stc
adc
mov
inc
out
gs
aas
lahf
inc
xor
mov
repnz
jo
int3
pop
and
or
xchg
shrl
ss
jbe
adc
orl
loopne
pop
mov
and
mov
dec
inc
enter
ficomps
jnp
jmp
pushf
jae
mov
inc
mov
adc
roll
cmp
cmp
out
fwait
jb
mov
and
push
sub
call
arpl
adc
mov
stos
roll
andl
hlt
subl
ds
ficoms
pop
xchg
push
sbb
mov
mov
push
lea
push
inc
jge
lahf
add
push
cmp
mov
rcrl
shll
loopne
jae
incb
pusha
fstps
adc
push
sub
cld
outsl
lret
push
loope
xchg
data16
or
jnp
data16
daa
mov
fisubl
clc
or
xchg
adc
addb
pop
xchg
jne
adc
and
out
xchg
cmovl
mov
sbb
jp
xchg
and
fdivp
nop
mov
xor
push
aad
ss
lret
or
lea
test
xor
pushf
das
inc
leave
mov
adc
ds
push
inc
push
xor
test
cld
shrb
imul
ret
test
orl
std
mov
rolb
cs
cmp
push
xor
repnz
push
pop
xchg
out
sahf
je
leave
pop
jb
pop
fcompl
cmpsb
add
test
std
pop
mov
jns
sbb
cmp
leave
jmp
lds
cmc
in
inc
or
das
xor
nop
xor
or
mov
icebp
jl
inc
mov
lcall
pop
or
xchg
cmp
mov
mov
or
mov
mull
imul
outsl
mov
add
pusha
jl
pop
sbb
sub
push
out
subb
sti
icebp
test
lock
xchg
xchg
repnz
inc
mov
pop
jns
ret
cmp
push
insl
inc
lea
mov
jno
add
pusha
push
call
or
in
pusha
push
and
fs
sbb
in
sub
lret
aad
push
jg
addr16
jbe
notb
cmpb
xchg
mov
sub
lods
movl
mov
xchg
test
jne
push
scas
lret
int
push
jp
mov
mov
imul
pushf
fidivl
pop
cmp
mov
sbb
mov
add
dec
xchg
jb
daa
stc
arpl
sbb
push
mov
outsl
lret
fstl
in
push
roll
aaa
adc
push
imull
icebp
popa
sub
adc
popf
pusha
call
and
mov
inc
pop
mov
cmc
jns
xlat
out
jbe
add
cwtl
mov
or
imul
mov
add
add
mov
and
mov
sub
dec
mov
inc
cmpsl
or
dec
ss
movsb
dec
fwait
cmp
pusha
sub
push
cs
inc
mov
fs
lods
lcall
mov
data16
test
roll
lock
dec
flds
pop
sub
mov
push
inc
cmp
loop
iret
jge
je
jl
inc
add
stc
popa
in
or
pop
cli
std
adc
inc
inc
js
jge
repnz
inc
inc
xor
cs
inc
pop
fidivrs
add
lds
test
mov
cs
xchg
rcr
sar
mov
push
cli
xor
push
enter
in
sti
xor
dec
and
xlat
je
in
jae
and
and
sahf
addr16
jae
mov
jnp
or
sub
inc
stc
lods
pop
mov
inc
lea
rorl
arpl
ret
jle
pusha
xlat
std
mov
hlt
icebp
mov
insl
cmp
sbbb
pop
out
mov
dec
inc
mov
xchg
mov
je
popf
add
cltd
cmp
xchg
ror
shr
inc
or
mov
int3
jge
pusha
xor
mov
mov
dec
subl
hlt
movl
stos
add
push
fwait
xchg
add
flds
mov
jge
cmp
cmp
cmc
stc
sbb
sbb
xor
in
xchg
hlt
mov
mov
adc
push
cld
sub
sub
imul
adc
mov
mov
dec
lret
repnz
test
addr16
adc
cmp
fadds
dec
push
sti
mov
fsubl
rol
shll
jg
push
cmp
push
aas
or
stos
mov
push
inc
insl
push
inc
cmp
jae
mov
ret
inc
imul
repz
xchg
add
ds
icebp
push
lahf
in
cmp
push
orb
or
adc
and
pushl
iret
mov
add
jae,pt
fildll
sub
or
js
mov
clc
fdivs
jo
popa
push
mov
inc
xor
or
push
mov
ret
or
add
cmp
mov
add
loopne
or
movb
xchg
mov
ficomps
repz
sub
pop
incl
int3
pushf
adcl
rcrb
lds
inc
in
cltd
xor
mov
jnp
xchg
aam
push
test
js
out
rclb
out
lds
sbb
imul
stos
jne
cmp
push
loope
repnz
mov
inc
add
fstp
mov
int3
add
push
cli
les
mov
repnz
jl
mov
cmp
jne
sbb
mov
jnp
js
test
mov
add
jbe
cmpsb
push
pop
aas
aas
mov
mov
incb
mov
inc
fildl
sbb
cmp
insb
cltd
xchg
insl
dec
mov
sbb
ret
or
mov
inc
insb
mov
mov
scas
stc
pop
les
xor
xchg
mov
sub
xchg
inc
in
or
cmpsb
enter
sti
cmp
mov
and
and
test
ds
pop
icebp
mov
xchg
and
xlat
push
inc
mov
daa
mov
js
cmp
repz
test
ficomps
shl
pop
popa
arpl
shll
jl
loopne
xchg
xchg
xchg
rclb
iret
int3
aas
shl
inc
lahf
jns
inc
mov
mov
pop
push
jnp
iret
int3
lods
and
cmp
in
cwtl
mov
pop
or
mov
sub
xchg
mov
xchg
pushf
inc
add
andl
shlb
addr16
xchg
xor
je
aaa
rcrb
repz
push
dec
popa
mov
js
push
stos
dec
movsl
mov
cmpb
and
adc
test
sbbb
insb
stc
or
push
mov
test
push
outsl
push
addr16
sub
xchg
sti
fidivs
dec
loop
fs
and
dec
repnz
dec
pop
push
enter
sbb
jnp
js
jp
push
xchg
jbe
sbb
scas
cwtl
xor
in
ss
or
xchg
aaa
sahf
cltd
repz
arpl
add
pop
push
cmp
out
sub
cmpsl
push
jnp
inc
and
in
aas
inc
lock
adc
push
out
jmp
ja
pop
bound
addr16
cld
pop
mov
cmp
loope
and
pop
jno
data16
enter
jge
dec
mov
push
and
add
ja
push
mov
mov
push
jno
sbb
mov
pop
mov
test
or
lret
fwait
inc
scas
shlb
test
and
mov
xor
loop
push
stos
mov
hlt
push
xchg
in
or
leave
lcall
push
xchg
imul
or
and
shrl
cmp
bndldx
lods
mov
ss
movb
mov
push
xor
scas
or
cli
cmp
sarb
das
xchg
xchg
out
dec
mov
fdivl
movsl
and
sub
add
rclb
jl
mov
orb
dec
shll
repnz
xor
fbstp
xor
arpl
jo
int
clc
cmp
sub
push
or
xor
lahf
xchg
pop
jne
ja
jmp
adc
enter
loope
movsb
mov
and
shl
mov
xchg
xor
dec
xchg
leave
xchg
push
jbe
pop
rorl
pop
xor
sub
jb
or
dec
sub
out
mov
and
xor
cli
pop
add
int3
icebp
fsubs
data16
mov
jmp
push
aad
mov
iret
or
or
loope
std
ss
imul
cmpsl
inc
dec
lods
pop
mov
add
popf
ds
inc
dec
adc
pop
sti
sbb
movsl
lahf
xchg
xchg
xor
es
cmp
pop
sahf
push
mov
adc
stos
xor
sub
sbb
adc
jmp
adc
ja
in
push
add
mov
adc
inc
dec
das
repz
inc
mov
pop
and
mov
xchg
leave
push
add
outsb
mov
mov
fisttps
shll
cli
imul
xchg
xchg
scas
push
mov
jo
and
jne
ja
gs
jne
xchg
roll
xchg
push
pop
cvtps2pi
jge
lcall
fmuls
and
adc
push
pop
inc
gs
test
sarl
loopne
add
or
hlt
cmp
fistpll
or
push
cmp
or
aam
dec
jae
xchg
add
cmp
sbb
addr16
mov
jmp
icebp
addb
imul
nop
aaa
insb
jg
movsl
mov
xchg
subl
decl
jnp
shlb
testl
enter
cwtl
mov
and
fdivrs
insb
sbb
mov
dec
push
jle
cmp
mov
aam
jmp
sti
mov
dec
inc
ror
sub
add
adc
xor
xchg
cmp
fstl
push
or
lea
nop
cmpsb
mov
jbe
outsl
shl
jecxz
dec
lock
rcrl
stc
dec
scas
test
das
or
sahf
push
mov
aad
inc
inc
repnz
add
ret
cmc
cmpsb
rcll
scas
scas
add
pop
inc
cs
jno
adc
es
stos
popf
or
dec
dec
cmc
jg
sub
ss
stos
mov
movsl
sub
stc
das
scas
imul
jg
adc
jmp
notb
xchg
xor
adc
ds
pop
cwtl
sub
loopne
and
test
punpckhdq
lahf
mov
add
daa
mov
mov
pop
push
add
cli
js
dec
xchg
xlat
sti
xchg
and
cmpsl
sub
mov
fs
sub
sbb
lret
mov
push
loope
xor
jg
aas
adc
ret
ljmp
sti
or
cltd
cmpxchg
sbb
mov
jmp
ror
movsl
sbb
lock
decl
subb
daa
gs
cmpsl
scas
or
rep
bound
nop
cmpsl
icebp
out
xchg
sahf
mov
lret
lret
adc
lcall
mov
xchg
loopne
sub
ljmp
int3
movsb
popa
je
mov
mov
or
xchg
stos
and
js
sub
sbb
jg
mov
adc
xchg
add
sti
ret
lahf
lods
movsb
lock
hlt
les
mov
dec
int
jge
std
adc
lret
push
int3
and
mov
sub
add
jp
push
jmp
mov
jnp
ret
mov
lret
push
lock
jge
enter
mov
loope
jle
mov
mov
xchg
sub
andb
push
xchg
repnz
lahf
insl
std
in
dec
dec
sahf
jp
mov
add
leave
mov
and
int
mov
jno
sub
push
fimull
arpl
loop
repnz
bound
push
or
test
out
mov
cmp
and
cmp
push
daa
test
mov
orb
adc
pushf
xchg
mov
push
pusha
mov
or
sti
sti
repz
inc
adc
adc
pop
xchg
sbb
jmp
sbb
js
loop
pop
stos
sbbb
add
addr16
aad
jmp
shrl
pushf
dec
std
mov
xchg
push
shll
aaa
out
lds
daa
mov
sbb
hlt
adc
popa
pop
xchg
dec
or
rorl
pop
inc
or
idivl
xlat
cld
jno
mov
xorl
mov
je
sub
roll
jb
add
add
dec
popa
jle
add
cmp
out
mov
mov
dec
loopne
loop
out
cmp
sbb
cld
jo
imul
push
lods
sub
mov
add
or
das
mov
xchg
push
jnp
mov
mov
cmpsb
push
and
jecxz
push
xor
jnp
mov
lods
iret
jbe
repz
sbb
in
jno
insl
mov
lds
jmp
push
cmc
loopne
imul
xchg
pop
push
arpl
sti
outsb
jle
aam
out
adc
pusha
cmpsb
imul
pop
ret
imul
hlt
iret
int
jnp
mov
cmp
lahf
lock
imul
insb
cmp
pop
fs
mov
add
into
and
sti
fcom
dec
xchg
add
out
mov
enter
and
stos
dec
or
repnz
enter
aad
cmp
jb
sub
pop
inc
add
mov
leave
push
fsts
lret
jbe
fnsave
daa
hlt
and
push
dec
out
sti
xchg
enter
je
fwait
add
pusha
pop
loopne
adc
neg
addr16
adc
jo
das
shll
int3
cmp
leave
int3
sti
mov
movsl
and
dec
mov
jae
repz
clc
arpl
or
les
push
lds
ret
outsl
lret
push
fisubrl
nop
aad
mov
into
or
pop
inc
pop
rcll
xor
add
sbb
mov
mov
nop
call
xor
sbb
adc
xor
scas
pop
push
sbbl
xlat
scas
xchg
ds
sti
inc
push
cli
ret
xor
andb
pusha
cmp
icebp
adc
or
pop
shll
aas
scas
mov
mov
lahf
dec
adc
dec
xchg
add
push
repz
pusha
add
push
add
push
arpl
jmp
pop
push
pop
scas
shlb
fisubrl
xchg
inc
lods
fsubs
sub
call
lods
out
je
cltd
scas
icebp
add
cmp
ljmp
cltd
inc
mov
shlb
aaa
mov
add
mov
les
popl
sbb
icebp
pop
scas
or
mov
inc
out
in
pusha
xchg
sbb
push
cmp
pusha
and
je
mov
das
stos
test
lods
adc
xchg
pop
push
popf
repnz
mov
stos
int
mov
and
xor
xchg
pop
push
pop
fwait
cs
testl
loope
fptan
xor
add
dec
push
xor
and
pop
mov
push
arpl
ljmp
je
enter
push
push
add
push
inc
repnz
out
dec
negb
dec
inc
mov
out
fildl
or
adc
add
clc
lods
arpl
push
xchg
daa
push
add
cmp
out
daa
lret
subl
push
lahf
rorb
mov
adc
inc
adc
divb
xchg
scas
shrb
xchg
popa
sub
mov
mov
dec
mov
inc
inc
inc
add
cmpsb
lds
add
ror
xchg
shl
mov
stc
shr
cmpsl
xchg
arpl
sbb
sbb
psubusb
cmp
mov
jmp
aad
cmc
sub
insb
dec
in
sbb
aad
rorb
mov
lret
adc
int3
dec
movsl
push
stc
lods
cmpl
jno
rcll
ret
inc
test
incl
jae
cmp
push
test
repz
lods
enter
mov
lock
dec
test
and
and
cmp
decb
out
jmp
dec
xor
js
iret
aad
sbb
xor
mov
imul
mov
lret
mov
in
jno
push
fidivs
add
ds
xchg
pop
push
mov
lea
mov
lret
push
pop
pop
add
arpl
or
les
gs
in
enter
adc
jb
ficompl
inc
fisubrs
sbb
inc
fcmovnbe
test
insl
sub
movsb
inc
iret
mov
cmp
mov
out
cmp
and
rclb
shlb
adc
pop
ja
stos
stos
ljmp
outsl
lret
das
dec
adc
out
loope
movsl
cmp
aas
dec
push
iret
inc
pushf
mov
mov
mov
xor
insb
outsb
cs
or
std
sbb
mov
dec
mov
push
shl
or
int3
movsl
pop
sbbb
loopne
xchg
xchg
inc
enter
lcall
repnz
mov
ds
lret
movsb
jp
sar
mov
lods
out
cmp
xor
loope
mov
cltd
mov
scas
addr16
adc
lret
and
adc
and
lret
ljmp
sbb
and
inc
jg
addr16
ror
daa
inc
cmp
enter
cli
pop
std
xlat
addr16
call
or
jno
mov
push
ret
outsb
out
loope
aad
and
nop
mov
mov
fs
mov
ss
test
xor
call
sub
movl
lahf
sbb
lods
inc
jb
xchg
adc
fcoms
icebp
mov
lret
and
pop
add
mov
dec
not
push
cmpb
scas
in
sbb
hlt
inc
push
pop
add
add
aam
jg
vcvtps2ph
cmpb
or
adc
rorl
scas
sub
or
jg
pop
xchg
push
test
push
xlat
icebp
adc
inc
jo
push
jnp
ja
and
popa
lcall
sub
pop
fstps
dec
and
push
mov
out
jl
ss
xchg
inc
popa
push
push
cmp
push
add
mov
imul
mov
int3
lret
inc
or
xlat
dec
and
cmp
dec
pop
add
sar
mov
jge
lea
push
in
cmp
cs
test
inc
lods
std
stos
inc
dec
rorb
or
cmovg
add
mov
cmp
mov
leave
out
cli
cltd
dec
popf
cmp
ss
sti
xchg
inc
hlt
xchg
pop
hlt
mov
push
xchg
jge
addr16
aaa
or
les
hlt
push
into
pop
cltd
insb
jp
xor
rolb
dec
cli
pop
add
inc
cld
xor
jae
add
sar
push
push
push
sbb
mov
push
cmpsl
mov
push
popa
sub
roll
cmc
jbe
into
xchg
call
xchg
cmp
popa
lahf
dec
or
arpl
push
jb
xchg
or
adc
sub
cld
jae
cmpsb
aaa
cmp
insl
push
incl
shlb
imul
shrl
push
add
adc
push
test
lods
sub
xor
cmp
insb
scas
fistpll
out
jg
stos
push
subl
push
hlt
pop
add
inc
stos
popf
cli
add
pop
adc
jecxz
pusha
cs
jg
pop
cmp
jnp
sbb
orl
cmpb
aaa
sbb
push
mov
jo
cmpsb
sub
ss
shll
pop
imul
outsb
les
shrl
add
mov
pushf
add
push
pop
cltd
insb
lock
xor
sbb
and
repz
jmp
popa
negl
and
imul
add
hlt
sbb
mov
rol
aaa
add
fs
mov
gs
adc
orl
pop
sahf
pushf
sbb
loopne
push
add
ret
test
clc
ret
insb
sub
addr16
std
xchg
nop
cmp
or
popa
inc
fcmovnbe
inc
and
cs
lcall
in
aam
sbb
mov
mov
shll
addl
cli
ljmp
jmp
fmuls
iret
cmp
xchg
xchg
aas
gs
sbb
mov
aam
pop
sub
roll
jp
and
adcb
xor
and
sub
out
push
xlat
adcl
leave
fidivrl
call
jne
mov
push
int
mov
add
movsl
add
sub
lods
cmpsl
pop
sti
shll
outsl
idivl
loopne
out
and
daa
xor
mov
mov
arpl
addr16
pusha
jmp
test
dec
add
push
xchg
fmuls
outsb
jne
inc
test
aam
cmpsl
shll
jge
jne
xor
fdivp
gs
ds
add
rolb
fs
xor
icebp
mov
adc
iret
imul
jnp
pause
sub
cmpsl
pop
scas
js
push
loope
ret
movsb
pushaw
das
sti
insl
orb
cmpsb
sbb
imul
add
adc
insb
inc
mov
test
push
scas
inc
mov
repnz
pop
imul
cmpsb
push
dec
xchg
jle
push
cwtl
stos
xor
fldl
pop
and
stc
push
clc
adc
pand
out
retw
jae
xor
ficoms
mov
adc
jae
and
jl
iret
or
sub
dec
push
mov
cmpsb
int
mov
out
xlat
leave
pop
inc
inc
lods
mov
in
aaa
mov
push
data16
jb
dec
fldt
pusha
bnd
jbe
repnz
jge
psubw
popa
imul
shl
clc
in
xor
inc
arpl
push
xchg
ja
xchg
loope
sbb
insl
xchg
syscall
mov
adc
insl
pop
sbb
mov
push
jp
in
repnz
push
pop
pop
mov
bound
rol
sbb
or
mov
adc
fisttpll
adc
mov
vmulpd
mov
inc
addb
outsb
inc
xor
lea
add
sub
gs
or
fcmovne
mov
push
xor
hlt
in
out
stc
inc
push
scas
mov
fbld
test
enter
fmull
clc
mov
ret
jge
or
iret
jno
shll
imul
imul
lret
mov
pusha
in
mov
das
mov
sar
mov
cmpsl
aam
xchg
push
aas
push
sbb
sti
pop
xor
lahf
stc
xchg
jno
scas
scas
test
shll
pusha
bound
scas
leave
das
int3
lret
inc
sub
mov
ret
jb
jb
jae
jbe
pop
xchg
jle
imul
out
insb
aam
int3
dec
lea
mov
test
fstl
stc
push
mov
pop
fistpll
cli
test
enter
and
fwait
xchg
xchg
pop
push
dec
xchg
out
lds
enter
jae
sbb
stc
mov
int3
sbbl
into
adc
jne
mov
repnz
dec
jbe
cmpsl
fadds
out
sbb
in
and
outsb
xchg
push
sbb
and
repz
pop
cmpsb
std
mov
cmp
cmpsl
xchg
push
xlat
test
clc
or
cltd
stc
ret
in
stos
push
mov
pop
call
adc
mull
and
fistl
test
pop
in
scas
dec
dec
mov
out
test
movhps
jae
fiadds
popf
push
adc
jo
cli
dec
mov
and
cmpb
in
jp
adc
out
out
test
jp
ror
dec
dec
test
jnp
inc
lock
gs
mov
sbb
xor
sbb
inc
mov
stos
xchg
cli
lcall
cmpb
int3
xchg
and
ds
cmp
shll
xchg
lret
xchg
lds
out
mov
pusha
popa
sub
adc
incb
cmpsl
ret
sub
test
cli
div
subl
jg
int3
loopne
data16
data16
subl
xorb
xor
adc
pop
lock
test
in
mov
inc
push
in
popf
pop
inc
pop
lahf
cmp
sbb
jg
es
inc
sarb
and
rcrb
dec
scas
jns
lea
enter
xchg
adc
inc
popa
mov
fiaddl
ret
iret
inc
scas
out
mov
xchg
mov
outsl
call
adc
outsb
push
and
in
cmc
shll
mov
xor
outsb
jns
or
adc
adc
popa
andl
scas
inc
mov
jp
test
fisubrl
iret
daa
dec
mov
pop
loop
jp
dec
jge
shll
xorb
jl
sub
pop
push
add
icebp
push
cwtl
jp
scas
xor
int
and
cli
filds
mov
imul
lods
mov
aas
and
js
iret
insb
sub
test
mov
orl
cs
inc
cmp
add
and
xor
rcl
inc
and
sub
loop
stos
faddp
ret
xor
pop
ljmp
pop
cmpsl
pushl
addl
xor
pop
gs
shl
in
cltd
popf
mov
in
cwtl
add
loop
notb
gs
xor
addr16
insl
sbb
pusha
mov
imul
call
mov
sarl
out
test
fwait
hlt
and
movd
push
or
dec
fisubs
xchg
add
mov
or
lret
pop
out
fdivs
push
es
jbe
rcl
mov
dec
cmp
lea
add
test
insl
in
and
adc
jle
nop
sub
cld
pop
sbb
shl
inc
inc
push
scas
jns
mov
jno
data16
outsl
cmpsb
sub
call
pop
gs
xchg
aam
clc
jns
pop
adcb
popa
movsb
pop
jbe
xor
jp
jb
pop
dec
nop
pusha
and
stc
and
fldt
mov
or
daa
and
ss
fldl
sub
or
jl
and
mov
add
dec
or
and
scas
and
mov
aas
lds
xor
cmp
xor
cmp
push
push
out
leave
add
add
mulb
adc
fcmovb
mov
les
test
dec
push
bound
std
cs
adc
out
outsl
fcoms
xor
sub
and
sbb
clc
nop
clc
loopne
lahf
adc
pop
rcrl
les
sbb
std
sub
daa
pushf
shll
pop
into
dec
psubsb
add
jg
jmp
push
lret
dec
in
jnp
push
push
mov
mov
and
fs
pop
bound
sub
inc
mov
push
pop
xor
sbbl
cmpl
jnp
inc
out
lcall
rol
popf
insb
aam
loope
cmp
mov
cmpsl
nop
xchg
dec
shrl
ja
sub
js
in
cmp
loopne
sub
dec
jecxz
je
or
and
ljmp
or
sub
lea
nop
inc
mov
mov
in
shrl
xlat
adc
inc
stos
das
inc
lock
mov
cmp
cwtl
in
pusha
dec
pop
push
adc
dec
xor
dec
cmp
iret
sbb
adc
ret
xchg
je
dec
in
dec
mov
push
mov
int3
jg
push
pop
loopne
cli
test
mov
mov
inc
push
shl
mov
cmp
push
bnd
adc
inc
inc
cltd
cmpsl
xor
popf
and
inc
adc
mov
ret
mov
mov
cmpsl
testb
and
add
repz
scas
and
xor
lds
ljmp
clc
jle
mov
je
inc
scas
bnd
xchg
dec
xchg
add
flds
or
enter
xor
adc
xor
ret
xor
pop
out
sub
lret
es
add
sub
mov
repnz
sbb
aaa
cld
mov
jnp
xlat
xor
jb
hlt
add
pop
jecxz
pop
add
insb
xlat
pmulhw
aam
imul
xor
cmp
add
shl
cld
insb
adc
mov
inc
jns
sub
lret
fs
jno
xlat
dec
adc
dec
mov
je
rclb
pop
sbb
mull
loopne
xchg
push
mov
in
stos
jae
inc
aad
call
push
sbb
mov
jecxz
stos
and
js
fcoml
mov
mov
adc
inc
hlt
jo
mov
mov
ficoml
fs
popa
cmp
sbb
inc
jo
loope
cmp
cld
clc
addr16
inc
stc
cmp
inc
cmp
pop
repz
dec
sbb
xchg
adc
into
sub
mov
std
test
fdivrp
loope
push
lods
aaa
mov
inc
add
jmp
mov
adc
inc
into
pop
out
xor
jo
rcl
sarb
mov
mov
lcall
adc
and
inc
call
sbb
std
adc
cli
and
and
adc
pop
xor
mov
push
adc
sub
popf
push
push
filds
mov
cmp
add
lret
adc
les
xor
xor
cmp
mov
and
jmp
testl
loopne
xor
jmp
pop
mov
inc
jmp
sub
stc
and
fisubl
out
mov
jae
and
jmp
movsl
xchg
push
mov
xor
int3
mov
int3
in
xchg
int
jno
sub
xor
dec
and
pop
hlt
xchg
xchg
insb
mov
sbb
movsw
pop
outsb
loopne
pop
test
mov
pop
mov
stc
inc
adc
cmp
sub
mov
testl
pop
mov
daa
mov
movsb
jne
inc
pop
in
int3
daa
std
inc
in
sub
inc
das
rclb
rorl
push
icebp
cmc
xor
movsb
jb
fdivs
push
in
clc
or
es
test
or
pop
scas
pop
jo
add
and
xchg
push
or
outsb
sahf
xor
sub
popa
or
add
js
fildll
jnp
mov
lea
int3
xchg
mov
mov
cmp
sbb
adc
loopne
test
and
sbb
jl
xchg
sbb
push
dec
pop
cmpsl
pop
pop
sbb
hlt
adc
cwtl
repz
mov
cmp
jno
sbb
push
imul
pop
jmp
dec
pop
add
fs
loope
dec
lcall
adc
add
pop
or
arpl
lret
dec
out
pushf
mov
adc
dec
dec
jecxz
xchg
imul
mov
outsl
leave
nop
lea
in
jle
in
sbb
in
and
into
push
push
ljmp
inc
xchg
add
getsec
insb
outsb
je
xor
sti
and
fdivs
lret
or
loopne
cmp
jmp
movsb
jne
out
inc
push
cmp
push
jno
mov
xchg
adc
sbb
insb
mov
mov
and
xchg
mov
pop
add
pop
add
add
jns
and
notb
imul
dec
sahf
aam
lea
adc
out
cmp
ret
stos
addb
dec
lret
sarl
in
out
jle
sti
inc
adc
mov
pop
daa
cld
xor
fmull
dec
sbb
dec
gs
inc
cmpsl
and
adc
bound
int
out
cwtl
imul
xor
out
mov
stos
jl
shll
push
lret
sub
mov
mov
mov
mov
mov
das
inc
xlat
aam
and
xorb
cmp
add
jmp
stos
cli
fnstenv
pop
adc
repnz
in
push
aam
dec
ja
xor
dec
out
cmpsl
repz
ja
das
repnz
aad
pop
je
test
or
cltd
pop
mov
lea
cld
fs
stc
dec
fistpll
jecxz
dec
and
mov
jne
lods
fwait
jnp
movsl
loop
cltd
cli
xor
mov
out
shlb
sbb
xor
enter
jl
pop
stos
sub
cs
push
mov
pop
lret
cltd
inc
push
addr16
add
pop
mov
sub
push
xor
mov
pusha
push
cmp
jne
xor
loop
adc
jne
and
les
sarb
push
pop
insl
jp
add
inc
sub
push
mov
mov
enter
push
insl
push
stos
xlat
daa
cmp
cmp
sahf
movsl
dec
paddd
mov
shll
daa
outsl
xlat
imul
roll
mov
mov
stos
int3
add
mov
movsl
icebp
adc
adc
cltd
sbb
lret
sub
sbb
push
je
jle
jne
and
xchg
mov
mov
mov
jg
xor
sub
insb
jo
jo
jle
add
aad
adc
and
movsb
hlt
pop
pop
addr16
jmp
jne
jp
sti
loopne
mov
adc
pop
movsl
out
jl
sub
sub
mov
jb
fs
xor
rep
enter
xor
sub
adc
push
push
xchg
xor
xchg
lcall
aas
or
push
push
loope
sahf
inc
mov
fcoml
adc
pop
or
dec
and
es
int3
push
les
jne
pusha
sahf
data16
cmp
sbb
shlb
imull
push
mov
pop
call
cmpsl
inc
popa
subb
mov
mov
fnstsw
push
mov
push
mov
jb
add
in
cs
stc
jmp
fadds
popa
aam
clc
mov
movsb
cmpsl
xor
pop
lds
sbb
jbe
in
mov
call
loope
pop
vpor
test
fucomip
in
stos
push
pop
fisubrs
xor
cs
mov
sbb
imul
and
repnz
add
jnp
sbb
pop
or
es
jp
repz
jmp
call
inc
icebp
or
arpl
mov
jmp
xchg
repz
xor
push
and
ljmp
xlat
gs
sbb
rorl
xlat
adc
push
mov
mov
stos
inc
xor
cltd
es
scas
outsb
imul
lret
and
shlb
aad
ljmp
mov
mov
in
adc
push
cmp
arpl
or
leave
clc
and
dec
mov
lret
mov
leave
and
adc
mov
mov
cmp
and
mov
jo
sbb
sub
push
sbbl
xor
outsl
idivb
lock
xor
xor
stc
gs
aas
mov
and
das
sub
xchg
fs
push
and
push
adc
icebp
nop
mov
test
mov
mov
fwait
aas
lcall
lods
cmpsl
cmp
pop
clc
outsl
ss
lods
nop
add
arpl
and
shlb
push
mov
mov
jmp
loop
stc
push
adc
adc
out
xor
neg
popf
icebp
mov
jne
cltd
cmp
push
adc
xor
test
mov
and
sbb
mov
shl
adc
push
inc
add
adc
adc
imulb
add
pop
movl
leave
pop
cld
mov
add
lcall
fadd
inc
out
sub
and
lahf
lcall
pop
inc
pop
imul
adc
dec
push
mov
dec
popa
xor
lods
call
dec
call
dec
lcall
lods
movsb
aad
shlb
mov
faddp
popa
js
push
orb
mov
std
scas
jge
cli
repnz
ja
scas
pop
pop
push
inc
jns
addr16
or
xchg
aam
lods
out
or
inc
and
lds
dec
lcall
ret
sub
or
mov
cmpsl
push
inc
fbstp
das
ficomps
xchg
push
xchg
mov
pop
sbb
cmp
leave
or
lds
cmpsb
add
ds
mov
cmpsb
in
inc
mov
adc
fstpl
dec
lods
and
cmpsb
ja
cmc
or
sbb
in
out
popf
leave
sub
inc
mov
xchg
push
pop
sub
mov
sub
push
imul
inc
cmp
loopne
test
fs
inc
cmpl
hlt
fs
xchg
mov
leave
lea
outsb
hlt
cmc
dec
sub
or
lods
sub
xchg
enter
adc
or
push
imul
xor
out
in
xchg
loope
jae
push
xor
sub
pop
push
mov
mov
jbe
xlat
pop
xchg
imul
call
sbb
in
xor
push
cli
xchg
ja
push
sub
inc
mov
mov
icebp
lods
das
out
inc
iret
into
frstor
loope
inc
inc
xor
sub
jp
xor
stos
leave
sbb
sub
xchg
cmc
inc
lahf
sub
sbb
rcr
das
ljmp
push
mov
enter
dec
dec
je,pt
jl
out
arpl
pop
mov
mulb
mov
movsl
movsb
mov
jbe
xorb
in
idivb
mov
imul
les
sub
mov
dec
pop
adc
mov
mov
push
mov
arpl
in
iret
pop
mov
push
mov
pop
rorb
ret
xor
inc
sarb
pop
movl
push
jecxz
jg
leave
mov
xchg
scas
or
add
push
push
or
pop
sahf
out
loop
xchg
push
add
xchg
out
test
jbe
std
push
ja
mov
and
or
sbb
repnz
cmp
int3
jp
loope
and
lret
loope
filds
loopne
ret
xor
add
xchg
mov
iret
xchg
sarl
cmp
clc
jno
adc
sub
pop
cmc
mov
leave
mov
aas
xor
loopne
sub
adcb
xlat
push
fmuls
mov
fld
sub
cmpsl
and
into
inc
repnz
mov
push
pop
std
mov
fldenv
repnz
out
pushf
div
xchg
outsl
and
test
sub
xor
icebp
ret
out
gs
mov
mov
movb
inc
xchg
lods
iret
fistl
mov
int
into
xchg
scas
add
out
xchg
into
je
jne
pop
orb
ss
cmp
xchg
mov
out
pop
sbb
lock
fisttpll
push
pop
pop
lahf
pop
xchg
scas
adc
sub
pandn
aas
sbb
and
imul
in
jmp
jae
xchg
pop
lea
mov
cmpsb
mov
pop
jge
mov
pop
push
and
imul
stc
ja
or
dec
fisubl
push
inc
rclb
hlt
imul
xchg
push
sbb
cmc
mov
sbb
out
jg
sar
ds
cmpsl
stos
lea
cmp
cmpsb
or
lock
jmp
cmc
mov
inc
push
test
cmpl
popw
ja
loop
mov
das
and
ljmp
mov
ljmp
jno
scas
movsb
mov
pop
mov
add
cmpsl
or
add
arpl
or
in
pop
mov
jg
jne
mov
imul
cwtl
push
nop
cli
std
xor
ds
jle
fisubl
cmp
imull
subb
sahf
sub
lods
test
subb
and
dec
push
imul
mov
and
cmc
scas
je
pop
adc
cmp
add
mov
loopne
testb
pop
in
fs
es
push
mov
push
mov
movsl
clc
sbb
sbb
cli
cmpsb
loop
test
cmp
hlt
inc
test
cs
clc
dec
call
or
mov
add
add
sub
iret
push
add
jle
mov
repz
bound
or
xor
lods
push
je
cmp
cmp
mov
push
sub
hlt
rclb
in
mov
lods
lods
push
cwtl
ja
xlat
mov
or
sub
and
stos
fsubr
inc
inc
lcall
mov
or
jmp
fadds
and
popa
hlt
lahf
nop
cltd
pop
pop
mov
pop
push
mov
insl
and
push
push
pop
int
mov
cmp
les
inc
sbb
mov
sub
lret
push
and
and
xor
repnz
cwtl
hlt
mov
mov
mov
push
mov
in
rolb
push
push
movsb
cli
mov
and
dec
ss
pop
xor
push
les
pop
mov
sub
push
add
mov
jmp
outsb
jb
fidivs
adc
pop
mov
les
ja
sbb
pop
xorl
testl
pop
arpl
mov
pop
lds
dec
movsb
pushf
mov
int3
dec
adc
adc
jecxz
adc
sbb
sbb
sbb
sbb
scas
lahf
jge
fnstsw
shr
aad
xchg
push
add
leave
rol
or
adc
mov
jecxz
jmp
ss
out
push
movsl
int
lcall
pushf
inc
clc
sbb
mov
jmp
cmp
ret
int
push
aam
mov
lds
inc
shr
lcall
add
jns
out
insb
cmpsb
jle
adc
cltd
push
jmp
gs
mov
mov
lret
frstor
sub
mov
stc
ljmp
ds
mov
sub
pop
lods
mov
movb
sbb
stos
xchg
jle
add
adc
xchg
pop
inc
and
dec
add
imul
ja
xchg
ja
push
cmp
sub
les
fldenv
push
in
dec
adc
lods
pop
fs
test
subb
shrl
sub
stos
or
cld
lods
or
ds
dec
push
pop
cmp
mov
mov
mov
test
jne
push
test
icebp
cmp
sahf
dec
loope
fwait
addr16
stc
mov
les
pop
push
and
and
mov
iret
xchg
push
sub
mov
push
jns
enter
adc
mov
aas
sbbb
cli
cwtl
enter
imul
xor
pusha
add
lds
mov
jmp
sar
ret
cmp
jmp
sti
mov
dec
loope
inc
pop
xchg
sub
outsl
mov
cld
aad
sbb
sbb
jle
adc
dec
and
rcrb
add
mov
icebp
loop
sub
cltd
cwtl
or
dec
mov
popa
aam
mov
test
pushf
in
mov
cmp
and
fbld
pusha
sbb
or
pop
stos
je
dec
jmp
push
leave
push
and
pop
into
sbb
lcall
mov
add
fcompl
pop
sbb
out
xchg
mov
aam
xchg
add
xlat
pop
ret
push
jae
cmpl
data16
sti
testb
mov
icebp
dec
push
jmp
or
out
jge
insl
sub
aas
lock
enter
data16
lds
add
inc
pop
enter
in
add
sbb
push
cli
or
fnstcw
and
pushf
mov
cmp
stos
add
addr16
adc
inc
mov
mov
outsb
add
sub
ret
clc
int
jno
int
mov
inc
ret
movsb
aam
test
inc
add
pop
jecxz
fidivrl
stos
xchg
sbb
icebp
mov
jg
arpl
cmpsl
scas
in
sbb
in
pushl
std
notb
jp
sbb
repz
pop
jmp
jbe
addl
xchg
sbb
push
add
fistpl
xor
psubsb
sub
adc
push
jae
frstor
or
lods
enter
cwtl
std
loop
jae
aaa
adc
jl
push
pop
inc
lahf
pop
in
pop
push
sub
stos
jmp
mov
mov
inc
push
inc
jecxz
mov
mov
fsubp
pop
add
ljmp
sti
xor
insl
in
mov
gs
mov
pop
pop
in
cmc
jp
pop
add
add
popf
or
and
add
jecxz
xor
lret
xor
ljmp
push
ret
mov
sub
mov
lret
jns
add
lret
adc
imul
lock
repz
mov
push
push
cli
sub
cmp
and
sbb
mov
lcall
or
je
xor
push
fcompl
shll
or
mov
test
xor
mov
pop
call
jmp
mov
into
mov
cltd
sub
jg
mov
cmp
cli
cli
addr16
out
and
inc
dec
add
filds
jnp
outsl
fwait
ret
dec
fcom
in
ret
adc
add
in
xchg
loopne
xor
repnz
gs
ficoml
cmc
call
jbe
mov
pop
sbb
adc
adc
xor
jbe
adc
cld
add
mov
pushf
test
lea
sahf
or
adc
inc
push
loopne
dec
into
sbb
call
movsl
mov
mov
cmc
mov
push
or
jl
cmc
sbb
mov
and
adcl
adc
mov
in
out
xor
xor
das
shl
aad
mov
leave
jle
xchg
push
sbb
mov
fwait
lods
sub
jp
or
jb
sbb
aam
pop
xor
lret
add
push
shll
inc
cmp
add
das
jae
jge
insl
sti
dec
mov
xor
movsl
add
push
scas
dec
cmpsl
cmp
fsubl
jns
pop
jmp
lea
data16
mov
push
pushl
push
mov
dec
jo
stos
popf
cmc
or
sbb
lcall
pop
push
mov
jmp
jmp
ss
sbbb
in
push
push
add
notl
rcl
mov
sub
mov
cmp
and
add
mov
loopne
in
push
or
repnz
inc
lcall
dec
or
lock
sbb
outsb
lods
out
lods
rclb
aaa
push
mov
mov
pop
scas
mov
cs
pop
pop
pop
loopne
rorb
mov
mov
cmp
lret
das
adc
cwtl
lods
loope
xchg
enter
or
inc
leave
int3
std
rolb
movsl
dec
icebp
pop
mov
cmp
inc
out
mov
repnz
jle
mov
int3
sbb
loope
test
outsl
sbb
add
pop
pop
adc
adc
dec
mov
sub
and
and
js
insb
cmp
fwait
mov
adc
pop
inc
inc
cltd
xchg
int3
loopne
mov
lcall
or
cmpb
adc
mov
xor
fisubl
into
std
xor
cmp
xchg
into
inc
jns
jae
dec
rcrb
lods
mov
mov
test
mov
mov
jge
cltd
sub
push
movsb
inc
mov
scas
imul
lret
call
mov
or
cmpsl
ds
ss
scas
lcall
shll
shr
and
add
and
push
iret
push
cltd
push
hlt
sti
jge
or
xchg
stos
popf
push
mov
daa
mov
mov
int
fwait
xchg
into
pop
cwtl
pop
cltd
cltd
jp
jl
and
inc
push
mov
and
inc
test
dec
js
inc
jmp
sbb
xor
fstl
mov
dec
xor
mov
xor
in
and
idivl
cmp
jns
pop
mov
and
mov
adc
iret
xor
mov
lock
add
cmp
icebp
iret
addl
popf
outsl
jo
inc
hlt
inc
cs
mov
mov
mov
dec
popa
clc
dec
pop
jo
jo
fsubrs
mov
push
mov
stc
cltd
pop
mov
mov
pop
pop
cmp
stos
mov
inc
int3
sti
stos
cltd
icebp
mov
and
pop
orb
in
adc
dec
rcrl
incl
out
add
ss
xchg
std
inc
xor
mov
xchg
loop
daa
das
scas
jnp
clc
scas
xchg
mov
xchg
scas
mov
inc
stc
ret
adc
enter
into
into
adc
xchg
fwait
mov
adc
fdivl
jno
xor
scas
cmp
addr16
in
mov
cmpsb
into
and
pop
xchg
aas
repz
jecxz
loop
sbb
lods
sub
xchg
enter
mov
jp
popf
data16
sbb
push
mov
int3
outsl
push
outsb
insl
popf
xor
je
jl
jne
push
bound
mov
fistpll
sbb
xchg
adc
cwtl
add
mov
pop
ja
mov
test
andnps
scas
xor
pop
push
xor
sbb
and
and
add
jg
lcall
les
mov
call
xchg
xchg
inc
outsl
movsl
repz
mov
sub
push
pop
repz
lds
jg
sbb
dec
aad
cmp
sub
sub
cltd
jns
cmc
mov
sahf
pop
pushf
cltd
lods
lock
lock
mov
or
cmp
cltd
inc
push
bound
add
push
mov
mov
add
stc
sub
outsb
imul
cmc
pop
and
xchg
fldt
pop
movsl
xchg
icebp
ds
lret
clc
cmp
mov
int3
sbb
xchg
cmc
fiadds
add
js
mov
sub
xorl
pop
ljmp
add
and
in
dec
mov
push
mov
movl
clc
or
imul
popa
xor
inc
out
jl
jne
mov
mov
add
pop
xchg
out
fildll
sahf
leave
testl
dec
inc
sub
popf
mov
into
cmp
cld
stos
stos
faddp
cmp
in
cmp
adc
xchg
sbb
fwait
data16
jl
mov
cmc
test
loopne
cs
nop
jbe
push
addr16
jge
mov
sarb
sbb
lcall
push
push
movsb
mov
loope
pop
cmp
pop
into
inc
push
and
pushf
es
inc
mov
jb
xor
xchg
vmovupd
pusha
arpl
lret
int
sub
sub
cmpb
add
and
movsb
and
call
movsb
in
int
sahf
xor
sub
out
in
or
and
mov
mov
push
mov
out
mov
push
add
push
mov
sti
push
pusha
xor
jbe
xor
sub
enter
lea
ss
shlb
popa
jb
arpl
add
sbb
or
cld
loopne
push
push
leave
out
std
pop
jp
or
sbb
lods
fiadds
pushf
xchg
das
mov
xchg
pop
movsl
fcoml
arpl
cld
sbb
movsl
xchg
cs
cmovle
mov
std
xchg
pop
cmpsl
mov
dec
ljmp
shrb
inc
aam
jo
push
xchg
idivb
sbb
lahf
outsb
sti
ds
dec
lret
jo
pop
test
xchg
add
ja
rcrb
aas
mov
sub
test
mov
lods
cmpl
pop
gs
stos
add
jp
push
mov
sub
in
sbb
ja
dec
push
orl
xor
and
mov
test
test
mov
sub
pop
adc
je
inc
sub
mov
test
fcompl
mov
testb
subl
inc
cmp
mov
daa
icebp
push
in
sbb
xor
mov
inc
roll
inc
cltd
mov
add
pop
cmp
adcb
cmpl
mov
lods
add
dec
loopne
push
sbb
mov
aas
lods
leave
cmpsl
je
leave
fistps
aad
dec
arpl
nop
fwait
pop
mov
push
scas
pushf
shll
aas
and
icebp
jp
pop
in
pop
dec
lret
mov
sub
cld
loop
push
or
and
jmp
shrl
jns
test
or
int
cmpsl
pop
xor
xchg
pushf
dec
cs
push
pop
shrl
iret
mulb
insl
int3
sbb
shrb
or
in
pop
leave
cmc
xchg
jg
sub
ljmp
ja
push
sbb
dec
xchg
mov
xchg
fsub
and
scas
adcl
leave
cmc
lret
pop
and
sbb
shll
out
stos
sub
cmp
push
sub
and
lret
movsb
or
mov
add
ljmp
or
jo
lret
add
out
cmp
add
jl
pop
xchg
rorl
mov
imul
adc
inc
outsb
test
sbb
lret
es
cmp
fdivrp
aas
mov
inc
enter
pop
pslld
arpl
repnz
adc
mov
mov
dec
test
cltd
das
out
aam
out
pop
mov
cs
mov
shr
aaa
fwait
pop
add
dec
rcl
dec
ds
sub
push
and
mov
pop
xchg
add
fwait
dec
addl
ljmp
bound
cmp
or
add
dec
in
mov
aam
inc
gs
add
mov
xor
dec
js
pop
insb
int
mov
inc
pop
faddl
stc
ds
sub
lds
sahf
adc
cs
pop
add
mov
mov
adc
dec
cmpl
outsl
adc
cmp
in
insl
adc
es
pop
hlt
std
mov
push
scas
sbb
inc
mov
aaa
mov
test
lret
dec
cmc
dec
sahf
mov
out
iret
inc
xor
and
cmpsb
test
test
and
call
and
mov
call
out
xor
xor
rclb
and
fnstsw
push
fwait
cmp
xchg
lahf
cld
data16
mov
and
mov
hlt
pop
pop
mov
aad
jnp
mov
icebp
cmpsl
stos
call
fsubp
cmp
hlt
addr16
jno
lret
fcomps
es
dec
addr16
icebp
ja
sbb
pop
hlt
pop
inc
arpl
in
enter
sub
cwtl
mov
dec
jecxz
or
pop
jae
mov
jg
xor
and
inc
sub
cmc
inc
dec
movlhps
mov
inc
stos
pop
notl
add
repnz
lcall
push
add
subl
push
push
push
inc
mov
or
out
or
idiv
cmc
add
or
adc
dec
sub
sahf
fdivp
ret
pop
les
out
inc
ret
int
in
cmp
push
shll
cmp
rcrb
ret
mov
ss
mov
push
nop
mov
xchg
adc
popf
push
imul
inc
andl
cmpsl
jo
icebp
mov
pop
and
jb
and
xor
sub
jecxz
outsb
pop
int
aam
sti
inc
or
je
in
jecxz
mov
loop
lods
nop
dec
sub
and
popf
je
mov
fcoml
dec
adc
imul
inc
lea
mov
sbb
pusha
jg
cmpsb
das
cs
jecxz
xchg
or
jbe
mov
xchg
push
int3
je
mov
jmp
adc
mov
mov
mov
jo
jecxz
arpl
push
mov
cmc
sub
adc
loop
lods
test
call
insl
std
jmp
sarl
in
ja
clc
cmpsb
mov
outsb
icebp
cmp
arpl
inc
sub
sub
mov
pop
lock
cwtl
lods
cltd
in
xor
xchg
add
loopne
cmp
mov
scas
bnd
adc
roll
mov
cmp
push
cmp
aad
adc
aas
loop
pop
xor
adc
imul
aad
dec
mov
xchg
jns
rolb
hlt
rorl
call
mov
ror
rcll
pop
inc
xchg
sarb
mov
enter
sbb
mov
xchg
xchg
popf
fcompl
xchg
dec
cwtl
xchg
xchg
roll
push
adc
jbe
adc
rcrl
or
adc
pusha
add
mov
popa
sti
in
mov
fbstp
jno
cli
repz
loop
lahf
add
pop
mov
mov
insb
mov
sub
testb
xor
mov
jmp
popa
lock
add
adc
loopne
dec
addb
enter
movsl
mov
dec
jbe
xor
fdivrs
sbb
shrl
divb
add
lret
jmp
lret
inc
es
mov
mov
arpl
mov
ds
push
not
testl
loop
mov
repz
in
addr16
xchg
dec
fucomi
add
leave
rol
xor
or
dec
cmpl
cmc
mov
int
out
pop
out
mov
push
lods
aam
shr
fildll
mov
dec
xor
out
xchg
sub
mov
add
cmp
lods
sub
sbb
pop
inc
loopne
popf
jmp
add
push
fisttpll
outsb
repnz
lds
iret
jns
inc
ficoms
icebp
daa
pop
jno
aas
and
into
repnz
xchg
outsl
or
lea
sub
test
xchg
imull
daa
jge
loopne
testl
mov
loop
mov
adc
fdivs
orl
jmp
xchg
jge
push
shrb
cmpsb
mov
lds
mov
cltd
jae
cmpsb
xorl
movsb
loopne
aas
icebp
mov
aas
cmp
sbb
call
out
ljmp
sarb
movsl
adc
xchg
pop
cmp
mov
fisttpll
addr16
jae
scas
ljmp
or
movl
pop
fsubrl
lock
out
push
add
enter
test
pop
lahf
mov
and
icebp
fdivrs
fadd
lds
push
cld
roll
or
into
call
dec
sbb
lock
gs
inc
cli
dec
data16
xchg
mov
stc
and
mov
cmc
xlat
fidivl
icebp
cld
push
inc
in
sbb
cli
dec
xchg
je
xor
xor
aas
mov
mov
sbb
leave
subl
mov
jp
xchg
adc
and
and
movsb
mov
cwtl
mov
addr16
test
lcall
push
add
pop
or
jecxz
clc
hlt
pop
icebp
lods
pop
cmp
mov
shll
add
ja
mov
pop
mov
adc
out
notb
jbe
mov
dec
mov
out
xor
sbb
cmpsl
push
hlt
lret
test
dec
and
cli
inc
pop
fs
repnz
xchg
in
mov
sbb
xchg
add
ret
cwtl
push
mov
movb
repz
int3
mov
lea
jg
arpl
xchg
int3
lods
je
test
push
inc
cmpsl
push
xchg
push
dec
unpckhps
mov
pop
je
aad
xor
dec
add
fimuls
adc
sub
xlat
push
jmp
mov
xor
mov
mov
decb
aam
add
lock
push
leave
push
add
std
push
dec
loop
and
pop
mov
orb
clc
push
mov
push
lcall
jg
inc
dec
inc
out
lods
jns
bound
xchg
arpl
inc
aad
js
mov
adcl
stos
je
inc
or
je
jp
cmp
pop
aad
idiv
imul
xchg
mov
icebp
out
mov
nop
add
xor
sbb
dec
addr16
sub
jb
and
outsl
loopne
adc
out
addr16
xlat
loop
and
iret
xchg
leave
fimuls
fwait
inc
mov
or
mov
add
cmp
and
ret
or
data16
push
sbb
add
or
out
stos
push
push
dec
mov
dec
mov
push
or
or
or
lahf
clc
subb
popa
fwait
cs
aam
pop
jecxz
xchg
loop
push
add
data16
out
xchg
loope
addr16
xor
divb
mov
sub
rolb
fiadds
popa
icebp
jo
xorl
sbb
xchg
push
loopne
mov
mov
int3
les
stos
inc
xchg
dec
jg
mov
dec
das
adc
jp
jb
ljmp
push
outsb
add
dec
cmp
insl
and
dec
inc
sahf
adc
push
jle
pop
pop
jecxz
pop
pop
enter
mov
in
cmp
add
pop
or
cmpl
dec
sbbl
fwait
and
fdivp
adc
pop
jb
call
insl
ret
pusha
rcl
mov
cwtl
adc
or
mov
xor
je
push
jmp
movsb
xor
mov
je
or
xor
fiadds
mov
mov
loope
fstpl
push
sub
enter
mov
jns
xor
xchg
loopne
mov
pop
pop
fisubrl
mov
dec
pop
outsl
shlb
jle
repz
push
sbb
xor
xlat
xorb
push
dec
xchg
rorl
arpl
dec
push
pop
xor
sbbb
mov
inc
sub
loop
add
sbb
test
in
fistpll
js
sbbb
movsb
out
ret
cld
loopne
fsubrs
fsubr
bound
roll
mov
and
fdivrs
fnstcw
or
inc
xor
daa
jp
enter
xlat
in
mov
jo
adc
sub
shr
cmp
cwtl
mov
divl
mov
push
mov
pushf
sub
inc
cmpsb
insb
adc
lds
enter
pop
mov
mov
dec
out
mov
arpl
sbb
daa
inc
aaa
or
test
std
in
xchg
scas
mov
sbb
dec
sbb
cltd
jo
mov
imul
popa
ret
xchg
push
inc
lock
ficompl
movsl
adc
jmp
shrb
mov
mov
jns,pt
loopne
pushf
pop
loope
ljmp
inc
out
scas
or
pop
ret
jnp
lret
add
dec
inc
movsl
aas
mov
add
pop
adc
mov
and
jmp
sbb
jnp
adc
pop
sarb
jne
mov
ss
push
lods
or
push
in
inc
jne
cmp
mov
out
in
add
call
sub
fcmovbe
pcmpgtb
cmp
lret
dec
jae
cmpsl
jmp
xchg
add
jb
test
in
xchg
or
enter
leave
std
into
roll
movzbl
mov
mull
dec
xchg
scas
dec
out
pop
mov
pop
xor
jns
fcompl
pop
and
add
cli
sbb
lcall
adc
jne
das
mov
mov
clc
jle
adc
movsb
arpl
mov
test
cwtl
js
push
or
dec
or
pop
lcall
fdivp
ret
popf
stos
hlt
pusha
mov
jle
dec
xor
cmpsl
mov
out
outsl
outsb
and
cwtl
jmp
aam
jae
or
cmp
push
loop
outsl
incl
cwtl
flds
test
mov
adc
fildl
addr16
je
jl
outsl
scas
jmp
sbb
sarl
add
add
ja
cmp
mov
call
pop
rorl
sub
loop
scas
aaa
cmpsl
movsb
or
dec
dec
xchg
das
repnz
push
and
sahf
insl
adc
xchg
int
and
in
out
or
das
fbstp
mov
mov
ss
mov
jge
fidivl
fidivrl
mov
dec
je
cmpsl
arpl
add
cmpsb
push
lret
cld
push
lds
mov
test
cmp
lcall
sbb
prefetch
push
fsts
popa
and
int3
leave
aam
in
mov
mov
push
adcb
mov
jns
out
pop
add
out
sub
inc
push
std
repnz
ret
lods
dec
inc
imul
ljmp
push
mov
call
mov
cmp
xchg
dec
pop
cmp
adc
xor
std
mov
js
inc
or
decl
out
cli
push
sbb
mov
jl
sbb
xchg
insl
loope
sbbl
pop
jge
lcall
repnz
outsb
fs
fstps
pop
push
add
xor
movsl
sub
aaa
iret
shrb
sbb
stc
push
mov
lods
xcrypt-ecb
cmpsl
mov
in
aad
nop
lcall
xchg
fsubrs
arpl
call
fldcw
mov
adc
out
mov
jno
hlt
mov
arpl
mov
push
mov
stc
jmp
adc
dec
imul
mov
mov
xor
mov
stos
leave
popf
push
push
xorl
rorl
outsb
adc
xchg
mov
test
inc
gs
mov
cmpb
mov
dec
jno
mov
dec
je
xchg
mov
sub
mulb
push
sti
mov
adc
dec
mov
jae
out
sub
sub
cmp
cmp
out
sub
mov
sti
push
sbb
loopne
flds
adc
shlb
sub
idivb
in
sbb
pop
fdivl
iret
xor
fists
lret
repz
adc
inc
cmp
mov
push
les
out
lcall
arpl
pop
inc
leave
fcompl
inc
jmp
sbb
pushf
add
outsl
inc
adc
sub
cmp
push
inc
mov
sub
stos
mov
jnp
adc
jno
cmp
and
mov
jb
dec
clc
xor
out
mov
into
fnstsw
and
or
push
ja
sub
adc
push
mov
xchg
lret
cmp
adc
pop
add
dec
jne
mov
call
nop
xor
sub
cld
dec
and
enter
adc
rolb
divb
xchg
mov
jno
mov
std
repz
dec
mov
stc
sub
incb
pushf
fldenv
and
sarb
leave
mov
aam
leave
out
mov
dec
inc
fimull
gs
mov
arpl
push
cld
fsubr
mov
mov
mov
es
dec
mov
out
xlat
pushf
fnsave
and
xchg
test
mov
stc
push
das
cs
mov
repnz
cmp
push
test
fidivs
xchg
inc
fstps
fdivs
sub
fwait
nop
mov
imul
sub
xchg
enter
rclb
in
sarb
std
scas
loop
adc
in
lock
sbb
idivl
insl
cmpsb
or
mov
shl
xlat
lock
sbb
imul
xor
rclb
insb
adc
xor
sahf
mov
add
mov
add
lea
cmp
and
test
shlw
frndint
adcb
lds
mov
cmc
cld
sub
ja
xlat
inc
test
cmpsl
mov
in
fbstp
mov
icebp
sub
lcall
or
scas
jecxz
or
lock
dec
ds
add
call
ret
test
xchg
cltd
xchg
xchg
outsl
mov
lea
inc
jmp
sar
jmp
dec
daa
pop
out
pop
mov
jl
mov
xchg
inc
dec
or
cmp
fcoml
lahf
cmp
xchg
xlat
or
xor
push
pop
pop
jno
out
cmp
daa
cwtl
push
inc
dec
ds
xchg
imul
xor
dec
js
lahf
sbb
je
adc
inc
jp
lock
mov
out
in
sub
hlt
pop
add
lds
aas
fwait
sub
pop
repz
cmc
push
push
xchg
cld
das
pop
stos
pop
xor
fimuls
mov
push
mov
mov
out
xchg
mov
lret
pop
fadd
shl
insl
pushf
jmp
push
xchg
cld
fistpl
pushf
ret
scas
mov
pop
and
movsl
leave
xor
push
jne
les
cmp
xorl
das
or
andb
sbb
cmp
dec
mov
mov
push
pop
js
push
inc
and
adc
xor
jnp
mov
mov
and
xorb
stos
outsl
es
gs
mov
sub
rorl
test
les
test
pop
movsb
mov
lods
cmp
mov
sbb
imul
add
mov
add
mov
xor
xchg
push
jbe
scas
adc
imul
leave
les
cmp
sbb
sahf
cmp
cmpsl
sar
push
jle
mov
pop
sbb
into
nop
sahf
or
sbb
push
sahf
in
or
jne
add
dec
mov
les
jbe
popl
cmp
adc
fs
push
mov
fdivl
insb
add
in
adc
add
xor
sar
dec
and
popf
mov
mov
jae
mov
sarl
loopne
scas
shl
dec
adc
inc
pusha
cs
stos
stos
cmp
movsb
cmpsl
pushl
outsb
mov
push
notl
out
dec
push
dec
xor
popa
nop
test
push
mov
movsl
int3
sub
andb
testb
es
mov
mov
stos
pop
and
mov
test
or
rcll
call
ss
mov
mov
mov
push
test
sub
ljmp
adc
sub
jmp
psraw
xcrypt-ctr
cmpsl
sbb
mov
sbb
pop
mov
push
adc
into
add
call
mov
or
push
inc
mov
stc
andl
add
sub
stos
rcrb
sub
loope
push
mov
dec
pop
loopne
cmpsl
aad
popa
idiv
add
jp
out
push
push
fs
pop
mov
es
mov
cmp
mov
stc
addb
bswap
leave
pop
popf
adc
cmp
mov
sarb
add
add
test
jmp
test
arpl
push
jae
mov
add
fstps
mov
js
and
clc
or
cltd
inc
pop
testl
mov
add
bound
adc
xor
jb
jecxz
sahf
sbb
hlt
add
in
fadds
jb
fdivr
pop
scas
leave
pushf
call
out
pop
pop
ss
mov
add
inc
sub
mov
xlat
cmp
rolb
pushf
dec
jg
test
lods
xorl
xchg
fildll
mov
sub
rcll
adc
add
sub
inc
ss
test
mov
cmp
cmp
nop
lahf
mov
or
stos
cmp
sub
adc
out
loop
shll
sbb
add
inc
aaa
loop
scas
lea
or
mov
xor
loop
or
or
push
cmpsb
pop
cmpsl
add
jb
cmpb
jns
mov
inc
xchg
dec
fcomps
cmpsl
add
fdivrl
adc
dec
jle
gs
std
les
out
pop
pop
jbe
aas
ret
mov
jge
and
cmp
sub
sbb
xor
jl
ret
je
mov
adc
sti
stos
imul
daa
int3
sti
cld
fdivr
mov
fadd
loopne
cmp
in
sbb
sub
testb
mov
daa
jns
cmp
mov
xchg
cld
inc
les
mov
or
loope
pop
push
std
xor
xor
out
loope
push
jp
or
cmpsl
std
sub
push
mov
push
push
stos
xchg
push
xchg
test
jecxz
push
add
mov
loopne
pop
bound
sbb
out
mov
dec
xor
iret
jmp
sub
cli
inc
sbb
scas
adcl
xchg
pushf
mov
daa
mov
stc
xchg
loope
icebp
enter
aad
push
bound
xorb
adc
std
mov
daa
jl
jl
in
cmpsl
aad
and
je
test
jge
hlt
jle
adc
js
cmpsl
inc
test
push
dec
data16
aaa
sahf
pop
sbb
aam
sub
aad
imul
gs
fucomp
int
and
mov
cmp
fstps
aaa
inc
aaa
orb
data16
punpckhwd
test
stos
dec
mov
dec
mov
pop
movsb
adc
fs
adc
addr16
rorl
enter
das
shr
xchg
sarl
shl
rcrb
mov
ss
mov
jb
and
pop
subl
ljmp
xor
sbb
cld
fsubl
mov
in
jle
mov
adcl
outsl
clc
arpl
add
add
int3
das
and
xchg
add
pop
insb
and
hlt
mov
mov
add
ret
sbb
dec
inc
push
xchg
addl
dec
sbb
mov
sbb
jno
mov
adcb
add
mov
push
orb
scas
ljmp
aas
fcoml
call
dec
cld
repz
mov
ret
push
push
loope
jae
test
pushf
jb
add
cmp
test
mov
pop
lods
and
aam
sbb
mov
push
jae
rorb
cmc
cmp
mov
jg
outsl
or
jne
test
sbbl
inc
sbb
mov
inc
jo
gs
ficomps
add
cmpsl
jg
lahf
decl
and
inc
sub
sbb
xchg
push
and
cld
sbb
mov
fcomps
mov
daa
jae
scas
fs
add
pop
lds
dec
test
cmp
insb
cmpsb
test
add
icebp
enter
pop
in
lds
xchg
add
imul
cmpsl
inc
sub
test
mov
mov
into
sub
mov
int3
pop
pop
repnz
jbe
mov
imul
jmp
adc
adc
xchg
mov
in
scas
lds
cmpl
mov
pop
sbb
iret
loopne
dec
lcall
mov
ds
loopne
adc
pushf
int3
mov
out
out
imul
mov
pop
cmp
mov
mov
and
jmp
add
mov
dec
out
pop
fisubs
rclb
pop
adc
pop
push
jno
rcll
or
outsb
in
xor
push
add
dec
push
jo
inc
xlat
sub
xchg
loope
inc
pusha
loop
dec
pop
mov
mov
notl
dec
add
push
push
jnp
inc
cmp
inc
ljmp
cmp
sub
out
stos
mov
add
push
inc
stos
inc
leave
and
push
sarl
and
mov
imul
mov
and
pop
sarl
inc
mov
loopne
xchg
jne
add
sub
fisubrs
mov
hlt
sub
xchg
push
repnz
inc
push
pop
jo
pop
jg
mov
pop
and
stos
shrl
add
ror
fisttps
xchg
movsl
movsb
inc
pop
mov
test
dec
andl
mov
call
shll
push
jecxz
pop
adc
fidivl
cmp
mov
mov
mul
add
lahf
out
or
aam
fst
xlat
aad
fdivrl
pushf
test
pop
sbb
call
or
testb
cltd
xchg
sub
call
jecxz
rcr
shlb
jnp
mov
and
inc
mov
jge
xlat
aaa
cmp
pop
dec
fldz
mov
jp
xchg
lds
adc
push
ja
sbb
or
out
inc
push
sbb
lahf
mov
add
int3
lret
orb
adc
ljmp
mov
mov
aaa
push
jbe
loope
aam
mov
cld
push
or
movl
dec
jle
es
add
push
cmp
fdivr
inc
sbb
sti
xlat
addr16
sub
mov
jp
test
ret
add
mov
orl
insb
push
out
sbb
cmp
push
push
popl
insb
mov
addl
outsl
rol
shll
cmp
sbb
xor
insl
cmp
mov
push
xchg
push
sbb
mov
nop
into
fs
dec
lret
js
inc
ror
mov
sti
in
mov
fwait
sub
jge
std
stos
pop
inc
mov
sbb
dec
and
xor
ret
pop
jg
rorb
sti
xchg
inc
stos
pop
int
sub
mov
push
ds
hlt
test
les
xor
fdivrp
cmp
sub
fistpl
ds
cmp
mov
pop
mov
add
icebp
xchg
clc
inc
in
adc
stc
ja
xor
bound
dec
xchg
or
loopne
hlt
fcmovu
mov
sbb
and
xlat
shl
ret
subl
int
movsl
push
push
ret
mov
mov
cmp
or
icebp
je
mov
pmaddwd
jg
add
leave
test
push
jmp
jl
icebp
js
paddw
and
mov
aam
cld
pushf
add
mov
mov
or
mov
movsb
enter
pop
push
mov
mov
icebp
test
and
inc
movsl
notb
cltd
test
dec
xchg
ja
pop
movsb
cmp
je
adc
imul
add
fwait
outsb
mov
xor
sub
jl
mov
adc
mov
aam
loope
xchg
or
and
leave
add
ss
mov
push
int3
sbb
xchg
outsb
adc
xchg
inc
jne
or
sbb
xor
sbb
xchg
jnp
xor
inc
xchg
aad
mov
sbb
test
mov
addr16
cmpsb
and
nop
mov
dec
sbb
add
mov
dec
pop
cwtl
cmpb
jmp
xchg
add
insb
neg
imul
scas
lock
rorb
fldenv
or
imul
leave
lds
cs
pop
xor
xchg
xchg
das
test
jb
out
lret
fsubrp
sub
cld
mov
inc
in
mov
addr16
pop
popa
roll
cld
push
sar
xchg
cmp
push
jmp
cmp
and
mov
jecxz
in
neg
pop
push
ja
in
je
scas
fcoms
cmc
push
movsl
cmp
and
mov
mov
mov
sub
fs
aas
aam
mov
cld
sahf
adc
push
jmp
xchg
in
xchg
rol
cmp
sbbb
popa
in
js
jnp
fimull
xlat
cli
loope
jae
mov
or
pushf
or
cwtl
push
sbb
shll
and
in
mov
jbe
add
shlb
cmp
adc
xor
adc
mov
jb
in
jg
xchg
sub
mov
leave
scas
mov
jg
mov
das
cmp
mov
mov
pop
aad
js
bound
stos
pop
inc
out
add
dec
xchg
add
iret
andl
rol
mov
in
dec
cmp
mov
jp,pt
test
enter
mov
inc
adc
cmp
dec
shlb
std
and
in
jmp
mov
outsl
jecxz
or
dec
mov
sahf
dec
cli
imul
mov
cwtl
sub
pop
test
adc
outsb
sbb
xor
iret
inc
fwait
mov
cmp
cmp
add
scas
sub
and
mov
lods
jge
mov
std
test
mov
and
inc
inc
loop
and
scas
xor
and
mov
test
shl
insb
sti
add
mov
push
faddl
adc
je
dec
add
aas
cmpb
out
fcomi
adc
dec
dec
test
dec
xor
fstpl
xchg
cmp
jbe
mov
inc
into
mov
xchg
and
data16
sbb
repz
lret
jb
dec
cltd
orb
test
and
into
jmp
fwait
cmp
hlt
pop
mov
mov
out
cmp
loope
adcb
cli
sub
lret
pusha
push
xor
aad
mov
or
out
pop
insl
lea
das
and
cmc
arpl
lahf
xchg
sbb
inc
sbb
jnp
sbb
cmpsb
xor
addr16
stc
sbb
xor
stos
push
mov
jb
dec
fnstenv
sub
xor
and
out
inc
out
push
xchg
mov
add
rcrb
pop
popa
jns
dec
mov
loopne
test
js
sbb
lds
pop
adc
push
into
test
lds
add
xor
sbb
sub
mov
fsubl
dec
xor
mov
in
cld
adc
or
pop
stos
xchg
xor
loop
push
sub
insb
cmpsl
jb
xchg
jnp
les
cmp
add
xor
cmpsl
pusha
jae,pn
sub
clc
sahf
fldl
ja
push
nop
subl
stc
cs
sbb
mov
inc
or
in
add
in
mov
xchg
ss
mov
and
mov
dec
add
ret
sti
cmp
sbb
cmp
cli
icebp
iret
add
lcall
mov
mov
mov
xchg
and
fldl
add
int
cmp
and
mov
bnd
fistps
jg
xor
fdivl
clc
xor
loop
mov
dec
lods
or
mov
cmp
inc
mov
in
pop
xchg
jge
xchg
sub
push
pusha
scas
fadd
sbb
xor
call
scas
and
pop
js
rclb
fisttpl
std
xchg
or
ficoml
seta
test
add
fimuls
mov
pop
ljmp
and
ds
shlb
pop
xor
aas
dec
out
cwtl
out
pop
mov
sub
in
or
cld
add
or
movsl
inc
arpl
sub
rolb
in
mov
lahf
push
xor
jnp
sbb
das
into
mov
hlt
lods
adc
gs
add
push
pop
shlb
sti
mov
dec
cmp
or
shr
inc
lahf
hlt
repz
gs
mov
jb
pop
cmp
push
loop
lea
xchg
les
ret
lods
adc
enter
jp
in
inc
out
pusha
leave
lea
pop
adc
das
cmp
js
jl
jp
pop
not
add
sar
cmpsl
xor
cmp
add
jno
fcomps
dec
cmpsb
pop
add
mov
inc
popl
pop
imull
cmpsl
test
outsb
and
pop
sahf
ss
sub
incl
dec
insb
pop
jnp
in
sbb
enter
aaa
aas
adc
inc
stc
and
sub
dec
xchg
push
cmc
int
sbb
cmp
popl
xchg
inc
sbb
scas
xorl
fs
mov
icebp
mov
jno
outsl
sbb
in
mov
fwait
scas
xor
in
cwtl
push
addb
into
xor
kmovw
mov
lahf
mov
daa
aad
xchg
imul
adc
push
adc
jns
sub
jo
pop
cs
dec
lock
shl
daa
cli
push
xchg
mov
mov
jle
jge
out
aaa
mov
adc
and
in
repz
cmpl
mov
mov
insl
push
push
test
sbb
xchg
push
or
jno
or
jnp
jmp
jno
push
pop
mov
push
inc
mov
sbb
inc
and
pop
pop
and
imul
xor
test
inc
mov
jae
test
mov
gs
hlt
cmp
cmp
xchg
mov
and
cmp
add
popa
xor
xor
dec
out
pop
lods
push
mov
ror
or
and
out
shrb
mov
in
sub
mov
mov
call
sbb
adc
xchg
sbb
call
popf
and
add
xchg
xchg
xor
jge
mov
lea
das
adc
arpl
sub
and
aaa
xchg
push
cwtl
adc
inc
mov
out
add
fmull
sbb
repnz
bsf
jbe
shrl
mov
mov
into
not
inc
xchg
xchg
sbbb
int
jo
and
adc
inc
xchg
aam
test
xor
mov
push
rcl
and
aam
or
inc
fistpl
cmp
dec
lret
aaa
sub
dec
add
cmpsl
test
mov
mov
ret
pop
inc
mov
cmpsl
sub
lds
loop
jb
out
aad
adc
in
int3
xchg
ret
jo
inc
loope
or
mov
cmpsl
sbb
filds
loop
adc
add
sarl
scas
jge
in
xchg
aas
icebp
mov
xchg
mov
pop
in
mov
iret
push
or
push
add
pushf
pusha
stos
pop
sub
aas
pop
inc
push
push
loop
mov
mov
add
add
stc
push
faddl
inc
call
arpl
add
mov
mov
add
push
xchg
movb
xchg
ret
and
adc
push
fdivl
adc
dec
sbb
adc
fmul
in
push
adc
pop
mov
sub
nop
mov
jecxz
stos
daa
jmp
cwtl
jne
xchg
jmp
sbb
sbb
sub
rcr
adc
inc
repnz
push
or
addb
pop
cmc
adc
scas
pop
dec
cmove
sub
and
testl
adc
xchg
repnz
inc
add
enter
adc
inc
pop
jle
sub
push
loop
pushf
mov
add
dec
or
movsb
inc
loopne
xor
mov
mov
cmc
out
subl
jne
cwtl
dec
in
ret
inc
mov
in
stc
xchg
pop
mov
jns
add
dec
rorb
mov
mov
xchg
push
lcall
les
pushf
xchg
into
insl
mov
leave
sbb
xchg
and
jo
jae
loopne
fimuls
mov
xor
bound
dec
pop
ja
pop
mov
pop
outsl
xor
xchg
push
xchg
xchg
sbb
outsl
mov
push
fsubrl
cltd
mov
or
lea
pop
push
aas
rclb
adc
leave
es
or
loope
inc
jle
fistps
lock
inc
mov
push
mov
scas
adc
movsl
push
add
repnz
out
push
cmp
mov
jge
out
ljmp
mov
add
ljmp
test
in
xorb
adc
pop
mov
lahf
loop
out
cmpsb
xor
xor
loope
and
movsb
dec
pop
add
add
mov
push
rclb
test
mov
xorb
adc
adc
dec
lcall
or
and
xchg
cmp
mov
dec
jl
clc
fidivrl
adc
mov
or
int3
or
arpl
aaa
repnz
cmp
sub
data16
and
stc
enter
cs
je
repnz
cmp
mov
add
rol
int3
add
inc
popf
test
decl
and
aas
fcompl
xchg
sbb
cmpsl
stos
cmc
shld
popf
cmp
pop
mov
into
adc
push
xchg
mov
pop
sub
adc
sub
push
pop
jo
jmp
mov
or
adc
cmpsl
cmp
fcmove
or
out
pushl
add
cmp
mov
mov
aad
out
rolb
scas
sbbl
xchg
es
pushf
xor
jne
push
movsl
arpl
inc
jecxz
dec
popf
push
sbb
pushf
mov
fcom
das
in
cmp
in
cs
enter
pop
idiv
xor
mov
push
lahf
add
mov
jmp
adc
rcrl
pop
ljmp
imul
scas
pop
and
lret
inc
in
mov
stos
cwtd
jp
leave
fs
xchg
mov
lock
or
enter
imul
add
es
push
sbb
push
rorl
or
sub
sub
jno
push
inc
and
insl
cmp
add
cltd
cmp
adc
push
popl
pop
inc
inc
les
ret
or
and
cmp
popf
daa
pop
addb
push
es
loope
subb
add
lock
sbbl
sub
xor
cmpsb
inc
sbb
cmc
inc
sub
aaa
shlb
mov
sub
scas
push
ss
push
xlat
mov
inc
jbe
or
lods
mov
inc
pop
jp
jb
mov
mov
inc
jno
shlb
sbb
xor
in
dec
inc
test
es
enter
scas
test
mov
mov
inc
push
stos
in
fsubrl
and
ljmp
cmpsb
std
enter
or
ret
mov
ror
adc
pop
rcrl
mov
repnz
pusha
fndisi(8087
rcll
cmp
add
xor
mov
pop
cli
cmp
mov
cli
push
stos
dec
dec
sub
call
or
mov
jb
repz
pop
fsubrl
cltd
sbbb
push
cmpsb
add
into
or
push
adc
sub
add
cmpsl
clc
je
lock
mov
mov
jns
int3
pop
stc
outsb
cs
in
cmp
push
lret
adc
lcall
or
cmpsl
sti
scas
dec
inc
push
sub
cmpsb
dec
cmpps
and
in
leave
inc
cmp
stc
inc
daa
repnz
and
movsb
jae
test
mov
mov
push
das
sub
idivb
xchg
data16
mov
add
push
nop
jle
or
mov
xchg
add
xchg
pop
aas
ljmp
push
cwtl
aaa
call
and
out
push
cmpsb
loop
push
jae
push
add
push
stos
inc
outsl
cs
adc
dec
aam
popf
fdivs
popa
outsl
adc
sub
out
mov
pop
fdivrp
fcompl
iret
psubsb
push
das
mov
sub
pop
mov
stc
sub
jne
js
repz
fnstcw
adc
mov
jbe
lcall
pushf
mov
fistps
stos
adc
mov
push
sbb
and
inc
std
repnz
xchg
pop
hlt
ror
jne
inc
int3
jecxz
shlb
cld
sub
adc
popa
or
stos
xchg
sub
cmp
mov
sahf
jp
and
lds
sub
fdivr
sub
insl
push
adc
sahf
jl
adc
loope
jns
xchg
xor
nop
stos
sbbl
pop
dec
cli
and
test
test
repz
lret
xor
jae
outsb
sub
add
pop
pop
or
shlb
pop
mov
ficomps
repz
jae
mov
jne
jns
and
or
mov
jecxz
loope
pop
jae
stos
and
cmp
xor
mov
jl
fcompl
daa
push
push
rcr
xor
sub
dec
int3
hlt
cmovae
ret
jg
shr
mov
in
jne
dec
fisubs
lcall
fsubr
add
insl
clc
enter
or
int3
pop
and
repz
add
mov
popa
int3
mov
and
mov
movsl
lret
lods
fildll
mov
out
adc
clc
push
out
jg
push
jae
inc
and
jge
mov
cwtl
rcll
int
test
sub
sub
fwait
xchg
ljmp
or
repnz
cs
add
neg
cmp
push
mov
adc
adc
adc
add
push
std
cmp
inc
fildl
cmp
andl
call
lcall
insl
loopne
or
dec
loop
inc
cmpsb
aas
jo
fidivs
mov
loope
xlat
push
or
ss
sub
inc
rcrb
mov
mov
bound
adc
and
neg
push
nop
cs
inc
jb
mov
push
xchg
cmp
push
and
mov
mov
dec
fiadds
jns
test
jb
int
jae,pt
frstor
mov
pop
das
out
dec
loope
in
das
jae
js
lock
sbb
ret
mov
aad
push
xchg
sbb
mov
addl
mov
add
movsb
fmull
cltd
and
xchg
dec
mov
fucom
or
gs
mov
lods
out
imulb
enter
xor
mov
or
mov
inc
jle
pop
pop
pop
mov
xchg
sbb
jle
cmpsb
fxch
add
mov
test
sbb
xor
into
lea
xchg
xor
mov
mov
ret
nop
roll
and
insl
stos
jmp
ror
sbb
test
daa
or
sub
inc
mov
and
into
xor
sub
jp
lock
mov
lcall
in
mov
test
gs
rol
sbb
mov
adc
fists
into
sbb
popa
sub
lahf
push
test
imul
jo
mov
inc
shll
in
subl
addl
xchg
outsb
int
fmul
inc
add
insl
sbb
lea
or
cmp
iretw
mov
shrb
jl
subb
lds
aas
hlt
inc
pop
inc
sbb
movsb
cld
movsb
es
adc
and
dec
push
mov
scas
aas
sub
dec
xchg
pop
icebp
leave
add
jg
arpl
cmp
pop
mov
jge
jmp
arpl
adc
loope
add
mov
pop
sbb
popa
inc
pop
xor
inc
sarb
fsubs
repz
mov
mov
cmpsb
frstor
xchg
ret
fs
shl
xchg
jno
sub
pop
lds
or
out
loope
mov
add
xchg
push
test
leave
ss
fwait
ret
mov
xchg
xor
jae
mov
xchg
or
cmp
pop
adc
xor
mov
ret
cmp
sub
adc
lcall
cmp
gs
push
mov
and
scas
jnp
cwtl
sub
lcall
push
in
mov
push
pushf
mov
fsubl
lret
mov
fsub
aad
push
sbbb
pop
or
cmpsl
test
shlb
mov
lock
into
mov
lcall
enter
add
mov
scas
or
mov
add
js
daa
in
sub
mov
fildll
xor
push
fadd
shrl
push
fcoml
ljmp
stc
adc
lea
and
jo
dec
in
aas
testl
pushf
cmpsl
data16
mov
push
push
jle
xlat
lcall
imul
add
inc
outsb
pop
out
mov
neg
imul
scas
movsb
cmp
and
in
xlat
mov
sub
fdivr
mov
push
pop
les
inc
arpl
add
int3
int3
push
lret
sti
sub
xchg
iret
arpl
out
out
mov
jo,pt
sub
notl
int3
aaa
inc
imul
cwtl
mov
bound
insb
test
testl
add
xchg
pop
mov
lret
in
adc
dec
or
fstl
loope
push
dec
cs
es
sub
rcrl
div
aas
sbb
mov
adc
test
sbb
xor
or
fisubs
cmp
pop
iret
dec
mov
mov
push
add
xchg
push
pop
push
or
int
lcall
push
pop
mov
and
leave
add
jmp
push
sbb
popa
push
orl
jle
in
jge
dec
std
mov
push
nop
loope
scas
ficoms
add
jp
lea
add
lret
and
cli
repnz
jge
mov
pop
bswap
cmp
test
add
lret
cli
lea
sub
sub
sub
shl
outsl
outsb
outsl
xor
mov
pop
fs
arpl
lea
pop
cmp
jle
mov
mov
dec
fisubrl
outsl
pop
stc
pop
inc
ror
out
push
imul
cmpsb
mov
push
test
xor
mov
adc
dec
ficoms
fstpt
leave
xchg
adc
in
cltd
mov
rclb
cwtl
test
scas
jne
sub
sbb
push
cmp
out
push
pop
insb
idivb
lea
leave
arpl
mov
dec
popf
adc
cmp
loopne
xchg
pop
jecxz
cmp
pop
or
popa
fsubl
push
xor
test
loop
aas
xor
out
mov
ficompl
xchg
mov
xchg
xchg
fimuls
gs
das
scas
push
mov
dec
hlt
hlt
sbb
orl
sbb
and
fcomi
lahf
mov
xorb
andb
loopne
stos
jb
inc
in
std
arpl
cmpl
call
inc
lahf
xlat
dec
jne
ficoml
mov
cmpsl
mov
mov
jno
push
repz
sub
je
lea
mull
les
out
pop
cwtl
mov
adc
and
and
xor
sub
sti
xor
and
add
add
ds
fldcw
sbb
addr16
cs
or
dec
repnz
sbb
arpl
ror
xor
idiv
mov
sbb
dec
into
xchg
adc
jne
fstps
into
les
repz
xor
add
cs
mov
cmp
sbb
xchg
jmp
roll
ret
stos
xchg
jmp
andb
daa
in
int3
jecxz
scas
mov
xor
jbe
push
and
mov
mov
sbb
xchg
push
pop
xor
ljmp
add
fwait
jge
inc
cmpsb
xor
and
shlb
jecxz
test
insl
out
pop
gs
jns
faddp
lods
adcl
inc
insb
add
loopne
jmp
sarl
xor
cmpb
xor
jns
stc
or
dec
xor
daa
cwtl
xor
into
or
inc
sahf
cmc
add
subb
xchg
xor
movsl
pop
inc
lcall
lahf
dec
jle
jg
into
sub
std
mov
cmp
cmp
movsl
mov
sbb
jle
stos
or
push
bound
jbe
lcall
outsb
bound
mov
shlw
repnz
pop
clc
add
in
arpl
arpl
repz
xchg
adc
bound
repz
cwtl
test
jmp
lea
inc
cmp
imul
sub
gs
out
enter
ret
aad
hlt
ds
or
outsl
dec
pop
sub
sub
stc
jecxz
jmp
imul
nop
mov
into
mov
dec
or
insb
out
popa
sbbb
das
mov
les
xchg
cli
mov
jl
insb
cmp
xchg
adc
sahf
xor
cmp
js
cmp
cmp
dec
into
add
inc
jnp
dec
fbld
leave
divl
jo
shlb
jo
sub
stos
aas
aas
mov
aas
push
adc
mov
mov
fildl
and
pushf
and
cmpsl
inc
outsb
nopl
int
aad
mov
test
test
in
jl
push
xchg
pop
test
mov
orl
push
push
fwait
inc
jge
rol
hlt
cmp
jg
testb
and
and
mov
sub
mov
adc
out
adc
inc
jne
add
sub
dec
inc
int3
push
stc
test
cmp
sbb
add
dec
stc
push
dec
dec
jle
cmp
les
sbb
test
adc
xchg
cmp
int
or
inc
xchg
scas
loopne
call
jne
out
mov
cmc
call
add
inc
add
cld
dec
das
and
jae
incl
movsb
inc
pop
mov
push
fisubrl
repnz
push
mov
ret
adc
or
push
pop
ja
loope
les
nop
add
mov
jmp
lock
pop
and
lret
push
pop
inc
mov
aaa
loopne
add
xchg
sub
mov
push
fcoms
dec
mov
push
jg
mov
adc
pop
and
jns
mov
or
notb
jle
adc
test
pop
jl
ret
mov
jbe
sbb
lea
dec
adc
jno
pop
mov
das
imul
jg
push
int
push
xor
jle
mov
adc
mov
jge
pop
subl
xchg
xlat
clc
dec
push
addr16
pop
mov
scas
pop
loopne
mov
mov
popa
mov
decl
lahf
inc
xchg
jo
xor
push
mov
sar
dec
pop
js
sbb
or
rcll
or
loop
and
jmp
dec
mulb
xchg
mov
cmpsb
lret
mov
dec
mov
cmp
mov
mov
jnp
bnd
xor
int3
mov
push
cmpsl
enter
or
add
imul
fwait
jp
push
and
jecxz
mov
push
jnp
mov
and
daa
imull
push
sub
lods
sti
sub
or
repz
jno
es
int
imul
push
ja
aad
pop
lahf
inc
arpl
or
nop
gs
pop
jmp
cmp
pop
lock
aam
fdivr
insl
push
lea
xchg
or
sub
enter
je,pn
push
stc
les
inc
dec
push
test
nop
nop
hlt
pop
test
lds
and
fwait
repnz
es
int3
sbb
lahf
pop
sub
pusha
lcall
add
lods
ja
decb
mov
mov
int
inc
sub
jnp
push
out
mov
pop
jo
jae
daa
sbb
fldenv
mov
dec
inc
fidivrs
cmp
leave
push
pop
pop
gs
arpl
pop
inc
push
je
jno
xchg
lret
mov
shrb
call
adc
into
jl
sbb
ja
mov
idivb
dec
pop
mov
push
push
idivb
xchg
xor
stc
mov
sbb
fabs
inc
mov
cmc
loop
lahf
imul
xchg
add
or
inc
jle
call
aaa
into
xor
scas
test
mov
jl
cs
sti
mov
mov
stos
test
aaa
xor
scas
push
pushf
cmp
or
mov
mov
mov
das
out
scas
fdivrl
int3
scas
pop
pushf
mov
das
inc
repnz
in
out
mov
and
and
mov
loop
or
push
mov
adc
push
std
les
mov
out
clc
pushf
cli
lcall
pop
outsb
insl
aam
mov
movsl
inc
cmp
push
flds
add
rolb
mov
mov
cltd
ds
mov
mov
sbb
jmp
mov
push
push
dec
in
cltd
jnp
movsb
aas
inc
negl
push
or
lret
push
pushf
loopne
sbb
dec
add
mov
jp
decb
xchg
pop
xchg
std
fbstp
push
xchg
jl
in
cli
sbb
add
js
mov
adc
add
xor
out
pop
adc
notl
aaa
sbb
out
out
jle
pop
jecxz
adc
outsb
lods
ror
inc
jo
jmp
push
fidivrs
dec
into
xchg
hlt
mull
int
int
adc
inc
loope
add
cld
repz
imul
pop
inc
mov
inc
test
hlt
lods
push
rcrl
out
out
jne
int3
imul
stc
jo
dec
dec
xor
les
sbb
add
pop
add
into
or
inc
jns
sub
test
sub
and
xlat
or
enter
sti
lahf
pop
rcrl
push
pop
movsl
mov
dec
xor
mov
pop
cmp
imul
xchg
xor
cli
mov
add
xchg
dec
orb
mov
ljmp
dec
xor
xor
dec
and
sub
xorb
inc
adc
ss
jnp
test
stc
push
cwtl
test
jne
mov
int
movsb
clc
stos
and
loopne
test
add
mov
je
sti
aad
mov
test
adc
fwait
aas
jne
std
jle
rclb
imul
xor
loopne
xchg
in
mov
and
shlb
jle
lods
loop
fadd
jns
movsb
push
test
insl
inc
insl
fsubrl
sbb
xchg
mov
xor
in
lret
sbb
fisubl
pusha
ja
cwtl
sub
cmpsb
cmc
push
imul
cltd
movsl
cmp
lret
loop
cmpsl
inc
mov
notb
int3
movsl
stc
lea
dec
int
mov
inc
jae
icebp
inc
mov
test
aas
push
push
sub
mov
adc
sub
fsubl
insl
or
call
xor
inc
add
xor
add
dec
shrb
pop
mov
dec
sbb
int
test
test
ss
mov
cmc
mov
lret
lret
inc
test
mov
or
fstps
inc
jl
cld
pop
and
fmuls
ja
repz
mov
lods
mov
das
sbb
ret
push
ja
idiv
dec
mov
dec
iret
dec
xchg
or
mov
or
loopne
in
inc
ljmp
lods
adc
mov
push
cmpl
in
cmp
jne
sbb
incb
call
inc
jmp
inc
mov
rclb
mov
sub
jbe
xorl
in
push
xchg
lds
fnstcw
push
cld
repz
jo
add
into
fucomi
std
adc
cli
and
pushf
addr16
imul
decl
scas
pushf
shrb
test
and
sub
push
aam
push
dec
sub
push
loopne
dec
add
stos
into
pop
inc
in
add
xor
ljmp
mov
push
cmp
or
sub
pop
jo
cmc
cltd
and
or
add
int
add
lea
call
je
adc
sbb
stos
and
das
xchg
adc
sysenter
inc
mov
jmp
mov
jnp
xor
pop
push
test
pusha
int3
fs
pusha
mov
pop
mov
lds
push
pop
out
inc
adc
mov
cmp
stc
fnstsw
pop
in
sub
xlat
popa
pushf
mov
sbb
sahf
jbe
lcall
dec
and
mov
shll
mov
and
mov
and
xchg
jl
add
in
lahf
mov
into
in
xchg
sub
mov
mov
ss
insl
lods
aas
jnp
dec
imul
mov
jmp
imul
add
inc
mov
inc
mov
cmp
out
cmp
add
test
inc
dec
sarb
outsb
pop
shlb
sub
cmc
cli
incb
decl
inc
insl
pushf
int
and
cli
inc
cmp
insb
popa
cli
and
outsb
pusha
repnz
xchg
fstpl
pop
cmc
loop
sbb
daa
lea
imul
mov
ss
sub
cltd
cltd
push
jnp
popa
lea
add
push
xchg
sbb
or
jns
sbb
jp
push
mov
test
ficoml
insb
mov
lret
imull
popa
xchg
fbstp
sub
dec
and
stos
das
mov
aam
push
xor
repnz
cmp
stc
imul
or
test
test
into
insb
popa
ret
jb
mov
mov
xor
xchg
cs
iret
dec
add
fildl
pusha
cmpsl
cmpl
stc
push
ja
loop
fsubl
adc
mov
inc
out
and
or
push
addr16
sahf
and
popa
insb
xchg
ss
jbe
sub
movsb
jge
lds
fsubr
xor
loope
jmp
mov
and
jae
push
jmp
aaa
push
xor
dec
xchg
in
mov
sbbb
lods
xchg
xorl
xor
jne
dec
popa
leave
int3
movsl
in
test
xchg
jo
pop
gs
insb
shll
loopne
cmp
inc
adc
loop
dec
in
add
loop
cmp
clc
xchg
loopne
or
scas
xchg
jle
mov
scas
sti
xor
clc
ret
add
mov
sbb
scas
inc
jbe
fs
push
adc
mov
push
push
mov
lcall
sub
pop
aaa
xor
out
call
xchg
push
pop
hlt
inc
mov
mov
mov
lea
fnstsw
test
lret
mov
pop
xor
xor
pop
sub
andl
jge
scas
sbb
push
rcll
pop
inc
push
repnz
fcomip
pop
and
in
pop
sbb
call
mov
adc
sub
xchg
mov
adcb
cmp
in
mov
xbegin
xor
test
cmp
mov
leave
dec
sbb
ffreep
cmp
sub
push
int
push
fs
dec
dec
andl
aam
or
xchg
push
jg
cmp
dec
inc
les
rorb
adc
xor
sub
fwait
jne
adc
xor
int
fs
notl
les
sarb
xor
fdivrp
jns
das
and
sbb
rcrl
cmc
xchg
xchg
loop
dec
mov
sbb
sbb
pop
cmp
and
lea
fstl
leave
insb
sub
iret
add
mov
cmp
sbb
push
sbbl
nop
aaa
mov
pop
cltd
sub
sbb
out
fiadds
mov
and
test
jp
fnstenv
leave
mov
adc
push
jno
test
iret
rclb
inc
out
pushf
adc
mov
fs
xor
hlt
mov
hlt
fcomi
repnz
outsl
out
cmp
ret
cmpsb
lods
mov
movsl
cmc
inc
and
subl
cmpsb
das
fdivrs
dec
in
test
pop
add
lods
jne
dec
stc
fcomi
push
add
sub
sti
jns
mov
pop
insb
nop
jns
push
shll
sbb
xchg
pop
dec
ljmp
xor
les
pop
pop
cmp
mov
xor
ds
inc
inc
aaa
add
mov
and
pop
xchg
pop
jmp
mov
int3
outsl
pop
lds
ffreep
mov
pushf
push
dec
fdivs
repz
mov
inc
pusha
push
mov
insb
add
jo
sbb
push
push
in
test
or
add
pushf
repz
lret
push
sub
call
int
xchg
mov
push
sub
aaa
mov
cltd
mov
or
dec
jnp
pop
add
mov
lods
jecxz
inc
rclb
and
js
outsl
divl
cmp
add
push
fisubrl
xchg
icebp
xchg
ss
jecxz
jnp
mov
mov
pop
ror
test
mov
mov
jns
xchg
test
add
xchg
mov
scas
in
mov
aam
xchg
adc
out
int
add
or
xchg
cmp
rcll
adc
or
cmc
outsl
das
xchg
or
xorb
cmp
popa
fidivrs
jmp
sub
test
mov
xor
sbb
and
mov
mov
mov
inc
xchg
out
int3
das
push
test
sar
xchg
xor
cli
movsl
fmul
movsl
lea
in
pop
xor
jnp
push
dec
push
sbb
inc
sarb
xchg
mov
frstor
fistpl
in
cmp
repnz
out
pop
fcmovu
daa
aam
inc
and
cmp
ret
in
jmp
xorb
popl
mov
mov
adc
daa
add
fisttpl
ljmp
pop
mov
pusha
pop
push
cmpsb
mov
xlat
sub
pushf
into
and
pop
mov
inc
ret
sahf
push
push
imul
jb
mov
xchg
cmpsl
lods
xchg
pop
or
cld
cmp
cmp
mov
add
ret
fwait
or
ret
add
fsubs
rcrb
mov
push
mov
scas
jo
hlt
je
incl
movsl
insb
mov
push
out
dec
pop
xor
inc
jp
mov
hlt
das
cmp
adcb
sbb
jp
sti
jg
addr16
out
pop
mov
aad
cmpsl
adc
mov
mov
push
adc
adc
loopne
mov
mov
push
ret
push
mov
incb
adc
xchg
xorb
and
cmpsl
fnsave
xchg
std
lret
add
je
sar
sub
and
jg
mov
test
lock
ljmp
leave
jne
xchg
adc
out
cmp
imul
and
xor
leave
inc
fstpl
inc
stc
push
lods
xchg
cmp
sub
enter
push
imul
leave
xchg
sub
mov
mov
scas
pushf
cmpsl
test
movsb
cwtl
inc
jecxz
loopne
push
orb
test
inc
add
sbb
xchg
lea
fistl
or
in
push
sub
shrl
insb
xchg
sbb
jle
xchg
stos
testl
mov
xor
mov
icebp
pop
lcall
inc
pop
mov
sub
aam
fsubs
mov
jae
or
jbe
mov
lods
aaa
pop
test
inc
scas
sub
xor
xchg
cld
sub
jp
sub
mov
gs
shlb
repnz
cmp
push
adc
xor
pop
repz
xlat
jle
inc
and
faddl
cmp
xchg
test
std
xchg
test
in
mov
lock
test
incb
jb
sub
jle
cmovbe
insb
sub
popf
pop
jne
gs
push
cmp
inc
dec
pop
ret
adc
xor
pop
addb
ret
icebp
shll
add
xor
fbld
sbb
and
aad
repz
not
fistl
sbb
cmp
lret
aaa
aam
dec
xchg
rorl
pop
and
cmp
pop
mov
mov
pusha
pop
scas
sbbb
cmp
or
inc
xchg
cwtl
jno
inc
gs
sub
in
leave
mov
les
pop
adc
sbb
or
mov
mov
xchg
mov
gs
into
inc
ss
add
add
push
push
pop
stos
test
sub
roll
mov
lds
inc
sbb
pop
mov
test
pavgw
icebp
mov
mov
fcoml
in
mov
inc
xor
add
and
aad
cs
sbb
or
andl
repnz
out
and
pop
sbbl
mov
std
bound
rclb
pop
add
mov
mov
ret
clc
xor
nop
scas
mov
adc
out
cmp
je
data16
mov
jns
inc
pop
fbstp
push
mov
xchg
pop
sbb
push
sbb
hlt
pop
fmull
jge
je
push
inc
stos
jno
jnp
das
out
fidivl
add
cmp
roll
pop
pop
xchg
mov
ljmp
xor
jns
iret
inc
imul
xchg
sbb
cs
repnz
fst
sub
stos
xlat
push
pop
jg
sbb
pop
inc
inc
xor
out
outsb
lods
mov
and
dec
xor
cmp
aas
sti
jne
dec
inc
jmp
dec
ret
sub
cmovp
cs
add
xchg
mul
gs
xchg
mov
xchg
mov
cmp
inc
sbb
jmp
inc
popa
jge
lods
xchg
cmpsl
jg
outsb
adc
sub
mov
xor
aaa
insb
int
insb
cmp
fnstcw
idiv
out
xor
or
fldcw
sbb
mov
cmpsb
sub
lret
cmpsl
add
add
test
loopne
jge
mov
icebp
mov
cmpl
ret
xor
cmpsl
in
insb
rcrb
pop
xlat
and
call
inc
adc
int
mov
xchg
push
or
mov
mov
ja
push
rorb
xchg
pop
hlt
mov
push
jne
pop
nop
push
icebp
je
loop
lcall
leave
sbb
push
adc
aas
stc
mov
mov
xchg
faddl
clc
pop
push
aaa
mov
stos
test
and
jnp
cwtl
add
push
lcall
push
data16
add
lds
daa
sbbl
mov
out
adc
jmp
push
dec
add
and
scas
test
mov
inc
rcll
icebp
sub
into
pop
je
pusha
adc
mov
mov
nop
les
ss
pop
das
lret
mov
stc
out
in
and
unpcklps
fldenv
sbb
sbb
loop
jns
movl
sub
mov
lret
into
and
imul
std
and
dec
nop
dec
push
mov
rep
insb
ja
push
ret
cld
pop
mov
jg
jno
shlb
sub
in
inc
pushf
jb
dec
adc
pop
push
or
sub
dec
mov
mov
sbb
movsb
mov
pop
in
repz
cli
push
imul
ret
dec
push
fninit
rep
push
inc
mov
insl
into
imul
pop
outsb
and
adc
arpl
push
mov
ud2
mov
xchg
outsl
and
cmp
jb
fdivl
pop
xor
cld
and
cmc
cmp
push
int3
push
push
clc
sbb
imul
icebp
enter
jecxz
or
sarl
stc
ljmp
fnstsw
adc
jb
add
push
ja
pop
mov
inc
mov
mov
clc
notl
pop
fcomip
mov
repz
push
ficompl
in
xlat
add
pop
out
mov
xor
mov
push
add
cmc
push
addr16
mov
andl
or
xchg
jl
or
xchg
xor
and
pop
cmp
insb
inc
pop
pop
mov
nop
inc
jecxz
icebp
adc
add
sub
jp
xor
repz
xor
insl
je
test
xchg
sub
std
fmul
inc
push
mov
sub
leave
cli
xlat
hlt
mov
xchg
inc
es
movsl
sbb
ficomps
icebp
paddusb
mov
sub
dec
std
inc
cwtl
in
cmpsl
jmp
pavgw
pop
pop
mov
fnstsw
fwait
jp
shrl
lds
ds
iret
mov
sti
mov
testb
gs
std
lods
testl
dec
call
sub
rcrb
ljmp
ret
mov
mov
mov
pop
mov
sub
inc
in
dec
jbe
pop
lret
lods
or
filds
mov
add
insb
ror
int3
adc
mov
inc
xchg
xlat
add
push
enter
sarl
lahf
dec
sub
and
ret
fwait
dec
jmp
inc
iret
fwait
add
jo
push
jno
mov
mov
cmp
mov
mov
orl
push
out
nop
sub
int3
in
push
or
and
xor
adcb
xchg
dec
cltd
popf
sub
and
xor
and
add
or
jns
aam
fmulp
into
enter
fwait
inc
sbb
bswap
jae
mov
repz
enter
mov
mov
jecxz
cltd
pusha
mov
add
loopne
dec
mov
inc
repz
icebp
ja
jmp
mov
cmp
call
negb
adc
xchg
dec
and
das
xchg
aaa
shll
sahf
sub
sbbl
push
add
into
shl
inc
xchg
aas
comiss
ljmp
mov
xor
cmpsl
add
mov
sub
cltd
jb
jg
mov
icebp
or
pop
xor
dec
pop
idiv
push
popa
adc
sbb
aaa
mov
jnp
out
fildl
mov
jns
push
icebp
xor
mov
add
inc
jmp
and
xor
loop
pop
push
and
sbb
cld
movsb
jecxz
fidivl
movsl
movsl
jbe
dec
mov
jnp
fistpll
mov
add
pop
lcall
out
setbe
dec
leave
or
popf
dec
das
cmp
cmc
sub
pop
scas
xchg
inc
mov
xchg
pop
cli
inc
aas
pop
insl
sub
xorl
mov
mov
aad
bound
push
repz
add
mov
fsubrs
lcall
mov
push
shll
adc
jns
mov
pop
sub
or
jo
iret
loope
test
ljmp
adc
push
movsl
testl
push
push
push
or
dec
les
or
push
fs
mov
mov
imul
pushf
fsubrl
js
lahf
cmp
xchg
xchg
pop
xchg
pop
xchg
cltd
rorl
jb
mov
xchg
es
xchg
enter
push
inc
movsl
fcoml
pop
dec
jle
add
fdivrp
adc
sarb
pop
xlat
pop
push
cld
pop
les
mov
std
testl
icebp
js
add
fstpt
outsl
pusha
pop
nop
scas
adc
dec
ret
aaa
xor
outsb
xchg
mov
mov
mov
fdiv
jge
xchg
outsb
pop
inc
sub
push
mov
cltd
mov
push
or
pop
daa
lea
scas
push
popl
xchg
push
negb
add
or
mov
push
lret
cmpb
in
jge
mov
test
xchg
loop
pop
jb
adc
adc
psubd
int
aas
mov
jnp
pusha
add
test
fwait
jl
cmp
imul
xlat
or
sub
dec
sbbl
test
mov
cltd
lods
cmp
js
test
push
out
movsb
xchg
sti
shll
test
das
xchg
lcall
arpl
fiaddl
sbb
and
mov
inc
and
mov
arpl
fwait
mov
mov
jnp
inc
fst
insb
fistps
lret
mov
aad
repz
mov
and
or
xor
stos
add
pop
xchg
pop
cld
sub
jle
cmp
incl
pop
pop
xchg
fsubl
jg
rcll
cmpsl
push
push
icebp
xorb
or
inc
sub
add
xor
loopne
vmovaps
jmp
adc
push
cmp
xor
test
push
ljmp
insl
push
cltd
outsl
fwait
push
int3
inc
das
loop
jmp
fadds
mov
shrl
fdivrs
sub
mov
add
sbb
inc
push
pop
stos
lods
cmpsl
lods
and
cld
into
cmp
inc
xchg
sub
push
or
int
test
andb
add
add
clc
cwtl
mov
test
pop
sar
addb
inc
dec
push
push
xchg
mov
pop
cmp
in
test
cmp
xchg
jo
sbb
pop
push
mov
cmp
and
jl
lret
dec
lcall
test
jg
jecxz
sbb
push
popa
sti
inc
js
xor
mov
pop
in
sub
mov
dec
arpl
push
cld
das
mov
sub
or
mov
das
mov
cmp
sar
pop
jp
mov
cmc
std
mov
inc
pop
dec
jmp
or
daa
dec
iret
lahf
iret
rcll
sub
adc
mov
cmp
shlb
rol
mov
push
inc
pop
aam
inc
xchg
xor
je
mov
add
cmp
jl
jb
fs
sarl
sub
mov
mov
stc
scas
add
out
jae
jb
xchg
pop
adc
aaa
cmp
shrb
jne
ficoml
mov
cli
inc
pop
add
rcr
mov
cmp
adc
or
pushf
out
or
push
add
outsl
lea
pop
std
stos
and
scas
inc
mov
xor
push
mov
jle
mov
cltd
cmp
cmp
or
in
push
push
or
lods
ror
fistl
pop
adc
movsb
in
mov
adc
icebp
mov
subb
cli
dec
mov
xchg
incb
out
push
adc
test
jbe
fcoms
loop
arpl
push
jge
out
out
or
xchg
gs
push
pop
inc
jnp
inc
sub
in
mov
mov
dec
loop
ret
ljmp
mov
xchg
jb
inc
push
mov
popf
jb
fisubrs
rorb
aaa
xchg
inc
mov
add
out
leave
ja
jg
mov
push
add
loop
rorb
add
punpckhwd
stos
jnp
mov
push
enter
inc
cmp
mov
lds
xchg
xor
test
and
cmp
mov
inc
pop
nop
shll
pop
arpl
ret
xchg
bound
dec
pop
jae
clc
call
xor
xor
pop
inc
rclb
pop
or
push
add
imul
push
jecxz
mov
cwtl
dec
xor
inc
xchg
xchg
jle
dec
jns
sub
mov
shrl
mov
push
push
fmuls
js
divl
js
scas
stos
jecxz
inc
fsts
dec
xchg
out
add
xlat
pop
fs
pop
stos
nop
rorl
mov
outsl
xchg
mov
and
cli
les
js
fwait
mov
cmp
add
mov
les
add
push
call
mov
push
push
mov
test
xor
pop
sbb
push
int
sub
mov
ss
add
or
cmpsb
or
push
arpl
inc
cmc
fcoms
mov
in
in
std
sbb
push
xor
sbb
fisubrl
pop
aas
and
daa
lock
call
lahf
inc
jp
mov
cwtl
cmp
mov
fimull
jg
cmc
gs
inc
jge
pop
hlt
call
andl
adc
or
or
sub
ss
in
out
jae
aam
xor
sub
lods
enter
mov
mov
fistps
xlat
ds
mulb
stos
push
adc
pop
cmpsl
mov
mov
cli
movsb
push
mov
mov
stc
adc
mov
cmp
dec
fildll
push
stc
out
stos
push
jge
sub
jb
and
jbe
ficoml
lret
mov
adc
jb
push
out
jmp
adc
cmp
hlt
push
icebp
cs
outsl
xorl
or
jnp
int
outsb
mov
mov
mov
adc
call
or
aad
cmp
ret
fists
outsl
mov
out
cmp
xchg
roll
push
out
hlt
mov
lret
dec
adc
jge
leave
jo
clc
scas
cmp
adc
xchg
sbb
cld
xchg
adc
outsl
mov
in
filds
lods
xor
xorb
jl
cli
andb
mov
aaa
inc
push
gs
pop
xchg
notl
repz
mov
xor
pop
int3
cwtl
ror
mov
ja
add
push
pusha
pop
cmp
ds
add
jne
jb
mov
jo
adc
jns
imul
arpl
je
sbbb
or
lcall
or
ss
add
pusha
jg
cmc
in
inc
dec
add
sbb
jbe
jp
cmc
sbb
sbb
mov
pop
cmpb
aaa
xchg
jge
sub
popf
cmp
sbb
ljmp
pop
movsl
pop
repz
dec
ja
jo
stos
jns
and
out
adc
aam
jle
dec
xor
lock
jmp
push
pop
stos
bound
jno
jne
ljmp
out
push
lea
mov
cs
es
pop
add
adcl
imul
add
xchg
push
pusha
sbb
movhps
scas
inc
movsl
xchg
imul
fmul
stc
aas
sti
jne
loopne
pop
fcmove
mov
pop
arpl
adc
das
cmpl
jno
mov
dec
and
adc
adc
push
decb
cli
inc
sub
cwtl
dec
rcr
fsubrs
cmp
xor
cmp
xor
adc
scas
push
mov
push
or
sbb
pop
pop
es
jp
add
repnz
sahf
xor
sbb
pop
cmpsb
mov
jne
dec
lods
movsl
fs
push
pushf
mov
jbe
sbb
sbb
std
xlat
push
cmp
in
lds
jle
push
aas
mov
xchg
int
pop
test
in
orb
xchg
inc
cmp
in
jnp
xchg
push
xchg
movsl
stos
xchg
xor
mov
xor
adc
movsb
arpl
pushf
sbb
ljmp
jo
jmp
je
cwtl
push
mov
arpl
mov
add
push
inc
inc
hlt
pop
movsb
sti
or
sub
loop
into
jno
or
jecxz
cmp
sbbb
xlat
insb
xor
mov
xor
xchg
add
stc
cmp
int3
dec
mov
xor
pusha
sar
pop
sbb
push
icebp
pop
lret
or
push
sbb
lods
mov
xchg
adc
push
int3
bound
xlat
rcl
mov
fnstcw
push
push
mov
adc
mov
or
jmp
scas
shlb
es
icebp
mov
push
incl
pop
or
xchg
mov
adc
or
subb
adc
cmpsb
imul
test
jge
sbb
outsb
cmpsb
pop
and
jae
xchg
push
pop
mov
cli
push
imul
add
mov
nop
or
jns
or
sahf
outsb
push
sbbb
mov
mov
rorb
loopne
inc
push
push
or
fcmovne
jg
cmp
mov
jecxz
mov
xlat
mov
jns
pop
out
int3
enter
lods
xorl
adcl
sahf
jmp
add
sarl
or
mov
popa
push
cmp
loop
lahf
loopne
test
inc
sbbb
xor
outsl
push
sub
and
xor
fcoml
xchg
xor
sub
sbbb
or
pop
jl
mov
pop
cmpl
imul
ljmp
imul
sub
test
cmpsb
xchg
push
leave
pop
inc
cmp
pop
push
imul
inc
mov
lea
fstl
xchg
dec
loopne
jo
sahf
ljmp
mov
orb
mov
jne
js
adc
dec
push
push
call
cmpl
call
and
in
and
aad
imul
sub
es
jnp
sub
stos
fs
mov
cwtl
scas
in
dec
mov
add
mov
inc
cmp
pusha
pop
xchg
sub
inc
cmpsl
add
sar
test
dec
enter
lds
mov
lcall
mov
xchg
aam
sbb
lock
jmp
add
ss
fwait
dec
mov
jmp
mov
push
push
jo
mov
adc
pop
sbb
scas
shrl
sub
adc
test
inc
sbb
xor
and
adc
int3
sarl
lock
sbb
jle
scas
push
push
jl
icebp
mov
xlat
imul
shlb
dec
push
scas
das
inc
add
mov
adc
jbe
lcall
xchg
inc
imul
mov
sbb
or
inc
sar
push
in
loopne
pop
fldenv
xchg
and
jb
push
js
int
sub
or
add
lret
lock
imul
xchg
cwtl
xchg
insb
scas
arpl
pusha
mov
cmp
sbb
fwait
and
hlt
out
shrl
ss
fsub
int3
arpl
push
mov
aam
push
out
add
add
mov
out
stos
push
rorb
push
xor
inc
or
loope
clc
xchg
and
jno
pusha
out
xchg
jg
or
andl
cwtl
push
xchg
stc
cltd
out
xor
push
pushf
mov
aad
push
dec
es
cmp
xor
jnp
pop
dec
cltd
adcb
cmp
jb
and
mov
mov
das
ret
pop
ljmp
dec
lods
int
icebp
push
pop
sti
mov
test
or
daa
inc
scas
pushf
inc
push
notb
inc
es
rcrb
add
xchg
push
insb
test
out
sar
mov
mov
adc
push
out
shl
jnp
and
fildl
inc
mov
push
popa
inc
cltd
push
popf
jle
daa
or
sub
push
andb
adc
mov
jb
dec
mov
inc
pop
cmp
mov
pop
scas
xchg
int
add
add
loopne
insb
push
sti
hlt
dec
and
adc
scas
lcall
and
rcrl
inc
mov
popf
fwait
adc
mov
xchg
cmp
js
xchg
sbb
test
push
nop
in
fsubl
cmpsb
pop
loopne
imul
nop
jmp
mov
mov
dec
shrb
pop
int
mov
mov
aad
mov
call
and
mov
dec
pop
adc
data16
cld
movsb
repz
xchg
repz
dec
hlt
repnz
into
shll
inc
mov
in
cmp
aad
add
sub
rcrb
adc
xor
sub
fcmovne
xchg
jl
gs
dec
sti
or
jns
xchg
dec
adc
sti
fnstcw
shl
inc
hlt
fldl
shrb
popf
ljmp
test
add
sbb
cltd
outsb
lods
fiaddl
inc
call
lods
add
popf
lods
jge
shrl
in
icebp
clc
icebp
dec
movsb
sti
mov
bound
mov
frstor
aas
adc
hlt
inc
and
data16
aaa
fildll
mov
rolb
cmp
cmp
data16
jb
inc
mov
xorb
mov
imul
pop
hlt
gs
addr16
cltd
push
jle
add
adc
hlt
bound
xor
int3
out
test
pop
mov
lret
pop
push
add
mov
inc
sub
xchg
push
add
and
sarl
test
addl
pop
imul
inc
dec
hlt
xor
fwait
notl
dec
imul
shlb
sbb
mov
andb
xchg
jns
hlt
rclb
clc
das
jb
or
lds
in
dec
lahf
mov
out
rorl
repz
loope
pop
mov
test
inc
dec
mov
add
lock
jb
pusha
adc
imul
loop
and
pop
stc
mul
mov
imul
cmp
push
ds
jno
push
cmp
nop
fists
push
jnp
xchg
inc
pop
icebp
sahf
jns
arpl
mov
mov
sbb
out
jp
or
stc
add
pop
lret
enter
xlat
jg
repz
fcmovb
fwait
loope
xchg
arpl
dec
push
pusha
out
imul
mov
inc
lods
loopne
es
mov
inc
mov
dec
inc
cmp
lods
mov
or
push
cmp
lods
incl
cmp
sub
mov
add
addr16
into
pushf
pop
aaa
add
bound
lahf
mov
in
lds
dec
xor
pop
repz
push
dec
cmp
sub
sahf
push
sahf
mov
or
cmp
call
inc
push
xchg
xlat
push
lret
nop
pop
xor
fimull
cmpsl
lock
shrl
das
cmpsb
or
jmp
pushf
call
lds
inc
xor
sbb
add
mov
cmp
dec
ljmp
outsb
inc
data16
outsb
sbb
push
std
or
cs
jmp
jne
loop
and
imul
les
xchg
mov
push
sub
dec
jl
inc
or
xor
adc
push
cltd
cld
inc
and
mov
iret
or
pop
and
mov
and
mov
jge
std
ret
inc
push
stos
inc
inc
sub
xchg
pop
ret
pop
xor
mov
aas
fsubl
jbe
mov
mov
test
sbb
nop
mov
mov
mov
repnz
dec
fldenv
sbb
jp
fidivrl
jecxz
mov
pop
add
add
sub
lea
test
mov
es
pop
daa
popa
shlb
pop
mov
out
ja
and
test
cmc
movsb
or
pop
jbe
out
popa
inc
pop
repnz
adc
add
pop
sub
xchg
adc
repz
mov
inc
jno
test
push
sbb
repnz
in
and
inc
push
mov
or
aas
mov
inc
xchg
ja
hlt
xor
dec
lahf
mov
pop
fnstcw
mov
xor
dec
pop
ss
pushf
fldl
pop
inc
fdivl
repnz
es
jno
xchg
sbb
cmpsb
dec
mov
std
add
fidivrs
pop
mov
push
cmp
out
adc
and
and
icebp
pushf
into
je
xor
lods
inc
push
mov
int
das
xchg
mov
lahf
sbb
sti
imul
add
bound
add
imulb
inc
addr16
and
lcall
ret
jbe
loop
inc
xchg
xor
jbe
dec
push
adc
add
fcmovbe
jle
mov
inc
ror
sbb
jo
lods
xor
mov
pop
lret
lock
jno
sub
sahf
cs
push
add
pop
push
fnstsw
stc
jns
adc
jns
repz
pop
not
dec
test
addr16
jmp
ljmp
xor
clc
dec
shrb
jnp
imul
jecxz
jle
or
add
cmc
or
clc
insb
int
sahf
sbb
and
dec
sti
pop
gs
bound
js
int
add
mov
pop
repz
ret
or
pop
xchg
and
popf
shlb
mov
adc
adc
jmp
push
mov
fidivs
mov
jo
fadds
sahf
test
pop
jo
push
mov
imul
and
out
mov
in
mov
push
cs
jnp
dec
mov
cs
cs
push
inc
adc
in
pop
cmp
and
mov
mov
mov
jnp
or
test
mov
push
mov
cmc
data16
stos
inc
jns
and
xorb
fucomp
adc
call
lcall
movsb
lods
cmpsb
and
adc
iret
mov
mov
jmp
adc
pop
mov
mov
in
sub
fcmovnu
iret
out
xlat
out
cmpsl
jo
mov
or
or
rolb
mov
push
popa
mov
aad
loop
jne
add
mov
dec
inc
sti
repnz
sbb
xchg
pop
push
je
in
mov
jg
pop
imul
sub
rcrl
cmp
jno
adc
hlt
and
insl
dec
or
lock
adc
cli
ret
movsl
pop
add
push
imul
cmpsb
sbb
test
xor
arpl
add
lea
nop
scas
fsubrp
cmpsb
fwait
adc
and
rorb
in
xor
pusha
addl
adc
mov
ljmp
inc
popa
repz
daa
nop
std
and
bound
cmp
nop
cmp
aam
inc
cmp
push
mov
js
push
xor
xchg
shl
mov
imul
fisubs
adc
jecxz
in
jmp
add
mov
enter
pop
add
jb
push
sub
dec
dec
jp
aas
rcll
std
lods
fnstenv
dec
push
mov
sbb
pop
loopne
iret
mov
mov
inc
out
repnz
mov
mov
rcrb
ja
cwtl
mov
jne
fidivl
rolb
movsl
xor
ret
lret
gs
xor
inc
adc
mov
xchg
div
mov
sub
in
push
int3
cmp
stos
pop
out
je
xchg
rcr
cmp
sahf
and
mov
lcall
outsl
scas
pop
xchg
pusha
and
or
aad
mov
sti
mov
jnp
test
imul
aas
gs
stc
jp
gs
push
fdivl
ljmp
add
ljmp
inc
fnsave
jle
test
subb
cmp
cmp
mov
cwtl
imul
xor
cs
int
lret
dec
clc
hlt
xor
sti
mov
je
mov
call
scas
shrl
jmp
cli
sahf
dec
and
adc
add
adc
jbe
sub
in
ret
rcll
xchg
cmp
pop
inc
xor
pop
sub
loop
dec
adc
xchg
and
hlt
push
je
scas
xchg
xbegin
dec
idiv
bound
jae
loop
push
xchg
inc
mov
or
or
in
hlt
jnp
test
push
add
push
in
hlt
sub
dec
lock
sarb
push
cwtl
mov
cmp
pop
sbb
shlb
mov
jns
pop
xchg
orl
aas
mov
ficoml
dec
insl
jl
out
adc
pop
std
addr16
jae
mov
int3
pop
cwtl
sbb
push
push
cmp
sbb
ja
xlat
ror
mov
xor
add
xor
fwait
inc
movsl
push
sarl
pop
cmc
mov
int3
pusha
jne
mov
sbbb
pop
aam
fs
push
rolb
outsb
sbb
shlb
sahf
sub
repnz
push
cltd
enter
and
push
aaa
mov
sbb
icebp
or
or
jns
aam
adc
jp
add
mov
mov
push
jnp
xchg
movsl
or
sahf
or
hlt
lea
mov
mov
jnp
movsb
lea
xor
sbb
or
lret
mov
repz
cld
lods
and
test
aaa
xchg
mov
mov
jae
lret
into
jne
popf
cs
outsb
fisubrl
movsb
icebp
cld
jle
lods
cs
mov
popa
iret
into
jge
lock
sbb
int3
sbb
cwtl
cltd
enter
fucomp
shlb
add
jb
mov
jnp
xchg
jno
cmp
out
jmp
fidivrs
movsb
leave
sbb
les
call
arpl
lahf
pop
pusha
push
jne
inc
fiaddl
notb
cmp
test
loopne
dec
test
stos
add
out
push
cmp
jp
aad
adc
mov
cmp
sbbl
dec
inc
jae
mov
xchg
add
jbe
fnsave
cmpsb
mov
jnp
pop
mov
lahf
pop
pushf
cmpsb
nop
mov
ss
cmp
in
adcb
sbb
ret
inc
andb
or
stos
mov
mov
pop
sub
push
adc
lret
repnz
iret
adc
in
movl
mov
inc
dec
cmp
xchg
arpl
leave
xor
xor
mov
xchg
es
or
cmp
jo
shll
or
lahf
stos
loope
not
addl
cwtd
mov
ja
scas
es
mov
xor
mov
lods
inc
or
push
jno
ret
jp
mov
cmp
push
inc
add
lret
jb
stos
sbbb
movsb
xchg
loopne
test
das
imul
subb
imul
stos
jb
inc
fs
xchg
cmp
in
dec
jl
fisttps
ljmp
mov
ja
loope
dec
out
and
xchg
push
das
dec
jl
sahf
push
mov
fsts
leave
call
cs
jge
mov
or
pusha
adc
and
lock
and
add
xor
test
ljmp
ja
mov
int
add
add
pop
lcall
jmp
shrb
insl
in
dec
xchg
adc
outsb
repz
inc
xchg
cmp
int3
jo
fistpll
cli
jle
xlat
in
outsb
add
mov
jl
ss
mov
mov
push
scas
out
packssdw
dec
xorb
sub
mov
dec
push
cmp
gs
mov
pop
rolb
mov
mov
push
jg
mov
popa
popf
xchg
pop
xor
add
sahf
das
inc
or
push
adc
outsl
out
fisubl
push
mov
mov
sbb
ret
mov
sbb
sbb
not
aam
call
adc
adc
mov
ja
call
inc
ds
dec
ja
icebp
fcomi
ljmp
stos
push
jnp
movsb
test
int3
jne
sbb
loope
inc
sbb
push
mov
push
push
and
nop
push
movl
push
cmp
iret
mov
js
mov
jnp
pusha
adcl
movl
cmp
xor
sahf
out
mov
pop
testb
push
add
mov
xorb
push
jl
outsl
inc
or
mov
scas
jg
mov
sbb
xchg
rorl
inc
stos
int3
cwtl
ret
dec
xchg
push
jle
xor
sbb
pop
mov
outsl
sbb
shrl
push
ljmp
xor
jae
lea
add
push
inc
sbb
mov
shll
fldl
out
stos
lods
loope
or
jae
cmp
adc
mov
sub
sub
dec
or
aam
mov
stc
sbb
mov
sahf
add
and
popa
stos
outsb
test
lea
or
sbb
clc
push
test
xchg
xchg
outsb
cmp
cmpsl
cwtl
lock
mov
sbb
push
mov
movsb
scas
fidivrs
outsb
mov
jb
pop
xor
push
inc
cmpsl
popa
jb
fists
xor
ret
or
mov
leave
cmp
fwait
outsb
fldcw
jmp
stos
insl
ds
rol
mov
js
cmc
jp
push
pop
pop
adc
cmp
push
movsb
xor
add
add
inc
or
dec
xor
mov
jnp
cmp
inc
push
shll
out
sub
stc
popa
arpl
adc
mov
insl
enter
adc
adc
push
add
clc
scas
jg
addb
orb
mov
les
add
add
and
cmpsl
jge
mov
or
outsb
aas
pop
lea
jnp,pn
aad
andb
mov
testl
cmp
out
jb
dec
into
imul
sub
stc
add
std
into
insb
cmp
out
mov
popf
push
mov
addl
cld
movsb
pop
xchg
movsl
rcll
xchg
stos
jmp
sarb
popf
lahf
push
pop
dec
pop
and
xchg
js
in
lods
mov
pop
xchg
jle
imul
shll
dec
push
repnz
xchg
test
ljmp
pop
shrb
jno
divb
add
mov
jo
movl
jo
push
stos
sbb
pop
sub
or
sub
jge
flds
or
or
loopne
push
into
cmp
clc
mov
icebp
adc
push
rolb
stos
ljmp
mov
lcall
clc
popa
jmp
lret
add
rclb
or
repnz
cmp
mov
daa
movsb
cwtl
pop
shll
pop
xor
xchg
filds
inc
dec
in
sti
cmpl
int3
pop
and
push
das
dec
xorb
dec
pusha
jp
repz
dec
mov
test
sub
insb
addr16
cmp
das
pop
sbb
xor
mov
mov
inc
inc
popa
mov
mov
lods
sbb
in
or
lret
mov
jo
xor
or
mov
jecxz
gs
mov
dec
dec
jnp
jmp
cmp
dec
push
fbld
add
mov
aam
pop
xchg
mov
repnz
dec
push
and
push
mov
jne
xor
pop
xor
jbe
arpl
stos
ljmp
out
jns
adc
sbb
mov
or
or
test
push
mov
fabs
jbe
adc
jmp
and
fwait
in
sbb
mov
mov
cmp
out
push
sbb
call
mul
xor
lock
add
sbb
xchg
sahf
mov
or
frstor
mov
mov
cmovno
push
mov
jg
ret
outsl
pop
aaa
outsl
mov
inc
jbe
clc
add
imulb
das
aaa
adc
push
and
decb
out
add
jns
xchg
mov
adc
pusha
inc
leave
pop
push
ss
jle
push
push
enter
mov
jne
push
jno
mov
shr
mov
xchg
mov
pop
mov
inc
jnp
std
jg
adc
scas
mov
xor
mov
inc
loopne
xor
push
testl
xchg
sahf
test
push
ja
das
xchg
sarl
or
pop
dec
dec
push
in
jno
sarb
fisubs
add
dec
xor
push
out
adc
push
sbb
dec
adc
add
sub
cli
lret
xchg
fsub
mov
scas
cli
dec
popa
dec
lret
int3
and
fwait
push
loopne
je
add
in
shr
sti
mov
cmp
jns
adc
add
cmp
mov
das
jp
mov
xchg
and
pop
es
jl
xor
cmp
enter
sbb
ret
aam
mov
out
xor
loopne
or
or
cmpsb
xor
inc
loope
cmp
leave
adc
mov
pusha
orb
movsl
mov
les
adc
repz
jmp
mov
xchg
ss
add
add
dec
ficomps
sub
pop
pop
mov
adc
pop
sub
adc
sar
out
cmpsb
inc
rorl
cltd
in
cmp
ss
int
clc
fistpll
leave
xor
add
sub
inc
inc
cmp
pop
nop
cmp
mov
mov
jns
dec
sbb
push
inc
ds
bound
lret
imul
out
dec
test
cwtl
stos
leave
mov
in
std
cmp
ljmp
stos
sub
add
dec
pusha
sbb
push
addr16
roll
call
rorl
fidivs
inc
scas
sub
dec
incl
or
push
imul
sbb
jbe
je
mov
clc
inc
or
adc
out
repz
add
sub
test
testl
loop
ja
lret
dec
mov
loope
lods
dec
mov
push
jecxz
sbb
xchg
lods
adc
pusha
xor
lret
adc
lock
sbb
in
push
shll
out
int3
or
xchg
add
mov
mov
or
sbb
in
cld
push
outsl
jae
fwait
dec
incl
pusha
mov
mov
lahf
dec
jbe
fsubp
adc
inc
inc
adc
xor
push
imul
and
mov
ret
xchg
and
dec
testb
mov
mov
lret
inc
bound
ficoml
dec
lea
sbb
testl
lret
dec
rclb
aam
daa
imul
cmovs
xchg
fimuls
cmpsl
xlat
repz
sbb
test
jnp
repnz
dec
jge
notl
cmp
cmp
lcall
or
in
adc
inc
leave
adc
std
push
lods
inc
sub
mov
mov
lods
push
mov
add
fldl
cs
je
jno
shrl
xchg
cmp
xchg
dec
mov
jo
mov
mov
pop
sub
and
mov
xlat
sub
xor
daa
mov
xor
ffree
sub
mov
push
lea
sub
in
pusha
cmp
push
and
sti
push
push
xor
stos
inc
jb
jle
push
sbb
mov
xchg
mov
xchg
clc
push
and
sahf
adc
or
sub
add
pavgw
aad
and
push
das
add
dec
ljmp
jg
clc
cwtl
push
aas
mov
cltd
pop
mov
das
insb
lahf
adc
pop
es
mov
lret
icebp
push
sub
repz
je
xchg
cmp
stos
psrad
adc
jecxz
mov
inc
test
jmp
out
insb
xor
loope
fs
arpl
std
arpl
inc
aaa
popa
mov
icebp
aad
shrb
lock
leave
mov
cmpsb
insl
push
mov
sub
in
in
call
mov
stc
lcall
jp
ds
sub
or
jno
in
inc
xor
jle
sub
adc
aad
outsl
je
lods
xor
push
inc
ficomps
inc
iret
shrl
adc
pop
push
xor
shl
fcoms
test
sub
sbb
test
iret
and
sahf
mov
subb
aam
fisubl
mov
ljmp
outsl
push
cmp
ja
adc
mov
mov
dec
mov
or
push
jno
xor
aam
add
sbb
sub
je
ja
inc
mov
mov
repnz
jmp
lds
jl
lret
xor
sbb
roll
push
jg
pusha
pop
push
jno
les
mov
inc
cmp
cmp
scas
fwait
mov
jmp
divl
fs
lock
dec
shl
imul
cmp
xchg
sub
aam
push
inc
ret
push
loope
sahf
cmpsb
and
dec
arpl
stos
out
sub
and
out
cmp
scas
addr16
dec
fdivl
loop
cltd
stos
pushl
pop
movsl
fucom
fucomip
inc
jecxz
mov
xchg
sub
popa
sub
fs
mov
adc
inc
mov
rep
int3
sub
adc
jb
adc
xor
gs
out
test
push
adc
fimuls
pop
jnp
sub
sbb
adc
test
add
shlb
add
and
and
push
cwtl
mov
mov
arpl
jmp
xor
adc
mov
popf
lea
and
xchg
test
sti
mov
xchg
jne
push
add
stos
jle
pop
mov
mov
cld
dec
mov
xchg
jg
push
and
scas
sarb
enter
xchg
repz
mov
mov
in
add
hlt
adc
dec
test
fs
cmc
iret
mov
xchg
add
mov
outsl
imul
fists
or
in
push
daa
mov
imul
sbb
mov
and
xchg
mov
mov
jno
insl
dec
in
xchg
mov
inc
mov
in
test
add
ret
enter
je
scas
mov
idivl
test
pop
insl
lods
adc
sti
mov
lahf
and
mov
in
sahf
lea
mov
loop
test
andl
inc
int3
filds
push
push
cltd
das
inc
add
jno
icebp
outsl
rorl
jecxz
lret
and
mov
sbb
loop
pushf
xchg
lods
inc
dec
lods
and
stos
cmpsl
jg
jns
imul
mov
sysret
popa
sub
or
test
mov
stos
cmp
xchg
xchg
subl
and
adc
mov
xchg
pop
andl
dec
fistpl
out
push
jp
or
shrd
mov
inc
inc
pop
inc
aam
mov
pop
gs
dec
fdivrl
fcoml
dec
inc
aad
scas
jno
bound
mov
sbb
inc
scas
cmp
mov
cltd
test
or
fcmovbe
push
cld
in
inc
stos
push
push
push
stos
lods
fstpl
mov
add
lds
js
ret
sbb
or
out
push
jno
adc
js
jbe
popf
pop
pop
mov
push
lret
popf
fwait
mov
sbb
mov
sub
ret
gs
jmp
arpl
xchg
outsb
xchg
sbb
xor
pop
sbb
lea
idivb
jecxz
jnp
cli
dec
test
xchg
xlat
jg
test
xor
xor
cli
adcb
insb
xchg
leave
xchg
adc
inc
jg
dec
mov
jo
cmp
loop
inc
jl
sbb
sbb
inc
push
add
mov
lock
push
test
jmp
ds
rcll
xchg
sbb
xchg
push
sti
std
pop
sub
into
rol
jge
pusha
icebp
and
dec
pop
test
xchg
movsl
icebp
jbe
fsts
or
sbb
loopne
cltd
lock
dec
add
stc
xchg
dec
sub
cli
cmpsl
hlt
insl
hlt
loope
pop
fdivrs
push
inc
push
xor
sarb
fs
xlat
fdivs
push
in
faddl
jb
jecxz
ffree
fildl
aam
cmp
in
adc
pop
mov
inc
shl
inc
int
xchg
lock
and
jmp
push
out
lret
xchg
or
xchg
insl
xchg
xor
push
mov
push
and
mov
mov
adc
lods
sbbb
insb
test
insb
and
jae
mov
adc
ffree
jno
pop
and
adc
sarb
jae
push
jmp
stc
cmp
push
mov
xchg
fistpll
mov
adc
lea
cmp
push
sbb
push
jge
xchg
xor
jbe
xchg
shl
push
xor
cltd
push
ret
mov
imul
icebp
sbb
xchg
sti
mov
push
iret
pop
sbb
mov
inc
fnstsw
push
jae
push
fsubrs
add
icebp
in
shrb
fildl
js
adc
out
test
insl
inc
pop
push
insb
pop
xor
mov
addb
cltd
add
push
lds
les
data16
lds
dec
clc
mov
jmp
imul
cwtl
out
fwait
dec
push
inc
jno
inc
mov
out
out
aam
sar
jo
arpl
in
dec
fiadds
xor
daa
cld
mov
mov
dec
jge
mov
test
dec
addr16
out
xchg
or
test
mov
imulb
mov
pop
mov
mov
les
fs
cmpsb
xor
mov
das
roll
xchg
mov
iret
rcrb
loop
dec
pop
xor
std
and
scas
push
jbe
movb
shrb
mov
aam
adc
ret
xlat
out
adc
inc
stc
jno
inc
sbb
jno
inc
data16
aaa
scas
sbb
add
sti
sbb
outsl
xlat
push
pop
sahf
bound
pop
call
rcrb
leave
out
fwait
push
add
mov
fisubrs
mov
jnp
mov
mov
in
jae
mov
in
jo
nop
cmpsl
mov
inc
xchg
enter
dec
jo
out
pop
rolb
jns
out
sub
add
mov
adc
pusha
sub
rclb
jo
pop
sbb
cmp
outsl
sbb
push
out
leave
jecxz
sub
fcos
in
push
test
mov
mov
jge
cmp
lock
lods
pop
jns
xchg
test
mov
fs
js
xchg
and
mov
test
sub
xchg
mov
addr16
or
lret
aam
mov
fists
sbb
push
lock
fdiv
xchg
inc
repz
dec
out
and
and
and
notb
sub
jo
cmp
out
faddp
decl
fwait
popf
push
push
ja
outsl
add
pop
cmc
enter
and
inc
outsl
mov
push
lods
xchg
js
js
xchg
xchg
push
push
out
decb
jmp
add
inc
mov
mov
lock
jp
cmp
ficoms
cmc
jb
adcb
sbbb
mov
or
orb
ss
test
xor
xchg
pop
in
inc
cmp
mov
and
sbb
shll
xchg
ljmp
jns
pop
bound
fistpl
xor
fs
push
dec
aas
jnp
cmc
add
and
and
push
cmpsl
sub
clc
andl
mov
sbb
adc
ret
adc
mov
sbb
xchg
cmp
xor
or
cmp
cmp
fcoms
js
pop
mov
or
or
arpl
out
cmp
mov
fmull
fildll
mov
pusha
testb
sbb
mov
add
lods
mov
and
clc
and
fcos
sarb
and
arpl
sub
in
add
repz
xchg
stc
xor
xchg
mov
mov
pop
stc
pop
lods
xchg
cmp
aas
out
push
inc
stos
lret
sbb
movsb
mov
mov
push
add
xchg
mov
pop
pop
pop
dec
mov
in
push
fimull
jle
mov
stos
popa
lcall
fstpt
into
stos
fisttpll
sub
cmc
fdivl
loop
in
fistl
cwtl
pop
mov
in
movhps
and
push
ljmp
repnz
mov
push
or
mov
movsb
loop
mov
push
cmp
daa
rcll
nop
jmp
cmp
jle
xchg
ljmp
ficoml
aad
scas
leave
insl
mov
pop
mov
fisttpl
in
jns
or
xor
dec
rcll
mov
rclb
in
push
cmp
sbb
pusha
jg
mov
cmp
arpl
sub
imul
les
jmp
gs
daa
pop
data16
jne
pop
jnp
std
out
push
pop
mov
icebp
jl
mov
inc
sbb
imulb
cs
lods
dec
jnp
fs
xor
popa
pop
xchg
xchg
lods
sub
mov
add
cld
lahf
imul
xchg
cltd
int
dec
out
test
mov
cmp
insl
test
not
inc
mov
jle
loop
aaa
push
fildll
jne
lahf
stos
leave
inc
pop
pop
pop
add
jbe
sti
adc
jle
or
cmpsl
or
and
inc
scas
je
lock
and
xlat
in
xor
sub
enter
cmp
fwait
repz
rcll
stc
hlt
jle
sahf
jb
sbb
sub
in
pusha
aas
xchg
add
jl
jnp
mov
and
jno
mov
test
mov
int
xchg
mov
pop
clc
inc
clc
inc
mov
and
repnz
sar
or
lcall
fistpl
out
cmpsl
xchg
jo
std
fildl
push
shlb
orb
cmp
test
or
stos
imul
insl
xor
mov
das
lret
in
lods
mov
inc
mov
outsb
push
mov
dec
bnd
sbb
leave
cld
pop
and
scas
mov
sub
lds
xchg
aas
test
inc
and
out
add
adc
jae
pmuludq
js
add
clc
inc
and
sbb
lcall
test
or
xchg
lds
add
lods
test
mov
repnz
add
sub
or
adc
adc
fwait
shl
pop
lods
jle
std
in
fiaddl
sar
adc
outsl
cli
test
fidivrs
xor
and
sahf
inc
es
ret
insb
and
pusha
xlat
aam
push
add
mov
adc
shr
xor
out
pop
or
cmp
jo
hlt
sub
sbb
push
lret
cmp
jl
aad
stc
and
mov
pushf
stos
fdivp
push
in
fsubrp
sub
hlt
add
xor
inc
push
ret
xlat
add
mov
pminsw
and
cmp
dec
addr16
xor
add
or
mov
push
jns
ds
xor
jl
mov
lods
cmp
and
test
sub
xor
imul
mov
test
lcall
jl
sbb
mov
inc
xor
xchg
adc
loope
shrb
inc
and
mov
inc
pop
imul
mov
mov
ja
xchg
cmp
lods
mov
idivl
fwait
add
leave
mov
cmp
lods
loop
cmp
add
xor
add
cld
push
sti
popf
leave
fdivl
js
inc
dec
nop
or
test
xlat
fwait
mov
imul
adc
dec
aam
inc
sbb
test
mov
imul
test
shl
mov
pop
daa
mov
out
xchg
and
mov
roll
cld
lret
loop
testl
and
and
and
out
insb
cld
nop
pop
mov
sub
xchg
pop
aam
inc
int
pop
inc
movsl
lods
ss
fwait
das
cmpsb
inc
outsl
mov
leave
int3
mov
mov
arpl
je
sbb
in
pusha
mov
pop
jnp
icebp
out
loop
mov
inc
dec
dec
xor
dec
xchg
xchg
cmp
jbe
and
popa
ffree
andl
cmp
loopne
loop
push
sbbb
mov
ljmp
into
sub
add
clc
data16
lret
cwtl
std
aad
adc
ret
xor
push
sub
mov
push
aad
or
out
add
mov
mov
imul
arpl
push
adc
mov
daa
jge
add
mov
popf
and
pop
and
mov
fsubl
adc
xchg
cmp
xor
mov
adc
inc
dec
xchg
in
pop
mov
aas
mov
bound
push
movsb
int3
and
pop
clc
cmp
sub
and
repnz
sub
jl
incb
fstpl
mov
test
xchg
cmpsl
xorb
orb
fists
add
add
lock
nop
rolb
and
jmp
scas
inc
inc
mov
clc
dec
add
cmp
mov
mov
les
pop
stc
movsl
dec
push
sub
or
mov
or
stos
add
jp
lds
xlat
sbb
mov
adcb
pop
xor
daa
sub
sub
dec
js
mov
or
cmpsl
inc
dec
arpl
lahf
std
out
jb
sbb
out
inc
dec
xor
xrelease
jl
sti
sub
and
frstor
xor
insb
lds
sub
insl
subl
xor
js
test
in
lcall
mov
mov
mov
mov
mov
cmp
add
xor
je
lcall
aas
lahf
adc
jge
mov
ljmp
dec
fisubrl
adc
sbb
and
ja
sahf
push
mov
cmpsb
xor
lret
mov
in
negl
clc
out
aas
add
sub
mov
hlt
pop
jmp
jl
and
ljmp
jle
jecxz
add
add
roll
jae
outsb
dec
mov
push
pop
pop
movsb
sbb
stos
add
mov
movsb
jg
shlb
jg
and
lock
xchg
mov
jb
push
int3
and
mov
fcomps
js
xor
mov
js
and
xor
jl
inc
sub
lods
push
addr16
xchg
adc
xchg
ja
or
inc
or
repz
add
fs
lahf
adc
in
into
push
bound
mov
xchg
loop
lods
das
pop
fidivrs
test
dec
cmp
xor
in
mov
jne
push
xlat
jnp
mov
and
lcall
jb
pop
lea
or
popa
dec
scas
outsl
dec
fidivrs
inc
sub
xor
push
enter
mov
adc
mov
inc
push
test
lock
add
jle
icebp
sub
out
loopne
cld
and
jecxz
mov
imul
out
push
fwait
pop
out
add
rcl
jb
clc
out
aam
mov
orl
xchg
push
pop
lock
aaa
dec
ret
mov
jmp
sbb
or
and
mov
push
jmp
sub
aas
mov
sbb
pop
mov
jecxz
cld
push
pop
ret
aad
push
int3
xor
push
push
mov
loope
push
out
pop
cmp
repnz
push
mov
cld
add
and
insb
xchg
mov
aaa
inc
les
cmc
mov
js
scas
adc
lods
xor
adc
movsb
dec
cmp
dec
sbb
sbb
mov
adc
mov
cwtl
jle
sub
mov
ja
mov
jg
cmc
dec
push
decl
dec
cmp
push
movsb
xor
test
aas
inc
mov
mov
dec
pop
inc
sub
jns
add
inc
mov
dec
mov
dec
pushl
pop
push
jo
js
scas
dec
roll
out
mov
or
inc
push
and
xchg
outsb
out
mov
ds
xor
push
loop
fs
cltd
addr16
insb
mov
loop
div
fwait
rorb
aam
xchg
data16
mov
clc
out
popa
xchg
sub
push
dec
call
enter
daa
outsb
loopne
int
pop
ds
adc
mov
aaa
mov
mov
mov
pop
or
in
insb
sub
cmp
or
mov
div
lret
pop
pop
imul
push
shll
jle
decl
mov
sbb
jae
aam
enter
cmp
mov
es
xchg
push
mov
cli
std
adc
jae
sti
sbb
sub
or
popf
test
lea
xor
data16
roll
sub
in
add
sub
push
or
xchg
insl
pop
inc
jp
dec
mov
nop
jmp
inc
adc
jecxz
bound
sbb
pop
xchg
sub
scas
jl
sbb
lcall
and
loop
insl
inc
jecxz
mov
test
adc
negb
inc
test
pusha
jae
ret
push
fsubrl
adc
aad
loop
mov
sub
dec
stos
cmp
or
call
cmp
into
int
out
and
in
out
dec
mov
in
das
sbb
mov
jb
dec
jnp
mov
out
fstpl
adc
pop
or
mov
jno
jl
imul
call
lods
mov
cmc
std
jmp
mov
fcomps
ja
push
add
inc
mov
mov
xchg
stc
es
nop
and
hlt
daa
adcb
sbb
jecxz
leave
fsubr
lea
xchg
ss
js
test
xor
pop
es
cwtl
inc
gs
loop
cmpsb
or
mov
add
push
subl
pop
icebp
pop
jne
shrb
iret
sbb
sub
rcrb
mov
stos
xchg
jae
pop
mov
cmc
sbb
jle
sbb
fildll
cwtl
aam
cmp
adc
rorb
sbb
incl
mov
fdivr
or
pop
roll
cwtl
cmp
add
fcompl
shrb
sti
push
xor
jg
std
xlat
xor
es
jo
fdivrl
ss
mov
dec
shll
or
shl
je
incb
pop
xor
movsl
fdivrs
imull
aas
adc
sub
mov
pop
loopne
pop
inc
adc
xor
mov
jo
iret
cs
jne
or
xchg
cmp
pop
adc
paddusb
in
sub
push
ds
mov
loop
mov
mov
add
or
cmp
mov
outsb
xchg
inc
gs
jno
pop
clc
cmp
inc
xchg
aad
pop
stos
sbb
out
scas
sarb
sub
and
das
test
fnstcw
shl
stos
bndldx
fidivl
je
push
adc
lahf
outsb
aaa
inc
out
enter
mov
cmp
xchg
les
das
add
jne
daa
lcall
test
push
dec
lock
sub
fcomp
scas
jne
rcrl
popa
out
push
and
inc
sbb
push
dec
mov
clc
into
sub
adc
outsl
fnstcw
and
adc
xchg
xor
and
or
pop
mov
pop
rol
iret
jnp
cld
dec
mov
jecxz
mov
lret
pop
push
data16
push
fwait
inc
stos
mov
mov
in
cltd
fisubl
outsb
mov
lock
cmpsb
adc
push
enter
jp
dec
dec
mov
fistpl
cmp
inc
mov
dec
dec
xchg
cltd
fnclex
lret
sbb
sbb
std
adcl
jle
mov
push
adc
dec
lock
sbb
push
cmp
push
inc
pop
es
sti
popa
fldl
data16
xchg
inc
in
xchg
hlt
imul
pop
icebp
jecxz
fisubrl
stos
out
daa
fldcw
xor
pop
xor
adc
inc
jae
add
outsb
push
add
repnz
cli
or
shrl
mov
ror
andl
clc
nop
adc
mov
clc
loopne
fcmovu
daa
mov
imul
push
mov
pop
jge
into
mov
jmp
imul
filds
add
insb
nop
sub
jp
xor
rcll
cltd
xor
cmp
mov
xchg
or
mov
out
jbe
pop
mov
xor
or
sbb
xchg
sub
mov
jecxz
mov
sbb
xchg
jp
push
hlt
test
mov
aad
in
add
rorl
mov
pop
test
adc
cwtl
in
mov
sbb
xchg
mov
stos
or
inc
sub
mov
adc
lret
outsb
in
inc
dec
pusha
outsl
inc
sub
shrl
inc
xchg
jne
add
xchg
and
in
cs
xchg
sub
mov
ss
cmp
mov
test
shll
mov
and
and
outsl
fsubl
add
cmpsb
ss
pop
and
push
je
fdivrs
movl
mov
or
andl
repz
popf
inc
aad
ss
ret
fadd
lret
fs
cmp
dec
movsl
cmc
pop
xchg
xchg
cltd
in
xchg
xchg
pop
xor
sub
cmp
mov
cmp
pop
in
scas
sbb
std
or
sub
mov
mov
pop
lahf
mov
adc
sbb
jmp
pop
out
mov
rolb
sub
popf
cld
xor
shlb
mov
xor
scas
sti
sbb
mov
dec
movsb
fwait
das
and
outsl
inc
cld
jnp
push
rep
ret
lret
out
xchg
pushl
pop
cmp
dec
mov
inc
cmpb
mov
nop
lods
inc
or
mov
inc
add
sub
flds
insb
lcall
dec
pop
cmp
loopne
dec
cmp
adc
pusha
and
sub
out
and
jg
adc
jl
and
shl
jns
pusha
mov
cmp
dec
or
pop
pop
dec
arpl
stos
jl
hlt
mov
or
pmulhuw
and
xor
out
out
push
incb
enter
mov
outsb
and
jp
sub
ss
dec
mov
ljmp
stc
mov
fs
mov
cli
mov
sub
inc
imull
push
aas
int
aad
mov
pop
xchg
out
push
push
dec
frstor
xor
in
or
mov
lret
rcl
and
shrl
stc
sbb
cmp
push
into
test
stc
rorb
andl
aas
cmp
adc
data16
pop
add
movsl
dec
dec
std
ficompl
cmp
push
icebp
cmp
cmpsb
sbb
bnd
movsb
out
jne
push
xor
dec
mov
cmp
sub
add
push
dec
stos
pop
pop
or
imul
inc
neg
imul
dec
mov
adc
aaa
clc
adc
mov
or
push
sub
add
and
faddl
cmp
int
stos
aas
mov
xchg
xor
dec
sub
mov
shll
adc
fs
lret
jmp
and
dec
or
fwait
ret
in
push
and
lcall
imul
mov
shll
and
test
popl
pop
hlt
or
or
aaa
pop
jecxz
pop
dec
mov
mov
das
mov
pushl
sub
in
and
aaa
mulb
shlb
aam
mov
xor
push
jne
cmp
pop
in
pop
and
mov
cmpsl
pop
mov
jno
and
dec
push
cmp
inc
insb
aaa
daa
fdivrl
push
scas
xor
adc
test
xor
popa
jbe
sub
in
popf
out
cli
fldenv
fistl
nop
out
push
sub
xlat
cmpsb
mov
in
loopne
fst
aad
decl
push
out
push
nop
mov
xchg
pusha
and
aaa
mov
pop
push
mov
out
sub
outsl
icebp
imul
or
add
jmp
ja
adcl
xchg
cmpl
xchg
add
push
scas
dec
jmp
add
xor
outsl
mov
xor
test
fidivrs
sbb
jge
or
mov
mov
ja
lahf
out
inc
aam
in
push
das
or
or
jne
stc
lock
cs
fistps
ret
rcr
fsts
jecxz
lods
mov
mov
sbb
push
insl
shlb
pop
clc
addr16
jmp
daa
xor
lret
jb
orb
xchg
lods
push
loop
pop
add
or
aam
clc
mov
mov
and
jmp
andb
mov
jnp
cmpb
cs
sub
add
mov
push
and
aam
mov
in
cli
inc
xchg
inc
je
popf
pop
or
mov
or
jmp
pusha
mov
adc
lods
in
loope
jmp
inc
add
inc
rcl
imul
push
mov
pop
mov
jnp
pop
sbb
adc
bound
lea
adc
leave
loopne
sbb
add
and
mov
add
cmp
cmp
pop
push
aaa
adc
ljmp
repnz
sbb
fwait
addr16
ror
andnps
and
imul
adc
jg
push
and
cli
das
sahf
xchg
and
mov
fidivrs
fsub
xchg
push
fcoms
jbe
decl
lods
mov
fldenv
adc
xorl
pusha
int3
inc
lods
cmp
mov
xlat
repnz
jns
jae
inc
mov
cmp
or
int3
mov
adc
mov
outsl
cmp
add
test
cs
jle
sub
push
push
xor
cmc
add
jbe
jg
and
xchg
jle
cltd
cmp
inc
fdivrs
adc
add
add
shrb
aad
inc
lods
add
imul
lods
and
mov
and
int
pop
mov
jl
push
ret
shll
xchg
push
imul
xchg
xor
iret
syscall
mov
jl
lock
inc
daa
shl
jmp
js
subl
mov
or
int3
cmp
dec
les
das
pop
mov
cli
test
dec
inc
nop
push
js
icebp
sub
cmpsb
rclb
js
xchg
fistl
js
jmp
fnstsw
xchg
fdivrs
je
mov
lret
pop
ret
daa
lret
add
jle
add
fsubl
adc
lret
ficoms
in
scas
add
xor
dec
add
dec
mov
movsb
mov
lods
addr16
jmp
out
jg
dec
dec
dec
arpl
jl
push
jmp
daa
mov
add
inc
mov
gs
outsb
enter
cli
xchg
xchg
aad
adc
setne
sub
sahf
mov
dec
mov
xchg
mov
push
sbb
add
sbb
xchg
ret
ficompl
mov
enter
cmpsl
adc
mov
inc
and
push
and
or
lret
hlt
ffreep
push
inc
cmp
cwtl
je
mov
je
lock
dec
dec
inc
enter
xchg
enter
dec
xor
sub
outsl
lahf
pop
jno
decb
sahf
or
jb
aas
dec
and
sti
movsb
mov
adc
push
dec
fists
or
adc
ret
sbb
leavew
push
xchg
push
mov
rcrl
push
inc
xlat
pop
lret
inc
pop
push
adc
sub
sbb
xchg
pop
imul
inc
stos
and
push
ds
sub
call
pop
mov
and
sbb
sub
out
jmp
mov
adc
int3
sbb
mov
das
data16
mov
adc
mov
imul
in
aaa
xchg
insl
fnstsw
jae
dec
aaa
xor
and
jno
pusha
lds
add
enter
mov
mov
cmc
xor
ss
shrl
or
add
jecxz
js
dec
xor
data16
enter
jb
fwait
jnp
sbb
jo
add
mov
add
clc
mov
jae
pushf
xchg
xchg
fptan
repz
mov
mov
jnp
jns
fwait
dec
jbe
je
mov
jle
mov
jle
lods
jns
enter
cwtl
mov
inc
inc
xchg
cltd
pop
jge
subb
movsl
lods
sahf
pop
inc
lods
cs
js
enter
jnp
xor
sub
xor
xchg
pushf
mov
xchg
inc
hlt
mull
mull
gs
icebp
stos
mov
xchg
out
xchg
xchg
mov
outsb
pushf
add
pusha
mov
fmull
call
div
adc
sub
mov
mov
aam
jge
in
or
mov
xchg
sub
movsb
mov
out
add
insl
cwtl
push
dec
insl
fldcw
mov
adc
ret
sbb
leave
sbb
sbb
loope
adc
shl
ret
outsl
je
sub
int
gs
jae
jecxz
lahf
cmc
pop
add
bound
xchg
ret
cmp
add
mov
insb
daa
sbb
icebp
lret
jnp
call
jp
cmpsb
or
out
incb
fiadds
scas
dec
das
js
inc
stc
mov
push
pop
jmp
iret
dec
stos
push
outsl
mov
pop
sub
add
arpl
or
xchg
repnz
mov
loope
out
lds
add
fistpll
test
lahf
mov
add
stos
mov
mov
fstpt
xlat
or
push
sahf
fsts
aam
repnz
fisubrl
xchg
enter
add
cltd
mov
push
outsb
mov
inc
dec
jg
jo
jb
lret
add
iret
push
inc
lea
pop
pop
dec
and
jb
test
dec
pop
jnp
sbb
fcompl
lahf
fnstenv
lods
stos
xor
fstps
cwtl
mov
dec
sbb
sti
cmp
xchg
cmpsl
push
xchg
pop
daa
mov
je
pop
add
cmp
or
sbb
mov
xchg
pop
adc
in
sbb
cmpsl
pop
ljmp
jbe
adc
arpl
mov
adc
inc
cltd
cltd
imul
xchg
pop
movsl
mov
or
repz
jnp
ret
imul
bound
mov
daa
push
mov
inc
and
and
jge
push
sti
flds
rorl
loopne
mov
imull
adc
lcall
fstpl
loopne
mov
sbb
aam
sub
arpl
cmp
cmp
pop
hlt
xchg
xchg
lds
sbb
or
cld
jp
pop
setle
mov
lcall
adc
adc
push
scas
sbb
rolb
dec
rclb
insl
add
sub
xchg
pop
shlb
xchg
mov
sbb
imul
add
add
cs
or
lcall
out
mov
pop
shlb
leave
in
push
adc
cmc
hlt
inc
mov
ret
popf
iret
enter
push
sub
mov
push
xchg
and
mov
add
mull
out
push
xchg
fisttpl
psubq
xchg
dec
aas
hlt
arpl
fdiv
sahf
sar
sahf
hlt
popf
dec
or
stos
mov
push
cmp
fsts
das
out
xchg
jle
xlat
mov
popa
insb
dec
push
fnstsw
stc
push
js
mov
pop
pop
sbb
test
iret
aam
in
or
lcall
or
jns
data16
jp
mov
push
sub
fmulp
and
add
in
mov
add
mov
cmpsb
cltd
mov
mov
test
adc
jge
fcom
or
xchg
pushf
add
push
adc
xchg
pop
or
fistpll
inc
dec
xor
pushf
xchg
adc
or
call
mov
loopne
aas
xorl
mov
pop
mov
shlb
inc
sub
sbb
dec
add
cwtl
adc
cwtl
loope
jl
test
pop
popa
inc
adc
scas
ds
xchg
repz
mov
sbb
adc
lret
hlt
mov
or
sbb
daa
scas
jb
ss
jle
sbb
jp
das
fsubl
push
sbb
adc
push
jo
and
and
mov
adc
push
pop
xlat
pop
out
test
in
xor
cli
pop
movsb
cmp
fdivrs
aam
or
dec
sub
lret
mov
shrd
test
mov
sbb
fs
push
lret
out
dec
decl
call
jge
test
mov
loopne
jno
dec
jnp
testb
and
inc
xchg
and
roll
add
sbb
and
stos
and
mov
shlb
repz
mov
into
mov
xor
mov
push
mov
mov
xchg
mov
or
adc
pop
and
push
pushf
pop
int3
addb
loop
stc
clc
xchg
xor
xchg
les
mov
jo
or
mov
push
pop
aaa
cli
std
inc
cli
jbe
jno
cmp
jle
jge
pop
mov
gs
mov
imull
pop
inc
popa
xchg
jecxz
inc
loope
inc
je
dec
subps
dec
jmp
cltd
mov
xlat
repz
jo
notb
jae
jno
clc
addb
mov
aam
insb
mov
adc
loop
fs
push
out
push
outsb
mov
or
jecxz
aad
inc
and
xchg
decl
in
outsb
rcrl
cltd
xor
cmp
fnstcw
std
dec
sub
jl
loop
sbb
lock
aaa
mov
pop
pusha
or
adc
das
xlat
jnp
push
bswap
pushf
xchg
push
push
and
subb
mov
sbb
and
add
stos
fistps
lods
repz
je
rcll
mov
adc
bswap
in
js
dec
clc
pushf
es
cmpsb
mov
sub
sbb
xchg
aam
dec
jge
pusha
xor
and
mov
dec
std
mov
fcmovbe
rcl
dec
sahf
sbb
pop
add
dec
xor
into
add
in
pop
cwtl
mov
data16
pop
in
orl
xor
mov
and
dec
inc
sahf
pop
out
popa
mov
es
cs
xor
int
arpl
pop
and
sbb
cwtl
add
lea
popf
ljmp
repnz
dec
ja
andl
mov
lea
lret
xor
in
pop
xchg
dec
jmp
mov
add
xchg
out
std
jecxz
dec
rcrb
mov
je
add
dec
jnp
adc
fimuls
icebp
in
xlat
mov
cld
jg
push
add
mov
mov
scas
mov
mov
mov
inc
ja
pop
cmp
shll
out
mov
sub
xor
out
adc
sahf
lds
pop
popa
shlb
add
mov
or
cmp
stos
in
fdivrl
xchg
outsl
dec
inc
jge
add
das
cmpsb
dec
dec
sahf
cmp
or
pushf
push
dec
pop
mov
sbb
or
xchg
shlb
jmp
dec
jno
sbb
push
pop
es
inc
pop
xor
or
fisttps
rorl
sub
inc
lock
mov
icebp
xchg
cmpsl
fs
imul
mov
inc
mov
dec
push
xchg
dec
cmpsb
cltd
and
xor
aas
ds
dec
cli
mov
orl
inc
jle
lcall
repz
cmpsb
push
jmp
inc
sub
ljmp
xchg
ds
mov
aad
fisubs
pop
out
es
ret
mov
mov
sub
inc
fs
insb
sub
shlb
loope
push
or
pop
int
lcall
and
mov
cmc
lods
das
inc
int
or
jne
pop
shlb
sub
mov
aas
les
sarl
jne
jns
inc
out
push
fnsave
jno
ficomps
loopne
outsb
lds
cmp
dec
add
dec
lock
cmp
inc
stc
rol
lods
adc
addl
nop
and
int
and
fwait
clts
outsl
cmp
jge
jne
sbb
add
jae
inc
test
lea
iret
out
jmp
mov
mov
iret
out
repnz
push
mov
xchg
or
dec
ds
fmull
fists
inc
sub
mov
mov
mov
cltd
leave
aas
ficoml
shll
sbbb
sti
jmp
lods
adc
out
or
clc
outsl
xor
mov
pusha
aas
loop
scas
jmp
loop
inc
jno
mov
push
inc
adcl
mov
xor
xchg
add
in
sbb
dec
loope
adc
xlat
inc
and
test
xor
sar
fstl
mov
dec
push
or
pop
ss
faddl
aaa
lea
imul
jb
insl
mov
push
mov
mov
add
stc
xchg
push
mov
test
sbb
push
adc
repnz
call
or
stos
inc
andb
leave
shlb
push
adc
jle
mov
cmp
jo
test
insl
sti
aaa
popa
sbbl
roll
test
mov
xchg
ljmp
push
jne
or
mov
cltd
enter
jle
sahf
or
xorl
jae
or
scas
leave
add
loop
shll
jns
test
ret
add
int3
adc
orl
sbb
stc
xchg
add
mov
rorb
aam
insl
loope
dec
inc
add
sub
imul
mov
imul
addb
inc
sub
add
outsl
pop
xor
js
iret
sti
mov
sbb
push
push
cld
dec
sahf
cmpsb
pop
push
adc
sub
mov
inc
mov
aam
or
cld
nop
call
jg
es
rol
sub
test
sub
pop
jo
mov
arpl
adc
ljmp
cld
cmp
out
sbb
add
xchg
div
add
int
fbld
dec
popf
pop
lcall
rorl
je
mov
repnz
leave
push
fidivrl
sbb
pop
jne
insl
in
cltd
mov
stos
ss
dec
mov
cmp
mov
xchg
push
xor
push
add
add
lahf
stos
xor
push
mov
cli
push
pop
sbb
ret
inc
ss
push
or
dec
dec
rcll
iret
pusha
mov
sub
or
dec
mov
gs
lcall
sarb
test
icebp
pop
mov
syscall
xor
gs
jg
xchg
pop
push
in
lods
xor
scas
outsl
cmp
dec
jmp
mov
mov
pop
shl
mov
stos
ret
sub
stos
add
repnz
mov
cli
inc
jns
mov
dec
xchg
inc
mov
fcoms
and
in
testb
mov
vmwrite
and
add
insl
push
mov
adcl
lods
shrb
popa
int3
add
cmc
bnd
sbb
aad
dec
xorl
mov
scas
add
add
cwtl
jp
lds
mov
inc
popa
mov
pop
mov
fsubrs
rcl
mov
and
jns
scas
nop
outsl
fisttpll
pop
lcall
adc
jl
add
ds
push
hlt
cmpsl
sbb
mov
mov
in
jmp
adc
pop
inc
stc
insl
outsb
or
push
xlat
fldcw
shl
add
xchg
test
pop
cmpsb
sbb
shlb
mov
fsub
pop
les
or
fdivrs
or
loopne
mov
inc
xchg
and
dec
test
pop
mov
mov
cmp
or
pop
or
mov
test
xor
mov
mov
sub
gs
notl
inc
cwtl
pop
nop
leave
rcrl
push
xor
xor
gs
mov
icebp
xchg
in
fidivs
stc
mov
or
jge
jp
dec
xchg
fimuls
fnstenv
lock
jge
mov
xchg
js
sbb
jg
test
rcll
mov
rorb
adc
imul
andb
xor
push
mov
fiaddl
xchg
clc
adc
inc
cmp
cwtl
push
jb
ret
addr16
push
movsb
repz
mov
push
inc
xor
inc
mov
pop
lock
and
mov
or
xchg
sub
xor
pusha
cmpsl
cmc
gs
sbb
xchg
inc
jecxz
pop
loop
jmp
loopne
in
out
xacquire
pminsw
sbb
shll
xchg
dec
push
inc
mov
mov
cltd
add
jle
mov
add
sub
je
test
leave
test
fstpl
hlt
sub
add
mov
out
es
inc
ja
pop
gs
lock
xchg
xor
rcr
mov
jns
pop
mov
leave
in
imul
std
in
cmp
jbe
insb
add
loop
outsl
addl
cmp
cwtl
ficoml
mov
add
push
movsb
cmpl
imul
gs
arpl
mov
pusha
add
cltd
int3
loope
je
dec
addb
sbb
dec
je
sbb
pop
sbb
mov
pop
bound
and
push
int3
mov
push
push
sbb
shll
cld
cmc
pop
out
flds
jbe
mov
mov
push
repz
aad
aam
test
addr16
xchg
pop
aaa
pusha
fucom
add
rclb
xor
clc
jno
movsb
push
out
push
push
pop
lcall
mov
out
out
cwtl
and
jmp
inc
int
and
icebp
mulb
dec
lahf
sti
aaa
lods
push
jbe
fcomps
pop
ds
inc
rclb
sbb
ret
push
pop
jb
loop
sarl
pop
mov
in
jnp
in
cmpl
and
sbb
test
inc
cmc
xchg
sbb
inc
jo
hlt
imul
pop
add
jmp
arpl
enter
sub
mov
out
sbb
mov
jnp
inc
rep
xchg
xor
les
push
inc
jle
test
addb
and
rolb
cmp
and
push
aam
stos
xchg
aas
and
int3
les
mov
jb
pop
lcall
icebp
ds
in
pop
push
xchg
ret
jne
aaa
out
pushf
lods
movsb
ret
test
xchg
out
mov
inc
lret
pop
je
bound
cmp
sub
and
js
test
xchg
rorl
leave
push
adc
incl
mov
dec
mov
arpl
daa
mov
jge
test
mov
sbb
dec
mov
xor
insb
xor
mov
mov
add
sbb
lcall
mov
cmp
push
aam
mov
movsl
dec
rorb
fldt
fstpl
fucomip
in
stos
jbe
cmp
hlt
insb
xchg
dec
xor
sbb
adc
xor
bound
dec
inc
insl
ret
test
dec
rcll
adcb
sti
mov
cmp
push
push
test
push
std
sub
inc
jns
test
pop
outsl
test
mov
inc
push
inc
lea
fcomip
xchg
pop
dec
mov
int
sahf
cld
orb
fld1
inc
add
out
sahf
aad
sbb
mov
and
iret
bound
adc
arpl
or
mov
sub
in
ss
outsl
fldcw
clc
popa
cmp
sub
loopne
insl
cmpsb
push
or
sti
jle
enter
xchg
mov
mov
into
movsb
sti
sbb
mov
inc
xchg
in
pop
pop
outsb
fidivl
pushf
je
loop
add
aad
bound
sub
jae
sbb
pop
push
mov
rolb
inc
repnz
or
xchg
mov
subb
lcall
push
dec
lret
test
lock
ret
xchg
add
call
cmpsl
xorb
jg
cld
push
cmp
sbb
pop
lods
sub
daa
jecxz
icebp
push
xchg
cwtl
fcmovnu
and
in
xchg
mov
adc
mov
lods
add
cmpsl
inc
xchg
sbb
aad
and
jbe
ds
dec
mov
push
sub
mov
push
loop
mul
mov
aaa
mov
mov
or
or
pop
mov
loopne
add
insb
push
fwait
adc
mov
inc
add
xor
std
shrb
mov
andb
sahf
sub
in
stos
out
iret
data16
dec
push
movsl
sub
test
push
imul
test
ret
sbb
sbb
leave
fs
xchg
and
or
sub
aas
cmpsb
sub
cld
and
mov
add
dec
call
testl
cmp
bnd
jp
pop
or
inc
ss
pop
dec
out
mov
or
pop
mov
scas
lahf
jg
jmp
pop
jecxz
sti
jl
push
push
dec
jnp
aad
mov
imul
jb
add
test
enter
shlb
lock
ds
leave
dec
scas
inc
add
into
hlt
mov
pop
cmc
inc
sarl
out
add
addr16
pop
and
push
dec
jmp
inc
repz
pop
dec
scas
mov
adc
inc
insl
iret
jl
movsl
sbb
scas
out
fs
ret
xchg
push
fsts
movsl
data16
adc
xor
adc
xchg
xor
push
mov
popa
dec
mov
repz
ss
fistps
daa
lret
in
movsb
cvttps2pi
lahf
fs
std
mov
mov
lds
mov
push
shl
add
mov
pop
mov
jbe
or
xchg
das
dec
sbb
das
dec
arpl
push
lods
cmp
or
mov
or
add
roll
ja
fisubs
ljmp
push
stc
xchg
dec
jnp
fsubrs
pop
and
mov
add
pop
dec
js
cmpsl
pop
push
fimull
test
add
test
fcmovb
je
pop
adc
insb
xchg
mov
repz
jnp
cltd
push
mov
movsb
jnp
pop
xchg
or
sub
stos
xor
cwtl
cmp
in
imul
fdivrl
jno
dec
sub
repz
mov
jo
add
jmp
jns
push
cs
mov
push
ljmp
pusha
call
or
scas
or
and
mov
iret
push
ret
faddl
pop
jno
sbb
aas
cmpsb
fwait
lods
push
push
out
and
xchg
outsl
scas
jmp
fisttps
mov
pusha
outsb
fsubrl
into
int3
leave
dec
scas
ja
inc
push
int
cmp
pop
xor
inc
jns
out
outsl
mov
ret
add
jg
cmc
xlat
xlat
lods
scas
xchg
xchg
leave
pop
jl
xchg
rolb
pop
jne
add
jne
movsl
sbb
rcll
mov
sub
stos
jbe
mov
adc
pop
clc
adc
xchg
mov
ljmp
adc
mov
pop
cmp
push
mov
jmp
lods
das
cmpsb
rcrl
xchg
out
jne
addb
ss
dec
add
pushf
hlt
int3
sub
adc
mov
out
inc
loopne
xchg
sbb
jnp
out
mov
dec
aaa
icebp
jae
pushf
push
sbb
dec
enter
fbstp
arpl
dec
adc
cmp
rolb
and
dec
add
leave
cmp
add
outsl
popf
sahf
das
int
mov
sbb
push
stc
jb
imul
enter
sti
mov
pop
mov
mov
imul
fildl
fnstenv
imul
icebp
adc
cmp
mov
pop
push
mov
ja
and
jb
sub
movsl
mov
jecxz
lods
jge
in
jge
mov
sub
push
lea
inc
fidivrl
sbbb
sbb
add
rcrl
lret
push
sbb
push
push
xor
jl
adc
push
push
fdivr
fidivl
mov
mov
cmp
fmul
sbb
js
cmp
pusha
sarl
repnz
cmpsb
mov
and
cmc
lds
add
fsubrs
cmp
enter
cmp
push
jecxz
inc
icebp
xchg
mov
add
push
sti
adc
dec
cli
mov
jns
fnstenv
inc
dec
test
xchg
outsl
int
into
mov
sahf
adc
clc
test
int
dec
movsl
or
std
mov
or
adc
pop
sub
mov
fdivl
fldt
nop
or
fwait
and
sub
xlat
lock
fmuls
bnd
xor
std
push
insl
fiaddl
sub
push
sub
mov
lret
subb
mov
xchg
in
daa
push
repnz
adc
ret
xchg
xor
sub
in
ror
mov
insb
cltd
dec
push
and
sub
fsubs
jb
or
add
jecxz
push
and
cmpsb
stc
push
pusha
and
pop
and
gs
repnz
fadds
repz
jle
inc
fcomps
sub
jl
into
sbb
xchg
leave
ret
addb
mov
jl
push
mov
push
testl
sub
mov
sub
hlt
sbb
xor
or
mov
mov
cmp
gs
out
mov
or
or
movsb
movsb
mov
bound
notl
push
mov
mov
shl
jb
fnstenv
rorb
jo
push
rcl
adc
add
xchg
ffree
xchg
and
jb
cmc
cli
mov
dec
xchg
loope
xor
adc
inc
push
jbe
mov
int3
rorl
pusha
stc
mov
inc
cmp
das
je
inc
lea
cli
lods
xor
enter
jecxz
lods
lods
or
sbb
fnsave
insb
jbe
jle
or
cmp
jmp
or
out
pusha
jl
push
lods
inc
xlat
xor
push
imul
push
nop
sbb
sarl
xor
out
imull
cmp
dec
lock
mov
dec
movb
mov
mov
mov
cmp
in
add
inc
pushf
push
in
pop
xchg
lret
insl
call
mov
add
dec
in
fdivs
or
rsqrtps
dec
test
lret
inc
popf
cmpsl
call
mov
pop
les
ret
call
stos
aam
lret
xor
push
gs
or
fisubl
fs
mov
sahf
imul
mov
pop
jp
insl
jnp
les
cmpl
fisttpll
mov
loop
jl
dec
movsl
sti
push
jno
aad
in
sti
push
in
mov
lea
jmp
fwait
pop
push
xor
mov
add
leave
pop
push
mov
xor
stos
jae
xchg
leave
cld
scas
std
lods
xchg
sub
push
bound
daa
adc
mov
xor
jbe
fidivrl
fwait
movsl
xchg
cs
in
sub
fsubs
ffree
jle
jae
nop
shll
dec
gs
leave
lret
mov
ret
roll
push
popa
push
add
aas
ss
scas
and
je
and
mov
push
sub
test
jo
inc
lret
inc
sub
ret
pushf
mov
nop
and
mov
sbbb
jmp
mov
mov
jbe
je
shlb
jae
jns
xor
and
mov
fstps
lret
sub
fdivs
cli
sti
andnps
sar
jnp
loope
daa
xchg
xlat
cmc
cmp
mov
push
aam
mov
les
inc
dec
adc
jmp
mov
frstor
outsb
cwtl
orl
cmc
cmp
std
push
xor
adc
sti
cli
mov
xor
aas
fildl
sbbl
xchg
or
pop
js
cmpsb
and
xchg
mov
adc
int
movsb
cmp
test
sub
aam
cwtl
pop
lahf
lret
xorl
js
mov
dec
jne
sbb
and
and
mov
jecxz
sbbl
outsl
jae
out
and
sub
xchg
stc
enter
outsb
sbb
add
add
mov
in
pop
jmp
sub
jns
mov
incl
and
pusha
jne
jns
xchg
sbb
sarb
hlt
stos
ret
pop
sub
addr16
arpl
mov
cmp
add
gs
subb
shlb
icebp
jge
sahf
mov
inc
imul
xchg
sarb
ljmp
xor
xchg
xor
lcall
or
xor
inc
sub
push
out
test
mov
jns
out
je
fbstp
add
jns
rorb
bound
test
rcrl
cmpsb
icebp
or
repnz
xchg
leave
pushf
scas
xchg
mov
add
mov
or
ljmp
pushf
daa
call
jae
push
imul
jb
testl
xor
push
lock
xor
xchg
xor
xchg
inc
jmp
xorb
lods
into
fs
sbb
mov
aam
inc
sub
push
sbb
pop
int
and
mov
jle
push
push
insb
dec
lods
mov
leave
xchg
and
or
loope
add
lahf
imul
mov
jge
scas
pop
dec
in
adc
out
out
rol
mov
sub
or
sbb
das
les
push
es
addr16
loopne
lahf
mov
enter
mov
fmull
jno
cmp
test
insl
sbb
xchg
mov
cwtl
data16
inc
rolb
cmc
adc
xchg
loope
je
sti
icebp
mov
clc
xor
lds
sti
mov
call
into
sbb
xchg
pop
test
out
cmp
fadds
addb
jnp
add
dec
mov
xor
in
out
stos
xchg
pop
and
mov
inc
cltd
adcb
jae
mov
scas
sarb
dec
add
dec
mov
addl
scas
jns
mov
mov
inc
cmp
jge
jg
pop
and
push
jne
jecxz
push
icebp
sahf
push
cmp
lods
mov
cmpsb
pop
push
inc
and
cmpsl
mov
sbb
inc
adc
mov
and
cmpsl
mov
jae
jmp
scas
jmp
pop
rcrl
push
fdivr
imulb
push
lock
inc
shufps
jns
add
xchg
push
mov
dec
mov
aaa
ss
jl
leave
and
sbb
hlt
cmpsb
lods
fsts
mov
fs
jmp
adc
sbb
mov
cmp
fisubrl
jns
jbe
pop
int
mov
inc
xchg
lcall
leave
xchg
cld
jmp
leave
mov
jecxz
dec
xchg
imul
mov
adc
cmc
cmc
mov
xlat
or
icebp
or
pop
mov
jns
sti
mov
orb
pusha
push
hlt
push
hlt
and
xor
packssdw
pop
xchg
push
je
mov
ret
cmp
aas
jl
loop
sub
repz
stos
test
or
or
jp
add
outsl
sbb
push
ret
addr16
xor
mov
push
mov
add
cmpsl
pop
sub
fimull
adc
mov
stc
dec
and
pop
cmp
cmc
jns
ret
and
stos
mov
mov
bound
mov
pop
add
mov
jmp
cs
stos
push
adc
add
xor
hlt
les
test
out
in
and
cwtl
call
gs
xor
fldz
push
daa
int3
xor
mov
jp
mov
std
pushf
shrb
imul
or
je
sbb
jno
inc
push
fadds
jl
imul
mov
adc
or
add
sbb
adc
cmp
xchg
out
add
jo
ss
jns
adc
rcrb
imul
fisubs
and
xor
xor
daa
lea
cmc
lcall
fsubs
add
mov
lods
sahf
mov
push
cmpsb
ja
sub
inc
nop
stos
andl
into
cmpsl
sub
lds
fs
clc
rorl
imul
stc
and
leave
loop
mul
fdivr
xchg
gs
orb
push
inc
int
out
out
xor
orl
je
test
dec
push
mov
fcmovnu
mov
lcall
clc
lock
sbb
imul
divl
add
jl
push
fisttpl
sbb
ja
add
jne
mov
ret
mov
pop
xchg
inc
jmp
push
in
inc
cmp
fwait
stos
mov
cmp
outsl
add
cltd
in
xchg
pop
sbb
mov
lret
test
es
jl
jecxz
lea
xchg
mov
mov
mov
cmp
mov
jne
lea
addr16
and
ret
bound
sti
jne
das
jg
repnz
std
pop
mov
sbb
push
shll
mov
sub
and
ret
jmp
or
jmp
jle
or
repnz
std
xchg
push
mov
mov
imul
shll
aaa
fsubrs
mov
addr16
mov
fs
cmp
fcoml
mov
fldcw
fbld
cmp
inc
push
fiadds
shll
insl
xor
jge
mov
jnp
cld
jge
bound
push
les
sbb
xor
lods
dec
jnp
xor
push
aaa
out
es
std
and
jns
mov
neg
inc
out
and
lea
jmp
mov
pop
loop
fstpl
bound
xor
lods
int
push
mov
xor
add
frstor
out
jnp
jo
and
xchg
inc
dec
ljmp
hlt
popa
test
or
and
les
or
js
into
and
mov
fsubl
lret
fwait
xor
push
cmp
push
test
icebp
idivl
mov
sahf
lock
jnp
andb
and
push
mov
dec
sbb
sub
jae
test
imulb
stc
push
add
shlb
xchg
mov
inc
mov
bound
xchg
mov
inc
dec
inc
adc
mov
test
outsl
xchg
insl
add
mov
mov
xor
push
fcoml
sub
cs
xchg
insl
mov
int3
mov
hlt
std
icebp
cltd
mov
ret
sub
adc
dec
mov
bswap
psubusb
and
inc
add
mov
addr16
mov
aaa
xchg
cmpsb
or
dec
test
inc
insl
int
lea
aad
fcos
pusha
xor
inc
scas
mov
dec
insb
ret
push
push
cltd
insl
pop
or
cmpsl
add
scas
cwtl
pop
ds
hlt
out
addl
lods
jne
sbb
push
inc
int3
or
pop
push
scas
loope
xor
jp
shlb
jno
ja
call
dec
popa
sbb
mov
adc
rcll
xor
push
cmp
movsl
cmp
sbb
lock
inc
mov
pushf
xchg
in
icebp
test
jo
sbb
gs
adc
das
int
add
mov
lds
and
jp
ret
cmp
ss
out
and
dec
repz
push
into
iret
cmpsl
add
mov
aas
shl
mov
sbb
daa
int
push
pop
xor
test
adc
add
ss
sub
mov
pop
and
loop
and
data16
dec
fidivrs
and
rorl
repz
mov
xor
in
inc
fcmovne
insl
adc
idivb
jmp
mov
pmaddwd
mov
jno
mov
out
or
scas
jecxz
test
add
add
sbb
or
mov
fwait
sti
nop
cmp
push
ds
mov
int3
orb
test
ss
add
std
dec
adc
test
rorb
in
or
cmp
out
mov
pop
mov
xchg
mov
add
inc
jmp
cmpsl
mov
add
push
imul
lcall
mov
fistps
cltd
mov
push
push
test
scas
cmp
xor
add
jg
mov
jo
iret
sbb
imul
sub
cmc
clc
js
into
mov
fsincos
push
sbb
adc
scas
lahf
gs
cs
test
pop
dec
cltd
mov
add
and
sub
mov
or
push
in
push
stos
int3
inc
and
push
lcall
push
ficoml
cmp
out
pop
jge
add
or
incb
lcall
inc
orb
lret
and
inc
sub
xchg
int3
mov
jle
out
rol
mov
lret
mov
test
adc
clc
xchg
ljmp
arpl
mov
orb
mov
fstps
ss
cld
stos
or
in
cwtl
cmc
or
pop
inc
jae
dec
cmp
js
pop
nop
mov
scas
rorl
fwait
jle
mov
imul
rolb
and
xor
rol
je
push
ljmp
mov
ret
inc
mov
cmc
fsubrl
cmp
jnp
or
add
dec
mov
dec
xor
scas
pop
icebp
xor
mov
inc
push
pop
inc
inc
adc
pop
add
inc
sahf
in
das
mov
test
dec
mov
add
fadd
ljmp
dec
insb
mov
jae
jo
mov
fldl
cmp
sbb
sbb
jl
adc
scas
jmp
std
popa
pusha
mov
jmp
jns
lods
mov
int
adc
test
sbb
lods
fisubs
mov
dec
pop
in
fwait
push
stos
and
fwait
das
bound
mov
mov
lret
mov
insl
lret
in
rol
mov
inc
push
dec
cld
xlat
negb
iret
lret
vxorpd
not
sbb
inc
daa
mov
dec
cmp
jne
dec
sub
push
in
mov
mov
push
push
int
out
inc
sub
xor
mov
mov
mov
mov
cmpsb
mov
push
cmp
fistpll
or
adc
in
add
dec
stc
push
push
rcll
dec
sbb
scas
ret
add
pusha
dec
push
cmpsb
mov
pop
inc
imul
subl
sbb
shrl
ss
and
mov
aad
jl
pop
and
jno
jbe
cmpsb
enter
or
mov
mov
cld
pop
addb
pushf
shlb
cltd
popa
pop
mov
or
pop
xor
in
je
or
daa
push
push
test
das
push
or
call
pushf
mov
inc
or
mov
jp
adcl
mov
testb
lds
movsb
insb
adc
ljmp
mov
sub
std
pusha
call
sub
lcall
jae
sti
rcrl
int
dec
pop
scas
mov
sbb
lret
pop
dec
loopne
enter
add
aas
xchg
orl
lahf
dec
pusha
aas
jp
sbb
in
fsub
sahf
sbb
sbb
ja
andl
push
gs
pop
cmpsl
mov
sbb
add
rcll
inc
pushf
mov
rsqrtps
bound
pop
rol
outsl
jmp
jae
xchg
sub
jmp
lret
testl
cmp
hlt
mov
push
aaa
lahf
sub
in
cmp
cwtl
testl
ficomps
insb
orb
rcl
mov
fwait
in
filds
xor
push
mov
push
enter
jle
nop
outsl
insl
sub
sbb
xor
xchg
and
mov
mov
sbb
or
push
cmp
add
jp
orl
outsb
mov
cmp
fsub
not
insl
test
stc
pop
mov
stos
push
int
sbb
int3
xor
mov
enter
mov
fiaddl
icebp
xor
jns
lds
and
adc
dec
in
sti
jno
xor
sbbl
pop
scas
adc
mov
inc
popa
mov
mov
hlt
incb
jp
nop
shll
mov
test
sub
xor
xchg
mov
lcall
call
jnp
mov
stc
sbb
mov
push
jecxz
in
pop
cmp
mov
sub
arpl
into
cmp
in
push
dec
test
mov
xor
xor
loopne
stc
addb
ret
jle
notb
sahf
and
addl
dec
and
jl
add
mov
out
add
sahf
aaa
mov
out
jecxz
fistpl
test
imul
jne
loopne
mov
jne
dec
pop
inc
insl
dec
pop
dec
dec
xchg
jo
ja
mov
jne
sbb
dec
mov
testl
addb
push
add
dec
popa
fists
push
addb
les
inc
nop
sti
sub
les
or
inc
xchg
lret
jae
sbb
jmp
das
sub
mov
iret
push
mov
push
xchg
dec
mov
outsb
mov
push
push
je
inc
into
aam
sub
popa
cmp
leave
add
iret
jne
pop
notb
aad
adcl
mov
js
mov
pop
mov
lods
rsm
daa
mov
adcb
xchg
out
scas
jnp
pop
or
adc
lock
lock
jns
xchg
mov
add
dec
lret
cmp
cmp
mov
and
inc
xchg
or
jge
push
xchg
add
pusha
adc
xchg
arpl
movsl
mulb
adc
cmc
imul
xchg
jb
in
mov
cmc
cwtl
jo
fnstenv
insl
pushf
mov
fidivrl
fnstenv
pop
in
xchg
add
sub
cmc
lahf
jnp
dec
mov
lods
mov
or
push
jns
cltd
dec
test
in
ret
cmp
xchg
repz
ret
and
inc
ja
sahf
inc
lods
mov
insl
add
mov
jmp
daa
ret
add
fildll
cmp
out
mov
add
cmp
adc
cli
setp
pop
lcall
into
xchg
and
out
mov
out
loope
sbb
pop
pushf
movsl
pop
cmp
push
lea
xchg
pop
bound
ljmp
push
fwait
test
ds
rcll
cmp
iret
pop
sub
lds
stos
dec
xchg
xchg
mov
or
or
and
jecxz
mov
and
mov
ret
std
icebp
add
fdivs
mov
dec
mov
xor
jecxz
push
push
cli
xorb
or
adc
dec
lret
add
add
out
cli
sub
in
adc
test
nop
mov
or
fisubrl
mov
lret
pop
pop
mov
mov
push
pop
outsb
je
test
cltd
cmp
pop
and
outsb
arpl
out
dec
xor
dec
push
sbb
mov
adc
or
mov
pop
sub
ljmp
test
ret
icebp
lods
jmp
add
test
push
xor
data16
stos
mov
jnp
xorl
lods
sahf
inc
dec
iret
dec
adc
ljmp
adc
das
and
pop
and
lret
or
and
add
sbb
into
inc
xchg
dec
sti
inc
pop
and
cmp
jl
popa
mov
rcll
and
mov
add
call
and
cltd
jns
lret
loope,pt
and
icebp
stos
or
pushf
pop
mov
icebp
add
cmp
cmpsb
adc
mov
cmpsl
enter
ja
and
mov
jb
and
jle
ret
and
insb
lods
cmp
shrl
inc
inc
lods
aad
jle
sub
jae
clc
mov
adc
scas
dec
enter
das
fisttpll
xchg
insb
repnz
icebp
lahf
les
mov
aaa
cmc
jmp
ret
pop
mov
xchg
push
push
sbb
mov
in
divb
dec
js
jnp
daa
lcall
sub
test
enter
movsl
sarb
mov
loopne
mov
mov
sbb
or
jne
jae
jp
lock
out
jge
scas
outsb
insb
xchg
push
xchg
mov
adc
and
adc
cmp
inc
stc
adc
hlt
jmp
sub
pusha
cmp
jne
stc
out
lahf
add
test
cmp
fucomip
jl
stc
dec
shlb
cmp
inc
test
mov
xchg
enter
lock
adc
jnp
cld
addr16
ljmp
outsl
inc
and
mov
jo
les
add
sbb
stc
xchg
mov
cwtl
loop
mov
fidivs
mov
jge
fidivrl
shll
dec
test
push
xlat
outsb
test
xchg
xor
sub
cs
push
into
push
adc
add
sub
mov
or
lret
movsl
add
sbb
mov
pop
xorl
lods
scas
arpl
cmpsb
les
scas
hlt
mov
lods
sbb
jl
adc
jle
cli
shll
and
jne
sbb
pop
cmp
ficoms
xchg
out
adc
daa
jge
mov
faddl
sbb
sarb
scas
rolb
pop
stos
shlb
out
or
mov
mov
cmc
scas
jmp
pop
mov
lcall
icebp
push
movsl
cmp
pop
rorb
pop
mov
loopne
sub
out
test
jo
push
sbb
mov
subl
mov
scas
sbb
dec
stos
xor
jb
push
jmp
adc
dec
in
mov
mov
das
add
push
ds
xchg
jbe
mov
push
mov
xchg
cltd
imul
or
pop
mov
ds
outsb
pop
or
pop
jmp
push
das
sbb
jne
negb
lock
adc
adc
inc
out
into
inc
fnstcw
jno
addr16
inc
push
ret
ja
shlb
pop
cltd
or
adc
mov
js
stos
dec
lds
mov
pop
push
stos
or
lret
push
mov
xor
test
out
mov
sub
mov
shrl
jecxz
test
or
cmpb
popa
mov
ljmp
adc
aad
push
lds
mov
sub
mov
das
xor
outsl
cltd
mov
jle
js
jecxz
adc
or
insb
testb
pusha
jle
mov
sub
pushf
adc
adcl
jns
inc
enter
push
mov
mov
jge
pushf
scas
inc
mov
das
mov
add
sbb
aam
sub
mov
jl
cli
mov
mov
insb
xor
ret
pusha
mov
jne
nop
jmp
aas
out
pop
dec
jo
inc
mov
popf
call
jne
aaa
js
pop
cmpsb
xchg
call
insl
shlb
popa
clc
mov
jne
jge
push
nop
cmpl
arpl
ds
jle
lods
fwait
mov
leave
insb
dec
lds
push
inc
insl
adcb
mov
gs
insl
or
sbb
inc
stos
ss
xor
scas
stc
and
ja
mov
xor
sub
femms
out
jo
jne
sbb
inc
cmpsl
cmpsl
popf
inc
and
pop
and
cwtl
pusha
sarl
inc
hlt
enter
outsl
incl
pop
fnstenv
lods
mov
xor
daa
xchg
out
sub
cmp
push
out
jns
sub
sbb
push
int
stos
cmc
ja,pn
cs
and
dec
inc
or
or
mov
push
enter
or
jne
jne
sub
fcomps
aaa
push
or
xor
in
jae
cwtl
les
mov
xor
fs
push
rcll
inc
xchg
shll
add
imul
mov
popa
repnz
jecxz
cli
mov
mov
push
jmp
das
loop
shll
hlt
lea
mov
mov
jbe
xor
testb
jns
adc
xchg
test
and
pop
mov
mov
mov
add
jo
bound
mov
mov
xchg
pushf
pop
dec
add
in
mov
data16
sub
pop
push
push
loop
inc
mov
sub
and
mov
dec
fdivrl
mov
adc
ret
pop
xchg
decl
subb
push
outsl
arpl
inc
sbb
out
test
popf
pop
mov
xchg
shl
jge
clc
out
daa
sbb
dec
mov
mov
decb
adc
or
sub
and
fimull
data16
adc
mov
or
xchg
call
dec
dec
dec
fwait
lret
pushf
ljmp
loopne
pop
mov
cld
into
inc
cmpsl
fnstsw
push
dec
mov
pop
mov
or
mov
xchg
mov
mov
fstpl
push
and
repz
pushf
test
loopne
jb
shlb
lea
aam
je
loop
cmp
and
imul
xor
push
mov
mov
shrl
sbb
in
les
cli
jns
jle
jbe
shlb
movsl
sbb
testb
int
inc
lss
or
mov
aad
pop
and
pop
popf
ret
cwtl
sub
nop
sub
mov
into
cmp
test
and
scas
adc
dec
test
mov
jge
andl
aam
sbb
notb
xchg
lea
push
mov
fdivr
stos
ja
xor
out
jae
repnz
adc
mov
add
xor
pop
test
inc
dec
inc
sahf
nop
or
push
js
sbb
loopne
pop
adc
pop
cmp
xor
outsb
mov
mov
lds
add
mov
pop
fiadds
mov
mov
shlb
xchg
xor
mov
int3
cwtl
push
xchg
or
in
inc
xor
pop
cld
xchg
mov
cld
outsb
cwtl
scas
rcrl
std
pop
cmp
bound
fxch
cmp
cltd
jae
adc
out
and
icebp
adc
xchg
sbb
outsb
push
jb
push
hlt
iret
loop
mov
sti
lods
call
mov
push
repnz
nop
sti
push
mov
or
fists
cmp
inc
xor
pop
enter
pop
pop
leave
ret
inc
pop
push
cmp
ret
sub
ljmp
sahf
mov
push
subl
add
mov
xlat
adc
inc
mov
jp
xor
nop
fistl
add
mov
outsl
dec
and
nop
arpl
out
enter
test
mov
lds
sub
test
inc
or
pop
ljmp
jge
fucom
movsb
and
add
pop
cs
sub
rcrl
cld
call
int
andl
add
xchg
inc
mov
adc
ja,pn
cli
scas
mov
insl
pop
hlt
out
sbb
hlt
xor
mov
or
in
adc
repnz
adc
sbb
pushf
cld
outsb
scas
xchg
jns
xor
sbb
pop
jns
jg
jo
inc
xor
stc
out
mov
dec
pop
mov
jecxz
out
lods
pop
popa
mov
loop
cs
dec
iret
xor
fwait
or
add
insl
adc
out
cltd
repnz
cli
pop
push
out
lock
out
mov
and
inc
xor
imul
mov
pushl
pop
cwtl
xchg
xchg
cld
mov
and
jecxz
pushf
es
pusha
out
cmpsb
loopne
ret
testl
stos
jae
out
xchg
cmp
std
mov
mov
je
movsl
mov
mov
inc
pop
jg
and
adc
cmpsb
push
ljmp
in
jno
in
xchg
imul
ficoms
pop
add
addl
dec
jae
out
mov
insb
pop
add
xchg
out
pushl
jnp
jmp
adc
sbb
inc
repnz
sub
in
mov
push
fwait
inc
sub
push
test
sbb
into
inc
idivl
and
mov
mov
cmp
pop
or
mov
movsb
inc
insl
loopne
xor
dec
push
int
imul
add
jbe
pusha
and
rclb
rorl
ds
adc
lods
lods
ret
jmp
xchg
sbb
xchg
test
sbb
or
call
xchg
out
and
addb
xchg
add
ljmp
aas
mov
lock
clc
outsb
insl
hlt
mov
cwtl
into
mov
xor
cmp
adc
int
xlat
scas
cmp
lds
jge
fs
mov
stos
add
and
adc
push
xor
fwait
xor
ljmp
nop
fs
out
in
popa
mov
fcoms
mov
sbb
pop
adc
cmpsb
xor
out
mov
into
push
sarb
jecxz
mov
rcll
repz
sbb
push
xchg
cmp
lods
and
int
add
jmp
lea
inc
or
add
sbb
and
pcmpeqd
pusha
mov
stos
dec
inc
shll
push
loopne
pop
inc
outsb
icebp
dec
in
inc
push
xchg
lock
inc
imul
pop
mov
cmp
mov
in
sbb
loopne
xchg
in
xorl
repz
js
and
xlat
mov
test
out
dec
insl
stos
pushl
xchg
aad
jmp
popa
pop
mov
mov
cmpsb
leave
xchg
inc
fs
inc
inc
cmp
adc
dec
mov
inc
push
mov
pop
xor
lahf
mov
loop
js
sbb
jo
add
test
gs
inc
scas
jne
daa
add
jl
mov
scas
lret
iret
scas
and
mov
dec
cmp
push
std
daa
pop
aaa
call
cmpsb
push
sub
cmpsb
pop
fmul
lcall
inc
xchg
add
inc
pop
jnp
ret
stos
adcl
mov
ljmp
rorl
push
divl
cwtl
push
aas
int
es
testb
decl
inc
or
mov
lock
arpl
dec
xchg
fadd
shrb
les
test
ljmp
psllw
xchg
mov
add
into
add
lods
add
aas
add
mov
jg
or
xchg
push
cld
xchg
mov
mov
dec
mov
dec
jle
sub
fsubrs
test
mov
mov
lahf
xchg
inc
pop
ds
cltd
xchg
pushf
fucomi
outsl
outsb
call
sbb
je
int3
push
pop
mov
sbb
es
decl
push
stos
jns
push
cmc
popf
aas
sbb
fiadds
ds
and
mov
insl
rcll
fldlg2
cmpsl
lea
sub
leave
push
aas
sbb
cmovnp
jnp
mov
cmovb
nop
cwtl
and
shrl
inc
jno
cld
dec
roll
cmpl
stc
fiadds
fs
and
enter
inc
js
jnp
sub
test
aaa
jp
cmc
ror
push
adc
test
pop
call
cld
push
daa
push
add
jmp
jle
lret
cwtl
sub
subb
inc
dec
cli
cmpsb
mov
in
ret
pop
int3
int
enter
lea
xchg
xchg
pop
movsb
mul
sub
into
mov
lcall
call
rol
jmp
sbb
fs
sbb
mov
gs
or
sub
mov
lea
push
mov
fbstp
sti
lds
or
fwait
jecxz
cmpsb
lods
movsl
popf
sub
cmp
pop
lahf
push
adc
int3
pushfw
or
in
lret
sar
leave
addb
fmul
rcl
xor
xor
ret
cli
fimuls
xchg
push
inc
inc
xchg
dec
rorb
lret
push
sub
jle
sbb
xor
mov
add
lcall
pushf
pcmpeqw
mov
js,pt
nop
sub
hlt
insl
shr
in
jbe
cmpsl
jns
jecxz
xor
imul
xchg
pop
lods
or
mov
insl
cmp
mov
push
or
cmp
gs
cmp
xchg
in
mov
and
ja
or
sub
nop
fs
mov
dec
jg
xor
repz
jecxz
out
or
pusha
decl
cwtl
scas
adc
daa
insl
std
in
daa
and
out
insl
sub
jo
enter
clc
mov
pusha
and
lds
popl
mov
pop
push
cmp
in
and
les
ret
or
or
inc
lds
clc
ret
sbb
cltd
push
inc
aas
test
in
shrb
xor
ds
sub
mov
inc
xchg
mov
test
and
sbb
das
sahf
cmpb
lock
scas
pop
pusha
ret
subb
scas
addr16
mov
loopne
mull
jp
or
sbb
fisttpll
out
pop
pause
mov
daa
dec
mov
cmp
test
pop
scas
jmp
or
stc
lods
inc
inc
movsl
imul
and
ja
aad
pushf
sbb
dec
rclb
enter
lcall
mov
add
es
outsl
loop
inc
add
sub
add
add
mov
lcall
data16
jge
mov
cli
push
das
xor
or
sar
adc
sbb
jae
adc
jno
jge
jnp
sti
xchg
pop
jl
push
sub
mov
pop
cmp
dec
xor
pop
ret
das
stos
xchg
je
or
insl
mov
ret
std
stos
xchg
int3
hlt
cmp
test
jnp
mov
jbe
push
cmp
mov
push
push
and
into
aaa
sub
inc
and
jecxz
jno
add
ds
mov
inc
push
data16
mov
out
ret
inc
sub
add
dec
adcb
pusha
dec
pop
out
ja
cmpsl
fisttpll
mov
pop
lds
ja
testl
cmp
sub
push
xchg
ffree
ljmp
push
scas
icebp
ror
lods
fdivrl
iret
dec
xor
or
add
xor
cmpb
outsl
imul
pop
dec
flds
outsb
xlat
xchg
push
jnp
stc
cmp
lret
movsl
fsubrs
insl
jl
mov
cld
ljmp
pop
pop
mov
cmpsl
aas
outsl
push
aas
movsb
gs
es
and
pmulhuw
je
inc
outsl
cwtl
ret
xor
sub
pop
enter
push
cltd
sub
mov
bound
or
sbb
sub
dec
push
imul
popa
ret
pop
es
mull
mov
int3
fistps
dec
mov
lahf
dec
loop
outsl
pop
push
mov
in
inc
mov
xor
push
lods
cmpsl
adc
and
xor
xchg
inc
and
imul
add
mov
sub
push
jnp
ficomps
cltd
mov
popf
fisubrl
lds
push
in
shlb
pop
push
pop
ficompl
ret
xchg
inc
dec
mov
sub
ja
xor
aaa
in
adc
inc
xor
imul
mov
lods
jmp
clc
roll
sub
sti
push
pop
dec
mov
stc
rorb
or
jle
jnp
mov
mov
pop
or
aam
pop
dec
mov
mov
nop
es
popf
stos
pop
rolb
jg
jle
popa
loop
sbb
mov
adc
mov
aaa
mov
mov
pop
outsb
es
and
dec
inc
adc
mov
int
mov
clc
int3
jae
and
cmpsl
xchg
push
add
testl
arpl
scas
sti
inc
fcmovnu
mov
adc
cmpsb
into
cld
dec
add
loopne
sbb
push
cmp
and
jle
shlb
mov
ja
sub
adc
lods
ja
test
jo
dec
mov
pop
sar
sub
mov
in
int3
std
in
adc
mov
sub
jle
inc
xchg
fldenv
lahf
nop
jns
arpl
and
cmp
dec
mov
jno
and
cmp
mov
mov
enter
test
cli
add
pushf
repz
push
in
movsl
daa
add
dec
jecxz
aam
fists
sbb
adc
mov
imul
push
test
lods
sub
cld
inc
push
or
insl
jecxz
js
insb
sub
cmpsl
xchg
xchg
inc
data16
lea
mov
xor
mov
add
in
daa
dec
push
dec
fldcw
outsl
push
cltd
mov
adc
aad
loop
adc
das
lock
sub
or
sub
pop
test
sub
shll
adc
cltd
mov
lock
aad
add
push
enter
lret
test
imul
clc
movsb
ret
movsl
je
out
jo
movsb
daa
outsb
dec
shrl
mov
test
rep
insl
icebp
mov
icebp
fcomps
inc
jge
xor
sub
push
test
mov
mov
mov
mov
mov
jbe
pop
inc
movsl
inc
and
orb
hlt
stos
insl
xchg
or
ljmp
ret
jne
sar
in
in
movsl
mov
adc
roll
adc
lea
mov
and
fstpt
sbb
cmp
int
xor
shrl
dec
loop
mov
xchg
loope
loopnew
punpcklbw
xor
mov
test
fwait
mov
pop
dec
add
mov
cmp
shll
mov
xchg
out
mov
mov
sti
push
add
repz
xor
sub
lods
cmpsb
sarl
add
nop
pop
outsl
dec
mov
or
push
and
fwait
outsl
adc
arpl
repz
adc
add
repnz
xchg
mov
dec
xchg
inc
stc
cmc
mov
daa
pop
lsl
and
scas
jmp
xor
inc
jecxz
mov
add
add
fistps
push
orb
mull
icebp
je
mov
add
mov
outsl
jbe
aam
jbe
mov
pusha
xchg
dec
ljmp
cmpsb
mov
test
push
pop
xchg
mov
lret
mov
and
jge
sub
lret
icebp
mov
inc
ljmp
push
or
popf
push
adc
movsb
jg
push
addr16
nop
lcall
ret
cmp
sub
xor
sbb
lea
notrack
xchg
loope
cwtl
jno
mov
cmp
cmpsl
je
cld
pop
mull
push
hlt
not
xchg
xchg
adc
add
adc
cs
inc
cltd
push
loopne
mov
xchg
loope
pop
shl
pop
jmp
lcall
jbe
add
aas
inc
mov
xchg
cltd
movsl
jne
dec
popf
xor
lea
addr16
std
cmp
in
cmp
scas
outsl
data16
cmpb
push
rcrb
loope
pop
jle
add
das
jns
out
loope
test
movsl
enter
push
or
stos
push
jns
cli
inc
xor
mov
add
inc
ja
inc
xchg
popf
jnp
imul
dec
rol
out
sub
xor
mov
insl
ljmp
sub
and
mov
test
repz
xchg
arpl
cmp
data16
ret
enter
and
hlt
das
push
sahf
sub
push
add
aam
ficoms
push
xor
leave
jae
sub
sub
ret
jbe
es
inc
cmp
aaa
pop
jno,pt
sub
icebp
jns
jge
cmc
push
add
push
hlt
sub
pop
pop
push
lcall
movsb
test
pop
mov
outsb
sub
andl
mov
imul
lcall
and
rcr
push
xor
pop
cmpsl
lahf
push
jae
xor
test
test
adc
sub
js
in
xor
test
push
mov
das
mov
jl
push
addr16
sarl
cmpsl
lea
inc
mov
cmp
test
push
lcall
push
and
cmp
lea
verr
mov
enter
mov
in
xor
sub
daa
sub
outsb
mov
nop
pop
xchg
movsb
xor
nop
pushf
je
movsl
pop
mov
test
mov
jno
scas
push
jns
and
fadds
into
push
pop
or
push
subb
pop
push
loop
jecxz
ds
and
jnp
stos
test
mov
stos
inc
push
fisubl
imul
dec
xor
inc
sarl
add
mov
outsl
outsb
pop
test
jnp
fdivl
daa
adc
sbb
dec
xor
pop
imull
jb
mov
cli
mov
out
sub
fiadds
leave
add
xchg
mov
cmp
lahf
push
dec
mov
lcall
inc
js
mov
jecxz
ret
xchg
jbe
fldl
mov
scas
testb
shll
ss
stos
adcb
daa
jmp
push
scas
inc
push
xchg
dec
sub
ret
mov
pop
outsb
xchg
negb
mov
jge
jno
sub
adc
cmp
xor
xchg
cmp
mov
mov
loopne
mov
xchg
sbb
pop
or
das
iret
add
jp
add
and
pop
xchg
std
mov
mov
fistpl
pusha
in
stc
imul
pusha
or
push
dec
ss
lea
fisttpl
stos
aaa
mov
mov
pop
cli
ss
lock
lea
push
sbb
jge
inc
xchg
push
fiadds
jae
adc
adc
out
mov
xor
out
jl
sub
es
pop
daa
or
push
pusha
ljmp
lds
out
movsb
aas
cmpsl
aas
or
jne
in
cmp
push
inc
inc
push
adc
lahf
cmp
std
xor
lea
add
lods
push
out
dec
cmp
fdiv
fstpt
cmp
fistl
fbstp
mov
fstpl
mov
jno
popf
xchg
movsl
fsubr
mov
xor
mov
movsl
mov
cs
loop
mov
rolb
cs
pop
call
inc
jo
loope
mov
pop
jno
clc
jns
in
cmpsl
and
repz
cmp
shrb
icebp
in
xor
xchg
or
mov
inc
lahf
je
pop
or
push
and
add
pop
adc
scas
inc
pop
leave
push
pop
mov
mov
pop
stos
jbe
arpl
orb
clc
cmp
mov
jne
adc
stos
mov
jmp
xchg
xchg
dec
or
pop
icebp
push
xchg
push
adc
push
daa
cs
loop
rorb
icebp
pusha
movb
and
ds
sub
jae
in
int3
inc
imul
jae
mov
outsb
out
mov
add
sub
nop
sub
jns
sbb
adc
jnp
out
mov
and
sbb
pushf
dec
xor
pop
cmovg
jnp
ss
add
fcmovu
push
repz
push
jp
bnd
push
test
imul
call
mov
push
push
jl
out
out
jns
mov
lods
adc
jmp
jle
pop
add
mov
sbb
ja
mov
cmp
push
insb
daa
fmulp
pop
test
dec
mov
sbb
sub
push
cmp
popa
push
dec
js
push
mov
push
add
pushf
gs
in
pop
lret
or
movsb
xchg
ja
std
push
xchg
push
sbb
shrb
dec
inc
mov
xchg
mov
mov
sbb
nop
pop
dec
ja
jb
adc
pushf
cmc
xor
cmp
int3
fsubr
dec
fwait
or
jmp
add
push
jge
lret
xchg
fistpll
mov
mov
fiaddl
lds
inc
aas
mov
stos
int
dec
in
leave
adc
or
popa
test
cli
fstps
andb
fstpt
mov
dec
lret
mov
fcomi
jb
in
dec
aaa
loop
lock
pop
or
xlat
xchg
jbe
jmp
sahf
pop
push
loope
inc
jbe
subb
in
cmp
nop
dec
mov
and
outsb
push
call
inc
add
inc
xchg
in
push
or
jmp
fnstcw
sbb
or
scas
fs
push
pop
or
leave
cld
adc
adc
lock
iret
lock
push
lcall
int3
cmpsb
mov
out
dec
pop
add
or
das
test
mov
sbb
leave
push
icebp
push
popf
xlat
into
mov
mov
rol
pop
mov
lods
xchg
faddp
jecxz
xchg
fisubrl
ja
inc
jae
lea
rorl
mov
adc
pop
movsb
push
push
lods
sbb
into
test
xor
xchg
leave
js
mov
xor
adc
xchg
jne
mov
mov
fmul
scas
cmp
stc
into
leave
pop
loopne
rcrl
es
mov
hlt
jns
xchg
xlat
aad
dec
xor
stos
mov
out
fimuls
mov
adc
mov
sub
gs
push
repz
sub
cld
xchg
push
jbe
fdivrl
push
xchg
inc
and
leave
mov
stos
mov
push
lcall
cwtl
mov
int
push
jecxz
sbb
test
or
icebp
movsl
in
push
pcmpgtd
mov
dec
loope
sbb
les
lcall
mov
jecxz
insb
idiv
xchg
pushf
and
lock
sbb
and
dec
test
shr
push
or
dec
sub
push
inc
ds
data16
clc
dec
out
adc
cltd
xlat
cmp
test
sub
pusha
push
or
push
repz
fs
xorl
cwtl
sub
and
dec
shll
pop
divb
loop
or
lea
fadds
popa
jns
fwait
sbb
hlt
xor
sub
and
je
adcl
jmp
pop
pop
mov
mov
fiaddl
lahf
dec
inc
out
or
popf
sbb
arpl
pop
test
mov
mov
mov
dec
rcrl
arpl
jge
jo
jno
popf
pop
dec
shlb
or
xor
sbb
ret
lds
jge
repz
loopne
shll
adc
sub
jl
lret
pop
fdivr
mov
cmc
scas
xor
sub
icebp
xor
lret
aaa
loop
shll
out
sbbl
mov
int
mov
into
inc
mov
sbb
adc
pop
mov
aad
sub
pusha
dec
ds
jnp
and
sub
mulb
push
in
sti
lods
add
aam
pop
sub
xlat
adc
daa
cmp
cld
jecxz
enter
cltd
mov
jg
mov
loop
bound
cmp
mov
shrb
push
pushf
insb
clc
clc
xchg
add
sbb
repz
lcall
and
jne
cmpsl
mov
fs
aam
mov
daa
aam
mov
sub
je
jle
test
cmc
iret
cmp
xor
push
aad
hlt
inc
ret
pushf
and
sbb
jb
ficoml
push
seto
xor
out
mov
sub
nop
dec
insb
adc
addr16
mov
sbb
sub
and
jno
dec
or
adc
lret
pop
cwtl
call
and
in
mov
into
dec
jmp
and
cmp
stc
roll
addr16
loopne
inc
scas
adc
rcrb
xchg
adc
jmp
xchg
stos
pop
push
test
sub
sub
dec
xchg
add
xchg
jp
mov
pop
outsb
xlat
inc
sub
rcrb
xlat
adc
xchg
aas
nop
jl
cmp
cmp
lea
arpl
and
push
or
jl
push
push
push
pop
jl
je
adc
loope
testb
in
clc
push
jmp
icebp
inc
inc
mov
dec
mov
jg
fisttpll
daa
imul
mov
arpl
push
loop
mov
mov
pusha
sbb
add
inc
xor
or
rorb
inc
enter
inc
inc
push
push
aad
das
mov
ficoms
loopne
pop
or
into
in
mov
sub
add
mov
inc
xor
adc
jl
addr16
sti
push
or
mov
jl
test
push
bound
mov
jmp
inc
call
sub
ljmp
and
fists
cmp
fwait
ret
push
loop
jecxz
into
cld
in
or
bswap
jp
sub
xchg
stos
pop
daa
pop
pop
xor
ret
pushf
roll
add
mov
scas
outsl
mov
into
icebp
js
push
lods
aam
enter
mov
sbb
mov
cmp
cmp
stos
repz
sbb
xchg
rcll
repnz
adc
push
jns
cmc
pusha
je
cmp
es
ret
test
inc
bswap
jae
cltd
in
jmp
in
push
mov
adc
xlat
push
inc
pop
fiadds
jns
mov
data16
pop
cwtl
sub
jp
cmp
shlb
and
xlat
inc
adc
in
dec
sub
or
pop
lret
push
roll
inc
mov
gs
or
repz
mov
outsb
mov
and
fbld
sub
test
xor
pop
mov
inc
stos
adc
lret
gs
rcr
xchg
inc
adc
or
lcall
sub
sub
iret
sar
lcall
testb
mov
add
test
call
dec
cmpsb
mov
lods
movsl
cld
dec
or
mov
insb
loop
add
ds
lods
dec
in
mov
dec
aad
idiv
out
adc
ljmp
std
dec
loope
push
lcall
inc
in
in
xlat
dec
jg
aaa
lods
lods
ds
mov
jnp
jb
iret
or
jmp
sbb
fs
mov
pop
jo
in
jns
inc
fistps
xchg
add
mov
pop
outsb
adc
ljmp
repnz
lret
test
add
fcomi
and
inc
jae
sub
pop
cli
jmp
add
lret
pop
or
loope
aam
dec
xchg
test
add
out
iret
mov
outsb
jecxz
aad
outsl
or
test
xor
adcl
push
dec
sub
ljmp
in
jns
fsubs
mov
sub
test
xorl
popl
jecxz
cmp
adc
ljmp
fisttpl
or
stc
ja
js
incl
add
cmp
xor
mov
test
add
jl
adc
lods
loop
mov
lret
lods
subb
and
xor
in
dec
les
js
lea
jns
mov
iret
mov
push
lods
push
or
mov
xchg
mov
dec
cmp
sbb
sub
sbb
push
mov
mov
ja
jns
bound
cmp
sub
mov
inc
xchg
cs
nop
out
adc
mov
es
mov
sti
push
mov
sub
adc
adc
pushf
hlt
loopne
fsts
loopne
orl
xchg
fcomi
hlt
jle
in
add
pushf
or
pusha
nop
fwait
lods
xor
adc
jne
push
loopne
shl
mov
mov
mov
std
inc
pop
sahf
and
or
lock
dec
mov
fiadds
ss
pop
and
push
jmp
inc
imul
ljmp
push
clc
leave
mov
mov
jbe
lret
out
push
popf
ds
xchg
ret
pushf
shll
and
in
enter
bound
in
out
mov
daa
xchg
mov
xchg
into
out
and
gs
sub
lret
repnz
xchg
out
dec
xor
ficomps
iret
dec
jle
push
in
adc
cmpsb
mov
jl
sub
adc
or
inc
xchg
xchg
movsb
mov
sbb
jg
mov
pop
xlat
sub
lcall
sahf
movsb
scas
pop
sbb
fistps
jl
inc
outsl
sub
mov
jne
xor
mov
mov
xor
sbb
pusha
mov
rcrb
push
jb
push
test
test
adc
lea
inc
jle
jb
jmp
push
inc
clc
jecxz
pop
pop
jp
mov
out
in
sub
mov
je
stos
mov
mov
mov
fidivs
or
sub
test
inc
incl
inc
pop
in
inc
fstl
std
jge
jo
dec
pop
xchg
addl
inc
mov
pop
cmp
cmp
inc
dec
in
jne
ret
adc
outsb
pop
push
mov
dec
xchg
mov
outsb
sub
dec
sbb
cmovge
mov
stos
jnp
jne
mov
cs
into
or
sub
push
cli
add
fmuls
add
sbb
mov
dec
jle
sbb
jbe
mov
lock
jp
dec
xchg
divb
xor
xchg
cmp
repnz
test
scas
cmpl
inc
jne
ljmp
mov
xchg
test
pop
lcall
iret
int
pop
pop
add
pop
es
outsl
call
pushf
jno
insb
scas
push
or
xchg
mov
mov
dec
xor
xchg
mov
repz
xor
jl
xchg
fstps
mov
aad
addr16
das
lods
ja
mov
adcb
divl
xchg
ljmp
decl
arpl
fcomip
insl
adc
pop
gs
hlt
adc
jmp
cmp
scas
and
test
jmp
in
aaa
jae
mov
xor
pop
aas
lret
cmpsb
sbb
add
sarl
inc
fdivr
fcomip
dec
fndisi(8087
je
xchg
pop
jecxz
cmpsb
add
mov
dec
sub
dec
lcall
movsl
inc
lcall
add
ljmp
out
sub
sarl
hlt
dec
aaa
and
aaa
fsubs
sbb
push
jg
daa
push
das
nop
xchg
dec
inc
lret
mov
je
lcall
cltd
cmp
nop
mov
dec
shl
xchg
push
cld
mov
shr
out
jns
sub
sbb
mov
adcl
mov
fcomps
pop
cmp
ficomps
xchg
or
shrb
popa
inc
pop
xchg
sub
dec
xor
fistpll
add
xor
dec
popf
orl
jbe
call
insl
sbb
xchg
push
xchg
ja
int
sbb
popf
xor
roll
dec
adc
mov
outsl
mov
in
rcrb
mov
push
lret
mov
stc
mov
add
lods
loopne
push
rcl
pop
sbb
inc
add
jno
clc
add
adc
loopne
andl
cmpsb
scas
push
adc
leave
cs
inc
add
stos
fisubrs
jbe
test
or
loopne
enter
loop
into
pop
mov
push
clc
push
cwtl
andl
cltd
pop
rcrb
cs
scas
xor
repz
int
jno
pop
jecxz
dec
inc
adc
or
mov
int
aas
fwait
cmp
jmp
out
and
dec
and
into
ja
pop
jo
cmp
sub
test
shlb
xor
rcrl
aas
sbb
xor
mov
jl
sub
ds
xor
stc
mov
mov
ds
lret
mov
lds
cmp
or
jae
inc
fcmovne
imul
add
mov
fld
shll
sub
and
sub
jae
xchg
xor
in
iret
mov
cmpsb
pop
mov
lcall
rcr
ds
rcl
inc
mov
jno
call
cmpsb
push
dec
insb
hlt
iret
mov
xchg
dec
sub
movsl
std
jle
divb
fistpl
repnz
xchg
cwtl
or
fs
stos
mov
cmp
inc
sbb
mov
das
adc
sub
add
or
mov
jnp
xor
cmp
jae
mov
mov
sub
popf
push
into
push
mov
mov
push
or
je
popf
mov
pushf
push
in
sbb
xchg
inc
fwait
and
jle
or
sbb
mov
push
clc
orl
sbb
repz
test
movsb
clc
js
xor
or
pop
jecxz
xor
adcl
shl
das
popa
pop
pushf
mov
icebp
ss
adc
cmc
testb
gs
adc
and
cmp
push
adc
inc
inc
or
jmp
in
movsl
cmpsl
loop
add
jnp
aaa
xchg
jns
rclb
int3
nop
iret
nop
filds
ss
cmc
mov
scas
inc
ljmp
dec
push
dec
cmc
and
test
inc
xchg
out
cmp
shlb
mov
jnp
add
xchg
xlat
xorb
cmp
mov
das
leave
fldenv
mov
xor
int
jmp
adc
ret
fsubrl
mov
pop
sahf
mov
push
lock
jbe
dec
inc
js
lea
mov
and
jne
outsl
pushf
pop
inc
mov
jle
cmp
jno
into
xchg
adc
daa
adc
aas
das
das
jmp
ret
gs
data16
adc
ret
out
xchg
adc
jne
xlat
mov
out
cmp
inc
jmp
lea
out
add
push
sbb
sub
loopne
and
pop
jb
jmp
leave
pcmpeqd
jl
rcrl
pop
sub
xchg
lret
jle
fs
cmpsl
popa
pop
lret
sub
xlat
sub
cmpsb
pop
push
int3
addb
sub
cmp
pop
int3
xchg
shlb
scas
cmp
inc
idivl
in
pop
inc
out
pop
sub
push
int
push
aad
xchg
movsl
cli
cmc
jle
out
push
jae
pop
mov
inc
adc
jae
mov
les
mov
jg
add
call
aas
andb
clc
xchg
in
lea
push
lcall
pop
pop
sbb
or
inc
out
outsb
fisubs
les
mov
movsb
pop
or
out
mov
test
lahf
shlb
loopne
sbb
dec
fidivrl
outsb
dec
adcl
push
or
cmp
lcall
xchg
jb
faddl
jg
mov
dec
pop
push
jg
std
push
test
add
std
pop
pop
xor
mov
fwait
icebp
mov
add
mov
and
xchg
mov
mov
dec
mov
push
incb
aam
jle
fadds
mov
fisttpl
andl
push
adc
sbbb
jb
dec
push
lds
add
pusha
pop
xor
push
pop
aas
cmp
mov
or
out
sub
iret
mov
push
pushf
movsl
xchg
lods
movsb
pop
mov
sbb
pop
jno
xchg
call
jg
push
mov
addr16
or
rorb
inc
fwait
popa
inc
out
push
cmpsb
fsubr
call
add
and
mov
cmp
xchg
cmc
push
jg
jle
cltd
push
inc
sbb
fldcw
cmpsl
xor
dec
scas
andps
jnp
jb
mov
mov
jbe
das
loope
jb
sub
cltd
mov
mov
sbb
pop
in
and
xchg
insl
xor
ja
mov
shlb
fildll
out
push
and
hlt
aam
cmpsl
sub
stc
or
cmpsl
fildll
jb
lcall
je
push
popa
cmpsb
pop
clc
lock
add
push
lds
push
outsb
mov
push
mov
inc
pushf
push
or
or
bound
int3
pop
jo
add
std
jb
aad
xor
inc
sub
pusha
int3
aam
or
out
cmc
dec
push
xchg
dec
sub
cbtw
sub
repnz
cmp
mov
pop
xchg
or
into
jno
fidivl
pop
out
mov
insb
cltd
xchg
lret
or
cmp
mov
notl
and
and
dec
cmp
sahf
fcos
daa
cmp
add
ret
fucomp
inc
loopne
scas
ret
inc
hlt
call
int3
mov
incl
inc
inc
iret
pop
divl
das
inc
pop
lods
or
xchg
rorl
jp
mov
das
mov
adcl
addr16
test
cmp
lea
iret
push
lret
or
jp
push
idivl
loop
cs
adc
ret
js
fdivs
jecxz
cld
dec
sbb
jns
outsb
shrb
adc
jp
fcomps
jmp
mov
ucomiss
mov
dec
mov
pushf
repz
push
orl
test
dec
inc
push
cmp
mov
jecxz
xor
fs
stos
cmp
jge
in
ds
sub
xchg
sbb
aas
inc
faddp
xor
ficoms
je
push
clc
jne
cmp
and
inc
pop
outsb
push
push
in
mov
cli
mov
stc
adc
mov
xchg
mov
repnz
les
fstpl
test
rolb
jge
pop
sub
push
in
jae
std
out
mov
xchg
out
mov
inc
pushf
repz
aad
xchg
add
push
add
xlat
out
mov
fsubrs
lods
hlt
cmp
sbb
and
dec
cmp
xchg
out
cld
sub
sub
sub
add
in
mov
sbb
ljmp
push
dec
sub
outsb
xor
add
ret
stos
xchg
popl
sbb
pusha
sahf
add
or
stos
mov
and
repz
arpl
cli
repz
sysexit
jecxz
dec
lahf
dec
es
pop
mov
jmp
push
cmp
adc
shll
push
push
add
or
out
add
ret
cwtl
daa
call
xchg
pop
sub
pop
test
xor
mov
mov
sub
shll
cli
sub
lahf
shll
and
jbe
in
jmp
stc
daa
ja
dec
scas
enter
loop
xor
add
dec
das
cmpsl
enter
dec
push
in
shll
ficoml
rcrb
rcrl
adc
mov
push
pop
cmovp
insl
in
scas
jne
xchg
cmp
push
mov
lods
in
nop
inc
and
ret
jp
cld
aam
mov
imul
jbe
or
data16
into
push
leave
nop
adc
jge
xor
and
mov
mov
cmpsl
sbb
pop
sbb
and
sbb
out
in
andb
and
lds
dec
mov
out
jb
dec
ret
rcll
cmp
add
jno
mov
scas
jecxz
shr
push
test
mov
dec
push
mov
lock
jg
xchg
pop
jae
sti
jns
popl
xchg
push
cld
into
mov
es
ja
adc
jns,pt
loop
add
mov
jl
mov
clc
movsl
cmp
inc
adc
call
jno
rcr
add
or
xchg
fbld
push
jne
mov
and
xor
mov
xchg
dec
sub
and
cmp
or
mov
js
adc
xlat
lahf
out
jnp
cmp
pop
cwtl
test
mov
call
pop
cmp
les
push
clc
call
fdivrp
pop
aas
mov
fidivrs
mov
xchg
je
jecxz
push
pop
add
mov
dec
jno
inc
es
push
ficompl
inc
and
in
or
or
addr16
cmpsl
mov
mov
into
cmp
mov
cli
push
outsl
jp
pop
aad
jo
hlt
sti
mov
outsl
jb
push
cs
adc
sbb
adc
push
sbb
addr16
stc
rclb
fildll
jmp
or
arpl
cmp
cltd
notl
popa
mov
mov
adc
sahf
dec
mov
addr16
lock
sub
jg
jb
shlb
or
std
xlat
repnz
enter
adc
fucom
mov
adc
insb
mov
mov
cmp
int
arpl
pop
xorl
and
scas
mov
pop
adcl
cmp
fcomps
or
int3
sbb
das
lods
xor
sub
mov
scas
dec
add
push
fiadds
sbb
andl
push
cmpsb
sbb
ds
adc
adc
sbb
push
inc
test
in
add
mov
cmc
xchg
in
scas
test
je
js
and
incb
adc
lret
jg
or
cmp
iret
jno
jne
ds
sbb
mov
pop
adc
inc
out
cmp
pop
jae
arpl
inc
int3
pushf
shlb
xor
dec
dec
adc
or
test
mov
jnp
test
movsl
jp
iret
jae
leave
pop
mov
push
inc
cmpsb
ljmp
push
mov
leave
or
enter
push
clc
aas
and
fldcw
pop
iret
pop
loopne
mov
out
and
dec
cmp
cmp
xor
push
test
inc
mov
es
push
inc
sti
adc
lods
mov
cmp
inc
data16
inc
dec
stos
mov
and
pop
mov
xor
xor
mov
test
clc
cmp
sysenter
repz
jb
notl
cmp
push
js
pop
rorl
orl
ret
out
dec
lret
push
popa
aaa
sbb
movsb
setp
mov
test
and
pop
rolb
xchg
inc
or
sub
or
dec
ret
frstor
jle
popa
cmp
mov
rcr
outsb
pop
aas
out
outsb
or
push
bound
loop
test
or
subl
gs
cmp
aas
fistpll
lods
lret
hlt
jg
xor
mov
cmpsb
jecxz
loopne
sbb
adc
mov
sbb
dec
sbb
jg
daa
and
jb
jmp
and
add
push
mov
mov
out
and
or
mov
lret
pop
insb
pop
dec
fldenv
fdiv
repnz
dec
and
and
test
popf
ret
inc
mov
dec
mov
jp
add
mov
imul
xchg
imul
pop
clc
or
xor
cmp
add
fstpl
push
mov
pop
dec
mov
fnsave
add
dec
outsl
fdivp
repz
mov
xchg
sbb
fld
xor
xchg
sub
jae
mov
js
nop
imul
sub
sub
lahf
mov
aaa
nop
jb
fidivrs
inc
jbe
lret
mov
push
popf
sbb
push
xchg
insl
movsb
pusha
aam
adc
inc
js
daa
xchg
es
cmpsb
sub
in
xor
sub
mov
std
push
sbb
xchg
out
add
in
cmpsl
in
pop
cmp
movsl
ret
xchg
and
mov
mov
add
dec
cmp
xchg
stos
out
adcl
jl
adc
add
fs
push
clc
jge
es
or
add
xor
out
push
mov
ljmp
dec
push
cmpsb
inc
jo
xchg
bound
cltd
or
loopne
mov
xchg
gs
or
testl
inc
jno
inc
xchg
addr16
mov
movsl
lahf
or
and
js
xor
push
call
adc
rorb
js
add
movsb
sbbb
xor
adc
sbb
mov
cmp
shll
aad
jle
mov
ds
push
test
mov
pusha
xchg
pavgw
jo
adc
js
in
out
repz
cmp
mov
pushl
xchg
and
lret
mov
jns
in
mov
push
jbe
xor
mov
sub
jne
out
jae
mov
jo
dec
xchg
mov
lods
and
imul
sub
xor
outsb
stc
or
fdivl
dec
out
pop
nop
add
jae
hlt
aam
test
test
add
jecxz
jns
neg
adc
js
rolb
arpl
xchg
or
dec
mov
sub
jno
std
inc
sbbb
lahf
sbb
sub
lds
sbb
bound
out
das
pop
in
sub
inc
aaa
test
int3
loope
xchg
in
or
lock
pop
cmp
mov
sbb
xchg
icebp
out
add
cld
add
jle
clc
call
jle
mov
add
sub
aad
dec
mov
xor
aad
cmp
inc
xchg
cmp
rorb
add
and
vunpckhps
cs
flds
jge
movsb
mov
daa
cld
mov
sarb
push
test
mov
lods
call
mov
fiadds
xchg
je
call
iret
inc
jbe
mov
test
sti
mov
dec
mov
cmp
out
int
imul
xchg
mov
add
add
arpl
stc
ja
mov
mov
pop
mov
mov
mov
fimuls
mov
push
pusha
test
loopne
mov
and
sahf
pop
mov
jbe
ficoms
out
push
ficompl
inc
xor
sub
add
push
xor
adc
fbld
jno
call
mov
push
sub
fldenv
idivb
or
push
popl
hlt
addr16
pop
add
cs
mov
sbb
mov
xchg
mov
mov
jp
cwtl
push
decb
fdivs
fwait
add
stos
fmul
xchg
lret
dec
mov
bound
and
icebp
push
jecxz
mov
xchg
test
mov
cmp
in
stc
subb
nop
jb
add
dec
insl
je
data16
sbb
xchg
sbb
xchg
push
or
push
push
lcall
fistl
arpl
mov
stc
push
lods
add
cmp
popa
add
shrb
sub
push
mov
pop
dec
cmp
mov
xchg
or
js
or
cmp
rorb
lods
jns
int3
sub
loope
adc
pop
dec
clc
push
sbb
push
rclb
dec
mov
leave
jle
aas
push
insb
call
add
dec
mov
cmpsb
bound
mov
popa
mov
xchg
sbb
cmpsl
dec
into
insl
in
push
aad
negb
aas
sub
dec
lcall
sbb
pop
stos
sahf
daa
dec
movsl
jno
mov
fnstcw
ds
or
jns
pop
pop
xchg
mov
mov
lret
fs
or
push
xchg
xchg
add
push
add
push
lret
in
ss
pusha
pop
mov
or
mov
ret
mov
lret
adc
mov
sub
mov
pop
push
sbb
sub
shrl
rclb
inc
inc
inc
jp
imul
mov
scas
mov
cmpsl
and
dec
push
push
inc
rorb
dec
and
pop
or
test
xchg
cmp
movsb
push
sub
stos
loopne
fs
test
scas
push
outsb
add
add
repz
ds
imul
cmc
daa
imul
mov
add
out
fidivl
mov
and
cmpsl
mov
enter
inc
pop
jae
pop
mov
push
push
in
add
pop
mov
adcl
cmpsb
fisubrl
xor
inc
sub
push
insb
lods
inc
lods
mov
mov
xchg
int
and
xor
icebp
jecxz
jg
xor
adcb
dec
xchg
or
enter
xor
inc
stc
loop
jae
fcmovu
fsubrs
push
jl
je
in
sbb
mov
outsl
push
pop
mov
std
adc
stos
cltd
push
leave
into
fwait
call
jecxz
xchg
push
out
dec
sbb
jmp
inc
aaa
mov
push
jg
xlat
mov
movsl
push
or
out
loope
mov
leave
cmp
mov
fidivs
push
add
aaa
mulb
mov
test
outsb
jne
and
push
mov
jg
inc
es
mov
lret
adc
cltd
mov
loop
fcomps
sub
dec
outsb
cmp
xchg
cmpsl
and
inc
dec
leave
mov
enter
int3
inc
xlat
mov
cmpsb
int
xchg
popf
sub
jle
pop
mov
jns
fmul
adc
test
lret
pop
xchg
fwait
dec
and
and
inc
arpl
add
push
jne
mov
mov
ret
fbld
mov
mov
repz
inc
or
out
cmp
sub
xchg
cwtl
mov
inc
aam
cld
fsubrl
or
xchg
mov
jmp
outsb
xchg
ljmp
sub
push
call
pop
sti
xor
mov
js
ss
jo
or
popa
pop
pop
mov
testl
lods
popf
insb
aaa
les
adc
repnz
stos
pusha
adc
mov
push
jb
imul
call
lock
mov
or
call
js
aas
xor
sub
xor
test
pop
hlt
test
sbb
jb
test
lock
or
jne
outsb
negl
enter
pop
cmpsb
shll
fisttps
sub
xchg
std
add
dec
or
hlt
out
movsb
insb
xchg
cs
fsubr
cltd
and
pop
sarb
xchg
add
pop
xor
pop
jecxz
pushf
and
inc
int3
in
in
push
pop
or
cmp
out
sbb
dec
lret
icebp
test
sbb
and
icebp
xor
adc
mov
dec
jbe
out
call
jge
jno
jb
pop
pushf
adc
mov
xor
push
cmp
sbb
fwait
jg
jmp
xlat
movb
push
lock
sbb
cli
loop
sti
jno
shll
and
jmp
mov
clc
adc
mov
sub
jo,pt
es
rcrb
cli
fwait
pop
xchg
cmp
jnp
dec
push
cmpsb
lods
inc
mov
add
pop
adc
add
fwait
in
inc
sbb
dec
into
pop
loopne
movsl
mov
jecxz
iret
push
lea
and
mov
xchg
icebp
cmpb
mov
std
mov
jb
push
xlat
pop
and
mov
push
lcall
popa
mov
dec
xor
pop
mov
out
subl
jle
mov
ffree
pop
mov
out
outsl
jnp
pop
pop
dec
jp
add
xchg
push
fidivrs
cwtl
xchg
andb
and
fwait
adc
je
jmp
cmc
mov
mov
mov
leave
fldt
push
jne
pop
icebp
push
iret
jno
test
xchg
stos
aaa
call
adc
xchg
inc
in
in
test
js
ret
xchg
popa
or
add
add
insb
and
sub
jo
enter
jmp
mov
pop
les
pop
or
bound
in
bnd
outsl
mov
pop
cli
pop
fwait
lock
stc
mov
stos
test
stos
dec
jb
in
dec
push
sbb
mov
lahf
pop
mov
add
mov
sahf
orl
sarl
mov
test
add
lods
int3
les
movsl
cmc
xchg
sti
adc
mov
fwait
inc
je
inc
clc
pop
bound
js
je
popa
or
jae
xlat
push
cmpsb
lahf
imul
fnstsw
mov
shlb
push
data16
inc
xor
xorb
mov
mov
mov
fs
xor
inc
popa
cmp
mov
inc
jae
cmp
sub
mov
mov
cld
jnp
cs
sar
loopne
in
enter
clc
push
in
and
xchg
cmp
or
push
pop
adc
sbb
sbb
in
dec
push
mov
scas
cmc
and
cmpsb
lods
pop
mov
and
add
enter
pop
test
dec
push
data16
jno
adc
jb
in
or
lea
ja
xchg
mov
aaa
test
adc
adc
out
cwtl
cld
mov
adc
jp
add
inc
addb
jbe
cmc
mov
mov
out
mov
stos
mov
cmc
nop
shl
repz
dec
xor
and
fcom
pop
iret
scas
loop
iret
mov
shlb
shrl
jp
xchg
hlt
xor
push
gs
imul
mov
inc
dec
jl
dec
jns
lahf
rcr
xor
jl
fstp
mov
aad
pop
ljmp
pop
pop
inc
mov
dec
pop
ja
mov
sbb
mov
stos
bnd
pop
mov
mov
adc
mov
sbb
mov
jne
incl
cmp
cmc
repz
rcr
xor
das
adcb
inc
adc
add
das
in
jno
cmp
jnp
test
pop
jne
insl
pop
xchg
dec
cmp
cmp
sbb
push
icebp
ret
xor
jecxz
mov
test
mov
add
ret
sub
fldenv
xchg
inc
scas
test
pop
lret
push
xor
jge
add
xlat
ret
cmpsl
mov
jp
mov
cwtl
sbb
xor
inc
and
mov
jg
mov
or
xchg
int
lahf
popf
inc
fistps
jg
leave
insl
cmp
sbb
mov
xchg
std
pop
pop
enter
addl
mov
dec
inc
adcb
cmpb
lea
dec
push
jae
mov
mov
mov
ds
das
test
ret
shlb
movsb
fsubrl
push
xchg
sbb
xchg
loopne
jl
mov
inc
xchg
sbbl
jp
es
inc
xchg
mov
mov
rcrb
test
imul
ret
lods
test
xchg
mov
pop
movsb
nop
sub
jns
mov
fwait
test
int3
mov
in
lret
add
push
xor
movsl
fistl
jns
xor
mov
sub
inc
cmp
popf
int
cltd
jns
mov
jne
ljmp
jbe
adc
or
mov
xor
fwait
add
mov
sbb
int3
dec
popa
sub
testb
icebp
cmp
lods
test
push
flds
jmp
pop
dec
movsl
ret
mov
adc
inc
pusha
cmp
xlat
aam
jp
imul
or
insl
out
push
xor
nop
dec
loope
mov
xor
aas
mov
es
jg
addr16
je
push
xchg
dec
cmp
mov
xor
scas
jl
mov
jmp
and
enter
add
mov
fucomip
and
push
arpl
jecxz
inc
enter
cmpsl
mov
jbe
push
lea
jb
stc
mov
out
or
add
mov
add
int
test
into
xor
cmp
xorl
sub
idivb
loop
sub
pop
jmp
cmp
ret
xchg
and
cmp
sbb
lret
divb
jle
pop
jle
in
push
lahf
push
or
jo
movsl
push
sti
orl
ljmp
pop
loop
dec
fmulp
lcall
dec
push
add
movsl
orb
cwtl
mov
push
jne
mov
cld
jmp
rcr
nop
gs
add
outsl
aam
lahf
mov
add
add
aaa
cmp
rcr
jmp
mov
add
call
or
xor
or
jne
xchg
std
add
jo
jbe
inc
cwtl
push
cs
mov
jmp
xor
mov
dec
hlt
push
push
sbb
push
inc
cmpsb
xor
out
jo
jg
ret
in
dec
xchg
outsl
inc
shlb
daa
and
pop
inc
sub
mov
push
mov
movsl
push
cwtl
jae
sub
in
loopne
sahf
shlb
mov
fcoml
cmpsb
out
jle
adc
jno
mov
push
lds
sbb
xchg
inc
test
add
arpl
call
dec
pop
idivl
js
dec
and
xchg
and
fistpll
cld
dec
push
cmpsb
add
push
mov
loope
xor
fistpll
cltd
jb
jmp
orb
sub
imul
mov
iret
loop
sbb
mov
cmp
xchg
pop
into
push
mov
push
mov
mov
imul
or
cmc
das
lods
sbb
mov
ret
div
and
mov
cli
cli
cmp
and
popf
mov
orl
jae
mov
mov
jle
push
bound
inc
loop
or
sub
pop
sbb
aam
stos
movsl
das
jp
ss
or
xor
lcall
cmp
in
dec
or
pop
adc
mov
xchg
adc
xchg
test
out
push
xchg
mov
cmpl
or
fs
jns
arpl
mov
sbb
aam
arpl
test
shrb
adc
insl
mov
clc
fsubp
test
or
aaa
movsl
insb
pop
sti
subl
xchg
cs
adc
xor
xlat
lods
rol
aam
lret
stos
js
mov
fnstcw
xchg
filds
rcr
fwait
imul
sub
jle
cmpb
cmp
add
and
rdtsc
cmpl
hlt
inc
sub
shll
rol
or
popa
lds
pop
adc
das
insb
xor
lock
pop
ret
notb
xor
scas
lcall
sub
xchg
push
add
lods
and
mov
push
out
mov
inc
xor
mov
pop
stos
sub
pop
dec
mov
cmp
cwtl
fsts
decl
dec
arpl
stos
aaa
loopne
push
and
and
pushf
f2xm1
mov
sbb
popf
shrb
mov
pusha
ljmp
out
mov
push
jae
mov
fsubp
cmp
nop
mov
and
std
push
xchg
fucomip
call
adc
popa
mov
cmc
pusha
lods
pushf
xchg
xor
cltd
and
mov
pop
add
sub
repnz
es
xchg
adc
imull
orl
lock
jb
out
mov
dec
xor
lods
mov
test
cmp
jo
fwait
mov
cld
inc
movaps
fidivrl
lcall
test
push
xor
and
in
sub
pop
dec
jbe
jg
fs
xor
repz
xchg
loope
out
mov
cwtl
sub
dec
dec
mov
dec
mov
daa
jb
jp
sbb
jno
clc
cmp
popa
jl,pn
and
mov
out
sbb
or
pop
mov
das
es
ja
je
mov
sub
ljmp
and
enter
frstor
jmp
test
test
jge
push
insl
jmp
lock
mov
inc
jge
sbb
stos
data16
mov
test
sub
scas
pop
daa
push
mov
arpl
fadds
jb
dec
xchg
mov
pop
sub
out
loopne
movsb
imul
sbb
add
add
movsl
pop
push
outsl
sbb
push
enter
call
in
fadds
outsl
sbb
cmp
pop
and
add
and
mov
popa
in
pusha
jo
pushl
xor
shll
adc
mov
rclb
pop
push
inc
pop
inc
sbb
loope
mov
xor
sub
jmp
je
sti
in
mov
push
loop
push
cltd
add
je
bound
mov
nop
icebp
adc
ja
int
xchg
pop
mov
dec
xchg
fnstcw
or
dec
dec
add
repnz
movsl
hlt
int
dec
pop
jp
out
into
jmp
sbb
push
lret
sub
ret
cmpsb
xchg
out
stos
lret
and
int3
xor
pop
std
in
sub
push
mov
mov
fwait
add
arpl
mov
je
gs
sub
testl
insb
in
lahf
dec
jbe
jbe
clc
push
aam
stc
pushf
sub
lods
cli
add
scas
xor
add
lds
test
lahf
mov
mov
sbb
mov
popa
and
xor
pop
out
divb
mov
add
adcb
rcrb
sarb
add
call
test
shlb
pop
mov
xor
xchg
mov
idivl
scas
je
idivl
sahf
push
es
std
stos
mov
xchg
push
mov
or
mov
pop
dec
dec
popa
jbe
lret
cs
inc
fdiv
add
inc
xor
mov
ljmp
sbb
jl
mov
dec
lds
xchg
imul
or
mov
lret
fisttpl
lods
aaa
jno
insl
lahf
aas
and
or
sbb
sbb
pop
sti
ficoml
mov
cmpsb
pop
int
inc
rclb
es
loope
jecxz
fwait
ja
lds
push
dec
pusha
mov
lods
or
push
dec
out
outsl
cmp
mov
xor
add
jnp
dec
pop
jno
push
adc
mov
push
push
adc
aaa
xchg
inc
pop
jae
push
cmpsb
int
xor
arpl
fnstenv
lahf
mov
sti
push
xor
xchg
int3
lods
nop
xchg
add
adc
mov
and
pop
pushf
sbb
mov
pushf
das
aad
shlb
sahf
xchg
sub
ja
nop
add
xchg
in
cmp
and
test
jne
rclb
mov
test
inc
xchg
out
or
jmp
lcall
ljmp
sbb
xor
movl
test
pop
push
pop
and
dec
lds
inc
iret
cs
sub
jmp
lea
adc
pop
add
test
lock
pop
clc
shll
mov
aaa
jg
dec
loopne
lret
xlat
pop
cmp
mov
out
jnp
stos
in
mov
sub
jbe
dec
test
mov
and
ss
loop
pop
adc
xchg
call
ud0
out
adc
dec
fs
pop
ret
daa
inc
mov
cmpxchg8b
xchg
clc
lcall
arpl
inc
adc
cmp
stc
cmp
inc
dec
ja
fidivl
sbb
cs
test
sub
jle
mov
xor
hlt
ror
sub
mov
inc
push
push
pop
mov
push
inc
data16
mov
adc
jl
hlt
push
and
cwtl
xchg
mov
fdivl
fwait
cmp
cmc
and
xor
stos
dec
inc
inc
inc
mov
adc
mov
dec
push
test
mov
sbb
int
repz
push
cmc
fucomp
add
inc
pop
in
aad
ds
or
mov
or
inc
shlb
arpl
clc
mov
vphaddbw
cld
adc
fldt
out
lret
pop
lret
movsb
stos
fmuls
stos
insl
test
out
repz
lds
imul
loope
int3
movsl
dec
std
cmc
push
repnz
jp
les
mov
jb
std
test
or
fstpl
mov
jmp
stos
std
or
jmp
push
std
add
xchg
sub
sub
cmpsl
test
sbb
int3
pop
in
sbb
jae
fistpll
leave
in
lods
bound
xor
stos
lfs
dec
loope
xchg
sbb
dec
enter
cmp
sub
cltd
xchg
push
scas
mov
mov
out
jne
es
or
push
stos
mov
aas
divl
inc
movsl
add
data16
push
pop
push
jle
add
mov
scas
cwtl
pop
imul
add
push
push
mov
adc
mov
jmp
cmp
pop
xchg
mov
jmp
loope
in
cli
add
ds
mov
in
std
mov
push
or
cmpsb
push
jg
gs
pop
xchg
pushf
pop
fimuls
jp
int3
repz
mov
outsb
dec
mov
lret
mov
fwait
pop
loop
and
imull
add
and
orl
add
es
xor
dec
and
inc
jns
adc
iret
or
add
mov
outsb
ret
pop
xlat
inc
inc
stos
cmpb
cmpsl
jnp
xchg
fistpl
jo
lods
lods
fstp
add
outsl
xchg
into
adcl
mov
mov
fdivrs
rcrb
movsb
mov
shlb
sbb
xorb
cs
in
xor
dec
test
add
lock
stos
pop
loopne
jmp
andl
fldcw
js
je
mov
and
lea
cmp
gs
adc
ret
rcr
cmp
out
gs
andb
shrl
popa
mov
pop
add
stc
es
push
and
and
mov
jno
push
in
pop
and
mov
adc
jecxz
in
jb
ret
sub
push
std
les
outsl
test
adc
rcr
call
lock
sbb
divl
pop
and
lret
addr16
test
clc
lret
or
enter
cmp
cmp
loop
lcall
pop
push
xchg
aam
jns
pop
fstpt
mov
ficomps
mov
outsl
adc
jno
and
mov
inc
xchg
mull
xchg
in
push
cmp
add
add
lds
sbb
pop
hlt
imul
push
arpl
lock
sbb
daa
or
cmp
mov
cmp
rclb
xchg
mov
aaa
in
pop
push
jp
mov
add
push
inc
or
dec
inc
loopnew
shl
or
mov
adc
dec
adc
stos
fcoml
ret
mov
lock
cmp
loope
out
mov
jnp
jl
xor
pop
sub
imul
out
pop
jnp
mov
pop
fisttps
stos
and
rcl
or
dec
arpl
or
sbb
inc
sub
filds
inc
loop
pop
add
notl
xlat
sbb
sub
repz
in
inc
xor
les
pop
xlat
pop
mov
out
adc
js
fwait
call
jmp
jg
insl
fidivrs
test
jne
adc
sbb
mov
fwait
adc
dec
repz
iret
pushl
cwtl
ret
imul
jo
fadds
iret
in
es
in
dec
add
sub
les
jle
pop
mov
sbb
lock
xchg
scas
xor
jb
pop
scas
xor
cmp
mov
dec
pop
cwtl
cmp
adc
test
repnz
add
ja
aas
sbb
sub
lcall
insl
pop
inc
nop
adc
inc
mov
xorl
shll
mov
addr16
aad
repz
jmp
add
adc
lret
fs
lods
push
sub
fisttps
in
jb
push
xlat
movsb
pushf
roll
jno
testb
scas
lods
mov
or
adc
sbb
enter
loope
sbb
mov
fstps
mov
mov
enter
jno
and
pop
in
jge
fcmovbe
sarb
loopne
push
jb
mov
mov
into
stos
roll
cmp
mov
adc
inc
jle
mov
adc
pop
lods
mov
mov
aad
cmp
pusha
mov
sbb
lret
call
push
jnp
mov
nop
xchg
push
adc
mov
mov
pop
cmp
das
stos
jle
mov
sub
mov
jg
pop
scas
inc
push
add
pop
dec
lock
mov
idivl
pop
add
out
jne
enter
push
mov
icebp
pop
enter
in
pop
fiadds
jb
pushw
jp
test
cwtl
mov
popf
xor
or
fldlg2
jae
iret
mov
push
dec
or
je
js
sbb
xor
repz
mov
sarb
adc
sbb
mov
push
stos
in
and
ljmp
jmp
outsl
in
scas
add
mov
cltd
inc
push
aaa
cmc
imul
push
std
out
nop
and
or
scas
ret
sahf
iret
fiadds
push
ja
mov
dec
cs
add
jbe
or
clc
or
fimull
and
ss
xchg
shl
test
xor
xor
push
cmp
loopne
cwtl
jo
adc
das
dec
add
fdivrp
push
mov
iret
mov
aas
add
lret
add
fcmovu
and
test
xchg
clc
daa
movb
outsl
adc
mov
and
cmp
jmp
mov
int3
fidivs
insb
je
mov
and
lods
pop
add
sub
and
imul
jbe
das
jns
into
lds
addl
lods
fsubrl
mov
mov
fists
and
mov
adc
xchg
adc
mov
stos
xor
push
iret
rcrl
sub
fisttps
and
adc
fnstsw
dec
xor
dec
push
lret
mov
lret
in
add
sub
fisubl
int
test
scas
xchg
mov
ds
dec
or
out
aaa
xor
dec
push
popf
cltd
jp
out
sbb
subl
stos
xchg
cmp
jb
dec
fmull
jmp
lret
lcall
into
and
aaa
and
add
into
and
xchg
mov
jg
loop
das
lods
cmp
les
fsts
push
sbb
inc
icebp
add
mov
into
add
jbe
mov
dec
push
pop
ret
adc
fadds
and
add
daa
dec
bound
in
jmp
shll
pop
clc
cmp
lds
fldcw
jle
push
lret
jmp
loop
shll
pop
xchg
inc
outsl
or
sahf
inc
aaa
inc
scas
pop
jmp
mov
out
push
push
or
push
sbb
lcall
out
fcomps
test
clc
lcall
inc
mov
nop
loopne
pusha
xor
push
stc
mov
subl
pop
js
inc
mov
aad
ja
or
hlt
push
loop
xchg
push
pushf
js
inc
inc
cmp
xorl
mov
ror
arpl
adcl
xor
add
adc
mov
sbb
in
add
movsb
mov
mov
dec
cmpsl
popf
icebp
xor
out
dec
push
adc
push
dec
push
in
pop
cltd
sbb
ds
xchg
lea
push
out
in
and
cld
insl
lahf
push
in
push
mov
lret
push
sbb
jp
test
mov
mov
push
inc
sbb
sbb
cmp
fdivrp
es
fstpt
xchg
xlat
add
data16
xchg
mov
mov
add
aam
sbbb
dec
adc
pushf
js
test
arpl
shr
inc
dec
dec
adc
cmp
movsl
int3
pop
aaa
mov
inc
scas
loopne
arpl
inc
lods
mov
and
mov
mov
xor
flds
and
add
xlat
loope
mov
and
or
inc
divb
add
popf
and
cs
pop
fcmovu
imul
mov
or
inc
and
dec
scas
sub
dec
call
popa
or
push
call
dec
cltd
adc
mov
andl
imul
test
add
iret
in
int
pushf
test
mov
and
or
mov
punpcklbw
out
test
fisttpll
pop
jne
or
dec
nop
lods
mov
popf
hlt
inc
add
sub
xchg
xor
xor
sub
frstor
imul
gs
test
or
in
sahf
ret
xor
fs
pusha
or
pop
xor
and
ja
pop
sbb
neg
out
popf
fidivrl
or
repnz
fildl
cli
adc
xor
clc
jmp
jmp
jecxz
addl
movsb
xor
add
inc
cmp
pop
mov
xchg
xchg
cld
add
nop
andb
xchg
sub
cwtl
mov
std
rolb
int3
loop
dec
dec
mov
aas
rcr
pop
into
pop
or
movntq
out
pop
adc
pop
pop
sbb
mov
mov
daa
test
aaa
mov
adc
sti
add
mov
jae
cmp
adc
aas
shrb
ds
idivl
scas
pop
mov
psubd
or
aaa
aas
pop
cmpl
jnp
inc
xchg
mov
sbb
movsb
daa
aad
leave
pop
inc
std
mov
mov
add
jo
xchg
cmc
out
jno
push
inc
xchg
xlat
add
fwait
cmc
mov
xchg
cmp
and
test
dec
mov
sahf
fwait
aad
repz
xchg
enter
pop
call
cltd
pop
mov
fwait
aam
inc
aaa
add
mov
jbe
push
cmp
aam
mov
dec
mov
xlat
ja
fucomi
mull
fwait
push
aam
inc
stos
pushf
rclb
jp
and
dec
mov
cld
mov
cmp
hlt
push
andl
pop
xor
add
or
mov
in
cli
loopne
mov
mov
mov
leave
sbb
fstpt
xor
test
pop
loopne
add
xchg
clc
into
scas
xchg
cmp
arpl
mov
call
lret
push
mov
mov
mov
aad
pop
cwtl
xor
or
xchg
scas
jnp
push
push
cmp
adcb
pop
push
fbstp
ficoms
mov
pop
mov
push
pop
pop
loope
dec
imul
cmp
in
insb
push
pop
es
jle
xlat
xchg
test
push
aad
jg
pop
gs
add
ja
out
lds
xor
out
out
fwait
dec
push
dec
imul
mov
cmpsl
divl
stos
mov
add
js
shll
lahf
lahf
sbb
fimuls
cld
repnz
es
pop
fnstenv
cld
push
inc
stos
pop
cwtl
pop
lcall
int
into
jns
cmp
arpl
xor
jae
add
pop
fwait
push
jge
leave
rol
stos
stos
mov
mov
sub
and
sub
bound
in
hlt
subl
imul
jne
jnp
ljmp
add
push
inc
and
lods
icebp
loopne
jne
add
popl
dec
sbb
cltd
mov
sub
cmpsb
in
add
outsl
mov
inc
out
fldt
and
lock
lret
imul
sbb
inc
push
test
lahf
pop
cmc
mov
sbb
cs
aam
pop
mov
pushf
enter
lret
push
pop
decl
scas
add
sbb
jp
shl
testb
scas
adc
fdivrl
push
xor
aaa
or
add
cmpsl
in
addr16
nop
mov
cmpb
pusha
and
mov
stc
jnp
cli
test
lods
jns
and
mov
pop
mov
mov
aam
loop
std
cmp
xor
xchg
cmpsb
imul
mov
xchg
mov
subl
sti
and
lods
data16
pop
pop
adc
mov
adc
mov
xchg
out
rorl
jb
testl
fisubrs
dec
sar
jg
cli
dec
icebp
repz
push
mov
cmp
cwtl
cli
ja
pop
cmp
es
jmp
shl
adc
push
mov
lea
xchg
popa
sbb
notb
cltd
in
icebp
inc
mov
adc
mov
jl
fs
outsb
stos
cmp
dec
ffreep
mov
stos
xor
scas
negl
outsl
jb
filds
mov
xor
scas
xor
rorl
dec
divl
cs
cmp
in
mov
add
lret
push
cmp
ljmp
mov
filds
sub
hlt
inc
aas
and
jnp
adc
cmp
or
sbb
sub
popf
mov
pushf
cmp
inc
mov
or
xor
les
loop
or
mov
lods
push
sub
andb
dec
jg
fdiv
aad
add
xor
and
int
cmc
aas
in
inc
fisubs
pop
enter
inc
gs
push
scas
push
js
mov
push
push
mov
push
fisubs
lahf
addb
push
enter
push
mov
add
iret
adc
mov
xchg
iret
adc
repz
int3
lcall
cld
inc
jmp
xor
std
mov
inc
outsl
mov
or
pop
repnz
push
xor
gs
pusha
divl
push
adc
stos
dec
sub
xchg
lahf
cltd
xchg
les
cmpsb
in
inc
and
adc
ret
adc
ret
out
sub
filds
fs
iret
xchg
and
jnp
aad
test
mov
push
cld
xor
pop
sbb
lcall
call
imul
and
pop
in
outsb
orb
rorb
cltd
daa
cltd
cmp
das
cmp
das
notl
ja
into
adc
daa
shrb
fadds
ret
pop
sub
mov
ljmp
jb
mov
sub
dec
xrelease
push
sbb
jmp
mov
aas
adc
inc
sub
in
pop
lds
fists
jmp
cmp
mov
pop
mov
xlat
sub
leave
push
adc
pop
cs
fs
loop
pushf
lret
jecxz
dec
cmc
add
or
jge
cmp
add
pop
xchg
adc
pop
ffreep
cmp
xchg
pop
and
inc
insl
jl
nop
cmpl
rcrb
stc
xlat
ss
xchg
jbe
movsb
mov
sbb
xchg
mov
test
outsb
sbb
lods
push
pop
call
std
mov
popf
dec
and
pop
lea
push
imul
sbbl
sub
dec
loop
leave
out
rcrl
lods
adc
jo
sahf
imul
mov
mov
inc
stc
jae
push
lods
aam
cmp
jmp
push
fstpt
lds
and
outsl
loop
mov
rcll
dec
sbb
loop
mov
stos
jb
cmc
add
pop
mov
push
mov
and
jno
bound
fucomip
test
into
rclb
mov
push
or
daa
cmpsb
push
lret
xchg
mov
cmp
or
loopne
addr16
cmp
clc
dec
mov
xlat
test
nop
mov
in
fistpll
pop
in
mov
rcll
dec
cmpsb
pushf
xor
sbb
and
outsb
mov
andl
jp
dec
movsl
inc
mov
leave
or
fisubl
enter
or
inc
test
insb
cmc
sti
push
aad
arpl
sub
iret
minps
xorb
leave
imul
xor
idivb
ds
scas
sub
pop
sub
dec
int
dec
es
movsb
push
dec
push
cmpsl
popf
int
mov
inc
cwtl
xchg
nop
mov
fisttpll
in
inc
or
xchg
lods
cmp
or
mov
test
cmp
ret
in
jmp
adc
add
rolb
jns
sbb
pushl
repnz
inc
imul
lock
cmc
ds
aam
rcll
lods
xchg
and
fstps
push
xor
mov
outsb
xchg
out
add
mov
cltd
rcrb
push
pop
loopne
xchg
add
roll
inc
loopne
neg
and
enter
stos
lcall
ds
inc
mov
inc
push
mov
mov
insl
cmc
or
sbb
add
orl
and
lret
retw
add
jge
ret
fwait
add
icebp
insb
leave
xchg
in
jg
es
ss
adc
push
cmpsb
cmp
dec
adc
or
in
jbe
cmpsb
xchg
mov
in
pop
cmpsl
sbb
hlt
xor
add
push
jo
or
push
sub
lods
jecxz
mov
orl
jmp
xlat
dec
push
add
movsb
subl
mov
xor
inc
dec
jecxz
movsb
out
adc
sbb
and
out
jecxz
xchg
sbb
pop
icebp
data16
mov
mov
out
jae
pop
outsl
adcb
push
xor
cmp
adc
stos
movsb
pop
mov
lea
mov
rolb
mov
bound
sbb
test
xor
in
sahf
vandnpd
push
popf
mov
jg
ljmp
or
push
add
mov
adc
icebp
dec
dec
ficomps
mov
or
frstor
mov
sub
jp
or
ljmp
sub
xchg
push
stos
mov
mov
sbb
insb
push
pop
das
xor
dec
addr16
call
push
or
mov
repz
mov
nop
adc
push
inc
scas
adc
dec
lret
in
mov
scas
stc
les
mov
gs
mov
ret
std
push
cmp
sub
mov
imul
add
mov
dec
add
out
mov
outsl
cli
xor
xor
leave
xchg
jl
mov
sbb
cs
sub
cs
xorb
les
cmp
ds
pop
or
fcmovnu
insl
push
push
or
ret
js
arpl
and
xor
leave
pop
push
cltd
shl
mov
ret
cbtw
out
fadds
aad
mov
xchg
push
lock
gs
test
inc
ljmp
pop
jle
jb
xlat
leave
dec
mov
mov
fwait
out
iret
add
mov
cmpsb
ret
mov
lea
inc
mov
inc
cmp
fnstenv
cmp
out
mov
dec
adc
inc
xchg
xor
mov
movsl
gs
inc
orl
ja
push
mov
sub
into
stc
int3
push
xchg
int3
and
out
clc
out
xor
xchg
mov
add
clc
imul
push
mov
xchg
aaa
dec
mov
leave
or
lret
jge
ja
cmpl
inc
aad
mov
sub
mov
scas
into
mov
int3
fsub
ret
dec
incl
sub
mov
addl
iret
rcrb
mov
in
mov
push
adc
leave
ja
test
outsb
leave
fadds
push
cmc
fisttpll
add
repnz
loop
dec
add
cmpsl
out
sbbb
push
xchg
add
cmp
repnz
rcr
jmp
pusha
lahf
mov
test
and
loop
dec
fstpl
scas
push
and
in
pop
mov
fadds
push
push
adc
jne
movsl
adc
jmp
loope
fstps
out
je
mov
fdivrl
call
into
or
cmp
sub
add
clc
in
fisttpll
aas
xor
dec
sub
jno
loop
xor
sub
add
push
inc
or
inc
lods
ss
lret
mov
mov
cmpsl
rorb
daa
rorl
dec
push
inc
outsl
idivb
sub
popf
leave
test
jb
idivl
sub
imul
push
test
mov
movsl
adc
jle
gs
inc
fidivl
xchg
adc
lret
mov
dec
dec
popf
dec
push
mov
scas
imul
jne
mov
gs
xor
test
inc
cmp
pop
adc
xor
inc
insl
jnp
ja
or
sbb
xchg
jle
pop
rol
xor
or
dec
jbe
addr16
inc
push
push
call
lcall
aad
mov
mov
mov
sbb
sbb
mov
cmpl
push
in
fbld
mov
fdivl
jmp
add
add
das
sbb
xor
sar
add
pop
inc
scas
jp
div
push
call
test
je
mov
or
int3
mov
mov
and
flds
inc
fdivs
add
mov
cwtl
jl
jbe
repnz
es
or
out
push
shl
cmp
xor
js
cmp
cmpsb
mov
leave
mov
call
pop
push
sub
jp
lcall
in
and
jbe
in
push
and
mov
jl
adc
movsl
jb
sti
dec
dec
jb
jno
lea
movsb
lahf
aaa
sbb
and
loop
cltd
sbb
add
jp
jl
je
shll
daa
shlb
imul
inc
inc
imul
inc
lret
sbb
lods
dec
fimuls
sbb
hlt
jecxz
jmp
flds
push
ljmp
mov
sub
mov
mov
out
dec
lahf
mov
mov
scas
dec
jno
aas
test
sbb
ficompl
lds
mov
jmp
add
or
test
adc
enter
push
cmpsl
lds
leave
pop
rol
and
mov
jbe
sarb
pop
hlt
ret
cmp
aam
xchg
lcall
lods
ds
xlat
cmp
cltd
sbb
in
ljmp
or
std
scas
sbb
mov
cmpsb
shll
imul
fcmovbe
ficompl
leave
fcoms
out
nop
mov
cmp
cmc
cmp
mov
mov
push
jbe
fisubl
outsb
add
rorb
or
mov
fiadds
sub
daa
sub
ret
jns
jno
stos
pusha
push
mov
mov
xchg
dec
push
orl
sbb
inc
dec
mov
and
push
pushf
add
jb
sbb
sahf
jl
pop
insb
ja
lods
in
push
mov
jp
jb
ficomps
in
sub
mov
push
adc
jae
enter
push
iret
push
or
int
and
ss
cld
lods
popf
xchg
sbb
stos
pop
xlat
stos
movl
add
je
sub
data16
xor
clc
scas
mov
lret
es
aas
or
pushf
push
fcoms
push
adc
inc
mov
xor
enter
loope
jno
inc
pop
not
in
push
mov
sbb
push
adc
mov
roll
jmp
cmp
or
les
shrl
jns
addb
clc
pusha
xchg
sub
lea
lahf
mov
inc
int
jmp
je
loop
lods
pop
mov
jnp
bound
insb
inc
scas
cmp
lock
push
jmp
pop
dec
scas
mov
sbb
jg
lcall
pop
ret
cmpsb
std
pop
sbb
mov
repz
sbb
aam
mov
add
movsb
add
lea
or
mov
mov
lcall
jmp
xchg
mov
sub
repz
xchg
push
repnz
fisubl
sbb
stos
cmp
lcall
rcrb
mov
pop
and
les
xor
rolb
pop
sbbl
push
mov
imul
push
es
jnp
stos
jp
stos
jge
aaa
xchg
dec
cmpsl
jl
mov
mov
lods
repnz
lret
subl
stos
daa
insb
sti
imul
fwait
lods
ret
bound
dec
or
out
into
ret
sbb
dec
pop
xchg
push
sbb
mov
ss
jb
dec
mov
movsb
dec
fcmovnu
cmp
mov
jl
cltd
sbb
ja
fs
dec
xchg
and
mov
test
sub
sbb
add
into
cmp
sub
into
fimull
data16
mov
xchg
mov
inc
mov
shll
sub
inc
and
mov
and
shll
push
repnz
fsubrl
jp
cltd
je
cmp
pop
aam
je
pop
and
rcll
stc
dec
orb
xchg
mov
aaa
and
mov
sbb
imul
hlt
stc
jbe
xor
adc
pop
and
jge
sub
bound
jae
or
and
inc
sub
xor
or
jg
cmpsb
dec
shrb
dec
aas
mov
push
add
push
xchg
out
push
insl
pop
xor
mov
aaa
andl
cmpb
insl
adc
inc
cmpsb
mov
add
add
pop
hlt
or
mov
mov
dec
sub
imul
mov
cmp
inc
sbb
sbb
iret
mov
jno
out
mov
repz
xor
xor
cmp
pop
push
lock
sbb
nop
ss
and
and
addb
adc
cmp
shr
add
lret
sbb
lods
popf
fs
mov
iret
in
aaa
scas
adc
pop
mov
rorl
fs
out
out
enter
mov
xlat
call
mov
ljmp
mov
pop
add
je
movsl
xchg
ret
fiadds
lods
leave
and
mov
pushf
test
jnp
cs
movsl
sahf
push
mov
subl
sbb
xor
xchg
pop
adc
daa
pusha
insl
es
test
xchg
movl
pop
pop
mull
fs
push
call
pushf
jne
repz
out
js
mov
jbe
jae
pop
rcrb
xor
and
mov
jb
test
add
sahf
popa
outsl
xlat
test
testl
or
jo
mov
je
jne
mov
iret
stos
popf
xor
push
xlat
inc
outsl
sbb
inc
insl
fdiv
pusha
aam
into
or
mov
movsb
scas
cwtl
ja
mov
xor
mul
add
mov
pop
idivb
push
out
mov
pop
mov
insb
sub
xchg
jmp
jle
and
lods
fimuls
mov
ja
xor
or
icebp
or
pop
ss
jns
shl
sub
jmp
pop
mov
xor
movb
xchg
imul
push
adc
or
pop
mov
shll
je
xlat
fldenv
cmpb
inc
pop
rol
insb
outsl
add
inc
popa
push
lahf
lods
xchg
insb
adc
ljmp
mov
or
ret
sub
mov
cmp
data16
xor
arpl
sbb
jae
sbbl
rclb
in
jnp
ja
lea
xchg
push
js
mov
lret
clc
and
daa
dec
jo
inc
jnp
aas
push
xchg
lret
cs
jge
jmp
and
imul
rcrl
sti
jecxz
lret
add
jl
and
fwait
arpl
jle
jnp
pop
adc
subb
jb
adc
add
adc
or
cwtl
movb
dec
push
and
fisubrs
aaa
xchg
push
push
imul
adc
push
stos
stos
jmp
or
mov
test
sub
sbbl
or
sbb
mov
stos
rcr
adc
cmc
adc
jecxz
push
test
cmp
test
push
in
decl
ljmp
xor
adc
sub
popf
icebp
pop
inc
es
ds
push
sbb
fildl
mov
mov
sub
xor
pushf
movsl
or
ss
ret
js
inc
ja
xor
ficomps
and
ret
push
add
xor
pop
xchg
jge
push
es
sbb
push
pop
xchg
ss
jp
sbb
sbb
cmpsb
mov
fwait
aad
add
notb
lcall
in
add
repz
push
jge
pop
dec
popa
test
add
sbbl
adc
dec
rdmsr
test
inc
mov
xchg
stc
push
andl
xchg
sbb
out
arpl
in
dec
aas
dec
test
out
xchg
repz
xchg
xchg
shrb
adc
sbb
popa
rdmsr
mov
inc
addr16
xor
ret
inc
ljmp
out
xchg
int3
push
xchg
lret
and
add
push
mov
out
mov
lock
mov
fucomi
sbb
int
cwtl
int3
frstor
imul
cmc
shl
mov
loopne
ret
add
sub
add
inc
push
std
addr16
clc
orl
jg
and
pop
sub
imul
sub
pop
xor
push
add
jnp
test
lret
mov
sub
jb
mov
loopne
mov
call
test
out
adc
stos
je
lds
mov
ds
imul
push
in
flds
and
in
sahf
icebp
adc
and
sbb
push
dec
xchg
jle
test
popa
fwait
in
adc
lods
add
mov
outsl
addb
aas
dec
movsb
lds
sub
aad
pusha
je
cli
fs
bound
cwtl
xchg
add
inc
mov
imul
nop
xchg
dec
xor
in
lds
call
into
cmovns
mov
cmp
mov
stos
mov
test
add
js
and
or
cmp
cs
in
mov
std
jo
aam
xlat
ret
dec
test
xor
push
dec
inc
outsb
js
in
int3
or
notb
jns
movsl
loopne
inc
repnz
jnp
push
stos
dec
xor
aas
push
pop
fwait
sub
ja
movsb
jmp
loop
imul
into
rol
add
mov
pusha
and
sbb
jns
pop
out
nop
cs
jmp
jnp
xchg
icebp
ds
or
outsl
pop
jmp
or
ffree
divb
outsl
das
add
fucomip
mov
or
xchg
mov
jne
iret
rcrb
sbb
ja
mov
fcomip
xchg
adc
shll
cmpl
sahf
data16
ss
inc
and
sbb
fucompp
xor
into
jmp
cli
mov
adc
mov
cltd
test
mov
mov
sub
cmpsl
add
jns
hlt
aad
repz
cmp
pop
push
cmpsb
out
pop
daa
cmp
mov
idivl
movsb
push
sbb
push
lods
fnstsw
sub
insl
sbb
pop
ljmpw
adc
cwtl
jb
mov
jge
pushf
dec
adc
cmp
or
aas
aad
cmc
jmp
mov
sub
adcl
ljmp
dec
fsubl
ds
pop
jae
add
lea
sub
aad
mov
mov
shlb
dec
add
in
pop
aas
loopne
adc
dec
inc
in
ret
test
jmp
popf
mov
daa
scas
push
cs
test
repz
and
push
test
loop
sbb
negb
nop
jo
pop
jo
lds
cs
test
cmp
sub
sbb
jns
and
xor
add
shlb
pop
imul
cmp
wrmsr
xchg
or
jle
adc
stos
aad
add
dec
sahf
xor
adc
cmpsb
int3
dec
lods
repnz
jmp
jmp
jl
jp
and
loopne
fs
dec
dec
mov
jno
pop
arpl
add
or
data16
jnp
push
lods
lcall
loop
into
lahf
std
cltd
int3
sar
imul
fsts
xchg
push
insl
jnp
lods
push
cmpl
aaa
scas
adc
mov
jae
aam
inc
jb
mov
pop
sahf
orl
ds
repnz
aaa
jg
push
push
sbb
adc
fisubl
mov
xchg
insl
inc
push
pop
mov
stos
jae
xchg
movsb
std
xchg
movsb
lret
subb
scas
cmp
in
fisttps
aas
lods
xor
gs
mov
jae
push
out
and
flds
shll
push
sbb
mov
test
outsb
and
ss
repz
clc
cmp
xor
sub
mull
lods
pop
aam
push
arpl
or
imul
pop
fnstenv
add
cmc
aaa
mul
repz
mov
fistpl
sub
in
filds
sub
dec
adc
pop
insl
loop
mov
dec
push
push
cmp
jne
aaa
adc
and
add
enter
hlt
sbb
pop
mov
gs
mov
out
jl
jp
pop
mov
nop
leave
dec
add
inc
dec
pop
jg
imul
lock
out
in
cmp
and
jbe
cmc
ror
mov
mov
adc
jp
lods
and
std
lret
in
jp
pushf
mov
insb
popa
nop
add
or
out
push
mov
pop
push
scas
lock
hlt
mov
mov
js
jb
fistps
sub
adc
call
xchg
pusha
aad
arpl
pop
andb
mov
mov
pop
fimuls
cmp
int
aad
lock
popa
push
ljmp
or
mov
cwtl
cmp
inc
dec
stc
mov
cmp
sbb
int
fmuls
nop
clc
fnstsw
mov
lock
lret
push
sbb
jle
aam
mov
inc
push
inc
and
fisubs
adc
sub
aas
pop
mov
inc
in
pop
leave
movsb
bound
call
mov
xor
sti
and
mov
loope
div
xor
push
out
jns
jle
in
cmc
dec
push
outsb
in
push
sbb
in
jmp
xor
pop
out
cmp
mov
rcrb
jne
mov
dec
mov
lods
aaa
out
jae
rcll
mov
xlat
xchg
lret
add
cmpsb
out
sub
mov
fucom
shlb
ljmp
cmp
repnz
mov
xor
mov
cmp
adc
outsb
mov
adc
lods
imul
in
lds
adc
daa
cltd
ficomps
sbb
dec
imulb
pop
stos
push
adc
imul
scas
push
mov
pusha
add
mov
mov
loope
jg
data16
sub
and
mov
int
cmpsb
sub
mov
or
scas
scas
pop
js
mov
dec
cmpsl
cmp
cmpsl
push
sub
jl
test
repnz
jns
rorl
call
imul
mov
rclb
pop
stos
sbb
loope
in
iret
and
scas
mov
sbb
test
jno
rclb
mov
and
mov
cmp
mov
xchg
rcl
jmp
add
xchg
push
inc
cmp
inc
aam
jp
add
add
lcall
popl
stos
mov
loope
or
popa
movsb
les
lahf
or
jns
jecxz
dec
popf
ss
and
orl
mov
jp
ss
xor
inc
daa
dec
lods
ss
pop
add
in
test
mov
clc
rdpmc
xchg
push
pusha
cmp
movsl
shrl
rcll
mov
daa
mov
push
mov
pop
ret
shll
imul
call
mov
pop
cmp
das
dec
repz
mov
repz
test
arpl
mov
aad
sbb
xchg
leave
fistl
enter
mov
jle
mov
pop
mov
jmp
push
xchg
in
jne
jle
fstpl
mov
leave
fcmovnb
mov
lods
jo
and
fmulp
and
lret
lret
iret
std
pop
or
popf
cld
mov
push
mov
mov
pop
jo
jne
mov
loope
add
sub
mov
fs
and
lret
mov
mov
xor
xchg
dec
andb
call
in
ret
mov
jo
pop
hlt
xor
adc
rorb
iret
add
into
pop
jnp
int
rcr
or
enter
sbb
outsl
movsb
jmp
jl
xchg
sub
rcrb
jecxz
jne
or
mov
adc
push
xchg
cmp
icebp
or
stos
add
mov
mov
mov
outsl
lahf
daa
in
xchg
loopne
xchg
jecxz
stos
insl
cmp
mov
daa
pop
and
and
mov
mov
sub
pop
mov
adc
dec
xchg
popl
and
imul
push
les
or
xor
pusha
add
xchg
mov
ret
xchg
or
cs
pop
pop
dec
pop
es
bnd
and
pop
mov
mov
ja
pop
test
jecxz
mov
jmp
push
jo
mov
push
dec
sub
cmp
test
std
push
sbbb
ljmp
jb
addl
jnp
rcr
daa
adc
adc
dec
stos
push
push
in
pop
addr16
cmp
scas
jge
mov
xor
mov
iret
int
popa
mov
mov
inc
push
mov
aad
scas
faddl
mov
mov
adc
pop
test
sahf
aaa
and
push
and
push
xor
mov
sti
push
insl
push
pop
cwtl
pop
dec
test
adc
push
push
dec
push
pushf
pop
xor
aad
xor
popa
push
arpl
adc
push
mov
loop
jne
lret
fimull
pop
cmp
dec
rdmsr
and
pusha
insl
xchg
pop
shll
mov
out
repz
loope
into
movsb
add
ljmp
rcrb
test
lds
push
pop
mov
pop
scas
decl
lret
sbbl
sti
cmc
jecxz
mov
xor
test
adcl
xor
pop
lret
sub
pop
push
jb
int
test
ja
mov
and
mov
push
mov
dec
xchg
int
bound
sub
insl
lcall
dec
rcr
scas
pop
cmp
dec
aam
jbe
les
enter
cld
lcall
stos
and
test
imul
fistps
add
cwtl
mov
jp
or
imul
popa
or
inc
fwait
mov
xor
xlat
mov
insb
repnz
or
js
mov
inc
mov
arpl
repz
xchg
push
jbe
lock
dec
lret
xor
mov
push
mov
pop
imul
mulb
fldpi
mov
mov
xchg
mov
fwait
dec
imul
icebp
in
fisubs
out
sub
insb
aam
pop
sub
test
scas
pop
stos
push
shll
mov
dec
lcall
iret
test
outsl
add
pop
cmp
in
pop
xchg
stos
lea
jmp
xchg
pop
sbb
xchg
in
jl
push
cmp
cwtl
popf
cmpsb
loop
test
pop
push
dec
sub
shrb
mov
xor
mov
or
stos
sbb
sub
inc
dec
and
cmp
inc
jmp
jo
ror
iret
xchg
cltd
repz
adc
add
shll
mov
cmp
sub
je
ljmp
and
sbb
jne
aad
cli
ljmp
cld
fistpl
push
pop
add
mov
hlt
sub
mov
mov
icebp
sti
mov
out
in
icebp
lods
inc
pop
sbb
xor
push
jnp
iret
inc
xor
cmp
mov
imul
sbb
nop
cmp
cwtl
sbb
cmpsb
xor
cmpsb
and
sub
sbb
clc
std
mov
ffreep
or
push
ror
inc
ds
in
inc
push
xchg
dec
mov
mov
inc
push
scas
repz
jbe
xchg
cli
fadds
adc
xor
or
outsl
cmovae
enter
and
cmova
mov
pop
mov
popa
mov
adc
mov
push
xchg
pop
mov
outsl
pushf
push
push
in
shll
inc
psrlw
sbb
push
sbb
adc
jbe
dec
jmp
les
cli
sbb
jecxz
mov
add
xor
push
mov
mov
mov
fsubr
test
mov
jle
adc
repnz
jns
fs
lret
imull
mov
jle
dec
filds
xor
pusha
enter
xchg
cmc
hlt
jmp
inc
nop
nop
hlt
ljmp
movsb
mov
cli
xchg
aam
mov
rcrl
test
inc
test
aas
nop
mov
or
loopne
test
xchg
push
mov
sbb
aas
pop
xor
sbb
push
imul
in
pop
rorl
stos
xor
and
ds
repz
pusha
inc
es
int3
adcl
stc
sbb
jno
mov
dec
jo
scas
jp
or
outsb
adcl
mov
test
jecxz
cmp
jge
xor
xlat
repz
fwait
into
mov
dec
or
jg
inc
movsl
inc
fists
movsl
mov
popa
mov
loope
jmp
push
push
jns
outsb
or
out
sti
daa
incl
aad
jne
nop
daa
sub
mov
cld
jle
aad
push
jl
adc
pop
jl
jns
daa
inc
repz
in
daa
inc
subl
add
pop
les
daa
shr
pop
mov
int3
mov
inc
adc
pop
das
pusha
loop
sub
lahf
mov
or
xchg
add
jnp
inc
iret
pushf
cld
add
or
out
loop
jmp
int
add
and
jg
add
or
mov
adc
cmp
mov
repnz
sub
fsubr
fistpl
aad
and
jle
gs
cmc
jmp
jecxz
fs
fldenv
sub
jle
mov
pushf
mov
sahf
and
orl
lcall
scas
mov
outsl
mov
ss
sahf
pushf
iret
insl
in
into
sbbl
dec
xchg
sbbl
test
mov
js
addr16
xor
push
notl
xchg
xlat
lea
iret
inc
in
jno
mov
fwait
shr
adc
repz
jae
pop
addr16
sub
sbb
mov
xorl
push
outsb
stos
icebp
jnp
stc
adc
cld
rorb
mov
sbb
pop
or
or
in
loop
jle
jae
cmp
aas
in
popa
mov
adc
sbb
cltd
movsb
ret
push
cld
jl
or
stos
adc
push
cmc
lret
popa
jecxz
into
dec
in
mov
fisubl
or
mov
jns
daa
mov
jbe
inc
rcr
xor
addr16
je
lods
or
dec
cmpsl
popa
mov
hlt
in
repz
pop
cmp
test
clc
icebp
outsl
push
lock
sub
addr16
cltd
add
lods
mov
add
pop
js
outsb
call
mov
lcall
clc
xor
and
leave
mov
xchg
jmp
lds
ja
clc
in
roll
call
sahf
pop
into
and
aaa
repnz
and
jno
stc
pop
jne
int3
idivb
outsl
divb
ret
fs
mov
sbb
repz
lds
aam
repz
or
pusha
pop
pop
dec
ja
mov
fst
sub
clc
sbb
nop
jnp
scas
adc
and
fnstsw
lods
push
es
int
lcall
and
and
jbe
sub
int3
mov
loopne
or
iret
pop
sbb
lret
pop
sti
dec
push
pop
int3
in
xchg
jne
pop
inc
mov
xchg
out
mov
cmp
xlat
test
push
pop
aad
xorb
out
mov
dec
lcall
pop
mov
pusha
inc
or
lods
loopne
inc
inc
rol
xchg
clc
test
insb
push
mov
mov
js
adc
cmp
in
stc
cmc
fadds
pop
push
std
nop
adcb
mov
pop
pop
jge
std
pop
jl
inc
jge
or
outsl
cmp
mov
sbb
xlat
add
ds
sbb
call
imul
int
inc
pop
lret
hlt
jae
cmp
in
fisttpll
adc
lret
adc
xor
xchg
bound
lea
dec
xor
lret
inc
test
iret
adc
push
pop
mov
sub
sub
js
push
and
push
lcall
xor
push
cld
adc
push
xor
cli
int3
and
xchg
xchg
insl
cmc
cmp
outsb
and
push
mov
and
cltd
fbld
rcrl
sbb
pop
cmp
mov
xlat
xchg
inc
xchg
sti
scas
xor
hlt
loop
cld
mov
adc
rorl
cmp
test
push
sub
cmp
push
divl
mov
or
and
je
movsl
lcall
std
pusha
les
stos
hlt
gs
mov
cld
das
adc
jae
xor
sbb
es
mov
test
cmpl
insl
sub
sbb
std
out
aas
std
pop
rclb
je
adc
data16
or
popa
push
shl
jo
mov
sub
in
xchg
mov
outsl
pushf
in
fstp
cltd
int
sub
cltd
cwtl
das
and
dec
jno,pn
push
pop
xlat
xlat
dec
js
imul
xor
testl
and
adc
mov
mov
dec
int
xchg
cli
cmp
push
adc
or
ror
daa
adc
out
mov
push
or
punpckhdq
xchg
pop
fstpt
pandn
push
dec
cmpb
test
mov
mov
mov
and
stos
idivl
nop
out
or
add
std
adc
push
pop
ret
xchg
ret
cmp
bound
ja
stos
xlat
push
sub
dec
in
fstpl
cmp
xchg
xchg
jmp
cmpsl
adc
shrb
ss
xor
popa
mov
popa
xchg
les
jmp
xor
inc
add
in
cmc
and
inc
into
xchg
cmc
ja
movsb
inc
mov
aaa
xchg
fsubrs
mov
inc
loope
xchg
or
push
and
xchg
mov
cmpl
sti
ja
int3
imul
jo
adc
jno
and
adc
mov
or
repnz
or
sbb
loopne
push
cmp
and
and
sub
out
xchg
out
or
gs
dec
xchg
add
xlat
lock
push
mov
cmpb
cmpsb
es
dec
cmpsb
jge
cwtl
mov
in
or
fcompl
mov
xor
adc
sub
jae
jl
sub
mov
ja
js
dec
insl
pop
lods
xlat
stos
aad
shrb
and
mov
mov
mov
faddl
cwtl
ret
dec
jns
jns
stos
insb
into
mov
mov
push
adc
pop
jnp
into
or
lcall
xor
xlat
lret
mov
jl
aad
out
shrl
mov
dec
inc
out
rclb
or
dec
mov
int3
mov
add
out
cltd
mov
sbb
inc
jno
out
addl
mov
push
pop
add
addb
jmp
lods
insb
cmp
add
sbb
in
xchg
add
aas
imul
jmp
xor
lock
adc
fmuls
xchg
mov
aaa
cwtl
in
xor
stos
scas
mov
inc
arpl
mov
mov
sub
shr
mov
push
adc
aaa
cmpsb
mov
inc
pop
mov
fwait
cmp
iret
jne
cmp
mov
xchg
cli
mov
push
sbb
lahf
daa
xchg
xchg
mov
cmp
cmp
imulb
xchg
shll
xchg
cmp
aam
out
shlb
aas
roll
ret
or
mov
inc
dec
dec
sub
jg
and
aaa
imul
dec
loope
in
xchg
push
hlt
add
xchg
arpl
pop
or
sub
int
jmp
xchg
mov
mov
cmpsl
inc
sbb
outsl
sub
mov
mov
add
repz
nop
mov
outsl
flds
lock
cmc
or
mov
aad
addl
fildll
cmp
cmp
sbb
push
pop
push
jmp
jl
faddp
rcrl
cs
pop
imul
aad
jmp
test
pop
xchg
sub
movsl
in
rcr
cltd
mov
fdivs
icebp
int3
arpl
rorb
mov
jbe
int3
lods
add
and
out
and
mov
pop
ss
sarb
cmp
mov
mov
stos
clc
jne
shl
pushf
xchg
mov
push
stos
inc
leave
js
fwait
mov
testl
ljmp
into
outsb
in
xor
push
cli
add
dec
loop
imul
scas
mov
loope
xchg
sbb
js
push
cmp
sbb
fdivrl
jle
push
dec
test
push
dec
xchg
and
mov
sbb
adc
loope
aam
sub
repz
dec
dec
cmp
mov
imul
sti
ljmp
stos
and
shr
or
dec
pop
test
cmp
adc
or
lods
xchg
cld
incl
or
rcrb
jb
add
sahf
es
and
push
mov
cs
rorb
mov
cld
inc
xchg
mov
into
mov
mov
sbb
xor
daa
or
out
push
lret
inc
or
lcall
clc
orb
cmp
clc
pusha
jg
les
pop
pop
mov
push
mov
movsl
fxtract
addl
outsb
inc
cld
mov
mov
adc
aas
mov
jmp
sub
xchg
jno
clc
arpl
jnp
inc
clc
xchg
dec
rclb
inc
lcall
pop
js
shl
inc
stc
and
push
dec
sub
dec
cmc
lds
aam
inc
sub
dec
outsb
cltd
inc
fdivr
cmpsb
shrl
hlt
out
test
mov
xor
pop
adc
ret
push
lret
mov
push
js
mov
jle
int3
xchg
mov
mov
xchg
stc
sub
add
movsl
jmp
or
std
test
popf
sbb
xorl
out
mov
cmp
aad
enter
loope
outsb
or
pop
pop
push
jo
xor
movsl
push
jge
jle
hlt
cmp
into
push
in
fsubp
sar
movsb
cmp
cmpsb
lods
inc
jnp
jnp
fucomi
cmc
xor
mov
inc
shlb
mov
cltd
out
sbb
pusha
bound
ljmp
les
sbb
dec
roll
iret
dec
push
sbbl
push
int3
or
int3
hlt
cmpsb
aaa
xchg
call
add
sbb
mov
mov
xchg
aad
lods
mov
insl
lret
mov
cltd
fcomip
gs
shlb
aaa
dec
jnp
cmpb
test
pop
into
push
add
lret
inc
negb
add
dec
cmp
daa
shrl
lds
jmp
fsubr
xor
and
loope,pt
lods
lret
test
xlat
xor
and
pop
adc
and
dec
dec
repz
add
add
popa
es
lahf
gs
les
adc
push
call
mov
mov
rolb
jno
and
bndldx
mov
sbb
pop
cmp
test
mov
rolb
push
inc
and
lds
cs
sub
pop
mov
mov
sub
clc
inc
add
repnz
xor
aas
ja
ja
sbb
pusha
pop
mov
daa
inc
jmp
jle
sahf
jge
mov
add
cmc
xchg
out
push
sbb
and
jns
and
cltd
mov
insl
mov
mov
js
fmuls
test
pop
movswl
out
and
push
and
in
in
test
jge
mov
jle
xchg
push
sarb
add
popa
scas
aas
sbb
sub
hlt
and
dec
imul
and
das
js
add
movsl
aad
enter
pop
leave
aad
daa
adc
daa
dec
jg
lods
or
inc
cmpl
les
mov
push
sub
in
ds
adc
mov
adc
lock
into
push
xchg
cli
stc
mov
fwait
mov
shrb
stos
or
jbe
repnz
mov
inc
pop
lretw
mov
lcall
adc
movsl
jp
adc
imul
inc
imul
std
movsl
jbe
mov
dec
inc
cmp
into
and
lret
dec
fsubr
insb
in
repz
idivb
ds
and
lds
adc
cmp
mov
or
cwtl
jno
inc
jns
or
loopne
stos
mov
pop
jmp
movsb
pop
ds
adc
subl
call
lret
mov
xor
pop
or
scas
dec
shll
inc
xchg
data16
mov
ljmp
push
repz
shlb
addr16
testb
mov
out
test
cmpsl
jo
dec
movsb
inc
decl
ja
xchg
mov
fsubrl
add
xchg
inc
pop
add
dec
dec
mov
or
or
sahf
dec
out
lds
fbld
outsl
xorb
leave
cld
dec
xchg
data16
bnd
mov
cmp
add
in
jns
mov
or
or
stos
cmp
xchg
push
iret
repz
loopne
xor
gs
jne
shrb
loope
popa
mov
mov
jge
pushf
stc
cmpsl
push
fld
mov
fcompl
sub
or
inc
loope
outsb
hlt
hlt
and
shl
clc
sti
sub
and
mov
cmp
fwait
pop
dec
or
or
incl
push
push
stos
ficompl
jecxz
pop
cmp
mov
mov
icebp
add
enter
push
out
sbb
jne
cmc
sahf
call
adc
push
xor
popa
mov
ret
mov
out
push
cmp
add
lret
sub
scas
jg
fnstcw
lret
pxor
pop
jno
movsl
inc
pop
xor
sar
adc
addr16
enter
push
test
fs
fsts
push
clc
lods
and
add
add
movsb
cli
push
adc
sbb
mov
fimuls
pop
je
out
addr16
add
ljmp
xchg
mov
and
cwtl
xchg
xchg
add
pushf
flds
ljmp
xchg
pop
out
or
xchg
xor
mov
mov
hlt
mov
mov
dec
jns
xchg
dec
sbb
dec
sahf
mov
mov
idivb
mov
jg
sahf
ljmp
and
mov
sub
add
inc
shl
fisubl
xor
hlt
cmp
mov
jge
and
inc
xor
xlat
or
jns
je
xchg
pop
and
mov
cmpsb
adc
lods
loope
push
js
addl
push
mov
adc
enter
adc
sbb
arpl
cmp
xor
inc
or
push
mov
out
sub
daa
push
scas
cmp
dec
dec
mov
sbb
call
push
pop
sahf
cvtpi2ps
lods
inc
popf
jmp
rcrl
leave
mov
lea
pop
jge
addb
xchg
mov
lods
cmp
adc
loop
dec
add
or
mov
arpl
lcall
dec
scas
daa
push
mov
mov
dec
out
jo
es
clc
and
pop
sub
les
mov
jge
stc
icebp
lock
testl
push
loopne
std
mov
sbb
hlt
test
jg
xor
outsb
je
xorb
lea
add
iret
fbstp
adc
scas
inc
arpl
mov
icebp
xchg
dec
pop
xor
roll
jbe
rcl
dec
add
lods
mov
lea
sbbb
and
insl
mov
daa
and
sub
insb
addr16
and
dec
outsl
jnp
cmp
ljmp
das
add
jge
jp
jnp
pushf
sbb
popf
jecxz
cmp
add
in
add
and
inc
cmp
xchg
outsb
rorl
fnstenv
cmp
xchg
or
bound
movsb
out
jl
dec
loop
xorb
inc
adc
pop
sbb
test
test
std
push
jl
pop
mov
xchg
mov
loope
fsubl
pop
cs
cmp
aam
push
scas
icebp
adc
into
jo
xorb
pop
or
aad
inc
out
inc
xchg
insl
cmc
icebp
ficompl
lds
inc
outsl
adc
mov
jnp
mov
in
outsb
add
or
jbe
mov
jbe
jne
adc
push
addr16
pop
nop
in
push
add
hlt
cld
and
add
inc
cmp
mov
mov
or
out
into
inc
inc
jge
testb
pop
insl
mov
xchg
lea
imul
push
or
push
sbb
fdivrs
add
sub
mov
dec
xchg
das
lds
sbb
add
and
arpl
jnp
sar
stos
cmp
insl
mov
jnp
xchg
arpl
mov
in
mov
ret
mov
mov
sub
rcrb
push
xlat
sbb
mov
and
adc
adc
mov
out
sbb
and
outsl
cmp
shrb
push
jae
mov
dec
sbbl
repz
lahf
scas
scas
dec
arpl
mov
cmp
test
cmp
sub
dec
enter
push
xchg
fldenv
mov
imul
sub
xchg
int
mov
xsha1
cmpsb
dec
mov
popf
sbb
add
mov
sarl
inc
push
xchg
enter
outsb
or
sbb
sbb
lcall
add
jg
mov
or
xchg
iret
cmc
xor
or
xchg
jge
and
loop
pop
xchg
and
jns
fimuls
in
mov
sbbl
lods
mov
cmc
add
pop
push
ds
rcll
push
jp
test
cltd
xchg
stos
inc
sbb
sbb
fidivs
dec
sbb
repz
push
ret
imul
cmc
mov
shll
sbb
pushl
push
or
in
jno
mov
addr16
push
mov
pushf
hlt
mov
enter
repz
hlt
add
sbb
push
aas
loope
outsb
outsl
loopne
out
and
jle
in
ret
xor
clc
ret
outsb
or
mov
dec
inc
jns
push
dec
lfs
fidivrs
jns
jg
mov
test
icebp
push
rcl
ret
mov
outsb
and
jbe
xchg
mov
mov
jecxz
xor
ja
or
inc
aam
ljmp
push
push
pop
xchg
mov
fadd
fnstcw
jle
ljmp
pop
xchg
iret
dec
call
jo
cmp
mov
mov
cwtl
sti
rcll
or
lea
hlt
gs
pop
idiv
push
mov
fdivs
jnp
pop
cmp
incl
xorl
stos
repz
mov
push
sub
andl
repnz
xchg
adcb
sahf
mov
test
jbe
imul
es
mov
sub
iret
outsl
jp
mov
out
xor
xchg
rcr
mov
pop
cmpb
jnp
lret
imul
je
pop
lcall
aas
loop
outsl
sbb
sub
or
sbb
addr16
in
rcll
pop
loop
mov
push
ror
or
out
stos
je
cmp
iret
inc
lock
mov
mov
add
inc
jmp
jmp
sbb
ss
leave
sub
jb
xor
pushf
mov
xchg
aam
mov
in
and
in
lahf
stos
imul
fisubrl
push
and
repnz
nop
sub
xchg
adc
aam
pushf
inc
stos
sub
stos
xlat
and
xor
pop
xor
ja
shr
push
add
stos
adc
pop
icebp
aad
out
cmpsl
bound
imul
js
fs
mov
repz
xchg
lret
mov
icebp
add
std
cmc
js
pop
data16
dec
push
push
dec
xor
pop
mov
insl
mov
dec
mov
mov
adcl
loope
insl
rol
lds
cmp
fidivrl
lods
icebp
dec
rcll
push
loop
jmp
loopne
dec
add
pushl
mov
pop
and
movb
mov
jbe
ja
and
or
nop
inc
scas
mov
add
repnz
mov
xor
or
rcrl
aas
sub
fwait
add
xlat
loop
std
add
xchg
lea
call
in
fisttpll
inc
xor
pop
popa
jg
ljmp
addl
rorl
js
mov
xor
or
jecxz
xchg
adc
bound
xchg
adc
sub
int3
xchg
push
adc
inc
jbe
in
push
xchg
add
fcoms
sbb
scas
ss
xor
xchg
push
mov
cmp
sbb
dec
lods
adc
lcall
test
in
shlb
push
sbb
popf
test
mov
es
push
xchg
jge
notl
ffreep
xor
and
fisttpl
movsb
dec
push
adcb
pop
out
add
incb
inc
inc
jae
xor
das
mov
and
cmpsb
lds
add
xchg
lret
xchg
loope
xchg
icebp
jb
cmpsb
es
sahf
call
and
sub
sbb
pop
xchg
sub
sbb
gs
fmuls
push
mov
bound
roll
pop
imul
lea
mov
mov
imul
jmp
sahf
push
fwait
mov
sub
inc
add
in
dec
not
fdiv
sub
xlat
aas
push
pop
ret
pop
sub
mov
adc
rol
hlt
mov
xchg
pop
inc
cltd
inc
pushf
pusha
icebp
dec
into
sbb
and
inc
andl
je
stc
arpl
hlt
pusha
popa
mov
inc
jns
or
lret
fdivr
gs
notl
fwait
add
iret
add
lret
cmp
dec
mov
sub
mov
push
push
les
icebp
icebp
push
aas
lds
xor
mov
push
pop
and
in
sub
ret
sahf
ror
dec
aaa
stc
dec
mov
jb
or
mulb
xlat
adc
out
lret
inc
insb
test
insl
mov
jbe
movb
cmp
dec
jge
mov
add
dec
outsb
jo
add
cwtl
xchg
leave
pop
jmp
aad
pop
or
xor
loope
sub
popf
ss
adc
cmp
jmp
js
std
faddl
or
cmp
out
xchg
out
sbb
jnp
sbb
ljmp
xlat
mov
es
adc
cmpsb
lcall
dec
test
sub
or
pslld
fimuls
lods
mov
lea
ljmp
mov
sub
out
push
fldpi
stos
inc
enter
pushf
inc
outsl
lock
mov
andb
repz
pop
mov
mov
mov
mov
push
inc
adc
or
ss
rcrb
mov
mov
push
ss
pop
push
add
andl
jle
cmp
jg
andb
mov
imul
mov
dec
out
push
scas
roll
push
jmp
push
mov
out
inc
pop
mov
and
std
pop
xor
or
pushf
mov
mov
daa
data16
mov
jmp
xchg
mov
and
xchg
dec
push
ret
outsl
sahf
leave
mov
cmp
nop
aaa
cmc
stos
cmc
xchg
loopne
jl
rcr
sbb
xchg
int3
xor
xchg
lods
ret
test
pop
in
fdivrl
imul
cwtl
aam
xor
fwait
rcrb
push
sub
je
ficomps
rclb
icebp
xchg
sub
movsl
dec
push
dec
xor
call
or
outsb
clc
mov
jbe
lods
imul
jle
std
pop
cmp
sbb
and
cmpsl
lret
and
lds
mov
ret
dec
out
inc
js
ss
shrb
dec
insl
out
lahf
and
je
pop
mov
xor
jecxz
add
jmp
mov
pop
scas
arpl
repz
jo
out
bound
dec
into
cmp
mov
xor
shlb
sbb
sub
push
dec
jae
sub
xor
addr16
and
lods
dec
mov
fcmovnu
cmpsb
push
movsl
daa
push
push
xor
push
ja
testl
sub
fldt
or
push
or
push
add
test
xchg
xor
push
enter
add
lcall
push
scas
je
data16
push
out
icebp
lahf
sti
bound
imul
xchg
int
sbb
aaa
cmp
add
into
hlt
ret
icebp
mul
fisubl
dec
sub
pop
loop
mov
xor
cmp
out
dec
push
push
mov
xor
imul
pusha
jbe
cmp
or
stos
add
call
sub
test
mov
repnz
jb
ds
inc
lcall
negl
out
push
push
sub
cmpl
icebp
xor
int3
daa
adc
fistpl
das
pop
stos
jnp
fistpll
loop
xlat
pop
sub
ret
push
mov
fdivrl
lahf
shlb
aam
push
mov
or
pop
hlt
xchg
fcomp
cmp
sbb
xlat
fadds
repz
cmp
jnp
jo
cmp
xchg
aad
fwait
jnp
stos
and
xlat
cltd
in
add
testl
adc
mov
popf
out
mov
mov
lods
xchg
and
xchg
xchg
sahf
xchg
xchg
fistpll
insb
mov
push
mov
lret
test
dec
rorl
push
sub
clc
cmp
dec
dec
mov
push
xor
ja
in
sti
fists
xor
pop
xchg
jbe
cmp
adc
mov
cmp
push
movsl
sbbb
mov
out
jno
pusha
pop
or
out
jp
sar
adc
or
fs
mov
repz
int3
inc
pop
dec
inc
push
in
sub
cmpsb
or
mov
jb
mov
sub
jmp
popf
add
mov
and
xchg
add
and
push
call
icebp
pop
invd
xor
mov
push
cmp
aad
pop
adc
jno
mov
jns
or
and
addr16
jns
jb
add
jb
xor
jae
push
test
pop
sbb
imulb
jp
xchg
mov
mov
into
mov
rcrb
push
filds
sub
sub
mov
arpl
inc
icebp
scas
xor
xor
div
ds
and
and
test
aam
jmp
xor
push
sbb
es
add
roll
out
cld
ljmp
fidivrs
outsl
sbb
loope
insb
or
fimull
aad
scas
mov
loopne
adc
or
test
dec
mov
mov
inc
mov
nop
push
mov
add
dec
leave
je
jne
mov
add
fsubrl
sub
insb
push
scas
outsl
lods
cwtl
lods
sbb
push
inc
sbb
jmp
dec
pop
push
fstpt
xchg
pop
add
xchg
sbb
pop
repnz
xor
inc
inc
pop
dec
lods
out
pop
cmp
push
xor
dec
je
mov
sub
cmc
cmp
ljmp
pop
je
mov
push
shll
scas
inc
lahf
icebp
loope
sub
push
mov
out
sbb
mov
test
cmp
sub
mov
mov
adc
or
lret
push
pop
nop
jg
ds
adc
add
scas
sbb
xor
outsb
dec
xchg
jnp
les
xchg
pusha
gs
add
xchg
push
in
vpsadbw
and
mov
movsl
push
inc
sub
cmp
cmp
jmp
xchg
adc
and
add
inc
movsl
out
push
push
xor
aam
insl
mov
and
dec
cmp
daa
ja
subl
pushf
gs
jo
inc
jnp
les
lods
jnp
mov
enter
enter
stos
jo
xchg
cmp
mov
pop
cld
jp
rep
aas
pop
and
mov
jae
or
mov
mov
mov
or
clc
cmpsl
shrl
push
add
int
push
pushfw
fistpl
xchg
loope
pop
pop
mov
fucomip
les
imul
or
clc
in
js
mov
adc
pop
fs
mov
xor
xchg
popa
arpl
push
loope
push
call
xlat
dec
gs
or
sub
mov
jns
mov
cli
insl
mov
and
rolb
ja
aad
andl
push
xor
mov
js
hlt
push
xchg
lods
xor
sti
xchg
mov
cwtl
aad
jp
cld
push
xchg
push
mov
jnp
and
test
repz
sbb
into
das
mov
push
jbe
dec
stos
push
out
or
mov
pop
inc
mov
lock
lods
lock
lahf
xchg
scas
sbb
pop
jbe
testl
out
clc
aad
sbb
mov
subb
dec
jge
jmp
hlt
fwait
xlat
insb
nop
es
mov
movsl
cmp
or
pop
mov
jl
scas
mov
push
pop
pop
jl
pcmpeqw
clc
jp
call
adc
push
cmpsb
sahf
lock
iret
or
add
cld
inc
out
xchg
and
lods
mov
cmp
loope
movsl
xor
mov
mov
dec
cwtl
push
mov
imul
sub
jbe
arpl
push
int3
or
jae
sbb
out
cmp
enter
mov
push
dec
rcrb
dec
push
lret
sbb
hlt
adc
loopne
xor
adc
mov
jo
add
or
xor
pop
adc
pop
sbb
data16
adc
dec
inc
mov
sbb
mov
jae
int3
in
bound
popa
mov
stos
lret
out
mov
inc
sub
and
ffree
dec
aam
jno
cmpsb
mov
and
and
push
cmpsb
jb
dec
loope
fidivs
mov
xchg
jg
fildll
xor
pop
and
xor
fwait
lock
jecxz
inc
jmp
ds
std
mov
lcall
imul
rcrb
xchg
mov
ret
or
pop
mov
ret
in
vaddps
adc
sbbb
lcall
gs
ficomps
pusha
mov
dec
xor
fmulp
into
stc
pop
incl
das
push
mov
sbb
repnz
fildll
je
lods
jae
scas
pusha
sub
dec
inc
aaa
int3
mov
andb
dec
mov
stos
sub
ljmp
pop
pop
pop
push
jns
popa
dec
dec
insb
sub
repz
and
push
mov
es
idivl
cmp
add
ss
inc
xchg
pop
sub
fidivs
adc
jns
rcll
pop
adc
mov
xor
inc
adc
cs
mov
mov
out
lret
lods
cmp
push
add
sub
test
pop
jns
push
pushf
cld
and
push
jnp
loop
sub
cmc
rcl
jno
sahf
insl
and
jbe
div
outsl
rorl
inc
xchg
jp
outsb
movsl
pop
imul
out
sbb
xor
pop
sub
xchg
rcll
adc
les
ljmp
in
adc
sbb
xchg
pop
leave
sub
or
lods
sbb
std
cmpsb
or
hlt
and
lret
test
jae
adc
es
cmc
lock
fildll
inc
sub
jb
ljmp
test
mov
mov
xchg
inc
ret
xorl
sbb
fwait
lea
mov
shll
sub
sub
stc
or
inc
jge
inc
fistps
adc
mov
mov
lods
and
lret
clc
sub
popa
mov
and
add
mov
pop
shl
andl
pop
pop
pop
das
out
dec
jbe
aas
inc
xor
push
mov
sbb
or
or
sahf
cltd
sbb
pop
fdivl
mov
push
insl
or
mov
iret
fnstcw
xchg
push
xchg
test
or
xor
cltd
outsb
dec
adc
loopne
sub
mov
gs
sub
sub
testb
test
xor
mov
cmc
mov
lods
xor
mov
xlat
sbb
ja
jmp
lahf
push
repz
push
dec
xchg
insl
dec
bound
mov
adc
loopne
push
jnp
mov
out
shrl
xor
xor
adc
sahf
jae
add
loope
cmp
loope
pop
push
mov
pusha
call
bound
popf
mov
repnz
fsts
cld
lahf
sbb
jns
fbstp
jp
dec
pusha
and
fwait
js
outsl
dec
xchg
mov
shl
push
fidivl
mov
mov
and
aad
and
or
jae
sbb
test
stos
push
and
pushl
xor
cmp
adc
ds
divl
sbb
and
pop
lds
sub
je
fs
stos
inc
xchg
test
sub
push
mull
push
pop
lret
cmp
ds
shrb
and
jl
mov
shrb
inc
dec
dec
xor
insb
dec
adc
xchg
push
movsl
jo
sbb
mov
or
icebp
movsl
mov
pop
pop
jae
inc
pop
mov
imul
pop
or
cmp
shrl
jne
ret
inc
dec
sub
lret
fiadds
lock
or
mov
cmp
test
pop
subl
loop
dec
bnd
in
add
and
inc
pop
lods
and
push
lock
push
sbb
leave
adc
xchg
lods
dec
mull
stc
push
addl
mull
fdivl
or
sub
cmpl
mov
inc
repz
mov
lcall
bound
sbb
int3
in
fildll
outsb
inc
xchg
jae
add
xchg
fisttps
xchg
cmp
push
dec
lahf
outsl
push
mov
mov
mov
test
std
stos
or
sub
out
push
cltd
jae
lods
jno
jnp
fistps
lods
arpl
imul
std
iret
jl
and
mov
xor
mov
filds
push
jno
test
sbb
insb
sub
sub
push
aaa
scas
mov
lods
mov
xchg
mov
das
lcall
pop
test
data16
sahf
push
and
cmp
popf
cmp
mov
sbb
add
lret
fdivs
mov
xor
cmp
adc
fistpl
cmp
call
ret
in
adc
insb
les
inc
int3
jmp
push
mov
in
jg
xchg
or
fcomp
cli
ret
push
mov
mov
or
dec
arpl
jno
fcoml
loop
xorl
ror
test
hlt
push
stos
xchg
inc
test
test
cmpsl
stos
in
mov
scas
mov
mov
mov
mov
jns
shrb
add
xchg
iret
pushf
xchg
adc
addl
xor
jg
xchg
jbe
cwtl
stos
and
mov
sbb
mov
add
subl
rolb
in
or
sarl
lret
jbe
inc
xchg
ja
jle
icebp
lods
cmp
mov
jno
or
fwait
aam
imul
fs
out
jae
xor
dec
jmp
leave
cmp
imul
inc
or
jg
fimull
jb
pop
repz
inc
dec
leave
and
hlt
mov
mov
popf
jnp
scas
dec
sub
inc
push
adc
pop
xor
in
sub
ds
mov
sbb
push
dec
mov
cmpsl
test
jge
stos
fimull
add
divl
push
retw
jbe
loope
inc
push
rclb
fwait
inc
add
icebp
mov
fwait
ret
scas
dec
scas
in
jmp
fsts
nop
mull
std
fidivl
cs
in
outsb
pop
aas
nop
xchg
xchg
sbb
lea
scas
ret
adc
outsb
clc
xchg
call
arpl
xchg
out
ret
sub
outsl
jmp
xchg
out
imul
es
cmpsb
mov
mov
pop
xor
push
push
pop
fs
xchg
add
pop
into
xor
arpl
sbb
pop
xchg
mov
lahf
in
scas
lahf
es
push
sti
or
jle
movsb
push
sbb
lahf
pop
ret
push
jl
lret
cmp
mov
inc
loop
push
lahf
sub
bound
mov
dec
fdivrp
stos
pop
mov
aam
dec
cld
lock
data16
test
jl
cltd
fstps
out
mov
repnz
clc
sub
ljmp
movsl
rol
ljmp
loope
insl
sub
push
cmp
into
sbb
imul
les
call
jno
into
mov
xor
lea
add
fidivrl
in
add
mov
test
shl
jno
ret
dec
lahf
push
cmp
or
dec
mov
mov
cmp
sbb
out
inc
sub
mov
add
fcmovnbe
xchg
loop
movsl
xchg
stos
lds
mov
leave
sbb
adc
mov
mov
push
icebp
outsb
mov
sbb
add
jae
dec
and
repnz
adc
nop
push
ja
loopne
cmp
add
push
stos
pop
xor
shlb
imul
es
cmp
ret
jno
sbb
aam
insl
add
scas
ljmp
mov
and
mov
fmul
lods
xor
xchg
push
lret
jbe
and
lds
push
pop
or
sub
dec
mov
push
fsubr
mov
sbb
jp
xor
mov
mov
push
mov
data16
xorb
fsub
outsb
cwtl
push
leave
insb
scas
loopne
push
testl
add
test
add
xchg
adc
xchg
jns
aas
sahf
out
arpl
adc
fldt
sbb
sbb
push
mov
adc
stc
cmp
dec
pop
fistpll
out
sbb
or
push
mov
mov
xchg
or
cmc
add
pop
gs
les
aaa
push
pop
outsl
jge
xor
fidivrl
push
sbb
outsb
mov
das
std
sub
in
inc
mov
push
insl
int3
xchg
into
test
and
pop
or
test
cmp
cmp
cmp
ljmp
outsl
or
imul
mov
loop
rcrb
mov
mov
lock
shl
and
shr
mov
out
and
daa
inc
dec
xchg
mov
sbb
cs
orl
test
loopne
add
lcall
adc
push
dec
mov
adc
xchg
push
aas
add
push
xor
out
or
xchg
inc
xchg
xlat
mov
or
test
mov
int3
es
inc
sbb
xor
xchg
pop
pop
or
push
adc
mov
cwtl
cmp
scas
adc
and
mov
push
fnstcw
xchg
jmp
adc
cmpsl
outsl
sub
pop
jns
sbb
scas
xchg
lcall
leave
mov
mov
adc
aas
test
js
les
xchg
jp
fiaddl
hlt
mov
inc
ret
rcrl
sbb
xchg
outsl
adc
mov
or
test
inc
movsl
mov
and
cltd
adc
idivb
adc
repnz
repz
test
xor
out
sbb
xchg
cs
or
or
and
inc
negl
and
push
test
test
adc
jno
ljmp
loopne
xor
inc
imul
mov
and
aam
and
int3
jmp
lahf
lea
aaa
test
jg
cwtl
inc
andl
cltd
jne
out
inc
ds
and
imul
push
sbb
and
adc
xchg
adc
in
adc
hlt
test
and
inc
ds
loopne
loop
mov
xor
add
fistpll
repz
mov
mov
pop
xchg
test
je
jb
add
jmp
sub
lcall
push
or
cmp
and
fsts
push
stc
dec
rcll
push
push
les
test
lods
test
inc
movsb
dec
cltd
pop
arpl
xor
pop
arpl
mov
mov
mov
add
sub
dec
sbb
incl
pop
out
mov
push
jmp
pop
pop
inc
xchg
arpl
pop
js
orl
mov
push
stos
cmp
push
cmp
gs
adc
outsb
jne
add
push
in
lcall
adc
rolb
jns
and
dec
mov
dec
std
enter
rep
es
or
adc
movsb
into
adc
sbb
mov
xchg
pop
leave
xchg
mov
sub
imull
test
jne
push
and
stc
jae
mov
div
add
insb
sbb
cmp
sub
arpl
push
sub
sub
mov
addb
sub
xchg
fs
enter
hlt
add
fidivl
in
mov
mov
sarb
and
mov
pop
mov
mov
test
and
aam
aas
pop
bound
pop
dec
push
fwait
mov
jecxz
fwait
add
jns
dec
js
icebp
pop
int
in
xor
sbb
jg
mov
in
push
jle
add
add
jo
add
arpl
push
movsb
popa
scas
imul
stos
mov
inc
xor
xchg
cltd
mov
test
inc
add
push
popa
xchg
loop
add
jnp
pop
ljmp
cmpsb
pop
pop
aas
sbb
daa
fisttpll
arpl
cmp
jp
push
aas
sar
push
mov
add
adc
xor
xchg
rcr
push
fwait
loope
or
pop
lret
loop
inc
cmp
fldl
gs
jns
sarl
ret
insl
push
mov
in
adc
orb
sub
ds
sbb
popa
inc
aad
sahf
pop
outsb
push
xchg
cmp
sub
outsl
cwtl
or
add
aad
xor
negl
push
add
or
add
jg
lods
test
sbb
jne
lcall
add
insl
mov
inc
pop
sarb
ficompl
mov
addl
arpl
add
dec
push
and
imul
cmp
cmp
and
mov
mov
push
out
scas
push
xchg
outsb
rdmsr
xlat
shlb
sbb
pop
mov
sbb
xchg
push
cli
and
incl
je
push
fisubrs
pop
enter
and
push
cmp
xor
jle
sub
pop
loop
xchg
adc
xor
mov
push
outsb
cmp
mov
cli
jge
test
jecxz
cmc
ss
pop
jmp
call
imul
jns
push
or
jecxz
mov
leave
cs
mov
cmpsb
scas
jecxz
and
inc
popa
lret
cli
into
ror
addr16
stc
insl
idivb
xchg
mov
xchg
xor
xchg
daa
mov
add
push
cmp
dec
push
ret
jo
mov
xor
mov
jns
jbe
iret
mov
leave
addr16
adcb
daa
jns
out
rcll
int3
mov
stc
fs
ja
push
fdivp
mov
jmp
pop
aas
dec
in
lret
jb
xchg
or
xchg
mov
cs
loope
sbb
ljmp
jge
cld
xor
insb
cltd
add
push
and
fldcw
lret
adc
jnp
shlb
addr16
aas
fnsetpm(287
pop
mov
adc
js
cmp
mov
sbb
sub
enter
enter
xlat
unpckhps
mov
jmp
mov
fcoms
test
pushf
sbb
ja
and
mov
cld
aaa
jbe
xchg
mov
popf
mov
jmp
pop
in
daa
jo
lods
pop
cmc
stos
test
xor
je
mov
in
gs
and
fcmovne
push
sbb
in
sub
out
arpl
push
mov
dec
inc
push
inc
mov
es
and
inc
jnp
mov
fnstsw
dec
icebp
xor
cs
sbb
dec
pop
add
sbb
repz
sbb
clc
adc
repz
call
dec
mulb
cmc
sbb
xor
and
cmpsl
rcll
mov
adcb
insl
cmp
loope
mov
xor
mov
enter
lock
decl
popa
enter
mov
xchg
adcb
or
nop
fmull
imul
in
xchg
in
pusha
cmc
fdivr
pop
insl
adc
fwait
out
jmp
enter
inc
or
add
push
loopne
push
out
test
stos
jge
stc
add
leave
sbb
lock
icebp
mov
lock
jp
fisttpl
jo
sub
jne
pop
adc
cltd
pop
xchg
jo
aad
xchg
ret
pop
pop
cwtl
pop
stos
sbb
ja
xor
xlat
out
sub
scas
inc
jl
iret
add
out
jge
mov
push
adc
jae
mov
add
lahf
rcll
mov
add
mov
insb
repnz
insb
mov
js
fistpll
stos
movsl
xchg
adc
pop
rorb
jns
adc
xor
pop
int3
int
das
inc
push
xchg
leave
rorb
fs
jo
enter
jp
clc
push
xchg
mov
xor
or
inc
stos
gs
adc
sti
push
push
insb
loop
jae
sbb
xchg
ret
jb
pop
out
sarl
in
lret
les
fdiv
hlt
inc
pop
outsb
or
clc
or
lods
mov
arpl
and
shrl
test
pop
sub
je
mov
je
repnz
adc
repz
sbb
cmp
add
add
movups
adc
movsl
shll
dec
movsb
loop
xchg
push
gs
shrb
jns
mov
addr16
mov
fwait
jnp
aad
xor
sbb
mov
out
jmp
clc
or
lds
aas
xor
mov
pop
sar
inc
das
mov
int3
pusha
dec
sbb
pop
js
cs
xor
fimuls
jae
mov
or
jge
pop
inc
cmp
sub
xor
mov
mov
lret
decl
mov
loope
pop
lahf
loope
sbb
pop
fadds
in
cmp
pusha
mov
and
scas
xchg
jnp
or
and
mov
jbe
pop
repnz
es
ds
and
push
pop
cmc
ficomps
fwait
mov
loopne
pushf
lds
mov
je
sub
repnz
insl
pusha
bnd
inc
imul
test
xchg
cli
pop
into
lods
int3
int3
adc
push
sbb
mov
mov
and
pop
neg
cmpsb
movsb
in
inc
mov
cld
ds
cmp
lock
gs
push
lock
sbb
aaa
push
mov
cld
ss
popf
pop
pop
jmp
inc
jecxz
into
pop
std
sub
jecxz
outsb
imul
js
imul
dec
lods
cmpsl
pop
lcall
loop
stc
or
lock
scas
add
xchg
popa
sub
pop
ja
jmp
frstor
mov
adc
sub
test
iret
rcrb
int
cmp
jne
mov
inc
sub
jno
xchg
mov
push
fidivl
loope
xchg
sub
outsl
jae
leave
dec
negb
push
gs
out
mov
fistl
mov
test
adc
xor
mov
and
or
fimull
adc
das
dec
incb
dec
mov
xchg
mov
dec
lods
mov
mov
je
pushf
insl
repnz
mov
loopne
mov
pop
inc
lock
out
xor
or
cmp
xchg
push
cmpxchg
sub
mov
aam
xchg
lret
jl
sbb
mov
ljmp
xor
icebp
or
addl
sub
and
dec
push
cmpsb
cltd
mov
cld
adc
and
aad
fldt
mov
dec
dec
add
inc
jb
inc
stos
cld
cmp
hlt
test
icebp
test
aad
cmpb
repz
cmp
ret
inc
mov
fcmovnbe
popa
mov
xchg
push
mov
xchg
cmc
jle
aaa
lods
mov
add
out
push
iret
mov
hlt
shrl
dec
mov
pop
lret
pop
jge
in
push
xchg
adc
push
mov
fcmovu
test
mov
stc
mov
loop
xchg
aas
mov
mov
mov
stos
mov
sbb
dec
push
ficoms
mov
mov
jp
jb
pop
outsb
adc
addb
imul
pop
stc
fildll
cmp
add
imul
sbb
mov
add
xchg
les
sub
dec
jecxz
fsubrl
loop
lock
jnp
insb
add
lret
push
loop
int3
lods
imul
icebp
pop
sbb
sub
xchg
pop
mov
shrl
sti
add
inc
popa
xchg
mov
gs
mov
cmp
and
sub
imul
fwait
std
adc
xchg
pop
pop
cmp
dec
movb
inc
data16
std
or
repnz
xor
push
mov
push
jmp
or
imul
jae
shll
mov
std
imul
mov
adc
xchg
outsl
xor
mov
pushf
xchg
sbb
cmp
push
mov
push
lret
aad
rclb
adc
xchg
cs
sbb
fmuls
lahf
movb
sbb
lahf
call
add
mov
inc
xor
rep
dec
push
or
stos
fisubrs
cmpsl
xchg
push
fcomip
insb
push
pop
mov
mov
aad
pop
int
pop
sbbb
rclb
inc
push
xchg
pop
scas
dec
out
jl
shlb
jns
mov
xchg
mov
clc
pop
and
out
pusha
pop
jns
xchg
inc
minps
push
sti
pop
ret
and
arpl
jp
xor
jmp
mov
xchg
xor
pop
in
or
add
xlat
jl
in
jne
subl
std
or
mov
ret
popa
outsb
or
loopne
push
testl
mov
mul
mov
push
add
aad
or
popa
daa
mov
nop
sbb
xchg
in
cmp
icebp
jbe
mov
push
dec
push
xchg
add
jl
inc
out
xor
mov
dec
or
mov
pop
scas
pop
dec
adc
fstps
cmp
mov
jmp
mov
fdivl
pop
inc
js
pop
mov
mov
daa
adc
dec
fmull
xlat
int3
lds
int
mov
push
loopne
mov
dec
mov
sbb
ret
cmp
adc
ja
je
fcmovne
adc
push
jo
pop
aas
ss
stos
push
cmp
xchg
push
lods
nop
aas
cmpsb
inc
mov
mov
jmp
in
imul
push
pop
dec
lcall
imulb
xlat
adc
mov
js
pusha
mov
aas
cmp
fldt
ljmp
fiadds
inc
outsb
popf
enter
lahf
movsb
sub
inc
je
outsl
and
push
idivb
adc
inc
fbstp
add
jae
add
sbb
testl
xor
rclb
jne
dec
sub
sub
adc
imul
inc
testl
outsl
xor
lds
out
dec
movsl
pop
outsb
and
stc
xchg
adc
cli
jno
sbb
mov
fsub
enter
jmp
out
gs
into
andb
enter
in
shl
pop
or
xor
sub
cwtl
cs
sbb
xchg
cld
bound
mov
icebp
jne
pusha
pop
out
mov
sbb
dec
jl
sub
mov
and
fildl
int
sbb
cmp
sub
in
clc
hlt
outsb
mov
push
sbb
mov
cltd
mov
mov
js
lock
xchg
arpl
call
add
mov
xchg
dec
inc
pusha
icebp
dec
stos
add
aam
in
out
mov
lahf
mov
fildll
cmpsl
or
jns
enter
add
push
mov
mov
xchg
dec
sbb
pushf
adcl
sub
xor
fnsave
xor
push
or
popa
jmp
cmc
add
jmp
xchg
int
les
mov
popa
data16
cmp
xchg
jle
popf
leave
in
jp
or
push
ljmp
out
xor
mov
jbe
in
mov
sub
cmp
icebp
in
arpl
testb
xchg
sbb
push
mov
arpl
cmp
loop
je
js
cmpsl
sahf
push
mov
mov
add
inc
and
les
addr16
cmp
mulb
cmp
mov
mov
ret
sbb
out
jg
pop
insb
shlb
pop
mov
stos
test
in
mov
xchg
pop
arpl
adc
outsb
movsb
mov
shrb
leave
iret
cmp
xorb
jno
in
mov
fcmovbe
shlb
inc
add
movsl
stos
divb
lahf
leave
cwtl
shlb
push
xchg
mov
repnz
aas
rcrb
pop
xchg
sbb
sbbb
fwait
mov
mov
mov
div
in
and
jno
push
js
les
sub
add
aam
jno
popf
jmp
ja
leave
jl
jp
and
pop
out
mov
cmp
sub
pop
mov
daa
data16
xor
and
and
cmp
xor
push
cmc
clc
xchg
sbb
mov
mov
adc
aaa
jae
add
int
fnstenvs
and
push
lock
inc
lret
or
sahf
mov
xchg
adc
add
pop
xchg
imul
cmp
pop
push
es
xchg
push
cmp
mov
adc
sbb
lcall
aam
int
mov
test
lret
je
jp
outsb
push
lea
jb
fnstcw
lcall
sahf
mov
dec
repz
sti
cltd
xor
cmp
cmc
lcall
mov
cs
lret
cli
add
fldcw
dec
mov
nop
mov
test
testl
xor
testb
shll
adc
cmp
stos
scas
fsubrl
sbb
mov
jb
imul
inc
add
clc
out
add
xor
lret
mov
mov
dec
add
push
sbb
or
dec
push
push
or
cwtl
imul
add
jmp
rorl
cmp
inc
pop
push
mov
jl
mov
xchg
mov
push
stc
rcr
push
stc
and
imulb
or
mov
in
push
inc
sahf
xchg
mov
dec
divb
mov
lahf
insb
mov
cltd
xlat
lahf
cmpsb
pop
mov
lahf
into
clc
jmp
and
mov
movsl
and
pushf
jns
sahf
sbb
cld
or
sbb
jns
iret
aas
mov
xchg
pop
mov
orb
mov
out
cmpsb
bound
ljmp
mov
cmp
stc
inc
js
or
adcl
or
outsb
mov
adc
leave
sbbb
pop
shlb
aam
ljmp
ret
call
ret
cmpsl
push
mov
xlat
fildl
xor
add
xlat
push
sbb
cltd
lcall
jns
aas
inc
adc
pop
add
cmp
mov
pushw
mov
jno
adc
repnz
push
dec
or
push
incl
jge
icebp
or
mov
mov
fidivs
cli
push
inc
sub
inc
pop
sahf
add
inc
pop
sub
fmuls
popf
push
mov
out
xchg
aam
lahf
push
enter
fs
sub
sbb
lods
pop
enter
sub
sub
cwtl
or
rcrl
call
adc
dec
mov
jnp
out
cmp
add
je
add
repz
push
dec
mov
sti
add
push
xchg
mov
es
adc
xchg
pop
mov
loop
idivb
int3
test
dec
les
loop
int3
add
and
aam
adc
cmpsl
dec
cmpsb
call
mov
sbb
mov
icebp
and
adc
adc
mov
add
pop
pop
jae
in
jns
mov
mov
rclb
mov
divl
call
mov
imul
cmp
xchg
rcrl
and
add
push
test
mov
xchg
nop
dec
add
add
pop
cmpsl
xlat
jno
push
pop
inc
sbb
push
xchg
xchg
cmp
sti
xchg
pop
jmp
ds
mov
sub
int
lcall
repnz
pop
test
arpl
adc
iret
cmp
sarb
and
pop
dec
fcoms
aas
andl
outsb
pop
mov
pop
mov
inc
dec
movsb
pop
and
out
mov
bound
mov
inc
int
movsb
sbb
test
lds
aaa
push
iret
sbb
pop
fdivrs
mov
imul
ljmp
sahf
sub
ret
push
push
cmpsl
xchg
pop
repnz
mov
test
adc
mov
push
jmp
cmp
inc
arpl
fdivrl
and
clc
addr16
push
xchg
jl
inc
mov
scas
mov
cmpsl
xlat
and
les
ror
mov
jns
imul
adc
fcomps
stos
jno
adc
mov
pop
add
xchg
call
rcrl
pop
js
cltd
add
std
shll
ret
add
xchg
push
cmc
xchg
lock
les
sbb
loop
imul
jnp
aaa
test
inc
xchg
and
xlat
rorb
outsl
mov
adcl
dec
mov
push
pusha
sbb
stos
xor
jne,pt
leave
xchg
fs
mov
pop
sti
adc
in
stc
mov
jmp
pop
out
jns
sub
aaa
cltd
lds
xchg
mov
sbb
sub
pop
addl
fnstenv
inc
dec
lcall
rcrb
dec
mov
loope
adc
dec
push
sbb
cmp
pop
das
enter
mov
js
pop
subl
push
mov
pop
es
sbbl
loope
jo
jmp
xor
mov
test
mov
gs
add
or
scas
popa
cli
xchg
mov
in
fstl
push
mov
inc
repz
or
es
dec
mov
cmp
dec
push
mov
loopne
cmp
cmc
mov
rolb
dec
loop
push
sbb
out
or
lret
xlat
push
es
call
mov
sub
orl
in
sbb
push
aaa
pop
ljmp
aad
or
push
out
ja
push
mov
out
or
cmp
mov
daa
inc
ret
test
cmpsl
lock
sbb
sbb
dec
out
dec
aas
xor
xchg
sub
pushf
das
push
dec
movsl
xor
clc
gs
push
ljmp
enter
dec
add
andb
es
xchg
or
mov
imul
push
lahf
xor
cmp
xchg
addr16
push
and
push
pusha
sub
inc
repz
pop
push
bswap
mov
imul
cli
sub
and
das
cmpsb
xchg
add
pop
fistps
test
ficoms
mov
sub
add
bound
mov
dec
push
test
enter
aaa
cmpsl
fisttps
jle
lock
xor
leave
push
cmp
push
daa
fs
pop
dec
leave
sbb
mov
test
xor
dec
dec
notb
stos
sub
adc
adc
push
xchg
mov
and
shlb
ret
push
enter
or
jbe
loope
ljmp
dec
leave
and
add
les
dec
ds
int3
xchg
mov
ret
fwait
lahf
mov
lods
aas
test
ss
outsb
out
pop
push
sub
cli
outsb
xchg
lock
mov
inc
push
sub
sub
es
jne
xor
inc
jb
dec
mov
outsl
add
jp
fisubl
enter
jp
cmp
pop
fucom
test
pop
inc
inc
inc
adc
test
loopne
inc
int3
pop
into
jbe
das
add
aas
ja
adc
xchg
gs
or
mov
mov
loop
dec
lea
cwtl
inc
mov
cmpb
in
aam
inc
icebp
inc
data16
repz
mov
push
aas
mov
movsl
mov
jmp
ret
fptan
out
mov
cld
mov
lds
ss
fcoms
fwait
xchg
push
sbb
daa
pop
stc
and
cmpsl
test
leave
dec
mov
push
jle
ljmp
dec
sahf
aas
mov
call
pusha
roll
mov
lds
sub
dec
arpl
xchg
xor
hlt
pushw
negl
daa
push
jle
outsl
pop
std
out
add
shll
lods
mov
je
int
adcl
xorb
inc
cmp
mov
lcall
and
outsl
into
push
mov
push
lret
add
xchg
bound
jns
cld
subl
sub
negb
sub
addr16
inc
mov
add
leave
jno
loope
or
add
and
or
pop
out
sbb
push
mov
cmp
inc
testb
mov
mov
popa
push
xchg
adc
xor
push
jno
stc
loope
xchg
xchg
add
xchg
sbb
test
xor
push
xrelease
inc
test
xchg
imul
aaa
or
add
call
adc
cmp
popa
push
mov
in
lahf
jb
pop
sti
test
call
shrb
mov
stc
sbbl
ljmp
dec
pop
lcall
pushf
scas
lods
xlat
mov
out
pop
faddl
int
sub
jmp
stos
mov
js
xor
jnp
jg
int
jmp
jecxz
fsubrl
int3
into
sub
fldl
sti
sbb
sub
lret
xchg
cmpsl
rcll
icebp
push
mov
add
or
dec
mov
cmp
dec
lret
xchg
int
repz
xor
push
repz
or
lea
push
mov
test
imul
nop
aam
fmull
mov
mov
adc
mov
mov
jae
ljmp
adc
or
sub
into
test
sub
mov
cmp
test
jne
aaa
jbe
leave
jbe
fidivs
mov
imul
dec
adcb
xchg
and
loopne
jecxz
adc
mov
xor
xchg
cwtl
out
mov
movsl
int3
icebp
xor
mov
rcrl
ret
imul
lea
mov
stos
xlat
inc
xchg
out
xorl
fs
sbb
mov
leave
in
pop
jns
addr16
jnp,pn
fstpt
sbb
inc
mov
jle
mov
sub
scas
addr16
roll
inc
jle
data16
or
mov
mov
or
xor
test
push
inc
into
cmpsl
icebp
jle
popf
ss
lahf
xor
fcomps
xor
mov
dec
add
cli
mov
xchg
xor
inc
and
jno
out
les
sub
sub
jge
mov
or
jno
or
xchg
xor
pop
ss
mov
daa
testl
es
jmp
lahf
in
xor
mov
and
dec
js
push
neg
dec
pop
test
ficoml
es
popf
fs
xchg
lea
dec
call
inc
xchg
es
das
stc
bound
scas
fisttpl
push
jno
outsl
xchg
fbld
insb
jl
mov
out
aam
push
mov
popa
sub
rcr
daa
cmp
sbb
loop
mov
mov
mov
dec
aam
clc
and
imul
testl
aaa
nop
out
mov
rcrl
sti
cmp
lret
pop
cld
push
or
js
jae
lea
pushf
fwait
aad
inc
or
lock
sar
and
mov
jns
andl
jnp
xchg
cli
dec
repnz
push
insb
stc
and
mov
adc
mov
cmc
dec
cmpsl
mov
cmp
fsubs
jae,pn
sub
mov
mov
outsl
imul
insb
icebp
xchg
ja
and
stc
push
mov
aad
inc
outsl
cmp
jecxz
push
jmp
add
scas
mov
je
sbb
fisttps
xor
jge
outsb
xlat
jge
fdivrs
subl
gs
cmpsb
mov
push
xlat
inc
fstp
aas
mov
adc
and
incl
mov
xchg
xlat
jp
leave
jnp
and
sahf
cmp
inc
adc
pop
iret
or
push
cmp
jbe
es
mov
cmp
sub
jle
dec
icebp
add
ss
inc
arpl
or
pop
mov
out
add
nop
sub
clc
scas
sbb
outsl
insb
imul
mov
mov
dec
cmc
addb
mov
dec
xchg
add
xchg
inc
lods
bnd
add
push
xchg
sub
mov
mov
fmull
xchg
cmp
test
pop
movsb
out
inc
cmpsb
test
pushf
sarl
test
mov
xor
inc
fstps
stc
icebp
xlat
jnp
xor
jge
jle
clc
ffreep
pusha
add
xor
mov
or
inc
push
mov
aas
repz
in
xor
sbb
inc
sbb
cmpsb
scas
lds
cmpsb
mov
jo
aas
lahf
mov
in
aam
mov
push
xor
or
nop
add
mov
push
les
testb
mov
push
inc
ds
mov
insb
sbb
pop
mov
test
lds
and
push
push
fmuls
xchg
fnstenv
rcr
pop
fldl
sbb
cmp
add
mov
shr
movaps
ljmp
sbb
sub
jge
and
out
cmpsl
icebp
stos
mov
jge
cmc
inc
jg
push
pop
call
je
push
mov
stos
cltd
jo
jp
pop
fnstsw
xchg
aad
and
jmp
mov
es
and
in
addl
popaw
add
loopne
lret
lret
jge
adc
cmp
inc
fisttpll
loop
cmp
movups
aas
out
and
or
push
mov
adc
jl
add
push
xor
xor
cmp
mov
aas
mov
aas
popl
xchg
xchg
xor
aad
sub
mov
lds
dec
jg
add
add
sahf
cmp
dec
repnz
sbb
pop
pop
shll
adc
ja
xor
clc
negl
pop
outsb
dec
mov
ret
ficompl
mov
fbld
lods
or
or
mov
dec
cmc
rol
fdivs
into
adcl
xchg
subl
in
icebp
mov
pop
mov
mov
sbb
mov
sub
ds
push
cmpsl
pop
adcl
cmp
push
sbb
xchg
mov
xor
jns
pop
mov
mov
out
testl
scas
pop
aam
andb
jb
dec
lret
movsl
dec
mov
fcompl
xor
stos
sti
sub
mov
mov
cld
and
mov
add
dec
les
cmpsb
xchg
adc
cmp
nop
add
out
loopne
fcmovnb
mov
mov
lret
or
das
inc
jno
insl
mov
add
xchg
add
adc
add
sbb
scas
inc
les
dec
push
out
bound
push
imul
js
xchg
and
call
les
in
push
call
mov
call
sub
stc
sarl
shl
shlb
int3
sub
sarl
mov
jbe
in
ja
int
inc
mov
push
ror
adc
cwtl
loop
dec
or
sahf
mov
or
int3
loop
ret
jg
push
cmpsb
and
jg
insl
imul
cld
arpl
cmp
cmp
sub
and
jg
repz
adc
fmull
pop
dec
mov
jo
mov
testb
jo
cmpl
mov
fabs
sub
cmc
and
bound
xchg
add
out
xchg
inc
call
sbb
xchg
mov
cmp
push
fdivs
cmp
xchg
gs
adc
xchg
les
and
outsb
mov
xor
push
ret
movsb
loope
arpl
xor
mov
xchg
dec
inc
adcl
xor
iret
mov
mov
stos
gs
or
rcll
rorb
pop
test
or
add
adc
pop
pop
pop
fnsave
jnp
adc
cmp
sbb
xor
loop
push
inc
inc
dec
iret
fldenv
mov
mov
insb
mov
sub
lods
adc
jno
mov
shlb
adc
leave
mov
mov
addr16
jne
jb
or
dec
ret
mov
sub
xorl
imul
jb
pop
pop
out
lods
jge
out
inc
inc
fs
jle
pop
add
dec
and
inc
lcall
xor
fsubs
fldt
dec
les
cltd
xor
sahf
xchg
mov
rcll
test
inc
rcr
inc
mov
dec
test
loope
lret
cmp
pushf
pop
lcall
sbb
mov
lcall
mov
ret
mov
xor
hlt
lcall
movsb
mov
dec
insb
rorl
push
xor
lahf
jne
call
dec
pushf
xor
sbb
and
inc
in
inc
jge
shl
ds
adc
and
jno
mov
cmp
cwtl
loopne
xlat
cwtl
out
enter
mov
pop
fucomi
ficompl
out
test
inc
aas
int
lahf
inc
test
aaa
sti
jbe
aad
lret
cmp
in
xor
lods
daa
inc
leave
js
mov
pop
push
hlt
xor
lahf
xchg
mov
jo
aaa
int
in
add
dec
bound
out
add
cs
shl
out
mov
bound
shrb
daa
test
in
inc
inc
sub
into
or
pop
loop
dec
popf
cmp
inc
xor
jbe
sub
ds
ja
jmp
adc
fistpl
push
dec
ret
int3
lds
scas
imull
outsb
add
sbb
mov
js
in
jno
cmpsb
add
add
fimuls
mov
scas
fst
mov
xor
pop
out
in
arpl
daa
mov
xchg
or
adc
xorb
and
or
mov
push
jns
scas
add
cmc
xchg
inc
scas
fsubl
lret
xor
out
mov
lcall
roll
push
imul
mov
push
cmpb
xchg
cmpsb
add
out
or
je
sbb
add
insl
lods
popa
in
mov
and
arpl
rcr
adc
popa
mov
adc
jne
mov
cwtl
mov
add
jb
jmp
sahf
xor
and
sar
sbb
call
cmp
cmpsb
or
mov
jb
pop
push
sbb
xor
and
popf
and
scas
pop
mov
nop
jg
out
cmpsl
icebp
xchg
shrl
add
addl
insb
adc
adc
movsl
dec
fmull
stc
jg
jns
fisubrl
clc
pop
xor
jl
repz
das
pop
loop
sub
out
fnstsw
add
xchg
orb
cmpb
rcll
andl
cmpsl
push
in
fwait
lahf
imul
xlat
xchg
adc
loop
push
jecxz
jne
inc
or
push
mov
mov
lods
xchg
add
addr16
jo
hlt
cmp
or
repz
adc
pop
dec
inc
pusha
ss
cld
hlt
xor
in
sbb
add
and
leave
daa
jmp
daa
cwtl
add
dec
adc
lods
aaa
sub
adc
mov
mul
pop
sub
adc
pop
out
inc
dec
dec
loopne
cs
dec
in
pushl
fisttpll
mov
fimuls
loop
repnz
imul
cmc
push
repz
mov
jecxz
cli
xor
lock
xchg
cmp
push
les
fadds
aam
jmp
test
and
jecxz
push
mov
lods
aas
mov
sar
test
or
ja
idivl
xchg
mov
sub
xchg
pop
push
out
imul
jecxz
test
lea
loope
pop
jl
stc
mov
sbb
cmp
lahf
scas
ret
clc
adc
dec
cmp
in
sub
fbstp
cmp
out
mov
push
sub
pop
je
lret
xchg
sti
std
mov
adc
idiv
out
xor
jbe
stc
push
leave
stc
or
dec
cld
sbb
add
xchg
dec
add
testb
adc
cmp
dec
adc
mov
nop
aad
imull
aas
fildl
in
in
cwtl
mov
lret
ss
sti
xchg
jp
cmp
outsl
cmp
push
loope
jb
aad
out
stos
dec
jns
or
xlat
push
inc
mov
push
in
daa
or
cwtl
xchg
outsl
adc
in
sub
mov
sbb
sbb
lea
sub
cmp
jecxz
lcall
mov
ds
or
mov
clc
inc
ret
sub
popf
jb
mov
jno
faddl
xchg
fadds
and
ss
cmp
out
jb
out
xor
xchg
pop
adc
mov
aam
enter
jge
xor
xor
clc
lods
push
es
inc
cmp
add
loop
mov
jo
enter
xorl
push
sbb
dec
adc
and
and
sbb
fistl
or
lret
push
pop
mov
and
adcl
pop
or
fld
fadds
int3
lods
scas
addr16
and
or
mov
or
inc
stc
pop
jle
sbb
popa
jp
or
js
es
xchg
ret
pushf
sub
dec
xlat
push
and
arpl
out
rcrl
inc
mov
lcall
sti
mov
lcall
ret
aam
push
dec
jg
cmpsb
addr16
sbb
jno
lret
dec
xchg
jne
mov
xor
sbb
cmp
lret
lods
loopne
cmp
fsubr
mov
adc
sbb
mov
pop
push
sbb
push
add
xor
sub
add
in
int
and
xor
orl
mov
xchg
dec
addr16
mov
or
jecxz
push
cwtl
inc
mov
js
lea
add
repnz
shrb
mov
mov
popa
xor
mov
jbe
rcll
pop
ret
jge
mov
inc
cwtl
jb
add
sub
leave
push
pop
loopne
push
pandn
rcrb
ficoms
mov
std
fistpl
or
arpl
fwait
xor
cwtl
sbb
nop
pushl
aad
inc
cmp
adc
pop
jmp
mov
mov
dec
jmp
enter
pop
pop
xchg
sub
mov
popf
fbstp
xor
xchg
iret
inc
movsl
aas
and
mov
mov
jnp
inc
mov
mov
in
jae
ret
mov
popa
pop
test
mov
sub
or
push
test
mov
loopne
icebp
repnz
popl
sub
loope
mov
out
dec
mov
clc
pop
sahf
loop
pop
sahf
sbb
xchg
mov
pop
push
loopne
xchg
ss
stos
shl
jb
je
ja
xlat
mov
add
push
test
rol
test
cmp
adc
sbb
into
test
push
push
sbb
icebp
outsb
test
push
sub
ss
scas
test
mov
cmp
jp
pop
cltd
jae
das
call
mov
ds
aad
sub
mov
cmpsb
push
data16
mov
cs
add
nop
sti
pop
sub
pop
adc
jno
lock
cli
das
mov
jb
push
sub
inc
fwait
test
push
and
and
and
sbb
aaa
push
xchg
jmp
in
sbb
sbb
mov
int
adc
insl
mov
mov
push
mov
xor
sub
adcb
sti
or
popf
pusha
fiadds
mov
das
add
xor
cmp
pmaxsw
inc
jecxz,pt
lock
jl
mov
xchg
push
mov
cwtl
xchg
fildl
and
jnp
out
ret
push
mov
pushf
cmp
mov
fsubs
aad
enter
imul
dec
push
iret
std
arpl
pop
mov
fwait
or
cmp
stos
sbb
mulb
popa
pushf
es
xor
rcrb
inc
inc
xor
ss
ret
inc
mov
add
icebp
lcall
xchg
push
pop
jo
xchg
xor
and
jo
aas
or
mov
pushf
imul
adc
push
negb
roll
movsb
adc
jle
inc
push
xchg
or
pop
ja
and
pop
xchg
addr16
jge
inc
push
and
adc
mov
mul
dec
ja
push
jg
sub
mov
cmc
scas
add
pushf
xchg
dec
out
pop
pushf
and
sub
xchg
jp
adc
movb
popa
adc
and
jae
mov
pop
xor
push
pop
cld
int
mov
repz
nop
dec
fisubrl
ficoms
ss
inc
pop
or
enter
add
aam
mov
icebp
and
adc
cltd
mov
dec
cmp
pop
loopne
mov
adc
mov
scas
lea
into
gs
int3
dec
mov
int
adc
aam
ds
pop
je
sbb
in
movsl
dec
fimull
dec
arpl
jmp
pusha
and
cld
fwait
xor
gs
call
inc
pop
pop
aam
push
rorl
add
sbb
or
pop
and
rcrl
subb
mov
adc
jl
xchg
aaa
leave
mov
out
addr16
adc
cltd
nop
lret
mov
int
fnsave
and
fidivs
mov
mov
shlb
pop
fs
test
sub
dec
loopne
imul
fistps
push
fcmovu
dec
jae
add
sub
or
jmp
add
xor
jne
add
jge
movsb
aad
mov
adc
xor
sub
stos
dec
cmp
int3
mov
jae
jmp
push
xor
arpl
cmp
add
sbb
fs
xchg
cmpsl
sub
out
aas
shrb
dec
dec
mov
das
pop
sub
neg
daa
out
std
mov
adc
je
sbb
lods
jmp
xchg
add
and
cmp
lahf
call
push
test
movsl
mov
add
test
adc
out
pusha
push
push
xor
into
and
xor
lods
adc
test
cld
and
add
mov
jle
popf
push
out
mov
insl
cli
sbb
test
push
or
xchg
leave
rorl
iret
xchg
jbe
inc
loopne
inc
sbb
movsb
outsb
out
cmpsb
push
repnz
xor
jae
push
jne
lret
pop
dec
mov
mov
sub
fidivrs
lods
cmp
pop
mov
adc
rcrl
adc
mov
jno
inc
in
ret
xor
mov
push
add
mov
cmp
into
cmpl
repz
xor
push
in
and
add
cwtl
je
loop
xor
je
dec
rcl
push
pushf
arpl
lcall
xor
jns
leave
sbb
rcrb
aam
lea
lds
dec
out
mov
lods
dec
lcall
outsb
test
into
popf
rcrb
insb
cmp
je
and
mov
in
out
mov
arpl
jmp
movsb
in
mov
push
in
mov
rcll
jno
int
and
push
lock
sbb
or
or
inc
cli
in
xchg
sahf
aam
mov
mov
loopne
jl
mov
mov
decl
sbb
sub
sbb
in
iret
jge
sbb
push
mov
push
push
test
mov
mov
cwtl
mov
pop
test
sti
hlt
sbb
push
adc
xor
and
mov
mov
dec
mov
push
mov
jae,pn
adc
repnz
fistps
xchg
movsb
xchg
add
orl
xsaves
fwait
data16
imul
jecxz
push
inc
mov
insb
cmpsb
test
inc
xchg
and
or
xor
aas
xchg
jmp
sti
jle
shlb
stc
sub
stos
or
push
rolb
pop
jecxz
in
jo
scas
loope
jle
addr16
cmp
xchg
outsl
enter
out
cmp
fldt
aas
testb
add
add
jne
rcrl
add
loop
xchg
lcall
fistl
lds
bound
movsb
int
inc
xorb
shlb
scas
or
dec
ds
jo
and
std
xor
sbb
sub
push
es
out
scas
gs
insl
and
icebp
popa
dec
xlat
xchg
shll
test
bound
and
inc
mov
fsubrl
mov
and
sub
mov
scas
in
xor
leave
cmpsl
cmp
dec
ljmp
lea
cmp
push
mov
add
pop
cmc
jle
mov
je
or
pop
xorb
xchg
sub
push
mov
in
pop
cmp
daa
shlb
inc
loop
std
inc
sub
test
jg
mov
cmp
or
cmpsb
sarl
outsb
repz
sahf
mov
out
and
add
cmp
mov
lret
addb
inc
xor
test
inc
lahf
mov
pop
cltd
cmp
inc
out
or
jns
cli
mov
adc
test
sub
incl
pop
jne
in
and
sub
dec
and
aas
cltd
jle
cmc
mov
fcmovne
jmp
xor
pushf
mov
cmp
and
and
push
sub
daa
imul
jle
and
adc
ds
jns
jp
les
ror
inc
push
lret
outsb
rorb
pop
imul
shrl
subl
pushf
jb
push
cli
out
in
pop
int
or
dec
jne
daa
pop
xor
mov
lds
xchg
stos
mov
mov
int
insl
add
jb
cwtl
sub
lret
lea
pop
mov
in
popf
dec
scas
scas
and
mov
or
xchg
jp
ds
cmp
adc
les
push
in
xor
pop
jle
lock
jne
in
cs
lods
jb
cltd
pop
sti
xchg
or
add
add
sti
sub
add
hlt
andb
pop
sbb
ja
xor
in
dec
mov
pop
push
dec
aad
lea
icebp
cmp
add
mov
enter
mov
adc
loope
aaa
add
sahf
dec
lock
in
mov
ljmp
mov
sti
pop
pop
sub
jg
sub
dec
push
and
pop
in
cld
clc
out
xor
add
orl
cmp
imul
xchg
cmp
mov
fnsave
loop
push
jbe
cmc
pop
gs
xchg
insl
cmp
iret
andl
inc
in
lea
ss
lods
iret
pop
mov
in
push
jb
mov
pop
mov
lahf
dec
test
jg
mov
mov
out
call
fistps
test
hlt
in
mov
xchg
in
xchg
adc
ret
sahf
in
hlt
jns
out
mov
dec
xor
mov
mov
pop
or
sub
and
mov
adc
push
stos
xor
mov
in
dec
sub
and
jp
xchg
in
mov
js
xchg
aam
adc
fnstenv
dec
pop
cs
push
popf
mov
push
cmpsb
mov
mov
std
inc
pop
or
xchg
ret
ss
data16
jae
ret
cmpsl
scas
mov
and
cmp
icebp
vpmadcsswd
inc
xor
or
aam
xchg
push
pop
add
shrl
aas
jge
int
mov
adc
fmull
mov
fs
fs
es
ret
and
leave
in
mov
dec
movsl
xadd
test
xchg
mov
xor
sti
arpl
sbb
push
pusha
and
mov
mov
mov
jo
push
hlt
mov
cwtl
insl
int
pop
sbb
gs
jmp
scas
or
push
mov
pop
jns
addr16
push
xor
pop
cld
add
fcoml
ret
inc
jp
imul
cmp
sub
dec
ljmp
test
clc
dec
imul
mov
jmp
jecxz
pop
xlat
sti
inc
xor
add
adc
mov
or
lcall
out
push
adc
push
aas
jge
xor
cli
outsl
lcall
push
xchg
sbb
and
add
mov
mov
or
ss
test
outsb
xor
jmp
dec
xchg
testb
xchg
mov
add
data16
sub
lods
pop
cmp
pusha
pop
jecxz
add
jl
rol
add
push
xchg
sbb
cmp
mov
inc
xchg
xchg
mov
sbb
sti
bound
jg
jle
adc
pop
loope
je
pop
mov
out
mov
or
clc
xchg
mov
repnz
in
std
aam
dec
ret
mov
cmpsl
push
and
jmp
pshufw
int3
jp
jmp
mov
outsb
aam
mov
lahf
fsub
sub
xor
pop
leave
mov
adc
xor
sub
sbb
mov
sti
fs
sbb
out
cmpsb
push
shll
mov
popf
mov
mov
add
mov
xor
jecxz
test
into
or
jle
jo
pop
data16
xlat
xchg
or
jne
mov
or
jle
daa
mov
scas
pop
shl
loope
push
jecxz
pusha
js
movl
xchg
fsubrl
xor
aam
cmp
je
sarl
jbe
in
cmp
addr16
faddp
gs
mov
data16
mov
push
out
push
mov
shr
mov
mov
rcrb
rorl
push
outsl
push
lcall
mov
add
gs
cli
sub
sub
cmp
int
xor
in
out
mov
or
mov
dec
sti
imul
mov
or
cmpsl
sti
cmc
xchg
shrl
and
push
mov
cmp
jns
mov
orps
sub
add
ljmp
mov
sbb
push
lahf
sub
fdivs
fsubrp
adc
lret
fldenv
adc
sub
add
xchg
pop
inc
xchg
inc
call
xchg
cs
sub
loop
jno
push
or
cmpsl
popf
sub
dec
add
popf
push
inc
jae
mov
or
stos
and
jo
in
js
pop
fsubrl
or
adc
push
negb
mov
adcb
add
jb
jno
and
jns
mov
fidivrl
nop
inc
mov
insb
rcrl
iret
je
call
loop,pt
push
xchg
stos
rclb
jp
out
xor
inc
sbb
add
ja
cmp
in
sub
bound
push
pop
sahf
and
or
or
push
add
outsl
xor
in
mov
icebp
push
out
in
cmp
and
dec
scas
lock
or
scas
imul
cmp
clc
cmpsl
jg
nop
push
aam
scas
clc
into
mov
fstl
jbe
sub
cmp
inc
xor
fnstcw
jmp
fsubs
leave
stos
push
test
or
scas
stos
mov
cmpsl
mov
and
aas
jmp
fwait
lret
iret
lret
ret
test
or
cs
mov
out
jbe
fyl2x
mov
clc
adc
push
and
repz
dec
lock
mov
repnz
mov
shlb
inc
fwait
jmp
call
test
pop
add
rcrb
test
adc
add
lret
cmpsl
push
push
mov
or
mov
jecxz
movsb
je
vunpckhpd
cmpl
and
sbb
dec
aas
inc
mov
sar
jb
rorl
mov
pop
into
push
popf
pusha
outsb
lcall
mov
mov
xchg
and
jle
cmp
sbb
and
mov
movsl
xor
pop
fwait
pop
jge
rcrb
dec
movsl
xor
rcl
mov
scas
dec
sbb
je
cmp
out
shll
sub
push
pop
mov
js
arpl
leave
int
xlat
mov
lahf
sbb
fwait
dec
pop
sub
xor
push
popa
loopne
popl
add
dec
cmc
dec
or
in
pop
and
dec
mov
cmpsb
cmp
std
xchg
xchg
outsl
mov
pop
in
stos
lret
sbb
mov
jbe
int3
xchg
or
lret
xchg
cld
xchg
test
test
jle
shlb
add
or
mov
popa
lods
push
mov
dec
xchg
adc
mov
loop
cs
sbb
push
in
or
mov
cmc
jbe
rol
clc
out
add
pushf
nop
dec
mov
lret
ret
and
test
xlat
and
dec
mov
loopne
push
jbe
mov
cmp
mov
call
in
add
dec
ds
dec
ja
int
add
sbb
cmp
pop
insb
dec
cmp
sbb
outsb
dec
jp
mov
fcmove
xchg
xor
dec
cmp
push
in
mov
fdivs
out
mov
lods
pop
xor
in
jns
pop
ds
scas
mov
orl
fcomps
movsb
lds
sub
std
int
inc
mov
mov
test
ja
mov
dec
ljmp
and
loope
push
aad
popa
sbb
dec
xlat
mov
fnstenv
cmp
repz
pushl
adc
jle,pn
mov
inc
push
iret
icebp
imulb
push
imul
push
sbb
or
mov
jle
mov
cmp
jae
aam
leave
ljmp
sbb
mov
mov
inc
imul
out
jmp
xor
cmc
sbb
hlt
jmp
pop
rdpmc
xor
cmp
xor
mov
adc
adc
cmc
cwtl
test
jae
mov
orl
dec
mov
xlat
test
push
imul
int
fdivs
mov
mov
push
push
dec
loopne
icebp
pop
mov
mov
dec
popa
and
xor
jmp
push
add
or
mov
insb
sub
mov
mov
jo
fists
in
add
dec
imul
repnz
arpl
pop
mov
test
fwait
or
push
mov
fisttpl
ljmp
inc
mov
dec
lds
popl
push
pushf
icebp
pop
ja
push
mov
jno
jne
and
pop
rolb
sub
add
out
push
xor
push
inc
mov
push
arpl
xchg
adcb
je
jg
cmpsl
cmpsl
imul
sbb
cs
push
stos
mov
dec
inc
add
je
lods
scas
fnstcw
dec
imul
xor
sub
push
adc
inc
adc
cmp
bound
in
mov
ja
stos
cmpsb
ret
nop
xor
mov
mov
cmp
mov
mov
cmpsb
insl
fsts
inc
lods
scas
pop
inc
fistps
imul
dec
ss
iret
jno
cmp
rorb
mov
scas
adc
insb
ljmp
int3
add
out
adc
aam
jle
mov
repz
push
scas
sarl
andb
out
jnp
mov
mov
sub
sbbb
pop
and
lods
loope
sub
xor
push
or
push
cld
pop
xchg
test
xor
adc
stc
mov
add
leave
sub
mov
out
jnp
mov
adc
jb
inc
out
ja
and
dec
or
sub
mov
movsl
ss
xchg
into
ljmp
pop
fisttpl
idivb
xchg
enter
inc
mov
lret
mov
movnti
mov
sub
adc
xchg
loopne
inc
add
cmp
rcr
adc
ret
mov
jnp
out
xchg
add
addr16
lock
inc
aam
xchg
xchg
lret
xor
mov
in
xchg
jo
jmp
jne
pop
inc
push
out
sub
dec
mov
cmp
add
fnstcw
mov
call
leave
inc
das
and
sub
addr16
push
js
lret
adc
out
loope
hlt
xchg
adc
divps
les
cmp
pusha
out
adc
xchg
sub
scas
mov
leave
fsubl
addr16
cmp
jno
inc
push
xchg
test
shlb
shll
dec
xorb
push
add
negl
add
lret
gs
xorb
cmpsl
lock
scas
mov
cmp
mov
ja
mov
stos
pop
lret
cmp
cmpl
cli
sbbl
cmp
pop
adc
fsubl
pop
and
repz
jp
xchg
imul
or
mov
cmp
lret
pop
cli
xchg
sbb
or
lock
xchg
inc
inc
pop
jnp
mov
adc
aam
push
ljmp
loopnew
xchg
stos
test
lcall
aam
push
or
jmp
jb
test
cli
test
adc
or
gs
movhps
xor
sbb
add
hlt
mov
sbb
mov
dec
ljmp
dec
cmp
or
push
movb
jne
mov
or
jge
jge
inc
mov
jl
dec
lock
lea
stos
push
xor
loope
pop
rcr
inc
arpl
jns
clc
cs
std
loop
aaa
mov
or
pop
lds
xchg
sub
mov
stos
push
sbb
cltd
cmp
jne
xchg
pop
jns
dec
stos
loop
ljmp
bound
sub
push
mov
sbb
sub
mov
adc
jns
mov
push
mov
out
push
add
inc
pop
xor
and
push
mov
push
dec
outsl
rcrb
iret
adc
inc
decb
mov
and
lds
shll
test
dec
aas
add
inc
jge
jp
into
andb
rclb
sbb
xor
das
jno
adcb
sbb
stos
mov
cmpsb
jg
shll
inc
mov
ss
in
and
xchg
mov
rorb
jns
in
mov
add
xlat
cwtl
cmp
rcrl
pop
popa
aaa
cmp
divb
dec
and
addb
mov
cmpsl
out
mov
push
pusha
fsubrs
and
push
mov
sbb
cmp
mov
clc
imul
fwait
mov
mov
add
pop
fs
sti
shll
fldl2e
ret
xor
lods
in
dec
inc
and
and
push
dec
rol
mov
dec
out
rcl
loope
stos
xchg
in
push
mov
sbb
or
push
in
pop
gs
insb
sbb
imul
leave
push
inc
and
outsl
rolb
push
mov
jg
cmpsb
mov
adc
adc
pop
mov
loope
push
push
sub
jmp
mov
xchg
add
sbb
jae
cmpl
xchg
into
cmp
inc
int3
and
dec
adc
jne
lahf
loopne
into
pop
sub
shrl
fbstp
mov
das
int3
jo
mov
push
cld
mov
jne
out
xchg
pusha
jl
in
inc
jle
clc
jp
dec
sbb
xchg
mov
test
mov
mov
shll
dec
sub
cmpsl
push
hlt
mov
movsl
inc
shlb
or
insl
push
into
lds
push
rcrl
arpl
aaa
pop
mov
jnp
test
adc
insb
bound
or
fidivrs
shrl
add
xchg
negl
iret
sbb
mov
scas
mov
ds
test
and
mov
stc
sbb
push
mov
lods
fwait
mov
sti
movsb
dec
shl
cmp
decl
pop
inc
fisubs
iret
ret
adc
popa
and
mov
lahf
sbb
nop
mov
xor
mov
or
or
push
cmpl
addb
pop
mov
icebp
xor
push
xor
pop
dec
in
imul
cltd
imul
lds
sbb
mov
sub
scas
adc
es
verw
test
gs
lret
cmp
test
ss
cmp
pop
aad
sub
dec
ja
xor
icebp
inc
fs
xchg
lret
nop
jecxz
cmp
aaa
or
jecxz
das
sub
sub
push
mov
jg
add
mov
adc
mov
outsl
aas
mov
cmp
mov
enter
bound
adc
xlat
leave
xor
inc
jno
es
and
enter
repnz
stos
mov
popa
fwait
js
xchg
cmp
arpl
in
push
faddl
ror
jecxz
cmp
sub
int
shl
adc
mov
js
lret
dec
loop
ljmp
icebp
jl
xor
loopne
jb
dec
inc
popf
nop
adc
shl
xlat
mov
mov
mov
data16
je
or
sahf
jge
mov
inc
mov
je
mov
inc
scas
lret
jno
inc
mov
xchg
rcl
das
call
ljmp
mov
mov
dec
sbb
xchg
xor
ljmp
xor
push
adc
push
rolb
adc
sub
xor
shr
push
or
push
test
sub
pusha
sub
mov
cld
inc
push
xorb
ret
jno
mov
out
std
cwtl
sbb
jecxz
lea
leave
xchg
out
das
xchg
xchg
stc
jnp
push
loopne
aas
leave
pop
dec
loope
and
insb
test
inc
xor
xchg
inc
test
les
xchg
lods
cwtl
pushf
mov
nop
mov
jge
add
shl
inc
mov
push
ss
in
leave
std
mov
out
pop
jl
push
in
leave
aam
push
iret
das
jl
outsb
into
lock
loopne
mov
xchg
loopne
jecxz
cmp
inc
xchg
cmp
or
or
aad
je
test
loopne
mov
loop
adc
push
or
loope
daa
ljmp
pusha
test
xor
mov
push
jp
xchg
lahf
adc
inc
rorl
pushf
pushf
dec
mov
jbe
loop
dec
or
mov
sbb
cwtl
inc
loop
repnz
mov
mov
sub
sbb
and
bound
sub
sbb
lea
xchg
test
mov
addb
sbb
xor
and
mov
and
add
or
fsubr
jp
leave
cwtl
cld
pop
dec
lret
imul
repz
inc
push
leave
inc
in
sarl
loopne
ds
inc
xchg
movsl
std
mov
test
sbb
les
lods
sahf
jmp
mov
mov
mov
loop
inc
sub
xchg
xchg
ret
fwait
xlat
insl
or
mov
pop
into
sbb
movl
iret
lock
pop
xor
lret
movsb
mov
or
iret
lahf
pop
mov
push
dec
push
daa
mov
inc
sti
call
nop
sti
jmp
add
cmpsb
loopne
daa
stc
ret
call
leave
les
pop
test
push
xchg
or
cs
inc
mov
mov
mov
shrb
push
or
mov
lret
std
jle
inc
js
push
lea
xchg
popf
mov
push
ret
stos
enter
and
pop
scas
dec
inc
hlt
sbb
sub
mov
or
mov
sub
push
popf
clc
sbb
and
ljmp
jg,pn
cs
push
popa
pop
in
inc
ficomps
call
jne
or
push
push
loop
mov
sbb
pop
loope
daa
scas
jmp
das
inc
pop
notb
mov
mov
addr16
pop
inc
imul
gs
test
mov
push
jg
mov
jb
push
repnz
adc
mov
push
popf
mov
jne
add
cmpsl
imul
mov
outsb
fldcw
into
cmp
pop
test
sar
jmp
sub
pop
movsl
mov
je
xor
and
repz
ret
out
xchg
sub
aad
stos
inc
adc
shlb
add
stc
pop
push
inc
test
inc
jmp
or
aad
lss
dec
mov
cmp
daa
sub
sub
dec
test
xor
outsb
dec
aaa
repnz
xor
ds
lcall
mov
sub
cmp
or
stc
dec
lahf
fcom
int
inc
mov
lods
shrl
lcall
dec
push
div
mov
loope
add
pop
lret
and
jnp
or
test
aas
adc
subl
jp
pop
sarb
mov
sub
sub
xchg
popa
pushf
jmp
and
adc
and
call
adc
stos
xchg
addb
or
adc
out
or
push
jnp
add
pop
xor
ja
adc
push
jne
cmp
pop
cmp
rcl
aad
push
or
lods
loope
roll
std
add
add
jno
cli
sbb
out
das
cmp
leave
loopne
in
test
movsb
pop
sbb
test
and
pop
adc
ja
xchg
je
test
mov
pushf
push
fwait
sbb
inc
test
jbe
stos
cltd
sbb
mulb
adc
adc
insl
sti
sbb
sbb
push
les
std
xchg
fsubr
btc
lods
mov
ds
mov
mov
mov
adc
stos
mov
push
cmpxchg
dec
jmp
lea
add
enter
mov
or
mov
lret
ja
stc
lods
ret
fstl
js
ret
jbe
ja
shr
cmpsl
imul
push
xor
jnp
stos
jmp
daa
pop
and
loope
insl
and
mov
in
add
data16
mov
and
dec
adc
xchg
inc
test
cmpsb
ffree
into
and
icebp
adc
dec
inc
cwtl
sub
push
in
shlb
jno
rcrl
or
xor
imul
imul
push
lahf
int3
iret
sub
sbbb
test
orl
cld
adc
jbe
fwait
adc
das
lods
sbb
push
kxnorw
aaa
pop
adc
lcall
ret
cwtl
repz
push
inc
testl
add
jns
xchg
jge
std
lods
int
pop
mov
pop
lcall
pushf
pop
or
push
mov
ss
in
jnp
mov
cmp
jmp
cltd
test
lcall
ljmp
std
push
arpl
aam
cwtl
push
pop
inc
pop
mov
add
loop
adc
inc
dec
stos
sbb
adc
orl
popa
mov
push
out
pop
jge
shlb
aas
ja
inc
int3
ljmp
add
cmpsb
xor
add
xor
les
inc
iret
cmpb
jo
adc
repnz
mov
insb
add
divb
fucomp
fwait
cmp
add
dec
shl
in
in
adc
nop
mov
adc
fcoml
mov
das
mov
test
mov
mov
pop
mov
xchg
out
mov
das
adc
pop
clc
adc
mov
jbe
ret
xchg
jl
or
xor
pop
inc
sbb
shrb
lock
jmp
fiadds
or
mov
and
and
adc
enter
mov
sarl
loopne
and
cmp
ss
pop
int
xchg
popa
arpl
lcall
ljmp
xchg
inc
adc
imul
xchg
in
mov
ret
xor
icebp
lret
jmp
cmp
pop
std
sarb
xchg
and
xchg
mov
pop
dec
xchg
xor
cmpsl
sbb
vhsubpd
mov
or
push
call
push
js
dec
test
mov
push
inc
xlat
mov
or
xor
push
cmovl
orl
cs
or
int
lea
and
and
adc
insl
sbb
test
mov
dec
jbe
cmc
pop
aam
and
adc
jno
mov
jmp
push
inc
inc
ret
cltd
cmp
lods
cmpsl
fwait
push
vpaddw
add
fisubrs
fmuls
and
sub
ds
leave
cmp
addr16
mov
mov
loopne
addr16
idiv
stos
cmp
adc
fwait
roll
cmp
hlt
sub
sbbl
fdivrs
jbe
je
ljmp
push
aaa
cmpsb
cmp
xchg
sbb
cmp
add
in
mov
mov
outsl
or
cmp
pop
dec
jns
xor
outsl
lock
in
adc
pop
sahf
notl
adc
mov
fistl
loopne
ret
mulb
push
out
cmp
xchg
in
dec
xor
insb
aam
adcl
fdivp
jno
xchg
xor
pusha
inc
inc
xchg
movsl
add
add
ja
sbb
dec
and
in
ljmp
divb
das
frstor
pop
sub
insb
cmp
adc
pop
inc
and
sub
xchg
fldcw
add
negb
sbb
dec
shll
fidivrs
outsl
add
test
cmp
jge
ja
pushl
mov
xchg
fcomi
add
stos
out
inc
and
mov
dec
inc
push
enter
push
out
add
add
and
stc
push
repnz
pop
pop
int
out
mov
pop
dec
fcmove
cmp
sub
cmpsl
test
cmp
dec
cli
sbb
lret
dec
mov
data16
xor
push
test
fidivs
movb
sarb
inc
mov
pop
lock
mov
orb
ret
cmp
rcrb
arpl
xchg
push
lds
or
xor
cmp
or
lds
inc
hlt
aam
inc
arpl
sub
dec
xor
in
ret
ljmp
sub
insb
jmp
cmpsl
and
jo
test
sub
xchg
sahf
mov
fs
fisubs
cmc
pop
shlb
inc
inc
inc
daa
dec
jecxz
adc
stos
das
inc
aad
aam
adc
lret
or
dec
jbe
adc
movd
inc
and
push
stos
jge
mov
jge
loop
pushf
lret
dec
dec
sti
jmp
test
les
in
xchg
dec
dec
push
xchg
je
push
push
mov
push
mov
repz
push
inc
jle
push
fisttps
les
adc
arpl
pushf
push
sbb
scas
lcall
rolb
fwait
xor
cwtl
loope
push
stc
shll
in
jbe
mov
or
sub
testb
mov
insl
das
ds
fs
ljmp
xchg
sbb
gs
insl
mov
or
fiaddl
popa
in
push
lods
test
sahf
sarb
mov
and
popa
inc
stos
xchg
sub
andb
scas
mov
aad
lods
adc
and
cltd
outsl
adc
jmp
inc
cmp
mov
ljmp
pop
pop
or
mov
popa
mov
enter
xchg
enter
sub
push
pop
jne
arpl
shlb
push
pop
push
icebp
pop
movl
xchg
fdivl
mov
cld
daa
and
mov
cltd
out
aad
scas
add
push
sub
rorb
pop
sbb
fistl
ret
test
add
ja
mov
adc
jle
inc
insl
ficomps
or
mov
out
popa
iret
cli
fcomip
xchg
loopne
jns
mov
mov
jne
popa
push
mov
clc
push
inc
or
icebp
sub
sbbl
call
mov
pop
cmp
xchg
and
xchg
push
pop
jp
mov
cmp
mov
icebp
mov
mov
xchg
into
jbe
or
or
mov
mov
pop
dec
shlb
stc
dec
in
rorb
shlb
push
push
jno
movsl
adc
addl
cmp
mov
sahf
xchg
mov
ret
sub
cli
cmp
pop
adc
jne
rclb
std
stos
es
sbbl
sbb
es
sub
mov
test
scas
outsb
pop
shl
fisttps
movsb
mov
mov
fistpll
out
mov
in
into
jb
cmp
mov
sub
outsl
sbb
dec
mov
push
jecxz
sti
adcl
test
enter
movsb
push
lahf
aas
aas
sub
and
out
and
scas
jb
push
push
arpl
mov
inc
push
loope
loop
jb
sub
pop
push
mov
lds
mov
scas
cli
lret
test
sub
es
leave
push
stc
insb
syscall
cmp
lods
loope
xchg
mov
sub
mov
sar
fstpt
orb
idivl
leave
arpl
arpl
push
addb
test
and
jns
inc
push
dec
ss
gs
aaa
popf
ret
fwait
jno
insb
sub
loope
or
and
sbb
cli
and
addr16
or
or
add
mov
or
sub
nop
inc
movsl
sbbl
addr16
sbb
in
mov
or
xor
dec
and
pop
cmp
das
dec
sbb
pop
aad
insl
fcoml
and
dec
sbb
clc
mov
pop
mov
es
pop
pop
fsubrl
xchg
mov
xchg
into
mov
loop
cmpsl
inc
fisttpll
mov
pop
into
in
into
mov
lret
mov
call
outsl
sbb
dec
xchg
mov
popf
jl
lods
ja
mov
inc
aam
jne
js
fstpt
pop
xchg
fists
test
push
xchg
push
sahf
dec
add
cmpsl
xchg
and
xchg
inc
dec
jmp
mov
es
sbb
lds
in
push
bound
xor
imul
cmp
movsl
lods
jne
push
mov
and
aas
jge
sti
dec
cmpsb
popa
pop
insb
ja
pushf
add
and
mov
iret
fnsave
inc
mov
adc
and
mov
xor
xchg
scas
pop
lahf
popf
xor
or
inc
rcrl
lret
cltd
orb
test
jmp
mov
jmp
clc
fldcw
sbb
out
dec
cmp
jbe
inc
xchg
ucomiss
pusha
push
mov
add
mov
mov
mov
add
push
out
jl
mov
test
dec
jne
popa
jp
and
mov
sub
ljmp
out
hlt
mov
orb
fidivrs
jbe
dec
pop
stos
nop
inc
cmpsl
shlb
jp
mov
xchg
mov
xchg
dec
pop
xchg
xchg
ret
jecxz
fcoml
push
iret
test
mov
enter
mov
add
fs
sub
fsubs
add
test
leave
mov
jo,pn
fdivr
bnd
adc
mov
pop
xchg
lret
leave
push
jl
inc
and
push
out
cltd
leave
scas
push
mov
sahf
mov
loop
lock
push
es
ret
jle
addr16
mov
dec
lret
pushf
sub
add
decb
fists
dec
jge
aas
jns
int3
gs
icebp
lcall
cs
loopne
cmpsb
test
stos
enter
dec
push
fildll
mov
mov
rorl
ss
pusha
sbb
jae
or
jae
mov
stc
mov
shlb
fwait
adc
mov
daa
mov
aam
xchg
mov
jmp
in
test
loope
xchg
bound
mov
xchg
pop
addr16
lret
sub
call
push
shl
fstp
in
popa
sub
mov
gs
xor
movsb
in
call
add
popf
sub
cmp
cmp
les
popa
loope
out
rcll
popl
scas
nop
cmpsl
and
jo
gs
push
jns
jae
or
adc
push
mov
outsb
mov
sbb
test
add
outsb
leave
data16
mov
lret
xchg
jle
pushf
divl
or
out
xlat
dec
pop
fs
imul
inc
xor
xchg
imul
xchg
xchg
out
loopne
and
and
or
jmp
imulb
fdivrl
imulb
push
inc
dec
lret
loope
pop
add
clc
xor
xlat
mov
cs
ljmp
lret
lcall
jge
push
push
or
sbb
insl
icebp
cltd
fdivrl
enter
pop
mov
mov
push
popf
pop
popf
fisttpll
arpl
mov
cmc
cmp
pop
stos
clc
clc
xor
xor
data16
sti
and
bound
insb
jge
icebp
imul
adc
push
adcb
hlt
inc
xchg
pusha
leave
sbb
xchg
inc
and
and
push
mov
pop
sti
fwait
dec
or
mov
andl
mov
and
and
mov
dec
scas
xor
adc
adc
outsb
cmp
xchg
jbe
pop
pop
push
pushf
stos
fildl
jb
pushf
out
jp
jno
lds
cs
arpl
xchg
daa
cli
adc
cltd
adc
loopne
sbb
xlat
cmp
outsb
and
pop
in
dec
insl
add
cld
mov
ds
fdivrs
mul
test
jb
and
das
mov
scas
xor
push
and
cmp
add
mov
in
or
rol
dec
shl
mov
sbb
jo
andb
xor
xor
add
sub
or
test
lcall
jmp
inc
add
cmp
test
sti
nop
push
or
aaa
aas
scas
into
test
push
mov
addb
stc
pusha
hlt
and
sarl
cmc
dec
or
jb
inc
gs
cmp
addl
ds
jne
rorl
pop
or
sbb
sbb
push
xchg
xchg
clc
pop
inc
repnz
rcrl
out
jo
jle
ja
pop
cmp
rcrl
scas
adc
add
call
movsl
insl
xor
lcall
into
movb
cs
or
sub
das
popa
mov
in
mov
or
jg
adcb
repnz
add
pop
mov
push
loopne
cld
sbb
push
mov
and
mov
lock
mov
cmpsb
fstps
adc
add
push
sbb
into
inc
shlb
gs
and
lcall
cmc
jb
xchg
mov
push
les
out
cwtl
jo
push
jb
mov
xchg
mov
mov
loop
inc
test
repz
inc
scas
add
nop
jbe
inc
fwait
mov
scas
xchg
mov
repz
fildll
outsb
subl
inc
fistpl
lea
lock
fidivrs
pop
and
dec
imul
cmpsb
outsb
and
jge
in
clc
lea
xchg
lods
fadd
leave
xchg
stos
push
sbb
cmp
ficoml
loopne
dec
dec
push
mov
push
adc
push
imul
int3
mov
xor
fsubrp
pop
sbb
xor
ljmp
jecxz
jb
sbb
and
insb
insl
jno
mov
cmp
add
fs
shll
pop
out
jl
inc
das
adc
xchg
in
arpl
daa
pop
enter
push
and
jp
mov
negb
aaa
sub
add
jae
pop
insb
and
outsl
mov
dec
test
scas
ja
or
nop
cmp
jl
add
push
mov
mov
mov
stc
jnp
xchg
sub
pushf
jge
outsb
mov
cmc
add
ja
mov
or
xor
ljmp
mov
int3
cwtl
pop
std
fbstp
lahf
jo
outsl
lret
dec
adc
mov
xchg
adc
cmpsb
loopne
insb
lock
fdivs
shll
lcall
in
mov
std
jno
push
rcrl
loop
xchg
or
in
fnstsw
outsb
sbb
mov
iret
mov
inc
pop
mov
cbtw
js
mov
cmc
movsl
push
movsl
cs
push
push
sub
cmp
mov
sub
in
sahf
jno
cmpsl
jmp
cmp
adc
inc
jb
xchg
test
inc
sahf
fimull
clc
pop
mov
std
jae
stc
push
mov
push
mov
insb
push
sub
inc
inc
arpl
loop
sbbl
insl
das
dec
ror
mov
or
daa
sub
fnstenv
fiadds
jmp
hlt
pop
push
mov
or
repz
inc
adc
xchg
cmpsb
jge
dec
dec
je
sti
or
jl
shlb
cmp
aad
shrb
sahf
xchg
add
test
call
aas
cmp
sahf
mov
mov
or
xor
scas
mov
lret
mov
jbe
jne
adc
or
stos
mov
cwtl
inc
adc
rol
adc
xor
pop
dec
add
fists
mov
movsl
or
rclb
into
cld
jle
dec
arpl
sub
mov
xchg
jp
fsts
gs
lret
aas
outsb
das
gs
cmp
shl
cs
and
out
repnz
in
insb
shrl
aad
cmp
daa
inc
repnz
in
dec
in
into
push
into
test
mov
sub
xor
jb
xorl
mov
push
nop
push
in
cmp
dec
mov
fisubl
push
or
push
hlt
mov
aad
stc
sbb
cmc
mov
cmp
cmc
jnp
jo
mov
mov
loopne
push
sarl
mov
sbb
xchg
push
jle
or
or
shl
sbb
icebp
sti
add
push
fsts
sub
push
lcall
rolb
test
or
adc
pop
hlt
pushf
out
jns
roll
clc
jg
data16
push
cld
mov
jmp
jecxz
push
lock
aas
add
adc
adc
std
je
mov
mov
nop
mov
cli
data16
push
mov
xlat
sub
bound
adcl
test
aaa
mov
stc
cmp
lret
das
mov
ds
ror
pop
aaa
cmc
inc
ds
lcall
dec
movsb
xor
or
xchg
imull
lcall
mov
cwtl
rclb
mov
test
cli
xchg
aaa
fcmove
jno
enter
dec
adc
push
dec
sbb
es
push
xor
jb
add
mov
push
pop
sahf
test
imul
pop
cvttps2pi
sub
call
mov
out
ja
sub
pushf
and
cmp
test
lret
mov
fisubrs
fstpt
popa
sbb
inc
int3
leave
cs
mov
daa
xchg
into
xorb
pop
sbb
pop
adc
cmp
nop
outsb
jl
fisubrs
std
sbb
fcomp
sahf
jg
mov
roll
jb
mov
and
push
jp
mov
sbb
stc
fistl
dec
mov
pop
push
popf
sbb
sarb
icebp
lods
mov
xorb
outsb
or
lea
xor
mov
add
xchg
enter
cmp
jge
pop
pop
dec
adc
in
inc
push
movsl
dec
push
lret
scas
or
adcl
fmull
add
leave
mov
or
shlb
lods
in
notb
and
dec
mov
mov
call
insl
lret
xchg
xchg
sub
xor
dec
jecxz
lds
insl
push
adc
mov
fisubl
adc
inc
or
iret
pusha
push
mov
dec
jae
xchg
jo
imul
jae
adc
call
bound
lcall
jb
arpl
or
loopne
cmpsb
xor
push
fnstsw
mov
jbe
jnp
stos
mov
xor
fsts
push
xlat
aam
lret
sbb
or
test
push
into
std
jl
subl
out
sbb
es
mov
pop
shlb
and
cmp
inc
bound
lods
jp
inc
repz
xchg
lfs
lods
xlat
clc
or
cmpsb
add
popf
insb
stos
js
out
movsl
hlt
rorb
xor
mov
push
ds
push
lods
test
dec
testl
adcl
or
int
pop
in
jle
push
push
push
mov
scas
mov
ret
inc
out
sarb
out
rcll
lcall
nop
ret
and
sub
xor
add
and
stos
out
mov
cmp
test
sub
jmp
dec
sub
es
pop
jl
mov
fidivrl
test
or
dec
jmp
xor
push
roll
sbb
jge
lock
movsb
sub
jae
adc
test
iret
ret
dec
stos
nop
or
fadds
sub
pop
cmpsb
push
push
pop
test
lock
frstor
jg
arpl
or
out
ljmp
fdivr
inc
jnp
ss
in
outsb
push
insb
lds
xor
les
add
ret
test
jmp
pop
mov
gs
cmp
xor
stos
pop
mov
adc
popf
es
daa
imul
adc
insl
mov
mov
roll
mov
xchg
inc
cmp
mov
mov
cs
out
out
cmp
inc
lret
cltd
or
cltd
enter
xchg
icebp
sub
and
popf
xchg
or
inc
jb
inc
ss
push
dec
push
xor
add
stos
and
fbstp
cld
sbb
ds
fdivrs
mov
scas
popa
rorl
mov
shrb
and
mov
xor
out
lods
jne
xchg
fistpll
push
mov
jle
jp
arpl
push
shrb
adc
das
sarb
les
mov
fbstp
mov
adc
pop
mov
xchg
rclb
dec
in
sbb
xchg
push
mov
mov
add
cmpsl
cmp
jae
mov
sbb
push
std
shr
div
or
inc
push
mov
loopew
jno
clc
imul
jnp
cs
call
cli
push
mov
test
cmpsb
mov
sti
xchg
mov
jge
sub
add
jle
mov
xor
roll
lods
lret
cmpsb
push
xchg
std
mov
fsubl
mov
sbb
or
xor
in
in
lds
dec
sha1msg1
out
out
push
cmp
call
mov
gs
rorl
adc
pusha
adc
xchg
lret
xchg
mov
inc
test
sbb
ret
add
add
cmp
imul
pop
in
push
fs
orb
fwait
rcrl
popf
mov
pop
mov
dec
add
pop
adc
sub
xorb
push
sbb
pop
pop
mov
sbb
stc
push
add
out
or
outsl
xchg
adc
out
shll
cld
xor
add
das
pop
sub
shll
pop
push
push
add
ljmp
adc
and
ret
insl
mov
out
dec
out
sbb
mov
arpl
fistpll
sahf
mov
fdivrp
inc
cmc
data16
inc
stc
push
fs
push
lcall
pop
jmp
divl
mov
outsb
and
fwait
xor
pushf
dec
out
inc
cmpsb
int
push
icebp
sub
scas
test
mov
xchg
mov
std
push
idivl
inc
sub
or
or
scas
ljmp
mov
rolb
je
jo
add
jmp
xor
mov
and
lret
adc
les
inc
rorl
jmp
repz
dec
sub
pusha
mov
and
adcb
jne
or
push
mov
fwait
icebp
adc
jo
jp
add
adc
sub
roll
data16
sbb
popa
cmpsb
orb
push
hlt
lods
mov
jge
add
std
mov
pop
movsb
jne
loopne
xchg
repnz
cmp
test
xor
sarb
fidivs
mov
test
out
jmp
and
ret
shr
fwait
dec
ds
stos
inc
jl
call
cltd
adc
jp
movsb
xor
and
pop
inc
mov
lret
xchg
xchg
add
xchg
mov
jg
inc
mov
sahf
or
fisubl
mov
pusha
add
icebp
scas
sbb
inc
data16
cs
into
push
mov
sbb
bound
jae
xor
push
movsl
cwtl
flds
and
add
or
lea
sysenter
into
out
lods
sub
imul
icebp
addr16
lret
in
mov
cld
sarl
lock
jbe
loop
add
pop
cmp
fwait
scas
adc
pusha
or
dec
dec
std
adc
xchg
add
out
sub
inc
mov
mov
jmp
stos
aas
scas
jbe,pt
cmp
into
xchg
das
push
adc
lock
or
cmp
stc
mov
sbb
testl
lock
and
add
jge
pop
mov
pop
movsl
repnz
js
shr
and
jnp
xor
sbb
push
imul
pop
sub
fwait
mov
mov
mov
xlat
lret
pusha
pusha
repnz
jb
pop
and
jge
cmp
adc
xchg
inc
out
jle
shll
hlt
add
fdivrs
mov
jl
test
jbe
or
std
fwait
testb
inc
dec
movb
fwait
push
cmp
or
and
mov
dec
cld
cmp
pop
sub
jb
dec
pushf
int
mov
push
cmp
leave
addr16
es
lods
loopne
inc
pop
pop
fnsave
movsb
lds
cmp
mov
fnstenv
push
aad
lahf
add
bound
xchg
mov
mov
xchg
inc
mov
push
pop
push
pop
orl
out
xchg
out
pusha
sbb
in
lods
inc
repnz
scas
pop
adc
jg,pn
shll
xor
xlat
sti
mov
ja
push
lods
cmp
adc
mov
aam
imul
js
icebp
jne
pop
les
sbb
cltd
sub
dec
sub
imul
test
pop
insl
mov
inc
sub
xchg
out
xchg
xor
in
lahf
iret
push
ja
sbb
jmp
repz
fsubrl
andl
mov
or
pop
popa
push
dec
mov
and
push
sub
xor
add
cmp
ret
fdivrp
insb
xchg
pop
inc
fdivl
cmp
dec
dec
out
push
roll
jnp
leave
dec
push
sbb
fstpl
lret
cmp
cmp
ficomps
ja
xchg
push
mov
outsl
jb
push
push
scas
jnp
sbb
mov
mov
clc
repnz
mov
pop
mov
xchg
in
push
jl
fistpl
int3
sub
enter
jb
xchg
daa
sbb
bound
fiaddl
imul
sbb
lret
clc
inc
rcll
cmp
xlat
inc
jo
xchg
sub
repz
cmp
icebp
adc
test
lds
mov
mov
int3
shlb
leave
inc
js
push
jl
js
bound
and
inc
std
inc
shl
push
repnz
mov
mov
mov
xchg
dec
mov
xchg
int3
pop
lods
xchg
pop
add
inc
dec
fwait
add
mov
ret
out
or
jp
mov
mov
push
dec
or
pop
and
test
or
into
dec
push
lret
movsl
rcrl
scas
call
add
sbb
hlt
in
ficomps
xor
mov
xor
fisubrl
mov
add
push
out
ja
pushw
loopne
cli
rclb
lea
gs
inc
cmp
add
mov
sbb
mov
xchg
push
cwtl
fsts
adc
sbb
mov
push
push
sbb
dec
out
ja
xchg
in
jbe
test
or
clc
mov
bound
push
mov
and
pop
addr16
sub
aad
fs
in
mov
fcmovb
mov
ret
mov
sbb
fbld
mov
add
mov
sti
call
mov
cs
nop
int3
fsubrs
int3
neg
sbb
sti
movsb
scas
jne
or
or
xchg
sbb
cmp
addb
inc
or
rclb
rcr
int
inc
repnz
les
scas
sub
cmp
test
aaa
mov
xchg
int3
jmp
sbb
dec
adc
xor
xchg
sbb
push
mov
cli
dec
pop
aas
sbb
fsubs
mov
andb
rcl
aam
cmc
push
xchg
mov
push
jmp
adc
bound
mov
repz
rol
jb
push
pop
mov
add
add
test
mov
repnz
add
test
cmp
pop
jo
test
lahf
dec
jecxz
lahf
jmp
mov
dec
incl
push
mov
cmpsl
or
dec
mov
stc
jbe
gs
fwait
sar
xor
push
lcall
adcb
mov
iret
shlb
push
jns
push
popf
mov
lahf
or
loope
scas
test
sub
iret
test
xor
jge
pop
inc
test
push
xor
push
rcl
mov
cmp
xor
xlat
aaa
and
frndint
into
call
fidivs
mov
jne
cmp
scas
and
sub
cmp
and
inc
xor
sub
js
mov
mov
jne
or
das
xchg
cs
dec
testb
jmp
jo
clc
cmp
popa
sbb
jae
loop
sti
push
jl
addr16
fldcw
push
pop
and
mov
push
adc
pop
adc
and
ljmp
or
addr16
call
and
mov
mov
jns
mov
mov
mov
push
xchg
imull
and
dec
fnsave
lods
hlt
jl
inc
in
pusha
pop
push
push
push
cltd
adc
sbb
jae
shl
mov
push
shr
jo
mov
ret
rcr
push
xor
pop
or
mov
mov
inc
add
rcr
push
pop
or
pop
sbb
lock
pop
mov
nop
push
pop
in
pushf
or
fldl
sahf
cmc
fs
inc
test
loopne
loopne
add
outsl
or
orb
cwtl
mov
repnz
inc
aaa
mov
adc
mov
rolb
in
or
mov
mov
mov
dec
cmp
and
ljmp
jg
mov
in
dec
or
ja
sub
ljmp
outsl
cli
loop
in
push
clc
popa
push
sahf
inc
cmp
in
push
and
ret
cs
jg
or
add
imul
push
push
enter
mov
jbe
pop
out
test
js
push
jne
and
mov
inc
fisttpl
dec
in
loopne
push
add
sub
cmp
push
dec
jb
xor
jnp
sub
popf
js
xchg
jmp
mov
cmp
out
sbb
mov
mov
xor
lods
mov
outsl
test
icebp
cmp
push
nop
jp
std
push
mul
pushf
ret
mov
cmp
mov
repz
dec
pop
adc
jb
push
inc
cmp
sbb
mov
dec
cmp
sub
nop
or
mov
int
cli
push
xor
lahf
test
je
mov
push
sub
jbe
sbb
test
adc
adc
clc
xor
aaa
dec
mov
lods
cmpsl
pop
hlt
mov
mov
pandn
inc
shll
sarl
xor
scas
aaa
mov
cmp
mov
outsl
pop
sti
cmp
idivb
adc
jns
cmpsb
jns
jle
imul
lahf
add
clc
inc
mov
push
test
xor
cwtl
adc
insb
push
cmp
pop
push
cld
inc
sub
arpl
inc
movsl
lds
add
leave
mov
pop
push
loope
push
push
aam
cs
mov
mov
fwait
pop
js
pusha
mov
into
cld
pop
push
ds
xchg
push
and
pushl
inc
leave
movsl
dec
test
or
frstor
out
pop
mov
xchg
mov
cmpsb
dec
push
test
adc
fimull
outsb
sti
mov
dec
out
icebp
scas
pop
or
in
clc
cmp
loop
jmp
or
inc
pop
lahf
jb
add
cmp
xchg
and
cmp
pushf
sbbl
fcoml
movsl
insb
sub
call
xchg
xor
sbb
xor
jne
cmp
scas
faddl
outsb
fwait
inc
in
mov
movb
mov
mov
fnstcw
add
daa
mov
icebp
adc
adc
xor
cmp
mov
stos
scas
ret
or
outsb
sub
dec
in
sbb
jns
mov
mov
int3
movsb
xchg
ret
jbe
out
iret
in
imul
push
jo
inc
sub
aad
xor
add
js
decl
test
aaa
es
mov
mov
xchg
shlb
inc
popf
xor
and
lods
dec
push
ficompl
bnd
pusha
dec
pop
fstps
xchg
inc
repz
lret
xchg
fdivs
enter
test
out
pop
ret
scas
sti
mov
and
sub
or
or
cmpsb
and
fcmovnbe
sbb
repz
jp
mov
jne
cmpsl
aas
shl
add
xchg
dec
xor
lds
into
in
push
incl
lods
sbb
dec
ret
inc
mov
mov
add
orl
lahf
sub
cs
jbe
jno
inc
lock
iret
fstl
stos
test
fs
stos
call
jle
out
mov
test
repnz
mov
jnp
popa
mov
lds
call
and
mov
fidivs
pop
push
inc
cwtl
ret
fdivrp
cltd
insb
in
add
xor
xchg
sti
mov
repz
out
xor
pop
push
movsl
add
das
xor
das
cmp
mov
xchg
fildll
push
int3
arpl
je
xchg
pop
xlat
dec
mov
or
je
pop
movsl
cmp
mov
jne
xor
and
pop
cmpsb
mov
add
sub
pusha
lcall
rcrl
push
and
add
sub
push
js
jnp
mov
jb
push
jmp
out
sti
pop
adc
stos
pusha
lret
mov
xchg
arpl
xchg
loop
ss
outsb
mov
inc
xchg
test
popf
and
sahf
shlb
xor
adc
pop
and
icebp
aad
mov
jns
mov
adc
sub
leave
sub
rcrb
insl
lret
lock
jp
sahf
dec
sub
filds
sub
aad
mov
cld
mov
in
ds
mov
add
add
jbe
inc
and
add
in
add
not
das
cmp
dec
jnp
sbb
cmpsb
aaa
jns
sbb
aam
insl
fst
int3
and
inc
mov
shlb
in
sahf
jle
mov
mov
fs
ljmp
push
push
stos
or
add
pushf
cli
popa
mov
mov
in
or
out
cmc
and
mov
lcall
jle
adcb
pop
add
pop
shrb
or
aad
out
or
sahf
fsubrs
sbb
cli
jmp
lahf
loopne
scas
into
insl
cmp
push
jmp
enter
notb
decb
arpl
daa
pop
out
ret
xchg
add
jl
in
mov
add
xchg
cmp
mov
test
shrb
mov
mov
aaa
mov
xor
shll
dec
fwait
pop
repz
add
or
out
fisttps
nop
add
outsl
cmpsl
dec
lock
sbb
and
pop
hlt
outsb
fidivrl
jb
xchg
push
hlt
xor
add
mov
mov
mov
mov
cmp
xor
dec
pop
lods
cmp
sbbb
add
jne
es
pop
adc
scas
test
jle
mov
or
and
push
mov
pop
add
imul
aas
mov
cmpsl
mov
adcb
adc
jbe
test
cmc
jp
insl
sub
daa
xchg
sub
pop
jle
push
pop
add
mov
mov
sbb
push
ret
push
stc
adc
mov
jle
outsl
inc
es
in
mov
cmp
adc
sbb
jb
mov
sub
pop
mov
pushl
in
mov
mov
cmp
inc
mov
jns
jbe
xchg
enter
aas
icebp
mov
cmp
push
js
push
outsl
mov
cltd
pop
fsubrl
ljmp
wbinvd
dec
pop
cmp
data16
jmp
pop
movsb
icebp
mov
movsl
negl
pop
xchg
xor
movl
negl
fildl
mov
in
into
cmpsl
repnz
adc
mov
sub
fnstcw
xor
test
fwait
loopne
xlat
nop
gs
dec
push
lods
shlb
cmpsl
ret
fsubl
test
test
jb
addr16
mov
movl
bound
imul
xor
jecxz
jl
pop
rcll
sub
dec
push
and
cmpsl
adc
loope
add
adc
sub
mov
jge
out
mov
cmpsl
cmp
addl
repnz
inc
js
add
in
sub
scas
pop
jo
sbb
bound
mov
bound
addr16
sub
xchg
pushf
test
add
and
out
jbe
pop
aam
outsl
add
lods
add
add
dec
adc
sbb
or
pop
push
push
sbb
push
pop
xor
add
ret
pop
mov
mov
cmpsl
sbb
mov
xorl
mov
inc
fstpl
shll
fists
aas
cmp
outsb
js
ret
and
mov
sub
ret
ds
ja
xchg
aad
fisubrl
mov
push
lods
and
aas
repz
cmp
insb
mov
hlt
xchg
add
or
push
inc
sbb
arpl
lret
xchg
or
sbb
leave
repnz
sbb
cmp
cmp
lds
push
pop
jns
fiaddl
bound
add
cmpsb
sbb
mov
cltd
jp
addb
pop
inc
loopne
mov
cmp
sbb
andb
inc
aad
rcr
movsl
xchg
cwtl
shll
xchg
repnz
xchg
pop
and
flds
cmp
jge
lds
lods
and
fwait
ljmp
sbb
sbb
push
ljmp
fxch
lret
inc
push
lock
xchg
add
aaa
lret
sbb
aam
loop
pop
adc
sar
ljmp
mov
cmp
lgs
in
mov
lret
test
dec
mov
shll
in
inc
test
fwait
scas
pop
arpl
inc
push
mov
cmpsl
loope
pop
sbb
rclb
enter
dec
mov
xchg
add
push
jae
push
test
mov
addr16
add
mov
xor
cmp
iret
xchg
jp
jbe
loop
push
fbld
inc
rclb
xor
mov
sidtl
jb
lcall
bnd
arpl
dec
sub
jnp
add
icebp
outsb
xor
cmpsl
jnp
sub
es
jecxz
cmp
pop
mov
cmp
ret
faddl
xor
adc
mov
cmp
imul
les
push
mov
and
cmpsl
pop
into
scas
jns
adc
mov
div
popa
and
jl
cld
fxtract
shll
stos
outsb
pop
imul
pop
sub
jns
inc
push
outsb
in
jnp
jp
mov
outsb
sub
pop
call
lods
sbb
rcl
mov
and
pop
dec
add
ret
xchg
mov
movb
lcall
clc
mov
or
sub
or
imul
divl
push
xorl
dec
popf
or
inc
stos
ss
xchg
rorl
lcall
sub
push
incl
jb
add
inc
sub
int3
xlat
or
ret
cwtl
inc
pop
jmp
shll
push
mov
frstor
push
sub
adc
and
push
xor
inc
daa
mov
es
leave
scas
push
add
arpl
rolb
and
out
xchg
or
xlat
push
outsb
test
push
outsl
mov
js
push
subl
add
pop
clc
leave
dec
fidivrl
insl
and
sub
dec
mov
dec
sbb
add
dec
mov
lret
faddp
mov
jb
jo
aad
push
test
pop
push
push
out
pop
xchg
or
pslld
lock
adc
nop
insl
cli
pusha
cltd
data16
xchg
roll
mov
push
cmp
mov
test
insl
push
paddusb
fildl
andb
jbe
jns
daa
pop
sbbb
into
add
jecxz
jne
leave
in
lds
push
lret
lret
cmp
decl
sbb
je
dec
pusha
clc
mov
fs
inc
je
out
dec
mov
xchg
cltd
mov
les
push
sub
lea
hlt
xchg
jae
adc
out
jns
adc
jecxz
or
fnstcw
and
in
xchg
pop
test
arpl
inc
jb
in
icebp
mov
pop
mov
shlb
gs
mov
hlt
out
sti
ret
xor
dec
sbb
scas
aaa
enter
dec
jnp
mov
or
ret
and
pop
pop
or
jb
mov
icebp
dec
fmuls
jnp
mov
add
push
inc
pusha
hlt
add
js
mov
test
std
scas
lods
shll
xor
cs
mov
jno
xor
xchg
popf
jne
fcompl
dec
xor
out
pop
movsb
inc
sbb
xor
ret
push
or
fldenv
jns
xor
xrelease
in
call
xchg
imul
mov
pushf
or
adc
incb
mov
and
push
xchg
mov
and
ret
mov
lahf
ret
fcomps
orl
mov
cwtl
out
pop
mov
loopne
ffreep
cs
lcall
jg
or
xchg
push
and
mov
out
sub
lcall
in
pop
inc
lods
stc
xlat
mov
lods
fisttpll
or
pop
adc
jbe
popf
inc
shrl
and
outsb
push
inc
cmp
test
in
or
sldt
adc
cwtl
pushf
cmp
pusha
or
xchg
and
lods
jb
push
dec
mov
out
mov
imul
fwait
sarl
dec
andb
and
cmp
sub
and
addl
adc
in
lods
and
mov
and
pop
mov
sbb
add
iret
and
arpl
cmp
jbe
xchg
stc
or
push
cwtl
inc
add
js
jmp
data16
inc
fcoml
dec
xor
xchg
jmp
outsb
iret
mov
es
mov
test
push
push
mov
lock
mov
jle
mov
lahf
mov
js
inc
imul
push
fimuls
stos
cmpsb
xor
pop
jmp
sub
dec
cli
cmp
jecxz
mov
and
stos
add
xchg
js
orb
lcall
lods
repnz
push
js
lret
subl
dec
test
xor
jl
and
or
pusha
cmc
in
xchg
pop
ret
rcll
mov
adc
cmp
inc
rclb
outsl
lret
pusha
push
mov
insb
subl
out
data16
out
pushf
imul
and
or
xor
mov
cmp
pop
aas
push
push
mov
sub
in
test
cli
mov
mov
and
jne
xchg
xchg
cmpsl
push
inc
push
addr16
dec
push
lock
fimuls
pop
sbb
pop
out
mov
pop
call
and
and
adc
jb
mov
fldcw
lods
jmp
imul
pop
cs
pop
outsb
dec
push
cmpsl
mov
loop
xor
mov
add
fucomi
shll
cmp
sub
mov
sbb
cmp
stc
dec
in
push
dec
add
js
add
addb
std
imulb
cmpsb
and
mov
lods
sub
cmp
sbb
cmpsl
mov
xchg
pushf
and
inc
scas
mov
lds
mov
xor
dec
xor
push
mov
xchg
or
call
jo,pt
mov
daa
mov
cli
mov
shlb
pop
add
test
jb
adc
pusha
enter
jne
mov
in
and
sbb
std
out
sbb
push
aad
mov
cmc
movb
dec
cs
and
cmp
shr
xor
sbb
iret
cmp
cmpsb
arpl
add
out
mov
test
pop
inc
adc
scas
push
nop
push
sub
mov
andl
or
stos
fcompl
ret
out
jle
stos
ja
in
dec
nop
rorl
lahf
add
add
mov
fildl
aam
add
call
mov
lret
add
sub
inc
lea
pop
jl
lods
enter
xor
imul
pop
sti
mov
lea
and
fs
pop
push
cwtl
sbb
out
js
dec
xorb
inc
xchg
mov
pop
aam
in
adc
loopne
mov
mov
and
and
ds
fsts
mov
add
stc
mov
pop
jmp
int
out
push
pop
mov
loope
mov
stos
hlt
jb
dec
clc
mov
loop
insl
pop
repnz
push
jbe
xor
out
pmuludq
shlb
loope
inc
sbb
mov
in
push
lods
shr
popa
dec
xchg
mov
fs
test
rorl
lods
xlat
pmuludq
je
mov
cs
hlt
hlt
icebp
imul
fs
in
test
lods
adc
lahf
cmp
add
pop
push
popa
icebp
mov
aas
lret
outsl
pop
nop
rcrb
outsl
xchg
inc
xchg
push
imulb
icebp
cltd
cmpsb
add
test
mov
scas
popa
pusha
sub
push
adc
mov
xchg
inc
jecxz
pushf
daa
mov
ret
push
fcmovnb
jne
popf
mov
sub
xchg
insl
jb
loopne
cmpsl
andl
sbbl
mov
lret
push
cld
add
and
iret
adc
enter
xchg
loopne
jnp
xor
cmpsb
sbb
mov
int3
gs
xor
xchg
insb
das
sbb
sub
cmp
rol
sti
xchg
fdivr
fisubrl
mov
je
push
dec
aaa
in
jp
adc
dec
stos
cmp
lcall
popf
jns
cli
jmp
push
inc
sub
popa
push
pop
cli
jle
mov
adc
insl
sahf
and
mov
dec
pop
push
mov
clc
dec
add
test
dec
gs
addr16
lods
adc
and
lods
or
pop
mov
push
or
in
call
inc
add
inc
mov
fcomp
mov
mov
lods
xor
adc
js
int3
movsb
xchg
pop
addr16
idivl
enter
push
dec
push
xchg
sub
fisubl
pop
adc
dec
in
add
jnp
cld
xchg
mov
jge
pop
adc
sbb
pop
jp
and
in
add
xchg
cmp
inc
loop
jo
inc
in
lahf
adc
cwtl
inc
mov
or
xsave
rcrl
xor
or
jmp
dec
jle
js
xchg
sti
sub
popf
push
clc
xor
fcoml
mov
arpl
cmp
movsl
bound
stos
push
jne
repz
out
outsl
push
and
dec
lock
sbb
cmpsl
scas
mov
push
sub
fnstenv
inc
and
xchg
sub
add
mov
push
ds
inc
pop
les
adc
mov
xor
scas
jno
shrl
adc
mov
push
pop
pusha
jl
inc
shrb
push
fcmovbe
adc
pop
mov
sub
loope
mov
mov
xor
lds
decl
sbb
adc
and
jp
inc
rcl
xchg
pop
in
jmp
pop
adc
cmp
cmp
inc
add
insl
sub
add
cmpsb
mov
push
das
cmpsl
sbb
mov
mov
xor
loop
dec
mov
fmul
adc
adc
jge
js
or
sbb
push
xchg
and
mov
mov
cli
dec
xchg
lret
jb
xchg
mov
mov
jmp
push
xor
ret
ljmp
pop
imul
jne
test
imul
pop
mov
jb
leave
push
in
push
add
or
cs
lds
sub
lret
rorl
pop
loopne
fistpll
out
mov
inc
fsubs
outsl
ja
test
sub
gs
xor
push
push
push
adc
rcrl
mov
sub
jle
xchg
add
xor
int3
mov
aas
jnp
mov
gs
mov
jne
les
inc
imul
cmp
xchg
gs
ljmp
push
xchg
sub
sbb
out
add
sbb
adc
mov
aam
stc
fnstcw
pusha
xorl
test
bound
adc
rep
push
in
stos
xchg
int
mov
mov
inc
test
idiv
movb
frstor
mov
subb
xchg
notb
dec
sub
pop
cltd
or
loop
ret
xchg
fs
stc
enter
sahf
xchg
loope
dec
push
jns
pop
add
sarb
adc
pop
loope
mov
lods
jecxz
mov
aam
and
cmpsb
push
sbb
push
push
loope
push
mov
push
dec
cmp
dec
insl
add
jo
fildll
push
jne
sub
jo
incb
sub
stos
ret
fwait
and
adc
xor
rolb
lea
jns
adc
and
lods
enter
mov
test
scas
sahf
subb
insb
sub
dec
out
ds
imul
cmp
es
mov
dec
out
insb
push
mov
jmp
repz
int
nop
push
sbb
cld
xor
push
stc
imulb
add
cli
push
cwtl
jp
push
pop
mov
ds
pop
int3
dec
or
jb
fwait
xchg
xor
das
aaa
arpl
insb
mov
call
mov
push
imul
push
xor
lcall
data16
inc
fcoms
sbb
rcl
sub
pop
mov
push
sub
mov
cmpsl
sub
mov
inc
sub
aaa
arpl
into
sbbl
and
mov
cltd
xor
cwtl
shrl
in
add
pop
jl
dec
ja
xorb
ret
adc
mov
xchg
pop
and
cld
push
and
fs
pop
pop
and
int3
test
sub
jno
pop
xchg
or
fidivrs
dec
pop
loope
xchg
mov
mov
xchg
jae
aam
dec
stos
or
xchg
add
and
mov
dec
mov
clc
pop
mov
jne
adc
lds
add
mov
ret
out
jmp
dec
lods
pop
fs
imulb
arpl
sub
in
jmp
sbb
mul
add
dec
or
dec
out
test
xchg
mov
and
fcmovne
and
in
imul
movsb
mov
adc
out
xchg
push
cmp
mov
inc
or
cs
and
mov
cld
enter
push
dec
mov
pop
push
push
gs
xchg
sub
jae
pop
outsb
icebp
mov
inc
sarl
addr16
push
xor
inc
jecxz
lret
push
sbb
arpl
fwait
lahf
mov
jl
je
sbbl
mov
neg
iret
gs
call
mov
fidivs
ret
lahf
dec
or
inc
xchg
loope
pop
ljmp
mov
jb
sub
xor
loope
in
jae
loope
call
and
mov
cld
pop
das
add
mov
lock
xor
outsl
mov
cmp
jne
lds
adc
lret
and
fstpl
cmp
fwait
dec
cwtl
push
push
sub
lahf
lods
repz
sbb
inc
mov
cmp
lcall
mov
xchg
pushl
cmpsb
fsts
loop
pop
in
ljmp
std
aaa
call
mov
push
mov
xlat
mov
and
ljmp
fisubs
movsl
add
fwait
pop
pop
ret
add
hlt
dec
stc
cmpsb
idivb
out
sub
imul
ror
mov
mov
addr16
jno
inc
dec
test
cwtl
xchg
mov
xor
leave
push
jg
inc
rcrb
jne
push
adcl
xchg
inc
mov
imul
fcomp
int3
inc
mov
sub
in
mov
pop
mov
adc
les
xor
outsl
push
ja
fisttpll
ret
or
xchg
repnz
test
sub
jle
mov
jne
mov
mov
imul
lods
push
incb
xor
shrb
xchg
dec
jne
pop
cmp
mov
mov
or
and
pop
dec
lods
arpl
lret
loop
add
push
pusha
enter
dec
cld
iret
xor
xchg
enter
imulb
mov
jbe
cmp
cmp
rcrl
leave
push
dec
jmp
cmpsb
js
push
imul
imul
xchg
lret
jbe
xorl
or
jno
dec
imul
push
pop
pusha
jmp
jecxz
push
ret
mov
js
mov
push
mov
pop
inc
or
ds
mov
sbb
cli
xor
pop
andl
mov
inc
in
pop
xor
adc
push
leave
jbe
push
cmpsl
ss
ret
in
sar
mov
inc
jae
mov
jle
addr16
fdivl
or
pop
cmpsl
add
call
ds
scas
or
enter
cmp
imul
mov
cmp
pop
les
sub
aaa
add
dec
das
jp
cs
or
outsl
pushw
mov
inc
jl
bound
pusha
mov
fs
ds
sti
cmpsl
and
movsl
cld
push
mov
push
aad
sub
cmpsb
and
xor
cmp
dec
sahf
push
sub
imul
or
mov
sbbl
stos
pop
daa
sbb
xchg
mov
lods
cmc
orb
sbb
ljmp
lahf
mov
jecxz
jns
lahf
xor
and
xchg
sbb
idivl
sbb
insb
fsubs
and
es
mov
xchg
xchg
mov
xor
aaa
pushf
sbb
inc
jecxz
jl
push
mov
jnp
push
out
notl
js
nop
ret
cmp
push
fld
stos
ljmp
fbld
cmp
movsl
dec
dec
ffree
addr16
orb
mov
cmp
fsts
fnstenv
les
xor
dec
pushf
adcl
xchg
inc
or
daa
mov
arpl
adc
pop
rorb
leave
mov
sub
xor
outsb
sub
cli
xor
fsub
pop
idivl
mov
out
ja
sti
push
mov
notb
jg
sub
stos
sbb
lds
je
pop
or
push
je
addl
adc
cmpsb
in
imul
add
mov
mov
sbb
lcall
ss
cmpsl
lcall
push
ret
or
stos
addr16
sub
mov
add
lods
ds
cltd
sbb
gs
push
mov
jbe
xchg
mov
lret
push
xchg
adc
inc
adc
xor
and
jns
and
and
daa
xchg
sbb
test
xchg
sbb
dec
adc
jnp
call
shrl
clc
adc
cltd
hlt
mov
daa
leave
cli
mov
pop
or
mov
adc
add
js
adc
or
adc
fsubl
and
jnp
add
test
paddd
push
inc
cmp
pop
cld
jmp
loop
cmp
adcl
mov
mov
ds
mov
push
push
repnz
xor
leave
push
cmp
jp
mov
xor
push
jp
jns
mov
or
lahf
sbb
andl
inc
jne
mov
in
movsl
or
or
add
test
push
mov
leave
push
jnp
dec
stos
imul
xchg
addl
imul
jb
sub
clc
in
xlat
mov
lret
xor
jle
popa
jnp
jl
inc
sbb
ret
mov
into
jb
push
sbb
xchg
lock
test
repnz
add
mov
int
pop
xchg
jl
pusha
in
xchg
cmpl
dec
xor
sub
lea
mov
hlt
loope
pop
fdivrl
je
and
imull
int3
lcall
scas
imul
cmp
inc
ja
enter
in
xor
xor
mov
mov
add
adc
imul
push
mov
je
xchg
sbb
add
insb
fnstcw
mov
cmp
jo
xchg
test
adc
pop
in
xchg
pop
jnp
gs
mov
adc
scas
pop
call
jge
push
lret
push
add
cmc
fmul
mov
fmull
addl
sub
out
xor
cmp
jge
pop
sub
xor
rorl
adc
stc
ja
call
cmp
clc
adc
pusha
jns
cmp
or
scas
adc
sbb
in
mov
jne
imul
xchg
cmp
jbe
cltd
or
and
aas
fwait
jae
mov
inc
inc
jbe
inc
repz
adcl
push
scas
cltd
int
push
pusha
leave
cmpsb
in
rol
mov
out
xchg
xchg
cld
lods
scas
sbb
xchg
jle
aaa
divb
adcl
stos
btc
call
fidivrl
mov
fcmove
push
loope
jl
pop
mov
sarl
je
add
scas
cmp
pop
negl
cmp
leave
stos
add
sub
arpl
imul
mov
mov
xor
bound
jge
stc
dec
pushf
pop
sub
mov
into
lods
mov
sub
imul
dec
mov
cltd
jnp
adc
out
cltd
pusha
test
lret
pop
int
int
sub
and
xchg
sbb
ljmp
shrd
mov
mov
icebp
fstpl
ljmp
icebp
jnp
adc
pop
adc
mov
and
dec
mov
lea
rorb
inc
or
mov
seta
loope
cmpsl
mov
jg
rclb
stos
in
cli
icebp
xchg
sub
pop
aas
mov
arpl
inc
or
or
adc
xchg
mov
into
clc
mov
repnz
enter
pop
gs
sbb
ret
sti
pop
fnstsw
pop
insb
mov
xchg
xor
rcr
cmpsl
jl
and
xlat
inc
mov
and
jecxz
es
mov
rdpmc
lea
jecxz
daa
insl
dec
mov
mov
jb
sub
incl
adc
insb
idivb
mov
xchg
and
lret
outsl
mov
mov
sbb
add
ja
mov
mov
or
outsb
cmp
or
std
aam
or
add
loop
or
test
enter
xchg
mov
popf
mov
test
scas
mov
js
xchg
inc
push
fwait
mov
ds
mov
aaa
out
icebp
je
and
test
or
fdivr
cld
xlat
lock
mov
and
sbb
daa
adc
call
adc
or
fmull
dec
pop
std
xchg
test
mov
pop
das
ficomps
cmp
sbb
add
sti
stc
and
lcall
fcomps
roll
jns
push
or
adc
outsb
testb
sub
das
shll
mov
shlb
mov
lds
imul
inc
dec
rorl
cmp
xchg
jno
fsubs
sub
sub
dec
roll
stc
pushf
in
fisttps
cwtl
test
xlat
pop
inc
mov
cs
mov
clc
nop
jb
cld
imul
jp
jae
dec
js
lcall
jnp
push
fistl
add
add
mov
xchg
adc
lret
popa
in
sub
lcall
xchg
mov
fwait
ja
mov
imul
and
adc
leave
dec
in
cmpsb
insl
mov
stos
or
aas
add
loop
add
outsl
pop
pop
test
cmp
add
imul
push
inc
fadds
xor
and
mov
insl
lea
iret
sbb
int
jle
test
ja
inc
add
add
fldt
outsb
or
lods
mov
lahf
imulb
rcrb
cli
mov
push
addr16
push
pop
out
xchg
add
push
cmp
popf
push
xchg
xchg
mov
adc
mov
sub
lods
mov
scas
data16
mov
sbb
popf
mov
in
mov
insl
jg
popf
xchg
push
mov
mov
imul
xchg
jne
ljmp
repz
mov
mov
cld
sbb
pop
and
lock
daa
mov
rcrl
lods
sub
scas
aad
movsb
mov
mov
mov
mov
sbb
jmp
mov
mov
pop
adc
adc
add
aas
mov
cmpsl
sub
adc
dec
cmp
flds
movsl
pop
pop
inc
test
inc
sbb
lahf
mov
mov
sub
cld
jl
lret
aad
sbb
sbb
imulb
pop
vpandn
and
jmp
mov
rorb
dec
dec
call
shll
nop
jmp
addb
xchg
push
pop
ss
out
or
test
aad
pop
cmp
or
in
faddl
cmp
mov
call
sub
cli
insl
ja
cmc
ja
icebp
mov
or
and
adc
or
push
pop
lea
push
cmp
jns
into
addb
into
sarb
or
or
add
xor
bound
hlt
dec
jnp
aam
add
jo
sub
jne
cmp
or
push
push
out
adc
push
jae
loope
and
pop
scas
or
std
jl
mov
sbb
fcoms
lret
iret
stos
stc
cltd
cmove
push
pop
mov
push
aaa
movsb
mov
iret
pop
hlt
inc
aas
pusha
push
mov
cmp
negb
jns
aam
pop
negl
inc
and
stc
sub
dec
inc
and
repz
out
sub
jo
or
bound
cmp
cmp
insb
aas
sub
stc
cmp
cltd
xchg
loop
jns
in
clc
jp
mov
sub
int3
adc
je
cmp
je
xor
fmull
pop
dec
mov
sti
out
xchg
jg
mov
push
adc
sub
das
insl
sbb
xor
arpl
pop
pop
addb
push
popf
dec
sub
inc
jp
pushf
pop
mov
popa
mov
add
push
xchg
sub
lods
or
mov
lds
jg
adc
sbb
jo
push
bound
xchg
ror
aaa
and
ljmp
js
mov
lret
mov
and
and
out
dec
ficompl
ret
mov
rol
rcl
jmp
lret
inc
repnz
scas
lock
jp
push
idivb
addl
jb
adc
sahf
cli
into
imul
mov
clc
mov
lret
and
mov
mov
repz
jmp
xchg
xor
cmpsb
mov
xor
popa
mov
pop
decl
bound
movsl
dec
mov
adc
mov
lods
stc
js
lods
loopne
outsl
mov
cltd
scas
ret
push
adc
push
jnp
hlt
jecxz
inc
dec
and
icebp
mov
adc
sub
scas
sub
out
xchg
dec
sahf
mov
pop
xchg
jae
push
inc
test
jecxz
stos
outsb
jnp
test
sahf
adc
fsts
data16
cmp
cmp
stos
or
mov
xor
add
aaa
sbb
and
jae
add
inc
mov
push
xchg
mov
mov
inc
fdivs
pop
dec
pushf
icebp
pop
fildll
xchg
inc
sub
cmpsl
inc
daa
cmpsl
or
add
adc
jb
inc
out
movsl
push
cwtl
mov
addl
push
fwait
loope
mov
lahf
clc
std
jmp
or
jmp
int3
ljmp
mov
pop
pop
push
add
sbb
inc
fidivrl
dec
aad
stos
pop
test
sub
test
mov
cld
ljmp
lods
jns
pop
rorb
in
cld
add
push
adc
push
pop
int
pop
fsubrp
mov
aam
shlb
mov
mov
push
mov
scas
mov
imul
cmp
sub
cld
sub
outsb
pop
inc
xchg
pop
out
leave
mov
xchg
scas
inc
sbb
ret
adc
outsb
scas
and
sub
sti
mov
mov
push
sub
enter
push
je
sub
aam
cmp
loop
cmp
and
jb
rcll
inc
ss
int3
or
mov
ljmp
inc
stos
lock
lods
arpl
bound
pop
scas
call
add
pop
mov
insb
xchg
lods
enter
sbb
imul
insb
cmp
in
scas
push
lcall
cli
xchg
popa
ds
loope
add
xor
mov
cltd
loope
cmpsb
cmp
adc
scas
pop
xchg
jecxz
and
stos
and
shlb
add
fst
ljmp
inc
dec
mov
push
mov
jmp
js
mov
sub
cld
mov
adc
fiaddl
xchg
out
andb
jl
cli
xor
sub
xchg
push
in
sub
push
call
xor
cmp
add
daa
push
orb
add
jge
mov
sub
in
testl
jns
testl
aaa
mov
push
push
jg
mov
sbb
and
lret
push
mov
lods
inc
and
addr16
xor
dec
aaa
sbb
icebp
rorb
andb
inc
insl
loopne
inc
mov
loopne
sub
push
shlb
inc
mov
xor
inc
sub
movsl
mov
sbb
push
add
test
imul
jb
int
sbb
loope
adc
add
inc
fs
xorb
mov
mov
jns
mov
cld
and
mov
orb
es
aas
test
xchg
lock
fnstcw
pushl
jecxz
sahf
jnp
ljmp
pop
loopne
jo
pop
andb
push
cwtl
mov
inc
adcl
stos
jge
jecxz
mov
adc
int
aas
push
xchg
insb
mov
test
add
negl
insb
stos
movsl
ljmp
cmpsl
aad
jecxz
adc
adc
call
dec
sub
ja
dec
push
lret
arpl
cmpl
lods
mov
inc
scas
movsb
mov
and
adc
in
mov
jp
scas
ss
fldcw
push
loopne
mov
add
jnp
add
aam
lods
jge
sub
scas
scas
mov
xlat
imul
mov
jecxz
lahf
movb
inc
popf
gs
mov
fwait
push
pusha
sub
inc
ds
fcoms
and
jp
pop
adc
push
lods
cmp
imul
call
mov
cli
loope
fdivp
out
pop
xor
mov
jo
cmp
dec
insl
icebp
xor
and
jle
outsl
out
and
cmp
lock
pop
cmp
aam
mov
jle
popf
cld
test
mov
mov
out
xorb
add
loopne
mov
xchg
mov
pushf
xchg
mov
jge
subb
add
xchg
sahf
std
push
lea
js
stos
in
jb,pn
pop
insb
out
int3
jp
cltd
inc
jle,pn
mov
adc
sub
pop
sbb
cwtl
jne
icebp
adc
mov
jge
xchg
out
and
stos
rcrb
or
mov
cmp
dec
andb
push
mov
push
aas
jnp
daa
add
stos
hlt
icebp
rolb
cmp
or
decl
sub
mov
push
mov
push
jo
fnstenv
fsts
daa
mov
fists
sbb
imul
push
add
mov
xchg
and
cltd
lds
push
leave
ss
or
in
lcall
sahf
dec
ficompl
mov
aad
outsb
xchg
mov
fs
jns
xor
in
shl
add
ficomps
cmp
lahf
icebp
lds
std
xor
pushf
int3
push
out
fs
jo
adc
iret
cwtl
xchg
mov
or
mov
shll
or
psubd
xchg
in
cmpsb
outsb
sub
enter
int3
sbb
lock
dec
jb
inc
push
test
dec
mov
pop
pop
push
mov
shll
cmp
adc
lret
test
out
ficoml
fwait
inc
hlt
jae
adc
xor
sti
lahf
xchg
mov
xchg
mov
push
sbb
cmp
pop
push
cwtl
jmp
cmp
cmp
icebp
insb
push
sbb
mov
push
pop
cwtl
scas
jg
cld
push
pop
xor
sbb
popa
xor
mov
adc
dec
sub
xchg
xchg
push
mov
jns
or
out
push
pusha
push
cmp
inc
sub
cmpsl
add
sub
xchg
pop
daa
mov
lcall
shrl
pop
fwait
inc
or
scas
mov
aas
sub
adc
lret
mov
cli
pop
inc
push
adc
adc
add
aam
cld
lock
aad
ret
xchg
inc
inc
shrb
loopne
hlt
dec
xor
mov
xchg
pop
sub
push
adc
or
sub
adc
xor
repnz
sbb
jp
cwtl
into
scas
sbb
mov
add
iret
xor
xadd
aam
push
es
pop
lds
xchg
pop
push
out
notl
aaa
mov
iret
test
cltd
adc
jae
fsubrs
adc
fstps
cld
jmp
lea
dec
daa
rclb
inc
aaa
sub
cltd
inc
mov
fistps
mov
xchg
mull
imul
dec
aam
add
sbb
roll
rcr
clc
lea
bsr
sub
mov
pushf
or
push
cltd
pop
sub
cmc
jecxz
bound
rorb
in
imul
icebp
pushf
xor
das
pop
push
pop
loopne
rclb
popa
ds
aas
fucomi
pop
jle
adc
out
adc
mov
ljmp
insl
out
fstpl
sbb
lahf
mov
arpl
push
adc
xchg
faddl
icebp
shlb
mov
mov
mov
inc
pop
and
push
sub
xorl
jg
pushf
clc
fisubrl
cmp
out
jbe
fsubp
adc
pop
into
xor
xlat
mov
add
imul
inc
mov
mov
scas
test
mov
fimull
jae
sbb
std
mov
add
or
mov
pop
push
mov
mov
imul
movsl
mov
stos
std
imul
sti
decb
dec
mov
inc
ret
into
sub
gs
push
xchg
ss
push
jle
mov
aaa
test
push
cmp
aad
pop
jns
mov
repz
inc
and
xchg
cmp
push
int
pop
and
add
test
iret
dec
std
sbb
loope
xchg
popa
mov
cmp
ds
mov
cmp
inc
add
sbb
pop
test
jae
lods
sub
das
in
sahf
loope
and
rcll
mov
push
test
jns
xchg
jae
or
push
fnsave
mov
movsl
jle
cmc
sti
lods
push
mov
and
lock
sbb
or
jno
push
dec
pop
lea
dec
mov
mov
sbb
lods
movsb
jp
out
push
lods
sbb
gs
ret
mov
xor
sahf
shlb
push
pushf
hlt
fs
fnstsw
mov
cmp
mov
in
xchg
idivb
fmuls
mov
outsb
push
jmp
cmpsl
jnp
xor
adc
stos
pop
jnp
mov
mov
cld
or
test
cs
sbb
bound
sahf
js
cmc
mov
mov
fcmovu
ljmp
lock
mov
stc
push
scas
movsl
movsl
inc
js
imul
insb
insl
je
aad
sub
call
cli
hlt
xchg
inc
add
fwait
inc
mov
shl
add
cs
andb
out
mov
fdivl
cltd
pushf
jo
enter
mov
xor
stos
xchg
mov
fstps
popa
cmp
lret
pushf
aas
fistps
and
outsl
push
or
leave
cwtl
fidivl
lret
add
loope
xor
inc
jge
imul
mov
inc
fldz
or
or
cmp
mov
jg
xor
dec
cli
outsl
cmp
mov
jo
lea
inc
lds
adc
jb
mov
add
jl
mov
mov
std
push
mov
repnz
xchg
mov
aaa
rolb
inc
mov
pop
jmp
test
pop
inc
mov
sbb
dec
ja
push
inc
sbb
mov
push
cs
in
push
pop
pushf
pop
shrl
mov
xchg
rorb
sahf
sbbb
fcmovnbe
mov
mov
or
push
sahf
mov
fdivs
icebp
dec
je
cwtl
xor
mov
inc
adc
pop
sub
ss
icebp
mov
leave
orb
aam
cmpsb
lds
or
dec
cli
les
shlb
jnp
daa
fs
jnp
movsb
cmc
dec
test
and
gs
test
aaa
aam
int
lock
or
push
push
mov
int
bound
arpl
and
or
std
insb
and
mov
pusha
xor
add
push
inc
and
push
inc
jp
rorl
lcall
inc
add
jl
jae
loop
lret
imul
jecxz
lds
mov
das
pop
pop
inc
lock
rol
xchg
and
or
xchg
imul
dec
dec
jg
mov
inc
lods
cmp
mov
or
pop
aas
xchg
dec
inc
into
aad
pop
dec
jle
int
or
aas
cmpsl
sbb
pop
subb
inc
add
jns
sbb
adc
dec
jle
xor
sar
out
sub
in
ljmp
movsb
mov
data16
addr16
scas
out
mov
movsb
add
pop
cmpsb
cmp
add
inc
dec
mov
fwait
les
rcr
inc
mov
push
mov
int
out
pusha
inc
jl
push
imul
ljmp
push
scas
notb
mov
mov
test
lods
enter
cmc
jg
pop
pop
add
insl
mov
sub
ficomps
cmp
subl
in
pop
or
fcoms
les
cmpsl
mov
call
xor
xchg
pop
mov
insb
push
nop
push
sub
push
xchg
cmpsl
mov
and
cld
inc
push
scas
sbb
jns
in
mov
jle
mov
cmp
jne
icebp
je
xchg
dec
inc
xchg
clc
dec
or
daa
call
jmp
pop
shll
fwait
shrb
fcmovu
xchg
push
xchg
adc
jle
xchg
inc
mov
or
mov
pushf
push
stos
dec
fwait
push
or
or
push
cmp
dec
fcomps
mov
and
cmp
mov
push
cmp
lcall
loop
sub
lahf
aas
jae
lock
into
and
cld
mov
movl
sti
scas
fdivp
sub
rcrl
inc
mov
lcall
lods
lret
arpl
fnsave
pop
mov
mov
sub
adc
add
dec
mov
loop
cmpsb
into
sbb
es
test
and
or
in
iret
jb
into
mov
sub
mov
getsec
sub
sub
push
mov
loopne
outsb
sub
jbe
fstps
xor
or
daa
dec
jns
pusha
add
mov
in
add
jne
xlat
push
xor
sbb
lret
pop
add
or
aad
and
pop
cmc
jne
sub
push
stos
test
jecxz
pop
nop
sbb
jp
pop
push
xchg
xchg
divb
daa
movsb
fsubs
imul
xor
mov
js
hlt
jns
dec
nop
int
aas
sbbb
push
push
rcrb
mov
ret
cwtl
mov
stc
lock
mov
and
xor
cmpsl
push
xchg
insl
sahf
pop
xor
cmpsb
sub
cs
pop
mov
pop
stos
imulb
iret
lea
clc
out
cmc
ja
add
arpl
dec
jmp
sbb
xor
jecxz
in
into
clc
xchg
outsl
inc
pushf
out
aad
jne
jae
mov
pushf
or
and
pop
aaa
or
dec
mov
mov
mov
fdiv
shl
xchg
mov
pop
and
adc
jecxz
dec
mov
push
mov
push
pop
out
pop
add
test
data16
jae
aad
imul
push
lods
sar
arpl
repnz
movsb
jle
fisubrl
and
xchg
inc
insb
ss
add
pop
xchg
aad
in
push
sahf
data16
push
lds
mov
test
xchg
in
and
jecxz
and
test
and
dec
and
mov
icebp
mov
outsl
cmp
pop
mov
scas
xor
fbld
xchg
push
add
push
ds
mov
stos
loopne
add
mov
scas
mul
bnd
int
testl
push
test
jae
push
cmp
jp
mov
ret
jmp
mov
mov
pusha
fcoml
sbb
lods
fistpl
xchg
xchg
and
loop
int3
add
cmp
and
jne
inc
cs
daa
loope
sbb
in
mov
mov
add
push
loope
fs
or
add
out
mov
xchg
fisttps
xchg
cmpsl
in
xlat
or
bound
pop
and
xor
or
add
dec
icebp
mov
ds
inc
xchg
cwtl
jns
iret
les
dec
lock
sbb
dec
push
sahf
lds
mov
cld
add
imul
push
std
out
mov
popf
je
aam
call
loop
and
jmp
or
dec
dec
stos
cmpsb
or
dec
xchg
and
aad
cld
in
mov
repz
jle
in
aad
lods
pushf
cmp
mov
roll
jg
je
std
adc
fldt
xchg
sbb
pop
jae
jns
xchg
insl
out
pusha
imul
adc
sub
mov
in
js
andb
dec
or
jmp
clc
sbb
xor
adc
sbb
push
adc
mov
lods
das
fiadds
xor
mov
decl
aad
fimull
adc
cmp
pop
xchg
das
nop
xchg
insb
lock
lahf
loope
cld
jns
js
xchg
ljmp
cwtl
push
fnsave
outsl
jnp
sub
aad
pop
xchg
in
add
daa
pop
push
jmp
stos
sbb
test
jp
jae
cs
mov
sbb
adc
popf
dec
mov
iret
inc
jecxz
pop
pop
pop
mov
jb
gs
add
gs
test
push
mov
insl
mov
dec
jecxz
or
lret
or
sbb
xlat
mov
add
inc
jbe
xor
fwait
xor
and
ja
lcall
ret
xor
xchg
ljmp
cmp
leave
clc
out
and
ffreep
jecxz
or
xchg
and
jns
inc
imul
daa
dec
in
fnstcw
dec
lcall
add
xlat
ss
inc
xchg
js
rcrb
loope
jnp
daa
in
lret
fstl
push
adc
pushf
and
inc
je
pop
dec
inc
or
push
sbb
ja
dec
cltd
jae
mov
ret
sub
adc
mov
lcall
xchg
pop
xchg
out
xor
aaa
pop
push
mov
add
fwait
xchg
xchg
testb
sub
cmp
mov
bswap
stc
cmp
pop
loope
scas
sahf
dec
movb
mov
fnstenv
rclb
loop
or
inc
sysexit
jne
es
xchg
cmc
and
mov
ret
adc
and
add
adc
pushf
adc
int3
adc
mov
push
dec
movl
sti
lahf
sbb
add
jl
adcb
stc
sub
pushf
mov
in
mov
dec
or
mov
imul
jle
sbb
mov
sbb
imul
orl
gs
mov
cld
mov
mov
mov
pop
cmp
dec
cwtl
pusha
jge
or
test
rcll
push
bound
sbb
add
push
mov
pop
cmpsl
inc
imul
ret
cld
lock
into
out
inc
lret
lods
bound
pop
xchg
call
stos
out
cmp
push
sub
push
les
stos
lods
in
sub
loop
push
bound
call
arpl
or
push
test
mov
inc
mov
xchg
push
cmp
lods
xchg
pusha
mov
or
imul
sbb
push
insl
roll
aas
sbb
mov
xchg
xchg
inc
mov
xor
sub
int
dec
mov
adc
lret
in
arpl
dec
push
jns
mov
jecxz
mov
mov
sub
push
cwtl
es
jns
jae
ficompl
xchg
or
shrb
cmp
sti
dec
shlb
cmpsb
xlat
xor
sbb
retw
loope
out
dec
popa
pop
leave
mov
int3
popf
std
xchg
aam
lcall
xor
lahf
mov
mov
sbb
lock
lea
mov
xchg
push
xchg
incb
data16
stos
movsb
fs
loop
ficoms
or
aas
and
loope
jae
add
data16
aaa
push
sti
ret
pop
inc
mov
jg
or
movb
push
stos
mov
rcr
dec
cltd
lahf
cmpsl
mov
push
mov
pop
dec
sub
mov
jns
stc
daa
jg
jnp
js
and
mov
adc
pusha
sbb
movsl
std
mov
outsb
pop
dec
in
int
push
cli
xchg
enter
out
ret
push
js
setae
dec
push
dec
out
sbb
xchg
and
jae
xchg
sbb
sbb
js
add
push
aam
ja
mov
xlat
adcb
imul
lods
xor
push
sbb
loope
mov
mov
jge
lret
arpl
pop
adc
adc
mov
sbb
add
sbb
int3
mov
insl
or
mov
cmp
loope
lret
xor
mov
call
mov
mov
aaa
in
cs
and
repz
push
ficoml
push
test
pop
idivb
jge
and
in
add
jecxz
xor
aas
jge
fdivr
mov
adc
sahf
call
cmp
mov
test
mov
cmpsb
je
add
test
pop
xor
arpl
add
mov
out
lea
and
mov
mov
mov
mov
dec
or
push
cmp
sub
push
mov
gs
ljmp
push
ds
dec
cltd
int
stos
xchg
ret
push
add
fadd
roll
pop
sub
int3
sub
int
popl
sbb
cmpb
outsl
mov
arpl
ja
lret
push
pop
sbb
push
inc
and
xor
and
pop
inc
insb
or
aam
loopne
xor
aam
and
xor
xchg
mov
test
push
aad
daa
jae
jne
pushf
sahf
xchg
aas
mov
ja
stc
inc
inc
arpl
loop
in
cmpsb
lds
mov
popf
movsl
pop
lock
adc
xor
xchg
mov
adc
xchg
mov
test
xor
inc
mov
and
in
fs
insb
stos
xorb
dec
xlat
or
inc
repz
rorb
imul
mov
int3
outsb
test
add
pushf
mov
stc
dec
sub
pop
xor
fdivrs
lcall
cmp
fisttpl
xor
xor
push
or
and
mov
ss
daa
mov
cmp
ret
add
push
gs
pop
or
andl
sub
xlat
mov
inc
or
jecxz
hlt
shlb
sar
cltd
and
outsl
adc
popf
pop
inc
cwtl
or
loop
xchg
mov
cmp
pop
ljmp
dec
mov
lret
lret
cmp
cmp
movsl
or
mov
faddl
push
notb
lds
dec
pop
and
insb
dec
aad
lods
mov
sti
jne
rcl
adc
jb
and
add
cmp
mov
les
cmc
clc
sub
mov
movsb
cmp
pop
sahf
dec
das
sub
xchg
in
mov
mov
sti
inc
pop
pop
cwtl
sub
fcoml
fistl
cmc
sub
pop
xchg
xchg
fs
stos
inc
lahf
in
mov
icebp
mov
cmp
fs
loopne
in
fldt
inc
movb
int3
stc
fstl
leave
imul
xor
inc
inc
jno
shr
pop
mov
xor
pop
or
rclb
test
in
test
lahf
push
sub
lcall
mov
pop
loopne
iret
sub
ficompl
shrb
add
movl
fs
in
shr
inc
cmpl
jmp
ret
ret
adc
and
jne
sbb
jo
mov
lods
loop
dec
mov
scas
or
in
xchg
push
outsl
movsl
jne
repz
sub
sub
dec
stc
fdecstp
into
fiadds
adc
jb
orl
jnp
pop
cmp
test
push
addr16
inc
jmp
sub
xlat
test
sub
adc
les
inc
lret
mov
movsb
add
xor
call
mov
ja
or
je
in
add
ja
daa
inc
gs
sbb
std
adc
xchg
icebp
jbe
mov
and
in
xchg
insl
sub
outsl
sbb
popa
cld
push
lret
into
mov
sbb
mov
pop
rcl
mov
fisttpl
inc
insl
mov
scas
pop
dec
and
out
jns
mov
les
in
lods
and
imulb
mov
sub
cmc
ss
mov
cmc
sub
nop
les
lock
xchg
xchg
jl
in
jb
jmp
daa
and
jbe
xor
jmp
in
mov
sub
fisttpl
lahf
pushl
in
loop
rcrl
jge
and
lcall
ds
repnz
xchg
outsl
pop
cmpsb
mov
mov
mov
daa
or
mov
repz
iret
push
fadd
mov
push
add
cmc
sbb
shrl
or
add
imul
xchg
jecxz
lea
jle
pop
incl
dec
mov
imul
sbb
fwait
mov
mov
addr16
std
or
inc
sub
cmpsb
fcmovb
adc
repnz
push
pop
mov
ror
outsl
and
loopne
mov
or
push
jb
and
push
mov
jle
cmc
pop
adc
in
dec
mov
pop
stos
test
pop
xor
sbb
das
aam
scas
inc
push
out
ljmp
or
rcll
pop
adc
inc
scas
arpl
sub
xchg
inc
inc
inc
sbb
lock
sub
bound
imul
gs
lea
sahf
inc
cli
mov
inc
pop
push
cmp
lock
js
in
cld
xor
lods
jo
shrl
mov
xor
sbb
inc
test
cmp
xchg
mov
mov
or
cmp
mov
sbb
sahf
cld
mov
dec
add
and
mov
mov
pushf
pop
dec
pop
fistpll
into
cld
xor
xlat
ljmp
nop
push
fisttps
inc
inc
pop
cmp
fsub
xor
loopne
idivl
cmc
inc
jae
xchg
dec
test
cmpsb
push
xchg
repnz
pop
pop
adc
scas
insb
add
sbb
loopne
gs
repnz
xor
leave
adc
sbb
lret
jbe
sub
in
es
push
add
xor
xchg
jne
mov
mov
mov
fldl
stos
insb
mov
xchg
fnstcw
dec
jne
aaa
mov
shr
fsubl
mov
dec
dec
jg
std
xor
mov
and
out
out
inc
and
pop
mov
mov
add
xchg
push
cli
push
scas
dec
jmp
sub
cmc
cmc
jns
dec
xlat
nop
mov
push
xchg
out
sarl
mov
xchg
mov
cmp
or
gs
popf
icebp
fucomi
arpl
inc
jb
xor
pusha
dec
hlt
stc
rcll
push
cmp
sbb
xor
lret
sbbl
test
fucom
subl
mov
push
jp
dec
fidivrl
shrb
push
sub
int3
mov
adc
or
dec
outsl
stos
cld
outsb
loope
jo
pop
cmpsl
and
test
popf
in
aaa
inc
int3
pop
loopne
xchg
jno
scas
jle
jbe
fbld
mov
inc
mov
ror
mov
test
dec
add
in
cmp
iret
sub
loopne
je
sbb
or
dec
mov
adc
lods
mov
lds
and
push
hlt
out
xchg
stos
or
mov
ret
mov
mov
push
xor
xchg
xchg
adc
sti
cmp
dec
and
jne
dec
lcall
inc
in
sbb
rclb
aas
push
pop
mov
pop
adc
stos
dec
pop
push
pop
add
pop
lods
subb
loopne
popa
cmpl
sub
leave
lods
xchg
shl
mov
gs
xchg
ja
jp
fwait
les
push
fsubr
sarb
out
aas
mov
add
sbb
loopne
jl
xor
insb
in
push
or
sbb
cmp
mov
mov
and
ret
push
and
mov
push
movsb
mov
loope
pop
sbb
enter
ds
arpl
add
and
jecxz
je
cld
shlb
mull
mov
inc
adc
test
push
stc
cmp
cmp
xor
jmp
and
cmp
adc
adc
lret
cmc
movsb
loope
int
mov
movsl
popf
loop
mov
enter
push
in
in
cwtl
fs
jp
stos
adc
sub
inc
sub
lahf
mov
mov
xor
adc
xchg
out
inc
cwtl
sub
lahf
add
cmovne
pop
pop
daa
in
sub
aam
bound
pop
xor
ljmp
add
xchg
and
dec
or
push
xchg
dec
fstpt
lret
or
adc
xor
dec
pusha
outsb
mov
insb
jg
sbbl
sbb
pop
ret
popf
fs
sub
push
aad
pop
das
xchg
mov
cmp
or
cltd
push
pop
sbb
push
add
and
jmp
and
cltd
fbstp
and
pop
in
push
jmp
negl
push
push
imul
loope
je
loope
test
mov
lods
jbe
sub
int
pop
out
dec
cmpl
mov
jp
or
fst
int
jecxz
aad
inc
mov
xchg
jmp
adc
push
inc
mov
pop
ds
add
ss
jae
sub
mov
sub
roll
mov
mov
pop
mov
clc
lret
add
stos
dec
fcmovnbe
out
aaa
sub
int3
pop
sar
mov
cld
in
pop
jno
jbe
fisubrs
fbld
xchg
test
sysret
test
outsl
sub
pop
cld
es
pop
test
mov
pop
cltd
test
add
add
in
mov
mov
mov
mov
xlat
dec
dec
mov
aaa
lcall
xchg
mov
cmp
mov
mov
ret
lods
inc
adc
cmpsl
jo
mov
xchg
insb
clc
and
push
xchg
sub
mov
add
cmp
sbb
nop
in
sti
enter
mov
scas
and
aaa
xchg
inc
inc
and
inc
es
inc
dec
cwtl
xchg
mov
dec
insb
insb
inc
xchg
jecxz
movsl
adc
mov
imul
fs
loopne
shlb
add
add
in
cltd
call
sbbb
mov
call
xchg
mov
mov
test
xor
sub
jo
in
pop
cmp
dec
xchg
out
ss
mov
xor
pop
je
mov
cmp
inc
aad
lods
xor
fisttpl
out
sub
cli
ljmp
cltd
rcll
mov
lret
imul
add
add
into
xchg
fadds
cld
js
int3
xor
cmp
popa
add
xor
mov
popf
iretw
pop
faddp
jg
sbb
add
mov
dec
test
sub
hlt
inc
xchg
loopne
stc
push
mov
jno
xor
and
into
xor
mov
movsb
out
fsts
sub
xor
out
in
inc
pop
test
pop
scas
mov
xchg
ror
sarl
sbb
ja
js
bt
pop
test
adc
scas
push
pop
adc
daa
lcall
add
mov
outsb
in
jl
sub
ljmp
js
stc
mov
jp
pop
loope
inc
jb
fiaddl
push
jo
clc
push
push
sbb
mov
loope
ljmp
test
imul
push
mov
imul
ret
mov
push
mov
and
and
mov
mov
stos
mov
mov
mov
inc
int3
inc
sub
imul
cmpsb
outsl
mov
dec
pop
aam
aad
adc
outsb
fistpl
dec
xchg
pop
and
push
sarl
es
cmp
stc
ficoms
adc
or
add
addr16
addr16
push
push
hlt
ja
pop
shll
add
aaa
movsb
or
mov
popa
roll
sub
test
inc
dec
mov
xchg
inc
jle
sbb
push
add
cmp
shrl
mov
and
out
cs
push
pop
adc
cmp
orb
enter
ss
pop
fdivl
repnz
into
sbb
push
mov
lahf
fcomi
sub
stc
xchg
aam
cmp
inc
add
loop
popa
dec
fucomp
in
mov
jle
rcll
in
lds
xor
mov
lds
sbb
ret
push
push
mov
mov
or
inc
mov
insl
cmp
gs
xor
aaa
inc
jle
in
cli
iret
fdivrp
rcll
pop
ljmp
jns
lcall
repnz
mov
repz
mov
ret
ja
pop
in
sub
mov
pop
pushf
pop
mov
pop
popf
and
adc
inc
imul
fs
mov
jle
lret
or
push
nop
mov
dec
add
in
mov
aaa
dec
and
lcall
cli
in
jbe
lahf
sbb
mov
outsb
test
xchg
sti
xchg
or
push
test
test
aaa
jle
fcom
loopne
ficomps
jbe
sub
scas
addl
xchg
mov
nop
out
xlat
or
das
push
mov
push
lea
sbb
cmp
ret
outsl
mov
jle
push
adc
test
jb
cld
nop
push
adc
pop
xor
mov
int
out
subl
xor
dec
ljmp
into
mov
in
or
imul
inc
lret
mov
fs
test
test
pop
sbb
shll
les
jle
ja
pop
sbb
mov
insl
adc
lahf
xlat
out
adc
in
push
insb
xchg
adc
fisubs
inc
jae
dec
xor
cmc
lcall
xchg
xor
andl
or
daa
cli
sti
into
or
movsl
test
stos
adc
std
insl
inc
leave
mov
or
and
in
es
pop
scas
xor
mov
push
sti
sbb
arpl
loope
inc
sbb
cmp
pop
and
enter
shr
mov
lds
rorb
std
int3
dec
jo
int
xor
out
xor
aaa
aas
jb
test
cmp
mov
adcb
out
icebp
rcr
mov
mov
movsb
inc
mov
adc
or
jb
sub
dec
pop
xor
xchg
popa
xor
add
mov
sbb
xor
pop
fwait
xor
push
lods
setb
xchg
mov
movsl
arpl
cmc
push
or
imul
pop
mov
cltd
push
lcall
xor
loopne
push
fsts
ja
dec
adc
aam
and
fadds
wrmsr
xchg
inc
movsb
dec
fwait
xor
jecxz
test
js
and
or
xchg
std
adcl
mov
jmp
insb
or
pushf
add
inc
js
stos
and
inc
decl
jno
fldenv
fwait
cmp
mov
or
lock
or
dec
in
lock
bnd
or
in
jg
aas
rcll
xchg
insb
jmp
fidivrl
out
push
lea
aad
or
mov
and
push
pop
mov
loope
shrl
sub
in
lret
repz
mov
daa
orl
shlb
fs
add
cmpsb
mov
bound
imulb
push
pop
lods
xor
xor
xchg
mov
or
adc
aam
xor
in
push
clc
push
scas
and
cmpsb
inc
mov
out
jle
sub
sbbl
mov
out
inc
lret
aas
lret
lahf
inc
lcall
inc
jmp
mov
or
stos
pushf
adcl
out
pop
mov
cmpsb
push
int
out
pop
xchg
addr16
pop
and
inc
out
sahf
out
mov
icebp
outsb
jbe
filds
imul
cmp
lret
push
lods
mov
jo
adc
imul
data16
jb
jl
addb
test
lods
sbb
mov
jge
sbb
cs
stos
cwtl
xlat
test
dec
inc
mov
imulb
xchg
mov
or
xor
and
or
call
fs
das
test
cltd
test
data16
sbb
dec
and
mov
cltd
ljmpw
testb
addr16
fisubrl
mov
sbb
shr
notl
jo
mov
subb
ds
pop
and
mov
orl
mov
pop
pop
mov
and
lret
jecxz
cwtl
pushw
sbbb
mov
adc
out
ret
inc
divl
cmp
jns
cmp
mov
call
sahf
add
sti
mov
xor
addr16
in
fistps
scas
bound
fisubrs
test
sub
shlb
or
inc
jnp
and
sti
pop
aad
aas
xorb
xlat
icebp
sbb
push
sar
xchg
loopne
pop
push
test
cmp
mov
jo
adc
andb
pop
adc
ljmp
inc
xor
mov
aas
insl
loope
push
push
icebp
std
mov
mov
cmp
lods
xchg
dec
sub
aam
rcrl
stos
cmpsb
rcr
sahf
xor
cmp
push
jae
scas
mov
rcrb
or
testb
sbb
scas
notb
push
aas
push
inc
dec
icebp
inc
enter
inc
xor
fnsave
mov
dec
pop
rorl
mov
xlat
orb
fisubrl
add
cmpsb
loopne
mov
mov
mov
test
ror
mov
sarb
cli
add
aas
dec
push
test
dec
add
mov
mov
out
inc
movsl
lea
xlat
inc
enter
hlt
sbb
dec
xor
cmpsb
inc
ds
cltd
scas
mov
bound
daa
repnz
dec
mov
fnstsw
jns
push
ret
arpl
in
fldcw
shrb
adc
outsb
xor
aaa
adc
mov
addr16
or
pop
push
shr
mov
push
mov
rorb
sbb
in
push
xor
negb
jnp
test
cs
or
mov
ffree
push
inc
xor
lock
daa
or
lcallw
pop
call
aas
adc
and
and
pop
xor
pop
jns,pn
mov
gs
stc
cmp
outsl
loopne
imul
xchg
outsl
jp
mov
and
push
in
push
push
aaa
sbb
loop
adc
subl
mov
jns
mov
adc
negl
add
roll
js
ret
adc
dec
iret
jg
jle
mov
mov
sub
lods
shll
cmp
adc
adc
xchg
rcrb
popf
sbb
xlat
in
fdivp
nopl
jbe
add
inc
mov
add
jo
sub
cltd
lret
aam
or
push
into
pusha
ja
push
xchg
sub
out
ss
pop
jo
jp
cs
stc
fmuls
fsubrl
xchg
xchg
mov
mov
pop
fbld
dec
xlat
cs
js
cmpsb
pop
dec
add
sub
cld
sub
shl
add
inc
lods
jo
inc
out
ret
jne
push
cmp
cmp
outsb
mov
pop
pop
outsl
jne
and
sar
shlb
test
call
lret
ja
andl
push
scas
add
mov
mov
pop
movb
lock
pop
iret
icebp
mov
test
cmpsb
insl
lods
int
fwait
mov
sub
cltd
adc
inc
inc
push
cmp
jp
ss
js
adc
cld
dec
jb
mov
rcll
scas
popa
xor
push
sub
mov
gs
sbb
dec
push
sub
test
pop
cwtl
lret
call
ret
leave
dec
dec
arpl
mov
rolb
xchg
das
cmp
push
mov
insl
jg
or
mov
ds
les
ljmp
popf
cmp
xchg
repz
mov
icebp
xor
out
dec
or
lahf
mov
inc
or
pop
jbe
ja
mov
cs
jnp
pusha
daa
mov
inc
cltd
xlat
data16
push
dec
mov
stos
dec
inc
sub
dec
ss
iret
imul
pop
xlat
jg
sub
and
sbb
mov
or
mov
sahf
or
sbb
pop
xchg
xor
aaa
enter
xor
push
rorl
popf
sub
mov
movsl
inc
stos
push
inc
movsb
mov
push
mov
jmp
xor
mov
out
dec
out
movsb
shll
mov
hlt
mov
lcall
jo
mov
js
pop
ljmp
push
sti
xor
test
push
movsb
inc
gs
cmp
xchg
mov
stos
stc
pop
cwtl
bound
popa
pop
lds
jne
dec
lcall
das
std
mov
xchg
and
xchg
fimuls
sahf
lahf
shlb
add
xor
movsbl
jo
sbb
in
xlat
clc
sbb
xor
fldl
push
les
dec
inc
dec
sarb
iret
stos
daa
cld
mov
adc
mov
js
xchg
lods
fisubrs
lahf
in
xorps
in
movsl
lods
cltd
inc
jge
mov
mov
add
jb
lock
jl
insl
fld
push
repz
fcompl
shl
outsb
mov
std
cltd
cmp
movsl
sarl
aam
pop
fmull
rclb
mov
cmp
ds
jl
fwait
jb
push
xor
mov
pop
mov
push
testl
inc
cld
mov
mov
jecxz
mov
xor
or
mov
inc
ss
jne
pop
aam
cs
and
ret
dec
rcr
arpl
cmp
mov
nop
dec
cmp
in
sub
rcrl
je
cs
pop
daa
adc
cmp
pop
xorl
enter
retw
clc
in
pop
sti
stos
jb
inc
push
mov
pop
loope
sbb
dec
jae
cltd
xchg
ljmp
stos
push
fadds
pop
sbbl
sbbb
mov
pop
int
aas
mov
xchg
jno
loopne
lock
push
xchg
mov
push
movsb
sbb
xchg
xchg
out
fnsave
addr16
push
inc
pop
ja
pop
xchg
mov
push
add
enter
das
es
and
cmpl
mov
cmp
pushl
mov
jle
mov
push
int3
mov
stc
shrb
xchg
dec
xchg
aas
sbb
add
cmp
lret
scas
sbb
cld
jle
jns
roll
ucomiss
cmp
and
sbb
inc
cmpsl
push
lea
push
jo
mov
pop
fsubrl
dec
imul
ljmp
test
in
push
mov
test
call
pop
push
xchg
imul
test
mov
xchg
gs
negl
sbb
pusha
cli
or
in
hlt
ljmp
cmpl
dec
pop
test
repnz
shlb
les
sbb
mov
lea
pop
and
adc
leave
cltd
push
mov
les
lcall
jmp
mov
sbb
ds
and
xchg
out
sub
inc
jbe
mov
mov
cmp
stos
cmp
add
out
mov
rorl
in
divb
and
dec
sub
cmpb
imul
loopne
subl
pop
popa
adcl
negl
cmp
adc
cmpsl
loopne
lcall
jbe
mov
pushf
jg
push
jmp
ret
jmp
enter
mov
push
les
nop
decl
jae
idiv
in
sbb
daa
push
sahf
mov
jmp
dec
mov
push
mov
pop
jge
xor
aam
xor
xchg
loop
and
jge
pop
mov
or
xchg
sbb
ret
inc
pop
or
adc
sbb
pop
data16
popaw
ljmp
cltd
push
aam
aam
in
and
push
dec
addl
roll
mov
lahf
xchg
loope
clc
mov
jne
test
push
shrb
xchg
dec
fbld
outsb
jmp
fstpl
ficoml
das
cmp
xor
xchg
pushl
mov
add
cs
movsl
in
pusha
loopne
outsl
xchg
or
scas
lret
mov
loop
notb
fstl
inc
push
fwait
jo
mov
add
mov
pop
jle
ljmp
cld
push
push
ds
mov
mov
cmpsb
adc
and
mov
xchg
jp
or
hlt
mov
adc
dec
movsb
or
lods
push
call
fwait
xor
fdivr
xchg
xor
fsts
rcll
jnp
fidivl
in
subb
data16
imul
jle
icebp
outsb
out
hlt
mov
pushl
add
xchg
sub
push
insb
and
xchg
out
sub
mov
adcl
lret
jp
jo
or
pop
jl
or
popf
jnp
and
mov
mov
mov
fiaddl
dec
or
jp
shlb
sub
mov
or
lcall
xchg
fdivrl
inc
in
mov
add
jo
mov
mov
mov
push
je
inc
add
jo
jns
imul
lock
clc
xchg
ret
and
xchg
ljmp
frstor
jmp
and
pop
adc
daa
out
and
push
mov
adc
mov
inc
leave
lcall
or
rcll
mov
test
pop
pop
inc
cmp
sbb
push
cs
fdivs
inc
jp
dec
mov
or
fadd
xchg
sbb
scas
sub
sbb
push
imul
int3
int3
test
mov
dec
mov
rol
dec
sti
rorl
mov
push
pop
lods
jp
ret
push
dec
inc
and
lods
mov
mov
mov
nop
out
stos
push
mov
mov
movsl
ret
out
adc
out
ret
lds
ljmp
add
push
loop
push
mov
out
push
lahf
mov
and
cmpsl
xor
pusha
sub
mov
fisubrs
lret
push
clc
cli
push
pop
pop
rcr
in
es
repz
loop
jle
mul
pop
ja
inc
dec
cmp
nop
pop
into
outsl
into
xchg
xchg
sub
dec
orb
lret
mov
or
push
imul
xchg
cmp
test
adc
push
movsb
gs
out
cld
xchg
push
je
push
enter
inc
fidivrs
ja,pt
mov
or
sahf
repz
clc
mov
xchg
jo
jnp
inc
outsl
inc
sti
push
mov
mov
icebp
jecxz
push
push
inc
insl
or
pop
cmp
jno
out
mov
fdivs
cli
jb
outsl
enter
sbb
add
jecxz
aad
jge
outsb
inc
ss
mov
push
add
aad
or
pop
pop
cmp
cmpsl
mov
cmc
mov
push
mov
aad
in
cmc
xor
pop
or
pop
in
sbbl
fs
add
jne
in
stos
push
cmpsl
and
sub
lret
jg
ds
pop
dec
popa
movsl
addr16
jno
lock
imul
adc
int3
lock
inc
imul
ret
movsl
xor
mov
xchg
scas
push
pushl
pushf
aad
xlat
push
dec
scas
adc
mov
push
mov
add
pushf
pop
mov
push
or
div
lret
add
aad
lods
testl
out
pusha
add
mov
push
ja
cmp
fsubr
xchg
or
jle
jbe
add
jmp
cmpsl
dec
mov
inc
jl
fs
insl
jle
dec
lahf
shrb
rorb
rorl
rol
pop
dec
insl
push
pop
jmp
shrb
das
insl
inc
dec
ja
sub
xchg
mov
adc
rcr
jnp
mov
jecxz
mov
stos
sbb
xchg
and
cli
xchg
fwait
cmp
mov
mov
sahf
cmc
mov
mov
mov
loopne
push
inc
or
test
lods
imul
pushf
pop
and
pop
fmull
jb
sub
int3
not
loope
jb
shr
not
repz
push
popa
sub
xorb
jmp
cmp
pop
cmp
aaa
and
sets
pop
insb
mov
mov
xchg
inc
daa
jmp
loopne
pop
push
push
stos
movsb
and
negl
and
aaa
jns
push
inc
sarl
dec
sbb
cld
jb
xorl
cmp
repz
xor
cmp
cmp
xchg
xor
movsl
mov
mov
sbb
insl
fcompl
adc
mov
lock
out
fistps
mov
cmp
test
xchg
sbb
idiv
testl
xchg
dec
repz
xchg
xchg
dec
add
push
push
and
fidivrl
or
jae
imul
jo
pushf
popf
shlb
lret
cltd
pop
clc
push
popa
pusha
xchg
mov
inc
dec
sub
pop
add
mov
imul
pop
fisubrl
fistpl
mov
insb
ret
jo
inc
mov
and
cld
subb
xchg
mov
stc
push
in
popa
lret
fs
aaa
cmp
sub
inc
mov
enter
pop
pop
and
mov
in
sbb
or
and
add
nop
add
xor
pop
push
stos
jg
scas
leave
fnstenv
pop
das
mov
or
xchg
pop
xchg
imul
lahf
jnp
mov
movsb
dec
icebp
cmp
cmp
por
into
hlt
push
jne
sub
je
adc
pop
cltd
fcomps
js
int3
dec
rol
mov
push
xchg
inc
mov
xchg
mov
sbbb
mov
and
xchg
mov
sarl
mov
jmp
sti
loope
mov
mov
sbb
jge
insb
xchg
enter
xor
lret
repz
jbe
adc
movsl
sbb
mov
or
std
or
or
sbb
gs
jo
les
inc
dec
lods
out
jmp
int
xchg
daa
lds
popa
test
inc
decl
test
mov
sarw
mov
pop
mov
ljmp
sbb
aad
pushf
jmp
inc
rolb
mov
xor
push
iret
xchg
out
fcmovbe
pop
ss
and
mov
push
loope
pop
sbb
inc
push
bswap
bound
shrb
or
mov
clc
ret
ds
dec
add
dec
or
mov
and
enter
mov
lock
aad
and
ds
mov
stos
out
fsubl
cmc
lret
stos
jae
sbb
movups
push
movsl
adc
cmp
mov
pop
dec
ret
lret
add
push
daa
add
mov
test
loope
inc
gs
pop
inc
xchg
aas
dec
loopne
daa
cld
xchg
and
call
call
push
les
popa
jo
fs
sbb
mov
es
cltd
dec
scas
jae
popf
sbb
jns
adc
loope
mov
sub
pop
cli
je
and
add
int
adc
jle
adc
dec
test
test
outsb
gs
pop
bnd
mov
jmp
jnp
cmp
pop
mov
cli
ja
push
sbb
or
push
and
fisubrl
push
lcall
sbb
push
add
push
addr16
pusha
dec
adc
test
in
adc
xchg
repz
lret
push
adc
fcmovnu
push
mov
jno
fmull
aad
dec
mov
or
shll
pop
bound
js
add
pop
pop
sub
xchg
sub
dec
or
dec
and
jl
daa
mov
outsl
add
sbb
pop
fimull
aaa
xor
fisttps
add
lods
xlat
adc
inc
imul
sub
fisubl
jo
cli
mov
lock
ret
rcr
mov
jp
push
mov
stos
movsl
jno
icebp
xchg
xor
mov
dec
push
mov
xchg
dec
mov
push
dec
mov
insb
pushf
mov
jbe
sub
add
mov
clc
mov
add
icebp
pushf
add
pop
lods
adc
jge
sub
fildl
popa
jecxz
fdivrs
and
rcl
add
outsl
lea
push
mov
mov
cwtl
lods
or
xor
push
jb
jmp
and
mov
cmp
cli
sahf
xorb
xchg
mov
repz
out
leave
rcrb
cmpb
adcb
add
nop
ret
inc
xorb
repz
in
pop
lods
inc
in
rclb
outsb
subb
call
fadds
jge
daa
lea
push
shrl
insl
adc
pop
pxor
loopne
rcl
push
sbb
and
jbe
pop
imul
sbb
loop
sub
inc
lods
lcall
xchg
inc
icebp
sahf
and
pop
inc
sbb
nop
stos
mov
xchg
cli
and
shl
sti
data16
je
daa
fnstcw
incb
and
mov
les
mov
into
call
push
jmp
add
dec
adc
add
lock
div
sub
call
mov
cld
cmpxchg
or
aaa
pop
movb
shrb
loope
mov
sub
ret
shrl
loop
sahf
std
addb
enter
and
xorl
jg
jb
repz
pop
jae
push
fsts
xchg
cwtl
lahf
jns
idivl
aas
mov
les
stos
fmull
pop
test
inc
pusha
jne
sub
dec
sbb
pop
add
add
sub
or
pushf
mov
sbb
test
jle
test
pop
arpl
pop
insb
add
daa
les
scas
retw
in
adc
dec
scas
in
inc
ja
add
inc
and
in
rorl
xchg
gs
push
stc
adc
inc
popf
dec
inc
xor
or
es
mov
ljmp
out
or
imul
adc
mov
mov
fstl
shr
mov
mov
arpl
scas
lcall
push
push
fidivs
mov
inc
mov
cli
aaa
lods
dec
icebp
int3
in
repnz
xor
add
jle
fistpl
mov
push
push
mov
inc
push
inc
ror
push
pop
lahf
mov
ja
daa
jmp
ljmp
gs
and
dec
dec
je
popf
negl
cmp
mov
pushf
sbb
mov
jecxz
xchg
cltd
jns
push
mov
or
hlt
cmp
xor
add
push
push
loop
es
mov
inc
daa
frstor
mov
out
jo,pn
aad
ret
cwtl
sarb
enter
cli
mov
mov
dec
icebp
loopne
divb
pop
in
mov
jge
fisubrl
in
jno
insl
fwait
push
adc
or
ds
rorl
bound
pop
mov
push
ja
jb
mov
pop
and
ja
je
adc
jecxz
mov
sbb
push
nop
push
cmp
mov
mov
repz
fldenv
push
mov
xchg
xlat
cmp
jns
das
inc
sub
cmpsb
jb
or
xchg
lcall
inc
pop
test
cmp
xchg
mov
scas
adc
jb
sti
mov
stos
ret
jne
mov
notl
outsl
xchg
inc
in
xchg
and
pop
cmp
insb
add
movsl
dec
mov
and
call
xchg
and
lcall
add
insb
sub
add
subb
mov
or
popf
add
cmp
imul
mov
sbb
ret
arpl
jbe
loopne
jno
xchg
enter
sti
and
push
iret
pslld
xlat
icebp
je
hlt
fstps
cmc
sub
inc
test
xor
adc
imul
add
cmp
or
lahf
and
lods
mov
lods
leave
jp
jle
mov
jae
sti
icebp
or
xor
mov
pop
pop
outsb
test
rol
add
sarl
lods
xchg
jl
push
xchg
jae
sar
mov
adc
leave
mov
hlt
mov
inc
push
gs
ss
adc
add
xchg
js
or
inc
aas
icebp
sbb
mov
das
sbb
shl
inc
clc
sbb
pop
adc
pop
sub
xchg
ss
divl
push
outsb
xchg
add
add
in
pushl
sti
lret
arpl
pop
xor
and
mov
out
aam
inc
arpl
in
cmp
sub
pushf
inc
push
inc
and
jbe
cmp
testl
inc
insb
fstpt
ljmp
orb
dec
iret
data16
icebp
pop
into
mov
mov
dec
jmp
and
popf
and
ret
fwait
ret
xchg
out
push
xor
nop
dec
leave
jns,pn
mov
pusha
arpl
pop
cwtl
jo
push
dec
cs
lret
notl
insl
dec
gs
xchg
jae
daa
jmp
ja
xor
xchg
sub
xchg
push
and
inc
inc
jl
aas
test
lods
push
adc
cmp
adc
movsb
or
mov
scas
push
push
or
xchg
mov
cmp
and
xor
cmc
add
sub
lods
push
push
mov
ret
ds
decb
lahf
xorl
out
dec
and
data16
add
andb
fmuls
gs
push
xchg
xchg
popa
mov
cmp
xchg
testl
sub
mov
addr16
add
enter
jge
std
cmp
and
pop
lcall
or
sbb
iret
sub
fsts
and
and
mov
fs
ret
dec
mov
fnstsw
std
jl
jne
mov
out
bound
lock
push
and
stos
cs
and
daa
in
popa
and
fildl
test
inc
cmc
ret
mov
sbb
xchg
repz
out
jo
jle
cmp
clc
xchg
xlat
jae
xchg
shl
push
xor
test
insl
mov
bound
xlat
push
stos
popa
jb
rcll
add
dec
je
xchg
int3
push
decb
mov
and
imul
outsl
mov
or
sbb
mov
add
and
loope
stos
stos
dec
into
les
cli
sbb
mov
fisttpl
rorb
ret
test
inc
or
sti
xor
cmc
testl
inc
loope
xor
cmp
je
add
mov
add
jp
xchg
mov
push
fcmove
imul
aaa
mov
cmp
je
dec
jle
pop
inc
in
enter
mov
inc
sarl
test
sbb
dec
loop
mov
pop
imulb
inc
pusha
jae
aaa
lahf
pop
outsl
das
mov
ret
mov
addr16
repz
loope
mov
test
rcll
cmp
loopne
jp
cmpsb
cmp
gs
pop
into
daa
push
push
and
leave
sarb
ss
or
loop
jne
or
popa
jmp
iretw
sti
or
mov
aad
data16
pop
jnp
adc
test
lods
jno
loop
adc
aam
aad
shll
mov
dec
repnz
sub
jge
mov
sar
cmp
mov
icebp
inc
push
add
mov
sbb
das
pop
lcall
sbb
in
xchg
stc
dec
push
gs
xor
jno
mov
sbb
add
lds
fistpll
jg
jae
sub
repz
mov
cmpsl
arpl
adc
jmp
sarb
pop
shrl
xchg
mov
sbb
aad
fstps
popa
call
aaa
and
push
add
adc
mov
xchg
and
ds
mov
inc
mov
stos
sub
test
push
push
and
jge
pushf
add
insb
mov
pusha
inc
lret
inc
fcomp
pop
int3
loope
fnsave
hlt
jns
imul
mov
mov
movsb
insl
cs
mov
pop
push
sbb
mov
cmp
dec
loope
dec
add
lea
std
xchg
into
in
xchg
sub
fistps
out
xor
and
jo
rol
lcall
xchg
mov
cmpsb
add
in
insb
jle
lea
movsl
xchg
pop
sbb
inc
push
inc
jns
ds
inc
mov
jno
in
jo
jecxz
pop
shll
mov
mov
idivb
add
lods
dec
repz
pop
mov
xchg
mov
in
ljmp
pop
push
imull
test
xor
shll
or
imul
scas
test
int3
lret
and
sbb
addl
jle
cli
push
testl
imul
hlt
imul
in
lods
xor
jg
lahf
add
lret
adc
rcr
fdivl
push
xor
xchg
mov
adc
imul
jnp
xor
rol
xchg
imul
stos
sub
in
and
fisubs
les
call
mov
lahf
adc
or
fimuls
dec
mov
cmp
cli
enter
addr16
dec
mov
and
jae
clc
or
divl
and
and
wbinvd
push
fisubrl
pop
mov
out
cmp
pop
and
es
movsb
jg
scas
iret
mov
lock
pushl
and
and
gs
cmpsl
mov
jo
jl
push
out
jns
and
js
leave
add
pop
arpl
cs
gs
mov
dec
daa
xchg
cmp
push
lret
pop
add
sub
xchg
sti
sub
adc
add
mov
mov
mov
pop
dec
mov
mov
rcr
loop
std
or
into
cmp
lahf
std
sahf
movsl
mov
sub
enter
fisubs
ljmp
movsb
shrl
inc
ficoml
inc
xchg
xor
fisubl
data16
push
lds
bound
in
scas
cmc
test
push
pushf
xor
hlt
jns
divb
stc
xor
ja
in
push
lahf
dec
cmpsl
pop
nop
imul
sbb
outsl
xchg
out
cmp
fdivrl
negl
mov
push
xchg
xorl
lods
daa
mov
mov
mov
ss
ficomps
jbe
ja
std
inc
shl
shr
repnz
addl
ret
les
call
int
leave
leave
lock
out
daa
lods
outsl
mov
loope
stos
dec
pop
fnstcw
sbb
std
leave
jo
pop
out
or
das
or
test
push
jo
in
cmp
xchg
dec
test
jecxz
mov
inc
cmp
das
push
test
adc
and
imul
icebp
in
ror
mov
in
fsub
push
lods
notb
xchg
fmuls
stc
js
daa
cmpsb
cltd
push
sub
nop
or
and
inc
add
sahf
pushf
mov
int3
inc
popf
lcall
lea
shrl
jp
or
xchg
fwait
or
test
push
nop
add
out
scas
xor
outsb
leave
push
repz
cli
call
in
sub
and
push
mov
push
adc
mov
sbb
push
push
sbb
or
cmpsb
sub
push
into
or
mov
lods
mov
inc
not
les
push
mov
fistl
mov
andl
js
sub
bnd
and
arpl
jbe
adc
pop
mov
inc
cmpsl
in
fwait
and
insl
in
xchg
xorl
dec
frstor
jg
les
cli
adc
xchg
push
mov
loope
dec
and
pop
mov
movsl
xchg
aaa
mov
xor
xor
aaa
jns
sbb
in
aad
xlat
mov
cmc
jg
inc
ja
push
divb
fld
jp
aad
fidivrl
xor
pop
push
xor
addr16
pop
cmp
fwait
jg
xchg
lods
adc
test
adc
dec
mov
jmp
sbb
fidivrl
xchg
cs
jbe
lods
cmp
imul
mov
lock
push
out
adc
jecxz
add
xor
or
inc
outsl
pop
inc
lods
in
popa
lcall
push
push
mov
daa
pusha
ljmp
push
popf
adc
in
aam
mov
test
dec
movsl
sub
jo
sbb
dec
push
xor
mov
mov
push
repz
or
jp
sub
xor
insb
bound
mov
or
push
aaa
fidivl
loopne
pusha
arpl
adc
dec
std
cwtl
sub
sub
push
mov
lock
mov
mov
or
sub
dec
pusha
outsb
bound
loopne
dec
loop
insl
ja
xchg
xor
sub
clc
xor
imul
ret
scas
bound
fwait
enter
pushf
xlat
out
xor
jae
out
test
mov
xor
lahf
push
inc
in
stos
push
cmp
cld
jne
cmp
lods
and
mov
cld
push
ds
adc
fwait
ret
push
mov
jmp
repnz
enter
and
fisubrs
movsl
mov
jb
arpl
pop
or
daa
sub
push
adc
mov
pop
and
push
adc
adc
and
add
push
clc
mov
imul
clc
gs
nop
insl
fistpll
add
adc
std
push
mov
lret
call
sti
inc
fistpll
mov
repnz
pop
xchg
neg
imul
test
out
testb
divl
sbb
les
aad
pop
fwait
movsl
dec
outsb
xchg
in
mov
xchg
in
sub
xor
pop
enter
cli
xor
clc
rcr
clc
xor
mov
jo
or
push
add
mov
mov
mov
adc
loop
lods
adc
lret
jp
xor
xor
cwtl
xchg
mov
push
rcr
bound
adc
jg
and
fs
jl
pop
lods
pop
popf
add
inc
stc
ret
pop
ljmp
scas
xchg
gs
xor
mov
add
jne
lds
lahf
xor
iret
lea
inc
inc
fistps
push
fucomip
sahf
jmp
scas
jb
roll
mov
jo
sub
sbb
pop
mov
push
cmp
and
xchg
adc
stos
mov
stc
mov
std
stos
xchg
insl
bound
outsl
cwtl
popf
ljmp
inc
jp
jge
adc
fidivs
ret
pop
jl
xchg
mov
scas
lods
pop
add
nop
stc
shr
in
dec
push
arpl
das
aam
lods
pop
pop
inc
push
cmpl
dec
jae
ds
inc
adc
std
push
sbb
xor
sub
fwait
push
fidivrs
adc
int
jecxz
dec
cli
pop
jle
mov
xor
out
divb
mov
and
pop
mov
mov
mov
mov
or
dec
cmp
dec
es
mov
push
add
add
cmp
dec
jno
hlt
jo
push
subb
aam
enter
mov
adc
repnz
sub
fst
push
out
int
inc
mov
test
xor
fs
cmpb
push
outsl
stc
jle
add
jno
mov
int
pop
jbe
mov
mov
jns
dec
ficoml
movsl
xchg
stos
loop
cmp
xor
and
insl
add
pop
and
inc
std
mov
fdivl
push
mov
jecxz
xor
add
adc
mov
mov
lods
test
xor
out
lahf
pop
push
sar
data16
or
add
mov
lahf
rolb
mov
bound
sbb
pop
dec
dec
push
lahf
xchg
cmpsl
dec
std
hlt
xchg
ja
dec
mov
in
sbb
add
cmp
imul
xor
popa
push
call
add
loope
mov
pop
jmp
push
daa
jno
and
cmp
mov
shlb
repz
sub
xchg
sub
mov
stos
mov
xchg
testl
or
inc
xchg
push
sbb
cltd
push
mov
in
fwait
sbb
adc
sti
xor
xor
lods
sub
sarb
cmp
jp
shll
adc
lret
aaa
adc
jae
mov
xchg
add
testb
leave
in
pop
lret
mov
inc
adc
xor
jne
sahf
mov
push
dec
lret
dec
lock
mulb
fcoml
repnz
sub
mov
xchg
cs
mov
jp
dec
xchg
adc
std
enter
jo
jne
clc
jle
mov
insb
ja
mov
es
sub
pop
jb
sbb
repnz
fists
pop
jne
fidivrl
rol
inc
test
int
xchg
fadds
ja
push
and
and
and
or
cmp
push
out
mov
sbb
xchg
mov
jnp
lcall
loopne
ljmp
jecxz
push
and
popf
insl
mov
cltd
mov
fmull
popa
insb
xchg
inc
dec
fcomps
test
leave
std
dec
sahf
push
movsl
movb
push
xor
shl
imul
push
stos
dec
out
sub
fistpll
in
jge
mov
mov
je
cmpb
or
fs
pushf
std
stos
lds
jns
lods
mov
jle
sbb
mov
imul
cs
fsubl
cmp
stos
inc
or
jnp
mov
adc
dec
shll
jne
xchg
out
pusha
push
and
jb
jns
inc
js
loopne
push
sub
ds
xor
popf
int3
pusha
add
stc
add
dec
imul
adc
fiaddl
xlat
leave
loop
pop
adc
jnp
lahf
add
pop
addr16
sbbb
fbld
or
inc
daa
out
fwait
outsl
lods
loop
mov
jecxz
gs
aam
push
mov
mov
xchg
popa
cmpsl
cmp
andl
arpl
cmp
mov
rolb
inc
jge
loope
xchg
mov
je
adc
sahf
fcmove
cmp
cmc
dec
xchg
xchg
add
adc
rep
sbb
push
dec
adc
xor
adc
fbld
movsl
pop
mov
add
mov
out
pop
int3
adc
pop
outsb
cmpsb
pop
pop
out
jge
or
int3
aaa
js
in
js
sarb
ret
repnz
js
push
xchg
mov
xchg
inc
ret
mov
cmc
or
mov
fwait
pop
jns
lds
imull
movzwl
mov
inc
mov
xchg
aad
test
not
in
sub
imul
mov
push
lcall
sub
ds
dec
jnp
xor
xlat
arpl
and
stos
xchg
or
std
pop
lret
fcomps
inc
mov
xchg
mov
out
loop
jo
jecxz
mov
in
jecxz
mov
arpl
mov
loopne
pop
int
sbb
xor
push
xchg
popl
in
pop
pop
mov
inc
movsb
push
dec
pusha
stos
jmp
ds
rclb
mov
push
cmpsb
les
inc
mov
or
mov
push
lods
mov
test
in
pop
sahf
jo,pn
sahf
jno
mov
sub
lret
mull
mov
lahf
adc
bound
aad
ds
sbb
or
in
and
jle
xchg
jae
lock
aam
dec
push
dec
aad
or
outsl
dec
lds
xor
inc
lock
nop
aad
cmc
pmulhuw
mull
sub
jns
or
nop
iret
lahf
add
sbb
sub
into
loop
push
stos
stos
xchg
sbb
jl
loopne
shrl
lcall
adc
add
cmp
dec
or
xor
mov
cmc
sub
dec
mov
nop
mov
lret
or
cmp
jnp
sbb
dec
mov
into
push
popa
and
xlat
jmp
xor
arpl
in
inc
xor
sub
xor
cltd
stos
enter
push
mov
mov
out
mov
mov
pop
or
jl
add
mov
fidivl
pop
sbb
pop
addr16
ficompl
jle
int
int
jg
sbb
xchg
jl
das
cmp
or
adc
cmp
push
xchg
addr16
subl
dec
sub
push
adc
push
xor
xchg
push
mov
mov
xchg
sub
out
push
jmp
popa
ss
icebp
insl
sbb
xchg
mov
mov
sbb
sub
mov
lcall
dec
xor
loope
mov
push
addr16
test
shlb
mov
int3
in
shlb
add
xchg
lods
xchg
insb
mov
cmp
mov
mov
xlat
add
sub
loopne
cmp
push
mov
test
jne
imul
pushf
mov
adcb
stc
out
test
iret
xchg
mov
pop
pop
inc
jmp
jle
aam
outsb
std
insb
mulb
mov
arpl
cmc
push
push
pushw
icebp
xor
fildll
cmc
leave
out
push
mov
lret
mov
cmp
addr16
jmp
sbb
out
pushf
cld
push
mov
out
enter
mov
or
lahf
or
push
jl
je
pop
outsl
mov
pop
push
dec
mov
mov
dec
out
or
clc
fnstenv
pop
test
cwtl
cs
out
inc
out
das
push
push
leave
jecxz
dec
lods
cmc
add
rolb
push
repnz
xchg
pop
jmp
rcrb
jecxz
mulb
repnz
jne
mov
cmpsb
fcmovb
sub
and
fsubs
sti
add
inc
pop
movsb
push
cld
inc
ret
push
dec
xchg
popl
sbb
mov
xlat
sub
xchg
cmp
jb
mov
mov
ror
push
or
jmp
push
xor
idivb
mov
in
shll
int3
add
inc
sahf
pop
psrlq
jge
cmpsl
cmp
xchg
addl
sti
cmp
call
push
sbb
cmp
loop
xlat
lcall
sub
loopne
ud0
andl
std
push
xchg
pop
push
insb
jb
add
call
mov
adc
push
outsl
sub
mov
sub
cmp
sarb
fdivrl
into
dec
test
inc
lcall
mov
xchg
sbb
in
sahf
or
shrb
mov
xor
add
ret
mov
sub
cmp
xor
enter
and
and
push
sub
shll
pop
add
jg
jl
jae
mov
insl
pusha
les
or
jo
mov
adc
xchg
daa
pop
fisubs
fcoms
fimull
jbe
jge
repz
add
adc
inc
mov
loopne
lock
ror
sbb
lahf
sub
mov
sub
lret
stos
int
pop
or
repz
jmp
push
mov
push
stos
jp
adc
call
roll
rorb
sarl
fsubrs
mov
mov
loopne
adc
add
jns
pop
pop
push
dec
add
jbe
out
jle
hlt
rcrl
mov
rcrb
pop
repz
jb
jns
push
sub
cmp
push
in
adc
xchg
and
cmc
cltd
inc
pop
and
rorb
rcrl
scas
mov
xor
mov
js
andb
lret
xchg
xor
ret
push
sub
cwtl
add
inc
push
insl
push
mov
fcmovnb
enter
mov
xchg
int3
jbe
mov
cmpsb
shrl
notb
scas
int3
xchg
inc
pop
dec
lahf
das
add
xchg
cmc
sbb
inc
xorb
push
sub
movsl
inc
insb
push
dec
outsl
cmp
lret
fdivrp
cvtps2pd
cmp
xchg
sub
mov
jns
jno
sti
leave
hlt
and
adc
pop
rclb
xor
lahf
xchg
jge
repz
outsl
jp
push
rcl
push
mov
aaa
mov
cmp
mov
xor
xor
icebp
shll
sbb
xchg
js
fnstcw
mov
jle
mov
add
jns
stc
repnz
pusha
inc
fstps
mov
js
int3
lret
inc
loop
dec
es
nop
inc
inc
sbb
sti
test
clc
in
out
push
inc
jo
ret
dec
mov
push
pop
test
dec
jnp
xchg
enter
or
clc
add
or
dec
pop
imul
cmpsl
fwait
es
arpl
fs
bound
xchg
es
jmp
leave
scas
or
pop
lods
pop
jne
inc
sbb
lods
inc
rorb
pusha
adcb
or
or
lock
pop
xor
daa
adc
cmpsb
rcrb
mov
dec
fbstp
out
push
cld
lds
add
shl
push
push
loope
scas
inc
push
fisttps
inc
lods
fistps
mov
cwtl
push
jmp
pop
jo
arpl
fidivrl
push
lods
sub
fdivl
cmpsb
data16
inc
cmpsl
sbb
mov
scas
xchg
jge
xor
inc
adcl
xlat
faddl
outsl
fdivr
outsb
fisubs
pop
mov
and
mov
xchg
rcll
adc
repnz
pop
add
das
negb
jne
rclb
mov
int
in
lret
out
push
jg
mov
mov
jnp
push
xchg
in
add
or
imul
pusha
dec
loop
out
jbe
lds
inc
sbb
mov
mov
outsl
push
and
outsl
mov
xchg
ja
xor
mov
xchg
cmp
push
sub
ljmp
or
xlat
pop
mov
imul
inc
ljmp
pop
xchg
and
ss
pop
loopne
lods
xor
pop
divl
jb
push
jae
adc
lret
aas
outsl
jecxz
xchg
sarl
sahf
inc
cmpsl
dec
mov
es
jp
adc
push
hlt
mov
das
das
mov
mov
sbb
push
notl
mov
cmp
imul
cmpsl
jo
xchg
rcr
jns
push
push
inc
das
push
insb
pop
scas
gs
adc
imul
mov
movsl
addr16
int3
cmpsb
outsb
add
dec
xor
jb
cmp
ljmp
shlb
sti
adc
aaa
xchg
adc
add
stos
sbb
repnz
lods
insl
test
xchg
xor
xchg
pop
out
outsl
mov
mov
pop
xchg
xchg
push
outsl
enter
or
fs
jne
adc
hlt
int
rol
mov
lock
ja
das
imull
inc
add
adc
cli
mov
lock
leave
into
dec
shrl
shlb
test
inc
mov
sub
imul
push
outsl
dec
int3
pop
push
inc
adc
cmp
loop
sbb
adc
jg
int3
push
enter
jmp
scas
clc
adc
das
xchg
mov
arpl
dec
mov
and
in
add
ds
pop
das
and
dec
arpl
push
push
xor
push
imul
adc
cmp
mov
mov
xlat
sbb
fs
mov
or
mov
popf
ret
mov
or
inc
xchg
pop
arpl
mul
xchg
xchg
mov
faddl
std
movsb
pop
sub
dec
mov
hlt
cwtl
adc
jnp
sub
out
adc
xlat
xchg
cmp
fwait
jno
fcoml
pushf
xor
inc
sub
sbbb
jmp
imul
lcall
sub
xchg
icebp
sbb
ljmp
test
fs
pop
int3
mov
xchg
lret
hlt
mov
mov
or
mov
adc
pop
movsb
xchg
push
dec
iret
les
pushf
sbb
enter
imul
pop
stc
cwtl
push
int3
xor
pop
mov
push
mov
in
cmp
into
mov
fcoml
cmc
sbb
andl
push
adc
cmc
adc
pop
inc
rorl
and
inc
inc
xor
movsl
in
sbb
insl
jbe
inc
je
mov
dec
adc
cs
mov
xchg
xor
jns
test
loop
jnp
add
xchg
adc
out
out
dec
cmp
jg
dec
and
rep
and
jae
fdivr
mov
hlt
push
mov
insb
mov
test
and
aam
fsubs
pop
lods
mov
push
call
testb
dec
in
mov
jb
shrb
ret
fwait
pop
pop
outsl
loopne
mov
jl
in
add
js
jmp
cwtl
push
test
or
mov
jp
mov
lods
push
scas
pop
xchg
xor
sbb
sub
outsb
fidivl
mov
sub
imul
or
loope
mov
cli
sub
insl
psadbw
jecxz
sbb
pop
popf
hlt
inc
dec
push
xor
xchg
sub
inc
mov
jns
ljmp
sbb
xor
scas
jns
hlt
cmp
adc
pop
mov
pop
or
icebp
or
jmp
pop
sub
outsb
mov
fcompl
pop
rcrl
add
in
push
ret
add
and
jecxz
test
mov
mov
lods
cmp
ret
jo
inc
xor
xor
and
aas
jl
push
enter
in
imul
mov
and
rcr
push
xchg
lea
xchg
cltd
jge
adc
lret
fiadds
fmulp
movsb
pop
arpl
out
lcall
emms
or
movsb
cmpsb
leave
mov
lds
pusha
lea
test
mov
cmc
mov
iret
inc
push
jb
lock
adc
push
cmp
add
pop
leave
cld
add
and
mov
push
or
cmc
mov
dec
jecxz
cld
addr16
addr16
push
ljmp
or
dec
imul
mov
push
dec
das
mov
push
mov
fstpl
stos
dec
xor
cwtl
jne
inc
gs
out
addb
aam
pop
mov
popf
jbe
negl
outsb
scas
xor
lds
or
cmp
inc
push
cli
stc
push
mov
xor
sub
test
jbe
push
push
addl
insb
mov
test
mov
jle
lcall
mov
mov
jns
mov
arpl
and
repz
aad
and
pop
push
xchg
out
mov
sahf
jno
mov
out
mov
xchg
pushl
and
ret
sbb
arpl
dec
add
sbb
fidivl
xchg
push
dec
add
mov
mov
push
ja
pop
insb
enter
xchg
push
gs
push
cwtl
fnstsw
xchg
scas
gs
psubusb
xchg
fidivs
xchg
jl
sbb
push
insb
out
push
cmp
into
int
scas
or
cli
mov
sub
mov
mov
lods
or
push
xchg
jecxz
xchg
lock
outsl
lcall
enter
std
test
mov
outsb
in
add
mov
rorl
fmuls
sbb
negb
and
cs
mov
in
je
clc
pushl
out
mov
fsub
push
lock
mov
stos
push
dec
mov
xchg
and
push
hlt
fcoml
mov
mov
and
dec
nop
adc
shr
adc
loopne
sub
add
imul
xchg
scas
in
jbe
or
jno
cmpsb
jp
daa
aas
or
loope
mov
xchg
pop
popa
icebp
sbb
imul
cmpsl
dec
and
mov
jnp
or
pop
inc
repz
mov
outsl
pop
inc
lea
or
int3
push
inc
leave
push
add
adc
je
out
sub
enter
nop
movsb
mov
popa
push
mov
repz
dec
fisttpll
cld
xchg
inc
add
xchg
test
xlat
std
sub
cmpsl
jle
outsb
mov
add
lret
adc
dec
and
jo
mov
cld
leave
call
push
cmpsb
fcmovb
cmp
push
jmp
je
sub
push
inc
adc
jp
stc
pop
packssdw
inc
loope
sub
push
iret
aas
push
jne
data16
pop
add
in
xor
mov
add
push
adcb
dec
mul
outsb
out
mov
popf
mov
inc
xchg
ficompl
out
lods
aam
daa
enter
pop
out
in
jno
rcrl
subl
pop
mulb
cmp
stc
lock
test
jmp
cmp
adc
insb
lock
lret
xchg
lret
adc
sti
or
cmc
jecxz
jmp
fisubrl
addb
push
movsb
jmp
sbb
addl
aas
outsb
cld
mov
mov
rcrb
or
les
repnz
xchg
aas
mov
mov
mov
popa
xchg
ret
pop
dec
cmpb
inc
dec
scas
mov
insl
jno
mov
lock
cmp
adc
rorl
sub
add
mov
popa
push
mov
sar
mov
inc
pop
pushf
jno
jbe
mov
decb
mov
mov
outsb
cmp
adc
loope
cld
incl
and
fsub
outsl
push
push
and
mov
add
mov
aad
sbb
mov
or
loop
sub
push
mov
push
repz
daa
in
inc
sbb
lds
in
iret
adc
out
fdivs
aad
fildl
adc
mov
aaa
adc
mov
and
mov
push
jl
adc
sub
sub
mov
cld
shl
push
push
lods
clc
inc
dec
clc
fimull
pop
sbb
ja
movsl
clc
adc
call
bound
hlt
pop
xor
mov
inc
pop
ficoms
sub
pushf
ret
pop
sbb
in
test
imul
fldcw
dec
rcr
iret
dec
xorb
sbb
sarl
inc
dec
outsl
aam
mov
out
jbe
das
rol
or
fisubl
adc
inc
adc
xchg
pop
imul
cld
push
sub
pop
xor
and
test
rolb
add
jmp
ljmp
sbb
ljmp
mov
or
mov
jg
clc
scas
shrb
loopne
shlb
repz
pop
xchg
inc
xor
test
mov
jnp
sti
rclb
xchg
sub
repz
in
mov
pop
sahf
inc
xchg
xchg
sub
lea
push
inc
jae
or
les
popa
cmp
or
push
mov
mov
xchg
xor
xchg
in
jbe
xlat
pop
mov
mov
jb
dec
or
popf
xor
pop
add
cmp
and
push
pop
push
in
ret
cli
sti
pop
ss
cmova
mov
inc
mov
out
sbb
jnp
aam
scas
out
shl
and
fcomp
fwait
and
enter
mov
aaa
dec
mov
or
icebp
lahf
jg
adc
pop
inc
mov
add
add
cmp
loopne
jle
rorb
pushf
pop
push
jmp
in
pop
js
jb
sarb
out
add
popf
sti
call
popf
loope
jp
scas
adc
adc
loopne
cmp
xor
cmp
aam
daa
mov
and
or
popw
in
inc
and
xor
test
inc
mov
push
lret
mov
jecxz
lods
cwtl
loopne
xor
or
inc
jecxz
push
mov
ds
aad
adc
push
ficoml
cmpsl
sub
or
out
lds
sub
scas
adc
pause
add
xchg
jno
andb
xor
out
aas
clc
lahf
ja
pop
testb
subl
adc
shrl
inc
adc
sbb
test
scas
push
mov
jmp
roll
jle
scas
jno
cwtl
jle
iret
icebp
into
leave
mov
mov
pop
out
cltd
pushf
cmp
dec
fists
andb
jp
scas
or
mov
test
shl
in
add
sbb
pop
sub
xchg
add
das
adc
xor
fcomip
ret
adc
jmp
jp
pop
jbe
dec
std
vphaddudq
mov
adc
mov
mov
xchg
fldt
mov
add
or
adc
shrb
inc
xchg
mov
sbb
dec
xor
ss
divb
jne
cmp
sbb
sti
pop
or
ds
test
es
mov
rclb
aaa
xor
neg
mov
rcrb
jmp
sbb
jp
cmp
mov
sti
mov
push
fsubrl
sub
cmp
cwtl
rcl
data16
pop
lds
dec
pop
jne
mov
je
sbb
mov
jl
test
xchg
sbb
mov
push
mov
addr16
ret
mov
sahf
adc
add
inc
loopne
cmp
xchg
and
xorl
mov
leave
xor
loope
outsb
pop
inc
pop
aam
pop
imul
mov
mov
inc
sbb
push
inc
sbb
pop
lret
jmp
jge
adc
xchg
push
fnsave
xchg
inc
mov
mov
jl
push
jmp
dec
mov
sub
and
pop
adc
mov
into
xchg
cld
add
aaa
aad
xor
push
scas
nop
xchg
lcall
in
imul
ret
pop
xchg
leave
addb
aad
loop
and
gs
jne
mov
jno
sbb
push
sbb
test
lcall
adc
lea
cmp
inc
xchg
lcall
js
jbe
aad
mov
xchg
inc
jne
outsl
cmc
movsb
inc
test
pop
push
pop
mov
pop
jbe
loopne
cmp
and
mov
inc
push
cmp
shrb
mov
adc
jb
leave
jp
lock
mov
filds
bound
sbb
pushf
jbe
xor
add
popf
push
pop
stos
and
jnp
jno
stc
incb
jmp
sbb
mov
push
das
jl
or
ljmp
sub
cmc
insb
enter
pop
out
fildll
ja
jg
outsb
mov
js
sub
js
bnd
subl
sbb
jmp
xchg
lods
inc
in
int
std
jne
mov
icebp
and
inc
mov
adc
lods
lods
stos
cld
fwait
sahf
mov
or
ss
xchg
lods
mov
es
cltd
es
jbe
cmp
sub
out
mov
inc
xchg
jno
xchg
cwtl
scas
mov
dec
loop
xor
rclb
jnp
shrb
mov
test
jbe
cs
push
sti
mov
xchg
outsl
imul
mov
jno
lods
les
outsl
pop
popa
mov
lea
fidivl
adc
scas
mov
fsubrl
icebp
or
and
enter
sub
jns
sti
mov
std
stos
xor
test
cld
xchg
mov
push
and
jbe
clc
les
fsqrt
lock
cmpsb
in
lods
gs
ret
mov
jae
mov
cld
mov
or
push
inc
inc
daa
xchg
js
call
testb
inc
enter
imul
sub
movsb
jne
test
cmp
xor
ja
jbe
push
nop
dec
push
push
and
inc
or
loopne
adc
push
bnd
cmp
outsl
pop
pop
xor
pop
adc
or
lods
lret
pop
and
cmp
push
xor
add
sub
sti
gs
stos
ss
push
incl
popf
fdivp
adc
jo
push
lcall
jnp
and
dec
stc
jne
xchg
pop
movsb
push
lret
lcall
mov
scas
sub
mov
call
inc
cmp
jne
pop
push
cmp
xchg
jmp
mov
repnz
mov
scas
xchg
fsubs
adc
mov
cs
outsb
icebp
add
mov
adc
std
xor
addr16
inc
mov
add
jp
adc
aaa
push
fldl
mov
adc
mov
and
and
jns
pop
dec
push
jnp
pop
aaa
dec
aas
mov
mov
push
daa
dec
adc
sub
imul
jecxz
sbb
fnstsw
cs
test
xor
add
loopne
aad
push
jnp
mov
sbb
movsl
imul
testb
jb
xor
jbe
fs
jg
or
out
cs
ja
pop
std
push
or
xor
cmpxchg
cli
sarl
movsb
cmp
and
adc
dec
mov
clc
je
xchg
loope
in
jmp
xchg
jns
cwtl
mov
push
and
popf
lods
inc
and
out
jmp
std
mov
cmp
cmpl
mov
push
xor
dec
push
loopne
in
into
xorb
pop
imul
sbb
adc
add
cwtl
out
sub
dec
xlat
dec
mov
add
stos
sub
mov
ljmp
xchg
dec
ret
lods
sbb
inc
add
lods
int3
cwtl
pop
push
push
scas
ret
fstl
mov
repz
jns
aaa
hlt
fsubr
xor
mov
and
inc
popa
pop
inc
fisttpll
bound
lods
jmp
frndint
lahf
jb
cld
mov
adc
pop
flds
aaa
cmp
mov
ficompl
arpl
ja
sub
pop
cmp
leave
xor
test
sbb
scas
fdivrs
in
dec
aam
push
pop
mov
xchg
inc
rcrl
pop
push
iret
mov
cmp
fcomps
mov
mov
aam
mov
movsb
ljmp
or
insb
neg
dec
mov
jg
push
sbb
dec
icebp
jo
pop
fiadds
rcr
inc
and
pop
outsb
es
cmpsl
aaa
jl
ja
loopne
gs
push
loop
sbb
lock
into
clc
push
ds
int3
inc
push
lock
mov
dec
cltd
xchg
and
pop
mov
aas
lea
dec
aas
loope
insl
inc
add
call
sahf
pop
mov
lahf
repz
cmp
dec
mov
cltd
mov
push
jg
negl
mov
shrl
xorb
mov
rorl
pop
das
mov
push
xchg
or
out
and
lea
adc
jae
cmp
pushf
cwtl
jl
rorl
pop
scas
xchg
mov
mulb
mov
xchg
jae
nop
loopne
push
mov
andb
sbb
inc
mov
lret
test
nop
cmpsl
adc
or
cmp
shr
xor
pop
scas
scas
ret
adc
in
aad
adc
mov
push
lret
mov
add
and
dec
push
mov
data16
xchg
das
call
sarl
imul
jns
sbb
js
mov
dec
mov
push
xor
imul
sarl
stos
inc
jmp
sub
mov
pop
fsubrl
int
js
cs
lods
and
in
pop
mov
daa
jbe
mov
fwait
and
mov
or
mov
push
add
outsb
mov
lock
jle
push
shl
push
jge
idivl
addr16
xchg
add
and
insb
push
jmp
mov
lcall
sub
ficompl
fdivl
stos
jg
into
mov
pop
pop
in
je
popf
fwait
and
add
pop
loop
nop
lods
inc
inc
mov
add
iret
push
and
dec
enter
dec
imul
jge
fwait
mov
or
loopne
or
or
jo
dec
jp
xor
ret
cmc
cmc
push
fimuls
outsb
jbe
icebp
inc
lods
test
push
test
mov
int3
sub
sbb
jl
lods
popa
stc
or
mov
mov
out
jecxz
out
xlat
mov
mov
push
fwait
push
lret
sar
rcll
rorl
js
or
sub
mov
cmc
fadd
into
sahf
add
aaa
mov
inc
mov
pop
pop
sub
subb
mov
insb
adc
fmul
dec
sbb
sub
outsl
jg
rorb
mov
jmp
xor
hlt
adc
inc
add
inc
push
lods
out
imul
test
xor
in
mov
test
test
inc
out
shrb
mov
inc
ret
in
xchg
sub
or
xor
aam
int3
mov
xchg
fcmovnu
inc
jg
pop
adc
je
aaa
shll
inc
aam
jb
inc
fs
nop
scas
inc
pop
repz
push
xchg
sbb
pop
ret
leave
lahf
or
or
cmp
loop
and
fsubs
in
movsl
add
lcall
test
dec
dec
shlb
fdivrl
call
sub
enter
js
pop
nop
sub
jmp
fsubl
cmc
mov
xchg
repz
nop
mov
andb
test
xor
sub
inc
add
aas
test
incl
pop
jns
or
sbb
insl
dec
mov
add
icebp
add
sub
and
outsb
ja
xor
aaa
in
sbb
icebp
xchg
xchg
mov
iret
loope
rorb
rcr
stos
loopne
div
dec
mov
fnsave
les
dec
add
stc
push
ret
flds
or
mov
mov
jns
mov
enter
xchg
sub
hlt
adc
lods
and
push
dec
lret
cmp
mov
push
insl
inc
cltd
scas
jmp
cli
dec
sbb
and
cmp
xlat
pop
mov
add
mov
scas
xlat
les
mov
leave
push
pushf
out
adc
int
or
lahf
loopne
push
fwait
loop
arpl
mov
shl
add
mov
cmp
imul
int3
outsb
push
sbb
pop
lcall
les
into
sbb
lods
adc
je
push
sbb
repnz
in
sbb
stc
daa
loopne
xchg
sub
nop
adc
aam
and
call
cwtl
sbb
xchg
cwtl
mov
nop
sub
rcll
sbb
imul
mov
xchg
sub
ja
dec
inc
in
push
pop
mov
mov
movsb
lahf
adc
fcomp
pusha
fs
xor
lcall
aad
sti
iret
clc
add
xor
clc
stc
cwtl
mov
out
call
xchg
push
dec
and
mov
pushf
push
cmpsl
mov
push
sbb
icebp
mov
add
ja
das
jae
daa
scas
cli
or
add
dec
iret
ret
and
das
clc
idiv
dec
js
adc
push
in
inc
push
enter
jecxz
or
inc
js
es
js
cmp
dec
pop
dec
sub
sub
stos
aaa
sub
mov
mov
mov
push
or
out
aaa
jbe
or
insl
and
movsl
xchg
or
jl
test
sub
popf
add
add
inc
mov
pop
nop
lea
popa
insb
lret
fists
sahf
adc
mov
inc
inc
sub
repnz
repnz
icebp
inc
das
in
jo
rorb
sbbl
test
lods
insl
sub
xorb
push
sbb
iret
jl
mov
mov
cltd
mov
mov
sub
pusha
cmp
xchg
jl
jmp
fstpl
enter
addb
aaa
ret
and
push
cli
mov
fisubs
cli
cmp
cwtl
mov
ret
and
call
mov
stos
jmp
movsb
push
dec
sub
enter
ja
xor
and
insb
cmc
or
pushf
loopne
aad
sbb
and
movsb
aas
dec
jp
jg
and
test
push
out
aam
fistl
mov
mov
adc
push
daa
fwait
pop
dec
imul
add
insl
jle
mov
dec
jecxz
mov
ret
lcall
test
xlat
sub
sbb
add
pop
cs
cli
or
shrl
or
hlt
cltd
leave
ret
cmp
sbb
insl
stos
sbb
in
xchg
inc
add
xchg
es
xchg
jbe
cli
adc
mulb
sub
rorl
pop
mov
jge
rcll
jmp
decb
inc
or
clc
mov
outsb
dec
cmp
cmp
gs
push
lock
iret
cmpsl
mov
cld
xchg
pop
pop
addr16
jl
mov
in
pop
xchg
imul
jecxz
xchg
incl
cmpsl
sbb
mov
lds
mov
insb
inc
mov
sub
idivb
les
fistl
pusha
call
sarb
cmc
push
dec
nop
cmp
fiadds
aaa
dec
and
mov
xchg
jl
pop
add
inc
daa
inc
dec
mov
mov
imul
pop
xchg
sub
mov
pop
inc
inc
shl
sbb
pop
das
xor
scas
imul
stos
notl
testl
jb
sub
jl
inc
int3
ja
adc
pop
aaa
push
dec
sbb
cld
push
lcall
cmp
mov
adc
jmp
and
lret
xchg
popa
cmp
sub
sub
insl
adc
sbb
ret
jo
add
mov
es
mov
repnz
xchg
xchg
adc
pop
sub
jp
rcll
jmp
movsb
xchg
mov
data16
movsb
scas
fwait
xlat
and
adc
mov
int3
mov
cld
jns
cmp
pop
mov
push
lods
fdivs
js
xchg
adc
push
fsubr
inc
rclb
popa
xchg
pop
mov
cmp
lcall
sti
das
dec
cmp
in
rol
test
out
mov
dec
and
rorl
repz
frstor
imul
leave
cmp
ds
mov
mov
fildll
pop
mov
std
xor
dec
mov
push
nop
sbb
sub
cmpl
mov
test
test
xchg
mov
inc
cmpsl
sub
dec
push
popf
or
pop
js
adc
fldenv
testb
lret
inc
pusha
mov
pop
xchg
mov
or
pushw
enter
xchg
mov
mov
cmp
into
lea
out
sbb
push
std
call
vmread
lds
leave
sbbb
dec
mov
repz
stos
mov
dec
pop
insl
aam
out
data16
mov
mov
icebp
fldl
dec
or
push
push
pop
out
clc
sbb
adc
hlt
into
icebp
cs
dec
push
repz
hlt
sbb
pop
push
mov
dec
or
in
sub
jb
sahf
xchg
inc
aas
sub
mov
pushf
cmp
insb
lret
insl
int3
fistps
fidivl
fstpl
jb
push
outsl
cli
cmp
mov
popa
pop
lcall
jns
jg
incb
mov
aaa
loopne
in
neg
mov
outsb
lea
mov
xchg
shll
mov
mov
inc
jmp
das
mov
sahf
aad
jnp
clc
sub
dec
pop
loopne
push
mov
jb
subl
xchg
int3
ret
jne
and
testl
loope
test
in
xor
fcompl
jne
dec
push
pop
xlat
sti
aam
es
sbb
pop
pop
inc
pop
mov
jmp
mov
jbe
and
xchg
mov
shl
pop
mov
pop
aad
push
mov
jb
lock
out
mov
push
or
sub
mov
push
mov
xchg
repz
cmpsb
dec
sahf
loop
xchg
sbbl
push
jle
popf
xor
sub
icebp
mov
and
mov
or
mov
push
add
jo
stc
dec
or
repnz
xor
xor
push
push
negb
lea
or
jbe
fs
ror
cmp
arpl
push
hlt
sub
call
int3
xchg
inc
xor
out
cli
dec
xchg
mov
mov
fwait
ljmp
add
scas
ret
test
loop
mov
mov
pop
xchg
sub
xchg
test
lea
enter
push
lret
sub
xlat
in
loop
enter
pop
pop
push
dec
sbb
cmp
inc
push
sub
dec
jno
cmp
into
aas
test
hlt
loop
lcall
pushl
mov
pop
mov
and
fs
xor
pop
cs
mov
aam
mov
pop
xor
pushf
cmp
cmp
add
lds
xor
dec
inc
jl
in
in
pop
lret
dec
xchg
js
add
lds
push
lret
in
adc
cli
cld
fwait
dec
scas
lods
lock
clc
xor
lahf
jno
mov
sub
inc
and
out
xchg
sub
rorb
aaa
insb
xor
je
xchg
and
push
mov
dec
enter
stc
hlt
mov
mov
loop
add
lea
push
and
or
inc
add
mov
cmp
cmc
in
clc
in
fnstcw
pop
xchg
je
mov
lock
mov
xchg
movsb
loopne
push
inc
scas
dec
cli
jns
into
lods
xor
adc
inc
xchg
shrl
enter
dec
aad
cmp
ficompl
ss
in
or
mov
jle
jns
sub
stos
sahf
aam
mov
adc
mov
mov
pop
sbb
and
orl
mov
push
sahf
int3
insb
in
or
aam
pop
rclb
lahf
mov
lcall
es
cmp
pop
out
dec
add
or
push
test
inc
and
sub
jecxz
dec
jae
outsb
insl
loop
cmpl
and
push
loope
loope
mov
les
nop
into
sbb
sbb
outsb
sbb
mov
fwait
aaa
nop
push
mov
mov
sti
add
cmpsb
loop
popa
add
xor
aad
inc
movsl
jmp
into
pop
cwtl
out
push
or
lret
cmpsl
xchg
push
ss
cmpsl
dec
sub
jnp
fwait
mov
pop
xor
out
pusha
jo
cwtl
jnp
push
dec
mov
inc
cmc
push
inc
push
xor
mov
into
xchg
pop
pop
jl
mov
xor
test
cltd
jo
jl
jle
stc
jo
arpl
lods
addr16
sub
iret
data16
or
jns
lock
jg
ljmp
pushf
and
imul
inc
popa
rcll
push
lods
xchg
hlt
loope
mov
adc
mov
imul
ljmp
pop
call
push
ret
inc
js
and
xchg
push
pop
out
orl
arpl
mov
outsb
mov
loop
sahf
ljmp
and
inc
andb
add
aas
jae
popf
lds
pusha
mov
mov
lahf
mov
inc
gs
pop
cli
sub
xor
ljmp
adc
lods
insl
push
loop
pop
sti
adc
insb
orb
imul
sbb
push
scas
cmp
and
aas
dec
push
pop
inc
arpl
arpl
lea
mov
xor
pop
adc
pop
lock
lret
icebp
aam
push
cltd
insb
jmp
mov
mov
adc
inc
inc
loopne
or
and
and
mov
jmp
stc
lahf
jo
pop
sub
pop
adc
mov
push
inc
pop
jecxz
loopne
fdivrs
mov
dec
push
mov
je
cld
pop
call
jbe
out
jmp
lds
xchg
jne
ret
paddsb
mov
int
lock
arpl
pop
push
mov
cwtl
xchg
mov
push
cwtl
dec
scas
cwtl
cmp
or
ljmp
pop
shrl
lock
scas
in
cmp
dec
sbb
mov
jo
sbbb
in
nop
ja
fs
xchg
into
pop
xchg
cltd
xchg
mov
xchg
ljmp
lahf
into
inc
pop
add
push
ja
arpl
mov
addr16
int3
shrb
sbb
mov
test
in
or
imul
pop
rcl
lea
mov
test
xor
repz
inc
lock
out
mov
bnd
inc
lea
dec
mov
cwtl
push
mov
sub
inc
lds
inc
jnp
push
cli
rcr
sbb
jg
pop
pop
push
sbb
adc
xlat
jns
xor
jmp
mov
mov
xchg
pop
stos
rcrb
orb
clc
or
imull
cli
and
pop
dec
jnp
dec
mov
divl
dec
mov
pop
std
shrb
mov
bound
lret
pop
arpl
stos
leave
mov
push
and
mov
loope
jg
adc
mov
rcrl
insl
cmp
in
test
mov
clc
sub
jns
dec
icebp
mov
xchg
push
add
jo
fwait
mov
xor
test
xchg
xchg
lret
fwait
push
lods
test
push
mov
sbb
adc
mov
into
stc
cwtl
sar
in
cltd
iret
out
test
xchg
fistl
mov
mov
jle
aaa
icebp
call
cmp
fstps
rep
mov
lds
and
out
les
lea
push
inc
ja
scas
ja
sti
mov
jb
aaa
gs
int
les
loopne
fildll
imulb
dec
dec
or
push
ljmp
pushf
jg
das
xchg
mov
jne
inc
loopne
ret
test
sbb
shrb
test
inc
push
inc
xor
push
or
pop
adc
stos
adc
sahf
cmp
xchg
push
imul
sti
cmpsl
add
fbld
cmp
adc
inc
fisubrl
push
mov
mov
or
push
jbe
mov
les
dec
mov
cmpsl
sahf
push
addl
mov
jne
cmc
imul
ljmp
dec
cmp
frstor
jmp
and
pop
pop
fldcw
inc
int3
jbe
xchg
es
cltd
or
shrb
in
jmp
mov
push
cmp
leave
sub
sub
mov
mov
jno
ficomps
mov
in
lahf
jle
stc
adc
push
aaa
inc
scas
mov
and
loope
fs
mov
mov
xchg
popa
out
add
add
in
out
fsub
out
mov
push
aas
add
sahf
popf
inc
jnp
jmp
or
add
and
adc
ja
push
lret
movsl
lret
or
cltd
xor
scas
adc
pop
cmc
imul
push
sub
popl
add
clc
cs
into
cmovnp
in
lcall
pop
clc
test
les
mov
adc
sub
xor
repz
jo
call
dec
jo
out
int3
adc
adc
jno
mov
ret
fs
jnp
addl
outsl
icebp
adc
inc
inc
lret
sbb
negl
xchg
mov
stos
cld
xorb
lods
sahf
adc
mov
add
jae
in
daa
inc
ds
or
jg
cmp
sub
mov
sub
out
mov
mov
mov
aam
mov
out
sub
outsb
or
push
mov
fucomip
fimull
pop
lds
inc
scas
inc
imul
xchg
sahf
push
out
cmp
in
cmp
shrb
popl
or
cmp
scas
mov
sbb
or
sbb
int3
mov
dec
cli
ja
inc
int
sahf
mov
push
mov
jmp
out
cmp
cmp
iret
dec
ds
insb
lret
cli
rcrl
ljmp
xchg
sahf
and
in
pop
subb
repz
and
das
test
in
insl
mov
cmp
mov
or
cs
or
aaa
mov
icebp
or
outsb
and
cmpsb
mov
push
pop
gs
xor
out
test
mov
push
js
outsb
pop
cmc
inc
or
xor
stc
jmp
ficoms
pop
jns,pt
jae
loopne
scas
repnz
lidtl
pop
into
in
dec
push
daa
lret
adc
pop
mov
jp
mov
and
into
scas
scas
lahf
or
dec
ja
mov
xor
mov
movl
xor
xchg
mov
out
je
repz
adc
adc
outsb
aad
pop
stc
mov
push
jbe
ds
sub
lret
andb
xchg
lea
xchg
or
cmp
cmp
jb
adc
jno
daa
sub
ljmp
dec
mov
outsb
xchg
fld
and
sbb
dec
movsb
add
out
imul
inc
cmp
push
pop
mov
jb
int
cmp
loope
cmp
pop
hlt
or
scas
mov
imul
mov
pop
push
push
adc
mov
aam
fisubrl
enter
rcrl
inc
mov
adc
and
repz
bound
and
mov
mov
mov
adc
sub
out
inc
fnsave
mov
mov
push
ret
jmp
cmp
ret
mov
loope,pn
dec
jb
cmp
or
cmp
enter
shll
and
jb
sub
adc
shrl
gs
out
jecxz
stos
sub
scas
ret
jmp
push
xchg
andb
cs
lods
push
imull
cmp
imul
or
and
sahf
push
xor
pop
gs
pop
pop
mov
push
sub
pop
xor
push
xor
or
and
aad
shlb
mov
and
hlt
gs
sub
add
divl
push
movsb
mov
and
xor
sbb
push
sbb
push
pusha
add
mov
rorb
pop
adc
push
sbb
mov
insl
inc
mov
in
rolb
lcall
ja
outsl
jnp
pop
jns
dec
inc
loopne
sbb
xlat
xchg
aas
sbb
sti
xchg
fdivl
mov
dec
mov
test
dec
pop
pushf
int3
sbb
mov
aas
xor
mov
xchg
jnp
lock
das
ret
rcl
xchg
inc
fcmovnbe
dec
and
aad
gs
xorl
cwtl
out
stos
mov
clc
push
insl
out
cmp
jmp
cmp
lea
test
add
arpl
xchg
loopne
xor
cmpsb
jmp
fnstenv
jecxz
mov
stc
cmp
cmp
addr16
hlt
lret
imul
lahf
jbe
pop
cmp
mov
scas
jns
inc
cld
lret
dec
inc
sbb
jle
push
ret
xchg
add
mov
mov
sti
or
mov
test
sahf
xchg
pop
es
orl
ret
push
sbb
mov
and
data16
mov
cmp
rolb
push
push
sub
cld
xlat
push
sbb
divb
ljmp
jg
pop
add
mov
into
ljmp
mov
aam
out
bound
out
dec
adc
sub
jg
cli
mov
enter
mov
into
cmp
sub
mov
xor
mov
cs
popf
xorb
mov
scas
fcmovnbe
movsb
cmp
jge
and
push
sbb
in
cmp
xchg
jns
pop
push
sbb
in
jns
sub
mov
stc
daa
xchg
sbb
inc
fdiv
sub
loopne
dec
cmp
adc
loop
sbb
push
jae
pop
and
mov
jmp
pop
xchg
jecxz
lods
jo
lcall
jns
adc
xchg
scas
std
call
xchg
clc
mov
pop
mov
adc
pusha
fcomps
push
cmp
out
xlat
lock
mov
std
adc
sti
push
rcrb
add
dec
mov
mov
push
adc
sbb
mov
mov
or
sarb
xor
clc
and
jo
jg
outsl
adc
hlt
or
rcr
imul
dec
rcll
and
sbb
xor
shrb
adc
and
xor
mov
jmp
push
sti
das
popa
add
mov
outsb
mov
adc
dec
mov
out
leave
rcll
sbb
out
cmp
icebp
movsb
xchg
in
xchg
pusha
test
lret
jnp
ret
sahf
ds
stos
sbb
adc
js
or
sub
jb
fldl
das
std
ret
or
add
push
or
into
loop
movsl
das
sub
mov
cmp
rcrb
mov
sbb
leave
and
xchg
fisttps
dec
push
mov
popa
and
popf
xor
in
add
xchg
inc
testl
mov
mov
jg
jnp
call
loopne
loope
mov
inc
into
xchg
in
cmp
adc
pop
pushf
mov
arpl
jmp
movsbl
insb
jmp
dec
jne
sarb
jo
adc
insl
mov
lods
test
cld
pop
and
rclb
mov
loopne
xchg
and
adc
push
fisttpll
lock
adc
in
adc
dec
inc
mov
fldt
std
jae
fimull
aaa
sbb
fwait
cli
addr16
das
mov
add
iret
fcomi
cwtl
add
ja
pop
inc
adc
pop
jmp
dec
and
sub
push
jne
inc
mov
mov
push
cmpl
jbe
sti
lcall
mov
push
imulb
push
mov
add
cmp
test
or
movsb
jmp
dec
enter
fndisi(8087
inc
xor
or
jnp
push
adc
cmp
ss
xor
mov
test
adc
pusha
cmp
xchg
shlb
ficomps
sbb
and
fsubl
cmp
xor
dec
xchg
stc
addl
mov
cmpsb
pop
xorl
mov
and
cwtl
mov
int
mov
xchg
pop
push
push
jp
dec
outsl
pop
iret
jecxz
jbe
or
xchg
ja
sub
cwtl
dec
ffree
ficoml
add
and
xor
dec
xor
mov
dec
movsb
enter
cmpsl
add
cmp
add
sbb
sub
mov
fstps
mov
addr16
mov
sbb
mov
add
mov
das
inc
sub
int
movsl
aas
mov
xor
aas
call
aad
mov
xchg
add
inc
ret
sarl
inc
scas
ja
xor
ss
negb
push
das
pop
sarb
or
fldenv
jbe
mov
dec
inc
ja
jecxz
xor
push
pop
inc
loope
arpl
inc
test
and
xor
push
lds
out
pushf
fwait
insl
cld
push
idiv
pop
sbb
pusha
jno
ljmp
mov
in
gs
push
cmp
jnp
stos
xor
movsb
les
jnp
cmc
cmp
jg
dec
xor
inc
movsl
or
jle
aam
in
mov
ja
loopne
xchg
add
and
fdivrs
stc
loope
outsb
pop
aad
xchg
xchg
sbb
pop
imul
push
pop
push
xchg
jb
loopne
inc
call
cwtl
faddl
push
sub
xlat
adc
adc
mov
fnstsw
mov
bound
cmp
ljmp
cltd
push
mull
mov
jp
jo
loop
cmp
pop
sbb
lock
inc
arpl
lcall
cvtps2pd
je
loopne
sbb
and
push
test
std
andb
enter
arpl
xor
push
rcll
xchg
jp
out
loop
dec
lods
loope
jae
in
mov
cmp
lret
cld
inc
frstor
pop
mov
test
dec
xchg
push
jp
bound
xlat
test
aas
scas
cli
mov
ficomps
cmpl
stos
add
in
enter
subl
adc
jnp
rolb
out
jne
nopl
sbb
je
and
ja
fcomi
scas
lcall
insb
and
sbb
xchg
push
std
sbb
ret
mov
into
test
jg
addr16
add
cli
adc
call
xlat
call
shl
and
fidivrs
sahf
xor
gs
add
lret
fdivl
insw
outsb
inc
lods
insw
nop
lods
mov
loope
adc
add
daa
lock
icebp
js
cmc
aad
sbb
dec
out
mov
mov
and
push
movsl
dec
jno
or
and
lret
in
xor
sarl
test
jb
or
je
rcr
iret
mov
mov
xor
xor
lret
and
mov
pop
inc
int3
iret
cwtl
xor
jno
icebp
addl
lret
push
push
cmp
outsl
mov
jp
jp
out
sbb
loope
rol
test
incb
cmp
and
or
push
pop
add
inc
mov
fwait
pop
push
mov
push
in
loope
add
out
push
sub
jnp
bound
dec
vpunpcklbw
mov
test
dec
mov
xchg
mov
adc
jl
cmp
or
int3
test
pop
inc
mov
cmc
cmp
cmpsl
sub
divb
mov
loope
adc
enter
push
push
jg
pop
subb
mov
add
mov
dec
cmp
daa
aad
js
mov
enter
add
mov
ja
fcoml
testl
setg
ss
jno
fst
sahf
ljmp
popa
pop
outsl
xorb
sbb
mov
in
mov
call
dec
stos
xchg
add
ret
sub
lahf
cmp
ss
ds
dec
add
adc
inc
roll
inc
fdivrp
sub
nop
repnz
xor
mov
pushf
test
fcom
cmp
sbbb
inc
jmp
outsl
rcll
movsb
adc
adc
lahf
jo
mov
jae
sub
js
or
push
les
inc
das
sub
andb
sbb
xor
in
or
outsl
pop
data16
inc
xor
cs
das
lret
jne
loopne
xor
xor
pop
add
pop
lds
xchg
loope
lcall
cmpsb
scas
test
cmp
cmp
test
pop
mov
movsl
dec
xchg
and
imul
dec
aas
jae
sub
mov
stc
mov
xchg
mov
cmp
dec
xlat
repnz
adc
das
sub
popa
cmp
pusha
cmp
push
cmp
or
xlat
adc
push
push
es
inc
ret
cmpsl
adc
add
jbe
aam
cmc
in
mov
test
sbb
jl
aas
loop
inc
inc
push
xor
xchg
movsb
jne
sbb
cmp
sub
sbb
jmp
mov
ret
cmp
ret
xchg
adc
stos
add
frstor
sbb
adc
ds
popa
sub
pushf
out
addr16
jmp
addr16
mov
test
rorb
mov
or
leave
data16
pushf
repnz
loopne
lret
xor
out
mov
cmp
inc
sarb
push
hlt
std
ret
lcall
inc
or
sbb
sahf
repz
lahf
dec
insb
movsl
add
cwtl
mov
int3
and
dec
inc
icebp
loope
mov
inc
stos
adc
mov
adc
insl
mov
shlb
or
sbb
push
clc
lds
pop
cmp
lock
inc
aaa
dec
dec
divl
xor
aas
xor
mov
repz
test
xor
cmp
iret
xor
and
data16
cmp
lcall
mov
xor
xchg
cld
ds
into
jle
test
xor
xor
push
sbb
into
insl
jmp
jg
mov
cmpsl
fs
sbb
xchg
sbb
mov
sub
das
sub
incl
push
nop
mov
das
out
jnp
cld
jbe
cmovbe
xor
add
test
xor
mov
jmp
rorl
mov
adc
mov
outsl
aad
fwait
xchg
mov
jecxz
ja
push
cli
lock
xchg
aas
xchg
and
push
add
les
inc
xlat
fwait
xchg
inc
rcll
dec
add
in
pop
test
inc
push
mov
mov
aad
sahf
inc
jne
data16
imul
call
add
loopne
mov
xor
xchg
cmp
mov
cmp
test
pop
test
mov
lahf
dec
push
and
pop
sub
dec
mov
shl
xchg
pop
pop
jge
push
sub
jle
sbb
mov
repz
out
adc
xor
jns
addr16
xorb
xchg
ror
das
hlt
or
data16
pop
js
adc
dec
dec
mov
dec
jbe
fsubp
out
outsb
ja
inc
sbb
ss
fmull
adc
mov
fcomi
jne
ret
fmuls
push
add
jae
lea
ds
mov
jl
mov
ss
aad
loopne
jns
mov
cmp
fcomp
and
and
dec
fisttpll
dec
add
inc
jno
das
ss
adc
pop
xchg
or
fldt
mov
bound
adc
sahf
movsl
clc
mov
cmp
loopne
pop
xchg
dec
or
and
lods
xchg
fildl
fwait
stos
fwait
iret
inc
xor
add
fsubl
idivb
in
sbb
sti
push
popf
imul
pop
cmc
imul
add
test
or
lods
add
pusha
shll
ja
call
js
dec
lret
adc
push
les
inc
daa
fbld
sub
inc
fcmovnbe
mov
movb
cltd
adc
inc
hlt
or
sub
jmp
mull
aam
test
imul
loop
xchg
ret
xor
dec
xchg
xchg
mov
das
xchg
into
jmp
cmp
xchg
enter
push
pop
pop
rorl
and
stos
data16
add
fists
fwait
int3
sub
popa
adc
lock
imul
out
ret
push
xchg
cmp
mov
roll
mov
pop
jns
sbb
dec
mov
mov
sar
bound
mov
push
or
pop
int3
mov
and
inc
mov
push
inc
mov
push
test
inc
cmp
add
popl
lods
sub
mov
inc
fbstp
inc
mov
sub
add
mov
int3
nop
sar
out
adc
mull
mov
adc
jne
aas
and
jb
sarl
jmp
outsb
or
lahf
jge
int3
xor
add
adc
cwtl
lds
insb
sbb
bound
adc
lret
xor
iret
mov
rcl
pop
mov
mov
pop
out
and
imul
iret
mov
orl
jo
push
shrl
movsl
sub
aaa
mov
sbb
mov
cld
mov
jmp
xor
ss
cmc
fsubr
imul
adc
cwtl
pop
fidivs
out
dec
add
lcall
jg
cmp
fsts
or
repnz
sbb
mov
sub
pop
sar
addr16
fstl
xor
mov
sbb
enter
fwait
xchg
and
xor
push
dec
and
pop
rolb
enter
push
hlt
aaa
sti
cmp
lods
cmp
clc
dec
mov
popf
movsb
jg
ficomps
jmp
jmp
test
out
push
daa
test
cmp
gs
jae
fsubs
jge
pop
int3
mov
call
push
jl
test
outsl
dec
call
push
or
ja
mov
fmulp
add
push
xor
icebp
mov
and
lret
aaa
repnz
aaa
mov
xchg
insl
or
sub
push
mov
xchg
sbb
push
scas
jnp
ss
inc
ds
lcall
dec
loop
cmp
lahf
js
cltd
xor
loope
cmp
arpl
add
ret
out
ds
mov
and
sar
cmp
jle
jno
add
jbe
ret
and
and
andps
or
mov
and
xor
aam
or
xor
or
mov
pop
enter
xchg
add
inc
fcomps
mov
in
in
daa
sbb
push
out
inc
lahf
inc
movsb
rorl
jg
insb
movsl
stos
or
push
inc
int
jae
mov
lret
lods
dec
push
jo
or
mov
incl
out
std
je
cs
fists
movsb
test
fsts
jp
sti
inc
pop
push
cmc
bound
xchg
std
les
cs
cmp
mov
or
inc
jbe
addr16
dec
mov
inc
pushf
ja
or
lea
addr16
mov
and
in
adc
pop
sub
inc
movsb
jle
cwtl
pop
sub
mov
push
xlat
adc
test
icebp
add
jmp
lcall
lret
mov
sbb
xor
jl
std
sti
jnp
xchg
sub
cmpsb
mov
orb
mov
pushf
xorl
mov
fidivrs
shll
scas
cmc
subl
les
add
push
dec
and
adc
cmp
pusha
sbb
jne
loope
lea
add
jp
mov
add
pop
mov
push
push
jns
push
ss
adc
add
jl
jne
std
cmp
fsubrs
mov
cmp
lods
xchg
adc
inc
adc
dec
insb
push
insb
adc
mov
cmp
mov
movsb
dec
inc
fsts
push
xchg
add
push
js
sub
push
mov
ret
inc
repnz
daa
mov
and
pop
add
mov
dec
ds
xchg
gs
push
mov
sbb
dec
fnstsw
dec
mov
rol
cmpsl
add
aaa
and
lret
inc
inc
incl
sbb
push
loope
mov
pop
pop
popa
decl
and
mov
push
iret
pop
mov
or
out
test
mov
or
inc
rclb
cmpsb
bound
jne
push
cwtl
jmp
pusha
adc
and
sub
xor
cmp
mov
sarb
jne
lret
add
pop
les
pusha
les
pop
push
aaa
and
xor
mov
fisttpl
daa
rolb
sbb
push
mov
pop
mov
ret
push
test
movsb
add
pop
gs
mov
xchg
out
int3
inc
adc
lret
icebp
mov
mov
call
push
nop
nop
inc
cmp
push
andl
xchg
je
sarl
sbb
pop
subb
cs
aaa
or
ja
adc
aaa
push
fsubl
stc
xlat
mov
aas
jno,pt
adc
test
push
rcrl
or
fisubl
mov
cld
push
std
es
sahf
mov
jns
or
xor
jbe
ljmp
and
sbb
or
inc
cmp
ret
testl
lcall
push
push
fistpll
cwtl
mov
mov
jmp
mov
xchg
iret
mov
push
dec
aad
repz
jl
jg
jns
sbb
sbb
aaa
xchg
cmpsb
repz
shrl
aad
sub
jg
mov
andl
mov
outsl
icebp
nop
out
pop
movsb
daa
stc
jle
in
cli
cwtl
or
sbb
js
rcrl
mov
das
xor
mov
push
cltd
lods
pop
xchg
cmpl
and
cmpsl
push
jbe
push
stos
test
dec
fildl
in
or
in
sbb
in
out
xchg
xchg
mov
call
shll
lods
xor
pop
cmp
or
lret
cmp
mov
xchg
in
dec
mov
pop
fcoms
sbb
ret
out
pushf
adc
sbb
mov
push
xchg
rcll
jb
call
shrl
addr16
in
insl
jmp
fs
rcll
dec
dec
out
sub
dec
inc
aas
add
jle
and
pop
aad
bound
pop
pop
xlat
test
call
dec
lret
dec
jno
mov
punpckhbw
int3
test
xchg
outsb
or
movsb
xchg
subps
pop
outsl
popf
jno
insb
cmp
add
xchg
sub
sahf
add
xchg
popa
adc
dec
sbb
stc
fsubp
mov
fsts
shll
push
mov
stos
or
imul
ljmp
ror
mov
iret
xlat
sbb
das
pop
enter
mov
aam
adc
das
roll
dec
or
fadds
daa
mov
stos
jo
test
cmp
sbb
shlb
xchg
cmpsb
sbb
in
add
scas
pop
jecxz
mov
rcrl
mov
jecxz
outsl
aas
mov
jmp
hlt
enter
jp
pop
shrl
mov
testb
push
out
cmp
jb
aas
lcall
dec
cs
clc
jo
stc
movsl
lret
cwtl
add
test
mov
out
cmp
das
movsb
inc
or
push
adc
fiadds
fldt
out
popa
leave
jp
or
psraw
popa
jp
cmp
sub
cwtl
repz
aam
mov
add
pusha
dec
mov
and
lods
mov
xor
aas
xchg
fisubrl
or
loopne
stos
mov
call
mov
movsb
aad
inc
or
mov
and
ret
sti
ljmp
cmpsb
mov
xor
add
psrld
ret
inc
or
dec
cli
sarl
adc
out
in
lock
xchg
jl
sub
pop
cmp
inc
jmp
mov
pop
in
mov
cmp
adc
sbb
or
cwtl
leave
mov
testb
ficomps
sarb
loopne
movsb
into
pop
cmp
idivb
popf
jge
inc
mov
std
jo
aaa
dec
add
repz
roll
nop
ficomps
sbbl
jle
jp
xor
and
fstps
dec
inc
mov
je
add
xchg
imul
mov
insl
sti
fstpt
movb
loope
sahf
dec
inc
in
dec
xchg
mov
xchg
popa
pop
mov
inc
inc
add
rolb
ret
push
test
and
pop
push
leave
str
loop
je
add
sub
jmp
les
mov
and
iret
daa
and
jle
cmp
rorl
icebp
jp
or
stos
and
adc
dec
push
mov
sbb
mov
mov
cld
popa
and
mov
sub
addr16
scas
hlt
mov
jne
icebp
daa
lds
lahf
cld
in
movsl
add
mov
rcrl
mov
xor
gs
aaa
cmp
jge
ja
dec
xor
daa
mov
aad
jle
mov
sbb
test
mov
fsts
or
pop
movsl
out
or
and
jmp
arpl
cmp
mov
mov
inc
xor
ss
out
lret
in
xchg
add
xor
or
xor
adc
jo
outsb
outsl
mov
mov
and
xchg
push
adc
cmpsb
rcll
out
dec
push
pop
test
lods
add
rorl
leave
lods
fabs
int3
and
repnz
jb
in
mov
mov
jbe
gs
mov
arpl
pop
ret
xlat
and
xchg
imul
pop
sub
jnp
data16
out
adc
jns
ss
jnp
ret
insb
mov
mov
out
ja
fdivrl
cmpsl
jbe
mov
insb
aas
pop
scas
jecxz
jecxz
out
sbbb
scas
push
shl
xor
aaa
mov
cs
and
dec
aas
jg
push
pop
roll
pop
inc
xor
out
lods
mull
dec
pop
and
iret
mov
jge
jp
and
popf
xchg
loope
ljmp
fadd
inc
gs
and
mov
pop
adc
sbb
testb
jb
sar
dec
add
aam
hlt
clc
sub
dec
fiaddl
ss
sbb
stc
dec
adc
xor
int3
mov
xor
mov
push
xlat
es
mov
popa
xchg
mov
ds
mov
and
mov
and
jae
mov
push
insb
call
mov
add
mov
sbb
and
sbb
add
dec
pop
scas
pop
rorb
in
mov
mov
aas
fwait
outsl
mulb
sbb
sub
add
cmp
aaa
push
int
and
xor
and
dec
lcall
cmp
xor
jmp
insl
adc
mov
dec
push
scas
dec
push
das
cmpsl
pop
imul
pop
call
sbb
inc
and
and
rcrl
scas
inc
dec
and
aaa
xlat
push
adcb
pusha
push
fmull
lods
xchg
xchg
adc
xchg
xor
mov
in
fwait
imul
aas
and
mov
adc
pop
cmpsl
negb
cld
test
pop
push
sbb
sysret
or
enter
add
xlat
mov
push
in
dec
in
mov
jb
xlat
lods
stos
jl
ljmp
sbbb
subb
int
lret
push
loopne
add
cli
mov
movsl
add
pop
scas
cmp
xor
mov
mov
rclb
dec
inc
das
adc
mov
scas
mov
scas
js
sub
sbb
aas
xor
xor
stos
pop
jle
adc
or
je
inc
clc
mov
pop
cmp
jno
lcall
stc
movsb
adc
lock
jnp
jg
daa
pushf
sub
mov
enter
xchg
fs
mov
pusha
and
arpl
and
dec
test
inc
pop
sti
and
cmpsb
hlt
cmc
fwait
push
ret
sti
jnp
lahf
jle
lret
xor
jnp
rcll
rcrl
sub
mulb
jns
pop
cmpsl
sahf
mov
push
sbb
lret
adc
int
add
push
mov
pop
sbb
jno
out
cmp
sbb
add
pop
les
xchg
inc
cmpl
mov
push
clc
cmp
pop
outsb
cmp
ficoml
xchg
out
push
cltd
sbb
xchg
inc
pop
andl
lods
cs
mov
insb
sbb
and
dec
jae
ds
outsl
xchg
sub
in
push
nop
into
adc
mov
fists
mov
push
fsubr
call
add
cwtl
cld
ret
pop
fists
movsl
insl
pop
das
dec
cltd
dec
and
xlat
imul
js
fildl
shrb
test
add
loopne
sub
lret
mov
insl
sub
rclb
into
mov
ror
push
push
cmp
dec
pop
or
insb
rcll
fs
roll
mov
cmp
xor
push
and
mov
jg
nop
dec
fidivs
pop
rorl
adc
sbb
movsb
mov
xchg
mov
xor
cltd
dec
mov
add
xor
sbb
mov
pop
xor
xchg
sbb
and
mov
jmp
cwtl
jmp
scas
addl
adc
sti
test
push
jg
fistpl
ljmp
add
push
daa
adc
xchg
inc
cmpsl
int3
or
mov
xchg
jnp
leave
pop
pop
orb
inc
idivl
or
jmp
xlat
rclb
and
mov
mov
aad
shr
and
add
jmp
outsb
cmpl
push
inc
jmp
mov
inc
arpl
fs
adc
arpl
pop
lcall
pop
xor
xchg
and
inc
loope
mov
or
scas
lcall
xchg
or
sub
cmp
clc
cmp
push
lcall
adc
outsl
out
icebp
lods
add
imul
cmpsl
sahf
or
testl
mov
inc
imul
mov
sbb
daa
push
test
push
bound
inc
imul
subl
inc
pop
xchg
inc
shr
dec
xchg
popf
popf
int
inc
mov
xchg
icebp
mov
jecxz
adc
adc
mov
add
arpl
stos
xor
pop
cmpsl
sub
data16
test
mov
xlat
adc
add
inc
cld
cmpl
gs
inc
and
xor
fisubs
push
xlat
push
xchg
ret
dec
push
mov
cwtl
cli
cmp
inc
movsb
xchg
push
dec
mov
stos
add
ret
ljmp
adc
cmpsl
and
cwtl
dec
lahf
repnz
lods
xchg
cli
mov
xchg
in
out
andb
andnps
insb
lods
test
cli
iret
xchg
mov
or
shll
aam
jno
cmp
int3
cmpsl
lret
cld
jg
push
cmp
pop
subb
popf
lods
and
jo
dec
lods
pop
scas
pop
lods
lcall
sbb
test
scas
test
mov
inc
or
mov
push
sub
aad
test
outsl
pop
mov
jnp
mov
jmp
sbb
fsubl
mov
cmp
sub
mov
or
pop
add
adc
ret
in
out
movsl
and
sbb
mov
scas
adc
scas
mov
mov
insl
xorb
jns
ljmp
sahf
je
icebp
mov
stos
add
in
sti
sbb
jns
aam
les
pop
leave
add
xchg
xor
cltd
enter
in
push
popa
cli
inc
and
imul
mov
push
gs
xchg
push
adc
ss
sub
mov
test
cltd
fwait
push
pop
rolb
dec
stos
fisttpl
fidivl
imul
sbb
xor
pop
xchg
dec
cmc
xchg
mov
add
subl
cmp
dec
xchg
cltd
in
or
add
divl
xchg
cmp
add
subb
add
test
mov
mov
pop
dec
cs
test
out
pop
adc
fdivr
pop
fidivl
dec
shrb
push
insl
dec
mov
xchg
sub
test
or
es
inc
sbb
bnd
mov
mov
les
mov
testl
jb
or
int3
jnp
test
push
fs
jle
aam
int3
lcall
jp
insb
int
inc
pusha
adc
mov
leave
cmp
cmp
xor
pop
ljmp
sbb
in
ret
xorl
push
mov
ja
fwait
cmpsb
iret
jns
movsb
mov
sbb
hlt
mov
sub
xchg
out
sbb
scas
int3
pop
or
adc
lods
cltd
cmp
bound
jns
sahf
cmc
jbe
loop
pushf
and
loopne
lods
mov
push
xchg
std
rdtsc
lcall
enter
or
leave
mov
inc
fiadds
aaa
mov
mov
ljmp
imul
xchg
test
cmp
repnz
hlt
pextrw
xor
dec
sub
mov
cmp
push
lret
or
push
dec
imul
adc
xorb
lahf
and
repnz
faddp
daa
test
sahf
movsb
sbb
inc
jmp
das
jge
scas
fcoml
aad
or
xchg
dec
or
xchg
add
add
sbb
je
add
scas
stc
jb
sub
push
add
stos
mov
sbb
mov
mull
sbb
cmp
sub
clc
xor
addr16
cmp
gs
jo
jmp
stos
jo
ljmp
mov
adcl
je
out
maskmovq
divl
sahf
fwait
jbe
xchg
aas
jnp
pushf
aas
aaa
xchg
out
xor
addr16
unpcklps
leave
add
icebp
test
js
inc
inc
lds
jno
lret
aam
fsubs
or
jb
stos
pop
and
adc
enter
adc
imul
mov
inc
and
outsb
xchg
push
ss
mov
clc
jecxz
and
nop
jno
mov
outsb
arpl
and
imull
dec
test
stos
dec
dec
mov
mov
add
or
je
rcl
fwait
idivl
dec
push
mov
dec
out
inc
cltd
jo
outsb
call
lods
cli
xchg
or
int
iret
xlat
ja
sbbb
mov
imul
inc
rcrb
clc
loope
cmpsb
outsb
mov
sub
pop
cmc
frstor
jecxz
call
sub
jmp
loop
and
jb,pn
mov
test
mov
jne
sti
out
push
out
adc
ds
popf
mull
fnsave
jl
mov
add
dec
jp
mov
aad
dec
out
adc
fists
add
popf
nop
fwait
int3
cmp
sbb
or
add
bound
cmp
enter
push
jg
push
fidivl
add
negl
iret
mov
shlb
addr16
push
out
xchg
imul
cmpps
cmp
xor
lea
arpl
push
jb
bound
mov
xchg
and
jno
xchg
lods
mov
ja
pop
loope
add
loope
in
mov
mov
pushf
jecxz
jg
jmp
mov
clc
lea
ljmp
es
sbb
ret
and
imulb
in
ss
jecxz
and
ja
mov
push
push
push
iret
push
arpl
fucom
or
xchg
and
movsb
push
fdivl
fwait
outsl
sahf
xchg
subb
rorb
mov
insl
mov
inc
inc
fwait
popa
sub
pop
cli
lret
add
push
ja
jmp
in
cs
mov
xchg
divl
xchg
dec
sbb
jae
add
dec
or
and
out
mov
outsb
icebp
or
cmp
outsb
sub
enter
int
push
inc
xor
subl
mov
mov
inc
movl
cmp
mov
lahf
push
jle
or
sti
insb
pop
cld
adc
fisttps
fisttpl
mov
sbb
or
pop
pop
ljmp
xchg
adcl
scas
cwtl
shll
jle
inc
lahf
stc
add
ds
cmp
jo
and
in
arpl
mov
leave
inc
xor
cmp
cwtl
daa
lock
dec
repnz
pop
mov
mov
nop
and
mov
mov
pop
test
lcallw
in
int
mov
lahf
imul
mov
mov
test
daa
cld
in
jecxz
fstpt
and
add
dec
xor
sarb
jo
push
jo
push
jnp
es
mov
arpl
mov
cmp
ud2
clc
fcompl
xchg
pop
xor
pop
sbb
mov
ss
gs
or
mov
out
sub
sbb
pop
fucomi
popf
xchg
aas
sti
scas
add
pop
insl
fs
packssdw
popa
cli
push
ljmp
ret
aaa
mov
xchg
jnp
pop
mov
nop
pop
sub
or
or
int3
xorl
adc
mov
jne
mov
mov
scas
sub
xor
push
insb
test
fmull
xchg
push
mov
dec
aas
inc
push
adcb
dec
mulb
xchg
scas
xchg
xchg
cmp
ret
mov
sbb
or
hlt
jno
adc
and
push
std
pop
sub
jbe
movsl
fwait
bswap
pop
js
sbb
push
mov
add
outsl
add
and
pop
cwtl
or
scas
cmp
jge
aaa
stc
fs
or
movsl
inc
ficomps
jmp
in
cmpsb
fldt
shll
mov
fcomps
ret
sbb
cltd
xchg
dec
add
pop
adcl
sub
xchg
mov
mov
fidivrl
in
add
insb
int3
fcompl
scas
mov
mov
pop
mov
test
lahf
pushf
pop
push
ja
sti
ffreep
dec
cmpsl
int
fnsave
lea
xchg
ja
sbb
repz
push
out
loop
mov
xchg
test
fldl
pop
xchg
add
iret
fnstenv
push
lds
cwtl
mov
leave
xorl
enter
fwait
pop
lret
imul
aas
jecxz
ja
iret
push
cli
inc
add
lret
aas
lds
loopne
int3
mov
mov
sub
pop
pop
or
fcmovnbe
cmp
outsb
insb
adcl
jo
jmp
pushf
divl
push
ss
dec
and
dec
mov
push
cli
dec
mov
cs
inc
mov
inc
shlb
mov
ret
push
popa
in
aas
test
test
stos
je
mov
fcmovnu
xchg
and
addl
jle
push
testl
and
sbb
pop
pushf
rorb
cmp
mov
fwait
mov
xor
lahf
testl
ret
mov
and
dec
adcl
push
mov
pop
popf
outsl
cmp
je
add
ds
sbb
jg
mov
psubb
int
les
nop
or
jb
subb
imul
les
fcoml
std
rorl
cmp
call
add
jl
mov
pop
leave
sar
mov
mov
mov
inc
mov
cmp
divb
aad
loope
add
int3
leave
mov
int3
rcr
adc
out
pop
add
sbb
jge
insl
gs
pop
add
inc
mov
aaa
add
cmpb
dec
call
mov
cmp
cmpsb
add
andb
jno
mov
mov
outsl
pusha
sub
adc
jae
pop
repz
pop
movsb
xor
mov
mov
mov
stos
out
mov
mov
push
sub
push
outsl
dec
fisubrl
mov
add
dec
xchg
jnp
add
xchg
mov
push
cmp
cli
sub
xor
inc
xorb
xor
int3
fcmovb
mov
xor
mov
and
insb
sub
cmp
imul
out
pop
nop
aas
push
jne
aam
jge
pop
icebp
mov
and
into
clc
movsb
pusha
mov
mov
and
cmpb
scas
dec
movsl
aam
mov
mov
sub
xor
popf
cmp
orl
mov
lret
addb
les
mov
mov
stc
jp
leave
dec
jp
add
pop
hlt
add
push
test
mov
mov
lods
shrl
mov
and
pushf
je
cld
out
mov
sub
and
pusha
insl
mov
pop
aas
stos
fiaddl
add
mov
sbb
repnz
icebp
das
pop
adc
sbb
addr16
lahf
mov
fldl
test
fdivr
cmc
adc
sarb
xchg
sbb
dec
je
dec
pop
aad
out
sbbb
cmp
mov
inc
xchg
scas
push
jnp
popa
cs
in
and
test
cmpsb
pusha
sbb
jmp
inc
mov
push
sbb
aam
movsl
jmp
adc
cmpsb
push
fisttpl
lods
pop
pop
outsb
or
sub
sbb
sbbl
add
dec
insl
cs
fsts
xchg
fdivr
mov
dec
pop
icebp
dec
enter
push
in
fimull
popa
lds
add
dec
cld
xlat
and
jg
in
inc
jmp
lods
adc
scas
cltd
sub
orl
pop
dec
ss
jge
sub
adc
mov
test
je
push
fcomps
into
push
sub
insl
and
xor
fcmovbe
cltd
imul
cmpsl
repz
dec
fdivrs
cmp
push
adcl
adc
jg
mov
push
shlb
cmpsl
pop
mov
pushf
jae
repnz
cmc
lret
lret
ds
pop
rol
xchg
dec
shr
out
xchg
cltd
inc
das
jnp
mov
ret
lea
lahf
ss
aad
cmpsl
cmp
inc
dec
xor
pop
hlt
pop
js
jg
sbb
hlt
mov
cli
arpl
iret
and
inc
push
push
jb
mov
adc
xchg
jl
in
inc
dec
sub
arpl
sub
mov
inc
pushf
in
shl
xor
repnz
dec
roll
lods
add
or
add
clc
adc
fs
pop
dec
cli
or
xchg
mull
mov
xchg
gs
and
cmp
insb
dec
and
mov
lret
mov
fldt
iret
and
fsubl
sahf
test
mov
mov
out
cmc
add
and
mov
popa
mov
jge
loop
and
jl
cmp
push
xchg
dec
std
out
mov
sub
and
xor
jo
cmpsb
mov
sub
cmp
inc
inc
xor
push
sti
jae
adc
mov
dec
cli
mov
lock
xchg
adc
mov
aaa
stos
lods
cmpl
cmp
cmpsb
ss
or
test
test
sahf
sub
or
sbb
pop
ret
dec
sbb
cli
mov
and
xchg
pop
leave
pop
add
jnp
movsb
or
pop
mov
cs
pushf
or
bound
enter
test
sbb
xchg
xor
add
loop
adc
mov
aas
out
adc
dec
push
cmp
pop
in
cs
adc
ja
inc
push
movsb
shll
imul
ljmp
stc
inc
xor
insl
xchg
ficomps
cmp
cmp
push
clc
and
cltd
push
inc
loopne
iret
xchg
aas
add
inc
scas
mov
mov
pop
test
call
lds
call
jge
jbe
push
loope
jle
jp
dec
lahf
lret
scas
int
in
es
dec
fisttpll
mov
add
adc
add
adcb
stos
mov
aaa
stos
cmp
test
cld
daa
add
mov
xchg
push
mov
adc
pop
aam
orl
sub
cmp
xor
je
and
cmp
and
iret
pop
lahf
ljmp
xchg
jae
inc
stc
jnp
add
imul
jno
cmp
lds
imul
lea
fisttps
daa
std
mov
dec
or
nop
mov
inc
fdivl
insl
in
out
or
lret
out
jne
clc
incb
sarl
pop
dec
rcrb
lock
stos
push
stos
out
pop
fcmovbe
insl
fcmovb
out
mov
jmp
rcl
inc
out
dec
fnstenv
inc
sub
xchg
add
pop
or
mov
xor
jo
in
adc
fadds
loope
mov
jecxz
and
iret
push
scas
pop
xchg
dec
ja
xlat
pop
mov
pop
dec
inc
stc
adc
jmp
outsb
jle
mov
lock
mov
xor
shrl
add
pop
push
adc
ds
mulb
add
sub
iret
test
sbb
arpl
repz
xor
repz
cmpsb
stc
data16
push
scas
ja
jl
mov
icebp
adc
pop
ret
add
sub
inc
sbb
mov
jle
shlb
scas
jno
dec
clc
repz
imul
mov
sub
push
jo
mov
push
xchg
inc
lods
imul
in
imul
and
lds
out
imul
cltd
lods
lret
push
pop
pop
jne
hlt
je
adc
ss
push
mov
sbb
pop
sahf
mov
push
add
les
shlb
pushw
dec
push
xlat
movsb
cmovp
pop
ret
dec
adc
and
xor
xchg
repz
jp
cmp
inc
adc
jl
daa
mov
or
mov
iret
xor
testb
xor
ret
and
pop
jb
cwtl
xor
inc
lahf
xlat
xchg
es
stc
inc
push
sbb
outsl
push
inc
lods
aam
out
or
sub
adc
xlat
stos
add
ds
xchg
sub
fstpl
shll
jbe
xchg
inc
adc
xor
pop
outsl
sbb
or
clc
and
sbb
add
jbe
addr16
test
or
aaa
aaa
ficoml
sbb
xchg
int3
adc
fimull
inc
pushf
rol
sbb
jne
adc
xchg
loopne
imul
icebp
dec
cmpsl
xor
or
or
xor
cmpsb
scas
jae
fmuls
lea
fucomp
movl
lahf
cmp
jecxz
or
mov
loop
ljmp
test
xlat
loop
xor
jnp
addr16
loope
pushf
jg
add
xchg
mov
or
popa
mov
loope
pushf
jnp
add
push
jbe
mov
and
xchg
movsl
inc
inc
lahf
cmpb
add
adc
add
add
out
cmc
idivl
jb
sahf
shl
add
shl
ljmp
fisttpll
xchg
sub
test
xor
inc
jno
adc
mov
adc
nop
mov
jecxz
out
inc
es
mov
jecxz
dec
std
and
adc
bound
xchg
jg
or
or
inc
push
in
lcall
mov
push
xchg
inc
sub
rol
into
cmpb
int3
pop
enter
pop
je
int3
lea
mov
sub
xor
testb
std
mov
outsl
sub
pop
xor
mov
fdivrp
dec
mov
ja
push
ficompl
sti
call
sti
or
and
subb
js
mov
xor
or
jge
call
loopne
mov
mov
repz
stos
inc
or
pop
pusha
or
add
dec
xor
mov
inc
inc
ja
dec
xchg
cltd
inc
cmp
pop
jecxz
and
hlt
cwtl
push
push
cmp
mov
mov
sbb
mov
pop
or
pop
xchg
shll
sbb
aas
and
aad
xchg
loopne
inc
push
push
ss
loop
mov
out
sbb
sub
mov
leave
sbb
sahf
sbb
mov
dec
push
jne
jmp
cmp
roll
lea
xor
arpl
sub
aam
push
push
fs
mov
adc
mov
xor
mov
clc
out
incl
push
sahf
daa
cmp
sub
push
add
loopne
push
lret
fadds
stos
cwtl
outsl
dec
adc
cmpsb
mov
cmp
add
push
out
mov
pushl
rorl
sbb
lahf
xchg
pusha
xchg
shlb
movl
rolb
xchg
add
insb
inc
popa
add
imul
and
fwait
push
int
push
je
inc
add
xchg
dec
jae
repnz
aas
call
movsb
pop
xor
jl
stos
cmpb
sti
or
mov
adc
pop
lds
jge
int3
jle
arpl
js
int3
pop
lods
adc
mov
dec
cmovne
iret
js
jecxz
das
or
jbe
rol
loope
imul
mov
stos
lock
sub
add
aaa
xor
movsb
fwait
cmpsl
sti
xchg
or
or
pop
das
loope
push
mov
sub
push
sbb
repz
and
imul
in
and
jnp
or
mov
xor
cmpsb
pop
test
fisubrl
mov
inc
orb
pop
shlb
leave
mov
push
orl
icebp
sbb
push
and
aaa
mov
iret
inc
sub
popf
xchg
vpsubusb
insl
clc
jp
push
pop
mov
shlb
fdivl
jns
pusha
sbb
mov
xchg
aas
testl
jecxz
shrl
into
hlt
call
lcall
out
aaa
mov
fwait
mov
jae
add
fidivs
popf
cwtl
cmc
pushf
dec
idiv
jb
ljmp
mov
xor
mov
cld
lods
fsubp
or
rorb
negl
sbb
xchg
dec
pop
decl
ss
mov
dec
out
mov
mov
lods
daa
ret
xor
stc
jns
lods
shl
pop
add
xchg
cmp
imul
rcrl
daa
in
add
mov
and
adc
or
les
dec
jb
cmp
mov
cmp
clc
mov
cmpsl
and
sbb
int3
inc
push
sbb
jecxz
jmp
or
lret
loop
sub
div
cli
sbb
pop
push
xorb
fnstsw
jne
lods
fistpl
mov
sahf
push
xlat
mov
ret
push
xor
pop
xor
ret
cld
lret
pop
and
sub
loop
cli
lods
xchg
fwait
mov
arpl
push
mov
das
out
push
rorb
mov
sub
xlat
arpl
mov
decb
push
and
icebp
pusha
jge
pop
cmpsb
mov
popf
and
js
dec
ret
cmp
mov
pop
jns
insl
sub
or
and
adc
cs
mov
xor
pop
mov
mov
test
imulb
out
add
pop
fldenv
nop
push
push
xorb
int3
mov
dec
lock
loopne
jg
xchg
jns
sub
data16
add
dec
cs
jo
cmp
inc
jmp
pusha
mov
ret
xchg
repnz
and
mov
ds
fs
mov
mov
ja
popa
sub
fiaddl
fnstcw
aad
inc
adc
push
mov
popa
movsb
xor
jno
ja
and
or
sub
in
sbb
pop
fcmovnu
sub
clc
jmp
repz
out
movsb
add
jbe
imul
jno
cmc
outsl
cmp
mov
mov
pop
jg
stos
adc
jno
std
xchg
add
fildll
cmp
mov
adc
pusha
sbb
js
xbegin
inc
mov
add
fldt
test
push
les
dec
mov
gs
add
jns
fdivp
ds
jl
bound
jmp
pop
out
pop
in
xor
mov
shll
sub
xor
dec
js
push
fimull
ja
clc
sbb
sub
mov
cmp
mov
insl
ret
cmp
or
pop
movsl
inc
test
mov
pop
leave
mov
popa
xchg
xchg
sub
xchg
dec
repz
sub
sbb
cmp
mov
addb
aam
inc
pop
loopne
shrb
push
sbb
arpl
testl
mov
push
es
jnp
mov
cmp
push
fnsave
cmp
xchg
imul
mov
jmp
pop
loop
call
push
push
popl
mov
mov
pop
push
sahf
insl
push
mov
inc
stc
mov
mov
dec
dec
xchg
sub
pop
add
push
or
push
lret
push
and
inc
xor
aam
lcall
idivl
jne
sbb
push
das
mov
xlat
push
mov
fwait
mov
sbb
cmp
dec
repnz
jnp
pop
push
or
and
add
fs
in
pop
lret
jmp
xchg
pop
popl
xchg
xchg
iret
leave
leave
test
test
jmp
stos
mov
into
push
pop
mov
sub
sbb
in
sarl
shll
jne
xchg
push
mov
rcrb
pop
pop
jae
adc
mov
mov
mov
xchg
ficoml
cmp
mov
sub
js
imul
movsl
cmp
push
int
aad
in
ret
jo
lahf
jmp
cmpsl
adc
jns
loopne
icebp
cltd
xchg
xchg
call
repnz
dec
xchg
scas
clc
and
mov
push
aaa
pop
jo
dec
cmp
and
cmp
frstpm(287
jge
cmp
jno
pushl
mov
andl
imul
mov
mov
fwait
pop
sbb
cld
push
cs
repz
add
or
dec
sbb
sbb
add
lret
add
xor
dec
enter
xlat
aaa
push
ljmp
add
lcall
mov
inc
and
iret
stc
mov
jbe
test
fwait
push
adc
add
inc
arpl
mov
mov
call
cmp
lods
fistl
jbe
and
in
dec
aaa
or
addr16
jne
cld
rorb
sarl
mov
insl
sti
mov
pop
in
cmp
loopne
mov
idivb
es
in
push
repz
ja
dec
incl
add
mov
push
mov
repz
movsb
cltd
sbb
shl
add
adc
pop
ss
mov
and
test
mov
lea
and
lcall
push
sub
jo
mov
xchg
in
sbb
in
or
loope
addl
mov
dec
mov
add
mov
ja
test
js
into
inc
lds
mov
xchg
and
cld
jo
fiadds
rcrl
ss
jecxz
call
addr16
pop
and
dec
dec
dec
test
jg
ret
roll
inc
hlt
lods
cmp
xor
xchg
jb
sahf
cmp
or
dec
cs
arpl
int
dec
jecxz
cmp
jmp
xor
adc
int
sub
lds
sbb
sub
cmp
push
nop
dec
fwait
pop
push
shll
repz
addl
leave
shl
test
in
xor
scas
imul
test
js
pop
or
idiv
jnp
js
mov
mov
inc
mov
jno
movsb
push
loop
icebp
push
add
mov
dec
fcompl
insb
mov
out
xor
mov
mov
loopne
mov
mov
sub
sbb
jae
out
or
lahf
daa
dec
outsl
cmp
notb
sbb
push
icebp
mov
dec
dec
fcmovbe
jo
repnz
rcrl
push
pop
out
pop
mov
stos
movsb
sbb
test
lcall
mov
and
mov
cmpsb
xor
subb
add
cmpsb
fdivrs
fisttpl
lcall
adc
mov
inc
and
and
sbb
scas
stos
mov
addr16
sahf
sti
ljmp
cmp
cld
movsb
pop
push
fimull
pop
add
imul
idivl
mov
mov
lods
popa
cli
adc
pop
push
pop
push
daa
jg
aas
outsb
pop
mov
aas
adc
js
mov
icebp
pop
add
cli
cmp
imul
inc
mov
or
inc
ja
loopne
je
ss
inc
js
hlt
test
les
test
push
in
aas
mov
push
pop
loop
add
bound
pop
das
or
pop
shll
iret
add
inc
mov
pushf
leave
pop
sub
pop
sbb
test
pushf
or
push
push
jbe
jo
xchg
movsl
push
rcrb
lds
int3
lcall
adc
and
mov
movsb
mov
cmp
cmpsb
dec
sti
out
push
out
mov
inc
jg
pop
cmp
dec
adc
push
xchg
add
xchg
and
jae
mov
mov
idiv
dec
xor
and
gs
jge
cmp
movsl
imul
popf
and
popf
lods
push
pop
sub
out
es
imul
cmc
fwait
mov
int
push
mov
mov
jbe
aad
ss
loopne
lock
and
mov
cmpsb
cmpl
lea
inc
rcrb
call
into
xor
mov
or
cli
out
stos
jg
aad
and
sti
insb
sub
mov
rorl
sub
mov
inc
adc
test
enter
pop
cltd
mov
mov
pop
and
stos
out
or
cmp
dec
rclb
insb
push
imul
jg
out
jae
inc
decb
nop
test
leave
mov
push
mov
cmpsb
imul
cmp
mov
sub
jg
xor
sub
add
imulb
jle
stos
popf
fwait
adc
dec
ljmp
mov
pop
idivb
stos
lahf
pop
je
testb
inc
dec
mov
and
pop
sbb
push
insb
cmpsb
xor
push
sbb
sarl
fnstsw
mov
and
cmpsl
cli
arpl
jnp
or
jae
lret
test
lds
pop
stos
push
lock
mov
adc
addr16
lock
test
cltd
lret
mov
add
adc
iret
xchg
movsb
mov
jmp
repnz
dec
fbstp
std
insb
fsubr
cmp
xlat
xor
jnp
test
jne
xor
pop
fdivrl
out
cli
loope
movsl
pop
arpl
bound
mov
and
lock
in
scas
pop
mov
jnp
push
sarb
rcl
call
jbe
decl
mov
ds
sbb
add
rorb
hlt
lods
pop
pop
push
sbb
popf
fbstp
adc
mov
pushf
push
adc
xchg
jo
pop
cltd
mov
loopne
ljmp
mov
repnz
shlb
filds
lods
in
lock
xor
pop
or
mov
cs
fcompl
cmp
pop
or
sbb
mov
and
sub
add
dec
ja
jae
lcall
pushf
mov
test
and
fistpll
pusha
scas
setp
dec
cmpsb
in
cmpsb
lret
jl
xor
enter
mov
insl
lret
jle
jb
ret
ljmp
in
sti
add
xchg
xchg
sbb
orl
outsl
lret
sbb
stc
pop
lock
loopne
cmp
xchg
or
es
sahf
dec
xor
mov
cmp
inc
adc
pop
jae
ljmp
inc
adc
outsl
mov
dec
dec
inc
inc
sub
fmulp
sbb
idiv
outsb
sub
test
roll
lock
dec
popa
xchg
mov
call
xchg
enter
nop
adc
mov
dec
repnz
xchg
out
imul
imul
lds
dec
ret
xchg
push
mov
jb
jmp
js
jmp
mov
int3
mov
repz
mov
jl
cli
sub
in
pop
movsb
xchg
lock
fwait
or
std
ret
lahf
xchg
out
mov
mov
cmc
pop
sub
adc
add
or
or
jae
jle
jmp
xchg
addr16
jp
fsubl
lahf
idivb
rcrl
or
cmp
lods
rorl
cmp
test
jmp
sbb
pop
test
es
sub
jo
xchg
dec
cmp
icebp
add
bound
addr16
imul
movsl
cmp
popa
fiaddl
mov
or
sti
sets
sub
mov
sub
and
lea
adc
repnz
push
mov
push
xor
adc
pushf
mov
adc
jb
adc
ret
and
and
mov
loope
mov
inc
mov
add
sub
enter
jge
add
dec
jecxz
jp
dec
mov
jle
call
jecxz
pop
inc
lds
mov
loopne
out
fnstcw
dec
mov
add
pushf
xor
int3
testb
pop
lock
lcall
or
xor
pop
mov
push
mov
fcmove
mov
in
add
push
or
fdivs
jp
dec
mov
je
push
jmp
push
jge
out
ss
inc
cmpsb
popa
adc
arpl
add
movsb
push
push
jecxz
lock
push
stos
jo
mov
stos
mov
push
add
jl
repz
sahf
and
sub
or
jns
daa
mov
jb
mov
or
aas
xor
aaa
daa
insb
leave
lods
xchg
xor
xor
fscale
loopne
in
pop
je
or
call
pop
xchg
data16
adc
xor
rolb
mov
in
dec
xor
jo
and
push
xchg
out
aad
pop
push
pop
clc
in
mov
cmp
sub
into
lret
es
enter
inc
mov
jbe
sbb
imul
je
out
pop
or
dec
dec
pop
jno
mov
imulb
sub
stos
pop
lret
mov
cmp
cmc
nop
mov
cmp
daa
jbe
outsl
inc
outsb
dec
mov
xchg
jge
inc
xchg
mov
les
dec
and
dec
mov
adc
inc
mov
lods
dec
push
out
sub
inc
in
inc
or
daa
add
daa
sbbl
pushf
and
pop
add
pop
dec
bound
xchg
mov
sti
scas
shlb
inc
cli
mov
in
shlb
rorb
or
ds
pop
mov
es
pop
cld
fs
adc
jo
push
add
cmp
and
jp
aam
repz
scas
cmp
push
add
addb
adc
mov
jb
outsb
push
xchg
in
aas
jp
call
in
mov
cmp
dec
push
push
jno
stos
aas
or
dec
je
sub
mov
mov
into
pop
loopne
push
aas
lret
jno
push
mov
inc
sbb
ror
fists
sbbb
jnp
aad
or
lds
mov
mov
mov
mov
push
jns
inc
inc
into
xor
mov
push
dec
pop
inc
repnz
in
inc
test
inc
scas
mov
pop
and
jl
rcr
jl
and
jg
fmull
mov
scas
shrb
xor
mov
sti
pop
bound
xchg
mov
cmp
into
mov
dec
lea
das
enter
adc
repnz
repnz
scas
fldl
lock
inc
jge
inc
sub
or
xchg
cmc
mov
sub
mov
adcl
mov
insb
push
mov
mov
shrb
jbe
ja
dec
or
stos
pop
loopne
add
iret
mov
je
inc
addl
shll
adc
aas
nop
outsb
outsl
movsl
iret
or
mov
inc
jo
shrb
mov
sbb
xchg
jb
add
jg
imul
jne
imul
and
repz
test
dec
scas
sarl
dec
jecxz
push
clc
adc
push
ret
jl
sbb
sub
push
test
fdiv
sbb
icebp
mov
clc
and
cmp
mov
push
pushaw
push
push
mov
int
push
or
push
sahf
int3
push
testl
imul
jp
aas
xchg
pop
pusha
add
pop
ret
jnp
popa
adc
lcall
xchg
xchg
movsb
decb
test
loope
pop
jle
gs
push
ret
mov
jle,pn
fs
test
in
lcall
popa
mov
mov
loopne
jno
icebp
or
mov
sbb
enter
lods
mov
lds
mov
push
or
jecxz
xor
cmp
cwtl
les
mov
mov
pop
push
cmpsb
andl
xor
stos
adc
or
out
into
imul
xchg
dec
sbb
jns
dec
mov
loope
in
or
sub
push
sub
mov
xor
add
movsb
loope
add
test
movsl
outsl
sbb
leave
bound
out
mov
sarb
lret
mov
sbb
inc
negb
pop
lods
push
jne
hlt
dec
mov
jo
scas
test
dec
xchg
mov
push
pop
fstpl
das
popl
sub
aam
hlt
mov
lods
and
fwait
imul
popa
and
xchg
ret
sbb
in
xchg
mov
iret
popa
sbb
pop
add
mov
cli
cmpsb
mov
push
pop
shl
xor
ficoml
hlt
clc
int3
inc
sub
and
jne
mov
mov
adc
mov
mov
push
std
pop
cmp
out
adc
jo
sbb
pop
xchg
dec
mov
out
cmp
mov
faddl
mov
xchg
imul
cmp
popf
xchg
sub
aad
fimuls
sahf
adcl
cmpl
nop
or
mov
aas
leave
sbb
aam
shlb
mov
fsub
insb
repz
in
loopne
out
pop
mov
test
fwait
stos
aad
clc
daa
cmp
mov
pop
xor
push
ljmp
aaa
sbb
inc
les
mov
fldt
arpl
mov
adc
push
sbb
xor
mov
insl
xor
xor
outsb
adc
nop
dec
hlt
mov
push
adc
in
popf
inc
pop
push
or
xorl
mov
xchg
mov
xchg
adc
cs
fbstp
sbb
sbb
cmpsl
sub
dec
popa
les
mov
jmp
or
lcall
les
shrw
test
in
incl
rorl
jg
xchg
test
mov
push
lock
mov
leave
mov
mov
je
push
inc
or
out
cmp
lret
mov
clc
inc
or
lret
xchg
bound
icebp
or
fsubrl
cmp
rorl
pop
or
cmc
xor
and
outsb
dec
sub
nop
sub
add
imul
inc
lret
push
in
mov
adc
xchg
jno
and
fisttps
hlt
in
push
bnd
mov
jl
fxch
lods
push
mov
pop
sub
notl
mov
addr16
xor
gs
ret
enter
or
incb
and
xchg
lret
mov
dec
dec
leavew
and
lret
out
andw
add
push
lahf
jge
add
mov
mov
xchg
aaa
lea
fs
xor
or
pop
test
fisttps
icebp
test
sbb
icebp
add
mov
dec
in
cltd
sbb
fnstenv
xor
xor
outsb
cs
das
dec
mov
sbbl
sub
xchg
mov
xchg
dec
cli
fwait
dec
out
loop
test
cmp
pop
sub
int3
fnsave
mov
stc
and
in
adc
push
or
cmp
push
repnz
jmp
sbb
adc
scas
lods
pop
xchg
or
adc
push
mov
add
adc
jo
popa
aaa
xchg
fistpll
add
mov
jb
jp
inc
jb
mov
cmp
mov
cmp
es
jmp
js
pop
das
in
inc
lods
mov
outsl
jo
lret
inc
jecxz
mov
lods
mov
lea
daa
std
adc
jp
inc
popf
repnz
xchg
xor
cmpsb
dec
lods
es
fldt
cmc
dec
xchg
mov
das
sub
adc
out
sbb
xchg
ss
and
insb
xchg
fcompl
bound
jmp
lahf
xor
out
mov
push
imul
jne
sbb
rorb
and
xchg
out
push
dec
add
std
xor
outsb
adc
lcall
mov
icebp
mov
lock
outsb
cmpsb
aas
and
jmp
popa
loopne
inc
and
outsl
mulb
stos
dec
out
sarl
out
jno
es
lods
rolb
rcr
lea
mov
jge
jl
push
or
ret
stos
repz
mov
popf
inc
mov
ja
sbbb
int3
xor
jne
adc
pushf
xchg
sub
adc
loopne
add
fldcw
mov
cmpsl
or
cmp
daa
jmp
repz
xlat
mull
xor
cwtl
aam
sbb
pusha
inc
push
mov
lcall
push
sub
inc
pop
ficoms
adc
mov
jb
cmpsl
scas
cli
jne
stc
xchg
jo
movsl
dec
fistpll
addr16
movsb
or
inc
arpl
je
jns
test
mov
repz
jo
call
dec
rcll
push
mov
out
lea
cwtl
pop
popa
cmp
xchg
sbb
in
adc
xor
clc
arpl
lcall
sbb
popa
outsl
std
sbb
dec
scas
jmp
pop
loop
cmp
push
pop
pop
add
xor
test
test
xchg
xorl
inc
test
mov
sbb
mov
dec
mov
lret
into
scas
mov
or
pop
outsl
div
xchg
pop
out
mov
fcomip
lock
aas
das
leave
lods
aas
cmpsl
subl
loope
data16
shll
push
mov
or
add
bound
les
lahf
popa
lock
mov
movntps
rolb
jge
mov
cmp
mov
sbb
push
fwait
add
ss
xchg
cmp
loope
mov
iret
out
adc
sbb
shll
inc
shr
and
add
push
ljmp
xchg
loopne
loop
push
mov
ret
add
call
or
fld
pusha
pusha
jp
mov
loope
lds
clts
scas
jle
ret
jle
push
cmp
or
in
mov
mov
arpl
adc
inc
push
push
out
lcall
aas
xor
fs
sahf
adc
jb
adc
jns
mov
mov
cmp
dec
push
add
jb
sbbb
mov
in
sbb
cs
cmp
into
jo
je
adc
adc
add
and
cmp
mov
daa
dec
cs
jbe
sub
ret
jno
notl
lret
enter
testb
les
sahf
jle
adc
pop
test
push
cmp
mov
fcomp
jl
lds
shll
jns
leave
loop
mov
inc
pop
push
pop
lea
mov
mov
mov
dec
out
jno
adc
inc
xor
fimuls
test
and
addr16
loop
xor
test
mov
cmp
stos
addr16
adc
cmp
arpl
cmp
or
mov
push
mov
mov
adc
xchg
inc
and
mov
push
xchg
xor
out
cmpsl
mov
cmp
push
push
inc
dec
mov
dec
mov
push
pusha
js
push
push
loopne
cli
into
test
cmp
or
das
inc
xlat
push
pusha
jge,pt
loopne
and
loope
push
dec
dec
ja
dec
mov
mov
lret
xchg
popf
jl
xchg
lods
iret
dec
addr16
xor
lods
cmp
cwtl
lods
pop
push
lock
add
insb
sub
or
js
int
mov
or
clc
cmp
sti
push
pop
or
ss
out
lret
sbb
mov
decl
mov
gs
or
cli
pop
je
in
cmp
fidivrs
cmp
cmp
ret
jno
data16
xchg
lock
cmp
xor
and
test
test
pop
daa
decl
inc
popa
push
je
aaa
sbbl
xor
out
cmpsl
fisttpll
add
ret
dec
pop
scas
push
inc
jmp
test
or
mov
jmp
jle
dec
popf
lods
icebp
pop
test
pushf
loop
das
and
dec
sub
notb
hlt
and
push
cmp
popf
outsl
dec
push
js
push
aaa
mov
scas
gs
in
dec
adc
mov
leave
jbe
cmpsl
dec
daa
mov
ds
addr16
xor
pop
das
addr16
clc
add
lcall
xor
mov
fistpl
clc
lahf
xchg
sub
pop
aam
lret
xor
mov
out
push
mov
mov
mov
push
jmp
sub
mov
es
and
fistpll
mov
aaa
push
dec
ret
fstpt
cld
mov
jne
mov
fdivrs
jno
mov
jae
stos
push
jne
and
iret
mov
and
nop
ret
pop
add
jbe
xlat
inc
push
inc
adc
ds
call
cltd
dec
pop
xchg
dec
mov
data16
xorl
xchg
and
jmp
mov
ret
cli
movsb
push
ret
xor
add
mov
lret
jg
pop
xlat
pop
push
add
lret
adc
jecxz
xor
out
lea
fwait
aas
in
in
outsl
rcrl
dec
mov
fimull
dec
cmp
in
xchg
sarb
add
jge
inc
dec
popf
adc
push
push
in
in
cmp
mov
shll
aad
dec
pop
and
add
mov
dec
mov
mov
cmpsl
and
xor
lock
push
and
pushf
cmp
xchg
xchg
ds
add
adc
jnp
clc
icebp
push
scas
js
icebp
xor
adc
adc
inc
lcall
mov
repnz
or
jg
rol
test
sub
and
jle
mov
xchg
jge
mov
mov
add
fs
mov
cmpsl
faddp
push
hlt
push
rcrb
scas
push
jnp
add
stc
fs
mov
jg
lret
fcompl
nopl
xchg
xor
mov
fdivl
idivl
mov
jle
lcall
or
sub
cmpsl
or
or
inc
cs
mov
sbb
clc
icebp
sub
jge
es
sti
pushf
and
cmp
bnd
mov
repz
aaa
in
stos
pop
jmp
sub
mov
cmc
scas
xchg
push
or
das
decl
cli
lret
inc
mov
stos
std
jno
shll
arpl
jl
mov
xchg
leave
xchg
push
sub
mov
sub
enter
movsl
ret
sbbl
jmp
add
add
pusha
rcrb
dec
idivb
out
iret
aad
dec
adc
std
cltd
pop
xlat
repz
sub
pop
add
hlt
xchg
pop
push
pop
int
cs
imulb
mov
xchg
sbb
iret
hlt
add
jge
push
popf
xchg
jae
pop
cmpl
ret
scas
pop
sbb
adc
ficoms
and
lods
lods
add
bound
cmc
sub
xchg
in
sub
sub
lcall
faddl
lcall
cmpsl
jbe
xchg
xor
cmp
pop
mov
in
clc
xchg
lds
push
ret
or
sub
pop
push
cmc
test
pop
mov
xor
and
xchg
mov
cmp
inc
xchg
addl
add
call
hlt
ss
jae
stos
or
sbb
fidivrs
sbb
nop
sar
mul
mov
out
inc
out
roll
mov
cmp
sub
add
cmp
push
dec
pop
fwait
insl
addr16
cmp
cmpl
movsl
xacquire
insl
or
cld
cli
loop
lret
mov
sub
lret
push
lods
test
jge
cmp
or
repz
addb
dec
ficompl
mov
adc
mov
push
repnz
popa
imul
xor
xor
into
fsubs
aad
ss
ret
sbb
lret
clc
mov
xchg
cmp
mov
xchg
pop
lock
orb
add
xor
sti
in
int
sub
mov
xchg
mov
insb
lahf
movsl
int3
sub
xor
mov
test
andb
xchg
xchg
pop
rol
cmp
int
jge
lods
inc
inc
xchg
rcrb
jg
jmp
fdivl
and
xor
or
adc
mov
dec
in
test
btcl
push
xor
dec
adc
iret
sbb
fdiv
int
pop
xchg
push
rcrb
xor
sbb
icebp
xchg
rclb
gs
and
jge
cli
pop
cmp
jbe
mov
jbe
xchg
jmp
fnstsw
mov
or
shr
add
sub
jnp
mov
nop/reserved
jb
mov
ljmp
xchg
xchg
or
clc
pusha
movsb
adc
sub
ds
cmp
cmp
push
aaa
das
lea
cmp
aam
pop
xchg
scas
inc
ret
in
jle
imulb
jp
pop
shrl
inc
rorb
clc
xor
push
icebp
push
stos
and
or
out
and
adc
mov
cmp
ds
mov
addb
add
fisttps
xor
movsb
test
push
in
nop
dec
lcall
push
pop
pop
cltd
jle
and
xchg
pop
xor
adc
popf
push
pusha
mov
mov
enter
out
mov
cmp
popa
jmp
in
shll
mov
jg
in
add
push
cmpl
lahf
movsl
popf
daa
les
ret
incb
push
jl
rcll
jmp
adc
mov
xchg
test
popa
lret
adc
sbb
leave
sbb
xchg
mov
push
pop
inc
jecxz
dec
or
and
pop
dec
mov
aaa
daa
test
fistpll
and
jns
sub
pop
push
adc
shlb
out
jp
les
push
push
jg
xor
push
jg
mov
cwtl
mov
aad
aaa
jae
and
pop
out
sti
sub
pop
xlat
pop
sub
jae
addr16
push
mov
mov
andb
int3
lret
sub
sti
fldenv
nop
or
cmpsl
lds
outsb
cmpsl
jp
clc
pop
mov
xchg
fwait
mov
lret
push
icebp
adc
es
movsl
pop
sti
aaa
xor
add
cltd
mov
stos
imul
xor
stc
jnp
addl
fldcw
ljmp
loope
push
cmc
adc
add
push
call
pop
test
or
popa
aad
imul
jns
leave
inc
and
mov
sbb
and
jno
jb
jecxz
hlt
push
call
inc
add
jae
add
push
pop
sbb
cli
fsubs
lods
fildl
dec
lods
movsl
stos
and
cli
adc
call
lods
or
lds
xchg
pop
inc
cmp
mov
mov
push
push
les
mov
and
cmp
push
or
nop
push
dec
adc
pop
int3
sub
repnz
dec
push
xor
sbb
mov
pop
test
cmpsl
xor
inc
dec
fwait
sub
push
out
lret
out
mov
lods
jp
adc
xchg
stos
jnp
test
xchg
pop
ret
or
lahf
je
push
mov
aad
popa
mov
xchg
push
pusha
rcrb
adc
rcl
das
pop
mov
add
sbb
adc
stos
clc
mov
inc
mov
cmp
ja
jmp
push
adc
inc
jne
aam
lea
sbb
sbb
inc
mov
jno
daa
scas
sarb
mov
int
pushf
je
push
outsl
repnz
rorl
dec
push
lea
mov
mov
imul
imul
xchg
and
inc
mov
mov
mov
daa
lahf
mov
mov
xchg
ja
insl
lcall
fildl
ljmp
in
insb
imul
out
pop
mov
mov
aad
aas
dec
cmpsl
popa
or
in
xchg
or
shl
lds
sbb
cmp
aad
push
movsl
or
stc
pop
aam
icebp
or
fs
mov
dec
jecxz
jg
sub
test
cmp
or
shlb
or
cmp
jl
ret
test
mov
fcompl
dec
outsl
inc
fsubrl
lods
inc
lcall
test
push
cmp
dec
jl
adc
or
sti
sub
repz
addr16
jg
push
addr16
enter
jae
aam
add
adc
in
imul
xor
jns
ljmp
fildll
jae
mov
cwtl
fsubr
rorl
xchg
push
test
xor
push
divb
insb
orb
cmp
loopne
cmp
add
fs
fidivs
or
inc
cmc
aam
mov
cwtl
scas
sub
sub
mov
andl
fs
add
xchg
dec
adc
add
imul
mov
sub
xor
or
leave
adc
xor
cmc
inc
inc
add
cmp
mov
jl
sub
cld
add
inc
imul
sub
lret
dec
mov
ja
aam
xchg
in
cli
pop
push
in
cld
lds
xorl
adc
pop
push
sbbb
nop
in
repnz
icebp
ja
stos
fs
mov
fcomp
xor
aaa
adc
aas
push
sbb
and
adcl
stc
push
and
push
rorl
pop
add
sbb
inc
jp
jns
jbe
mov
pushf
push
lcall
add
pop
ljmp
inc
in
lods
fcoms
xchg
push
fists
mov
out
ficomps
push
shrb
mov
xchg
daa
aad
mov
pusha
sub
push
aam
call
push
repnz
mov
mov
or
insl
js
loopne
test
in
rcll
imul
outsl
or
mov
mov
add
cmc
hlt
notl
movsl
pop
shrb
daa
mov
cmp
stc
imul
je
push
cmp
push
mov
andl
ret
and
pop
adc
subl
push
mov
adc
jo
or
rorl
test
mov
and
int3
dec
pop
push
lea
int3
cmp
insb
adc
and
lahf
xor
cmp
and
repnz
orb
or
rcrb
mov
dec
pop
cmp
sub
aaa
or
mov
fidivs
popa
mov
daa
scas
repnz
imul
popf
out
fcoml
inc
mov
stos
jg
sub
inc
push
mov
shll
and
xchg
dec
mov
and
lret
jmp
mov
pop
jmp
in
jg
mov
ljmp
jl
adc
in
lds
fs
repnz
or
stc
mov
or
and
xchg
xor
popa
cmp
xor
int
mov
mov
jns
xor
lahf
movsl
cmpsb
inc
xchg
sub
sub
adc
fnsave
sub
pop
jge
dec
test
or
arpl
jne
loope
fcomps
inc
push
jne
sbb
mov
jle
nop
mov
sub
mov
outsl
icebp
lcall
test
test
mov
xor
cld
lods
out
test
cmp
mov
inc
sub
mulb
xor
mov
sub
jnp
pusha
mov
cmp
mov
push
insb
mov
adc
mov
es
mov
inc
fadds
or
cmp
mov
jl
mov
mov
jp
mov
mov
push
jl
or
rorl
adc
jae
pusha
mov
test
push
mov
mov
cld
lahf
je
cmp
inc
shlb
add
loope
xchg
or
ds
sahf
or
xchg
mov
adc
out
leave
or
push
in
inc
int3
lock
jecxz
call
test
pop
mov
mov
mov
dec
imul
jo
mov
popf
ror
add
mov
adcl
mov
cpuid
and
dec
adc
lahf
ret
lods
fsubs
or
add
mov
shl
dec
fisttps
rcrb
xor
jae
shlb
aaa
test
xchg
add
jg
add
outsb
add
setns
out
mov
push
mov
mov
sahf
out
or
cmp
pop
dec
xor
or
lahf
fcmovnu
mov
das
scas
mov
inc
out
cmp
lods
stos
jmp
adc
test
rol
sbb
mov
inc
rcl
stos
enter
movsl
mov
testl
lcall
cwtl
push
add
pop
es
xor
xor
out
loope
adc
test
push
int
iret
enter
xchg
adc
stc
mov
lods
add
add
sbb
ss
push
subb
push
pop
mov
test
jp
sbb
in
mov
imul
push
in
fisubs
push
xor
movsb
push
addl
jo
sbb
inc
mov
cld
sarl
push
mov
or
jle
push
icebp
adc
mov
out
sar
into
lcall
sbb
adc
mov
adc
fbstp
cs
rcl
mov
test
ret
sbb
adc
pop
enter
dec
adc
popa
call
jl
mov
or
dec
call
ror
jge
ffree
gs
jmp
and
sahf
xor
and
push
sti
or
jl
incb
xchg
and
jne
xchg
push
mov
push
inc
mov
in
sbb
mov
lcall
rcll
stos
gs
cmp
test
outsb
mov
daa
shr
aam
cmp
jecxz
sarl
mov
inc
bound
or
and
push
clc
fists
and
lret
imul
sbb
pop
or
lret
pusha
lea
mov
xor
xchg
add
js
into
mov
ret
push
js
stc
ljmp
js
imul
push
rol
ficomps
insl
imul
mov
aas
movsl
js
sbbb
je
or
insb
mov
push
jbe
hlt
add
mov
pop
add
cmpsb
inc
xlat
iret
dec
sti
sub
pop
out
mov
xchg
add
dec
mov
xor
mov
mov
loopne
jns
mov
sbb
push
ret
and
pop
loop
aad
jbe
dec
inc
test
add
lcall
jae
sub
sub
xchg
lret
repnz
aam
lock
fbstp
ja
and
pop
and
insl
imul
mov
push
push
or
rorb
and
sbbb
cvtpi2ps
lret
dec
aam
jg
xchg
call
mov
pop
add
sti
xor
mov
push
jle
push
addr16
push
ljmp
mov
pop
ss
jne
std
imul
orb
out
fcompl
mov
pusha
mov
sbb
fidivs
int
and
iret
lret
mov
mov
push
sahf
lahf
lahf
fld
add
jns
sbb
jnp
inc
repnz
in
or
mov
sub
xor
scas
bound
setb
mov
inc
jb
dec
pop
stc
aam
mov
dec
shr
sti
and
adc
sbb
imul
das
xor
pop
shrb
inc
and
xchg
add
adc
cltd
jns
xchg
scas
jno
jno
mov
mov
mov
pushf
jnp
xchg
je
stos
push
sub
add
cmp
push
icebp
daa
aad
and
dec
and
and
mov
mov
loopne
rolb
popa
enter
sbb
fdecstp
outsl
enter
and
mov
test
cwtl
jno
cmp
das
scas
cmpsb
cmp
and
ss
movl
sub
les
push
lahf
xor
in
outsl
push
test
lds
dec
mov
arpl
xor
push
pop
nop
add
xor
adc
shl
pop
jae
sub
pop
jl
je
mov
jmp
xor
neg
cmp
shlb
pop
cmc
push
jb
sbb
adc
pushf
cld
push
cltd
imul
push
mov
mov
inc
daa
nop
bound
addr16
movsl
leave
std
ljmp
sub
sbb
pop
ret
std
cmpsb
mov
iret
and
push
ficoms
scas
mov
add
mov
xchg
add
aad
in
sti
iret
loopne
ret
stos
sbb
jecxz
fwait
cmp
adc
sub
cmp
out
popl
pop
push
xor
xor
sub
addr16
subl
int3
dec
out
mov
sbb
jle
dec
mov
mov
icebp
inc
popf
and
and
scas
push
lea
pushf
jmp
lods
rorb
xor
clc
cmp
enter
push
jns
out
test
mov
ss
pop
fildl
xor
cmp
inc
mov
int3
and
adc
dec
fldt
es
mov
in
into
test
enter
lock
mov
sub
aaa
in
outsb
dec
fdivl
addl
dec
mov
cltd
xlat
jne
push
jle
aaa
add
xchg
dec
daa
push
jmp
sub
rcrb
in
add
shlb
lcall
int
add
mov
dec
mov
cli
mov
push
xchg
test
outsb
popf
sub
dec
dec
push
in
xor
cltd
fwait
dec
jb
lea
jbe
ret
rorl
adc
call
pop
pop
dec
jne
push
xchg
sub
movl
shll
xchg
lods
mov
stos
jb
ret
pop
push
enter
insl
cli
sbb
cmpsb
push
fadd
sbb
int
adc
test
popa
sbb
jp
dec
cld
andl
and
movsl
insl
mov
arpl
and
push
flds
outsb
cli
jl
inc
fisubrs
sbb
push
mov
pop
xlat
outsl
or
ja
sbb
jle
push
pushf
iret
xchg
fwait
or
add
cmp
pop
stc
ljmp
adc
pop
sbb
and
mov
inc
cmp
or
jnp
data16
xchg
pop
sub
in
push
or
test
sbb
adc
sub
dec
outsl
pop
dec
jne
repz
xchg
int3
xor
sub
subb
dec
add
andb
js
es
push
pusha
aaa
andl
push
fwait
data16
test
movsb
stos
test
xor
mov
cs
icebp
cltd
sub
jns
sbb
add
lret
sub
pop
pop
xchg
incb
sti
aaa
xor
or
pop
icebp
loop
inc
push
aaa
ja
aaa
mov
mov
xchg
inc
shll
pusha
xor
les
mov
cwtl
add
add
nop
ret
cmp
mov
stos
sbb
jnp
loope
cwtl
sbb
push
jo
xchg
ljmp
scas
out
cmp
out
in
shlb
or
mov
popa
test
xor
xlat
add
sti
xchg
xchg
mov
xorl
les
xchg
mov
adc
pop
xchg
xor
or
stc
sub
shrb
jb
enter
gs
enter
jb
ds
mov
pop
mov
stc
aas
ja
pop
push
lcall
cmpl
or
test
jbe,pn
lea
movb
sbb
pop
pop
clc
mov
mov
lock
and
stos
mov
lea
ficoml
movsb
jmp
out
push
ljmp
add
adc
shr
pop
xchg
jbe
jb
test
test
sub
jg
sub
rolb
xor
aas
pusha
ja
fildl
mov
movsl
xchg
inc
call
int
loopne
mov
sbb
add
mov
sbb
das
shlb
sbb
and
mov
mov
stc
and
popa
addr16
cmp
xor
rorb
ja
xor
into
mov
fs
jbe
iret
sbb
mov
pop
jge
idivb
cmpsl
or
lock
shlb
notb
xor
mov
pop
lret
sub
sbb
xchg
js
adc
adcb
das
mov
call
divb
imul
fldcw
push
test
pushf
pusha
and
xchg
sbb
aas
cmp
sbb
fwait
push
in
adc
in
call
sub
sub
mov
inc
ss
pusha
jmp
or
out
jb
scas
lret
ja
insb
ret
sti
pop
mov
sahf
mov
add
xchg
push
out
inc
sbb
sti
das
out
aam
mov
sub
aaa
cli
cmp
movsl
push
ffree
aaa
push
out
pop
sti
lods
lret
and
push
xor
xlat
stos
mov
sahf
repnz
add
push
and
dec
movsb
xor
pop
roll
ss
push
imulb
out
jp
into
xor
jbe
ja
sti
sbb
in
inc
movsl
sbb
outsb
jcxz
jmp
adc
sub
lock
mov
lahf
mov
pop
out
sub
dec
faddl
inc
push
push
into
xchg
out
lret
mov
add
rcpps
sqrtps
addr16
mov
push
outsl
insl
dec
mov
pusha
test
mov
or
and
sbb
imul
mov
sub
outsb
clc
nop
and
xchg
mov
notl
jge
into
sub
mov
lods
jns
jb
xor
sub
mov
dec
add
pop
fisubrs
push
loope
dec
cmp
jecxz
mov
leave
mov
gs
out
lock
jo
and
sub
sbb
lret
pop
xchg
inc
into
lahf
repz
out
mov
and
fildll
jae
push
mov
mov
mov
dec
stc
pusha
xor
test
mov
pop
cld
inc
out
adc
jp
or
inc
ljmp
iret
arpl
jg
movsl
scas
pop
pop
cwtl
add
push
popf
dec
fbld
test
mov
cmp
sub
push
sahf
pop
flds
scas
inc
shrl
sub
jno
or
loopne
add
add
sbb
loop
icebp
sbb
ljmp
mov
sbb
ret
mov
iret
stos
insb
insb
insb
dec
in
int
jo
call
out
or
mov
jne
mov
js
iret
sbb
inc
aaa
sti
xchg
mov
inc
and
add
and
cmp
mov
dec
xchg
or
push
xlat
outsl
and
ja
outsb
iret
mov
pushf
movsb
dec
mov
pop
fdivr
pop
andb
adc
sahf
roll
push
popa
or
push
idiv
jne
pop
shr
cmp
push
sbb
add
insl
iret
mov
pop
movsl
jno
pop
adc
xchg
mov
xchg
jecxz
mov
jle
fidivrs
sbb
in
bound
icebp
dec
mov
testb
icebp
inc
jmp
pop
inc
fimull
jle
mov
fwait
shr
cmp
test
hlt
imul
cmp
sbb
dec
mov
cmp
inc
cmpl
cmpsb
or
jbe
in
dec
bound
fsubs
jp
add
pop
add
hlt
imul
push
stc
mov
inc
cs
aas
outsl
sub
fs
loope
test
test
jl
fnstcw
pop
shlb
pop
xchg
sbb
xchg
insb
xchg
scas
push
dec
cmp
das
push
stos
mov
push
test
or
cwtl
ds
sti
stc
adc
sub
gs
out
ret
mov
xor
stc
pop
sbb
fists
or
out
les
jno
pop
subl
lea
cltd
cmc
test
mov
or
dec
imul
data16
imul
aaa
push
les
and
and
ret
inc
push
stos
fxch
sbbb
pop
out
dec
xor
stos
loop
adc
mov
cmp
or
mov
movsb
loop
icebp
inc
aas
jge
scas
ljmp
shl
test
add
adc
std
outsb
es
dec
popa
jnp
dec
sbb
dec
mov
jbe
imul
iret
push
ss
sti
mov
mov
jge,pn
add
sbb
xchg
jge
mov
mov
xor
lock
popl
push
int
pop
dec
outsb
inc
lock
lahf
inc
test
jp
enter
cmp
mov
test
mov
sti
push
pop
imul
mov
mov
mov
xchg
jecxz
xchg
mov
cmpb
testl
adc
or
lods
sahf
sub
cmpsl
in
sti
das
stos
sbb
test
mov
lods
mov
cmp
mov
shlb
xchg
ret
or
addl
push
int3
in
out
mull
clc
cmpsb
inc
ljmp
ja
jne
mov
int
outsb
das
movsl
dec
pushf
sub
xor
cmp
xchg
mov
xchg
push
dec
xor
pushf
pop
pop
cmp
movb
or
mov
bound
testb
call
out
pushf
fisttpl
xlat
in
jge
pusha
cmp
sarl
mov
mov
adc
adc
mov
hlt
and
clc
divl
cwtl
fidivl
pop
mov
lret
loop
repz
hlt
mov
jp
lea
lcall
call
test
push
pop
je
pop
fsubrl
xor
jecxz
sarb
pop
insl
icebp
pop
add
out
cmovne
dec
lret
das
pop
addl
repz
xor
icebp
jno
lock
call
stc
shrb
rol
lods
mov
cmp
xor
lcall
and
jne
inc
lods
or
sub
jmp
mov
bound
repnz
xchg
mov
adc
jbe
lret
pushf
lret
mov
mov
leave
gs
xchg
jnp
je
sub
dec
lods
shlb
lock
sub
mov
add
lods
adc
jge
sub
mov
negb
pop
loope
xor
rcr
add
push
mov
cmp
push
mov
loope
stc
ret
and
les
and
hlt
dec
add
lea
shlb
xor
dec
ss
jnp
movl
xchg
aad
adc
xor
cmp
add
sbb
nop
mov
data16
inc
pop
dec
adc
lea
imul
ficompl
cmp
push
pop
jg
jp
in
or
enter
ds
out
mov
dec
jge
cmp
sub
int
out
add
addr16
inc
mov
adc
lods
adc
out
mov
iret
scas
and
js
movsb
inc
mov
addr16
fistl
sub
icebp
push
rcl
cmp
fdivrl
pusha
pop
aad
dec
and
dec
mov
sbbb
sbb
test
jle
inc
in
lret
inc
mov
jg
fs
stc
add
jmp
sbb
push
pop
sub
mov
incl
stc
xor
enter
insb
jle
rcll
or
hlt
mov
stos
mov
add
lcall
dec
push
adc
ret
dec
loope
shlb
jbe
ret
ficompl
sbb
fadds
leave
lea
popf
ret
mov
jle
jnp
jmp
inc
cmp
mov
aas
int3
ds
mov
std
sbb
xor
mov
xchg
subb
sbb
mull
adc
inc
test
inc
jno
bnd
notl
mov
mov
pop
jecxz
call
mov
popf
out
jae
inc
push
call
mov
sti
pop
call
loope
daa
cs
stos
sti
mov
mov
xchg
mov
jae
jmp
mov
pop
push
stc
xor
jmp
loop
repnz
jnp
idivl
or
mov
pop
add
pop
lock
push
sar
testl
mov
adc
pop
jns
lods
std
loope
inc
adc
or
imul
jno
or
mov
int3
stos
sbb
in
icebp
mov
into
andl
mov
mov
inc
in
fisubrl
stc
cwtl
mov
and
scas
push
outsl
scas
addb
jg
push
test
into
in
sbb
or
mov
aad
aam
jbe
mov
jo
jmp
mov
shr
inc
flds
xor
mov
mov
add
xchg
out
pop
fisubl
pop
fdivl
pop
push
cmp
in
stos
adc
mov
sub
adc
or
in
mov
add
shrl
out
xchg
and
inc
and
in
ljmp
lock
jno
push
cli
sub
sti
sbb
dec
dec
sub
into
aas
adc
jno
xchg
cmp
test
int3
and
and
push
xor
push
or
repz
fmul
fs
mov
loopne
mov
inc
and
push
jecxz
mov
mov
sub
sbb
mov
mov
outsl
lcall
cmpsl
pop
adc
xor
inc
xchg
xorb
jg
and
pause
xchg
orb
stos
pop
aas
jl
pop
lea
inc
scas
mov
cmpsl
lcall
mov
je
jge
insb
adc
hlt
subl
dec
cmp
mov
iret
mov
push
cli
js
and
es
push
out
repz
fistl
pushf
in
ss
sbb
add
sbb
and
mov
stos
sub
gs
mov
pop
inc
pop
mov
repz
push
sti
push
dec
mov
dec
enter
sub
and
out
and
adc
xor
mov
push
cmpsb
lret
nop
test
jp
lret
mov
add
movsl
jg
mov
cmp
divb
xor
ljmp
sbbb
mov
leave
add
shrl
cmovne
and
sub
push
adc
xor
and
pop
inc
daa
mov
icebp
cmp
imul
cwtl
xchg
outsb
jnp
adc
fucom
xchg
daa
mov
sbb
pop
das
add
aam
cld
iret
push
inc
inc
pop
cltd
rol
lock
adc
lahf
jo
mov
movsl
cwtl
push
and
rclb
push
lock
inc
inc
enter
mov
jae
add
xchg
sub
shll
and
test
decl
push
movsb
pop
std
nop
iret
in
movsl
in
inc
or
sarb
mov
mov
ret
cld
in
dec
push
xor
add
out
test
cmpsl
test
lahf
call
push
and
leave
lods
sub
xor
mov
xchg
cli
les
lods
xchg
out
bound
mov
popa
cli
test
jns
hlt
adc
iret
in
push
enter
dec
cli
jp
int3
ja
aad
mov
jae
cltd
loopne
stos
es
mov
push
insb
mov
adc
lcall
push
xor
sub
stc
or
xor
sub
cwtl
hlt
insl
push
or
in
int
cmp
rolb
mov
mov
pop
repz
and
popf
bound
sub
imul
adc
test
jp
frstor
xchg
popf
sub
enter
iret
jbe
cmpb
divl
push
jbe
jp
arpl
in
push
in
pop
pusha
enter
jno
mulb
or
add
movsb
mov
add
cltd
mov
das
and
inc
mov
dec
mov
mov
dec
pop
ret
pop
fildl
xchg
push
jns
xor
loope
clc
fwait
sahf
cld
and
lret
scas
jmp
lcall
inc
inc
test
mov
insl
jae
xchg
inc
fs
push
pop
sbb
stos
call
aas
jb
int3
jae
sub
in
rolb
negl
mov
xchg
test
out
notl
mov
and
inc
jbe
test
iret
shrb
insl
xchg
push
push
jge
movsl
xor
mov
scas
dec
fadds
loopne
testb
test
cmc
lods
mov
icebp
pop
aas
inc
sub
inc
test
jo
bound
dec
loop
fcomps
mov
sub
addr16
adc
mov
movsb
dec
sub
pop
iret
or
lret
lods
dec
test
std
mov
or
lcall
mov
mov
insl
pop
je
or
push
cmp
rclb
xchg
cld
pop
xchg
pop
test
and
mov
sti
cs
sub
jmp
movsl
test
lahf
sbb
mov
sub
in
sub
pop
out
hlt
movsb
adc
jle
pop
pop
adc
or
aad
xor
sub
nop
jno,pn
mov
add
rorb
xchg
adc
pop
scas
and
lods
int3
cltd
mov
ret
jns
push
lds
out
cli
loop
jecxz
push
pop
inc
cmp
arpl
xor
mov
mov
jp
decl
jo
aas
dec
sub
std
xchg
ja
mov
or
in
jp
outsl
repnz
adc
mov
int3
test
out
cs
cmovg
inc
cmp
xchg
sbb
mov
imul
add
cmp
cmpsb
pusha
add
mov
negb
fwait
dec
xor
aam
cmp
aas
sbbb
push
xchg
int
call
fcomip
test
pop
jo
cmp
jne
outsl
mov
sub
push
mov
ret
out
loopne
inc
sbb
and
sub
xchg
mov
inc
stos
rorb
pusha
rolb
mov
or
mov
shlb
push
loopne
inc
xor
test
popf
inc
cmp
aaa
repnz
xor
data16
add
ss
mov
inc
pop
pusha
jo
les
jns
shl
inc
ss
or
dec
dec
pop
bnd
jne
mov
lods
inc
push
dec
mov
nop
or
jo
dec
xor
test
fstpt
xor
add
jb
cmp
mov
sbb
imul
or
sbb
int3
xchg
repnz
mov
rcrb
add
pop
or
fdivrp
jb
jnp
lcall
push
jae
xor
cld
xchg
rclb
jecxz
in
jmp
scas
jge
adc
pop
sub
sub
adc
jecxz
xchg
or
rcrb
fidivl
les
imul
push
scas
imul
cmpsb
cli
int3
aad
ficoml
add
shl
push
sarl
cld
lods
lods
shll
adc
ficoms
aam
movl
sub
sbb
and
les
mov
push
repz
jne
mov
stc
fisubrl
add
push
pop
xchg
out
test
icebp
movsb
rcrl
inc
sbb
imul
pop
pushf
add
out
popf
push
leave
pop
jb
ds
push
sahf
and
shlb
sti
repz
in
roll
repnz
xchg
seto
xchg
enter
push
shl
mov
mov
mov
loopne
loope
lret
int3
add
xor
subl
xchg
xchg
dec
call
out
mov
sarb
xlat
pop
lock
mov
push
mov
bound
mov
inc
xchg
or
mov
bound
insl
out
mov
inc
push
pop
mov
pop
enter
jne
xchg
aad
pop
pop
add
or
jl
inc
mov
int
stos
xchg
push
pop
add
jns
ljmp
jmp
sbb
adc
jne
loopne
and
push
ret
scas
das
int
jmp
pop
add
sbb
jl
mov
jg
mov
int3
xchg
cld
lret
rorb
mov
xor
outsb
movsl
ds
hlt
xchg
sarl
sbb
stc
test
jns
leave
jg
mov
mulb
fadd
adc
pop
ljmp
pop
test
sar
fsubp
mov
push
pop
or
je
jae
add
je
cmp
and
jo
cli
push
and
imul
mov
mov
xchg
loop
dec
dec
scas
loopne
jle
dec
pop
loopne
mov
mov
mov
out
push
push
loop
cmc
imul
mov
pop
jg
jg
pop
addr16
pop
cmc
int3
xor
int
je
sbb
dec
xor
repnz
jle
and
pop
sbb
fiadds
mov
xchg
xchg
movsl
pop
inc
ljmp
in
xchg
pop
ficomps
jp
ret
das
xor
mov
mov
lahf
sarb
outsl
push
std
mov
mov
xchg
lret
adc
pop
adc
in
cltd
imul
xchg
fwait
repz
jbe
insl
sbb
mov
jo
mov
sub
fnstsw
stos
mov
loope
into
cmp
mov
inc
out
add
jmp
pop
cld
xor
std
pushf
mov
push
push
push
push
xor
aad
xchg
mov
mov
jno
cmpsl
add
xor
lahf
jae
hlt
and
andb
cmp
clc
jb
addr16
or
cmp
lret
pop
test
mov
mov
push
and
mov
scas
or
testl
insb
rclb
pushf
pushf
or
push
orl
in
sub
mov
addl
outsl
jmp
add
mov
sbb
inc
and
xchg
xlat
dec
repz
and
push
inc
mov
movsb
inc
xchg
js
pushf
jmp
inc
popf
jge
lock
push
andb
shrb
mov
clc
xor
cmpsl
in
aad
lret
scas
jecxz
dec
xchg
insl
push
test
movsl
sbb
ret
cltd
movsb
sbb
or
repz
xchg
mov
call
addr16
into
cmp
hlt
les
mov
pop
mov
mov
scas
inc
ja
xor
sub
lret
pop
hlt
jno
lret
pop
ss
xchg
fmuls
cmpsb
popl
std
in
xchg
loopne
and
sub
add
loopne
rcl
dec
aaa
aas
jmp
sbb
push
mov
movsl
push
in
nop
mov
sarl
enter
mov
xor
stos
adc
out
sbb
pusha
adc
pop
popf
push
aam
mov
out
cmpsb
xor
pop
mov
lock
jb
in
xlat
xchg
sar
ficoms
xor
clc
cltd
adc
dec
adc
ret
push
sbb
jns
inc
jecxz
aam
pop
aas
mov
arpl
fstpl
cmp
mov
testl
or
add
insb
mov
fcmovb
sbb
push
gs
cmpsl
push
idivb
adc
pop
sahf
xchg
jg
mov
dec
lock
cmp
adcl
pop
jg
pop
lods
fmul
test
cmpsl
xor
adc
jmp
sbbl
inc
cmp
mov
jmp
or
cmpsl
jle
jge
dec
ret
pop
mov
rcll
icebp
sub
mov
pop
jbe
leave
adc
jl
xor
leave
lret
push
adc
xor
and
lock
jp
test
xchg
lret
sub
aad
cmp
aad
insl
mov
sub
adc
test
in
mov
add
pop
mov
jae
lret
clc
incb
bound
fistps
dec
int
inc
push
test
xchg
mov
nop
stos
iret
notl
pop
jp
dec
lcall
or
ds
xchg
lcall
ret
pop
test
xlat
icebp
sti
xchg
push
daa
or
nop
mov
incb
loop
add
ja
loopne
pop
and
dec
sbb
push
mov
sarb
or
int3
adc
xchg
cmpsb
scas
fcmovnb
xor
add
clc
push
cwtl
jae
scas
dec
out
imul
jl
cmp
push
add
or
dec
imul
aad
cmove
outsl
add
push
hlt
outsl
xchg
or
test
and
xchg
xchg
mov
push
and
gs
xor
mov
adc
push
cmp
sub
inc
insb
addr16
mov
and
sub
sar
mov
pop
pop
sbb
pop
into
dec
movsl
dec
cli
insb
push
sub
das
fnstsw
pcmpeqw
rclb
jb
or
sarb
mov
pop
out
mov
mov
das
inc
nop
pmaxsw
out
push
cld
lds
xor
ds
jge
add
mov
ljmp
xchg
lcall
test
push
incl
ret
lahf
stos
lds
cmp
fcompl
jl
icebp
and
mov
mov
nop
pop
test
sbb
mov
es
cwtl
mov
out
fsts
bnd
jbe
dec
mov
arpl
dec
outsl
decl
test
xor
lret
gs
cs
sub
push
mov
jecxz
xchg
sub
insb
push
loopne
adc
sbb
xchg
push
xchg
dec
pop
repz
push
mov
setnp
adc
push
flds
into
jp
sub
adc
xchg
jge
mov
popf
mov
bound
add
popf
out
outsl
jnp
jl
pushf
add
test
adc
fidivs
dec
iret
ret
mov
inc
jns
aad
sub
lock
std
iret
ds
dec
jne
jle
das
jmp
push
mov
inc
add
jle
push
test
sub
mov
add
fwait
mov
push
adc
sub
bound
mov
ss
or
mov
lcall
push
repz
cltd
sbb
xchg
scas
lods
pusha
adc
popf
dec
xor
xchg
push
mov
dec
cli
add
dec
pop
mov
jle
lds
mov
jb
mov
lods
daa
stc
add
push
xlat
pushf
les
loopne
sub
enter
fstpl
imul
push
cli
daa
lods
in
hlt
in
jb
in
mov
xchg
cmp
add
negb
into
cltd
decb
add
pop
inc
mov
xor
xchg
jecxz
mov
js
inc
add
subb
enter
dec
pop
push
mov
push
bound
add
sub
push
sub
xchg
movsb
nop
cmpsb
repnz
shr
mov
mov
repz
adc
mov
jge
outsb
adc
xchg
das
loopne
gs
xchg
cmp
dec
es
pop
mov
xorl
int3
jmp
mov
xchg
or
sub
leave
add
das
mov
mov
xchg
dec
in
mov
jns
arpl
xor
inc
int
sbb
add
add
dec
inc
rorl
aad
pop
mov
cmp
js
pop
sub
dec
mov
daa
icebp
faddl
insb
mov
faddl
jge
or
or
shll
push
lret
sbb
jp
mov
sbb
mov
xchg
jp
sbb
hlt
vsqrtps
adc
adc
xchg
ja
enter
jmp
mov
mov
aad
mov
push
mov
mov
orl
mov
daa
push
in
subl
test
jmp
popf
sbb
cmp
mulb
ficoms
dec
loopne
pop
xchg
sbb
fdivrl
into
lret
lahf
push
xor
xorb
mov
xchg
jge
fnsave
repnz
xchg
lods
jmp
pusha
shll
repz
jge
pop
push
out
outsb
xor
aad
and
add
xor
aaa
outsb
rolb
dec
adc
jbe
jbe
adc
jge
mov
and
push
jp
out
adc
mov
push
push
push
std
fldcw
fistps
push
sbb
cs
out
addb
in
data16
inc
add
fidivrs
inc
push
shll
in
jle
lods
lret
cltd
popf
fchs
lcall
jne
dec
cs
rep
jb
mov
mov
int3
and
xor
cmp
mov
xchg
out
cltd
icebp
mov
aam
notl
scas
dec
out
int3
push
xchg
sar
std
int3
mov
mov
mov
mov
jge
inc
inc
fucomip
push
fmull
xor
es
push
roll
lods
repz
ror
sub
or
outsl
inc
and
push
sbbl
gs
mov
sti
icebp
xchg
dec
push
rcll
cmp
es
push
xor
rorb
or
jle
sub
push
mov
mov
dec
and
cs
cmp
js
jp
and
rclb
jae
out
mov
push
mov
leave
scas
test
mov
mov
xchg
pop
xchg
pop
sbb
mov
adc
xchg
lcall
adc
push
jbe
adc
inc
sbb
adc
adc
daa
jns
or
xchg
xor
popa
lahf
mul
jns
xor
test
cmc
jp
mulpd
je
inc
mov
dec
pop
dec
xor
push
jp
loop
ljmp
nop
xlat
in
mov
popa
adc
cmc
jg
mov
pop
sbb
jecxz
and
les
popa
pushf
enter
stos
ljmp
xchg
mov
lret
rolb
fs
jb
mov
dec
iret
insl
inc
cmpsb
xchg
and
fsubs
and
mov
shl
add
fwait
lret
jp
mov
jl
pop
dec
lds
push
pop
dec
fwait
sub
sbb
jne
dec
push
jle
sub
mov
arpl
pop
xchg
and
xchg
jmp
mov
aad
call
lock
mov
test
inc
mov
xchg
cmp
jp
repz
and
push
fnstenv
mov
sahf
scas
add
aad
push
out
ja
xlat
orl
or
js
xlat
jmp
sar
pop
and
mov
dec
pusha
add
xchg
js
sub
imul
fldpi
sub
cmp
mov
sbb
pop
lret
popf
fst
push
test
push
xchg
lret
xchg
and
add
jl
idivb
dec
orb
leave
push
xor
cmp
lret
shr
stos
int3
mov
adc
adcb
mov
aad
stc
dec
jmp
ljmp
ret
pop
in
xchg
xchg
dec
cmc
xchg
fdivl
je
pop
mov
push
nop
mov
sub
cmpsl
xchg
and
repz
outsb
dec
fsub
push
cmp
cmp
aas
pop
push
adc
jmp
test
jo
mov
lods
loope
insb
ret
or
push
push
aam
xchg
ss
and
ror
popf
inc
es
pop
or
bound
sbb
repz
xchg
mov
dec
jno
adc
mov
bound
je
ds
adc
jmp
insb
lcall
dec
jge
xor
call
add
pop
and
push
stos
nop
je
aam
stc
push
mov
sub
test
testb
inc
lcall
loop
leave
dec
mov
jle
jge
mov
cwtl
fucomi
enter
jb
and
in
stos
aas
cmpsb
daa
add
out
mov
repz
aas
cltd
je
or
lock
dec
mov
jge
and
je
xor
sub
jne
xchg
in
jbe
or
in
push
pop
ljmp
lcall
stos
mov
fists
adc
ret
lahf
xchg
mov
fisttps
inc
inc
pop
push
jnp
mov
sarl
test
js
aaa
fildll
out
inc
jecxz
int3
sbb
mov
pop
sbb
scas
mov
pusha
test
xchg
cmp
adc
gs
js,pt
adcl
pusha
mov
pop
jnp
cld
sub
les
insl
jnp
sbbl
loop
dec
sub
fdivr
mov
jae
sub
push
adc
rcr
mov
loope
sub
mov
push
test
hlt
add
cwtl
ror
cmp
lock
sbb
iret
push
inc
adc
pop
aad
or
xchg
icebp
int3
add
cmc
mov
pusha
fisubrs
rcrb
shlb
aas
sahf
bound
mov
cli
int
pushf
out
lret
adcb
jmp
pop
jb
mov
xlat
es
les
nop
fs
fdivs
or
mov
sbb
adc
orl
adc
mov
les
in
or
cwtl
mul
jb
mov
mov
or
lds
outsb
sbb
loope
push
sub
sub
pop
popa
sbb
int3
lock
cmp
scas
fwait
and
and
xor
lahf
out
adc
bound
daa
cmp
mov
sbb
sti
in
push
inc
sbb
insl
or
aam
pop
mov
scas
nop
test
jo
lea
jecxz
movl
lea
jb
or
inc
xchg
pop
das
and
xor
inc
mov
aas
sub
in
movsl
test
sbb
pop
fcmovu
popf
or
outsb
push
jmp
add
adc
lds
jl
push
sbb
call
cwtl
push
dec
pop
xor
loop
rolb
sahf
dec
pop
dec
mov
and
mov
jnp
call
lcallw
gs
cmpsb
insb
mov
mov
rcll
jecxz
sbb
adc
xor
sub
std
pop
mov
mov
pop
sub
aad
loopne
stc
pop
enter
sub
adc
xor
mov
mov
xor
lcall
jo
pop
push
outsl
sbb
inc
xchg
sbb
sbb
xor
loope
dec
data16
stos
in
xchg
mov
fcomps
into
mov
or
lret
sub
mov
lds
insl
jnp
xchg
cltd
mov
loop
inc
cmovl
pop
mov
lret
movaps
sarl
push
mul
jns
int3
adc
fdivs
xor
aad
scas
dec
cmp
gs
les
jo
cmp
lods
dec
js
or
lock
mov
push
rorl
ret
call
mov
pop
xor
lods
in
insb
ljmp
pop
lods
fadds
loopne
leave
push
cmp
inc
mov
and
loope
jl
xchg
mov
inc
mov
inc
and
mov
shll
xlat
mov
jl
dec
add
mov
sbb
jge
sar
mov
cmpsb
mov
bound
xor
aas
outsb
adc
lahf
push
adcl
loope
sub
in
adc
into
fucomi
int
mov
outsb
sbb
lods
iret
xchg
xchg
fld
sub
dec
lret
test
rorb
xor
jo
sti
pop
mov
out
kmovb
pop
push
sti
nop
lods
jns
sub
imul
stos
xchg
cmp
push
pop
call
aas
inc
jbe
in
dec
call
inc
jbe
add
mov
insl
loop
dec
adc
push
sbb
mov
add
cld
mov
inc
add
inc
js
in
xchg
stc
subb
out
das
inc
mov
jne
or
cmp
and
pushf
add
pop
leave
sub
andb
ror
inc
call
mov
fmuls
mov
out
dec
cmp
daa
or
cmp
mov
pop
xchg
test
add
lcall
and
lahf
dec
or
jo
lcall
jge
test
das
push
out
dec
rorb
inc
or
mov
mov
movsl
pop
jbe
popf
adc
adc
ljmp
mov
lret
mov
pop
ja
and
mov
fstps
sbb
cli
mov
jmp
cltd
jo
pop
mov
imul
xor
inc
push
cmpsl
popf
in
aam
movsl
rcrb
mov
pop
adc
enter
fs
subl
fisubrl
inc
push
pop
xor
xor
stc
int3
push
jnp
mov
loopne
inc
popa
sti
adc
or
or
rcrb
in
fistps
daa
push
xchg
mov
inc
lret
inc
stc
and
sbb
ret
add
xchg
pop
push
in
dec
adc
pop
leave
stc
rorl
push
cltd
test
sub
jl
ss
add
pop
movsl
mov
addr16
int3
or
add
lret
mov
mov
jg
mov
leave
sub
or
jge
push
and
rorl
fistpl
insl
mov
push
sbb
lret
xor
fnstenv
std
fwait
int
lock
lods
and
add
mov
mov
jo
and
sbb
popa
sub
push
test
mov
ljmp
jg
imul
pusha
or
add
ret
nop
jge
out
sbb
mov
pop
cltd
push
push
cmpsb
fwait
and
inc
movsb
mov
pushf
dec
das
jb
mov
lahf
push
jmp
cld
sbbl
jbe
jl
mov
lahf
lods
push
mov
sub
inc
push
out
insl
aas
cli
sub
or
add
mov
jno
cli
addr16
jno
jbe
jo
inc
pop
rcrl
xor
andl
loopne
jnp,pt
stos
insl
pop
push
cmp
int3
lods
push
sarl
mov
rcrb
push
adc
dec
mov
fwait
and
in
xor
test
ret
xor
lods
int
cs
sbb
mov
decb
mov
pop
inc
fsts
inc
push
mov
fadd
add
cld
mov
add
xor
jmp
fdivrl
mov
xchg
xchg
pop
sub
cli
mov
lea
pop
pop
mov
or
add
out
fldl
push
xor
dec
sarb
out
fs
sub
enter
sbbb
cmp
and
mov
je
or
and
mov
pop
lahf
fdiv
push
mov
and
repnz
jno
scas
xchg
je
arpl
outsl
xor
xor
cmp
test
sub
xor
inc
add
das
les
xchg
and
mov
das
std
mov
xchg
xor
cwtl
mov
push
lcall
pop
cltd
push
ds
ret
or
add
sub
nop
ror
jo
sahf
jno
push
aam
mov
rolb
fldt
dec
lock
adc
scas
bound
cmp
aad
cmp
mov
sar
sahf
divb
nop
or
sub
xchg
loope
insl
ds
data16
daa
push
or
flds
movsl
das
loopne
dec
add
out
arpl
js
out
std
mov
push
push
stos
movsl
pop
jno
das
cmc
sarb
adc
cmpsl
lods
js
lds
testl
sbb
out
pop
pop
inc
xchg
mov
out
inc
sarb
mov
xchg
imul
test
sub
into
jb
pusha
mov
out
jne
dec
out
aam
mov
scas
add
das
in
std
shll
out
repz
xor
clc
mov
daa
pop
or
ljmp
test
out
cmpsb
fldenv
aaa
icebp
aam
test
sbb
aam
dec
add
ss
sub
or
movsl
cmp
mov
mov
mov
imul
inc
push
mov
or
jle
dec
lret
fnstsw
inc
daa
sbb
cmp
or
dec
fldt
jle
cld
push
fs
repz
inc
int3
cmp
jne
test
fstps
daa
xlat
jle
sahf
cmpsl
dec
add
mov
mov
pop
sub
xor
mov
and
cld
inc
out
lods
ljmp
dec
in
les
movsb
pop
lret
fstps
add
xchg
pop
int
sbb
iret
inc
arpl
mov
clc
inc
jmp
rcrl
jmp
pusha
or
sub
mov
negl
pop
jae
stos
cmp
inc
aas
cli
dec
adc
mov
and
xor
or
jmp
repnz
sbb
xchg
dec
sti
mov
push
mov
subb
das
cmc
dec
rcrb
mov
call
lea
adc
or
pop
dec
jae
shlb
fdivrs
ljmp
mov
mov
cmp
sahf
ds
lret
test
add
and
iret
mov
data16
push
sub
push
adc
daa
mov
mov
jbe
lods
pop
mov
jo
in
sbb
in
imul
mov
mov
fildll
testb
push
push
xor
out
mov
cmp
hlt
mov
daa
pop
test
jae
xor
push
mov
pop
lods
add
cld
bound
push
je
stos
jle
lock
aad
add
xchg
testb
std
jl
popf
xchg
leave
xchg
jbe
pmulhuw
aas
cmp
int3
lret
push
popa
inc
in
xor
mov
ret
and
sbb
mov
sahf
mov
imul
pop
cld
mov
iret
lret
mov
aad
jnp
inc
fcomi
mov
out
mov
sub
popf
jl
mov
shrl
daa
fs
xor
loope
test
adcb
pop
rorb
dec
cmp
mov
mov
ret
dec
imul
jle
stos
adc
pop
imul
cmp
cmp
xchg
lods
pusha
lahf
movsb
dec
cli
das
movsl
sti
sahf
aam
or
loope
and
lret
orb
inc
mov
or
add
data16
or
mov
mov
jmp
popf
ret
jge
insb
arpl
xor
xor
jne
and
mov
rcrl
cltd
jno
lock
stc
pandn
inc
or
sti
add
loopne
pop
outsb
and
or
jl
dec
adc
dec
cmp
cltd
push
cmpsb
xor
sub
out
push
repnz
ret
jno
lds
fldenv
int
es
add
stc
add
or
jae
fwait
loop
mov
cmp
stos
aam
dec
mov
cld
bnd
xchg
push
lds
sub
aas
push
mov
popf
iret
scas
leave
shrl
scas
mov
scas
rorl
xchg
sbb
cli
repz
test
inc
xor
data16
cs
cmp
in
mov
or
arpl
jne
mov
cs
dec
icebp
jp
mov
jmp
cltd
pop
fisubrs
xchg
xlat
mov
scas
jp
lret
push
jns
xor
movb
aaa
lahf
xchg
dec
shl
dec
lret
ljmp
adcl
xchg
adc
mov
leave
sti
or
or
mov
mov
nop
mov
arpl
jp
pop
or
inc
mov
rorb
pop
popa
or
sbbb
mov
jns
sahf
pop
inc
iret
in
ja
nop
lret
out
dec
add
or
aam
mov
addr16
rcrb
inc
sarl
add
dec
fisubl
cli
jge
mov
incl
subb
arpl
and
xchg
jl
pop
jge
pop
mov
mov
mov
pop
xchg
cmp
lret
add
ds
and
lods
outsb
jecxz
sarb
out
bound
inc
cli
lods
xchg
test
in
sub
fistpl
es
sub
pusha
mov
cmp
mov
pmuludq
addr16
jne
cmp
and
xchg
adcl
add
mov
pushf
pop
stos
imul
stos
ficoml
sub
das
xchg
testb
xchg
xor
dec
lahf
call
movsb
outsl
insl
arpl
lods
inc
and
xor
mov
arpl
inc
jmp
aas
insb
in
mov
decl
ja
sbb
dec
hlt
imul
aad
jl
repz
in
fistl
jp
cmpsb
and
sub
iret
mov
repz
stc
mov
pop
in
test
rorl
nop
or
out
dec
clc
test
incl
dec
outsl
sbb
aaa
xor
push
pop
cmp
mov
cmp
std
or
movsb
add
inc
sbb
in
hlt
sbb
mov
hlt
andb
outsb
jae
add
dec
test
loopne
fs
push
int
lds
loop
fildll
jecxz
inc
mov
addr16
lea
icebp
out
lret
xlat
add
scas
jg
fwait
xchg
add
jecxz
mov
pop
cmp
cmp
aaa
ss
xlat
mov
xor
mov
cmpsb
push
sti
mov
shrl
mov
adc
stos
es
movsl
cmc
test
leave
cmc
mov
mov
lea
adc
js
cs
add
out
dec
out
xchg
fiadds
insl
cmp
xor
inc
movntq
push
popf
imul
or
in
pop
stos
sahf
ret
sbb
jmp
insl
and
pop
test
jmp
mov
mov
mov
rolb
int3
xchg
fs
cmc
mov
enter
std
call
sub
mov
mov
jp
xor
jg
orb
mov
pop
mov
pop
mov
in
sbbb
sbb
jp
aam
lods
push
ss
mov
sbbb
fldcw
inc
es
pop
scas
push
mov
pushf
pop
movsb
mov
imul
jmp
push
cmp
add
shl
scas
adc
and
negl
popa
movsl
call
sarl
push
adc
cmp
out
pop
repz
hlt
int
cmp
loope
mov
lcall
sub
mov
sub
sub
push
push
jb
mov
xor
loopne
mov
je
repnz
sahf
int
pop
jne
sub
insl
inc
dec
xchg
jbe
pop
gs
fsubs
cmp
xorl
fsts
fdivl
jbe
scas
adc
mov
xor
and
add
or
out
adc
push
stos
fbld
sbb
cmp
xor
scas
loop
or
inc
or
rorl
ja
mov
pop
lods
push
insb
mov
lds
mov
pop
int3
loope
mov
movsb
mov
cwtl
pop
rclb
mov
jns
mov
lea
or
or
dec
jne
loope
and
hlt
in
sub
and
rclb
inc
inc
gs
xchg
and
sub
outsl
daa
clc
fimull
adc
stc
clc
jg
aaa
mov
push
lcall
pop
pand
mov
aas
shlb
pop
lcall
push
xor
sarb
outsb
shll
into
loope
inc
ret
xchg
gs
cmp
out
insl
pop
loope
fiaddl
push
in
lea
fadds
cmp
sbb
xchg
mov
pop
inc
sbb
or
mov
inc
dec
mov
fs
lock
jno
and
xor
pop
push
inc
lods
dec
rcrb
fwait
jg
popa
or
dec
outsb
adc
call
xchg
sti
add
lret
popf
fadds
mov
inc
cmc
xchg
inc
stc
gs
inc
stos
aam
sti
sub
jne,pn
xchg
dec
fdivl
lahf
cltd
cmp
xchg
call
add
sbb
xchg
pop
dec
scas
ljmp
stos
pop
xchg
sbb
sbb
sahf
daa
push
fildll
cld
push
push
xchg
lods
lea
daa
sub
clc
popl
shl
adc
fstl
ror
insl
dec
lods
mov
out
mov
xchg
jno
jnp
sbb
jp
mov
dec
mov
adc
fisubrl
test
and
jl
or
inc
mov
jns
mov
push
sbbl
or
jecxz
out
or
push
mov
fistpl
pop
or
fbstp
cmc
add
movsb
mov
inc
aas
je
mov
loop
stos
add
mov
clc
lahf
ja
call
mov
enter
mov
sahf
cld
push
mov
gs
push
in
mov
lret
dec
add
xor
das
jmp
out
xor
imul
loopne
int
inc
inc
ds
insl
xlat
movsb
inc
jo
sub
inc
push
xor
int3
add
adc
mov
mov
psraw
stc
fs
aam
pop
inc
call
mov
lea
xchg
enter
in
in
stc
pop
rolb
push
mov
jge
sub
jmp
loop
mov
loop
popf
and
stos
mov
lds
inc
roll
mov
andl
sti
jl
or
push
icebp
mov
mov
cmpsl
xor
imul
add
into
flds
hlt
push
xchg
dec
popf
fmulp
ret
add
jmp
das
cmovns
cmp
and
push
mov
movsl
inc
sub
inc
ja
jg
adc
out
out
std
add
cmpb
push
and
mov
lods
dec
lods
sti
test
inc
lahf
inc
gs
mov
leave
jg
dec
sub
push
jl
dec
xchg
xorb
stos
rorb
lods
pop
jg
cmp
and
sarb
and
xchg
xor
movsl
adc
outsb
push
or
cmc
jne
pusha
fdivrl
test
fdivl
stos
jo
xor
fcomi
dec
imul
outsl
pop
cmpsl
xchg
mov
sbb
cmp
loop
in
jns
sbb
icebp
pop
sbb
fiaddl
popf
movzbl
xchg
pop
mov
mov
add
cmp
push
mov
push
xor
mov
push
inc
pop
mov
iret
test
push
sbb
or
nop
clc
jecxz
stos
sub
mov
data16
add
lahf
dec
fucomi
inc
pop
sbb
and
lcall
addr16
popa
arpl
fdivp
loopne
data16
and
mov
fisubs
push
xor
cmp
cmc
lods
pop
imul
or
sub
fnstenv
lods
mov
and
add
or
test
dec
outsb
movsb
sub
sub
pusha
cmp
gs
div
iret
cmp
shlb
jnp
loope
mov
rolb
adc
mov
mov
xor
add
fucom
daa
add
pop
mov
jmp
mov
fwait
rcll
in
push
ret
jl
mov
repz
ret
loope
mov
mov
insl
or
push
push
pop
aaa
jge
sbbl
push
and
xchg
add
jecxz
call
add
sub
je
fnstsw
push
pop
add
fs
jmp
push
sbb
repnz
bound
inc
push
jecxz
mov
mov
pop
sub
mulb
mov
lds
aas
jb
nop
jp
dec
in
movsl
mov
xchg
push
jp
xchg
sahf
and
adc
es
xchg
mov
jl
xchg
ss
adc
dec
push
jo
js
fidivrs
mov
rcrb
mov
divb
sti
addr16
add
popf
popf
dec
sti
add
sahf
or
es
pop
and
xchg
mov
mov
ja
sbb
ja
scas
dec
mov
into
dec
out
sub
int3
adc
xchg
mov
inc
nop
shrl
cwtl
in
les
ficoms
adc
add
lcall
mov
sub
test
out
divl
and
leave
push
xchg
mull
push
je
jle
mov
jno
jl
dec
mov
aad
xchg
dec
dec
dec
sbb
pop
xor
pop
popl
repnz
lret
jge
or
lea
dec
push
and
add
cmp
jo
in
lods
call
xchg
out
add
jns
aas
negl
mov
cwtl
sbbb
inc
mov
mov
dec
jne
push
into
mul
stos
lods
sub
aad
jle
jno
xchg
adc
cmpsb
xchg
int
jno
inc
dec
fildll
pop
and
clc
pop
push
out
lock
outsb
xor
je
out
add
add
dec
add
or
mov
aad
lods
cmc
pushf
pop
jno
xchg
sarb
loope
add
jp
xor
lcall
jmp
call
cmp
jb
mov
add
or
jbe
cmp
data16
jb
enter
dec
pushl
stc
push
stc
and
xchg
or
iret
fildl
out
in
cmpsb
sub
mov
lds
fistpl
sbb
mov
movsb
out
stc
pusha
imul
not
daa
test
sub
ret
iret
stc
jbe
jmp
add
mov
stc
jno
loopne
fisttpll
insb
data16
cmp
mov
jle
testl
mov
push
jb
aad
sbb
cmp
ja
adc
stos
push
jp
jae
jae
out
mov
pop
lods
fchs
xlat
dec
mov
mov
aaa
ret
inc
icebp
mov
pop
fstps
pop
cmc
int
inc
fcmovnu
mov
jmp
jo
aas
add
fwait
or
pop
add
cld
mov
xchg
push
inc
mov
insl
sub
iret
loope
dec
out
xor
dec
fmull
out
pop
loope
xor
cwtl
sub
popl
loope
shlb
scas
shll
shlb
inc
mov
jg
xchg
push
fwait
repnz
add
inc
les
ret
iret
mov
sbb
push
fcomps
into
cmp
pop
into
lea
add
mov
sub
popa
test
cmc
cmp
aam
add
or
cmp
add
icebp
mov
stos
add
cld
rcr
pop
xchg
xchg
es
mov
insb
fistl
orl
inc
sbb
negb
add
mov
outsb
movntq
scas
add
into
mov
js
or
aaa
test
flds
sahf
dec
sub
int3
sub
jecxz
inc
sbb
stc
test
xor
int
pop
pop
sbb
fsubr
loop
xchg
mov
movsl
sub
stc
test
adc
aad
pop
add
or
jg
js
idivb
stos
mov
out
mov
popf
rorb
lea
mov
push
or
xchg
sub
shrl
jo,pn
dec
aas
mov
dec
test
ficoms
push
loop
pop
test
mov
outsb
lea
ss
bnd
inc
imul
clc
sub
decb
bound
push
mov
lret
xchg
sub
repnz
lret
fidivl
push
mov
inc
mov
push
mov
or
adc
push
pop
xor
push
repnz
mov
lret
push
and
push
inc
or
jecxz
out
test
in
mov
jmp
aas
sbb
aas
incl
out
inc
push
gs
push
pop
xor
adc
aaa
jbe
scas
fmull
pop
rcrb
lea
loope
cmp
int3
push
jmp
mov
mov
out
jnp
mov
mov
sti
icebp
movsb
push
jle
mov
jb
pop
or
or
and
test
loop
lret
mov
xchg
dec
jb
fs
inc
andb
jo
pop
cmp
xchg
dec
dec
dec
push
jl
repz
jbe
incb
or
outsl
int
xor
mov
dec
repnz
aaa
je
push
aad
adc
pop
sti
push
movlps
loop
ret
sti
push
imul
add
jge
int3
cmpsl
mov
cmp
mov
loop
adc
adc
mov
fildll
push
cmpsl
leave
lods
mov
cmp
adc
push
dec
pop
jns
ficomps
and
push
cs
cmp
sub
jg
sub
pop
mov
mov
mov
clc
fidivrl
or
movb
mov
aad
add
sub
pop
jl
sbbl
inc
and
push
sub
mov
pop
pop
pusha
xchg
or
dec
nop
fs
daa
adc
push
mov
or
mov
sarl
xchg
pushf
xchg
dec
fmul
cli
test
or
sub
fisttpll
add
call
jnp
bound
bound
test
jae
push
or
adc
or
sub
fmuls
lock
and
xchg
aas
fstpl
mov
ret
inc
incb
mov
mov
mov
inc
and
add
inc
popa
arpl
es
ret
pop
out
fidivs
cmp
fdivl
cmp
daa
pop
roll
jle
test
dec
data16
cmp
cmp
mov
fwait
movsl
adc
pushf
inc
das
daa
enter
and
inc
jecxz
popa
div
push
lret
cmpsb
lcall
inc
imul
push
mov
sub
in
gs
aam
and
pop
sbb
jb
jae
dec
pop
and
or
lods
xor
dec
or
sbb
int
cltd
lcall
mov
pop
dec
xor
or
xchg
mov
jae
push
nop
mov
in
lahf
rcl
push
sub
jmp
mov
repz
and
jl
rcll
or
test
xlat
pop
cli
insb
push
fiadds
adc
in
push
and
inc
dec
inc
sub
insl
test
pop
lods
mov
mov
cmpsl
shl
in
out
stc
stos
and
rcl
adc
add
dec
outsb
adc
test
iret
mov
inc
jno
in
dec
xorl
jl
aaa
outsb
push
mov
mov
xor
out
in
mov
and
pushf
xor
test
pop
mov
fisubl
add
and
cli
pop
mov
pop
bound
push
testl
sub
stos
pop
mov
dec
jne
outsl
jns
dec
pusha
add
inc
sub
inc
pop
aad
cmp
mov
xchg
sahf
mov
and
hlt
xchg
sub
negb
mulb
bound
cmp
add
add
sub
pop
sti
outsb
rclb
or
sub
cltd
out
lcall
adcb
add
cmp
or
sbb
xchg
inc
icebp
mov
or
sbb
pop
mov
cmpsl
or
pushf
mov
lret
repnz
and
rcrb
aaa
push
movsb
ds
aaa
je
dec
push
adc
or
and
popf
pusha
sub
or
cmpsb
adc
or
jb
xor
lahf
sbbl
rclb
jbe
sbb
inc
hlt
mov
scas
aam
add
dec
add
and
stos
mov
sub
or
sbb
push
xchg
jmp
aas
xor
cmp
hlt
mov
movsl
ljmp
pushf
xchg
cmp
mov
rol
inc
mov
mov
xchg
popf
cmpsb
popa
sbb
sub
test
lea
pop
es
pop
or
jae
sahf
mov
testb
lret
shlb
and
mov
lods
xor
mov
pop
repz
mov
mov
pop
lock
insb
mov
cwtl
jg
imul
mov
call
ds
addb
inc
and
sub
loope
jmp
repz
fadds
sub
mov
movl
aad
sub
dec
dec
inc
pop
mov
or
inc
jmp
gs
nop
jmp
dec
cmpsb
mov
inc
cmp
push
mov
push
hlt
mov
das
aaa
sub
add
lcall
cmp
sub
lds
aam
imul
push
sub
sbb
cmpsb
loopne
jns
inc
aas
adc
jns
dec
daa
mov
movsl
clc
add
mov
std
xor
aam
test
mov
ljmp
int3
push
ljmp
xor
bound
inc
mov
popl
sub
jnp
jecxz
es
xor
xchg
pop
xor
outsb
add
jge
push
xor
in
sbb
and
xchg
mov
jbe
outsl
imul
mov
mov
sbb
lahf
and
or
lock
xlat
scas
ja
push
cmp
ficomps
sub
pop
inc
and
leave
push
pop
jo
inc
sbbl
mov
hlt
push
dec
sub
aad
dec
cmp
inc
filds
rcrl
push
and
xchg
popf
loopne
mov
and
repz
mov
xor
divb
imul
jge
cld
and
clc
lock
pop
add
nop
faddl
jecxz
ficoml
sub
lds
jle
roll
daa
push
jo
bound
cmpsl
enter
mov
mov
aad
xchg
clc
sub
cmp
xchg
lock
lock
lret
int
addb
mov
call
jge
pop
mov
fnsave
inc
test
scas
clc
push
xchg
mov
mov
int
or
ljmp
mov
jno
f2xm1
add
imul
jmp
and
shll
sbb
pop
mov
push
cmc
dec
pushfw
xor
pop
pusha
clc
push
push
aam
xchg
mov
xor
loop
push
pushf
rclb
addr16
out
push
adc
push
add
icebp
cs
xor
jns
and
or
leave
gs
xchg
xor
jl
xor
and
cld
je
scas
rcr
lea
imul
push
xchg
pop
shlb
ret
mov
repz
idiv
stos
pop
inc
xchg
rolb
mov
mov
adc
lds
and
mov
mov
push
mov
add
hlt
lret
cmpsl
scas
mov
bound
divl
out
lcall
nop
jle
aas
scas
iret
inc
or
loope
lcall
enter
xchg
outsb
xor
mov
add
pop
fwait
xor
mov
sbb
pop
sub
fisubs
xor
scas
lods
scas
sbb
mov
sbb
pop
cmp
dec
lods
mov
lds
popf
dec
mov
into
outsl
xchg
xor
xchg
sahf
lcall
sub
ret
stos
les
movl
jge
subb
mov
pop
ja
in
mov
lret
popa
fcmovnb
cmp
mull
pop
cmp
adc
cmp
gs
xchg
jecxz
pop
cmpb
push
xor
stos
clc
sti
xchg
incb
sti
gs
pop
ds
and
shll
dec
mov
ljmp
movsb
rclb
pop
add
nop
loop
out
xchg
pushf
pusha
jae
leave
pop
adc
nop
sub
xor
jo
hlt
cli
inc
das
push
adc
mov
int
shrb
lret
lcall
outsl
xchg
jmp
cmp
movsb
add
jne
push
push
mov
cmp
xor
push
add
mov
inc
xchg
rorl
sub
les
aas
jae
shll
jno
sti
sarb
int
dec
in
pusha
mov
mov
stos
mov
xchg
cwtl
ss
xchg
mov
cmp
push
shlb
popa
xor
xchg
xchg
outsb
mov
jg
adc
inc
push
cs
mov
sbb
jmp
pop
xchg
jmp
mov
out
xchg
cltd
in
push
in
and
roll
mov
xor
mov
push
loop
insb
js
into
cld
notb
or
std
and
rcrl
daa
iret
xchg
out
lahf
xor
inc
ror
stc
stos
jl
pop
jmp
das
mov
and
incb
test
adc
mov
div
icebp
adc
adc
push
ss
sbbl
sahf
or
or
andb
mov
xchg
jl
sub
aaa
mov
cmp
lods
fwait
insb
sahf
dec
in
xchg
inc
ja
xchg
scas
out
pop
sub
outsb
les
xor
sbb
ljmp
pop
jo
cmpsb
repz
pop
inc
pop
mov
xor
test
stc
das
adc
mov
mov
or
jno
sub
add
jge
mov
add
and
imul
int
imul
or
mov
mov
ljmp
sbb
je
arpl
dec
out
jnp
in
cmp
adc
in
jbe
mov
scas
pusha
mov
add
in
ds
ret
mov
push
or
push
cli
leave
or
nop
inc
mov
mov
sbb
gs
mov
dec
lea
das
outsb
mov
loopne
ret
adc
incl
push
dec
mov
add
stos
iret
adc
popa
adc
scas
mov
sbb
popa
mov
push
fs
or
jl
cmp
cs
std
inc
shl
adc
insl
iret
push
xor
leave
imul
cmp
or
test
push
pop
loopne
adc
fisubrl
sarb
mov
inc
insl
pop
inc
loopne
repz
or
loope
xchg
dec
push
testl
cmpsl
orl
lods
cld
xchg
test
xchg
mov
cmc
and
inc
into
mov
arpl
or
dec
sub
adcb
fwait
int3
or
int
pop
fiadds
jbe
inc
mov
lcall
pop
imul
inc
mov
aas
adcl
inc
fldl2e
sbb
icebp
ret
shl
mov
movsl
fisttpl
lock
mov
repnz
icebp
imul
leave
loopne
int
sub
imul
jnp
data16
clc
imul
mov
jno
jns
shlb
divb
push
mov
jecxz
ret
add
arpl
out
imul
mov
inc
jmp
mov
ret
rclb
push
lods
sbb
push
das
mov
jnp
mov
xchg
mov
ret
fistpll
jg
and
call
out
jp
shlb
int3
ret
mov
aaa
in
adc
roll
mov
cmp
cli
mov
push
mov
pushf
inc
leave
jno
or
insb
hlt
sbb
ds
add
dec
or
push
insl
cmp
mov
adcb
cmc
scas
popa
xchg
xor
cmp
mov
std
dec
cld
xchg
divl
sbb
cmp
inc
dec
hlt
pop
add
xor
adc
xor
push
mov
xor
mov
push
pop
inc
pop
dec
cmp
daa
jns
data16
out
mov
je
movsl
add
negb
dec
inc
mov
fcmovu
outsb
mov
xchg
mov
sub
and
add
xchg
outsb
jmp
adc
xlat
outsb
pushf
lods
or
pop
mov
mov
adc
push
ja
repnz
push
aaa
sub
xchg
jae
mov
jge
fidivl
arpl
cmp
dec
inc
in
push
lahf
mov
inc
shrl
sbb
mov
imul
and
mov
fsubp
in
mov
jne
fildll
lock
rcrb
outsb
cmp
adc
push
jge
flds
add
test
fcomps
in
loopne
daa
xchg
out
cwtl
xlat
call
push
push
std
mov
or
iret
clc
cmp
adc
inc
fdivrs
inc
adc
jnp
enter
arpl
xor
test
mov
push
cmp
shr
jle
fcos
sbbb
push
push
jo
cmp
aas
lods
repz
rorl
mov
subb
add
jmp
insb
lods
data16
xchg
sbb
jmp
jge
pusha
or
ljmp
or
fiaddl
shr
fdiv
or
push
and
cli
lahf
rolb
lahf
xchg
jnp
pushf
in
jge
xchg
xchg
ja
or
adc
jne
mov
sbb
pop
ljmp
dec
jnp
dec
pop
outsb
pop
or
xorb
iret
cmpsl
shll
jl
pminsw
mov
jl
aas
xchg
call
in
push
dec
lret
mov
fs
cmp
pushf
push
hlt
into
popf
das
mov
loop
ret
fisubrs
neg
mov
movsl
test
lret
repz
cmpsl
in
add
jb
jb
push
test
xchg
add
jno
dec
mov
popa
fdivs
lcall
test
nop
sbb
ret
sub
pop
cmp
fistl
and
aaa
fsubs
negb
pop
cmpsb
add
and
jb
mov
pop
sbb
pop
xchg
es
cld
insl
pop
sub
pop
bound
sbb
xor
das
bound
les
jbe
mov
pop
ret
mov
movsb
lock
js
subb
mov
or
push
sahf
lea
xlat
push
push
pop
add
xor
cmpsl
ret
sbb
std
les
inc
pop
jmp
dec
lcall
cmc
mov
push
dec
add
push
jnp
mov
or
and
int
fmul
in
test
clc
add
push
jle
roll
sbbb
test
test
and
in
inc
jle
popa
arpl
inc
imul
out
test
orl
push
gs
sti
inc
sbb
popa
sub
inc
cmpsl
inc
frstor
fstpt
sti
push
inc
out
push
mov
dec
jl
lfs
inc
push
or
addr16
adc
push
sub
push
ljmp
inc
aam
cmp
mov
in
jae
cmc
sub
push
push
jp
adc
rolb
and
cmp
and
in
mov
in
scas
sti
push
int
adc
push
push
loope
cmp
sarb
lods
inc
clc
dec
pusha
cmc
pop
fisubrs
jmp
inc
movsl
int3
testb
cltd
xor
mov
loope
jae
push
aas
fbstp
xor
cltd
adc
les
aad
pop
ret
jne
adc
mov
ret
pusha
nop
jns
out
movsb
shlb
jbe
or
das
imull
cmpsl
inc
shl
push
and
ds
lret
aas
push
std
nop
sbb
das
xchg
mov
inc
adc
repz
pop
test
mov
add
stos
xchg
call
lret
jo
xchg
fmul
sub
add
add
cmp
sti
pop
push
cld
mov
or
nop
aam
cmp
sbb
movsb
fimull
mov
adc
lock
sub
push
push
mov
jno
dec
pop
mov
in
xchg
cmpsl
mov
idiv
sti
jecxz
fnstenv
lcall
jae
cld
cmpsb
sti
pop
push
repnz
call
lcall
push
mov
add
and
jg
in
dec
fs
adc
or
aam
add
sahf
pop
mov
insb
pushf
loope
enter
andb
push
add
mov
add
fwait
jmp
or
lret
push
or
pushf
mov
pop
std
scas
pushf
xor
stos
and
inc
xor
mov
addr16
in
mov
jne
rolb
mov
out
pop
roll
push
jb
dec
ret
pusha
imul
rclb
imul
cmp
mov
sbb
ficoml
sub
pop
popa
push
jne
jo
mov
push
fs
mov
push
push
mov
ds
testl
stc
push
xor
add
call
mov
rclb
inc
repnz
test
inc
mov
lret
and
ss
push
jecxz
rolb
push
add
fwait
adc
test
add
nop
push
push
dec
bnd
into
pop
mov
xor
int3
inc
mov
scas
inc
ds
add
mov
dec
and
bound
out
adc
leave
mov
jno
and
mov
pop
add
aam
lds
outsb
mov
push
add
fucomip
jge
pop
shrb
pop
lock
pop
inc
cli
insl
add
pop
and
jb
mov
jno
lret
movsl
xchg
sbb
outsb
jo
xor
push
ficoms
xor
jp
sbb
js
dec
xor
scas
out
push
mov
xchg
enter
pop
or
mov
out
sbb
mov
div
shll
out
pop
popf
push
mov
ret
es
dec
outsb
and
jae
adc
sbb
sub
dec
lret
repnz
mov
imul
data16
daa
mov
data16
adc
sbb
sub
rolb
add
and
add
bound
out
outsl
cld
push
push
or
loope
iret
push
mov
mov
shrb
pop
pusha
jbe
hlt
ficomps
in
xchg
or
pop
mov
gs
mov
idivl
addr16
icebp
in
mov
jmp
sbb
inc
sbb
out
pcmpeqb
test
in
pop
shlb
cli
xchg
mov
push
shl
cwtl
xchg
jmp
mov
shlb
popf
jge
fsubrp
dec
xor
dec
pop
test
int3
jl
xor
push
ljmp
dec
insb
stos
dec
shll
fstpl
ss
ja
mov
out
daa
cli
adc
jno
jbe
data16
and
xorl
or
test
push
outsl
push
jl
ss
pop
daa
movsl
popf
es
mov
push
sbb
test
mov
bound
aaa
lods
jbe
cli
and
xchg
icebp
lea
std
outsb
cmc
in
test
imul
push
insb
rclb
jae
cmp
shlb
lahf
vaddsubps
xchg
scas
adc
loope
shl
fadd
sti
iret
sbb
iret
lahf
mov
push
jle
jge
or
js,pn
add
cmp
sbb
fwait
ja
or
jle
leave
inc
int
xor
fdivs
pop
sub
jbe
xor
shll
call
xchg
call
pop
rol
jmp
jmp
scas
push
jae
xor
orl
enter
and
mov
jno
rolb
ret
lret
xchg
lods
add
push
loopne
and
mov
and
imul
hlt
imul
pusha
popa
imulb
and
mov
mov
cs
fsubp
dec
data16
dec
pop
pop
xchg
mov
inc
ja
insb
out
stc
jp
icebp
ss
jno
sbb
xor
ds
sub
mov
xchg
sbb
lea
pop
mov
sub
mov
ret
cmp
adc
out
cmpl
xchg
imul
rcrb
stos
xchg
icebp
xor
aam
pop
sti
push
and
mov
pusha
dec
in
adc
xor
mov
dec
and
jge
dec
mov
aas
dec
ret
jg
into
inc
inc
in
sbb
iret
dec
dec
pusha
gs
jno
cmp
sbb
arpl
cmp
int3
push
out
leave
mov
xor
out
jno
mov
roll
jle
push
leave
mov
jle
shll
xchg
vandnps
ret
mov
call
cmp
out
pushf
push
or
cltd
inc
or
inc
mov
roll
push
adc
test
pop
pop
fs
add
rcr
push
and
ret
in
stos
loopne
sbb
scas
pop
or
enter
test
jo
jle
pop
bound
jecxz
mov
in
test
pop
ffree
dec
rcll
stos
pop
pop
or
into
pop
cmp
mov
loopne
cmpsb
xor
mov
jno
lret
lret
loop
pop
out
adc
mov
sub
lods
out
les
aad
aaa
pusha
mov
cmc
add
xchg
mov
adc
aas
push
mov
out
push
jbe
pop
xor
jo
lods
cmp
cld
lcall
cmpsb
cmp
adc
and
test
dec
mov
rcrb
cmp
sub
test
cmp
popa
pop
stos
cmp
and
jl
decb
out
fnstsw
rcl
dec
pop
mov
push
fisttps
and
dec
push
incl
mov
mov
adc
push
push
addb
movsl
stos
xor
insl
and
or
mov
and
mov
push
pop
mov
fldt
iret
frstor
mov
das
ret
add
outsl
movsl
pushf
push
sub
xorb
mov
jb
mov
mov
fisttps
mov
jecxz
je
fimull
orl
add
adc
fucomp
mov
test
pop
mov
aaa
aas
gs
push
jle
lea
push
lcall
mov
jns
jge
pop
sbb
inc
jl
mov
test
mov
cmp
fnstsw
aad
test
andl
stos
test
pop
sub
mov
dec
popf
repz
pop
pop
inc
call
dec
and
stos
aaa
pmulhw
push
and
sbb
in
flds
mov
jne
ret
nop
outsl
mov
iret
rcrl
add
add
sahf
inc
dec
dec
inc
js
push
sub
out
iret
xchg
mov
cmp
int
cld
in
cmp
fstl
lods
scas
call
repz
add
sbb
push
mov
push
pop
andb
mov
rcll
inc
mov
je
ret
imul
mov
adc
inc
and
xor
clc
mov
imul
jg
mov
pop
cmp
pop
push
lret
sbb
sbb
sbb
call
pop
pop
cmp
nop
mov
outsl
fcompl
jns
mov
mov
sub
sub
lret
push
test
ficomps
lods
sbb
es
jecxz
inc
pusha
leave
out
sbb
mov
loop
jo
xchg
insb
out
fstps
pop
stos
and
push
mov
sbb
sbb
arpl
mov
pusha
clc
fnstenv
or
stc
mov
cwtl
jo
enter
fdivs
inc
rorl
pop
xlat
xlat
jmp
rorl
test
pop
icebp
scas
into
es
inc
cmp
inc
out
shlb
out
sub
js
rep
jns
movsl
ljmp
shrb
jmp
cvtdq2ps
and
inc
out
xchg
rorl
sbb
xor
add
fbld
rcll
or
imul
xchg
sub
mov
in
jge
mov
insl
pushf
push
insl
movsb
push
arpl
rcr
dec
pop
add
mov
cmc
mov
push
inc
enter
call
aad
xlat
rcr
push
cli
mov
xor
ja
push
das
mov
jns
daa
pop
jno
xor
jge
aaa
cmp
inc
dec
pop
lahf
es
xchg
addr16
jge
dec
mov
lock
mov
mov
imul
xchg
xchg
negb
loope
and
xchg
aad
mov
repz
cld
out
call
adc
data16
daa
stos
add
popa
xor
xchg
movsb
mov
jmp
sub
movsl
or
repz
gs
je
setbe
sbb
lods
cmp
mov
andl
sub
mov
mov
mov
test
mov
dec
outsl
or
inc
add
push
out
repz
packuswb
cltd
adc
push
pop
mov
and
xor
fbld
popa
cmpsl
inc
xlat
jp
sbb
repnz
mov
mov
mov
in
sub
mov
jle
out
jmp
inc
lea
mov
jmp
mov
add
insl
sub
ljmp
stos
mov
icebp
fs
shrl
adc
popa
inc
jbe
mov
mov
icebp
mov
jns
nop
and
jb
mov
sbb
sub
mov
out
or
sbb
roll
push
and
sbb
enter
jge
xor
out
xor
loopne
andl
lds
adc
mov
repnz
out
inc
xor
popa
and
push
xchg
mov
jns
xchg
subb
add
sub
cmp
xchg
fnstsw
jns
insb
push
or
out
lcall
movsl
push
pusha
sub
aas
rcll
cmp
jo
fs
add
out
shll
cmpsl
ret
jge
enter
cli
add
sti
cmp
loopne
testl
mov
into
mov
incb
pop
cmp
push
mov
pop
pop
inc
je
and
js
shrl
in
xorl
mov
mov
xchg
push
filds
ljmp
adc
inc
dec
decb
cmc
aad
sbb
rolb
mov
add
xor
jbe
call
in
add
into
dec
mov
mov
scas
stc
shl
ljmp
sub
mov
cld
leave
mov
pop
sub
fwait
push
inc
stos
stc
mov
mov
lret
xchg
and
rclb
lret
add
ffree
icebp
jne
popf
mov
jbe
or
popf
and
repz
add
mov
dec
iret
repz
shl
mov
movsb
or
jo
or
pop
cmpsb
aam
jmp
push
jne
mov
xchg
dec
sub
mov
xor
push
mov
in
jge
out
daa
mov
cs
add
jecxz
nop
scas
or
jo
bound
divb
scas
scas
mov
sahf
pop
testb
cmp
or
test
dec
xor
push
inc
addr16
cmc
sbb
arpl
mov
loopne
in
mov
add
and
outsb
lret
mov
popa
into
jecxz
and
test
fbld
fwait
xchg
mov
call
pusha
jle
fld
cli
clc
adc
xchg
bound
push
lock
stos
push
rcrl
movsl
mov
faddl
call
and
js
inc
stos
inc
jne
add
inc
pop
fmulp
stc
es
pop
pop
mov
mov
int3
cs
mov
mov
fdivrs
push
mov
lods
stos
dec
lods
cmp
push
cwtl
mov
lods
test
stc
ret
push
test
lahf
ljmp
push
cmp
aas
test
mov
pop
xchg
xchg
test
idivb
mov
dec
into
xchg
mov
test
xor
cmpsl
out
push
inc
fisubl
inc
imul
cmp
adc
sarl
mov
rcrl
decl
les
bound
fiadds
fwait
les
repz
pushw
pusha
add
mov
push
jmp
jle
inc
in
stos
cmp
outsl
movsb
cmc
dec
jo
out
jo
mov
mov
mov
mov
mov
lds
and
movsb
sbb
movsl
sub
add
sbb
xchg
out
inc
mov
and
lahf
jg
jno
pop
scas
mov
sub
subb
fdivs
or
xchg
dec
sahf
inc
lods
mov
out
ja
bound
negb
mov
jmp
mov
in
lods
dec
dec
push
notb
jno
stos
xchg
loope
jnp
int
cmpsl
jecxz
test
jmp
movsl
push
fimull
mov
ds
cmp
mov
add
mov
or
adc
xor
push
mov
in
add
mov
mov
mov
cmp
add
dec
dec
inc
ds
mov
pop
jnp
sti
jmp
cmpsb
mov
fisttpll
sbb
push
divl
repz
je
das
xor
inc
inc
fists
dec
pusha
insb
mov
jle
dec
call
adc
and
lret
clc
cmp
jb
push
ror
ja
cmc
mov
stos
in
sbb
adc
and
pop
sub
dec
xchg
in
pop
adc
mov
inc
or
dec
fs
xor
mov
sub
int3
mov
fwait
outsl
cmpsb
jp
push
es
fsubrs
jmp
sahf
out
into
sub
std
cwtl
fninit
insb
ljmp
push
ss
jge
bnd
in
cmovg
pop
shlb
sub
lods
jns
int3
inc
push
jb
in
popa
cmpsb
sbb
lds
rcr
mov
xchg
dec
xor
mov
daa
mov
mov
lods
and
cmp
add
repnz
inc
call
test
xchg
xlat
or
pop
jae
jle
cmp
rolb
in
mov
dec
movsb
xor
mov
push
add
jae
pop
pop
cmpsl
sar
pop
insb
out
or
shl
aam
or
aaa
test
icebp
sub
fwait
loopne
xchg
push
pop
xlat
ficoms
sbb
in
dec
push
inc
dec
push
mov
sub
dec
push
iret
and
fsubrl
shlb
mov
xchg
iret
cmpsb
xchg
imul
idivb
push
sbb
push
adc
outsb
adc
inc
and
ds
xchg
or
aad
and
in
sub
jecxz
es
arpl
clc
dec
jmp
push
xchg
jle
lcall
data16
add
mov
popf
ljmp
frstor
int3
lock
imul
sbb
cmc
cmp
pop
test
cwtl
loop
push
pop
cmc
out
and
add
add
jg
sub
push
pop
jne
xchg
xchg
and
fimuls
rcrl
mov
mov
scas
pop
mov
rcrb
and
xchg
pop
popf
cmc
je
and
adc
daa
popf
or
mov
into
mov
jo
jle
fdivrl
daa
sbb
jg
inc
es
pop
iret
stc
mov
xchg
jmp
sub
dec
scas
stos
sbb
sbb
xchg
fsubs
push
bound
jp
std
sub
xor
pop
xor
call
pop
mov
mov
ret
pop
fbstp
jmp
add
sbb
pushf
cmc
fucomi
iret
leave
jb
fsubl
sahf
fisubl
popa
imulb
ss
sbb
sub
jg
xchg
xor
inc
leave
add
ja
popf
xchg
pop
lock
xor
or
push
mov
mov
mov
divb
mov
cmp
clc
cmp
jne
push
or
sbb
aam
mull
ret
xchg
jmp
xchg
sub
fstpt
in
mov
outsl
push
add
js
arpl
push
aaa
pop
xor
cmp
xchg
movsb
push
mov
insl
in
hlt
lds
subl
in
lds
jns
shll
out
xchg
sub
daa
stc
out
sbb
sbb
int3
nop
adc
in
sub
lcall
push
outsb
cmp
repnz
sub
leave
inc
dec
mov
shlb
lret
xchg
sbb
or
gs
mov
stos
jg
jnp
pop
jmp
das
mull
movsl
adcb
pop
sub
xchg
shlb
rclb
imul
sbb
std
mov
ljmp
fstpt
cli
popf
gs
into
dec
or
sbb
adc
cmp
gs
repz
push
loop
inc
popa
mov
fisubs
enter
and
mov
fnstsw
movsb
fwait
sub
loopne
adc
das
in
cli
lcall
sub
out
dec
inc
repnz
dec
and
sub
push
int
jo
shll
ss
das
add
mov
pop
pop
or
fdivrs
mov
lods
movsb
jns
push
push
jne
sub
mov
add
or
sub
mov
jo
imul
lds
gs
lret
iret
mov
imul
mov
lcall
js
in
dec
jb
lret
cmpb
inc
lea
out
and
xchg
lds
jg
xchg
xor
mov
insb
mov
pop
push
push
add
push
sbb
mov
fidivs
lret
lret
or
and
ljmp
cwtl
hlt
pop
push
int
ds
mov
add
jp
addb
add
scas
mov
push
sbb
gs
dec
fcmovbe
sbb
mov
jg
movsl
cmpb
inc
mov
jbe
xchg
pop
sub
sub
iret
push
mov
gs
and
xor
pop
mov
les
fdivrs
ljmp
push
sub
stos
icebp
shlb
test
movsb
iret
xchg
scas
mov
cmc
xor
jbe
stos
inc
jle
xchg
push
or
shlb
sub
and
add
outsb
out
cmp
icebp
cli
fcomps
xor
and
pop
lcall
stos
jns
jbe
or
dec
arpl
call
xor
mov
pop
stos
subb
jmp
pop
test
cmp
rcrb
sarl
mov
push
lahf
dec
mov
dec
or
adc
mov
jmp
dec
mov
aad
fcmovne
stos
movsb
fisttpll
jno
push
rcl
push
adc
ja
addr16
pop
enter
cmp
xchg
adc
mov
in
pop
int
cmp
cmp
inc
cmpb
mov
pop
inc
sbbl
adc
cmc
loope
xor
andb
jge
in
sub
inc
mov
jno
push
xlat
repnz
pop
hlt
mov
mov
movsl
sbb
push
and
inc
andl
xor
jg
cwtl
pop
scas
mov
rcll
sbb
shl
sub
cmp
jge
mov
out
cmpsb
or
cmpsl
mov
and
add
sub
mov
dec
arpl
or
adc
pop
cmp
jmp
ss
bound
sub
push
fisubs
insl
or
cmp
push
mov
lahf
mov
push
adc
ffreep
mov
jbe
gs
xchg
fstpt
nop
mov
dec
xchg
data16
jle
scas
int
mov
sub
cli
in
xlat
imul
push
leave
in
mov
lcall
dec
scas
mov
das
or
add
jmp
daa
in
inc
rcl
fs
or
pop
sub
sbb
mov
xchg
mov
aaa
mov
shlb
cli
mov
push
aas
xor
or
sbb
test
xor
jns
sub
adc
cli
in
push
insb
mov
test
fcos
mov
sub
scas
imul
jnp
and
stos
pop
sbb
inc
aaa
aam
lret
pop
or
ds
jmp
mov
mov
jp
push
xchg
daa
ljmp
idivl
dec
jae
flds
decl
pop
popf
mov
cwtl
lock
sub
cmp
or
arpl
aam
roll
loope
insb
sti
cmpsb
cmovl
cmp
in
xchg
cmpsl
jo
popf
jne
lcall
jns
mov
gs
hlt
inc
test
or
xor
pop
subl
scas
test
out
lods
aam
fisubl
jp
sbb
lds
and
repnz
scas
popf
mov
push
scas
cmpsl
and
cmp
push
mov
aas
push
lods
add
and
test
jmp
jnp
ja
shlb
mov
pop
cli
mov
and
movsl
push
sub
add
test
add
in
ret
push
sub
sub
aad
dec
xchg
jmp
add
js
mov
xor
gs
mov
cld
comiss
mov
mov
sub
mov
loopne
cmp
je
pop
mov
sbb
jae
dec
lahf
add
cmp
stos
jns
rcll
adc
pop
push
or
mov
test
sbb
xchg
add
rol
adc
mov
mov
or
mov
mov
and
lods
ror
and
sub
or
popf
xchg
pop
pop
mov
xchg
repz
stos
in
dec
insl
cmp
add
loope
xor
mov
add
or
cmp
cmp
push
notl
in
mov
adc
stos
push
loopne
push
loop
test
ret
cltd
jge
sbb
mov
pop
sub
sub
or
jecxz
inc
js
shr
xorb
test
push
and
adc
xchg
aas
es
sub
pop
enter
mov
in
cmp
scas
cmp
and
call
mov
std
push
or
into
inc
lds
xchg
pop
or
push
ja
add
cmp
repnz
fs
jno
cltd
pop
mov
mov
sub
xchg
ds
scas
add
aad
xor
das
push
inc
adc
xchg
mov
or
repz
mov
push
push
je
ljmp
or
or
adc
jecxz
dec
mov
sbb
loope
mov
sbb
push
icebp
add
lahf
mov
mov
int3
outsl
into
dec
ret
out
ror
and
inc
xchg
mov
mov
push
jns
das
dec
and
outsl
or
mov
aas
pop
psllq
mov
mov
xor
add
jns
popf
lock
mov
data16
sahf
pop
inc
and
pop
rcrb
push
push
imul
ret
mov
aas
pusha
and
loopne
inc
xlat
dec
push
xchg
pusha
adcb
dec
or
add
push
out
sahf
cmpsl
xchg
mov
cmp
dec
xchg
call
xchg
movsb
out
ja
sti
jnp
pop
adc
or
jo
xchg
mov
xchg
add
xor
out
pop
mov
ret
mov
sbb
out
cmp
inc
incb
mov
pushf
push
arpl
roll
pop
lret
lret
xor
test
int
mov
push
int3
scas
mov
cmpsb
sub
test
in
dec
outsb
mov
xchg
lods
popa
mov
fcoms
iret
jb
enter
unpckhps
add
stc
iret
cltd
or
lret
ja
repz
add
jbe
ret
xor
jo
push
jne
into
pop
mov
fs
mov
aaa
and
loop
insb
add
popa
xchg
stos
push
out
push
mov
cmp
rclb
jno
sbb
enter
jg
into
xor
jnp
inc
sub
aam
cld
or
inc
pushf
mov
mov
pop
sub
cmp
shll
mov
je
jecxz
loop
cmp
wbinvd
rorb
cli
aad
cmp
je
fs
mov
cmp
test
dec
data16
jne
adc
push
pop
mov
or
test
dec
adc
inc
stos
jns
jo
dec
cmp
adc
pop
sbb
test
push
and
mov
mov
mov
jns
inc
filds
cli
lahf
sar
cmp
aad
imul
cmp
dec
sub
adc
mov
in
mov
jne
das
rolb
mov
out
and
xchg
inc
repnz
mov
xchg
out
idiv
lret
syscall
mov
aad
in
lret
sub
pop
dec
pop
pop
adcb
lods
ds
arpl
cmc
push
and
or
mov
mov
push
dec
inc
fmul
test
cmp
in
loopne
sub
jmp
cmp
jle
xchg
aad
stc
addr16
xchg
jno
imul
addl
std
das
call
mov
mov
push
inc
popa
jnp
mov
es
or
clc
fdivs
idivl
or
sarb
or
out
int3
dec
jg
addl
xor
orl
aas
dec
ljmp
stc
pop
sbb
icebp
insl
mov
or
clc
adc
aam
mov
repnz
in
jg
cmp
je
mov
lahf
ror
xchg
dec
inc
add
idiv
mov
mov
cmp
and
aad
xor
jl
out
and
mov
ljmp
shl
lods
scas
daa
or
pop
js
aam
adc
xchg
loopne
lds
mov
mov
test
xor
paddusb
outsl
lods
in
inc
in
jg
mov
sbb
or
pop
fnstcw
xor
call
push
xor
in
out
ss
xchg
lahf
pavgw
mov
or
pop
inc
imul
cmp
sbb
xchg
dec
lea
push
jmp
push
out
idivl
and
xchg
mov
sbb
xlat
inc
xor
roll
push
push
mov
sti
mov
xchg
xchg
xlat
sti
and
jne
push
lret
xor
fcomi
popf
int3
cmp
mov
push
xor
or
cld
iret
mov
add
pushf
mov
loopne
rol
push
aas
jb
and
adc
dec
jmp
add
add
push
clc
lea
ret
mov
test
pop
inc
mov
lock
add
outsb
pusha
mov
mov
int3
std
adc
and
dec
mov
cmp
rcrl
rcr
ja
cmc
std
insl
or
xor
add
int3
xchg
inc
mov
cltd
cwtl
dec
cltd
dec
push
or
inc
fs
push
pop
xchg
push
mov
and
jae
stos
mov
mov
jbe
test
popf
pop
jmp
movsb
repz
movsl
and
data16
sbb
jns
sarb
push
mov
adc
pop
inc
dec
or
std
cwtl
inc
je
int3
stc
adcb
sbb
xchg
xchg
mov
pop
pop
mov
int
shlb
loopne
push
fisubl
cmp
xlat
adc
std
lods
pushf
enter
push
add
lcall
xlat
mov
adc
in
mov
test
imul
in
out
adc
mov
mov
pop
push
pushf
std
xchg
jle
or
dec
icebp
dec
mov
sbb
xchg
inc
jg
xchg
lods
pushf
rol
pop
lock
mov
lret
fcoml
pushf
inc
xchg
pop
lea
push
ds
inc
inc
or
arpl
pop
and
mov
inc
mov
sub
out
dec
les
and
in
and
rorb
mov
shll
cmp
cltd
xor
cmp
call
push
adc
mov
ljmp
jae
loopne
lcall
dec
xchg
shrl
frstor
ss
xor
fsts
mov
outsb
fstpl
adc
int
inc
mov
add
outsl
insl
lods
push
fdivs
pop
out
mov
dec
xchg
add
mov
add
and
add
dec
sbb
sbb
rclb
shll
test
ret
arpl
ret
daa
mov
rolb
test
les
xchg
sahf
mov
push
out
dec
jo
sahf
in
push
push
out
out
push
lods
sbb
sbb
ss
std
jno
dec
mov
mov
nop
push
es
xchg
enter
aad
test
je
aad
fdivrs
int3
in
movsl
outsl
mov
lea
shlb
add
dec
cmpl
pusha
loope
les
mov
enter
stc
sbb
xchg
push
dec
into
cmp
ja
add
sbbl
fs
or
movsl
in
stos
mov
and
push
inc
loope
and
int3
aaa
xor
lret
scas
xchg
jmp
jle
push
ljmp
xchg
mov
cld
jbe
mov
cmp
jbe
call
aam
sbb
adc
cld
or
insb
divb
pop
xlat
sbbl
sub
xor
mov
jb
cli
dec
jmp
mov
xchg
jp
je
or
mov
ss
adc
jle
pop
mov
mov
mov
mov
xchg
cmp
das
xchg
sub
cmpsl
jp
sbb
test
test
dec
stc
or
fimull
adc
nop
fcmovbe
pop
in
xchg
sbbl
sub
xchg
sub
cld
rcr
test
inc
jle
mov
adc
mov
push
leave
das
shll
imul
call
adc
dec
stos
in
jg
ss
add
add
mov
das
inc
aas
in
call
in
jmp
mov
cmp
jb
mov
iret
and
xchg
pusha
fstpt
popf
pop
lret
jecxz
shrl
sbb
rorb
hlt
outsb
sub
or
jle
movsl
shrl
test
repz
xchg
cli
jbe
rorl
lcall
enter
popf
aas
add
mov
cmc
cltd
cli
ljmp
jmp
cmp
mov
xchg
dec
sbb
push
adc
jne
test
stc
mov
test
and
int3
sub
mov
test
sar
xchg
addl
mov
mov
push
xchg
fnstcw
fs
bound
xlat
push
adcb
jge
es
int
push
je
push
int
test
cmc
dec
lret
dec
mul
jl
push
fucomp
scas
sub
lcall
sub
sti
push
out
mov
rol
mov
movsb
mov
cmp
or
jle
cmpsb
sbb
sarb
es
jmp
xor
mov
mov
sbb
jge
inc
xchg
scas
cmp
lahf
sbb
mov
dec
mov
mov
xchg
inc
mov
sbb
subl
stos
stc
push
test
fisttps
jecxz
fnstenv
testb
cmpb
testb
cmc
mov
cmc
add
push
sbb
jo
cs
sbb
fstpt
mov
jecxz
and
cld
test
fdivl
push
mov
pop
sti
jns
testl
shl
inc
fstpl
dec
into
adc
mov
outsl
pop
mov
scas
or
neg
mov
and
arpl
ret
aaa
pmaxub
xchg
out
dec
cld
sub
movsb
inc
add
test
outsl
dec
mov
push
or
inc
push
cli
push
fsts
mov
out
popa
mov
shll
je
lret
push
in
push
fbstp
cmc
or
add
mov
and
push
mov
out
jg
adc
cmpsl
push
dec
mov
jno
pop
fidivrl
js
ret
andb
dec
push
inc
mov
insb
sbb
andl
mov
cltd
sub
sub
push
and
xchg
xlat
loop
idivl
xchg
orb
dec
int3
rclb
inc
icebp
in
pop
dec
bound
roll
loop
pop
rorb
mov
xchg
or
leave
sti
cli
jl
aaa
dec
repnz
or
inc
adc
push
mov
xorl
call
mov
lahf
pop
in
ret
bnd
ss
lahf
mov
sub
movsl
in
ret
iret
pusha
loop
push
adc
sub
xchg
lret
testb
fs
jno
mov
arpl
imul
fnstenv
lea
pop
jle
test
popa
lods
pop
fnstsw
pop
repz
inc
mov
or
inc
fcomps
stos
in
inc
cmpsl
lock
mov
fidivl
sub
ja
psrlw
lcall
xchg
lret
sub
jno
fildll
xadd
pop
pop
add
sahf
or
jp
pop
or
adc
jge
int3
aam
jg
fwait
add
push
push
mov
fdivrl
jae
add
cmp
rcll
push
ficoml
add
loop
sbb
dec
mov
cmp
jbe
std
fsts
jp
push
movsb
loop
mov
lahf
decl
pop
sub
xor
sub
cmp
cs
push
jnp
pop
add
xlat
dec
mov
cmp
cmc
in
movsl
in
push
mov
xchg
lret
movsl
mov
pslld
lret
or
lock
aam
dec
sahf
pop
jbe
jnp
sbb
sahf
sahf
addr16
mov
and
int3
xor
push
xchg
lea
jle
loope
cmp
les
and
and
xchg
addr16
mov
cli
shll
jb
jbe
pop
dec
mull
mov
cwtl
lret
pop
dec
pop
aas
xor
pop
pop
dec
push
mov
and
dec
cmp
dec
lret
mov
jns
jge
sbb
jb
repz
dec
mov
mov
inc
dec
pop
xor
mov
lret
ret
cmp
mov
fcomi
and
adc
pop
cld
cmp
or
push
cmp
pop
push
ja
xchg
dec
notl
push
loopne
sub
loopne
mov
in
add
loop
sbb
incb
rorl
mulb
add
imul
sub
pusha
xchg
inc
cmp
sub
and
sub
cmpsl
add
add
add
test
or
cltd
in
test
sub
mov
into
mov
cmpb
inc
pop
mov
push
add
adc
je
inc
icebp
mov
hlt
mov
jge
mov
jnp
test
fucomip
sbb
mov
jns
shlb
js
jno
test
mov
jmp
cmp
pop
aam
xchg
jbe
dec
imul
pop
jae
out
inc
loop
outsb
addr16
mov
xor
or
push
lcall
lods
sbb
in
movsl
in
push
fidivl
mov
adc
cli
pop
hlt
lret
in
mov
xor
lods
in
pop
lcall
or
sahf
jno
aaa
subb
push
xchg
dec
cld
stos
jbe
push
fisubrs
or
cmp
cmp
arpl
adc
roll
add
mov
sbb
and
adc
mov
xchg
lret
cmp
outsw
daa
jae
shl
and
push
cwtl
pop
fiadds
movsl
sbb
pop
push
loop
mov
jb
pop
adc
popa
pop
push
fildll
add
jae
cmp
clc
es
out
sarb
sbb
popa
in
adc
test
jbe
cmpsl
sbb
and
inc
pop
mov
jge
std
test
and
cs
jo
cltd
out
or
test
daa
ret
test
adc
sbb
push
in
inc
and
popa
cltd
int3
push
mov
clc
lea
and
dec
stos
into
cmp
fisttpll
std
ljmp
in
inc
mov
leave
iret
push
data16
push
push
sbb
or
outsl
lahf
sub
adc
fldt
daa
je
mov
xlat
adc
add
push
mov
dec
inc
js
pop
cmpsl
ja
sbb
jne
push
jmp
daa
loope
mov
hlt
outsb
xor
sub
pop
hlt
in
pop
and
fsubrl
and
dec
mov
push
pop
sub
xlat
cmp
mov
daa
fdivs
and
or
fisubrs
jmp
movsb
daa
sbb
movsl
adc
aad
mul
mov
out
sahf
bswap
loope
repz
in
in
or
add
sbb
xchg
movsl
aaa
inc
xor
xchg
or
in
aad
bound
ljmp
cmp
fcoml
addr16
add
dec
loopne
sub
xchg
jae
std
insl
mov
ss
xchg
mov
nop
arpl
push
sub
aas
or
pop
popf
inc
mov
mov
cmp
adc
xor
push
out
outsb
or
icebp
or
out
mov
push
and
lret
adc
shlb
or
push
or
lods
test
sub
xchg
mov
cmpb
inc
add
ds
iret
lods
dec
je
imul
stos
push
loop
icebp
adc
add
cltd
push
sbb
xlat
call
cmpsb
inc
je
cld
xlat
mov
mov
rorl
dec
xchg
filds
sub
mov
outsl
rcll
bound
sub
mov
push
outsl
stos
int3
adc
test
ljmp
sbb
cmp
in
outsl
push
add
repnz
fsubrl
call
pop
mov
out
xor
mov
sub
xchg
fnstenv
lret
pop
pop
loopne
enter
js
pop
lods
loope
mov
jmp
or
scas
movsl
inc
dec
push
pop
mov
ret
sbb
stos
cmpxchg
shl
fadds
jge
lods
pop
and
dec
pop
adc
push
mov
cmp
stos
sbb
push
push
and
push
int3
out
fs
pop
xor
pop
inc
shl
cmp
cmp
pop
pusha
dec
push
movsl
stos
pop
inc
iret
ss
daa
pop
pop
mov
add
cmpsb
and
mov
test
xor
mov
enter
fisttpl
lock
push
outsb
jge
mov
sub
pop
dec
dec
es
jge
rol
jns
cli
mov
cmc
cltd
add
test
dec
xchg
xchg
sub
inc
xlat
orl
inc
and
iret
arpl
ffreep
mov
fidivrl
push
xor
repnz
daa
adc
notb
cmp
out
inc
aaa
call
xchg
aad
and
arpl
dec
shrb
inc
or
add
fxch
lret
jecxz
lret
int3
jne
and
sub
fwait
movsb
lcall
movsl
mov
mov
es
sti
popa
pop
push
mov
pop
and
bnd
mov
dec
mov
jmp
and
test
adc
mov
test
push
aas
clc
push
mov
notl
dec
pop
mov
pop
ret
pop
cmp
jp
aad
inc
pop
lds
push
adc
lret
inc
cs
xchg
aad
xlat
roll
scas
repnz
xor
insb
lods
add
jns
xor
mov
sbb
sbb
mov
sarb
movsb
sub
xchg
add
stc
out
lcall
pop
xchg
push
fwait
hlt
adc
sbb
push
inc
std
xchg
pushf
mov
xor
dec
adc
shrl
jl
jge
xchg
xchg
mov
mov
arpl
jae
enter
mov
pushf
adc
xorl
popa
lcall
stc
stc
pushf
mov
inc
ds
ds
cmp
stos
mov
outsb
cld
loop
inc
pop
sbbb
lcall
mov
iret
dec
jecxz
aas
inc
sub
enter
xchg
pop
and
mov
icebp
call
daa
pop
sti
inc
in
insb
push
dec
pusha
pop
mov
and
push
shlb
adc
push
dec
sub
icebp
je
lret
mov
test
out
adc
ja
push
aas
dec
cwtl
ret
mov
clc
std
cld
daa
stc
mov
push
fs
pop
jmp
add
stos
pusha
and
popf
addr16
pop
movsl
adc
cmp
mov
dec
adc
lods
mov
loope
lock
push
scas
jl
aam
movsb
int
in
aas
sbb
jae
mov
push
fwait
hlt
inc
shrl
jae
mov
inc
shrb
test
je
je
jnp
js
pop
scas
clc
pushf
arpl
sbb
xchg
mov
cmp
aam
mov
cli
inc
pop
mov
insl
mov
jcxz
fcmovnu
ss
fsts
cmp
jle
mov
ss
sahf
sbb
insl
cmp
jno
mov
clc
sti
pop
sbb
lods
les
scas
lret
pop
fistpl
mov
in
xor
jns
mov
cmp
jbe
pop
jle
xor
sti
imulb
bound
push
or
pop
les
xlat
inc
movsb
jae
cmp
gs
mov
and
nop
mov
xorl
fstpt
mov
adc
inc
arpl
sub
les
jnp
jecxz
es
dec
mov
pop
add
xorb
addl
stos
ret
sti
xchg
xor
and
stc
and
iret
xchg
test
cmp
xor
sbb
loopne
fdivl
outsb
cs
jb
xorl
push
sub
adc
ret
cltd
outsb
popf
jp
pop
jmp
add
in
loopne
cmp
push
incl
or
shll
or
jmp
stos
rcrl
mov
jle
ficoms
pop
xchg
push
add
std
scas
push
lods
cmc
jmp
imul
jb
jne
add
sbb
js
sbbb
jp
add
pop
movsb
mov
xchg
lret
cmp
mov
mov
repnz
mov
lods
push
jbe
leave
sub
sub
loop
xchg
movsb
add
jns
ss
mov
mov
outsb
outsb
add
popl
sti
pop
insb
hlt
ja
mov
sub
shrb
mov
es
mov
repz
cmp
mov
mov
dec
cmp
jns
stos
lcall
cwtl
add
cmpsl
fsubrp
push
fs
gs
mov
dec
jl
adc
shr
mov
pop
mov
sti
cs
jne
mov
pop
mov
jl
add
imul
adc
mov
and
push
adc
and
jge
pop
enter
and
jecxz
stos
dec
xchg
inc
loopne
test
pop
push
pop
in
add
scas
jb
test
mov
pushw
fisttpl
stc
push
inc
cmpb
in
push
push
inc
and
hlt
pop
adc
xchg
dec
push
repz
dec
aad
dec
push
pop
push
xchg
mov
push
mov
imul
test
pop
testb
fldenv
push
sti
out
add
jmp
push
jne
push
sbb
pop
cmp
xor
test
jnp
sbb
sahf
jnp
pop
das
data16
pushw
xor
push
scas
in
sbb
xor
stos
add
and
fisttps
js
inc
xchg
adc
mov
adc
cmp
test
sbb
jmp
sbb
pop
or
test
mov
lret
push
insb
sub
mov
into
das
pusha
out
sub
sbb
mov
hlt
push
inc
mov
in
xor
mov
icebp
xor
outsl
jae
mov
jnp
xlat
in
jnp
pusha
nop
bound
add
jbe
xchg
mov
in
cmc
sub
push
dec
pushfw
sbb
popl
lcall
outsl
imull
and
iret
aad
mov
jl
add
jo
pop
shrb
in
cwtl
js
movsb
or
cld
fcomps
jnp
mov
icebp
shrb
or
int
fmul
adc
pop
test
lds
rcr
or
arpl
dec
add
mov
jl
cwtl
inc
fcmovbe
mov
lea
jne
out
ja
mov
adc
mov
sti
loopne
dec
push
fsubrl
push
push
ret
std
sub
or
fwait
mov
roll
andb
shlb
jne
xchg
aas
inc
jae
jle
push
inc
aad
loopne
add
xlat
ficoms
xchg
cmpsb
xchg
fwait
rorb
and
cmp
cmc
in
fs
lea
mov
mov
ss
lcall
fidivs
clc
or
xor
dec
sub
jp
mov
adc
sbb
cmp
js
int
out
fwait
jle
test
pop
mov
ror
loopne
or
loop
inc
into
push
xor
data16
sbb
xor
loope
and
pop
mov
push
dec
inc
mov
sbb
fadds
cmpsl
xlat
sub
jge
adc
mov
cmp
push
push
push
pop
lret
bound
mov
dec
in
xor
in
mov
jo
lods
outsl
sar
xor
fnstenv
jecxz
xchg
or
mov
ret
aaa
mov
xchg
inc
les
jg
mov
inc
push
mov
leave
into
test
loop
sahf
dec
push
imul
clc
aas
xlat
mov
or
movsl
dec
insl
repnz
sub
cmp
lock
dec
push
pop
movsb
xor
jp
add
fdivl
dec
stos
adc
out
dec
jb
insb
dec
pusha
xor
fnstcw
stos
ret
icebp
sbb
pusha
jae
xor
pop
int
repnz
mov
hlt
mov
scas
or
sahf
xor
jl
fidivrl
movsl
fwait
jae
mov
adc
sbb
push
cmp
stos
mov
cmpsb
inc
repz
jne
push
pxor
pop
pop
jns
mov
sbb
fdivr
rclb
and
push
arpl
add
adc
xor
add
jge
movsb
stos
lea
jbe
push
outsl
and
adc
inc
ret
sub
cmp
rorl
sub
pop
inc
sub
sbb
inc
mov
arpl
pop
ss
dec
mull
mov
ja
push
push
xchg
dec
stos
iret
andl
outsb
mov
sti
push
notl
mov
mov
jns
shll
lods
mov
subl
insl
lret
test
sbb
cmp
push
xchg
pop
fsub
int3
xchg
and
idivb
mov
dec
cmc
lods
shl
mov
push
sub
and
mov
lds
xor
cmp
leave
test
flds
jo
pop
loope
cmpsb
jae
mov
push
jge
ss
into
lds
push
rcrb
insb
roll
je
dec
push
test
xor
or
in
pop
stos
mov
push
cli
out
jb
jle
lcall
jecxz
cmp
mov
inc
shll
aas
adcl
pushf
sbb
or
orl
add
mov
pop
push
rep
sbb
dec
int
movsl
and
insl
push
cltd
jmp
scas
xchg
pop
mov
fildl
dec
shll
or
jno
test
test
mov
push
out
cwtl
dec
pushl
cli
push
pop
cmpsl
dec
ret
adc
lcall
pop
fnstenv
or
fadds
data16
mov
sub
push
add
mov
loopne
aam
mov
mov
leave
cmc
and
push
int
pop
jnp
ljmp
sbb
inc
xor
mov
sti
sti
lahf
lods
ror
cs
scas
daa
add
dec
xor
inc
sbb
sub
insl
mov
mov
cltd
push
ss
cmp
sbb
add
inc
jecxz
ror
and
fcoml
aaa
sub
mov
cmp
add
fwait
test
sbb
imul
fisubs
sbb
leave
call
out
inc
or
mov
subb
sub
test
movsl
in
push
lea
lret
insb
xchg
unpcklps
subl
in
int3
pushl
mov
fldt
cld
jne
shl
enter
xchg
adc
test
in
bswap
stos
cmc
pop
inc
xor
jo
cmp
sahf
dec
jmp
loopne
addr16
mov
dec
cwtl
and
ret
sbb
popf
and
or
jecxz
lods
lods
shrl
imul
fidivs
into
xchg
sub
repz
icebp
scas
das
pop
cmp
mov
mov
xor
push
mov
imul
jl
mov
insl
roll
inc
lods
sub
sahf
or
repnz
fwait
adc
pop
mov
push
mov
mov
or
jb
cmp
rorl
test
outsb
lcall
or
das
jg
xchg
inc
sbb
or
popa
jne
xor
jno
dec
jo
mov
or
sub
inc
push
les
mov
rcl
and
fs
rorl
and
sub
cmpsl
add
mov
movsb
call
pop
push
and
imul
fisubrs
jno
jne
mov
repz
push
rcrl
dec
fmul
test
sbb
iret
rol
shl
pop
jg
out
push
inc
icebp
sahf
int3
insb
ljmp
push
jmp
stos
adc
jb
xchg
sbb
xor
mov
push
jbe
cmpsl
dec
out
sahf
daa
dec
add
adc
dec
jge
daa
mov
push
jl
jg
out
mov
xchg
bnd
int
cs
outsl
sahf
out
btc
test
dec
mov
cmpps
iret
jns
jb
es
lcall
gs
xor
xchg
push
cmp
mov
sub
mov
cld
stos
pop
add
push
fcmovnu
jbe
cmp
cmp
adc
sub
dec
out
xor
push
loop
jns
or
dec
push
or
test
push
fdivl
cmp
jbe
loope
nop
adc
mov
aam
imul
fdivs
mov
lds
cmc
sbb
cld
arpl
shll
int
insb
xor
inc
inc
mov
jmp
jnp
add
icebp
lahf
dec
popf
gs
mov
sub
adc
ss
loopne
aaa
push
sbbl
and
inc
in
cmp
mov
incl
cltd
mov
scas
stos
dec
aam
fidivrl
mov
jo
inc
data16
lahf
addr16
xchg
push
testb
sub
into
jae
scas
xor
cltd
and
mov
int3
cmp
push
mov
js
adc
xchg
push
xor
fcoms
dec
pushf
repz
enter
pop
cwtl
repz
icebp
jne
ret
cwtl
xchg
sub
mov
cmpsl
inc
enter
mov
mov
lods
pop
fnstcw
push
sbb
incb
ret
jnp
cmc
pop
pusha
sub
jmp
xor
sub
inc
mov
loope
xor
cmp
out
push
jle
mov
mov
or
daa
pop
out
dec
add
and
jnp
std
pusha
or
or
dec
arpl
imul
scas
shll
leave
xor
pop
adc
das
jmp
cld
scas
cwtl
mov
sub
shrb
pop
sbb
cmp
pop
jae
cmpsl
xor
adc
out
pop
lods
test
dec
shl
jns
movsb
mov
lret
in
fidivs
xchg
cmpsl
lds
jnp
lcall
inc
movsw
cmp
dec
cld
jge
cmpsb
mov
mov
xchg
mov
sahf
out
xchg
and
mulb
xchg
mov
adcb
daa
jbe,pt
leave
jl
or
mov
dec
or
outsb
sub
in
lds
out
imul
ret
xchg
xlat
mov
push
fisubs
mov
movsb
hlt
adc
or
data16
inc
dec
mov
pop
cli
fstpt
push
andl
movsl
adc
cli
mov
mov
add
jo
sub
imul
insb
sahf
xchg
call
popf
jge
dec
sub
movl
cli
mov
arpl
enter
dec
mov
das
shr
shll
sbb
mov
repz
push
push
cli
xor
daa
or
iret
inc
lahf
sub
adc
pusha
pusha
mov
dec
loop
or
sub
pop
push
inc
or
test
ret
push
inc
bound
aaa
mov
cmp
xchg
insb
ret
lret
jge
fsts
lcall
mov
lea
pusha
fisttpll
sbb
outsb
icebp
mov
int3
pop
pop
jns
int3
cmp
cmpsl
bound
movsl
das
jp
cwtl
pop
mov
test
outsl
int
pushf
jne
inc
idivl
rcll
xor
out
adc
push
xor
aaa
mov
xor
mov
shlb
pop
sub
mov
jl
stos
test
rclb
adc
rcrl
mov
add
in
xor
insb
pop
nop
jae
cmpsl
xlat
stos
jp
ds
call
and
jg
adc
fimuls
cli
xchg
xorb
test
cmp
aaa
xchg
or
mov
jnp
jl
inc
jno
jno
jl
sbb
lock
inc
mov
loopne
xorb
adc
xchg
mov
xor
sub
outsb
add
outsl
popf
loope
inc
stos
push
inc
adc
cmp
aaa
mov
aad
testl
pop
and
inc
jbe
sbb
scas
clc
outsl
push
mov
mov
inc
pushf
jbe
addr16
dec
popa
adc
push
imul
jg
sub
pushf
push
push
sbb
stc
popf
loop
call
test
mov
repz
repz
femms
pop
mov
in
mov
icebp
in
in
shlb
icebp
repz
cli
aam
pop
jl
fistpl
vprotw
and
sbb
pop
outsl
test
pop
fsts
xchg
inc
inc
test
fsubr
push
pop
mov
cmp
adc
mov
ljmp
inc
mov
mov
inc
xchg
stc
cmp
insb
enter
or
dec
mov
leave
test
xchg
xor
je
out
dec
out
add
pop
loopne
and
sahf
inc
cmp
or
push
mov
xor
test
lret
std
fwait
cwtl
push
movsl
xor
addl
inc
and
mov
push
adc
outsl
push
xlat
or
adcb
cmpsl
or
jnp
mov
movsl
or
mov
push
push
test
mov
xchg
and
xchg
ja
bound
aam
pop
jns
adc
mov
xor
test
mov
sub
push
int3
cmp
aad
popf
scas
divl
outsb
pop
xchg
rorl
pop
mov
popa
mov
sub
scas
cmp
sbb
cmp
in
in
dec
roll
test
pop
xor
and
shlb
xchg
inc
movsl
push
jno
subb
adc
data16
xchg
lods
mov
xchg
mov
neg
lds
jp
jb
adc
jl
repnz
sbb
pop
movsl
addr16
sub
shrl
pop
push
cmp
ret
mov
push
stc
popl
add
mov
out
leave
lret
pop
dec
insb
or
js
test
xchg
fdivrl
xor
dec
subb
cmpsb
addr16
pushf
inc
fisubrs
sahf
jle
mov
sbb
imull
jl
cmp
loope
xorl
sbb
cmp
pop
mov
or
lods
jne
outsl
xchg
gs
mov
mov
mov
mov
or
cmp
jge
jo
ret
vpmulhw
into
fisubl
mov
stos
jno
test
pusha
arpl
outsb
mov
out
dec
pop
add
cld
mov
mov
and
cs
push
dec
cmpsb
jle
xchg
test
inc
sbb
in
rorb
push
and
cld
ss
cwtl
jmp
sbb
xchg
lds
cmp
or
mov
subb
insl
int3
hlt
mov
mov
orb
add
push
inc
aad
fmuls
push
push
cmp
jbe
cmp
fcomi
dec
adc
enter
sbb
xor
lds
pop
jmp
fistps
rclb
mov
push
pop
adc
sub
push
popf
popa
lods
pushf
cmp
xor
test
scas
pop
adc
push
mov
jb
stos
scas
add
and
lcall
jb
pop
dec
mov
into
push
xor
mov
inc
mov
pop
testl
scas
sub
outsl
mov
mov
mov
push
xor
dec
mov
push
stos
push
push
or
aad
and
mov
sbb
jo
cmp
inc
sbb
popl
push
jle
out
push
iret
in
push
inc
fldenv
dec
mov
int
dec
or
cwtl
jl
insb
fmul
stc
outsb
mov
fwait
add
and
dec
xchg
shll
je
and
xchg
pushf
xchg
jg
int
adc
dec
in
jb
aam
daa
inc
xchg
sbb
jnp
inc
daa
jae
adc
push
xor
sub
sub
ret
mov
cmp
int
xchg
mov
loope
std
stos
fcomps
add
cwtl
sahf
aad
pop
xor
xchg
or
cmpsl
adc
mov
scas
xor
test
psubusb
out
push
ret
out
xchg
popf
cmp
lret
lods
mov
pop
mov
jmp
jecxz
movsb
pushl
filds
fstp
arpl
sbb
adcb
mov
jo
xor
mov
xchg
hlt
sub
gs
add
cld
cmpsb
test
rorb
cmpsb
xor
cltd
sub
lods
sub
mov
push
das
ss
ja
mov
xchg
push
shlb
iret
sbb
int3
test
xchg
fs
jmp
pushf
cltd
test
add
or
mov
in
pop
or
icebp
outsl
aam
call
cmc
and
dec
fneni(8087
aam
cwtl
hlt
scas
pop
pop
push
mov
pop
imul
inc
popf
jbe
add
int
or
ja
mov
and
loopne
dec
adc
dec
cltd
xchg
jle
movsb
pop
test
jp
sub
push
jae
dec
sub
mov
jb
bnd
jp
push
fisttps
mov
mov
push
sbb
imul
cmp
sarl
or
xor
mov
in
jb
push
mov
mov
push
sbb
adc
sub
movsb
hlt
add
mov
jbe
jle
and
mov
add
mov
dec
inc
sbb
mov
and
shll
pop
imul
or
outsb
lcall
orl
or
test
and
dec
sar
loopne
lahf
sar
cmp
fwait
xchg
mov
cli
pushf
xor
enter
push
xor
clc
sub
mov
xor
sbb
daa
mov
icebp
orl
and
jmp
in
out
cmp
repnz
or
add
dec
loopne
sub
jbe
mov
xor
mov
pop
sub
xchg
int3
addr16
shr
jns
mov
xlat
inc
pusha
inc
mov
cmp
pop
inc
mov
add
test
sarb
or
jecxz
pushf
ds
int3
cmp
ss
cmp
xchg
or
dec
add
ja
push
leave
in
adc
out
iret
sbb
cmp
addr16
icebp
or
push
cli
aam
mov
dec
loope
ret
push
add
cltd
pushf
loope
sbb
mov
mov
scas
jo
xor
mov
pop
shl
push
cmp
push
bound
cld
icebp
jmp
pop
mov
cmp
push
incl
in
fwait
mov
or
les
leave
xchg
mov
mov
in
jg
sbb
xor
inc
in
jne
or
scas
sub
jl
or
push
cmp
aam
sub
sarl
loopne
scas
sub
cmp
cmpsb
scas
arpl
addr16
pop
jae
gs
bound
jns
cmp
ret
add
cmp
mov
lods
es
jp
push
xchg
in
ja
cmpl
pop
cltd
mov
inc
lea
sar
and
sarl
sub
jbe
fisubrl
ret
repz
pop
rol
push
inc
inc
mov
dec
lods
ror
fsubs
js,pt
mov
push
subl
sub
shl
push
xor
mov
lock
dec
sahf
notb
pushf
andb
cmp
clc
insb
sub
test
jmp
or
fisttps
loope
pop
push
mov
push
jl
andl
or
mov
mov
pop
insl
out
addl
mov
push
movsb
jl
stos
push
sarb
iret
loopne
and
jno
pop
add
shlb
roll
in
dec
fst
decl
pop
cs
in
mov
inc
fildl
std
mov
ja
inc
lahf
jle
idivb
cmpsl
jg
insl
call
xchg
rcrl
xchg
scas
jl
or
dec
dec
ja
negl
add
cld
les
mov
push
lret
imul
push
sarb
jae
push
mov
push
lea
mov
mov
push
push
sub
xor
sub
ds
jmp
mov
movb
mov
icebp
jo
add
xor
push
push
cmp
fcoml
xchg
pop
xchg
lea
inc
adc
jp
mov
push
cmp
mov
mov
rep
loopne
shrl
xor
mov
pop
sub
mov
sub
cmp
push
and
jnp
scas
push
sbb
adc
mov
pusha
add
cltd
cmp
faddl
popf
sbb
mov
push
cmp
jle
sar
mov
arpl
sub
xchg
jbe
add
stos
test
xor
lcall
inc
movsb
add
hlt
pop
sub
pop
mov
dec
or
pop
rolb
fcoms
mov
mov
lods
fwait
ds
inc
mov
scas
pushf
ja
les
cs
inc
jno
pop
dec
cmc
pop
pusha
cmc
fs
fwait
or
push
cmp
fnstenv
jle
stos
in
inc
dec
add
mov
xchg
push
sbb
mov
mov
fbld
pop
inc
lods
pop
xchg
cmpsb
cli
shrb
lds
in
mov
mov
stos
sub
mov
mov
mov
and
mov
mov
outsl
out
in
loopne
adc
movsb
shll
clc
mov
push
test
shlb
outsl
or
sbb
pop
shr
popf
mov
or
push
cltd
jg
ffree
adc
dec
adc
jmp
loop
bound
mov
imul
cmc
roll
je
mov
lods
pop
and
and
or
loop
mov
add
jb
jo
dec
mov
negl
sub
pop
sub
xor
xchg
sbb
in
lret
mov
xor
dec
xchg
ss
cmp
push
outsb
test
jmp
mov
hlt
lods
movsb
push
mov
sub
sub
aam
mov
outsl
mov
lock
xor
ss
in
dec
fs
jbe
xchg
fstl
loope
sbb
shll
and
add
jecxz
adc
pop
testb
pop
jo
popf
jle
orb
fbstp
xchg
ljmp
cld
jle
insl
dec
loope
mov
arpl
leave
lea
xchg
js
mov
pop
mov
std
ljmp
mov
mov
fsubrl
aas
fistpl
popa
inc
leave
rorl
dec
lcall
pop
rcrl
sbb
shrb
cltd
push
dec
inc
lahf
fdivs
cld
arpl
inc
test
out
add
sub
aaa
popa
clc
rcr
fmull
in
mov
out
scas
xor
mov
push
sub
setp
je
lock
mov
out
jno
and
xlat
xchg
out
xchg
dec
pop
mov
jp
lods
aas
je
sbb
test
scas
shll
test
push
mov
dec
adc
push
rcll
mov
stos
mov
ficomps
sti
inc
mov
and
dec
xchg
int3
pusha
leave
jnp
arpl
jnp
ds
sbb
movsl
sbb
insb
aaa
inc
xchg
mov
fistpll
shl
movb
add
cmc
or
insb
inc
lret
add
adc
add
pop
rorl
ds
mov
push
jo
xor
mov
jne
sbb
dec
aam
fnsave
push
lcall
mov
jl
out
fcmove
pop
ja
xchg
xchg
call
add
sahf
inc
cld
mov
lret
mov
out
roll
mov
inc
jo
dec
mov
xlat
mov
sub
or
leave
fld
in
and
rol
jmp
sub
and
cltd
in
mov
sarl
mov
mov
mov
and
inc
jmp
test
mov
mov
mov
mov
push
out
in
bsf
pop
andb
rclb
ja
ror
inc
add
outsb
mov
push
xor
out
or
push
jmp
xor
push
js
les
mov
add
or
fdivr
inc
fadds
jl
xchg
push
test
inc
or
push
je
inc
inc
test
cmp
dec
sub
int
scas
push
test
or
xlat
int3
sarl
out
mov
scas
mull
dec
insb
dec
inc
in
sub
icebp
out
mov
aaa
and
adc
xchg
xor
jae
insl
in
xchg
push
mov
mov
fld
aam
xchg
cmp
data16
dec
ss
jae
int
mov
aaa
jnp
mov
pop
and
jl
setae
inc
xlat
cmp
imul
jecxz
scas
fadds
cmp
repz
daa
cltd
pop
stos
sub
xor
test
push
pushf
inc
ja
daa
in
sbb
jmp
xorl
cmp
jl
dec
popf
out
gs
sbb
scas
sbb
inc
popa
hlt
test
scas
jmp
int3
out
mov
outsl
lods
jmp
push
cli
mov
fucom
loopne
or
gs
out
cmpsl
fadd
sahf
push
jmp
xor
xor
int
xor
xor
cltd
mov
inc
inc
mov
rorl
hlt
mov
xor
sbb
jnp
fxtract
mov
or
adc
sub
sub
pop
sbb
jge
fcompl
xchg
out
insl
push
popa
ljmp
adc
xchg
mov
xor
fldenv
mov
outsb
fdivp
inc
and
lcall
add
test
loope
dec
jo
xchg
push
shll
sbb
xor
xchg
mov
mov
mov
xchg
fwait
mulps
push
sbb
pop
and
add
xor
popa
mov
mov
pushf
sti
fcomps
ljmp
mov
gs
insb
mov
or
xor
mov
mov
neg
pop
in
cltd
add
push
inc
jp
ret
xchg
das
popf
add
and
jmp
scas
dec
hlt
sbb
push
jge
add
imul
push
push
aam
aam
or
push
push
dec
arpl
fisubrl
sub
sub
jge
xchg
cmp
jmp
imul
sar
xor
cld
push
loopne
push
pop
clc
sbb
scas
mov
jmp
jnp
and
lcall
pop
and
ret
stc
jo
dec
xchg
ficoms
inc
jecxz
lods
xchg
in
jno
inc
mov
scas
mov
fstcw
std
mov
inc
cld
lds
into
cmpsl
or
xchg
ss
rcll
or
adc
je
cmp
leave
mov
xchg
idivl
jne
xor
mov
cmpsl
inc
fiaddl
adc
dec
nop
fstl
sbb
dec
out
addl
aad
inc
or
dec
add
jl
out
ss
retw
fcomip
mov
xor
cltd
sarl
push
nop
aam
cmp
bnd
aaa
packuswb
in
sbb
lret
je
sbb
test
add
mov
repz
push
jno
rcll
jno
push
or
enter
inc
lahf
jo
lds
outsl
mov
out
ret
pusha
aaa
fisttps
shl
mov
out
inc
jo
loopne
dec
xchg
pop
movhps
sub
lods
sbb
xor
jbe
call
insb
inc
xchg
repnz
jg
xor
and
and
mov
rcl
add
push
sbb
or
inc
and
das
pushf
xlat
mov
add
mov
lea
mov
jb
push
jp
jge
jo
lret
jle
cld
push
and
aam
sbb
mov
movsl
dec
add
dec
dec
rcll
pop
clc
imul
loope
addr16
cmpsl
fistps
and
nop
mov
aam
lock
out
mov
cwtl
jp
out
push
and
cmp
sti
or
push
pop
lods
mov
in
or
popf
inc
xor
shlb
stc
add
scas
or
jl
inc
inc
pusha
push
adc
inc
stos
xor
dec
jo
add
nop
cltd
lcall
das
ret
enterw
pop
rclb
mov
jle
adc
xchg
js
cld
jecxz
xor
icebp
into
add
xlat
aam
sbb
jno
aam
sbb
stos
stc
int3
je
icebp
and
test
sti
push
dec
push
dec
pushl
xchg
jb
ds
movsl
stos
add
addr16
inc
adc
ret
dec
pop
lret
jae
and
ss
cmc
shlb
clc
mov
jne
xchg
enter
neg
or
cwtl
sub
fldcw
mov
mov
push
aam
loope
cmpsl
jp
out
mov
loop
mov
dec
shlb
push
xor
cmpsb
movsb
and
in
outsb
sub
jge
pop
lods
and
sarb
mov
adc
sub
fs
dec
fld1
les
mov
adc
das
xor
add
cld
mov
jno
mul
pop
stc
ds
mov
mov
iret
clc
sahf
cmpsb
ret
daa
rcrb
test
std
mov
pop
cmp
xchg
loope
mov
outsb
sti
mov
dec
mov
sbb
or
add
rorb
movsb
mov
scas
std
adc
lahf
sbb
lods
mov
sti
into
jg
mov
pop
out
lods
mov
fcomps
pop
aas
or
xorb
cli
xchg
sub
or
pop
mov
pop
mov
inc
jecxz
out
shll
cmp
cmp
dec
jbe
push
sub
outsl
inc
shl
dec
ja
nop
add
js
mov
jge
pop
sbbb
cltd
icebp
repz
mov
jecxz
mov
mov
mov
lcall
and
xchg
or
push
xorb
leave
mov
inc
pop
mov
push
mov
pop
mov
mov
int3
inc
es
cmp
xchg
sub
repnz
std
push
clc
mov
shll
xor
lsl
pop
lahf
repz
xor
push
mov
adc
pop
xchg
push
ja
and
cmp
xchg
push
mov
cmpsb
or
mov
loop
adc
dec
xchg
ds
or
popl
push
jle
jg
jne
outsl
push
pop
ds
adc
mov
outsb
or
jns
das
repnz
mov
test
out
ss
xor
sbbl
out
into
push
sbb
mov
jae
hlt
bound
and
or
dec
daa
jnp
cwtl
sbb
jo
aaa
adc
add
adc
lds
lods
mov
stos
loop
stos
movl
xchg
sbb
stc
mov
push
sbb
lret
jmp
cli
ljmp
jbe
decl
jle
roll
js
push
mov
jp
jl
stos
aam
sub
cmpsl
scas
dec
repnz
mov
out
pop
dec
push
insl
jb
arpl
test
out
push
sub
pop
cmp
sub
inc
mov
adc
pop
inc
sub
sub
xor
adc
out
gs
test
andl
movsb
sahf
movsb
xor
push
lahf
and
scas
sarl
dec
jp
adc
inc
xorb
pop
xchg
add
ret
test
unpckhps
lret
and
mov
cmpb
shlb
xchg
loop
adcl
cmp
push
inc
std
iret
das
lret
xchg
dec
cmp
repnz
dec
xor
in
lds
loop
mov
fwait
adc
or
mov
mov
mov
adcw
push
in
enter
hlt
cld
test
imul
mov
test
arpl
aam
ljmp
push
aaa
adc
push
imul
jae
jle
mov
das
stc
mov
jae
inc
jns
aad
imul
out
mov
jnp
fildl
and
jmp
jmp
insl
jp
iret
je
jbe
push
loopne
fnstsw
aaa
xor
inc
sbb
mov
into
leave
sti
std
je
aaa
das
sbb
clc
xor
xchg
jnp
mov
cltd
andl
or
std
enter
sub
cmp
sbb
add
jns
xlat
ffreep
xchg
jp
push
movsb
and
jmp
imul
mov
mov
mov
lret
mov
cwtl
int3
push
fs
inc
push
dec
nop
xchg
sub
int3
mov
cmpsl
push
cmc
sbb
adc
push
outsl
movsl
pushf
xor
inc
inc
xchg
ds
daa
push
cmp
or
jnp
jo
stos
jge
mov
out
or
clc
out
inc
das
cmp
lds
inc
sbb
fistpl
shll
add
push
pop
pop
xor
push
inc
stc
pushf
push
mov
cmp
sbb
insl
mov
cwtl
ror
mov
mov
xor
aad
mov
xchg
cmp
dec
bound
stos
aam
ficompl
xchg
movsl
orb
test
xlat
xchg
out
push
jo
pop
sub
sub
lret
xchg
mov
jmp
mov
ret
dec
lods
mov
sbb
outsb
cld
sbb
dec
mov
das
mov
jae
jle
sbb
fistpll
je
xor
rcrb
arpl
pop
mov
gs
add
rcl
push
sbb
lea
mov
aas
movsl
ljmp
dec
popa
sbb
pop
jmp
adc
shrl
xor
xor
add
mov
fisttpl
mov
or
std
lea
pop
adc
add
pop
push
or
mov
icebp
in
outsb
sbb
stc
mov
jbe
flds
scas
lods
fs
pop
adc
adcb
xchg
pushf
call
sbbb
pop
inc
xchg
jo
adc
pop
loopw
imulb
movq
add
pop
sub
mov
inc
enter
jns
leave
data16
xlat
addl
testl
loopne
fst
cmpsl
or
dec
mov
sub
testl
xor
sub
and
dec
mov
movsl
in
movsl
inc
in
cli
sarl
xchg
ds
inc
lods
sbb
test
rcrl
mov
pop
pop
sahf
pop
lahf
xor
mov
mov
shll
sbb
cli
cmp
mov
pop
pop
adcl
xchg
ja
jmp
xor
sbb
aas
or
add
lahf
cli
arpl
add
mov
cltd
leave
cli
test
push
cwtl
adc
out
inc
push
cmp
jnp
push
leave
and
cmp
mov
cmp
aam
xor
out
add
sbb
out
cmp
jp
add
imul
mov
aaa
std
shlb
in
out
jo
hlt
aas
pop
lea
adc
and
int
lock
and
stc
mov
shll
in
cld
out
dec
icebp
xor
adc
pusha
cltd
lret
pop
dec
rclb
outsl
insb
add
sbb
cmp
ficompl
les
mov
cmp
fcoms
mov
pop
mov
mov
pop
or
add
in
jp
cmp
scas
imul
test
movsb
cmp
dec
mov
cmpsl
jno
jge
cmp
nop
fadd
push
jb
decl
outsb
arpl
pop
dec
outsb
jae
push
xchg
jecxz
in
stos
cmp
popa
dec
push
or
cmpsb
pop
ja
cmpsl
push
mov
out
stos
ret
test
inc
xchg
sbb
pushf
data16
push
add
adc
sahf
mov
mov
lods
incb
push
xlat
in
pop
incb
or
push
and
xlat
sub
js
dec
ljmp
int
loopne
pop
push
and
sub
add
inc
mov
sbb
popl
push
lods
adc
inc
push
lods
mov
in
iret
std
cltd
sbb
and
repz
cs
sub
cmp
ljmp
lds
outsl
imul
fsubr
cmp
imul
push
mov
dec
int
hlt
cmpsb
fdivs
xchg
xchg
bound
xchg
pop
dec
cmpsb
ffree
adc
out
inc
inc
jecxz
pop
add
adcl
int3
jno
push
jg
imul
adc
insl
in
pop
jns
addr16
pop
pushf
pop
dec
mov
sub
jns
adc
loopne
sbb
fsubs
aam
fs
imul
dec
pop
push
cmp
jecxz
ss
pusha
or
sub
and
push
imul
aad
dec
xchg
ljmp
sbb
dec
mov
data16
push
jle
out
cld
jle
cmp
pop
js
pop
lds
rcrl
lcall
push
pushf
cltd
xchg
mov
test
xchg
jnp
pop
mov
insb
fidivs
jbe
jp
mov
dec
or
mov
inc
mov
movsl
insl
stos
mov
xchg
out
data16
lods
fists
inc
xor
movsl
pop
mov
push
mov
das
xchg
in
jbe
fmuls
jne
inc
jnp
xchg
enter
jp
xor
ljmp
pop
jg
loop
and
or
sbb
test
jl
pop
testl
pusha
out
xchg
pop
xchg
fistpll
sbb
and
lods
into
pop
sub
cmp
adc
sub
out
insl
jl
loopne
pop
xchg
mov
push
xchg
testl
std
leave
fbstp
xchg
and
pop
insl
jge
pushl
inc
jg
inc
sbb
jle
jns
inc
fld
jnp
jecxz
movb
jo
outsl
mov
mov
or
ret
in
and
add
or
call
andl
push
xor
stc
mov
pop
ret
inc
adc
pop
loopne
mov
mov
hlt
mov
jnp
popf
sub
scas
mov
lods
xchg
icebp
icebp
test
pop
mov
pop
test
dec
lds
and
jg
iret
mov
out
pop
push
or
pop
pop
out
push
push
adc
add
call
pop
mov
xor
push
fwait
add
lahf
icebp
or
movsb
add
lret
cmpsb
test
sub
sbb
stos
fadds
jp
out
push
add
sbb
imul
adc
popa
mov
cld
inc
cltd
push
das
mov
pop
cwtl
cmpsl
fisubrl
int
mov
movsl
fnstsw
test
pop
ljmp
adcb
sti
jae
ret
adcl
and
mov
fistl
shll
std
mov
loop
movsl
lods
and
add
dec
aam
inc
loop,pt
fwait
mov
subl
stos
mov
enter
aas
jo
lcall
or
outsl
in
mov
cmp
arpl
into
mov
aaa
rcrb
lcall
push
bound
add
jmp
loopne
pop
fs
outsl
ja
inc
and
cs
add
shlb
pop
jmp
dec
mov
jp
mov
fwait
ja
push
sub
lock
xor
movsl
push
bound
mov
add
mov
loop
mov
jg
push
jle
or
pop
fadds
popf
and
push
xor
pusha
inc
aad
gs
cmpl
bound
jae
icebp
pop
aad
addr16
jno
mov
jno
jne
popf
dec
test
sub
faddl
cmpl
data16
std
add
pop
fnstenv
push
fwait
inc
mov
popa
inc
clc
insl
das
add
push
mov
cs
mov
leave
leave
pop
cmc
cli
mov
mov
testb
or
push
test
lods
in
mov
popf
adc
stos
das
mov
jge
fldl
add
sbb
bound
adc
fs
push
mov
mov
mov
jmp
xchg
xor
add
adc
mov
sbb
lds
inc
pushf
or
add
and
pop
sub
add
loopne
xchg
pop
cmp
mov
in
arpl
pop
lds
cmp
int3
fadds
popf
cmpsb
imul
in
inc
xchg
test
addb
outsb
mov
sub
fwait
jnp
bound
insl
stc
nop
rorb
andps
lahf
ljmp
rol
xchg
loop
pop
xchg
mov
test
xchg
push
xchg
mov
fldenv
scas
stos
jo
shl
insl
add
mov
cld
pop
out
lahf
jae
imull
push
cmc
icebp
or
rcrb
fwait
pop
cmp
jmp
sar
je
push
cmp
cmpsb
push
pop
jmp
sub
push
push
test
adc
sub
sbb
jbe
and
jne
cmp
push
jb
xchg
jb
ljmp
pop
or
mov
stc
jl
lret
pushl
out
ljmp
pop
rorb
rol
cmp
mov
adc
jae
or
rep
jnp
repnz
in
add
call
out
xchg
outsl
in
inc
leave
add
xor
adc
sub
push
and
mov
aaa
mov
sub
xchg
mov
lret
push
cmp
ljmp
idiv
ja
js
int3
ljmp
push
pop
pop
jnp
add
push
pop
jns
jns
fwait
arpl
jne
xchg
xchg
rolb
add
outsb
adc
popa
jns
lock
mov
sub
push
mov
cmpsb
xchg
imul
and
rcrl
inc
shrl
scas
daa
add
js
nop
sbb
dec
fiadds
pusha
cmp
mov
mov
enter
mov
in
or
dec
in
dec
shll
jle
shr
jne
cmp
jmp
jae
mov
out
mov
int3
out
jbe
cmp
mov
mov
xor
out
outsl
lret
ljmp
jbe
push
mov
iret
jmp
cmpsl
insb
mov
and
mov
inc
mov
push
mov
jo
shll
cmp
pop
xchg
pop
xchg
mov
mov
sbb
mov
mov
jbe
fimull
jno
pop
mov
or
popa
stc
cmove
inc
or
sbb
int3
cmp
or
shll
push
fldl
pushf
push
adc
int3
aas
xor
mov
xor
push
sub
mov
dec
shr
insb
or
in
adc
mov
mov
aas
xor
pushl
loop
pop
ret
add
sbb
into
andb
into
in
push
nop
movsb
sub
pop
aad
pop
ss
push
inc
fdivr
sti
jnp
addr16
ret
loope
in
xchg
xchg
cltd
getsec
jl
jo
insb
jae
cs
std
cli
xchg
or
andl
sub
mov
xchg
fistpl
rolb
fucomip
dec
popf
add
mov
jg
lret
repnz
add
jmp
mov
sbbl
pop
xor
and
jns
mov
mov
fcomp
sbb
sub
mov
inc
aas
cmp
push
push
daa
or
sbb
iret
and
add
mov
aas
repz
jb
xchg
movsl
movsb
xor
dec
lds
test
cmp
cmpsb
sbb
sbb
xchg
mov
sar
push
push
sahf
jmp
pop
sti
sbb
inc
fcomip
lret
cli
test
jecxz
push
mov
es
idivb
ds
lret
in
inc
push
pop
pop
inc
mov
call
rorb
aaa
loop
sbb
push
stc
out
cmp
mov
pop
jae
mov
inc
pop
ss
pop
mov
jb
mov
mov
scas
andl
pushf
jne
add
xchg
sub
in
adcb
push
cli
fisttps
pusha
or
mov
arpl
out
xor
jp
nop
push
dec
xchg
xchg
jns
mov
fs
jle
scas
sbbl
fmuls
lret
push
add
sbb
push
ror
fs
pushf
or
inc
test
xor
xor
rcll
fidivl
sbb
pop
or
je
mov
mov
xchg
cwtl
sbb
sub
inc
into
bnd
push
movsl
mov
push
push
xchg
or
or
rcrb
negl
dec
dec
das
jmp
pop
dec
lds
dec
loop
fwait
insb
insb
jg
daa
inc
fdivrl
and
or
jmp
sub
add
cltd
jmp
inc
jp
cmp
mov
pop
inc
mov
int3
pop
ss
push
dec
call
sbb
scas
mov
lds
adc
ljmp
jmp
into
cld
fcomps
sti
mov
dec
lahf
shll
mov
push
in
push
jl
sbb
hlt
aaa
adc
pop
sub
mov
rclb
pop
dec
push
bound
sti
shrb
dec
xlat
mov
pop
xor
clc
dec
xchg
lock
inc
dec
jne
js
jb
cmc
arpl
push
mov
push
xchg
jns
ret
mov
and
push
ror
add
gs
or
mov
scas
xor
imul
push
into
jle
mov
sub
mov
lea
cltd
ja
insb
mov
lea
sub
imulb
sub
mov
fs
mov
loope
mov
sbb
sub
into
or
mov
gs
xchg
xchg
mov
sbb
ljmp
xor
out
arpl
data16
nop
mov
inc
setne
cmpsl
inc
shlb
lcall
mov
out
add
imul
je
mov
mov
sub
leave
dec
fsubs
icebp
out
add
test
sub
xlat
test
pop
jecxz
mov
js
add
lcall
mov
outsl
adc
addr16
pop
cwtl
jp
test
mov
js
out
mov
roll
add
lahf
je
scas
push
push
mov
or
stc
add
inc
inc
faddp
and
adc
add
test
sub
dec
sahf
and
ja
jns
enter
sbb
jae
or
xor
int3
aas
and
ja
ss
xchg
mov
mov
sbb
push
imul
popa
dec
je
in
mov
dec
cmp
mov
adc
and
popf
in
sbb
jo
js
nop
aas
adc
shll
mov
push
inc
aas
sbb
inc
lods
fisttpll
push
or
mov
mov
or
call
pop
add
pop
icebp
pop
push
popf
std
and
xchg
out
or
aad
lcall
int3
lods
jno
shrb
das
in
add
leave
movsl
pop
xchg
pop
jl
xchg
jne
dec
or
lret
icebp
lods
or
loop
or
add
jnp
mov
lret
cs
pop
sahf
lcall
jl
dec
xchg
xchg
or
popa
ret
or
push
dec
xor
and
lds
or
test
mov
dec
mov
ds
in
pop
decl
enter
stos
daa
fdivs
lcall
jp
out
dec
fstpl
andb
and
dec
stc
mov
sahf
mov
push
push
mov
sbb
mov
mov
sub
test
add
and
stos
xchg
pop
out
add
mov
pop
out
ret
and
add
pop
rolb
inc
cmp
dec
aaa
ds
je
ja
jnp
jno
push
xchg
imul
xor
adc
icebp
mov
pop
mov
jb
addl
jge
sbb
stos
add
mov
jo
jg
xor
dec
cltd
das
jecxz
mov
adc
dec
shlb
add
fwait
fwait
iret
and
jae
andl
data16
mov
repz
fcomps
rcll
inc
xchg
test
add
imul
sahf
arpl
pusha
orb
dec
cmp
andl
xchg
dec
cmpsl
xchg
sub
and
shl
xchg
pop
loopne
cmp
lcall
nop
lock
ja
pop
ljmp
bound
sub
xor
aaa
adc
jae
mov
sub
scas
hlt
xor
pop
add
mov
sbb
mov
jmp
movsb
lret
jmp
out
mov
fcmovu
or
pop
xor
cmp
adc
mov
cmp
stos
inc
int
jp
add
insb
pop
adc
ret
push
out
rcll
pushf
sbbl
aaa
adcl
jno
add
fwait
int3
push
lods
aad
pop
int3
aad
add
sub
mov
dec
jns
lods
pushf
out
sbb
fiadds
xor
outsb
xlat
dec
subl
cmp
leave
in
mov
and
int
in
lea
ret
jg
stos
jge
nop
mov
fsubs
xchg
ficompl
int
loope
jnp
hlt
and
mov
dec
push
sbb
lock
mov
mov
lahf
push
fiaddl
xlat
in
sub
stc
jl
jle
in
push
aas
out
sbb
mov
stos
jl
je
add
test
jo
push
ljmp
xlat
cmp
mov
mov
loope
mov
rcrl
jecxz
icebp
mov
into
out
es
push
add
fsubrs
pop
test
sbb
movsb
ss
stos
lock
scas
pop
mov
cmp
xchg
bound
or
sar
dec
add
out
jae
sbb
pop
dec
add
lcall
iret
popf
mov
xchg
and
rorb
pop
into
sub
push
test
cmp
pushf
sbb
cmp
mov
cmp
cmp
negb
cwtl
mov
push
stos
mov
jo
push
ljmp
mov
xlat
lahf
or
cs
movsl
xchg
gs
mov
dec
cmp
les
imul
inc
out
mov
data16
jb
pop
fnstcw
ss
aam
adc
aad
dec
aaa
mov
pop
mov
fs
jge
mov
sub
fdivs
test
scas
jns
sub
add
movsl
jp
mov
int3
jecxz
fisubs
fildll
out
push
add
add
inc
xchg
and
adc
xor
mov
jle
aas
lds
pushf
pop
loopne
adc
xor
cltd
push
xchg
pop
mov
inc
dec
mov
gs
loope
lea
scas
push
mov
sub
popf
mov
or
std
mov
cmp
bound
fs
scas
mov
gs
inc
sbb
clc
outsb
pop
jp
fsubrl
xchg
out
mov
add
adc
test
loop
outsb
sbb
ffreep
iret
popa
cld
imul
sub
add
push
fistl
lret
ljmpw
push
hlt
push
push
aad
add
mov
jo
mov
push
dec
rcrl
dec
add
in
xor
fnsave
xchg
shll
std
dec
cmp
jns
lcall
ret
fdivrl
out
cmp
clc
sub
sbbb
shrb
data16
sub
pushf
mov
enter
and
addr16
jg
xor
hlt
insl
scas
rorl
push
push
cli
push
ljmp
scas
and
out
xchg
add
pop
push
push
shrl
js
dec
movsb
mov
fdivs
jp
out
stos
jp
xor
inc
mov
fwait
test
mov
in
repnz
ss
dec
jge
jg
sub
sbb
aad
xchg
sbb
ret
aad
pusha
hlt
jmp
lods
add
mov
and
js
fidivl
pop
sbb
mov
enter
jg
movsb
js
test
jmp
icebp
aad
pop
ss
jle
jb
addr16
sub
lret
pop
mov
jnp
mov
clc
or
aam
jae
fld
xor
xchg
lahf
push
adc
mov
adc
pop
idiv
add
fadds
movsb
mov
lods
mov
rclb
mov
mov
fnstcw
or
pop
cmc
mov
repz
pop
test
jbe
jl
addl
lret
inc
inc
movsl
test
mov
xlat
jl
dec
cmp
sbb
popf
xor
ja
inc
mov
sub
insl
pop
gs
shll
jo
mov
lds
adc
out
ss
mul
mov
mov
stos
ja
pop
inc
cmp
and
test
sbb
into
loope
mov
scas
dec
dec
add
hlt
sub
jnp
adc
cli
lret
mov
cmp
sub
push
enter
jb
and
mov
and
subl
dec
out
mov
xor
movl
push
test
ret
add
gs
repnz
ret
imul
ljmp
es
mov
movsb
cmp
lret
in
mov
es
and
xorl
mov
stos
adc
daa
and
movb
ds
rcl
or
jnp
sarb
scas
je
push
jnp
roll
xor
dec
les
xchg
jo
idiv
pop
ret
mov
fs
cltd
add
pop
xor
aad
push
sub
push
imul
and
add
int3
push
and
lds
adc
dec
fistps
shr
mov
movsl
cmp
jae
push
loope
test
nop
xchg
leave
outsl
dec
shl
add
pop
popa
and
and
and
jl
nop
add
in
mov
and
je
adc
push
mov
mov
scas
mov
sbb
inc
xchg
notb
add
notb
ljmp
fnstenv
push
jno
add
dec
mov
dec
test
cli
wbinvd
jge
ja
cmp
std
adc
repz
sub
pop
mov
mov
enter
dec
xchg
dec
xchg
sbb
test
fimuls
inc
scas
clc
js
shll
aas
fmul
movsb
out
jg
addr16
jae
pop
fsubrl
inc
cmpsl
inc
ret
push
mov
int3
sbb
cld
pop
sbb
sbb
pop
mov
mov
xchg
adc
aad
add
jl
push
adc
inc
or
sub
mov
inc
sub
push
std
or
gs
or
jge
add
mov
mov
pop
mov
xor
inc
push
call
movsl
adc
or
push
mov
mov
int
rcll
mov
int
movsl
xor
sarl
std
push
int
iret
inc
cs
imul
inc
sub
inc
scas
add
cmp
and
lods
pusha
jno
leave
cs
es
mov
mov
rcr
adc
ret
add
xor
push
lods
insb
ret
into
push
push
fucom
jo
inc
add
or
mov
aad
std
inc
cmp
rol
cmp
imul
add
and
jnp
in
inc
pushf
lods
addb
iret
das
sbb
jno
push
push
es
scas
sbb
pushl
hlt
jmp
mov
and
cmp
adc
cmp
jl
sbb
lock
adc
fistps
arpl
scas
je
negb
sub
cmp
jp
pop
iret
add
subb
addr16
mov
fcoms
jbe
jmp
xor
dec
jle
cs
popa
sbb
push
outsl
pop
inc
lods
mov
ficompl
pop
mov
cmp
xor
in
dec
iret
imul
subl
test
fmull
and
decl
bswap
fcomps
cmp
mov
inc
fdivrs
pop
inc
xor
shrb
ja
adc
cmp
cmp
push
shr
popa
lods
rcl
push
ja
cmc
outsl
mov
call
fldt
xor
or
cltd
and
dec
xor
in
mov
out
and
xor
push
mov
mov
shl
rorb
pop
fdivp
enter
mov
int
rorl
cmp
pop
jg
and
bound
adc
test
push
pop
sar
or
xor
ljmp
mov
shr
dec
xchg
add
test
jns
cltd
int3
repnz
pop
cli
xor
mov
ja
dec
loopne
pop
or
mov
imul
sti
cli
cmp
inc
cli
lods
mov
fmuls
mov
insb
mov
daa
ds
mov
push
sarb
pushf
inc
test
lods
xor
adc
jo
push
mov
shrl
in
cmp
outsl
add
pop
stos
sarl
test
mov
loop
outsl
inc
ljmp
sbbb
in
fcoml
xchg
int3
and
push
jae
cmp
je
rcrl
int3
push
push
sbb
rclb
xchg
xchg
pop
add
jns
mov
cs
jp
ficompl
fdivl
cs
decl
shll
adc
push
mov
jb
lcall
dec
jb
inc
jge
lock
add
fmuls
jnp
das
lods
xchg
stos
sub
dec
jns
test
xchg
imul
repnz
cmp
int3
mov
mov
add
cmp
xor
insb
xchg
mov
sub
mov
sub
push
sbb
inc
mov
mov
pop
imul
pop
mov
pop
and
jge
jp
jns
inc
inc
inc
pushl
js
push
daa
cmp
adcb
out
inc
xchg
push
aad
dec
movsb
and
push
jmp
out
jo
stos
out
sbb
cmp
add
sbbb
xchg
repz
mov
or
scas
or
loope
dec
loope
push
sbb
inc
aaa
mov
push
mov
add
inc
cwtl
adc
out
in
or
jbe
or
ljmp
xchg
aas
cmp
les
test
push
and
es
popa
aad
ficoms
xorb
or
adc
cmp
ds
leave
bsf
pop
ja
lahf
js
jne
adc
iret
lret
test
push
addr16
aad
jl
stos
aam
inc
jecxz
jb
fldl
stc
and
mov
call
flds
icebp
rolb
adc
sub
jl
js
and
pushf
icebp
inc
xchg
lcall
cli
je
and
xchg
sarl
jno
push
movsl
hlt
jle
add
iret
fistps
mov
test
cs
lods
push
out
aaa
mov
adc
xchg
xor
out
sahf
or
roll
jl
int
jno
sti
sub
mov
cmpsb
cld
xchg
subl
ret
xchg
mov
sbb
jns
xchg
mov
mov
outsl
into
movsb
pop
aam
mov
and
addb
int3
test
lret
lods
jns
xor
scas
adc
and
mov
out
daa
add
mov
ficoms
pop
das
les
daa
jns
push
sti
lea
cmp
ljmp
jo
faddl
mov
sbb
nop
lret
pop
in
and
xchg
ljmp
in
dec
pop
fadd
mov
push
fs
jo
cmp
out
daa
cmpsl
aas
into
iret
popf
in
les
fiaddl
in
loop
ficoml
and
push
hlt
sbb
inc
enter
push
lcall
dec
cltd
loope,pt
lods
ja
in
add
aaa
pop
mov
leave
inc
lods
in
cmp
fsubrs
mov
xchg
stos
in
repnz
divb
jb
add
xlat
leave
adc
dec
call
cmp
popa
pop
cmp
imulb
xor
inc
xor
xchg
lret
jl
fadds
les
sbb
and
popa
ds
shl
test
aam
dec
out
pop
inc
jmp
add
cltd
sub
mov
mov
jle
in
rclb
mov
add
dec
addb
pop
or
jmp
sbb
jns
aaa
mov
add
sbb
dec
stc
or
jnp
dec
hlt
xor
xor
jne
dec
mov
dec
popl
mov
imul
mov
ds
dec
add
out
or
and
jl
add
shll
mov
jne
and
and
and
push
mov
jns
insl
add
out
out
mov
mov
insl
xlat
out
ret
inc
mov
dec
inc
cmpsl
out
js
dec
dec
add
xor
std
cmp
adc
rorb
mov
aad
jno
mov
dec
dec
inc
push
mov
push
sub
jg
mov
cmp
les
push
push
stc
push
loope
xchg
xchg
pop
in
sub
dec
rclb
je
cmpsl
push
movaps
mov
xchg
mov
dec
in
cmc
in
mov
rcrb
push
data16
repz
pop
pushf
imul
jle
mov
hlt
push
push
xchg
pop
gs
pop
mov
arpl
mov
dec
push
cmp
mov
dec
cmp
das
fbstp
or
xchg
stos
data16
or
sbb
adc
or
call
jge
add
rcrb
push
scas
inc
lcall
mov
pushl
jo
aad
repz
inc
cmc
cs
add
sbb
outsb
in
scas
cmp
pop
sub
add
std
gs
add
enter
xchg
dec
stos
test
std
sub
stos
iret
jbe
insb
data16
scas
jmp
mov
and
and
loope
stos
repnz
add
test
popf
popa
cmpsb
les
mov
in
imul
std
imul
in
imul
enter
orb
or
fisubl
aam
mov
jle
test
xlat
adc
pop
adc
cmp
fldlg2
sahf
fucomi
inc
clc
mov
mov
adc
add
adc
mov
xchg
loop
xor
data16
and
shrl
mov
xchg
pushl
ret
inc
xlat
fsubrs
lods
cmpsl
rcl
scas
in
scas
xchg
add
cmp
mov
cmp
fildl
call
and
push
and
lahf
out
addr16
dec
and
lds
inc
mov
sub
lret
cmp
lahf
std
ss
mov
dec
add
xchg
jne
lods
movsl
pop
mov
mov
jns
dec
mov
mov
shll
xor
and
fnstcw
out
cmp
pop
ret
test
das
inc
xchg
movsb
scas
jae
outsl
and
mov
jnp
rcr
mov
pusha
xor
add
shll
cmpsb
std
es
jne
std
push
fwait
cmc
or
sbb
mov
mov
xchg
testl
xor
call
xor
mov
dec
in
xchg
lret
dec
jb
aam
cmpsl
repz
stc
out
cld
xchg
popa
popf
fdivrl
into
loopne
pop
fwait
jmp
cmp
sbb
cwtl
or
nop
xchg
mov
test
jmp
insl
call
mov
cmpl
adc
push
clc
cmpb
das
push
shrl
orb
pop
sarb
add
sarl
push
mov
jge
push
mov
dec
fimuls
stos
mov
shll
xor
ret
call
arpl
sub
mov
sarb
jne
enter
enter
imul
cmpsl
mov
int3
dec
mov
xlat
lret
ja
sub
arpl
in
mov
into
or
imul
popf
push
in
into
leave
scas
mov
imul
cmpsb
inc
mov
into
movsb
in
icebp
cld
xchg
and
or
cs
add
add
mov
cmp
ljmp
push
mov
call
mov
cmc
repnz
pop
add
mov
stc
sbbb
sbb
test
dec
pop
and
inc
stc
sbb
adc
pushl
cmp
pop
ja
test
stos
ja
pop
push
add
out
comiss
sbb
ja
imul
movsl
jecxz
fnstcw
xchg
ss
jle
aad
jle
pop
inc
enter
mov
inc
arpl
inc
iret
scas
push
dec
mov
sbb
push
xchg
mov
mov
loopne
aam
jle
inc
shrl
jmp
arpl
test
push
inc
adc
add
orl
repz
adc
out
cmp
and
divl
jbe
mov
xchg
mov
xor
or
fcmovu
push
stc
fnstsw
adc
adc
inc
jns
and
shlb
rcrl
xchg
lea
dec
cmp
push
fwait
jg
sahf
sbb
sti
mov
mov
jl
or
jae
outsb
adc
xor
cmp
dec
leave
cmpsb
mov
jge
mov
cld
rcrb
jae
roll
jg
dec
sbb
dec
cmp
and
push
mov
fadd
xlat
repnz
in
mov
inc
pop
mov
add
mov
out
pop
rcr
inc
and
jbe
mov
xchg
sarl
scas
stc
add
and
cs
dec
std
push
xchg
jns
shrb
jmp
jns
scas
lods
mov
or
pop
adc
mov
xchg
mulb
rcll
sbb
mov
and
test
test
fstl
pop
dec
out
mov
mov
xchg
sub
sbbl
mov
or
cli
xor
push
sub
pop
imul
pushf
push
pusha
loop
ss
cwtl
stc
adc
mov
out
gs
cld
mov
mov
out
and
mov
xor
and
mov
mov
xchg
inc
cmp
loopne
xor
or
gs
pop
push
int3
out
das
sub
pop
jae
jne
pop
xchg
fsubp
dec
repnz
mov
push
test
ds
mov
lret
pop
jp
mov
push
push
cltd
jg
inc
loop
test
in
mov
jp
push
pop
imul
jle
push
outsl
mov
push
sysenter
jl
mov
push
addr16
mov
and
test
arpl
inc
shrl
push
inc
add
das
imul
push
inc
xchg
push
jbe
pop
repz
dec
aas
or
mov
sub
daa
js
mov
sub
jne
rcll
pop
adcl
mov
out
sti
inc
les
adc
lret
lret
cmp
loope
mov
xor
sbb
inc
mov
fidivrl
call
adc
add
insb
cmp
aas
mov
stc
ja
xchg
pop
fs
stc
jb
mov
jmp
outsl
notl
add
push
push
scas
adc
adc
lahf
xchg
dec
orb
testb
adc
dec
call
adc
pop
add
test
cmp
push
lock
pop
or
jp
xor
stos
mov
repnz
pop
data16
inc
sbb
rcll
cwtl
into
dec
loope
in
gs
mov
pop
xor
stc
mov
add
or
lods
pop
xor
add
stc
inc
pop
jo
xchg
xchg
cmp
dec
fldl
test
adc
daa
negb
int
je
out
popf
and
mov
and
pop
inc
push
test
imul
mov
loope
mov
dec
mov
imul
int
and
mov
sbb
sbb
inc
jecxz
lods
dec
and
rorl
scas
out
sub
jnp
push
ljmp
pop
xor
ret
aaa
jmp
xchg
jb
cmp
mov
ret
in
mov
and
sub
lret
pop
call
jle
fistps
push
in
call
or
xchg
dec
pop
les
jmp
cmpsb
in
stos
sti
mov
mov
push
mov
je
xor
pop
pop
sub
lcall
or
ja
loop
faddl
mov
mov
or
imul
jg
mov
arpl
ficomps
and
pop
mov
push
add
lock
mov
mov
xchg
xor
mov
in
pop
insl
xchg
sub
push
xchg
dec
inc
or
aaa
out
arpl
xchg
or
mov
fmuls
iret
inc
leave
jno
ret
sti
add
adc
or
or
xor
cmc
dec
mov
xor
xchg
in
push
ljmp
inc
in
xchg
leave
movsl
push
jb
mov
sahf
cmc
fdivrs
das
enter
imul
inc
cmp
call
out
jg
dec
shrb
das
loope
insl
add
addb
jl
sub
add
adc
scas
sbb
bound
adc
dec
inc
jmp
jns
sbb
scas
hlt
mov
pop
mov
sub
mov
sbb
mov
test
xchg
loopne
adc
in
int
jne
addr16
bnd
mov
add
mov
mov
inc
xor
mov
enter
dec
mov
mov
scas
mov
jno
inc
and
repnz
pusha
pusha
cmp
push
scas
data16
adc
rolb
mov
sub
pop
adc
scas
adc
jge
add
xchg
xor
in
and
and
loop
mov
or
pusha
xor
xchg
mov
cmp
lock
ss
addr16
out
or
ds
imul
iret
aaa
cli
pop
mov
sbb
repnz
aaa
jns
stos
ja
xchg
push
insl
insl
mov
icebp
les
testl
push
jg
push
popf
shlb
push
pop
stc
pop
sbb
shll
add
mov
lds
xor
fstpl
xchg
xchg
cmp
push
pop
cmpsb
inc
ljmp
mov
aas
sub
inc
out
add
adc
mov
scas
ljmp
adc
out
je
outsl
fldt
fucomip
push
out
jae
sub
lret
or
addr16
pmulhuw
lret
mov
lea
adc
iret
push
xchg
sub
mov
popf
enter
sub
dec
sub
test
outsl
shrb
sti
push
mov
jne
lds
nop
push
mov
dec
and
xchg
fsub
xor
fmuls
repnz
scas
jmp
inc
mov
ret
mov
in
jb
ss
dec
jnp
and
xor
lahf
mov
sbb
or
inc
ljmp
xorb
xchg
loopne
outsl
scas
gs
xchg
mov
pop
pop
mov
push
pop
mov
je
and
mov
mov
push
int
jmp
imul
jo
stos
fsubr
gs
push
negb
adc
sub
xor
lods
cmpsl
inc
fldt
sub
mov
daa
add
push
dec
xor
scas
movsb
insb
shll
mov
std
movsb
xor
sbb
enter
cmp
mov
dec
xchg
mov
mov
mov
cmp
sti
int
cmp
sbb
push
inc
cmp
scas
adc
xchg
sbb
add
dec
icebp
sahf
or
jb
jmp
cltd
mov
outsl
inc
mov
jmp
gs
test
adc
std
sub
xlat
in
mov
dec
fs
sti
fdivrs
jle,pt
sbbl
jnp
lret
aaa
dec
pop
push
dec
leave
outsb
pop
add
pop
addb
loope
and
jbe
inc
in
popa
xor
into
adcb
xchg
sub
mov
insb
pop
aaa
sbb
aas
das
dec
scas
icebp
mov
test
addr16
adc
std
test
push
mov
popf
jno
mov
int3
rorb
mov
sub
sub
and
push
or
cmp
lea
inc
sbb
jmp
repz
hlt
add
mov
and
xchg
aad
jae
ss
scas
pop
call
fbstp
xchg
xchg
jb
xchg
dec
mov
fs
inc
add
pop
fisubrl
push
jne
xorl
lods
aas
es
sbb
and
cmpsl
sarb
mov
je
jg
imul
xchg
stos
add
test
cld
jne
or
iret
xchg
repnz
push
cwtl
adc
gs
adc
andb
mov
xchg
inc
repz
and
lock
fsubrl
push
push
fwait
or
mov
jmp
int3
push
dec
xlat
push
ds
push
shll
mov
pop
xchg
pop
in
loopne
cltd
stos
push
adc
ret
sub
or
dec
dec
ds
out
and
inc
call
js
mov
mov
stos
pushf
pop
add
inc
jno
lret
push
add
add
and
bound
push
inc
add
cmp
xor
imul
add
xchg
mov
adc
nop
arpl
outsl
mov
inc
into
es
sbb
adc
dec
pop
insl
push
mov
mov
enter
jb
xchg
jl
sbb
repz
popa
call
sbb
pushl
int
repz
mov
neg
sbb
xchg
jae
cmc
push
lcall
fimull
mov
mov
inc
and
flds
fimull
ja
stos
pop
rcll
stos
rorb
dec
daa
in
scas
mov
lcall
xchg
mov
imul
sub
lods
add
inc
mov
loop
dec
test
testb
sbb
fiadds
ret
dec
in
dec
inc
and
aaa
mov
add
stos
mov
popa
jmp
jp
je
mov
in
and
and
push
xor
jo
dec
mov
mov
mov
add
notl
mov
mov
call
add
sub
cmp
aad
lcall
cltd
js
fsubrl
xor
notb
nop
ret
sbb
int
cwtl
dec
xlat
jmp
loopne
mov
pop
mov
mov
rorb
mov
mov
outsl
imul
pop
xchg
push
cmpb
inc
ss
shr
lret
or
xchg
insb
fs
inc
adc
and
or
adcl
dec
jge
pop
cli
xor
cld
mov
or
faddl
js
pop
pop
dec
cltd
ret
inc
test
cmp
push
xchg
movsl
dec
out
mov
and
jb
ret
stos
out
pushl
lahf
cmpsl
in
sub
and
ss
add
or
out
push
mov
dec
shlb
sbbb
inc
mov
dec
cmc
aad
in
sub
rcr
add
pop
add
cmp
popf
fwait
inc
nop
mov
into
ss
mov
movsb
rolb
xchg
leave
js
xor
pop
pop
sarl
in
fisubl
pop
mov
inc
lret
xchg
add
ds
jle
loope
addr16
sbb
mov
ret
repnz
xlat
xchg
xlat
nop
aad
inc
ja
and
popa
and
adc
int3
lock
lea
test
rcl
fcoms
test
mov
lock
mov
or
lock
push
and
xchg
out
outsl
and
sbb
pop
mov
mov
xor
push
mov
xchg
cli
sbb
and
psraw
mov
loop
inc
add
das
and
data16
lods
add
mov
es
dec
data16
sbb
subl
dec
loopne
and
test
pop
jnp
xchg
in
or
mov
pop
cmp
adc
pusha
xchg
int3
inc
les
cmp
inc
jne
jmp
mov
jae
movsb
shrb
cmp
cs
loope
cs
ja
pop
dec
sbb
int
and
out
fs
cwtl
push
sarb
push
pushw
jecxz
mov
pop
inc
pop
data16
int3
stc
or
adc
jne
lods
int3
jl
mov
mov
mov
adc
in
into
xchg
scas
repnz
jnp
lcall
aaa
fildl
xor
jbe
sarl
test
les
mov
jnp
add
push
pop
insl
or
fdivrl
or
lock
sahf
loopne
pop
fsubrs
mov
inc
arpl
cmp
dec
adc
test
pop
sete
mov
mov
jmp
ret
adc
add
jae
fwait
push
clc
sub
int
pop
arpl
lret
mov
out
push
loope
fstpt
mov
jl
jp
in
jmp
adc
inc
lret
push
or
in
adc
xor
enter
jb
inc
inc
lods
adc
orb
sbb
adcb
jo
fsts
cmpsb
aas
sbb
mov
cltd
nop
xlat
rcll
std
addl
or
jno
cs
push
imul
mov
out
insl
mov
cltd
inc
aad
mov
nop
mov
push
xchg
mov
or
popf
adc
push
in
lods
mov
mov
adcb
out
out
bound
push
add
mov
push
xor
add
pop
xor
imul
mov
imul
into
shrl
inc
cmp
dec
in
call
rclb
movsb
dec
cmpl
mov
outsb
xor
stos
clc
aas
jns
cmc
inc
cmp
push
inc
orl
jmp
std
mov
iret
jno
out
push
sbb
sbb
lods
into
push
xchg
cmp
or
xchg
jg
jp
xchg
mov
jl
test
push
stc
pop
cmpsb
pop
adc
sbb
and
mov
xorb
mov
popf
mov
mov
lea
pusha
or
lds
dec
lea
and
push
push
aaa
call
cmp
or
push
add
es
test
out
in
add
fcmove
jae
or
lock
push
imul
cli
movsl
adc
mov
lods
js
pusha
in
xchg
cld
daa
dec
xchg
cmc
jle
xchg
sarl
and
hlt
add
jg
cmp
jbe
in
pop
gs
gs
jle
jmp
aas
ss
mov
jb
mov
fidivl
in
je
dec
stos
jne
and
fisttpll
and
mov
mov
sbbb
and
nop
imul
mov
inc
jnp
in
xor
int3
xor
sbb
and
das
xor
sbb
cld
stc
es
xor
repz
cmp
push
out
add
add
add
cmp
pop
testl
cmc
fwait
mov
call
adc
leave
add
test
xchg
pop
push
inc
pop
xchg
ret
sub
jmp
ljmp
bound
andb
jg
and
mov
mov
adc
xor
aaa
dec
push
into
call
cmp
loop
cmp
adc
push
mov
lcall
ljmp
jnp
xor
mov
call
fwait
loopne
sarb
arpl
cmp
mov
int
jno
jnp
jb
pop
outsb
mov
inc
sbb
insl
call
sbbb
xor
icebp
or
adc
pop
mov
outsl
xchg
aam
cmp
pop
mov
mov
mov
cmp
mov
xchg
or
pop
lret
jne
mov
mov
adc
js
adc
insb
pop
lcall
push
mov
push
jge
adc
ljmp
jne
daa
xchg
push
jno
popf
cwtl
fidivl
and
divb
or
fsubrs
cmp
or
cltd
mov
lock
xchg
imul
cmpsl
out
test
or
mov
out
shll
lock
mov
movsb
pop
and
inc
jbe
cltd
cmp
sbb
sub
push
mov
clc
in
xor
jmp
sbb
fcmove
out
adc
inc
add
loop
mov
ffree
popf
pop
push
push
push
outsl
xchg
sbb
outsb
cmp
ljmp
mov
cmp
rclb
dec
ljmp
xor
xchg
fldl
sbb
nopl
fadds
push
jmp
pop
pop
mov
std
cmp
mov
arpl
out
push
sbbl
sub
mov
mov
sbbb
xchg
sti
lea
sub
push
jbe
or
cmp
ret
add
xchg
inc
push
leave
shr
das
lea
fnsave
sbb
add
cwtl
sub
shlb
mov
add
lock
loope
jg
pusha
popf
xchg
sbb
mov
cmpsb
jg
fwait
mov
sbb
push
test
pop
iret
popf
pop
cli
adcb
push
mov
mov
xchg
jae
mov
cmp
mov
rclb
fwait
sbb
ucomiss
test
push
jnp
insb
ret
jp
mov
mov
cmp
stos
imul
movsl
cmp
popa
dec
mov
ljmp
and
outsb
enter
mov
add
sbb
ret
inc
test
subb
jg
in
mov
add
mov
dec
test
inc
mov
neg
aaa
movsl
pop
mov
pop
jmp
test
or
push
sbb
jae
lds
pop
data16
xor
popa
pop
add
ljmp
xchg
adc
or
imul
xchg
sbb
adc
cltd
jne
sub
lods
in
jmp
mov
mov
or
pop
sbbl
lea
cli
xchg
xchg
stc
jmp
arpl
mov
in
cs
dec
sbb
inc
inc
sub
pop
fnstenv
dec
lods
rcr
dec
jno
mov
ds
and
mov
adc
mov
ds
pushf
and
pop
fidivl
push
pop
stos
xchg
push
jge,pt
sbb
fcmovbe
rcr
movsb
enter
sbb
lock
lcall
sub
jl
call
push
or
xchg
pop
les
mov
cmp
subb
inc
push
popf
pop
mul
cmpl
dec
mov
lea
in
fwait
aas
test
adc
mov
sahf
push
out
or
push
in
sbb
mov
sub
add
and
jg
aas
test
aad
repz
fimuls
mov
lods
or
xchg
cmpl
out
cltd
out
loop
mov
imul
add
js
lock
sahf
push
mov
xor
push
imul
mov
cwtl
es
cmp
es
and
cmp
popf
sbb
aad
cmp
outsl
repnz
nop
les
stos
mov
mov
jne
or
mov
dec
iret
js
add
sbb
in
lea
arpl
mov
jp
hlt
xchg
cmp
int
jno
xor
es
rolb
inc
mov
mov
or
add
inc
ss
inc
pop
sahf
and
xchg
cmp
xchg
dec
in
stc
mov
jno
out
push
popf
push
movsl
pop
cmc
inc
cwtl
xchg
shlb
jnp
lock
or
adc
hlt
aad
icebp
inc
mov
imul
mov
pop
add
fs
pop
sbb
test
call
inc
adc
jmp
sarl
shll
xor
out
adc
outsl
pusha
and
sbb
add
loop
push
mov
mov
or
outsb
mov
sub
sub
inc
jb
mov
enter
je
icebp
mov
cmpl
outsb
cmpsl
xor
ds
fcmovnb
mov
sub
fistl
ficomps
fidivrl
push
add
mov
mov
outsl
adc
inc
pop
insb
cmpb
testl
cmpsl
inc
and
fdivr
pop
mov
push
adc
mov
ficompl
repnz
imul
xor
mov
ds
out
lock
in
or
jnp
sar
pushf
jne
call
out
leave
dec
mov
nop
mov
mov
sub
sub
icebp
mov
xchg
inc
fsts
push
pop
adc
jp
fidivs
fistpll
push
cmp
adc
loope
pop
pop
mov
jmp
arpl
xchg
mov
movsl
push
xchg
cmpsb
sbb
pusha
cwtl
inc
mov
mov
add
pop
lret
das
jb
and
cmp
movsl
out
jle
sub
lahf
mov
xor
popa
jmp
mov
leave
jnp
inc
push
cmp
jbe
sbb
mov
mul
sub
mov
jae
jnp
sbb
and
push
lds
jle
test
in
mov
sbb
dec
shrl
fbld
inc
iret
jl
psubd
es
jg
adc
repnz
or
dec
lea
sbb
sub
shr
outsb
inc
mov
push
cmp
xchg
cmc
stc
wrmsr
xchg
and
fucomp
jne
std
sbb
fldt
scas
not
mov
cmp
mov
mov
test
xchg
jno
repnz
add
mov
add
add
or
cmp
adc
pop
jnp
jne
aad
stos
jo
sbb
fwait
mov
mov
imull
and
and
sub
pop
lcall
mov
in
sbb
push
das
xor
push
pop
imul
cltd
add
dec
jbe
test
push
cli
fwait
push
sbb
daa
loopne
lds
mov
xor
dec
mov
xchg
push
xor
gs
test
in
movsl
inc
paddd
or
and
lret
loopne
ljmp
mov
sub
mov
shll
sbb
ret
xchg
push
popa
add
rorb
aas
ret
jo
hlt
cmp
sbb
inc
or
in
fwait
rep
into
les
xorl
loopne
mov
mov
mov
xchg
or
add
push
pop
pushf
fnstcw
xor
xor
push
fiadds
mov
push
js
in
stos
push
and
popa
lea
fstps
dec
insl
call
jbe
std
and
cmpsl
mov
in
dec
daa
shrl
ja
stc
xor
lret
es
lcall
push
cli
loope
iret
lret
std
stos
inc
pop
insl
in
inc
out
xchg
and
popf
or
dec
ror
fsts
repnz
stos
push
jnp
scas
adc
cld
jl
or
inc
daa
cld
hlt
dec
jecxz
jp
sub
pop
jp
sbb
or
cmp
xor
iret
or
stc
in
mov
movb
rcll
xor
sbb
scas
cld
jno
inc
leave
push
inc
dec
dec
lcall
and
scas
and
popf
ja
loop
rolb
inc
std
sub
js
mov
jl
adc
movsb
int3
shl
lahf
xor
sub
dec
cld
inc
repz
pop
sub
and
xchg
cmpsb
dec
cmpb
sbb
hlt
ljmp
lret
mov
ljmp
sub
cltd
fiadds
cmp
js
leave
add
daa
inc
push
test
add
or
test
imulb
fldenv
movsb
lods
movsl
enter
adc
push
cwtl
loopne
cs
std
stos
pop
adc
lds
sbb
lock
and
mov
jo
movsl
hlt
inc
psrlq
int
mov
shrb
inc
jns
xchg
adc
pushl
xchg
daa
cmp
xlat
jg
out
call
push
test
xor
xor
xor
and
inc
jnp
shlb
mov
and
xchg
and
clc
pop
or
rol
sub
jg
pop
sbb
cltd
jle
or
daa
mov
inc
dec
push
dec
repnz
xchg
mov
aas
mov
add
dec
iret
lods
adc
inc
jp
not
cwtl
pop
in
xchg
lcall
adc
mov
sbb
iret
cmc
out
cmp
and
add
xor
fucomi
push
mov
in
subl
clc
es
push
sbb
imull
cmp
inc
add
out
cmp
push
cmp
cli
ds
pop
push
lea
stc
add
jb
pop
adc
sub
adc
cmp
scas
ds
clc
and
and
scas
scas
jle
gs
push
in
ss
jmp
jg
js
inc
xchg
mov
xchg
les
xor
cmp
dec
adc
imul
mov
js
test
dec
bound
pushf
xchg
and
mov
dec
scas
add
les
test
fwait
call
push
xor
lods
mov
dec
je
bound
in
fcompl
movsb
and
and
pusha
insl
sarb
repnz
gs
push
sahf
xchg
lods
xchg
bound
daa
scas
in
cmc
outsl
nop
cmp
in
mov
lds
test
addb
jmp
test
pop
jle
sub
loope
flds
pop
cmp
mov
adc
mov
enter
lods
pop
icebp
imul
or
cmp
shrb
push
mov
jmp
mov
fisttpl
repnz
je
mov
test
movq
mov
dec
push
push
push
cltd
cmp
loopne
cmpsb
inc
adc
int3
inc
les
lds
ja
cmp
pop
cwtl
jnp
cltd
sub
mov
mov
call
inc
scas
xor
pop
scas
jnp
jno
fldenv
xchg
in
push
sar
out
adc
scas
movsb
fisubl
loope
jecxz
mov
das
test
out
mov
sbb
or
cmc
xor
imull
ss
mov
pop
inc
outsl
jmp
repz
sbb
lret
stos
das
out
or
mov
push
jecxz
jmp
divb
cmp
adc
out
icebp
gs
push
out
add
pop
xchg
leave
testl
adcl
adcl
stc
mov
cmp
aaa
push
fadd
inc
pop
or
or
icebp
scas
cmp
jecxz
divl
lods
inc
mov
mov
nop
bound
repnz
insb
push
cli
sbb
fwait
add
push
cmpb
scas
stc
sbb
enter
aaa
sbb
sbb
lret
push
movsb
aas
sbb
mulb
aam
mov
cmp
xchg
mov
ja
sbb
inc
pop
push
enter
aaa
cmp
ss
xchg
xchg
fnstcw
xchg
and
inc
cmc
ret
negl
mov
cmc
inc
lcall
and
fs
push
aas
mov
xchg
mov
jle
push
out
mov
inc
push
test
or
lods
jmp
addr16
mov
mov
addr16
inc
cltd
mov
pop
call
rolb
mov
icebp
rorl
inc
adc
sbb
or
sub
dec
pop
xor
bound
out
pop
aas
push
fsubrs
mov
adc
lcall
pop
xor
mov
mov
mov
add
or
ljmp
lcall
cmpsl
stos
leave
push
jno
outsl
adc
mov
pop
inc
les
insl
jg
neg
sar
xchg
fistpll
xor
push
mov
lea
lahf
mov
test
ja
addr16
fwait
xor
pushf
jb
je
sahf
stc
ljmp
add
push
xchg
jmp
ss
sbb
lret
sub
std
adc
add
aaa
incb
iret
or
mov
lods
inc
leave
sub
mov
sahf
stc
in
daa
inc
call
sbb
add
stos
add
test
inc
sbb
xor
pop
mov
adc
jne
adc
pop
jnp
scas
mov
out
xchg
or
subb
addr16
in
dec
stc
inc
rcr
fwait
xchg
and
aam
xchg
xchg
inc
xchg
popf
pusha
nop
scas
jo
mov
sbb
pusha
ret
xlat
xchg
jmp
fs
push
dec
pop
push
xchg
mov
and
outsb
add
xchg
mov
push
neg
out
andl
icebp
add
sbb
adc
push
lret
and
add
leave
cmc
mov
pop
lcall
sbb
add
dec
add
mov
jnp
mov
ja
subl
pusha
mov
pushf
push
int3
and
test
outsb
ret
out
cwtl
enter
hlt
notb
ret
call
jle
jecxz
or
es
fldenv
hlt
xlat
adc
dec
add
jle
jae
subb
icebp
and
fwait
dec
bound
sbb
test
pop
outsl
add
fbstp
or
cmpsb
sarb
movsl
mov
push
rorb
dec
push
fbld
and
js
in
in
cld
pop
xchg
inc
stos
pop
push
adc
aam
clc
fiaddl
mov
push
pop
pop
fisubrl
jmp
xor
mov
or
cmp
cs
xchg
adc
adcl
das
inc
and
aaa
add
cmp
push
popa
insb
fyl2xp1
repz
mov
pop
push
mov
orl
push
inc
fstl
inc
int
inc
movsb
inc
test
jo
dec
inc
mov
pop
xchg
popa
ror
int
in
jnp
pushf
or
add
in
sti
mov
lods
subb
fs
add
leave
xorl
sub
stos
adc
movsb
mull
andl
scas
and
pop
pop
cmp
mov
inc
les
mov
inc
js
pop
xchg
stos
fstpt
mov
or
cmpsb
cmp
add
scas
lret
jl
movsl
int
rorb
adc
lods
sbb
jge
inc
cmpsl
xchg
lock
loopne
xlat
jl
adc
pop
add
test
int
lret
movsl
sbb
cmp
pop
cmp
mov
mov
mov
inc
jno
push
mov
movsb
stos
out
call
push
dec
jecxz
andb
mov
xor
or
inc
femms
fsubrl
andb
fcmovne
jmp
bswap
xor
cld
call
adc
pop
divl
repnz
add
dec
add
ucomiss
out
xor
mov
sub
push
pop
mov
adc
fcoms
mov
ss
sub
std
out
mov
push
push
mov
loop
fisttps
or
std
mov
in
adc
sub
and
adc
jmp
stos
sub
ds
pop
das
in
xor
in
les
sub
jb
pop
xchg
push
sbb
mov
and
call
sub
jno
inc
pop
cmp
push
loope
adc
pushf
cmp
lock
daa
jl
mov
cmp
jg
or
push
xor
mov
jge
xor
fnstenv
cmp
fldl
ja
jbe
cmp
mov
or
or
xor
jg
fbld
int3
mov
daa
mov
out
shll
repnz
test
fbld
in
cli
inc
xlat
mov
in
pop
sarb
inc
lahf
inc
and
cmp
mov
mov
into
sbb
fsubrl
insl
insb
mov
or
outsl
xor
lods
lret
mov
mov
push
xlat
fmull
lcall
ja
fildll
jmp
in
mov
adcb
call
mov
mov
or
enter
xor
enter
jns
mov
xchg
fldcw
push
negl
mov
sub
je
in
outsl
sar
stc
xor
outsb
in
stc
push
mov
sub
stos
mov
inc
pushf
pop
add
jg
scas
mov
rorb
adc
jns
xchg
aaa
int
add
pushf
sub
mov
ja
add
push
xor
lds
jg
sbb
fwait
inc
cltd
adc
scas
inc
xchg
int3
cmpsb
and
push
adc
cli
push
pop
cmp
dec
repz
inc
cltd
js
inc
adc
xlat
xchg
fidivs
cltd
inc
dec
mov
xchg
rolb
fdivrl
push
pop
mov
mull
pop
out
sub
mov
ret
outsl
jbe
mov
add
sub
popa
and
mov
lcall
insl
cs
ret
mov
dec
sbb
xchg
ficoms
mov
jmp
test
jle
mov
push
and
ret
pop
vpsrlw
out
nop
insl
or
jge
mov
jmp
stos
mov
pop
xchg
aas
lock
dec
mov
lea
cmp
mov
sbb
cmp
xchg
xor
loopne
outsl
sbb
adc
push
sbb
repnz
or
mov
xchg
pop
mov
ja
mov
leave
pop
popa
add
mov
pop
icebp
frstor
incb
dec
sbb
jecxz
push
add
inc
cmpb
mov
imul
mov
mov
loope
lcall
push
sbbb
dec
inc
push
movsl
sub
movsb
lds
jno
jo
aad
loop
push
es
imul
add
nop
ljmp
out
and
icebp
call
shl
jge
cli
jle
cmp
sub
js
inc
out
std
push
int3
test
pop
test
or
jmp
or
lcall
loope
cmp
mov
lret
mov
pmaddwd
sbb
mov
jo
sahf
mov
ffreep
lock
xlat
popf
fwait
dec
ja
cmp
mov
es
cltd
pop
movsl
lods
idivb
push
inc
cld
xchg
dec
push
cli
je
inc
pop
je
je
negl
mov
and
das
and
xchg
xor
mov
pop
add
iret
inc
hlt
xlat
mov
lahf
stos
dec
push
or
stc
or
repz
inc
mov
dec
out
scas
jmp
jg
orb
das
mov
add
repnz
jbe
push
or
inc
dec
jecxz
mov
in
cmpsb
leave
jge
add
mov
adc
popa
pushf
loop
sarl
or
dec
insl
arpl
mov
cs
lods
pop
push
and
pop
insb
repnz
loope
add
cmp
std
mov
inc
lahf
les
aad
xchg
ret
dec
mov
addl
rorl
or
pop
jnp
jns
je
mov
mov
aas
inc
into
mov
test
cli
pop
inc
mov
icebp
sbb
adc
pop
mov
xor
test
ljmp
cmp
in
aam
in
mov
negl
inc
ljmp
mov
mov
in
xor
fldt
or
cmp
inc
xorl
mov
dec
das
in
inc
pusha
adc
into
sbb
and
imul
adc
pop
ret
xchg
loope
adc
pop
push
mov
push
fstl
out
sub
nop
sbb
inc
adc
mov
dec
and
pop
stos
xor
das
lods
dec
enter
cmp
mov
xchg
mov
test
pop
adcl
popa
adcl
jnp
subb
sahf
lea
lods
add
xchg
or
data16
adc
inc
fsubrs
call
cmpsb
jl
mov
in
mov
xchg
pop
jae
mov
rcr
cmp
pop
adcl
mov
loopne
fstl
cmpsl
outsl
xlat
je
add
pop
negl
pop
mov
cltd
xchg
and
loope
int3
lock
mov
rcrb
test
aam
sahf
or
jae
inc
clc
pop
push
fs
gs
or
popf
scas
inc
test
push
sbb
hlt
fldcw
push
stc
xor
outsl
lods
cmpsb
fisttps
jnp
add
or
dec
jo
adc
pop
xchg
aam
lret
shrb
pop
mov
jae
fisttpl
push
pop
in
sub
shlb
das
cwtl
repnz
enter
aaa
and
and
mul
mov
test
arpl
xchg
int3
mov
adcl
add
mov
shrl
cs
inc
cmp
xchg
xor
pop
mov
lcallw
sbb
adc
aad
xor
pop
hlt
notb
jecxz
lret
mov
xchg
jnp
mov
mov
stc
imul
cmp
mov
cmp
imul
lds
add
lret
jno
jle
mov
movsb
jbe
arpl
xchg
sub
sahf
adcb
add
dec
nop
out
js
addl
jmp
shl
call
sbb
sti
or
cmp
mov
imul
sbb
mov
push
sbb
xchg
jmp
mov
mov
mov
mov
add
cmp
lahf
testb
xor
sub
ljmp
push
xchg
jb
stos
inc
lea
dec
lret
adc
adc
mov
jae
js
mov
ret
movl
jbe
push
dec
adc
ret
add
sub
xchg
sahf
jl
clc
jmp
mov
je
cmp
aam
ret
nop
jle
dec
cmc
xlat
stc
rcr
pop
lea
mov
cmc
or
sub
jne
cmp
mov
xor
les
nop
push
cli
enter
cwtl
xchg
mov
lret
jmp
popa
dec
lods
push
data16
or
sbb
cmp
push
pop
inc
popf
push
sbb
jge
and
cwtl
mov
jo
pop
cs
hlt
aaa
ds
mov
popf
sti
sub
fsubrs
fnstenv
cld
or
mov
leave
cmp
mov
or
fwait
dec
dec
jne
or
jno
out
jle
lret
jae
or
gs
es
scas
mov
mov
dec
pop
std
aad
mov
loope
xchg
ret
cltd
mov
pop
leave
into
adc
push
pop
xchg
in
push
in
inc
add
lds
imul
and
std
int
sub
and
fldl
aad
adc
cli
cmpsl
push
mov
push
inc
mov
push
sub
addr16
jg
or
mov
negb
mov
cmp
in
aad
push
cwtl
sub
mov
unpcklps
add
insl
cmp
outsl
sbb
daa
je
in
sub
fldl
add
jbe
mov
fnstcw
push
push
pop
jmp
add
gs
imul
lods
jl
lods
jne
dec
arpl
fmulp
sti
in
inc
outsb
adc
scas
lret
loope
cltd
in
cmp
adc
mov
movsl
or
int3
xchg
inc
repz
inc
push
jmp
imul
and
aas
or
mov
mov
cmpps
and
push
daa
xchg
add
aaa
int
aad
nop
pop
mov
jb
es
cmpsl
ret
xor
or
push
jg
in
push
jle
inc
jae
enter
mov
leave
mul
sbb
in
inc
in
xor
fnstsw
pop
pop
pop
clc
cltd
fs
dec
cltd
sbb
cmp
stc
jmp
sub
cmp
insb
sarb
iret
fxch
sub
lds
xor
add
and
mov
xor
jle
xor
lea
sbb
add
enter
mov
arpl
xchg
aam
and
inc
movsl
mov
xchg
sub
ret
push
and
mov
movntq
out
pop
mov
outsb
lret
in
mov
pop
mov
scas
stos
lods
jnp
mov
addr16
mov
mov
fnstcw
cmpb
repnz
iret
sub
add
stc
iret
push
inc
xor
scas
jge
push
xchg
lret
aaa
sub
jnp
subb
push
scas
lds
xor
in
jno,pn
xor
and
divl
fsubl
scas
fidivrs
jmp
jp
jle
cmpb
int
push
pinsrw
mov
dec
push
stos
xchg
cld
rclb
dec
sub
mov
sub
push
data16
xor
lea
into
scas
lods
es
sarl
jl
ljmp
dec
std
leave
divl
cltd
add
rcrl
sbb
arpl
loope
mov
subl
out
incl
sub
imul
add
xlat
call
stos
jecxz
lcall
pushfw
and
sub
into
lock
data16
add
cwtl
sahf
test
xchg
scas
inc
push
cld
push
int
add
jno
mov
xor
into
sub
adc
pop
pop
cmpsl
and
data16
fisubl
out
add
jle
jmp
lret
sbb
addb
dec
jl
flds
nop
push
xchg
loope
and
pop
mov
test
and
xor
xchg
mov
cmp
inc
lret
cmp
mov
lea
mov
cmpl
insb
dec
add
mov
cli
sbb
insb
aas
mov
or
push
bound
push
jae
inc
loop
mov
and
mov
inc
pop
sub
pop
cli
adc
xchg
pop
xor
cmovnp
clc
out
cmc
pop
inc
iret
jb
jge
sub
add
xor
cmp
stc
arpl
in
dec
imul
scas
ret
xlat
addl
lock
imul
lretw
xchg
inc
orl
ret
jno
xor
push
jnp
mov
dec
fwait
rcr
lahf
sbb
mov
xchg
mov
mov
jns,pt
push
add
push
scas
jbe
ret
mov
jle
mov
adc
xor
test
lea
push
outsl
jle
lods
xor
pusha
pop
push
sub
push
mov
and
xchg
daa
test
push
inc
and
aad
jp
push
push
call
inc
xlat
adc
movsl
fidivl
loop
js
xchg
mov
insl
push
xchg
xchg
xor
push
test
ss
push
jecxz
xchg
ds
int3
jbe
js
je
out
cmc
ffreep
inc
add
icebp
jne
bound
in
cmpsl
cwtl
loop
pop
je
and
ja
popf
push
arpl
daa
push
inc
xlat
lret
loop
filds
in
sub
negb
cld
xor
jg
mov
xor
push
hlt
fs
ss
mov
inc
out
std
js
sub
push
js
cmp
lock
lret
addr16
pusha
jle
and
pop
fincstp
dec
fucomip
shlb
fdivr
scas
jl
pop
or
jp
ljmp
jp
loopne
loope
fisubs
mov
and
icebp
cmp
sbb
jne
push
dec
loop
dec
out
cltd
mov
shll
je
mov
mov
mov
lods
imul
sub
jo
and
jp
rorl
pop
sub
aam
mov
mov
es
xor
stos
xchg
mov
into
int
f2xm1
pop
mov
pop
cmpsl
shlb
loop
inc
jno
fildl
xor
cwtl
xor
into
push
int
nop
mov
ficomps
js
mov
sahf
enter
cli
dec
iret
mov
mov
iret
call
dec
aas
inc
out
add
mov
lcall
and
xor
ret
sbb
shlb
jns
jg
fcomps
inc
dec
lret
mov
rorb
xchg
call
cmp
or
movsb
std
mov
pop
pop
sbb
inc
push
out
out
scas
icebp
jl
mov
add
inc
dec
cmpl
insl
push
push
jbe
add
sub
jne
jno
int
decl
outsb
cmp
xchg
inc
clc
dec
ret
ja
test
dec
ret
push
daa
sbb
mov
or
gs
cli
xchg
push
xchg
testb
pushf
or
push
int
ret
xchg
je
xchg
mov
movsb
lcall
and
or
mov
or
or
icebp
lods
pop
mov
inc
sarb
sub
add
adc
inc
cltd
leave
icebp
outsl
xor
movlps
jle
mov
frstor
pop
mov
xchg
dec
mov
lret
jge
sbb
cli
jg
adc
or
inc
xchg
loope
jle
scas
pop
cwtl
xchg
je
rorb
sbb
xorl
xor
cmp
or
or
cmpsb
xor
jmp
out
pusha
jg
mov
out
rorb
test
mov
pop
push
mov
shl
ret
push
jne
push
jmp
push
loope
pop
jecxz
ret
xchg
aas
aad
xchg
or
cmp
dec
adc
test
push
daa
push
add
out
mov
mov
lret
cmp
cli
inc
in
loopne
clc
add
aaa
pop
movsl
add
mov
mov
xor
inc
or
ret
hlt
and
cmp
mov
or
leave
adc
idivl
push
pop
lods
aaa
mov
or
cmp
test
xor
xor
sub
aaa
jno
jae
int3
aam
sub
or
in
incb
inc
mov
gs
cmp
lds
or
fcmovb
in
fistps
js
out
cmp
mov
test
dec
popf
cmp
and
inc
xchg
mov
stos
lcall
fisttpll
xlat
fnsetpm(287
repnz
xchg
out
dec
xchg
bound
xchg
scas
daa
mov
xor
mov
pop
sahf
mov
add
jno
andb
jbe
imul
loopne
xchg
sub
or
xchg
mov
lret
pop
dec
into
push
cmp
inc
mov
hlt
not
and
inc
fldl
dec
into
or
into
insb
std
sub
loop
test
stos
jb
stc
inc
pop
aad
add
mov
lds
dec
add
adc
push
mov
cmpsb
stc
inc
rolb
lahf
bound
mov
cltd
movsl
mov
mov
enter
clc
out
add
add
add
aad
adc
adc
mov
dec
repz
add
aam
aaa
stc
inc
loopne
clc
nop
mov
dec
sbb
sbbb
out
xacquire
sbb
iret
pop
scas
aam
mov
jne
mov
or
sub
int
mov
pop
outsb
popa
add
push
xchg
pushl
mov
hlt
cwtl
dec
dec
xor
lcall
fiadds
shl
roll
mov
inc
movsb
push
adc
sbb
mov
jge
testl
ljmp
std
pop
test
mov
pop
pop
das
std
ss
sbb
and
add
adc
cmpsb
stc
add
lock
jne
pop
xchg
push
scas
adc
dec
lods
dec
and
and
or
hlt
ret
sbb
rcrl
popa
arpl
incb
clc
mov
jo
add
mov
mov
sbb
addr16
mov
push
jge
test
mov
jg
insl
js
xor
dec
cmp
nop
jecxz
push
pop
pop
out
mov
das
aaa
les
adc
xchg
jg
sub
pusha
out
clc
test
pop
rclb
cmp
push
sub
push
repz
ret
ficoml
lea
enter
or
xor
lahf
xor
lds
sbb
xchg
add
test
jl
jbe
jl
rclb
push
mov
outsl
gs
or
movsl
dec
jle
adc
out
cmpsb
or
xchg
and
sbb
push
shlb
fisttpl
cmpl
jnp
xor
xchg
aaa
repnz
fisttpl
or
icebp
clc
lods
nop
ja
mov
lret
cs
lock
add
nop
stos
into
cmpsb
cmp
dec
es
das
sbb
insb
jl
rclb
dec
mov
jecxz
inc
loope
push
adc
sub
push
int3
and
cwtl
adc
les
aam
mov
test
push
insl
dec
lahf
add
daa
adc
xchg
outsl
push
add
cli
je
rorl
gs
mov
out
outsl
test
jne
movsl
rcll
imul
insl
in
gs
mov
aam
adc
mov
hlt
rcrb
dec
pop
pop
add
in
mov
inc
jp
mov
cwtl
mov
xchg
add
jmpw
dec
ja
aaa
lahf
sbb
adc
sub
cmp
lea
loope
jp
mov
sbb
popa
inc
in
rcr
lods
call
int
stos
adc
int
cmp
mov
or
mov
leave
inc
ficompl
dec
push
sbb
in
xchg
cmp
mov
cmp
push
dec
arpl
loopne
sbb
mov
das
imul
jae
jg
mov
cmpsl
cltd
pop
iret
scas
clc
pop
push
mov
out
fimull
pop
arpl
fistpl
mov
loope
imul
jmp
cld
sub
sti
dec
pop
loope
inc
mov
xor
shrb
mov
add
dec
xchg
dec
imul
notb
mov
out
jl
shrl
inc
cmpsb
inc
movsl
pop
and
cmp
sub
mov
push
cmp
stos
jnp
mov
adc
mov
jbe
add
cmpsl
int3
sub
pushf
sbb
call
pop
jne
enter
xlat
scas
int
rcrl
das
sbb
fisttpl
cmpsl
pop
loop
mov
sub
fsubs
cmpsl
fiadds
gs
sub
xchg
ud2
xor
ret
movsb
lods
jnp
xorl
xchg
push
push
cltd
mov
jb
fcompl
jp
sbb
mov
clc
sbb
add
jecxz
sahf
out
push
insl
addl
push
and
cmp
std
adcl
mov
ds
lret
and
ret
pop
sbb
leave
lret
jp
subb
daa
sbb
popa
pop
jae
cmp
push
lcall
lea
inc
jle
lret
sub
xchg
loope
lret
in
pushf
sub
xchg
mov
xchg
lods
imul
cmp
insb
les
lcall
xor
notb
rorl
sarb
jb
or
sbb
loopne
fcomps
inc
std
incb
xchg
add
inc
pop
cmp
add
stos
testl
or
movsl
mov
fdivs
shrl
xor
xchg
adc
dec
pop
cmp
push
popa
sub
call
add
jg
bound
xor
jns
jns
or
mov
inc
out
mov
jno
mov
repnz
scas
mov
test
bound
xor
adc
pop
lods
or
dec
adc
jno
fdivrs
xchg
xchg
pause
sbb
xorb
ds
fstpt
add
in
or
invd
sti
and
xor
aas
imul
je
lcall
into
test
jns
nop
xor
out
mov
test
es
mov
jns
mov
pop
out
out
sub
jge
adc
mov
out
lcall
imul
add
scas
lret
testl
mov
pop
dec
push
loope
pop
or
leave
xchg
lock
ds
or
enter
fs
sub
push
add
xchg
xor
push
sahf
push
mov
push
pop
jne
push
inc
ljmp
inc
aaa
sub
jle
adc
push
cmc
pop
sbb
push
faddl
mov
push
mov
adc
cli
out
aad
mov
rclb
test
into
bswap
mov
orb
adc
stos
lock
call
mov
adc
icebp
lret
dec
push
loop
or
xchg
mov
fiadds
and
xor
arpl
iret
mov
cmp
dec
fidivl
ret
jne
mov
xor
cmpb
je
add
adcb
clc
and
dec
jno
lahf
idiv
popa
add
arpl
xchg
imul
jb
xchg
pop
xchg
xchg
dec
sbb
jae
inc
insl
push
repnz
imul
xchg
jp
mov
and
or
sub
or
roll
lahf
repnz
push
mov
add
or
mov
mov
shl
pop
xchg
or
lahf
int
mov
rcll
mov
xor
inc
adc
pop
adc
xchg
sub
stos
arpl
sbb
dec
fsubl
sbb
loopne
aaa
ss
mov
xchg
clc
adc
push
sbb
decl
lea
and
outsb
push
jge
and
xchg
out
cmp
subl
adc
jne
in
jb
or
mov
cs
inc
ret
sbb
call
pop
jno
xchg
shrl
adc
adc
lahf
push
repz
sub
sub
inc
ret
iret
mov
sti
inc
or
cli
jne,pt
adc
add
sbb
rcrb
mov
fwait
sub
sahf
jo
frstor
incl
adc
xor
inc
sbbl
add
aad
sub
fstpt
arpl
imulb
call
pop
loop
test
shl
and
mov
int
dec
jne
in
jns
inc
arpl
add
in
xchg
pop
aas
fwait
popf
arpl
mov
lret
inc
jne
lods
rorb
or
loop
cld
shlb
jnp
hlt
push
jge
xchg
mov
push
xchg
push
or
ficoms
shr
call
outsl
jb
and
xor
xchg
movsb
subl
push
jb
test
das
jg
pop
xor
cmp
inc
inc
and
mov
sbb
in
xchg
frstor
int
sub
xchg
clc
dec
cmp
daa
cmpsl
push
mov
adc
sub
pop
loop
push
xor
or
push
pop
jb
lcall
test
pop
aaa
xchg
jae,pn
fwait
test
jp
sub
test
mov
stc
shlb
push
dec
mov
clc
jnp
ds
add
movsb
int
mov
and
sub
adc
or
pushf
cmpsl
cmp
cmpsl
leave
loope
mov
iret
mov
mov
insb
movsb
cmpsb
aam
mov
mov
scas
push
rorl
shll
sbb
xor
and
dec
dec
cmp
inc
ds
outsl
into
jecxz
dec
ret
or
cwtl
cmp
lds
dec
adc
shll
repnz
stos
ljmp
push
dec
sbb
inc
lcall
push
sbb
pop
test
cmp
cmpb
arpl
ret
jmp
add
jp
inc
fcompl
xor
mov
jl
push
jl
stos
sub
lds
xor
push
shrb
in
and
mov
push
lret
leave
lahf
insl
mov
add
adc
push
push
mov
mov
fistpll
in
pop
rcll
loopne
xor
cwtl
jo
add
popf
test
lds
rclb
insl
fistps
orl
enter
add
addr16
and
dec
rcl
xor
out
imul
lret
shlb
ss
and
pop
test
add
repnz
add
sbb
xorl
xor
mov
fisubs
adc
popf
je
or
inc
mov
pop
jns
xchg
insb
outsl
cwtl
pop
jne
xchg
hlt
add
mov
test
xor
jge
add
xchg
push
add
mov
fnsave
inc
sbb
imul
jb
fidivs
popa
roll
out
inc
mov
or
mov
pop
or
xchg
int
ds
sub
mov
cmpsb
cmp
mov
leave
jae
add
std
fcomps
sub
lods
clc
inc
pushf
aaa
jbe
scas
adc
jmp
ret
cld
or
pop
jge
jae
and
adc
movsl
xchg
ljmp
mov
jbe
iret
push
pop
leave
fsubrl
sarb
cmp
iret
jbe
decl
sbb
push
add
jecxz
lods
cmpsl
pop
mov
int3
push
ret
in
adc
fbstp
mov
sub
sarl
or
mov
outsl
fwait
push
scas
pop
dec
dec
sarb
adc
push
mov
fwait
inc
icebp
popa
xor
pop
bnd
mov
fsubl
xchg
or
jg
or
fwait
daa
shll
jbe
fisubl
add
push
fstl
in
mov
jmp
int
adc
movsl
sbb
cmpsl
xor
mov
nop
sbbb
fmull
stos
inc
mov
dec
sbb
dec
adc
mov
dec
sub
insl
xchg
push
ja
call
sub
cmpsl
adc
adc
loopne
push
cmp
aaa
ret
gs
lods
xchg
adc
inc
add
aaa
pop
clc
xchg
push
fdivl
call
dec
sbb
jae
or
cmp
mov
lods
stos
adc
push
clc
or
jae
pop
movsb
jecxz
enter
mov
sub
ja
call
fldl
in
dec
inc
pop
push
adcl
roll
cld
cli
lds
push
out
jo
addr16
xchg
xor
aam
inc
fcmove
loopne
mov
sbb
or
inc
xchg
dec
ret
push
and
fwait
mov
pop
dec
rolb
cwtl
mov
insl
xchg
pop
aaa
loop
movsl
bound
sub
xor
loopne
loope
push
repnz
in
rorl
adc
and
loopne
fbstp
sub
push
bound
adc
dec
stos
orl
out
add
popa
xchg
cmp
dec
psllq
cmpsb
mov
push
test
data16
ficoms
or
lahf
sahf
inc
lods
inc
aad
push
mov
xchg
pop
sbb
in
xchg
inc
ret
pop
mov
dec
repz
bound
inc
les
bound
dec
rcr
icebp
add
cmpsl
and
ds
mov
popa
sti
inc
std
insb
pusha
pop
mov
inc
cmp
pop
xchg
cli
addr16
pop
out
pop
dec
aam
mov
test
addr16
xor
add
data16
pop
cs
fstp
cmp
inc
jne
jp
es
mov
mov
fsubr
enter
imul
aad
fucom
aad
scas
add
in
out
cmp
call
pop
js
adc
insl
shrl
pusha
adc
std
mov
lret
lods
insl
in
and
orb
int
lea
push
xchg
lcall
daa
pop
nop
xchg
xor
pop
aam
mov
aas
sarb
ss
in
pusha
inc
mov
js
inc
fmulp
insb
xor
mov
scas
adc
add
or
jl
aad
repnz
loopne
pop
adc
std
ffreep
dec
push
sbb
jbe
pushf
xor
xchg
repnz
dec
sub
add
sub
cmp
jle
mov
pop
fxch
sbb
test
xchg
mov
jae
and
cld
sub
push
pusha
stos
arpl
and
lea
orb
fldcw
cmp
sbb
mov
add
or
aad
inc
pop
imul
and
adc
dec
lock
jmp
push
out
or
js
and
addr16
xor
popa
js
popf
jmp
dec
xchg
sbb
sbb
mov
mov
cmp
aad
xchg
add
and
adc
arpl
jecxz
in
mov
fs
pop
mov
sub
loop
adc
jg
dec
mov
out
jmp
stc
frstor
mov
arpl
jbe
xchg
inc
xchg
add
outsb
mov
jns
mov
aad
rorb
push
frstor
std
inc
and
sbb
mov
pop
and
fwait
addr16
fisttpl
ss
in
mov
loopne
mov
xchg
test
sbb
pop
adc
xor
daa
fsub
sbb
out
cmp
xchg
pop
mov
jnp
or
popa
std
lock
pop
iret
stc
sbb
cmp
cmpsb
imul
xor
mov
xor
adc
dec
out
mov
cmp
aam
lods
inc
xchg
gs
push
fisttpll
cmpsb
or
xchg
clc
cmpsb
aas
mov
rcr
cmp
or
push
push
test
mov
and
mov
inc
sbb
pop
pop
scas
fidivrl
loope
jb
cld
fmulp
sbb
out
cmp
xchg
lea
mov
lret
data16
and
fwait
loop
pushf
dec
jg
inc
aas
inc
sbb
fwait
adc
stc
inc
cs
scas
mov
add
or
sbb
aad
pop
xor
fs
rol
cmc
lret
lret
jl
adc
lcall
jae
adc
sbb
imul
fnstcw
xlat
lret
jae
jns
dec
pop
gs
or
or
cmc
rorb
les
and
jns
lret
mov
xor
test
int
sub
xchg
push
push
aam
mov
push
or
and
and
ja
and
test
jb
sbb
rcrl
fs
mov
push
js
insl
mov
call
mov
mov
int3
mov
test
xor
fdivrs
sub
mov
cmp
cld
stc
mov
mov
cmp
andl
cmp
cltd
fnstsw
mov
jge
call
inc
jecxz
or
movsl
iret
or
lahf
and
push
pop
out
inc
add
xor
loop
dec
sbb
mov
fstpl
dec
fistps
jecxz
dec
push
inc
sahf
pop
daa
stos
xchg
lods
mov
repnz
int3
jmp
idivb
dec
ljmp
je
xchg
and
out
pop
in
in
ds
mov
cmp
pushl
jns
pop
or
pop
mov
mov
jg
mov
roll
mov
jle
cmpl
inc
std
insl
mov
js
cmpsl
fcoms
adc
xchg
pop
push
in
in
in
xor
ficomps
das
xchg
add
pop
pop
sbb
dec
sbb
add
sub
xchg
xor
jecxz
sbb
sbb
call
xlat
mov
mov
xorb
jns
int
movsl
mov
cmc
push
loop
mov
mov
fs
repz
fs
popf
xchg
fwait
outsb
jl
push
repz
je
pop
int
adc
sbb
faddl
push
ds
adc
xor
lret
nop
lds
aad
sub
mov
dec
xorb
pop
push
add
or
push
out
inc
lret
mov
repnz
jle
adc
idivb
cmp
lds
mov
xchg
pop
cmp
inc
fbstp
jge,pn
andb
in
lods
int
push
dec
stos
dec
mov
jns
pop
cmp
add
xchg
cmp
in
add
arpl
ja
and
dec
mov
adc
subl
and
incl
xor
pusha
jle
aam
je
xor
arpl
test
jne
rcrb
add
icebp
gs
pop
cmp
xchg
mov
fsubs
sbb
cmc
inc
movsb
mov
fstps
testb
test
stos
out
xor
xlat
jb
dec
je
mov
cli
dec
test
xor
adc
push
stos
fwait
xchg
push
push
cmp
mov
add
mov
out
inc
mov
in
inc
cmc
stos
lods
cmpsl
pop
dec
mov
hlt
mov
in
sub
jp
lock
cmpsb
aad
pop
or
int3
lods
iret
insl
jnp
or
popaw
sarb
arpl
dec
stos
push
repnz
fsts
mov
insb
mov
xchg
xchg
xchg
and
cmp
jne
fstp
iret
mov
fwait
jns
lcall
inc
xor
adc
xchg
fisubl
jne
enter
fadds
push
lcall
dec
ss
or
shl
insb
xor
lea
xor
mov
lds
shr
and
jae
leave
add
lea
adc
sbb
popa
lcall
xor
inc
pop
jl
test
or
push
xchg
js
aad
ror
js
sub
mov
or
mov
inc
repnz
adc
lds
or
popa
sbb
call
inc
jno
xor
adc
push
xor
add
rcrl
js
jns
arpl
icebp
fmuls
xor
xor
roll
outsb
out
dec
aaa
xchg
push
jp
jge
fldenv
lods
cs
dec
stos
jae
cmpsl
sub
pop
inc
push
lock
xchg
lahf
jecxz
and
sbb
js
mov
fldt
fs
push
push
shl
sub
xlat
inc
imul
dec
mov
jmp
push
inc
cmc
pcmpgtd
negl
scas
lcall
pop
jecxz
and
sbb
pop
sub
or
bound
sahf
sbb
push
cmpsb
push
push
aas
lahf
movsb
xchg
outsl
pop
jmp
pop
lods
or
fadd
sub
push
rclb
xchg
cmpsl
repz
mov
dec
sar
sbb
cmp
aas
or
int
mov
xor
imul
jb
arpl
es
aaa
ss
and
adc
imulb
dec
mov
add
js
and
std
in
push
clc
in
jg
or
inc
dec
insb
nop
xor
decl
mov
adc
dec
and
stos
ret
test
hlt
mov
mov
ret
xchg
mov
hlt
es
and
pop
ret
dec
jo
imul
xchg
adc
sti
sbb
push
or
and
jae
lock
sub
inc
pop
dec
outsb
push
push
in
push
dec
in
inc
cwtl
mul
sub
xchg
push
jne
shl
mov
pop
cmp
ljmp
ret
push
fcoms
dec
jmp
add
mov
dec
and
mov
add
and
dec
mov
in
addr16
cmp
ss
xor
mov
out
mov
and
imul
jecxz
in
lods
movsb
sub
ficompl
test
jp
adc
lret
inc
jmp
adc
jle
sbb
outsl
popa
push
lods
xlat
js
pop
xchg
cmpsb
leave
aas
pop
jbe
jno
and
faddl
js
imul
xchg
pusha
out
ljmp
sub
lcall
jge
pop
mov
jo
scas
lods
pop
mov
mov
jecxz
js
into
nop
mov
insb
jp
xor
in
ds
in
and
sbb
jo
loop
cmp
stc
pop
xchg
pop
into
adc
ret
sub
shll
dec
movsl
cmp
imul
inc
or
pop
sbb
repnz
xchg
mov
mov
mov
pop
data16
sbb
in
fldcw
dec
fcmovnbe
dec
and
and
push
xchg
sub
fildl
filds
sub
popa
xchg
mov
popa
loopne
inc
mov
std
mov
mov
push
enter
je
fs
ljmp
fsubrs
add
or
cmp
and
jbe
xlat
pop
stc
lcall
sub
xchg
lods
jbe
mov
out
fdivr
shrl
stos
dec
lcall
roll
hlt
push
sbb
and
sbb
jns
fildll
sbb
dec
imul
je
inc
inc
movsb
pop
dec
push
dec
int
daa
jne
dec
adc
pop
pusha
fdivrs
mov
cmp
xor
cmp
inc
iret
cmp
sbb
sub
pop
sbb
les
int
xchg
jg
addr16
inc
xor
xchg
outsb
shr
mov
int
xchg
sahf
data16
pop
in
lds
les
decl
lea
pop
mov
in
add
rorl
xor
stc
sub
popa
jmp
cmp
push
les
pop
adcl
in
imul
dec
sub
aad
mov
cmp
xchg
and
ss
out
dec
fidivrl
jne
pop
xor
sbb
mov
jg
xor
dec
pop
orl
popa
fwait
aam
pop
mov
xchg
imul
jo
push
ljmp
mov
xchg
iret
shrl
sub
cmc
mov
xchg
popa
sub
mov
and
jns
cmp
and
mov
dec
lret
cmp
loopne
adc
loopne
pop
xchg
out
dec
iret
sbb
pusha
or
push
push
incl
or
and
sahf
in
loopne
sub
ret
addr16
sahf
pop
pop
das
es
hlt
and
xchg
push
sti
fldt
mov
fldcw
pop
ret
addr16
shlb
or
or
xor
mov
test
mov
outsb
add
dec
test
pop
cmp
fildll
sbb
adc
xchg
ret
add
sarl
repz
add
int3
inc
or
ljmp
nop
sbb
pushf
outsb
and
add
in
inc
lock
int3
xor
push
sub
inc
call
mov
jmp
sbb
mov
fadds
mov
xchg
ficoms
jge
leave
push
xor
sub
sub
or
cmp
mov
mov
shrd
outsl
notb
fwait
jno
sbb
loop
sub
jb
cs
xchg
adc
lcall
push
mov
jmp
std
push
adc
xor
jp
add
ss
aas
fidivrl
repz
fldcw
lea
pop
addr16
xor
insb
mov
sbb
adc
incl
mov
pop
jno
mov
rorl
pop
jb
mov
jo
jge
jg
inc
lcall
mov
mov
xchg
cmp
iret
rcl
mov
into
sub
popf
push
jae
loopne
sub
lea
out
call
dec
cmp
add
lahf
es
rorl
mov
sahf
fistpll
dec
push
add
ret
std
mov
xor
jl
adc
xor
ja
in
xor
jno
xchg
loopne
testl
imul
sbb
push
xchg
jne
cmp
add
ficompl
jne
push
push
pop
mov
add
lret
cmp
ljmp
and
and
fdiv
ret
lea
mov
mov
jmp
je
or
lods
rol
cmp
fistl
js
jmp
aam
cmp
or
xchg
cmp
push
aam
push
loopne
push
loope
xorl
adc
xchg
testb
cmp
icebp
sub
stc
fucomip
ret
lret
mov
xor
add
ljmp
pop
lods
xchg
inc
cmp
sub
mov
dec
pop
cmpb
cld
es
xchg
xlat
clc
mov
mov
push
iret
aam
push
lods
jo
scas
dec
pop
clc
fsts
out
adc
dec
cmc
lret
lcall
stos
imul
das
pop
mov
sbb
pop
inc
or
inc
or
sbb
jg
push
push
dec
out
shll
fsubs
hlt
loope
nop
pop
movsb
fnstenv
rol
dec
or
int3
inc
mov
mov
shr
dec
sub
inc
push
cmp
and
dec
int3
mov
xchg
ret
add
scas
fildl
xchg
aam
adcb
loop
gs
jmp
mov
dec
and
dec
fisttpl
fwait
add
cs
int3
push
repnz
jb
jbe
push
lea
and
mov
pop
lret
insl
ja
sahf
pop
or
mov
lahf
popf
ret
iret
or
sbb
mov
mov
mov
pop
sub
loopne
dec
imul
int3
mov
dec
aaa
xchg
add
and
sub
lret
jg
outsb
addr16
add
cltd
push
push
xchg
ja
mov
mov
pushl
icebp
ficompl
mov
popa
sbb
mov
aaa
xchg
addr16
pop
daa
test
aam
aas
adc
pop
int
adc
fdivrl
je
imul
fldl
imul
enter
xor
and
jge
cmp
pop
mov
fiaddl
fdivs
hlt
insl
jns
or
and
ret
imul
aad
scas
test
xor
or
mov
xchg
movsb
cmp
or
push
or
xchg
js
pop
aad
in
add
enter
cmp
cmp
and
jnp
jns
and
pop
dec
lcall
push
dec
popf
dec
mov
jnp
mov
test
or
cmp
add
or
loopne
pop
cmp
bound
cvtps2pi
mov
jp
shl
mov
xchg
nop
bound
add
adc
pusha
arpl
adc
mov
xor
mov
cmpsl
jae
mov
sub
fwait
xor
add
xchg
cmp
stos
push
clc
mov
push
rorl
adc
xchg
sub
fs
or
dec
lods
inc
jb
xor
mov
jge
lahf
insl
jg
add
addr16
sub
call
push
push
clc
or
xchg
pop
rorl
xchg
mov
mov
test
push
gs
jl
cwtl
mov
stc
mov
je
data16
daa
dec
outsl
sub
add
hlt
aam
xor
mov
and
push
pop
dec
sub
xor
sbb
pop
xor
faddl
inc
shlb
sti
add
adc
rcll
js
test
jle
lret
add
shl
push
jmp
cmp
push
xchg
sub
rcll
inc
add
cltd
mov
sub
mov
sub
lock
sub
dec
cwtl
jno
daa
scas
adc
push
lds
dec
fmul
js
lods
orb
jo
out
add
ljmp
movsb
jmp
mov
outsb
cmp
push
xchg
into
cmpsb
sbb
fdivrs
leave
push
outsb
dec
add
mov
ret
xor
stos
mov
ds
cltd
add
enter
jne
jecxz
sbb
add
loop
and
push
push
inc
cmpb
in
insl
push
or
popf
cmp
pushf
fs
push
imul
xchg
pop
xor
daa
push
sub
mov
mov
and
ss
cmc
test
jo
je
lcall
cmp
ds
mov
inc
aam
addl
pop
icebp
sti
cwtl
pusha
mov
jecxz
dec
pop
es
rclb
shrl
push
leave
and
xor
mov
sub
push
leave
mov
rcll
or
loop
sbb
push
xor
idiv
stos
mov
mov
dec
mov
scas
add
ds
add
lret
lahf
subb
mov
sahf
out
inc
xlat
or
rclb
fnsave
in
add
orb
mov
or
or
xchg
mov
vmovaps
lret
xor
xor
mov
pushf
es
xor
sub
or
adc
fidivrl
aaa
fimull
mov
sbb
ljmp
fisubs
clc
dec
into
and
jo
xlat
push
jmp
pop
sub
adc
stos
movsb
movsb
lret
fs
jns
mov
dec
jp
add
mov
jecxz
clc
lcall
push
repnz
cmp
cmc
push
cmp
in
xchg
aas
push
mov
adc
pop
into
cmp
leave
jmp
adc
push
sub
in
xor
fsubrl
jbe
jmp
xchg
out
inc
xlat
fs
outsb
cmp
scas
pop
mov
fucomi
fimuls
cmpsb
stc
or
fldcw
mov
movsb
cmpsb
mov
fldln2
mov
leave
lods
stc
sbb
jbe
cltd
mov
faddl
pop
out
add
xchg
fcoms
jp
iretw
jge
adc
xchg
out
xor
cmpsl
push
test
push
popf
ror
rcl
fcmove
rcrb
cmp
mov
jge
pusha
xchg
push
mov
add
cmp
inc
je
ret
mov
add
ret
jns
nop
xchg
fnstcw
gs
ror
add
push
int
bound
movsb
add
cmp
jl
cmp
dec
add
adc
sbb
add
es
test
jno
or
push
mov
into
xor
movsl
dec
mov
mov
push
pop
pop
push
pop
mov
lcall
gs
xchg
push
les
push
jbe
icebp
cmc
cmp
popf
sbb
pop
sub
jle
leave
push
jle
sbb
notb
mov
lods
loop
cmp
push
minps
scas
leave
xchg
aad
scas
sbb
mov
in
jno
test
sub
stos
jb
xchg
lret
lret
bound
nop
cwtl
sub
xlat
push
aam
inc
cltd
fsubrs
push
std
fsubs
jp
mov
int
push
cmp
shll
popa
jg
mov
fstl
js
sahf
aaa
ljmp
xor
repnz
lcall
shll
mov
test
int
inc
mov
fmul
addr16
movsl
jbe
dec
mov
ds
and
jne
ljmp
pop
pop
jge
outsl
jmp
xchg
jbe
aam
mov
push
sub
cmp
sbb
fistl
jno
cmp
jnp
inc
mov
adc
jl
fmuls
insl
into
mov
or
mov
std
and
adc
sub
aad
ret
xor
sbbb
mov
pop
bound
pushf
movsl
loopne
dec
shrl
movsl
sahf
lds
outsb
imul
fistpll
call
mov
pop
push
jbe
jno
or
mov
ret
adc
scas
xor
add
dec
data16
ret
mov
cwtl
inc
out
push
push
scas
cmp
push
xor
les
pop
bndstx
ret
and
sbb
popa
cltd
insl
xchg
lods
addb
mov
sbb
add
leave
dec
xchg
fstp
mov
adc
fstps
scas
jp
inc
std
loop
arpl
ljmp
popf
push
xor
and
mov
ret
enter
adc
in
lcall
jno
jmp
pop
stos
mov
cld
mov
jl
or
mov
adc
lock
movb
femms
dec
pop
xor
push
adc
cmp
dec
push
in
je
pop
push
hlt
xchg
adc
add
dec
jne
in
test
jo
insb
ret
pop
lcall
ss
es
cmp
sub
sub
adc
lock
cmp
jg
paddusw
insb
mov
in
push
cmpsl
int3
ss
mov
push
add
pop
adc
sub
push
fwait
pop
mov
pop
sub
xchg
and
mov
push
loope
insb
dec
add
enter
negb
inc
hlt
mov
out
out
dec
loop
xchg
mov
inc
je
subb
clc
in
loop
push
cmpsl
sub
mov
lock
jb
gs
cmp
push
inc
daa
xor
iret
aaa
push
pcmpgtw
xorb
xorl
dec
jl
nop
les
mov
cs
lahf
pop
lock
cltd
jbe
int3
push
adc
in
inc
movsl
jb
pop
int
mov
cmp
call
insw
in
stos
repz
rolb
imul
jmp
add
lret
fists
mov
xlat
popa
jnp
mov
mov
fadd
mov
add
mov
loop
out
add
call
jns
sbb
fdivp
push
cmp
arpl
jl
call
fwait
push
pop
scas
xor
jge
dec
rclb
les
cmpsb
inc
push
push
sub
lock
imul
enter
orl
and
in
xchg
mov
mov
jp,pt
pop
je
add
cmp
inc
jle
cmpsb
arpl
mov
fwait
mov
cmp
gs
fdivs
push
cltd
push
lods
add
xor
dec
out
pusha
and
mov
pop
shrl
mov
daa
pop
cmpb
or
ds
pop
iret
test
cmpsl
cld
sbb
push
sbb
push
lock
cs
fs
out
ret
aas
ljmp
jmp
mov
inc
jno
jbe
or
xchg
outsb
loopne
xchg
aad
repnz
shll
loop
and
jge
mov
cmp
add
loopne
or
les
mov
addr16
insl
jmp
ret
adcl
ljmp
shl
push
xlat
hlt
dec
in
mov
nop
xlat
and
test
lahf
pushl
jae
xor
adc
xchg
sbb
inc
repnz
jge
rcl
fsubrl
test
adc
adc
mov
int
cmpsl
int3
dec
pop
jne
je
cmpsl
insb
and
mov
mov
xor
clc
ljmp
inc
inc
mov
dec
mov
pushf
test
push
inc
mov
outsb
cmp
stc
jge
cmc
jp
cltd
jecxz
dec
ljmp
xor
sbb
pop
pop
aad
aas
add
mov
addl
aad
mov
jmp
mov
fldl
sbb
insb
sub
jp
in
lods
jb
lret
jp
xchg
xorl
or
call
adc
lods
int
fs
inc
sbb
sub
nop
lret
pop
cmpsl
or
and
push
cmpsl
mov
ljmp
loopne
test
shr
push
repnz
js
ljmp
mov
insb
xchg
adc
shl
out
je
or
neg
and
into
test
lahf
sub
mov
dec
out
or
out
orb
sbb
jge
mov
mull
or
cmp
ja
dec
sbb
out
dec
push
lock
jae
mov
xor
mov
out
imul
inc
jb
lods
mov
adc
mov
dec
imul
or
pop
adc
iret
adc
das
andb
es
sub
jg
mov
leave
pushf
fcoml
mov
cmpsb
fbstp
cmp
stc
sbb
mov
lea
lcall
jl
icebp
fildll
ficoml
inc
push
xor
push
cmp
nop
jo
in
outsb
fiadds
fcmovnb
fs
and
and
add
ljmp
xchg
xchg
jmp
sbb
mov
adc
call
pop
lea
jno
add
and
sbb
and
popf
xchg
hlt
mov
adc
rorl
add
pop
push
mov
xchg
in
mov
xchg
xor
sub
rorb
dec
jecxz
test
pusha
loope
cmp
add
xchg
ljmp
add
pop
dec
push
jp
push
cmp
incl
cmpsb
sub
xchg
bound
cmpsl
aas
and
into
xlat
pop
lock
jp
int3
insb
cli
daa
dec
orl
mov
jne
test
jno
adc
inc
sbb
shl
mov
pop
cmpsw
imul
and
sub
popf
xor
cmp
popa
rolb
imul
aaa
int
andl
lock
jbe
fldt
mov
inc
lret
stos
ljmp
fwait
outsb
add
xchg
jg
movsl
dec
xchg
xor
mov
shrl
les
into
dec
dec
xlat
push
xor
jbe
or
cmpsb
mov
push
add
nop
adc
out
sub
push
xor
add
bound
mov
inc
lcall
mov
xchg
imul
pop
fucomp
cmp
xor
push
in
pop
dec
aam
inc
and
mov
inc
mov
cli
xchg
or
pop
scas
jmp
ss
jo
push
roll
lods
push
mov
js
or
lcall
ss
xchg
jo
and
mov
push
loop
push
in
stc
push
sahf
fsts
and
in
stos
xchg
jge
pop
aad
xchg
ret
fldcw
lock
shrl
mov
sub
pop
sar
jns
cmp
addl
test
ret
push
sub
lret
in
push
and
fiaddl
lds
adc
pop
xchg
pusha
inc
call
cmp
mov
ds
adc
jmp
ss
pop
add
insb
pop
jge
out
int
push
pop
cmp
sarb
sti
xor
pop
xchg
cwtl
iret
xchg
xchg
mov
mov
aas
sbb
roll
lcall
mov
dec
rcl
jbe
mov
push
hlt
cmp
rcll
ja
fisttps
add
ja
shrb
scas
mov
xchg
rol
jbe
dec
cmp
jl
jo
mov
loopne
std
fidivrs
mov
sub
jae
test
lahf
data16
mov
in
cmp
xchg
adc
mov
dec
push
jl
dec
filds
inc
jne
dec
or
movsl
cli
inc
push
mov
aas
xor
mov
cmp
or
test
ret
dec
mov
outsl
test
jp
or
push
lret
lret
sub
out
mov
push
mov
or
xchg
add
ds
inc
lret
dec
pop
stos
fwait
and
add
out
shlb
lcall
adc
fs
ljmp
mov
lret
cltd
sub
cwtl
outsb
inc
and
fiadds
mov
cwtl
cli
sti
arpl
out
das
mov
or
push
cmpsl
pop
jnp
and
adc
dec
and
roll
ljmp
pop
sti
push
ret
dec
push
rolb
jbe
add
xchg
jecxz
mov
adc
or
and
ret
int
xchg
cmp
jo
fimull
in
inc
aad
out
mov
xchg
dec
pushw
mov
jecxz
add
jle
and
lcall
push
dec
divl
sbb
stos
loope
stos
lods
or
or
jno
cmpsl
gs
jmp
dec
pop
scas
xor
cmp
cltd
das
popa
sbb
inc
push
ds
sub
cmpsb
movsl
xchg
fildl
inc
xchg
pop
or
cmp
incl
jl
rorl
rorl
test
sbb
add
mov
iret
fcomps
mov
cwtl
ret
dec
xchg
cmp
cmp
and
ds
idivl
in
mov
mov
fldt
shlb
das
aam
push
jmp
test
and
add
push
add
popa
test
push
inc
add
dec
into
ret
dec
push
cmp
cmp
ljmp
mov
les
sbb
fistpll
outsb
sub
add
or
imul
xchg
insl
fidivrl
out
jge
jle
aas
or
and
repnz
pop
addr16
pop
adc
enter
or
int
mov
je
js
dec
jb
push
out
shll
or
sbb
mov
or
repz
xchg
adc
stos
dec
push
pop
sti
mov
rol
mov
jae
mov
dec
mov
mov
dec
lahf
push
cmp
aam
je
gs
ja
xchg
addb
bound
cmp
xchg
jmp
mov
lahf
adc
out
add
add
test
fs
popf
leave
dec
cmp
lret
mov
jle
out
sub
imul
inc
mov
outsb
mov
dec
shll
es
lahf
push
sub
loop
jnp
ret
test
push
clc
and
in
mov
cs
mov
xlat
loop
pop
rep
js
je
scas
jbe
icebp
std
mov
pop
or
xchg
jo
or
shl
dec
sahf
xchg
mov
daa
fsubl
or
enter
repnz
adc
shl
outsl
push
fnsave
jg
stos
xorl
mov
bound
scas
xchg
add
loopne
popf
push
fs
push
rorb
jns
in
enter
pop
dec
in
mov
lret
xchg
push
es
inc
stos
and
orb
jno
and
inc
pushf
mov
jp
mov
add
and
lcall
frstor
fbld
lret
push
jnp
loop
shll
inc
pop
sahf
and
jg
push
mov
loope
mov
xor
mov
pop
inc
xchg
push
or
jmp
mov
xchg
out
mov
inc
push
in
mov
lods
stc
fadds
mov
pusha
pop
std
xor
sahf
sbb
push
cld
lods
js
cli
add
inc
setb
dec
sbb
outsl
jae
xchg
int3
scas
jo
fwait
push
clc
push
test
pop
pop
fisubs
lahf
mov
je
mov
jp
mov
dec
nop
sbb
xchg
sbb
daa
loope
stc
cmp
add
push
ss
mov
adc
mov
aaa
or
clc
cmp
add
or
xchg
aad
jo
lods
or
sbb
jae
into
test
sub
lods
subb
xchg
mov
rcl
leave
push
jae
mov
cmpsl
das
mov
outsl
inc
in
fs
call
mov
dec
lahf
lcall
lods
arpl
cwtl
loope
arpl
push
xor
nop
scas
cltd
jne
test
and
push
mov
les
fstps
mov
mov
jmp
mov
ss
xlat
ss
sub
xor
das
outsb
mov
dec
stos
jb
aas
jge
mov
bound
ljmp
aam
push
inc
jns
outsb
push
sub
inc
jae
mov
cmpsb
and
cmp
mov
adc
dec
xchg
sub
fnstcw
out
jno
lds
lahf
sub
mov
sbbb
popf
sub
enter
mov
mov
push
xchg
jae
aam
sbb
mov
cmpsl
add
shr
test
mov
outsb
mov
xchg
ss
loope
jecxz
pop
lock
jmp
mov
leave
call
xchg
cmp
les
mov
pusha
add
mov
and
into
jl
jb
sti
sbb
xor
jecxz
aas
loopne
mov
sbb
imul
fimull
daa
movsb
jb
arpl
xchg
aas
or
mov
xor
push
cmpsb
in
dec
pop
ss
mov
jae
sbbb
dec
lock
flds
push
inc
adc
xor
shll
repz
sbb
jno
mov
pop
fidivs
sbb
loop
sub
testb
js
mov
or
add
adc
das
inc
test
pusha
sbb
push
ja
jp
testb
cmp
fstps
lods
pop
insb
push
sub
ss
cmp
mov
lods
subb
pop
dec
add
jmp
xchg
dec
int
daa
int3
imul
jg
xor
sub
mov
and
sub
push
cld
lds
rolb
mov
lds
jbe
cmp
stc
cmp
xor
and
nop
mov
es
xor
enter
sbb
mov
repnz
jbe
dec
pushf
lret
sub
sub
mov
dec
and
inc
aam
cmp
imul
lea
mov
push
pop
mov
dec
fsubs
mov
jge
mov
mov
jmp
pop
mov
addl
sbb
lret
or
fnstenv
jle
push
sub
fmul
lcall
aam
sahf
or
jno
push
mov
push
into
cmp
pop
lcall
dec
imul
por
sub
pop
sub
xchg
and
and
adc
lret
fsubs
and
add
push
jnp
or
pop
jmp
cli
scas
and
mov
xor
repz
pop
das
in
ljmp
lret
enter
push
stos
popf
or
cmp
mov
mov
outsl
xchg
push
mov
cs
xchg
jb
mov
push
sbb
popa
ja,pt
cmp
rcrb
out
push
inc
popf
rolb
and
xor
push
jns
es
adc
cmpsb
jo
sub
test
in
and
xor
lret
sub
out
xor
pop
out
outsl
mov
adc
xchg
xor
scas
out
jmp
xchg
leave
cmp
jne
jne
clc
imul
insb
inc
sbb
rcl
call
push
sub
sahf
loopne
mov
mov
mov
sar
mov
ja
movsb
test
ljmp
mov
je
sub
and
and
rclb
sub
push
adc
test
lock
sub
movsb
or
pop
es
cltd
addr16
mov
or
mov
ret
sbb
popa
in
adc
mov
in
das
addr16
insl
lods
xor
inc
inc
or
sbb
out
loopne
fimull
mov
add
ljmp
daa
jle
pop
cld
insb
jns
stc
ja
and
adc
push
sbb
jp
stos
inc
xchg
xchg
cmp
jg
or
lcall
ljmp
xchg
popl
dec
sub
push
pop
call
push
cmp
pop
cmpsb
fisubrl
xchg
sbb
daa
and
test
jnp
test
mov
test
subb
pop
filds
jecxz
or
adc
pop
sarb
aad
jmp
add
fstps
cmpsb
popa
iret
repz
add
rcl
mov
fnsave
mov
aad
and
or
xchg
xlat
aas
pop
in
repnz
out
test
xchg
push
idivl
incb
mov
inc
icebp
sbb
xor
shlb
inc
pop
ret
loop
xchg
xchg
sbb
sbb
and
lods
dec
adc
call
add
insb
dec
xor
test
fsubrs
or
push
jno
fwait
mov
cmpsb
std
or
faddp
mov
lcall
xor
inc
scas
out
mov
mov
shl
or
bswap
push
push
clc
addps
jle
sbb
inc
in
adc
xor
pop
sahf
outsb
aas
out
adc
pushf
clc
jmp
out
and
movsb
lcall
mov
cltd
sahf
imul
and
stos
data16
jecxz
repnz
pop
aad
add
jge
ret
in
pop
and
call
mov
add
mov
pop
mov
orl
int3
xchg
pop
mov
cmpsb
and
loopne
mov
hlt
shlb
scas
fmulp
shll
xchg
inc
mulb
stc
pop
fisttps
mov
repz
roll
lods
pushf
rorb
inc
xor
push
shrb
lret
out
mov
dec
xchg
push
data16
push
mov
loope
popf
hlt
in
insl
gs
or
stos
pop
and
aas
jle
push
aam
or
insb
and
lret
stos
ljmp
in
pop
mov
stos
lret
mov
cmc
rorb
movsb
stos
add
loop
in
leave
gs
jno
test
roll
hlt
dec
dec
cmpsb
aad
in
dec
adc
daa
xchg
cmpsb
icebp
or
fs
arpl
enter
or
lret
ret
lret
lret
in
stos
int3
push
pop
mov
popa
fcomps
mov
pop
dec
repz
inc
jb
xor
jo
cld
xlat
fstps
jb
stos
inc
lahf
test
cltd
ljmp
cmpsl
mov
cwtl
popa
outsb
lret
sbb
and
sub
push
and
fs
movsl
call
sti
add
xchg
add
sbb
sbb
push
data16
adc
ljmp
push
hlt
add
cmp
lods
mov
mov
outsb
pop
xchg
mov
pop
fwait
repz
loop
inc
test
sbb
test
sbb
stos
ljmp
bound
and
mov
jg
ret
adc
out
ss
sbb
add
mov
inc
outsb
push
xlat
mov
icebp
jmp
ja
and
hlt
cmp
pushf
pop
mov
dec
push
movsl
add
mov
pusha
cmp
adc
icebp
mov
je
mov
mov
pop
insl
xchg
insl
dec
or
mov
sahf
xor
sbb
addb
mov
bound
sbb
mov
insb
jbe
inc
test
daa
xor
mov
or
hlt
xchg
sbb
popf
int
mov
es
jge
loop
int3
out
jno
in
div
cmp
mov
loop
mov
jl
xchg
add
out
test
pop
adc
rol
jecxz
and
in
inc
pushf
push
jno
jae
mov
movsl
xchg
mov
mov
stos
adc
dec
aad
aas
outsb
add
inc
int
sub
insb
adc
mov
mov
ds
push
pop
dec
adc
inc
dec
mov
call
xchg
sub
jle
mov
inc
pop
sub
xlat
add
mov
adc
pushl
int
xchg
js
stos
add
pop
pop
cltd
in
fadds
idiv
mov
cs
dec
ret
and
sub
cli
out
xchg
xchg
lahf
mov
andl
mov
jp
arpl
add
xchg
cmp
cs
fsubrl
int3
jmp
sti
stos
idivb
mov
shlb
or
inc
orl
repnz
jae
mov
std
xchg
nop
in
jbe
aad
xor
jbe
mov
cld
push
push
test
das
aam
add
popf
hlt
add
push
inc
xor
add
or
lahf
je
mov
xor
lret
repz
ljmp
ret
push
inc
imul
sbb
mov
or
lret
mov
dec
test
pop
fadd
and
pop
loop
iret
daa
ret
ret
andb
bnd
jns
lea
stos
sub
pushf
aaa
stos
pmulhw
leave
int3
scas
and
ss
xchg
rorb
cmp
enter
jecxz
call
cwtl
enter
inc
sub
push
fs
adc
sarl
push
inc
mov
jle
fwait
movsb
fs
test
push
mov
inc
outsb
es
adc
mov
rcrl
aaa
es
out
sbb
mov
mov
push
lea
xchg
pop
mov
push
insb
mov
ret
addr16
sub
cwtl
push
int3
push
pop
mov
lea
mov
sub
hlt
insb
sbb
iret
repnz
int
adc
pop
adc
jno
fdivp
pop
mov
xor
mov
push
cmpsl
in
lods
movsb
into
mov
xor
ljmp
adcl
andl
inc
xchg
repz
inc
add
inc
gs
pop
sub
in
mov
dec
sahf
cmp
cmp
pop
les
es
push
loopne
jo
lea
and
repnz
fnsave
mov
fsub
mov
sbb
lds
iret
fucomip
outsb
jmp
adc
adc
shr
xchg
stos
rcrl
push
sub
or
sub
sbb
push
pusha
out
test
cli
lcall
testl
movsl
inc
andb
cmc
arpl
pop
add
add
xchg
in
aas
or
add
cltd
mov
ljmp
aas
adc
ret
cld
test
inc
lea
lea
adc
dec
jne
stos
leave
or
lret
xor
cmp
mov
pop
addl
outsl
ljmp
shrd
mov
push
ljmp
jbe
and
mov
jl
sahf
adc
sbb
inc
cwtl
mov
fwait
nop
xchg
cmc
in
mov
mov
and
pop
in
ret
mov
pop
add
jle
shll
dec
insb
fldenv
test
hlt
lret
pop
call
mov
sbb
test
or
xchg
mov
inc
xor
jecxz
mov
adc
mov
rolb
sub
incl
xchg
cwtl
adc
fcmovu
jbe
faddl
mov
jne
out
push
mov
lods
mov
inc
sbb
jg
gs
xor
loop
nop
ret
pop
push
push
scas
aaa
jl
dec
adc
sahf
call
lahf
lret
xor
push
xchg
pop
loopne
mov
mov
pop
cmp
insb
push
pop
js
sahf
pop
movsb
mov
cmpsb
xlat
data16
mov
scas
inc
jnp
push
sbb
xor
bound
jns
push
sub
clc
stos
or
jo
ret
push
int
mov
je
pop
xor
pop
int3
mov
or
hlt
adc
std
mov
inc
fmul
inc
pop
cmp
push
fs
movsl
xor
adc
or
arpl
add
scas
fimull
int3
pop
pop
mov
outsb
jmp
daa
mov
lret
or
sbb
lock
hlt
out
jmp
aas
dec
push
mov
mov
imul
push
jmp
cmc
jne
repnz
rorb
lods
jp
cmp
mov
inc
adc
je
inc
loope
lods
pop
pop
xchg
pop
insl
mov
dec
jb
hlt
fbld
or
xchg
out
xchg
inc
pop
cmp
adc
popa
fnstenv
pop
pushf
cmp
fstl
lret
rcll
lcall
imul
clc
sub
dec
jge
dec
cltd
cmc
roll
or
mov
sub
mov
xchg
in
dec
ja
mov
aas
fldcw
mov
popa
dec
cli
dec
mov
lods
mov
vpcmpeqb
movsb
pushf
and
and
in
in
xchg
rorl
movsb
jnp
les
or
jmp
aaa
lock
inc
add
jnp
and
sub
jl
cwtl
mov
rcrb
psubb
sub
push
jle
mov
jb
leave
loope
push
sub
push
mov
and
push
cmp
cltd
xor
sahf
inc
jns
lock
cmc
jmp
sbb
push
loope
xchg
sbb
das
cmpsl
add
cltd
insb
jbe
pop
inc
int3
push
push
fisttpl
jmp
das
test
cltd
rorb
xor
std
inc
pusha
lds
jb
adc
out
hlt
sub
fnstenv
mov
fcomip
cmc
xchg
jae
pushl
inc
add
push
cmp
mov
dec
ljmp
ret
sti
aad
incl
leave
movsb
mov
mov
cli
adc
fnstsw
in
scas
test
orb
loopne
call
mov
pop
mov
jge
cmp
add
shlb
iret
mov
jmp
add
dec
mov
sbb
xor
cmpsb
lea
int3
lods
aad
add
fsub
icebp
xacquire
jno
cmp
test
iret
lods
outsb
xlat
lahf
cmp
cmp
out
fwait
pop
dec
rep
push
jecxz
shlb
dec
enter
add
jecxz
shrb
or
les
test
and
xchg
mov
filds
inc
push
fsubrs
inc
mov
and
xor
ss
push
shlb
lds
fwait
mov
lea
push
repnz
sub
sub
stos
popf
sahf
arpl
and
mov
push
lahf
lret
lods
js
loope
outsl
mov
fbld
stc
mov
outsb
mov
cmc
imul
inc
dec
pusha
cltd
clc
hlt
fcomps
mov
lcall
push
idivl
cmc
stos
mov
jecxz
sub
repz
imul
loope
hlt
into
subl
cli
out
sbb
sbb
push
mov
aad
add
jae
in
and
and
mov
pop
inc
dec
cmp
repz
aad
inc
xchg
clc
cmpb
out
out
push
sbb
sub
pop
movl
int3
ficomps
movsl
xor
stos
mov
dec
jle
outsl
out
add
stos
adc
clc
mov
jno
mov
push
pushf
and
shlb
cmc
das
cmp
int3
ss
shll
jle
das
enter
lcall
movsbl
out
jge
and
mov
mov
jmp
stos
and
or
adc
loope
loopne
cmp
nop
cwtl
cmp
mov
and
cmp
hlt
cmp
xchg
repnz
sub
xor
xorl
jge
clts
dec
or
into
adc
lds
and
fmull
push
adc
pop
out
les
fadd
sub
dec
push
bound
nop
push
insl
xor
xorl
mov
inc
dec
test
inc
or
lock
icebp
dec
push
fisubs
iret
mov
push
leave
sbb
data16
mov
jae
repz
dec
sbb
xchg
sti
cs
int
mov
inc
ja
and
rol
inc
out
jnp
mov
inc
test
jbe
cli
jg
outsb
inc
dec
or
cmpsl
adc
and
pushf
push
xor
adc
loop
pop
mov
repnz
cmp
int3
in
popa
lcall
divl
lea
mov
inc
pop
xchg
or
insb
and
sbb
xor
sahf
push
icebp
pop
in
and
jle
inc
sbb
mov
shl
cmp
push
push
and
or
or
fnstenv
popf
jno
lock
insl
add
loope
adc
out
lock
shl
orl
in
lods
lds
std
jecxz
xchg
dec
sti
jno
loop
inc
inc
sahf
stos
mov
decl
mov
or
jnp
adcl
and
mov
mov
add
ss
dec
aaa
stos
or
jecxz
sbb
imul
sti
push
nopl
out
jo
lret
popf
or
pop
and
out
lcall
daa
cmp
pop
jg
inc
cmp
mov
fsts
pop
xor
movsl
cmpsl
inc
jmp
jg
fnstenv
arpl
jnp
stos
pop
mov
cmp
idivl
mov
and
ja
or
iret
lock
adc
leave
lods
in
cmp
cmpb
fildll
pop
cmc
stos
scas
cmp
jmp
mov
and
test
out
dec
decl
gs
mov
mov
aad
dec
sbb
and
sbb
cmp
cwtl
adc
test
rclb
shll
mov
faddl
push
push
adc
jge
pop
push
mov
test
add
pop
test
inc
popa
add
add
or
imul
shrb
arpl
aad
mov
repz
sbbl
pop
int
out
and
mov
pop
sub
es
hlt
inc
cltd
popf
sbb
push
jg
bound
mov
sbb
and
xchg
je
xchg
ror
xor
scas
lods
jb
mov
dec
sbb
inc
mov
push
scas
sub
fcomp
and
pop
loop
dec
orb
scas
shll
insb
mov
jae
mov
and
jne
adc
pop
enter
lret
enter
pop
fstps
xor
mov
mov
cmc
xor
cmpsl
rol
pusha
mov
xlat
ljmp
fnstenv
mov
sbbb
xor
cmp
aam
xchg
movd
scas
push
mov
add
jbe
test
mov
push
inc
lds
pop
shl
jl
repz
mov
mov
movsb
aaa
pushf
data16
add
and
push
pushf
insl
imul
push
add
test
imul
add
and
push
bound
add
arpl
rorl
and
mov
nop
rcrb
inc
jmp
inc
in
jge
sbb
inc
leave
cmp
mov
fmulp
popf
cmp
or
inc
fidivrs
jecxz
out
mov
inc
insb
add
leave
rcr
sub
jg
mov
enter
sbb
dec
cs
mov
xchg
test
add
cld
adc
xchg
fnsave
xchg
repnz
lret
add
mov
cmp
push
jns
mov
xlat
imul
std
in
jecxz
leave
lret
xor
xchg
or
push
inc
roll
pop
xor
ret
out
stos
push
aad
cwtl
stos
loopne
gs
insl
and
iret
lcall
sub
cli
mov
adc
add
pusha
sub
stos
sub
mov
dec
sbb
inc
loop
adc
out
ficoms
leave
sub
popf
rcrl
outsl
ret
pop
adc
mov
cs
adc
ja
mov
dec
std
add
pop
test
iret
rep
mov
ss
xor
adc
aas
dec
mov
fldl
cmpsb
dec
push
push
push
adc
pop
xchg
sbb
jnp
repnz
iret
xchg
adc
xchg
loop
xor
add
cld
scas
mov
into
insb
andl
push
mov
push
cmpsl
or
mov
add
test
xchg
pop
sbb
in
dec
mov
lock
pop
popa
add
ds
cltd
push
out
push
mov
fwait
mov
mov
xchg
ljmp
dec
push
pop
jmp
jb
lods
push
push
or
insl
addr16
push
mov
push
add
and
pop
rdtsc
sti
add
ja
push
sbb
xchg
mov
into
mov
nop
mov
jae
repnz
mov
sti
pause
out
clc
adcl
int3
pushf
je
lret
xchg
push
dec
dec
sub
rcrb
or
in
loope
mov
dec
add
aad
jnp
sub
sbb
mov
pop
push
subb
cld
add
jl
lods
add
mov
mov
jmp
mov
cmp
movsl
sar
push
jecxz
jo
xchg
adc
test
and
pop
adc
cmpsl
pop
adc
movsb
add
gs
mov
test
mov
out
jbe
ss
in
popf
push
pop
mov
leave
out
fistps
pop
fwait
sub
and
data16
in
into
jp
xchg
xor
call
and
popa
bound
rorb
jb
stc
lock
mov
ds
push
movsb
xchg
cmc
xchg
ret
jmp
pop
cmp
and
daa
insb
nop
shrb
cmpb
sub
pop
out
mov
push
test
mov
stos
out
cmp
pop
inc
std
xchg
idivb
jbe
xchg
dec
gs
mov
enter
ds
sbb
test
out
out
stos
sub
stos
sbb
repz
add
int3
inc
and
add
out
push
in
in
add
mov
adc
cmp
push
dec
int3
inc
sahf
rclb
push
dec
fcoml
pop
adc
mov
ret
cwtl
pop
pop
lret
fcomp
lea
mov
mov
adc
in
std
xchg
ljmp
scas
sbb
dec
in
enter
lds
jns
fidivrs
loopne
jo
mov
cmpsl
ds
and
cmp
iret
loopne
add
add
sub
imul
testb
lock
lahf
and
shl
mov
das
inc
popf
cmp
je
orb
jmp
inc
sub
and
and
arpl
sbb
mov
push
adc
movsl
mov
cwtl
mov
bound
je
test
inc
push
lds
mov
adc
cmpsb
lock
lods
add
shlb
fdivl
lcall
push
sahf
in
add
mov
loop
shl
push
jae
stos
xor
addr16
sbb
xchg
adc
imul
out
xlat
jnp
push
adc
jb
xor
lret
aam
hlt
push
push
xor
insl
rcrb
orl
stos
ljmp
das
mov
push
sbb
les
push
inc
xchg
cmp
or
and
mov
dec
sbb
sub
xchg
jno
repnz
sub
addr16
daa
xor
je
push
sahf
cld
jl
movsl
in
cmp
sbb
mov
gs
aas
xchg
mov
lahf
mov
push
outsb
mov
stos
aad
pop
xlat
adc
lock
xchg
dec
adc
fnstcw
dec
mov
push
out
imul
ljmp
mov
in
mov
mov
xchg
hlt
xchg
aas
ret
and
cmp
sbb
or
lcall
lods
jne
jmp
repnz
lds
dec
sub
movsw
pop
jmp
push
mov
loopne
repz
dec
pop
dec
push
inc
inc
out
pop
adc
out
aad
addr16
mov
in
add
pop
mov
ret
cltd
movsl
and
sub
add
xor
std
mov
test
ja
aad
push
enter
call
xchg
dec
sub
inc
call
jg
sbb
inc
dec
mov
insl
mov
dec
data16
xor
mov
pop
bound
dec
pushf
mov
es
xlat
xor
aam
xor
test
mov
outsl
sbb
jmp
push
adc
mov
xchg
call
or
mov
and
les
jmp
mov
inc
fists
testl
ds
fnsave
mov
out
xorl
xor
pop
insb
es
mov
out
enter
or
int
mov
nop
mov
out
dec
je
mov
pop
lods
push
bound
jne
jl
leave
test
in
cmpsb
sub
add
repnz
inc
icebp
xchg
andl
cmpsb
mov
in
imul
sub
adc
add
enter
mov
pop
push
testl
cs
sbb
mov
sub
push
dec
mov
sbb
bound
test
pop
gs
stos
cwtl
popf
adc
add
int3
int3
fidivrl
das
and
scas
sub
mov
ja
inc
nop
lcallw
loope
push
nop
shl
cmp
cli
inc
mov
aad
mov
stos
adc
sub
mov
mov
lea
ljmp
adc
ja
push
pop
and
ret
rcr
cmpsb
dec
xchg
mov
int
jl
mov
movsb
mov
sub
pop
out
inc
xchg
ja
xchg
test
sub
ret
pop
inc
sbb
clc
movsb
aad
movsb
popf
rcrl
mov
movsl
popf
cld
dec
pop
mov
jl
movsl
mov
cmc
cmp
in
addr16
pop
jno
dec
push
add
js
into
pop
lahf
and
aaa
mov
stos
cmp
adc
andl
xchg
lahf
dec
jnp
push
repnz
ja
icebp
xchg
inc
mov
lods
dec
in
shlb
jecxz
nop
xchg
sti
lds
jo
lds
dec
shrl
je
nop
inc
je
pop
push
dec
pxor
xor
shll
popf
add
mov
addl
jp
cmpsl
push
in
jbe
lahf
incl
fldcw
fld
mov
and
jle
adc
sti
jae
in
pop
push
movb
dec
push
jg
negl
or
dec
mov
std
add
mov
or
mov
cmpsl
sub
xorl
fmuls
mov
push
xchg
and
dec
lcall
cmp
pop
lret
call
movsb
add
adc
nop
imul
and
mov
dec
cmp
daa
js
icebp
imul
adc
or
data16
aas
or
push
jl,pt
add
decl
xchg
cld
push
mov
fidivs
sub
dec
hlt
mov
sbb
jg
pop
dec
adc
mov
add
inc
mov
idivb
pop
loopne
mov
ja
push
rorb
fsubl
jmp
dec
sub
pop
outsb
mov
adc
push
mov
mov
ror
popa
push
jnp
icebp
out
sub
jp
mov
inc
add
jge
cmp
fdivl
pop
cmp
push
je
add
mov
test
or
sub
push
xchg
js
push
mov
xchg
jecxz
cmpl
icebp
and
insl
scas
loopne
dec
ror
ja
add
pushf
pop
pop
xchg
jne
popa
pop
push
pop
adc
fdivr
mov
cltd
fidivs
xchg
out
stos
mov
jle
xchg
xchg
sbb
pop
in
repnz
int3
mov
movsl
inc
gs
jg
jno
enter
enter
les
movsl
and
sbb
mov
jae
into
xlat
into
leave
push
and
pop
fscale
ljmp
jno
int3
or
mov
dec
into
xchg
mov
add
pop
inc
je
sahf
lret
add
inc
bound
sub
and
shlb
jno
stos
scas
loope
in
pop
sub
pop
add
pop
movsb
cmp
aas
add
stos
pop
in
jne
adcl
add
push
adc
mov
nop
movsb
ret
xor
lret
pop
icebp
subb
icebp
adc
adc
mov
shlb
ret
xor
loop
lock
addb
jp
outsb
cli
xchg
and
jmp
mov
or
pop
sti
dec
jae
xchg
jnp
cwtl
rorb
or
xor
inc
bound
inc
jp
mov
mov
outsl
aam
jp
add
jo
jbe
xchg
add
cmc
mov
movsl
mov
enter
pop
das
ret
les
stos
and
repz
lock
add
inc
pop
out
or
in
cmp
cmp
add
or
bound
mov
rolb
xchg
subl
cmpsl
ss
mov
repnz
cmp
or
adc
fcomp
loope
mov
add
cmp
iret
sbb
lcall
pop
add
and
aas
in
fsts
add
js
std
shlb
nop
sarb
jno
jp
iret
adc
inc
jb
ljmp
push
ds
insb
xchg
jns
and
test
or
gs
iret
fcomi
inc
sbb
push
add
movsb
cld
sbb
leave
mov
adc
mov
xlat
dec
ljmp
sahf
push
and
sub
stos
fnstcw
popa
and
int
cmp
sarl
push
inc
mov
push
js
pop
rclb
cmp
loope
jge
sub
dec
jns
pop
repnz
push
mov
pushl
mov
loopne
decl
xor
je
aas
cmp
push
or
iret
lds
shrl
xor
push
dec
imul
sub
imul
sbb
mov
movsb
popf
lds
xor
adc
mov
and
push
orl
fisttps
scas
mov
testb
dec
ret
icebp
rcl
iret
cmp
and
subb
inc
or
call
rclb
add
arpl
int
pop
adc
mov
outsl
sub
xchg
sub
fsubl
lods
and
mov
adc
addr16
mov
test
outsb
dec
or
and
push
lcall
xor
add
ficoms
jle
dec
mov
sub
mov
sbb
aad
mov
xchg
sub
cli
insb
jo
bound
jns
mov
pusha
or
cmp
jnp
dec
nop
cmp
fisubl
aas
dec
and
jno
pop
jnp
pushf
jmp
lock
dec
mov
dec
mov
push
clc
aad
aad
pushf
enter
add
out
mov
jbe
xchg
push
mov
mov
idivb
retw
xchg
cmp
sti
jns
cmp
popa
test
lds
push
cmp
mov
mov
adc
xchg
sti
divl
sub
cmp
pop
lahf
sub
or
dec
in
ret
sub
xchg
pusha
jmp
xchg
cmp
sub
dec
pusha
sub
scas
sub
xchg
popl
mov
pop
outsl
popf
mov
out
mov
test
mov
jo
jge
push
pop
test
xor
cmpsb
mov
xor
mov
aaa
inc
cmp
push
sar
jns
xor
pop
aad
cmp
shrl
fwait
push
orl
push
push
inc
lock
pop
rol
mov
jg
dec
or
xchg
ljmp
pop
push
push
xor
loopne
dec
notl
fld
or
mul
rclb
out
add
rol
rcr
mov
jno
shll
out
push
xchg
js
in
aam
inc
shr
imul
xor
mov
and
out
mov
call
clc
jns
xor
push
push
adc
fnsave
test
jae
mov
inc
and
adc
pop
arpl
stc
or
pop
cld
in
mov
repnz
int3
xchg
pusha
cld
movsb
pop
into
fists
and
or
and
xchg
mov
int3
dec
inc
outsl
inc
rol
jb
dec
sbb
adc
jecxz
adc
loope
mov
or
scas
or
mov
xor
inc
int
outsb
sbb
fimuls
jp
loope
xchg
sub
mov
lahf
jbe
outsl
gs
mov
mov
cwtl
daa
in
lock
scas
lods
add
lahf
jno
jbe
xchg
loope
sub
daa
xchg
out
test
adc
or
gs
arpl
mov
xor
xchg
mov
xor
scas
xchg
sub
mov
push
mov
fdivrl
imul
ret
repz
pusha
pop
imul
je
cmp
inc
xchg
push
sbb
cmpb
mov
and
cmpsb
movsl
push
adc
or
movsl
push
std
dec
mov
inc
cltd
insl
mov
imul
inc
das
or
loop
test
orb
sub
push
lock
add
mov
loopne
sub
mov
adc
cs
nop
xchg
cli
sti
cld
and
fs
jae
and
adc
jb
insl
fwait
mov
push
jb
xchg
jg
out
push
or
xchg
pop
lret
xor
rcl
cmp
adc
cld
xor
jne
add
mov
and
pushf
jne
leave
fwait
popf
cwtl
fidivrs
test
rclb
lret
push
cltd
xchg
stos
mov
es
mov
pop
add
mov
aas
dec
mov
jo
fdivrl
hlt
dec
out
mov
push
mov
fst
push
inc
jmp
repz
inc
mov
cmp
add
in
push
xor
add
imul
inc
jae
cwtl
rcrb
sbb
stos
mov
cmp
pop
rol
mov
outsl
sbb
insl
pop
mov
hlt
je
pushl
jbe
scas
or
sbb
movsb
pop
inc
mov
cmc
repz
xor
or
enter
test
push
outsb
dec
data16
lahf
mov
jmp
adc
jge
cmpsb
and
jl
push
mov
aad
fwait
dec
movb
add
push
push
test
inc
imul
jge
in
and
add
pushf
and
loop
jb
data16
push
sbb
test
jge
add
data16
mov
enter
cmp
xchg
shlb
int
clc
cmp
adc
or
sbb
daa
and
and
mov
cmp
loop
std
out
lds
stos
repz
xlat
scas
adc
jnp
mov
and
out
sub
in
scas
sub
or
pop
fdivr
mov
popa
cs
mov
push
add
xchg
daa
test
mov
movsl
sub
ss
pop
jae
movsb
jbe
sub
add
loope
sbb
fisubs
lods
divl
test
inc
std
jg
pushf
lcall
pushf
xor
sahf
sbb
movl
adc
mov
fsubrs
cmp
fldcw
loop,pt
push
pop
sub
and
jle
push
daa
shlb
sbb
xchg
sbbl
sahf
sbb
scas
test
aad
ret
fcoms
lret
add
dec
jmp
aam
ljmp
scas
inc
inc
cmp
pop
arpl
mov
cld
addl
clc
fstps
insl
fisttps
shr
ljmp
xor
ja
sbb
or
repnz
in
jnp
mov
lcall
call
sub
nop
jge
popa
inc
jo
push
cmp
push
fldz
je
mov
lahf
mov
pop
mov
in
cltd
mov
scas
lea
xchg
mov
in
dec
mov
and
rcrb
push
sub
xchg
mov
fnstenv
cmp
lds
xchg
mov
adc
mov
test
hlt
mov
mov
call
push
data16
inc
ret
aas
fisttpl
les
sahf
sbb
mov
push
add
call
sub
shll
push
in
lock
pop
fisubrl
pop
sarb
sbb
icebp
roll
leave
pop
stc
cmp
fisttps
into
adc
sub
movsb
insb
cmpsb
add
shlb
std
lock
jno
adc
aas
mov
fwait
sarl
outsb
leave
pop
test
adc
mov
movsl
push
stc
mov
fcmovnb
mov
add
pop
in
popf
adc
pushf
ficompl
mov
mov
cmpsl
inc
xchg
dec
stc
or
mov
test
xchg
scas
stos
loopne
mov
adc
incb
pop
jo
fcomi
aaa
adc
insb
fildll
push
fidivl
and
pop
repnz
fsts
jns
xor
loopne
and
or
out
add
jmp
test
push
insl
icebp
ret
scas
add
mov
fistpl
lds
lret
pop
jno
push
xchg
outsb
pop
add
lret
dec
lea
pop
subb
in
mov
imul
xchg
dec
push
sbb
sbbb
dec
and
mov
test
fcompl
jne
mov
mov
sbb
shll
adc
xchg
mov
rorb
xor
mov
xor
test
inc
in
and
iret
popl
sub
insl
popf
sbb
out
das
mov
dec
insb
pop
rcrb
sub
aas
sbbl
sbb
outsl
cltd
push
lcall
and
xchg
out
fadds
push
outsb
leave
daa
jp
pop
inc
test
xchg
fisubs
sub
loopne
xchg
aas
in
sbb
sbb
cs
dec
pop
mov
mov
out
pop
stc
repz
test
add
adc
mov
and
xor
lds
dec
fs
push
or
push
sbb
dec
loopne
and
push
into
lahf
jb
push
outsl
mov
mov
dec
movsb
jmp
sbb
clc
jecxz
push
cmc
jmp
fisttpll
jbe
mov
aad
fdivl
cmp
stos
mov
test
filds
pop
inc
mov
fsub
fdivl
out
lods
mov
popa
adc
leave
call
push
mov
popa
jno
outsl
inc
divl
sub
mov
mov
mov
jo
xchg
ss
aad
jo
inc
mov
inc
aas
jbe
pop
push
loop
loop
adc
inc
lock
insl
or
aas
data16
movsl
sbb
in
and
pop
sahf
or
or
mov
pop
inc
and
cmc
jmp
sti
insb
stc
out
es
into
push
adc
cltd
push
xchg
repnz
mov
iret
inc
shl
push
sub
mov
mov
cmp
xor
inc
in
push
rcl
popa
adc
popa
std
xchg
lahf
xchg
xchg
in
test
mov
aad
adc
or
movsb
and
cmpsb
mov
icebp
pop
xchg
xchg
mov
push
aaa
xchg
cltd
add
mov
cmc
lret
cmpb
push
int
jno
cmpsb
mov
out
xchg
cmc
loop
jle
sub
lcall
jecxz
inc
and
test
test
in
xchg
inc
cltd
push
stos
cmp
jp
mov
fimuls
inc
adc
jns
pop
sbb
add
sbb
bound
lcall
ficoms
leave
ss
pushf
je
mov
stc
dec
or
push
loopne
mov
cmp
stos
ret
addr16
mov
pop
pop
jecxz
ds
inc
push
cmpb
fisubrl
adc
rolb
pop
and
xchg
in
or
jg
xlat
sbb
out
decl
int
cld
pusha
dec
adc
adc
loopne
or
cmc
arpl
in
fstpt
pop
leave
nop
jae
xchg
bound
shll
push
cmp
out
add
lret
sbb
icebp
dec
mov
jb
mov
shrb
pop
mov
or
xchg
cmp
and
xchg
loope
inc
repnz
xchg
daa
push
jnp
hlt
out
movsb
mov
add
popa
push
lods
mov
sbb
inc
push
test
adc
adc
and
adc
pusha
push
mov
push
or
iret
test
mov
ljmp
int3
mov
sti
js
xor
fisubrl
push
xor
subb
mov
pop
aam
jmp
cmp
jno
sbb
pop
fcomp
mov
pop
mov
mov
or
jno
and
push
push
pop
push
je
jnp
popf
mov
cmp
jne
inc
insb
sbb
mov
add
mov
pusha
insl
dec
add
cmpb
jne
xchg
sub
jg
push
jne
mov
inc
orb
icebp
push
jp
mov
push
repz
xchg
out
ret
ds
outsb
movl
jbe
add
xchg
rolb
jae
pop
add
std
jle
xor
dec
bound
or
and
scas
and
loop
add
xor
sub
sub
call
outsl
mov
jb
mov
int
fstpl
movsb
or
cld
js
pop
cmp
scas
test
push
sbb
mov
jmp
dec
mov
xchg
mov
int
popf
dec
mov
iret
js
jl
sbb
push
xchg
pop
fimull
pusha
ret
mov
and
movsb
pop
mov
mov
insl
clc
xchg
pop
into
sahf
loop
pop
fdivl
sub
hlt
add
push
insb
sahf
dec
push
in
into
movsb
in
jge
js
jns
xor
sbb
cwtl
pop
aas
out
ret
mov
les
std
add
testb
leave
ja
lods
fs
ret
fbld
nop
sbb
and
lods
pushf
push
popf
xchg
push
cmp
mov
dec
lcall
in
cs
push
into
cmpsl
ficoms
mov
push
inc
repz
cltd
push
push
mov
je
fwait
or
mov
xor
mov
aam
stos
adcl
mov
ljmp
nop
adc
sub
mov
adc
dec
push
iret
jne
adc
pop
pop
movsb
int3
insb
lods
out
jmp
sarl
cwtl
pop
in
scas
xor
sub
popa
popf
ffreep
pop
mov
imul
or
pop
mov
inc
push
push
cmc
or
loopne
mov
cmc
pop
fidivrl
int3
push
ja
push
jle
mov
push
scas
cli
mov
ljmp
ret
imul
xchg
jnp
xor
add
test
and
xchg
inc
and
mov
test
scas
ds
inc
ret
mov
aam
fs
in
mov
stos
dec
sub
inc
mov
and
rcll
shll
fimuls
mov
and
cmp
cld
imul
and
fcompl
jnp
mov
add
and
or
mov
shll
daa
xor
jno
add
dec
inc
push
fdivr
xor
std
xchg
stos
pusha
adc
fidivl
adc
pop
aad
xor
fwait
sbb
lds
dec
mov
aam
xchg
aad
pushf
popa
enter
repz
inc
out
outsb
lods
jle
fbstp
cmc
sub
fs
adc
cmc
insb
mov
cmp
jecxz
stos
xchg
ljmp
jle
sbb
fnstsw
xchg
lret
cmp
arpl
pop
lds
dec
cmp
je
repnz
fmul
mov
jne
mov
push
out
scas
stc
cmp
popl
and
ss
pop
jl
jmp
mov
std
das
mov
cwtl
cmc
mov
lods
mov
cltd
sub
divps
js
mov
lods
xchg
nop
icebp
scas
jg
dec
pop
inc
push
shl
inc
in
push
adc
jbe
int
dec
dec
jmp
pop
mov
loop
dec
stc
popf
ss
int3
movl
cmp
cmpsb
jecxz
mov
cltd
aaa
pop
xor
test
fldl
inc
sbb
pusha
loope
es
sbb
shll
or
dec
out
and
mov
inc
add
push
push
imul
mov
das
jno
iret
mov
cltd
jg
and
std
out
push
xchg
mov
push
or
out
mov
decb
xor
mov
push
movsl
stos
mov
stos
aas
xor
and
out
je
out
iret
fmuls
lret
cmc
pop
pushl
dec
pop
test
lods
xor
xor
lds
addr16
lock
out
std
jecxz
pop
inc
inc
lret
and
push
cltd
enter
sub
mov
lock
cmp
xor
push
mov
lcall
xor
insb
pop
inc
fwait
pop
insb
pusha
into
cmp
inc
push
ljmp
adc
orb
bound
sbb
mov
popf
inc
and
xor
sahf
cmpsb
sbb
and
mov
mov
cli
add
cmpb
sarl
ficomps
inc
fcomps
and
xorb
fsts
cltd
cmc
pushf
int
dec
sbb
or
cltd
imul
cmpsb
in
icebp
je
sub
sbb
movsb
mov
sub
and
out
pop
xor
fucomp
pop
push
test
das
js
addr16
sub
or
pop
cmp
add
sbb
nop
aas
imul
add
cli
hlt
sub
xchg
or
push
inc
cmp
sub
sbb
out
adc
cmpsb
out
cmp
inc
rorl
mov
cld
shr
in
mov
lock
fldl
mov
lahf
shl
mov
cmc
pop
nop
pop
test
cmp
and
sub
sbb
jne
fyl2xp1
ds
ret
mov
add
and
mov
adc
out
enter
aaa
push
mov
sbbb
cli
xor
fistps
lea
fwait
cmp
mov
test
inc
cmp
or
push
adc
mov
or
sti
in
add
pop
shlb
daa
mov
inc
fidivrl
jg
mov
sub
add
adc
in
loope
mov
xchg
xor
int
mov
jns
mov
jnp
mov
jne
mov
pop
cmc
call
insb
sarl
stos
add
fidivrs
jns
cmc
mov
sbb
outsl
or
xchg
test
mov
fxtract
dec
cmp
rcrb
fisttpll
adc
mov
in
mov
pop
and
add
xchg
pop
jecxz
test
jae
and
push
jne
xchg
adc
push
jg
push
stc
fistps
aam
dec
xor
add
add
pop
and
add
xor
sahf
sbb
adc
push
xchg
sbb
push
mov
pop
push
in
callw
hlt
cmpsl
xchg
sbb
inc
clc
cld
aas
mov
push
or
or
sbb
jno
or
popf
mov
jae
enter
push
mov
in
and
cmp
lods
es
mov
pop
jnp
mov
stc
pop
fidivrs
cmp
cwtl
inc
in
sbb
dec
mul
xor
push
jnp
cmp
xchg
adc
iret
fldt
orl
pop
out
or
sub
jo
add
and
xchg
loopne
or
test
pop
lcall
jae
push
adcb
hlt
enter
scas
aad
xchg
stos
pop
cli
cld
mov
das
jg
push
dec
test
fwait
scas
and
std
dec
sub
iret
fldenv
adc
addr16
aam
outsb
inc
and
mov
xchg
mov
adc
pusha
pop
inc
jle
mov
add
mov
xchg
imul
iret
or
cmp
xchg
xorl
pushf
lods
sarb
lcall
push
jne
cmpsb
mov
sahf
rcl
inc
mov
sbbl
ds
nop
cli
inc
jb
inc
cmp
sub
jl
lods
outsl
scas
shrb
mov
adc
or
pop
movsb
rclb
adc
scas
sbb
inc
and
repz
mov
repz
lds
pop
push
xchg
out
mov
mov
clc
stc
dec
bound
sub
jb
jmp
lods
sub
adc
adcl
testb
jecxz
in
loop
add
jo
scas
mov
jne
add
mov
sbb
adc
sbb
movsb
out
stos
inc
jle
and
fmuls
mov
mov
and
sbbl
rorl
out
mov
mov
shrb
loope
pop
ror
add
in
and
push
out
xor
ljmp
insl
adcb
sbb
daa
jbe
ds
mov
jne
dec
call
aas
push
push
addr16
sub
cld
pop
jl
cmpsl
jg
test
les
push
pop
aad
jle
int
add
int
adc
fidivl
test
jmp
adc
dec
mov
jp
ja
adc
shrl
in
xchg
sub
jl
lcall
push
fdivrl
jns
call
xchg
data16
add
pusha
add
mov
imul
mov
hlt
mov
ss
rolb
mov
mov
les
pop
jo
fnstenv
daa
xchg
mov
dec
ret
icebp
xor
jecxz
mov
xor
fwait
cmp
and
repnz
xorb
lock
fsubrl
test
imul
adc
xor
addr16
adc
jp
shrl
and
mov
fs
adc
ljmp
inc
test
divb
and
das
sub
xlat
iret
daa
mov
stc
or
sar
sbb
jne
fimull
cld
shr
in
movb
lret
mov
fmull
mov
scas
push
icebp
call
das
cli
or
xlat
out
repnz
sub
mov
rcll
int3
sbb
test
ds
xchg
xor
into
cmp
push
and
xchg
test
and
mov
adc
in
adc
mov
nop
out
out
test
xor
cs
js
xchg
jo
lcall
popf
dec
repz
test
add
mov
fistps
outsl
fisttpll
mov
push
in
push
gs
pop
test
int3
test
dec
and
push
xor
cwtl
imul
fs
or
inc
lods
mov
cmc
cltd
dec
shr
cmp
and
inc
out
adcl
cmpsb
in
cmp
push
cmpsb
jbe
ljmp
and
mov
xor
in
in
aam
or
dec
popa
jmp
test
mov
cmp
data16
test
add
out
or
aaa
rolb
add
sub
lret
cli
rcrl
mov
in
xlat
fsubr
xchg
cmp
out
xchg
inc
in
fidivl
jecxz
aam
loop
jg
movsb
bound
sbb
in
ja
push
jle
arpl
xchg
fdivl
mov
cmp
push
outsl
popl
inc
ss
inc
sbb
add
mov
cmp
out
fwait
int3
pop
xchg
cmp
push
inc
sahf
loop
sub
or
xor
es
xor
mov
sub
je
dec
add
inc
dec
fisttpl
xor
mov
mov
shlb
mov
pcmpeqb
lahf
lahf
xor
mov
ds
pop
lods
das
adc
mov
xorps
inc
lcall
dec
xlat
int
loopne
adc
inc
imulb
ret
dec
xchg
dec
or
add
or
js
nop
fcmovbe
inc
pop
xchg
testl
jo
hlt
xor
add
outsl
or
xchg
std
mov
mov
xor
mov
aaa
ds
cmp
lret
addb
cmp
push
mov
andl
repnz
xchg
cmp
mov
imul
test
sti
xchg
andl
xchg
sbb
and
mov
cli
sbb
test
insb
ljmp
or
mov
xor
test
in
rol
jnp
stc
add
in
icebp
push
test
mov
cwtl
jne
lock
push
or
mov
mov
mov
out
sti
iret
imul
jmp
mov
outsb
test
and
mov
enter
cmc
push
mov
arpl
ljmp
xchg
icebp
xor
mov
sub
imul
adc
loop
leave
xorb
or
aad
int
lock
xchg
xor
enter
xorb
inc
sub
cmp
lret
or
mov
outsb
stos
imul
push
test
scas
jmp
dec
imul
jno
push
dec
mov
push
lea
mov
dec
imul
ficompl
pop
scas
jbe
mov
mov
add
mov
in
mov
sbb
dec
push
mov
add
or
sbb
scas
pop
insb
sahf
gs
inc
pop
lods
repnz
test
loopne
inc
jns
cmpsb
pusha
rorb
lods
lock
cmp
jge
or
sub
pop
out
cmpsb
fdivp
inc
or
add
incb
ja
icebp
data16
jne
rclb
out
test
jo
test
xchg
mov
mov
fsubs
lret
pop
std
mov
inc
mov
xor
dec
movsl
mov
push
and
jb
movl
mov
mov
jmp
js
lock
xor
and
pop
sub
stos
adc
ficoms
in
and
inc
dec
add
mov
ficoml
inc
push
lods
push
mov
push
push
push
cltd
imul
adc
xlat
sahf
subb
inc
lahf
nopl
or
into
mov
fwait
lods
mov
lods
pop
mov
nop
adc
lock
ret
cmp
inc
push
or
movl
and
mov
aad
sahf
pop
lea
fldcw
movsb
int3
shrl
dec
xor
or
dec
mov
cmc
cli
xchg
jnp
mov
sbb
stos
push
add
sti
clc
dec
pop
fcom
ud1
cmp
and
pop
xchg
clc
loope
mov
andb
lcall
lock
js
orl
sub
dec
cmp
add
dec
hlt
cmp
add
inc
pop
xor
adc
vshufps
aad
es
int3
mov
test
jbe
push
jne
daa
sub
jge
pop
movsl
je
neg
inc
xlat
dec
and
add
les
dec
mov
lea
pop
shl
call
mov
shr
stos
jno
jp
inc
and
push
aaa
sub
ja
mov
outsb
jmp
dec
popa
xchg
movsb
mov
add
sub
bound
xchg
add
repz
data16
fcoml
sub
fnsave
or
sbb
mov
pop
sbb
pop
dec
inc
sbb
fsubl
movsl
aam
ja
xchg
mov
mov
mov
clc
sub
mov
sub
cltd
pop
enter
loopne
mov
pop
mov
jp
scas
pop
das
sub
aaa
mov
pushf
and
sbb
xchg
add
scas
dec
movsb
push
shl
pushf
inc
and
das
jg
mov
inc
adc
or
scas
xchg
les
push
xchg
xchg
xor
loopne
cmp
sub
hlt
pop
sub
ret
mov
dec
fadds
insl
inc
xchg
jb
sub
ljmp
jns
aad
sbb
clc
push
jge
lods
jmp
daa
mov
ret
pop
sbb
aam
fstl
test
out
sbbl
dec
notl
aas
mov
mov
loop
pop
jns
lret
ffreep
mov
out
mov
pushl
fisubrl
fwait
pop
scas
int
and
mov
dec
cld
data16
mov
or
stos
std
adc
pop
and
xor
and
mov
mov
inc
pop
mov
popa
mov
fsubs
dec
in
das
popa
xor
sbb
pop
into
aas
ja
cwtl
iret
int
outsl
ret
ret
pop
movsl
sbb
mov
test
push
adc
adcl
mov
xchg
inc
sbb
dec
sbb
stc
loope
push
sbb
clc
test
ds
push
jae
dec
sbb
ja
pop
clc
mov
and
inc
fwait
iret
outsb
lds
xchg
jo
mov
xchg
push
test
xchg
pop
mov
js
adc
pop
ja
dec
aad
das
or
sub
adc
inc
psrad
mov
test
dec
jle
sub
push
repz
pushf
test
mov
pop
jo
ss
fstl
inc
ss
shlb
jge
sub
mov
in
push
sbbb
out
aad
loop
cmc
pop
out
fprem
jmp
mov
test
lea
dec
xor
mov
shlb
pop
das
cmp
shrl
fildll
and
or
add
sub
lret
cmp
daa
sti
rcr
movsl
insl
xchg
xor
mov
clc
testl
out
bound
lods
jge
ret
jb
and
js
cmc
cmp
or
and
fucomip
push
mov
shlb
push
outsl
pop
jp
push
and
adc
cmp
pop
xor
xlat
mov
lcall
ficoms
adc
jne
movsl
adc
jg
add
in
jmp
aas
mov
push
stos
xlat
mov
rolb
js
pop
shrb
lods
pusha
add
pop
xlat
in
dec
mov
std
pop
aaa
fldt
xlat
pop
sub
iret
aam
mov
cmpsl
pop
xor
lock
mov
pop
test
inc
lods
push
push
and
sbb
jnp
xchg
cmp
clc
push
sbb
mov
xchg
xlat
sbb
bound
mov
nop
ljmp
sub
int
sbb
dec
ljmp
xchg
pushf
dec
leave
iret
gs
mov
fstp
fisttpll
xchg
cmp
mov
jno
add
cld
cli
push
cmpsl
out
lcall
loop
pushf
mov
adc
stos
movsl
arpl
lock
pushl
cmp
loop
mov
mov
aaa
cltd
out
sub
jg
mov
cmpsb
xor
jl
xor
cld
push
mov
mov
mov
popa
ret
nop
shl
or
xlat
jg
inc
mov
xchg
cmpsl
dec
sbb
dec
adc
dec
pop
push
in
jp
call
adc
jbe
pop
sub
pop
sti
pop
fwait
cmpb
mov
or
xchg
inc
push
daa
into
fwait
jno
icebp
push
ja
outsl
inc
xor
inc
add
ljmp
ret
xchg
cltd
pop
incl
js
inc
and
std
int3
cmp
sbb
xlat
repnz
ljmp
dec
sbb
cmp
mov
mov
pop
xchg
inc
fmulp
imul
add
mov
push
das
sahf
aad
push
or
std
ja
xchg
pop
xor
in
mov
sub
cmc
stos
cld
hlt
and
jg
mov
xchg
push
push
rcl
xchg
push
iret
dec
mov
out
jecxz
out
lods
xchg
negb
dec
fimuls
addr16
and
aam
test
push
push
mov
test
or
cmp
aam
cmp
les
push
adc
sahf
pop
inc
dec
sub
das
push
mov
test
mov
rcrb
mov
dec
orl
pop
cltd
leave
jge
insb
addr16
lds
jp
movsb
xor
adc
xor
aad
adc
adc
or
or
and
out
scas
mov
arpl
icebp
imul
mov
out
testb
mov
push
ds
inc
pop
pop
dec
push
mov
enter
in
cmp
subb
mov
pop
fcoms
pop
scas
call
inc
push
test
mov
je
pop
xchg
mov
lods
in
flds
and
cwtl
add
jmp
xor
es
adc
mov
xchg
push
dec
sub
inc
xor
pop
and
sbb
iret
mov
mov
jp
out
xchg
and
dec
ja
mov
mov
loopne
out
add
sbb
stc
shlb
sub
popa
aad
int
inc
aaa
push
ja
jp
jo
aad
jg
in
pop
cmpsl
mov
test
mov
clc
mov
scas
in
mov
lods
out
add
nop
js
sbb
xchg
test
push
popf
pop
jbe
and
mov
sbb
lahf
aas
or
sti
sbb
aam
lahf
xchg
push
lahf
jl
push
rolb
in
mov
cmpsl
das
outsl
inc
int
clc
or
lret
pop
sbb
push
dec
mov
daa
mov
lcall
lock
xchg
fwait
dec
push
sahf
push
cwtl
mov
call
ja
sbb
iret
inc
dec
cld
ret
lea
lcall
and
jmp
push
cmp
idivl
jnp
aaa
cmc
cmp
fisttps
lods
mov
sub
jmp
mov
lret
sub
pushf
add
mov
sbb
or
pop
cmp
sbb
mov
movsb
jo
shrb
orl
lret
lcall
shl
shl
pop
sbb
cltd
jae
clc
movsbl
mov
cltd
pop
pop
xlat
add
and
jns
pushl
shrb
std
pusha
cld
testb
sub
cmp
jp
mov
imul
out
jns
aad
test
sbb
dec
lds
cmp
mov
daa
das
push
jmp
push
jp
mov
push
sbb
test
cmp
subb
push
call
inc
cmp
add
jbe
push
in
imulb
cs
ds
xchg
sbb
sbb
xor
shlb
mov
mov
ss
jae
and
pop
cmpsl
inc
dec
shll
push
cmpsl
sub
insl
add
xchg
bound
or
and
mov
js
neg
jg
sub
stos
cld
mov
jns
addr16
fidivrl
and
mov
lahf
xlat
repnz
sub
fiaddl
pop
sub
add
lret
xor
jns
test
in
jl
dec
inc
mov
mov
push
sub
repz
xor
pop
inc
enter
out
adc
mov
push
loopne
aad
aaa
cld
lock
and
sbb
inc
mov
pop
rorl
mulb
lds
aas
sbb
les
stos
arpl
pop
fs
inc
and
and
adc
sbb
lods
pop
andl
pusha
and
mov
add
fldt
xor
push
inc
sub
aad
outsl
dec
inc
or
push
mov
test
dec
popa
fmulp
push
fwait
xlat
add
push
sub
xchg
push
in
jmp
outsl
mov
popa
ja
mov
push
push
jl
mov
jl
fists
push
sbb
les
outsb
in
leave
pop
sbb
andb
or
push
or
mov
or
pop
ljmp
jmp
pop
aad
or
sub
cmpsl
sbb
sbb
inc
xor
add
add
shll
mov
es
jle
mov
xchg
or
adc
sbb
dec
mov
xor
mov
add
orb
mov
rclb
shrl
inc
push
dec
cwtl
nop
lods
jmp
fcom
dec
sub
push
xchg
test
cmp
add
jne
cwtl
mov
hlt
test
add
orl
xchg
in
xchg
jae
mov
mov
scas
lcall
or
dec
scas
xchg
sub
fnstenv
test
lahf
sub
pop
mov
xor
ucomiss
stos
cs
test
fstpt
or
sbb
mov
cmpsl
adc
mov
push
mov
push
sub
push
sub
stc
pop
fdivr
sub
lahf
cmc
shr
pop
add
icebp
loop
sbb
jns
jmp
push
lods
mov
xor
inc
push
test
test
addb
icebp
push
sbb
sbb
push
aad
xchg
loopne
loope
movsb
mov
dec
mov
ja
jo
mov
outsl
ret
and
mov
popl
sbbb
mov
pop
insl
lea
bsf
or
loop
sbb
stos
dec
in
mov
in
pop
cwtl
and
and
add
jl
adc
in
mov
bound
ss
outsl
xchg
xchg
mov
aas
lret
imul
repz
mov
leave
jae
sub
insl
rol
movsb
sub
cmc
xor
outsl
xchg
out
mov
ds
or
fldenv
sbb
cli
mov
lea
fisttpl
sbb
mov
lea
jne
and
mov
push
orb
cmp
mov
mov
loope
pushf
mov
or
sub
mov
and
inc
jo
xlat
dec
sbb
enter
sbb
cmpsl
insb
ljmp
fdivs
mov
ret
adc
pop
loope
or
mov
test
insl
push
loopne
adc
pushf
jo
cmp
and
sub
jge
in
sub
shl
push
sahf
cmp
mov
jb
mov
xor
aas
in
push
mov
xchg
daa
or
test
out
dec
push
xor
adc
mov
jnp
inc
dec
push
cmp
lods
mov
cld
mov
dec
sahf
lret
mov
loop
pop
inc
inc
sub
movsb
xor
sti
sub
mov
rol
rcrl
aam
rcll
in
or
pop
in
repz
push
sub
fldenv
or
sti
xor
jne
into
mov
gs
stc
mov
out
fidivl
pop
xchg
imul
push
jo
pop
in
inc
cmp
sbb
mov
mov
iret
rcrl
mov
daa
lret
pop
insb
fiaddl
mov
aad
ret
aam
loopne
fs
dec
imul
mov
out
mov
mov
jmp
xor
cltd
adc
insb
sub
lods
cmp
mov
pusha
xchg
inc
sub
xchg
push
dec
add
cmp
xchg
sbb
or
lds
addr16
nop
and
jge
xor
loopw,pn
xchg
cmp
push
ljmp
stc
jbe
dec
daa
xchg
lret
mov
and
xchg
jbe
lret
mov
test
push
mov
mov
xor
mov
xlat
gs
jge
cmc
cld
inc
push
popa
mov
add
inc
mov
or
xor
push
push
pushf
mov
inc
or
test
pop
les
mov
stos
movsb
test
xchg
jbe
jbe
int
lock
dec
aad
xchg
push
repnz
add
cwtl
inc
cld
shll
mov
ljmp
dec
ret
movsb
in
test
jnp
and
push
push
mov
inc
ret
xchg
pop
fldl
xlat
xor
jne
adc
sub
pop
not
xchg
movsb
mov
sub
je
push
pop
sbb
out
xor
mov
mov
lods
sbb
mov
inc
pop
addr16
jnp
stos
or
xor
push
or
xor
cmp
pusha
cwtl
pop
push
mov
aas
call
and
testl
xor
imul
punpcklbw
jle
jecxz
push
lea
dec
push
add
pop
mov
inc
fwait
xchg
or
loope
add
mov
cmpsb
out
xlat
xchg
scas
or
jbe
in
int3
mov
inc
fsubs
adc
inc
push
add
sar
dec
adc
test
repnz
inc
mov
add
mov
add
js
add
add
jg
pop
imul
mov
xor
repnz
jp
int3
les
add
sbb
bound
clc
xchg
je
pop
and
xor
pop
and
lret
fnsave
mov
clc
sahf
bnd
insl
mov
xchg
sbb
popa
sub
inc
cld
mov
sub
out
mov
aam
outsb
lret
xor
jne
sbb
add
jbe
cmpsb
sbb
mov
pop
adc
xchg
add
scas
fwait
sar
iret
daa
scas
mov
lds
pop
call
xor
mov
test
and
push
out
add
mov
imul
cmpsb
cmp
xchg
movsb
decl
lahf
ds
push
add
test
pop
cs
mov
loopne
inc
push
xchg
es
or
dec
inc
push
jae
je
mov
nop
jno
mov
jae
in
lea
or
xor
push
jge
pop
les
lds
push
sbb
movl
rcrb
xor
aas
pusha
lret
pop
test
push
sub
fwait
lods
jge
mov
lds
subb
inc
gs
in
out
ds
add
xor
mov
sub
mov
aaa
sar
inc
jecxz
int
mov
arpl
mov
cmp
insb
mov
lret
mov
clc
lahf
pop
xchg
pop
add
inc
cmp
dec
ror
xor
mov
adc
mov
mov
sahf
mov
popf
ss
add
sub
in
icebp
and
dec
adc
lcall
and
jle
pop
dec
lret
or
mov
mov
mov
adc
sbb
xchg
sub
sub
or
movsl
dec
mov
test
xchg
mov
mov
leave
les
jbe
and
lret
mov
stos
fcomip
jns
mov
and
addr16
aad
outsb
insb
or
cmp
adc
scas
cmpsl
pop
and
push
fwait
cld
pop
mov
inc
adc
pop
dec
ljmp
xor
in
jmp
sbb
test
aaa
mov
stos
mov
and
lds
fisubs
push
adc
mov
test
jl
mov
stc
sti
sub
xchg
and
jne
adc
inc
daa
bound
adc
inc
and
lahf
pop
cld
dec
xor
je
push
popa
cmp
out
incb
stc
xchg
xor
mov
xchg
or
mov
orl
das
dec
mov
das
or
ss
sub
add
aad
aam
pop
sbb
jp
mov
push
xchg
int3
add
pusha
mov
cmp
data16
in
in
xchg
gs
inc
in
test
push
cld
daa
iretw
cs
fldcw
push
push
xchg
cli
scas
out
inc
add
rcrl
hlt
or
sub
inc
push
fcomi
mov
jno
jp
mov
subb
mov
imul
push
mov
pop
inc
jmp
test
bound
jg
pusha
mov
mov
lss
cld
mov
adc
and
fcmove
xchg
mov
push
cmpl
mov
jae
pop
mov
inc
mov
les
hlt
movsl
sbb
call
repz
mov
add
pop
icebp
xchg
add
fs
fidivrl
mov
sbb
lret
ljmp
je
pop
xor
pop
mov
push
std
mov
adc
sti
jmp
rorl
push
sbb
cmpsb
scas
mov
sub
xchg
mov
sbb
rclb
rep
jl
es
push
mov
fldt
push
pop
out
or
mov
mov
aad
cli
mov
mov
lahf
fstpt
jge
aas
lods
stos
xchg
push
xor
add
xlat
orb
xchg
inc
inc
xor
cmp
int
inc
mov
inc
adc
jae
aad
jle
and
pop
nop
mov
mov
adc
loop
repz
pop
rclb
or
or
cld
mov
dec
adc
inc
gs
adc
arpl
daa
les
ja
lret
rcrb
sbb
out
shll
pop
mov
test
leave
xor
ss
sub
push
sahf
cmp
int3
push
in
sbb
mov
mov
jbe
lahf
iret
add
and
xabort
popa
push
mov
pop
fisubs
sub
jp
sbb
lret
icebp
out
and
movsl
add
xchg
and
mov
fldl
out
add
int3
add
push
dec
ljmp
sbbb
cmc
and
xor
mov
lock
popa
pop
mov
fdivr
je
xchg
pop
push
jg
xchg
cmp
xor
jnp
sub
pop
sub
mov
stos
popl
xchg
sub
sbb
inc
xor
stos
loope
lret
insl
sub
pop
movsl
mov
roll
das
mov
orb
adc
xor
sti
jno
aas
sub
jmp
fwait
sbb
or
jl
pushl
add
out
sbb
xor
mov
mov
ret
mov
lods
or
dec
inc
inc
mov
adc
loope
mov
xor
jmp
or
lret
lcall
hlt
aas
lret
and
lret
lods
xchg
aam
std
jnp
mov
pushf
fisttps
stos
add
xor
loopne
jmp
inc
inc
rclb
pop
fsts
cwtl
rclb
mov
cmp
push
stos
movsl
clc
cwtl
cmpsb
dec
sar
lcall
test
test
or
movsb
sti
scas
mov
pop
mov
int
sbb
adc
lods
and
in
sbb
cmp
pop
and
push
std
sbb
lret
add
inc
shlb
adc
jae
icebp
and
loop
daa
xlat
icebp
mov
in
jbe
dec
iret
inc
data16
fsts
dec
aas
in
les
xor
mov
xlat
ficoml
popa
movsl
out
add
dec
lahf
pusha
stos
pusha
or
and
push
dec
mov
je
popa
push
mov
mov
mov
xor
or
mov
dec
lock
sbb
daa
test
jns
scas
ja
mov
mov
in
addr16
popa
ja
vmovsd
lds
pop
jmp
in
mov
and
adc
xchg
mov
mov
mov
add
fs
push
and
cmp
ret
arpl
adc
mov
ret
out
sub
test
test
loope
mov
dec
and
pushf
mov
nop
jb
ljmp
fucomp
dec
dec
jl
dec
mov
in
and
mov
les
out
mov
faddl
pop
xchg
xchg
push
adcl
jge
sub
mov
fcomps
outsb
es
mov
inc
adc
cmp
or
rcr
mov
out
insb
adc
dec
xchg
jns
cmpsl
cmpsb
cmpsb
dec
arpl
fcompl
mov
aam
fisubs
lret
les
jp
f2xm1
mov
movsl
mov
inc
jbe
mov
addr16
mov
daa
dec
aaa
inc
ljmp
xchg
aaa
jecxz
int3
xchg
add
stos
jne
repz
popa
cmpsl
arpl
pop
lcall
cmp
mov
jno
mov
sub
pop
push
xorb
pop
ja
lcall
daa
test
pop
cmp
dec
cld
ror
sbb
shrl
mov
dec
ljmp
mov
mov
xor
dec
and
mov
adc
stc
insb
cmp
jb
mov
icebp
loopne
test
or
iret
dec
pop
inc
aas
add
mov
xor
mov
push
mov
popa
cmp
cltd
int
mov
clc
test
and
jge
dec
imul
ss
mov
adc
shll
ffreep
and
int3
fstps
pop
push
or
cmp
jno
dec
fldt
push
sbb
cmp
xor
jne
aas
add
push
test
push
add
mov
pop
mov
jbe
and
mov
adc
push
adc
lret
adc
mov
subl
aaa
push
mov
sub
add
subl
and
mov
fisubs
mov
into
movsb
adc
pop
mov
xchg
nop
insb
aas
xchg
cmc
shll
xor
add
sub
sahf
push
pusha
adc
mov
loopne
fstpl
test
mov
xchg
inc
and
je
cmp
jns
add
and
mov
xor
rcl
jg
mov
pop
inc
push
in
push
mov
or
fisttpll
xchg
loop
fmuls
cs
bound
sub
adc
aam
push
pop
xor
and
sbb
mov
in
jae
xchg
inc
rcl
adc
idivl
lea
xchg
jmp
jbe
pop
xchg
sbb
inc
sbb
movl
jle
inc
sbb
add
scas
cmp
lret
imul
adc
mov
inc
test
ficomps
shll
and
cmpsl
insb
pop
and
fisubrs
sarb
cmpsl
test
fmuls
dec
sahf
and
jmp
repnz
aam
mov
cmp
ret
stos
push
cmpsb
xchg
pop
fmuls
inc
or
push
mov
dec
rorb
adc
std
push
movsb
xchg
jb
jp
jecxz
adc
in
sbb
lcall
or
imul
sbbl
sbb
scas
cli
adc
out
sti
and
xchg
mov
jl
jo
fldenv
ficomps
sbb
adcl
je
push
ds
mov
repnz
xchg
inc
ret
hlt
aas
pop
push
mov
repz
push
adc
pop
xor
jp
mov
xchg
cmpsb
orb
pop
mov
stos
fidivrl
loop
es
xor
jp
cmp
sub
mov
jo
xor
jbe
in
add
lods
idivl
mov
xor
mov
stc
imulb
insb
test
data16
ret
insb
push
mov
inc
in
outsl
xor
in
push
pop
pushf
stos
xchg
inc
stos
lcall
mov
adc
fidivrl
sbb
loope
jmp
jecxz
clc
arpl
add
pop
dec
dec
call
mov
push
adc
xchg
cltd
mov
shr
shlb
mov
mov
jb
in
mov
leave
outsl
nop
loop
pusha
dec
mov
mov
inc
ljmp
mov
mov
adc
and
mov
daa
xchg
cmp
shrb
ret
out
jnp
lahf
int3
into
sbb
sbb
rol
sbb
and
inc
sbb
out
xchg
dec
mov
push
mov
roll
dec
sub
push
adc
fdiv
and
lock
aad
push
mov
mov
movb
popf
incl
cltd
sbb
insl
in
rcll
add
ja
inc
js
and
stc
in
mov
arpl
push
push
dec
push
xor
dec
cwtl
shl
or
aad
addr16
jne
adc
jecxz
mov
jno,pn
std
sysret
dec
xlat
sub
stos
rol
sbb
mov
cmp
lret
and
fs
popf
dec
or
pusha
cmp
push
scas
mov
mov
xor
cmc
js
pusha
cwtl
mov
stos
mov
rcr
dec
outsl
insl
lods
pop
test
mov
lods
pop
xor
mov
xor
cmpsl
add
cmc
loop
pushf
addr16
sbb
test
and
xchg
adc
xchg
dec
sub
test
imul
sti
dec
mov
cmp
mov
out
pop
lock
insb
xor
jb
out
mov
arpl
in
inc
jns
xchg
push
mov
add
dec
adc
insb
mov
inc
xchg
popa
es
insl
je
lods
mov
pop
fs
sbb
out
push
adc
xor
push
adc
lret
imul
mov
fwait
adc
in
test
xchg
adc
in
or
test
cwtl
add
fcomi
das
pop
in
into
cmp
movsl
mov
popf
xchg
pop
daa
or
ljmp
adc
push
int3
adc
stos
xchg
mov
push
push
and
imul
xor
dec
xlat
inc
daa
repnz
jb
inc
repnz
mov
push
notl
sub
mov
sub
popa
dec
js
repnz
and
cltd
pop
or
aas
or
push
out
sbbl
aam
lods
jno
and
sub
cltd
mov
mov
and
add
ret
stos
imul
mov
outsl
sub
ljmp
jmp
ret
sbb
ret
cmp
mov
dec
fldenv
push
adc
add
push
xchg
inc
pushf
adc
push
push
test
cmc
ss
test
bound
xor
ja
jbe
jnp
mov
cld
xor
add
push
push
cwtl
sub
nop
inc
or
scas
pop
or
adc
sub
push
lcall
push
pop
inc
sub
cmpl
test
mov
add
inc
test
pop
mov
fs
xchg
cmp
push
fisttpll
cs
insb
and
mov
out
mov
xor
scas
xor
mov
jae
jbe
sub
and
xchg
in
xor
aas
sub
jo
sahf
xorl
push
movsl
ljmp
adc
lret
push
int
mov
sbb
add
popf
fisubrl
shll
sbb
fucomi
je
xor
lret
xchg
jne
xor
repz
mov
mov
push
lds
aaa
out
jmp
mov
test
xchg
pop
mov
je
push
xchg
ljmp
cmp
mov
movsb
or
or
or
pop
jbe
push
jmp
insl
rcll
mov
push
pop
rclb
add
or
mov
jo
addr16
rol
dec
dec
out
fnstsw
cmp
daa
add
insl
mov
mov
dec
lods
adc
jmp
cmpsl
push
sbb
imul
pop
cs
jl
mov
add
lea
xchg
xchg
cmp
divb
aad
daa
cmp
jl
add
push
loope
hlt
lock
call
repnz
shl
sub
xor
jns
xchg
cwtl
in
test
cmpsb
lahf
jno
aam
and
or
jbe
je
push
mov
loopne
lret
dec
inc
add
test
data16
jecxz
pop
out
and
dec
jnp
roll
push
add
jmp
push
arpl
rclb
mov
xchg
lcall
out
push
sti
mov
sub
adc
jnp
aas
sbb
mov
mov
xchg
scas
stos
dec
les
jl
cmp
push
adc
aam
cmp
jb
push
pushf
sbbl
sbb
push
add
movsl
sahf
cld
aas
xchg
insb
push
mov
fprem1
call
repnz
mov
fisttps
mov
inc
hlt
in
dec
fwait
pop
inc
mov
leave
xor
add
loop
sbb
or
cwtl
mov
mov
ffreep
andl
add
jl
outsb
imul
aam
cmp
mov
cwtl
jae
std
sub
dec
xor
jns
call
mov
xchg
outsb
cmpsb
outsl
jl
cmpsb
jo
push
mov
cmpsl
aaa
inc
sub
and
adc
pop
mov
sarb
xor
in
lcall
shlb
xor
cwtl
jbe
je
sub
dec
mov
sub
fwait
enter
sbb
sub
std
in
cmp
add
sub
cmp
push
pop
xchg
aam
xor
mov
jp
push
pop
push
xor
stos
ret
mov
daa
inc
les
cmpb
sub
pop
std
mov
inc
test
dec
or
decl
fcomi
fildl
adcb
jl
pusha
into
pop
mov
out
in
inc
add
movsl
das
sbb
mov
fwait
xor
out
mov
gs
xor
sbb
mov
push
aad
lods
mov
and
adc
push
sbb
cmp
xchg
mov
cmc
data16
sahf
adc
inc
adc
dec
rcr
ljmp
cld
jmp
mov
xchg
push
pusha
sbb
fcoms
adc
push
pop
and
mov
xor
dec
arpl
cmpsl
xor
cmp
fld
aas
and
and
and
inc
sub
cwtl
cmpsb
mov
icebp
xor
inc
jns
push
mov
daa
lds
xchg
lds
int3
adcb
push
xor
jnp
lahf
push
outsb
adc
sbbl
xor
fwait
and
test
jp
lret
aad
push
testb
jge
and
jae
fstpt
js
add
sahf
dec
jb
mov
dec
sub
or
jg
and
push
adc
mov
imul
xchg
cltd
push
enter
pop
push
repz
xor
inc
mov
mov
xchg
lds
dec
les
mov
xchg
lds
out
lret
push
ja
pop
mov
jp
leave
pop
fsts
xchg
in
test
addr16
ret
in
stos
mov
ret
fidivs
push
cmc
xchg
fistpll
stos
ret
test
pop
push
fldlg2
adc
enter
adc
negl
bound
or
mov
xchg
cld
or
ds
inc
dec
stc
mov
mov
into
cli
pop
and
in
flds
xor
or
repnz
inc
inc
adc
dec
jo
and
dec
mov
add
or
dec
sub
mov
out
cmpsl
push
mov
repz
lcall
es
push
insb
dec
push
mov
not
push
pop
cld
sub
lock
icebp
out
test
inc
pop
mov
into
inc
jge
test
mov
mov
leave
jle
daa
loopne
movsb
add
jne
mov
add
into
jo
movsb
mov
jb
in
imul
pusha
mov
xchg
sbb
xchg
out
sbb
scas
lret
mov
mov
jbe
clc
inc
push
inc
dec
int
xchg
jle
jo
out
fildl
iret
pop
pop
scas
ret
int3
push
mov
pop
adc
xchg
and
addr16
dec
xor
dec
neg
aam
adc
mov
pop
pusha
or
xor
jbe
inc
cs
aam
sub
ja
mul
pop
inc
push
inc
inc
dec
pop
mov
enter
bound
cmpsl
pop
pop
xor
mov
fisubs
dec
add
fdivrs
jle
iret
sub
repnz
outsl
imull
cltd
mov
jecxz
sbb
jns
jnp
std
jmp
or
push
push
fdivs
jp
test
inc
add
pop
js
cmp
fistpl
pop
cwtl
mov
gs
out
sub
inc
inc
shll
push
jp
xchg
add
fsubp
nop
jle
aaa
in
fdivrs
icebp
mov
and
fstps
cmp
add
jmp
sub
dec
outsl
jge
jge
inc
fnstenv
pop
cmp
cmp
outsb
hlt
push
adc
outsl
js
pop
iret
jo
mov
mov
jg
adc
test
sub
mov
dec
outsb
push
push
mov
movsb
cs
jno
adc
jb
xor
icebp
and
aad
jp
std
cmpsb
aaa
les
loope
leave
lahf
and
jge
mull
add
add
cmpsb
dec
adc
mov
lock
inc
fisubrl
shrl
fidivl
mov
sub
adc
popa
push
jg
insl
dec
in
dec
sbb
iret
mov
jle
mov
xlat
mov
hlt
jo
dec
lret
mov
in
xchg
arpl
test
cld
imul
scas
mov
sub
mov
push
sbb
fdivrs
cwtl
adc
xchg
rclb
dec
addr16
pop
test
sbb
mov
jbe
lcall
jno
sbb
sub
mov
mov
mov
out
or
aas
adc
clc
in
cmpb
sahf
mov
dec
imul
adc
mov
and
mov
mov
test
scas
fwait
jne
mov
nop
ja
pop
xchg
xor
cmp
call
aam
adc
sub
pop
and
xchg
movsl
xorl
testb
lods
sub
outsl
repnz
dec
loopne
aas
and
sbb
xchg
ret
cmp
dec
inc
in
fiaddl
jo
and
sti
and
cmp
mov
int3
movsl
jge
test
sbb
aam
inc
jnp
sti
add
stos
sbb
adc
inc
cmp
fisubl
repnz
lret
jno
inc
cmc
push
inc
add
push
ja
sti
mov
sbb
orb
lahf
cwtl
addb
xor
aaa
lahf
arpl
mov
mov
aad
fs
negb
xor
cmp
insb
sbb
xchg
movsb
fbstp
jg,pn
lods
data16
sbb
daa
push
daa
aas
ja
cwtl
popa
stos
clc
inc
xor
negl
fstl
cld
idivl
clc
test
js
pop
or
sbb
adc
jne
sub
aad
lods
cmpsl
lahf
mov
fldl
stos
adc
add
push
add
add
mov
iret
mov
mov
pop
cli
jo
ret
jmp
xor
outsb
inc
ud1
int3
lahf
fistl
or
subl
pop
pop
jns
mov
sub
sbb
fistl
push
push
mov
pop
adc
rorl
into
loop
adc
sbb
dec
sub
das
lock
sbb
dec
ja
out
fcoms
loopne
movl
test
jo
call
mov
dec
and
push
lcall
mov
pushf
mov
cmc
xrelease
jbe
mov
xchg
inc
cmp
movsl
push
jno
repz
xchg
movsb
mov
sub
or
out
and
insb
icebp
movsb
inc
mov
fucomi
push
jecxz
adc
int
in
mov
dec
pushf
ds
sub
clc
int
push
sbb
or
push
xchg
pop
cmpsl
mov
cld
popa
loope
ss
pop
xchg
mov
mov
and
or
in
sti
test
cld
sub
fnstsw
jle
pop
mov
push
cli
loop
mov
fadd
mov
movsl
pop
ss
mov
shlb
lock
mov
das
jg
fcomps
loop
push
inc
dec
aaa
add
cmp
bound
lods
xor
insl
adc
stos
dec
add
pop
inc
push
mov
gs
jp
loop
rcll
loopne
faddl
pop
sbb
xchg
dec
stc
fs
or
cmp
scas
sbb
rorl
inc
iret
adc
xchg
inc
jae
xorl
mov
lock
mov
aas
mov
das
and
mov
stos
mov
std
xchg
or
insb
xchg
add
std
xchg
test
andb
ret
xchg
cmpsb
mov
inc
pop
cmp
and
dec
mov
xchg
pop
mov
xor
out
xchg
lods
and
arpl
add
xchg
inc
in
push
fnstsw
adc
dec
pop
lods
push
pushf
lock
daa
inc
push
push
insl
cmp
inc
mov
testl
push
inc
dec
aaa
push
sbbb
cmp
subb
and
sbbb
call
mov
jo
mov
leave
lret
mov
jecxz
out
xor
dec
cld
jae
roll
insb
loop
dec
xchg
xor
and
jb
cmp
fstpl
push
lods
adc
jl
imul
xor
inc
jns
jno
loopne
int
popl
mov
mov
mov
dec
mov
push
daa
lcall
fisubrl
imul
mov
inc
insb
es
data16
sbb
mov
data16
rcl
push
and
or
stos
divb
aam
xor
inc
aad
pop
add
add
arpl
bound
movsb
jmp
inc
sti
les
sbb
movsl
jo
in
adc
sbb
jae
gs
cmp
push
lahf
loopne
decl
hlt
sub
push
cmp
dec
mov
lds
inc
out
adc
ds
ficomps
aas
flds
mov
add
xor
decl
stc
in
push
adc
dec
inc
mov
mov
sti
fbstp
adc
mov
loop
push
cmp
int
xchg
in
pop
mov
mov
sbb
vpunpcklbw
push
das
scas
stos
repz
mov
int
mov
inc
push
inc
in
mov
xchg
jl
adc
sarl
adc
scas
add
pop
icebp
rcrb
or
inc
lock
clc
jmp
xor
mov
stos
xchg
and
and
pop
fcomp
xor
xor
fists
int
jl
aam
loope
jne
rcll
or
and
push
mov
xchg
sub
jae
lcall
push
icebp
dec
incb
sarb
adc
inc
mov
negl
cmp
test
sti
mov
xchg
and
in
aam
adc
ljmp
inc
test
dec
mov
out
pop
lods
mov
popf
push
sbb
stos
movsb
jmp
cld
mov
addr16
mov
rep
xchg
mov
push
ljmp
jp
pop
or
movb
ss
sub
loope
ret
addr16
mov
repnz
lahf
sub
adc
and
pop
xor
pushf
outsl
mov
mov
pop
lgs
cwtl
add
test
add
xor
imul
out
and
mov
and
jmp
mov
add
fsts
mov
jg
mov
imul
push
dec
xor
xchg
cltd
dec
dec
orb
cs
inc
insl
push
lcall
adc
mov
inc
jg
xor
enter
sbb
mov
in
mov
mov
popf
fisubrl
mov
cmp
mov
sbb
mov
xor
adc
push
push
jmp
jnp
loop
sub
je
ljmp
aam
orb
jmp
test
inc
fstps
repnz
mov
dec
push
sub
lcall
or
lods
nop
adc
push
jle
loope
cmpsl
dec
shll
mov
adc
lds
rcrl
leave
mov
dec
popf
mov
das
repz
add
insl
mov
mov
cmp
adc
testl
add
xor
sub
push
sbb
add
enter
into
clc
inc
addb
in
loopne
adc
andb
scas
pop
repz
adc
jl
dec
mov
xchg
cmp
aam
xchg
roll
or
je
pop
and
pop
or
adcl
mov
popa
cmp
sbb
mov
xlat
pop
xchg
mov
sbb
cmc
addr16
mov
scas
sbb
hlt
xor
bound
icebp
pop
dec
pop
push
test
xchg
add
outsb
mov
arpl
xchg
lods
popf
push
push
jp
fiaddl
sub
repnz
jae
and
add
fwait
imul
and
jmp
mov
sar
push
mov
rorl
loope
imul
fidivl
jp
call
fsubrs
imul
pop
cmp
mov
mov
push
jne
xor
aam
push
xlat
std
mov
dec
leave
ss
mov
push
in
mov
sar
jo
arpl
xor
lock
iret
push
sub
in
inc
test
inc
cmp
rcrl
insb
mov
psubb
scas
cmpsl
les
bound
and
scas
data16
mov
lock
ljmp
enter
adc
aas
push
pop
or
or
adc
push
shrb
movsl
or
ds
fidivrs
js
sbb
cltd
xchg
sub
push
pop
repnz
stos
aad
jns
aad
cmp
mov
sub
loopne
incl
inc
mov
inc
xlat
ljmp
sub
stos
imul
push
or
dec
cmc
je
mov
or
sar
gs
cli
xchg
push
push
stos
or
in
scas
or
jnp
lret
inc
rol
popf
popa
outsb
cmp
icebp
pusha
and
mov
test
xchg
dec
arpl
or
shll
inc
scas
pushf
dec
loope
cmp
idiv
andb
test
inc
in
push
outsl
cltd
mov
add
sub
clc
and
add
jecxz
mov
fsub
dec
gs
popa
lret
adcb
adc
roll
sti
xor
ja
jg
call
aas
fidivs
push
inc
push
imulb
cmp
sub
xchg
in
aaa
push
mov
mov
mov
ret
dec
mov
shll
lret
push
xchg
push
mov
mov
clc
movl
test
scas
add
xor
push
fs
jg
xlat
inc
cmpsl
push
insl
cld
dec
mov
or
push
roll
mov
ret
mov
mov
lcall
repz
push
decb
push
sar
pop
sbb
stos
add
dec
or
inc
dec
es
jb
sarl
sarl
daa
jns
sub
clc
pop
out
pop
push
scas
cmpsl
inc
jl
lds
adc
sub
imul
adc
movsl
loope
cmp
cmp
dec
lods
repz
jmp
addb
hlt
hlt
lret
mov
call
fcmovbe
int3
mov
iret
mov
adc
sub
rcll
cmpsb
sbb
out
sub
xor
enter
jae
aaa
push
jb
ret
xor
in
bound
mov
xchg
jbe
push
sub
mov
or
inc
mov
adc
dec
repnz
pop
or
insb
iret
xor
pop
mov
inc
mov
add
mov
cmp
loopne
dec
insl
xchg
clc
insb
push
pop
pop
pop
sub
inc
mov
pop
push
push
mov
ds
jne
mov
bound
test
rolb
push
in
push
add
pusha
dec
xchg
jno
mov
jo
stc
xchg
dec
pop
sbb
push
push
loop
xchg
cwtd
scas
cmpb
lock
sbb
pandn
sbb
sub
xchg
aas
xor
xor
sbb
mov
dec
mov
adc
jecxz
aad
loope
jecxz
adc
dec
pop
mov
fsubrs
mov
xor
add
stos
cs
mov
stc
testl
insl
adc
test
mov
push
sbbl
decb
xor
push
lods
and
aaa
jb
jecxz
test
or
enter
pop
daa
into
jns
dec
and
xchg
call
pop
add
sahf
pop
dec
and
nop
mov
sub
movsb
jo
gs
stos
sbb
jecxz
std
push
sbb
and
push
out
xchg
addb
ds
das
push
fadds
scas
sarl
rorl
adc
pop
int3
ret
mov
and
mov
test
test
mov
imul
mov
subb
push
sub
mov
jo
ljmp
jno
cmpsb
lds
inc
icebp
pop
sbb
and
add
icebp
jecxz
adc
dec
add
addl
push
sbb
mov
xor
dec
outsb
movsl
imul
sbb
add
sub
out
cmp
fwait
push
int3
sub
loop
imul
jle
fs
pusha
dec
push
add
inc
cltd
iret
pushf
shrb
repz
mov
mov
jns
jp
sub
jg
fists
mov
add
push
sbb
jnp
fidivl
lock
cs
aad
orb
insl
push
jne
mov
movsb
int
inc
adc
push
inc
dec
loop
imul
fiaddl
icebp
push
mov
ret
dec
and
push
mov
out
hlt
jae
xchg
cmp
outsl
ljmp
fscale
cld
jle
int
jge
sbb
lock
imul
stos
js
testb
in
dec
mov
cmp
xchg
ljmp
mov
imul
dec
insb
or
and
rcrb
fistl
pop
scas
mov
mov
sbb
jmp
adc
inc
cmp
outsl
ds
or
inc
cmp
addr16
cmp
jecxz
inc
es
in
xor
fisubl
dec
or
jmp
or
jl
jns
out
js,pn
shrl
push
mov
ret
or
arpl
les
jbe
xchg
lock
popa
out
ret
inc
mov
stos
lret
inc
cmp
out
xchg
mov
cmpsl
mov
mov
cmp
sbb
add
sub
cmpsb
cmpsl
jns
mov
lods
cmp
das
addr16
or
jns
mov
mov
mov
cmp
or
or
mov
in
mov
or
mov
dec
idivl
add
xor
mov
sbb
xchg
sahf
sahf
add
lahf
insb
add
ret
pop
loop
mov
inc
out
xor
lock
xchg
xchg
fisttpll
xchg
daa
loopne
dec
pop
popa
pop
sti
sti
stos
push
cmp
pop
push
testl
cltd
xchg
pop
jno
pusha
lods
mov
iret
inc
das
scas
gs
push
es
cltd
fmuls
gs
mov
out
jecxz
and
daa
data16
sub
and
inc
mov
pop
test
ret
icebp
mov
mov
mov
lds
jno
mov
jno
dec
enter
sqrtps
add
push
or
sub
pop
cli
adc
das
icebp
xor
popf
cmpsl
mov
aas
dec
xor
mov
fmuls
aas
pcmpeqw
test
mov
mov
adc
popa
xchg
es
dec
lock
stos
sub
xlat
icebp
xor
sub
and
mov
cmp
mov
das
scas
push
jle
cmp
lret
jno
mov
sub
iret
movsb
scas
adc
push
shl
jbe
jb
clc
jmp
inc
out
repnz
loop
jno
ss
imulb
xchg
xor
adc
stc
mov
mov
xlat
repnz
addr16
pop
sub
mov
mov
pop
into
dec
or
mov
xor
and
ja
rol
and
push
and
imul
out
inc
pop
mov
or
fstpl
fnstsw
dec
adc
jp
mov
and
dec
aas
mov
or
pop
fs
push
pop
sbb
inc
push
mov
es
fs
add
pavgb
ss
pushf
sub
movsl
jne
pop
arpl
dec
cmc
not
nop
mov
call
ret
insl
pop
inc
fdivr
cmpsl
fs
pop
jp
pop
mov
subl
insl
cmp
test
mov
add
inc
test
negl
mov
or
arpl
mov
cmp
pop
push
push
cld
cmp
out
xlat
into
ror
out
sbb
jne
push
pop
mov
jbe
ret
in
and
push
adc
pushf
dec
repz
ficompl
testl
pop
sub
arpl
push
cmp
sub
xor
dec
mov
adc
icebp
push
je
mov
cli
add
mov
arpl
push
mov
push
cmpb
orl
push
scas
mov
jo
scas
or
xchg
adc
mull
push
mov
icebp
cld
in
adc
jge
out
mov
fstps
xor
and
add
push
adc
outsl
jno
mov
das
fnstcw
aas
pop
enter
mov
sbb
stos
xchg
mov
cli
aas
mov
sahf
jle
pop
in
add
outsb
mov
mov
xchg
insb
push
push
sahf
pushf
clc
mov
daa
mov
imul
xor
in
pop
xchg
inc
repnz
or
jae
cmp
xchg
cmpb
test
int
mov
in
mov
aam
mov
dec
pop
iret
xchg
fidivl
cmp
out
push
jne
popa
push
gs
xchg
mov
pop
incl
xchg
push
push
xchg
in
xchg
and
cmpsl
mov
pusha
fstp
mov
jb
cmp
js
cwtl
gs
fst
test
sbb
pushf
aas
sub
pop
fisttps
pop
jp
push
mov
mov
dec
pop
mov
jge
pop
aas
push
push
xchg
icebp
cltd
mov
push
test
popf
and
clc
adc
hlt
add
rcrb
mov
xchg
dec
pop
iret
aam
xor
add
push
jle
inc
loop
jb
int
gs
enter
aas
fwait
xchg
mov
in
mov
fidivrs
sti
add
out
in
sbb
rclb
test
xchg
jno
jb
jb
and
mov
in
repnz
adcb
jne
pop
add
sarb
stc
lds
or
push
shll
pop
repz
subb
mov
lods
in
fstps
sub
jp
inc
lahf
mov
push
stc
jg
xor
popa
sbb
movl
mov
push
std
inc
test
scas
mov
pusha
lret
sbb
outsl
jae
in
inc
pushf
stos
es
jno
loope
pop
push
fldenv
aad
xor
test
cmp
cltd
and
xchg
xor
and
push
outsl
mov
leave
and
stos
fnstenv
dec
out
and
inc
loopne
or
stc
sbb
and
lret
mov
fwait
push
add
in
std
pop
jp
jae
mov
inc
adc
mov
movsb
iret
iret
pusha
lock
dec
jnp
xchg
je
ret
or
out
popa
iret
adc
push
jae
cmpsb
andl
ja
cld
jmp
cmpsb
dec
call
das
gs
subb
sbb
add
aam
or
test
mov
or
pop
add
jo
in
xor
lea
outsb
dec
jns
mov
push
lcall
jl
push
iret
inc
push
mov
xor
sub
clc
lods
jo
loope
mov
cwtl
les
cmpsl
cmp
out
dec
mov
sub
inc
inc
mov
ds
xchg
es
ds
shlb
fisubl
jmp
adc
cltd
rcrb
add
pop
ds
imul
inc
mov
out
sbb
daa
add
sub
mov
fstpt
lock
adc
pop
jnp
add
je
dec
push
mov
arpl
jae
iret
push
cmp
loope
push
in
pop
in
cmp
mov
add
pushw
pusha
push
jle
mov
sbb
imul
out
sbb
test
jg
lcall
fisttpl
insb
adc
les
or
sub
int
inc
jnp
scas
push
inc
inc
mov
dec
lds
int
std
clc
mov
bound
adc
arpl
inc
bound
test
cld
divl
cltd
div
jmp
jbe
inc
cld
cmp
popf
sub
pushf
das
jl
dec
sub
push
fcomps
jl
subl
fwait
test
pop
xor
jl,pn
rcr
data16
ja
js
mov
insl
ds
shld
dec
js
outsb
jg
or
pop
mov
jbe
les
gs
imul
push
rorb
lcall
push
inc
push
dec
lret
das
mull
add
mov
aas
xchg
lock
jmp
repnz
cmp
ret
cltd
movsl
xchg
cmc
dec
lods
cmp
sub
xchg
xor
mov
stos
mov
mov
sub
popf
pop
jle
pop
int3
add
inc
or
xor
xor
cmp
add
loopne
pop
mov
fwait
jmp
pop
lods
dec
in
hlt
mov
cmp
mov
inc
lods
nop
add
cmpsb
insb
mov
mov
xlat
ss
jno
aad
ljmp
es
addr16
cld
enter
negb
sbb
out
and
mov
push
test
mov
inc
push
dec
nop
sbb
mov
jl
mov
mov
dec
mov
into
enter
jg
sub
mov
test
adc
sbb
xchg
cmp
jle
mov
mov
rcll
push
call
cmp
dec
mov
push
scas
cmp
push
mull
push
lock
call
xor
mov
inc
rolb
push
and
fisubrl
push
je
inc
loop
jns
dec
jbe
sbb
xor
mov
out
mov
pop
hlt
xchg
push
mov
inc
sub
insb
ret
fnsave
dec
or
xchg
mov
imul
mov
or
sub
pop
hlt
ljmp
fcomip
sbb
scas
push
mov
scas
addr16
ljmp
adc
cmp
inc
dec
or
or
xlat
push
rorl
lcall
and
adc
dec
or
push
lea
sbb
cmp
aaa
hlt
or
jno
loope
cmp
jnp
stc
jae
repz
shrl
inc
ss
addl
mov
mov
in
jp
and
mov
stos
cmc
mov
pop
testb
pop
adc
paddq
repz
es
rol
xchg
dec
sbb
addr16
insl
xchg
push
sub
sub
lret
addr16
and
test
fwait
das
push
xchg
aaa
xor
aam
addr16
or
rcrb
mov
lods
sub
dec
imul
imul
repnz
repz
shlb
mov
pop
nop
aas
cmp
xchg
ret
jle
cmpsb
stos
sbb
leave
inc
out
lret
adc
out
pop
adc
in
dec
aad
addl
dec
shlb
and
frstor
scas
mov
push
cmc
jecxz
push
movsb
ret
add
lea
pusha
fmull
cmp
mov
outsb
fbld
movsb
push
or
inc
lret
data16
out
pop
push
pop
cmpsb
in
stos
daa
fidivrs
scas
addr16
push
add
out
loop
adc
xor
adc
dec
push
fmull
ret
fmuls
jle
imul
incl
cwtl
cli
add
test
fisttpl
push
pop
xchg
shlb
adc
or
jno
add
mov
dec
adc
loopne
cmp
dec
add
rclb
pop
sbb
inc
loope
dec
mov
mov
add
dec
stc
add
sub
cs
mov
cmp
movsl
daa
push
xor
test
hlt
push
pop
sub
inc
xor
xor
aaa
clc
push
data16
adc
movl
inc
ror
out
pop
xor
and
pop
imul
ds
nop
and
cs
push
sub
addr16
cmc
frstor
testl
pop
or
and
mov
addr16
xchg
cmp
fwait
lock
xor
or
lods
inc
or
es
jp
scas
push
pop
test
adc
loopne
mov
push
subb
push
sub
lret
jl
sub
mov
xor
clc
movsb
fisttpll
jge
xchg
mov
mov
mov
ret
scas
cmpsb
and
mov
test
inc
dec
stc
bound
out
pop
test
fists
adc
add
adc
push
jg
push
icebp
repnz
dec
xchg
inc
pop
lcall
aad
aas
cmp
cli
adc
jno
xchg
jno
pusha
xor
cli
xchg
xor
mov
loopne
xchg
sbb
into
xchg
jns
les
push
pop
jmp
adc
dec
stc
jnp
push
pop
xchg
cmp
inc
ss
pop
daa
and
mov
call
add
jnp
movl
jns
inc
inc
dec
lds
dec
mov
xchg
pop
lods
out
pop
dec
dec
aaa
add
arpl
dec
scas
js
mov
mov
into
and
popf
popf
push
push
pop
or
jmp
in
jmp
pop
outsl
sti
orl
fdivs
adc
cmpsb
and
aam
test
dec
or
and
pusha
push
mov
xor
cmc
aad
std
ljmp
push
mov
xor
out
int
clc
outsl
push
call
inc
cli
pop
sbb
xor
xchg
sub
enter
pusha
pop
cli
add
cmp
sbb
andl
into
push
out
xchg
and
mov
ret
adc
insl
xchg
js
xchg
call
dec
push
xor
xchg
jno
ret
dec
gs
aaa
sub
mov
call
and
test
and
jb
into
jmp
and
pop
mov
push
mov
fmuls
cli
and
fwait
sbbl
push
or
sub
push
loopne
aaa
dec
push
xchg
je
jmp
shlb
scas
aas
pop
in
push
xchg
sbb
jle,pn
stos
inc
mov
push
negl
pushf
push
or
lret
fidivrl
fbstp
mov
add
dec
aam
dec
fs
push
and
fucomi
push
imul
outsb
cmp
sbbb
repnz
out
mov
inc
mov
bound
sbb
ds
mov
mov
loopne
iret
fdivl
xor
andb
adcb
js
xor
xlat
and
mov
pop
cmp
pop
mov
shlb
push
pop
inc
fucom
gs
das
jne
rclb
divl
inc
mov
jae
test
or
add
inc
aaa
ja
mov
orb
arpl
cmp
sbb
or
dec
xchg
outsl
push
stos
and
aam
imull
cmp
sahf
pop
and
imul
sbb
dec
lock
dec
pop
cmp
sbb
fildl
fimull
sbb
insl
sbb
out
sub
scas
mov
cmp
xchg
popa
out
jecxz
or
pop
ja
dec
call
dec
adc
sub
pop
sbb
ret
aam
add
repnz
or
and
xchg
lods
cmp
cs
idivl
mov
or
or
or
fucomi
je
xchg
sub
push
bound
jo
push
xor
int
xor
cli
js
adc
mov
or
test
stos
push
stos
xchg
popf
ret
subb
imulb
sbb
ds
out
cli
out
xchg
fwait
or
add
xor
and
negb
jbe
mov
mov
mov
add
sti
sub
outsl
and
jbe
addl
pop
xchg
stos
adcl
xchg
lods
mov
imull
in
xchg
sbb
ror
insb
sbb
fldl
sub
mov
push
adc
stos
jmp
test
and
les
jmp
ffreep
lods
in
hlt
mov
test
lods
imul
pop
inc
shr
adc
mov
mov
pushf
inc
adc
and
in
imul
les
int3
sub
mov
test
pushl
aam
adc
or
xchg
popa
xadd
jmp
push
or
pop
daa
xchg
add
or
neg
cmpsb
ficomps
push
add
rcll
sub
mov
cs
or
add
clc
pop
add
pop
js
ds
test
mov
xchg
fisttps
loope
lods
or
push
lret
aas
and
lret
nop
fisttpll
xlat
pop
adcb
inc
fdivl
mov
out
aad
addl
fdivrs
pushf
ds
push
jno
arpl
in
add
push
gs
imul
stc
fisubs
ja
xor
stos
push
jbe
repz
and
xchg
pop
or
subb
mov
mov
jecxz
add
lret
jmp
cld
in
movsl
mov
imul
mov
inc
sbb
sub
rcrl
dec
gs
xchg
jge
jno
sub
les
cmp
xor
sar
rolb
fwait
cmp
pop
aad
jp
stos
pop
sbb
add
daa
fdivs
adc
xchg
inc
push
pop
stos
push
iret
jns
in
je
xor
push
push
pop
mov
repnz
mov
pop
and
xor
add
sub
hlt
mov
mov
dec
bound
fxtract
icebp
push
mov
insb
adc
pop
jp
lock
xchg
int
jbe
add
mov
test
jp
gs
addr16
jmp
loopne
pop
mov
and
aad
jbe
sbb
std
test
sub
and
mov
cmp
mov
inc
and
cli
imul
xor
pop
pop
mov
nop
cltd
xor
hlt
scas
fwait
and
adc
mov
out
push
loopne
es
mov
xor
or
mov
aas
sti
lods
aad
mov
cmp
xchg
xchg
lods
ja
ljmp
cmp
adc
ja
xor
popa
stc
mov
push
rorb
and
add
inc
cmp
xchg
in
mov
mov
fisttps
mov
lods
add
daa
and
arpl
and
and
imul
inc
rolb
lahf
fistpll
cld
dec
andb
jg
sbb
psubusb
cs
or
jg
ja
inc
jge
in
sub
out
cmp
mov
ljmp
jae
and
dec
in
push
mov
rcrb
movsl
cmp
out
stos
sbb
lcall
xchg
jp
outsb
mov
ret
cmp
or
jmp
inc
add
jnp
into
push
push
cmp
imul
fidivrl
dec
jle
outsb
cltd
aas
pop
push
sahf
pop
jg
cli
lret
je
sbb
pop
sti
loopne
sti
popf
jg
mov
cld
push
push
jl
imul
mov
adcl
pop
leave
sbb
push
scas
movsl
push
mulb
jbe
cmp
cmp
and
jp
and
ja
leave
mov
adc
push
sahf
mov
popa
lock
sub
sub
push
dec
inc
mov
add
and
adc
sbb
dec
ja
xor
aad
in
mov
xor
push
and
push
jae
ficomps
dec
xchg
pop
scas
xor
loopne
push
push
cmp
aad
lds
sub
outsl
mov
ret
xor
sbb
mov
sbb
and
add
pop
fistpll
sbb
cs
inc
cmp
in
mov
lods
mov
push
stos
mov
mov
dec
mov
and
insl
sbb
sahf
sbb
cmp
mov
xlat
adc
and
aad
push
pop
mov
add
mov
into
dec
cs
xchg
stos
and
or
stos
pusha
mov
clc
fbld
inc
fidivl
sbb
out
iret
shll
pop
pop
jne
pop
negl
lods
push
and
ss
fmull
add
or
rorb
or
xor
xchg
xchg
imul
push
and
cltd
sub
nop
mov
fidivrl
test
call
fiadds
sbb
pop
jge
lods
adc
rorl
aaa
pop
mov
mov
add
adc
inc
movsb
enter
dec
mov
mov
adc
popf
pop
inc
daa
aam
addr16
cmp
test
sbb
fucomp
je
bound
insl
mov
push
fimuls
cvttps2pi
roll
pop
adcl
loop
sbb
xchg
mov
aaa
es
mov
sub
fxch
test
adc
out
into
mov
lods
js
push
jmp
mov
clc
mov
loop
ds
mov
mov
movsl
xor
imul
jno
sahf
mov
sbb
test
arpl
jb
cmpsb
loope
jle
fmuls
inc
ret
jg
inc
add
cmc
add
sbb
bound
push
popf
cmp
push
push
popf
jg
mov
inc
jns
jns
rclb
add
fsubrl
sub
flds
lahf
or
nop
cmc
inc
cs
inc
jge
or
add
sbb
in
jne
cwtl
jns
inc
mov
inc
dec
xlat
and
sub
push
pusha
or
test
pop
movsl
std
test
lret
pop
cwtl
push
lds
mov
inc
mov
arpl
jmp
inc
fidivs
adc
adc
in
push
push
test
adc
in
cwtl
movsb
mov
pop
and
mov
call
les
out
ljmp
xchg
adc
jle
and
sub
aas
stos
into
aad
push
pop
pop
add
push
or
subl
daa
ret
inc
sub
xor
sub
loop
jl
xchg
pop
lret
imul
stc
and
or
jb
popf
pop
cld
test
cmpsl
cmp
xor
xor
pop
or
shrl
stos
dec
dec
test
out
inc
ss
sub
and
push
adc
mul
out
shlb
cli
jmp
out
and
and
loope
mov
adc
fdivrs
imul
out
mov
dec
in
aad
loopne
aas
sub
push
push
in
loopne
push
add
sub
loop
mov
sbb
inc
push
dec
popa
mov
pmulhw
push
mov
jmp
adc
jns
jnp
sbb
dec
push
sub
daa
dec
or
sbb
add
ret
jne
repnz
adcl
mov
cmpsb
push
jmp
mov
in
cmpsl
rorl
clc
jbe
push
xor
insl
outsl
add
pop
out
insl
inc
sbb
mov
mov
or
cmp
mov
mov
or
jmp
inc
dec
call
lcall
lds
notb
jecxz
out
jnp
rclb
xor
jne
xchg
pop
adcb
mov
pusha
sub
mov
sub
in
into
push
nop
push
mov
scas
and
cmpsb
jo
loop
sub
loope
unpckhps
sbb
or
adc
mulb
inc
insl
pop
and
adcb
inc
mov
cmp
fsubrs
lock
jecxz
cmp
mov
cltd
mov
out
into
cmpsl
or
divb
fbstp
push
mov
jo
xchg
fsts
xchg
les
mov
leave
and
xor
bound
push
jno
push
jo
pop
mov
or
inc
mov
lds
mov
scas
aaa
xchg
push
cmc
adc
mov
cmp
and
and
bound
rolb
call
fbld
cs
das
add
scas
enter
hlt
jne
mov
and
mov
jnp
jle
sub
lret
xchg
arpl
add
test
gs
push
les
aaa
adc
mov
xor
out
xchg
dec
sub
dec
in
jns
mov
pop
lcall
das
stc
les
call
push
test
pushf
shl
mov
ljmp
bound
dec
iret
lea
push
int3
xor
push
inc
sti
cltd
mov
jbe
pop
mov
sbb
xor
xlat
mov
ficompl
sub
aam
and
add
jno
in
mov
xorb
jecxz
push
push
sti
pop
je
sbb
out
nop
mov
notl
add
daa
int
mov
xchg
cmpsl
cmpsb
loop
pop
in
outsl
push
cmc
dec
and
inc
and
and
hlt
add
gs
and
scas
push
lahf
js
jecxz
xlat
sbb
call
add
mov
or
and
cltd
add
popa
int
inc
out
jg
mov
shlb
mov
or
into
stos
add
lods
cmp
ss
add
scas
adc
data16
and
xor
mov
adc
rcll
repnz
cltd
push
xchg
repnz
js
xchg
cmp
xlat
iret
shl
or
cmpsl
xor
repnz
aad
jae
je
into
sbb
mov
rcll
stc
rcrb
loope
orb
push
in
fmuls
pop
aam
or
mov
shll
je
pop
adc
add
lock
or
ds
data16
sbb
fcmovb
jae
pop
out
xchg
enter
mov
loopne
jg
xor
addb
in
dec
loopne
out
mov
sbb
js
xchg
mov
pop
push
add
push
jns
mov
cmp
add
or
movl
pop
lahf
cmp
add
imul
push
enter
cltd
push
lret
cs
aaa
jo
mov
fisttps
pop
ljmp
leave
mov
pop
adc
fiadds
pop
push
jge
test
and
inc
hlt
jle
pop
sub
inc
fstpt
rorb
test
push
jge
imul
movsb
cs
pop
inc
ljmp
mov
lret
call
xor
and
push
mov
and
add
ljmp
scas
ss
inc
daa
dec
sbb
mov
add
rorb
fwait
xchg
inc
cmp
adc
push
stos
dec
insb
pop
xor
add
jmp
mov
in
fnstsw
inc
sbb
push
aaa
sahf
inc
xor
test
ret
je
pop
imull
ljmp
inc
inc
push
jno
ss
inc
cmp
sub
add
and
pop
mov
fcmovnb
xchg
lods
inc
call
repnz
lods
fldcw
dec
scas
cmp
lock
cli
lock
sub
ficoms
dec
aam
je
loopne
mov
jne
sbb
lret
xchg
enter
pop
testb
sbbl
fdivl
enter
popa
je
enter
xor
loop
out
lea
rol
popa
mov
and
sub
or
ds
mov
fcomp
and
mov
add
sub
fidivrl
add
sub
or
imull
pop
mov
loopne
push
dec
push
addb
mov
in
int
dec
pushf
cmp
sub
dec
dec
call
xchg
add
jb
insb
mov
hlt
adc
fisubs
out
gs
jle
cmp
and
jl
aam
push
cmp
bound
sbb
rcrb
mov
test
test
call
call
mov
pop
imul
ljmp
fildl
jge
shrb
mov
or
cmc
outsl
test
push
jmp
lret
loopne
cmp
and
orl
into
push
dec
jno
sarb
shr
stos
and
dec
jne
jbe
mov
push
jbe
in
push
xchg
xchg
pop
imul
in
int
aad
notb
repz
outsb
imul
pop
mov
push
sahf
push
pop
nop
jmp
sbb
push
and
daa
xchg
std
lcall
xor
pop
jmp
arpl
data16
sbb
lret
bound
xchg
pop
out
push
test
fwait
add
je
add
lret
inc
in
movsl
sbb
lret
in
jecxz
out
sti
or
push
inc
jne
xchg
lock
jle
inc
add
adcb
loop
dec
scas
lcall
adc
push
stos
adc
lock
sbb
cld
pusha
into
mov
xor
lret
insb
or
jae
jmp
sub
sbbb
imul
xor
jbe
popa
inc
add
test
sbb
adc
sbb
mov
iret
mov
sub
addb
data16
scas
in
sub
int
out
daa
mov
daa
dec
aas
sahf
add
sbb
xchg
dec
and
test
sbb
inc
rcll
hlt
push
mov
cmp
clc
mov
les
loop
mov
or
hlt
stc
xlat
inc
add
fimull
insb
pop
outsl
dec
popl
ljmp
mov
or
icebp
jne
lock
enter
std
pop
pop
lret
push
stos
inc
add
rcr
scas
fsts
leave
push
cmp
pop
jmp
popl
inc
cwtl
xchg
dec
pop
js
cli
in
mov
cli
sbb
aas
iret
add
jb
ret
loop
in
xor
jb
aas
cwtl
daa
push
dec
jne
aas
popf
push
push
fldl
mov
ret
nop
fnstcw
add
jg
and
xchg
ret
sub
insl
mov
xor
adc
call
sarl
lahf
shrl
xchg
xchg
lds
rcrl
add
pop
inc
cmp
ljmp
pop
icebp
jae
std
popf
insl
sub
cmc
test
adc
test
sbb
adc
divb
jbe
imul
pop
iret
sub
bsr
jnp
hlt
add
or
and
lahf
cmova
pop
mov
jns
cwtl
data16
repz
sbb
test
mov
push
push
cwtl
lret
call
lahf
dec
xchg
jmp
mov
and
lock
push
imul
dec
or
inc
jno
fisubl
inc
xor
xor
ljmp
xor
rcr
jle
or
dec
sbb
stc
cmpsb
cwtl
imul
jg
lret
or
dec
cmp
dec
mov
out
pop
shr
movsb
mov
inc
lcall
insl
pop
push
cli
andb
scas
lret
cmp
cmp
mov
insl
ret
mov
out
xor
arpl
mov
jl
jno
mov
mov
fisubrl
dec
inc
mov
fstpt
in
inc
inc
repnz
fidivrl
cltd
loop
mov
push
jl
aam
lods
mov
mov
dec
lock
mov
aas
insb
lret
imul
sbb
mov
orb
or
mov
popf
rolb
dec
addb
jb
sbb
adc
fnstenv
inc
movsb
mov
push
lret
faddl
lret
push
add
add
enter
pusha
int
cli
sub
sub
enter
xor
int
mov
inc
psubb
xor
fnstcw
sarb
mov
jnp
out
and
clc
outsb
mov
xchg
cmpsb
inc
xchg
imul
and
jg
aad
leave
pop
adc
stos
mov
pop
pop
pop
lret
jno,pn
jo
fwait
jb
cs
testl
push
adc
pop
loopne
xor
cmp
mov
mov
popaw
repnz
xchg
data16
enter
sub
fldcw
addr16
decl
mov
js
mov
fidivrl
mov
imul
dec
and
test
and
aas
repz
xor
ljmp
jmp
aam
inc
dec
add
and
xchg
call
aaa
dec
dec
jg
outsb
mov
fdivrl
out
js
add
jl
fucom
cmpsl
or
rorl
dec
mov
mov
and
sti
jns
aad
jno
adc
fsubp
sbb
es
inc
sub
cbtw
mov
bnd
ja
inc
insl
scas
xchg
das
int
xchg
mov
and
ljmp
nop
scas
jnp
pop
add
xorb
mov
es
cmp
add
pusha
cwtl
and
js
mov
imul
mov
pop
es
push
add
mov
push
out
cmp
cmp
jmp
stos
adc
pop
cmp
loopne
fwait
dec
xchg
lods
cmpb
dec
fadd
mov
movsb
mov
push
test
stos
rorl
pop
ret
arpl
push
pop
pop
inc
cmp
inc
gs
add
and
mov
fcomps
bsf
adc
adc
inc
mov
jecxz
jo
in
hlt
sub
fnstenv
imul
fadds
jae
and
mov
mov
stos
push
push
cmp
cmpsb
push
push
lods
xchg
sub
pop
adc
sar
sbbb
adc
inc
or
inc
mov
dec
aaa
and
and
aas
mov
shl
popf
inc
jae
jae
push
fmul
sub
pop
and
daa
test
dec
jae
push
and
jecxz
pop
cmc
jecxz
ss
mov
adc
jle
gs
sbb
sahf
pushl
inc
jle
mov
adc
dec
cmp
insb
xor
xchg
pop
outsb
lds
xchg
stos
orb
pusha
adc
lcall
jbe
lahf
cmpsb
mov
loop
sub
inc
push
xchg
outsl
push
push
in
adc
lcall
mov
test
inc
and
jbe
mov
mov
add
and
stc
sbb
int
test
pop
add
cmc
jmp
imul
movsb
xchg
xchg
mov
jne
or
sbb
add
aam
loope
ss
andl
adc
pop
mov
jp
jecxz
adc
dec
cld
popf
repz
imul
and
sub
jno
dec
or
cmc
jae
push
sti
adc
sub
ret
add
jmp
lcall
sbb
test
dec
scas
pop
dec
cs
adc
stos
dec
jmp
aad
add
pop
dec
pop
lret
out
inc
loopne
mov
and
mov
fisttps
push
repnz
fwait
lods
and
js
or
dec
push
ret
movsl
popa
loop
mov
pop
rcrb
pop
cmp
inc
mov
cmp
dec
xchg
mov
pop
sub
clc
cltd
adc
xor
xlat
js
xor
inc
inc
add
mov
xorb
push
adc
pop
aad
insl
xor
jne
jmp
out
in
mov
push
add
sub
in
sub
negl
push
sbb
sub
or
inc
mov
iret
pop
xor
add
jns
dec
lock
test
leave
pusha
dec
shl
add
stc
jo
cmp
sub
daa
xlat
xchg
mov
inc
ja
adc
fisttpll
and
fwait
xchg
push
add
scas
add
out
lahf
decb
and
pop
hlt
xchg
mov
test
negl
in
js
lea
aam
push
fldcw
mov
pop
loop
outsb
cmp
test
loope
call
adc
cmp
xchg
cld
pusha
xchg
dec
push
into
mov
lret
fsubrs
jle
mov
ds
mov
xchg
aam
sbb
jl
ja
or
xor
inc
sub
push
jle,pn
inc
xchg
stos
dec
xorb
pop
cwtl
xchg
inc
xor
je
loopne
cmc
pop
sbb
dec
shrb
call
mov
mov
fcmovnb
mov
dec
xor
inc
mov
rorl
jae
outsl
add
mov
fildll
js
pushf
int3
pop
stos
insl
in
push
mov
mov
repnz
int
leave
nop
cmp
popf
xchg
aam
and
jbe
dec
rorl
jg
in
push
dec
mul
push
pop
rorl
out
xchg
dec
shll
rcl
sti
ret
xor
or
cmp
sub
data16
ljmp
inc
sub
sub
lods
mov
sub
push
cmc
aaa
xchg
lods
test
in
lods
imul
or
sbb
js
mov
js
lods
insb
jno
jmp
enter
enter
popa
xor
and
pushw
test
xchg
sbb
and
cmpb
cltd
lret
dec
lret
jno
rorb
sti
xchg
dec
fcoms
ret
push
lds
stos
in
add
gs
fildl
add
cmp
arpl
cwtl
paddd
cmpl
adc
sbb
int3
dec
push
jne
xor
pop
add
mov
daa
xor
xchg
sti
mov
pop
mov
cwtl
fs
out
mov
out
ss
dec
scas
mov
cmp
faddl
ret
xor
cltd
pop
aam
and
loop
stos
jae
add
jo
mov
xorl
mov
sbb
cmc
and
jle
cmpl
xchg
xor
aam
imul
orb
jns
pop
pop
out
aaa
cvtdq2ps
mov
add
xchg
add
out
movsb
cli
pop
jp
push
iret
fnstsw
sub
add
pop
pushf
jns
cltd
lods
cmpsl
in
mov
pop
shr
mov
dec
lea
jo
pop
xor
sub
mov
pop
and
xchg
push
jne
lock
rcrb
repz
clc
ficoms
mov
mov
movsl
add
inc
mov
sbb
mov
xchg
cmp
ljmp
jecxz
jge
shl
fidivl
pop
imul
sahf
push
dec
push
in
sbb
cltd
add
jmp
xchg
push
out
mov
xchg
int3
movsb
fcmovb
adc
and
ljmp
push
push
mov
mov
push
leave
and
adc
test
bound
imul
cmp
cmc
fsubs
aad
cmpsl
cltd
and
js
xchg
lcall
push
test
decl
mov
or
sub
int3
dec
imul
insb
movsl
or
lcall
xlat
test
xchg
mov
mov
ja
je
fwait
add
int3
dec
inc
outsb
dec
call
pop
sub
jmp
sbbb
mov
sti
int3
sarl
mov
loopne
dec
stos
jno
rcrb
loopne
add
mov
mov
lods
fimuls
fadds
stos
mov
push
mov
cs
jmp
in
ds
xor
dec
push
jmp
xor
sbb
add
loopne
shlb
jne
lods
vmread
out
stos
cmp
mov
sub
insb
jb
jae
jg
pop
xor
pop
pop
sub
rolb
mov
mov
and
pop
insl
pop
sbb
inc
scas
cltd
jge
mov
je
cmc
clc
pusha
outsb
jp
jb
gs
xchg
dec
sbb
xchg
cmp
mov
sbb
push
cld
inc
loope
push
cli
aaa
mov
pushf
inc
inc
mov
fwait
dec
out
mov
push
pop
std
jne
out
xchg
movsb
mov
scas
cltd
sbb
mov
push
inc
insb
add
push
sti
pusha
pushf
push
lock
cmp
testl
pop
mov
sub
xchg
mov
add
add
ja
cmp
cmpsb
lret
sub
icebp
in
or
dec
pushf
push
mov
shll
fdivrs
xchg
cld
enter
dec
pop
mov
push
rorb
and
not
mov
test
shrb
adc
icebp
cmp
xchg
hlt
xchg
dec
push
inc
divl
test
out
push
subb
pop
ds
pop
inc
inc
mov
inc
jecxz
jns
xchg
aaa
mov
jne
xchg
mov
hlt
enter
sbb
pop
push
pop
cmp
shrb
pusha
add
in
xchg
les
arpl
sbb
sti
pop
aam
out
daa
insl
inc
sbb
mov
dec
push
jmp
push
xchg
es
fcmovu
mov
and
jns
cmpsb
dec
mov
xchg
icebp
sysret
lret
test
test
push
push
inc
or
mov
mov
shll
iret
lret
xchg
jle
movl
enter
lods
xor
loope
cmpsl
push
xor
pop
dec
xchg
lock
mov
jl
mov
adc
aaa
mov
sti
xlat
inc
icebp
enter
outsb
jne
popa
mov
and
xor
adc
idivl
fsubrl
add
in
inc
xor
cmp
mov
pop
fcmovne
loope
scas
test
cmp
out
and
js
pop
add
cmp
add
insl
dec
in
leave
out
xor
stos
inc
mov
xor
inc
repz
sbb
add
in
cld
and
pop
scas
addr16
shrb
sub
mov
push
divl
addr16
inc
cmp
int3
ret
xor
jp
pop
idiv
push
in
jnp
lcall
lret
outsb
repnz
test
outsl
das
jbe
fistl
je
xchg
inc
sub
gs
xor
testw
and
call
shrb
xor
jl
and
lods
cmc
dec
and
sbb
shlb
dec
pop
fcmovnbe
cmp
xor
dec
rorb
mov
repnz
xor
enter
js
gs
push
xchg
xchg
das
xor
aam
push
cmpb
sub
pop
mov
push
push
int
mov
leave
xchg
or
sub
mov
lret
cs
pusha
in
stos
sbb
pushf
ja
jmp
mov
les
das
aam
xchg
ds
xor
sub
push
jge
mov
mov
fdivs
test
dec
jo
sub
xlat
aam
pushl
xchg
cmpsl
cltd
std
adc
sub
vandnps
cwtl
mov
add
shrl
in
pusha
push
sub
xchg
leave
cwtl
ljmp
pop
dec
jmp
sbb
push
das
xor
in
stos
pusha
jns
aam
jns
lods
call
aas
sub
ds
test
xchg
mov
lds
bnd
fwait
add
inc
and
pop
push
mov
jmp
lods
ret
jg
and
out
dec
or
pop
roll
lods
pop
out
mov
fnstenv
mov
loopne
lods
add
sahf
lret
xchg
loopne
lret
loopne
rolb
push
xchg
lahf
pop
and
add
xor
jo
scas
jno
inc
sub
fs
or
arpl
pop
stos
and
fcoms
sar
adc
movsb
jge
hlt
fistpll
lret
push
hlt
or
sub
icebp
call
inc
lcall
xchg
and
sub
leave
cmpsb
inc
bound
loope
xchg
jg
dec
mov
int
addr16
push
push
xchg
cmp
enter
scas
mov
test
sbb
js
and
sub
mov
mulb
outsb
fdivp
ret
cmpl
loopne
dec
out
stc
mov
je
imul
adc
clc
jbe
imul
pop
lds
push
and
pop
mov
call
pop
iret
sub
inc
out
cmpsb
sbbl
stos
mov
cmp
adc
arpl
cmp
out
adc
out
inc
cmp
push
repnz
mov
mov
jne
sti
pop
jl
fists
mov
push
jecxz
push
femms
fidivrs
cld
sbb
mov
and
adcl
jmp
adc
sahf
pop
fcomps
ret
inc
dec
push
or
in
pusha
xchg
sti
sbb
sbb
js
sub
inc
jno
and
in
mov
xor
outsl
mov
pop
xchg
push
mov
adc
daa
in
add
ljmp
cwtl
mov
dec
mov
push
pop
adc
pop
shll
or
mov
push
and
js
xor
lcall
mov
jl
fs
int3
mov
jns
repnz
hlt
inc
pop
xchg
popa
das
movsl
push
cmc
bt
testl
adc
insl
sti
ret
js
lret
rcr
ljmp
add
inc
pop
pop
mov
test
or
and
lods
pop
mov
cs
ss
jns
aam
dec
cmp
mov
xor
shlb
pop
add
lret
jno
sbb
cmp
xor
jnp
and
or
sahf
sub
in
frstor
test
or
jno
mov
inc
dec
lret
push
push
icebp
mov
dec
cmpsb
mov
loope
repnz
lock
pusha
std
clc
mov
les
pop
dec
test
push
mov
push
bound
pop
jno
cmp
loope
adc
mov
cmp
ss
cld
repz
lcall
mov
into
mov
out
cmp
push
lock
adcb
repz
ficoms
push
sbb
fsubl
mov
jmp
mov
inc
sub
nop
test
jp
dec
lods
shl
xchg
mov
test
mov
push
dec
pop
ret
dec
out
mov
scas
addb
cmc
inc
popa
dec
mov
adc
mov
je
rep
cmp
mov
inc
das
cmp
sbb
adc
lds
call
es
andb
inc
dec
sub
and
loopne
mov
mov
imul
cmpsb
popf
or
incl
lcall
ds
out
lret
mov
mov
adc
sub
out
sbb
pop
enter
mov
insb
sbb
arpl
xchg
sub
mov
je
push
fsubs
xchg
fisttpll
test
ds
push
cmpsb
mov
es
lret
and
fs
cmp
shl
shl
in
cltd
or
test
insl
sbb
mov
loope
xor
inc
sahf
xchg
rorl
data16
xchg
push
mov
repnz
mov
xchg
outsl
lret
cltd
test
push
or
into
sub
fs
sbb
data16
jo
test
clc
mov
xchg
lock
inc
sub
sbb
sbb
jle
orl
subb
mov
sbb
and
jmp
mov
repnz
fwait
out
xor
outsl
jp
fdivs
les
pop
push
dec
pop
in
insb
mov
pop
scas
and
test
daa
cmpsb
push
sub
lods
mov
jns
int3
mov
inc
adc
jae
and
in
mov
jno
xorb
arpl
pusha
pushf
xchg
pop
loope
outsb
subl
jecxz,pt
add
in
mov
jno
mov
jns
loopne
test
icebp
mov
mov
lret
mov
das
add
mov
inc
push
adc
hlt
mov
pop
imul
loopne
inc
cmpsb
inc
jns
and
imul
sbb
dec
in
stos
stc
aam
ljmp
jns
adc
sub
ja
mov
mov
jne
inc
stos
xchg
lret
jne
adc
les
cs
fiadds
nop
mulb
inc
push
jmp
adc
into
nop
aas
hlt
lock
scas
xchg
xchg
or
imul
xchg
push
or
mov
cmpsl
push
mov
call
hlt
movsl
pop
jae
cmp
rolb
into
sub
in
mov
sahf
imul
adc
notl
lock
outsb
sub
jo
mov
jmp
adc
xor
jecxz
jg
and
imul
ret
xchg
or
cmc
mov
pop
inc
popa
cmp
jno
lods
imul
xor
fisubl
push
xchg
popf
mov
ss
bound
jae
sarb
insb
rorb
cltd
stos
int3
inc
xchg
out
negl
icebp
rcr
sbb
and
cmp
add
cmp
pusha
xor
inc
mov
push
inc
js
mov
aad
xchg
das
das
xchg
push
imul
push
test
sahf
insb
les
inc
pop
punpckhdq
cltd
movsb
lods
cwtl
rolb
inc
pop
stc
mov
cs
mov
sub
push
fisttps
push
sub
mov
jp
xor
or
sbbl
mov
jmp
mov
sbb
jle
push
cmp
or
in
cmp
jg
pop
std
adcb
push
je
popf
fwait
or
cmpsl
pop
arpl
insb
jmp
push
repz
mov
fidivrl
pop
in
sbb
imul
movsl
hlt
inc
stos
jle
fscale
mov
or
xchg
pop
loop
out
mov
lods
pcmpgtw
dec
inc
sub
dec
pop
sub
je
les
cmp
nop
loopne
iret
jp
cmp
xchg
fcom
movsb
enter
aam
rclb
sub
jb
pop
movsb
addr16
or
les
and
cltd
inc
stos
shlb
cmp
xchg
and
roll
aaa
repnz
aaa
fcomp
das
add
mov
movsl
mov
pop
cmpsb
stc
xchg
pop
lret
xchg
mov
xchg
mov
rcrl
cwtl
sbb
dec
fadds
add
stos
fnstcw
push
ja
stos
fdivl
inc
xchg
sub
sbb
inc
or
mov
ror
sbb
xchg
movsl
jmp
scas
xor
adc
xor
ljmp
lds
add
repnz
and
test
jno
cwtl
addr16
sti
dec
jge
mov
add
pusha
dec
jmp
push
les
push
push
mov
xchg
jecxz
jnp
push
mov
xor
mov
aad
sahf
push
filds
xor
cmp
sbb
sbb
aas
xor
insl
test
mov
adc
loope
movsl
lock
add
pop
sbb
test
mov
push
jbe
xor
and
fidivrl
push
repz
mov
and
dec
push
dec
pushf
repnz
mov
imul
and
or
pop
dec
adc
test
iret
jl
pop
iret
sbb
mov
lret
sub
push
jo
daa
sub
jmp
and
lods
incb
jbe
adc
cmp
addb
cmpsb
mov
roll
inc
mov
outsl
int
jmp
jmp
dec
cmp
xorb
push
aad
sub
je
jge
imul
mov
inc
int3
in
xchg
xchg
pop
jns
arpl
subb
xchg
sarb
subl
xor
stos
repnz
in
xchg
jmp
ret
movsl
push
cmp
aad
xor
fiaddl
sbb
in
imul
nop
lds
rcrb
and
out
mov
stc
fisttpl
popa
adc
mov
fdivr
add
jo
sub
outsl
xor
aad
or
js
cmp
and
imul
and
out
movsl
lods
dec
xchg
iret
out
jg
push
lahf
xchg
dec
push
loope
ja
adc
sbb
pop
test
fidivs
and
ret
xchg
lret
or
xchg
and
inc
test
mov
mov
dec
sub
dec
pushf
je
jl
mov
xor
std
dec
outsb
xchg
mov
dec
aas
sbb
jns
gs
sarl
js
call
imul
pop
mov
jbe
leave
test
lods
pop
outsb
fldenv
jne
xor
inc
xlat
pop
xchg
or
pop
xchg
cmp
and
xor
rorb
or
adc
sbb
and
jae
add
imull
xchg
mov
mov
xor
ficoml
lea
lret
inc
sahf
sarb
lds
pop
arpl
sbb
or
sahf
movsl
out
mov
fmuls
rcrl
mov
ja
adc
xchg
jns
mov
mov
iret
rclb
dec
add
or
xchg
xor
lcall
pop
jp
mov
mov
adc
loop
iret
dec
or
mov
outsb
in
sub
out
add
push
ljmp
repnz
movsl
mov
xor
aaa
lret
lcall
pop
dec
sub
xorl
repnz
cli
adcl
fcomp
push
sbb
gs
cmp
popa
dec
mov
pop
cli
push
sbb
mov
push
mov
gs
sub
iret
pop
cmp
in
mov
adc
push
sub
inc
fld
ret
test
pop
or
pushf
nop
xor
cmp
pop
or
outsb
leave
mov
jo
jns
stos
push
cmpb
stos
out
fsubrl
insl
mov
cmp
mov
mov
mov
outsb
inc
outsb
and
sub
lods
cmp
xchg
add
rcr
int3
mov
out
jnp
iret
int3
sbb
xchg
fidivrl
adc
dec
xorb
fs
xchg
bound
lods
and
push
pop
lea
mov
push
jb
ljmp
xor
std
sar
cmp
loop
insb
scas
imul
sbb
mov
rclb
in
push
sub
jl
scas
aas
in
xchg
jp
cmp
int
dec
mov
lret
push
inc
out
test
xchg
mov
sbb
repz
packsswb
pop
sub
test
jecxz
jmp
sub
rcrl
scas
jmp
loop
xchg
inc
popl
push
mov
cmpsb
cmp
icebp
dec
jg
pusha
or
iret
inc
pop
fisubrs
adc
sub
std
mov
mov
lcall
outsl
addl
test
mov
je
mov
pop
fdivrl
lds
cltd
pop
jb
lret
ficompl
je
cmp
shlb
push
push
cmp
jnp
jle
dec
adc
sahf
or
sub
ffree
jmp
cli
mov
ret
add
pop
enter
cmc
pushf
test
mov
mov
adc
cld
andl
loop
test
mov
ja
jmp
pop
fnsave
sub
sub
call
pop
sub
add
dec
xor
les
call
xor
dec
cmp
xor
pop
data16
sbb
mov
xchg
rcll
scas
stc
push
int3
int
dec
pop
inc
orl
mov
adc
cmp
aas
pop
adc
pop
andb
das
shrb
setbe
sub
push
fcmovnu
jo
movsl
adcl
sub
fidivrl
js
repz
add
mov
js
sbb
pushf
jns
or
add
popf
data16
mov
mov
sub
and
aaa
and
in
jp
sbb
and
push
mov
or
jo
pavgb
scas
dec
inc
mov
and
mov
push
cmpsb
sub
mov
leave
push
sub
mov
cmpsb
sub
mov
popf
push
or
sbb
dec
sti
push
rcrb
ja
imulb
stc
cmpsl
cmp
or
inc
or
adcb
stc
ret
adc
add
push
inc
mov
inc
loop
inc
jbe,pn
jne
push
pop
out
cmp
sahf
mov
lods
fucomip
mov
xchg
push
fiadds
jg
insb
cmp
or
push
jns
bound
xchg
in
dec
add
xor
sub
xchg
addr16
movsl
loopne
xchg
fadd
mov
dec
outsl
push
or
popa
adc
lahf
jg
in
into
adc
or
stos
outsl
dec
mov
adc
ret
iret
repnz
cmpsb
adc
sarl
popf
push
push
imul
jb
xchg
aam
add
mov
cmpsl
mov
std
roll
in
in
outsl
xor
lret
jl
js
imul
cmp
cmc
dec
cmpsb
xchg
xchg
insb
in
or
cmp
shrb
in
mov
dec
dec
sub
roll
add
stos
sub
gs
mov
icebp
mov
cmp
mov
fs
adc
xor
in
jge
xchg
rclb
data16
icebp
add
sbb
lds
push
out
pop
xor
ljmp
jg
or
pop
xor
sub
data16
pop
bound
stc
push
cltd
xchg
adc
and
sub
out
add
pop
flds
dec
imul
int3
and
inc
rolb
cmpsl
lcall
mov
fiaddl
inc
mov
cli
sbb
mov
test
jno
and
jns
mov
mov
jge
or
out
or
push
fadds
dec
mov
and
sti
push
cmp
push
push
testb
popa
imul
ljmp
mov
jns
push
pop
dec
pop
jecxz
sub
inc
mov
sub
in
mov
sbb
wbinvd
cmp
add
test
ja
lret
sub
rcll
push
clc
popf
mov
mov
xor
push
test
and
call
movl
push
xor
aam
inc
push
movswl
cmp
das
xor
lahf
inc
lea
das
cmpsb
daa
imul
cli
sahf
pop
mov
out
dec
ret
or
mov
sar
jns
lea
cmp
jo
test
jae
aas
ffreep
push
cmp
mov
push
movsl
mov
xor
hlt
sbb
mov
sbb
pop
jno
add
hlt
ds
outsl
inc
mov
rcrl
ficompl
ret
lods
cmp
sub
pop
sub
out
into
xor
push
jp
add
popa
insb
mov
lret
aaa
addr16
insl
test
mov
sub
push
push
test
mov
int
mov
inc
cmp
popf
mov
inc
cmp
pop
mov
test
dec
cmc
xchg
idivl
test
cli
mov
daa
xor
loop
scas
mov
inc
sahf
mov
cmpsb
ficoms
mov
push
stc
test
outsb
mov
mov
cmp
or
cltd
jp
xchg
rorb
int3
dec
xchg
test
add
add
inc
xchg
mov
es
cmp
sar
ret
sub
push
jae
es
lock
in
icebp
mov
les
xlat
lahf
cmc
test
inc
outsl
jle
cmp
adc
int
jae
add
int
movsb
or
lcall
in
mov
xchg
adc
loopne
jo
aaa
das
inc
sbb
outsb
addb
jmp
lods
jns
adc
lahf
iret
daa
mov
pmulhw
jmp
xor
dec
iret
jl
or
jmp
roll
sbb
and
mov
dec
jb
dec
push
les
pop
xor
dec
sbb
ret
rorb
lods
jo
les
lods
xchg
mov
leave
dec
mov
out
and
dec
lea
mov
cwtl
pop
and
ds
mov
and
repz
rcrb
ds
cmp
stos
mov
bound
sub
arpl
sbb
pop
das
push
cltd
or
scas
push
loopne
in
add
icebp
push
in
mov
stos
aas
xchg
cmpsb
pop
dec
and
inc
insl
fwait
sarb
popf
pop
or
mov
shll
lock
inc
clc
icebp
ss
push
inc
loope
repz
hlt
push
inc
ss
adc
cmp
loope
adc
add
rorb
cmc
push
pop
popf
mov
push
adc
xorl
pop
mov
and
xchg
fldl
testb
push
je
mov
mov
cmp
outsl
pop
hlt
and
jge
sub
cmpsb
fstpl
add
pop
loop
imul
pop
mov
mov
aam
adc
ror
lock
sti
sub
push
scas
inc
jnp
into
add
pop
cmp
xor
lahf
jge
mov
stc
fnsave
imul
fidivrs
xchg
xchg
in
push
imul
or
push
ficoml
or
sbb
mov
sbb
dec
jb
andl
test
mov
out
pop
out
mov
mov
out
mov
pushf
sarb
out
in
push
jno
cvtpi2ps
jae
fistpll
mov
int3
fdiv
in
xchg
in
inc
mov
inc
call
adc
inc
mov
jle
decl
mov
shrl
mov
pop
fld
cmpsb
lods
inc
scas
xchg
or
or
in
call
dec
out
rcll
lods
cmpb
xor
inc
dec
lods
lahf
push
mov
dec
lret
pusha
adc
and
dec
hlt
mov
pop
xorb
and
xchg
addl
fldcw
shl
ficoms
shrl
std
and
cltd
jmp
das
enter
cmpsb
dec
xor
mov
cmp
movsb
int3
push
cli
sub
jns
jnp
xchg
mov
sbb
xor
mov
or
push
xchg
stc
shrb
mov
xchg
sti
or
jge
mov
nop
or
pushf
pop
dec
fstp
and
rorb
xchg
xor
mov
pop
in
xor
aam
das
xchg
xor
xor
cli
lcall
jmp
repnz
out
aad
test
movsl
cmp
pop
inc
ds
sub
dec
push
xor
xor
test
stos
xor
cmp
push
push
dec
loope
or
push
out
das
cld
xchg
cmp
xor
or
cmp
out
or
adcl
outsl
cli
clc
jno
push
and
jo
push
add
andl
or
or
fstpl
pop
in
inc
aaa
popf
sti
dec
sar
or
in
iret
fs
pcmpgtd
pop
mov
enter
ds
mov
rclb
sbb
xchg
mov
aas
in
sub
into
push
ret
sub
mov
repz
cmp
cmp
in
push
movsl
xchg
inc
and
iret
loope
mov
or
jo
mov
cmp
inc
popa
mov
mov
xor
cmp
push
xchg
add
cmp
and
enter
negb
xchg
push
and
jecxz
cs
pop
mov
fcomps
mov
rclb
lods
cld
xchg
mov
dec
pop
iret
push
xchg
jb
fsubrl
shrb
bound
xchg
ds
enter
popa
sub
mov
lds
cmp
in
out
mov
mov
lds
sbb
out
lret
mov
fimull
cmp
testl
rclb
popa
mov
mov
les
or
push
fldenv
movsl
ret
mov
adc
popa
loopne
or
and
push
sub
xor
and
jbe
add
jg
out
imul
in
sub
das
iret
adc
xlat
push
mov
lods
ja
dec
sub
mov
xchg
sbb
orl
mov
xor
mov
movsb
push
test
popf
xor
rcrl
shl
xor
inc
jg
cmpsl
scas
jmp
lea
lcall
jmp
test
mov
cmp
jne
mov
mov
ret
lods
xor
adc
rcll
push
jp
mov
fimull
pushf
js
arpl
adc
or
jle
push
adc
jle
fisubs
push
sub
mov
mov
sub
adcb
test
add
or
sldt
incl
add
add
add
add
adc
or
add
or
add
add
add
add
inc
add
cmp
add
rorb
pop
add
or
dec
add
mov
inc
add
mov
add
add
add
push
add
adc
push
adc
sub
add
add
mov
les
stos
notb
dec
push
aam
mov
cld
ja
leave
fs
popf
repnz
adc
xor
jl
fidivl
clc
push
cmp
xchg
int
iret
sbb
mov
add
scas
test
lahf
negb
mov
loope
add
andl
aaa
mov
les
xor
adc
mov
out
push
int
push
cli
cmpsl
xchg
outsl
cli
pop
pop
in
mov
sti
test
jo
outsb
jmp
cmc
negl
mov
sbb
add
or
mov
lret
fldl
out
dec
cmp
xor
or
add
test
xor
mov
in
rcrb
adc
cmpsl
mov
push
cwtl
pop
cmp
mov
cmpb
xor
mov
cmpsb
cmp
and
fmuls
push
popa
outsb
js
push
jnp
inc
imul
rclb
jbe
jl
notl
sub
cmpsl
sub
jl
mov
and
lahf
sub
jo
test
mov
add
pop
jns
mov
sub
add
push
mov
pop
movsb
and
xor
sahf
push
data16
fildll
sti
aaa
mov
xor
push
cltd
mov
pop
xor
clc
fcomip
add
arpl
aad
shrb
add
or
notb
add
mov
pusha
out
dec
cmovl
outsl
lret
cmp
pop
sub
mov
daa
rclb
stc
mov
jne
movsl
repz
sbb
lods
mov
mov
cld
lods
adc
test
fwait
stos
lock
ss
xchg
jg
adc
and
pop
scas
loopne
call
mov
push
pop
enter
outsl
jmp
jnp
pmaddwd
repz
outsb
nop
push
cmpsb
xchg
call
leave
pop
sub
int3
in
into
dec
adc
jmp
cld
cs
or
loop
into
mov
pusha
mov
sbb
add
ja
xor
xchg
lods
aam
mov
test
nop
int
pop
or
cs
mov
popa
movsl
jae
test
iret
pushf
jae
push
sub
sub
and
cmpb
xchg
jo
cmpl
push
and
pop
cmp
jmp
pop
xchg
jbe
mov
mov
jb
adc
mov
pop
mov
in
pop
xchg
mov
fisttps
cmp
sub
xchg
jns
or
pop
sub
push
cs
stos
pop
inc
mov
mov
xchg
decl
add
subl
mov
loope
fcoml
mov
scas
adc
inc
adc
mov
ret
or
jns
cli
mov
ljmp
loopne
pop
push
dec
or
pop
fildll
inc
fcmovne
data16
cmc
xchg
cmp
dec
dec
mov
in
xor
jle
add
xor
sub
xchg
sub
rcl
rolb
pop
add
jae
daa
aam
int
es
jp
pop
push
shrb
add
cmp
jp
jg
or
cmpsl
inc
pop
push
inc
out
leave
aad
lock
push
imul
ffreep
lea
mov
test
icebp
cwtl
cmp
or
mov
aam
mov
ss
shl
mov
ret
aas
and
cwtl
add
adc
xor
cltd
and
icebp
lcall
xchg
clc
sbb
hlt
jmp
sub
fimuls
add
push
rcrb
sub
cmp
sti
test
in
loope
adc
pop
push
aad
out
ret
push
lods
inc
mov
dec
xor
int3
stos
inc
imul
sbb
rcrb
dec
inc
js
testl
js
imul
movsl
sbbb
push
leave
ss
mov
dec
aas
inc
pop
push
push
cmp
dec
xchg
out
dec
rcll
insb
xchg
pushf
jp
adc
aad
adc
test
mov
int3
xchg
fidivl
test
or
arpl
mov
xchg
mov
lock
add
or
arpl
ss
fldcw
vpavgb
xor
jbe
push
cmp
push
mov
mov
adc
das
stos
stos
lcall
jne
test
lods
add
mov
xchg
call
pushf
and
sub
mov
jle
jns
insl
dec
jle
in
shll
inc
rol
orb
filds
mov
js,pt
xor
jbe
mov
xor
dec
pop
add
enter
fs
sbbb
cltd
hlt
imul
push
sahf
inc
es
call
les
fnstcw
hlt
sbb
mov
addr16
fcmovbe
mov
mov
das
mov
vpunpcklqdq
sbb
adc
scas
nop
test
movsl
cltd
mov
test
add
adc
into
cli
jns
mov
push
inc
cltd
jae
leave
aam
iret
sbb
call
fldt
out
cmc
push
pop
mov
mov
jns
add
inc
pop
sub
mov
xchg
nop
adc
fsubrl
push
rorl
rol
pusha
sub
pop
clc
xchg
dec
fsubrs
dec
push
scas
dec
and
jno
xchg
lahf
pop
jmp
outsl
and
pop
jbe
mov
imul
pushf
cli
jns
xor
movsl
mov
loope
pop
pop
or
out
pcmpgtb
nop
and
and
jg
adc
sub
pop
dec
mov
insl
dec
stos
loop
push
sub
or
lods
enter
ljmp
pop
inc
xchg
pop
or
sbb
pop
out
imul
out
aad
imulb
jg
rorl
dec
ret
test
lods
mov
push
dec
ljmp
add
jb
loop
jo
sbb
xor
pop
popf
sbb
jae
pop
imul
xchg
outsl
out
jns
scas
ds
shll
aam
test
sbb
test
mov
jg
stos
movsl
lea
cwtl
dec
jmp
rolb
fidivl
ljmp
pusha
jns
mov
and
fsubl
push
idivb
dec
lods
fildl
pop
stc
add
cmc
gs
fldt
nop
push
mov
lods
mov
shlb
jne
jg
sti
and
mov
je
xchg
fmuls
sub
rorl
lods
push
push
out
and
adc
sti
push
aad
in
test
and
dec
dec
sbb
sti
cmpsb
pop
int
push
cltd
stc
mov
jo
mov
adc
pushf
jbe
aam
pop
jae
aam
xchg
mov
jle
inc
pop
scas
cmp
ret
cmp
mov
call
mov
adc
sub
push
mov
xor
cwtl
sbb
daa
sbb
adc
cmp
push
dec
xor
push
xor
mov
int
xchg
mov
push
lea
rorl
roll
xor
loopne
inc
pop
or
cmc
xchg
mov
push
mov
push
mov
push
jno
mov
or
fisubs
lods
mov
push
sarb
rcrl
mov
shlb
stc
jge
jb
lea
sbb
in
mov
subl
cmp
and
pop
mov
push
or
jg
lods
dec
inc
or
loopne
in
jecxz
adc
loopne
dec
fidivrl
cmpsb
sbb
jl
lahf
dec
push
je
sub
dec
stos
xchg
ss
mov
or
push
and
call
pop
pop
dec
add
pop
movsb
mov
les
add
sub
pop
inc
xlat
into
jge
push
cmp
lods
out
incl
rcrl
push
mov
lods
lahf
testl
cmp
mov
cmc
jmp
stos
lahf
dec
fsubr
ret
movsl
add
out
mov
mov
push
cmpsl
mov
andb
jl
lret
sub
jl
pop
movsbl
movsl
or
pop
mov
or
xchg
pop
cmpsl
jp
xor
rcrl
pop
into
ljmp
imul
pop
inc
jae
stos
daa
ret
add
lods
test
pop
es
jle
test
dec
pop
xor
ss
dec
mov
je
adcl
in
dec
dec
and
jmp
ljmp
xchg
sbb
xchg
dec
insl
inc
out
xor
test
sub
test
push
test
jo
inc
call
dec
dec
mov
js
loop
lcall
mov
mov
jecxz
fsubs
nop
adc
adc
fadds
daa
cmpsl
lods
lock
out
test
nop
mov
movsl
int3
mov
dec
mov
or
out
test
jl
pop
mov
imul
xchg
sbb
push
sub
mov
stos
cmp
call
add
mov
out
ljmp
addr16
xor
push
mov
sub
js
and
nop
fwait
xor
cwtl
mul
jno
xor
sub
movsl
mov
cmc
in
in
popa
ss
or
and
pop
neg
inc
cs
insl
hlt
and
pop
and
popf
sub
inc
or
mov
or
mov
pushf
dec
dec
stos
stos
inc
xor
or
cli
xchg
push
out
loop
lahf
inc
adc
fcoms
mov
test
stos
inc
pop
int3
xor
aam
addr16
outsl
dec
dec
fbld
push
jge
pop
sub
aad
cld
pop
or
or
icebp
cmpsb
shl
adc
sub
xor
movsb
mov
ja
loop
aaa
mov
or
dec
call
sbb
sub
ret
adc
mov
loope
fnstcw
cmp
lahf
mov
add
int
leave
push
fwait
pusha
aas
aas
lods
mov
rcll
pop
fistl
dec
sub
addl
icebp
movsb
divb
sbb
jecxz
cld
test
out
lock
cmp
fimuls
repz
movsb
jecxz
mov
ret
push
push
xchg
cld
xor
in
xchg
jno
jmp
test
inc
fwait
hlt
int
push
mov
cmp
fst
call
stos
pushf
std
cltd
fwait
cmpsb
and
mov
dec
cmp
mov
push
fnstcw
inc
push
aam
je
mov
or
xchg
cmp
add
ljmp
sbb
xorb
push
and
bnd
stos
cld
fcomp
sbb
sub
sbb
sbb
dec
in
fs
inc
xlat
mov
xchg
test
stos
sub
pop
in
mov
sbb
jo
inc
sbb
sub
in
dec
sub
out
push
dec
cmp
nop
icebp
dec
adc
pop
movsl
sbb
lret
loopne
clc
jge
rorl
outsl
mov
test
and
xchg
sbb
dec
loop
rolb
push
add
jle
dec
add
les
dec
xchg
fld
imul
or
js
or
mov
lods
test
clc
push
cmp
lret
xor
js
cmp
and
cmpsl
movsl
push
clc
push
movsl
xchg
mov
add
in
cmp
mov
xchg
out
movq
or
in
insl
ret
inc
cmp
mov
mov
es
fisubrs
das
cli
push
xchg
push
jb
xor
dec
jl
sub
clc
mov
xor
mov
mov
cltd
mov
stc
jo
ja
adc
add
loopne
sub
outsb
inc
fdivrp
mov
aas
imul
push
call
cmpxchg
or
mov
mov
jg
popa
sbb
fdivr
les
neg
pop
pop
sub
jge
add
add
sti
add
mov
pushf
mov
adc
jle
push
jb
mov
mov
add
adc
movsl
inc
cmp
pusha
out
ret
enter
iret
pop
repnz
sbb
fistpl
hlt
imul
adc
cld
mov
clc
loopne
call
mov
decb
mov
fwait
mov
sbb
js
pop
cmpsb
push
xor
sub
sub
mov
xchg
cwtl
dec
mov
fcmovb
lret
or
jae
les
outsl
lds
mov
cmp
loopne
push
pop
gs
mov
insb
hlt
mov
les
pop
xor
sub
pop
iret
rorl
mov
hlt
pop
mov
xor
adc
push
stos
cli
and
fistl
pusha
aas
add
cmp
pushf
shlb
fiadds
inc
test
or
and
mov
push
call
je
and
imul
scas
arpl
mov
dec
add
adc
lea
in
mov
jmp
pop
inc
jmp
outsb
loope
cmc
or
jnp
add
sub
mov
cmc
test
cmp
add
clc
orb
xchg
mov
fstpt
repnz
push
push
xor
jge
jl
loopne
loope
cmpsl
sti
cmp
cs
cmp
dec
mov
inc
call
loope
lds
xchg
inc
dec
testb
cmpsl
rcr
push
mov
mov
stos
mov
and
repz
fmull
lods
shl
sub
dec
sub
fildl
sub
mov
nop
and
sub
sbb
xchg
add
das
test
imul
cwtl
cmp
or
inc
cmp
inc
shlb
clc
and
aam
sti
mov
jmp
inc
orb
adc
ficoms
ljmp
or
nop
stos
inc
sub
mov
out
xor
xlat
addr16
inc
or
loop
xchg
jmp
mov
cld
ret
or
mov
repz
inc
dec
rcl
es
add
add
sti
fs
fs
imul
pop
jo
call
das
sbb
aaa
push
jne
pop
jno
lcall
lret
jns
mov
lock
xor
mov
cmp
daa
imul
les
and
into
dec
sub
adc
mov
les
enter
mov
test
or
int
inc
cld
adc
pop
stos
mov
loope
push
add
cmovns
scas
adc
adc
adc
jge
dec
xchg
cwtl
pop
pop
fldenv
aad
and
and
aam
sbb
enter
ljmp
out
dec
leave
repnz
and
jmp
pop
stc
jnp
mov
mov
pop
xor
imul
jnp
test
jnp
inc
inc
cmp
dec
mov
dec
jg
cmp
out
lret
int3
jle
adc
cld
xchg
es
jmp
std
push
imul
sarl
scas
sub
ds
inc
and
push
mov
daa
mov
sbb
jp
jge
fsubl
push
mov
fcoml
mov
sub
mov
dec
cmp
loop
dec
sbb
or
int
es
outsb
in
insb
ljmp
testl
add
pop
push
dec
lea
mov
pop
das
mov
in
xchg
loopne
jo
xchg
inc
sub
fnstenv
mov
pop
imul
xchg
sti
xchg
sti
mov
neg
cwtl
xchg
decl
lcall
cld
mov
jge
push
into
test
cmpsl
pusha
mov
and
push
adc
mov
dec
popa
push
clc
pop
pop
scas
js
movsl
xor
aam
mov
mov
out
insl
test
push
fldcw
push
scas
lret
stc
push
inc
push
das
cmpsl
inc
mov
or
movsb
fstpl
push
ds
dec
jns
sbb
jge
inc
pop
or
stos
dec
and
dec
mov
lret
jne
add
test
popa
lcall
call
push
ficompl
xor
popa
adc
ljmp
js
jp
ds
cwtl
pop
xlat
pop
cmpsb
xlat
jl
iret
or
shl
xchg
push
push
mov
mov
mov
outsb
push
test
fld
lcall
sbb
cmp
push
jb
mov
jae
stc
bound
mov
or
lret
aas
arpl
jne
repnz
mov
into
into
filds
inc
mov
repnz
iret
sub
in
mov
sub
sbb
adc
sbb
lcall
ret
jg
pop
lcall
inc
ds
rol
cltd
or
int
cld
cmpsb
sbb
lret
adc
sbb
mov
lcall
jo
pop
dec
mov
mov
mov
pop
js
enter
int3
out
pop
or
xor
gs
pop
mov
ret
sub
dec
xor
pusha
arpl
andb
adc
test
adc
inc
adc
sbb
xchg
js
cmpsb
loopne
pop
cmpl
jp
and
insb
jmp
sarl
jbe
aad
cmc
push
outsl
xchg
pusha
dec
xchg
fstpl
cmp
inc
leave
sbb
cwtl
es
push
or
sbb
cmc
fs
jecxz
xorb
xor
rcrl
sahf
add
dec
ud1
inc
pop
in
mov
mov
sbb
rclb
xchg
push
int
lds
mov
stos
cld
dec
nop
stos
je
mov
mov
and
inc
ret
mov
and
sbb
clc
add
sub
push
pop
sbb
add
scas
fwait
cltd
jmp
imulb
out
js
or
outsb
int3
mov
push
inc
inc
cmc
cmc
dec
pop
cmp
cmp
cmp
sub
shl
xchg
jmp
xchg
jo
jp
ss
mov
stos
push
cwtl
stos
out
std
jecxz
clc
cmp
sahf
cli
xchg
cmpsl
inc
xor
lods
cmp
stos
cltd
or
int
clc
fstpt
and
hlt
bound
out
cltd
ja
fwait
imul
outsl
pop
and
jge
mov
mov
mov
and
add
int
jne
jne
sbb
lea
jo
out
jp
lahf
push
bnd
loope
and
pop
imul
fbstp
insb
mov
sub
call
enter
or
popa
rcrb
jae
loopne
fstpt
sbb
or
repnz
sbb
mov
cli
mov
nop
es
inc
lahf
shrd
mov
mov
divb
dec
mov
or
push
ds
inc
mov
cmp
cmpsb
xchg
ss
lea
daa
xor
in
pop
push
je
xchg
push
dec
or
and
rclb
xor
iret
aam
outsl
sbb
inc
jns
stc
lea
in
nop
adc
inc
stos
pop
jmp
faddp
add
push
repz
lds
pop
fistl
sbb
hlt
insl
div
cmp
insl
sub
ret
cmp
mov
adc
popf
scas
inc
jp
fcomip
aam
mov
xor
sub
sbb
or
or
push
mov
pop
ja
dec
filds
sub
sbb
es
call
das
pushf
or
mov
push
xorl
stc
mov
rcrl
dec
jmp
add
lock
out
das
scas
mov
pop
pop
data16
sbb
dec
mov
cmpsb
std
and
jmp
insb
adc
shlb
popf
js
cmpsb
adc
and
in
stc
jne
cli
sarb
shrb
sub
push
daa
dec
and
popf
xchg
mov
sbb
int3
les
flds
cmp
daa
mov
cli
fucomi
insb
push
jns
sub
mov
int3
adc
add
sbb
xchg
mov
pop
push
negb
pop
or
sub
iret
sub
test
push
fildll
faddl
xor
outsb
fld
inc
popa
sbb
dec
clc
cmp
std
stc
test
in
pop
ss
imul
test
lds
cmc
inc
sub
xchg
mov
add
test
lods
rcrl
adc
movsl
and
ss
jmp
fisubrs
sub
hlt
test
mov
inc
pop
out
dec
loopne
mov
push
mov
loopne
sub
lock
aaa
push
inc
insl
jbe
xchg
pop
imul
ret
test
sahf
shl
ljmp
xchg
cmpsb
dec
mov
push
ljmp
nop
lods
icebp
jbe
cmp
out
bsr
lcall
mov
mov
adc
lahf
mov
repnz
jno
out
rcl
or
sbb
cmc
and
xor
int
sbb
fadd
sub
push
fsub
add
out
out
xchg
xor
sub
cmp
lods
bound
dec
inc
mov
in
pop
fcmovnb
les
into
into
or
loope
jnp,pn
gs
adc
out
incb
inc
cmp
icebp
jge
or
jno
add
push
cmp
dec
inc
ficompl
or
lret
cmp
pushf
nop
cli
add
cs
lock
xchg
inc
int
aad
push
lret
lret
shll
pop
out
pop
and
add
mov
xchg
mov
dec
sub
add
mov
in
out
add
add
sti
inc
jle
xchg
and
cmc
mov
jb
jns
sar
addr16
add
jg
sti
testl
test
mov
pop
pop
aaa
in
cmp
aad
push
inc
inc
mov
bound
jno
es
arpl
mov
xchg
and
sub
sub
call
dec
pop
mov
xor
jbe
call
push
and
mov
js
pop
adc
aaa
cmp
sub
ljmp
jmp
mov
dec
fld
ret
pop
jl
mov
xor
fistpll
mov
leave
ret
je
xchg
pop
mov
sbb
jo
mov
ljmp
pop
ret
fists
xor
inc
movsb
iret
jmp
push
adc
add
bound
in
sub
js
popl
inc
les
lahf
push
mov
xor
adc
jb
xchg
arpl
test
into
ss
mov
lcall
out
cmp
arpl
xchg
cli
sbb
std
mov
ss
sub
es
add
sbbb
push
pop
insb
push
or
mov
jno
pop
mov
pop
add
jno
cmp
clc
loope
mov
mov
sub
sbbl
sub
lods
out
popa
testl
fs
add
fisttpl
dec
test
sub
pop
int
ss
xor
jle
mov
loop
cmp
push
mov
xor
clc
sbb
mov
out
outsb
xor
and
mov
clc
bnd
mov
add
mov
push
dec
stos
inc
pop
and
fmull
xchg
ret
cs
data16
push
mov
loope
cs
xchg
xor
mov
mov
add
es
xor
jnp
add
mov
fldl
aam
out
dec
xchg
cmp
shll
lahf
lods
in
ljmp
sbb
mov
cld
arpl
mov
gs
inc
add
stos
je
int3
repz
pop
jnp
scas
addr16
data16
lock
xchg
mov
push
in
imul
mov
outsb
xor
push
mov
xor
add
jb
pushf
ja
lea
gs
jbe
sbb
repz
mov
pop
std
mov
cmp
sti
add
insb
fdivl
jno
bound
cltd
mov
mov
cmp
mov
and
xchg
shlb
enter
adc
push
aas
cld
adc
sub
bound
xchg
add
mov
movlps
mov
add
daa
fadd
lds
mov
pop
shlb
es
mov
ljmp
test
in
fisttpl
add
jne
int
or
xchg
je
faddl
sti
jo
stos
xchg
rolb
sahf
insl
sarl
outsb
fimull
notl
loope
pop
cld
imul
ret
push
es
mov
or
mov
stos
jne
add
push
loope
xchg
data16
cmc
cmpsl
orb
xor
push
fdivs
pop
int3
push
test
xchg
sbb
pop
mov
pop
je
xchg
mov
xlat
adc
and
pusha
lods
adc
addr16
jp
jg
pop
in
xchg
out
outsb
push
add
iret
fs
scas
mov
jle
adc
clc
xor
mov
in
pop
mov
mov
push
mov
dec
jle
shlb
adc
enter
jecxz
enter
jns
add
adc
mov
std
add
outsl
frstor
mov
pop
in
cmp
mov
cld
push
mov
sarl
dec
dec
loope
movsl
test
jo
fdivl
push
jge
sub
sbb
sarb
cld
add
xor
mov
sub
dec
push
inc
repnz
mov
sub
call
mov
in
jnp
mov
pushf
jno
jmp
js
pop
lret
into
fsub
ljmp
ja
xchg
out
push
pop
popf
scas
mov
mov
or
lcall
cmpsl
jge
mov
outsl
fisubrl
cmp
lcall
bound
fnstenv
jns
cmp
xor
sbbb
dec
cs
dec
arpl
pop
jg
ss
mov
mov
in
and
test
cmp
rcl
lods
jbe
inc
lcall
enter
dec
arpl
sahf
sbb
loopne
jns
sbb
mov
adc
push
pop
inc
adc
test
push
lock
neg
pop
rclb
push
xor
sbb
inc
in
aas
cmc
loope
dec
jbe
jns
shlb
cmp
sub
add
ret
imul
pop
xor
pop
cmp
mov
fldln2
ficoml
sub
xor
enter
pop
push
incl
and
arpl
and
ret
andb
loope
inc
mov
pop
jmp
imul
or
dec
mov
cmc
mov
cmpsb
shrl
mov
and
aad
dec
ret
mov
and
fwait
xchg
cmp
mov
in
jns
dec
jnp
lds
mov
test
les
mov
add
and
rolb
jns
jno
loopne
mov
mov
lea
into
fdivs
inc
mov
icebp
xor
xor
jecxz
mov
lock
jecxz
mov
in
sub
xlat
pop
jae
lock
xchg
movsb
loopne
push
cmc
aam
lret
je
rcll
ljmp
out
gs
dec
mov
fidivs
cmp
jb
decb
push
test
push
sti
cmpsl
adc
sub
mov
mov
add
jo,pt
adc
xor
ret
xor
push
and
ss
jne
add
ret
dec
jmp
int
mov
pop
pop
mov
icebp
dec
dec
addr16
shr
xor
fidivrs
in
cwtl
push
orl
mov
test
mov
jmp
in
mov
inc
pop
idivl
mov
push
jg
add
js
ffreep
inc
cmp
gs
mov
mulb
cld
imul
repz
push
aas
ja
and
and
mov
push
sbb
dec
push
popa
xchg
xchg
jge
dec
loop
cmp
jmp
pop
lods
dec
jmp
and
mov
hlt
and
jge
cli
gs
imul
push
jge
fidivrs
fsubrl
push
or
frstor
or
fdivs
push
in
mov
gs
cld
sub
mov
mov
or
sarb
clc
sbbb
lods
inc
popf
addr16
es
dec
bound
push
xchg
aaa
sub
out
jmp
jl
pop
clc
cmpsl
popa
dec
or
xchg
faddl
lods
int3
lret
scas
fs
and
push
and
or
add
sub
cmp
movsb
pop
inc
cmp
pop
mov
push
ljmp
jle
xchg
cmp
testl
add
in
jbe
mov
cltd
mov
and
scas
pop
mov
add
mov
add
pushf
imul
add
xor
push
push
adc
push
pop
mov
cli
jmp
xor
push
mov
leave
es
push
push
stc
cs
add
stos
mov
test
loop
popa
fsub
pop
and
xor
imul
insb
es
xchg
in
mov
icebp
cld
pop
sbb
jno
inc
inc
push
xor
lret
mov
push
testb
mov
sar
inc
cli
or
stc
push
xchg
mov
fwait
pop
sbbb
daa
mov
outsl
jg
arpl
cld
cld
pop
fsubs
cmpsb
scas
scas
fsubrs
inc
cmp
push
jmp
sbb
mov
jne
in
dec
inc
jge
shrb
test
dec
in
mov
repz
cmp
mov
cmpsl
into
shlb
xchg
int
jns
fisttpl
jo
mov
adc
add
push
xor
cwtl
xor
lahf
mov
out
fildl
fisubs
shrb
je
or
cmpsl
in
pop
sbb
mov
inc
xchg
pusha
lods
xchg
dec
mov
hlt
out
nop
push
inc
cs
sahf
decl
je
cmpsl
aas
cli
cmp
push
js
dec
nop
and
adc
das
mov
inc
icebp
sub
test
je
add
xchg
ss
push
mov
subl
sub
add
cmpsl
jne
jo
pop
loopne
cmpsb
and
pop
jns
pop
add
notl
cmp
mov
xor
xor
in
scas
dec
ja
jo
push
sarl
fstpt
sbb
push
sbb
sub
and
es
pusha
or
inc
test
add
lcall
adc
sbb
xchg
mov
sahf
jb
pushf
sti
sbb
or
loopne
push
es
mov
pop
sbb
fs
out
jb
insl
xor
popl
xor
sub
sub
in
subb
jno
mov
decb
and
rol
icebp
insl
js
or
idivb
jno
data16
xor
cmc
mov
in
lret
test
sbb
inc
add
and
dec
sub
push
hlt
xor
das
push
xchg
aam
cs
xor
lds
into
jb
sub
jae
sub
lea
push
push
aam
jg
pop
dec
fsubl
in
fsubrs
mov
add
mov
xor
mul
or
xorb
loope
nop
pushf
cmp
ss
mov
mov
mov
and
test
add
jae
movsl
cltd
and
and
cld
dec
gs
ds
add
jb
xor
mov
lds
pop
and
orl
stc
cmpsl
dec
push
jb
jg
adcl
loop
loope
sub
or
test
mov
rorl
dec
cmp
xchg
adc
ficoml
cmp
scas
dec
test
sub
out
xor
push
adc
mov
or
testb
dec
mov
ljmp
enter
jno
ljmp
and
fdivrs
jp
mov
imul
adc
xchg
add
mov
lods
pop
xchg
ja
xchg
adc
cmp
jmp
pop
add
subl
inc
hlt
adc
sbb
jmp
push
pusha
sub
sub
stc
inc
sti
in
and
mov
lea
in
roll
dec
repnz
and
lcall
cmp
jl
pop
pop
popa
mov
pop
jle
int
icebp
lea
stc
fsts
push
sub
inc
sub
mov
mov
pop
jne
out
or
fnstcw
in
mov
outsl
fildl
and
push
add
sub
loop
sbb
and
push
sub
and
add
dec
idiv
sbb
fiaddl
mov
lds
outsb
insb
stos
push
mov
fldcw
sbb
add
fcmovnbe
add
js
sub
inc
and
adc
jp
and
push
cmc
jnp
mov
shll
jecxz
and
cmp
subb
xchg
cli
mov
ret
fs
xchg
lcall
xchg
adc
xor
mov
cmpsl
pop
mov
cmp
add
cli
push
inc
mull
test
jp
xchg
inc
pop
or
sub
sub
ret
in
test
into
mov
xchg
sbb
outsl
sub
push
sub
push
xchg
loope
dec
je,pn
pop
push
mov
pop
inc
push
bnd
fmuls
cwtl
mov
inc
fbld
outsl
jle
fists
out
inc
outsl
aaa
cltd
nop
leave
scas
jne
push
jnp
pop
test
push
aad
push
scas
lret
cltd
incl
mov
dec
push
mov
scas
sub
sub
dec
mov
or
loop
dec
xchg
cmp
out
mov
sub
or
test
pop
ljmp
xchg
js
sbb
mov
xchg
ljmp
repz
dec
mov
mov
ret
and
push
hlt
inc
neg
xchg
mov
push
mov
cmp
and
jbe
fildl
lods
dec
dec
rcl
fs
pop
sbb
in
sbb
add
sbb
arpl
inc
sub
jl
fwait
add
aas
inc
mov
in
mulb
sahf
cld
sub
fsts
sahf
xor
and
mov
pop
adc
dec
xchg
push
into
sbb
aaa
test
inc
or
lret
cmp
push
cmp
push
pop
sbb
inc
dec
into
out
in
fldenv
test
mov
xor
icebp
adc
jne
push
addr16
pop
push
add
outsb
out
jbe
inc
push
lock
insl
rclb
icebp
add
mov
push
xchg
das
in
mov
xchg
push
cmp
cs
scas
in
icebp
cmp
jo
add
push
adc
push
adc
cwtl
or
pop
xor
mov
adc
lods
xor
mov
inc
lret
mov
xor
add
rcrl
mov
stc
orl
aaa
xlat
dec
nop
dec
xorb
repz
adc
into
stos
xorl
sbb
test
loope
add
sub
pop
sub
mov
jg
sub
push
lock
push
pushf
arpl
cmc
add
xor
cmp
xchg
clc
pop
call
mov
neg
fmul
jnp
addr16
sub
adc
insb
cmpsb
int
cmpsb
test
aad
jecxz
ficomps
rcrb
rolb
lahf
jge
mov
jle
jns
dec
je
mov
cwtl
and
rcr
inc
or
push
jne
xchg
jp
in
mulb
xchg
adc
addl
xchg
sub
adc
cs
mov
out
mov
or
fs
mov
cmpsl
clc
cwtl
out
xor
mov
mov
aas
jg,pn
aaa
pop
add
std
cli
or
mov
dec
xchg
jle
scas
and
pop
push
inc
aad
cmp
push
mov
pop
cmpsb
xor
es
xor
add
mov
js
add
faddl
mov
push
decb
or
push
mov
andl
dec
lret
outsb
fs
sbb
and
fadds
scas
push
xor
push
popa
mov
and
dec
test
cmp
cmp
out
leave
mov
fsub
or
jle
add
xchg
stc
nop
stos
sub
sub
orl
or
and
sbb
and
insb
nopl
jle
mov
addb
pop
das
add
mov
call
stc
mov
loopne
inc
hlt
leave
es
rclb
xchg
cmp
xchg
add
add
ja
jmp
inc
or
jp
cwtl
lahf
mov
aad
and
icebp
lock
jl
stos
and
pop
movsl
mov
push
or
fsubs
adc
out
dec
fwait
mov
mov
dec
enter
inc
faddl
and
jge
fnstcw
mov
xchg
add
and
subb
inc
enter
ja
push
lret
imul
incb
and
test
mov
mov
push
jecxz
dec
aad
andb
mov
adc
cwtl
mov
cwtl
jns
stos
repz
pop
cwtl
sub
and
scas
push
sub
push
pop
push
outsl
add
pop
sbbl
subb
and
aas
rorb
push
push
adc
aas
inc
pushf
pop
and
and
mov
cmp
fimull
pusha
gs
push
mov
subb
das
pop
js
mov
mov
fmul
add
xlat
cmp
mov
test
cmp
loop
cmp
cmp
icebp
adc
setbe
out
scas
dec
fnsave
mov
stc
lds
cmp
enter
jl
fildl
sbb
push
inc
xchg
adc
jmp
pushf
mov
xchg
mov
add
mov
std
out
mov
cmp
adc
lret
ret
jl
xchg
lods
aas
movsl
mov
adc
int3
push
sub
jle
pop
rclb
jb
mov
jg
sbb
fdivl
add
fdivs
orl
call
mov
sti
push
call
xlat
fstps
dec
cld
pop
or
pop
out
push
stos
ret
inc
cmp
rolb
xor
pusha
out
add
aad
ret
out
or
sbb
sbb
bound
test
dec
push
gs
scas
fwait
rcrb
aad
xor
in
sbb
addl
call
out
mov
popf
mov
shrb
ss
stc
push
xchg
repz
xchg
mov
jmp
ds
ret
mov
ror
gs
inc
enter
jne
in
sbb
mov
xchg
adc
subb
arpl
mov
or
jl
and
pop
jae
pop
cli
movsb
mov
ror
mov
test
or
jle
sar
add
loopne
rcr
sub
lahf
pop
fnsave
test
pop
fwait
rorb
sub
and
fsubs
mov
jbe
sbb
sub
fsts
fs
repnz
loopne
shrb
mov
jo
dec
stos
xchg
mov
out
mov
inc
push
fldenv
testb
out
mov
pop
jnp
icebp
out
rolb
out
and
dec
jp
popa
es
std
subl
xchg
data16
sub
hlt
hlt
ret
jle
xchg
inc
mov
and
push
dec
mov
pushf
pop
sub
cwtl
sub
or
cli
pop
cmp
pop
mov
pop
xor
mov
xorl
or
stos
inc
add
xchg
enter
push
mov
inc
or
push
and
cmpsl
sub
xchg
jmp
mov
fcoml
loope
sbb
mov
push
add
je
inc
outsl
sarl
dec
loop
popf
gs
mov
ret
cwtl
add
cmovae
xchg
push
dec
negb
push
cmp
movsb
test
loopne
pop
sbb
inc
xchg
cmp
aam
dec
adc
push
xor
mov
xor
cmpsl
out
fcmovu
jne
and
aam
add
in
jmp
cmp
inc
lret
or
fiadds
lock
pop
lea
lahf
testb
mov
movsb
push
test
add
test
sub
jo
jno
into
packuswb
clc
xlat
jecxz
rep
jno
cmp
je
out
push
and
popf
popf
mov
lea
push
sbb
cmpsl
jl
xor
jno
pusha
dec
lret
cmp
ss
aam
sub
xchg
out
loopne
sbb
mov
aas
repz
sub
imul
sub
push
inc
push
adcb
outsb
push
cmpsl
stos
mov
pushf
test
push
push
cmp
sbb
fs
xchg
hlt
push
or
lock
mov
outsb
std
or
testb
add
repz
enter
xchg
mov
addr16
jne
fisubrl
int3
aaa
les
jecxz
outsl
add
loopne
pop
adc
and
mov
test
repz
pop
gs
pop
scas
pop
and
xor
and
cmp
scas
and
jl
or
ffree
stc
mov
push
adc
rcrb
fldenv
stos
js
mov
lods
or
sub
pop
or
loopne
pop
mov
ds
lods
jl
int
or
dec
sbbl
jle
in
mov
mov
mul
xchg
cli
inc
cmc
and
rcrb
xor
out
int
mov
pop
enter
sub
mov
cmp
out
push
cmp
js
mov
and
xor
push
sub
shrb
push
adc
mov
mov
mov
inc
fcoml
cmpsl
mov
ret
adc
xchg
repnz
or
ds
sbb
lds
sub
pusha
aas
es
lcall
cli
icebp
mov
ret
lods
inc
pop
call
dec
lds
cs
sub
mov
test
std
xor
dec
or
jmp
dec
and
pop
inc
in
cld
dec
out
mov
ja
mov
mov
jp
sbb
test
imul
jne
or
movsb
in
or
and
sbb
cld
sub
clc
inc
mov
hlt
scas
outsb
jno
daa
inc
cmp
mov
rorb
popf
sbbl
sub
lods
sbb
lods
or
ret
xor
loope
sub
mov
mov
push
outsb
mov
sbb
iret
push
loopne
sub
call
jp
pushf
mov
gs
add
flds
jp
xor
mov
jno
push
mov
in
lock
pop
clc
mov
cmpsl
stos
jae,pn
pop
in
xor
pop
ret
pop
stc
lretw
out
sbb
jg
mov
test
faddp
xchg
xchg
xor
sbb
add
test
ljmp
xchg
mov
pop
jae
pop
testl
or
sbb
xchg
dec
mov
adc
sub
mov
dec
mov
and
jecxz
cli
and
in
mov
pusha
ret
pop
cs
loopne
sbb
dec
inc
inc
jle
cmp
jne
dec
dec
cwtl
sub
xchg
leave
movb
data16
clc
sbb
jge
add
inc
and
ror
popa
adcl
inc
push
pushf
mov
daa
and
imul
test
cmp
stos
into
jae
cmp
jno
jae
imul
jno
pop
mov
xor
out
push
cmpsl
insl
dec
in
cs
jecxz
inc
call
mov
inc
jle
sbb
adc
imul
push
movsl
aam
jl
movsl
sub
in
push
in
or
adc
imul
sub
jb
mov
out
int
inc
jl
or
inc
xor
inc
lods
push
mov
sub
add
clc
fiaddl
pop
negb
movsl
jo
inc
cmp
stos
cmpsb
mov
gs
mov
test
sbb
sub
filds
cmc
aas
mov
mov
dec
push
push
cli
mov
or
xchg
or
leave
sub
xchg
lret
mov
xchg
mov
push
pop
bound
and
dec
sub
shlb
mov
push
adc
hlt
out
jmp
mov
xchg
mov
sub
sub
shll
stc
imulb
mov
sbb
inc
xchg
pop
add
xchg
inc
jbe
xor
mov
mov
xor
dec
aas
mov
bound
dec
enter
scas
lds
add
mov
push
fisubl
shll
aam
jmp
dec
aam
adc
testl
and
sub
mov
dec
out
xor
ficoms
push
jmp
outsb
ret
adc
or
test
loop
or
sub
cwtl
mov
rcrl
aaa
xor
mov
adcb
fisttpl
mov
repnz
pop
cli
and
into
pop
into
mov
rcrl
out
call
cli
cmp
in
sbb
or
pushf
push
push
rclb
xchg
xor
adc
outsl
sahf
jne
xchg
adc
adc
or
xchg
pop
and
es
xlat
fcmovbe
jl
push
sbb
and
xor
call
or
mov
and
xchg
cmp
aas
shlb
sbb
ja
sti
sarl
fmul
rorl
mov
les
scas
cs
adc
cmpsl
stos
neg
adc
test
sub
jmp
fimull
jp,pt
jns
stc
dec
aad
filds
stos
aad
movsb
adc
xor
jne
lcall
add
cmpsl
add
lcall
push
jno
outsb
sub
add
sti
push
mov
mov
xor
sub
cmp
push
out
nop
lods
cltd
jmp
mov
shl
mov
dec
mov
out
xchg
iret
sub
jae
jbe
add
nop
cmpsb
sbb
stc
and
jle
fwait
push
adc
xor
push
test
mov
add
jo
push
jne
ss
addr16
push
add
and
and
add
cmp
ja
adc
pop
ret
insl
xor
mov
lahf
shrl
fdiv
push
jp
fiaddl
or
xchg
push
pop
sbb
push
jp
sti
jmp
addr16
in
aam
das
stos
enter
inc
mov
mov
mov
sub
sub
adc
add
test
mov
push
pop
jmp
xchg
in
dec
xor
loope
loope
xor
jne
mov
xlat
add
and
inc
inc
aam
jge
lret
insl
loope
pusha
mov
and
xor
adc
lret
cwtl
int
push
out
pushl
jne
pushl
repz
fbstp
adc
rcll
roll
xor
inc
mov
fwait
push
in
imul
mov
sbb
lods
test
imul
add
testb
cmpsb
push
sahf
xchg
cli
mov
shl
inc
lcall
mov
mov
scas
pushf
movsb
pop
sarb
add
enter
cwtl
mov
cs
mov
in
hlt
rcr
ss
jo
mov
cmp
sbb
xor
cmp
sti
adc
xchg
jle
aas
lret
fwait
icebp
dec
push
mov
mov
or
add
ds
or
or
dec
xor
xchg
or
jg
cmp
mov
dec
shll
sub
cs
inc
hlt
and
ja
test
mov
mov
xor
adc
mov
jne
push
es
pop
addr16
repz
pop
gs
mov
sbb
out
pop
orb
fldenv
fadd
xor
xor
popf
fimuls
stos
les
rcll
push
mov
repz
cli
and
xlat
xchg
sub
fwait
lahf
push
dec
xorl
into
mov
stc
fdivrl
push
rolb
arpl
rcrb
lcall
sti
jmp
jle
push
push
ljmp
xchg
fisttpl
push
lcall
jo
mov
pop
scas
call
pop
xchg
test
fisubrs
add
mov
sbb
dec
xchg
cltd
test
lcall
addr16
test
in
cmpsb
mov
xadd
gs
jg
mov
mov
hlt
repz
rolb
and
mov
sub
fsubrs
xchg
ds
mov
test
push
mov
jl
stc
and
jne
in
lcall
inc
leave
jo
loop
js
pop
mov
lods
push
xlat
mov
jl
xor
scas
sbb
fldt
dec
jecxz
jmp
jnp
pop
out
inc
mov
xor
add
fistps
cmp
add
movsb
js
or
orb
outsb
push
hlt
mov
cli
push
aad
cmc
lahf
mov
ret
xchg
xchg
stc
mov
scas
popa
popf
scas
js
into
sti
pop
icebp
out
outsb
cltd
pop
mov
outsl
repz
lret
jae
inc
pop
mov
les
mov
dec
mov
sarb
jg
pop
xchg
mov
push
dec
pop
pop
test
pop
lea
inc
insb
mov
push
adc
push
stos
mov
test
jae
sub
push
adc
je
in
add
sub
dec
stos
icebp
push
inc
movzwl
dec
jl
pop
cltd
mov
or
pop
imul
jmp
test
aad
pop
js
and
sbb
or
flds
cwtl
rcll
inc
test
daa
dec
fld
loope
inc
sbb
sub
xchg
and
sbb
sbb
xor
xchg
mov
pop
mov
rorl
jl
int3
add
push
outsb
test
shl
sbb
cmp
cltd
push
mov
daa
xchg
sbb
sbb
jecxz
inc
sbb
pushf
fisubs
test
data16
ja
or
mov
cmp
xchg
sub
imul
aam
iret
hlt
cmp
cmc
push
shrb
in
and
pop
or
sbb
arpl
lcall
pusha
add
test
dec
cmp
inc
push
jmp
ret
adc
push
bsf
jmp
gs
sub
outsl
es
add
pop
inc
movsb
cli
fidivl
pop
inc
sahf
js
xchg
cmp
lds
ljmp
cwtl
rolb
mov
sbb
mov
lods
xlat
in
mov
mov
cltd
add
jg
clc
sti
sub
loope
add
jmp
call
lcall
and
and
jbe
ja
sbb
and
ja
mov
or
dec
and
cltd
or
mov
pushw
and
jecxz
lods
pop
jb
icebp
adc
jno
mov
push
ret
movsl
test
mov
mov
push
ja
loopne
cmp
mov
enter
sub
adc
mov
push
fimuls
mov
iret
mov
pop
xchg
into
rolb
mov
jge
sbb
ja
add
pop
dec
int3
cltd
or
mov
add
call
stos
je
in
and
repz
pop
ret
pop
sti
es
lods
insb
add
repnz
xchg
pop
adc
mov
mov
pushl
inc
mov
add
fildl
sub
out
xorl
idiv
adc
fidivrs
push
mov
lods
mov
xor
sbb
jnp
ret
iret
in
cmp
insb
adc
xchg
in
and
cmp
mov
mov
mov
push
outsl
inc
dec
sbb
test
aad
scas
adc
push
mov
cli
or
mov
or
movsb
addr16
cmc
jge
sub
aaa
adc
sbb
insb
pop
push
je
sub
add
push
mov
jp
sub
ljmp
xchg
cmp
rep
pushl
mov
jnp
mov
push
jecxz
ret
push
lret
je
clc
pop
enter
push
divb
int
add
and
lock
pop
xchg
jne
dec
test
push
mov
push
and
loop
imul
rol
shll
into
scas
rclb
in
mov
lds
int
lcall
cltd
insl
mov
cli
push
sti
shl
stos
test
data16
sbb
sub
test
imul
push
test
nop
jns
jmp
mov
add
filds
out
add
daa
sub
in
xor
push
scas
adcl
push
aam
and
rolb
or
mov
pop
and
stos
test
xlat
sub
jne
imul
add
orb
adc
imul
sub
and
ss
insb
push
lret
adc
ja
pop
push
adc
les
out
std
pushf
or
jmp
pop
add
out
mov
sub
xlat
push
pop
cs
sbb
into
cld
and
out
xor
lods
jge
cmpsl
movsb
js
lret
inc
inc
lret
push
adc
push
and
fs
adc
push
sbb
gs
mov
cmp
faddl
mov
fcmovne
or
repz
lods
and
cltd
add
pushf
sub
push
jae
cmpsb
jno
sarb
bound
mov
jno
cwtl
nop
push
incb
test
lret
js
pop
lock
mov
cwtl
mov
js
ret
out
decl
mov
mov
scas
fnstenv
mov
daa
inc
add
outsl
and
ret
adc
jg
int3
mov
mov
outsb
and
mov
int
mov
xchg
movsl
or
xor
fs
jb
or
pop
push
jno
addr16
scas
scas
fldt
cmpsb
cwtl
mov
repz
xchg
leave
je
jg
push
or
sahf
mov
les
int3
push
dec
aad
out
mov
xchg
into
sbb
pop
xchg
lods
cmc
inc
orb
out
mov
clc
sub
inc
aas
idivb
fadds
aam
mov
lods
fwait
jns
or
ljmp
rcrb
sub
outsb
xchg
xor
pop
xchg
aaa
inc
addb
popa
xor
daa
add
inc
loopne
pusha
ret
aas
jmp
adc
mov
int
and
xchg
rorb
dec
sub
mov
shl
pop
mov
repnz
cmpsb
mov
sub
je
stc
fst
adc
sub
cld
and
orl
out
xor
sub
dec
mov
xor
xchg
lock
xor
test
cmp
mov
insb
mov
in
adc
mov
mov
hlt
or
lods
inc
dec
test
jg
out
push
pusha
push
sti
push
cld
in
sarl
pop
add
ret
ljmp
xchg
or
adc
shlb
dec
stc
jns
ljmpw
adc
ds
inc
std
ficoml
or
cmp
test
dec
adc
ret
xchg
xchg
fnsave
pop
rclb
es
cmp
cld
test
mov
or
push
cs
out
arpl
imul
fimuls
mov
push
mov
and
and
sarb
mov
fidivrs
fnsave
xchg
pop
fbld
lret
adcb
adc
dec
test
fwait
add
push
cmp
movsb
cmc
mov
sti
mov
mov
sub
leave
shl
and
lods
jnp
pop
push
flds
mov
jns
sub
call
ret
lcall
loopne
adc
stos
add
ror
push
add
lea
lock
repnz
cmpsb
bound
lcall
and
fidivl
mov
cmp
or
mov
iret
outsl
test
or
push
or
push
mulb
fcmovne
aad
jno
lret
and
add
outsl
movsl
pop
xchg
xchg
add
mov
xor
pop
dec
jl
inc
xor
popa
xchg
arpl
mov
in
call
cld
xor
push
in
or
fs
out
pop
push
xor
int3
mov
ja
sbb
scas
divb
gs
leave
mov
test
add
fildll
mov
jle
mov
sub
xor
dec
or
push
mov
inc
decb
mov
pop
and
shlb
mov
sbb
xor
out
jnp
xchg
addr16
popa
xor
adc
fists
bound
roll
clc
jbe
sbb
icebp
jmp
cwtl
scas
mov
sbb
ja
dec
mov
mov
std
leave
push
out
js
add
add
push
push
mov
rcl
cwtl
cli
xorb
or
jae
ja
lret
cmpl
paddusb
push
pop
jg
or
std
mov
sarl
xchg
lcall
xor
xchg
inc
pop
shl
mov
mov
and
js
mov
daa
and
mov
cwtl
mov
push
bound
xchg
test
test
xchg
mov
scas
movsl
push
fsubrp
and
pop
and
mov
mov
pop
test
insb
out
push
faddl
mov
jb
push
add
dec
daa
add
or
push
aad
or
sbb
out
repnz
stos
sub
movsb
jns
sbb
pop
mov
mov
xorl
inc
cmp
pop
in
aam
add
pop
or
jo
add
hlt
jmp
js
add
clc
enter
cs
push
lods
sub
scas
fwait
or
lods
push
cld
mov
mov
ret
xchg
mov
ljmp
and
jmp
mov
test
into
mov
test
push
add
push
cmc
mov
add
into
scas
xchg
sbb
mov
jb
icebp
jb
mov
adc
dec
jne
aas
fbld
neg
out
fistl
sub
jp
fisubs
or
std
aaa
cli
push
in
sub
and
inc
mov
dec
sti
mov
popa
add
loope
inc
mov
daa
aad
xchg
dec
iret
lds
mov
xchg
es
repz
inc
stos
inc
pop
inc
test
iret
test
or
xchg
pop
lds
cmp
int3
xchg
ja
xchg
pop
adc
mov
mov
mov
mov
xchg
mov
sub
sahf
mov
xor
xor
dec
out
ret
sbb
mov
decb
fwait
iret
jo
sbb
push
lret
jmp
sbb
icebp
int
mov
or
fcomp
fmull
ljmp
enter
or
js
sub
popf
iret
shll
or
fs
push
fisttpll
mov
pop
cmc
cmpsb
cmp
lods
out
adc
inc
or
aaa
pop
jo
test
lret
mov
mov
inc
cmp
dec
ficomps
mov
ret
xlat
stc
pop
sub
add
test
testl
xchg
pushf
aas
jmp
push
jge
into
sub
and
pop
jmp
je
imul
pusha
cmp
insl
add
jb
or
jae
loopne,pt
add
mov
sub
add
cmp
add
ret
mov
mov
jecxz
ss
mov
cs
lahf
imul
hlt
mov
pusha
clc
inc
in
int
fwait
pop
fwait
and
cltd
ljmp
das
push
dec
xchg
inc
in
loope
fcom
popa
mov
call
sub
xlat
mov
in
mov
addr16
pop
pop
cmpsl
inc
jb
pusha
dec
pop
loopne
xchg
test
and
aad
and
in
xor
jmp
rcll
outsl
add
push
cwtl
repz
and
mov
push
sub
popa
popa
popf
xor
cmp
pusha
add
dec
adc
stos
fadd
jmp
jnp
pop
ljmp
cmp
jp
sar
mov
mov
mov
movsb
jmp
call
out
dec
xchg
xchg
bound
mov
cmc
dec
sbb
and
aaa
ret
int3
repz
pop
or
inc
xor
sub
jg
sub
in
bound
sbb
mov
jbe
int
cwtl
mov
call
sub
sbb
push
xor
and
lahf
je
xor
fistpl
repnz
iret
mov
adc
jecxz
push
sub
cmp
cltd
ljmp
adc
xor
or
add
lods
xchg
mov
shl
dec
icebp
call
jmp
shrb
leave
imul
popa
or
jae
or
lods
in
inc
test
pop
cmp
inc
mov
mov
cmp
in
roll
mov
fbstp
stos
clc
mov
and
xchg
repz
adc
aaa
es
test
xorb
inc
adc
leave
call
push
in
or
out
add
mov
pop
arpl
mov
jmp
idivl
shlb
cmc
lods
cmp
sbb
mov
loop
adc
insb
lods
fidivrl
jo
cld
popf
mov
xor
pop
mov
ljmp
jl
dec
pop
xchg
rcl
scas
in
insl
jle
or
or
jnp
or
push
loope
rcll
xorl
scas
dec
push
loop
lret
bound
lret
and
dec
xor
test
test
shrb
push
subl
adc
mov
pop
movsl
and
xorl
bound
or
rclb
popa
mov
and
sub
push
cmp
in
mov
repnz
mov
jl
jno
push
push
push
mov
xchg
xchg
mov
data16
xorl
and
cmp
xchg
push
push
add
dec
hlt
idivl
or
sbb
mov
mov
jl
sbb
outsl
jmp
sbb
ret
and
jae
mov
test
sub
int3
push
dec
int
aas
cmpsl
push
sub
sub
pop
repz
test
xchg
cli
cmpsb
aad
or
dec
lahf
jns
rcr
mov
sbb
sbb
mov
mov
icebp
mov
mov
sarl
out
adc
dec
mov
sbb
xor
pop
push
rorl
xlat
mov
push
ret
push
pop
push
inc
pop
sti
push
comiss
mov
xor
arpl
ret
xor
jae
mov
adc
lds
inc
cmpsb
insb
push
or
into
ja
mov
push
outsl
stos
push
pop
jg
xchg
call
push
leave
xor
xchg
cmp
ret
xor
flds
aaa
push
cli
inc
rolb
mov
fistpl
cmpsb
sub
xchg
push
cmp
mov
push
mov
mov
add
sub
mov
adc
test
jge
add
mov
cmpsl
mov
vmovmskps
test
aam
insb
nop
pusha
push
fstpl
push
insl
daa
push
push
mov
lock
jae
and
adc
sub
int3
cli
jmp
mov
scas
jecxz
add
and
cmp
lds
pop
inc
cmpsb
mov
das
cld
xor
pop
mov
sub
jo
sbb
fdivr
fildl
imul
and
adc
jne
jp
mov
lret
insb
test
cmp
xchg
sub
add
popa
daa
mov
rolb
sahf
nop
jno
sub
loop
mov
mov
cmp
insb
ret
sbb
add
push
mov
repnz
imul
mov
adc
aam
jp
jmp
jbe
jmp
cmp
jmp
stc
insl
in
xchg
sub
movsb
cli
sub
ljmp
xor
lcall
cmp
mov
int
sub
stos
pop
divl
test
or
rol
fucomip
repnz
paddusw
dec
ror
loopne
xchg
fisubl
jnp
dec
scas
aas
lock
icebp
mov
sahf
sbb
pushf
jns
fildll
mul
shrl
mov
lds
in
lods
cmpsb
xchg
aad
int
sub
mov
sbb
aad
lods
cmp
sub
pop
das
jg
test
mov
mov
adc
aam
add
pop
or
pop
sub
in
mov
cmp
enter
cmp
pop
pop
std
mov
fisttps
jbe
pop
xchg
dec
inc
push
xchg
imul
or
inc
pop
dec
test
mov
clc
aas
pop
je
aad
push
repz
cwtl
jae
mov
aad
adc
in
test
mov
popf
inc
add
pop
and
adc
add
mov
xchg
jo
jb
in
xchg
pop
or
pushf
push
loopne
xchg
push
sbb
and
divb
mov
xlat
gs
insl
iret
and
mov
sub
ficompl
cmc
mov
or
push
lret
jle
add
inc
aas
jb
inc
out
scas
hlt
pushf
and
jge
adc
sti
dec
sbb
adc
sub
mov
aaa
es
pop
push
popf
adc
icebp
inc
cwtl
aas
mov
mov
pusha
mov
mov
push
pop
sub
and
adc
lcall
inc
aas
xchg
sub
xor
in
movsb
repz
pushf
imul
mov
or
in
adc
add
cld
movsl
insb
mov
jne
insl
shrl
jecxz
mov
or
push
sti
pop
push
jle
sbb
xchg
insl
mov
adcl
scas
xor
cmc
push
jecxz
pusha
cmp
ljmp
aaa
stos
cmp
out
in
out
lods
andl
aaa
and
jmp
xor
push
xchg
adc
mov
rcll
and
push
pop
pop
pop
cld
lahf
pcmpgtd
aaa
pop
sarb
xchg
rcr
pop
andb
cmc
inc
ss
dec
xor
push
imul
and
outsl
clc
adc
shr
or
ret
dec
in
mov
aad
es
mov
jmp
jae
cmp
setl
in
mov
es
fwait
push
jmp
adc
cmpsl
and
mov
pop
or
pop
bound
out
js
fstps
loopne
add
add
ret
mov
cmp
push
mov
or
outsl
jbe
xor
xorb
cld
ljmp
imul
or
mov
iret
mov
sahf
std
add
xchg
mov
add
loope
push
jp
or
sti
iret
xor
stos
outsb
add
mov
dec
lahf
xchg
in
mov
aam
jne
in
dec
sub
push
jle
dec
lret
jp
sbb
setp
cmp
jbe
shrb
cmp
adc
movsb
repnz
leave
cld
lahf
pop
jae
push
pop
push
stos
dec
jnp
inc
leave
movsb
mov
jle
iret
bnd
adc
jmp
lcall
inc
pop
cmp
loope
mov
inc
or
mov
adc
in
jnp
stos
test
aas
mov
mov
clc
gs
das
push
sbb
and
mov
cmc
inc
outsl
insb
sbb
sbb
sbb
and
cmp
cmc
and
pop
and
and
pop
aas
sbb
push
mov
lods
lret
dec
jne
dec
ja
stc
lods
shr
stc
or
addr16
lods
pusha
or
dec
add
outsl
xchg
cld
std
inc
in
adc
add
mov
shlb
bound
or
into
dec
push
out
pop
adc
mov
out
lret
and
scas
sub
sub
xor
push
ss
xchg
mov
sarb
mov
in
cmp
and
mov
lcall
jmp
push
pop
in
inc
and
outsl
lret
pop
jmp
cld
in
int
ljmp
lret
cmpb
shl
jle
xchg
dec
js
clc
push
lods
dec
js
adc
insl
dec
add
jg
xor
in
adc
add
mov
push
inc
sbb
pop
insb
nop
inc
cmp
rorl
loop
addr16
and
mov
dec
lahf
cmpsl
inc
pop
out
pop
mov
fs
repnz
addb
out
inc
jmp
xor
push
fdivp
repz
lock
jns
pop
int3
or
es
test
repz
imul
fdivp
xlat
inc
movb
adc
push
push
adc
adc
push
push
and
inc
mov
insl
aam
and
aam
push
je
and
pop
jmp
enter
mov
cmp
into
pop
into
add
push
std
dec
xrelease
adc
and
loope
mov
mov
es
add
jno
mov
xor
pop
addr16
jb
repz
push
repz
cmp
clc
popf
nop
into
add
test
mov
imul
shr
fidivrl
or
mov
enter
sarb
xchg
rcr
add
dec
inc
pop
jg
mov
pop
enter
shlb
push
push
fsubr
stos
pop
push
sub
pop
lahf
inc
push
gs
icebp
mov
mov
sbb
xor
inc
arpl
fisubrs
dec
mov
bound
out
insl
add
insb
sbb
stc
push
lds
inc
fidivs
mov
rclb
andl
inc
cmp
pop
add
cltd
sbb
push
outsb
out
jb
adc
sbb
or
mov
xchg
test
cmp
inc
not
ror
add
add
mov
fimull
sahf
xlat
cmp
iret
mov
aaa
ja
nop
inc
shll
hlt
adc
mov
add
pop
mov
xchg
sbb
add
lea
mov
adc
jb
je
mov
push
cmp
dec
add
in
jb
rclb
out
push
fwait
sti
in
sub
mov
rcpps
inc
mov
stos
mov
inc
jo
and
push
or
jae
mov
mov
xor
std
add
cmpsb
sub
iret
dec
movsb
cmpsl
out
pop
notl
je
lods
arpl
add
or
lahf
pop
xchg
inc
aam
dec
cmpsb
adc
push
add
cmp
mov
mov
adc
lds
les
pop
ss
xor
sbbl
and
jnp
loopne
and
mov
cmc
das
push
mov
mov
xor
mov
mov
outsb
scas
mov
sti
push
xchg
cld
decl
idivb
sar
mov
outsb
mov
bound
ret
dec
movsl
adc
xlat
xadd
cmp
mov
cmpsl
fcmovnb
add
imul
xor
testb
popa
push
push
and
cmp
je
fisttps
xor
adc
or
xor
psubsw
sbb
mov
daa
in
es
fwait
mov
or
sti
mov
adc
les
repz
adc
sahf
cmc
imul
xor
mov
mov
jno
test
mov
rcrb
xor
mov
push
mov
out
lock
mov
and
adc
iret
jle
xor
add
mov
add
xchg
hlt
sub
push
and
cmp
sbb
adc
or
aas
mov
mov
movsb
test
adc
add
or
mov
and
aaa
xor
xchg
out
mov
sub
in
mov
arpl
sahf
scas
sbb
pop
xchg
mov
or
sahf
xor
jb
in
cwtl
enter
aaa
enter
ss
cmc
push
jp
pop
fcmove
pop
cmp
call
lcall
cmp
imul
test
xor
sarb
inc
test
xchg
in
int3
and
shlb
cmc
in
xor
and
stos
icebp
divl
pop
ds
mov
pop
loope
jmp
scas
cmp
lret
jle
cwtl
sub
xchg
lds
pop
cs
mov
pop
add
pop
add
mov
cmp
leave
inc
js
cmp
jp,pt
call
je
cwtl
popf
push
mov
filds
or
sub
out
test
jo
rcrb
js
cmp
cmp
jg
enter
out
mov
sub
pop
dec
mov
imul
xor
xor
stc
and
sub
add
mov
adc
imull
add
idivl
push
xor
jnp
and
sahf
push
outsb
lods
sub
stos
sub
mov
dec
jb
and
pushw
push
loopne
mov
mov
pop
movsl
repz
addb
lea
ljmp
cmp
out
xchg
in
ret
mov
ret
mov
lock
fcmove
push
xlat
test
ja
dec
inc
xchg
fistps
frstor
push
jae
les
bound
imul
inc
test
jne
ja
jle
xchg
sbb
popa
mov
mov
fnstenv
divl
les
lods
xchg
mov
std
or
sub
sub
push
scas
popa
rcr
addl
fs
sbb
stc
rcl
les
inc
insb
pop
sub
inc
out
adc
mov
out
scas
sbb
cmp
inc
push
xchg
add
add
push
cmc
mov
mov
jo
icebp
arpl
xor
and
adc
outsl
ret
dec
xchg
mov
mov
loopne
xlat
adc
push
cli
and
into
or
stos
pop
movsb
mov
add
mov
ljmp
jge
dec
in
scas
fistps
xor
and
jecxz
repz
mov
stc
jae
and
subl
xchg
out
xor
insl
mov
and
push
inc
push
jle
dec
push
pop
cmp
xchg
cld
jg
or
adc
or
xchg
xorl
mov
push
sahf
sahf
out
dec
lods
testl
jmp
jno
xor
ret
xchg
and
inc
mov
or
fdivl
sbb
or
jo
arpl
into
mov
dec
inc
jo
dec
mov
std
dec
test
jns
or
or
push
inc
mov
test
sahf
xlat
dec
mov
lea
inc
add
daa
and
or
or
push
mov
sbb
roll
pop
es
xor
push
adc
cmp
shrl
push
int3
add
jecxz
aaa
les
mov
sub
fistpl
xchg
loop
je
xor
dec
addr16
int
iret
xchg
adc
cld
std
icebp
ret
adc
rol
int
jb
movsb
hlt
push
stc
aas
dec
sub
cwtl
fbld
enter
les
aam
imul
lods
cmp
inc
and
adc
stos
pop
add
sub
rcrb
add
sub
cmp
mov
jg
repnz
pop
fnsave
push
fcom
jb
pop
push
push
jle
xor
in
cmp
cmc
sub
repz
jge
fwait
lret
insb
outsl
dec
cmpl
ljmp
xchg
das
pop
imull
push
mov
push
xchg
out
fmull
xchg
sti
add
jae
add
sbb
dec
or
mov
shr
mov
xchg
aas
pop
and
jae
jge
inc
rcrb
sub
jo
fdivr
pushf
cld
lret
mov
xchg
pusha
sti
sti
nop
jb
sub
pop
pop
test
loopne
xchg
loopne
fiadds
hlt
add
sti
fsubrs
sar
fcompl
mov
and
add
jmp
pop
mov
jle
in
xor
pop
mov
fsubrs
jnp
out
or
jae
cmp
cwtl
pop
popa
insl
adc
sbb
xchg
jae
adc
and
ror
or
int3
shll
inc
lret
imul
fwait
mov
fs
stos
pop
and
push
dec
stos
lahf
lcall
xchg
shr
daa
test
push
inc
sbb
and
pop
or
cmp
cs
dec
inc
clc
test
inc
sbb
gs
pop
outsb
jl
xchg
popa
outsb
pop
or
sbb
in
jns
xchg
into
out
andb
jns
pop
xor
push
adc
fdivrs
fcoms
in
cmpsb
jns
and
dec
jno
jg
push
xor
add
das
jnp
stos
inc
fldcw
xchg
fdivl
movsl
fadd
xor
push
scas
xlat
xor
mov
pop
jmp
add
sbb
fbld
dec
cmp
out
mov
jne
sub
mov
and
xchg
lcall
push
mov
shll
arpl
in
sub
jmp
jge
mov
push
out
inc
xchg
jg
add
xor
mov
and
lcall
subl
xchg
inc
add
add
gs
sbb
popa
dec
fbld
sub
xor
repz
loopne
lds
aad
shlb
xor
add
adcb
or
fildl
adcl
mov
cwtl
mov
cmp
cli
aad
fwait
add
jno
or
ss
pop
scas
stos
add
pop
mov
add
repnz
sbb
sub
pop
sbb
ret
mov
xchg
int
or
sbb
dec
push
pop
pushf
xchg
inc
or
xchg
loop
jp
xor
sbb
std
rcl
add
ret
cmp
ljmp
xor
dec
mov
sbb
xchg
push
dec
fdivrl
dec
xchg
pop
movsl
jecxz
sub
mov
mov
popf
sbb
outsb
adc
mov
je
inc
loope
rcrb
repz
jle
push
adc
adc
stc
xchg
int
fisubl
pushl
jecxz
xor
sub
jno
popf
jecxz
add
xchg
or
xchg
xchg
lods
ret
fwait
xchg
xchg
in
mov
pop
int
or
push
xor
push
loopne
testl
mov
jbe
in
mov
stos
dec
sub
fcoms
xor
outsl
or
mov
dec
std
movsl
fdivrp
mov
test
subb
jge
xchg
cmp
mov
inc
and
fsubs
lcall
xchg
push
cmp
inc
mull
jb
xchg
popf
cwtl
fwait
xchg
dec
mov
mov
pop
pop
iret
inc
pop
adc
lret
jp
lods
jle
imul
pop
imul
push
dec
xchg
jg
js
sub
insb
ret
andl
sti
scas
test
dec
fmull
add
jb
cld
xchg
js
jg
out
jecxz
adc
mov
sahf
or
xor
cmpsl
gs
xchg
add
int3
inc
iret
in
sarb
adc
jge
sbb
fs
enter
into
xchg
xor
icebp
mov
pop
outsb
inc
push
adc
pop
mov
mov
jmp
mov
mov
lahf
fsub
lds
inc
nop
inc
popl
mov
or
mov
nop
inc
mov
mov
add
push
jecxz
inc
mov
lcall
call
addr16
dec
dec
mov
mov
sbb
jo
aad
scas
rorl
sahf
loope
mov
ja
ret
and
xor
and
enter
fwait
xor
sub
rcll
cli
mov
hlt
pop
mov
loopne
jae
push
sbb
imul
mov
ds
nop
stc
test
push
pop
je
aad
mov
loopne
add
cmp
inc
dec
pop
mov
mov
test
and
stos
lret
ja
repz
adc
movsb
pop
shll
iret
dec
mov
testl
mov
icebp
cmc
pop
jl
and
stc
rclb
lcall
xchg
ljmp
push
xorb
inc
inc
mov
stos
lock
scas
iret
xchg
lret
int3
xor
push
fcomps
push
mov
out
jmp
aaa
mov
sub
je
in
int
push
mov
cs
push
movsb
in
dec
arpl
add
ljmp
jns
xor
pop
nop
insb
fs
je
mov
ss
test
cwtl
xchg
les
fwait
out
inc
lret
xor
push
scas
inc
lret
test
cld
addr16
mov
addl
cltd
push
call
pop
lcall
dec
movsl
cmp
cld
js
lret
aam
mov
int3
mov
pushf
inc
pop
cmc
lcall
jle
andl
scas
movsb
fsubl
lock
sub
cmovle
orb
outsb
fnstcw
xor
mov
test
addr16
daa
icebp
xchg
cmpsl
mov
xor
mov
addb
fstps
les
in
push
insb
loope
add
ret
mov
rcrl
movsl
xor
dec
shll
mov
jle
dec
sti
xchg
fisubs
jmp
jo
jb
aad
pop
push
cwtl
xorb
les
insl
cwtl
inc
sub
std
cmp
sbb
loopne
std
jge
pop
xor
mov
push
mov
and
adc
xchg
fstpt
das
cmp
dec
das
xor
inc
pop
insl
fs
cs
and
and
pop
jmp
adc
shl
sbb
popl
movsl
jae
pop
popa
mov
xchg
sub
pop
pop
mov
popf
adc
mov
adc
add
sub
es
mov
pop
fists
cwtl
imul
pop
jo
cmp
dec
xchg
outsl
xchg
ret
jo
test
sub
push
stc
jle
pushf
adc
ja
jne
leave
and
and
clc
shrb
scas
scas
icebp
into
mov
or
ret
mov
add
push
sahf
sahf
sbb
push
sahf
inc
mov
push
xchg
out
test
jl
pop
sbb
cmp
test
addr16
mov
test
hlt
cmpsb
mov
stos
mov
fnstsw
mov
cld
inc
sahf
ss
jmp
pop
fcoms
es
jnp
mov
cmp
adc
mov
cmp
testl
aaa
adc
cmc
pop
outsl
or
es
mov
and
dec
int
xor
inc
xchg
mov
inc
jle,pn
push
jbe
enter
jg
jae
in
xor
lods
and
lock
xlat
cmpsb
lgs
orb
hlt
shrl
aam
push
je
outsl
rolb
mov
nop
aad
mov
dec
shrb
in
jne
cltd
std
imul
xchg
ss
scas
xchg
call
inc
pop
add
adc
lcall
pop
mov
stos
lcall
inc
shl
or
idiv
jl
testb
pop
leave
cmp
nop
stos
pop
data16
or
cltd
add
rcr
call
add
test
lds
or
push
and
dec
push
or
mov
jno
shl
lods
add
cmp
ficompl
cmpsb
pop
loop
sub
insb
add
out
fucomp
mov
add
imul
xor
add
gs
iret
cmp
sahf
sbb
das
fistpll
imul
push
xor
dec
or
xor
out
les
push
out
into
inc
cmp
or
pushf
xor
int3
cmc
ss
loopne
inc
test
repnz
scas
xchg
pop
jne
add
dec
cmpsb
lret
jmp
or
out
adc
mov
into
jg
or
adc
hlt
add
loopne
movsl
push
jbe
xchg
je
arpl
inc
jne
dec
xor
add
cld
ja
sub
lods
sub
addr16
push
cmp
aas
add
jnp
fwait
pushf
push
push
stos
or
outsb
test
or
mov
sahf
cwtl
adc
xchg
xchg
pop
stos
mov
int3
add
out
xchg
movsl
pop
inc
xchg
outsb
inc
test
or
mov
fstps
mov
xor
fstpt
or
lahf
data16
shlb
sub
and
xchg
gs
mov
insb
jno
adc
fstps
mov
fisttpl
jle
jnp
jmp
push
ss
lret
pmaddwd
test
xor
or
sub
push
pop
push
xchg
push
mov
test
scas
ror
fimull
lahf
das
inc
out
xor
pushf
push
cmp
pop
cmp
outsb
fwait
movsl
repz
ja
mov
rclb
adc
ss
mov
mov
mov
and
out
js
cltd
cltd
popa
xor
xlat
dec
mov
jb
and
mov
pop
insl
push
push
pop
in
jp
push
mov
pop
xchg
add
ficompl
sbb
aad
or
cmp
dec
jbe
lret
test
or
add
push
and
pop
xchg
jle,pn
push
movsl
cmp
notb
xor
xor
cli
sbb
cmp
push
leave
xor
add
in
ss
jle
pop
das
add
or
lock
adc
repz
or
sub
xor
add
xchg
lods
test
lcall
scas
cltd
dec
mov
stos
push
lds
ss
lcall
das
inc
test
mov
mov
cwtl
jnp
pop
jecxz
pop
iret
int3
lea
jo
insl
cmp
cs
aad
xor
mov
psubusb
pusha
push
sahf
mov
addr16
xchg
jnp
or
xchg
sub
mov
mov
addl
sahf
and
es
cs
dec
mov
lock
call
pop
adc
dec
xor
cmp
int
mov
ss
call
jge
adc
pop
in
lods
je
fnstcw
xor
pop
sub
xlat
mov
cmpb
repnz
pop
jp
and
je
xor
mov
in
inc
sbbb
popa
xchg
push
or
in
jge
shll
xor
popa
ds
mov
sub
icebp
mov
and
xor
movsb
push
test
sahf
push
aam
push
lds
popa
pop
xor
ficoms
cmp
in
sub
pop
push
jge
inc
icebp
in
insb
daa
inc
mov
ja
push
xor
je
sub
fwait
xchg
cmpsl
pop
cwtl
inc
xchg
out
roll
and
fistpl
cmc
sbb
dec
enter
inc
ror
or
repz
add
push
movsl
jno
pusha
cmpsl
cltd
test
adc
ret
sub
mov
je
sbb
xchg
dec
or
add
ja
cwtl
shrb
fisttpl
xor
sbbb
pop
out
pop
xor
icebp
iret
roll
nop
cli
loope
insb
mov
cmc
inc
test
inc
mov
stc
cmp
test
fimull
xchg
test
imul
push
test
mov
sbb
jg
lahf
hlt
push
test
xchg
sbb
sbb
mov
mov
jno
xchg
jb
jecxz
fcomp
in
push
lock
add
or
movsl
cli
mov
lock
inc
mov
dec
or
xchg
push
shrb
in
call
push
jg
inc
cs
in
mov
mov
fisttpll
jnp
fldenv
jg
mov
jne
idivl
subl
sbb
xor
push
dec
incb
arpl
cmp
and
rorl
faddl
xor
ret
inc
std
jge
sub
adc
add
in
shlb
test
mov
pop
adcl
xchg
dec
sbb
and
das
mov
push
add
xor
push
mov
sub
add
and
mov
je
int3
xchg
xchg
movsl
gs
addr16
ret
jb
cmpsb
in
mov
mov
ljmp
sbb
cmc
aas
fcoms
mov
icebp
mov
fisubrl
cwtl
and
dec
xor
movsb
add
les
push
test
clc
jns
cmpsl
lret
out
lcall
jne
pop
pop
call
sti
dec
xchg
int
and
movsb
dec
push
add
orl
in
sbb
fidivrl
andl
xor
cmp
sub
dec
sub
inc
stos
popa
push
jb
push
push
decl
jb
ljmp
mov
jbe
push
add
jne
and
jnp
xchg
aam
inc
lcall
jae
mov
mov
jmp
mov
jl
push
popa
lods
test
test
sbb
push
outsl
inc
xorl
mov
ficoms
call
xchg
and
ffreep
mov
jb
nop
xchg
add
cmp
xor
ds
out
aaa
jae
mov
stc
je
ss
or
scas
add
test
imul
cmp
lret
sub
push
gs
lret
icebp
mov
loope
add
push
xchg
rcll
add
xchg
mov
sbb
fabs
sub
inc
ja
sbb
cmc
xchg
cmpb
pop
jle
xor
mov
jecxz
mov
add
rol
mov
mov
loope
pop
enter
and
inc
push
inc
fnstenv
fs
insb
cmp
gs
push
aas
gs
jle
jmp
vshufpd
ffree
push
and
imul
jno
lret
ljmp
jae
sets
mov
sahf
pushf
lret
xchg
add
lods
jle
aad
mov
test
mov
hlt
jb
in
pop
popa
fxch
sub
pop
push
inc
cmc
jno
rorb
movsb
mov
xchg
push
mov
xchg
call
or
rcrl
xchg
pop
mov
out
sbb
xchg
je
mov
stc
jnp
ds
adc
pusha
popa
mov
movsb
xor
mov
repz
mov
adc
shll
push
mov
jns
cmpb
movsb
aam
push
jae
inc
pop
push
arpl
sbb
outsl
leave
pusha
scas
inc
ja
shll
push
insl
mov
and
and
mov
in
fwait
std
push
xchg
mov
sti
or
hlt
lret
jp
in
adc
adc
pop
pop
aam
insl
cmp
xchg
inc
mov
xor
ljmp
and
mov
iret
sub
les
or
cmpsb
aas
data16
jge
clc
dec
dec
dec
jl
add
dec
xchg
and
aad
cld
mov
aam
and
ss
imul
fs
enter
das
push
jecxz
aaa
in
push
test
lods
iret
mov
sarb
push
lahf
and
lods
adc
data16
inc
or
fmull
jo
test
mov
in
and
sbb
sahf
lock
xchg
lock
push
dec
xor
outsb
mov
add
mov
or
sahf
clc
pop
inc
pop
das
jge
jne
loope
sbb
mov
andb
out
or
pop
sbb
sbb
mov
pop
das
mov
sbb
fwait
shll
push
leave
in
inc
pop
mov
cld
mov
cltd
out
fimull
aas
jg
ljmp
jne
jo
fs
insl
lahf
adc
aam
cmp
sbb
pop
and
jge
add
scas
jmp
out
mulb
lock
mov
subb
imul
lcall
out
mov
out
pushf
xor
sub
or
and
pop
out
cs
movsl
cmp
xlat
or
sbb
or
addl
xchg
cmp
call
bound
andl
decl
insl
push
nop
ds
aaa
mov
or
flds
sbb
notb
ret
mov
jecxz
mov
mov
mov
pop
xchg
cld
lea
adc
xor
iret
out
mov
enter
xlat
test
pusha
push
mov
loope
lea
push
out
repz
cli
repz
sub
xor
aaa
jl
das
jp
xor
jmp
sub
outsb
pop
dec
dec
test
sbb
in
int3
inc
out
pop
lods
ficompl
push
sar
inc
test
andl
clc
lahf
add
je
xorl
xor
loop
pop
add
push
or
mov
dec
mov
push
cmp
pushf
adc
or
push
jle
aas
sbb
lret
ljmp
push
jmp
dec
ret
xor
pop
xlat
cmp
mov
xlat
inc
inc
ret
icebp
in
mov
lea
int
pop
cmp
and
mov
adc
push
cwtl
xor
std
cltd
sub
mov
pop
fwait
test
repz
push
cmpsb
mov
adc
out
in
pop
pop
nop
jg
daa
add
addl
push
mov
xor
js
nop
push
xchg
mov
xor
mov
movsb
adc
nop
cli
mov
shl
or
xchg
add
xchg
mov
clc
test
mov
mov
les
sub
arpl
cmp
xchg
loop
dec
mov
insb
and
scas
notl
push
and
pop
mov
xchg
and
scas
add
jno
int
lret
sub
dec
fldcw
mov
xchg
aaa
mov
gs
fistps
xchg
nop
inc
mov
sub
xor
mov
int3
lret
lea
adc
inc
dec
rorl
push
and
sbbb
call
fidivrs
inc
aaa
lods
pop
mov
fsubrp
xor
pusha
repz
mov
adc
mov
dec
sbb
pop
dec
cwtl
in
jnp
add
adc
push
push
sbb
xchg
loop
cs
xor
xchg
test
ja
loopne
mov
stc
pushf
and
mov
scas
iret
data16
testb
loopne
mov
mov
or
inc
sub
sub
pop
jecxz
popf
test
xchg
sbb
test
add
pop
pushf
pop
add
cmp
aad
rcrb
ljmp
in
and
test
mov
int3
dec
adc
inc
lock
pop
cmpsl
push
mov
lret
mov
cmp
add
int
rcrb
cltd
pop
inc
jnp
lea
pop
mov
imul
xchg
gs
fwait
mov
std
cmp
jle
scas
and
pop
adc
sub
int
adc
dec
fimull
lods
pop
cmp
adc
pop
mulb
cwtl
lret
inc
sub
arpl
hlt
inc
out
or
mov
dec
sbb
push
xchg
jne
and
int
inc
mov
out
and
fdiv
out
out
pop
test
insb
mov
arpl
aaa
sub
hlt
add
mov
push
aas
mov
cmp
jmp
cmp
psllw
and
jmp
arpl
fisubl
shlb
jne
jno
add
inc
loope
dec
inc
add
cmp
js
ds
mov
imul
pop
jg
sub
arpl
movsb
je
es
stc
test
mov
dec
mov
out
push
fdivrl
inc
test
adcb
mov
pop
test
xor
cmc
sbb
sub
hlt
aas
and
pop
sbb
push
ja
in
cld
mov
in
push
mov
cld
aas
cmp
je
push
hlt
loop
cmp
xor
jle
jnp
int3
cld
mov
fwait
mov
fsubr
cmp
push
sub
mov
in
ficomps
cli
pusha
xchg
push
dec
sub
mov
sub
das
and
daa
mov
insb
decl
add
push
cs
divl
sahf
js
cmp
push
adc
dec
ljmp
mov
push
je
push
in
icebp
add
cmp
fld
push
cmc
mov
dec
mov
lahf
dec
pshufw
ret
dec
sbb
cmp
ret
insb
push
mov
pop
mov
aas
push
push
lods
xor
mov
dec
cmp
mov
fildl
push
pop
xchg
mov
test
pop
mov
cmp
addb
sub
sti
mov
repz
sbb
mov
jmp
mov
in
xor
das
add
mov
fldt
in
scas
lret
lahf
rol
aas
repnz
jae
mov
ficompl
mov
mov
cmp
mov
or
mov
jbe
mov
jne
fbld
jl
rorl
cli
orb
std
repnz
adc
imul
jl
repnz
or
jmp
inc
fbstp
and
add
xchg
sahf
hlt
fldl
mov
ljmp
or
dec
lret
nop
ret
bound
jg
sbb
add
xchg
or
xor
hlt
in
cmp
cltd
jb
inc
imul
mov
inc
xchg
jp
dec
mov
push
pop
test
jg
cmp
ret
sbb
test
leave
enter
call
ret
mov
ja
xchg
je
mov
xor
jns
ror
cmpl
jecxz
insl
dec
jnp
mov
aas
sarb
into
in
popf
rolb
pop
mov
mov
sbb
xchg
sahf
push
mov
pop
mov
je
mov
adc
ret
xchg
mov
sub
mov
jmp
sahf
pop
sbb
cmovb
inc
bound
cmp
add
sub
and
mov
xor
xchg
push
inc
jae
mov
inc
jae
xchg
adc
xchg
or
xor
cmpsl
in
xchg
jmp
jp
fs
cmp
jmp
mov
add
call
mull
inc
test
bound
js
aad
enter
dec
stos
and
leave
int
mov
rclb
imul
pusha
rolb
je
out
lcallw
testl
movsb
icebp
orl
mov
sbb
and
xchg
push
ret
rcll
insb
int
test
jb
movsl
rorb
leave
sarb
scas
bound
jmp
mov
jmp
sub
pop
cltd
fmuls
popf
cmp
jae
xchg
mov
inc
cmc
xor
xor
aaa
xchg
jnp
ficompl
mov
mov
cmp
mov
sar
cmp
jl
ret
mov
pop
pop
adc
loopne
in
andl
adc
inc
xlat
cs
pop
in
pop
aam
out
shl
push
flds
test
xor
inc
add
shlb
inc
xor
inc
inc
rcr
push
lret
out
cmp
shll
inc
out
adc
in
add
repnz
mov
jecxz
fimuls
in
pop
das
mov
test
mov
adc
xchg
out
adc
sbb
inc
inc
sbb
mov
insl
repz
fs
lock
test
mov
fstpt
push
cs
sbbl
push
and
test
cmp
ds
add
dec
xor
jnp
in
dec
push
lret
es
fsts
shll
mov
add
push
imul
jno
loope
dec
xor
icebp
loop
hlt
aam
mov
pop
dec
add
aam
movsb
jp
test
test
mov
dec
rcll
dec
and
pop
mov
sbb
jmp
push
iret
and
xorb
add
repnz
sbb
incb
mov
push
pop
jno
push
int3
jg
jne
mov
and
imul
or
mov
je
mov
ret
addl
or
mov
popf
mov
mov
jnp
push
ret
add
loopne
jl
jle
fbstp
scas
pop
sbb
mov
sbb
lcall
cs
mov
and
dec
scas
cmp
lcall
ret
jge
pop
inc
add
test
jbe
jns
lock
std
sub
arpl
push
scas
inc
pop
add
xor
sbb
sub
push
js
inc
jmp
stos
dec
pop
cmp
imul
iret
cmc
xchg
outsl
mov
out
gs
mov
mov
sub
push
aad
dec
add
xor
sbb
movsl
xchg
imul
jne
sub
orl
leave
jne
lea
stos
xchg
mov
mov
push
mov
test
or
pop
and
xor
xorb
scas
xchg
xor
out
inc
lds
add
push
inc
cmc
test
adc
sbb
jle
jns
loope
mov
aas
cmp
aas
adc
add
insl
inc
pop
push
iret
adc
jno
mov
into
lret
or
xor
sbb
ja
dec
add
cmp
cmp
in
sub
mov
and
pop
or
xor
adcl
sbb
adc
xchg
mov
mov
cwtl
js
ret
add
stc
push
mov
insl
imul
dec
lahf
jmp
cmp
xlat
enter
aam
into
ss
rorl
dec
xchg
or
push
mov
or
and
cli
xor
jns
shrl
shrb
xchg
out
addr16
call
divl
test
outsb
push
inc
outsb
jne
push
or
and
addr16
cmp
lret
xor
or
lret
mov
arpl
jo
mov
mov
and
jl
pop
push
dec
and
xor
adc
les
dec
pushf
std
stos
sub
mov
mov
nop
cmp
lods
jmp
add
std
add
aad
cmp
mov
outsb
mov
mov
pop
js
adcl
push
jnp
fsubr
into
jne
loope
repz
xor
jae
dec
int3
das
pop
jmp
mov
and
xchg
push
int3
xorl
mov
ss
stc
add
push
les
mov
mov
in
mov
shll
in
gs
xor
test
loop
xchg
mov
enter
and
mov
pop
jns
loop
add
out
dec
aas
adc
lods
jl
adc
pop
xor
icebp
insb
lcall
adc
sub
lret
fimull
and
dec
and
andb
test
incb
jl
movsb
jns
mov
jle
aaa
sti
testb
scas
repnz
sbb
loope
mov
fdivrs
popf
pop
sub
rcll
popf
or
mov
adc
fistps
push
ds
dec
sbb
rol
or
mov
popl
adc
adc
push
add
mov
sub
jne
pop
cmp
fsubrl
inc
pop
pusha
mov
inc
dec
jbe
push
stos
sbb
lock
ja
cmpl
je
mov
das
xor
movsl
or
lcall
adc
fcoml
xor
xchg
mov
mov
into
jmp
out
les
cs
dec
mov
and
pusha
je
xchg
add
movsb
inc
mov
sbb
push
inc
mov
test
in
mov
lret
shlb
jmp
mov
pop
xor
xchg
pusha
es
test
inc
sub
or
getsec
dec
jmp
or
ret
pop
push
pop
cltd
test
mov
lcall
or
jg
mov
cmp
clc
or
je
divb
fsubrp
xlat
dec
add
sbb
mov
and
sub
lds
call
xor
jg
jne
daa
rcrl
rcrb
rol
subb
adc
int3
lcall
and
push
adc
adc
jno
cltd
push
test
or
stos
nop
movsl
daa
mov
in
cmp
gs
lahf
mov
js
xchg
or
pop
stos
mov
xlat
lds
out
popa
rol
pop
xor
mov
pop
out
idiv
jp
rcrb
push
stos
rcll
mov
pop
cmp
repz
fnstsw
and
int
movsl
mov
xchg
mov
push
push
adc
or
repz
pop
cmp
stos
not
cmp
mov
mov
inc
movsl
inc
mov
out
dec
mov
add
pop
movsl
pop
inc
outsl
inc
fisubs
stc
fsubl
imul
inc
push
push
xchg
dec
roll
pop
inc
repnz
imul
and
fs
add
and
cmpsb
fs
inc
or
repnz
adc
fwait
adc
mov
rcrl
pusha
cmp
hlt
icebp
and
int
add
ret
adc
mov
push
and
sub
adc
add
cli
ja
push
arpl
movb
lea
jl
pop
int3
out
push
jno
mov
mov
fucom
fisubrs
nop
or
test
leave
ds
xchg
xlat
out
cltd
es
cmc
cmp
jae
in
test
testb
jge
sbb
rcrl
sbb
lahf
call
dec
stos
lcall
nop
test
int
lock
xchg
add
xchg
push
or
aaa
pop
mov
ljmp
mov
adc
push
shrl
aam
data16
xchg
mov
xlat
andb
dec
pop
mov
cs
call
push
orb
cmc
and
in
xor
sahf
xchg
adc
adc
sbb
in
sub
lds
fwait
arpl
stos
mov
push
in
adc
int
and
inc
in
ds
int3
mov
sbb
scas
pop
fwait
pop
nop
pushf
ret
sbb
sbb
sbb
mov
daa
sti
and
xor
jo
andb
testl
mov
sahf
mov
adc
add
jmp
lret
dec
pop
xchg
das
orb
aad
jne
pusha
insl
aad
mov
jecxz
sbb
mov
jl
cmp
cmovp
testl
mov
adc
mov
xchg
add
and
stos
addr16
push
sbb
xor
aam
xchg
sbb
rcr
test
mov
jo
shlb
lcall
jmp
mov
fsubrl
stos
stc
leave
sahf
fiadds
fcmove
push
rcll
dec
lahf
xor
push
xchg
add
in
icebp
or
cmpsl
hlt
scas
test
sar
mov
mov
jl
xchg
pop
int
push
push
lcall
out
aad
inc
cli
flds
mov
je
xlat
clc
and
cld
jmp
pop
push
cmc
mov
notl
loop
push
imul
mov
sub
sbb
mov
cld
push
add
std
lret
mov
sub
sbb
outsb
or
sub
jg
daa
push
dec
inc
test
dec
and
push
inc
repnz
adc
and
lods
insl
imul
ret
add
push
test
pop
sub
push
jns
push
hlt
mov
mov
sbb
filds
inc
xor
fildll
out
pop
hlt
out
shll
xchg
aaa
jle
sub
cld
jae
xlat
ss
xchg
inc
or
dec
add
movsl
aad
adc
mov
push
mov
or
outsl
addr16
repnz
in
dec
in
inc
fs
fidivs
outsl
lcall
sub
pop
imul
jp
cmc
es
pop
aad
mov
lret
daa
cmpsl
loope
daa
daa
test
xor
ljmp
pop
sbb
inc
xor
fnstsw
fsubrp
repnz
dec
pop
ret
xchg
insb
incb
cmpsl
or
cmpsl
fcmovnb
dec
add
mov
imull
test
call
add
movsl
lret
iret
fldcw
lds
aas
push
mov
std
push
dec
mov
dec
sbbl
add
insb
push
not
pop
in
shll
push
jb
xor
xchg
cmc
enter
push
loopne
cmpsl
dec
sahf
cmp
cmp
push
mov
sub
pop
inc
popf
push
lods
mov
jp
leave
push
scas
mov
jle
pop
or
lds
fldln2
femms
call
jno
dec
mov
mov
ljmp
pop
test
or
xchg
xchg
mov
lahf
jo
mov
mov
adc
data16
test
xor
dec
or
in
dec
negl
pusha
and
xor
outsb
push
lods
sbb
cltd
aad
gs
inc
xchg
pushf
lret
jl
add
or
add
lcall
push
jmp
lahf
mov
or
xor
and
and
cmp
clc
push
rclb
iret
gs
lds
or
enter
js
cmpsb
in
cli
fldcw
jae
mov
dec
xor
dec
mov
pop
sbb
mov
pop
aad
add
cltd
lods
jecxz
repz
in
jg
iret
nop
adc
rclb
arpl
cmp
bound
and
add
add
iret
lods
call
pop
pop
pop
shlb
leave
jo
mov
lock
pushf
mov
inc
sub
outsl
xchg
sub
dec
insl
repz
ror
jne
in
ds
bound
iret
fs
fwait
out
jnp
jg
dec
shll
cmp
pop
jnp
add
lods
int3
or
pop
pop
sub
xchg
cltd
mov
jecxz
push
add
mov
xchg
out
das
aad
rcrb
mov
push
out
dec
and
cmp
or
sbb
fistl
cmp
add
mov
in
jo
test
jmp
mov
fstps
adc
push
into
and
aaa
xchg
enter
jecxz
or
xlat
adc
xchg
cmp
addr16
xorb
mov
lock
add
inc
inc
add
xchg
pop
outsl
fxch
inc
xchg
cmp
aas
or
ss
aas
push
mov
aad
mov
cmp
nop
push
pop
push
rcr
sbb
jno
push
lahf
xor
xchg
fwait
adc
inc
sub
xor
inc
mov
inc
std
lret
push
sahf
push
test
out
andb
outsl
push
insb
sbb
or
and
mov
out
cltd
fisubrs
mov
aas
jno
lods
xchg
xor
xchg
xor
mov
xlat
inc
repnz
push
hlt
call
filds
ds
sub
das
insl
cmp
repnz
sbb
xor
or
xchg
test
in
cmp
in
mov
dec
mov
push
mov
scas
dec
roll
push
hlt
pop
sahf
cli
loop
cwtl
lret
sahf
out
int3
or
push
sbb
jno
jle
mov
pop
pushf
rcrl
push
pop
xchg
and
inc
adc
xchg
out
pusha
dec
add
xor
ret
fmull
or
outsb
inc
jns
loopne
test
xlat
das
add
lods
fnsave
aas
mov
sub
mov
aam
push
sti
loopne
ja
xchg
jecxz
add
faddl
nop
push
jp
loop
test
mov
inc
xchg
je
sbb
lret
out
scas
mov
add
frstor
pop
mov
sti
cmpsb
jp
adc
aas
dec
add
sub
cltd
test
push
shll
mov
into
jo
cwtl
push
inc
dec
xor
and
enter
sbb
adc
insb
fs
idiv
cmpsl
mov
dec
cwtl
inc
or
sub
adc
xchg
popf
enter
testl
mov
jno
lods
sub
insb
int3
out
or
lods
and
test
mov
mov
sbb
dec
cmp
int
mov
xchg
rolb
xorl
inc
decl
sbb
jo
cltd
aad
cmpsl
imul
jp
mov
mov
inc
and
std
xor
mov
and
fildll
cmc
sbb
imul
test
outsb
punpcklbw
mov
dec
xor
mov
xchg
sti
lahf
stos
out
fsub
je
es
xor
jae
mov
inc
lcall
jl
out
add
stc
jo
in
divb
ficompl
dec
sbb
cmp
out
cmp
push
and
push
daa
in
sbb
adc
or
jbe
movsb
xchg
test
adc
lea
cld
or
sti
gs
bound
outsb
jbe
loopne
xor
repnz
adc
fadd
jbe
xchg
mov
pop
cld
mov
mov
pop
adc
jo
dec
push
imul
pop
xchg
pop
repz
inc
js
push
sub
insl
fstl
repz
frstor
sahf
icebp
xchg
loop
or
imul
mov
icebp
inc
faddl
cmp
pop
mov
movups
adc
cld
jbe
je
inc
add
push
or
addr16
push
arpl
xor
sub
inc
stos
sbb
jecxz
xchg
mov
out
mov
pushf
sbbl
add
cmpsl
mull
mov
or
out
lcall
lods
btc
rep
cmp
jns
imul
scas
push
cmp
repz
dec
cmc
xchg
jno
jnp
mov
int3
xor
imul
imul
push
mov
pop
mov
xchg
push
dec
ret
sub
in
out
insl
push
push
push
xchg
add
push
bound
push
mov
pusha
or
or
xchg
js
in
inc
es
add
mov
bsr
ret
mov
test
push
pop
or
movsl
lea
cwtl
nop
hlt
jno
fcoml
shl
sub
push
sbb
movsl
mov
and
scas
jg
ret
test
scas
sub
outsl
clc
fs
das
mov
inc
mov
mov
flds
xor
dec
or
stos
fcomi
sub
xor
scas
div
cwtl
out
jl
in
loope
mov
xchg
xchg
into
sub
jmp
popf
mov
or
cmpsl
sbb
inc
popa
jge
sub
test
fbld
les
ja
xchg
ds
push
daa
push
fwait
push
cmpsl
sub
loope
ss
test
mov
orl
cmpsl
leave
push
into
mov
adc
imul
jb
fdivs
jle
fidivrs
rcrl
fs
testb
pop
cld
mov
movsb
adc
or
ret
or
mov
mov
hlt
mov
test
mov
sub
mov
pop
mov
pop
push
cmp
push
nop
push
pop
dec
test
mov
fmuls
or
sub
mov
dec
jecxz
lods
mov
mov
notb
mov
les
jge
out
pop
psrad
out
cmp
pop
or
and
test
shrb
shlb
enter
sub
mov
daa
and
dec
enter
iret
cmp
daa
enter
add
lcall
sub
sbb
imul
and
js
mov
fcom
or
jg
mov
sbb
adc
mov
rcrb
mov
pusha
jno
lods
scas
xor
xlat
int
inc
mov
js
repz
pop
xchg
cmp
je
mov
dec
lahf
rclb
xor
jnp
dec
or
enter
in
fs
push
inc
push
gs
xor
outsl
jp
imul
mov
mov
sub
mov
jb
or
in
mov
lret
cltd
lret
mov
fadds
movb
pop
jns
xchg
jne
sbb
test
pop
jg
push
jp
lahf
int
stos
lods
mov
std
cwtl
sti
cmpl
fists
lea
cmp
sub
inc
notl
jp
outsb
fnsave
cmovs
frstor
pop
repz
cli
js
movsl
xor
movsb
push
ret
adc
les
push
sbbl
push
clc
adc
lds
or
ja
sbb
xchg
outsb
push
add
gs
mov
or
sbb
lahf
mov
and
or
add
lea
mov
call
xchg
sbb
xchg
aaa
jo
sub
mov
out
mov
mov
scas
das
imul
dec
movsl
mov
lea
mov
out
or
xor
mov
mov
loop
push
mov
test
das
jmp
jae
shlb
pop
cmp
in
into
loop
popa
test
push
mov
jmp
aaa
repnz
sub
xchg
jae
cs
movsb
pop
test
dec
fs
mov
jbe
out
dec
mov
ljmp
lods
jbe
inc
mov
pop
lcall
mov
ja
and
out
or
stos
in
ficomps
imul
lret
repnz
push
mov
xchg
jecxz
and
cld
cmc
and
and
adc
adc
rcrb
cwtl
and
pop
jmp
push
jbe
cltd
retw
sbb
adcl
inc
out
cmc
mov
jnp
and
sahf
inc
xchg
repnz
lods
pop
dec
shrb
ficomps
or
inc
pop
push
adc
mov
aad
add
hlt
mov
adc
mov
das
push
lods
aas
shl
rorb
aas
addr16
fimuls
pop
mov
add
cwtl
dec
fmuls
pop
in
xor
inc
outsb
push
cltd
fidivrl
les
jl
mov
addr16
mov
inc
dec
jmp
out
adc
or
adc
add
mov
sbb
jae
mov
pop
sbb
lret
daa
insl
jno
push
xor
stos
pop
shrb
inc
inc
pop
ljmp
es
pop
inc
sub
lea
mov
push
hlt
push
inc
jl
daa
aas
xor
rcrl
subb
outsl
push
sti
pop
push
xor
jns
jg
mov
in
pop
mov
dec
and
jbe
dec
jmp
jg
int
xor
out
leave
push
push
ds
xchg
xor
outsw
add
stc
das
dec
dec
and
sub
jmp
sti
pop
and
vandnps
imul
lret
insl
push
jb
pop
lcall
pop
stos
push
cltd
ja
repnz
add
push
js
popa
sbb
and
xchg
xor
add
int
fld
jns
repnz
or
and
out
stos
xor
adc
adc
pop
adc
outsb
sbb
xchg
loop
call
movsb
fisttpl
sbb
mov
cmpsb
or
decl
jbe
lcall
xchg
adc
int3
std
out
popa
in
cmp
in
dec
or
cmc
out
mov
loop
leave
or
mov
or
xor
insb
cmc
test
xchg
femms
scas
fdiv
fcmovnu
pop
jg
es
ret
stos
clc
stos
adc
loopne
cmc
adc
int3
shll
inc
jp
cs
add
mov
pminsw
imul
adc
mov
stc
dec
pop
mov
adc
add
add
dec
imul
ror
pushl
xchg
in
cli
push
outsb
data16
cmp
or
pop
pop
js
xor
addr16
cli
sbb
or
ret
inc
mov
push
sub
daa
loop
fists
mov
xor
iret
sbb
enter
ss
xchg
push
mov
ss
fadds
decb
cmp
loop
add
mov
mov
jb
jle
sbb
cmpl
adc
mov
je
ret
and
shl
insb
test
cmp
cmp
sub
mov
xor
into
jecxz
nop
mov
xchg
mov
mov
imul
mov
and
xchg
push
gs
mov
insl
gs
loope
adc
jle
add
jns
rolb
or
ret
lret
unpckhps
outsb
push
pop
jmp
push
sbb
pop
rclb
adc
out
mov
inc
lahf
outsb
xor
icebp
shl
arpl
arpl
idivl
ja
fucomp
hlt
imul
dec
inc
gs
sub
and
push
clc
cmp
sbb
jbe
cmp
sbb
mov
inc
push
lcall
dec
mov
cmp
adc
push
push
nop
pop
pop
sub
arpl
mov
test
ret
icebp
push
xor
mov
test
add
xchg
sahf
adc
ficoml
adc
push
repnz
insb
and
imul
mov
xchg
mov
je
inc
jae
xor
pminsw
sbb
and
rcrl
inc
pop
outsl
cli
rolb
inc
mov
xor
aaa
iret
stos
arpl
mov
mov
jo
cmp
dec
mov
sub
adcb
dec
ljmp
pushf
test
mov
xlat
mulb
dec
adc
fmuls
lock
lret
inc
hlt
test
inc
das
add
repz
or
mov
nop
push
xchg
and
and
mov
out
jge
ret
add
lcall
mov
repz
pop
jno
xchg
ss
fcmovu
pop
xchg
rclb
xchg
addl
push
lds
scas
cmp
xchg
fcomps
sub
aam
cmp
fldenv
xchg
sub
pop
mov
mov
add
jp
dec
loope
mov
out
rorl
jle
shrb
fidivl
and
mov
or
or
std
mov
fisttpl
or
loop
out
gs
loop
fs
xchg
shlb
push
inc
lods
out
sbb
or
lret
stc
mov
push
push
cmc
push
sbb
mov
arpl
fisubrl
mov
out
xchg
cmpsl
fnclex
sbb
data16
pop
stc
dec
leave
pop
xor
jecxz
hlt
inc
ss
mov
inc
pushl
jle
lret
insb
lods
inc
lock
out
xchg
call
push
mov
out
cmc
fdivrl
add
mov
push
rorb
ljmp
inc
jae
and
mov
mov
mov
fldenv
cmp
adc
mov
mov
loope
and
sbb
mov
jg
push
inc
loop
mov
lahf
add
push
sbb
mov
cmpsl
mov
lret
jae
add
pusha
ljmp
cmp
clc
out
mov
les
push
imul
inc
xlat
add
mov
mov
cmp
mov
mov
inc
clc
loopne
xchg
ret
das
and
jne
pop
or
pop
mov
mov
xchg
xchg
pop
pop
mov
int
mov
lret
ljmp
xor
movsb
push
dec
aaa
sbb
hlt
dec
mov
pushf
or
aam
fildll
pop
add
leave
and
clc
movsl
mov
jp
cltd
into
aaa
clc
inc
adc
das
sbb
adc
xchg
adc
cs
xchg
in
jge
pop
xor
or
adc
aad
add
ret
sahf
inc
into
imul
test
add
xor
sub
testl
xchg
pop
cld
push
shll
dec
fnsave
jp
mov
lods
and
jmp
sti
dec
or
gs
pop
mov
out
pop
pushf
ss
inc
in
pop
or
aad
mov
ret
lock
clc
gs
cltd
je
fcomi
sub
rorb
ret
daa
jmp
mov
lret
jmp
test
jg
adc
stc
pop
or
xchg
data16
xchg
cmp
js
pop
pop
insb
xchg
lods
cmp
dec
jo
js
fisubrl
fstpl
or
adc
push
jle
xor
jae
clc
cmp
pop
mov
add
add
mov
mov
fwait
mov
pushf
push
mov
mov
icebp
pop
mov
or
in
notl
imul
mov
xor
push
dec
out
mov
lcall
fdivrs
mov
add
mov
add
xchg
cwtl
add
mov
daa
pop
push
jg
sub
stos
inc
xor
push
nop
popa
outsb
and
xchg
int3
leave
sti
or
mov
mov
xor
push
addl
dec
movsl
pop
loope
popa
fsubrs
add
push
xor
pop
clc
mov
mov
push
mov
mov
xlat
insb
adc
add
cs
xorb
inc
cmp
daa
arpl
mov
ret
arpl
sbb
pushf
pop
inc
int
and
mov
push
xchg
add
inc
dec
outsl
mov
inc
hlt
adc
int3
dec
or
cmp
ror
faddl
nop
jl
xchg
sbb
or
add
incb
aaa
mov
cld
push
cmp
cmp
jnp
fdivrl
sub
mov
xchg
or
jg
sbb
cmpl
mov
jbe
mov
jp
in
cmpsl
pop
mov
dec
stos
inc
pop
push
adc
pop
test
add
jmp
add
jnp
cmp
decb
loope
pop
std
fcoml
mov
or
rolb
xlat
lock
cs
jmp
popf
mov
or
das
jb
ret
mov
push
dec
mov
lcall
enter
into
lret
ss
imul
xor
or
pop
xor
test
push
inc
rcll
xor
mov
xor
push
inc
repnz
subb
addl
std
sbb
daa
insl
or
mov
mov
movsb
push
inc
xchg
sbb
dec
push
negl
pushf
xchg
xor
pop
mov
jnp
push
push
ja
sbb
inc
iret
mov
fsubrl
lret
clc
repz
mov
data16
and
dec
pop
mov
jecxz
pop
stos
inc
es
mov
lret
in
into
dec
cmc
addr16
js
leave
jl
dec
les
rcrl
repz
out
inc
cmp
shll
nop
push
into
sbb
fcompl
inc
jno
push
jne
pop
mov
push
mov
or
mov
pop
sahf
stos
pop
mov
stos
in
inc
jae
jmp
mov
insb
int3
je
test
lds
push
loop
cmp
hlt
adc
jl
lds
sahf
or
sahf
dec
hlt
dec
jmp
flds
andl
js
push
jnp
xchg
mov
into
scas
xor
and
add
sbb
lcall
mov
mov
int3
inc
dec
pop
mov
cmp
sbb
sub
sbb
sbb
mov
dec
lret
mov
adc
push
push
push
pop
lahf
arpl
lahf
and
push
jae
xchg
out
je
test
cmp
push
lds
stos
inc
jnp
push
push
dec
mov
sbb
aaa
jo
sbb
out
enter
push
stc
test
mov
jge
lret
loope
setne
xchg
shll
xor
nop
mov
movsb
pop
jge
jp
mov
cmp
bound
xor
xor
or
xchg
in
xchg
xchg
and
mov
mov
ss
xor
gs
inc
stos
or
cmpsl
dec
sbb
mov
adc
dec
test
xchg
pushf
cmpsb
sbb
push
pop
fists
jnp
add
nop
pop
sbb
iret
sbb
or
out
ljmp
addr16
mov
out
stos
push
push
das
out
dec
movsl
mov
dec
fistl
lods
jb
cmp
jl
xchg
leave
adc
inc
push
test
adcl
fldenv
mov
cs
dec
into
push
push
push
jg
push
pushf
push
dec
fdivrl
dec
inc
push
cmp
sub
mov
mov
mov
lods
jns
push
add
dec
fistpl
mov
push
out
je
mov
cmp
out
sub
mov
and
inc
aad
add
fwait
mov
sbb
clc
das
push
xchg
xor
popf
push
pop
cld
jns
pop
or
push
xlat
xchg
nop
sbb
sub
pop
dec
mov
xchg
inc
lret
mov
idiv
inc
push
xor
xchg
out
add
scas
ret
iret
lods
das
aam
aaa
aas
push
mov
dec
ss
movsb
xchg
adc
in
sarb
adc
daa
lock
sti
lea
mov
ficoms
jmp
outsl
mov
push
orb
aas
loop
inc
ret
push
imul
add
add
icebp
fdivl
cld
jo
or
sahf
pop
outsb
test
pop
cmp
mov
fnstenv
adc
mov
roll
xchg
iret
push
mov
das
or
hlt
cmp
xor
imulb
test
test
push
or
mov
test
and
or
adc
loop
std
jge
gs
inc
int3
out
outsl
lcall
push
push
repz
and
stos
adcl
cltd
and
pusha
pop
loope
mov
lahf
stos
push
xchg
mov
jbe
adc
cmp
add
sbb
mov
xor
cmp
push
xor
xchg
add
imul
cli
lods
jo
pusha
jecxz
pop
pop
add
ss
lahf
in
iret
std
mov
jecxz
pop
dec
push
pop
scas
mov
xor
xchg
and
fdivrl
sub
mov
bound
sub
inc
and
push
inc
jle
scas
int3
mov
dec
or
cmpsl
dec
movsb
les
pop
sbb
mov
sbb
xchg
inc
faddp
sbb
adc
mov
cmp
xor
xor
pop
aam
push
inc
popa
sub
fsub
jg
int
jecxz
sub
lods
pop
pop
lea
aam
in
sarl
fcomps
movsl
mov
xlat
xchg
aas
inc
test
mov
inc
mov
cltd
xchg
fadd
mov
jb
push
das
cmp
jg
adc
mov
sbbl
cmc
ja
push
out
jne
inc
loope
jbe
outsb
push
jmp
test
out
cmp
or
fdivl
xor
fidivrl
sbb
pusha
inc
sub
mov
mov
jno
dec
lret
mov
rorl
aas
pop
mov
jle
sub
mov
push
gs
adc
adc
push
jecxz
mov
mov
inc
imul
pop
aad
les
in
pop
loop
xchg
jae
jb
loopne
je
in
pop
lock
jne
push
pop
nop
js
les
xchg
adc
enter
jge
cmp
cs
inc
cld
popa
jne
shld
scas
lock
sub
push
das
add
adc
mov
dec
jae
int
adc
shlb
or
pop
and
adc
daa
movsb
scas
add
add
rcrl
test
sub
mov
repnz
insl
out
mov
pop
cmpsl
adc
stos
jae
sahf
pop
popa
push
popa
out
jo
sbb
shrl
int
jb
sbbl
int
push
pop
lods
sti
scas
lods
xorl
mov
lods
xchg
adc
mov
jecxz
dec
cmp
rclb
pushf
gs
test
shlb
stos
out
mov
cmp
cmp
adc
scas
pop
int
or
sub
cwtl
ret
ljmp
mov
inc
mov
push
push
aam
push
and
sub
rolb
fsubr
push
out
and
xchg
jns
adc
push
into
add
push
sub
test
arpl
adc
or
mov
roll
imul
jmp
imul
cld
xchg
jp
inc
mov
in
dec
mov
popf
xor
mov
lret
jno
mov
subb
mov
and
xor
fiaddl
pop
sbb
nop
mov
jno
xchg
mov
cmp
lock
jo
mov
aad
xchg
dec
imul
mov
fbstp
dec
sahf
or
imul
and
roll
xor
imul
adc
shll
rorl
cmpsb
sub
mov
push
js
cld
ja
int3
bswap
push
scas
sub
in
cmpsl
dec
cmc
add
jns
out
mov
mov
mov
in
adc
insb
into
and
cmp
dec
enter
push
dec
loop
hlt
mov
ds
push
loope
stos
inc
push
lret
fs
jge
inc
xor
inc
push
adc
lods
jge
push
xchg
insb
xor
imul
pop
xchg
pop
pop
imul
dec
cwtl
mov
shll
inc
stos
push
xor
int
ja
cwtl
mov
cmpl
push
popa
popa
xor
push
aad
push
add
xor
add
cli
ret
and
dec
and
xor
subb
hlt
out
xchg
sbb
hlt
adc
shrb
push
data16
jns
out
cmp
aaa
mov
lds
test
gs
xlat
repnz
pop
dec
lock
push
sbb
jo
divl
orb
jecxz
ljmp
or
fdivl
dec
icebp
fwait
popf
repnz
inc
adc
addr16
loop
mov
xchg
mov
dec
fs
fistpl
out
xor
push
xorb
lods
fcoml
push
je
sub
or
xor
xchg
pop
xchg
or
ljmp
mov
repz
ja
nop
jge
pop
mov
bound
lods
and
cltd
lret
jo
and
es
imul
xor
pop
fiadds
lods
fcos
or
adc
add
rolb
xchg
inc
xchg
cltd
pop
push
pop
divb
popf
fstps
imul
jp
adc
loopne
gs
jbe
jl
sbb
mov
fsubrl
and
repz
sub
shlb
mov
xchg
xchg
fdivrs
fcmovu
or
inc
mov
adc
xlat
xchg
imul
push
jg
xlat
inc
mov
cltd
pop
std
and
into
sarb
mov
test
aas
sub
cmp
jmp
ret
add
lea
fsubs
pop
out
repz
cmp
pop
out
repnz
data16
mov
cld
sbb
jae
ja
mov
int3
sub
popf
stos
add
mov
pop
push
or
ljmp
or
ficoms
pop
pop
movsb
outsl
ret
push
mov
inc
ljmp
cmp
cmpb
jge
in
aaa
clc
mov
mov
inc
call
lea
movsl
pusha
aam
adc
xor
sbbb
xorb
jo
pop
shll
das
insl
cmc
int
xchg
jecxz
movsb
imul
push
out
aaa
mov
add
jmp
ss
shll
xchg
cmc
xor
pmaddubsw
outsb
or
or
stos
mov
cli
ljmp
dec
inc
pop
into
push
shlb
pop
jl
std
xor
push
fld
cmp
jbe
push
ss
jns
movsl
addr16
mov
jnp
loop
gs
cwtl
lods
mov
push
mov
and
push
lds
sub
cmc
lahf
lret
ljmp
sbb
mov
dec
adc
adc
bswap
dec
mov
dec
jne
lahf
cmp
push
xchg
addr16
fiaddl
fadds
sbb
and
adc
sbb
and
jmp
into
dec
cs
and
int3
push
cmp
mov
mov
das
call
loope
dec
adc
sbb
lods
mov
mov
cmp
xor
int3
pop
sti
mov
lahf
dec
addr16
dec
pop
mov
rcrb
dec
fsubrl
rorl
jmp
mov
pop
inc
sbb
xchg
test
mov
sbb
cmpsb
push
push
jle
dec
fimull
in
int
andl
iret
add
movsb
add
outsb
and
lcall
std
dec
mov
dec
mov
popf
lcall
add
lcall
flds
and
insl
lods
sub
dec
mov
cmpsb
scas
or
dec
lahf
xchg
aad
pop
mov
mov
stos
ret
test
inc
into
jge
dec
pop
arpl
hlt
inc
add
sub
cmpsl
xchg
loop
xchg
test
add
add
lea
movsl
mov
ficoml
push
add
add
mov
pop
sbb
out
push
lcall
je
sub
lea
xor
push
push
into
fdivrp
ja
inc
lds
imulb
mov
sahf
cmc
cltd
inc
push
mov
add
lds
ds
add
filds
data16
call
stc
pusha
xor
mov
xchg
dec
sub
xor
pop
lds
and
xchg
addb
add
call
mov
outsb
push
xchg
add
jo
ljmp
ja
mov
mov
mov
add
cmpsl
fmull
rclb
pusha
rclb
movsl
mov
push
push
pusha
pop
and
lea
sbb
addr16
pop
adc
sub
or
repnz
decl
scas
repz
push
xor
and
fisubl
jbe
lret
out
push
arpl
repz
js
cmp
mov
inc
shrd
and
or
movsb
or
jnp
inc
mov
cltd
int
xchg
jae
jne
insb
mov
push
inc
mov
addr16
hlt
push
xchg
sahf
pop
mov
fldcw
repnz
stos
sub
divb
mov
push
dec
arpl
test
xchg
lcall
mov
stc
outsl
nop
jns
dec
ja
sub
repnz
cmp
mov
sbbl
clc
loopne
cmp
cmp
xor
gs
add
sub
das
shr
pop
addr16
pop
add
push
jns
push
daa
xchg
ja
test
out
xlat
lds
cmc
loopne
mov
aaa
sub
ljmp
mov
dec
jb
sbb
push
and
cmc
aaa
pop
adc
dec
dec
and
dec
pop
int3
movsl
popa
hlt
scas
mov
and
out
mov
adcl
sub
inc
popa
vmwrite
in
pop
and
rclb
lock
test
lret
mov
xchg
mov
mov
mov
push
out
and
fucomp
pop
cmp
ljmp
lds
outsl
jbe
pop
xchg
pop
pop
mul
jle
jns
xchg
add
int
fsub
mov
mov
xchg
addr16
leave
cmp
insb
push
add
ret
insl
lret
in
dec
loopne
add
enter
aam
mov
ja
ret
mov
nop
stc
aam
or
mov
scas
xchg
pushl
xor
fldt
add
imul
adc
push
outsl
inc
popa
decb
mov
lret
sbb
push
mov
mov
cmpsl
loope
add
into
add
push
xor
leave
mov
repz
dec
xchg
mov
int
lret
fsub
jae
cltd
lret
dec
dec
sub
mov
aam
sub
cmpsl
testb
jge
fcomps
adc
pop
pusha
xchg
xchg
jb
and
es
test
subl
adc
adc
and
out
popf
shrl
mov
outsl
data16
enter
mov
scas
enter
push
adc
getsec
pop
and
in
jnp
sbb
inc
hlt
mov
sarb
aad
inc
xchg
xchg
je
or
bound
in
decl
lock
imul
out
dec
in
data16
roll
xchg
xor
stos
sbb
inc
adc
lods
mov
addr16
jecxz
add
xchg
int
lea
icebp
push
test
testl
mov
xchg
nop
test
ds
lret
aad
fbstp
std
pop
stos
insl
pop
pop
jmp
insl
cmc
ljmp
lods
fisttpl
push
or
dec
adc
mov
xlat
cmp
push
icebp
jl
scas
popf
aad
push
jge
and
lods
sbbb
sbb
inc
sbb
cld
dec
lahf
or
jb
add
lcall
inc
in
mov
loope
sub
clc
adc
popa
fmull
mov
mov
aaa
jmp
add
filds
xchg
out
movsb
jecxz
aaa
push
sub
and
xchg
xchg
dec
push
stos
jl
sbb
or
mov
inc
mov
andl
mov
pop
and
push
push
adc
outsb
enter
stc
sbb
cmp
xchg
bound
or
pop
rcll
sub
sbb
in
imul
ljmp
cmp
cs
sbb
mov
pop
sbb
mov
inc
stc
inc
and
inc
and
push
adc
adc
lock
adc
add
clc
mov
inc
inc
inc
xor
repnz
test
enter
add
lcall
fadds
dec
pushf
pop
inc
mull
jae
into
dec
push
push
hlt
mov
or
iret
rcrb
cmpsl
sub
cmp
sbb
pop
lret
jecxz
iret
jae
jl
mov
xchg
ja
aas
cmp
iret
push
mov
loop
mov
sbb
fidivrl
pop
sub
in
sub
cmp
test
jle
je
push
pop
mov
push
std
inc
lods
dec
mov
xor
aad
imul
in
loope
add
ret
add
lock
pop
pop
adc
emms
shll
mov
inc
out
gs
pop
pop
mov
dec
mov
ja
movsb
sarl
sbb
xor
loopne
jl
sbb
mov
add
add
xchg
sub
mov
xor
mov
xchg
ret
cmp
pushf
pop
stos
push
cmp
movsb
and
adc
movsb
fwait
sbb
push
mov
jge
or
pop
imul
lcall
add
xlat
inc
cwtl
xchg
daa
mov
fbstp
pop
cmp
ss
mov
aaa
aam
test
xchg
sbb
imul
jecxz
push
add
mov
cmp
xor
add
adc
cmp
and
into
pop
mov
inc
lea
mov
arpl
mov
lds
iret
mov
pop
imul
lahf
lock
push
div
cmc
imul
out
lock
sub
in
xor
mov
push
bswap
adcl
adc
cltd
jp
enter
xchg
mov
lods
popf
loopne
fcmovne
jl
into
loope
das
push
bound
fisubrs
and
or
pop
push
repnz
stos
test
shll
push
frstor
push
mov
mov
jl
xor
mov
les
idivb
rcrb
mov
sub
fnstsw
adc
dec
shll
adc
fdivs
inc
lahf
shrl
mov
and
dec
inc
stos
xchg
pushf
cmpsl
jne
mov
cmp
jmp
cli
xchg
aaa
pop
lahf
scas
adc
fwait
push
or
sbb
or
leave
adc
insb
cltd
icebp
inc
adc
mov
aad
cmpl
mov
sbb
mov
mov
mov
insb
scas
lds
fcmovbe
popf
call
out
subl
scas
mov
arpl
jmp
lahf
xor
pop
xchg
movsb
add
pop
pop
jg
mov
and
mov
and
xchg
aad
jle
mov
xor
fsubr
inc
add
mov
cwtl
fldt
add
sbb
movsl
aaa
mov
enter
cmovb
pop
hlt
inc
pop
rorb
xor
cmpsl
xchg
cwtl
sbb
jne
inc
into
int
popf
pop
jb
loop
orb
das
inc
jl
xchg
adc
das
mov
push
lahf
ds
sbb
cmp
lods
xorl
pop
stos
mov
or
out
jb
mov
push
and
fsubs
dec
inc
inc
push
aam
sbb
mov
inc
or
and
test
mov
mov
orb
clc
pop
cmp
push
pop
jmp
test
aam
and
adc
mov
popa
popl
fdivs
test
mov
repz
out
roll
leave
and
xchg
xor
out
adc
add
push
movhps
inc
add
filds
imul
sahf
and
and
xchg
in
xchg
insb
push
pop
shr
in
das
lods
dec
icebp
or
in
jle
xor
mov
seto
dec
aaa
and
or
mov
adc
aam
push
mov
lret
and
sbb
test
jae
insb
mov
ss
or
or
bound
jo
cmpb
gs
mov
sbb
gs
mov
incl
daa
xchg
into
xchg
xchg
cmp
scas
int3
cmp
add
mov
mov
imul
nop
lret
jae
adc
push
adc
jg
push
inc
nop
jmp
mov
int3
scas
or
lds
fs
mov
push
mov
dec
mov
xor
push
adc
shrl
add
nop
lods
push
inc
aam
arpl
push
lock
inc
div
clc
arpl
inc
or
fwait
inc
addr16
mov
outsb
les
in
mov
mov
out
mov
int3
jno
and
xor
inc
pop
lds
cmpsl
test
idivl
sarb
lret
xchg
pop
add
ljmp
rclb
adc
lret
imul
jne
fwait
cli
outsl
xor
and
dec
xor
icebp
xchg
sbb
jmp
jae
adc
shlb
imul
add
cmp
cmc
pushf
inc
lods
fucom
in
fcompl
stc
pop
cli
shrb
movsl
cmp
movsb
add
mov
cmp
rcrb
mov
push
adc
pop
jae
cwtl
fnstsw
hlt
push
lret
mov
nop
mov
xor
sbb
out
mov
outsl
dec
jo
out
mov
mov
cmpl
inc
add
aad
lods
and
clc
mov
orl
loopne
andl
movsl
int
xor
cld
pushf
or
das
fnstsw
cli
inc
pop
sub
shrb
pop
inc
mov
mov
push
mov
dec
adc
out
or
int
out
js
inc
loop
cmp
add
rcr
lods
pop
inc
test
fdivl
imul
fidivl
mov
lock
adc
add
bound
lock
mov
jbe
jp
fnstcw
push
cwtl
pop
dec
cmp
mov
je
xchg
repnz
sti
sbb
push
ja
stos
push
add
adc
mov
pop
repnz
cmp
lcall
lods
cmp
hlt
xchg
add
movsbl
cli
sbb
pop
pop
negl
sub
mov
mov
fdivr
lea
jb
test
jnp
ljmp
arpl
fists
inc
test
aaa
pusha
in
xor
inc
pop
rcr
rorb
sar
ret
push
std
repz
fnstcw
out
or
xchg
ja
lret
pop
cmp
out
sahf
ds
fwait
incl
pop
xlat
testl
mov
lcall
dec
xor
movsl
test
xor
stc
mov
faddl
inc
pop
push
sub
movsb
push
iret
cmpsb
push
jg
jns
dec
push
enter
mov
add
addr16
test
cmp
jle
test
into
xor
xor
jo
and
hlt
cld
cs
mov
enter
add
inc
fcomp
fidivl
jle
aad
aaa
jl
mov
add
fstpl
int3
iret
ficoms
xchg
lcall
jmp
loop
cli
sub
fidivl
sbb
and
cmc
mov
aaa
mov
insl
sub
test
fisubs
ja
lret
cmp
xor
adc
bound
xor
mov
or
xchg
jnp
call
lea
adcl
lahf
push
xor
mov
bnd
xor
out
xchg
dec
pop
xchg
xor
pop
jno
nop
jle
popf
fcmovnb
mov
jle
addr16
mov
sti
rcrl
and
jp
xor
push
jmp
adc
inc
cwtl
adc
sub
dec
popa
stos
dec
adc
xchg
mov
add
inc
fdiv
es
mov
sbb
out
push
sahf
mov
sbb
add
mov
enter
mov
xor
mov
mov
push
cmp
sarb
xor
jbe
out
ficoms
fldcw
xor
adc
mov
fisttpll
push
jl
or
mov
mov
mov
push
mov
sbb
hlt
in
outsb
jne
enter
sbb
int3
test
scas
popa
sahf
cmp
or
cmp
mov
sub
push
sbb
xchg
pushf
mov
inc
dec
adc
shlb
bound
les
sub
push
cmpsl
pop
in
pop
gs
roll
lret
fwait
iret
jbe
sbb
push
testb
xor
pop
cwtl
and
cltd
cmp
push
push
mov
mov
andb
es
lahf
lret
mov
movsb
add
mov
jo
adc
sahf
inc
out
dec
push
mov
bound
lret
cmpsb
ja
mov
cli
dec
fs
push
mov
out
fsubrl
pusha
test
loopne
xchg
dec
lods
call
xchg
leave
cmpsl
nop
mov
mov
mov
divl
pop
add
inc
fs
aad
xchg
mov
cmp
push
mov
fincstp
std
fldt
add
pop
shll
pop
push
leave
sub
push
add
add
call
shlb
aaa
mov
xchg
xor
or
stos
push
les
sbb
iret
adc
push
cmp
and
je
mov
mov
add
outsl
xchg
cmc
sbb
mov
jmp
mov
mov
cwtl
mov
add
jno
rorb
or
inc
mov
add
movups
arpl
xchg
aas
pushf
adc
lret
test
out
push
jl
int3
imul
arpl
jg
push
cmp
and
and
xchg
cs
fcmovbe
or
mov
stos
popa
cmc
lea
pop
pop
lcall
adc
mov
idivb
and
mov
dec
lret
xor
enter
fisttpll
shlb
scas
test
sub
insl
add
imul
and
lods
mov
shll
add
rcrb
jle
jmp
out
and
and
jecxz
cltd
cltd
rcrb
jnp
cmp
jg
mov
cmp
adc
sbb
lcall
sbb
mov
int
xchg
mov
inc
sub
negl
push
push
jl
aaa
lahf
out
pop
nop
icebp
fistpl
pop
pop
dec
xchg
sub
jmp
mov
or
cwtl
fdivl
rcr
xor
mov
cld
bound
push
aaa
out
es
push
test
pop
mov
lret
out
cmp
in
cmp
ljmp
les
icebp
rorb
jp
lret
pushf
hlt
mov
pop
fildl
dec
clc
sub
int3
jmp
jno
mov
lret
fwait
mov
out
mov
or
mov
dec
test
clc
inc
mov
pop
add
mov
push
in
stos
les
jb
aam
push
or
dec
outsb
shld
mov
cmpsl
jb
jbe
dec
insb
xor
jne
lea
xchg
daa
lahf
popa
pop
int3
push
in
in
jecxz
push
jb
push
push
cmp
inc
ret
call
icebp
jbe
lea
push
repz
pop
sbb
add
arpl
fcoms
loopne
or
sub
stos
mov
shr
out
subb
jnp
imul
push
lds
push
mov
adc
xchg
mov
test
pop
out
add
pushf
jle
iret
mov
mov
xchg
lods
or
mov
movsl
add
or
arpl
xchg
and
cmp
and
outsl
xor
leave
xor
sbb
mov
sub
cmp
and
cmpsb
loopne
sub
outsl
nop
rcrb
jmp
xchg
lock
and
je
inc
sti
imul
ficomps
lea
out
mov
sbb
and
pusha
push
enter
mov
sub
add
stos
xchg
in
mov
roll
addl
inc
fisubrl
aas
insb
or
xor
ret
dec
shll
pop
dec
and
fcomip
xchg
rcll
into
pop
jbe
dec
mov
jbe
popf
xchg
addr16
inc
cmp
repz
imul
insl
pop
adc
mov
push
sarb
stos
ds
inc
movsb
fnstcw
mov
xor
cs
pop
std
mov
push
pop
fisubrs
mov
jl
adc
out
rcll
pop
xchg
lcall
ret
scas
cmc
push
push
xor
iret
mov
pop
ds
xchg
popf
mov
fistps
lods
mov
daa
arpl
inc
jo
dec
push
mov
popa
adc
daa
xchg
cld
push
jbe
dec
pop
ret
pop
jo
mov
out
push
xchg
cmp
or
orb
cmpsb
mov
jl
inc
mov
add
repnz
sti
adc
xor
aas
addl
enter
fstpl
jo
scas
jle
sbb
bound
test
scas
pop
dec
shll
xchg
jae
mov
mov
mov
in
inc
arpl
cmp
into
cmc
mov
out
push
inc
enter
xchg
inc
add
pusha
mov
cli
mov
lahf
shl
pop
orb
mov
xchg
mov
dec
or
inc
out
sub
bound
cmp
cwtl
add
dec
xor
or
insb
push
int3
lock
mov
ret
pop
mov
lret
jae
pop
ficomps
pushl
sbb
xchg
mov
inc
mov
xor
pop
mov
in
xor
int
and
mov
leave
push
movsl
xchg
aam
dec
cmp
dec
shl
adcl
push
push
cli
fs
iret
gs
mov
mov
test
cli
cmpsl
jae
xchg
cli
or
int3
sbb
lret
test
cld
cmp
lret
and
ljmp
jnp
push
pusha
test
and
inc
outsb
ljmp
jo
call
xor
xor
das
and
inc
out
cld
bound
push
dec
mov
jno
andb
in
sarl
fwait
mov
sub
push
xor
inc
xlat
rolb
or
pushf
mov
push
daa
iret
mov
repz
mov
clc
pop
stos
scas
fisubl
imul
fldcw
inc
mov
adc
xor
cmpsl
in
dec
loope
dec
out
mov
lds
xchg
mov
ds
xchg
push
insb
pop
jae
data16
fadd
ret
push
int3
cmp
decb
popf
mov
stc
dec
gs
mov
aam
sub
inc
push
mov
push
adc
mov
pop
jae
mov
add
sub
jl
bound
push
pusha
leave
shl
sarl
xchg
insl
into
dec
jle
outsb
adc
jp
into
mov
or
mov
add
addr16
push
mov
test
xchg
jo
push
push
add
push
push
cli
sub
out
ja
mov
mov
dec
cmp
mov
gs
cli
jecxz
inc
pop
pop
movsb
push
jle
dec
jp
push
dec
mov
in
out
cli
pop
push
enter
xor
mov
pop
pusha
notb
clc
jo
shrb
jecxz
scas
cmc
or
stos
or
in
sbb
mov
and
fdivs
push
in
mov
popf
out
and
cmp
mov
popl
mov
nop
or
mov
xchg
push
mov
mov
mov
dec
mov
fldcw
popf
and
inc
repnz
ficoml
push
ret
adc
stos
sbb
lea
cmp
test
imul
dec
inc
and
push
inc
push
mov
mov
arpl
push
icebp
nop
ret
mov
inc
movsb
dec
ljmp
loopne
bound
test
cld
pop
push
ret
in
mov
aas
cmp
lret
addr16
xchg
daa
daa
cmc
xlat
push
iret
pop
movsl
jne
dec
or
xor
mov
push
lcall
xchg
dec
xlat
push
lret
into
and
pop
dec
jne
mov
jp
aaa
addb
cmp
mov
jbe
js
mov
imul
add
fnstenv
fistl
out
test
stos
or
inc
jne
pusha
cmpsb
pusha
mov
mov
out
out
xor
punpckhbw
scas
cld
pop
jg
xchg
jns
outsb
and
sub
shlb
or
pop
scas
xchg
lods
jecxz
int
aas
cmc
call
mov
jns
add
inc
pushf
xor
jl
add
sub
xchg
pop
push
lods
or
mov
out
push
jnp
mov
jmp
mov
stc
sub
lret
mov
sbb
xchg
cmp
xchg
jno
mov
test
xor
inc
outsl
es
cltd
add
sub
cmp
mov
mov
fildl
add
dec
cltd
pop
shlb
and
cmp
lret
je
pop
rcrb
das
mov
aaa
movsl
xchg
pusha
push
ja
xchg
adc
loop
popf
xor
push
imul
jno
pop
cwtl
push
mov
shl
out
movb
inc
or
cmpsl
lahf
sub
xchg
pusha
mov
xchg
stos
cmp
pop
dec
cmpsl
loope
inc
addl
mov
and
sbb
out
xchg
ficoms
out
cmpsl
dec
lock
sub
es
hlt
pop
jmp
xchg
mov
aas
lret
insb
cmpsl
push
jne
stos
inc
test
sbbl
int3
mov
addb
arpl
les
shlb
das
pop
pop
mov
pop
popa
iret
adc
pop
jo
jg
xor
test
sbb
sub
sub
pop
fnstenv
pop
fwait
leave
int3
cli
stos
clc
dec
xchg
ss
pop
in
add
pushf
push
daa
mov
imul
sbb
daa
fcoms
mov
and
cltd
fwait
adc
out
xor
fwait
mov
fwait
mov
xchg
es
insb
adc
mov
scas
in
jb
sub
or
jb
aad
add
xchg
shll
xor
cltd
leave
call
jnp
xor
xchg
cmpsl
scas
pop
lods
mov
push
push
mov
sbb
lret
dec
dec
fstps
sarb
mov
xor
das
jmp
and
mov
jnp
icebp
jle
frstor
xor
pushf
pop
mov
jecxz
fdivl
hlt
mov
mov
and
cld
orb
icebp
pop
push
pop
mov
cmpsb
push
ret
popf
xlat
shll
inc
pusha
pushf
mov
mov
jo
or
inc
lret
fmul
out
cmp
inc
cmp
fwait
nop
int3
push
nop
cmc
arpl
xor
addr16
pop
cli
mov
dec
xchg
xor
mov
cmp
xchg
jle
fcompl
inc
xchg
jmp
mov
fwait
push
xchg
or
xor
stc
pop
push
mov
sub
es
push
sarb
fidivl
sbb
push
sub
sub
inc
lret
mov
fsubrl
add
push
jnp
aam
in
iret
push
jmp
mov
pushf
jno
mov
loope
xor
push
stc
in
or
sub
insl
rclb
mov
jge
retw
xor
inc
jo
rcl
pop
cmp
mov
movd
imul
inc
add
fmull
bound
stc
cmp
pop
ret
fwait
dec
push
xchg
stos
adc
fsub
inc
mov
cmovae
mov
sbb
sahf
pop
out
mov
sbb
test
fwait
jmp
movsl
pop
out
jl
mov
test
sub
out
aas
add
sbb
lea
iret
push
out
andl
stos
jl
push
loop
loope
jmp
or
js
test
pop
push
pop
cmc
dec
stos
xchg
scas
and
mov
xor
es
gs
jmp
popa
jae
mov
xor
pop
enter
adc
mov
xor
stos
addr16
push
mov
mov
mov
dec
out
cmpl
mov
jge
ss
jns
das
scas
in
lods
jp
and
add
leave
sub
cmpb
mov
mov
les
xchg
incb
cltd
aad
std
dec
clc
into
cmc
lock
xchg
test
cltd
sbb
cmp
js
mov
mov
faddl
push
in
ja
adc
xchg
adc
add
or
daa
xor
imul
xorl
jmp
push
incl
repnz
push
sti
mov
add
push
jo
pop
mov
fiaddl
dec
sub
inc
jbe
mov
arpl
xor
jg
and
inc
test
out
inc
jmp
dec
cwtl
subb
ret
mov
aas
loop
and
cwtl
das
inc
lods
sarl
cltd
lahf
sbb
jb
push
add
and
in
rorb
push
mov
aas
push
sti
inc
call
cmpsl
lcall
mov
and
call
xor
incb
mov
mov
add
dec
ret
pop
lcall
push
outsb
dec
arpl
lcall
js
enter
testl
adc
movl
pushf
insb
loop
ret
xor
dec
mov
movsl
mov
cwtl
sbb
test
ficoml
divl
mov
pop
pop
or
dec
jp
fistps
fucomp
dec
dec
push
xor
cmp
outsb
loope
ja
sub
sbb
sub
cmpsb
pop
cltd
mov
push
arpl
in
push
pusha
xor
enter
pop
aam
scas
cmc
jb
fs
jno
es
push
divw
sbb
mov
call
cltd
dec
push
inc
mov
push
xchg
xor
lods
aas
push
add
mov
lods
gs
fsubl
repnz
testb
popf
out
jmp
test
fdivrs
out
pop
test
mov
test
bound
jne
cmp
dec
jmp
inc
push
adc
xor
mov
cmp
pop
xchg
stos
add
lea
mov
add
add
add
add
add
pop
test
sti
and
dec
push
int
loop
andb
mov
pop
nop
cli
xlat
pushf
in
in
cmp
push
outsl
mov
into
and
mov
cli
add
ds
fistps
mov
imul
out
outsb
mull
into
mov
cmp
cltd
cmpb
jmp
insl
inc
dec
sbb
add
cs
icebp
and
scas
incl
add
ljmp
popf
outsb
dec
enter
pop
push
fs
or
sub
xor
popl
push
lea
inc
push
imul
cs
jb
xor
clc
cmc
mov
push
push
xor
mov
sub
cmc
xlat
in
aad
inc
pop
mov
das
mov
sub
insb
sbb
sbb
movsb
ds
push
cmp
cmp
lods
dec
dec
jecxz
push
repz
sbb
sbb
sub
lret
mov
mov
out
xor
inc
jb
je
pop
sbb
rcrb
std
lcall
mov
mov
fistl
adc
xor
fsub
add
add
fdivs
fwait
cmp
les
cld
bound
inc
andl
fisttps
lcall
cmp
call
pushf
lret
out
or
enter
fdivrs
pop
mov
add
leave
mov
ja
loopne
repz
cmp
push
das
jae
loopne
xchg
loop
mov
xchg
inc
mov
mov
scas
mov
lret
loopne
frstor
ja
je
jl
sbb
cmpsl
mov
dec
add
into
and
xchg
outsl
dec
dec
sahf
dec
dec
mov
dec
mov
stc
pop
pop
xor
mov
xor
xchg
mov
or
gs
cli
sub
xor
and
sub
jnp
in
fwait
sarl
pop
repnz
xchg
cmp
mov
iret
outsl
insb
inc
pop
fdivrs
ljmp
push
loop
mov
out
leave
orl
sbb
call
mov
or
cwtl
sbb
lods
out
or
into
pop
mov
jmp
enter
ret
stos
and
les
or
ljmp
or
dec
shll
push
in
mov
inc
mov
fisttps
clc
sbb
push
repnz
xor
inc
fwait
mov
mov
das
shrb
sub
or
enter
pop
dec
lret
jp
add
lret
xlat
divb
add
call
xor
lods
mov
cld
push
in
ss
mov
sub
ss
int3
ljmp
loope
aad
add
ljmp
insl
rcl
mov
fwait
test
cld
mov
shl
test
mov
push
sbb
sub
sub
lods
jecxz
jmp
mov
sarb
adc
fadds
xor
std
sti
faddl
adc
ret
push
ficompl
add
cmp
cmpsl
in
xor
shlb
aas
cmovo
xor
hlt
xchg
lea
cmp
mov
push
sahf
mov
xor
or
ja
fsubrl
outsb
outsl
push
fs
add
test
inc
sbb
enter
rorl
pop
je
test
jl
shl
dec
mov
push
fwait
cmpsl
xor
popl
and
lcall
call
cwtl
mov
addl
xlat
push
or
mov
push
fbstp
pop
addr16
cli
lret
stos
outsb
cmp
mov
sbb
negb
fwait
sub
or
std
dec
cmc
push
sbb
sub
lcall
cwtl
xchg
push
aam
les
out
and
and
pop
cmp
fistpl
push
pop
cmc
das
xor
add
push
mov
outsb
or
jge
jg
scas
imul
ret
xchg
add
fisubrs
lahf
pop
cmpsb
sub
mov
pop
mov
dec
loope
xchg
andb
icebp
lahf
imul
cmpsb
add
mov
xchg
fldenv
pop
adc
cmp
or
jne
scas
or
sbb
rcrl
stos
jecxz
int
push
fnstcw
mov
sbbl
test
inc
mov
adc
xor
iret
sti
cmpsb
cmp
mov
adc
test
mov
in
add
aaa
dec
sbb
nop
push
in
add
and
movsb
icebp
pop
jge
inc
movsl
pop
inc
adc
sbb
leave
js
and
push
pop
mov
and
outsb
xchg
cmp
adc
add
repz
enter
push
mov
push
incb
pop
or
adc
mov
aas
pusha
stc
mov
dec
xchg
cli
jecxz
pop
sub
push
add
sti
pop
mov
roll
mull
add
pop
mov
inc
pop
jp
push
xor
xchg
call
and
jbe
mov
andb
xor
lods
call
xor
pop
loopne
gs
mov
data16
xchg
hlt
jb
add
stos
pop
cmpb
call
inc
dec
decb
mov
leave
add
into
jb
stos
mull
ret
mov
push
hlt
jecxz
into
mov
cmpsl
arpl
jns
inc
je
xchg
fidivs
insl
bound
adc
mov
adc
dec
push
mov
inc
shll
fiaddl
insb
inc
and
aad
mov
fcmovu
mov
pcmpeqd
into
xor
jo
mov
insl
mov
lock
leave
test
mov
jb
xorl
xor
fstpt
add
xor
ss
sub
lcall
out
push
insb
push
or
in
or
push
inc
stc
or
jge
xchg
fs
xor
out
stos
inc
mov
movsl
or
out
sub
stos
jbe
mov
cmp
mov
jae
aaa
jg
shlb
push
fwait
in
aam
xchg
int3
scas
push
jnp
xchg
les
sbb
nop
jnp
mov
aaa
push
sbb
dec
xchg
cmp
fiadds
std
shll
jl
add
imul
adc
adc
and
fadds
and
jne
inc
repz
clc
cmp
mov
mov
out
push
scas
xor
cmpsb
ljmp
fsubs
adc
fdivr
in
lock
fwait
iret
or
mov
in
jl
mov
lock
push
repz
rcrb
loope
mov
cmpsl
mov
jns
xchg
push
push
mov
je
das
mov
ss
in
jo
jecxz
fsubl
stos
stos
testb
stos
jmp
mov
ljmp
pop
mov
test
cmp
ljmp
push
imulb
lret
cmp
mov
fwait
xchg
leave
jg
xor
jge
std
cltd
xor
jns
xor
repz
lret
daa
mov
gs
and
or
fsubs
fcomps
inc
xchg
mov
testl
rorl
fisttps
addr16
stos
dec
mov
mov
pop
mov
mov
lcall
mov
test
insb
xorl
dec
clc
data16
mov
fldl
inc
adc
push
movsb
adc
jge
sahf
call
pop
mov
adc
or
dec
mov
ret
divb
pop
push
mov
int
cmp
pusha
das
push
or
fsts
pop
mov
fistpll
std
pushf
mov
xor
shl
imul
add
orl
aam
je
mov
xchg
ret
fs
lcall
out
adc
rorb
pusha
mov
jl
fnstcw
je
dec
fstpt
out
mov
std
imull
aaa
cmp
fmull
lahf
xor
icebp
leave
and
lret
jo
adc
scas
push
cmp
or
inc
mov
cwtl
sti
std
sub
push
sti
jne
lods
test
lcall
pop
xor
test
dec
push
call
jl
mov
and
add
adc
jle
sbb
push
bound
out
outsb
pop
jecxz
mov
testl
push
pop
sbb
sti
aad
push
int
fsubr
in
mov
jno
jg
pop
add
out
imul
mov
push
lods
add
sbb
jecxz
dec
push
add
dec
cmp
arpl
lock
sub
sbb
mov
in
xor
lahf
inc
pushf
loopne
aaa
popf
jo
sbb
sub
ss
jno
std
mov
pop
xor
or
imul
xor
aaa
xor
ret
dec
hlt
fstl
pop
mov
and
push
je
movsl
loopne
fwait
mov
add
loope
jbe
xor
test
cmp
mov
aad
jne,pn
pop
stos
outsl
popf
es
out
test
or
pop
inc
add
inc
mov
jno
jecxz
das
rcrb
nop
lret
jecxz
sub
in
imul
cmpsl
dec
xchg
mov
add
mov
in
add
out
xchg
inc
xor
cli
pushf
outsb
dec
pop
inc
fnsave
xchg
xchg
rdmsr
adc
and
loope
js
je
and
imul
shlb
in
stos
stc
mov
mov
mov
sub
push
add
repz
or
xor
mov
loop
sub
das
or
insb
icebp
jge
mov
lods
push
xchg
loopne
lods
adc
jne
adc
aaa
mov
xor
js
adc
sti
push
jg
jnp
fucomip
adc
mov
lods
inc
popf
add
adc
insb
out
loope
out
mov
push
das
add
dec
fwait
std
xchg
mov
sbb
sbb
sub
xchg
out
std
aaa
xchg
pop
jmp
out
inc
pushf
loopne
sarl
xchg
in
lods
out
mov
enter
movb
sub
insl
or
or
xor
jne
push
push
xchg
jp
nop
in
fdivrl
xchg
rol
popa
fs
inc
hlt
pop
mov
sbb
push
or
jl
sub
adc
add
les
stos
push
fcmovbe
xchg
imul
inc
sbb
aaa
aad
sub
sbb
pop
xchg
cmp
lds
insb
dec
sub
xchg
dec
xor
insl
adc
cmp
add
adc
test
push
gs
dec
xor
adc
inc
mov
xor
mov
jno
clc
pop
shlb
push
jnp
leave
pop
mov
popa
push
iret
test
and
xchg
jbe
jbe
xchg
gs
xlat
shll
push
sarb
mov
sti
push
testl
mov
add
jmp
adc
mov
les
xchg
stos
cli
dec
out
jecxz
dec
lock
sti
xchg
inc
cmp
adc
push
mov
or
mov
nop
popa
fsubl
mov
cmp
scas
sbb
jnp
pop
xchg
xchg
push
sbb
mov
adc
rclb
nop
xor
test
add
xlat
cmp
inc
pop
mov
lahf
imul
jg
or
rcll
mov
sbbb
dec
xor
test
mov
push
cmc
mov
loop
mov
daa
xchg
imul
pop
loopne
in
sub
mov
add
add
xchg
mov
insb
jg,pn
daa
push
stos
jnp
xor
add
mov
add
not
in
push
inc
push
mov
mov
addr16
xor
cmp
stc
loopne
mov
test
sbb
cmp
mov
jle
lods
popf
bnd
jnp
in
xchg
and
imull
sahf
mov
pop
loopne
addr16
loop
fs
fcomps
xor
or
xchg
loop
sbb
push
out
decb
test
rep
movsl
inc
lock
mov
xor
jle
out
xchg
xor
out
dec
pushf
rcrb
mov
push
aad
push
mov
mov
lods
jnp
arpl
or
jp
icebp
in
add
test
jo
add
mov
ss
out
sahf
movsb
iret
divb
cmp
dec
jbe
cmp
shrl
mov
jno
pushf
adc
pop
mov
lds
mov
rorl
fidivl
cli
mov
mov
rorl
rorl
movsl
aaa
add
push
mov
cmp
xchg
sub
push
ror
xchg
sbb
jo
aas
cld
mov
ror
movl
call
jb
pop
push
sbbl
pop
pushf
and
outsb
pop
add
or
arpl
out
xchg
movzwl
aas
jno
xor
sbb
sub
sub
jae
fcmovnu
mov
fs
imull
repz
and
popa
push
in
cwtl
xchg
push
jle
fidivl
cmpsb
xchg
xor
mov
or
les
add
dec
add
hlt
jecxz
sbb
pop
adc
mov
xchg
or
js
xchg
popa
sub
outsb
dec
movsl
pop
push
push
jb
or
xor
pusha
aad
jp
add
mov
mov
sbb
or
test
js
lods
popl
pop
xlat
subb
push
xchg
lods
or
popf
adc
loope
sarb
pop
bnd
xor
cmp
push
push
int3
adc
leave
daa
fcmovne
xchg
orb
leave
adc
jno
xchg
dec
mov
xlat
mov
or
les
roll
adc
lock
xchg
jo
loop
mov
adc
jns
ja
stos
mov
sbb
sub
push
cs
xlat
arpl
xor
jno
sarl
mov
add
inc
fwait
ds
sbb
js
xchg
aad
out
dec
or
shll
mov
lret
mov
and
lods
movsl
cmp
sbb
fdivr
mov
push
lds
or
je
jae
out
add
xlat
nop
mov
test
cmp
pop
test
push
mov
push
aas
cmpsb
movsl
mov
sbb
push
cwtl
mov
and
push
hlt
inc
adc
adc
call
lcall
aam
sbb
std
adc
push
sub
mov
jae
cmp
ret
call
sub
pushf
or
adc
jecxz
dec
push
mov
pusha
sbb
dec
das
add
adc
in
push
setge
imul
mov
add
cmp
jnp
add
aas
and
and
push
cmp
sub
cmp
sub
test
sti
xor
ret
add
cltd
out
test
and
insl
and
fistpll
push
sbb
cltd
sar
cwtl
dec
pop
xchg
and
ds
push
pop
cmp
mov
imul
xor
dec
enter
das
lea
inc
xchg
xchg
xchg
sbb
pop
sub
iret
mov
and
add
nop
inc
in
mov
xchg
push
jle
mov
pop
sbbb
adc
xor
cmpsl
sbb
mov
lock
inc
pop
jecxz
jl
pop
repz
push
cmp
popf
mov
pop
mov
xlat
cmp
jae
push
dec
jmp
aas
sub
mov
bound
lahf
cli
sbb
imulb
or
jae
fldl
xor
adc
xchg
es
cwtl
ret
sbb
adc
test
inc
cmp
mov
sti
mov
mov
mov
mov
pop
std
mov
push
mov
cmc
cmp
mov
sbb
mov
mov
push
and
inc
and
add
cmp
or
pop
fisubs
adc
ja
add
sbb
xchg
or
cli
test
or
dec
xlat
push
ret
xor
fmuls
cmp
fisubs
adc
ss
mov
out
dec
add
mov
scas
cmp
popa
ret
push
mov
sbb
inc
jle
dec
push
xchg
xchg
addr16
in
xchg
sarl
mull
roll
cmpsl
dec
andl
push
inc
add
push
mov
jns
test
inc
or
out
mov
mov
or
and
out
adc
mov
gs
out
inc
dec
cmp
cli
mov
mov
dec
and
mov
rorb
insl
test
mov
into
cltd
jecxz
fidivrl
int3
xchg
andl
ret
dec
rcr
dec
push
sbb
push
add
les
xchg
inc
push
pop
pop
ds
cwtl
push
mov
mov
mov
push
cmp
pop
sub
js
cltd
jecxz
push
cmpsl
and
xor
ffree
fcmovnb
jae
pop
xchg
scas
jmp
fistpll
mov
inc
popf
push
xchg
fstpt
movsb
adc
push
mov
cltd
xchg
lods
jmp
das
mov
popf
lahf
pop
hlt
xchg
add
bound
jae
jns
aaa
xor
cmp
jecxz
add
mov
into
mov
test
lods
sbbb
scas
and
inc
jg
in
mov
push
fidivrl
iret
in
adcl
xor
sbb
mov
mov
cltd
sbbb
cmc
xor
cmpsb
push
cs
mov
dec
sub
inc
ds
pop
lss
dec
lret
and
arpl
pop
stos
jbe
outsb
xchg
pop
jb
push
xchg
inc
jge
jne
and
push
mov
aam
inc
orb
stos
jnp
sbb
js,pt
sub
shll
pop
jg
fdivr
mov
enter
add
popa
inc
stos
pushf
popa
popa
fists
cltd
aam
add
push
loopne
add
int3
sbb
es
add
dec
pop
push
stos
lcall
nop
pop
and
mov
data16
out
pop
mov
aas
icebp
std
pusha
mov
mov
mov
adc
inc
adc
testb
aam
jg
jp
adc
sbb
imul
dec
inc
xor
shl
outsb
fstpl
adc
jp
mov
and
repnz
imul
fidivrs
xor
dec
xchg
sahf
jae
scas
adc
cmp
dec
ss
stos
sbb
jo
mov
add
rorb
mov
ret
ljmp
mov
pop
push
cwtl
xor
and
or
inc
dec
push
xor
add
pop
adc
add
sub
jbe
in
test
das
in
adc
adc
jnp
jg
jo
or
popf
fstpl
lds
mov
mov
test
adc
xchg
inc
xchg
adc
sbb
jg
rorb
int3
jmp
mov
xchg
push
out
jmp
add
pop
or
pop
jnp
and
xchg
xor
enter
and
and
addr16
and
mov
dec
lods
or
pushf
lods
sub
xchg
repnz
out
push
jne
and
jg
mov
pop
mov
xor
lds
rolb
dec
xchg
inc
mov
jmp
inc
test
mov
popa
stos
push
mov
movl
fldenv
and
outsl
add
dec
popa
sbb
push
dec
lds
or
dec
fisttpl
loop
ud1
mov
lret
mov
or
das
push
cwtl
mov
inc
imul
insb
adc
sbb
imul
ret
out
push
or
test
jnp
dec
dec
xor
dec
ror
call
sbb
and
movsl
add
jg
or
cs
xchg
mov
rorl
ljmp
cmp
in
scas
faddl
popf
shrb
ficoml
mull
push
and
arpl
daa
pushl
je
sub
push
out
outsl
adc
xchg
in
pop
in
sbb
pop
mov
inc
repz
hlt
rcll
or
push
adcb
push
adc
test
cmp
pop
dec
cld
int
pop
enter
pop
fildll
stos
cltd
pop
aam
fwait
xor
mov
push
fcmovu
sub
stos
vmovmskpd
aad
ret
jnp
and
pop
add
call
push
or
daa
jmp
mov
xor
inc
notl
xor
shrb
ja
mov
cmpsl
inc
mov
into
ret
xchg
stos
jo
push
shlb
cmp
leave
adc
add
fdiv
inc
ret
sbb
out
out
or
ja
cmp
ss
dec
cmp
movsl
xchg
jle
ret
js
mov
xor
xchg
and
mov
dec
shl
push
sbb
pop
sub
cld
test
es
add
xchg
sahf
lods
and
xchg
orb
xor
pop
xchg
imul
fwait
jns
cmp
pusha
ret
xchg
iret
add
aad
and
adc
or
add
jmp
or
jmp
and
cmp
or
aaa
inc
jp
xchg
lods
movsl
sbb
ss
mov
add
in
sub
dec
test
xchg
ljmp
pop
ss
hlt
cltd
jmp
push
or
pop
mov
jge
outsb
mov
sbb
cmp
jp
sub
cld
and
outsb
jl
scas
sub
xor
and
jp
push
push
icebp
les
mov
ss
mov
inc
leave
and
mov
jge
jae
add
cmpsl
push
mov
sbb
mov
ja
dec
pop
adc
inc
loop
iret
imul
and
out
xor
mov
push
cmp
xchg
fidivl
dec
mov
sub
push
dec
pop
inc
mov
je
inc
mov
mov
push
jl
lcall
pushf
and
bound
mov
jp
daa
dec
ljmp
ds
js
or
inc
ja
jg
mov
mov
out
mov
je
dec
aad
outsl
daa
mov
jge
xor
test
pushf
mov
imul
mov
push
jne
aas
into
fildl
dec
iret
xchg
push
sbb
fcmovnbe
jns
out
cmpsb
sbb
jne
xchg
mov
adc
push
addr16
sbb
sbb
imul
ljmp
push
cwtl
push
testl
inc
mov
inc
fisubrl
rolb
mov
ror
push
movsb
jno
cltd
in
add
andl
push
sbb
sub
es
or
mov
mov
mov
sub
dec
test
inc
push
sbb
icebp
pop
pusha
add
or
punpcklbw
lods
fbstp
add
mov
mov
sub
insl
mov
mov
add
lret
xor
ds
cmc
lret
aad
loop
pop
sub
or
int
int
int3
loopne
inc
dec
mov
imul
and
cmpsl
adc
int3
jmp
add
cld
rclb
cwtl
data16
inc
fsubr
pusha
scas
jo
ss
addb
in
adc
iret
xlat
jmp
xchg
cld
cs
es
jmp
xchg
stos
inc
add
and
sub
mov
cltd
enter
iret
adc
cmp
outsl
jle
mov
inc
stos
push
stos
inc
imul
jl
js
in
xor
lahf
and
mov
cmp
jnp
pop
aas
scas
pop
je
adc
pop
cmp
int3
mov
call
cmp
std
sbb
sbbb
and
mov
lea
sbb
aam
insl
divl
xor
lods
mov
mov
data16
and
push
mov
xchg
and
sti
sbb
sub
nop
pop
ss
mov
je
mov
xor
cmp
cmpsb
sub
imul
rcll
add
insb
je,pn
leave
xor
in
stos
jle
add
xor
fisttps
out
jmp
add
add
lods
arpl
cmc
in
xor
sbb
jp
inc
popf
add
pop
mov
aam
jb
addl
bound
sbb
push
push
lret
insl
out
cmp
test
xorb
pop
adc
push
cmp
movsl
fucomi
sbb
push
xchg
jecxz
dec
or
stc
mov
pushw
inc
aas
lods
or
sub
push
pop
or
in
push
xlat
sub
scas
xchg
out
pop
sbb
mov
mov
ja
add
adc
fs
test
insl
push
dec
imull
es
mov
pop
inc
iret
andb
imul
ret
add
jno
mov
cmpsl
scas
xor
data16
add
std
mov
sub
roll
push
sbb
icebp
popa
dec
cmp
lahf
ret
sub
cmp
rclb
jno
mov
in
sahf
adc
dec
pop
adc
cmp
popaw
test
js
cmp
in
push
add
das
imul
push
jb
fsubs
sbb
pop
push
sbb
xor
add
shlb
sbb
mov
bound
jae
jno
fistpll
loopne
int3
rol
cltd
jns
add
inc
xor
mov
hlt
cmp
jne
stos
aas
xchg
push
ret
xchg
cmp
pop
scas
mov
adcl
xchg
stc
add
xchg
outsl
pop
cmp
popa
mov
add
fcomps
mov
in
repnz
cmc
lahf
lret
data16
mov
pop
ljmp
ja
hlt
sub
mov
cmpsb
mov
sbb
mov
xor
mov
in
adc
sub
push
add
mov
dec
jbe
mov
cmp
mov
cmp
jecxz
es
fdivrs
or
xchg
sarl
addr16
das
out
in
cli
loop
jne
loope
push
icebp
and
int3
fsubp
lds
mov
cld
sbb
push
xor
test
sbb
or
popf
pop
jmp
loope
xor
dec
iret
sahf
fbstp
jno
test
neg
ret
or
adc
mov
or
xlat
adc
xor
je
sub
sbb
add
sub
nop
int3
and
add
cmp
lret
mov
loopne
cmpl
or
xchg
movsb
outsb
pop
cmpsl
lret
push
jmp
les
jb
jge
adc
addb
adc
rol
test
sub
psubb
push
xor
lods
ja
dec
mov
adc
rorl
int
cmp
lea
sbb
mov
and
call
inc
mov
jg
cwtl
test
push
xor
ja
xlat
mull
sub
mov
movsb
mov
dec
cltd
pop
push
xchg
js
pop
push
std
hlt
dec
dec
jne
decl
in
add
mov
mov
stc
insb
push
push
aaa
fwait
xor
adc
dec
ds
add
push
mov
or
inc
add
jbe
int
ret
add
pop
in
mov
lock
rol
pop
and
mov
out
shl
in
mov
xchg
scas
js
imul
in
repz
test
ret
pop
scas
and
sub
add
mov
sub
inc
gs
movsb
fstps
mov
clc
push
add
outsl
pop
fists
jae
adc
cli
movsb
ss
jbe
fwait
pop
dec
into
push
repz
test
out
dec
cmp
outsb
gs
inc
ljmp
mov
in
cltd
inc
pop
out
mov
scas
fisttpl
mov
shr
les
shll
lret
inc
lds
adc
rclb
repnz
clc
and
push
lods
push
lret
push
add
dec
loope
imul
push
inc
or
popf
insb
pop
cmp
je
dec
push
ljmp
jg
stos
lods
add
push
or
or
jl
stos
pop
jmp
fst
ss
loope
xchg
in
in
in
sbb
mov
jo
aas
lret
lcall
pusha
repnz
mov
mov
mov
sbb
inc
push
xor
or
or
cmp
dec
std
imul
iret
mov
lret
mov
notb
aad
insb
clc
dec
test
dec
add
pop
dec
add
or
push
pop
push
out
sbb
call
shr
ss
xlat
mov
rcll
fldenv
push
lods
ljmp
dec
sbb
dec
adc
enter
inc
test
cmp
decl
xchg
mov
lods
jl
in
xor
out
mov
stos
xchg
repnz
cmp
adc
mov
in
jnp
inc
sbb
pop
ljmp
int3
hlt
daa
cwtl
ljmp
xchg
in
push
scas
insl
sahf
xchg
xlat
mov
sbb
test
and
xor
dec
loopne
dec
in
push
fadds
movsb
dec
adc
inc
push
adc
mov
insb
xchg
icebp
lret
je
sbb
mov
adc
mov
mov
mov
gs
jbe
push
or
adc
cmc
testl
inc
aam
stos
out
les
add
ret
xchg
push
jnp
sbb
inc
cmp
or
xchg
or
ret
lock
dec
and
mov
aad
repz
movsl
out
jno
pop
enter
or
pop
pop
mov
scas
shrb
xchg
pop
mov
into
lret
xchg
push
mov
jo
outsb
filds
cmpsb
call
push
push
in
dec
and
adc
mov
cld
mov
mov
cmc
mov
fmull
cs
mov
scas
or
xchg
xchg
dec
cli
and
inc
loopne
inc
pop
mov
push
mov
out
call
dec
scas
nop
testl
and
jle
mov
mov
xchg
imull
pop
jno
mov
cmp
idivb
rcrl
adc
mov
mov
lock
push
adc
pop
movsl
mov
sbb
xchg
into
out
fstl
outsb
insl
std
stc
inc
mov
xor
stc
mov
das
aas
and
out
sub
adc
scas
add
and
jmp
mov
movsb
inc
or
fs
dec
pop
push
or
inc
xchg
dec
insb
jne
je
sub
and
mov
stos
dec
cld
jno
jge
push
push
xlat
addr16
test
outsl
out
mov
push
push
mov
mov
push
inc
ret
dec
ss
cmp
int
xchg
loopne
adc
lods
xchg
push
mov
sbb
es
add
stos
push
push
pop
sub
pop
cmp
cmp
jns
sub
fwait
imul
in
cmpsb
cmp
xor
cmp
mov
mov
cmpsb
jo
insb
pop
pop
mov
out
xchg
add
mov
xor
stos
push
bound
popa
and
cltd
ret
hlt
xor
xchg
jmp
call
push
sarl
out
jno
hlt
rcll
push
cmp
adc
and
xchg
pop
stc
push
out
ljmp
inc
fneni(8087
jg
cmc
mov
rorl
inc
cli
or
cmpsl
jb
loopne
cltd
jbe
add
xchg
adcl
sub
das
inc
lret
stc
lret
cmp
push
cmp
je
inc
mov
je
fmul
inc
loop
movsb
scas
add
mov
dec
xlat
sbb
cmp
in
lret
in
or
fimuls
out
mov
lcall
fdivrs
push
xchg
aaa
cmc
sbb
dec
lods
dec
int3
and
jae
xchg
push
pop
fiadds
out
adc
hlt
jbe
mov
icebp
pop
xchg
dec
pusha
sbb
add
jnp
int
xor
jb
pop
pop
dec
addr16
adc
push
nop
lcall
jno
push
or
dec
push
push
sub
ja
pop
lock
jnp
add
sub
pop
xchg
inc
xor
cwtl
xor
mov
sub
in
mov
mov
cmp
xor
divl
out
adc
mov
add
adc
and
sub
push
daa
movsl
sub
cmp
and
add
sbb
and
fcoml
das
icebp
cmp
adc
cmp
cwtl
enter
je
push
cmp
mov
lahf
mov
pop
or
pop
std
daa
aam
bound
dec
je
in
in
push
mov
incb
pop
out
push
and
scas
push
sub
jp
inc
loop
add
leave
xlat
mov
xchg
jp
ficoms
lcall
test
pop
mov
or
mov
gs
mov
mov
inc
xchg
ja
and
mov
push
jns
out
addr16
and
pop
int
sub
in
dec
add
xor
ret
aas
rcl
add
std
cwtl
rolb
jb
xor
jl
fbld
cmc
mov
incl
add
mov
mov
ret
data16
mov
lcall
cmpsl
dec
jae
mov
push
aas
clc
add
psllq
mov
insl
lods
push
inc
ss
in
adc
int
out
fs
cmp
mov
inc
and
mov
jle
mov
xchg
pop
rolb
sar
sahf
data16
jl
pop
psubb
jnp
jnp
test
xchg
andb
mov
jne
xchg
adc
dec
jbe
sub
adc
pop
dec
or
popa
mov
mov
dec
mov
jne
movsl
sub
dec
aas
addr16
add
sahf
and
push
mov
jns
xor
lahf
add
jae
and
in
mov
jns
add
dec
in
and
and
scas
sbb
jecxz
dec
and
mov
popf
push
fnstsw
push
js
sub
add
stos
lods
lods
mov
leave
mov
lods
popf
cli
lret
icebp
add
inc
jl
outsl
nop
loopne
push
push
ljmp
imul
add
and
test
lret
sahf
ret
pop
in
cmpsl
mov
scas
xchg
dec
push
data16
repnz
ja
fdiv
clc
mov
and
mov
mov
pop
pusha
add
jo
and
or
lea
mov
cltd
push
repz
dec
jge
push
and
dec
lds
push
mov
adc
pop
negb
sub
stos
xchg
cld
push
test
push
shlb
shrb
dec
jle
mov
movsb
lods
mov
sbb
idivl
push
inc
testb
pop
movsb
lret
dec
in
mov
dec
dec
js
jecxz
mov
pop
or
ds
xor
xlat
mov
movsb
mov
mov
cmpsl
jns
lcall
dec
dec
popa
movsl
pminub
jnp
cmpb
faddl
mov
pop
loop
ljmp
xor
adcb
inc
fdivr
dec
popa
in
test
push
mov
adc
jne
xchg
sbb
push
arpl
test
pop
inc
rcl
das
xchg
and
xor
or
sbb
sub
mov
cmpsl
cmp
aam
cltd
mov
in
jg
xlat
lea
nop
dec
stc
repnz
test
xchg
shrl
sahf
dec
mov
imul
fcomps
cwtl
xor
ljmp
adc
enter
aas
test
dec
sbb
xlat
inc
stc
fistps
inc
outsl
and
adc
push
out
fwait
or
ds
pop
fstpl
mov
imulb
adc
jne
fdivr
popf
and
ljmp
insb
pop
jecxz
pop
rclb
mov
inc
loop
aad
es
dec
icebp
cmc
jbe
xchg
and
and
sbb
pop
insl
push
sbb
cmp
mov
out
test
xor
inc
insb
insb
bound
in
scas
and
ret
and
aas
jo
sub
scas
jne
add
jmp
insb
push
sbb
pop
sbb
xor
and
mov
adc
fidivs
inc
cmp
mov
mov
iret
dec
les
iret
pop
cmpb
popa
sbb
add
cmp
aad
loopne
sbb
inc
push
stos
cltd
mov
sbb
adc
das
loopne
adc
sbb
and
into
shll
sub
leave
in
jns
push
xorb
add
xor
in
jle
pop
stos
jno
sbb
xchg
push
mov
dec
cmp
jno
mov
out
push
cmc
rclb
xlat
push
mov
lret
xchg
xchg
lcall
adc
cmp
push
adc
fisubs
jl
mov
aam
add
cmp
out
fidivs
lods
jns
call
test
filds
mov
mov
mov
mov
mov
pushf
dec
aas
and
pop
pop
jno
push
add
mov
mov
aam
sub
push
mov
cmp
sbb
testb
cmpsb
ja
mov
cmp
in
push
repnz
scas
movsl
mov
test
icebp
in
cmp
sub
mov
mov
mov
mov
jnp
lock
and
stos
int3
mov
dec
sbbb
aad
xlat
aas
xchg
enter
lock
add
xchg
repz
icebp
fisubrs
push
fildl
lea
aas
clc
es
inc
add
adc
xchg
xor
dec
dec
inc
xorl
pop
inc
adc
mov
push
pusha
fildll
push
stos
ss
pop
fwait
mov
adc
xchg
scas
sub
mov
fdivrl
mov
cmp
push
je
loope
movntq
out
xor
outsl
mov
cmp
mov
leave
mov
loopne
mov
lret
pop
jge
cmpl
iret
imul
insb
fsts
cmpsl
mov
pop
call
mov
jo
ret
add
ret
mov
shlb
add
cmp
or
adc
in
lret
test
jne
daa
mov
sub
pop
lea
cmc
and
pop
call
loopne
insb
test
push
cmp
mov
push
shrl
sbb
sbb
insl
jbe
loop
inc
push
and
xchg
mov
xchg
and
jns
xchg
cmpsb
imul
rcr
ret
test
test
incl
and
jae,pt
xor
sub
cld
sub
jmp
aas
loopne
jbe
add
je
stos
aaa
inc
test
adc
push
cli
adc
aad
xchg
in
ljmp
jge
push
int3
mov
adc
or
outsl
inc
out
push
dec
fcomps
pusha
inc
push
decb
cmp
aad
pop
push
cld
add
iret
jbe
dec
pop
push
sub
add
outsl
movsl
rcll
pop
scas
outsb
cli
or
sub
lods
mov
push
callw
scas
aad
shll
lock
add
loope
inc
fsubrp
test
adc
inc
inc
add
testl
div
mov
dec
mul
ficompl
ds
adc
mov
jmp
negb
xchg
testl
jmp
dec
lret
mov
jp
jnp
cwtl
dec
push
mov
xchg
cs
in
test
sbb
pop
jmp
cmp
xlat
inc
hlt
sub
add
pop
inc
popf
xchg
arpl
mov
xchg
and
lock
shll
iret
xchg
inc
je
push
adc
sub
pop
loop
popl
push
xchg
push
sub
ret
lock
insl
ds
xlat
outsb
pop
push
ss
pusha
push
push
shrb
xlat
insb
imul
sbb
mov
sbb
jb
roll
clc
lock
xor
mov
in
mov
lock
inc
mov
xor
movsb
cli
cwtl
arpl
fs
daa
lods
dec
xor
shll
jno
push
sub
andb
mov
jno
ret
int3
push
or
cmp
jo
or
aas
xchg
mov
scas
mov
clc
jne
in
push
aam
pop
pop
dec
mov
xchg
dec
cli
lcall
or
inc
xchg
out
jle
movsl
dec
into
dec
push
mov
push
mov
pushf
mov
push
lods
pop
inc
arpl
mov
outsl
pop
clc
or
lea
sti
mov
cmc
andl
dec
sahf
jne
add
stos
sar
xor
out
leave
adc
orb
sub
sbbl
shl
push
sbbl
icebp
mov
stos
mov
jno
mov
test
sub
aas
ds
hlt
jp
decb
xorb
insb
lock
push
adc
cmp
dec
mov
xor
shrb
dec
faddl
test
adc
inc
mov
pop
icebp
insb
push
push
int
pushf
shlb
push
mov
lods
push
ret
out
sarb
add
cmp
ds
mov
mov
movb
and
xchg
jno
push
pushl
adc
pop
fildll
add
lock
inc
stos
pusha
sub
ret
stc
pop
cmp
xor
add
dec
gs
dec
jbe
mov
xchg
xchg
xor
sbb
jns
push
cmp
mov
and
rcrb
pop
dec
jecxz
mov
xlat
add
jg
jae
insl
lea
sub
add
dec
jl
fcmovnb
bnd
xchg
lret
inc
xlat
lods
pop
mov
js
cmp
and
and
mov
add
inc
sbb
loope
adc
xor
sahf
mov
in
mov
xchg
test
cltd
mov
xor
ret
fwait
es
outsl
cld
pop
jg
and
mov
and
inc
sti
in
xchg
cltd
cmpsl
leave
add
add
iret
cli
adc
sub
mov
add
jmp
ret
fstpt
imul
adc
in
push
mov
xchg
or
pop
push
ds
loopne
or
sbb
lret
xor
sub
andl
test
incl
addl
mov
jo
jle
scas
dec
push
sbb
jbe
xor
nop
repz
adc
test
and
jo
sub
pushf
cmpsl
mov
aas
sbb
pop
inc
dec
or
dec
aas
fisttpl
pop
push
or
sti
sbb
into
and
popl
incl
sub
push
jg
imul
sbbb
ret
outsl
push
jne
dec
out
mov
adc
inc
sbb
fcompl
popa
xor
push
test
faddl
cmc
std
bound
cmp
add
lock
in
enter
popf
push
lret
clc
movsb
adc
cmp
inc
jo
cltd
and
das
roll
in
inc
fmuls
test
insb
or
pop
inc
jns
aas
cli
lds
sbb
cmp
sbb
or
in
test
mov
nop
cmp
adc
and
push
pop
mov
out
jnp
cmp
mov
out
lods
add
xor
fildll
out
jl
mov
lock
jle
mov
pop
push
mov
mov
cs
movsl
adc
push
sarl
lcall
xchg
sahf
pop
cwtl
mov
mov
dec
sub
jo
ds
push
aad
or
loope
cmp
packssdw
push
shr
mov
test
call
lcall
pop
pop
mov
mov
test
and
out
pushf
mov
popf
jne
pop
enter
inc
pop
push
mov
je
pop
cmc
fiaddl
push
lock
push
arpl
ja
test
lock
flds
fcmovb
fs
xchg
aam
mov
jns
orb
test
mov
cmp
test
jmp
popf
push
ror
sbb
adc
mov
jmp
jmp
in
les
pop
adc
adc
fbld
mov
mov
out
pop
insl
out
sarb
insl
add
mov
or
ljmp
test
rorb
roll
je
lock
jae
pop
aaa
jnp
cltd
dec
sub
mov
mov
dec
dec
mov
jle
test
aaa
andl
push
pop
push
mov
ja
in
test
xchg
lds
sbb
in
ja
je
or
sub
jp
jne
shlb
push
adc
das
fidivrl
int
and
jno
pop
dec
mov
pusha
popa
mov
inc
test
sbb
pop
mov
filds
dec
xchg
lahf
push
xchg
int3
fwait
or
cwtl
sub
and
in
push
and
lods
dec
adc
mov
jb
data16
fstpt
ljmp
lods
xchg
pop
xchg
pop
lret
cld
add
mov
adc
jmp
pop
add
cmp
sub
enter
pop
sub
mov
mov
inc
cmp
or
xlat
inc
insl
test
push
pop
mov
aad
scas
sbbb
xor
les
fwait
pop
not
and
stos
and
int3
fsubr
mov
pop
int3
jecxz
bswap
push
pop
jne
mov
out
dec
mov
fs
and
sbb
dec
mov
push
hlt
lret
adc
test
les
nop
addr16
jbe
ret
sub
pop
sub
xchg
mov
cltd
or
push
dec
je
or
cmpsl
pushl
les
arpl
sub
cmpsl
xchg
add
cmc
adc
pop
rcrl
pop
inc
sub
pop
out
or
ret
mov
or
shrl
cwtl
cs
or
lds
xchg
jge
fistpll
cld
mov
scas
jne
add
into
in
addl
outsl
push
sbb
mov
fildl
outsl
and
dec
cwtl
inc
aad
jo
add
lret
lds
xor
fsubs
sub
sbb
sbb
bound
jge
cld
jge
mov
fldenv
fnstsw
sarb
inc
jge
mov
mov
orb
fnsave
mov
xor
cwtl
inc
aam
jmp
adc
ss
aam
mov
mov
push
push
popf
dec
pop
jne
jns
test
sarb
aas
sbb
dec
add
addr16
pop
sahf
out
packsswb
pushf
cwtl
push
roll
aas
lea
adc
sbb
or
xchg
adcb
notl
dec
aam
jmp
repz
sbb
pop
dec
pop
cwtl
cltd
bound
mov
pushf
xchg
pushf
fisttpll
sub
rorl
sub
fdivr
hlt
ljmp
pushf
inc
call
sti
call
sti
add
test
sub
cmp
dec
mov
mov
cltd
or
dec
clc
gs
aad
dec
cmpsl
jnp
movups
lods
jmp
imulb
repz
cmp
imul
ds
lret
aaa
add
push
sbb
sti
outsb
lock
sub
add
mov
aas
add
les
mov
pop
inc
inc
xchg
xor
add
jl
fwait
les
jg
jmp
jne
jge
icebp
pushl
xor
popa
adc
sub
push
xor
sbb
xlat
pop
or
jo
inc
iret
jge
mov
inc
lcall
adc
xchg
dec
jmp
cmp
imul
pop
xor
lea
sub
sahf
mov
jecxz
push
test
hlt
mov
add
mov
add
push
ljmp
or
pusha
stc
xchg
and
daa
das
push
dec
sub
mov
mov
cmp
shlb
ret
ret
pusha
lods
mov
push
addr16
or
js
nop
iret
sub
jo
icebp
mov
pop
inc
sbb
call
add
mov
shll
or
cmp
jne
jge
outsb
dec
adc
cld
add
clc
and
sub
in
lret
insl
sub
rcr
cld
sbb
fldcw
sbb
movsb
je
hlt
jne
jg
adc
pop
pop
out
das
pop
das
xchg
test
mov
pop
aad
out
inc
dec
fbld
push
adc
lcall
fwait
adc
shll
add
outsl
sub
inc
xchg
and
push
mov
aas
or
test
push
mov
mov
pop
loope
add
xor
ljmp
rclb
filds
xor
jmp
add
loopne
lock
popa
ret
pop
bound
bound
sbb
pop
loope
out
aad
adc
jg
insl
xorb
lahf
adcl
push
movl
aam
mov
lock
ljmp
lcall
enter
jno
adc
repz
lcall
push
or
adc
fdivs
movsb
cmpsl
and
inc
push
sahf
xchg
inc
inc
sub
rolb
mov
pop
adc
ss
add
pop
sub
arpl
jg
fucom
pop
mov
in
xchg
les
test
shrl
adc
rcrl
inc
xor
mov
sub
addl
stc
incl
push
adc
bound
push
and
mov
mov
sub
xorb
arpl
add
mov
repnz
lret
xchg
sbb
adc
test
and
scas
add
aas
pusha
loopne
xchg
fadds
test
insb
inc
mov
xchg
xchg
dec
mov
jg
inc
mov
and
sub
push
mov
adc
xchg
dec
out
imul
jnp
push
add
xor
inc
adc
daa
inc
nop
push
and
adc
iret
inc
adc
mov
cmp
dec
xor
in
scas
sub
jo
lcall
repz
in
es
pop
inc
mov
shrb
cmp
into
js
outsb
mov
jno
xlat
test
xchg
ret
ffree
stos
jae
push
pop
adc
divl
adc
sahf
xor
push
in
mov
jnp
inc
repz
and
imul
cltd
mov
xor
in
adcl
xor
inc
mov
addr16
adcb
push
out
dec
sbb
cli
lret
pop
fwait
jl
mov
xchg
jo
cmp
test
cmpb
dec
push
ss
sub
pop
and
mov
dec
popa
sub
mov
jae
cmp
sarl
stos
pop
pop
xchg
pop
sub
int3
pop
cltd
insl
xchg
pop
jno
lret
mov
mov
mov
mov
mov
add
aam
rorb
pop
stc
dec
adc
loopne
lock
inc
push
pop
sub
pushf
inc
jecxz
sub
push
lods
add
dec
mov
sub
dec
inc
les
push
ficomps
add
roll
mov
dec
mov
inc
in
shl
mov
mull
cmc
in
stc
push
mov
sub
mov
pop
or
cs
icebp
mov
imul
cmp
loop
push
sbb
je
mov
xchg
addr16
cmp
int
adc
jnp
test
inc
sub
es
loope
ja
mov
jmp
sub
mov
dec
out
js
inc
imul
scas
jne
jge
and
and
shrl
movsb
scas
lcall
ret
pop
sbb
aaa
xchg
push
push
stc
dec
sbb
lods
dec
test
lods
xor
faddl
push
pop
mov
mov
fsts
hlt
cld
cmp
push
push
je
lds
cld
mov
mov
add
cmp
pop
adc
pop
stos
pop
daa
in
pushf
sbb
out
cmp
push
ja
mov
popa
insl
repnz
shl
negb
addr16
pop
mov
fmull
mov
adc
inc
movsl
leave
mov
lods
enter
popf
push
jg
stos
iret
std
jns
in
dec
jecxz
popa
push
fisubrs
in
test
mov
sbb
js
jmp
pop
sub
cmpsb
adcl
aad
sub
mov
push
xor
xor
mov
mov
mov
scas
insl
mov
pop
scas
sarb
push
mov
in
mov
nop
outsb
outsb
mov
sub
cmp
push
mov
es
incl
pusha
xlat
mov
cltd
and
mov
add
test
aad
in
push
push
jle
push
pop
inc
push
loopne
sub
popf
inc
xor
cmp
mov
shll
inc
jg
imul
ja
pop
cmp
mov
or
fstpt
out
xchg
nop
cmp
lahf
stos
or
fwait
cmc
xor
js
mov
mov
sbb
xor
mov
movsb
cmp
sbb
out
push
jp
movsl
xchg
pop
sub
mov
scas
repz
stos
jo
add
push
dec
adc
and
sbb
mov
loopne
mov
inc
or
popl
fs
sub
push
ss
sub
icebp
imul
daa
ljmp
cmp
sub
addr16
adc
pop
or
rclb
mov
push
adc
adc
in
mov
rdpmc
xchg
es
ja
sbb
pop
adc
std
test
push
dec
movsl
lret
call
mov
out
mov
repz
call
jae
sbb
jge
gs
add
push
pop
adc
pop
sarl
out
es
xor
imull
push
adc
insl
ficompl
int
and
rol
cli
mov
dec
pop
xchg
notl
jb
outsl
add
repnz
cmc
std
xor
sub
adc
daa
into
xor
jmp
test
jge
push
std
mov
xor
sbb
or
xchg
inc
lahf
mov
dec
in
dec
jle
jbe
mov
xor
add
icebp
jge
imul
push
aaa
stos
scas
cmp
jp
mov
mov
mov
adc
pop
in
jno
test
or
fidivl
xlat
pop
jbe
pop
pop
dec
jge
xor
xchg
mov
pop
in
outsb
test
push
pop
xchg
scas
sbb
mov
lcall
sbbb
leave
rcr
and
ljmp
mov
jg
js
cli
imul
shlb
lret
mov
or
loopne
outsb
loop
jge
mov
pop
cmpsb
cmpsl
jo
fnsave
inc
dec
add
add
aas
sbb
aad
pop
sub
xchg
fs
into
jle
push
lods
adc
push
add
int3
test
inc
rcl
sub
sahf
mov
clc
cmpsb
inc
lea
fcompl
mov
call
stc
jmp
mov
sub
scas
or
jle
jge
dec
adc
adc
add
fbld
int
imul
adc
js
sub
lcall
fwait
jp
or
adc
setl
dec
push
mov
jne
inc
pop
xchg
andb
push
add
jl
sub
adc
lret
mov
adc
daa
je
mov
shlb
fiadds
out
jle
inc
orl
cli
sub
test
out
jle
fadd
cmp
inc
in
adc
sub
pushf
pop
push
mov
aas
in
in
fs
push
cmp
rcrl
cmc
adc
lock
cli
sbb
arpl
mov
aam
mov
adc
cld
or
test
add
iret
in
test
sahf
sbb
outsb
dec
add
out
sub
push
add
inc
jb
or
push
add
fstpt
pop
push
and
mov
cmp
mov
pusha
jbe
push
aad
sbb
xor
out
imul
mov
enter
dec
outsb
mov
into
add
mov
and
xor
mov
lods
and
adc
cltd
sub
bound
xor
je
inc
popf
scas
test
in
in
aaa
adc
mov
bound
wrmsr
cmpsl
push
clc
mov
rcl
lret
in
push
outsl
repnz
jecxz
int
or
aad
jecxz
out
popf
sub
and
test
out
mov
pop
xchg
daa
mov
jne
mov
xor
mov
out
cli
pop
scas
pop
into
adc
xchg
shlb
jno
movsl
nop
stos
adc
jp
fsubs
mov
mov
cmc
xchg
in
call
adc
inc
cld
sbb
mov
rep
pop
mov
out
and
les
pusha
add
push
addr16
dec
sub
pop
adc
push
test
mov
jne
imul
and
aas
pushf
enter
imul
mov
adc
jns
negb
mov
xor
jne
out
xor
inc
sub
sbb
sub
cs
push
dec
and
jge
jbe
cmp
jle
xor
fwait
jl
push
mov
ja
cmc
push
dec
repnz
push
aam
outsl
loop
pop
mov
cmp
cs
mov
ret
sub
sbb
mov
roll
mov
icebp
adc
mov
arpl
dec
inc
add
arpl
out
aas
call
xchg
movsl
xor
test
or
cmp
lahf
lret
push
imul
int
dec
sub
xor
jbe
call
sbb
sbb
push
push
mov
jno
adc
iret
call
and
test
pushf
xchg
adc
add
and
fsub
imul
insl
mov
sbb
stos
or
inc
pop
mov
and
mul
cltd
xor
mov
aam
dec
aas
stos
push
or
js
pusha
jne
insb
and
lret
jo
in
dec
pop
mov
jo
push
pushf
mov
sti
rcl
push
ss
icebp
arpl
fwait
lock
push
xchg
add
pop
mov
subb
sbb
and
lods
ficoml
scas
inc
cmp
dec
stc
mov
ret
rclb
add
sbb
test
inc
in
icebp
outsb
mov
bsr
cmpsb
gs
incb
xchg
push
pusha
jnp
xor
xor
ja
lahf
dec
out
add
and
xchg
dec
pop
mov
imul
adc
dec
test
xor
inc
dec
mov
inc
das
jecxz
mov
testb
mov
pop
add
in
pushl
int3
fs
loop
mov
cli
xorl
mov
cmp
push
and
xor
mov
out
out
adc
pop
jo
inc
daa
jmp
xor
or
rcrb
repz
test
shrl
or
push
mov
mov
mov
and
adc
and
pop
push
popa
loop
mov
jg
push
adc
xchg
xor
out
icebp
stos
xlat
mov
popf
and
push
pop
bound
adc
ljmp
jns
ljmp
je
sbb
fisubrl
into
les
pop
inc
mov
out
adc
out
or
xor
fcmovb
fists
dec
ja
or
mov
adc
adc
dec
decb
int3
jnp
push
sbbl
xor
cmp
xor
jo
div
pop
mov
adc
mov
mov
and
sahf
dec
jl
call
xchg
xchg
push
mov
sub
shlb
dec
pop
daa
test
dec
mov
je
fadds
fldenv
mov
rorb
sub
sub
push
xchg
push
jne
outsb
ds
dec
out
shrl
dec
test
nop
and
mov
ja
pop
ret
jg
arpl
clc
fldcw
ljmp
jp
subb
adc
cmp
pop
push
pop
push
mov
pop
out
dec
sbb
loope
xchg
cs
out
sub
dec
data16
dec
cmp
xor
jb
leave
test
mov
adc
loopne
push
idivl
adc
dec
xor
xchg
lock
andb
xchg
push
fnsave
add
inc
xor
test
mov
stos
loop
inc
inc
dec
jecxz
xchg
out
add
rol
mov
out
pusha
sbb
pop
cs
mov
jp
push
ljmp
xor
popa
fistpl
stc
and
push
scas
push
arpl
mov
mov
inc
fs
into
xor
add
pop
cmpsb
lret
popl
sbbl
fisubl
outsl
iret
inc
stos
test
adc
jns
inc
sbb
popa
jno
arpl
sbb
hlt
add
mov
mov
sub
push
xchg
lret
clc
push
loope
cmp
inc
ja
mov
shlb
xchg
sahf
cmpsl
push
inc
mov
xlat
lods
push
cwtl
pop
jg
inc
add
test
faddp
stos
or
hlt
or
push
xchg
addr16
loope
cltd
push
cmp
icebp
jg
ret
insb
call
push
lds
sub
pushf
outsl
ja
push
mov
pop
push
mov
inc
into
jecxz
es
pop
enter
rcl
addb
fwait
lods
mov
daa
clc
inc
flds
sahf
dec
div
repz
push
scas
push
popf
fmul
pop
xor
jmp
jp
in
sbb
adc
pop
pushf
or
loope
pushf
sti
mov
adc
push
adc
inc
pop
mov
or
xor
and
dec
mov
inc
insl
sbb
cltd
in
xlat
push
add
adc
subl
push
sub
xchg
xor
xchg
aaa
int
or
std
mov
inc
push
je
dec
xor
ljmp
mov
push
fsubs
add
clc
cmp
roll
adc
fsubrp
xor
pop
shrb
sub
xor
cli
mov
lds
pop
outsl
or
call
dec
dec
inc
jo
and
sub
mov
jb
andb
mov
pop
jle
push
mov
pushf
push
xchg
dec
pop
xchg
cmp
in
sbbl
xchg
ret
or
lods
cmpsb
shlb
stc
sbb
xchg
cmp
hlt
jp
adc
pop
adc
clc
sbb
mov
cli
fists
cmc
loop
mov
mov
out
xchg
pop
mov
cmp
adc
push
push
out
jno
and
cli
out
subl
fwait
imul
push
xchg
add
jns
mov
jl
pop
popa
lea
dec
sarl
int
notl
dec
push
pop
add
jbe,pn
leave
loop
clc
and
clc
gs
ret
iret
inc
ds
cmp
push
adc
push
imul
xchg
pop
test
jge
inc
and
sbb
mov
clc
push
mov
arpl
addr16
dec
int
xorl
and
repz
cmp
xchg
or
jge
sbb
and
repz
push
sar
loopne
jno
out
rclb
dec
jp
popa
lret
inc
nop
or
repz
fucomp
sub
inc
out
ret
dec
mov
outsb
es
movsl
ret
adc
add
adc
xor
sbb
push
or
or
jae
outsb
jge
mov
jmp
and
pop
stos
adc
mov
lods
int3
and
push
out
adc
out
jne
addr16
loop
subb
fisttpl
cld
adc
enter
cld
dec
xor
je
lret
jle
sub
out
outsl
dec
xchg
mov
enter
outsl
lret
mov
jbe
mov
icebp
pop
inc
in
enter
into
sub
and
sbb
dec
sub
cmp
pop
jns
aas
xor
call
push
fadds
hlt
or
and
mov
fnstenv
and
sbb
add
xchg
je
imull
mov
mov
clc
add
cmpsb
aas
xchg
add
jbe
dec
out
repz
aam
cmp
test
and
cli
inc
and
lock
hlt
dec
lods
lret
xchg
add
dec
or
or
stc
ljmp
sub
dec
fcoml
in
mov
sub
cmc
jne
push
mov
add
sbb
addr16
int3
add
pop
sub
add
adc
pop
sahf
and
inc
jl
ss
inc
andb
fnstenv
mov
sub
les
test
fdivp
xor
jb
cmpsb
or
cmp
xor
inc
aaa
sbb
test
push
mov
iret
fcomps
add
lret
lds
dec
jmp
nop
sbb
xchg
xchg
sbb
aam
jp
dec
mov
jne
lea
mov
mov
lea
sub
dec
insl
dec
mov
sbb
inc
ss
mov
pop
adcb
fidivrl
add
xor
gs
jecxz,pn
fsub
push
rcrb
push
roll
mov
sti
inc
and
cmpsb
stc
sub
fidivrs
push
adc
js
arpl
in
test
xchg
mov
push
mov
or
aaa
pop
adc
addr16
lret
loopne
mov
jl
mov
sub
push
and
add
addr16
cmp
cmp
pop
outsb
push
xchg
sub
mov
push
daa
in
cltd
andb
test
repnz
cmp
xor
inc
fbstp
dec
pushw
adc
pop
xchg
push
nop
mov
test
insl
jo
jecxz
mov
data16
pop
mov
mov
in
in
dec
repz
lcall
add
and
pop
or
ret
movd
stos
std
test
sbb
cli
mov
lret
jmp
cs
stos
sbb
ret
outsl
repz
xchg
int3
inc
aas
mov
fimuls
std
adc
int
cmp
shlb
mov
pop
mov
dec
mov
scas
mov
shrb
sbb
push
dec
pop
lods
out
mov
pop
repnz
push
cmp
cmc
sar
scas
push
cmpb
ljmp
and
or
mov
outsb
cmpsl
jae
les
les
and
je
dec
lcall
popa
sarw
dec
jge
into
nop
loop
sti
adc
add
and
test
jo
push
addb
mov
lods
ret
sub
mov
dec
xrelease
aam
pop
xchg
shlb
outsb
imul
ja
sub
movsb
out
jno
pop
lahf
mov
mov
mov
aad
fdivrs
addb
std
jmp
fwait
fwait
push
call
insb
push
mov
aaa
stos
cltd
test
mov
add
xchg
mov
cmp
and
das
icebp
gs
out
adcb
in
pop
movsl
cmp
mov
dec
push
fisttps
icebp
jge
cltd
fwait
jno
arpl
call
jmp
cmp
test
movsb
jmp
mov
mov
pop
sarb
imul
jne
cmc
rol
and
jge
push
xor
mov
sub
fidivl
pop
add
paddb
ds
call
stos
mov
mov
pop
orl
push
in
fs
cmpsb
hlt
lcall
inc
mov
in
push
xchg
xlat
xlat
sub
push
pop
add
aam
pop
pop
fisubrl
data16
cld
out
sbb
hlt
and
loop
les
test
xchg
dec
pop
inc
daa
ds
cmpsb
or
mov
mov
dec
mov
adc
xchg
and
and
stc
jmp
clc
push
aam
jno
call
fisubrs
into
rclb
popf
adc
adc
in
jg
jns
pop
sub
inc
cmp
cmp
data16
sub
mov
and
push
decl
push
lret
pop
pop
cmc
sub
pop
inc
jmp
mov
sbb
xchg
aaa
dec
ja
mov
roll
dec
and
cmp
lods
and
inc
scas
fcompl
lret
dec
fisttpll
rolb
scas
mov
and
xchg
jae
stos
mov
imul
jg
mov
test
cs
or
dec
mov
ds
outsb
push
add
dec
cltd
in
xor
in
clc
pop
sbb
scas
inc
xchg
jo
shlb
aad
daa
stos
mov
test
push
or
mov
shrb
das
pushf
xlat
adc
xlat
sub
out
push
je
mov
sub
loopne
in
lock
xchg
popa
cmpsb
xorb
test
xchg
or
addr16
pop
mov
das
sub
mov
in
jge
push
jb
and
pop
xchg
xchg
adcb
sbb
inc
inc
lods
sub
mov
cmp
scas
fsubp
sbb
mov
lds
out
cmp
and
push
xchg
pushf
repz
fstl
mov
xor
pop
orb
xor
imul
or
scas
mov
sub
imul
in
cs
ss
xchg
das
push
inc
jle
fimuls
movsb
in
ret
bound
and
mov
int
mov
xchg
cmp
nop
repz
mov
mov
mov
jne
add
popa
add
mov
sub
push
loop
sub
aaa
cmp
out
mov
adc
cmc
push
xchg
icebp
std
shl
pop
add
sti
sub
push
repnz
inc
cmp
lea
adc
lods
insb
adc
add
mov
icebp
std
inc
stos
call
mov
inc
xchg
test
dec
add
out
push
popf
push
sbb
xchg
hlt
int3
inc
xchg
xchg
cli
xchg
arpl
orb
cmp
lock
mov
push
popa
push
movsl
jno
sbb
sbb
je
jmp
mov
cmp
ret
out
test
fmull
or
push
xchg
pop
sub
je
jno
jp
push
fistpll
push
mov
ja
xchg
or
and
dec
xor
push
push
push
push
fnsave
xchg
rep
test
and
testb
call
ss
xchg
fistl
inc
add
fcomi
ds
adc
jle
mov
mov
lret
fcoms
mov
shll
enter
sbb
ljmp
in
fs
and
jge
fcoms
ljmp
mov
push
pop
pop
pop
pop
mov
es
add
pop
pop
lods
and
adc
bound
leave
out
fabs
mov
mov
pusha
adc
jl
pushl
addl
call
out
xor
popa
pavgb
popa
cmp
insl
lahf
dec
pop
pop
push
imul
hlt
ret
insl
mov
mov
arpl
aas
jne
lahf
mov
mov
fstps
jge
jg
jecxz
jmp
cli
pop
jnp
fldt
cmp
add
sub
shr
dec
mov
push
pop
push
out
pop
imul
or
xor
into
jbe
imul
jno
cltd
cmp
mov
dec
mov
jno
mov
mov
stos
loopne
xchg
mov
sub
fnstenv
aas
xor
mov
std
sahf
pop
add
js
ftst
push
xor
pushf
cmpsl
lods
jb
jecxz
std
loopne
rol
mov
pushf
or
jmp
test
subb
cmp
or
flds
movsl
jns
jle
jnp
repz
pop
jbe
loope
out
add
adc
inc
add
xor
push
xor
stc
movl
xchg
ret
inc
add
mov
imul
jae
jbe
pop
sub
xchg
pop
mov
pop
sub
cmp
mov
daa
or
test
add
in
jle
dec
fdivr
outsl
adc
push
or
fisubl
bound
mov
clc
test
inc
jmp
cmpsl
hlt
movsb
in
pop
sub
push
into
jge
fld
ljmp
inc
sub
jb
scas
pop
aam
popa
and
jbe
movsb
cmp
push
pop
ret
jae
xchg
enter
aam
jbe
inc
movsl
pop
es
pop
pusha
fstl
int3
lds
cmc
aas
scas
and
sbb
dec
sbb
gs
test
mov
pop
jb
stos
movsl
jmp
jbe
or
roll
mov
jg
test
dec
pop
add
mov
or
push
mov
jne
jno
je
mov
inc
or
mov
add
xchg
mov
xchg
xor
cltd
inc
int
adc
cmp
out
sbb
dec
pop
aad
mov
mov
notl
push
dec
mov
adc
dec
leave
push
jp
pop
lods
mov
push
leave
mov
dec
out
mov
test
mov
mov
lcall
jle
add
and
and
sub
stos
inc
into
sti
sbb
ljmp
add
pop
pop
ret
dec
mov
inc
test
dec
shrb
pop
mov
imul
repz
jne
pop
out
decl
pop
mov
jnp
dec
inc
mov
jle
xlat
cmc
push
loopne
lock
aas
mov
mov
jo
arpl
mov
cmp
jnp
pushf
arpl
dec
cltd
outsl
iret
jp
test
stos
xchg
and
aam
sahf
sub
ja
xorl
mov
xchg
push
jb
pop
jp
cmp
les
fwait
outsb
dec
insl
push
lret
fchs
popa
bound
push
movsb
cmc
fistps
mov
es
ja
lcall
add
aad
out
dec
repnz
jae
repnz
lcall
or
in
es
sub
loop
and
push
add
shll
popa
leave
cli
arpl
and
add
push
cwtl
mov
fcoms
add
aam
std
pop
or
adc
mov
mov
inc
pusha
aas
or
push
rorl
xor
in
dec
movsb
mov
pop
sbb
adc
lcall
roll
mov
xchg
loopne
out
cs
dec
rcrb
jbe
scas
lahf
mov
jns
in
scas
ds
movsb
adc
sub
dec
jns
loopne
pop
adc
mov
mov
sti
lcall
push
push
scas
dec
jmp
inc
sarb
vandnps
sbb
sbb
mov
hlt
ret
stc
filds
mov
dec
in
lea
outsb
mov
xor
push
mov
push
je
test
iret
jne
adc
or
sbb
push
sub
in
fsts
push
jmp
pop
mov
enter
test
adc
jb
xchg
sub
xchg
hlt
call
dec
pushf
cmc
aas
xchg
lret
jb
push
adc
cmc
mov
push
fcomps
lret
jnp
xorl
cmp
roll
push
xchg
jbe
shrl
lods
mov
jb
cli
clc
mov
ja
xchg
adc
mov
inc
out
bound
sbb
loopne
ja
repz
push
push
mov
inc
pop
subl
ret
mov
sbb
aas
and
gs
mov
lret
pusha
rcl
pushf
les
sub
fmull
popa
push
popf
iret
inc
lds
es
add
inc
fisubs
loopne
dec
faddp
adc
pop
mov
mov
xchg
lret
inc
mov
icebp
jle
mov
notl
or
or
mov
pop
sub
out
jl
dec
ficoml
nop
movsl
fdivs
ret
fmuls
lahf
sbb
enter
adc
aaa
dec
out
dec
out
sub
outsl
fistpll
in
es
leave
out
inc
lods
je
lds
subb
pop
imul
sti
bound
sti
or
fs
mov
call
jg
aaa
cwtl
jmp
xor
push
or
inc
mov
jle
or
ret
pop
sub
pop
ret
adc
cmp
mov
inc
out
sbb
adc
pop
jmp
pop
fwait
gs
call
rcll
or
and
inc
outsl
adc
mov
mov
and
mov
int3
inc
pusha
sub
and
popa
sarb
lea
mov
and
cmp
mov
xchg
xchg
cmpsb
int3
dec
andb
in
stos
iret
js
test
mov
adc
clc
and
xor
rol
inc
fistpll
addl
inc
mov
std
jp
ja
lret
scas
testb
add
mov
xchg
icebp
inc
pushf
push
mov
idivl
sbb
nop
cmpsl
mov
add
xor
inc
outsl
icebp
lods
sub
xor
xchg
in
jecxz
push
daa
in
lock
xor
js
loop
in
das
mov
das
ret
push
dec
jnp
mov
sub
aam
dec
xor
enter
icebp
push
inc
push
cwtl
lods
xlat
cmp
lds
xor
mov
sahf
push
mov
in
inc
loop
fs
orb
mov
daa
shrb
stc
sub
push
cmpsb
nop
mov
jbe
movsl
ret
scas
out
mov
xchg
fisttpll
outsl
ret
fs
inc
cmc
int
sub
lea
popa
imul
repnz
aas
sub
pop
lret
xchg
test
out
sub
call
enter
adcl
lahf
jns
adc
push
inc
sti
pushf
jl
jl
sub
jecxz
mov
inc
gs
xor
xchg
fwait
lret
adc
pop
loop
add
add
add
xorb
das
jp
std
js
adc
lcall
mov
repnz
and
and
jl
push
add
fisttpl
pop
mov
mov
out
dec
cmp
adc
inc
movsb
xchg
xchg
shr
jl
nop
rcll
mov
out
xor
scas
aaa
adc
sbb
leave
add
testl
inc
cmpsl
jle
inc
adc
lret
dec
xchg
pop
push
lods
cld
into
or
sti
int
jo
and
popa
testl
aas
int
jp
shll
cld
jne
inc
test
jno
cmp
sub
inc
rolb
cltd
inc
xchg
cmpsl
call
inc
out
subb
lcall
push
jle
imul
inc
mov
mov
dec
sti
and
dec
mov
repnz
jo
rcrb
mov
mov
dec
cmp
dec
push
pop
repnz
push
rorb
and
pop
mov
rcr
jle
arpl
inc
and
jbe
xor
xchg
inc
inc
jge
mov
mov
gs
cmpsb
hlt
adc
movsl
mov
add
dec
mov
xor
inc
in
mov
fisubl
pop
cld
push
cmp
mov
ror
les
pop
js
js
mov
add
inc
inc
mov
fldt
jns
nop
fsubrp
js
hlt
push
add
rcll
mov
aaa
or
mov
dec
add
pop
lds
add
in
jb
add
push
sub
pop
add
mov
nop
mov
mov
jmp
cwtl
fmull
stos
insb
roll
pop
mov
iret
jp
cwtl
cmp
arpl
jns
cmp
pop
hlt
or
xor
push
stc
cli
inc
inc
xor
sub
mov
fadds
adc
imul
out
mov
push
add
ror
sbb
outsb
or
outsl
mov
sarb
jg
dec
add
lret
clc
dec
push
decb
scas
xor
movsl
mov
insb
imul
cmc
lret
push
xchg
cmp
mov
mov
sub
or
inc
add
mov
xchg
test
and
std
int3
js
mov
aaa
mov
in
mov
adc
aad
shl
jae
mov
dec
mov
sbb
jmp
arpl
pusha
pop
xor
mov
loopne
mov
add
adc
imul
add
add
out
mov
daa
fsubr
addr16
icebp
push
repnz
aam
adc
pusha
jecxz
in
sbb
xlat
clc
cs
bnd
les
sbb
jo
js
inc
sahf
and
mov
call
mov
cmp
fldt
lods
sub
loope
arpl
lods
shll
sti
push
mov
nop
or
cmp
sub
jbe
sub
je
sbbb
mov
jge
mov
cmp
mov
push
xchg
fisttpl
sub
lods
out
sbb
test
pop
popa
mov
loop
scas
das
adc
cmp
lret
adc
sub
xchg
imul
loope
add
pop
jno
icebp
add
jp
jno
add
fadd
aad
xchg
mov
mov
or
mov
cmpsb
pop
adc
stc
sbb
jno
stos
add
sti
stc
mov
lret
das
popa
scas
enter
xchg
and
push
sub
lret
roll
and
xor
into
fstl
movsb
mov
movl
mov
ljmp
dec
jp
loopne
inc
cld
enter
xchg
test
imul
mov
dec
inc
pop
or
pushf
stos
mov
stc
mov
push
out
outsl
mov
in
xor
aas
xchg
push
icebp
jns
jno
mov
repnz
push
inc
jmp
add
dec
mov
outsb
test
sar
jecxz
dec
xor
sub
int
pop
xor
add
pop
daa
imul
loope
scas
insb
inc
add
enter
test
out
add
and
loopne
mov
movsb
sbb
insb
and
pop
mov
xorb
add
push
mov
push
in
jnp
cmp
gs
repnz
mov
fs
mov
call
jae
dec
fcomip
outsl
scas
sub
imul
mov
xor
add
add
cs
bound
xchg
in
pop
sbb
dec
pop
jns
push
adc
dec
insl
mov
cltd
fadd
push
inc
or
add
ss
mov
aam
inc
dec
inc
fstps
icebp
repz
sub
or
divl
cmp
pop
in
das
paddd
jle
push
jp
in
add
bnd
aad
jno
testl
test
add
fistps
repnz
and
mov
call
push
add
inc
ja
leave
std
mov
mov
adc
stos
pop
loopne
and
and
ret
shlb
inc
mov
push
sbb
xchg
mov
leave
stos
stos
mov
xchg
rorl
fiaddl
mov
testl
push
xchg
ret
int
push
ds
add
add
and
xchg
mov
mov
loopne
inc
mov
sub
out
pop
loope
mov
mov
scas
das
fcoml
int
stos
inc
mov
stos
add
adc
jl
addr16
sbb
push
and
xchg
pop
iret
in
aam
sahf
pop
mov
sbb
out
mov
ds
inc
or
ret
mov
verw
pop
popa
cmp
xor
enter
pop
test
jb
add
enter
pop
adc
pop
clc
mov
xchg
ret
ljmp
pop
scas
lea
and
mov
test
lcall
inc
call
movsl
xchg
inc
mov
xchg
fmuls
test
aaa
push
pop
pop
xor
test
jg
aas
mov
cmp
dec
push
xchg
adc
push
push
pusha
dec
mov
jp
inc
push
enter
cld
sub
mov
or
dec
jnp
sub
sti
movsl
sbb
jp
arpl
pop
xchg
or
shll
clc
rcl
add
data16
pop
adc
das
lods
jp
aas
mov
dec
pop
fldt
push
or
nop
cmp
ficomps
jecxz
fiadds
loopne
jbe
dec
xor
insb
insb
lret
add
das
xchg
outsb
or
data16
dec
lds
dec
dec
mov
dec
lahf
sub
jnp
ficoml
adc
add
cmp
sbb
out
data16
cmpsb
rorb
pop
pop
jp
jecxz
cli
xor
aaa
aam
leave
pushf
fsubrl
adc
inc
jno
stos
cmp
inc
xchg
movsl
jle
xor
inc
and
pop
adcl
pushf
gs
jb
outsl
notl
pop
roll
or
mov
popa
ss
mov
jo
cld
dec
out
xchg
cmp
xor
mov
out
sbbl
imul
je
leave
pusha
mov
cmp
cmpsl
pop
and
jp
add
fwait
push
insl
sub
arpl
pop
out
rep
pusha
fldenv
push
fimull
test
adc
ficompl
daa
xchg
fadds
pop
inc
outsb
fs
xor
icebp
imul
movsb
stos
pop
push
negl
mov
ljmp
inc
fwait
sarl
pop
push
push
jmp
cwtl
and
fldenv
divb
cltd
cli
int
mov
push
xor
add
ds
sbbl
dec
icebp
xchg
cwtl
ret
jle
ljmp
lods
pop
fsubrs
dec
je
lods
pop
es
std
or
push
push
fldcw
bound
mov
arpl
ljmp
je
in
in
aas
adc
jno
pop
repz
insb
sub
pop
xor
setb
cli
add
imul
jp
std
ret
push
in
dec
shrl
dec
mov
add
call
or
mov
stc
in
pop
cmp
loope
jne
mov
cmp
or
adc
dec
aaa
icebp
loopne
ljmp
pop
push
mov
repnz
sbb
sbb
adc
test
lcall
ret
xor
mov
push
pushf
pop
rcrb
mov
cmpsb
dec
es
cld
or
sub
int3
inc
in
aas
pop
jg
rcrb
aad
lock
jbe
and
xchg
cwtl
outsb
pop
outsl
jp
cmp
inc
mov
jne
dec
pop
arpl
jmp
push
mov
push
jne
je
cmp
mov
lea
dec
xchg
jl
mov
mov
leave
lods
lds
divb
mov
rclb
push
stos
rorl
lret
cmp
insb
test
fidivl
rclb
scas
inc
dec
mov
cmpsl
clc
or
sti
ficomps
in
add
adc
xor
or
xchg
jl
push
cli
xlat
or
lods
inc
mov
mov
xchg
mov
test
jmp
mov
aad
xor
cmp
push
sub
movsb
xor
pop
push
inc
inc
add
jns
aam
xorl
pop
pop
mov
push
jle
stc
jmp
or
dec
loop
inc
inc
xor
in
popl
and
dec
jge
xchg
inc
push
addr16
fs
add
out
sub
ljmp
pushf
repnz
lahf
mov
call
cmpsl
pop
adcb
mov
push
pop
pop
repz
push
aam
out
je
mov
pop
int
test
push
push
loopne
insb
mov
cmp
imul
icebp
xor
addb
cmp
subb
mov
push
dec
dec
sub
inc
or
sub
outsl
outsb
ja
lock
xchg
aas
cs
mov
sbb
call
pop
jnp
sbb
mov
pop
jno
mov
test
cli
pop
push
fwait
inc
shrl
sbb
jo
int3
adc
sub
roll
fists
jae
add
dec
xor
mov
and
xchg
jmp
add
in
cmc
scas
fs
adc
scas
pop
mov
mov
jmp
ja
je
scas
or
mov
mov
or
pop
pop
test
push
dec
ss
xchg
xchg
aam
or
loope
stc
enter
mov
cmpps
mov
xchg
adc
or
jge
test
icebp
in
sbb
xchg
out
dec
mov
ficoml
jg
or
dec
cmc
mov
outsl
das
aaa
adc
addr16
pushf
sbb
push
int
icebp
rcl
repnz
push
out
mov
lods
sbb
xor
mov
dec
test
mov
adc
inc
scas
aad
mov
xor
adc
lcall
jnp
fisubrl
cs
add
incl
pushf
push
pop
jp
dec
mov
xor
loopne
ret
sbb
es
dec
inc
push
cmpb
test
in
and
adc
lcall
in
pusha
loop
fsub
pop
sub
or
fidivrs
in
mov
fisubrs
push
xchg
jo
jge
jo
imul
aas
icebp
add
mov
pop
in
ficoms
and
add
xor
call
arpl
cld
mov
in
sarb
push
and
data16
jecxz
pop
sbb
mov
pop
cmp
xor
inc
stos
dec
xor
in
stc
or
cmp
out
ljmp
loop
adc
push
arpl
pop
jl
pop
jno
je
cmp
inc
jnp
cmp
dec
adc
mov
mov
mov
ja
jl
lcall
adc
std
dec
add
or
int
cmpb
subb
xchg
or
loope
mov
mov
and
inc
repz
inc
insb
fnstsw
shrb
push
test
xor
aas
mov
and
or
jle
addr16
sbb
int3
or
xchg
mov
jle
cs
shrl
clc
mov
and
push
sbb
and
stos
fstps
sbb
ficomps
lods
pop
sub
mov
test
inc
clc
mov
jne
jmp
push
cld
rcl
test
mov
dec
hlt
stos
mov
jmp
xor
repnz
enter
dec
lret
inc
add
xchg
mov
bound
mov
add
loope
xor
jnp
nop
adc
rorb
xchg
push
jo
or
inc
std
mov
scas
push
add
movsl
fistps
pop
push
imul
aas
loop
dec
leave
fcoms
hlt
push
fdivrl
loope
add
mov
xor
clc
in
xchg
xchg
xchg
mov
out
int
jae
shlb
jp
gs
jae
ret
mov
fcmovnbe
lods
mov
test
mov
adc
lds
fistl
xor
cmp
dec
pop
test
aaa
or
push
push
xor
ss
mov
ds
outsb
push
jl
lods
stos
inc
repnz
fidivrs
sub
nop
sub
outsb
insl
cwtl
mov
cmp
popf
outsb
insl
add
mov
pop
pop
inc
cmpsb
pop
daa
mov
sbb
int
xlat
inc
xchg
int
daa
jno
nop
jle
icebp
add
push
sbb
or
imul
lea
cwtl
cmp
jbe
out
pop
das
out
jb
out
adc
cmp
mov
lahf
fstpl
mov
pop
movsb
aaa
cmp
add
push
push
sub
popa
and
add
or
pop
and
cwtl
xor
inc
fisttps
out
je
lods
xchg
daa
jnp
shll
jns
xlat
mov
inc
jno
iret
xchg
sarb
stc
push
shlb
mov
outsl
icebp
icebp
rolb
pop
mov
in
roll
cmp
xor
xchg
dec
popf
push
pushf
and
dec
dec
jbe
rcl
cltd
pop
mov
mov
mov
xchg
ret
dec
cmp
jno
sti
cmp
or
test
cmp
pop
loopne
cmp
ja
mov
mov
add
pusha
push
dec
mov
jp
and
mov
aaa
jo
cmp
jecxz
enter
add
cmpsb
ret
outsl
lock
xchg
xor
into
mov
sbb
xchg
jns
fcoml
pop
dec
pushf
xchg
test
jnp
fnsave
adc
test
pop
and
xor
vminps
pop
mov
add
dec
clc
notb
inc
sti
ficompl
jnp
jne
dec
dec
cld
mov
test
jg
lock
jp
pop
test
in
pop
pop
repz
jmp
or
mov
mov
pop
jnp
push
push
movsl
mov
js
sbb
into
and
push
cmc
fwait
mov
adc
mov
test
or
cmp
movsb
movb
popf
out
fwait
into
call
sub
cmc
int
and
xchg
pop
lea
sbbb
lcall
fidivl
int
je
and
lret
xchg
idiv
movb
inc
jne
mov
pop
mov
shrb
mov
daa
add
lds
int
popa
int3
mov
dec
jg
mov
std
lds
xor
scas
leave
pop
cmp
inc
leave
fidivrl
pop
adc
adc
bound
or
cmp
mov
fmull
push
call
xor
pop
xchg
sub
pushf
notl
add
stc
daa
int3
jne
clc
imull
lods
push
mov
cmp
mov
xchg
jns
in
mov
lret
imulb
fcmovne
lcall
sub
divl
stos
mov
cltd
cmc
in
xchg
rclb
xor
je
mov
inc
scas
xchg
dec
pop
sbb
stos
clc
cmp
mov
jp
pop
dec
and
outsl
push
pop
in
mov
data16
popf
xor
dec
sub
je
push
cmpsb
negb
mov
mov
cmp
add
inc
int
daa
dec
mov
adc
pop
pop
mov
jle
sbb
sub
lock
cld
scas
push
sarl
fcoml
sub
or
inc
push
js
mov
adcl
or
or
mov
test
movsb
mov
ret
jle
in
inc
pop
je
push
push
pop
sub
lock
repz
inc
xorb
repz
lahf
adc
das
xchg
push
mov
outsl
lds
adc
ss
dec
stos
insb
faddl
bound
sti
or
lret
sub
or
out
out
in
hlt
icebp
add
mov
add
iret
mov
cmp
jb
pop
mov
dec
pop
adc
dec
repz
or
int
shlb
fbld
call
dec
call
lret
mov
loop
repz
push
mov
daa
mov
mull
ljmp
pop
mov
xor
dec
xor
call
and
jmp
xchg
pop
jnp
jmp
shrb
and
fisubs
sub
cmpsl
lea
sub
js
pop
push
nop
insb
gs
incb
push
xchg
adc
or
jmp
test
mov
out
je
sbb
dec
mov
push
ja
aam
call
or
out
sub
xchg
sub
inc
adc
add
pushf
mov
addl
xorb
xor
movsl
xchg
add
test
sbb
int3
rcll
adc
stos
insl
xchg
mov
sub
fwait
sti
cwtd
in
cmp
enter
pushf
arpl
push
mov
or
addr16
outsb
adc
dec
mov
and
mov
add
and
push
sub
pop
mov
lock
das
aad
jecxz
int3
stos
dec
movsl
cltd
sub
ljmp
fbstp
or
test
inc
jno
inc
pusha
mov
call
notb
fsts
rclb
sbb
push
or
xorb
pop
jo
cmp
sbb
int3
cmp
pusha
mov
bound
lret
sbb
sub
add
pop
gs
sbb
push
lock
lret
mov
shll
jne
ds
cmpsl
std
pop
int3
pop
mov
add
push
mov
push
je
jbe
add
push
in
insb
push
push
scas
ldmxcsr
loop,pt
aad
mov
shr
mov
push
add
or
int
mull
push
mov
movsl
xchg
testb
add
sbb
inc
loopne
test
jb
sbb
loop
mov
xor
gs
mov
push
inc
sahf
add
jmp
dec
shll
insl
push
sub
lods
dec
ljmp
xchg
inc
outsl
and
jno
adcl
xchg
das
fstpt
test
add
ret
rcll
popf
inc
in
mov
aas
mov
scas
push
push
aad
into
dec
fs
int
lea
adc
call
je
in
push
je
jo
mov
dec
or
ljmp
pushf
movsb
daa
add
mov
aaa
cmc
out
jae
sbb
pop
mov
push
cmp
xchg
scas
and
mov
popf
push
inc
push
fcomps
fdiv
daa
xor
loop
jl
pushf
pop
xor
mov
insb
loopne
cltd
mov
scas
loope
jne
or
shll
pop
notl
xor
arpl
test
xor
into
jbe
lret
jle
or
int3
loop
loope
rcll
dec
pop
push
mov
aad
gs
or
in
sbb
mov
clc
fsubrs
sbb
in
int
mov
imul
mov
jo
pop
hlt
rclb
dec
sbbl
iret
inc
xchg
adc
sbb
bound
mov
not
pop
test
jecxz
mov
mov
adc
pop
mov
mov
fs
adc
adc
jle
cmpsl
pop
xchg
push
add
dec
daa
pusha
insl
lods
inc
mov
int3
inc
fbstp
aas
fsts
adc
xchg
pop
sahf
stos
pop
femms
enter
sub
jne
inc
mov
ljmp
mov
enter
xchg
testl
popa
std
add
mov
mov
jg
push
es
pop
ficompl
roll
int3
cmp
pop
xor
jle
lods
insb
dec
outsb
dec
xchg
add
imulb
je
pop
lds
xchg
mov
jmp
std
mov
mov
aas
or
test
pop
inc
nop
in
clc
pop
imul
lret
js
out
testb
dec
jg
sbb
inc
fdivs
pop
std
in
inc
fisttps
dec
sbb
iret
cmpsb
inc
push
inc
out
fs
lods
cs
movsb
test
lods
push
shrb
fisttpl
int
mov
xchg
xchg
jmp
inc
loopne
fldt
jmp
sub
aaa
dec
fst
inc
bound
xchg
movsb
adc
xchg
cwtl
shl
inc
hlt
pop
cmpb
pop
adc
in
mov
pusha
pop
out
and
mov
mov
push
ror
jp
clc
imul
sub
fsts
sarb
test
mov
fwait
push
sbb
jo
scas
ret
inc
outsl
xchg
inc
or
lcall
pop
push
call
fcoml
mov
lret
ret
aam
ficoms
adc
shlb
loop
mov
adc
repz
mov
mov
dec
sub
iret
push
wbinvd
fucom
ljmp
mov
ljmp
stos
inc
jo
sbb
sub
pop
sub
sbb
jmp
or
fdivs
sbb
cmp
xor
mov
cmp
sub
loopne
les
and
jnp
add
push
shrl
xor
lods
insl
lock
dec
push
popf
mov
fistpl
je
data16
cld
iret
aam
mov
pop
cwtl
ficomps
jo
int3
jbe
fmull
lret
cwtl
add
fmull
xor
push
popf
cmc
icebp
rcrb
fdivrs
cld
out
add
cmp
adc
jnp
insb
xor
jns
js
movsb
js
mov
inc
out
lds
cmp
push
push
mov
ja
pusha
sbb
gs
ficomps
ds
sbb
ja
jb
cwtl
pop
mov
shll
jne
test
scas
mov
mov
xor
pop
inc
xchg
jg
cli
inc
mov
sub
stos
push
xchg
dec
sub
mov
mov
jnp
xchg
dec
shlb
enter
sub
inc
sbb
pop
sti
xchg
mov
imul
pop
fidivs
sub
push
popa
inc
jb
sub
pop
loopne
lods
imul
les
inc
aaa
js
out
mov
cmp
push
dec
fsub
aam
adc
and
in
lcall
lods
outsb
dec
sub
scas
int
or
fisubs
fisubl
lock
les
outsb
add
xchg
add
in
sub
jl
shlb
stos
jmp
mov
push
jmp
fbld
xorl
movsb
mov
mov
adc
mov
scas
je
mov
push
loopne
mov
roll
call
dec
mov
inc
pop
lret
push
adc
mov
das
ss
in
and
popa
movsb
scas
mov
leave
fmull
jecxz
stc
mov
xchg
jno
test
pop
popf
nop
mov
jge
adc
leave
xchg
xor
ficoml
mov
stos
mov
bound
sbb
adc
cmpsl
dec
dec
jp
subb
dec
shll
ret
data16
pop
shll
push
mov
fcmovu
dec
push
sub
or
gs
inc
call
add
dec
cltd
sbb
mov
das
lods
add
push
test
mov
lea
int3
sbb
mov
in
fidivs
and
insl
mov
imul
dec
sbb
and
push
sbb
mov
lods
sbb
and
int
or
fbstp
sbb
pop
mull
jp
mov
mov
insl
stos
xchg
pop
cmpsl
addr16
adc
push
mov
rcl
clc
ret
jns
xor
xchg
lds
jg
sub
lock
cwtl
sub
push
xor
aas
and
xchg
and
xor
enter
cld
xor
cmp
shll
movsb
insl
out
mov
mov
iret
mov
sub
add
mov
stos
imul
and
mov
dec
sub
in
and
fnsave
out
dec
aas
push
push
cmpsl
and
pushl
inc
xor
dec
mov
cli
sbb
loope
sub
jae
cmpsl
mov
sbb
rolb
psrld
mov
sub
addr16
push
or
insl
das
imul
xchg
push
jae
cmp
iret
adc
xor
jo
aas
xchg
xor
data16
push
jne
enter
dec
inc
and
mov
insb
mov
out
jmp
jnp
scas
adc
sbb
std
xor
ss
lock
imul
xchg
lahf
add
dec
test
xchg
sbb
xchg
xchg
ja
xchg
notb
stc
test
xchg
repnz
repz
push
adc
popf
clc
push
stos
pop
jmp
fisubl
mov
mul
in
mov
push
data16
or
aaa
lcall
jb
sbb
dec
sub
lea
inc
iret
push
adc
sub
push
or
dec
sbb
pop
lret
orb
sbb
in
add
jo
mov
adc
insl
mov
push
pop
fnsave
and
popf
icebp
jo
shlb
outsl
mov
sbb
in
out
or
and
sub
out
test
fdivp
jns
popf
and
jl
fisubrl
pusha
addl
outsb
mov
js
fdivrs
push
inc
jo
xchg
aam
push
movsl
cltd
popf
push
sar
es
xchg
or
mov
sbb
les
repz
int
sub
cld
loop
lea
mov
push
decb
jns
and
loop
cli
push
cltd
adc
loope
add
jno
adc
and
and
clc
lods
xchg
lahf
insl
and
pop
out
mov
cmpsb
adc
add
push
xchg
xlat
sahf
mov
scas
jae
jbe
mov
call
mov
in
mov
gs
mov
aam
mov
xchg
xor
popa
sub
and
fdivs
lock
in
xchg
sbb
lock
jns
jl
inc
mov
ds
ss
or
mov
push
outsb
xor
mov
push
mov
xchg
mov
cmp
sti
jge
xor
add
jns
pop
out
sub
aas
fcmovb
xchg
jne
xchg
aad
push
fs
cld
cmc
cmp
in
adc
int
lret
out
cmp
in
add
or
daa
pop
in
test
pop
cmp
add
and
mov
sbb
loop
test
test
mov
rcrb
js
sbb
aad
dec
xchg
add
dec
pushf
jle
clc
ljmp
push
inc
outsl
pop
push
cmp
add
sbb
das
inc
cmpsb
add
push
or
cli
hlt
iret
push
das
lcall
mov
pop
sbb
sbb
cld
pop
xor
lds
mov
loopne
inc
jle
fs
lret
push
mov
pushf
mov
push
mov
mov
jns
ja
test
sbb
cmpsb
pop
add
dec
jns
inc
insb
sub
cwtl
fsts
xchg
or
mov
fs
adc
xor
xchg
inc
sbb
jecxz
or
int3
repz
js
clc
push
lds
lret
subl
lcall
fs
sahf
xor
jae
jp
ret
ljmp
sbb
dec
sbb
mov
mov
das
cmc
out
mov
les
pop
jns
cmp
lods
sar
mov
nop
sarb
fisttpll
jae
push
inc
lds
loop
jl
test
imul
cmpsl
adcl
fmuls
out
inc
mov
cld
push
push
ljmp
pop
add
sarl
or
or
mov
push
mov
lret
cld
testl
sbb
inc
insl
je
jle
jp
std
sbb
dec
mov
addr16
pop
hlt
or
ljmp
int3
in
jbe
sub
add
or
clc
sbb
jecxz
in
lds
xor
sub
movsl
stos
andl
dec
mov
test
rcrb
adc
inc
add
int3
test
loopne
pop
xlat
cmpsl
fdiv
mov
repz
in
int3
fdivrs
or
cmp
data16
aas
mov
div
mov
lods
mov
stos
test
lret
mov
cmpsb
bnd
test
and
neg
jae
insb
xchg
cltd
push
push
repnz
jge
xchg
xlat
ret
mov
dec
arpl
icebp
xchg
int
ret
push
sub
add
cli
mov
jle
lret
push
adc
mov
pop
or
jl
mov
xchg
fisttpl
leave
iret
insb
or
nopl
dec
cmp
push
sbb
in
flds
mov
xor
inc
fisttpl
cmp
icebp
add
iret
bound
pop
and
sbb
jge
adc
clc
jge
xchg
mov
jno
std
add
cmpl
outsb
sbb
into
sub
cmp
shr
add
fdivrp
clc
inc
mov
shll
scas
ds
sqrtps
dec
and
imulb
mov
fisttpll
push
sub
mov
and
jnp
sarl
int
aam
jne
xchg
or
ret
iret
jns
pop
and
mov
inc
jne
jne
das
dec
jb
push
xchg
scas
fadds
out
test
daa
cmp
adc
js
mov
iret
in
mov
push
fisttps
stc
int3
das
jne
pop
jae
and
ret
or
repnz
mov
insb
xchg
pop
nop
fistl
in
lahf
fsubs
int3
and
out
sub
xchg
xchg
xchg
cs
and
mov
and
stc
mov
push
dec
mov
pop
xchg
dec
iret
std
call
sub
sub
ffree
jae
sub
and
push
and
jle
imul
aaa
scas
pusha
xchg
adc
lea
stos
mov
nop
ss
inc
sbb
lds
xchg
xchg
or
xor
cmp
sbb
call
lcall
pop
int
pop
out
mov
mov
push
pop
fwait
cld
orl
sahf
mov
jmp
push
sbb
pop
outsl
mov
adc
insb
xor
pop
aam
push
xor
divps
lods
or
shrb
dec
sub
leave
out
pop
mov
pop
jne
fidivl
xchg
testb
cld
subl
imul
test
xlat
repnz
sti
cmp
sub
shrl
ja
cmp
or
push
mov
adc
stos
aas
and
push
sub
adc
sti
mov
gs
jle
push
or
sahf
sarb
lods
and
push
call
fildll
js
jbe
inc
ret
stos
pushf
mov
in
loope
mov
repz
pop
adc
cmpsl
mov
movsb
xor
sub
int
xchg
testb
lcall
dec
leave
movsl
das
cmp
adc
cmp
mov
dec
ss
cli
int
int
notb
sub
sbb
fucom
mov
daa
imul
fdivrs
pop
inc
sub
negb
jno
inc
push
mov
add
or
inc
rorl
cmp
jle
and
lods
or
pop
outsb
loop
mov
das
mov
pop
sti
inc
add
lock
movsl
mov
int
dec
xchg
push
mov
outsl
xchg
mov
andb
xlat
daa
pop
mov
icebp
mov
pop
jecxz
cltd
js
fcomp
enter
sbb
repz
out
test
xchg
dec
lock
adc
pminub
not
dec
inc
dec
mov
ffree
adc
push
subb
sub
mov
popa
fs
jne
movsl
in
push
jle
out
add
mov
popf
cmp
icebp
and
sbb
lods
pop
dec
fildl
add
inc
or
xchg
lock
test
and
push
mov
push
hlt
std
imul
es
or
je
rep
xlat
das
jb
outsb
xor
pop
aaa
mov
test
shl
sub
in
je
popf
sub
loope
mov
add
fwait
cmp
fucomip
outsb
add
add
mov
pop
nop
add
addr16
lods
js
mulb
mov
aad
mov
push
jb
fisubl
mov
jnp
dec
aad
adcb
test
orl
pop
push
iret
mov
dec
xlat
and
sub
jle
dec
push
inc
cwtl
jmp
subl
jmp
or
arpl
push
daa
and
mov
jmp
notl
mov
cli
inc
cli
cmp
and
mov
mov
decl
cmpsl
pop
jo
xor
sub
pop
out
lea
inc
call
test
cwtl
popf
cmpl
cmp
cmpsb
cmc
cmc
loope
add
xor
mov
shrb
inc
mov
and
sbb
dec
mov
bound
mov
sub
sbb
rorb
cmpsb
adc
icebp
cmc
or
pop
cld
insb
daa
sub
mov
xchg
sbb
imul
std
inc
mov
dec
mov
fs
mov
in
leave
push
pop
inc
arpl
gs
loopne
ret
ret
and
add
pusha
jle
mov
mov
inc
pop
sub
and
cmp
insb
loop
adc
rcrl
cmp
jae
sbb
or
stc
jle
mov
inc
push
adc
or
dec
in
out
push
cmp
sub
loope
mov
adc
mov
movsb
mov
loope
sahf
push
ret
inc
jg
xchg
vorps
mov
xchg
data16
mov
es
jo
in
push
lock
inc
hlt
push
jnp
push
mov
push
popf
jg
inc
sub
int3
sub
scas
lock
xor
inc
inc
xchg
fwait
pop
sbb
bound
jae
pop
fcomi
cmp
filds
mov
sbb
mov
mov
pop
adc
xor
adc
fisubl
lock
call
xchg
fucom
or
or
aad
test
xor
inc
dec
dec
mov
das
lret
enter
cmp
cld
testb
cltd
pop
xchg
and
daa
stos
scas
dec
sbb
jno
push
ret
std
lods
adc
or
popl
dec
and
xlat
mov
add
xor
xchg
push
out
sub
cli
bound
bound
cwtl
in
mov
hlt
pop
jmp
outsb
sbb
push
leave
cmpsl
les
insl
orb
scas
xorb
add
sahf
sub
inc
push
movsb
leave
jb
fiaddl
mov
jbe
rcll
dec
mov
push
dec
sbb
and
lret
das
fcomps
iret
sub
cmp
lcall
inc
lods
adc
insb
aam
mov
test
xor
fimuls
ficomps
cld
scas
mov
xchg
push
jnp
jno
mov
push
scas
adc
and
mov
or
into
sub
stos
fisubs
and
jns
out
xchg
sbb
lods
loopne
push
lcall
sub
inc
adc
push
inc
insb
jmp
sub
stc
inc
in
stc
sbb
cmpsb
sub
jp
cld
mov
xchg
loopne
sarb
int
xchg
pop
sub
inc
insl
cli
enter
ret
into
xchg
jbe
and
xlat
pop
inc
xchg
out
das
or
jne
orb
or
sub
or
and
shll
mov
fstpl
xchg
dec
cmc
and
icebp
pop
or
notl
into
xor
out
hlt
lea
lea
movsb
fcmove
nop
sbbb
ret
sbb
xchg
dec
xor
sarb
jb
pusha
in
xchg
mov
mov
test
sbb
fdivrp
xchg
xor
ja
xchg
fimull
jge
repz
mov
xor
clc
stc
ljmp
ljmp
imul
jo
int
test
ret
mov
shr
jg
cmp
inc
popa
or
pop
in
xor
bound
mov
push
int
popf
aaa
imul
add
scas
fiadds
dec
or
rcrb
cmp
fcomps
mov
inc
ja
fdiv
sub
into
adc
jae
xorl
jmp
push
int3
rorl
aam
aas
lret
inc
int
or
jmp
mov
pop
push
rcrb
lea
or
shlb
aam
pop
push
rcr
mov
fstpl
mov
pop
pop
mov
jne
sar
sbb
push
jle
test
dec
add
push
or
xchg
jbe
push
cmpsl
push
popl
cmp
lock
aaa
and
andb
fnstsw
sbb
shl
inc
mov
stos
mov
push
inc
mov
cld
add
in
or
sbb
dec
mov
lods
mov
jecxz
cld
mov
pop
daa
jbe
decb
test
push
fsubr
inc
add
pop
pop
fstl
movsb
idiv
mov
jns
jl
mov
mov
into
dec
adc
add
cmp
stos
sub
sbb
arpl
mov
jns
pop
pop
fidivs
lods
movsl
or
adc
push
rcrb
mov
sub
sbb
popa
std
xor
sub
mov
arpl
xchg
inc
ss
imul
ret
in
in
mov
sub
pushf
jmp
shll
imul
mov
cld
mov
cmp
leave
sbb
xchg
shl
dec
push
jns
insl
iret
mov
shrl
push
cmp
add
sar
sbb
dec
arpl
scas
sti
inc
jmp
test
mulb
xor
pusha
lcall
add
cmp
jb
pop
xor
jp
stos
jae
jp
mov
fcoms
push
in
inc
push
or
enter
daa
lcall
test
xor
and
rcll
lds
aaa
and
shr
push
out
push
lahf
inc
enter
sbb
fisubrs
out
scas
stc
mulb
and
add
je
xchg
mov
xor
mov
mov
into
sub
or
arpl
int3
mov
sbb
mov
xchg
xor
mov
movsb
jmp
mov
xchg
jmp
popa
adc
dec
cmp
mov
dec
cmp
and
dec
sbb
or
mov
mov
ficompl
push
jbe
pop
inc
out
jo
adc
repz
ror
sbb
imul
add
pop
test
mov
cmpsb
pop
lods
sbb
mov
or
dec
fisubl
add
aaa
or
cmp
lods
xor
dec
les
jae
iret
clc
add
sbb
loop
dec
mov
adc
repz
xchg
fmuls
jne
out
lret
mov
imulb
xchg
adc
cmpsl
push
mov
fldl2t
and
test
ss
faddl
scas
test
inc
sbb
mov
divb
lret
lcall
dec
clc
out
inc
sub
jg
repnz
xor
adc
fdivrs
xchg
mov
stos
ret
xor
push
push
mov
push
arpl
xchg
dec
test
js
add
popf
and
jge
sub
and
fiaddl
or
jmp
push
inc
cmp
stos
out
enter
mov
push
shl
adc
in
adcb
sub
jb
mov
dec
xor
xor
ret
daa
and
sbb
lcall
sub
xlat
cmp
arpl
or
aam
out
insb
mov
pop
mov
and
lods
arpl
jb
pusha
mov
in
dec
sub
push
xchg
into
and
add
and
int
or
mov
sbb
pushf
jno
pop
dec
fidivs
sbb
ds
filds
cli
in
cld
sbb
sbb
pop
mov
rol
lcall
out
sbb
icebp
and
and
mov
insl
lcall
mov
sbb
cmp
cmpsb
cmp
and
adc
in
add
gs
adc
xchg
pop
cmp
add
lea
mov
jne
mov
lock
int3
cmpsb
mov
mov
testl
mov
and
in
imul
repz
mov
inc
dec
add
iret
push
int3
jbe
fcmovne
mov
xor
movsb
shlb
add
push
sarb
push
popa
mov
sub
mov
ja
dec
out
je
std
sbb
pop
mov
daa
lcall
sbb
loopne
insl
imul
fidivl
js
pop
stos
or
jle
into
mov
test
sub
or
dec
testl
shlb
dec
iret
inc
pop
scas
arpl
out
lea
rclb
mov
and
xchg
push
inc
ja
adc
push
test
sbbb
mov
sbb
or
mov
sub
jb
lds
lahf
mov
or
lcall
and
jbe
stc
pushf
dec
mov
rcrl
std
cld
mov
mov
inc
or
fstps
popa
out
lds
std
xor
imul
and
adc
jo
add
imull
enter
scas
jge
pushf
popf
inc
push
js
mov
sub
fdivl
sti
mov
dec
add
mov
jns
xchg
mov
mov
adc
mov
stc
jns
cwtl
insb
jbe
inc
jae
fisubs
mov
lds
mov
fcmovu
or
fwait
lock
mov
addr16
scas
sbb
inc
movsl
pop
outsl
leave
jmp
and
jp
dec
sbb
dec
push
cli
adc
add
xchg
push
fildll
sbb
adc
mov
test
push
ja
mov
jb
cmp
cmpsb
test
movsl
lahf
icebp
daa
pop
mov
push
andl
lcall
cmp
scas
dec
ds
imul
pop
xchg
cmp
mov
cmc
insl
dec
test
in
in
mov
cmp
loop
jae
das
mov
cmc
dec
adc
xor
mov
pop
mov
and
test
ss
shrl
shlb
les
ficompl
pop
or
rep
scas
adc
mov
or
push
ror
adc
adcb
pop
cmp
cmpsl
icebp
arpl
jmp
mov
bound
inc
dec
jo
into
or
xor
repz
and
sbb
sub
std
xor
add
pop
add
pop
push
lcall
mov
nop
push
push
push
addr16
xchg
fnsave
add
sub
insb
loope
push
xchg
nop
jmp
sahf
push
enter
lret
les
jmp
dec
dec
cmpsb
movsb
scas
fsubrs
loope
cmpsb
test
xor
sbb
jne
add
sub
xchg
xor
in
lret
inc
bound
push
push
dec
mov
movsb
test
outsl
out
scas
xchg
in
push
mov
pop
push
mov
test
jge
addr16
ja
or
dec
insb
push
or
cmp
dec
aam
and
sbb
ret
negl
std
pop
jo
test
mov
pop
sarl
rorb
sub
pop
jns
pop
and
imul
push
and
outsl
loope
shlb
stos
js
out
loopne
jno
mov
mov
leave
dec
add
jbe
add
and
int3
insb
pop
pushf
nop
jl
xchg
test
jmp
in
sub
aad
lea
sarl
sub
mov
cmp
addr16
pop
fistpl
popf
std
sti
call
or
ds
sar
cmpsb
imul
clc
xchg
mov
inc
jb
jb
cmp
push
mov
popl
adc
add
mov
pop
scas
xor
cmpb
cli
jnp
add
mov
int
pop
cltd
inc
add
push
popf
mov
dec
or
imulb
mov
jno
cmpsl
stos
xor
push
sub
sbb
rorb
push
cmp
lods
sub
syscall
scas
popa
cltd
in
xor
in
sub
lahf
loopne
inc
inc
test
jae
jmp
xor
lahf
dec
dec
stos
rep
iret
push
into
pushf
and
pop
in
push
or
xchg
cwtl
imul
cwtl
xor
test
add
stc
mov
aas
sub
int
cmp
pop
rorb
or
push
jp
pop
std
xor
or
test
and
jg,pt
jno
lret
mov
xchg
dec
lahf
mov
aam
jnp
into
dec
leave
out
scas
jmp
inc
push
rcl
cmp
jb
jecxz
call
adc
gs
dec
test
inc
shl
loopne
adc
jne
xchg
mov
xchg
ret
push
push
popf
push
ss
cmc
testb
out
cld
and
mov
lds
insl
cmp
dec
inc
shrl
jle
add
loope
pop
lods
mov
fidivrs
mov
jge
xor
jp
daa
sbb
push
cs
movsb
cmp
setno
pop
xorl
stos
add
sbb
pop
add
orb
pop
add
and
aam
add
or
jg
pusha
ja
nop
fldl
adc
xchg
xchg
mov
jno
dec
movsl
pop
shl
movl
lods
jg
add
pop
mov
rcrl
or
xor
or
int3
cs
aaa
frstor
adc
lds
add
test
xor
and
mov
in
cli
add
inc
cmp
or
and
aaa
sbb
repnz
mov
adc
shll
ljmp
cmpsl
push
cmp
in
addr16
mov
mov
into
adc
rolb
leave
in
mov
and
mov
inc
jo
or
icebp
mov
dec
dec
push
lret
xchg
cltd
insl
movsl
jg
xor
sbb
cwtl
outsl
sbb
testl
cmpsb
pop
repz
fcom
and
sbb
push
mov
push
jmp
adc
lods
imul
out
push
mov
je
cltd
rclb
orl
or
rorb
cmp
sbb
movsb
das
in
rcrl
mov
jo
mov
cmp
pop
push
or
out
je
inc
dec
gs
in
imul
mov
jb
cltd
lcall
cs
adc
sbb
xor
xor
mov
cmp
pop
popf
and
sub
sbb
into
xchg
push
dec
cmpl
pop
or
mov
decl
pop
cmp
pop
gs
loopne
int
add
shlb
add
mov
jle
push
mov
jne
sbb
xorb
push
lret
jb
std
aad
mov
call
or
lock
inc
es
and
xchg
js
mov
popf
popf
xor
inc
add
jb
cmp
push
push
fucomi
jbe
outsb
cmpsb
aas
cmp
push
lock
js
aam
hlt
sahf
out
out
movl
mov
mov
rorb
insb
cmp
inc
scas
popa
out
push
push
jg
fmuls
repz
fcomp
mov
xlat
cmp
xchg
dec
mov
divb
cmp
sahf
nop
and
xchg
cmc
jge
mov
pminub
neg
adc
lahf
std
fidivl
stos
or
mov
in
test
dec
sbb
push
popa
ret
inc
in
fsubl
fnstenv
adc
push
in
les
mov
cmpsl
add
test
or
test
pop
cltd
pop
test
cmp
jmp
push
push
fiaddl
cli
sbb
dec
and
cwtl
loope
lods
cld
fbld
aad
nop
pop
arpl
int
gs
sahf
inc
dec
cmpsl
lods
cmp
jns
gs
jp
cwtl
xor
cmpsl
shlb
dec
mov
or
js
push
fmuls
push
lahf
int
pop
mov
aaa
loop
cmpsl
xor
inc
rorl
and
sub
adc
fsts
out
iret
lahf
subl
cmc
mov
push
jecxz
xchg
or
sub
sub
xchg
cmpsl
push
popf
xor
push
in
les
xchg
fadd
cltd
add
rcll
push
and
add
cmpsb
popa
mov
dec
insl
jg
xor
fadds
jo
cli
pop
mov
iret
adc
fs
mov
or
xchg
aam
repnz
pop
adc
test
fwait
les
sub
push
dec
ds
xorl
test
daa
lods
pop
mov
mov
std
fwait
lret
enter
ljmp
outsb
fbld
pop
cld
sub
cmp
rclb
repz
cmc
aas
mov
leave
neg
mov
pusha
stos
push
xchg
scas
sub
inc
or
cmp
in
into
cmpsl
inc
imul
xlat
push
mov
decl
mov
out
jns
aam
stc
std
lahf
mov
outsb
fiaddl
dec
cwtl
push
mov
mov
addr16
jp
sub
inc
xchg
push
jns
pusha
push
daa
xor
shll
adc
push
mov
dec
mov
test
jno
mov
cmp
sbb
push
aaa
xor
cmp
xrelease
push
xor
testb
xchg
lret
iret
pop
sbb
cmc
inc
shrl
loope
stos
jno
xchg
fisubl
sbb
shlb
das
mov
inc
cmpsl
xor
cwtl
inc
inc
inc
and
adc
ficomps
negl
rep
sbb
repnz
jae
sub
imul
inc
test
jmp
inc
xchg
adc
out
mov
adc
into
outsb
cwtl
pop
negb
loop
inc
add
cmpb
jl
jmp
pop
jbe
mov
and
outsb
sarl
jmp
es
aas
out
mov
movsb
test
mov
js
test
sub
lahf
subb
ds
mov
test
inc
inc
arpl
lds
or
sub
or
cmpsb
push
or
lahf
add
jbe
aas
push
mov
mov
aam
enter
push
leavew
add
movsb
inc
fwait
pop
lcall
mov
popa
xchg
int
idiv
paddsw
insb
and
ljmp
xchg
mov
cmp
mov
xor
and
hlt
cmp
cmpsl
jge
js
and
aam
inc
jl
push
dec
les
push
and
out
jge
sahf
dec
mov
inc
sub
pop
iret
testb
inc
fcoml
push
sbb
sbb
popf
add
mov
outsb
mov
or
cs
in
cmpsb
or
sbb
jae
xor
std
jp
bnd
sarb
roll
mov
jmp
scas
jge
lods
pop
daa
cld
sbb
faddp
or
xor
push
mov
cmpsl
adc
in
sub
aam
ja
xor
and
jae
mov
mov
insb
pop
mov
fcom
xor
push
add
mov
mov
in
push
jae
leave
pop
lds
repz
idivb
cmp
inc
jnp
and
ficoms
jne
data16
xchg
dec
jbe
mov
ja
in
and
js
inc
stos
and
inc
ja
pop
xchg
std
imull
fs
scas
aaa
in
je
mov
and
es
sbb
xchg
das
jne
or
or
push
xor
sub
data16
mov
and
add
xchg
sub
in
je
xor
add
sti
mov
mov
rorb
sub
repz
pop
jne
add
xchg
pop
xor
xchg
xchg
hlt
popf
pop
cltd
call
aaa
cli
in
push
add
sti
mov
repnz
xchg
leave
test
xor
clc
mov
fistl
pop
mov
imul
xor
pop
push
aas
fistpll
sub
incl
js
pop
outsl
dec
xchg
cmp
jle
mov
shll
push
push
xlat
movsl
iret
inc
push
jo
jl
push
pop
or
push
adc
inc
sbb
fldcw
dec
nop
int
push
out
in
dec
pop
jle
out
xchg
loope
jg
gs
sub
adc
je
cwtl
jge
inc
je
ror
xchg
cmpsb
rol
fisttpl
incb
adc
xchg
cmpsl
ja
cmp
das
xor
sub
insb
sbb
add
sti
fdivp
out
outsl
dec
pop
fsubr
inc
leave
dec
cli
cmpsl
imul
adc
xor
ret
cmp
pop
cmc
arpl
int
or
je
jnp
inc
pop
jnp
and
fildll
adc
sbb
adc
jne
mov
xor
insl
jge
rol
cmp
imul
aam
add
or
in
sbb
shl
xchg
jns
pop
test
adc
jo
mull
stos
inc
fcomip
or
aam
fwait
or
jne
push
stos
lea
add
sti
mov
cmp
loopne
imul
stos
in
xchg
pop
add
les
cmp
in
js
push
jmp
mov
movsl
inc
push
add
cmc
addr16
ret
adc
call
insb
imul
mov
pop
pop
xchg
mov
es
fsubs
sub
test
xchg
and
out
inc
mov
mov
xor
mov
sbb
mov
cli
jo
cmp
jg
shll
mov
or
mov
jmp
pop
jmp
adc
call
test
dec
js
jp
jl
push
jo
dec
sahf
pop
shlb
in
dec
jae
add
sub
pushf
shl
or
cmp
push
cmp
lods
mov
push
push
pop
mov
jb
aas
cmpsl
jg
fisttpl
lods
cwtl
ljmp
jmp
mov
rcrb
mov
mov
jb
xor
xchg
push
cmpsb
aam
sahf
adc
mov
out
cltd
pop
hlt
push
leave
stos
dec
insl
pop
ret
cmpsl
scas
cmp
aam
gs
jb
fidivs
loope
aam
fnsave
cmp
ret
test
lods
push
test
jno
dec
in
sbb
push
inc
jp
insb
and
push
fs
pop
imul
fwait
nop
jae
sub
push
cld
mov
push
push
leave
xlat
in
jnp
jle
test
adc
mov
lods
inc
lret
jp
ret
pushl
adc
or
movb
xorl
out
icebp
aas
std
dec
cli
cmp
out
cmpsl
pop
pop
repz
mov
sar
mov
dec
test
enter
adc
jge
sbb
movsb
push
mov
pop
or
xchg
jl
push
lret
rcrb
imul
test
fisubrs
or
sbb
cmp
lret
stos
and
xor
dec
js
pusha
hlt
xor
lret
out
sti
fdivs
cmp
inc
sbb
outsl
mov
ret
xchg
or
mov
push
inc
in
fsts
lods
decl
mov
add
push
aaa
xor
jne
lea
lcall
stos
inc
mov
movsb
lahf
push
adc
mov
mov
pop
cs
inc
pop
mov
call
pop
jge
out
leave
push
jno
or
call
je
pop
sub
loop
sbb
out
add
push
jl
cli
ds
xchg
hlt
outsb
jb
mov
mulb
push
ret
adc
js
cwtl
movsl
inc
mov
shll
out
dec
repz
and
gs
shll
addr16
push
xor
cmp
or
push
cs
sbb
push
sahf
movsb
adc
adc
sbb
mov
lret
inc
imul
outsb
cld
ja
les
ljmp
out
ret
lock
lods
push
aam
xchg
adc
push
push
fdivrl
and
enter
js
int3
roll
jne
or
int
jb
aaa
xor
test
stos
jo
iret
cmp
mov
push
jle
call
xor
andb
sbb
int
sbb
int3
daa
adc
aam
ljmp
sub
pop
inc
jle
mov
movsl
xor
test
mov
arpl
imulb
mov
jmp
jae
push
jb
inc
ds
pop
xchg
pusha
inc
ss
adc
sahf
or
es
insl
add
int
loop
ljmp
push
push
jne
mov
ret
sbb
repz
les
inc
divb
add
jg
bound
pop
movsl
push
mov
cmpxchg
pop
pushf
lock
xlat
push
adc
mov
cmpsb
sbb
pop
aaa
mov
std
clc
push
sub
lret
in
aas
add
and
in
pushf
cmp
in
mov
push
push
cmp
fcmove
pop
push
in
pop
mov
push
in
jp
repz
jle
and
fildl
mov
xchg
mov
xor
mov
es
push
cmp
pop
int3
xor
xchg
xlat
out
push
test
or
mov
bound
popf
ja
adc
mov
clc
gs
in
mov
loopne
imul
add
xor
ret
push
push
cltd
fs
jno
ljmp
or
and
adc
test
dec
pop
push
dec
fsubp
xchg
pop
repnz
loop
xorb
js
or
adc
add
push
test
fs
stos
repz
andb
mov
inc
adc
inc
test
in
mov
iret
outsl
and
jns
push
add
sbb
sti
mov
daa
xchg
and
in
mov
dec
ss
out
jo
mov
imul
push
adc
stos
imul
or
dec
cs
inc
jmp
inc
push
and
sub
mov
mov
xchg
mov
inc
mov
push
iret
ficompl
sub
push
repz
adc
mov
pushl
test
jp
iret
mov
sub
jae
ja
ljmp
mov
mov
int3
je
sahf
xor
call
xchg
mov
or
ja
ret
out
out
jecxz
icebp
sbb
enter
sbb
mov
movsb
push
or
movsb
out
mov
xchg
ja
movsl
enter
dec
shlb
mov
lds
mov
xchg
push
enter
test
sti
dec
out
mov
and
cmp
in
jmp
cmpsl
mov
and
stos
inc
icebp
adc
stc
or
push
sub
mov
mov
sbb
jl
std
pop
sub
test
movsl
sub
xchg
mov
in
in
xchg
mov
jp
mov
mov
xor
jmp
cmp
cmpsl
jne
jp
mov
cmp
pusha
inc
pop
and
and
lret
xchg
pop
aaa
loop
sarl
sub
adcl
inc
mov
jmp
movsb
addb
add
mov
mov
xor
cmpb
and
inc
dec
xchg
loop
popa
scas
fisttpl
or
lods
xchg
shr
cld
insb
push
sub
stc
mov
or
adcl
or
fcoml
sub
lret
cmpl
sub
or
add
sbb
cltd
jmp
or
mov
jne
push
push
int3
mov
repz
incl
dec
cmp
cmpsb
and
sbb
sbb
pop
in
daa
ud0
jmp
out
mov
in
lret
rorl
sub
xor
fsts
stos
sub
push
hlt
loop
test
sub
repz
clc
js
lahf
or
dec
and
pop
nop
jns
out
cmpsl
in
sub
imull
mov
pop
sbb
xchg
pop
xor
test
inc
js
out
jae
pop
mov
in
divl
add
pop
mov
insl
mov
ss
jno
jne
insb
aas
xor
add
cmpsb
cmc
cmp
popl
in
fnstsw
into
inc
movsl
std
jg
outsl
inc
dec
mov
jge
xor
push
cmp
fwait
scas
test
scas
xor
bound
xlat
inc
test
pop
mov
jge
nop
or
dec
cmp
adc
ss
fs
ret
sub
aas
ja,pn
popf
pop
inc
push
mov
sub
mov
pop
insb
pusha
mov
adc
fldcw
cmp
int3
and
bound
dec
xchg
or
incb
rcrl
mov
jg
sbb
ja
jbe
ret
mov
adc
ds
popf
inc
popa
loopne
pop
jl
enter
stc
inc
icebp
ret
int3
cmp
insl
daa
or
pop
insl
out
ret
push
movb
aad
popa
cmpsl
lahf
sbb
cmp
mov
push
sahf
pop
mov
mov
inc
shlb
jns
pop
jne
ret
xor
sub
jg
loope
js
pushf
or
hlt
inc
clc
pop
sub
arpl
lods
scas
mov
and
mov
xchg
mov
arpl
fwait
mov
lret
add
fcomp
jns
xlat
mov
mov
andb
lock
push
or
fwait
lea
add
push
std
jo
unpcklps
ret
rolb
dec
mov
cli
xor
cmc
jns
aaa
ss
mov
and
pop
push
sub
add
hlt
adc
sti
dec
andb
hlt
dec
mov
jbe
mov
int3
in
mov
xchg
mov
push
mov
out
adc
dec
adc
das
lcall
cli
mov
imul
inc
imul
mov
mov
ljmp
sbbb
movsb
xchg
lret
or
jle
sbb
stos
fidivl
mov
inc
xlat
jbe
clc
stos
pop
lret
leave
loope
stos
es
inc
mov
sub
push
xor
pop
shrb
sarb
dec
push
in
fsubrs
xor
mov
aam
cmpsl
push
pop
push
bound
std
sub
dec
push
push
out
shl
mov
mov
sub
mov
popa
pushf
push
jecxz
sbb
mov
fists
jge
lods
xchg
pop
adc
out
adc
scas
mov
sbb
sysret
cwtl
imul
mov
inc
iret
push
test
pop
dec
xor
inc
test
bound
mov
fbstp
lahf
stos
or
push
xor
cvttps2pi
jbe
push
mov
fsubr
sti
inc
push
popf
sbb
cmp
iret
scas
bound
push
cmp
loop
aam
in
lock
movsl
dec
bound
jge
out
arpl
std
jb
pop
lea
sbb
push
dec
jp
sahf
pusha
push
mov
xchg
mov
in
fsubr
arpl
dec
lods
lret
mov
loopne
into
mov
fidivrl
lret
test
inc
ljmp
push
cmpl
push
add
movsb
lock
repnz
ljmp
lret
je
mov
xchg
pop
cmpsl
fnstenv
out
or
shll
std
mov
test
bound
lahf
xchg
inc
fdivr
rolb
xchg
mov
jge
sbb
out
pop
cwtl
xchg
or
repz
in
mov
pop
inc
add
cmp
mov
mov
and
jo
and
scas
dec
mov
inc
jg
or
mov
dec
inc
inc
push
lock
xor
mov
out
fs
inc
pop
leave
mov
js
ficoms
add
mov
mov
icebp
enter
bound
mov
mov
lods
loopne
in
cmpsb
and
mov
ds
insb
call
loop
cltd
in
and
fwait
imul
mov
imul
dec
mov
mov
sbb
insb
cmp
arpl
aaa
push
adc
push
jmp
xor
push
push
mov
pop
out
loopne
ja
sbb
leave
cmp
jb
jl
sbb
cltd
popf
xchg
push
je
add
popa
lods
pop
loopne
mov
in
pop
cmp
arpl
enter
jg
push
ja
inc
xchg
lea
xchg
lret
and
mov
pop
arpl
cwtl
xchg
gs
ret
lock
arpl
aad
loope
adc
xor
xchg
outsb
movsl
in
cmp
mov
sbb
into
mov
mov
ja
les
sub
loopne
sbb
sbb
rcrl
pop
cmc
sub
mov
ds
cmp
lahf
or
mov
jns
icebp
mov
xchg
fidivrs
in
push
cmp
popf
lret
push
loopne
xchg
xor
movsb
push
push
pop
roll
cltd
mov
out
jmp
jle
mov
or
gs
nop
and
push
or
xchg
popf
mov
pop
pop
jo
fildl
inc
and
hlt
jo
addr16
mov
cltd
ss
pop
in
dec
mov
xchg
cwtl
or
aam
sbb
stc
negl
push
pop
jge
nop
or
pop
fbstp
jbe
cmp
hlt
cmpsl
mov
mov
or
jle
lcall
out
cltd
outsb
lret
push
sbb
dec
push
jns
xchg
push
test
pop
cltd
call
dec
shlb
into
adc
sti
scas
mull
mov
jbe
test
insl
or
stos
xchg
dec
lds
outsl
mov
mov
adcl
std
pavgb
xchg
into
std
inc
popa
dec
add
push
xchg
xchg
fcoms
mov
push
pop
sbb
xchg
iret
push
xchg
rcll
pop
inc
adc
pop
pop
bound
cmpsb
push
push
stc
or
repz
nop
loop
cmp
pop
lret
adc
cmp
mov
pushf
xchg
cmc
pop
sahf
mov
dec
cwtl
loop
mov
repnz
pushl
xchg
aad
xor
cli
or
mov
scas
dec
repnz
lock
pop
aaa
pop
aaa
scas
push
sub
xor
push
fsubl
push
imul
cmp
adc
xchg
andb
fmuls
clc
inc
sub
neg
pop
ds
icebp
subl
mov
enter
add
pop
daa
cmp
xchg
push
in
push
aaa
dec
daa
adc
pop
dec
lods
fs
arpl
inc
push
sub
xor
mov
cmp
jns
push
mov
mov
xchg
mov
andb
xchg
xor
cwtl
and
inc
xchg
movsb
or
sbb
mov
in
or
cvtsd2si
push
fmul
jl
ljmp
pop
popf
cmpsl
push
inc
test
fdivrl
mov
mov
add
cmovbe
cmp
push
push
ljmp
imul
or
push
arpl
cwtl
fcomip
xchg
aaa
into
dec
and
rcll
je
xor
push
adc
loop
pop
xor
mov
inc
lcall
xchg
dec
pop
push
mov
add
xor
cld
xor
sbb
jl
dec
nop
test
jae
sbb
dec
mov
jb
cld
jo
ds
pop
mov
das
xor
xchg
xchg
lds
jle
adc
xor
icebp
mov
mov
aas
lods
and
stc
adc
xchg
cmp
testb
xlat
iret
daa
repnz
dec
repz
mov
or
sbb
movsb
dec
push
mov
gs
icebp
pop
jnp
scas
std
inc
aas
mov
cmp
or
mov
sbb
mov
rorl
add
push
mov
or
dec
jp
inc
xchg
xchg
and
subb
int3
push
fcom
fidivs
xor
mov
ret
xor
jo
pop
add
add
add
pop
ficompl
sahf
sub
insb
mov
inc
or
mov
pop
jbe
mov
push
ds
fs
repz
inc
push
push
xor
push
and
test
sbb
lret
and
mov
cmpsl
cwtl
and
sarl
cmp
insb
adc
rorl
leave
jnp
jo
lret
fcmovne
iret
mov
popa
jo
inc
mov
inc
cmp
mov
mov
adc
bound
jle
loop
insb
push
rorl
mov
jbe
test
stos
fists
outsb
mov
movsb
xor
xchg
inc
addr16
mov
scas
push
dec
jge
inc
mov
sbb
scas
push
jns
xchg
or
pop
mov
imul
jbe
push
add
mov
mov
gs
ja
out
ss
shlb
add
jl
fcomps
std
or
jp
les
push
fisttpll
ljmp
addr16
sti
mov
pusha
or
xchg
sub
stc
ret
aam
test
xchg
and
inc
push
in
mov
fstpt
cmpsl
adc
dec
nop
adc
xchg
push
or
loop
out
xchg
inc
push
adc
jae
mov
xchg
cmpsl
pop
stos
loop
std
or
divl
pusha
mov
jbe
mov
sbb
add
xchg
and
lods
pusha
gs
data16
imul
dec
in
fs
or
dec
xchg
movsb
add
fists
or
xchg
sub
pop
fmull
push
iret
add
repnz
cmp
adc
mov
out
pushf
add
bound
movhps
xor
or
xor
out
insl
xor
fidivrs
loopne
dec
imul
incl
sbb
inc
mov
in
mov
lahf
jo
adc
xlat
insb
rolb
sti
and
test
xlat
lock
mov
out
inc
repnz
ret
and
pop
xor
std
mov
sbb
push
rcr
dec
mov
cmpsl
clc
pop
shrb
inc
gs
rorl
jnp
imul
mov
add
lods
out
adc
ret
or
ja
enter
mov
loopne
test
cmp
movsl
fsubs
aad
shl
dec
push
hlt
push
fcomps
ljmp
ret
repz
shlb
arpl
in
lcall
xorb
lods
mulb
lock
int
mov
dec
cmp
cmp
jl
sbb
mov
sub
jae
xor
push
add
cmpsl
cmc
inc
loope
mov
mov
test
xor
jo
shrb
fildll
inc
push
sti
les
xlat
sbbl
or
push
outsl
lahf
pop
pop
incl
shl
test
add
inc
dec
in
xor
xchg
inc
jp
scas
inc
iret
in
cli
jp
sahf
pop
notb
xorb
outsl
inc
fisubrl
or
lods
clc
mov
push
shll
pop
and
adc
je
ds
ljmp
add
clc
push
dec
dec
mov
sbb
pop
ss
rcrl
jne
xchg
jmp
daa
push
rcrl
mov
loop
addb
sub
pop
movsl
jne
sub
xor
pushf
stos
pop
icebp
js
jbe
pop
and
push
bound
adc
sbb
test
pop
push
dec
mov
push
jae
and
enter
cmc
hlt
mov
lds
xchg
mov
adc
or
push
mov
and
xchg
mov
ljmp
push
xor
repnz
sub
mov
int3
gs
adc
arpl
xchg
xor
les
xchg
mov
jo
add
mov
das
xchg
andl
out
xor
sbb
frstor
loopne
mov
mov
repz
sbbb
push
lret
mov
mov
mov
mov
ss
sbbb
pop
or
sar
fmuls
pop
and
popf
and
push
fwait
mov
stos
inc
pop
jb
bound
loope
and
mov
cwtl
outsb
xchg
xor
push
xchg
pop
cmp
fisubrl
fsubs
or
mov
sti
sbb
xchg
mov
add
enter
fcom
adc
out
xchg
push
mov
xchg
in
movsb
stc
inc
add
loopne
mov
out
xor
or
mov
mov
cwtl
mov
xchg
sahf
or
jmp
addr16
jle
pop
inc
nop
sbb
inc
inc
add
cs
push
cmp
xchg
test
test
jb
pop
pop
cmpsl
dec
xor
inc
mov
imul
adc
push
xor
pop
sbb
dec
xor
jo
in
xlat
xor
sbb
das
mov
jbe
fstl
loopne
xlat
or
pop
mov
ds
mov
rsqrtps
mov
jge
push
add
dec
por
lret
cmp
cmp
inc
fnsave
cld
pop
or
inc
inc
fwait
xchg
leave
rcrb
mov
int
in
iret
mov
leave
fcoml
sbb
popf
sub
mov
xchg
cld
dec
pop
cmp
mov
int
add
repnz
pop
xchg
and
cmc
sbbl
inc
mov
cs
cmp
xlat
sbb
inc
fidivrl
adc
bound
stos
sbb
in
dec
xor
imul
loope
ror
gs
sub
xor
in
adc
mov
inc
aam
jp
in
adc
cli
flds
mov
ret
shll
pop
mov
inc
and
aas
inc
adc
jnp
mov
pop
mov
pushf
lcall
shrl
mov
mov
push
call
call
mov
scas
pop
push
cmpsl
test
mov
jge
push
cli
jecxz
inc
inc
lret
sub
push
sbbb
xchg
mov
repz
test
stos
fwait
gs
mov
push
jo
movsl
dec
xor
add
popa
sahf
jns
xor
mov
outsb
dec
mov
dec
pop
push
mov
aaa
pop
inc
xchg
test
xlat
lods
cmpsl
lret
jecxz
out
stos
dec
xchg
movsb
shrl
cmpsb
or
add
jnp
test
mov
xchg
dec
adc
and
out
dec
scas
push
ja
fstps
nop
pop
push
xchg
pop
scas
ret
enter
stos
push
rorl
cmpsl
push
loope
lahf
cmpl
and
xchg
xlat
xchg
xchg
repnz
fadd
inc
push
lds
std
filds
ljmp
mov
fstps
stos
dec
mov
cmp
mov
dec
jne
xchg
mov
inc
fcomps
loopne
jno
pushl
std
pop
repnz
xor
cmpsb
cmp
inc
xor
push
iret
add
inc
or
add
sbb
mov
insb
xor
cmp
and
clc
fsubr
ret
test
inc
daa
sub
xchg
lret
jb
arpl
push
iret
mov
adc
pop
pop
and
add
or
jle
xor
mov
mov
push
mov
dec
pop
sub
jb
mov
arpl
and
push
xor
cmpb
cmp
stc
out
mov
pop
mov
into
enter
mov
push
inc
push
mov
pop
cmp
sti
movsl
lcall
repz
outsb
xor
mov
xchg
or
mov
xchg
push
or
jbe
inc
iret
pop
sub
sbb
jl
sub
out
push
sub
loope
inc
sbb
scas
sbb
test
push
sbb
jb
pop
arpl
cmpb
adc
jg
mov
lds
fwait
imul
pop
test
and
jno
or
out
jmp
mov
scas
clc
xlat
fiadds
aad
add
mov
inc
add
xchg
stos
jbe
es
sar
inc
icebp
cli
mov
fs
out
sbb
dec
mov
push
sbbb
xchg
cltd
mov
sub
jge
add
sub
mov
into
xlat
hlt
incl
ds
aam
xchg
cs
xorb
lods
and
lret
je
sahf
and
in
cs
dec
jge
into
js
sbb
imul
jae
xchg
sti
jb
jg
test
inc
mov
inc
adc
push
inc
daa
or
push
add
sahf
scas
push
add
dec
and
add
add
mov
mov
inc
xchg
lods
orb
xor
mov
push
lret
insb
scas
push
add
out
mov
loopne
mov
xor
into
add
lcall
repz
sub
sub
fidivs
movb
push
icebp
adc
sahf
jge
xchg
xchg
sti
xlat
repnz
ds
test
add
push
xchg
sub
sub
and
pop
xchg
and
repnz
fnstenv
scas
nop
pop
push
pushl
push
mov
and
mov
pop
sub
and
push
pushw
xchg
inc
mov
fisttps
jl
or
divb
arpl
gs
call
cli
mov
inc
sbbl
fisubrs
mov
int
push
ss
xor
stc
xor
out
leave
mov
mov
lcall
stc
ss
mov
mov
jmp
mov
dec
lods
xchg
mov
ficompl
std
pop
sub
push
jnp
dec
cmc
scas
std
pusha
das
or
or
mov
mov
mov
mov
gs
sub
sti
and
lret
and
mov
loope
js
push
add
inc
sub
leave
jp
jb
and
out
jbe
fdivrs
mov
stc
incl
cmp
sub
ror
ret
sbb
rep
orl
jecxz
xchg
popf
mov
add
sbb
xchg
out
adc
push
cmp
sub
cwtl
sti
leave
mov
sbb
lods
movsl
sbb
mov
popa
out
inc
mov
aam
out
std
fs
mov
int
dec
xchg
enter
cltd
push
fneni(8087
push
idivl
sbb
fstpt
sbb
xor
push
xchg
dec
xchg
jg
aad
xor
mov
cmp
dec
and
or
cmpsl
sub
aas
insl
scas
imul
adc
xor
inc
repz
ljmp
dec
mov
fnstsw
mov
in
test
in
jb
aam
mov
dec
aam
xlat
mov
icebp
out
pop
mov
icebp
mov
mov
jp
pop
jb
fnstenv
xchg
add
cmp
pop
dec
push
call
out
xor
mov
jbe
jle
aam
pusha
sbb
and
fs
jns
jo
dec
pushw
aaa
push
loope
add
push
xor
add
cmp
ds
push
jns
insb
xor
mov
sub
das
xchg
cmpl
mov
inc
outsb
rolb
mov
loop
cmpleps
sub
lahf
or
leave
lods
xor
push
loopne
jge
mov
and
add
dec
in
push
jge
mov
pop
stos
in
cltd
jns
push
xor
testb
jmp
insl
sub
leave
dec
stc
sbb
pop
pop
adc
aas
push
lcall
cltd
sbb
loope
xchg
sub
push
dec
rcll
loop
add
icebp
jbe
jge
jo
movsb
je
sarl
or
stos
mov
dec
adc
call
jmp
xor
adc
xlat
jle
movsl
push
jb
lcall
lock
outsl
inc
pop
xor
in
out
pop
mov
mov
out
movb
adc
dec
and
adc
add
sbb
popa
and
into
adc
jge
loop
stos
mov
push
xor
xorl
adc
imul
cli
shll
fdivl
push
sub
imul
addr16
fldenv
mov
scas
rcll
jge
xor
fs
lock
cltd
push
inc
or
lret
mov
ss
or
xchg
xchg
icebp
mov
or
lcall
es
push
mov
fs
inc
or
loopne
xchg
mov
fdivrs
repnz
dec
sbb
es
aas
sbb
mov
cwtl
ret
lcall
pop
inc
repnz
or
sbb
push
xor
andl
jne
jle
add
jl
pop
pushf
cmp
loopne
outsl
aad
aas
or
xlat
cmpsl
repnz
xor
out
cmc
sbb
cmpsb
inc
jg
fistps
xor
or
aas
test
mov
xchg
fwait
sarl
rcl
les
mov
rcll
aam
out
rcrl
rcrl
sbb
xor
pop
lea
cmc
mov
fsubrp
inc
ss
mov
call
jo
neg
int
push
mov
sbb
mov
outsb
mov
mov
lea
xor
ja
les
jnp
in
xchg
pop
ret
inc
sub
out
ds
xlat
outsb
lret
lret
pop
xchg
and
lock
push
cmpsl
sub
enter
mov
mov
insb
stos
inc
out
shl
outsb
jno
jmp
mov
add
inc
jo
stc
movl
lds
cmp
push
cs
add
cmp
mov
popa
push
sub
sbb
ficoms
jae
movsl
ljmp
out
call
testb
push
xor
jmp
push
test
inc
int3
js
push
dec
fimuls
cmp
out
and
jmp
inc
add
aam
ja
imul
fstps
mov
cmp
sti
mov
popl
call
lahf
stos
mov
or
jno
mov
stc
xchg
mov
xchg
jnp
xor
subl
movsb
mov
jecxz
sub
jo
and
xchg
dec
mov
fmuls
jns
lods
jge
test
jle
stos
js
push
ret
insl
adc
je
mov
xchg
or
fstl
imul
flds
and
inc
lock
aas
add
push
or
mov
lcall
les
mov
sbb
lret
scas
shl
mov
ja
sbb
addr16
mov
ud1
dec
add
insl
scas
nop
jbe
loop
xchg
inc
fsubs
lret
add
shrb
les
add
mul
dec
xchg
push
pop
popf
inc
out
xlat
add
movsb
jae
jne
and
fsubrl
push
push
cmp
in
mov
or
gs
add
xlat
xchg
stos
out
push
ret
cmp
aaa
cs
sbb
xchg
and
xchg
ja
or
leave
popa
scas
loope
int
scas
iret
shr
xor
dec
aad
data16
cmpl
std
cmp
cmp
sub
loopne
ret
pop
insl
lahf
xlat
test
roll
ds
xchg
test
gs
cs
addr16
xchg
adc
cmp
xchg
xchg
jno
jp
xor
lods
xor
stc
jae
lahf
jae
subb
test
addr16
lea
cmpl
cwtl
jb
inc
pop
ds
mov
sub
mov
int
cmp
sub
add
cwtl
test
clc
pop
cmp
xor
dec
stc
outsl
or
insb
or
mov
mov
scas
jle
xchg
pop
out
inc
or
ljmp
dec
pop
inc
data16
cli
mov
je
andb
adc
cmp
jmp
imul
shlb
ret
inc
jo
fsts
lock
and
dec
inc
dec
dec
mov
push
fdivrs
add
test
imul
jae
shrl
push
jb
out
lea
mov
cltd
inc
cmp
jl
jecxz
xchg
shrl
loopne
pusha
movsb
pop
mov
adc
clc
adc
fdivs
push
mov
jb
int3
imul
or
inc
mov
mov
fsts
sub
pop
imul
push
or
imul
pusha
ficoml
jg
xor
sub
arpl
mov
and
add
in
sti
sahf
icebp
clc
dec
adc
js
or
cmp
stc
adc
or
inc
sbb
push
rclb
push
imul
or
shrd
xor
dec
fbld
add
aad
pop
mov
ljmp
push
dec
repz
adc
fildll
sbb
mov
sbb
add
sub
mov
mov
cmp
pop
add
jge
aaa
pop
mov
call
jecxz
lret
stos
push
inc
jnp
lds
pop
pop
cmpl
pusha
loop
test
fists
pop
out
jns
push
js
out
rcrb
ret
xor
cltd
mov
movsl
mov
or
out
sub
and
cmc
movsl
call
add
inc
bound
ret
push
rorl
or
mull
mov
out
cmpl
adc
fdivrl
mov
lret
pushf
sti
addr16
push
test
std
mov
xor
mov
pushf
aaa
gs
loopne
andb
mov
mov
cmp
dec
stos
aad
or
mov
or
std
jo
cld
cmc
mov
push
xchg
pop
ljmp
pop
inc
gs
dec
stos
inc
jne
xor
lods
scas
out
add
sub
add
cs
mov
and
sahf
adc
imul
or
add
es
lds
sbb
mov
jmp
mov
imul
call
ljmp
jle
lods
jno
mov
in
dec
cmpsb
inc
sub
lret
lea
mov
mov
inc
cmpsl
xchg
loopne
inc
mov
repz
inc
xchg
push
push
ja
out
cmp
xchg
in
sub
jge
adc
push
mov
xor
orl
arpl
fwait
scas
adc
adc
sbb
addr16
shl
push
test
pop
dec
adc
jge
inc
into
xchg
dec
sbb
std
das
xchg
cld
xor
outsb
stos
into
not
push
push
jmp
mov
dec
mov
sbb
in
sbb
push
inc
push
out
stos
pop
mov
adc
mov
fwait
shll
pop
daa
lea
cwtl
mov
repnz
push
call
enter
dec
jp
dec
cmpl
data16
xchg
jo
call
in
mov
rcrb
pop
frstor
and
insl
xor
xchg
cmpsb
in
pop
inc
icebp
push
sti
add
mov
scas
ret
dec
in
sub
out
push
mov
push
int3
jnp
daa
fisubrs
cltd
pop
ret
fs
adc
lahf
cmpsl
xor
je
data16
adc
sti
and
mov
in
shl
pop
adc
idiv
pop
in
andb
mov
xchg
and
cmp
pop
shlb
addr16
xchg
push
lahf
aas
push
lcall
scas
xchg
pop
jge
sub
add
insl
stos
hlt
mov
mov
lcall
pop
sub
es
divl
dec
push
inc
xor
inc
xor
cli
dec
popa
das
push
scas
or
jno
jmp
mov
cld
das
push
int
popf
sub
pop
imul
sti
jb
xor
cld
jmp
sti
xchg
daa
inc
mov
dec
call
loope
mov
sbb
mov
jl
pop
divb
aad
dec
jge
pop
les
cmp
inc
cmpb
inc
adc
push
popf
data16
mov
sub
lods
pop
in
and
lret
jno
jnp
or
mov
xlat
out
jmp
fs
gs
pop
jbe
pushw
pop
daa
xor
pusha
leave
inc
decb
sbb
fstpt
js
aas
jb
adc
mov
push
roll
rcrb
xchg
mov
lahf
daa
test
push
stos
jl
inc
out
bound
int3
enter
and
test
cmc
or
in
mov
mov
jae
iret
ljmp
test
or
mov
push
subb
dec
cmpsl
add
xchg
test
cwtl
in
cmp
nop
and
sub
or
lea
imul
adc
sbb
scas
cmp
daa
pop
stos
aam
fstps
stos
ja
andb
enter
lods
fnsave
ja
jno
pop
mov
cmp
adc
mov
cld
dec
and
shl
jnp
jecxz
out
lods
push
jp
mov
jae
mov
xchg
mov
loope
pop
mov
fsts
shlb
mov
lea
mov
cmp
cld
xchg
test
dec
add
dec
sub
add
mov
add
incb
sub
xor
cmp
ds
pop
jns
mov
lea
cli
scas
inc
pop
fwait
lcall
pop
xor
add
ja
nop
mov
cmp
movsb
inc
insl
xor
add
pop
out
push
in
and
insb
decl
scas
mov
pop
push
pop
scas
imull
xor
xor
xchg
sahf
cmp
test
or
mov
daa
cld
dec
scas
popf
leave
sbb
xor
cwtl
xchg
bound
or
stos
adc
pusha
mov
mov
pop
lcall
stc
mov
mov
pop
push
jnp
cmpsb
cmc
xchg
cmp
stos
fdivl
bound
data16
xor
imul
xlat
movsb
sahf
cmpsl
jns
or
call
fldcw
enter
jb
leave
dec
push
pop
gs
notl
out
call
iret
lret
call
dec
mov
divl
dec
push
adc
mov
xor
push
loopne
jno
daa
test
test
inc
lods
mov
mov
push
push
inc
mov
push
xor
add
push
mov
jb
pop
les
jecxz
or
out
jbe
sub
popf
insl
sbb
pop
xor
cltd
loope
or
daa
cmpb
or
icebp
adc
sub
test
and
testb
mov
sahf
adc
fstl
push
mov
lcall
leave
or
adc
inc
bound
sbb
int3
xchg
les
xor
insl
hlt
add
test
and
or
movb
sbb
pop
add
xchg
and
xchg
jg
es
cmc
scas
pop
lods
lret
outsl
js
leave
pop
lret
jbe
push
cmp
rcrb
mov
dec
xchg
inc
in
xchg
pop
test
rol
call
xchg
and
cmpb
sbb
frstor
xor
cmp
dec
sarl
inc
xor
loope
adc
movsl
cmpsl
jp
outsb
and
and
xchg
fsts
repnz
cmp
sbb
mov
dec
stos
outsb
xor
nop
jmp
mov
jno
and
push
jle
pusha
dec
test
add
pop
mov
push
or
add
ss
pop
testl
mov
cmp
push
and
leave
and
or
and
std
int
pop
fcompl
add
insl
cld
cld
je
sbb
ss
dec
mov
add
scas
in
out
es
push
add
push
scas
jp
adc
mov
mov
sub
mov
ret
xchg
xchg
sub
push
push
and
in
dec
mov
sahf
mov
int3
push
mov
fmuls
icebp
add
mov
lods
xor
pop
push
pop
sbb
icebp
add
and
imul
into
push
xchg
pop
in
lret
data16
push
mov
call
shrl
scas
rol
cmp
adc
ja
mov
mov
fidivrl
cli
scas
or
cmp
adc
fldenv
mov
mov
aad
scas
dec
and
pushl
testb
in
mov
outsb
loope
or
xlat
fnstsw
mov
mov
or
cmp
jae
cld
outsl
out
fdivrl
mov
mov
or
jle
fnstcw
repnz
lods
sbb
gs
scas
push
or
shrb
mov
push
pop
sub
int3
sti
and
sub
test
pop
mov
add
rorb
pop
xchg
push
outsl
out
push
aas
nop
jecxz
cmp
repz
movsl
test
cmpsl
popf
mov
mov
shlb
lea
add
or
mov
rclb
and
enter
xchg
lds
ja
dec
scas
inc
rorb
mov
test
and
outsl
and
mov
sub
insb
cmpsl
daa
xlat
add
dec
idivl
pop
sub
pushf
out
iret
jo
loop
cmp
cmc
lock
inc
mov
push
test
sub
push
jecxz
cmp
xor
xor
mov
pop
dec
push
imul
pusha
imul
push
lcall
mov
ficoms
testl
cwtl
int3
mov
cmp
cmpsl
cmp
dec
repnz
pushf
lock
sub
cs
or
test
dec
sbb
rclb
aaa
lcall
jl
push
cmp
ret
push
xchg
jl
pop
and
jne
out
mov
das
jbe
xor
lock
pop
repz
nop
mov
mov
mov
cmpsb
in
pop
hlt
or
in
inc
add
into
pop
shll
ror
pop
adc
lcall
inc
inc
dec
int3
or
inc
fwait
and
inc
movsl
inc
add
aad
dec
or
fnstenv
sub
push
mov
out
imul
fadds
out
dec
cld
test
in
repnz
cmpl
sub
xlat
mov
xor
test
fsub
mov
xchg
add
or
insl
aad
test
sbb
outsb
ja
push
push
aam
add
mov
sbb
inc
and
mov
divb
imul
jecxz
pop
scas
xchg
push
pop
xor
sbb
mov
or
aas
lret
scas
jp
or
fisubrl
pop
ss
enter
sub
jns
sbb
lock
icebp
push
mov
popa
stos
add
movb
loope
add
and
movsb
hlt
call
adc
dec
ud1
dec
lock
lahf
js
push
sub
cmp
xchg
inc
inc
pop
dec
dec
and
loopne
cmpl
nop
enter
in
mov
push
stos
adc
ss
sub
js
negl
add
loop
mov
dec
fcomp
fwait
and
insl
add
xchg
jg
mov
clc
adcb
lcall
lods
clc
call
mov
jle
movsb
pop
inc
sub
loope
or
lods
lret
ljmp
or
and
xor
aam
loop
stos
jp
dec
jo
sbb
and
flds
repz
sub
in
push
into
in
iret
mov
popa
add
iret
mov
jl
sbb
push
adc
dec
outsl
sbb
mov
cmp
and
pop
cltd
or
xchg
movsb
cmp
rorl
push
fcoml
sub
jno
jp
int3
mov
iret
xor
int
push
add
push
pushf
movsl
inc
add
mov
pop
mov
mov
xor
movsb
fcompl
adc
mul
sahf
xlat
add
mov
int3
or
insl
adc
fs
icebp
rcl
xlat
dec
mov
and
mov
add
jle
aad
or
faddl
mov
jp
rcrb
mov
jmp
mov
cmp
sub
sub
popf
ja
adc
fistps
lds
or
mov
clc
pop
leave
xor
add
or
daa
fiaddl
or
xor
out
push
cmp
mov
or
xor
iret
cmpsl
decl
and
inc
jg
ret
mov
sahf
jnp
arpl
or
inc
sbb
jnp
repnz
ret
push
add
and
ljmp
sbb
leave
in
push
enter
xor
bnd
mov
test
in
jecxz
xor
insl
lods
ljmp
jae
test
or
inc
lahf
cmp
jg
mov
or
jno
jecxz
shll
js
sbb
adc
les
ds
cld
repz
ss
jmp
jns
rorl
fstl
pop
fiadds
arpl
callw
mov
cld
aam
sbb
push
mov
jbe
adc
dec
cltd
sbb
add
cld
adc
push
ds
push
dec
mov
das
cltd
je
mov
mov
push
cwtl
fwait
imul
cmp
rorb
pop
aam
out
mov
cmp
adc
pop
adc
aad
push
xor
es
stc
roll
sbb
js
out
pop
push
pop
loope
and
setb
mov
mov
or
dec
out
xchg
fsubr
sub
or
test
push
jbe
fxch
mov
jns
jg
inc
jecxz
and
lcall
ret
inc
cmp
or
sbb
lea
mov
idivb
ror
sub
xchg
adc
or
movsl
push
mov
into
dec
dec
sbb
sbb
add
or
sub
repnz
pop
sahf
xchg
adc
outsl
test
inc
jo
negl
push
imul
test
iret
mov
push
sbb
jp
fs
fdivs
mov
sub
push
pop
cmp
test
xor
arpl
xchg
xor
repz
mov
aaa
jno
sahf
lret
inc
test
out
pop
inc
test
cmp
xor
push
movsl
roll
rorb
xchg
xchg
dec
push
bnd
test
cmp
addb
push
rorl
loope
adc
mov
push
mov
pushl
sbb
dec
xchg
scas
pop
int
cs
xor
loop
adc
scas
ja
lret
popf
inc
adc
cld
ret
les
xchg
sub
aam
jge
mov
or
jle
and
test
test
lods
mov
test
add
mov
std
jae
aad
repz
and
rclb
pusha
jns
imull
sbb
or
shrl
shll
movsb
sub
jbe
ljmp
sub
sbb
pop
ss
outsl
or
arpl
pop
outsb
lret
leave
pushf
mov
xchg
jae
xchg
adc
dec
or
pop
out
xchg
shlb
repz
xchg
aad
sbb
scas
jbe
out
jle
or
dec
add
das
xor
into
shlb
ds
in
out
popa
mov
into
adc
mov
sti
addb
fcomip
ja,pt
lods
jbe
xorl
aaa
imul
je
jg
pop
push
mov
dec
loopne
jecxz
pop
scas
add
adc
lds
dec
loope
xor
clc
dec
add
add
inc
je
test
and
movsl
sub
jle
pop
xchg
test
in
adc
stos
jmp
bound
cmp
pop
loopne
push
push
cmp
sbb
popf
jbe
scas
mov
mov
jmp
push
mov
mov
add
fs
or
cmpsb
mov
nop
fnsave
out
jecxz
xor
mov
stc
or
addr16
xchg
jge
sbb
and
pop
mov
filds
call
loopne
cwtl
cmp
addb
jg
add
ficomps
jnp
and
das
dec
mov
out
dec
lods
faddl
jge
sahf
popf
shr
cs
push
repz
pop
dec
dec
dec
jmp
xchg
sti
sahf
sbb
sub
movsl
rcrb
mov
outsb
fldt
pop
or
sub
call
movsl
push
xchg
shlb
push
mov
dec
mov
fdivrs
mov
lods
insb
test
movsl
mov
negb
call
adc
dec
xlat
and
jns
ret
dec
adc
lea
mov
and
cmp
lock
inc
pushl
out
addb
mov
add
repz
mov
std
ja
jge
in
inc
push
inc
xor
xchg
mov
inc
pop
test
bound
push
inc
jb
pop
jg
rclb
mov
push
jl
pop
cltd
xchg
xor
hlt
jno
mov
cmp
or
pop
pop
xchg
lods
fldl
pop
add
pusha
dec
xchg
inc
movsb
push
sti
pop
mov
dec
mov
mov
mov
and
lock
je
or
outsb
mov
daa
push
push
sbb
andl
mov
nop
bound
insl
xlat
stos
and
pop
or
xor
stos
cmpsb
push
add
pushw
enter
in
lret
jmp
or
cli
fnstsw
paddw
adc
faddp
fwait
sar
js
ret
shlb
lds
pusha
sub
lods
icebp
lea
mov
iret
sub
mov
push
sub
mov
xchg
rcrl
hlt
adc
xor
divl
movsb
dec
adc
lahf
mov
or
jmp
fs
inc
xlat
fcompl
pop
fdivrs
mov
cmp
cli
scas
dec
mov
or
xor
lea
xchg
dec
sub
mov
sub
adc
js
out
lahf
ja
lret
out
pop
addr16
jne
or
inc
dec
icebp
push
cltd
or
sbb
std
jb
out
popa
pop
sbb
add
sub
popa
mov
test
add
ret
xor
sub
mov
stc
xor
pop
pushf
push
scas
pushf
cmp
call
ss
setb
sbb
data16
sub
mov
add
into
mov
out
dec
ffreep
out
lcall
xchg
stc
je
add
xchg
sahf
adc
or
out
jnp
je
stos
xor
mov
jl
xchg
xchg
mov
xchg
loop
loop
mov
test
inc
dec
sbb
jmp
cltd
shl
repnz
imul
std
lods
rcr
pop
jmp
jbe
ljmp
xorl
loop
mov
xchg
xor
lahf
cs
shrb
jbe
daa
mov
scas
xchg
xor
dec
sub
aas
stos
divl
jnp
imul
pop
mov
imul
aad
sub
or
sbb
or
or
xlat
jno
dec
in
dec
jmp
cmp
adc
aaa
outsl
pushf
mov
das
or
xchg
mov
sbbl
and
mov
loopne
and
mov
mov
inc
inc
movb
dec
lods
int
lahf
cli
or
out
popa
cmpsb
mov
fdivr
xchg
in
sti
push
and
ret
shlb
in
sbb
pusha
ret
add
pusha
popf
xor
xor
xor
inc
outsb
rcrl
add
pop
outsb
push
adc
jb
cmp
dec
bound
sub
inc
outsl
fimull
and
lahf
out
in
push
adc
adc
sbb
cmpsb
xor
sarl
add
and
inc
test
lahf
sub
sbb
and
xor
cmp
mov
inc
mov
ljmp
cmp
ds
pusha
push
hlt
sub
rcll
aas
jae
and
mov
ret
mov
ss
cwtl
cmp
jae
js
test
jnp
mov
xchg
sbb
mov
cmp
imul
jge
fists
rolb
mov
jmp
or
mov
mov
das
fidivs
aam
in
adc
push
addr16
dec
imul
bound
sbb
mov
dec
sarb
call
popf
mov
or
or
out
jns
repz
pop
ret
pop
push
stos
cmp
imul
aam
xor
repnz
nop
jp
faddl
hlt
cs
push
jl
mull
nop
add
mov
xor
mov
scas
jae
std
lcall
lret
imul
int
xchg
dec
xchg
mov
xor
mov
mov
jno
add
test
or
sbb
dec
xchg
sub
fsts
daa
aaa
lea
xchg
cmp
aas
leave
fnstcw
pushf
aas
mov
fadds
ret
xchg
mov
movsb
sub
in
in
inc
xor
pop
icebp
andl
add
cmpsb
pushf
andl
xchg
cs
lcall
mov
mov
cli
enter
popa
arpl
push
aam
out
fwait
sub
push
in
call
pop
dec
sbb
shlb
sbb
fists
pop
imulb
mov
xchg
lahf
shr
stos
std
leave
pop
scas
sti
data16
outsl
sbb
sbb
xor
jbe
mov
icebp
mov
int3
fildll
decb
push
dec
icebp
jno
add
xchg
out
ja
and
mov
or
xchg
lods
adc
mov
lcall
insl
arpl
les
sub
lods
stos
cld
pop
jle
test
cwtl
fildl
sub
jmp
imul
jo
cli
or
cs
decb
pushf
adc
mov
addr16
clc
mov
mov
pop
add
int
mov
lods
dec
xchg
mov
dec
scas
and
dec
xor
inc
scas
mov
dec
shl
aaa
jb
addr16
js
and
cmpsl
imul
icebp
sahf
sti
mov
fistpll
in
pop
shrb
mov
xorl
es
inc
pop
fidivl
lods
inc
mov
daa
push
cmpsl
sub
arpl
add
push
dec
out
scas
in
sbb
enter
mov
inc
andl
daa
mov
mov
fidivrs
mov
sub
kmovw
cli
popa
fwait
clc
repnz
jmp
jne
test
js
movsb
call
add
inc
frstor
into
mov
xchg
ljmp
inc
mov
insb
cld
cmp
pusha
mov
jmp
ret
adc
lods
mov
xlat
gs
wbinvd
mov
into
in
jg
iret
and
cmc
outsl
popf
insb
ret
mov
inc
add
fstl
loope
mov
loop
fstpt
imul
cmp
jnp
inc
xchg
or
stos
jg
mov
lds
fcoms
out
imul
test
shl
inc
sarb
test
xor
and
jno
nop
inc
incl
pop
pop
aad
sti
enter
cmp
adc
roll
push
dec
or
mov
pop
ds
cli
jbe
mov
int
or
out
and
xchg
sub
push
jbe
rcll
push
sub
aas
pop
or
sarl
dec
outsl
in
call
xchg
pop
shrb
cmp
xchg
cmpb
pop
adc
dec
ficoml
jae
sub
jae
push
popf
adc
add
lea
clc
mov
sarl
mov
mull
outsl
add
pop
mov
cs
xor
enter
mov
rclb
xor
sub
popf
aad
rcr
xchg
stc
rorb
cwtl
mov
outsl
call
subl
or
sub
add
lret
jge
enter
inc
xor
lahf
mov
mov
push
fdivr
int
lcall
dec
addb
insl
inc
mov
ret
cmpsl
and
lods
fwait
sbb
test
loopne
add
pop
outsl
fcomp
xchg
int3
jp
cmpsl
sub
sbb
rcll
jmp
repz
scas
mov
lret
arpl
xor
insb
push
das
cld
push
loop
sarl
imul
in
lcall
push
je
out
pop
in
outsl
cmpsl
cmp
inc
cmpsl
popa
jbe
mov
sar
movsb
jl
push
xor
mov
dec
js
mov
lods
add
leave
rcl
aas
xor
pusha
inc
subb
ljmp
je
das
out
fdivrl
scas
mov
jns
jns
mov
sbb
ror
jg
out
or
not
fmull
pop
test
lcall
ja
sub
iret
mov
mov
push
inc
test
sahf
push
pop
xchg
repz
jo
xor
iret
sbb
cld
push
lods
mov
pushf
fwait
mov
outsb
lea
inc
movsl
out
push
out
pop
sbb
orl
out
cmp
jle
adc
dec
adc
jg
jb
dec
sub
imul
cmp
sub
clc
and
pop
mulb
movsl
hlt
dec
push
jg
inc
push
clc
sbb
jb
out
imul
dec
out
push
data16
and
loopne
jg
shll
push
xor
xchg
leave
sbb
aam
idivb
dec
xchg
push
push
pop
ret
ljmp
cmp
aad
enter
movsb
out
lock
xchg
push
dec
fs
int3
add
aam
js
sub
xlat
out
test
cmp
movsl
inc
push
and
insl
mov
arpl
xchg
sti
nop
lcall
adc
insb
test
test
jnp
daa
insl
xor
dec
xchg
ds
fcomp
stos
sbb
mov
mov
cmp
mov
int
mov
sbb
pushf
adc
and
pushf
push
pop
add
rcr
out
mov
fidivrs
in
push
mov
repz
loope
and
sub
ja
jp
push
aad
repnz
xchg
aam
fucomp
nop
repz
repz
inc
dec
pop
rclb
lcall
xor
ds
mov
inc
sarb
outsb
and
in
hlt
cmc
out
cwtl
pop
aam
fdivl
or
pop
jne
or
dec
add
cli
iret
cmp
sbb
xor
out
into
les
lret
lahf
mov
dec
jl
inc
and
adc
inc
stos
push
push
in
sbb
mov
sub
sti
or
pop
jno
mov
cmp
pop
and
mov
dec
aaa
outsb
ret
jae
imull
xor
add
pop
std
xchg
sub
adc
push
pushf
cmp
lods
mov
std
rcl
shlb
out
fildl
mov
popa
inc
sbb
test
push
jbe
enter
and
cmc
aaa
int
dec
and
dec
xchg
inc
test
sarb
lea
jecxz
adc
sbb
movsl
lods
add
les
fisttpll
test
dec
push
addl
jnp
popa
mov
push
or
mov
aad
mov
cmp
mov
in
sub
cli
movsl
les
sbb
cld
mov
into
pop
cmc
fisubrl
dec
mov
push
clc
jno
pop
jne
sbb
xchg
and
add
mov
nop
out
and
out
in
icebp
in
sbb
fidivrs
xchg
test
pop
xchg
cmp
mov
push
add
lahf
orl
add
cmp
xchg
xchg
lea
gs
xchg
xchg
cmc
outsb
fdiv
inc
out
and
insb
repnz
and
and
inc
ja
xchg
in
mov
jne
in
inc
loope
mov
xchg
dec
mov
xor
cmpsb
push
inc
dec
aam
clc
and
mov
jno
mov
faddl
fadds
je
xchg
sahf
insl
add
xchg
jg
adc
fstpl
test
cmc
pop
and
mov
aas
inc
sbb
out
sub
mov
fiaddl
imul
addr16
pop
mov
cli
mov
js
sahf
add
cmp
jmp
aam
mov
pop
dec
shrl
jle
jmp
xchg
ljmp
in
push
lods
xor
pop
ja
lods
inc
mov
xor
mov
lcall
cmpsl
cmp
pushl
or
xchg
lea
enter
cltd
hlt
sbb
jno
sbb
inc
mov
les
dec
inc
divb
xchg
inc
add
pop
testl
xchg
dec
iret
nop
dec
xlat
pusha
shlb
mov
movsb
aam
push
lahf
mov
pop
scas
cmp
daa
mov
cmp
jo
idivl
sub
mov
jg
xchg
ja
xchg
pop
lds
test
dec
ds
bound
loope
test
xor
scas
and
cmc
add
mov
sub
je
fld
enter
bound
push
jb
mov
push
fcmove
sahf
mov
xchg
xchg
sarl
cmp
mov
cltd
dec
jg
in
out
pop
movsb
and
push
push
ja
push
js
pop
pop
cwtl
lods
cmp
sbb
cmp
xchg
cmp
sti
push
loope
push
pop
push
out
pop
or
sarl
jno
sbb
idiv
addr16
dec
or
lods
loop
or
sub
fildl
sahf
sub
in
and
or
adc
add
jno
inc
or
and
mov
ljmp
xor
mov
shlb
cmp
je
mov
mov
sub
shlb
add
xor
gs
or
mov
sbb
and
jbe
mov
inc
sub
lods
movsl
repnz
daa
mov
jae
pop
pop
ret
jnp
mov
out
cli
xor
xchg
push
aad
in
push
cmp
adc
imul
jmp
xor
inc
sti
in
mov
cld
adc
push
or
loop
push
cmp
or
ljmp
or
add
jns
push
mov
cmp
xor
cld
jae
lcall
add
setbe
pusha
adc
xchg
inc
mov
pop
loop
int3
xor
jne
sbb
mov
mov
push
dec
data16
pop
lcall
in
sbb
loope
push
cmpsb
cwtl
jns
cmp
sub
xchg
in
or
call
sub
pop
sub
mov
insb
lret
leave
adc
pop
je
pop
in
lret
sub
mov
pop
push
rolb
lock
test
add
fs
rcll
dec
ja
aaa
push
ds
sub
and
stos
jnp
iret
mov
insl
lds
outsl
out
push
pop
outsl
push
into
aas
gs
sbb
inc
outsl
jb
cmp
mov
adc
fisubrl
call
jmp
lcall
es
fnstenv
bswap
bound
mov
pop
loopne
ret
fisubrs
gs
add
mov
jmp
lahf
fimuls
aaa
cmp
or
mov
test
mov
xchg
frstor
push
mov
push
bound
xchg
outsl
daa
push
lahf
sub
or
mov
xchg
pop
add
sub
cltd
jg
push
jmp
stos
imul
mov
aad
insb
mov
rorl
add
ljmp
repnz
rorb
popf
and
xchg
mov
test
lea
cmc
lcall
stc
and
lcall
or
ja
pop
mov
adc
ficomps
lock
mov
movsb
out
mov
rcpps
adc
add
inc
xor
jbe
and
adcl
mov
xlat
dec
int3
xchg
inc
cmp
aad
repz
add
int
fdivrs
mov
and
and
push
pop
dec
pop
out
ss
jmp
mov
inc
mov
imul
push
enter
cmp
xchg
loope
mov
push
shll
mov
jp
dec
je
jb
dec
and
inc
into
aad
repz
lret
mov
and
enter
xchg
jne
pop
sub
xchg
sbb
in
cmp
jecxz
outsl
fdivs
dec
loop
jge
push
outsl
mov
data16
add
int
push
cmpsl
sbb
mov
into
cwtl
nop
xchg
in
add
mov
mov
cmp
jns
push
sbb
notb
sbb
sub
cmp
xor
mov
adc
adc
jge,pt
iret
sahf
mov
scas
aaa
negb
insb
call
jne
jle
neg
mov
xchg
shll
fidivrl
das
repnz
dec
xor
push
sbb
sahf
cmpsb
xchg
callw
mov
push
mov
sub
rorb
pop
pop
jae
icebp
sbb
add
push
sti
mulb
push
xor
sbb
jp
inc
inc
push
popl
sub
sub
and
daa
jno
jb
mov
divb
sbb
dec
push
rorb
out
mov
test
shrl
bound
insb
pop
out
and
cmpsb
ret
rorb
jne
dec
rcrb
xor
mov
push
xchg
mov
sub
pop
adc
in
jle
pop
adc
or
mov
pop
xchg
inc
pop
pop
xchg
mov
jl
imul
pushf
inc
test
jge
mov
mov
pop
das
aaa
mov
push
adc
lahf
inc
int3
lret
push
aas
jmp
pop
and
adc
imul
cmpsl
jnp
pop
jge
ja
xchg
lahf
push
add
stos
mov
inc
jl
out
mov
mov
pop
xchg
push
mov
inc
cmpsl
lcall
ret
xchg
outsb
add
inc
xor
in
cmp
lods
dec
rorl
and
dec
xchg
jl
push
pop
sub
divl
lods
mov
mov
jmp
pop
mov
add
adc
imulb
sub
pop
pop
sub
mov
jg
aad
shlb
sbb
ss
jp
fsubrl
xchg
inc
lea
fwait
pop
or
cmp
xlat
ds
rorl
add
sub
dec
inc
push
mov
popa
ret
push
mov
inc
jo
push
shll
in
mov
adc
sbb
sbb
dec
xlat
xchg
mov
sub
pop
stos
out
cmpsl
in
jno
test
xchg
in
mov
aaa
xchg
arpl
and
hlt
adc
stos
in
lret
push
mov
dec
cmc
cmpb
data16
lock
cmp
inc
pop
xor
stos
inc
int
test
or
cmc
inc
test
testl
xor
or
scas
sbb
addl
addl
iret
cld
sbb
fwait
sub
or
sbb
mov
push
xor
cmp
ja
mov
pusha
stos
inc
push
sbb
xchg
pushf
es
xor
or
pop
jb
lret
push
push
test
test
pop
pop
inc
ror
je
fs
inc
add
faddl
mov
inc
and
out
shlb
dec
inc
add
in
add
push
fsubs
mov
lcall
xor
loope
stc
pop
cmovae
mov
in
ret
jmp
dec
cld
inc
xchg
inc
out
loop
loopne
add
mov
mov
fstps
pop
or
rol
or
mov
cmp
int
sbb
repnz
std
int3
insl
push
mov
negl
loope
mov
std
repz
in
adc
lcall
sub
and
xchg
mov
xor
push
scas
jo
cmpsb
inc
and
push
mov
pop
add
arpl
cmp
lret
mov
sbb
stos
and
sbb
mov
push
add
mov
inc
scas
dec
ret
sub
fsubp
adc
mov
roll
orl
lods
ret
xor
sbb
mov
sub
xchg
loopne
es
pusha
xchg
fwait
mov
pop
jno
xor
cmpsl
loope
out
sub
loopne
lock
mov
sahf
cmc
mov
mov
push
xchg
mov
cmpsb
imul
arpl
xchg
fdivl
pop
dec
sub
and
mov
adc
outsl
outsb
int3
mov
int
ds
enter
insl
or
dec
call
mov
test
enter
cmp
sub
shll
jg
jo
sbbl
inc
jne
mov
jbe
lods
xor
mov
mov
cmpsb
ljmp
ja
pushl
sub
jp
xor
movsl
mov
dec
and
pusha
inc
and
lret
mov
stos
or
hlt
and
xchg
in
sub
int
enter
cmp
std
leave
and
pop
lods
movsl
and
sub
mov
icebp
xchg
fisubrs
ss
fmul
arpl
xchg
pop
lea
scas
push
idivb
clc
in
mov
xchg
mov
or
cmp
sahf
pop
jnp
sub
mov
pop
mov
loop
inc
mov
int
enter
pop
dec
add
push
and
and
push
mov
test
out
mov
pusha
dec
xor
imul
pop
jmp
and
dec
sbb
pop
mov
js
outsb
pop
pop
pop
and
ds
sub
push
add
in
jno
out
xchg
lcall
xor
call
sub
cmp
jae
fiaddl
ja
xor
test
mov
lahf
mov
sbb
cmp
jnp
insl
mov
add
dec
xor
adc
notl
add
sarl
imul
inc
popf
incb
pop
outsb
scas
sub
dec
ss
mov
mov
clc
xchg
arpl
imul
mov
emms
out
stc
inc
stos
jecxz
aam
and
inc
cmp
jno
repnz
and
fsubs
pop
test
mov
cmpsb
pop
cmp
fistps
adc
test
inc
sbbl
popf
push
mov
xchg
hlt
cmp
andl
lods
sub
out
mov
xchg
and
mov
inc
jg
push
icebp
cs
mov
mov
out
imul
iret
into
mov
sub
leave
inc
jg
cmp
xor
cmpl
ret
mov
xchg
mov
daa
inc
lds
push
adc
loop
jge
xor
pop
pushf
mov
jno
push
or
in
sub
cs
test
insl
fnsave
sarb
bound
push
fisttpl
mov
sbb
or
aam
aam
movsb
in
ljmp
loop
out
push
sub
inc
stc
pop
pcmpeqd
pop
dec
mov
sbb
xor
clc
dec
test
pop
mov
dec
xchg
scas
sbb
cmp
jae
mov
mov
rorb
negb
xchg
dec
and
mov
mov
push
xor
mov
jns
das
pushf
or
adc
outsl
imul
sti
xor
iret
ljmp
std
das
addl
mov
roll
sub
stos
mov
adc
sub
xor
mov
adc
inc
cltd
fstpl
shrb
pop
push
dec
xor
inc
and
shll
push
sub
mov
add
into
scas
in
shrl
inc
cli
mov
xor
lea
test
jb
jmp
gs
jecxz
dec
movsb
mov
scas
outsl
aas
pushl
push
mov
cmp
jo
in
fistpl
inc
mov
mov
fs
aaa
icebp
call
fcomp
sub
mov
push
cmpsl
out
pop
inc
sub
inc
imul
mov
xchg
int3
pop
mov
aad
ret
gs
stc
out
rcll
lds
stos
cmp
out
xchg
aaa
fstl
mul
stos
testl
cmc
out
inc
or
cmp
int3
inc
nop
jge
inc
xchg
inc
jp
rcll
inc
insb
imull
dec
cli
imul
fisubs
aad
imul
cli
ds
lds
pop
ficomps
data16
arpl
ret
in
rolb
adc
cmp
in
ljmp
sbb
daa
push
xchg
in
mov
add
sub
mov
stos
in
sub
mov
es
mov
and
rcll
mov
scas
mov
jb
pop
mov
inc
mov
xchg
adcl
in
push
cmc
call
bsr
adc
xchg
jbe
cmp
mov
mov
jae
ret
outsl
popf
and
jno
inc
scas
push
bound
sbb
movsb
mov
ret
cli
sub
xchg
jp
arpl
push
loope
push
subb
xchg
repnz
rorb
ss
popf
or
mov
or
jle
ds
pop
test
mov
or
lcall
jno
das
mov
sahf
xchg
shll
and
je
sub
mov
pop
ljmp
js
xor
imul
das
push
lods
stos
adc
adc
jbe
cmp
cmp
rcrb
jecxz
dec
repz
add
xor
pop
in
cmp
pop
int3
div
ss
and
fsubrl
inc
leave
ja
jl
xlat
push
fildll
mov
dec
fldt
out
data16
xor
cmc
jbe
xchg
leave
mov
int3
sbbb
ja
mov
and
das
dec
lcall
imul
cmp
imul
sub
dec
jg
push
imul
xchg
call
sbb
mov
fstps
ljmp
mov
mov
jno
mov
nop
adc
bound
jbe
test
leave
sti
sub
mov
test
nop
add
and
xor
pop
mov
jne
pop
add
sub
shrl
fwait
mov
or
les
fbstp
fnstenv
jp
xchg
mov
rorb
test
jno
jo
xor
lods
pop
cli
mov
push
call
xchg
fdivl
arpl
das
mov
add
lods
xchg
mov
cltd
pop
sbb
stos
cmc
mov
push
lods
ret
xchg
cmc
cmpsl
and
sub
popf
cmc
and
or
mov
rolb
scas
cmp
mov
pushf
scas
sbb
jbe
cmc
sahf
cli
and
aad
add
cld
cmpb
neg
js
pop
fadds
cmp
shr
mov
addr16
pop
icebp
int3
mov
pop
dec
stos
call
sub
sbb
aas
and
adc
shll
or
hlt
jne
cmpsb
inc
xlat
jb
inc
aad
mov
push
pop
dec
jmp
call
xchg
movsb
push
stos
repnz
sub
inc
aas
je
icebp
or
mov
loop
aaa
stc
in
xchg
push
mov
dec
icebp
inc
pop
and
mov
das
lret
add
lret
cmp
pop
add
mov
add
jne
xchg
imul
jecxz
jae
icebp
ror
bsf
xchg
pop
push
clc
test
sub
dec
xchg
ret
jbe
xchg
test
pop
xchg
insb
leave
stc
fdivl
mov
imul
or
fstpl
inc
sub
loopne
imul
repnz
pop
hlt
mov
push
xor
adc
add
lret
push
cmp
jne
and
jmp
pusha
add
outsb
popa
aam
mov
mov
subb
push
pop
in
sbb
mov
sbb
add
call
and
inc
add
mov
cs
cmp
or
adc
push
out
push
sub
lret
cmc
pop
repnz
out
xor
aad
inc
push
add
iret
inc
scas
paddusb
jmp
inc
cmp
xchg
adc
pop
ficoms
push
mov
mov
clc
inc
cltd
fcomip
cmc
fmulp
inc
xlat
mov
test
dec
data16
mov
mov
dec
cld
mov
in
out
fs
repz
xchg
mov
btr
push
out
rcl
xlat
out
inc
inc
mov
sub
and
or
xor
in
fldl2e
test
lcall
out
push
or
xorb
or
adc
mov
xchg
js
pop
jae
movsl
mov
pop
lock
pop
xchg
sub
mov
movsb
inc
jnp
jae
fiaddl
push
ficomps
out
pop
sbb
sbb
mov
jl
shlb
xchg
imul
fadd
repz
jo
xor
add
aad
adc
mov
push
jg
push
push
inc
mov
mov
jg
loop
xchg
jns
scas
add
cmpsl
cmp
mov
repnz
popa
dec
test
add
inc
mov
rolb
adc
xor
xchg
enter
ss
mov
lds
cmpsb
mov
jecxz
xor
out
ljmp
sub
lea
cli
xchg
cmp
xor
sub
cmc
rorl
cmp
int3
add
inc
pop
mov
imul
incl
movsb
pop
test
imul
cmpsl
xchg
xor
mov
rcl
sub
into
push
add
je
mov
fistpl
cwtl
xor
sub
adc
into
cwtl
stos
cmp
xchg
sbbb
mov
std
xor
pop
cmp
or
xor
movsl
push
lret
repnz
es
pop
mov
jp
outsl
jns
inc
lods
or
ljmp
sub
or
and
dec
lock
fwait
pop
filds
pop
ds
pop
mov
sti
sbb
sahf
push
mov
cmp
jmp
jmp
pop
orb
add
dec
lods
shlb
cmpsl
mov
mov
xchg
andb
lret
jb
icebp
push
in
addr16
pop
test
pop
sahf
mov
jg
leave
popa
dec
mov
lcall
cmp
aad
lahf
inc
data16
inc
enter
subl
aas
pop
mov
data16
aad
fnstenv
xchg
mov
test
inc
add
and
fidivrs
leave
fldt
sbb
hlt
loopne
jle
adc
adc
mov
lods
jnp
sbb
lods
mov
lods
inc
or
lods
pop
mov
addr16
inc
ret
subl
add
cmpsl
pop
inc
icebp
pop
mov
xchg
lods
ret
add
sahf
push
rcrl
out
inc
inc
leave
test
cmp
out
das
imul
sbb
mov
pop
ret
and
mov
dec
test
bound
movsb
in
sbb
inc
add
mov
in
scas
or
lahf
in
mov
jle
roll
jg
add
lock
xchg
push
aad
iret
sbb
add
adc
and
pop
inc
aaa
mov
daa
pop
testl
lret
insb
mov
mov
shrb
mov
sbb
xorl
adc
es
lret
push
add
or
pop
mov
sbb
call
mov
push
jno
int3
and
jno
mov
iret
test
clc
jnp
adc
adc
add
pop
push
pop
or
add
xchg
dec
ret
call
cmpsb
push
call
sti
out
sbb
repnz
and
decb
in
xor
int3
add
sbb
xor
cmpsl
aaa
dec
cltd
dec
outsb
inc
jg
cmp
icebp
mov
dec
outsb
cld
or
dec
inc
pop
pusha
xchg
push
outsl
in
cmp
in
insb
ljmp
dec
jnp
adc
add
leave
subl
test
scas
mov
ja
jbe
fistps
mov
pushf
lcall
xchg
jnp
enter
lret
dec
and
adc
clc
outsb
out
xchg
into
jo
add
test
js
or
dec
dec
lods
mov
pop
dec
inc
les
int
sbb
mov
out
cmpsb
andb
push
adc
cmp
addr16
cwtl
int3
in
push
xchg
dec
sbb
fisttpl
outsb
popf
jo
add
test
sbb
jg
cmpsl
push
xor
in
movsb
ficoml
cmpsl
fildll
xor
dec
pushf
xlat
xchg
mov
and
adc
iret
test
xlat
cld
loopne
xor
aaa
mov
xchg
sbb
sti
push
fisubrs
mov
xchg
push
mov
call
or
mov
in
or
add
and
rol
and
or
pop
cmpsl
jno
cmpsl
mov
jne
push
pop
or
lock
insl
icebp
filds
jnp
cmpsb
or
jmp
leave
add
mov
inc
fsts
out
movsb
mov
enter
ret
dec
mov
add
cmp
mov
in
cmp
xor
pushf
js
push
jecxz
test
jno
lret
icebp
out
loopne
fisttps
inc
into
xor
pushf
jmp
fwait
mov
popf
je
jmp
mov
outsb
sti
sub
xchg
out
and
rcl
pusha
dec
icebp
xor
js
cmp
js
je
adc
pop
push
push
mov
icebp
xor
cmp
cmp
and
fldt
inc
jno
ja
test
pop
add
or
sti
adc
mov
add
movsb
push
jmp
int3
add
add
mov
sarb
jmp
mov
xor
insl
out
dec
aaa
xor
rcl
fs
test
leave
scas
cmc
xchg
sbb
sti
les
frstor
out
xor
and
jne
xor
mov
xchg
add
xor
cwtl
pop
cmp
fs
sbb
cwtl
out
mov
jno
and
cs
es
sbb
icebp
sbb
fisubl
pop
dec
and
adc
negl
addr16
jle
aas
adc
push
pop
lcall
rcrl
test
imul
sub
pop
push
add
pop
fwait
loope
pushl
or
and
and
pushf
cmp
dec
dec
cmp
ja
dec
adc
sub
push
and
leave
add
int
xlat
lods
cs
xor
sub
sub
ljmp
mov
xchg
xor
negb
xchg
sub
jo
cmp
ss
cmp
testl
xor
test
insl
jns
mov
into
mov
mov
pop
add
out
pop
xor
data16
jmp
addl
xor
or
test
cld
pop
lea
jmp
adcb
and
shrl
rorl
cwtl
cmp
xchg
daa
popa
out
mov
outsb
cmp
pop
sbb
inc
add
outsl
jle
sub
imul
jb
push
orl
shlb
cltd
cmp
xchg
or
pop
cmp
aam
mov
aas
dec
sub
gs
pop
scas
ret
lret
out
pop
xor
sub
jmp
and
add
mov
enter
jl
push
sbb
orb
dec
jmp
enter
jns
cmpsb
cld
pop
gs
rcl
xchg
test
fcompl
cmp
sub
mov
fstps
outsl
repnz
mov
nop
ss
das
mov
in
dec
or
inc
push
mov
xchg
cmpsb
jmp
scas
mov
xor
test
jno
push
adc
ja
lea
shr
and
mov
sub
xor
xor
jo
dec
or
out
jp
imul
xor
xchg
icebp
adc
clc
loop
sbb
neg
cmpsl
pushl
ss
mov
test
or
pop
fdivrs
jmp
or
pop
int
enter
and
aam
hlt
add
and
xor
cli
pop
push
sbb
ja
pop
inc
andl
fists
dec
dec
sti
xlat
sbb
gs
scas
repz
pop
lods
int
or
lods
pop
sbb
lock
jno
sbb
xchg
push
push
inc
ret
call
jbe
and
xlat
mov
lods
or
repnz
adc
adc
lcall
out
aas
fcomi
push
push
in
adc
mov
mov
je
cmp
sub
aam
cmp
inc
shrl
sbb
leave
outsb
sahf
sub
xor
jno
cld
bound
push
jg
addr16
push
sbb
push
adc
enter
bound
repz
xchg
aam
stos
std
call
bound
std
repnz
cmpsb
cmp
add
shr
pushf
sub
iret
jo
call
std
cs
imul
jae
pusha
mov
adc
add
xor
add
add
inc
push
loope
stos
fmulp
shll
ds
subb
xsaves
mov
pop
pop
pusha
lcall
inc
jnp
add
gs
push
add
popf
jae,pn
mov
dec
out
daa
pusha
sar
push
arpl
mov
fsubrl
incl
mov
das
fwait
jb
cmp
xor
lock
aad
mov
bound
sub
sbb
ret
dec
ss
gs
mov
cmpb
adc
pushf
and
cmp
sub
jnp
or
cwtl
test
mov
scas
mov
leave
mov
flds
xor
mov
xchg
out
sarb
and
and
scas
push
daa
imul
inc
lret
insl
adc
das
ljmp
repnz
sbb
mov
mulb
and
lea
fisubrs
inc
cmp
test
pop
mov
jnp
daa
adc
mov
mov
mov
mov
movsb
test
enter
mov
cmpsl
and
mov
push
sub
divb
dec
cmp
clc
lret
jg
pop
lea
fsubrs
xor
xchg
and
js
std
cmp
call
int
sbb
popa
pop
dec
andl
push
or
xchg
in
and
xor
push
call
xor
outsb
pushf
cmp
lret
xor
test
addr16
inc
rcrl
mov
fistps
xchg
stos
cmc
incl
popf
dec
and
fdivr
cmovbe
adc
inc
pop
imul
pop
stc
clc
test
xchg
pusha
int
jns
xor
js
lcall
dec
dec
dec
mov
test
jno
daa
fwait
outsl
add
insb
jno
dec
inc
repnz
outsl
outsl
mov
xor
push
fsubrs
jge
das
mov
jecxz
in
fdivrp
pusha
mov
shl
lds
sti
or
sbb
push
imul
test
pop
jno
sbb
inc
pop
ljmp
out
out
and
mov
jo
sahf
aam
dec
int3
pop
jmp
pop
mov
aam
add
add
cmc
faddl
dec
pusha
xor
sub
mov
popa
imul
or
imul
jecxz
scas
rep
cmpl
pop
call
lahf
add
dec
jbe
add
sbb
mov
cmp
dec
sbbl
push
and
aam
sub
xor
jno
repnz
xor
add
pop
je
rcr
cmp
mov
ret
dec
adc
shlb
shrb
inc
or
sbbb
xchg
sarb
ljmp
push
mov
or
movsb
stc
sbb
xor
outsl
sub
sub
nop
leave
mov
cmp
add
pop
xor
and
lret
mov
mov
jmp
sub
sub
sub
xchg
jnp
repz
shlb
lods
inc
xchg
ds
pop
fbld
testb
psrld
jecxz
daa
push
dec
int3
std
fiadds
sbb
mov
adc
inc
inc
sub
push
push
in
inc
les
cmp
jecxz
sarb
testb
push
arpl
decl
loope
sbb
xlat
sti
xchg
cld
dec
fadd
in
das
sub
sbb
es
fmull
lds
out
add
mov
lds
and
mov
mov
pop
push
je
pusha
sarb
lock
cmp
data16
and
push
mov
addr16
mov
xchg
fidivrl
add
int3
mov
fisubl
ja
jg
sbb
xor
push
xor
push
jbe
pop
jnp
pop
push
add
cmpsl
adcb
das
jnp
and
loopne
mov
push
out
mov
lods
out
push
mov
hlt
mov
je
scas
inc
nop
mov
je
adc
into
mov
arpl
adc
repnz
push
sbb
add
pop
pop
dec
aas
or
sarb
mov
or
int3
pop
out
pop
mov
xor
lss
sub
dec
ja
dec
push
and
fstpl
push
sub
or
push
jne
movsb
push
lret
pop
xchg
pop
jo
mov
inc
repz
add
lcall
sub
rol
stos
xor
insb
dec
out
and
dec
mov
aaa
int3
adc
pop
dec
jecxz
adc
call
sbb
test
jbe
xchg
inc
mov
test
das
popa
or
cmpsl
or
sub
mov
mov
or
jl
cmp
aas
adc
xor
add
add
testl
mov
mov
mov
lahf
mov
pop
adc
mov
push
lahf
cmp
sub
adc
movsl
negb
lahf
stos
inc
adc
divl
mov
push
cmc
pop
sbb
pop
adc
xchg
adcl
scas
sbb
outsb
scas
repnz
in
sarl
ret
push
cmc
adc
adc
ret
into
iret
push
popf
in
shlb
push
rcrb
push
lret
enter
out
sub
fsubrs
adc
movsb
sbb
dec
fnstcw
cmp
dec
mov
sti
pushl
movsb
xor
or
out
mov
or
adc
add
jns
dec
push
lret
mov
stc
mov
push
loopne
cld
push
movsb
dec
cmc
xchg
cmp
dec
xchg
xchg
mov
xchg
cmc
pop
mov
pop
gs
or
dec
mov
ss
notl
in
popl
popa
js
loop
js
dec
icebp
outsl
xchg
sub
or
fs
pop
cmp
and
xchg
inc
sti
add
or
into
xchg
sub
lcall
rcrb
xor
fidivl
adc
imul
dec
jb
or
inc
push
mov
pop
adc
mov
mov
cmp
lret
popa
inc
inc
xor
rclb
jb
mov
push
cltd
hlt
lods
jo
sbb
sub
xchg
adc
out
adc
jecxz
inc
mov
lret
dec
pop
cmp
faddl
in
jnp
sub
not
in
adc
jmp
and
insb
adc
adc
xchg
arpl
test
lret
inc
sti
xor
sbb
call
jnp
inc
out
pop
sub
js
fdivrl
push
pusha
repz
sbb
jns
xchg
or
idivl
mov
dec
adc
xchg
cmp
cmp
fldz
push
notl
xchg
mov
fmul
add
xor
lret
push
mov
loop
jne
call
lds
jg
jno
inc
shll
aaa
add
pop
add
cmp
adc
mov
xor
xchg
pop
fistpll
outsl
sub
stos
jns
mov
push
in
rorl
mov
sbb
or
mov
arpl
lds
sub
pop
ja
scas
push
mov
jge
lods
add
pop
out
pop
pop
or
int3
xchg
jne
shll
outsb
mov
arpl
jno
loopne
and
adc
lds
sub
jns
add
rcrb
dec
dec
mov
outsb
dec
push
xor
repnz
pusha
mov
xor
fs
xor
mov
dec
pop
movsl
mov
mov
inc
pop
sbb
pop
mov
lods
xor
jge
lock
xor
in
mov
xchg
sbb
nop
ss
push
pop
xchg
add
xor
push
dec
pop
pop
jle
repnz
jecxz
mov
add
ljmp
jno
and
xor
push
sti
pop
add
jb
mov
repz
mov
insb
iret
es
mov
push
and
mov
ds
out
inc
stc
das
int
stc
mov
jnp
xchg
cmp
js
ja
scas
cmp
das
scas
sti
paddusw
inc
hlt
cmpsl
xchg
loope
cmpb
adc
sbb
sbb
or
lcall
mov
roll
jbe
cmc
jnp
ror
and
fdivrs
ret
inc
std
add
cld
jmp
lcall
push
inc
in
and
icebp
sbb
idivb
int
mov
dec
lahf
iret
cmp
out
mov
sub
sbbl
orl
out
sub
lods
adc
sbb
mov
xchg
pop
pop
xchg
jnp
shrb
in
daa
int
or
push
cmp
shll
clc
mov
push
movsb
shlb
cmpsb
lret
hlt
in
hlt
push
fcmovnbe
dec
sbb
add
js
flds
sbb
cwtl
add
sub
fs
icebp
int3
testl
jp
fldenv
xor
xchg
xor
mov
and
icebp
fisubs
movsb
pop
arpl
mov
jg
or
and
ljmp
leave
jg
sub
dec
icebp
aaa
xor
imul
lock
in
pop
jmp
inc
fsubs
cwtl
jae
ss
test
sub
jno
jnp
add
jbe
cltd
mov
not
ret
xchg
sbb
in
repz
cmp
pushf
dec
sub
es
cld
call
lea
jle
and
in
gs
fucomip
xor
std
fildl
xor
cld
pop
cmp
jns
lret
test
cld
cmc
aad
lcall
and
inc
outsl
dec
jl
mov
cmpsb
icebp
pop
cmp
sbb
leave
loope
jle
mov
fs
cld
and
or
arpl
cwtl
adc
ljmp
cld
pop
filds
cmp
in
sbb
addr16
jle
xchg
cmp
ss
add
andl
jg
pop
inc
sbb
cmpsl
fcomps
adc
jns
push
xchg
xchg
mov
stos
dec
mov
jle
pop
mov
fists
gs
xchg
enter
das
cmp
xor
jle
loop
push
into
push
ss
fdivs
out
mov
shrb
das
mov
xlat
test
pop
mov
out
or
fnstsw
xchg
sbb
imul
push
jns
repnz
sub
dec
orl
je
enter
or
sti
pop
lret
pusha
cmpsl
jmp
xchg
pop
sub
imul
cli
pop
imul
xchg
xor
pop
xor
mov
push
int3
lods
fldt
xchg
lds
mov
or
or
frstor
insb
inc
sub
cli
mov
out
jmp
sti
jne
sbbl
and
dec
daa
ret
fildl
inc
nop
inc
lods
repnz
stc
inc
imul
pushf
inc
push
psrad
mov
in
adc
leave
int
sub
pop
lock
jl
lea
pop
pushf
aam
lods
jmp
mov
jg
push
mov
inc
ljmp
mov
sbb
call
movsl
jl
mov
add
add
outsl
add
es
sti
jns
subb
inc
inc
loopne
movsb
push
dec
dec
out
xchg
sub
stc
repnz
dec
adc
lds
outsb
insb
test
into
push
cmp
sbb
inc
xor
faddp
sub
fcmovne
xchg
lods
aad
ja
and
movsl
inc
and
icebp
pop
jae
data16
jnp
leave
lea
cmp
loop
decl
mov
sub
test
pop
rorb
xor
ret
lahf
mov
dec
xor
insb
ljmp
push
ss
xchg
dec
fistps
fs
stc
pop
pause
test
sub
mov
in
mov
shlb
and
insl
sub
mov
mov
aam
mov
lock
ja
mov
push
inc
pop
xchg
pop
js
lds
imul
jle
xchg
mov
dec
push
cmp
jle
fcmovne
negl
rorb
aaa
push
out
or
pop
jmp
jnp
insl
sub
xchg
pop
out
sub
inc
dec
dec
add
or
jecxz
push
ja
xor
popf
dec
push
dec
sbb
push
mov
in
and
inc
dec
cmp
dec
popf
loope
cmpsb
mov
mov
push
enter
cmc
out
dec
push
sbb
jle
orl
mov
cmp
orb
push
xor
call
lret
and
mov
add
pop
sbb
mov
movsb
pop
ljmp
sbb
fstpt
mov
sub
repnz
mov
jbe
ljmp
test
lock
loope
mov
sbb
dec
mov
xchg
daa
in
sbbl
adc
insl
ss
cmp
or
dec
pusha
fnstsw
jne
sub
leave
scas
loop
enter
adc
xchg
mov
jmp
mov
mov
mov
iret
pop
sub
int3
das
into
iret
fwait
jns
mov
int
enter
ja
leave
std
pop
test
insl
cmpb
dec
cld
pop
mov
inc
or
lahf
movsl
and
jb
daa
cmc
inc
add
ljmp
sbb
daa
pop
xchg
dec
cmp
cltd
xor
and
mov
jo
nop
sbb
xchg
addr16
dec
and
bound
dec
mov
jbe
xchg
lcall
ljmp
mov
sub
mov
pop
nop
add
xchg
in
cmc
push
int3
pop
sti
nop
das
cmp
cmpsl
repnz
mov
dec
icebp
ds
and
xor
mov
mov
inc
jge
cmc
movl
mov
hlt
stc
dec
jg
and
outsl
das
imul
add
cmp
rorb
push
clc
lods
adc
arpl
sub
les
push
pop
inc
jo
push
mov
sub
lret
mov
aaa
add
pop
imul
dec
cmpsl
mov
ret
jge
lret
int
test
divb
pop
ret
loope
aaa
sti
stos
ljmp
inc
scas
mov
or
scas
shrb
xor
repnz
in
pop
mov
xchg
scas
cmp
mov
data16
inc
cmpl
add
xchg
in
int
xchg
jl
xor
call
cmc
or
mov
ja
iret
popa
aas
pop
pop
mov
movsl
push
or
sub
lret
in
fwait
or
ficomps
inc
lret
xchg
test
insl
mov
dec
aam
js
cmp
sbb
push
push
divl
push
mov
imul
pop
sub
pop
rcrl
rcll
jge
stos
pop
ja
or
test
cmp
cmp
push
aam
fwait
imul
pop
inc
iret
loope
mov
mov
insb
jo
dec
test
nop
das
jp
decl
mov
cld
or
in
sub
and
jmp
js
dec
cltd
adc
mov
stos
xchg
es
and
shrb
in
jbe
push
push
cvtdq2ps
mov
mov
lods
jns
add
fxch
mov
mov
pop
out
jno
dec
invd
mov
inc
dec
add
enter
xchg
out
xchg
cmp
nop
jle
scas
dec
testb
rcll
popf
push
sarb
mov
daa
mov
mov
inc
sub
cmpb
fsubs
and
imul
mov
repnz
loopne
ret
mov
clc
cs
xchg
ficoms
repnz
outsl
add
or
jp
aad
push
loopne
xor
cmp
cltd
iret
iret
jmp
cmp
ret
outsb
mov
pop
mov
fsubrl
popf
movsb
lret
shll
test
push
cli
mov
data16
mov
outsl
fcompl
scas
jb,pt
or
out
pop
inc
sbb
repz
out
into
mov
mov
loope
or
loop
mov
pop
jg
lret
out
and
jmp
fdivs
je
cmp
sbb
mov
jb
in
cmp
lret
fistps
and
xor
mov
add
pop
lcall
or
data16
or
mov
pop
aam
push
popf
movsb
orl
mov
es
bound
je
adc
sub
push
inc
shlb
stos
repnz
pop
xor
inc
aam
mov
and
outsb
pop
addr16
xchg
popa
movb
lods
pop
dec
sbb
aas
adc
push
std
fistps
mov
int3
outsl
loope
mov
rorb
mov
scas
mov
push
movsl
jp
ret
push
jp
pop
rcll
mov
rclb
pusha
ja
test
das
test
adc
loope
cmp
shrl
ljmp
cwtl
and
pop
sarb
es
sub
sbb
lds
xor
sbb
add
pop
pop
xchg
sbb
in
daa
sbb
mov
mov
cs
lcall
mov
out
inc
mov
test
jle
xor
out
repnz
sbb
rorl
fcmovne
stos
pusha
aad
and
push
jl
and
loope
insl
pop
icebp
pop
xchg
decb
cli
push
adc
xor
dec
add
jo
lods
das
imul
xor
sti
mov
addl
cwtl
push
ds
adc
jno
push
inc
push
pusha
mov
cmc
call
ss
nop
icebp
mov
fimull
mov
iret
push
dec
xchg
dec
shll
sbb
dec
xchg
cld
mov
cmp
cmpsb
adc
xlat
add
fildl
jns
sub
add
push
xchg
popl
lret
sub
inc
sub
fucom
push
push
jnp
xchg
mov
nop
scas
dec
xor
dec
loope
xchg
inc
enter
adc
es
pusha
push
cs
sahf
xor
lret
ljmp
cmpsb
jmp
sahf
popf
jae
add
pop
sar
and
rorb
push
add
popf
in
imul
xchg
push
push
in
rolb
dec
sbb
mov
add
mov
jmp
les
test
test
add
inc
add
stc
mov
repz
lret
call
push
call
jg
pop
dec
mov
in
jg
sahf
xor
xor
jmp
dec
mov
mov
pushf
sbb
imul
aam
lock
shr
dec
movsl
fldenv
out
mov
mov
xchg
fimuls
je
into
sbb
lods
iret
sbb
fwait
inc
and
and
cs
and
mov
js
adcl
ret
pop
and
dec
shrb
sbb
pop
imul
int
icebp
inc
dec
js
lea
mov
dec
dec
sbb
jne
arpl
clc
jbe
mov
lret
in
fbld
movsb
push
mov
mov
mov
popa
or
daa
inc
aas
lds
loope
push
mov
or
int3
mov
mov
fsubrs
add
into
ljmp
test
sub
adc
sbb
popa
cli
jno
insb
jne
pop
hlt
stos
mov
mov
sbb
stc
inc
dec
lock
gs
inc
inc
add
addr16
mov
cs
inc
cltd
xor
sub
lods
dec
jge
ficoml
lea
mov
icebp
test
ljmp
xchg
xlat
inc
movl
sbb
cmp
pop
cld
data16
jns
adcl
shrl
dec
in
ss
jge
push
dec
mov
mov
idivb
jl
in
push
clc
cmovg
lds
mov
cmpsb
mov
adc
cld
leave
insb
mov
int3
pushf
sbb
push
movsb
cmp
inc
repz
sub
sub
es
adc
xchg
filds
movsl
cmpsb
sahf
pop
int3
inc
loop
adc
adc
jo
or
add
mov
iret
push
cmpsl
insl
sahf
cs
scas
mov
aam
xor
push
out
sbb
ret
or
ljmp
imul
xor
xchg
pop
loopne
lret
mov
movsl
sbb
xor
mov
jo
fwait
repz
xchg
movsl
mov
push
scas
sub
push
jb
or
fld
mov
jecxz
mov
in
jge
add
outsl
fcom
add
dec
push
les
insb
pop
xor
sub
je
and
adc
fcoml
ret
movsb
fisttpl
inc
js
xchg
push
xlat
cmp
sub
cs
jp
mov
sub
pop
inc
pop
xorb
stos
and
push
sub
mov
and
jp
fld
xor
adc
jb
mov
mov
jo
mov
xor
pop
in
and
cmp
mov
push
lock
pop
ljmp
sbb
and
iret
js
mov
imul
push
and
fidivl
sbb
mov
sbb
and
adc
jnp
mov
sbb
push
xchg
mov
xchg
mov
xor
inc
addr16
shll
loopne
add
or
sahf
je
sbb
push
adc
data16
and
jmp
aaa
xor
pop
push
hlt
aad
stc
mov
mov
mov
or
mov
enter
sti
cmpsb
pop
inc
lahf
iret
movsl
xchg
push
adc
aam
daa
sub
in
insl
leave
inc
rolb
cli
pop
jl
popa
pop
outsl
mov
shrb
cs
arpl
in
cmc
jle
mov
test
jp
add
arpl
fnsave
imul
stos
js
out
mov
lcall
je
mov
aad
jp
arpl
mov
call
cmp
xchg
and
mov
push
inc
test
adc
add
push
das
sahf
lcall
testl
mov
insl
xchg
add
mov
jne
ljmp
mov
lods
clc
repnz
shlb
pushf
out
mov
jno
sbb
sub
mov
pop
stos
adc
arpl
and
idivl
jmp
shrl
loop
adc
sbb
idivb
pop
pop
sub
test
mov
test
adc
ficomps
popf
pop
mov
inc
mov
aad
xchg
repz
fbstp
mov
sbb
loop
push
xor
les
sbb
xchg
pop
cmc
mov
mov
enter
dec
mov
add
rcrb
movsb
jmp
push
push
cld
loope
xchg
pop
mov
pusha
or
jle
inc
push
pop
aad
test
stc
int3
lods
call
mov
jp
or
arpl
push
mov
lods
jns
nop
mov
xchg
jnp
cld
repz
sbb
mov
in
xchg
mov
dec
hlt
fs
xor
mov
jmpw
mov
add
dec
in
sub
rclb
mov
cltd
cmp
lahf
add
cmp
in
push
ljmp
lret
push
or
xchg
repz
ds
pop
outsb
xchg
bound
xorl
test
adc
movsl
adc
push
lock
pop
out
mov
daa
xchg
jnp
shll
ret
push
js
icebp
add
push
mov
mov
arpl
sbb
dec
cmp
xchg
call
pop
cmp
dec
dec
jbe
in
xchg
push
push
pop
lret
out
movsb
mov
mov
mov
xor
push
mov
das
xchg
sahf
adc
cltd
test
push
pop
mov
push
mov
lock
inc
mov
dec
and
jns
sub
cmpsb
movl
lock
mov
movsb
sbb
pop
xor
loop
movsb
mov
inc
pop
sbbb
push
mov
and
and
dec
fidivl
and
xor
jmp
shll
insb
mov
loope
push
pop
and
mov
imul
dec
ds
sbb
insb
jbe
inc
addl
stos
lret
pop
pop
push
lret
fs
int
aam
xor
sbb
mov
daa
andb
mov
xchg
daa
dec
xchg
jp
sub
js
lret
push
jp
mov
add
xrelease
mov
mov
outsb
dec
cmpsl
idivl
mov
xchg
imul
push
jo
or
movsb
and
je
outsb
addps
pop
cmpsl
add
in
and
or
lahf
call
add
nop
test
sarb
cwtl
cmpsl
or
insl
push
push
push
test
cmp
xchg
xchg
sbb
rorl
xchg
cwtl
data16
xchg
push
idiv
pop
jb
cmp
leave
lea
ds
loop
dec
mov
fistpll
fstl
fs
rolb
mov
popa
jecxz
fisubrs
sbb
mov
fnstcw
mov
lods
stc
scas
mov
sbb
scas
sub
cld
testl
pop
cmp
inc
lea
das
add
aad
adc
test
add
jno
push
divb
ja
ss
or
notb
icebp
subb
mov
enter
ja
mov
push
xor
daa
dec
ljmp
push
stos
xor
push
push
cmp
or
sub
xor
out
addl
adcb
mov
ds
pop
inc
movsb
jg
adc
or
pop
push
or
fistpll
push
ret
xor
xchg
and
lcall
leave
cwtl
es
xorb
es
fmul
cmp
mov
inc
leave
or
bound
inc
fcomp
sbb
ja
mov
mov
xchg
and
rorl
sub
imul
jnp
and
ret
push
rcrl
sbb
jae
xor
lods
and
or
jb
pop
inc
jmp
insb
stos
inc
sbb
push
sbb
cmp
push
jns
push
clc
stos
dec
into
mov
jnp
ja
pop
out
rcrl
les
movsb
les
pop
ss
dec
xor
call
adc
cmp
jno
fwait
mov
popf
mov
mov
sbb
push
mov
icebp
xor
add
push
jbe
pushf
push
xor
push
mov
mov
lret
xorb
inc
iret
iret
pop
add
mov
inc
mov
aam
jge
push
adc
sub
mov
js
je
inc
dec
sbb
dec
dec
sub
in
xlat
adc
iret
xor
cmpb
add
clc
imul
lret
mov
pop
sbb
mov
psrlw
push
inc
adc
cmp
xchg
shlb
shlb
sbb
xchg
push
inc
imul
fsubl
jnp
dec
dec
jmp
jo
std
mov
out
cltd
fstl
mov
jmp
das
or
inc
insl
mov
daa
dec
pop
out
repnz
mov
movsl
lods
push
mov
adc
test
xor
inc
lds
mov
inc
adcb
lock
pop
and
push
or
mov
adc
insb
in
mov
dec
pop
sbb
test
pop
sub
jb
dec
enter
cmpsb
repnz
cmp
movsl
cli
pop
sub
dec
pusha
jb
adc
fnstenv
mov
pop
loopne
lahf
scas
push
ret
pusha
sub
fldt
sub
out
lds
jmp
int3
sahf
shll
out
nop
pushf
pusha
add
pop
jge
mov
fchs
outsb
movsb
and
stos
pop
jns
mov
sbb
les
sahf
dec
xchg
and
sti
jle
sub
or
xchg
jecxz
xchg
das
or
dec
xchg
subb
pop
xor
xorl
idivl
xlat
adc
dec
jp
mov
xlat
outsl
imul
cmpsl
jbe
cmc
ret
xor
add
imul
jnp
sbb
push
mov
mov
mov
push
and
iret
mov
lea
shl
jp
adc
and
loope
nop
or
daa
cmp
cmp
or
inc
lcall
das
lds
dec
lods
je
dec
push
lahf
in
fstpt
les
push
stos
das
jbe
mov
sbb
jp
sbb
popf
loope
loope
push
xor
pop
popf
movsl
fldt
mov
jp
dec
or
fstps
xlat
mov
xor
adc
test
xor
pop
ss
mov
add
shrl
rep
jno
je
ret
and
cltd
popl
or
sbb
outsb
bound
sub
and
enter
insb
clc
and
dec
popa
jno
lret
je
loop
or
repnz
cmp
incl
inc
xor
mov
xchg
xchg
mov
lods
iret
inc
and
pushf
ret
dec
adc
add
andl
fsubrl
stc
bound
push
mov
into
sbb
cmp
cmp
fidivrs
out
adc
cmp
cmp
in
mov
xchg
imul
jl
out
aam
inc
lods
pop
mov
mov
mov
sub
pop
xchg
mov
mov
sbb
lea
aas
mov
aas
iret
and
icebp
push
mov
ds
mov
and
jge
adc
cmp
arpl
add
out
inc
jmp
push
cmpw
in
aad
adc
pop
or
cmp
loope
test
mov
cmp
das
arpl
outsb
xor
push
push
or
inc
popa
xchg
push
adc
outsb
cmp
mov
mov
cmp
js
lods
addr16
mov
nop
cli
insb
pop
out
pop
push
mov
shl
mov
sub
sub
pop
push
and
addl
fs
add
add
cmp
int3
mov
and
mov
dec
movsl
pop
fdivp
dec
imul
out
or
test
xor
sti
cmp
adcl
pop
mov
repz
je
incl
mov
pop
inc
sub
pop
std
ljmp
mov
gs
mov
xchg
stc
fst
xor
test
push
ret
pop
test
inc
jl
shl
cmp
and
mov
or
mov
lcall
sti
xchg
or
push
dec
dec
inc
enter
add
mov
inc
inc
andb
xchg
imul
iret
and
sarl
movsb
mov
add
test
pop
jns
ss
xchg
add
mov
mov
and
push
push
sub
dec
mov
add
mov
test
sub
pop
stos
mov
test
xchg
jmp
push
mov
mov
inc
mov
sbb
sbb
push
push
pop
or
bnd
mov
pushf
pop
lahf
xlat
pusha
jne
mov
xor
es
xchg
and
jb
jno
push
cmp
push
sbb
xchg
cltd
cltd
and
subl
xchg
out
shll
inc
push
xor
in
mov
cltd
mov
push
adc
aad
ss
sub
sarb
test
out
adc
lock
testl
xchg
jbe
insb
xchg
mov
mov
icebp
xor
lods
and
bound
push
leave
xor
xchg
fwait
imul
je
adc
pop
xor
xlat
adc
cs
mov
sbb
jnp
xor
push
push
fldl
lock
dec
cltd
popf
cltd
jne
sub
stc
fs
adc
and
mov
pop
test
mov
lahf
stos
push
or
idivl
mov
pop
test
loop
repnz
test
inc
rcrl
adc
lret
in
into
jne
and
sbb
dec
add
mov
adc
push
mov
lret
fnstenv
lcall
xor
inc
fsubl
mov
ljmp
cmpl
or
adc
add
jp
insb
sub
adc
hlt
cs
xchg
inc
daa
adc
xchg
ljmp
push
sub
in
sbb
iret
adc
cmpsb
out
mov
push
pop
cmp
adc
es
pop
dec
nop
not
cwtl
dec
sbb
das
inc
aam
jmp
sbb
mov
pminsw
scas
lahf
sti
lods
xchg
inc
jecxz
sahf
inc
pop
ja
shrl
mov
sahf
cmpb
jge
mov
inc
jns
sub
fwait
inc
and
aam
xlat
jge
aaa
lods
insb
xor
add
call
lahf
adc
inc
fmull
cmpsb
push
ficomps
sti
push
andl
cmc
loop
inc
ja
push
pusha
bnd
cwtl
lods
xchg
pushf
repz
mov
mov
push
lahf
pop
or
or
aas
mov
inc
push
xchg
jp
dec
rclb
mov
push
ja
jmp
xchg
jle
mov
push
dec
sbb
sbb
xorl
inc
pop
pop
out
inc
test
and
pop
mov
cltd
and
frstor
lea
mov
out
test
imul
leave
sti
dec
mul
cwtl
pavgw
sub
adc
rclb
inc
sub
outsb
in
jmp
pushf
xchg
xchg
jle
jns
out
xchg
lret
lock
push
push
adc
sbb
aaa
aam
enter
jecxz
lea
xchg
sub
out
push
pop
repz
loope
push
or
dec
ss
je
adc
and
or
xor
mov
lret
xor
jnp
shr
fwait
add
mov
imul
xor
lret
pop
lods
push
lea
pop
bound
lahf
push
xchg
sub
cmpl
add
subps
and
fbld
ljmp
pushf
jge
pop
push
lahf
mov
sbb
shlb
dec
xchg
xorb
sbb
lahf
data16
mov
sub
adc
mov
dec
test
jle
inc
adc
fadds
jns
dec
inc
and
out
adcb
bound
cmp
lret
clc
dec
dec
mov
mov
jge
sub
jg
or
cmp
jae
pop
test
popf
out
shrb
xchg
jo
add
push
mov
mov
in
pop
insl
jbe
clc
sbb
scas
shl
sbb
mov
cwtl
or
adc
mov
dec
out
mov
push
aas
cld
pop
jmp
cmp
sub
sub
test
jle
push
int3
or
xor
fisttpl
jns
iret
mov
cs
into
pop
sub
xchg
gs
mov
jb
cli
xor
mov
pop
je
cmp
insb
sbb
add
or
mov
sub
mov
xchg
rorl
int
ljmp
sub
pop
cmpb
or
mov
push
repnz
scas
push
sub
cmp
jnp
outsb
cld
subb
das
outsl
shrb
xchg
icebp
cld
lret
mov
daa
push
es
ds
test
add
call
shl
mov
jae
push
into
out
fbld
lock
cmpsb
dec
negl
pop
sub
shlb
insb
jge
mov
outsb
hlt
add
jecxz
mov
push
fcoms
nopl
lret
cmp
sahf
rcrl
sbb
push
push
aad
push
pop
pop
jmp
dec
daa
pop
jns
dec
cs
sahf
jmp
inc
xor
sbb
mov
fimuls
imul
cmpsl
mov
mov
adc
lret
sub
mov
mov
aas
and
push
inc
adc
fisubl
inc
jmp
ret
or
xchg
lea
ljmp
addl
lcall
jge
fs
retw
xor
push
fists
rcr
push
and
mov
ficoml
inc
or
push
push
cld
jbe
arpl
cmp
insl
push
push
dec
loopne
push
cmp
push
outsb
pop
jno
xor
jp
jg
sub
popf
mov
mulb
mov
sti
sbb
outsb
mov
adc
cmpsb
and
xor
or
jns
repnz
test
out
push
clc
xor
pop
divl
loope
add
and
push
repnz
aad
push
inc
pop
inc
je
push
fisttpll
incb
daa
and
jns
mov
fwait
add
inc
jmp
jg
imul
xor
xlat
xor
scas
in
add
xchg
jge
pop
ss
push
lahf
sub
dec
cltd
xor
jp
push
clc
jl
push
shlb
inc
mov
and
call
xchg
dec
adc
dec
js
mov
aad
jbe
call
loopne
push
faddl
jne
out
push
xchg
hlt
pop
jecxz,pt
adc
fisubl
and
std
push
enter
mov
xor
dec
cmp
push
insb
push
xchg
jmp
aaa
and
add
aaa
jne
or
lods
gs
ds
jg
jecxz
mov
addr16
iret
adc
shr
fisubl
aas
push
push
or
and
mov
dec
add
add
cmc
mov
out
int
pop
dec
idiv
sub
les
rolb
xchg
icebp
paddw
inc
jno
add
js
rcrb
adc
dec
in
push
aas
add
jle
cmp
jge
and
pop
cmc
insb
pusha
push
int3
sub
pushf
and
cmpl
filds
jne
pushf
mov
in
cld
cmp
aas
stos
jl
push
insb
enter
add
loopne
in
push
xchg
jno
stos
fistps
popa
add
sbb
xchg
ljmp
cli
xor
je
pminub
jb
mov
xor
jecxz
inc
les
xor
lods
int3
mov
sbbl
mov
rcl
jmp
and
xor
ljmp
mov
mov
mov
ljmp
in
push
pop
loope
stos
jbe
popa
xchg
add
sub
dec
sbb
std
pop
mov
mov
pop
iret
inc
adc
xor
adc
repnz
popf
push
jecxz
sbb
test
xchg
or
das
push
loopne
gs
jno
lods
push
jp
add
add
inc
mov
jae
cmp
cmp
aaa
pushw
movzwl
out
sahf
loope
shlb
adc
sahf
lods
pop
or
and
mov
dec
dec
fldenv
popf
cmp
inc
cmpsb
or
idivb
arpl
out
jne
or
and
ficoms
or
and
xchg
push
out
inc
mov
pop
aas
ja
pop
cmpb
ljmp
sub
cmpsb
push
mov
iret
xchg
mov
cmpl
and
aas
out
jne
shl
lret
adc
imul
sub
in
inc
in
dec
jno
and
aas
roll
notl
jae
pop
adc
or
aam
push
psrlw
lea
test
subb
sub
fs
fildll
daa
push
gs
jecxz
ja
scas
mov
xchg
ja
jmp
sbb
xchg
xchg
loop
fistl
adcl
ds
mov
icebp
mov
ret
int
iret
mov
ficomps
lret
andl
cmpsl
dec
inc
mov
inc
bound
inc
outsl
insb
cmp
cltd
add
orl
out
decb
push
sub
dec
rcrb
repnz
or
shlb
xchg
sbb
sub
data16
inc
aas
ss
xchg
inc
inc
sub
fistl
xchg
jns
or
mov
pop
mov
test
fisttpll
cmp
aaa
xor
push
iret
insb
xlat
xchg
jecxz
test
mov
sub
mov
jle
add
mov
andl
icebp
xchg
mov
adc
lods
aaa
sub
test
jmp
fdivrl
inc
mov
adc
dec
inc
inc
xchg
or
int3
dec
xor
mov
dec
andl
xor
lahf
es
call
movsl
mov
in
dec
dec
imulb
icebp
stos
popa
pop
repnz
cs
mov
sbb
add
sub
push
dec
lods
cmp
sbb
shrb
adc
out
gs
popl
xlat
out
stos
int
add
inc
and
aaa
aas
rol
lret
rcrl
pusha
ja
jg
stos
lock
pop
add
popf
imul
push
xchg
cmp
push
in
sub
dec
xchg
pop
dec
outsl
fstp
scas
mov
ljmp
test
xor
fiadds
or
mov
or
inc
icebp
in
adc
jle
xchg
xor
bound
test
adc
insb
icebp
jl
mov
test
pusha
movl
pop
leave
xor
ljmp
jne
cmp
mov
xor
sub
dec
fnstenv
sbb
cmp
mov
xchg
pop
add
sub
sbb
inc
aad
xchg
imul
gs
les
lret
shlb
ljmp
jb
rclb
dec
insb
xor
jae
cmp
mov
pushf
add
xchg
shll
inc
out
dec
daa
hlt
sub
push
roll
dec
lcall
inc
mov
mov
nop
dec
add
popa
add
push
pop
mov
lret
imul
cmp
es
inc
addr16
mov
imul
or
jo
stos
mov
hlt
fidivrs
bnd
xor
fnstsw
lock
jle
mov
cmp
outsb
flds
cltd
sbb
in
inc
adc
shrl
jecxz
push
or
mov
das
rolb
pop
lock
mov
outsl
xchg
sbb
pop
mov
mov
lcall
jecxz
call
test
cld
push
pop
out
xchg
inc
fdiv
xchg
mov
or
out
jbe
push
outsb
push
adc
rcll
cltd
js
dec
mov
lock
mov
ljmp
dec
mov
jno
shl
call
add
jge
cmp
ror
or
jp
add
mov
push
insl
or
xor
imul
jnp
push
rorb
cli
cmpb
xchg
mull
sbb
scas
test
adc
hlt
daa
jne
mov
mov
push
adcb
or
dec
je
cltd
fcoms
jge
arpl
stos
jmp
pusha
or
cmc
inc
stc
dec
cwtl
adc
mov
lahf
test
mov
xor
out
into
daa
shr
popf
cwtl
pop
lret
ret
lret
mov
lds
fiaddl
mov
sbb
and
or
jb
std
incb
pop
cmpsl
dec
leave
adc
or
cmp
xor
mull
dec
in
mov
aad
add
jge
pop
mov
sarb
pop
push
dec
push
rolb
xchg
cs
stos
add
out
out
push
dec
fstpt
jnp
test
leave
push
dec
inc
jnp
push
inc
add
loopne
xchg
pop
cmp
sub
mov
inc
and
jmp
dec
mov
fsubs
sub
pop
jg
jl
cmpsl
push
sub
in
pop
mov
inc
das
test
dec
popf
ret
sbb
mov
pushf
rcll
loopne
rcll
lcall
stos
hlt
clc
pop
jno
movsb
push
je
mov
jns
cwtl
clc
push
and
jbe
pop
cmp
dec
xor
ja
adc
and
pop
popf
adc
fldlg2
or
cmp
or
mov
add
in
mov
add
ret
orl
push
ja
and
daa
and
xchg
xchg
inc
mov
fsubs
in
inc
pusha
or
or
ret
negl
pushf
out
data16
lea
jno
je
cwtl
ret
xlat
or
lret
jmp
push
es
pop
jge
inc
daa
loop
loop
xor
pop
jecxz
out
frstor
repnz
lds
testb
popf
lock
test
jbe
sub
mov
rcr
fimuls
sahf
push
and
cmp
sbb
inc
shlb
cmp
data16
nopl
stos
pop
pop
sub
lds
lock
daa
and
mov
jl
xchg
std
sar
mov
mov
or
adc
les
dec
test
rorl
popf
aas
jecxz
sbbl
xchg
dec
mov
aas
jbe
inc
pop
orb
or
dec
cmp
imul
sub
pop
lea
inc
and
or
ds
jmp
add
add
or
jne
inc
add
insb
or
fsubs
xlat
lahf
mov
clc
outsl
and
lret
out
fldenv
cs
push
add
mov
push
inc
loop
dec
add
lahf
and
push
xchg
or
ret
mov
add
ljmp
ja
and
jnp
inc
cld
inc
pusha
iret
loopne
xlat
fidivrs
fdivrs
repnz
shlb
sahf
and
push
scas
insl
dec
pop
and
push
push
or
inc
jmp
mov
mov
sbb
sbb
fildll
sbb
div
pop
mov
push
popf
mov
xlat
daa
loopne
and
aad
cmp
xor
fsubl
xor
push
loop
outsl
outsl
cmp
cmpb
xor
jge
push
rcll
jge
lcall
jb
jb
jne
inc
pop
adc
push
dec
fadds
repz
std
dec
xchg
pop
add
inc
es
pop
or
and
pop
and
subb
push
pushf
cmp
data16
pmuludq
cmp
in
sub
xlat
imul
push
push
fs
lea
jg
in
sub
mov
mulb
inc
inc
jle
loopne
in
aas
push
daa
nop
lods
fs
mov
fs
mov
popf
xlat
js
xor
sbb
into
ja
push
mov
xor
ret
lea
js
pop
test
jecxz
fidivrs
adc
cmp
cs
stc
std
stos
sub
test
fnsave
in
push
push
test
outsb
mov
clc
mov
or
or
div
clc
mov
cmp
in
iret
xor
pop
sahf
xor
dec
ja,pt
and
iret
scas
scas
insb
xor
iret
inc
scas
mov
lret
enter
cmp
xchg
push
shll
xchg
jge
mov
mov
cmp
cmp
outsl
push
rcll
mov
inc
sbb
push
or
cmc
fstp
sbbb
add
mov
sbb
push
rcrl
je
xor
shr
int3
sub
inc
jno
sub
sbb
pop
lods
lods
and
jmp
push
xor
jns
pop
jns
test
ret
aas
fwait
cld
sub
bound
jno
cmp
test
clc
insl
xchg
idivb
sub
hlt
push
sbb
add
adc
fdivrs
call
mov
in
xchg
dec
mov
aam
mov
push
test
js
mov
push
or
mov
enter
mov
jbe
leave
and
mov
or
dec
mull
sbb
daa
sahf
dec
notb
out
add
sbb
adc
push
pushl
rolb
cmp
xchg
std
mov
dec
dec
cmpsl
cmovs
rorb
pavgw
cmc
incl
gs
jnp
scas
js
filds
iret
test
pop
xor
mov
sbb
xor
rorb
test
mov
jns
fbld
xchg
inc
int3
rcrl
inc
aad
cmpsb
sbb
mov
sbb
adc
inc
nop
mov
adc
fists
inc
imul
or
mov
sbb
lcall
roll
jle
cmpl
popa
add
out
add
enter
xchg
xchg
xchg
or
sub
call
sbbl
ljmp
cltd
xor
outsl
jns
out
xchg
push
sahf
icebp
imul
cld
jp
sub
adc
out
pop
rclb
cli
outsl
roll
jecxz
xchg
jns
int
in
loopne
insl
mov
test
cmp
mov
jmp
fs
div
pusha
xor
stos
pop
sub
push
int3
mov
or
decb
inc
mov
xor
adc
pop
sbb
sub
sub
mov
cld
dec
mov
xchg
in
loope
sarb
mov
lea
xchg
enter
lock
pushf
leave
jmp
sbb
jge
addr16
sbb
bound
loopne
pushl
test
cmc
add
sub
mov
divb
mov
inc
lcall
inc
push
loop
add
add
push
insl
jbe
les
fmul
popf
xor
cwtl
or
push
jmp
adc
xor
add
lret
sbb
jmpw
pop
mov
jmp
jmp
xchg
xchg
sbb
and
adc
adc
cld
and
push
aam
push
mov
adc
fnstcw
repnz
cli
sbb
adc
pop
jecxz
stos
mov
add
test
es
test
jo
lret
scas
ljmp
push
add
lock
sbb
arpl
cmc
cwtl
dec
lock
sbb
aam
outsl
cmp
pop
orb
aad
dec
rcrb
add
adc
sbb
pop
aam
add
pop
pop
out
jns
in
add
cmp
xchg
xorb
dec
fistps
imul
mov
xor
push
cmpsl
push
xchg
pop
sub
xchg
stos
jl
xor
jno
ret
cmp
jmp
lea
push
in
cld
loopne
into
add
add
mov
adc
fsubrs
mov
fsubrs
lahf
lea
fldt
sbb
add
repnz
mov
subb
inc
enter
cwtl
cmpsb
dec
cs
imul
sti
or
xchg
add
sub
adc
dec
out
and
push
cli
push
std
add
push
jae
shr
push
cmp
jle
and
rorb
cmp
sbb
adc
sti
pop
xchg
insb
nop
adc
into
in
pop
aam
mov
jmp
fisubrs
mov
inc
and
jmp
stos
ss
pop
push
xchg
inc
ss
push
incb
mov
push
lret
jge
daa
fst
lock
adc
jmp
lds
sbb
std
outsl
jae
mov
adc
mov
repnz
mov
push
dec
mov
xor
loope
adc
inc
adc
dec
xchg
mov
jbe
push
push
fisubrl
and
fwait
jnp
cmp
stc
xor
jo
pop
dec
loopne
push
sbb
xchg
ss
or
in
inc
xor
outsl
sbb
mul
imul
cltd
fwait
push
aaa
arpl
hlt
xchg
ss
imul
adcb
xchg
into
inc
pop
popa
mov
xor
xor
pop
xlat
decb
cltd
aam
insl
or
sbb
adc
call
cltd
sbb
divl
sbb
add
mov
shr
pusha
daa
xchg
aaa
xor
or
test
arpl
and
sub
popf
and
lret
cmp
add
in
sbb
fiaddl
sbb
roll
or
pop
js
xor
sub
sbb
es
inc
mov
push
test
out
ret
movsl
xor
push
roll
cmpsb
lret
lahf
mov
scas
mov
pop
ffreep
div
inc
sbb
push
mov
icebp
xorl
dec
dec
testl
jae
add
pop
pop
divb
xchg
push
ljmp
pop
xor
insb
loopne
dec
aad
jb
pushf
add
lret
pop
mov
pushf
push
dec
jno
lahf
pushf
or
les
xchg
mov
rorb
shll
adc
xlat
mov
out
ja
push
cmpsl
je
xor
and
xchg
xor
pushf
jecxz
lock
jo
scas
into
out
adc
mov
mov
ljmp
fldenv
push
rcll
cmc
ds
mov
fildll
cwtl
dec
add
sti
insl
imul
add
and
out
repz
xor
push
ret
aad
out
fistpll
xor
sti
adc
rcrb
jno
mov
jb
movsb
jp
push
shll
sbb
dec
inc
repz
mov
fwait
mov
movsl
daa
sub
cltd
in
call
cltd
insl
icebp
mov
or
clc
lret
fst
testl
std
push
mov
ds
mov
pop
and
inc
je
popl
mov
push
shlb
push
aad
cmp
loopne
stos
and
sub
push
mov
adc
repz
jl
xchg
sti
daa
xchg
hlt
inc
mov
lods
aam
test
mov
jo
repz
jae
addr16
pushf
bts
fldl
cld
pop
jns
ret
in
mov
mov
scas
loop
aam
mov
or
ficoml
rorb
mov
mov
and
sbb
out
fisttps
cmp
xor
sarb
mov
aas
mov
aas
test
add
insl
mov
cs
jbe
out
shrl
cmp
inc
sbb
lods
or
add
xchg
into
fiaddl
repz
ret
lock
js
mov
icebp
dec
jmp
push
xor
cmpsb
adc
out
mov
pop
imul
in
sbb
sarb
mov
xchg
mov
add
clc
iret
mov
lahf
and
pop
xor
or
pop
shll
mov
push
or
cwtl
add
in
cmp
push
inc
repnz
decb
cmp
push
enter
sbb
push
subl
icebp
inc
mov
cmpsl
imul
adc
inc
add
scas
xor
ss
in
and
cmp
pop
test
into
out
ljmp
pop
into
stc
test
icebp
sbb
repz
xor
mov
ljmp
inc
add
arpl
call
fs
cmpsl
inc
cmpl
mov
sub
xchg
aam
or
mov
adc
ljmp
mov
rclb
mov
mov
pop
rorl
and
lods
jp
adc
mov
xchg
test
lahf
push
push
xchg
add
lahf
fstl
fcompl
icebp
lock
pop
xor
not
add
div
fimuls
xchg
repz
mov
sub
mov
pop
imul
push
or
nop
int
mov
fwait
push
mov
popf
push
pop
mov
sbb
cmp
inc
pop
pop
in
xor
adcl
sbb
andb
enter
sbb
repnz
stc
jg
icebp
dec
aaa
jne
dec
jno
xchg
daa
lea
mov
sub
mov
push
dec
and
nop
shlb
inc
push
sub
inc
add
movsl
xor
sbb
jl
dec
add
pusha
cmp
push
insb
add
les
iret
fmul
push
fldenv
push
cmp
dec
int
outsb
imul
push
scas
adc
mov
adc
in
push
push
movsl
dec
mov
cmc
popa
jae
lods
or
inc
mov
push
lods
out
movsb
xchg
push
fnstsw
push
psubusb
shrl
in
mov
test
cmpsl
ljmp
jne
loop
daa
jns
jbe
mov
or
adc
add
clc
and
mov
adc
test
sub
push
shrl
cmpsl
ret
pop
idivl
out
cs
fwait
sbb
sti
push
in
fistps
vmread
xchg
push
push
and
ss
xchg
push
stos
mov
inc
enter
push
out
mov
outsb
jae
orb
cmp
fnstsw
lock
add
int
mov
lock
lods
push
mov
push
push
sub
pushf
pushl
sub
insb
xor
mov
lret
fsubrl
pop
leave
cs
outsl
fidivrs
insl
dec
js
add
fdivrl
out
sbb
jno
mov
rol
mov
shll
push
mov
add
gs
enter
sbb
in
pop
sahf
imul
lods
lods
sbb
imul
dec
or
lea
xor
dec
cmc
mov
xchg
arpl
ljmp
nop
xor
std
cmc
inc
fstp
jg
and
addr16
stos
lahf
mov
adc
and
pop
push
sbb
xor
ds
inc
cwtl
lret
push
ds
jb
int3
pop
push
popa
add
fisubrs
repz
cmp
mov
jbe
jecxz
lods
lock
loope
cwtl
lock
xor
hlt
jbe
in
loopne
dec
jbe
rcll
add
and
repz
cmpsl
data16
dec
xchg
sarb
cmpsl
pop
push
aaa
add
ds
nop
xorl
xor
inc
mov
out
inc
out
or
cld
add
in
dec
icebp
icebp
xchg
mov
sub
fbld
idiv
or
sar
xchg
add
fbld
push
adc
adc
inc
lock
aad
jne
mov
pop
adc
push
lds
mov
lods
jl
and
ret
push
test
mov
add
dec
push
das
add
mov
add
add
add
cmp
pop
sbb
icebp
mov
scas
loope
push
addl
clc
mov
add
push
or
cld
mov
insb
cmp
in
out
scas
loope
fs
dec
jecxz
push
mov
movsl
inc
add
and
cmp
out
andb
pop
or
gs
dec
sbb
jnp
in
jo
lds
mov
and
sbb
hlt
jo
mov
adc
fidivs
notl
cmp
pushf
mov
test
xor
gs
xor
xor
in
adc
jg
sbb
push
cmp
mov
dec
js
movsl
add
add
mov
and
xchg
adc
sub
cwtl
mulb
jno
dec
and
fsubs
adc
inc
in
sub
jle
xchg
loop
jge
push
getsec
aas
aad
repz
daa
cld
push
movsb
cwtl
push
maxps
aad
out
sub
mov
sub
or
and
test
shlb
aad
mov
sahf
lea
push
sub
js
mov
push
nop
clc
inc
push
xchg
mov
out
push
scas
mov
shll
pop
mov
icebp
test
jge
inc
cwtl
test
mov
adc
outsb
sbb
test
pusha
in
dec
cmp
sub
inc
pop
dec
cmpsb
push
orb
fcomip
repz
js
mov
ds
aad
hlt
cld
cs
xor
aas
push
rcrl
je
pop
cmp
mov
std
push
icebp
sarb
xchg
adcl
sub
add
cld
aad
or
mov
add
shlb
lock
sub
mov
inc
je
out
je
ss
pop
jns
scas
inc
sbb
leave
dec
or
add
dec
or
stos
pavgw
xchg
mov
or
ss
mov
lcall
add
rcrl
icebp
push
subb
sub
and
hlt
pop
adc
dec
clts
sbb
rcl
mov
or
jne
aam
push
or
xchg
mov
movsl
sbb
fs
push
add
cli
adc
out
andl
in
jbe
dec
ds
insb
movsb
shr
out
sub
in
xchg
ja
in
test
stos
jb
pop
call
sarl
popl
mov
jne
negb
int3
fstps
add
imul
add
xchg
push
shlb
mov
ss
pusha
jp
xor
imul
cmpsl
mov
mov
mov
or
inc
adc
add
loope
leave
cmpsb
cmp
dec
and
pop
xor
out
cwtl
and
std
adc
jno
xchg
clc
fmull
jne
test
push
dec
scas
mov
push
jecxz
in
out
fisttps
scas
jnp
pusha
int
pusha
cltd
filds
test
push
push
loope
xchg
dec
adc
mov
sbb
aas
mov
and
aam
inc
pop
jno
mov
test
mov
test
mov
pop
add
aad
mov
sub
lds
dec
pop
xor
push
int
and
leave
sbb
inc
jle
in
aad
imull
std
inc
xchg
std
push
pushf
dec
ret
leave
clc
inc
add
comiss
fisubrs
daa
outsw
push
xorb
std
cmpsb
inc
sbb
dec
xchg
out
cmp
sub
je
outsl
jmp
and
fstp
pop
sti
or
ljmp
arpl
in
stc
sbb
and
push
cli
rorl
cltd
ror
jp
je
repz
sub
jbe
call
sub
test
pop
sub
jmp
inc
imul
aas
mov
dec
sbb
mov
cmpsb
cltd
hlt
cmc
mov
and
int
pushf
subb
mov
pop
push
push
cmp
push
insb
shlb
leave
and
xchg
sbb
xchg
jae
jp
cmp
mov
sub
push
imul
fs
stos
ljmp
push
jae
add
scas
shr
stc
test
or
ja
hlt
push
lret
and
lcall
adc
mov
lret
mov
mov
cmpsb
or
lds
pushf
mov
push
or
test
inc
mov
xchg
rcrl
les
icebp
mov
pop
pusha
repnz
inc
in
mov
and
into
mov
lret
pop
add
lcall
das
xchg
pop
xor
nop
stos
xlat
fistpl
cmpsb
loope
add
cmovns
arpl
cli
cmp
decl
push
out
cmpb
mov
xor
aaa
jns
push
lock
loopne
cmpsb
loop
lea
inc
repnz
jo
add
daa
imul
jge
push
mov
lret
in
adc
cmp
pop
insl
add
gs
leave
fidivrl
mov
test
sbb
and
mov
adc
scas
and
arpl
cmpsb
idivl
jb
jecxz
shrb
ds
je
xlat
mov
das
push
pop
adc
test
outsl
idivb
ret
mov
mov
inc
shlb
pop
dec
xchg
mov
hlt
inc
out
push
add
orb
xchg
pushf
push
mov
xor
cmp
add
out
adc
ljmp
and
xchg
addb
pop
xchg
lret
push
pusha
mov
jnp
dec
jns
lds
xlat
jnp
push
push
push
test
outsb
repz
or
lods
test
dec
lcall
insb
inc
adc
mov
or
push
pop
ret
or
xchg
sub
xchg
das
add
add
out
fdivl
mov
or
sub
fisubrl
pop
mov
shlb
out
inc
push
xchg
or
xor
mov
cmp
ret
pop
inc
jl
nop
mov
popf
dec
repnz
jns
xchg
sbb
adc
icebp
fucomip
mov
or
sbb
in
cwtl
add
sbb
mov
adc
fidivl
xchg
push
cmpsl
sbb
ret
sahf
mov
inc
sbb
push
rclb
xor
sub
bound
stos
xorl
neg
pop
popa
jmp
or
leave
movsl
push
lret
sbb
imul
lcall
dec
sub
gs
pushf
sar
insl
flds
out
dec
and
jecxz
sub
push
das
mov
sub
xchg
sub
mov
or
lcall
popa
xor
jae
loope
loop
xor
xchg
scas
push
and
mov
push
mov
jle
and
cmp
mov
xchg
lods
and
std
inc
mov
cmc
iret
clc
inc
mov
leave
xlat
pop
ret
leave
pop
xor
divb
mov
push
inc
mov
shlb
iret
mov
xor
popa
fisttpll
and
pusha
test
mov
out
test
int
mov
add
lods
gs
fdivrl
sub
xchg
in
sbbb
push
jge
in
pusha
push
enter
jns
int
pop
lds
xchg
adc
mov
das
and
es
jp
cmp
inc
pop
jo
adc
lock
popl
mov
push
lret
rolb
xchg
pop
or
mov
fildll
lret
adc
lret
push
cmpsl
ror
or
clc
pop
dec
cmpsl
push
cmpsl
sub
cmp
jne
cmp
ja,pn
aam
add
cld
repnz
adc
mov
mov
arpl
fcmove
pop
cmp
sahf
mov
mov
jmp
mov
insb
cld
push
fsubrs
dec
scas
push
lds
imul
aam
xor
or
xor
or
addr16
inc
mov
dec
inc
inc
out
sub
xchg
add
movsl
pop
fmuls
push
frstor
mov
push
cmc
mov
dec
or
xor
lret
sar
jmp
dec
fmuls
dec
push
xlat
into
in
push
sub
jmp
cmpsl
insb
pop
sbb
push
and
mov
mov
or
xchg
jle
cmp
or
xor
and
inc
dec
adc
hlt
test
loopne
sub
loop
hlt
or
out
les
sub
mov
pop
loopne
xchg
mov
and
xchg
inc
push
add
sbb
pop
dec
in
aaa
hlt
ret
mov
js
inc
jbe
adc
mov
fidivrs
shll
aam
xor
cmp
mov
in
je
or
cmp
sub
aas
cmpsb
cmp
je
mov
cmp
push
notl
mov
imul
insb
xchg
mov
es
mov
xchg
in
lds
fisubrl
adc
xor
fidivrs
xchg
fwait
pop
and
fidivrl
sbb
leave
fwait
dec
fists
hlt
je
add
movsb
hlt
fbld
loop
test
imul
cmp
es
adc
jg
dec
shrl
outsl
lods
scas
out
mov
js
incl
les
insb
pop
cmp
das
add
pop
fmul
mov
out
mov
icebp
aam
loopne
pop
xchg
pop
jno
stos
xchg
cli
add
inc
iret
mov
cwtl
das
pop
nop
stos
mov
xchg
xchg
push
loop
mov
out
imulb
iret
out
lret
hlt
and
pop
out
lds
xor
pop
pop
jbe
rolb
shlb
or
mov
int
inc
cmpsl
arpl
add
mul
jecxz
cmp
mov
out
int3
clc
xchg
loopne
add
sub
mov
repnz
inc
and
adc
sub
std
ljmp
lea
or
mov
nop
xor
mov
insl
mov
cmp
mov
mov
jge
cmp
icebp
dec
jge
xchg
bound
inc
fistpll
xchg
aaa
std
js
int
int3
push
fldt
push
adc
mov
test
popf
or
fmull
xor
push
pop
shlb
setae
add
add
mov
test
dec
add
mov
and
bound
cmp
xchg
xor
daa
xchg
lahf
mov
jo
out
jo
pop
mov
pop
outsb
cmpsb
negb
xchg
sub
dec
pusha
in
or
aaa
cmp
xchg
sti
mov
loopne
add
pop
movsb
fsubs
inc
sbb
mov
sub
cmp
sub
into
sbb
fwait
push
fs
mov
adc
out
sub
stos
fsts
adc
loopne
pop
push
scas
add
push
fildl
orb
js
mov
add
and
jmp
jg
mov
ficoml
jecxz
mov
lahf
out
add
mov
pop
inc
lds
and
pop
pop
pop
insb
jmp
outsb
leave
stc
lret
test
cmp
test
sahf
mov
mov
dec
dec
mov
cs
and
sub
cmp
out
dec
push
xchg
xchg
pop
inc
sub
ljmp
mov
std
pop
push
mov
andb
loope
xchg
sub
push
push
xlat
mov
mov
jge
cld
stos
in
js
lret
mov
sbb
lods
out
xchg
frstor
mov
cli
rclb
inc
jno
adc
lock
mov
mov
cmp
jg
outsb
mov
loopne
daa
inc
testw
roll
mov
pop
rorb
ss
xor
cltd
or
jno
movsl
aam
test
icebp
into
add
jmp
inc
jb
or
leave
add
enter
push
notl
out
stos
cmpsl
sbb
pop
out
ret
shrl
dec
lcall
or
xchg
jle
sarl
das
popf
pop
jne
xor
or
adc
out
popa
fisubrl
xchg
push
jge
es
xchg
ret
je
and
sbb
cmp
mov
test
imul
add
pop
or
jle
pop
fsubs
mov
pop
jp
loopne
xchg
sbb
pop
scas
or
shlb
mov
fldt
pop
jns
cmc
shll
pop
adc
out
inc
scas
mov
out
jno
cmpsb
sbb
jg
leave
push
sbb
ljmp
out
mov
jae
loope
mov
ss
xor
jp
icebp
jns
lret
mov
outsl
or
loop
loop
or
push
in
xchg
sti
movsb
xor
mov
sub
test
push
ficoms
adc
cs
dec
insb
cmp
lea
dec
jbe
sub
leave
inc
pushf
mov
ja
pop
sbb
bound
sar
mov
arpl
test
jp
and
scas
testl
and
mov
adcb
call
repnz
mov
xchg
push
lods
aaa
js
mov
pop
inc
sub
ror
xor
jno
roll
mov
movsl
cli
hlt
mov
int3
aam
in
mov
pop
sub
lret
add
pop
xchg
mov
push
mov
inc
jl
pop
xor
jle
imul
sahf
inc
in
fs
inc
negb
jns
fisttpl
std
dec
lds
stc
add
sbb
add
mov
enter
cmp
aaa
inc
btcl
lret
shlb
sub
jns
sbb
or
adc
in
mov
mov
lahf
sub
in
mov
cmp
stos
sbb
pop
mov
addb
rolb
or
sbb
aas
divl
sahf
loope
adc
dec
mov
sbb
cmp
std
push
lock
lahf
jg
add
push
push
idivb
ss
push
jno
sbb
sub
loopne
movsl
adc
xorl
addl
es
les
cmp
adc
mov
aas
cmp
es
in
stos
test
jbe
mov
iret
test
mov
ja
jp
cltd
jae
adc
adc
popf
ss
push
sub
les
pop
lea
mov
pop
mov
popa
arpl
xor
daa
xchg
mov
cmc
mov
outsb
inc
push
add
std
xchg
dec
sbbb
hlt
xor
adc
cmp
outsl
adc
in
jg
ds
pop
xchg
call
or
dec
test
inc
ror
push
lods
push
aas
call
dec
icebp
popf
adc
roll
sbb
cmpsb
outsl
adc
add
jle
inc
insb
push
arpl
xchg
lods
lcall
sarl
mov
push
mov
pushf
mov
or
stos
adc
add
test
loop
icebp
loopne
xchg
xor
insl
fidivrs
xchg
sub
nop
pop
and
jmp
cmp
mov
stc
dec
pop
fs
mov
inc
cmpsl
lahf
fisttpl
loop
or
mov
enter
outsl
dec
pop
adc
pop
xchg
pop
pop
dec
mov
push
fbstp
test
jno
icebp
arpl
cmc
rorl
add
cmpsb
mov
cmp
dec
push
aam
lcall
lds
sbb
adc
and
fsubrl
mov
daa
and
sbbb
push
aam
sbb
nop
mov
mov
out
xor
sub
adc
imul
clc
lcall
xsha1
cmpsb
or
je
sbb
mov
cmp
lock
ret
pop
add
dec
movsl
cld
add
cmp
mov
inc
je
adc
cld
add
fdivrp
xchg
add
xchg
movsb
or
add
lcall
ja
loop
inc
sbb
sbb
stos
cwtl
or
push
dec
int3
cmp
push
inc
repz
stos
loopne
ljmp
cli
mov
lods
popa
pop
xchg
fdivs
xchg
cs
jne
testb
jl
std
stos
out
cmc
pop
stc
outsb
jbe
jp
mov
mov
aam
pop
xor
fidivs
adc
push
sbb
imul
mov
fdivrl
jle
fucompp
sti
mov
add
hlt
xchg
repnz
dec
mov
aaa
cmpsb
xor
push
xchg
or
test
iret
js
pop
ret
pushf
mov
and
mov
sahf
xor
mov
shl
mov
fstl
aad
popa
mov
sbb
xor
jno
add
stos
and
dec
outsb
sbb
fstl
jnp
cmp
je
lods
adc
ret
ss
sarb
adc
inc
aam
mov
addb
push
out
inc
adc
inc
add
rorl
adc
test
jmp
enter
data16
das
jmp
clc
push
fdivr
push
mov
mov
movsb
stos
lods
inc
push
push
lds
lds
mov
popf
out
cmpl
sbb
cmp
dec
pushf
movsb
in
pop
pop
fistl
or
jne
lds
loope
and
mov
and
bound
push
mov
loopne
add
lcall
je
or
std
inc
pop
mov
mov
mov
sbb
fbstp
in
or
add
arpl
sub
stc
mov
and
mov
sbb
mov
imul
imul
scas
int
out
xor
arpl
xorl
jnp
fldcw
or
jne
mov
icebp
cmc
cld
mov
add
mov
jbe
cmpsb
pop
jecxz
into
mov
push
popa
fadds
mov
lds
or
adc
mov
mov
lds
mov
pop
mov
jecxz
add
incl
adc
cld
sub
addr16
aas
arpl
adc
sub
jns
add
std
icebp
cmp
jge
push
hlt
loopne
stos
popl
xor
dec
in
cwtl
xchg
xchg
xor
int
cltd
sub
roll
adc
movsl
jmp
out
jle
cltd
mov
ds
loop
addr16
dec
inc
mov
add
pop
gs
cltd
lcall
cmpsl
cli
lock
push
aad
push
les
iret
mov
popf
mov
in
pusha
stc
fs
fs
cld
xchg
push
dec
mov
or
in
xor
cltd
inc
jo
lcall
scas
mov
fadd
dec
into
mov
insb
xchg
push
repz
lahf
repz
adc
and
jo
xor
or
sahf
pop
enter
fdivp
pushf
mov
bound
xchg
inc
mov
rcrl
fcoml
jnp
ljmp
fbstp
pop
xchg
sbb
aas
inc
cmovb
dec
push
nop
pop
xor
into
push
cmp
shl
rorl
in
xor
fwait
cmp
cmp
outsb
cmc
lds
mov
shrb
out
sahf
pop
inc
add
leave
mov
arpl
sbb
inc
scas
repz
jle
xor
jae
xor
ret
std
xchg
fisttps
jg
inc
add
fcmovne
out
jnp
cld
outsl
mov
stos
push
mov
cmc
add
aas
sub
aad
inc
pop
les
mov
xchg
fistpl
loope
bound
xor
in
push
jl
outsl
mov
lea
push
bound
fs
inc
mov
push
outsb
cmpsl
popf
aad
xor
ja
jns
jmp
repnz
adc
inc
or
adc
daa
or
mov
jb
repnz
xor
pop
jnp
scas
mov
xor
sub
sbb
xchg
or
pop
nop
adc
insl
sti
inc
inc
xor
dec
xlat
mov
sub
shl
push
xchg
mov
call
loopne
mov
push
cmpsl
and
dec
push
cmc
pop
cltd
and
in
cmp
inc
and
pop
sbb
jae
inc
lods
insl
loopne
push
js
lret
jle
bound
cwtl
push
add
sahf
push
adc
notl
sub
dec
js
sbb
and
push
or
ds
jg
jecxz
test
mov
cmc
shll
or
jp
aaa
stc
adc
subl
add
fnstcw
dec
push
inc
or
out
rclb
sbb
into
sbb
mov
fwait
aam
lret
sub
push
xor
out
cmp
mov
jecxz
push
push
je
fcmovnbe
dec
in
pop
mov
jno
and
sbb
fldl
ud1
ret
call
xchg
push
stos
xor
lds
enter
mov
mov
add
loopne
rcrb
fsubrs
xchg
lods
mov
push
fucomp
push
xchg
hlt
xchg
orb
or
adc
rorb
or
or
jle
xchg
or
push
cmp
mov
dec
sbb
cld
dec
fisttpll
test
arpl
jno
and
mov
jno
test
imul
or
sbb
mov
push
push
and
mov
mov
dec
inc
cmp
add
aas
imul
add
pushf
test
scas
sub
lret
repnz
adc
pop
fiadds
sub
or
std
xchg
adc
inc
sbb
xlat
stc
pop
addr16
and
sub
lods
dec
divl
xchg
push
leave
add
arpl
cmp
outsl
push
sub
test
lock
popf
ret
sub
push
getsec
dec
mov
shrb
repnz
add
or
bound
push
scas
xchg
cmp
jle
adc
repz
fistl
xchg
dec
add
sbb
sti
cmp
repnz
xchg
lea
xchg
dec
sbb
sbb
addr16
xor
pushl
mov
test
pop
jmp
mov
dec
out
pop
jns
lods
sti
mov
mov
mov
in
mov
push
ja
pusha
push
mov
gs
cld
push
lret
add
divl
movsl
inc
aas
push
mov
fdivl
or
pop
mov
out
in
inc
repz
test
mov
shlb
or
lahf
popf
mov
test
add
aaa
dec
sub
std
ljmp
xor
mov
inc
das
and
push
shr
push
xor
mov
inc
push
ret
cmpsb
push
mov
aad
fisubrl
test
lock
jbe
data16
icebp
dec
dec
sub
shl
push
cmp
lea
mov
call
jo
and
sbb
in
movsl
pushf
fs
scas
adc
dec
mov
ljmp
inc
adc
ret
mov
mov
xor
pushf
cmpsb
fwait
out
pop
mov
in
jb
xchg
mov
xor
fldcw
xor
xor
rcrl
and
mov
cli
cmp
pop
jb
enter
shrl
mov
prefetchw
or
cmp
aam
out
js
rcrb
mov
jle
dec
es
gs
inc
mov
push
mov
stos
pop
lahf
push
and
dec
in
add
rolb
inc
dec
mov
cmp
lods
lret
fdivs
imul
jecxz
sub
cmpsl
sahf
or
sbb
stos
stos
into
sub
jmp
push
aam
pushl
mov
lods
cmp
jae
int
adc
adc
rclb
pop
dec
test
fwait
loope
sti
adc
data16
cltd
or
mov
or
xor
cltd
cld
jbe
inc
lods
gs
out
fimuls
jmp
add
sub
lahf
js
mov
or
mov
jbe
push
inc
push
cmp
push
cmp
mov
imul
push
xchg
insl
ljmp
jmp
scas
jno
sti
daa
pop
popa
sbbb
loopne
xchg
xorl
xchg
test
call
sub
cmpb
mov
pop
mov
sahf
sarb
xor
sub
sub
ss
inc
sbb
out
fnstsw
or
imul
dec
jle
sub
mov
hlt
cmp
lds
jmp
divb
xor
ret
in
push
xor
jmp
nop
ljmp
cltd
addb
jge
xor
pushf
or
mov
pop
cmp
ds
pushf
sub
lahf
mov
mov
sbb
cmpsb
inc
shlb
daa
scas
stos
mov
call
in
mov
pop
addb
mov
fnstenv
xorb
mov
and
mov
notl
rcl
call
pop
jmp
dec
mov
or
fisubl
aad
fnstenv
mov
xchg
mov
dec
lcall
sti
imul
fiadds
inc
bound
orb
aaa
ror
push
push
ljmp
push
jo
pop
push
mov
xchg
hlt
xor
mov
jbe
mov
pop
xchg
cmp
jne
add
xor
ljmp
movsl
in
push
xchg
dec
mov
testl
xchg
rol
add
cmp
cmpsb
ljmp
xor
scas
sbb
cmp
and
sub
xor
pop
dec
push
test
or
int
ret
xor
or
jg
dec
mov
or
data16
dec
sbb
mulb
adc
je
rcrl
je
fwait
test
mov
ja
cs
gs
or
inc
and
ja
clc
ljmp
sub
dec
js
add
adc
inc
pushf
adcl
or
add
sub
pop
pusha
xchg
lcall
out
inc
jb
cltd
ret
xchg
mov
push
enter
icebp
mov
fistpl
adc
ss
or
jle
outsl
jno
sub
in
push
je
ret
sbb
or
inc
xor
mov
bound
xchg
mov
shrl
sub
mov
xor
lea
xchg
js
outsl
push
mov
loopne
in
push
mov
ljmp
sub
pusha
subl
dec
imul
mov
inc
and
jnp
dec
repnz
mov
cld
fmuls
xor
cmp
mov
mov
dec
jecxz
ss
cmpl
xchg
mov
imul
sti
add
push
lret
jl
sbb
xor
jbe
out
scas
and
imul
push
or
pop
stos
shlb
mov
lcall
js
xor
les
cld
pop
pop
sbb
popa
mov
nop
stos
pop
je
sbb
and
sbb
ja
dec
mov
cltd
xor
movsl
popa
clc
ret
mov
daa
pop
test
sbb
iret
stc
aas
in
inc
sbb
mov
and
jmp
xchg
sbbl
and
mov
sti
outsb
ja
mov
movsl
xchg
jo
mov
and
cmp
mov
sub
sbb
aaa
imul
orl
mov
mov
mov
xchg
jge
pop
in
loop
inc
cltd
imul
xlat
les
ja
in
mov
push
xchg
mov
test
iret
inc
mov
and
loop
inc
xor
sbb
aas
clc
push
xchg
sub
pop
ret
subb
pop
cmpsb
dec
add
mov
test
stc
pushl
xor
pop
xchg
inc
fistpl
add
lret
mov
mov
pusha
push
jl
mov
imul
xchg
add
sub
dec
mov
loope
push
sbbl
inc
sub
mov
jb
mov
imul
add
pop
gs
and
inc
push
adc
inc
lea
lods
adc
fbstp
cmpsl
lahf
xchg
push
loop
jle
lods
xchg
aas
sarl
dec
js
outsl
ret
stc
insl
cmp
mov
movsb
std
aas
out
xor
pop
mov
mov
cmpsl
and
or
in
cltd
cltd
cmp
pop
jg
cmpsl
inc
imul
mov
rcl
stos
in
mov
pop
fdivrl
dec
mov
stos
cmp
mov
je
push
inc
bound
aam
mov
in
loop
stos
sub
adc
jb
es
adc
add
add
ret
xor
jecxz
jge
mov
dec
dec
mov
push
dec
aad
xor
mov
sub
xor
lret
jno
movsl
pop
dec
dec
mov
in
jmp
jae
jmp
mov
add
mov
adc
jle
and
adc
push
jl
or
mov
sub
push
and
adc
push
out
scas
jne
enter
xchg
xor
sarb
add
test
or
stc
xor
adc
cmpsb
pop
add
icebp
cmp
or
jmp
mov
cmp
push
jne
sti
loope
rcl
xor
pusha
mov
scas
shrb
pop
add
idivl
sbb
cmp
lock
int
stc
je
mov
insb
and
loopne
push
and
jg
loopne
pop
ret
movsb
add
jle
xchg
xchg
test
hlt
sti
and
adc
add
lock
prefetch
mov
ret
mov
test
mov
sub
fistl
in
loopne
or
jle
imul
xor
cmpsb
aad
adc
add
and
addr16
fsubp
das
pop
pusha
pusha
jb
inc
xor
ds
in
fsubr
add
scas
dec
sbb
fmull
mov
cmp
add
fcmovb
mov
jnp
mov
inc
es
xor
aam
pop
or
mov
sbb
xlat
or
fisubrs
xchg
push
xchg
daa
cs
add
stos
fidivrs
sub
inc
stos
xorl
mov
ret
shlb
push
mov
lea
cmpsl
repz
in
push
sbb
push
pop
pop
inc
push
aaa
cmp
mov
je
push
fsubs
mov
int
adc
xor
dec
and
cmpsl
in
pop
insl
sbb
test
in
push
outsl
test
frstor
jl
mov
fdivs
mov
mov
test
bound
xor
lret
into
mov
cmp
sub
ret
cmp
and
out
xchg
outsl
les
jmp
ds
mov
push
and
mov
ds
dec
mov
je
sarb
or
stc
mov
sbb
push
rol
out
loope
push
cmp
mov
sub
stc
loopne
dec
aad
aad
fsubrs
jge
nop
push
xor
inc
mov
lods
cs
pop
cmp
outsl
mov
pop
dec
sahf
adc
adc
scas
and
push
es
sub
or
test
push
jo
inc
loopne
mull
cwtl
data16
cmp
imul
sahf
ljmp
pop
pushf
mov
push
fsubrl
inc
dec
xorb
xor
xchg
inc
int
cmp
mov
jle
pop
cmp
in
fcoms
aam
jl
xlat
adc
movsb
lret
dec
fsubrs
dec
xor
push
ds
lahf
adc
jg
mov
adc
jmp
sub
int
shlb
jecxz
cmp
sub
lock
mov
mov
jecxz
in
mov
rcll
sub
push
push
lock
cmp
repnz
push
mov
iret
fcompl
adc
stc
lock
sub
out
ret
mov
sbb
jbe
arpl
dec
test
insl
xchg
inc
jmp
std
cmp
xor
into
cltd
xchg
orw
dec
add
mov
and
lahf
lret
sub
sbb
enter
pop
call
mov
gs
dec
loop
lret
sub
sub
sti
std
push
pop
push
fcomps
loopne
dec
daa
sbb
shr
fstps
outsb
jecxz
bnd
out
xor
mov
bound
sub
idivl
lea
rolb
mov
adc
fsubp
xchg
add
les
in
mov
inc
cmc
adc
call
xchg
add
xchg
mov
aam
dec
and
lock
cs
mov
lods
xor
outsb
ret
mov
jnp
and
rcll
lock
out
push
lret
adc
sbb
cs
cmovl
loopne
mov
push
adc
stos
push
pop
loop
arpl
sub
mov
mov
movsl
xor
mov
dec
ds
or
int
ja
ja
xchg
and
fiadds
das
xchg
pusha
into
stos
and
sar
inc
dec
jmp
sub
inc
jne
lcall
nop
or
scas
jmp
subl
iret
lcall
lods
call
lea
enter
dec
jne
or
in
jmp
sbb
cmp
add
jl
stos
cmpl
ret
xchg
cwtl
push
and
outsb
mov
enter
xchg
shr
mov
lahf
push
call
cmpsb
sub
repnz
popa
je
cmc
dec
fists
mov
leave
addb
xor
scas
adc
jbe
pop
into
jb
cld
jno
sub
call
insl
dec
aam
mov
pusha
add
sbb
mov
mov
push
push
sbb
push
loopne
or
pop
leave
mov
cld
std
into
lds
mov
jecxz
das
in
inc
jns
out
add
and
sub
inc
test
mov
pop
cltd
es
cmp
popf
fsub
das
jge
pop
xor
dec
subl
mov
push
sbbl
aas
dec
repz
push
jbe
mov
pop
inc
inc
cli
inc
or
aad
ja
jbe
lods
ss
xor
repnz
aaa
add
mov
jno
pop
lret
push
ljmp
aas
fs
das
push
push
int
testl
aas
mov
xor
subb
in
fisubrl
ret
rcpps
arpl
pop
dec
jbe
jnp
shl
dec
adc
insb
test
lods
jecxz
test
adc
mov
or
add
push
or
lret
jecxz
pusha
jne
mov
popf
xchg
loopne
xor
imul
scas
icebp
xor
out
ret
shrb
inc
xor
dec
push
and
mov
mov
adc
out
dec
test
add
sub
decl
xchg
scas
cld
clc
ss
iret
or
jecxz
cmp
inc
mov
push
jl
sbb
ljmp
jbe
stos
cmpsb
movl
inc
or
sahf
scas
sub
int
cmp
jns
loop
push
fwait
or
aad
fwait
outsb
cmc
andb
adc
stc
mov
pop
aaa
sbb
adc
into
movsl
push
jne
pop
lahf
lock
mov
scas
gs
adc
ret
xorl
pop
push
divb
les
inc
in
fdivl
arpl
sub
or
xchg
mov
test
add
cmp
xor
data16
js
cwtl
nop
lret
add
push
mov
push
ret
jae
lods
cltd
test
cmpsb
cltd
sub
test
fisubrl
push
fiadds
mov
cmpsb
pop
jb
out
enter
dec
mov
or
aad
mov
push
lret
adc
in
in
mov
fldenv
in
movsb
or
and
cmp
adc
movsb
cltd
push
lods
add
in
insb
arpl
loope
push
mov
shll
ljmp
push
aad
push
xor
into
xchg
stos
inc
xchg
pop
or
inc
shll
test
pop
or
jge
arpl
sub
inc
and
sbb
mov
popa
adc
and
stc
or
incl
dec
push
andl
stos
mov
mov
mov
sbb
pop
cwtl
arpl
mov
inc
jne
test
popa
sub
mov
push
jb
or
xlat
mov
fwait
les
fimuls
int
sub
inc
jmp
aas
push
int
push
icebp
cmp
and
aas
or
cmp
pop
clc
mov
inc
dec
rorl
push
cmp
inc
push
add
pop
push
arpl
in
cmp
fstpt
dec
mov
scas
or
movsl
outsl
fisttpl
js
icebp
and
call
sub
dec
insb
and
push
or
loope
mov
jmp
adc
and
out
cmp
sbb
stc
pop
cli
sbb
pop
push
cmc
add
mov
push
sub
imul
jl
inc
mov
dec
hlt
cmpsb
cmp
push
or
adc
add
test
cmp
shlb
cltd
pop
xorb
mov
add
add
test
adc
mov
pop
and
rcrl
sbb
pop
sbb
in
sub
ret
sub
int3
std
dec
gs
cmp
leave
dec
cs
mov
js
fwait
and
pop
cltd
jo
inc
lahf
test
add
push
in
ret
int
jg
pushf
nop
dec
in
sbb
push
cmp
hlt
into
mov
call
cli
ljmp
push
xor
mov
loopne
dec
push
cli
hlt
stos
aaa
jno
das
fcmovnb
les
add
leave
mov
adc
ljmp
movsl
mov
inc
out
fsubrs
lods
sub
push
xchg
mov
sarl
lods
insb
je
loope
push
lods
jbe
imul
lahf
adc
test
pop
lea
movq
stos
pop
pop
lret
sahf
leave
inc
cmp
sahf
xchg
jp
jo
jge
notl
inc
icebp
rol
jb
cmp
inc
scas
lret
push
mov
daa
sbb
jnp
mov
push
rcll
into
data16
cmp
and
loopne
je
adc
dec
and
adcb
mov
imul
out
rolb
push
aam
dec
int3
xor
sahf
push
outsb
lock
lret
std
or
mov
sbb
push
mov
leave
mov
push
sbb
and
mov
fs
bts
aam
mov
shlb
inc
jge
adc
call
add
jecxz
lea
mov
in
xor
pusha
push
xor
sbb
and
sbb
addl
mov
dec
ret
call
mov
cmp
mov
sub
dec
hlt
popa
test
mov
xchg
aaa
insb
xchg
adc
push
fscale
mov
scas
dec
rol
dec
cltd
xor
and
ljmp
test
out
inc
leave
jns
push
mov
inc
fistpl
inc
repz
add
cs
ficoms
add
sarb
inc
enter
and
fcoml
dec
mov
mov
jns
dec
jp
xor
jle
aam
jp
mov
push
cli
subl
jno
inc
out
inc
flds
in
in
push
sub
shlb
cmp
int
push
cmp
and
add
ficoms
lret
pushf
mov
mov
test
adc
stos
mov
pop
mov
push
cli
fisttpll
push
push
out
jmp
cmp
shrl
mov
daa
imul
pop
aaa
outsl
sub
sahf
sbb
sub
aam
dec
loope
fimuls
inc
dec
and
push
add
dec
mov
pop
sbb
jecxz
in
jns
mov
fistl
sub
mov
clc
xchg
mov
js
jbe
and
add
or
leave
mov
daa
iret
inc
shll
sbbl
jb
sub
push
loop
jl
add
bound
ss
adc
adc
push
test
sbb
push
add
push
lods
xchg
je
adc
push
push
lea
mov
pop
jge
icebp
xchg
cs
cmc
mov
enter
int
mov
sub
faddl
cmpsb
call
fmuls
shl
ficoml
cld
imulb
xchg
mov
aad
out
aas
imul
or
dec
test
in
mov
mov
popa
cwtl
adc
xchg
xchg
lcall
test
pop
movsl
in
scas
jmp
mulb
sub
idivl
fwait
subb
pop
adc
nopl
rcll
cmp
mov
mov
in
mov
cmp
cmp
sub
xor
xchg
push
lea
lcall
enter
dec
das
cmp
push
xor
stos
rclb
mov
rcrb
mov
sbb
fiadds
mov
xor
mov
icebp
idivl
daa
insb
adc
or
dec
add
and
leave
mov
daa
inc
test
sub
in
and
and
outsl
sub
test
in
test
xor
or
addr16
xchg
outsb
popa
repz
loope
mov
adc
adc
out
lock
and
bound
cmpsl
les
das
test
cmp
mov
outsb
inc
and
mov
test
xor
and
mov
clc
lret
jge
ret
cld
or
cld
fdivs
mov
sub
aad
sub
inc
pop
pop
push
dec
cmp
fucomip
cmpsl
pop
jo
jge
shlb
cld
orb
sub
movsl
dec
daa
arpl
xor
adc
insl
or
fisttpl
add
out
jl
dec
pushf
jg
cmp
inc
or
xchg
neg
rcrl
lcall
adc
out
and
adc
mov
add
ret
out
sub
js
push
sub
test
push
push
adc
ret
repnz
out
lahf
add
pop
in
flds
lods
jnp
ret
mov
adc
and
orb
mov
xchg
inc
cli
or
mov
mov
inc
add
jmp
arpl
loopne
fimuls
xor
test
icebp
push
cli
pop
popf
sbb
out
xchg
stos
int3
mov
or
add
repnz
mov
or
fsubrs
sti
es
jg
mov
mov
fs
push
sahf
mov
insl
insb
pop
aad
sti
call
fmull
cmpsl
lret
pusha
jo
jecxz
ss
fnstenv
push
dec
push
outsl
bound
lock
flds
pop
xchg
in
mov
loope
lret
xor
jns
into
ljmp
out
add
pop
push
incb
inc
outsl
push
xchg
cli
inc
pushw
sbb
negb
xor
jno
jb
mov
aam
dec
push
imul
mov
adc
test
and
insl
out
test
sbb
mov
ret
add
fcompl
addb
jae
aaa
jae
sbb
mov
and
pop
fwait
sub
and
pop
lock
mov
xor
in
jge
aaa
or
mov
cli
hlt
push
jle
push
cmp
movsl
xor
xchg
inc
jbe
pop
pop
xor
lea
dec
lds
fisttps
pop
mov
dec
and
scas
test
ss
popf
and
sbb
push
test
push
shl
out
mov
scas
scas
jae
ds
jmp
mov
out
enter
sbb
js
pop
xchg
mov
test
sti
cmc
std
fidivl
in
aam
imul
dec
daa
xor
mov
add
loop
fldl
lock
jbe
clc
in
adc
rorb
xchg
adc
cmp
push
jmp
xor
call
popf
test
in
repnz
imul
divps
xchg
xor
das
jmp
outsb
adc
mov
or
adc
push
add
add
cltd
push
xor
inc
in
or
scas
testb
push
jne
pushf
add
dec
xchg
xor
mov
inc
or
xor
add
call
push
outsl
adc
mov
test
gs
sub
inc
imul
or
test
dec
add
fadd
xlat
pop
jl
out
sub
popf
icebp
adc
in
lea
rcr
lods
testb
mov
pop
push
xchg
aad
adc
sbb
jmp
mov
fnsave
insb
push
neg
push
aam
sbb
xchg
sub
lods
out
jnp
sub
leave
jecxz
test
xor
aad
xchg
sbb
fsts
sbb
ja
inc
jg
addr16
iret
cmc
dec
xchg
adc
outsb
or
mov
cmp
ja
ljmp
ss
gs
pop
jl
xchg
hlt
pop
sti
add
add
repnz
aad
int
xchg
inc
jmp
subl
mov
cmc
and
clc
push
mov
add
sub
mov
ret
lea
mov
and
jg
js
imul
push
mov
dec
or
xor
dec
in
roll
sub
das
out
mov
adc
ss
bound
stc
imul
xor
popl
adc
outsb
arpl
out
xchg
daa
xchg
adc
test
and
lea
jb
jno
inc
pop
leave
lret
ljmp
out
dec
cwtl
fisubl
dec
gs
xchg
mov
insb
add
sbb
int3
push
sub
lock
call
adc
and
flds
xchg
cmp
mov
in
popf
aaa
pop
sarl
nop
or
movsl
jo
pop
jp
jle
cmc
mov
in
imul
cmp
pcmpgtd
divl
bound
xor
in
push
jbe
lret
mov
loopne
cmpsb
js
cmc
int
mov
sub
mov
add
adc
lods
dec
call
mov
into
test
sahf
ret
adc
jne
or
out
ja
lods
add
mov
push
xlat
fmuls
lock
mov
sbb
inc
mov
fsts
icebp
sbb
inc
mov
mov
xchg
int
scas
xchg
pop
fiaddl
push
and
out
add
and
cli
sti
in
mov
and
imull
mov
inc
push
bound
mov
repnz
sahf
xchg
mov
in
insb
out
cmp
cmpsl
or
fbld
popf
scas
outsb
mov
jecxz
mov
jno
push
out
outsb
mov
and
xorl
movb
pop
imul
enter
cmp
aas
xchg
rcrl
dec
stos
testb
mov
and
push
pop
repnz
sub
in
xchg
mov
inc
insl
xor
cs
into
mov
push
test
inc
jns
pusha
cmp
out
int
js
sbb
mov
mov
rclb
lods
aas
cmp
rcll
dec
popa
sbb
adc
out
inc
sbb
mov
pushf
push
enter
loopne,pn
push
jle
push
ret
sub
xchg
lahf
fadds
pop
andl
and
shlb
or
aaa
adc
inc
and
cs
mov
mov
movsl
pop
mov
test
push
js
cmp
pop
push
mov
push
das
daa
repnz
mov
mov
mov
push
pop
jne
xlat
cmp
or
loopne
sbb
jne
and
mov
fwait
test
je
fs
cltd
in
daa
leave
sbb
pop
cmp
sbbl
jg
cmp
or
ret
mov
rcll
pushf
mov
sbb
popa
sahf
aas
aas
out
sub
sbb
jg
pop
pop
mov
out
push
or
sub
jge
cltd
filds
mov
mov
in
jg
dec
cwtl
pop
pop
fprem
pop
add
dec
push
inc
cltd
fadds
lds
pop
out
ret
jno
int3
ret
adc
inc
mov
and
shrl
call
movntq
sbb
mov
adc
xor
cmpsb
mov
jae
pop
and
lret
mov
push
test
sbb
mov
jae
push
adc
loopne,pt
aas
icebp
lods
int3
sub
jl
subl
lock
adc
arpl
fdivl
test
mov
pop
jecxz
jbe
mov
movb
clc
int
jle
ret
cld
in
jae
xor
popa
rorb
mov
jp
shlb
add
cmp
and
add
test
lret
mov
mov
push
xchg
imul
nop
clc
mov
mov
pop
xchg
sbb
push
or
mov
inc
inc
push
pusha
bound
inc
ficoml
jmp
aam
jge,pn
push
mov
and
jb
insb
mov
aaa
aas
dec
outsl
xor
adc
jg
pop
mov
inc
stos
mov
movb
fsin
aad
mov
imull
fwait
test
adc
cmp
int
out
and
sub
aaa
cld
lods
push
cmpsl
jb
xor
fidivrs
xor
icebp
inc
dec
mov
cmp
sbb
rcll
cvttps2pi
pop
unpckhps
and
mov
adc
dec
sub
pop
xchg
push
ljmp
mov
lods
inc
adc
jbe
sub
adc
ret
sbb
inc
nop
je
popa
stos
int
mov
xor
add
or
mov
stc
xchg
sub
add
dec
ficompl
shlb
fmuls
or
insl
mov
repnz
pop
orb
mov
xor
add
sbb
xchg
sbb
testl
or
mov
add
pop
adc
and
mov
push
mov
dec
xor
mov
bound
jecxz
lock
push
xor
inc
mov
or
test
or
leave
mov
jmp
xchg
ds
addr16
repnz
mov
out
andl
pop
push
insl
cmp
mov
add
mov
mov
arpl
lods
inc
adc
or
cmpsl
cmp
loopne
out
xchg
sbb
inc
jmp
hlt
and
stos
ja
sub
push
xor
sbb
and
mov
popf
into
enter
and
jmp
nop
sub
xchg
call
or
cmp
cmp
sbb
addr16
xchg
vmovaps
or
sub
mov
int
sub
push
jle
and
test
imul
mov
inc
divl
or
into
xchg
imul
xor
pop
insl
inc
dec
jmp
mov
pop
sbb
and
scas
aad
inc
repz
add
pop
mov
mov
loopne
sub
jnp
dec
xorl
test
dec
std
sbb
fiadds
fildll
pop
call
xchg
mov
pop
addr16
mov
mov
sub
fiadds
mov
jne
sar
sub
or
or
cltd
and
fstpt
xor
popa
adc
popa
xor
adc
pop
jo
and
loopne
adc
pop
add
mov
sub
mov
dec
shlb
adc
call
vunpckhps
add
mov
sbb
popf
stc
and
imul
loope
stos
push
out
mov
inc
aam
pop
mov
je
sub
add
push
faddl
mov
dec
xor
pop
or
mov
xor
popa
mov
imul
or
rolb
aad
dec
loopne
andl
cmp
dec
or
in
outsb
hlt
rcll
jae
xchg
nop
stos
mov
out
cs
fisttpll
ljmp
ror
mov
add
icebp
sbb
xchg
mov
mov
jbe
or
xchg
xchg
pop
aad
mov
gs
out
or
cmp
test
popf
xor
je
insb
cmp
mov
cmp
movsb
sub
inc
adc
xlat
test
mov
fcmovbe
push
xchg
adc
push
cmp
mov
std
insb
mov
jno
lret
call
int
aas
mov
lret
rcr
pop
int
adc
sarl
mov
jo
lock
shrl
stos
out
lods
dec
and
xchg
in
push
fst
dec
push
xchg
js
icebp
xorb
out
and
dec
fs
scas
sahf
sub
xchg
xlat
call
roll
maskmovq
notl
xchg
xchg
xchg
fwait
push
sbb
jecxz
jae
in
fisttps
mov
jb
dec
loope
sbb
sbb
andb
test
adc
inc
dec
les
ljmp
out
sbb
imul
adc
mov
dec
aas
into
cmc
and
cli
aam
mov
jecxz
inc
dec
adc
scas
aad
jle
or
push
or
pop
ret
data16
push
fs
test
add
iret
subb
adc
inc
cmpsb
jge
xor
popa
int3
insb
aam
sub
sub
inc
ja
movsb
fcomps
xchg
dec
lods
or
aad
pop
pushf
sbb
in
or
inc
jbe
adc
psrlw
add
pop
sti
cmp
lret
mov
aaa
adc
jns
pop
imul
mov
rorb
lret
inc
jne
adc
sbb
dec
pop
loope
fs
mov
imull
adcb
xor
fwait
ret
cmp
sbb
fadds
adc
push
push
in
cmp
xchg
nop
jb
inc
sub
scas
add
leave
pop
jmp
inc
in
out
cmp
add
mov
lock
shrl
xlat
and
xor
mov
mov
out
lea
xchg
mov
mov
cli
push
imul
mov
pop
adc
mov
mov
iret
push
mov
jno
xor
mov
int
add
add
push
pop
cmp
xor
sahf
mov
cli
sub
fidivrl
clc
lret
pop
into
int
jp
fcoms
push
sbbb
add
jae
mov
pop
pop
or
and
mov
jmp
mov
xchg
lcall
iret
call
fmull
cmpb
out
dec
loopne
daa
push
fs
lret
xchg
sbb
js
cli
xlat
jae
push
jecxz
lock
out
scas
mov
orb
pop
push
fwait
repz
and
dec
add
dec
mov
xchg
and
jmp
mov
and
es
sti
cld
aad
cs
mov
pushf
add
hlt
ss
mov
filds
mov
popf
or
sub
mov
out
dec
mov
cld
lds
outsb
jmp
pop
ficoms
cmp
ret
fimull
inc
les
add
lret
mov
cmc
adc
xchg
mov
xor
sub
rol
adc
out
xor
or
fdivr
fs
cmpsb
add
hlt
je
sbb
fimuls
movsl
iret
int
cwtl
outsl
sbb
mov
xchg
test
jbe
xor
sbb
ss
add
popf
int
fistl
pop
loopne
jge
and
jle
dec
sbb
push
test
or
jmp
fbld
inc
add
jle
and
aaa
xchg
pop
mov
popf
and
lcall
pop
cmp
add
mov
jnp
ds
xchg
nop
inc
int
sbb
cmp
jmp
fwait
inc
mov
push
popa
mov
pop
stc
cwtl
mov
out
fwait
mov
xchg
xchg
in
dec
push
add
xchg
bswap
popf
rcll
jp
jmp
test
xor
and
mov
pop
jecxz
lea
bound
push
pusha
pushf
xchg
mov
out
and
cmp
js
or
jno
jae
movsl
in
sbb
mov
daa
add
mov
es
sarl
lods
jmp
cli
cmp
push
mov
add
cmp
mov
js
pop
fs
sub
fsubrs
inc
call
in
lret
inc
or
arpl
xor
mov
clc
add
or
in
push
aaa
pop
vunpcklps
into
jns
mov
push
xor
dec
into
jmp
stc
dec
jnp
pop
jg
ljmp
cmp
and
add
xchg
sahf
mov
mov
pop
cmp
mov
adc
fwait
jge
aad
jae
cs
es
fsubl
jnp
cmp
jle
das
aad
mov
shlb
popf
aaa
jmp
daa
lods
and
mov
lret
prefetch
mov
xchg
stos
and
jl
xor
enter
fimull
out
add
sti
popf
cmp
cs
sti
sub
sub
movsl
dec
cwtl
negl
and
or
lods
mov
aaa
into
in
mov
pop
sub
fcoml
loop
add
call
pop
jmp
mov
push
fdivp
enter
pop
mov
mov
int3
nop
push
adc
pop
dec
into
nop
js
scas
mov
imul
adc
inc
mov
rclb
fdivrs
cmpsb
push
popa
inc
or
adc
mov
cmpl
pushf
pop
data16
dec
in
lret
negb
mov
and
sti
pop
pop
js
mov
xchg
imull
cmpsb
iret
insl
mov
sub
dec
sbb
mov
jmp
stos
out
movsl
mov
test
mov
iret
push
inc
pop
stos
std
xor
xchg
pop
insb
loope
mov
je
push
leave
inc
jbe
xchg
add
mov
lcall
push
repnz
mov
enter
in
and
mov
mov
test
mov
cmc
jmp
sub
pop
sbb
mov
cwtl
imul
loop
adc
push
add
cmp
stc
cmp
subb
add
mov
gs
jnp
pushf
pop
aad
and
insl
repz
sub
cmp
lods
mov
mov
adc
lods
stos
ss
movsb
out
sbb
out
adc
sti
add
mov
or
sti
cmpsl
loop
jae
sbb
hlt
add
cmp
shlb
mov
push
ds
xor
mov
or
out
mov
out
sbbb
sub
adc
and
adc
xchg
outsl
cli
and
dec
scas
les
inc
mov
push
loop
in
inc
or
daa
enter
or
jp
fidivl
xor
xchg
shr
shrb
cmp
enter
fwait
pop
lods
out
cmp
mov
pop
pop
pop
pop
sub
sarb
je
xor
xchg
mov
pop
cmc
and
adcb
mov
call
test
adc
dec
jno
mov
scas
aam
test
into
addb
jle
mov
mov
adc
jg
push
test
xor
pop
dec
push
push
into
lock
mov
xor
lahf
addr16
xor
in
mov
mov
stos
pop
push
mov
aas
xchg
in
sbbb
push
clc
lods
jb
jnp
dec
inc
ds
jle
jp
ds
inc
jae
leave
lret
in
push
inc
jl
inc
mov
scas
xor
out
jge
shr
xor
lea
ss
cwtl
lods
adc
lcall
div
pop
lds
mov
test
push
push
sub
push
lret
lret
jns
lahf
aad
std
mov
inc
mov
jbe
xchg
cwtl
jecxz
rorl
cli
testb
ror
add
or
ja
bound
fisubrl
inc
ds
inc
inc
xor
cmp
shl
in
int
cmpsb
adc
fnsave
loope,pt
and
pop
inc
inc
push
out
loop
xchg
pop
mov
pop
mov
arpl
cltd
pop
lods
sub
outsb
fildl
call
fistps
sti
fcmovbe
and
mov
les
push
xor
popf
add
adc
out
bswap
add
insb
gs
fstp
or
addr16
js
cli
lret
xchg
xchg
add
loopnew
fiaddl
add
push
dec
leave
inc
pop
mov
cli
mov
scas
or
add
jge
mov
mov
pop
adc
dec
enter
subb
and
pop
decb
data16
repnz
int
and
xchg
mov
xor
movsb
pusha
mov
pop
inc
cmp
setae
sbb
int
aas
or
and
and
clc
or
std
mov
mov
shlb
std
inc
ret
inc
mov
pop
adc
lock
xor
mov
sub
dec
add
inc
sub
outsb
mov
cmc
icebp
jle
test
leave
repz
xchg
adc
aaa
stos
push
mov
and
sahf
dec
push
bound
popf
add
jp
repz
stos
or
test
aad
stos
lods
daa
mov
pop
sbb
pushl
or
push
lea
adc
xor
lret
dec
xchg
aaa
out
ret
push
std
lret
in
pop
orl
adc
pop
mov
pushf
imul
dec
pop
xor
inc
test
fbstp
daa
mov
push
fnstenv
mov
dec
dec
daa
lea
pop
pushf
out
in
sbb
inc
pop
push
adc
xor
icebp
test
jle
xlat
insl
aam
or
aaa
shr
push
jae
lds
outsb
sub
adc
sti
cmp
rcl
ret
shrl
dec
mov
loopne
mov
pop
push
and
xchg
roll
inc
cld
cmp
cmpsb
jg
adc
inc
sub
lahf
or
and
insb
ret
push
pop
repz
gs
rcrb
xchg
and
lahf
scas
mov
dec
mov
sti
add
movsb
lret
popa
test
mov
push
lea
outsl
and
sbb
das
aaa
pop
lcall
fiadds
xchg
push
or
ds
je
fisttpll
sbb
dec
decb
xor
add
hlt
inc
out
lock
xchg
fs
addl
or
xchg
sub
inc
andb
and
lea
loope
mov
xchg
sti
shlb
lock
orb
notb
add
jp
or
pop
pop
inc
in
or
xor
popf
icebp
cmpsl
mov
pop
out
push
stos
cs
mov
fcomp
jb
inc
cmp
pop
loope
and
sbb
lds
mov
and
jns
add
les
loop
add
mov
orl
mov
xchg
jae
push
mov
jae
lret
mov
or
mov
repnz
mov
mov
inc
ds
dec
push
pop
stos
fs
je
jbe
sbb
cmp
mov
mov
inc
out
mov
popa
dec
sbb
outsb
cli
sub
add
jbe
fs
sbb
add
ret
test
pop
xchg
push
jge
sbb
jb
insb
and
add
and
cld
dec
push
popa
pop
mov
push
cmp
outsb
pushf
xor
out
cmc
lahf
daa
pop
inc
out
int3
imul
jbe
scas
loop
add
jle
data16
fs
lcall
xchg
repnz
and
xor
mov
add
aas
mov
mov
dec
sub
ljmp
mov
into
stos
scas
in
jb
sub
or
out
mov
mov
lret
cmp
mov
mulb
inc
ror
xor
idivl
cmc
test
test
inc
or
jg
dec
mov
int3
jae
inc
loopne
and
iret
roll
jns
add
add
ret
sahf
xchg
inc
xor
and
dec
xchg
push
mov
mov
cmp
add
sti
arpl
ret
jne
or
out
movsb
push
mov
les
jecxz
add
dec
cmpsl
sbb
rcl
das
imul
movsb
mov
xor
or
add
mov
jl
lock
sub
adc
cmpsl
je
push
daa
mov
sbb
pop
in
xchg
ljmp
popf
mov
mov
push
jb
rol
sub
divl
je
sub
mov
fsubl
and
pusha
notl
adc
fists
add
lock
adc
xchg
sar
mov
jge
mov
xchg
jns
movl
dec
adc
pop
sub
xchg
adc
aaa
mov
sbb
shr
ds
shlb
mov
call
outsb
mov
outsl
outsb
mov
lods
push
cpuid
out
xor
mov
inc
mov
sti
incb
xchg
push
xor
iret
sbb
imul
popa
jp,pn
loop
enter
pop
dec
test
insl
int
dec
inc
lret
cs
insb
push
inc
dec
sub
dec
leave
jae
add
xchg
dec
aaa
and
sub
sbb
cltd
dec
cmpsl
push
cwtl
push
dec
jno
jne
push
xchg
stos
push
cmp
aam
insb
dec
cmp
sub
sti
cmc
lods
push
lret
fadds
xchg
add
add
in
sub
mov
xchg
sbb
shll
push
repnz
lret
or
arpl
popa
pop
out
fucomp
je
pop
inc
adc
outsl
faddl
jae
ja
int
adc
ret
lcall
inc
fwait
add
bndmk
es
repz
mov
inc
adc
push
dec
mov
lods
add
cmp
pop
pop
push
inc
cmp
or
outsb
ss
fs
jo
pusha
clc
dec
mov
repz
mov
repz
xor
and
std
cmc
shlb
imul
and
adc
cmpsl
lods
outsb
xor
sub
test
movsb
xor
push
lods
sub
xchg
push
adc
push
inc
pop
pop
popf
test
cs
rcrl
push
lret
push
cmpsl
in
loop
outsl
ret
pop
cld
outsl
pop
stos
adc
dec
scas
and
mov
in
inc
xchg
test
push
mov
lock
ret
cmp
add
mov
and
add
mov
into
fisttpll
mov
adc
iret
adc
imul
rcrb
mov
or
outsb
xchg
in
xchg
rol
mov
push
movsb
adc
lret
jecxz
push
dec
adcl
ljmp
pop
les
mov
sbb
xor
xor
fs
cmp
rcrl
out
mov
add
jmp
jl
in
sub
test
add
xchg
and
xchg
pop
js
adc
test
in
jns
mov
imull
add
add
cwtl
lods
lahf
push
ror
cwtl
mov
inc
sarb
or
sub
inc
mov
xchg
sub
add
push
inc
mov
push
cmp
out
out
orl
xchg
lock
fwait
lahf
shll
and
lea
xor
cmpsl
cld
test
mov
pop
adc
mov
shrl
inc
mov
inc
mov
sbb
mov
and
loop
jae
movsl
scas
je
lcall
roll
dec
insl
arpl
aas
rcll
push
xchg
arpl
xor
int3
cmpsl
pop
lock
repz
dec
mov
jp
out
xor
push
jecxz
les
imul
push
cmp
xchg
and
mov
add
movsb
and
int3
insl
daa
dec
or
mov
mov
cmpsb
dec
mov
jmp
mov
add
cmp
in
jg
xchg
in
mov
sbb
stc
jg
int
ss
enter
xadd
scas
sub
jmp
mov
popa
and
repnz
inc
or
mov
lret
mov
mov
lds
dec
jne
jge
cmp
adc
addr16
sbb
pop
mov
mov
lods
jb
and
sub
test
punpckldq
mov
fs
lods
pop
add
push
push
sbb
dec
mov
in
fs
add
stos
insb
dec
gs
sbb
out
lea
movsb
stos
sub
fiaddl
adc
int3
pop
mov
inc
loopne
mov
sub
mov
jecxz
push
gs
in
cmp
movsb
xor
mov
fdiv
or
and
aad
xchg
mov
insl
or
sub
pusha
or
bound
loop
fisubrl
jno
ret
mov
scas
movsb
rorb
pushf
push
ror
add
mov
lds
pushl
leave
mov
cltd
cmp
rorl
mov
add
mov
rcr
hlt
xor
lret
ss
lods
shll
and
imull
push
fimuls
popa
inc
inc
mov
fidivl
sarl
adc
dec
xchg
xor
fbld
adc
sub
pop
pop
cmpl
or
aam
xchg
bound
test
insb
add
das
sbb
lcall
aas
mov
in
orl
jnp
mov
shlb
jecxz
adc
in
sub
sbbl
jo
push
xchg
imul
sbbl
or
push
xchg
cld
cli
shl
test
lods
cmpsb
stos
mov
movsl
cmpsb
cld
inc
push
pop
pop
adc
push
xchg
cmp
cmp
xchg
mov
xor
scas
mov
and
aam
test
push
mov
sbb
push
inc
dec
jg
fs
jns
pop
cmp
dec
daa
stc
xchg
pop
add
imul
hlt
fidivrs
sbb
push
cmp
sahf
jg
mov
shrl
sub
push
mov
scas
lret
xor
iret
test
or
aaa
and
cmovle
push
sub
clc
testl
lock
loope
repz
ja
ss
nop
das
mov
ja
ss
mov
out
xor
loop
loop
lahf
mov
sahf
cmp
xchg
andl
dec
out
stos
add
out
call
popa
xor
stos
incl
inc
jp
lods
sub
mov
jae
cmp
ss
xchg
pop
xor
sarl
test
pop
mov
push
orl
mov
sub
jecxz
and
inc
inc
aaa
nop
push
sbb
gs
push
fmulp
pushf
push
dec
lret
pop
inc
mov
or
xor
and
cld
or
pop
mov
test
push
stos
or
enter
xchg
mov
mov
out
jecxz
dec
mov
stos
lcall
lcall
mov
and
and
add
xchg
aam
pop
orb
daa
mov
push
shl
mov
movsl
cmp
jne
aas
leave
aad
jge
add
push
sub
in
aaa
pop
out
add
les
loopne
cmc
push
in
aam
sub
push
pop
push
out
mov
bound
mov
pop
rorl
mov
add
mov
int
push
mov
imul
stos
add
and
or
scas
cmp
arpl
or
adc
rorb
dec
or
mov
mov
sti
ds
fcompl
xchg
cmp
movsb
loop
repz
adc
and
add
rcrl
dec
mov
fldcw
idivb
add
add
insl
fistps
pusha
pop
lret
addr16
adc
or
enter
stos
dec
enter
and
cmp
xchg
mov
es
in
in
mov
popf
or
aas
jo
push
retw
dec
push
or
iret
lahf
xchg
cmc
push
test
iret
dec
jle
push
mov
gs
leave
or
pop
adc
repz
push
mov
incl
xor
test
les
sub
pop
jmp
push
addb
mov
and
pop
scas
ja
cmp
lds
push
mov
rorb
fdivrs
push
push
mov
push
jns
adcb
sub
sub
or
push
sub
movsl
inc
les
scas
and
aad
imul
lock
dec
repnz
sbb
mov
mov
std
pop
scas
in
sahf
add
test
jl
adc
out
scas
push
das
inc
mov
mov
mov
loop
loope
jl
or
sbb
daa
lods
xor
pusha
jmp
repz
mov
cld
mov
in
fmul
orb
adc
add
ds
add
mov
loopne
cmp
inc
push
pop
pop
inc
popa
ds
xor
jbe
rorl
es
subb
pop
lret
and
test
enter
cmp
mov
lods
pop
sbb
icebp
lahf
mov
mov
cmc
push
out
pop
xchg
pushf
push
cmp
mov
aas
sbb
or
push
mov
pop
or
mov
push
push
mov
or
xchg
and
adc
leave
xor
mov
aam
sub
outsb
shlb
jl,pn
mov
sbb
mov
mov
fcomp
mov
inc
in
in
mov
adc
push
daa
repnz
out
outsl
in
xor
mov
gs
mov
out
mov
sti
sti
std
cltd
dec
sbb
arpl
xor
pop
sub
test
addr16
cwtl
test
in
add
mov
xor
pop
pop
mov
orb
nop
inc
mov
aad
push
mov
js
sarb
jecxz
stos
mov
mov
sub
adc
arpl
push
les
stos
fwait
ret
inc
mov
sbb
and
add
xor
mov
scas
push
inc
mov
inc
fiadds
aaa
add
adc
divb
scas
insl
in
mov
xor
push
test
cmpb
fdivs
inc
mov
mov
or
xchg
mov
jne
push
lods
popa
jnp
imul
js
subl
jle
popf
push
cmp
pop
mov
out
cs
stos
adc
pop
cmp
dec
dec
fs
es
push
push
les
ret
dec
push
sub
jmp
insl
pop
lods
add
inc
fndisi(8087
push
or
sub
lds
scas
das
xchg
movsb
mov
sbb
mov
mov
pop
pop
cld
ljmp
repnz
cld
add
clc
sbbl
test
adc
mov
jmp
xadd
leave
pop
mov
sub
pop
sub
pop
push
jno
pop
and
out
mov
iret
push
jmp
xchg
sub
push
les
call
inc
inc
mov
cmp
ljmp
in
sbb
loopne
pop
pop
jnp
mov
lcall
fmull
call
adc
popa
cld
stc
jne
adc
sbb
push
sbb
ficomps
dec
data16
mov
jbe
add
fwait
push
repnz
nop
jg
jno
or
aas
cmp
sti
mov
dec
fs
sub
mov
scas
ror
push
call
push
mov
shlb
pop
and
jne
pop
mov
sbb
add
xchg
sub
xor
lea
xor
cmp
sub
adc
ret
scas
xor
xchg
adc
pop
mov
mov
push
jge
push
clc
jle
jg
enter
ss
jae
mov
push
imul
in
aam
mov
call
je
mov
sar
sub
std
lret
loop
outsb
idivl
sti
je
jge
push
and
repz
xchg
std
pop
mov
sub
jb
xchg
dec
test
mov
xor
dec
push
mull
lock
mov
inc
stc
je
aam
xor
mov
push
push
orl
xlat
popfw
mov
pop
jno
pop
hlt
loopne
cmp
xor
mov
lahf
lods
nop
std
repz
mov
int3
arpl
mov
pop
movsl
ret
lds
loop
aaa
fldcw
outsl
dec
push
mov
cld
or
negl
ds
test
cs
daa
ss
in
cmp
aam
push
and
mov
popa
cli
lret
sub
sldt
getsec
xlat
xchg
and
rolb
pop
dec
jne
icebp
xchg
fstps
outsl
lods
or
jbe
xor
xor
jno
cmc
add
insb
iret
out
ret
sub
stc
rcrb
test
cmc
xor
data16
cmc
or
sbb
repz
mov
mov
je
mov
gs
pusha
cmpsb
cmp
test
cli
inc
mov
test
pusha
gs
cwtl
dec
sbb
fs
jp
jo
ljmp
test
mov
jle
adc
outsl
lcall
add
pop
jbe
or
jecxz
insl
add
out
xor
stc
jae
insb
scas
fiaddl
movl
jne
push
scas
frstor
adc
sbb
rclb
sub
sarb
inc
jecxz
cmpsl
lea
lret
pop
mov
xor
jnp
xor
clc
sbb
fisttpll
inc
scas
arpl
leave
enter
push
xor
cmp
jnp
popf
mov
adc
pop
shr
fildl
pushf
enter
scas
mov
mov
inc
pop
dec
fnstenv
addb
inc
or
lahf
push
fwait
push
jnp
jbe
mov
mov
rcrl
add
popa
sbb
jae
scas
sbb
loopne
fsubl
ss
adc
adc
mov
outsb
add
sub
lea
in
pop
dec
cmp
popf
xchg
xor
add
rcrl
pop
cmp
adc
sub
addps
scas
loop
add
in
out
pop
rclb
or
jle
or
pop
mov
adc
sbb
jp
in
push
lds
sub
dec
ficompl
mov
push
iret
int3
pop
xchg
push
frstor
sub
mov
adcb
jle
add
in
sbb
or
lcall
mov
inc
mov
sbbl
gs
cmp
xchg
pop
sbb
dec
mov
sahf
sarl
xor
rep
mov
mov
mov
dec
mov
or
push
loope
mov
cmp
xchg
push
xor
adc
push
push
clc
push
mov
cmpsb
sbbl
rcrb
call
mov
fcmovne
loopne
sbb
outsb
out
cmp
jp
test
stos
lods
mov
sbb
lods
in
jo
outsl
es
pop
faddl
fwait
scas
adc
cs
test
fsqrt
lret
xor
jo
pop
xor
sahf
pop
jg
push
js
inc
lods
mov
ja
dec
or
push
shll
push
mov
or
mov
cmp
pop
out
mov
cmp
xor
xor
inc
fdiv
mov
jl
dec
push
xchg
dec
push
push
imul
adc
push
or
push
mov
aas
outsb
dec
jbe
fsincos
cld
pop
jmp
popa
adc
nop
bound
mov
test
jmp
cmpsl
inc
or
adc
push
inc
aas
mov
mov
pop
sub
inc
and
or
insl
das
cmp
xchg
test
addr16
pop
add
arpl
fisubrs
mov
dec
icebp
mov
sbb
test
dec
jecxz
xchg
mov
sbb
adc
mov
lock
push
rol
pushf
inc
cld
pop
call
loope
and
shll
mov
mov
push
cmpsb
or
xchg
pusha
sahf
push
aas
enter
pop
mov
or
cs
mov
and
add
aas
push
pop
inc
cwtl
mov
imul
sub
les
inc
mov
sub
test
cmp
flds
in
int
mov
dec
jmp
push
xchg
into
push
ret
inc
sub
sbbl
push
pop
add
lea
cmpsb
adc
movups
xchg
push
sub
jmp
pop
add
sub
or
into
inc
inc
stc
enter
jo
idivb
mov
out
mov
inc
aad
loop
lret
and
adc
push
dec
mov
rcrb
mov
icebp
xor
subl
xor
cmpsl
or
gs
pop
sbb
jno
daa
sbb
pop
ret
lock
cli
sub
loope
into
lds
ss
cmp
jbe
and
pop
ret
adc
jno
rorb
mov
xor
xchg
inc
dec
sub
add
sub
sbb
fists
lock
scas
test
mov
jl
and
jo
test
inc
test
jns
sbb
adc
fbld
and
or
pop
jbe
aas
fwait
push
mov
mov
pop
fists
jp
mov
and
mov
add
shll
jns
jl
xchg
xchg
jle
pushf
fnstenv
rcl
pushf
sub
data16
adc
and
enter
lea
loop
fcomps
imul
xor
adc
mov
push
sub
movaps
sti
stos
loope
ja
test
xor
push
push
xchg
hlt
ret
pusha
inc
mov
imul
aas
mov
aas
in
mov
cmp
out
sub
mov
loope
mov
jmp
mov
push
or
jne
dec
mov
loopne
jecxz
sarl
aam
adc
insb
jge
xor
inc
insl
scas
cld
mov
push
dec
xor
mov
lods
insl
xchg
rcrb
jo
push
dec
pushf
mov
inc
dec
cwtl
test
or
xchg
outsl
mov
mov
mov
aad
or
js
inc
dec
mov
sbb
mov
mov
fbld
inc
popf
jo
fldcw
pop
addb
and
xchg
scas
dec
mov
insl
scas
sub
adc
dec
fimuls
dec
je
mov
dec
rorb
jnp
fdiv
mov
or
es
lea
cmpsb
pop
scas
and
inc
mov
push
stos
and
push
xchg
pop
jle
fxch
aas
mov
lock
sub
fcmovnb
es
mov
in
cli
mov
push
jle
imul
inc
dec
lahf
scas
daa
sub
loop
add
int
push
sbb
push
push
ret
xchg
dec
clc
in
mov
addl
stos
xor
or
aaa
lahf
xchg
xlat
mov
push
add
cmp
out
test
inc
dec
loope
xchg
cld
into
push
pop
leave
push
mov
xchg
loopne
ljmp
test
rcll
sbb
std
and
push
xchg
scas
pusha
into
sub
inc
dec
test
outsb
popa
mov
imul
jge
sbb
xor
jnp
js
mov
call
adc
popf
rorb
cmp
jge
xor
cltd
push
mov
and
sbb
xchg
js
dec
test
in
lea
fnstenv
dec
pop
mov
pop
arpl
xchg
add
dec
inc
sbb
dec
mov
and
jbe
xor
jno
or
ljmp
loopne
sub
jae
sub
xchg
xchg
lcall
sbb
testl
adc
mov
sub
aaa
or
mov
and
mov
clc
test
fwait
jp
cld
jo
jg
cmp
xor
popf
mov
push
stc
sbb
movsb
popf
mov
incb
clc
ljmp
pop
inc
imul
xchg
shlb
in
movsl
int3
sarl
xchg
popf
das
mov
lcall
negb
fists
dec
test
dec
sti
cmp
lods
fdivs
mov
sbb
inc
add
add
push
sbb
inc
add
or
fwait
push
ret
ret
xor
rcll
dec
aaa
in
jl
jae
pop
scas
jmp
and
les
xlat
cmp
add
imul
gs
adc
ret
loop
pushf
icebp
je
and
pop
int
xor
sub
orl
pop
lret
in
add
movsl
pop
dec
int
and
stos
aas
jo
iret
add
xchg
outsl
repz
cs
test
xor
movsl
shrl
push
int
xor
dec
dec
out
fimull
out
and
push
push
cmp
repnz
pop
dec
in
push
into
fsubl
xchg
cwtl
clc
mov
fcmovnb
xchg
sbb
mov
adc
xchg
test
lds
mov
and
or
sub
jge
andb
arpl
push
pop
mov
mov
leave
adc
push
pop
rcll
pop
fildl
roll
pop
mov
sub
push
cltd
adcl
cmp
cmp
and
jmp
repz
adc
je
test
xchg
mov
mov
das
xor
jb
lods
inc
sub
insl
push
xor
sbb
das
ss
and
pushf
lret
mov
in
pop
es
in
ds
cs
mov
fstps
jno
fstps
sub
fnstenv
jnp
daa
out
lret
lcall
xlat
shlb
mov
push
fstpt
jmp
mov
lods
enter
sub
rcl
lods
loopne
mull
dec
pop
pop
out
orb
stc
pop
or
mov
stos
pop
cs
es
and
je
sub
mov
shl
addr16
enter
xchg
test
cld
aas
cwtl
pop
loope
push
subl
das
adc
lock
scas
push
cmpsb
vorps
xor
test
push
ja
ja
bswap
pushw
cli
dec
lret
int
andb
rcr
pop
xchg
inc
or
sub
mov
test
aam
push
mov
jo
mov
or
add
fwait
mov
sub
cmp
dec
lock
test
pop
pop
stc
mov
pusha
mov
daa
icebp
mov
mov
jecxz
cmpl
sarl
push
into
stos
and
lahf
sbb
test
leave
pop
lods
jecxz
stc
push
jmp
or
sbb
inc
mov
call
data16
jge
cmpsl
les
add
test
or
jns
jo
or
stc
icebp
loope
lret
jp
inc
out
out
test
test
pop
dec
push
lock
push
int3
sti
or
mov
and
adc
and
mov
or
cmp
mov
int3
cld
mov
xor
pushf
cmp
sub
stc
dec
add
scas
out
test
jmp
repz
and
loopne
dec
xchg
sbb
jns
jno
aaa
add
mov
loop
dec
pop
test
popf
out
mov
pop
ret
incb
dec
out
and
jb
inc
push
mov
loop
aad
pop
sbbb
insl
cmpsb
iret
push
mov
aam
pop
ljmp
aam
xor
cmp
mov
enter
sub
adc
sti
int
fidivrl
push
test
in
ret
sub
test
arpl
cld
xor
sahf
pop
pushf
dec
or
cwtl
mov
cmpl
mov
mov
insb
jns
in
popa
inc
sahf
outsl
mov
pop
bound
mov
cmpsl
repz
outsl
fdiv
adc
loopne
js
jp
push
ficomps
xchg
mov
cmp
test
das
add
and
dec
pop
or
push
addb
add
sub
fcomps
jb
pop
shrb
out
orb
out
inc
mov
mov
jge
testl
imul
sti
mov
movsb
add
cmpsl
add
mov
ror
call
dec
popf
rorl
fisttpll
adc
xchg
in
xchg
pop
mov
xchg
mov
in
dec
adc
and
loope
sbb
ds
mulb
mov
hlt
repz
push
push
sbb
shl
add
add
lods
dec
sub
xchg
or
dec
sbb
jo
std
xchg
movsl
mov
pop
add
jbe
mov
stos
sbb
popf
aas
xor
out
add
sbb
test
popf
mov
push
lahf
fwait
jle
test
lret
jecxz
jae
adc
xchg
pop
lock
psraw
imul
and
mov
lock
in
mov
push
cmpsb
inc
push
mov
or
pop
pop
pop
mov
rcrb
push
in
push
in
addb
mov
sub
nop
in
mov
mov
mov
lret
ret
lds
inc
inc
xchg
dec
cmpsl
jns
sub
jns
mov
xlat
jmp
adc
fbstp
xchg
cmpb
cmc
inc
push
out
testl
mov
iret
shlb
cmp
xor
xor
test
fldcw
add
push
pop
pusha
xor
ds
rorb
adc
lea
pop
jae
stc
mov
xor
pop
fdivr
das
inc
add
push
outsl
cmpsl
rorl
jge
or
jbe
rorb
inc
adc
enter
lcall
test
das
jl
cmp
and
xchg
test
pop
and
dec
jge
pop
fldt
je
cmpsl
pop
xlat
mov
leave
outsl
cmp
das
movsl
addl
or
mov
ds
pusha
sub
add
out
cmpsl
and
loopne
dec
cs
or
jge
addb
loop
and
mov
xor
movsb
or
adc
mov
call
out
xor
mov
inc
and
fstps
jb
notl
aaa
xchg
cmp
cwtl
and
cmp
aam
rorb
lret
mov
subb
mov
rcll
xor
xchg
pop
enter
mov
jmp
fsubr
testl
add
ret
mov
add
push
cmpsb
push
pop
adcb
orb
out
push
ret
out
pop
out
add
jmp
mov
ss
decl
aas
or
out
pop
add
lea
lods
imul
add
in
fcompl
xor
jl,pn
sbb
and
loopne
cmp
repz
cmpsb
jne
pop
xor
inc
stos
jmp
stc
xchg
fnstcw
idivb
aad
fldt
adc
and
enter
add
adc
jns
scas
les
imul
and
jbe
mov
jbe
jge
cld
out
and
adc
imul
push
rclb
inc
out
in
add
adc
bnd
dec
sbb
popa
leave
std
jecxz
jne
sarl
popf
cmpb
subl
sbb
movsl
adc
mov
daa
loop
xchg
mov
xchg
adc
gs
or
sub
mov
sub
jns
xchg
lcall
pushf
jg
aam
ds
inc
jmp
pop
sub
and
mov
jle
data16
mov
cwtl
into
loope
clc
jno
push
or
popa
or
sbb
fisttpll
std
test
mov
jnp
mov
in
xlat
pop
leave
pop
shlb
popa
icebp
cmpsb
mov
jmp
clc
push
dec
pushf
mov
xor
inc
test
mov
data16
xchg
imul
lds
lock
jne
xor
jnp
jno
push
mov
ret
idiv
inc
xor
pusha
in
lahf
fwait
mov
lahf
inc
lock
cmp
xchg
fwait
push
icebp
mov
pop
or
imul
inc
cld
pop
insl
dec
imul
enter
adc
pop
ret
inc
fnstenv
ds
mov
loope
jae
inc
and
movsb
push
add
je
add
jo
ss
or
lods
imul
data16
jmp
jp
add
mov
xchg
adc
dec
mov
incl
fisubrl
push
pop
adc
out
mov
ret
push
adc
les
scas
es
cwtl
pushf
divl
inc
pop
fcomip
leave
xor
insb
std
push
scas
mov
mov
jge
lret
adc
call
in
cmc
mov
pusha
pop
stos
jb
pop
push
leave
and
push
xor
mov
lock
or
pop
cltd
mov
enter
cmpsl
fwait
pop
jmp
pop
ja
notl
inc
push
jmp
pop
or
idivl
sub
or
sbb
movsl
sub
jl
fwait
cmc
cld
cmpsb
and
mov
scas
mov
stos
test
out
jo
jae
loop
sti
lock
lods
lahf
inc
mov
cmpsl
sub
mov
cmp
iret
shl
icebp
jno
mov
cmp
or
inc
xor
pop
sub
jnp
xchg
xchg
sahf
adc
fisttps
and
add
add
adc
sar
adc
jne
push
mov
in
pop
mov
shr
in
ds
pop
mov
mov
fwait
insl
test
aas
sbb
cmp
pop
mov
ja
scas
aas
xchg
ficoml
fsubrs
je
rcl
int3
rcrb
sbb
push
xor
mov
xor
mov
jl
int3
pop
inc
mov
pop
mov
sub
pop
mov
enter
pop
std
mov
out
push
cmp
cwtl
scas
push
ljmp
xchg
sbb
and
loop
cld
cltd
pop
test
loopne
outsl
hlt
dec
dec
in
lea
mov
out
push
lahf
jl
stos
loope
das
push
mov
into
jae
hlt
cli
cmpsl
ds
xchg
shr
mov
inc
iret
std
cmpsb
lea
mov
push
add
jno
dec
inc
aad
jg
mov
fwait
xchg
shrb
or
cs
mov
add
mov
into
daa
cmc
movsl
popf
xchg
pop
push
int
jmp
je
shll
nop
cli
push
dec
sbb
cwtl
or
adc
jbe
ret
andnps
fsubl
sbb
xchg
push
inc
jns
cmp
cmp
jl
mov
into
dec
lods
cmp
clc
mov
sahf
jae
pop
cmp
lods
and
jbe
and
adc
data16
imul
and
sbb
and
scas
out
adc
in
mov
iret
xchg
out
repz
test
repz
out
xchg
adc
or
pop
mov
js
mov
cmp
jno
push
adc
jno
int3
call
cmp
outsl
mov
push
mov
vcvttpd2dq
aam
pop
mov
xchg
mov
ja
std
jmp
int3
out
push
loope
pop
lretw
push
sti
pop
xor
stos
cwtl
pop
cltd
insb
scas
ror
or
jbe
movsb
mov
pop
pop
pop
pop
jb
jo
fimull
out
lods
xchg
xor
mov
leave
ret
add
neg
xchg
jo
xchg
test
cmp
icebp
lcall
xor
enter
movl
pop
test
cmp
insb
int
pop
imul
dec
xchg
decb
loop
xchg
push
mov
cwtl
ret
or
je
sub
dec
int3
sub
dec
jb
int
in
ds
mov
ret
mov
sub
pusha
jg
or
cmpsb
jno
mov
push
movsb
adc
and
dec
and
push
das
mov
loope
ds
push
sbb
leave
aas
sbb
cwtl
sbb
sbb
ret
pop
push
call
pushf
fsubl
add
push
icebp
mov
orl
push
insb
jmp
pop
das
xor
mov
jmp
pop
xchg
xrelease
test
or
in
dec
cmp
sub
mov
jnp
ja
mov
cmp
lock
fs
sbb
insl
sub
outsl
mov
ret
sbb
into
sbb
mov
pop
movsb
jbe
push
loope
dec
inc
adc
je
loope
inc
sub
mov
jne
push
jmp
sbb
arpl
shll
sub
jge
cmp
popf
enter
cmp
sub
add
aam
insl
je
out
lods
inc
shr
xchg
push
adc
xchg
out
jl
rcrl
or
popl
les
jmp
idiv
stos
int
popa
lret
mov
sarb
push
lcall
mov
pushf
or
or
jl
repz
rcll
add
out
xor
mulb
cmpsb
insl
or
mov
dec
xchg
fmuls
mov
loopne
add
outsb
mov
inc
adc
push
dec
mov
scas
xchg
pop
test
add
fst
xor
push
orl
dec
dec
xchg
jb
repz
int
add
push
jbe
gs
cmp
mov
mov
jecxz
jbe
stos
and
mov
sub
ljmp
dec
push
fistps
mov
lods
jbe
push
mov
push
xchg
pop
cwtl
inc
adc
orl
outsl
out
mov
out
in
mov
cld
push
movq
sbb
xor
in
push
inc
sub
and
pop
fistps
adc
lock
std
pushf
inc
insl
aaa
cli
mov
sbb
add
or
out
out
jge
test
jo
addr16
ret
cld
test
cmc
push
mov
jo
mov
clc
rclb
mov
xchg
stos
bound
ljmp
outsb
nop
pop
inc
pop
aad
sbb
sbb
adc
xor
mov
rorl
pop
sub
daa
and
sub
add
lods
in
push
dec
inc
push
push
decl
mov
mov
fwait
add
push
pop
lds
cmp
jge
push
adc
idivb
int
mov
cmc
shl
pop
inc
sarb
mov
xchg
mov
add
jmp
loopne
mov
push
lods
jb
push
js
subb
adc
cmp
and
outsl
decl
cmpsb
cmpsl
xor
add
inc
xlat
lea
cmpsb
stos
mov
sarb
stos
push
pop
fldenv
imul
imul
lahf
push
fsubl
jecxz
mov
addr16
xchg
les
jnp
ja
mov
arpl
cmp
add
test
sbb
hlt
xchg
int
dec
inc
push
or
xor
adc
sbbl
xor
push
inc
push
jne
mov
in
pusha
cs
mov
sbb
hlt
xchg
popf
bsr
mov
inc
inc
dec
push
ret
mov
ret
cmp
sub
imul
pop
push
pop
mov
mov
push
xchg
jb
and
mov
lds
das
jb
fmull
hlt
lcall
push
xor
imul
test
jns
outsl
into
frstor
aam
xchg
andb
out
sbb
sub
jmp
pusha
mov
xchg
fstps
sti
or
mov
push
cmp
je
roll
test
adc
insl
mov
rol
icebp
add
in
mov
addr16
and
test
arpl
or
xchg
out
lock
fwait
enter
lret
insb
dec
push
popf
jl
iret
push
lret
adc
xchg
pop
lcall
ljmp
pop
mov
mov
cmc
movsb
inc
mov
ljmp
lcall
cmp
mov
inc
stc
les
stos
cmp
jl
add
add
xor
sbb
jns
into
jmp
pushf
out
imull
aam
cmpsl
inc
lret
cltd
scas
lret
push
push
shll
mov
dec
dec
imul
sbb
cwtl
xchg
aas
out
push
or
mov
stos
and
mov
sub
push
and
push
testb
cltd
sub
and
inc
mov
jns
ja
cwtl
xchg
lret
pop
xchg
cmpsl
xchg
or
pop
mov
ja
mov
adc
xchg
adc
and
sbb
dec
inc
xor
sbb
ljmp
rcr
push
into
push
xor
xchg
icebp
adc
lods
test
jnp
mov
ja
imul
lret
stos
mov
in
jae
stos
pop
negb
xchg
cmpsl
rcrl
jl
stc
mov
sub
loop
or
enter
fistpll
movsb
push
stos
dec
lds
fwait
loop
add
adc
repnz
pop
lock
add
repz
mov
int
mov
scas
mov
rcrb
mov
mov
sbb
xchg
fadds
jge
js
or
stos
test
sbb
xor
pop
sti
dec
add
jno
sub
pop
test
or
enter
outsl
cli
push
inc
jae
loopne
adc
adc
dec
cwtl
insb
repz
iret
cmpsb
test
mov
inc
mov
xor
ljmp
lods
push
dec
sbb
pop
les
clc
loop
scas
xor
aam
sub
jb
lods
stos
imul
mov
pop
pop
jl
pusha
iret
pushf
pop
push
testl
mov
xchg
cmp
sbb
roll
sbb
into
in
jns
cmp
jo
add
dec
leave
out
lret
push
xchg
fwait
hlt
repnz
sub
inc
cmp
mov
dec
or
mov
mov
int
repz
pop
jecxz
xchg
push
push
je
or
daa
mov
lods
jl
fadds
inc
mov
icebp
sarl
adc
pop
sbb
hlt
scas
push
call
mov
jecxz
inc
and
scas
mov
pop
xchg
dec
out
je
jecxz
ficoml
inc
lea
dec
push
cmpsb
adc
das
push
xchg
and
add
jge
lds
inc
out
and
imul
add
mov
cmpb
cmp
repz
mov
hlt
out
and
lahf
imul
mov
mov
rolb
imul
sub
ret
push
push
inc
ss
int
jg
push
mov
cmp
fidivrs
push
into
in
lock
fs
loopne
adc
out
push
pop
pop
inc
cmp
add
sbb
in
insl
fldcw
sub
dec
fwait
inc
xchg
cmp
and
xor
mov
shl
cltd
sub
aas
sbb
jo
cmp
inc
mov
pop
mov
aas
mov
lock
mov
cs
jle
fcoml
icebp
aam
ss
jl
fcoml
cltd
jnp
stos
aas
cmc
ret
pop
inc
fyl2xp1
fs
sbb
mov
jle
pusha
sbb
jo
push
sub
dec
out
loop
cmpsl
out
inc
repnz
jecxz
testb
adc
fisubrs
pop
iret
ds
jl
push
popf
push
cmp
xchg
out
adc
pop
in
jl
cmc
lcall
pop
negb
je
add
ss
inc
icebp
loopne
decb
out
jle
dec
add
mov
es
ds
lds
inc
insl
dec
mov
xor
lds
mov
pop
ss
rorl
pop
adc
xlat
sbb
pop
aaa
add
push
xor
aam
cmovno
jl
mov
movsl
lods
aad
adc
mov
sbb
jae
iret
jbe
mov
jo
dec
pop
inc
sbbb
loopne
push
jmp
add
lahf
dec
incb
fs
testb
sbb
adc
adc
mov
pop
std
aam
push
inc
dec
es
xchg
mov
jno
adc
rcll
sbb
sub
xchg
sbb
jmp
cmp
ret
into
mov
sarb
xor
mov
pop
inc
sbb
pop
mov
xorl
int
ja
dec
nop
xor
arpl
outsb
icebp
shrl
sahf
fstpl
push
lock
sahf
outsl
inc
jae
pop
fidivs
xor
dec
add
fstl
in
mov
jne
mov
or
push
shlb
mov
pop
hlt
cmp
dec
imul
xor
cmpsb
fnstenv
jns
stc
shll
add
xchg
xchg
add
lret
repz
sub
loop
je
xchg
dec
insb
sub
pop
js
test
or
add
outsl
test
ljmp
lcall
inc
data16
mov
sbb
and
out
insb
and
or
ret
popf
repz
test
adc
push
int3
fucomip
decb
outsl
push
push
lds
sub
dec
xor
push
xor
add
push
lea
jo
fsubs
fwait
insb
sub
or
rclb
mov
shll
out
ret
jo
insb
jno
test
dec
loope
jmp
ss
movsb
inc
mov
add
in
rorb
add
cmp
sbb
dec
adc
fs
leave
cmpsl
shll
adc
pop
mov
pop
fs
and
test
bound
out
testb
xlat
dec
out
xor
or
sub
stos
sub
or
mov
dec
pusha
lods
cld
lcall
mov
sub
xor
je
pushl
loope
sbb
cli
test
sub
lret
adc
add
adc
mov
xchg
cs
arpl
push
fmull
rcrb
rep
jmp
psubsb
movsl
dec
sub
xor
test
jns
jbe
push
insl
push
mov
dec
int3
xor
mov
xchg
cwtl
xchg
mov
out
in
or
inc
fimull
inc
cmpsb
or
scas
aaa
test
and
clc
xchg
pusha
and
call
mov
stos
bound
adc
push
iret
pop
shr
les
jmp
addb
cmp
mov
int
sti
test
jb
test
sbb
mov
pop
mov
stos
or
and
or
and
incb
or
ret
mov
jae
jecxz
mov
mov
and
and
nop
iret
sub
fildl
mov
aas
sarb
inc
jle
add
dec
int3
sbb
in
dec
and
imul
or
and
fisubrs
and
outsl
sub
xchg
dec
sub
push
fildl
mov
mov
movsb
and
and
fwait
jno
jne
pop
dec
lea
pop
push
adc
cltd
mov
stos
andb
mov
xchg
js
pusha
test
or
mov
rcr
lahf
cmpsb
ret
and
arpl
jl
fdivr
sbb
mov
arpl
shll
ret
sbbb
xor
cmpsb
sahf
mov
imul
jne
outsb
mov
xor
push
pop
push
dec
jns
shrl
insb
cmp
sti
loop
add
shrb
pop
jge
adc
sbb
xchg
push
rolb
adc
jmp
pop
cmpsb
call
mov
xlat
xor
push
enter
adc
fs
push
mov
outsb
pusha
cli
inc
mov
gs
icebp
test
jp
push
lock
push
and
fiaddl
fsubl
mov
loopne
fiaddl
pop
dec
aam
pop
fwait
lods
outsb
add
xchg
inc
pop
nop
ficomps
shll
dec
or
and
lods
adc
pushl
mov
push
push
enter
stos
aad
in
into
nop
jge
mov
xchg
nop
lds
mov
add
mov
scas
mov
inc
inc
jg
ja
xor
lcall
daa
mov
fstpt
fdivrp
dec
movsl
lock
mov
faddp
cmpsb
add
out
or
dec
pop
addl
xchg
mov
sbb
out
andb
subb
push
repz
jns
adc
mov
pop
mov
push
in
in
jb
out
push
mov
jmp
cmpsl
jne
mov
ror
sub
add
push
fucomip
outsl
ret
mov
push
test
mov
insb
sbb
adc
movsl
ljmp
repz
out
in
dec
mov
xchg
cmp
subl
mov
dec
mov
or
lcall
and
ficomps
add
shll
xor
push
fbld
or
mov
jg
mov
lods
daa
mov
or
inc
nop
enter
in
in
jge
ds
lret
adc
dec
std
push
ja
jns
xor
cmp
movsl
mov
in
gs
xchg
ret
mov
scas
std
inc
adc
push
popa
movsb
addr16
mov
adc
add
jnp
daa
filds
jp
or
jecxz
stos
test
push
mov
jge
xor
lods
jecxz
pop
and
mov
xor
xor
mov
imul
pop
pop
mov
push
sub
aam
push
sub
or
mov
hlt
adc
mov
cmp
mov
push
fwait
clc
mov
movsb
mov
rol
cmpsl
jb
imul
lcall
jne
push
inc
inc
std
mov
test
inc
sbb
sbb
and
cmp
cli
rolb
loopne
lahf
push
mov
cmp
xchg
jmp
pop
push
jb
and
xor
and
and
jle
sub
cmc
ror
and
imul
lea
sbb
and
in
imul
in
scas
fwait
sbbb
mov
nop
pop
mov
fs
jmp
sahf
jge
push
or
xchg
and
add
push
mov
pop
sbb
rcll
test
das
int
push
clc
pop
icebp
push
rcr
sub
repnz
adc
cmp
mov
add
sub
and
test
mov
inc
add
jae
push
ds
ret
mov
add
and
aas
cmp
dec
cmp
in
pop
out
bound
mov
sbb
leave
movsl
cmp
dec
jno
lahf
lock
push
pop
gs
mov
adc
andb
out
mov
fisubl
aad
inc
jb
and
enter
aad
enter
cltd
dec
jg
pop
push
icebp
out
push
in
push
cltd
jecxz
sub
xchg
stc
push
inc
sub
stos
pop
daa
pop
out
fdiv
in
mov
mov
mov
cmp
push
fcomps
mov
dec
dec
cs
or
fsts
dec
into
adc
dec
adc
adc
jmp
jp
movsb
pop
ret
sahf
enter
sbb
mov
xor
cmpsl
into
mov
sbb
repz
lcall
je
xor
out
ljmp
jecxz
sub
insb
lea
xchg
ja
xchg
mov
or
mov
mull
adc
xchg
ja
leave
scas
cmp
cli
push
pop
ljmp
cmp
pop
fs
arpl
push
adc
sub
incl
into
rcr
imul
cmpsb
out
negl
mov
pop
and
pop
mov
enter
mov
mov
fwait
in
sub
mov
je
mov
cmpsl
shlb
inc
inc
dec
mov
shlb
cs
in
and
dec
xor
arpl
in
repnz
or
cmp
insb
iret
in
jnp
adc
cmpsl
imul
clc
jecxz
push
jnp
ljmp
out
xchg
aas
pop
ret
jbe
lahf
out
sbb
movsb
lret
cwtl
es
stos
js
pop
or
pushf
clc
xorl
or
arpl
inc
sarb
adc
and
lcall
cmpsb
and
ljmp
adc
lret
jno
enter
inc
popf
out
push
jns
mov
sbb
adc
aas
cld
repnz
subl
xlat
jmp
pop
mov
imull
xchg
push
jns
insl
fiadds
adc
std
dec
or
popf
cld
lods
dec
bound
jg
mov
imul
mov
cwtl
cmp
inc
jo
or
mov
cmc
jp
xlat
jo
repz
mov
cmp
jl
sbb
pop
or
lds
lcall
mov
sub
lods
adc
sbb
inc
pusha
repz
in
mov
popa
lods
xor
fiaddl
cltd
lods
mov
fsubl
jp
jg
xchg
data16
fs
xchg
pop
negb
jmp
gs
push
add
mov
es
loope
sbb
in
leave
push
xor
add
push
dec
lock
xchg
add
mov
push
lret
stos
fcomps
mov
xor
add
mov
xchg
push
mov
outsl
push
repnz
std
push
mov
sbb
test
xchg
inc
leave
fimuls
xor
stos
scas
das
cltd
mov
out
lods
mul
cmpsl
daa
push
rol
pop
pusha
insb
mov
dec
cmc
fs
repz
push
mov
sbb
xchg
cli
and
out
mov
bound
mov
or
pop
arpl
cmp
sub
icebp
das
xchg
mov
push
add
int3
add
mov
cmc
pop
repz
insl
inc
jae
xlat
sub
popf
xchg
ljmp
xchg
mov
mov
cmp
ja
repz
cmp
dec
mov
mov
sub
out
sub
mov
ret
in
or
push
movsl
jl
enter
aas
pusha
adc
sub
stos
xor
push
dec
ljmp
adc
fnstenv
jp
loope
or
jnp
mov
push
sub
movsl
add
xor
out
mov
gs
pusha
je
loop
jl
pop
mov
jns
add
mov
cltd
mov
int
and
popa
or
adcb
xchg
mov
jns
int3
xchg
xchg
cli
xor
idivb
sub
mov
add
out
test
das
sub
mov
sub
xor
pop
dec
jo
loopne
std
loope
mov
mov
daa
div
or
mov
xchg
icebp
leave
sub
push
add
push
cmpsb
jp
dec
sub
mov
ret
inc
repnz
xchg
add
xchg
jae
negl
int
daa
adc
imul
scas
xor
mov
xchg
lods
push
add
mov
mov
aam
pop
sarl
sbbb
mov
push
xchg
xchg
inc
sarb
ss
xor
adc
jae
and
loope
xchg
add
cmp
adc
mov
lret
cmp
cld
sub
jmp
test
rcrl
push
insb
jno
outsb
ficomps
jo
xlat
inc
cmpl
or
fiaddl
sbbl
jnp
movsl
jbe
nop
jo
push
xchg
daa
sub
or
jecxz
push
aas
push
adc
out
in
cmp
arpl
popa
xchg
stc
sbb
fadds
insb
das
test
fldt
shrl
leave
add
mov
push
imul
lods
popa
movsl
add
sti
js
xor
mov
add
lret
lahf
aam
lea
bound
and
leave
dec
mov
addr16
sub
dec
loope
xchg
test
imul
popf
ret
add
jmp
lock
mov
scas
decb
xchg
jl
adc
dec
cmpsb
in
ficoml
sbb
outsl
xor
rcrb
or
les
out
mov
lds
xchg
adc
mov
push
jl
or
mov
cmp
inc
pop
and
xor
inc
fcomps
repnz
add
jo
push
pop
stc
cmp
adc
fists
js
outsb
test
in
xchg
sub
fwait
mov
mov
add
adc
notb
cmp
inc
in
add
int
sub
ds
popf
sub
sarl
fmull
frstor
cmp
shr
push
push
je
imul
out
ds
loopne
inc
dec
les
adc
adcb
in
sbb
xor
out
insl
fsubr
sbb
cmp
pop
imul
pop
jne
mov
dec
dec
adc
mov
jo
nop
jns
or
mov
sbb
out
scas
std
and
filds
pushf
enter
xor
test
inc
xor
bound
arpl
adc
call
mov
cwtl
fwait
mov
test
mov
sbb
add
fwait
cmp
xchg
orl
mov
adc
inc
mov
xor
je
push
jge
sar
fildl
xchg
repz
int
nop
xchg
xchg
jle
fwait
pop
fs
or
lret
xchg
shll
es
out
mov
mov
inc
js
mov
dec
dec
aas
mov
cmp
push
push
add
nop
stos
push
call
or
enter
pop
dec
imul
pusha
mov
pop
cwtl
in
push
inc
pop
cmp
and
scas
push
mov
xor
loope
add
or
mov
xor
push
jnp
lea
fstl
cmova
adc
sub
adc
push
aam
pop
cmpsb
lea
out
sbb
cld
cld
mov
stos
pushf
test
aas
rorl
sbb
ja
sbbb
cltd
hlt
cmp
addr16
cli
out
enter
or
push
jo
mov
mov
cmp
lret
ret
xor
adc
xchg
xor
idivb
mov
pop
mov
cltd
adc
fmul
inc
enter
lods
fcomps
hlt
lea
push
xchg
int
jbe
in
push
jp
lea
jmp
ret
xchg
mov
pop
jae
inc
jmp
xchg
mov
out
cmp
out
std
jmp
adc
lcall
or
mull
pusha
loopne
mulb
mov
add
fwait
xchg
adc
xchg
addb
add
mov
add
fnclex
push
xchg
iret
jge
xchg
pop
xchg
push
or
or
xchg
mov
push
pop
inc
scas
daa
pusha
shrl
shll
sahf
push
sub
or
and
push
cmp
jmp
ss
data16
aas
push
add
mov
cmp
sbb
sahf
or
or
mov
and
std
insb
or
add
jne
mov
pop
bound
sub
cli
popa
xchg
sub
push
out
mov
test
and
fucomp
fists
push
leave
add
jp
dec
xor
mov
test
mov
flds
mov
lds
push
jns
jnp
jnp
lcall
sub
inc
add
inc
mov
sahf
dec
arpl
ds
mov
fmul
rcr
sbb
add
xchg
stos
xor
outsl
jge
sub
inc
rcrl
incl
mov
push
popf
jl
pop
sete
mov
es
arpl
sub
shrb
or
xor
jnp
lds
sbb
mov
inc
xor
and
and
rclb
xor
mov
mov
mov
mov
adc
cld
out
movsl
cli
or
or
call
popa
adc
xor
mov
inc
mov
xchg
pushf
and
ds
mov
push
js
or
sbb
fldpi
mov
aaa
movsb
inc
fcomps
lret
iret
and
inc
cmp
scas
adc
test
fldcw
push
mov
and
jmp
sahf
inc
jecxz
mov
dec
sub
fcmovnb
sbb
sub
test
push
inc
and
or
lods
arpl
stos
icebp
mov
lahf
repnz
inc
push
bnd
insb
flds
cmc
icebp
ss
cmp
je
notl
add
dec
hlt
das
and
xlat
xchg
pop
mov
fdivrp
lcall
mov
mov
mov
sbb
ds
std
std
pop
dec
push
mov
sbb
fnsave
data16
adc
sbb
or
mov
xor
add
sbbb
xchg
cmpsb
push
and
sub
data16
xchg
jge
mov
jae
xchg
push
mov
or
stos
jmp
cmp
mov
orb
gs
rcr
test
mov
sbb
imul
call
pusha
mov
testb
xchg
shll
hlt
or
adc
mov
orl
push
push
adc
jl
mov
clc
cmpsb
or
mov
push
pop
inc
ss
dec
mov
mov
mov
loope
imul
mov
mov
jbe
test
cltd
adc
jmp
enter
sub
mov
inc
sbb
loop,pn
psubusb
mov
push
jns
push
mov
adc
push
pop
loopne
push
mov
sahf
lods
xor
std
aam
inc
dec
repz
jecxz
sbb
scas
xor
and
pop
dec
sbb
lret
mov
push
insb
pop
pusha
mov
fists
sti
inc
xor
imul
inc
sbb
xchg
notl
fsubl
push
dec
jne
mov
aaa
pop
fmulp
mov
bound
repz
xor
cmp
repz
inc
dec
aas
cmpsb
and
lock
sub
push
imul
stc
leave
sbb
out
stc
sti
xchg
sub
cwtl
fcoml
sbb
pop
mov
dec
jb
and
xchg
pop
cmp
cmpl
push
mov
jmp
ja
push
cmp
aaa
popa
add
mov
and
imul
pop
and
and
add
push
test
clc
into
fs
add
mov
inc
sub
push
or
daa
cltd
jg
addr16
daa
les
lret
pop
inc
dec
scas
jbe
cmpsl
loop
add
stc
mov
shll
push
xchg
push
js
mov
pop
into
push
xor
mov
ds
int
jl
shrl
jne
xor
add
cmp
sahf
cmc
jmp
les
adc
mov
in
jne
nop
dec
lds
sarb
outsl
pop
repz
adc
jo
addb
stc
ds
dec
ljmp
xchg
adc
clc
jge
lcall
sti
add
mov
xchg
cmpsl
in
push
imul
xor
icebp
jbe
lahf
and
ja
and
dec
xchg
adc
sahf
dec
pop
setl
dec
mov
je
leave
mov
xchg
dec
sub
mov
movlps
incl
sub
mov
es
addr16
adc
fdiv
sbb
call
arpl
lods
lock
gs
pop
outsb
lds
hlt
pop
mul
dec
imul
push
xchg
movsb
push
and
into
repz
nop
cwtl
xchg
xchg
sbb
imul
push
pop
push
jno
xchg
xlat
push
jbe
jb
adc
mov
xor
jae
cmc
shlb
rolb
pop
push
add
jmp
cld
in
xchg
clc
ljmp
push
or
dec
enter
dec
repnz
inc
js
in
mov
xchg
scas
pushl
sub
je
inc
xchg
aaa
lock
pop
push
mov
add
jmp
sbb
xchg
in
loopne
inc
or
inc
aad
insl
push
mov
je
sbb
repz
xlat
push
ds
jns
stos
fidivrs
outsl
insl
xchg
cmp
add
fs
push
test
lahf
sub
mov
imul
je
mov
xor
adc
or
xchg
sub
push
andl
and
dec
jl
mov
inc
pop
div
jle
neg
mov
mov
dec
es
or
mov
cmp
xchg
and
jbe
jge
shr
adc
fnstenvs
jmp
pop
xorb
push
dec
sbb
clc
push
adc
add
add
xor
dec
mov
out
fmuls
cmp
or
fsts
fidivs
sbb
in
ja
aad
gs
pop
xchg
test
mov
jae
ds
out
xor
pop
sub
mov
jp
call
call
inc
pusha
sub
push
and
pop
cltd
movsl
lea
mov
in
int
mov
cld
push
mov
cmp
mov
mov
and
inc
mov
sbb
iret
mov
fcomp
push
aas
add
jle
ret
shr
in
aaa
jecxz
push
imul
imul
js
and
cmp
and
bnd
dec
dec
lds
iret
jbe
into
dec
cmp
outsl
add
fnstenv
fildl
add
incl
out
add
inc
inc
cwtl
cmp
and
ret
mov
aam
fcomip
in
xor
adc
cltd
ljmp
inc
adc
cmp
mov
push
sbb
adc
add
icebp
jecxz
int3
push
subb
sbb
dec
add
adc
xor
movsb
mov
cli
negl
movb
mov
aad
pop
pop
xchg
sub
push
int
sbb
call
sarb
push
enter
dec
nop
pushl
xlat
test
fcmove
jg
adc
xchg
mov
stos
dec
mov
std
ds
loop
stos
or
scas
fistpl
std
fstpl
xchg
stc
cmpsb
stos
push
shlb
cmpsb
scas
xchg
fdivrl
cmpb
lret
out
dec
clc
sub
mov
mov
gs
ret
xlat
mov
dec
das
push
loope,pt
lret
ja
sbb
cmc
cmp
mov
push
lods
addl
dec
mov
sbb
pusha
xor
cs
call
fdivs
pop
sub
mov
lods
fwait
adc
add
int3
push
xor
icebp
xor
mov
mov
std
arpl
cmc
call
out
mov
sbb
ret
call
decl
mov
push
pushf
out
addl
xchg
lret
shl
loop
xorl
out
pusha
ljmp
nop
jl
sub
inc
nop
cwtl
pop
xor
and
add
pop
sti
pop
mov
rcr
cs
stos
nop
sbb
popa
mov
lds
inc
call
pop
fcoml
shl
cmovo
es
insb
push
jo
or
cmc
loope
data16
push
add
jl
add
add
mov
mov
mov
pop
or
pop
repnz
cmp
in
shlb
cmc
jg
icebp
outsl
dec
rcrb
fstl
dec
loopne
aad
cmpsb
lcall
xor
or
jecxz
arpl
or
aas
sbb
add
and
adc
pusha
imul
enter
and
psrad
mov
inc
mov
mov
imul
dec
mov
or
pushl
leave
sub
sbb
pop
push
inc
call
xchg
outsb
adc
push
cmp
jbe
adc
jecxz
add
test
lret
cmpsl
add
jno
sarl
or
and
cmpsl
mov
ss
repz
cmp
add
addl
dec
dec
clc
inc
push
pop
mov
int
stos
inc
les
shlb
xchg
mov
xor
push
leave
push
dec
fldcw
subb
pop
push
mov
fmuls
fildl
cs
push
dec
fwait
stos
mov
and
sarb
int3
mov
mov
dec
xchg
ss
or
shr
clc
outsb
aad
adc
adc
push
xlat
xchg
pop
out
add
or
xchg
xchg
out
xor
jg
pushf
cmp
cwtl
rcrl
in
ret
pop
test
adc
mov
movsb
xchg
pop
push
aaa
les
cmpsb
leave
sti
into
imul
mov
mov
sti
xor
cmp
xchg
add
cs
jmp
cs
mov
mov
sbb
int3
leave
or
lahf
clc
push
pop
cmpsb
dec
jp
mov
and
lcall
cvtps2pd
mov
adc
cli
mov
pop
loop
aam
mov
movq
stos
push
imul
les
hlt
cmp
or
dec
call
push
pushl
ror
xchg
inc
xor
cmp
popa
dec
pusha
es
lea
push
dec
sahf
mov
fdivrl
and
jbe
dec
xlat
lret
or
icebp
jae
mov
jg
ljmp
pop
push
aam
mov
cmc
xor
loopne
inc
sbb
inc
nop
mov
cmpsb
jl
das
lret
stc
in
in
bound
push
inc
and
decl
mov
jo
fisubrs
daa
mov
cmpsb
pop
aaa
call
xor
sub
iret
push
add
int
mov
or
sbb
xor
fistps
shrb
xor
icebp
or
jo
lret
mov
adc
xchg
and
mov
sub
ret
stos
popl
or
add
dec
push
out
out
fsts
lods
cmpb
mov
rcrb
jle
and
mov
loopne
out
test
cmpsl
and
xchg
pop
mov
add
sub
fdiv
roll
inc
ljmp
add
xor
push
fisttps
inc
flds
mov
incl
fwait
sti
xchg
xchg
mov
mov
in
cmp
out
jb
pop
add
inc
mov
sahf
and
in
cmp
test
mov
and
mov
push
daa
sahf
enter
cmp
mov
loopne
push
es
jno
cmp
imul
sub
fwait
popf
ja
mov
das
imul
lret
ret
clc
and
adc
add
test
fisttpl
xchg
xchg
dec
pop
insl
jnp
call
sub
pcmpeqw
stc
lods
xchg
mov
testl
sbb
shl
or
ljmp
js
jne
mov
adc
jmp
nop
mov
in
add
xchg
cs
lea
int3
mov
mov
stc
inc
dec
sub
pop
cltd
arpl
ret
mov
lds
lods
sbb
mov
repz
xchg
jl
repz
shrl
repz
ss
in
xchg
jge
jo
add
jno
inc
cmp
js
xchg
sub
imul
add
inc
and
pop
adc
add
movsl
insl
loope
mov
leave
test
call
xchg
sbb
xor
scas
push
pop
aam
pop
repnz
rcrb
movsb
cmp
xchg
adc
inc
ljmp
xchg
jbe
and
push
hlt
call
mov
jns
sub
mov
dec
loopne
push
pop
mov
pusha
jmp
jae
inc
int3
fnstsw
mov
or
gs
jbe
repz
js
into
sub
arpl
repz
dec
out
filds
cmp
stos
cmpsl
and
loopne
in
inc
lret
repnz
jo
push
repz
popf
sbb
shll
jns
daa
pushl
mov
fdivrs
loopne
testl
lock
test
push
mov
mov
pop
imul
cwtl
aas
ljmp
stos
dec
jecxz
ds
nop
inc
cmp
xor
sub
sbb
rcll
int3
outsb
iret
insl
cmpsl
loope
dec
sub
dec
aas
fistl
in
jp
ljmp
and
push
xchg
das
mov
jne
sbb
int3
jmp
repz
decl
mov
cmp
loopne
mov
jmp
mov
jae
cwtl
jo
xchg
decl
push
mov
adc
xchg
jle
rcrl
repnz
ror
into
adc
aad
js
out
aas
push
mov
fildll
outsl
mov
push
inc
scas
out
dec
push
data16
mov
mov
js
hlt
enter
mov
imul
mov
sbb
inc
jne
arpl
pop
sarl
push
cld
mov
clc
add
sub
inc
pop
test
xchg
jp
push
test
fiadds
mov
cmp
lods
xchg
mov
sbb
loop
test
int
push
scas
aam
or
ss
addr16
out
dec
cwtl
cmp
mov
sbb
lds
divl
dec
insb
aad
lea
lea
test
lret
or
dec
shlb
dec
push
cmp
cltd
jl
rolb
popa
js
icebp
daa
gs
cmp
mov
mov
aad
mov
pop
push
test
add
fcoml
mov
scas
xor
push
mov
cmp
jecxz
mov
imul
xchg
popf
push
xchg
xor
les
pop
ret
dec
mov
sub
adc
jl
loope
sbb
pusha
stc
stos
ret
adc
xchg
mov
dec
xchg
inc
pop
popf
mov
shr
pop
out
jmp
inc
in
mov
push
rcrb
cmp
jge
sar
cltd
xlat
inc
add
rorb
and
pop
cwtl
pop
lea
les
cmp
ljmp
xor
mov
mov
dec
mov
repnz
in
leave
hlt
mov
dec
mov
inc
xor
sbb
xchg
dec
pop
dec
rolb
shrl
pop
and
test
xor
test
jmp
pusha
loopne
inc
sti
das
rcll
mov
mov
mov
std
jge
imul
mov
js
cmpsl
pop
xchg
and
fldz
adc
rorb
mov
loop
lret
out
shr
pop
add
jp
jo
clc
jge
push
push
jbe
and
cltd
xchg
lret
popa
sub
jl
mov
sbb
mov
mov
mov
jno
xchg
adcb
aas
aad
je
ret
push
adc
dec
sub
jnp
adc
push
and
xchg
loopne
loope
ret
push
mov
pop
cmp
cmpb
aas
adc
push
jp
add
cmp
cmc
cwtl
dec
stos
sbb
adc
sar
cwtl
adc
xor
cld
aas
mov
mov
mov
mov
sub
ljmp
dec
popa
pop
test
inc
or
mov
enter
mov
dec
lds
dec
jnp
mov
lock
rdtsc
jbe
add
jecxz
add
cmpsb
sub
imulb
aas
fisttpl
dec
jl
jmp
mov
vmread
cmpsl
sti
dec
imul
mov
push
pusha
push
push
sub
mov
lret
or
insb
out
popa
mov
lret
loopne
push
sub
scas
ds
orl
subl
loopne
fs
cmp
adc
test
loop
lds
les
in
jg
mov
nop
sahf
mov
mov
aaa
mov
xor
das
fimuls
push
mov
fs
lea
iret
push
pop
fisttpll
push
test
mov
pop
mov
bound
popa
and
xchg
sub
push
inc
pop
pop
out
es
addr16
xchg
mov
jb
lret
fadd
ret
mov
movsl
mov
loopne
and
cltd
mov
pop
sbb
daa
fs
lahf
roll
add
cmp
shrl
int3
add
sub
lcall
out
adc
add
ss
mov
rclb
test
mov
push
inc
or
icebp
insl
push
jge
inc
mov
dec
adc
popf
pop
roll
fistps
mov
and
mov
es
jo
scas
div
inc
pop
popf
sub
jne
jbe
mov
stos
pop
sub
mov
mov
add
neg
inc
loope
pop
inc
mov
sub
lods
xchg
mov
cmp
scas
fiaddl
or
cs
sub
pushl
inc
repnz
xlat
or
int3
popa
pop
jae
pop
fmull
pop
mov
pop
leave
jbe
jg
cmc
inc
jg
mov
mov
mov
push
lea
in
xor
cs
pop
xor
vsubpd
mov
adc
imul
ret
fldt
out
mov
and
loope
sbb
mov
pop
mov
cli
push
insl
mov
into
out
cld
and
jg
int3
rolb
or
lcall
pop
test
cmp
jns
inc
sbb
jp
push
xor
xor
add
lods
push
lcall
in
nop
sub
dec
std
and
test
or
xchg
xor
mov
rolb
or
cmpsb
jnp
daa
jae
sub
add
sub
xchg
pop
int
cli
fstpl
pop
inc
roll
popf
sub
mov
stc
sbb
ror
sub
xor
pop
mov
xchg
and
add
scas
and
in
jbe
dec
or
rcrl
je
scas
lods
jge
xchg
mov
fisubrl
icebp
jbe
addr16
mov
jne
mov
lock
imul
push
incl
jnp
int3
aad
rcll
out
loopne
mov
addl
or
adc
neg
mov
adc
pop
xchg
fldl2e
mov
test
and
cmp
mov
mov
inc
test
cmpsb
jp
fcoms
ds
add
mov
repnz
inc
inc
clc
push
aad
add
dec
cld
mov
mov
sub
insl
pop
stc
xor
mov
sti
jle
rcl
int3
outsb
arpl
mov
iret
es
lahf
imul
es
sbb
inc
cmp
mov
in
into
pop
imul
scas
mov
inc
sahf
cmpsb
dec
add
jl
fisubs
daa
mov
mov
test
sti
jb
inc
inc
out
jecxz
mov
imul
and
cmpsl
inc
js
pop
cmp
pop
dec
sarl
cmp
sub
ret
adc
jp
mov
out
sub
sbb
adc
dec
fcoms
sarl
push
test
or
xchg
rolb
aas
push
mov
fldt
fistpl
test
repz
adc
add
lahf
push
mov
std
jno
outsb
fcompl
sub
mov
xlat
insb
mov
sbb
sar
jge
and
cmp
xchg
add
int
and
insb
out
ds
push
lea
enter
stos
pop
aad
leave
int3
outsl
cld
jo
scas
or
push
xchg
jne
lea
cmpsl
or
xchg
cli
xchg
push
jae
lods
mov
xchg
outsl
clc
mov
popa
popf
or
push
scas
movsl
cmp
adc
cmp
dec
add
ret
add
push
mov
mov
in
sub
mov
cmp
sub
jnp
xor
sub
xor
std
popf
xchg
loopne
cmpb
xor
sahf
popf
mov
sub
imulb
pushf
in
jp
lds
jnp
pusha
pop
pop
fmuls
cwtl
jl
fbstp
cmp
adc
sti
scas
orl
xor
inc
sub
lods
jl
and
in
cmp
cmp
jb
inc
ja
sbb
push
nop
dec
jo
mov
rol
add
adc
fldl
jmp
repz
ja
mov
push
adc
xchg
sub
cmp
mov
aam
mov
mov
sbb
fisubrl
jnp
xchg
mov
pop
mov
cmp
dec
sub
out
movsl
push
xor
ret
add
add
lahf
fadds
or
jne
xchg
dec
int
pop
push
add
xchg
jnp
mov
add
int3
adc
lret
repz
mov
popf
adc
push
pushf
loop
pop
pop
call
ds
or
xchg
jb
dec
xchg
loope
jmp
std
sub
or
jmp
jo
test
cmp
lret
mov
or
js
imul
loop
imul
cld
lods
dec
or
jns
in
dec
jmp
add
es
mov
ja
jl
jb
xchg
and
cmp
or
push
sti
hlt
incb
cmp
or
hlt
inc
cmc
ret
std
cltd
push
lods
pop
and
add
add
push
push
sub
js
pop
xor
cmp
push
xchg
iret
movsb
xchg
push
inc
or
add
and
xchg
mov
fcoms
adc
jecxz
sahf
test
jnp
rep
clc
jg
cmp
in
cmpl
enter
mov
mov
mov
xchg
mov
sahf
in
sarl
pop
aad
mov
pop
mov
in
in
ret
xchg
cmp
scas
sar
mov
lret
jecxz
ljmp
out
add
pop
sbb
ret
cmpl
out
jp
ret
stc
test
push
aaa
xchg
rolb
fldcw
popf
lods
adcb
mov
and
andl
push
push
pop
hlt
push
xchg
fcoml
cmp
imul
aas
loop
xchg
popf
mov
sbb
jne
out
push
jnp
js
cmp
imul
dec
add
leave
adc
mov
jns
aam
rcrb
popa
das
je
xor
or
stos
test
push
repnz
int3
jno
and
popa
rcrl
enter
jmp
cmp
daa
mov
mov
xchg
sbbl
mov
dec
outsl
sub
mov
adc
or
dec
sbb
sahf
aad
sahf
pusha
inc
std
icebp
fldenv
sbb
ds
mov
jnp
jp
mov
test
inc
sbb
iret
jl
jae
fisubs
jne
pop
in
add
pop
pop
in
or
cli
mov
cmpsb
cmp
in
lcall
jnp
std
call
jns
icebp
les
call
mov
cmpsl
outsb
xchg
icebp
outsl
sahf
jb
test
sbbl
adc
bswap
mov
push
jno
push
out
pop
adc
outsb
loopne
lods
mov
insl
stos
mov
test
gs
pop
sbb
push
loopne
incl
inc
test
mov
rorl
jnp
in
xchg
movsb
loop
pop
lock
jg
sbb
stos
inc
and
xchg
push
cmpl
push
repnz
cmp
mull
out
pop
in
dec
mov
pop
mov
or
lret
aam
xchg
xor
shl
mov
mov
insb
push
sub
data16
mov
cltd
push
or
push
sti
pop
outsb
fadds
cwtl
and
in
push
adc
inc
addr16
aaa
push
aaa
daa
xchg
mov
repz
ficompl
jp
xor
outsl
popf
sub
les
jl
lods
and
jp
inc
inc
test
incl
rcll
stc
ss
pop
mov
fdiv
sub
sbb
push
dec
adc
pushf
or
sti
sbb
inc
mov
jmp
fsubl
xchg
jecxz
jne
daa
lods
add
repnz
sti
cmp
lret
movsl
jecxz
into
jmp
ss
int3
xchg
jmp
in
adc
lds
push
xlat
mov
out
push
aam
sub
pop
cltd
mov
in
test
fnstenv
cmpl
sahf
popa
sti
xor
in
stc
add
ror
mov
xchg
jae
xorb
push
test
pop
movsl
mov
inc
mov
sbb
lret
std
mov
shrb
push
and
sbb
js
das
sbbb
fidivrl
cmp
push
lcall
inc
outsl
std
das
inc
mov
adcb
cmpl
out
negb
addb
lahf
mov
ss
hlt
xor
xchg
mov
jbe
dec
movsb
cmp
push
addr16
or
subl
push
sbb
cmc
movsl
mov
adc
dec
add
mov
arpl
xorb
mov
cmp
xor
ss
fwait
adc
push
popf
roll
pop
lods
in
inc
and
push
dec
mov
std
addb
cmp
dec
jns
and
sub
xor
sti
insb
pop
scas
out
pop
adc
inc
loope
cmp
pushl
in
xchg
movsb
bswap
lods
push
pop
js
addr16
sbb
mov
dec
cltd
shll
popa
inc
bound
addr16
pop
jbe
sub
int
xor
aam
xchg
std
clc
stc
xor
ja
ficoms
inc
pop
pop
mov
xlat
mov
jecxz
inc
lret
xchg
bound
lods
test
pop
and
sub
mov
push
rorb
xor
cmpsb
stc
jl
loopne
addr16
cmpsb
gs
mov
push
push
mov
and
fdivp
lret
mov
pop
mov
mov
or
fisubl
cmp
and
shll
mov
in
rcrb
jle
xor
fcmove
stc
dec
cmp
shlb
es
sub
pop
clc
imul
xchg
or
les
jmp
push
xchg
jle
pop
insb
mov
sub
mov
mov
mov
cwtl
xor
sub
pop
repnz
movaps
cmp
mul
lea
out
mov
push
aaa
pushf
outsl
mov
jmp
pop
or
xlat
sarl
fimuls
xor
incl
leave
shll
pop
ret
iret
fcmovnb
ja
shll
into
jne
mov
xor
pop
fiaddl
dec
and
inc
outsl
mov
mov
test
es
insb
mov
jnp
stos
popa
mov
push
add
enter
test
aam
sub
fs
and
mov
pop
insl
add
stc
addl
push
jbe
out
sbb
cmp
add
test
dec
add
jge
ror
pop
cmp
or
xchg
sbb
enter
aam
aas
jae
and
xchg
sti
stos
lcall
fcmovnbe
jno
jg
sub
cmpsl
insl
mov
es
mov
inc
jecxz
lock
out
xor
mov
andl
dec
shr
roll
test
stc
pop
push
ficomps
dec
mov
pop
fadd
ja
jae
push
cmp
jns
ss
jge
cmp
fnstsw
xlat
xor
ficoml
adc
inc
dec
push
enter
and
roll
stos
lods
cmpsl
fldt
xchg
cld
xchg
stos
lods
mov
sbb
mov
jmp
jne
adc
jecxz
enter
fcmovnb
lret
sahf
mov
inc
test
lock
in
test
xchg
xor
outsl
popa
scas
inc
andl
aas
aam
inc
pop
xchg
push
lds
fwait
mov
sbb
adc
or
mov
mov
mov
pop
jnp
pusha
dec
cmp
pop
and
cs
aaa
mov
inc
mov
adc
imul
mov
jl
stos
sti
mov
aam
daa
repz
pop
imul
arpl
repz
aas
ss
iret
not
rcll
inc
mov
cmp
dec
loope
stc
sbb
or
lds
repz
jmp
and
jmp
test
in
sbb
in
jb
xor
mov
push
rcll
sbb
loope
imul
or
add
push
popf
in
pop
jbe
subl
loop
mov
mov
in
fcoms
xchg
test
cmpsl
and
inc
lahf
push
jae
scas
imul
cld
jl
repz
enter
out
mov
push
aas
outsb
mov
aas
and
stc
push
loopne
inc
jp
pop
into
mov
lock
mulb
test
inc
push
sub
repz
push
sub
cli
in
mov
pop
dec
adc
into
cmpb
insb
pop
mov
fwait
xchg
outsb
or
stos
fsubrl
xchg
sbb
mov
and
ja
loope
scas
mov
ja
and
mov
int3
fwait
stos
fimull
imul
add
aad
inc
jmp
test
popf
mov
cmp
or
rcll
nop
mov
daa
mov
mov
adc
stc
cmpsb
and
stc
xchg
and
cmp
scas
and
inc
and
aad
dec
enter
enter
jb
fadds
insb
push
push
jle
je
mov
mov
xor
mov
and
xor
es
mov
add
and
arpl
xchg
lret
in
xchg
xor
xorb
jno
mov
jns
fsubp
sysenter
pop
push
inc
enter
jle
cmp
jp
push
xchg
mov
hlt
call
xchg
loope
shl
repnz
mov
addb
test
in
out
das
add
adc
sbb
or
adc
pusha
repnz
mov
iret
mov
fsubs
sbb
pop
les
and
mov
idivb
and
scas
and
fucompp
mov
popf
jle
pop
jle
xchg
xor
mov
outsb
outsl
std
sub
xchg
hlt
outsl
cmpsl
cmp
and
or
sbb
lods
popa
sub
and
outsb
cltd
xchg
cli
into
cmp
cs
insb
sbb
outsl
mov
fists
or
incb
inc
repz
sub
push
ret
out
sbb
shll
aam
jo
sub
mov
cmp
xchg
aad
mov
mov
sbb
mov
pushf
lret
and
add
pop
mov
mov
cltd
or
rorb
add
mov
sub
jo
jp
push
dec
sarl
roll
push
fs
mov
jno
je
out
push
jnp
loopne
cmc
mov
aaa
call
test
testl
lock
xchg
inc
aaa
fildl
aad
push
mov
lods
mov
add
les
dec
jnp
mov
dec
xor
nop
sbb
dec
sub
xchg
lock
inc
push
fwait
inc
inc
in
sbb
or
mov
jno
out
jmp
or
inc
adc
cli
push
jmp
outsl
into
sti
jle
loop
lods
in
nop
cmpsl
dec
mov
add
cmp
daa
mov
fwait
stos
adc
pop
sub
lahf
dec
sbbl
imul
and
jne
mov
test
pop
jp
inc
insb
mov
ljmp
shll
jne
aam
push
gs
sub
inc
cwtl
cmp
sahf
mov
inc
incb
int3
mov
xchg
mov
inc
push
push
dec
add
mov
dec
imull
loop
aam
js
data16
mov
jg
scas
xchg
mov
and
into
sub
adc
jle
addr16
xchg
sub
movsl
imul
loopne
leave
mov
xlat
lods
mov
dec
insl
jo
idivl
sbb
loop
test
aaa
mov
mov
test
add
ljmp
adc
mov
daa
dec
pop
scas
dec
icebp
xchg
lods
lcall
movsl
dec
or
jnp
and
push
je
inc
mov
jmp
fisttps
mov
inc
out
sub
enter
loope
mov
repnz
js
test
push
inc
repz
outsb
pop
icebp
jns
mov
shlb
sub
and
decb
mov
out
les
sbb
cmp
push
icebp
xchg
rclb
jnp
add
lods
mov
cmp
push
cmp
popf
stc
mov
and
mov
sub
xchg
lock
adc
andl
mov
or
dec
outsb
mov
jle
das
je
aaa
xlat
sti
aad
pusha
fnstsw
jns
ss
popa
mov
sub
call
cmpsb
popf
pop
lea
sub
push
icebp
mov
push
xchg
xor
cmp
out
loopne
mov
mov
rorl
mov
rcr
xor
jle
clc
fisttpl
pop
sub
mov
out
adc
sbb
inc
jns
xchg
push
leave
lds
out
jmp
inc
sbb
xor
pop
sub
xlat
ds
lret
pop
scas
pushf
jae
clc
int3
repnz
xchg
or
out
adc
jne
fwait
inc
push
xor
pop
jg
out
fsub
je
test
lods
iret
cli
cmp
add
sub
in
xor
xlat
add
arpl
cltd
add
js
cmp
pop
add
popa
lahf
fdivrs
sbb
push
pop
inc
or
out
pop
test
adc
aam
lods
repnz
iret
jnp
imul
in
mov
pop
inc
cwtl
sub
xor
jmp
push
sub
push
mov
add
push
call
sbb
insb
out
lds
jae
lods
and
into
gs
mov
rcr
movsb
cmp
pop
cmpb
dec
arpl
pop
shll
inc
mov
lret
inc
sbbb
aad
lods
cld
xchg
out
sbb
and
lods
mov
fwait
aad
iret
sar
aaa
loope
adc
or
push
pop
dec
jbe
roll
int3
ljmp
lret
bound
xchg
scas
cs
or
data16
xor
stos
iret
sub
mov
lock
jb
push
faddl
xor
movsl
pop
movsl
shrl
push
inc
jno
add
outsl
insb
jae
fsubrs
and
and
jnp
mov
jno
cmp
popf
inc
and
imul
jo
xorb
scas
mov
in
aam
pushf
pushf
movsb
lret
xchg
stos
mov
leave
hlt
loope
push
inc
adc
enter
repnz
pop
inc
sti
mov
sub
sbb
adc
mov
jecxz
adc
pop
mov
mov
add
sub
push
in
jae
xchg
mov
adc
sub
adc
mov
out
jb
mov
out
int
jge
mov
cmp
mov
repnz
cld
inc
add
mov
xchg
test
out
fwait
cmp
aas
mov
mov
pop
xor
cwtl
popa
add
test
add
xchg
xor
fisubl
and
rolb
jge
mov
xchg
pop
sub
pop
xchg
cli
popa
repz
leave
add
dec
mov
xor
xchg
cli
mov
add
mov
in
inc
in
pushf
in
mov
jo
fsubl
cmp
pusha
or
mov
or
mov
out
pop
mov
or
movsb
imull
lret
cmp
add
sbb
dec
push
fidivrs
xor
insb
jmp
jmp
decb
jl
pop
adc
mov
jl,pn
maxps
pop
sbb
push
xchg
push
cmp
loop
jns
outsb
xor
xor
sub
mov
xlat
add
mov
ds
xor
rclb
scas
sub
inc
or
push
insl
mov
mov
mov
jle
lea
push
mov
leave
mov
mov
xchg
cld
jecxz
dec
je
sbb
xor
int3
pop
adc
add
and
lock
pop
push
cmp
test
movb
push
mov
popa
fsubrs
sub
inc
out
aam
call
movsb
mov
push
xchg
mov
aad
outsl
testl
adc
ret
mov
xor
aas
rcrl
cli
pop
inc
sbb
pop
loop
push
sahf
cmp
cmc
lods
or
out
mov
inc
mov
inc
push
xchg
inc
out
mov
lret
inc
or
mov
icebp
mov
enter
xor
loopne
sbb
outsb
xchg
add
xchg
cs
gs
or
push
pop
rcrb
call
sbb
xchg
xorb
sbb
mov
or
cmpsl
fs
mov
int3
clc
jle
pop
mov
clc
sub
mov
movsb
jno
les
mov
js
fildll
test
jno
push
jecxz
pop
ret
lret
pop
sub
fcompl
dec
adc
lds
jns
clc
xor
les
movsl
dec
inc
imulb
in
push
arpl
pop
cmp
cmpsb
add
cwtl
nop
pop
incl
or
push
jecxz
mov
mov
dec
adc
bound
cmp
ja
fnsave
daa
xchg
push
incl
cmp
pusha
insb
jno
dec
adc
adc
test
cld
xlat
pop
inc
mov
pushf
inc
mov
xchg
ficoml
mov
mov
sub
pusha
mov
inc
mov
imul
ds
mov
or
stos
sub
stos
nop
pop
adc
mov
cmpsb
ljmp
stos
shlb
add
add
insb
lods
adc
outsb
fisubs
jne
push
jns
ja
xchg
and
sbb
sub
iret
cmc
sub
sbb
int
aas
repz
aas
adc
add
push
iret
and
into
cmp
mov
add
cld
sbb
data16
inc
add
jle
cltd
out
fdivrs
ret
cmp
cwtl
rcrb
mov
xchg
sbb
adc
or
xchg
xchg
xor
xor
push
cmp
in
cltd
cmp
shlb
call
jp
ja
and
xlat
and
out
pop
jno
lret
fisubrs
xor
add
lahf
inc
and
out
cmp
mov
inc
stc
jp
sarb
and
mov
or
sub
das
xlat
mov
movsb
inc
or
ret
cmc
loop
setb
out
sbb
and
stos
cwtl
inc
lret
jecxz
sbb
int
es
test
cwtl
lcall
adc
xchg
adc
push
fwait
stos
sub
cmpsb
inc
cmpsl
mov
cmp
scas
adc
adc
pop
pop
in
sahf
mov
sahf
xlat
arpl
xor
xsavec
int3
or
stos
xor
pop
sahf
dec
lea
mov
sub
insl
and
mov
adc
inc
je
clc
shrl
ret
cmp
xor
and
or
add
sbb
rorb
daa
xlat
ret
mov
loope
xlat
lahf
pop
cwtl
sahf
fisubl
mov
test
adc
jns
mov
ror
inc
add
xchg
imul
xor
cli
loop
push
inc
inc
stc
in
sub
mov
je
scas
sub
mov
inc
xlat
test
inc
adc
xor
jp
lock
jns
mov
mov
mov
dec
andl
xor
lds
push
ds
in
dec
cmpsb
cmc
cmpsl
arpl
xchg
rcrl
insl
loopew
fisttpll
push
mov
cmp
clc
ret
jg
xchg
jecxz
add
aaa
push
lret
in
mov
lret
sqrtps
dec
fsubrl
dec
sbb
push
fimull
pop
cmpsb
int
inc
movsl
rorb
mov
sar
xlat
rolb
cld
inc
dec
divl
dec
call
movsb
int
inc
jae
popf
lahf
pop
cmpsb
mov
pusha
xchg
jecxz
add
inc
pop
incl
fwait
or
fdivl
dec
repnz
pop
adc
sub
cmpsl
scas
dec
ret
dec
lret
loopne
movsb
adc
mov
xchg
dec
rcrl
rcl
insb
adcb
jmp
or
mov
pushf
arpl
and
ds
pop
and
xchg
mov
fsubp
add
dec
into
cmp
popa
pop
lret
mov
sub
xor
lahf
xchg
fmulp
jns
aam
xchg
movsl
xchg
test
jmp
mov
es
inc
imul
or
shlb
sbb
push
jne
jge
xchg
lcall
pop
aaa
xor
pop
add
xchg
and
xchg
mov
fists
adc
mov
dec
inc
or
sub
mov
std
stos
jbe
jg
fs
das
roll
cmp
adc
rorl
cmc
aam
lods
cmc
lahf
sarl
pop
in
mov
arpl
fucomi
push
pop
sbb
rorb
inc
sti
fiaddl
je
sti
and
popa
ljmp
fildll
hlt
cltd
mov
push
inc
cs
pop
ss
lahf
out
xor
and
jge
jo
inc
bound
and
fbld
leave
sub
add
in
aas
add
pushf
stos
mov
out
xchg
xchg
mov
adc
mov
xchg
mov
popa
and
jae
mov
push
fs
rcrl
or
sbb
mov
sub
mov
push
arpl
leave
push
sbb
insb
iret
cmp
insb
arpl
cmp
orl
xchg
xor
and
mov
bound
addl
fwait
sbb
sbb
mov
add
push
insb
xchg
fsub
fs
shl
mov
sbb
les
mov
or
iret
int
mov
das
decb
hlt
mov
mov
sbb
mov
lahf
fst
lods
jnp
jecxz
out
push
fldt
imul
push
cmp
out
fcoms
int
jmp
xchg
mov
sti
pop
adc
push
das
sahf
fs
sub
test
aas
shll
jnp
sub
sbb
xchg
cmp
fs
dec
scas
leave
jle
sbb
cmp
fwait
push
mov
movsb
stos
sub
ljmp
in
fldenv
sub
test
pop
mov
icebp
push
outsb
sbb
mov
sbb
sbb
pusha
les
fwait
dec
cmp
loopne
fcomi
sbb
xor
mov
negb
mov
jge
sbb
shll
ud2
mov
stc
or
push
mov
dec
xor
popl
fdivrs
cmpsl
loopne
into
push
push
loope
dec
xor
adc
xor
xor
xchg
addl
adc
and
sbb
sub
or
push
pop
add
insl
loope
into
mov
fwait
inc
das
inc
sbb
orl
cmp
mov
rcrl
ljmp
dec
fidivs
repz
addb
ret
enter
fimuls
dec
mov
testl
insb
repz
cli
jp
xor
mov
leave
pop
xchg
mov
iret
mov
and
dec
mov
push
add
mov
jae
rcll
arpl
lock
aam
jb
in
into
ljmpw
clc
dec
mov
andb
pop
jbe
adc
mov
je
icebp
push
mov
xchg
rcll
lock
daa
push
add
xor
jle
mov
icebp
outsl
popl
shrl
cwtl
loope
and
jg
cli
xor
jno
in
insl
cmp
cmp
mov
mov
ret
xchg
mov
add
lahf
adc
sbb
fldcw
shl
mov
push
int
movsb
inc
in
fists
xchg
pop
cmp
dec
add
aas
mov
jnp
cmpsl
les
mov
mov
das
ror
xchg
arpl
icebp
test
pop
add
inc
iret
mov
lea
mov
ret
outsb
jne
sahf
push
movsl
popa
fsubrl
punpckldq
movsl
hlt
lock
ret
pop
sub
sub
mov
popf
and
loope
or
add
xor
pop
imul
sub
gs
pop
adc
push
cmp
gs
add
adc
or
je
mov
inc
lods
xor
fbld
loopne
mov
pop
xor
dec
aaa
in
mov
inc
push
push
or
aaa
testb
lret
sub
mov
loop
pxor
icebp
pop
and
lds
adc
enter
fdivrs
mov
mov
imul
stc
xchg
xchg
sahf
push
cvtps2pd
push
lea
enter
inc
sbb
loope
idiv
mov
call
mov
push
les
idivb
data16
jl
cmpl
add
clc
xchg
je
add
loopne
mov
imul
cmpl
push
xchg
or
mov
mov
loope
or
add
fisttpll
ret
fs
fiaddl
adc
and
frstor
sbb
fnstcw
pop
fwait
pop
mov
nop
dec
push
outsl
mov
js
adc
arpl
pop
sahf
mov
sarb
inc
pop
and
sarb
dec
lods
outsl
sub
imul
xchg
sbb
pushl
aaa
in
fldcw
iret
and
adc
rolb
push
add
lret
or
adc
cmp
inc
rorb
sub
pop
xbegin
shl
dec
xor
lods
dec
dec
sbb
fiaddl
jnp
ss
push
repz
cmc
xchg
push
mov
push
fadds
adcb
repnz
adc
fwait
lret
xchg
leave
sbb
mov
lcall
sbb
loopne
push
sub
stos
rolb
mov
out
push
push
push
fdivrl
popf
add
std
addr16
adc
icebp
cmp
add
cwtl
aas
enter
jns
cmp
pusha
xorl
scas
pushf
mov
xor
sub
xchg
shl
std
sarl
fidivl
rcrb
dec
sub
pop
out
in
inc
movsb
xlat
fcmove
loope
pop
cmpsl
push
int3
inc
mov
lret
pop
push
ret
xchg
addr16
ds
stos
push
pop
addl
out
and
or
mov
pop
inc
es
shl
xlat
or
pop
loopne
sbb
sub
out
push
aad
lds
mov
fildl
imul
ljmp
or
add
test
adc
jb
sub
mov
in
lahf
stc
es
inc
mov
loop
push
push
jnp
jno
pop
cmp
ds
jle
popf
add
frstor
sbbl
adc
ljmp
mov
aad
lods
inc
or
ja
pusha
mov
ja
push
push
xchg
push
sub
push
es
or
gs
sbb
aas
jmp
jmp
adc
sbb
pop
mov
jb
and
jnp
add
bound
inc
push
pop
lahf
imul
fs
loope
ret
or
fs
test
les
pop
mov
cld
popa
shlb
push
into
addr16
sub
jae
shlb
jge
lock
mov
test
or
jge
roll
push
outsl
push
mov
leave
mov
leave
outsl
repnz
popa
scas
outsb
sahf
cmp
cwtl
pop
sbb
jge
insl
cmpsb
add
lret
adc
xchg
sub
pop
jge
loopne
loop
jns
subl
dec
inc
sbb
test
fucomi
scas
fnsave
inc
xor
add
leave
xchg
sub
iret
xor
sahf
test
sti
push
insl
mov
loop
movb
icebp
jl
sub
divb
cld
in
bt
je
mov
pop
push
pop
negb
mov
fsubr
test
mov
inc
xor
arpl
shl
into
fwait
es
inc
add
sbb
dec
push
mov
mov
pop
add
and
lods
sub
add
add
rcrl
push
mov
andl
mov
mov
mov
xor
cs
pusha
xchg
xchg
test
mov
adc
push
sbb
dec
and
sub
cwtl
jg
mov
shll
mov
mov
inc
mov
daa
mov
pop
subl
xchg
jbe
push
in
mov
pop
loop
push
data16
or
stos
pushf
mov
xorb
xchg
testb
cmp
sbb
in
and
pop
aad
pusha
ds
stos
pop
rcrl
inc
fucomi
jecxz
jnp
sub
adc
fdivl
pop
add
inc
cmpsl
mov
pop
add
inc
imul
or
shrl
adc
call
cmp
push
add
imul
cwtl
in
iret
mov
leave
cmp
bound
push
mov
fdivrl
xchg
cltd
jl
test
inc
sbb
ret
mov
or
sbb
mov
sub
lahf
jg
push
pop
addr16
push
bound
jp
ljmp
push
add
sahf
push
xor
call
jb
test
push
imul
sahf
mov
cmpsb
xlat
dec
jge
sub
xchg
push
add
jno
notb
xchg
jp
mov
mov
out
pop
ss
sahf
dec
pop
and
int3
and
push
mov
adc
mov
sbb
jg
nop
inc
lret
push
inc
inc
dec
dec
mov
or
ret
jo
add
xor
mov
roll
ret
xor
rcll
rorb
xchg
cmp
lods
lds
or
jbe
mov
and
test
xor
xchg
or
call
ret
cmp
lahf
mov
mov
and
pop
sbb
inc
aaa
inc
repz
pop
mov
aam
adc
ljmp
js
outsl
or
mov
test
sahf
outsl
xchg
loop
aaa
daa
push
insb
and
lods
sub
pop
call
xchg
sub
mov
ret
adc
dec
sti
movsb
xchg
mov
incb
push
mov
pop
add
jg
aas
inc
mov
test
arpl
push
or
dec
aas
push
add
mov
fnclex
pop
cmc
xchg
jae
mov
dec
or
mov
mov
sub
cmp
repnz
cmp
mov
jge
aam
mov
jge
aad
sbb
xchg
sub
sti
pop
leave
mov
sub
jl
test
pop
mov
lret
scas
aam
rcrl
xchg
cld
roll
dec
or
ror
add
jno
leave
or
adc
outsb
push
data16
xchg
xlat
loopne
fsubrl
popf
repz
outsb
mov
pop
mov
enter
adc
push
aas
sar
cltd
add
sub
push
stc
mov
lock
negl
mov
dec
outsl
inc
sbb
gs
subb
in
shll
out
gs
ss
mov
xor
cmp
lret
sub
fbld
pop
pop
or
mov
inc
sub
xchg
cmp
repz
out
nop
fsts
test
aad
out
push
out
sbb
pop
movsl
int
adc
in
and
jb
pushf
fidivrs
mov
sbb
stos
inc
jne
aad
ficoms
jb
int
sub
ret
jbe
push
bound
inc
loopne
sub
fadds
sub
in
leave
enter
jle
daa
and
clts
push
les
inc
leave
lahf
push
and
stc
mov
cmp
lock
pushf
sbb
jo
push
mov
mov
pop
stos
inc
mov
jecxz
xor
scas
mov
sbb
sub
sar
fs
popa
mov
jns
mov
shrl
ret
sub
or
pusha
and
dec
push
mov
jae
and
push
fsts
cmp
mov
fistl
or
int3
lcall
and
lcall
imul
mov
cmpsl
pop
repnz
or
ljmp
gs
fcmovbe
dec
daa
stc
ljmp
pop
loop
inc
add
cmc
jnp
mov
mov
aas
mov
mov
sbb
aas
test
fwait
jecxz
pop
leave
ds
lds
in
xchg
or
daa
add
sub
scas
push
push
pusha
les
or
inc
movsl
popf
jo
sub
in
dec
cltd
mov
push
push
sbb
adc
cmpsb
sbb
sub
inc
jns
jmp
cli
xchg
cs
jno
adc
scas
fcmovnb
ret
or
repz
dec
imul
insb
sbb
push
lds
pushf
jbe
push
jle
inc
jb
negb
mov
in
fmuls
pop
stos
xchg
fcomps
xor
add
jg
sub
xchg
jnp
mov
or
mov
cli
push
sar
xor
inc
sbb
popa
pop
adc
jb
ljmp
pop
add
and
icebp
jo
mov
xchg
inc
push
mov
jno
lods
xor
add
lods
je
pop
xchg
xchg
push
test
lds
insb
ss
jmp
mov
int3
dec
pop
rclb
cmp
aam
cmp
push
mov
rclb
sub
mov
lds
ret
adc
add
jge
lret
idivb
pop
loope
xor
pushf
stos
popa
fsubrs
xor
xor
push
adc
jo
sti
jmp
push
and
loope
int3
das
arpl
lcall
cltd
rorb
insb
or
in
cmp
ret
out
divb
cmpsb
or
sub
ret
lret
sbb
pop
outsl
movsl
xor
adc
add
pop
pop
push
xorl
in
inc
scas
push
pushw
mov
popf
sahf
scas
jge
jne
jbe
mov
add
xchg
push
jp
aam
and
pop
sbb
and
cld
or
inc
xchg
sti
stos
test
sub
jns
mov
inc
nop
xchg
and
mov
std
push
cmp
mov
rclb
pop
sbb
and
in
cmp
pop
popf
mov
and
push
mov
lcall
push
or
mov
iret
mov
scas
mov
or
scas
cmp
or
lret
rcl
push
gs
and
ret
js
jbe
jge
or
xchg
add
jns
push
stos
jb
jmp
lods
xchg
or
pusha
fs
and
sbb
popf
or
popa
xor
mov
ss
iret
or
div
cltd
push
leave
mov
popf
in
cwtl
lea
scas
popa
cmp
add
jmp
add
jb
push
push
sub
push
xchg
xchg
pushf
jne
daa
fsubrl
cmp
mov
leave
xchg
add
pop
mov
clc
jle,pt
stc
in
xchg
dec
mov
cmpsl
arpl
mov
repz
imul
insl
jl
bound
dec
nop
mov
cmp
cmp
jae
in
push
out
stos
pop
sub
scas
mov
cmpsl
mov
std
rep
jae
cmp
adc
xchg
jno
lock
in
adc
int3
jne
sbb
icebp
sarl
loopne
xchg
jg
and
ror
dec
call
repz
lret
les
push
mov
cli
push
xchg
or
loope
insl
mov
lcall
clc
sub
out
pop
pushl
and
sub
xchg
fcoml
sub
and
scas
dec
scas
or
jg
pop
jp
mov
jns
mov
xchg
cmp
dec
negl
cmp
mov
lds
fdivp
int3
popa
loopne
es
je
jbe
adc
xchg
xlat
and
inc
add
clc
inc
jle
sbb
mov
and
push
or
cmp
daa
xchg
sub
and
mov
jne
fwait
push
movsb
cmp
push
cli
xor
or
aam
sub
lret
mov
js
pop
mov
cs
push
ss
fsubrl
adc
test
cmpsl
cmpl
and
mov
movsb
das
xor
daa
popf
out
addb
in
dec
ret
push
xchg
stos
jbe
mov
xor
mov
mov
mov
sbb
adc
pop
jne
push
popf
mov
xor
mov
addb
in
divps
xor
cmp
jo
inc
pop
push
or
xchg
xchg
sub
insb
rol
and
sub
or
jnp
push
pop
fisttpl
fwait
adc
cmc
dec
jmp
or
clc
cmc
cmp
lds
loope
dec
roll
mov
orb
ja
sti
je
xchg
dec
lods
popf
jne
mov
fdivrl
sarl
adc
leave
outsl
xchg
push
enter
lcall
in
lret
mov
xor
cmp
mov
cld
pop
into
add
je
mov
pop
inc
pop
or
stc
shlb
in
out
out
mov
pop
pop
shl
cmp
fimuls
or
sarl
mov
orb
xchg
into
and
mov
leave
daa
mov
mov
ljmp
mov
data16
test
call
call
into
mov
lds
sbb
js
gs
jg
xor
cmp
test
jns
cwtl
add
mov
out
addr16
adc
dec
lahf
movsb
lea
imul
or
jmp
dec
xchg
mov
jmp
xchg
mov
adc
mov
stos
sarb
pop
movsb
cmc
mov
push
int3
adc
mov
nop
xchg
xor
adc
adc
push
repz
push
add
xor
mov
adc
sbb
in
add
sub
xor
xchg
or
test
push
das
mull
lahf
rorl
fiaddl
or
jo
popa
outsb
scas
add
mov
dec
pop
data16
dec
mov
jne
popf
scas
xor
out
clc
loope
pop
into
mov
cmc
inc
nopl
popf
les
out
adc
sub
sti
lds
cmp
pop
dec
jnp
arpl
or
test
mov
or
sbb
adc
mov
idivb
in
fcoms
add
popa
mov
roll
mov
pop
outsb
jae
testl
jl
xlat
dec
roll
shrl
lret
jg,pt
mov
movb
dec
dec
cmp
sbb
mov
stos
add
loop
inc
mov
and
inc
push
jb
sarl
mov
aas
sbb
pop
lds
outsb
movsb
dec
or
popa
imul
adc
push
aam
mov
subb
pop
xchg
lods
je
ljmp
push
sbb
mov
push
addr16
call
pushf
add
test
fldl
inc
jge
sbb
insb
insl
mov
adc
sbb
fdivrl
lea
push
or
int
push
sub
fisttpll
xchg
cmp
ss
cmp
cmp
sbb
test
inc
adc
jecxz
notl
cwtl
test
cmp
xor
ret
call
mov
pop
or
dec
sarb
dec
iret
fisubl
and
mov
add
mov
inc
xchg
in
pop
lods
cmc
loope
cmp
lahf
mov
push
jne
test
sub
popa
gs
fwait
test
ds
into
pop
pop
fisttpl
arpl
xchg
and
sub
in
sahf
lahf
pop
adc
jo
and
pop
adc
test
call
fwait
pop
dec
in
sahf
cmp
cmpl
inc
jns
stos
inc
stos
in
ucomiss
xor
cmpsb
xor
frstor
pop
clc
dec
xchg
push
adc
jb
mov
adc
sbb
xchg
pop
mov
dec
and
inc
inc
sbb
xchg
mov
xchg
xchg
mov
lahf
lods
jbe
jecxz
push
std
gs
divb
lds
mov
sbb
and
imul
sahf
arpl
jmp
into
lds
inc
vpmaxub
push
test
mov
pushf
jmp
cld
mov
sub
lock
into
fildll
mov
cmp
subl
mov
sub
repz
mov
movsl
int
cld
xor
lds
inc
and
dec
cwtl
test
sub
and
sub
subb
inc
imul
test
fildl
stc
adc
lock
rolb
cmp
jnp
inc
pop
addr16
loop
push
loope
es
xchg
mov
test
movsb
cli
dec
dec
shll
push
lret
insl
in
fst
add
mov
fisttps
cs
popa
test
rcrl
sbb
lods
mov
adc
mov
cmc
and
dec
stos
inc
xchg
xchg
add
out
sbb
jno
movsl
push
and
loope
notl
rolb
test
fisubrl
pop
inc
ds
aad
cmc
mov
pop
sub
stc
std
add
int
mov
cmp
outsl
xor
lods
xlat
mov
push
jge
in
xchg
xchg
add
add
shll
inc
pushf
ror
and
imul
sub
xor
sbb
mov
add
cld
sti
gs
cmp
insl
push
push
pop
and
jl
xchg
mov
adc
popf
jp
out
cli
adc
mov
gs
xor
addr16
icebp
push
aas
cli
jno
test
mov
in
test
xlat
jno
fnstcw
push
add
add
pop
mov
loope
les
and
sbb
std
inc
inc
notb
mov
hlt
insb
push
daa
ret
inc
cmp
xlat
icebp
and
add
mov
mov
jns
icebp
xorl
stos
mov
push
fdivl
mov
shl
add
mov
add
sub
jmp
adc
out
jp
jo
sub
cmp
pop
hlt
or
je
mov
lea
pusha
cmp
xchg
insb
dec
or
push
rclb
int
imul
sbb
push
add
xor
fwait
pop
jnp
clc
test
push
sahf
sahf
mov
xchg
out
ret
xchg
bound
idivb
leave
pop
jecxz
fcomp
test
sub
ror
mov
pop
push
icebp
je
or
push
lcall
mov
stos
push
pusha
xchg
jae
fimull
or
call
inc
cltd
lods
int
adc
mov
dec
stos
push
inc
loopne
add
add
orl
push
push
sbb
in
fbstp
push
push
lea
pusha
mov
cmp
rcl
pop
xchg
repnz
jge
or
fcomp
stc
mov
sbb
cmp
and
mov
inc
and
pop
xchg
add
dec
movsl
and
sbb
pop
jne
jne
mov
cltd
out
lea
inc
push
fimuls
pop
sbb
jbe
cmpsb
xchg
push
pop
or
out
and
aas
sbb
add
test
jo
daa
test
pop
and
mov
in
jb
xchg
and
and
fwait
push
cs
mov
dec
fdivrl
in
mov
dec
mov
cmp
imul
mov
cmpb
mov
popa
push
orb
cwtl
data16
push
repz
fisubrl
dec
outsl
out
xor
push
cli
xchg
fimull
xchg
add
sub
aaa
fstps
out
dec
xchg
xchg
in
push
repz
sub
pop
repz
out
sbb
mov
test
call
push
in
stos
xor
jp
and
test
xchg
mov
or
div
inc
xor
lods
or
fdivrl
loope
outsb
jo
mov
dec
push
jecxz
push
sti
sahf
xor
lahf
sbb
cwtl
xchg
sbb
lock
xor
test
pop
ret
pop
adc
sub
sti
icebp
xchg
add
jmp
insb
xlat
lea
inc
inc
into
aad
js
out
test
mov
into
cmp
loopne
mov
cld
jb
sub
cmp
inc
mov
or
add
imul
push
inc
ljmp
iret
sahf
mov
push
fisubrs
inc
enter
mov
lea
in
and
sahf
pop
add
jecxz
arpl
in
fmuls
jno
ss
add
push
push
or
jge
or
inc
adc
inc
mov
jbe
iret
mov
sub
xor
mov
inc
xor
sub
mov
sbb
cmp
das
cmc
push
imul
jns
adc
cld
cmp
pop
push
vpsubd
rolb
inc
out
sti
pop
add
sarb
mov
int3
jge
inc
mov
cmc
push
xor
mov
fdivl
push
or
pop
test
in
inc
mov
adc
popa
dec
add
push
jbe
mov
imul
mov
je
insb
rorl
cmc
xchg
mov
or
add
jl
cmp
cmpsl
js
sub
pop
negb
add
sub
mov
in
subl
jmp
sub
cmp
add
xchg
pop
pushl
aam
fisubl
mov
xchg
lock
xchg
fs
or
jle
stos
add
or
out
fnstsw
test
mov
push
and
fcompl
jb
inc
fldl
or
jecxz
and
sarb
in
sub
out
aad
and
lods
mov
push
xlat
cmp
js
idiv
push
xor
jnp
mov
jmp
push
cmpb
or
sbb
mov
pop
call
popf
push
push
sub
sbb
leave
inc
cmp
cmp
iret
pop
mov
pop
lock
xchg
jnp
lret
dec
outsl
cmp
gs
jmp
mov
jnp
cltd
jnp
fildll
pop
mov
sbb
mov
dec
fadds
add
out
xor
xchg
or
inc
rcll
in
or
jp
jae
mov
mov
and
fists
mov
pop
mov
mov
ret
inc
or
subb
in
push
adc
or
jb
das
int
and
adc
dec
push
adc
and
push
mov
addr16
inc
lret
cmp
mov
pop
add
cli
and
sbb
mov
inc
adc
imul
pop
sub
and
lock
cmp
arpl
loop
mov
jne
leave
jo
mov
jb
sbb
mov
inc
sbb
pop
fs
mov
ficompl
pop
pop
jbe
push
push
adc
outsl
sahf
jbe
sbb
cmp
sarb
push
jno
movsl
ret
cmc
add
rolb
hlt
das
icebp
xlat
or
loop
adc
mov
sub
roll
aas
aas
pop
aas
mov
jae
sub
fucomip
push
fdivrl
testl
and
iret
aam
stc
fs
insl
xchg
cmp
jg
jne
dec
lea
pushf
mov
pushf
add
or
in
jl
dec
xchg
sub
sub
test
hlt
mov
andb
js
cmc
fwait
out
cmc
not
jns
add
mov
jmp
mov
sbb
les
push
loop
pop
rclb
ljmp
dec
andb
les
data16
jns
push
jle
cmpsb
jb
xchg
ret
shll
mov
divb
fcoml
dec
and
iret
daa
mov
mov
cmpl
lods
cmc
decl
cltd
js
ljmp
push
stc
mov
dec
xchg
insl
fldl
xchg
inc
stos
push
icebp
cltd
fists
ss
mov
aam
test
repz
lea
test
xchg
movsl
shll
rcrl
dec
cmc
jne
lcall
inc
xchg
aad
mov
aaa
test
xchg
inc
sti
outsb
bound
push
je
outsb
in
test
sbb
lret
jp
jg
iret
pop
mov
push
jmp
push
cwtl
mov
pop
cmp
fcoms
popf
jne
or
leave
mov
mov
cld
outsl
mov
push
ret
sbb
mov
fwait
outsb
cli
mov
mov
pop
pusha
dec
push
fcompl
sub
xor
nop
rorb
loope
insb
imul
pop
jle
xchg
gs
mov
mov
fisubrl
in
cs
inc
xchg
mov
sbbl
inc
xchg
xchg
in
mov
pop
xchg
inc
jge
xor
fs
rcr
inc
sub
dec
leave
sub
pop
int
dec
daa
or
fldenv
cmc
sub
xor
jg
jb
mov
inc
adc
call
pop
sbb
test
adc
fsubrs
push
push
sbb
lret
insl
mov
out
or
imul
pop
sbb
in
mov
sarb
ret
mov
mov
fistl
push
stc
aas
or
pop
inc
mov
shll
shll
outsb
dec
loop
sub
subl
xlat
insb
and
dec
mov
cmc
adc
mov
outsb
sub
xor
aaa
fdivr
sbb
mov
xor
std
mov
dec
enter
push
sbb
xchg
push
pushf
aas
sahf
xchg
xchg
movsl
repnz
lods
in
dec
mov
out
je
jmp
mov
add
js
push
loope
cld
sti
jmp
push
lock
arpl
scas
sub
sub
out
shrb
add
push
stos
xchg
inc
add
push
inc
pop
mov
mov
xchg
lcall
sbb
mov
fsubs
das
pop
out
xchg
mov
sub
xchg
or
jbe
cmpsb
sub
inc
inc
loop
dec
out
pop
inc
inc
aaa
int3
fnstenv
cmp
scas
cmp
cmp
sbb
mov
pop
xchg
and
jle
loope
out
aam
sti
enter
ljmp
jg
or
imul
pushf
lahf
xchg
jae
mov
mov
dec
in
lcall
jne
rcl
fdiv
notl
fcomp
mov
aaa
dec
mov
mov
fimull
aaa
test
jecxz
inc
pop
mov
pop
xchg
in
mov
jne
cmp
movsb
out
xor
mov
insb
or
in
or
cs
mov
add
add
sub
mov
imul
xorps
push
lret
cmc
jecxz
mov
ret
or
and
jbe
out
popa
jle
mov
imul
pop
pop
iret
add
enter
dec
mov
push
jp
sub
int
xor
pushf
mov
test
lods
jp
outsb
cltd
dec
inc
addl
jns
pop
pushf
pop
adc
mov
ja
shrb
jne
shll
sahf
test
cwtl
lock
dec
mov
repz
inc
push
test
jmp
pop
lods
ret
shrb
mov
push
popf
repz
push
gs
adc
sbbb
in
jo
pop
sbb
push
sub
out
cmpsb
add
push
mov
mov
and
outsl
xor
imul
jns
xchg
and
fsts
jg
lods
fcomi
fdivl
bound
ror
or
scas
aas
sub
in
xchg
push
sub
movl
or
mov
fidivs
scas
aas
gs
out
sbb
insl
movsb
out
xchg
mov
test
das
filds
jno
mov
mov
cmp
sahf
pop
lods
jmp
push
mov
popf
jnp
leave
int
test
out
and
push
sahf
jns
lret
lcall
xor
ret
div
repz
decl
arpl
outsb
inc
inc
sub
scas
mov
out
mov
xchg
pop
dec
cld
xor
jmp
and
pop
fisttpll
das
add
cmp
xchg
or
jb
stos
in
and
test
or
faddl
movsl
jl
popa
out
ficompl
pop
sbb
test
lcall
ja
push
repz
sub
out
add
cmp
stos
mov
jle
jecxz
fbstp
lods
lods
aas
cmp
sub
jbe
icebp
lret
mov
rclb
push
shrb
cmp
or
les
mov
pop
cmp
mov
sahf
sti
sti
test
out
lock
xor
mull
loopne
dec
outsb
dec
movsb
cmp
rclb
in
ret
popa
jmp
lahf
sub
sbb
mov
cld
iret
les
push
pop
push
adc
mov
cld
jecxz
adc
add
jg
cmc
js
aam
cmc
xchg
and
inc
lret
add
mov
xchg
mov
xchg
jmp
je,pn
test
push
xor
sub
ret
inc
dec
dec
dec
sbb
addl
inc
aad
dec
xor
cmp
out
shll
arpl
xchg
mov
stc
and
out
xor
push
insl
cmc
lods
imul
aam
testb
add
imul
out
mov
jmp
je
inc
add
arpl
pop
dec
sub
cwtl
mov
stos
mov
sbb
mov
mov
jns
pushl
jbe
cwtl
cs
mov
mov
sub
inc
pusha
xchg
inc
rorl
sarl
or
shl
xor
push
test
daa
xchg
stc
iret
fadds
push
sbb
or
pop
cmp
psubq
sub
test
inc
cmp
lods
lods
fstps
iret
sbbl
aam
or
jnp
jg
les
sub
jge
xchg
or
push
mov
pop
fistl
cwtl
pop
hlt
ficoml
cmpsl
negb
xor
lret
add
lea
loop
mov
sbb
out
xchg
adc
rcrl
popf
push
inc
insb
xchg
or
jl
pop
sub
dec
cmp
dec
les
or
outsl
cmc
out
xchg
pop
pop
or
pushf
mov
pop
stc
or
mov
push
lock
push
imul
add
cmp
adc
and
xor
pop
sub
push
push
mov
std
iret
dec
cwtl
subb
aaa
cmc
push
pop
mov
mov
mull
jns
pop
mov
mov
imul
orl
push
xor
sbb
insl
mov
outsl
dec
inc
pop
pop
inc
push
sahf
in
mov
xor
push
fdivr
sbb
mov
lock
push
sbb
rcll
add
lds
std
sbb
sub
add
inc
sarb
mov
xchg
xorb
add
mov
jmp
adc
dec
clc
hlt
insl
or
mov
mov
push
push
cmp
in
mov
lds
in
jge
mov
data16
lea
ret
int3
push
inc
loopne
shrb
cmpb
or
imul
cmp
or
adc
push
adc
cmpsb
ficoms
xlat
ds
cmpsb
push
aaa
and
mov
add
js
fdivp
mov
ljmp
push
jle
sahf
push
imul
gs
jecxz
sbb
sub
add
xadd
add
xchg
adc
mull
enter
and
jbe
lret
sbb
or
jnp
je
xchg
sbb
cmp
aas
mov
jmp
lret
pop
add
sub
pop
imull
xor
sub
cmp
aaa
loope
sbb
and
jge
fistpll
cmp
cmp
xchg
add
jbe
fidivs
jbe
sarl
inc
jge
xlat
xchg
lods
and
mov
cmp
into
sti
fwait
mov
push
push
and
lret
jb
jge
sub
sub
pop
lods
leave
xor
icebp
xchg
dec
xlat
fs
cmp
insb
mov
fwait
stc
sahf
pop
shll
gs
xor
dec
lret
sbb
inc
and
inc
mov
rcrb
jne
pop
insl
xlat
cmp
add
insl
push
clc
outsl
mov
mov
dec
fdivl
in
or
xchg
repz
xchg
imul
mov
rclb
outsb
scas
movsl
lret
dec
cs
jg
cli
jnp
xlat
or
push
and
outsb
repnz
stos
daa
inc
inc
mov
mov
mov
aaa
mov
mov
test
lds
mov
mov
push
push
out
mov
in
add
xchg
pop
clc
mov
ss
adc
push
inc
movsb
aas
pop
jo
aaa
dec
cltd
adc
jmp
mov
aaa
and
xchg
je
test
ds
pop
xchg
mov
jge
test
loope
loope
out
inc
jl
jb
add
push
pop
fisttpl
mov
js
lret
fldcw
jno
js
das
inc
push
ljmp
sub
les
out
or
int
jecxz
add
test
scas
aad
in
jnp
insb
sti
add
fldcw
jle
lcall
mov
jno
sub
stc
xchg
rol
cmp
lds
or
sub
jmp
push
shl
shll
lods
std
inc
inc
es
iret
xor
outsl
arpl
ljmp
outsl
adc
adc
add
mov
push
jge
add
rcll
mov
mov
jge
es
push
xor
stos
fcoml
pop
mov
or
push
aam
ja
arpl
leave
mov
lea
cs
cs
add
ljmp
dec
lret
xchg
and
mov
jb
clc
imul
fldl
push
xchg
out
iret
andl
scas
pop
push
movsl
je
add
in
and
push
or
popa
sahf
xchg
adc
mov
cs
mov
and
daa
pop
xor
pop
popl
jae
out
sub
pop
add
das
adc
adcb
push
mov
xchg
xor
pop
add
and
call
and
jbe
insb
fcmovnu
jns
stc
iret
dec
mov
lea
mov
das
ror
je
dec
ret
dec
shll
ret
or
loopne
push
fs
les
inc
fsubs
frstor
mov
js
movsl
flds
jl
int3
xchg
xchg
jbe
sbb
mov
mov
lds
scas
pushf
adc
mov
push
imul
xor
jns
push
sub
aaa
das
lock
aas
xor
xchg
jp
lods
inc
sbb
push
cli
add
orl
rclb
rcrl
mov
outsb
lret
xchg
mov
mov
add
sbb
icebp
jmp
scas
je
mov
out
popa
inc
add
push
adc
subb
pop
or
daa
repz
sbb
mov
sbb
movsl
sbb
add
sub
mov
dec
mov
ret
sahf
xchg
inc
outsl
dec
repz
inc
fidivl
mov
enter
andl
test
push
or
popf
and
leave
pop
scas
push
sbb
aad
and
or
js
add
push
in
decl
stc
test
and
stos
hlt
popa
and
jp
push
add
or
adc
loope
jb
data16
cmp
daa
mov
pop
mov
mov
sbb
jne
in
roll
or
sub
pop
adc
push
nop
dec
mulb
outsb
sbb
push
gs
call
push
adc
aam
and
and
ja
push
pop
pop
inc
into
adc
mov
popa
fiadds
fs
jne
xchg
dec
and
mov
fdivs
mov
in
xchg
insb
movsl
adc
js
punpckhdq
fimull
ja
sub
xchg
outsb
stos
out
jp
fs
imul
dec
push
jmp
mov
cltd
jle
push
dec
push
pushf
xchg
dec
dec
cmp
mov
xor
ret
and
mov
shrl
or
adc
jle
insb
adc
pop
ret
pop
mov
inc
dec
call
xor
inc
inc
fstpl
inc
dec
outsb
mov
cmp
mov
inc
mov
dec
negl
orl
mov
std
cmp
pop
ja
inc
aaa
cmp
pop
xchg
rcll
sub
mov
jns
rcll
xchg
fldenv
lock
js
xor
ss
iret
enter
add
mov
or
add
lahf
push
xchg
addr16
ret
add
or
sub
xor
ss
mov
pop
cmpsb
push
push
nop
out
repz
push
dec
rolb
push
repz
mov
sub
dec
punpckhwd
arpl
cmc
cmc
add
adc
dec
xchg
pop
ret
cmpsl
jbe
mov
ja
pop
inc
pop
out
adc
xchg
in
xchg
inc
dec
nop
xchg
mov
ljmp
shl
add
lcall
mov
sbb
cmp
ja
cmp
sbb
xchg
mov
repz
in
mov
int3
mov
in
sub
ret
scas
movsl
cltd
es
fwait
push
sub
and
dec
sbb
ja
icebp
dec
jle
mov
rolw
add
inc
lods
mov
test
imul
push
sbb
ljmp
adc
add
sub
and
xchg
mov
repnz
fidivrl
push
mov
sub
mov
cltd
iret
addl
pusha
out
ret
adc
aas
icebp
movsb
adc
lods
imulb
movsb
testl
inc
add
mov
xchg
mov
out
leave
adc
push
add
mov
in
push
imul
dec
mov
jecxz
sub
addb
popa
jmp
add
adc
inc
fistpl
das
xchg
pushl
pop
dec
cmp
mov
add
sbb
lock
xor
and
les
hlt
in
mov
ss
xlat
pop
pop
jge
arpl
pushf
lret
inc
adc
cmp
pop
iret
adc
sub
mov
push
jp
std
mull
dec
std
cld
dec
jmp
sbb
lret
fbld
icebp
push
sbb
dec
rcrl
lods
lds
inc
pushf
icebp
mov
mov
cmpsb
lods
pop
sub
inc
test
test
shl
cs
dec
adc
inc
mov
arpl
mov
xchg
shl
std
std
pop
mov
push
jb
enter
ret
lret
subb
inc
test
dec
adc
inc
sub
xchg
ror
and
mov
pop
and
xor
adc
cs
jmp
push
mov
inc
mov
ljmp
sub
pop
js
out
sbbb
push
pop
pop
pusha
inc
cmpsl
test
xor
adc
mov
jge
cmp
sub
jnp
or
lahf
cli
hlt
adc
inc
icebp
into
jns
adc
std
sbb
addr16
rcrb
popa
bound
xor
enter
mov
adcl
jnp
idivl
test
push
cmpsl
pushf
xchg
dec
mov
inc
push
or
insb
sbb
sub
ret
test
movsl
xor
es
push
mov
leave
dec
xchg
lret
jae
mulb
and
xchg
mov
jle
adcl
in
lds
push
in
inc
xchg
adc
sbb
sub
idiv
inc
and
mov
fucomip
popf
sbb
cltd
push
aaa
js
sbb
xchg
cmp
dec
inc
loope
or
fdivr
xchg
mov
mov
push
dec
repz
jp
add
cmpsb
jmp
mov
movsb
mov
push
data16
pop
xchg
cmp
sbb
lahf
inc
bound
xor
mov
ds
jl
pusha
sbb
dec
xchg
faddl
pop
inc
push
iret
dec
jecxz
flds
mov
out
mov
add
arpl
ja
pushf
popa
mov
cmp
sbb
aas
adc
shlb
push
idivl
mov
dec
cmp
hlt
out
iret
xchg
cli
js
loopne
push
mov
pop
pop
dec
enter
lret
sub
aad
inc
mov
sub
ss
dec
mov
pop
or
push
rorb
fadds
rcrb
std
pop
cli
push
out
stos
cmovo
scas
jno
mov
les
inc
xchg
addb
cmp
xchg
loopne
adc
incb
outsl
outsl
cmp
push
fisttpl
les
sub
rcll
addr16
jl
mov
scas
and
push
add
enter
add
aas
sub
jns
scas
ljmp
sbbl
lds
add
test
sub
pop
cmp
xor
stc
and
ficompl
imul
ss
mov
sub
lahf
push
xor
fdivrs
cwtl
inc
cltd
negb
inc
divb
or
pop
gs
jnp
test
mov
call
loopne
jge
push
jmp
arpl
add
sahf
cmc
add
sbb
mov
sti
xor
xor
out
fsubrs
enter
cmp
mov
mov
movsb
jo
sbb
mov
add
jo
add
mov
sub
xchg
lods
mov
add
stos
jle
adc
fistps
pop
jecxz
imul
test
mov
push
pop
enter
xor
xor
mov
cmpsl
pop
dec
insb
add
sub
addl
sbb
lods
pop
xchg
and
cli
pop
or
loopne
pop
push
mov
mov
inc
jb
fwait
cmp
fnstsw
inc
dec
push
inc
xchg
out
dec
dec
mov
xchg
in
dec
sbb
jb
jb
pushf
fildl
and
jbe
xlat
shll
stc
mov
cmp
call
sbb
sub
aaa
xor
pop
jo
inc
sbb
jae
movsl
movsb
jg
jg
bswap
adc
mov
or
add
icebp
mov
mov
ret
adc
pop
ret
and
and
sarl
add
rolb
push
xor
add
cmpsb
push
mov
shr
rolb
and
dec
xchg
cmp
jge
rcrb
cmp
mov
cmc
repnz
jge
xchg
lds
rcrl
push
int
loopne
pop
lret
dec
shr
pop
inc
push
xor
data16
fiaddl
sbb
pop
loopne
scas
stmxcsr
sbb
cs
mov
call
push
xchg
push
test
pop
xchg
xor
aam
pusha
push
xor
sub
out
push
adc
adcl
or
jg
bound
je
ja
mov
push
add
jnp
add
into
repz
mov
mov
shll
hlt
dec
ret
pop
mov
or
fisubrl
and
push
xor
mov
bnd
mov
jb
negl
inc
mov
cmp
outsl
insl
movsl
adc
out
mov
lds
dec
push
out
aad
hlt
test
addl
fwait
mov
cmp
test
add
fcompl
or
jb
stos
xchg
pop
mov
inc
ss
mov
movsb
outsl
push
insb
xchg
enter
pop
pop
dec
adc
sub
addr16
aam
int
mov
rcll
loop
push
nop
pusha
mov
adcl
adc
sbb
mov
mull
fcmovnb
dec
cmp
mov
addr16
stos
mov
inc
mov
jmp
pop
mov
in
outsl
dec
or
jae
jecxz
outsb
in
mov
stc
movsl
or
inc
jge
fdivl
mov
mov
std
lcall
pusha
push
int
mov
xacquire
iret
pop
mov
lods
add
mov
mov
mov
xor
mov
jbe
or
push
in
sahf
adc
push
sti
xchg
add
aas
push
jp
loopne
out
mov
clc
jnp
aas
pop
fwait
and
les
out
repz
fs
in
pushf
mov
mov
push
xorl
bound
sahf
sbb
xchg
popa
inc
fucom
dec
mov
mov
sahf
lret
mov
outsl
mov
leave
gs
jecxz
adc
mov
jo
cmp
xorl
xor
push
ds
fistps
and
sti
inc
mov
mov
cmp
shr
sbb
jp,pn
pop
out
mov
jg
cmpsb
sub
add
inc
aam
cs
fiaddl
sbbl
sbb
rcl
popf
mov
or
or
push
push
mov
mov
movsb
jae
cmpsb
stos
jno
int3
sbb
or
adc
cmp
and
xor
mov
mov
fcomip
lcall
push
and
enter
pop
cmpl
xchg
pop
dec
xor
leave
cltd
jmp
in
sti
sahf
jmp
movsb
jae
je
das
dec
test
mov
push
dec
arpl
je
mov
add
add
mov
mov
mov
cmpsb
mov
je
dec
push
pop
cmp
add
xor
data16
pop
ret
mov
pop
xchg
jne
mov
mov
test
in
stc
in
xor
mov
jne
mov
xor
mov
push
dec
xor
fiadds
ljmp
fidivrl
mov
pop
xchg
insl
cwtl
pop
lods
pop
cmp
lods
out
jbe
pushl
jmp
pop
fcomp
outsl
gs
add
stc
or
fs
scas
in
or
add
hlt
loope
and
mov
inc
jae
movsb
lahf
or
mov
adc
add
mov
loopne
daa
pop
iret
xchg
cmp
xor
fisttps
jnp
inc
xchg
jbe
xchg
insl
std
fsubrs
xchg
int3
popa
adc
inc
mov
cwtl
sbbl
inc
push
stos
aas
mov
outsl
sub
pushf
adc
out
icebp
inc
push
or
inc
cmp
pop
mov
in
in
jno
xorb
mov
xor
sarl
aam
push
adc
xor
xor
push
mov
inc
test
test
pop
mov
daa
add
movsl
xor
mov
insl
xchg
roll
sub
jnp
divl
jo
inc
outsl
pop
sbb
test
mov
cmp
mov
test
cmp
sbb
cli
sub
stc
aad
pushf
cmpsb
incb
dec
filds
loopne
rorl
xchg
sub
add
inc
push
js
loopne
mov
mov
in
jge
hlt
inc
push
js
jmp
push
loopne
mov
test
int3
xchg
mov
or
dec
outsb
adc
clc
test
pop
jge
sub
adc
ret
cli
jae
mov
or
adc
jmp
xor
mov
jl
arpl
imul
pop
subb
dec
push
cmp
xor
jo
in
pop
iret
mov
adc
adc
push
and
cmpsl
adc
lods
jecxz
fcom
daa
jns
sbb
aas
or
pop
jmp
and
add
aaa
sahf
and
popf
out
scas
shlb
xchg
xchg
inc
mov
lcall
aam
lret
scas
aas
stos
enter
sub
int
or
mov
lahf
imul
cmp
pop
mov
push
mov
pushf
sti
and
fistpl
and
mov
cltd
mov
and
jg
movsb
ja
call
pop
or
adc
mov
les
or
clc
repnz
pushf
xchg
xchg
cwtl
mov
daa
es
int3
add
push
and
inc
cmp
mov
add
pop
mov
mov
cmp
sbb
push
xchg
inc
lock
sbb
mov
and
xor
je
inc
xor
frstor
mov
or
jl
cmpsl
sbb
dec
test
xchg
dec
imul
inc
and
xchg
dec
add
out
pop
pop
pop
or
cmc
fcompl
mov
rclb
ret
enter
inc
sbb
nop
sub
iret
sub
mov
xchg
or
clc
mov
ljmp
mov
out
sahf
jmp
jns
sbb
jecxz
cmp
icebp
mov
add
dec
movsl
nop
dec
call
es
xchg
mov
or
push
jne
lcall
inc
cmp
sti
push
sti
and
std
cmpsb
icebp
pop
xlat
add
inc
in
cmp
enter
sbbl
test
jae
or
adcl
pop
dec
int
push
ds
shr
dec
add
ret
xchg
adc
aaa
aas
cmp
into
repnz
cld
cli
pop
movsl
adc
cmc
lret
addr16
clc
aas
lea
xchg
sub
int3
or
int3
fs
ds
sbb
or
adc
xchg
iret
pop
mov
push
xor
iret
aaa
push
xchg
xor
test
cltd
sub
inc
pop
lods
xor
cwtl
or
sub
push
and
inc
mov
subl
jmp
add
xor
adc
mov
push
jg
pop
inc
xlat
call
mov
pop
push
sahf
xchg
lds
cmp
fdivl
sbb
jmp
gs
jmp
jo
xchg
lret
loopne
sub
cmp
and
outsl
fwait
or
jb
mov
sub
call
cmp
ljmp
inc
ds
push
ds
pop
icebp
add
je
testb
or
pop
add
pop
ret
sbb
jnp
repnz
adc
fs
movsb
leave
dec
mov
xor
pop
cmp
xlat
mov
mov
mov
sub
fistpll
repnz
repnz
and
cli
add
and
ret
sbb
in
std
das
push
imul
sub
dec
push
sbb
inc
cltd
adc
loope
sub
ja
mov
cltd
lahf
sbb
cmp
fs
pop
push
pop
loop
lock
movsl
or
ret
inc
fs
lock
in
mov
repnz
jnp
out
inc
lcall
pop
sahf
push
test
mov
subb
leave
sub
cli
mov
fsubrl
push
jnp
xchg
jno
mov
mov
iret
mov
ljmp
stos
dec
mov
test
xchg
test
enter
pop
daa
cld
mov
jo
mov
icebp
ss
add
cmpsl
xor
jb
mov
mov
xchg
pop
leave
das
lods
jmp
dec
sub
fcmove
jmp
fildll
pop
mov
and
jo
dec
mov
xchg
pop
cmc
and
dec
dec
pop
fcmovu
xchg
pushf
mov
xor
dec
in
xor
pushf
xlat
ljmp
divb
test
jg
dec
inc
jbe
cli
jmp
mov
cmpsl
cmp
mov
jns
or
jl
push
dec
idivl
inc
xor
test
pop
sbb
pop
lds
push
dec
movsb
test
push
cli
pop
or
push
and
hlt
mov
dec
out
jnp
pusha
cmpsl
cmp
imul
and
push
xor
jae
xor
push
add
out
pop
adc
and
stc
sbb
jbe
fsub
mov
mov
xchg
jns
cmp
pop
xchg
or
gs
imul
add
std
shlb
in
enter
lods
pusha
add
inc
sbb
dec
xchg
xor
jo
rcr
push
mov
outsb
xchg
jbe
pop
pop
pop
xchg
shll
mov
gs
hlt
mov
sub
add
data16
std
fidivs
push
push
or
jg
stc
mov
push
sysenter
fldl
adc
cwtl
cmc
rep
punpckhbw
test
sbb
outsb
jne
test
push
sti
push
jge
or
fdivrl
xchg
or
dec
sbb
adc
ret
lds
xchg
mov
mov
pop
mov
lahf
cmp
cmc
mov
sbbb
sbb
push
clc
call
lea
sbb
pop
xchg
jl
in
loopne
mov
test
mov
stc
rcll
inc
sbb
sub
jp
mov
ss
daa
add
push
lods
inc
pusha
xchg
dec
inc
mov
cld
inc
aad
jg
inc
fsubl
pop
pop
lods
scas
scas
mov
fbstp
add
xchg
jge
cmp
mov
mov
and
addr16
or
cld
stc
sub
dec
js
lods
mov
dec
add
cmp
adc
cltd
mov
xor
mov
lahf
dec
push
pop
rclb
mov
subl
xlat
jmp
stos
mov
adc
dec
sub
mov
cmc
lds
inc
movsl
dec
dec
inc
ja
mov
xchg
out
test
ds
sbb
inc
je
or
movsl
sub
in
lock
test
int3
ret
idivl
mov
sarb
fbld
add
jb
incb
jns
enter
mov
adc
adc
insl
out
cmp
cmpsb
in
xor
or
push
aaa
add
sbb
loope
xor
mov
mov
pop
xor
fldenv
subl
bound
rcll
adc
dec
adc
out
test
arpl
movsl
add
mov
sbb
mov
and
iret
popf
roll
std
in
cs
jle
xchg
jne
add
stos
pop
js
mov
addr16
popf
mov
jmp
sbb
mov
test
or
push
repnz
nop
int3
sbbb
insb
cmp
int3
outsl
jp
mov
push
mov
and
ret
outsl
add
loop
dec
es
mov
movsb
testb
shl
lret
ss
repz
scas
adc
sti
mov
push
pop
inc
xor
icebp
fnstcw
add
mov
adc
jmp
aaa
jns
outsl
shlb
loope
inc
add
shl
popa
fsubs
mov
in
insl
jns
xor
sub
dec
mov
dec
sub
jae
sahf
repz
mov
add
jl
out
push
lret
dec
test
aas
mov
mov
inc
mov
mov
insb
mov
cwtl
out
xchg
xchg
mov
and
nop
cltd
cmpl
mov
lods
rcrb
sub
sbb
inc
xchg
add
add
adc
fdivrs
dec
out
ror
ret
lret
mov
addb
mov
cmpxchg
inc
pop
in
adc
inc
jmp
inc
notb
xor
mov
rcrl
mov
lea
sub
pop
and
adc
or
jo
xchg
and
fwait
and
push
aas
jno
pcmpgtw
fwait
xchg
sbb
sbb
sbbb
pop
shll
iret
xchg
in
push
aaa
xchg
cmp
stos
les
fsubrl
cmp
jle
jno
aad
push
mov
insb
sar
dec
jg
and
jae
je
mov
je
push
cmp
xor
push
int3
push
add
sbb
fisubs
test
pop
dec
dec
adc
js
shr
mov
idivb
scas
lcall
outsb
sbb
pop
adc
in
push
test
aam
movsb
sahf
addl
cwtl
add
imul
int
xchg
cmpsb
jnp
sbb
xchg
fstl
sahf
lcall
fsqrt
stos
inc
dec
jnp
pop
in
lods
inc
cmp
out
jnp
jbe
jl
pop
sbb
fcomi
repnz
push
fbld
bound
and
mov
cmp
dec
insl
outsl
aam
fildl
lcall
xchg
mov
adc
movb
sbb
loopne
xor
add
imul
sbb
mov
in
test
cmc
xchg
xor
decl
inc
jnp
push
cld
imul
xorl
fisubs
std
lock
lret
jge
jp
aam
sbb
dec
test
jb
insl
xchg
fidivrs
ds
test
je,pn
iret
or
add
dec
pop
or
push
pop
xor
mov
jae
cmp
mov
push
jne
addb
js
in
xchg
loope
push
dec
add
pop
adc
mov
and
sbb
int3
mov
aaa
pusha
int
add
mov
jl
fcoml
pop
stos
and
inc
adc
mov
cs
mov
fstpl
nop
rol
inc
jnp
addr16
movsl
adc
jb
cltd
or
mov
mov
jbe
pop
aaa
adc
lds
cmpl
aas
push
mov
jmp
loop
cmp
test
ret
into
xlat
xor
pop
push
movsb
mov
dec
jmp
and
mov
lds
sbbl
in
fildl
pop
call
leave
xchg
cmpsl
fbstp
cmp
lea
cli
jmp
pushf
and
sbb
push
adc
sbb
sahf
popa
jmp
jns
out
jge
cli
dec
mov
scas
sub
push
inc
inc
mov
movsl
sbb
scas
sub
daa
fisubrl
pop
mov
scas
test
nop
adcb
xchg
sub
stc
test
jl
mov
orl
xlat
jmp
mov
sub
or
sub
jmp
cmc
push
testl
pop
add
pop
mov
enter
xchg
push
inc
in
xchg
xchg
jge
mov
xchg
adc
lret
es
jne
mov
jb
rol
test
mov
imul
inc
xor
es
jp
shl
sti
call
xor
push
cmc
stos
testl
mov
arpl
inc
or
cwtl
in
and
js
cmc
jge
sti
sbb
shlb
mov
jl
test
xchg
shrb
fsubp
inc
xchg
pop
inc
add
leave
pushf
pop
inc
push
lods
insl
jne
push
pusha
pop
std
push
out
sti
jl
or
shll
xor
push
stos
lods
pop
incl
adc
jg
mov
mov
loop
mov
inc
jmp
fxch
test
movsl
sahf
cmp
insl
in
mov
jae
adc
jns
jecxz
xchg
fistps
scas
std
mov
xor
lods
sbb
mov
pop
inc
cld
jmp
xchg
xchg
or
xor
movl
int
leave
pushl
xor
jb
cli
psrld
inc
sub
aam
mov
adc
gs
das
leave
addr16
cmp
mov
movsb
lea
adc
subb
std
mov
out
jle
lds
movsb
or
insl
mov
stos
xor
xorb
enter
inc
mov
pop
inc
out
xor
mov
shll
pop
mov
idivb
idivb
xchg
cli
mov
sub
adc
jno
cmc
sahf
outsl
push
scas
int
dec
addr16
xchg
push
fidivl
pop
mov
push
test
push
mov
push
fstps
icebp
xor
sbb
repnz
scas
sub
pusha
sbb
mov
pop
fldl
or
fmuls
fwait
xchg
xrelease
jae
push
punpckhwd
fiaddl
sbb
cmp
jo
mov
clc
push
xor
stos
scas
jo
fnstsw
sub
pop
int
inc
xchg
fwait
insb
stc
jmp
cmp
lahf
sub
inc
adc
xchg
push
jb
popf
cmp
test
and
scas
add
mov
jns
adc
mov
ds
cld
data16
add
mov
shll
sbb
xchg
inc
inc
ss
test
fisubrs
scas
mov
lods
xchg
jecxz
fwait
pop
pop
sbb
mov
pusha
outsl
xchg
sbb
mov
outsl
push
lods
mov
cmp
out
js
push
icebp
cmp
pop
decl
mov
adc
adc
xor
inc
das
push
mov
sbb
push
sbb
jmp
bound
in
nop
push
mov
sbb
cmp
mov
inc
inc
jle
aam
push
dec
jge
inc
push
jnp
fs
mov
ret
int3
pop
imul
or
mov
in
sbb
inc
or
cli
rclb
dec
mov
mov
cli
mov
mov
add
add
addr16
cmpsl
mov
cwtl
popa
dec
mov
mov
mov
push
jae
lcall
js
jl
mov
push
in
xchg
ret
pop
gs
cmp
rcpps
ljmp
add
mov
xchg
test
xchg
jo
scas
xor
sbb
xlat
push
xorl
pop
mov
sub
loope
in
jnp
lea
or
aam
test
cmpsb
jae
in
xchg
cmpl
fistl
test
inc
and
push
and
mov
lea
lods
les
lret
adc
out
dec
push
outsl
mov
pop
and
test
and
xlat
std
into
int
mov
or
ljmp
add
xchg
jmp
adc
sub
mov
and
and
push
aad
or
aam
das
hlt
movsb
dec
dec
xorl
and
cmc
jg
mov
mov
adc
jge
dec
jl
ficoml
mov
push
aam
mov
faddl
xor
mov
inc
hlt
pushf
adc
sbb
les
add
push
dec
and
dec
mov
fists
in
lahf
inc
mov
rorl
mov
out
out
mov
lds
pop
mov
cmc
xchg
aad
out
cmp
int3
movsl
push
test
cmp
rol
add
mov
in
sbb
je
call
push
sarb
mov
xchg
jp
xchg
jmp
or
inc
pop
mov
clc
sti
test
jb
push
ja
pop
add
lock
sti
pop
movsb
shrl
pusha
dec
inc
pop
aad
aas
and
outsl
add
jge
xchg
cwtl
loop
cmc
scas
push
adc
sub
inc
jmp
bndstx
sti
mov
loope
mov
cmp
stos
dec
mov
sahf
cmpl
test
rorl
push
add
test
lea
jbe
test
push
push
in
push
cmp
jno
fnstsw
jns
add
fisubl
mov
out
imul
imul
mov
fadd
mov
in
or
movsl
inc
sbb
stos
movsl
push
push
xchg
sub
xor
xor
add
aam
call
fcmovb
pop
mov
out
fdivrl
jnp
std
nop
js
aaa
mov
out
movsb
mov
icebp
jnp
xchg
imul
decb
jmp
or
lret
shrb
lcall
je
bnd
cmpsb
test
pop
pushf
mul
pop
or
into
mov
call
mov
ds
mov
std
pop
jo
cmp
cmc
push
mov
rcrl
push
leave
bound
pop
sbb
shll
adc
inc
in
or
push
add
and
and
mov
mov
and
mov
sbb
pushl
adc
xor
shrl
inc
jl
mov
sahf
jle
jae
jns
sbb
xchg
xor
mov
sub
das
xchg
daa
lcall
cmp
sahf
ret
stc
xlat
rcrb
push
in
es
cmp
fucomi
inc
cld
je
loop
sahf
or
push
xor
fwait
gs
nop
loopne
push
xor
outsb
rclb
imul
or
lods
xor
dec
and
cmp
jo
add
imul
mov
fdivl
push
adc
push
enter
mov
mov
sbb
lret
sub
sub
sarl
adc
mov
dec
xor
je
inc
mov
cmp
pop
fisubs
adc
sbb
mov
popa
scas
sbb
lock
cmp
leave
loop
inc
and
cmc
pop
xor
cmpsb
mov
rol
jo
dec
mov
xchg
incb
jecxz
jae
cmp
mov
mov
push
mov
loopne
xor
pushf
lds
popf
hlt
push
pop
ljmp
data16
jb
repz
jle
rorl
ret
repz
add
add
mov
test
inc
fiadds
out
imul
iret
cmp
ret
rclb
fisubl
das
jnp
xor
stc
scas
dec
sbb
mov
xchg
gs
mov
repz
dec
lock
loop
mov
fsubrs
sbb
xor
mov
shll
in
ljmp
roll
aad
pushf
add
sub
pusha
adc
das
xor
sahf
lock
add
dec
push
test
mov
cltd
loopne
addr16
ss
and
movsb
pushf
insb
and
xor
enter
aad
int3
fsubs
pop
in
mov
cmpsl
gs
popa
rcrb
int3
imul
lods
dec
pop
xchg
and
jns
cwtl
sbb
jle
repnz
inc
fdivrs
sub
in
jge
xchg
xor
or
pop
xchg
mov
or
addr16
mov
mov
push
sub
xchg
jno
popa
sub
daa
ljmp
inc
add
sub
inc
outsl
orl
mov
or
or
sbb
call
pop
mov
cltd
in
fdivl
mov
ret
int3
jmp
neg
ss
xor
inc
or
add
and
dec
addr16
lock
mov
pusha
sub
imul
test
fists
dec
mov
mov
lcall
mov
xor
xchg
adc
and
mov
je
arpl
jg
cmp
push
fdivrp
push
add
add
and
in
cltd
mov
xchg
jbe
ja
push
and
fsubrs
inc
adc
adc
out
push
sti
mov
adcl
dec
jnp
push
jbe
fisttpll
mov
xchg
inc
xchg
in
push
out
fnsave
in
fldl2t
push
xchg
bnd
leave
arpl
stos
xchg
loopne
cmp
jae
sub
sbbb
inc
test
add
cmc
mov
cli
jmp
iret
stc
outsb
mov
addr16
inc
and
fildl
test
test
xchg
shrb
mov
mov
leave
cwtl
inc
inc
cmp
loope
sub
movsl
fnstenv
js
and
dec
jo
jae
mov
jmp
inc
out
outsl
cmpsb
shlb
jnp
xor
mov
ja
repnz
cmp
mov
das
scas
or
roll
jmp
jne
jne
sbb
and
cmp
mov
xor
jo
movsb
rcr
jo
dec
test
pushf
jne
cmp
out
dec
mov
push
pop
repz
outsl
cwtl
lret
and
dec
pop
pop
mov
push
notb
fcompl
mov
imul
decl
adc
out
push
sbb
and
pop
or
aas
inc
int3
frstor
mov
movsl
add
xor
and
jle
and
and
inc
sbb
movsb
repz
rcll
sbb
jns
outsl
inc
inc
mov
nop
dec
pusha
adc
jg
adc
and
das
sbb
mov
fimull
out
mov
fwait
sbb
dec
adc
sbb
sahf
xchg
lret
mov
cmp
enter
mov
rorb
clc
dec
imul
xchg
aas
rcl
sbb
pop
push
lods
ret
xlat
cmp
pop
mov
mov
mov
out
add
push
add
data16
mov
test
jae
sub
jnp
cmp
js
jle
and
ljmp
das
in
jnp
divb
xchg
mov
pop
test
scas
stc
je
insb
inc
push
orb
push
jnp
orl
adc
imul
dec
call
and
and
loope
sbb
jg
ja
lret
and
insb
jnp
aad
sbb
fstl
out
test
push
sbb
mov
icebp
add
pop
mov
mov
lock
mov
sub
sub
mov
or
cmc
enter
push
sbb
cli
test
jmp
out
popf
jl
mov
stos
cmp
sbb
into
xchg
xchg
adc
repnz
and
mov
aam
scas
cmp
in
add
stc
pop
lcall
sbb
fstp
mov
xchg
xchg
dec
xor
andb
cmp
jl
imul
push
xor
xor
fstpt
std
and
fisubrl
xor
add
dec
fisubs
lea
gs
add
mov
xor
pushf
bnd
jmp
lods
dec
jg
movsb
test
dec
test
inc
ss
fstpt
mov
dec
clc
jae
jl
push
push
mov
mov
mov
mov
jg
xchg
add
pushf
dec
je
sub
jg
mov
xor
dec
xchg
mov
mov
outsl
aam
and
cmp
jecxz
jp
lock
out
bound
outsl
sahf
mov
mov
fistl
andl
pushf
jb
push
xor
lahf
jge
lcall
iret
test
sbbl
in
xor
ds
mov
sbb
xchg
push
ret
dec
dec
sarb
push
dec
push
int3
cmc
sahf
sbb
jb
jbe
cmp
scas
iret
outsb
cmp
mov
sub
dec
adc
xor
lcall
cmc
loopne
test
cmc
inc
mov
or
lea
mov
cltd
cmp
push
push
adc
ljmp
popa
cmp
int
and
lods
aas
jno
int3
imul
test
insb
mov
mov
insl
daa
repz
adc
dec
fmul
imul
sub
or
xor
pop
inc
jns
repnz
mov
movsl
push
sbb
call
insl
popa
call
push
xor
das
mov
push
mov
incl
sbb
adc
add
push
push
addr16
cmp
cltd
outsl
ffree
mov
sbb
std
hlt
ficomps
data16
cmpb
pusha
rorb
mov
sub
cmp
mov
sbb
xor
psubb
dec
shll
pop
imul
adc
scas
dec
ja
fcoms
in
in
push
lcall
das
xor
rcr
mov
inc
xor
mov
jo
sbb
xchg
mov
fnstenv
test
je
add
shrb
mov
push
loop
dec
sub
mov
xlat
sub
inc
lods
xchg
repz
lods
sahf
or
imul
jl
in
lcall
push
daa
outsl
adcb
sub
js
lods
iret
imulb
xor
adc
xorb
adc
lods
js
fwait
cmp
test
fs
jo
repz
push
cwtl
cmc
imul
add
mov
xor
pushf
add
push
push
cmp
aaa
movsb
sub
outsl
xchg
push
das
mov
nop
sub
mov
mov
rorl
cmp
addr16
xor
push
call
inc
inc
jae
jge
sahf
pop
cltd
lock
cltd
jb
add
test
mov
mov
dec
xchg
jnp
shlb
call
out
sbb
cs
sub
fsubrl
adc
jno
cmp
xchg
push
sub
enter
jae
inc
xchg
sbbl
cld
ret
xor
popl
inc
jnp
mov
push
and
xor
hlt
adc
add
clc
pushl
pop
adc
aam
fwait
fs
js
repnz
xchg
inc
pop
mov
outsb
fbstp
inc
pop
int3
add
mov
jbe
inc
xor
sub
jne
call
pushf
aad
fsubrp
xchg
mov
xlat
mov
imul
jne
gs
jbe
mov
push
cmpsl
ss
into
or
jp
xor
inc
mov
xchg
mov
xchg
jle
jae
aam
xor
dec
and
pop
jmp
sub
lock
outsb
movb
sbb
inc
mov
inc
mov
scas
add
bound
mov
xchg
mov
dec
adc
scas
dec
mov
pop
pop
push
mov
in
xor
mov
sub
and
add
nop
in
sbb
dec
int
imul
sbb
adc
mov
movsb
or
mov
hlt
dec
ljmp
push
inc
shl
sub
sub
fbld
stos
lahf
add
shll
pusha
push
fdivs
push
fnclex
mov
je
test
call
xchg
sbb
cmpsl
xor
out
gs
aad
push
stc
repnz
or
dec
in
in
idivl
adc
movsl
ret
int
loope
aaa
stos
and
int3
xor
sbb
out
dec
adc
xchg
or
bound
sti
les
movsl
les
mov
lahf
dec
jnp
mov
or
jl
xor
arpl
imul
pop
rcl
push
cwtl
push
cmp
into
imull
and
rcl
and
mov
push
inc
push
nop
shll
add
mov
lret
jbe
sub
dec
add
inc
ja
rcll
mov
fwait
add
ljmp
xchg
orl
push
jno
rorb
push
lock
add
adc
xor
js
pop
mov
jge
call
pop
aad
jbe
add
or
stc
jecxz
insl
mov
lods
mov
call
outsb
ret
xchg
dec
push
jg
dec
mov
out
push
sub
cld
pop
in
inc
jecxz
and
lret
inc
jge
fxch
fnstenv
mov
je
fldenv
inc
mov
nop
xchg
add
bound
jge
xor
or
fildl
xchg
in
fpatan
dec
das
cmpb
and
out
adc
in
cli
popa
or
and
roll
mov
mov
jecxz
ljmp
stc
nop
lods
je
fists
shlb
je
sub
pop
sbb
xchg
gs
or
mov
sub
adc
out
mov
push
jb
movsl
mov
jo
cvttps2pi
and
enter
lret
mov
rorb
jns
push
out
sub
lcall
icebp
imul
enter
movsb
cltd
adc
cmp
mov
sti
and
fsubrp
or
pop
and
push
sbb
jbe
mov
ss
hlt
pop
jne
xor
std
mov
lds
dec
push
lods
repnz
pop
jb
cmpsb
jecxz,pn
push
and
add
out
jb
mov
ds
popa
push
addr16
rcrl
sbb
mov
dec
mov
or
push
sbb
out
add
lahf
sub
and
push
mov
jle
xor
fldcw
push
mov
fimull
cmc
insl
inc
sbb
jae
imul
test
xor
in
or
mov
jge
mov
inc
dec
sub
adc
cmpl
in
jl
xchg
lods
rorl
jnp
pop
jecxz
or
in
adc
loop
pusha
jb
fs
jo
and
and
in
in
push
or
movsl
mov
cmp
adc
daa
or
and
mov
lahf
mov
pop
xchg
add
subl
push
inc
jbe
jo
push
in
js
lea
adc
mov
push
push
sbb
test
cmp
daa
cltd
push
push
or
movsl
in
mov
mov
js
xchg
mov
adc
inc
or
fiadds
push
adc
mov
sti
inc
cmp
stos
outsb
inc
divl
fistps
pop
loope
je
push
in
mov
push
cmp
aas
fwait
mov
dec
shr
fadds
xchg
add
dec
dec
mov
mov
out
push
sub
gs
movsb
fldcw
jo
mov
dec
sub
or
test
xor
mov
notb
adc
mov
add
inc
adc
aad
in
or
in
mov
stc
pop
out
ljmp
rcrb
loope
in
leave
jae
repz
mul
add
cmpsl
in
cmpb
sti
sub
fs
push
ds
pusha
add
clc
adc
lods
jnp
pop
bound
pusha
xor
push
mov
mov
loope
mov
sbb
cmc
icebp
cmp
movsb
addr16
je
dec
push
add
shrl
dec
jg
addr16
out
dec
fdivr
test
pop
jns
jp
shrb
jp
movsl
push
adc
fldcw
adc
sub
fbstp
inc
stos
or
lods
sbb
dec
shlb
dec
jbe
arpl
inc
or
lds
cli
pop
dec
lret
push
sbb
sbb
mov
insl
pop
addr16
scas
mov
icebp
cmp
cmp
in
adc
jecxz
sub
imul
insl
test
adc
mov
popa
inc
test
test
pop
shlb
pushf
in
pusha
jno
aaa
insl
adc
insl
js
pop
xchg
adc
lods
adc
xlat
mov
sbb
pop
xchg
jno
add
aaa
or
or
test
mov
sbb
jne
lret
mov
loop
lea
sti
mov
vmread
sarb
cmpl
mov
enter
mov
nop
aaa
xor
xor
sub
loopne
in
cli
data16
push
inc
stc
push
ds
test
ljmp
add
decb
pop
cmpsb
or
dec
idivb
push
in
and
and
cltd
and
enter
cld
xchg
ja
fmulp
arpl
cmpsb
rcrl
and
mov
add
adc
sbb
js
mov
mov
lods
sbb
xor
in
mov
shl
sbb
sarb
imul
add
sub
scas
icebp
stos
and
add
xchg
mov
bnd
pop
stos
in
mov
test
sub
cmpb
call
dec
test
jns
pop
add
outsl
cld
mov
sti
inc
int3
mov
sbb
sti
shlb
cwtl
mov
pop
movsl
inc
dec
aad
inc
testl
movsl
jecxz
fwait
push
in
xchg
sti
aaa
bound
imull
call
rclb
dec
inc
bound
sub
mov
je
nop
out
scas
shll
test
xchg
jns
push
mov
lcall
xchg
adc
into
jbe
gs
fwait
aad
fs
mov
fnstcw
or
rorb
push
in
cmpsl
repz
xchg
sbb
mov
xchg
les
sub
imulb
jne
dec
dec
popf
push
jl
cmc
out
data16
sub
sbb
add
or
sti
or
xchg
stos
jne
mov
cmp
outsb
leave
xchg
clc
mov
sub
imulb
lahf
mov
sbb
pop
shr
dec
daa
jl
jnp
cli
adc
or
cmp
fwait
jbe
lea
fucomip
js
jle
js
popa
jae
lds
adcl
mov
int3
xchg
sub
fwait
and
mov
mov
inc
mov
fimull
out
es
insl
mov
push
scas
cmpsb
in
ds
jecxz
sub
xchg
gs
das
dec
jb
iret
int3
and
adc
mov
cmc
inc
idivb
push
cwtl
clc
add
inc
sbb
sbb
dec
cmp
pop
test
mov
subl
jo
xchg
sub
pusha
je
loope
punpckhbw
mov
nop
jmp
mov
jbe
popa
pushl
inc
or
mov
mov
lods
cmp
imul
insb
cmp
xchg
xor
ficoms
mov
cmpsl
xor
xchg
cmpsb
pusha
or
ficoml
aas
mov
add
cmp
out
sub
rcrb
fiaddl
aad
push
leave
fcmovnb
popa
cmp
and
gs
lock
stos
mov
lahf
loop
aad
mov
loope
jmp
pcmpeqd
jae
mov
cmp
mov
pop
mov
adc
int3
negb
aaa
lock
inc
inc
cs
ss
inc
movsl
push
test
sbb
sbbl
sbb
inc
iret
push
cs
dec
mov
out
sbb
sbb
or
out
lret
push
cld
arpl
mov
pop
les
lcall
inc
movsl
aad
mov
lods
leave
test
mov
in
jmp
into
scas
fiadds
mov
xor
cmpsb
das
push
stos
cmp
lahf
jle
mov
sbbb
jmp
push
ret
rol
inc
jnp
leave
sub
fwait
mov
add
or
decl
mov
call
stos
movsl
cwtl
data16
push
and
fiaddl
cmp
repnz
jo
jb
xchg
mov
lret
shlb
xchg
arpl
sub
insl
icebp
mov
sahf
mov
pop
lret
sahf
add
enter
lahf
insb
pushl
xor
jmp
shl
inc
nop
add
jecxz
jmp
dec
add
mov
jp
fcmovne
jne
adc
mov
bound
pop
imul
in
rorl
xchg
stos
fdivrs
pop
shll
insl
push
cmpsb
sub
daa
inc
repnz
cmp
inc
ljmp
shrb
add
jmp
lods
push
iret
cmp
sbb
rorl
add
sbb
cmpsb
and
mov
sbb
lods
pop
xchg
idivb
mov
es
adc
inc
int3
xchg
popa
ret
jo
or
mov
sar
fldenv
in
test
pop
xlat
sbb
sub
add
mov
mov
adc
and
or
jae
sti
clc
push
cmc
fisubrl
cmc
mov
adc
xlat
push
dec
add
bound
popa
pushf
out
stos
push
and
dec
pop
mov
mov
movsl
test
mov
jmp
cmp
sub
dec
in
pop
mov
in
pop
hlt
in
movl
test
lods
xor
and
imul
add
sti
jb
mov
mov
xor
in
sub
int
int
pop
adc
mov
lods
or
cmc
and
lahf
jp
into
rcll
pop
sbb
stos
out
add
mov
mov
jge
and
dec
push
jne
inc
imulb
mov
pusha
jg
popf
pop
xchg
cmpsb
lds
popa
insl
sahf
lds
cmp
inc
xor
mov
mov
pop
loope
mov
lods
or
cmpb
daa
orb
push
cmpsl
xchg
aam
bound
aad
js
shrl
and
pop
adcl
cwtl
xchg
incl
xchg
pop
insl
jmp
daa
rorl
lcall
adc
call
jns
cmp
inc
add
push
insl
push
arpl
pop
jo
add
push
sub
cld
fcmovb
sub
cmp
mov
add
pop
cmp
dec
jp
andl
push
ds
int3
mov
jge
enter
dec
sub
ja
pop
cltd
pop
adc
inc
nop
or
sub
lods
js
data16
call
jbe
in
cmp
mov
das
mov
js
int3
nop
mov
adc
aad
cmp
adcl
or
xor
rcrb
sub
lock
addr16
imul
add
into
mov
or
or
pop
test
sbb
test
add
add
mov
xchg
jns
icebp
jb
jmp
adc
outsl
xchg
scas
insl
and
pop
xor
mov
rcrb
mov
movsb
jle
data16
xchg
or
fisttps
sti
or
cmp
stos
addr16
mov
sbb
add
ljmp
sbb
lret
aaa
xor
cmp
popf
nop
subb
sbb
xchg
mov
push
push
push
popf
push
icebp
pop
icebp
repnz
push
pop
cmp
rol
cmp
add
mov
insb
clc
scas
dec
jne
insl
psllq
mov
push
xchg
pusha
mov
sub
or
mov
icebp
in
cmpsb
aas
mov
jp
adc
inc
iret
sahf
out
add
ja
shll
pop
hlt
in
clc
lret
mov
imul
adc
ds
dec
pop
daa
jle
pop
adc
test
add
fdiv
lret
xor
mov
xchg
push
mov
ret
mov
cmp
inc
lds
xor
lahf
fcoml
push
sub
mov
pop
xchg
mov
push
movsb
sub
or
stos
scas
mov
fisttps
pop
shl
loope
jmp
pop
adc
inc
sbb
fadds
loopne
lods
pushl
or
or
fmul
daa
loop
out
rcrl
inc
cmpl
cmc
adcl
push
adc
push
xchg
cmc
mov
jge
cmpsl
aad
dec
rcll
jae
pop
inc
gs
int3
jmp
mov
jo
mov
pop
push
dec
stos
iret
mov
sub
mov
cli
jo
jne
sti
fwait
sbb
insb
icebp
mov
sbb
aas
daa
sbb
and
push
jne
push
push
mov
jnp
clc
inc
mov
pop
jecxz
adc
popa
es
rorb
loop
popl
inc
loope
insb
outsb
out
dec
mov
dec
jecxz
bound
fsubl
sbbb
test
pop
sbb
lret
loope
fs
lret
and
jne
sti
cmp
jecxz
and
sub
std
adc
movsl
test
into
cmp
iret
mov
sahf
rolb
push
lcall
outsb
insl
jge
xchg
in
mov
test
add
push
add
fcmove
sub
and
orl
fisttps
addr16
inc
and
cwtl
jecxz
jo
dec
jns
xor
or
fmuls
aaa
cmpsb
cmp
outsl
push
test
fwait
int3
ljmp
lods
add
outsb
mov
cmp
es
testl
sub
outsb
imul
sbb
fcmovb
adc
add
xchg
lcall
pop
xor
roll
xor
lcall
pop
test
call
adc
lahf
repnz
loopne
iret
iret
and
xor
mov
clc
inc
push
loop
bound
jg
popf
inc
pop
inc
outsb
add
scas
inc
inc
xchg
xor
adc
add
xchg
pop
test
jbe
lods
mov
cmp
mov
inc
es
xchg
pushf
add
mov
xchg
pusha
das
in
les
mov
pop
dec
dec
xchg
xor
sub
or
dec
pop
inc
les
jbe
orl
cmp
mov
sub
sbb
frstor
dec
push
dec
pop
aam
cltd
lods
sub
mov
aam
rorl
xchg
mov
adc
shufps
in
or
cmp
xchg
mul
xchg
push
mov
dec
outsl
scas
sbb
sti
pop
cmp
push
mov
mov
cli
stos
and
js
insb
sbb
addr16
aam
and
lea
les
rclb
dec
mov
sahf
push
out
cmpsb
loopne
inc
cmp
ret
or
xchg
or
jne
lods
mov
testl
jecxz
repnz
lods
movb
pop
push
shrl
aam
hlt
popf
lods
jecxz
or
inc
and
push
stc
jne
xor
push
or
mov
inc
jp
jg
or
test
and
stc
out
popf
jo
jae
faddl
xchg
imul
adc
cmp
jp
lea
adc
and
sbb
bound
xchg
fcmovu
shll
or
or
out
out
ret
or
xchg
pop
dec
push
lahf
mov
rorb
loop
jg
pop
inc
dec
fcomip
add
xor
or
add
stc
rcrb
pop
fcmovne
jnp
aas
in
add
xchg
push
pop
bound
xor
cs
jno
test
mov
enter
scas
mov
je
fs
pop
or
es
sti
and
cmp
mov
jb
push
inc
cmp
cmp
orb
insb
ficoms
adc
push
inc
add
out
dec
scas
out
and
outsl
divb
fildll
jno
test
leave
movsl
dec
daa
inc
loopne
shrb
cld
cs
xchg
cmp
frstor
sbb
inc
dec
or
out
pop
pop
pop
xchg
ds
daa
cs
movsl
xchg
and
sub
out
xor
fs
imull
sub
mov
adc
dec
arpl
into
js
push
dec
cmp
jmp
mov
test
in
leave
lods
roll
out
imulb
test
jl
cld
sub
int
or
adc
stos
cmp
cmp
popa
push
dec
ljmp
mov
add
pop
ja
sbb
adc
ficompl
xor
mul
mov
orb
add
inc
icebp
pop
loop
pop
mov
popa
pusha
jnp
cld
cltd
cmp
out
push
push
mov
add
inc
push
outsl
sub
aam
and
pop
xor
jmp
movsb
call
and
mov
jle
mov
in
mov
lods
stos
add
fmulp
xor
push
es
inc
mov
sti
in
push
jle
cwtl
das
movsl
jmp
clc
add
leave
and
pop
loop
dec
jmp
dec
je
add
into
mov
xlat
cmp
out
mov
cmpsl
sbb
cmp
xchg
out
fs
sti
sbb
mov
jns
lret
inc
mov
in
out
push
jmp
pop
hlt
rclb
mov
sbb
test
mov
pop
notb
icebp
pop
pop
pop
dec
aam
aad
mov
sbb
jg
push
mov
dec
dec
and
mov
jo
and
jmp
fistpll
jg
push
dec
fimuls
dec
jns
jl
lods
mov
adc
mov
cmpsb
mov
icebp
call
roll
jl
test
jmp
xchg
test
push
or
adc
jle
mulb
inc
out
inc
add
shrl
pusha
out
lahf
in
in
add
pusha
add
stos
pop
movsb
or
cmp
iret
lcall
adc
adc
ss
nop
and
sub
mov
lock
call
or
mov
push
pop
pop
push
mov
cmp
ja
mov
out
insb
and
sub
inc
mov
daa
sti
push
repnz
cltd
push
xchg
dec
sbb
pop
jnp
aam
adc
int3
cld
lods
andb
jnp
and
lea
jbe
push
stos
jle
pop
inc
jo
mov
push
xchg
push
add
mov
es
mov
cmp
ss
adc
test
fbld
movsl
fnstcw
lock
div
or
movsb
inc
sbb
dec
jg
imul
xor
dec
js
lahf
shl
pop
mov
jmp
adc
cltd
mov
and
rcrl
out
bound
lds
xchg
icebp
in
outsl
icebp
cmp
push
lds
or
lahf
mov
and
add
lods
andb
dec
cmpsb
out
daa
sub
scas
xchg
das
xchg
aad
jp
lcall
mov
fildl
lock
mov
pop
mov
out
adc
mov
jb
bound
mov
mov
push
inc
and
hlt
gs
dec
ljmp
push
addr16
cmc
gs
pop
xorl
xchg
or
lret
out
ret
pop
adc
xchg
pop
push
pushf
lods
out
dec
jb
subl
pop
jb
lea
jno
in
cmpsl
shr
lret
lahf
dec
out
and
scas
push
cmp
enter
jp
push
daa
and
sub
jl
movsl
cmp
lcall
dec
xor
fstpt
lds
jo
lds
inc
and
jnp
mov
repnz
inc
cmp
in
dec
ja
push
sbb
std
adc
fdiv
push
xor
cmp
sub
xor
cld
sub
add
pop
in
mov
dec
faddl
push
and
aas
push
stos
fdivrs
sbb
loope
mov
jg
adc
rclb
pop
insb
inc
negb
adc
xlat
push
pop
je
push
fildl
lcall
out
pop
test
dec
pop
loopne
movsb
push
and
jbe
mov
cmpsl
insb
pusha
jae
jmp
rolb
mov
sbb
lret
and
packssdw
jg
mov
cli
mov
jle
aad
xor
inc
xor
int
or
rclb
mov
jmp
popa
and
mov
pop
mov
cmp
mov
jbe
pop
inc
push
idivb
inc
or
push
add
imul
xchg
mov
into
adcb
inc
aam
int
ja
fisttps
lahf
jmp
cmp
sub
cli
sbb
leave
pop
movsl
xchg
xchg
dec
dec
mov
or
test
dec
int
and
movb
xorb
div
sub
push
and
mov
mov
or
loopne
iret
std
adc
inc
les
fdivp
pop
inc
lcall
sahf
xchg
pop
xchg
test
push
inc
push
xchg
cwtl
jecxz
in
push
xor
ret
iret
mov
addb
cs
pop
jmp
fxtract
imul
cs
pop
mov
lret
insl
dec
inc
inc
cmpsb
out
loope
gs
cmpsb
adcb
repz
mov
mov
add
mov
outsl
loopne
pop
mov
jle
idivb
shrl
cmpsl
fdivl
xchg
xor
popf
test
push
shrb
push
lds
pushf
jne
lods
xlat
lods
scas
mov
jbe
xchg
pusha
and
sbb
rcrl
dec
scas
std
push
mov
jb
test
mov
mov
fildl
mov
adc
sub
jbe
stc
popf
ss
fists
inc
sbb
fld
or
scas
pushf
lea
enter
aas
cmp
add
jb
das
ds
fidivl
pop
scas
and
ret
sbb
xorl
lds
fucom
int
and
cld
icebp
sbb
scas
cmp
push
dec
cld
fildll
into
cmp
push
jmp
imull
outsl
mov
add
in
sbb
test
inc
ljmp
fdivl
cmp
pop
dec
into
push
shlb
xchg
pop
mov
idivl
in
imul
jo
sbbl
jb
dec
cmpsb
pop
ja
popf
addr16
imul
or
test
ds
test
xor
mov
cwtl
and
push
bound
pop
mov
pop
fsub
loop
in
out
adc
push
outsl
test
adc
es
push
push
sub
push
loop
mov
popa
stos
and
lret
mov
outsl
aam
add
push
mov
jo
dec
test
enter
ja
out
xor
icebp
lcall
jg
add
mov
arpl
sub
js
arpl
decl
push
and
xchg
cli
push
aam
jmp
sub
shrb
sbb
test
adc
cs
cld
loop
sub
mov
test
or
lds
ss
fwait
xor
adc
xchg
fdivr
add
mov
je
repnz
fsubl
mov
ljmp
lock
daa
push
xchg
cmpsl
inc
hlt
sub
sub
adcb
popf
and
test
jmp
out
and
stos
mov
mov
xor
add
cld
xor
lret
jecxz
shlb
jle
xchg
cmp
pushf
add
stos
xor
xchg
call
xor
cmp
cmp
mov
xor
notl
adc
jmp
lret
hlt
pusha
inc
jmp
push
pop
pop
cs
cwtl
imul
fistps
lcall
mov
in
push
sbb
bound
popf
mov
mov
push
aam
xchg
fldl
arpl
pop
cltd
cmp
mov
mov
cltd
std
cltd
push
repnz
sarl
out
cmp
popa
jnp
cmpsl
pop
add
pop
std
xchg
les
jb
lods
mov
or
es
jp
mov
push
pop
fsubr
iret
xchg
pusha
and
mov
out
dec
icebp
push
xor
cli
punpcklbw
fbld
aaa
stc
pop
xchg
mov
lods
movsl
clc
mov
sti
sbb
test
lds
or
jg
imulb
lds
or
mov
pushf
or
sbb
jmp
inc
dec
cmp
fs
cld
adc
dec
mov
clc
aaa
in
xchg
sub
shll
data16
daa
mov
pop
repnz
mov
dec
inc
loope
psubb
push
add
adc
xor
hlt
cmp
jno
shl
sbb
or
int
sbb
cmc
scas
xchg
pop
fnsave
sbb
or
push
sbb
pushf
pop
jo
inc
fstps
loop,pt
movsl
std
hlt
mov
xchg
mov
dec
add
inc
aad
inc
ljmp
xchg
mov
in
jmp
add
stos
xchg
jno
fucomp
hlt
jl
std
xor
sti
scas
movnti
in
arpl
ja
ss
jno
cmp
cli
lret
jmp
das
loop
int3
xchg
dec
mov
push
mov
repz
movsb
fstps
mov
xlat
push
jo
subl
xor
jge
fstps
mov
fsubs
xchg
fistpl
inc
dec
mov
in
and
xchg
es
daa
sub
jnp
lds
insl
fmul
push
cmp
popf
aaa
jno
shll
jnp
inc
mov
and
je
pushl
mov
pop
pusha
push
inc
xor
adc
fsubrl
sub
dec
xchg
scas
dec
mov
lahf
shll
out
mov
jecxz
sbb
dec
ret
out
mov
add
iret
call
push
add
fwait
push
sub
mov
orl
add
mov
in
fcoms
jb
pop
xchg
xchg
or
insb
rcrb
mov
or
xor
jp
sub
mov
jl
fdivrp
mov
bound
clc
mov
sbb
stc
call
jp
sub
adc
int3
pop
loopne
xchg
xor
fildll
out
data16
mov
cmp
dec
out
push
adc
or
test
pushf
sbb
arpl
pop
scas
mov
stos
les
cmpsl
sbb
repnz
stc
subl
ljmp
xchg
jns
mov
out
or
fsubrs
lods
pop
stc
jp
call
jo
pop
xchg
jmp
mov
push
stc
jb
call
jge
lea
lcall
push
pop
cmpsb
adc
popf
push
jl
xchg
mov
cli
leave
pop
aaa
jmp
repz
stc
ja
rclb
pop
aad
es
mov
xchg
sub
jo
pop
outsb
out
orl
das
orl
lds
jae
dec
and
push
mov
dec
add
or
or
fcomp
xchg
xchg
imul
in
pop
or
push
in
call
push
jb
xor
clc
inc
loopne
xchg
mov
pop
loope
in
dec
mov
pop
divb
pushf
sub
cs
push
lock
arpl
adc
cli
sub
out
aad
cli
cmp
sub
fcoms
fsubs
fsts
push
test
adcl
addb
icebp
adc
and
or
sbbb
xchg
pop
dec
xor
mov
add
and
inc
dec
sbb
jp
mov
push
fs
scas
pop
mov
jg
gs
pop
add
dec
and
inc
push
add
or
add
mov
mov
ficomps
leave
test
neg
cltd
push
pop
cld
mov
bound
pop
cmp
shll
addb
dec
push
insb
push
int3
enter
xor
popa
sbb
fs
jecxz
push
cmp
mov
fists
pop
or
out
test
lahf
jns
ss
push
cmc
lcall
gs
pop
iret
mov
fwait
sahf
imulb
mov
rcl
out
enter
js
aam
add
pop
psubusb
lahf
sbb
test
lret
mov
insl
add
in
outsb
jmp
std
fistpll
sbb
nop
fwait
jmp
lret
outsb
loopne
mov
xchg
fbld
add
adc
sbbb
sub
add
into
dec
add
mov
imul
push
nop
jb
pop
popa
rolb
add
mov
lret
ds
push
lahf
lods
ja
scas
je
divb
add
cltd
mov
int3
repnz
sahf
lds
fmulp
dec
xor
push
ljmp
xchg
cmp
sub
call
loop
in
jle
xchg
push
lea
in
jnp
enter
dec
cld
daa
lods
shl
jg
es
push
or
pop
mov
mov
push
xchg
and
sahf
push
popa
mov
xchg
jg
mov
fcmovne
hlt
pusha
adc
jg
mov
les
pop
mov
mov
mov
lcall
push
stc
jecxz
sahf
call
and
cmp
rorb
ja
in
dec
bound
je
stos
add
fcmovu
test
xchg
mov
lahf
frstor
test
imull
push
cmpsb
push
popa
orl
lods
xlat
push
ljmp
or
out
cltd
out
cmp
imul
add
aaa
jl
push
sbb
pop
arpl
inc
adc
lret
xchg
scas
out
fdivr
jl
gs
call
pop
and
add
adc
xchg
add
test
es
outsl
push
das
xor
mov
xchg
sti
pop
cmp
mov
mov
push
jae
repnz
adc
popa
cmp
xor
and
test
xchg
sar
test
sbb
push
pop
test
movb
inc
xchg
adc
xor
fsubrp
mov
outsl
xchg
pushf
xor
lea
push
rorb
sub
cltd
int3
cli
mov
jp
dec
loopne
adc
imul
jle
add
imul
cmc
pushf
mov
inc
into
jg
icebp
pop
jo
pop
mov
movsl
cwtl
test
cld
outsl
mov
add
fidivs
pop
mov
xor
fistl
push
dec
add
mov
nop
pop
into
inc
popa
push
enter
ds
gs
jbe
xchg
out
fimuls
adc
mov
dec
xchg
mov
jne
push
mov
pop
inc
insl
xchg
popf
int3
pop
fidivrl
and
xor
or
mov
xor
sahf
pop
xchg
popa
xchg
mov
out
adc
xor
push
cmp
stos
je
nop
shrb
out
jne
or
inc
inc
out
mov
push
add
sbb
pop
mov
popf
fsubrp
mov
movsb
insb
inc
movsb
dec
jecxz
xchg
mov
cmp
mov
icebp
out
cmp
pop
cltd
test
lods
pop
bound
push
inc
pop
push
out
dec
scas
fwait
scas
xor
jbe
mov
scas
jge
fidivl
mov
mov
xchg
mov
mov
cld
sub
dec
hlt
testl
test
je
cmp
stos
sbb
and
sbb
sbb
fldpi
mov
add
fiadds
mov
inc
push
or
loopne
sahf
cmp
fists
cmpsl
ret
adc
pop
call
gs
imul
push
adc
int
jmp
cmpsb
mov
outsl
sbb
xchg
jmp
test
sbb
push
pop
inc
sbb
push
dec
scas
pop
rclb
cmp
pop
mov
fwait
out
mov
adc
push
mov
mov
cs
movsl
sub
lods
xchg
loopne
rorl
mov
enter
jecxz
inc
mov
xchg
xchg
rolb
adc
jmp
xor
jne
inc
sbb
in
iret
and
mov
lahf
cld
test
enter
nop
int3
cmpl
mov
sbb
or
orb
bound
inc
jne
xchg
jne
pop
mov
packuswb
rolb
arpl
xor
mov
ret
sti
in
push
xor
fs
xlat
xor
pop
fwait
pop
mov
daa
test
sbb
mov
int
dec
les
mov
adc
in
xchg
pop
sbb
cmpsl
add
stos
scas
push
push
jl
adc
inc
mov
les
bound
mov
sub
jecxz
xchg
and
filds
ljmp
jnp
les
nop
clc
cmp
mov
mov
jo
and
lods
jne
lcall
loop
jo
lcall
and
sbbb
push
jns
push
fidivs
gs
test
out
and
sub
xchg
jne
sub
jle
out
fs
outsl
xchg
xchg
das
xchg
call
je
imul
movsl
sbb
inc
std
xchg
xchg
stc
imul
inc
sbbl
ret
cmpsl
insl
jl
push
add
lock
sub
arpl
dec
sti
xor
adc
add
dec
push
mov
push
pop
leave
push
push
in
icebp
leave
sysret
pop
ret
mov
das
pop
lea
out
xchg
mov
xchg
adc
cwtl
xor
pop
stos
xor
inc
je
mov
pushf
or
dec
cmp
fwait
jbe
js
add
jecxz
test
adc
clc
jp
aaa
ljmp
out
inc
dec
xchg
sub
xchg
adc
imul
dec
out
sbb
jg
dec
pusha
out
jns
add
rolb
jecxz
xchg
into
lret
adc
push
in
xchg
rcr
pushl
jno
mov
mov
pop
mov
cld
cltd
jl
cmp
sub
and
cmp
aad
mov
fbld
dec
jnp
adc
xor
daa
dec
cld
xchg
cmp
jne
aad
xchg
adc
sbb
lea
fwait
dec
mov
sub
in
dec
mov
add
mov
fcoms
sub
cmpsw
xchg
push
xchg
lods
pop
mov
xor
mov
ja
dec
cwtl
subb
daa
ret
push
ja
cmp
aad
aad
stos
popa
inc
pushf
xor
jo
js
inc
mov
jmp
mov
pusha
fisttpl
je
push
sbbl
subl
out
jns
ljmp
aas
loopne
lret
bound
jno
or
sub
out
sub
mov
sbb
push
lock
or
sbb
add
cmpb
outsb
xchg
mov
mov
push
out
rolb
sti
sub
ljmp
adc
cmp
xor
pop
push
sub
sbb
pop
mov
gs
push
mov
push
ds
das
push
les
shrb
aas
cmp
scas
stos
and
in
addl
adc
sbb
adc
adc
push
pop
sub
repnz
dec
cmpsb
mov
sahf
iret
dec
jbe
fdivrp
xchg
lods
push
or
add
push
mov
xorl
jge
lods
sti
insb
pop
and
cmp
lods
lgdtl
jmp
inc
decl
add
lcall
mov
les
cs
pop
stos
lea
imul
scas
jg
push
mov
inc
loop
add
add
je
jmp
movsl
lret
sub
nop
mov
iret
cmp
cmc
scas
or
cmpsb
rcll
sbb
or
es
push
mov
adc
add
movsb
les
and
dec
jns
inc
jmp
cwtl
adc
inc
icebp
je
js
test
xchg
adc
mov
subb
jle
mov
pushf
mov
jns
sbb
sub
xchg
ror
roll
or
mov
arpl
push
adc
testb
push
dec
cmp
and
imull
ds
add
xchg
xor
mov
js
sub
dec
adc
cmp
jne
fildll
in
es
push
inc
inc
ficoml
mov
cmpsb
fsave
pop
xor
cmc
testb
or
les
pop
mov
sbb
in
mov
dec
mov
xor
xchg
dec
fs
int
pop
adc
dec
mov
mov
lods
notb
inc
pop
fcomp
js
ret
addb
mov
ret
dec
pusha
lret
out
jl
arpl
addl
aaa
xchg
aam
xor
lock
xor
jmp
xor
lods
bsr
iret
icebp
outsw
mov
cmpsl
inc
ds
jecxz
mov
insb
xor
es
sahf
aas
xor
or
aas
movsb
mov
jmp
pop
sbb
or
lock
cmp
lcall
add
sbb
cmpsb
sti
mov
cmc
push
insb
inc
sahf
mov
outsl
js
and
test
dec
adc
sbb
fadds
xchg
vphsubbw
js
push
xchg
in
mov
addr16
sub
imul
add
int3
xor
clc
or
clc
nop
callw
lods
pop
bound
push
jmp
dec
cwtl
daa
xchg
ja
cmp
mov
lods
or
mov
add
and
addr16
inc
mov
int3
lea
stos
adc
std
inc
lret
mov
push
aas
pushf
and
vpmacsdql
jbe
xor
or
mov
sub
mov
fstpl
repz
sti
inc
cmp
lcall
and
mov
sbb
test
mov
in
pop
push
add
sbb
or
or
in
jecxz
inc
mov
test
xchg
cltd
sbb
lret
add
sub
das
fs
add
lret
push
push
outsb
add
jge
cmpl
add
and
dec
bound
sub
lds
cmp
sahf
imul
testl
adc
mov
mov
shlb
mov
add
adc
xor
or
in
xchg
fiaddl
clc
push
es
jno
jp
faddl
and
mov
lret
ret
enter
sub
jl
adc
ret
enter
or
mov
shll
andl
rol
mov
inc
mov
dec
pop
jb
notl
jo
pusha
sar
ret
repnz
insl
inc
push
arpl
push
shlb
movsb
scas
std
popa
adc
adc
xchg
movsl
je
xchg
mov
ret
daa
das
pop
shl
cli
sub
into
jecxz
cmpsb
leave
ret
lods
push
sahf
push
adc
xor
cs
cmp
mov
ss
dec
pop
insb
inc
imul
outsb
and
add
cs
movsl
enter
outsb
mov
dec
cmc
xchg
aas
cltd
xchg
mov
outsb
jo
test
push
out
xchg
loope
in
out
adc
cmpl
push
je
mov
push
cmpsl
stos
es
daa
mov
push
les
fcom
lea
sahf
out
adc
lahf
aas
adc
push
cltd
xor
push
pop
sti
pop
stos
mov
sbb
add
mov
clc
mov
int
loop
pusha
loope
jbe
cltd
lds
arpl
arpl
mov
movsl
sahf
fiadds
xchg
dec
inc
out
aam
fsts
jmp
cmp
enter
jp
sub
mov
and
lods
or
das
xchg
mov
lock
mov
cmp
lods
enter
inc
cmpsb
jb
add
arpl
idivb
bound
sub
jle
sbb
inc
mov
lcall
in
push
mov
mov
add
jecxz
jmp
inc
and
pop
pop
movsl
das
fwait
dec
pop
add
icebp
jno
push
fchs
fmull
inc
push
xchg
and
test
cli
or
mov
mov
int3
fsubp
dec
je
repz
ljmp
sahf
das
mov
call
test
adc
mov
push
mov
mov
dec
cltd
mov
cli
xchg
rcll
mov
les
cmpsl
push
adcl
rol
in
lds
js
pop
mov
cmp
dec
inc
dec
add
scas
dec
jns
daa
lahf
sbb
cmp
push
add
movsl
fdivl
lret
sbbl
lods
dec
aad
in
inc
mov
fmull
sbb
jle
push
pop
in
hlt
dec
movsl
test
mov
xchg
and
out
lock
adc
int
jae
add
jle
mov
push
sub
out
xchg
inc
xor
iret
sbb
and
sub
cs
aaa
shl
ds
mov
test
xchg
ds
lds
jmp
sbb
cmpsl
scas
repz
jno
add
pushf
sti
pop
add
addr16
ja
sarb
rcrl
stos
nop
sbb
clc
push
add
dec
std
lock
xor
or
not
cmp
ljmp
mov
pop
pop
or
push
daa
les
xchg
cmp
test
hlt
mov
shll
mov
test
sub
inc
or
mov
xorb
js
inc
mov
dec
or
adc
push
inc
int
incb
inc
stos
dec
or
aaa
dec
and
mov
jns
ljmp
jnp
andb
ss
addb
mov
into
js
sub
jl
sbb
inc
push
jge
icebp
in
or
mov
cmp
inc
fs
cltd
fidivl
movsl
sub
and
sbb
test
fisubs
aaa
push
test
inc
movsl
jae
adc
repnz
jne
dec
sbb
test
test
mov
or
inc
add
push
cmc
loope
lahf
dec
mov
imul
iret
scas
daa
fstpt
and
or
arpl
cmp
aaa
ja
sub
pop
fwait
cmp
xchg
jnp
adc
mov
fs
mov
dec
dec
add
xchg
mov
cld
inc
sub
test
or
adc
lock
inc
insb
inc
mov
sahf
in
xchg
sub
in
xor
in
add
inc
repnz
hlt
cmpl
lods
pushf
js
xor
fcompl
push
jns
shlb
jecxz
cmp
xchg
inc
cvtdq2ps
test
dec
icebp
movsb
mov
xlat
push
inc
orl
add
mov
push
xlat
mov
jecxz
mov
in
mov
mov
stos
sbb
xor
cmp
ficomps
fisubrs
or
sub
fcom
insl
in
and
loopne
aad
enter
adc
cmp
shlb
xchg
pop
cmp
sbb
pushf
add
movsb
dec
or
xchg
sub
fbstp
in
lock
flds
xchg
jnp
jge
imulb
inc
pop
push
sbb
or
icebp
repnz
or
gs
cwtl
or
rol
cmp
cmp
in
lods
dec
addl
adc
loop
stos
movsb
das
movsb
mov
cmc
jl
repz
cwtl
cs
mov
pop
xchg
call
mov
pop
call
xchg
cld
fdivrp
movsb
lret
outsl
ja
push
adc
in
in
sbb
clc
imul
cwtl
mov
das
insb
cmp
cmpsb
outsl
push
cmp
mov
stos
mov
pop
pop
mov
jae
pop
mov
outsl
jle
xor
pop
push
xor
sbb
lods
xor
adc
cmpl
lret
jo
jp
loopne
pusha
das
arpl
sub
xchg
cmp
xchg
cmp
jmp
adc
cmp
sti
xor
lcall
push
fldt
stos
pop
xlat
jge
pop
jo
mov
mov
jmp
lods
in
push
push
pop
jne
je
pushl
push
lds
sub
loope
lahf
add
pop
aad
dec
fisubrs
out
add
mov
mov
dec
sbb
popf
xchg
icebp
popf
testb
shll
daa
ja
adc
xchg
aaa
mov
sub
shlb
hlt
lret
adc
or
aaa
roll
ljmp
jecxz
sbb
out
pushf
mov
cmp
rcll
mov
repnz
xchg
jae
sbb
inc
mov
js
in
scas
ret
and
stos
or
clc
aam
in
sbb
pop
jmp
inc
fiaddl
adc
adc
fdivl
rcl
bound
mov
jbe,pt
sbb
in
popa
pop
lock
aam
movsb
in
nop
std
dec
mov
adc
rol
mov
jl
lret
fadds
add
cmp
xchg
arpl
ljmp
push
lods
das
or
fisttps
push
into
pusha
add
jmp
add
dec
push
xor
mov
xor
or
stos
sahf
add
jb
jno
xchg
out
jne
inc
insb
add
ljmp
jno
or
push
stos
mov
adc
or
jnp
loopne
shr
call
adc
out
push
fwait
ljmp
imul
mov
aad
mov
push
mov
xchg
imul
xor
add
add
call
hlt
filds
xor
mov
daa
dec
mov
adc
scas
add
or
inc
inc
pushf
xchg
int
lret
adc
ljmp
sbb
jbe
xor
int
enter
mov
imul
jp
dec
xor
lcall
push
into
sub
inc
insb
mov
fadds
and
dec
in
iret
inc
test
dec
jne
fwait
adc
lds
daa
mov
stc
cmc
push
movsl
movsl
fimull
lcall
jbe
ret
mov
dec
xlat
aad
sti
pop
repnz
dec
push
mov
repz
mov
mov
xlat
mov
adc
test
xchg
mov
testw
mov
pop
js
ss
push
push
xchg
adc
push
lret
sbb
outsl
dec
and
xlat
shlb
test
sbb
mov
into
mov
rclb
pop
sbb
fisubrl
pop
aas
aas
jae
cs
pop
sbb
test
dec
xor
ljmp
sbb
xor
addb
cltd
sub
js
xchg
dec
cmpsl
fstp
popf
test
xor
dec
in
sub
dec
jmp
cld
pusha
mov
shl
or
test
mov
call
or
ljmp
add
lods
xor
cmp
xchg
pusha
cmp
fs
adc
fnsave
pop
out
cld
fs
mov
jge
bound
mov
scas
xor
cmp
scas
bound
lds
popa
ret
cmp
sbb
ss
jo
mov
addl
mov
ja
insb
scas
mov
lahf
lahf
aad
fldenv
fxch
ret
pushf
cmp
mov
push
mov
decb
push
jp
dec
inc
cwtd
mov
cmpsb
fldl
divb
mov
pop
int
xor
out
bound
and
or
insb
aas
xor
xor
rcrb
mov
or
jl
lock
push
test
pop
xor
repnz
push
cmc
push
iret
adc
or
lcall
imul
decl
inc
fcompl
mov
or
push
ja
clc
cmpsb
adc
int3
daa
sub
in
in
jae
jge
push
cmp
push
xchg
mov
gs
and
push
adc
jae
push
cmp
movsl
sarl
adc
loopne
loopne
xchg
std
push
or
andb
sbb
punpcklbw
mov
xchg
sbb
andl
arpl
fs
cmp
into
mov
movl
lret
incl
and
scas
loope
dec
fwait
sbb
mov
out
int
out
push
add
or
jl
dec
jle
dec
xor
fisttpl
xorb
push
pop
ljmp
sbb
inc
loop
xchg
xlat
adc
mov
adcl
inc
mov
out
loope
mov
rcr
ret
lods
stc
and
inc
mov
xchg
cld
jns
stos
dec
jo
pushl
mov
xchg
or
dec
xor
jb
shl
inc
loope
xor
and
sub
cmp
cmp
movsb
fstpl
mov
pop
mov
push
test
mov
jns
sbb
pop
negl
sbb
dec
test
and
scas
lret
cmpl
and
dec
rorl
rorb
sahf
icebp
dec
mov
xchg
push
mov
sbb
inc
je
add
pop
mov
push
es
nop
xchg
in
in
in
lcall
sub
cltd
mov
push
add
and
fdecstp
scas
fwait
mov
test
dec
mov
mov
add
sub
cld
mov
fadd
addr16
in
add
and
rol
xchg
push
xor
loope
xor
sahf
scas
js
fxch
ror
test
out
popa
or
ja
aam
ficomps
rorb
mov
dec
push
inc
jne
or
stos
sub
jo
and
imul
push
cmp
and
shll
xchg
cld
rolb
popa
test
sbb
inc
mov
inc
sti
gs
push
cmp
outsb
dec
out
sbb
mov
ljmp
pop
out
rorb
repnz
push
push
mov
movaps
jle
pop
cmp
loop
mov
push
and
xor
scas
inc
jo
sub
xchg
outsl
gs
sub
lea
call
inc
mov
mov
push
sub
xchg
dec
sbb
inc
or
mov
dec
push
pusha
adc
sub
in
add
enter
div
mov
cwtl
mov
mov
pop
sub
fistpll
mov
inc
sub
mov
xor
push
scas
shll
sahf
es
xchg
out
cmpsl
jle
xchg
test
jp
ss
adc
sbb
cmpsl
scas
mov
repz
adc
sar
out
mov
into
fisttps
fnstsw
mov
push
js
pop
rolb
into
loope
dec
inc
repz
push
and
mov
mov
outsb
lea
out
xor
in
test
mov
popa
jl
jmp
mov
sub
sbb
in
mov
pop
daa
jae
sbb
sarb
pop
cwtl
loope
adc
or
mov
or
mov
mov
sub
das
mov
repnz
sbb
out
add
push
mov
jecxz
push
xor
cmp
cwtl
add
add
mov
mov
jae
shrl
or
fwait
stos
dec
mov
in
orl
ss
xchg
in
mov
push
inc
mov
mov
out
lret
sbb
xchg
add
fwait
and
and
add
aam
and
add
jmp
pop
sbb
pop
lret
call
test
test
adc
test
xlat
shr
fiadds
lahf
adc
jno
xchg
push
fdivrp
jmp
aam
mov
inc
mov
mov
add
push
into
mov
mov
adc
loope
mov
je
stos
sbb
leave
dec
mov
cmpsb
pop
shll
cwtl
dec
cmpsb
aam
int3
repnz
jns
cwtl
repz
in
dec
cltd
xor
das
dec
les
lock
imul
movsl
push
inc
or
lahf
incb
jbe
add
divb
fcompl
les
sbb
dec
outsb
and
xchg
cmc
mov
test
sub
mov
aaa
jbe
jl
leave
jno
scas
and
pop
jo
popf
lret
cmpsb
or
sbb
or
arpl
and
movl
out
pop
fimull
iret
hlt
push
add
inc
and
stos
adc
dec
hlt
cmpsb
andl
or
pop
loopne
add
cmp
jns
xor
adc
fiadds
mov
pop
pop
loop
aaa
stos
imulb
cli
and
mov
dec
lock
xor
sbb
jle
or
lcall
xchg
jbe
push
out
je
mov
and
fmull
jns
jnp
xchg
out
push
scas
pop
inc
jmp
xor
enter
int3
bnd
xchg
jb
sti
xor
fildl
xor
ja
rorb
jmp
shll
arpl
sbb
sbb
addl
fsubr
arpl
stos
outsb
mov
gs
add
xchg
es
pop
out
and
ja
push
add
push
xchg
add
xchg
idivl
mov
mov
aam
mov
rcl
or
jl
cmp
and
ljmp
lds
lret
fistpl
gs
les
and
pushf
mov
mov
enter
cs
mov
popa
mov
mov
into
mov
gs
cmc
lcall
pop
cs
push
jmp
mov
sahf
sti
cmp
pop
xchg
sbb
fdivrs
out
xlat
adc
xchg
insb
dec
inc
mov
xchg
imul
stc
xchg
mov
sub
stc
xchg
jae
loop
lds
mov
icebp
clc
push
cli
ret
inc
lahf
sub
jmp
sub
mov
mov
fiaddl
adc
orl
insb
sti
mov
pop
mov
orl
mov
data16
ret
iret
dec
cmp
add
fdivrl
roll
jo
iret
addr16
inc
pop
aam
pop
adc
cmc
out
arpl
sub
in
test
and
inc
jecxz
dec
aam
adc
lea
hlt
mov
pop
adc
sbb
stc
cmpsl
dec
sbb
mov
dec
cmp
push
test
in
xchg
jg
sti
xchg
cmpb
nop
pop
sahf
jge
test
mov
addr16
mov
lods
iret
mov
cmp
jns
jmp
lds
mov
loope
push
mov
test
mov
jle
xchg
and
insb
and
cwtl
jge
mov
sub
popa
int3
dec
mov
push
fistpll
in
cmp
pop
loopne
sbb
adc
jne
xchg
cs
inc
in
xlat
push
loopne
fdivp
out
lock
repnz
inc
cltd
add
push
bound
inc
insb
shl
or
push
cmc
push
adc
mov
cmpsb
test
xchg
jbe
lret
rcrl
or
pop
or
sbb
cmp
jo
inc
pop
sbb
stos
jp
lahf
orl
lcall
mov
xchg
or
jae
mov
push
add
sbb
inc
icebp
adc
mov
xor
repz
fidivl
lret
mov
cmpsb
lret
mov
add
mov
rcr
bound
in
add
in
mov
adc
subb
test
sub
ret
jg
sbb
mov
sbb
pusha
mov
push
lds
rcl
fbstp
mov
dec
or
jg
inc
and
insl
jle
add
mov
mov
lods
pop
sub
fcos
jge
cwtl
mov
xchg
mov
xor
add
movsl
dec
rcrl
aaa
add
adc
mov
push
inc
push
ja
andb
mov
lret
jno
sbb
dec
adc
fcmove
mov
mull
mov
push
dec
push
push
mov
push
and
add
push
push
sub
shlb
movsl
test
popf
ret
mov
insl
rcr
push
sub
cmp
xor
fldt
and
push
pop
aas
mov
imul
rcll
fldt
mov
or
cltd
dec
rcr
insb
test
cmp
rcl
shrl
adc
pop
xchg
sub
xor
mov
clc
adc
dec
push
jle
icebp
and
lods
or
jo
push
shrb
push
add
fadds
idiv
test
jp
icebp
adc
or
cltd
aad
add
addb
jbe
ljmp
mov
xorl
js
pusha
mov
or
xor
pushf
test
lock
lret
lds
add
lods
push
outsb
cltd
xchg
fists
in
inc
or
jmp
push
xor
mov
mov
mov
sbb
stos
cmp
xchg
push
loope
and
ror
push
notb
xor
std
mov
add
in
sbb
xor
jge
movsl
dec
sub
popa
or
inc
movsl
scas
and
arpl
adc
pop
loopne
fldl
cmp
aad
sbb
xlat
xor
in
cmp
mov
and
inc
mov
repnz
cmp
mov
jne
pusha
bound
js
cmp
sub
sarl
add
lret
push
rorb
add
pop
push
insl
or
push
imul
xchg
mov
adc
daa
dec
cltd
aad
lret
popa
sub
add
sub
aas
lock
jmp
mov
jge
test
add
sbb
jo
sbb
xchg
push
iret
sbb
mov
sub
lods
sbb
xchg
or
sbb
or
repz
or
xchg
jb
movsb
sbbl
mov
movsb
inc
and
jg
out
loopne
imull
add
nop
and
out
dec
xchg
pop
dec
mov
ficoml
fisubl
or
push
xor
sub
fsubs
xchg
sbb
mov
or
xchg
mov
scas
mov
xor
bound
sahf
xchg
xchg
cmp
cmpsl
mov
stc
fisubrl
js
sbb
leave
dec
or
das
mov
add
cmp
mov
loopne
pop
je
xor
mov
xor
dec
push
xrelease
add
mov
add
or
cmp
aam
stc
jnp
fdivrp
push
out
xor
push
mov
ljmp
imul
stos
sbb
cmpsl
stos
xchg
cmpsl
and
lcall
out
xor
or
lea
in
out
ljmp
push
mov
sub
add
inc
jge
test
bound
cmpb
push
stc
lcall
mov
outsb
dec
mov
sbb
xlat
cli
add
and
jmp
popa
xor
xorb
mov
ljmp
inc
jbe
fnstenv
jmp
push
inc
push
in
filds
icebp
sbb
dec
pop
sub
cmpsl
andl
pusha
daa
fs
fcompl
push
sarb
call
xor
js
in
xor
loopne
lcall
xor
cmp
jmp
sbb
mov
mov
mov
sub
xchg
std
xchg
inc
rcll
int
or
inc
cs
out
cmpb
in
out
sbb
das
xor
out
dec
sub
adc
xchg
enter
cmp
das
scas
dec
jae
rol
mov
ljmp
and
jnp
in
insb
jnp
shll
sbb
popa
movsl
and
cld
push
rcl
or
popf
pop
pop
xchg
mov
cwtl
icebp
outsb
in
fadds
push
outsb
lods
xor
adc
dec
cmp
inc
or
adcb
pushl
call
jb
adc
jbe
negl
pusha
sbb
rcl
and
in
addl
xor
cwtl
inc
or
ret
inc
imul
inc
cmpsl
cmc
scas
sub
es
mov
push
gs
cmpsb
outsb
icebp
add
xchg
inc
adc
rol
push
bound
mov
inc
push
gs
sub
pop
ljmp
xchg
ss
pushf
enter
aad
ret
xchg
and
xor
sbb
roll
add
adc
push
je
add
js
stos
outsl
xchg
push
rolb
mov
popa
mov
push
sbb
mov
sbb
cmp
stc
inc
gs
or
in
into
mov
pop
call
cmc
addb
clc
int3
pop
mov
insl
dec
fsubrs
inc
mov
ret
inc
aas
loopne
push
enter
cmpsl
inc
mov
adc
mov
fidivrs
outsb
mov
mov
lret
js
mov
sub
add
in
jno
sbb
adc
pop
das
mov
fstp
and
jb
push
fdivrl
fmuls
icebp
mov
repz
imul
pop
out
xchg
push
dec
stc
xor
sub
jmp
inc
andl
pop
xor
jbe
lcall
sub
aam
mov
or
mov
jne
aaa
jg
hlt
jnp
hlt
ss
pusha
mov
and
fsub
loopne
pop
sarl
push
dec
add
shrb
sti
dec
pop
add
outsb
fidivrl
or
inc
outsb
lds
xor
or
mov
pop
and
jecxz
fstpt
push
arpl
jne
lock
dec
xchg
xchg
lock
sub
xor
adc
or
enter
sbb
aaa
jnp
shll
cwtl
rol
lcall
push
add
lcall
ss
std
je
repz
xor
xchg
cmp
jno
fistpll
mov
mov
jp
in
into
out
add
aad
xor
mov
lret
cwtl
inc
pop
jg
iret
adc
pop
cli
fiadds
imul
aas
call
lret
mov
repnz
lcall
cs
nop
xchg
or
push
push
mov
insb
xchg
mov
decb
pop
push
loop
sbb
inc
stc
icebp
mov
leave
in
je
outsb
add
mov
jnp
sbb
in
adc
cs
mov
call
pop
mov
push
lahf
gs
enter
cmpsl
inc
arpl
addr16
cli
add
xchg
dec
xlat
je
jp
int
push
mov
inc
js
cltd
stos
fildll
mov
cmp
lea
add
mov
xor
icebp
clc
das
or
dec
cs
add
and
cmp
insb
mov
adc
pop
sub
jnp
mov
stc
clc
and
icebp
jg
add
sbb
test
xor
or
pop
push
int3
leave
inc
into
je
mov
out
inc
cmp
mov
sub
jns
shrb
push
mov
mov
cltd
pushf
fcomps
test
pop
mov
push
stos
leave
cmp
shrl
in
arpl
ja
mov
xchg
lods
inc
and
dec
jp
or
scas
imul
mov
adc
dec
or
and
stos
mov
int3
mov
inc
mov
data16
outsb
sbbl
add
inc
jp
sub
fldcw
fiadds
and
inc
shr
shlb
or
jecxz
dec
dec
mov
push
jge
sahf
sub
sbb
cmpsb
sub
push
cwtl
insb
jmp
cmc
movsl
adc
popa
scas
idiv
ret
add
and
insl
push
shll
sbb
adc
insb
andb
dec
add
xor
call
and
push
mov
jns
sbbb
dec
cs
jmp
dec
lea
adc
loope
mov
in
mov
popf
jp
xchg
sbb
notl
sti
cltd
cld
addl
test
cmc
push
dec
fidivrl
push
and
jge
test
xlat
xlat
mov
xor
cmpsl
int3
xchg
dec
std
adc
jae
stos
in
mov
mov
std
shlb
inc
add
cmpsl
ficoms
jmp
movsl
mov
aaa
xchg
sbbl
xchg
shlb
mov
xchg
insl
jg
and
fildll
fmul
mov
jo
jmp
mov
lods
xor
inc
push
outsb
and
dec
mov
rcr
test
decl
dec
dec
les
adc
mov
adc
sub
xor
cmp
lock
add
inc
mov
cmpsb
mov
mov
pop
lret
test
pop
add
mov
dec
push
imul
in
sbbl
shrb
cli
cmp
in
push
xchg
shll
cmpsb
mov
cmc
stos
aas
xor
inc
faddl
jne
sub
dec
in
incb
or
push
imul
fs
inc
mov
test
aam
sbb
adc
cmp
sbb
or
xchg
push
xor
into
leave
ret
push
pop
loop
add
pop
in
sbb
insb
or
mov
mov
nop
xor
add
outsb
mov
and
jg
ficoml
imul
mov
dec
loope
jecxz
push
jo
insl
mov
push
or
or
sub
pop
xchg
xor
ret
mov
jno
int
pop
lret
fmulp
jmp
movsb
mov
sub
jl
cld
cs
enter
pop
arpl
xor
stos
pop
push
ljmp
mov
stc
pop
push
mull
sub
mov
xchg
mov
lcall
cmp
inc
or
in
pop
add
ss
pop
les
adc
outsl
test
mov
mov
cmp
adc
mov
fidivrs
lds
cmp
in
cli
ss
push
mov
test
jg
xor
mov
and
movl
or
xor
add
push
inc
in
ret
mov
fildl
pusha
icebp
xor
fs
out
loopne
sahf
das
lods
mov
mov
int3
push
loope
in
inc
sub
dec
insb
and
lds
aam
add
je
mov
jle
and
xchg
push
mov
aam
sub
out
cmp
mov
fwait
addr16
out
ja
in
lcall
pop
xor
fwait
sbb
adc
jmp
jmp
cmpsb
pop
dec
stos
pop
cld
clc
orl
or
pusha
aaa
loopne
dec
and
add
sahf
cmpsl
add
in
push
inc
negb
add
jmp
sub
jle
pusha
out
adc
addl
sbb
int
sub
xor
sub
jne
sbb
pop
or
dec
mov
arpl
mov
aam
les
lds
mov
je
sti
std
mov
sub
pop
xor
mov
pop
daa
addr16
push
out
loopne
cmp
add
int3
dec
divl
jl
push
imul
add
scas
mov
mov
dec
dec
jl
fs
inc
dec
xor
loopne
test
cmp
dec
mov
mov
mov
inc
imul
test
push
pop
or
push
and
fsubrs
dec
scas
sbb
and
test
ja
orl
xor
call
sti
sub
imul
xchg
sub
pop
add
mov
sbbb
xchg
push
out
addb
mov
push
cmc
push
and
xor
xchg
jne
dec
inc
jg
pop
lret
fidivl
jmp
rcrl
orb
leave
xor
mov
aas
rorl
enter
and
insb
scas
mov
cmp
subb
jle
push
push
mov
std
sub
sbb
in
fwait
pop
or
jge
xchg
pusha
cmove
inc
push
cmpb
jo
movsl
out
ss
pop
inc
cmp
int
lock
xchg
sub
xor
add
insl
lahf
push
adc
cwtl
aad
push
mov
add
mov
pop
mov
addr16
ret
cmp
inc
sbb
arpl
in
dec
jne
and
and
push
mov
ret
pop
les
cmp
xor
cmp
lods
xchg
adc
clc
push
cwtl
pop
and
loopne
pop
cld
rcl
fwait
mov
push
ret
stos
push
aas
xlat
and
lahf
mov
mov
rorl
ljmp
adc
pop
rorl
test
push
out
ret
in
adc
stos
dec
mov
pop
cmpsl
xchg
push
cld
fwait
pop
dec
mov
xor
mov
cmp
lea
xchg
mull
lcall
push
scas
adc
and
lea
add
mov
ss
arpl
dec
mov
je
bound
into
mov
rcrb
mov
ret
push
push
orps
outsb
xchg
lret
mov
push
out
cld
push
clc
sbb
daa
insb
popf
aam
jmp
sti
call
mov
shlb
cmpsl
in
fisttpll
pop
xchg
jg
clc
hlt
push
pushf
add
sub
fldt
sbb
xchg
inc
adc
push
cmp
cwtl
loopne
push
lock
lahf
xchg
mov
mov
add
out
les
xor
les
int3
mov
out
data16
or
lds
scas
pop
mov
jg
loop
out
repz
mov
sbb
ljmp
xchg
jg
imul
mov
pop
inc
aam
jne
jecxz
cmp
pop
and
mov
mov
rorl
inc
jns
sub
pop
push
xchg
mov
adc
sarb
xchg
je
data16
xchg
add
inc
aas
xor
cmpl
jle
lahf
shlb
stos
cmp
push
dec
jle
mov
push
icebp
mov
or
add
sub
lock
push
movsl
fwait
jl
jbe
push
add
adc
pop
sti
jmp
dec
mov
jp
mov
jae
push
mov
mov
sub
mov
or
mov
dec
or
out
fdivs
loope
jnp
mov
movq
fisttpl
mov
mov
into
pop
inc
add
or
jnp
push
rclb
aam
inc
or
xor
ja
xchg
shl
hlt
outsb
stos
movsl
ret
cmp
mov
popf
aad
add
mov
push
adc
cltd
rolb
ret
dec
aad
or
dec
or
fwait
loopne
sub
lret
icebp
add
ret
ret
fadd
jp
mov
jns
push
adc
mov
xchg
push
xchg
outsb
pop
push
popf
shr
out
sti
jg
adc
inc
or
cmp
popa
addr16
sub
mov
adc
icebp
add
aam
rcrb
bound
int3
ds
and
jmp
insl
lods
outsl
sahf
add
gs
cmp
add
jmp
fcmovnbe
xchg
push
cmp
punpcklbw
mov
fs
lret
daa
mov
arpl
jbe
jnp
mov
ret
mov
cmp
mov
jp
mov
stos
jp
jmp
fsts
fcmovne
jns
lret
insb
inc
dec
ljmp
in
repnz
xchg
mov
popa
das
mov
pop
add
push
nop
cmp
and
mov
xor
pop
aas
into
jb
repnz
add
xor
mov
push
movsb
and
iret
jae
insb
mov
mov
call
fadds
dec
mov
sub
mov
lret
outsb
out
leave
movsl
add
call
mov
das
fcomps
add
cwtl
into
mov
es
add
sub
or
fdivrl
cs
testb
je
sbb
es
pop
lock
bound
cmp
loope
hlt
aam
sbbl
lcall
out
jmp
sub
mov
sub
js
imul
xor
jmp
cmp
push
jno
jg
or
lock
jmp
imul
pop
inc
test
jb
sbbl
shrl
iret
add
les
in
cmpsb
xorl
mov
lret
add
ja
mov
movsb
inc
pop
cmp
mov
xchg
pop
cmovl
and
mov
mov
clc
mov
mov
test
pop
push
lahf
cmp
jmp
add
stos
inc
ljmp
in
daa
add
adc
xchg
shl
cmp
push
and
mov
jge
ljmp
sub
jg
ror
mov
loope
sub
adc
int
and
cltd
stc
push
push
pop
fcomps
sahf
cmp
adc
dec
sbb
ds
movsb
inc
xor
inc
cmpsb
mov
xor
dec
sbb
adc
cmp
in
push
das
xchg
sbb
inc
or
sub
add
fistps
mov
mov
ret
push
cli
je
lahf
xchg
lods
dec
adc
xchg
or
les
xor
dec
xchg
push
test
dec
imul
mov
adc
in
mov
out
outsb
push
lcall
outsl
cwtl
mov
pop
cs
inc
out
je
sub
les
pusha
xor
ss
icebp
jle
in
or
mov
movsb
ja
test
cwtl
push
fldt
lods
test
adc
dec
mov
lret
xor
mov
push
pop
cmp
sub
inc
jbe
lods
lods
lret
mov
sub
xchg
adc
sbb
mov
pushf
add
insb
mov
lret
out
and
inc
fidivrl
push
lea
dec
jg
push
mov
lds
imul
bound
ficoml
repnz
pop
push
rcr
scas
jno
mov
outsl
mov
sub
jp
push
fwait
sbb
dec
sub
stos
rcll
ret
repnz
mov
mov
outsb
or
lret
add
ljmp
inc
sub
data16
jnp
lods
scas
icebp
mov
das
jle
pop
mov
sbb
repnz
aas
lret
add
outsl
inc
mov
addr16
inc
mov
inc
ljmp
push
ja
jmp
aaa
clc
sub
cld
ret
scas
imul
add
sahf
sbb
ja
ja
cltd
js
mov
test
imul
pop
cmp
scas
fstl
lods
cmp
test
iret
mov
pop
push
inc
adc
pop
mov
or
jne
fwait
cmpsb
adc
and
loopne
or
and
loopne
shlb
jge
adc
dec
xchg
cmp
mov
push
mov
inc
cld
dec
xchg
fs
js
jl
push
dec
mov
mov
xchg
sti
nop
mov
xchg
xchg
or
movsl
and
sub
daa
push
xchg
mov
repnz
rorl
mov
jmp
repnz
stc
gs
faddl
jno
cltd
lds
aaa
enter
jne
out
lods
adc
xchg
lret
push
test
out
int
and
push
push
sbb
cld
shll
pusha
test
push
enter
and
mov
test
push
dec
cltd
cmpsl
ljmp
sub
lret
in
das
leave
into
daa
fwait
dec
jo
pushf
sub
in
mov
pop
hlt
pop
adc
ret
cmp
adc
incl
scas
mov
iret
sub
push
jmp
sub
loope
cmp
cmp
clc
fidivl
mov
or
dec
mov
ffree
clc
mov
nop
ret
fstp
mov
lds
dec
jmp
xor
addr16
adc
in
decb
je
popf
mov
mov
push
stos
xchg
loopne
xchg
rclb
adc
or
mov
xchg
in
aad
outsl
adc
inc
in
sub
inc
xchg
push
scas
add
or
push
fwait
mov
mov
int
je
sbb
iret
add
orl
jl
sub
les
and
arpl
push
xor
jo
dec
dec
in
cmp
inc
mov
fldcw
jb
dec
inc
pop
scas
fidivs
pop
cli
push
es
xchg
fsubl
dec
jecxz
je
or
insl
xchg
jo
popa
repz
int
test
in
call
xchg
es
jno
scas
cld
add
xchg
mov
add
dec
popl
sbb
cmp
ds
cmp
pop
jno
cwtl
push
sub
outsl
jo
idiv
push
ret
cmpsl
add
scas
add
xchg
lcall
push
push
mov
jecxz
sub
js
jb
pop
cmp
sub
jmp
scas
or
mov
xor
stos
inc
jae
push
int
shrb
shlb
mov
outsb
pop
cmp
fcoms
mov
cld
scas
sub
jecxz
cmp
call
jmp
jbe
mov
out
fwait
scas
mov
inc
jo
jbe
out
or
incl
lock
mov
xlat
cltd
xchg
fmuls
cmpsb
imul
pop
sahf
arpl
clc
mov
popa
mov
mov
cwtl
jp
jae
insw
jne
cli
dec
imul
in
pop
cmpsb
jmp
loope
rcll
js
lret
push
fwait
mov
test
les
loop
or
xchg
test
jge
jo
cli
pop
test
aad
and
or
insb
test
jp
fbld
push
push
mov
inc
lar
inc
out
rol
jl
loope
pop
push
in
inc
cld
add
sar
ret
and
add
sub
cmp
mov
jnp
cs
push
add
lods
aam
push
fldt
xchg
cmp
xchg
xchg
pop
and
cld
add
cmpsb
jp
fmuls
subl
jmp
cmpsb
stc
mov
inc
and
jnp
decl
clc
cli
or
pushf
icebp
push
inc
out
je
rorl
sub
cmp
adc
or
stc
push
xlat
and
enter
in
cmp
into
xchg
mov
add
mov
out
aaa
pop
cmp
add
std
add
adc
ret
mov
add
inc
adc
xchg
stos
jno
push
rcrl
fisttps
inc
xor
dec
xchg
xor
jg
inc
sysenter
rcll
pop
loope
mov
pusha
sbb
lahf
sbb
pop
mov
push
inc
shr
in
lahf
mov
std
inc
mov
fbstp
xor
hlt
push
or
push
xchg
mov
xor
lcall
jae
jbe
movsl
pop
addl
ds
dec
data16
icebp
xchg
inc
sub
loope
jno
xor
divb
mov
sub
test
mov
mov
push
fwait
mov
fistpl
testl
in
rcrb
shll
adc
ret
outsl
cmpsl
inc
ljmp
and
out
ss
dec
or
cmc
push
pop
mov
pop
movsb
repz
movb
pushf
dec
lock
in
pop
mov
pop
mov
or
sbb
and
or
testb
and
out
fcoml
add
mov
adc
rol
fmuls
mov
into
cmc
movsl
outsl
mov
lock
repnz
dec
daa
mov
xchg
jge
adc
push
clc
leave
mov
in
mov
sub
push
sub
xchg
sub
pop
addr16
loope
sarb
popa
cmp
jle
cmp
lret
lahf
lods
call
loop
add
pop
xchg
aad
and
movsb
inc
mov
mov
idivb
ffreep
mov
jbe
push
cmp
xchg
clc
dec
xor
std
in
push
xchg
je
inc
bound
das
stc
mov
jl
pop
sub
int
xchg
imulb
int3
or
lock
xor
push
psubsw
arpl
clc
cwtl
jg
ficoml
pusha
fld
push
add
out
push
xchg
fcmovbe
fisubs
mov
shlb
push
sahf
cmp
mov
jns
inc
sbb
xchg
jne
xchg
arpl
ljmp
xlat
sub
jae
out
imul
outsb
dec
pushf
mov
xchg
xlat
mov
jno
add
mov
cs
cmp
pop
fstpl
jmp
lahf
test
icebp
mov
xor
xchg
rclb
psrad
add
gs
popf
sub
mov
outsl
mov
sub
pusha
divl
enter
xor
mov
call
sbb
test
jp
jne
jns
mov
or
jb
xor
mov
mov
pop
pop
scas
add
jae
jne
xchg
roll
xchg
test
cmpsb
shlb
cmp
lret
ljmp
ds
or
int
or
jmp
add
adc
mov
aam
mov
push
xor
mov
add
inc
test
or
mov
std
hlt
sub
outsb
cmp
mov
pop
sbb
or
sub
jae
stos
push
inc
leave
hlt
aas
sti
cs
pop
aad
js
adcl
push
lea
loopne
lock
leave
mov
mov
stos
jnp
fistl
sbb
sbb
mov
pop
sub
cwtl
push
ljmp
mov
fnstenv
jno
dec
mov
es
out
mov
xchg
push
dec
or
out
jne
shlb
fiaddl
and
roll
les
push
test
pop
sbb
mov
into
js
inc
les
arpl
pop
test
xchg
push
test
insl
cmp
adc
imulb
and
dec
dec
xor
std
mov
movsl
dec
pop
lret
sbb
inc
pusha
xchg
and
int
movsl
dec
cmp
xchg
adc
cmp
addr16
into
or
mov
rcrl
mov
xor
lods
jnp
lret
mov
int
mov
pop
fwait
inc
push
push
and
in
stos
adc
and
jno
call
stos
lods
mov
movsbl
and
adc
inc
xlat
loop
jmp
sahf
inc
test
bound
stos
fildl
jmp
fs
ficomps
inc
divl
lahf
shl
mov
mov
inc
ret
pop
jmp
popf
out
les
dec
leave
jne
mov
dec
pop
scas
sub
clts
push
imul
sbb
xchg
shll
fs
add
lods
subl
inc
push
cmp
icebp
ds
cwtl
xor
and
ds
push
sub
inc
mov
xor
dec
rclb
dec
add
loopne
jge
mov
data16
mov
mov
xlat
rorl
mov
stc
xchg
ror
addl
jge
mov
pop
fs
cld
sbbl
pop
insl
cmp
pop
repnz
inc
push
mov
mov
call
push
xchg
sbb
mov
inc
sti
mov
imul
mov
lret
popa
les
loop
and
test
and
or
sub
jnp
dec
xor
leave
inc
xchg
pop
stos
inc
insl
jne
dec
call
shl
inc
push
sub
ss
out
ret
xchg
mov
jb
add
inc
pop
push
inc
mov
aas
imul
jecxz
mov
leave
test
in
lods
pop
xor
mov
xchg
int3
lahf
in
notb
push
inc
out
mov
and
dec
test
xlat
ja,pn
cmp
sbb
in
push
mov
adc
in
dec
xor
call
mov
jns
orb
leave
jo
pusha
sub
sub
nop
or
mov
push
cbtw
cmp
fidivl
pop
repz
movsl
out
int3
jle
xchg
cli
mov
pop
push
pop
inc
jle
jmp
notl
push
ret
add
mov
cmpsl
dec
mov
xchg
int3
pop
mov
icebp
inc
mov
roll
mov
test
mov
orl
idivl
out
add
push
imul
or
sub
inc
cs
repz
jge
sub
pop
fbstp
sbb
dec
jge
shll
inc
shl
xor
and
mov
inc
into
scas
inc
push
insb
jo
lods
repz
hlt
lret
sbb
cmpsb
or
dec
int
pop
lods
cli
inc
sub
xchg
mov
xchg
push
les
mov
sbb
pop
insb
push
xor
ja
mov
dec
repz
inc
ss
dec
push
cmp
sti
stos
xor
stc
pop
add
mov
mov
and
sahf
rorb
loope
push
bound
sub
rcrl
jg
rorb
jle
loop
movsb
mov
shl
inc
adc
mov
sbb
cli
mov
and
rol
xchg
mov
sub
fidivl
std
out
and
std
push
dec
add
pop
and
mov
jo
mov
mov
fsubl
mov
mov
ret
mov
cwtl
dec
inc
outsb
jbe
mov
in
inc
fsts
jne
xchg
xchg
xchg
push
pop
push
movsb
sub
jmp
xor
les
sub
and
ss
imul
lahf
int
in
xor
outsl
pop
adc
scas
push
int3
lret
lret
add
popa
push
jmp
mov
jne
push
ss
imul
leave
or
mov
scas
rcrb
xchg
out
add
xor
dec
mov
mov
pusha
lret
mov
push
cltd
scas
nop
imul
push
and
and
pop
andb
cmp
mov
xchg
adc
xchg
jnp
enter
lret
sub
cs
setg
inc
stc
dec
lods
jne
mov
mov
lret
outsl
and
adc
xchg
push
cmp
repnz
stos
pop
lock
and
push
sub
adc
xchg
call
scas
pop
bound
pop
sbb
insb
mov
xchg
pop
in
das
mov
jp
jo,pn
scas
sub
out
loop
ror
cmc
fs
jns
sbb
ljmp
out
push
or
jmp
fwait
dec
std
cmp
and
pop
sbb
scas
aas
rolb
mov
sub
jecxz
mov
cmpsb
or
cmp
sbb
xchg
push
icebp
push
pop
insl
mov
adc
pop
bound
orl
dec
in
scas
mov
inc
adc
rorl
in
mov
lock
mov
je
inc
ljmp
jle
shrb
lods
cmp
fldl
xchg
inc
repnz
jb
inc
jle
daa
lcall
mov
adc
ucomiss
lock
or
sub
and
add
inc
xchg
ficomps
lret
cmpsl
pop
and
mov
test
sbb
cmc
rolb
jno
cmp
and
call
inc
js
sahf
push
roll
add
sub
mov
pop
mov
ljmp
push
adc
fnstenv
sbb
xchg
mov
mov
push
popa
jp
aam
insl
jno
sbb
mov
popa
mov
clc
iret
fdiv
pop
sbb
sbb
pusha
std
sarl
mov
cmp
dec
je
xor
ss
loope
mov
iret
mov
mov
jmp
fwait
inc
mov
mov
pop
lret
int
sub
sub
inc
rcrb
lods
imul
aad
xchg
mov
repnz
lret
in
dec
icebp
test
push
inc
jae
jne
movsb
jecxz
add
stc
mov
sarb
pop
sub
test
in
or
ror
pop
scas
xor
push
xor
adc
cld
das
jge
das
sarb
in
call
stos
sahf
in
push
pop
js
cld
out
cltd
xchg
daa
cmp
mov
mov
add
movsb
iret
fwait
jae
mov
in
sbb
insb
insb
dec
cmp
sbb
sbb
sbb
scas
jbe
aam
loopne
pop
mov
add
out
aaa
cmc
pop
adcl
addb
sbb
stos
and
cmpsl
sbb
mov
mov
movsl
adc
popa
lret
or
jg
enter
or
add
andl
cmp
popa
sub
pop
push
in
js
mov
mov
mov
lret
mov
movsl
or
jne
add
negl
or
push
dec
xchg
and
xor
insb
subl
imul
sbb
fwait
test
mov
push
inc
gs
cmp
rorb
sbb
test
pop
jmp
add
dec
adc
dec
iret
iret
xchg
in
icebp
or
jle
sub
sub
inc
sub
mov
and
popa
lret
jns
xor
mov
jnp
fistps
pop
dec
les
mov
pop
pop
dec
mov
mov
loope
or
sub
cmp
sub
push
dec
dec
lods
add
mov
push
je
sbb
dec
test
mov
adc
lds
addr16
adc
push
test
dec
add
add
push
pop
push
faddp
in
sub
fdivp
leave
jnp
daa
sarl
push
mov
mov
movsb
sbb
lahf
adc
jl
mov
rolb
cmp
sbb
bound
xor
testb
scas
mov
adc
cmpsl
cmp
and
adc
cmp
pop
mov
mov
in
loopne
mov
push
xchg
pop
ret
mov
lock
pop
aam
mov
repnz
cmp
cmp
pop
cmp
xor
push
addl
or
scas
rcl
and
popa
add
movsb
or
lret
jns
and
sub
push
jnp
shll
or
leave
jb
push
mov
mov
xchg
xchg
mov
out
es
inc
sub
inc
loop
bound
test
fcomps
stos
std
scas
xor
stos
mov
adc
mov
jmp
pop
mov
or
movl
out
adc
xchg
jnp
inc
and
addr16
mov
mov
shrb
or
gs
or
jbe
or
fcoml
xor
xchg
data16
push
das
jecxz
add
add
sbb
int3
mov
cli
sbb
sarl
or
imul
aam
jp
mov
push
jl
mov
jo
lahf
popa
inc
and
mov
dec
ret
insl
loope
ds
xor
movb
subl
insb
stos
dec
push
fbstp
mov
or
mov
mov
dec
lret
movsb
cmp
fisubrs
lea
cmc
jmp
push
popa
pop
arpl
aas
sub
mov
mov
clc
cld
dec
adc
pop
or
mov
and
fwait
xchg
sub
jle
mov
imul
lods
dec
pop
lahf
shlb
cmp
jg
push
push
loopne
ftst
jmp
ret
lods
repz
xchg
mov
jmp
mov
ljmp
push
dec
xchg
cwtl
jl
lds
mov
mov
repz
mov
dec
loop
adc
les
fwait
jae
xchg
daa
incb
push
lret
mov
pop
aaa
push
jo
mov
and
ficompl
jmp
mov
xlat
negl
repnz
ljmp
in
stos
add
mov
scas
push
dec
jle
dec
sbb
test
inc
shll
addr16
repnz
mov
and
lea
in
sarl
cld
sub
movsl
or
addr16
pop
dec
movsl
and
inc
loope
imul
add
mov
fisttps
into
int3
xor
cmpsl
push
ds
add
leave
stos
push
and
mov
push
popf
ret
or
adc
mov
pop
insb
jp
xchg
pop
mov
and
push
push
imul
outsb
sti
popf
frstor
insb
bound
ret
sbb
and
fdivrl
sidtl
jae
xchg
stos
adc
add
idivb
mov
xlat
insl
cmp
not
or
xchg
out
lret
dec
jo
or
test
mov
jecxz
and
and
jle
mov
or
lret
or
imul
mov
sub
gs
fcoms
stc
sbb
aaa
mov
dec
int
sbb
xchg
fdivrl
push
pop
rcrb
pop
mov
cmpsl
ja
cmp
and
dec
mov
lahf
mov
jns
jae
call
loope
mov
in
sub
pop
movsb
mov
nop
int3
lods
cmp
jae
cwtl
aam
or
inc
sub
xor
ret
fcmove
gs
mov
and
in
jge
dec
fldenv
loop
shlb
enter
lahf
adc
adc
cmp
jno
ret
rcr
adc
mov
push
pop
jge
xchg
sarb
movsb
imul
mov
pop
mov
mov
inc
out
movsl
push
adc
xor
add
and
sbb
lcall
mov
push
ret
cwtl
jb
dec
das
daa
ret
xchg
hlt
fmuls
setle
sbb
pop
popf
ds
sahf
mov
jne
adc
mov
and
lds
adc
jns
shl
icebp
stos
dec
lods
inc
pop
cli
ljmp
push
xchg
lods
arpl
je
adc
sub
fcomps
ljmp
ret
mov
stc
or
pop
add
gs
push
mov
inc
sub
xchg
in
jp
and
xorl
notb
push
push
dec
pop
or
xchg
mov
scas
stos
pop
inc
das
testl
push
outsb
loope
dec
xchg
add
inc
daa
inc
cmpsb
jp
sbb
loop
iret
cltd
sub
adc
xchg
add
rcll
pop
jg
inc
lods
pop
dec
jns
xchg
pop
in
hlt
mov
mov
idiv
cmp
jo
cmp
les
mov
cwtl
mov
inc
add
js
les
cmpsb
sub
hlt
xlat
out
push
dec
pop
stc
bnd
adc
shrl
mov
inc
mov
out
xchg
daa
icebp
mov
dec
dec
orb
in
shlb
shr
nop
shrl
add
lret
rolb
push
lods
stos
push
sbb
daa
dec
popa
test
push
out
xor
das
sbbb
outsb
cmpsb
mov
mov
lods
shrb
xchg
adc
mov
fidivl
in
out
push
pop
int3
inc
fs
jne
aas
and
sub
shl
js
mov
lds
aas
ss
fwait
aas
dec
push
mov
or
and
cmp
loopne
movl
and
mov
xchg
xor
sarl
jb
sti
int3
test
outsb
jmp
imul
cmp
sub
dec
ljmp
hlt
das
fidivrs
jg
add
dec
sbb
inc
bound
or
les
push
rclb
pop
out
repnz
pop
dec
cmpsb
cmpsb
std
flds
jl
dec
test
iret
imul
xor
pop
xchg
inc
fxch
jo
bnd
push
nop
cli
loope
rclb
adc
adc
pop
data16
add
push
xor
imul
fidivs
rcrl
inc
xchg
arpl
aam
jo
jmp
jge
pop
out
add
jl
sahf
push
sbb
outsb
adc
xor
js
aas
xchg
imul
lcall
xchg
xlat
mov
fimull
notb
test
push
mov
nop
fidivrl
push
js
mov
sahf
sbb
xchg
mov
addr16
leave
pop
pushl
mov
jb
imul
les
nop
xorb
and
fsts
outsl
xchg
add
fidivrl
loopne
mov
push
xlat
or
loopne
xor
inc
inc
mov
cmp
addb
fs
insl
scas
sti
xchg
adc
push
adc
pop
stos
dec
cmp
dec
add
add
or
xor
xorl
dec
jg
sarl
pop
sub
mov
outsb
sbb
outsb
xchg
in
out
std
in
push
sub
jae
jmp
push
lods
arpl
cmp
lods
add
sbb
scas
popf
mov
test
es
mov
jg
jnp
dec
lods
xor
imul
xchg
adc
sbb
add
pop
mov
out
mov
scas
pop
or
add
lea
add
pop
add
ds
mov
push
xchg
dec
xchg
shlb
ret
pop
lret
mov
nop
pop
cld
adc
pop
lock
icebp
mov
sub
popf
out
pop
jp
push
ja,pn
out
inc
xchg
and
push
aam
or
mov
aas
loop
sbb
inc
fucom
jb
adcl
push
sbb
cld
mov
cli
cmp
rcll
sub
es
sub
int3
into
ja
mov
jecxz
mov
aad
cmpsl
sbb
movsb
int
jb
mov
daa
dec
in
out
sti
hlt
pop
stos
or
cs
add
xchg
or
loop
jecxz
cld
cmpl
cs
mov
mov
inc
dec
mov
push
xchg
jns
fstpl
nop
mov
cmp
scas
pop
xchg
dec
loope
rolb
dec
jmp
call
mov
hlt
je
cs
add
dec
pop
shll
inc
mov
sbb
mov
sub
sub
mov
stc
out
fdivr
out
dec
push
add
cwtl
jp
popa
std
inc
jnp
testb
into
sub
adc
add
mov
push
ja
imul
xor
je
add
int
jb
outsl
jne
sbbl
cli
lahf
and
jmp
add
lods
aas
xchg
lahf
in
add
mov
loopne
add
cli
jmp
lods
and
adc
push
sbb
ljmp
pop
add
loope
xchg
push
nop
das
popl
or
adc
rol
scas
ret
or
cmc
jae
pop
incb
xchg
sub
xchg
inc
lahf
pop
add
popf
lock
mov
aas
ljmp
add
addb
shr
ret
adc
movsb
jb
in
jo
add
sbbb
mov
enter
xchg
cmpsb
stos
pusha
clc
xchg
xor
and
cmp
call
stos
cwtl
pop
ret
xchg
mov
lds
aaa
jbe
cmpsb
clc
and
or
test
push
fists
ja
or
mov
and
imul
inc
daa
movsl
int3
push
inc
sub
pop
pop
jmp
mov
jl
ds
sub
mov
bound
imul
add
stos
call
mov
mov
imul
sub
stc
mov
ja
shr
add
add
test
pop
adc
ss
mov
jne
or
mov
adc
xchg
dec
mov
test
sbb
mul
cmpsl
notb
pop
add
stos
push
ds
popa
sbb
cmpsl
sub
iret
fisubl
push
mov
jge
shr
sbb
cltd
cltd
jne
call
rclb
insb
mov
clc
pusha
dec
pop
lds
push
mov
sarl
xchg
or
jle
inc
imul
jge
sahf
sbb
add
stos
jecxz
inc
mov
push
addr16
jge
roll
bound
xchg
xor
mov
gs
popa
cmp
out
roll
arpl
cmp
xchg
inc
in
xor
subl
sahf
add
push
cmp
shll
lods
mov
xor
ljmp
sbb
xor
push
insb
or
jae
and
mov
mov
sub
mov
daa
push
lods
xor
std
rol
mull
icebp
xor
inc
cs
cmp
mov
call
aam
mov
jg
xchg
mov
dec
cmpsb
imul
cmp
insb
imul
add
loope
and
push
xchg
pop
or
mov
xor
cmp
popa
push
pop
iret
pusha
dec
aad
lods
inc
jo
out
mov
mov
inc
sub
pop
sub
sahf
outsb
push
sbb
mov
testl
popf
mov
push
inc
or
pop
std
sub
lahf
popa
inc
pop
fidivrs
icebp
aam
mov
xchg
gs
cmc
mov
sbb
imul
pusha
shrb
sbb
aad
movsb
add
mov
push
fdecstp
lock
mov
xchg
jbe
loopne
loopne
cmpsl
and
mov
jmp
and
cmp
jae
aam
lcall
jge
inc
mov
jnp
xor
mov
loopne
cmp
dec
icebp
pushf
cli
orb
icebp
lret
nop
lods
sub
aam
sahf
add
mov
frstor
sbb
int3
fs
add
fnstsw
fstl
filds
imul
loopne
dec
hlt
aad
ficompl
mov
xlat
and
pop
iret
mov
sbb
mov
adc
loopne
lds
dec
out
adc
sbb
stos
dec
mov
data16
repnz
shrb
inc
incl
xchg
adc
mov
fnstcw
cmp
mov
xchg
mov
sbb
adc
xor
cmc
mov
push
sbb
popa
and
popf
leave
aad
add
or
xchg
aad
iret
xor
lods
outsb
mov
je
xchg
cmp
push
jnp
push
lods
jnp
mov
lods
pop
nop
pop
mov
dec
fdivs
mov
hlt
xor
dec
fsubrs
hlt
mov
or
sub
stos
jge
imul
or
mov
dec
into
mov
lcall
out
and
ret
cmp
aaa
out
mov
popl
cmp
inc
stos
ljmp
loopne
xchg
sub
mov
dec
leave
xlat
test
adc
lret
lods
loope
out
int3
push
cmpsb
xchg
jns
aad
lods
fcmovnbe
add
cmp
cmp
loopne
cmpsb
cld
and
add
pop
and
popf
push
nop
mov
addr16
push
rorl
mov
stos
sti
int3
das
jmp
enter
xchg
pop
and
or
lahf
sub
imul
cmp
push
call
xor
mov
outsb
jle
icebp
dec
and
lret
sbb
aas
or
fcomip
xor
pop
mov
dec
or
clc
mov
cmpsl
ret
cmp
call
scas
or
inc
push
or
in
pop
dec
outsl
pop
fmull
jae
movsl
aas
aam
mov
jnp
mov
outsl
mov
mov
cmp
in
repz
outsb
push
repz
cmp
add
adc
ret
fwait
add
aad
repz
mov
pop
imul
or
jle
mov
push
movsl
mov
xor
repnz
add
jae
outsb
fdivs
in
mov
ljmp
int
fwait
dec
add
pop
mov
outsb
xor
or
int
stos
xor
loopne
sar
jo
inc
add
mov
mov
sub
add
mov
or
adc
push
imul
push
nop
lret
or
mov
mov
int
shr
pop
xchg
inc
pop
mov
jmp
dec
dec
jb
out
xor
lods
cltd
rcrb
add
gs
aaa
mov
xchg
inc
dec
cmp
and
mov
loop
sahf
scas
enter
jne
jge
cli
ficoms
in
mov
cmp
inc
lea
jno
push
sarl
inc
and
xor
popf
sub
lea
and
cmp
pop
sbb
pop
stos
jbe
enter
dec
adc
into
outsb
call
aaa
test
inc
clc
sbb
jno
sbb
inc
push
mov
insb
out
lcall
sbb
mov
lret
xchg
ret
add
orl
fwait
cmpsb
lcall
fiaddl
repz
sub
jb
cmp
out
push
repnz
cmpsl
gs
lret
es
pop
cmc
aaa
mov
sub
mov
pop
les
or
pop
fildl
lods
jae
push
jp
imul
sbb
clc
and
push
fdivp
dec
dec
xlat
sub
push
xor
dec
xchg
pop
negb
sbb
jmp
push
mov
out
lret
push
mov
fsubl
aad
lret
mov
call
jns
jge
js
or
cmp
adc
add
jge
lods
xchg
iret
stos
or
ret
ljmp
jb
aam
loope
hlt
icebp
out
clc
mov
test
sbb
inc
dec
mov
cmc
les
add
fsub
add
test
mov
repz
adc
add
or
loope
xor
ror
js
js
push
lods
xlat
xchg
sti
or
mov
pop
push
rorb
popa
call
shl
int3
push
cli
stc
insb
divb
loop
inc
mov
fiaddl
lcall
sbb
or
test
xchg
cli
xchg
fsubl
mov
into
std
iret
in
cld
adcl
pop
in
adc
les
or
das
sahf
pop
sub
out
push
sbb
pop
jle
push
and
dec
mov
adc
daa
inc
ret
pop
mov
xchg
push
push
mov
cwtl
or
xchg
icebp
push
stc
jae
jb,pn
cmp
or
cmp
adc
lock
loopne
jae
ret
inc
out
insb
lds
insb
imul
dec
in
mov
push
xor
jle
push
adc
in
ss
cli
mov
shl
pop
fildl
in
xchg
push
addl
sbb
hlt
pop
cld
popf
sub
or
xor
fwait
add
lods
dec
movsb
sahf
imul
adc
mov
addb
xor
mov
aam
imul
les
xchg
stos
xor
sbb
sbb
hlt
pop
out
cmpsb
xchg
sub
jl
dec
xor
push
dec
mov
pop
nop
hlt
shl
mov
push
cwtl
test
xchg
std
jecxz
push
div
out
fistpll
jns
mov
fstl
cmp
mov
xchg
cmp
les
pop
addr16
or
pushf
and
fildl
dec
mov
in
pop
aas
fs
sahf
pop
mov
fmul
mov
jl
xchg
adc
je
stos
fisubrs
daa
adc
push
cmpsl
adc
xor
sahf
out
mov
push
or
adc
push
insl
push
or
jle
and
shrl
fisubrl
data16
push
cwtl
dec
ja
in
in
mov
mov
mov
ss
push
dec
popf
in
cmp
adc
xlat
in
xchg
pause
shl
xor
test
push
pusha
add
pop
inc
xor
cmp
js
je
cmp
push
fmuls
outsl
jmp
xor
sbb
cmpsl
adc
std
popf
mov
or
inc
push
cmp
cmpsl
popa
mov
cmpsl
pop
jmp
inc
popf
sarl
call
fcoms
mov
dec
gs
push
mov
iret
xor
xor
ret
jbe
and
add
mov
into
push
in
jae
pop
mov
inc
add
leave
sbb
fstl
mov
hlt
sar
cmp
xlat
rcl
xor
cmpsb
pop
push
jp
std
sbb
mov
adc
mov
cmpb
sarb
js
cmc
std
sub
push
pop
arpl
sub
mov
das
ret
pop
decl
push
pusha
push
sbb
aad
cs
nop
xor
cmpsb
in
in
dec
sbb
stos
es
clc
rcl
pop
mov
or
dec
shlb
jbe
int
test
movsl
movsb
loop
ds
jae
jne
mov
adc
decb
mov
add
dec
xchg
xorl
into
imul
test
pop
or
adc
jne
and
jecxz
incl
and
jne
xlat
movsl
cltd
std
aas
and
cmp
dec
or
dec
jb
cwtl
sub
and
sbb
adc
mov
pop
and
and
mov
lret
lret
inc
stos
jbe
inc
push
cwtl
enter
mov
js
push
sbb
icebp
or
in
cmpsb
jmp
and
push
mov
ja
cmpsb
test
mov
mov
mov
inc
std
fisubrs
repnz
aam
into
fistpl
sub
aad
mov
sbb
pause
int3
mov
jne
loop
icebp
test
mov
out
ja
xchg
xor
xchg
cwtl
imul
shlb
fidivrl
push
sbb
jbe
push
dec
sub
mov
bound
mov
mov
dec
ficoml
jno
push
rol
mov
out
or
cmp
sub
stc
add
pop
dec
inc
in
inc
dec
pop
push
stos
push
test
fs
fsubrs
inc
mulb
and
rolb
xlat
sub
cmp
out
jl
push
dec
xor
fcomip
call
repz
or
lret
add
inc
inc
pop
mov
mov
cmpsl
push
dec
xor
cmp
leave
xchg
lea
or
lods
cmp
mov
mov
mov
jl
rcrl
mov
pushf
outsb
pop
jb
rcl
fst
bound
pop
pop
ud2
clc
in
popf
mov
outsb
aaa
inc
lods
cmc
out
push
push
loope
aad
incl
stc
push
aaa
xchg
sbb
in
insl
outsl
popa
add
ljmp
jbe
push
mov
jp
and
add
push
xchg
jl
xor
js
fbld
mov
ds
dec
repz
mov
mov
mov
test
dec
jnp
xor
inc
xor
jl
test
pushaw
mov
mov
arpl
dec
fidivl
mov
push
adc
shlb
and
inc
dec
cld
dec
pop
mov
ja
faddl
jge
pop
call
addr16
cmp
lret
adc
es
insb
mulb
lea
ret
jl
cld
jmp
popa
mov
xorl
jb
aaa
pushf
imul
mov
xor
xor
add
outsl
jg
or
jge
xchg
jge
jp
cli
pop
jno
push
jbe
sti
in
mov
mov
pop
mov
jge
pop
nop
mov
imul
aaa
jnp
xor
inc
sti
cwtl
lret
lods
clc
add
psubw
sub
xchg
sbb
fiaddl
add
nop
or
adc
mov
sub
pushl
jne
cmp
outsl
cmp
mov
gs
shll
call
lods
xchg
fwait
adc
xor
or
push
sar
xchg
cmpsb
int3
pop
outsl
movsl
xchg
or
xorb
popf
xchg
adc
push
cmpsl
lock
mov
jae
sbb
aas
test
pop
push
adc
addr16
ret
leave
adc
pop
int
cmpsb
mov
push
mov
sub
scas
push
mull
out
repnz
out
ljmp
and
add
sub
std
sahf
mov
cmpsl
jmp
mov
addr16
sbb
inc
jbe
mov
push
xchg
mov
xchg
lods
cmp
fnstcw
sbb
adc
mov
jo
xchg
adc
insl
outsb
xor
pop
aad
adc
adc
mov
mov
add
scas
mov
dec
std
xchg
inc
lcall
sbb
mov
stc
mov
in
lea
xchg
aam
dec
xchg
jl
in
inc
inc
out
push
cmpsl
push
pushl
jle
lcall
mov
xor
mov
lock
insl
lret
jl
stc
jp
or
or
fldl
mov
filds
mov
xor
in
ret
fucomp
cwtl
or
dec
push
aam
aas
testb
mov
and
add
xchg
in
mov
jmp
xchg
clc
sub
sbb
stos
test
pop
aam
lods
sbb
push
bound
add
fwait
je
xchg
mov
add
stos
in
pushf
lods
sbb
and
mov
adc
cmp
test
stc
sub
cmp
fidivrl
pop
push
sti
or
pop
ret
cltd
nop
mov
fidivrl
jmp
mov
cmc
adc
add
aaa
cmp
sbb
stc
mov
test
in
cmpsl
xchg
xor
pop
cmp
jb
inc
xlat
mov
pop
xlat
test
mov
sbb
dec
or
ljmp
sub
and
imul
sub
insb
cmp
enter
int3
cmpsb
push
jmp
mov
leave
std
cmp
js
out
and
cltd
cmp
push
imul
adcb
push
mov
fistpll
cmp
adc
sub
jp
or
cmp
test
xor
jbe
jns
jecxz
jo
in
cmc
xor
movsb
enter
data16
outsl
mov
lds
xchg
mov
and
adc
insb
repz
sub
dec
add
add
rcl
aad
repz
xlat
xchg
fbstp
lds
mov
and
xchg
sbb
and
dec
xchg
into
mov
xor
add
rcr
mov
hlt
leave
adc
andb
jg
add
fs
addr16
jge
pop
rclb
cli
lds
stos
jne
push
or
shlb
push
add
sbb
dec
cmp
cmp
cmp
stos
jmp
mov
xchg
aad
stc
in
test
popf
sub
rorb
push
add
in
and
loope
aad
stos
and
imul
ljmp
mov
ljmp
lods
test
sbb
lahf
sbb
cmp
mov
xchg
jne
test
dec
mov
cmp
mov
adc
jns
xchg
dec
xor
cs
dec
je
mov
in
negb
into
add
sub
jg
stos
pop
test
cmpsb
mov
xchg
mov
lods
mov
cld
pop
lods
inc
inc
aad
and
fwait
test
inc
cld
int3
stc
jmp
inc
and
loope
cmp
imul
in
mov
and
lret
xchg
jg
lcall
push
push
imul
fbstp
andl
xlat
in
mov
cmpsl
mov
pushf
jmp
pop
js
pop
lea
aam
cltd
int
cltd
jl
xchg
jne
stc
push
in
fists
pushf
xor
shrb
popa
aam
adc
sub
movsl
in
popf
inc
pop
aam
sahf
cmp
xchg
cmp
xchg
xchg
and
loop
push
fdivs
sbb
and
mov
xor
ret
pop
mov
hlt
cwtl
add
addb
cmc
inc
jp
and
and
divb
xor
mov
lods
pop
cmp
out
xor
jl
add
add
dec
add
leave
lds
push
add
test
and
mov
cmp
jmp
sbb
mov
push
jmp
cmpsb
push
int
add
pop
or
aaa
mov
int3
xor
adc
xchg
xor
inc
negl
ds
fidivrl
push
popa
jae
xor
dec
pop
arpl
pushf
cs
cmp
idivl
stos
pop
xor
roll
arpl
mov
mov
testl
pop
dec
dec
fs
jne
repz
pop
jae
into
jno
mov
mov
mov
and
cwtl
test
rcll
insl
push
or
push
mov
aad
repz
push
sub
jno
es
aad
dec
icebp
jae
push
jmp
pusha
les
sub
idivl
out
sub
imul
cld
lahf
lods
mov
xchg
fisttps
push
and
in
rorl
movsb
movb
mov
push
fstpt
ror
dec
sbb
dec
jl
dec
daa
dec
push
pushf
push
jbe
dec
pop
aam
jne
xor
inc
jmp
mov
and
cmp
pop
xor
and
jns
outsl
jg
mov
pop
sbb
and
hlt
popf
pusha
sbb
push
mov
jg
push
rcl
ret
sbb
xchg
xor
loopne
enter
xchg
cwtl
xor
dec
inc
rcrl
aam
gs
mov
int3
mov
test
mov
ret
fstpl
movsb
or
data16
jp
in
dec
sbb
movsl
add
bound
adcl
sbb
stos
loope
aaa
mov
mov
icebp
dec
idiv
or
les
mov
xlat
sub
add
jo
loop
xchg
jb
add
or
mov
add
pop
jbe
cld
addr16
push
xor
repz
rcrb
mov
xchg
adc
inc
pop
pop
cmp
push
aam
inc
faddp
jbe
in
js
inc
or
andb
cmc
in
sbb
jae
add
xchg
mov
push
repz
xchg
or
es
in
adc
lahf
cmpb
dec
inc
add
fmuls
inc
or
ss
push
test
mov
jnp
int3
jge
dec
in
std
in
lds
lea
or
in
int
push
rorl
mov
sbb
andb
aaa
mov
push
add
cmp
mov
mov
bound
xor
mov
push
xor
pop
sub
shl
pop
or
push
xchg
push
adc
sbb
stos
lret
lock
dec
and
dec
les
loopne
clc
dec
aam
mov
jb
inc
sbbb
adc
mov
mov
inc
push
xor
mov
icebp
cmp
out
rolb
inc
sbbb
xchg
xor
sarb
call
inc
notb
rorl
xor
orb
clc
xchg
adc
mov
pop
pop
lock
add
clc
push
dec
cmp
stc
in
loopne
mov
cmp
lock
adc
pop
call
jle
aam
loope
mov
out
icebp
mov
or
out
gs
xor
lret
pop
push
in
xlat
arpl
xor
repz
aas
xchg
fcomip
inc
negb
mov
xor
test
lods
fwait
pop
popa
xchg
nop
dec
sbb
cmp
jnp
arpl
xchg
mov
neg
xlat
shlb
and
and
lods
loop
push
inc
nop
aad
ja
shrb
cltd
cmp
fcoml
lcall
pop
and
pop
mov
dec
int3
outsl
push
xchg
pop
dec
shl
inc
call
adc
pop
out
xor
fisttps
inc
jnp
fldenv
jg
xchg
loope
push
das
pop
test
dec
dec
movsb
aas
and
ljmp
mov
ret
mov
xor
ficoms
fildl
in
add
mov
xchg
mov
roll
orl
jecxz
daa
cmp
sbb
dec
mov
lock
mov
dec
add
lret
fnstsw
faddl
lret
sub
adc
pop
lds
mov
push
jecxz
mov
adc
shl
lret
xor
pop
aas
sub
xchg
push
inc
jl
inc
push
and
adc
xlat
adcl
or
xchg
xlat
and
rol
ret
rcrl
in
out
fadd
mov
cltd
xor
xor
add
fcomip
push
pop
dec
xor
ja
clc
inc
rcrl
sarb
sqrtps
sbb
push
sahf
repnz
sub
stos
es
aad
jg
outsl
mov
and
iret
bound
lret
pop
xchg
aad
dec
xchg
leave
jg
js
subl
arpl
push
jno
dec
test
dec
adc
push
pop
aas
fidivrs
or
dec
in
ss
mov
test
jmp
add
imul
ja
push
cmpl
mov
fwait
sub
cltd
in
in
das
aaa
addr16
pop
xor
fsubl
fwait
mov
js
sbb
push
mov
mov
lea
add
cwtl
sub
jl
push
test
repnz
in
mov
mov
and
push
in
int
mov
jns
pop
negl
jo
pop
sub
inc
jecxz
jae
cmp
sub
and
sbb
ret
and
ja
adc
mov
mov
and
inc
push
mov
push
je
loope
or
jb
lret
xchg
int3
add
mov
pusha
pop
mov
stos
pop
pmullw
cmpsb
stos
and
dec
scas
pop
dec
in
jb
aas
insb
mov
add
in
lsl
out
das
xor
imul
in
lcall
bts
cld
filds
xchg
mov
dec
fisubrs
lcall
mov
dec
pop
dec
sahf
xchg
mov
cld
out
and
bound
je
xor
pop
fists
movsb
roll
mov
xlat
in
adc
clc
jg
add
add
xlat
push
cli
and
in
fdiv
sub
jo
and
mov
pusha
mov
pushf
mov
out
cmpsl
mov
jmp
pop
cmp
loopne
jns
std
lret
inc
add
cltd
sbb
jp
pop
pop
aam
dec
ret
lods
mov
jo
outsl
dec
fldl
in
sbb
mov
je
fisubrl
mov
mov
hlt
add
repnz
jne
sbb
out
imul
push
mov
ficoml
add
mov
jge
int
subl
xchg
xchg
pop
adc
pusha
mov
ret
inc
dec
out
inc
in
rcrl
xchg
xor
or
out
or
mov
stc
mov
test
cwtl
xchg
cmp
add
je
test
pop
cmpsb
mov
ljmp
enter
xor
enter
xor
xor
mov
add
ja
push
or
cmp
mov
push
and
sbb
push
push
into
and
jmp
scas
rclb
std
dec
inc
inc
jmp
scas
dec
hlt
ds
pop
pop
mov
sub
loope
xchg
pop
mov
lds
fldl
push
jae
mov
or
pop
add
mov
pop
cli
cmp
ja
in
pop
pop
add
ret
or
cmpb
or
xchg
subb
pop
xchg
les
dec
lea
fsubrs
or
je
add
repz
xchg
xor
lods
mov
push
int
push
mov
adc
sahf
mov
lahf
sarb
jns
push
hlt
add
add
jge
test
in
mov
add
and
mov
loop
push
or
mov
sbbb
mov
adc
call
xchg
and
push
mov
inc
inc
leave
adc
add
dec
xchg
mov
ljmp
mov
out
mov
dec
clc
outsl
and
outsb
addb
sub
inc
lahf
je
cmpsb
aaa
jnp
imul
pop
jg
imul
dec
cld
lods
add
mov
inc
jb
mov
fstl
gs
in
loope
push
mov
jae
ss
cli
fidivrs
mov
out
push
adc
addr16
sbb
psubw
fcmovnbe
rolb
cmp
test
lds
rcrb
repz
adc
inc
hlt
ret
and
mov
icebp
mov
daa
test
and
jp
xchg
test
mov
ficomps
orl
stos
cmp
sub
fwait
lcall
jb
clc
imul
lret
pop
or
and
sub
into
lds
cltd
out
adc
call
sub
push
sbb
dec
stos
mov
cmc
mull
inc
scas
add
adc
repnz
adc
xchg
data16
sbb
pop
push
cmp
inc
pop
addb
inc
das
neg
sub
repz
mov
je
pushl
mov
test
cld
nop
in
decl
jne
aam
pushf
push
fs
or
cmp
cmpsb
cmp
lods
xchg
in
fmuls
outsl
jns
sub
xchg
gs
and
jns
aam
adc
pop
and
rcll
pop
insl
nop
fstpt
mov
adc
push
fisubs
pop
push
scas
orb
cli
stos
mov
jecxz
addl
mov
outsb
xor
cmpsl
cmp
mov
fcmovnb
dec
adc
shlb
mov
repz
hlt
sbbl
sahf
sub
push
mov
repz
push
lea
pop
cmp
xchg
dec
sbb
sbb
ret
pop
push
xchg
pop
jmp
jbe
stos
aad
imull
adc
jns
ljmp
fs
mov
cmpsb
and
fadds
pop
das
jnp
mov
cmp
sub
inc
push
push
adc
jnp
mov
hlt
arpl
imulb
inc
scas
pop
cmpsl
cld
fdivp
xchg
adc
movsl
in
insl
push
stos
add
loop
or
adc
fxch
rcl
js
fstps
cli
dec
je
imul
fisttps
inc
rorl
xor
xlat
mov
fst
inc
test
and
lea
decl
xor
xlat
xor
divb
push
sbb
mov
push
and
sbb
das
inc
movsl
ds
repnz
push
mov
rcrl
mov
push
mov
mov
sub
iret
inc
mov
jg
fs
insb
sbb
stos
xchg
sahf
aaa
repnz
mov
hlt
sub
in
mov
mov
cmpsl
push
stc
movsl
pop
pop
pop
sahf
fimull
sbb
ret
jbe
test
sub
mov
jnp
xchg
repz
mov
push
popa
mov
inc
test
aam
mov
mov
sub
call
pop
sub
jecxz
mov
mov
push
or
or
push
hlt
repz
sub
mov
rcr
sub
mov
pop
clc
fcompl
inc
cmp
push
mov
data16
sub
dec
stos
dec
shll
fisttpll
sbb
mov
mov
xchg
mov
std
ss
and
push
lods
mov
dec
lods
sub
aad
add
negb
movsb
outsl
cmp
pop
xchg
jg
dec
lock
insl
sbb
mov
int3
jae
rcll
pop
pop
je
and
mov
pop
repnz
jns
mov
jp
sbb
pop
inc
add
push
sub
and
or
cs
ss
rorl
cmp
in
push
and
flds
or
lret
xchg
jb
popf
mov
xor
fdiv
das
mov
pop
daa
pop
out
jecxz
insb
fsts
mov
lock
loopne
mov
add
aas
mov
stos
arpl
sbbl
test
jmp
sub
sub
loope
into
scas
daa
xchg
cmp
pop
das
pop
fwait
mov
fwait
inc
int
cli
cmp
pop
popa
je
dec
mov
mov
das
test
xor
jmp
or
lock
inc
xor
adc
in
push
mov
repz
inc
dec
jle
dec
xchg
dec
mov
dec
stos
loope
and
jmp
mov
push
xchg
sub
aad
and
ds
cmp
daa
movsl
fs
test
xor
xlat
sbb
stc
pop
jmp
cmpsb
lock
sti
and
xchg
or
stos
ja
out
adc
lods
sub
dec
scas
cli
insb
mov
pop
out
test
mov
and
xchg
pop
add
lea
out
xchg
xchg
lret
lods
popf
movsb
sarb
cmpsb
loope
loop
xlat
and
add
lea
mov
dec
xchg
outsb
push
stos
insb
movsl
mov
adc
aas
cmc
mov
xacquire
in
lods
or
js
bound
xor
xor
sbbl
add
push
pop
sub
mov
aam
jae
lods
or
aam
mov
stos
xchg
mov
icebp
pop
or
xor
imul
push
cmp
inc
sub
push
cmp
and
jp
mov
inc
mov
xchg
in
jge
negl
mov
add
das
repz
jecxz
cltd
inc
xchg
negl
jmp
lods
lahf
out
lcall
ret
fadd
std
jae
fldt
inc
mov
test
xchg
inc
sbb
pop
movsl
dec
cmc
dec
jecxz
inc
sbb
testl
out
dec
stos
shr
imul
loop
fsubp
adc
imul
mov
sub
cmc
push
add
lds
lcall
movsl
push
add
adc
pop
sub
jb
sbb
mov
sub
loopne
pop
loop
dec
into
add
push
mov
push
inc
xchg
jl
cld
stos
jl
inc
xor
or
aaa
mov
jae
sub
dec
ficoms
fmuls
and
imul
xlat
pop
neg
inc
mov
ret
into
jnp
and
adc
sbb
ret
xchg
jmp
sbb
and
in
enter
fxch
cmp
xor
call
sub
mov
xchg
sub
jb
mov
notl
shlb
sub
xchg
test
cmp
adc
or
decl
lret
dec
jge
push
pop
insl
sbb
dec
addb
into
jnp
out
pop
push
and
fimuls
sti
into
dec
push
push
sahf
mov
or
out
ret
in
push
push
mov
incb
push
les
cli
loop
das
ret
mov
jmp
jno
mov
sahf
xor
in
rcrb
pop
jbe
pop
ret
lret
push
icebp
jb
sub
and
out
xlat
push
in
push
push
push
dec
imul
js
adc
xor
aaa
add
cwtl
mov
xchg
mov
fidivl
lret
xor
dec
mov
dec
les
ret
push
mov
in
inc
sub
adc
mov
push
das
mov
negb
addr16
imul
mov
cmpb
pop
jle
jmp
insl
es
out
mov
mov
in
dec
ret
cltd
sbbb
ja
or
jecxz
jns
dec
pop
adc
aam
jmp
dec
or
jns
arpl
adc
and
xchg
out
fimuls
loopne
adc
cmp
mov
js
xor
pop
adc
or
or
xchg
ds
sub
insb
cmpsl
push
mov
push
dec
in
lods
jp
sarl
push
aad
push
mov
push
pop
aaa
or
daa
mov
pop
dec
sub
cmp
lret
push
fnstenv
jp
cmpsl
divl
mov
sub
xor
or
mov
mov
repnz
test
sub
cs
ret
or
jle
adc
xchg
inc
fcoms
cld
dec
stos
ljmp
rolb
cld
add
adc
dec
cmp
add
ret
fmull
outsl
sub
push
mov
pop
mov
out
loope
xor
xchg
jecxz
jle
test
mov
js
or
jnp
jl
adc
and
inc
lea
lcall
sub
lock
xor
in
jb
mov
pop
add
roll
int3
jnp
lds
lcall
or
into
mov
cli
jno
rol
out
test
pop
imul
loope
mov
mov
push
lods
pushf
lcall
inc
lock
aad
cs
shrl
int
mov
xor
pusha
sbb
int
sbb
mov
sbb
mov
push
xchg
lret
flds
hlt
add
sbb
cmp
iret
in
or
mov
mov
jnp
clc
mov
adc
jge
jo
dec
or
das
sbb
dec
loopne
cli
ret
scas
not
inc
arpl
fs
push
inc
aas
inc
mov
pop
push
or
hlt
xor
mov
mov
mov
cld
inc
mov
lcall
adc
repz
or
enter
gs
adc
test
mov
adcb
dec
and
shr
cs
add
shl
xchg
and
rcrl
cmpl
repnz
orl
xor
dec
inc
fwait
cmp
sub
sbb
loop
fnstsw
inc
lods
inc
push
adc
or
je
lret
stos
pop
shll
add
adc
lahf
data16
repnz
lds
or
xchg
shrb
js
bnd
fimuls
jecxz
loop
add
jp
push
pop
jnp
xchg
jmp
push
push
dec
dec
xchg
test
in
sbb
js
jmp
mov
adc
mov
icebp
mov
mov
pushf
sub
or
pusha
jns
and
popa
leave
and
repnz
rclb
in
mov
jb
dec
ljmp
pop
js
or
pop
mov
pop
fdivs
mov
ja
mov
fwait
or
mov
pusha
and
sbb
inc
out
test
out
xchg
jns
jmp
xchg
xor
push
adc
add
hlt
xor
jnp
cmc
adc
inc
xor
dec
fld
sub
push
add
xor
jp
cmc
xor
cmp
aas
and
scas
push
stos
dec
test
sub
jne
jge
cmp
cmp
mov
mov
lods
sbb
das
aas
out
push
test
ret
pop
xchg
scas
push
mov
mov
mov
pop
push
cs
jle
lret
ds
das
dec
or
pop
setl
fsubp
sti
mov
mov
add
jmp
icebp
cltd
xor
faddp
scas
adc
sbb
add
int
fmull
popa
leave
std
fsub
jns
sbb
sub
or
insl
fs
in
mov
dec
ljmp
jbe
and
sub
add
std
xchg
cmp
lods
hlt
mov
data16
lahf
int
adc
shl
mov
stos
push
test
pop
sub
pop
std
push
add
pop
mov
pop
sahf
hlt
pop
sub
inc
loope
or
adc
loope
adc
sbb
stos
jmp
adc
push
das
push
enter
sub
rcrl
test
test
sti
pusha
mov
mov
inc
xchg
sbb
xchg
mov
or
cmp
xchg
xchg
mov
ror
mov
dec
pop
dec
push
shlb
or
aaa
cltd
ljmp
fxch
mov
cmp
mov
mov
sbb
dec
into
not
push
int3
cltd
stos
push
nop
add
or
sarl
dec
cmp
mov
pop
pusha
rcrb
hlt
inc
mov
es
add
jne
lret
shrb
imul
outsb
ret
dec
adc
jnp
les
push
xorl
lods
xchg
and
add
push
scas
xchg
sub
in
mov
les
out
xlat
pop
dec
in
push
out
dec
or
es
mov
lahf
add
out
lods
lods
or
sarb
into
loope
iret
jl
test
ret
jle
cmp
incl
lret
fldl
mov
sti
mov
or
cvtps2pi
aas
gs
pop
stos
xchg
dec
cmp
mov
pop
xchg
cmp
addr16
aaa
xor
sbb
cld
mov
in
push
addl
sbbb
cwtl
xor
scas
pushf
cmp
mov
call
addl
incl
adc
or
popf
jg
imul
sbb
call
fbstp
movsb
ret
cmpsl
lock
or
in
xchg
push
clc
stc
lret
sub
mov
mov
xchg
leave
sub
mov
cmp
add
loop
daa
mov
loopne
or
or
mov
adc
mov
push
pop
push
roll
data16
sbb
stos
int
pop
dec
movb
mov
cli
bnd
pushf
fldz
ds
sub
xor
sub
push
mov
mov
inc
insl
loope
cmpsl
xchg
mov
add
inc
dec
lret
push
jne
push
push
aad
mov
shrb
lds
in
sub
out
inc
fdivs
jp
lock
push
adc
xlat
adc
and
bound
lods
mov
dec
aad
or
bound
cmp
mov
jae
mov
mov
inc
mov
enter
cmp
cmp
rorb
push
and
cmpsb
mov
dec
push
push
cmp
in
pop
fdivrs
and
test
ficomps
out
fwait
icebp
xor
xor
or
movsl
enter
add
lahf
push
sub
repz
cmc
mov
mov
inc
push
imul
lret
dec
pop
and
pop
mov
jge
cli
jp
mov
lods
ja
arpl
cmpsb
push
mov
jle
loope
adc
test
jle
and
cmp
push
mov
sarl
mov
xchg
movl
das
daa
and
mov
jp
mov
pushf
push
clc
cmc
jp
leave
cmp
xchg
in
dec
lret
sub
cmp
rorl
add
inc
dec
push
cmpsl
jo
lret
cmp
add
mov
xor
mov
icebp
dec
sub
add
bnd
mov
pop
andb
xchg
in
pop
mov
in
mov
or
out
jo
xlat
ljmp
lsl
pop
push
adc
rclb
nop
dec
pushf
mov
les
cmovl
mov
leave
jge
inc
in
sub
mov
into
es
xchg
cmpsl
cs
mov
cmp
push
xchg
lcall
jns
jno
pop
or
cmp
fistpll
sbb
push
dec
ret
push
pop
add
sub
and
pop
rorb
pop
scas
jo
out
jnp
fmull
lahf
sbb
push
sti
push
fildl
dec
divb
add
mov
xor
adc
movsl
repnz
fwait
adc
pop
xchg
push
mov
insb
sub
ret
mov
mov
mov
lret
mov
dec
enter
pop
arpl
add
bound
mov
dec
mov
inc
or
push
or
dec
jge
dec
in
es
repz
adc
and
xor
lods
test
out
pushl
rclb
xor
push
rclb
rcrl
adc
rclb
mov
je
xor
cld
pop
mov
test
test
aam
insl
cmpsb
fdivrl
enter
add
out
rol
mov
lcall
pop
sbb
bound
jmp
push
xor
push
push
iret
sub
xor
dec
outsl
nop
push
fcomps
push
add
les
xor
jne
jmp
addr16
push
outsb
add
addb
xchg
mov
idivl
mov
mov
inc
movsb
ljmp
pop
movsl
stos
sub
or
jnp
jmp
dec
lea
jb
dec
rcl
xchg
pop
inc
addr16
adc
pop
add
xlat
les
out
inc
lds
enter
pop
addr16
stos
push
mov
jae
aas
jp
push
add
add
pop
pop
orl
mov
pop
mov
and
add
movsb
in
out
testl
mov
pop
int
ds
dec
imul
cmp
sub
shrl
mov
mov
aam
xorl
xor
xchg
mov
mov
out
or
outsl
out
out
cvtps2dq
fsubp
and
push
push
and
cmp
add
enter
adc
notl
pop
int
scas
dec
mov
stos
mov
or
notb
test
stos
out
jp
dec
mov
pop
into
nop
dec
out
nop
test
lret
icebp
xor
shrb
scas
test
add
pop
loop
mov
pusha
jne
daa
cmpsb
xchg
jnp
adc
outsb
xor
cmp
jns
stc
xchg
dec
and
push
sahf
jmp
pop
mov
mov
dec
mov
ficomps
ret
dec
ret
xor
sub
jle
in
inc
js
push
jae
int
xchg
adc
xor
syscall
hlt
icebp
jo
aaa
stos
push
adc
jecxz
cs
aas
test
dec
push
imul
or
mov
mov
cli
jmp
sarl
xchg
fbld
inc
in
in
insb
pusha
lods
mov
inc
aam
jp
lahf
mov
js
mov
cmc
test
mov
es
nop
rclb
hlt
sub
sub
jmp
dec
push
add
in
mov
fsts
test
int
repz
fsubs
push
push
mov
shl
imul
popa
cmp
insl
dec
and
push
xor
sub
fwait
jmp
xlat
call
xor
inc
loopne
dec
pop
or
sti
test
outsl
std
inc
negb
adcb
cs
xor
push
sbb
in
iret
mov
sbb
lret
inc
lahf
les
dec
insl
ljmp
out
ja
orb
scas
sbb
and
rcrb
fwait
dec
mov
stos
dec
push
loop
aad
jmp
mov
addr16
mov
mov
add
outsl
sub
lods
insl
pop
xor
sub
jg
or
nop
ret
adc
scas
jno
push
mov
bound
mov
sub
ret
mov
mov
jns
jb
or
mov
xor
sbbb
add
push
shl
mov
iret
xchg
mov
or
imul
push
dec
in
xor
xchg
mov
xchg
insl
scas
inc
filds
jmp
fcmovbe
adc
mov
sti
adc
jae
in
cmp
push
cli
lods
iret
cmp
mov
inc
inc
int3
pop
cmp
in
testb
ds
cmpsl
iret
dec
xor
les
cmp
xor
scas
pop
xchg
into
inc
xlat
lock
js
adc
cmp
or
sbb
inc
jl
test
int3
inc
repz
cmp
pusha
pop
xchg
inc
sub
sbb
jb
xchg
mov
sub
xorb
jo
ret
cmovb
mov
xchg
loopne
idivl
stos
iret
shr
sbb
ss
pop
iret
pop
lret
push
daa
pop
gs
icebp
cmc
stc
and
negl
adc
cmp
mov
sub
jb
push
xchg
pushf
adc
repz
lahf
movsb
hlt
scas
mov
movzbl
mov
inc
fcomps
cmp
fidivrs
out
mov
inc
data16
orb
and
jno
push
rcll
xor
mov
xor
mov
dec
mov
inc
outsb
inc
aaa
lret
push
sub
dec
jb
jp
cmp
xor
cwtl
cmp
iret
xchg
sbb
in
dec
add
push
mov
repnz
loop
icebp
dec
movsl
test
imul
test
push
lds
sub
mov
loop
pop
insb
into
test
pusha
add
add
pop
clc
test
popl
call
jbe
fwait
pop
roll
int3
popa
lock
cmp
dec
subl
sbb
sbb
push
repnz
push
rorb
rolb
mov
test
fildl
dec
stos
lods
addb
fwait
inc
sbb
jo
or
mov
test
add
push
into
cmp
mov
dec
imul
add
lods
leave
lods
popf
aas
loop
jp
mov
sahf
int3
lds
inc
scas
mov
inc
int3
and
in
mov
rclb
pop
shr
stc
sbb
imul
lea
mov
xchg
and
push
ret
mov
ds
push
scas
dec
or
jns
loop
sbbl
lcall
and
inc
sbb
adc
sahf
out
hlt
or
les
cmp
jmp
movl
cmp
and
in
inc
mov
cmp
or
mov
add
mov
movsb
roll
inc
jb
jmp
xchg
push
scas
mov
pavgb
andb
pushf
and
std
gs
jmp
push
cmp
pop
cld
inc
iret
pop
sbb
sub
bound
int3
push
xchg
jno
mov
cmp
dec
lea
push
adc
icebp
push
jle
stc
cmp
mov
push
adc
dec
xor
aaa
mov
shrb
xchg
jg
addr16
sbb
dec
sahf
dec
aaa
jnp
cld
sub
inc
sub
or
inc
sbb
les
inc
lods
dec
movsb
int3
loop
jge
mov
mov
pop
in
std
jne
xor
sbb
dec
scas
lock
arpl
das
and
or
sbbl
cs
pop
push
out
mov
pusha
cmp
lock
fmuls
cmc
lcall
xor
xchg
repz
movl
pop
push
pop
adc
push
xlat
dec
stos
lahf
fadds
jne
adc
pop
push
lret
push
push
cmpsl
inc
fildll
xchg
enter
xchg
mov
mov
push
stos
stc
xchg
pop
push
add
mov
sub
inc
cmpl
dec
or
imulb
cld
out
mov
adc
add
pop
adc
mov
loopne
push
out
mov
sbb
sahf
mov
dec
sbb
pop
mov
cwtl
and
enter
daa
push
ds
mov
jb
test
icebp
lahf
dec
mov
popf
jo
movsb
sbb
xor
push
or
mov
sbbb
pop
sub
into
xchg
into
out
mov
xlat
inc
movl
sub
es
or
xlat
div
pop
mov
call
mov
xor
add
inc
and
mov
sti
xchg
ja
xor
push
sti
jg
ljmp
icebp
out
pop
iret
pop
dec
xchg
sub
aaa
lret
push
cmp
xchg
push
out
in
push
mov
loope
scas
xchg
popa
les
out
stc
ds
cmpsl
popa
hlt
scas
stos
in
divb
out
stos
and
jae
data16
cmc
scas
sbb
push
pop
sub
lret
adc
testb
sahf
add
pop
cmp
cmp
jbe
movsb
int3
xchg
dec
cmp
call
stos
mov
xchg
lret
xchg
imul
dec
iret
inc
jnp
or
pop
dec
adc
icebp
mov
jp
add
cli
data16
loopne
sub
test
movsl
cmp
jno
insl
popf
xor
jnp
sbb
jp
imul
cmpsl
cmp
and
out
and
pop
ja
loope
cltd
ss
dec
cld
jecxz
sarb
dec
outsl
jnp
das
mov
stos
push
dec
mov
sti
pop
dec
mov
dec
push
rcrl
mov
cli
cmc
test
lock
insl
lret
sbb
ret
xlat
gs
xchg
popa
je
jne
mov
cltd
lds
push
loope
add
lods
sarl
inc
xor
cmp
adc
fs
dec
push
push
inc
mov
arpl
ds
int3
pop
sbb
pop
xlat
mov
call
inc
in
out
mov
in
jb
dec
xor
test
sbb
pop
jl
lahf
addr16
jo
fisubs
fdivp
xor
sbb
pop
out
rcr
sbb
stos
movsl
mov
jl
mov
xchg
lret
fldcw
mov
pop
dec
sbb
dec
xchg
cmpsl
test
xor
mov
mov
hlt
adc
and
test
xchg
mov
xor
in
jle
popa
fbstp
aaa
push
rcrl
repz
lret
ret
out
mov
fdivl
sbbl
pop
cld
inc
mov
shl
mov
call
push
icebp
xchg
jge
mov
sbb
popf
insb
loope
pop
pop
inc
jbe
lcall
leave
je
add
out
jmp
fdiv
jg
fldl
scas
add
in
test
jmp
xchg
adc
sub
jecxz
sub
mov
or
rcrl
xor
xlat
sub
dec
popf
jne
inc
scas
lcall
mov
xchg
add
das
xor
mov
or
jmp
fucom
sub
lahf
mov
mov
or
xchg
sbb
or
scas
aam
insb
mov
sbb
stos
shlb
adc
sub
pop
xor
or
and
cmp
mov
jmp
data16
cmp
das
call
stos
xor
mov
hlt
xchg
ficompl
mov
nop
dec
lods
lods
lahf
inc
inc
ljmp
mov
dec
outsb
mov
mov
repz
jle
in
insb
inc
in
jno,pn
or
lcall
pop
in
xchg
pop
cwtl
push
sub
popa
push
cmpsl
rorb
inc
cmp
mov
js
lcall
addr16
xchg
mov
mov
outsl
aad
mov
sub
andl
mov
jb
inc
idiv
add
arpl
pop
fistl
arpl
pop
js
dec
in
sbb
mov
and
std
and
addl
and
sub
push
leave
jnp
out
sbbl
jno
out
test
shll
dec
push
leave
push
pop
mov
pop
out
lret
push
mov
xchg
cmc
jmp
lret
call
push
cmpsl
lahf
mov
mov
dec
mov
nop
adc
rcll
sbb
xchg
call
mov
jecxz
fistpll
in
inc
popf
insl
sbb
and
testb
out
lcall
in
adc
jecxz
shrl
out
push
mov
sub
mov
dec
dec
push
jno
or
jb
add
jmp
mov
adc
mov
int3
fcoml
loope
je
lret
push
fdivs
lds
sub
push
xor
mov
sbbb
dec
sarl
out
call
ret
mov
test
push
push
inc
out
lds
insb
js
shll
mov
add
jbe
mov
cmp
cs
addr16
dec
insl
fnstenv
dec
fdivl
pop
pushf
cmp
dec
and
xor
je
inc
mov
add
pop
mov
mov
scas
out
jg
adc
xor
out
adc
loope
mov
or
sbb
jo
xchg
popa
gs
out
shlb
stc
lret
arpl
jo
ljmp
push
sub
hlt
int3
push
jae
arpl
repnz
sti
jb
push
pop
in
cs
popf
ror
fistl
stos
push
out
test
rolb
dec
and
push
out
das
popf
jae
or
adc
mov
inc
mov
cltd
mov
cmp
les
int3
fstps
scas
addr16
sbb
xchg
lods
cli
sti
adc
inc
push
fsts
xor
lret
or
call
adc
add
ljmp
fcoms
mov
gs
not
mov
fiaddl
aas
sub
scas
push
jg
pushf
mov
pop
dec
or
xchg
cltd
andl
inc
xor
push
push
mov
pop
mov
add
inc
movsl
push
xor
aas
pop
clc
sub
lret
icebp
mov
imul
push
mov
cmp
shll
test
loope
mov
jns
icebp
clc
inc
jo
fidivrl
dec
inc
icebp
sti
shr
mov
shl
into
cmc
dec
mov
dec
mov
lea
inc
sarb
insl
jns
jo
jle
cmp
cmp
test
call
adc
inc
cmp
scas
loopne
or
jnp
cmp
mov
push
scas
enter
cmp
cmc
js
add
sub
adc
adc
rclb
shll
outsb
adc
push
sbb
cmp
rcll
xchg
xchg
imul
sub
mov
inc
stos
movsl
push
xchg
movsl
mov
aam
lea
imul
shll
ret
imulb
movsl
je
lock
mov
test
xchg
popa
pop
sahf
xor
xor
movsb
pop
add
cmpsb
cwtl
adc
hlt
mov
mov
push
and
push
out
inc
mov
jmp
stos
je
push
add
call
fidivl
std
je
mov
xchg
mov
cmpsb
jae
daa
xchg
popf
cmc
testb
gs
push
shrb
fimull
scas
adc
jg
dec
sub
cltd
or
mov
pop
pop
clc
dec
out
jle
mov
inc
lock
outsl
xchg
cs
xchg
xor
dec
and
outsb
jne
std
fimull
jg
cs
out
pop
popf
ret
mov
lret
cmp
lods
fidivs
nop
mov
push
fdivrs
mov
loope
test
xlat
lods
push
mov
mov
sbbl
lret
cwtl
jg
pop
sub
cwtl
mov
push
dec
fisubrl
jl
jno
fcmove
pop
and
push
cli
ds
lea
test
faddl
std
sbb
jbe
adc
jae
or
sub
cmp
lods
in
lahf
or
sub
xor
lea
dec
jno
xlat
push
imul
xor
lds
movsb
andb
and
inc
int
pop
int3
jae
jne
out
xor
cmp
cs
repnz
xchg
andb
xchg
mov
adc
mov
test
mov
ja
or
dec
dec
sub
jg
clc
icebp
mov
pop
mov
rcl
mov
loopne
ljmp
lds
mov
sbb
std
stos
sub
sbb
mov
ja
and
mov
mov
outsl
fldl
out
pusha
or
test
dec
sarb
or
test
lret
inc
sbb
fiaddl
lods
xchg
lock
mov
std
insl
ds
js
mov
pop
mov
jo
jae
inc
add
jo
scas
ja
aas
mov
sub
mov
xor
lods
dec
mov
inc
test
push
xlat
xor
dec
sbb
lret
pop
xchg
pusha
lret
sbb
pushf
int3
add
ret
stos
lret
adc
shlb
mov
fsts
outsl
rcrl
sbb
mov
in
pop
or
mov
in
push
lret
pop
xor
mov
iret
test
ds
xor
lods
adc
jb
xchg
outsb
inc
insb
xchg
movsl
cmp
ret
lods
jg
and
jnp
pop
ja
rorb
mov
ret
push
fwait
cmp
dec
arpl
in
inc
adc
cmc
aam
inc
push
mov
loop
add
mov
add
inc
mov
jo
pop
push
xor
iret
fmuls
lods
adc
xor
scas
fldlg2
lret
mov
imul
sub
das
sbbl
bound
outsl
or
jb
pop
dec
mov
jecxz
repnz
cmp
pop
mov
xchg
mov
clc
mov
mov
fdivs
sbbb
adc
xor
insb
mov
stc
push
jmp
pushf
pop
mov
pop
mov
frstor
test
cmp
movsl
and
in
jmp
lcall
push
mov
xchg
icebp
lea
xchg
inc
je
incl
and
sbb
mov
addl
pop
pop
jl
fistl
xchg
aad
imul
in
cltd
ljmp
cmpsb
inc
pop
mov
inc
xor
shl
leave
std
mov
and
jge
das
jb
es
xchg
pop
imul
test
jl
fwait
enter
jle
mov
add
lcall
loop
in
xchg
pop
and
sub
push
lret
ret
xor
dec
int3
push
dec
pop
ljmp
push
inc
mov
mov
std
or
mov
xor
addr16
imul
sbb
add
jnp
jne
fsqrt
xor
jns
mov
sub
clc
xchg
or
pop
mov
xor
mov
push
das
inc
andb
sbb
int3
inc
sbb
int3
sti
inc
xor
mov
sbb
and
mov
stc
scas
and
inc
scas
jo
into
call
add
bound
jmp
mov
xlat
icebp
aad
jnp
fisttps
push
pop
xchg
mov
add
add
mov
jl
xor
mulb
int3
sub
mov
mov
mov
pop
fisttpll
inc
in
fs
mov
pop
jge
jle
pop
stos
pushl
leave
pop
loopne
pop
aaa
in
xchg
gs
enter
xchg
sbb
jecxz
loope
push
movsl
sub
lret
jl
loope
pop
mov
pop
outsl
mov
push
mov
or
addr16
orl
xchg
mov
add
xor
cmc
sub
or
std
add
push
pushf
aam
leave
sub
lret
in
sbb
jecxz
ficoms
inc
sub
div
add
lods
into
ret
imul
daa
loope
in
mov
scas
push
mov
sbb
or
ljmp
fidivs
out
lock
pop
pusha
pop
or
jg
sub
jbe
and
and
cmc
xchg
pop
jnp
in
push
add
outsl
xor
mov
rorl
es
dec
pop
xchg
int
fadd
push
lret
add
jg
cmp
mov
add
aam
out
mov
loopne
pop
dec
add
in
adcl
call
sbb
lock
fstl
mov
loop
xchg
stos
and
mov
xor
add
test
mov
sbb
testl
add
stos
inc
sbbb
and
aaa
dec
mov
jecxz
sub
cli
cltd
pop
out
and
pop
loop
mov
adcl
into
jle
shl
fsub
adc
sti
gs
cld
and
leave
push
pop
xor
test
jne
sbb
dec
rcrl
sub
mov
xor
jb
mov
xchg
push
add
mov
add
add
shll
and
fldt
lods
aad
push
xchg
mov
fstl
incl
adc
xor
dec
pop
sbb
push
push
aam
mov
mov
lock
sbb
addr16
and
xor
lods
push
xor
mov
add
xchg
xor
rolb
lods
adc
loope
xchg
xor
xlat
aam
and
lds
cmp
or
cli
fs
out
imul
lods
pop
insb
dec
shrl
cmp
mov
test
inc
bound
pop
ds
fxch
mov
mov
aad
mov
inc
mov
adc
xor
aad
mov
mov
fdivs
shll
clc
mov
add
leave
scas
mov
jae
fs
ss
or
mov
arpl
push
es
sub
xlat
andb
sahf
lock
jae
aad
inc
xchg
or
clc
movsl
and
lds
mov
sub
cltd
jmp
pop
fs
sbb
mov
shll
ret
mov
push
add
cmc
mov
hlt
arpl
mov
rclb
pop
int3
lea
cld
adc
push
cwtl
pusha
dec
dec
pop
inc
inc
aas
add
stos
and
insb
ret
lods
rcll
shl
xor
xchg
std
push
icebp
sti
cmpsb
shl
and
ss
mov
xchg
and
push
in
mov
outsl
addb
scas
pop
dec
pop
ret
sbb
lods
stos
mov
add
stos
sbb
xchg
cld
sarl
out
cltd
sub
shl
or
movsb
xor
imul
jge
mov
lret
sub
gs
rorb
lret
fdivr
sub
inc
mov
push
and
gs
out
pop
cmc
sub
jmp
stc
bound
mov
in
out
xlat
add
add
in
aaa
incl
rcrb
sub
scas
dec
int3
es
pop
xchg
cltd
scas
into
in
mov
aas
fisubrs
xor
mov
and
xor
or
sbb
pusha
xchg
sub
mov
movsb
dec
pop
in
mov
lea
inc
rorl
ljmp
aam
xchg
sbb
mov
xchg
xchg
dec
lahf
pop
mov
push
fisubrl
mov
xor
shlb
jns
or
push
stos
mov
outsb
out
mov
push
ret
mov
mov
dec
stos
icebp
fildll
ficoml
or
sub
push
mov
jno
and
fisubrl
rorb
mov
fwait
mov
jmp
jge
out
xchg
sbb
mov
sti
insl
jne
jo
out
test
jmp
adc
cmp
int3
push
decb
orb
data16
stos
popa
out
int
pop
push
xor
inc
pop
repz
adc
jae
insb
and
into
loop
lods
ds
jg
sbb
out
mov
rcrl
mov
cmp
sub
aad
lock
cmp
pushf
xor
cld
das
je
in
cld
outsb
jp
jl
xlat
inc
sub
movsb
mov
mov
loopne
push
mov
pushf
out
aam
push
sarl
push
mov
mov
pop
mov
pushf
aaa
hlt
out
loopne
dec
inc
mov
jl
out
jo
call
or
mov
lea
and
test
adc
out
test
movsb
scas
mov
data16
adc
xchg
jno
lahf
int
mov
xchg
nop
sbb
mov
cs
out
cmp
jbe
mov
jmp
fs
mov
and
in
cwtl
out
jg,pn
push
in
push
pop
inc
fs
mov
or
push
das
cmp
mov
push
jl
push
adcl
and
cmp
xchg
xchg
pop
dec
mov
out
aas
or
outsl
push
out
scas
call
icebp
in
arpl
pop
loop
fisttpl
push
in
inc
fisubs
mov
sbb
add
mov
pop
add
aam
jmp
into
icebp
movsb
icebp
in
scas
aam
imul
add
inc
lahf
mov
and
jmp
jg
mov
les
dec
imul
into
stc
mov
popf
or
pop
fisubrl
jbe
es
int3
fbstp
iret
cmp
iret
mov
pusha
pop
icebp
push
and
xchg
repz
push
adc
outsl
add
lcall
jae
and
jmp
out
in
daa
in
xor
jnp
jne
and
shr
mov
xor
je
pop
jle
pop
fcomps
shlb
sub
movsl
adc
sbb
arpl
ret
and
sbb
into
adcb
push
sbb
lds
arpl
mov
or
fcomps
rorb
lods
mov
cwtl
inc
test
adc
adc
in
jno
mov
ljmp
jbe
stos
mov
push
hlt
jne
or
fsubrl
pop
pop
fidivrl
ljmp
aam
ficomps
add
fwait
pop
pusha
and
sbb
add
data16
lret
lock
movsb
and
in
and
enter
xchg
adc
fimuls
mov
test
inc
insl
pop
outsl
adc
icebp
imul
shlb
mov
arpl
cmp
outsl
and
sub
adc
popf
in
inc
mov
xchg
mov
imul
push
fwait
lods
scas
mov
or
fadds
jp
into
push
ja
scas
fildl
std
mov
icebp
or
add
inc
in
iret
mov
cmpsb
mov
and
fiadds
jno
dec
fs
sbb
lcall
pcmpeqb
cmp
sub
daa
xor
inc
js
dec
lods
sub
lods
inc
stc
out
or
mov
pop
stos
and
dec
add
hlt
jp
mov
sub
add
mov
mov
pushl
hlt
or
xor
mov
movsb
ljmp
or
call
sub
fnstsw
mov
jns
loope
inc
mov
ficoms
ret
xlat
bound
lock
sarb
pop
add
adc
pop
cmp
or
ja
outsb
loopne
mov
xor
shlb
fisubrs
loope
mov
iret
lea
out
mov
repnz
popa
push
lret
fldenv
mov
call
or
adc
dec
cmpsb
add
add
ficompl
pop
movsb
cmpsl
cmpsl
xlat
loope
cs
divb
xor
push
les
idiv
sbbb
rorb
addr16
mov
shlb
and
pop
fmuls
stos
fs
dec
pop
je
and
push
lock
loope
jae
add
add
mov
into
jg
jg
lods
sbb
lret
mov
or
inc
scas
cld
jp
push
and
sub
push
insb
je
mov
dec
stos
addl
sub
cmp
mov
mov
out
or
repz
aad
mov
push
add
fimull
xor
leave
jp
mov
gs
out
xor
mov
pop
jge
mov
lret
inc
mov
dec
mov
clts
lods
xor
jmp
and
push
or
adc
adcl
gs
leave
stos
dec
lods
fs
pop
cmp
push
pop
stos
jns
test
jnp
rcrb
xor
mov
inc
pop
push
push
test
inc
mov
cmp
and
mov
mov
repnz
add
movsb
push
xchg
inc
mov
dec
adc
cmp
fstps
pop
and
bound
ss
mov
sub
rcrl
sub
inc
xchg
pop
cmp
imul
pop
call
or
jbe
iret
aam
out
roll
mov
mov
sub
loopne
push
pop
sbb
and
or
inc
test
jns
int3
mov
adc
into
es
add
mov
maxps
and
push
pushf
mov
outsl
and
into
jg
xor
sbbl
insl
cmp
add
decb
dec
imul
lret
xorb
das
or
aam
pusha
addb
xchg
push
and
arpl
outsb
call
fimuls
jae
je
jo
push
mov
pusha
pop
jg
push
dec
aam
ja
xchg
pop
or
or
outsl
mov
add
xchg
lcall
aaa
mov
and
clc
sahf
xor
out
insl
dec
outsb
and
nop
or
popf
cmpsb
cmpsl
xchg
das
jbe
setle
cli
into
and
add
xchg
adc
xchg
dec
inc
mov
loope
in
inc
cmp
jb
loopne
jo
in
pop
mov
lahf
xor
xchg
mov
push
sub
mov
inc
lds
jo
xlat
mov
or
pop
cmp
sbb
pop
inc
xor
fimull
and
shr
imul
in
jecxz
adc
sub
inc
inc
mov
mov
sub
mov
imul
lret
xor
jae
mov
test
lret
cmpsl
and
out
lock
aaa
jbe
lcall
aas
sti
mov
push
int
dec
sbb
mov
repnz
inc
in
in
push
aas
pop
pusha
ror
rcl
jno
popw
sub
cld
lods
ficompl
movsb
push
sub
and
cli
aas
int3
cs
in
xorps
jmp
das
stos
lahf
daa
pop
xchg
popf
or
inc
jge
outsb
loope
or
push
mov
lcall
pop
lcall
mov
xchg
cmc
dec
adc
nop
push
out
mov
loopne
jmp
inc
push
dec
movsl
ret
aam
test
jns
lods
test
mov
ret
dec
ret
push
mov
call
es
imul
mov
lret
faddp
test
pop
dec
lods
aad
orl
inc
addr16
adc
push
inc
scas
mov
mov
jno
cmpsl
or
push
es
in
mov
inc
sub
jnp
shr
cmp
mov
add
inc
pop
xor
mov
inc
push
sbb
out
les
fcmovnb
ltr
je
movsl
xor
mov
push
xor
mov
sbb
xor
push
push
bswap
lods
push
mov
lds
sti
pop
data16
idivb
inc
push
sub
jne
lahf
inc
fdivrl
xchg
sub
outsl
lods
push
in
mov
push
push
adc
mov
cwtl
scas
fcoms
arpl
mov
push
out
fnsave
jns
push
inc
repz
sbb
jne
ljmp
testb
or
xchg
js
xchg
inc
shr
xor
cmp
mov
or
adc
call
mov
inc
sub
test
cli
fistps
mov
lcall
repnz
jge
xchg
xchg
loope
add
sar
xchg
xchg
and
push
sub
and
dec
in
stos
lahf
popa
sahf
shll
mov
xor
fidivrs
sarb
sahf
fiadds
je
push
idivb
jnp
lea
cmp
ret
ljmp
mov
repz
xchg
xor
gs
sbb
dec
or
stos
andl
aam
sbb
shld
pop
push
adc
hlt
out
clc
mov
ret
lahf
std
shl
nop
push
pop
mov
jle
inc
dec
ljmp
dec
pop
cwtl
pop
mov
push
leave
ucomiss
pushf
lret
sbb
dec
enter
cmp
dec
pusha
repnz
jle
mov
sbb
std
xor
loop
push
insl
repz
mov
testb
shlb
icebp
lret
xor
gs
xor
mov
or
imulb
mov
mull
scas
sub
pop
cwtl
mov
sub
ljmp
ja
test
or
xor
mov
in
gs
mov
sbb
add
mov
xchg
out
mov
loopne
pop
jl
jmp
arpl
leave
jp
mul
mov
sub
lcall
mov
ret
pop
mov
in
and
cmp
popa
movl
shr
lods
pop
or
lock
inc
and
into
push
push
xchg
outsb
pop
xorb
xlat
xchg
push
fnstcw
das
adc
rcrl
xor
dec
jl
push
push
mov
jb
aam
sbb
pop
lods
scas
dec
jmp
pop
or
test
ret
sbb
negl
inc
lret
iret
sti
push
adc
mov
in
pop
lahf
mov
dec
ret
and
in
sahf
sbb
leave
and
xchg
sub
xor
xchg
mov
or
scas
es
jnp
imul
dec
jp
loop
ffree
push
sub
add
cmp
outsb
and
scas
push
daa
sub
ljmp
imul
data16
mov
inc
test
sub
loop
pop
dec
and
cmp
inc
add
push
lcall
lcall
inc
xorl
and
lcall
jecxz
dec
int3
lds
push
push
notl
cmpl
ret
mov
or
and
jae
scas
pop
push
rclb
test
sarb
into
push
ljmp
mov
rcr
sti
mov
push
cwtl
in
xchg
sbb
or
add
cmp
movsb
sub
jg
jnp
inc
imul
movsl
push
mov
aas
test
sahf
js
data16
xor
mov
sti
call
repz
pop
sbb
mov
repz
pop
in
andb
mov
cs
in
into
std
push
mov
and
scas
addr16
or
add
les
jmp
mov
xchg
xor
std
push
popf
andb
mov
mov
sub
popa
scas
jp
dec
sbb
aas
aam
jge
aam
inc
mov
xchg
jb
jle
out
mov
ljmp
jbe
cmp
xchg
and
mov
lcall
into
pushw
adc
cmc
jne
addr16
dec
inc
and
push
ja
bound
adc
fiadds
lods
int
mov
bound
pop
mov
test
inc
cs
sbb
pop
mov
sbb
sub
dec
mov
add
cmp
or
mov
ret
clc
xchg
cmpsb
rcrl
lret
fisubrl
clc
jl
add
xchg
aad
scas
pushf
jmp
inc
xor
pop
sbb
xor
mov
mov
push
and
mov
pop
sub
incb
into
cli
pop
mov
fs
push
cs
xor
shl
ficompl
inc
xlat
div
enter
fisubrl
xor
iret
je
sarl
cmp
add
sbb
push
call
add
xor
test
xor
sbb
arpl
ljmp
pop
xabort
pop
stos
sarl
xorl
scas
je
xchg
loopne
divl
stos
xchg
nop
pop
enter
and
and
jle
mov
test
das
push
add
pop
lds
insl
xor
xchg
dec
mov
or
jo
insb
mov
cmp
imull
and
mov
xchg
sub
adc
mov
loopne
es
out
imul
xchg
add
int
imul
fdivl
xchg
add
repz
jp
sahf
jbe
xchg
fdivrl
ficoms
daa
movsb
or
stc
mov
sbbb
rol
jae
add
add
push
into
cmp
pushf
outsb
pop
sub
fstl
mov
loop
sub
sub
or
mov
mov
fcmovnb
adc
cmpsl
imul
push
mov
arpl
or
push
mov
mov
ret
cli
push
mov
cld
sbb
inc
inc
pushf
sti
lcall
cmp
xchg
add
mov
dec
lea
rcl
scas
or
dec
lcall
sub
jle
cli
cmp
cmp
cmp
inc
sahf
movsb
incl
cli
lret
fistps
daa
insb
mov
cmpsl
ja
test
push
xor
inc
add
clc
arpl
fists
xchg
and
lock
into
les
sar
repz
cwtl
icebp
add
sarl
clc
into
xor
adc
and
sbb
dec
test
sub
add
mov
sbb
push
fwait
icebp
movsl
or
movsl
pop
ja
clc
jecxz
js
fnstcw
add
jb
int
pop
loopne
and
cmp
jle
pop
dec
pushf
push
fidivl
sbbb
xor
jno
mov
jmp
mov
ss
out
ja
dec
mov
push
xor
jo
lods
movsl
adc
adc
fs
testl
popa
inc
ds
and
and
push
int3
inc
mov
incl
or
and
test
in
arpl
sub
out
cmp
popa
cmpsl
int
push
mov
add
jecxz
and
mov
dec
addl
or
popf
ret
mov
vpaddw
mov
sub
das
jae
imul
cwtl
lock
lds
pop
push
loope
or
push
pop
cld
xor
popa
pushf
in
xor
pop
bound
inc
fstp
pop
adc
inc
ficoml
or
add
and
mov
jo
adc
add
popa
imulb
out
std
into
inc
add
je
jge
test
push
push
cltd
lahf
sarl
enter
sub
in
and
adc
jne
imul
movsl
xchg
int3
popf
sbb
xor
jno
push
enter
push
jecxz
stos
pop
mov
mov
std
xor
fidivl
in
ss
es
mov
lds
lock
mov
into
js
clc
fs
jo
fldcw
sti
icebp
scas
mov
push
andb
and
xchg
hlt
lods
jg
xchg
pop
fwait
xchg
dec
inc
popf
jb
jl
add
push
xchg
jb
adc
dec
jae
adc
hlt
push
adc
mov
sub
ja,pt
sub
leave
lret
sub
addr16
ds
cmp
imull
inc
out
loope
xor
sti
add
add
cmp
fisubl
jbe
dec
cmpsb
je
lods
xchg
mov
mov
cmp
jae
dec
lcall
filds
call
imul
xor
gs
iret
xchg
mov
stos
and
test
adc
notb
orl
pop
pop
popf
pop
xchg
fstpl
call
adc
dec
ds
fdivrs
mov
or
and
mov
lcall
or
rep
movsb
outsl
inc
in
ljmp
es
pop
push
sub
shlb
sub
movsb
fcmovu
cmp
adcl
popf
cmp
pop
mov
mov
pusha
in
fstp
lahf
push
or
bound
cmc
xor
jo
mov
sbb
and
xchg
lock
xor
fmull
arpl
testl
add
dec
jge
addr16
mov
lock
add
cmp
lret
pushl
ficomps
pop
leave
aad
inc
cmpsl
insl
mov
les
fisubrs
je
fwait
mov
sub
cld
add
cmp
mov
xchg
ds
and
lods
mov
mov
cmpsl
ljmp
add
jae
fs
leave
sarb
inc
push
fs
out
mov
cld
pop
mov
es
cmpsb
sbb
mov
lahf
sub
cltd
in
into
mov
push
pusha
jmp
jge
imul
mov
incb
sub
adc
dec
mov
mov
rol
and
lods
call
push
pop
outsb
scas
cli
cmpsl
addr16
adc
pusha
lahf
clc
pop
jge
shll
mov
adc
call
mov
adc
sub
ror
xor
sub
ss
push
jns
and
fs
xor
or
mov
mov
or
and
insb
sbb
adc
mov
push
mov
xchg
jg
int3
mov
std
popf
idivl
push
clc
ljmp
xchg
dec
roll
and
and
iret
push
xchg
mov
subl
notb
dec
mov
cli
call
jae
outsl
ret
ljmp
repz
daa
mov
mov
jecxz
cmpsb
add
loope
test
pop
dec
xchg
lcall
scas
sub
xchg
in
cmpsb
push
adc
jae
or
sub
cmp
add
inc
andb
inc
mov
out
cs
xor
pop
lods
fimuls
push
stos
adcl
push
xchg
ss
push
and
xlat
pusha
stos
cmpsb
jg
pop
jecxz
mov
jne
outsl
jmp
lret
inc
and
cmpsl
and
lcall
lds
scas
fwait
ret
pop
inc
jo
clc
push
push
and
pushf
mov
xor
rcll
add
or
aas
int
inc
les
sub
scas
fwait
adc
in
xor
push
jle
push
outsb
js
and
jl
inc
sub
mov
inc
push
loope
lret
mov
fisubs
ret
outsb
jb
jo,pt
sbb
jg
fists
mov
mov
jp
fistpl
pop
mov
xor
jmp
push
add
popa
in
adc
jecxz
xchg
xor
ja
sub
insb
lretw
int
fidivs
jmp
mov
mov
push
mov
mov
mov
jno
add
push
cmc
jne
add
add
jne
movsl
nop
push
add
int3
jle
scas
push
hlt
outsb
aas
inc
sbb
push
push
or
icebp
xorb
scas
insl
or
xlat
lds
jp
movsb
lcallw
pusha
std
mov
jmp
mov
pop
add
jne
into
sbb
popf
or
pop
jae
pop
inc
mov
inc
out
lcall
jecxz
push
lods
pop
and
leave
sbb
xor
pop
fldcw
shlb
inc
push
leave
pusha
scas
cld
inc
sbb
cmpb
pop
fiadds
mov
mov
inc
adc
mov
xchg
jbe
movsb
xchg
jae
in
add
arpl
mov
ret
add
add
inc
jecxz
lret
adc
fldenv
pop
pop
xchg
pusha
mov
daa
cmp
in
cmp
jo
addr16
or
add
rcr
adc
aas
push
ss
test
cli
ss
inc
dec
leave
xchg
sbb
leave
add
mov
ds
lret
aas
clc
icebp
mov
repnz
cmp
repnz
enter
jne
xchg
pop
adc
ds
cwtl
or
add
jg
leave
sti
push
jo
sbb
fsts
and
pop
push
push
add
dec
call
inc
jge
xchg
es
fistps
movsl
int3
ret
flds
adc
adc
int
mov
lcall
push
loopne
jle
push
shlb
sub
dec
scas
jbe
push
pop
and
jle
push
sarl
and
in
sbb
imul
icebp
jge
mov
clc
mov
out
jns
fwait
push
je
xchg
cli
mov
xchg
push
cmp
xchg
jmp
cmp
sbb
jns
push
sbb
scas
push
fcoms
dec
adc
cmp
insl
jmp
mov
hlt
fildl
out
sbb
cmp
inc
int3
lods
add
cmp
jbe
iret
and
xor
aas
bound
in
mov
fs
xor
mov
test
or
mov
xor
loope
aam
push
sarb
push
mov
xlat
lock
pop
aad
xchg
or
fs
push
and
push
loopne
or
add
dec
frstor
pop
adc
xor
cwtl
pop
cmp
mov
or
addr16
xchg
mov
not
pop
adc
or
pop
outsl
mov
int3
mov
xchg
pmulhw
movsl
adc
repz
outsl
jo
mov
sub
das
add
mov
sarl
subb
dec
sub
icebp
sbb
loop
icebp
mov
les
scas
loopne
push
cmp
int
andl
js
sbb
xor
inc
mov
ret
inc
mov
push
repz
jl
lcall
jge
in
mov
xchg
jae
add
xchg
push
dec
jmp
push
cmp
movsl
das
sbb
xchg
divl
sub
ja
mov
push
dec
lds
add
and
test
and
decl
mov
jb
dec
mov
push
ficomps
aas
pop
dec
pop
adc
insl
inc
push
daa
or
into
sbb
cmp
ret
add
aas
xchg
cmpl
xchg
mov
jo
push
push
hlt
xor
push
push
xor
ljmp
dec
cmp
push
push
adc
dec
mov
stos
dec
mov
mov
push
push
sahf
sub
loop
outsl
jl
outsl
jg
in
add
pop
or
in
sbb
cmpsl
xchg
jns
aam
pop
rcll
xchg
test
pusha
sub
push
rclb
test
or
fimuls
push
icebp
adcb
inc
pop
pushf
mov
test
repz
pop
mov
inc
xchg
lret
lods
inc
ret
gs
mov
stos
loopne
lcall
test
jbe
loopne
xchg
inc
lods
and
cmp
mov
push
fucom
xor
loopne
push
rclb
aam
push
mov
sbb
test
inc
ret
pop
imul
incb
js
lcall
adc
cmp
fdivrl
or
stos
pop
lock
or
inc
jg
xchg
jbe
jo
aad
sub
sub
cmp
xor
jp
es
pminsw
inc
outsb
mov
xor
ss
xchg
cmp
push
jbe
mov
fsubl
dec
je
jge
orl
mov
inc
je
or
push
adc
lahf
mov
mov
jge
and
ret
xchg
pushf
xchg
insl
or
cmp
mov
mov
imul
test
cmpb
fs
sahf
rcrb
outsl
stos
sbb
xorl
adc
mov
push
sarb
jb
adc
cmp
inc
dec
xchg
sub
cmp
ret
cmp
xchg
adcb
icebp
pop
jne
bound
leave
cmp
in
jecxz
shrb
fisubl
cltd
mov
aad
jns
mov
vpunpckldq
std
fldenv
cmpsl
movsl
and
repz
dec
sbb
xchg
lock
push
xor
lcall
pop
dec
cmp
mov
loopne
inc
lods
shl
iret
arpl
add
mov
push
and
fs
dec
xor
xchg
popf
jle
dec
stos
int
cmp
cmpsb
addl
mov
leave
fwait
mov
out
ret
ficoml
lahf
lea
push
pop
push
push
stc
mov
loope
sbb
dec
loope
in
iret
pop
cmp
enter
add
out
and
ret
mov
jns
adc
dec
xor
inc
push
cmpsb
mov
push
pop
cmp
pusha
mov
lret
mov
mov
loope
xchg
jb
stc
pop
mov
dec
dec
frstpm(287
or
sub
in
leave
loope
lods
and
shll
clc
sub
xor
cwtl
loop
pop
pop
loope
push
insl
ret
std
adc
and
adc
add
mov
pop
stos
arpl
jnp
mov
and
loope
dec
outsb
lea
loopne
repnz
dec
add
jo
fstl
mov
push
xchg
cmp
and
in
mov
cwtl
pop
sub
cmp
mov
mov
lcall
lcall
fs
je
test
adc
inc
es
pop
jle
push
cmpsl
xor
add
lds
lret
and
cmp
jno
jl
cmp
and
inc
int3
lret
jp
push
mov
fs
int3
push
pop
shlb
xor
xor
testb
push
adc
inc
sahf
adc
mov
cmp
movb
push
sbb
sbb
pop
jb
ja
das
and
mov
jmp
mulb
popl
mov
push
mov
sub
and
aam
ss
inc
xchg
add
std
jbe
lock
mov
adc
pop
fcoml
adc
mov
pop
inc
test
mov
cli
and
outsl
cmc
loopne
push
or
aam
jo
jmp
mov
jae
mov
cld
cs
shr
inc
into
add
inc
int
mov
xchg
hlt
mov
xor
xor
cmp
cmpl
xchg
sbb
pop
insl
fs
jbe
cmpsl
repz
or
ljmp
xchg
push
imul
fs
xor
cmc
mov
sbb
pop
fldl
fldl
in
cltd
test
sub
adc
xchg
sbb
scas
mov
aaa
loop
xchg
and
stos
push
jne
scas
cmpsl
adc
push
imul
cmp
push
sarb
mov
xor
jne
sahf
push
jo
dec
push
mov
pop
pop
mov
insl
dec
stc
popf
outsl
dec
dec
sbb
adc
rcr
sahf
test
in
and
push
ret
jne
outsb
call
aaa
dec
ret
push
leave
rorb
aam
dec
sub
sbb
cltd
div
test
hlt
adc
cmp
int
and
imul
mov
cli
jmp
out
jp
xchg
inc
pusha
sub
hlt
rcrl
dec
andl
adc
push
adc
inc
pop
psubusb
ret
pop
repnz
cld
ds
xchg
cmp
push
cmpsb
add
mov
or
and
in
enter
rolb
test
jae
inc
cmpsb
cltd
enter
ret
jne
pusha
cld
sbb
sub
jno
jb
add
inc
cmc
mov
rol
pop
sbb
cmp
ds
push
in
adc
outsb
xchg
inc
cmc
lcall
mov
call
jnp
mov
adc
cmpsb
jnp
movsl
or
and
cmpl
int
and
mov
mov
jb
test
push
xor
and
int3
cmp
pop
insb
sbb
insl
jg
pop
xchg
std
insb
sub
xor
dec
fistpll
test
push
sbb
pop
mov
or
std
ficoms
aam
pop
dec
adc
lret
pop
or
inc
jb
xchg
push
add
leave
fadd
cmp
mov
js
fs
push
add
out
testb
lret
shll
xchg
sti
inc
sbb
in
popf
outsb
mov
adc
stos
mov
push
sbb
arpl
sub
idivl
and
jb
add
outsl
mov
adc
je
incl
ret
and
xor
push
mov
lods
adc
je
pop
nop
subl
outsl
sbb
loope
loopne
mov
movsb
ljmp
xchg
ret
insl
fdivrl
ret
mov
and
mov
mov
mov
sub
decb
ret
inc
out
adc
push
in
or
jecxz
inc
insb
frstor
bound
mov
lret
mov
cmpsl
pop
movsb
sbb
rclb
inc
lahf
inc
mov
aam
and
out
or
sti
jp
add
in
jg
inc
push
add
ljmp
shl
or
clc
jns
stc
ljmp
popa
cmpsb
mov
sarb
test
adc
mov
stos
ja
andl
or
xor
sti
mov
fs
mov
insl
and
arpl
inc
ss
mov
int3
sti
out
ja
jecxz
incl
adc
imul
push
cld
sti
cld
xchg
mov
int3
scas
imul
xchg
lods
out
jecxz
pop
push
ret
sbb
les
popl
in
xor
xchg
lcall
hlt
mov
idivb
jno
xor
mov
jecxz
rclb
ret
cwtl
dec
dec
fnstenv
sarb
daa
inc
pop
out
outsb
mov
scas
mov
xchg
sti
dec
hlt
add
ret
call
xchg
fstl
jne
mov
pop
leave
fcompl
push
sbb
and
idiv
sbb
adc
adc
mov
int
pop
in
pop
dec
push
flds
roll
inc
int3
xor
mov
in
pop
cmpsl
ds
ljmp
xor
mov
lods
fistpll
cmp
add
fucomi
jae
rcr
mov
jb
lock
in
cmc
fldt
sbbb
ret
stos
jne
mov
mov
and
mov
outsl
in
add
mov
mov
xor
mov
test
fucom
jecxz
pop
and
fiaddl
sub
daa
mov
push
ds
mov
push
les
les
sbb
icebp
pop
out
add
adc
fnstenv
jg
inc
lock
std
cmc
push
lds
dec
jg
test
xchg
mov
or
add
and
sub
mov
cmpsl
pop
sub
sbb
cmc
dec
lret
pop
lret
mov
jnp
push
fsubrs
pop
xor
fadd
mov
rcr
loope
pusha
gs
fdivp
xor
test
pop
cs
and
test
dec
icebp
jmp
mov
in
and
pop
jmp
mov
adc
xchg
lret
pop
push
fwait
stos
dec
lock
mov
add
mov
xchg
test
mov
inc
sub
cmp
dec
lea
nop
sub
sgdtl
sub
repnz
add
cmpsl
push
les
arpl
aaa
and
scas
or
jmp
add
arpl
jl
ljmp
pop
lahf
and
notl
movsl
pop
cli
ds
cmp
and
cmpsb
and
pop
int3
inc
dec
pop
add
pop
push
xlat
adc
xchg
or
cmc
fmull
lret
push
mov
adc
sub
jge
or
hlt
mov
push
cmp
push
in
test
mov
mov
adc
pop
xor
pop
adcb
les
lcall
test
mov
emms
call
out
stos
sub
mov
loope
imul
inc
js
shlb
pop
jp
into
adc
lcall
incb
pop
mov
jne
sbb
pop
lods
lret
in
out
fistpl
xchg
pop
out
andl
cmp
pusha
nopl
pop
nop
roll
sbb
or
mov
test
and
shl
dec
neg
test
cmc
test
nop
outsb
jo
rcrl
push
push
pop
inc
xlat
dec
inc
cmpl
loop
jg
shll
pop
jnp
out
xor
sub
popf
dec
mov
pop
enter
nop
sub
adc
add
pop
mov
and
cmp
cltd
cli
fimull
rorb
dec
es
dec
testb
andl
sbb
test
and
push
test
pop
and
out
push
dec
xchg
insb
jb
dec
mov
dec
lods
push
pop
stos
je
sahf
outsb
sub
in
mov
pop
dec
jle
xor
add
sub
in
mov
push
add
call
cmc
sub
js
pop
ljmp
jmp
sub
insb
push
lahf
xchg
jle
add
sbb
ret
and
outsb
subb
rcr
adc
jecxz
inc
sbb
mov
jmp
sub
and
jno
mov
sbb
shll
mov
lret
push
fsubs
addr16
into
mov
int
sub
jns
ss
lds
xlat
lret
jge
or
mov
ja
mov
out
movsb
bound
sar
mov
stos
stos
pusha
sahf
add
dec
inc
fs
sbb
dec
jp,pt
add
xchg
pushl
pop
data16
insl
out
sbb
mov
pop
fnstenv
test
and
push
orl
cmpsl
sbb
xchg
incb
ljmp
out
xchg
xchg
adc
les
cwtl
arpl
ljmp
pop
or
leave
fwait
shlb
cmp
push
leave
mov
inc
scas
stc
push
popl
aad
pop
lcall
cmp
aas
push
or
cmp
out
cmpsl
std
sbb
inc
cli
fists
mov
in
cwtl
lahf
push
orb
outsl
mov
jge
pushl
sarb
pop
insb
js
mov
xchg
loopne
adcl
movsl
std
jecxz
aaa
out
in
dec
mov
dec
daa
mov
mov
pusha
popf
movaps
adc
lcall
iret
xor
int
dec
or
push
fdivl
mov
shll
mov
jne
lret
jge
test
ret
mov
pop
sbb
test
dec
lds
in
adc
mov
xor
daa
arpl
and
aad
push
sbb
inc
rcll
loop
jnp
jae
add
jno
test
mov
push
loope
cmp
imul
inc
imul
mov
scas
sbb
mov
clc
dec
add
loopne
add
outsb
dec
adc
fs
aaa
xchg
aaa
jb
push
fdivrs
mov
outsl
aaa
outsb
fs
stos
mov
ret
jg
sub
rcr
movsb
xor
sub
subl
xchg
not
lahf
dec
iret
nop
or
mov
ss
mov
dec
jb
addr16
and
iret
add
push
xchg
insb
cmp
jne
mov
mov
data16
das
pushf
mov
or
out
jle
lea
push
xor
in
sbbb
mov
in
cmp
pusha
movsl
mov
cmp
mov
hlt
push
push
ret
lret
das
out
xor
push
outsb
les
cmp
imul
in
mov
mov
out
fldt
lock
xor
sbb
stc
inc
test
pop
xor
aad
stc
ss
sub
leave
xchg
dec
shl
add
lcall
add
js
in
add
ja
pop
cltd
cmp
sarl
dec
out
fcmovne
repnz
int3
mov
fwait
rcrb
imul
pop
and
fildl
cmp
insb
cmp
in
lods
push
mov
mov
scas
insl
mov
fnstcw
cld
in
adc
add
popf
pop
jo
xchg
sub
cwtl
mov
das
daa
or
jne
outsb
add
setp
int3
ja
cmpl
aaa
jno
sti
sbb
fiadds
push
xchg
push
push
jl
sub
fbld
adc
fmulp
jp
mov
push
shll
or
adc
xchg
pop
ljmp
push
xor
daa
aad
mov
shrb
push
in
xchg
push
insb
mov
adc
or
mov
sub
in
in
adc
ds
dec
enter
mov
sub
fistpll
loope
push
std
test
or
outsb
das
xchg
sub
inc
sub
push
int
repz
push
clc
pop
popa
adc
nop
xor
mov
adc
jecxz
adc
icebp
cld
mov
push
movl
lret
adc
gs
je
pop
in
push
lret
mov
mov
popf
imul
sub
add
lret
and
cmp
sti
push
std
pop
data16
imul
outsb
shll
movsb
addl
sbb
in
mov
adc
out
sub
adc
cmp
inc
rcrl
mov
mov
push
xlat
add
stc
sub
mov
pop
jns
cwtl
xor
jecxz
inc
fiaddl
xchg
sbb
cmc
xchg
sub
push
cmp
fwait
push
in
out
nop
mov
cltd
jo
cmp
inc
sub
pop
jl
jmp
addr16
push
sub
mov
mov
movsb
mov
xchg
sti
add
mov
out
xchg
cmp
imul
stos
roll
dec
hlt
adc
cmpsl
aaa
inc
lock
jge
inc
leave
stos
repz
mov
add
pop
ja
test
scas
cmp
mov
dec
inc
jnp
nop
inc
repnz
push
pop
push
dec
lret
and
ficoms
rcrl
pop
xchg
adc
inc
push
lods
add
outsl
jb
rolb
lcall
mov
sbb
pop
enter
mov
imul
scas
cmpsb
inc
test
mov
xchg
adc
adc
rcll
in
xlat
aas
push
ds
std
test
mov
adcb
cmp
rcr
push
cmpsl
rclb
out
addr16
arpl
pop
add
adc
or
outsb
push
arpl
jl
lret
or
aas
cmp
in
add
jns
insl
cmp
stc
jno
xor
add
mov
mov
sub
cmpsb
out
cmp
dec
testb
mov
mov
mov
andb
js
fdivrl
mov
mov
mov
rcrb
push
dec
adcl
mov
mov
xor
xchg
sbb
mov
sarl
icebp
aam
inc
pop
and
shrb
js
lods
negb
cmp
fldt
out
sbb
stos
in
pushw
add
inc
mov
sub
push
rcrb
outsb
sbb
std
not
dec
je
sahf
push
mov
lock
sbb
fildl
sub
sbb
inc
dec
ljmp
icebp
mov
push
imul
cmpsl
and
dec
scas
in
les
pop
or
cmp
xor
mov
ret
jo
repnz
mov
sbbb
scas
int3
fldcw
sub
mov
sub
ret
movsl
add
xchg
pop
pop
lds
sub
xchg
std
push
lcall
mov
cmp
pop
scas
adc
push
std
cmp
outsl
in
mov
mov
mov
adc
cs
insb
mov
in
xorb
inc
jbe
icebp
in
or
cli
and
mov
fbld
outsb
dec
xchg
adc
in
sub
push
loopne
unpckhps
popa
aad
insb
iret
sbb
popf
mov
pop
pop
and
pop
into
sub
mov
insb
enter
inc
sbb
lret
fcoms
and
mov
rcll
ret
pop
mov
mov
in
cmpsb
mov
inc
inc
xchg
and
push
inc
into
mull
push
stc
nop
cld
mov
add
call
loope
dec
inc
mov
cwtl
and
test
mov
ficoms
inc
add
or
and
scas
push
pop
cld
clc
xchg
dec
sti
and
inc
dec
add
cli
mov
dec
jle
loopne
clc
jg
aam
push
adc
pushf
daa
add
adc
and
stos
in
dec
shl
jno
push
into
les
test
aad
inc
or
lret
add
mov
fsubp
mov
insb
mov
daa
imul
cwtl
jmp
leave
adc
fisubs
stos
insl
cmp
mov
adc
movsb
in
cmc
fimull
sbb
and
add
jecxz
jo
ret
decl
clc
mov
pop
stc
rcrl
xchg
sub
loop
dec
stc
mov
push
push
int3
sbb
adc
add
mov
cltd
mov
mov
inc
or
adc
sub
sub
xor
jo
stos
dec
add
jne
int
clc
and
push
lods
push
test
call
repnz
xlat
mov
movl
add
lahf
xchg
dec
inc
dec
or
xor
and
adc
pop
push
mov
adc
in
es
rorl
jne
sub
add
add
xor
movsl
push
cld
and
dec
mov
sub
add
jbe
les
repz
sahf
ret
in
pop
sbb
sti
inc
mov
rcrl
bound
fwait
movq
bound
and
or
int3
ret
cli
dec
outsb
xchg
push
jns
test
es
nop
push
dec
jne
xlat
mov
sti
and
or
loope
stos
push
leave
jecxz
mov
mov
inc
mov
movsb
xchg
cmp
mov
stos
sar
inc
dec
push
sbb
inc
mull
jno
add
jl
daa
out
mov
and
pop
dec
arpl
fdivl
mov
and
fsubs
shlb
push
xor
push
pusha
lea
popa
aaa
imul
sub
push
pop
arpl
aam
push
orl
ret
cmc
mov
movsl
test
out
sub
push
push
cld
adc
jno
xchg
iret
enter
cltd
inc
scas
mov
pop
sub
cmp
filds
into
fidivl
out
call
or
mov
inc
loop
add
lret
hlt
jb,pn
testb
outsb
dec
and
cmpsb
cli
ljmp
pop
pusha
add
ret
nop
pushf
push
fisubrl
cbtw
enter
mov
pop
repnz
movb
and
lahf
incl
jae
sub
add
mov
aad
imul
movsl
dec
mov
dec
loopne
jae
fwait
inc
popf
divl
inc
sti
sbb
and
test
cmp
mov
iret
cli
pop
ret
jecxz
daa
mov
hlt
push
enter
sub
testl
mov
mov
jb
jne
insl
in
repnz
sbb
lret
mov
jbe
lea
movsb
lret
pop
fsubl
push
jle
out
es
sub
mov
ret
add
adc
in
lds
aam
lods
or
adc
les
stos
cmp
push
xchg
in
imul
vpcmpeqb
idivl
jmp
into
dec
cmc
pushf
mov
notb
std
dec
inc
jecxz
xchg
mov
xor
pushl
adc
fsubr
test
push
xchg
push
pop
pusha
xor
movups
xor
fdivl
inc
pop
inc
mov
cmp
rcrb
adc
incb
cmc
fcomps
cmpsb
xchg
push
fwait
sbb
add
pushf
push
dec
push
in
lock
test
nop
mov
jle
rcll
sub
sub
push
jno
mov
fnstenv
push
and
jge
andl
lahf
sub
fwait
ds
loope
rcl
insb
mov
stos
imul
cmc
or
ja
dec
add
subb
outsb
pop
frstor
sahf
push
ficoml
pop
push
jo
lret
mov
insb
push
mov
pop
pop
jge
xor
jl
xor
mov
or
mov
jne
pop
enter
movmskps
es
sbb
push
xchg
mov
cmp
jl
pop
fildl
xchg
push
add
lret
cmp
rcl
pop
mov
ljmp
push
pushl
or
sbbb
cwtl
iret
jo
sub
hlt
sbb
loop
shll
outsl
or
inc
outsb
mov
xor
mov
and
scas
or
dec
rdmsr
and
adc
imul
mov
xor
int
xchg
std
das
lock
lcall
jbe
aas
popf
add
sub
adcl
jmp
sbb
pop
mov
xchg
fidivl
jl
lock
test
mov
xchg
add
rcrl
aas
dec
popf
mov
adc
add
fmul
rcrb
adc
orl
ret
xchg
mov
repnz
xor
shlb
jbe
xchg
sbb
mov
imul
xchg
add
add
jmp
xor
or
dec
mov
cmp
mov
add
cmp
cvtps2pd
inc
scas
cmp
das
jecxz
dec
add
inc
mov
fsubs
outsl
push
sbb
push
iret
or
loop
test
xchg
cs
push
mov
jno
mov
sub
shll
fiaddl
pushf
shrl
leave
lock
sub
mov
in
dec
xchg
sbb
pop
std
push
sub
adc
mov
arpl
sbb
inc
imul
xor
mov
mov
add
push
cli
inc
push
in
jecxz
lea
nop
cmc
jmp
mov
mov
stc
pusha
push
sahf
cmpsl
lahf
jmp
push
clc
das
cmp
imul
in
lods
inc
xor
add
movl
sbb
int
cmp
xor
and
pusha
adc
xchg
or
sub
sub
bound
cmp
rorl
in
sbb
adc
cmpsl
hlt
rcr
inc
sbb
sub
add
inc
iret
push
mov
dec
inc
xor
fildl
xchg
push
outsb
lahf
inc
add
jns
sarl
and
jnp
inc
mov
adc
pusha
lods
pop
add
cwtl
inc
xor
out
lea
dec
enter
cltd
lcall
mov
jo
cmp
fwait
cli
sbb
jmp
imul
pop
aad
aas
mov
gs
sti
add
xor
shl
je
dec
aam
xchg
pop
pop
sub
xchg
sub
fwait
ljmp
push
sbb
xchg
leave
inc
inc
mov
call
pop
icebp
inc
xor
daa
inc
push
cltd
dec
ljmp
stos
stos
sub
push
lcall
aas
orl
inc
fisttpll
mov
repnz
cmc
out
jmp
dec
insl
cmp
mov
cmp
scas
or
scas
iret
movsl
aaa
fsubrl
mov
lcall
sbb
push
push
loopne
inc
cmp
sub
test
int
mov
mov
mov
repz
and
push
ret
and
idivl
loop
dec
mov
pushf
jne
pop
and
adc
cwtl
push
xchg
ljmp
push
pop
add
push
popa
ja
into
xchg
orb
xchg
mov
leave
adc
movsb
push
lahf
xchg
add
out
jbe
ja
pop
clc
mov
popf
fistl
add
xlat
subb
xchg
push
xchg
decb
pop
sbb
inc
add
pushf
lds
outsl
movb
in
and
ss
pop
lcall
adc
dec
add
filds
rorb
js
pushf
cmp
sbbb
xlat
mov
enter
push
and
pop
cli
pop
loope
jbe
push
add
xor
sub
pop
lret
add
jae
fstpl
jne
fdivrl
int
mov
sbbl
pop
shr
xor
notb
sti
and
jno
stos
imull
stos
fsubr
inc
cmpsl
mov
outsb
es
hlt
mov
int
mov
xchg
jle
out
and
addb
jg
xor
out
pop
lock
inc
repnz
cmc
mov
ret
leave
cmp
jg
cwtl
and
sahf
cmp
dec
adc
push
sbb
and
sbb
test
enter
negb
lods
push
pop
dec
ss
ret
mull
sbb
mov
dec
shr
hlt
fbld
addr16
mov
andl
xor
add
dec
lods
push
cwtl
push
sub
fs
out
aas
xchg
pushf
in
lahf
dec
sub
and
dec
les
mov
mov
sub
int
add
mov
and
int3
out
and
cmpsl
addr16
ror
les
cmp
fadds
jae
cmpb
arpl
mov
jnp
mov
jecxz
mov
hlt
and
aaa
mov
fsub
push
xchg
std
fdivrl
scas
rorl
push
shr
fidivrl
mov
cmc
fwait
call
aad
movsb
roll
xchg
sub
movsb
fsubs
jmp
inc
ss
mov
push
adc
nop
mov
mov
or
fnstenv
mov
in
mov
mov
mov
mov
popa
sahf
fldcw
lods
notb
notb
xchg
cmpsb
gs
xchg
lds
push
lea
jl
adc
mov
cmp
pop
fstl
out
test
mov
xor
mov
pop
sub
xor
push
inc
in
or
pop
in
popa
and
loop
mov
stc
jmp
or
sbb
sbb
cltd
push
xchg
sub
mov
add
out
hlt
mov
dec
lret
adc
loopne
jmp
push
inc
cmpsl
mov
add
leave
jno
mov
mov
push
inc
inc
push
xlat
xchg
ss
sub
and
jl
cmp
fnstcw
mov
adc
lret
loopne
cmp
mov
xlat
pop
icebp
loopne
or
gs
xor
jge
outsl
data16
lret
jle
movsb
es
roll
sbb
es
clc
xchg
aaa
pop
lods
inc
lret
test
jnp
pop
stos
jnp
jo
sub
sbb
mov
sbb
movsl
pop
xchg
inc
jp
or
xchg
cmp
mov
jmp
add
mov
push
mov
gs
adc
dec
adc
adc
inc
mov
lea
ds
push
dec
lods
add
arpl
push
scas
ja
xlat
and
dec
fs
mov
lret
fldl
mov
sbb
xor
imull
pop
popf
outsb
sbb
xlat
popf
movsl
adc
inc
sub
mov
les
lods
repnz
xorb
push
outsb
and
lods
insb
cmp
in
mov
sbb
sbb
jbe
in
and
iret
xor
roll
rcrb
mov
sbb
add
sbb
stos
dec
adc
lcall
sarl
cmpsl
andb
add
leave
mov
in
in
popa
aam
enter
adc
popa
dec
cld
xchg
jp
push
xchg
adc
daa
shrb
fcomps
push
jge
adc
movsl
xchg
dec
mov
sbb
mov
jmp
xchg
lods
sti
xchg
adc
inc
xor
icebp
xchg
test
jl
aam
cmc
in
loope
cmp
test
movsl
mov
sbb
ds
mov
xchg
and
cmp
jne
push
xlat
mov
test
inc
push
rorb
scas
cs
insb
cmp
xlat
mov
lahf
js
nop
cli
xor
mov
in
repnz
pop
jns
sbb
mov
jae
mov
rolb
std
and
cmpsb
bound
jmp
shl
pop
fs
popf
jecxz
fadds
adc
lods
js
push
add
xor
cmpsl
sub
xchg
mov
test
das
shll
jg
add
dec
mov
test
fsubrl
xor
mov
cld
or
dec
add
xlat
sbb
stos
and
loopne
insb
jg
xor
xchg
add
push
daa
aaa
sahf
lcall
pop
aad
adc
stos
test
pop
sbb
and
pop
cmp
fdivp
pop
push
add
jns
jecxz
outsb
or
ss
fs
lods
fwait
repnz
cld
lcall
je
jbe
fldl
subb
push
mov
andl
dec
xchg
rcrl
das
xchg
sahf
and
xchg
mov
mov
add
inc
xchg
jb
movsb
inc
dec
jbe
iret
push
mov
dec
das
icebp
and
or
inc
fsubs
push
insl
dec
movsl
cli
loop
jg
cmpsl
dec
jns
dec
aas
ds
mov
and
sub
mov
xchg
test
leave
popa
sub
and
js
les
adc
pop
clc
push
mov
dec
pop
and
stc
push
movsb
loopne
sbb
outsl
lock
mov
lahf
hlt
js
and
jae
out
sahf
xchg
adc
imul
push
roll
inc
dec
fnstenv
mov
sbb
daa
xchg
cmp
or
aad
push
pop
push
mov
mov
icebp
xchg
or
mov
push
inc
enter
fsubr
pushf
xchg
shrl
bound
pusha
sarl
or
mov
cmp
call
sahf
gs
test
inc
inc
cli
cmp
or
pop
pop
add
mov
in
fwait
mov
xchg
xor
cmp
test
in
jecxz
outsb
cli
jp
cs
popf
mov
push
aas
pop
mov
rcr
lods
jno
xor
lahf
push
sub
hlt
pop
insl
test
aad
xchg
vpcmpeqd
xor
lock
mov
pushf
pop
sbb
aaa
pop
adc
lds
int
dec
addr16
or
jns
sti
inc
push
cmp
mov
xchg
jmp
add
sti
add
in
jnp
jnp
imul
xchg
or
pop
jl
mov
mov
in
pop
fcmovnu
mov
cld
add
jnp
mov
sbb
in
sbb
stc
pop
mov
cmpb
pop
and
add
mov
cltd
add
cs
xor
push
mov
test
xlat
pop
dec
mov
cwtl
pop
xchg
jae
push
jbe
xor
fsubrp
in
std
sub
data16
cwtl
shll
rsm
mov
and
jmp
cmp
mov
fldt
js
fsubrs
add
fdivl
jb
adc
jg
shl
xor
adc
dec
push
lahf
pop
inc
cld
adc
sbb
or
std
xchg
out
mov
dec
ret
push
test
scas
dec
stos
jne
or
or
pop
sbbl
test
sub
xchg
push
push
jmp
aaa
jecxz
aaa
and
jp
scas
dec
sub
scas
adc
fs
pop
push
mov
cmp
lods
in
mov
fcoml
aas
xor
inc
scas
jg
inc
movsl
test
add
call
or
scas
pop
xchg
cli
add
leave
jne
lret
add
fwait
push
sbb
arpl
xchg
and
addr16
add
mov
lods
pop
mov
lds
fldl
sub
adc
sub
pop
sub
popa
jno
in
fwait
mov
jp
test
xchg
loop
fs
mov
lret
dec
test
enter
stos
lds
stos
xchg
mov
nop
add
lret
loope
push
ds
push
outsb
cmp
sub
incl
stos
sbb
arpl
call
out
add
jns
dec
rolb
sub
jp
shl
into
mulb
mov
push
pusha
movsl
scas
in
sub
sbb
sbb
lods
xchg
mov
jb
mov
mov
arpl
insl
stc
add
andb
cli
lock
dec
popa
cmpsl
sbb
pusha
jnp
inc
push
ljmp
dec
popa
adc
sub
test
aas
jg
jg
and
adc
pop
sbb
flds
push
mov
xor
and
sarb
cld
sub
sub
sbb
sub
sub
inc
fsubs
sbb
test
pop
mov
movsb
lret
lods
aad
pop
xchg
add
negb
adc
jno
add
mov
mov
aas
lea
stc
xchg
in
xchg
jg
push
push
inc
or
push
ja,pn
push
adc
sub
jb
in
sti
lahf
leave
mov
cli
jae
cmpl
pop
out
pop
sub
pop
es
mov
dec
sbb
aas
adc
fcompl
daa
cmpsb
add
push
or
add
scas
mov
adc
pusha
cmp
cmp
in
fisttps
ret
xchg
insl
sbb
push
out
stos
dec
in
lods
nop
aam
pushf
sub
pop
cmp
iret
aas
call
add
fiadds
sarb
scas
ljmp
inc
fs
or
les
out
fiaddl
jns
jno
leave
int3
dec
fdivr
stos
imul
inc
inc
movsl
dec
mov
push
inc
xor
jnp
add
mov
out
mov
popa
outsb
jle
dec
cli
inc
jbe
jns
inc
jmp
xchg
xchg
stos
divl
pop
movsb
repnz
mov
jmp
and
jle
andl
jmp
testl
xor
jl
lret
mov
jg
mov
stos
daa
out
cmpsb
mov
xchg
insl
lret
inc
xor
leave
pushf
hlt
sbb
xchg
inc
mov
push
mov
les
daa
sti
in
add
les
mov
shll
outsb
js
push
pop
xor
mov
mov
andb
mov
jle
push
push
data16
jecxz
arpl
sarb
pop
stos
shlb
add
ret
add
aas
into
cmp
movsl
mov
push
scas
mov
scas
mov
xor
shr
push
stc
imull
inc
scas
decl
cmovs
xchg
pop
cltd
inc
ds
stos
jle
pushf
or
js
movsb
out
jge
cmpb
sub
push
insl
fimuls
xor
sti
dec
push
mov
in
jmp
xchg
mov
std
mov
outsl
sbb
in
jl
movsb
mov
popf
cs
mov
sub
stos
jp
xor
negb
or
inc
mov
pop
jmp
pop
xor
mov
out
in
dec
lcall
adc
or
aas
push
rcrl
sbb
ficoms
scas
loope
xor
jle
and
pop
pop
or
cmp
cmpsl
aaa
add
icebp
push
in
out
imul
jle
shl
add
mov
insb
mov
ds
xor
lcall
sub
adc
test
inc
test
mov
jo
mov
outsl
pop
sub
out
dec
fisubrs
arpl
dec
addr16
popf
mov
cmc
sarb
dec
push
cmp
sbb
cmp
or
add
mov
mov
cmp
or
jo
jmp
xor
out
add
icebp
inc
int3
push
js
addr16
adc
cli
sbb
xor
in
pop
mov
decb
mov
push
mov
xor
jl
nop
pop
jle
and
dec
sahf
and
lret
add
pop
imul
push
add
icebp
inc
ret
xchg
rcrb
jp
faddp
mov
inc
daa
subb
inc
add
push
leave
movsl
add
push
repz
inc
arpl
loope
shl
or
and
lods
aad
cs
lods
popf
sahf
pop
pop
in
imul
shl
enter
and
pop
xor
xor
shlb
add
mov
mov
jns
out
dec
es
cmp
adc
adc
and
sahf
inc
cwtl
inc
mov
mov
add
adc
xor
pop
or
mov
push
mov
shrl
sub
arpl
orb
add
lea
cmpsb
mov
mov
into
ret
shlb
inc
lahf
inc
cmp
jmp
pop
cmpsb
test
mov
xchg
push
jae
dec
pop
shr
jge
mov
adc
shl
es
or
mov
push
in
jae
xchg
sbb
push
jnp
mov
add
pop
add
movsl
pop
movsb
push
jns,pn
jg
mov
pop
insb
pushf
sbb
imul
inc
mov
ret
push
arpl
cli
cmpsl
fwait
lret
divl
mov
shl
and
mov
mov
sbb
in
repnz
inc
dec
jmp
das
pop
mov
mov
xchg
add
push
fistps
push
and
and
add
shufps
push
rclb
sar
dec
sbb
popa
pop
jmp
movl
fdivp
mov
jl
cltd
pop
mov
sub
stos
add
dec
ror
insl
jecxz
mov
adc
cmp
imul
xchg
adc
and
xor
inc
mov
mov
loop
dec
in
push
rcll
inc
sbb
xchg
or
cmpsb
cli
sub
pop
sbb
adc
xchg
inc
cli
aad
cmp
lcall
sbb
xor
popf
ss
stos
xchg
xchg
xor
adc
sbb
aas
pop
insb
mov
mov
repnz
movsb
out
pop
das
int
adc
frstor
sbb
mov
push
push
data16
mov
jne
inc
addr16
or
inc
pop
sub
push
test
sbb
mov
orb
mov
mov
inc
jge
mov
push
cmpsb
imul
in
dec
mov
leave
gs
push
adc
fistps
mov
mov
add
xchg
jl
insl
mov
xor
add
or
jnp
adc
push
sbb
inc
in
es
insb
fidivrs
and
inc
mov
clc
inc
cmpb
xchg
ja
mov
imul
xchg
or
ljmp
sub
xor
inc
push
adc
add
add
out
lods
push
sti
incb
cld
sbb
cld
cmpsb
ficoml
test
popf
scas
push
pop
pushl
mov
mov
cmp
or
jno
inc
out
shl
call
lods
mov
movsl
and
mov
lods
in
add
jns
mov
cmp
sub
cmp
push
int3
inc
push
and
or
xor
dec
jno
push
lahf
pop
xchg
fdivs
cmp
jb
mov
aad
cmp
adc
sub
lock
mov
sbb
rcl
cltd
and
dec
push
sahf
and
out
lock
outsl
xor
daa
sub
hlt
imul
or
mov
cmpsl
cmc
push
lock
pop
mov
inc
mov
pop
xlat
xchg
rorb
mov
jmp
call
pushf
push
mov
dec
movsb
neg
cmpsb
push
ss
aas
orl
ss
loope
cmp
jle
jge
bound
and
shll
dec
fstpt
into
mov
xor
mov
dec
lods
mov
rcrl
cmc
cltd
pushf
cmp
out
call
pop
idiv
jno
and
cmpb
es
mov
mov
test
enter
testl
dec
xor
clc
dec
rol
aad
xchg
rol
push
and
push
addl
mov
mov
scas
pop
cmp
test
mov
mov
arpl
aad
xchg
iret
lea
inc
sahf
and
mov
xchg
dec
mov
sub
or
jae
xchg
lahf
icebp
xchg
je
xor
movsb
adc
pop
movsl
cld
mov
sbb
xchg
push
aad
stos
xchg
mov
mov
popa
sbb
outsl
aad
sbb
mov
in
orb
push
sti
push
cmp
and
fnstenv
jno
mov
xchg
adc
cmp
fs
xor
cmpsl
xor
xor
ja
push
dec
inc
shll
mov
sub
xchg
popf
mov
icebp
push
jbe
jg
cld
xor
mov
jl
lret
das
loop
mov
pop
jb
and
pop
mov
rclb
pop
fiaddl
add
bound
mov
cmp
xchg
cs
das
cwtl
ss
sbb
push
pop
imul
mov
xchg
push
mov
mov
lods
pop
loopne
filds
aam
jmp
cmc
faddl
and
cmpb
ror
out
push
imul
scas
adc
sbb
test
xlat
daa
cmp
imul
xlat
mov
cmp
push
lds
push
adc
sbb
or
push
pop
iret
dec
push
in
cmpsl
sub
adc
inc
or
ret
xor
movsl
rcll
pop
inc
mov
fiadds
stos
adc
push
cltd
sub
std
pushf
fdivl
cs
mov
inc
mov
cmp
imul
mov
pop
mov
sbb
mov
in
add
and
adc
sbb
mov
mov
fistpl
inc
mov
ljmp
test
mov
rol
into
movsl
sbb
fisttpll
outsb
movsb
je
addl
xchg
rorb
jns
mov
xchg
test
shll
mov
push
aad
out
cmp
jl
add
mov
pop
pop
inc
nop
popa
dec
aaa
mov
fnstsw
cmpsl
push
cltd
scas
pop
mov
pusha
das
aas
mov
sbb
mov
lcall
gs
int3
or
inc
call
and
cli
scas
push
test
test
pop
dec
pop
add
add
pminsw
adc
dec
fs
daa
mov
xchg
fs
cmc
ljmp
sbb
hlt
in
adc
fwait
dec
xor
stos
add
dec
sbb
rorb
mov
fs
push
mov
xchg
movsl
adc
sub
or
and
or
xchg
testl
mov
mov
dec
jb
rcrb
popf
jmp
jmp
icebp
lods
jae
pusha
out
add
mov
jnp
mov
jne
lods
js
xor
lahf
in
pop
mov
mov
inc
push
enter
push
sahf
adc
je
inc
fsubp
jo
add
adcb
mov
fwait
add
movl
inc
mov
loop
ds
push
mov
out
shll
dec
adc
fists
in
jmp
xchg
or
and
jae
iret
loopne
gs
int3
arpl
mov
add
scas
jo
pushf
cmp
mov
incl
test
shlb
pop
icebp
popf
cmp
or
ljmp
jl
jno
cmpl
das
js
repnz
lret
push
jnp
jno
inc
leave
xor
and
mov
xchg
dec
pop
lds
das
mov
xor
bound
mov
push
or
lcall
mov
popf
cmpsb
cmc
loope
enter
jl
and
lret
sub
add
inc
dec
push
lretw
adc
add
xchg
xchg
add
sysret
sub
repz
js
iret
mov
adc
push
jge
rorb
movd
and
mov
enter
xchg
and
jecxz
movsl
pop
mov
push
push
fsubrs
aam
cmc
pop
jl
dec
pop
adc
stos
out
add
pop
jg
lea
mov
pmulhuw
or
jecxz
jg
push
dec
xchg
out
and
mov
add
out
aaa
cltd
insl
js
call
shll
out
mov
add
mov
mov
add
fstpl
data16
lock
stos
fdivrs
add
out
in
pop
push
lcall
mov
mov
jae
adc
movsb
lret
push
mov
cmpsl
push
jge
push
jnp
jmp
ss
add
and
idivb
stos
andl
movsl
inc
cmp
inc
dec
nop
inc
dec
adc
adc
cmp
xchg
xchg
jp
lods
sahf
pop
subl
push
rcrb
xchg
loope
mov
es
sub
sub
xchg
xchg
movsl
dec
pop
add
lret
jge
and
cmpsb
push
leave
dec
or
push
cmp
sahf
mov
cmc
incl
loopne
outsl
dec
push
cmp
test
jno
inc
adc
add
pop
mov
xchg
fldenv
enter
fwait
xchg
fidivl
xchg
jg
cltd
into
in
lea
shll
rcrb
sub
in
mov
stos
outsb
inc
add
stos
inc
mov
fs
aas
sbb
jnp
lcall
leave
rcrb
rorl
xchg
add
pop
sub
jae
xor
daa
mov
out
mov
mov
cmp
push
lret
icebp
data16
ficoml
add
jno
loop
or
les
mov
mov
rcrl
xchg
add
pop
mov
inc
sbb
scas
icebp
shrl
xor
pop
loop
outsb
pop
cli
xchg
xchg
imul
lahf
in
dec
negb
bound
js
dec
xor
lcall
je
cmp
inc
xchg
cltd
sbb
negb
test
sub
outsl
add
jae
and
aas
cmpb
push
push
add
decl
lods
mov
add
and
push
stos
ret
jg
cmc
sub
jnp
cmovo
sbb
inc
dec
jl
or
xorl
mov
repnz
mov
add
sub
dec
scas
ret
dec
cwtl
push
stc
pop
repz
add
cld
enter
push
lcall
cmpsl
popa
inc
dec
in
pop
loopne
ret
testb
lds
rcrl
push
xor
or
lods
cwtl
add
jae
scas
call
sub
in
aas
push
sti
push
sbb
fldcw
lahf
shrb
mov
ret
sti
mov
jnp
aad
push
ror
and
and
mov
mov
or
test
adc
ja
test
hlt
in
ja
mov
rolb
mov
jo
add
xlat
mov
jge
rcll
lret
pop
or
xchg
fildl
loop
mov
shlb
xor
ret
xor
inc
insl
js
sub
push
or
adc
and
fimull
push
jnp
and
inc
mov
mov
jl
pop
aad
int3
mov
mov
inc
add
xorl
inc
mov
aad
jl
lds
mov
movsl
aas
hlt
push
lahf
aaa
pushf
mov
mov
adc
xchg
ret
aad
sbb
mov
add
stc
lret
iret
xchg
sahf
in
jmp
push
mov
xchg
mov
lock
xor
inc
sbbl
jnp
cld
adc
stos
out
jae
add
daa
icebp
or
inc
mov
fyl2x
push
addb
pop
fwait
or
push
pusha
adcb
dec
lods
sub
std
scas
hlt
adc
test
test
and
mov
in
sbb
mov
xchg
inc
mov
mov
adc
les
ret
test
pop
mov
lret
and
les
mov
mov
aam
mov
test
leave
mov
mov
ja
or
mov
sahf
imul
jo
and
and
xchg
test
and
and
mov
psrld
lods
or
aam
pop
movsb
xchg
cmc
pushf
loope
lahf
mov
sbb
incb
dec
and
or
mov
add
ret
push
mov
cmp
sbb
aas
loop
mov
cmp
jecxz
mov
add
call
pop
dec
add
imul
lea
or
shll
sbb
icebp
test
sub
cmp
les
sbb
cli
inc
cmp
mov
in
pop
psubb
add
pop
cltd
rolb
xlat
stos
sbb
jbe
add
pop
movsb
mov
xchg
movsl
in
lret
push
push
ffreep
xchg
movsb
lahf
mov
out
insl
rolb
add
call
and
rolb
mov
or
adc
jp
mov
push
push
cmp
fisttpll
mov
test
orb
adc
xchg
adc
xchg
shr
mov
mov
xor
xor
adc
cltd
push
rolb
xchg
ljmp
mov
lret
int3
xor
test
sti
dec
imul
pop
pop
fnsave
rol
jl
pop
pop
mov
sbb
outsl
and
mov
sti
out
dec
jo
dec
in
movsb
add
adc
push
inc
jp
xchg
push
and
inc
push
cmp
cmpsb
out
subl
or
fsubs
into
mov
push
pop
adc
mov
sbb
popw
dec
lock
int
mov
outsl
add
mov
sarl
mov
and
cld
rclb
lret
xor
mov
fldcw
movsb
dec
adc
out
scas
add
in
pop
add
cwtl
test
outsl
xchg
push
outsl
cmpsb
mov
push
or
and
decl
cmpsb
dec
sarb
push
jnp
leave
shl
addb
sbb
lock
test
mov
and
push
cmp
add
sub
or
out
mov
xchg
cmpsb
dec
jle
rol
cmp
mov
std
repz
push
mov
mov
xor
mov
subl
sub
xchg
enter
xor
xlat
pusha
faddl
insb
icebp
jle
cs
js
sbb
xlat
push
cmp
mov
ss
pusha
scas
adc
cld
subl
and
add
add
subl
sbb
arpl
lahf
insl
cmp
xor
sub
loopne
pusha
lcall
push
out
mov
loop
pop
int
add
pop
dec
mov
xchg
cmpsb
xor
pop
xor
jo
testl
jns
or
sbb
pop
in
lret
clc
inc
mov
dec
sbbl
mov
adc
xchg
dec
aad
xchg
imul
cmpsb
jmp
mov
mov
out
pop
or
out
sbb
clc
lds
orl
je
fistl
sbb
mov
push
imul
inc
rcll
push
mov
jg
daa
cmp
and
xchg
sbb
xor
push
jp
adc
dec
cmc
fimuls
jb
ror
push
push
out
or
stc
jg
lods
das
mov
clc
inc
jno
jmp
out
pop
jle
pop
adc
adc
xor
xor
mov
das
mov
adc
or
push
and
xorl
mov
jno
xor
fisubs
dec
mov
sti
jbe
imul
iret
jg
gs
mov
cmp
and
mov
sub
cmpsl
in
cmc
sbb
in
jb
scas
and
adc
into
out
stos
popa
push
out
stc
aam
stos
test
inc
and
and
add
fwait
jne
dec
mov
sbb
fnstenv
push
cli
lea
or
sti
hlt
cmp
xchg
sbb
xchg
or
add
mov
loopne
inc
fld
pop
movsl
jecxz
sub
repnz
lods
into
push
fwait
or
adc
sub
push
xor
adcb
adc
adc
in
inc
scas
pop
lret
clc
mov
cmp
push
insl
ss
jnp
add
movsl
ret
sbb
push
dec
std
fistpll
lds
sub
pop
scas
mov
dec
mov
sub
in
xchg
testl
jl
insl
ljmp
and
or
xor
pop
push
lahf
enter
push
cmpsl
xor
push
movsb
jl
push
pop
xchg
adc
aaa
int
lret
adc
fildll
sbb
lea
push
stc
icebp
push
xor
gs
lock
inc
jl
fadds
add
rorl
pop
lcall
mov
mov
xchg
mov
arpl
addl
leave
adc
xchg
mov
idiv
outsb
jg
inc
lods
sub
clc
insb
ds
in
jp
or
xor
mov
test
mov
out
xorl
xor
inc
sub
mov
fwait
cmp
scas
mov
pop
lock
add
pop
inc
idivb
inc
sbb
sub
xor
and
sub
xchg
sub
cmp
in
jbe
mov
mov
std
push
inc
and
jae
inc
insl
into
adc
inc
adc
aaa
loopne
lods
out
fwait
int3
ror
int
push
mov
xchg
xchg
mov
inc
mov
gs
inc
inc
decb
pop
lahf
roll
xlat
jmp
or
jae
cltd
leave
xchg
push
or
pop
push
push
lock
pop
sub
adc
mov
loop
repz
add
xchg
and
out
cmp
jmp
nop
repnz
call
add
iret
sub
div
xlat
andl
push
jge
pushf
push
les
popf
fcoml
xor
xor
test
add
shlw
sbb
mov
mov
outsb
sti
push
jne
addb
jmp
xchg
xor
xchg
ss
jne
fdivrl
pop
nop
mov
mov
imul
jecxz
jbe
xor
or
js
cmpsb
push
sti
or
decl
xchg
stos
mov
cltd
cmp
and
dec
lahf
pop
dec
loope
dec
jecxz
or
outsl
sbb
sub
sbb
dec
ds
lea
or
iret
in
add
adc
pop
movsl
popl
sub
cwtl
jno
xor
sbb
cmp
xor
leave
pop
push
mov
aam
into
cli
outsb
mov
push
fnstenv
loope
and
es
mov
outsl
add
rorb
clc
push
rorb
inc
aad
or
jns
pop
test
jmp
aas
out
js
flds
shll
and
outsb
mov
xor
xor
xor
call
insb
inc
or
out
and
icebp
cwtl
fadds
jno
sbbb
pop
sti
aam
loopne
int3
mov
add
popa
out
dec
add
push
test
cmpsb
sahf
and
icebp
mov
jbe
outsb
xor
adc
mov
xor
out
mov
pushf
aad
jecxz
mov
int
xchg
mov
sbb
push
hlt
call
mov
xor
adc
ret
jmp
adc
xchg
lahf
sahf
add
lods
icebp
in
cmp
push
fldl
lret
sub
stos
cli
lods
es
cmpsl
imul
pop
cltd
fisubrl
push
sub
cmp
in
js
and
push
fisubrs
sub
insb
jo
pop
es
icebp
fists
xor
sbb
cwtl
mov
jnp
xchg
pop
mov
sarl
inc
in
inc
adcl
mov
dec
sysexit
inc
xchg
pop
adc
movsl
xchg
cmpsb
push
pusha
jmp
dec
bound
inc
add
pusha
fwait
int3
push
adc
fsubl
imul
sbb
mov
sub
pop
jo
xor
push
xor
push
idivb
mov
xchg
insb
push
ret
mov
dec
inc
aas
enter
inc
sarb
outsb
inc
add
daa
fucom
les
sbb
and
cwtl
lods
push
push
fdivs
divb
inc
jns
cmpsl
dec
das
inc
pop
int3
sub
xor
int
cmpsl
mov
xchg
loope
fldl
cs
loopne
js
mov
or
xchg
stos
inc
lea
movsb
pop
movsl
idivl
adc
addr16
cli
pop
rcl
outsl
push
dec
test
mov
stc
fsubp
add
mov
push
test
sbbl
xor
mov
sbb
dec
int
test
fildll
xchg
jmp
fwait
pop
inc
loop
adc
repz
and
cmp
add
mov
fdivs
inc
mov
push
adc
test
mov
addr16
mov
rcrl
inc
addr16
add
shlb
mov
stc
into
fs
enter
ljmp
cs
repz
mov
jl
movsl
scas
js
sub
pop
cs
test
add
add
or
int3
jae
mov
cmp
cmp
hlt
sub
outsb
mov
outsb
adc
repnz
jle
add
sbb
mov
cmp
aam
in
rorl
pushf
clc
fistps
cltd
cmpsb
and
jmp
lcall
or
jb
cli
nop
leave
sahf
pop
mov
fildll
out
lds
cmc
inc
mov
ficoml
out
push
mov
in
notl
ret
mov
mul
outsb
dec
add
xor
cmp
inc
mov
leave
loope
ret
mov
dec
mov
test
loop
pop
bswap
sub
mov
mov
mov
ss
sar
xorb
fcmovu
sub
pop
and
ljmp
cld
adc
fistpll
dec
in
popa
push
push
fs
leave
fdivl
inc
adc
lods
mov
enter
xchg
adc
push
movd
out
mov
xlat
gs
or
mov
scas
lahf
jl
pusha
call
sti
scas
and
fucom
jg
popa
shl
cwtl
sbb
and
and
aas
inc
cmp
aam
incb
popl
mov
les
cmp
mov
outsb
fs
in
cmp
xlat
mov
adc
push
and
cli
xchg
fsubrs
sub
add
insb
push
inc
sub
mov
sub
mov
sbb
dec
xor
push
and
inc
jne
sbb
sbb
into
push
imul
aas
or
clc
lea
cmp
jmp
fbld
aaa
mov
jecxz
mov
inc
mov
aaa
mov
xor
add
pushf
pop
cmc
insl
jg
adc
cmp
cmpsb
or
popf
xlat
mov
inc
into
cli
ret
sbb
decl
cmp
loope
sar
outsl
mov
fldenv
daa
xchg
jecxz
jnp
jno
xchg
sub
xlat
mov
inc
xchg
ja
and
out
popf
rol
shrb
popa
enter
jg
cwtl
mov
push
pusha
fs
sbb
loopne
cmpsb
clc
repz
sbb
xor
enter
stos
dec
inc
lret
fmul
jo
xchg
loopne
lcall
fisubrl
lcall
int
jl
pop
test
ds
adcb
or
inc
test
test
pop
cmp
pop
test
cs
jmp
cmp
xor
inc
push
jo
xor
add
clc
dec
insb
mov
xchg
fs
cmp
pop
dec
adc
cli
sti
shrl
pop
push
fst
test
js
add
imul
jne
cld
mov
lcall
out
add
cmpsl
mov
cmp
push
and
xor
mov
pop
decl
cmpsl
sbb
cmp
and
dec
and
add
nop
cmc
pop
mov
ljmp
dec
fwait
mov
jbe
xor
mov
sbb
out
push
jl
cmp
mov
icebp
or
sbb
out
fwait
push
mov
pop
outsl
out
icebp
mov
push
mov
cmovp
notl
cs
leave
and
xor
mov
aam
cmp
nop
jb
orb
mov
jmp
test
movsb
adc
mov
lahf
dec
pop
out
pushf
add
in
mov
add
sub
fdiv
enter
sub
cmc
test
mov
mov
xor
lret
xor
int
imul
jecxz
leave
test
jno
sub
sub
dec
or
test
inc
stos
dec
sub
stos
enter
mov
insb
shlb
mov
fstp
sbb
lret
add
shr
and
loope
ds
jp
pushf
xor
fstpl
das
add
sub
xor
adc
pop
not
pushf
pop
jge
xchg
inc
xchg
inc
imul
outsl
movsl
ret
iret
cwtl
ja
dec
push
push
fstps
inc
ds
xchg
push
cmpsl
push
sub
arpl
jo
ret
add
inc
sub
xlat
pop
lret
lds
rol
inc
adc
rcrl
cmp
in
fisubrs
mov
in
int3
jecxz
sahf
xorl
pop
xchg
add
pop
int
insb
rcrb
in
inc
mov
je
fdivs
frstor
add
adc
fiaddl
sbb
scas
mov
or
jmp
in
frstor
js
xchg
pop
pop
push
rcrl
cmp
jb
sub
stos
bound
pusha
xchg
inc
addl
dec
jae
inc
shl
int3
test
push
cmp
mov
sub
fs
or
popf
pop
jp
lahf
or
pop
sub
out
movsb
nop
jecxz
xor
mov
imul
out
jnp
mov
mov
test
mov
cld
ja
lock
in
rcrb
stc
scas
gs
and
out
add
aaa
notb
pop
add
push
sbb
lock
sub
pop
fists
xor
add
sbb
call
jns
mov
mov
ja
cmc
pusha
xchg
cmp
in
add
leave
popa
cltd
adc
mov
cmpsl
stc
xchg
movsb
cwtl
dec
xor
lret
in
mov
xchg
mov
and
xchg
xor
imul
cmpsl
xlat
mov
data16
aam
mov
sti
addb
sar
xor
test
incl
adc
cmp
and
xchg
or
add
mov
addb
add
jecxz
mov
out
bound
pop
dec
mov
cmp
mov
mov
add
adc
call
jl
lods
mov
stos
pop
cwtl
xor
pop
test
lods
xor
sub
xchg
fldenv
test
scas
mov
in
xchg
mov
mov
inc
loope
test
cmp
inc
mov
ret
cltd
mov
push
mov
ds
push
es
int
lods
mov
sbb
inc
and
inc
mov
fisttpl
xor
xchg
in
gs
and
mov
aam
icebp
sar
out
sub
scas
xchg
psraw
jns
adc
lea
xor
aam
push
xchg
lea
test
popa
int
out
mov
inc
xchg
push
cmp
jge
jb
push
int3
lea
inc
cmp
lret
sub
jle
pop
pop
mov
mov
rorb
mov
sbb
dec
fcompl
dec
sub
cmp
cmp
lds
cltd
or
ret
pop
cltd
dec
and
or
aaa
xor
adc
jmp
lock
mov
inc
pusha
dec
cmp
jnp
addr16
sahf
ja
fwait
pop
sarl
pushf
xor
add
pop
pop
sub
hlt
add
or
add
imul
mov
add
or
aad
ud2
cwtl
xor
xchg
scas
int3
jl
adc
mov
pusha
ret
sub
add
mov
add
and
daa
add
adc
xlat
and
add
add
and
add
add
adc
and
or
add
and
add
pop
add
add
xlat
add
andb
inc
add
add
adc
add
inc
add
add
add
inc
inc
add
daa
push
pop
add
add
add
add
pop
add
test
and
add
add
and
pop
add
add
pop
and
adc
add
and
add
add
adc
add
add
std
add
pop
add
and
add
inc
add
add
add
add
add
add
inc
inc
add
and
inc
inc
inc
adc
add
