jne
mov
cmp
jne
and
mov
lea
push
lea
call
mov
test
pop
jne
mov
mov
call
xor
push
mov
lea
mov
call
cmp
je
mov
cmp
jne
mov
inc
push
push
lea
call
cmpl
pop
pop
jne
mov
lea
call
lea
call
lea
call
lea
call
lea
call
pop
mov
pop
pop
leave
ret
pushl
call
test
pop
je
mov
mov
push
pushl
push
call
mov
jmp
mov
mov
push
call
xor
ret
mov
pushl
mov
pushl
mov
push
call
movsbl
add
and
ret
push
mov
push
push
push
push
push
xor
push
lea
mov
call
mov
mov
lea
push
push
call
mov
cmp
mov
jne
push
lea
mov
call
mov
lea
push
push
mov
mov
call
mov
test
jne
testl
mov
lea
push
push
jne
call
mov
test
jne
mov
mov
push
pushl
push
call
mov
lea
call
lea
call
pop
mov
pop
pop
leave
ret
mov
push
push
push
call
cmp
je
xor
jmp
call
jmp
mov
ret
int3
int3
cmpl
push
push
mov
jne
add
add
add
test
sbb
adc
add
test
je
push
push
xor
mov
mov
adc
sahf
pop
adc
and
push
mov
call
pop
pop
mov
call
test
je
mov
mov
push
push
push
call
test
js
mov
cmp
je
test
jne
test
je
mov
mov
push
call
mov
test
mov
jne
test
je
mov
mov
push
call
pop
pop
ret
orb
jmp
mov
jmp
push
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmpl
jne
cmpl
jne
cmpb
jne
xor
pop
ret
mov
mov
mov
call
xor
pop
ret
sub
push
mov
push
push
mov
mov
push
mov
mov
test
movl
movl
mov
je
mov
mov
mov
mov
mov
lea
push
push
lea
call
mov
mov
add
test
jne
test
jne
test
jne
mov
mov
mov
push
call
mov
test
mov
jne
mov
push
call
add
push
mov
call
mov
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
cmpl
jbe
xor
mov
movl
lea
mov
push
push
call
push
mov
call
mov
add
mov
mov
push
add
push
push
call
test
je
mov
mov
lea
lea
lea
cmp
je
lea
mov
jmp
lea
test
je
push
movl
movl
movl
call
mov
add
add
cmp
jne
mov
addl
mov
add
cmp
mov
jb
xor
pop
pop
pop
pop
add
ret
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
cmp
je
mov
test
push
je
mov
lea
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
je
mov
lea
push
push
push
movl
call
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
add
mov
cmp
jne
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
movl
pop
xor
pop
ret
cmp
je
cmp
je
xor
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
mov
add
call
ret
int3
push
mov
push
mov
imul
xor
cmp
mov
jg
sub
js
push
mov
cmp
jge
movzwl
add
cmp
ja
cmp
jb
add
movzwl
shl
add
sub
jns
pop
pop
pop
ret
cmp
jb
cmp
ja
and
shl
lea
jmp
lea
cmp
jbe
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
cmp
push
mov
jne
test
jle
xor
jmp
lea
movzwl
cmp
ja
cmp
jb
add
cmp
jl
push
xor
cmp
setne
push
push
xor
add
mov
call
mov
push
mov
mov
call
mov
push
mov
mov
call
add
cmp
je
mov
or
shl
or
mov
shl
or
pop
pop
pop
mov
mov
pop
pop
ret
cmp
jb
cmp
jbe
add
cmp
jbe
pop
xor
pop
pop
ret
cmp
je
pop
xor
pop
pop
ret
mov
shl
or
mov
mov
shl
or
mov
shl
or
jmp
push
mov
and
mov
sub
push
xor
cmp
push
push
je
mov
push
lea
mov
call
mov
mov
mov
mov
lea
orl
testl
jne
mov
mov
mov
mov
mov
call
add
mov
mov
mov
test
je
mov
lea
push
push
pushl
push
push
call
mov
test
je
mov
test
mov
je
mov
mov
push
call
mov
mov
call
mov
lea
call
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
cmpl
jne
mov
push
mov
push
mov
testb
push
je
mov
sub
je
push
call
add
add
mov
xor
pop
pop
pop
ret
mov
lea
lea
push
call
add
test
je
mov
movl
mov
push
lea
push
push
call
add
movb
mov
pop
pop
xor
pop
ret
mov
push
lea
mov
push
lea
jmp
push
call
pop
add
cmp
jne
pop
pop
ret
pushl
call
ret
mov
call
mov
ret
push
mov
push
push
decl
cmpl
jne
push
movl
lea
mov
push
mov
mov
add
shl
add
cmp
je
mov
jmp
mov
lea
call
mov
call
addl
cmp
jne
mov
push
push
push
push
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
lea
call
mov
call
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
mov
xor
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
push
mov
push
andl
push
push
lea
call
mov
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
mov
pushl
push
call
lea
mov
call
mov
pop
leave
ret
mov
cmp
mov
je
cmp
je
sub
neg
sbb
not
and
mov
ret
mov
add
jmp
push
mov
cmpl
jne
pop
ret
mov
call
lea
sub
xchg
add
add
sub
inc
add
add
pop
xchg
add
add
sbbl
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
andl
andl
lea
call
lea
call
lea
call
lea
call
push
lea
push
push
call
push
lea
push
push
call
add
mov
ret
int3
int3
sub
mov
push
push
xor
push
lea
lea
mov
movl
mov
mov
mov
call
mov
cmp
je
mov
lea
push
push
mov
call
cmp
je
mov
mov
lea
push
push
push
mov
call
cmp
jne
mov
cmp
je
mov
lea
push
push
push
mov
call
test
js
cmp
jne
push
lea
push
push
call
mov
add
cmp
je
testb
jne
mov
lea
push
lea
push
lea
push
push
push
call
mov
or
shl
or
add
shl
or
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmp
je
testb
jne
mov
lea
push
lea
push
lea
push
push
push
call
mov
or
shl
or
add
shl
or
mov
mov
test
pop
jne
test
je
mov
push
call
add
mov
push
push
call
add
cmp
mov
jne
mov
mov
shr
and
cmp
je
mov
lea
push
push
push
mov
call
test
js
mov
cmp
je
mov
lea
xor
and
xor
lea
call
pop
pop
add
ret
mov
lea
push
movl
lea
movl
mov
mov
push
push
call
mov
mov
mov
push
push
push
call
jmp
mov
jmp
push
cmpl
jne
cmpl
je
mov
pop
ret
push
call
test
pop
je
call
mov
push
mov
call
call
test
jns
xor
pop
ret
xor
jmp
push
mov
sub
push
xor
cmp
push
push
jne
call
test
je
push
push
push
call
add
test
js
push
mov
mov
mov
call
cmp
pop
je
movl
mov
lea
call
cmp
je
push
lea
call
mov
mov
lea
push
pushl
push
push
call
lea
mov
push
lea
push
lea
movl
mov
call
test
jne
mov
mov
push
mov
add
lea
mov
push
lea
push
lea
movl
mov
call
test
jne
mov
lea
push
mov
mov
push
call
test
mov
jne
call
or
test
movl
mov
movl
je
or
or
movl
mov
movl
add
cmp
mov
leave
adc
add
je
lret
adc
mov
add
cmp
test
movl
mov
movl
jne
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
push
mov
mov
pop
push
mov
and
or
pop
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
or
pusha
loopne
adc
add
shr
adc
add
clc
xchg
mov
loopne
adc
add
enter
movl
mov
movl
mov
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
and
or
or
or
or
or
or
add
mov
add
and
adc
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
inc
add
leave
adc
add
add
add
sbb
lret
adc
add
lock
jecxz
adc
add
and
lret
adc
add
sbb
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
or
or
or
or
or
or
or
or
or
or
or
and
add
or
or
or
or
or
or
or
mov
mov
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
sub
lret
adc
add
adc
mov
leave
adc
add
push
icebp
lret
adc
add
xor
out
adc
add
je
lret
adc
add
js
mov
leave
adc
add
cwtl
icebp
lret
adc
add
fs
adc
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
in
lret
adc
add
adc
mov
leave
adc
cmp
or
or
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
leave
adc
add
enter
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
jmp
jmp
lret
adc
add
push
mov
adc
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
or
or
or
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
and
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
movl
add
add
cmp
lret
adc
add
add
jmp
adc
add
pusha
test
jmp
adc
mov
leave
adc
add
test
lret
adc
add
cmp
in
leave
adc
add
test
lret
adc
add
sub
in
leave
adc
add
int3
test
in
leave
adc
xchg
mov
leave
adc
add
lock
in
leave
adc
xchg
mov
leave
adc
add
adc
lret
adc
add
pop
or
leave
adc
add
cmp
lret
adc
add
adc
in
leave
adc
add
add
lret
adc
add
je
mov
leave
adc
add
test
lret
adc
adc
movl
movl
mov
movl
movl
or
or
or
or
add
or
and
or
or
or
or
and
and
or
and
and
or
or
or
or
mov
push
mov
mov
mov
inc
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
add
and
lret
adc
adc
adc
add
xor
lret
adc
add
jl
mov
out
leave
adc
add
cmp
lret
adc
add
clc
cld
mov
icebp
leave
adc
add
inc
stc
lret
adc
add
enter
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
add
or
and
or
or
or
or
or
and
and
or
and
or
or
or
or
or
or
push
pop
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
sbb
lret
adc
add
and
mov
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
mov
movl
movl
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
add
add
add
movl
movl
movl
movl
add
test
mov
hlt
leave
adc
add
mov
lret
adc
add
cwtl
mov
hlt
leave
adc
add
cwtl
cld
lret
adc
add
mov
jl
leave
adc
add
cld
lret
adc
add
push
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
add
add
movl
movl
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
add
add
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
add
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
add
add
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
add
test
mov
cld
leave
adc
add
jo
int3
adc
add
cwtl
mov
cld
leave
adc
add
js
int3
adc
add
mov
in
cld
leave
adc
add
addb
std
leave
adc
mov
std
leave
adc
add
mov
sub
leave
adc
test
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
pushf
push
int3
adc
add
enter
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
adc
int3
adc
add
mov
mov
lret
add
sub
int3
adc
add
int3
in
mov
add
adc
add
dec
pop
int3
adc
add
pushf
in
mov
add
adc
add
push
pop
int3
adc
add
lods
in
mov
add
adc
add
pop
pop
int3
adc
add
mov
sbb
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
and
and
or
and
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
cwtl
mov
push
lret
add
js
int3
adc
add
nop
cltd
mov
add
in
lret
or
adc
add
sbbb
push
lret
add
nop
or
adc
add
add
mov
push
lret
add
cwtl
or
adc
add
mov
mov
pop
lret
cmp
or
or
or
or
and
or
or
or
or
or
or
or
add
and
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
inc
add
lret
add
insb
or
adc
add
mov
mov
lret
add
je
int3
adc
add
dec
mov
lret
add
cwtl
or
adc
add
call
sbb
movl
movl
mov
movl
movl
mov
add
call
cmp
or
or
or
add
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
mov
mov
movl
mov
mov
movl
movl
mov
add
les
int3
adc
add
insb
out
adc
adc
add
rorb
int3
adc
add
pop
out
adc
adc
add
fmuls
int3
adc
add
jl
mov
or
adc
add
loopne
int3
adc
add
mov
mov
or
adc
add
call
add
pushf
out
adc
adc
add
lock
adc
add
lods
out
adc
adc
add
clc
or
adc
add
int3
out
adc
adc
add
add
int3
adc
add
mov
sbb
movl
movl
mov
movl
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
sbb
int3
or
les
int3
adc
add
or
lock
call
or
adc
add
jo
mov
push
lret
add
orb
adc
add
nop
cmpl
add
nop
or
adc
add
clc
xchg
push
lret
add
mov
add
call
sbb
movl
movl
mov
movl
add
enter
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
or
or
mov
mov
movl
movl
mov
movl
call
xor
mov
add
ret
je
mov
lea
push
pushl
mov
push
call
add
inc
cmp
jl
xor
push
call
inc
cmp
pop
jl
call
push
push
call
movzbl
push
push
mov
call
movzbl
add
mov
movl
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
mov
push
mov
je
mov
js
mov
add
test
jne
lea
push
push
mov
movl
movl
movl
mov
movw
mov
call
lea
push
lea
mov
movl
call
add
push
lea
mov
call
test
je
test
je
mov
mov
lea
mov
test
jne
test
jne
test
je
mov
cmp
je
cmp
je
mov
mov
add
push
add
add
add
rcrb
and
add
add
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
call
test
je
mov
mov
cmp
jne
mov
test
je
mov
mov
mov
lea
cmp
je
lea
movzwl
lea
cmp
movzwl
jbe
mov
add
add
cmp
jne
pop
pop
pop
pop
ret
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
jne
lea
push
lea
push
push
push
push
mov
movl
call
add
xor
test
pop
js
mov
mov
push
mov
push
mov
push
mov
push
mov
push
push
push
call
mov
add
test
js
mov
pop
ret
int3
push
mov
mov
push
push
mov
mov
mov
xor
test
je
mov
add
test
jne
sub
je
mov
mov
mov
mov
mov
mov
push
call
test
je
mov
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
mov
and
or
mov
mov
mov
mov
mov
mov
mov
mov
sub
push
call
mov
push
call
lea
call
mov
mov
test
jne
test
jne
mov
push
push
call
add
test
je
mov
mov
push
push
call
add
test
je
pop
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
xor
movl
mov
movl
mov
cmp
push
push
je
lea
push
mov
mov
mov
mov
push
push
mov
call
mov
test
mov
je
mov
mov
lea
mov
mov
test
jne
test
jne
push
call
mov
mov
mov
and
add
or
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
call
test
je
movl
orl
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
mov
test
push
mov
je
mov
lea
push
push
push
mov
call
test
jns
mov
mov
test
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
call
mov
mov
shr
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
movzbl
shl
xor
and
xor
mov
mov
shr
and
test
je
mov
mov
lea
push
push
push
call
test
js
mov
movzbl
shl
xor
push
lea
and
xor
push
push
call
add
cmpl
mov
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
mov
mov
shr
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
movzbl
mov
shl
xor
push
and
xor
lea
push
mov
mov
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
mov
test
movzbl
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
shr
mov
mov
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
movzbl
shl
xor
and
xor
mov
mov
shr
and
test
je
mov
mov
lea
push
push
push
call
test
js
mov
shl
xor
and
xor
mov
test
je
mov
lea
push
push
push
mov
call
test
js
cmpl
je
mov
lea
xor
and
xor
mov
test
je
mov
mov
lea
push
push
push
call
test
js
mov
movzbl
shl
xor
and
xor
mov
test
je
mov
lea
push
push
push
mov
call
test
js
mov
shl
xor
mov
and
xor
call
lea
push
push
call
add
push
lea
call
test
je
movw
mov
test
mov
mov
pop
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
shl
xor
xor
and
xor
mov
and
xor
test
je
mov
mov
lea
push
push
push
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
js
mov
shl
xor
and
push
xor
mov
call
mov
test
mov
jne
test
je
mov
push
call
add
mov
test
jne
test
je
mov
push
call
add
pop
pop
add
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpl
je
push
mov
push
mov
push
push
push
call
inc
add
pop
pop
pop
ret
test
je
lea
push
push
mov
call
test
jns
mov
test
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
mov
movl
call
test
jne
mov
mov
call
test
jne
push
push
mov
call
pop
pop
pop
pop
ret
mov
cmp
mov
cmp
mov
add
cmp
lods
inc
add
mov
mov
add
push
call
pop
mov
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
cmp
je
mov
cmp
jne
mov
call
cmp
jne
mov
call
test
jg
mov
call
cmp
jne
mov
call
test
jg
xor
pop
ret
mov
pop
ret
cmp
je
jmp
cmp
jne
mov
call
fmull
push
fstps
flds
fstps
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
mov
push
push
mov
push
lea
lea
cmp
je
mov
mov
test
je
mov
mov
mov
mov
mov
call
mov
addl
add
cmp
jne
mov
addl
mov
pop
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
test
push
jne
mov
test
je
cmpl
je
mov
pop
pop
ret
push
call
add
test
je
movl
movl
movl
mov
test
mov
je
mov
mov
push
call
mov
pop
pop
ret
mov
mov
call
test
je
enter
pushf
xor
jmp
push
mov
mov
call
test
jne
pushl
mov
push
call
xor
pop
ret
push
mov
and
sub
push
push
mov
call
test
jne
and
mov
mov
lea
push
push
call
test
js
mov
test
je
andl
mov
lea
push
push
call
test
js
mov
mov
lea
push
push
call
cmpl
jb
mov
andl
mov
lea
push
push
call
mov
push
call
mov
pop
mov
test
mov
jne
cmp
je
lea
push
push
push
pushl
call
add
test
je
cmpl
jg
pushl
call
push
call
pop
pop
xor
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
push
push
mov
mov
test
jne
cmpl
je
push
call
test
je
mov
mov
mov
test
je
cmpl
je
mov
test
jne
pop
mov
pop
ret
call
jmp
push
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
push
push
mov
mov
mov
movl
mov
push
xor
mov
mov
push
lea
lea
mov
mov
mov
movl
mov
mov
call
cmp
je
mov
mov
mov
lea
push
push
call
test
mov
js
cmp
je
lea
call
lea
call
lea
call
xor
mov
pop
pop
pop
pop
xor
call
inc
add
or
mov
push
lea
mov
lea
push
lea
mov
mov
call
mov
test
js
mov
mov
lea
push
push
mov
call
test
mov
js
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
push
call
mov
mov
push
call
mov
push
lea
lea
movl
mov
mov
call
cmp
je
mov
cmp
mov
mov
mov
mov
jne
mov
cmp
jne
mov
call
lea
mov
mov
call
mov
push
lea
call
lea
xchg
scas
inc
add
add
push
lea
mov
call
test
js
mov
cmp
je
addl
push
lea
call
mov
mov
lea
push
push
call
mov
push
lea
call
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
lea
push
push
mov
call
cmp
jg
cmp
cs
inc
add
decl
dec
and
push
mov
push
call
test
mov
js
cmp
je
mov
cmp
je
lea
push
mov
push
mov
mov
mov
push
push
mov
call
cmp
jne
lea
lea
push
push
mov
lea
mov
mov
movl
movl
mov
mov
call
add
push
lea
push
call
inc
add
add
add
out
cmp
test
jne
mov
mov
lea
push
mov
push
push
mov
call
cmp
mov
je
mov
push
mov
mov
call
mov
addl
mov
cmp
jge
addl
mov
call
inc
add
cmpl
jge
lea
mov
jmp
call
mov
mov
add
adc
cmp
jg
mov
jl
cmp
jbe
jmp
lea
call
mov
mov
push
push
call
add
lea
call
lea
call
lea
call
jmp
push
mov
lea
call
jmp
push
mov
lea
call
jmp
int3
push
mov
and
sub
fildl
lea
push
lea
fstpl
push
fildl
mov
fstpl
fildl
fstpl
fildl
fstpl
call
fldl
lea
fstpl
push
fldl
fstpl
fldl
fstpl
fldl
lea
push
fstpl
call
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
sub
push
mov
push
mov
push
push
mov
mov
mov
rep
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
cmp
mov
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jbe
inc
add
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
jne
mov
mov
mov
cmp
jne
movzbl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzbl
mov
mov
xor
mov
mov
jmp
lea
mov
movzbl
movzbl
lea
push
lea
call
mov
call
push
lea
mov
push
lea
push
call
mov
add
add
cmp
jl
pop
pop
mov
pop
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
add
add
test
je
testl
je
push
call
add
mov
pop
pop
xor
call
add
ret
push
call
add
jmp
push
mov
mov
mov
push
call
add
jmp
push
mov
sub
cmpl
je
leave
ret
cmpb
jne
cmpl
je
push
push
lea
call
lea
mov
mov
call
mov
push
push
call
mov
fstpt
add
add
addb
add
add
add
add
add
pop
test
add
xchg
andb
add
fildl
pushf
add
mov
mov
cmpsl
add
add
add
lret
icebp
add
bound
nop
mov
in
call
pusha
add
add
add
leave
add
jne
add
add
je
add
cltd
xorb
jo
add
add
add
lods
mov
add
push
std
fcoml
jo
in
pop
add
add
fsubrp
add
pop
roll
stos
iret
in
popf
add
push
mov
add
push
push
lea
push
push
push
lea
push
push
push
push
call
add
arpl
addl
mov
jecxz
add
add
leave
add
movsl
add
out
xchg
add
jecxz
in
in
stc
add
add
imul
add
jecxz
flds
add
out
add
add
push
gs
add
mov
add
add
jo
add
lret
add
stos
mov
hlt
lea
pop
movl
popl
push
lea
push
call
int
js
jae
repnz
cmc
incb
iret
jb
add
pop
aam
mov
cltd
pushf
cmpsb
add
add
loop
mov
push
add
add
pusha
add
cmc
mov
testl
add
mov
add
fildll
push
int
rolb
push
rclb
pusha
movsb
mov
lea
pop
push
push
push
call
fnstsw
je
add
jo
add
test
mov
les
rcll
clc
jnp
stos
loopne
pop
xlat
add
cwtl
add
add
add
aam
add
push
mov
add
push
int3
add
push
or
add
push
jb
add
pop
add
add
add
jl
mov
add
shrl
arpl
pop
push
push
push
push
push
push
lea
push
push
push
push
call
add
add
test
cmpsl
subb
push
icebp
fadds
ficomps
add
or
lahf
add
add
mov
les
rolb
leave
test
test
fs
jmp
mov
repnz
add
add
js
lock
add
add
add
aam
jne
les
push
push
push
lea
push
call
lret
stc
push
ror
mull
add
add
add
add
add
negb
scas
fcom
fadd
scas
add
aad
mov
fadds
jno
add
les
outsl
je
mov
add
fdivr
xchg
iret
add
add
push
sahf
lds
cmpsl
jl
jns
add
jle
negb
iret
hlt
test
mov
cli
fisubl
sahf
pop
push
push
lea
push
push
push
push
call
push
fsub
add
add
lret
add
push
int3
pop
add
lods
test
jl
add
gs
iret
add
add
add
add
scas
push
icebp
add
mov
fmulp
mov
popa
mov
jmp
test
push
mov
mov
add
push
lahf
xchg
popf
add
xchg
jecxz
clc
aam
add
add
mov
mov
add
add
add
ja
fchs
add
add
js
fiaddl
mov
lea
pop
call
call
push
push
lea
push
push
lea
push
lea
push
push
push
call
bound
push
xlat
fwait
mov
addr16
add
insb
lret
cltd
add
cmpsl
shl
ja
fadds
pop
js
rclb
lods
test
fcoml
add
add
call
mov
add
lret
add
add
add
ljmp
add
lret
int3
lea
pop
call
jmp
push
push
push
push
push
push
push
push
push
call
test
xchg
cmpsb
xchg
loopne
pushf
add
fs
jbe
add
leave
pop
add
iret
push
add
pop
add
add
enter
add
in
xchg
xchg
add
fwait
cmpsl
ret
add
add
add
add
add
jo
in
shlb
mov
mov
add
add
in
add
add
add
icebp
mov
xchg
add
lea
pop
ret
mov
mov
push
push
lea
push
push
call
iret
add
push
out
add
add
pop
lea
sarb
test
out
loope
jns
mov
pop
int
push
add
icebp
add
add
pop
mov
ljmp
jmp
mov
add
add
movb
add
add
add
in
insb
push
in
mov
call
lea
pop
add
push
push
push
lea
push
push
push
push
call
sahf
cli
loopne
test
xorl
jnp
add
add
add
add
lods
add
add
aad
je
stc
jl
add
and
mov
cmc
popf
add
xchg
pop
pop
add
jo
jne
lret
add
ljmp
lods
testb
jge
add
sahf
mov
fmull
ret
add
add
add
push
push
push
push
push
push
lea
push
push
call
add
flds
mov
call
add
add
mov
push
lods
add
mov
call
in
addb
jge
enter
add
in
jle
lret
add
add
pop
add
add
add
add
cmc
add
cmpsb
mov
push
push
rolb
mov
int
jnp
rcr
popf
add
aam
bound
pop
mov
push
push
push
lea
push
call
add
cmpsl
mov
ja
fucomp
add
in
arpl
pushf
pop
mov
filds
icebp
lret
jle
add
jbe
hlt
add
loope
out
mov
push
add
add
js
scas
and
pusha
and
xchg
push
out
add
mov
push
filds
add
add
out
test
xchg
repnz
xorb
mov
int3
lea
pop
xor
push
lea
push
push
push
lea
push
lea
push
call
jl
pushf
mov
in
addl
add
sar
pop
add
push
int
std
cmpsb
and
mov
mov
jb
xchg
test
add
xchg
add
add
stos
mov
add
add
add
je
jae
add
mov
add
push
jo
les
mov
add
add
add
iret
add
lds
popl
mov
test
mov
repnz
mov
lea
pop
add
push
push
lea
push
push
push
push
push
push
push
call
add
test
add
add
add
neg
xchg
mov
enter
stos
mov
add
bound
lea
rolb
in
add
mov
add
add
xchg
add
cld
add
std
fiadds
ret
aad
add
add
xchg
std
data16
mov
add
fiadds
std
xchg
push
mov
add
add
xchg
mov
lea
pop
add
push
lea
push
lea
push
push
push
push
push
push
push
call
add
add
loop
add
loope
add
test
add
add
add
roll
pusha
add
add
js
int
add
ret
add
mov
jno
out
in
shr
mov
mov
cmpsl
js
add
add
xchg
popf
aam
add
add
fwait
cmpsl
int
xlat
add
imul
add
pop
call
push
push
call
mov
add
add
divb
add
out
add
fadd
lods
jbe
cli
mov
mov
push
out
ja
push
out
out
add
add
add
arpl
data16
js
les
jmp
push
test
test
fldl
popf
popf
push
add
test
add
jae
mov
lea
pop
mov
push
push
push
call
nop
mov
cmpl
rolb
mov
jp
outsl
add
add
add
add
add
jno
out
push
fldcw
pushf
add
add
add
mov
jge
lcall
add
add
mov
popf
add
test
xorl
aam
bound
pop
xor
push
push
push
lea
push
lea
push
call
push
aam
add
addl
cmpsl
hlt
add
lods
sahf
jbe
add
add
test
add
add
add
data16
sti
cltd
mov
scas
sti
add
clc
add
sti
out
roll
mov
les
add
lock
add
xchg
add
add
pop
push
lds
lea
pop
add
push
push
add
xor
push
or
inc
add
add
inc
dec
shr
sub
xor
rol
shl
pop
ror
add
not
pop
push
push
push
push
push
call
mov
ljmp
fsts
pop
pop
add
insb
mov
andb
add
ljmp
add
add
push
stos
addl
add
mov
add
mov
add
add
fucomi
call
add
loop
sahf
add
add
jbe
shll
into
test
fmull
jne
push
push
push
push
push
push
push
call
out
push
add
pop
add
mov
in
jecxz
add
stos
shll
xchg
pop
je
add
movsl
add
push
scas
cld
lahf
mov
mov
aad
in
roll
mov
jl
lret
pop
cmpsl
lods
shlb
popl
popf
ljmp
cmc
subl
add
push
add
add
mov
add
add
add
add
pop
call
push
push
push
lea
push
call
add
add
add
add
js
add
add
jnp
mov
add
icebp
mov
add
xchg
add
mov
add
arpl
hlt
xchg
data16
add
mov
or
add
xchg
into
out
lret
flds
add
lret
out
fisubs
call
add
push
jnp
in
lods
add
jmp
add
data16
add
fmulp
add
mov
lea
pop
mov
push
lea
push
lea
push
push
push
call
add
not
add
mov
rcl
mov
add
add
lret
add
jae
add
xchg
add
fdiv
iret
add
int
add
add
hlt
imul
mov
add
add
mov
add
rcr
sti
add
pop
add
mov
fmull
inc
loopne
add
add
push
push
call
pusha
add
in
and
xchg
add
stc
jmp
add
cltd
add
pop
add
add
in
add
add
add
add
ja
push
add
pop
pop
iret
add
add
jmp
add
push
ljmp
popa
filds
mov
roll
popf
add
test
fldl
add
pop
add
cmpb
lea
pop
pushl
pushl
call
push
lea
push
call
iret
imul
mov
add
arpl
enter
jmp
add
fcompl
pusha
lahf
test
imul
pushf
pop
add
jl
mov
add
jno
push
add
mov
enter
jno
add
icebp
cwtl
lahf
add
add
outsl
lods
jecxz
ljmp
add
hlt
fwait
add
testb
movsl
movsb
add
repnz
pop
pushl
push
push
push
push
push
push
push
call
std
mov
add
add
xchg
flds
mov
add
cwtl
add
lods
add
add
add
in
add
add
popa
add
add
addb
ja
add
les
add
add
add
add
ret
add
add
loope
roll
jnp
push
popa
add
add
push
add
scas
mov
mov
jno
cli
lock
mov
testl
data16
pushl
push
push
lea
push
push
lea
push
lea
push
push
lea
push
push
call
leave
aam
mov
add
cwtl
out
cld
ret
add
add
mov
add
jns
call
cmpsl
shlb
mov
cltd
add
jne
mov
loop
mov
flds
out
push
add
imul
add
push
add
push
fidivl
pop
add
pop
mov
add
popl
add
add
add
jmp
lea
pop
call
push
push
dec
push
or
inc
add
shl
add
sub
add
not
ror
rol
pop
not
shl
pop
pushl
push
lea
push
push
push
push
call
add
out
xchg
out
add
sahf
fstpl
rolb
add
pusha
lret
xorl
les
push
add
add
insb
call
add
out
rcr
js
add
pop
add
mov
out
mov
add
ffreep
xchg
push
aam
mov
movl
test
cltd
in
jns
add
add
mov
lea
pop
call
push
lea
push
push
push
push
call
mov
fcomps
xchg
pop
add
movsl
push
addb
shlb
sub
enter
add
xchg
add
add
je
add
mov
pop
jb
je
bound
out
add
imul
jecxz
nop
fdivl
out
cld
push
add
jge
add
enter
add
mov
add
cwtl
jne
shl
add
lock
mov
mov
pop
add
adc
push
push
push
shr
shl
push
and
add
ror
ror
sub
inc
sub
add
pop
ror
sub
dec
add
pop
push
push
push
push
push
push
call
ljmp
out
in
add
lods
add
add
sti
scas
add
mov
lahf
pop
add
xchg
add
add
add
icebp
add
add
in
jns
add
mov
xchg
add
scas
add
rolb
fildl
xchg
pop
add
mov
in
mov
add
hlt
ret
movsb
add
imul
les
push
push
push
call
add
cwtl
cwtl
xchg
add
ja
add
mov
mov
xlat
add
fidivl
add
push
add
rcrl
stos
add
lret
ret
fcomi
mov
push
pop
call
imul
add
jecxz
add
ret
enter
addl
mov
add
lods
imul
pop
push
push
lea
push
push
push
call
clc
mov
movsb
fsubrs
add
mov
add
data16
add
add
mov
in
xchg
clc
push
pop
fsubl
pop
add
pusha
add
pop
jno
lcall
add
fnsave
mov
cmpsl
jl
add
stc
addl
add
mov
stos
into
add
jge
shrl
loope
roll
lret
add
jnp
push
add
pop
call
mov
push
push
push
lea
push
push
call
popl
cmpsb
jge
rorb
imul
add
push
cmpsb
stc
add
add
add
add
add
jbe
jbe
add
cli
mov
mov
loopne
add
add
pushf
les
jle
add
lds
movsl
mov
in
lret
add
add
int3
lea
pop
push
push
push
lea
push
push
call
cld
add
enter
add
add
add
add
pop
cld
in
in
lret
js
les
mov
data16
mov
cwtl
pop
lods
push
out
in
add
add
mov
add
add
insb
jmp
pop
pusha
add
add
fidivrl
add
mov
push
add
add
add
mov
add
fdivrs
pusha
adc
pop
in
push
push
push
lea
push
lea
push
call
push
rol
add
push
xchg
push
push
add
add
add
add
mov
rolb
gs
loope
imul
rolb
int
shl
je
roll
roll
lock
xchg
add
mov
pop
hlt
add
ja
add
add
mov
mov
xchg
ljmp
add
push
add
add
lret
stos
add
in
pop
lods
pop
repnz
fmull
pop
in
ret
add
add
add
push
push
push
push
lea
push
push
push
call
xchg
add
add
add
add
testb
iret
add
add
repnz
out
add
add
add
add
jecxz
add
fiadds
push
add
push
jmp
gs
int
add
lcall
lcall
stc
push
xchg
add
pop
mov
xor
push
push
push
push
push
lea
push
lea
push
call
fcmovb
xchg
xchg
mov
sahf
mov
add
add
mov
add
add
add
add
fstp
mov
add
add
add
insb
fsts
add
shl
jno
push
addr16
leave
add
addl
add
jl
jmp
sti
add
add
sahf
mov
mov
mov
ret
add
pop
add
push
lea
push
push
push
lea
push
lea
push
lea
push
push
lea
push
push
call
iret
call
cmpsl
test
push
bnd
add
stos
cmpsb
pop
std
add
mov
jp
add
add
mov
add
add
add
add
add
gs
loop
add
mov
loop
int3
lret
fwait
jp
fs
in
add
aad
add
mov
test
push
jno
mov
mov
data16
mov
push
push
push
lea
push
push
push
call
add
add
lods
jp
mov
pop
cli
fst
jb
add
xchg
add
clc
add
enter
faddl
add
jne
scas
add
in
pop
mov
push
add
xchg
pop
cld
xchg
add
lret
push
add
add
add
add
push
fld
add
andb
pop
scas
movsb
mov
add
add
add
lea
add
add
add
aam
bound
xor
push
lea
push
push
call
add
add
fwait
lea
nop
add
fucomp
lds
inc
movl
add
xlat
mov
add
mov
cwtl
jo
lods
stos
call
add
loop
mov
mov
outsl
mov
mov
add
jae
add
xchg
test
add
stos
add
add
test
xlat
leave
adc
out
outsl
add
add
mov
lea
pop
add
push
lea
push
push
call
stc
add
add
add
jo
xchg
adc
mov
add
mov
in
add
add
push
pop
add
add
cmpsb
mov
mov
mov
mov
push
mulb
add
add
add
sahf
pop
add
movsb
mov
add
mov
cmpsl
add
out
jnp
add
add
stos
fs
push
faddl
shlb
sahf
in
jnp
add
add
pop
add
pop
push
lea
push
push
lea
push
call
add
mov
mov
movsb
pushf
shl
xchg
cltd
mov
jne
lcall
add
stos
add
add
loop
rolb
fadds
cmpsl
add
jecxz
add
ret
add
outsl
mov
add
cld
jnp
hlt
xchg
add
add
add
add
mov
xchg
fmul
pop
enter
add
pop
mov
xor
push
push
push
push
push
call
add
mov
mov
repnz
add
lds
xor
mov
mov
add
testb
mov
add
rcll
popf
outsl
add
mov
test
leave
push
movsl
shlb
add
add
notb
out
xchg
add
sahf
mov
xchg
xchg
fwait
add
mov
cmpsl
imul
add
mov
roll
xlat
js
xchg
pop
mov
push
push
lea
push
lea
push
push
push
push
call
add
push
push
add
push
rorb
add
add
add
stos
add
aam
add
add
enter
add
add
pop
add
xchg
add
add
roll
mov
xchg
add
jne
add
mov
add
int
add
xchg
xchg
lods
flds
scas
add
loopne
imul
loopne
loope
add
add
pop
xor
push
push
push
push
push
lea
push
call
je
gs
add
add
add
out
xchg
add
add
add
pusha
lds
flds
add
pop
add
mov
out
push
movsb
sti
add
cltd
mov
lea
cmpsl
movsb
rcr
add
fldl
mov
jmp
add
jge
mov
add
add
add
stos
mov
jecxz
pushf
add
out
mov
add
add
mov
lea
pop
add
push
push
call
jo
clc
add
add
add
add
add
add
push
int
add
repnz
sti
mov
xlat
lods
mov
xchg
ljmp
xchg
jno
push
out
add
add
incb
add
add
cmc
add
add
add
add
add
repnz
jo
mov
push
shr
add
pop
add
out
out
fildll
or
enter
mov
push
call
xlat
jno
jno
xchg
roll
add
out
add
xchg
mov
test
jns
jle
add
add
add
sahf
fldenv
pop
mov
add
movb
add
add
add
scas
je
leave
cld
mov
testb
add
add
lock
add
lahf
movsl
aam
imul
push
aam
add
add
add
add
xchg
sti
xchg
cmpl
mov
lea
pop
rep
pop
push
lea
push
push
push
lea
push
lea
push
lea
push
call
shlb
fadds
test
out
mov
add
stc
add
xchg
add
add
cwtl
add
fucomi
adcl
imul
jle
iret
cmc
push
test
mov
add
fcoms
movsb
jo
jle
push
pop
stc
add
add
add
mov
lea
pop
mov
push
push
lea
push
push
call
popf
add
jmp
add
add
add
mov
mov
icebp
mov
fimuls
aam
pop
fldt
jle
les
mov
add
add
add
addr16
insb
hlt
lds
add
pop
add
mov
jbe
add
add
add
add
xchg
jb
mov
lea
pop
add
add
push
push
push
push
push
push
push
push
call
mov
add
mov
xchg
xlat
add
je
push
ror
add
add
add
sahf
stos
ja
mov
mov
test
cli
movsl
add
add
push
faddl
add
out
mov
outsl
mov
add
add
sahf
add
add
push
icebp
sahf
mov
je
push
mov
add
clc
in
add
add
add
add
rolb
cli
add
pop
add
mov
xor
push
push
lea
push
push
call
shr
add
add
cli
add
jle
mov
cld
push
add
add
stos
fiadds
add
push
add
aam
fstpt
call
push
flds
je
jno
add
addb
lret
add
add
icebp
shll
aam
add
stos
push
add
add
cmpsl
int3
cmpb
xchg
lret
add
add
xlat
add
add
pop
mov
xor
push
push
push
lea
push
push
push
push
call
sbb
add
xchg
mov
cmpsb
add
mov
icebp
pop
add
out
add
push
push
add
loope
out
lret
add
add
scas
addl
hlt
add
mov
cli
mov
popa
add
shll
add
add
add
cmc
mov
add
push
lahf
lea
add
js
add
add
arpl
lea
pop
mov
push
push
lea
push
push
push
lea
push
call
test
add
in
add
add
sbbl
add
imul
jl
jl
mul
mov
add
push
cmpsl
add
add
mov
ror
add
add
mov
pusha
add
add
bound
mov
outsl
add
popf
fnstcw
xlat
int
jmp
jl
ja
hlt
mov
lea
pop
xor
push
push
call
add
movsl
add
fiaddl
add
in
testl
mov
mov
lock
add
bound
cmpsl
fs
int
popf
add
jo
xchg
mov
nop
icebp
add
rolb
xchg
xlat
add
add
cli
add
cmpsl
mov
add
icebp
test
mov
xchg
add
pop
add
mov
add
xchg
shl
lods
enter
bound
js
mov
fmuls
pop
add
push
push
push
push
call
stos
cld
fdivrl
scas
jns
add
add
loope
jge
roll
pop
lret
add
xchg
jbe
add
fwait
rcrl
mov
sarl
xchg
jns
add
out
fildl
add
add
add
add
add
mov
jmp
add
mov
add
pop
mov
movsb
lahf
jno
pop
add
bound
pop
add
push
push
push
push
push
push
push
lea
push
push
push
call
movb
jne
add
add
add
lret
mov
js
add
mov
mov
pop
in
in
add
int3
lret
xchg
jl
add
add
into
jne
add
ficompl
push
xchg
add
pop
lahf
test
test
jmp
add
add
leave
lahf
add
add
pop
add
mov
push
push
not
dec
shr
push
and
add
dec
sub
pop
add
add
shr
pop
push
push
push
push
call
imul
mov
xchg
push
add
popl
add
jo
jno
in
mov
mov
shrl
add
lret
add
outsl
call
add
mov
jecxz
add
les
call
hlt
add
rcll
nop
add
add
aad
add
jge
add
test
add
imul
stos
add
add
pop
pushl
push
push
push
lea
push
lea
push
call
jno
mov
push
add
lock
incb
add
xchg
stos
pop
jmp
mov
scas
rol
add
out
sahf
add
outsl
xchg
testl
lahf
mov
add
add
fwait
push
lcall
clc
add
mov
pop
add
jno
add
rclb
std
loopne
mov
pop
outsl
add
add
add
aam
ret
add
mov
data16
call
push
push
push
rol
sub
push
or
inc
add
lea
sub
inc
pop
dec
pop
push
lea
push
push
push
push
push
call
std
testl
jmp
out
pop
lods
ret
rolb
mov
outsl
add
ret
ja
add
jo
add
mov
pop
add
jmp
mov
fcmovb
add
add
add
add
mov
mov
flds
mulb
add
add
lods
lret
add
push
cld
ljmp
add
sbb
push
push
push
push
push
push
push
push
push
lea
push
call
fadds
popa
add
add
mov
add
pushf
add
test
push
add
add
add
add
add
add
xchg
loope
jbe
outsl
add
mov
lods
test
cltd
add
add
add
add
jge
add
std
mov
gs
pushf
stc
mov
add
add
add
cltd
mov
jns
test
test
mov
hlt
lea
pop
call
mov
push
push
push
lea
push
lea
push
push
push
lea
push
push
lea
push
call
add
add
icebp
add
add
jnp
ficoml
cld
lret
out
enter
add
pop
jno
insb
add
add
add
add
movsb
add
ljmp
outsl
add
flds
icebp
add
add
fnclex
in
add
cmpsb
add
jge
in
add
xchg
add
pusha
add
fmull
mov
add
push
shr
ror
pop
add
push
push
push
lea
push
push
push
push
push
lea
push
call
add
pop
mov
add
jb
push
add
mov
add
scas
mov
insb
out
mov
std
cld
pop
xorb
add
add
bound
test
jecxz
fwait
push
add
add
pushf
add
add
sar
xchg
test
add
jle
add
add
test
in
loop
call
test
pusha
add
lea
mov
add
mov
lea
pop
add
push
push
lea
push
push
push
push
push
push
call
push
fwait
mov
add
mov
add
add
aam
jecxz
add
andb
leave
add
mov
push
je
lea
add
movl
cltd
jo
incb
add
mov
push
add
lret
add
add
lahf
jmp
aam
pop
add
add
std
bound
clc
pop
add
jbe
aam
bound
pop
mov
push
push
push
lea
push
lea
push
lea
push
push
push
push
call
stos
movsb
push
lea
lcall
mov
add
call
jo
add
add
add
add
lods
add
hlt
add
lret
jns
xchg
add
add
mov
hlt
push
outsl
mov
mov
addr16
push
add
into
add
fwait
in
add
mov
add
scas
add
add
hlt
lea
pop
xor
push
push
call
add
fwait
jge
pushf
pop
mov
add
add
pop
add
add
filds
mov
lcall
push
rorb
push
push
push
mov
lcall
jge
rcr
nop
mov
add
pop
lret
lahf
add
fsub
add
jns
iret
icebp
popf
push
into
add
mov
lea
pop
add
push
add
rol
rol
pop
add
push
add
shl
shl
sub
pop
push
mov
push
push
push
push
push
lea
push
push
lea
push
lea
push
lea
push
call
shll
test
add
stc
add
mov
int3
scas
fwait
add
testb
in
jno
xchg
xchg
add
lahf
arpl
stos
add
mov
add
add
insb
xchg
test
add
add
loope
icebp
add
insb
jo
add
lods
add
add
add
add
fucomip
mov
add
add
addb
lret
cmpsl
xchg
add
add
add
and
xor
push
push
push
push
call
cmpsl
xchg
sbbl
push
sar
lcall
xchg
pop
add
add
add
add
pop
imul
ret
mov
ljmp
push
lock
push
data16
add
add
mov
mov
add
add
add
ficomps
add
mov
lea
pop
add
push
push
call
add
lret
lea
add
test
add
add
pushf
imul
in
jmp
add
loopne
jle
repnz
flds
lea
fiadds
call
push
mov
add
add
add
icebp
jne
js
test
add
xchg
push
add
nop
fwait
jae
stos
fildl
pop
mov
add
pop
add
push
ror
inc
pop
pop
push
lea
push
push
push
call
in
fwait
add
add
movsb
in
jmp
rolb
jo
mov
pop
notl
add
fiadds
out
jl
add
shr
add
push
pusha
lret
add
mov
add
add
lret
pushf
add
shll
clc
add
mov
cltd
mov
push
je
add
add
add
push
repnz
add
mov
lea
pop
mov
push
push
push
call
add
enter
movsb
leave
pop
enter
xchg
xchg
add
fstl
lds
add
fsqrt
add
lahf
add
les
push
add
add
mov
bnd
add
loopne
push
loop
fdivs
fs
mov
add
cld
pop
mov
mov
fnsave
fsubr
add
mov
mov
lea
pop
xor
push
lea
push
push
lea
push
push
call
int
arpl
gs
pop
int
repnz
scas
iret
add
xchg
add
add
add
pop
mov
fdivs
add
jno
add
push
add
xchg
pop
push
ja
js
add
add
out
add
mov
fcmovbe
addl
xchg
movsl
mov
fwait
lds
jl
xchg
mov
jle
jge
pop
outsl
add
fwait
add
mov
lea
pop
add
push
push
push
lea
push
lea
push
push
push
lea
push
lea
push
call
notl
addb
push
in
add
aad
add
add
jle
icebp
pop
js
add
add
scas
add
xchg
jl
mov
add
push
testl
mov
fwait
mov
insb
add
add
out
add
add
hlt
push
into
loopne
gs
add
aam
test
orb
rep
mov
xor
push
lea
push
push
push
call
xorb
cmc
add
add
js
jecxz
mov
mov
jle
mov
add
add
repnz
add
add
in
outsl
out
int
in
lret
add
test
push
lret
xor
rcl
mov
add
add
add
jecxz
add
add
std
pop
add
cmc
jb
add
pop
lods
enter
cltd
add
pop
or
je
mov
xor
push
push
lea
push
push
push
call
loopne
movsl
rolb
mov
pop
add
lret
add
add
aad
add
in
outsl
cltd
add
add
add
add
add
lds
fwait
cltd
add
mov
movsb
add
fadd
xchg
lods
cmpsb
add
add
lahf
lods
rolb
stos
mov
pop
cmpsb
jge
mov
jae
notl
add
push
add
add
in
jbe
fildl
add
jae
js
add
add
pop
mov
push
push
push
push
lea
push
call
push
test
jo
add
aam
int
cmc
add
cli
loope
add
pop
mov
add
push
add
pop
add
mov
aad
mov
add
in
xchg
mulb
add
pushf
mov
mov
stc
rcl
fadd
add
pusha
pop
movsl
mov
rolb
test
mov
add
shl
jnp
repnz
add
add
test
mov
mov
lea
pop
xor
push
lea
push
push
push
push
push
push
lea
push
call
stos
popf
cmc
jle
pushf
cld
into
mov
pop
add
add
in
add
fwait
add
add
mov
xchg
add
je
add
xchg
iret
add
add
push
in
add
repnz
lods
add
mov
rolb
pop
jb
test
mov
xlat
mov
add
add
add
add
outsl
add
scas
clc
fmull
pop
add
push
push
push
lea
push
lea
push
push
push
call
add
add
mov
add
stos
xchg
mov
xchg
add
lds
push
add
bound
add
add
xchg
outsl
jmp
sti
add
add
test
aam
out
push
shll
xchg
add
add
push
bound
add
push
lahf
mov
add
bound
mov
jb
add
mov
les
add
mov
lea
pop
add
push
not
rol
pop
add
push
push
add
dec
add
pop
mov
xor
push
inc
add
ror
pop
add
pop
rep
push
add
rol
dec
pop
mov
xor
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
faddl
xchg
add
mov
cmpsb
popa
idiv
jmp
leave
pusha
add
loope
jbe
add
fildl
add
add
pop
add
shl
mov
leave
push
push
jge
jp
fs
add
cmc
add
jbe
add
int3
add
add
add
jne
add
int
scas
add
in
add
push
flds
add
add
nop
add
testb
add
data16
add
pop
or
je
push
push
lea
push
push
call
push
call
pushf
add
add
test
lds
add
add
std
rcr
imul
and
les
shlb
mov
push
call
test
cld
add
xchg
xchg
add
jo
add
add
jo
add
add
add
add
lock
stos
outsl
add
add
add
test
pop
rorb
pop
mov
add
push
not
not
pop
add
push
push
push
push
push
push
push
push
lea
push
push
call
add
int3
jmp
add
movsl
ret
add
add
add
xchg
add
jno
add
jo
add
push
scas
iret
test
lods
add
fildl
incb
out
add
hlt
lea
shl
insb
push
mov
add
pop
mov
cli
jp
cmpsl
mov
push
fildl
add
lcall
add
pop
pop
les
pop
rep
push
push
lea
push
call
pop
jnp
rolb
clc
add
add
add
add
add
out
add
add
add
jns
add
add
add
add
add
add
rorb
add
mov
add
lahf
lret
mov
add
loop
lds
sahf
pop
add
les
add
mov
in
mov
or
pop
push
push
rol
add
inc
ror
push
xor
add
not
sub
sub
dec
ror
pop
lea
sub
lea
pop
push
push
push
push
push
lea
push
push
push
push
call
test
add
add
xchg
fwait
mov
cli
nop
pop
add
add
jp
cli
nop
push
mov
ret
add
fucom
xchg
mov
ffree
test
in
aad
add
mov
jecxz
jno
in
add
xchg
pop
add
loope
test
scas
mov
pop
int3
xchg
stc
movb
out
add
hlt
scas
addl
rorb
scas
std
mov
lea
pop
pop
mov
push
push
push
call
pop
mov
sti
lret
stc
popa
mov
add
add
add
aam
call
test
test
mov
aad
add
mov
leave
fistpll
add
add
lods
xchg
add
add
roll
mov
add
add
sar
add
mov
add
jb
add
add
test
test
outsl
nop
shll
testl
add
add
in
test
or
mov
push
push
push
call
arpl
fsts
hlt
js
je
loope
jbe
xchg
xchg
push
xchg
mov
pusha
bound
add
push
add
and
cmpsb
add
jo
add
lcall
jecxz
add
fs
add
flds
add
xchg
add
je
add
push
add
add
add
mov
popa
or
mov
jmp
push
push
push
lea
push
push
push
lea
push
push
call
add
cli
out
addl
test
push
movsl
add
add
add
shl
cmpsl
add
add
add
mov
push
jne
add
push
lcall
add
cli
mov
xchg
add
stos
fwait
mov
arpl
add
lcall
int3
repnz
mov
cld
lea
pop
mov
push
dec
shr
not
pop
add
push
push
push
push
lea
push
push
push
push
call
popf
mov
pop
std
std
mov
add
add
add
test
mov
add
lea
pop
in
add
jle
mov
mov
mov
add
add
xchg
fwait
add
add
add
add
mov
lock
add
fstps
add
add
test
js
add
mov
mov
sarb
cld
lea
pop
push
push
lea
add
sub
pop
push
push
push
lea
push
push
push
lea
push
push
push
push
push
call
mov
xchg
add
cmc
jnp
cmpsb
mov
add
pop
add
add
push
lock
outsl
cwtl
adc
add
add
add
add
push
add
add
stos
incb
add
add
add
sti
movsl
pop
push
add
add
add
mov
add
lds
add
add
mov
mov
stos
stos
fbstp
les
inc
cld
pop
push
push
push
push
push
call
xchg
xchg
ret
mov
xchg
outsl
stc
mov
add
add
add
add
add
add
add
sarb
out
xchg
add
add
fldenv
add
cwtl
jle
jno
add
jp
add
pop
add
mov
shll
mov
add
push
jecxz
push
cmc
sti
stos
mov
cltd
iret
add
mov
lea
pop
add
add
push
insb
shlb
cld
lea
pop
pop
push
sub
pop
pop
pop
leave
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
int
mov
add
add
fcoml
mov
mov
add
add
add
add
mov
test
aam
pop
add
cltd
add
popf
lret
add
add
in
mov
mov
mov
incb
add
data16
add
movsb
fcmovu
out
and
pop
add
imul
cmc
mov
test
test
add
push
mov
lea
pop
ret
push
push
push
push
push
call
add
ljmp
jge
repnz
fmul
nop
icebp
ja
add
mov
xchg
out
mov
jae
push
popa
sar
mov
sarb
les
pop
xchg
imul
lret
nop
mov
into
iret
add
add
imul
jmp
mov
xchg
pop
mov
add
push
push
push
push
push
push
push
push
call
scas
add
add
push
fsubrs
pop
add
lahf
nop
roll
add
add
sti
shrl
add
outsl
loope
mov
fadds
clc
add
add
add
add
add
pop
iret
add
add
add
pop
fiaddl
add
push
add
addr16
leave
add
add
scas
mov
lea
pop
push
push
add
lea
pop
push
push
movl
push
add
sub
pop
addl
test
je
mov
push
add
lea
add
xor
pop
pop
pop
pop
push
shr
dec
pop
pop
push
push
push
lea
push
push
push
lea
push
push
push
push
call
faddl
leave
out
arpl
addb
aam
sti
add
push
xchg
test
add
add
fs
cld
xchg
aad
shr
add
pop
add
cmc
add
add
add
add
mov
add
outsl
mov
add
int3
stos
icebp
mov
fs
rorl
out
xchg
loop
push
cltd
mov
fmull
ret
push
push
lea
dec
pop
mov
push
lea
push
push
push
lea
push
call
add
stc
jo
fstp
lret
addb
mov
mov
jge
rolb
push
xchg
flds
add
leave
cld
push
test
jp
add
add
test
add
mov
stos
add
mov
add
add
jmp
repnz
mov
loopne
leave
add
js
loop
add
pop
stos
jae
pop
pop
mov
lea
pop
add
push
push
push
push
lea
push
push
push
call
fst
mov
add
add
pop
fwait
out
jl
jmp
mov
iret
lcall
add
add
movsl
add
add
cld
aad
add
xchg
add
rolb
orl
add
lret
icebp
add
add
jns
in
add
add
in
lods
add
fstps
pusha
sbb
push
push
push
add
pop
testl
push
lea
push
call
mov
add
add
jmp
repnz
add
add
test
add
addb
add
mov
add
mov
add
add
movsl
add
add
add
xchg
rolb
cld
add
bound
lret
mov
scas
cmpsl
add
pop
xchg
add
add
add
add
add
add
lea
pop
addl
push
push
push
push
push
push
call
mov
test
add
add
test
add
mov
jae
cwtl
add
add
add
loope
movsl
add
jo
iret
repnz
add
add
into
loopne
add
jne
imul
add
xchg
popa
add
mov
add
leave
xchg
cli
jbe
push
add
in
add
mov
add
jno
addb
mov
scas
add
aam
bound
call
push
push
lea
push
push
push
push
push
lea
push
push
push
call
add
nop
xchg
cmc
add
add
add
lret
add
jb
add
hlt
sub
add
add
add
lea
pop
mov
add
add
add
movsl
add
pop
push
mov
add
cwtl
movsl
add
add
cmpsb
jle
push
int3
insb
mov
roll
enter
add
add
add
add
stc
add
add
xchg
stos
movsl
add
jmp
mov
mov
lea
pop
mov
push
sub
sub
pop
pushl
push
push
push
push
lea
push
lea
push
push
call
push
add
js
mov
test
enter
add
jnp
jge
fildl
imul
testl
push
add
addr16
mov
scas
out
add
add
add
add
add
cmc
ljmp
mov
add
mov
pop
add
push
add
pop
add
mov
add
pop
call
push
lea
push
push
push
lea
push
call
add
into
pop
add
xchg
add
add
lea
incb
mov
xchg
add
add
add
xchg
jle
mov
xchg
loopne
addr16
lods
data16
add
add
test
fldl
jb
push
add
push
mov
jp
repnz
add
add
add
add
fisttps
mov
lea
pop
cmpl
jne
push
shl
ror
pop
pop
pop
push
ror
shr
shl
pop
pop
pop
push
rol
pop
leave
push
push
push
push
push
push
call
loop
in
je
add
lahf
popa
add
pop
out
add
into
loop
mov
pop
jmp
add
loopne
lret
push
out
mov
test
add
jp
in
pop
imul
lods
jb
add
add
mov
aad
mov
leave
jge
add
imull
fsubl
add
call
nop
push
add
mov
lea
pop
ret
push
push
lea
push
push
push
lea
push
push
push
call
add
in
fstpt
fs
ret
push
jp
in
add
add
add
aad
add
add
add
add
add
pusha
mov
shrl
jnp
jnp
pop
out
shlb
call
add
call
stos
add
add
ja
add
add
add
mov
lea
pop
push
mov
add
push
sub
add
pop
push
push
shr
xor
dec
pop
push
push
push
push
add
pop
movl
push
sub
pop
push
call
push
push
xor
xor
pop
call
subl
cmpl
jne
push
xor
pop
pop
push
sub
pop
pop
pop
push
shl
pop
pop
push
add
pop
leave
push
not
inc
pop
ret
push
push
push
call
loopne
add
add
clc
cld
enter
mov
mov
lds
lret
jo
jnp
add
add
fsubl
movl
add
add
mov
add
add
add
fdivs
rcrb
mov
add
pop
jp
mov
lea
pop
mov
push
push
lea
push
push
lea
push
push
push
call
cmpsb
xlat
add
add
mov
add
lock
add
je
add
stc
test
jno
xchg
jnp
add
iret
add
enter
add
mov
mov
add
sahf
add
fldl
add
mov
mov
cwtl
add
add
lahf
add
push
shl
add
jmp
arpl
add
add
test
jno
xchg
enter
mov
lea
pop
add
push
push
lea
push
lea
push
push
push
push
push
call
out
mov
add
jl
add
pop
mov
arpl
loop
cld
add
imul
mov
stc
testl
add
insb
lret
xchg
add
add
add
add
scas
add
mov
push
fsubs
int3
faddl
add
add
mov
xchg
rcr
mov
add
out
call
popa
and
push
shl
lea
xor
rol
pop
push
push
push
push
push
push
push
call
add
leave
test
jl
mov
add
add
lea
jmp
add
scas
imul
faddl
ja
push
add
push
add
fbstp
pop
lea
mov
add
ret
add
add
xchg
fnsave
jb
pop
mov
cld
mov
add
mov
mov
jne
jo
sahf
sarl
fsubr
mov
push
pop
mov
lea
pop
push
push
inc
inc
not
pop
push
mov
push
dec
lea
inc
pop
lea
sub
mov
push
push
lea
push
lea
push
call
add
add
jns
cwtl
leave
add
mov
test
mov
add
lods
add
add
int
add
xchg
add
cwtl
in
outsl
fcmovnb
lcall
add
test
pushf
fcmovnu
mov
sahf
push
mov
add
add
mov
add
ror
mov
js
les
call
push
lea
push
push
push
push
push
call
xchg
repnz
mov
flds
fildl
add
scas
mov
add
push
sti
mov
add
mov
loopne
push
add
xorl
pop
mov
mov
movsb
testb
rclb
add
pop
add
cli
add
enter
jo
add
pushf
add
pop
add
int3
lea
pop
add
push
push
call
add
fisubl
push
movsl
rolb
mov
hlt
add
cld
add
add
mov
imul
lret
mov
add
xchg
push
jl
mov
testb
test
adcb
add
insb
push
sti
loop
call
ret
add
ret
jno
xchg
fldt
add
pop
add
add
add
pusha
hlt
mov
pop
mov
mov
add
push
lea
push
push
push
push
push
push
push
push
call
fistps
ffreep
in
mov
call
out
popf
add
testl
add
imulb
sti
fwait
add
roll
xlat
nop
scas
sti
and
js
into
add
mov
add
jmp
xchg
stc
std
add
add
push
add
add
roll
add
mov
lea
pop
add
mov
push
not
sub
not
lea
pop
mov
cmp
jne
cmp
jne
push
sub
dec
add
pop
mov
push
pop
movl
jmp
mov
push
ror
add
shr
pop
mov
push
lea
push
lea
push
push
push
push
call
out
add
cmpsl
cwtl
sar
add
xlat
add
stos
jb
mov
add
jb
push
add
add
gs
add
shlb
mov
scas
add
add
add
push
add
pop
jecxz
add
xchg
mov
add
xchg
imul
sahf
loope
add
add
add
add
stos
lret
cmp
add
xlat
scas
mov
mov
lea
pop
sub
jne
push
push
push
push
push
push
call
std
add
call
pop
testb
add
cmpsl
ficoml
pop
std
pusha
add
mov
stos
mov
int3
testl
add
add
add
movsl
add
add
add
push
add
jl
icebp
add
add
and
add
add
add
aad
popa
cmpsb
cmpsb
add
movsb
out
mov
stc
scas
pop
mov
mov
lea
pop
mov
movl
jmp
push
add
pop
mov
mov
cmp
jne
push
push
push
lea
push
push
push
push
lea
push
call
add
add
fcoml
add
hlt
xchg
add
imul
add
add
add
push
add
add
add
push
fisubl
jb
pop
add
insb
loop
out
imul
pop
mov
add
test
lret
add
stos
add
outsl
gs
fldl
add
add
ret
jle
add
out
mov
lea
pop
mov
push
not
pop
movl
jmp
mov
push
push
push
push
push
push
lea
push
push
push
call
add
add
pushf
add
cmpsl
loope
out
mov
push
out
test
add
add
add
mov
fwait
jne
vpermq
mov
cli
mov
mov
ficoms
add
stc
add
outsl
into
imul
add
mov
add
push
add
add
mov
lea
pop
cmpw
jne
mov
push
sub
pop
movl
push
sub
pop
jmp
push
dec
pop
pushl
push
not
pop
pop
mov
push
push
push
call
scas
scas
add
filds
add
add
add
mov
test
out
lret
add
sarl
add
hlt
xchg
fnstcw
pop
add
faddl
nop
sub
add
add
testl
add
add
filds
mov
loop
enter
add
mov
add
sahf
add
out
add
mov
lea
pop
mov
push
lea
shr
pop
mov
push
push
sub
inc
ror
push
xor
add
ror
sub
add
lea
add
xor
pop
not
pop
push
shl
pop
push
push
pop
call
cmpl
je
push
push
xor
sub
ror
not
push
and
add
inc
sub
xor
not
pop
add
sub
sub
lea
pop
push
add
pop
push
call
cmpl
je
push
push
add
rol
add
push
and
add
dec
sub
dec
ror
ror
pop
dec
pop
push
shl
sub
pop
push
push
lea
pop
call
push
push
push
push
push
push
lea
push
push
push
push
call
add
add
xchg
rcr
add
mov
jbe
jge
mov
add
add
push
push
add
add
rolb
mov
push
xlat
mov
mov
cli
jno
xchg
add
mov
add
stc
hlt
push
addb
leave
cli
add
arpl
cmc
add
jae
iret
add
pop
cmpl
je
push
push
add
dec
push
or
inc
add
xor
add
sub
sub
shl
sub
pop
sub
sub
rol
pop
push
push
push
call
lock
stos
add
add
iret
mov
sahf
lea
xchg
nop
jl
add
add
add
ja
add
add
in
push
add
push
jae
pushf
cltd
add
mov
add
test
add
mov
xchg
push
stc
add
add
add
lods
add
add
test
imul
push
icebp
add
lods
incb
add
mov
lea
pop
push
call
cmpl
je
push
push
sub
xor
inc
lea
push
xor
add
lea
inc
not
sub
pop
dec
sub
pop
push
inc
add
lea
sub
pop
push
call
cmpl
je
push
push
lea
sub
shr
push
push
pop
add
sub
inc
rol
sub
not
rol
pop
shr
sub
add
add
pop
push
push
call
in
add
add
enter
fnstcw
add
outsl
sti
add
add
add
sub
jb
add
pop
add
jbe
add
xchg
jb
mov
add
add
rolb
aam
mov
add
xchg
add
mov
call
lods
scas
testl
stos
pusha
fcmovnb
rclb
add
test
pusha
or
push
pop
call
cmpl
je
push
push
inc
push
and
add
add
lea
sub
add
pop
add
xor
lea
pop
push
ror
add
not
pop
push
call
cmpl
je
push
push
dec
push
xor
add
shl
not
sub
shr
not
lea
pop
sub
pop
push
pop
push
push
push
push
lea
push
push
push
push
push
push
call
ljmp
xchg
js
add
cld
pop
add
jbe
mov
mov
mov
fiaddl
mov
cmpsb
fidivrs
add
std
jmp
ljmp
pop
add
add
test
jp
jmp
pop
jge
push
fs
and
pusha
in
cltd
testl
popf
add
arpl
call
push
lea
inc
pop
cmpl
je
push
push
shr
sub
sub
push
or
not
add
sub
sub
add
sub
lea
pop
xor
pop
push
push
push
push
lea
push
push
push
call
jp
mov
cmc
popa
clc
add
js
pop
mov
jmp
add
test
pusha
xchg
add
jmp
mov
add
movl
sti
add
subb
cli
subl
out
imul
outsl
mov
mov
push
stc
add
add
mov
aam
bound
pop
call
push
shl
shl
add
pop
cmpl
je
push
push
not
push
or
inc
add
shr
shr
sub
ror
shl
sub
pop
not
inc
pop
push
push
push
push
push
push
push
push
push
push
call
repnz
jno
lds
xchg
rcrb
cmpb
cmc
add
push
enter
leave
in
add
pushf
fstpl
icebp
jns
add
add
stos
add
data16
push
rolb
fisttpl
xlat
lods
data16
addr16
add
mov
xchg
leave
add
fnstcw
jnp
add
push
add
add
pop
add
js
fmull
call
push
lea
push
call
popf
jnp
add
jp
add
xchg
pop
add
int3
xchg
add
mov
add
mov
add
add
ret
mov
add
add
jbe
mov
fiaddl
sarl
rcl
adcb
jmp
fistpl
add
add
add
cltd
test
jo
pop
cmpsl
mov
in
rolb
add
pop
add
cld
lea
pop
cmpl
je
push
push
dec
push
push
pop
add
shr
shr
sub
ror
dec
dec
pop
not
xor
dec
shr
pop
push
push
push
call
ja
add
je
add
add
loope
mov
pushf
jp
add
in
pop
roll
add
mov
imul
mov
lods
bound
xchg
enter
add
add
test
insb
mov
push
pop
lods
movsb
movsl
call
lcall
into
loope
push
int3
lea
pop
push
call
push
sub
pop
cmpl
je
push
push
add
add
push
or
inc
add
rol
sub
sub
add
sub
lea
lea
sub
lea
pop
add
sub
pop
push
push
push
push
push
push
push
push
push
push
call
lods
jl
pop
add
in
add
add
add
add
mov
stc
mov
jge
mov
cld
aam
test
imul
jae
in
ficoml
add
shlb
xchg
jecxz
add
arpl
add
movsl
cmc
jge
add
clc
add
jecxz
add
lret
add
jmp
add
jne
mov
jnp
bound
lret
sarb
in
mov
lea
pop
push
push
shr
pop
call
push
dec
pop
cmpl
je
push
push
rol
sub
lea
push
and
add
sub
pop
shr
pop
push
lea
pop
push
call
push
push
lea
push
call
leave
jl
add
pop
andl
lods
add
add
push
add
jbe
mov
mov
add
add
xchg
cmpl
cmpsb
add
add
add
add
mov
stc
gs
add
fcoml
mov
add
add
int
hlt
fdivrs
add
mov
lds
filds
jbe
lret
mov
adc
popf
add
pusha
mov
scas
mov
lea
pop
cmpl
jne
push
shr
pop
mov
push
sub
pop
movl
push
rol
pop
jmp
push
xor
add
shr
pop
xor
pop
pop
push
rol
pop
pop
push
push
lea
push
push
push
push
push
lea
push
call
xchg
add
testl
jmp
add
mov
push
add
add
insb
add
push
add
add
push
add
add
in
lea
out
std
mov
add
in
icebp
repnz
xlat
mov
push
add
jae
add
add
jbe
add
jmp
add
add
push
add
add
lret
ret
lea
pop
pop
leave
ret
push
lea
shr
pop
push
mov
push
push
lea
push
push
push
lea
push
lea
push
call
out
add
lock
mov
add
mov
cmpsb
bound
jbe
add
mov
cwtl
iret
sti
aad
add
mov
add
add
jmp
test
lret
pop
je
gs
mov
add
lods
ret
fldl2e
rcll
xchg
idiv
lods
lret
add
scas
xchg
clc
add
imul
hlt
lea
pop
add
push
sub
add
pop
cmpl
jne
push
push
xor
sub
xor
push
xor
add
not
xor
sub
pop
sub
shl
shl
shl
pop
pushl
push
inc
pop
call
push
push
call
in
mov
movb
add
aam
push
xchg
mov
out
add
mov
mov
xchg
test
add
flds
cmpb
push
cmc
test
add
add
jecxz
add
jmp
mov
push
xchg
xchg
addl
mov
rolb
sahf
pop
add
xchg
pop
ja
add
lahf
pop
mov
add
pop
push
push
lea
push
push
push
push
push
push
push
push
lea
push
call
push
add
add
add
add
mov
in
jns
test
cmpsl
xchg
std
pop
add
add
enter
add
nop
mov
ret
push
into
jecxz
out
add
jp
cmpsl
mov
add
add
add
cli
je
test
cltd
mov
add
push
push
mov
mov
cmpsb
jnp
add
add
pop
add
add
mov
lea
pop
call
push
lea
push
push
push
push
push
lea
push
call
add
imul
mov
mov
mov
mov
pop
cli
stos
xchg
add
add
repnz
mov
add
mov
add
add
mov
add
add
xchg
add
mov
cld
jbe
add
push
add
add
add
mov
add
js
add
test
scas
add
mov
decb
pop
jmp
push
push
lea
push
push
push
call
cmpsb
xlat
lods
jecxz
aam
add
rolb
clc
add
les
stos
xchg
add
mov
enter
add
add
add
add
add
mov
js
lret
out
sti
add
lcall
idivb
idivb
pop
mov
mov
pop
add
add
mov
cmpsl
test
pop
jmp
adc
cmpl
je
push
xor
lea
inc
pop
cmpl
jne
leave
add
push
rol
sub
pop
pop
pop
pop
push
lea
push
lea
push
lea
push
push
push
call
add
add
add
xchg
jge
jne
add
lods
add
mov
add
add
data16
cmpsb
mov
scas
into
mov
cwtl
fbstp
cli
add
out
scas
lods
mov
add
jmp
jmp
pop
pushf
clc
scas
add
add
mov
add
int3
add
addb
jle
int3
lea
pop
pop
push
shr
lea
xor
pop
leave
push
push
push
push
call
scas
add
add
add
mov
add
rolb
mov
lds
les
fsubr
add
mov
jle
mov
add
lret
call
mov
jle
add
xabort
mov
add
hlt
fstl
notl
add
add
hlt
add
add
add
mov
lea
pop
add
push
lea
push
lea
push
call
xchg
add
add
jne
sahf
mov
rcrl
fstpt
ret
add
movsb
popa
add
add
push
imul
push
push
out
movb
movsl
clc
mov
add
lahf
add
add
movsb
add
cmpsl
stos
leave
add
add
clc
add
add
js
fs
add
loopne
push
add
add
fldl
or
ret
jmp
cmpl
jne
push
push
sub
shl
sub
push
or
not
add
ror
xor
sub
sub
rol
dec
shl
xor
pop
lea
inc
xor
pop
push
lea
push
call
add
add
nop
jns
xorb
jne
add
pushf
add
add
add
popa
mov
fildll
xlat
mov
add
mov
data16
roll
xchg
data16
in
mov
jnp
scas
andl
loope
gs
add
scas
add
testl
lea
stos
addr16
add
mov
lea
pop
pushl
push
push
lea
push
push
push
push
call
add
mov
popf
push
add
pushf
clc
ja
movsl
div
orl
add
add
out
loopne
add
jo
in
fstp
cmc
xchg
add
into
mov
add
add
in
lods
add
add
mov
xchg
add
mul
mulb
mov
add
add
sahf
push
imul
roll
int
add
add
mov
add
add
xlat
stos
icebp
lds
pop
call
push
push
lea
push
push
call
pop
add
test
aam
jecxz
add
mov
add
add
add
add
cmc
mov
lret
add
jne
icebp
jns
std
add
add
mov
add
push
add
out
mov
add
add
movl
add
mov
push
aam
mov
add
lock
add
push
add
xchg
fstps
aad
scas
add
mov
lea
pop
call
jmp
push
push
push
push
push
push
push
push
lea
push
push
call
xchg
gs
xchg
add
add
add
add
les
lret
pop
popa
add
add
movsl
aad
mov
add
mov
imul
sti
add
add
push
add
push
mov
push
add
flds
pop
add
add
fwait
push
stos
add
mov
shlb
add
add
push
data16
jge
add
test
lea
push
lea
push
push
push
lea
push
push
call
add
jmp
add
aad
popf
jo
mov
add
jmp
add
pop
mov
add
add
icebp
add
ret
add
mov
lret
mov
jl
add
lds
add
xchg
add
shr
popa
xchg
push
addl
add
add
fiadds
xchg
add
push
arpl
pop
add
mov
lea
pop
mov
mov
jmp
push
lea
shr
shr
sub
pop
push
pop
push
push
push
lea
push
lea
push
push
push
push
push
call
js
hlt
add
out
push
andb
add
add
add
lods
jnp
add
add
add
add
add
les
data16
add
add
add
add
mov
mov
xchg
add
lock
in
add
add
add
add
scas
mov
popf
push
push
add
pop
add
xlat
add
pop
dec
jne
call
jmp
push
lea
push
push
call
mov
iret
add
add
movsl
add
mov
jbe
mov
cmpsb
add
add
popf
jns
pop
add
bound
add
mov
movsl
popf
arpl
lcall
add
out
add
pusha
jge
xchg
lds
addr16
mov
add
cltd
test
pop
pop
add
add
loopne
xchg
in
test
loope
lods
js
leave
call
lea
pop
call
push
push
shr
push
push
pop
add
dec
sub
xor
add
pop
rol
pop
pushl
push
ror
lea
sub
pop
call
push
push
push
push
call
push
add
shll
fptan
imul
mov
lods
mov
je
add
add
mov
aad
add
add
add
fldl
divl
xchg
mov
fcmovne
jbe
xchg
fmul
xchg
add
add
add
add
roll
pop
rclb
add
mov
add
mov
mov
outsl
add
add
xchg
filds
push
mov
lea
pop
call
mov
lea
push
push
ror
push
sub
add
lea
dec
sub
xor
pop
sub
xor
pop
push
push
push
push
lea
push
call
int3
mov
xchg
imul
add
jl
movsl
add
rcr
les
push
push
add
je
add
movsb
add
add
push
lret
add
add
cmpsl
lahf
jmp
add
jge
mov
add
test
mov
pop
fcoml
xchg
pop
ljmp
scas
lret
add
add
mov
fmull
jne
call
push
push
add
rol
lea
pop
call
push
push
add
add
push
push
pop
add
shl
sub
shr
ror
xor
pop
lea
pop
push
lea
push
call
add
lret
add
pop
cmc
pop
mov
lea
rolb
in
add
lret
in
fidivrs
out
add
stc
test
imulb
rolb
sti
jno
fadds
add
add
xchg
jns
push
add
fdivl
add
jae
jmp
add
sahf
movsl
add
arpl
xchg
stos
jecxz
add
repnz
mov
fiadds
lret
mov
add
mov
lea
pop
pushl
push
shl
dec
pop
call
call
push
dec
sub
rol
pop
mov
lea
push
push
shl
xor
push
push
pop
add
shl
sub
sub
sub
sub
pop
rol
pop
push
pop
pushl
push
shl
shl
pop
call
lea
push
push
push
lea
push
push
push
lea
push
push
call
add
movsb
add
add
fnsave
add
add
push
movsb
add
add
add
add
pusha
add
mov
add
pop
push
add
add
scas
add
out
add
push
jp
mov
imul
lea
mov
stos
mov
pushf
add
jle
loope
add
add
lods
imul
mov
lea
pop
push
push
pushl
push
push
add
push
or
inc
add
shl
inc
add
xor
sub
xor
pop
add
pop
push
lea
push
lea
push
push
call
add
add
mov
add
int3
add
scas
jne
xchg
add
add
add
add
jmp
pop
push
add
into
push
hlt
xchg
mov
add
add
add
fstp
aad
mov
loope
add
repnz
test
imul
sti
mov
int
add
push
add
jge
add
rcrl
pusha
lea
push
popa
add
add
add
xchg
sahf
andb
leave
jo
lods
add
sti
stc
add
mov
xchg
fmull
pop
push
push
push
push
lea
push
call
fcompl
jecxz
mov
push
cmpsb
pop
jnp
lea
pop
fadds
push
push
jo
in
pop
mov
lock
add
ror
add
lods
add
popa
add
push
pop
add
pop
outsl
add
add
pop
int3
add
add
add
pop
lret
cli
add
out
pop
imul
add
xchg
add
mov
lea
pop
call
push
push
dec
inc
push
or
not
add
xor
shl
lea
sub
lea
dec
pop
not
ror
pop
pushl
push
xor
pop
call
push
rol
shr
pop
push
push
xor
pop
call
push
push
shl
add
add
shl
push
xor
add
add
sub
inc
pop
dec
add
sub
rol
pop
push
lea
push
lea
push
lea
push
lea
push
call
add
add
enter
add
in
xchg
jmp
roll
arpl
roll
movsl
push
add
add
mov
push
add
insb
add
ljmp
mov
add
test
aad
xchg
les
add
mov
movsb
add
cld
add
lret
xchg
mov
add
mov
lea
pop
pushl
push
inc
add
pop
call
call
push
ror
add
pop
jmp
push
push
lea
push
call
xchg
xchg
out
add
add
xlat
add
and
add
add
xchg
add
je
jns
stos
add
push
cmpsb
add
add
add
add
incb
pop
in
jmp
ret
add
xchg
lret
add
add
rolb
testb
mov
push
popa
cwtl
add
les
pushl
mov
jmp
push
push
xor
push
or
not
add
inc
dec
sub
shr
sub
dec
lea
pop
xor
xor
lea
rol
pop
push
push
push
lea
push
push
call
jae
add
add
stos
rolb
stos
add
add
add
mov
add
mov
add
add
fsubrl
add
add
add
add
in
xchg
lahf
mov
popa
rcrb
test
out
xchg
add
je
push
mov
mov
add
add
add
mov
add
add
into
push
add
pop
pushl
call
push
rol
add
pop
push
call
push
push
add
rol
push
or
inc
add
rol
inc
sub
rol
pop
shr
sub
pop
push
xor
rol
pop
pushl
call
push
shl
pop
push
push
push
push
push
push
lea
push
push
call
fdivp
mov
add
add
add
mov
shrb
jl
filds
cwtl
add
mov
add
test
incb
loope
mov
popa
jecxz
add
xchg
add
push
add
imul
add
add
iret
sbbl
add
int
add
jnp
push
mov
lea
pop
call
push
rol
shl
pop
leave
push
push
push
lea
push
call
mov
add
shlb
jle
add
add
push
movsb
add
jmp
add
lods
mov
add
mov
nop
pop
add
in
movsb
add
fisubrs
add
xchg
mov
mov
add
mov
cwtl
pop
in
arpl
mov
loopne
add
icebp
add
les
les
xchg
jge
call
pop
push
push
call
mov
pushf
std
test
scas
fbstp
hlt
enter
or
xchg
sahf
mov
xchg
add
lods
add
cld
add
lahf
jb
add
add
test
in
add
fsub
ret
lret
mov
add
test
outsl
add
add
jnp
lcall
add
add
mov
lea
pop
pop
push
lea
push
lea
push
push
lea
push
push
call
call
add
add
add
add
fildl
lods
jne
fcomps
add
stos
loopne
mov
add
out
mov
add
mov
add
loop
scas
add
add
add
add
add
add
add
lods
xchg
add
add
mov
lea
pop
leave
add
ret
push
shl
add
pop
leave
ret
push
ror
sub
pop
push
push
push
push
push
push
push
lea
push
push
call
aad
cmc
add
mov
jno
add
icebp
add
icebp
mov
iret
add
mov
shr
rcrl
mov
mov
add
add
add
add
add
clc
mov
mov
les
jae
enter
faddl
push
add
lods
add
test
pop
add
cld
lea
pop
mov
cmpl
jne
mov
push
lea
push
push
push
push
push
push
push
push
call
push
xchg
xchg
add
jne
sti
imul
add
mov
aad
add
mov
fmuls
add
sahf
bound
outsl
repnz
pop
add
jecxz
int
add
jmp
xchg
add
test
incb
add
jle
add
sti
lcall
mov
mov
lea
pop
jmp
push
lea
push
push
push
call
fadds
mov
out
movl
add
xchg
add
add
pop
ror
push
ror
pop
pop
cltd
add
add
add
jo
add
imull
add
pop
arpl
pop
jo
mov
je
popa
test
add
aad
add
data16
push
lea
sub
fsubp
add
jb
add
add
bound
add
movsb
in
popf
js
add
pop
mov
and
push
add
sub
dec
pop
xor
push
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
add
hlt
rolb
jns
add
add
arpl
xlat
add
pop
roll
lea
push
add
jns
xchg
out
jecxz
fdivr
add
sbb
in
incb
pushf
ror
add
fwait
shl
mov
jne
jp
jmp
add
lret
js
lret
jns
data16
mov
cli
mov
add
in
mov
lea
pop
xor
push
push
lea
push
call
mov
mov
add
popf
int
add
jae
add
add
add
loop
add
mov
insb
add
imul
xchg
fistl
jl
add
movl
add
int3
xchg
lods
add
lret
xchg
add
mov
call
hlt
add
lret
fiaddl
add
icebp
add
scas
mov
lea
pop
add
push
push
push
call
ret
sti
aam
sti
mov
jecxz
xchg
call
int3
shll
call
mov
add
mov
iret
add
out
test
movsb
add
add
clc
add
mov
add
roll
jno
fcomp
jecxz
mov
add
add
rclb
lods
mov
add
cltd
jmp
lcall
lea
pop
xor
push
sub
dec
rol
pop
dec
push
not
rol
dec
pop
sub
push
push
push
push
push
push
call
leave
add
fs
call
mov
fcompl
add
aad
add
loope
mov
cltd
add
ficompl
add
mov
add
add
imul
add
pushf
add
movsl
add
push
in
stc
test
in
hlt
add
popf
repnz
add
push
nop
add
scas
movsb
ljmp
add
add
mov
push
add
popf
popa
mov
add
pop
jmp
push
push
push
lea
push
push
push
push
lea
push
push
push
call
add
pop
push
add
add
jbe
add
pop
add
add
pusha
cmp
mov
mov
add
add
mov
call
stc
int
movl
cmpsl
sbbb
hlt
fbstp
mov
mov
shl
cmc
add
std
add
popl
mov
rorl
iret
mov
mov
pusha
insb
pop
jge
les
add
add
pushl
pop
push
sub
not
pop
sub
push
lea
push
push
push
push
call
mov
add
add
add
mov
loope
pop
roll
mov
mov
add
sahf
add
movsb
add
add
je
push
addb
jle
cmc
stos
xchg
add
lea
mov
lret
add
fsubs
lods
std
shlb
add
xchg
faddl
sahf
add
in
lds
add
add
xchg
mov
jmp
lahf
add
fmull
cmp
push
decl
add
dec
cmp
jmp
lea
push
push
lea
push
push
lea
push
lea
push
push
push
call
call
push
add
pop
add
xchg
loop
jbe
cmc
push
rol
jo
add
aam
push
mov
pushf
push
mov
add
mov
loopne
add
add
lods
mov
add
popf
aam
add
add
scas
imull
add
add
iret
movsb
add
add
pop
xchg
test
add
add
pop
shr
push
push
push
push
push
push
call
imul
movsl
scas
test
fldl
mov
add
push
add
fcmovbe
add
add
jne
into
mov
mov
into
add
add
pop
add
jne
add
out
jbe
add
cmpsl
push
lods
cmpsl
lahf
lahf
add
add
add
stos
movsb
mov
fwait
mov
rcrb
movl
test
add
lea
pop
add
push
lea
push
push
lea
push
push
lea
push
push
call
lods
push
andl
add
add
push
add
pop
les
jns
push
add
roll
out
mov
jnp
test
push
mov
add
add
test
add
mov
add
aad
subb
in
mov
add
add
add
jge
add
fwait
mov
out
clc
add
jp
pop
mov
add
lcall
add
mov
les
jmp
push
lea
push
push
push
push
lea
push
call
loope
stos
fdivs
decb
cmpsl
add
add
bound
add
add
adc
rclb
ljmp
add
les
out
mov
add
mov
push
mov
movsb
bound
add
add
add
add
shll
in
jnp
mov
cwtl
add
add
mov
clc
add
jmp
jmp
in
fimull
pop
pop
push
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
add
mov
push
add
in
jb
add
imul
add
shll
test
mov
add
mov
xchg
add
mov
add
repnz
lahf
xchg
testb
add
push
lods
add
cltd
xchg
jb
insb
aad
loop
add
add
add
test
add
push
mov
add
mov
add
les
popa
sub
jmp
incl
add
add
dec
outsl
push
push
call
shl
rclb
add
jmp
push
shrb
add
pop
ret
roll
imul
fiadds
clc
add
add
add
mov
add
iret
test
add
testl
add
popf
add
add
add
xchg
testb
or
cmp
jne
push
push
push
lea
push
push
call
lock
negl
into
add
orb
add
into
add
loop
pop
lcall
xchg
add
imul
leave
push
add
add
push
add
call
push
lds
add
mov
incb
add
jo
xchg
add
add
pop
add
cld
lea
pop
leave
ret
push
push
push
push
push
lea
push
push
push
push
push
lea
push
call
add
bound
add
pop
push
testb
add
add
add
mov
testb
movb
add
mov
add
nop
add
js
add
add
add
add
stos
add
add
push
push
add
add
add
add
lods
add
add
xchg
mov
add
add
mov
lea
pop
mov
add
push
sub
add
sub
ror
pop
push
push
shl
pop
push
push
pop
push
push
push
inc
pop
push
push
push
push
push
push
push
push
call
add
pop
xchg
add
ja
add
lods
add
add
push
add
mov
clc
jl
cwtl
mov
in
add
mov
sti
lds
add
cmpsl
add
enter
jns
add
cld
add
in
add
add
lea
add
stos
movsb
lret
add
add
add
add
add
stos
shrb
mov
lea
pop
mov
lea
push
rol
lea
add
pop
sub
mov
push
push
push
push
call
test
add
add
add
les
cmpsl
sbb
fiadds
in
xchg
test
add
xchg
add
leave
fwait
pop
incb
add
mov
outsl
ja
cmc
lods
outsl
add
mov
stos
add
add
mov
add
add
add
not
jecxz
fstps
add
add
add
add
push
add
mov
lea
pop
shr
push
xor
shl
add
lea
pop
add
mov
push
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
lret
scas
lahf
add
cli
fs
mov
add
iret
filds
rcrl
mov
enter
add
loope
test
movsl
insb
in
fsub
mov
negb
imul
cmpsb
jne
mov
cmpsl
add
add
add
mov
std
add
jns
add
add
push
add
jo
mov
mov
add
out
add
int3
lea
pop
add
push
lea
sub
rol
pop
mov
add
push
inc
inc
add
ror
pop
xor
push
sub
pop
mov
push
dec
sub
add
pop
and
call
push
push
push
call
xchg
into
cld
add
mov
add
push
add
lods
add
mov
add
jmp
mov
add
lret
xlat
add
add
out
cmc
test
mov
addl
add
add
jb
add
push
aad
leave
push
add
filds
add
add
pop
add
push
not
pop
cmp
je
push
shl
pop
add
cmpl
jne
push
add
add
pop
xor
pop
pop
push
push
push
push
call
jns
stc
out
rolb
add
cwtl
add
aad
add
add
add
add
dec
add
out
js
add
popf
lret
nop
mov
add
mov
arpl
mov
lods
cld
add
push
fidivrl
add
add
pop
cmpsb
test
je
test
pop
add
lret
add
pop
add
ljmp
cld
lea
pop
pop
push
ror
dec
pop
pop
push
push
push
push
push
lea
push
push
push
call
test
popa
sti
add
scas
mov
mov
jns
add
iret
add
add
add
pusha
roll
add
mov
add
add
add
add
add
mov
add
xchg
add
jbe
add
mov
call
xchg
jno
add
lods
xchg
add
push
lock
loope
fsubrs
add
pop
add
pop
pop
push
dec
pop
leave
push
lea
push
lea
push
push
call
cltd
cmpsl
add
fs
call
pop
cmp
pop
les
nop
in
jge
jecxz
negb
add
add
or
movl
jno
add
xlat
mov
add
add
add
add
aam
out
add
add
add
add
add
push
add
push
add
test
out
add
add
iret
into
sti
loope
pop
outsl
add
cmpsb
rorl
lea
pop
ret
push
push
push
push
push
call
in
jne
jns
in
add
je
add
call
push
add
add
add
out
movsb
xchg
add
add
icebp
jbe
loopne
rolb
add
add
popa
into
add
add
add
add
jbe
add
pop
fiadds
fldl
mov
add
outsl
movsb
add
lret
mov
movsl
add
add
xchg
add
xchg
into
xorl
pop
mov
add
push
push
push
push
lea
push
lea
push
push
call
cltd
mov
addb
add
add
out
scas
add
add
mov
stos
mov
add
add
mov
mov
js
pop
stc
add
add
int
lcall
add
imul
xchg
mov
mov
add
je
mov
push
add
mov
add
add
add
out
add
sbb
push
push
push
push
push
call
add
add
add
add
add
add
add
add
fldl
add
pop
cld
add
enter
in
pop
xchg
enter
movsb
movsb
add
jae
add
add
push
pusha
aam
push
fadds
ja
cmc
add
testb
addl
in
nop
out
lds
addl
add
jno
add
add
int3
mov
add
pop
push
push
push
call
stos
add
jp
add
jle
pop
xorl
sti
add
mov
std
mov
add
add
leave
add
clc
pop
add
add
sti
test
mov
mov
add
clc
out
pop
mov
data16
mov
add
roll
popf
add
jns
clc
add
in
in
int3
lea
pop
pop
push
xor
shl
rol
lea
pop
pop
mov
push
push
push
push
push
lea
push
push
push
lea
push
call
push
jnp
add
pop
mov
mov
push
add
jp
cwtl
push
fildl
popf
insb
add
cmc
mov
add
into
movsb
mov
out
call
test
mov
add
add
stc
fdivrp
icebp
fbstp
jmp
add
add
mov
add
out
cmpsb
add
cwtl
add
push
add
lods
flds
fs
xchg
add
and
jns
call
rol
shrb
sub
pop
xor
push
ror
lea
shl
sub
pop
pop
push
lea
push
push
push
push
call
lahf
nop
add
xchg
rcrl
out
add
stos
add
add
xchg
xchg
add
mov
xchg
cld
popa
mov
mov
pushf
add
popf
add
jl
add
add
add
imul
add
icebp
add
in
add
jp
lods
add
test
mov
pushf
lret
add
add
enter
cld
add
xchg
add
sahf
add
pushf
test
add
pop
pop
push
shl
shr
pop
pop
push
push
push
push
push
push
lea
push
push
lea
push
call
add
cmpsb
add
in
add
loopne
cli
add
add
xchg
loope
movsb
add
adcl
jne
add
test
sahf
add
rcll
jno
leave
add
cmc
fcoms
add
imul
mov
jmp
pop
je
add
add
mov
fidivrs
pop
arpl
mov
add
pop
pop
pop
push
push
push
push
lea
push
push
lea
push
call
int3
add
stos
jge
add
add
add
add
xchg
add
push
mov
orb
test
add
add
movl
pusha
sti
insb
fstpl
add
cmpb
jp
enter
iret
or
push
pop
repnz
cwtl
add
push
add
mov
add
addb
push
lret
fld
add
addl
sbb
leave
push
push
lea
push
push
push
push
push
call
add
into
add
gs
add
test
lds
add
movsl
in
jbe
popf
lods
add
add
jb
out
std
add
lret
leave
int
pop
scas
mov
mov
add
addr16
test
add
arpl
xchg
pop
cmc
add
pop
add
xchg
in
xchg
mov
mov
add
jns
add
cmpsl
lods
std
mov
mov
arpl
ret
push
push
add
dec
add
pop
mov
add
push
push
dec
pop
push
push
push
push
lea
push
lea
push
call
filds
faddl
hlt
addr16
add
jl
mov
add
push
ljmp
pushf
add
sahf
add
add
pop
insb
add
jae
add
xchg
add
roll
xchg
add
add
aad
add
lods
les
pop
add
loope
add
add
frstor
mov
mov
icebp
add
shll
lea
orb
push
push
push
lea
push
lea
push
push
call
in
pop
add
add
add
xchg
cltd
imul
pop
add
add
add
add
movsl
test
add
cmpsb
jmp
orl
add
insb
add
popa
cmpsb
xlat
movsb
fisubrs
out
mov
addr16
aad
js
mov
jl
shr
loopne
imul
or
lea
push
push
lea
push
lea
push
push
push
push
call
jl
jns
lcall
add
imul
cmpsb
add
add
jp
lods
jae
sti
mov
add
add
nop
add
fcoms
bound
add
fidivs
cmc
jp
imul
add
sti
hlt
mov
add
in
loop
negl
add
out
add
popa
xchg
fstpt
jo
rcrb
mov
jo
add
mov
lea
pop
push
pop
push
push
push
push
lea
push
call
loop
cltd
out
add
or
pop
sarl
add
mov
jbe
loopne
les
sti
test
lock
lock
in
add
push
add
enter
jecxz
jmp
add
mov
add
add
lea
xchg
loope
pop
testl
out
iret
add
add
add
add
add
lods
fiaddl
jmp
push
jb
add
add
cmc
in
add
add
add
lea
pop
lea
sub
mov
push
rol
not
pop
shr
push
push
push
push
push
call
push
lock
xchg
lds
push
mov
pop
add
add
mov
add
popa
lahf
lret
data16
add
add
outsl
rclb
in
add
mov
into
leave
mull
xchg
jb
test
rclb
add
add
mov
add
xchg
add
rorb
pop
add
push
push
lea
push
push
push
push
push
lea
push
push
call
pop
hlt
shr
add
add
pop
add
add
cmc
insb
arpl
cld
add
loopne
movsb
add
add
xchg
pop
cli
lods
add
in
mov
leave
add
loopne
pusha
add
jmp
addr16
add
add
mov
add
add
add
add
add
leave
add
cld
lea
pop
mov
add
pushl
push
pop
popl
mov
push
lea
push
lea
push
lea
push
push
push
push
call
lahf
pop
add
imul
add
add
jnp
hlt
lret
pop
lods
add
pop
outsl
add
je
add
add
in
pop
add
add
lds
mov
jae
add
add
mov
lock
xchg
add
sahf
push
mov
add
pop
add
xor
push
push
call
out
add
jecxz
imul
cmpsl
push
mov
stos
add
popf
mov
push
popf
fucomip
orl
add
into
rorb
add
ficoml
add
enter
add
mov
in
add
add
add
cmc
mov
push
add
fs
mov
add
mov
fiadds
lea
mov
data16
adc
mov
add
push
push
push
lea
push
push
push
push
call
add
pusha
pop
jns
add
addl
in
add
push
repnz
mov
mov
add
add
mov
add
add
add
movsl
add
add
push
stos
jb
nop
add
mov
jbe
out
add
add
mov
out
rolb
add
cld
add
add
flds
call
in
js
cmpsl
mov
lea
pop
xor
call
add
push
push
push
push
push
push
lea
push
push
push
call
add
jns
lock
jp
add
shrl
add
icebp
add
loop
add
add
add
add
jbe
mov
fcoms
stos
addr16
stc
mov
pop
imul
jnp
popa
add
add
je
add
popa
jo
lock
out
add
lcall
clc
push
add
add
nop
add
add
pop
nop
nop
push
shl
add
pop
cmp
je
nop
nop
push
not
sub
sub
pop
inc
nop
nop
push
lea
push
push
push
push
push
push
call
jecxz
mov
ljmp
add
repnz
mov
mov
add
add
test
leave
jbe
mov
pop
aad
rcll
bound
add
push
add
xchg
add
mov
xlat
xchg
push
bound
stos
add
loop
imul
jnp
push
add
xchg
popf
add
add
mov
hlt
lea
pop
cmp
jb
push
shl
not
pop
xor
push
push
push
push
push
push
push
push
lea
push
call
add
add
push
lods
imul
add
add
add
cwtl
push
xlat
mov
add
add
add
push
add
addl
js
lods
xlat
mov
movl
popa
pusha
add
add
cmpsl
add
je
stos
add
scas
in
in
icebp
cltd
jge
add
add
add
push
stos
add
add
filds
xlat
mov
mov
cld
lea
pop
jmp
mov
add
push
inc
pop
movzwl
mov
push
dec
sub
pop
add
mov
push
rol
pop
xor
xor
shl
push
xor
sub
pop
xor
shl
push
push
lea
push
push
push
push
call
cltd
pop
sbb
mov
xchg
scas
add
into
add
add
add
mov
add
jne
add
mov
mov
fldenv
enter
std
cwtl
push
add
lea
mov
in
mov
xchg
add
out
into
jl
add
push
add
mov
ret
mov
cld
add
int3
add
fisttps
pop
xor
shl
push
push
push
push
call
push
mov
add
fldl
stos
xchg
add
icebp
add
pop
add
add
pop
cltd
push
addb
fldl
add
or
add
jecxz
jbe
add
add
fdivrl
cltd
jo
add
fildl
jo
pusha
repnz
leave
mov
add
add
add
mov
std
imul
iret
mov
test
add
add
out
int3
add
cld
lea
pop
xor
push
not
sub
add
pop
mov
push
sub
sub
pop
add
push
inc
pop
pop
pop
push
lea
pop
pop
push
xor
shr
pop
pop
leave
push
not
shl
pop
ret
push
mov
push
push
lea
push
push
lea
push
push
lea
push
push
push
call
addr16
outsl
sarb
loope
fmul
add
push
xchg
add
out
jp
test
imul
insb
add
jbe
add
ja
aam
add
flds
xchg
add
add
xchg
iret
movsl
in
add
add
js
imull
jns
add
add
mov
add
push
loop
add
push
jecxz
pusha
imul
lret
sahf
add
mov
lea
pop
push
push
push
not
add
rol
pop
push
push
shl
add
ror
pop
push
mov
mov
push
inc
lea
shr
pop
mov
push
push
lea
push
push
push
push
push
push
push
lea
push
call
jp
mov
pop
addr16
fiadds
add
nop
mov
shlb
add
add
jecxz
add
add
add
outsl
pusha
jo
add
rolb
pop
add
add
test
mov
pop
mov
jnp
add
les
rorb
test
add
push
add
lea
pop
mov
test
je
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
add
in
add
mov
not
orl
add
add
lea
fsubrs
arpl
add
add
into
test
fadds
add
jge
add
add
test
mov
jecxz
test
add
roll
mov
aad
in
add
pop
jns
rcr
mov
pop
add
hlt
lea
pop
mov
mov
push
lea
push
push
lea
push
push
push
push
push
push
push
call
test
push
add
pop
mov
add
add
int
lret
test
add
jnp
xchg
mov
mulb
jmp
xchg
movsb
add
add
out
jge
lea
hlt
lcall
add
sbbb
out
push
lret
movsl
mov
add
add
hlt
lea
pop
mov
inc
push
inc
pop
cmp
je
push
push
push
push
call
add
test
mov
push
in
push
pusha
add
arpl
js
hlt
xchg
add
xorl
lds
add
mov
push
xchg
fs
pop
pop
add
fiaddl
mov
add
add
jle
clc
add
add
add
add
shll
filds
ret
add
pop
pop
add
loop
lock
scas
bound
xchg
add
mov
lea
pop
test
je
mov
push
push
lea
push
push
lea
push
push
push
call
pop
add
lea
in
test
mov
arpl
add
addb
add
add
add
loopne
add
jae
mov
add
rcrb
add
add
movsl
add
mov
scas
push
lahf
lahf
add
lods
xchg
xchg
outsl
loop
add
aam
jns
add
add
mov
out
add
mov
add
add
add
mov
lea
pop
inc
cmp
je
push
shl
shr
inc
pop
test
jne
push
rol
sub
dec
dec
pop
xor
push
add
pop
pop
push
push
call
add
cmpsb
enter
mov
xchg
add
mov
mov
mov
aam
add
jo
jl
add
add
add
add
push
les
enter
jno
mov
push
mov
fwait
mov
add
loop
popf
add
addb
loope
add
cli
roll
add
enter
jne
clc
jmp
imul
mov
lea
pop
pop
pop
push
pop
pop
push
rol
pop
leave
ret
mov
push
push
push
push
push
push
call
mov
add
add
jne
add
jae
add
xchg
mov
fstpt
lods
add
jl
push
add
scas
lcall
add
call
jne
divb
repnz
repnz
cmpsb
jb
add
fldl
mov
popf
jecxz
out
enter
mov
jle
lds
stos
add
lea
pop
inc
cmp
jne
lea
push
inc
xor
shr
pop
mov
push
lea
push
push
push
lea
push
push
push
push
push
call
mov
iret
xchg
add
enter
test
mov
outsl
xchg
cwtl
add
fiaddl
mov
add
pusha
testb
jns
add
add
add
insb
lret
test
div
idivl
jp
xlat
loop
add
nop
ror
add
add
add
lahf
xorl
stos
iret
add
add
pop
test
je
mov
add
push
push
push
lea
push
lea
push
push
call
lds
add
mov
cmpsl
mov
cltd
jmp
ror
mov
add
mov
add
add
pop
mov
loopne
hlt
lret
add
sbb
cmpsb
add
add
add
out
jnp
add
ficoms
lock
add
je
stc
add
pop
xchg
lods
add
iret
add
mov
lea
pop
cmp
jne
mov
push
xor
pop
test
je
mov
add
push
push
push
push
call
add
mov
lcall
add
icebp
aam
add
mov
mov
cld
je
add
add
add
add
add
addl
loop
iret
add
push
add
aam
pusha
add
add
fstpt
add
push
mov
popl
mov
out
add
cwtl
add
hlt
popf
add
xchg
pusha
adc
loopne
test
call
shrl
lods
or
cwtl
outsl
push
push
lea
push
push
call
popa
add
add
push
stos
incb
cld
aam
add
fdivrl
add
call
add
jmp
add
std
add
out
xlat
pop
add
add
xchg
add
mov
add
insb
jno
add
in
mov
add
add
fstp
iret
add
add
add
imul
jmp
aam
bound
pop
jmp
xor
push
push
push
lea
push
call
pop
stc
add
mov
xchg
addb
cld
pop
add
into
add
add
mov
mov
mov
in
push
add
add
push
jne
fucomip
mov
js
mov
leave
add
pusha
push
add
add
in
test
add
jle
add
pop
mov
pop
rorl
mov
lea
pop
pop
push
push
push
call
add
je
mov
lea
push
jb
add
add
mov
jge
add
data16
cmpsb
add
add
nop
out
add
add
in
shll
add
add
mov
add
xorb
add
int
add
add
mov
movsl
push
add
xchg
jns
pushf
idivb
lock
mov
mov
jne
hlt
lea
pop
pop
pop
pop
push
shl
pop
leave
ret
lea
push
shl
dec
inc
pop
pop
pop
pop
push
push
push
push
push
push
lea
push
call
lahf
add
fnstenv
les
add
add
mov
mov
push
add
xchg
add
scas
add
pop
enter
pop
jl
push
jnp
add
filds
jbe
addb
icebp
cmpsl
jl
cld
add
mov
push
add
out
pop
insb
mov
add
addr16
jecxz
add
mov
lea
pop
pop
leave
ret
push
push
push
lea
push
call
mov
aad
ljmp
add
add
jb
lcall
loop
add
ftst
cmp
add
pop
int3
add
add
mov
xlat
jle
mov
nop
add
flds
lahf
add
scas
add
lahf
add
add
add
popl
scas
loope
add
aam
mov
movsl
add
cli
mov
lea
pop
mov
push
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
mov
add
addr16
fwait
push
ja
add
xchg
add
jmp
push
add
les
jge
loope
lock
mov
jo
push
add
out
add
lret
shlb
push
les
loopne
add
pop
test
jne
add
out
add
add
incb
imul
add
add
add
fldt
mov
lea
pop
pop
pop
pop
push
ror
shr
pop
pop
leave
ret
push
push
lea
push
lea
push
push
lea
push
lea
push
push
lea
push
push
call
mov
jle
test
sbb
add
mov
lods
add
add
pop
mov
adcb
add
ja
add
pop
popf
add
in
loope
je
add
add
add
hlt
add
add
test
mov
add
push
add
pusha
div
add
loopne
lret
add
mov
add
add
lea
pop
rol
push
push
push
lea
push
push
lea
push
lea
push
call
xchg
add
pop
lcall
clc
cmpsl
mov
add
jp
hlt
add
std
lcall
je
cltd
mov
add
add
jb
iret
add
pushf
ret
lea
xchg
testl
add
rolb
mov
add
add
iret
jnp
jno
add
jnp
add
addb
fistpll
fldl
mov
mov
lea
pop
rol
push
push
push
push
push
push
lea
push
call
int
add
add
xchg
lock
std
add
mov
add
add
arpl
mov
pusha
mov
out
mov
sarb
add
scas
add
fcompl
mov
xchg
push
mov
add
add
popa
rclb
jp
mov
incb
add
lock
popl
add
testl
lea
pop
xor
push
dec
sub
add
pop
inc
push
lea
push
push
push
push
call
stos
mov
in
test
fiadds
add
add
jns
add
lret
add
call
imul
pop
bound
add
mov
hlt
call
add
add
add
enter
popa
add
repnz
js
sahf
add
xchg
jecxz
add
iret
cmpsl
add
mov
lock
lea
pop
cmpb
jne
ret
hlt
nop
mov
sti
movsb
shll
sti
movsb
shll
sti
movsb
inc
mov
sti
xlat
loopne
sti
movsb
xchg
mov
sti
outsl
in
sti
mov
mov
sti
movsb
shlb
sti
or
adc
mov
scas
adc
lock
mov
mov
insb
je
cmp
je
inc
add
or
fmul
and
or
movsb
leave
pop
push
cli
adc
or
imul
jne
dec
repnz
push
add
xor
push
scas
mov
scas
cld
sbb
ds
xchg
dec
dec
sarl
insl
mov
mov
lcall
mov
arpl
test
push
or
aam
insl
es
faddl
cli
adc
mov
mov
jl
outsb
in
outsl
and
call
pushf
or
ret
mov
lret
popf
lods
pop
gs
nop
stc
leave
cmp
sub
popf
fists
subb
mov
xchg
mov
and
pop
rolb
cltd
dec
bound
sub
out
mulb
ja
inc
jle
sub
push
mov
lds
xchg
int
popf
pop
xor
mov
push
arpl
pop
add
lock
mov
sbb
sbb
cmp
jge
adc
cmpsl
sub
or
in
cltd
adc
inc
cmpsb
insb
and
and
mov
jl
jmp
adc
adc
adc
ds
negl
push
and
arpl
pop
rorb
out
sarl
mov
push
push
lret
inc
fsts
sub
xchg
cmpsb
xor
adc
nop
jns
cli
out
ja
loopne
ja
repnz
push
leave
sub
into
out
cmp
arpl
mov
dec
pusha
xor
fiadds
mov
and
pop
adc
xchg
pop
pushf
in
aas
mov
jg
push
les
mov
insb
shrb
ret
fnsave
pushf
lret
mov
test
leave
neg
lahf
cmp
adc
imul
test
sub
lret
dec
sub
loop
mov
enter
sub
pop
jae
aam
pop
pop
or
ss
shrb
adc
lcall
sahf
push
or
negb
lods
cwtl
scas
or
out
arpl
pop
sarb
xor
adcl
lods
mov
cs
aas
lahf
sbb
mov
pop
xor
aas
cltd
fnstsw
sbb
adc
stos
pop
cmp
enter
mov
cmp
mov
aad
insb
jmp
dec
add
in
dec
mov
in
out
mov
mov
popf
lcall
pop
idiv
jnp
cs
cli
int
subl
fldl
mov
addl
das
cld
mov
cmp
pusha
fistpl
xchg
ret
notb
adc
loopne
ljmp
icebp
mov
inc
call
ljmp
push
xor
jecxz
jmp
std
adc
decl
outsb
mov
xchg
pushf
jle
cli
test
mov
and
cwtl
popa
aaa
rcrl
mov
cwtl
outsl
mov
or
mov
cmp
sub
pop
mov
xchg
or
lahf
add
ljmp
sub
sub
adc
sbb
xlat
js
repz
sub
inc
outsb
mov
jg
dec
sub
imul
aam
xchg
jmp
int
hlt
and
mov
adc
clc
in
inc
pop
lret
loop
data16
adc
sahf
daa
lcall
and
ret
test
scas
lods
jl
andl
fadd
mov
sub
mov
test
or
test
pop
adc
sbb
dec
jne
push
pop
movsb
push
int3
push
test
cmpl
js
sub
dec
lock
das
dec
roll
mov
sub
nop
test
xchg
fisttps
push
sub
shll
fdivl
sub
movsl
cwtl
in
inc
add
jno
inc
add
mov
bound
and
jp
jge
or
into
popf
add
jne
adcb
and
out
xor
push
lods
xchg
and
xor
mov
mov
dec
in
clc
pop
mov
pop
bound
xor
loop
out
xchg
sbb
mov
das
out
scas
cmp
inc
push
lock
adc
or
mov
pop
shll
rcrl
cmc
and
cmp
xchg
xchg
repnz
pop
xor
icebp
outsb
leave
sub
mov
rcrb
int
insl
inc
test
mov
lods
fsub
scas
cmp
stc
out
cmp
xchg
mov
mov
dec
outsb
test
gs
push
mov
adc
inc
in
movsb
popf
add
lock
pop
repnz
push
xchg
add
out
test
int3
sub
test
or
sub
xchg
add
js
add
pop
jcxz
push
je
lods
and
lahf
mov
pusha
fwait
xchg
xchg
test
jecxz
outsb
nop
lods
es
ret
xor
mov
mov
or
lahf
imulb
cmp
mov
fcomps
outsb
int3
push
jg
lds
sbb
mov
loope
inc
push
sahf
out
push
call
int3
out
dec
pop
bound
popa
xor
lahf
add
push
push
int
fdiv
test
push
test
jne
push
xor
sbb
dec
stc
lret
shl
adc
add
fwait
iret
popf
lahf
inc
mov
cmp
aad
movsb
shlb
ljmp
pushf
bound
imul
lcall
jg
outsl
and
adc
inc
mov
lea
data16
rcll
pop
movsb
and
jae
movsw
ja
push
and
sbb
cmp
hlt
loop
jb
mov
jle
xlat
mov
cli
push
das
sbb
inc
push
jo
cmp
sbb
hlt
and
xchg
negb
xor
icebp
mov
fistps
int3
aaa
mov
mov
dec
outsl
mov
imull
or
cs
jnp
rol
testl
in
mov
dec
push
sbb
aam
jge
hlt
mov
cli
cli
jle
rcrl
mov
push
mov
cmpsl
cmp
rolb
outsb
out
xchg
mov
insb
lods
repz
inc
xchg
add
stos
sbbb
pusha
enter
out
dec
ret
pop
imul
push
push
xchg
inc
rolb
enter
rol
enter
cmp
push
dec
mov
pop
xchg
fwait
mov
lahf
sbb
outsl
jb
lods
stos
pop
cs
xchg
fdiv
in
or
adc
movsl
sar
std
jo
inc
or
ds
enter
push
cmc
movsl
imul
dec
xlat
pop
arpl
outsb
sub
mov
cmp
aaa
dec
or
sub
mov
test
fildl
out
sub
pop
push
adc
fwait
lahf
inc
ret
call
decb
add
inc
daa
loope
repnz
daa
lock
mov
dec
mov
fs
xlat
jo
lea
sub
xor
test
into
pop
in
dec
mov
je
add
fisubrl
aas
lds
mov
hlt
dec
push
cmp
cmp
imul
mov
out
pop
mov
mov
leave
nop
lcall
aaa
popa
xchg
push
push
mov
pop
jecxz
push
clc
mov
test
push
insb
int
dec
enter
imul
lods
or
pop
adcl
shrl
mov
faddl
or
in
pop
or
fwait
std
pop
dec
mov
push
or
arpl
mov
in
sub
cli
aam
les
popf
inc
xchg
sub
outsb
cli
and
andb
pop
cmpsb
adc
test
into
sahf
loopne
and
jmp
imulb
and
fnstcw
test
or
je
xor
jbe
dec
fnstsw
cmp
mov
sahf
je
fsubl
mov
mov
mov
pop
jmp
pop
jmp
dec
into
sub
fwait
lahf
add
jno
cmp
enter
jo
mov
jb
add
push
mov
jae
and
call
paddb
loop
pop
imul
ja
jbe
fidivs
sub
push
popa
call
jg
jg
sub
mov
sub
stos
adc
aad
lret
call
das
ja
movsl
sbbl
repnz
cmp
push
stos
or
out
insb
inc
inc
fsubs
cmp
xchg
push
insl
cmc
cmp
xchg
cmp
fildl
sub
leave
add
lods
popf
ja
cmp
xchg
sub
adc
sbb
lods
lock
mov
jmp
add
jmp
push
fistl
in
fstpt
test
gs
mov
jno
das
enter
lods
inc
outsb
xchg
jo
imul
jle
addr16
mov
cmp
lds
cmp
pop
pop
out
in
mov
sbb
mov
sbb
push
mov
xor
lock
jmp
mov
negb
fmuls
adc
pop
mov
lahf
inc
mov
xchg
dec
jne
jns
lock
or
and
add
or
ret
ret
fmull
push
je
cltd
mov
scas
jno
adcl
and
mov
push
or
mov
jmp
mov
loope
push
leave
pop
or
ret
push
fisubs
mov
sarb
sub
js
dec
out
mov
inc
lds
iret
in
movsb
or
dec
repz
pop
into
std
push
adc
outsb
or
int3
mov
arpl
xor
iret
cwtl
inc
xor
jge
jle
sbb
inc
imul
shl
mov
clc
int
mov
call
sub
mov
sub
idivl
into
or
sti
pop
mov
xor
mov
in
mov
lock
jnp
push
and
mov
xchg
adc
mov
and
push
add
pop
mov
sbb
int
cld
jg
aad
lcall
repnz
daa
xchg
and
bound
sub
mov
out
icebp
repnz
inc
mov
adc
adc
cld
data16
push
pop
dec
hlt
sbb
sub
xor
sbb
jne
mov
push
mov
in
addr16
jp
popa
push
lcall
adc
out
insl
sub
jmp
shl
iret
inc
pop
cs
mov
mov
mov
xchg
dec
xlat
lret
dec
or
test
cmpsl
and
repnz
ss
pop
mov
mov
mov
std
dec
shlb
and
ljmp
xchg
sahf
push
les
in
push
jne
inc
inc
mov
hlt
dec
es
test
imul
inc
outsl
pop
fisubrs
outsl
es
mov
pop
iret
call
sbbl
cmp
mov
ds
ret
jmp
out
or
jno
fst
sub
loope
sbb
xor
jg
out
inc
ret
jg
xchg
les
inc
pop
and
fadd
xchg
sbb
fisttps
mov
ds
mov
incl
xchg
xor
dec
xlat
inc
cs
pop
pop
mov
mov
inc
cmp
out
xchg
cwtl
test
dec
sbbl
pop
dec
adc
jmp
cmp
push
pop
adc
mov
ret
cs
mov
ret
dec
outsl
fwait
ds
jae
stos
shrb
mov
in
popf
jl
call
sbb
jno
and
jae
imul
xchg
push
xor
leave
mov
inc
mov
lret
sar
push
dec
rcrb
mov
push
icebp
cmp
nop
das
enter
sti
push
stos
sbb
cmp
hlt
jns
or
jmp
fisttpl
cmp
adc
adc
jae
cmp
lods
mov
xor
mov
rorb
mov
mov
lock
int
in
sub
daa
shlb
imul
andl
inc
xchg
pop
lods
inc
push
mov
imul
aad
mov
faddl
lea
jg
dec
roll
xchg
lcall
mov
mov
stos
cmp
inc
or
jne
cmc
test
and
aas
mov
div
jno
gs
inc
mov
jo
mov
inc
rolb
push
clc
mov
sarl
mov
repz
jno
subl
adc
dec
test
lods
push
add
sarb
aad
mov
mov
nop
sbb
cld
mov
int
in
inc
cmp
imul
or
movsl
and
adc
fs
sub
inc
and
xchg
pop
subb
xchg
outsb
loope
and
mov
add
sub
push
inc
ss
mov
pushf
mov
mov
ror
push
cmpsb
cmp
int
ljmp
cmpsl
inc
and
movsb
clc
mov
mov
or
andl
xor
mov
xchg
add
cmp
xor
mov
dec
in
or
cmp
or
sarl
pushf
and
lret
xor
jl
popf
mov
dec
mov
xor
lods
cmpsl
test
test
lcall
sub
insl
stc
mov
enter
and
rol
mov
adc
mov
sub
mov
jo
jne
or
cltd
dec
mov
and
mov
mov
xor
pop
xchg
adc
cmp
ror
sub
out
jno
fdivs
iret
daa
rorl
stc
insl
mov
imul
sub
dec
or
dec
mov
jmp
mov
jno
sub
daa
sub
dec
sahf
pop
icebp
movups
fcoml
negb
mov
loopne
push
pop
in
jno
and
mov
test
push
jp
lcall
jb
mov
jp
iret
stos
xchg
mov
pop
mov
add
out
and
xor
popa
roll
fdivs
test
cltd
cmp
mov
imul
into
mov
pop
dec
inc
test
add
imul
jecxz
pop
sbb
enter
nop
lods
push
pusha
cmp
push
fldl
mov
cmc
push
pop
leave
js
test
test
cli
call
out
push
lds
out
sbbl
lahf
cvtpi2ps
ljmp
mov
lea
mov
xchg
inc
movsl
imul
xor
test
push
mov
inc
ljmp
lods
insb
aad
jl
nop
iret
bound
faddp
ja
xchg
inc
les
add
or
cmp
push
into
iret
inc
jg
sbb
jmp
pop
push
dec
int
cltd
mov
fcmovnu
inc
mov
ds
adc
loopne
pop
sbb
cmc
dec
outsl
push
pusha
sbb
xchg
add
scas
rcll
sub
xor
push
sti
lock
mov
hlt
dec
in
test
js
cltd
pop
or
xor
push
cmpsl
cwtl
sbb
movsb
jl
loope
shll
dec
sub
sub
int3
aad
call
out
cmovle
inc
sahf
aam
fcoml
mov
mov
ljmp
cmpsb
cmp
jg
dec
xchg
jae
lcall
outsl
push
xchg
cmp
xchg
sarl
int
and
adc
in
or
stos
or
jecxz
cld
jmp
jno
das
xor
dec
pop
jnp
pop
lret
dec
cmp
in
push
cmp
jg,pn
out
lea
jge
sbb
xlat
sbb
and
xor
out
mov
mov
into
add
dec
insb
add
cld
arpl
inc
cwtl
pop
cmp
sub
aaa
jl
sub
xor
fnstenv
dec
or
es
xor
aam
outsb
jb
hlt
push
push
inc
cltd
xlat
int3
jmp
sbb
icebp
lret
xchg
inc
mov
stc
mov
iret
lock
lock
push
push
inc
jp
or
sti
xchg
into
and
test
push
jle
add
sub
pop
mov
mov
out
mov
aas
pop
mov
imul
adcb
dec
push
mov
lock
add
dec
jge
fisubrs
xchg
arpl
sbb
xchg
or
ficoms
aaa
loope
in
add
enter
xor
push
loop
clc
out
or
jbe
test
mov
sbb
loope
pop
jmp
shll
or
insl
or
or
and
cmp
ret
fstl
in
out
inc
jb
cmpsb
xchg
mov
out
inc
sbb
mov
stos
push
stc
mov
cwtd
icebp
in
xchg
sbb
je
shll
loope
adcl
out
push
insb
stc
cmp
dec
add
jb
pusha
jae
fistpl
adc
adc
sbb
imul
xchg
fistps
and
ds
xor
lahf
daa
outsb
mov
movsb
jge
sbb
or
nop
mov
fmull
mov
adc
rcr
out
test
psubusw
addr16
pop
mov
popa
loop
ss
test
and
lock
lods
pushf
shl
push
jno
add
and
adc
int3
sbb
adc
add
inc
test
sti
lret
arpl
push
jg
or
sub
pusha
mov
addb
xchg
into
mov
icebp
cmp
out
ss
pusha
sub
xchg
fistps
add
add
test
jae
icebp
or
jo
push
loop
lods
js
orl
movsb
out
int3
aaa
mov
insl
jo
inc
pop
xor
and
sub
or
aas
jo
lods
lods
lock
divb
and
jnp
out
cmp
or
stos
jno
std
jns
test
push
sbb
shrl
hlt
add
aad
daa
xlat
sub
sub
lds
mov
adc
shlb
sbb
call
mov
sbb
pop
jl
push
pop
shrl
inc
out
and
in
insl
imul
outsb
inc
jb
subb
and
xchg
stos
scas
mov
iret
mov
mov
add
add
cmpsl
js
mov
and
add
sbb
negl
js
mov
mov
insb
add
outsb
add
jns
and
insl
fs
adc
shlb
aaa
js
inc
dec
int
ja
leave
sbbb
std
aas
dec
add
sbb
sub
cmp
push
jns
imull
sbb
cli
cmpsl
inc
mov
test
ljmp
fst
sub
mov
mov
ljmp
inc
push
jns
sbbl
outsl
adc
insl
negl
into
cli
add
in
pop
and
adc
and
inc
adc
mov
jne
sbbl
lds
jecxz
adc
lret
push
insl
mov
add
adcl
push
popa
enter
loopne
inc
xchg
ss
pand
jmp
repz
mov
iret
fdivrl
loopne
and
stc
pop
popa
xor
ret
mov
scas
jmp
push
or
mov
pop
or
sub
lret
jbe
mov
cli
xchg
cmc
or
leave
imul
ja
fwait
push
cmp
push
jle
dec
ss
pop
shlb
mov
add
or
adc
push
sahf
mov
jbe
aas
xchg
sub
out
call
idiv
std
push
push
add
jmp
and
push
lock
cmp
adc
int
orl
add
lahf
icebp
cmp
and
push
mov
pop
fdivrs
scas
pop
pop
jns
bound
imul
lods
je
sbb
adc
inc
aam
data16
adc
sub
popl
add
mov
pushw
out
cmp
pop
shll
fisubrs
test
adc
pop
outsl
mov
cwtl
daa
mov
pop
push
push
leave
es
mov
scas
cmp
push
lcall
mov
sub
cmpsb
fs
mov
stos
xchg
cmpsb
call
xor
les
jecxz
les
lock
and
cmp
jmp
mov
and
js
and
mov
cld
or
pop
adcl
xchg
test
and
ja
adc
sub
sbb
leave
mov
jg
and
mov
shlb
push
lock
fdivrl
jns
daa
sbb
xchg
mov
mov
outsl
mov
and
aam
mov
sti
push
push
aas
mov
add
xchg
and
leave
jmp
jmp
inc
movsb
pushf
mov
out
fistps
cmp
jl
pop
mov
loope
push
xchg
cmpsl
xor
mov
in
ret
aad
mov
dec
jns
push
pop
cltd
sbb
out
pop
dec
or
add
insl
mov
push
std
push
xor
mov
lea
mov
iret
jnp
and
jecxz
add
stos
lds
insl
das
not
pop
or
clc
adc
sbb
insb
out
arpl
adc
fwait
xchg
cmpsl
dec
outsl
out
out
sbb
push
cmc
imull
mov
hlt
push
shrl
outsb
push
test
pop
lods
mov
scas
loop
and
mov
addb
xchg
cld
mov
imul
mov
loop
push
pushl
dec
dec
and
cmc
sub
cmp
stos
adc
pop
fwait
cmp
js
mov
ret
cmp
cmp
add
and
push
sub
mov
sbb
imull
std
aas
inc
inc
inc
into
notb
fsubl
inc
mov
adc
test
cmpb
mov
jecxz
sub
cld
jo
or
leave
mov
into
dec
sub
mov
sbb
lock
pop
inc
scas
inc
pop
call
rolb
dec
test
test
out
jge
add
xor
mov
dec
xchg
sbb
or
aaa
bound
negl
pop
mov
ficompl
rcrb
adc
pop
sbb
push
repz
aas
pop
jb
xchg
fs
push
andl
mov
sbb
mov
push
fstp
pushf
cmp
adc
nop
outsl
inc
fadds
push
rcrb
aad
cmp
xchg
push
sub
mov
cmp
lahf
idivb
dec
sub
repz
mov
add
xchg
jbe
fcmovu
lcall
fwait
sti
xchg
xchg
pop
push
xchg
or
mov
lret
xchg
pop
inc
fcomp
jp
sahf
sub
je
xor
dec
into
sbb
fiaddl
adc
and
sbb
shlb
or
jmp
cmp
mov
xor
dec
test
mov
adc
or
repz
push
andl
rcr
fists
fisttps
pop
mull
fistl
add
icebp
popf
mov
ds
cmp
inc
or
jl
popa
and
xchg
xor
xor
sub
dec
sbb
cmpsb
aas
inc
lret
outsl
push
inc
decl
out
mov
jns
and
fsubl
lods
mov
call
call
push
andb
sub
xor
xchg
fwait
xlat
pop
lods
cmp
add
inc
pop
pop
out
hlt
rorl
pop
ds
popa
add
jle
or
in
ds
push
adc
xlat
mov
jecxz
or
icebp
je
scas
mov
cmp
or
mov
cltd
testb
adcl
mov
mov
das
les
sub
cld
sbb
pushf
lret
push
pusha
inc
adcl
aam
repz
sti
test
sbb
xor
in
mov
leave
sbb
mov
sbbl
and
jno
push
mov
xchg
dec
clc
mov
out
movsb
sub
cwtl
sbb
cmc
lcall
jl
xor
and
mov
cli
pop
cmp
mov
adc
enter
fnstcw
mov
inc
xchg
xor
fwait
jb
jp
sbb
rcrl
xchg
add
pop
add
cwtl
std
ss
mov
lahf
mov
js
xor
int3
sub
xor
or
cmp
arpl
sahf
adc
pop
sbb
aad
imul
push
sbb
or
sub
adc
xor
xchg
adc
in
mov
or
cmpl
out
jb
es
ds
pop
popf
or
out
push
mov
fucomp
andl
loop
cmpsb
test
add
bound
outsl
fadd
hlt
add
lods
gs
mov
aas
in
cwtl
insl
dec
sub
out
mov
push
inc
outsl
fwait
les
push
mov
jmp
mov
jmp
lret
jno
mov
mov
and
js
inc
aam
or
dec
mov
push
mov
add
jb
loop
pushf
shlb
imul
mov
pop
sbb
in
xchg
fcoml
loope
mov
lds
imul
test
sbb
aas
stc
dec
pop
es
add
jg
mov
sub
fnstcw
ljmp
insl
lret
pop
dec
sbb
adc
xchg
aad
cmp
dec
xor
scas
pop
nop
sub
jbe
jl
jns
inc
repnz
push
sbbb
sbbb
arpl
fs
scas
pop
mov
and
push
mov
popf
pop
arpl
repnz
adc
push
pop
mov
sahf
sarb
stos
ss
or
pop
imull
aas
scas
xor
pop
dec
dec
cmp
dec
lret
add
loope
iret
jmp
fwait
cmpsl
cmpb
dec
js
jbe
sbb
add
ret
gs
aad
or
into
mov
movsb
xor
mov
sbb
scas
cmpsb
jge
cmp
sub
scas
pop
xchg
mov
inc
sub
xchg
jg
xchg
mov
xchg
xchg
xchg
pop
ret
in
lcall
inc
mov
lret
adc
fidivl
xor
mov
xchg
ja
addl
icebp
sub
data16
popf
mov
cltd
lods
es
xchg
sbb
in
scas
test
aas
xchg
and
add
sbb
cmp
or
cmp
ds
and
sbb
adc
repnz
mov
mov
mov
lret
push
shrb
scas
daa
cmp
dec
incb
mov
pop
inc
imul
sbb
sub
fisubrs
push
ljmp
ss
xchg
scas
out
loopne
rorl
sti
xchg
test
nop
cmp
pop
daa
lods
fwait
shrb
cli
call
jmp
jne
dec
aas
pop
pop
mov
shrl
sarl
fiadds
test
jp
negb
out
pop
mov
repnz
lret
jp
or
fmull
out
adc
leave
jo
jmp
inc
mov
daa
sbb
lret
movsl
xorl
pop
cmp
das
lods
xchg
push
repnz
jnp
xchg
mov
dec
cmp
and
mov
sub
out
out
mov
into
aas
or
dec
movq
imul
jb
inc
rorb
cmc
and
mov
imul
jle
stos
mov
pop
or
mov
sbbl
shll
push
into
push
mov
fistps
mov
sub
mov
outsb
xchg
pop
out
pusha
sub
or
rolb
test
add
cwtl
inc
loopne
out
stos
les
fstpl
mov
fsubs
xchg
cmpsl
pop
repnz
aaa
add
mov
addr16
out
xlat
dec
or
je
insl
rcrb
stos
sub
ja
ret
sbbl
cli
fs
mov
mov
push
jb
jbe
cld
xor
cvtdq2ps
in
mov
jae
shrl
ja
sub
sar
fwait
inc
je
test
mov
clc
mov
and
lods
jecxz
cmp
push
fucompp
mov
mov
pop
dec
xchg
popf
scas
movsl
rclb
popa
hlt
outsb
std
movsb
mov
mov
or
adc
loop
mov
imul
test
pop
cltd
xlat
push
movsb
xor
test
daa
popf
jge
sbb
or
les
mov
stos
push
push
sub
data16
in
jno
out
add
pop
jne
ss
daa
adc
rorb
pop
mov
stos
sbb
cltd
aad
out
fstpt
sub
cltd
stos
jns
rcll
jae
orl
lea
cmp
mov
mov
js
dec
push
pusha
shrb
pop
lea
cltd
cs
jbe
cmp
cli
jns
jo
into
jg
out
sub
out
jmp
sbb
mov
jns
add
lahf
and
mov
adc
scas
or
std
add
push
dec
loop
inc
hlt
loope
int3
out
mov
xchg
pop
fisubrl
sar
test
or
clc
test
push
lods
pop
movsb
and
push
push
jo
stos
mov
addb
adc
in
mov
inc
or
lret
fcmovnu
dec
pusha
xchg
or
incl
mov
ficoms
xchg
ljmp
mov
push
ss
push
sbb
adc
test
push
add
mov
mov
inc
push
dec
int
shlb
out
mov
imul
lock
and
daa
dec
or
adc
lcall
push
stos
jnp
in
mov
fiaddl
pop
and
lock
lock
xchg
and
adc
and
cmpb
and
pop
ficompl
or
adc
sub
sbb
mov
andl
mov
mov
push
jne
std
pop
mov
lea
mov
addb
pushf
test
rolb
jmp
gs
mov
jp
xor
xchg
sti
popa
cmpsb
adc
fnstsw
sub
fistps
aad
inc
mov
out
ficomps
xchg
cmc
or
gs
xchg
pop
pop
inc
std
int3
div
aaa
shlb
pop
jno
dec
sub
sbbl
mov
fsubs
mov
es
dec
add
popf
xor
adc
lahf
out
push
lcall
mov
mov
mov
push
sbb
xchg
ds
sbb
and
and
mov
in
xor
adc
mov
cld
mull
sbb
loop
xchg
mov
adc
dec
out
xchg
dec
push
mov
aad
lahf
sub
mov
and
sbb
jno
and
imul
fdivr
cmp
dec
leave
dec
jne
hlt
mov
mov
out
shl
inc
dec
das
xchg
negl
sbbb
addr16
push
popa
mov
xor
xor
xchg
fdivrp
xor
imul
popa
mov
cmp
mov
ret
or
rorl
lret
and
lret
xchg
jno
or
cmp
and
mov
dec
subl
add
jnp
mov
inc
xchg
cs
xchg
sbbl
in
decb
adc
sbb
orps
js
sbb
xor
inc
or
popa
clc
pop
dec
jecxz
xor
add
push
mov
pop
cs
mov
push
jl
xchg
push
insb
lcall
sbb
enter
jle
jl
mov
jl
mov
sub
nop
orl
mov
pop
xchg
fisubrs
push
sub
or
xlat
mov
test
mov
lods
adc
cmp
lock
xor
xchg
fsubrs
sub
sub
cld
dec
cmp
fsubrl
jno
adcb
cmp
or
adcb
mov
mov
inc
stos
addr16
jmp
push
mov
and
ds
xchg
add
popa
out
sarb
mov
cmp
aam
inc
loop
xor
shll
into
push
jmp
icebp
and
push
dec
dec
inc
test
popa
inc
scas
adc
or
test
or
adc
fsts
out
call
inc
pop
inc
cmp
cmc
xchg
and
mov
cmp
insb
jle
adc
rcl
fsub
shll
cltd
mov
sub
lock
and
add
icebp
out
dec
pop
notb
xchg
sbb
jp
jge
mov
clc
inc
jge
pop
loope
push
adc
and
std
mov
mov
pop
out
je
xchg
push
jecxz
movsl
cmpsl
incb
xchg
pop
jle
add
arpl
pop
test
rcll
jecxz
or
stos
xchg
ljmp
in
fnstenv
fcompp
fbstp
addl
jmp
out
ljmp
xchg
popa
jae
pop
mov
xchg
jnp
fcoms
cmp
pusha
subl
push
lds
gs
movsb
sbb
xchg
loope
pushf
add
rclb
mov
mov
stos
andb
dec
and
xchg
inc
rcl
lds
sti
xor
inc
adc
dec
mov
cli
pop
pop
mov
loope
add
xlat
or
roll
or
add
inc
popf
dec
jp
mov
lahf
xor
jmp
mov
lds
ljmp
fs
add
mov
inc
xorb
cltd
inc
inc
daa
jae
lret
lretw
add
imul
mov
lret
lods
test
lods
fsts
movl
popf
inc
mov
sub
les
adcb
stos
daa
leave
sub
ja
test
jmp
fwait
push
mov
loopne
imulb
test
lods
icebp
lock
addb
test
hlt
les
cmovo
sbb
inc
cmp
and
mull
mov
add
sti
rol
jne
cmp
addb
mov
jb
mov
js
cmp
jmp
repz
and
and
aam
jmp
imul
int
adc
rclb
xchg
ror
mov
sbbl
push
mov
test
push
jns
xchg
mov
add
fidivrs
ror
or
lret
data16
cmpl
push
mov
clc
dec
iret
sbb
fmulp
inc
sub
xlat
push
stc
test
sub
xchg
add
jmp
lret
in
jge
fcmovne
inc
sahf
mov
outsl
andb
imul
idivl
mov
mov
mov
inc
mov
mov
jmp
lcall
sub
add
cs
shrb
ja
nop
cwtl
cmpsl
adc
sbbl
mov
sti
or
mov
and
outsb
xchg
add
ds
mov
add
scas
repnz
mov
jp
rolb
and
pop
mov
adc
ds
sbb
mov
mov
test
je
testb
push
lea
dec
jb
jbe
dec
cmpsb
imul
cmp
fistps
test
and
push
rol
sub
movsl
pop
cmpb
mov
or
sub
mov
mov
jmp
insl
jmp
mov
stc
lahf
test
mov
push
cmpsb
jno
pop
xor
add
scas
sub
sub
loope
lea
push
mov
adc
and
in
pop
sbb
ret
enter
lods
mov
mov
nop
lret
mov
or
inc
xchg
loope
mov
push
cmpsl
push
mov
lret
dec
adc
aaa
insl
je
in
into
mov
mov
pop
rcrb
sbb
inc
mov
fwait
cwtl
js
jb
lret
mov
inc
outsl
daa
data16
out
inc
xchg
mov
sbb
add
dec
and
xlat
add
out
sbbb
lods
std
dec
stos
dec
push
aam
movsl
xlat
xorb
lock
pop
cwtl
adc
in
ret
jmp
cmp
xchg
out
pop
cld
imul
mov
xchg
add
ja
jg
inc
testl
pop
mov
jbe
jg
pop
sbb
cltd
pop
xor
mov
daa
dec
jg
cmp
les
das
lods
ja
enter
int3
mov
or
fs
outsb
lods
subb
adc
push
stos
cli
sub
stc
jb
fmuls
push
cmp
fldcw
pop
int
and
xchg
lea
icebp
push
mov
pop
popa
dec
cmpsl
popf
jmp
sbb
inc
dec
or
xchg
inc
sbbl
fcom
sbb
fstpl
cwtl
adc
addb
stos
sub
or
mov
mov
cmp
inc
rol
jnp
dec
imul
xchg
push
int
fidivs
aaa
fs
mov
inc
push
loop
mov
push
fsubl
shll
xchg
jae
jl
mov
jl
xchg
mov
jmp
pop
jb
or
daa
fidivrl
sub
jbe
sahf
xchg
movsl
inc
xor
popa
add
addb
jle
inc
xor
inc
sbb
xchg
push
dec
lret
xor
dec
or
pop
push
sbb
pop
imul
pop
call
push
outsl
movsl
push
dec
fcmovbe
xchg
push
mov
adc
adc
lret
popf
inc
jne
or
jge
sub
orb
or
addr16
cli
subl
test
push
xchg
jge
js
sbb
mov
inc
add
ret
dec
and
arpl
push
movsl
inc
cld
leave
aad
inc
xor
mov
cld
sub
and
insb
adc
shl
mov
pop
mov
sbb
jnp
fisubrs
sbb
add
mov
pop
ret
sbb
push
out
pushf
push
or
sbb
or
test
test
mov
and
mov
dec
cwtl
sbb
push
mov
cmp
loope
mov
xlat
scas
jns
xchg
or
loope
adc
test
unpckhps
mov
clc
dec
mov
sbb
leave
enter
out
pop
hlt
cld
out
jb
cltd
dec
dec
xchg
in
lcall
scas
imul
fisttpll
adc
test
arpl
mov
bound
pop
xchg
mov
sub
push
or
sahf
push
mov
insl
adc
sbb
jb
ret
pop
push
push
out
dec
push
xchg
fsubr
scas
pop
sar
sub
popf
adc
dec
ret
out
jmp
fidivrs
repz
mov
xlat
mov
mov
ret
cmp
dec
jbe
clc
mov
and
or
out
dec
popa
jns
pop
push
enter
push
arpl
adc
fwait
and
add
aas
cmc
outsb
lret
shl
loopne
lret
inc
push
ja
ja
jbe
out
jne
jbe
pop
xchg
xor
adc
pushf
rcll
and
fistl
dec
adc
pop
xchg
mov
inc
outsl
rorb
xor
push
sbb
mov
subb
add
addb
inc
dec
subb
sub
inc
mov
cmp
or
cmp
dec
xchg
loop
or
push
idivb
div
jecxz
sahf
mov
adc
popa
repz
test
xchg
in
jae
inc
xor
push
and
push
testb
inc
data16
mov
movsb
mov
mov
inc
jne
jae
fsts
lds
or
inc
jns
cmp
push
xlat
out
sbbl
xchg
imul
adc
add
shlb
xchg
or
js
rcr
stos
fidivrs
into
cmpsb
fdivr
mov
pop
jnp
jno
rcrb
daa
push
inc
filds
jge
cmp
les
inc
js
loopne
push
mov
ftst
mov
adc
xchg
int
subb
aas
clc
aaa
outsl
mov
popa
lret
lahf
arpl
push
jb
loope
pop
mov
xor
outsb
jle
sub
jecxz
dec
add
aad
xor
loope
ljmp
ja
lods
mov
xchg
xchg
aam
popa
int
jns
or
jns
pop
push
cmp
push
inc
cwtl
ss
in
push
cwtl
cmc
and
ret
sub
mov
xchg
mov
out
or
mov
fcomps
pusha
pushf
invlpg
out
and
adc
inc
xor
push
or
int
sbb
repnz
jle
hlt
cmp
nop
mov
stc
shlb
out
push
dec
in
fldt
ja
mov
jae
mov
imul
mov
adc
xor
adc
lret
mov
movsb
and
mov
push
setbe
es
or
nop
push
mov
pop
popf
cmp
jp
aad
aas
test
test
push
lret
jnp
inc
jecxz
cltd
xor
shrl
test
js
adc
jmp
test
dec
xor
adc
mov
and
std
sti
mov
cmp
mov
or
adcl
cltd
sahf
rcrl
adc
jmp
aas
xor
adc
popf
xor
cld
xchg
loopne
adc
movsl
pop
push
out
pop
jnp
fxam
leave
add
push
call
test
setle
add
fcmovnb
or
pop
mov
das
jle
cmc
xor
fwait
ret
and
mov
xor
hlt
ret
sub
ljmp
into
pusha
movsb
or
fnsave
pop
push
adc
mov
outsl
xchg
fadds
sub
outsl
or
inc
dec
addb
lock
cmp
mov
xor
fwait
icebp
je
jbe
aad
and
mov
mov
out
ljmp
pop
rcrl
fsubrl
sbbb
movsl
loope
lret
dec
or
jmp
push
jns
dec
inc
add
je
movsl
out
cmp
and
in
jecxz
add
jp
push
pop
lret
jle
ja
xchg
cmp
int3
push
cmc
rorb
clc
loopne
ret
inc
aas
mov
inc
sub
cmpsl
scas
push
testb
xchg
sbb
fsubrl
rclb
sahf
sbb
dec
or
and
cmp
xor
or
popf
aas
and
mov
imul
cld
and
cli
pop
movsb
mov
mov
shlb
mov
movsl
mov
adc
cmp
shl
mov
out
dec
shrl
dec
mov
addr16
mov
push
sub
xor
mov
jnp
lods
dec
pop
push
fsubrs
lcall
stc
adcl
and
jo
jne
xchg
enter
cmpsb
xor
mov
jp
arpl
jge
mov
add
dec
dec
nop
add
sub
cmp
fsubrs
mov
aas
mov
ja
inc
adc
inc
ret
adc
imull
fmulp
std
dec
push
sti
inc
or
and
movsb
gs
mov
pop
jecxz
test
mov
cmpsb
push
jl
lock
mov
mov
xchg
xor
push
add
push
xchg
in
jmp
mov
ss
cmp
add
loopne
cltd
push
jge
insl
mov
sarb
outsl
mov
bound
loopne
fdivs
add
in
and
imul
cld
and
and
inc
stc
push
test
out
andl
push
faddp
xor
jp
lret
mov
ljmp
scas
inc
call
mov
mov
lock
std
cld
cmp
mov
jnp
fadds
inc
fldcw
aaa
repz
and
xchg
mov
rcrb
insb
cmp
mov
test
pop
sbb
fcomi
and
sub
dec
into
xor
clc
inc
aas
xor
xor
daa
add
lcall
jbe
rol
leave
pop
dec
mov
ss
loopne
idivl
push
push
lret
sub
in
and
adc
sub
repz
lock
fdivrl
push
loope
inc
es
jb
add
mov
adc
pop
xchg
repnz
dec
into
xlat
pop
enter
idivl
pop
inc
jle
push
lahf
pop
push
and
das
negb
and
add
aad
int
sub
das
xor
es
add
mov
ret
add
cli
mov
pushf
mov
mov
enter
stc
out
ja
mov
inc
push
call
xchg
xor
and
loope
adc
add
aaa
mov
dec
or
mov
pusha
adc
scas
daa
jle
loop
mov
mov
xchg
sbb
inc
jge
test
push
lods
sbb
inc
pop
adc
sub
xor
xor
inc
data16
sti
popf
pop
jl
ja
dec
xchg
in
push
xchg
jmp
sbb
mov
sub
stos
mov
loop
push
push
in
cmpsl
mov
addb
cmp
push
mov
push
enter
lds
pop
sub
pop
pslld
js
jge
outsl
cmp
aaa
add
out
sbb
dec
or
jmp
sub
and
pop
bound
jne
mov
mov
xcrypt-ofb
cmpsl
test
sbb
adcb
xor
sub
cmp
rolb
or
xchg
cmc
addr16
aad
cmp
rclb
sbb
dec
cmpsb
add
mov
loop
mov
mov
dec
sarb
push
test
mov
or
das
cs
mov
mov
dec
and
xchg
fsubp
test
add
in
add
mov
shll
xchg
inc
scas
sbb
adc
hlt
jae
ljmp
mov
inc
inc
shlb
insb
sub
jecxz
mov
shrl
cmp
dec
fs
cmp
incb
dec
mov
rcll
incl
xor
jge
clc
leave
xchg
or
out
push
ret
jb
aad
cmpsl
push
mov
rol
mov
xor
popa
inc
pop
bound
std
lods
push
pop
add
sub
mov
call
stos
mov
or
push
lods
mov
and
dec
es
loope
pop
jo
dec
push
dec
adc
sub
loopne
push
pop
jne
jg
and
enter
ds
out
sbb
negb
mov
xorb
sbb
mov
xor
test
xor
jp
lcall
pop
mov
fnstenv
repnz
jge
xorl
sub
aas
pop
js
jge
subl
mov
mov
jge
ret
pop
or
sahf
lahf
cwtl
pop
imul
pop
repz
jmp
xchg
std
mov
or
cltd
xchg
xchg
jbe
mov
cmp
hlt
rorl
into
mov
stos
push
mov
daa
outsl
pop
in
imul
iret
push
loope
inc
loop
push
stos
rcr
movsb
fstps
or
push
rclb
or
sub
mov
inc
shr
inc
jle
pop
mov
mov
repnz
or
divl
aad
pop
insl
pop
and
push
or
je
mov
xchg
mov
stos
pop
add
fcomps
ss
mov
imul
ss
sbb
pop
and
dec
push
mov
or
fnstenv
pop
mov
xor
inc
mov
adc
sub
and
dec
sbb
int3
sbb
or
sub
mov
pop
sti
pop
xchg
sub
sarl
aad
into
pushf
xchg
dec
mov
xchg
jnp
scas
cmpsl
xchg
and
dec
mov
mov
outsl
js
andb
jbe
jae
adc
sbb
adc
aam
sub
push
mov
fwait
pusha
pop
adc
mov
imull
adc
and
or
push
cmpsb
mov
mov
sahf
comiss
adc
rorl
std
inc
popf
lahf
mov
insl
mov
sbb
outsl
xchg
xchg
mov
xchg
mov
pandn
ss
mov
cmc
ficoml
cmp
mov
fcoml
mov
lock
push
sahf
cmpsl
cld
dec
lods
inc
in
les
ficompl
icebp
cmp
ljmp
sub
inc
out
mov
and
inc
and
xchg
or
sub
cmpsl
jb
pop
es
adc
adc
jb
hlt
dec
fcmovnu
inc
or
xor
icebp
aas
mov
test
lret
fcmovne
in
jnp
or
ljmp
cmc
mov
pop
addl
lock
mov
add
xchg
cmp
loope
mov
sbb
gs
xor
adc
test
outsl
or
scas
scas
mov
fmull
je
inc
mov
and
cmp
mov
jns
ss
scas
addr16
dec
pop
out
or
sbb
adc
cmp
icebp
mov
ds
adc
test
shlb
jmp
xor
cld
xchg
pop
cmp
clc
js
les
push
sub
mov
jb
ss
jnp
popf
push
ja
or
sarl
inc
sbb
js
or
ja
das
xorb
aas
aam
mov
in
push
inc
add
loop
xchg
outsb
xchg
or
cmpsl
lea
test
push
inc
clc
ret
test
pusha
pop
pop
in
pop
or
fstpl
jge
ja
adc
rolb
or
jo
add
push
jecxz
cmpl
jmp
enter
mov
insb
shlb
inc
pop
pop
cmpsb
loop
or
cltd
dec
jnp
repnz
mov
xchg
lcall
mov
lcall
lea
insb
repnz
ss
mov
pushf
jmp
popa
jmp
xchg
test
mov
jmp
dec
sub
push
fdivs
test
cmp
xchg
popf
clc
push
imul
bound
mov
sub
xor
mov
and
aas
mov
iret
sub
mov
add
jmp
in
movsb
inc
lods
mov
aad
lcall
js
sti
outsb
aam
cmpsl
insb
adc
ret
out
inc
or
in
ss
adc
aas
fidivl
push
inc
aam
xor
push
adc
push
xchg
pusha
int
shrb
ret
test
add
inc
inc
sbb
cwtl
dec
fwait
push
push
mov
ret
mov
push
ja
push
test
shrb
sbb
xchg
sub
mov
orl
fmuls
addr16
push
es
repnz
out
jg
sarb
and
mov
jecxz
xchg
inc
hlt
out
or
sub
das
mov
mov
cmp
call
loopne
or
mov
sub
xchg
jle
out
pop
mov
mov
je
imul
jne
xor
negl
stos
push
scas
bound
push
je
adc
int3
push
inc
xor
or
js
dec
stc
frstor
mov
pop
mov
mov
xchg
lcall
pop
inc
xchg
vmwrite
enter
nop
repz
gs
inc
pop
xorb
jno
std
xor
das
sbb
adc
mov
inc
mov
jo
sub
paddsw
sub
test
in
lcall
in
adcb
lcall
jge
add
xchg
mov
fidivl
or
lret
mov
nop
pop
xor
jp
jae
inc
xor
jnp,pn
out
outsl
pop
nop
in
dec
inc
and
jo
addr16
js
mov
pusha
pop
lret
outsl
bound
and
xchg
inc
jge
hlt
xor
insb
inc
sbb
add
mov
or
add
pop
sub
sbb
sbb
out
std
pop
lock
call
mov
ret
xchg
jle
iret
push
aam
loopne
jg
dec
cmpsb
jg
push
adc
inc
xchg
push
mov
into
sbb
jae
push
pushl
cmp
push
stos
mov
pop
sbb
mov
sbb
imul
pop
out
push
cmpsb
lgs
cmpsb
aam
mov
add
jne
pop
shl
push
mov
mov
aam
test
sbb
lcall
fnstenv
push
sbb
imul
adc
push
dec
lods
dec
push
push
mov
push
sub
pop
jo
add
test
icebp
xchg
loopne
imul
pop
cmp
push
sbb
cmovnp
scas
push
xor
int3
jbe
aas
pop
jno
out
push
ss
sbb
test
push
jecxz
fcmovu
je
jae
pop
push
mov
sub
pusha
cmp
jmp
fisubs
adc
shl
iret
movsl
xchg
stc
dec
sub
ror
mov
icebp
jnp
loop
in
out
mov
mov
lds
in
repz
mov
or
scas
inc
dec
xchg
jno
loopne
movsb
std
mov
ja
test
sub
pop
sti
ret
js
or
lds
jb
imul
or
fcoms
std
or
imul
sub
add
push
pop
mov
pop
lods
sub
mov
cwtl
lods
test
jns
mov
test
push
push
pop
and
dec
cli
cmpsl
adc
movsb
out
push
int3
loope
push
ficoms
inc
mov
or
ja
mov
inc
enter
push
mov
popf
cwtl
sbb
loopne
sbb
cmc
shr
or
add
and
or
add
push
xchg
sub
mov
and
add
jbe
imul
mov
icebp
dec
dec
pop
add
popa
fnstenv
into
jmp
lods
imul
cmp
cmc
cld
mov
xchg
pusha
in
les
xchg
mov
fsubl
data16
cmp
mov
mull
cli
ret
fwait
cmp
xchg
mov
push
and
pushl
lret
pop
pop
jmp
adc
cmc
movsl
out
movsl
bsf
popf
push
push
in
xchg
jo
mov
sub
add
push
pop
cwtl
fdivrl
sti
in
mov
push
mov
dec
pop
adc
push
push
sub
lods
cmpsb
jg
addr16
insb
aam
pop
cmp
pop
dec
or
adc
daa
lret
pop
inc
inc
insb
insb
dec
imul
push
imul
pop
mov
adc
mov
xor
gs
jae
sbb
push
lods
xlat
ljmp
fwait
xor
push
mov
dec
jb
out
pushf
stos
stos
lret
rcrl
adc
mov
or
add
xchg
js
loop
sbb
push
cmpsl
repz
in
lods
jmp
cmp
push
push
in
jmp
les
and
jle
add
inc
jmp
cmp
push
cld
iret
dec
pop
and
rol
push
push
xchg
sbb
cs
and
mov
sbb
add
lds
or
fwait
pop
adc
lcall
xlat
jge
mov
push
pop
pop
ficompl
insl
add
hlt
das
inc
nop
dec
xchg
xchg
aad
add
icebp
pop
and
and
jnp
add
roll
xchg
in
add
in
push
filds
push
pop
pop
das
jns
pop
into
addr16
mov
add
mov
lods
arpl
ja
and
popf
inc
cmp
pop
push
out
or
mov
mov
jp
mov
xorl
fimull
int3
inc
fdiv
ja
sti
pop
add
jge
mov
fcmovu
cmp
inc
daa
enter
and
or
call
push
addr16
arpl
sbb
clc
sbb
xor
xchg
and
mov
add
mov
mov
das
rcrb
loop
ret
repnz
test
inc
int3
mov
lea
loopne
sub
test
cmp
sbbb
push
repz
cmp
push
outsl
fisubl
xchg
clc
dec
sti
adc
mov
imul
jnp
out
mov
xchg
adc
in
scas
push
mov
dec
push
std
pop
lret
and
aas
mov
add
shlb
in
or
loope
stos
rolb
shlb
sub
jmp
bound
sub
mov
movsb
daa
xor
jl
push
test
mov
scas
inc
pop
pop
rcl
insl
sbb
mov
adc
test
push
dec
idivl
in
daa
dec
ret
xor
add
sub
test
add
loop
mov
xlat
add
daa
popf
test
adc
or
scas
jle
add
js
stc
fwait
mov
fs
mov
or
out
jg
fcomi
inc
neg
imul
arpl
xor
push
cli
gs
add
inc
daa
or
je
into
dec
xorps
adc
inc
shl
pop
push
add
jge
mov
inc
xchg
mov
aaa
dec
pop
mov
std
mov
stos
outsl
push
jbe
lea
mov
inc
jl
mov
xor
dec
je
aas
dec
fbld
lds
dec
mov
lock
aaa
ja
xor
sub
mov
int3
adc
sub
cmc
pop
and
or
lret
mov
mov
cmp
repnz
dec
xor
lods
adc
sbb
repnz
xchg
xchg
cld
icebp
sub
jae
repz
lds
mov
les
orl
adc
js
lock
jns
outsb
jg
jae
mov
sarb
repnz
decb
shlb
jecxz
ficoms
imull
loopne
mov
int3
out
mov
es
rcrb
mov
int3
add
lcall
add
mov
div
fisubrl
pop
movsl
adc
pop
insl
xor
jns
push
shl
sub
mov
mov
int
mov
pop
dec
sbb
mov
jnp
mov
xor
xor
sbb
js
jmp
cmp
and
call
push
xor
mov
pop
fldt
cld
dec
sub
ret
in
pop
rcl
mov
and
inc
int3
mov
xor
sti
xor
pop
in
addr16
add
incl
pop
xchg
xchg
je
aaa
int
mov
fstenv
jl,pn
insb
stos
cli
in
jmp
jge
aam
dec
sbbb
push
mov
idivl
js
push
jmp
pop
aam
cmp
mov
out
dec
mov
jl
xchg
addb
jns
data16
mov
push
popf
jo
mov
cmpsb
mov
insl
adcb
stos
adc
sbb
xchg
les
mov
popa
stos
inc
sbb
out
mov
add
orl
mov
pop
std
call
push
sub
cmp
push
mov
adc
push
xchg
xor
jl
mov
cmp
inc
aaa
cld
mov
je
and
xchg
lahf
jp
dec
ljmp
ss
cwtl
or
pop
and
fisubs
shll
cmp
xor
adc
mov
aad
outsl
dec
bound
sar
popf
pusha
and
dec
in
push
inc
rcrb
sahf
je
mov
lcall
out
xchg
cmp
iret
or
outsl
add
add
mov
push
lods
xor
jg
sbb
pop
xorl
out
fcomps
addb
call
jp
outsl
inc
pop
lds
push
cwtl
fldenv
loop
addr16
adc
inc
ret
out
fmull
jno
adc
jne,pt
loope
push
mov
leave
ljmp
jmp
mov
cmp
pop
fcmovb
jp
pop
sub
sub
xchg
js
add
aad
hlt
jg
mov
bound
ret
or
push
and
sbb
xor
ljmp
daa
fldl
adc
je
sahf
stos
ficomps
sbb
cmp
jnp
xor
push
mov
fs
dec
icebp
frstor
sub
lods
call
mov
scas
xchg
jle
scas
inc
dec
scas
push
mov
decb
lds
rorl
xchg
xchg
movsl
xchg
sub
cli
loope
push
or
mov
popa
fsub
mov
cld
jnp,pn
in
insb
and
jecxz
loop
mov
testb
mov
pop
push
xor
mov
gs
jb
ds
cmp
negl
mov
das
ffree
xchg
inc
sub
js
or
sub
test
mov
lock
fsubrl
mov
dec
add
pop
shlb
das
dec
pop
lock
pop
inc
cld
or
mov
aad
push
jle
jecxz
fisttpl
lret
fcoml
push
mov
mov
sub
mull
sbbb
add
aas
push
movsl
andb
dec
mov
push
mov
movsl
push
push
xor
lods
repnz
and
sub
and
scas
dec
sbbb
jmp
sbb
jns
in
sub
fistpl
inc
dec
xchg
pusha
sub
or
xchg
movsl
or
jns
push
fisttpl
in
subl
pop
sub
mov
sti
cmpsb
sub
push
notl
and
out
sub
push
xchg
cmpsl
ljmp
sub
shlb
jbe
sbb
jmp
push
pushf
cmp
xor
subb
mov
pop
jae
or
shlb
push
addr16
scas
and
jb
mov
loopne
and
xchg
lcall
rorl
mov
ss
ds
test
mov
adc
inc
lret
mov
and
jmpw
cmpsb
data16
insl
xchg
insl
cmp
in
popf
stos
cs
jecxz
jg
stos
lock
ret
stos
fcmovnb
and
icebp
add
xchg
dec
dec
outsb
xchg
mov
sub
stos
into
mov
mov
mov
testl
mov
nop
push
outsb
xchg
and
movsb
sbb
sahf
jle
jl
mov
xor
mov
or
push
inc
popf
fdivl
sub
or
adc
cs
fists
insl
rclb
ja
lock
push
dec
scas
add
orl
cmp
jmp
in
mov
dec
xchg
xchg
pop
lahf
mov
push
fnstenv
or
loop
push
stos
mov
xchg
gs
dec
jb
push
mov
sub
in
rclb
pop
cmp
aas
cmp
mov
std
cmpsb
popf
mov
pop
repz
push
inc
cmp
sbb
cmp
out
or
add
xchg
add
xchg
dec
xchg
add
pop
ret
loopne
jge
adc
mov
ret
addb
mov
fnsave
xchg
xor
xchg
mov
sub
rol
fwait
mov
in
decb
push
arpl
adc
or
jmp
fucomip
cmpsl
je
aaa
push
add
jno
and
lret
xchg
mov
mov
ljmp
sub
dec
les
sub
adc
push
leave
js
fcmovnb
in
cmpb
xorl
inc
emms
pop
test
push
test
push
pop
adc
data16
mov
mov
lahf
cwtl
in
mov
arpl
movsb
sub
iret
xchg
fucomip
xchg
xlat
out
out
pop
loopne
jo
inc
aaa
add
test
clc
dec
sbb
jg
data16
push
call
shlb
in
stc
ljmp
push
mov
movsl
push
push
xchg
cld
and
add
fidivl
adc
jnp
fwait
and
imul
out
xchg
enter
popf
jb
sbb
xor
hlt
mov
rol
push
add
pop
iret
in
and
cli
add
cli
mov
pop
xor
push
sub
mov
add
pop
test
push
push
je
les
cmp
subb
pop
adc
outsb
mov
jmp
pop
push
rcrl
and
leave
rcl
mov
xchg
in
test
xor
mov
xor
in
pop
or
into
mov
stc
mov
jg
mov
xchg
fistl
gs
scas
push
xchg
dec
push
xlat
add
inc
jno
cmp
xchg
gs
xlat
mov
add
xchg
xchg
or
bound
pop
dec
enter
shrl
cmc
cld
dec
aam
shlb
inc
and
rcll
imul
testl
loop
xlat
xor
loopne
gs
sub
ja
push
out
inc
out
fildl
sub
rclb
dec
lcall
mov
fs
movsb
and
out
nop
icebp
pop
pop
repz
push
stos
popf
mov
mov
stos
ret
fidivs
cli
fildl
mov
repnz
test
cs
mov
xor
fcompl
loop
jmp
jge
adc
insl
popf
xor
scas
insl
or
es
xor
inc
push
cmpsb
mov
mov
mov
cmp
lcall
mov
imul
sbbl
xchg
add
loopne
sub
push
subb
cmp
mov
sub
mov
dec
rcrb
je
push
jmp
fsubl
rol
jae
in
dec
int
je
das
lcall
scas
sub
jmp
sbb
pop
mov
in
repnz
or
pop
shll
adc
mov
mov
mov
inc
pop
popa
incb
mov
in
xchg
pop
fcomps
sbb
mov
je
andb
xchg
imul
or
insb
sbb
push
lahf
mov
cmpsl
pop
sub
mov
adcb
nop
shlb
shll
sbb
fisubrs
xor
xor
cmpsb
inc
dec
jecxz
loop
popf
mov
adc
sub
mov
pushf
jle
cmpsl
fsubs
add
test
repz
or
hlt
jb
push
fdivl
cmpsb
xchg
test
push
push
or
subb
arpl
notl
jle
shrl
leave
data16
jb
pop
arpl
rclb
push
xchg
inc
pushl
cmpsl
pop
or
jp
jecxz
add
inc
mov
addr16
or
arpl
repnz
dec
daa
aas
dec
addr16
mov
aad
push
mov
sbb
mull
push
mov
xor
jnp,pn
daa
pop
and
jmp
scas
sbb
lods
cltd
sbb
andl
cltd
scas
push
sbb
popa
repnz
ljmp
pop
xchg
inc
movhlps
into
pop
jnp
addr16
mov
inc
xor
sahf
mov
jmp
cmpb
rcll
add
js
adc
mov
imul
mov
mov
rclb
test
jae
cmp
add
sub
cmpsl
pop
jb
arpl
mull
in
sub
repnz
je
and
xchg
cmp
inc
mov
mov
gs
mov
mov
test
in
add
mov
enter
pop
xor
jg
cmpsb
or
push
sbb
mov
sub
mov
adc
fstpl
shrb
stos
mov
xor
mul
mov
mov
call
pop
insb
xor
ja
hlt
mov
or
jecxz
loop
pop
jns
sbb
mov
sub
or
dec
in
pop
xor
xor
xor
cmpb
cmp
lds
adc
mov
outsl
or
inc
push
mov
push
lret
clc
popf
cmp
inc
xchg
push
js
jmp
nop
xchg
xor
adc
push
jmp
movl
adc
pop
or
test
adc
inc
pop
in
cwtl
mov
xlat
mov
cmc
xchg
adc
jns
jl
pop
enter
push
mov
jmp
or
sbbl
sub
lcall
out
enter
inc
xchg
lock
jns
fcomps
pusha
sub
testb
fistpll
outsl
jecxz
mov
insl
out
mov
gs
xchg
and
stc
lods
repz
xlat
cmp
outsl
sub
xchg
rorb
ss
pop
fidivl
cmp
jp
cmpsb
xchg
and
add
sbbb
popa
add
dec
xor
fld
jns
gs
loop
gs
ljmp
fldl
int3
cwtl
push
lahf
add
fidivrs
test
cmpsb
icebp
cld
push
mov
test
pop
jb
pop
std
xor
jns
xchg
repnz
stos
das
dec
jle
add
test
mov
jle
pop
add
push
adcb
mov
or
xlat
dec
sbb
jne
or
cmp
or
hlt
es
inc
je
jmp
fistl
jmpw
pop
cmc
in
aam
out
jb
rclb
fildll
mov
arpl
cli
sbb
lret
xchg
jnp
pop
mov
add
jo
mov
in
mov
push
push
inc
aam
mov
fstpl
ljmp
pop
mov
subb
rorb
movsl
or
imul
icebp
mov
lret
ffreep
rorb
shlb
xchg
mov
mov
mov
mov
cmp
mov
cli
xchg
cwtl
pop
jne
test
mov
cmp
inc
test
push
pop
mov
das
pop
imul
repnz
or
bound
cmc
cmp
lods
dec
and
shr
insl
les
cmp
xor
push
cmpsl
dec
int3
dec
lods
jl
imul
sbb
inc
and
dec
jo
arpl
movsl
out
cmp
xchg
hlt
cli
sub
mov
jbe
dec
push
mov
and
andps
dec
sti
cmp
scas
subb
iret
jb
pop
cmp
xchg
fmull
lret
imul
inc
or
inc
stos
nop
lea
ret
mov
ja
jmp
sbb
ljmp
fs
inc
adcl
lcall
rcr
mov
dec
sub
jg
push
loopne
add
jnp
add
movsb
movsb
in
xor
arpl
adc
jno
push
xor
cmpb
and
call
cmpb
lods
pop
cmp
dec
insl
cld
pop
adc
data16
addr16
mov
jno
ret
sub
mov
push
lcall
push
rcrl
mov
aam
in
adc
jecxz
popa
or
repz
inc
jno
mov
and
mov
mov
out
insb
gs
out
les
jbe
stos
loop
leave
add
ljmp
or
cs
sub
std
sbb
scas
jae
fidivl
xor
inc
xor
jge
push
sti
or
cwtl
ret
sub
dec
and
push
or
ret
aam
iret
bound
mov
in
ret
sbb
out
inc
adc
dec
loop
sbbl
stos
arpl
dec
gs
jg
out
cmpsb
pop
shrb
test
mov
addb
and
xchg
negb
add
cmpsb
dec
leave
cli
jl
call
cmp
sbbb
sub
push
pop
pushf
or
pop
lods
inc
push
in
nop
repz
push
stos
clc
jle
imul
dec
ja
sahf
dec
enter
shlb
cmp
jno
fbld
inc
push
in
shlb
rcrl
call
int3
daa
sub
pop
xor
mov
xor
lock
lods
test
mov
and
ret
add
jae
imul
mov
stos
data16
repz
icebp
or
scas
pop
or
or
mov
mov
jmp
rcrb
or
or
jnp
mov
into
mov
jb
cli
rorl
cmp
mov
testl
fwait
adc
jbe
lcall
sbb
push
cmc
jle
push
call
movsb
repnz
mov
mov
cmp
rorl
fnstenv
stos
sarb
leave
fisttpll
push
notb
lods
add
es
testl
mov
mov
lods
dec
roll
sbb
aaa
mov
sub
sbb
cmp
sub
adc
adc
ja
leave
dec
out
jge
aam
in
imul
sub
and
cmp
jnp
mov
ret
mov
or
dec
jge
mov
int
cmp
imul
and
cltd
sarl
xchg
outsb
andl
dec
lahf
cmp
aam
xor
xchg
sub
cmpsl
mov
jns
cmp
repz
add
inc
repnz
jl
stos
or
sub
out
loope
cli
std
fs
mov
insb
scas
inc
push
push
pop
jae
add
loop
jle
add
inc
xlat
add
cli
jbe
cmpsl
jmp
loopne
xchg
mov
mov
ret
clc
xchg
and
dec
pop
ja
repnz
icebp
popa
mov
pop
add
jmp
pop
pop
cltd
loop,pt
rorb
mov
xchg
mov
ljmp
js
add
pop
imul
movsb
mov
jno
xor
jnp
or
mov
rcrl
fxch
xor
adc
inc
add
in
mov
or
lods
cmp
mov
ljmp
mov
and
mov
ficoms
and
xlat
enter
sbb
lock
sbb
cli
cld
sbb
adc
mov
sbb
clc
xor
xchg
push
xchg
mov
pop
inc
arpl
pop
adc
xor
pushf
push
jge
fwait
add
out
mov
fcomps
cvtpi2ps
push
mov
aad
add
and
add
or
test
mov
arpl
hlt
negl
shrb
rolb
ret
jae
in
or
push
fisttps
push
sub
xchg
test
enter
addr16
dec
pop
mov
popa
xor
mov
fcmovb
pusha
push
xchg
sub
dec
adc
cmpsb
pop
in
dec
xchg
push
sarb
push
jg
xchg
cmp
pushf
push
iret
sub
cwtl
sti
fdivrs
loop
mov
lock
xchg
jbe
and
lock
dec
cwtl
jg
jo
pop
fisubrs
sbb
jbe
arpl
inc
outsb
cmpsl
lret
adc
rolb
cld
ret
andl
dec
mov
je
cmpsl
test
cmpsl
mov
adc
jne
mov
stos
mov
and
pop
aad
mov
jp
pop
call
out
or
lods
xchg
fwait
xor
xchg
test
ror
popa
cwtl
sarl
xchg
fs
jge
inc
daa
jmp
test
ja
sbb
enter
shrl
adc
fdivl
sub
mov
lock
mov
jmp
rorl
les
ds
sbb
xchg
push
imul
enter
fyl2x
fsub
cmp
xchg
test
or
int3
aas
xor
loop
xor
xchg
notb
cmp
dec
subl
add
mov
push
js
adc
shrl
dec
push
test
shlb
out
sarl
sbb
inc
inc
cli
js
adc
enter
dec
mov
fs
hlt
mov
roll
dec
add
lods
and
mov
xlat
adc
jl
pop
daa
in
sbb
shr
adc
insb
daa
imul
fs
shlb
sbb
mov
popa
and
iret
lods
movb
dec
lret
inc
xor
pop
sbb
fcomp
lahf
pop
adc
pop
loope
mov
sbbb
mov
mov
push
add
cmpsb
out
mov
mov
iret
adc
xor
pushw
out
and
push
enter
mov
mov
pop
jmp
in
push
in
mov
push
inc
jae
mov
inc
jl
push
repnz
inc
jp
add
sbb
inc
push
push
test
or
pop
jge
out
lods
cli
cmpsl
add
push
or
inc
jae
and
mov
repz
and
jmp
neg
mov
mov
xchg
sub
xchg
mov
and
jae
lds
je
mov
pop
imul
test
cmp
lret
js
das
sub
pop
mov
jg
test
roll
out
and
mov
sub
stos
xor
jo
iret
loop
pop
das
ret
push
outsl
ret
pop
into
sbb
inc
into
popf
scas
je
mov
jecxz
imull
rolb
fildll
xchg
leave
popf
xor
bound
sub
orb
lods
xchg
lods
stc
ds
jmp
mov
fldenv
mov
ljmp
pusha
mov
and
push
aad
pop
mov
mov
aad
in
repz
iret
push
mov
imul
loope
mov
jp
std
clc
cmc
xlat
adc
cld
popa
cmp
ss
call
in
xchg
xchg
shl
aas
in
add
push
movsb
neg
cmp
testl
cmp
push
dec
shr
loope
ljmp
gs
mov
jo
jnp
pushf
mov
popf
inc
loop
roll
mov
mov
adc
inc
out
cltd
xor
mov
pop
repz
nop
add
cmp
inc
pusha
ss
gs
jb
int
inc
adc
mov
adc
es
and
inc
addr16
leave
jo
sub
sahf
inc
outsl
js
push
in
adc
mov
mov
mov
xchg
fldcw
or
sahf
xchg
movsb
test
mov
lea
cmp
adc
insl
mov
adc
xchg
lahf
xchg
mov
fidivl
bound
jl
std
pop
inc
fs
sbb
mov
ret
hlt
jo
pop
mov
jl
mov
jecxz
mov
mov
and
sbb
loopne
mov
inc
push
imul
mov
jbe
jecxz
ror
mov
ret
sub
aad
bound
sbb
push
rclb
das
insl
cli
call
sub
push
push
outsb
sbb
sbb
jmp
ds
ficoml
or
daa
gs
xchg
xchg
or
xchg
pop
hlt
cld
mov
ds
insl
insb
enter
and
jmp
mov
dec
mov
jmp
shrd
or
imul
icebp
imul
pop
cmpl
or
pop
aaa
rorl
loope
xor
mov
and
stc
sub
pop
shl
cmpsb
test
es
shlb
fsubp
mov
loope
lock
in
mov
mull
inc
sub
sub
js
stos
push
inc
sbb
icebp
add
xor
sbb
xchg
stc
cmpsb
pop
addl
adc
pop
sahf
push
sbb
cmp
jno
mov
or
loopne
adc
stc
out
jbe
aaa
pop
adc
std
ljmp
stc
rolb
lret
adcb
pop
pop
hlt
push
mov
add
fsubl
mov
dec
cmp
shll
sub
xor
loop
lahf
cmp
das
mov
dec
hlt
cltd
jmp
rcrb
repnz
fisubrl
dec
lahf
pop
sub
hlt
xor
fwait
fwait
stos
jns
pop
out
or
pop
mov
jmp
mov
xorl
adc
mov
sub
jo
xor
rolw
adc
gs
add
cmp
lods
mov
test
pop
xchg
cmp
into
mov
add
xor
das
or
mov
xor
cld
sbb
xchg
data16
bound
mov
jp
xlat
inc
sbb
xchg
mov
in
dec
and
test
popf
sub
adc
pop
jo
or
roll
sbb
stos
xchg
mov
mov
mov
push
jge
pop
adc
mov
in
push
divl
mov
jnp
mov
pushf
inc
stc
inc
iret
daa
sbbb
push
dec
xor
mov
mov
pusha
les
leave
and
cmpsb
jbe
popf
mov
andl
aaa
lea
aaa
pop
and
scas
jno
sbb
roll
jmp
xchg
aad
add
pop
bound
cld
mov
jbe
mov
pop
bound
cmp
xsaveopt
repz
hlt
xchg
inc
negl
movsb
mull
stc
testb
xchg
ss
cli
xchg
daa
fnstcw
or
cli
push
mov
jb
inc
mov
and
jmp
out
dec
punpckhwd
mov
or
dec
cmpl
push
and
xchg
push
aas
add
pop
dec
push
or
aaa
shr
push
fwait
negl
jb
repnz
enter
lea
mov
push
outsl
call
xchg
into
outsb
dec
sti
outsl
xlat
nop
push
mov
mov
mov
lret
ficompl
jb
or
lret
cmp
jge
dec
dec
or
adc
enter
jb
sub
push
enter
pop
popf
pop
faddl
inc
test
imul
es
fisubs
shlb
mov
sahf
xchg
jb
mov
adc
popf
adc
sbb
and
xchg
ret
cwtl
hlt
cltd
aam
pop
out
sbb
mov
cmp
jo,pt
xchg
shll
test
or
sbb
push
jle
lods
ss
jecxz
test
lods
out
jge
mov
pop
insl
test
dec
ficoml
loope
scas
sbb
push
int3
push
sbb
inc
or
mov
outsb
adc
xchg
push
inc
ja
test
aam
or
scas
pxor
inc
jne
jae
shrl
dec
mov
push
neg
pop
pop
jns
loopne
mov
pop
pop
mov
je
mov
xchg
pop
xchg
cmp
pushf
jbe
mov
cltd
sub
aas
imul
ret
pop
sub
pop
in
jmp
jbe
shlb
lret
sub
fsubs
fwait
xor
mov
mov
ret
jecxz
ret
lcall
pop
test
and
pushf
stos
push
repz
repz
xchg
push
in
jg
dec
lret
add
sub
loopne
clc
mov
cli
call
sub
jl
cli
dec
je
push
pop
or
mov
mov
mov
mov
fnsave
jno
inc
push
hlt
lret
repz
loope
xchg
and
fistpll
pop
adc
and
xlat
adc
mov
ret
jecxz
add
adc
mov
shr
lcall
xchg
push
rcr
jbe
xchg
inc
or
pop
jle
add
fcoml
mov
inc
mov
mov
inc
mov
dec
xor
jae
jmp
not
pop
or
out
loope
xchg
in
adc
mov
in
mov
test
adc
adc
inc
cmp
xlat
cmpsb
or
or
ds
ja
in
mov
ja
sbb
and
lcall
push
dec
nop
sub
or
or
dec
les
dec
jmp
gs
addr16
inc
xorb
sbb
popw
xor
pop
sub
xchg
adc
bnd
shlb
jmp
out
gs
sti
sahf
incl
aas
pop
insl
pop
fcompl
popf
adc
lea
rcrb
into
jnp
and
adc
jg
insb
mov
fisubs
fidivl
jge
ljmp
cld
aas
pop
mov
pushf
out
inc
mov
mov
push
adc
cmp
daa
loop
jb
xchg
data16
ret
sbb
and
enter
test
dec
cmp
js
shlb
xchg
insb
iret
std
inc
fisubrl
test
mov
lcall
and
outsb
lods
push
ret
inc
orb
mov
add
jmp
clc
pop
js
dec
mov
mov
testl
std
lcall
arpl
roll
sbb
push
movsl
testl
cmp
dec
mov
jnp
mov
scas
jb
dec
mov
gs
mov
pop
int3
or
das
xchg
adc
push
adc
push
jl
in
mov
imul
cmpsl
xor
or
es
lds
nop
hlt
sbb
mov
mov
xchg
xchg
cmp
aad
fwait
jg
adc
dec
ret
lea
loop
push
cltd
sub
add
dec
pusha
test
mov
dec
fbld
cs
add
fcmovu
dec
aad
push
mov
jbe
jge
pop
andl
inc
aad
ds
push
lds
sbb
aas
xchg
sahf
add
pop
push
call
outsl
shrb
inc
mov
stc
icebp
pop
or
scas
mov
js
loopne
mov
sbb
jecxz
pushf
sub
data16
imull
iret
sbbl
pop
cmp
adc
xchg
orl
int
rorl
or
js
xchg
or
mov
or
mov
imul
adc
sub
and
and
jp
jb
or
cmp
push
sub
sets
pop
test
and
in
jbe
mov
shll
imul
add
insl
mov
adc
add
mov
cli
into
fstpl
dec
orb
cmp
or
addr16
dec
rcrl
pop
fistps
loopne
pop
xchg
movsb
jge
pop
add
add
xchg
iret
adc
leave
imul
and
fwait
imull
pop
mov
test
ret
icebp
mov
add
mov
cmp
add
lcall
xor
xchg
daa
jmp
mov
ds
dec
aas
sbb
dec
nop
loopne
mov
pop
mov
imul
mull
jge
mull
sbb
jl
jp
xor
rep
rcll
cmp
dec
cmp
xchg
mov
xchg
and
xor
imul
in
and
dec
insl
sub
mov
xor
mov
cmp
lods
fcoms
mov
out
push
and
pop
pop
fldt
jl
add
push
cmp
cmpsb
movsl
mov
inc
gs
mov
jb
add
jl
adcl
fildll
out
fmull
rorb
mov
movsb
jp
subb
inc
lds
or
lods
popa
cmp
inc
repz
cmc
mov
popl
and
enter
shrl
mov
iret
addl
lret
pop
sub
adc
ficoml
outsb
in
mulb
rcl
jno
hlt
inc
ret
das
insl
cmpsl
or
insl
push
rcl
popa
sbb
outsb
movsb
or
je
clc
pushf
pop
stc
xor
popl
sbb
pusha
imul
out
mov
push
sbb
mov
adc
repz
dec
stc
xlat
in
call
mov
cmp
mov
lret
fiaddl
mov
push
cltd
loop
mov
andl
gs
movq
fidivrl
inc
leave
add
sub
cltd
mov
push
jecxz
xor
add
jne
mov
push
and
popa
mov
add
incb
mov
lock
or
dec
push
fidivrs
dec
lcall
jmp
sahf
aad
lret
mov
jbe
insb
xor
mov
add
jge
xchg
testb
int3
mov
and
mov
xchg
imul
lock
fisttpll
pop
rcr
mov
adc
jne
aam
leave
add
or
pop
pusha
jne
mov
sbb
es
mov
push
loopne
sbb
scas
mov
push
fidivs
sub
shlb
lea
mov
popf
gs
cmp
cmp
xor
sarb
cld
jl
xor
xor
adc
jo
notb
add
inc
repz
cmp
jp
cld
mov
daa
out
cmp
ljmp
and
flds
test
fiaddl
adc
shlb
adc
ret
mov
xor
std
lret
push
in
jp
or
mov
lcall
cmp
lcall
sbb
in
dec
aas
add
sbb
pop
push
sub
popa
dec
push
jg
inc
and
inc
or
xlat
sbb
xor
jbe
gs
sub
leave
cmp
mov
sbb
jns
mov
cmp
xlat
das
pop
cmc
imul
pop
test
and
dec
das
icebp
jle
into
pop
push
stc
imul
cmp
xlat
jbe
mov
dec
imul
cwtl
sbb
xor
and
daa
jp
jg
push
jo
jmp
inc
adc
aam
fstpt
mov
rolb
push
xchg
icebp
dec
mov
add
mov
mov
sub
loope
stos
pop
jnp
inc
xorb
xchg
xchg
adc
pop
out
fs
and
popa
je
mov
and
mov
cltd
enter
int3
mov
fucomip
in
pop
and
stos
pop
or
into
mov
xchg
inc
dec
push
dec
mov
cld
call
loopne
add
ljmp
dec
fyl2x
push
add
sub
test
fsubrl
pop
xor
sub
jns
jns
loope
inc
aas
push
clc
rcrl
adc
movsb
sbb
iret
cmp
inc
int3
in
mov
xchg
arpl
cmpsl
cmp
xor
mov
shr
cmp
pop
ret
add
adc
or
outsb
and
and
jnp
movsb
sbb
mov
imul
sub
iret
mov
mov
dec
std
mov
lahf
sbb
push
jmp
nop
ret
sbb
ret
roll
add
push
cmp
sbb
fsubs
and
movsl
imul
jnp
xor
dec
fsubrl
xor
jle
add
and
pop
repnz
lods
push
dec
mov
ds
push
fmull
ja
rcll
pop
or
outsb
mul
sub
xor
fiadds
clc
xor
inc
xor
sub
cltd
std
lods
pop
lret
push
sbb
scas
lock
gs
lret
out
gs
mov
test
orb
adc
push
or
mov
xchg
jecxz
xor
scas
out
cs
clc
insl
fstl
cmp
xchg
jne
mov
in
dec
mov
xor
sbb
int3
mov
shl
cs
arpl
mov
aam
jge
rclb
gs
xor
xchg
sti
movsl
fsubrl
mov
out
mov
jl
cmpb
dec
jle
mov
jg
imul
nop
sbb
fcoms
jmp
ror
mov
and
inc
es
xchg
rorl
mov
or
push
add
cmp
ss
mov
jbe
mov
clc
xchg
notl
cmp
stc
add
jae
xchg
stc
enter
filds
pop
jecxz,pn
test
sbb
inc
jo
fcoms
jecxz
imul
dec
lods
inc
sbb
jne
fcoms
loop
push
cltd
jp
ja
rcrb
js
ds
pushf
out
cmp
jb
lcall
bound
ret
mov
test
xlat
imulb
dec
push
xor
sub
mov
lcall
mov
fst
cmp
sbb
jmp
mov
addl
aad
or
mov
movsb
and
shl
pop
lret
inc
aaa
pop
out
sub
adc
pop
inc
aas
sub
fildll
ja
cld
push
rcrl
nop
stos
push
aaa
psllq
pop
inc
out
subl
and
push
cs
mov
xor
mov
mov
fs
popa
cli
lods
rorb
in
imul
jno
lods
aas
sahf
mov
mov
pop
ret
mov
dec
jl
mov
cltd
cmpl
arpl
fimull
mov
mov
in
std
inc
or
inc
cmp
adc
add
test
testl
inc
xlat
negb
mov
sarl
gs
popa
addr16
in
push
mov
adc
cmp
jmp
outsb
add
cld
mov
ljmp
lock
jmp
stc
push
mov
xor
and
sbb
cld
xorl
push
adc
jmp
repz
or
lcall
dec
xor
xor
push
cld
cmp
popa
inc
add
adc
sub
jno
dec
jmp
jo
xor
sub
add
cltd
sub
pop
negb
inc
push
inc
pushf
jp
push
cmp
and
arpl
lahf
mov
mov
cmp
xor
jmp
fcmovne
gs
push
xor
cmp
bound
sbb
and
mov
ret
add
and
sahf
cmp
call
pop
out
inc
iret
out
pop
scas
ret
push
cmp
aam
shrl
das
es
das
inc
rcrl
push
out
rcrb
test
outsl
push
lret
and
dec
pop
adc
sub
shrl
lcall
adc
lea
aad
adc
adcl
jecxz
xchg
faddl
repz
out
adcl
test
xchg
int3
jge
inc
js
aad
lods
in
pop
out
push
dec
test
ret
std
dec
aad
mov
bound
dec
scas
mov
pop
mov
jle
or
dec
jnp
cs
xchg
lret
mov
pop
rorw
fiaddl
stc
fs
push
pusha
sbb
dec
xchg
sub
div
add
dec
mov
rcll
popf
xor
loopne
cmc
cmp
cmpsb
test
outsb
sub
repz
pop
je
adc
push
pop
rolb
cmpl
xchg
cltd
sub
lret
add
mov
jno
push
arpl
xchg
sub
or
push
cmp
adc
sbb
adc
dec
pop
add
addr16
push
inc
shll
icebp
cmp
dec
lods
cltd
xchg
mov
or
xchg
mov
xor
dec
push
inc
pop
rolb
negb
mov
ja
test
in
js
test
les
ret
cmpb
push
jge
mov
jle
jp
sub
les
adc
pusha
dec
push
sarb
int3
mov
mov
xchg
push
jb
je
jecxz
pop
push
pop
cli
jb
dec
sbb
dec
icebp
scas
in
mov
movsb
andl
inc
jmp
lcall
xor
leave
jle
stos
sub
dec
sub
or
adc
cmp
adc
in
in
aas
and
test
xchg
xor
insl
mov
push
inc
sbb
or
mov
or
mov
jg
js
cltd
xlat
dec
add
jb
xor
dec
test
mov
js
cmpsl
icebp
cmp
cmp
scas
cltd
std
mov
inc
or
cltd
in
sti
push
fdivs
xchg
lods
pop
mov
mov
mov
mov
idiv
bnd
pop
gs
int
mov
aad
rorb
adc
test
aaa
mov
jb
sbb
push
aas
test
xchg
adc
mulb
sahf
mov
out
mov
out
cmp
and
or
lahf
xor
xchg
mov
lcall
pop
clc
mov
and
add
lret
adc
arpl
cmp
xor
xor
add
sub
pop
lods
xchg
outsl
pop
inc
add
push
sbb
sbb
dec
add
inc
xchg
lahf
mov
lahf
push
and
adc
dec
sar
xchg
outsl
add
and
daa
mov
mov
fidivrl
cwtl
dec
cmp
fadd
pop
in
cmp
subb
lea
cmp
dec
xor
push
dec
data16
out
pop
sub
out
pop
subl
rcrl
addr16
jbe
imul
test
mov
mov
addr16
sbb
cmp
aas
xor
add
xor
shll
mov
out
or
imul
cmc
xor
std
cmp
dec
pop
lds
adc
insb
stc
stc
jge
cwtl
ds
jns
jns
test
fstl
pop
add
push
repz
sub
jmp
nop
xchg
mov
xor
push
sbb
loopne
or
das
daa
xor
or
lret
and
je
data16
pop
adc
sbb
dec
push
jg
fsubrs
lods
xor
dec
stc
add
cli
rcrl
flds
xor
mov
cmpsl
imul
movsb
and
mov
jge
sbb
jp
sbb
dec
fsubr
xchg
or
pushf
icebp
push
mov
pop
test
pop
sarl
lret
iret
and
mov
dec
movsl
pop
mov
pop
xchg
in
sbb
lret
mov
mov
pop
inc
rclb
and
push
adc
inc
and
mov
ja
inc
mov
mov
sbb
push
scas
push
lock
clc
mov
mov
in
push
dec
dec
xchg
mov
push
or
std
setp
imulb
or
mov
lret
shr
and
xor
call
insb
mov
cmp
or
xor
fs
sbb
sub
popa
popa
and
push
jmp
inc
test
mov
xor
enter
sbb
xchg
mov
rclb
add
insb
xor
loope
mov
aaa
xor
cltd
mov
xchg
or
push
cli
push
ret
shl
xchg
pusha
adc
cmp
jmp
xor
xor
mov
lret
es
jecxz
aas
int3
loope
push
int
or
mov
and
clc
jge
sbb
repnz
les
sub
fsubrs
dec
aam
in
stos
sub
lcall
and
sub
aas
dec
imul
icebp
and
popa
or
test
icebp
jnp
cmpsl
mov
pop
add
popf
dec
repz
fisttps
iret
sub
insb
enter
adc
inc
push
inc
sti
mov
sbb
jmp
xchg
addr16
outsl
pop
daa
loope
lcall
mov
rcll
add
iret
mov
or
or
adc
mov
mov
das
adc
inc
sub
out
mov
inc
enter
cltd
fdivs
sbb
mov
sub
sub
inc
add
popf
mov
dec
inc
rorb
mov
mov
mov
xchg
fs
repnz
sub
and
shrl
push
adc
fisttps
add
addb
sahf
fists
mov
pushl
mov
cmc
cltd
or
or
addr16
xchg
rsm
out
cmp
leave
aaa
fs
mov
and
fldcw
mov
das
loopne
pop
lahf
movb
fnop
add
rcr
mov
fildll
mov
sub
xor
xor
mov
ss
shll
mov
push
gs
test
movsl
test
pop
stc
xchg
adc
push
pop
insb
mov
jbe
test
lret
stos
cmp
mov
or
dec
sub
pop
xchg
std
sub
sub
ret
mov
mov
inc
loopne
sub
inc
repnz
lods
dec
fwait
test
add
jecxz
out
stos
je
ret
pop
mov
xchg
cmc
shll
addr16
mov
cld
rol
push
sarb
jns
sahf
mov
ss
pusha
sub
push
shl
xchg
clc
sbb
dec
sbb
std
jle
jge
mov
insl
push
hlt
rcrb
xchg
std
insl
leave
and
cmp
mov
loop
repz
mov
movsb
nop
sbb
mov
orl
inc
test
push
in
cmp
dec
pop
lods
sbb
cmpsb
lret
loopne
repnz
cmpsl
mov
dec
mov
xchg
fsubr
mov
mov
ljmp
outsb
out
or
mov
or
sub
or
pop
repnz
pop
mov
and
imul
es
imul
jo
mov
jecxz
lods
xchg
sbb
orl
leave
pop
or
xor
push
pop
sbb
pop
andb
clc
nop
mov
rcr
loop
insb
out
leave
xor
loop
imul
push
inc
scas
xchg
fcomps
jmp
inc
sub
in
cltd
in
je
pushf
xchg
mov
fsts
or
push
aam
lea
test
push
clc
pop
pop
iret
or
std
pop
fstpt
fs
lret
nopl
mov
jp
add
add
loop
out
xchg
jecxz
les
shr
xor
xchg
in
push
xchg
clc
push
sbb
dec
xchg
sbb
pushf
ljmp
xor
xor
movsl
or
enter
xchg
cmp
mov
add
clc
mov
in
push
push
push
dec
jno
mov
lods
push
imul
inc
mov
stos
daa
pop
or
mov
scas
or
xchg
pop
inc
les
xchg
test
or
inc
jnp
or
stos
rcll
xchg
cmpxchg
or
cmc
push
jo
int
xor
or
jae
xchg
js
xor
outsl
add
out
iret
mov
sub
call
adc
pop
cmpsl
dec
dec
shll
push
add
loope
int3
aam
push
lahf
icebp
inc
sahf
shll
je
fs
adc
imul
pop
push
or
mov
addl
rcl
xor
ds
pop
std
adcl
sbb
xor
movsb
sbb
lods
outsb
lea
add
mov
and
int3
shr
adc
sub
in
fsts
push
xor
xchg
out
fists
lahf
mov
std
mov
out
sti
jno
test
imul
rorl
adc
cmpsb
jne
lret
scas
pop
and
sub
jns
loop
sbb
aad
inc
push
push
or
out
imul
stc
outsb
sbb
mov
test
jmp
mov
faddp
mov
adc
cwtl
es
pop
ljmp
in
cmp
or
in
dec
xor
add
pop
outsb
cmc
sbb
sbb
push
push
and
add
in
xor
sub
cmp
movsb
mov
mov
sub
jno
gs
mov
xchg
sub
hlt
repnz
adcl
cmp
out
nop
out
add
arpl
and
enter
in
clc
jno
push
cld
ret
imul
bound
in
xchg
sbb
sbb
xchg
jp
inc
jecxz
pusha
add
mov
cltd
test
sbb
mov
add
jmp
cltd
sub
das
pop
push
sahf
mov
repz
cmc
sbb
pushf
inc
movsb
inc
dec
aam
cld
cmp
xchg
dec
inc
aam
lret
ljmp
inc
fmull
dec
add
mov
add
das
cmpsb
jge
fsubr
pop
cltd
cmc
jbe
jge
icebp
fdivrp
bound
cmpsb
cmp
fbstp
jmp
xchg
sarl
subb
call
pop
sbb
or
call
sbb
mov
jmp
stos
jae
push
out
insb
adc
ja
cmp
das
daa
lahf
push
pop
jnp
and
frstor
jmp
sbb
adc
flds
mov
adc
push
inc
fwait
scas
popa
cld
push
test
dec
insl
lret
outsl
push
or
test
loopne
loop
cltd
sahf
aad
sub
push
jle
and
ljmp
sub
jns
sub
dec
hlt
mov
jno
mov
push
xchg
push
clc
sub
das
outsb
sbb
out
pop
aad
push
outsb
shll
aas
cs
outsl
pop
push
or
std
andb
popa
cmpsl
jbe
mov
xchg
subb
shll
xchg
mov
sbb
xor
aad
popf
sub
cltd
jbe
scas
xchg
cmp
push
sbb
adc
adc
xchg
and
add
leave
or
ffree
gs
fcoml
and
fdivr
ja
test
rorb
clc
sub
insl
mov
int
iret
arpl
inc
shl
int
loop
sbb
push
cld
addb
jno
xchg
mov
out
movsb
cli
mov
push
adc
mov
xchg
dec
aam
inc
cmovb
clc
add
jle
xor
xchg
sbb
fdivl
jp
mov
icebp
rcr
mov
jg
sbb
insl
sti
cmp
jle
daa
fcmovb
push
xor
xor
fistps
xor
lret
sub
mov
push
sahf
mov
lods
js
dec
jmp
sbb
xor
mov
ss
jl
mov
mov
adc
and
rcrb
sub
sub
cmp
mov
cld
jmp
and
xor
in
fwait
and
mov
mov
cwtl
in
mov
je
leave
lock
cmc
pop
mov
xor
mov
adc
sub
ficoml
sbb
sbb
push
jno
sub
scas
subl
sub
movsb
cli
mov
inc
push
fwait
mov
push
in
in
mov
jle
js
mov
adc
or
pop
fisubs
or
push
test
ljmp
sub
jle
insb
call
call
outsl
ds
mov
xchg
jb
nop
mov
push
adc
repz
scas
xchg
aam
pop
add
ja
shrb
pop
fcomp
lea
or
pop
and
mov
cs
xchg
sbb
scas
xor
add
addr16
xor
inc
sbb
cmp
push
jmp
pop
insb
cmp
ss
sub
shrb
scas
sbb
rorb
add
sbb
or
test
dec
cmp
jae
iret
cli
push
push
pop
inc
decb
ss
mov
aas
mov
inc
mov
pop
pop
je
xchg
mov
rclb
les
pop
bound
jns
mov
mov
mov
out
outsl
mov
adc
ret
sbb
movsb
cld
mov
call
pushf
vmovdqu
data16
and
icebp
push
ljmp
lcall
mov
xor
cmp
mov
rclb
shrb
into
in
xor
arpl
adc
les
xor
cmp
lock
push
sbb
dec
aas
mov
jne
mov
lds
stc
jmp
mov
jne
lret
mov
dec
or
out
sub
test
fsubr
notl
aam
and
inc
lds
add
repz
xor
popf
aas
mov
mov
out
dec
cmp
push
outsb
out
mov
insl
scas
movsl
cmp
jl
jge
loopne
fwait
aad
aam
imul
cmp
movb
adc
xor
pop
leave
repnz
push
addl
stc
pop
popf
adc
ret
lret
mov
clc
test
in
movsb
pop
dec
repnz
sbb
cli
arpl
movsl
and
push
push
adc
cmp
mov
pop
push
sub
nop
dec
xor
fdivrs
cmp
mov
ljmp
jg
cmpsb
xchg
popa
stos
inc
sub
fimuls
sub
outsb
int3
jb
mov
sub
rcrl
sbb
mov
and
cmpsl
sbb
push
cmpsb
test
clc
xchg
add
leave
add
cmpsl
pop
and
gs
or
scas
insb
mov
or
ficoms
repz
inc
pop
xlat
ss
xchg
sahf
jmp
popa
ljmp
hlt
insb
xorl
shl
push
inc
movsl
out
movsl
stos
enter
push
lds
out
mov
and
test
cmp
mov
sbb
mov
cmpsl
sarl
nop
stos
daa
push
fidivl
mov
out
cmpl
adc
call
fsts
gs
out
xchg
mov
in
sbbb
xor
push
jo
imul
ret
cld
lods
pop
inc
dec
fwait
out
enter
sbbb
insb
jne
or
je
test
adc
add
orb
push
mov
call
outsl
in
mov
mov
es
repnz
xor
xor
cmpsl
mov
xchg
pop
adc
xor
jne
xor
test
test
dec
sub
adc
dec
rclb
sbb
popa
jns
xor
push
xor
pushf
mov
insb
jmp
push
fnstenv
jmp
jnp
xchg
and
in
mov
loope
into
in
rcl
test
arpl
or
jg
bound
pop
and
cmc
jno
dec
pushf
jmp
mov
stc
insb
dec
fistpll
rcrb
cmpsb
dec
sub
dec
cmc
popf
push
into
jle
pusha
sahf
pusha
dec
gs
and
into
mov
cltd
push
or
movsl
cmpsl
dec
xchg
cmp
inc
clc
pusha
arpl
sub
adc
mov
mov
loopne
adc
into
push
lcall
cmc
out
mov
lahf
jl
xchg
push
sub
xor
icebp
mov
filds
and
mov
or
xchg
jnp
cmc
mov
mov
mov
jae
lret
inc
xor
insl
into
mov
das
adc
adc
jp
mov
adc
pusha
xchg
dec
in
dec
lods
sbb
icebp
test
mov
sub
pop
data16
and
cmp
mov
pop
xor
insl
xchg
es
fsubrl
mov
cmpsl
movsl
mov
lock
inc
xchg
sub
cmc
ljmp
cmp
mov
dec
mov
scas
xor
push
pop
fnstenv
pusha
mov
call
es
push
jno
inc
js
sti
mov
cwtl
add
es
or
sbb
xor
les
in
adc
popf
jno
xor
mov
test
lahf
xor
xchg
fisubrs
pushf
and
xor
mov
cmc
imul
ret
adc
jecxz
push
xor
cmc
add
adc
adc
cmp
pop
jmp
test
mov
mov
jge
jne
std
pushf
xor
push
inc
and
jge
fidivrs
inc
pop
sbb
xchg
add
inc
jae
sub
cwtl
and
sub
leave
jp
fnsetpm(287
imul
sti
mov
sub
pop
pop
adcl
fists
jb
jnp
cltd
stc
mov
adc
rcrl
cmp
cwtl
pop
or
jno
loop
pop
pop
add
mov
add
push
push
popf
cmp
or
add
sub
shlb
cltd
adc
sar
out
sub
inc
and
or
test
jge
cli
or
jge
test
test
pop
mov
rcl
cmc
pop
sbb
add
ds
bound
in
pop
mov
xchg
subl
imul
jb
nop
jl
mov
ret
dec
push
mov
negb
pop
data16
test
mov
jne
loope
push
adc
mov
inc
dec
lcall
lods
pop
mov
adc
ss
repz
leave
pop
adc
mov
hlt
add
push
and
jb
inc
sub
rorb
dec
cltd
dec
and
fcomps
or
pop
int3
testl
rcl
xchg
jae
insb
mov
in
outsl
imull
imul
cs
or
scas
or
je
push
pop
shl
adc
xor
roll
jecxz
mov
call
pop
add
lahf
cmc
repz
dec
stos
out
push
or
fistl
pop
push
ret
popl
sbb
adc
lret
and
mov
into
outsl
out
cmp
dec
out
pop
mov
push
std
lahf
fwait
popf
add
xchg
jle
insb
inc
mov
loope
out
test
cmp
in
gs
rclb
fnstsw
adc
jbe
jge
inc
sbb
cmp
jbe
shlb
xchg
dec
test
cltd
lret
or
push
mov
dec
dec
in
jp
sub
inc
jae
addr16
xchg
adc
lods
lods
mov
mov
sbb
jp
movsb
or
or
iret
push
inc
ljmp
add
aas
out
mov
popf
jo
sub
repz
ss
mov
repnz
rolb
sub
loopne
cmp
in
mov
sub
jmp
jae
cmpsb
icebp
jno
jge
fsts
push
or
js
shlb
std
out
rorl
and
mov
mov
sub
int3
rorb
sub
push
or
hlt
xchg
jp
mov
ljmp
loope
lret
pop
xlat
pop
adc
mov
jb
mov
arpl
xorl
pop
sbb
push
loopne
mov
add
adc
call
adc
stc
jmp
imul
and
jae
sbb
rorb
repz
cmc
adc
add
and
testb
arpl
out
mov
rcll
imul
add
mov
fdivs
das
push
into
jmp
xor
pop
movsb
call
xchg
js
decb
cmp
xor
sub
or
aas
or
pop
jl
loopne
pop
loope
cmp
xor
sbb
push
push
out
lock
jl
jmp
xchg
inc
jne
add
shlb
outsl
inc
pop
xchg
push
jnp
push
repz
and
js
insb
jnp
in
insl
cmp
mov
cmp
cmc
xchg
daa
pcmpgtb
add
in
bound
das
or
subb
je
fiadds
shll
repnz
dec
mov
xchg
dec
insb
loopne
pop
nop
push
fisttpl
adc
int
cs
popf
xchg
push
popf
and
sbb
insl
adc
add
mov
sub
xchg
sahf
add
lret
movsl
icebp
shll
xchg
mov
jo
cmpsb
adc
adc
mov
xor
and
sub
inc
adc
imul
icebp
xchg
mov
mov
jo
mov
xchg
daa
push
mov
mov
outsl
push
into
ja
adc
jbe
cmp
mov
jne
push
test
bound
push
fcomi
sbb
cwtl
or
mov
xor
imul
inc
stos
ljmp
rcr
dec
outsb
cmc
push
aas
loope
adcl
add
in
inc
sub
push
xchg
or
test
mov
lods
or
addr16
lds
mov
mov
das
loope
xorl
jmp
push
mov
add
lea
and
push
mov
mov
jge
xchg
iret
push
push
cwtl
pushf
or
xchg
scas
pop
dec
orb
mov
mov
pop
adc
fstl
mov
test
test
adc
cltd
pusha
mov
call
pop
out
pop
popl
adc
add
repnz
ljmp
add
mov
jnp
push
adc
or
jp
mov
jnp
pop
mov
xchg
push
push
jbe
in
lahf
adc
into
mov
or
adc
lock
add
add
bound
cmp
imul
adc
mov
insb
pusha
imul
cs
push
mov
push
jge
mov
mov
xor
arpl
sub
das
rcll
adc
push
xor
mov
cmc
insb
pop
pop
jp
lods
xor
xor
sbb
rorb
sbbb
mov
push
add
adc
loope
cmc
in
push
push
lcall
xchg
leave
xor
rclb
popl
in
mov
into
sub
push
aas
insb
cmp
xchg
test
dec
push
mov
test
sub
cltd
inc
push
ret
or
or
ljmp
lret
and
jno
aad
mov
mov
mov
mov
orl
int3
psubd
push
xchg
xor
adc
push
inc
cli
das
mov
xchg
aad
jb
stc
lret
add
jl
loop
pop
xchg
out
int3
aas
mov
fisubrs
and
cs
lea
dec
mov
cmp
sbb
popf
out
mov
mov
adc
scas
dec
ljmp
cli
call
js
xor
outsb
movsl
lahf
scas
lahf
sti
pushf
mov
or
cmp
pop
cmp
add
jmp
pushf
pop
jae
int
jnp
inc
out
xchg
repz
mov
xor
mov
or
cmp
repnz
popf
push
push
loope
adc
dec
imul
sbb
mov
test
inc
mov
mov
xor
push
push
xor
jbe
xchg
rolb
mov
cld
scas
add
testl
arpl
or
aam
adc
push
test
data16
shl
testl
das
or
xchg
clc
sti
push
ljmp
movsb
pushf
mov
adc
cmp
jmp
das
add
cltd
jge
push
mov
pop
xor
inc
mov
adc
or
cmp
and
gs
and
sbb
ret
cmpb
mov
jl
mov
dec
push
ret
adc
adc
popl
or
mov
sbb
add
xorl
in
jb
nop
mov
inc
fsubl
mov
and
inc
adc
sub
add
mov
ja
jge
outsl
fcmovnu
sub
imul
fcmovne
leave
push
mov
into
mov
loope
cmp
adc
xor
leave
or
xor
les
jp
pop
jb
xchg
push
mov
pop
dec
inc
pop
test
test
sbb
sub
int3
pop
out
dec
addb
mov
add
js
int
mov
pushw
and
cld
aam
cmp
jmp
mov
insl
mov
push
lods
in
dec
adc
loopne
inc
add
bound
mov
fildll
sbb
jg
loope
or
add
xor
mov
xchg
mov
push
dec
push
cmp
ljmp
pop
dec
cli
insl
xor
mov
psubw
cmpsb
inc
jge
lahf
add
fucom
jb
loop
bound
arpl
cmp
xchg
movsl
dec
enter
jmp
fldt
leave
push
clc
cwtl
add
xor
lods
lock
imul
pop
add
mov
out
stc
test
into
inc
ljmp
movsb
mov
xchg
stc
fldl
adc
arpl
out
fmuls
es
cmpsb
hlt
mov
fwait
stos
and
inc
push
sub
push
pushf
orl
cmpsb
icebp
jl
and
xorb
inc
popf
adc
mov
std
push
iret
sub
lahf
cli
push
faddl
mov
mov
dec
mov
cmp
cmp
push
imul
adc
pop
dec
mov
sbb
aaa
or
rorl
out
test
stos
jl
fwait
pop
icebp
mov
or
es
xchg
imul
gs
adc
xchg
sahf
adc
sub
es
clc
cld
push
cmp
rcr
ja
xchg
mov
sbb
add
dec
lock
mov
imul
loop
push
test
cmp
xchg
cs
sbb
pop
lock
imul
stos
and
pop
loopne
call
xor
fistps
aaa
add
jmp
mov
inc
xor
mov
add
jmp
mov
inc
shrb
xor
cmp
xor
inc
jne
cmp
lret
insl
int
xorb
adc
jecxz
ljmp
mov
call
fdivl
sub
mov
int3
dec
xorl
fisttpl
test
push
sti
push
pop
sahf
push
mov
daa
cmpsb
xorl
sbb
cmp
dec
or
pop
push
std
std
xchg
fstpt
and
aas
or
ja
aaa
pusha
sbb
xchg
mov
mov
test
into
gs
or
jp
and
or
shll
orl
jle
cmpsl
fnstcw
outsb
leave
cmpsl
enter
mov
jb
test
xchg
std
mov
xor
js
and
sub
mov
test
pop
push
cmp
dec
push
test
xor
aas
jl
pop
fwait
sbb
insl
or
enter
cmp
push
jnp
or
and
pushf
mov
jecxz
test
mov
add
filds
xchg
cmc
push
dec
into
in
mov
xor
ja
xchg
les
fcomps
pop
dec
mull
sub
pop
in
arpl
loop
ja
mov
loopne
and
les
sub
pusha
jnp
out
cmp
mov
inc
inc
daa
repz
loop
rcr
andl
sbb
cmp
mov
or
jp
test
addr16
ds
mov
ret
push
mov
xor
mov
mov
shll
dec
or
test
mov
shr
mov
push
mov
or
sub
or
xchg
mov
lods
xchg
sbb
fsubs
dec
push
mov
mov
push
roll
push
mov
int3
leave
mov
add
and
nop
push
adc
jge
or
lret
lret
jb
jb
sbb
popa
arpl
sarb
lds
dec
mov
xchg
popa
mov
lock
cmc
sub
cld
mov
aam
sbb
or
sarb
fs
jp
adc
xor
cmp
imul
mov
mov
es
sub
mov
push
sti
add
or
std
dec
fsubl
inc
fldenv
push
mov
pop
pushf
shl
jg
enter
stc
lods
sub
stc
jbe
lock
ljmp
sbb
or
leave
out
and
jp
int3
ja
cwtl
adc
adc
popf
adc
fwait
push
mov
cmp
cmp
cmp
decb
dec
imul
xchg
xchg
lds
cmp
test
xor
adc
aad
cmc
xchg
mov
movsb
mov
xor
in
sub
xchg
ljmp
jmp
add
mov
les
fstps
test
movsb
repz
inc
subl
jbe
loope
jp
sbb
scas
pop
movsl
sbb
daa
lcall
xor
inc
rolb
test
or
int3
hlt
or
clc
adc
and
mov
mov
xchg
iret
andps
repz
add
sub
and
fisttpl
fidivl
pop
enter
adc
xor
mov
fidivrl
add
inc
and
sub
mov
idiv
cwtl
sti
cmp
test
mov
ljmp
xchg
jmp
push
xchg
in
cli
iret
and
lret
mov
jmp
sbb
jae
inc
js
bound
call
push
enter
dec
fnstcw
or
in
jb
lods
fisubrs
movsb
jg
rcr
ret
jl
loopne
or
and
lds
sarb
addr16
fcoml
daa
ljmp
out
nop
sahf
and
xchg
fldenv
or
fwait
sbb
in
sub
lret
pop
or
adc
push
in
mov
daa
and
cmp
insl
ss
bound
fwait
and
sti
rolb
add
jo
cmp
push
xlat
outsl
or
movsl
das
movsl
jecxz
bts
jmp
fisttpl
and
xchg
pop
add
jg
jne
mov
fistpll
shll
dec
sub
push
or
shlb
icebp
pop
sbb
std
push
iret
fsubs
sti
ds
test
imul
sbb
xchg
mov
mov
aas
push
fdiv
out
xchg
mov
cmp
xlat
mov
repnz
push
xor
aaa
xchg
or
popl
jg
mov
je
hlt
pop
andb
ja
fimull
mov
popf
xchg
pop
xchg
repz
mov
push
add
sbb
ds
mov
pop
mov
aad
and
aaa
or
hlt
repnz
push
or
push
sbb
xchg
call
sub
imull
rclb
sub
adc
inc
pop
sbb
adc
xor
nop
into
mov
mov
das
jnp
mov
sub
addb
sbb
testl
movsb
imul
xor
fcoms
cmp
mov
mov
jae
mov
xchg
or
jno
add
fwait
jg
fwait
inc
push
mov
add
add
pop
dec
sub
cwtl
addr16
lret
pushf
cmc
add
aad
ss
mov
mov
out
cmp
ror
testb
mov
mov
add
xor
dec
scas
pop
cmp
or
cmp
cmp
es
mov
push
iret
jecxz
inc
or
push
mov
mov
nop
fsubrp
popf
cmc
cmc
add
and
mov
mov
dec
shlb
adc
cmp
les
lahf
and
or
cmpsb
pop
mov
xor
cld
stos
inc
aas
bound
mov
lret
pop
cmp
shl
inc
mov
and
mov
xchg
call
cmp
add
pop
push
ret
lahf
and
xchg
inc
jmp
push
pop
pop
xchg
xchg
push
stc
shll
xchg
out
data16
ds
xorl
je
bound
rclb
fcmovu
loop
aam
xor
out
xchg
add
xchg
rcll
sub
xchg
jp
mov
out
xor
mov
incl
cmp
mov
ret
sahf
outsb
out
xchg
pop
dec
pop
mov
fstl
fadd
out
popa
nop
rcrl
dec
loope
pop
nop
adc
push
jo
icebp
adc
popa
inc
cwtl
cmp
fiadds
push
shl
jo
aam
jg
mov
incl
cmp
and
mov
mov
test
out
adc
jp
sbb
xchg
push
add
test
dec
adc
rcrb
mov
pushf
cld
adc
pop
addr16
mov
es
ja
testb
mov
xchg
cmp
cli
push
xor
sub
dec
je
cmpsl
dec
xchg
pop
lahf
rolb
decl
mov
jb
adc
das
push
inc
out
decb
faddl
xchg
in
jmp
push
inc
xor
ja
icebp
mov
scas
push
leave
cs
leave
imul
xorl
hlt
push
adc
test
popf
leave
mov
mov
push
mov
mov
aad
cld
outsb
mov
jb
mov
int
inc
push
out
pop
xchg
xchg
push
loopne
adc
call
adc
mov
xchg
xchg
pop
cli
dec
xchg
pop
sub
cmp
mov
xor
movsl
mov
es
push
lea
pop
movsl
push
sbb
lret
into
push
shll
fsubrl
xchg
rcrl
iret
adc
gs
add
movsl
or
jmp
mov
jae
push
daa
frstor
dec
or
xor
cmp
ret
mov
roll
jbe
nop
pop
pop
or
mov
sbb
and
and
jecxz
mov
jg
pop
icebp
lcall
scas
sbb
pop
add
stos
inc
dec
clc
mov
inc
clc
mov
xchg
dec
mov
cmpsl
xchg
cmc
bnd
jge
adc
cltd
xchg
pop
xchg
xchg
xor
int
inc
sbb
jmp
es
cli
mov
mov
mov
and
or
in
add
stos
inc
sub
out
jmp
adc
xor
push
cld
sbb
in
or
fwait
push
movsb
mov
out
jle
mov
push
out
xchg
xchg
aad
and
shlb
les
mov
subl
fists
inc
xlat
pop
cmp
fisttpll
pop
xchg
pusha
push
loopne
sbb
or
mov
jmp
mov
ja
mov
mov
leave
lea
scas
rcrl
sbb
and
xchg
aaa
cmp
add
in
clc
inc
in
andl
test
cli
mov
sar
mov
mov
push
fwait
hlt
arpl
nop
adc
jb
into
sbb
filds
out
int
mov
mov
and
in
xchg
jge
cmp
out
jge
enter
in
imul
ret
std
xor
mov
jmp
push
and
lea
orl
fsub
inc
stos
outsl
add
movsl
pop
xchg
mov
addr16
jbe
mov
xchg
mov
jne
mov
hlt
pop
pop
test
mov
in
mov
enter
lret
daa
dec
or
jae
cwtl
cmovbe
push
xlat
dec
mov
mov
rcrl
push
out
pushf
gs
sbbl
adc
lret
mov
pop
sbb
addb
xchg
dec
push
mov
fsubrp
add
push
xchg
mov
sbb
fisttpl
jbe
xchg
cld
adc
dec
jns
and
pop
out
sti
sahf
xlat
pop
sbb
arpl
push
outsl
mov
clc
clc
sbb
lahf
xchg
sarl
addr16
xlat
pop
nop
addr16
lahf
xor
fwait
mov
pop
mov
lods
pusha
js
repnz
or
pop
cld
xor
mov
dec
in
mov
inc
iret
repnz
dec
mov
inc
jbe
dec
test
lock
scas
repz
repnz
test
loopnew
cmp
jo
mov
mov
nop
imul
js
xchg
pop
fidivrl
sbb
xor
or
mov
ret
or
int
into
push
xchg
inc
fadds
in
nop
in
cmp
add
call
ds
jae
stc
adc
sub
add
lret
out
arpl
data16
imul
push
aam
insb
lcall
mov
bound
stos
cltd
or
pop
sti
sub
les
jl
cld
mov
xor
pop
dec
aas
add
lock
mov
mov
insl
mov
int3
loopne
cmpsb
ficomps
inc
dec
adc
mov
pop
sbb
lcall
cwtl
and
sahf
or
mov
ja
enter
adcb
mov
nop
daa
xabort
push
xchg
and
pop
fwait
cs
test
mov
in
arpl
sub
lods
roll
mov
leave
cld
ds
xor
les
cwtl
mov
out
jno
out
sub
jne
add
jb
icebp
xor
sub
and
lods
sar
fsts
sub
fcmove
add
adc
scas
out
push
mov
xor
cmovle
jmp
scas
pop
adc
push
inc
or
push
test
add
pop
loopne
or
adc
aad
dec
pop
mov
jmp
in
fisubs
xor
jge
loop
push
dec
dec
dec
and
xchg
repnz
dec
jne
and
sbb
mov
jmp
xchg
xchg
cmpsb
fnstsw
push
imul
push
jo
pop
dec
inc
divl
shl
lods
jno
mov
rolb
pushf
cmpsb
lods
jns
mov
push
xchg
mov
pop
inc
pop
jno
cmpsl
xor
loop
into
push
pop
shl
gs
repnz
cmp
pop
jne
es
sbb
xchg
imul
and
inc
cld
popa
or
popf
dec
mov
xor
mov
iret
mov
mov
jns
gs
movsl
push
bound
mov
das
stos
push
test
pop
jns
and
scas
inc
or
aam
or
ret
jae
and
arpl
rorl
sbb
outsb
xchg
add
add
mov
add
xchg
or
fwait
cmc
clc
and
cmpsb
xchg
dec
sbb
inc
mov
push
neg
sub
arpl
cmp
lods
lea
xchg
adc
ss
ljmp
add
les
imul
pop
repnz
sti
and
in
adc
in
gs
mov
out
lds
pop
adc
das
xor
push
push
out
ret
icebp
rcrb
mov
push
mov
adc
sub
loop
ja
mov
mov
pop
jmp
data16
in
push
mov
fstl
jae
inc
sub
loop
adc
mov
sbb
fldcw
inc
xlat
fs
push
mov
mov
call
out
mov
cmp
push
fimull
clc
dec
inc
or
mov
jnp
or
cmc
pop
ds
jl
sub
stos
fs
shll
lds
lods
aad
aad
lret
mov
xchg
cwtl
roll
cmp
pusha
fbstp
sbb
mov
outsl
or
lock
addl
sbb
loopne
add
leave
cmc
push
ss
imul
inc
sub
xchg
or
repnz
jge
push
movsb
xchg
inc
fistpll
pop
jmp
jmp
xor
pushf
iret
ljmp
bound
inc
imul
icebp
and
cltd
xor
xor
div
sbb
mov
mov
push
fstl
jbe
cmpsl
fistpll
jne
inc
test
cmp
cltd
jbe
sub
out
mov
or
stc
cmc
iret
das
lahf
mov
insb
fmul
dec
test
mov
orl
mov
inc
lods
int
or
pop
and
inc
mov
aas
xlat
xchg
rclb
aam
orb
aam
mov
sbb
xchg
lcall
push
inc
cmp
add
push
jp
push
pop
mov
in
in
shrb
sub
mov
lahf
mov
aam
lods
dec
and
lock
mov
aam
out
jg
movsl
xchg
jl
jle
popa
fwait
rolb
bound
mov
mov
and
jne
xchg
mov
and
adc
or
cld
jns
loope
adc
inc
enter
clc
negb
jl
cmp
inc
xchg
mov
shlb
test
mov
adc
out
xorb
dec
out
cltd
or
dec
clc
subl
pop
and
test
ljmp
aas
bound
ret
jmp
rorl
enter
push
jmp
data16
sub
cwtl
xor
aaa
loop
or
add
push
or
int3
fdivrs
in
sub
ljmp
and
mov
das
addb
ret
cmp
js
cwtl
pop
or
jnp
mov
cmp
xor
sub
shlb
mov
mov
aad
loopne
jle
fsubs
mov
push
sahf
addb
jno
sbb
inc
xchg
dec
mov
gs
mov
xchg
cmpl
mov
popf
stos
jns
les
mov
sub
dec
jo
cmp
loopne
push
push
stos
dec
mov
pop
iret
roll
les
pop
jb
dec
push
das
jae
xchg
push
lock
shlb
and
rclb
je
inc
out
jb
mov
inc
or
xchg
pop
mov
adc
pop
cmp
add
fisubrl
xchg
xchg
int3
fs
int3
pop
cltd
or
in
mov
dec
xchg
dec
std
ja
pop
rcl
mov
outsb
push
lea
scas
imul
movsb
enter
stos
cmc
fs
loopne
out
lahf
inc
gs
in
mov
inc
jecxz
insl
fildl
repz
popf
pop
mov
cmpsb
loopne
pop
insb
outsb
inc
push
insb
bound
jp
das
add
jle
ja
mov
das
mov
xchg
rol
xchg
jnp
adc
mov
shll
cwtl
stos
mov
jb
stc
rcrb
flds
jmp
popf
lahf
jle
sbb
call
addr16
mov
push
fs
rcrl
clc
sbb
sub
xchg
sub
jmp
and
xor
movsb
aam
push
lret
sbb
int3
inc
jo
inc
jmp
sarb
cmpsb
out
inc
sbb
mov
pop
xchg
adc
dec
xchg
cmpsl
sti
faddp
jbe
xchg
imul
les
lock
ds
sti
jns
into
inc
push
scas
sub
push
push
in
lods
lret
cwtl
fisubrs
rclb
inc
sti
xchg
mov
adc
sbb
outsl
mov
or
data16
scas
bound
or
push
jp
push
stc
in
add
cltd
xchg
aam
adc
mov
add
add
loop
out
in
mov
or
icebp
push
xchg
test
ja
movsl
dec
mov
in
jno
or
dec
and
lret
test
decl
and
add
int3
mov
push
scas
out
sti
and
je
pop
dec
call
out
pop
ss
fbstp
and
adc
fcoms
fstpl
inc
leave
rclb
iret
roll
pop
jmp
popa
add
ljmp
mov
in
add
push
ret
in
bound
or
clc
ja
jl
xchg
in
sub
repnz
lret
push
inc
shrb
sbb
jg
stos
gs
lea
lds
lds
xchg
mov
mov
fistpl
sbb
and
mov
push
push
adc
imul
in
js
in
adc
roll
add
flds
sbb
push
inc
jl
jno
jno
std
add
push
das
daa
out
mov
data16
cmp
shld
jmp
dec
jnp
rcr
pop
ret
out
xchg
sub
out
inc
and
pop
out
fucomp
pushf
cmp
sub
inc
cmc
xorl
mov
add
xorl
pop
sbb
mov
imul
jae
lahf
or
js
inc
hlt
movl
push
sub
rol
add
xlat
pop
inc
testb
fadd
pop
cld
xchg
or
inc
or
test
dec
fistl
fadd
jb
das
in
loop
mov
cmp
loopne
add
or
sub
sbb
aas
and
sub
pop
jae
push
fnsave
popa
xchg
cltd
cmp
jle
jnp
dec
mov
loopne
bound
je
inc
nop
pop
out
jbe
and
sub
repz
or
lock
push
push
sub
mov
movsl
add
ja
hlt
insl
mov
cmc
out
sbb
mov
aaa
inc
and
and
and
lcall
popf
push
andb
data16
sbb
jl
out
int3
mov
dec
mov
cmp
loop
xchg
outsb
mov
pop
cld
pop
outsl
inc
mov
mov
pop
mov
add
sub
and
push
adc
mov
imul
data16
dec
jae
imul
pop
cld
inc
jbe
cmp
icebp
jns
and
or
dec
xchg
xor
testb
and
or
push
mov
in
adc
mov
pushf
pop
xchg
fldt
pop
jno
or
jp
or
and
or
sbb
fwait
popf
test
jge
int
pusha
add
sub
popf
dec
divl
xor
adc
sbb
fildl
sbb
ljmp
xor
mov
fdivrs
dec
fcomps
or
push
mov
cmp
push
mov
mov
jle
cltd
jne
mov
out
das
adc
and
mov
add
insl
mov
jge
movsb
push
in
pop
adc
xor
iret
push
int
sahf
mov
jg
xlat
popa
imul
lretw
dec
lds
sub
call
lock
mov
mov
les
xchg
test
push
mov
mov
jb
jne
pop
decl
inc
ja
mov
ret
icebp
mov
push
movsl
mov
mov
jae
sub
cmp
sub
mov
ljmp
mov
push
xor
cli
test
imul
fistpl
mov
inc
call
dec
mov
or
outsb
ds
sub
jns
imul
dec
mov
jl
out
subl
jg
inc
nop
inc
enter
test
lahf
push
inc
and
int
cmp
stos
jmp
mov
out
xchg
jo
add
sbb
pushf
lret
femms
adc
mov
push
mov
in
call
jg
sbb
pop
out
test
jnp
out
lods
dec
xchg
cmp
stos
mov
stc
loop
or
popf
add
aaa
pop
jo
loopne
pop
jno
jle
dec
jecxz
fnstenv
es
popa
iret
and
pop
sarl
cld
incl
insb
inc
add
push
jbe
jno
or
inc
fxch
mov
inc
sub
notb
push
out
push
out
xchg
pop
mov
imul
idivb
mov
sub
push
int3
or
cmp
pop
imul
inc
pop
mov
sahf
push
xchg
mov
sbb
cmpsl
sbb
mov
cld
mov
xor
and
rcl
jnp
mov
inc
leave
dec
mov
imul
sbb
aam
es
enter
test
fstpl
sarl
gs
lea
cmpsl
push
dec
or
cmpl
clc
mov
mov
push
sbb
movsl
int
daa
fucomip
adc
pop
js
pop
sahf
icebp
cmp
mov
add
inc
outsl
xor
xchg
push
nop
xor
or
or
in
das
faddl
int
sbb
jl
arpl
dec
es
or
mov
loope
filds
or
pop
mov
mov
sbb
stc
xchg
xor
lcall
flds
xor
insl
repz
ljmp
add
jp
add
xchg
outsb
fldl2t
outsl
xor
leave
jmp
sub
jo
sub
push
push
mov
inc
pop
sub
mov
aas
insl
pop
xor
inc
loopne
sub
mov
or
jns
js
lea
mov
gs
bound
xchg
in
dec
push
test
scas
cmpsl
aam
imul
sub
adc
xlat
sub
cli
int
aam
push
mov
mov
add
std
fdivrp
pushf
or
gs
inc
xchg
xchg
enter
sub
in
repz
clc
movsb
jl
mov
insl
cli
mov
inc
add
mov
outsl
or
shl
inc
outsb
rcr
divl
jo
lret
cld
sbb
mov
cli
test
push
and
jbe
jmp
and
mov
std
sar
add
or
push
fistps
mov
xlat
fs
sbb
xchg
int
jge
stos
loopne
adc
int3
inc
jb
cmp
cmpsb
xor
cmp
mov
xchg
fmull
cld
cld
loope
movsl
shrl
and
outsl
mov
push
adc
xchg
sahf
add
push
mov
mov
adc
xchg
imul
xor
out
sbb
aaa
dec
mov
dec
xlat
nop
xchg
adc
cwtl
mov
cmpsl
cwtl
sub
pop
and
mov
orb
sbb
add
testl
lahf
rorb
cs
dec
les
push
cli
sub
int3
jmp
pusha
dec
add
adc
xor
mov
ja
ds
pop
imul
push
xchg
mov
les
test
rcrl
sub
and
pushf
and
shl
add
inc
lret
pop
jbe
jge
rorb
in
cwtl
cmp
cwtl
int3
mov
mov
shr
cmp
jle
mov
push
insl
adc
xchg
xchg
js
xchg
lock
sbb
jge
bound
gs
aam
mov
adc
sbb
dec
lret
and
sarl
sbb
mov
cwtl
fmuls
inc
inc
ret
jns
xchg
fmul
sub
out
push
cs
mov
and
jp
std
xor
out
testl
mov
dec
movsb
pushf
adc
dec
push
pop
adc
push
inc
pop
cmp
scas
es
cli
mov
sbb
dec
pop
sub
and
mov
mov
scas
jb
adc
jle
inc
mov
stos
cmp
dec
and
out
push
dec
sarl
mov
orb
mov
and
sub
mov
pop
lock
pop
or
fucomip
pop
in
adc
out
std
or
inc
push
popf
or
popa
jp
mov
jecxz
repz
mov
fstpt
orb
adc
add
ficoms
adc
jne
cmp
lahf
dec
cwtl
xchg
or
mov
mov
cmc
mov
nop
xchg
rol
cmp
hlt
lock
out
jp
mov
mov
out
push
enter
sub
mov
div
dec
sbb
xor
inc
xor
icebp
adc
imul
ss
pop
cli
stc
shll
add
mov
mov
push
std
xchg
andb
mov
add
jnp
sbb
je
adc
mov
sahf
push
jns
cmp
sbb
stos
pop
mov
dec
mov
cld
adc
in
outsb
js
int
dec
cmp
sbb
cmp
xchg
lcall
jb
add
inc
jg
dec
lds
jne
adc
add
in
xchg
dec
jge
xchg
or
push
inc
xchg
int3
mov
ds
icebp
push
loopne
inc
insl
sub
ljmp
cmpsl
sarb
jb
imul
adc
xchg
into
pop
dec
push
push
mov
or
sti
or
xor
jne
fidivs
cmp
pushf
cmp
xchg
mov
cltd
jbe
sbb
xchg
call
divb
insb
push
adc
lcall
cmp
sbb
xchg
rorl
mov
cmp
cwtl
or
dec
dec
adc
cmp
xor
fcoms
shll
dec
andl
pusha
push
adc
fisttps
in
fwait
sbb
scas
pop
sbbb
add
mov
xor
negw
pop
iret
sbb
sbb
lea
xor
pushf
add
scas
or
push
mov
pop
pop
jecxz
jge
stos
outsl
lret
mov
pop
sahf
mov
lcall
pusha
iret
cmpsl
inc
rorb
mov
dec
pop
xchg
std
sub
mov
bound
mov
test
sub
out
test
sbb
or
pop
inc
cmp
fists
rolb
push
sub
lds
sub
lret
and
aas
scas
inc
or
dec
fwait
scas
daa
aad
mov
mov
popa
sub
cmpsl
jmp
je
pop
test
jecxz
mov
lods
push
loope
mov
fwait
sbb
leave
out
es
and
add
mov
das
dec
test
sbb
aas
pop
or
xor
test
rcr
mov
or
and
xor
sbb
push
fisttpl
jb
out
inc
aam
lahf
push
lcall
out
js
pop
pop
mov
pop
bound
shl
cmpsb
fistps
gs
dec
or
pop
and
or
mov
fsubl
add
sbb
addr16
inc
inc
enter
mov
xlat
inc
pop
pop
add
and
dec
pop
shll
xor
test
sub
inc
fcmovnbe
xlat
stos
add
subl
jecxz
movsl
sbb
and
fldt
push
jp
movsl
xor
pop
adc
jle
inc
cmc
mov
fistl
or
fidivrl
loope
ljmp
les
inc
mov
jnp
inc
lahf
cltd
cld
insb
push
adc
popa
mov
xchg
imul
or
mov
or
pop
nop
pop
call
cmc
aad
fdivrs
fsub
add
xchg
push
jmp
sub
inc
in
les
lock
or
mov
cmp
lret
dec
add
jnp
cmp
ds
lods
in
mov
enter
clc
mov
or
outsb
mov
rorb
adc
addr16
mov
ds
enter
in
sbb
sahf
inc
jmp
push
gs
inc
jmp
outsb
jp
push
cli
cmp
stc
lret
dec
call
imul
cltd
popf
loop
lods
mov
add
cmp
sub
mov
sti
cmp
and
or
dec
dec
mov
js
lock
xor
dec
enter
mov
jnp
mov
mov
push
adc
xlat
pop
dec
adc
xchg
jns
xchg
cmpsb
gs
push
popf
mov
hlt
clc
xor
rclb
pop
stos
mov
call
adc
push
adc
loopne
xchg
mov
push
and
rorl
sub
pop
movsl
les
ret
inc
sbb
add
mov
or
mov
outsl
cmp
cmpsb
dec
dec
bound
es
clc
dec
or
lds
mov
loopne
push
inc
sub
test
fs
xorl
fwait
sahf
test
rcll
sbb
sub
add
ss
test
test
jp,pt
adcl
xchg
icebp
shrb
aas
pusha
arpl
lcall
sbb
jne
pop
jno
pushf
adc
mov
and
fldenv
dec
hlt
mov
ljmp
testb
mov
bound
dec
out
cmp
shrb
popa
jp
dec
rorb
jl
dec
xor
ret
jns
or
or
adc
lock
push
test
fs
cmp
mov
push
ret
push
add
jo
pop
xor
call
and
mov
int
sti
jg
fstpl
push
mov
push
mov
enter
xchg
gs
enter
rclb
jae
aas
inc
cmp
fimull
adcb
pop
xor
xlat
loopne
sahf
loop
jnp
insb
stos
inc
and
rcll
jl
jns
rorb
xchg
jb
push
clc
mov
jg
add
push
sub
je
jge
movsl
xchg
mov
ficomps
add
dec
xor
out
shrb
outsl
mov
xor
sbb
inc
cmp
push
lret
test
icebp
lret
pop
jl
pop
mov
imul
xchg
pop
cmp
sbb
into
clc
jge
pop
loope
dec
daa
in
dec
sub
call
mov
cmc
sub
icebp
mov
movsl
push
ficompl
mov
sbb
jge
mov
jne
icebp
test
mov
push
dec
loop
or
lds
pop
in
mov
cwtl
or
mov
test
dec
int3
idivb
xor
sbb
or
loop
pop
ljmp
dec
dec
adc
xchg
cs
mov
mov
cli
cmp
lea
cli
mov
stos
je
sub
psrld
dec
pop
mov
test
inc
sbb
fstpl
jns
fisubrs
icebp
lock
je
in
adc
jnp
cmpsb
mov
stc
test
out
loope
sub
jg
inc
ficoml
shlb
mov
pusha
in
jne
cmp
in
in
lods
pop
outsb
cmpsl
enter
and
xor
stos
jmp
mov
scas
in
and
push
imul
popa
xchg
test
lahf
imul
adc
jl
cmp
dec
xchg
push
pop
mov
int
out
outsl
cmp
ljmp
dec
xchg
mov
sbb
mov
adc
rorb
add
inc
fildl
xor
mov
imul
sbb
xchg
sbb
pop
xchg
inc
div
pop
lahf
add
lret
mov
adc
mov
sub
add
rcrb
jnp
pop
daa
testl
ret
ja
add
add
inc
mov
push
jge
repz
mov
adc
test
or
adc
arpl
adc
icebp
cs
pop
xchg
mov
andl
xor
arpl
pop
jbe
dec
das
push
fmull
mov
xchg
testb
and
vphadddq
imul
mov
cmpsl
inc
sub
sbb
push
in
in
and
inc
jg
mov
pop
sbb
imull
jo
lds
adc
nop
cmp
insb
test
and
gs
cmpsb
and
xchg
js
loop
dec
pop
shl
xlat
sti
add
test
and
filds
mov
sbb
lods
int
sub
push
cli
ljmp
fnstcw
sahf
jle
loope
sti
pop
js
cld
aaa
cmc
mov
cs
jl
sarl
xchg
cmp
sbb
add
ret
dec
pop
dec
inc
mul
sbb
sub
xor
cmp
in
xor
mov
push
lods
scas
xlat
ds
xchg
xor
movsl
xlat
jno
lock
mov
lods
or
fs
pop
call
xchg
sub
xchg
ja
clc
stc
ficomps
mov
imul
mov
adc
shrl
jne
mov
pop
push
jg
xor
and
call
mov
or
jb
das
ljmp
out
pop
mov
push
aaa
adc
inc
xlat
fwait
pushf
ljmp
or
in
mov
dec
and
cmpsb
cmp
dec
inc
andl
mov
pop
int3
xchg
shll
jl
sbb
rclb
ss
or
rclb
insb
inc
inc
xor
xchg
repz
jnp
mov
inc
xchg
aas
mov
das
fistpll
stos
clc
mov
cld
lahf
aad
clc
mov
jnp
push
inc
push
lock
loopne
or
or
mov
scas
jbe
popa
in
inc
ja
xor
scas
push
push
dec
jns
in
lret
aad
add
push
xor
inc
test
or
add
jae
jb
pop
jae
pop
punpckhwd
out
rcrb
call
stos
mov
imul
stc
jb
icebp
iret
xor
mov
enter
out
dec
mov
xchg
pandn
xor
sbb
pushl
and
sub
pushf
test
scas
jo
add
push
xchg
movsb
sbbl
push
lods
push
sbb
mov
mov
pop
hlt
xchg
fildll
jg
pop
shll
sub
je
addb
es
fwait
xchg
iret
xchg
int
sbb
rcrb
pushl
inc
adc
pop
inc
in
in
es
aam
enter
in
aaa
add
outsl
xor
clc
test
inc
imul
les
xchg
sbbb
or
clc
xor
add
adc
jg
add
inc
dec
rcll
fidivl
mov
leave
inc
int3
out
insl
or
or
fsts
loop
movsb
mov
aam
xchg
jnp
xchg
outsl
lods
add
iret
call
ss
mov
mov
in
and
daa
enter
fsubrp
bound
sar
cmp
xor
pop
pop
clc
dec
cmpsb
ror
mov
nop
mov
xchg
add
lock
push
push
jmp
jp
test
xor
and
xlat
in
lahf
outsl
insl
je
sub
inc
cltd
addb
inc
jne
jle
bound
gs
mov
fsubl
xchg
xchg
out
ret
sar
leave
jp
push
pop
and
pop
jbe
xchg
add
jge
jge
and
xchg
mov
jbe
inc
mov
sub
insl
cmp
xor
pushf
fnstenv
fnstenv
add
in
inc
popa
jecxz
imul
dec
subl
inc
pop
lock
lock
mov
xor
insl
aam
in
loopne
call
xchg
xor
lret
dec
int3
sarb
pop
in
sbb
insl
mov
repnz
sub
popa
push
lret
and
mov
scas
lds
pop
pop
notl
es
and
scas
jnp
push
sbb
idivl
sub
inc
outsl
outsb
repz
push
jne
sbb
sub
pop
cmp
rorb
insb
pop
dec
daa
fcoml
scas
cmp
data16
jne
lea
lock
sbb
mov
push
jle
push
jp
adc
mov
sbb
out
lods
push
push
or
lret
mov
out
scas
cli
daa
divb
add
repnz
xor
mov
lret
push
mov
xchg
pop
jne
pop
sbb
je
xchg
mov
or
jp
ret
fildl
and
push
cmp
cli
out
xor
in
inc
dec
pop
rclb
mov
jo
jnp
aaa
jmp
stos
xchg
sahf
xor
test
cmpb
push
or
pop
inc
sub
add
jge
stos
mov
sub
sahf
jl
ljmp
call
jae
inc
xchg
cmpsl
stos
or
mov
aad
and
aaa
add
pop
mov
imul
mov
sti
or
cli
decb
icebp
pop
mull
insb
push
lea
jb
pop
mov
jmp
into
sub
mov
push
ljmp
test
idivl
push
sbb
add
decl
lret
cmovp
movsb
cmp
js
dec
push
mov
jno
inc
push
dec
rorl
sub
divb
das
jnp
push
das
mov
xor
push
fidivl
xchg
or
lods
int3
fldenv
and
and
pusha
cmp
test
enter
mov
and
iret
pop
sbb
xchg
data16
loope
mov
enter
fists
mov
push
data16
int
fadds
ja
cmc
inc
lret
shrl
icebp
into
test
insl
repnz
sahf
xor
xor
sub
rcll
jmp
xor
and
lock
cmpsl
jmp
cmp
leave
and
mov
cs
in
push
and
push
mov
xor
es
push
lret
arpl
sub
test
cmp
aas
jne
dec
loopne
xchg
orl
mov
jle
cmp
cli
mov
add
mov
fimuls
pusha
and
clc
lock
not
sub
mov
pop
xchg
std
shl
or
dec
jno
push
fcmove
mov
popf
lret
scas
sbb
ret
arpl
test
mov
mov
sbb
push
inc
dec
dec
dec
jg
clc
mov
int3
aas
sbb
xchg
jge
lea
mov
push
out
ja
cmp
or
inc
in
and
and
in
push
inc
dec
sub
shrl
decb
cmpsb
push
in
mov
mov
repz
pop
cli
push
add
and
sub
pop
inc
cld
daa
sti
dec
dec
push
adc
daa
movsb
and
leave
add
inc
mov
mov
in
pop
fs
fdivrl
push
adc
pop
add
or
cmp
adc
mov
hlt
lods
pop
mov
jle
test
sbb
mov
jno
scas
outsb
fstpt
rorl
mov
mov
outsb
mov
and
jb
in
roll
aas
fsubrp
aad
push
add
add
sub
cmpl
or
pusha
test
fsts
sahf
sub
ret
das
enter
sbb
sarl
addr16
ficompl
jbe
jl
aam
push
push
cmc
mov
out
inc
or
stos
sbb
dec
mov
outsl
in
fpatan
fcmovne
leave
aaa
pop
out
pop
mov
or
and
push
push
cmp
and
xorb
icebp
sets
out
pop
and
mov
fwait
aam
pop
test
ja
cmp
push
push
pop
mov
lea
jae
pop
or
jnp
pusha
adc
jbe
fldl
pop
es
pop
cmc
lods
push
mov
out
sbb
insb
jo
jge
inc
dec
pop
enter
pop
outsl
dec
sbb
sub
dec
add
fwait
aaa
shll
imul
xor
mov
cmp
jecxz
push
fistpl
dec
in
mov
dec
cmp
pushf
fucom
pop
fmulp
sub
jbe
add
lods
faddl
xor
clc
scas
or
or
push
or
je
shl
inc
dec
inc
fidivs
lods
jno
nop
fldcw
aas
pop
pushl
dec
ss
cmpsl
addr16
mov
cltd
jns
sbb
mov
xor
mov
mov
shll
pop
jno
popl
push
xlat
cmpsb
add
mov
popl
xchg
xor
fstpl
push
ja
and
xchg
sub
in
aad
stos
mov
cs
std
cmp
sub
mov
stc
mov
adc
int3
aas
cmc
lds
fidivrl
cmpsb
inc
test
mov
xor
sub
fs
mov
xor
inc
daa
push
cmp
mov
das
mov
xor
movsb
data16
sahf
jle
inc
xchg
mov
es
push
pushl
nop
rorl
scas
mov
sbb
dec
mov
int3
out
push
push
inc
pop
aas
push
push
popf
movsb
xchg
ret
dec
sti
and
sbb
lods
or
pop
xlat
dec
ret
push
add
xor
data16
jns
lods
arpl
pop
adc
jmp
stc
xor
sbb
rcl
pop
loope
pop
mov
inc
lahf
jmp
mov
sbb
cld
in
inc
jle
cmp
in
and
aas
mov
sbb
add
js
dec
dec
jmp
shlb
pop
push
xchg
mov
daa
mov
iret
into
xor
sub
pop
xor
cmp
fcomi
addr16
add
cmp
loope
xchg
std
test
rcrb
ja
in
mov
ret
and
das
cld
sbb
and
cmove
decl
or
mov
add
sub
test
ss
push
das
sbb
inc
sub
clc
into
jg
cli
dec
mov
push
bound
imul
stos
cmc
push
aas
shl
xor
testl
iret
mov
fstpl
sub
dec
xor
push
push
mov
push
dec
out
add
xsha256
cmpsb
push
mov
add
mov
push
cmpsb
pop
popf
out
incl
mov
std
inc
cmp
cmp
and
es
dec
sbb
push
repnz
cmpsl
stc
sub
xor
dec
mov
push
pop
fstpl
sbb
or
loop
outsb
push
int
jnp
xchg
add
lods
push
cmp
mov
fistps
fnstenv
or
mov
inc
sub
mov
xchg
or
mov
jle
dec
movsb
je
test
rcrb
cli
test
int3
xchg
cli
push
add
sub
loopne
mov
dec
dec
sub
mov
add
pop
shr
aam
inc
and
pop
push
ss
clc
jecxz
xor
sbb
xor
incl
xor
cmpsb
or
mov
pop
jg
cmp
inc
cmpl
int3
enter
or
sub
xor
cwtl
and
inc
insb
push
std
and
cmpsb
test
xor
stos
cmpsl
aas
inc
and
js
adc
stc
push
and
outsl
nop
int3
cmpsl
xchg
data16
ljmp
mov
test
sub
movsl
in
sub
and
aad
xchg
test
jge
dec
out
mov
out
popl
in
jp
arpl
pushf
daa
ret
scas
fwait
push
dec
xchg
inc
inc
or
rdtsc
sahf
sub
shr
aas
inc
out
fwait
rol
mov
arpl
imul
stc
push
cmp
cltd
sub
minps
cwtl
jle
loopne
xorb
out
jg
outsl
es
mov
mov
clc
sti
test
inc
incb
pop
sbb
stos
jb
into
jbe
shl
jmp
pop
pushf
xor
cmpsb
je
pop
fiaddl
xchg
lods
xor
push
mov
enter
or
in
ret
iret
xchg
arpl
sub
lret
xchg
lock
push
jmp
orl
bound
mov
mov
push
inc
movsb
sahf
fists
jp
shlb
js
xor
adc
adc
dec
jne
sbb
cld
add
bound
pop
arpl
das
push
and
fnstsw
lahf
out
out
mov
push
adc
mov
inc
ret
popf
dec
or
adc
sub
push
in
rorb
in
or
mov
daa
push
add
cltd
outsb
add
fisttpll
pop
xchg
into
pop
test
cmc
fsubrs
cmp
cmp
scas
shlb
ja
ret
add
and
mov
mov
fstpt
cld
push
mov
out
leave
cmp
jge
shl
fnstenv
fdivp
stos
lret
and
sub
add
iret
sbbl
es
das
sub
outsb
test
push
iret
negl
add
dec
ss
test
dec
or
inc
cli
and
adc
sbbb
sbb
cwtl
push
or
fisttps
bound
inc
sbb
inc
adc
or
pushf
inc
inc
inc
push
xchg
cmc
add
add
pop
xchg
cmc
mov
mov
fsubs
push
mov
in
scas
adc
mov
mov
arpl
sbbb
lds
stos
adc
je
pop
popf
xchg
sbb
cmp
pushf
dec
jnp
sub
lods
insl
sbb
test
xor
dec
jae
into
xchg
js
xor
xor
test
loope
mov
sahf
or
xor
les
cmpl
sub
mov
mov
push
shll
jmp
push
scas
xchg
push
movsl
cmp
xchg
xchg
andl
jg
xorl
popf
sbb
popa
or
aad
flds
mov
dec
jl
dec
xchg
sbb
add
je
jae
jmp
cmp
nop
fcoml
push
fwait
mov
and
jl
adc
adc
pop
imul
cmpsl
rcrl
sub
scas
cmpsb
out
das
push
pop
dec
inc
and
mov
push
in
pop
in
pushf
cmpb
xor
jge
test
std
je
pop
push
pop
sbbl
std
jb
push
adc
lret
stos
sti
mov
mov
dec
iret
xchg
add
dec
mov
decl
cmp
sbb
outsb
int
inc
pop
stc
std
xor
push
xchg
adc
lock
fs
ss
call
adc
cmpsl
test
cmpsb
mov
sbb
into
pop
in
jae
mov
pop
stc
je
rcrb
les
mov
xor
push
add
xchg
cmp
add
sbb
xor
lcall
shll
fcoms
push
pop
inc
adc
in
or
or
or
imul
jl
fsts
sub
enter
stos
mov
lods
or
xchg
jge
push
imul
jb
in
in
sbb
arpl
sub
jg
mov
add
jl
adc
jne
sbb
mov
test
adc
fs
repz
push
fs
xchg
mov
adc
fmull
repnz
xorl
ja
out
sbb
cmp
dec
dec
dec
push
inc
jge
inc
out
sub
sub
cld
xor
stos
fisubl
pushf
bound
fs
repz
mov
and
iret
adc
sbb
cmp
shrl
xor
iret
pop
jno
lods
inc
repnz
adc
and
mov
movsb
or
push
fcomps
pop
mov
xor
xchg
in
jp
fistps
rorl
dec
out
push
pop
repnz
mov
mov
idivb
cs
and
sahf
xchg
pop
xor
cmp
movsl
dec
add
je
stos
imul
jb
inc
mull
pop
negb
int
sbb
mov
lods
xchg
nop
dec
lahf
mov
cmp
lock
push
shl
xor
aad
pop
jmp
jmp
mov
or
imul
dec
cli
jbe
shlb
out
stos
out
xchg
lret
jo
mulb
mov
dec
cwtl
and
or
mov
test
int3
mov
fcmovne
pushf
mov
cmc
out
cmp
lds
inc
int
mov
mov
mov
push
lcall
iret
mov
jb
arpl
and
cmp
mov
scas
or
push
mov
sbb
sub
mov
mov
test
nop
sti
cld
mov
pop
jne
sahf
pop
push
and
push
das
mov
mov
mov
imul
cmc
adc
mov
lock
dec
inc
movsl
cmp
std
push
pop
mov
les
popf
jle
rcl
or
sub
jbe
loop
pop
lock
fstpt
push
xchg
enter
mov
cli
mov
ficomps
dec
lahf
sub
and
push
mov
shr
js
dec
jbe
pop
loop
push
in
pop
fcoml
push
cmp
pop
nop
mov
xor
jo
add
mov
lahf
in
xchg
ficoml
jmp
dec
fwait
cwtl
int3
mov
scas
in
adc
mov
and
add
cmp
xchg
pop
hlt
add
xor
mov
add
cmp
mov
mov
push
xchg
lahf
pop
push
and
mov
cli
in
pop
inc
outsb
and
mov
lret
cltd
sub
xor
xchg
push
sbb
shl
dec
push
mov
int
xchg
scas
mov
test
ja
push
mov
and
sbb
fiadds
dec
subb
add
popa
inc
out
and
lahf
fistps
pop
dec
pop
mov
xchg
jne
lds
lds
dec
pop
mov
mov
cmpsl
jo
out
xchg
mov
sub
mov
out
sub
or
ds
push
out
push
mov
and
cmp
and
or
jb
out
add
push
daa
xor
mov
fnstsw
filds
rcll
test
jecxz
mov
inc
sub
dec
adc
arpl
movsl
cli
mov
test
mov
es
fcompl
pop
pop
loope
or
or
jb
arpl
mov
stos
loop
cmp
sbb
outsl
mov
hlt
shrb
cmpsl
sti
xchg
cmp
adc
fildl
adc
add
fwait
jne
out
jg
enter
cmp
pop
jl
sahf
mov
xor
and
js
call
std
push
stos
jmp
mov
loopne
lods
jmp
xchg
push
and
jne
lock
popf
push
mov
inc
dec
push
rorl
add
sub
cmc
inc
addr16
stos
or
push
jns
lea
cmpsl
mov
bound
sahf
xor
sub
and
push
cwtl
cld
xor
lods
xlat
sbb
push
jp
es
mov
mov
pop
add
push
and
arpl
cwtl
loope
fistpl
in
mov
dec
mov
pop
repz
subl
jno
sahf
in
loop
lret
int3
sahf
jg
jnp
jecxz
mov
mov
fisttps
sbb
iret
icebp
xlat
cmp
or
mov
outsb
sub
inc
scas
in
mov
sbb
and
adc
jns
icebp
xchg
adc
adc
and
in
mov
insb
mov
in
jl
fcomps
aam
or
inc
cs
sub
xchg
add
mov
test
mov
mov
push
hlt
movsl
mov
mov
adc
dec
rclb
cwtl
loop
sub
jns
pusha
jbe
mov
ljmp
add
cmp
dec
jecxz
dec
test
in
adc
ja
push
add
lcall
daa
clc
xchg
pop
and
pop
outsl
jne
sub
add
cmpsl
stc
mov
mov
arpl
mov
cmpsl
rclb
mov
pop
mov
adc
cltd
pushf
scas
mov
sub
and
pusha
inc
push
inc
sti
ss
jg
adc
ret
movsb
inc
push
in
pop
add
popa
jecxz
mov
mov
rcll
rdpmc
mov
lock
les
or
xor
xor
out
pushf
dec
pop
xchg
fadds
jo
inc
pusha
adc
negb
int
pop
jbe
mov
or
jns
stos
test
push
sbb
inc
clc
sbb
mov
dec
mov
loop
fs
bndldx
insb
ret
insb
pop
sub
scas
dec
out
dec
dec
jns
or
subl
mov
lock
into
movhps
sub
push
jl
out
jae
jne
cltd
xchg
dec
out
mov
push
pop
mov
sbb
sbb
stos
dec
lret
push
sub
js
jbe
test
xchg
out
cmpsl
aam
mov
push
out
and
mov
cli
mov
inc
insl
test
sub
cmp
jl
xlat
jmp
push
jecxz
scas
in
outsl
aad
dec
or
push
jns
rcl
mov
mov
int
jnp
cmpb
ja
lahf
sub
sti
dec
adc
fmul
in
jb
cmpb
sub
add
push
ljmp
push
xchg
outsb
adc
scas
inc
scas
push
arpl
add
fcoms
sbb
loope
mov
cmp
lods
push
xchg
or
mov
insb
dec
fmuls
cmp
sbb
push
xchg
out
jg
dec
je
ret
andl
mov
mov
pop
or
fidivrl
and
and
leave
ds
loop
fidivs
or
dec
sub
aaa
in
loopne
mov
add
pop
push
pop
lock
subl
cmp
sub
xchg
cmpsl
sub
outsb
mov
and
das
xor
std
sub
pushf
add
xor
dec
xchg
sub
mov
inc
lock
test
repnz
jnp
jb
sub
lret
arpl
mov
in
hlt
sbb
jmp
std
mov
pop
pop
fsubl
iret
and
enter
cmp
xor
push
in
jl
sbb
pushf
movsl
mov
cmp
mov
xchg
inc
icebp
call
shll
enter
pushf
fldenv
sub
and
cld
sti
pushf
pop
mov
jle
pushf
cwtl
loop
xchg
cmc
cmovae
repz
sbb
std
pop
ljmp
cltd
mov
jge
scas
aas
in
and
xchg
lret
pop
xchg
dec
adc
mov
push
jnp
mov
adc
popa
lock
sub
jns
mov
jae
adc
push
cmp
rolb
shufps
adc
mov
aaa
mov
jb
shl
sahf
cld
sbb
insb
call
xor
ljmp
loope
js
push
xor
int
in
int3
aaa
cmpsb
bound
shl
sahf
jge
fidivl
push
jge
cltd
scas
or
or
push
xorb
pop
jl
scas
cltd
iret
mov
leave
ret
ss
das
push
push
insl
not
xchg
in
imul
xlat
pusha
lds
inc
out
add
mov
or
sbb
decl
gs
or
xchg
movl
pop
ljmp
xchg
loope
dec
aam
inc
pop
or
adc
push
xor
jg
pop
insb
cwtl
cmp
xchg
adc
pop
mov
jge
sub
aad
data16
gs
inc
adc
je
push
or
push
mov
or
push
cltd
into
aad
xchg
push
nop
xchg
imul
dec
and
scas
pop
aad
mov
xor
push
jge
sahf
pop
imul
cwtl
push
mov
cmpb
movsl
in
aad
insb
sbb
jnp
call
daa
pop
add
enter
cmp
mov
cmpsb
push
adc
push
sbb
jp
or
rorb
fsub
sbbl
mov
nop
mov
clc
lock
daa
mov
mov
loopne
pushw
sti
mov
or
das
mov
or
aam
or
pop
jae
mov
mov
orl
cli
int
ss
repz
xchg
or
inc
mov
xchg
and
inc
outsl
ljmp
cmp
lret
lret
mov
mov
aas
fildl
scas
or
xchg
add
fucomp
bound
outsb
dec
enter
lret
sub
xchg
or
cld
pop
insl
xlat
xor
out
mov
push
iret
inc
jp
inc
dec
sahf
in
jbe
mov
xlat
les
push
js
add
hlt
stos
cmp
xor
and
fldcw
pusha
xchg
insb
lahf
les
or
out
or
adc
dec
bound
sbb
dec
out
es
xchg
or
and
and
sbb
push
sbb
sbb
mov
and
pop
jecxz
adc
mov
cmp
fdivrl
test
cs
lahf
repnz
mov
idivb
and
inc
lods
scas
addl
pop
and
repz
rcrb
sti
sub
push
je
pop
aad
shlb
jae
adc
js
test
jg
and
popa
ret
add
pop
stos
xchg
test
ret
dec
jnp
insb
xchg
test
int3
adc
inc
mov
cwtl
scas
lock
push
push
push
push
dec
or
jecxz
xchg
mov
sbb
adc
lret
aaa
rcrb
pop
pushf
cltd
jle
fadd
lock
push
mov
push
mov
adc
in
popf
lea
js
shll
push
outsl
jge
cmp
mov
pop
popf
push
inc
int
imul
jo
rcr
outsb
addl
jmp
stc
xchg
sbb
push
xor
ljmp
loop
dec
ja
subb
fwait
and
add
shrl
xchg
dec
jne
pushf
sbb
jmp
dec
loope
lahf
std
inc
les
pop
push
sub
mov
mov
outsb
pusha
inc
mov
sti
hlt
jbe
aas
stos
shrl
pusha
std
jp
mov
fwait
add
mov
add
add
pop
or
add
push
cmp
pop
sbb
mov
sub
and
jne
test
std
push
pop
push
and
test
mov
and
jecxz
jb
out
das
aaa
push
sub
sbb
and
xor
stos
inc
iret
shl
std
repnz
scas
fwait
out
aas
les
add
lret
push
xchg
cmc
cwtl
sub
ja
int3
xchg
jb
pusha
sbb
jmp
cmovb
mov
sub
cmp
popf
lret
sub
sbb
outsl
rcrl
scas
lock
inc
mov
aas
adc
stos
mov
ss
push
in
in
ja
fwait
add
pop
jle
rcr
sbb
xor
cmc
popa
jbe
mov
sarb
popf
data16
jae
mov
sbb
out
adc
loopne
aam
data16
and
xchg
jbe
das
add
and
test
in
pop
fsubrs
push
rcrb
xor
or
aas
cli
inc
repz
jae
icebp
stos
enter
adc
imul
xchg
push
inc
ss
dec
xor
lea
cltd
bound
gs
dec
icebp
mov
stc
push
test
push
fimull
sbb
insb
cmp
cwtl
fwait
cmp
scas
into
repz
out
adc
test
sbb
data16
cltd
dec
popa
mov
jecxz
movsl
pop
imul
inc
and
inc
mov
xchg
inc
test
ljmp
cli
push
xor
jns
mul
ret
inc
sbb
sub
scas
dec
mov
loope
fistpll
jp
pop
mov
in
or
cmp
mov
int
mov
fistpll
cmp
les
shr
mov
xor
cmove
dec
or
fstl
cmp
out
icebp
push
inc
cmc
ljmp
add
mov
push
add
in
dec
jno
xchg
ficomps
sbb
out
cmp
push
out
push
and
cli
ds
hlt
mov
push
cwtl
or
pop
add
pop
std
cmc
outsb
cmp
xchg
cs
push
out
adc
xchg
pop
sbb
and
fwait
bound
cmp
and
cli
adc
xor
mov
in
cmpsl
and
sahf
dec
outsl
pop
add
mov
sub
and
jle
test
sub
sub
pop
test
in
xchg
mov
inc
stc
push
xor
jge
sub
out
dec
xchg
call
nop
jl
in
mov
add
imul
lock
jp
inc
push
push
imul
or
lods
adc
cmp
or
jp
repnz
and
dec
jae
adc
push
push
stos
test
cmp
add
mov
jmp
shll
pop
push
push
add
or
jnp
or
cs
mov
xchg
xor
mov
or
xchg
or
inc
jne
cmp
es
cmp
dec
mov
fwait
out
loopne
sub
cli
jmp
xchg
clc
or
cmp
jg
jno
insb
lret
or
sbb
std
dec
int3
or
out
xor
in
sub
push
cmc
fisttpll
pop
inc
dec
push
adc
repz
lods
mov
ljmp
jmp
shl
sbbb
hlt
fidivrl
xor
lcall
lods
out
fcomps
xchg
sub
pop
mov
or
ljmp
int
sahf
rcrb
es
js
popw
stos
cli
push
fbstp
mov
jp
mov
xchg
std
pop
push
xchg
mov
push
int
lock
cmpsl
jge
xchg
cmp
jmp
push
sub
and
sub
mov
or
mov
stos
lds
pop
aad
iret
dec
ss
loop
jmp
sub
nop
insb
push
push
xor
stos
pop
inc
add
or
stc
sbb
cld
fidivrs
push
notb
mov
out
inc
pop
ss
fisubs
in
leave
pop
xor
jbe
and
rcrb
sahf
mov
xor
shlb
and
es
scas
add
xchg
sub
test
jge
mov
push
pushf
in
ja
and
stos
add
sub
int
cmp
imul
ss
inc
mov
jecxz
test
mov
push
sbb
push
lret
pop
andb
inc
fldl
shrl
stc
sti
dec
aad
and
fistpl
stos
cmc
out
xor
pop
imul
lods
and
cld
add
inc
mov
cmp
sub
movsb
jb
mov
dec
mov
dec
ret
cld
cmp
shl
xor
mov
ret
sarl
insb
nop
push
movsb
mov
xchg
cwtl
test
pop
mov
lret
ds
or
mov
or
dec
insl
sbb
cmp
ss
jo
bndstx
mov
cmpsb
ret
sub
push
out
jg
test
and
test
dec
movsb
and
sbb
leave
scas
testb
aad
iret
stos
repnz
or
xor
leave
sbb
xor
or
lret
scas
mov
scas
movsb
mov
mov
pop
ficoml
daa
pop
out
jge
lds
or
mov
jne
loop
push
ret
mov
fistps
mov
sub
lcall
pop
ret
inc
cmc
in
imul
sub
fs
les
pop
pop
mov
cmpb
jmp
dec
jae
mov
ficoms
pop
insl
mov
aaa
dec
movsb
rcrb
mov
and
imul
cltd
mov
into
jmp
jae
mov
xor
repnz
lcall
push
jo
inc
inc
pop
imul
pop
sarb
inc
adc
jg
jge
subl
lea
adcb
dec
adc
stos
lock
ret
adc
ss
mov
adc
jle
fnsave
xchg
or
loope
inc
repz
popf
mov
scas
adc
mov
ljmp
sub
sub
add
mov
mov
adc
out
les
loopne
dec
shrl
cmp
xor
scas
stc
addr16
int3
hlt
cmpsl
mov
adc
fldcw
add
cmpsl
push
das
leave
lds
jecxz
ret
xchg
lock
lcall
in
lret
pusha
sub
sbb
fsubrl
add
and
mov
sahf
mov
dec
xchg
aaa
insb
test
dec
add
aaa
mov
cld
lock
inc
std
mull
mov
mov
mov
shll
xchg
cs
lcall
ljmp
sbb
push
jecxz
add
push
cmpsb
and
mov
mov
lea
dec
sub
popf
sub
into
adc
les
test
insl
jmp
mov
and
pop
mov
stos
repz
adc
cmpsb
mov
mov
sti
xor
jno
test
shl
mov
jb
xor
dec
gs
add
pusha
fstl
push
stos
mov
mov
jnp
pop
js
jge
in
cli
call
shr
jmp
jo
fnstenv
xlat
cmp
xchg
jno
mov
not
lret
mov
ret
cmp
xor
add
loopne
les
fistpll
ljmp
idivb
mov
nop
dec
pop
jne
and
ja
loop
aas
popf
jecxz
pop
push
fdivs
jae
ja
test
rolb
es
dec
fwait
stos
push
mov
and
out
jo
stc
jmp
inc
bound
rsqrtps
arpl
cmp
mov
imul
cmp
cli
pop
dec
repnz
ss
sub
or
inc
and
push
addr16
mov
fsubl
add
pop
pop
in
adc
pop
in
xchg
mov
mov
pop
daa
leave
nop
xchg
outsl
mov
test
sub
ds
xor
xor
push
ret
inc
int
inc
or
lock
xchg
outsl
jg
fidivrs
clc
mov
je
ret
mov
and
dec
fimull
xor
inc
jbe
test
sbb
push
dec
movb
negl
xlat
outsb
cmpsl
xchg
jns
jl
dec
xchg
mov
and
xchg
add
mov
movsl
out
lret
adc
stos
xlat
or
ds
shrb
outsl
xchg
scas
test
jge
fsubrs
and
adc
sbb
mov
xor
push
mov
cmp
pop
clc
fcoms
js
lea
repnz
bound
pop
or
jle
bound
insb
cmpsb
fsubrp
push
lods
add
lods
lret
jbe
jp
xor
adc
push
add
popf
jmp
mov
xor
xchg
int3
test
popf
push
lods
test
inc
les
cmp
fistps
loopne
inc
vmovups
loopne
jp
add
mov
add
xorl
xchg
int3
inc
loope
je
dec
jne
test
jnp
jge
notl
bnd
push
cltd
add
sub
sbb
xchg
push
cmp
fdivs
pop
xchg
fcomps
insb
push
jb
cltd
cmp
arpl
shl
push
pop
add
sub
pop
lret
hlt
and
dec
inc
stos
jnp
cld
jp
sub
fsts
daa
sub
cmc
dec
cmp
cmp
inc
test
sbb
mov
in
icebp
das
pop
add
sbb
mov
sar
mov
mov
adc
push
pop
ja
lds
push
jne
jb
pop
adc
movb
inc
imul
idivl
jae
or
add
jl
aam
lods
dec
pop
rolb
loop
dec
mov
add
mov
push
and
cmpsb
xchg
cmp
pop
jg
push
test
push
das
mov
dec
push
clc
das
stos
push
pop
pushf
jo
sahf
ret
inc
test
fmull
clc
outsl
jb
iret
dec
xchg
sbb
inc
jg
sar
scas
dec
lret
sahf
jbe
mov
out
mov
je
lahf
sbb
stc
in
xor
or
inc
pop
dec
adc
out
cltd
and
bound
and
arpl
pop
inc
inc
cmp
outsl
bound
mov
dec
das
xchg
fdiv
push
mov
push
jns
jbe
or
in
pop
sub
daa
pop
mov
mov
mov
inc
and
xchg
pop
filds
ss
mov
push
jno
push
roll
stc
es
cmp
inc
cmpsb
cmp
and
cmpl
movsb
cs
rcrl
call
insl
pop
gs
push
or
stos
push
fwait
and
mov
fidivl
sbb
inc
push
mov
inc
pop
fwait
nop
loopne
lea
cs
jl
popf
jmp
inc
pop
jno
push
fnstsw
inc
jne
mov
repnz
jno
mov
push
icebp
push
fldenv
mov
test
mov
inc
fs
sbb
pop
int
cmp
cmp
cmp
js
cld
jle
pop
jge
out
loopne
in
orl
and
daa
mov
mov
out
aad
out
jge
push
cs
stos
and
inc
dec
pop
mov
std
fwait
or
popf
aaa
or
jecxz
cwtl
lahf
cmp
adc
mov
ljmp
rorb
in
pop
or
roll
inc
or
out
negb
test
aam
cld
push
sbb
adc
jecxz
sbb
mov
fistl
andl
push
adc
sbb
das
out
scas
xchg
cmp
ds
or
pop
mov
dec
jg
mov
xor
test
xchg
push
movsb
dec
aad
fnstsw
or
mov
scas
mov
repnz
adc
scas
jno
aad
inc
pop
lcall
inc
hlt
or
insb
testl
imul
sbb
sub
fs
push
cs
pop
xor
aad
cmp
sbb
jno
lcall
in
hlt
cmp
frstor
cmp
in
or
jns
sbb
mov
fisubrs
fisubl
mov
xchg
call
lock
fidivl
ljmp
rorb
add
fs
or
imulb
repz
lahf
adc
inc
shl
adc
or
cltd
adc
xchg
or
or
sbb
jae
or
sub
pop
xchg
lds
jo
or
sub
jbe
movsb
jle
push
shll
test
adc
jle
int3
js
or
mov
jmp
dec
inc
push
inc
mov
push
fnstenv
pop
iret
xchg
mov
test
jbe
outsb
push
sub
mov
sbbl
jge
bound
or
xchg
leave
sub
popf
aam
lods
sub
mov
addr16
mull
cmpsl
xchg
std
sbb
call
fcomi
mov
jecxz
dec
mov
in
or
or
cmc
cmp
sub
shll
or
cmp
cmp
js
jo
lret
cwtl
lea
mov
fmuls
and
pop
inc
enter
outsl
nop
and
dec
test
int3
rolb
and
es
outsl
mov
scas
mov
adc
inc
imul
mov
fs
jecxz
pop
js
pop
push
inc
mov
dec
mov
xorps
adc
jno
nop
jbe
pop
jnp
pusha
push
sets
pop
mov
arpl
pop
xchg
decl
pop
fwait
sub
cmp
gs
add
sub
ljmp
mov
stos
and
pop
ja
mov
dec
jb
mov
aaa
lahf
adc
cmp
cmc
rsm
xchg
popa
pop
test
mov
mov
jns
cwtl
pop
and
cmp
imul
jmp
enter
aad
es
mov
xchg
xchg
and
std
aad
test
adc
mov
cmpsb
xchg
addr16
ljmp
cmp
dec
sbb
movsb
shlb
jbe
scas
test
add
xchg
push
pop
inc
jbe
cmp
sub
jbe
inc
push
add
xchg
cmp
sti
mov
call
stos
movsl
loope
shlb
decl
out
addb
rolb
pop
andb
or
push
mov
das
shlb
push
sub
out
stos
xor
call
in
jge
test
add
mov
jns
out
fcmovnu
cs
lock
mov
mov
mov
mov
imul
fwait
cmpsb
lcall
test
adc
cmpsb
jp
cmp
xor
data16
test
test
sub
sbb
movsb
and
jp
pop
call
mov
sub
popf
and
sub
insb
mov
scas
test
into
mov
dec
pop
rcrl
ret
mov
mov
leave
mov
and
or
jmp
leave
rclb
sub
sub
imul
sub
dec
sub
popf
xlat
push
icebp
sub
adc
cmp
bound
push
push
std
and
shlb
and
stos
mov
xor
popa
sbb
popf
xchg
movsb
and
pushf
sbb
ficomps
aaa
mov
cmc
cmp
jne
sbb
mov
mov
mov
pop
std
insl
pushl
xor
imull
insb
leave
xchg
sub
cs
add
lret
and
ror
push
dec
push
aam
jb
or
cmc
xchg
mov
cli
cld
inc
push
data16
out
loop
lods
cmp
shrl
xchg
dec
pop
or
xchg
pop
jge
ret
cltd
add
hlt
mov
xor
mov
cs
and
lods
inc
xor
mov
repnz
repnz
jnp
xchg
jmp
ror
dec
sub
outsl
lods
or
cltd
sub
adc
jne
inc
dec
dec
add
sbbb
or
mov
dec
imul
out
sbb
jo
jmp
adc
js
cmpsl
jg
inc
sub
pop
outsl
je
aaa
xlat
cwtl
xchg
cmp
fldl
out
pop
sbb
das
push
stos
cmpsl
or
in
sarl
xchg
cmp
inc
jle
mov
push
jp
in
daa
inc
divl
pop
or
sub
pop
mov
insl
push
iret
ds
and
popf
sbb
adc
icebp
movsl
pop
pop
out
mov
xor
xchg
or
out
mov
sahf
out
imul
adc
push
popa
movsb
mov
mov
jmp
movsb
push
ret
add
std
mov
xchg
ljmp
jg
add
xchg
xchg
xor
sbb
mov
iret
or
dec
sub
push
ljmp
fidivrl
cmp
add
and
insb
mov
and
movsl
dec
mov
sub
and
cmp
cwtl
sbb
test
dec
stos
call
add
mov
dec
jl
sub
stos
push
or
fisttps
adc
mov
popf
rorb
or
xor
or
test
jae
fadds
xchg
xchg
cmpsl
into
push
call
push
in
arpl
adc
lcall
jns
mov
mov
insl
adc
push
dec
inc
mov
leave
sub
jne
icebp
lahf
fisttpl
arpl
xchg
ljmp
lea
fdivp
outsb
xor
out
and
lret
pop
outsb
fwait
lahf
pop
movsb
and
stos
inc
sbb
movsl
psraw
outsl
data16
dec
pushf
jg
dec
jns
jns
dec
fmul
subb
sub
in
scas
subl
imul
fwait
pusha
hlt
inc
scas
or
bound
je,pt
pop
add
stc
push
inc
push
pusha
scas
mov
int
push
test
dec
dec
int
and
popa
pop
aas
popf
xchg
dec
push
faddp
test
call
repnz
sbb
dec
jg
adc
scas
addb
scas
mov
cmp
call
jecxz
scas
jno
subb
adc
inc
dec
ja
icebp
pop
dec
lret
orb
movsl
gs
mov
push
sarl
and
xor
jmp
cmp
and
xchg
cmp
mov
mov
mov
mov
je
popf
push
push
hlt
sbb
pusha
popa
int
mov
arpl
std
push
jae
cmp
jnp
mov
and
add
pop
test
cs
test
sarb
lcall
lahf
mov
inc
cwtl
out
in
shl
or
movsl
popf
mov
cmp
mov
test
jl
pusha
adc
pop
mov
test
pop
sub
cmpsl
cmp
cwtl
or
sbb
mov
fisubl
dec
les
mov
test
scas
lret
pop
xchg
push
jl
and
xchg
mov
pusha
dec
pop
mov
xchg
xchg
add
mov
lcall
add
es
fldcw
shll
sbb
mov
ja
push
iret
dec
ja,pn
lret
in
jmp
mulb
sub
xchg
xchg
push
xchg
pop
push
pop
fbld
push
inc
dec
mov
int
out
lea
outsl
cmpsl
mov
push
xchg
xor
inc
jg
push
mov
adc
push
stos
rcrb
rclb
cs
mov
jle
or
add
jnp
lods
sub
adcl
xor
mov
push
mov
les
dec
sub
fs
inc
lds
cmp
sbb
and
scas
mov
xchg
xchg
mov
xor
repnz
jl
mov
ja
sbb
sub
cmp
push
jecxz
test
add
sub
in
and
mov
inc
push
lods
in
adc
cli
push
lret
leave
adc
bound
mov
negb
or
mov
ret
aam
fucomi
popa
loope
out
mov
cmp
addr16
or
ret
fs
sbb
mov
and
ror
sub
dec
bound
scas
leave
sub
dec
add
mov
pushf
test
add
xor
and
insb
lret
scas
ja
out
mov
push
ret
pop
jb
andb
jno
mov
and
and
arpl
and
lock
push
inc
add
dec
or
je
addl
and
dec
inc
dec
aas
lods
pushf
xchg
or
inc
movsl
mov
test
mov
cmpsl
pop
jmp
loope
add
repnz
mov
fwait
xlat
scas
ret
push
in
bswap
sub
pop
cmp
and
mov
mov
add
sub
aam
ret
ret
repz
jl
dec
cmp
or
cmp
ja
mov
scas
mov
jo
mov
out
adc
popa
fld
dec
pushf
in
lahf
mov
int
jl
sub
or
lret
ret
pushf
out
mov
sub
dec
lahf
in
enter
insl
in
mov
inc
inc
and
cmp
add
push
insb
mov
dec
lock
out
clc
jne
ljmp
mov
aam
xchg
movsb
xchg
mov
xchg
stos
cmp
inc
negl
seto
lock
xchg
in
cmpsl
int3
mov
push
adc
jns
in
pop
dec
mov
jno
sbb
and
pop
jl
pop
or
or
mov
subl
pop
shll
xlat
icebp
mov
or
aaa
rorl
push
pop
jmp
test
das
mov
inc
dec
mov
loop
icebp
repnz
dec
lock
ret
xor
insl
cmp
pop
cmp
je
mov
aas
fldcw
imul
sub
cmc
xor
out
sub
push
add
sarl
pop
inc
xchg
roll
mov
sarb
and
loopne
daa
pop
imul
xchg
xor
pop
outsl
and
xchg
inc
jnp
push
ljmp
mov
shl
outsb
outsl
inc
lcall
dec
rcr
lods
push
lcall
push
insl
sbb
mov
lahf
insl
xchg
jp,pt
and
mov
and
jb
pop
pop
rcrl
xorl
decb
sarl
lds
mov
dec
stos
mov
push
loopne
dec
xchg
in
popl
and
dec
add
and
pop
sub
xchg
call
mov
pushf
sub
cmp
adc
sbbb
push
push
mov
fnstenv
hlt
arpl
cwtl
pop
push
fnstsw
pop
xchg
mov
ljmp
xchg
push
outsl
loop
xchg
fadd
inc
dec
out
pop
movsl
xor
xchg
jns
jg
xchg
jmp
dec
xchg
or
orb
xchg
test
cli
clc
out
mov
adc
push
scas
and
inc
and
jne
out
jp
mov
icebp
mov
cmpb
mov
xchg
mov
ds
push
jns
das
cwtl
leave
mov
xor
and
loopne
and
das
cmp
jbe
cmp
push
dec
mov
sarb
lods
sub
aaa
call
filds
pusha
ret
fsubrp
xchg
adc
sub
cli
mov
loope
incb
test
fwait
sub
mov
cmpsl
ds
mov
jge
inc
mov
cld
jb
fsubrs
mov
cwtl
scas
mov
sahf
sti
jg
xor
mov
jno
ja
mov
add
ss
cs
push
fwait
sbb
and
sbb
cmpb
push
jnp
bound
mov
enter
push
push
sbb
mov
clc
mov
xor
and
ret
call
loopne
adc
pop
fsubl
lahf
cmc
mov
lret
div
push
fstps
in
inc
mov
or
push
jg
xchg
mov
dec
aaa
leave
cmp
inc
push
jecxz,pn
cmp
push
insb
cwtl
cmpl
jns
mov
les
lcall
push
push
movq
mov
adc
push
mov
test
sarl
sbb
rorb
aas
test
cmp
xadd
stos
mov
in
dec
pop
scas
cmp
adcb
xlat
das
mov
addr16
rclb
or
adcl
arpl
repz
jp
mov
aaa
mov
and
pushf
jecxz
add
fsts
mov
adc
sbb
xor
test
or
lret
cmp
cmc
dec
push
loope
rcl
into
pop
stos
int3
out
sub
xlat
sub
pop
push
repz
xchg
imul
mov
fcoms
cld
xor
movsl
jl
shl
sub
jbe
mov
test
nop
and
jmp
fcomps
movsl
lcall
cltd
adc
outsl
sbbl
movsb
xchg
subb
shll
stos
inc
jae
dec
mov
sbb
leave
mov
fistpl
ret
inc
cltd
insl
and
mov
adc
aad
imul
mov
test
or
inc
sahf
jecxz
test
mov
add
jnp
or
mov
aam
clc
adcb
shrl
in
fcomp
sahf
or
xor
xchg
mov
mov
xchg
movsb
sahf
push
in
dec
or
add
mov
gs
iret
test
loope
inc
cmp
lods
and
pop
mov
and
push
xor
fucom
mov
fdivrl
jnp
inc
and
xchg
das
dec
mov
lods
clc
ret
std
mov
inc
cmp
orl
add
dec
repz
in
ret
daa
mov
cmc
push
cmc
iret
sahf
loopne
stos
xchg
jno,pn
stos
sub
mov
pop
lcall
dec
and
cmp
sbb
or
sub
cmp
and
add
jne
mov
int3
lock
xchg
xor
mov
and
imul
cltd
add
adc
xchg
aam
sbb
je
cmp
xor
mov
or
outsb
and
fistpll
js
adc
jmp
repz
leave
leave
in
push
xor
negb
iret
sub
andl
mov
push
push
mov
aad
lcall
sub
fists
loope
cltd
add
jg
and
push
inc
rorb
jmp
sub
and
sbb
stos
cmp
jp
mov
mov
fsts
and
imull
and
sbb
es
stc
movsb
add
cmp
js
pop
jg
jmp
call
dec
sub
out
pop
ret
jnp
xor
sbb
push
aad
xor
fmuls
push
mov
jne
or
aad
cltd
mov
pop
aad
cmp
add
hlt
aad
or
dec
fisubrs
xor
movsb
jno
push
mov
mov
call
out
cmpsb
addr16
cmp
loop
or
out
addr16
movsb
outsl
fwait
push
sti
mov
mov
dec
dec
decl
xor
mov
push
fdecstp
rclb
rcll
push
push
aas
imul
out
push
imul
push
cmp
mov
inc
push
mov
fnstenv
xchg
ja
adc
dec
insb
data16
xchg
lds
leave
jb
enter
scas
fiaddl
pop
and
xchg
aad
adc
fdiv
pop
loope
cmp
fstps
lds
mov
cs
cmp
in
mov
ja
mov
mov
jo
ret
ret
mov
jg
add
sub
push
mov
loop
lods
push
sbb
adc
add
daa
and
push
idivb
out
rorl
adc
add
or
call
mov
pusha
dec
inc
add
lods
and
stos
stos
cld
ret
cmp
jne
icebp
jl
dec
mov
add
dec
out
inc
or
cmp
leave
jmp
sbb
dec
mov
addr16
or
sub
or
mov
faddl
movsl
mov
cmpl
imul
adc
loopne
lcall
mov
lock
sbb
add
int3
cmp
sbb
aas
adc
test
jge
push
out
xor
shrb
loope
mov
add
aam
xlat
jecxz
std
sub
iret
test
add
test
test
dec
icebp
js
lcall
inc
je
mov
xchg
js
testb
clc
out
jo
js
in
pop
inc
xchg
shll
and
adc
les
mov
jne
fs
push
data16
sub
fsts
push
cwtl
mov
mov
dec
sub
pop
js
jo
outsl
mov
cmc
repz
in
add
sbb
cmp
cmp
mov
dec
mov
inc
pop
movsl
lds
ljmp
cmpsl
jg
rcrb
test
mov
fistpl
jp
xor
cli
clc
mov
add
xchg
jnp,pt
xchg
lret
xchg
jge
or
mov
lods
mov
sbb
lods
cmp
ret
fcmove
lcall
std
jns
inc
mov
mov
mov
and
sbb
xor
dec
or
jo
add
jp
ljmp
adc
inc
mov
jnp
sbb
mov
nop
lock
ss
in
sub
imul
pop
shl
adc
popf
push
sahf
int3
cmp
ret
jbe
lods
jnp
repnz
sbb
mov
ss
jge
sahf
int
mov
loopne
xor
lcall
cli
insb
mov
inc
popf
sub
xchg
xchg
fcmovbe
ja
or
push
std
jmp
mov
mov
test
or
sub
xor
and
lea
inc
clc
and
mov
jno
cmp
mov
in
or
push
shl
adc
cmpsb
orl
insl
lcall
ss
aaa
and
loopne
ljmp
fcomp
jnp
stos
nop
mov
adc
cmp
mov
add
shlb
int3
mov
in
dec
cmp
test
les
sbb
cld
adc
fcompl
sarb
sub
mov
sarb
mov
pop
push
out
subl
cmp
into
popf
shlb
das
push
out
rorl
lods
inc
jp
movsb
adc
cld
xchg
pushf
mov
lret
sub
test
aaa
and
pop
lcall
push
loope
inc
jb
repnz
inc
pop
add
loop
stos
inc
cmp
arpl
pop
lahf
inc
dec
test
pusha
push
stos
xchg
or
in
dec
in
cmc
in
jge
add
insb
xchg
cmp
and
pusha
pop
movlhps
dec
inc
out
test
pop
mov
rcrb
mov
in
jl
cmp
shll
sub
jmp
jno
sbbl
rclb
inc
out
fcomps
fadds
inc
fsubs
stc
fwait
dec
xor
mov
and
mov
and
push
loop
or
jmp
push
dec
hlt
jns
mov
ret
jg
mov
ljmp
cltd
shl
pop
inc
imul
lcall
dec
sub
push
js
sub
jl
pop
repnz
out
out
adc
in
cmpsl
idivl
in
sbb
mov
cmpsb
mov
pop
jns
sub
push
xchg
jne
leave
fidivrl
in
stos
ficoms
or
add
sahf
aam
adc
adc
test
roll
test
cmpsl
shll
sbb
xchg
xor
lods
xor
mov
jo
pop
fwait
push
xchg
dec
or
stc
dec
jns
cltd
clc
ja
mov
xor
int3
mov
pushf
lods
mov
outsb
test
adc
dec
in
add
xor
pop
xor
add
mov
jns
shrl
mov
mov
push
xchg
imul
push
cmp
jl
mov
adc
push
or
dec
dec
mov
dec
sbb
test
sbb
xchg
testb
pop
xor
out
fmuls
dec
or
int3
cmp
fwait
lahf
sub
fsts
fcmove
push
les
xchg
lock
dec
push
imul
fmuls
gs
add
lods
cltd
je
xor
mov
push
dec
sbb
push
shrl
aad
shll
repz
mov
mov
lret
nop
pop
mov
jmp
test
xor
xchg
jge
xor
xor
movsb
cmpl
inc
push
push
xor
les
loop
rcr
addr16
pop
mov
dec
in
mov
add
inc
xchg
sbb
sbbl
mov
pop
in
xchg
push
cmp
pop
jl
cwtl
sbb
fildl
testb
aas
mov
orl
jno
shr
std
adc
mov
adc
ret
mov
inc
push
imul
ss
sbb
mov
decl
mov
nop
dec
mov
jbe
insl
xlat
push
jmp
or
jae
inc
pop
sbb
jg
negl
and
imul
xor
sbb
movsb
dec
sub
stc
fadds
adc
aas
ret
jp
test
pop
mov
lea
in
cmc
out
repnz
arpl
dec
dec
pop
insb
xchg
or
ret
lods
addr16
mov
mov
pop
push
pop
xchg
lret
mov
std
nop
jle
pusha
faddl
or
jno
jecxz
pusha
sbb
mov
rcll
inc
or
sub
push
rclb
fsts
test
shlb
cmp
jp
ret
mov
jecxz
cmp
ds
xchg
jne
mov
push
mov
dec
movsb
bound
pusha
dec
fsubr
mov
sub
mov
push
sub
icebp
je
ret
je
sub
jns
jnp
jae
pop
jmp
je
pop
inc
dec
sbb
ret
mov
xchg
jns
cmpl
inc
mov
add
outsl
inc
pop
push
fidivs
mov
adc
stc
mov
pop
jmp
fldenv
sbb
sbbl
sub
inc
lods
push
movsb
inc
jecxz
mov
sbb
jae
popa
stos
sti
scas
or
fdivrs
jp
dec
testb
lock
mov
xchg
mov
mov
and
add
test
inc
push
lock
lret
out
pop
into
sbb
iret
xchg
loop
jmp
mov
jb
push
jbe
inc
mov
inc
and
dec
dec
clc
scas
jl
in
imul
test
jne
dec
lret
mov
cltd
sar
test
mov
cmp
and
jae
xchg
pop
inc
xchg
xchg
ss
cmp
bound
mov
mov
aas
adc
outsl
sbb
xor
inc
test
push
mov
xchg
ret
push
shll
mov
lods
out
jns
mov
arpl
dec
mov
lahf
nop
push
outsl
mov
dec
sub
adc
xor
fwait
adc
filds
pop
push
addb
mov
stc
inc
into
jg
mov
push
pop
xchg
daa
stos
jl
sub
addb
mov
mov
mov
in
inc
inc
data16
and
les
js
fcompl
mov
pop
mov
lret
out
loop
mov
mov
pop
xlat
mov
sarl
adcb
inc
into
jmp
adc
mov
loopne
lcall
jo
lea
inc
ja
mov
mov
add
lahf
cli
sub
jge
mov
mov
and
xchg
jae
ss
jbe
in
xchg
inc
pop
nop
es
add
dec
jno
mov
jl
fsubr
stos
xor
inc
in
xor
cmpsl
sbb
xor
sbb
mov
stos
and
daa
jl
bound
push
and
std
jno
add
add
and
mov
adc
inc
test
cwtl
mov
or
out
add
addr16
jnp
add
fisttpll
jo
mov
outsb
dec
in
fisttpl
xor
call
out
leave
leave
pop
mov
cld
jbe
sti
mov
ret
imul
in
movsb
ss
int3
pop
xchg
leave
pop
aaa
inc
sub
xor
xor
sub
int
clc
cmp
or
leave
call
imul
aad
cmc
idivb
mov
add
rorb
in
aaa
xchg
mov
inc
ds
fucomp
push
adc
daa
sub
sahf
pop
cmpb
inc
js
mov
in
popa
push
inc
movsb
arpl
jg
add
jecxz
mov
andb
cli
dec
or
pop
clc
mov
in
sub
rolb
iret
outsb
cli
sbb
popa
ljmp
jg
or
sbb
ja
mov
dec
std
imul
push
inc
shll
data16
in
movsl
fstpl
mov
jecxz
sub
add
jmp
notl
jb
ss
cmp
or
outsb
in
paddusw
cwtl
sahf
fs
cld
pop
aaa
mov
data16
push
popa
mov
sub
imul
aad
pop
dec
xchg
daa
test
lret
inc
mov
sub
hlt
inc
cmpsb
sbb
push
scas
sub
dec
insb
adc
xchg
sets
test
int3
sbb
mov
loopne
push
adc
test
xor
jae
push
into
test
bound
and
cli
mov
jnp
jge
into
inc
data16
movsb
es
ret
js
jmp
ret
mov
imul
and
test
cmp
lcall
pop
or
dec
jge
mov
inc
mov
xor
in
or
es
aad
xlat
sahf
xor
out
sbb
mov
adc
push
iret
xchg
cmp
xor
inc
sub
cmc
cwtl
sarb
add
daa
call
out
fisubs
fisubrs
xchg
fldl
loop
jns
pop
mov
in
jg
mov
mov
out
adc
decb
addr16
jne
dec
out
stos
mov
cmpsl
test
aas
and
cltd
hlt
dec
add
imul
adc
jmp
and
mov
and
xor
lock
and
fistl
jns
dec
jecxz
inc
mov
jb
xchg
pop
and
jle
mov
and
data16
fwait
movsb
sbb
pop
push
popf
jno
jle
shlb
rclb
je
loop
mov
mov
lret
mov
js
arpl
loope
adcb
or
fwait
lcall
or
xchg
xchg
add
add
sbb
outsl
sbb
mov
shlb
xlat
popf
icebp
shl
inc
mov
push
push
cmp
test
push
loope
mov
daa
inc
sub
ret
nop
out
nop
add
add
sub
mov
ljmp
dec
and
icebp
repnz
jge
xchg
mov
adc
adc
mov
dec
jo
xor
ja
into
and
push
inc
adc
filds
out
test
rclb
dec
push
stos
lret
mov
sub
les
lds
jne
xor
in
push
out
insb
lcall
sbb
xchg
int3
lret
push
mov
adc
push
test
aad
add
fdivrs
lods
add
and
test
jp
test
or
mov
dec
call
mov
xlat
gs
clc
fldl
or
jno
sahf
call
jge
pop
movsl
pop
jp
inc
adc
testl
lods
sbb
push
filds
cwtl
push
jno
negl
sbb
or
xlat
jo
cmpsb
addr16
sahf
cmc
fs
dec
pop
icebp
xorl
xor
jmp
xor
test
cs
cmp
fstpl
imul
fsub
mov
xchg
mov
xchg
test
jg
leave
adc
mov
lret
push
mov
and
xchg
cmp
stc
jg
out
into
mov
xchg
cmc
xor
out
pushf
arpl
pop
fdivrs
int
fcompl
lds
sub
daa
jge
sub
push
xchg
fcoms
hlt
cmp
leave
fmulp
sub
and
cmpxchg
push
or
int
decl
addr16
pop
mov
cmp
jp
mov
sub
mov
je
mov
jl
fstpl
incb
test
rcl
loope
jnp
iret
ds
das
cwtl
int3
loope
xor
nop
mov
lods
popa
xchg
aam
adc
les
enter
xor
inc
cmp
ret
out
fidivrl
add
lock
jecxz
adc
fwait
dec
sub
das
mov
shrl
je
out
mov
ret
mov
jnp
add
cmp
aaa
push
pop
arpl
or
test
or
rorb
jle
insl
dec
fldenv
mov
cmp
cld
lcall
xchg
loopne
iret
add
sub
jbe
fdivrs
add
cli
pushf
cmp
mov
shlb
js
divps
adc
sarl
push
sub
mov
testl
ret
add
mov
xchg
faddp
pop
cmpsb
cmp
movsb
mov
cmc
cmpsb
cltd
cmc
lock
sbb
xchg
cmp
jmp
xor
std
mov
mov
sbb
inc
sbb
mov
add
repnz
lret
repnz
insl
sahf
xor
push
add
dec
mov
xchg
push
scas
push
aaa
mov
aas
sub
cmpsb
mov
add
mov
mov
sub
xchg
jo
mov
test
jmp
inc
mov
adc
fmulp
cmc
and
push
data16
orb
jecxz
outsb
xchg
inc
dec
pop
out
push
push
sti
xchg
inc
cmp
mov
ljmp
das
mov
mov
adc
mov
test
shlb
sub
add
rol
and
mov
ss
lea
pop
lods
stos
sbb
stos
jb
pusha
mov
cli
loopne
xchg
cmp
push
lock
mov
dec
outsb
mov
lret
push
mov
mov
jge
jl
fsubp
mov
cli
dec
adc
outsb
cltd
xchg
loop
mov
mov
and
pop
xchg
int
in
testl
shl
pop
test
dec
pop
pop
dec
xchg
jl
stos
pusha
clc
cmp
dec
sti
push
mov
jmp
mov
jo
pop
jnp
sbb
std
dec
mov
outsl
fldt
xor
mov
ret
jns
inc
gs
scas
mov
mov
cmpsl
sub
push
icebp
pop
mov
mov
pop
fisttpl
cwtl
enter
mov
movsb
adc
leave
sti
push
fdiv
cmp
aaa
out
aas
shll
loope
mov
gs
ds
pop
and
jle
lahf
das
adc
mov
sub
stos
aad
xchg
test
imul
push
dec
or
pop
nop
ret
stos
rcrl
stos
lds
pop
jae
bound
out
ret
mov
push
ljmp
popa
cmpsb
cwtl
jmp
bnd
stos
mov
mov
sub
cmp
inc
addr16
lods
push
jecxz
dec
mov
mov
outsb
shrb
fcmovb
and
mov
pop
pop
sub
inc
push
inc
pushf
mov
xchg
jl
ja
cmp
adc
in
pop
pop
adc
dec
sarb
dec
jl
inc
int3
aas
xchg
or
les
or
outsb
inc
cmpsb
out
or
out
je
and
cld
pop
fdivp
in
dec
push
push
and
inc
cmp
lods
sahf
mov
idivb
das
cmp
gs
lahf
and
testb
test
cltd
adc
add
movsl
jno
jnp
jp
mov
js
movsb
repnz
adc
jmp
es
or
mov
add
jnp
push
daa
push
imul
ss
dec
and
push
lret
jns
call
sbb
dec
push
cmpsl
and
js
or
rcr
orl
dec
mov
or
lds
std
dec
cmp
das
int3
jns
jno
stos
xchg
add
fwait
mov
daa
iret
in
push
adc
mov
push
sub
insl
int3
lret
or
xchg
jl
fidivrl
adc
xor
xor
push
fildl
mov
sub
xchg
nop
outsb
jecxz
mov
adc
adc
inc
sbbb
frstor
out
lds
push
inc
ret
test
inc
je
xchg
in
mov
jb
or
jp
sub
gs
dec
sbb
enter
mov
daa
aaa
xchg
jmp
and
pushf
mov
pop
cmp
jecxz
inc
callw
cwtl
and
mov
jecxz
and
fcomps
loop
or
cli
sbb
jmp
sub
inc
inc
fildl
mov
ljmp
push
or
mov
fwait
popa
rol
bnd
aaa
cmp
gs
jno
mov
push
push
aad
jb
sub
fdivl
clc
dec
pop
jae
nop
out
iret
sub
addr16
data16
pushf
and
lock
add
dec
movsl
add
inc
cmpsb
pushf
dec
test
cmpl
lods
repnz
xchg
cmc
loope
cwtl
into
repz
popa
cld
and
hlt
pop
pushf
fucomi
and
cmpsl
push
imul
push
push
ljmp
mov
mov
cli
mov
lret
cmc
cmp
inc
mov
jecxz
outsb
dec
push
add
in
lock
inc
sub
call
jecxz
ss
jae
dec
jl
inc
adc
add
or
mov
aam
fdivrs
xlat
inc
dec
lods
test
dec
test
mov
aam
cmp
jle
dec
cmp
mov
scas
movl
inc
aas
mov
cmc
jge
mov
lahf
and
push
push
and
cmpsl
ja
loop
or
sbbb
cmp
push
dec
inc
int
fbstp
sti
ja
cmc
adc
xor
xchg
ret
sub
sbb
push
hlt
pop
sub
cmp
mov
in
outsb
xlat
mov
test
fbstp
iret
enter
jle
scas
and
repz
sti
test
leave
xchg
stos
mov
mov
dec
mov
and
sti
xchg
jae
inc
repz
jge
mov
xchg
rorl
mov
xchg
popa
inc
push
mov
fs
sahf
icebp
jnp
ljmp
mull
sbb
pushf
mov
jl
xorl
xor
add
mov
mov
hlt
in
call
mov
inc
loope
mov
scas
fsubl
dec
stc
xor
push
pop
xchg
cmp
stc
mov
repz
ret
mov
cs
push
mov
fisttpl
test
shrl
popf
jmp
inc
imul
push
unpckhps
negb
hlt
push
inc
and
mov
out
aaa
scas
fstpl
pop
lea
adc
lock
inc
fidivl
push
push
add
iret
sub
popa
pop
jnp
mov
pop
xor
pop
insl
cmp
fldlg2
or
int
inc
das
push
lock
xor
je
push
dec
sahf
mov
mov
inc
test
xor
pop
xor
mov
push
push
xchg
jmp
mov
mov
aaa
xor
xchg
and
or
push
jl
fimuls
and
add
loope
jne
xor
xchg
cltd
fidivs
in
push
xor
call
add
add
sub
scas
sbbb
arpl
lock
mov
scas
jg
pop
xchg
hlt
insb
adc
adc
jg
fidivs
popf
jbe
jns
push
jns
insl
je
jg
dec
inc
cwtl
testb
lret
repz
inc
ds
scas
popa
jg
cltd
push
test
rcr
hlt
imul
dec
je
push
and
call
xor
enter
ret
imul
outsb
sub
push
pushf
or
xchg
call
xor
xchg
mov
mov
out
addr16
inc
daa
ja
aad
cwtl
or
arpl
pop
xor
pop
pop
mov
adc
add
nop
aad
jne
inc
push
fwait
cmp
adc
js
sbb
imulb
dec
dec
add
imul
incl
mov
or
jne
jge
pop
or
insb
outsl
popf
sub
adc
cmp
sub
cltd
jb
jmp
leave
cmp
push
and
xchg
or
cmpsl
xchg
outsb
stos
cli
mov
cwtl
and
stos
out
xchg
lcall
lds
or
xor
sub
jle
push
gs
mov
movsb
insl
mov
and
into
and
pop
test
ja
bndldx
mov
xorl
arpl
adc
shll
mov
sub
push
jge
fimull
in
sub
daa
xor
push
shll
mov
push
sub
insb
xor
xor
cmc
sub
cmc
test
movhps
xlat
sub
je
mov
lock
idiv
add
xchg
pusha
cmpsb
repnz
inc
icebp
movsl
mov
adc
mov
incl
sub
and
movsb
dec
mov
daa
xchg
mov
pop
rorb
dec
adc
iret
pushf
pop
hlt
pop
jle
mov
negb
cmp
xor
jne
xor
rclb
xchg
xor
jnp
aam
jmp
and
mov
mov
push
cltd
mov
cmc
cmp
xorl
push
sbb
mov
mov
mov
xchg
cmpb
pop
and
scas
test
in
push
mov
outsb
test
push
dec
dec
add
lret
pop
cmp
dec
cli
sbb
shll
push
test
imul
popa
test
js
adc
sti
out
and
test
sub
xchg
cmp
lock
sub
ficoms
cs
sbb
mov
daa
sbb
xor
addr16
push
in
xchg
ss
pop
push
pop
daa
pop
enter
loop
das
pusha
fimull
add
cmp
insl
cmp
xor
sub
loopne
sbbb
aam
mov
fstl
addr16
lods
jmp
imul
push
inc
ljmp
lds
cmp
imul
mov
movsl
loop
loopne
pop
aaa
sbb
in
mov
xor
push
and
scas
scas
dec
loopne
add
add
dec
pop
jb
mov
mov
cmp
inc
fisttpll
mov
repnz
in
fisubl
cmc
pop
scas
xchg
inc
mov
lcall
xchg
mov
cmp
inc
xchg
jne
rorb
dec
leave
mov
jo
mov
faddl
ret
cmp
bound
test
mov
sub
mov
sub
mov
rcrl
xchg
xor
arpl
ja
lds
jb
mov
pop
jno
sbb
mov
add
out
std
mov
cs
xchg
lcall
dec
gs
loopne
pop
ds
cs
mov
in
mov
mov
mov
into
mov
lret
jo
mov
scas
shrb
in
std
sbb
sahf
dec
sub
jnp
in
cld
hlt
ss
shll
pusha
cmp
inc
int
add
xor
dec
sbb
cwtl
lret
ja
xor
jmp
mov
mov
stos
cmpsl
arpl
ss
xor
xchg
pop
jno
in
mov
sub
das
imul
cmp
jae
xchg
or
daa
inc
icebp
adc
jmp
xchg
xlat
dec
mov
push
into
jg
inc
aaa
mov
dec
ljmp
and
cltd
mov
rorb
push
es
push
mov
pop
movsb
lea
data16
and
inc
mov
imul
jmp
sub
gs
mov
fucomi
sbb
jecxz
cmc
pop
mov
test
ja
jmp
repz
or
or
xchg
ret
mov
or
cmp
repz
adc
or
in
push
inc
jo
mov
dec
xchg
fwait
mov
fistpl
inc
pop
gs
inc
xor
mov
jp
cmp
imul
adc
icebp
dec
in
add
dec
cmp
jmp
xor
xchg
es
inc
mov
and
jecxz
fwait
scas
repz
inc
mov
icebp
bound
or
jmp
cmp
dec
jns
or
outsl
jp
inc
and
add
insb
jno
cmp
das
rcr
pop
fdivrp
xchg
adc
fidivrl
insb
int3
cld
ss
push
out
jmp
push
mov
mov
dec
push
pop
daa
loope
lret
pop
push
pop
cltd
jge
mov
test
add
icebp
xchg
xchg
fisubrl
arpl
jbe
lds
or
daa
dec
pop
lock
xchg
fisttps
pop
ljmp
fwait
push
movl
divb
fcompl
inc
pop
push
adc
jne
mov
pop
cwtl
xchg
les
and
fldl
push
or
fsubs
jmp
xchg
movsl
sbb
push
jmp
std
mov
pusha
jne
and
sub
jp
inc
lret
popf
repz
cmp
pushf
in
test
mov
sbb
nop
incb
mov
dec
nop
filds
push
int3
push
sbb
hlt
dec
mov
push
xchg
call
jmp
and
add
incl
ljmp
cmpsb
lcall
xchg
xor
mov
dec
xor
insb
sbb
and
mov
mov
fucomp
push
or
fcoml
fs
mov
mov
mov
test
adc
mov
cli
mov
xchg
sub
in
shll
pop
cmp
lods
add
out
popf
sub
leave
add
cwtl
ds
cmp
scas
mov
inc
cmpsb
lret
adc
fidivrl
xchg
insb
dec
pop
pop
test
xchg
cmpsl
stc
mov
ss
mov
mov
dec
jecxz
fcomps
cmpsb
daa
mov
xlat
aas
pop
pushf
push
cmc
adc
pop
mov
hlt
adc
adc
cltd
jmp
aam
movsl
repnz
lret
or
sub
pop
add
roll
imul
sub
test
and
xchg
leave
mov
lods
push
add
pop
cs
int
dec
dec
cmp
push
jo
aas
rcrb
cmp
in
xchg
mov
sbb
xchg
aaa
inc
ja
repnz
xchg
pop
cmpsb
xchg
adc
test
jb
mov
mov
movsb
and
scas
rorl
dec
push
mov
ret
scas
popf
gs
in
adc
pushf
push
shlb
pop
nop
pushf
cmc
sbbl
aam
mov
leave
mov
and
mov
aad
mov
push
mov
cltd
out
rcrb
ss
ret
mov
lret
call
mov
lods
int3
xchg
scas
xchg
cmp
jae
inc
insl
out
outsb
push
loope
cmp
pop
int
pushf
mov
mov
in
mov
cmc
pusha
add
daa
inc
out
cmpsb
out
mov
aad
fwait
sub
xchg
xchg
add
nop
push
push
loopne
sub
arpl
dec
cli
add
sti
mov
fs
push
fidivrl
cmp
cld
xor
cmp
sbb
das
push
aaa
scas
dec
or
iret
outsl
cmp
mov
lret
cmpsb
insl
inc
xor
inc
jne
addb
subb
icebp
js
sbb
add
add
imul
pop
nop
and
in
fcoms
aam
push
fs
or
mov
mov
in
stc
xor
pop
mov
inc
mov
cmp
adc
test
push
daa
shll
lret
mov
add
xor
dec
sbb
xchg
push
push
xchg
jp
dec
cmp
dec
andl
jg
push
aaa
lea
gs
shl
and
sub
sbb
mov
or
mov
mov
or
mov
or
clc
out
mov
shlb
pop
mov
adc
ja
lahf
daa
add
outsl
xor
cmp
movsb
jmp
or
pop
and
pop
loop
frstor
mov
pop
movsb
lcall
mov
rclb
mov
mov
or
pop
vfnmadd231ps
movsb
sbbl
adc
dec
sarb
loop
sbb
xchg
pop
mov
and
xchg
mov
rorb
mov
sub
das
add
cltd
push
fdivrp
cwtl
mov
das
and
mov
cmp
adc
mov
addl
cmpsb
mov
xor
mov
pop
mov
je
inc
sbb
les
in
in
imul
rolb
mov
push
rclb
mov
daa
inc
cmpsb
bound
mov
gs
mov
popf
cmp
adc
bnd
or
lret
rorl
fadds
stos
dec
sti
movsl
inc
xchg
loope
clc
or
dec
callw
mov
out
leave
xor
cmp
xchg
cmp
lods
pop
dec
lds
mov
imul
test
cmp
lods
mov
inc
mov
es
ds
in
xchg
ficoms
cmp
and
jns
fmuls
mov
add
dec
add
jbe
cmp
mulb
ret
dec
sbb
call
inc
xchg
xchg
stc
insl
lods
lret
sub
add
into
shll
dec
and
jno
or
aaa
mov
arpl
xchg
push
cmpsb
pop
cmpl
cmp
in
les
aas
cmc
xor
cmp
lret
dec
mov
push
jg
inc
cmp
int
fimuls
fwait
je
xor
adc
pop
cmp
pop
or
cvttps2pi
mov
orb
roll
stc
loope
std
sub
lea
xor
jle
imul
loopne
sub
out
or
jmp
packsswb
add
jge
ret
mov
mov
sub
push
mov
cld
data16
or
sahf
push
dec
sbb
dec
scas
xchg
push
insb
call
jno
loop
xor
and
xor
mov
mov
addr16
pushf
mov
fmuls
movsb
lahf
cli
aad
adc
popa
lods
mov
scas
aas
ja
lock
mov
push
sbb
push
cmp
cmpsl
jae
scas
enter
outsb
mov
mov
fwait
and
scas
xor
xchg
pop
mov
in
adc
pop
mov
mov
idivb
mov
adc
and
mov
sub
bound
popf
in
jnp
ret
and
push
mov
inc
scas
lcall
aam
loope
fnstcw
hlt
add
loopne
mov
pop
test
jae
dec
sarl
aam
lcall
xchg
jmp
xchg
add
inc
iret
cltd
push
mov
int
sub
push
jecxz
sbb
xchg
mov
scas
sub
rorb
xchg
in
stos
jns
sbb
xor
push
sub
ret
add
mov
imul
jns
scas
popa
into
sbb
das
js
ljmp
insb
cwtl
mov
out
and
xor
into
or
xchg
or
mov
xor
fucomp
inc
aad
jnp
sub
sbb
negl
test
and
inc
iret
mov
shr
lods
push
or
call
stos
sbb
pop
add
adc
lock
add
dec
rcrb
mov
out
pop
push
cmp
pusha
fsub
push
cli
xor
mov
jns
adc
int3
dec
out
in
fistpll
cwtl
loopne
ds
xchg
push
insl
and
out
notl
sti
lret
pop
les
ret
lock
mov
divb
dec
das
int3
and
dec
test
jmp
mov
cmp
repz
movsb
ds
icebp
pop
mov
dec
aad
scas
mov
jns
or
pop
add
jg
mov
in
jns
sub
cmp
mov
xchg
mov
insb
int3
inc
into
push
nop
adc
cltd
pop
mov
or
pop
or
rcrb
fwait
xorl
popa
sbbb
push
pop
repz
daa
jmp
aas
mov
int
sbb
add
or
aaa
and
add
lret
pop
mov
loope
test
mov
popa
add
sarb
jg
mov
data16
sbb
shlb
cs
in
dec
mov
lods
cmp
daa
push
jns
je
and
or
sbb
jno
imul
pop
xchg
mov
rcrl
inc
out
mov
push
mov
xchg
cmp
ljmp
pushf
pushf
or
addl
inc
ja
pop
fadd
cmp
jge
mov
out
adc
test
aaa
sbb
xor
ret
pop
mov
xchg
js
lcall
inc
pop
xor
sbb
sub
cwtl
rol
ficoms
or
or
imul
mov
insb
cmp
sbb
sbb
repnz
add
out
hlt
fwait
das
std
leave
mov
pop
rcrl
je
cli
xor
jle
push
div
or
mov
push
push
cmc
shrl
rolb
dec
shrb
in
int
stos
mov
sub
testb
or
jmp
xor
aaa
cmpsl
scas
mov
imul
push
sbb
mov
pop
or
orl
icebp
rorl
xor
inc
jb
repnz
je
lods
adc
pop
sbb
repnz
cltd
push
scas
lea
jmp
daa
jmp
mov
push
test
ljmp
pop
loop
and
dec
adc
arpl
mov
xchg
sbb
xchg
xor
fisubrs
inc
mov
jmp
sub
data16
daa
inc
sub
mov
pop
call
sete
mov
inc
xor
int
lock
jg
cmp
mov
stc
sbb
xchg
out
push
jecxz
in
xchg
test
sub
testl
scas
jnp
ret
lods
push
icebp
call
mov
pop
sti
mov
sub
jb
and
mov
jecxz
divl
push
fisubs
out
inc
iret
mull
adc
mov
aaa
imul
rclb
push
jl
cmp
jmp
ja
mov
lahf
pushf
loopne
jle
add
out
mov
xor
pusha
adc
xchg
jg
sbb
decb
xor
cs
mov
pop
pop
shr
out
arpl
pop
cmc
mov
les
pop
fisubrs
sub
sti
pop
mov
int3
incl
les
gs
push
test
arpl
dec
call
pop
mov
mov
jecxz
cltd
pusha
push
xchg
movsb
in
sti
mov
loope
out
inc
add
and
mov
push
xchg
and
mov
and
push
aaa
sbb
lahf
mov
mov
mov
push
sub
insb
dec
xor
jnp
cmpsl
dec
inc
movsb
andb
jno
jae
cltd
cmc
inc
ret
sub
out
xorb
mov
das
pop
test
mov
mov
scas
std
in
push
movsl
in
cmc
test
std
xor
nop
mov
cmp
mov
mov
rcll
pop
mov
sbb
aas
dec
cmp
mov
lods
sbb
mov
sub
cmc
adc
mov
dec
adc
loop
mov
es
sbbl
rcl
mov
adcb
pop
lcall
and
aaa
cmpsb
cmpsb
mov
sub
ja
in
add
fucomi
mov
ficoml
data16
cli
daa
jmp
popa
sub
nop
ror
sub
std
into
movsb
fildll
adc
movsl
fisubl
pushf
scas
rorl
add
jnp
cmc
cmpsl
in
sub
dec
push
xchg
sub
sub
mov
jo
dec
pop
mov
dec
mov
cli
pop
mov
shlb
jmp
xor
daa
nop
dec
leave
imul
cmpsl
outsl
aam
in
movsb
push
xchg
jns
arpl
lcall
stos
dec
or
divb
aaa
push
mov
or
outsl
pop
cmpl
xor
and
lret
xchg
cmp
cmp
loope
mov
xchg
das
dec
cmpsl
jg
fwait
push
jl
iret
call
cmp
loop
fidivl
nop
pop
mov
lea
popf
in
rcrl
adc
lock
stos
add
cmp
push
xchg
cli
pop
mov
xor
dec
adc
pop
mov
ss
test
jp
andl
inc
addr16
xor
insb
or
xchg
and
xchg
xlat
lret
and
xor
push
xor
mov
dec
push
mov
mov
dec
jo
insb
push
loope
aam
mov
mov
add
repnz
dec
lods
mov
xchg
les
stc
or
and
dec
xchg
scas
inc
and
jnp
cmpb
dec
cmpl
pop
xor
mov
cmc
imull
pop
aaa
addr16
fs
stos
mov
sub
xor
add
aas
sub
jg
movsb
cmp
das
scas
out
jb
mov
sub
out
sub
dec
xlat
push
adc
inc
loopne
dec
insb
pusha
xor
aam
mov
pop
lds
inc
lahf
outsl
scas
ret
or
movb
mov
sub
inc
andl
push
loop
mov
jl
inc
pusha
mov
push
dec
mov
or
jmp
adc
ret
lods
movsb
popa
test
int
imul
push
mov
xchg
pushf
ret
xchg
iret
test
movsl
jae
popf
icebp
cmp
and
std
fstpl
or
cwtl
outsl
imul
test
sub
push
mov
cld
pop
in
xor
fidivl
pop
or
xor
in
mov
movsl
xchg
pop
mov
add
xchg
jg
add
add
or
cmc
or
jne
xchg
push
xor
add
xchg
fsubl
mov
repz
aas
xor
xor
sub
pushf
push
push
mov
incl
adc
aaa
add
aaa
daa
jb
mov
push
scas
icebp
xor
xor
push
mov
add
or
lods
fadds
pop
mov
dec
mov
sbb
dec
test
adc
mov
test
loop
mov
fsubrs
xchg
fs
and
mov
mov
fcmove
or
test
sub
out
sbb
ja
fs
pop
test
in
cmp
gs
lahf
xchg
std
imulb
xchg
test
incb
xchg
outsl
clc
cli
mov
mov
das
or
mov
or
outsb
rorl
adc
lods
popf
or
inc
loope
leave
iret
jg
fsub
out
or
adc
stos
sbb
cli
and
mov
mov
repz
mov
cmp
sbb
test
or
push
int
scas
xchg
or
jne
push
inc
push
adcb
or
xchg
ljmp
xor
sbb
push
dec
xchg
sbb
push
mov
aas
nop
popf
cmpsl
mov
xchg
aam
inc
loop
ljmp
fisttpl
ja
dec
pop
scas
outsl
imul
mov
push
loop
push
lds
movsb
ds
jg
xchg
cmp
shll
xor
inc
imul
fucomi
jmp
xor
pusha
ljmp
lret
outsl
inc
icebp
movsb
cmp
mov
shlb
jo
lock
add
popa
mov
mov
mov
add
push
jns
dec
cmpsl
stc
aad
dec
sbb
jb
pop
sbb
bound
mov
add
jo
aam
mov
cmpsl
repz
fildll
out
push
xchg
sub
adc
lock
pusha
add
mov
fs
fcoms
and
xchg
ret
dec
jns
shlb
fnstsw
fwait
mov
xor
pop
pushf
cmp
adc
add
dec
aam
jne
cmp
js
push
movsl
sub
mov
jg
es
divl
jl,pt
sub
daa
adc
repnz
or
test
jnp
push
xchg
mov
lahf
push
inc
pop
xchg
js
sbb
xchg
imul
inc
ja
stos
mov
test
xchg
stos
dec
rol
shrb
cmp
test
sub
push
adc
sub
movsb
aam
mov
push
dec
xchg
rorb
test
lds
cmpsb
cmp
adc
add
fld
mov
pop
in
adc
fisubl
sub
jg
shrb
adc
stos
rcl
out
jmp
out
pop
adc
hlt
pop
loopne
outsb
adc
test
mov
fsubrs
out
cmp
pushf
or
mul
mov
in
mov
dec
mov
clc
out
clc
push
xor
in
mov
cmpsl
jle
adc
out
dec
leave
imul
aaa
popf
jae
push
lcall
sbb
push
jle
xor
push
aad
inc
sub
mov
mov
jmp
jbe
std
mull
lcall
jg
inc
sbb
sbb
int
mov
dec
mov
into
fmul
xchg
cwtl
jmp
xor
dec
bsr
imull
test
rorb
int3
mov
dec
xchg
inc
cmp
data16
lahf
mov
pop
or
dec
push
pop
push
pop
idiv
sahf
dec
fiaddl
mov
test
lds
lahf
sahf
pop
xchg
inc
shl
mov
and
movl
shlb
arpl
cvtps2pi
mov
pop
adc
addr16
add
mov
sbb
add
fnstenv
iret
ljmp
fwait
mov
jl
and
sub
not
sub
or
sub
std
xor
lock
sbb
sub
add
add
push
mov
ss
outsb
out
nop
or
hlt
ficompl
je
mov
int
lods
jno
push
or
mov
inc
rcrb
lods
call
push
loope
icebp
lods
push
mov
fcoms
mov
outsl
xchg
xchg
loop
dec
mov
pop
xchg
ds
repnz
fwait
cmp
leave
and
pop
into
dec
inc
in
jg
rcrb
xor
push
mov
cwtl
popa
pop
test
mov
mov
lret
or
dec
pop
mov
int
sti
pop
jp
or
hlt
sarl
sub
jp
cmp
adcl
adc
cmp
notl
lea
loope
and
shl
mov
pop
mov
adc
in
jecxz
xor
scas
pop
movsl
push
fcompl
sti
js
es
fs
add
mov
mov
repz
in
in
lahf
jbe
imul
xor
ret
mov
arpl
mov
jnp
sbb
jle
xchg
popf
mov
cmp
fldt
push
orb
xchg
int3
mov
popa
in
and
test
test
out
sub
test
lea
push
ret
xor
inc
fwait
stos
ljmp
les
mov
jnp
add
xchg
fwait
out
cmp
mov
dec
push
test
jbe
loopne
cld
call
cmp
or
lea
outsl
ret
add
and
add
xchg
dec
sub
aam
in
rcr
loopne
cmpsl
outsl
sub
nop
icebp
stc
dec
dec
std
pop
push
subb
out
jge
addr16
testb
js
mov
mov
or
jo
jb
jl
test
mov
mov
fistps
and
stos
pop
idiv
push
pop
movl
orl
fwait
pop
push
xor
xchg
cmp
lods
testb
jp
xchg
lea
arpl
inc
jbe
addr16
popa
das
insl
vorpd
cmp
or
jp
mov
jno
fisubrl
push
jae
sub
and
loopne
test
add
ja
mov
lret
scas
mov
xchg
xchg
stos
xor
xor
scas
int3
sbb
cmpsb
lds
or
negb
loopne
cmp
jne
pop
jge
mov
loope
inc
nop
jbe
xchg
pop
insb
mov
cmp
sbbl
jo
bound
lret
ret
jp
cmp
xchg
inc
shlb
sbb
repnz
int3
sbbl
add
dec
xchg
xlat
gs
mov
out
mov
test
or
iret
stos
fnstenv
out
xor
push
push
add
push
xchg
lods
sbbb
pop
iret
pop
xor
xor
jg
or
inc
std
sbb
imul
jp
rol
arpl
add
and
pusha
cmpsb
out
clc
jns
xchg
nop
cmp
rcl
push
mov
pop
fldenv
dec
xchg
negb
testl
loope
ljmp
adc
popa
xchg
repz
arpl
push
dec
iret
cmp
mov
jle
xchg
or
hlt
hlt
lret
divl
and
mov
inc
mov
jmp
push
push
xlat
fdivs
inc
mov
push
cmp
cwtl
mov
les
mov
jns
inc
sqrtps
shrb
mov
cmp
jae
popa
imul
fs
xchg
push
or
push
cmpsl
mov
add
sahf
jnp
cmpsl
mov
dec
js
test
in
fisttpll
bound
and
mov
mov
cwtl
stc
push
mov
add
pop
or
sbb
loop
lahf
scas
inc
adc
addr16
int
mov
imulb
les
data16
jmp
mov
js
xor
aam
inc
sub
dec
cmp
mov
ljmp
lret
movsl
sbb
fnstenv
inc
pusha
in
cmp
loop
or
pop
jo
mov
rolb
mov
sbb
gs
fiaddl
sbb
pop
es
cmp
cld
nop
xchg
mov
push
xor
imull
lahf
arpl
cwtl
aaa
aam
mov
repnz
subl
lcall
xor
arpl
outsl
cmc
or
mov
ljmp
dec
mov
xchg
mov
push
mov
cwtl
cmp
jl
sbb
fs
push
enter
jge
aad
push
fsubs
cld
jne
lock
sbb
mov
sub
mov
cmp
jb
nop
push
xor
or
jne
xchg
add
int
daa
sbb
out
shl
xchg
sbb
fcom
arpl
jge
outsb
or
push
mov
test
add
and
dec
push
ss
cmp
xor
stos
mov
mov
packuswb
lcall
negl
xchg
test
scas
loop
adc
and
out
daa
mov
mov
cmpsl
icebp
orb
xchg
repnz
je
pop
add
loop
insb
adc
xor
in
xor
push
arpl
sahf
ror
sub
enter
inc
jmp
bound
jecxz
cli
xor
pop
jnp
add
push
cmp
dec
or
lea
rcrb
sub
lcall
mov
ret
out
int3
pusha
xor
inc
inc
cmp
pop
cmp
sub
push
insb
sbb
fcomps
sbb
cmp
mov
adc
invlpg
aas
std
mov
xchg
pusha
pop
or
loope
mov
aaa
sub
sbb
in
and
sub
jae
jbe
xor
jmp
cmpsb
jge
jbe
xchg
pop
outsl
idiv
lods
sub
and
xchg
mov
mov
inc
daa
push
lock
scas
call
add
addr16
mov
gs
ds
divl
inc
shll
in
outsb
ss
addr16
or
iret
iret
and
frstor
cmpsl
test
popa
out
sub
stos
inc
mov
xor
mov
mov
or
xchg
movsl
push
pop
mov
int
xor
sbb
ljmp
push
mov
mov
and
aaa
cltd
mov
inc
orl
or
jl
push
bound
std
sub
imul
aad
sarl
pop
pop
adc
icebp
mov
ret
mov
sete
jge
sbb
mov
das
mov
sbb
das
lahf
mov
dec
cmp
sbb
push
call
sbb
or
mov
sub
add
push
or
imul
and
jnp
lahf
or
pop
in
mov
lods
push
xchg
cmp
mov
lret
loope
adc
and
xorb
in
popf
push
lahf
xchg
lcall
enter
mov
pop
jae
push
in
cmc
das
outsb
loop
mov
sti
notl
sub
pop
leave
pop
stos
jo
mov
subb
pop
dec
das
ret
jae
in
adc
and
pusha
dec
lock
jecxz
scas
stos
int3
mov
cmp
pop
bound
lods
inc
sbb
sbb
mov
je
jge
daa
fwait
dec
pop
mov
push
add
jmp
mov
jp
lret
out
dec
adc
mov
repz
xchg
cwtl
in
dec
mov
mov
imul
xlat
sub
mull
mov
popa
xorb
mov
jg
ss
icebp
jmp
push
bound
rcl
iret
cltd
movsl
dec
sub
loope
jp
push
sub
push
outsl
sbb
lahf
pop
test
dec
fildl
or
addb
frstor
test
and
enter
movsb
xor
ljmp
or
mov
xchg
push
fbstp
lret
add
or
leave
push
cltd
cmp
or
out
scas
adc
and
inc
pop
add
jl
cs
sbb
cmpl
push
in
aad
xor
mov
dec
push
or
xor
jge
push
into
ds
cmpsb
pop
inc
xchg
leave
push
xor
dec
pminsw
adc
mov
push
xor
repnz
inc
jg
xchg
mov
enter
je
int
mov
xlat
and
sarb
jns
mov
sub
rorl
iret
adc
loop
cmc
idivl
mov
add
mov
je
lahf
aad
movsl
xchg
cwtl
lea
cwtl
push
cmp
fisubrl
mov
fdivrl
adc
and
xchg
and
inc
out
add
mov
pop
dec
rcrl
cli
jb
cmovge
aas
mov
mov
add
cwtl
dec
dec
ds
aam
mov
popf
arpl
xor
in
fs
sub
xor
add
sarl
pop
aam
inc
rcl
xor
iret
jno
lods
xor
mov
aam
jecxz
shlb
mov
fldenv
cwtl
in
adc
enter
nop
xor
das
daa
push
xchg
push
add
jge
sbb
sbb
sarl
pop
add
ds
jne
outsb
pop
xor
jge
dec
adc
sbb
xlat
sarb
push
popf
mov
cmc
adc
ror
xchg
imul
in
loopne
jge
or
mov
lahf
outsl
and
std
mov
sbbb
out
push
and
repz
ja
inc
cmp
or
xchg
dec
arpl
add
ds
pop
lods
inc
aam
out
es
push
lret
pushl
dec
out
ret
xchg
mov
leave
out
neg
mov
cmpsl
mov
int
jl
repnz
mov
add
jne
test
je
ja
sbb
fwait
jp
mov
mov
push
sahf
and
xor
insb
mov
lods
in
and
and
aaa
dec
fs
out
popa
fimuls
jne
js
pusha
push
add
addr16
mov
and
xorb
adc
icebp
sbb
push
fmul
push
adc
push
loop
lret
out
inc
imul
out
jl
ljmp
xor
sti
jecxz
dec
rorl
frstor
sbb
ret
arpl
xlat
ljmp
arpl
mov
int3
in
insb
pop
pop
iret
mov
adc
xchg
icebp
stc
shll
dec
gs
inc
pushf
dec
inc
popf
dec
je
mov
sub
push
addr16
ficoml
cmpsl
mov
push
cmp
out
test
pop
lahf
adc
stos
cmp
adc
push
out
fsubl
les
push
int
pop
call
pop
add
xchg
shlb
int3
lret
js
push
loope
andb
sub
mov
push
inc
cmp
and
popf
pushf
out
or
je
ljmp
inc
pop
xchg
clc
xlat
and
iret
xchg
mov
mov
int3
lds
fsubrs
dec
ljmp
mov
pop
push
xchg
pop
aaa
xor
push
fidivl
bound
pop
push
in
mov
inc
add
or
stos
jo
sub
addr16
imul
ffree
jg
pop
jno
scas
sub
add
insb
xchg
or
dec
in
add
ret
lods
lahf
cltd
add
mov
dec
scas
push
pop
or
dec
call
and
lds
cwtl
dec
fldl2t
movsl
sub
pop
mov
sub
out
lods
shrl
push
lret
jmp
xchg
jg
pop
mov
cmp
fdivl
jg
cmc
xchg
sub
idivb
sarl
std
xchg
pop
hlt
pop
and
mov
xchg
mov
cmp
sub
insl
or
inc
aad
subl
dec
popf
pop
gs
cmovg
adc
repnz
lret
dec
sub
insb
movl
sub
shll
fwait
insl
xchg
je
cmp
and
fdivr
or
jg
and
pusha
mov
lock
pop
repz
pop
cld
out
sbb
fsub
mov
lcall
fwait
inc
loop
push
test
loope
movsl
insl
sahf
loope
jbe
lea
xchg
or
dec
add
stos
popf
xchg
pop
jle
mov
push
inc
leave
mov
adc
sbb
popf
xchg
sbb
int
sbb
and
std
fstpl
add
cmp
mov
sbb
icebp
xor
pop
fisttps
adc
sbb
inc
ja
loope
pop
test
jne
lea
imul
das
ret
inc
xchg
add
mov
ret
fucomip
mov
mov
jle
pop
stc
imul
cmp
outsl
cmp
lcall
add
mov
outsb
mov
call
mov
fs
sub
fwait
cmpsl
fdivs
hlt
cmp
es
push
fcoml
call
push
xchg
xchg
cli
in
leave
inc
mov
scas
cs
cmp
push
repnz
adc
enter
fsubrl
xchg
jnp
das
cmpsb
xor
lods
ret
aad
mov
lcall
sbb
cmp
mov
in
inc
aam
cmp
repnz
cs
add
add
arpl
arpl
shr
push
sbb
repz
pop
mov
decb
mov
push
js
js
jo
sbb
xchg
jg
xchg
sub
sbb
sbb
mov
int
fisubs
insl
loop
xchg
call
jp
ja
push
lahf
mov
enter
stos
scas
adc
jl,pn
cmpsb
movsb
insb
xor
pop
xchg
shrb
daa
cmc
shlb
test
rcrl
and
imul
test
pop
loope
iret
jnp
stc
xor
mov
mov
insb
mov
out
inc
mov
and
pop
jnp
mov
iret
jge
jle
pop
or
xchg
subl
dec
inc
and
xchg
or
popa
sbb
cmp
stc
subb
gs
cmpsl
jl
enter
xor
loopne
jne
sub
sahf
xchg
xchg
lahf
aam
fwait
xchg
outsb
and
xor
in
pop
arpl
adc
pusha
jecxz
les
hlt
rcrb
int3
mov
mov
dec
sbb
and
mov
dec
pop
stos
dec
sbb
addb
jp
lods
mov
call
pusha
pusha
mov
pop
xor
cli
fisttps
cmpsl
rcll
add
mov
mov
xchg
movsb
or
mov
adc
jb
push
subl
in
mov
jl
sarl
inc
data16
sbb
out
enterw
mov
test
lret
cmp
adc
lods
insb
xchg
icebp
stos
out
jnp
xor
or
push
mov
mov
je
mov
loop
sub
incb
inc
xor
dec
out
jno
out
mov
mov
adc
dec
push
xor
mov
jmp
mov
insb
add
pop
call
adc
xorl
repnz
cld
push
adc
lods
cmp
xor
xor
push
fnstenv
adc
add
iret
out
jnp
adc
cmpsl
and
pusha
in
test
push
sub
arpl
les
push
inc
popa
dec
rcrl
jl
mov
dec
jle
cmp
bound
jp
dec
cmc
jae
bound
fsub
inc
lock
xchg
or
shlb
lock
sbb
cmp
cmpsl
add
insb
sti
ret
lods
in
imul
testb
clc
negb
in
pushf
inc
cmp
xor
lcall
push
mov
inc
inc
adc
dec
pop
push
jl
fldl
scas
cs
inc
pushf
adc
pusha
sub
push
cli
jns
sbb
aaa
and
in
fisttpll
cltd
mov
in
add
sub
add
outsb
sub
movsb
inc
cmp
push
mov
scas
sub
arpl
outsb
lret
jae
adcl
rcrl
dec
lcall
mov
enter
or
pop
push
test
xchg
test
addr16
pop
aam
sbbb
inc
mov
sub
cwtl
mov
jge
cmp
cmpsl
loopne
push
mov
add
pop
xor
int3
add
cmc
add
jbe
mov
loope
push
mov
push
xchg
cmp
and
add
aam
jp
mov
jne
sub
in
cs
push
pop
cmp
scas
or
fildl
cs
and
scas
add
dec
sub
dec
xchg
dec
and
jg
xchg
testb
fs
mov
data16
pop
cmp
sbb
mov
sbb
lret
mov
jmp
dec
addr16
inc
clc
ret
push
add
add
cmp
sbb
mov
lods
add
push
mov
jg
int3
mov
jo
arpl
adc
adc
daa
mov
pop
adc
lahf
fsubrl
loopne
push
data16
gs
ret
jbe
xchg
pop
dec
pop
jmp
in
xchg
ja
jbe
mov
mov
jecxz
popa
mov
pop
lret
mov
lret
popf
cmpsb
sbb
or
fcmovnu
and
dec
idivl
loopne
jg
mov
test
shll
push
pop
mov
or
sbb
je
mov
jae
es
jb
adc
mov
outsl
icebp
cli
hlt
jne
out
xchg
xchg
sub
popf
mov
jg
cld
insl
xchg
ret
std
jg
mov
movsl
pushf
shrl
ja
subl
mov
add
jg
lock
mov
ja
pushf
push
dec
stos
dec
bound
in
sbb
ds
and
push
xchg
mov
ret
out
push
cmp
mov
lods
mov
xchg
lret
sub
out
int3
push
test
movsl
clc
dec
icebp
or
mov
sbb
xorb
test
repz
lock
inc
and
mov
mov
and
mov
cmpsl
subb
and
sub
test
pop
inc
or
in
add
or
scas
cltd
rclb
daa
int
int
xchg
xchg
sbb
mov
fmull
xchg
mov
pop
xchg
outsb
adcl
push
sbb
movsb
mov
loopne
aad
loope
mov
sbb
in
orb
leave
pop
pop
outsl
xchg
dec
dec
sahf
mov
xchg
sub
fildll
xchg
dec
add
enter
rorb
xor
repnz
outsl
xchg
add
bound
mov
in
sub
push
sub
mov
dec
inc
sarl
sbb
cltd
sti
sbb
dec
idiv
or
pop
pop
xor
sub
jge
data16
mov
fldcw
movl
push
jp
push
mov
inc
mov
dec
dec
pop
xlat
jle
jns
flds
jae
sar
pop
and
jb
push
push
push
jno
les
sub
fsts
dec
inc
adc
sbb
lret
sahf
scas
mov
pop
cltd
push
mov
sub
ret
lahf
sub
insb
sub
scas
cmp
sub
sbb
and
mov
add
adc
xor
and
sub
xchg
or
jno
pop
pop
mov
inc
ljmp
in
outsb
sbb
dec
test
push
xchg
adc
lods
popa
repz
fsub
mov
clc
xchg
int
jg
xor
push
jl
dec
fmuls
jp
cltd
in
inc
sub
dec
jne
mov
jmp
nop
fwait
lret
repnz
lods
cmpl
pop
js
negb
sub
lods
je
xchg
xchg
insl
cmp
mov
imul
arpl
cli
mov
pop
addr16
mov
in
mov
aam
xchg
subl
and
lock
jg
pushf
xchg
mov
data16
sub
popa
sarl
cltd
push
ftst
pop
mov
sub
push
dec
mov
sti
fsts
adc
and
adc
push
mov
ret
push
movsb
sbbl
mov
sbb
std
fdivl
jecxz
iret
pusha
test
in
loopne
dec
sub
push
mov
mov
jl
sub
mov
loop
lds
dec
inc
out
inc
inc
mov
aam
xor
clc
cmpsb
fwait
aad
and
iret
outsb
dec
imul
mov
sbb
outsb
mov
repz
outsl
outsb
or
mov
pop
xchg
sub
scas
pop
popf
cwtl
jnp
mov
ja
hlt
daa
mov
cmp
add
lret
dec
xor
into
inc
in
or
sbb
test
loopne
sub
int3
in
and
and
mulb
push
cmp
add
xor
cmp
jnp
cmp
jl
mov
sub
mov
out
aad
lea
sbb
dec
rolb
dec
jmp
pusha
sbb
add
loope
inc
or
ja
mov
fdivs
cmp
mov
jns
mov
in
sub
mov
jns
int
or
pop
aas
rclb
ds
xor
std
ds
xchg
test
test
ljmp
ret
dec
test
jbe
in
push
xchg
add
xchg
and
cli
leave
stos
or
dec
xor
in
sti
jae
mov
and
mov
xchg
or
mov
fists
fsts
dec
imul
ja
scas
add
adc
test
push
sbb
jae
jge
fisttpl
mov
xor
popf
pop
negl
mov
inc
mov
popf
push
lds
xchg
adc
hlt
sbb
jbe
pop
push
lret
lret
aad
sbbb
mov
pop
loopne
sbb
cmp
aam
jae
mov
adc
inc
xor
call
and
pusha
insl
xchg
cltd
inc
sbb
xor
in
pop
mov
jae
sbb
and
push
mov
cmp
cli
adc
aaa
mov
pop
js
sub
adc
leave
xor
int3
jmp
int
xor
lds
sbb
out
xor
mov
pop
pop
mov
cmc
mov
in
and
inc
sti
sbb
add
in
sahf
mov
push
push
dec
inc
int3
aad
outsl
add
mov
sti
push
xchg
pop
subb
das
sbb
sbb
and
lcall
cld
jne
negl
imul
sbb
jo
addl
xchg
bnd
mov
jns
scas
cli
sub
push
push
in
mov
pop
xchg
or
jb
out
push
push
in
imul
in
mov
mov
adc
bound
jmp
shrl
jne
push
test
sbb
lods
push
aad
cmp
cwtl
mov
dec
lods
cmpsl
aam
insl
iret
mov
mov
push
mov
loop
cmpsb
xchg
push
icebp
outsb
lods
insl
movsb
out
sub
lods
and
adc
roll
fiadds
ret
cli
jno
sub
push
xor
push
addr16
jle
cmpsl
sub
mov
cmp
mov
add
cs
into
cmp
mov
push
mov
xor
xchg
sub
movsb
mov
mov
sub
cmp
dec
stos
das
imul
or
lds
inc
fisubl
aas
mov
sub
push
push
movsb
nop
inc
add
fwait
adc
jge
call
into
je
fistl
xor
mov
mov
add
cltd
sbb
or
or
mov
and
ss
aas
and
inc
or
and
adc
xchg
iret
and
jbe
mov
cmpsb
sub
adc
mov
test
jp
icebp
out
mov
mov
mov
std
ljmp
mov
jns
outsl
and
lret
sbb
push
lcall
mov
loope
arpl
loop
pop
pop
inc
mov
test
pop
outsl
xor
or
das
sub
jmp
adc
fcoml
jae
lahf
in
mov
sbb
or
sub
adc
sbb
jno
and
fbld
stos
sub
or
push
scas
mov
adc
add
add
xor
mov
jb
add
push
push
push
scas
fmull
push
nop
or
scas
and
lds
mov
mov
test
lahf
imul
mov
mov
push
and
mov
lea
add
movb
addl
and
xorb
lock
inc
std
jno
pop
adc
adc
das
leave
lods
arpl
into
nop
cmc
ja
leave
sub
stos
sub
out
call
sbb
mov
scas
leave
lahf
push
sti
mov
xchg
sub
ljmp
adc
je
cmpsb
lods
incl
nop
inc
xchg
dec
mov
xchg
and
in
jno
iret
or
inc
cmp
cmp
mov
test
push
adc
mov
inc
ret
sub
cli
into
dec
sbb
pusha
add
jo
mov
adcl
mov
outsl
mov
and
dec
call
lea
push
je
in
pop
or
xor
pusha
clc
stos
daa
out
shll
je
fistpl
adc
or
mov
in
sti
sub
dec
mov
daa
jb
hlt
fisubl
lcall
cs
fistpll
mov
xchg
push
sbb
lahf
call
jae
daa
test
hlt
mov
jp
ret
sub
std
mov
xchg
xchg
xchg
adc
adc
pop
fimuls
inc
mov
shlb
mov
jmp
mov
mov
fnstcw
sbb
test
lods
xor
int
add
rcl
mov
push
sarb
call
cli
mov
imul
adc
enter
cs
push
call
mov
inc
enter
cwtl
mov
leave
cmp
push
jae
sbb
fidivs
jp
jne
test
cmp
cmp
test
fadds
testb
shrd
sbb
cmp
das
or
je
mov
test
rcll
aad
sbb
pop
push
mov
sti
call
jle
sarb
mov
push
cld
pop
scas
lret
jecxz
jecxz
cwtl
bswap
popa
xchg
loope
pop
sub
mulb
add
ljmp
xor
sahf
scas
xchg
jl
xchg
ss
push
mov
fisubs
lds
jg
fmulp
pop
jns
mov
lret
inc
sbb
lcall
fadds
movsl
jns
aaa
pop
int
icebp
pop
fisttpl
adc
rclb
jae
arpl
lret
addr16
js
lcall
nop
lret
mov
push
mov
std
push
dec
mov
ljmp
sub
cmpb
sarl
lret
xchg
test
push
test
in
push
dec
out
pop
push
das
fbld
aad
mov
lcall
movsb
inc
xor
call
sbb
bound
xor
add
fisttpll
js
pop
xor
addl
fdivrs
push
jns
jne
or
aam
mov
inc
pop
jns
fs
mov
push
jb
and
or
push
mov
jnp
leave
pop
push
adc
in
xchg
cmp
in
or
sbb
xor
movsl
loope
xchg
sub
xadd
ficoms
xchg
test
inc
in
push
inc
adc
insb
mov
dec
mov
in
or
jo
outsl
movsb
mov
add
stos
mov
mov
dec
and
arpl
push
sub
dec
lcall
xchg
cltd
mov
mov
adc
or
lock
mov
ljmp
daa
sti
mov
repz
mov
in
lret
jge
cmpsb
mov
mov
mov
outsl
inc
sub
stos
xor
or
out
inc
addr16
push
jno
testl
pop
sbb
dec
mov
xchg
aad
rcrl
push
bound
xor
mov
xor
and
je
xor
adc
adc
nop
les
mov
pushf
lret
cmp
icebp
pop
and
cmpsl
push
shll
adc
sbbb
or
sub
jp
test
adc
mov
mov
test
fimull
cltd
and
insb
mov
sbb
or
out
cmp
sarb
ss
movl
call
data16
add
xchg
dec
sahf
jo
inc
cmp
pop
dec
insb
out
pop
and
jns
fildl
inc
jg
mov
popa
and
pop
jbe
and
call
fcomps
and
inc
push
xor
call
cmp
stos
test
xor
pop
pop
in
out
jecxz
mov
les
sbb
sti
icebp
mov
pop
addr16
int3
negl
repz
or
mov
mov
xchg
add
inc
sbb
sub
push
out
enter
and
mov
add
xchg
nop
xchg
push
notl
std
jne
iret
iret
repnz
popf
scas
mov
or
mov
stc
pop
iret
ds
lods
sti
rcr
jmp
jo
rol
aam
mov
push
xor
fcmovnbe
lea
lock
cltd
les
push
dec
pop
push
sbbl
subl
mov
or
inc
inc
aad
add
insb
or
aad
jle
sbb
xor
pop
or
cmpb
mov
call
pop
pop
dec
xchg
dec
enter
jl
or
fbld
das
icebp
out
mov
int3
pop
push
pop
outsb
add
xlat
or
sub
and
in
ret
jae
js
jmp
adc
stos
xor
jmp
shrb
fmull
push
rcrb
mov
dec
add
xchg
adc
ljmp
sub
jno
in
inc
fmull
aaa
sub
je
push
test
dec
mov
aam
bound
push
mov
jnp
jecxz
dec
lahf
jo
fcmovbe
inc
adc
cld
push
dec
sbb
mov
add
sbb
cld
xorl
arpl
daa
dec
js
jno
fcmovbe
mov
xchg
xchg
mov
cmp
mov
jno
cmp
jns
xor
and
movsb
xchg
pop
jnp
aaa
mov
lds
in
ror
fisubs
adc
or
inc
fmul
ss
pushf
mov
mov
mov
sbb
adc
pop
lret
cmp
push
lcall
cmc
cmpsb
and
pop
sub
jl
ds
or
add
xor
negb
lds
dec
bound
jo
jl
lods
or
inc
into
pop
jo
or
arpl
mov
cmp
inc
xorl
into
cmp
jno
dec
add
test
test
inc
push
xor
sbb
ds
push
dec
daa
repz
pop
lahf
jmp
sbbl
stc
ljmp
ds
nop
das
stos
cli
jne
push
dec
add
sbb
jge
jl
fs
fidivrs
in
inc
jge
dec
or
lret
push
lret
je
daa
push
stc
sub
js
jge
mov
arpl
and
repz
loopne
lea
adc
rorb
pop
xchg
sbb
fs
test
dec
test
int3
sub
in
sbb
mov
aaa
push
cmp
sub
dec
sti
add
push
lods
leave
out
dec
je
push
int
xchg
fwait
cmp
or
js
xchg
adc
iret
push
cmpsl
mov
dec
mov
cmp
ret
pop
fmull
sbb
arpl
inc
lea
inc
add
add
lock
loop
std
or
dec
ud1
jnp
jecxz
jl
cmpsl
sbb
popa
adc
sarb
arpl
or
dec
stos
into
stos
inc
mov
sbb
sbb
xchg
inc
adc
pop
xchg
add
dec
or
loop
lret
sbb
out
mov
push
movsl
nop
mov
daa
dec
imul
mov
jae
and
je
mov
xchg
inc
adc
cmp
adc
or
xor
test
and
mov
fmuls
jns
mov
js
out
lock
dec
std
xchg
xor
notl
cmpsl
xchg
mov
push
test
jo
fwait
push
dec
xor
popa
test
mov
pop
xchg
repz
test
sub
pop
pop
lods
cwtl
or
sbb
pop
lcall
cmpsl
test
sbb
push
ficoms
mov
fbld
mov
call
aad
sbb
out
xchg
inc
sub
adc
cmpsb
movsl
mov
out
filds
jg
adcb
sbb
popa
and
int3
adc
pop
nop
out
xchg
in
adc
jp
add
inc
scas
rcr
mov
jp
aaa
pop
lcall
movsb
and
jmp
pop
enter
fstps
out
aam
cmc
ret
lds
adc
xchg
and
je
inc
mov
jae
loopne
fadd
sbb
call
push
rorl
daa
decb
ss
fisttpl
in
in
fsubl
push
popa
scas
enter
mov
and
push
insb
lahf
jb
adcl
jp
lods
xchg
inc
jp
sub
jo
xchg
pusha
mov
xor
negb
es
mov
fs
jno
test
pop
lods
arpl
pop
mov
loopne
rol
pop
dec
mov
mov
cmp
push
scas
pushf
sbb
loop
and
fimull
cmc
inc
stos
jbe
aam
stos
aas
mov
add
out
inc
mov
jecxz
pop
and
lods
mov
scas
imul
lahf
cwtl
icebp
pop
adc
cltd
cmp
xlat
xor
out
shr
xchg
xchg
icebp
les
sbb
sub
sbb
push
and
insb
xor
cmp
mov
mov
xchg
cmp
ror
sahf
sub
push
arpl
aas
sbb
jp
mov
mov
gs
int
test
push
fnstcw
ret
nop
mov
xor
inc
addr16
mov
cltd
or
push
popa
cmpl
or
insl
lock
bound
ja
stos
rcll
adc
pop
push
les
cmp
mov
sbb
loope
lret
movsb
mov
imul
pop
int3
sbb
mov
pusha
cmp
addr16
sbb
dec
int
in
mov
xor
in
mov
inc
sahf
int
mov
test
inc
mov
sub
jne
loope
dec
shrb
pop
iret
dec
ja
sub
mov
xor
shlb
mov
arpl
nop
or
sub
adc
adc
cltd
outsl
or
and
js
xchg
mov
pop
outsb
xchg
dec
ret
inc
aad
xchg
js
in
push
jmp
pop
inc
jge
cltd
in
add
andb
out
insl
push
cmp
adc
aam
test
push
inc
out
sbb
cs
std
ret
out
xchg
push
in
test
cltd
cmp
out
das
fdivr
mov
enter
dec
mov
sbb
fcmovbe
mov
sbb
in
cwtl
jae
pop
int
push
adc
addb
in
fs
ret
call
arpl
cs
adc
mov
sub
xchg
mov
cwtl
sub
outsb
cld
xorb
popf
out
in
mov
adc
dec
push
hlt
scas
xchg
scas
icebp
pop
add
mov
and
mov
add
push
pop
nop
jecxz
xchg
cwtl
sbb
hlt
imul
adc
mov
lret
and
or
xchg
adc
or
mov
popf
jl
jl
pop
xchg
cmpsl
dec
loope
jbe
mov
lock
mov
push
xor
cli
fcoml
adc
out
add
adc
pop
mov
and
adc
adc
cs
push
jae
pushf
in
sbb
inc
movb
and
scas
mov
in
cwtl
and
enter
data16
dec
and
in
inc
divb
pop
pusha
cmpsb
sbb
enter
cli
push
push
cwtl
sbb
xchg
insb
and
lcall
movsb
mov
fcom
mov
mov
xor
rolb
filds
stos
nop
sbb
int3
jge
mov
xor
mov
mov
dec
fildl
pusha
dec
in
mov
ss
ret
add
dec
push
sub
sbb
cmp
orb
movsl
pop
or
xchg
push
jae
cmp
cmpsb
popa
or
jmp
xchg
jb
stos
sbb
push
cld
mov
out
cmpsb
shll
rorb
xlat
push
rclb
loopne
imul
loopne
pusha
mov
sbb
cmp
sub
aam
mov
out
loope
in
arpl
mov
ja
sbb
insb
jmp
pop
inc
in
pusha
jbe
repnz
mov
cltd
aam
mov
divl
mov
inc
sub
jg
int3
inc
es
adc
add
les
test
cmp
jge
out
outsb
and
or
and
popf
mov
lret
mov
in
cs
fisubrl
sub
mov
mov
jmp
push
push
jg
xlat
rcrb
xor
imul
sub
jb
fbstp
ljmp
ds
stos
testb
and
push
mov
fsubl
repz
pop
mov
jnp
and
sar
mov
pop
test
cmpsb
xor
xchg
dec
pushl
sti
ljmp
loopne
mov
mov
outsl
das
fsubl
mov
dec
sub
xchg
add
cmp
cmp
addl
insb
cltd
fs
les
pop
mov
jl
jns
pusha
xchg
or
or
push
add
cmp
lods
add
adc
jle
xchg
jle
in
les
testl
gs
test
mov
enter
inc
add
xor
inc
lahf
rclb
mov
fldenv
sub
int
jl
inc
cmp
pop
adc
es
stos
js
add
rcrb
mov
inc
or
imul
ret
xchg
imul
mov
xchg
lds
loope
pop
dec
sub
sbb
imul
in
mov
test
cmpsl
movsb
inc
mov
ss
inc
iret
cmp
std
jle
outsb
fs
fisubl
mov
roll
adc
jne
push
sub
adc
and
mov
aad
test
cmp
leave
mov
xchg
sub
jmp
jo
inc
cmpsl
mov
cmpsb
ljmp
xchg
aam
or
xor
addr16
mov
shll
sbb
mov
fimuls
rcrl
jmp
inc
sbb
jmp
shll
repz
inc
push
in
mov
cltd
mov
jecxz
or
insl
xor
fwait
pop
in
push
scas
js
jae
rcll
fwait
aad
add
rorl
add
shl
xchg
and
lret
jnp
loopne
jp
add
xchg
mov
lock
adc
mov
nop
rcll
lsl
addr16
mov
push
ss
adc
lods
jmp
sahf
rorb
shrb
add
test
jl
scas
daa
iret
cmp
push
xchg
std
push
aaa
xor
pop
mov
xchg
rorl
cmp
repnz
xchg
lods
and
mov
and
arpl
addr16
cmp
push
clc
out
jne
xchg
sbb
dec
push
loop
add
lret
shlb
lds
into
push
mov
fimuls
test
xor
aad
out
lcall
jae
jecxz
cmp
inc
cmpsb
cmc
xor
jmp
or
dec
not
les
mov
daa
and
mov
pusha
insb
jo,pt
sbb
sbb
sarl
mov
js
pminsw
leave
fisubrl
inc
mov
shrd
aas
mov
or
mov
divl
xchg
cmp
push
std
xchg
aaa
pusha
stos
arpl
insl
lahf
mov
mov
jmp
sub
lcall
xchg
notb
aad
sarb
sbb
das
ss
add
adc
addps
jmp
jbe
hlt
or
jmp
imul
dec
jb
add
push
push
sbb
sub
rorb
stc
test
rcrl
pop
mov
adc
jne
pop
add
hlt
int3
sub
fwait
jl
es
lret
cmp
push
movsb
jno
ret
xchg
sbb
sbb
adc
ljmp
movq
cwtl
bound
cltd
xchg
jne,pt
pop
dec
mov
mov
xchg
pushf
mov
jecxz
inc
jae
decb
test
or
iret
xchg
lock
ficomps
outsb
lods
dec
pop
pop
push
out
fldenv
sbb
push
mov
imul
lock
fsubrs
mov
mov
push
cs
push
clc
add
in
bnd
rorl
lods
pop
xor
inc
scas
jecxz
repz
mov
push
pop
fdivrl
push
cs
dec
xchg
adc
iret
sub
hlt
pop
jb
pop
cmp
in
popf
dec
sub
mov
push
or
ret
out
shlb
adc
jmp
or
in
insb
popl
ds
fldenv
ret
mov
push
ja
inc
push
adc
cli
in
xchg
stos
loope
cmp
xchg
daa
stos
fs
pop
xor
dec
out
xor
xchg
jns
out
adc
loope
mov
or
outsb
out
mov
jno
push
sub
xlat
cmc
cmpsl
and
in
jl
sub
adc
lret
cmp
in
sbb
and
push
push
xor
sub
loop
je
pcmpgtb
lahf
cmpsb
xor
xchg
mov
mov
in
or
push
xchg
dec
mov
and
cmp
push
xlat
inc
pop
cmp
scas
pop
pop
sbb
lcall
es
xlat
jbe
xorb
add
ljmp
jp
xchg
inc
dec
icebp
shll
cmp
or
jae
imul
sbb
mov
or
pop
sub
dec
push
rorl
sub
pop
mov
jo
xor
fwait
bound
repz
rcr
push
push
sti
xchg
movsb
jb
daa
mov
nop
mov
mov
and
cmp
or
lock
mov
xchg
les
dec
inc
pop
aaa
ret
push
cld
xor
jb
sub
pop
cltd
jmp
cs
mov
mov
shll
xchg
xchg
sub
adc
cmpsl
and
jbe
dec
sub
ja
pop
ret
mov
pop
pop
mov
hlt
repz
xor
jo
xor
push
in
dec
lds
xor
pop
ss
inc
imul
mov
jmp
pop
pop
pop
outsb
push
dec
and
call
xor
mov
pop
jb
inc
add
icebp
pop
mov
sbb
add
jp
cltd
push
jb
jl
push
lods
lea
subl
pop
add
popa
aaa
cwtl
adc
rcll
aas
insl
mov
cmp
mov
test
stos
fsub
imul
xchg
push
lahf
js
and
inc
push
pop
icebp
or
jge
sub
in
and
sbb
outsl
lcall
in
sub
mov
int3
mov
in
cld
into
fstpt
idivl
sar
or
sbb
js
aad
outsl
icebp
jae
int
fs
jb
ret
popf
pop
iret
and
jg
fstpt
pushf
mov
mov
stc
movsl
dec
xchg
adc
mov
mov
addr16
sbb
push
xchg
inc
mov
cmpsb
ret
and
test
push
pusha
or
pop
iret
and
jp
imul
jg
data16
cld
pop
mov
in
pop
pop
outsl
cwtl
addr16
incb
pop
or
in
rorl
xchg
xor
ret
cmp
jp
lret
xor
ret
pop
ss
inc
mov
negb
test
dec
pop
xchg
stos
and
push
in
aam
lret
rol
out
pop
hlt
and
fadds
add
sub
out
xchg
shlb
sbb
dec
mov
sub
ljmp
sub
lret
decb
rep
nop
mov
cltd
inc
arpl
xchg
or
movsl
jb
dec
lea
call
call
popa
cli
ds
loopne
loope
mov
xchg
add
insb
pop
fisubl
aas
pop
sbb
rclb
les
inc
ficompl
mov
and
xor
movsb
jb
mov
xor
mull
xor
mov
sub
ja
fisttpll
and
ret
push
clc
mov
fisttps
aam
dec
pop
enter
inc
lods
push
rol
fstpt
aaa
loopne
sbb
movsb
cmp
jns
mov
mov
leave
shl
es
movl
push
jmp
add
mull
sbb
int
mov
ds
mov
dec
imul
xor
leave
hlt
jbe
jl
sub
dec
clc
dec
push
cld
adc
ret
jae
icebp
js
inc
inc
movsl
cltd
insb
insb
adc
adc
push
jb
jp
aaa
in
push
add
dec
jl
jns
add
or
lcall
mov
aad
in
into
in
cmp
jmp
sub
popf
stos
xor
test
jbe
ss
jns
mov
addb
dec
push
insl
cli
jp
inc
imul
fwait
and
cmp
pop
test
pop
push
mov
aas
and
fdivr
xor
or
add
ss
xor
fcompl
mov
ja
daa
aad
push
mov
aam
cwtl
xchg
dec
outsl
sti
aas
pop
pop
or
fwait
mov
and
pop
fwait
dec
arpl
shlb
cmp
movsb
pop
test
cwtl
pop
add
xchg
and
icebp
scas
in
jl
in
outsl
dec
adc
and
shlb
push
in
dec
insb
cltd
jge
pop
test
xchg
repz
js
mov
daa
data16
mov
xor
xor
cli
and
test
in
cmc
pop
sub
aas
adc
inc
inc
and
or
jne
mov
push
add
push
cmpsb
icebp
xor
add
sbb
lcall
fxch
cs
insl
addr16
in
mov
outsl
cld
pop
shrl
shl
pop
mov
xor
mov
lods
in
frstor
pushf
fnsave
insl
in
mov
fidivl
add
repnz
test
and
mov
daa
fld
pusha
lods
popf
xchg
dec
adc
inc
push
das
adc
xchg
fistpl
or
lret
jecxz
jmp
inc
sbb
aam
in
lock
mov
test
push
aad
or
mov
fldt
scas
loope
pop
mov
pop
push
sub
gs
imul
and
dec
into
xchg
imulb
ljmp
inc
cmpsb
adc
aam
repnz
push
aas
xchg
inc
stos
sbb
mov
xchg
fwait
mov
sub
xor
dec
and
sbb
dec
cmc
iret
sub
mov
sbb
test
nop
shrb
xchg
jne
stc
fucomip
stos
and
push
shr
std
mov
and
sub
jns
idivl
add
stc
sbb
ficoms
add
and
jns
mov
jnp
lods
cli
stc
insl
push
push
ret
cmpsb
add
sbb
fmull
mov
les
scas
aam
stc
dec
int3
out
mov
xchg
hlt
imul
ja
fstpt
lock
mov
lahf
dec
js
sbb
scas
imul
mov
dec
pop
cmp
insl
xchg
sbb
dec
das
aaa
mov
xor
sbb
inc
jg
movsb
bound
out
mov
jbe
es
xchg
scas
sbb
in
shll
sbb
mov
cmp
loop
rolb
dec
repnz
xchg
mov
mov
aas
xor
mov
add
mov
stc
xchg
dec
ret
movsb
push
incb
xor
rolb
and
arpl
or
lahf
fwait
scas
jo
movsb
cmp
mov
popf
hlt
ds
nop
ror
jg
push
add
and
imul
loop
es
mov
sub
pop
sub
fbld
cmp
and
add
or
test
and
clc
dec
xor
leave
fists
xchg
jno
or
dec
cmp
into
jmp
push
jge
in
ret
jne
inc
push
mov
dec
popa
push
inc
cld
xchg
lret
aad
stos
add
lods
cmc
outsl
add
popl
xchg
shlb
je
fmuls
es
and
pop
and
and
jb
xchg
aad
jg
adc
daa
fs
xor
jmp
xor
push
in
pop
or
dec
jp
inc
jbe
shll
das
test
arpl
push
or
and
lahf
insb
cmp
push
jb
and
dec
nop
aad
jmp
loop
das
sub
mov
popl
stos
inc
leave
xor
push
mov
je
addr16
into
jne
cli
icebp
and
push
xlat
inc
pop
cmp
mov
xchg
xchg
jb
xor
andl
ret
fwait
les
lods
mov
in
movsb
sub
adc
fisubrs
or
lea
pop
add
xchg
iret
lret
iret
or
fadds
addr16
mov
sub
mov
mov
and
sti
aaa
fprem1
pop
fcoms
pop
lods
imul
mull
scas
xchg
mov
int
int
jns
mov
call
daa
lahf
dec
fadds
jle
mov
jbe
fdivs
lods
pop
and
mov
subl
dec
add
cmp
cmp
xor
push
std
movsl
adc
push
adc
xchg
insb
push
pushf
cmp
lds
jne
mov
adc
addb
jl
xchg
dec
scas
xchg
ret
jecxz
nop
aas
cmp
add
out
push
adc
mov
mov
or
dec
mov
mov
cmp
xchg
and
dec
cmc
mov
incb
fwait
pop
ds
sub
imul
pop
and
repz
ret
xor
test
xchg
mov
or
xchg
cmp
jbe
popf
push
sub
or
xchg
xchg
in
in
fwait
outsb
and
mov
xor
aaa
jo
add
out
std
data16
sahf
out
dec
inc
call
ja
test
mov
fs
inc
sbb
adc
fcompl
and
jp
push
jne
sbb
inc
sbb
or
jmp
fnstcw
cmp
jae
gs
leave
xor
ret
xor
xor
or
xchg
jno
sub
jg
mov
pop
in
jecxz
roll
out
test
cmp
iret
push
lock
or
cmp
jge
stc
movsl
lods
pushf
jle
mov
int
aad
sbb
sahf
mov
pop
add
xchg
shlb
jae
add
xor
lods
xor
jl
add
aam
push
push
xor
sub
push
xchg
bound
sub
push
mov
jle
xchg
repnz
pop
fsubl
lds
xchg
scas
mov
stos
push
out
sub
je
scas
addr16
ret
inc
movsb
sar
mul
mov
repnz
ret
adc
mov
add
les
xchg
rcrl
int3
rcrl
outsl
inc
and
sub
outsl
cmp
pop
arpl
hlt
jmp
cld
or
xchg
rorl
lcall
js
popa
mov
xor
shr
loope
in
outsb
out
je
xchg
adc
xchg
ljmp
add
xor
xchg
sbb
sarl
scas
pop
xor
push
stos
inc
and
fwait
loop
in
sub
enter
outsb
imul
push
fidivl
mov
sti
cmp
adc
jnp
std
mov
push
or
cmc
lahf
pop
cwtl
sub
adc
jle
dec
jno
fsin
int3
add
decl
adc
fs
subb
cmp
lahf
pushf
mov
cmp
jmp
push
pop
mov
and
out
push
adc
xor
shlb
bound
stos
ret
out
push
outsl
adc
fs
in
repz
inc
xor
test
sar
mov
pop
cmp
iret
jmp
lods
nop
cmp
and
lret
add
cmp
jb
gs
jecxz
sub
and
sub
outsb
cmpsl
hlt
out
gs
pop
xchg
loope
clc
cmpsl
mov
ss
cs
pop
jnp
movsb
fbld
call
push
in
pop
sbb
in
push
mov
stos
xor
jecxz
xchg
adc
mov
or
and
into
add
leave
addr16
fs
xor
xor
shlb
push
lret
inc
mov
adc
shll
push
jecxz
lret
aad
stos
xor
mov
rcll
cmp
pop
repz
jns
sub
mov
mov
jecxz
xchg
push
pop
rcrl
sub
add
push
enter
fimuls
cltd
push
mov
jno
out
mov
xchg
pop
or
mov
cwtl
shll
or
sub
pop
adc
sbb
add
jo
jb
cmp
nop
xchg
out
xchg
fiadds
mov
or
shrl
in
rcrb
mov
xchg
xchg
out
and
inc
sub
imul
popf
xchg
in
adc
inc
cld
pop
push
push
int
test
push
pop
vucomiss
rdtsc
cmp
ljmp
mov
push
rcrl
jecxz
mov
xor
pop
cmp
mov
pop
das
hlt
adc
ret
imul
inc
cltd
dec
adc
aam
push
into
bound
mov
jg
aaa
dec
pusha
adc
iret
out
pop
lock
pshufw
ds
xchg
adc
loopne
lds
and
mov
clc
sbb
push
sub
outsb
orl
mov
and
inc
xchg
out
and
mov
dec
jns
loop
das
jle
add
hlt
inc
mov
mov
jecxz
bound
fsubl
and
fdivs
xor
mov
push
xorl
dec
inc
adc
cmpsb
out
dec
outsb
and
pop
movsl
lds
pop
lds
sub
xor
cld
jl
cld
inc
sbb
dec
movsl
int3
or
frstor
inc
sbb
daa
or
push
pusha
xor
rclb
sbb
lahf
imul
cmc
mov
aas
stos
dec
pop
mov
test
add
mov
loopne
adc
xchg
or
adc
ret
lret
ficompl
cmp
cmpsb
leave
adcl
in
in
out
mov
cmc
xor
sti
or
cmpsb
fisttpl
cmp
mov
ret
aaa
cmp
cvttps2pi
addl
imul
shlb
pop
dec
fucomp
enter
sbb
mov
sub
jo
int
ljmp
ja
aas
and
test
es
imul
or
pop
ret
lret
cmpsb
ja
mov
inc
das
imul
rcr
movsl
mov
xor
cwtl
sarl
ficoms
mov
ss
sti
loope
mov
mov
shlb
adc
lahf
add
lahf
xlat
mov
stc
int
push
ss
cmpsb
xor
lret
mov
outsl
adc
scas
hlt
negb
push
insl
popf
adc
ja
imul
loopne
stos
lock
and
jne,pn
cmc
aad
or
xor
fisttpll
cmpsb
mov
cmp
movsl
fisubl
ss
das
jnp
out
and
lds
into
out
xor
cwtl
or
inc
xchg
pop
or
arpl
push
and
adcb
cmp
daa
inc
pop
or
int3
cmpxchg8b
mov
sub
sbb
push
jo
lahf
cmp
push
fwait
test
xchg
inc
jb
bound
aas
ss
xlat
pop
pop
ret
rclb
icebp
scas
mov
or
xlat
pop
loop
into
cmp
push
test
dec
or
jno
jecxz
push
aas
mov
jl
adc
pop
cmp
sbb
xchg
add
sub
or
repnz
bound
es
jb
roll
mov
pop
mov
popf
in
push
arpl
sub
mov
jg
sbbb
mov
rcrl
pop
dec
scas
stc
xchg
leave
popf
mov
xor
outsl
mov
mov
jp
dec
sti
jmp
sub
mov
pusha
ljmp
lds
int3
mov
xlat
fdivrl
subl
jecxz
adc
xor
cmp
cmpsb
in
or
js
xor
mov
xorl
cmpl
or
adc
xor
inc
mov
outsl
or
enter
sahf
repnz
adcl
cld
fs
xchg
mov
adc
xchg
mov
out
inc
push
jno
inc
mov
call
lods
outsl
push
adc
pusha
cmc
out
jmp
std
rorb
mov
movsl
sbb
outsb
xchg
or
jno
pop
pop
aam
lret
cmp
cli
sub
hlt
adcb
mov
iret
mov
cltd
call
psubd
ss
inc
jecxz
lret
in
adc
ficomps
syscall
sbb
ja
faddp
and
cli
fistpll
mov
aam
adc
and
mov
adc
inc
ljmp
sbb
xlat
or
or
mov
fstl
aas
sub
aaa
jmp
xor
and
cmp
out
mov
jecxz
movsl
fcmovb
mov
test
out
cmpsl
push
stos
push
mov
loopne
pop
xor
sub
xor
inc
push
inc
and
push
fdivl
adc
gs
jnp
cmp
ss
dec
ljmp
adcb
mov
jnp
push
repz
std
and
das
cmc
mov
pushf
push
pop
sbb
ljmp
gs
or
mov
and
inc
dec
pop
xchg
imul
push
cmpsl
out
gs
outsl
loope
rcrl
pusha
sbb
ljmp
in
insl
sbb
out
jl
into
pop
jnp
in
lock
cmp
js
lcall
push
into
and
and
mov
mov
lods
out
or
push
pop
loop
cmpsl
cmp
das
cli
fcmovne
in
xor
lret
dec
mov
imul
xor
aam
loop
dec
js
scas
test
test
xor
inc
or
bound
push
bnd
aaa
mov
negl
aam
insb
inc
lods
xchg
sub
cmp
aam
jg
or
nop
negl
repz
or
cmc
mov
lods
les
jno
insb
imul
add
filds
pop
fcomip
cmp
push
cltd
rcrl
xchg
gs
orb
icebp
popa
xor
push
lcall
mov
enter
lock
dec
pop
mov
mov
xchg
mov
sub
xor
icebp
call
lods
mov
lods
sbb
jecxz
pop
xchg
pop
out
rcrl
jno
lods
sub
xchg
repnz
popf
mov
fwait
loop
ljmp
xchg
adc
clc
and
pop
sub
xlat
outsl
aam
pop
js
mov
and
icebp
iret
push
push
mov
cs
jge
test
daa
push
jno
add
iret
jl
cmp
sub
mov
sbb
inc
cli
xchg
pusha
popf
mov
js
mov
outsb
adc
mov
cmpsl
shl
cmp
mov
data16
jne
xor
dec
fwait
push
cmpsl
mov
adc
dec
ret
xchg
lods
dec
dec
popf
arpl
sub
mov
mov
mov
and
mov
shll
call
mov
and
push
sbb
out
mov
sub
ljmp
ja
jg
push
mov
jmp
das
mov
xchg
sbb
outsl
mov
push
cltd
push
push
lods
enter
push
and
pop
mov
sqrtps
mov
cmpsb
dec
mov
jns
iret
mov
adc
loope
jb
dec
sbb
sbb
mov
mov
out
jno
push
inc
sub
je
lods
into
sbb
mov
mov
nop
sub
imul
pop
xor
repnz
mov
pop
fildll
int
jp
mov
jl
daa
dec
aam
mov
in
daa
shll
repnz
inc
and
or
test
pop
lods
xorl
adc
lret
fsubp
lahf
ljmp
data16
mov
rcll
das
xlat
idivl
call
cld
jb
dec
outsl
adc
enter
mov
mov
stos
mov
push
dec
test
test
jne
dec
std
loop
arpl
clc
sbb
iret
add
movsl
cli
enter
xor
jno
xchg
daa
push
fistpl
je
or
jp
test
adc
popa
xor
sbb
add
push
mov
int
pop
insl
mov
add
inc
add
pop
pop
mov
in
push
stc
push
jl
mov
mov
js
sbb
push
jo
or
add
xor
push
into
xchg
push
adc
and
dec
es
loop
mov
jo
mov
adc
insl
sbb
jbe
xor
xchg
mov
mov
addr16
hlt
testb
stos
add
js
sub
xchg
pop
loop
mov
sbb
cli
push
and
sub
sbb
mov
inc
test
iret
adc
mov
movsl
mov
jae
cmp
and
sub
and
mov
jbe
jle
stos
mov
jne
aad
push
je
cmp
and
adc
fldcw
xchg
sub
jle
xchg
dec
loopne
mov
out
jle
sbb
xchg
rorb
or
repz
repz
or
ror
fs
mov
adc
addr16
aam
inc
scas
sbb
cld
in
and
jl
xchg
xchg
cli
or
shlb
gs
adc
xchg
pop
scas
and
jns
push
scas
and
imul
or
test
add
push
pushf
ret
sbb
arpl
add
adc
gs
or
sahf
lods
mov
mov
leave
pop
jl
outsl
divb
add
adc
js
mov
imull
adc
jmp
inc
push
icebp
add
pop
cltd
xor
enter
mov
push
inc
dec
sub
jmp
mov
push
mov
outsl
sahf
inc
push
dec
in
dec
and
xor
mov
ds
pushf
lret
lock
mov
jne
addr16
cmp
aad
add
pop
les
daa
xor
pop
and
xchg
lds
cwtl
aad
dec
rcr
dec
arpl
jge
ss
push
fnstsw
dec
stc
imul
out
ror
mov
faddp
fs
fildll
hlt
fnsave
lock
push
cmpsl
ljmp
scas
movsl
add
sbb
daa
ret
or
ss
push
ret
les
mov
loopne
movsb
xor
mov
jne
lods
fldl
loope
and
push
aam
insl
das
stc
lahf
fcoml
jmp
scas
mov
imul
out
jnp
insb
sub
add
xchg
mov
sahf
lods
xchg
sub
leave
cmp
dec
call
sub
cmpsb
mov
jecxz
fs
xchg
cmp
pop
sbbl
mov
scas
dec
stc
sbb
rcrb
ljmp
jnp
mov
test
sbb
xorl
mov
push
arpl
push
shr
jae
and
gs
adc
inc
push
outsl
and
sbb
ret
mov
pop
test
in
sub
push
pop
je
xchg
mov
push
adc
icebp
enter
mov
enter
lods
jnp
iret
scas
inc
adcb
pop
cmpsl
inc
call
sub
mov
in
cmp
xor
scas
mov
aas
neg
nop
push
mov
repz
hlt
call
cltd
and
xchg
insl
push
enter
scas
mov
xor
shrl
xor
fwait
jg
sbb
daa
cmc
pushf
test
inc
frstor
sbbb
daa
test
cltd
mov
push
sti
sti
das
iret
loop
and
out
shlb
mov
inc
movsl
xor
mov
mov
push
lds
jne
jl
jno
or
cwtl
push
dec
fs
icebp
push
call
insb
jg
jg
push
add
rcl
imul
bound
sarl
mov
jp
push
mov
jns
shll
cmp
or
add
cwtl
mov
fld
into
dec
cwtl
sub
sbb
and
popl
rorl
lret
mov
or
sub
lcall
sbbl
inc
jno
imul
lcall
inc
shll
out
jns
or
decb
pop
mov
inc
push
cmp
pop
dec
push
dec
sbb
subl
dec
out
inc
gs
push
and
xor
in
lds
sub
add
shrb
dec
rorl
sub
jne
cmc
test
add
js
xlat
faddl
fiadds
add
jge
pop
jge
jne
jo
sti
sbb
mov
imul
popa
mov
xchg
jo
aad
test
mov
sub
das
mov
loop
xchg
xchg
inc
pop
inc
xor
sbb
or
dec
dec
push
push
fucomip
mov
mov
push
in
ss
clc
in
push
cwtl
scas
sbb
xor
jge
sub
mov
mov
mov
aam
inc
adc
jl
inc
cmp
cld
ficoms
inc
jo
mov
outsb
mov
lret
inc
lret
movsl
xchg
pop
lods
js
imul
iret
xor
cli
sbb
jmp
push
sarl
repnz
cs
repnz
and
test
pop
movsb
out
js
adc
lea
push
adc
dec
pop
hlt
xlat
add
pop
sub
enter
adc
cmpsb
mov
in
push
and
decb
sbb
bound
scas
je
push
lods
shlb
mov
pop
jbe
sub
out
scas
ljmp
mov
in
mov
push
push
mov
cmp
and
push
push
bound
push
jg
dec
std
xchg
push
mov
rcl
adc
adc
rol
jmp
sub
in
loopnew
mov
sbb
into
push
push
sub
cltd
cmpsl
test
cmp
push
sbb
mov
adc
stos
add
sbb
cli
lock
insb
jno
mov
push
inc
sbb
stc
sbb
in
xchg
mov
mov
into
scas
fadd
inc
movsb
push
dec
mov
mov
pop
inc
imul
pop
jle
mov
fwait
pop
push
sarb
pop
test
mov
inc
jns
pushf
lcall
scas
pop
movsb
add
adc
fisubs
in
xchg
sahf
stos
and
xor
and
mov
pop
out
mov
es
jb
in
xchg
outsl
cmp
jl
cmpsb
out
sub
xor
xor
das
lahf
ljmp
arpl
inc
test
ds
test
jle
cld
fbstp
jmp
push
ds
stos
lahf
gs
dec
jnp
clc
pop
test
and
and
jnp
pushf
sub
out
ja
lods
cmpsl
pop
ljmp
or
clc
rolb
pop
mov
inc
ja
rorl
repnz
rclb
mov
sub
add
jg
iret
lock
cwtl
lock
push
sbb
mov
or
js
push
lods
insl
pop
cmp
add
movsl
push
jne
pop
mov
add
aaa
cmp
insl
aaa
and
sub
jmp
aaa
enter
rcr
dec
push
fidivl
and
sbb
jg
outsl
jbe
int3
inc
and
mov
into
aas
lock
sbb
xchg
fadds
outsl
aam
rcll
aad
and
xor
int3
xor
imul
mov
in
outsb
lods
in
or
inc
jnp
loopne
scas
xchg
mov
aaa
and
xchg
insb
xor
jle
mov
cmp
cs
mov
jo
inc
jo
sbb
inc
xorl
add
xchg
mov
rep
loop
test
aad
xchg
aas
inc
mov
inc
mov
sub
dec
in
out
jne
and
and
dec
gs
sub
int3
xchg
mov
mov
sbb
or
mov
or
inc
inc
inc
in
or
outsb
xchg
shrl
push
jl
leave
and
push
inc
pusha
inc
inc
nop
push
jmp
pushf
and
cli
adc
mov
aaa
push
and
pop
or
push
add
mov
roll
pop
push
scas
dec
inc
pop
push
mov
adc
mov
mov
adc
aam
push
addps
enter
push
pushf
lock
arpl
sub
xchg
mov
dec
mov
dec
adc
sbb
daa
lcall
popa
popa
xchg
hlt
scas
aas
mov
out
incb
popa
mov
jne
jbe
int
jge
rcrb
sub
dec
ror
jmp
int
mov
in
mov
popa
or
sub
mov
stc
jmp
xchg
ja
jns
mov
cmpsb
xlat
jecxz
pop
nop
cmp
mov
ficomps
std
cltd
push
insl
xor
pop
or
sahf
lods
pop
popf
or
push
call
fidivrs
clc
push
sbbl
sub
out
and
jle
rclb
mov
loop
lods
mov
jle
adc
std
scas
ds
dec
das
rol
pop
mov
les
pop
xor
pop
sbb
add
pusha
jns
lret
cmp
sbb
pushf
push
pop
icebp
pop
arpl
ja
add
jbe
lock
aad
call
sahf
pop
outsl
sbb
mov
int3
xchg
adc
jb
clc
fistpl
mov
dec
inc
frndint
inc
outsl
popf
and
push
iret
mov
data16
fadds
jo
jp
stos
push
into
push
fwait
sbb
xor
jne
in
pop
out
aad
mov
inc
idivl
test
cltd
adc
add
xor
sub
and
jecxz
fdivrl
xlat
cmp
outsl
xor
movsl
push
inc
and
jb
pop
icebp
jnp
popf
mov
dec
adc
mov
pushf
faddl
mov
cltd
vmread
xchg
fwait
pop
inc
cltd
jmp
les
mov
mov
xor
lock
enter
dec
mov
cld
push
push
leave
sub
shr
test
movsb
aad
fbstp
or
cmp
jg
cmp
mov
pop
push
imul
inc
jnp
mov
test
cmp
xchg
or
in
dec
xchg
lock
stos
adc
add
rorl
rorl
cmp
in
mov
int
mov
adc
sub
shrl
jle
inc
add
and
stos
dec
add
pop
pop
in
shll
dec
lret
mov
xchg
push
mov
push
jp
mov
inc
imul
test
cli
movsb
aam
xchg
mull
and
jns
sub
or
mov
push
test
addr16
std
or
ja
insb
sub
pop
pop
cltd
sub
ds
fcoms
jb
pop
test
filds
sti
cld
sub
mov
leave
inc
cmpsb
js
iret
ror
mov
stos
push
pop
mov
pop
shll
push
nop
jne
fnstcw
cmp
jb
pop
hlt
adc
int
aad
xor
dec
mov
sub
iret
push
shrb
test
xor
popa
sbb
popf
mov
xchg
push
test
mov
cmp
pop
jge
mov
into
sbb
lock
mov
jp
das
mov
mov
or
lret
inc
jns
lea
mov
xor
cs
xor
inc
adc
xlat
mov
mov
ret
lea
int3
pop
test
adc
mov
mov
xchg
std
imul
dec
imul
xchg
das
push
ljmp
stc
add
pop
sahf
dec
andb
add
les
mov
das
push
pusha
dec
or
in
dec
sbb
sub
pop
out
mov
popf
pop
mov
je,pn
mov
call
roll
add
outsb
orb
or
popa
xchg
sub
sub
inc
sbb
pop
pop
cmp
jbe
mov
sbb
push
in
imul
mov
stc
pop
push
outsb
daa
xor
jmp
nop
jecxz
rclw
hlt
shrb
test
sti
pop
sti
xchg
or
test
cmpb
imul
push
xchg
push
lock
repnz
lcall
outsl
jo
mov
shlb
rolb
lock
push
push
xor
mov
cmp
xchg
jg
pop
lret
mov
jb
in
test
cmpsb
push
mov
mov
add
leave
and
pop
xor
xchg
aam
outsl
add
repz
mov
push
in
mov
dec
cmp
cmp
ss
cmc
jbe
cli
pop
cmp
mov
stos
mov
adc
adc
mov
syscall
fs
bound
into
or
cwtl
stc
addr16
insb
dec
ss
or
jne
mov
out
inc
loopne
mov
add
icebp
hlt
stos
aas
lcall
sub
notb
adc
xor
stos
cs
sbb
push
pop
int3
xchg
daa
icebp
jp
xchg
stos
jge
xchg
inc
out
jmp
iret
bswap
ret
ret
ds
inc
xchg
pop
test
int3
cs
in
fiadds
or
outsb
insb
adc
insb
lea
push
push
mov
lods
rorl
lret
lcall
test
xor
scas
push
test
adc
jno
push
es
out
mov
xchg
sarl
lods
sbb
scas
mov
das
dec
fmuls
sub
imul
out
roll
pop
mov
add
into
and
or
loopne
in
inc
sub
mov
add
adc
leave
jb
stc
inc
xor
loopne
ror
xor
dec
push
lcall
inc
and
xchg
lret
cli
mov
mov
out
adc
cld
pop
fsubrp
dec
mov
jge
and
mov
xor
xor
sub
pop
mov
imul
lcall
cltd
stos
sbb
test
dec
shrl
cmp
mov
stos
xor
outsb
mov
inc
imulb
adc
jg
frndint
cmp
sub
frstor
xchg
and
lock
adc
movsl
jbe
inc
pop
ds
hlt
loop
mov
or
dec
pop
cmpsb
sbb
das
mov
dec
and
or
cwtl
lahf
cmp
das
test
jecxz
out
hlt
shl
test
movsb
mov
lock
daa
mov
push
ss
push
or
inc
mov
repz
aaa
mov
repnz
sbb
push
daa
cmp
or
std
aas
orb
mov
xchg
pop
mov
xchg
int
and
adc
negb
cmpsb
out
xlat
sub
daa
jg
in
and
insb
add
fs
lds
jno
rcrl
or
mov
pop
mov
lahf
das
cmpsb
pop
push
push
mov
scas
mov
fwait
or
cmp
push
cltd
xchg
popl
jae
sub
jb
divl
andb
jl
inc
mov
insb
adc
mov
inc
cld
pop
cmpb
cs
cmp
lcall
scas
leave
rorl
movsl
clc
addr16
and
mov
imul
ret
xchg
xor
shr
push
roll
sbb
inc
push
add
outsl
push
les
insl
adc
sahf
cmp
jno
sub
mul
inc
xor
data16
sub
fisubrs
pusha
mov
pop
nop
into
aaa
push
cmpsl
sbbl
sub
xor
jns
push
sbb
jno
pop
loope
adc
sbb
sub
sbb
sbb
xor
sub
mov
sub
cmp
dec
lds
inc
int
into
shrb
pop
loope
stos
jmp
push
insl
jns
lods
loopne
adc
mov
cmc
inc
cld
inc
jg
sbb
lock
mov
loope
loopne
mov
out
dec
call
rclb
ficompl
in
jae
add
adc
adc
into
inc
fidivrs
ds
test
or
dec
dec
dec
stos
dec
push
sarb
mov
idivb
and
add
jmp
inc
push
lahf
pop
or
sub
pushf
repnz
add
nop
jmp
imul
lock
xchg
pop
dec
mov
lret
inc
jno
jnp
cmc
fwait
pusha
in
jnp
ret
test
hlt
mov
adc
sbb
movsb
mov
imul
cmp
ja
inc
lods
pop
xor
push
outsl
outsb
or
clc
in
mov
pop
aas
and
pop
add
aam
xchg
jmp
inc
mov
dec
setnp
mov
and
cmc
pushf
lret
jle
mov
in
cmc
inc
cltd
repnz
inc
jp
jbe
cmp
cmp
inc
ds
jg
lds
not
cmp
leave
xor
das
sub
xor
jg
enter
add
and
dec
mov
hlt
test
out
mov
mov
xor
push
sub
loopne
shl
lock
bound
jge
xorl
fildl
div
or
ret
dec
gs
icebp
add
or
pop
mov
or
loope
stos
shll
mov
push
sar
mov
int
jne
aaa
mov
mov
popa
in
mov
insb
lret
cmp
insb
push
or
or
adc
sub
daa
insl
push
add
fldenv
movsl
push
pop
movsb
mov
add
sub
xlat
aas
push
jo,pt
cmp
inc
lahf
ds
or
jg
inc
ss
dec
and
add
mov
sub
dec
movsb
stos
jb
pop
sub
xor
ljmp
fidivl
xchg
clc
test
test
push
jmp
inc
mov
insb
pop
aam
leave
push
add
add
rorb
xchg
test
fmuls
and
rolb
movsb
dec
leave
sbb
sbb
sbb
xor
fs
sbb
mov
jmp
push
daa
dec
xchg
decb
dec
mov
xlat
test
pop
outsb
fstpl
out
test
fdivrs
dec
repnz
jae
jecxz
xlat
jl
lahf
add
dec
inc
mov
adc
jbe
cmp
pop
insb
ror
inc
sub
inc
jns
outsb
mov
loop
add
mov
jmp
xchg
popa
adc
lods
inc
pop
xchg
test
cs
test
fldt
inc
dec
test
jl
pop
jno
es
enter
rcrb
popf
cmc
mov
dec
mov
sbb
cltd
sub
lret
idivl
push
mov
popa
into
addr16
mov
mov
out
dec
push
loop
xchg
ss
scas
and
lret
xor
xor
int3
fcoml
fistl
repz
xor
out
jb
iret
add
xor
sub
pusha
out
pop
ja
jae
mov
repz
fiaddl
xchg
in
out
cs
xor
aam
movb
pop
sarl
mov
cmp
xor
cmpsb
loope
push
jle
mov
jge
xlat
loopne
adc
addr16
dec
dec
xchg
sub
dec
sub
std
lock
fiaddl
xor
jo
les
sbb
mov
xorl
adc
js
dec
mulb
mov
jge
aam
pop
sub
add
hlt
notl
imul
mov
scas
scas
cwtl
jne
cmp
movsl
std
icebp
inc
lock
pusha
jb
movsb
xor
imul
inc
mov
aam
add
imul
jno
aas
pop
add
mov
int
gs
stos
shrl
dec
xor
mov
call
or
cmp
int3
add
sub
mov
pushf
fs
push
mov
cwtl
out
pop
inc
inc
push
dec
idiv
push
mov
push
out
push
xchg
mov
stos
sti
cmp
pop
push
xor
outsl
and
inc
xlat
jle
test
sbb
xlat
mov
out
adc
aaa
inc
les
or
lahf
stos
jae
jmp
scas
xor
aam
xchg
push
xchg
add
jae
sbb
test
sub
enter
jmp
inc
adc
dec
out
or
xor
rorb
aas
ror
push
and
pop
xor
dec
mov
cmc
jmp
jg
mov
std
je
xchg
mov
arpl
pop
lret
pushf
inc
dec
das
pop
dec
vprotq
in
dec
push
lret
mov
lret
aas
stc
pop
and
dec
jecxz
xor
mov
jg
sbb
mov
lock
mov
or
mov
int
fisubl
movsb
cmc
jo
inc
out
sbb
pusha
das
aam
sbb
lods
je
stc
jno
mov
push
out
es
sti
outsb
in
mov
loope
aas
push
xchg
std
test
jo
inc
cmpsl
pop
mov
push
icebp
fucomip
jge
leave
jno
inc
add
jns
push
dec
pop
jmp
fwait
in
adc
xchg
shll
xchg
sub
dec
adc
cmc
popa
and
in
dec
imul
data16
lcall
insb
fcompl
out
pop
push
xor
xor
jg
std
fbld
rcrb
adc
loope
sub
outsl
das
xlat
or
jl
dec
dec
dec
pop
pop
pop
xchg
xchg
add
pusha
dec
cmpl
lock
push
inc
lcall
cmp
rcrb
and
ss
xchg
mov
xor
sub
and
pop
sbb
popa
divl
xchg
insl
jg
fisubrl
adc
nop
insb
add
gs
iret
loope
daa
rcrl
lods
fdivrl
pop
push
xchg
dec
pop
rcrl
pop
repz
xchg
fstl
mov
dec
repz
cmp
mov
jmp
pop
or
xchg
fisubl
cmp
in
pop
mov
push
and
popa
xor
sbb
fldenv
mov
xor
popl
lods
sar
push
push
gs
repnz
mov
shrb
call
shr
rorl
pop
insl
inc
daa
ja
jno
mov
or
unpcklps
sub
cmp
mov
and
clc
orb
mov
xchg
nop
imul
mov
call
scas
mov
xchg
pop
sub
scas
cmpl
push
scas
pop
daa
std
dec
add
test
mov
mov
mov
lret
mov
pop
add
sbb
test
andl
lock
cmp
pushf
mov
pop
aam
cmp
xchg
jmp
xchg
scas
addl
and
iret
sub
and
inc
jae
dec
push
xchg
cwtl
int
adc
mov
xchg
add
jbe
fwait
adcb
sbb
shrb
loop
mov
xor
pop
push
loope
push
xor
scas
inc
pop
jbe
repz
sbb
cmp
icebp
cmp
mov
sub
jno
int3
mov
out
daa
rol
fisttps
push
insl
fistpll
cltd
xchg
xchg
sub
in
mov
fcoms
mov
adc
or
out
js
notb
add
dec
in
scas
les
packssdw
out
ljmp
js
or
xchg
dec
inc
fists
cmpsl
subb
jo
setnp
ds
call
jl
add
flds
or
mov
push
jbe
mov
xor
xchg
adc
ficoml
loope
popa
movsl
or
icebp
inc
and
clc
sub
pop
dec
cmp
ljmp
fdivrl
or
lods
cltd
icebp
add
or
repnz
stc
cmp
xchg
ret
rcrb
les
sub
out
jge
ja
test
pop
cwtl
cmpsl
out
fisubl
std
pop
test
out
loope
jno
stos
jno
pop
jo
cli
test
dec
movsb
insb
fiadds
into
jle
or
mov
pop
stc
loop
pusha
test
xor
mov
mov
xlat
cs
xor
pop
fdivrl
int3
inc
into
call
pop
scas
cltd
out
nop
mov
cmp
loope
sbb
mov
loopne
xchg
hlt
iret
dec
mov
dec
cmp
pop
std
es
lahf
dec
bound
ja
lahf
mov
cld
cmpsb
repz
movsb
dec
sar
je
mov
test
les
cmc
scas
shr
mov
xor
push
add
insl
scas
std
mov
testl
jg
or
icebp
clc
cwtl
and
cmp
mov
dec
incb
cmpsb
jg
loop
cmp
jp
mov
bnd
cmp
enter
loop
inc
test
cltd
addr16
push
pop
cmp
adc
mov
ja
and
in
xlat
jo
add
xor
icebp
cmp
dec
inc
fdivrl
out
xchg
aas
adc
add
stc
scas
cmp
adc
cmpsb
arpl
add
mov
out
loopne
cmp
dec
int3
cmp
ja
add
mov
xchg
xor
xchg
test
cmp
jp
cmp
or
mov
xor
sti
inc
cltd
mov
mov
mov
test
dec
pop
add
cwtl
pop
sbb
inc
iret
push
addl
test
xor
leave
popf
int
push
adc
mov
sar
jmp
leave
sub
mov
hlt
mov
pop
xchg
push
and
aas
lds
and
cmp
sbbb
xor
add
cmp
cmp
inc
into
cmp
adc
aas
mov
aad
insb
adc
sub
adc
in
les
and
push
lcall
icebp
inc
fcomip
loope
lcall
mov
test
jmp
lock
pop
fbstp
push
adc
sbb
and
or
adc
test
popw
or
xchg
mov
pop
mov
jmp
out
in
mov
jl
fs
cmp
enter
andl
cmp
push
mov
jmp
addr16
lods
icebp
lahf
inc
inc
sub
dec
sbbl
je
fmull
in
xchg
or
xchg
add
ficompl
std
fst
mov
bndldx
inc
cwtl
lea
mov
jle
cmp
push
jae
ljmp
jo
leave
add
xorl
mov
in
jbe
inc
ss
push
xor
push
insl
mov
xchg
inc
sbb
sub
aas
gs
fs
push
gs
bound
xor
cmp
mov
cmp
fnstenv
mov
xor
ss
subl
push
movsl
inc
or
adcl
jno
hlt
inc
cltd
loope
jg
adc
imul
call
xchg
into
and
mov
jne
test
iret
aaa
arpl
cmp
or
enter
xchg
clc
or
jb
dec
xor
lods
test
sbb
scas
jne
xchg
xchg
mov
pop
cmp
and
mov
stos
fdivrs
push
repnz
and
fidivs
inc
stos
inc
mov
push
sbb
push
xchg
cltd
aas
mov
mov
pop
jmp
gs
fldenv
jne
cmp
aaa
push
loop
xor
xchg
push
call
out
sbbb
mov
sub
jb
dec
pushf
ret
icebp
pop
loopne
test
cmc
inc
pushf
xchg
cmp
loope
or
stc
sarb
cmc
insl
addr16
sbb
data16
popa
mov
sbb
pop
cmpsl
enter
popf
cltd
dec
dec
pop
pushf
sbb
leave
push
ret
and
adc
inc
dec
dec
sbb
mov
xor
add
cld
xchg
inc
dec
mov
jge
test
dec
xchg
dec
hlt
neg
push
mov
sbb
out
mov
mov
loopne
leave
xor
jne
and
dec
bound
cmp
cmp
aad
mov
scas
mov
pop
arpl
movsb
xchg
maxps
les
sbb
xchg
xor
shr
js
mov
imul
lret
hlt
