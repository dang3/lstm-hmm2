mov
je
cmpl
je
cmpl
jne
mov
push
push
push
call
add
test
jne
mov
jmp
mov
push
push
push
call
add
test
jne
add
push
add
push
push
call
test
je
mov
pop
pop
pop
pop
ret
mov
push
push
push
call
add
test
jne
add
push
add
jmp
xor
jmp
int3
int3
push
push
mov
call
xor
add
cmp
je
mov
mov
movl
mov
lea
mov
mov
mov
mov
and
mov
or
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
pop
ret
xor
pop
ret
push
mov
push
mov
test
jne
and
testb
je
mov
mov
dec
neg
sbb
and
jne
mov
mov
mov
lea
push
push
push
call
mov
leave
ret
xor
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
push
lea
lea
cmp
je
push
mov
mov
lea
test
je
mov
mov
mov
test
mov
je
mov
push
mov
call
add
add
cmp
jne
mov
pop
mov
mov
add
mov
pop
pop
lea
pop
ret
push
mov
mov
mov
sub
push
push
push
push
call
mov
lea
mov
call
mov
dec
dec
neg
sbb
lea
inc
call
cmp
jne
movl
movzbl
mov
xor
dec
mov
je
dec
je
sub
mov
add
add
test
mov
je
lea
mov
call
cmp
jne
movl
lea
push
pushl
pushl
pushl
pushl
pushl
call
add
cmpl
mov
je
lea
mov
call
cmp
jne
movl
add
mov
call
cmp
je
cmp
je
cmpl
jne
mov
call
test
jne
mov
call
test
je
pushl
mov
call
pop
test
jl
sub
js
mov
mov
mov
call
cmp
jne
mov
mov
mov
push
add
push
push
push
pushl
movl
pushl
call
add
mov
add
mov
call
cmp
jne
mov
movl
call
test
je
pushl
call
pop
mov
test
jl
xor
cmp
je
cmp
je
cmp
je
mov
cmp
je
mov
cmp
jg
mov
cmp
jg
test
jle
mov
cltd
mov
mov
pushl
mov
pushl
cltd
mov
mov
mov
cltd
push
push
call
pushl
pushl
push
push
call
cmp
jl
pushl
mov
mov
pushl
cltd
push
push
call
pushl
pushl
push
push
call
cmp
jg
mov
test
jle
mov
cltd
mov
mov
pushl
mov
pushl
cltd
mov
mov
mov
cltd
push
push
call
pushl
pushl
push
push
call
cmp
jl
pushl
mov
mov
pushl
cltd
push
push
call
pushl
pushl
push
push
call
mov
cmp
jg
cmp
jg
cmp
jl
cmp
jg
cmp
jl
mov
mov
pop
mov
pop
pop
leave
ret
cmp
je
cmpl
jne
lea
call
test
jne
andl
jmp
push
push
pushl
pushl
pushl
pushl
call
add
mov
jmp
lea
call
test
je
pushl
lea
call
pop
test
jl
sub
js
mov
jmp
cmp
jne
mov
cmp
jl
cmp
jg
mov
cmp
jl
cmp
jle
jmp
cmp
je
jmp
mov
mov
jmp
mov
mov
jmp
xor
jmp
push
mov
and
sub
push
push
push
mov
or
cmp
jne
pop
pop
pop
mov
pop
ret
push
mov
push
push
test
je
mov
push
call
test
je
mov
push
mov
push
mov
call
test
js
mov
mov
test
push
push
jbe
andl
mov
mov
movl
mov
mov
mov
mov
test
je
mov
mov
cmp
je
lea
mov
test
je
orl
mov
mov
push
pushl
pushl
pushl
mov
call
test
jne
incl
mov
addl
cmp
jb
xor
pop
pop
pop
leave
ret
int3
push
push
push
mov
mov
test
je
and
test
je
mov
xor
mov
lea
mov
cmp
je
mov
test
je
and
mov
mov
jne
mov
test
jne
mov
pop
pop
pop
ret
cmpl
jne
test
je
cmp
je
mov
test
je
push
lea
lea
push
mov
mov
call
cmp
je
push
push
push
push
mov
call
pop
mov
lea
mov
push
add
mov
call
pop
pop
pop
ret
lea
push
add
push
mov
call
movl
pop
pop
pop
ret
push
mov
mov
mov
lea
push
push
call
mov
pop
ret
mov
mov
test
jne
call
mov
mov
xor
ret
push
mov
mov
cmpl
je
push
push
pushl
pushl
call
pop
ret
push
pushl
mov
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
push
xor
mov
lea
push
mov
push
lea
mov
mov
mov
lea
push
lea
push
push
push
xor
movl
mov
movl
call
add
test
je
mov
mov
push
push
push
mov
mov
push
push
lea
push
mov
call
test
mov
je
lea
push
push
push
call
add
test
je
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
push
call
test
js
lea
call
mov
mov
mov
mov
test
jne
mov
pop
pop
pop
mov
pop
ret
pushl
push
call
ret
mov
mov
test
je
mov
mov
mov
push
call
xor
ret
mov
cmp
jne
cmp
ja
movzbl
jmp
flds
flds
fucompp
fnstsw
test
jp
xor
inc
ret
xor
ret
mov
sub
neg
sbb
inc
ret
nop
outsb
popa
add
adc
add
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
or
push
and
add
call
xor
ret
push
mov
sub
push
push
xor
push
lea
lea
movl
movl
mov
mov
call
push
call
cmp
pop
je
mov
mov
mov
mov
movb
mov
cmp
mov
jne
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
mov
call
mov
lea
push
call
mov
lea
push
push
call
mov
mov
lea
push
push
call
mov
xor
cmp
je
incl
mov
cmp
mov
jne
mov
mov
mov
mov
call
cmp
mov
mov
je
pop
xor
pop
leave
ret
push
push
lea
push
mov
call
cmp
je
push
call
cmp
pop
je
movl
mov
lea
call
mov
mov
push
pushl
push
push
call
mov
mov
push
pushl
push
push
call
mov
mov
push
pushl
push
push
call
mov
call
lea
movl
call
lea
call
jmp
xor
jmp
push
mov
push
mov
call
test
je
mov
push
push
xor
push
mov
lea
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
cmp
je
push
call
cmp
pop
je
mov
mov
cmp
mov
movl
mov
je
mov
push
call
pushl
lea
push
movl
mov
movl
call
push
call
pop
lea
call
lea
call
pop
pop
xor
leave
ret
xor
jmp
push
mov
push
push
xor
push
lea
mov
mov
call
mov
lea
push
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
mov
mov
mov
mov
lea
call
mov
pop
leave
ret
mov
jmp
push
mov
pushl
mov
xor
cmp
setne
add
mov
lea
push
pushl
pushl
push
call
pop
ret
push
mov
test
je
mov
mov
add
test
je
mov
and
cmp
jne
test
je
mov
push
push
push
call
pop
ret
mov
call
jmp
andl
xor
jmp
push
mov
and
sub
push
mov
test
push
je
mov
xor
cmp
je
push
lea
movl
mov
call
mov
lea
push
push
call
test
js
mov
lea
push
push
call
test
js
mov
lea
call
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
call
test
js
mov
call
test
js
pushl
call
xor
lea
call
lea
call
mov
pop
pop
mov
pop
ret
mov
jmp
mov
jmp
push
mov
sub
push
mov
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
test
js
mov
lea
push
call
mov
lea
push
push
call
test
js
mov
mov
add
push
push
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
mov
mov
sub
push
push
mov
test
push
je
mov
test
je
mov
mov
push
push
push
mov
push
mov
call
mov
mov
mov
add
push
push
call
mov
mov
add
test
mov
je
add
mov
test
mov
je
call
mov
mov
mov
test
mov
mov
mov
lea
mov
mov
je
mov
mov
mov
mov
mov
mov
andb
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
test
je
lea
movl
call
mov
mov
mov
add
push
push
push
call
mov
add
mov
mov
cmp
jge
cmpl
jne
cmp
jge
mov
lea
call
mov
mov
mov
jmp
push
call
mov
add
test
jne
mov
call
mov
cmpl
je
mov
call
mov
push
call
mov
call
mov
call
mov
add
call
mov
mov
mov
lea
lea
cmp
jne
push
push
push
lea
push
call
push
push
add
push
movl
call
add
xor
pop
pop
pop
mov
pop
ret
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
sub
push
push
mov
neg
sbb
xor
and
cmp
push
mov
mov
mov
mov
jne
mov
push
lea
mov
call
mov
lea
push
mov
push
push
pushl
push
pushl
pushl
push
call
test
js
mov
pushl
mov
push
call
mov
mov
mov
mov
push
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
jmp
push
mov
push
mov
call
mov
xor
cmp
jne
cmp
je
mov
cmp
je
mov
mov
lea
xor
push
inc
call
mov
pop
pop
ret
pushl
lea
call
jmp
push
mov
push
push
mov
test
je
mov
test
je
andl
lea
push
push
push
mov
call
mov
add
leave
ret
xor
jmp
push
mov
and
sub
push
mov
push
mov
testb
push
jne
call
mov
andl
mov
mov
mov
mov
mov
call
test
je
add
lea
movsl
movsl
movsl
lea
mov
mov
push
mov
movsl
call
mov
add
mov
add
mov
mov
add
add
mov
add
sub
cmpl
mov
mov
mov
jne
cmpl
jl
mov
pushl
lea
call
mov
mov
andl
andl
mov
testb
mov
mov
jne
mov
testw
jne
mov
andl
mov
push
push
push
pushl
mov
pushl
lea
lea
call
mov
mov
and
jne
lea
mov
andw
test
jne
mov
mov
call
mov
and
or
jne
mov
add
lea
movsl
movsl
movsl
movsl
mov
xor
lea
mov
call
mov
and
xor
or
movl
je
mov
push
push
push
pushl
lea
pushl
mov
push
lea
push
pushl
push
call
mov
test
jne
mov
and
xor
or
je
lea
push
mov
call
push
mov
call
push
call
pop
mov
and
xor
or
jne
test
jne
pushl
mov
pushl
call
test
je
xor
test
jne
andl
mov
push
pushl
mov
pushl
lea
push
lea
push
pushl
call
pushl
lea
push
lea
push
push
call
mov
mov
add
cmp
je
mov
add
add
mov
cmp
je
mov
add
add
mov
mov
mov
mov
testb
jne
mov
mov
and
xor
or
je
mov
mov
mov
mov
mov
cmp
jne
mov
andl
xor
pop
pop
pop
mov
pop
ret
mov
jmp
mov
mov
call
mov
mov
jmp
push
mov
and
sub
mov
xor
mov
cmpl
mov
mov
push
push
mov
mov
push
jne
mov
xor
mov
xor
inc
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
lea
movl
movl
mov
call
lea
mov
mov
lea
push
pushl
mov
mov
movl
movl
mov
call
pop
pop
lea
push
lea
call
testb
jne
testb
jne
mov
mov
lea
push
push
push
mov
mov
mov
call
mov
test
jne
cmp
jne
push
call
cmp
pop
je
mov
mov
add
cmp
mov
movl
mov
mov
je
mov
push
call
xor
mov
lea
mov
push
lea
call
cmp
je
mov
push
call
mov
call
cmp
je
mov
push
call
testb
mov
je
mov
add
push
call
test
pop
je
testb
je
mov
add
push
call
test
pop
je
lea
call
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
call
cmpl
je
call
test
je
mov
push
mov
call
pop
ret
push
mov
sub
mov
push
push
mov
mov
push
lea
lea
push
mov
movl
call
xor
cmp
je
mov
push
mov
call
mov
cmp
mov
je
pushl
mov
lea
mov
call
push
lea
mov
call
mov
mov
lea
push
pushl
push
call
mov
test
jne
push
lea
mov
call
lea
push
push
pushl
add
pushl
mov
push
call
test
jne
cmp
je
pushl
mov
pushl
pushl
pushl
push
call
lea
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
mov
push
pushl
pushl
pushl
push
call
jmp
push
mov
mov
sub
push
xor
cmp
push
je
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
mov
lea
push
push
call
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
je
mov
cmp
je
push
mov
lea
mov
call
mov
call
cmp
je
testb
mov
je
cmp
je
cmp
je
lea
call
lea
call
lea
call
pop
pop
leave
ret
cmp
je
jmp
push
mov
sub
push
push
push
mov
call
xor
cmp
je
cmp
je
push
pushl
push
push
lea
push
call
mov
add
push
mov
call
test
ja
test
je
mov
push
call
xor
cmp
jne
movb
mov
cmp
jne
cmp
je
mov
push
mov
call
cmp
jne
mov
cmp
je
cmpb
je
mov
push
mov
lea
mov
call
pushl
lea
push
pushl
mov
movl
movl
movl
call
testb
jne
testb
jne
mov
lea
push
push
mov
movb
call
mov
cmp
jne
lea
call
pop
pop
pop
leave
ret
mov
movl
cmpb
jne
lea
call
cmp
jae
mov
mov
mov
andl
push
mov
lea
call
mov
test
je
mov
push
call
lea
call
addl
inc
cmp
jb
jmp
mov
push
call
jmp
xor
jmp
mov
test
je
mov
and
cmp
jne
ret
mov
jmp
push
mov
sub
push
pushl
mov
pushl
pushl
push
call
test
js
push
push
mov
call
xor
cmp
pop
je
movl
mov
mov
push
lea
mov
mov
call
cmp
je
pushl
mov
lea
mov
call
cmp
je
lea
push
xor
mov
mov
mov
call
mov
pushl
mov
push
call
lea
push
call
lea
call
cmp
mov
mov
mov
je
mov
push
lea
mov
call
mov
lea
push
push
push
call
pushl
mov
lea
mov
call
mov
cmp
je
mov
push
push
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
je
movzwl
mov
push
push
call
lea
call
lea
call
lea
call
mov
lea
call
mov
pop
pop
pop
leave
ret
push
push
call
jmp
push
mov
sub
push
push
mov
push
lea
mov
call
test
je
lea
mov
cmp
je
testb
jne
cmpl
je
mov
mov
mov
add
mov
mov
add
mov
mov
xor
inc
pop
pop
pop
leave
ret
mov
mov
call
cmp
je
cmp
je
cmp
je
xor
jmp
mov
push
mov
call
mov
lea
push
mov
call
push
call
test
pop
pop
je
lea
push
mov
call
mov
mov
add
mov
mov
add
mov
mov
add
mov
lea
mov
movsl
movsl
movsl
jmp
mov
call
test
je
mov
jmp
xor
inc
ret
push
mov
mov
test
push
push
je
cmpl
je
mov
push
pushl
lea
mov
mov
mov
call
mov
lea
push
mov
call
mov
push
push
call
test
pop
js
mov
test
je
mov
mov
push
push
call
test
je
mov
mov
xor
pop
pop
pop
ret
mov
test
jne
push
push
push
mov
or
lea
mov
mov
push
mov
call
movzbl
movb
mov
test
je
mov
shr
test
jbe
xor
mov
test
je
mov
and
lea
mov
mov
call
inc
cmp
jb
lea
xor
mov
call
push
lea
mov
lea
push
push
call
push
push
push
call
lea
push
push
movb
call
add
pop
pop
pop
pop
ret
xor
jmp
push
mov
mov
test
je
mov
jmp
mov
test
jne
mov
test
je
mov
pop
ret
mov
test
je
mov
test
jne
cmp
je
mov
mov
call
test
jne
jmp
xor
jmp
xor
jmp
push
mov
and
sub
push
xor
inc
push
mov
xor
push
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
call
test
js
push
lea
call
pop
call
cmp
je
lea
push
add
mov
push
push
call
test
js
cmp
setne
mov
lea
call
mov
lea
mov
mov
mov
push
push
call
test
js
lea
lea
call
test
jne
push
lea
call
test
jne
call
cmp
mov
je
mov
push
mov
call
mov
cmp
mov
jne
push
call
cmp
pop
je
lea
push
lea
push
pushl
lea
push
lea
push
mov
call
mov
cmp
mov
je
mov
push
call
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
push
push
push
call
test
lea
jne
call
cmp
je
mov
push
call
lea
call
mov
cmp
jne
mov
test
jne
testb
jne
test
jne
testb
jne
test
mov
je
mov
add
push
call
test
pop
je
test
je
mov
add
push
call
test
pop
je
test
jne
testb
jne
test
je
mov
add
push
call
test
pop
je
xor
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
cmp
je
cmp
je
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
push
lea
sub
mov
xor
mov
mov
push
push
mov
xor
lea
xor
mov
mov
mov
call
lea
xor
call
push
lea
call
push
mov
mov
pop
lea
push
pushl
lea
mov
mov
movl
mov
mov
mov
mov
push
call
mov
lea
push
pushl
lea
mov
mov
movl
mov
mov
mov
mov
push
call
cmp
mov
jne
push
push
push
lea
call
test
je
mov
movl
mov
movsbw
decl
mov
inc
inc
inc
cmp
jne
push
push
pop
lea
call
test
je
push
movl
call
cmp
pop
je
call
lea
mov
mov
call
cmp
je
pushl
mov
pushl
lea
push
call
test
mov
js
pushl
mov
lea
mov
call
mov
cmp
je
mov
push
pushl
push
call
mov
push
call
test
je
lea
call
testb
jne
testb
jne
testb
je
mov
add
push
call
test
pop
je
xor
mov
pop
xor
pop
call
add
leave
ret
mov
test
je
cmpl
jne
cmpl
movl
jne
xor
ret
mov
push
call
test
js
andl
ret
push
mov
sub
push
mov
mov
push
push
push
xor
push
lea
call
mov
xor
cmp
jbe
mov
mov
test
lea
mov
lea
mov
mov
jne
mov
push
push
call
test
jne
mov
pushl
mov
push
call
pushl
mov
push
pushl
call
cmpl
mov
jne
mov
test
jne
push
call
test
pop
je
pushl
mov
andl
lea
movl
call
pushl
lea
call
mov
test
mov
je
mov
push
call
push
pushl
call
test
jne
cmpb
mov
jne
testb
je
cmpb
jne
mov
mov
lea
lea
call
incl
mov
mov
cmp
jb
lea
call
test
js
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
mov
test
mov
je
mov
cmp
je
mov
mov
push
call
test
jne
test
je
mov
call
mov
test
je
mov
test
mov
je
cmpl
jne
mov
mov
mov
mov
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
mov
cmp
je
cmp
je
cmp
je
cmp
je
fld1
push
push
push
fstps
lea
flds
lea
fstps
push
mov
add
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
mov
add
call
movzbl
mov
push
push
push
lea
push
lea
push
lea
call
lea
mov
add
cmp
je
cmp
je
cmp
je
cmp
je
add
mov
cmp
je
cmp
je
cmp
je
cmp
je
xor
cmp
je
mov
cmp
je
mov
mov
mov
cmp
jne
mov
pop
pop
pop
leave
ret
mov
mov
test
jne
or
mov
mov
cmp
jne
jmp
test
je
mov
call
jmp
cmpl
je
jmp
mov
mov
lea
call
jmp
mov
mov
push
call
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
jne
jmp
xor
jmp
xor
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
call
add
mov
ret
mov
test
je
mov
test
jne
xor
mov
cmp
jb
sub
test
je
mov
and
cmp
jb
xor
ret
lea
mov
neg
sbb
and
jmp
xor
jmp
push
mov
sub
push
push
mov
cmpb
push
ja
xor
push
mov
lea
mov
call
cmp
je
lea
mov
call
movzwl
andb
cmp
mov
je
cmp
je
mov
cmp
je
mov
lea
push
push
call
test
js
testb
jne
testb
je
cmp
je
mov
testb
je
mov
mov
mov
cmp
je
lea
mov
call
mov
mov
xor
xor
mov
or
je
push
push
push
lea
call
push
push
mov
mov
mov
push
pushl
mov
call
lea
call
lea
call
pop
pop
pop
leave
ret
or
mov
jmp
orb
jmp
push
mov
sub
push
mov
mov
test
push
push
jne
mov
test
je
cmp
je
test
je
test
mov
jne
mov
cmp
ja
mov
mov
mov
add
cmp
mov
jae
fldl
mov
sub
fstpl
mov
push
lea
push
push
push
push
call
fldl
faddl
mov
fstpl
testb
mov
je
movzbl
cmp
je
mov
mov
test
jns
lea
lea
cmp
jae
mov
test
jns
push
sub
push
push
call
faddl
fstpl
fldl
inc
faddl
incl
cmp
fstpl
jb
mov
test
je
mov
mov
cmpl
jne
mov
mov
mov
mov
add
push
push
mov
call
mov
cmp
ja
mov
mov
pop
pop
pop
leave
ret
test
je
jmp
test
je
jmp
cmpl
jne
push
call
test
pop
je
andl
movl
mov
mov
mov
mov
mov
mov
push
add
push
call
fldl
push
push
fstpl
pushl
lea
pushl
call
fstpl
fldl
mov
fsubl
add
mov
call
test
mov
fildl
jl
mov
fstps
lea
push
add
call
fldl
jmp
mov
jmp
push
mov
push
mov
push
mov
push
mov
mov
call
test
jne
mov
push
push
pushl
mov
andl
push
pushl
call
mov
add
mov
xor
pop
pop
pop
pop
ret
mov
call
test
je
pushl
call
test
pop
jne
push
mov
call
mov
test
jne
jmp
xor
jmp
decl
push
push
push
push
mov
push
movl
movl
movl
pop
je
push
mov
call
lea
cmp
je
push
call
pop
lea
cmp
je
push
call
pop
lea
call
lea
call
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
lea
call
lea
mov
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
lea
pop
pop
pop
jmp
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
cmpb
jne
mov
test
je
cmpb
je
mov
ret
mov
test
jne
movb
jmp
mov
call
test
je
cmpl
mov
mov
mov
je
push
lea
push
push
call
pop
test
mov
jne
movb
xor
ret
call
test
jns
jmp
push
lea
sub
mov
xor
mov
push
xor
cmp
push
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
mov
mov
je
mov
lea
push
pushl
push
call
test
js
cmp
je
push
mov
lea
call
mov
mov
push
pushl
lea
push
call
push
lea
mov
call
lea
mov
call
mov
pushl
neg
lea
sbb
call
mov
cmp
je
mov
lea
push
push
push
lea
push
push
call
mov
lea
call
test
js
pushl
lea
lea
mov
mov
movl
movl
mov
mov
call
test
js
pushl
mov
lea
push
pushl
call
testb
mov
je
mov
add
push
call
test
pop
je
lea
call
testb
jne
testb
jne
mov
mov
pop
pop
xor
pop
call
add
leave
ret
push
mov
push
mov
push
xor
push
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
lea
push
call
mov
mov
mov
test
mov
je
mov
push
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
test
jne
test
jne
xor
pop
pop
pop
leave
ret
push
mov
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
push
mov
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
push
mov
push
mov
cmpl
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
xor
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
test
je
lea
jmp
mov
test
je
lea
jmp
push
call
test
pop
je
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
mov
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
pop
movl
xor
pop
ret
pop
movl
mov
pop
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
mov
mov
mov
jmp
push
mov
mov
mov
mov
push
mov
lea
andl
push
mov
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
lea
andl
lea
push
push
mov
movl
call
mov
mov
mov
mov
mov
pop
pop
mov
mov
pop
ret
push
mov
mov
mov
mov
push
mov
lea
andl
push
mov
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
mov
pop
ret
push
mov
push
push
push
mov
mov
xor
cmp
push
mov
jne
xor
cmp
jg
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
xor
cmp
push
mov
jne
mov
cmp
jg
pop
pop
pop
leave
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
mov
push
mov
push
mov
lea
mov
call
test
je
mov
andl
test
mov
je
push
call
pop
movl
push
lea
lea
call
mov
neg
sbb
and
je
mov
test
je
push
mov
call
mov
xor
pop
inc
push
lea
lea
mov
mov
call
test
je
mov
mov
testb
jne
testb
jne
cmpl
je
cmpl
je
pushl
call
pop
mov
pop
pop
pop
xor
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
fldz
mov
fstl
sub
fstpl
fldl
fstpl
fldl
fstpl
fldl
fstpl
push
push
push
lea
push
lea
push
call
mov
xor
mov
mov
mov
mov
mov
mov
fildl
add
fmull
fstpl
call
call
mov
mov
mov
fildl
mov
fmull
fstpl
call
call
mov
mov
mov
mov
fildl
fmull
fstpl
call
call
mov
mov
mov
mov
fildl
fmull
fstpl
call
call
mov
mov
add
ret
fldz
push
fldl
push
fcom
fnstsw
fstp
test
jne
faddl
fstpl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
mov
push
call
add
cmpl
je
mov
push
call
add
mov
pop
add
ret
mov
push
push
mov
cmp
push
jne
mov
mov
lea
push
push
movl
movl
mov
call
mov
mov
test
jne
test
jne
test
js
mov
mov
push
call
mov
add
pop
pop
pop
pop
add
ret
sub
jne
mov
mov
lea
push
push
movl
movl
mov
call
mov
mov
push
push
mov
call
add
jmp
test
mov
je
mov
push
call
mov
andl
andl
mov
mov
test
je
pushl
mov
push
call
shr
not
and
mov
mov
ret
xor
mov
mov
mov
mov
mov
mov
ret
mov
test
je
mov
andl
mov
xor
inc
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
push
mov
sub
push
mov
push
push
xor
cmp
je
pop
pop
pop
leave
ret
push
mov
sub
push
mov
cmpl
je
push
movl
movl
lea
push
mov
xor
cmp
je
mov
mov
mov
cmp
je
cmp
mov
jbe
mov
movl
mov
mov
mov
mov
mov
call
mov
cmp
je
incl
mov
mov
addl
cmp
jb
xor
mov
cmp
jne
addl
mov
mov
cmp
mov
jne
mov
pushl
push
push
call
pop
pop
xor
pop
leave
ret
mov
mov
call
sub
jne
mov
add
lea
cmp
je
mov
mov
test
je
mov
push
call
add
cmp
jne
push
push
pushl
xor
push
inc
call
decl
subl
cmpl
jne
jmp
dec
dec
jne
jmp
int3
int3
int3
mov
mov
xor
add
push
lea
cmp
je
movsbl
rol
xor
add
jmp
pop
ret
push
mov
cmp
push
mov
je
cmp
je
cmp
je
pop
xor
pop
ret
push
mov
call
mov
mov
mov
mov
mov
push
push
push
push
call
pop
jmp
call
jmp
push
mov
push
push
push
mov
mov
xor
cmp
push
mov
jne
xor
cmp
jg
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
xor
cmp
push
mov
jne
mov
cmp
jg
pop
pop
pop
leave
ret
push
mov
push
andl
push
mov
test
je
andl
push
mov
mov
mov
call
mov
andl
test
jne
lea
mov
lea
push
call
test
mov
js
mov
test
je
mov
push
call
mov
mov
mov
call
mov
test
je
decl
cmpl
je
mov
pop
pop
leave
ret
mov
test
je
push
call
pop
xor
ret
push
mov
test
je
cmpl
jg
xor
mov
xor
pop
ret
push
mov
push
andl
push
push
mov
mov
lea
push
mov
call
test
js
cmpl
push
jne
xor
pop
pop
pop
leave
ret
push
mov
mov
call
lea
mov
call
push
mov
mov
call
pop
pop
ret
mov
test
je
push
call
pop
xor
ret
andl
inc
mov
mov
test
jne
mov
cmpl
push
je
pushl
mov
call
mov
test
jne
mov
mov
call
andl
andl
mov
pop
ret
pushl
push
pushl
pushl
call
jmp
push
mov
cmpl
je
cmpl
push
je
mov
push
lea
movl
call
cmpb
je
pop
xor
pop
ret
pushl
lea
call
test
je
jmp
cmpb
jne
push
lea
call
mov
call
pop
movb
jmp
int3
mov
sub
cmpl
push
push
mov
push
jge
mov
mov
movl
mov
mov
push
mov
movl
call
mov
add
test
js
mov
cmpl
push
je
mov
test
je
addl
test
je
push
call
mov
add
cmpl
jge
mov
mov
push
push
push
call
mov
add
cmpl
mov
jge
mov
mov
push
call
mov
add
addl
je
test
jle
mov
mov
add
adcl
mov
push
call
add
test
js
test
jle
mov
push
call
mov
pop
pop
pop
pop
add
ret
jge
call
cmp
jne
push
call
add
pop
pop
pop
mov
pop
add
ret
cmpl
je
push
push
mov
push
pushl
mov
mov
pushl
mov
push
call
test
lea
js
cmpl
je
andl
mov
pop
pop
ret
mov
jmp
movl
jmp
push
mov
sub
mov
xor
mov
push
pushl
mov
mov
push
call
test
jne
xor
mov
xor
pop
call
leave
ret
push
mov
cmpl
jne
cmpb
je
pushl
mov
pushl
call
cmpb
je
push
mov
call
push
push
lea
call
pop
call
pop
ret
push
call
jmp
call
jmp
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
je
pushl
mov
xor
push
mov
call
test
jne
mov
mov
call
test
jne
lea
call
pop
ret
xor
inc
jmp
push
mov
push
andl
mov
test
mov
push
mov
je
mov
mov
andl
mov
push
call
pushl
mov
push
call
mov
test
pop
pop
je
mov
push
call
mov
neg
sbb
and
add
lea
call
mov
pop
pop
pop
ret
push
mov
lea
movl
movl
call
lea
call
lea
call
lea
call
testb
movl
movl
jne
mov
pop
ret
push
call
pop
jmp
push
mov
push
lea
push
mov
call
test
jne
mov
xor
cmp
mov
jne
mov
push
mov
call
xor
pop
pop
ret
push
jmp
push
mov
sub
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
cmp
je
lea
call
lea
call
lea
call
pop
mov
pop
leave
ret
xor
inc
jmp
push
mov
sub
mov
xor
mov
mov
shr
movzbl
push
push
mov
shr
movzbl
push
movzbl
push
push
lea
push
push
mov
call
add
push
call
test
je
andl
lea
push
mov
call
mov
lea
push
movl
call
pop
pop
mov
xor
pop
call
leave
ret
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
push
xor
cmp
je
cmp
jne
push
call
test
js
mov
mov
mov
mov
mov
lea
mov
push
lea
mov
movl
mov
mov
mov
mov
mov
movl
movl
mov
mov
call
lea
mov
lea
lea
mov
lea
mov
add
lea
lea
movl
movl
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
lea
push
call
mov
mov
test
je
mov
add
push
mov
call
add
test
jne
mov
push
call
add
mov
test
jne
test
jne
testl
jne
mov
push
lea
call
lea
mov
lea
lea
lea
mov
mov
add
lea
lea
movl
movl
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
lea
push
call
mov
mov
test
je
mov
add
push
mov
call
add
test
jne
mov
push
call
add
mov
test
jne
test
jne
testl
lea
jne
mov
push
call
lea
mov
lea
lea
mov
lea
mov
add
lea
lea
movl
movl
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
lea
push
call
mov
mov
test
je
mov
add
push
mov
call
add
test
jne
mov
push
call
add
mov
test
jne
test
jne
test
js
mov
mov
mov
shr
and
lea
je
lea
push
push
push
mov
movl
movl
mov
call
mov
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
sub
push
mov
push
add
push
lea
mov
call
mov
call
mov
mov
and
jne
andl
push
lea
call
mov
push
call
mov
xor
push
push
push
lea
push
lea
push
mov
movl
call
add
testb
mov
jne
testb
jne
mov
mov
and
jne
mov
mov
mov
add
mov
mov
call
mov
mov
add
call
mov
mov
add
call
mov
mov
call
mov
lea
push
xor
push
lea
inc
push
movl
movl
mov
call
mov
and
mov
jne
pushl
mov
push
mov
call
lea
call
cmpl
jne
mov
pop
pop
pop
leave
ret
push
mov
push
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
mov
mov
testl
jne
cmpl
jne
mov
lea
mov
call
mov
andl
mov
mov
mov
push
call
test
pop
je
push
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
movl
mov
push
mov
call
push
call
incl
pop
pop
pop
leave
ret
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
call
push
call
pop
xor
jmp
mov
test
je
push
call
pop
mov
test
je
mov
push
call
andl
mov
test
je
mov
push
call
andl
mov
test
je
cmpl
jge
call
lea
jmp
push
lea
sub
mov
xor
mov
mov
test
push
mov
je
mov
mov
push
push
lea
push
xor
lea
push
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
je
push
lea
push
mov
call
mov
imul
testb
je
mov
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
sub
ja
neg
call
mov
pushl
mov
add
neg
call
mov
add
cmpl
jne
pushl
mov
mov
push
call
test
jne
xor
push
push
mov
mov
push
call
jmp
push
mov
and
sub
push
push
lea
mov
call
mov
cmp
jl
mov
add
cmp
push
push
call
mov
add
outsl
xchg
add
mov
jnp
sahf
mov
gs
add
mov
add
add
lods
mov
add
rolb
in
add
add
push
stos
jbe
in
hlt
call
in
add
push
push
push
call
add
lcall
aad
pusha
add
mov
gs
movsl
mov
add
popa
movsb
ret
ljmp
add
add
sub
pop
popl
push
push
push
lea
push
push
lea
push
push
push
push
call
add
add
test
push
mov
jnp
add
add
test
add
add
add
movsl
data16
add
addr16
add
mov
gs
add
leave
add
int
sarl
pop
add
mov
add
add
addl
fwait
out
mov
push
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
add
fiadds
nop
lock
testl
add
jge
cmpsb
add
xchg
lods
stos
mov
mov
pushf
xlat
in
add
outsl
arpl
loopne
lcall
call
push
lea
push
push
lea
push
push
call
push
cmc
lea
mov
push
cltd
add
mov
push
add
jae
filds
add
xchg
add
jp
add
mov
fisubrl
add
add
js
roll
add
out
pop
shll
ret
cmpsl
stos
mov
add
faddl
loop
pop
pop
mov
in
rcrb
lcall
add
or
mov
push
call
add
lods
stos
mov
popf
add
add
lea
xchg
add
mull
roll
add
out
add
insb
xchg
loopne
mov
mov
movsb
out
bound
jbe
pop
enter
pop
rcrl
shrb
add
xchg
loopne
in
lock
call
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
mov
jp
sti
add
add
out
lret
add
nop
jge
add
rclb
add
fimull
add
mov
lcall
dec
add
add
push
push
push
push
push
lea
push
call
test
popf
add
gs
mov
ret
add
add
sarb
add
arpl
add
out
add
test
mov
mov
push
push
lea
push
push
call
pop
ret
add
cli
testb
add
cmpsl
loope
js
jbe
pop
cwtl
lea
nop
add
rcrb
out
add
add
pop
add
cltd
jbe
je
out
mov
jbe
add
ftst
test
add
in
lock
add
push
lea
push
lea
push
lea
push
push
call
cli
ja
mov
add
mov
xchg
mov
icebp
call
add
xchg
add
mov
jp
in
les
add
add
add
add
mov
cld
add
lcall
ret
add
add
push
lea
push
push
lea
push
push
lea
push
push
push
push
push
call
jo
add
sbbl
add
cmpsb
add
into
mov
push
add
add
add
mov
add
rorb
testl
test
pop
add
cmpsl
add
add
add
xchg
ret
lock
frstor
iret
add
add
out
pushf
add
add
lcall
ret
and
add
or
nop
stc
mov
rcll
and
jae
mov
into
lret
call
jecxz
add
add
out
add
clc
jl
add
xchg
add
lcall
stos
add
js
push
mov
cwtl
testb
jnp
out
add
jne
fldl
leave
push
add
lds
loope
add
pop
jmp
mov
add
out
ret
add
enter
sub
pop
xor
push
push
push
push
push
lea
push
call
jmp
add
add
add
repnz
mov
xchg
pop
add
scas
mov
mov
je
jmp
in
andl
sub
pop
add
push
push
dec
dec
xor
add
push
push
pop
add
sub
lea
sub
dec
shr
pop
sub
add
pop
push
lea
push
push
push
call
add
add
jae
jecxz
jp
pusha
pop
cmpsb
xorb
insb
add
cld
bound
nop
add
stos
jnp
mov
icebp
cli
add
mov
push
cwtl
mov
sahf
mov
fwait
add
push
add
in
xchg
testl
hlt
push
lea
push
push
push
push
lea
push
push
push
call
mov
les
mov
add
add
add
add
add
sahf
mov
lea
add
ja
out
out
in
insb
aam
imulb
divl
jae
mov
mov
fiadds
test
add
add
arpl
in
loopne
lcall
mov
add
push
lea
push
push
push
call
add
push
test
movsl
add
mov
stos
fadds
popa
add
add
xchg
mov
sbbl
add
add
add
data16
add
add
push
movl
into
lds
jae
add
movsb
test
add
sub
pop
mov
movl
push
push
push
lea
push
push
call
mov
jp
add
jle
add
add
cmpsl
sti
add
add
iret
add
cmpsb
test
je
scas
mov
push
add
fdivrp
xchg
add
mov
stos
push
iret
shrl
mov
in
pop
lea
push
push
lea
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
faddl
add
fsubrp
add
popl
pop
movsl
add
add
pop
add
add
mov
js
cltd
jmp
lea
add
fcomps
push
push
lea
push
call
pop
add
add
add
jnp
icebp
add
fincstp
add
ljmp
rol
fadd
pushf
xchg
xchg
mov
lcall
jne
push
push
call
shl
mov
ljmp
clc
add
add
imul
add
jne
add
push
jl
popa
jge
xchg
add
in
add
push
sub
pop
pushl
push
push
push
push
push
push
push
lea
push
push
call
fdivrp
movsb
mov
add
mov
add
xchg
add
jb
je
testb
cwtl
je
clc
pop
add
add
int
lock
add
push
in
fcoms
fwait
add
add
jno
xchg
mov
test
add
das
sub
add
jne
push
push
push
push
push
push
lea
push
push
call
add
rolb
mov
add
pop
add
movsl
mov
stc
rolb
pop
add
icebp
jne
add
add
add
sub
pop
pushl
push
lea
push
push
push
push
push
push
push
push
push
call
repnz
imul
push
ret
mov
add
lods
add
jo
add
add
roll
add
pop
call
push
push
sub
dec
dec
shr
push
and
add
inc
add
add
sub
ror
sub
pop
sub
sub
shl
pop
push
push
lea
push
call
push
mov
lea
aad
mov
test
add
int
add
add
add
add
add
testb
int
mov
fidivrs
add
add
cltd
add
in
hlt
pop
pushl
push
push
push
push
lea
push
push
call
jns
add
rolb
pushf
add
stos
faddl
add
movl
add
add
add
jmp
mov
lret
cld
mov
in
call
add
push
push
push
sub
add
add
lea
push
sub
add
dec
sub
rol
inc
inc
rol
pop
add
dec
pop
push
push
push
push
push
lea
push
push
push
call
add
mov
test
add
sahf
fadds
jne
insb
mov
movsl
jno
movsl
orb
add
add
ja
jo
addl
xchg
add
mov
mov
sub
pop
push
push
push
push
push
lea
push
push
call
fiaddl
add
pop
add
jp
add
jne
add
loopne
mov
mov
add
add
mov
push
add
xchg
add
mov
out
add
add
push
add
add
push
lock
cwtl
fcompl
mov
add
add
in
pusha
add
add
push
ror
addb
lcall
push
pop
add
ret
add
addb
jae
test
mov
addl
std
leave
out
jnp
mov
arpl
shll
sahf
add
jbe
pop
ret
add
xchg
add
stos
test
add
jo
in
clc
pop
call
push
lea
push
push
call
add
add
add
scas
mov
xchg
movsb
flds
jmp
pushf
add
out
jno
add
pop
mov
scas
fbstp
push
add
jp
mov
mov
add
xchg
scas
add
fwait
xlat
repnz
add
add
xorb
loop
add
movsb
sub
pop
mov
push
push
push
call
mov
mov
mov
mov
add
les
mulb
add
ja
lahf
mov
jecxz
in
hlt
lcall
push
push
push
call
sti
test
mov
push
out
add
add
jecxz
add
add
repnz
add
add
mov
mov
fwait
sub
pop
push
push
lea
push
push
push
push
push
push
push
call
mov
sarb
add
add
add
mov
jo
loopne
push
xchg
add
out
imul
add
les
add
scas
add
mov
js
xchg
add
pop
hlt
push
push
push
lea
push
push
call
add
add
push
add
filds
cmc
add
jbe
add
fldcw
xchg
xlat
add
add
je
add
imul
pop
add
shll
into
add
loope
fs
xchg
test
add
xchg
add
stc
pusha
stc
fs
idivl
sub
pop
add
push
lea
push
call
insb
mov
add
cmpsl
arpl
add
ljmp
add
add
add
mov
add
ret
add
add
push
push
push
push
call
loopne
add
divb
push
lcall
icebp
add
add
add
add
jge
add
sbbb
in
lock
lcall
ret
and
add
push
push
push
push
push
lea
push
lea
push
push
call
testl
in
add
cltd
add
pop
mov
add
fldl
cmpsl
faddl
fidivrs
add
out
enter
loopne
mov
add
fistps
push
test
hlt
add
add
hlt
jae
add
mov
in
fcomps
xor
mov
push
push
push
push
call
outsl
add
add
imul
out
push
jge
xchg
movsb
add
xchg
lea
mov
cwtl
lcall
mov
in
in
pop
add
push
push
push
push
call
mov
fdivr
add
add
addb
add
xchg
xchg
stos
sahf
cld
mov
loopne
add
add
lahf
loop
add
mov
pop
pop
jecxz
mov
add
cmpsl
lahf
push
add
int
call
iret
push
icebp
add
add
stc
xchg
add
add
pop
push
push
push
push
lea
push
push
push
call
jecxz
jecxz
add
icebp
add
add
icebp
add
mov
mov
stc
add
popf
jnp
iret
add
int3
add
add
add
mov
icebp
mov
stc
xchg
mov
into
jbe
xchg
push
mov
add
mov
add
add
add
call
push
push
push
push
call
mov
fadds
jb
push
scas
imul
loope
add
add
movsl
push
out
add
add
push
push
lea
push
push
lea
push
lea
push
lea
push
push
lea
push
lea
push
call
ret
sahf
add
xchg
add
jl
test
jmp
jno
adcl
in
add
add
repnz
pusha
xchg
add
add
push
scas
out
add
test
add
add
add
push
add
cmpsb
fnsave
in
fdivr
lcall
les
add
push
push
push
lea
push
push
push
push
call
insb
mov
pop
add
popl
pop
popa
bound
push
add
mov
jb
in
push
shlb
test
jno
add
sti
cltd
movsl
add
xchg
sub
pop
add
push
push
lea
push
push
lea
push
push
push
push
call
jmp
add
add
push
std
fstpl
scas
test
mov
mov
mov
add
pop
roll
sbbl
add
add
test
lcall
push
lea
push
call
jl
add
fs
into
add
add
adc
add
add
fimull
add
loope
add
test
cld
add
test
testb
fsubrl
push
add
add
jle
lock
lret
sarb
add
add
push
add
add
pop
lret
into
jl
sub
pop
mov
xor
push
push
lea
push
push
push
lea
push
lea
push
call
mov
int3
cld
mov
add
loopne
add
test
pop
js
mov
add
push
int
out
add
out
popa
add
xchg
push
into
pop
lcall
jge
in
jmp
je
mov
mov
leave
jne
mov
in
in
push
mov
xor
push
push
push
lea
push
push
push
push
push
call
pop
push
fadds
pop
aad
add
jp
add
jne
add
add
add
stc
add
add
mov
stos
ffree
fadds
andb
add
mov
add
fadds
fadds
pop
fildl
pop
mov
add
data16
mov
add
sub
pop
sub
pop
push
lea
push
push
push
lea
push
call
jmp
jbe
jbe
pop
mov
scas
jmp
stos
xchg
add
pop
rolb
add
mov
add
add
pop
add
add
in
xchg
add
rolb
mov
xchg
jns
sub
pop
rep
push
lea
push
push
push
push
push
push
push
push
call
out
pop
arpl
lahf
add
add
aam
mov
add
add
mov
mov
pop
pop
push
push
push
push
call
aam
add
add
call
fisttps
out
add
add
cmc
fsubl
add
add
add
add
int
or
add
insb
lods
add
add
fistps
fs
sub
pop
mov
push
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
movsl
hlt
add
push
pop
push
add
jge
add
xchg
pop
add
mov
data16
add
icebp
add
pop
popa
mov
lcall
pop
in
push
push
push
push
push
call
addl
add
add
add
add
jle
add
add
add
scas
mov
mov
mov
mov
in
xchg
mov
add
add
jle
push
pushf
add
in
lcall
ret
add
add
push
push
push
call
add
sahf
add
add
ljmp
mov
mov
addb
add
subl
add
add
mov
hlt
lcall
ret
and
add
xchg
push
push
call
popf
mov
lret
xchg
mov
add
add
add
leave
jo
shll
add
pop
enter
mull
add
bound
add
add
clc
add
sahf
jns
pop
js
pusha
add
add
mov
add
add
fwait
push
lock
lcall
inc
and
mov
push
push
push
lea
push
push
push
lea
push
call
mov
add
pushf
test
add
sar
out
add
add
out
add
xchg
out
add
add
add
push
add
mov
lds
push
pushf
add
nop
popf
pop
xchg
xchg
add
mov
add
addl
and
repnz
test
jne
das
jmp
push
push
push
push
push
call
xchg
lods
jne
div
lret
clc
lea
lcall
cwtl
stos
bound
mov
pushf
xchg
in
push
popf
cmpl
add
add
fucomi
fsubrs
movsl
loopne
out
sahf
add
add
add
push
add
loopne
in
in
mov
xor
push
push
lea
push
push
lea
push
push
push
push
push
call
add
rcrl
mov
out
mov
push
fmull
jnp
pop
imul
add
mov
flds
mov
fcompl
ret
push
push
lea
push
push
lea
push
push
lea
push
push
lea
push
call
test
mov
filds
call
push
je
push
add
jecxz
enter
jb
add
cmc
add
add
iret
push
popf
add
add
cmpsl
add
mov
int3
mov
fst
in
lcall
popa
add
add
add
fsubrs
fdivrl
sub
push
or
not
add
sub
not
not
sub
ror
pop
shr
xor
sub
pop
push
push
push
push
push
call
test
mov
mov
add
out
icebp
js
in
mov
cwtl
lds
jecxz
add
add
mov
add
pop
fdivrs
add
arpl
jne
fstpt
cld
cld
add
add
lret
xchg
movl
int
lock
roll
lcall
lock
push
push
push
push
call
pop
mov
lods
call
cmpsl
mov
add
stos
stc
add
mov
xchg
scas
icebp
div
push
add
add
add
add
imul
add
add
in
jmp
add
jo
mov
les
jns
mov
add
mov
mov
jb
rol
jb
mov
call
push
push
push
push
push
push
push
push
push
call
mov
push
ljmp
xchg
mov
repnz
jge
mov
arpl
add
add
repnz
xchg
lods
add
std
ljmp
add
add
loopne
cmc
push
jmp
test
bound
cwtl
add
fcompl
add
int3
daa
or
inc
rcrl
add
shl
sub
add
add
pop
dec
sub
pop
push
push
lea
push
push
call
add
add
add
mov
mov
mov
out
jbe
add
add
mov
xchg
pop
ljmp
js
arpl
push
mov
add
add
lods
sub
pop
push
push
push
push
push
push
lea
push
push
push
push
call
nop
je
add
add
aam
cli
add
add
pushf
arpl
aad
in
arpl
movsl
push
add
xchg
add
add
orl
loopne
lcall
rclb
sbb
xchg
inc
push
call
in
gs
mov
jno
add
mov
add
jge
pop
add
lahf
add
leave
movsl
pop
movsb
loope
pop
mov
jp
add
add
mov
pop
mov
push
push
push
push
push
push
push
call
jmp
add
mov
add
jno
add
add
add
add
cli
add
fcomps
lret
add
add
jmp
jae
negl
lret
cwtl
sub
pop
push
push
push
push
push
push
push
push
lea
push
call
shl
push
movsb
add
push
add
push
jae
add
bound
add
neg
jp
pop
add
jb
add
add
sahf
add
add
add
rolb
pop
ror
fiadds
push
add
lret
lret
mov
mov
test
in
loopne
mov
add
push
push
push
push
lea
push
push
call
add
insb
mov
mov
push
je
hlt
add
mov
sahf
bound
add
mov
arpl
add
add
imul
add
out
rol
mov
jae
in
call
adc
add
push
call
sti
add
rolb
out
add
add
fs
add
pop
xchg
add
add
test
jno
ret
add
jmp
add
popl
add
xchg
add
add
fldl
xchg
add
add
add
add
aad
movb
sub
pop
add
push
pop
mov
xor
push
xor
pop
add
push
push
push
push
push
push
call
xchg
nop
jb
clc
lock
fldl
in
mov
add
add
lret
add
pop
add
pusha
add
push
xchg
add
pop
add
insb
cwtl
add
jae
pop
mov
add
mov
add
sub
pop
push
push
push
push
lea
push
push
push
push
push
push
push
call
fsubrs
add
add
xchg
jp
add
add
loope
jo
add
imul
in
fcomps
inc
adc
cmp
cmp
inc
push
lea
push
push
push
call
arpl
add
add
add
int
loope
imul
add
add
add
xlat
les
test
scas
mov
mov
test
add
jp
sub
pop
xor
push
lea
push
lea
push
push
push
push
push
call
mov
scas
add
movsl
insb
aad
sahf
mov
popa
adcl
clc
xchg
mov
lret
add
add
out
pop
fadds
mov
add
int
add
mov
add
pusha
add
add
je
jbe
out
popa
add
add
mov
add
add
add
sub
pop
add
push
push
push
push
push
push
lea
push
call
out
movl
xchg
ljmp
add
movsb
jl
add
mov
faddl
jbe
cld
bound
cld
push
je
mov
add
mov
add
popf
stc
pop
cli
nop
call
in
shll
jmp
add
rcrl
add
mov
out
in
in
add
pop
push
not
not
pop
mov
xor
push
sub
add
add
dec
pop
rep
push
push
push
push
push
push
lea
push
push
push
push
call
jmp
pop
mov
enter
add
xchg
add
add
rolb
pop
insb
add
in
push
icebp
enter
test
add
add
pop
pop
cmpsl
sub
pop
mov
push
push
push
push
push
push
lea
push
push
push
call
ljmp
lret
lods
push
popf
add
mov
into
test
add
jle
add
sahf
add
jne
xorl
add
in
filds
jge
add
push
stc
data16
test
jb
pop
push
add
add
jae
stos
sub
pop
xor
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
jne
loop
add
add
hlt
add
out
jnp
push
add
cmc
add
add
cmpsl
add
adcb
jle
jo
xchg
cltd
add
jp
nop
loopne
arpl
rcrb
lock
pop
add
push
push
push
push
push
push
call
test
call
add
out
add
hlt
repnz
add
mov
mov
xchg
add
mov
imul
lahf
leave
push
movsb
stos
loop
jns
add
lret
jnp
fiaddl
pop
in
add
mov
movsb
add
push
add
pushf
add
jmp
add
out
roll
in
call
test
add
lret
push
push
push
push
lea
push
call
add
shll
incb
push
mov
cmpsl
mov
iret
pop
add
mov
hlt
add
pop
stos
xchg
repnz
jnp
cmpsb
pop
stos
add
push
xchg
add
add
add
xchg
mov
add
pop
roll
lock
add
out
add
in
call
xor
push
push
push
lea
push
call
push
lods
in
cltd
mov
out
lods
add
stos
add
mov
add
add
loop
je
add
pushf
out
out
pusha
int3
mov
ja
mov
add
sub
pop
add
push
add
inc
not
pop
mov
push
push
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
fldl
add
add
movsb
jle
jl
call
fists
sahf
mov
aam
fistps
add
add
mov
faddl
xchg
mov
add
mov
mov
sub
pop
xor
push
push
push
push
push
push
lea
push
call
addl
aad
add
add
push
add
add
add
add
jb
movsb
add
xchg
add
out
add
add
add
xchg
mov
test
mov
add
test
stc
add
add
in
fwait
add
xchg
leave
add
nop
add
call
mov
sub
pop
add
push
pop
add
push
shr
rol
pop
add
push
xor
sub
shr
pop
push
push
push
call
add
add
mov
leave
fnsave
add
adcb
add
mov
add
sbb
pop
xchg
shll
add
add
add
loop
popl
in
add
fidivrl
fcoml
mov
add
add
inc
or
mov
xor
add
add
pop
add
push
push
lea
push
lea
push
push
push
push
push
lea
push
push
call
lret
xchg
insb
add
add
mov
add
lods
pop
fstp
xchg
leave
les
mov
jle
outsl
insb
aam
push
fs
outsl
test
jne
jecxz
les
divl
mov
testb
leave
negl
add
mov
pop
push
inc
add
sub
not
pop
rep
push
push
push
push
push
lea
push
push
push
lea
push
call
mov
je
add
test
stos
int
addr16
int
add
add
pop
mov
xchg
mov
push
mov
xchg
jno
fs
mov
fiadds
ljmp
fdivr
lcall
dec
sub
or
push
push
push
push
call
out
add
mov
cmc
add
addl
incb
add
pusha
add
pop
pop
add
imul
rorb
lret
sahf
div
add
jecxz
iret
mov
fsubrp
add
jno
add
add
add
add
add
nop
add
out
add
add
add
mov
lahf
add
lcall
or
push
push
push
push
push
call
lea
add
in
fldl
cmc
lcall
mov
add
add
add
add
scas
mov
add
cmpsb
bound
add
add
in
in
pop
add
push
lea
push
push
push
lea
push
push
lea
push
call
bnd
outsl
shlb
add
add
push
mov
add
data16
arpl
xlat
add
cwtl
js
lea
mov
mov
mov
add
add
add
xchg
pop
add
in
stos
mov
sub
pop
or
je
push
lea
push
lea
push
lea
push
push
push
push
push
lea
push
lea
push
call
add
je
hlt
add
ret
add
add
fistpl
mov
les
subl
jecxz
lock
enter
test
arpl
call
add
add
jmp
mov
cld
add
roll
add
test
hlt
add
repz
push
push
call
xchg
push
iret
enter
out
add
popa
pop
jb
je
pop
mov
pop
lock
mov
mov
pusha
add
xchg
test
add
jo
loope
js
cltd
out
mov
sub
pop
add
push
dec
pop
add
rep
push
lea
push
lea
push
lea
push
call
add
add
push
fidivs
clc
jle
icebp
fwait
add
add
out
mov
add
iret
add
gs
mov
loopne
movsl
add
idiv
test
icebp
mov
add
subl
add
fs
pop
add
rolb
mov
xlat
test
sub
pop
pop
push
push
lea
push
or
not
add
not
sub
xor
sub
sub
dec
pop
shr
not
pop
push
lea
push
lea
push
push
lea
push
push
push
call
loop
add
add
mov
add
add
mov
cld
add
add
ret
popf
add
add
test
mov
add
movsl
add
mov
leave
xchg
add
push
add
xchg
add
add
shlb
ret
je
in
in
lcall
push
lea
push
lea
push
push
lea
push
call
add
mov
fcmovbe
add
add
add
mov
add
pop
neg
sar
mov
ljmp
add
int3
add
add
jb
add
add
add
add
xchg
add
in
cmpsb
cmpsb
push
clc
scas
cld
fiaddl
add
add
out
mov
jne
mov
push
sub
sub
add
not
pop
mov
push
ror
lea
pop
jmp
push
push
push
push
push
push
push
push
lea
push
call
jo
jp
add
cltd
in
add
add
add
add
in
mov
add
xchg
add
out
fcmovnu
popa
jno
jge
add
xchg
add
mov
rolb
push
js
aad
test
in
fcompl
mov
push
add
pop
add
push
push
call
add
mov
add
ror
lock
add
add
push
loop
add
add
fiadds
add
cwtl
jb
add
scas
add
fstps
mov
add
lcall
push
lea
push
call
xchg
add
add
pop
add
adc
rolb
lahf
jge
xor
push
add
add
pop
mov
add
in
clc
pop
push
push
shl
xor
rol
pop
push
push
shr
lea
not
pop
push
mov
push
lea
push
push
push
push
push
push
call
ja
fiadds
sti
mov
cmpsb
add
add
add
cwtl
add
add
out
add
add
add
add
xorl
lcall
shlb
jge
out
leave
insb
add
lcall
pop
push
rol
add
add
shl
pop
pop
push
not
dec
pop
pop
push
push
lea
push
lea
push
lea
push
call
add
js
add
rolb
add
jmp
out
in
xchg
mov
jp
push
stos
lods
add
push
add
pusha
push
fcoml
add
sub
pop
leave
push
lea
push
push
push
push
push
lea
push
call
add
rolb
mov
mov
add
lds
add
jle
lock
bound
outsl
popa
jno
cmc
gs
je
lds
ljmp
arpl
jle
lret
fildl
lods
add
mov
add
add
icebp
lret
sub
pop
ret
push
xor
pop
push
push
not
ror
pop
mov
add
push
push
lea
push
push
push
call
add
insb
mov
add
scas
je
add
mov
add
xchg
xchg
add
rcll
add
mov
add
push
jbe
jno
pop
jne
std
cmc
add
push
add
add
add
add
push
add
add
xchg
sub
pop
push
push
push
lea
push
call
out
add
rcrl
add
push
add
movsb
fwait
mov
jecxz
mull
lds
loopne
fwait
jge
add
lods
stc
mov
add
mov
lds
outsl
sub
pop
push
push
xor
add
sub
sub
pop
push
movl
push
push
lea
push
call
add
mov
fidivrs
loope
add
pop
add
add
sahf
scas
mov
lret
add
mov
mov
shlw
aad
mov
add
cli
cltd
in
lods
push
xchg
rcl
loope
rclb
icebp
mov
into
jl
mov
in
hlt
pop
addl
test
je
push
shl
dec
pop
mov
pop
push
rol
add
shr
pop
pop
push
sub
inc
pop
pop
pop
push
push
push
push
push
push
push
push
push
call
mov
add
call
mov
mov
xorb
je
ljmp
les
fbstp
in
mov
mov
insb
add
fisubs
push
jno
add
sarb
sub
pop
leave
push
push
lea
push
push
push
push
call
loopne
lret
scas
fidivrl
add
out
mov
mov
mov
lret
rcrl
add
add
push
mov
push
lret
add
cld
add
add
add
add
in
xchg
add
sti
add
fprem1
add
add
add
in
int3
sub
pop
ret
push
push
lea
push
push
push
push
call
add
lahf
rol
xchg
mov
sahf
lods
add
in
mov
push
cmp
add
add
add
add
jae
js
call
lcall
in
add
push
lea
push
push
call
mov
clc
push
imul
lock
jne
mov
out
push
ljmp
lock
js
lret
in
sahf
add
jl
std
add
add
mov
aam
nop
shlb
pop
insb
jp
push
mov
jo
add
cmc
push
hlt
jnp
out
push
xchg
bound
hlt
pop
push
push
sub
sub
not
pop
push
push
push
lea
push
push
lea
push
lea
push
lea
push
call
bound
add
add
add
add
je
pop
jb
add
add
add
ja
nop
add
lahf
xchg
sbb
repnz
loopne
add
add
pop
add
push
scas
mov
faddp
push
lcall
shl
loop
sti
lea
pop
mov
add
loopne
cmpsb
add
lcall
push
add
lea
add
pop
testl
addl
push
rol
lea
shl
ror
pop
push
call
push
lea
push
push
push
push
lea
push
push
push
push
push
call
cmc
rclb
xchg
scas
add
sar
bound
mov
add
add
add
int
pop
cltd
sub
pop
mov
push
add
shr
pop
pushl
push
rol
not
inc
shl
pop
push
push
push
inc
pop
call
push
push
push
push
push
push
lea
push
push
push
call
mov
add
add
lds
mov
ja
fnsave
mov
cmpsl
xchg
mov
add
shl
aam
ret
add
icebp
add
xchg
int
mov
stos
add
enter
add
push
mov
data16
mov
sub
pop
cmpl
jne
pop
push
shl
pop
pop
push
pop
pop
pop
push
lea
push
lea
push
lea
push
push
push
push
push
lea
push
call
add
add
pop
fmul
add
add
js
mul
pop
mov
add
xchg
pop
add
popa
roll
add
int3
stos
rolb
ljmp
add
rol
add
popf
in
push
push
add
pop
sub
pop
leave
push
add
shr
pop
ret
push
push
push
push
lea
push
lea
push
lea
push
call
add
jo
data16
xlat
pusha
mov
jecxz
add
add
jecxz
xchg
andl
jecxz
loop
rol
add
xchg
add
sub
pop
mov
add
push
push
push
push
push
lea
push
push
call
test
jle
add
add
add
mov
mov
add
mov
push
add
mov
test
data16
add
rcll
add
add
push
push
push
push
lea
push
push
push
call
call
xlat
lret
ljmp
rolb
mov
outsl
popf
add
mov
mov
add
add
mov
add
jmp
add
icebp
mov
add
enter
std
xchg
fwait
mov
scas
jmp
push
jae
int3
mov
test
xchg
mov
xchg
notb
in
in
push
push
inc
dec
pop
push
push
not
inc
xor
pop
push
push
lea
push
lea
push
call
pop
sahf
mov
add
add
outsl
negb
jecxz
add
ret
mov
add
nop
xchg
in
add
xchg
add
in
push
std
cld
js
or
repnz
lods
out
add
test
inc
cld
or
add
push
lea
push
push
push
lea
push
push
push
push
call
mov
mov
add
add
pushf
add
into
pop
les
test
iret
push
pushf
bound
rcrb
add
mov
sub
pop
push
call
push
push
lea
push
push
push
call
movsb
add
hlt
push
xchg
lods
lahf
push
add
out
add
add
add
add
push
je
pop
jns
in
in
lcall
adc
mov
call
pop
or
inc
add
add
add
add
add
xchg
add
out
add
jge
repnz
int
add
add
pop
xchg
add
add
mov
mov
add
cwtl
pusha
stos
add
in
add
add
lock
subl
push
sub
add
pop
cmpl
jne
push
xor
xor
sub
pop
pop
pop
push
shr
pop
pop
push
inc
shl
not
pop
pop
push
push
push
push
push
call
add
add
out
mov
imulb
sahf
xchg
je
gs
add
add
push
mov
into
pop
rclb
mov
fwait
add
lock
ljmp
lcall
push
add
lea
shr
pop
ret
push
push
push
call
cmpsl
out
push
add
add
jns
rcll
pop
mov
xchg
testl
sti
add
roll
push
add
cmpsb
xchg
mov
add
jnp
mov
outsl
add
mov
in
hlt
pop
push
push
sub
add
pop
mov
push
ror
rol
shr
pop
add
push
push
push
push
push
lea
push
push
push
push
push
call
pop
xchg
xchg
pop
add
fists
add
fiadds
add
enter
imul
test
add
add
add
xchg
add
add
vdivpd
cltd
push
stc
sub
pop
push
push
push
push
push
push
push
push
lea
push
call
add
mov
add
fidivrs
bound
jbe
fldl
add
pop
add
stc
add
pop
add
mov
popf
imul
add
add
add
jmp
std
add
js
add
loope
push
add
fistpll
mov
int
add
lret
pop
add
add
add
pop
in
sti
sub
pop
push
push
push
push
push
push
lea
push
lea
push
push
push
call
add
mov
add
pusha
mov
sti
jae
add
fdivrl
lahf
jp
cwtl
add
jecxz
jle
add
add
int3
lods
add
fwait
lret
mov
loopne
bound
add
hlt
sti
add
sub
add
mov
cmc
add
add
imul
in
fdivr
lcall
push
push
push
call
add
shll
imul
je
jmp
add
repnz
add
mov
sbbl
fcmovnb
jmp
in
hlt
pop
push
push
add
add
not
shr
pop
mov
push
lea
push
push
push
push
call
add
std
mov
add
add
add
loope
js
jne
lcall
fwait
push
lcall
jle
rol
add
test
sti
in
lret
call
lcall
inc
cmp
shl
pop
sub
push
lea
rol
pop
mov
push
push
push
push
lea
push
lea
push
push
push
call
add
in
add
clc
add
push
add
sti
push
add
cmc
aad
filds
sub
add
lcall
add
add
mov
add
add
ja
add
rcl
std
std
test
sahf
add
loopne
shr
push
ror
pop
add
push
dec
pop
mov
push
inc
pop
mov
add
push
lea
ror
rol
pop
add
push
lea
ror
add
pop
mov
push
inc
rol
not
xor
pop
mov
cmp
jne
push
shr
inc
not
pop
cmp
jne
push
lea
push
push
push
push
push
call
add
add
add
add
in
add
fdiv
add
add
addb
std
insb
in
lds
ljmp
add
fcmove
in
imul
clc
add
xlat
mov
add
pop
mov
movl
push
sub
rol
pop
jmp
push
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
mov
movsb
add
test
out
add
testl
add
add
push
xchg
add
jp
add
add
fbld
movsl
lea
add
fcoml
imul
mov
add
lcall
inc
cld
push
push
push
push
push
lea
push
push
push
call
les
add
mov
lahf
add
push
add
out
add
fildl
add
mov
mov
mov
ljmp
add
loopne
add
out
pushf
mov
xchg
add
add
roll
test
mov
jae
add
add
in
loopne
lcall
push
or
sub
jne
push
push
call
add
std
icebp
cld
mov
test
outsl
add
in
add
add
add
add
int3
add
add
add
add
mov
pop
ljmp
add
addb
add
add
int
add
add
ret
jp
jo
add
cmc
sub
pop
mov
movl
push
push
call
imul
add
popa
add
add
push
add
mov
mov
add
push
repnz
mov
add
addr16
jge
icebp
add
mov
push
add
in
jo
lods
mov
mov
mov
js
flds
test
add
sahf
add
lods
popfw
add
jns
add
movsl
test
pop
jmp
mov
push
push
push
push
push
push
push
push
push
call
xchg
in
mov
stos
add
add
sahf
add
jecxz
mov
ljmp
movsl
ret
je
cld
lea
add
push
data16
add
faddp
add
jmp
lret
add
mov
mov
add
jp
nop
add
nop
mov
add
push
shr
pop
cmp
jne
mov
push
sub
xor
pop
movl
push
lea
push
push
push
push
push
lea
push
push
call
test
mov
stc
add
add
mov
mov
add
add
add
add
add
lahf
test
lcall
add
adcl
mov
add
xchg
imul
lcall
or
push
push
push
push
push
call
ja
popf
jns
cli
add
add
pop
jns
add
adcb
shrl
xchg
lea
add
testb
lock
popa
idiv
shl
add
mov
fldl
push
insb
xlat
js
add
xchg
add
call
cmpw
jne
push
lea
push
lea
push
push
lea
push
push
push
push
push
push
call
lods
ja
add
add
push
mov
addb
push
outsl
add
add
add
add
popl
pop
je
add
mov
fcomps
inc
adc
mov
fs
mov
add
rol
pop
jmp
pushl
push
push
lea
push
push
lea
push
lea
push
call
cmpsl
mov
add
add
push
cmpsb
test
aad
add
int
test
xchg
add
cmc
adcl
add
mov
jno
imul
ret
add
mov
nop
add
mov
mov
call
or
ror
xor
pop
mov
mov
push
push
shr
lea
push
push
pop
add
add
shr
sub
lea
pop
pop
push
not
pop
push
push
lea
push
push
push
push
lea
push
push
call
mov
add
add
clc
iret
add
add
xchg
add
mov
into
add
add
add
mov
jae
xchg
add
add
xchg
cld
xchg
jmp
add
test
push
add
mov
jmp
shrb
sub
pop
call
push
xor
shl
pop
cmpl
je
push
push
sub
add
xor
push
or
not
add
sub
sub
pop
sub
dec
shl
pop
push
sub
pop
push
call
push
add
lea
pop
cmpl
je
push
push
xor
push
sub
add
sub
xor
ror
xor
ror
pop
not
ror
add
pop
push
push
push
push
lea
push
push
call
lock
add
jle
push
add
fidivrs
add
out
add
mov
add
add
add
movsl
movsl
mov
clc
pusha
fwait
mov
test
add
fiaddl
jne
scas
into
addr16
leave
mov
push
push
ror
pop
call
cmpl
je
push
push
xor
push
or
inc
add
xor
sub
sub
sub
inc
pop
pop
push
inc
add
sub
pop
push
push
add
pop
call
cmpl
je
push
push
dec
inc
push
or
not
add
inc
sub
not
dec
dec
shr
pop
inc
pop
push
shr
add
pop
push
call
push
sub
pop
cmpl
je
push
push
lea
rol
ror
push
xor
add
add
sub
sub
xor
add
shl
pop
add
pop
push
add
shr
pop
push
call
push
add
lea
sub
pop
cmpl
je
push
push
not
push
or
not
add
shr
xor
sub
sub
add
pop
ror
rol
pop
push
lea
push
call
xchg
stos
pop
std
add
xlat
cmc
add
jle
movsl
lret
pusha
add
pop
pop
add
jo
add
jle
add
add
mov
push
jecxz
xchg
add
jb
add
jb
add
pop
in
std
fsubl
js
mov
mov
lcall
push
xor
sub
pop
call
push
push
push
push
push
push
call
lret
add
je
pusha
cmc
in
add
rcr
add
rol
int
sarb
mov
rolb
loope
jns
shll
add
xchg
add
fcompl
in
call
or
int3
je
push
push
lea
shl
push
xor
add
rol
ror
add
sub
dec
rol
sub
xor
pop
lea
pop
push
push
push
call
icebp
imul
cli
add
add
lods
push
out
xlat
int
mov
pop
jnp
add
cwtl
add
stos
hlt
add
add
mull
bound
data16
jnp
add
sarb
add
test
add
add
jb
sahf
mov
test
lret
aam
insb
add
lcall
push
push
lea
push
push
push
lea
push
push
push
push
call
add
jo
add
pop
lods
into
add
mov
add
add
imul
mov
cmc
add
sti
icebp
add
add
out
add
cwtl
imul
add
cmpsb
cmpsb
mov
test
addb
xchg
loopne
in
add
mov
xchg
xchg
xchg
jno
add
add
jbe
add
cmpl
je
push
push
add
dec
inc
push
sub
add
inc
sub
sub
pop
inc
pop
push
lea
push
push
push
push
push
push
call
push
push
fs
mov
add
cltd
ljmp
add
stos
mov
cmc
add
cmpsb
rcr
add
movsb
faddl
add
mov
aad
jl
stos
add
add
out
std
lds
jne
pushf
add
andb
jae
add
mov
mov
lcall
push
push
push
push
call
popl
jle
add
push
add
add
add
lods
add
add
add
andb
mov
mov
add
mov
lcall
subl
add
pop
push
push
push
push
call
int3
data16
hlt
js
mov
cwtl
pop
push
pop
add
fwait
sahf
add
add
add
popa
insb
out
fdivr
sarb
add
addl
add
add
std
add
mov
cli
add
add
add
add
add
add
add
cmp
rol
je
push
push
sub
push
or
inc
add
inc
sub
sub
add
pop
ror
sub
pop
push
dec
sub
ror
sub
pop
push
push
rol
sub
not
pop
call
push
lea
push
call
mov
out
mov
mov
aam
add
hlt
add
mov
fadds
mov
add
add
mov
add
jb
adcl
jnp
cmpsb
pop
pop
add
clc
lcall
cmp
test
add
add
jae
mov
push
and
add
sub
not
sub
pop
rol
pop
push
push
push
push
push
lea
push
lea
push
call
cli
shl
xchg
add
scas
imul
je
cltd
add
leave
mov
jmp
sahf
add
jmp
add
in
leave
test
xchg
cmp
fdivr
movsl
add
add
add
clc
mov
push
lcall
push
push
push
push
call
int
add
iret
jo
add
cmpl
add
mov
push
add
add
add
in
fistps
add
add
lahf
pop
push
push
add
ja
cld
pop
add
add
mov
aad
outsl
add
add
mov
in
jne
mov
in
lock
call
push
push
push
push
call
pop
mov
roll
int
rcl
fdivrp
std
mov
add
imul
mulb
add
xchg
mov
add
sub
pop
cmpl
je
push
push
shl
ror
not
push
or
not
add
dec
add
lea
sub
ror
pop
ror
sub
pop
push
push
push
push
push
push
lea
push
lea
push
call
insb
ljmp
popa
jb
mov
testl
jmp
call
jne
mov
jae
roll
add
sub
pop
push
push
push
push
push
push
push
push
call
xacquire
add
add
cld
jecxz
add
add
pop
pop
add
mov
ret
add
mov
inc
sub
add
les
je
push
push
lea
add
shr
push
sub
add
lea
shl
sub
sub
add
add
not
pop
rol
shl
pop
push
sub
ror
pop
push
push
pop
call
push
push
push
push
push
call
filds
mov
add
add
add
popa
push
test
add
sarb
jecxz
xchg
scas
jno
add
add
int
mov
add
clc
ljmp
add
push
jp
in
in
pop
cmpl
jne
push
dec
lea
pop
mov
movl
push
not
dec
not
pop
jmp
xor
push
add
shr
xor
pop
pop
push
push
push
lea
push
push
call
add
add
jmp
jle
mov
stos
xlat
mov
fwait
add
jns
ret
xchg
pusha
nop
out
add
fst
outsl
add
clc
add
add
add
add
mov
add
mov
add
fwait
lret
scas
add
lods
add
cmpl
in
in
lcall
push
inc
shr
dec
pop
pop
push
shl
sub
pop
pop
push
not
inc
pop
leave
ret
push
not
shr
not
pop
push
push
lea
push
push
call
xchg
xchg
mov
add
add
xlat
add
jae
les
nop
js
data16
cmc
cwtl
cld
pop
xchg
add
test
add
insb
jp
divl
sahf
lds
add
sub
pop
mov
push
lea
push
push
push
push
lea
push
lea
push
lea
push
call
addl
add
xchg
add
arpl
add
add
pusha
add
lods
aad
mov
add
scas
lds
mov
push
hlt
add
add
push
add
in
push
add
not
sub
xor
pop
cmpl
jne
push
push
dec
add
sub
push
or
not
add
add
add
sub
xor
not
lea
pop
sub
pop
push
sub
shr
pop
pushl
push
lea
push
call
add
mov
mov
gs
add
add
pop
add
mov
scas
add
add
add
jne
add
mov
add
pop
fisttpll
add
add
add
lcall
pop
sub
add
jecxz
fsubs
push
push
push
lea
push
push
lea
push
lea
push
push
call
mov
jmp
pop
push
incb
out
movsl
popf
pop
add
add
add
les
call
mov
lcall
add
incb
add
cli
iret
filds
in
shll
aam
leave
add
in
fcompl
rclb
xchg
incl
fdivs
in
push
lea
push
push
push
call
xchg
add
add
int
ja
cld
add
mov
add
add
add
loopne
call
insb
jae
add
mov
add
stos
push
add
add
mov
add
add
pop
jmp
push
push
push
lea
push
push
lea
push
lea
push
call
xchg
jb
in
add
mov
testb
enter
add
out
int3
lds
add
je
add
lret
push
jl
add
add
scas
pop
add
test
add
cmpsb
cwtl
hlt
sub
pop
cmpl
je
push
not
shr
pop
cmpl
jne
push
push
push
push
push
push
push
push
push
call
out
add
add
add
add
mov
int3
add
mov
stc
outsl
div
jae
mov
add
jecxz
add
in
add
add
cld
out
rolb
mov
ret
pop
add
aad
add
mov
lcall
inc
or
js
testb
lea
push
push
push
push
push
push
lea
push
call
cli
movsl
push
imul
add
xchg
add
popf
imul
lea
mov
movsl
je
add
add
in
fcomps
test
call
ret
push
push
push
push
push
push
lea
push
push
push
call
fcoml
andl
add
lcall
mov
jle
fldl
xor
mov
iret
add
sti
add
in
push
add
add
lcall
notb
add
push
push
push
lea
push
push
lea
push
push
push
push
lea
push
call
add
mov
frstor
add
add
stc
pop
pop
add
add
lock
cmpsb
hlt
fisttpll
movb
add
add
xchg
push
test
add
add
roll
lahf
add
add
mov
in
fdivr
lcall
jge
add
test
add
push
push
add
push
sub
add
ror
add
inc
rol
sub
add
dec
add
rol
pop
shl
pop
push
sub
pop
pushl
push
push
push
push
push
push
push
push
push
call
add
add
fwait
lea
mov
lret
into
mov
ja
cwtl
outsl
pusha
xchg
fsub
stos
mov
jge
xchg
xchg
pop
leave
arpl
push
aam
push
xchg
sti
scas
mov
outsl
xchg
pop
imul
aam
push
fs
add
call
push
push
push
push
push
push
push
lea
push
lea
push
push
call
add
push
mov
jle
jl
add
add
add
icebp
xchg
fstps
jns
add
jle
lret
int
push
pop
add
mov
add
add
push
add
lcall
add
add
add
add
add
stos
fldl
add
add
pop
add
pop
call
jmp
push
lea
push
call
fwait
add
xchg
add
mov
stos
cwtl
xchg
mov
pop
add
filds
popa
add
sub
pop
cmpl
jne
mov
push
push
push
push
call
add
fstpl
add
add
add
scas
ret
xchg
enter
push
scas
pop
xchg
js
fdivr
add
add
xchg
add
push
add
out
loop
cmc
fisttpl
roll
add
add
add
add
mov
add
lock
mov
push
push
push
shr
push
and
add
dec
lea
add
sub
add
inc
add
ror
pop
shr
sub
not
pop
push
push
push
push
push
lea
push
push
call
push
out
add
add
add
jns
add
add
push
out
in
jbe
loope
push
add
push
pop
pop
push
jns
in
in
lcall
jne
push
ror
pop
call
push
dec
inc
pop
call
push
push
rol
sub
push
push
pop
add
add
dec
sub
not
not
pop
not
dec
lea
shr
pop
push
not
rol
pop
pushl
push
not
pop
call
push
push
push
push
push
push
call
fiadds
add
push
in
jne
jne
movsb
bound
fadds
stos
fmull
add
add
add
add
add
sub
pop
call
push
push
lea
push
or
inc
add
inc
lea
sub
ror
shr
dec
pop
rol
sub
not
pop
push
push
push
push
lea
push
push
call
add
pop
add
add
jmp
add
in
add
cwtl
xchg
add
stc
mov
add
scas
rcl
add
test
jne
sub
pop
pushl
push
rol
pop
call
call
push
push
rol
rol
shr
shr
push
or
inc
add
dec
dec
sub
xor
inc
not
rol
pop
sub
sub
ror
pop
push
pop
pushl
push
xor
xor
pop
call
push
inc
not
shl
pop
call
push
push
sub
shl
sub
push
or
not
add
add
inc
sub
sub
inc
shr
not
pop
lea
add
dec
sub
pop
push
push
lea
push
push
push
push
push
call
mov
mov
jp
mov
add
mov
jbe
pop
cmpsl
in
add
add
int
pop
add
add
push
xchg
add
add
add
add
jne
push
inc
pop
call
push
push
push
call
mov
mov
push
mov
xchg
leave
sahf
mov
cltd
add
mov
sahf
lods
iret
jnp
add
add
aam
add
pushf
scas
add
jecxz
loopne
cmc
stc
add
in
hlt
lcall
shrb
jno
mov
inc
lea
inc
push
and
add
sub
add
sub
add
sub
not
pop
add
sub
add
pop
push
add
sub
pop
pushl
push
lea
push
lea
push
call
pop
add
add
add
add
jle
jo
out
add
add
js
fdivl
add
lcall
cld
add
add
add
push
add
add
add
movsl
add
lcall
aam
add
push
ror
sub
pop
call
push
push
sub
push
sub
add
lea
xor
xor
sub
sub
shl
pop
shl
add
shl
pop
push
lea
push
push
push
lea
push
lea
push
push
push
push
lea
push
call
add
mov
add
idiv
add
add
add
test
movsl
mov
add
loope
push
add
jae
add
movl
je
stos
add
nop
ljmp
add
add
add
mov
add
in
fdivr
lcall
jne
call
push
shr
add
ror
pop
call
push
push
ror
shr
add
push
or
inc
add
ror
add
add
sub
pop
rol
add
pop
push
ror
pop
pushl
push
sub
inc
add
pop
call
call
push
push
sub
shl
xor
ror
push
xor
add
sub
shl
ror
sub
sub
dec
pop
rol
rol
xor
pop
push
rol
pop
pushl
push
sub
rol
dec
pop
call
push
lea
ror
xor
pop
call
push
push
shr
not
push
or
inc
add
sub
lea
sub
lea
pop
xor
rol
pop
push
shr
sub
pop
pushl
call
push
push
lea
push
push
call
pushf
jae
add
ljmp
fsubl
scas
enter
add
jns
aad
add
push
add
je
bound
fadds
pop
push
mov
add
add
pop
leave
jecxz
lahf
push
add
aam
add
mov
aam
ljmp
add
push
add
in
lock
lea
push
lea
push
push
lea
push
push
push
call
roll
adcb
mov
mov
mov
les
mov
cltd
add
add
lods
addb
mov
mov
into
mov
std
outsl
int
ret
in
call
push
push
dec
xor
lea
shr
pop
call
push
push
sub
push
sub
add
add
sub
sub
ror
pop
xor
xor
pop
push
push
push
push
push
push
push
call
lahf
add
xchg
addb
flds
mov
pushf
add
lret
pop
lret
add
add
add
popa
in
mov
mov
sahf
add
mov
hlt
icebp
lcall
js
add
add
arpl
add
lcall
add
in
lcall
jne
push
push
push
call
shl
js
ret
out
out
jmp
jle
push
add
imul
jnp
sahf
std
ret
loop
add
add
fcomps
popf
negb
jo
add
sahf
test
je
push
jge
in
jns
out
add
popf
add
add
movsb
pusha
add
lcall
inc
sbb
lea
push
call
add
push
add
add
sti
out
ljmp
fstl
add
movl
je
add
rolb
jecxz
addl
add
pop
add
add
fdivrs
in
hlt
lcall
shrb
pop
cltd
out
dec
rol
push
sub
add
shr
shr
sub
inc
ror
ror
pop
add
add
not
shr
pop
push
dec
pop
pushl
push
push
push
push
push
lea
push
lea
push
call
mov
add
sti
add
bound
add
mov
out
push
jne
std
add
add
push
lahf
add
mov
flds
lret
cld
je
add
hlt
test
cld
sub
add
nop
add
pop
sub
pop
call
push
push
push
lea
push
call
add
xlat
add
addr16
push
mov
jmp
addb
stos
in
lock
loopne
add
rorl
test
push
mov
lahf
fldt
add
imul
adc
add
add
add
mov
popl
loopne
add
add
jns
imul
jns
mov
add
lcall
shrb
js
stos
push
lea
push
xor
add
add
sub
not
inc
pop
inc
pop
push
lea
push
push
lea
push
lea
push
lea
push
push
call
mov
movsb
cld
add
add
shl
add
add
xchg
shll
cld
clc
add
add
lret
add
roll
in
into
ja
jl
mov
mov
add
mov
add
add
pop
add
add
mov
jb
mov
add
testb
or
sub
not
add
pop
call
push
push
add
push
and
add
add
inc
ror
dec
sub
dec
sub
pop
add
pop
push
push
push
push
push
lea
push
lea
push
lea
push
call
add
add
xchg
add
jne
in
rolb
add
mov
aad
jge
mov
mov
mov
in
loopne
lcall
jne
push
sub
pop
call
push
push
rol
push
or
inc
add
ror
sub
shl
shl
pop
lea
pop
push
push
lea
add
push
or
not
add
inc
inc
sub
sub
rol
lea
pop
lea
sub
pop
push
lea
push
lea
push
lea
push
push
push
push
push
lea
push
lea
push
call
add
add
lods
mov
addl
add
add
mov
add
test
icebp
les
in
fdivr
lcall
rcrb
push
push
push
push
lea
push
call
out
add
iret
fwait
add
add
pop
mov
pop
add
in
test
ret
add
bound
add
add
jns
int
add
add
add
jecxz
xchg
cwtl
ljmp
pop
dec
jne
push
add
shl
dec
pop
call
mov
push
rol
dec
shr
shr
pop
int
lea
push
push
not
lea
push
and
add
not
sub
shl
sub
pop
shr
pop
push
push
push
push
lea
push
call
mov
in
push
add
add
add
add
into
rolb
in
xchg
imul
fistl
add
add
add
lock
loope
add
add
les
clc
mov
mov
scas
rolb
add
sub
pop
pushl
call
push
add
xor
pop
push
push
add
add
pop
call
push
push
ror
push
push
pop
add
shr
shr
ror
sub
rol
sub
pop
ror
shl
pop
push
lea
push
push
push
lea
push
lea
push
lea
push
lea
push
push
push
call
mov
imul
add
leave
add
add
mov
add
ret
roll
call
add
stos
add
sub
pop
pushl
push
lea
push
lea
push
push
lea
push
push
push
push
call
je
notb
lcall
add
bound
jno
add
add
add
add
pop
fiadds
pop
mov
add
add
mov
pop
ret
add
add
xchg
xlat
mov
add
shrl
sub
pop
call
call
push
push
push
lea
push
lea
push
call
add
mov
add
cli
mov
lock
mov
add
popa
mov
jno
cwtl
faddl
add
movsb
leave
add
add
arpl
into
add
xchg
cmpsl
xchg
xchg
add
lods
mov
bound
int
lock
leave
jb
add
push
cmc
xchg
leave
add
iret
add
in
int3
xchg
add
mov
push
shr
pop
lea
push
push
rol
add
push
push
pop
add
lea
sub
xor
shl
pop
shl
xor
pop
push
ror
dec
inc
pop
pushl
call
push
push
push
push
call
idivl
xchg
pop
lea
mov
xorl
out
xchg
add
add
cli
push
cltd
xchg
stos
cmc
roll
add
add
out
call
in
jecxz
add
rcl
add
lea
push
push
shr
xor
rol
pop
push
push
push
push
push
push
lea
push
push
call
fcmovbe
in
mov
outsl
stos
enter
add
imulb
cmpsb
in
out
scas
jno
add
loopne
stc
add
add
call
in
add
repnz
add
icebp
add
add
add
mov
add
std
leave
jnp
in
in
push
push
rol
shl
sub
pop
pushl
push
push
add
lea
push
xor
add
not
shl
sub
shr
pop
not
inc
pop
push
lea
rol
pop
push
push
push
call
xchg
add
add
add
shll
ret
mov
add
cmpsb
mov
cmpsl
add
add
test
addl
add
push
xchg
addb
aam
ja
in
fwait
iret
add
sub
pop
call
push
push
dec
sub
not
add
push
or
inc
add
rol
sub
lea
pop
shl
rol
ror
xor
pop
push
add
pop
pushl
call
push
rol
xor
pop
push
call
push
push
inc
dec
push
or
not
add
shr
sub
xor
sub
not
pop
dec
rol
sub
pop
push
lea
pop
pushl
push
xor
shr
pop
call
push
shl
xor
pop
call
pushl
push
shl
lea
pop
mov
jmp
push
push
xor
xor
push
or
not
add
add
not
sub
dec
shr
dec
pop
not
not
sub
shr
pop
push
push
call
push
add
xchg
in
mov
out
add
test
in
push
int
jno
mov
ret
fsubrp
clc
mov
lods
add
arpl
add
fdiv
push
mov
mov
add
faddl
mov
jl
fcmove
push
sub
pop
pushl
push
push
lea
push
push
lea
push
push
push
call
add
add
or
add
xchg
push
add
add
push
add
add
pop
iret
add
push
add
push
add
add
mov
mov
lcall
int3
adc
add
push
push
push
push
lea
push
lea
push
push
push
call
push
push
add
in
add
jae
mov
add
cmc
notb
jne
add
add
lods
pop
lock
in
loopne
lcall
shrb
pop
rcl
push
lea
add
xor
push
and
add
not
dec
inc
sub
inc
rol
pop
rol
ror
not
pop
push
push
push
push
lea
push
push
push
push
call
add
stos
aad
push
add
push
jle
fcomip
mov
insb
add
add
xchg
stos
add
test
fiadds
mov
xchg
xchg
add
mov
add
add
in
add
add
add
add
les
in
loopne
pushl
push
push
lea
push
push
push
push
call
scas
add
fwait
add
add
int3
push
add
add
addb
mov
add
add
add
call
movsl
cmc
lods
scas
add
pop
pop
mov
add
add
stos
jmp
hlt
mov
add
push
add
sub
pop
call
push
push
push
push
call
outsl
test
add
jnp
call
add
xchg
addb
enter
add
fst
add
testb
jo
test
push
add
add
stos
lods
fs
add
jge
xchg
test
in
stos
out
movsw
mov
stos
iret
iret
add
xchg
sub
pop
push
push
push
push
push
push
lea
push
push
call
aad
add
pop
shlb
add
cmpsl
jne
lcall
add
add
jmp
test
pop
jge
sub
pop
call
leave
push
push
call
shlb
stos
stos
mov
add
mov
mov
mov
add
mov
add
hlt
mov
jne
add
push
in
xchg
sub
pop
add
pop
push
push
push
push
lea
push
push
lea
push
push
call
sahf
fnstsw
add
add
cli
les
add
ljmp
add
nop
add
add
clc
aad
shr
mov
notb
enter
jnp
jo
push
sub
pop
pop
pop
push
lea
push
push
push
push
push
lea
push
push
push
lea
push
call
jp
xchg
cmc
add
int
leave
mov
test
mov
mov
add
add
popf
push
or
xchg
xchg
push
popl
pop
testb
add
add
add
sahf
xchg
testl
ficoms
pop
xor
push
pop
inc
push
push
push
push
lea
push
push
call
fwait
add
mov
lock
lock
mul
cli
add
loopne
add
add
clc
out
ror
add
scas
add
pop
roll
pop
ret
push
push
push
push
push
push
lea
push
lea
push
lea
push
lea
push
call
add
rolb
jge
push
mov
mov
mov
push
mov
aad
out
bound
mov
push
add
fildl
pop
mov
xchg
nop
add
add
xchg
cltd
stos
cld
add
mov
sub
pop
leave
push
add
lea
pop
ret
push
dec
inc
xor
pop
push
push
lea
push
push
lea
push
push
push
push
lea
push
push
push
call
add
add
add
cmpsb
aad
add
out
add
mov
call
add
cmc
add
xchg
cld
add
add
add
data16
repnz
add
lahf
jge
add
mov
test
add
cmpsl
lea
mov
push
leave
jb
add
in
fiadds
in
pusha
int3
jb
mov
mov
cwtl
call
lcall
in
push
dec
lea
pop
cmpl
jne
mov
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
mov
add
add
mov
cli
stc
xchg
lock
add
pop
popl
movl
add
addr16
cld
add
mov
mov
cwtl
jb
add
add
add
jmp
stos
mov
scas
frstpm(287
xchg
add
sub
pop
jmp
push
push
push
push
push
push
push
push
push
call
add
ljmp
pop
push
fwait
add
out
lea
jp
movsl
add
lods
add
loopne
test
pop
add
jle
add
jo
icebp
jp
add
add
ret
mov
push
jno
out
test
add
mov
inc
or
loopne
push
lea
push
lea
push
push
push
push
call
push
add
fiadds
add
mov
shrb
mov
push
fcomp
shlb
add
mov
test
add
xchg
add
out
mov
add
jecxz
push
aad
movb
jecxz
in
sub
pop
xor
xor
push
shr
inc
pop
add
push
push
push
push
lea
push
call
in
add
add
add
pop
movsb
add
add
mov
out
out
test
jno
clc
add
fwait
std
clc
lret
add
add
mov
add
out
rcrl
mov
roll
ja
add
add
pop
add
add
fwait
sub
pop
xor
push
lea
push
push
call
mov
add
test
flds
jecxz
add
adcb
fildll
pop
divb
add
add
sub
pop
dec
sub
push
dec
add
pop
jmp
push
ror
sub
inc
pop
sub
push
add
pop
pushl
push
push
lea
push
push
lea
push
push
push
push
call
add
addb
andl
add
mov
add
add
add
pop
mov
cltd
add
add
imul
int3
add
testl
add
roll
add
mov
sub
pop
pop
sub
push
lea
push
call
add
push
push
add
add
jne
out
jns
add
lock
idivb
add
add
pop
add
jns
test
add
lret
add
out
add
pop
test
ret
cmpsb
movsb
add
in
clc
pop
cmp
jne
push
shr
sub
pop
mov
push
shl
rol
shr
sub
pop
lea
push
xor
inc
pop
sub
push
xor
rol
pop
mov
push
shr
not
ror
pop
shr
add
push
push
push
push
lea
push
call
pusha
add
fwait
add
nop
add
jl
add
mov
add
add
add
pusha
add
add
mov
sub
pop
sub
push
push
push
push
push
push
lea
push
push
lea
push
call
fdivs
pop
out
out
mov
add
add
scas
add
add
ret
add
xchg
mov
jmp
fbstp
push
lahf
rolb
add
loope
ja
fiaddl
mov
pushf
jbe
lcall
mov
stos
xchg
movb
add
push
add
add
add
jecxz
mov
pop
pushl
push
not
sub
pop
pop
push
push
lea
push
call
add
out
int
push
pop
popl
cwtl
leave
add
add
add
rolb
mov
add
pop
add
lret
cmpsb
stos
mov
imul
rorb
mov
std
add
aad
frstor
sub
pop
shr
push
add
shl
rol
pop
and
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
add
pop
scas
addr16
pushf
imul
jp
out
add
int
push
add
add
mov
ljmp
scas
icebp
add
jge
add
add
mov
lahf
mov
push
out
add
add
add
jecxz
add
xchg
iret
cmpsb
jmp
mov
std
add
add
add
sahf
jl
sub
pop
sub
push
shl
dec
xor
pop
cmp
jne
push
push
push
push
call
mov
add
add
imul
xchg
incb
cli
in
add
mov
add
jae
fdiv
add
add
lcall
in
repnz
add
clc
push
add
sti
add
subl
mov
pushf
add
imul
repnz
add
xchg
out
arpl
add
sub
pop
leave
ret
push
push
push
push
call
add
shll
out
cmpsb
add
xchg
movl
pop
mov
push
push
fidivl
push
cmc
mov
push
add
push
lret
mov
hlt
jge
cmc
enter
mov
sub
pop
push
mov
push
push
push
push
lea
push
lea
push
push
push
call
lret
add
cmpsb
pop
add
mov
add
add
fisubrs
jns
xchg
mov
pop
out
xchg
cwtl
add
imul
cli
test
mov
shrl
in
loopne
lcall
cld
push
push
shr
pop
push
push
push
lea
pop
push
push
push
push
push
lea
push
push
push
push
push
push
call
add
add
aad
push
add
out
add
add
mov
ljmp
push
lea
stos
xlat
add
add
add
arpl
add
add
add
sti
add
scas
ljmp
in
fdivr
lcall
push
push
push
push
push
push
call
ljmp
xchg
xlat
mov
mov
cmpsb
test
pusha
jbe
add
lock
xchg
movsl
jbe
xchg
imul
add
movsb
add
add
add
add
add
mov
mov
mov
mov
sub
pop
mov
push
push
lea
push
push
lea
push
push
push
push
push
push
call
add
add
add
add
mov
jmp
ja
lret
ficompl
aam
ret
add
add
fbld
add
mov
mov
add
lea
addl
insb
pop
mov
out
xchg
add
std
sub
pop
lea
push
add
dec
rol
pop
sub
push
pop
mov
push
inc
dec
pop
shr
push
push
lea
push
push
lea
push
lea
push
push
lea
push
push
lea
push
call
jle
add
add
jge
add
add
int
je
add
filds
add
add
push
fiadds
lea
pushf
jo
add
add
fimull
add
cli
shr
pop
add
mov
push
add
rol
pop
add
push
ror
shr
dec
sub
pop
xor
push
xor
shr
add
pop
mov
push
ror
not
pop
and
push
add
pop
rol
push
push
push
push
push
push
lea
push
call
add
mov
arpl
in
mov
in
aam
add
mov
lcall
add
add
add
fisubl
jne
iret
jmp
add
testl
in
in
lcall
rolb
add
push
ljmp
dec
push
call
jmp
mov
add
insb
addl
push
test
add
rolb
roll
add
roll
in
in
inc
cmpb
jne
push
inc
pop
add
push
push
push
push
push
call
xchg
jmp
pop
add
jle
xchg
cltd
xchg
les
add
add
popl
xchg
fsubs
push
clc
gs
ljmp
add
popf
add
push
jl
push
pop
arpl
mov
in
in
lcall
inc
or
test
add
add
sub
cmpsb
adcl
gs
push
push
lea
push
push
push
call
xchg
imul
bound
push
mov
jecxz
scas
pusha
add
fstpl
mov
in
add
add
test
mov
repnz
out
push
lahf
jne
add
hlt
add
add
add
push
shr
rol
pop
cmpl
jne
push
push
call
les
mov
lock
call
lret
add
add
add
cld
loope
js
xchg
mov
add
add
mov
loope
add
add
rolb
ret
mov
nop
add
lea
add
add
movl
test
in
clc
lcall
rclb
push
call
lea
add
out
add
stc
add
add
add
mov
xchg
add
add
test
jbe
add
mov
add
leave
scas
test
loopne
sahf
jnp
add
push
add
xchg
push
push
add
in
hlt
lcall
pop
push
push
push
call
mov
cli
pop
add
add
stos
fcmovnu
add
jb
add
add
mov
fsubp
add
add
nop
lods
jge
imul
call
mov
icebp
mov
add
add
jmp
add
add
add
add
lds
add
stos
mov
rorb
hlt
pop
pop
push
push
call
add
mov
ror
jl
cld
add
sarl
mov
fdiv
add
add
lret
mov
jmp
add
add
add
add
add
ffreep
ret
out
faddl
fwait
add
add
mov
add
mov
pop
flds
repnz
in
clc
pop
pop
pop
push
push
lea
push
push
push
push
push
push
push
call
lock
add
imul
add
add
add
clc
add
add
add
add
in
add
add
lahf
add
pop
leave
push
push
push
push
push
lea
push
call
loop
mov
bound
sbbl
add
out
add
lea
loopne
add
test
lea
jnp
add
popf
add
add
addb
add
add
testb
mov
add
lcall
or
push
shr
pop
mov
push
inc
xor
ror
pop
add
push
lea
push
lea
push
push
push
push
push
push
push
push
call
add
add
popf
jp
in
test
adcb
mov
fstpt
jbe
iret
xchg
add
add
add
sub
pop
mov
push
not
dec
rol
pop
push
push
push
push
push
call
add
add
jne
js
gs
aad
enter
aad
add
add
add
data16
jbe
add
mov
les
push
stos
stos
lds
pushf
mov
add
add
imul
mov
mov
add
insb
add
add
std
add
in
lock
mulb
pop
push
push
call
sti
add
test
negl
add
add
add
add
pusha
add
push
mov
lcall
inc
call
push
push
call
loop
leave
mov
mov
iret
add
jmp
cwtl
add
jecxz
xchg
add
outsl
enter
shr
push
add
adc
push
add
ret
mov
movsl
loopne
lock
icebp
xchg
add
mov
add
lods
add
lcall
pop
icebp
call
rcrl
add
add
pop
pop
push
push
push
push
push
call
loope
add
scas
jle
add
mov
jo
mov
jbe
xchg
add
xchg
mov
add
add
jecxz
iret
add
add
add
add
lock
add
jl
add
out
add
add
outsl
jge
push
in
pop
pop
pop
push
add
sub
not
pop
pop
pop
push
lea
push
lea
push
push
lea
push
push
push
push
push
call
add
xchg
mov
add
add
add
cmp
add
mov
add
lods
add
push
add
ficoml
add
testl
add
mov
add
ljmp
insb
add
push
add
cld
icebp
pop
adcl
mov
lods
lahf
cltd
sub
pop
leave
push
lea
rol
add
pop
ret
push
push
shl
inc
sub
pop
mov
add
push
push
push
call
add
into
add
add
add
out
add
mov
add
stos
loope
fistpll
add
mov
xchg
roll
add
add
testb
clc
bound
add
mov
push
js
imull
pop
xchg
add
mov
sub
pop
push
push
push
lea
rol
add
ror
pop
push
push
inc
pop
push
push
push
lea
push
call
mov
stos
add
push
fildl
add
add
pop
mov
add
add
cltd
xchg
add
mov
add
push
add
in
hlt
lcall
pop
or
iret
lea
push
push
push
call
add
add
add
add
lds
xchg
add
add
add
add
mov
iret
add
add
add
in
lret
add
sub
pop
push
push
pop
pop
push
lea
push
push
push
lea
push
call
xlat
add
shr
add
xchg
add
pop
mov
ljmp
fdivr
pushf
add
fs
test
add
stos
mov
pop
mov
in
in
lcall
push
cmp
add
lea
pop
sub
push
push
push
push
lea
push
push
call
stos
add
idivl
icebp
aad
testb
pop
add
add
in
add
add
add
test
cwtl
data16
add
ljmp
pop
lcall
movl
add
add
add
loop
mov
lock
add
jb
addb
sub
pop
mov
push
not
shl
sub
not
pop
shr
push
push
push
lea
push
lea
push
call
mov
mov
pop
add
add
std
add
fiaddl
add
add
add
add
addl
push
data16
cmpsl
aad
pop
loop
leave
mov
outsl
add
add
outsl
popa
nop
add
gs
pop
add
push
sub
add
xor
pop
mov
add
push
push
push
push
call
iret
add
mov
scas
pop
add
add
insb
in
add
mov
notl
push
popa
pop
addb
add
add
fwait
in
loope
jo
add
in
andb
ja
leave
ror
add
std
mov
mov
out
mov
lds
jmp
add
lcall
jae
push
shr
shl
pop
popl
mov
push
inc
dec
inc
add
pop
add
push
lea
push
push
push
push
push
call
out
cmc
pushf
movl
mov
add
loop
add
rolb
xchg
lock
add
fimull
add
out
imul
add
mov
jne
add
std
add
add
push
sub
pop
xor
push
push
push
push
push
lea
push
push
call
les
pop
orl
push
jmp
push
lcall
pop
add
add
add
ljmp
cmpsl
mov
add
add
add
fldl
add
fistl
sub
pop
lea
mov
push
inc
dec
xor
pop
add
xor
push
push
push
push
call
roll
imul
jns
add
add
sti
add
add
int3
mov
pop
add
add
add
add
xchg
int
add
jne
add
add
gs
pop
rol
push
lea
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
add
add
add
mov
pop
add
repnz
outsl
test
jp
add
add
loop
std
je
add
sub
pop
nop
push
shr
add
pop
nop
push
push
push
push
lea
push
push
push
push
push
call
add
add
xchg
add
add
push
negl
ljmp
call
jle
add
xchg
mov
cld
add
in
add
mov
movsl
gs
jae
push
lret
test
add
in
fdivr
lcall
add
inc
repz
std
ljmp
push
call
imul
ljmp
data16
jmp
rcl
add
push
cld
imul
cli
pop
scas
add
add
push
add
xchg
roll
in
leave
std
popl
xlat
mov
incb
sub
pop
nop
inc
push
ror
pop
nop
nop
push
push
push
push
push
push
push
call
mov
rolb
int
data16
mov
add
add
xchg
push
roll
mov
testl
add
orb
add
add
xlat
pop
add
add
add
sub
pop
cmpb
jne
push
lea
add
lea
pop
add
nop
push
push
push
lea
push
push
push
push
lea
push
push
lea
push
call
rcr
mov
add
pop
filds
add
jge
stos
add
add
arpl
add
rcrb
cmc
into
mov
jo
add
add
push
push
xchg
fsub
hlt
ljmp
pop
xchg
add
test
add
test
add
lcall
cmp
je
push
add
lea
pop
nop
push
push
push
push
push
call
add
add
jo
add
add
add
jns
ret
xchg
push
add
pusha
add
imul
add
popl
add
add
add
insb
jecxz
scas
mov
mov
nop
push
pop
inc
push
sub
shr
add
pop
nop
push
lea
push
push
lea
push
push
call
mov
stc
mov
loop
add
add
cli
mov
add
popa
pop
rcl
add
arpl
popf
pop
pusha
mov
add
add
int3
std
add
jle
add
fsts
popf
ret
out
int
jmp
add
cmpl
clc
mov
lcall
cmp
jb
push
push
push
push
call
add
cmpsb
add
imul
add
cld
bound
add
add
add
in
roll
add
leave
lds
test
add
add
rclb
dec
pop
jmp
push
ror
sub
pop
mov
push
sub
dec
sub
pop
add
push
rol
lea
pop
movzwl
mov
push
add
pop
add
push
push
push
push
push
push
lea
push
push
push
call
clc
add
pop
imul
mov
xchg
add
add
faddl
jle
cmpsb
scas
add
popa
add
add
int3
aad
jno
add
add
add
int
add
mov
aam
mov
cmpsb
lds
add
jge
in
fdivr
lcall
dec
hlt
push
sub
sub
shr
dec
pop
xor
push
ror
sub
pop
xor
shl
push
lea
push
push
push
lea
push
lea
push
lea
push
push
lea
push
call
pusha
add
add
cld
add
add
add
rcl
shrb
xchg
pop
imul
test
add
icebp
fnstsw
clc
popl
add
add
add
popa
add
add
std
ljmp
add
xchg
test
testl
sub
pop
xor
shl
push
push
lea
push
push
push
call
add
add
jecxz
jmp
mov
add
fldl
add
add
cld
pop
add
add
jo
add
add
rolb
add
ljmp
add
movsb
enter
pop
add
add
add
mov
addb
in
in
lcall
dec
nop
add
loope
push
add
pop
xor
push
push
push
lea
push
push
push
lea
push
lea
push
lea
push
push
call
add
add
jl
lock
add
mov
add
adcl
xchg
add
jbe
mov
testl
add
jl
push
xlat
addr16
hlt
add
add
lahf
mov
mov
lods
fs
roll
mov
lcall
rcll
add
push
sub
pop
pop
push
lea
push
push
push
push
push
push
call
add
mov
jl
cmpsb
push
add
jmp
fildll
add
ljmp
push
mov
add
xchg
nop
insb
add
add
fdivrl
fiadds
lcall
pop
push
push
push
call
lods
lahf
int3
add
xchg
jnp
shlb
add
in
fistps
jle
mov
add
test
mov
add
add
lret
pusha
sub
pop
pop
push
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
mov
repnz
add
fwait
mov
call
pop
out
shll
xchg
in
add
add
mov
fcomps
push
push
lea
push
push
push
push
call
pop
arpl
add
add
mov
int3
test
add
mov
lods
pop
add
pop
add
int3
std
xchg
loopne
pop
push
xchg
add
add
lcall
or
push
push
push
call
rolb
pop
mov
add
pop
jp
xchg
scas
outsl
add
add
jo
imul
fwait
pop
add
enter
in
mov
push
pop
push
imul
sub
pop
push
mov
push
sub
pop
push
push
push
sub
sub
lea
not
pop
push
push
add
ror
pop
push
push
push
push
push
lea
push
push
lea
push
push
call
mov
nop
fildl
add
idivl
cli
add
mov
add
fsubrp
lret
cmc
cmpsb
add
add
add
enter
lret
push
add
mov
sub
pop
mov
push
push
push
lea
push
push
lea
push
push
lea
push
call
push
out
mov
add
add
mov
add
jmp
popf
fadds
fsts
cli
add
aad
add
lea
jnp
push
adc
add
mov
int3
fnstenv
loopne
mov
push
push
push
call
add
lea
mov
add
shl
pop
push
pop
lret
jle
arpl
add
jecxz
into
je
test
add
add
jb
fwait
mov
outsl
add
sub
pop
mov
push
push
call
int
add
mov
jle
fwait
mov
lock
rolb
add
repnz
push
test
shr
in
popa
movl
mov
lahf
add
add
rorb
test
push
add
push
lea
push
lea
push
push
push
call
add
iret
jo
add
push
add
jns
add
xchg
add
mov
rolb
lods
add
mov
pushf
lcall
add
rorl
jl
sub
pop
mov
test
je
push
push
push
lea
push
call
add
jbe
mov
add
pop
add
fwait
push
lods
pop
int
jae
add
jo
add
mov
cli
data16
push
flds
test
add
add
xchg
push
bound
sub
pop
mov
push
sub
pop
mov
mov
push
dec
pop
inc
push
add
lea
add
pop
cmp
je
push
push
push
push
push
push
push
push
push
push
call
rolb
add
jns
add
out
in
popa
add
pushf
add
lea
lea
into
add
out
outsl
adc
int
fwait
lods
add
sub
pop
test
je
push
pop
mov
inc
push
inc
inc
not
dec
pop
cmp
je
push
ror
shl
shl
pop
test
jne
push
push
lea
push
call
gs
push
push
enter
scas
test
add
roll
add
add
rol
into
movsl
add
add
add
fdivl
pop
lret
add
add
add
lahf
ljmp
lcall
rclb
insb
lea
push
call
add
aad
add
fst
push
testb
push
int3
lret
jnp
ja
movsb
lret
add
mov
cmc
mov
mov
add
int3
add
add
add
push
add
cld
ljmp
add
fisubl
test
xchg
add
add
scas
faddl
add
lcall
pop
push
push
push
push
push
call
xchg
movsb
add
lock
add
add
add
xchg
test
adc
loop
shl
jmp
add
push
add
add
lods
add
in
jl
add
js
mov
in
in
lcall
push
xor
sub
dec
pop
pop
leave
push
push
push
push
call
loop
add
fucomip
imul
add
xchg
mov
in
add
push
add
add
add
add
add
fadds
into
add
add
add
movsl
out
push
add
add
add
add
mov
pop
add
xchg
pushf
jbe
add
data16
jmp
mov
pop
ret
push
lea
sub
not
pop
mov
inc
push
push
push
push
call
mov
xchg
cmpb
jle
add
lods
cmc
add
push
faddl
add
shlb
in
jp
xchg
ret
lcall
andl
mov
lahf
add
add
jne
add
fldl
add
in
lock
cmp
jne
lea
push
not
pop
mov
test
je
push
add
pop
mov
push
push
push
push
push
lea
push
call
add
xchg
cli
add
mov
jno
add
add
mov
jo
push
add
add
add
xchg
lret
out
test
pop
scas
test
popa
xchg
pusha
sub
pop
add
push
sub
pop
cmp
jne
push
shr
add
rol
pop
mov
push
lea
not
add
inc
pop
test
je
mov
push
push
push
push
push
push
push
push
push
call
push
mov
mov
int3
pop
pop
mov
out
xchg
cmpsb
cmpsb
mov
add
in
add
jecxz
xchg
bound
stc
push
icebp
mov
xchg
add
test
inc
bound
add
add
add
add
add
add
lcall
roll
loopne
test
call
xor
pop
jmp
push
push
lea
push
push
call
mov
enter
jae
insb
mov
int3
mov
add
nop
sbbl
add
jmp
lret
add
xchg
sbbl
push
add
pop
pushf
xchg
push
add
add
add
add
add
add
cmpsb
add
ljmp
in
lock
lcall
rclb
xchg
cwtl
lret
lea
push
push
push
push
push
call
cmpsb
ret
add
stc
add
popa
add
add
mov
add
test
add
mov
add
add
aam
add
lcall
pop
push
not
add
pop
pop
push
lea
push
call
fwait
scas
pop
pop
jno
push
pop
jns
add
add
add
add
out
shl
xchg
sub
pop
pop
leave
push
push
push
push
call
add
jp
loope
add
std
imul
add
jne
lcall
jge
add
shlb
add
add
scas
xchg
int3
add
add
in
add
add
clc
popa
aad
pop
jmp
add
movb
add
add
add
add
rcrl
test
sub
pop
ret
lea
push
lea
push
push
push
call
stos
jmp
add
lods
add
cwtl
aam
hlt
add
cmpl
mov
cli
add
xchg
push
add
mov
in
pop
add
pop
pop
pop
push
lea
push
push
lea
push
push
push
push
call
add
cli
jmp
push
andl
fiadds
xchg
add
mov
add
into
add
nop
jo
pop
roll
add
add
add
add
mov
sub
pop
pop
pop
push
inc
sub
not
pop
leave
ret
push
sub
pop
mov
push
sub
xor
pop
pop
push
lea
push
lea
push
push
call
lds
add
test
add
pop
cmpsl
add
mov
jno
mov
andl
hlt
add
in
add
xchg
mov
add
jmp
lcall
push
pop
pop
push
inc
pop
pop
push
sub
pop
leave
ret
cmp
mov
xor
mov
ror
cmp
into
mov
loope
mov
ror
lret
mov
add
mov
xchg
lret
or
mov
add
add
or
in
mov
inc
cld
and
ret
ss
mov
push
dec
in
add
shll
push
test
nop
in
cmp
mov
cmpsb
orb
movsb
call
push
pop
mov
scas
and
jns
ret
dec
fdivrl
pusha
add
repz
adc
and
cmove
pop
mov
std
dec
pop
test
repz
jg
hlt
repnz
setae
mov
jl
popa
fnstsw
and
call
adcl
andl
xlat
adc
in
insl
out
pusha
cmc
push
xchg
sarl
into
insl
sbb
bound
ja
pop
mov
cmpsl
out
adc
jge
icebp
pop
jg
or
add
rorb
test
fiaddl
sub
add
imul
add
sbb
sti
add
sbb
repnz
mov
add
sbb
cmc
cmp
hlt
out
icebp
jge
inc
adc
test
dec
jmp
mov
mov
stc
nop
loopne
adc
adcb
xor
add
or
pop
push
jp
or
scas
aaa
pushf
test
sub
xchg
sub
clc
pop
stos
aad
or
iret
mov
xor
enter
mov
fisubs
ret
xor
cmp
call
sar
mov
rol
int3
pop
fbld
dec
xchg
out
aam
imul
add
mov
in
gs
mov
xchg
mov
pop
repz
or
push
ss
lret
inc
les
inc
popa
mov
mov
sbb
aas
inc
bound
cmpsl
pmullw
adc
jne
enter
js
insl
mulb
jmp
js
xor
les
pop
mov
aaa
mov
addb
jp
lods
dec
mov
xchg
mov
aas
mov
push
aas
test
test
lcall
push
clc
adc
or
shr
movsb
lds
sub
cmp
and
jle
mov
inc
popa
and
pop
test
mov
hlt
stos
or
sahf
xor
adc
icebp
fisttpll
and
sub
xchg
sbb
addr16
dec
dec
inc
cmc
cmp
xchg
scas
pusha
stos
mov
inc
sub
popl
cs
mov
sbb
cmp
shlb
scas
push
dec
in
jbe
fsubrs
mov
add
xor
stc
leave
ds
xchg
xchg
ficoms
cwtl
xchg
shrb
xchg
pop
rcr
or
xorb
loop
inc
sub
gs
and
adc
xchg
lea
pop
xchg
jle
dec
hlt
js
bound
adc
stc
mov
mov
push
mov
dec
shrb
jnp
mov
gs
xchg
jecxz
adc
daa
xchg
or
ja
dec
jmp
jmp
jne
mov
cmp
xchg
shll
orl
pop
das
jnp
and
dec
test
cmp
adc
add
mov
repnz
jmp
cs
sbb
in
or
scas
jno
push
fcoml
mov
mov
xor
loop
inc
pop
mulb
arpl
cmpsb
cmp
mov
xor
leave
pop
add
repnz
pop
std
insl
sub
sbb
jmp
sahf
fadds
out
fistps
pushf
add
cmc
scas
mov
out
pop
xchg
adc
pop
xchg
cmp
outsb
inc
lahf
icebp
dec
pop
cmp
or
pop
outsb
adc
shll
shl
jae
mov
inc
rclb
mov
imul
lods
sbb
push
xchg
jb
cltd
xchg
or
pop
inc
pop
push
out
repz
mov
adc
loop
shrl
sbb
pop
dec
adc
sub
xchg
and
jge
push
mov
in
mov
shr
popf
lret
nop
sbb
cmpl
sbb
outsb
inc
xchg
pop
imul
mov
jmp
sub
push
cmpsl
sbb
lret
fidivrl
xchg
sahf
aas
mov
jo
push
xor
jns
inc
adc
pop
add
add
adcb
sti
xchg
imul
pusha
dec
push
insb
mov
and
dec
popa
stos
lcall
xor
jae
mov
xchg
out
je
cmp
mov
faddl
jb,pn
mull
out
mov
pop
jp
jmp
push
and
add
xor
push
pop
xor
clc
and
lahf
daa
mov
mov
and
je
in
jnp
dec
int3
repnz
inc
fcmovnbe
mov
xor
and
movsl
dec
lock
lea
aad
outsb
ret
mov
sysexit
add
mov
sub
xchg
fs
xor
dec
mov
out
jp
mov
dec
or
push
ret
in
sbb
mov
xchg
je
xor
inc
dec
cs
shl
jno
mov
fsub
mov
rol
adc
sbb
fisubs
cmc
lahf
jecxz
mov
adc
lds
jne
fcompl
push
sub
or
xchg
out
popw
ds
sbb
jo
mov
mov
es
ret
in
add
and
pop
ficomps
fcomip
jl
xor
dec
pushf
js
jecxz
inc
sub
adc
in
fwait
sub
cmp
dec
mov
mov
icebp
fsubl
popa
aas
ret
or
ss
xor
rcrb
add
jne
pmulhuw
fwait
imul
ror
arpl
jbe
xchg
fwait
lods
or
cmp
sbb
pop
dec
dec
loop
sarl
xor
dec
les
loope
cmp
pop
inc
daa
aad
mov
int
lock
adc
pop
sbb
jecxz
lock
cs
negb
inc
mov
daa
sbbl
and
or
insw
adc
or
aad
or
scas
mov
mov
pop
repz
add
subl
mov
jae
or
xor
ds
pop
sub
mov
in
inc
js
mov
stc
adc
jp
jo
cmp
fwait
jecxz
adc
fstpt
sbb
aas
std
and
push
adcl
or
pop
cmp
fsts
lds
shrb
aam
push
out
outsl
jp
mov
psadbw
jnp
mov
pop
std
int3
add
xchg
adc
cmp
dec
and
idivl
push
xchg
int3
loopne
div
out
stc
xor
sahf
xchg
adc
lock
lret
pop
out
imul
test
jno
ret
jle
mov
cmpsb
push
mov
pop
and
inc
and
iret
sub
adc
jne
and
fwait
dec
pushf
repz
cmp
xchg
fdivrp
ss
fs
enter
insb
data16
lods
pop
dec
icebp
lret
movl
stc
jae
or
in
xchg
outsb
rorl
rcrl
into
mov
inc
pop
ror
add
xor
leave
jo
and
ret
sarw
sbb
and
push
push
mov
push
fdiv
scas
inc
and
cmp
cwtl
lods
push
push
lret
cmp
mov
pushfw
or
mov
sbb
add
push
fstp
lahf
call
test
cmp
ret
push
jge
rcrb
je
adc
in
add
bound
shl
push
lods
fisubs
adc
mov
cmpsl
cs
sbb
xchg
add
lds
dec
stos
dec
push
testb
lds
add
xchg
push
jge
cbtw
lods
mov
mov
add
aas
fiaddl
nop
repnz
and
lret
push
pop
scas
imul
into
insb
lock
pop
lods
lahf
jae
pop
pop
or
clc
iret
dec
lds
lcall
pop
mov
mov
enter
mov
mov
jno
push
test
push
insl
out
sbb
dec
lods
adc
lds
xchg
int3
jge
shrl
test
movsb
scas
sbb
push
icebp
mov
mov
sub
sbb
adc
and
jae
outsb
mov
inc
xor
insl
mov
popf
cmpsl
jnp
xchg
out
outsl
push
movsl
mov
ljmp
mov
bound
cmc
dec
xor
jge
pop
lock
jns
sbb
addb
pop
dec
cmp
sub
jle
mov
cli
jo
xchg
vaddsubpd
cmpsl
movsl
push
movsl
inc
add
lock
notb
pop
jecxz
mov
hlt
std
jae
or
stc
push
cmp
adc
mov
mov
jno
push
and
mov
sbb
cmpl
out
mov
arpl
adc
ljmp
js
mov
fcompl
inc
mull
push
test
or
sub
std
in
sub
insl
mov
xor
arpl
pop
pop
mov
push
shrb
cmp
sti
sbb
sub
insl
jnp
cli
sub
mov
sti
xor
div
ljmp
mov
mov
or
jo
add
pop
icebp
loopne
push
lods
stos
loopne
lea
fwait
leave
rcr
and
hlt
and
lahf
xchg
or
jmp
je
mov
mov
inc
mov
dec
mov
cld
jb
jmp
xchg
dec
je
adc
sarl
jbe
outsb
leave
add
aaa
xor
xor
out
out
mov
ljmp
cmp
pop
out
shll
mov
mov
lcall
dec
dec
jbe
mov
test
adc
test
push
mov
sub
mov
loop
xchg
jle
mov
xlat
ja
movsl
mov
pop
pop
inc
out
int
inc
subb
pop
cmp
pop
cmp
inc
sbb
mov
outsb
dec
mov
dec
outsl
ds
push
repz
mov
add
rcl
jge
push
push
add
push
sbb
mov
adc
jmp
ret
call
push
stos
outsl
jecxz
or
fs
add
lods
enter
xchg
cmp
mov
fs
sti
add
sbb
xchg
xor
or
mov
adc
jae
mov
fsts
mov
cltd
add
fs
scas
push
xor
fptan
cmp
mov
into
add
mov
outsb
push
fildl
mov
cmpsl
adc
ja
xor
shrb
sti
daa
bound
mov
mov
adc
mov
psubusb
inc
xchg
das
popa
adc
or
jno
mov
mov
aas
cld
jbe
jl
cltd
lds
movsl
fwait
jmp
inc
fwait
daa
mov
test
add
sub
lea
push
jnp
push
mov
testl
aad
dec
jns
or
pop
jmp
arpl
pusha
sub
or
inc
sarl
and
je
cwtl
push
pushf
sbb
cmp
movl
popa
cmp
aaa
adc
js
pop
aam
ss
pmaddwd
in
inc
mov
and
and
sub
push
inc
sub
es
mov
xchg
shrl
and
xchg
dec
jae
mov
push
rorl
out
xchg
cmp
mov
cmp
xor
lods
cmp
xchg
jecxz
sti
out
push
or
pop
lret
cmpsl
sbb
mov
hlt
into
arpl
mov
hlt
test
mov
nop
add
int
or
out
xorb
stc
lods
int
ja
movb
inc
test
hlt
cmc
lea
jmp
dec
insl
out
sahf
mov
jl
ret
push
inc
stos
imul
lret
fildll
div
push
xchg
les
scas
jo
mov
xchg
rcr
sbb
fisubrs
sbb
add
adc
jb
stos
repz
in
push
xchg
push
clc
mov
adc
gs
add
or
jnp
mov
mov
dec
outsl
fwait
push
mov
dec
test
fisubrs
ficoms
aad
dec
sbb
leave
add
addr16
xchg
pop
mov
aas
cmp
xor
and
shl
add
mov
pop
or
mov
push
mov
adc
inc
sub
cs
ljmp
push
inc
mov
jae
sbb
mov
mov
sahf
iret
add
movsl
or
jne
pop
inc
dec
sbb
xchg
dec
adc
outsb
lds
dec
or
jnp
fbld
stos
push
adc
or
and
sub
push
and
dec
xor
pop
push
sub
cmc
mov
xlat
jecxz
mov
fistpll
mov
jo
popa
jb
std
pop
xor
in
add
xchg
shll
lods
repz
and
clc
sbb
aam
test
lods
pop
add
out
and
fldcw
cwtl
xor
inc
pop
xchg
jle
outsb
mov
xchg
lcall
jle
dec
cmc
fidivl
inc
dec
ds
les
fcmovbe
fistpl
inc
jmp
ret
ficoms
push
sbb
call
lods
pushf
mov
jmp
push
aad
jnp
pusha
in
or
sbb
hlt
icebp
mulb
idivl
sbb
and
ja
loope
in
pop
icebp
js
aaa
dec
cmpsl
test
xchg
jmp
add
pop
into
pop
cmc
xchg
jae
xorl
jae
rorb
ljmp
imul
addr16
orl
or
or
sti
or
xchg
push
xor
mov
sub
sbb
sub
lods
hlt
dec
jl
jo
out
push
lret
repz
push
sub
cwtl
fmulp
dec
or
mov
decb
and
jbe
sbb
imul
in
lea
dec
test
xchg
cmpsl
cmp
roll
jo
mul
scas
fisubl
jle
divl
adc
imul
jecxz
inc
dec
sbb
dec
cmp
outsb
pusha
pop
rorb
cmc
mov
pop
addb
movsl
cltd
cmp
loop
int3
sub
lds
inc
sbb
inc
fstps
jo
movsl
xlat
or
rorb
xor
and
pop
sbb
jl
push
mov
lret
mov
out
mov
rcrb
test
aam
lret
scas
sbb
jecxz
push
sahf
test
orb
pop
ja
xchg
sahf
adcl
mov
into
add
gs
and
add
test
cmp
mov
cli
fwait
add
cwtl
fcmovnb
mov
outsl
push
xchg
scas
mov
lahf
push
fnstsw
popf
cmp
outsl
and
sub
movsl
and
js
inc
mov
adc
fcoml
sub
push
inc
notb
outsb
lret
popf
cwtl
jnp
cwtl
xor
cltd
adc
loop
aad
xchg
inc
dec
jo
stos
or
scas
pop
sub
mov
repnz
push
lock
mov
adc
lret
scas
or
fisttpl
mov
mov
pop
fs
cmp
sti
stos
and
mulb
inc
movsb
idiv
pop
test
es
sahf
mov
es
mov
adc
xor
roll
fcmove
sub
mov
pop
pop
pop
xchg
mov
popf
shl
cwtl
sub
clc
test
int
jg
clc
cmpsl
fdivs
jb
xlat
dec
negb
mov
mov
int3
mov
shll
ljmp
ret
loopne
adc
in
inc
iret
inc
and
std
roll
nop
jg
inc
inc
cwtl
dec
repz
lret
adc
incl
int3
jle
daa
aad
inc
shl
cli
insl
mov
dec
cld
sub
jbe
and
mov
jno
nop
addr16
shll
push
and
and
or
insb
aaa
pop
aad
sub
rcrl
mov
addr16
ds
jb
push
mov
mov
xchg
jno
push
inc
ds
lds
or
cmc
adc
mov
xor
gs
dec
mov
mov
sub
sar
in
mov
into
xor
xchg
or
imul
lods
repnz
cs
cli
pusha
lret
rcl
inc
inc
inc
sub
inc
pop
push
cli
int3
test
dec
je
inc
mov
outsb
or
push
stos
into
out
push
repnz
js
mov
or
sub
and
pushf
jo
fadds
insl
icebp
or
dec
out
push
jp
cmc
insb
pop
sbb
nop
mov
insb
push
dec
arpl
mov
xchg
nop
lcall
push
cmc
mov
mull
xchg
mov
seto
or
repnz
test
cmp
fcmovnb
scas
pushf
pusha
xchg
hlt
and
decb
mov
in
xchg
fsubrl
mov
mov
inc
inc
dec
aam
filds
sbb
lcall
pop
insb
push
dec
jno
push
xchg
inc
jbe
xchg
xorb
stos
cs
imul
xchg
sub
nop
adcl
leave
sub
decl
mov
lods
sti
mov
or
mov
sbb
ja
pusha
inc
push
iret
jne
into
xor
outsl
fidivrl
cmp
xor
mov
xorb
shrb
inc
adc
mov
out
addr16
jle
mov
or
xchg
and
lods
xor
mov
test
push
mov
push
enter
push
test
jne
inc
and
cmp
pop
int
popa
std
mov
and
das
nop
mov
inc
in
sub
test
loope
enter
sbb
bsf
mov
adc
fldt
sub
or
aam
out
ljmp
ret
sub
les
mov
das
mov
adc
mov
sbb
in
data16
mov
dec
in
popa
inc
decl
movsl
xor
outsl
bound
ret
pop
in
xchg
imul
push
enter
xor
ss
and
leave
xorb
dec
std
inc
jae
and
push
mov
xchg
push
push
out
dec
jmp
fwait
lods
cmp
fisubs
test
jle
mov
clc
inc
clc
xchg
imul
mov
mov
inc
into
push
pop
cwtl
or
xchg
adc
lcall
into
filds
leave
mov
fcom
xchg
xchg
rclb
xlat
vpaddd
mov
int
mov
mov
xor
add
mov
out
inc
test
and
mov
repz
cmp
leave
ret
out
push
adc
mov
repnz
and
push
sbb
push
xchg
add
aaa
jecxz
xchg
repnz
popf
xor
scas
out
mov
stos
mov
sbb
add
pop
sub
inc
fdivrs
dec
xchg
push
int3
mov
shrb
or
jge
adc
sub
or
mov
jmp
adc
push
cltd
cltd
aaa
sub
pop
jmp
jae
cmp
xor
push
vfrczps
and
scas
rcrl
sub
mov
push
sbb
shl
adc
rcrl
iret
cmp
xor
dec
inc
jne
xchg
or
mov
xchg
xor
jg
jo
cli
arpl
and
lahf
xchg
dec
mov
push
push
ret
jnp
add
inc
push
or
mov
and
sti
cli
shll
adc
adc
xchg
ficoml
dec
xchg
pushf
inc
mov
adc
mov
and
clc
mov
cli
les
adc
dec
jle
fwait
psrad
in
inc
hlt
mov
stos
pop
xor
mov
pop
imul
pop
cmp
dec
mov
cmp
mov
arpl
dec
cmp
add
lea
test
cmp
test
lahf
lea
fs
movsb
adc
mov
ljmp
in
inc
mov
or
push
std
test
rolb
sahf
ret
fisttpl
or
xchg
fimull
lcall
and
ficoml
cmp
adc
jmp
shrb
pop
add
sub
fs
and
jmp
xchg
gs
xchg
mov
inc
mov
jecxz
sbbl
push
ret
and
loope
mov
cmp
sub
xchg
push
push
adcl
sti
push
repnz
loope
adc
mov
fists
lret
or
sbb
fcomps
xor
mov
xchg
or
add
push
out
fdivrl
lods
lea
aas
shrl
dec
add
add
xor
rcll
xchg
xor
addr16
dec
jmp
lds
cmc
cmp
lds
jns
push
scas
out
insb
and
dec
jecxz
cmpsl
pop
fcmovbe
xchg
imul
mov
ss
pusha
xor
adc
leave
inc
movsb
insb
pop
daa
sti
dec
xchg
cmp
jbe
dec
outsb
xor
pop
test
leave
pop
sbb
jle
sti
xchg
icebp
xor
mov
xchg
jno
movsb
adc
ljmp
or
jae
ds
add
inc
hlt
lock
jae
and
lret
mov
jge
mov
loopne
cmc
fdivrs
inc
les
jnp
rdmsr
scas
dec
movsb
mov
add
mov
icebp
aam
ret
fidivrs
cmp
out
mov
andl
cmp
mov
ja
cmp
jmp
loop
das
mov
dec
dec
adc
shll
inc
mov
xchg
orl
stc
rcll
fcmovnb
sarl
mov
sahf
ljmp
sbb
xchg
fdivr
mov
jo
mov
push
subb
add
pushf
mov
stc
cmpsl
inc
dec
push
addb
out
adc
push
in
seto
jae
xchg
insb
pop
add
aas
add
pushf
cmp
inc
xchg
shll
nop
pop
inc
pop
mov
fnstenv
bound
icebp
sub
pop
lea
int3
push
inc
push
cli
adc
inc
outsb
popf
dec
pop
xlat
out
jge
sub
pop
sti
movsl
into
arpl
push
out
sbb
adc
xchg
popa
fstp
fwait
gs
fwait
js
push
fcompl
xor
xlat
xchg
adc
adc
push
cmp
adc
adc
leave
cltd
shrl
jo
jns
loop
sub
inc
add
ret
xor
arpl
xor
iret
jge
data16
cwtl
and
cld
rorb
test
jle
and
jnp
data16
sub
out
arpl
test
and
mov
jb
push
add
mov
pop
lahf
lcall
cmp
aam
push
xchg
mov
jmp
pop
mov
orl
loopne
and
std
sbbb
sbb
jmp
pop
addr16
add
std
mov
or
mov
stc
cmp
aam
lock
in
scas
or
jbe
les
pop
sub
mov
gs
add
jecxz
sbb
push
ja
adc
jnp
jmp
int
fs
mov
push
cmp
push
fimuls
cmp
nop
cmp
cs
lds
add
dec
cmp
xchg
cmc
jno
je
sarl
cmp
and
sbb
mov
ss
ret
icebp
sbb
je
cwtl
pop
mov
add
aam
fwait
mov
icebp
es
out
es
xchg
push
leave
aaa
adc
pop
mov
das
lods
xor
out
cmp
mov
in
and
test
loop
das
cmp
fcmovnb
aad
aaa
and
out
jbe
lret
mov
sub
lret
and
fistps
cwtl
xchg
xchg
add
call
push
pusha
mov
enter
iret
test
push
int
hlt
or
and
fs
pop
aam
ja
loop
loop
cmc
xchg
adc
add
jnp
stos
in
sbb
ljmp
clc
inc
lret
mov
les
adc
cmpsb
lods
xchg
cmpsl
cwtl
stos
in
jge
jnp
lret
sub
jns
hlt
sbb
jg
in
cmp
pop
push
rcrb
adc
dec
jl
jnp
inc
push
cmp
test
inc
adc
cmp
dec
test
popf
push
cmp
addb
nop
ja
leave
mov
inc
call
xor
xorl
pop
out
fnstenv
inc
sbb
ss
lds
icebp
pop
add
jbe
sbb
notl
pop
xchg
lcall
ficoml
loop
dec
test
sti
jnp
mov
sahf
inc
xlat
mov
lret
fistpl
push
cwtl
dec
scas
fbld
pmaxsw
and
cld
inc
or
cli
fisubs
sbb
jne
out
lods
pop
aas
inc
negb
jne
xor
mov
gs
call
ja
jno,pt
aad
les
test
outsb
fs
sub
out
insb
jg
mov
movsl
pop
hlt
sub
sbb
lock
jo
xchg
inc
sub
jp
or
popf
ds
lahf
icebp
pop
into
cli
pushf
dec
mov
jl
inc
pop
ficompl
mov
add
jns
xchg
imul
cmc
xor
iret
mov
xor
lcall
xor
sbb
add
adc
mov
loop
xchg
xor
or
loop
cwtl
setg
inc
rcrl
xor
sbb
xor
popa
insb
jge
test
cmp
pop
push
pop
imul
xchg
lahf
fsts
loop
lods
xor
dec
pushf
daa
ja
push
cld
gs
aaa
xor
or
outsl
xchg
add
sbb
mov
xchg
xchg
movsl
mov
push
inc
cmpsb
je
out
cmp
sub
jne
push
test
cli
cmp
dec
roll
movsl
push
in
mov
les
hlt
mov
jno
push
leave
pusha
push
jge
loop
stc
imul
jl
fchs
popf
and
outsl
pop
cmpb
shll
cmc
lds
mov
cmpsb
cmp
adc
das
lea
js
xor
add
imul
sbb
test
rol
pop
ja
sub
repnz
sub
pop
mov
in
add
add
jmp
push
movsb
int3
dec
clc
lods
cmp
mov
and
jp
addr16
jg
aad
cmc
xchg
push
jae
sti
and
jne
xor
sahf
push
or
cwtl
pop
shrl
daa
cmpsl
and
bound
jl
lods
fsubrp
out
xchg
cmp
and
subb
data16
mov
jb
adc
jb
bound
dec
or
mov
fwait
lea
jo
jb
mov
jae
stos
jno
jns
add
push
mov
fldl2t
ss
addl
add
mov
jns
push
inc
loope
rcrl
mov
aaa
sub
outsl
test
insl
imulb
sbb
shl
aad
sub
popf
ss
xchg
mov
dec
mov
sar
arpl
lcall
repnz
cld
test
dec
push
mov
jmp
int3
push
cmp
add
into
xor
push
aad
fldenv
inc
addr16
mov
test
and
sarl
xor
jb
subb
lods
push
pop
adc
pop
into
mov
in
push
mov
ror
add
mov
jo
inc
dec
and
cmp
mov
xor
ljmp
mov
rep
insl
out
push
xchg
movsb
or
xor
mov
repnz
xchg
or
xor
and
fsubrl
xor
mov
in
in
xorb
dec
scas
xor
bound
cmpsl
test
in
mov
daa
inc
jns
cli
inc
xchg
jno
lret
mov
xor
inc
mov
mov
fsubrs
xchg
aam
in
jbe
ds
mov
scas
fidivs
mov
mov
adc
cs
cmpsl
xchg
cmpsb
mov
shll
inc
inc
out
sahf
insb
ret
push
mov
jl
mov
pop
xor
lods
and
jmp
mov
jle
xchg
xorb
hlt
ffree
sub
clc
mov
jge
add
sub
cmpsl
pop
xor
push
pop
pop
sbb
push
dec
pushf
dec
out
lcall
cli
sub
scas
in
mov
fistl
int3
movsb
mull
in
pop
lret
rorl
add
je
mov
mov
ja
mov
ret
jmp
lea
dec
loopne
lahf
jb
cmp
or
mov
fistpll
adc
fdiv
rcrl
mov
sub
mov
shld
gs
addb
xchg
push
jle
xor
test
push
sti
adc
dec
stos
and
inc
mov
lahf
adc
xor
pushf
cmp
xchg
inc
imul
push
shrl
cmp
hlt
decl
and
xchg
test
pop
push
mov
ljmp
mov
mov
add
sar
and
outsl
scas
xchg
adc
out
or
mov
inc
test
xchg
mov
js
es
aaa
repz
stos
xchg
mov
addl
nop
pop
pop
xchg
push
adc
sbb
mov
loopne
mov
dec
out
in
jg
repnz
stos
pop
fmull
imul
sbb
mov
cmp
insb
fwait
mov
fcomps
mov
test
jg
repnz
stc
xchg
pop
mov
dec
sub
test
lret
sbb
es
xchg
ss
xchg
les
shlb
aaa
cltd
push
imul
jns
mov
out
shll
aas
push
fdivl
pop
or
lcall
cmpsl
arpl
stos
in
imul
adc
mov
bnd
int
cld
pop
fld
cmpb
mov
popa
dec
gs
sti
dec
sub
inc
xchg
outsl
stos
push
popf
testl
jo
adc
icebp
mov
je
xchg
popa
lcall
test
rclb
addr16
xchg
ljmp
out
xlat
orb
decb
mov
xor
dec
pop
mov
pop
ss
push
jmp
pop
or
sbb
adc
popf
daa
orl
cmp
xchg
cld
xor
add
movsl
xor
pop
loopne
lock
lahf
movsl
pushf
fstp
popa
loop
mov
inc
clc
nop
subb
add
jl
cmc
jne
aad
insb
inc
scas
sub
push
hlt
mov
daa
inc
pop
shlb
flds
and
loop
sbb
dec
ds
sbb
sti
pop
movsb
gs
jb
rorl
mov
push
js
jb
movsb
jge
xor
cmp
lahf
nop
in
mov
jle
addr16
mov
ret
fisubl
xchg
div
arpl
lods
jl
ja
mov
jecxz
xchg
lds
daa
or
fdivl
dec
fdivr
lret
pop
jl
fcoml
mov
nop
loop
test
push
sbb
imul
in
pop
sub
adc
jae
xchg
xchg
xlat
aam
hlt
pop
lret
jp
or
data16
mov
ret
iret
mov
and
fldt
sbb
adc
jo
sub
pop
ds
rcrb
gs
mov
enter
in
mov
nop
xlat
mov
add
sbb
in
in
lret
pop
xlat
test
repz
enter
stc
shll
mov
lods
mov
arpl
outsb
adc
mov
xchg
mov
mov
pop
cmp
repz
xorb
mov
inc
or
orl
enter
loop
or
adc
add
and
or
lock
sub
fldl2e
dec
push
cmp
fwait
shll
pop
dec
cld
stc
jmp
leave
stos
sub
ds
cli
shll
jp
xchg
cmp
push
sbb
adc
sbb
je
not
in
fs
or
jecxz
rclb
gs
les
imul
add
inc
les
lret
push
es
mov
gs
in
push
add
adc
aas
xor
subl
mov
add
cmpsl
cwtl
xor
lock
add
sbb
xor
pop
mov
lea
inc
cs
inc
xor
mov
mov
xchg
push
gs
fldt
movsl
popa
scas
into
dec
stos
stos
out
fcmovb
inc
pop
in
test
loopne
loopne
xchg
pop
scas
gs
popa
sbb
imull
xchg
mov
js
repnz
fs
addb
mov
push
sbb
out
popf
leave
pop
mov
sbb
inc
sbb
pop
mov
sbb
pop
adc
jne
aas
in
sbb
insb
sub
mov
xor
loop
ljmp
out
cld
jl
jmp
and
test
fstps
lods
xadd
xchg
lcall
adc
pop
cmp
add
dec
or
stc
ja
fisttpll
std
testl
xchg
out
and
aam
mov
mov
xor
or
dec
movsb
mov
inc
pushf
mov
adc
xor
sti
dec
movsb
lods
insl
adc
sti
cmp
das
dec
cmp
scas
or
sbb
imul
mov
jl
lret
call
call
jbe
icebp
inc
sub
dec
pop
in
cmp
aad
imul
cld
ss
pop
pop
insl
or
jb
in
push
test
fcomp
xor
adc
xchg
and
cld
pop
jle
sbb
jbe
sbb
into
std
test
mov
stos
jl
rcrb
lcall
xchg
vxorps
sbb
in
fcmovnbe
xchg
inc
jle
test
add
rcll
ret
lret
leave
inc
repz
and
pop
test
ljmp
jl
dec
or
dec
lahf
into
or
xor
movsb
fldenv
xor
icebp
std
push
push
mov
arpl
lret
xchg
push
ja
xor
mov
push
mov
cltd
faddl
mov
stos
cmp
push
lea
add
test
in
std
adc
nop
ljmp
adc
or
test
sub
sub
adcl
test
xchg
aad
roll
outsb
loopne
adc
jle
lods
cmp
cmp
xorl
ret
xlat
or
gs
repz
iret
aad
mov
les
jbe
pop
scas
or
mov
pop
jo
mov
cmp
clc
xor
jne
ret
pop
mov
mov
pop
fldenv
pop
jo
repnz
inc
int
dec
repz
insl
push
add
sbb
add
notl
ficoms
or
inc
xor
xlat
add
or
or
sbb
xor
dec
xorb
jle
and
jmp
sub
cmpsb
loop
aaa
scas
inc
imul
mull
pusha
and
mov
pop
xchg
inc
call
sub
and
ss
jno
adcb
test
inc
out
enter
scas
in
roll
ljmp
pop
sub
mov
xchg
in
xchg
sbb
sub
out
push
push
jb
add
sub
iret
rol
loope
and
rclb
fldl
mov
out
mov
repz
movsb
sbb
sarl
jne
push
dec
dec
test
push
xor
or
inc
xor
pop
adc
jmp
outsl
es
clc
mov
lret
outsl
insb
fisubrs
adc
mov
pop
push
lret
in
aam
sub
push
xor
inc
outsl
rol
nop
mov
into
pop
pop
mov
inc
imul
ss
in
jne
aam
xor
cmpsl
nop
push
cltd
push
bt
rorl
ret
xor
mov
dec
mov
and
xchg
push
outsb
jle
cld
les
push
out
notb
scas
jae
into
and
inc
pop
cli
push
stc
or
je
lods
pop
mov
mov
mov
aad
js
push
outsb
cmp
call
in
mov
xorl
adc
push
mov
xchg
fistpll
lods
jmp
sti
insb
movsb
divb
push
pushl
cmpsl
adc
in
mov
sbbl
cld
and
cmpsb
xchg
push
pop
or
loope
inc
cmpsl
outsl
adcb
sub
arpl
ret
jge
roll
mov
cmp
push
adc
push
add
int
xchg
shlb
mov
jnp
and
mov
or
and
imul
push
dec
insb
js
lock
hlt
pop
xchg
mov
movsb
dec
icebp
cmp
movsb
call
sub
xor
fs
ds
add
cld
lods
icebp
push
sbb
dec
sbb
dec
sbb
push
mov
fcompl
int3
lds
cwtl
inc
popa
push
fs
sbb
push
adc
bound
cmpsb
ljmp
scas
cmp
fisubrs
jns
movsl
sbb
cld
testl
mov
inc
pop
jne
clc
sub
lahf
or
and
stos
cmpsl
sbb
out
iret
jo
and
outsb
mov
loop
sub
in
mov
sarb
mov
xchg
jne
pop
mov
fisubs
sti
xchg
and
ret
rcrb
mov
sbb
pusha
lret
inc
out
pusha
adc
out
cmp
or
iret
or
sahf
fs
iret
dec
sahf
mov
sub
loope
clc
cmp
mov
ret
mov
xor
push
rclb
test
into
lret
xor
aad
cmpsb
adc
jl
xor
shll
aas
cmp
push
insb
add
xchg
pop
mov
ja
ss
jge
fiadds
fadds
dec
scas
aam
adc
test
mov
pop
pushaw
orb
push
mov
rcrl
adc
inc
lcall
inc
sti
movb
cmpl
cltd
xor
imul
fs
or
jp
dec
sub
jnp
push
pushf
or
cmp
or
loopne
insl
ds
gs
ljmp
xlat
jae
punpckldq
faddl
cmpsb
cmp
jb
cltd
test
dec
add
stos
jae
outsb
call
mov
mov
jl
js
fwait
orb
mov
sbb
arpl
or
xorb
out
and
jp
xor
adc
repnz
mov
xchg
jbe
mov
pop
incl
or
jp
sbb
insb
cmc
out
cltd
jnp
ss
mov
mov
push
or
cltd
repnz
and
outsb
cmp
repnz
sbb
and
ret
aaa
test
aam
push
jp
adc
in
lods
mov
pusha
cs
jae
xchg
adc
and
mov
ljmp
xchg
sbb
inc
xlat
fxch
xchg
lret
leave
test
cmp
pushf
test
insl
rolb
stos
push
push
out
mov
cmp
sahf
or
std
push
pop
popw
ss
mov
mov
leave
nop
cld
roll
push
and
mov
push
fcmovnu
mov
push
rolb
repnz
repnz
test
mov
or
test
jns
cwtl
out
out
inc
into
xchg
test
cwtl
out
negl
jne
je
mov
pop
sbbl
movsl
out
inc
gs
je
add
sub
outsl
cltd
enter
insb
ret
mov
shlb
mov
push
lea
stc
push
xchg
movb
loopne
mov
testl
or
mov
lahf
inc
dec
lea
test
mov
popa
stos
inc
insl
loope
das
mov
push
test
std
into
jg
mov
loopne
loope
mov
cltd
and
add
jb
inc
dec
cltd
add
in
mov
incb
cmp
jbe
xor
es
rcr
or
mov
scas
push
ljmp
xchg
arpl
ss
jg
call
dec
das
ret
mov
xlat
inc
or
sar
add
xor
cmp
xchg
push
icebp
insb
loope
scas
dec
fdivrs
dec
mov
pushf
cs
scas
jg
mov
mov
jge
in
ret
call
in
mov
test
fs
mov
pop
cmp
pop
xor
lcall
inc
pop
adc
fcoml
movsl
popa
sbb
cwtl
stos
sahf
shlb
insl
inc
cwtl
cmc
ds
jmp
nop
aam
xlat
ret
verw
push
jae
out
jo
sub
mov
test
jns
pop
or
fwait
sbb
and
sub
sub
add
pop
dec
pusha
mov
lods
stos
ret
arpl
pop
inc
lock
roll
jbe
mov
jno
testb
movsl
jno
jnp
or
jbe
mov
popf
mov
xchg
cmpsb
mov
and
pop
rorb
ss
xchg
lods
add
rorb
inc
fcmovnbe
and
outsl
push
fwait
sbb
cmp
clc
dec
aaa
adc
mov
mov
out
sub
pop
or
in
popl
int3
pushf
jbe
cmp
xor
repz
jne
in
pop
shrb
sbb
sbb
mov
push
shrl
jno
js
out
jae
daa
inc
loop
rcrl
dec
push
stc
push
ljmp
ds
outsb
dec
pop
fdivs
cmp
mov
out
out
loope
int
fcomip
scas
pop
mov
in
jno
jmp
bound
mov
inc
mov
jne
pop
test
push
arpl
dec
lret
lcall
sub
and
imul
cmp
and
xacquire
pop
mov
mov
jne
jl
ljmp
ja
sub
mov
add
stc
push
jecxz
push
jg
cmp
aas
ret
repz
push
pop
push
data16
or
cli
into
out
fwait
subl
inc
fdivrl
mov
or
mov
js,pt
push
xchg
out
pop
sub
xchg
and
loop
pop
push
das
xchg
push
mov
movups
clc
mov
inc
mov
mov
jne
ds
mov
inc
dec
lret
data16
enter
repz
and
xor
and
leave
push
push
inc
out
mov
inc
xor
leave
dec
or
cmpsb
pop
cmc
cmp
mov
xchg
pop
mov
push
test
hlt
stc
insb
jo
call
adc
jno
xlat
mov
ds
xor
cld
cltd
fcoms
xchg
ja
push
movsb
jl
mov
pop
cmp
jg,pt
rcrl
fs
xchg
dec
ja
ds
mov
pop
jno
mov
int
icebp
mov
xchg
pop
xchg
popa
scas
bound
add
out
jp
jns
xrelease
stos
dec
or
cmc
dec
jmp
inc
cmp
cmp
mov
js
scas
mov
add
cmp
js
out
js
ret
mov
movsl
dec
inc
cltd
dec
inc
call
insb
push
mov
xlat
mov
xor
add
ss
sti
mov
fidivrs
test
fdivrl
je
enter
fcmovb
pop
stc
in
lods
mov
insb
push
aam
jnp
push
push
imul
add
xor
ljmp
popf
and
shrl
test
cs
sub
jge
xchg
pop
pop
xchg
gs
pusha
imul
int
pop
cmpb
push
ss
rorl
aam
jg
sub
inc
cmp
jns
add
jg
pop
pop
scas
int
mov
mov
xor
cmpsb
mov
negl
js
sub
into
icebp
scas
sbb
push
sub
popf
pop
popa
xor
shrb
out
mov
mov
pop
cmpsl
ds
sahf
inc
lods
mov
fistps
jne
cmc
or
jle
xor
divl
sub
inc
aad
hlt
xor
roll
stos
ret
inc
mov
js
pop
push
imul
clc
sub
aaa
mov
outsl
pop
mov
ret
mov
dec
jno
loop
stos
push
jge
fmul
lock
sbb
lahf
xor
push
dec
shr
and
push
or
adc
or
cmp
leave
pushf
outsb
ret
mov
mov
jns
pop
insb
in
mov
ret
dec
pop
sub
cmpb
push
insb
jmp
sub
test
ffree
les
xchg
ss
push
and
fisttpll
lahf
mov
gs
imul
xor
scas
into
mov
and
clc
loope
jle
fidivs
cld
ja
ss
cmp
adc
mov
lock
shlb
outsl
jb
clc
mov
stc
adc
mov
mov
adc
dec
sbb
mov
sbb
loop
divb
movsb
aad
test
outsl
fsubr
js
inc
cmp
in
add
mov
adc
mov
mov
data16
sub
fcom
data16
stc
scas
shr
mov
aam
xchg
jbe
mov
lahf
cld
das
or
int3
ss
lret
cs
popa
dec
movsl
scas
dec
int
pop
inc
adc
jnp
xor
jmp
cld
dec
xchg
subl
mov
cmpsl
mov
xor
ja
test
pop
inc
fs
arpl
pusha
pop
cwtl
pop
std
pop
fcompl
xor
cwtl
and
push
ret
ljmp
jne
aad
int
fisubrl
inc
ss
xchg
fdiv
in
cmpxchg
orb
mov
xorl
mov
mov
test
stc
xor
in
imul
mov
sahf
cltd
sub
shll
push
and
mov
push
mov
xchg
and
push
ss
cmp
adcb
movsl
cli
mov
sub
stos
mov
push
inc
mov
call
loopne
jle
sub
stc
jecxz
and
inc
pop
mov
scas
call
inc
pop
or
gs
push
fmulp
lcall
xchg
xor
xor
or
cmpsl
mov
mov
and
xor
dec
xchg
pushl
adc
inc
jmp
jmp
outsl
loope
dec
out
mov
sahf
sbb
cmc
mov
pop
sub
xor
fadds
icebp
sub
cmp
add
mov
sbb
imul
mov
jle
mov
inc
popf
pushf
xlat
mov
sarl
fimull
lahf
mov
push
jb
ficoms
je
lret
push
dec
daa
loop
std
repz
stos
sbb
cmpsl
jge
pop
rcrb
or
cmp
xchg
leave
std
mov
lahf
push
lcall
fisubs
stc
lret
jno
rclb
inc
mov
mov
lods
pop
mov
inc
mov
jne
mov
pop
out
add
jo
cli
lret
cwtl
cmc
fldcw
int3
push
xchg
pop
mov
test
xchg
dec
push
and
dec
addl
push
add
dec
enter
xchg
lahf
in
mov
jmp
mov
mov
stc
mov
xchg
jb
cmp
loopne
lahf
xchg
int3
mov
rclb
enter
ja
in
insb
in
fisttpll
adc
sahf
int3
popa
cmp
sti
sub
outsb
scas
xlat
mov
and
lcall
into
or
ret
and
shrl
iret
mov
shrl
cld
adc
dec
cmpsl
inc
xchg
sub
or
push
jnp
loope
ds
clc
inc
mov
jmp
mov
movsl
pop
andb
inc
mov
push
xchg
fsin
jp
mov
cmc
sub
sub
stc
xchg
mov
fidivrs
adc
cli
fstp
sti
mov
pop
jge
stc
push
mov
mov
sub
xchg
ds
popa
cmc
ja
xor
cltd
xor
insb
xchg
jp
xor
pop
fisubrl
xchg
push
les
push
aad
xchg
cmp
push
jge
pusha
pop
stos
dec
subb
fs
pop
insb
je
rcll
jecxz
imul
movsl
inc
pop
xchg
jnp
les
mov
push
hlt
fwait
cwtl
clc
sub
ret
ljmp
out
mov
adc
inc
test
jno
jp
test
push
lds
test
or
movsb
xchg
push
icebp
jb
pop
or
xchg
mov
xchg
adc
lahf
cs
push
mov
sarl
lcall
int
sbb
push
pop
jno
push
jbe
pop
inc
cmpsb
pop
push
xor
push
scas
inc
jg
rcll
jno
pusha
dec
mov
xchg
cwtl
sbb
inc
mov
push
and
pop
adc
mov
fmuls
xor
cltd
pop
and
and
or
or
shrb
pop
imul
lahf
test
cli
daa
pushf
dec
rcrb
fisubs
mov
lea
outsl
add
push
dec
fsubl
and
orl
popa
not
inc
lret
jl
repnz
mov
adc
and
outsl
sbb
jb
cmpsl
xlat
fstpl
das
movl
adc
aad
mov
inc
inc
mov
aas
xlat
sahf
repz
sub
lcall
or
out
outsl
or
pop
movsb
shrl
clc
clc
mov
ja
push
or
sub
and
inc
lods
add
xchg
enter
out
mov
fstl
lds
jae
lds
hlt
mov
jmp
push
mov
mov
mov
fdivrs
ja
adc
fistpl
jl
mov
or
ja
lcall
mov
aad
mov
fstps
lods
or
addb
popa
ret
jmp
dec
push
cmp
inc
imul
aad
mov
fisttpll
lods
lds
mov
jecxz
cli
xchg
adc
or
aad
imul
icebp
dec
jmp
mov
jo
cmpsl
idivl
pop
mov
mov
in
out
and
push
cmc
push
nop
test
lret
clc
push
inc
dec
bound
iret
bound
sbb
fs
fcmovne
pop
cmp
mov
scas
jno
hlt
cwtl
xor
pop
lea
insb
inc
pop
and
xlat
mulb
pop
arpl
cmp
inc
or
cltd
add
loope
mov
es
mov
or
cmpsb
dec
loopne
xchg
sti
adc
sub
push
dec
lret
les
mov
jle
subb
stc
mov
mov
push
imul
ds
jae
ljmp
adc
or
fwait
xlat
mov
loope
xchg
lret
setns
lahf
push
jl
icebp
dec
movsl
scas
mov
inc
and
xchg
sbb
xor
or
mov
popa
cmc
shrl
mov
aas
xchg
push
fnsave
pop
ret
mov
rol
repnz
push
flds
inc
or
fcomps
leave
and
xor
roll
push
test
arpl
jne
push
cltd
sahf
jle
jmp
mov
jl
fsts
ds
jge
lret
xor
push
push
add
int
fmull
dec
jae
stc
mov
lahf
pop
jns
mov
xchg
cld
pop
xor
pop
xor
jecxz
shll
jb
sbb
movsl
jge
mov
mov
sbb
jp
lret
out
cmp
popf
adcl
movsl
div
sbb
or
lcall
sahf
test
xor
jb
imul
or
stos
out
call
ret
aad
outsb
insb
cmpsl
xorw
into
mov
lahf
add
bound
jle
mov
sbb
jnp
in
mov
js
mov
fmulp
xor
in
inc
addr16
add
or
xchg
push
mov
cwtl
not
mov
or
repz
mov
push
fstps
repz
sbbl
push
stos
pusha
sbb
cmp
xchg
adcb
outsb
sbbb
in
dec
cmp
fildll
mov
xor
addr16
das
cwtl
lret
xchg
dec
mov
push
insb
repz
shrb
push
mov
sub
sub
outsl
mov
cli
in
addr16
dec
sub
test
call
jae
push
jno
in
pop
inc
or
fimull
pop
mov
lea
add
push
int
nop
cmp
fbld
not
mov
jo
inc
out
inc
out
iret
cwtl
sub
xor
inc
out
inc
add
cmp
inc
scas
mov
call
adc
sbb
pop
push
push
mov
add
enter
sbb
leave
add
aad
adc
adc
icebp
jmp
push
fimull
fstpl
rcrb
lret
mov
sbb
fucomi
adc
lcall
push
mov
int3
sbb
or
cwtl
inc
inc
push
sbb
pop
pop
xlat
mov
cmp
add
adc
aas
pop
cmp
adc
jp
pushf
test
ret
std
dec
mov
sub
nop
orl
inc
addl
mov
lds
out
cmp
adc
stos
xorl
into
iret
mov
dec
nop
imul
clc
push
inc
pusha
popf
aam
negb
and
bound
inc
mov
cmpsb
mov
sub
dec
andl
adc
lds
lahf
sti
ficomps
pop
inc
lods
fdivrs
jno
and
push
inc
xor
cmpsl
and
or
jnp
jle
xor
lock
test
jmp
scas
and
dec
push
in
test
pop
mov
out
dec
mov
insb
pop
or
je
test
fs
ss
subb
mov
or
ja
bound
sar
jecxz
adc
rclb
xchg
in
adc
lret
scas
pop
or
ljmp
outsl
pop
and
stos
popa
jb
lret
xlat
subb
subb
mov
lea
out
imul
jp
jecxz
imul
sub
cli
and
daa
and
push
fimull
mov
push
pushf
cmp
mov
dec
jle
mov
bound
or
mov
jmp
cmp
add
or
mov
arpl
les
pop
jne
mov
rol
insb
sbb
das
inc
not
mov
mov
popa
aam
test
sub
test
das
aas
mov
scas
or
dec
xlat
inc
inc
leave
xor
fidivrs
shll
pop
mov
jg
out
shl
arpl
ret
loope
fsubr
xchg
arpl
fs
xchg
mov
gs
negl
add
xor
push
cmpl
sahf
jp
lds
fwait
pop
adc
mov
lds
pop
lods
and
pop
xchg
jmp
xchg
js
test
enter
scas
ds
insl
mov
iret
aad
or
adc
mov
pop
nop
xor
popa
sbb
divl
cmp
pop
xor
xchg
jp
cmp
inc
nop
inc
test
mov
call
bound
jecxz
adc
jg
sbb
and
pop
stc
xchg
out
mov
cmp
outsb
leave
stos
shr
orb
push
aas
adc
orl
push
mov
lock
lret
gs
push
test
push
loop
pop
into
stc
sub
cmp
push
pop
ret
stos
and
cmp
out
pop
pusha
adc
jg
std
movswl
test
add
stc
lods
jl
dec
pop
jo
shlb
xor
iret
int3
fiadds
hlt
cmp
fimuls
or
out
cltd
pop
cld
mov
xchg
sbb
jne
jno
pop
fisubs
dec
je
mov
pusha
add
test
inc
xchg
movsl
test
test
fdiv
mov
push
out
mov
xchg
mov
lods
or
orb
lea
and
rolb
mov
dec
int
jae
pop
dec
scas
clc
pop
add
movsl
jns
fwait
inc
faddl
dec
jnp
movsb
mov
aad
arpl
jae
mov
sahf
mov
fistpl
enter
jbe
int3
popf
out
pushw
adc
lret
mov
jbe
dec
pop
adc
add
decb
sbb
xor
mov
gs
jbe
add
xchg
dec
aaa
outsl
and
out
add
gs
mov
fistps
sbb
outsb
mov
outsb
dec
or
rep
pop
jbe,pn
es
jp
jbe
imul
cmp
imul
aam
mov
rcll
rcrl
pop
icebp
loope
out
dec
imul
std
jg
and
add
movsl
into
dec
jge
mov
subb
fucomip
repz
nop
stc
cmpsb
dec
out
notl
push
pop
loop
shrl
jecxz
mov
jl
inc
mov
sub
sub
and
imul
add
fsubrl
pop
cltd
adc
inc
jno
sub
push
jge
fistps
ljmp
movsl
mov
fs
es
hlt
loop
testl
mov
cltd
pop
bnd
mov
push
adc
inc
cmpsl
pop
mov
icebp
aam
pushf
sahf
mov
out
test
into
xor
imul
xor
out
lahf
out
sub
dec
hlt
xchg
dec
insb
push
mov
or
aad
imul
jge
out
sub
pop
adc
mov
ljmp
xchg
mov
fcoml
aam
aad
pushf
mov
icebp
inc
ret
lods
pop
mov
or
inc
das
push
cmp
adc
out
mov
mov
pmulhuw
adc
xchg
cmp
int3
nop
dec
pop
pusha
ss
sub
lret
sbb
icebp
jecxz
gs
cmp
movsb
leave
inc
push
sbbl
add
stos
push
mov
mov
dec
pop
outsb
xorl
and
jnp
dec
loop
icebp
or
lret
notl
mov
mov
ja
lahf
stos
fnsave
pop
rcll
pop
cli
insl
sbb
out
push
cmp
pop
addb
inc
test
sti
inc
mov
dec
xor
xchg
xor
test
inc
lahf
addr16
mov
cmpsl
pop
add
movsb
pop
test
adc
bound
nop
cmpsb
add
adc
xor
and
aam
and
arpl
add
adc
sub
sub
mov
xchg
mov
ds
aaa
mov
rcrb
mov
sbb
sub
adc
push
fptan
test
xor
mov
lahf
out
enter
mov
sub
test
shll
mov
add
insb
pushf
add
push
loopne
xchg
mov
push
jmp
mul
sub
sbb
mov
xchg
sbb
mull
cltd
loop
imulb
loop
jb
flds
sub
ja
and
fwait
xchg
jno
pushf
popf
sbb
rcrl
pop
or
loop
xchg
xchg
repz
mov
cmp
mov
pusha
jne
xorb
aad
bound
insb
xchg
imul
orb
fsubs
pop
xlat
adc
je
or
ds
mov
aad
xchg
cltd
inc
imul
add
ja
lfs
cmp
leave
dec
mov
vcvttpd2dq
lcall
imul
rorl
gs
xorb
add
inc
incb
cmpsl
mov
mov
lods
call
add
movsb
fadd
pop
jl
in
add
sti
jo
add
into
rolb
adc
ret
sub
and
inc
adc
ds
pop
hlt
and
push
mov
push
iret
std
mov
stos
mov
sub
pop
add
add
outsl
jg
or
xor
pop
jl
or
pushl
pop
xchg
xchg
fbstp
lret
jb
jns
cmp
xor
pop
ss
push
filds
xchg
stos
cmpsb
sub
clc
test
popa
push
mov
lret
in
sub
je
rcll
pop
jp
inc
cmp
jne
push
js
movsb
fldl
jg
and
gs
jge
popf
mov
repnz
ret
mov
in
inc
xor
pop
aas
lret
nop
pop
and
das
hlt
mov
bound
imul
icebp
mov
sbb
cmp
add
jno
inc
fisubrl
cltd
test
cld
pop
dec
or
test
xchg
test
pop
xor
adc
in
mov
shlb
mov
pop
jmp
jns
repnz
mov
mov
outsb
dec
inc
subb
std
xchg
sub
mov
xchg
pushf
addr16
leave
jg
push
outsb
test
mov
rcrb
inc
inc
dec
pusha
jle
xchg
xor
data16
and
aad
ljmp
imul
ror
dec
jmp
xor
xor
sub
addr16
mov
iret
sub
dec
add
movl
xchg
mov
adc
icebp
jae
fsubrs
pop
ds
in
nop
push
cld
sar
clc
clc
pop
iret
dec
push
xchg
insl
pop
pop
lods
aam
insl
mov
aas
adc
lret
jle
push
add
fcoms
int
lret
cmpsb
iret
sbb
jmp
mov
sub
stos
xlat
ljmp
shrl
mov
popf
loope
mov
jp
int
sbb
pushf
and
mov
daa
test
fcmove
dec
bound
test
ss
lret
lods
sbb
test
sub
jae
mov
or
sbb
lahf
and
vmaxps
xlat
scas
movsl
ss
cmp
mov
mov
sbb
jecxz,pt
in
dec
into
enter
je
enter
out
inc
aaa
loopne
dec
jl
outsb
dec
jge
and
inc
adc
pushf
sub
lods
imul
loope
jae
es
ret
and
fnsave
push
push
push
out
and
cltd
add
movsb
mov
scas
shl
and
mov
enter
shll
cmp
dec
mov
mov
fisttpll
pop
leave
lods
lods
jmp
test
mov
xchg
jno
movsl
call
jne
loope
addb
dec
mov
rcrb
mov
ljmp
add
out
fists
test
loop
into
scas
repz
adc
mov
fstps
idivl
je
js
sub
ljmp
mov
test
jg
mov
gs
dec
loope
cmp
mov
es
jne
addr16
xor
inc
cmp
jnp
ljmp
xor
xor
xor
pop
push
xor
cld
xchg
jg
gs
mov
xchg
repz
pop
xor
scas
int
dec
arpl
loop
lret
imul
fwait
sub
xchg
xlat
aad
nop
sahf
dec
inc
cmp
sbb
pop
test
iretw
inc
fs
loop
bts
pop
xchg
jne
or
test
jo
loop
sub
stos
insb
arpl
mov
sbb
cs
xor
loop
and
inc
mov
cld
pop
lcall
add
mov
mov
and
mov
push
and
mov
xchg
jae
cmp
mov
jmp
add
out
repz
das
int3
adc
in
sbb
xor
lcall
and
out
dec
mov
cwtl
pop
inc
pop
push
jg
pop
jns
addb
fwait
pop
dec
xor
mov
fisubl
xchg
and
shr
cltd
and
jae
push
jnp
subl
and
and
pusha
sbb
inc
mov
in
xchg
aas
mov
call
ja
loop
outsb
loope
push
mov
xorl
loop
lods
aad
push
adc
test
ljmp
mov
dec
mov
pushf
fsubl
cli
lods
fs
outsl
loope
xlat
xchg
dec
cwtl
pop
xor
jno
push
shll
inc
jg
mov
inc
fwait
inc
mov
je
sub
sbb
arpl
mov
sub
or
fnstenv
lock
loop
sbb
push
movsl
mov
dec
adcb
movsb
pop
or
lods
xor
test
arpl
dec
mov
test
cmp
ret
push
in
or
data16
daa
ret
es
jbe
xor
pop
fisttpll
push
mov
xor
sbb
sbbl
cmp
rcll
xchg
xchg
xchg
push
and
lahf
in
rolb
dec
adc
lret
jae
jae
adc
and
add
dec
andl
pop
stos
inc
xor
add
xchg
sbb
mov
sbb
cmp
dec
pop
xor
sub
jge
out
lcall
pop
inc
adc
sub
stos
or
cs
jae
lock
mov
push
mov
js
jmp
adc
jl
and
in
mov
fdivrs
ret
push
mov
cmpsl
jnp
fdivs
rcrl
dec
mov
or
jae
jg
jge
cmc
stos
test
jmp
adc
sti
and
call
fcomps
iret
sub
out
mov
sub
sub
inc
loopne
sti
fildl
mov
sub
loop
mov
xor
rcll
mov
lretw
mov
or
int
xchg
sarb
mov
sub
js
push
xchg
mov
mov
mov
adc
out
lahf
mov
sub
inc
in
iret
dec
xchg
mov
sahf
jbe
dec
mov
xchg
jp
push
negl
jae
cmc
add
xorb
sub
mov
push
lret
cmpsl
lea
aaa
jne
add
mov
dec
insb
sar
cli
pop
ds
in
iret
popf
es
sar
filds
cli
mov
xchg
test
int
lret
lods
pop
mov
std
and
ds
arpl
lret
dec
arpl
jb
dec
cltd
in
js
arpl
dec
aam
cmp
jmp
xor
xorb
sahf
adc
pop
lret
cld
fistpll
sub
sub
sti
ljmp
imul
cli
repz
xchg
call
push
cmovl
bound
enter
lcall
roll
decl
and
push
jp
adc
nop
mov
in
das
sbb
jle
lods
pop
jb
mov
inc
imul
sbb
in
jmp
pop
and
inc
jnp
mov
fiaddl
lds
or
out
insb
adc
pop
xor
lret
push
cltd
fmuls
push
mov
decb
mov
lds
leave
lret
ret
data16
mov
push
add
xchg
stc
repnz
sbb
inc
fisubl
fdivrl
ja
mov
mov
loope
out
xor
pop
enter
pop
mov
das
outsl
pop
mov
gs
or
scas
xor
jb
mov
pop
popa
inc
inc
sahf
push
fcoml
lods
es
dec
jb
pop
aam
call
jbe
mov
clc
jno
cli
push
lock
adc
adc
test
xor
adc
and
sbb
push
lds
imul
movsl
push
sub
cmp
insl
loopne
mov
ljmp
mov
mov
daa
aam
js
fs
jp
test
fidivl
dec
insl
add
and
fcomps
sub
or
push
jne
addb
popa
jp
ficoms
gs
and
jns
mov
ds
add
jg
pop
adc
dec
mov
aaa
leave
fidivrs
loopne
sub
sbb
lock
inc
fdivrs
push
jbe
outsb
push
shrl
xchg
jmp
or
inc
ljmp
cmpsl
jp
jge
jg
lret
adc
aad
popf
ss
loope
leave
leave
loop
notb
sub
xor
mov
jb
in
cmpsl
int3
test
xor
in
shlb
in
mov
popa
pushf
pushl
fs
cmp
daa
xor
fsubrs
insl
jns
in
repnz
and
adc
jle
cld
xchg
add
rclb
repnz
ds
clc
sbb
daa
test
sarl
jns
push
stos
mov
push
jae
jle
jl
std
jbe
rcrl
sbb
aad
mov
inc
push
or
pop
jecxz
mov
ja
mov
pusha
xchg
lret
stos
in
fisubrl
or
jp
pop
loope
neg
jge
repnz
cld
leave
idivb
xor
cmp
jecxz
cld
sub
inc
mov
popf
pop
jb
leave
test
dec
pop
loope
pusha
or
jae
enter
inc
and
fldlg2
jle
xchg
orl
lea
cltd
dec
daa
pop
inc
add
mov
les
mov
pop
insl
cmp
push
aaa
cs
xchg
mov
cli
adc
daa
xor
push
cmp
dec
push
in
mov
add
cmp
adc
fs
xchg
ss
js
push
out
pushf
and
mov
inc
xor
cmp
mov
xlat
fsub
lret
add
call
pusha
dec
mov
cmpsl
cmc
mov
cmp
pusha
rcrb
sub
fidivs
icebp
lahf
inc
enter
jge
jo
shrl
lods
in
lds
mov
xor
ds
in
ror
push
ljmp
cli
mov
push
insl
dec
push
cmpsl
shrl
call
mov
kunpckwd
adc
stc
lock
rol
dec
mov
jle
xchg
or
punpcklwd
loop
mov
test
fisubl
rcll
insb
scas
lea
dec
push
cmp
lahf
mov
mov
js
ljmp
in
lods
xor
xor
sti
clc
ds
stc
xchg
and
repz
mov
arpl
jno
outsl
xor
imul
fmuls
add
lods
or
xchg
loopne
pop
fwait
mov
dec
test
mov
push
mov
int3
enter
in
mov
shlb
inc
lods
clc
cld
out
cmp
rcrl
rcl
loope
and
adc
jnp
push
pop
leave
pusha
pop
out
cmc
xlat
sub
aas
push
aad
sti
mov
ss
cmp
push
sub
lret
pop
outsb
out
sbb
mov
mov
cmp
xor
test
in
mov
fs
inc
cli
loop
push
mov
push
and
fidivs
sbb
adc
push
rcr
aad
fldt
add
xchg
cmp
fdivl
inc
pop
mov
aas
out
xchg
ret
mov
cwtl
outsl
in
fsubl
pop
push
pop
inc
push
mov
repz
shlb
dec
cmpb
dec
and
repnz
add
or
bound
cmp
orl
loope
xchg
mov
mov
pop
sbb
and
and
repnz
lods
lcall
adc
bound
mov
movb
cmpsl
jge
mov
mov
cmp
call
pop
xchg
dec
outsb
sti
add
mov
lods
cmp
cmpsl
sub
mov
push
shl
jg
sarl
add
inc
sub
jl
in
aad
ja
popa
push
jg
mov
shll
push
pop
push
inc
xchg
imul
negl
daa
in
shlb
and
rol
sbb
in
sti
vcvtpd2dq
xor
sub
push
in
repz
rcl
and
push
mov
je
sbb
test
jp
fistps
sub
es
iret
test
and
cmc
jbe
inc
int3
aaa
adc
mov
add
jb
lea
fcmove
or
jl
arpl
push
lcall
mov
push
pop
les
and
lcall
mov
fld
mov
dec
jl
ret
jp
xchg
ret
cwtl
pop
stos
loopne
aaa
add
mov
or
push
adc
movsb
push
lcall
pop
into
movsb
les
sub
in
or
push
jbe
leave
sbb
loope
push
mov
bnd
jnp
int
lock
push
jne
jae
lds
jae
or
fcoml
lret
stos
leave
mov
pop
dec
dec
movsb
xchg
dec
push
jo
push
pushf
inc
lret
add
pop
sbb
imul
jnp
xchg
mov
xor
sub
in
js
pop
dec
lcall
ds
mov
adc
es
pusha
popf
inc
rcl
xor
jge
out
rep
push
push
push
cld
fmull
or
or
std
daa
xor
lcall
js
mov
lahf
rorb
out
jl
mov
jecxz
loope
xor
lahf
into
rcr
ret
test
cwtl
imulb
test
shrl
fwait
sarl
dec
dec
push
push
jo
xor
mov
mov
jnp
adc
fldt
or
xchg
adc
xlat
js
push
push
xchg
adc
cmp
cltd
mov
cli
push
mov
sub
int
fmul
push
adc
cld
sub
mov
call
lods
mov
jae
cmpb
in
insl
fdivr
xlat
jle
iret
push
and
pop
xchg
xor
lods
fmul
in
push
jmp
ret
enter
dec
push
into
rorl
sbb
jns
mov
outsb
cmp
add
dec
mov
nop
push
lahf
cmp
dec
negb
dec
xor
lods
movsb
into
daa
mov
add
sub
jnp
lahf
jmp
popf
shr
int
and
mov
dec
sub
dec
xor
les
pushw
loope
call
icebp
jnp
dec
int
mov
push
jnp
stc
ds
jle
push
mov
loope
and
dec
mov
int
movsb
xchg
dec
gs
fsub
add
insb
xor
sbb
mov
add
int
sub
and
cmp
test
inc
and
lea
add
and
inc
jnp
push
xor
movsl
negb
inc
xchg
nop
adcl
mov
push
sbb
add
std
push
insl
test
or
in
dec
fs
mov
push
out
dec
push
mov
scas
mov
xchg
dec
cwtl
imul
stos
jno
lea
das
pop
out
lock
jae
loop
cmp
andb
outsb
xchg
sub
iret
movsl
jo
add
jne
cmp
rcll
push
xchg
cmpsl
ds
mov
add
dec
adc
adc
mov
mov
std
outsb
les
fstpl
popa
cli
inc
mov
and
dec
lea
insb
xor
cmp
mov
jno
xchg
jg
test
in
push
ss
loopne
inc
xor
lods
pop
in
clc
call
lods
imul
call
mov
clc
xchg
mov
ljmp
xchg
mov
cvtps2pd
add
and
fchs
stc
adc
in
cmp
push
test
adc
cmpl
mov
aad
mov
iret
scas
ds
lret
testb
stos
push
dec
clc
dec
mov
testb
icebp
jb
push
adc
ja
cmp
in
mulb
or
arpl
add
lock
frstors
iret
fldenv
das
aam
add
sub
mov
rcl
pop
insl
fidivs
mov
testb
xchg
push
mov
insl
mov
dec
lods
mov
jecxz
jge
out
inc
fmuls
xchg
cmp
lahf
gs
and
add
adc
mov
ret
jne
jmp
mov
sub
sub
int3
xor
inc
test
xchg
bound
test
loop
shl
pusha
aad
pop
rcrb
dec
cmp
pop
xchg
gs
sti
iret
jb
sti
sub
push
and
pop
push
inc
cmp
cmpsl
dec
adc
xchg
ret
das
aaa
mov
mov
inc
push
ss
jg
loopne
adc
xchg
sub
ja
xchg
and
stos
sahf
inc
push
lret
or
enter
hlt
sub
or
adc
xor
test
xchg
or
inc
pop
add
jb
or
xchg
jbe
lods
pop
sub
sub
je
in
add
mov
imul
mov
push
lods
dec
mov
popf
jecxz
adc
dec
and
aaa
and
inc
fnstenv
mov
loope
mov
mov
mov
xchg
adc
test
xchg
out
fwait
jge
das
or
scas
dec
sub
jb
ja
mov
sahf
test
ljmp
in
inc
push
icebp
mov
mov
aas
sub
jecxz
hlt
xlat
vpslld
push
repnz
push
jl
ja
or
add
cmp
ss
sbb
jmp
xorb
mov
popf
inc
push
jp
mov
data16
nop
inc
ret
movsl
adc
repnz
hlt
imull
xor
test
lock
fsubs
jmp
xchg
and
pusha
lret
push
or
cmp
xor
add
fmull
mov
aad
cmp
mov
nop
bnd
test
popf
adc
ret
dec
mov
pushf
testb
push
pop
jo
add
sbb
and
aaa
mov
aaa
sbb
jl
xor
jmp
dec
mov
add
add
cmp
push
or
mov
cli
into
xlat
or
or
inc
jne
jnp
jo
push
dec
inc
jmp
adc
jno
bound
dec
push
loopne
sarb
outsl
out
enter
js
in
aas
add
ja
repnz
xchg
idiv
arpl
pop
ja
jno
loope
push
andl
sbb
sti
cmp
lds
es
decl
aaa
enter
stc
les
in
in
add
lea
in
inc
pusha
shl
xor
adc
xchg
ss
jp
cmpsl
cmpsl
bound
cmp
mov
inc
lods
mov
dec
imul
lahf
stos
push
mov
or
movsl
mov
and
mov
adc
xor
push
daa
or
or
sarb
sbb
mov
sub
into
dec
pop
ret
or
xchg
repz
sub
mov
gs
inc
out
in
lcall
lret
sti
inc
lods
js
cmp
scas
aam
lock
dec
adc
sbb
in
dec
sub
addl
sarb
push
and
cmp
mov
repz
dec
mov
sarl
loopne
cmp
fistpl
in
jl
out
push
add
loope
xchg
mov
arpl
sbb
cmp
xchg
fiadds
inc
cmp
mov
mov
sbb
push
imul
ficoms
pop
jae
mov
lahf
into
scas
push
icebp
les
mov
push
pop
test
pop
mov
cmp
ret
mov
adc
insb
jge
inc
lods
xor
test
mulb
stos
push
test
cmp
pop
ret
in
sti
push
pop
je
pop
mov
mov
adc
fldl
std
mov
lcall
test
in
ss
lock
add
cmp
xorb
jnp
call
fldenv
xchg
icebp
ret
das
pusha
xchg
jbe
inc
or
cmp
cmp
or
cmp
inc
pop
add
sbb
aaa
cmpsl
pop
add
imul
jmp
mov
and
adcl
pop
fildll
sub
jecxz
jbe
repnz
sbbl
dec
push
hlt
and
popa
ret
cmpsb
push
mov
ret
test
xchg
aas
aam
sti
loopne
dec
aaa
sbb
inc
or
rorl
cmp
xlat
loopne
push
xchg
loop
aaa
dec
lahf
clc
pop
inc
je
jmp
addr16
jb
pop
lret
std
cmp
jbe
cmp
outsb
or
loopne
outsl
push
sbb
sbb
test
and
ficompl
clc
ret
nop
rolb
cli
mov
scas
cmp
dec
pop
in
or
lock
orb
cmp
iret
in
pop
mov
push
or
lods
pop
pop
jbe
push
sbb
pop
lret
sub
scas
add
and
pop
sar
sbb
lock
or
rcr
xchg
add
lods
sbb
sub
mov
or
popf
enter
test
ljmp
jne
insl
cmp
lcall
mov
mov
repnz
lds
xchg
mov
repz
daa
mull
push
iret
xor
xchg
jo
pop
jo
fnstenv
lods
mov
cmp
mov
jnp
or
scas
push
leave
bound
add
add
or
lds
pop
inc
cmpsl
pop
gs
pop
xchg
fbld
xchg
cmp
sbb
fisubrs
cli
ret
mov
xchg
push
arpl
cmc
jbe
punpckhdq
lret
cltd
popf
mov
in
jle
fistpll
imul
xor
std
mov
fmul
jge
lock
repnz
sub
or
into
sbb
or
aas
cmc
aad
nop
mov
aaa
pop
dec
mov
out
and
je
xor
out
data16
jecxz
ss
or
sbb
and
jp
adc
sbb
popf
jb
xchg
and
pop
fldt
push
and
push
addr16
sub
stos
xchg
inc
repnz
popa
fstpt
dec
xchg
dec
je
pop
pop
into
dec
and
jl
cmp
sub
push
lahf
and
les
stos
hlt
add
in
mov
andb
inc
bound
stc
mov
sbb
pop
push
mov
sub
push
or
loop
outsl
inc
jmp
xchg
arpl
xchg
pushf
notb
mov
jns
add
repnz
push
inc
repz
jecxz
sub
aas
daa
mov
sub
mov
pop
sub
outsb
mov
push
fidivl
cmp
std
push
pop
xor
inc
xchg
adc
es
add
inc
lcall
jmp
mov
cmpb
jnp
iret
push
mov
dec
push
lea
into
xlat
pop
sub
pop
les
enter
in
js
inc
or
mov
add
clc
or
int
jmp
test
jb
or
outsb
bound
mov
bound
jg,pn
adc
and
pop
and
jg
into
fwait
jge
lock
and
push
hlt
je
es
pop
cli
pop
popf
mov
push
mov
push
mov
test
cmpsb
jne
inc
xlat
adc
dec
lea
and
xor
or
dec
mov
into
cwtl
sbb
mov
and
hlt
xorb
out
aad
jl
sub
push
inc
dec
xchg
pusha
jae
sbb
mov
enter
addb
adc
push
push
fwait
hlt
jnp
sub
sbb
jmp
in
push
enter
ret
scas
and
mov
clc
lret
ret
ds
jae
int3
sti
xchg
add
addr16
jl
cmpsl
and
jo
or
fnstcw
sub
out
mov
hlt
js
jae
shlb
pop
cs
inc
inc
ss
int3
pop
dec
das
xor
icebp
ret
sahf
adc
push
repz
mov
cmp
scas
clc
leave
push
out
sar
push
sub
mov
sub
lret
popf
outsb
aaa
test
fists
or
in
stc
stos
xor
fsubs
push
pop
jno
sub
or
test
cmc
mov
rcrb
out
cltd
push
call
and
mov
movsb
push
call
stos
inc
bound
cs
cmp
cs
mov
jge
int3
je
sbb
sti
in
iret
sub
sbb
les
roll
icebp
in
les
and
mov
test
mov
push
mov
andb
or
lea
xchg
cltd
sbb
rorl
xor
popf
mov
cmp
cmpsl
sub
imul
pop
push
les
mov
sahf
andl
sbb
lds
adc
cld
insl
out
jns
inc
in
movsl
xchg
xchg
add
loop
and
cmp
sti
data16
rclb
mov
sbb
dec
pop
mulb
adc
fbld
adc
out
inc
dec
movsb
in
push
repnz
dec
aas
sti
xor
xlat
cmpsb
mov
sahf
in
push
push
rep
fsts
mov
stos
scas
dec
sub
lods
mov
std
adc
inc
rcl
mov
xor
fimuls
popf
cltd
loope
sub
mov
test
fisttps
fwait
sub
mov
xchg
add
mov
or
adc
lahf
in
sarl
cld
insl
rcr
pusha
push
inc
popf
pop
sub
int3
fs
add
fisubrs
add
popl
dec
cmp
shrl
fldenv
test
sub
pop
test
cmp
push
cmc
fsubrs
xor
cs
push
inc
cmpsl
hlt
add
and
shll
add
adc
or
mov
pop
mov
jae
cmpb
pop
dec
scas
or
mov
push
pop
sub
dec
popa
call
inc
cmp
mov
sbb
in
insb
sbb
test
fsubrl
jne
inc
pop
nop
fbld
jge
fld
lcall
pop
in
mov
mov
inc
lock
enter
xor
popf
loop
dec
lret
add
xor
aas
and
cmp
sbb
out
aam
inc
dec
mov
testl
out
dec
adc
adc
lods
movsb
cmp
imul
pop
and
rorb
push
and
sub
imul
push
aaa
mov
cmp
mov
pushf
iret
jge
jbe
das
push
push
rorl
push
xor
dec
sti
add
pop
enterw
mov
test
add
push
push
and
rorb
dec
rcll
mov
out
ret
add
jp
sub
pop
imul
cli
add
jge
hlt
rcrl
jle
in
testb
push
jecxz
aaa
cmp
lods
mov
jb
dec
rorb
dec
jne
loopne
inc
mov
stc
jno
dec
into
ljmp
cld
sub
rorl
inc
stos
sbb
cmpsb
idivl
cmpsb
or
adc
inc
xchg
mov
movsb
or
sti
mov
inc
xchg
mov
insb
loopne
sbb
leave
fistpll
mov
sub
sub
mov
stos
add
fnstcw
repnz
inc
dec
jb
mov
jo
mov
pop
int3
adc
push
test
jns
mov
mov
je
adc
into
not
mov
test
aam
or
inc
sbb
imul
gs
in
aaa
dec
aad
arpl
xchg
pusha
adc
xchg
cmp
xchg
rcrl
dec
add
les
inc
clc
adc
stc
fs
lret
xor
cmp
inc
int
outsl
dec
pop
jecxz
pop
fnstsw
dec
stc
pop
jbe
adc
cmpsb
xor
cli
inc
lds
sbb
xchg
inc
lods
sub
and
push
push
data16
mov
roll
dec
mov
xor
push
stc
dec
push
mov
cli
xor
sbb
mov
loopne
add
pop
cmc
aaa
xchg
cmp
mov
push
mov
repnz
and
sbb
xor
adc
pop
and
xchg
sbb
jae
inc
out
inc
jns
lods
fstpl
push
cs
push
enter
cmp
insl
add
cmp
cmpb
into
xchg
loope
mov
inc
cmc
mov
mov
inc
mov
test
add
cmp
add
outsb
push
imul
mov
lock
pop
xchg
fwait
xchg
or
lahf
or
sbb
call
or
imul
add
mov
mov
mov
adc
negb
hlt
icebp
xchg
fsubl
dec
mov
fsubs
mov
mov
sbb
loop
and
adc
pop
dec
fwait
js
fdiv
rorb
and
clc
in
push
inc
mov
sbb
pop
mov
mov
mov
xor
imul
iret
std
sbb
adc
hlt
pop
or
cs
push
xchg
inc
add
stos
push
push
mov
outsb
ficoml
mov
inc
orl
cs
pop
mov
dec
lods
xchg
outsb
or
mov
cmpsb
ljmp
mov
daa
sub
and
pop
adc
fucomi
cmp
mov
push
outsb
xchg
dec
sub
sub
in
jne
int
jecxz
in
roll
sti
pop
add
push
fisttpl
dec
clc
push
xor
pop
jnp
mov
dec
out
sub
sub
int3
mov
lock
loopne
and
insb
mov
enter
mov
ret
inc
notb
lahf
outsl
mov
pop
and
lods
xor
push
xchg
jne
cld
cld
lret
jne
int3
pushf
sub
push
aam
pop
icebp
jns
shr
insl
test
mov
out
loope
jb
push
jmp
push
cmp
dec
push
adcl
jo
mov
or
nop
push
vmread
popa
adc
xchg
xor
pop
lods
mov
dec
into
adc
lods
sarb
xchg
mov
sbb
in
sub
decl
jbe
inc
and
and
add
imul
lret
or
iret
push
vshufps
test
jne
pop
nop
mov
mov
xchg
xchg
lds
cmp
inc
jg
cmpsl
inc
fildll
cmp
ds
cmpsb
push
push
push
sbb
ss
mov
jo
mov
xchg
sbb
aad
mov
or
js
div
mov
inc
dec
and
ja
scas
std
lret
sbb
push
xchg
pusha
fstpt
pop
and
cmpsb
in
aad
pop
dec
cmp
xchg
cmp
push
mov
cmp
out
xlat
and
cmp
adc
insb
bound
aaa
inc
push
or
push
xchg
das
adc
lods
pop
xor
push
mov
das
and
rolb
sub
int
xchg
and
sbb
mov
add
push
push
xor
inc
cmc
or
push
ja
pop
les
popa
jno
sub
xlat
add
lcall
push
and
fisttpl
dec
mov
insl
or
mov
mov
and
js
imul
inc
adc
cltd
notb
aaa
push
movsb
push
shlb
ret
popa
shl
mov
add
dec
mov
and
push
insb
leave
ret
xor
sti
call
popf
sti
jne
aam
cli
ss
xchg
jl
ljmp
adc
lods
scas
fists
movsb
xor
and
subb
arpl
imul
mov
insb
loopne
loope
inc
sbb
jmp
cmp
push
int
scas
ds
adc
add
inc
mov
movsl
aam
jle
pop
xchg
aam
insl
adc
mov
bound
or
xor
lret
aaa
pop
imul
ds
sub
push
lods
jae
cwtl
cmp
adc
dec
std
xlat
sub
lods
xchg
sbb
lahf
std
testl
in
je
jb
stc
mov
pop
add
sbbb
lret
call
jp
cmpsb
test
cmp
xchg
xchg
stos
xchg
and
pop
push
aad
dec
mov
jns
push
les
neg
pop
dec
or
insl
lods
mov
adc
xchg
xchg
repz
mov
stos
push
add
inc
test
mov
mov
dec
fmul
mov
sub
stos
jecxz
popl
ret
sub
push
xor
stos
jo
push
dec
popa
mov
push
into
repz
pop
mov
int3
lret
jo
call
pop
ud0
imul
int
inc
es
push
adc
lods
xor
push
out
jp
jae
movl
insb
pop
cwtl
in
mov
std
xlat
outsl
pop
pop
and
xor
xor
loop
xchg
outsl
int3
mov
adc
mov
pop
cltd
dec
or
add
push
inc
lahf
or
nop
mov
in
cmp
lret
sub
ret
gs
test
pop
or
jo
jae
adc
xor
jl
sbb
or
or
mov
shlb
dec
cltd
in
daa
or
dec
xchg
add
and
stos
addl
fstpl
mov
int3
fsubr
scas
and
xor
mov
fildl
leave
mov
divb
inc
sub
jns
pop
je
xor
mov
test
jb
push
push
aam
cmp
popl
jmp
sub
xchg
insb
enter
xor
jno
and
jmp
fisubl
jecxz
in
jl
bound
mov
mov
and
cmc
dec
sbb
inc
xor
mov
mov
scas
fwait
dec
cltd
mov
sub
dec
ds
ljmp
roll
aam
jmp
dec
xor
mov
and
lods
clc
or
sub
xchg
adc
subl
xchg
pop
sbb
or
cld
nop
jae
repz
lcall
clc
mov
pop
pushf
dec
fidivrs
imul
inc
jmp
pop
mov
jmp
std
outsl
inc
leave
scas
sbb
sub
mov
mov
fs
mov
fimuls
sbb
and
inc
mov
mov
jne
pushf
jnp
jae
mov
or
testb
sbb
xchg
and
movsl
arpl
add
mov
loopne
add
in
mov
pop
popa
cmp
fnstcw
jae
fidivrl
and
pop
sub
popa
jmp
les
dec
or
sbb
lret
shrb
adc
les
jg
sub
adc
ds
jmp
dec
push
inc
adc
add
xchg
cwtl
xor
or
pop
clc
nop
rcll
lock
dec
pop
jge
jp
push
rclb
jno
fidivl
xchg
rorl
in
outsl
add
testb
add
lcall
icebp
ja
jae
movsb
test
iret
push
ss
shr
push
arpl
inc
sub
movsl
outsl
shlb
aam
mov
cmp
orb
jae
adc
mov
inc
ja
pop
jbe
cmp
cmpsb
add
repnz
inc
testl
push
push
rolb
repz
and
cs
call
mov
dec
push
lret
cmc
xor
mov
inc
cld
lcall
out
dec
and
pusha
mov
out
scas
cld
shlb
or
out
in
or
xchg
repz
cmp
xchg
test
inc
out
int
dec
add
in
xchg
fistpll
push
add
push
fnstcw
fucomip
xchg
dec
outsl
lahf
out
mov
shl
push
movaps
cmpb
movsb
fstpl
mov
sti
cwtl
sub
xchg
test
movsl
arpl
push
fsubl
and
jae
sbb
stos
js
sti
imul
pop
mov
mov
mov
add
sub
fisttpll
fs
mov
ret
xchg
cmp
popf
sub
cmpsl
icebp
xchg
lock
fwait
xchg
sar
mov
jb
mov
ret
sub
int3
movsb
fildl
jl
push
pop
leave
xchg
mov
lret
lahf
loop
out
call
cmpsb
inc
les
sbb
cmp
scas
cmc
add
xlat
fdivs
test
bound
scas
lcall
inc
jle
mov
mov
sbb
adc
pop
shll
inc
push
into
pop
jge
dec
sub
and
inc
adc
pop
loopne
fdivp
push
push
sbbl
jmp
out
shl
or
mov
or
data16
add
sub
out
sub
ja
lahf
cmc
ja
pop
dec
jns
inc
fistpll
cmp
out
sub
fcmovnu
movsl
ret
rcr
push
mov
add
cmp
mov
rolb
imul
pop
je
cmp
xlat
pop
xor
jns
scas
fcompl
mov
fcomip
data16
gs
dec
jb
testl
jmp
stc
inc
iret
in
in
inc
xchg
jl
lods
xchg
adc
sahf
push
fists
add
mov
mov
test
mov
sub
mov
push
lods
cmpsl
jle
fcomps
sbb
stos
xchg
cmpsb
lea
mov
push
clc
sarb
ret
cmpsb
imul
rorl
push
je
mov
and
or
popf
lods
or
push
inc
rep
xor
jae
shl
pop
bound
sbb
cwtl
jl
mov
dec
std
leave
and
push
inc
push
aas
jns
loopne
jno
push
inc
mov
jae
xlat
sbb
xchg
push
add
adc
cmpsb
pop
dec
or
rcr
aaa
loop
add
push
lea
leave
pop
sbb
sub
imul
out
movsb
out
repz
cltd
inc
jbe
cmpsb
in
orb
testl
lret
inc
mov
sbbb
inc
or
scas
in
xlat
mov
sbb
xchg
jl
mov
int3
outsl
xchg
xchg
cmp
mov
sbb
pop
mov
cmpsl
dec
fidivs
pop
not
mov
fs
or
aas
sbb
daa
pusha
orb
aad
loopne
and
xchg
cmp
add
mov
repnz
jp
ja
and
add
lret
test
xchg
lock
xorl
lcall
andl
jae
andb
inc
aaa
fldt
xor
or
sahf
rolb
lods
push
push
mov
rorb
enter
jge
xchg
test
scas
fs
sti
stos
lahf
insb
mov
mov
and
and
mov
dec
dec
and
jns
and
idivl
sbb
dec
jle
jno
cmp
xorb
stos
cltd
jmp
xchg
sbb
iret
inc
inc
push
hlt
push
xchg
jb
xor
inc
lret
pop
out
add
test
sub
cs
iret
sbb
or
pop
je
mull
jo
xchg
inc
cmp
loope
out
imull
push
dec
cmp
mov
add
fcmovnbe
shl
mov
and
imul
pop
ljmp
dec
pop
mov
fnstsw
subl
test
cmp
and
push
pop
or
ffreep
inc
pop
rcr
push
dec
pusha
aam
popf
addl
adc
jno
daa
push
cmp
sbb
push
push
add
or
mov
push
jl
ret
sbb
std
rorl
addr16
xor
aas
mulb
test
aas
add
sbb
jmp
jle
lods
cmpsb
pop
adc
jnp
or
subl
cmp
lahf
jmp
cmp
test
rcll
fwait
loop
mov
cmp
js,pn
outsb
aaa
in
cmp
fstl
add
push
in
cmp
out
cs
cld
call
in
jp
out
ss
repnz
xchg
xchg
sub
add
lcall
cltd
add
in
pop
data16
add
mov
call
xchg
loope
mov
or
sub
add
adc
movsl
jae
mov
push
pop
jbe
jne
pop
add
jne
out
or
push
fsubl
cmp
sbb
jmp
mov
mov
ja
and
xchg
dec
xor
xor
je
pop
in
divb
gs
adc
les
cmpsl
xchg
lret
in
ficompl
data16
icebp
leave
test
movsb
mov
cwtl
push
push
ljmp
out
sbb
jge
push
xor
insl
add
inc
dec
push
iret
mov
xor
in
lret
insl
test
das
fdivs
outsb
insl
test
cwtl
sbb
xor
xchg
sbb
popf
in
jmp
cmp
outsb
roll
and
sbb
inc
mov
out
inc
jle
sbb
fwait
ret
ss
and
out
jne
lcall
scas
je
stc
mov
out
push
ja
gs
mov
nop
jmp
inc
in
push
in
adc
mov
push
fsubs
cli
fcmovb
sbb
adc
mov
scas
lods
sub
add
mov
movsl
or
jl
rcl
rcll
jle
scas
inc
lods
loop
inc
das
push
adc
dec
mov
and
push
dec
jb
push
outsl
and
and
cmpsb
push
in
inc
jmp
fildl
or
jno
testb
cmp
mov
inc
ds
mov
inc
shlb
popf
mov
je
inc
push
mov
or
and
dec
inc
test
sbb
jae
outsl
pop
hlt
xor
adc
pushf
pop
insb
loopne
divb
inc
test
out
mov
push
out
rorl
fbstp
cmpsb
mov
fldl
loop
sub
into
sub
and
out
js
push
loope
push
sbb
repz
add
mov
mov
pop
cmpb
nop
push
mov
ret
adc
or
xor
sub
cmp
sub
jnp
sbb
push
dec
dec
leave
loope
in
adc
add
sub
pop
mov
mov
fs
bound
xchg
arpl
inc
cwtl
popf
or
xlat
testl
jle
or
lret
push
mov
sub
fwait
stos
jne
jg
cmpsb
fdivr
mov
dec
test
push
dec
test
mov
xor
cmc
push
adc
roll
gs
scas
int3
clc
ja
or
add
xor
pop
mov
mov
adc
insb
dec
inc
popf
stos
dec
notl
add
adc
rolb
stc
fwait
or
and
push
outsb
push
sub
ljmp
push
pop
hlt
mov
xchg
cwtl
clc
mov
imul
imul
nop
leave
cmc
out
in
les
dec
movsl
aam
add
lock
popa
cmp
hlt
repz
inc
xor
xchg
jb
jnp
mov
mov
push
lea
and
hlt
and
lahf
sub
sbb
sbb
jge
ljmp
xchg
sbb
cmp
xor
fbstp
call
jb
dec
push
rcll
mov
sub
pusha
insl
cmpsb
in
ja
neg
es
inc
lret
xor
add
xchg
and
cmp
enter
inc
movsb
cmp
andl
int
jbe
pusha
pop
aas
cmpl
push
inc
fldcw
pop
jae
mov
adc
xor
cmp
add
jg
mov
pop
addr16
cmpsl
mov
sbb
cmpsl
movsb
cmpsl
add
dec
hlt
js
sbb
out
xor
cld
out
hlt
cmpsl
imul
add
jb
inc
push
outsb
data16
fidivrl
sbb
xor
icebp
push
push
inc
mov
arpl
mov
mov
and
int
in
mov
cmp
in
xor
cmp
pop
call
jno
arpl
subl
mov
push
addr16
addl
jmp
movsb
xor
roll
mov
pop
pop
mov
add
into
pop
cmpsl
aaa
push
ret
xchg
mov
or
sbbl
cmp
aas
subb
push
pop
ja
mov
sbb
push
sbb
and
gs
sbb
jb
pop
adc
mov
movsl
aad
or
lods
testb
cmp
pop
call
subb
cmpsb
push
sbb
inc
stc
ffreep
push
out
pop
bound
test
cmp
clc
xchg
or
mov
sbb
or
add
adc
lret
jno
mov
adc
das
fstpl
sub
mov
mov
sbb
push
xor
arpl
jne
loope
outsl
cmpsb
mov
hlt
mov
cmp
lahf
cli
into
mov
clc
sahf
dec
test
sarl
inc
mov
shll
mov
imul
fs
subl
out
push
insb
add
sbb
ss
push
jne
fmul
mov
icebp
clc
out
mov
movsb
lea
stos
mov
mov
test
pop
push
mov
divb
inc
ja
push
negb
fsts
xchg
shll
sub
test
mov
pop
cld
push
dec
daa
mov
inc
imul
push
imull
dec
and
enter
aam
addl
cltd
cli
pop
cmpsl
popf
sbb
jae
inc
add
mov
imul
unpckhps
pop
xor
adc
xor
jnp
scas
fadd
lahf
lret
push
in
dec
cmp
dec
outsb
xorl
cmp
push
aas
das
lds
jmp
scas
pop
jecxz
cmc
repnz
jg
cmpsb
and
mov
imul
dec
es
or
cmp
punpckldq
dec
clc
xchg
scas
test
out
jnp
fldl
ljmp
shr
pusha
rorb
add
sub
jo
insb
xor
pop
into
sub
mov
add
mov
sub
shll
dec
xor
jb
xchg
mov
push
daa
jecxz
adc
call
xchg
adc
xchg
mov
fmuls
sub
loopne
out
lahf
mov
lret
pop
fisttps
xchg
xchg
movsl
ja
jl
int
add
xchg
test
xor
aam
mov
insl
sub
lea
pop
xorl
imul
loope
xchg
imul
out
rclb
sbb
and
cmp
imulb
nop
iret
stos
lock
pop
cwtl
loopne
popa
push
sbb
add
push
dec
data16
lahf
mov
mov
and
mov
out
mov
icebp
fnsave
rolb
add
ds
popf
ja
and
popa
lods
xchg
jno
out
and
jns
sub
sub
hlt
pop
adc
dec
push
mov
inc
sbb
rcrb
int
jb
lods
scas
repnz
bound
fcomip
and
repnz
lret
xchg
dec
fsub
pusha
push
mov
push
jmp
int3
fwait
js
inc
ret
jl
mov
test
xor
jne
xchg
xor
mov
push
shlb
out
cmp
movsb
in
loope
xor
pop
jno
int3
xor
insl
mov
iret
lods
ljmp
sbb
imul
mov
cld
cmpsb
mov
push
stos
sbb
movsb
mov
je
iret
int3
cli
cs
loopne
iret
mov
or
repnz
cli
aas
mov
mov
inc
pop
mov
std
imul
mov
jl
mov
sti
mov
arpl
popf
xchg
xor
cli
push
out
mov
sbb
push
fst
pusha
fstpl
mov
push
in
in
cmp
popa
inc
not
jo
xchg
rol
les
pushf
or
push
in
pop
sub
inc
adc
mov
outsl
mov
xchg
mov
adc
outsl
lcall
movsb
pop
in
ret
mov
jae
inc
and
pop
pusha
or
insb
jmp
pop
push
xchg
gs
aad
test
ja
scas
leave
int3
leave
pop
andps
pop
cmp
insl
aas
inc
cmp
clc
or
lahf
ret
dec
lcall
mov
roll
mov
inc
adc
xchg
push
dec
test
inc
subl
push
add
in
sub
or
mov
push
fisubrs
orb
cltd
and
mov
inc
cltd
mov
xchg
fwait
cmpsb
cmp
lea
mov
xchg
push
and
mov
cs
pop
jb
mov
or
out
hlt
lods
pop
lea
sti
mov
clc
stos
push
add
push
in
inc
sub
mov
lcall
lods
cld
ret
cmp
jb
decb
pop
push
shr
jne
or
bound
les
jecxz
test
ss
pop
addr16
data16
xor
fwait
inc
or
mov
test
dec
mov
js
inc
cmc
into
mov
lods
enter
dec
pop
sub
sbb
andb
sub
jmp
nop
popf
gs
scas
insl
imul
push
test
int
rcll
adc
or
push
aaa
es
or
jb
ffree
dec
adc
push
repz
jb
movsl
xor
mov
and
popa
jo
dec
in
sarb
popa
ficoms
xchg
adc
clc
arpl
dec
mov
cmc
rcll
fnsave
inc
sub
cwtd
adc
clc
lret
push
sti
dec
and
loope
and
sub
dec
daa
mov
loope
shl
aas
lret
cltd
imul
ficomps
mov
jmp
les
mul
sub
pop
and
push
adc
inc
pop
clc
dec
xor
and
inc
sbb
rcrl
mov
add
aam
inc
mov
movl
jnp
push
insl
inc
mov
sub
mov
lods
inc
add
lahf
sub
cmpsl
loop
shll
mov
sbb
aad
stos
inc
test
out
inc
sahf
jno
push
pop
add
ja
icebp
mov
popa
adc
insl
out
mov
insb
xchg
stc
mov
sub
sub
mov
movsb
jecxz
movsl
rol
push
fucom
adc
test
cs
inc
int3
cwtl
clc
push
dec
xchg
push
inc
dec
aam
jecxz
in
jecxz
jae
push
mov
inc
sub
mov
scas
push
dec
or
xchg
lret
and
xorl
loopne
insb
push
sub
pushf
lahf
or
xor
jns
dec
cmpsl
mov
call
shr
data16
int3
lcall
and
xor
in
repz
es
enter
leave
popl
pop
lds
push
sti
lods
push
jg
jge
and
cmp
push
loopne
jno
inc
or
xchg
mov
adc
mov
push
lret
outsb
lea
insl
sbb
scas
into
and
mov
data16
add
shll
push
jg
mov
pop
add
popa
inc
outsl
filds
jne
rcrl
cmp
cmpsl
jl
and
shlb
test
and
adc
pop
ss
pop
cmpsb
cmp
sub
sti
outsl
repnz
xor
ss
cli
cmp
jecxz
add
lcall
repz
stos
data16
into
fcmovnu
fbld
pop
shrb
sub
adc
pop
cmp
icebp
test
and
mov
into
lea
xor
mov
nop
push
js
push
hlt
sbb
and
ret
inc
pop
mov
push
jo
fnstcw
mov
mov
and
lret
dec
call
mov
sub
jecxz
inc
add
scas
push
jb
lods
xchg
imul
sub
ljmp
sub
aad
cmpsb
xor
pop
outsl
insb
enter
int3
lcall
mov
int3
int
outsb
and
ljmp
mov
or
add
pop
stc
xchg
in
test
ret
mov
push
add
sti
xor
lahf
push
push
mov
test
orb
mov
adc
dec
mov
jbe
lret
mov
out
movsl
push
stc
or
inc
lods
js
arpl
and
mov
mov
out
pop
lods
dec
insl
lea
lahf
mov
push
test
pop
lahf
aaa
xchg
mov
or
lods
bound
push
shrb
mov
mov
insl
rcrl
cmpsb
lfs
cmpsl
pop
cwtl
xchg
add
mov
pop
jecxz
or
inc
or
push
adc
repnz
or
cmp
ljmp
jnp
mov
es
add
jle
repnz
pop
xor
mov
aad
push
out
inc
mov
sub
in
cwtl
out
call
xchg
mov
pop
adc
or
adc
mov
sbb
add
or
inc
sahf
mov
daa
nop
das
push
ret
lret
xorl
cmp
pop
and
rorl
sub
psubq
dec
inc
sbb
nop
fsubrs
pop
or
jnp
add
mov
sub
popa
movsb
rolb
adc
add
push
mov
pop
scas
test
imul
andl
scas
shll
imul
sub
mov
inc
aaa
dec
inc
inc
push
cli
shrb
test
jle
dec
add
mov
xchg
sub
mov
xor
and
inc
mov
and
adc
jne
mov
jmp
out
ret
ljmp
cmp
sub
lods
inc
xor
stos
cld
iret
xor
gs
imul
jns
movsb
arpl
in
ficoms
cmp
lods
jle
lock
cmp
jns
push
cmp
mov
cld
pop
or
hlt
xor
push
inc
dec
negb
fisttps
pop
xchg
pop
mov
pop
imul
shrb
add
jo
daa
adc
repnz
mov
adc
repz
fdivl
cmp
pop
test
jmp
arpl
adc
pop
cltd
dec
or
add
popl
and
ljmp
hlt
bound
mov
mov
sub
or
push
mov
pop
ret
mov
mov
dec
out
pop
jno
js
adc
ljmp
scas
cld
pop
fsubl
leave
cmc
cmp
insb
es
test
push
or
xchg
ss
ja
shl
aas
icebp
ljmp
cmpsl
push
jo
xchg
movsl
int3
mov
jle
stos
in
popa
sti
mov
mov
xchg
and
faddp
nopl
xchg
dec
mov
test
in
das
mov
scas
cmp
movsb
ret
stc
ja
mov
pop
mov
push
adc
inc
adc
loopne
cmpsl
add
lock
push
hlt
or
xchg
aad
daa
adc
in
mov
sarb
add
mov
pushf
sub
cs
inc
dec
xor
imul
nop
and
push
and
je
or
and
or
mov
hlt
mov
cmp
or
sbb
pop
add
fwait
call
sub
xor
out
adc
jns
out
push
and
sbb
jle
cmp
cmp
xor
out
and
pmaxub
lea
xor
jo
pop
addr16
test
repnz
mov
cmp
add
jmp
cltd
push
pop
call
lea
mov
and
movsb
stc
jg
ljmp
ja
mov
aas
xchg
jbe
mov
mov
xlat
rcrl
aam
in
jecxz
inc
push
fildl
test
xor
imul
mov
lcall
mov
stos
sahf
test
ret
ret
jns
jnp
jne
or
jl
ds
loope
or
in
adc
das
cmp
mov
inc
mov
or
push
cmp
leave
mov
xor
jae
loope
mov
or
leave
fisubl
jl
mov
cld
out
fistpll
adcl
mov
sub
cs
fs
cld
fidivrl
push
insl
outsl
es
lret
jbe
mov
xchg
sbb
out
imul
jnp
push
pop
std
mov
aam
scas
adc
add
inc
insl
enter
loope
dec
push
dec
jno
xor
fnsave
scas
mov
inc
imul
mov
andb
push
sub
aad
pop
ret
fiaddl
sarb
push
or
pop
int
xchg
and
and
jbe
adc
jle
lcall
pusha
jecxz
dec
pop
mov
push
jo
pop
fisttpl
arpl
lods
hlt
lock
xchg
jb
xchg
fcompl
jo
push
das
popf
icebp
int
mov
cmp
dec
mov
xchg
mov
jge
js
mov
mov
mov
sub
clc
out
push
clc
adc
push
fsubrs
jle
push
subl
addr16
jl
mov
enter
adc
sub
shll
int
push
xlat
jnp
add
mov
add
push
leave
popf
shlb
scas
sbb
arpl
push
xchg
mov
add
mov
mov
mov
mov
mov
out
sahf
dec
xor
and
iret
and
or
mov
pop
add
fldt
out
pop
mov
repz
mov
push
fdiv
jmp
adc
insb
int3
jne
mov
enter
sub
sub
xor
inc
sbb
xor
cmp
xchg
add
xchg
inc
inc
insb
dec
inc
xchg
sbb
pop
xorl
loope
inc
aam
jae
leave
mov
in
and
sbb
push
or
test
getsec
pop
shlb
movsb
test
lds
xchg
repz
sub
xor
in
add
das
dec
jno
push
pop
mov
repnz
push
fsts
and
or
shrl
pop
jmp
int
jge
xor
jecxz
add
lods
ret
pop
imul
adc
lds
lea
cwtl
cmp
stos
stos
pop
shl
mov
jle
imul
sti
jp
mov
addl
pushf
aas
pusha
cltd
and
jmp
pushl
mov
fistpll
rolb
sbb
test
int
sbb
inc
shl
mov
aaa
addr16
icebp
sub
lcall
dec
call
fisubrs
jmp
push
bound
push
dec
and
xor
idivb
hlt
add
sbb
mov
jg
cli
push
in
les
dec
add
int
dec
shll
xor
loope
cli
lea
aas
dec
gs
inc
sbb
sti
sub
lods
dec
adc
dec
ja
data16
add
sub
pop
cmc
inc
insb
testl
mov
cmpsb
mov
in
aas
out
sbb
jmp
xor
popf
fmuls
out
xchg
insb
mov
add
mov
jle
pop
sub
pop
and
fidivrs
jp
jg
out
sbb
jbe
out
sbb
xor
xchg
dec
push
stos
outsl
pushf
les
arpl
stos
sbb
fwait
ds
ret
or
in
adc
hlt
iret
ja
ss
jnp
roll
or
pushf
sbb
adc
sub
cmc
pop
add
inc
dec
out
adc
adc
push
adc
or
xor
mov
inc
mov
jns
adc
in
test
mov
dec
xor
roll
jl
add
popf
imul
shlb
mov
push
bound
out
cmp
sbb
leave
lea
mov
or
add
xchg
or
dec
insl
dec
xor
vfmadd213pd
xchg
adc
rclb
push
xor
mov
ret
sbb
inc
sbb
jecxz
mov
fisttpl
repz
ss
xor
adc
dec
xchg
push
loopne
in
into
iret
mov
je
vmovdqa
inc
sbb
jo
cmp
sbb
pop
xor
xchg
testl
adc
pop
dec
data16
jne
cmp
rol
jae
leave
lods
ret
sbb
mov
aad
cmp
ljmp
je
rolb
lret
jp
add
jne
push
lcallw
push
mov
stc
xchg
mov
dec
or
fsts
sbb
shll
mov
seto
xchg
loopne
and
test
fbstp
add
lcall
push
xchg
repz
test
xchg
in
xor
mov
jno
stos
aad
sbb
xor
xlat
sti
imul
nop
sub
add
rcr
jmp
push
cmc
in
call
cmp
jmp
dec
xchg
fcomip
popa
adc
add
sub
sti
mov
rcrb
rolb
ret
xor
jb
lock
pop
fidivl
add
loopne
popf
pop
cmp
xor
add
ja
push
out
sub
xchg
add
test
ret
cmp
push
cmp
sbb
mov
push
dec
lds
push
mov
movsb
add
adc
or
je
aas
inc
cwtl
sub
sub
mov
cmpsl
dec
add
ja
sarl
jbe
loopne
cwtl
pop
rorl
push
pop
insl
das
popf
mov
xor
repnz
in
decl
fcom
pushf
pop
call
sub
cmp
xchg
bound
cmp
scas
sbb
jp
add
in
test
ret
lock
inc
testb
lds
sahf
dec
xor
push
cwtl
int3
jmp
jge
hlt
sbb
add
hlt
pop
dec
push
scas
idivb
sbb
cmp
adc
out
inc
insl
xchg
mov
inc
jb
scas
aas
inc
jle
and
daa
adc
ret
add
in
stos
xor
gs
dec
sbb
mov
lea
jb
pop
in
int3
sub
mov
fisttpll
in
sahf
and
xchg
es
repnz
push
movsl
push
cmp
push
mov
fmull
js
mov
int
xchg
ss
sub
pop
or
addr16
fcomps
sti
out
add
push
cltd
das
sub
ret
xor
stc
mov
stc
or
cmp
std
pop
lret
sbb
cmp
fwait
xchg
add
jmp
vldmxcsr
cli
pop
aam
js
and
and
les
ss
mov
adc
daa
pop
sub
movsl
dec
inc
fimull
jbe
mov
mov
cmc
cwtl
fidivl
lret
sub
divb
insl
mov
lcall
lock
mov
leave
pop
js
loop
add
push
neg
ret
mov
icebp
mov
xor
dec
dec
out
out
xor
ffreep
mov
jecxz
iret
xor
xchg
jmp
insl
dec
mov
sbb
xchg
popl
fistpll
xor
xchg
cli
jge
aas
rcl
lods
subb
jb
push
stc
popa
jmp
jp
mov
scas
pop
lods
rol
repz
test
jb
outsb
xchg
xchg
jg
inc
mov
sbb
ret
aas
jae
outsb
xchg
adc
and
sahf
mov
imul
out
mov
push
scas
push
fcmovnu
les
insl
add
xchg
out
mov
call
loopne
out
sbb
inc
push
xchg
std
pusha
pusha
fisttpl
icebp
mov
das
xor
pop
sahf
ror
lcall
ret
jl
iret
sbb
call
dec
in
mov
inc
sbb
mov
out
icebp
inc
xchg
into
std
repz
inc
sarb
xor
mov
sbb
pop
repz
int
and
inc
clc
incb
fdivs
jl
std
push
mov
or
add
test
arpl
xchg
fldt
mov
inc
lahf
cmp
jle
idivb
in
jle
cwtl
push
mov
mov
add
push
mov
addr16
jne,pt
jmp
fcoms
scas
aaa
xor
xchg
cmpb
xchg
and
jle
lea
add
fstps
aad
xlat
dec
out
xchg
popa
int3
fiaddl
pop
pop
sbb
xchg
mov
mov
dec
or
loop
mov
je
jecxz
pusha
xor
les
add
js
dec
mul
pop
lea
stos
in
repnz
rcrb
js
bound
lock
and
mov
xor
push
imul
out
pop
test
aas
push
mov
xchg
imul
std
cbtw
xlat
cmp
push
cmp
movsb
mov
roll
push
mov
mov
in
movl
push
pop
push
test
pop
xlat
aaa
insl
jno
xor
outsb
adc
xchg
xor
add
int3
mov
ret
and
mov
popa
jo
insl
movsl
std
or
cli
mov
ljmp
cmp
adc
imul
imul
rclb
movsl
pop
mov
add
dec
sbb
xchg
sbb
in
rol
add
cmc
xchg
arpl
fistpl
push
lret
test
sub
clc
test
mov
sbb
mov
mov
adc
inc
or
dec
mov
add
lahf
cli
lcall
jg
nop
imul
cmp
sbb
int
out
add
js
imulb
xchg
inc
xor
fimuls
andb
jns
jmp
outsb
mov
mov
pop
into
ss
mov
sub
sbb
or
ret
out
cli
jmp
gs
mulb
repnz
or
sub
lods
add
fwait
push
sub
dec
cmp
xchg
cltd
ret
or
shlb
imul
pushf
jg
fs
jle
pop
outsl
pop
pop
jbe
lds
sub
mov
sub
and
jge
xor
xchg
cmp
dec
or
cmc
sbb
ds
sbb
add
xchg
push
pop
xchg
push
pop
mov
loop
jo
mov
cli
stc
or
clc
pop
and
popa
rorl
cwtl
add
cmp
xchg
dec
xor
arpl
mov
in
mov
pop
aam
jecxz
repz
aam
inc
adc
adc
dec
fists
pop
out
shlb
jle
xlat
gs
les
mov
add
pop
inc
xchg
jbe
stc
test
jecxz
andps
scas
add
push
adc
sub
aaa
dec
mov
mov
add
pushf
into
pop
fidivrs
cmp
rclb
mov
inc
sbb
dec
add
sub
jbe
pop
popa
sbb
pop
lods
or
in
xor
mov
insl
and
test
push
xor
hlt
cmp
cltd
rol
int3
jp
in
out
xchg
cmp
mov
mov
imul
dec
ds
fs
jl
push
filds
sarb
push
lea
push
mov
shll
mov
scas
push
popf
cltd
scas
stos
cmc
dec
or
stc
and
xor
lods
mov
jns
imul
pop
cmc
sub
test
nop
push
lea
nop
adc
mov
and
pop
jmp
scas
sbb
cmpsb
sub
inc
mov
add
push
jecxz
push
and
test
sub
cmp
dec
pop
lock
aas
das
repz
cltd
xor
int3
lea
inc
vpabsd
jmp
outsb
mov
sahf
push
scas
inc
enter
push
and
dec
push
aam
sub
and
stc
push
ret
loop
daa
cmp
mov
xor
inc
xor
ficoml
leave
bound
mov
std
out
fisttps
and
fimuls
gs
cmp
adc
xor
inc
pop
jmp
mull
push
push
cmc
pop
inc
mov
xor
sub
or
lods
jbe
adc
test
lret
notl
xchg
lahf
mov
incb
out
xchg
sahf
subb
jmp
lahf
pop
sub
lret
mov
loop
jbe
pop
orb
dec
rcll
repz
or
dec
dec
and
add
sbb
inc
cmp
ss
and
pop
sti
mov
test
inc
add
sbb
jbe
rorb
jae
decl
cmp
sub
fwait
cli
jb
arpl
jle
pop
test
pop
xchg
dec
iret
faddl
inc
mov
aam
imul
jg
loopne
fdivrs
mov
rorl
inc
mov
sti
push
ljmp
pop
aad
fs
mov
cmp
push
mov
mov
std
das
in
jecxz
add
dec
xchg
xchg
push
imul
xchg
cs
push
scas
nop
jbe
sub
mov
sub
mov
mov
mov
or
jge
loopne
stc
push
ds
jge
mov
fwait
repnz
xor
mov
adc
mov
out
or
jge
pop
stos
mov
aas
lcall
pop
ret
movsb
jns
xorb
jl
pop
rclb
test
and
adc
cmp
lods
in
fidivrl
imul
loope
sub
cltd
sub
push
sahf
push
adc
or
mov
fcompl
mov
mov
popf
or
push
scas
or
push
call
pop
ret
icebp
mov
pop
sti
mov
cmp
fsubrl
das
cmc
pop
add
add
jmp
mov
add
ja
pop
jmp
fdivp
xchg
add
push
dec
jbe
pop
push
in
and
js
jbe
movsl
insl
sbb
ja
cmp
dec
adc
inc
clc
xorl
repz
stc
sub
addb
mov
or
xchg
jl
js
repz
neg
ljmp
xchg
icebp
sub
mov
outsb
xor
xor
adc
ficompl
ret
mul
lds
xchg
xchg
push
lock
stos
pop
jecxz
inc
sub
xor
or
mov
mov
xor
daa
fdivl
arpl
es
cmp
aas
xchg
fs
mov
loopne
push
push
push
xor
lahf
or
xor
flds
ljmp
fidivs
sbb
sub
cmp
mov
or
xchg
incb
call
lea
jmp
xorl
fsts
dec
add
ja
stos
cmpsl
mov
mov
in
adc
ret
cmpsl
xchg
and
repz
adc
pop
dec
in
xor
jnp
insb
and
xchg
ret
popa
fnstsw
push
pop
popa
cmc
rcrb
cld
les
jne
pop
ficoms
cmp
xor
shl
inc
loop
out
test
aad
and
repz
or
arpl
in
in
rcll
cmpsl
iret
insb
mov
inc
enter
dec
bound
mov
mov
std
sub
shl
cld
and
push
mov
jecxz
add
pop
add
sbb
adc
sub
jae
push
movsb
push
adc
rorb
sbb
in
inc
negl
xor
push
or
cmp
dec
pop
mov
push
push
mov
mov
push
jne
cli
fdivl
notb
inc
inc
daa
sub
sbb
lahf
xor
cmpsb
mov
inc
or
cmp
test
rol
jb
decl
push
and
or
ss
lret
inc
inc
mov
xlat
mov
daa
scas
sbb
dec
ljmp
daa
inc
ret
fucomip
lods
mov
scas
xchg
pop
inc
mov
out
pop
sahf
inc
dec
call
xlat
popa
pop
rcl
and
inc
adc
stos
loop
xchg
test
les
sbb
mov
adc
stc
repz
sahf
aad
outsl
push
push
test
xlat
fstpt
sub
push
cld
adc
xchg
add
mov
adc
cwtl
arpl
add
and
or
loop
stc
in
inc
test
ja
lahf
push
jo
unpckhps
adc
test
adc
or
or
dec
push
and
sub
fildl
lods
dec
and
adc
and
inc
jne
sbb
add
mov
lcall
fs
ret
imul
into
out
and
scas
cmp
subb
xchg
lods
fisttps
nop
dec
add
mov
jp
sub
mov
inc
sbb
xchg
shl
dec
mov
data16
dec
cld
and
pop
addb
or
xchg
ret
stos
out
sub
xchg
in
int
jnp
test
das
imul
clc
cmp
in
jp
addr16
dec
xor
es
fst
and
les
js
lahf
call
insb
push
xchg
ret
push
mov
and
cli
xchg
dec
xchg
adc
add
jp
hlt
mov
arpl
jb
ret
fs
fwait
clc
mov
jbe
out
pusha
pop
adc
xchg
jo
xor
int3
dec
xor
fucom
das
and
pop
mov
cmp
data16
adc
dec
add
xchg
adc
fs
push
in
into
mov
fists
mov
data16
les
dec
cmpsb
push
adcb
and
adc
addr16
mov
shll
adc
and
nop
cmp
or
subb
sbb
mov
inc
adc
enter
js
stc
in
call
push
pop
sbb
sub
sub
jecxz
jecxz
aam
outsb
scas
push
add
in
in
jae
scas
mov
xchg
das
xor
pop
mov
scas
cld
mov
cmp
cld
mov
adc
arpl
or
jmp
ljmp
inc
sar
arpl
outsl
and
mov
cmp
xchg
stos
cld
lahf
sub
data16
int
dec
push
aas
ds
addr16
jle
cmp
mov
enter
lods
jg
pop
into
push
push
dec
jb
iret
scas
test
jge
inc
sti
movsl
push
mov
xchg
push
mov
into
sub
mov
out
imul
ljmp
push
stos
push
add
xchg
ljmp
ss
cmp
pop
dec
xchg
pop
push
mov
sbb
movsb
call
xchg
jle
decb
shrl
gs
stc
pop
incb
notl
lods
xor
cmpsb
out
xchg
in
out
inc
fs
push
into
pop
push
sbb
ret
std
mov
in
rcll
mov
je
repnz
mov
xchg
lock
dec
fists
sbb
inc
call
sub
xchg
mov
cli
imul
mov
aam
out
gs
dec
jecxz
test
notrack
pop
and
xor
insl
or
scas
mov
call
push
fwait
testb
or
jle
test
xor
test
sub
jo
mov
test
and
das
mov
mov
mov
das
test
sahf
out
push
adc
mov
xchg
int
aaa
mov
jae
js
icebp
fs
add
push
add
lcall
test
xlat
mov
sbb
adc
cmp
mulb
sbb
jp
dec
in
adc
insb
popf
mov
dec
outsb
mov
fcompp
or
ljmp
add
mov
incl
inc
push
adc
mov
call
repz
jecxz
cltd
cmpsb
and
outsl
mov
dec
or
fdivl
adc
into
jmp
dec
fst
mov
loop
jb
test
mov
sbbl
mov
test
testb
icebp
add
ffreep
or
sub
push
push
imul
insb
jp
sarl
jno
pop
out
jb
push
jns
push
repnz
add
aad
cmp
negb
pop
lcall
adc
add
mov
sarb
jg
lcall
pop
je
in
or
inc
mov
not
test
inc
in
adc
mov
int3
in
aad
rol
dec
dec
es
lds
adc
pushf
loopne
fldl
scas
jp
pop
cmp
jns
leave
mov
int
out
les
stos
sbb
xchg
pop
stos
and
imul
sbb
sarb
std
addr16
inc
xor
dec
or
imul
and
xor
lcall
cmp
push
sub
repnz
std
jbe
test
xchg
dec
mov
sub
dec
mov
mov
push
sub
adc
rolb
lea
jne
addr16
inc
aas
js
ss
shll
loope
in
mov
decb
outsl
pop
mov
incb
cmp
cwtl
stos
mov
fcomp
aad
pop
pushf
mov
or
and
icebp
cmp
cmp
mov
std
push
arpl
out
sarb
popl
pop
push
xor
js
pop
inc
pmulhuw
pop
pushf
cmpb
push
cltd
or
sbb
sti
and
shll
fdivl
sbb
push
lret
sahf
clc
or
out
mov
pop
fidivrs
mulps
les
lock
dec
sub
pop
in
std
dec
imul
lods
fwait
jge
push
fidivs
xorl
nop
mov
lret
mov
pop
in
leave
popa
mov
mov
xor
push
pop
enter
clc
shrb
mov
gs
daa
sahf
imul
lock
fstp
faddl
mov
mov
dec
mov
outsl
adc
dec
jno
mov
hlt
dec
enter
adc
insb
dec
daa
xor
add
lahf
call
dec
into
popf
mov
lods
scas
lds
sub
xchg
fs
jecxz
pop
test
mov
lahf
aas
fsubl
xor
orb
fdivl
adc
pop
mov
sbb
pop
xor
int
inc
dec
xlat
testb
adc
lods
dec
sbb
push
cmp
insl
lahf
lods
push
lahf
xor
jle
clc
cmp
mov
ja
dec
out
push
and
aas
jl
mov
inc
mov
adcb
mov
fidivl
in
hlt
les
xlat
daa
push
push
mov
fldenv
push
in
pop
dec
jnp
mov
mov
or
fadd
mov
insl
xor
test
popa
aaa
mov
jb
xor
rcll
daa
rcll
or
or
mov
les
in
subb
push
mov
clc
pop
jns
das
jl
std
or
hlt
push
push
clc
dec
inc
cmp
mov
repz
scas
bound
sahf
out
dec
push
mov
ret
cmpsl
mov
insb
xchg
adcb
sub
pusha
and
int3
ljmp
pop
mov
xor
push
cmc
rcll
jb
lock
cmpsl
pop
cmpsb
cli
cmpsb
add
add
dec
xchg
mov
add
mov
mov
outsb
pop
xor
dec
sub
ret
mov
cmp
sub
cmp
or
js
outsb
sti
mov
int
fwait
lods
sbb
inc
mov
xchg
or
lret
xchg
ret
ret
jns
add
shrl
add
pop
test
pop
sbb
xchg
in
sbb
scas
mov
test
adc
cmpsl
mov
dec
mov
xchg
pop
inc
clc
push
ret
in
inc
sti
inc
add
test
sub
push
mov
sbb
movsl
cmp
test
icebp
push
dec
int3
push
rcrb
aad
push
mov
sub
mov
xor
addb
jo
out
mov
movsb
xchg
xor
cvttps2pi
sub
push
mov
or
repnz
dec
stos
xchg
pushf
scas
cltd
movsb
cmp
orb
xor
xchg
cld
mov
mov
das
pop
add
pop
or
jmp
popf
sbb
fisttps
psubusw
fldenv
int3
jne
push
dec
fwait
and
jl
stos
mov
lock
decb
and
jmp
lods
xchg
jbe
jecxz
sti
mov
hlt
sti
outsl
js
lods
call
leave
lods
and
pop
mov
lods
in
push
jp
dec
popa
push
in
xor
mov
xchg
popa
divl
call
sub
lcall
addl
mov
inc
incl
sbb
add
mov
ret
arpl
cmp
mov
jne
out
lods
in
push
testl
dec
gs
loop
aas
sti
pop
fildll
cmp
cs
and
vpaddusw
shll
add
das
inc
pop
lea
ljmp
loopne
mov
inc
fstl
sahf
dec
cmp
fwait
jp
mov
cld
mov
shlb
mov
ss
shrb
aaa
push
and
out
sbb
jl
inc
cmpsb
pop
xor
sbb
mov
call
xchg
stc
imulb
repnz
push
push
orl
pop
push
insl
into
fwait
cmp
mov
arpl
jle
jne
int
xlat
loop
sub
pop
cli
sarb
or
sbb
cli
adc
push
aaa
jp
push
out
lods
arpl
add
dec
sbbb
rcl
mov
nop
mov
enterw
and
loopne
out
dec
jno
fst
fimull
arpl
jge
sub
or
jmp
popa
push
push
jg
inc
lds
aas
lret
jmp
out
xor
dec
addr16
add
ja
loopne
scas
mov
and
push
sub
std
jne
push
jbe
test
shlb
jge
or
test
jecxz
dec
jno
stos
push
jnp
mov
xchg
hlt
je
push
inc
lret
pop
inc
mov
mov
mov
je
ret
push
jae
sbb
adc
sahf
xchg
data16
pop
test
test
pop
adc
ficomps
outsb
lea
cmp
cmpb
sbb
inc
xchg
cmpsl
aam
push
dec
jno
das
or
popa
mov
ret
dec
test
sub
add
cltd
test
pop
dec
cmp
inc
and
cs
inc
or
or
mov
xchg
iret
rcrb
iret
adc
pop
push
mov
push
mov
sub
scas
adc
or
repz
push
pop
addr16
add
filds
int
push
push
jmp
test
xorb
int
push
movsb
fimull
jo
sbb
pop
inc
pop
adc
xchg
jp
femms
stc
jp
jmp
fwait
paddb
mov
lret
add
mov
xchg
mov
push
or
je
and
xchg
or
fs
negl
pusha
fcoml
sub
iret
xchg
dec
lahf
loop
sbb
dec
outsl
cmp
ret
adc
cld
add
add
aam
incl
outsl
shrl
push
insb
push
cmp
lahf
in
inc
pop
je
popa
mov
add
xchg
addr16
cmp
add
sbb
mov
mov
movsl
push
xor
or
mov
mov
ret
cld
mov
cmp
dec
enter
mov
leave
aas
mov
mov
mov
std
inc
adc
jmp
shlb
cwtl
cmp
mov
arpl
add
shr
push
enter
pop
adc
out
mov
ljmp
imull
push
add
mov
aam
imul
xlat
inc
scas
and
pop
popa
xchg
cwtl
push
arpl
sbb
aas
inc
mov
enter
subl
mov
out
lea
movsl
push
in
dec
ret
sub
cli
add
test
loop
int3
push
inc
sub
aas
jns
pusha
hlt
test
xchg
outsl
pop
insb
jnp
pop
fstps
xchg
mov
jo
mov
pop
ss
or
enter
cmp
sub
test
jnp
push
cmpsb
push
lret
push
in
xor
rclb
ja
xlat
xchg
add
mov
jl
fisubl
cmpsb
adc
inc
js
rcrb
add
fisubl
clc
jae
cmp
dec
loop
mov
or
dec
movhps
inc
das
int
dec
int3
outsl
into
loop
sbb
mov
cmp
in
pop
jno
ret
outsb
add
and
sub
pushf
jb
sahf
out
je
adc
xor
ret
jbe
in
cmp
fnstsw
lds
adc
pop
mov
test
cmpsb
imul
imul
leave
aas
push
out
xor
or
xchg
inc
jp
clc
mov
std
xor
mov
lahf
pop
or
aam
pushf
dec
jmp
or
cli
and
sub
push
lock
pusha
daa
fcmovu
pop
into
push
or
add
xor
cwtl
outsb
cmp
mov
inc
dec
pop
xchg
imul
out
gs
data16
pop
lcall
jne
jns
jmp
mov
fdivrl
call
out
les
cmpsl
shlb
in
sbb
test
xchg
js
cmp
push
sub
and
jecxz
dec
cmp
insl
repz
fisttpl
cmp
sahf
aas
cmpsb
hlt
xchg
aaa
inc
xchg
mov
cmc
orl
neg
and
test
stos
aas
notb
std
cmp
pop
cmp
sub
jecxz
mov
aam
mov
loop
test
jg
mov
sub
push
sbb
cwtl
mov
sbb
cmp
cmp
fisubs
mov
movsb
adc
add
or
rcll
jno
fisubrl
clc
xchg
sub
in
lock
cmp
outsb
push
xchg
into
mov
outsl
inc
dec
push
int3
leave
pop
xor
xchg
aam
rol
pop
xchg
sbb
and
es
inc
mov
stc
stc
imul
add
cmp
ds
xor
ret
test
pop
jmp
imul
mov
les
fwait
push
iret
fwait
pop
or
jno
cwtl
mov
mov
pop
inc
add
and
pushf
mov
iret
rcll
out
jl
sub
push
cmp
in
repnz
outsl
xor
fmuls
pusha
clc
dec
or
pop
xlat
lahf
adc
loopne
test
adc
cltd
sub
mov
int3
pop
push
incb
addl
ret
xchg
test
dec
mov
inc
outsb
imul
adc
sahf
in
bound
inc
push
add
movsl
cmp
out
test
xchg
nop
gs
in
add
imul
jmp
cmpsb
inc
cmpsl
jg
push
lcall
mov
sbb
inc
dec
xchg
mov
ret
sti
cs
sarl
add
sbb
pop
lret
lods
or
mov
dec
loop
insl
jb
push
lds
cwtl
xor
mov
jl
cli
stos
push
jb
cld
mov
inc
std
xchg
faddp
ficomps
sbbb
in
jb
ret
sahf
icebp
es
sub
dec
mov
jbe
frstor
adc
enter
or
arpl
les
inc
xor
push
test
xor
loope
fdivl
xchg
jmp
cmpsl
xor
stc
sbb
xchg
lods
jbe
dec
mov
jo
adc
lea
push
ds
in
inc
pop
xor
hlt
cmc
xorb
loopne
ficompl
int3
or
cmp
or
ret
nop
cmpsl
icebp
test
push
nop
mov
pop
jp
mov
mov
sbb
pop
sbb
mov
mov
adc
dec
mov
mov
inc
insl
addr16
pop
adc
adc
xor
mov
lret
xchg
divl
cmp
and
ret
stos
adc
lea
sub
dec
mov
ret
subb
movswl
daa
insb
cmp
sbb
xchg
mov
or
adc
push
or
dec
test
ds
adc
ret
lods
push
pop
cmp
jae
push
xlat
mov
out
sbb
cmpsb
arpl
or
in
jmp
fcmovnbe
repz
out
in
pop
inc
out
icebp
pop
popl
fcoml
in
xor
mov
arpl
sub
mov
sahf
mov
jl
aad
shl
test
cli
arpl
mov
sbb
dec
dec
mov
les
out
mov
jmp
mov
pop
mov
jecxz
enter
dec
sbb
lods
leave
and
negl
lret
pop
sahf
sub
iret
leave
mov
test
call
fsub
sub
inc
popa
mov
push
mov
popa
inc
in
cmp
out
sub
jne
mov
loopne
xor
enter
movsl
call
jl
xor
mov
mov
mov
or
adc
ss
push
outsl
je
cmpsb
aas
lcall
pop
testl
and
in
push
cltd
push
data16
int3
jno
and
mov
out
or
xor
sarl
xchg
xchg
call
push
lods
push
decb
push
and
push
loopne
rolb
inc
scas
xchg
out
push
mov
bound
cmp
adc
cmp
xchg
cmp
fisubl
test
insl
xchg
xor
add
aad
dec
fidivrl
pushf
cmp
ror
mov
xor
aad
pop
leave
mov
cli
push
sbb
xor
movsl
add
mov
mov
sti
cmp
add
repz
mov
push
sbb
xor
mov
test
pop
lret
push
pop
pop
into
int3
push
mov
pushf
daa
jo
dec
cmpsl
dec
icebp
movsl
sub
out
jg
aas
mov
adcb
out
pop
adc
jb
jo
push
cmc
jecxz
mov
adc
mov
repnz
popf
addl
into
out
lcall
shrb
mov
push
loope
inc
nop
aad
je
xchg
mov
mov
mov
cmp
add
inc
ljmp
push
jbe
sub
mov
mov
adc
pop
push
shrl
xor
push
xor
or
add
gs
call
jecxz
in
mov
dec
cltd
push
testl
mov
fbstp
rcrl
shlb
das
or
loopne
testl
add
cmp
int3
insb
in
lods
gs
dec
test
int3
jl
lret
iret
scas
lock
mov
je
leave
mov
and
cwtl
mov
add
out
push
scas
cld
dec
lcall
inc
lods
lods
lcall
repnz
xchg
shrb
mov
pop
push
je
pop
movsl
push
pusha
in
insl
mov
imul
pushf
test
mov
mov
int3
jns
cmc
and
push
movsb
es
dec
or
pop
aam
mov
xchg
pushf
xchg
daa
dec
fincstp
lods
popa
leave
pusha
xor
rcll
add
imull
iret
mov
iret
xor
rorl
aam
ror
icebp
xchg
push
add
std
inc
lret
mov
xor
or
inc
xlat
push
lret
inc
in
cli
pop
mov
push
aas
mov
and
imul
pop
xchg
xchg
mov
dec
jge
sub
outsb
fistl
test
or
popa
test
out
xchg
pop
shrb
jae
push
sbb
aaa
push
lds
pop
cmpl
cwtl
cmp
xor
aad
out
mov
cs
ror
pop
imul
or
mov
push
hlt
lahf
adc
sub
icebp
add
xor
ret
clc
jecxz
mov
mov
xor
push
cmpsl
sub
test
cltd
and
mov
adc
fmull
fisttpll
outsl
xchg
arpl
lret
ret
xor
mov
loope
adc
clc
mov
imul
fisttpl
sub
or
push
daa
stc
pop
lock
dec
add
jno
scas
sub
bound
sub
mul
in
dec
fistps
repz
aaa
aas
out
loopne
fists
push
imul
dec
mov
ljmp
orb
push
in
rcr
xor
mov
fbld
push
jg
ds
repnz
mov
pop
or
xchg
push
xor
fcomi
add
scas
sub
fdivrl
cmp
loopne
or
cwtl
xor
daa
sbb
mov
xor
mov
sbb
in
inc
cmpsb
cmp
xor
rorl
test
cltd
mov
loopne
jnp
popa
push
push
fldcw
pop
dec
stos
mov
cmpsb
push
enter
js
xlat
push
and
gs
addr16
aam
inc
push
jecxz
mov
xor
movsb
jge
add
ljmp
loop
xor
mov
nop
mov
push
outsl
shlb
dec
mov
sub
pop
gs
push
add
xchg
clc
and
xor
roll
or
adc
sbb
js
and
pushf
outsb
out
cli
in
ret
add
fildl
mov
cltd
jle
aas
testb
lds
xor
sbb
ficoms
sub
cmp
cmp
xlat
lds
negb
mov
addr16
mov
or
sub
dec
or
adc
insb
sub
inc
cmpsl
clc
and
inc
leave
lea
and
or
pop
insb
inc
adc
push
ljmp
cs
divb
iret
rcrl
loopne
push
les
adc
sbb
mov
sub
mov
sub
mov
xchg
pusha
daa
or
nop
ror
mulb
ljmp
stos
inc
cmpsb
dec
pop
pop
ror
pop
mov
jl
ja
mov
iret
stos
xchg
jmp
push
mov
imul
adc
dec
xchg
xor
cmpsl
fstl
sub
xchg
sbb
mov
add
push
lret
cmp
xchg
jb
or
jg
jbe
outsl
pushf
ds
outsb
mov
xor
idivl
push
jnp
lea
pop
jmp
xchg
pusha
test
adcl
xchg
leave
push
sarb
sub
popf
mov
scas
je
stc
shr
dec
xorl
sbb
inc
out
adc
fs
jge
mov
push
jo
and
fisttpll
imul
stc
pop
cwtl
mov
pop
sbb
sahf
add
mov
jae
jns
incb
mov
jo
mov
js
pop
jns
arpl
sbb
in
jecxz
jo
popa
jmp
outsb
cli
sub
pop
loop
daa
std
divl
aas
jbe
push
insb
gs
sbb
xor
and
or
push
rdpmc
mov
mov
fsubr
xorl
jge
movsl
push
test
mov
jo
test
or
mov
add
daa
pop
gs
mov
fcomip
xor
mov
sbb
sub
sub
iret
mov
jp
ret
mov
ja
mov
adc
test
imul
inc
movsb
inc
jmp
test
sub
loope
dec
scas
xor
sub
movsb
lea
imul
cld
push
stc
xchg
pop
jle
iret
aaa
push
lods
and
push
cmp
lds
dec
imul
pslld
ds
xchg
mov
mull
shrb
ljmp
cmc
es
mov
dec
cltd
add
in
pop
sub
jno
test
fimuls
and
adc
nop
cmp
fmull
cmc
imul
jmp
clc
jl
stos
sbb
jg
cmp
adc
add
sti
int3
lret
arpl
jl
pop
xchg
mov
movsl
fisttpll
xlat
mov
jno
loopne
mov
mov
sbb
pop
sarl
cmp
xchg
fcomps
jne
jge
mov
je
and
jns
icebp
nop
dec
mov
aad
fucomi
cld
cmc
add
jp
jle
loop
popf
push
lds
sub
sbb
adc
dec
int3
idivl
mov
rol
sub
and
and
add
clc
push
adc
insl
out
cli
xchg
int3
cmpsb
enter
loopne
mov
stos
idiv
negl
mov
mov
xor
leave
int3
sbb
dec
lods
popf
push
es
loopne
pop
lds
sub
subl
outsl
cmpsl
arpl
cmpsb
test
cmp
add
mov
enter
movsb
mov
mov
jne
lret
in
sub
ljmp
scas
cmpb
addr16
mov
cmp
fiaddl
sub
rclb
loop
fisubrs
adcl
xchg
inc
lahf
add
sub
movsb
ret
and
pop
xor
aad
scas
pusha
fldt
lods
adc
cmp
xchg
xchg
sti
jo
xchg
or
ret
jo
sbb
rcl
daa
fildll
leave
cmp
cmpsl
jl
pop
lret
xor
add
int
push
xchg
mov
or
mov
adc
adc
inc
sarb
fsubl
mov
mov
dec
jns
fs
dec
clc
js
jecxz
xchg
push
ss
pusha
jbe
repnz
aas
stc
andb
lods
jl
gs
sahf
fcoms
pop
and
in
lahf
enter
inc
call
push
aad
and
scas
lret
mov
mov
lea
mov
dec
xchg
inc
fsubs
xor
fsubrp
cmpsb
call
sub
je
jb
stos
insl
in
jg
dec
dec
cmpsl
dec
shll
das
daa
xchg
mov
lret
in
cmp
mov
clc
adc
pop
push
pusha
or
sbb
adc
jecxz
sbb
js
dec
xchg
sub
jbe
aam
sbb
repz
cltd
pop
push
fbld
aaa
in
popa
or
sbb
jle
fldenv
js
sarl
outsb
sub
dec
imul
jns
enter
gs
in
sub
nop
aas
adc
lods
pop
mov
icebp
jg
add
ficompl
test
les
mov
clc
mov
rcrl
jae
call
int
lods
sub
adc
clc
jmp
sbb
add
lds
sub
out
flds
xchg
inc
shl
rcr
loopne
gs
test
push
mov
bound
gs
push
ja
movsl
aam
inc
sbb
sub
add
dec
and
jns
jl
sub
cmp
ljmp
insb
mov
mov
int
lock
lds
ret
and
dec
repz
jne
sbb
shll
loopne
or
xlat
xor
imul
fmuls
ljmp
rclb
loope
andl
dec
jl
dec
xchg
xchg
cmpsl
add
clc
mov
idivb
xchg
and
mov
mov
push
mov
stos
inc
mov
or
sub
shll
lahf
stos
dec
fsubs
dec
mov
adc
mov
sbb
xchg
ffreep
pop
cmp
repnz
mulb
xchg
aaa
call
rcrl
mov
pop
popa
es
scas
aaa
inc
addr16
sub
lds
inc
adc
lret
jmp
mov
dec
mov
cmp
loope
fld
mov
imul
push
les
movsb
xchg
lret
lcall
add
fnsave
test
sahf
shl
xor
mov
jns
in
nop
sub
out
repz
or
xor
adc
mov
dec
xchg
jmp
mov
mov
aaa
xchg
mov
jmp
popf
cmp
lea
jne
out
scas
dec
leave
jg
fwait
sbb
sub
inc
xor
adc
sbb
ja
mov
les
xor
mov
mov
fidivs
and
pusha
and
mov
dec
popa
inc
mov
out
inc
pop
iret
and
ret
and
pop
add
and
jmp
shlb
aaa
pop
fistps
aas
int
mov
ret
jns
dec
fimuls
insb
das
push
push
or
repnz
inc
push
push
daa
xchg
inc
cmp
jge
divl
sub
jno
or
xchg
sbb
sbb
lret
jl
lock
ret
mov
les
lret
pop
push
inc
jns
adc
or
scas
cmp
xor
test
inc
sbb
mov
push
push
sub
mov
cmpsb
cmpsl
lahf
int3
cltd
data16
push
xchg
test
sub
fisttps
sub
int
mov
iret
sbb
xor
rcrl
bound
add
jno
shlb
stos
cwtl
call
sbb
icebp
out
das
dec
pop
pop
sub
push
mov
loope
mov
push
out
xor
mov
cmp
cli
js
in
out
inc
jg
xor
add
xorl
or
std
pop
mull
stos
stos
mov
inc
decb
jbe
cmp
pop
xor
cmp
mov
pushf
lcall
fs
and
xchg
shlb
movsl
call
int
mov
data16
cmp
mov
lock
test
xchg
aas
cmp
sahf
jne
test
pop
lods
ds
subb
pop
sub
incb
aaa
aas
cld
cltd
sbb
push
fisubs
decl
sbb
jl
mov
test
in
aam
pop
cmp
movsl
mov
fcmovbe
pop
mov
xchg
mov
pop
cmpsl
push
outsl
test
cmp
xor
jbe
popf
xor
repnz
push
add
mov
push
aaa
adc
xchg
sahf
lcall
aad
push
pause
cmp
push
aad
or
and
mov
or
cmc
mov
mov
ss
push
mov
lret
inc
cli
push
test
lahf
das
inc
add
out
and
les
sarb
sti
jmp
push
int
test
sub
mov
lea
jns
shlb
and
cmpsb
imul
xor
insl
enter
xlat
or
cmp
lock
adc
lcall
pushf
loopne
or
inc
jecxz
jae
sbb
add
push
and
call
fs
fldl
sub
stos
xchg
xor
and
shl
je
das
in
mov
jno
mov
cltd
lds
lods
ja
xor
xchg
pop
mov
std
mov
mov
mov
cmp
inc
mov
and
cli
dec
dec
jmp
mov
pop
jge
or
imull
sbb
adc
aam
outsl
ds
sub
fsqrt
dec
dec
and
fbstp
fldenv
fidivl
insb
in
push
out
sbb
cmc
jmp
shr
loop
cmpsl
repnz
xchg
ja
pusha
lcall
add
or
sub
into
sub
jno
rcrl
mov
repz
mov
repnz
popf
add
les
and
mov
sbbl
mov
gs
or
out
push
mov
mov
sbb
sub
add
repz
mov
cld
sub
stos
lret
outsl
loop
adc
jg
mov
sub
and
lods
stos
cmpb
cwtl
mov
scas
fstp
push
fbstp
push
cmc
neg
push
jp
push
cli
bound
mov
jae
cmpb
fs
and
lods
into
mov
stos
xor
out
inc
call
cmpsb
jmp
pop
addr16
or
inc
jle
pushf
mov
int
mov
sbb
rorb
push
adc
pop
rcll
test
xor
es
adc
inc
enter
mov
push
and
and
jecxz
mov
loopne
xor
cmpsb
jne
fs
mov
mov
and
jle
jne
xchg
fsubrs
cmp
xlat
pop
clc
outsb
mov
scas
jnp
popf
add
cmp
push
fstps
sub
addr16
nop
xor
sbb
or
jmp
js
ss
xor
leave
pop
xor
or
push
xchg
dec
push
cmp
xlat
inc
cmp
adc
or
pop
lahf
jmp
mov
ror
imul
jecxz
sar
sub
sahf
iret
pop
lahf
fldt
mov
dec
adc
rorl
or
mov
lret
faddl
loope
inc
adc
sub
cmpsb
je
je
pop
mov
rcrl
lret
aam
mov
sub
cli
jo
fwait
aam
push
pop
mov
out
shll
sbb
cmp
jb
fwait
push
mov
in
jg
sub
mov
fcomps
pushf
scas
inc
or
sub
test
lret
es
popa
repnz
ljmp
xlat
shll
xchg
jl
daa
int3
leave
adc
mov
adc
nop
mov
es
xchg
push
xchg
sbb
dec
and
mov
dec
scas
jg
sti
lcall
dec
mov
clc
sub
jno
inc
aaa
int3
cmpsl
stos
push
inc
imul
aaa
test
fistps
stos
lock
dec
ficomps
dec
test
xchg
ret
rorl
mov
inc
gs
idivl
ficompl
shl
cmp
insb
cwtl
jae
mov
cli
dec
popl
lock
fld
popa
inc
fidivrl
push
sti
or
and
push
xchg
adc
dec
dec
push
sub
cmpsl
jne
adc
inc
arpl
or
mov
dec
data16
jg
in
test
and
dec
fnstenv
imul
xchg
ficoms
test
sub
imul
xchg
jb
push
dec
adc
pushw
vpaddd
pop
shlb
dec
scas
in
sbbl
add
push
shrl
xor
xor
popf
mov
cmp
and
pop
inc
adc
popfw
cmpsl
lods
iret
and
and
in
lcall
jnp
mov
inc
pop
xor
add
jae
adc
jb
ja
mov
xchg
and
mov
repz
inc
mov
jl
pop
mov
inc
testl
sbb
mov
les
sub
cs
scas
mov
mov
lahf
ljmp
jg
sahf
das
xor
dec
shll
add
mov
pop
adc
xchg
xor
imul
aam
std
mov
dec
sahf
jb
pop
inc
pop
int
and
xor
iret
lret
stc
adc
fisttpl
lds
pop
insl
sbb
andl
xorl
mov
sub
mov
sub
mov
sub
push
aam
das
shlb
jmp
sub
data16
insl
mov
in
cmp
sub
push
aad
mov
cwtl
data16
xchg
pushf
xchg
or
test
fs
js
jmp
daa
int
fldl
ja
jb
outsl
xor
jmp
jb
and
and
fisubs
cs
popf
sti
cmp
xchg
adc
hlt
dec
popa
icebp
push
sub
sbb
fbstp
sbb
xchg
mov
jo
stos
jp
sbb
mov
lahf
xlat
outsl
xchg
and
movsl
outsb
test
add
jb
fdiv
pop
int3
xor
fmuls
divl
movsb
pop
into
xchg
adc
daa
mov
jmp
and
loopne
mov
das
stos
or
inc
and
pop
sbb
add
mov
mov
or
cmp
inc
xor
fstpl
mov
loope
fcoml
jle
cs
and
ret
nopl
jl
in
mov
pextrw
ds
mov
into
repz
push
lds
in
mov
stos
in
pop
or
sub
xlat
popf
je
sbb
decl
pusha
inc
jno
jecxz
ret
inc
cwtl
dec
or
outsl
xchg
jmp
jb
cmp
lds
fidivrs
outsb
push
mov
mov
dec
adc
sub
sbb
push
mov
xchg
sarb
sti
mov
mov
and
cwtl
or
dec
xchg
pushf
mov
pop
test
push
dec
jnp
movsl
or
push
jae
ror
xchg
cwtl
push
scas
pop
test
test
testb
inc
push
leave
xor
push
iret
hlt
xor
sti
jb
and
test
or
push
mov
into
dec
and
in
movsb
pop
push
inc
xor
dec
xchg
repz
jo
ja
stc
add
pushf
imul
and
insb
cmp
add
jle
enter
mov
in
pop
into
pushf
bound
movsl
fdivrl
or
lret
loop
sbb
push
scas
sahf
sbb
sar
fistpl
and
ss
lock
and
add
and
push
scas
loope
popa
dec
les
arpl
mov
int
adc
mov
sub
inc
xlat
add
jne
daa
jmp
stos
push
insl
mov
leave
popa
int3
dec
ret
scas
lea
and
subb
mov
or
std
cmp
dec
aad
fsubrl
jae
cmp
jg
adc
mov
pop
mov
add
sbb
inc
mov
push
mov
das
add
jecxz
outsb
jl
cltd
cmp
jmp
add
ret
idivl
or
arpl
pop
popa
jae
cmp
insl
mov
jb
pop
out
fcompl
imul
lahf
pop
je
fwait
ljmp
cwtl
mov
cwtl
and
pusha
xchg
sbb
popa
das
clc
dec
mov
xchg
pop
jmp
jbe
mov
popa
cs
out
into
repz
xchg
dec
movsl
cli
ret
popf
psubd
pop
and
inc
repnz
mov
adc
and
shlb
in
and
dec
jo
and
aaa
inc
sub
inc
popf
sub
xchg
and
sub
adc
out
xchg
mov
inc
sub
es
jb
mov
dec
mov
jmp
push
roll
lea
push
stos
sahf
push
push
aam
fwait
mov
ret
pop
ret
xchg
xor
xchg
jmp
aaa
aas
dec
pusha
enter
mov
xchg
dec
dec
push
scas
pushl
mov
js
adc
sbb
mov
pop
mov
xchg
xchg
enter
lahf
rclb
insb
sub
inc
lcall
or
jae
into
push
std
sbb
out
sub
aas
cli
je
xor
int3
push
push
rol
popf
and
add
cmpsl
aas
or
dec
dec
sub
jg
imul
call
adcb
sub
lret
push
push
cmpsl
sti
scas
addl
lret
jp
pop
arpl
in
repz
in
bound
sti
sub
jo
fiadds
icebp
lods
xorb
jb
cmp
imul
or
in
sub
pop
mov
fcomps
rcrl
leave
and
adc
lret
sub
test
es
rcl
aaa
bound
imul
mov
xchg
not
rcrl
xor
push
addb
mov
add
pop
sub
pop
dec
ror
mov
clc
lods
xchg
jns
push
push
push
xor
mov
xchg
stos
loopne
jge
jle
mov
cld
aas
js
movsl
iret
mov
lahf
add
je
adc
sub
sub
jg
in
jnp
sub
icebp
inc
jle
inc
push
mov
push
loop
mov
cli
stos
in
pop
dec
rorl
and
imul
push
mov
xchg
aad
adc
inc
in
pop
inc
fiaddl
scas
add
mov
adc
cwtl
arpl
add
jb
lret
test
dec
test
icebp
lcall
inc
add
gs
js
insb
imul
mov
push
scas
sub
ljmp
enter
jl
xchg
jb
lahf
hlt
and
dec
mov
push
sub
push
or
enter
cmp
rolb
push
movsb
push
test
rcrb
dec
pop
insb
mov
push
push
lods
add
repz
imul
inc
add
add
pusha
test
inc
lds
push
dec
enter
or
in
cmp
pusha
gs
sub
cli
iret
inc
or
sbb
pop
mov
add
pop
arpl
xor
dec
jmp
sbb
cmp
sub
fwait
imul
mov
mov
xor
aas
mov
xchg
test
jp
dec
or
adc
in
shld
cmp
into
outsb
and
lods
push
xor
int
rcl
xchg
stos
pop
cmp
shlb
cmp
ja
lock
mov
in
mov
in
cli
sbb
sub
pop
or
std
mov
test
out
push
std
repz
aad
xchg
jno
les
nop
in
fdivrl
sti
push
into
or
xchg
sti
std
mov
sbb
loop
push
cmp
sbbb
xor
xchg
stos
scas
ficomps
in
jne
jl
and
movsl
or
add
xchg
rcll
mov
pop
cmp
stos
ret
arpl
lds
pop
das
ja
andb
and
push
mov
lret
scas
inc
dec
sub
and
dec
jnp
cld
mov
pop
add
push
and
mov
push
mov
pop
shl
xlat
ja
xchg
in
add
in
orl
aaa
ja
add
mov
dec
mov
hlt
rorb
adc
mov
roll
lret
push
jg
push
xchg
shl
cs
inc
mov
das
sbb
cwtl
sub
cwtl
add
mov
clc
aam
sbb
pushf
push
xor
lret
cmp
sbb
push
cmp
lahf
ret
fs
fisttps
inc
fstps
enter
leave
cmpb
mov
xor
lds
ret
xchg
pop
mov
inc
imul
dec
push
mov
mov
enter
jns
adc
add
mov
stc
cs
and
das
jne
pop
les
mov
pop
cli
mov
push
icebp
sbb
pop
cmp
inc
in
cld
xchg
mov
je
push
sti
mov
movl
rcll
adc
mov
scas
ret
sub
aas
mov
add
cs
lods
mov
pop
aam
dec
inc
jl
jl
movsb
jl
fs
je
xchg
mov
push
aam
mov
dec
xchg
pop
dec
push
mov
pusha
adc
sahf
sub
xor
mov
mov
imul
outsb
pop
stos
arpl
icebp
fcoml
sbb
in
mov
push
push
and
imul
and
push
loop
leave
iret
and
mov
jg
add
jnp
dec
in
cmpsb
xchg
into
arpl
mov
icebp
jge
jo
sub
sbb
mov
in
fucom
out
aas
fnstenv
cli
pop
lods
xchg
hlt
clc
cltd
cmp
add
enter
test
mov
mov
aaa
adc
push
mov
imul
dec
fisttps
jle
jno
or
cmp
movsb
fstl
jg
lret
and
std
sub
out
mov
or
add
mov
dec
mov
push
xchg
jbe
push
das
mov
fiadds
roll
lods
mov
shrb
cltd
add
xor
mov
adc
test
jb
sub
push
sub
jne
sbb
sub
loop
add
fiaddl
ss
divl
fiadds
int3
jg
sbb
inc
sbb
popa
test
lret
loopne
add
add
and
hlt
repz
sub
frstor
adc
jbe
pop
pop
lods
movsb
push
jecxz
inc
inc
stos
andl
hlt
lock
inc
or
int3
xchg
fld
addb
sbb
pop
xchg
hlt
fmulp
sbb
jnp
adc
jle
mov
mov
pop
int
test
fxch
mov
mov
xorb
mov
lret
cmpsl
rolb
loope
xor
sub
roll
dec
xchg
xchg
dec
dec
mov
iret
imul
cltd
movsl
loopne
xchg
bound
mov
pushf
pop
jne
mov
iret
xchg
das
scas
shrb
es
les
mov
mov
dec
xor
aas
es
mov
or
fsubs
xchg
pop
fdivp
inc
test
mov
fidivs
mov
push
push
out
xorb
add
aad
jnp
or
and
stos
xor
inc
pop
gs
fdivp
mov
inc
fisttps
xor
in
push
je
aam
jno
test
or
and
xchg
mov
jb
jmp
add
mov
sub
xor
or
cs
cmpl
mov
mov
pop
add
mov
push
sbbb
in
cmpsl
fstpt
incb
loop
jbe
and
fnstcw
shrb
addr16
cmp
js
push
adc
ss
pop
jmp
leave
xlat
popa
dec
stos
xor
xchg
xlat
mov
xchg
mov
lea
scas
js
pop
idiv
aas
xchg
push
add
sbb
dec
dec
dec
loop
or
mov
xchg
hsubps
jle
cmp
and
push
out
test
fwait
mov
clc
decb
push
jp
dec
mov
jbe
dec
sbb
dec
pop
lcall
mov
test
inc
jns
mov
mov
inc
bound
xchg
and
jb
pop
loope
sbb
jle
cmpsl
nop
pop
xchg
jmp
push
in
inc
inc
ljmp
xchg
mov
add
popf
jl
insb
cmp
inc
dec
cmp
cmp
fucom
xlat
mov
sbb
dec
sahf
sbb
cwtl
jg
fnstcw
test
or
adc
fcompl
push
inc
add
inc
imull
int
adc
sti
lahf
push
cmc
sarl
push
push
out
xor
cmpsl
xor
xchg
mov
or
nop
aaa
test
repnz
popa
add
mov
cmpsb
mov
fisttpl
jg
loopne
test
jbe
inc
and
aaa
pop
pop
and
sarl
mov
add
or
jno
add
std
xadd
inc
add
xor
cltd
rol
dec
mov
movl
sub
imul
xchg
mov
loopne
cltd
add
ret
pop
mov
adc
addr16
cmpsb
mov
nop
or
sub
jo
mov
pop
leave
into
jo
push
xor
jnp
mov
mov
xorl
jp
push
xor
hlt
int
cmp
mov
inc
out
lods
in
adc
dec
lock
mov
scas
arpl
hlt
out
cmp
jmp
arpl
mov
pop
or
add
fistl
fdivl
dec
jecxz
push
aad
loopne
int3
push
sub
jp
das
in
adc
rclb
pop
nop
pop
xchg
clc
mov
adc
cmp
outsl
imul
and
adcb
aas
xchg
scas
and
cmp
imul
nop
cltd
arpl
xchg
out
js
leave
pop
jmp
and
test
xor
fbstp
mov
xchg
andl
repz
mov
das
pop
xor
jae
adc
mov
mov
cmp
xchg
in
push
or
imul
addr16
pop
cld
jmp
pop
push
mov
add
xchg
negl
sahf
sarb
add
imul
lea
roll
add
mov
mov
test
sbb
repnz
stos
insb
push
cmpsb
test
insb
ret
sbb
mov
cli
clc
iret
mov
lcall
in
pop
mov
mov
jle
xor
cwtl
xchg
rcll
pop
jae
out
jle
lret
fs
aad
sbb
mov
push
and
mov
xor
push
sbb
lea
mov
push
hlt
cli
cld
gs
stc
mov
pusha
sbb
mov
and
mov
inc
jne
js
add
imul
sub
cmp
dec
out
test
stc
jp
stc
in
pop
and
pop
out
sbbl
mov
xchg
pop
cmovg
inc
roll
movsb
jbe
cs
push
stc
les
cmpsl
std
rolb
lahf
pop
inc
popa
arpl
push
push
out
mov
in
pop
idivl
push
adc
lcall
les
jg
sbbb
mov
cwtl
jnp
push
pushf
test
jl,pn
pop
lods
jbe
scas
ret
addr16
sub
add
jne
aad
pop
call
push
rorb
mov
adc
inc
in
xchg
in
push
dec
adc
inc
dec
sub
add
lods
cmpl
mov
cs
cld
std
and
addr16
and
fwait
adc
mov
out
js
sti
ss
sbb
jne
ficompl
sbb
mov
dec
lods
or
pop
ficoms
shl
cld
ljmp
cltd
jge
je
xor
sbb
scas
adc
inc
jge
adc
stos
adc
sbbl
dec
sbb
adc
aam
pop
popf
mov
in
movsb
ja
inc
jns
repz
in
mov
cmpsl
rcrb
jl
and
push
jns
loopne
mov
pop
nop
xor
subl
cli
pop
push
push
jno
sti
subb
into
iret
mov
dec
inc
dec
sub
popf
add
stc
movsl
inc
fsubl
dec
data16
xchg
push
jmp
ret
das
push
iret
jnp,pt
add
imul
orl
lock
pop
jns
iret
xor
push
dec
mov
mov
mov
stc
adc
and
out
and
mov
cmc
dec
pop
cmp
mov
loopne
push
push
sbb
rcll
xchg
dec
sub
mov
push
test
inc
cwtl
push
pop
std
ds
mov
insl
clc
and
mov
mov
xchg
mov
lahf
not
dec
push
mov
dec
out
fucomip
pusha
shrb
test
idivb
shll
daa
sbb
pop
imul
outsb
inc
es
les
lods
fldt
xchg
push
inc
lods
stos
out
dec
in
push
sahf
rolb
mov
loopne
out
push
pop
daa
outsb
cmpb
inc
or
in
dec
pushf
mov
movsb
push
shlb
cli
sbb
icebp
jns
inc
je
jns
cld
jmp
mov
call
out
mov
rcrl
inc
out
push
adc
addr16
std
xchg
push
cwtl
aas
sub
cmp
adc
aas
lock
jnp
pop
adc
sbb
mov
les
mov
add
ss
push
mul
inc
sti
dec
sub
fcomp
sub
mov
shlb
imul
mov
shlb
cmp
adc
dec
sbb
icebp
dec
ljmp
testl
cmp
and
outsb
cmp
and
adc
int
jnp
daa
cmp
rol
icebp
mov
mov
pop
pusha
shrl
out
shlb
dec
sbbl
add
xchg
bound
xchg
lahf
dec
dec
es
mov
xor
fldenv
pop
mov
mov
push
mov
mov
mov
je
pop
adc
sub
mov
inc
cmpsl
mov
jb
adc
scas
roll
and
enter
loop
shll
in
sub
loop
lock
jo
daa
out
xchg
cs
pop
hlt
lods
pavgw
popa
bswap
pop
call
lods
dec
sub
pop
push
sbb
nop
pusha
lret
mov
cmpsb
in
mov
ds
pop
jge
add
pusha
or
in
ret
in
stc
inc
sbb
pop
movsl
repnz
popa
dec
insl
push
mov
mov
xor
pushf
loopne
cmpsb
adc
cmp
sbb
inc
push
pop
mov
popf
lahf
push
cmp
mov
addr16
pop
and
and
sub
jg
sbb
mov
jns
jae
in
stc
mov
jg
xchg
fwait
mov
xchg
fstl
stos
lds
sub
sbb
mov
jae
outsl
cmp
jge
stos
jecxz
gs
mov
iret
out
rcl
push
cld
mov
pop
xor
shlb
sbb
jno
cld
enter
lret
mov
xorl
ljmp
popf
mov
jns
incb
leave
pop
adc
lods
ret
nop
lret
jl
and
mov
bound
add
and
lcall
ljmp
jb
xor
mov
mov
test
adc
jg
jne
mov
movsb
push
jb
push
fdivrs
xchg
push
mov
mov
stc
jp
fisubrs
pusha
adc
dec
xchg
je
loope
stos
pusha
mov
dec
sbb
arpl
mov
mov
push
sub
mov
std
jbe
ss
fistpll
dec
orl
mov
in
jb
pop
and
dec
push
outsb
adc
cmp
pop
mov
loop
mov
ret
adc
sahf
shrl
xchg
push
ss
pop
cwtl
cmp
fucom
loop
popa
test
nop
pop
cmp
std
mov
push
pop
cmp
nop
cmc
pushf
jnp
lahf
cwtl
mov
insb
lahf
pop
mov
fcmove
js
test
shll
loope
dec
adc
cltd
rcrb
push
ficoms
jns
iret
sub
lahf
sbb
enter
jle
sub
or
fisttpl
fcomps
cltd
aaa
repz
int3
lahf
fcomps
cmp
sbb
je
mov
popa
sub
or
push
mov
xor
gs
mov
jnp
sbb
mov
ss
sub
xchg
je
xchg
stos
pop
test
icebp
cwtl
and
lock
and
dec
pop
test
int3
xor
pop
push
or
std
stc
imul
pushf
mov
dec
insl
test
imul
daa
pop
push
cmc
sbb
sti
test
iret
add
inc
mov
xlat
fadd
hlt
fistpll
fsubl
iret
int3
mov
cmp
je
pop
sti
jp
add
ja
mov
fwait
cmc
out
sbb
mov
shrl
and
add
fidivl
out
adcl
scas
pop
jnp
nop
push
sub
mov
imul
cwtl
bound
ljmp
mulb
inc
and
pop
sti
xchg
mov
outsb
aas
mov
nop
loop
xor
push
and
mov
je
jns
test
push
bound
or
xchg
test
adc
hlt
inc
xchg
cmpsb
lcall
aaa
mulb
mov
add
inc
mov
lea
add
loop
pop
cwtl
pushf
nop
pop
pop
fsubrs
arpl
lods
out
add
cmp
popa
mov
mov
je
mov
and
push
add
icebp
cmp
addr16
ss
sub
dec
mov
call
pop
cs
movsl
jo
dec
rolb
lret
cmp
xchg
ja
ret
rcrl
xor
pop
pusha
adc
inc
dec
cmc
lret
sub
outsl
dec
dec
cmpsl
mov
mov
nop
sbb
test
xor
adc
lea
lds
mov
div
fsts
aad
daa
je
dec
jae
adc
mov
mov
seto
clc
ret
mov
sub
das
xchg
mov
push
pop
es
pop
aam
loope
out
cmp
mov
pop
sub
mov
and
aam
cmpsl
xor
push
sub
mov
push
mov
inc
and
je
or
mov
jle
add
scas
adc
and
dec
jmp
xor
jle
in
dec
cmpsb
test
loop
dec
dec
xor
or
lock
push
and
cwtl
and
into
lea
cmp
negl
dec
or
fildl
sbb
aam
xchg
mov
sbb
adc
adc
mov
mov
ja
sbb
addr16
dec
dec
xor
cmp
jno
ds
pop
clc
js
push
testl
xchg
or
or
in
test
dec
das
mov
aaa
sahf
in
inc
test
aam
in
xor
jo
mov
pop
out
add
mov
push
aam
test
and
mov
stos
cwtl
mov
mov
loopne
xchg
dec
sbb
mov
mov
mul
cmp
cwtl
into
jb
adc
mov
cmp
adc
add
negl
adc
movsb
imul
int
test
insb
bound
jp
add
inc
mov
xchg
in
fwait
lret
scas
aaa
inc
lret
cmp
addb
mov
fcomps
lret
mov
inc
adc
push
mov
cmp
xor
jb
mov
pop
cmp
inc
sbb
xchg
cld
outsb
cmpsl
or
mov
sub
mov
pop
and
scas
bswap
jmp
mov
rolb
inc
mov
movsl
sub
sub
lret
add
mov
xor
dec
shll
lods
pushf
cmpsb
add
std
or
scas
inc
std
cmp
jo
aam
ror
mov
push
inc
lcall
mov
sbb
fbstp
fisubs
xchg
dec
xor
rorl
cmp
xor
les
imul
mov
dec
push
mov
adc
push
loop
lret
negb
xorb
bound
jb
test
xchg
mov
rcrb
sub
cs
js
out
pusha
test
and
divb
data16
sarl
inc
pop
add
test
ljmp
mov
and
push
mov
mov
rorl
fstl
mov
inc
cmp
dec
push
push
stc
dec
sbb
popf
cmp
aas
dec
ljmp
dec
or
int
xor
pop
dec
leave
dec
cmpsl
and
push
sbb
lock
inc
lock
jmp
in
mov
stos
sbb
sub
into
repz
or
push
repz
xor
mov
incb
sub
loope
les
or
mov
or
add
cmpsl
incl
xchg
leave
ss
push
mov
mov
addb
inc
out
stos
and
fimuls
loop
xor
jmp
shl
cwtl
stc
jbe
mov
daa
repnz
cli
push
adc
mov
pop
lcall
push
out
fildl
pop
lret
mov
mov
cmp
ss
ds
out
push
mov
dec
dec
or
js
add
push
cmpsl
jbe
mov
pop
cmp
cmpsb
lcall
pop
jg
roll
mov
mov
push
sub
jbe
into
ret
xor
adc
xor
xchg
outsl
stc
enter
adc
pop
adc
aas
jae
loopne
mov
sbb
pop
ljmp
fidivs
add
push
movb
jo
mov
subb
push
sbb
out
clc
enter
jno
hlt
jae
addr16
push
stos
pop
xchg
pop
jb
cs
sbb
loopne
mov
fucom
mov
jb
fsubrs
daa
lods
mov
xor
mov
cld
int
add
mov
shll
gs
aas
xchg
mov
adcb
dec
dec
sub
ja
and
pop
fucomip
fistps
mov
dec
rolb
mov
dec
pop
inc
add
or
mov
adc
xchg
and
or
bound
jge
fstps
stos
pop
pmaxsw
and
xor
sarb
add
ret
scas
pop
lea
cli
pop
mov
push
adc
push
sbb
loop
sub
addb
adc
inc
mov
cwtl
sub
dec
and
pop
inc
fnsave
mov
xchg
lock
cmp
fistpll
mov
push
add
ds
push
aam
cli
sti
pushf
shlb
xchg
out
cmp
xchg
in
mov
jp
jl
mov
icebp
enter
mov
adc
add
lds
and
pop
mov
scas
int
repnz
mov
enter
addr16
addr16
inc
or
fisubrs
jmp
xlat
pop
out
jnp
xorl
push
lods
push
mov
jbe
mov
repnz
outsb
cmp
hlt
ficoml
push
mov
sbb
int
pop
scas
loop
data16
aas
sub
mov
frstor
call
dec
mov
sahf
mov
iret
cmp
mov
in
cld
push
xchg
sub
mov
cmpsb
data16
pop
and
rcrl
cwtl
pop
aas
lea
out
bound
and
push
movsb
pop
xchg
test
sub
pop
inc
jb
movsb
jg
adc
mov
es
scas
push
and
lods
popf
pop
or
add
repz
jmp
inc
xchg
lods
cmpsb
lea
jns
imul
out
test
adc
sti
jbe
lds
xor
rclb
mov
xchg
cli
push
aad
ds
fisttps
jb
or
mov
andb
mov
pop
xchg
lods
jmp
ja
sbb
aam
hlt
jbe
adc
loopne
lds
dec
movsb
lret
and
pushl
xchg
jne
push
mov
rcll
xchg
cli
xor
rolb
push
push
je
in
pop
out
shll
inc
mov
notb
scas
mov
mov
inc
add
loopne
gs
out
cmp
xchg
cmp
je
xchg
jecxz
into
pop
pop
xor
jne
repz
or
rcll
loope
sub
leave
sub
jmp
cmpsb
jg
ret
enter
mov
popf
mov
in
push
stos
lret
imul
push
sbb
sti
mov
hlt
or
mov
and
lods
jp
movsl
fs
sub
ret
shr
ds
out
out
shll
cs
pop
inc
pushf
xorl
ret
sbb
mov
enter
je
adc
loope
int
adc
into
xchg
in
mov
adc
jle
dec
jo
xchg
jno
mov
inc
adc
leave
movsb
dec
out
aaa
cmp
sub
std
add
pop
add
sbb
mov
xchg
test
push
mov
loopne
mov
push
pop
divb
sarb
sub
ja
movl
pop
xchg
cmpsb
dec
sub
stos
or
cmp
rcll
sbb
push
xor
or
mov
out
sbb
sbb
inc
cwtl
jb
and
jge
pushf
pushf
call
sub
jbe
insb
mov
and
sbb
int
repnz
xchg
xchg
mov
lret
jmp
dec
mov
cmp
setp
xor
push
in
sub
add
int
test
xor
push
xor
sbb
int3
mov
loop
inc
inc
rorl
xchg
and
ja
push
or
insl
test
xchg
cld
dec
push
aam
ljmp
int3
in
icebp
pop
in
push
xchg
xor
xchg
cmp
outsl
stc
cmpsb
inc
test
push
mov
ss
mov
xlat
mov
sbb
dec
faddl
dec
fiaddl
sbb
test
xor
lahf
scas
add
sbbl
stc
das
xchg
in
sub
pop
mov
cs
inc
stos
mov
jmp
aam
jmp
inc
dec
pop
int3
mov
push
adc
or
cmpsl
sub
inc
je
push
cmp
sti
popa
mov
mov
cmp
mov
fisubrs
out
aas
rorl
xchg
adc
jbe
mov
mov
sub
push
int
jecxz
mov
jo
push
xchg
aas
jmp
push
lea
cli
xchg
mov
icebp
inc
mov
cmp
insl
adc
filds
loopne
rcr
mov
mov
insl
xlat
ret
mov
in
mov
icebp
fisubrl
mov
scas
and
lahf
faddl
push
xlat
mov
add
mov
test
add
sub
shrb
aad
into
lods
sahf
aad
repz
or
fwait
push
fistpl
cmp
in
inc
addr16
jecxz
ja
mov
jns
popf
mov
mov
mov
push
xor
mov
push
lea
cmp
mov
cmpsl
sti
in
popa
xchg
pop
xchg
jne
dec
jecxz
in
mov
add
or
addr16
push
pop
sbb
cmp
aas
pop
mov
in
inc
xor
int3
test
popa
in
loop
ficoms
aam
inc
jbe
stos
and
mov
jl
int
dec
in
sub
data16
mov
fadd
lea
mov
pop
xchg
xchg
in
pop
dec
pusha
mov
cwtl
scas
aaa
lea
cmp
mov
je
adc
add
lret
add
loope
cmc
fsubrl
add
adc
stos
pop
cmp
cmpsb
add
enter
fldt
ds
xor
aas
jge
xor
jo
mov
and
je
lahf
das
inc
xchg
fcomps
or
repz
loope
dec
pushf
push
pop
ja
fwait
pop
push
and
pop
pop
cmpsl
call
loope
adc
mov
movsl
lcall
adc
and
pop
ljmp
subb
push
clc
xchg
mov
cmp
in
lock
jecxz
out
loope
pop
adc
pop
fistps
sbb
mov
out
ret
jl
dec
ret
mov
lret
insb
and
push
dec
sti
xchg
mov
dec
pop
int
imul
cld
lcall
das
es
loope
or
dec
push
aas
and
jg
inc
pop
mov
stc
test
aas
out
mov
adc
into
and
idivl
rcrb
jp
mov
out
pop
mov
into
stos
cli
xchg
test
cmp
xor
jmp
mov
jp
clc
or
clc
xor
adc
ret
jo
icebp
aad
test
mov
ret
insb
test
ret
scas
sbb
mov
dec
and
cwtl
add
mov
jbe
es
data16
push
jmp
mov
and
das
stos
mov
or
int3
mov
pusha
cmpsl
sbb
in
pop
sti
xchg
pop
loopne
pxor
movsl
call
out
cwtl
cmpsb
mov
orb
mov
gs
testb
mov
aaa
push
loopne
sar
xor
xlat
sbb
xor
pop
mov
cld
test
scas
cmp
or
mov
mov
setge
sbb
lret
pop
fldcw
add
fsubrs
mov
mov
lods
jp
sbb
push
xchg
hlt
loopne
inc
push
sbb
inc
test
jmp
push
adc
lret
dec
fnstsw
rcrb
addr16
fldt
sarb
lret
ss
imul
push
inc
sbb
xor
pop
js
loope
adc
bnd
mov
add
stos
pop
mov
add
js
cli
fadds
push
imul
popa
sbbb
jbe
push
in
ror
out
dec
js
popl
int3
in
fwait
push
cld
mov
popa
mov
add
test
add
sub
inc
add
adc
sbb
dec
jbe
dec
sub
pop
fldcw
dec
aam
in
sub
aas
or
mov
cmpsb
inc
push
sbb
mov
repnz
mov
sbb
insl
xchg
sar
incb
jg
fnstcw
jns
aas
testl
cmp
mov
aam
mov
jo
pop
lret
cmp
out
mov
inc
enter
cmp
mov
ss
mov
mov
sbb
xor
adc
ss
stos
and
lods
pop
hlt
iret
sub
nop
xor
std
iret
fstp
add
rcll
hlt
les
xor
daa
inc
not
cmp
aaa
cli
push
push
push
outsb
xor
push
sub
xchg
xchg
or
pop
xorl
sbb
lahf
inc
cs
test
mov
das
dec
xlat
sbb
sti
pop
mov
inc
lods
push
mov
fldt
cmp
mov
mov
adc
pop
in
jns
in
push
ss
repz
iret
repnz
daa
adc
cli
xor
cmc
xchg
dec
std
sub
mov
inc
iret
lods
cwtl
stos
cs
stos
imul
jae
xor
mov
outsb
xchg
stos
dec
sub
call
or
cmp
jb
lds
popf
aas
out
popa
xchg
adc
push
movsl
or
int
sub
adc
subl
push
add
push
inc
ret
mov
lea
pop
shll
adc
cmpsl
shl
setp
movsb
bound
mov
xchg
ss
fisttpl
in
sub
xlat
pusha
inc
out
cld
js
push
fidivrl
lds
das
push
mov
push
lods
mov
inc
mov
mov
xchg
xchg
cmp
cmp
mov
xor
das
movsb
gs
cwtl
icebp
loop
lock
sbb
ret
outsb
sbb
and
jb
sub
out
xchg
leave
pop
or
pusha
repnz
jns
sub
pop
shl
mov
jle,pt
testl
mov
popa
mov
jecxz
enter
xchg
mov
pushf
insl
int
aas
sbb
push
lcall
inc
or
pop
aad
aam
lock
mov
arpl
push
xlat
xchg
jbe
jmp
nop
push
xor
sub
push
jb
lcall
add
mov
repnz
sbbl
movsl
aas
push
test
jae
inc
popa
iret
aad
mov
xchg
les
pop
sarb
xchg
add
adc
das
mov
jo
add
add
mov
jp
mov
mov
cmp
dec
jbe
jg
sub
cmpb
iret
or
subl
sub
fs
cmp
adc
xor
ret
sbbb
rclb
insb
iret
push
hlt
adc
mov
icebp
lea
arpl
daa
xor
stos
lock
push
mov
push
in
add
mov
pop
std
mov
xchg
popf
adc
sbb
mov
lret
idivl
movsl
xchg
and
and
ja
ret
jb
ja
push
data16
or
or
add
dec
mov
iret
pushf
ds
xlat
jecxz
mov
fldenv
stos
in
sbb
sub
outsb
jmp
daa
out
fmull
mov
cmpsl
cmp
loope
dec
mov
mov
movsb
push
lret
mov
mov
sbb
lods
inc
or
fstpl
mov
mov
sbb
outsb
gs
jbe
mov
dec
xor
xor
iret
mov
jo
test
insb
outsl
add
sarl
loope
cltd
inc
adcb
fiadds
sbb
mov
sub
imul
in
mov
fsubp
aas
in
sbb
jno
jge
push
adc
inc
sub
jg
aad
mov
jmp
aam
sub
push
and
mov
push
nop
cmc
repz
lret
push
push
leave
mov
scas
movsb
cltd
mov
xchg
mov
push
cmpsb
sub
inc
cmp
les
rol
shl
fsts
in
add
js
push
outsb
sarl
out
mov
dec
stos
jne
push
lods
sub
imul
sbb
mov
je
ss
lea
out
ret
mov
adc
pop
pop
jge
mov
pop
mov
sub
adc
inc
fistps
inc
and
dec
push
pop
xlat
stos
or
cli
dec
cmpsb
xor
inc
movsl
cwtl
jl
inc
in
das
aam
push
push
cwtl
in
or
dec
inc
in
addr16
mov
testl
mov
push
xchg
lahf
int3
popf
lock
push
call
fcom
and
jb
ucomiss
jg
sub
test
scas
aam
and
add
enter
clc
mov
mov
nop
iret
sub
pusha
ret
shlb
scas
in
in
cmc
mov
jns
or
or
stc
jae
insb
inc
test
pop
movsl
loope
xchg
cmp
out
mov
add
xchg
cmc
insb
xor
mov
push
repnz
dec
xchg
hlt
pusha
pop
stos
jmp
jb
sbb
add
ret
push
fs
addl
sbb
jns
jae
dec
xlat
xor
mov
xchg
out
mov
fidivs
out
sub
mov
mov
mov
sbb
xchg
cmp
bound
lods
mov
das
inc
jmp
push
imul
push
movsb
mov
xor
lret
sub
test
cltd
cmpsb
mov
cmpsl
popa
mull
mov
mov
pop
push
pop
adc
orb
push
xor
into
lods
add
mov
outsb
xor
bnd
mov
shll
sahf
mov
fcompl
pop
pop
adc
jo
std
mov
cmp
or
scas
and
out
ror
mov
mov
mov
movsl
aam
and
addl
inc
mov
out
dec
out
ja
inc
mov
push
push
add
adc
adc
mov
push
movb
add
pusha
jns
scas
or
test
in
jnp
jle
iret
pop
pusha
jg
xlat
loopne
addb
jnp
add
fimuls
inc
test
jg
movsb
xor
sbb
rorb
fdivr
jnp
call
stos
inc
dec
push
jns
lahf
push
pop
daa
jb
sbb
outsl
jbe
pop
ss
push
dec
popf
decb
mov
or
aaa
or
adc
test
add
sbb
wbinvd
xchg
mov
adc
push
xchg
or
icebp
dec
out
mov
push
mov
adc
in
push
js
repz
roll
pop
icebp
sbbl
jge
ja
fucomp
xor
pushf
lds
pop
ds
arpl
pushf
sbb
or
decb
lret
xchg
cmp
in
mov
shrl
popa
xchg
gs
pusha
frstor
jns
fbld
aas
popf
cmp
stos
pop
fwait
icebp
jle
push
pop
jae
push
push
das
or
xchg
cmpsl
ds
repnz
mov
jl
push
nop
add
push
and
call
lea
lcallw
cwtl
repz
dec
pop
les
stos
mov
xchg
subl
pop
push
dec
popa
mov
into
add
pop
xor
jge
shl
jne
js,pt
daa
adc
push
fs
pcmpeqb
roll
fldt
sbb
arpl
icebp
test
fsubrl
adcl
lahf
rclb
movsl
xor
aas
rorb
out
loope
fcmovu
insl
popf
sub
rcl
cmp
cmp
insl
shll
xlat
and
mov
aaa
and
jge
jg
xor
jbe
jns
call
adc
mov
sub
enter
xchg
xor
mov
or
push
xchg
out
shrb
popa
xchg
js
cmpsl
fucom
cmc
test
test
ja
ss
push
sbb
sub
test
mov
add
in
jnp
movl
dec
into
fldt
sub
rorl
les
clc
test
and
sbb
lret
aad
clc
call
lea
mov
lahf
es
stos
repnz
dec
lret
mov
mov
lods
adc
dec
popf
jne
mov
mov
incl
add
or
je
mov
or
repnz
jno
loopne
nop
jl
pop
nop
add
inc
mov
fmull
addr16
arpl
mov
cmp
loopne
icebp
popa
cld
movsl
sbb
loopne
bound
stc
cmp
jge
movsb
pop
ss
cld
and
or
stc
jns
adc
fsts
push
popa
pushf
xchg
mov
adc
dec
xchg
gs
mov
and
in
lahf
xchg
fsts
push
add
movsb
cmc
rcr
pop
sti
stos
lret
js
sub
repnz
or
mov
xchg
or
addb
in
inc
in
cs
lods
xchg
leave
inc
and
imul
add
mov
cbtw
adc
adc
and
shll
scas
popf
push
xlat
movsl
mov
xchg
jae
ds
lods
xchg
and
adc
in
mov
pop
pop
xchg
inc
inc
mov
or
sub
and
push
fnsetpm(287
andl
inc
punpckhdq
mov
std
dec
std
jge
jns
ljmp
sub
nop
int
or
or
movl
and
push
inc
lock
cmpsb
cmp
repnz
les
cmc
hlt
mov
mov
fbstp
xor
sbb
xor
stos
test
rsm
aam
mov
sbb
add
xor
into
mov
xor
xor
push
jp
shlb
imulb
sub
enter
ja
call
int3
repnz
insl
adcl
jbe
push
call
cmp
sarl
xor
or
in
fwait
push
mov
cmp
das
imul
lahf
mov
test
adcb
add
lods
and
add
es
arpl
xor
sbb
cmp
or
negl
mov
push
js
pop
xchg
mov
dec
les
sub
sbbl
es
push
pop
out
test
rorl
aad
loopne
mov
fidivrl
jge
stos
cltd
ret
sbbb
sub
dec
fistpl
jno
inc
mov
jns
mov
push
xor
pop
icebp
mov
push
adcb
sub
movsl
adc
loop
cmp
mov
in
cli
xor
lods
inc
mov
iret
lret
and
add
xor
mov
jno
adc
fnstcw
in
inc
inc
pop
and
scas
push
cmp
ficomps
sub
pop
fdivl
inc
pop
outsl
dec
mov
pop
adc
mov
mov
mov
mov
ljmp
lret
add
imul
loope
in
pusha
push
xchg
jle
dec
inc
mov
pop
ja
jbe
add
and
mov
or
rep
xor
cmc
jno
popa
in
mov
iret
shlb
lcall
xchg
jno
ss
test
fcom
std
in
fwait
push
push
cmpl
pop
mov
mov
jno
lahf
divl
lahf
data16
mov
mov
scas
dec
std
or
mov
push
xchg
addr16
int3
mov
push
inc
xchg
fucomip
cs
lcall
push
pushl
xchg
insb
movsb
divl
fimull
push
pop
cmpsb
mov
sub
das
xchg
movl
sbb
mov
sbb
enter
sub
dec
sub
adcl
dec
mov
sbbb
add
mov
dec
jns
mov
fsubp
ss
sub
xchg
push
push
dec
repz
aaa
xor
fwait
loopne
jle
scas
xchg
mov
mov
jl
clc
xlat
cmpsl
sarl
stos
cld
cltd
mov
stc
fldt
icebp
mov
inc
pop
pop
inc
cmp
or
aaa
push
mov
mov
dec
cwtl
int3
mov
jns
add
xchg
inc
cmp
adc
rcll
jns
popf
add
mov
or
and
notb
mov
in
arpl
ds
jle
mov
pop
cmp
outsl
sbb
test
jae
into
mov
add
aam
or
stos
popa
cmp
cmc
sbb
insb
sub
mov
sub
mov
movsl
outsb
out
aaa
push
data16
cmc
stos
gs
cmp
cmp
sub
xor
fstp
in
mov
pop
int
andb
divb
aad
xchg
icebp
repz
insb
cmp
mov
lahf
xchg
push
inc
fisubs
ss
mov
add
add
scas
pop
data16
inc
sbb
cmpsb
jecxz
xorl
gs
cmc
roll
pop
daa
lahf
xchg
scas
mov
xchg
dec
ja
mov
xlat
out
adc
cwtl
xor
hlt
push
aaa
jne
fs
shl
int
inc
push
std
pop
dec
icebp
lock
jle
dec
shll
idivl
pop
lods
mov
push
aam
inc
mov
adc
xor
jle
pop
lods
inc
mov
stos
inc
jnp
lea
aad
ret
ret
fs
lss
jg
lea
push
lock
xchg
jmp
dec
xor
xor
je
mov
sbb
dec
sub
daa
mov
test
sub
in
push
inc
movsl
inc
inc
sti
mov
movl
imul
mov
clc
inc
ja
adc
pop
push
data16
or
push
jo
lret
dec
dec
enter
aad
jno
mov
repz
nop
out
sbb
loop
inc
pop
mov
or
sub
sub
xchg
and
je
loop
lds
inc
mov
push
clc
add
xor
rcrl
test
push
rolb
dec
inc
lret
add
aaa
and
or
mov
mov
lcall
adc
sub
or
sub
add
call
mov
insb
popf
pop
cmp
and
or
push
int
push
aad
xchg
sbb
lds
dec
std
sahf
xor
or
and
nop
inc
mov
ret
cmp
leave
ficompl
lock
pop
ret
jmp
mov
xchg
adc
and
mov
out
jg
pop
nop
clc
ds
or
out
leave
pop
shll
js
dec
movsl
test
or
add
push
dec
adc
leave
mov
repz
call
sub
cmpsb
or
dec
icebp
pop
shlb
stc
rol
cmp
add
sti
dec
push
lods
jno
push
popf
xchg
fbld
cmp
cmp
push
loopne
cmpsb
push
sub
sbbb
push
icebp
shll
jne
or
push
das
js
aas
imul
adc
mov
pop
push
aam
std
add
test
add
adc
add
mov
push
mov
nop
lods
gs
adc
pusha
cmp
mov
sti
pop
dec
in
add
sub
cmpsb
cmp
jae
jns
push
jo
adc
insb
mov
jne
jle
mov
push
or
adc
xor
fcmovne
mov
nop
pushf
add
adcb
lea
aaa
jp
jl
sub
xor
lods
idivb
movsl
in
cmp
sbb
hlt
fidivl
inc
int
add
mov
or
pop
insb
adc
inc
fwait
xchg
test
push
pop
jnp
out
jns
sbb
mov
clc
out
pop
pop
orb
ja
and
push
faddl
inc
cmp
xchg
mov
scas
clc
mov
shlb
jle
mov
add
cmp
and
dec
sbb
mov
sbb
pop
test
and
mov
cmp
dec
rcr
or
dec
lcall
ret
cmp
jbe
test
sub
push
test
aam
fs
in
pop
push
pop
cwtl
ja
and
and
sub
nop
push
das
stos
push
jg
loope
addr16
test
mov
fmul
addb
pop
ret
jg
jp
or
dec
dec
cmpl
sti
push
mov
mov
push
jns
out
pop
mov
pushf
jae
cmpsl
movsl
cs
iret
pop
dec
shl
fildll
gs
js
sbb
sbb
dec
lods
sbb
test
jmp
into
jecxz
add
shrb
cmp
jnp
push
out
insb
dec
enter
movsb
loope
mov
dec
nop
fs
dec
cmp
adc
jae
sub
sahf
cmc
into
enter
mov
out
mov
lock
mov
inc
insl
ret
out
or
sbb
mov
dec
dec
adc
stos
popa
mov
mov
push
adc
leave
mov
aaa
xchg
mov
in
fwait
lret
mov
mov
loopne
inc
nop
lret
outsb
js
dec
xchg
sub
xor
cli
jmp
mov
decl
xchg
jecxz
cmc
test
xor
lea
xor
xchg
movsb
mov
xor
adc
in
adc
cs
and
test
dec
sbb
in
jb
addr16
lcall
jns
sub
es
dec
xor
adc
call
xchg
pop
lock
xor
insb
dec
pop
call
hlt
jecxz
jle
and
mov
dec
dec
repz
jo
movsb
lcall
dec
xchg
inc
dec
push
mov
add
lods
or
adc
push
sbb
es
or
dec
enter
pusha
das
cld
push
cmc
adc
dec
fildll
imul
jl
ljmp
enter
jbe
test
rolb
pop
sti
stos
mov
push
por
mov
ret
adc
cltd
mov
lods
repnz
shll
in
sub
xchg
repnz
pop
push
pop
push
sbb
movsb
inc
bound
in
mov
sbb
jns
inc
in
xor
enter
mov
sar
arpl
sub
or
sub
adcb
lret
arpl
push
xchg
jnp
xor
xor
movsb
mov
push
enter
fsubl
cwtl
xchg
xchg
mov
insl
xor
fsubl
push
push
out
inc
and
int3
lods
lods
icebp
push
sub
sub
daa
cmp
and
popf
cltd
out
sbb
jmp
sbb
enter
mov
mov
mov
ljmp
popf
xor
outsl
ja
ljmp
sub
jge
sbb
negl
or
pushf
push
inc
pop
push
pop
jge
in
or
xchg
js
in
sub
out
test
popf
mov
out
in
sub
cmp
inc
add
jbe
add
and
jmp
mov
and
sbb
jne
xchg
inc
sbb
mov
std
aam
bnd
scas
nop
outsb
mov
ljmp
cmp
cmp
pop
jb
or
andb
jle
rorl
pop
xchg
jnp
bound
mov
jg
xchg
sbb
inc
or
cmp
gs
cwtl
test
push
pop
mov
cs
loopne
or
ret
stc
sbb
mov
int3
fldz
cmc
cltd
daa
ja
sbb
sarb
jge
mov
data16
cmpsb
adc
xchg
xchg
stos
dec
arpl
xchg
sbb
pushf
inc
adc
insb
fnsave
xchg
or
push
sti
ja
and
imul
out
sub
iret
mov
addr16
sbb
fidivl
and
pop
xor
pop
push
push
xchg
popf
in
fldl
out
aas
cmpsl
mov
mov
movsb
and
test
xlat
xchg
mov
scas
cmpsl
sub
dec
cmpb
rcrb
ja
and
mov
fimuls
jb
mov
rclb
sub
mov
sub
cs
ja
cmc
fsubp
mov
lcall
mov
lahf
icebp
cmp
mov
pop
push
hlt
out
aaa
lahf
lock
xchg
cld
lds
push
ret
shl
pop
in
xor
pop
fiadds
test
sbb
and
mov
or
mov
outsl
push
test
std
push
dec
jle
xchg
xlat
ror
stc
ror
popa
cli
ss
push
aaa
filds
mov
repnz
jl
push
and
test
xchg
fldt
insl
and
es
sub
push
cli
fsubrl
data16
test
mov
into
into
push
cmpsl
jl
addr16
sbb
inc
cmpsl
setnp
ficoms
push
jl
daa
je
add
inc
stc
inc
cmp
mov
cmp
xchg
aam
aas
or
or
aam
in
lods
xchg
cmp
xor
mov
shrb
mov
int
stc
in
add
pop
fildll
xor
out
leave
popa
and
cs
cwtl
shll
sbbb
cli
cmp
jns
add
cs
movsl
lods
movsb
push
add
ljmp
or
cmpsb
mov
stos
sahf
cld
ss
loop
insl
and
jl
imul
mov
cmp
loope
push
sub
je
fsub
lock
fisubrl
fwait
stos
inc
inc
mov
mov
add
add
jmp
dec
cli
sbb
aaa
test
dec
dec
push
jnp
ror
inc
mov
adcl
dec
xlat
lahf
js
cmp
and
stos
cmp
push
adc
or
or
sbb
pop
mov
mov
adc
xor
mov
outsl
xchg
or
mov
cld
aad
or
ljmp
jne
adc
or
or
iret
sti
push
nop
loopne
push
call
dec
mov
das
dec
jmp
sbb
inc
sub
inc
outsb
filds
loop
add
popf
sti
insb
loopne
sub
loopne
mov
sub
in
rclb
pop
int
outsb
jle
xor
lock
jbe
js
test
aam
fidivl
sbb
les
xor
stos
aam
in
sbb
sahf
push
nop
sub
mov
mov
dec
pushf
cmp
mov
and
les
or
ljmp
popf
adc
cmp
inc
cmp
cmpsl
lock
xlat
movsl
insl
aas
cmc
xor
pop
or
xchg
fs
and
test
lds
scas
lods
dec
shlb
jmp
push
insb
dec
and
enter
lods
cmpsb
jbe
xor
mov
ror
jmp
xchg
popa
push
fwait
mov
sub
sbb
mov
mov
clc
adc
mov
lret
nop
jne
aaa
xlat
push
cld
jg
in
call
cs
jecxz,pt
inc
cmp
push
aas
iret
or
ds
push
dec
jb
adc
push
mov
aas
jno
mov
gs
push
repnz
inc
xchg
daa
cmp
clc
and
cmp
mov
dec
mov
ja
orl
xor
movsl
jge
or
adc
in
mov
fisttps
daa
fadds
lods
lock
cwtl
ja
cmpsb
andl
pop
xchg
push
sub
mov
add
cs
cld
mov
loop
or
jecxz
aaa
in
and
mov
or
orl
lcall
jle
pop
xor
cmpsb
cs
nop
add
cmp
daa
lcall
punpcklbw
mov
pusha
shlb
sbb
xor
into
and
and
inc
sub
inc
jnp
xchg
xchg
adc
inc
sub
sbbb
push
or
add
sub
fwait
das
loop
mov
xor
sub
gs
xchg
xor
add
cmc
repnz
cltd
arpl
dec
push
adc
sbb
lods
push
xchg
out
inc
push
sbb
sbb
push
les
sub
xor
sbb
inc
dec
mov
fs
dec
paddd
push
cltd
mov
lret
pop
dec
pop
arpl
lods
xor
xchg
sub
test
in
pop
cmpsb
adc
lods
andb
inc
es
and
test
movsb
pop
rorb
neg
call
mov
pop
rclb
lock
fistpl
jecxz
lcall
xchg
jge
lahf
dec
cmp
jge
cld
jnp
js
les
sbb
decb
xchg
iret
in
pop
imul
and
loop
or
notb
pop
aaa
mov
insb
jl
bnd
sub
cwtl
mov
arpl
jbe
pop
aas
mov
jae
js
lea
mov
add
lods
out
xor
cltd
lods
shr
fsubrl
mov
cli
push
cwtl
sub
fmull
aam
cmp
or
dec
inc
jno
mov
jge
jle
xor
push
mov
adcb
push
cltd
push
rcrb
fcoml
xchg
les
repnz
rolb
xchg
mov
push
pop
xor
pop
loope
pop
mov
mov
mov
scas
sub
mov
in
dec
daa
pop
cmp
fwait
lods
xchg
fimuls
movsl
xchg
in
testl
pop
enter
sbb
mov
cmc
popa
cmp
fcoms
outsb
mov
mov
aas
movb
push
cmc
inc
inc
sahf
lds
ljmp
jp
fmull
mov
shlb
popf
lods
mov
fwait
lods
pop
repnz
dec
cmp
mov
inc
cltd
pop
add
mov
mov
jge,pn
xor
adc
mov
jp
scas
pop
xor
push
jno
aas
imul
jge
adc
std
jp
xchg
scas
inc
push
mov
cmp
xlat
cmp
js
and
leave
shlb
push
xchg
push
inc
mov
fwait
push
xlat
mov
cmp
or
decl
inc
jle
adc
mov
dec
sub
mov
lds
add
adc
pop
pop
cmp
mov
inc
mov
inc
sub
aaa
cmp
fnstenv
orl
bound
daa
mov
ss
and
repz
mov
adc
inc
repz
cmp
jno
loop
lea
and
mov
sbb
lret
adc
inc
mov
aas
fwait
ljmp
ds
mov
add
ret
mov
in
push
add
jne
in
push
push
adc
jbe
xchg
ss
and
and
in
dec
pop
jecxz
push
and
icebp
cwtl
fcoms
flds
xchg
cmc
test
inc
loopne
insl
push
dec
push
addl
or
add
fisubs
addr16
dec
sub
jmp
cmp
adc
sub
xchg
and
mov
clc
mov
pop
faddl
aam
mov
enter
or
xchg
cmp
dec
pop
mov
xor
xor
in
inc
cmpsb
mov
loop
jle
subb
out
mov
lods
aaa
xor
stos
and
fisttpl
dec
lret
sahf
repz
push
jp
inc
xchg
stos
or
mov
cmpsb
out
sub
and
das
sub
in
lds
lahf
xchg
incb
daa
je
popf
inc
mov
aam
sbb
lret
inc
push
push
outsb
testb
inc
cltd
lcall
mov
clc
sub
ret
fucom
adc
push
sbb
aam
int3
scas
pop
lods
arpl
jecxz
daa
es
mov
xchg
adc
loopne
dec
mov
and
sbb
test
imul
or
test
add
loopne
lea
nop
fbld
fnstenv
fmul
lret
mov
pop
mov
adc
cwtl
cli
insb
popf
pushf
dec
js
scas
insl
cwtl
add
pop
pop
sbb
mov
faddl
fwait
mov
push
adc
bound
sahf
lods
ja
sbb
dec
inc
xchg
dec
fildl
nop
or
xchg
leave
repz
ljmp
pop
int
inc
pop
repnz
push
add
pop
push
xchg
dec
xor
mov
or
cmp
xchg
arpl
xchg
in
cmc
bound
cmpsb
and
cld
paddsb
lds
mov
cmp
sar
in
stos
sbb
arpl
mov
push
mov
mov
jecxz
in
lock
adc
jle
mov
pop
fstp
stos
sub
fcoml
pop
pushf
test
ss
test
movb
sbb
outsb
test
and
xor
push
push
or
xchg
xchg
outsl
fxch
xor
adc
sbb
or
pop
or
int3
testl
add
dec
test
repnz
cwtl
daa
lea
call
iret
cmp
dec
sbb
cmp
mov
fdivs
call
cli
mov
pop
std
add
repnz
jbe
aad
adc
imulb
lock
jecxz
in
inc
add
ss
jl
add
sbb
add
cmp
lret
aad
outsl
xchg
xchg
or
jmp
ret
cmp
fimuls
adc
divb
mov
cmp
loope
push
in
push
push
loope
mov
mov
pop
pop
rol
or
orb
mov
sarb
xchg
movsl
test
inc
sub
inc
loop
fmuls
insb
pop
sahf
movsb
shll
sbb
fistpl
rcrl
inc
mov
push
adc
mov
pop
es
cmpsl
adc
cmpsb
dec
add
rcl
inc
movsl
addl
add
subl
add
icebp
in
test
or
loope
mov
sbb
and
jp
xchg
xlat
sub
movsl
repnz
sbb
aad
mov
das
xor
insb
ficomps
js
fcomip
das
add
add
push
push
je
inc
cmpsb
pop
sbb
lcall
insl
or
cmpsl
mov
pop
sbbl
jbe
mov
fsubr
xor
pop
sub
pushf
or
into
jl
xor
dec
jbe
mov
shrl
xchg
jae
mov
add
and
lret
jb
les
stos
jge
and
stos
xor
lea
repz
fisubrl
dec
test
flds
lcall
stos
xor
ror
xor
jge
push
ss
hlt
jb
test
sub
hlt
ret
iret
pop
int3
jnp
xchg
mov
addl
cltd
xchg
cmpsl
mov
mov
out
sbb
int
cwtl
insl
pop
jmp
loop
sbb
adc
jle
mov
outsl
lret
stos
cld
outsb
pop
add
into
mov
pop
adc
push
mov
ja
mov
adc
ss
loop
shl
add
and
dec
scas
notb
scas
push
push
adc
inc
into
jns
sbb
jbe
cli
addps
add
mov
cmpsb
add
xchg
out
dec
cmpsb
adc
inc
insb
lahf
cltd
mov
push
sub
je
dec
popa
xorl
sub
nop
pop
dec
test
pop
adc
incl
imul
pop
mov
addr16
mov
rorl
xor
sbb
dec
push
loope
inc
repnz
and
xor
orl
adcb
xlat
ret
les
pop
call
mov
imul
pushf
cli
jbe
incb
mov
in
cltd
jnp
adc
jae
mov
je
shrl
not
pop
push
andb
xor
fdivrp
mov
enter
sub
xchg
add
in
adc
push
jbe
dec
ja
ja
scas
mov
test
mov
aas
inc
pop
jo
sub
lcall
insl
scas
or
mov
sbb
or
shll
push
mov
leave
hlt
pop
dec
adc
jb
scas
sub
pop
jmp
jb
aas
out
loope
or
push
fs
pop
shlb
push
adc
imul
lcall
mov
jg
hlt
dec
sub
scas
out
sub
cmc
mov
mov
mov
or
pop
push
test
xchg
ret
imul
push
inc
pushf
sbb
jmp
iret
repz
push
lods
add
jb
jne
daa
jns
mov
aad
mov
loop
jge
dec
push
inc
sarl
push
sub
xor
loope,pt
iret
cld
cmpsb
jle
pop
sbb
jnp
xchg
mov
lea
or
inc
cld
dec
cmp
xor
adc
lock
jle
xchg
pushl
repz
mov
mov
push
das
mov
push
and
leave
sti
add
jbe
enter
mov
jbe
cld
xor
test
mov
xchg
sub
jle
add
dec
sti
sub
sbbb
mov
aad
adc
cmp
outsb
sbb
and
jb
mov
ds
outsl
into
leave
sar
imul
inc
movsb
loopne
add
sbb
xchg
mov
sahf
outsl
push
cmc
lea
lock
and
lea
dec
cmp
add
jge
xchg
add
les
mov
mov
mov
xchg
xchg
cmp
inc
out
add
sbb
jns
pop
cmpsl
jge
gs
xchg
adc
hlt
mov
push
sbb
mov
xor
es
clc
aad
push
cmp
and
jp
mov
sbb
jecxz
sbb
pop
nop
adc
mov
sbbb
jmp
add
jl
in
xchg
mov
aaa
mov
loope
xchg
adc
and
ret
sbb
aaa
lret
mov
push
test
sub
push
sbbb
push
cli
into
cwtl
lahf
or
jl
mov
push
xchg
xchg
popa
pop
jne
pop
daa
repz
repz
test
sub
fistps
sub
popf
and
neg
mov
and
inc
into
cmp
popa
or
jnp
pop
pop
mov
cli
xchg
addb
lahf
lods
sub
into
fcoms
pop
cmp
sbb
loopne
fisubrl
and
je
insl
adc
inc
aam
test
dec
ljmp
fisttps
call
adc
test
negb
stos
out
out
ja
xchg
insb
xchg
mov
pop
fists
mov
in
arpl
out
cld
js
cmp
hlt
mov
xor
inc
iret
loope
xor
sbb
jle
mov
scas
mov
sbb
jge
xor
out
daa
cld
mov
jae
mov
mov
fs
xchg
or
int
int
sub
fsubrs
pop
repnz
mov
xor
xor
push
lret
insl
jne
jb
mov
mov
outsw
or
mov
nop
xchg
adc
or
dec
shll
icebp
push
jge
inc
fwait
cld
pop
xor
mov
pop
ljmp
call
inc
cmp
imul
or
fwait
shrb
inc
jecxz
cltd
mov
adc
sti
or
dec
iret
fbstp
mov
mov
cmc
cli
xor
jmp
daa
push
shll
jmp
mov
imul
jbe
push
dec
inc
or
dec
sbb
loop
insl
pop
jmp
ret
jmp
mov
dec
xchg
inc
roll
js
add
stos
repnz
inc
stc
jne
pop
lea
ljmp
cmc
lcall
dec
fiadds
cmpsb
xor
and
mov
xchg
sbb
sub
popa
loope
jae
jle
push
rorl
int
inc
xchg
pop
hlt
cmc
faddl
inc
insl
mov
cwtl
pop
add
jle
pop
sub
mov
call
lahf
mov
mov
push
jle
xor
js
xor
loop
dec
xlat
mov
push
arpl
leave
rcrb
out
popf
jmp
shll
sbb
mov
aaa
sbb
adc
or
hlt
mov
push
xchg
outsb
enter
repz
dec
std
sbb
or
inc
mov
xor
add
pushf
stc
repnz
pop
push
adc
jae
adc
dec
and
and
pop
adc
lods
aam
lds
and
push
or
mov
test
dec
mov
icebp
dec
pop
leave
add
cld
inc
pop
mov
or
or
push
adc
xor
adc
add
inc
loope
and
inc
or
shrb
stos
jbe
imul
push
out
mov
call
mov
mov
cmpsl
outsl
adcb
iret
add
inc
popa
add
inc
incb
lret
add
mov
inc
cmpsl
or
out
pop
or
sbb
pop
les
rorb
mov
jecxz
sti
es
lods
pop
dec
xchg
jge
cmp
adcb
xchg
inc
lds
test
cmp
cmp
das
adc
push
mov
lret
outsb
icebp
bnd
push
mov
lods
aaa
in
das
notl
sbb
jns
xlat
lahf
loope
xchg
jg
cmpsl
aam
into
hlt
dec
fwait
or
xor
aaa
and
inc
fidivs
stc
xchg
mov
fdivrs
clc
dec
js
gs
in
sub
or
lea
dec
addr16
pop
sbb
ss
mov
sbb
in
int3
jl
lcall
int
mov
inc
aad
lcall
jb
movsl
push
out
adc
mov
adc
outsl
jle
ja
ret
push
cltd
jb
xchg
jmp
add
xor
mov
loop
dec
xchg
aas
jb
jb
dec
mov
test
sbb
push
int3
call
popa
xchg
mov
cli
inc
xchg
nop
aad
loop
dec
mov
js
lcall
stc
dec
shll
andl
xchg
jp
adcb
fldcw
and
cmpsl
daa
out
cmp
mov
pop
adc
lcall
inc
mov
push
lods
jo
shlb
fidivs
rol
lret
push
add
cltd
fistps
movsb
es
jae
jle
mov
insl
lea
dec
sti
pop
repnz
enter
xor
mov
ret
lock
pop
xor
push
test
repz
sub
in
jae
ss
cld
jle
mov
mov
inc
nop
or
adc
cmpsl
cmpsb
aas
xchg
cmp
cmc
xchg
adc
fstp
addl
pop
nop
scas
or
xchg
dec
hlt
mov
inc
jae
adc
out
leave
push
sub
cmp
or
insb
jecxz
jp
rcrb
jge
jle
lcall
adc
test
or
mov
xor
sahf
les
jge
mov
mov
cmpsb
jg
push
addr16
pusha
aam
stos
adc
jne
int
fdiv
fmull
push
xor
inc
or
mov
mov
mov
xchg
and
jg
in
lahf
xor
dec
xchg
inc
rorb
xchg
xor
jle
jbe
mov
xor
lods
insb
arpl
push
xchg
cwtl
shl
in
mov
inc
adc
call
add
xchg
shl
data16
cmc
push
xor
jb
daa
movsb
pop
sub
sbb
adc
pusha
bound
std
out
das
dec
clc
sbb
mov
fcmovnu
and
js
je
lcall
adc
add
imul
mov
adc
sub
jge
inc
repnz
aad
mov
or
call
lcall
ja
cs
or
mov
xor
xor
jge
mov
add
xchg
lret
movsl
jg
or
sub
pop
nop
xor
jg
inc
pop
and
ror
es
cmpb
aaa
sub
ret
fisttps
cmpsl
ja
into
aad
push
fnstcw
adc
mov
adc
test
add
add
adc
mov
push
notb
mov
and
mov
and
stc
adc
dec
xchg
mov
push
popa
dec
dec
lret
aad
push
lods
sub
push
pop
adc
mov
stc
adc
push
push
leave
lods
cmpsl
dec
dec
pop
or
mov
inc
mov
addr16
sysret
mov
dec
pop
mov
shr
xlat
pop
fisubrs
cmp
sbb
push
ja
out
hlt
ljmp
add
sub
jns,pt
iret
cmp
adc
mov
movsl
adc
jne
mov
mov
int3
test
ss
mov
xchg
enter
mov
pop
pop
imul
popl
and
pop
repnz
xchg
jns
sbb
pop
push
mov
mov
xlat
sub
in
mull
xchg
lds
inc
dec
mov
inc
mov
fadds
scas
imul
jne
sbb
lcall
xor
aas
ss
jecxz
fsubp
jg
ret
out
pop
push
add
mov
imul
jmp
xor
faddl
jl
jge
dec
adc
add
nop
pop
mov
pop
popf
pop
ja
inc
sahf
jmp
outsb
sub
inc
fwait
jmp
scas
and
push
jmp
inc
xor
mov
nop
xchg
and
test
mov
jle
loope
xor
lods
jns
inc
push
sub
insl
loope
jno
lods
mov
gs
lcall
movsb
or
lods
into
sbb
sub
adc
leave
nop
jnp
mov
mov
xchg
inc
cld
jmp
aaa
in
sbb
push
push
dec
sub
stos
push
sbb
mov
push
cld
test
aad
inc
outsb
insl
mov
xchg
and
pusha
pop
mov
push
mov
jnp
cmp
cmpps
add
scas
dec
fwait
cmp
pushf
mov
aas
cmp
loopne
rorl
mov
subl
lods
jle
stos
mov
test
shll
mov
fdivl
push
lcall
add
mov
jmp
fcomps
inc
loope
js
shlb
cmp
dec
lods
jb
jmp
add
fldt
fisttps
daa
fs
xchg
pop
push
xchg
pop
pusha
movsl
dec
lret
mov
bound
in
mov
push
pop
jge
adc
outsl
sbbb
or
lods
movsl
sbbb
hlt
stos
ss
push
fistl
icebp
sub
mov
mov
adc
xchg
pop
in
xchg
cmp
out
rolb
xchg
inc
fwait
mov
pop
in
test
xchg
lods
std
ljmp
ja
cmpsb
mov
sub
jmp
jmp
cs
push
jne
or
nop
in
cmpsl
cmpb
stos
inc
incb
jno
insb
lods
fcoms
mov
je
cltd
dec
xchg
out
cmp
fdivl
dec
jmp
jb
jnp
jb
fmull
aas
in
ret
sbbb
xlat
dec
out
aam
jbe
ja
and
xor
xchg
and
pop
jge
push
xchg
scas
fsubr
inc
jbe
mov
aas
mov
into
add
mov
push
or
loope
mov
in
push
add
rcrl
dec
mov
sbb
sub
lods
in
aas
imul
jmp
data16
cmc
jbe
lock
and
repnz
jbe
fnsave
dec
addr16
rcrb
pop
pop
or
stc
test
pop
loop
and
jl
and
mov
fcoms
jecxz
adc
cmova
add
xlat
gs
push
xlat
jg
push
xlat
pop
inc
int3
xchg
stos
sbb
xchg
xchg
inc
loop
imul
xchg
cltd
ss
or
cld
mov
and
xor
je
mov
sbb
add
mov
mov
xorl
sub
and
sub
outsl
push
ss
lds
adc
inc
jnp
pop
jb
fnsave
push
jmp
in
nop
sub
dec
xor
push
sbb
and
jno
sbb
sub
jle
popa
push
cmp
add
iret
imul
aad
inc
pop
pop
pop
fmull
lret
xchg
stos
pop
jb
pop
int
jl
movsb
or
mov
out
mov
ret
subb
jl
lea
mov
lds
xor
jl
js
push
insl
xor
xorb
jecxz
pop
dec
js
das
mov
fildll
ljmp
fcompl
pop
push
inc
xlat
orl
mov
outsb
in
scas
and
jns
test
hlt
inc
adcb
adc
cmp
xlat
mov
inc
int
rorl
loopne
push
lods
js
xchg
out
and
scas
sub
add
xlat
inc
adc
insb
test
outsb
pushl
ljmp
add
or
mov
sbb
sub
es
xchg
shrb
dec
leave
out
shrb
in
xor
dec
jae
scas
iret
inc
push
shll
mov
dec
push
xor
xchg
push
out
push
stos
repz
dec
xor
adc
daa
cmp
jno
dec
aam
cmp
iret
outsb
imul
cmpsl
dec
lret
xchg
stos
in
fnsave
dec
enter
push
loope
rclb
push
test
loope
cmpsb
cmp
daa
jns
pop
jne
inc
push
leave
arpl
imul
insb
scas
movsl
into
lock
ja
sub
test
inc
je
xchg
jmp
movsb
and
dec
cmp
or
push
xchg
jb
adc
test
mov
cltd
mov
rcll
mov
js
sub
inc
iret
or
ficomps
lret
or
dec
lahf
insb
std
aas
aas
adc
push
into
adc
dec
adc
sub
or
add
add
dec
sbb
sbb
mov
ss
in
addr16
out
xchg
addb
out
cmpsb
fs
aas
ds
pop
cmp
mov
adcb
adc
adc
insl
mov
sbb
inc
cmp
stos
dec
shlb
test
xor
pusha
dec
inc
adc
pop
cwtl
or
mov
cmp
outsl
jg
and
scas
sub
dec
adc
stos
fidivs
pusha
loope
outsb
jle
nop
pushf
ja
sub
push
ret
push
adc
mov
imul
xlat
stos
adc
lahf
cmc
sub
std
sbb
daa
pop
xchg
inc
sub
in
lahf
jnp
addr16
mov
data16
sahf
xchg
loopne
mov
pusha
outsl
xchg
imul
in
sbb
cmc
cmp
das
hlt
dec
cmp
and
adc
pop
dec
or
insb
repz
scas
call
js
xchg
shll
or
xchg
es
pop
or
push
push
sub
sbbb
sub
mov
xor
mov
mov
pop
push
pushf
jl
dec
fimuls
mov
pop
ret
push
out
mov
icebp
imul
sub
push
ljmp
push
das
xchg
mov
or
imul
and
sub
mov
jg
scas
and
dec
js
sub
pop
cmc
out
xor
push
lret
cs
adc
ret
pop
xor
mov
and
add
sub
fwait
pop
pop
xor
hlt
mov
aad
jmp
pusha
or
pushw
imul
xchg
dec
mov
cmp
push
scas
enter
push
sbb
cwtl
ljmp
mov
in
int3
xor
adcl
push
out
gs
sub
pop
or
jmp
mov
testb
stos
out
pop
insb
adc
outsl
sub
push
xchg
cld
mov
sbb
sub
cmp
into
pop
lcall
outsl
mov
jne
dec
lds
shlb
mov
cltd
in
lods
aam
cmp
loop
fstpl
mov
aaa
hlt
mov
jno
cltd
cmp
mov
dec
push
adc
or
mov
mov
or
mov
or
or
arpl
fs
jno
adc
jno
fdivs
out
int3
mov
dec
or
push
add
push
inc
outsl
inc
xor
adc
jmp
mov
stos
xor
adc
test
or
popf
add
enter
cmp
pop
mov
imul
adcb
into
mov
shll
js
pop
cs
in
outsb
cmpl
dec
jb
pop
lock
add
les
es
dec
sti
mov
push
mov
addr16
push
push
xor
leave
lahf
popf
xor
sbb
xlat
fnstsw
decl
dec
and
xor
int3
pop
insl
pusha
sub
stos
stos
mov
adc
scas
incb
scas
xchg
insl
sahf
and
dec
and
cmc
xchg
stos
andb
or
nop
or
or
push
gs
sarb
movsb
fbstp
dec
jb
sub
push
xor
movsl
mov
mov
fnstenv
std
pusha
outsl
shlb
test
mov
or
cmp
lret
lret
out
mov
xor
pop
imul
xchg
or
cmp
cmp
mov
loop
enter
mov
jp
cmp
push
lret
in
mov
rcll
mov
jge
sahf
ror
into
xchg
mov
and
xor
sbb
mov
shll
inc
popa
out
pop
mov
sub
mov
sub
ds
pop
stos
fcmovu
inc
sbb
push
mov
mov
stos
xor
out
jo
jecxz
push
cmpb
push
jl
pop
jae
add
push
pop
push
das
test
aaa
sub
and
xor
pop
jle
push
out
sub
add
data16
jge
or
inc
cmp
aaa
mov
push
lock
add
movsb
cmpsb
fldcw
insb
icebp
sub
mov
or
push
add
out
adc
add
movb
out
sbb
pop
sub
add
pop
or
inc
andb
or
testb
mov
cmpl
lock
fldenv
aam
rorl
mov
inc
out
mov
push
sbb
enter
jbe
mov
inc
pop
addl
aad
add
shll
push
cld
sbb
outsb
call
xor
adc
inc
cltd
test
out
fdivr
inc
je
int3
push
mov
test
push
mov
aaa
mov
adc
and
dec
jnp
push
adc
lret
lods
mov
mov
lods
and
jge
mov
and
insl
lods
insl
test
mov
pop
xor
sbb
rcll
mov
push
ret
arpl
and
xchg
jb
lret
cmp
xchg
outsl
stos
or
cmpl
cli
jno
adc
mov
xor
adc
bound
stos
aam
or
mov
adc
std
xor
lock
inc
mov
popl
iret
push
push
add
mov
hlt
filds
sbb
and
int
movq
rep
subb
mov
ss
xor
out
test
rolb
loop
pop
mov
das
and
stos
cmpsl
cmp
sbb
cmp
test
aad
mov
les
jge
sub
inc
not
mov
sub
movsb
sbb
pop
sub
push
push
inc
push
mov
shrb
jmp
adc
sub
xor
adc
mov
xor
mov
stos
mov
xorl
or
push
popa
rcll
out
mov
push
call
aad
insb
scas
xor
and
in
leave
or
or
pop
cmc
mov
mov
push
xor
mov
xchg
movsl
in
add
mov
popa
push
mov
pop
add
pusha
mov
mov
cs
test
push
in
incl
hlt
hlt
popf
inc
filds
inc
jae
push
pusha
data16
jle
push
fmul
cmpsb
jle
outsl
notl
repz
cmpsb
or
les
jge
cmp
mov
adc
int3
cmp
pop
xchg
insb
fmull
sub
xchg
push
fmuls
xchg
out
xor
jnp
out
iret
push
jbe
pop
cs
xor
jle
jge
das
adc
jg
sub
fcmovne
not
enter
lods
mov
sbb
fwait
push
call
dec
mov
je
aas
pop
mov
jne
or
jne
add
sub
push
xchg
jb
push
jbe
popf
loope
dec
jnp
sub
jge
pusha
test
popf
arpl
daa
adc
nop
jg
ljmp
test
xor
inc
rorb
adc
and
cmp
fbstp
mov
lock
fldcw
cmp
cwtl
xchg
pop
fcomp
mov
into
add
push
ret
inc
xor
test
mov
lock
jp
xchg
cmpsl
add
dec
orl
add
js
lret
flds
sbb
shll
sbb
adc
mov
neg
stos
push
stc
bswap
mov
push
pop
repz
push
cwtl
sti
shrl
rorb
lcall
xchg
adc
adc
mov
sub
les
xor
pop
fcmovb
mov
in
mov
fwait
xchg
lea
cmp
ret
mov
pop
cmpsb
adc
les
mov
pop
inc
add
mov
sbb
mov
adc
and
mov
arpl
mov
mov
xchg
adc
arpl
xlat
xor
test
lret
mull
jmp
sub
dec
xor
aas
adc
mov
mov
mov
repz
ds
cmp
mov
mov
sbb
cmp
movl
dec
pop
cwtl
xchg
leave
mul
imul
pop
es
data16
xlat
or
adc
mov
sti
mov
pushf
adc
xor
movsl
mov
push
sub
imul
cmp
mov
xlat
xor
push
inc
pop
pop
cmpsb
adc
call
sbb
sub
push
dec
add
push
push
dec
lcall
mov
jmp
push
sbb
lods
cmp
in
push
or
sbb
movsb
cwtl
mov
xchg
and
es
jbe
loopne
stc
int3
nop
push
int
mov
push
arpl
arpl
cmp
roll
mov
rcrb
inc
cmp
xchg
rorb
push
mov
or
pop
push
mov
xor
push
mov
test
mov
push
pushf
mov
dec
addl
pop
xor
adc
roll
cld
push
or
mov
je
stos
xor
repz
bound
scas
xor
sub
add
adc
pop
cli
sahf
jo
lods
mov
sub
and
shll
cmp
dec
dec
rorb
test
sbb
inc
sbb
movsb
scas
pop
enter
iret
mov
xchg
pop
sbb
dec
loop
pushf
cwtl
xchg
lea
ljmp
xchg
adc
sbb
xchg
adc
das
inc
stc
popf
and
pop
enter
test
jns
add
sub
adc
movsl
mov
adc
cmp
scas
lods
sarl
sub
inc
cmp
add
sub
cwtl
jmp
out
push
xlat
sub
scas
dec
xchg
add
xchg
push
fnstsw
ss
test
mov
fcoml
lock
sbb
aad
loop
test
fcomp
or
pop
sbb
aas
mov
add
inc
jecxz
in
xchg
pop
and
fbstp
xchg
movsl
add
push
insb
aaa
movb
add
jg
mov
push
pop
mov
jge
pop
lcall
or
xchg
pop
jb
xchg
arpl
loop
idiv
scas
bound
jl
shlb
push
rsqrtps
hlt
add
int3
repz
cltd
push
mov
pushf
leavew
in
lods
mov
sub
out
or
sub
push
push
xor
repz
insl
outsb
lcall
fidivl
sub
jge
pop
or
negl
adc
aam
xchg
cmp
sub
sbb
negb
not
lods
sub
adc
pop
fs
inc
mov
adc
pop
mov
or
je
in
mov
movsl
addr16
sub
mov
mov
adc
add
hlt
outsl
pop
in
inc
shlb
xchg
js
mov
imul
out
xchg
loopne
shll
fldenv
mov
cmp
and
mov
test
lods
fisttpll
mov
or
rcrl
add
push
pop
adc
insl
movsb
ror
insb
push
lcall
divl
or
fucomip
repz
add
mov
gs
int3
icebp
outsl
push
xor
aas
pop
imul
inc
stos
xchg
loope
or
lods
mov
loope
iret
aas
mov
dec
xchg
dec
leave
lret
inc
and
in
mov
lret
pop
xor
stos
sbb
popf
out
js
inc
jns
xchg
xor
cwtl
imul
jecxz
dec
pop
cmc
adc
push
mov
adc
mov
xchg
int
rclb
inc
xor
outsl
addr16
pop
pop
mov
push
sbb
sti
subl
daa
rorb
pusha
ret
xor
imul
js
inc
dec
lret
cmp
mov
adc
cmpsb
and
push
loopne
enter
stc
xlat
movsb
shll
fs
pushf
jmp
cmpb
sbb
leave
fstl
test
mov
and
pop
lock
cwtl
insl
pop
int
fbstp
imul
repnz
test
daa
fwait
cmc
icebp
pop
jb
push
pop
dec
xor
imul
js
sbb
fistl
cli
push
lds
sahf
shr
fstp
out
leave
push
push
inc
jmp
push
or
mov
cmp
inc
je
scas
sub
dec
rcrb
lahf
push
sbb
jp
subl
xlat
in
movsb
out
movsb
out
nop
and
mov
es
mov
cmpsb
cmp
outsb
fsubl
ficoml
sub
stos
std
mov
push
mov
lahf
fyl2x
movsl
push
sbb
mov
jno
fwait
lea
and
mov
pop
sub
and
xchg
ficoml
mov
mov
test
sbb
icebp
mov
out
hlt
pop
in
inc
push
xchg
mov
std
add
ja
imul
pop
pop
aad
psrlq
fcmovnbe
sub
push
repnz
xor
nop
cs
xlat
or
out
movsl
aaa
insb
xchg
jge
pop
imul
leave
xor
lcall
bnd
fwait
ret
dec
push
orl
xchg
bound
mov
add
pop
mov
ljmp
js
adc
out
fstl
pop
notb
xor
outsl
negl
pop
lret
cld
mov
test
leave
mov
dec
xor
clc
dec
adcl
orl
into
jno
and
call
dec
pop
call
mov
call
or
lret
adc
int3
imull
mov
pop
leave
mov
and
cmpsl
arpl
enter
lods
cltd
cmp
sub
sbb
or
jb
jno
int3
xchg
sti
sub
clc
pop
mov
jnp
pop
mov
and
add
jp
leave
cmp
cmp
xor
mov
fnstsw
xor
fs
inc
add
test
enter
fldenv
push
call
fwait
in
ss
inc
adc
dec
ret
sbb
sub
jl
in
xor
lret
sbb
pop
sti
je
movsb
leave
pushf
jb
test
push
aad
cmp
push
xlat
int
sbb
sub
cmp
sub
mov
xor
jmp
dec
lcall
sbb
xchg
add
jmp
enter
pushf
jae
ja
imul
cmp
lret
outsb
out
push
es
inc
enter
dec
movsb
cmp
xor
jae
or
loop
testb
icebp
cld
push
arpl
js
scas
rcr
imul
push
adc
jle
scas
mov
push
push
sub
icebp
je
fs
movsl
push
sbb
push
fiaddl
add
adc
mov
outsb
pop
ljmp
add
push
dec
sbb
adc
mov
jecxz
out
jnp
outsl
repz
test
inc
inc
das
pusha
scas
mov
or
sub
mov
std
loope
lods
in
fidivl
cmpsl
out
xchg
aad
xor
pop
or
movsl
mov
and
inc
push
and
mov
sbbb
decl
jns
jo
ljmp
push
in
bound
mov
lods
mov
ret
mov
es
fadds
pop
xchg
dec
repnz
jo
cltd
mov
ljmp
icebp
js
sub
cmpsl
mov
mov
push
and
loop
ds
js
or
pop
daa
call
int3
add
data16
in
scas
jnp
adc
pop
add
dec
pop
push
push
adc
ljmp
ja
fwait
popa
jecxz
inc
push
cmpsb
mov
cmpsl
int3
sub
in
push
ds
or
leave
adc
ss
clc
mov
sbb
lret
or
sub
sub
xor
xor
add
pop
int3
addr16
add
lret
lret
mov
pop
and
jecxz
out
aam
pop
pop
rorb
mov
mov
xchg
pop
inc
cmpl
push
fildl
mov
das
dec
addl
insl
fildl
insb
dec
aad
adc
mov
sbb
lods
pop
ret
pop
pop
stc
jg
or
adc
mov
fistpll
adc
xor
test
scas
stos
mov
es
out
popf
pop
bound
add
call
iret
mov
mov
push
mov
sbb
les
ljmp
jecxz
loopne
inc
push
ficomps
pusha
aas
cmpsb
fdivs
aam
test
push
pusha
std
push
jnp
fisttpl
push
xor
dec
loope
pop
inc
xor
cmpsl
mov
mov
gs
push
and
mov
mov
pcmpgtd
and
je
insl
cli
cmpsl
lock
inc
and
jle
sbb
mov
mov
mov
pop
or
jae
xchg
mov
leave
in
pop
mov
movsl
push
int
pop
lret
pop
sbb
or
mov
rolb
inc
subb
into
dec
imulb
sub
imul
loopne
sub
inc
movsl
cmp
lods
sub
ljmp
incl
pushf
fbld
pushf
lds
in
sahf
push
outsb
shrl
mov
and
jmp
loop
mov
std
paddd
das
or
mov
lcall
mov
sub
sub
jecxz
adc
jg
add
incl
and
stos
fmuls
add
pop
mov
mov
jg
adc
arpl
repnz
sub
out
xchg
mov
push
sub
jb
dec
mov
add
test
dec
int3
je
mov
mov
mov
mov
test
in
jns
cld
sbb
push
loop
cmp
adcw
push
cltd
inc
loope
sbb
xchg
std
int
cs
pop
push
fldl
xchg
add
lds
add
in
call
mov
add
xor
in
loopne
lahf
movsl
outsl
repnz
fbld
push
std
js
lods
gs
pop
aad
fisubrl
jecxz
sbb
or
and
dec
idivb
jb
movsb
orl
mov
insb
mov
out
lcall
add
aad
shll
jl
mov
fisttpl
mov
sub
stc
and
pop
cli
pusha
sub
mov
outsl
cmp
inc
mov
shll
mul
sbb
sbb
mov
dec
mov
int3
mov
jp
pusha
subl
lock
pop
inc
cmpb
imul
scas
out
dec
int
and
outsl
pop
adc
sub
cltd
sbb
xor
and
xchg
xor
sbb
mov
loop
cmpsb
mov
jnp
xchg
cld
mov
xor
dec
add
sbb
dec
add
pusha
subl
push
or
in
out
ffree
sti
mov
pop
rorb
sub
test
je
dec
daa
mov
aam
push
mov
rcr
arpl
pop
cmpsl
xor
push
aam
xchg
cmp
or
in
dec
fcoms
inc
ds
mov
jb
add
andnps
fildll
push
pop
jb
mov
outsb
mov
push
mov
cmp
lahf
notl
aas
out
mov
iret
mov
or
pop
lock
test
jg
repnz
cmp
into
shlb
sub
hlt
or
cltd
mov
or
xchg
mov
fnstsw
bound
stos
jns
ljmp
inc
add
jbe
xchg
xor
mov
stos
test
hlt
insb
sarb
and
out
rclb
daa
push
xor
loopne
inc
test
daa
sbb
in
loopne
xchg
pop
call
xor
addr16
sub
ljmp
mov
pop
ss
loope
leave
scas
pop
scas
idivl
ret
and
cmp
xchg
fisttpl
xchg
mov
xchg
mov
xcrypt-cfb
cmpsl
jecxz
out
fwait
xchg
pop
lcall
popf
xor
xchg
lds
xchg
movsl
lock
fisubs
mov
fcmovu
jg
xlat
ljmp
xchg
jb
jecxz
xor
xchg
ds
dec
outsb
push
lahf
dec
adc
dec
add
pop
lret
fwait
insb
dec
inc
enter
pop
cli
xor
enter
shrb
and
inc
or
jno
out
or
mov
jnp
pop
xor
aam
pop
inc
jl
jnp
bnd
insb
dec
scas
xchg
mov
fcomps
and
sbb
loop
in
pop
or
pop
fnstsw
orb
sub
lahf
sub
jns
push
cmp
rcr
jae
shrb
xchg
data16
xor
sbb
movsl
popa
push
shrb
jae
cmp
inc
jecxz
mov
lcall
and
insl
div
or
dec
imul
inc
sbb
mov
cmp
xchg
dec
push
pop
push
cld
inc
scas
mov
ret
dec
test
test
repz
jno
fdivs
or
sub
pop
cli
fidivrl
pop
inc
cmp
fistpl
out
sti
stos
insl
jbe
lock
mov
mov
cltd
out
mov
xchg
jne
xor
dec
mov
stc
push
ljmp
lcall
prefetch
nop
lcall
loop
push
out
in
or
mov
pop
and
push
and
stos
bound
jge
xchg
loopne
add
imul
push
and
lcall
mov
xor
out
sub
bound
ret
push
insl
or
hlt
hlt
loope
xchg
adc
sbb
fistpll
ja
in
dec
push
insb
scas
stos
hlt
push
insl
aam
dec
xchg
mov
out
in
push
movsl
mov
cmp
mov
loope
fcmove
mov
in
mov
sbb
mov
jecxz
call
mov
in
mov
xchg
mov
sti
mov
sbb
and
loop
xor
jo
js
inc
aam
inc
loop
or
das
dec
mov
aaa
bound
inc
aad
shrb
out
push
rol
jno
xchg
movsb
std
cmp
bnd
add
xor
cmp
xchg
or
neg
out
push
sub
out
dec
mov
test
hlt
sub
stos
test
pushf
inc
push
xchg
loope
fimuls
aas
jg
push
jle
dec
pop
adc
inc
movsb
mov
not
rcrb
xor
cmpsb
outsl
cwtl
xchg
pop
lds
in
push
mov
ds
mov
imul
rcl
inc
sub
orl
cmpsl
and
or
xchg
inc
xchg
jb
or
xchg
inc
les
push
dec
ret
push
add
into
mov
test
jns
clc
and
jge
jg
mov
jae
cmp
xchg
pop
mov
sub
xor
test
shld
popf
pop
fmuls
xchg
push
adc
and
cmp
mov
jae
in
jmp
in
mov
ds
mov
sub
pusha
xchg
xor
mov
dec
lret
repz
mov
fistpl
jmp
aas
lcall
imul
push
inc
push
jl
pop
bswap
ss
mov
xchg
sti
inc
loop
jmp
mov
cs
jl
jo
imull
sub
mov
sbb
and
jnp
addl
mov
aas
popf
sbbl
push
loopne
mov
cmp
ret
sbb
xor
mov
lret
mov
dec
sub
and
inc
xor
sub
repz
lock
imul
gs
mov
jns
fisttps
mov
inc
xchg
in
lea
sahf
pop
pushf
movsl
inc
dec
int3
inc
push
add
cli
js
movsb
out
adc
outsl
mov
dec
or
outsl
lcall
cmp
and
lods
pop
loope
or
mov
jo
or
stos
pop
roll
inc
sub
mov
inc
mov
jmp
js,pn
pop
dec
or
xor
cmpsl
lods
fsubr
testb
sub
subb
pusha
int3
push
sub
mov
push
iret
inc
mov
pop
inc
subb
sahf
mov
mov
inc
rcrb
out
xchg
int
movsb
shll
into
stos
jmp
das
pop
mov
and
jns
mov
pop
dec
iret
and
jo
sti
inc
in
adc
nop
bound
in
mov
pop
push
jmp
push
enter
ljmp
adc
cmpsb
xchg
fdivrs
stos
je
mov
add
js
xlat
or
lds
mov
shl
and
sahf
and
outsl
push
sar
cmpb
out
fimuls
fcompl
xchg
cltd
pop
testb
xor
jne
dec
imul
mov
test
jno
sub
mov
outsb
sbb
jg
imul
mov
sub
xor
cmc
jecxz
fstpt
jne
cmp
jbe
inc
outsb
imul
pop
scas
push
fwait
add
aaa
xor
in
jbe
dec
or
dec
sahf
jmp
lods
pop
adc
sbb
inc
in
xlat
lds
mov
sub
dec
shll
or
inc
clc
sahf
sub
imul
xor
repnz
pop
stos
sub
pop
les
push
sahf
outsb
out
mov
dec
mov
jp
pop
xchg
inc
pop
cmp
mov
loope
fs
bound
outsl
mov
stos
inc
and
pop
stos
pop
outsb
shlb
fldenv
jg
out
es
jle
jge
xorb
or
inc
lods
mov
mov
cmp
test
add
imul
inc
ss
push
and
cmpsl
nop
push
inc
mov
repz
ss
push
pop
int
inc
pop
lock
in
push
fs
bound
scas
popf
clc
fwait
add
cmp
xor
mov
out
dec
das
movsb
xchg
mov
outsl
fiaddl
add
dec
jb
jg
neg
adc
cmp
adc
jp
jp
push
add
mov
dec
mov
loopne
ljmp
cltd
call
js
or
push
and
or
or
nop
lods
lcall
push
dec
hlt
and
add
ds
aam
jne
xor
pop
lahf
mov
mov
sbb
inc
outsl
mov
pop
inc
das
jg
add
inc
and
sbb
inc
fidivs
or
mov
mov
xor
je
fcomps
loopne
inc
sub
pusha
movsl
adc
xchg
cltd
adc
movsb
and
inc
sub
call
sbb
push
mov
jecxz
in
sbb
push
jnp
into
iret
mov
dec
lds
pop
mov
pop
das
sbb
insb
int
cmp
inc
dec
adc
int
xchg
icebp
adc
rclb
mov
push
andb
aas
movsb
mov
cmp
gs
mov
add
push
xchg
out
inc
outsb
sbb
test
enter
stos
call
mov
les
sbb
jbe
movsl
adc
mov
jo
fistpll
stos
and
gs
mov
test
cmp
jae
jmp
lds
jle
adcl
sub
dec
loop
fsubrs
xchg
mov
movsb
movsl
addr16
jmp
mov
push
push
cwtl
out
dec
push
push
hlt
rcrb
loopne
shr
mov
sbb
div
push
adc
push
mov
mov
or
xchg
fsubrs
xchg
repz
int
push
cmc
pop
fwait
ret
out
ret
stos
inc
and
cmp
xchg
shrb
lret
adc
mulps
inc
cli
add
jns
or
inc
dec
stc
andl
gs
fwait
xchg
dec
jle
adc
adc
pop
xchg
pop
js
jge
lods
popa
loope
inc
sbb
dec
mov
and
xor
add
mov
pop
jmp
lds
sbb
and
pop
xchg
mov
out
push
cld
mov
push
pop
push
repz
push
mov
lcall
dec
push
ss
sub
add
fwait
add
addr16
cmp
cmp
cld
sub
mov
mov
or
jno
or
inc
sti
iret
andb
rol
jae
and
je
cs
fadds
dec
pusha
testl
leave
pusha
or
out
stc
ret
ja
cmp
shl
shlb
stos
mov
pushf
nop
rcrl
sub
xchg
push
lods
sbbb
and
jecxz
dec
fisubrl
aas
mov
inc
mov
push
popf
repnz
out
iret
mov
int3
aas
cmc
dec
pop
outsl
arpl
fs
loope
sbb
cs
cmp
adc
push
or
mov
jmp
push
jbe
or
inc
push
cs
jo
cmp
push
xchg
xor
push
test
inc
in
and
pop
mov
filds
das
jae
insl
or
inc
pop
arpl
stos
insl
pusha
in
add
xor
fnstsw
daa
lahf
loope
dec
sbb
fbstp
pop
and
cmp
shlb
sub
xor
movsb
andb
js
xchg
mov
popa
cmp
imul
push
sar
add
scas
jecxz
mov
imul
mulb
lahf
gs
or
xor
loop
sub
sub
dec
mov
and
mov
out
cltd
and
repnz
jecxz
jecxz
rorb
pop
xchg
ja
add
lret
call
mov
jle
xor
hlt
xchg
pop
cmp
jb
inc
xor
and
pop
adc
adc
ret
push
mov
lret
and
leave
pushf
into
adc
mov
xor
push
mov
pushw
orb
call
jns
ss
jno
and
adc
outsl
push
cltd
push
lods
lock
ja
outsb
loope
hlt
inc
or
cs
je
cmc
call
fbstp
fwait
fwait
in
std
test
hlt
mov
lock
mov
lret
and
rolb
mov
push
clc
pop
sbb
jle
pop
leave
xor
js
cwtl
loope
in
jae
xchg
xchg
adc
jo
imull
pop
dec
fstps
nop
repz
jl
mov
dec
sbbl
repz
nop
pusha
bound
mov
adc
scas
and
sbb
jne
call
loopne
aaa
movsl
mov
dec
in
repnz
mov
xor
inc
mov
push
popa
test
mov
add
xchg
mov
int3
std
xor
mov
cmp
cmc
hlt
aaa
mov
insl
jmp
inc
mov
test
ljmp
inc
mov
push
shrl
imul
dec
out
jb
mov
dec
lahf
push
aam
test
jecxz
out
sub
mov
xlat
shl
test
or
xchg
icebp
icebp
out
nop
mov
mov
dec
jb
xor
repz
xlat
and
outsl
push
mov
xchg
shll
mov
out
inc
lcall
into
jmp
or
call
lock
mov
mov
mov
orb
fs
dec
lret
bound
or
popf
adc
stos
not
mov
call
jl
lods
xor
mov
adc
nop
out
enter
jb
mov
arpl
fildll
adc
fwait
jle
js
aam
cmp
pop
jno
jp
xchg
sub
jne
jp
push
adc
cmpsl
cmp
adc
jns
adc
imul
sahf
pop
insl
leave
sbb
push
in
cmp
mov
es
cwtl
jmp
dec
mov
movsb
push
dec
out
lods
cs
scas
bound
das
test
pop
das
repz
pop
fucomi
or
mov
orl
mov
fcmove
idivl
in
push
arpl
pop
xchg
ret
aas
dec
jp
out
jne
in
add
sbb
inc
syscall
out
or
cld
mov
fldcw
rcrb
sbb
add
pop
pop
imul
or
xchg
lahf
dec
add
insl
cmp
loopne
xor
cs
lea
mov
loope
mov
push
cltd
cmc
shr
sub
push
adc
scas
stc
adc
cmc
in
lret
fcmovb
call
cli
lds
sbb
lea
lods
aas
out
push
mov
dec
mov
jne
xchg
pop
jns
outsb
js
cli
out
mov
out
mov
pop
or
addr16
in
adc
imulb
mov
inc
insb
and
cmp
mov
in
or
je
push
idiv
pop
lods
xor
jae
inc
add
stc
push
xlat
sub
add
sbb
popa
sbb
and
jo
push
out
and
loopne
ds
mov
imul
xor
loope
loop
inc
xchg
lea
inc
adc
xor
loop
sub
add
mov
cmpsl
faddl
leave
sbb
pop
sub
pop
adc
aas
addr16
mov
jns
cmp
call
cltd
rclb
xor
mov
stos
sub
bound
nop
sti
pop
cmc
lods
or
pop
cmc
or
cltd
jge
and
cmp
mov
imul
faddl
testb
xor
fmull
aam
inc
xor
imul
cli
repz
cmpsl
test
cmp
outsb
rclb
pop
sti
lret
insl
addl
jb
fdivrp
or
shll
sbb
jge
psadbw
xor
int
mov
outsl
sbb
jae
sub
or
dec
mov
xchg
sub
adc
add
shrl
xor
mov
fisttpl
and
cmpsb
stos
aaa
xchg
lods
sub
daa
xchg
cld
pop
cmovno
mov
in
pop
and
dec
push
dec
xor
xchg
sub
ljmp
mov
mov
jo
ljmp
imul
hlt
cmpsb
lret
in
cmc
jl
inc
xorb
test
mov
jp
inc
scas
push
dec
out
pop
add
pop
pop
adc
adc
mov
xchg
and
push
dec
push
mov
outsl
xchg
jl
lea
ror
lret
push
push
lods
lods
jno
rep
dec
adc
and
clc
popf
out
popa
jno
insl
push
jge
pop
adc
cmp
lock
inc
or
fsub
shld
test
test
push
loop
cmp
les
jl
mov
xor
or
mov
push
jp
pusha
cmc
mov
mov
rcrb
push
pop
sbb
inc
pop
fcomps
jmp
ja
fdivr
fisubrs
int3
jne
pop
mov
push
push
imul
push
pop
and
dec
loope
mov
mov
mov
popa
mov
dec
mov
cld
lret
push
inc
andb
sub
dec
adc
hlt
add
cld
enter
mov
mov
mov
jmp
xchg
dec
jmp
pop
adc
and
jae
inc
into
aas
rolb
cld
ja
xor
rcrl
rsqrtps
mov
imul
sbb
push
jno
iret
cltd
arpl
xor
andl
insl
mov
or
out
pop
test
dec
pop
popa
imulb
arpl
das
in
aaa
roll
push
in
push
inc
repnz
shll
cmc
cwtl
lds
insb
mov
imul
jmp
lea
popf
aaa
iret
sbb
add
jbe
and
mov
mov
psraw
pop
mov
push
sub
loope
dec
add
xor
push
lods
xchg
imul
addb
ds
adc
stos
lods
cmc
negb
in
and
push
mov
jno
ljmp
jns
cwtl
mov
mov
adc
std
mov
mov
fstpt
xchg
jge
cmpsb
lods
lods
adc
push
add
and
lea
rolb
imul
dec
fcmovu
daa
ror
fs
ja
into
cmpsb
test
cmpb
jbe
fs
or
repnz
hlt
xchg
push
mov
testb
cmpsl
push
cli
mov
add
jp
data16
xchg
aad
dec
mov
push
jne
icebp
inc
mov
inc
pop
push
outsl
outsl
push
mov
mov
mov
stos
or
mov
lcall
inc
repz
cmp
in
hlt
popa
or
cltd
jp
leave
xor
inc
and
sub
inc
pushf
repnz
enter
push
imul
jmp
lahf
sub
shrl
lcall
in
jg
cli
and
stos
pop
imul
out
pop
lret
int
xor
imul
in
mov
insl
dec
cld
xor
mov
nop
cmovae
sbb
jne
in
pop
or
cmpsl
mov
xor
ror
and
outsl
mov
sub
lock
sub
mov
in
cmp
add
fs
mov
push
cli
or
cmp
cwtl
cwtl
push
mov
out
aam
outsl
xor
sub
out
jns
shrl
out
stc
scas
sbb
jnp
ret
shrl
outsl
ss
out
test
push
je
sub
xlat
xchg
pop
mov
xchg
push
sub
loopne
sub
sbb
xchg
insb
jp
jnp
lds
dec
test
movl
push
int3
in
and
sub
dec
xchg
movsl
lea
repz
inc
push
dec
push
inc
lock
push
test
leave
call
ds
roll
push
push
push
push
mov
addb
push
inc
addr16
in
push
fstpt
fwait
add
push
adc
cmc
adc
xlat
lret
jecxz
fldt
adc
ficoml
xchg
stc
cmpl
push
xorb
and
into
bound
xchg
dec
popf
ss
addr16
sti
fdivrp
lock
jbe
ja
add
stc
mov
inc
mov
in
xchg
dec
cmpsb
mov
cli
call
or
mov
int
mov
sub
mov
int
fwait
nop
add
adcb
ret
setbe
shlb
push
xchg
lea
outsl
mov
popa
push
sub
insb
ljmp
sub
push
nop
mov
mov
mov
popa
push
out
xor
sub
dec
mov
sti
mov
cli
sub
pcmpgtb
hlt
fnstenv
push
cwtl
xor
idivb
adc
inc
mov
mov
mov
dec
popa
fadd
clc
sub
cwtl
jbe
lret
sub
sahf
hlt
inc
in
adc
out
cmp
jg
addr16
jb
sbb
lahf
mov
mov
cwtl
add
xor
scas
adc
sarl
add
push
pop
inc
push
mov
dec
or
mov
in
cmc
jns
mov
stos
dec
fisubl
jne
inc
or
repz
jns
popa
add
cmpsb
popa
mov
cld
out
sbb
in
push
insb
insl
insb
xlat
cli
fstpt
jl
push
int3
cli
data16
push
dec
cmc
mov
sub
mov
push
jae
mov
pushf
or
scas
rcl
add
push
out
jne
out
icebp
dec
inc
push
sub
mov
pop
lock
dec
lahf
mov
out
add
cmp
ret
fs
jo
inc
std
push
mov
mov
insb
fnsave
mov
push
mov
dec
ret
pop
lods
cltd
aad
jae
aaa
repnz
cmp
mov
enter
mov
iret
scas
sarb
jp
sub
jne
stc
xor
fdivl
inc
rcrl
nop
aas
mov
test
mov
or
pushf
nop
and
out
adc
adc
add
lret
mov
les
das
bound
xchg
sbb
sbbb
loop
cld
bound
in
jae
in
jne
push
in
rolb
add
pop
ljmp
dec
mov
andb
add
ds
lds
ror
enter
push
jae
out
dec
adc
or
jmp
xchg
test
push
mov
add
iret
cltd
das
cmc
pop
enter
aaa
dec
dec
popa
add
and
loopne
jge,pn
out
pusha
lret
adc
adc
cltd
and
cld
and
and
mov
push
out
push
mov
mov
xor
lret
out
fbstp
push
in
dec
fisubrl
sbb
sbbb
in
mov
cmc
dec
push
fildll
jecxz
repz
cmpsl
xchg
pop
xchg
in
jp
out
cmc
push
popf
cmp
scas
dec
pop
arpl
mov
inc
jle
mov
lahf
lret
stc
jmp
jmp
sbb
aaa
adc
mov
cmpsl
test
push
add
lods
out
inc
mov
mov
jl
ljmp
push
inc
mov
test
add
stos
xchg
dec
xchg
es
or
pop
jecxz
mov
jne
add
lahf
pop
mov
cwtl
out
pop
add
out
jle
pushf
sti
xchg
in
dec
pop
mov
cmp
test
sub
sub
mov
nop
push
in
insb
addl
or
call
pop
sub
aam
lock
dec
fwait
jl
sub
pop
sar
lahf
jo
sub
adc
mov
jge
sbb
cmp
repnz
xorl
cmp
les
cmp
push
push
dec
xlat
fisttpl
es
and
fcoml
mov
and
xor
or
sbb
inc
insl
int3
cwtl
inc
jmp
mov
cs
shll
jb
xor
maskmovq
notl
mov
xchg
pop
cmp
add
push
outsb
icebp
test
gs
adc
jbe
inc
sti
mov
es
jnp
and
push
adc
rep
sbb
fists
mov
out
jmp
xor
inc
stos
pop
lea
jge
in
in
sbb
jge
or
lods
imul
add
xchg
test
pop
xchg
jl
decb
jl
call
mov
add
push
inc
mov
xor
sti
sarb
imul
jg
xchg
add
cmc
out
sahf
imul
clc
addr16
mov
or
xchg
jbe
insl
xor
sbb
daa
or
xchg
inc
xchg
lret
mov
push
cmp
in
nop
insb
cmp
mov
mov
test
mov
push
pop
fistpll
cltd
mov
insb
inc
roll
mov
sub
cs
dec
adcl
daa
data16
sbb
cmp
lret
xchg
xor
sub
fbstp
je
data16
xchg
push
dec
or
pushf
adc
bound
mov
xor
jle
loop
fidivrs
fbstp
aaa
and
fwait
mov
inc
data16
mov
mov
or
insl
call
lock
movsl
cmp
es
mov
lods
fistps
lea
and
pop
js
test
push
or
call
movsb
enter
inc
xor
xchg
imul
mov
int3
dec
or
cmp
cmp
inc
mov
mov
into
add
inc
mov
xor
icebp
pop
in
push
adc
leave
sti
test
movsb
stos
add
or
xor
inc
pop
ss
aam
sti
push
xor
pop
loop
mov
push
adc
and
jb
cmp
lcall
push
sbb
mov
lods
inc
push
test
je
push
cmp
and
je
push
sbb
std
scas
cwtl
ds
pop
lahf
test
add
jmp
loopne
mov
cmpsl
jb
lods
mov
push
sarl
stos
in
mov
jmp
sub
push
xchg
test
mov
inc
dec
test
clc
cmp
loopne
mov
inc
cmc
adc
jnp
movb
cmp
xchg
dec
lcall
mov
adc
sahf
cli
mov
or
and
ss
adcb
in
cmp
in
stos
mov
scas
xchg
mov
mov
mov
jae
pop
mov
mov
pop
out
dec
push
dec
xor
jno
aam
out
cmp
in
pusha
leave
int3
mov
in
or
jno
xchg
mov
and
inc
movsl
dec
pusha
inc
mov
jp
fistl
sbb
int
movsl
or
negb
leave
ss
inc
in
outsb
xor
jne
push
packssdw
push
jg
rorb
sbb
fistl
or
mov
mov
cmp
ds
sbb
push
out
jb
mov
dec
adc
push
inc
fidivl
das
in
add
mov
addr16
cmc
push
mov
js,pn
jno
adcb
iret
mov
xchg
inc
pop
subl
pop
jo
addb
and
mov
lock
jl
cmp
mov
inc
pop
xchg
mov
or
test
jmp
cwtl
loop
aam
add
mov
mov
incb
dec
dec
sub
sub
repnz
lods
sub
out
mov
icebp
and
imul
xlat
loope
dec
dec
jg
push
jge
je
jmp
jb
jae
not
adc
fnstcw
or
arpl
iret
xor
rcrl
fidivrs
data16
mov
and
xchg
push
sub
in
lret
aam
data16
aam
sbb
test
nop
push
or
arpl
mov
outsb
fldln2
data16
rcl
test
out
out
pusha
or
jo
mov
push
ljmp
nop
stc
movl
push
mov
test
pop
enter
inc
andl
insb
dec
add
cmp
loop
sbb
add
push
mov
dec
cs
out
sti
cli
mov
ss
push
nop
adc
or
sbb
out
mov
push
xchg
pop
push
add
add
or
leave
negl
arpl
in
mov
fs
add
ss
jb
mov
in
scas
or
lret
aas
mov
jmp
jmp
stos
gs
cmpsl
gs
jle
lea
sahf
mov
in
push
jle
sub
xchg
out
loopne
cmp
and
popf
imul
pop
int3
adc
in
lea
xor
jo
mov
cltd
in
adc
clc
push
loop
xor
jmp
mov
loopne
push
push
sarb
rclb
adc
jl
mov
inc
lcall
push
jge
xchg
sbb
pop
sub
mov
sti
lods
bound
dec
sub
dec
jno
lock
insl
outsl
fldcw
adc
inc
insb
mov
insl
sbb
bound
xor
cmp
rolb
dec
mov
jne
imul
fisubrs
xlat
nop
pushf
enter
dec
fwait
xor
add
sahf
pop
pop
push
stos
mov
out
stos
pop
push
sbb
mov
pop
fs
cmpsl
outsl
or
sub
jne
jmp
sub
test
mov
call
dec
or
pop
and
into
pop
mov
out
mov
por
mov
nop
dec
jo
jg
adc
outsl
jne
xor
sub
sbb
adc
jbe
pop
mov
xor
scas
xor
icebp
cmpsl
cmp
dec
mov
inc
test
jg,pn
sbb
xchg
les
mov
adc
lock
sbb
jecxz
nop
mov
gs
or
in
fldenv
pop
mov
xor
xchg
pop
fisubrs
loopne
sbb
mov
shrl
in
mov
and
lds
negl
pop
jo
jno
sub
notb
cmc
add
lods
popf
arpl
pop
arpl
adc
cmp
clc
adc
pop
xchg
or
sbb
mov
jbe
repnz
das
push
adc
dec
divb
jnp
xor
iret
inc
sub
in
sbb
lahf
xchg
push
cli
sbb
inc
mov
mov
cs
pop
or
insl
in
add
xchg
mov
in
iret
aam
jns
jge
and
sub
sub
loope
fucomi
int
dec
push
mov
and
fcoml
mov
adc
pop
or
mov
orb
cmc
sbb
in
movsb
movsw
dec
insl
adc
test
in
mov
cmpb
lcall
cmpsb
or
sti
dec
stc
sbb
push
scas
dec
cwtl
or
fs
jl
vpaddusb
rol
mov
and
in
in
sub
lds
cmp
aaa
packsswb
sti
mov
pop
lahf
push
gs
les
rorl
push
adc
jl
jnp
ret
adc
popf
pop
aad
imul
insb
enter
cmpsb
scas
mov
xor
and
xchg
jl
imul
sub
insl
std
negb
add
adc
push
rcrl
pop
xor
mov
inc
out
push
mov
cmpsl
popa
movsb
test
int3
mov
push
mov
cli
lret
mov
inc
pop
sbbb
rclb
cmpsb
mov
out
pushf
popa
js
mov
pop
test
mov
dec
mov
and
jp
out
add
sbb
stc
xchg
popf
hlt
dec
addr16
mov
push
sbb
aas
xchg
sub
cmp
and
aad
scas
inc
dec
mov
or
subl
daa
mov
jae
mov
fstp
test
pushf
pusha
adc
xor
movswl
nop
in
in
sub
mov
dec
sbb
lea
push
mov
addr16
dec
icebp
enter
jp
lcall
call
mov
call
xchg
mov
push
lret
xor
cli
and
ss
cli
and
addr16
mov
mov
pop
je
aad
pop
xchg
pop
dec
aas
bound
mov
icebp
inc
mov
aam
dec
fdivrl
aaa
jg
stos
stos
shl
ficoms
adc
mov
daa
mov
sub
push
and
ror
nop
pop
sub
cmpsb
daa
and
jl
add
mov
ljmp
add
add
cli
mov
aad
lret
lea
sub
jp
push
pop
adc
dec
sbb
sbb
int3
std
pushf
inc
add
mov
hlt
dec
shl
xchg
loop
lret
xor
sub
sub
fildll
outsb
or
insb
aas
xchg
xchg
jnp
test
jns
mov
or
xor
or
inc
cmp
in
and
fmuls
cmc
pop
cmp
mov
in
nop
xchg
sub
pop
arpl
inc
jo
into
outsb
std
pusha
loop
mov
mov
cld
or
jb
cmp
dec
out
das
sbb
and
mov
call
add
inc
and
iret
outsl
xchg
and
adc
sbb
sarl
aad
sbb
in
sub
ficomps
push
sti
push
adc
push
mul
dec
repnz
xchg
push
out
int
fisubrs
shll
cmpsb
fldt
vpmacsdql
cs
lock
adc
mov
gs
adc
jge
mov
repz
sub
jo
mov
dec
pop
add
movsl
jl
jo
outsl
inc
push
test
and
cli
out
int3
rol
insb
pop
cmp
sarl
fincstp
nop
add
push
pop
imull
js
mov
aad
pop
movl
or
cmc
fiaddl
xor
cwtl
xor
sub
mov
mov
inc
push
popa
fmull
pop
jg
push
movsl
test
or
popf
push
int
pop
inc
das
jns
das
cmp
lahf
mov
jecxz
mov
bound
sub
push
mov
aad
adc
cmp
push
dec
xor
outsl
scas
leave
inc
fs
lds
nop
in
adc
and
shlb
imul
ficompl
shr
rcll
xorl
mov
test
push
adc
jne
ljmp
adc
mov
xor
outsb
and
fcom
or
mov
mov
jo
gs
push
or
out
test
in
jae
or
ds
inc
cld
mov
aam
ds
mov
sub
rol
push
push
cmp
ret
incl
ds
mov
jmp
mov
dec
rorl
test
sbb
and
push
inc
scas
lret
sahf
mov
push
sub
cmp
test
rolb
fdivl
mov
insb
mov
xchg
inc
cmpsl
sub
jmp
dec
jmp
push
cltd
mov
mov
add
sub
mov
xor
xor
cmp
mov
and
mov
dec
iret
jecxz
dec
fcmove
lret
sahf
les
jg
xchg
mov
loop
loope
or
sbb
daa
int3
jne
test
leave
lahf
out
jle
push
jae
mov
lcall
push
sbb
in
leave
mov
push
cmc
je
push
push
fldcw
lds
mov
push
jns
mov
dec
lret
mov
fs
in
cmpsb
out
inc
jg
push
fbstp
cli
cmp
or
or
dec
cmpsl
add
sub
aaa
push
fwait
cmp
jns
push
dec
fsts
ret
adc
test
out
dec
cmpb
aam
mov
mov
out
adc
int3
adc
xchg
pop
mov
push
arpl
pop
jno
fs
test
dec
movsb
loope
sahf
repnz
jo
sahf
addr16
nop
adc
inc
in
iret
adc
pop
scas
push
push
popa
dec
mov
mov
adcb
pushl
inc
mov
xchg
pop
addl
ret
lahf
fsts
insl
rolb
test
xor
and
inc
dec
gs
mov
int3
mov
mov
fdivrp
mov
push
inc
aad
inc
adcb
scas
seta
or
scas
jp
jnp
push
pop
xchg
push
sbb
fs
pop
sub
xor
sbb
iret
adc
out
jae
adc
test
js
icebp
lock
xchg
push
lods
mov
mov
pop
test
push
outsb
sbbb
dec
push
leave
pop
fstl
cmp
add
fldl
cmpsb
int3
lcall
jl
popa
and
push
and
outsl
inc
testb
xchg
outsl
insl
les
dec
out
mov
mov
rcr
sub
xor
out
lods
out
ds
jo
test
mov
pop
inc
cmp
cmpl
fisttps
sub
lods
dec
and
or
out
and
cmpsb
ret
xchg
andl
jle
lds
lret
out
out
lea
popa
push
shll
sti
and
mov
je
sarb
xchg
sbb
fwait
jo
add
jp
icebp
outsb
lods
mov
fstpt
mov
adc
sbb
mov
addb
stos
xor
test
jecxz
jg
out
rcr
inc
pop
pop
popf
xor
xchg
push
stc
add
push
lock
mov
mov
sti
pop
cmpsb
sbb
and
mov
inc
pop
arpl
xchg
insl
mov
push
pop
cmp
mov
or
cmp
stc
pop
pop
push
cmp
clc
mov
out
sbb
jne
push
push
jne
fs
inc
push
in
dec
fsubp
or
adc
aam
fadds
fcoml
mov
jmp
push
xchg
int
rcll
dec
outsl
adc
add
mov
pop
push
das
mov
xor
jl
dec
out
cwtl
mov
decb
add
dec
aad
add
push
mov
push
dec
leave
popf
out
stos
sub
popf
ss
fstp
out
xchg
rol
inc
filds
xchg
testb
push
cmp
cli
loopne
inc
rol
cmpsb
inc
rclb
mov
sahf
popf
orb
out
sbb
scas
or
aad
mov
cwtl
cltd
pop
inc
mov
jmp
jmp
jp
cmp
cli
sbb
push
mov
mov
icebp
push
cmp
les
push
scas
bound
push
fsubr
adc
pop
jl
xor
sub
mov
loopne
and
data16
inc
sbb
pop
jmp
testl
aad
ljmp
int
icebp
cmpsb
mov
test
movsl
push
sahf
xor
mov
jno
lea
mov
xchg
adc
out
lods
jecxz
gs
stos
in
test
xor
mov
iret
or
adc
or
mov
mov
sbb
dec
lahf
sbb
and
and
insl
loopne
faddl
mov
sub
decl
jge
xchg
jnp
pop
mov
mov
inc
or
mov
pop
sub
xor
jmp
stos
jg
jnp
mov
insl
int3
push
push
fs
out
mov
lods
mov
adc
fmul
mov
fisubl
jl
mov
test
xchg
jmp
cli
rcl
adc
xchg
mov
rcll
xor
sub
inc
data16
outsl
or
and
jmp
decb
movsb
fists
xor
pop
adc
cltd
add
cld
pushf
cld
mov
andb
jl
rclb
mov
cli
outsb
aam
mov
addb
sbb
lahf
shlb
dec
mov
lret
je
push
jmp
imul
aaa
mov
in
and
mov
aam
aam
je
ljmp
fcmovnu
mov
ss
sbb
cmp
dec
jmp
lds
xchg
dec
adc
aam
lea
repnz
call
dec
popf
shlb
xchg
fndisi(8087
xchg
xchg
loop
xchg
leave
push
daa
mov
add
in
test
pop
inc
push
js
out
ss
inc
fnsave
jecxz
lcall
or
mov
cmpsb
lret
test
mov
sbb
fnstcw
jecxz
and
jns
xlat
adc
test
cwtl
pop
pushf
out
enter
out
mov
inc
outsb
repz
lret
pop
pop
push
cmpsb
pop
adc
je
and
seto
push
dec
out
cmp
sub
add
jns
jmp
es
fcomi
or
mov
push
pop
cltd
sub
sbb
inc
xor
movsb
pushw
stos
xchg
pop
push
push
mov
xlat
repnz
out
loope
cmp
inc
ficomps
fwait
mov
push
aaa
cltd
dec
pop
imul
mov
out
out
inc
jns
push
mov
xabort
push
ljmp
sub
mov
mov
push
xor
mov
sub
scas
mov
incb
mov
jns
repz
jb
sub
adc
inc
sub
jg
mov
mov
inc
mov
fldt
or
gs
mov
mov
or
sub
adc
cmp
aas
mov
dec
mov
cltd
dec
sbb
mov
jl
pusha
aam
and
gs
aad
cmp
icebp
filds
ljmp
dec
sbb
das
fs
sbb
cmp
mov
cli
fwait
mov
aam
popa
jno
vrcpss
popf
push
ja
out
push
add
cmp
sub
js
xchg
jne
mov
popa
jmp
pushf
pop
dec
mov
jo
ret
jns
mov
dec
mov
pop
lret
into
ja
cmpsb
add
ljmp
push
std
xor
mov
lds
mov
cmpsb
enter
sub
popl
bound
ds
shlb
mov
inc
jnp
jge
add
leave
jns
loop
decl
dec
dec
rcll
aas
or
dec
dec
jno
std
dec
rcll
outsl
enter
es
dec
outsl
jo
sub
icebp
nop
pand
adc
add
jb
scas
loope
mov
pop
cmp
popf
bound
jmp
rorl
push
mov
sbb
pop
clc
xchg
mov
lods
jne
cwtl
mov
imul
pop
addb
inc
push
inc
js
push
or
cmp
fs
cmp
jns
jo
aad
push
adc
dec
pop
and
push
pop
add
insl
sahf
sub
mov
iret
or
or
test
shrl
dec
lea
addr16
arpl
pop
lcall
push
fsubrs
fsubs
lret
in
mov
pop
sub
scas
cmp
cmp
and
xor
cmp
imul
xchg
jb
out
and
mov
mov
push
jg
mov
xchg
fisubs
jg
jb
cmp
pop
imul
adc
int
xor
out
adc
lahf
andl
les
cs
xor
xchg
add
sti
adc
pop
xchg
icebp
ret
push
ret
push
fmuls
arpl
pop
cmp
pop
into
adc
xchg
xor
push
push
or
std
add
mov
cmp
jl
inc
adc
icebp
jl
ret
call
mov
sub
or
jns
dec
aaa
cmp
aad
jg
sbb
outsb
and
rclb
cmpsb
add
cmpsb
dec
aad
pop
stos
or
std
mov
cmp
jg
fs
jnp
int3
cmpsb
in
outsb
sti
incb
and
fcmovne
imul
in
xchg
pop
mov
insb
mov
pop
inc
decb
fmull
inc
sti
inc
and
adc
inc
xor
and
push
jnp
je
sub
xor
inc
int
sbb
xlat
xchg
mov
adcl
dec
hlt
loope
jnp
mov
pop
pop
in
int
sbbb
ret
or
aas
dec
sti
fnsave
or
mov
daa
out
cltd
es
mov
mov
insb
lret
adc
faddl
push
adc
jno
mov
stc
out
xchg
std
in
nopl
mov
dec
mov
add
mov
in
stc
cmpsl
pop
pop
jg
cmpsl
stos
mov
imulb
dec
push
and
dec
adc
stos
nop
jo
lret
cmp
jle
sbbl
push
mov
je
jp
jmp
testb
dec
pusha
scas
dec
nop
xor
in
bound
mov
mov
mov
mov
pop
cmp
sub
sar
and
inc
adc
or
push
cmp
sbb
pop
es
int3
sub
sbb
out
cmp
cmp
jno
xchg
cmp
in
loop
fmul
xchg
fimull
cmc
add
xor
fisubl
xchg
sub
inc
and
test
jne
or
das
hlt
xlat
cmc
cmpsl
inc
lea
pop
pop
dec
mov
shll
pop
sub
sub
dec
outsb
lods
loope
shlb
sbb
ja
and
repz
xor
dec
push
pop
cs
or
cli
ljmp
iret
shr
out
pop
inc
loopne
dec
sti
sbbb
inc
test
cmp
loop
jbe
inc
and
add
mov
mov
cmp
cmp
lahf
mov
push
lret
push
inc
or
repnz
es
outsb
mov
iret
clc
mov
addb
addr16
cmpsb
shrb
loopne
xchg
or
decl
js
ret
xchg
stos
mov
dec
add
pop
sbb
push
push
add
mov
repnz
jl
testb
dec
aad
xchg
mov
cwtl
mov
or
sub
bound
cmp
je
pop
push
jno
adc
mov
xor
mov
cmp
cmp
jecxz
inc
lea
out
pop
fcoms
xor
fwait
mov
ljmp
mov
stc
repz
jno
mov
or
sbb
dec
mov
into
lods
lds
inc
xchg
mov
popf
lds
les
sti
sbbl
test
mov
mov
das
or
fsubrs
and
mov
mov
clc
xchg
lret
xorl
cmp
in
in
cmp
mov
cltd
xchg
pop
jl
cwtl
in
jb
pushf
mov
dec
and
push
xor
sti
loop
xchg
inc
sbb
cmp
add
in
mov
mov
xchg
pop
ret
sub
leave
out
outsb
int3
popw
ret
out
jmp
jbe
repz
lock
push
inc
and
pop
jbe
clc
jns
inc
sub
pop
fmull
mov
jne
scas
jle
pop
xor
mov
dec
add
stc
fstl
inc
test
pop
call
mov
sub
mov
xlat
sahf
mov
mov
and
sub
sbb
xor
test
out
notl
filds
add
push
mov
adc
cmp
add
clc
mov
aam
jae
push
xor
lds
sbb
mov
insb
lahf
jle
call
popf
push
push
push
subb
es
jne
push
xor
adc
dec
jo
pop
xchg
insl
adc
popa
insb
aam
sbb
push
mov
or
push
jno
leave
or
push
sti
test
cs
mov
ja
mov
xor
adc
ss
dec
call
cmp
add
int3
enter
push
aam
in
call
jmp
mov
mov
in
dec
add
xchg
out
jae
mov
cld
mov
addr16
pop
sub
shrl
test
rolb
adc
or
js
mov
xchg
add
cld
mov
inc
or
inc
sbb
xlat
out
mov
xchg
or
or
dec
pop
mov
mov
shrb
int
jl
cltd
pop
add
insb
fbld
mov
add
dec
jge
lret
pop
add
pmuludq
js
lret
fistpl
or
jle
mov
ss
mov
movsb
stos
testb
xchg
int
fildl
cli
pop
std
mov
stos
in
jle
shll
cmp
jbe
test
jns
mov
inc
mov
int3
sbb
shlb
sahf
dec
sbb
push
test
jl
inc
aaa
xor
mov
push
test
jl
xor
stc
push
adc
mov
inc
sbb
sub
es
and
mov
mov
scas
lret
int3
sar
flds
xor
lsl
adc
or
ret
out
mov
call
and
sahf
aad
mov
bound
inc
sbb
out
ds
xlat
and
push
fwait
rcl
sub
push
dec
pop
cld
bound
aad
ud0
pop
stos
cltd
xchg
test
insl
mov
and
sbbl
imul
xor
add
std
or
fsqrt
jmp
inc
testl
cmp
jb
push
jge
fs
les
add
cwtl
fprem1
imul
js
imul
xlat
into
mov
sbb
sub
rcll
push
push
fistpll
bound
dec
mov
pop
pop
adc
pop
mov
mov
sti
push
push
or
sbb
push
add
add
adc
stc
hlt
add
ja
jmp
sub
cmpsl
iret
roll
in
xor
or
sub
cmp
push
shlb
lock
bound
mov
mov
lods
inc
aam
lcall
push
sub
xchg
xor
add
shll
adc
and
add
jp
dec
gs
sarb
jmp
out
mov
out
xlat
bnd
bound
in
popa
jl
mov
dec
testb
xchg
outsl
lea
pop
int3
fld
out
pushf
mov
jae
mov
jl
ljmp
aam
xchg
xor
int3
xchg
xor
xchg
lahf
aaa
rcl
xchg
jns
jg
pop
and
mov
test
inc
mov
dec
pop
andl
pop
mov
test
lcall
sub
stos
les
test
mov
jnp
scas
pop
fmull
std
popa
dec
or
mov
or
lods
loope
movsl
push
lods
add
imul
add
mov
adc
xchg
es
push
sub
jb
leave
dec
jno
jnp
mov
pushf
push
add
out
movsb
bound
sar
pop
cli
inc
adc
push
pop
test
sub
fisubs
sahf
imul
gs
pop
or
dec
adc
movsb
xchg
xchg
in
arpl
into
dec
fidivrl
xor
hlt
fwait
or
add
out
sub
xor
jg
sbb
inc
addr16
pop
cmp
jmp
mov
and
js
sub
ds
fdivrs
stos
incb
xchg
leave
xchg
mov
dec
stos
shr
inc
scas
mov
push
daa
add
shl
pusha
inc
into
std
js
and
enter
sarl
mov
test
movsb
out
mov
aad
fiadds
pop
icebp
adc
cmp
pop
lds
mov
mov
jle
inc
push
sbb
loope
mulb
push
fcomip
push
ret
sub
pop
jne
push
ds
mov
iret
xor
push
xlat
xchg
insb
adc
dec
jne
mov
mov
lcall
ja,pt
int3
mov
xor
js
popa
and
mov
stos
pop
hlt
cltd
rcrl
popl
lods
push
inc
int3
mov
cld
hlt
enter
popa
jns
xchg
ficoms
arpl
filds
in
xlat
mov
scas
test
repnz
ss
cmp
sbb
sub
xchg
fwait
ss
shll
cld
divb
out
or
sbb
cmp
mov
jg
call
xor
fimuls
aas
lea
stos
imul
mov
add
jns
cli
cwtl
mov
cltd
mov
in
cmp
frstpm(287
add
loope
clc
scas
andb
mov
lds
mov
aas
inc
inc
xchg
in
mov
jp
dec
push
adcl
rorl
andl
repz
js
icebp
and
push
leave
lods
pop
xchg
push
dec
jmp
push
fs
pop
dec
add
out
xorl
sbb
adc
pop
cmp
inc
sub
pop
pop
adc
cmp
lods
in
frstor
cwtl
pop
cs
inc
js
jbe
and
jnp
rorl
cmp
test
enter
leave
lcall
or
xchg
and
leave
cmpsb
mov
cmpl
stc
xchg
cmp
jne
aam
icebp
cmp
int3
popa
mov
nop
cmp
pop
cmp
and
pusha
lcall
aaa
stos
mov
sbb
sbb
push
test
fiaddl
sbb
add
jae
data16
dec
sbb
repz
icebp
adcb
pop
fs
rclb
fstpl
push
adc
mov
sbb
dec
inc
push
inc
mov
cs
xchg
bound
pop
pop
xchg
cs
adc
ret
inc
cmp
or
les
sbb
out
dec
sbb
jl
pop
pop
dec
jmp
push
adc
ret
mov
ret
inc
out
sbb
jnp
pop
mov
mov
cmc
and
loop
mov
xchg
mov
cmp
or
cmc
lret
pushf
xchg
mov
clc
fnstenv
fisubs
daa
pop
enter
pop
push
xchg
in
dec
mov
fucomi
lods
in
test
inc
cwtl
iret
pop
adc
push
ficoml
xchg
xchg
inc
movsl
mov
or
scas
ret
test
out
xchg
nop
mov
mov
js
addr16
in
cld
ss
push
lds
mov
cmp
jmp
xor
test
dec
sub
js
push
in
fidivs
sbb
xorl
dec
add
inc
mov
jbe
iret
clc
inc
rol
test
enter
push
cmpsl
std
mov
js
sub
or
loope
mov
stc
and
lea
sbb
movsb
lcall
lret
push
int3
sbb
popf
pop
dec
cli
je
cmp
mov
jb
and
fcmovb
or
add
pop
or
push
cmp
js
or
iret
jmp
pusha
push
je
mov
arpl
add
idivb
jno
fisubrl
pop
int3
addr16
stos
lock
cmc
add
dec
or
push
push
mov
mov
lret
enter
and
lahf
jbe
lcall
adc
call
sarl
sub
cmc
push
lods
ds
add
push
mov
mov
dec
andl
xchg
dec
cmp
popa
test
repnz
add
call
pop
je
mov
add
lret
pop
call
addr16
lds
mov
loope
xlat
ljmp
call
in
jle
out
not
inc
daa
mov
rcl
mov
dec
xor
xchg
mov
push
inc
cwtl
cmp
xor
leave
jp
jl
arpl
sub
mov
mov
dec
aaa
enter
xchg
xlat
pushf
adc
imul
call
insl
xlat
jb
lods
movsb
inc
push
imul
fimuls
out
mov
mov
sub
or
loop
push
sub
test
mov
push
dec
mov
loopne
shlb
mov
scas
mov
lds
rcrb
add
push
sti
add
mov
ss
push
ret
in
mov
xchg
or
and
bound
imul
ja
or
mov
pop
ja
bound
aad
jmp
jle
clc
shrb
xchg
push
push
jns
stos
pop
push
dec
adcb
push
cmpl
mov
push
dec
iret
nop
adc
addb
push
idivl
imul
sbb
popa
fwait
mov
test
or
adc
pop
addl
lods
mov
push
jp
pusha
fstpt
dec
scas
cltd
add
mov
in
shll
in
jp
pushf
xor
dec
pop
mov
daa
sub
stos
jno
aad
jp
push
xor
dec
dec
out
out
das
push
mov
mov
jmp
jge
subb
mov
nop
mov
les
or
ret
or
cmp
in
test
out
fs
imul
movlps
mov
mov
xor
scas
dec
xchg
insb
xor
jle
icebp
scas
ret
xchg
lock
sbb
mov
mov
dec
jmp
xlat
out
adc
sub
out
ljmp
faddl
mov
adc
ds
sub
lcall
mov
inc
mov
mov
mov
lds
outsl
iret
sbb
in
xlat
xchg
jecxz
ficompl
sbb
lods
andl
cmc
cmpsb
pop
cmp
add
xlat
loope
clc
std
sbb
cmp
jge
push
or
imul
adc
and
dec
pushf
outsb
testb
push
mov
enter
out
jecxz
jns
pop
rolb
mov
icebp
scas
xchg
push
push
je
push
push
je
mov
loop
sbb
popa
notb
xor
adc
inc
add
mov
dec
movsb
and
adc
mov
or
jge
loopne
or
bound
sub
pop
es
rep
out
lea
sbbl
inc
add
mov
lret
faddp
dec
repnz
cs
aam
into
push
inc
not
icebp
repz
or
fstl
or
xchg
push
mov
push
lcall
outsl
xchg
mov
xor
jae
flds
jbe
pop
into
add
or
sbb
test
mov
shll
adcl
int3
movsl
pop
sbb
inc
sub
lret
jmp
pop
sub
scas
sti
mov
mov
movsl
and
pop
loope
fldl
leave
fidivs
jecxz
aam
mov
sbb
iret
fstps
cmp
ficomps
xor
out
dec
daa
dec
xchg
into
testl
sbbl
mov
sub
mov
jne
sti
or
lods
pop
pop
xchg
sbb
or
stos
int
loop
add
or
out
sub
adc
test
xchg
cmp
mov
push
sahf
pushf
adc
push
mov
lds
sti
and
and
or
arpl
repz
cmc
mov
push
js
lock
jg
movsb
inc
sbb
inc
xchg
cli
fdivs
jne
shrb
pop
mov
and
out
jo
clc
fwait
jl
pop
xor
addr16
repz
xor
lds
dec
or
in
clc
mov
xor
xor
cmp
dec
popa
icebp
addr16
scas
mov
pop
in
out
pop
or
sub
sbb
sbb
subl
out
or
mov
jge
rorb
pushf
dec
outsb
mov
push
xlat
jge
test
or
inc
mov
dec
mov
jge
mov
adc
popf
sub
fs
mov
xor
rorb
add
mov
mov
icebp
inc
aaa
je
dec
mov
sbb
xor
mov
outsl
jle
xchg
lods
and
or
jbe
cs
loopne
pushf
xchg
inc
sbb
sti
rcrb
data16
in
ss
push
lods
lret
lret
imul
xor
sbb
push
xchg
inc
cs
pop
std
jl
xchg
addl
rorb
aas
popf
push
pop
sub
jb
jb
mov
lds
ss
sbb
adc
xchg
mov
dec
push
jmp
aaa
repz
loop
leave
and
push
aad
js
push
iret
orl
lret
xor
outsl
pop
das
xchg
hlt
js
lcall
fdiv
dec
xor
sbb
lcall
sbbb
lret
cmp
xchg
jo
adc
inc
in
hlt
pusha
sub
or
jmp
sub
jecxz
popf
std
lret
shr
daa
aam
in
jmp
test
sub
mov
mov
sub
and
lcall
loope
dec
inc
repz
xchg
jns
xchg
mov
hlt
in
imul
xchg
lret
cs
lcall
sub
dec
add
loopne
dec
mov
and
daa
mov
mov
inc
cmp
and
addr16
stos
inc
jns
lds
xchg
popa
jecxz
and
out
push
in
insb
std
shr
pop
pop
sbb
mov
adc
mov
in
sbb
pop
cmp
push
popa
jnp
jno
or
jo
fstl
insb
cwtl
xchg
pop
sub
cltd
mov
inc
cmp
sbb
inc
mov
mov
mov
scas
into
stos
iret
pop
mov
inc
cmpsl
sbb
sbb
mov
negb
lock
or
cltd
rcll
sub
fwait
enter
loop
sbb
nop
shll
loop
insl
lods
fcoml
pusha
pop
sub
addr16
cmp
loope
iret
ljmp
mov
xor
test
mov
cltd
out
es
mov
out
xchg
inc
push
add
or
xchg
cmpb
mov
push
cmp
int
xor
sub
aad
push
jno
and
sub
pop
in
mov
pop
fwait
pushf
into
inc
iret
out
jle
add
dec
fdivr
nop
cmp
dec
xchg
call
adc
aas
xchg
out
jno
out
stc
push
push
push
pop
cmp
jp
idivl
loopne
mov
imull
push
jmp
push
adc
pop
mov
rorb
stc
pop
mov
fs
jl
inc
aad
out
xlat
inc
bound
addl
jge
cmpsl
adc
and
push
orl
arpl
repnz
bound
xor
cmp
and
xchg
xchg
sbb
inc
test
out
adc
ret
or
cmc
and
push
add
mov
out
jp
mov
scas
inc
rorb
daa
pop
scas
scas
mov
mov
lods
push
sub
int
adc
pop
push
shll
mov
push
xorl
enter
in
jnp
inc
jge
lcall
sahf
cld
test
insl
mov
pop
lcall
stos
xor
fnstsw
movl
ret
adc
les
push
ror
sahf
pop
push
scas
nop
into
rolb
sbb
call
lret
je
pushf
lret
mov
out
sub
mov
or
push
test
jbe
push
mov
icebp
add
cmp
and
mov
jne
fsubl
adc
loop
fsubp
jle
mov
lcall
sub
adc
pop
mov
mov
rcr
add
sbb
inc
jbe
sbb
out
xchg
dec
mov
jge
xchg
jne
xchg
cmp
adc
fldcw
movsl
mov
stc
rcrb
outsb
pusha
push
xor
jae,pt
pop
mov
adc
push
insb
fldenv
inc
divb
in
push
cmp
test
or
mov
das
sti
pop
call
xchg
out
mov
fnstcw
fldl
hlt
sub
mov
mov
mov
xchg
push
mov
xchg
mov
sti
cmp
hlt
mov
pop
cmp
pop
mov
sarb
sti
xorl
aad
push
rorl
inc
add
out
in
mov
outsl
sbb
or
arpl
cmpsl
data16
test
div
pop
and
dec
pop
pop
pop
cmp
stc
insb
cs
xor
or
push
sahf
and
inc
dec
movsb
loop
xchg
bound
mov
push
mov
mov
shll
lcall
loope
adc
add
out
push
adc
mov
aaa
aad
in
dec
mov
fwait
and
push
jl
inc
notb
mov
addb
shrb
fdivr
mov
mov
dec
cmp
loope
insb
cmc
mov
iret
jo
inc
push
std
dec
daa
enter
jp
push
sbb
sbb
loope
jl
inc
xor
mov
lea
pushf
adc
fildl
push
iret
icebp
adc
out
push
mov
push
data16
mov
sbbl
xor
jge
mov
jmp
popa
sub
mov
mov
mov
les
adc
add
pop
push
adcl
popf
mov
repz
xchg
sbb
push
movsl
repnz
xchg
inc
and
fistl
push
dec
jae
and
xchg
aaa
push
addr16
jl
mov
jnp
cltd
shlb
pop
ss
rorb
mov
fisttps
adc
inc
xor
xor
mov
unpcklps
les
pop
sub
pop
mov
and
jp
lcall
cmp
xchg
pop
inc
shlb
outsb
dec
add
psrad
testb
dec
add
jmp
lret
fiaddl
inc
ljmp
inc
out
adcl
pop
das
inc
gs
mov
lret
jp
rcrl
cmp
mov
sarb
mov
hlt
lret
cmp
xor
adc
push
xchg
ret
or
in
pop
adc
mov
push
lods
ds
scas
insb
decl
out
add
icebp
xor
mov
cld
repz
in
fmuls
in
xchg
dec
inc
push
pop
loope
cld
mov
push
pop
inc
cmp
subl
cmp
pop
push
cmp
notb
or
lock
cmp
mov
cmpsb
rep
es
mov
pop
gs
mov
lahf
sub
shll
fistps
rorl
mov
mov
mov
inc
dec
popa
push
add
jl
sbb
mov
lock
lahf
add
clc
pop
pop
add
test
cli
pop
call
outsl
inc
mov
cmpsb
stos
cmp
sub
inc
mov
fsts
sbb
fidivl
sub
mov
fsubrl
mov
lods
cmp
push
adc
mov
sbb
xorl
dec
mov
dec
cmp
stos
mov
add
jle
pop
fiaddl
inc
fs
incl
inc
rol
jb,pn
out
dec
inc
xchg
jbe
icebp
jl
xchg
mov
lcall
xor
sub
pop
xor
cmpsb
xor
stos
shrb
dec
mov
jb
sub
xchg
mov
fadds
push
xchg
adc
xchg
lods
cmp
outsl
out
sarl
mov
mov
jns
enter
pop
mov
xchg
xlat
cmp
sub
mov
ljmp
adc
sub
imul
adc
das
cmp
cmp
fnsave
adc
push
jae
jno
sbb
mov
je
in
out
xor
ret
and
inc
shlb
nop
les
daa
ss
push
mov
imul
jg
push
xchg
pop
popf
ljmp
lds
sarl
je
push
dec
out
js
icebp
fs
push
adc
roll
xor
push
fsubrs
insb
rcl
int3
lods
repz
sbb
push
jae
leave
add
push
xor
test
out
mov
shlb
jmp
ss
lret
push
inc
lahf
dec
je
xor
adc
sbb
mov
push
push
imul
clc
or
out
lahf
popf
and
enter
inc
in
bound
andl
adc
arpl
ja
cmpsl
fstl
dec
cwtl
mov
cmpsb
aad
fs
mul
pop
sbb
pop
or
lock
or
cli
adc
inc
sbb
mov
mov
adc
daa
shl
cmovae
std
outsb
mov
subb
cmp
pop
add
push
mov
push
fnstcw
xchg
add
movsb
xchg
xchg
arpl
repz
loope
test
int3
or
pushf
mov
pop
stos
imulb
into
or
js
imul
push
test
cli
pop
cmp
fwait
inc
sub
loopne
int
cmp
in
lcall
gs
xchg
mov
push
cmp
data16
addl
xchg
nop
cltd
pop
mov
mov
sub
jbe
mov
sti
xchg
cmp
dec
pop
mov
popa
ds
gs
add
iret
fld
mov
ja
push
jle
out
pop
adc
xor
cwtl
out
pop
leave
stos
in
push
andb
dec
cmp
call
pop
jmp
imul
std
cld
push
pop
mov
sahf
jnp
jp
jae
popa
xchg
mov
out
cmp
in
hlt
xor
addr16
data16
in
into
lahf
mov
test
jnp
movsb
iret
jo
stos
or
call
les
mov
hlt
pop
stos
sbb
xchg
jmp
jp
enter
xor
pop
mov
sbb
mov
dec
jle
jl
int3
outsl
mov
sub
shll
cld
js
enter
fildl
push
pop
jle
ljmp
mov
mov
mov
xchg
scas
insb
pop
xor
and
adc
pop
mov
push
push
dec
xor
adc
cmc
in
dec
pop
or
pop
lahf
mov
movsb
movsl
cli
and
mov
cmp
push
int3
cld
call
inc
push
iret
jecxz
test
mov
fildl
or
or
test
mov
imul
mov
movsb
or
in
faddp
push
lds
push
xchg
jge
test
insb
and
fwait
out
jns
adcl
add
imul
pop
pop
mov
xchg
call
fpatan
adc
lea
enter
mov
mov
mov
jne
cmp
cmpl
daa
or
ja
int3
repnz
aam
mov
sub
mov
pop
test
jmp
mov
mov
xor
sbb
sbb
insb
xor
xor
add
in
sub
jb
mov
loope
adc
subl
std
or
insb
imul
sub
lods
pop
fmuls
lcall
les
push
and
sub
inc
cmpsb
or
adc
into
fnstenv
add
ja
les
mov
push
lods
xor
mov
mov
xor
stos
dec
jge
jno
ror
and
jl
or
cmp
sub
or
push
xor
shrl
pop
inc
sti
lds
xlat
mov
stos
cli
nop
push
test
inc
sbb
adc
mov
leave
jge
xor
push
push
je
mov
or
pop
mov
pusha
rorl
sbb
or
cmp
inc
inc
daa
je
mov
clc
mov
fisubs
pop
pop
sarl
arpl
ret
inc
xor
mov
cmp
push
jmp
mov
pop
mov
fwait
push
stos
adc
popa
ja
into
sbb
add
jmp
dec
cmpl
lcall
subl
out
xor
leave
inc
and
sub
movsb
inc
xor
or
add
test
sbb
in
fisttpl
out
into
add
push
inc
mull
cmp
dec
mov
adc
popf
int3
xchg
xchg
stc
or
jne
out
xchg
in
jle
mov
or
cmpsb
push
cmp
fstps
or
jecxz
xlat
push
cmpsb
cltd
dec
inc
inc
and
sub
mov
outsb
in
insb
inc
mov
out
insb
dec
mov
dec
push
push
xor
divl
or
scas
stc
cltd
add
fcmovu
xor
mov
adc
clc
std
inc
sbb
ljmp
and
mov
fiadds
sub
aaa
insl
jecxz
jp
mov
les
lods
lods
adc
xchg
jno
decb
subl
sbb
cmp
sbb
inc
jp
fldpi
pop
scas
jbe
pusha
nop
dec
push
xor
popl
mov
insb
xchg
jno
add
xchg
mov
cld
xor
cmp
jg
imul
add
cmpsl
iret
lods
mov
mov
xchg
or
inc
popa
lea
std
insb
cmpb
pop
mov
cli
add
aas
pop
rclb
sbb
in
inc
xchg
fcoms
jne,pt
sub
adc
or
in
bound
repnz
iret
lock
jmp
js
push
fwait
imull
test
cwtl
cmpl
movsb
mov
imul
xchg
push
inc
jnp
aas
pop
bound
push
add
jp
inc
jnp
ret
mov
dec
fdivl
sbb
dec
jne
stos
push
movsb
int
mov
jae
mov
imulb
shrl
adc
adc
ds
hlt
rolb
enter
mov
mov
fwait
sub
push
out
adc
pop
adc
jmp
out
sbb
inc
imul
jb
sub
scas
adc
and
dec
cmpsb
lahf
sarb
jp
inc
loop
sahf
data16
jnp
daa
call
rcrb
xchg
dec
and
add
push
outsb
mov
xchg
rdmsr
adc
xchg
mov
insl
sub
rorl
adcb
push
test
mov
pop
push
sbb
xchg
popa
mov
inc
jns
fcomps
add
lcall
dec
js
js
pusha
mov
push
jg
cmp
xchg
push
pusha
iret
dec
push
iret
rol
inc
gs
and
fnstenv
jno
mov
push
jno
cltd
jb
sbb
adc
and
mov
jle
mov
or
lea
inc
push
ss
xor
out
neg
and
xchg
lods
pushf
inc
or
jl
sub
das
iret
add
dec
xor
dec
push
pop
repnz
rcrb
mov
mov
sbb
bound
push
int
mov
lods
lods
adc
fwait
push
inc
xchg
in
arpl
stos
fdivl
xchg
int
int3
insl
sbb
add
fs
and
xchg
movsl
jo
sub
and
mov
insb
xor
dec
inc
mov
enter
rclb
push
pop
sbb
xchg
pushl
push
shlb
lods
push
lods
mov
lock
mov
jno
cmp
push
popa
mov
inc
leave
cmpsl
ljmp
lock
rcr
lods
scas
mov
rcll
lret
and
movsl
fdivl
in
and
jmp
cmp
inc
rol
jl
pop
movsl
add
push
cmp
dec
pop
jne
lock
jg
inc
xchg
mov
aam
mov
mov
ret
mov
in
push
les
add
xchg
or
xor
xchg
mov
mov
shll
inc
and
ss
push
inc
dec
repnz
add
aas
ficompl
fcmovu
xchg
pushf
cbtw
jb
jp
jae
pop
mov
push
or
sub
int3
sbb
daa
jb
xchg
mov
aas
leave
push
fisubs
cmp
mov
or
cmp
mov
daa
xchg
xor
sbb
dec
mov
loopne
sbb
shll
dec
mov
xor
stos
mov
data16
jg
push
stc
and
es
bound
jae
sti
out
push
jnp
outsb
adc
mov
xor
xchg
pop
jbe
xchg
jge
jge
aaa
fldenv
andl
fcomps
mov
pop
xchg
mulb
ret
iret
push
jge
xchg
jmp
jne
xchg
out
jge
daa
sti
sbb
jb
add
nop
imul
jp
test
ror
ljmp
or
dec
imulb
jbe
loop
iret
leave
cmpsl
cmp
push
push
push
jnp
mov
mov
loop
and
movsb
pop
leave
divb
adc
sub
jp
push
outsl
sbb
bound
push
mov
enter
jns
lea
mov
lods
mov
mov
sarl
insb
scas
xchg
cmp
jne
test
loopne
xchg
lcall
mov
mov
adc
push
addr16
xor
inc
sti
jae
jg
fiadds
cmp
xor
movsb
push
push
mov
adc
push
mov
cmp
shrb
icebp
or
xchg
pop
cwtl
out
inc
fcomps
insb
repnz
insl
push
lret
int3
rorl
inc
push
sbb
fldcw
jp
mov
lods
mov
push
mov
sarl
xor
sub
push
xchg
xchg
in
ja
cmp
push
cmp
pop
call
testl
movsb
mov
inc
mov
or
cmpsb
shl
jg
pop
mov
clc
ds
push
stos
cltd
in
loopne
sbb
sbb
psubd
clc
cwtl
insb
fisubrs
hlt
outsl
mov
and
shrl
mov
es
push
stos
jns
rcrb
jle
and
jno
jmp
test
pop
cmpsl
add
mov
lods
and
loope
aam
ss
call
or
xchg
add
jl
lods
xor
dec
adc
jl
aaa
repz
outsb
dec
lods
sbb
mov
loope
pop
sbb
fwait
inc
pop
jmp
testb
xchg
pop
shlb
push
adc
popa
stos
addr16
std
push
jno
stos
sub
shl
testl
call
and
shrb
movsb
push
mov
sar
and
insb
push
and
xchg
add
push
in
xor
dec
xchg
xor
sbb
leave
push
and
add
or
jp
sbb
and
mov
and
negb
shl
pop
aam
seto
and
sbb
or
inc
lock
lahf
mov
dec
pop
ds
fsubs
cmp
scas
popf
loopne
push
jle
out
repz
fdiv
les
test
cli
out
imul
in
adc
sbb
xchg
movsl
dec
sub
cwtl
cwtl
push
es
xor
outsb
aaa
cs
adc
stc
jnp
arpl
aas
nop
inc
mov
sbb
dec
out
jbe
push
pushl
imul
jo
xchg
sbb
mov
jo
insb
push
mov
iret
adc
insb
clc
addr16
mov
scas
cmpb
test
sbb
mov
out
mov
sbb
stos
iret
mov
and
das
or
xor
xchg
sbb
xchg
xchg
sbb
fistl
sbb
out
xchg
int
rcll
cmp
fstps
aad
cmp
sbb
test
push
pop
daa
std
rcl
push
adc
mov
jae
push
mov
xlat
add
stos
cmp
jmp
xchg
das
or
push
push
xor
inc
scas
test
or
scas
les
mov
ret
sbb
pop
jnp
into
repz
adc
xchg
jne
mov
movsb
xor
pop
mov
enter
xchg
inc
lea
mov
mov
scas
xor
or
int
mov
add
cli
xchg
push
push
dec
xchg
dec
adc
adc
popf
out
adc
pop
push
add
jmp
sahf
ja
out
cmpsl
sbb
push
dec
jns
dec
arpl
dec
rolb
sarl
popf
loopne
dec
adc
into
mov
add
addr16
out
outsb
xor
inc
scas
cmp
push
mov
cmc
and
hlt
outsb
ret
int
xchg
aam
mov
mov
jmp
scas
rol
xor
hlt
sub
insl
shlb
or
ja
push
ja
cmpsb
inc
dec
mov
test
cli
out
mov
repnz
pop
sub
inc
or
hlt
out
adc
mov
jle
enter
aas
outsl
push
and
push
sub
mov
mov
xchg
loop
mov
es
sub
mov
fdivr
lods
xor
xchg
sahf
or
filds
mov
mov
jg
iret
das
shll
xlat
mov
xor
xchg
enter
imul
scas
or
push
test
dec
inc
stos
dec
or
out
sub
fcompl
int3
stos
in
in
bound
xchg
jne
in
sarb
adc
cmp
lret
pop
imul
or
mov
mov
xor
int
cwtl
dec
xor
xchg
adc
and
adc
cmp
sub
inc
xchg
movl
fwait
fists
mov
shll
outsl
scas
and
lcall
xor
mov
insb
xor
ja
out
pop
mov
jne
fists
mov
sub
add
push
sub
jge
gs
sub
xor
gs
pop
inc
adc
fldenv
mov
in
aaa
insl
pop
mov
sub
dec
mov
std
push
mov
out
scas
mov
xchg
test
mov
and
jl
xchg
int3
aaa
call
lcall
mov
out
mov
or
adc
jecxz
inc
mov
mov
jnp
ror
mov
mov
sub
adc
test
pop
in
add
ds
or
dec
adc
fdivrs
jb
push
push
or
inc
push
mov
data16
cld
add
sub
xor
push
pusha
mov
addr16
add
test
push
ret
cmpsl
jmp
out
ret
out
cmpl
loopne
cwtl
aam
leave
push
adc
sub
pop
sub
xchg
mov
aaa
lahf
mov
mov
push
insl
repz
cmc
in
repz
mov
inc
andnps
ds
sbb
cmp
jg
mov
fidivs
sbb
jg
push
dec
and
jns
ds
scas
add
mov
pop
push
pop
adc
sbb
cmp
xor
cs
push
clc
data16
xchg
sub
mov
hlt
rorb
aam
mov
jp
ret
out
sub
push
cmp
dec
cld
cmpb
and
dec
adc
enter
dec
aaa
and
nop
mov
push
mov
inc
mov
ror
xchg
inc
orl
addr16
fcmovnbe
daa
sbb
or
bound
mov
mov
mov
xchg
fistpl
pop
aas
roll
nop
pop
shl
jno
sbb
test
test
rorb
inc
cwtl
push
cmp
sahf
mov
xor
xor
pop
mov
mov
cld
arpl
pop
fisubl
add
cltd
and
int3
rcrl
imul
dec
roll
stos
inc
into
jbe
inc
sbb
flds
mov
mov
cmovbe
mov
dec
dec
cwtl
fistpl
std
and
push
and
sbb
shll
inc
mov
stc
mov
mov
rcr
xor
xor
jae
jno
pop
sub
jge
xchg
mov
aad
lcall
ss
and
mov
iret
or
mov
jne
mov
xor
je
cmp
fwait
lods
cs
incb
cwtl
out
popf
lock
adc
xor
xchg
jo
jb
dec
push
mov
cmp
dec
leave
sub
out
sahf
outsb
cli
cmp
cltd
ljmp
mov
cmp
es
push
pop
jmp
dec
adc
hlt
lock
sub
test
push
cmp
and
add
add
jg
bound
ja
repnz
outsb
adc
cltd
mov
pusha
pop
lret
fimuls
adc
pop
mov
and
test
nop
fisttpll
cmp
pop
nop
ss
xchg
dec
or
cmp
movsl
scas
cmp
xor
cmp
dec
cmpl
dec
mov
jo
cmp
insb
jne
pushf
cmp
test
push
dec
lcall
ror
loope
cmp
jo
inc
filds
jno
inc
cmp
mov
inc
int
push
mov
lods
pop
aad
inc
mov
push
idivb
cmp
or
and
test
and
mov
lods
jle
lahf
ljmp
mov
inc
xchg
mov
aad
sbb
leave
leave
fstpl
jl
mov
rorl
movsl
stos
add
xchg
out
outsl
pop
out
sub
mov
mov
push
test
cmp
fcompl
sbb
adc
jg
int
inc
lds
dec
pop
or
icebp
push
int
hlt
sub
dec
push
movsl
scas
push
sbb
jle
sub
jo
pop
adc
xchg
push
mov
stc
pop
insb
popf
scas
lods
push
dec
jno
adc
shrl
mov
test
inc
mov
xor
mov
ret
add
aaa
cmp
dec
fwait
cld
push
xor
test
cmc
mov
scas
push
sti
jb
inc
in
mov
idivb
push
sahf
icebp
mov
cld
in
push
incb
or
mov
scas
scas
in
jecxz
dec
stos
adc
xor
mov
pop
dec
or
mov
mov
push
sbb
sbb
mov
andb
pusha
in
push
insb
fidivs
adc
movsl
cmp
or
fimuls
add
pop
arpl
or
lods
out
inc
xchg
ficoml
and
jno
lret
aaa
mov
pushl
sbb
ret
clc
pop
rorb
fdivs
sub
movsb
int
cmc
jmp
sub
xlat
pop
rcrb
pop
das
mov
dec
or
pop
push
popf
mov
cli
shl
ret
push
lods
mov
out
mov
jp
xor
mov
pop
popa
dec
adc
add
loopne
int3
pop
repnz
sbb
mov
xchg
js
sub
adc
daa
dec
adc
int3
pop
jg
into
test
adc
cmpsl
sub
mov
mov
pusha
sbb
or
cmp
sub
leave
inc
fdivr
adc
test
in
lcall
jae
imul
daa
push
pusha
pop
in
fnstsw
jg
push
add
repnz
std
push
clc
xor
sbb
ja
loop
popa
aas
jnp
add
sbb
lcall
js
popf
xor
xor
sub
xchg
sysenter
dec
cs
or
addr16
and
pop
pop
and
shll
xchg
xchg
adc
sarl
stos
aas
inc
fnstsw
popa
aas
jae
and
out
mov
fs
and
pop
mov
arpl
in
cmp
add
shlb
xchg
sbb
fadds
mov
jmp
mov
mov
push
test
dec
add
cmp
ds
dec
inc
jmp
cwtl
xchg
pusha
mov
cmp
xor
mov
sbb
lret
test
insb
mov
sbb
pop
xor
push
imul
bound
adc
add
or
jbe
insl
cmc
jo
and
rolb
xchg
stc
cmp
mov
test
adc
adc
xchg
inc
mov
std
lds
fwait
pop
jmp
add
cmc
dec
sub
scas
rcll
int3
xor
js
push
mov
mov
int3
data16
data16
movsl
sub
mov
mov
pop
mov
int
je
jg
cmp
mov
mov
dec
or
es
inc
sbb
cwtd
mov
jbe
cmp
inc
xchg
and
mov
gs
shrb
std
mov
inc
mov
jg
sub
stc
insl
sarl
daa
add
pop
dec
shll
cmp
sbb
loope
and
outsb
mov
mov
into
in
imul
out
mov
add
sub
sub
mov
push
repz
inc
stc
inc
pop
mov
test
shrl
pop
adc
inc
and
test
orb
inc
adc
xchg
pop
loope
nop
test
dec
adc
jl
push
call
mov
mov
aas
mov
dec
xchg
xchg
loope
dec
insl
call
push
test
fstps
pop
ret
inc
cmc
mov
push
test
pusha
test
outsb
icebp
lcall
insb
dec
sbb
push
sub
ficompl
push
fstl
mov
push
out
roll
pop
popa
jp
xor
xor
mov
das
loope
mov
imul
adc
imul
xchg
mov
mov
movsl
out
pop
mov
or
pop
jae
pusha
pop
xchg
xlat
pcmpeqw
fstl
cltd
inc
mov
push
shll
sarl
cld
pop
add
insl
push
cmp
jo
pop
in
js
xchg
dec
ret
pop
jne
iret
and
loopne
movsl
les
xchg
rcll
std
xchg
mov
mov
dec
xchg
mov
mov
or
das
lret
or
insl
mov
fdivl
xchg
xchg
jbe
aas
fucomi
outsb
inc
inc
jo
into
rcrb
mov
push
je
jp
subl
test
sbb
psubusb
or
in
pop
in
inc
xor
cmp
out
sbbb
ficoms
fadds
stc
call
gs
adc
in
loope
xor
popa
adc
pavgw
je
popa
jae
mov
mov
sbb
add
push
and
iret
mov
les
xchg
cmp
and
mov
mov
adc
jg
push
mov
lods
icebp
mov
mov
inc
jnp
pusha
xchg
and
inc
mov
or
mov
sbb
shlb
mov
xchg
xor
lea
sarl
jg
pop
xor
iret
pop
dec
and
jne
andb
push
test
mov
imul
dec
adc
cmp
pop
xchg
in
negl
push
enter
test
cmpsl
div
mov
add
in
mov
int3
push
jnp
mov
push
and
mov
cmp
in
and
les
sarl
mov
jno
xor
mov
dec
std
gs
int3
and
rcl
insb
sbb
jns
loop
jnp
xor
fmull
loope
mov
push
icebp
cld
stos
xor
dec
dec
test
adc
outsl
pop
pop
imul
ret
ds
int3
jo
push
les
mov
push
sub
push
xchg
lds
sbb
scas
mov
dec
lds
stos
jcxz
je
add
mov
and
xlat
fwait
icebp
mov
inc
sub
and
jle
mov
outsl
push
inc
mov
out
ja
sbb
xchg
mov
or
jnp
xor
in
in
cmpb
cwtl
ret
sub
mov
mov
adc
add
mov
je
xchg
dec
lret
pop
mov
scas
and
repnz
sarl
out
jns
icebp
stos
mov
mov
push
dec
das
faddl
inc
out
jmp
pcmpgtb
and
mov
imul
shll
lret
push
sub
imul
out
dec
sbb
and
mov
mov
add
mov
inc
addl
int
adc
sub
cmp
aaa
lcall
pop
das
adc
jb
pop
ds
pop
pop
cli
insl
ret
cs
loope
test
movsl
add
lret
shll
xlat
push
and
mov
mov
mov
insl
sbb
imul
hlt
push
jno
xchg
daa
cmp
mov
pusha
ud1
push
aad
inc
xor
and
je
mov
pop
repz
daa
iret
lea
cmp
and
mov
mov
jmp
inc
cs
into
cmc
sbb
mov
stos
push
cmp
add
and
fimull
fs
sbb
xchg
mov
cmc
and
inc
mov
icebp
cs
or
mov
xor
xchg
mov
lds
jbe
popf
ss
xchg
push
jmp
scas
test
daa
shll
or
push
rclb
inc
les
lea
xchg
mov
loope
faddp
and
cli
pop
lahf
movb
jb
mov
and
mov
jnp
arpl
mov
repnz
sbb
cmp
dec
add
ja
lea
xor
nop
jmp
mov
lcall
jmp
jl
sub
dec
push
shl
add
xchg
mov
cmpsb
pop
fisubrs
std
repz
jmp
cld
mov
aas
ss
fs
jmp
mov
cwtl
clc
les
jae
ficoml
std
pop
mov
dec
cmpsb
test
cmp
lods
jnp
sub
cld
in
jne
mov
std
sbb
sbb
mov
adc
in
loopne
mov
lret
mov
push
rcrl
insb
test
shlb
ror
jl
inc
sbb
lahf
mov
xchg
js
shl
push
das
cmc
fsubr
cmp
fistps
jle
and
repz
std
cwtl
cld
rcr
xor
sub
aaa
out
add
or
sbb
or
mov
mov
nop
jnp
adc
loopne
and
jns
cmp
inc
test
mov
mov
sub
jmp
push
push
pop
fldenv
jle
mov
data16
mov
repz
data16
mov
push
jo
jle
cmp
daa
or
sub
sahf
jo
cs
push
out
pop
push
addr16
iret
imul
cmp
pop
sbb
test
repnz
sbb
push
clc
or
xlat
fmull
sbb
and
fnstcw
push
jl
loop
jl
push
pop
sub
jbe
or
add
mov
adc
xchg
pop
call
or
mov
pop
scas
js
dec
into
rcrb
mov
and
adc
add
and
pop
ja
in
fisttpll
mov
psubb
and
push
xor
xor
rcll
mov
xchg
pop
test
dec
and
and
rolb
enter
leave
jns
or
xchg
loopne
or
cmpsb
xor
jne
sahf
lcall
add
clc
in
dec
mov
xor
push
ss
bound
cmc
add
xor
mov
sar
cmp
or
sbb
push
lret
xchg
jecxz
sbb
push
push
jbe
rorl
pop
mov
dec
insl
sub
mov
sbb
add
ret
mov
outsl
fucomip
mov
mov
scas
push
mov
mov
xchg
push
ret
jnp
les
pop
push
sub
mov
test
insb
sub
imul
add
and
inc
or
push
adc
xlat
iret
ds
cmc
sbb
adc
subl
cmovge
mov
push
jno
clc
xor
pop
add
in
add
mov
iret
cmp
inc
xchg
out
adc
dec
xor
fs
and
dec
lods
jbe
pushf
jbe
das
cmp
pop
mov
jg
in
test
fimuls
push
mov
bound
mov
push
mov
mov
and
repz
arpl
mov
lods
jno
iret
xor
mov
mov
iret
cwtl
aas
sbb
mov
cmp
cmp
xchg
mov
add
cmp
mov
out
pop
sbb
sub
xchg
jns
ss
xor
or
bound
insb
xchg
or
xchg
mov
add
cmpsb
adc
mov
mov
into
adc
sub
or
fsts
xchg
js
sarb
dec
or
dec
popa
test
lret
sbb
push
dec
sarl
cmp
lods
cwtl
jnp
popa
dec
adc
repnz
les
leave
out
mov
xchg
js
pop
cwtl
lods
aaa
ljmp
call
cmp
les
and
adc
push
mov
testl
insb
adc
out
inc
test
mov
sub
dec
push
lock
mov
fldcw
cli
cmpsl
jecxz
sbb
mov
jp
iret
stc
sub
push
psrlw
test
mov
mov
mov
add
pop
enter
mov
push
test
jmp
pop
out
enter
jp
shl
inc
mov
fwait
push
gs
fdivrs
jle
roll
inc
mov
adc
cli
in
out
pop
stc
pop
lahf
in
fstpl
and
push
xchg
shrl
xchg
add
shl
nop
adc
xchg
stc
lds
sbb
in
daa
sbb
jns
scas
leave
cmp
test
cmp
test
rorl
and
orb
fiaddl
enter
cmp
jl
push
lret
in
lret
loope
gs
aaa
lock
mov
mov
or
sub
jmp
loop
mov
and
dec
mov
mov
push
outsl
jmp
mov
pop
dec
mov
arpl
out
icebp
hlt
sbb
inc
mov
xchg
sub
int
jae
popf
or
outsl
ret
cs
popa
dec
inc
jo
out
nopl
in
loopne
mov
out
sub
xchg
and
sbb
mov
cmc
mov
std
orl
mov
out
jge
enter
imul
outsb
cmp
xor
mov
add
sub
outsb
mov
add
jb
out
and
add
cmp
shll
test
jno
push
mov
loop,pn
pop
sbb
mov
sbb
mov
iret
test
incl
repnz
mov
pushf
insl
lcall
ja
cld
inc
dec
in
pop
ljmp
pop
fistpl
fists
xor
loope
mov
pop
fwait
out
call
fldenv
stos
pop
gs
lods
lods
insb
aam
dec
cmpb
dec
test
call
mov
out
adc
stc
sbb
mov
mov
cld
aam
add
bound
ret
in
out
mov
xor
xchg
andl
shlb
rcr
push
jne
les
pop
or
pop
mov
mov
and
inc
push
mov
jle
mov
aad
out
sub
pop
dec
es
filds
dec
stos
or
scas
dec
in
mov
clc
mov
test
jmp
imul
popl
sbb
shrb
xor
cmp
dec
add
insb
mov
in
inc
iret
adc
sub
out
sub
jbe
cltd
aas
xor
loopne
add
notl
push
stc
rcrb
sub
movsl
push
orl
cs
shll
mov
add
jne
dec
xchg
push
mov
fsubrl
inc
mov
pop
popf
clc
loope
pop
shll
js
mov
pop
fadd
pusha
fisttps
ret
dec
dec
mov
sbb
jbe
int
repz
out
add
loopne
push
repz
cmp
outsl
das
leave
adc
ror
add
xchg
jle
add
cmp
cltd
adc
pop
jnp
mov
loope
mov
in
or
imul
out
xchg
add
in
xor
ja
sbb
imul
cmpl
repnz
cmc
sub
std
or
adc
rol
xor
sbb
add
cmpsl
popf
lods
cli
push
aas
popf
cltd
mov
popl
pop
loop
cmp
push
pop
mov
mov
sub
cs
roll
or
leave
inc
inc
jae
inc
sub
stc
test
sbb
test
xchg
stos
xchg
mov
push
icebp
inc
shl
jns
mov
pop
leave
adc
test
lods
lcall
movsb
repz
cmp
dec
dec
mov
lock
mov
adc
push
jnp
pushf
mov
lds
in
push
xor
and
ror
scas
out
fadd
pop
ret
jb
call
icebp
test
fdivrl
lcall
sbb
adc
pop
loope
addr16
xor
in
and
inc
repz
test
or
out
pop
hlt
add
cwtl
sahf
pop
mov
movsb
lock
adc
into
sub
adc
addr16
les
test
pop
loopne
fs
ss
bound
aaa
xchg
cs
mov
sbb
push
push
inc
mov
xlat
xor
clc
sub
push
mov
inc
das
movsl
mov
inc
in
xlat
popf
sahf
andb
mov
mov
cld
dec
mov
div
inc
cmp
or
adc
loop
imul
xor
cld
mov
ret
push
addl
adc
mov
adc
sbb
test
sbb
in
in
sbbb
in
call
cmp
inc
imul
adc
xor
push
lcall
inc
jnp
mov
int
inc
push
ret
cltd
sub
mov
sub
push
push
stc
push
stos
or
sub
repz
mov
repz
clc
dec
enter
test
push
push
fdiv
test
mov
adc
jne
inc
jle
fidivrl
stos
xchg
mov
inc
and
dec
lock
fimull
and
dec
cld
mov
xor
jg
repnz
mov
mov
sub
sub
dec
js
mov
pop
mov
sahf
inc
testb
ss
les
xor
xor
ja
stc
pop
sub
or
aaa
mov
fnstcw
add
in
push
pop
mov
lods
mov
mov
dec
loope
outsl
mov
ret
xor
das
imul
mov
jb
xchg
jne
mov
sub
jo
ret
sbb
xchg
adc
push
xchg
jle
adc
mov
dec
pop
ljmp
cmp
and
or
xchg
push
pop
das
out
jbe
mov
dec
or
and
cmp
jg
fists
add
adc
insl
stos
mov
lret
mov
cmp
jg
mov
jp
xor
push
out
cwtl
sahf
shll
into
inc
adcb
lods
mov
xchg
pop
sub
setb
fisttps
daa
jnp
lret
sub
push
mov
nop
popf
cmp
movsb
out
leave
mov
cmpsb
cmp
fbld
and
pop
rorb
movsb
sarl
xchg
pusha
cmp
and
cmp
jne
or
push
arpl
cltd
adc
cmpsb
addr16
cwtl
jne
add
outsb
xchg
leave
xchg
sbb
mov
cmc
loope
mov
jbe
push
hlt
stos
aad
cmp
popa
lea
pop
pop
cmp
xor
in
jp
aas
stos
and
adc
push
ret
test
ds
cmp
cli
mov
repz
enter
lods
cmp
xor
cmp
mov
pop
insl
pop
lock
in
or
mov
stos
mov
es
sbb
jl
mov
aad
insb
push
cmpl
stc
sbb
cmp
pop
dec
xor
mov
mov
iret
into
lock
fwait
cmp
sub
push
cmp
cmpsb
repz
push
mov
dec
je
cmp
inc
push
sbb
jp
pop
pop
stos
lods
rcll
pop
stc
and
xor
shl
mov
loop
push
daa
outsl
repz
jnp
push
sub
mov
inc
in
cmpsl
gs
cwtl
add
outsb
inc
fxch
mov
mov
bound
mov
test
jecxz
dec
jno
loope
ss
cmc
imul
inc
push
cmp
loop
cmpsl
pop
sub
lds
rcrb
xchg
bound
outsl
adc
aaa
je
loopne
dec
hlt
cli
pop
inc
fs
outsl
repz
invd
lahf
add
sub
pop
ret
andb
xor
push
pop
shll
out
out
mov
xor
stos
cmp
adc
mov
out
hlt
adc
cmpsb
test
push
in
ljmp
add
jge
xorb
xchg
cmp
mov
fstps
mov
std
cltd
mov
ljmp
sbb
jle
aas
mov
stos
test
rolb
mov
sahf
out
outsl
fwait
jg
jb
into
cld
adc
cs
xor
rcl
pop
repnz
pop
out
popa
mov
test
inc
stos
dec
dec
imulb
and
xor
imul
cmp
mov
sahf
pop
insl
pop
adc
das
pushf
sbb
clc
sbb
cmp
xor
mov
fcomps
push
mov
out
xchg
or
pusha
pop
mov
ja
inc
xor
pop
inc
mov
jnp
adc
loop
pop
mov
push
lret
fbld
mov
loope
insl
inc
push
adc
scas
inc
sub
push
pop
cmp
repz
or
xchg
push
mov
loope
movsb
mov
insb
inc
push
cmp
popf
mov
xchg
mov
adcl
repnz
and
scas
dec
pop
dec
or
leave
cli
pop
xchg
int
iret
push
xchg
imul
adc
fwait
outsb
pushf
mov
jae
setno
fwait
pusha
jmp
sbb
hlt
ss
in
int
xlat
add
add
popf
xor
add
aas
sub
ror
add
sub
mov
jbe
loope
js
test
pushf
sbbb
push
cmp
xor
scas
inc
lcall
inc
cmp
mov
sti
lods
sub
stos
jp
mov
pop
adc
sub
add
aas
mov
jg
mov
xchg
push
out
ret
pusha
jmp
adcb
inc
dec
test
jmp
movsb
cmp
cmp
sbb
or
adc
mov
mov
call
insb
dec
inc
in
out
loopne
shr
mov
out
xchg
sbb
out
mov
loopne
cmpsl
dec
inc
mov
js
or
into
pop
in
jmp
out
movsb
rclb
xor
add
mov
cwtl
aaa
pop
jl
sbb
sahf
ret
ret
pop
or
xchg
hlt
pop
js
cwtl
inc
in
orb
test
andb
sbb
and
or
sub
test
xor
cltd
xor
aad
lock
mov
shlb
mov
jae
and
push
dec
cmpsb
and
xor
inc
mov
std
push
push
xchg
fcomp
jo
data16
notb
mov
dec
out
idivl
dec
lods
scas
push
inc
imul
sub
mov
jns
arpl
in
scas
add
and
cmp
in
mov
ljmp
lcall
je
fcompl
adc
aam
pop
and
sub
lret
stos
outsb
dec
xor
mov
scas
lcall
jnp
push
and
in
in
sahf
imul
xorl
into
inc
stos
push
scas
arpl
sub
fistl
aam
push
mov
dec
ds
push
add
aaa
xchg
outsb
sahf
cmp
dec
mov
cs
dec
pushf
insb
xchg
pushf
outsl
inc
push
mov
mov
ret
insl
loope
push
mov
lcall
jne
sub
and
pop
mov
pop
cltd
mov
adc
mov
xchg
mov
sub
adc
jle
adc
xlat
loope
xchg
xchg
pushl
mov
imul
outsb
int
sahf
cltd
test
mov
ljmp
fmulp
mov
mov
imul
int
jb
xlat
sub
mov
xchg
jmp
aas
mov
aam
jns
ficomps
push
sub
les
dec
add
pop
and
push
jecxz
mov
jo
push
out
mov
fiaddl
les
jb
sub
cmp
push
mov
sbb
jo
leave
fldcw
xchg
xlat
sahf
rorb
cmp
inc
mov
stc
cmpsb
jle
aam
insl
mov
jno
add
lret
dec
push
jnp
fisubrl
jecxz
stc
inc
xchg
cs
lds
add
inc
dec
jo
cmp
test
mov
xchg
icebp
add
stos
push
xor
lret
fldl
dec
dec
fwait
pop
pop
fwait
jbe
jge
sbb
add
and
add
jnp
mov
inc
andb
pusha
and
fldl
icebp
push
shll
outsb
inc
aaa
pop
fdivr
fcomp
ss
fs
mov
out
lea
xchg
roll
std
inc
dec
sub
idivl
in
daa
jbe
popa
adc
fdivs
push
sbb
push
push
fimuls
lret
out
xchg
dec
aad
or
sbbb
scas
outsl
adc
push
stos
insl
dec
xor
mov
jge
in
lahf
in
loop
cld
and
int3
xor
out
test
gs
roll
ja
mov
inc
fdivrp
jb
lock
das
ljmp
icebp
adc
cld
jmp
push
xor
sbb
stos
aaa
push
lods
ljmp
cmpsb
pop
clc
gs
fmul
in
sub
inc
scas
push
mov
js
sbb
adc
int3
mov
mov
cmp
test
mov
sarb
add
mov
push
xchg
lahf
sbb
negl
push
mov
shlb
insb
pop
push
lds
dec
mov
cmp
jo
dec
pusha
lds
xchg
imul
pop
pushf
aas
gs
inc
push
mov
jne
xor
test
in
sub
jne
lret
bound
lods
inc
popa
dec
pop
xchg
orl
out
insl
imul
inc
pop
lods
xchg
sub
loopne
push
and
inc
mov
mov
and
push
pop
pop
popa
xor
lods
xor
lods
adc
rcrb
sub
mov
xchg
jp
stos
inc
add
out
leave
clc
shl
fisubs
pop
pop
mov
jge
scas
push
fnstenv
fimuls
cmpsb
test
adc
les
shl
and
jo
test
cmp
dec
fisttps
hlt
int3
sub
pop
and
add
cmp
adc
add
cs
popf
scas
jl
fs
andb
pop
mov
push
push
or
cmp
cli
lret
pop
mov
cmp
and
cwtl
adc
addl
add
loop
sub
sti
jb
adc
in
ds
mov
dec
test
inc
test
rcr
and
push
and
sub
stos
fisttpll
push
dec
aad
mov
insb
push
pop
push
popa
repz
xlat
jae
jle
mov
add
outsl
out
jne
push
loop
xchg
scas
pop
or
sub
push
inc
dec
pop
dec
xor
sbb
sbb
es
aas
sub
dec
rcll
add
leave
xchg
in
dec
mov
mov
lcall
or
adc
sti
lock
mov
jno
sub
xchg
pop
push
fstl
adcl
add
or
mov
xchg
mov
test
add
push
out
push
adc
aas
pop
jmp
mov
popl
dec
cltd
addb
pop
sub
mov
dec
mov
xchg
scas
sbb
out
or
push
gs
inc
dec
mov
mov
jns
out
bound
cwtl
insb
sub
lcall
pop
int3
shrb
add
xchg
outsl
lahf
mov
scas
push
fildll
aad
mov
mov
jmp
sti
mov
mov
mov
mov
sahf
xchg
call
jo
pop
dec
inc
pop
int
fdivrl
jle
pusha
push
rcl
inc
rcrl
mov
jge
stos
test
test
in
mov
insb
xchg
in
push
push
or
dec
fwait
aaa
notb
cmp
add
push
hlt
into
or
loop
jno
or
jo
mov
ret
movsl
pusha
sub
mov
pop
dec
cs
fisttpl
lea
jne
add
jno
std
mov
push
hlt
jns
in
call
mov
rclb
mov
cmc
repz
and
pusha
scas
or
adc
hlt
test
aam
and
add
movsl
sub
and
mov
or
bound
sar
adc
lea
mov
inc
sbb
in
in
outsb
inc
push
cmpsb
test
inc
dec
add
scas
test
negb
dec
es
lea
insb
mov
mov
add
mov
loop
push
xor
or
dec
or
rcrb
test
faddl
push
inc
test
fisubs
ss
rcr
test
testb
icebp
in
jle
sbbl
les
fistl
out
push
mov
int
sbb
xor
pop
fdivr
or
or
sub
and
sub
mov
sub
pop
push
sbb
and
lock
push
pop
data16
frstor
lock
data16
xlat
bound
sbb
and
jnp
inc
flds
cli
or
mov
dec
test
and
cltd
pop
aam
cmc
enter
push
vpmulhuw
cmc
lock
push
out
mov
mov
adc
push
loope
rorb
loope
jne
aaa
add
xchg
jno
cmp
xchg
pop
mov
cmp
mov
dec
push
push
push
pushl
sbb
imul
lret
cmpsl
insb
stos
fs
push
mov
aad
and
mov
mov
in
loope
movsb
or
repnz
xchg
inc
test
pop
jnp
mov
jge
pop
or
mov
scas
mov
out
sub
int
sbb
outsl
or
fcomp
nop
mov
popw
push
push
sahf
pusha
mov
adc
mov
mov
loop
and
into
push
sub
jecxz
cmp
mov
rolb
das
lret
imul
sbb
lcall
scas
cltd
popf
sbb
inc
mov
dec
push
repnz
test
outsl
inc
xor
aam
lea
dec
iret
cwtl
adc
scas
pop
xchg
bound
or
cmpsb
fdivrp
fcoms
scas
sub
sti
sbb
inc
pop
xor
fmull
int
pop
scas
push
fnsave
push
mov
popa
js
push
cmp
jnp
jae
inc
add
hlt
mov
stc
mov
xor
push
lcall
sub
pop
jle
push
mov
mov
and
bound
and
sub
xor
fcompl
or
push
sub
xchg
mov
adc
jle
jne
pop
jl
inc
sar
repnz
aaa
aad
inc
xchg
or
mov
test
sub
and
or
push
jbe
push
lahf
jnp
push
jae
daa
dec
jl
out
clc
rol
addr16
iret
adc
cmp
push
cmp
cwtl
inc
rcr
mov
out
mov
scas
mulb
mov
mov
popf
push
pop
and
cmp
subb
stos
jns
cwtl
ds
loop
mov
push
sbbb
inc
xchg
nop
xor
fndisi(8087
jbe
jbe
test
pop
sti
insb
add
repz
into
jnp
xor
fs
int3
sbb
push
and
mov
push
jecxz
loopne
shrb
push
jecxz
pop
ds
enter
jl
adc
fmuls
in
push
sbbb
punpckldq
addr16
mov
call
pop
test
pop
ror
outsl
or
sbb
mov
add
adc
mov
movsl
je
dec
push
shll
out
cmpsl
call
test
shll
int
adc
fildll
mov
popf
and
jle
testb
push
dec
clc
mov
adc
int
int
in
pop
scas
ret
in
dec
iret
pusha
jns
adc
bswap
jmp
pop
jo
sbb
pop
aam
aad
or
lret
pushf
lock
es
mov
shll
enter
cmp
pop
icebp
loopne
cmp
sbb
jae
fwait
insl
mov
adc
mov
sbb
std
and
cli
cli
pop
xchg
pusha
xchg
sbbl
jns
pushf
jo
lret
jecxz
imul
ja
es
and
int
sti
shrl
inc
mov
inc
add
and
add
sbb
cmp
dec
insb
sub
pcmpgtb
jb
push
shll
xor
rolb
dec
test
popa
mov
xor
scas
sbb
xchg
out
dec
outsb
mov
out
inc
or
push
mov
pop
pop
decl
adc
aad
clc
adc
dec
ret
out
call
xchg
repz
imul
mov
push
dec
mov
push
cmp
xchg
in
clc
xchg
sbb
orb
cmp
push
or
idivb
adc
inc
in
ret
adc
shlb
sub
ret
jb
fsubrs
dec
pop
jb
ja
mov
es
lcall
mov
jb
push
mov
adc
pandn
das
xchg
xchg
pop
daa
cmp
fwait
insl
jne
jle
dec
and
sub
jecxz
call
rorb
pop
lods
add
leave
mov
dec
hlt
jae
xor
or
lahf
jbe
insl
out
and
cmp
mov
lds
sub
xchg
mov
rcr
stc
push
xchg
cmp
dec
xor
adcl
mov
lcall
push
lret
inc
fistpl
xchg
cmpsl
outsb
icebp
xor
inc
xor
cmc
mov
pop
sbb
adc
lret
cli
add
int3
adcl
pusha
in
inc
dec
faddp
xor
push
push
iret
dec
push
jecxz
sub
daa
sbb
mov
in
pop
stc
out
cwtl
arpl
dec
movsb
or
push
xcrypt-ctr
cmpsl
cltd
and
out
hlt
dec
sub
mov
xlat
lcall
shrl
jge
pop
adc
test
mov
test
add
dec
daa
xchg
inc
mov
fists
push
mov
lcall
inc
insb
pop
mov
std
dec
out
dec
jmp
repz
push
inc
adc
shl
mov
add
jle
shrb
ret
shl
js
aam
sar
fwait
scas
adc
pop
movb
mov
sbb
push
dec
add
test
mov
push
lods
mov
jecxz
int
xor
fnsave
adc
xor
push
mov
enter
sub
lcall
mov
mov
xchg
aam
stos
sub
sub
cs
xchg
test
push
fs
test
push
mov
bound
scas
ss
mov
add
mov
rclb
inc
inc
pop
cmpsl
scas
mov
dec
and
lret
or
fst
in
add
push
cwtl
cltd
or
ss
inc
mov
or
js
jmp
lcall
lock
pop
int3
jns
popa
mov
in
inc
pop
dec
push
and
dec
mov
lahf
idivb
daa
pop
call
rcl
dec
or
lret
inc
and
dec
shrb
or
mov
test
je
das
pop
mov
xor
in
mov
pop
dec
mov
jo
sbb
hlt
enter
mov
ja
and
into
incb
pusha
repz
mov
mov
aaa
lcall
xchg
ja
sub
jg
pop
or
insb
sub
aad
mov
pop
fadd
lods
out
dec
stos
and
push
imull
cmp
add
jnp
and
subb
sarl
scas
mov
sbb
lock
ds
cmp
mov
or
les
xor
sub
xchg
dec
aam
jne
add
xor
or
xor
insl
movsb
out
es
pop
sub
push
cmpsb
scas
call
pop
imul
in
adc
stc
imul
cmp
dec
pop
dec
out
mov
mov
jbe
add
inc
rcrl
xchg
and
sbb
pop
mov
jno
sub
adc
pop
mov
orl
cltd
fucomp
pusha
xlat
mov
lret
xor
enter
fldcw
add
sub
push
fnstenv
mov
xchg
pop
mov
rolb
pop
stos
pop
test
jbe
nop
int3
movsb
out
xor
icebp
ret
jle
aas
xchg
or
jg
cmc
sub
loop
or
jp
fcoml
and
inc
mov
add
adc
adc
jp
mov
add
inc
cmp
xchg
in
push
add
in
lret
repz
inc
inc
test
mov
mov
push
pusha
lods
push
mov
test
sub
rolb
pop
fldcw
push
decl
pop
dec
and
mov
mov
sbb
std
ret
sahf
bound
add
and
push
jecxz
ficoml
mov
out
dec
add
and
fimuls
jb
mov
adc
jecxz
es
fisttpl
lret
jle
mov
push
popa
adc
pop
aaa
mov
sub
pop
call
mov
ds
cwtl
xchg
arpl
pop
xchg
mov
cmp
jnp
js
sbb
inc
mov
lods
fiadds
add
mov
dec
xchg
sahf
xchg
pop
add
pushf
cmp
xchg
mov
lods
pop
mov
push
jae
gs
sti
pusha
xchg
dec
test
mov
cmp
and
inc
sbb
movsl
in
and
in
pop
push
mov
stc
cs
mov
call
call
push
je
in
mov
cwtl
adc
pop
xchg
aaa
push
fmulp
mov
mov
fwait
aas
push
push
sti
sub
sub
testl
std
ljmp
xchg
inc
xchg
pop
and
xchg
es
leave
lret
pop
push
push
jbe
out
mov
or
jle
pop
sub
xor
jbe
popf
inc
repz
jne
xor
and
rcr
daa
mov
xchg
stos
mov
push
pop
std
mov
mov
mov
popf
push
xchg
xlat
push
imul
mov
test
lds
or
ffree
clc
mov
mov
push
jle
subl
inc
add
or
in
popa
adc
enter
fwait
xchg
inc
cmpsb
fnsave
icebp
add
push
repz
stos
adc
adc
sub
notl
icebp
lock
aaa
mov
test
lock
mov
in
fiadds
scas
dec
popf
cwtl
sub
loopne
jbe
push
lea
jno
push
test
or
js
add
and
loope
es
sbbl
add
sbb
xor
sub
xchg
sbb
aam
sbbl
les
mov
call
mov
int
push
and
std
dec
stos
adcb
and
jne
and
mov
das
fildll
xchg
and
cmp
popf
sub
in
inc
out
fsubl
aas
dec
aam
lea
inc
mov
sub
adc
subb
lret
les
outsl
insl
data16
fildll
inc
subl
loope
push
xchg
mov
mov
outsb
cmp
inc
adc
inc
xor
push
mov
push
mov
fidivrs
adc
flds
cmp
in
cli
ja
push
jnp
jmp
cmpsl
mov
mov
js
inc
jnp
mov
into
daa
mov
pop
int
xchg
loop
idivb
push
aam
add
pop
insl
mov
xchg
mov
enter
mov
bound
adc
mov
jae
repnz
sub
insl
cmpsb
je
adc
shll
js
sub
pop
ss
stos
push
adc
adc
sub
jae
dec
fisubrs
lret
mov
and
sub
lock
lret
adc
stc
jnp
mov
dec
mov
rolb
out
dec
dec
jg
and
lock
stos
decl
inc
dec
add
stc
jge
rcrl
std
lret
pop
or
hlt
pop
out
sbb
sub
sub
push
iret
jns
das
movl
movsl
xor
push
int
pop
shll
cmp
loope
mov
insb
dec
and
jb
jb
pop
add
mov
int3
pusha
sti
sub
push
jae
imul
sub
dec
mov
iret
loopne
out
jno
fsubs
cmpb
mov
or
loope
into
int3
rcrb
incl
adc
fidivl
mov
orb
sbb
enter
ds
movsl
mov
arpl
stos
and
xlat
xor
mov
jae
xor
xlat
and
add
and
dec
lcall
aas
aas
icebp
adc
ljmpw
and
mov
pop
mov
mov
cltd
sahf
inc
jecxz
ret
int
scas
pop
in
mov
data16
xchg
cld
push
aam
dec
cli
ret
imul
sbb
pop
movsl
sub
fldenv
mov
sbb
in
lock
incl
mov
ret
outsl
iret
xor
adc
and
pop
aad
xor
ret
push
test
pop
jp
and
and
stos
cmp
push
in
loope
adc
dec
cmp
pop
mov
orl
out
jp
pop
fwait
jbe
cmp
clc
mov
and
les
icebp
pop
mov
mov
arpl
dec
aam
jg
cmp
sbbb
push
inc
sbb
adc
ljmp
pushf
pop
imul
inc
cmpsl
mov
mov
in
jo
in
aas
lret
mov
inc
shlb
arpl
cltd
mov
push
cmpsl
in
xor
jns
mov
js
insb
adc
imul
pop
mov
jecxz
fidivrl
in
pop
jne
xor
xchg
xchg
mov
in
pushf
in
shrb
test
scas
push
aas
bnd
arpl
mov
loope
xchg
cltd
ficomps
aad
push
int3
divb
adc
into
cmp
dec
je
test
jb
fidivrl
xor
cmp
push
fcoms
pop
push
and
sahf
fidivl
iret
and
lods
xchg
sti
stos
iret
shlb
enter
stos
aas
xor
fidivrl
shrb
out
jecxz
or
aas
pop
jg
out
aam
jbe
orb
iret
test
clc
fsubrs
mov
jbe
pop
test
movsl
and
push
push
dec
into
inc
dec
int3
inc
sti
fcoml
inc
push
cmp
add
ss
add
pop
or
lret
out
or
push
sbb
sahf
mov
idivl
jle
in
outsb
aam
push
mov
call
add
sbb
shll
rorl
es
ds
imul
shll
pop
xchg
hlt
and
aaa
inc
push
jle
xchg
insb
or
xor
lock
nop
cmp
jecxz
fst
push
lret
cmp
xchg
inc
fsin
ss
out
xor
mov
pusha
sbbl
call
das
fnstenv
cwtl
xchg
xor
shlb
jns
xor
and
out
pusha
xchg
or
sbb
sahf
mov
je
jo
aaa
scas
mov
lcall
lea
rclb
mov
dec
scas
int
jne
cmpsl
fnstcw
fidivl
pop
fsubl
lock
nop
dec
faddp
gs
dec
cmp
inc
stos
add
mov
mov
andb
rorl
xor
loopne
addb
mov
cwtl
gs
push
pop
and
test
pop
ror
mov
sarb
decb
mov
inc
xchg
mov
repnz
bnd
push
out
and
xor
or
mov
xchg
faddl
xor
push
add
shr
pop
mov
out
ret
push
rorb
jmp
jo,pt
and
push
fnstcw
insl
fcmovnu
xchg
push
mov
fsubrp
push
adcb
cwtl
subb
scas
sub
loopne
jo
cs
sbb
and
jl
cmp
pop
imul
xor
imul
xor
mov
mov
fdivs
divb
imul
jno
arpl
mov
es
xor
sub
jle
popa
sub
jecxz
dec
mov
pop
xchg
test
imul
insb
add
and
and
inc
js
nop
add
add
dec
xchg
rolb
icebp
and
aaa
add
mov
sub
mov
lcall
jae
lahf
imul
fisubs
xchg
lcall
int3
rclb
mov
mov
rol
adc
popf
add
jle
popl
insl
mov
xor
call
sahf
cs
bswap
out
aam
and
sub
sub
inc
mov
xchg
mov
ror
ret
fdivs
jnp
aam
cmp
lock
testb
lahf
push
imul
out
jmp
frstor
lock
xchg
mov
xchg
push
lds
mov
push
and
in
mov
shlb
loopne
ss
xchg
ror
adc
ret
sbb
js
bound
outsb
cmp
lock
cmp
add
sbb
cmp
push
loop
add
jg
pushf
pop
adc
and
lods
cmp
pop
fdivr
mov
push
fimuls
repz
mov
repz
add
lods
fdivrs
movsl
cwtl
lock
out
or
and
mov
daa
loop
sbb
cmpsb
aam
mov
insb
mov
call
addb
aas
jg
pop
inc
sub
pop
divb
sti
and
es
and
dec
cltd
movsb
mov
cmp
pop
adcb
out
stos
jmp
mov
out
fdivp
sbb
test
fisubrl
or
pop
in
repnz
adc
jge
ds
sub
jne
and
loope
clc
push
and
jecxz
out
mul
mov
dec
sqrtps
add
mov
lods
outsl
cmp
mov
xchg
sbbl
js
into
push
jge
mov
inc
mov
fisubrl
outsb
out
data16
scas
jl
push
or
and
and
fwait
cli
xor
bnd
xor
arpl
mov
fcoms
pushf
imul
cld
insb
dec
push
or
cmp
aaa
lea
loopne
icebp
sbb
push
out
inc
lods
mov
cli
scas
adc
adc
aaa
jae
scas
cmp
call
icebp
insl
adc
daa
loopne
jno
cmp
and
jbe
sbb
fucomp
popa
mov
sbb
test
out
ja
mov
lods
js
loopne
inc
test
jns
es
pop
fst
out
clc
adc
push
inc
mov
push
mov
cld
aaa
add
dec
pop
or
scas
lret
cmpsb
lock
wrmsr
cld
lret
mov
test
rclb
inc
js
cmp
faddl
sub
mov
or
push
pusha
xchg
test
or
or
lahf
mov
adc
imul
fwait
in
mov
ljmp
fbld
shll
inc
sbb
fistpll
shlb
jle
das
leave
shl
mov
das
xchg
andl
cmc
add
mov
mov
sub
sbb
popf
in
leave
push
addl
sarb
in
jae
sub
and
jns
push
loop,pn
leave
or
adc
enter
faddl
ljmp
cmp
cmp
inc
inc
pop
scas
xchg
lds
sbb
cmp
push
fstpl
movsb
push
das
popf
fildll
insl
ret
fdivs
mov
loopne
push
adc
mov
or
add
insl
jo
dec
jmp
jle
shll
fistl
les
sbb
daa
bound
pusha
inc
aad
ds
out
or
fucom
lock
lret
lret
pop
pop
cmp
hlt
shlb
cmp
pushf
push
xor
dec
pop
mov
enter
add
and
js
jp
pop
push
lods
sub
into
mov
pop
je
jmp
mov
sub
jo
mov
xchg
or
dec
rolb
cltd
divb
jne
and
xchg
xor
stos
loope,pn
inc
shrl
movsb
mov
arpl
cmpsl
insl
popa
push
xchg
insl
cli
sub
faddl
in
cmpl
push
adc
fdivr
xchg
and
insl
bound
je
andl
inc
or
cs
inc
push
jmp
daa
call
inc
xchg
xchg
ljmp
imul
push
fs
mov
dec
sbbl
fwait
cmp
daa
sbb
fst
push
mov
sub
add
pop
imulb
sub
shll
adc
sub
das
out
out
add
call
adc
adc
leave
fstps
and
or
sarb
cmpsl
hlt
xchg
in
mov
inc
add
inc
imul
sub
es
cmp
jo
mov
pop
push
push
dec
push
daa
sub
notb
xlat
sub
mov
push
mov
xchg
aaa
xchg
mov
push
mov
fwait
cmp
lods
adc
daa
pop
in
popa
mov
fwait
into
popa
imul
lcall
or
sub
shll
mov
je
mov
fistpl
sbb
jle
xor
or
mov
mov
das
mov
cmp
xchg
imul
jle
int
jle
jmp
inc
xchg
sub
int3
cwtl
paddb
sub
fyl2x
fdivrs
lahf
lea
popf
mov
push
push
and
cwtl
and
cmpsb
pop
outsl
push
cmp
mov
stos
sub
dec
push
in
dec
jp
push
dec
imul
mov
pop
jns
mov
push
call
add
add
out
and
mov
pop
orl
xchg
icebp
pop
mov
xor
fsubl
or
mov
in
dec
aam
push
test
jo
fnstsw
adc
inc
dec
pusha
mov
imul
gs
xchg
mov
les
mov
cs
repnz
or
pop
test
imul
cmp
pop
loope
xchg
xchg
xchg
imul
sub
sahf
clc
aad
push
push
mov
fs
es
jmp
pushf
jp
out
stc
dec
mov
xchg
loope
fdivrs
arpl
fcmovne
popf
pushf
sbb
imul
pop
adc
or
inc
inc
nop
iret
iret
pop
push
imul
fbld
or
ficompl
js
orl
ljmp
stos
lds
lods
sbb
ret
cli
inc
ljmp
jne
rolb
pop
dec
jl
stc
mov
test
sub
push
mov
dec
jge
rcrb
jo
fs
push
les
cmp
pop
cli
sub
adc
test
dec
add
sarb
add
lahf
arpl
mov
sbb
shrb
loop
push
fwait
add
sub
pop
pop
imulb
int3
pop
pop
jb
mov
sub
addb
incl
movsl
mov
jle
fwait
or
and
in
mov
jno
ljmp
sti
clc
test
aam
jns
pop
cmp
push
jg
adc
int3
ret
les
ficoms
dec
es
in
cmova
test
ja
popa
pop
popa
pop
push
imul
sbb
sbb
cmp
in
scas
and
mov
cvtps2pd
aaa
popa
mov
lea
inc
xchg
xchg
fs
scas
xchg
dec
call
pop
dec
cmpb
sub
mov
mov
in
iret
cld
xlat
in
and
aaa
test
mov
cmp
jp
arpl
decb
clc
and
inc
jbe
xor
call
inc
int
mov
push
mov
stos
mov
mov
push
add
aaa
mov
pop
add
cli
ss
and
aam
fisubrs
mov
or
rcll
adc
xchg
cltd
xchg
add
jp
mov
push
mov
insl
and
ds
sbbl
push
aam
lock
enter
dec
sahf
je
mov
arpl
sarl
pop
fnsave
lods
scas
mov
mov
sbb
popa
inc
test
out
out
cltd
pop
cmpsb
sbb
add
jbe
or
rcll
or
testl
xlat
pop
cmp
sbb
push
dec
and
popl
adc
add
fdivrp
dec
and
les
inc
pop
int3
pop
dec
or
ljmp
jnp
sbbw
or
fsubrp
daa
incl
pop
cltd
pop
std
outsb
out
mov
pop
xor
push
fdivl
lds
sbb
outsl
test
xchg
lret
push
fdivl
xchg
call
mov
arpl
jbe
inc
sbb
push
jnp
or
test
add
sbb
loop
mov
nop
cmc
inc
jb
pop
xchg
pop
adc
or
push
cmpl
cmpsb
push
mov
sub
lds
jge
in
stc
mov
loope
jnp
scas
jnp
loop
and
adc
or
notl
jns
mov
mov
ffree
jns
sbb
test
mov
push
jb
inc
xchg
rcrl
stos
sarl
sarb
jno
add
jbe
mov
add
sub
sub
jle
jne
pop
inc
xchg
xchg
push
ljmp
cmpb
jl
lods
je
cmc
in
lock
ja
or
push
cmpsl
jmp
cpuid
pop
fisubrs
sti
cmp
add
mov
jmp
cld
adc
loope
xorb
cli
lret
std
ret
aas
ret
faddl
test
mov
mov
lods
cld
or
cwtl
aas
mov
add
sarb
and
lods
sbbl
and
andb
adc
push
cmp
mov
adcl
mov
mov
clc
xor
imul
xor
xchg
push
pop
dec
sub
test
sub
rorb
in
lds
stos
dec
lods
mov
inc
fmuls
inc
sti
mov
shr
jae
mov
xor
rolb
pop
out
hlt
shll
push
pop
dec
add
adc
lcall
cmc
ret
push
loop
sbb
test
dec
icebp
xor
loopne
xchg
lods
pop
loope
lret
outsb
cmpsl
in
insl
mov
adc
mov
inc
pop
lds
cmpsl
subb
fdivl
jp
push
xlat
mov
clc
jmp
bound
fists
push
out
mov
pop
mov
mov
aaa
in
jae
data16
sub
icebp
adc
int3
dec
in
push
sbb
xchg
dec
mov
addr16
or
clc
adc
stos
insl
mov
stc
inc
sub
dec
stos
in
popa
dec
mov
je
mov
pushf
xchg
sbb
sub
fs
push
mov
mov
cmpsl
lods
mov
push
push
dec
pop
mov
icebp
loop
idiv
sub
fcom
jno
mov
push
into
jl
out
aas
or
xchg
sahf
xor
or
add
jmp
and
popa
add
mov
mov
cli
mov
mov
gs
mov
xchg
jl
cmp
sti
xor
ret
inc
sub
sar
or
jno
adc
mov
mov
push
nop
cmp
sbb
rolb
les
pop
inc
iret
rolb
and
aas
and
gs
and
xor
loop
lods
mov
jo
push
clc
push
addr16
into
test
or
push
adc
and
aaa
add
cmpsw
mov
cmp
test
push
fimull
sub
dec
test
push
test
out
cmp
popa
pop
jmp
jne
lcall
outsl
testb
shr
scas
jge
imul
lock
ret
adc
pop
out
cmp
negb
divl
cld
mov
in
mov
fsubl
pushf
test
frstor
inc
xchg
data16
repnz
ret
mov
das
rol
ror
lods
dec
test
xchg
mov
lret
pop
sbb
add
cwtl
push
xchg
pop
or
in
adc
sbb
add
test
jo
and
std
in
xchg
pop
adc
pushf
jge
lods
mov
inc
jl
mov
mov
or
dec
mov
sub
js
mov
xor
fwait
push
aaa
mov
std
and
add
movsl
daa
xchg
out
push
cmpsl
xchg
ds
jge
pop
xor
mov
aam
mov
out
xor
lock
dec
int
fld
jecxz
xlat
fxch
dec
idivl
lahf
cmp
mov
mov
push
mov
arpl
sbb
ljmp
mov
stos
icebp
mov
mov
and
and
cs
test
lcall
pop
or
out
int3
jns
mov
dec
scas
mov
gs
cli
xchg
or
test
add
push
lds
shrb
push
lods
xor
or
pop
push
fisubrl
sub
pop
or
stos
setb
cltd
daa
aas
ret
or
push
mov
mov
ja
jnp
ja
jle
imul
or
sbb
push
into
out
call
imul
outsl
js
loopne
cwtl
cld
testb
js
sub
push
out
pop
jnp
push
stos
or
jne
daa
inc
push
test
fsubrp
in
cwtl
icebp
jne
adcl
xchg
js
jb
xor
imul
push
xor
repnz
jbe
ret
jle
clc
or
mov
ret
insl
rcll
ss
xchg
fwait
negl
push
jbe
cmc
mov
mov
xor
aam
lods
mov
xchg
pusha
adc
add
cmp
test
mov
imul
out
add
xchg
in
mov
ret
jmp
push
xchg
repnz
not
mov
vphaddwq
mov
xchg
cmp
scas
push
dec
and
mov
pop
dec
clc
scas
xchg
and
add
cwtl
out
push
and
test
push
adc
push
mov
add
dec
les
mov
pop
negb
dec
decl
aaa
loope
xlat
in
inc
lods
std
xor
mov
xchg
push
sub
je
mov
cmpb
cmp
sub
pop
pushf
mov
or
pop
lods
pop
cld
pusha
cmp
leave
movsl
imul
jg
movsl
incb
scas
ret
add
sub
out
mov
shlb
push
pop
jle
scas
sahf
test
fcom
mov
fmuls
aas
xor
lods
lret
into
int3
add
jmp
and
ret
and
mov
aaa
sahf
and
sub
addr16
sti
fisttps
stos
xchg
mov
cmc
add
pop
mov
and
xchg
lds
xor
jp
and
mov
inc
mov
add
adc
jmp
movsb
jg
adc
imul
pop
xchg
mov
cld
add
xor
push
pop
frstor
dec
add
popa
mov
test
add
adc
push
ds
or
imul
lods
cwtl
je
adc
mov
fistps
or
push
and
mov
inc
mov
cli
sub
fsubrl
es
test
lock
or
popa
push
enter
inc
ret
and
pop
xchg
testb
pop
iret
xchg
or
or
pop
repnz
cld
cld
push
add
lret
add
inc
mov
mov
stos
stos
sti
lods
leave
mov
cmpsb
dec
and
mov
inc
sbb
adc
adcl
shl
daa
addr16
dec
xchg
pop
imul
pusha
cs
scas
fsubrs
mov
lods
mov
and
push
dec
fisubl
mov
out
sub
add
dec
cli
mov
pop
es
adc
jecxz
push
inc
jb
mov
cmp
and
out
test
inc
mov
test
cmp
add
sub
mov
movl
pop
rcrl
push
mov
cmpb
sbb
pop
xor
jo
jne
jecxz
aad
icebp
push
sbb
out
cs
lcall
cwtl
leave
push
ret
mov
mov
test
movl
push
mov
lods
inc
in
push
pmaxsw
sbb
jle
leave
shlb
cli
inc
int
adc
dec
hlt
xacquire
adc
jb
xchg
xchg
fdivs
push
test
mov
lock
lods
test
imul
movsb
push
pop
or
sbb
movsl
push
sti
clc
sub
iret
lock
mov
popa
push
loopne
and
je
cmpsl
mov
js
push
testb
out
movsb
dec
mov
xchg
inc
aas
jle
mov
xor
enter
cmp
push
or
movb
js
fndisi(8087
call
imulb
sbb
das
pop
mov
aaa
sbb
pop
xchg
mov
mov
push
loope
jle
inc
and
nop
and
sbb
in
mov
jne
sbb
test
mov
in
jae
mov
xchg
xor
je
test
ret
jge
fdivl
xor
into
sbb
mov
push
inc
or
iret
pop
mov
bound
or
lock
loope
out
popa
add
inc
sub
out
imul
and
outsb
sub
addb
add
ficomps
mov
mov
fstpl
and
test
iret
sub
add
test
sub
ret
int3
push
jbe
lds
add
adc
xchg
iret
dec
dec
add
inc
push
jo
aas
push
adc
pop
sub
rcl
sbb
or
enter
pop
jnp
push
push
sti
lret
mov
and
mov
fnstcw
sub
jp
fdivs
notl
outsl
cmp
mov
and
stc
mov
je
das
pop
push
sahf
clc
lahf
imul
push
mov
xchg
jmp
or
stos
sti
mull
mov
sbb
test
sahf
movsb
xlat
dec
xor
stos
xchg
rclb
bnd
aaa
fistl
sub
pop
push
ret
test
jbe
cmp
mov
pusha
or
and
pop
stos
sarl
in
xlat
wrmsr
or
jp
fistl
mov
das
ret
repz
pop
adc
adc
cmp
std
jo
adc
sub
adc
push
lods
sub
mov
jl
xlat
pop
jge
lret
jo
sub
add
pop
jnp
lods
add
cmpsb
lock
cs
gs
int
not
pop
xchg
imul
push
push
jne
mov
ret
adc
ret
scas
mov
out
aad
sahf
shl
adcl
mov
shll
cld
pop
out
xchg
xor
jo
inc
xchg
subl
aad
push
mov
sbb
cmp
mov
rcrl
xor
in
es
clc
into
mov
inc
pop
orb
mov
sbb
out
leave
jns
push
mov
pop
and
push
push
das
mov
push
inc
pop
sub
mov
dec
cmp
lock
sbb
scas
in
loopne
je
int
std
push
sbb
mov
fidivs
ja
mov
and
out
fiaddl
dec
xor
sarl
xchg
pop
out
dec
pop
push
mov
adc
leave
dec
cmp
stos
into
dec
sbb
clc
sahf
or
jl
mov
inc
negb
ss
aam
pop
mov
orb
ds
mov
dec
aad
popf
ljmp
mov
sub
jge
je
icebp
jge
sbb
fistpll
ret
pushf
scas
xor
add
int
sbb
sbb
movsl
sub
vorpd
bound
mov
add
dec
inc
jae
push
add
insb
dec
lcall
push
sbbb
inc
pop
into
and
roll
in
mov
cltd
sbb
lock
pop
sub
pxor
lea
cmp
fistps
lock
ljmp
add
sub
outsl
mov
shll
xchg
xor
push
iret
jnp,pt
fildl
out
inc
hlt
cmp
lock
cmp
jmp
iret
pop
adc
push
jne
xor
mov
pop
out
push
cwtl
mov
aad
inc
xor
pop
shl
push
rorb
outsb
popf
dec
mov
dec
jns
ljmp
push
sub
jle
push
fsub
orl
ja
pop
adc
mov
cltd
mov
scas
mov
mov
outsl
inc
dec
xor
ret
sub
mov
out
jecxz
adc
push
outsb
push
jns
fdivl
lcall
push
mov
and
mov
mov
pop
sahf
arpl
lret
cmp
mov
inc
cltd
add
pop
push
fs
and
dec
sti
sub
lock
sub
cmpsl
xor
scas
lcall
and
jb
loope
sbbb
xchg
xchg
sbb
push
filds
or
pop
aam
dec
pop
loope
and
mov
cmp
inc
jmp
addr16
mov
dec
leave
das
js
mov
clc
pop
rclb
mov
sbb
dec
fdivrp
dec
cwtl
jmp
test
or
loope
int3
cmc
test
mov
and
scas
pop
in
push
add
lock
jns
ror
inc
and
adc
out
sbb
mov
rcrl
xchg
jae
out
jg
idivb
pop
rcll
mov
cmp
leave
or
dec
adc
cmp
cli
icebp
pop
inc
lods
outsl
mov
fcmovb
mov
jae
repz
xorb
in
sbb
and
mov
adc
xor
xor
aam
cmpl
dec
mov
in
inc
or
adc
int
cwtl
aaa
clc
jo
shlb
add
outsb
push
movsb
pop
imul
sub
js
sbb
mov
mov
gs
sub
push
sbb
addb
add
data16
outsb
sub
push
nop
sahf
shl
lods
xor
jle
mov
mov
dec
mov
jle
jno
mulb
cmp
adc
mov
clc
and
pop
shrl
jmp
mov
sti
xchg
shrl
pushf
sarl
adc
inc
lds
std
stos
mov
lods
cmc
lods
pushf
repz
hlt
pop
pop
mov
add
jg
ret
rclb
sub
jne
in
cmp
cmp
cld
data16
xchg
cmp
mov
sbb
mov
hlt
pop
aas
movsb
bound
xchg
jp
jns
jg
mov
or
dec
xchg
xchg
mov
xlat
scas
push
sub
mov
popa
mov
inc
inc
dec
pop
shrb
adc
or
roll
inc
add
movsb
jnp
repz
push
jmp
or
insl
mov
mov
or
imul
xor
dec
and
pop
outsl
cmc
sbb
lock
js
leave
test
rcll
adc
mov
xor
aaa
sbb
rcrl
aam
mov
and
loop
mov
sarb
mov
stos
dec
or
adc
enter
jl
and
dec
or
or
or
mov
lock
jmp
pop
cmp
sbb
xchg
push
pop
xor
jp
mov
sub
mov
es
xor
scas
outsl
cmp
mov
arpl
ss
xchg
xchg
test
dec
outsb
aam
stos
popa
out
test
gs
jne
pop
out
jae
inc
and
fwait
sub
sbbl
jne
mov
mov
pop
enter
dec
mov
xchg
cld
inc
test
adc
mov
add
out
test
mov
jns
cld
adc
filds
xchg
mov
jg
sub
imul
call
adcb
mov
lea
dec
push
mov
pushf
pop
xchg
shrb
je
fadds
das
psadbw
lds
mov
cmp
loopne
and
pop
mov
push
popa
inc
lea
lret
sbb
and
add
add
lock
ljmp
mov
dec
mov
bound
js
cmp
pop
or
movsl
push
sub
popf
or
push
adc
test
sbb
dec
pop
icebp
adc
push
or
push
mov
sub
adc
imul
inc
lods
pop
mov
cmp
dec
adc
cmp
outsl
add
sbb
movsl
pushf
mov
mov
fwait
std
xlat
mov
cmpb
xchg
mov
int3
pop
xchg
ja
and
inc
push
mov
cmp
cmp
lods
add
dec
jg
adc
add
and
pop
dec
mov
or
dec
jp
pop
fucomp
xchg
push
test
push
gs
rol
icebp
es
mov
adc
cmp
stc
adc
ret
xrelease
pusha
mov
sar
pop
insb
jns
movsl
test
and
stc
movsb
mov
cmp
inc
roll
cmp
dec
into
add
repz
mov
sti
mov
mov
cmc
test
push
jbe
clc
xor
repnz
xor
fwait
mov
add
sub
test
inc
jo
and
jae
mov
stc
mov
into
sahf
sahf
lcall
lahf
int
into
loop
sub
enter
dec
jno
and
add
adc
xsha1
cmpsb
pminsw
fisubrl
xchg
inc
fsubr
dec
mov
cmc
push
data16
inc
in
adc
push
dec
add
add
cmp
lret
mov
repnz
xor
pop
dec
xlat
stos
call
inc
jae
xor
sub
scas
inc
cmp
and
outsl
stos
es
mov
xor
adc
loope
shll
out
popf
xchg
popf
sbb
xchg
fsubrp
dec
add
sar
push
fcmovb
add
lcall
sub
sub
lea
cli
inc
mov
mov
xchg
scas
cltd
push
mov
popf
outsb
outsl
jae
push
pop
sub
jns
pop
mov
adc
jae
jnp
les
int3
dec
jbe
mov
fmull
xchg
insl
push
lret
add
jo
int3
shrl
mov
pop
ljmp
lcall
sub
mov
les
and
lods
mov
dec
or
lret
setnp
fcomps
xor
je
mov
jae,pt
lcall
add
into
sub
adc
popa
repz
jmp
cmpsl
jb
cmp
test
mov
cwtl
bound
xlat
inc
lods
inc
cmpsb
ret
mov
xchg
mov
lret
leave
out
stos
sub
or
leave
stos
data16
insl
adc
inc
add
and
test
cli
jecxz
mov
repnz
xor
mov
cmc
mov
push
mov
pop
cmp
mov
jne
enter
adc
mov
popf
push
testl
hlt
movsb
test
push
jne
inc
outsl
push
jno
sbb
sub
or
mov
mov
lret
addl
aaa
jbe
movl
pop
out
lock
xor
xchg
xor
call
fldt
repz
shrb
ljmp
and
lcall
repz
pop
push
pop
xchg
stos
pop
inc
js
cmc
nop
or
and
out
mov
lret
jb
ficoml
loopne
sbb
ss
rcr
dec
rolb
fistpl
pop
mov
adc
push
inc
js
dec
lds
lock
loope
aaa
nop
ret
sarl
icebp
scas
lea
jp
mov
sub
sbb
mov
or
jge
push
adc
cmpsb
xchg
inc
dec
std
hlt
ss
insl
add
das
bound
adc
in
aaa
dec
pop
js
dec
shrb
into
addr16
xor
push
js
outsl
adc
cmp
jo
dec
mov
jl
mov
pop
aam
jb
mov
ljmp
sbb
pop
icebp
inc
cmpsl
fcmovnu
ljmp
ljmp
sbb
test
push
inc
jnp
dec
mov
aas
cmpsl
andb
scas
xchg
lds
mov
cs
mov
ret
cmp
repz
std
out
fistl
mov
push
mov
es
sub
decl
adc
pop
mov
jne
daa
js
dec
fistl
fwait
mov
fs
int
add
xchg
sbb
xchg
push
sub
stc
lret
cmpsb
sbb
cmpsb
xlat
enter
xlat
add
inc
daa
add
les
rcll
es
into
in
subb
dec
test
not
push
mov
aam
arpl
sti
xor
cli
ljmp
bound
shl
pushf
imul
outsb
les
or
imul
push
data16
xchg
inc
sti
sub
push
dec
mov
inc
and
fidivl
mov
sub
movl
es
in
mov
mov
pop
stos
jmp
outsb
or
xchg
lcall
cmp
sbb
mov
pushf
lcall
cmp
lret
mov
push
rolb
or
insb
scas
subl
mov
lock
push
clc
stc
mov
loop
jl
pusha
hlt
movl
mov
jns
aam
mulb
or
inc
sub
rcll
ret
or
or
insb
xchg
cli
mov
and
jbe
or
dec
mov
lock
and
std
jmp
xchg
lods
loopne
push
popa
xchg
or
xor
and
or
jl
xor
loop
jbe
jo
xchg
pop
imul
add
fucomip
int
adc
jbe
ret
xor
adc
into
xchg
mov
inc
pop
clc
sbb
divl
pushf
into
ret
out
aad
es
lock
adcb
fcoml
jnp
je
cld
rcrb
xorl
insb
jecxz
rcl
test
adc
pop
xor
mov
or
push
out
shl
cmp
arpl
push
loopne
lods
mov
adc
add
add
sub
jne
stos
outsb
ljmp
dec
and
inc
sub
xor
add
sbb
push
cmc
pop
cli
inc
aaa
push
mov
adc
jmp
jge
adc
nop
xchg
out
mov
sub
icebp
jnp
mov
and
pop
jo
imul
jnp
aad
cli
dec
jmp
mov
pusha
imul
sub
in
jmp
jne
dec
call
test
scas
jo
xor
imul
sub
int3
add
jno
push
pop
sar
les
mov
mov
out
fstpt
insb
fcomps
pop
test
lahf
mov
mov
push
pop
or
std
pop
xor
cmp
test
movsb
xchg
sub
jp
outsl
test
xor
mov
out
inc
cli
xor
xchg
cmp
movl
and
jns
lods
jp
cmpl
enter
dec
cmp
mov
add
sbb
into
jp
cmp
aad
ds
mov
mov
jne
shrl
test
mov
hlt
jp
std
mov
gs
faddl
out
jp
daa
xor
mov
pop
push
pop
pop
fldt
xor
xchg
fs
and
icebp
sahf
mov
div
movsl
jg
and
sbb
nop
ss
push
sbb
fnstsw
xchg
add
jae
hlt
jg
into
and
xor
and
rcl
xchg
add
mov
mov
stos
dec
push
out
jp
xor
arpl
cmp
test
cmpl
loopne
lret
clc
test
mov
jno
and
push
adc
and
test
orl
mov
test
xor
addl
orb
stos
iret
fistl
sbb
dec
mov
rcrl
scas
cmpl
mov
xchg
push
xchg
pushf
inc
adc
sub
or
cmp
jns
sbb
push
lods
sub
xor
lods
lods
insb
and
inc
jne
loopne
lahf
clc
out
mov
outsl
sbb
cld
lds
mov
fxch
dec
cs
ret
cwtl
dec
jns
push
pushf
pop
mov
lods
pop
and
js
or
outsb
sti
nop
xchg
adc
pushf
jg
je
fs
jbe
out
inc
in
mov
sub
or
insl
push
jo
test
shlb
add
aam
js
sub
mov
test
xchg
mov
xchg
fcmove
lret
dec
pop
shlb
popf
imul
xor
loop
cmp
sbb
out
jno
sarl
push
cwtl
add
adc
adc
mov
bound
fisubrs
mov
icebp
fs
mov
add
stos
xorl
sbb
mov
sahf
push
sub
stc
ds
daa
lock
mov
sbb
pop
or
xor
mov
jb
pop
into
inc
dec
lret
mov
inc
push
and
test
aam
cmp
xchg
mov
adc
shrb
mov
movsb
jnp
nop
daa
cmp
loope
ret
movl
addr16
fsubrs
xchg
adc
lea
mov
add
fbstp
out
test
cmp
sbb
mov
cwtl
or
push
pop
aam
es
andb
push
fnsave
ficoml
out
pop
pushf
adc
loopne
ret
xor
mov
fbstp
cmp
dec
mov
repnz
pop
mov
mov
inc
cmp
repz
xchg
test
sub
cmpsb
sub
push
mov
mov
clc
add
inc
ss
add
push
test
mov
mov
popl
loop
cmp
stc
shll
ret
cmp
mov
jno
sbb
dec
mull
sub
lods
inc
push
daa
test
and
inc
and
xor
inc
adcl
mov
popa
outsl
lock
fistps
push
cmp
les
xor
mov
out
pop
jno
loope
push
loop
ror
sahf
ljmp
imul
xlat
mov
cmp
and
xchg
xchg
cmp
pop
mov
dec
scas
sbb
fimull
cmpsb
cmc
add
enter
adc
lahf
out
cwtl
mov
mov
bound
pop
push
cmp
adc
pushf
test
lret
pop
xor
inc
js
push
test
xor
test
test
jmp
add
divl
stc
or
inc
dec
call
outsb
movsl
aad
pop
cli
mov
push
jno
aaa
in
push
lcall
inc
cltd
xor
jno
and
test
aaa
imul
xchg
ret
cmp
pop
aas
mov
pop
cltd
fnstsw
dec
aas
outsb
imul
mov
sub
dec
aam
loope
adc
add
ljmp
xchg
push
mov
xchg
je
cwtl
mov
adcl
mov
adc
out
test
mov
sub
sub
test
adc
lock
out
mov
into
and
ljmp
insl
cmp
push
mov
mov
xchg
push
jl
bound
inc
popa
call
jns
cli
stos
nop
sub
filds
jno
adc
adc
and
sbb
orb
jl
and
imul
sbb
cmc
or
popf
lods
js
lret
xor
sbb
mov
pop
xchg
inc
push
inc
lds
adc
and
sub
or
mov
sbb
adc
jmp
clc
out
jmp
mov
xor
xor
sbb
clc
push
cmpsb
roll
push
inc
mov
repz
or
push
mov
add
lahf
iret
sub
nop
xor
out
jmp
jae
ret
fdiv
loope
xlat
sub
aaa
pop
or
mov
les
ss
lods
out
mov
into
std
xchg
mov
jne
inc
jno
pusha
push
lods
hlt
iret
inc
mov
in
pop
ja
push
mov
dec
mov
jno
adc
pop
pop
fdivrs
cmpsb
mov
pop
jnp
fs
add
ljmp
adc
and
loopne
mov
out
sbb
daa
sub
loop
repnz
out
enter
cmpsb
add
push
in
shlb
jb
dec
ret
sub
dec
mov
repnz
fsubs
mov
sub
shrb
out
shlb
stc
pushf
lock
add
sbb
cmc
add
fucompp
out
mov
mov
inc
inc
mov
dec
hlt
dec
scas
sti
xchg
push
cs
ss
and
hlt
push
mov
ret
push
xchg
icebp
cmpsl
mov
addb
push
les
jmp
subb
add
mov
sub
mov
cvtps2pd
aas
push
hlt
mov
mov
mov
fdivl
xor
push
and
jmp
lahf
in
sarl
cmp
cmp
jbe
pop
arpl
jge
sub
fucomip
sub
xchg
mov
repz
divl
inc
mov
jae
fs
push
xor
mov
test
lret
fnstsw
mov
mov
mov
orb
ret
adc
scas
pop
pop
pushf
subb
out
rol
fildl
pop
movsb
mov
pop
mov
mov
call
xor
jne
scas
add
add
adc
dec
push
pop
psubusb
fisubl
mov
push
mov
les
push
push
or
pop
bound
das
stos
adc
xchg
jbe
mov
mov
jno
movsb
or
and
lods
inc
insb
stos
ds
xchg
xor
aad
fneni(8087
jne
inc
in
sarl
cli
and
test
dec
out
dec
aam
fisttpl
arpl
xchg
pop
push
adc
jecxz
lcall
aaa
ficoms
adc
pop
push
push
xchg
sbb
fucomip
jp
push
add
mov
pop
dec
mov
or
sub
std
enter
je
rcll
mov
pop
jp
test
cmp
adc
outsl
fucomp
scas
push
dec
popa
repz
mov
mov
mov
jl
ds
andb
in
orb
ror
shlb
nop
cwtl
rcll
lcall
pop
cld
pop
inc
push
sbb
adc
sbb
mov
ret
addr16
mov
test
push
mov
insb
dec
push
fdivrl
rorl
cli
jge
jge
dec
fbstp
mov
leave
pop
cs
enter
mov
cmc
dec
aad
dec
adc
rorl
adc
cs
and
jmp
push
xchg
xchg
fidivrl
mov
sub
loop
jns
jo,pn
imul
scas
dec
push
and
sbb
sub
push
cmpb
xchg
dec
cld
xchg
xchg
ds
out
sbb
dec
cmp
rcrb
cmp
int
xchg
xor
daa
mov
imul
into
mov
cvtdq2ps
dec
cld
push
dec
lcall
add
ret
movsb
rol
adc
dec
insb
clc
into
cmpsb
movsl
adc
aas
push
das
mov
sbb
jbe
mov
or
or
lea
das
arpl
fnop
addr16
sub
lcall
rorl
cmp
and
pop
push
test
rclb
cmpsl
aam
add
push
ja
je
xchg
adc
mov
mov
call
mov
imul
sti
ja
call
inc
mov
jp
mov
imul
fcomp
jmp
cmpsl
xor
sub
test
addl
stc
dec
ss
and
lds
out
jecxz
push
add
hlt
cmp
xor
jp
adc
push
lods
push
icebp
cmp
push
iret
test
daa
pop
jbe
add
pop
jmp
jb
shrl
add
or
test
or
stos
jbe
and
enter
inc
rorl
add
and
and
jecxz
and
mov
imul
inc
subl
bound
or
rcrl
or
jp
movsl
insl
out
aaa
mov
leave
js
push
inc
ret
ss
push
mov
mov
pslld
insl
jg
fs
jbe
and
iret
andl
rcrl
and
mov
cli
ret
fldenv
adc
ja
mov
xor
insb
jmp
leave
addr16
int
test
int
jp
add
hlt
pop
jbe
lcall
test
xor
jne
jmp
push
loop
je
rolb
mov
push
push
xchg
ficompl
adc
sbb
mov
lahf
push
add
push
sbb
cwtl
rcll
dec
ljmp
sbb
push
xchg
in
cld
cmpsb
inc
dec
push
sub
fstl
sti
adc
repnz
xor
dec
ljmp
mov
lret
sub
xchg
mov
add
out
mov
mov
arpl
push
or
mov
ret
in
jmp
cltd
jbe
fisubrl
cltd
in
xlat
popa
cmp
xchg
lods
scas
adc
jae
pop
pushf
jmp
dec
jo
sbbl
subl
mov
jnp
addr16
dec
aam
sbb
test
jne
lea
jno
es
jmp
push
adc
mov
lock
mov
sahf
subb
mov
inc
mov
jns
or
dec
test
push
mov
mov
mov
mov
sub
pop
aas
mov
je
mov
sahf
sbb
mov
arpl
sub
or
dec
repnz
je
add
enter
cld
popa
mov
sbb
dec
sbb
jne
popa
xor
ror
ret
sbb
test
jae
adc
in
push
lret
ficoms
xchg
adc
rcr
fcoms
lret
aam
push
dec
stos
add
arpl
mov
pop
push
xchg
stos
inc
lods
xchg
fisubl
and
jp
push
and
ret
lds
dec
insb
mov
jnp
test
mov
insb
xchg
dec
ja
ljmp
aam
dec
push
aaa
jmp
and
fiadds
and
dec
insb
pop
test
lahf
mov
push
push
push
mov
cmpsb
cs
sbb
inc
gs
cltd
inc
add
addr16
sbb
mov
imul
or
addr16
das
mov
xchg
pop
lds
sbb
adc
sahf
mov
adc
jmp
jg
ret
popf
inc
arpl
faddp
jae
adc
lods
push
movsl
test
cli
sbb
xlat
lds
dec
out
out
pop
jge
lea
jp
subl
push
rorb
dec
arpl
push
sbb
add
lods
jb
loope
je
imul
or
xchg
lret
mov
shl
decl
xchg
adcl
cmpsb
push
mov
scas
cmc
jo
pavgb
cltd
fisubl
mov
sahf
mov
fwait
stos
push
mov
sbb
fnstcw
xchg
xchg
lea
pop
xor
add
insb
push
inc
dec
jg
and
idiv
or
xor
fiadds
or
jo
divb
and
cmpsb
mov
sub
adc
dec
mov
push
inc
fistpl
rcll
jne
test
ret
xchg
sbb
leave
xchg
sub
adc
xor
adc
and
dec
ret
loopne
decl
mull
adc
iret
fsubp
cwtl
out
cmp
cld
lods
and
mov
test
push
sbb
push
arpl
xchg
pop
out
and
out
pusha
pop
loopne
sub
jmp
test
test
mov
adc
stos
ss
pop
push
xchg
or
lods
adc
popf
in
sub
mov
fistl
xchg
movsb
adc
std
sbb
push
jp
shlb
inc
or
mov
arpl
mov
movsb
je
ljmp
seto
sub
hlt
and
xchg
pop
ss
mov
out
leave
sub
xlat
fs
and
xchg
sarb
push
enter
mov
cmp
xor
ret
and
and
in
sub
fidivrs
sub
and
dec
pop
fistpl
mov
fwait
inc
into
jae
in
pop
cmp
push
popf
clc
xchg
or
adc
mov
jmp
adcb
aaa
imull
mov
ljmp
mov
and
mov
icebp
adc
in
mov
jl
rorl
int
jne
add
pop
insb
ljmp
in
imul
adc
lahf
ss
and
pop
rcrl
or
fidivl
out
mov
inc
in
mov
rcr
push
lods
xor
shrl
or
sub
sarl
ljmp
jg
push
popa
jle
leave
scas
int
cwtl
jp
aad
scas
xchg
mov
cwtl
and
aas
fdivrs
cmpsl
test
leave
pop
sub
js
andb
shl
out
inc
ss
sbb
enter
xchg
jg
test
js
or
pop
xlat
movsb
movsb
and
popa
push
mov
push
cmp
or
addb
inc
jb
pop
sub
sbb
or
pop
or
jno
in
inc
loop
add
and
aad
in
fsubr
pop
cmp
insl
xor
cs
cmpsb
repnz
pop
adc
push
test
xor
mov
clc
xchg
jno
data16
add
int3
cmp
add
fwait
jnp
or
pop
cmc
cmp
mov
mov
jle
mov
cmpsb
adc
cmp
insb
jbe
rolb
jnp
div
call
js
stos
and
mov
xchg
xchg
jp
lahf
pop
jp
mov
cmc
and
push
dec
cwtl
imul
lahf
and
xlat
cmp
enter
test
imul
imul
movsl
fisttpll
iret
push
mov
jp
mov
adc
pop
imul
mov
repnz
push
adc
mov
scas
repz
es
dec
pop
pushf
insl
sub
orl
addr16
sub
nop
call
imul
mov
fsubl
in
inc
in
lods
sahf
mov
test
pop
dec
add
jns
outsl
inc
hlt
mov
int3
ret
sti
outsb
dec
push
jo
inc
cltd
or
popf
pop
pop
sti
int
jb
lock
xor
xor
ja
sti
fcmovbe
inc
xor
pop
mov
or
test
jno
fwait
pop
pop
mov
adc
out
aas
daa
pop
dec
xchg
cmp
icebp
stc
jb
out
and
mov
cmpsb
cmc
jns
lret
jl
push
lcall
loopne
mov
jb
lret
add
pushf
mov
cmp
fidivrs
pop
sub
aas
or
das
mov
adc
add
loopne
pop
inc
mov
jmp
js
push
pop
mov
push
test
xchg
js
xor
rolb
mov
icebp
xchg
xor
pop
aad
mov
cmp
in
mov
or
adc
cwtl
insl
cmp
in
mov
aas
fwait
shrl
push
inc
jge
loope
inc
mov
daa
clc
or
mov
mov
outsl
decb
cmp
push
idivb
push
cmpsl
lods
scas
sbb
aaa
dec
pusha
fcmove
faddl
repnz
mov
jg
out
daa
test
cmp
pushf
adc
and
xor
in
inc
xchg
inc
mov
mov
cwtl
imul
rcr
mov
sub
vaddsubpd
cld
mov
adc
adc
lea
xchg
out
cmp
push
jnp
rorb
fmul
push
push
push
icebp
flds
out
mov
jo
js
xchg
push
mov
sbb
sti
or
xchg
cld
cmp
shll
pop
lods
insb
xchg
es
icebp
mov
icebp
cmpsl
shrb
mov
or
in
in
push
mov
dec
ret
xlat
clc
das
dec
pushf
imul
cmc
inc
es
dec
aad
add
call
outsb
push
mov
adc
xor
sti
xor
mov
push
push
pusha
mov
cwtl
rcrl
inc
xor
jge
add
adc
cmp
add
nop
adc
add
jle
sub
in
je
jo
mov
repnz
cmp
loope
jno
jg
arpl
xchg
push
ss
mov
cld
mov
movb
inc
loopne
loopne
sbb
sbb
icebp
add
cli
push
shlb
imul
rcrb
and
loope
das
out
xchg
inc
js,pt
add
sbb
adc
pop
push
lods
sbb
jmp
dec
or
dec
aad
idivb
mov
daa
ficompl
sub
arpl
daa
inc
sbb
ljmp
jb
sti
add
cmp
or
inc
xlat
fwait
bound
mov
call
fisubrs
int
and
icebp
mov
sbb
xchg
icebp
lcall
and
push
idivb
mov
gs
lret
fiaddl
std
imull
popf
cmp
cltd
stc
shl
call
es
pop
sbb
mov
mov
sub
pop
xchg
and
aas
subb
pop
and
push
xor
popa
jp
mov
lock
jb
daa
mov
jp
pushf
and
xchg
dec
push
roll
scas
sbb
shlb
dec
and
int
js
scas
cmp
inc
jl
sbb
jo
xor
pusha
mov
xor
inc
popf
xchg
out
dec
test
mov
jmp
xor
std
mov
cmpsb
add
out
insb
mov
jns
xchg
mov
xchg
cltd
cltd
cld
jle
gs
aam
push
bound
xchg
stc
subl
les
push
add
loope
pop
cmp
cld
jbe
into
mov
or
jmp
push
ret
cltd
cmp
pop
ret
pushf
cmp
mov
out
push
shrl
mov
xchg
lea
xor
std
leave
test
sbb
sub
inc
fwait
mov
test
daa
push
mov
jne
ffree
cmp
mov
repz
fstpl
test
cmc
enter
inc
ret
xor
add
arpl
sub
aaa
push
cmpl
iret
adc
xor
insb
jecxz
dec
movsb
mov
mov
js
push
jno
jp
pusha
dec
dec
jno
daa
and
stos
lcall
movsb
xor
xor
fnstcw
jmp
jo
and
mov
cmp
jecxz
push
cwtl
jp
lea
dec
fildll
pop
sbb
test
mov
xor
mov
mov
mov
bound
push
stos
fldenv
shll
pop
in
das
rol
testb
fst
inc
rol
fsubp
insl
insb
adc
xchg
popa
test
jecxz
inc
dec
sbb
jecxz
xorb
jb
sub
pop
xor
sub
mov
adc
fcmove
fwait
popa
pushf
dec
in
sbb
outsb
add
and
add
push
cmp
arpl
mov
dec
jle
xlat
filds
xchg
sub
push
jle
mov
push
adc
mov
push
push
mov
mov
ret
mov
push
subl
mov
mov
xorps
xchg
xchg
mov
rcrb
stos
mov
sbb
lds
add
push
outsl
pop
inc
popf
push
mov
jnp
ja
ret
fldenv
sbb
dec
int3
sbb
adc
pop
add
xchg
dec
in
push
cmpsb
sbb
cli
daa
cmp
dec
push
aas
pusha
jb
jno
inc
inc
push
fwait
jge
popf
sbb
cmovno
xor
stos
push
insb
jmp
push
daa
or
sub
xor
lock
fsqrt
in
fisttpl
enter
inc
cmpsl
fsubs
imul
int
xor
iret
push
roll
push
pop
xchg
adcl
or
mov
push
mov
aas
sub
ds
fadds
sbb
mov
lds
fstpt
and
fisubl
push
out
rcl
stos
and
loop
pop
icebp
push
adc
mov
adcb
mov
mov
jns
pushf
jb
sub
jmp
adc
insb
sub
stos
push
xchg
lods
adc
jmp
dec
push
jp
push
in
and
stos
sbb
sbb
push
pop
and
je
dec
or
cmp
xor
or
aam
sub
jle
add
popa
sub
xchg
cmp
fwait
mov
adc
sub
jl
test
cmp
test
lds
popa
and
adc
out
pop
fistl
sbb
and
and
insb
jae
adc
push
insb
popl
fiaddl
mov
or
std
cmp
clc
sub
lock
fcmovnb
push
mov
loope
test
mov
jb
add
icebp
inc
test
xchg
es
adcb
or
lds
adc
inc
cmp
xchg
jo
adc
lods
pusha
lock
inc
push
and
lret
out
fidivrl
mov
idiv
iret
cli
dec
fs
sub
sub
dec
inc
xor
push
jg
std
add
sub
push
in
cmp
enter
mov
lcall
mov
jne
mov
shll
call
sub
push
je
int
jbe
xor
sub
cs
dec
popa
and
add
jns
jb
btc
sub
xchg
dec
out
pop
jmp
xor
fiaddl
movsb
add
pop
sbb
dec
shll
sbb
sti
push
cmpsb
hlt
cmp
jne
daa
mov
lahf
mov
sar
ss
enter
inc
cwtl
and
aad
sbb
and
jp
movsl
xchg
fsubp
lods
mov
mov
pop
stos
add
jae
xor
cmp
int3
jle
shlb
je
xor
sub
cmpsl
shl
jbe
and
ret
fsubl
inc
jo
shlb
cmp
out
xchg
add
insl
stos
lock
dec
xor
scas
rolb
sahf
mov
mov
cmc
dec
mov
fldl
cmp
mov
push
mov
iret
pop
lods
iret
and
out
push
out
out
add
cld
inc
cmp
adc
and
out
stc
int3
dec
xchg
sub
pop
enter
stos
iret
or
sbb
and
mov
cmc
mov
add
push
inc
sub
inc
push
mov
add
int3
pop
mov
into
sub
in
int
jl
gs
call
push
adc
xchg
mov
xchg
jno
or
scas
sahf
mov
sub
push
cmp
xchg
out
or
xchg
js
mov
push
push
dec
or
imul
movsl
xor
sbb
sahf
sbb
repnz
inc
and
shll
push
into
push
cli
inc
pop
fiadds
mov
enter
push
xchg
jnp
inc
xor
xchg
test
sbb
loopew
adc
aad
fldl
adc
adc
and
mov
mov
pusha
call
inc
ss
fstps
ljmp
ret
and
lret
xchg
jl
gs
stos
mov
mov
stos
mov
test
sub
test
cmp
ljmp
hlt
or
cmp
jmp
cs
stos
jo
fwait
mov
push
mov
in
mov
dec
or
pop
mov
movsl
mov
mov
cmc
and
and
inc
pop
push
ret
adc
into
icebp
stc
jno
inc
sbb
xchg
sbb
nop
xchg
add
mov
mov
push
adc
sub
lods
dec
repz
scas
subw
icebp
jno
test
aas
addr16
jo
sahf
pop
leave
shlb
in
jmp
dec
or
mov
sbb
lds
pop
rcrb
scas
loope
lret
stos
xchg
push
xchg
cmp
in
pop
lret
mov
push
mov
mov
jns
ds
cmp
pop
dec
inc
test
fwait
pusha
ljmp
bound
mov
jecxz
xlat
test
test
daa
add
add
aad
mov
insl
or
daa
in
lret
out
and
inc
mov
inc
or
scas
xchg
cmc
sbb
and
out
imul
fstpl
mov
push
sbb
aad
push
push
cmp
adc
popf
mov
icebp
test
mov
mov
xchg
sbb
enter
fmuls
outsb
xlat
xchg
and
mov
jne
jnp
cmpsl
ret
sbb
movsb
shlb
cmp
xor
jmp
xor
cmpsb
mov
lds
mov
inc
jge
adc
add
cmpsb
xchg
insb
fistl
sbb
in
scas
aas
pop
mov
aaa
inc
or
jns
pop
test
nop
je
loope
dec
ror
lock
ret
xor
divb
xchg
packssdw
pop
push
daa
jg
mov
xchg
test
xor
in
loopne
jae
sbb
lahf
pop
dec
lock
and
fs
jle
movsl
lahf
js
and
xor
pop
push
jbe
or
inc
adc
dec
jl
sarl
arpl
push
xor
sbbl
mov
add
rclb
es
xlat
iret
fstp
jns
xor
mov
mov
sub
and
ljmp
std
sbb
jmp
shll
add
or
cmp
adc
pop
fcmove
lret
rorb
inc
pop
fistl
sbb
and
mov
fistps
push
sub
jb
lea
push
adc
cmc
popa
push
int
movsl
aam
pop
lahf
mov
les
je
pop
icebp
mov
punpckldq
cli
loopne
add
adc
cmp
pop
or
jecxz
sbb
add
cmpb
into
adc
fwait
sub
ljmp
dec
mov
push
repz
cmp
adc
cwtl
hlt
das
aas
orb
loope
subb
cmp
test
jns
pop
movsl
repnz
pop
xorl
pushf
sbb
rol
mov
test
ljmp
imul
hlt
jno
out
ds
aam
inc
jo
push
sub
add
xor
call
jnp
add
mov
or
xchg
and
jo
outsl
or
addl
adc
frstor
int3
jae
lahf
xor
fildll
mov
sub
add
jmp
dec
outsl
scas
hlt
aas
jno
outsb
jns
sahf
push
dec
scas
mov
and
xchg
mov
add
int
xor
mov
pushf
jecxz
iret
repz
lret
mov
fcomip
iret
sbb
jge
inc
pop
lds
jl
fsubp
sub
adc
sub
or
aaa
test
sahf
jle
or
lcall
nop
lret
lods
lock
add
xchg
mov
jbe
flds
xor
outsl
pop
add
push
xor
call
jae
inc
js
and
movsl
mov
cmp
jns
test
ficoms
je
jne
repnz
inc
xor
insb
sbb
repz
fucomip
aas
in
sbb
test
cmp
out
push
push
insl
dec
jnp
push
dec
jp
mov
and
flds
test
inc
mov
cwtl
pop
add
ljmp
lea
dec
fiadds
and
imul
out
stc
sbb
rolb
cmp
jecxz
dec
repnz
rcll
add
jb
call
stc
dec
mov
dec
dec
and
lcall
cld
aaa
les
cltd
pop
mov
xlat
dec
add
pop
pusha
sbb
es
test
negl
cmp
fdivs
shrb
push
inc
push
jb
push
cmpsb
jecxz
and
out
mov
sbb
mov
test
sub
lods
icebp
pop
aam
pop
into
push
dec
es
push
int
add
aam
pop
xor
push
adc
mov
inc
sbb
test
cld
mov
inc
xchg
push
fsts
push
xor
cmp
or
iret
mov
leave
xor
mov
lods
mov
xor
inc
cmc
jl
aaa
mov
mov
repnz
addb
mov
les
mov
push
sbb
sbb
das
add
fdiv
das
jg
inc
ljmp
clc
arpl
mov
sete
std
fildll
rorb
in
cmp
enter
push
sbb
xor
rcrl
xor
test
mov
and
icebp
push
in
sbb
add
mull
push
xor
cltd
cltd
aad
mov
loope
test
pop
push
push
bound
push
xchg
and
cmpsb
cmpsl
adc
out
call
stos
mov
lods
test
lret
ja
pop
nop
mov
pop
insb
pop
sub
fnsetpm(287
je
jns
adc
xchg
leave
insb
or
testl
adc
fldcw
leave
shll
cmpsb
sbb
or
inc
sbb
push
pop
and
imul
icebp
sub
or
xchg
jge
gs
stos
xor
push
push
xchg
mov
out
hlt
bound
repz
xor
xchg
repz
je
mov
push
xchg
int3
or
xor
je
stc
push
nop
shll
sbb
shrl
xor
negl
xor
test
add
mov
pushf
mov
or
cmp
sub
add
shll
jno
lods
fs
push
cmp
inc
fstps
ljmp
insl
xchg
mov
enter
cltd
mov
jb
mov
push
pop
mov
mov
push
sbb
mov
lock
adc
adc
push
mov
fs
fisubrs
push
jp
subb
mov
in
push
mov
shrb
dec
cltd
push
push
hlt
lods
jp
mov
push
test
or
push
jne
xchg
daa
cmp
sahf
inc
cs
enter
push
test
inc
cmc
test
ja
mov
sahf
into
add
test
insb
pop
sub
push
push
stos
mov
pop
mov
pop
test
add
xor
adc
mov
dec
les
test
fsubl
mov
ret
or
ds
stos
div
mov
test
fsubrp
popa
adc
dec
fists
dec
repnz
rcl
cmp
cmp
inc
enter
inc
popa
push
cmpsl
out
data16
adc
lods
aaa
cmp
or
jmp
sahf
mov
cmc
xchg
pop
mov
nop
out
jle
testl
pop
mov
dec
push
xchg
adc
ret
jge
mov
mov
sahf
test
inc
mov
filds
sub
xor
adc
cmp
push
jle
inc
push
pop
adc
pop
pop
push
inc
jge
cmp
lret
test
nop
es
mov
bound
int
jmp
sti
mov
movsb
js
jno
pop
cmp
aad
xchg
xlat
cmp
repz
repz
push
mov
pop
add
jecxz
int3
sub
xchg
pop
ret
cmpsb
mov
sub
lret
clc
fld
scas
ljmp
pop
out
cmp
imul
mov
xor
push
nop
rorb
dec
jmp
add
aas
pop
arpl
fadds
inc
cmpsb
aad
jecxz
pop
pop
loop
push
pop
mov
out
sbb
pop
movsl
mov
mov
je
pop
jp
dec
sub
xor
test
or
sub
stos
mov
add
jae
shlb
push
jo
sbb
pop
out
test
cli
and
lods
adc
pop
shrb
xlat
mov
cld
sbb
neg
mov
inc
xchg
daa
aas
sbb
int
loope
adc
adc
cmpsl
mov
lret
ja
adc
jg
push
lea
cmp
cmpsb
adc
xchg
xchg
xchg
out
bound
pop
ja
ja
push
mov
pop
push
xchg
popa
xor
adc
mov
cmp
repz
arpl
mov
dec
lds
sarb
pop
cwtl
push
data16
subb
int3
hlt
addb
test
adc
sub
sti
ljmp
imul
out
movl
pop
push
cmp
insb
mov
loop
push
xor
dec
sarb
mov
jl
ljmp
out
jnp
adc
rclb
out
add
inc
jne
test
pop
mov
jl
jnp
sub
out
adc
mov
imul
data16
imul
aam
ds
outsl
ss
fnstsw
mov
sub
out
fldcw
jnp
aam
sub
ljmp
ja
movb
int
dec
push
sub
jl
aaa
mov
adc
test
icebp
out
enter
sbb
dec
mov
leave
push
mov
pop
adcl
bound
in
mov
add
mov
xchg
push
xor
cmp
out
pop
mov
cmp
test
mov
jnp
pop
div
sbb
scas
iret
andl
das
fwait
mov
push
cmp
cmpsl
aaa
mov
sbb
stc
rcr
out
xchg
leave
dec
dec
push
add
enter
add
mov
sarb
into
inc
sahf
ljmp
es
sub
lods
xor
imul
and
sbb
leave
stos
enter
dec
dec
imul
cmpsb
pusha
sbb
xchg
adc
push
into
mov
mov
divl
test
xchg
inc
out
add
ficomps
jne
ret
int
pop
cmp
mov
std
push
push
fdivrs
mov
mov
andl
scas
and
xor
das
in
pusha
in
push
xlat
lds
daa
or
mov
adc
sub
fistpl
push
lret
xchg
adc
mov
add
imul
xchg
sub
rclb
sub
inc
nop
sbb
je
outsl
or
mov
xor
test
outsl
xchg
cmp
jbe,pt
int
adc
inc
cmp
movsl
pop
xor
popa
js
gs
mov
fidivl
adc
push
sub
aad
inc
test
aaa
pop
sahf
insl
lods
ret
loop
dec
ret
outsl
inc
pop
fiadds
jno
push
loopne
xorb
mov
jno
cld
xchg
fwait
cs
or
js
fnstenv
xor
jae
xchg
mov
ret
bound
cwtl
fwait
push
rolb
into
inc
jl
lahf
js
dec
or
jbe
sbb
jp
xor
and
sbb
push
adc
sbb
pop
repz
mov
jo
xchg
data16
mov
fsub
xchg
stos
sbb
int3
add
push
pop
aam
icebp
sbb
in
fidivs
pop
testb
cmp
mov
lret
lds
jo
fbld
jo
inc
fisubs
js
and
jno
add
imul
out
dec
lods
stos
push
inc
imul
pop
jnp
mov
or
cmp
stos
stos
inc
mov
fiadds
dec
mov
fchs
jg
and
ficomps
mov
negb
ss
add
insb
cmp
negb
cmpsl
mov
inc
cmp
es
movsl
leave
repnz
mov
jg
rorb
pop
inc
and
rcr
push
xchg
cld
mov
mov
sub
cmp
dec
adc
mov
cmpsb
sub
lcall
jmp
pavgb
mov
cmp
loopne
loope
aam
mov
clc
dec
lcall
aas
dec
mov
jp
gs
xlat
in
std
add
pusha
insl
xchg
in
cmp
push
pop
pop
arpl
push
iret
xchg
inc
add
cmpb
retw
fistpl
jnp
sub
int3
icebp
mov
adc
pop
les
add
pop
dec
push
pop
cltd
pop
incb
in
pop
cmp
test
xchg
mov
andl
call
xchg
imul
hlt
leave
sbb
in
fisttpl
fisubrl
loopne
movsb
jnp
daa
push
pop
ret
sbb
xchg
mov
sub
inc
icebp
or
xor
mov
mov
out
es
arpl
aad
pop
insl
insl
cli
les
cmp
stc
sub
cmp
call
sub
xchg
sbbl
push
pop
rcrl
rclb
sub
jbe
imul
cmpsb
rcrb
mov
pushf
mov
pop
fwait
out
add
popa
or
adc
push
xchg
repz
jp
iret
and
dec
pop
adc
jmp
fwait
xchg
repnz
movsb
xchg
jae
add
hlt
xor
mov
cmc
daa
mov
add
lods
bound
lds
xor
jns
jae
jl
dec
iret
insl
call
mov
adc
push
push
dec
and
repnz
inc
mov
sar
insb
rsqrtps
int3
mov
sub
mov
dec
xchg
xchg
movsb
divb
add
test
test
inc
mov
sbb
int3
xchg
addr16
add
jl
pop
rorb
int3
stos
fiaddl
or
test
dec
pop
aas
in
ljmp
xor
or
or
mov
jno
add
sbb
fdivrs
mov
negl
jae
cmc
push
hlt
js
cmp
inc
addl
fnstenv
adc
xchg
or
jle
pushf
pop
mov
repz
movsl
push
mov
arpl
sub
arpl
add
sbb
mov
lahf
and
fcoml
lods
cmpl
mov
cmp
sbb
loop
push
jnp
jl
lahf
mov
stc
and
add
pop
cmpsb
shll
sbb
mov
ljmp
subl
inc
cmp
sub
jns
fisubrl
or
pop
xor
mov
adcl
lods
mov
leave
sbb
insl
push
and
mov
cmc
adc
cmp
cmp
mov
mov
dec
xchg
daa
mov
pop
lods
arpl
outsb
inc
adc
inc
push
stos
fwait
sbb
dec
jg
cmp
mov
jge
ss
aas
xor
jle
inc
ja
pop
mov
mov
push
mov
mov
push
aam
and
test
sbbl
xchg
fldenv
push
fsubrs
aaa
pop
hlt
rclb
aad
xchg
or
out
negl
fcmovnbe
in
bound
imul
adc
mov
in
dec
xchg
xchg
sarl
mov
aas
jo
fstpt
and
cmpsl
push
ss
aad
push
sub
orb
push
xor
mov
inc
je
mov
fsubrl
jl
and
test
xchg
imul
cmp
enter
xchg
lock
push
shrb
xchg
pop
stos
mov
jno
inc
xor
mov
adc
xchg
and
cmp
add
jbe
mov
inc
ficoms
ficoms
fstl
jae
mov
fdiv
lea
movl
loopne
ret
jae
es
mov
mov
daa
xchg
sarl
inc
insl
mulb
aas
inc
stos
inc
jmp
cmpb
add
into
mov
push
xchg
aad
test
lret
lods
cmp
cmpb
out
and
dec
adc
adc
xor
in
and
arpl
test
mov
pop
andb
sarb
loopne
xor
fsubrs
sbb
out
test
push
scas
and
test
sahf
jecxz
add
in
or
mov
cmp
pop
xchg
out
sahf
and
pop
hlt
dec
les
adc
jp
loop
mov
or
ds
xor
pop
das
sub
mov
aad
mov
jecxz
xor
out
or
push
pop
insb
pusha
inc
pop
mov
jecxz
mov
mov
sbb
push
outsl
in
fcomp
push
je
inc
mov
in
jge
fistps
pop
xor
clc
sbb
xor
mov
dec
decb
mov
xchg
jg
scas
mov
movsl
jne
or
loop
outsb
imul
rcrb
cltd
pop
aam
scas
ja
ror
leave
mov
std
jge
jae
pop
push
les
arpl
pop
movsb
jns
push
addr16
adc
scas
add
mov
inc
cwtl
les
ret
jno
cmpsb
js
cmp
cltd
sbb
jmp
add
xor
pop
shrl
and
jo
mov
cli
sbb
push
mov
pop
fs
std
and
clc
fdivrs
lock
push
jl
les
ret
mov
js
int3
std
dec
orl
call
dec
adc
adc
in
fsubl
test
jb
xlat
lock
mov
mov
lock
jmp
jg
call
jge
repz
sub
push
test
add
push
mov
xor
icebp
ljmp
fnstsw
out
mov
aad
clc
ret
sbb
push
sub
popf
cmp
fcoms
xor
iret
cmp
mov
gs
cmp
ss
push
lods
sarl
fldenv
pusha
pop
sub
sbbl
or
cmpsb
add
push
in
jnp
dec
sahf
jecxz
andl
and
mov
sub
mov
test
loope
lret
or
sub
jmp
in
xor
mov
fsubrp
movsb
addl
mov
cld
inc
add
mov
push
fst
xchg
add
shrl
outsb
mov
bound
push
imulb
mov
sbb
mov
xor
das
inc
jno,pn
adc
add
xchg
jecxz,pn
push
xchg
mov
xor
push
lret
jbe
mov
inc
lahf
lahf
adc
shll
cmc
mov
xlat
or
mov
stos
inc
mov
xchg
dec
test
mov
push
out
iret
sub
lds
sub
dec
jmp
movsb
add
fistpl
gs
or
xchg
pop
pop
mov
or
pop
sbb
xor
cmp
les
pop
add
mov
add
sbb
ja
dec
mov
sub
sub
lret
into
jno
imul
mov
mov
adc
leave
lcall
mov
ffree
and
cli
loop
dec
add
fisubl
pop
in
xor
cmp
data16
add
mov
push
mov
fistpl
lahf
les
stos
leave
lea
and
cmp
cwtl
frstor
push
pop
lock
jae
loop
in
or
xchg
clc
xor
mov
jl
push
cmc
sub
jne
mov
loop
jecxz
inc
cltd
cwtl
mov
pop
mov
mov
inc
dec
adc
push
pusha
sbb
xchg
or
push
or
sub
outsl
inc
xchg
sahf
pop
fisubrs
mov
adc
nop
jbe
mov
clc
push
push
int3
pop
or
mov
push
sarl
popf
xchg
inc
cld
mov
mov
popa
popf
cmp
dec
call
mov
addr16
jns
mov
mov
rcr
mov
orb
fnsave
add
pop
or
jg
cld
jl
popa
fs
xchg
rorb
pop
sbb
inc
mov
lea
arpl
xchg
inc
lea
leave
jg
insl
dec
push
jbe
lret
in
hlt
cld
adc
mov
inc
and
pop
shr
stc
sbbl
xor
add
fnstenv
dec
call
addb
imul
pop
sbb
inc
rcr
push
test
pop
or
jne
push
mov
insb
cmpsl
hlt
and
mov
push
adc
xchg
scas
test
idivb
cwtl
push
push
mov
pop
stos
je
popf
cltd
roll
sti
and
dec
sarl
cs
out
dec
fnstenv
loop
xchg
cmp
fistpll
pop
mov
jmp
cmpsl
js
add
fucomip
push
jle
dec
inc
dec
xor
decl
cltd
add
mov
hlt
mov
push
rcrb
gs
outsl
pop
jo
xchg
inc
imul
inc
add
push
add
ss
lcall
nop
mov
arpl
xchg
mov
sbb
and
dec
pusha
adc
outsl
pop
int3
sub
cmp
cmpl
jne
sbb
rcrb
ljmp
sbb
push
imul
dec
ret
lcall
dec
or
ss
stos
ja
shrb
push
loope
mov
int
mov
mov
cmp
inc
xchg
call
and
cmp
bound
mov
popa
pusha
add
mov
and
xchg
inc
int
push
xor
lret
gs
sbb
jb
lods
lret
adc
pop
jmp
addl
arpl
call
les
sbb
push
pop
fisubs
int3
out
cmp
jb
push
mov
or
add
mov
inc
loop
setb
inc
xor
out
das
xchg
cmp
adc
mov
mov
fstpl
cli
movsb
mov
inc
xor
lock
in
jns
out
jle
push
sbb
inc
ss
add
shrl
push
jmp
mov
lock
inc
ret
or
jns
xchg
fldcw
rorb
ret
mov
mov
int
mov
xor
mov
jecxz
lret
add
cmp
cmc
cmp
cmp
mov
lret
lea
mov
adc
sbb
mov
lock
test
sbb
imull
xlat
ret
xchg
sub
dec
jle
mov
fisubs
insl
mov
gs
out
dec
cmp
bound
pusha
mov
xlat
jns
sbb
mov
fcmove
jp
sahf
xlat
jb
and
insb
xor
enter
loope
adc
jecxz
push
xor
add
repnz
test
mov
jle
les
dec
xchg
jns
lret
and
xchg
mov
andb
jno
jg
fidivrs
or
mov
cltd
sub
sbb
ret
mov
lea
ret
ds
icebp
xor
mov
and
push
dec
push
push
cmp
sbb
aaa
mov
negl
dec
cmp
mov
dec
mov
jle
out
mov
test
inc
scas
rorl
or
lahf
andl
stc
mov
and
push
gs
outsb
push
test
push
adc
mov
mov
xor
es
cmp
mov
cmp
or
icebp
and
test
out
repnz
cltd
cmp
mov
xlat
test
clc
push
outsb
cwtl
ja
push
int
push
add
imulb
sbb
shrl
shl
pop
mov
lret
cmc
mov
hlt
repnz
cmpsb
ljmp
xor
cld
cld
add
rol
insl
inc
push
aaa
mov
rcll
hlt
hlt
jl
inc
rclb
shr
dec
lcall
cwtl
jg
adc
or
mov
sar
in
jle
je
adc
xorl
scas
jbe
push
pop
lods
in
xlat
xor
mov
pop
jns
or
add
lock
mov
jne,pn
add
push
mov
dec
cmc
inc
lds
push
imul
fsubl
mov
dec
jae
je
mov
jo,pt
out
push
and
adc
mov
dec
jo
roll
dec
ds
test
sti
int
popa
aam
jb
push
enter
andl
xchg
mov
jg
cmp
mov
dec
mov
out
nop
xchg
shll
leave
or
repnz
mov
outsl
push
test
jno
test
pop
jl
push
ror
cmpsl
sbb
cmpsl
clc
sbb
and
xor
lcall
adc
aad
repnz
das
test
into
jns
cmp
adc
or
dec
idiv
mov
lcall
loop
push
enter
fcmovbe
push
mov
add
test
lods
in
pop
add
ret
shl
fnstcw
arpl
dec
push
push
pusha
lcall
adc
scas
xor
out
or
dec
mov
insb
es
aad
inc
fisttpll
sub
sub
sbb
xor
sub
addr16
add
in
addr16
xchg
xchg
jb
stc
dec
nop
sub
imul
add
add
mov
xchg
and
sub
push
fwait
mov
aaa
out
xchg
ret
das
les
int
xlat
outsb
inc
sbb
fcoms
rcr
stc
xchg
aaa
divb
sub
loope
pusha
xchg
push
push
or
std
outsb
xor
insl
dec
jl
jge
or
hlt
icebp
into
test
or
add
outsb
xor
stc
leave
push
arpl
outsb
daa
pop
jle
adc
loope
jle
sub
es
out
out
lcall
loope
es
test
test
mov
mov
cmp
adc
cmp
sub
clc
loopne
ficompl
imul
and
inc
out
dec
add
adc
aad
int3
or
sbbb
lret
jp
rcrb
test
cld
inc
or
xor
mov
adc
rorl
cmp
ss
push
fisubrs
sub
lods
push
fstp
push
cltd
clc
stc
addr16
fisubrl
mov
push
pop
loope
and
scas
jnp
mov
inc
or
cmp
jecxz
packsswb
cmp
lds
addr16
repz
scas
jge
mov
mov
out
mov
pop
arpl
hlt
push
cmp
aad
pop
mov
adcl
int3
or
pop
jbe
ret
pop
mov
pushl
xlat
adc
outsb
jno
push
dec
mov
pop
jmp
outsb
cmp
stc
cwtl
or
add
out
cmp
sahf
jae
imul
sbb
push
mov
inc
mov
stos
add
dec
dec
popa
xchg
outsb
jg
sbb
pop
rol
sbb
push
ret
pcmpgtw
ret
add
stos
test
xor
lea
cmc
ffreep
mov
leave
orl
nop
in
jb
cli
pop
dec
and
push
mov
shl
rcl
xchg
test
adc
add
out
enter
arpl
jb
lahf
mov
xor
pop
jnp
inc
adc
popa
mov
push
xchg
mov
pop
xor
lock
movb
je
arpl
adc
leave
mov
rol
shll
call
popa
mov
dec
push
push
outsl
ljmp
mov
hlt
hlt
cmpsl
ret
popf
shr
in
and
icebp
xor
cmp
or
mov
ljmp
mov
inc
sbbb
push
or
push
xchg
jbe
stc
inc
mov
shrl
in
push
push
cmpsl
mov
push
add
outsb
ss
popl
fstl
cmpsb
mov
pop
or
xchg
dec
jae
pop
and
lret
cmpsb
sub
popa
std
popf
aaa
pextrw
lcall
or
aad
mov
in
xchg
ja
pop
mov
xchg
inc
fsubrl
jb
pop
rorb
mov
dec
sbb
daa
pop
fidivs
in
out
push
or
pop
aad
pop
pop
mov
js
notb
pop
mov
call
shll
fwait
adc
xchg
ja
ja
test
out
aas
insl
in
cmp
sub
sub
sbb
cs
dec
push
add
lahf
mov
ljmp
out
jl
ljmp
xchg
pop
sub
testl
or
jecxz
xchg
or
aaa
jb
xor
mov
xor
out
lret
jg
lret
loopne
outsl
mov
mov
addl
add
adc
and
pop
xchg
mov
dec
pop
adc
and
roll
jecxz
mov
loope
test
jg
xchg
xchg
xchg
mov
imul
rolb
xchg
pushf
rcrb
sbb
pop
xor
fstpl
cmp
inc
dec
incb
pop
jp
and
fisttps
and
loope
in
inc
stos
aaa
stos
jge
bnd
pusha
in
adc
jne
inc
cmpsb
mov
add
out
and
cmp
or
int
inc
frstor
jmp
das
fwait
in
mov
ret
movb
push
jbe
and
pop
push
pop
pop
pushf
pop
popa
scas
faddl
scas
dec
shlb
xlat
test
arpl
fnstcw
mov
clc
pop
pop
mov
sub
add
lcall
push
xchg
adc
inc
pop
hlt
icebp
mov
cmc
jbe
inc
xlat
push
inc
or
test
xor
or
fcomp
xchg
int
dec
mov
cmp
arpl
movsb
testb
adc
js
adc
xchg
sbb
adc
les
stc
sub
cmpsl
data16
imul
mov
mov
add
push
cmp
xor
icebp
xchg
lock
repz
fs
mov
cltd
pop
sbb
dec
ret
loop
xor
jb
or
cli
mov
in
pop
lahf
jno
sub
pusha
into
and
ljmp
push
xchg
movsb
stc
push
add
fdivl
icebp
dec
mov
nop
loop
xor
cmp
dec
sbb
dec
fwait
data16
inc
push
rcrb
lods
jne
loopne
loopne
cmpsl
aas
sbb
mov
loop
cli
movsl
cmp
xor
push
jmp
das
out
add
daa
sar
pop
cmp
sahf
ds
daa
xor
and
push
mov
imul
addb
loope
cmovp
imul
mov
and
into
into
and
mov
gs
jno
imull
imul
cmpsb
nop
inc
and
dec
shl
push
mov
movsl
addr16
xchg
pop
out
or
out
jno
xor
pop
sbb
imul
push
int3
nopl
int3
add
dec
andb
or
filds
gs
mov
mov
xchg
stos
sub
leave
cli
packsswb
add
in
bound
mov
cmp
xor
lods
insl
mov
add
mov
daa
and
push
out
aas
fsubl
jecxz
push
or
xor
loope
sbb
mov
pop
mov
scas
repz
push
sbb
push
lahf
popf
sbb
clc
add
or
lods
loopne
cmp
push
jmp
cmp
inc
test
sub
into
xchg
lock
mov
je
loope
out
imul
nop
mov
jmp
mov
in
push
addr16
les
sub
push
and
mov
loop
out
shlb
in
add
out
mov
jns
lods
cmc
icebp
xchg
popa
clc
mov
push
push
das
inc
cmp
mov
popa
push
repz
hlt
xor
movb
or
push
mov
insb
dec
cli
sub
cmpsb
fistl
sbbl
out
lock
in
add
mov
popf
cmc
shll
push
lret
sub
mov
sub
dec
pop
inc
mov
xor
ss
gs
push
scas
push
or
push
test
leave
xchg
jo
aam
mov
lret
push
adc
sbb
mov
ficoml
test
lock
sahf
mov
mov
xor
push
fldl
jp
mov
jg
andl
lods
add
jg
scas
mov
pop
mov
sub
pop
rorb
aas
ret
or
sbb
add
adc
aam
inc
mov
test
jns
mov
jge
or
movsl
je
or
stos
and
jg
insl
add
pushf
mov
nop
in
dec
loope
push
call
rol
push
add
mov
xor
dec
je
daa
xchg
faddp
mov
shrb
rclb
imul
sub
push
cmpsb
andb
mov
or
decb
inc
add
loope
sahf
enter
add
fsubs
xchg
push
mov
out
sbb
pusha
xchg
xor
pusha
sbb
aam
scas
hlt
in
clc
push
sbb
loop
mov
pop
cmpsb
aas
in
jecxz
xor
repz
in
cmpsb
push
movsl
cmp
sbb
bound
cli
jg
dec
and
jmp
jbe
and
add
sub
xchg
mov
fwait
gs
lcall
xchg
repz
mov
sbb
dec
push
jae
cmp
shl
push
cmp
inc
jecxz
add
lret
inc
aam
jg
pusha
out
repnz
adc
inc
ja
xchg
movsl
outsl
in
in
rorb
mov
adc
pop
sbb
push
mov
test
repnz
int3
call
mov
notb
jg
and
int3
je
xchg
shl
js
arpl
bnd
cmp
jmp
pop
and
test
cli
dec
push
xlat
jp
lock
or
add
je
fwait
icebp
addr16
movsl
add
int
or
or
daa
adc
adc
pop
inc
xchg
adc
sti
jno
pop
xor
cmp
cmpb
sub
out
jge
mov
fwait
inc
cmp
test
loope
dec
jecxz
add
loop
xchg
inc
or
and
hlt
or
scas
push
fisubs
inc
fldenv
jne
gs
inc
mov
fiaddl
jmp
pusha
test
adc
pop
mov
push
push
push
mov
icebp
add
add
std
mov
push
push
loope
std
add
pop
cwtl
mov
jo
push
scas
fisubs
loope
sbb
fld
mov
or
cmc
in
sub
mov
push
shl
pushf
push
ret
ret
sub
jecxz
int3
dec
fisttpl
cltd
adc
jecxz
jne
lcall
je
negl
pop
inc
add
add
push
dec
aad
jmp
es
push
and
insl
insl
pusha
mov
test
test
int
notl
mov
cwtl
incl
test
repnz
jmp
push
push
jb
xor
addr16
and
aad
enter
add
add
or
movl
or
outsb
test
mov
scas
outsl
and
dec
jle
fs
mov
jne
push
daa
xor
push
mull
sti
mov
push
ret
cld
loop
lock
pop
mov
sbb
fucomip
inc
pusha
pop
xchg
mov
addl
jnp
loope
mov
or
imul
imul
mov
imul
addr16
in
dec
push
iret
fildll
and
mov
pusha
je
mov
or
cmc
push
dec
roll
dec
aas
sbb
xchg
adc
push
inc
push
clc
jecxz
enter
repz
cld
sar
fstpt
fidivrs
es
dec
push
sbbl
rol
stc
je
movsl
sub
and
fwait
out
xor
or
pop
cld
enterw
or
aaa
rcll
enter
icebp
jmp
push
mov
mov
fsubs
int
mov
xor
fucomi
xchg
cmp
movsl
mov
sahf
repnz
pop
mov
lret
sbb
pop
out
mov
jbe
xchg
xchg
mov
sbb
daa
xchg
ret
pushf
popl
popa
cmp
push
mov
sar
int
add
out
push
xor
es
and
jb
xor
pushf
cmp
mov
mov
add
dec
or
outsb
lock
aam
in
cltd
ret
js
and
or
loopne
cmp
push
mov
mov
jge
ds
mov
cli
icebp
jmp
ficomps
lock
push
jnp
push
lcall
jo
jne
popa
pop
stc
scas
and
ljmp
xorb
mov
push
shrl
sub
leave
mov
fcom
and
into
decb
sub
pop
cmp
mov
pop
test
dec
inc
xchg
push
xor
cmp
into
inc
bound
pop
nop
in
jnp
pusha
mov
push
gs
jne
test
fldpi
pushf
adc
pop
mov
addr16
lock
loop
lods
sbb
cli
test
mov
lock
xchg
dec
add
fs
movsb
xlat
adcb
dec
std
mov
scas
fcoms
es
xor
inc
push
sti
mov
out
cmp
inc
pop
sbb
mov
sub
rolb
daa
inc
lods
push
and
push
cmp
adc
roll
enter
jnp
cmovbe
jno
outsl
repnz
lds
fcoms
leave
shlb
jge
pop
aaa
ljmp
aam
push
or
mov
cmp
mov
pop
xor
subb
mov
es
mov
xor
inc
adc
mov
scas
and
in
sbb
insl
outsb
popf
push
and
mov
int3
repnz
push
or
jno
jge
xchg
pop
js
pop
sbb
ljmp
and
cmc
test
mov
mov
int3
ss
xchg
ja
adc
sbb
sub
dec
fbld
test
cltd
mov
sub
repz
out
mov
fsubp
mov
pop
cs
into
ret
jnp
mov
js
push
adc
push
cmp
add
jge
daa
jg
sbb
jmp
rclb
push
xor
push
pop
xor
mov
out
loopne
cmpsb
movsb
stos
push
std
push
cli
adc
fcoml
outsl
cmp
ret
inc
ret
push
shlb
add
fwait
iret
insb
add
in
inc
xor
lcall
pop
mov
je
inc
sbb
adc
mov
jo
jno
cmp
adc
cmp
push
push
mov
icebp
xchg
push
mov
js
xchg
test
lods
insb
negl
loopne
push
jmp
cmp
xor
inc
pop
pop
push
loop
les
test
jne
jp
out
cmp
test
aad
popa
shll
into
addr16
cld
mov
adc
xchg
in
fstpt
mov
outsl
push
mov
iret
int
ja
popf
pop
jo
xor
rorb
adc
sbb
jnp
mov
lods
cmp
or
popf
mov
vmwrite
aad
lahf
idiv
es
pop
shll
and
mov
aam
fs
and
into
pop
jg
fnstsw
loope
test
inc
jmp
inc
push
bound
inc
mov
push
add
inc
cmp
dec
dec
pop
cli
and
cld
sub
xchg
cmp
and
cmp
mov
pop
pop
mov
sahf
ficomps
pop
aam
pop
xchg
into
xchg
mov
jmp
mov
insl
pop
cmp
inc
aam
lds
push
adc
pop
add
xorb
sub
ds
ret
scas
inc
mov
out
loop
sub
cmp
sub
jns
pop
jo
push
push
inc
hlt
je
cmp
fisubs
mov
lret
lret
sub
ds
xchg
sub
lret
jb
orl
addb
popa
sub
fstpt
lahf
pop
jns
dec
cli
adc
inc
ret
and
add
sbb
dec
push
aam
or
pusha
push
nop
movsb
pop
mov
adc
fstpt
mov
enter
jge
into
xor
call
xchg
adc
sbb
orb
cmp
cli
xor
xchg
sub
cmp
inc
cmp
mov
pop
jnp
imul
mov
ret
mov
xor
scas
jle
pop
or
pop
mov
mov
movsl
cmp
adc
cwtl
inc
jmp
stc
lahf
mov
pop
mov
mov
mov
test
jns
test
cmc
bound
in
or
mov
push
and
lret
pop
mov
jp
sarl
std
movb
push
sub
sub
lds
sub
dec
or
cmpsl
loopne
rcll
scas
ret
loopne
jp
mov
dec
or
fcomps
sti
idivb
cmp
xor
fistps
mov
mov
adc
hlt
ss
pop
test
pop
or
iret
mov
repz
stos
out
iret
add
sarb
arpl
outsb
insb
test
xchg
mov
std
scas
mov
sahf
mov
push
sbb
out
cmp
jmp
aam
iret
adc
test
or
sbb
enter
clc
pop
push
sub
movsl
pushf
adc
jmp
pop
mov
mov
add
pushf
mov
test
lock
adc
jmp
mov
adc
es
das
mov
jl
addl
arpl
pop
cmp
sub
xchg
adc
mov
incb
xor
pop
jne
adc
stos
subl
sbb
xchg
cs
xchg
hlt
and
cwtl
int
cld
rcrb
xchg
test
mov
not
loop
mull
xchg
ret
mov
jae
rcll
bound
cmp
fs
lea
shr
sbb
push
dec
mov
ss
mov
mov
xchg
pop
jbe
outsb
or
aas
or
pop
in
mov
inc
pop
movl
mov
or
sbb
jge
mov
mov
and
add
push
push
and
jmp
jp
push
sub
push
lock
loope
addr16
std
xchg
cmp
push
aaa
loop
pop
pop
cmp
lods
iret
jnp
push
sub
pop
ret
sub
aas
out
pop
and
push
dec
jg
pushf
popf
or
inc
stc
divb
jo
push
xlat
das
test
hlt
add
mov
es
mov
push
fimull
ss
mov
cmp
and
lods
or
out
jg
add
imul
xchg
movsb
pop
xchg
mov
mov
cmp
adc
xor
xor
test
xchg
jno
sbbb
push
pop
pusha
mov
inc
jno
jl
push
inc
fildll
cmp
xor
lods
jl
sbb
cmp
xchg
movsl
adc
cmpsb
int3
mov
push
lock
sub
inc
rorb
sub
insl
xor
call
mov
pushl
or
fs
sti
outsb
dec
mov
add
ret
xor
pop
ret
dec
cmp
fmul
xchg
ret
push
ds
fdivl
ss
lds
inc
in
mov
jecxz
jecxz
mov
shrb
das
adc
sub
cmpsl
pop
fsubrp
stc
les
mov
rcrl
aam
aaa
mov
cld
jne
or
std
mov
sub
and
pop
shll
and
mov
ljmp
mov
icebp
xlat
call
add
scas
in
imul
mulb
in
insl
push
pushl
dec
xchg
out
loope,pn
and
lea
lock
aad
ja
aas
push
ret
jae
jle
rcr
pop
rorb
cli
xchg
inc
movsl
test
sub
cld
mov
jbe
adc
sbb
fisubl
cmc
dec
addl
mov
pushf
and
out
out
aam
test
and
dec
push
fildll
cmpsb
mov
mov
test
jmp
fisubl
push
movsb
sbb
mov
mov
out
sbb
sub
cmp
jl
adc
mov
sbb
xchg
ss
mov
jmp
sar
mov
bound
xchg
pop
push
sbbb
leave
std
ret
loop
test
adc
jge
jecxz
xor
into
or
jns
mov
inc
inc
lods
sub
push
mov
dec
repz
sub
repnz
lret
scas
inc
or
hlt
lods
iret
fst
xchg
push
pop
dec
jmp
dec
mov
fidivrl
and
aas
add
leave
fistpl
test
sti
shlb
jg
orb
xchg
mov
test
inc
sub
leave
mov
xchg
cmp
repnz
repz
mov
mov
xor
jp
xchg
adc
pop
jbe
out
mov
pop
clc
stos
pusha
cmp
iret
mov
or
jb
cmp
and
sub
adc
push
repnz
sbb
fldcw
mov
mov
mov
sti
aas
jb
imul
sbb
push
cmc
add
fwait
leave
mov
imul
in
xchg
mov
xor
adc
xchg
xchg
xchg
mov
test
ljmp
mov
cmp
mov
push
in
inc
xor
dec
adc
unpckhps
push
dec
out
push
sub
push
mov
cld
shll
mov
aaa
dec
imul
out
jbe
pop
pusha
pop
pop
movsl
inc
xchg
sub
jne
cmpsl
es
xchg
mov
ljmp
and
icebp
mov
mull
out
add
les
insl
mov
testl
jmp
mov
ja
mov
jo
aas
mov
sar
je
mov
xchg
insl
mov
out
cmp
push
ret
ljmp
loopne
outsl
mov
mov
adc
xor
mov
inc
xchg
mov
out
jno
push
mov
xchg
shll
aaa
dec
jbe
movsb
add
fistps
imul
jb
pop
js
ja
pop
xor
mov
in
push
dec
push
or
xor
lods
ret
mov
imul
pop
pop
add
dec
push
lcall
sbb
aas
push
pop
cmp
rol
in
loope
inc
mov
and
or
leave
cmp
fxch
xor
jbe
sbb
jg
or
cwtl
xor
dec
leave
sbb
rclb
fisttps
shlb
movsl
cwtl
xchg
mov
jno
sbb
mov
rsqrtps
pop
mov
sbb
stc
insl
inc
pop
cmc
aas
iret
lods
add
paddb
fbstp
and
push
mov
test
cmp
jmp
inc
or
push
fstpt
les
fnsave
adc
es
fnstsw
aad
int3
push
scas
pop
push
mov
sbb
sahf
enter
dec
sub
icebp
mov
divl
jno
jp
lock
lods
lcall
adc
pop
ljmp
mov
rcrb
mov
sub
in
mov
adcl
popf
pop
into
mov
paddsw
pop
jb
nop
add
push
popa
jle
jb
and
adc
data16
jne
and
lret
mov
adcb
test
fisubrl
fisubrs
popa
rorb
repz
adc
lret
mov
pop
or
enter
jmp
and
push
xlat
jge
in
pop
push
and
lods
lahf
ret
add
inc
xor
test
sub
push
outsb
pop
jno
shlb
jb
mov
and
or
leave
mov
int3
push
mov
sarl
push
mov
test
bound
pop
mov
gs
addr16
jle
and
or
inc
sub
dec
add
cmp
dec
movsb
mov
xchg
pop
scas
mov
sub
jle
sbb
and
push
cmp
int
popl
sub
and
cmp
fsubrs
in
xchg
mov
sbb
mov
test
dec
xchg
sbb
mov
cs
add
add
inc
adc
xchg
sub
mov
in
in
jns
stos
mov
stos
outsl
repnz
dec
jp
xchg
movsl
lods
pushf
nop
or
xchg
ja
addb
sub
pop
add
shll
data16
sbb
inc
xchg
mov
les
pop
inc
in
mov
pop
les
arpl
sbb
lods
popf
in
inc
je
jecxz
inc
jo
faddl
xor
mov
shlb
mov
inc
in
addr16
loopne
adc
rcrb
sbb
and
fistpll
pop
add
push
mov
pop
add
fabs
rcrl
out
outsb
nop
popf
cmp
testb
xlat
push
sbb
daa
into
into
inc
addr16
jmp
jecxz
and
xor
js
fadd
mov
mov
add
or
or
sbb
sbb
int3
movsl
sub
cs
sbb
cmp
push
stos
imul
pop
add
xor
xor
cmp
lds
lahf
push
sbb
inc
push
pop
or
jne
or
xor
out
lea
jb
mov
mov
jno
fidivrs
mov
out
mov
cmp
adc
clc
xchg
xor
shrl
adc
js
mov
inc
adc
pop
jno
push
or
xchg
mov
sub
mov
sub
std
loope
sub
repz
dec
test
enter
inc
daa
jne
or
ljmp
mov
mov
ffreep
pop
clc
cmp
repz
adc
inc
mov
aas
jns
in
cmpsb
xor
aam
into
push
cmp
ror
popl
sbb
aam
ljmp
adc
mov
or
mov
dec
pop
mov
pushf
ljmp
pop
movsl
mov
enter
nop
xchg
nop
flds
and
dec
xlat
xlat
cmpsl
es
xor
andl
cmpsl
test
jb
leave
cmpsb
mov
aam
sbb
fs
xor
inc
mov
lret
xlat
gs
int3
jne
xor
push
aas
inc
lock
inc
sub
jmp
jb
xor
or
imul
inc
pop
aad
lcall
call
lcall
js
xchg
dec
pop
sar
xchg
scas
data16
mov
stos
push
int
pop
lock
int3
sub
fisubl
xchg
sub
and
xchg
movsb
sbb
push
xor
mov
jl
mov
ret
pop
lahf
xor
cwtl
jne
push
add
aad
jne
outsl
call
cmp
pop
cld
cmpsb
lea
faddl
andb
in
les
lds
sbb
cmp
or
dec
xor
sub
test
mov
int3
and
add
mov
push
mov
mov
xchg
and
push
lret
and
inc
mov
mov
js
fninit
xor
inc
cmp
push
add
inc
arpl
filds
cs
and
scas
sub
pop
outsb
cltd
mov
lahf
mov
mov
aaa
pop
fnsave
scas
jnp
and
aas
sbb
mov
cmpsl
mov
scas
jnp
xlat
and
outsl
mov
addr16
or
pop
ljmp
sbb
lahf
mov
ljmp
pop
das
and
dec
mov
add
sub
xlat
adc
aaa
sub
dec
xchg
rorb
mov
xor
cltd
pop
cwtl
jge
jb
xchg
or
jbe
fcom
dec
pop
cmpsl
stos
ds
pop
and
gs
icebp
mov
push
push
jns
aam
jge
popa
jp
sahf
clc
cmpb
cmp
fidivrs
test
daa
imul
xchg
xor
sbb
call
xchg
mov
jns
aaa
ja
in
mov
cmp
xchg
push
inc
push
fistpll
leave
pop
xchg
ret
mov
add
push
add
in
cli
lret
popf
adc
dec
add
pushf
xor
add
xchg
jp
lahf
mov
movsb
fcmovnb
mov
jle
cli
push
fildll
ljmp
imul
jbe
push
in
rcrb
out
lcall
mov
add
push
loopne
inc
push
shl
push
lret
jl
adc
mov
cmp
mov
scas
mov
sbb
jmp
mov
pop
inc
and
out
pop
inc
in
mov
outsl
jecxz
hlt
popf
fisttpll
js
lret
dec
adcl
stos
and
stos
inc
dec
imul
xor
stc
push
orb
xchg
mov
mov
int3
push
adc
sub
in
xlat
int
scas
xor
inc
sub
xor
ljmp
push
pop
sub
pop
sbbb
and
push
mov
sarl
nop
ljmp
ret
xchg
jg
xchg
call
fs
scas
dec
loope
call
sub
call
adc
mov
sub
stos
xchg
push
cmp
in
dec
xlat
dec
pop
cwtl
and
aaa
sub
stos
ljmp
data16
ljmp
inc
out
inc
add
push
mov
and
mov
insb
lret
mov
lods
dec
and
inc
test
push
or
mov
out
mov
jns
and
adc
shrb
pusha
add
mov
shlb
pusha
jmp
addr16
les
jo
inc
aad
sub
aaa
xchg
push
subl
lret
lods
xchg
imul
xlat
lret
cltd
cmc
aam
lahf
test
mov
js
mov
add
in
nop
fisubrs
jg
mov
pop
daa
in
enter
lret
inc
bound
sbb
push
push
pusha
xchg
jge
mov
icebp
call
cli
stos
das
call
sbb
xor
mov
inc
js
int
fwait
ljmp
fiadds
jb
mov
mov
and
sbb
fwait
cltd
dec
cmp
sub
mov
adc
fsts
adc
movsl
das
dec
ds
js
daa
jge
push
call
mov
inc
int
adc
sbb
pop
mov
les
or
out
testl
hlt
mov
push
sub
dec
push
mov
lea
repnz
repnz
add
mov
lods
loope
push
push
add
fiadds
cs
cmc
ljmp
std
adc
or
push
cmp
add
andl
iret
sub
mov
out
out
push
in
test
xchg
js
inc
mov
dec
out
adc
mov
out
pop
pop
xor
adc
lret
loopne
fs
cmpsb
rcll
in
dec
outsl
pushf
sub
mov
push
sub
scas
and
pop
lods
jno
xchg
test
pop
loopne
je
adc
or
sub
shrb
repz
out
inc
adc
es
les
loope
jb
dec
jb
ss
dec
das
xchg
push
dec
push
inc
jmp
adc
insl
mov
cmpsb
aas
mov
ret
loop
sbb
test
inc
cmp
stc
push
xchg
cmpl
sub
mov
scas
inc
xlat
and
mov
jmp
fmulp
stc
mov
data16
loope
cltd
xchg
lods
lds
cli
inc
sarb
sbb
mov
outsl
subl
icebp
xor
mov
inc
mov
or
repnz
rclb
xchg
push
adc
pop
nop
push
dec
adc
inc
sub
jg
adc
cmpsb
push
in
xchg
inc
cld
cmp
fisubl
push
lods
pop
jne,pn
sti
cli
push
fadds
sarl
ja
pushf
ljmp
adc
push
int
adc
icebp
xchg
mov
fmull
nop
imul
adc
jecxz
ret
pushf
popa
mov
push
inc
pop
mov
rorl
and
lret
pusha
ficoml
aas
dec
hlt
xchg
mov
sub
mov
shld
out
jbe
and
testl
cmp
insb
test
fildll
test
mov
pop
movsb
jnp
leave
fldl
das
nop
inc
add
jl
inc
mov
adc
push
push
dec
pop
jbe
ds
mov
add
mov
lock
jl
movsl
stc
mov
xchg
shrl
xor
adc
dec
inc
dec
xlat
push
and
imull
inc
fcoms
adc
mov
sbb
in
mov
xchg
loopne
loop
aad
cli
fs
mov
es
push
xlat
scas
scas
test
clc
ficompl
inc
push
daa
and
jmp
cld
loope
sub
inc
pop
rclb
in
lret
nop
popf
decb
jg
sbb
mov
movaps
jmp
push
or
jl
push
out
fildl
mov
push
push
clc
js
stos
out
jle
movsl
sub
leave
or
mov
adc
dec
xchg
sub
cltd
sbb
mov
gs
imul
lcall
test
push
cmp
fdiv
shl
or
inc
or
push
out
ret
and
pop
fisttpll
jne
movsl
iret
push
pop
push
fsts
lcall
ja
daa
mov
xor
out
add
cmp
mov
leave
ret
fistl
sbb
jecxz
lret
and
push
in
loop
pop
cmp
pop
dec
push
pop
inc
pop
adc
shlb
xor
vpunpckhbw
or
stos
xchg
repnz
shlb
loopne
xlat
or
loope
rol
or
adc
push
cmpsl
push
dec
mov
cld
adc
cs
mov
mov
and
test
iret
stos
pop
mov
mov
lret
outsl
cmp
out
push
inc
cmpb
jne
insb
test
int3
out
add
sbb
and
mov
shll
push
jp
cmp
add
hlt
mov
jbe,pn
dec
mov
loope
scas
xchg
mov
xchg
test
lret
cmpsb
add
or
push
out
mov
mov
sti
lods
push
cmp
lret
pop
mov
sti
rorl
xchg
imul
mov
adc
fnstenv
fstps
mov
push
rcr
xchg
jb
movsb
mov
push
shrl
and
loope
nop
mov
popf
xchg
jnp
sub
mov
pop
jb
or
dec
lret
pop
fstl
pop
pop
pop
or
outsl
ja
pop
add
push
sar
int
mov
dec
call
pusha
add
xchg
cmp
repz
imulb
dec
dec
mov
ret
sbb
push
cmp
inc
les
dec
add
sbb
loope
orb
jmp
dec
and
fnstenv
dec
jge
and
leave
sub
pop
xchg
movb
pop
add
lods
testb
xchg
addr16
sti
mov
test
outsl
and
pop
mov
fistpl
cmp
orl
jns
pop
popa
mov
dec
push
lahf
mov
and
cmpsl
das
sbb
jl
lret
pop
aad
adc
mov
scas
sub
jnp
dec
test
xchg
jp
jnp
in
xor
lcall
push
in
mov
jmp
out
lods
in
cld
jecxz
adc
insb
mov
add
mov
mov
rorb
sbb
push
std
mov
rolb
lret
mov
aaa
mov
lahf
mov
mov
movsb
test
lods
das
cmp
jns
fidivrl
xchg
pop
sbb
sarl
inc
adc
xchg
rorb
fadds
out
push
add
mov
lret
inc
rcr
and
jp
push
jbe
mov
mov
or
jg
pop
add
shrb
lods
test
dec
loop
sbb
jle
incl
mov
cmpsl
push
and
adc
or
mov
loopne
dec
leave
in
mov
cltd
sub
and
ss
out
data16
daa
jmp
or
insl
sarb
or
pop
lea
sbb
inc
sahf
ficoml
adc
mov
xchg
outsl
sbb
mov
clc
int3
adc
imul
loopne
push
add
sub
mov
adc
dec
cltd
xchg
sub
cmp
movsl
ret
test
into
lcall
lcall
mov
aad
jg
and
jns
mov
mov
sahf
sub
or
outsb
add
sbb
mov
call
std
int
dec
jbe
jno
push
test
repz
xchg
shrb
xor
xor
repnz
mov
ret
gs
in
sub
xchg
xor
cmc
inc
mov
cmp
xor
push
mov
mov
stos
cmpb
cmp
aas
xor
scas
std
sbb
in
jmp
andl
mov
aad
jg
in
mov
shrl
and
push
xor
cltd
or
aaa
push
imul
into
test
stos
rol
adc
popa
pop
pop
rorl
ret
mov
sub
xor
fidivs
push
jg
pop
or
aad
push
jmp
jmp
aad
mov
or
mov
xchg
arpl
pop
mov
pop
scas
push
sub
aaa
mov
or
fcomip
xor
xor
lret
test
call
mov
jbe
or
mov
push
pop
pop
outsb
mov
and
inc
push
mov
pop
shrl
inc
js
pop
xchg
adcl
out
adc
push
sti
or
pop
test
clc
adc
inc
dec
ret
add
aaa
mov
add
sub
lds
subl
mov
je
xchg
movsl
jnp
arpl
adc
ret
test
xchg
lds
dec
in
mov
xor
inc
mov
inc
sub
adc
addr16
jne
or
stos
daa
cmp
jle
sub
jl
test
rcrb
aam
xor
mov
ficomps
loope
add
xchg
inc
sbb
stos
sub
iret
xor
loop
sarb
cmp
pop
inc
add
fcoml
gs
jmp
in
mov
in
cld
mov
into
les
std
mov
gs
out
mov
outsb
pop
movsb
cmpsl
cs
cld
fcmovb
iret
add
push
xlat
dec
sbb
dec
imul
add
sbb
pop
add
out
jecxz
les
add
inc
in
add
mul
ret
imul
lcall
xchg
sub
addl
popf
out
addr16
fsts
mov
xor
notl
pushf
ljmp
inc
push
jne
cld
jbe
or
ja
jbe
sahf
popa
xor
mov
push
xchg
jge
pop
xchg
mov
and
dec
sti
mov
xlat
ljmp
adc
mov
push
jg
push
mov
mov
push
mov
clc
in
push
out
adc
xor
inc
in
xchg
ret
jp
pusha
inc
sbb
loope
sti
enter
shll
pusha
mov
push
push
gs
sti
inc
or
push
or
mov
jbe
xchg
mov
jle
inc
or
rorb
rcrb
cmp
shlw
sar
cmp
mov
pop
or
and
mov
lret
fdivrs
pop
jmp
orl
dec
jo
nop
pop
das
dec
shll
nop
xchg
inc
insb
pop
sti
mov
loopne
das
add
fnstsw
sub
aaa
mov
mov
xor
pop
stos
ret
mov
push
ret
cltd
andb
cmp
sahf
xor
hlt
or
mov
xchg
dec
out
xchg
dec
push
popf
jnp
test
lds
dec
jp
cmp
out
in
jmp
mov
jo
ret
andb
or
mov
dec
pushw
mov
lret
sarb
outsl
movsb
jo
rcll
mov
lret
aas
push
je
std
shrb
dec
mov
dec
rcrl
aas
js
push
xor
add
adc
cmpsl
sti
xor
je
inc
out
insl
aad
in
ljmp
neg
bound
sarb
outsb
pop
shlb
or
addr16
jge
dec
sbb
outsl
mov
or
mov
jle
cmp
cmp
into
and
adc
fsubrl
push
xor
add
mov
jne
mov
mov
xchg
pop
in
pushl
xchg
dec
test
xchg
pop
ror
inc
and
outsl
jmp
mov
lds
add
aaa
and
int
repz
scas
inc
jmp
out
ss
add
or
pop
xchg
movsb
push
dec
sahf
adc
cmpsb
sub
mov
lds
mov
ficomps
inc
pop
add
fwait
insb
jb
ja
idivb
inc
cmp
insl
pop
aad
ss
lret
fnstcw
sub
adc
mov
sbb
int3
orl
mov
pop
lods
sti
jp
outsb
adc
sub
je
dec
jge
pop
ljmp
roll
fstps
jnp
sbb
cmp
push
movd
xor
and
sti
movsl
push
imul
and
dec
xchg
sbb
xchg
or
dec
test
lret
mov
xor
mov
jg
imul
fldl
fld
rcpps
sbb
into
addr16
pop
sub
test
test
sub
sbb
dec
jmp
pop
xchg
push
and
das
and
and
loop
cmpsb
sub
out
adcl
xchg
subl
mov
fadd
cmp
xor
jle
out
sahf
imul
add
mov
mov
xor
push
inc
fildl
mov
dec
repz
les
lods
shl
push
sub
mov
hlt
bound
aam
mov
lods
nop
mov
ret
sbb
xlat
sbbl
lret
jp
rorl
adc
sbb
cmp
jmp
add
sarl
sbb
lret
and
dec
lds
leave
rdpmc
rcrl
jmp
mov
push
mov
xchg
jb
test
imul
imul
js
sahf
repnz
out
jno
push
popf
fistpll
mov
xchg
mov
pop
std
adc
ljmp
xor
incl
xor
push
lods
call
leave
cmp
jge
mov
xchg
xor
in
movsl
je
push
mov
cmp
sbb
or
fbstp
sub
lahf
cmp
sbb
xor
in
jae
or
mov
std
xchg
popf
jmp
sbb
call
ss
jbe
mov
arpl
cmp
adc
jno
bound
ret
cmp
push
out
sahf
test
mov
sub
cmpsb
dec
jp
sub
xor
popa
and
mov
mov
ret
sahf
pop
out
mov
dec
cmpsl
sub
add
inc
jb
push
pop
repnz
fsqrt
push
frstor
dec
push
push
rcl
mov
mov
pop
dec
mov
movsl
clc
and
adc
repnz
mov
sub
outsb
cld
inc
xorl
int3
add
test
imul
and
cmp
fstps
les
mov
lret
fstpl
pop
push
test
jg
lcall
out
aas
mov
jne
cli
jb
inc
lcall
sbb
xor
cmpb
data16
adc
dec
int3
mov
leave
mov
ljmp
dec
loope
dec
sub
add
js
pop
pop
stos
add
xchg
loop
outsl
adc
add
xor
ret
addr16
cmp
add
pop
jg
hlt
mov
sbb
arpl
jmp
iret
and
jb
in
cltd
out
test
push
pop
mov
jbe
in
pop
jae
lea
mov
dec
test
adc
aad
sub
xchg
in
cmc
mov
in
dec
cltd
mov
lret
scas
dec
push
lahf
inc
rcrb
jns
sub
lret
stos
cmpsb
sbb
add
outsb
or
shrl
jl
add
mov
mov
sub
pop
lcall
out
mov
icebp
fldcw
loope
cmpsl
pop
test
xchg
add
pop
mov
cmp
inc
sub
scas
inc
dec
cmp
inc
loop
sub
push
ficompl
mov
add
fistl
mov
mov
pop
sbb
jmp
sub
mov
arpl
cmp
mov
imul
cld
mov
mov
mov
lcall
mov
push
inc
aaa
sbb
sbb
jb
loop
fimull
dec
mov
pusha
sbb
mov
and
cmc
or
mov
push
fs
pop
mov
test
fstl
bound
sbb
cmc
mov
in
xchg
cld
jg
push
popa
enter
mov
mov
push
je
cwtl
aad
das
mov
mov
jns
scas
loop
pop
ljmp
cmpsb
mov
push
and
inc
inc
jle
fiadds
jg
xor
in
mov
hlt
rcrb
arpl
imulb
mov
aaa
inc
sub
and
cwtl
int
jg
or
repnz
ljmp
dec
lcall
push
sub
mov
insb
and
inc
inc
imul
rorb
and
bound
jns
xor
pop
insb
fwait
or
xchg
popf
das
jmp
and
mov
jno
add
les
out
push
imul
adc
std
adc
mov
imul
std
inc
shrl
cmpsb
test
adc
cmp
aad
loope
sub
ror
incl
mov
adc
sbb
inc
fadds
cmpsb
aas
xchg
sahf
lods
add
lret
xchg
or
imul
inc
inc
or
mov
adcl
fsts
push
les
in
jns
push
sbb
ret
stos
sub
fidivl
clc
mov
cltd
pop
imul
fisubrs
mov
sti
xor
movsb
inc
or
cmp
fisttpl
adc
and
and
int
enter
dec
sbb
add
scas
dec
add
mov
ljmp
mov
fsub
fmull
addr16
mov
aad
push
pop
add
ds
sub
fiaddl
enter
outsb
test
jp
aad
inc
push
jo
sbb
dec
ljmp
mov
push
fisttpll
or
aam
pop
jae
fcoms
aaa
sbb
out
pop
jl
aaa
jge
loop
aaa
xabort
call
fmull
push
sbb
lcall
ret
daa
inc
jbe
inc
ficompl
push
sub
mov
mov
scas
sbb
cmp
loop
int
jp
lahf
out
fwait
adc
sbbl
dec
neg
or
out
pop
fs
inc
push
in
rorl
pop
or
in
add
xchg
sbb
je
ljmp
addl
jns
out
loop
or
xchg
ret
pop
push
add
push
xor
imul
cwtl
dec
in
cmp
jp
push
jbe
imul
jle
movhps
dec
cmpsb
pop
lods
cli
mov
lahf
jp
bound
into
orb
mov
lds
loope
lock
lret
cwtl
push
bound
mov
iret
cli
mov
pop
push
jp
xor
dec
into
sub
pusha
inc
pop
pusha
jmp
jp
les
push
jns
mov
pop
testl
stc
popf
adc
adc
sub
loopne
or
mov
fdivs
and
mov
push
or
mov
gs
mov
fistps
jmp
dec
mov
jb
je
fldl
test
dec
dec
mov
cli
jnp
in
bound
cmp
push
jmp
rolb
pop
cvttps2pi
dec
pushf
inc
int
lock
pop
negl
rclb
adc
mov
sbb
scas
mov
aaa
arpl
hlt
shrb
jmp
and
cld
cli
test
sti
std
mov
jo
push
test
in
push
ret
xchg
mov
idivl
xor
sub
pop
sub
and
and
popa
sub
xor
cmc
cmc
ficomps
rolb
add
out
dec
shll
lock
cltd
pop
and
in
addr16
cmp
add
rcrl
sbb
inc
xlat
or
xchg
or
xor
adc
pop
pop
repnz
dec
pop
movb
int
fs
xor
sbb
cmpsb
fdivrs
pop
adc
outsl
cs
push
cmpsb
mov
xchg
cmpsl
and
xchg
rclb
inc
add
ljmp
movsl
cs
mov
clc
daa
jg
sbb
popf
mov
push
enter
dec
lret
movsl
xchg
mov
cmpsl
and
je
jae
cmpsb
and
adc
mov
sub
inc
sbb
push
pop
scas
add
ds
xchg
rclb
and
int
loop
sbb
das
fnstsw
fmuls
and
movsl
dec
fistps
stos
out
pop
sub
mov
inc
xor
fldenv
sbb
in
sub
xchg
data16
adc
lock
mov
mov
sub
test
jns
dec
out
in
ss
cmp
andl
ret
leave
push
int3
sub
push
es
sbb
icebp
xor
dec
cmp
mulb
mov
out
dec
sbb
sub
imull
lea
mull
daa
pop
cmp
js
jo
jno
jmp
les
js
dec
lahf
pop
out
js
adc
fs
xchg
inc
mov
aam
and
jmp
mov
adc
pop
iret
mov
shl
pop
cmp
je
ss
lcall
jae
mov
jbe
imul
sub
push
jmp
cli
pushf
cs
out
mov
or
lods
je
mov
mov
push
lds
add
xchg
cmpsb
loope
push
jnp
xor
jb
lea
adc
test
fcomps
adc
into
iret
fwait
cmpsb
pop
adc
cmc
push
sbb
cmp
es
add
pop
jno
mov
lahf
sub
add
js
xlat
or
sti
mov
cmpb
orl
mov
inc
cld
mov
and
add
and
and
pop
mov
shll
adc
mov
lods
jb
xchg
cmp
repnz
lahf
cmp
pop
mov
mov
jno
cltd
aam
fbstp
mov
lods
sub
xchg
bound
pop
cmp
aad
add
hlt
jne
es
inc
sub
lock
cmpsb
xor
or
inc
lock
mov
dec
mov
into
mov
scas
lock
or
or
test
jecxz
mov
mov
push
xchg
daa
stos
mov
lock
mov
mov
mov
xchg
mov
sub
push
inc
and
cmp
mulb
xchg
sti
addb
cmp
lcall
nop
in
pop
ret
mov
push
insb
nop
cmp
outsb
int3
mull
data16
sub
rclb
push
sbb
adc
push
jae
and
das
mov
sub
pop
cmp
aas
mov
push
sub
jns
xor
lock
movsb
popa
push
cltd
sub
push
inc
inc
xor
paddusb
push
jo
int3
mov
sbb
cld
stos
test
les
and
ss
lods
mov
pop
test
fstpt
mov
dec
jbe
cs
mov
pusha
addr16
push
pop
adc
dec
outsb
in
cmpsl
or
mov
push
movl
fwait
hlt
adc
or
jne
pop
dec
mov
cli
cmp
test
leave
dec
loop
test
ljmp
xor
and
stc
mov
xor
ja
or
inc
jle
lret
out
pop
jp
scas
jl
inc
sahf
mulb
fistpll
add
lret
push
ret
fs
sub
int
enter
pusha
loope
add
test
scas
xor
xchg
addr16
or
cmp
xor
dec
aas
divb
inc
lods
jg
xchg
in
aam
in
cwtl
adc
xchg
negl
scas
and
inc
scas
mov
fidivrs
decl
sub
scas
mov
sub
sbb
adc
andl
sub
cmovbe
xor
xor
fimuls
dec
mov
gs
mov
inc
sub
test
and
in
fsubrp
fstpt
mov
sub
push
outsl
or
sar
mov
bound
sbbl
cmp
xchg
out
sub
mov
or
adc
mov
add
sub
xor
pop
xchg
scas
loope,pt
pop
sub
jl
xor
pop
sub
pop
lahf
inc
movsl
dec
test
adc
scas
adcb
xor
mov
pop
mul
cmpsl
jge
test
hlt
fisubl
in
jle
jge
fcoml
xchg
cmp
lods
sbb
movsb
test
add
lret
adc
push
xchg
pushf
mov
inc
xor
dec
repnz
xchg
shrl
repnz
outsl
mov
test
insb
clc
sahf
inc
inc
pop
hlt
mov
sbb
enter
mov
jno
mov
adc
pushf
sbbb
xchg
sbb
out
outsl
pop
ja
push
subb
loope
aad
es
std
enter
push
sub
jmp
inc
mov
xor
pop
stc
maxps
js
dec
icebp
std
mov
adc
das
push
sarl
xor
jno
lods
mov
jb
inc
push
movsl
and
inc
fimuls
stc
mov
cmp
movsl
pop
push
insl
or
push
ss
stos
jecxz
lret
mov
inc
in
push
dec
push
push
cmp
imul
push
pop
inc
add
xor
pusha
rcr
fildl
mov
stos
aas
xchg
in
mov
mov
outsl
and
stos
jns
mov
in
or
sbb
inc
jge
js
sub
sub
mov
lods
roll
loope
sub
repz
pop
add
nop
mov
push
push
jb
pop
push
mov
xchg
mov
mov
pop
xchg
in
mov
xor
shrb
inc
fldenv
scas
adcl
or
mov
add
sbb
out
dec
inc
or
jae
cli
scas
out
xor
pop
out
pop
push
stc
jne
gs
xor
pop
xlat
stos
adc
out
pop
pop
mov
xchg
adc
stos
adc
pushl
mov
aas
into
xchg
movb
inc
xor
daa
sti
mov
adc
ja
pop
mov
shr
or
sbb
fdivl
gs
sbb
and
mov
rclb
inc
jns
popa
inc
fs
in
sahf
push
jle
sbb
jnp
hlt
inc
mov
sbb
lret
or
lret
pop
pop
ds
in
mov
test
cli
jbe
mov
sahf
xchg
outsb
mov
cwtl
dec
jp
bound
add
pushf
add
movsb
fdivrs
pop
push
and
mov
pushf
lock
xor
mov
xchg
lret
iret
dec
xlat
mov
cmp
mov
std
clc
pop
inc
outsl
jmp
jne
mov
out
das
xchg
mov
addl
bound
inc
aam
add
mov
iret
clc
mov
lret
movsb
mov
mov
sti
pop
outsl
inc
xchg
call
xor
into
mov
fists
loopne
xchg
add
mov
sbb
mov
addl
out
cmp
jno
dec
in
sub
push
gs
jle
mov
sub
dec
cli
add
inc
pop
lods
fbstp
pop
fistps
push
jge
lret
rcrb
jb
jnp
lds
adcl
inc
das
pusha
in
lcall
and
iret
fnstsw
pop
les
fidivrs
sub
xchg
push
in
ss
cmp
int
xchg
aas
pop
cmp
pushf
cs
gs
je
add
sbb
adcl
cmp
ljmp
xlat
adc
sti
push
cmp
loope
pushf
jbe
sub
lahf
dec
outsl
out
mov
inc
adc
sub
inc
and
iret
or
sahf
insl
push
ret
popa
mov
jmp
into
in
mov
mov
pfsubr
scas
xchg
inc
jns
addr16
jl
popa
jno
lock
push
jp
std
loop
pop
loop
mov
or
sar
mov
pop
mov
cmp
cmpsl
fnsetpm(287
push
dec
xchg
faddl
pop
dec
jp
roll
jp
lahf
adc
insb
push
out
add
mov
pop
push
fiadds
or
xchg
mov
mov
aam
in
notl
sub
stos
mov
jecxz
out
insb
pop
out
outsl
dec
clc
or
jle
mov
orl
cmp
aam
pop
aad
xor
iret
out
xor
pushf
inc
lods
gs
rclb
test
fildl
push
pop
mov
cmp
push
test
loopne
testb
loop
cs
shrl
adc
push
bound
jp
adc
ret
aam
lock
stc
xor
sub
inc
sbb
jle
xor
iret
arpl
fsubs
adc
insb
pop
dec
mov
rorl
test
dec
add
add
lea
add
xor
cmpsl
pop
outsb
imul
lahf
sub
loope
imul
fldl
push
dec
jge
mov
xor
and
repnz
insl
ret
xchg
or
mov
adc
movsb
rolb
jns
fiadds
ljmp
dec
pusha
inc
leave
cld
add
push
sub
dec
push
mov
sub
jp
aam
sbb
enter
iret
and
jmp
iret
lods
mov
pop
jbe
inc
cmp
xor
jb
ds
sbb
in
inc
fdiv
xchg
or
or
test
push
mov
push
jno
mov
add
push
push
lahf
xchg
sbb
jl
sbb
mov
lcall
pop
mov
incl
cmp
repz
jmp
or
jnp
jecxz
imul
shll
jns
cltd
adc
enter
dec
ret
cmc
fists
arpl
imul
mov
call
scas
aas
jnp
push
mov
sar
mov
scas
andb
cmp
js
scas
pop
imul
push
and
aas
xchg
in
inc
dec
cmpsl
cmp
or
rcl
mov
jae
cmpsb
inc
push
addr16
and
sbb
fdivrs
adc
and
pop
sahf
mov
pop
or
dec
sub
repz
cmpsl
sub
sahf
xcrypt-ecb
cmpsl
lret
xor
add
je
out
jge
int
daa
fsubrs
lock
cld
jae
push
jle
sub
or
mov
and
addr16
test
nop
ss
mov
jmp
push
cmp
test
out
pop
inc
lea
stc
lahf
pop
and
xchg
mov
push
stos
cmp
mov
cvtps2pd
lahf
sub
xlat
xchg
popa
ljmp
pop
adc
int
dec
std
aas
imul
jp
lea
sub
test
mov
lock
lret
flds
imul
fstl
ja
ds
fmulp
cltd
adc
mov
fwait
jb
mov
mov
and
out
push
enter
sarb
popf
pop
sahf
daa
arpl
stos
ret
sbb
mov
pop
scas
cmp
lret
pop
jmp
jl
mov
xor
cmp
xchg
fstpt
dec
or
push
sbb
ret
les
mov
ret
sub
jae
test
and
clc
cli
ror
sub
fistpl
ds
ficoml
ret
add
mov
lret
push
cmpsl
pop
xor
mov
sub
enter
test
push
xor
ret
insl
xor
jbe
or
and
adc
or
xor
andl
adc
mov
adc
lcall
scas
jno
mov
dec
mov
dec
adc
and
push
inc
stc
pop
outsb
add
mov
hlt
lds
push
lret
inc
loop
mov
and
cmpsl
mov
es
xor
add
pop
out
and
xchg
jecxz
loop
leave
popf
test
pop
out
rclb
mov
fstp
es
pop
fdivs
fcmovnbe
add
mov
push
and
and
mov
in
xor
testb
xlat
mov
sahf
arpl
out
fnstenv
cwtl
push
loopne
mov
dec
and
inc
fwait
outsl
pusha
je
ss
pop
jmp
or
dec
jle
movsl
stos
cmp
add
or
arpl
stos
fwait
outsl
rclb
xchg
and
dec
xor
dec
xchg
push
mov
add
in
aaa
es
xor
pop
aaa
sub
imul
hlt
in
dec
hlt
xchg
das
lret
stc
mov
aad
xor
idivb
jns
insb
scas
scas
lret
bound
jo
xlat
arpl
or
inc
xchg
ficoms
stos
sarl
mov
pop
adc
outsb
call
ss
inc
repnz
push
dec
aad
stos
lret
shll
jmp
ret
ljmp
outsb
outsl
into
jno
adc
or
ja
push
scas
leave
and
adc
jp
push
es
imul
xchg
test
cmp
add
mov
mov
outsl
fisubs
insl
psllw
rcr
cltd
lea
std
sbb
add
xor
pop
mov
and
inc
stos
imul
and
add
movd
loope
shll
jbe
outsb
jp
xor
shr
repz
ljmp
je
sub
iret
pop
xor
sbb
int3
aad
sbb
xchg
aad
mov
jno
push
repz
sub
sbb
fistps
sub
xor
xlat
mov
jecxz
stc
mov
pushf
bound
xor
and
sub
pop
std
movsl
push
fcom
dec
add
mov
mov
xchg
imul
push
push
or
sarl
cs
cs
cmp
sub
jle
mov
adc
lcall
xchg
cmp
idivb
mov
lret
pop
aad
pop
pop
jp
out
push
sbb
dec
push
push
mov
mov
popf
js
mov
inc
daa
add
lods
pop
or
add
fnstenv
or
mov
mov
inc
mov
fsubl
add
dec
lret
ds
xchg
mov
fisubs
pusha
push
adc
mov
mov
andb
sbb
xor
icebp
int
or
lcall
jo
push
adc
or
jmp
lcall
mov
push
aam
outsl
ja
loope
shl
sti
pop
lcall
sbb
stos
out
dec
xor
aam
fsub
ret
xor
insl
jno
in
sbb
or
bnd
mov
xor
mov
adc
cmpb
mov
jmp
fcomps
jp
xor
mov
adc
dec
mov
adc
mov
int3
clc
push
ret
xchg
outsl
out
rolb
push
cwtl
mov
adcl
push
movsb
or
cmp
in
jne
les
add
adc
in
add
mov
incb
ret
repz
sarb
mov
sbb
cs
fcomp
fidivl
xor
into
xchg
jmp
daa
xor
sbb
mov
int
popa
cmp
cmp
mov
push
idivl
pusha
adc
lock
inc
nop
mov
push
sub
inc
mov
cltd
movsl
lret
xor
pavgw
pushf
xchg
lcall
nop
call
or
addr16
inc
xchg
decb
lea
jnp
xchg
sahf
adc
push
push
loopne
mov
iret
pushf
aaa
xor
add
arpl
mov
jecxz
leave
push
jnp
xor
test
or
arpl
mov
pop
aad
push
rcll
sbb
dec
pop
stos
imul
inc
jl
mov
and
jo,pt
nop
or
mov
outsl
popf
hlt
movsb
inc
push
jmp
mov
fidivrl
pop
sub
insb
and
psrlq
and
dec
mov
filds
fisubs
xchg
mov
pop
push
jns
push
dec
sub
mov
dec
xor
jmp
stos
lock
cmp
lret
sbb
mov
cli
inc
loope
stc
testl
mov
jns
movsb
jle
xlat
lock
sbb
nop
mov
mov
sahf
jg
enter
sub
inc
insb
pop
sbb
int
xor
xchg
int
push
push
scas
push
xchg
xchg
adc
lret
add
loop
mov
cmp
out
pop
sahf
dec
sbb
int
jge
fiadds
repz
jnp
jmp
jp
xor
dec
bound
add
cmpsl
aad
imul
popa
inc
rcl
rol
je
cmp
ror
loopne
loopne
jno
pop
iret
jnp
jb
mov
mov
outsl
je
mov
push
ret
movsb
andb
xor
movsl
xchg
pushf
gs
jge
inc
outsb
js
lods
enter
scas
test
lods
mov
xchg
ret
stos
jno
xchg
push
nop
pusha
cld
scas
push
sbb
repnz
test
sub
insb
xchg
mov
jne
stc
aam
adc
ja
lcall
bound
or
xor
push
loopne
shl
sbb
cwtl
adc
loop
ds
or
rorb
ss
sub
jge
sub
push
les
dec
lahf
adc
dec
mov
test
dec
xor
xor
push
mov
add
test
loopne
loopne
xor
icebp
lds
lret
pop
inc
mov
test
xchg
andl
aad
jnp
ljmp
sbb
aam
pop
mov
inc
into
jmp
repz
xor
jp
mov
sahf
lahf
lahf
cmp
pop
lcall
mov
jb
loope
push
and
loope
jge
ja
pop
jle
popa
out
jnp
cmp
js
mov
mov
pop
fmull
idivb
gs
jmp
push
xor
xchg
in
cli
mulb
movsb
mov
pop
sbb
shr
dec
syscall
fnstenv
push
notl
mov
lds
lret
add
les
push
mov
mov
xor
inc
sbb
data16
fcmovnb
stos
cmc
addl
lcall
pop
js
mov
jnp
sub
adc
repnz
cmpl
push
xor
mov
push
and
hlt
sti
idiv
adc
pop
shl
push
rclb
lcall
jg
xchg
or
jb
mov
lcall
lahf
mov
or
lods
sbb
popa
jmp
pop
push
sbb
test
jns
sarl
leave
and
jg
mov
mov
jge
lock
or
xchg
insb
sbb
mov
cltd
push
jnp
fsubs
das
bound
xchg
fiaddl
or
push
daa
out
lret
mov
xor
and
nop
xor
cmp
iret
loope
inc
inc
cmp
jb
xor
cmp
sbb
imulb
push
incb
xor
xor
and
push
add
push
aam
icebp
cmp
in
int
stos
push
add
stc
rolb
push
dec
sbb
mov
pop
ss
mov
pop
dec
push
cmp
iret
jmp
inc
aam
cmp
scas
dec
cmp
pushfw
enter
pop
mov
xor
aad
imul
jge
push
andb
dec
xchg
divb
or
mov
jecxz
idivl
adc
std
jbe
imul
data16
lcall
jns
xchg
aas
popa
movsl
fimull
add
sahf
push
cltd
push
leave
mov
sar
jnp
dec
scas
aam
out
sub
scas
jae
lahf
sub
dec
dec
lcall
pop
nop
push
and
jge
sub
ds
cltd
lock
push
loop
mov
push
lock
call
les
xchg
out
push
rclb
push
dec
push
mov
mov
lahf
sbb
mov
je
add
push
cmp
push
out
mov
xor
int3
or
dec
enter
sbb
pusha
xchg
das
and
icebp
push
mov
mov
int
rcrl
in
es
lcall
jl
iret
lret
aad
and
fstl
xor
jne
xor
in
xor
inc
movsb
dec
cli
or
aas
ror
shrl
getsec
pop
mov
mov
or
outsl
adc
sub
stos
xor
cmpsl
cs
xchg
pop
ss
sahf
adc
mov
test
adc
jg
test
mov
pushf
sti
les
cmpsb
or
mov
fdivr
addl
xchg
enter
nop
or
ret
push
add
and
add
sarb
cltd
and
fidivl
fbstp
inc
addr16
xor
inc
mov
clc
arpl
rorb
popf
cmp
movsl
xchg
push
jns
loop
test
fdivl
enter
leave
ja
mov
aad
enter
movsb
shr
xor
hlt
lret
push
aam
xor
xorb
add
lret
mov
dec
jb
lods
xchg
dec
add
jae
fiadds
in
bound
in
xor
jno
push
pop
pcmpeqb
and
arpl
pop
aaa
inc
cmpsb
jbe
pop
sbb
or
cmpsl
add
mov
sub
inc
pop
shll
xchg
push
std
movsb
repnz
outsb
cmp
jl
cmp
jno
lea
pop
test
in
or
out
div
iret
jns
cmpsb
adc
inc
adc
xchg
mov
mov
pop
inc
pusha
inc
movsb
push
ja
pop
mov
mov
cld
lods
out
jle
jnp
cmp
adc
aaa
push
pusha
pop
addr16
stc
inc
cmp
lods
ficomps
adc
adc
xor
testl
sbb
jp
mov
inc
xchg
rcl
jecxz
cmp
les
add
pop
adc
xchg
mov
movsl
lcall
lcall
js
jg
out
lods
mov
cmp
std
pop
mov
lock
and
movswl
popf
jecxz
jne
jne
jbe
mov
mov
or
mov
sub
pushf
xor
pop
das
insb
imul
xchg
sub
es
cmp
mov
shrd
add
mov
xchg
jae
inc
pop
push
pop
popa
xchg
push
subb
fucom
stc
ret
loope
and
sub
cmpsl
daa
lods
or
popf
ja
jne
xorb
ja
scas
loope
incb
cmc
lods
jnp
add
and
adc
mov
imul
mov
nop
xor
loopne
mov
or
or
int3
xlat
out
clc
ficompl
fwait
adc
sbb
shll
inc
push
loop
lcall
add
ret
sub
xor
dec
cmp
mov
hlt
pushf
sub
clc
mov
mov
inc
fs
jmp
sbb
mov
ljmp
jl
sbb
mov
inc
popa
cltd
loope
lods
xor
in
loop
xlat
xor
scas
lods
fs
ja
js
cltd
adc
ja
and
je
mov
push
call
mov
push
push
dec
lds
or
cmp
jnp
fwait
cwtl
jo
cmp
test
pushf
ljmp
sub
daa
push
mov
add
fisttpll
dec
fists
mov
mov
mov
pop
icebp
sahf
push
push
adc
pop
add
fcomi
lea
jne
cmp
push
add
aam
push
cmp
movsb
adc
rep
push
push
arpl
inc
mov
sti
shlb
dec
add
fstpt
fnstcw
pop
mov
popl
or
xchg
jne
or
mov
push
inc
mov
push
add
and
and
pop
xorb
repz
pop
insb
insl
jns
insb
lods
icebp
insl
xchg
and
xchg
mov
push
mov
push
roll
dec
cmp
ja
cmpsb
sbb
push
std
in
xchg
aam
sbb
inc
ds
push
jno
das
enter
and
fs
push
adc
push
lea
imul
call
test
push
dec
adc
pop
xorl
inc
sub
shll
loope
adc
fcomps
lahf
ret
xchg
ja
sub
or
jl
push
sti
mov
and
jae
int
pop
fsubs
add
mov
lret
fsubrs
loop
out
jecxz
insl
gs
fcomps
cli
or
push
in
test
sarb
faddl
xchg
pop
sub
xchg
adc
inc
mov
clc
jo
inc
sbb
adc
cmp
and
xchg
and
sub
sub
rcrl
scas
mov
xchg
xchg
fwait
cltd
outsb
jns
inc
pushl
dec
test
sub
pop
xchg
lods
jge
xlat
add
push
xchg
pop
dec
test
or
roll
mov
out
test
lods
and
rcrb
inc
or
nop
fadds
cmpsb
js
test
gs
push
idiv
repz
pusha
in
call
add
js
sub
dec
mov
mov
inc
insb
pop
jb
ja
clc
dec
and
xchg
adc
push
or
imul
xchg
xor
stos
sarb
xchg
or
outsb
pop
cmp
ljmp
loop
mov
pushf
enter
push
xchg
sbb
outsb
sbb
loop
pop
xchg
add
cmp
cmc
sbb
jns
dec
push
sbb
jnp
mov
loop
in
sub
jl
jge
add
xchg
repz
xchg
test
adc
inc
mov
adc
mov
push
push
sub
test
in
sbb
aad
imul
xchg
loopne
gs
in
xchg
stos
adc
je
test
fwait
mov
shll
stos
cmp
mov
popf
insl
xor
mov
cltd
inc
lock
shll
cld
xchg
js
push
stc
fwait
xor
jl
out
mov
clc
add
inc
push
xor
pop
dec
add
scas
mov
into
andb
push
shll
sub
jne
dec
adc
and
xorl
pop
fst
mov
sbb
adc
and
cmp
mov
mov
push
pop
lcall
shll
push
jae
jbe
mov
or
and
mov
fnsave
nop
mov
aad
scas
lds
mov
xchg
and
and
ret
jno
cmp
sub
push
mov
shll
adc
jl
sub
sub
bound
sub
popf
out
adc
imul
mov
shr
mov
hlt
mov
leave
cwtl
repnz
mov
pop
sbb
xor
loope
cmp
push
pop
callw
sbb
push
pop
pop
test
jns
in
mov
inc
dec
add
dec
mov
lock
cs
jo
pop
mov
addb
jge
movsl
sub
xchg
insl
std
mov
and
lahf
mov
icebp
jnp
in
jg
xchg
inc
pop
addr16
jne
ret
push
in
imul
orl
dec
sub
push
imul
push
cmp
and
cltd
sbb
mov
mov
outsl
xor
clc
aaa
clc
xchg
jg
add
mov
and
cmp
cmp
xchg
enter
and
lar
push
popf
pop
lahf
inc
xor
fistpll
ss
imul
push
sti
mov
inc
rcll
inc
mov
outsb
lret
es
out
into
aaa
pop
adc
fsubrs
inc
jbe
sub
in
sub
rolb
adc
pushf
cmp
ret
test
cmp
mov
jnp
dec
ret
mov
push
push
test
leave
cs
xorl
xchg
mov
xor
call
cmpsb
xchg
dec
sub
xor
inc
inc
xchg
cltd
arpl
pop
xlat
lret
cli
fdivs
loop
mov
mov
ss
cmpl
and
mov
sti
rolb
push
cwtl
cli
mov
test
fdivrl
out
stos
insb
cmp
adc
xor
nop
sub
out
cs
push
xlat
push
jp
flds
pop
jae
sarl
and
inc
inc
mov
pop
jae
movsb
cmp
loop
xlat
fwait
fstpl
in
repz
mov
sub
int3
and
ja
ficomps
sbb
dec
mov
jno
stos
loop
jecxz
out
xchg
je
in
and
inc
mov
or
les
ds
xor
pop
rclb
dec
mov
scas
or
or
jg
cmp
pop
popa
pop
mov
inc
pop
xorb
jno
xor
push
icebp
aam
add
push
hlt
out
cmp
insl
sahf
and
stos
pop
scas
push
push
mov
cmp
div
into
mov
out
test
aam
sahf
jle
jle
jne
mov
fs
dec
movsl
xchg
out
lret
fsubs
mov
mov
aam
jp
lret
adc
xor
mov
xchg
mov
arpl
xchg
pop
out
int
lret
xchg
jne
mov
leave
mov
jp
mov
sbb
scas
imul
aas
movsb
popa
xor
outsl
nop
ficompl
lock
cli
sub
mov
lea
arpl
push
push
dec
dec
sub
inc
mov
pop
push
push
push
lcall
lods
mov
loope
cmp
xchg
pop
call
scas
inc
shlb
mov
sub
shr
inc
sub
mov
lret
clc
push
mov
cmpl
ja
cwtl
or
jge
int
rclb
mov
dec
and
fadds
sbb
test
inc
roll
enter
jg
inc
loop
add
daa
pop
cld
cmc
mov
xchg
sbb
jg
push
sbb
outsl
push
jo
jno
fldcw
pop
sahf
dec
adc
xchg
add
and
fwait
xchg
stc
pop
in
fistps
mov
dec
xor
dec
inc
dec
push
arpl
pop
mov
dec
sub
push
inc
dec
xor
sub
adc
xchg
jb
mov
mov
mov
jge
out
sbb
add
and
mov
sbb
call
xchg
lret
sbb
lock
and
lret
stos
xchg
cmp
arpl
xchg
dec
stos
ljmp
js
adc
mov
xchg
es
xchg
lret
lea
sahf
popl
lret
push
cmc
cmp
push
hlt
clc
stos
int
jno
icebp
movl
mov
mov
xlat
dec
lock
push
xchg
mov
cmpsl
cmpsb
icebp
jge
adc
xor
xlat
xor
mov
aaa
loope
push
popa
sbb
jno
in
mov
clc
jbe
divl
ljmp
dec
out
pop
push
or
insl
cmp
xor
or
push
mov
je
jbe
das
add
push
mov
call
daa
xor
popl
mov
shlb
fildl
dec
lea
push
or
and
jl
addr16
in
or
jbe
rcr
mov
fcoms
jmp
jecxz
cltd
arpl
push
out
or
ret
xchg
fbld
or
insb
mov
lea
mov
test
shr
jle
out
sti
stos
int3
adc
ret
cmc
xchg
pushf
and
mov
ds
idivl
cmpsl
subb
xor
or
out
jns
xchg
xchg
inc
adc
ds
jbe
test
jle
addr16
in
mov
subb
sbb
popa
lods
jmp
in
or
add
lret
xchg
mov
mov
cmp
sbb
fcmovnb
mov
rcll
lret
rolb
cli
push
push
push
mov
pop
add
fwait
sbb
in
jp
cmc
dec
sti
xor
divb
push
pop
sub
in
mov
or
xlat
fiadds
fcomps
repnz
push
loopne
sub
sarb
mov
and
cmp
lods
and
inc
sbb
insb
jle
aam
adc
stos
mov
xor
popf
lcall
fnsave
dec
aas
data16
lds
push
jmp
cli
mov
mov
cmp
pusha
data16
std
dec
push
aas
sbb
mov
sarl
data16
mov
jge
jmp
jae
cmp
or
lods
scas
lahf
fiaddl
cltd
ljmp
push
es
dec
test
leave
push
pop
cwtl
mov
sbb
enter
mov
push
test
or
cmp
flds
or
dec
aaa
rcpps
cmp
stc
lret
dec
test
sarb
loop
lret
fs
divl
lret
int3
out
mov
xchg
repz
xchg
rolb
movsl
sbb
mov
mov
das
sub
pop
out
jo
dec
sahf
xorl
repz
js
cwtl
pop
and
imul
rorl
push
adc
sbb
push
and
adc
lods
push
xorb
cmpsl
adc
mov
ja
scas
andb
dec
lret
mov
or
dec
ljmp
arpl
loope
sbb
rorl
add
mov
inc
add
cmp
pop
or
mov
mov
mov
add
or
lds
push
adc
or
into
mov
test
mov
jae
cmp
lods
scas
adc
xchg
stc
cmp
in
shl
pop
mov
lock
aam
fistpll
xor
jp
std
faddp
pop
jp
fisttpll
add
cli
movsb
and
int3
or
push
out
xor
aad
xchg
mov
testl
fwait
push
xor
and
fdivl
loope
jno
lock
push
xchg
rcrl
xor
rsm
sbb
jle
int3
call
bound
push
fs
xor
or
xor
arpl
repnz
int
sti
lods
repz
xchg
push
aas
cs
jno
pop
fcmove
push
leave
scas
js
icebp
and
add
cwtl
or
adc
idivl
mov
sbb
sbb
inc
pop
pop
pop
sub
sti
jbe
cs
mov
dec
lock
loope
cmp
mov
fcompl
mov
push
cmpsb
dec
inc
clc
aad
stc
out
push
jmp
movsb
xchg
jns
hlt
and
pop
pop
xlat
pushf
std
les
and
std
jbe
sti
xor
jecxz
cmp
subl
sbbl
xchg
sbb
lret
xchg
add
aad
cwtl
pop
mul
fstpl
add
cmp
loopne
leave
dec
int3
in
cmc
and
xchg
adc
repz
xlat
addr16
mov
mov
push
push
pop
sarb
inc
jge
sbb
inc
cmp
push
and
shll
ss
aam
adc
sbb
out
xchg
std
and
mov
test
aam
das
stos
mov
icebp
xchg
sarl
es
push
add
push
ss
and
pop
hlt
daa
leave
sbb
adc
and
adc
push
arpl
cwtl
sti
cmp
xor
in
arpl
fiadds
roll
mov
dec
pop
cmp
jb
pop
and
cmpsb
cmp
hlt
jnp
or
popf
dec
stc
add
mov
adc
test
inc
in
pop
cmpxchg
sub
add
lret
xchg
mov
mov
call
rcrb
mov
cmpsl
xlat
std
clc
pop
mov
sub
or
js
mov
sub
in
dec
push
daa
mov
insb
mov
jmp
addr16
cmpxchg
dec
fbstp
fisttpl
outsl
xor
jbe
lea
stos
cmp
int3
jne
pop
xor
lods
aam
test
pop
leave
or
ljmp
adc
push
jg
push
cs
jnp
imul
mov
in
popa
iret
or
data16
jne
xor
mov
inc
jecxz
xchg
push
idivb
pop
add
mov
aad
in
ja
cmc
jmp
call
lahf
mov
stos
sub
lds
lock
in
mov
jg
je
push
ror
cmpb
cwtl
or
icebp
and
xor
iret
jb
or
inc
les
pop
inc
inc
mov
sub
das
leave
add
je
cmpl
sbb
mov
and
xchg
sbb
fcomps
xchg
and
rcrb
sbb
imul
pop
adc
jmp
push
and
cmp
adc
aam
pop
xchg
clc
dec
outsb
fsubrs
data16
outsb
mov
test
imul
lods
ret
hlt
push
mov
inc
cmpsl
out
mov
dec
lret
mull
ja
fisttpll
imul
mov
cmc
jae
push
rorb
pop
pop
test
mov
add
sarb
repz
sbbb
jg
push
pop
imul
push
int3
rolb
int
xorl
cwtl
xchg
pop
or
mov
addr16
or
push
aam
jnp
cwtl
sbb
mov
fs
fadds
push
jbe
cmpsl
into
jmp
mov
sub
sub
popf
adc
jns
sbb
mov
insl
jo
inc
pop
sti
sub
mov
add
cmp
inc
and
out
sub
dec
lcall
aaa
sub
outsl
xor
out
or
nop
fsts
ljmp
inc
add
mov
add
and
aaa
imul
dec
mov
movl
xchg
in
add
mov
cmp
pop
pop
cmpsb
dec
push
jge
pop
cmpsl
jecxz
mov
jb
hlt
xor
repnz
cmp
push
out
cmc
pop
aas
pop
sbb
cmp
adc
adc
ret
mov
imul
xchg
push
adc
ret
push
sbb
mov
adc
lock
push
jnp
ss
mov
addr16
rorb
pusha
mov
add
clc
stc
das
repz
test
out
inc
mov
in
pusha
push
stos
les
dec
xchg
into
inc
mov
xor
daa
scas
mov
cmp
sub
cld
cmc
xchg
dec
fdivrl
stos
push
jns
dec
outsl
jge
in
xor
cmp
cs
push
pop
push
iret
mov
dec
cmc
xchg
jmp
cwtl
sub
mov
cwtl
inc
fstpl
push
pusha
dec
addr16
adc
sbb
rsm
stc
sahf
mov
pop
pop
stos
in
or
sub
xchg
pop
inc
ret
rcrb
push
jge
imul
dec
les
inc
sarb
inc
inc
rol
loope
fwait
imul
push
cmc
cmpsb
mov
fdivrs
pop
sti
clc
leave
ds
add
andb
pushl
adc
call
push
movsb
jge
add
out
sbb
fiadds
repz
shll
out
xchg
bound
popa
call
jb
xor
mov
ret
sub
pop
loopne
add
lock
cmp
rep
int
mov
mov
aad
cmp
lret
cmp
ret
lds
or
imul
dec
loopne
test
xor
sbb
jle
inc
pushf
dec
aaa
jbe
loope
lcall
lock
ret
xchg
stos
dec
rcrb
rolb
cli
arpl
cmp
sbb
mov
push
sub
imul
jne
inc
xchg
push
cmc
inc
mov
fsubrl
or
add
push
cmp
pop
pop
aas
mov
add
pop
not
mov
adc
cmp
test
lcall
mov
fdivs
arpl
jecxz
cmp
xchg
cmpsl
cmp
rorb
sarb
inc
test
sub
fbstp
repz
pop
sbb
fisttps
xorb
fsubrp
ret
movsb
xchg
sub
add
pop
arpl
pusha
push
imull
push
or
in
xor
std
mov
int
cmpsb
and
faddp
std
nop
aam
aad
cmp
and
test
fwait
mov
inc
push
mov
jmp
inc
add
and
mov
test
int3
mov
xchg
fcoms
test
xor
out
pop
leave
pop
mov
push
gs
mov
xchg
jle
mov
dec
aas
pop
jnp
fsubs
pop
idiv
jb
es
push
or
cmp
mov
ds
inc
adc
dec
iret
xchg
xchg
cmp
imul
adc
negl
adc
cli
and
insb
cmp
sti
lret
mov
mov
xchg
add
mov
jb
xchg
jns
lods
mov
test
mov
sub
mov
pop
lcall
stc
mov
mov
lret
pushf
xorl
aad
mov
mov
pusha
fadds
das
jns
clc
sbb
incl
ret
inc
mov
mov
add
adc
inc
pop
fisubs
cmp
in
sbb
leave
outsb
pop
loop
out
lock
nop
mov
adc
adc
cld
xchg
data16
dec
sbb
jbe
sbb
iret
enter
inc
xchg
jg
shll
imul
pop
mov
sub
addr16
cmc
mov
das
add
call
sar
mov
pop
lea
lock
dec
inc
lret
push
add
scas
fnsave
fsubs
rolb
pop
int
or
dec
movsl
or
setno
inc
mov
stos
push
xchg
roll
mov
inc
fldt
or
incb
pop
mov
sub
jns
push
test
cmpsb
jmp
xlat
rorl
outsl
je
aad
push
insb
dec
fcoml
xchg
shr
bound
jno
hlt
sbb
pop
mov
mov
sbb
dec
divl
cmp
dec
pop
sub
outsb
imul
mov
popf
sbb
sub
cmp
push
js
inc
inc
xchg
int
divb
in
inc
xor
sahf
push
add
sbb
jle
jge
movsb
mov
lds
loopne
cmp
sub
imul
pop
jmp
fstpl
lret
mov
out
adc
adc
data16
adc
lea
aad
les
js
xchg
fnstsw
or
pop
push
xlat
cmp
imul
arpl
adc
lods
xchg
ss
cmpsl
jle
mov
xchg
add
add
or
and
stos
fs
xchg
push
add
fidivs
jmp
jns
lds
in
arpl
dec
push
xor
pop
inc
cmpsl
testl
aam
cmp
lods
in
adc
dec
std
cld
cli
imul
inc
cmp
push
or
fildl
and
int3
mov
movsl
insl
push
jmp
xchg
pop
add
loopne
pop
lods
mov
mov
and
cli
js
int3
push
cwtl
cmpb
adc
pusha
mov
movsb
inc
clts
dec
sar
sti
fisttpll
xchg
aad
movsb
lahf
sbb
adc
sbb
xchg
add
sub
sbb
outsl
ss
jne
insb
push
inc
es
leave
pop
rcll
imull
mov
out
aam
dec
or
add
inc
push
adc
jmp
fst
sarb
std
xorl
cmpsl
sarb
sub
je
ljmp
popw
cmp
mov
push
test
insb
cli
in
push
es
shrb
out
mov
cmpsb
aad
cmp
in
push
mov
leave
dec
repz
jp,pn
pop
bound
les
aas
xor
inc
jg
jns
jl
loope
mov
sarl
aam
sub
imul
lret
leave
dec
mov
jmp
xor
popa
outsl
xchg
das
xchg
aas
psubsb
push
mov
mov
push
mov
xchg
stos
xchg
and
test
or
repnz
sbb
test
push
mov
repnz
shrb
xor
das
mov
sbbl
bnd
leave
sub
cwtl
lds
cmpsl
fldl
ds
xor
mov
lret
dec
shlb
popf
hlt
sub
add
movsl
cs
dec
mov
lahf
push
fdivrs
mov
xchg
add
dec
sahf
dec
test
int
aaa
push
cmp
add
dec
cmpsb
dec
icebp
push
je
popa
jbe
cmp
xor
lds
and
jmp
filds
cmp
fwait
or
mov
add
scas
jno
pop
pop
mov
je
mov
rcrb
popa
dec
enter
out
add
aas
js
fs
jmp
and
fsubrl
adc
mov
add
push
push
sub
dec
push
dec
fdivl
out
test
cmp
fiadds
fisttpl
mov
sbb
lahf
movsl
xchg
add
mov
xchg
movsl
icebp
pop
movsb
loope
fdivrs
mov
mov
pop
mov
sarb
mov
ss
pop
shll
test
stc
movl
inc
mov
fiadds
fwait
call
mov
pop
push
sbb
in
jle
jmp
lret
insl
clc
pop
xchg
adc
mov
insb
es
aas
and
sbb
out
adc
int
pop
les
push
das
add
sbb
mov
cld
dec
pop
xchg
push
cwtl
dec
cmp
cmp
loop
xchg
nop
adc
das
fmull
int3
cmp
jg
jne
sbb
cmpsl
xlat
sub
shrl
mov
xchg
aam
fwait
and
push
pop
test
les
sub
mov
icebp
mov
nop
rcr
test
aas
movsl
notb
add
mov
movsb
scas
cmp
xor
or
jno
imul
push
xchg
lea
or
pop
shll
add
cs
in
bnd
add
and
rolb
repnz
lret
mov
sbb
movsb
lret
sub
jp
sbb
cmc
add
insb
sbb
in
das
enter
mov
aas
jne
xchg
aad
mov
sub
mov
mov
ret
xlat
sarb
movsbl
adc
xchg
dec
sub
loopne
mov
push
test
mov
cmpl
mov
int3
sbb
testl
add
sbb
fcomp
cmp
xchg
das
sbb
mov
push
stos
fcomi
jno
mov
sbbl
or
xchg
mov
dec
mov
and
adc
in
lret
rclb
lcall
jge
cmc
cltd
sub
rcrb
adc
in
add
bound
cmpsb
sub
dec
and
adc
ss
push
cwtl
mov
es
lods
mov
adc
loop
jnp
or
popa
and
jge
or
mov
sbb
insl
test
popa
xchg
fsubs
xchg
fnstenv
in
cmpsl
xchg
lods
push
gs
or
dec
pop
mov
add
lcall
push
sahf
cmpsb
in
fildll
ja
jae
ret
je
test
fwait
and
divb
clc
cmpsl
idivb
mov
jne
jg
mov
loope
addr16
dec
idivl
pop
sub
push
sbb
out
xor
xchg
mov
cmpsl
inc
leave
insb
pop
push
pusha
cmpsl
jmp
sbb
movl
cmp
jb
adc
pop
add
int3
jg
insb
dec
mov
adc
jle
shll
mov
jno
repnz
lahf
rorl
scas
rorl
fsubp
mov
add
or
cmp
push
push
mov
jns
dec
and
cs
in
mov
hlt
sub
mov
adcw
repz
push
mov
jg
add
and
xor
inc
into
jecxz
push
and
mov
int3
sti
cmc
push
orb
sbb
mov
mov
dec
int3
iret
xchg
cmp
aad
subb
mov
add
les
incb
xchg
test
cmpb
push
cmp
movsl
repnz
enter
pop
push
xor
or
je
cs
add
icebp
clc
in
inc
ret
jmp
mov
in
ljmp
pop
lahf
jmp
jne
mov
sub
lcall
jle
cmpsl
test
jg
icebp
neg
and
adc
dec
mov
jp
repnz
adc
rcrb
icebp
push
in
lcall
insb
in
or
scas
fidivl
lea
jbe
shlb
sbb
shr
stc
es
pop
jp
xchg
pushf
outsl
jmp
imul
and
lods
sarb
pop
mov
inc
or
je
lret
icebp
xchg
mov
fsqrt
inc
and
and
pop
mov
jmp
cmp
mov
xor
jp
cmc
lds
hlt
nop
loop
movl
push
mov
sbb
outsl
std
sub
mov
js
sti
sub
or
pop
cmc
adc
push
jecxz
xlat
ljmp
lds
orl
cmp
repnz
xchg
mov
mov
les
jns
testl
mov
mov
pushf
cmp
and
jno
inc
roll
jge
mov
ljmp
popa
xchg
jo
mov
mov
cmp
mov
pop
dec
jae
popa
xor
or
push
into
inc
test
jecxz
inc
lret
xchg
in
sbb
out
adc
out
dec
ds
push
sahf
test
cmp
ljmp
fwait
stos
lcall
int3
xlat
test
dec
jl
rep
jg
jo
jae
pop
fsub
fstpl
sbb
fldl
loop
dec
aam
mov
inc
adc
xlat
daa
add
pop
imul
das
arpl
out
push
js
mov
clc
std
ljmp
xorb
rcrl
adc
xchg
jle
jnp
pop
mov
sti
adc
ljmp
mov
jo
mov
push
mov
add
push
dec
sahf
jg
xchg
jnp
out
dec
and
mov
jmp
xchg
cld
push
sub
sbb
stos
scas
or
sub
mov
jb
cmp
adc
pop
inc
push
ret
lret
aad
or
or
fiaddl
das
mov
ret
popa
popf
and
jae
pop
out
jnp
mov
aad
mov
xchg
mov
out
aam
fcoms
push
xor
mov
add
iret
pop
fbld
ljmp
movsb
mov
or
push
lahf
sub
and
pop
pop
pop
aas
fimuls
rcr
test
jo
adc
mov
std
jnp
jmp
jne
sub
cwtl
shrl
ljmp
sub
rol
cmc
nop
movsb
sub
add
ret
dec
or
mov
popa
xchg
out
mov
addr16
or
jle
sti
in
pop
xor
inc
int
inc
fwait
adc
js
pop
repnz
loop
cmp
adc
or
leave
sbb
mov
enter
push
adc
sahf
out
cmp
popa
inc
cwtl
adcl
cmp
ret
or
cmpsl
xchg
dec
mov
xor
mov
mov
movlps
cmc
outsl
or
mov
arpl
in
pop
je
lahf
inc
xchg
jge
cmp
push
and
push
inc
addr16
bound
stos
and
iret
add
push
add
sarb
dec
ret
std
sub
adc
cmpsb
ljmp
adc
xchg
repnz
add
loop
mov
int3
aam
push
popa
cmp
mov
std
popf
xchg
push
xchg
scas
ret
push
cmp
testl
cmp
sub
xor
sbb
movsl
cld
fsubrl
add
mov
cmc
mov
lock
aas
dec
in
push
dec
out
push
jb
pop
push
fcompl
adc
jl
xor
movsl
or
sbb
rcll
loope
je
adc
hlt
aas
sub
xor
mov
loop
xchg
sub
cmpl
cli
jnp
lods
fwait
sub
popa
jo
mov
pop
ss
enter
stos
jno
xor
jne
in
or
mov
pop
jae
rclb
jo
mov
imul
xor
cmp
push
outsl
push
inc
mov
cmp
mov
or
add
dec
jo
and
xchg
mov
neg
cmp
xlat
pop
pop
mov
xchg
mov
rorb
into
jnp
dec
jno
mov
out
adc
or
cmp
inc
mov
push
shrl
das
cld
mov
add
loopne
and
pop
mov
out
adc
xchg
ja
xchg
icebp
repz
fldcw
jo
xlat
les
jl
lods
mov
pop
cltd
outsb
sahf
or
xchg
xchg
mov
shll
call
outsl
shld
adc
aaa
and
sub
cmpsl
jns
shl
test
add
fs
jno
push
dec
imul
lock
and
sbb
imul
mov
mov
subb
or
ja
or
mov
inc
loopne
imul
and
scas
jns
out
addr16
mov
cmp
and
jnp
pop
outsl
and
xor
out
shrb
and
mov
loope
in
cmp
jnp
fsts
jo
iret
pop
sbb
in
fidivs
fdivrl
sahf
sahf
out
or
out
out
imul
clc
aaa
cwtl
add
sbb
test
adc
test
cwtl
mov
cld
or
jb
lods
xor
mov
fsubs
insl
lods
mov
addl
dec
les
xchg
jne
pop
or
jecxz
ja
mov
and
fidivl
dec
push
jge
outsl
dec
repz
dec
stc
ljmp
cmp
jmp
out
cltd
jl
add
jbe
iret
adc
xchg
push
iret
sbb
rclb
leave
js
mov
adc
dec
cld
ja
adc
lds
clc
push
shrl
xor
push
cmpsb
repnz
mov
in
lds
test
jns
sti
fidivrl
add
dec
sbb
psllw
scas
test
pop
inc
lock
push
dec
add
movsl
lods
push
adc
and
rorb
inc
movsb
faddl
arpl
sti
mov
test
movsl
sahf
xchg
push
push
mov
pushf
leave
adc
nop
adc
push
divps
loop
popa
pop
cmp
jb
xlat
mov
insb
and
loope,pn
leave
cmp
pop
mov
inc
mov
push
notb
clc
subl
mov
jae
push
fsts
testl
fidivl
cmp
adc
xor
xchg
mov
jns
mov
sbb
lahf
inc
fxtract
mov
cmp
cmp
adc
data16
aas
or
add
lds
les
mov
aaa
jae
popf
popf
addb
filds
adc
xor
dec
clc
ja
pop
pushf
adc
into
clc
push
and
inc
js
call
and
out
cmp
jo
data16
fistl
and
cmp
fistpll
xchg
pop
dec
dec
iret
and
stos
mov
fldl
jge
insl
mov
mov
inc
pusha
inc
pop
lods
jnp
jge
sub
sub
mov
bswap
sub
pushf
fbld
repz
jno
out
cmpsb
sahf
pop
pop
xor
imul
mov
in
xor
test
sub
mov
jbe
test
xor
adc
rol
or
mov
mov
jmp
xchg
repz
or
inc
add
lahf
or
aas
aas
dec
dec
leave
ffree
push
dec
out
xchg
mov
sub
andb
outsl
pop
inc
jo
clc
pop
jbe
inc
mov
push
or
dec
or
push
xor
lock
push
dec
fcomp
pusha
icebp
cmpsb
leave
push
cmpsl
insl
sub
add
lret
divl
mov
xor
sbb
jp
repnz
jge
stc
inc
cld
addr16
bswap
xor
add
iret
dec
lock
ss
outsl
outsb
movsl
addr16
sbb
outsb
movsb
dec
fs
dec
and
dec
daa
pusha
lcall
out
loope
mov
pop
mov
mov
mov
push
int3
xchg
pop
das
push
jl
push
inc
inc
aam
imul
ja
xor
fwait
and
dec
clc
out
stc
inc
loope
rcr
pushf
mov
test
in
push
jb
push
add
inc
sbb
popa
xchg
pop
divl
movsb
fsubrl
jmp
jg
inc
sub
mov
test
jl
mov
repnz
lcall
imul
gs
pop
pop
fdivl
pop
aaa
cmovs
cmpb
lcall
js
adc
movsl
fnstenv
inc
or
cmpsl
push
gs
and
lods
and
leave
idivl
add
fldcw
clc
mov
or
or
and
test
mov
lcall
ret
xchg
dec
push
and
pop
hlt
ds
fwait
xor
xor
das
or
lahf
jmp
xchg
jge
mov
add
pop
pop
in
add
iret
pop
adc
mov
cli
shll
mov
xchg
loopne
mov
in
fstl
leave
xchg
and
xchg
popf
push
xchg
data16
xlat
sub
lods
mov
repnz
mov
data16
lret
scas
call
and
lds
lret
add
xchg
stos
xchg
fimull
or
lahf
movsb
fbstp
call
pop
sub
sbbb
leave
js
xor
repnz
push
mov
cmpsb
add
nop
enter
jl
dec
les
imul
pusha
movsl
mov
or
jmp
or
inc
pop
pop
xor
dec
add
adc
mov
lcall
repnz
sub
sar
fmuls
loop
pop
mov
hlt
out
imulb
xor
xor
and
loope
mov
incl
jecxz
xchg
lods
add
outsb
mov
cs
std
or
xor
mov
sbb
repnz
xor
sbb
mulb
sbbl
imul
push
adc
sub
cs
cmpsb
mov
pop
mov
pop
or
inc
loope
mov
and
fisubs
int3
int
jns
cli
dec
xor
jo
jg
mov
add
popf
pop
dec
jo
test
pop
in
ds
rorb
sub
test
or
push
inc
insl
imul
aas
jae
ja
es
cmp
sub
insb
lods
or
and
xchg
lret
stc
ss
mov
and
mov
sub
js
aam
jp
adc
into
push
inc
lods
push
mov
sbb
cmp
fdivr
xlat
mov
movsb
ja
out
or
pop
je
and
cwtl
mov
fstpt
cmp
xlat
jl
shlb
lret
jne
enter
push
out
push
cmpsb
lcall
sbb
or
inc
enter
push
into
inc
aaa
jmp
pop
arpl
fld
adc
aas
jp
add
mull
cmp
in
sub
xchg
jne
lcall
test
outsb
test
dec
addl
in
jge
ss
inc
add
cmp
cmc
icebp
aad
outsl
adc
inc
cli
adc
mov
scas
scas
xor
subl
and
out
xor
daa
xlat
mov
adc
xchg
add
in
jmp
xchg
js
bound
inc
xlat
mov
add
push
xchg
cmp
loope
push
xor
dec
add
push
cmp
xchg
sub
xor
and
movb
imul
inc
xor
mov
jmp
and
mov
das
and
leave
or
jae
and
mov
cmp
lea
mov
dec
lcall
mov
bound
stc
push
mov
mov
fwait
cmp
and
addr16
cmp
and
cli
int3
jnp
dec
xchg
push
stos
ss
xor
push
rcrl
mov
fldenv
pop
dec
mov
push
push
cmpb
shr
mov
or
cli
fldt
add
cmp
adc
fisubs
aad
outsb
sarl
mov
test
xchg
and
repz
aam
mov
mov
push
mov
lret
pop
jne
add
xlat
lret
push
inc
das
sub
popf
jmp
xor
jb
gs
stos
scas
cmp
mov
loop
dec
fmull
adc
es
mov
cmp
add
aad
bnd
mov
sbb
push
popf
cmp
inc
dec
push
outsb
ret
cltd
stos
jmp
pop
adc
mov
aam
in
xlat
cli
add
dec
cli
aaa
insl
xor
out
rol
push
call
mov
push
enter
pusha
rcrl
inc
jmp
push
xor
jmp
mov
loop
sbb
xchg
jecxz
mov
mov
pop
adc
dec
ret
push
adc
rol
xchg
push
fldl
pop
sbb
mov
cmp
leave
ret
cwtl
shrb
mov
adc
jns
divb
mov
inc
sti
push
scas
mov
out
xchg
push
cmp
jecxz
adc
inc
enter
in
bound
cmp
cs
fiadds
ss
jb
cmp
insl
xor
sbb
adc
stos
xchg
xor
in
mov
adc
pop
std
pop
inc
ja
pop
test
dec
pop
sarl
push
and
shlb
sub
or
cs
mov
xor
stc
cli
xlat
xchg
dec
adc
sbb
dec
add
push
cltd
mov
xchg
xchg
mov
adc
xchg
cmpsl
mov
push
push
cmpsb
adc
mov
mov
lds
and
push
mov
xchg
sbb
inc
fdivrs
cmpsl
mov
les
outsb
clc
ljmp
ljmp
scas
jo
or
stos
mov
and
iret
and
adc
shll
lea
xlat
loopne
add
or
clc
ret
xchg
pop
cmp
mov
mov
sub
loope
jmp
int3
mul
pop
sub
scas
clc
push
mov
inc
fs
loopne
cmp
hlt
sub
xor
call
jno
sbb
enter
outsb
xor
scas
mov
push
jno
pushf
sti
pop
dec
xchg
and
scas
sbb
ficoml
divb
xchg
pop
popa
repz
or
fsubrl
add
pop
call
dec
pop
sbb
outsb
lea
iret
dec
clc
sub
mov
xor
cwtl
aaa
push
repz
popf
mov
ficompl
pop
push
scas
mov
stos
jg
push
stos
push
pop
xchg
sub
stc
mov
insb
imul
mov
test
adcl
sar
adc
cmc
xor
mov
adc
loopne
pop
repnz
popa
bound
push
ja
lahf
ljmp
hlt
lret
mov
lock
cmp
push
jbe
out
jno
fucomp
aaa
inc
adc
and
mov
push
fisubrl
test
jg
in
push
cmpsb
cli
sarb
in
jnp
inc
or
push
lret
je
lcall
mov
push
mov
or
add
push
jl
push
mov
or
ret
aas
mov
pop
addr16
lea
das
popa
pop
xchg
xchg
sahf
std
or
mov
jmp
test
xor
scas
pop
xchg
sub
push
aas
std
mov
test
add
or
push
js
movsl
sub
iret
clc
dec
xchg
icebp
pop
cmp
sbb
es
test
mov
in
cmp
and
lret
das
inc
pushf
ja
inc
and
jle
repnz
mov
pop
fidivs
movsb
mov
xchg
pop
xor
aaa
add
enter
jmp
pop
dec
mov
mov
lret
mov
ja
mov
adc
cmp
in
mov
fcomp
and
fsubs
lock
js
inc
stos
lahf
cwtl
xor
push
out
cmp
xchg
mov
test
popf
mov
mov
or
dec
les
dec
clc
into
dec
cmpsl
pop
leave
xor
pop
aad
sbb
jl
and
mov
pusha
inc
dec
inc
mov
push
pop
mov
dec
sub
clc
scas
or
cwtl
sub
je
xor
sub
mov
dec
jb
push
fistpl
ficompl
rcr
scas
jl
mov
stos
stc
jns
and
into
aad
ljmp
cmp
dec
jl
jo
cmp
iret
cmp
add
jg
andl
aaa
push
jns
adc
inc
cmpsl
xor
jmp
inc
jge
mov
add
test
movsl
mov
and
std
and
loop
xchg
add
sub
mov
xchg
fstpl
cmp
imul
mov
sbb
sbb
popa
inc
sbb
std
lock
int
fwait
lcall
loop
mov
repnz
out
ljmp
pop
ja
push
fnclex
mov
pop
jp
aam
jge
jge
mov
jnp
inc
lods
test
and
add
clc
out
adc
inc
in
aaa
fdivrs
mov
in
ljmp
pop
repnz
shr
test
insl
inc
sub
imul
mov
mov
mov
mov
mov
xchg
jae
pushf
jne
testl
xchg
adc
incl
and
lea
add
hlt
sub
int
aad
mov
cmc
pop
adc
test
jecxz
sbb
mov
sbb
sbb
dec
pushf
mov
sub
clc
cmp
sahf
mov
jo
ds
mov
in
jg
cmp
in
ss
call
roll
outsb
mov
dec
adc
xchg
rorb
or
push
stos
push
pop
out
pop
mov
mov
xchg
and
adc
loope
std
inc
sub
cltd
cli
idivb
aad
fdivrp
dec
cmp
and
push
sbb
sbb
popf
mov
xchg
mov
insb
cmc
xchg
mov
lcall
sbb
ret
mov
or
and
adc
fwait
push
lods
lret
cmpsb
enter
into
push
pusha
iret
push
lds
mov
stc
xchg
cmc
mov
jmp
jo
cmp
dec
repz
and
lds
sbb
pop
stos
adc
xchg
jmp
stos
push
mov
sbb
add
dec
mov
and
pop
mov
pop
xor
push
iret
jl
xchg
mov
and
push
ficoml
jp
adc
pop
je
inc
mov
addr16
loopne
and
fstl
mov
inc
lods
xchg
inc
in
push
dec
jle
roll
cmc
les
je,pt
pop
mov
push
test
dec
mov
adc
fistps
data16
pop
adc
inc
pushf
xor
or
jns
test
xchg
mov
cld
into
or
xor
test
and
inc
loope
adc
add
jg
ret
into
inc
inc
rcll
mov
iret
int
pop
push
mov
repz
outsl
adc
cmp
sbb
enter
push
test
mov
or
add
in
jne
xchg
cmc
or
jo
loopne
iret
xor
mov
insl
xchg
dec
int3
enter
jne
dec
es
mov
or
clc
dec
clc
inc
mov
lcall
leave
pop
dec
xchg
cltd
sbb
inc
mov
pop
lea
cmp
push
push
push
aaa
outsl
imul
jmp
sub
pop
lea
mov
xor
sbb
fisttpll
and
mov
sbb
addl
sbb
jno
icebp
jns
neg
mov
mov
add
mov
sbb
cs
fsubl
xchg
nop
xlat
movsb
in
mov
pop
daa
xchg
repz
dec
aaa
and
pop
fimull
pop
xor
cmp
iret
lahf
inc
lea
xor
push
incl
and
outsb
stos
add
or
sub
enter
sub
inc
xor
arpl
sti
rcll
mov
imul
sarb
or
hlt
nop
int
push
sub
mov
add
mov
scas
cmp
push
xlat
mov
shlb
les
aad
fcom
mov
xlat
and
xor
adc
mov
shll
jns
sbb
fsubl
jno
dec
test
push
cmpsl
inc
push
mov
push
pop
lahf
insb
cwtl
dec
sbb
movl
push
cmpsl
cmp
xchg
mov
push
push
pop
aaa
and
dec
rcll
lods
jge
rol
loope
int
jns
xchg
push
cli
push
fmul
leave
test
lret
adc
inc
dec
dec
xor
sub
leave
sbb
das
and
mov
lahf
pop
ds
pop
loopne
lahf
int3
cs
and
inc
test
aad
icebp
ret
or
cmc
jp
mov
mov
pop
push
cmp
mov
es
xlat
movsb
test
or
push
xor
and
sahf
rcll
dec
xchg
hlt
out
push
sub
sbb
stos
fdivl
inc
pop
inc
test
in
cvtpi2ps
ja
jae
ret
xchg
in
fdivl
out
inc
xchg
cmp
int
pushf
xor
or
into
jae
in
xchg
pop
add
ds
pop
lcall
push
jb
lds
mov
or
arpl
in
mov
fisubrs
cmpsb
bound
loopne
xor
sbb
jge
jnp
sbb
add
lcall
sbb
jo
mov
cli
hlt
pop
jmp
cmp
sahf
jo
fidivrl
sbb
cmpsb
jmp
sete
dec
sahf
sbb
sbb
xor
pusha
xchg
leave
mov
pop
mov
sbb
imul
dec
adc
lahf
ss
xchg
dec
push
lods
adc
lahf
pop
push
sub
scas
pop
jl
movsl
add
mov
icebp
sbb
fistps
pusha
ret
mov
frstor
pop
mov
dec
mov
js
imul
aam
cmpsb
ds
test
mov
stos
pop
fs
ret
fmuls
in
jne
ss
in
sarl
xor
dec
mov
jne
leave
leave
lret
jge
pop
sahf
icebp
or
loopne
jl
lods
ret
pushf
push
fwait
jns
push
decl
xchg
dec
addl
ss
pusha
xchg
cli
stos
mov
aas
pop
mov
cmpsl
push
or
repnz
mov
or
imul
push
inc
fnstsw
and
jb
test
cmp
xchg
and
mov
inc
pop
in
cli
aam
adc
push
adc
pop
mov
mov
lahf
mov
imul
fidivs
push
imul
les
mov
jae
or
inc
mov
xor
adc
in
inc
jno
and
ds
imull
int
loop
push
dec
add
movsl
iret
xchg
fistpll
cs
loop
fstpl
jle
adc
ljmp
sti
insl
cltd
pusha
test
imulb
push
adc
mov
lock
testb
jg
popf
xchg
jnp
sub
in
jl
jbe
lods
in
inc
jno
push
mov
push
ficoml
movsl
and
jge
ret
and
cmp
lret
mov
jno
ljmp
cmpsb
and
sahf
cwtl
cmp
enter
mov
xor
ds
repnz
xchg
icebp
dec
and
nop
jg
ret
mov
mov
cwtl
dec
xchg
fs
insl
rorb
xor
aam
lea
loope
mov
mov
leave
pop
int3
inc
arpl
mov
dec
sub
inc
je
mov
shrb
jl
xchg
lock
xor
test
inc
pop
xchg
sub
mov
sub
movsl
xor
jae
xchg
sub
nop
inc
or
cmp
dec
aad
rorl
mov
sub
mov
rolb
repnz
dec
fs
xlat
xor
or
jecxz
and
and
fldenv
xlat
out
cmp
xor
fs
imul
mov
push
or
out
cmpsl
adc
stos
mov
mov
shlb
ds
xchg
mov
icebp
sub
jmp
pop
xor
leave
jmp
and
fdivr
orb
addr16
popf
int3
out
add
sbb
and
lret
not
inc
adc
out
hlt
mov
std
add
fimull
pop
jle
cmpsl
fsubl
repnz
add
scas
aaa
jle
jno
push
das
mov
dec
and
lcall
test
push
lods
popa
sbb
mov
or
pusha
scas
out
fs
dec
mov
lcall
or
add
shrb
push
mov
mov
xchg
pop
in
dec
clc
xor
jns
data16
xor
cmp
ss
pop
push
jl
pushf
ficoml
movsl
and
std
fwait
cmpsb
adc
fisubl
xchg
and
xor
je
outsb
scas
push
outsb
mov
iret
jne
negl
mov
or
mov
push
add
test
xor
imul
sbb
sub
ja
xchg
jg
inc
js
outsl
dec
pop
dec
imul
mov
xor
inc
push
mov
sub
xlat
call
pusha
popa
mov
pop
sub
mov
sbb
push
adc
jg
inc
sti
inc
pop
enter
jg
cmc
jg
dec
loope
xchg
je
loope
fsub
retw
jge
mov
jo
outsl
aas
jnp
mov
lret
in
adc
out
into
test
js
dec
cmpb
outsb
mov
mov
adc
sbb
std
icebp
xchg
sbb
cmp
push
xorb
mov
jl
cmp
sbb
fiadds
mov
and
push
jb
dec
imul
jle
jns
movsb
jle
test
jae
dec
mov
inc
jb
push
add
pop
jns
push
or
xchg
daa
outsb
inc
xchg
stos
test
xchg
in
sbb
int3
idivl
cmp
shlb
dec
jns
outsl
lcall
shll
or
cmp
xchg
jne
push
fsubr
xor
push
adc
sub
dec
or
test
outsl
test
icebp
fcoml
andb
jb
add
cmp
pop
and
sub
inc
shll
fsubrp
shr
pop
mov
out
cmp
pop
cwtl
outsl
lods
ja
hlt
iret
add
dec
dec
in
stos
imul
cwtl
fwait
or
mov
pop
mov
sbb
movsl
test
hlt
insb
dec
bnd
ja
sub
push
xchg
test
jl
cmc
xchg
cli
ret
sub
call
outsb
pop
push
enter
xchg
lods
push
out
xchg
outsb
pop
cmp
xchg
sbb
das
in
inc
pusha
push
clc
xchg
cmpb
xchg
arpl
ja
mov
push
cmp
lret
mov
imul
cmpsl
jne
xchg
divl
mov
gs
cmp
xchg
fidivl
out
roll
out
les
dec
mov
jo
adc
jp
into
cmp
gs
mov
cmpxchg
arpl
and
cld
adcb
in
push
mov
aas
movsb
xchg
mov
inc
dec
jo
andl
sbb
out
addr16
dec
dec
mov
sbbl
cmp
xchg
call
pushf
fdivr
shrl
les
sbb
pop
call
ja
pop
addl
mov
xchg
dec
or
pop
daa
xchg
call
loope
data16
cmp
add
push
or
cltd
mov
rorb
mov
lods
xorl
xor
leave
adc
repz
xchg
jle
add
test
fildll
test
out
xor
lock
cwtl
xor
push
cmp
sub
fmull
pop
fistps
bound
mov
mov
or
fsubs
fnstenv
jl
xor
xchg
shll
test
jp
and
das
add
xorl
jge
sbb
cmp
mov
dec
adc
out
rorb
jl
out
cmpsb
fcmovu
fdivr
insb
outsl
jle
scas
cmpsl
arpl
js
lods
mov
inc
pop
fildll
fsts
decb
popf
inc
pop
ret
pusha
or
inc
jg
in
fidivrl
stos
mov
pop
dec
fwait
sahf
and
mov
cmp
mov
addb
sub
lock
sub
cmpsl
inc
xorb
dec
insl
sti
cld
add
sbb
js
cwtl
jg
xor
lahf
jnp
cmp
test
shlb
push
sub
outsl
pop
cltd
nop
clc
fistps
or
daa
repnz
jg
rcrl
ss
jle
daa
jae
add
lahf
clc
adc
rorl
xor
mov
enter
sub
out
add
pop
jmp
jge
clc
cmp
lret
mov
lcall
pop
bound
mov
mov
jecxz
loope
int
cmp
jbe
ret
mov
or
stc
out
add
lret
aam
cmpb
push
call
in
jecxz
mov
dec
cltd
loopne
insb
or
xchg
pop
pop
fsubp
xchg
jl
rolb
orl
jo
or
cs
dec
shrb
adc
pop
in
pop
cmp
testl
jb
sarb
mov
arpl
imul
std
sti
scas
loopne
push
xchg
pusha
adc
mov
lahf
jo
push
outsb
insl
pop
mov
pop
mov
mov
mov
cltd
jge
fmul
add
clc
dec
sub
fldt
roll
je
mov
adc
fs
stos
and
outsb
jge
push
and
test
xchg
rcl
fcoml
jbe
mov
pop
lods
cmp
push
mov
and
inc
out
mov
sarl
dec
lea
cli
xlat
inc
es
test
test
pop
inc
fcmovnb
cmp
cmp
mov
add
clc
xor
xchg
and
shrb
clts
lds
mov
icebp
test
arpl
repz
sub
ja
lods
sub
shlb
inc
jmp
in
sbb
adc
mov
scas
or
imul
xor
leave
nop/reserved
pop
loopne
aad
add
in
xchg
lock
jge
add
jmp
pop
mov
negb
scas
inc
xchg
push
dec
dec
lds
cmpl
xchg
fwait
adc
inc
ljmp
inc
fcomps
jno
out
push
aas
cwtl
fnstsw
fadds
push
ficomps
push
pop
aam
xchg
sub
xor
mov
das
xchg
ret
mov
jg
jne
cli
ds
mov
mov
pop
xchg
imull
pop
shlb
mov
rclb
in
jb
into
mov
mov
into
pop
dec
sbb
daa
mov
lcall
out
fsubs
pop
std
out
and
call
push
in
xor
add
adc
lods
scas
iret
inc
mov
mov
mov
dec
cmp
push
shlb
cltd
pop
xlat
dec
in
icebp
cmp
out
xchg
dec
and
test
test
mov
imulb
loopne
fs
and
push
inc
adc
jns
jge
lcall
dec
mov
xchg
mov
addl
mov
inc
in
in
lcall
inc
pop
lahf
outsb
inc
jecxz,pn
cmp
pop
and
xor
xor
stos
adc
ljmp
dec
leave
pop
cld
jbe
repz
cli
mov
dec
stc
push
and
and
das
mov
ret
test
mov
cmpxchg8b
int
xor
lods
xor
xchg
bound
aad
test
loop
mov
xor
mov
popf
adc
fs
xor
fmuls
mov
mov
repz
jb
cmp
ret
sub
cwtl
insl
pop
movsb
add
sub
mov
enter
testl
clc
cmp
mov
daa
cmp
daa
int
xchg
scas
mov
xchg
pop
mov
push
add
aas
push
cs
pop
out
jg
mov
scas
aad
sub
mov
in
xor
into
scas
aaa
scas
addr16
and
mov
sti
out
xchg
lods
cmp
cmp
fists
punpckhbw
pop
test
imull
jmp
jns
dec
inc
fildll
pop
bound
cmpsb
outsb
xchg
movsl
add
data16
mov
addr16
push
dec
push
out
sbb
test
sbb
inc
int
mov
lret
stc
cli
in
fcoml
adc
ss
les
sti
aas
dec
icebp
pop
idiv
inc
push
insb
call
cmp
jo
test
loope
xchg
lds
lds
stos
xor
and
sub
pop
push
jg
inc
mov
adc
and
ret
and
shrl
mov
mov
xor
out
arpl
add
mov
xor
lods
ljmp
xor
int3
addr16
loop
stos
out
mov
mov
jne
mov
orb
out
fidivrs
fsubr
mov
and
pop
cs
shlb
jo
lahf
mov
pop
pop
mov
mov
out
sbb
push
jae
jne
mov
jb
testb
xor
gs
jl
cwtl
push
sbb
into
negb
mov
stos
jg
cmp
mov
xor
add
or
mov
sub
imul
lret
pop
xchg
aas
nop
gs
cvtpi2ps
out
subb
cmp
out
test
mov
or
sbb
inc
dec
or
repnz
pop
jg
mov
call
les
and
fidivrl
adc
mov
mov
clc
pop
ds
push
je
jno
test
mov
mov
xchg
xchg
push
jno
sub
cmp
push
xor
dec
mov
mov
xor
xchg
or
mov
cld
repnz
xchg
insb
lret
sahf
sub
int3
xor
mov
loope
in
mov
push
xchg
jg
sbb
dec
mov
jne
sbb
mov
dec
fldenv
loopne
je
lcall
dec
ret
aas
aam
pop
sub
push
inc
lods
roll
dec
sub
adc
mov
cld
xchg
cmp
sar
enter
lock
mov
imul
cmpsl
cld
and
loope
or
fistpl
loopne
aaa
int
or
lret
fsubs
cltd
fsubrl
addl
in
fadd
loope
and
int3
dec
bound
cld
pop
sbb
dec
sbb
or
jbe
or
outsb
lcall
sub
push
pop
pushw
mov
xor
inc
cmc
ja
mov
movb
push
call
push
add
iret
cmp
rorb
fsubr
mov
aas
xor
or
test
pop
xchg
add
mov
push
push
xchg
stos
sub
rcrl
sub
outsl
inc
adc
cmp
test
mov
mov
faddl
pop
mov
fisttpll
push
cmp
gs
ss
dec
xor
sbb
cmpl
inc
pop
pop
push
push
inc
fsts
scas
xor
cmpsb
jecxz
xor
cs
repz
jle
inc
pop
xlat
cmp
and
xchg
cmp
out
movsb
test
push
mov
arpl
jge
cli
addr16
or
fbstp
push
into
dec
lret
xor
mov
cwtl
push
mov
aam
popf
xor
sub
push
subl
or
jne
mov
ds
mov
or
or
popf
stos
pop
and
mov
call
sub
loopne
je
xchg
leave
ds
movsb
add
int3
xchg
sbb
sub
fwait
addr16
fstl
lds
mov
lret
push
dec
and
imul
sbb
push
into
popf
iret
jecxz
pop
sahf
dec
xchg
dec
jl
andb
cld
add
add
mov
andb
movsb
pushf
lods
pop
mov
scas
jae
mov
dec
pop
push
sub
push
and
mov
imul
adc
pop
and
mov
add
mov
pop
movsl
and
decl
out
pop
sub
ret
mov
or
pusha
xchg
test
pop
arpl
push
inc
rcrb
push
mov
das
sbb
add
pusha
or
pop
jbe
mov
hlt
ret
jb
ds
lret
lods
loope
dec
sbb
aam
sub
mov
xorb
pop
cmc
lods
adc
mov
shl
ret
pusha
xchg
inc
test
xchg
mov
imul
pop
and
dec
adc
in
push
inc
pop
pop
mov
mov
push
dec
pop
fldl
sarb
cmp
jg
and
mov
int
test
mov
xchg
mov
addr16
sbb
or
and
lea
cmp
xchg
cltd
mov
mov
jo
imul
aaa
ret
fcomip
jnp
pop
or
in
push
je
xor
adc
adc
sub
into
jmp
cmp
adc
rcrb
lods
lea
sahf
add
xlat
push
dec
or
mov
insb
daa
dec
cmc
inc
sbb
mov
pop
int
ss
dec
jo
mov
xchg
sub
mov
clc
push
sahf
inc
ret
lock
flds
dec
add
jmp
cmp
loopne
xchg
imul
adc
stos
dec
mov
sarl
xchg
cmp
inc
add
in
mov
fwait
pop
sbb
or
cmp
roll
ss
daa
fsubrp
mov
orl
iret
outsl
lods
xchg
movsl
xchg
roll
fisttps
mov
ficoml
sahf
mov
xchg
lea
arpl
mov
in
stos
fidivrl
cmp
jecxz
insb
insb
pusha
adc
xchg
xchg
mov
clc
mov
lcall
les
xor
lcall
inc
fiaddl
xchg
aas
daa
cmc
test
ja
lea
scas
xchg
cmp
cmp
ss
adc
std
das
push
add
fs
imul
dec
iret
inc
sbb
mov
and
adc
cs
sbb
dec
out
sub
dec
mov
ret
pop
xchg
mov
sbb
mov
sub
fs
mov
aam
cltd
fldt
jg
pusha
test
cli
cmp
mov
cmc
ret
xchg
xor
roll
int
out
into
cwtl
or
and
dec
xor
fwait
mov
cmpl
jno
or
in
int
add
jmp
clc
mov
mov
lods
stos
jnp
push
sbb
lods
shll
cmp
ss
sbb
fldenv
and
fcmovne
xor
xlat
loop
pop
add
dec
inc
cs
lahf
mov
imul
stos
les
je
mov
stos
arpl
mov
xlat
jbe
and
ja
jecxz
popf
cmpb
mov
into
pop
xor
je
je
cwtl
je
call
pop
cmc
insb
cmp
ja
cmpsb
bound
stc
dec
jne
xchg
test
mov
dec
insb
inc
inc
insb
sbb
ficomps
jae
adc
bound
fsts
nop
xor
pop
sbb
mov
xor
xor
jge
roll
pop
jns
pop
and
xchg
aas
cmp
xor
adc
ret
mov
xor
bound
and
lret
les
dec
in
xor
push
out
dec
and
ret
sub
add
xlat
fistpll
mov
cld
xor
push
fcoms
xchg
mov
sub
mov
outsl
xchg
pushf
pop
xchg
shrl
xor
into
std
jno
push
fsts
add
and
push
enter
dec
fimuls
out
repnz
incb
dec
hlt
xorb
lea
add
dec
push
push
loopne
xchg
insl
dec
push
pop
xchg
loop
push
mov
imul
fs
inc
sub
int3
subl
addb
jp
mov
mov
js
mov
mov
jo
pushf
dec
jecxz
inc
xchg
mov
adc
cmpsl
push
lcall
adc
cmc
mov
sub
not
jne
xor
cmp
and
xlat
ret
sbb
insb
xchg
stos
cmpsb
jnp
and
sub
adc
cmp
mov
es
cwtl
lock
insl
pop
add
mov
shlb
pop
sbb
in
mov
repz
daa
dec
cmovnp
xor
int
addr16
mov
push
lret
mov
mov
fistl
scas
xchg
push
inc
dec
and
maxps
into
stos
push
pop
shll
jecxz
sub
jne
sub
test
cmp
mov
out
mov
shl
mov
cmpsb
mov
aam
call
outsl
dec
cmc
aam
inc
shr
movsb
inc
iretw
mov
jno
ss
dec
pop
std
mov
mov
jp
mov
divl
pushf
sub
mov
sbb
pop
mov
fstpt
cmp
mov
pop
xchg
jns
pop
std
test
pop
test
shrl
ss
xchg
call
add
sub
sarb
push
jnp
sti
cmp
sub
mov
scas
mov
adc
sub
mov
add
jl
mov
push
je
jg
mov
xor
test
out
loopne
sbb
into
repz
fmull
mov
stc
cmpsb
mov
jb
xor
mov
ret
movsb
std
xlat
in
stos
mov
aaa
cmp
xchg
lret
shrb
sti
adc
addr16
into
es
inc
ror
pop
push
sub
and
inc
cmp
lock
out
sti
pop
lahf
jns
or
xor
ja
dec
push
je
xchg
and
mov
cwtl
sbb
pop
in
sbb
clc
mov
xor
cli
bound
scas
add
cld
mov
testb
ret
unpcklps
sub
mov
icebp
int
adc
imul
ljmp
xor
test
sti
fcomi
jns
in
mov
ss
lds
push
ja
mov
push
dec
pop
jno
clc
sar
negl
lods
ja
or
and
sub
insb
add
mov
push
pop
xor
das
iret
ret
rolb
jnp
iret
pusha
or
cmpsb
movsl
fwait
pushf
addr16
inc
fdivr
push
adc
and
cmpsb
pop
in
or
pop
mov
mov
pop
cmpsl
shlb
lds
xchg
sub
jmp
out
xor
icebp
cmp
mov
jae
mov
into
mov
dec
ss
dec
fwait
jno
stc
or
sub
inc
pop
sub
and
js
iret
ds
addr16
out
insb
sbb
sub
into
stos
fnstcw
push
dec
sbb
adc
notb
lret
dec
fcomip
or
ret
jae
imul
adcb
into
dec
xchg
movsl
in
ja
addr16
pop
cmp
dec
test
mov
sub
loopne
shll
pusha
stos
filds
popf
cmp
aaa
inc
lock
push
pop
es
imul
mov
sbb
mov
inc
push
pop
pop
mov
xor
mov
mov
imul
rcrl
roll
inc
xchg
xchg
cmp
cld
cmp
inc
xor
cmp
pop
push
adc
movl
sbb
dec
sahf
cltd
repz
bound
divl
aas
push
lock
mov
push
xchg
jl
fucom
out
push
inc
jae
cmp
dec
cmpsl
dec
or
pop
aas
push
jmp
popa
or
jo
add
xor
gs
sbbl
repnz
aam
pushf
fwait
mov
out
jae
cmp
filds
mov
inc
and
or
outsb
jne
out
fsts
cmp
rclb
add
xor
movd
ljmp
scas
es
xchg
inc
loope
sbb
out
cmovae
sub
insb
cmp
test
xchg
sub
pop
cmp
pop
add
cwtl
mov
div
dec
idiv
mov
dec
push
or
lods
push
out
in
leave
das
and
xchg
cmpb
je
movsb
pop
adc
jb
jne
outsl
sub
dec
sbb
icebp
xor
ret
stos
scas
sbb
sbb
or
or
sti
imul
bound
dec
inc
dec
clc
ja
pop
addr16
inc
fstpl
imul
mov
lea
adc
cmp
ret
add
mov
push
cmp
or
mov
xchg
jg
dec
xchg
cwtl
iret
aaa
nop
and
outsb
loope
pop
call
fistl
popa
pop
jecxz
into
fstps
insl
xacquire
mov
cmp
pop
mov
mov
xor
lahf
sbb
imul
icebp
dec
push
xlat
jbe
jl
jp
fstpt
pusha
push
adc
stos
daa
add
or
movsb
cltd
pop
cmp
cli
or
stos
push
xchg
hlt
aaa
cmc
xchg
cmp
xor
and
stos
int
push
cwtl
loop
hlt
pusha
aad
inc
jbe
add
lret
test
inc
xchg
dec
test
leave
es
std
daa
imul
dec
mov
lahf
push
mov
cmp
ds
xchg
clc
sar
jns
outsb
jbe
pusha
jae
dec
or
outsb
xor
mov
movsb
test
imul
add
push
xor
outsl
idiv
adc
xchg
jae
stc
aad
lret
mov
jnp
imul
jmp
or
inc
dec
fwait
notb
out
inc
adc
push
dec
mov
adc
push
out
scas
push
push
mov
movsl
test
pop
mov
ljmp
popf
push
mov
les
inc
stos
inc
dec
sbb
adc
push
dec
add
shll
mov
arpl
mov
in
mov
sub
mov
xor
mov
pcmpeqd
jge
stc
adc
jb
loop,pt
nop
stos
lock
jecxz
pop
or
mov
dec
sbb
mov
cld
pop
mov
mov
fsubrl
es
adc
sarl
ss
std
scas
push
xor
imul
iret
inc
mov
js
add
adc
sbb
inc
icebp
sahf
xor
jae
lcall
sbb
cmp
xor
mov
outsl
cmpsl
xchg
cmpsl
or
add
xor
push
lret
xchg
repz
decl
popa
sbb
imul
test
xor
dec
ror
les
clc
jle
xor
mov
mov
push
pop
push
inc
imul
cmp
loop
sbb
adc
insl
in
xor
or
call
pop
popf
iret
push
mov
enter
sbb
aad
dec
test
push
test
lret
inc
push
jae
clc
add
mov
call
mov
push
aad
test
mov
pop
jl
jne
cmp
push
aaa
testl
out
push
cmc
cmpsl
shlb
int
int3
sbb
roll
mov
sbb
pop
mov
frstor
sbb
push
and
out
jp
jg
pop
adc
inc
fwait
pop
cltd
adc
loopne
xchg
add
test
cmpsb
outsl
cmpb
out
fistl
ja
push
cmpl
inc
pop
add
or
mov
mov
imul
mov
aad
xchg
push
xor
stos
and
cmp
imul
test
sbb
adc
and
or
mov
or
pusha
push
mov
inc
les
xchg
push
push
xchg
mov
aas
jg
mov
pop
aas
inc
cs
outsb
inc
sub
std
rcrl
xor
das
stos
push
fnstcw
cmp
out
pop
lea
lods
aas
bound
push
rorw
into
mov
fstpl
lock
mov
stos
pop
adc
fildl
fdivrl
clc
mov
mov
ljmp
ret
push
movsl
adcl
inc
cmc
cmp
inc
dec
xchg
add
out
push
xor
sti
repz
pushf
sub
dec
insb
dec
fsubs
ret
bound
mov
test
stc
push
or
and
pop
int
sbb
and
jl
xor
aad
loopne
ret
repz
out
inc
sub
push
aam
stos
cvttps2pi
test
fs
lods
loop
std
cwtl
orl
fldcw
test
int3
xchg
popa
and
xor
ret
mov
stc
cld
test
js
test
sub
xchg
xchg
ret
pop
push
jae
imul
movsl
mov
negb
sbb
insb
cwtl
inc
scas
sbb
sub
in
adc
aas
sub
mov
out
cmpsl
xchg
and
rorb
jg
mov
test
jle
xor
lock
or
out
cmp
and
dec
mov
aam
pop
fnstenv
pushf
out
inc
and
mov
mov
mov
outsb
ds
xchg
push
and
sarb
dec
mov
sbb
or
cmp
mov
push
xor
cmpb
pminsw
pusha
das
out
sarb
push
cmp
mov
rcr
xchg
add
lods
sub
shll
fidivs
lret
mov
jle
or
push
cld
xchg
std
sbb
rorl
jns
aam
adc
or
dec
adc
xchg
cmp
test
lret
mov
dec
gs
sahf
fnstcw
daa
call
fsubr
or
mov
add
push
ret
xor
cmp
sti
fsts
mov
rcl
jg
into
leave
and
pop
leave
jp
add
out
imul
ret
xchg
cmpsl
jge
ficoms
cmp
cmc
movsl
daa
and
dec
fidivs
cmp
sub
lods
notw
js,pt
bound
sbb
xor
add
icebp
sbb
js
mov
into
pusha
lds
pop
xor
push
sub
mov
movsb
ret
mov
pusha
xor
push
data16
movsb
inc
mov
mov
and
cmp
sub
sti
mov
popf
xchg
and
mov
clc
add
fistpll
ja
es
inc
pop
xlat
pop
divb
ljmp
pop
inc
push
mov
loopne
jg
sbb
std
stos
push
mov
lret
sahf
cltd
insb
jbe
ss
nop
mov
and
fcmovnbe
and
mov
inc
inc
dec
push
add
cmpsb
pop
ljmp
insl
sti
int3
ja
jae
cmp
and
mov
out
dec
xor
aas
jle
aaa
adc
push
push
adc
pop
pop
mov
movsl
xor
icebp
rcrl
lods
xchg
jnp
dec
add
jmp
imulb
sbb
xor
imul
sbb
lahf
mov
add
pop
stos
fcmovb
or
mov
repnz
out
push
cli
sarb
add
jp
mov
xor
mov
call
enter
adc
fadd
mov
cmpb
inc
shrb
jmp
dec
in
sar
or
in
sub
pop
dec
shr
test
or
jle,pt
inc
fs
int3
enter
lock
jmp
mov
lret
push
push
mov
sub
mov
sub
add
xor
cwtl
ss
pop
aaa
pushf
cmpsl
lods
cmp
xchg
jb
and
push
push
pop
pop
pushw
js
stos
add
xchg
adc
sti
and
sbb
in
imul
sub
mov
cltd
out
lcall
aaa
pop
jmp
in
sub
fcmovb
mov
pop
sub
leave
push
mov
arpl
jl
scas
xchg
loope
ss
xchg
mov
les
movsl
jl
or
fwait
adcl
insl
movsb
test
xor
inc
ds
jle
xor
loope
jne
cli
jge
adc
inc
xchg
gs
xlat
push
mov
jmp
cmp
subl
mov
in
xor
fsubrl
xchg
or
xchg
or
push
sahf
les
mov
aad
leave
xor
ja
mov
sbb
inc
cmpb
inc
xchg
inc
jb
mov
inc
or
int3
outsl
sub
cmpb
popa
rorl
dec
inc
xchg
xor
cmpb
dec
int3
test
or
jg
clc
cli
into
xor
jl
aas
fcmovne
add
push
aaa
push
xor
test
adc
sbb
int
pushf
mov
mov
or
cwtl
enter
insl
dec
cli
or
outsb
into
pop
push
in
xor
sar
out
lods
lret
push
jae
mov
pushf
mov
dec
cmp
xor
repz
jl
dec
pop
test
es
lahf
call
data16
aad
jbe
lret
std
inc
fwait
rclb
xchg
mov
ja
cltd
xor
out
or
mov
mov
icebp
fwait
cmc
push
cmp
ret
push
pcmpgtb
aam
test
pop
out
sahf
popa
lds
iret
push
xchg
leave
aam
adc
mov
lds
imul
test
sub
imul
pop
pop
and
mov
xor
subl
and
pop
or
inc
cmp
pop
nop
or
out
push
rclb
loop
cmp
sub
xchg
mov
lock
push
mov
push
insl
dec
mov
mov
cwtl
and
call
jmp
cmp
sbb
xor
push
pop
fists
mov
mov
test
fbstp
cld
jns
fdivp
bswap
lcall
mov
pushf
repz
or
push
inc
mov
cltd
inc
inc
je
push
pop
cmpb
cld
jbe
stos
repnz
stos
loope
rcr
sbb
and
xor
push
loope
xor
ret
dec
inc
test
mov
add
fucomp
mov
scas
fsubl
stc
clc
pop
sbb
inc
fists
mov
cs
jp
ret
add
jge
addl
aaa
pop
clc
int
out
jl
loope
sub
mov
lods
inc
cmp
lret
xchg
mov
push
sbb
insl
push
mov
lret
jl
cmp
mov
inc
xchg
jg
mov
inc
call
fnstenv
fisttpl
stc
fwait
test
fisubl
aam
mov
subl
ljmp
loopne
out
cs
sahf
xor
clc
ret
sub
xchg
cmp
rorl
ja
mov
and
rcrb
les
shlb
stos
daa
int3
repz
xchg
dec
jge
jg
dec
cmp
fwait
shlb
xor
mov
push
mov
out
cli
je
and
shl
dec
sbb
jmpw
ret
add
aaa
xlat
pop
mov
push
push
jge
inc
ljmp
push
jge
testl
sbb
mov
dec
in
lret
ljmp
cmp
rol
in
xchg
cmpsl
mov
into
ja
icebp
lret
fistpll
push
pop
std
js
mov
sub
mov
leave
test
or
mov
test
mov
iret
loopne
sbb
pop
mov
jne
dec
ret
lds
mov
arpl
cwtl
xchg
xchg
cmp
cmpsl
cmp
orb
dec
adc
sti
xor
add
int3
xchg
cwtl
es
das
pop
icebp
pcmpgtw
in
sub
or
repnz
sub
inc
repz
popa
push
pop
xchg
and
xor
ror
fcoms
dec
iret
mov
pop
aad
mov
cmp
sbb
pop
xchg
lock
lds
icebp
sarl
mov
inc
ret
jnp
jne
shll
lods
and
imul
pop
cmp
nop
fwait
sub
test
std
test
fidivrl
cmpsl
repnz
scas
sub
bound
or
mov
shr
repnz
sahf
xchg
dec
jp
out
lock
ja
sub
insl
add
sub
jge
dec
or
xor
addr16
dec
cli
iret
popf
mov
push
mov
icebp
insb
pop
outsl
sti
test
inc
out
lock
mov
in
xorb
aad
add
add
push
sub
lret
out
adcb
inc
pop
mov
jl
clc
jno
sbb
sarb
push
cmp
mov
imul
pop
imul
dec
in
in
mov
repnz
xor
cmp
daa
cmp
push
mov
sbb
pop
and
mov
scas
xor
lods
mov
add
adc
cld
aad
scas
sub
les
mov
jp
xchg
xor
ret
push
xor
sub
faddp
jbe
movsl
push
jge
sub
inc
push
add
or
cmp
pop
clc
cli
fwait
push
adc
mov
adc
jb
jne
mov
pop
push
leave
ret
xchg
fadd
stos
sti
mov
add
pop
stc
inc
lret
mov
std
shrl
ljmp
aaa
out
mov
in
mov
adc
inc
notb
sbb
shl
mov
dec
cmp
mov
mov
mov
test
mov
aam
out
dec
and
cmp
loope
fistpll
mov
cltd
pusha
or
mov
rcll
nop
ffree
cmp
test
add
mull
popl
mov
mov
rcrb
fisttps
inc
pop
adc
xchg
xchg
call
insl
mov
test
lods
leave
xchg
mov
jg
cmp
arpl
pextrw
inc
jno
jl
test
cmp
fadds
leave
loope
das
aam
pop
popf
jne
sub
in
jne
cwtl
into
or
shl
aas
jnp
aad
sbb
inc
es
dec
dec
addr16
sbbl
xchg
aas
ror
and
cmp
fcompl
es
jmp
je,pt
sbb
jno
int
aad
fisubs
lret
jns
out
pusha
xlat
pushfw
outsw
lods
lret
in
in
pop
jns
repnz
add
cs
sti
sbb
sbb
cwtl
mov
aas
mov
and
push
std
xchg
push
lahf
sub
ja
xchg
jmp
sub
mov
clc
inc
js
xchg
out
or
push
push
repnz
xlat
out
push
mov
adc
pop
add
inc
addr16
rorl
pop
out
aad
jecxz
movsl
cmp
xchg
pop
cmpsl
adc
mov
outsb
fldcw
pushf
adc
cmp
aaa
xor
and
xor
ja
and
fucomp
fsubl
fcomps
dec
xor
addr16
in
cmp
jns
sub
bound
adc
inc
sub
jnp
test
sbb
adc
aam
sti
ss
sub
cmp
xchg
js
mov
mov
cwtl
push
sub
repz
pushw
adc
pop
pop
xor
cwtl
out
shll
repz
xchg
push
jge
inc
cltd
push
outsb
mov
jl
js
outsl
ret
inc
cwtl
mov
and
or
sub
inc
adc
aam
jle
push
cmp
fdivrs
mov
sbb
imul
addl
in
dec
mov
aas
out
mov
dec
daa
popa
cmc
cli
sub
jbe
call
add
pop
sahf
inc
or
lret
cmp
dec
enter
mov
xchg
sti
xchg
and
fidivrl
pop
enter
aad
lret
jne
call
stos
test
sub
sbb
pop
int
and
cld
out
mov
jne
pop
jne
shrb
loop
into
pusha
sar
lahf
ret
dec
dec
push
shl
mov
shl
iret
ljmp
cmp
leave
sub
mov
sub
push
or
andb
jp
push
rorb
scas
mov
das
mov
and
repz
mov
stos
mov
inc
or
push
mov
aad
fsts
or
cmp
mov
rcrb
add
js
lock
into
or
imul
enter
push
add
mov
mov
sub
es
xchg
xor
pop
movsl
clc
idivl
fsub
cli
mov
in
xor
or
popf
pop
loope
jae
mov
jno
cld
mov
jmp
lea
das
cmpl
adc
lahf
or
inc
arpl
cmpsb
or
daa
inc
cmc
or
std
xlat
or
and
cmp
push
xchg
pop
les
xchg
pop
or
