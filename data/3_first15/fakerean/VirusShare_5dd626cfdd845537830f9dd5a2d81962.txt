mov
mov
ja
jecxz
ja
sti
in
stc
push
out
and
call
ja
pushf
cmpb
ja
aas
ljmp
fucomp
ja
cmp
ja
inc
out
test
pop
jmp
xor
ja
or
ja
mov
ljmp
add
add
pop
jbe
add
add
fstpt
ja
push
cmp
fdivrl
ja
into
cmp
sarl
sbb
cmp
sahf
add
ja
mov
cmp
mov
ja
scas
cmp
adc
ja
nop
cmp
fistpll
ja
add
add
shll
add
cmp
or
js
inc
cld
es
inc
dec
xchg
rclb
icebp
inc
push
cmp
adc
mov
mull
aas
movsb
stos
push
fnstcw
nop
sub
inc
lcall
repz
pop
fsubrs
out
shrb
imul
sbb
stos
adc
mov
xor
rcrl
inc
jg
sub
clc
sub
addb
pop
jmp
mov
test
lods
xlat
shrl
mov
cmp
icebp
jns
cltd
lds
sarl
or
cmpsl
sbb
movsl
ja
dec
sbb
negb
push
add
pop
addr16
push
out
sti
push
leave
movsl
test
mov
pusha
jns
pop
mov
and
in
bound
mov
fdivr
pop
fldenv
ja
lret
je
pop
jne
sbb
or
sub
ficoml
dec
dec
fsts
cltd
in
adc
test
popf
lret
fildl
push
push
push
mov
mov
jbe
nop
mov
sbb
xor
sub
pop
mov
push
mov
into
xor
adc
mov
pop
xchg
mov
jmp
xor
add
push
push
inc
ret
arpl
xorl
lret
std
and
scas
mov
cltd
inc
sbb
js
mov
ss
pop
daa
in
mov
push
xchg
loope
add
inc
jne
push
icebp
enter
fwait
aad
and
lret
mov
mov
inc
hlt
or
lods
imul
sahf
jno
mov
frstor
sbb
sub
xor
sbb
sbb
pop
in
add
sbb
push
sub
push
mov
mov
dec
sub
push
push
xor
push
mov
mov
movswl
dec
call
sub
push
add
mov
mov
xor
lea
inc
movzwl
xor
sub
mov
inc
mov
dec
add
add
mov
sub
xor
movswl
mov
mov
dec
movsbl
sub
add
mov
sub
add
mov
add
mov
test
je
mov
add
mov
inc
inc
add
mov
sub
add
mov
sub
add
mov
movsbl
movzbl
sub
repnz
sub
lea
add
sub
jmp
dec
add
add
mov
inc
movswl
or
sub
lea
inc
add
movsbl
mov
mov
sub
inc
sub
add
pop
mov
pop
jmp
push
sub
xor
sub
add
mov
push
mov
push
xor
push
add
dec
push
mov
call
lea
inc
jmp
sub
xor
mov
xor
sub
mov
mov
mov
sub
or
mov
movswl
sub
xor
mov
push
dec
sub
push
add
mov
mov
lea
inc
movzwl
add
pop
sub
add
pop
mov
cmp
jne
inc
push
movsbl
add
mov
sub
mov
push
sub
add
push
sub
add
xor
lea
xor
sub
movswl
xor
add
add
push
mov
xor
add
imul
mov
add
add
mov
mov
movzbl
sub
dec
xor
sub
add
add
imul
dec
movzbl
sub
mov
lea
sub
dec
sub
mov
inc
mov
mov
or
add
add
add
mov
cmp
jb
dec
xor
movzbl
sub
mov
add
mov
inc
add
inc
add
sub
mov
add
mov
dec
or
sub
mov
dec
sub
cmp
jb
xor
sub
sub
and
add
mov
inc
movswl
and
add
mov
xor
inc
xor
and
movzwl
pop
mov
lea
test
jbe
inc
inc
dec
add
and
add
push
inc
sub
incl
mov
pop
sub
sub
add
push
mov
mov
add
and
sub
mov
add
mov
movzbl
mov
add
movzwl
and
dec
dec
mov
mov
mov
mov
add
mov
imul
or
pop
add
jmp
mov
dec
add
sub
mov
imul
add
nop
jne
mov
mov
xor
sub
xor
mov
mov
sub
or
add
mov
add
mov
and
movzbl
sub
mov
lea
mov
sub
sub
test
jbe
sub
add
mov
xor
add
lea
inc
add
mov
inc
push
dec
dec
xor
add
mov
pop
xor
xor
imul
and
mov
add
mov
movzbl
dec
inc
add
inc
mov
and
mov
mov
inc
add
movzbl
sub
add
mov
mov
mov
movzbl
xor
movzbl
add
sub
add
mov
and
add
sub
movzbl
add
mov
xor
mov
inc
sub
dec
sub
sub
mov
dec
dec
jne
or
mov
movzwl
add
mov
pop
sub
pop
sub
pop
add
sub
mov
sub
sub
dec
mov
add
ret
push
push
mov
add
push
push
add
imul
push
mov
push
lea
mov
inc
inc
imul
mov
mov
sub
mov
add
push
add
xor
add
lea
push
movzbl
imul
push
sub
sub
push
lea
add
xor
add
mov
call
mov
add
add
add
add
add
mov
add
pop
jmp
push
add
push
mov
xor
inc
je
mov
dec
mov
mov
dec
dec
mov
add
add
mov
mov
lea
sub
imul
cmp
jne
and
add
mov
mov
add
add
mov
add
add
lea
mov
jmp
mov
push
add
mov
sub
test
je
sub
mov
mov
add
sub
sub
mov
repnz
mov
pop
add
jmp
or
pop
sub
add
mov
sub
add
sub
movb
xor
mov
inc
mov
dec
jne
sub
pop
pop
ret
mov
or
imul
add
mov
sub
mov
mov
inc
add
mov
movsbl
mov
mov
lea
or
call
sub
sub
add
mov
add
sub
inc
mov
mov
add
dec
sub
sub
mov
dec
inc
call
movswl
push
mov
call
pop
sub
sub
call
or
mov
mov
push
sub
movsbl
add
add
lea
sub
sub
sub
sub
lea
dec
inc
add
add
call
lea
movzwl
add
pop
movzbl
mov
add
mov
pop
add
pop
inc
add
pop
sub
mov
add
dec
pop
imul
mov
pop
mov
mov
xor
pushl
sub
add
push
jmp
add
push
mov
push
imul
push
sub
dec
push
mov
lea
push
sub
movzwl
mov
imul
add
push
jmp
push
lea
sub
sub
sub
sub
inc
sub
add
mov
mov
sub
inc
sub
sub
lea
sub
or
add
mov
pop
pop
jmp
push
call
mov
add
movzbl
sub
sub
lea
inc
add
add
or
mov
push
mov
sub
dec
sub
add
mov
xor
call
add
add
sub
mov
sub
pop
add
add
lea
sub
mov
add
inc
sub
mov
mov
sub
add
add
add
mov
or
add
add
add
mov
inc
test
je
inc
int3
add
add
lea
dec
sub
sub
add
mov
add
dec
inc
sub
lea
add
sub
add
add
mov
inc
add
sub
mov
mov
sub
inc
add
mov
lea
dec
and
sub
sub
mov
xor
add
add
mov
lea
sub
xor
inc
sub
mov
add
movzwl
movsbl
sub
mov
imul
inc
add
call
mov
mov
dec
add
xor
add
mov
movzbl
sub
movzbl
add
mov
xor
add
and
sub
lea
sub
movzbl
pop
sub
add
ret
mov
movzwl
jmp
repnz
les
repnz
js
fcmovb
das
xor
adc
xlat
das
xor
add
test
mov
dec
mov
cli
add
add
mov
add
mov
je
mov
xchg
sar
int3
jo
add
push
out
iret
and
jg
popf
cmpsl
inc
rcll
js
ds
mov
test
lods
loope
add
sub
addl
inc
jl
jg
inc
cmpb
arpl
leave
pop
pop
push
add
lahf
testl
aam
leave
insl
iret
cmc
push
mov
cld
pop
push
inc
mov
test
sbb
std
outsb
gs
cmp
jns
pusha
aam
sbb
sub
xor
jl
std
std
insl
fs
pop
adc
not
jo
mov
enter
xchg
clc
out
out
or
rolb
or
into
sub
jg
lret
cmp
icebp
hlt
sbb
dec
nop
jb
out
mov
inc
fisttpl
int
pop
fistpll
imul
sub
push
data16
cmp
push
mov
testl
and
sbb
add
bound
push
lods
daa
out
popf
cmpsb
pushl
daa
mov
movlps
push
and
mov
inc
pushf
xchg
enter
push
jmp
ds
cmp
sti
sub
xchg
gs
popa
idivl
and
xor
jp
stos
add
cld
cmp
mov
push
scas
push
shll
inc
lret
test
mov
aad
pop
in
cmc
ret
test
shlb
push
pop
pushf
sbb
xchg
xor
mov
into
push
scas
xchg
jge
mov
cs
add
dec
imul
pushf
push
int
add
insl
inc
pop
mov
xchg
in
gs
int3
sub
xchg
pushf
add
int
dec
push
xchg
mov
test
xchg
xchg
add
mov
std
ret
jmp
xlat
jg
pop
sbb
xor
rorb
outsb
mov
add
movsb
dec
xor
lahf
mov
test
aas
cmp
cmp
sbb
dec
cmp
push
rolb
pop
imul
out
inc
enter
sti
inc
jno
pop
jl
arpl
lods
pop
sbb
xor
sub
loop
and
scas
in
out
test
fcoms
in
jmp
cmp
inc
out
push
jle
loopne
inc
cltd
loope
cmp
mov
push
xor
cs
int3
cmc
mov
fwait
js
mov
outsb
icebp
or
fwait
pop
icebp
inc
adc
inc
ret
fisubs
jecxz
and
fcompl
xchg
sbb
es
cmp
sub
or
pop
dec
mov
imul
mov
jnp
add
cld
popf
lods
mov
in
add
pushf
pusha
mov
mov
adc
add
push
es
and
jl
shlb
cmp
xchg
pop
fstpl
pop
sahf
xchg
jecxz
xor
ss
dec
mov
mov
test
iret
push
mov
bound
sub
push
or
push
je
inc
test
scas
jnp
fbstp
cmp
jp
xor
mov
inc
add
xchg
and
lea
xchg
xchg
in
cmpsl
imul
daa
xchg
cli
xor
or
jle
sbb
fdivrp
loopne
mov
mov
inc
adc
in
jp
out
cld
movsl
add
je
sub
pop
arpl
jb
ret
or
inc
fisttpll
push
push
jl
xor
lds
adc
pop
stos
mov
pop
jmp
xor
mov
push
or
pop
add
mov
pop
mov
mov
and
adc
mov
in
ret
xor
ss
bound
lds
pop
out
mov
sub
inc
adcl
pusha
and
pop
jmp
jno
mov
mov
pop
jg
pop
scas
int3
cmc
fisubs
mov
test
imul
inc
pop
mov
cmc
or
dec
inc
mov
jp
lret
jno
sub
or
stc
inc
and
xchg
pop
jae
leave
loope
or
and
orl
or
xor
cmpsl
subb
rclb
mov
mov
or
inc
addr16
enter
cmp
jge
repz
popf
cmp
push
mov
aad
lock
lock
mov
out
mov
mov
in
xchg
mov
dec
push
fs
mov
push
out
clc
xor
xor
rorl
fs
fists
and
jmp
shl
imul
xchg
cmp
out
mov
push
mov
in
mov
sbb
mov
clc
and
mov
mov
aam
ret
pop
dec
xor
mov
cltd
ds
jp
dec
out
pop
jo
dec
popa
inc
int3
mov
test
insl
xchg
cmp
test
jbe
fisubrl
inc
lds
jnp
lret
out
pop
inc
icebp
iret
push
fadd
outsb
int3
inc
sbb
xor
push
and
rcr
xor
sub
xchg
push
cmpsl
and
test
cli
fstp
inc
jg
mov
cmp
mull
push
mov
jns
imulb
int
adc
shlb
enter
iret
dec
cmpsl
jecxz
mov
es
xor
enter
add
scas
cli
mov
push
test
int
push
mov
dec
mov
or
icebp
fimull
mov
aad
adc
lret
cltd
js
cld
pushf
out
shlb
sbb
int3
sbb
adc
std
mov
jb
dec
sbb
add
xor
rcll
aaa
adc
jae
call
cmp
inc
in
imul
jg
push
das
mov
adc
lds
adc
cmp
add
jmp
popa
ficoml
ja
nop
js
xchg
orb
gs
push
jp
push
lret
dec
fisttpl
popf
dec
mov
out
mov
add
mov
mov
dec
aam
jle
cli
adc
and
jbe
add
frstor
push
cmp
adc
ja
les
out
push
iret
divb
add
lcall
popf
cmpsl
push
cmp
fisubrl
movsb
adc
adc
je
mov
push
mov
inc
sub
cli
mov
pop
fisttpll
outsb
mov
movzww
fmull
xor
aam
sbb
pop
cmp
hlt
inc
inc
sbb
add
pop
cs
pop
mulb
xor
fdivrl
mov
inc
andl
imulb
mov
dec
sub
test
push
testb
cmp
aad
into
xor
jno
fmulp
cmc
cmc
and
jmp
fdivr
test
push
or
outsb
or
rcrl
push
repnz
jns
icebp
icebp
das
jo
bound
mov
push
xor
fistpl
test
pusha
sub
and
and
xchg
sets
mov
ss
cmp
pop
imul
lock
fiadds
cmpsl
jl
outsl
out
push
inc
add
pop
push
mov
add
dec
sub
inc
lret
paddsw
ds
sub
sbb
outsl
push
test
sbb
aad
or
repz
imul
fisttpl
and
sub
pop
dec
loope
outsl
in
test
arpl
pop
clc
push
xchg
push
clc
or
fcmove
lock
dec
push
pop
enter
and
sbb
adc
lea
fisubrs
insl
rorl
addr16
ret
sahf
std
inc
enterw
cmp
sbbb
mov
lods
loope
xor
call
arpl
iret
mov
mov
xchg
jnp
test
adc
out
ss
enter
xchg
nop
aas
jp
loope
mov
inc
mov
aam
incl
inc
mov
and
or
pop
dec
adc
jbe
or
test
shl
mov
outsl
js
pop
mov
loopne
repnz
jle
sub
enter
and
push
shll
iret
add
mov
scas
dec
push
cmp
inc
ds
out
mov
push
push
lods
pop
jge
ficompl
cmp
adc
scas
cs
pushf
jno
or
das
xchg
cld
push
sbb
into
xor
clc
sub
mov
adc
xor
dec
sahf
or
scas
cmp
js
mov
test
push
or
mov
sbb
xor
dec
aaa
insb
iret
lods
lret
js
adc
adc
adc
sub
int3
and
sub
sbb
pop
sub
xchg
pop
outsb
dec
or
xchg
insl
mov
negb
inc
and
test
lock
aas
mov
loopne
into
pop
insb
add
xchg
xor
out
leave
mov
jo
fmull
addl
pop
and
iret
sub
loope
mov
adc
popf
cs
mov
and
mov
push
jo
lods
push
jg,pn
add
clc
cmp
add
mov
loopne
adcl
outsl
xchg
stc
test
iret
imulb
pop
daa
js
xchg
mov
mov
cmc
mov
sbb
stos
and
or
testl
inc
and
out
fdiv
push
lods
lahf
sub
and
cwtl
fdivl
jns
cmp
mov
and
cmp
push
inc
test
loope
xor
shll
or
add
mov
cmp
movsb
dec
or
add
cmpsb
paddusw
out
add
ja
mov
repnz
cmpsl
arpl
je
add
arpl
outsl
pop
mov
fdivrp
adc
out
cmp
fcompl
and
rorl
xchg
dec
xor
sub
pop
or
xor
hlt
shr
in
or
dec
mov
xlat
add
push
or
adc
jo
pop
jle
cli
dec
in
dec
add
pop
std
icebp
fwait
jmp
loopne
pcmpeqw
jb
jnp
mov
xor
outsb
mov
iret
out
and
fstl
sbb
test
subb
push
insb
inc
cmp
jl
pusha
add
icebp
test
cmp
mov
or
loope
cmp
cmp
sbb
pop
aas
mov
adc
cmpsl
xchg
ja,pt
into
cmp
or
xor
mov
jnp
push
repnz
push
push
cmpsl
aas
icebp
xchg
xor
in
je
add
dec
cmp
xchg
fildll
pop
push
outsl
push
loop
icebp
insl
cmpsb
rorb
lret
pushf
jno
jno
je
imul
pop
cs
in
ficoms
adc
inc
aam
pop
dec
shll
test
push
adc
xor
sub
rol
dec
and
jae
mov
std
mov
popa
push
jbe
xchg
add
repz
fdivrs
leave
push
std
jno
ret
into
pop
ss
lret
and
shlb
push
shrl
push
xor
inc
leave
inc
ret
cmp
testl
jo
adc
leave
push
jge
inc
out
mov
sub
insb
and
movb
mov
sub
adc
call
loop
shll
in
repz
mov
and
jns
inc
xchg
aad
movsl
in
push
xchg
xchg
mov
dec
nop
testb
or
int3
inc
xorw
pop
xor
xchg
jnp
or
movsb
pop
in
lods
jmp
movsl
fs
out
and
shl
pop
sub
xchg
mov
jmp
mov
neg
dec
fdivl
cwtl
icebp
mov
push
and
dec
out
mov
sbb
fiaddl
mov
rorl
jge
push
dec
ret
push
cli
cmp
mov
mov
sbb
in
jmp
lock
xor
sbbl
shrb
xchg
pushf
cmc
inc
dec
mov
lds
add
mov
cmp
in
scas
int3
add
xor
dec
mov
and
jno
cmpsl
stos
push
repz
ljmp
mov
not
add
pushf
mov
sub
add
add
jmp
push
mov
pop
sbb
mov
push
dec
pop
cmp
push
jno
jecxz
mov
call
fnsave
addr16
aas
push
inc
std
rorl
dec
aad
stos
pop
or
jecxz
js
push
xchg
movsl
xorl
jecxz
repnz
pop
roll
mov
xor
adc
inc
jb
popf
std
lret
mov
das
inc
add
orl
mov
cmp
push
push
jge
mov
and
loop
xchg
ds
jne
mov
cmc
xor
xchg
test
mov
adc
dec
mov
pushf
or
push
push
sarl
inc
jge
and
xchg
mov
clc
cmp
xchg
mov
daa
inc
lods
orb
push
ja
push
movsb
lcall
mov
cmp
adc
cmp
filds
mov
add
loop
sbb
or
out
or
mov
sbb
in
mov
bnd
inc
shlb
out
lds
push
inc
arpl
aam
pop
dec
and
xlat
push
push
scas
adc
cmpb
adc
pop
push
dec
mov
jae
outsl
lds
lret
test
arpl
adcl
outsl
cmp
adc
push
jge
inc
scas
push
std
out
movsl
pop
mov
test
sub
stos
sub
xchg
lret
adc
xor
add
xor
and
or
jb
sub
fidivl
jle
mov
popa
in
xchg
cmp
ljmp
outsl
ss
push
daa
push
inc
lea
hlt
push
roll
shlb
cmp
loop
aad
std
cmp
scas
add
aas
jge
lret
dec
inc
in
divl
mov
cli
icebp
inc
inc
mov
xchg
ja
dec
jg
push
mov
stc
cvtpi2ps
in
cmp
outsl
or
stos
dec
add
inc
loop
cmc
fcmovb
jecxz
stos
fnstenv
sub
clc
mov
je
xor
lods
ret
lea
sub
cltd
clc
push
push
adc
fisttps
das
jno
call
lret
les
in
inc
or
shlb
outsl
stos
insl
or
or
pop
daa
mov
cmp
hlt
xchg
push
mov
lea
jp
cwtl
rorl
push
fisubrs
and
and
je
mov
lds
inc
dec
pop
mov
icebp
aam
ljmp
inc
push
add
inc
xor
adc
inc
int3
clc
pushf
in
push
mov
and
mov
push
fisttpll
xchg
jnp
dec
jno
data16
jle
xchg
orl
rcll
inc
mov
aaa
das
cltd
outsb
sub
rorl
xlat
sahf
or
fsts
sbb
sub
pushf
adc
iret
les
or
jbe
int3
cmp
shlb
sarb
push
lahf
repnz
js
dec
or
jecxz
adc
adc
jnp
jns
xchg
mov
mov
sub
fdivrs
nop
jbe
imul
adc
ss
outsl
mov
add
lds
mov
test
mov
sti
mov
hlt
cld
popf
inc
or
inc
fisttpll
dec
jecxz
push
leavew
push
dec
xlat
jle
add
enter
ret
push
mov
sbb
jae
out
fisubrl
stc
and
ljmp
setns
in
insb
insl
std
es
aas
xchg
ret
jl
sbb
xchg
pop
loope
std
outsb
lock
insb
in
push
sbbb
or
push
std
jl
aas
mov
adc
push
dec
pop
sbb
fbld
repz
and
daa
jg
push
mov
fmuls
or
cld
push
pop
decb
orl
add
fprem1
test
cmpsl
jl
mov
sarb
jbe
jp
repz
xchg
sbb
add
push
sarl
or
cltd
iret
jle
xor
inc
idiv
daa
stos
and
jmp
xchg
popf
imul
mov
stos
xor
not
stc
xchg
nop
mov
leave
sub
cmpsl
jp
out
aas
stos
dec
arpl
mov
jmp
inc
xlat
adc
or
sbb
or
and
daa
adc
ljmp
jb
inc
lds
shlb
xchg
cltd
jle
push
stos
push
xlat
dec
add
mov
cmp
cmp
push
dec
lock
movntq
adc
adc
aad
lock
insl
dec
scas
xor
das
sti
mov
mov
lods
test
lcall
into
fiadds
mov
xor
enter
xchg
xchg
xorl
mov
int
push
and
adc
insl
lods
rcrb
pop
and
jns
push
sub
int
sbb
insb
jno
inc
int3
lods
cmp
ret
test
test
sbb
test
and
in
dec
movsl
push
cmc
xor
mov
es
repz
or
sbb
repz
mov
mov
mov
dec
repz
pop
add
pop
dec
out
fisttpl
jbe
inc
ds
dec
jbe
ret
into
inc
hlt
lods
and
sub
inc
enter
sbb
inc
jns
xor
fmulp
add
push
rcrb
imul
mov
adc
xor
je
dec
inc
mov
or
mov
mov
js
mov
push
mov
repz
and
out
add
jg
mov
xchg
out
jnp
ss
adc
gs
jne
xorl
icebp
movsl
dec
pop
jl
loopne
clc
movsl
jbe
adc
insl
adc
fidivrl
es
in
shrb
cmp
xchg
scas
mov
fwait
out
push
out
and
mov
nopl
add
or
scas
mov
lea
pop
outsb
lahf
add
lods
ret
cmpsl
mov
mov
lock
rcrl
pop
lock
pop
push
ret
popf
mov
test
xor
sahf
das
and
lret
and
lcall
jno
or
loopne
test
das
mov
sbb
dec
lods
xchg
and
scas
jecxz
into
jae
nop/reserved
scas
sub
bound
jns
cmp
mov
mov
out
dec
insl
out
insl
pcmpgtw
bound
lahf
leave
add
sub
mov
inc
loop
and
cwtl
enter
sub
cmovns
int
mov
cmpsl
es
push
add
jo
pushf
mov
lret
cmp
insl
cmp
in
nop
shl
hlt
add
pop
sbb
add
into
jnp
js
adc
ds
pop
xor
repnz
out
stos
lods
out
sub
mov
mov
je
mov
mov
shll
hlt
sbb
xchg
jmp
jmp
cwtl
push
inc
cs
pop
inc
push
cs
fbstp
outsb
leave
mov
pop
repnz
test
test
test
dec
arpl
jnp
mov
mov
insl
adc
rcll
inc
shl
mov
shl
xchg
mov
das
rcr
loopne
push
leave
addr16
sarb
out
mov
cmc
std
jge
clc
les
cmp
ljmp
sub
sbb
pop
mov
xor
jecxz
dec
adc
mov
test
shrl
fisubs
lret
xchg
ret
subb
push
ret
sbb
xor
pop
adc
mov
push
into
fimuls
leave
fmuls
xchg
call
xor
std
imul
pop
rcl
xchg
fwait
cmc
repz
jecxz
out
jne
push
pop
cmp
add
jo
test
xchg
adc
enter
pop
mov
call
xor
mov
xchg
dec
sbb
push
push
insl
je
pop
xor
push
cmp
xchg
lods
dec
or
add
shlb
xor
bound
xchg
cmp
insb
ds
sbb
outsl
xorl
fdivrl
call
pop
addr16
scas
dec
mov
icebp
add
cmp
aam
or
inc
mov
outsb
pop
jg
fxch
repz
xchg
lret
cltd
lret
dec
fisubs
rcll
rclb
pop
outsl
or
loop
inc
mov
cmpsl
dec
mov
mull
add
xchg
sbb
mov
xlat
mov
mov
stos
jnp
orb
lods
data16
cld
stos
sarb
mov
stc
push
es
sbb
sbb
loopne
subb
push
sti
cmp
inc
lods
lret
outsb
add
int3
ret
lods
jbe
inc
in
cmp
bound
mov
xchg
lds
test
adc
hlt
adc
jecxz
scas
popa
or
add
mov
ds
loopne
adc
mov
cmp
lods
mov
ja
daa
mov
icebp
enter
push
add
ljmp
jge
les
push
mov
shlb
pop
int3
andb
sbb
jmp
das
dec
add
dec
pusha
push
adc
ss
sbb
add
pop
sahf
lahf
test
ss
dec
cmp
pop
jp
das
hlt
jl
xchg
dec
xor
mov
test
cltd
int3
and
push
ljmp
sub
rcr
repnz
push
mov
add
jno
or
inc
dec
imul
mov
dec
lock
daa
in
jp
loope
xor
imul
inc
adc
cmc
jb
pop
loop
testb
and
jbe
mov
dec
jge
ss
test
or
xor
pushf
incl
lea
adc
sbb
mov
lock
jae
mov
and
push
jns
les
sub
mov
in
dec
je
mov
ficomps
xor
cmp
in
sub
cwtl
cmpsl
popa
jb,pn
imul
xchg
int
push
dec
jp
into
pop
pop
les
neg
xchg
stc
and
xchg
push
adc
ret
aaa
xor
scas
xor
xchg
lea
sbb
ss
scas
add
mov
lods
inc
dec
imul
int3
je
lahf
dec
pop
leave
push
repnz
xor
jne
fstpl
xlat
cmpsb
add
inc
fldenv
adc
fnsetpm(287
jbe
mov
mov
mov
int3
sarl
adc
clc
push
xchg
or
sti
imul
lret
cmp
inc
iret
or
or
int
jle
sub
out
loopne
or
jbe
pop
lods
xchg
test
in
fistl
mov
shlb
cli
and
mov
les
hlt
xchg
push
fcmovu
xor
pop
loopne
cs
xchg
xchg
xor
xchg
dec
mov
sti
pop
xor
push
iret
imul
pop
ss
jge
pop
xor
jg
test
shr
push
lock
xor
pop
jo
xchg
idivl
les
dec
jnp
rclb
sti
adc
sbb
xlat
sub
rcll
mov
addr16
mov
fbld
sub
scas
xchg
pop
or
dec
jecxz
pop
mov
js
scas
xchg
pop
cmpsl
negb
loope
hlt
imul
xor
lcall
cwtl
test
cmc
out
mov
idivb
rcr
lcall
push
out
popf
mov
das
inc
pushf
stos
jne
mov
outsb
repz
pop
sub
mov
push
les
fstpl
cmp
jne
in
data16
clc
push
xchg
cmc
je
push
iret
fstps
jl
ljmp
cmp
pushf
mov
loopne
outsl
lret
mov
jne
imul
push
pop
push
push
and
or
popf
push
adc
dec
push
test
jb
sub
xor
outsl
xchg
and
and
jecxz
dec
cmp
bound
cs
pop
stos
push
push
pop
mov
out
mov
test
xchg
lret
xchg
push
inc
or
movl
adc
xchg
adc
mov
scas
loope
fisubrl
loope
xchg
data16
adc
xchg
out
add
les
mov
ret
xor
aas
pop
sub
mov
pop
in
in
xchg
andl
ljmp
push
mov
or
inc
dec
xor
iret
cmp
aad
push
cs
mov
das
cmc
and
sub
repnz
das
in
cs
and
cli
nop
mov
sbb
pusha
mov
frstor
mov
mov
cmp
pushf
out
int3
lds
movsb
outsl
dec
imul
jne
popa
pop
mov
stos
mov
jae
mov
mov
adc
mov
inc
jno
inc
pop
mulb
or
lock
orb
aam
pavgw
movsb
inc
jecxz
sarl
negb
aad
scas
xchg
arpl
ret
sti
or
mov
mov
insl
mov
dec
sub
fcmove
cld
mov
mov
insb
push
inc
pushf
es
fimuls
das
iret
xchg
jo
xor
call
add
iret
adc
inc
into
sbb
and
rcr
push
mov
ror
scas
mov
push
andl
add
loope
stos
xor
xchg
fsubp
dec
aas
add
pusha
fdivr
outsb
ret
or
mov
inc
ret
jo
out
ret
into
xchg
mov
aas
stos
das
loopne
dec
pop
movntps
xor
add
rcrb
stos
lods
and
dec
or
pop
cmp
bound
leave
lahf
or
add
scas
push
sub
and
add
push
scas
jg
ja
push
adc
mov
xor
icebp
in
mov
roll
call
mov
xor
mov
cmp
imul
xchg
jmp
lods
in
inc
cltd
in
clc
in
fmull
ret
xchg
add
mov
hlt
into
lea
pop
mov
adc
aam
lahf
add
mov
sbb
fisttpl
inc
xor
outsl
mov
fbld
lock
push
adc
cs
aam
mov
stos
dec
inc
dec
iret
cmp
insl
fstpt
or
sahf
xchg
pop
mov
mov
and
mov
bound
pop
pop
mov
hlt
or
sbb
jnp
jns
and
inc
pop
fsts
rol
push
les
dec
int
test
fadds
mov
pop
bnd
push
sarb
add
out
jae
dec
lock
jo
or
enter
push
and
sahf
nop
bound
or
lock
jecxz
xchg
inc
sahf
movaps
adc
xchg
in
sbb
xchg
xchg
and
lret
adc
lahf
xchg
into
out
jl
add
iret
inc
fsubs
inc
ret
cmp
add
imul
scas
push
fmul
inc
push
push
dec
hlt
push
lods
popf
scas
jmp
push
pusha
hlt
lods
aas
fidivs
adc
cmpsl
adc
in
mov
sub
jl
xchg
mov
int
sbb
leave
notb
or
ret
mov
add
loopne
inc
sub
and
xchg
cmp
dec
roll
jp
idivb
inc
add
cmp
push
fcompl
and
lock
sub
sub
stc
jecxz
add
ds
repnz
mov
fnstsw
cld
inc
lock
ja
fidivl
jae
movsl
inc
mov
popf
repnz
ja
nop
add
shlb
daa
arpl
ret
lods
sub
lea
cmp
cwtl
cmp
xchg
cld
int3
clc
inc
les
xor
dec
je
sbb
imul
gs
xchg
lods
mov
cltd
ret
arpl
jecxz
mov
lret
imul
mov
jge
cld
xchg
sbb
faddl
movsl
pop
rcrl
pop
push
add
in
sti
in
fisttpll
sbb
lret
cld
adcb
xchg
dec
mov
jl
dec
rol
pop
ret
mov
test
pop
imul
xchg
jno
dec
sbb
ret
clc
mov
dec
adc
mov
fisubrs
mov
mov
mull
or
fdivrs
das
ds
sbb
pusha
sub
lret
xchg
repz
cmc
cs
loope
pop
aad
cmpsl
lea
adc
leave
lods
mov
les
insb
mov
mov
mov
lret
mov
cmp
jge
repnz
ds
leave
add
outsl
dec
sub
mov
in
xchg
fmul
fdivr
lcall
push
scas
and
clc
mov
ret
sub
push
jb
jbe
test
cltd
push
into
fistps
push
out
pop
insb
dec
je
cltd
add
push
out
aaa
rcrb
mov
sbb
push
xor
movsb
cmp
push
or
push
outsb
jo
xorb
add
scas
cmp
sub
bnd
mov
fbstp
sti
std
sub
inc
out
inc
inc
mov
xor
mov
xchg
cs
cmp
sbb
popf
inc
icebp
pop
and
icebp
in
push
int
ds
pop
sub
mov
sbb
mov
and
xchg
je
xor
inc
mov
jge
mov
lods
loope
imul
xlat
pop
movsl
stos
repnz
add
stos
or
xor
mov
push
fs
lret
jmp
arpl
xlat
and
lahf
dec
dec
pop
rorl
scas
out
mov
add
js
adc
dec
es
jmp
jge
aad
lret
add
pop
or
cmp
sbb
rclb
std
adc
adc
mov
int
test
jns
push
or
xor
cmp
push
ss
mov
mov
lds
xor
fsubl
add
mov
ds
fldcw
js
mov
and
xor
mov
dec
hlt
xchg
sbb
iret
mov
movsl
leave
mov
stos
push
push
dec
clc
divl
add
leave
dec
sub
mov
mov
pop
movb
mov
dec
jmp
addl
add
jnp
jle
jp
cmpsl
lods
xchg
bound
mov
int
arpl
mov
sahf
out
loop
out
push
cs
cltd
and
arpl
dec
rorl
cmpb
cmp
ffreep
or
xchg
push
sti
mov
cld
loopne
inc
pop
stc
popf
shr
jbe
sbbb
mov
adc
orl
in
sbb
out
ret
xor
mov
push
mov
pop
mov
subl
pop
dec
mov
mov
cmp
data16
movsb
mov
mov
ret
xlat
in
arpl
xor
sbb
ret
in
int3
xor
lods
mov
pop
out
out
push
push
pushf
mov
mov
cli
ljmp
cmpb
in
or
rcrl
loope
sbb
mov
cmpsl
lock
loopne
imul
test
mov
enter
sbb
addb
negb
jae
push
in
push
lods
je
inc
cld
sbb
dec
cmp
pop
jle
out
xchg
inc
xor
cmp
cmp
fbld
inc
cmp
push
imul
sub
add
subl
jmp
rcrb
xchg
mov
xor
and
and
mov
and
call
sub
cmpsb
mov
inc
int
cmp
fwait
stc
je
cli
inc
mov
repz
fstl
push
push
rcll
shl
dec
movsl
mov
add
jnp
js
leave
mov
pushf
xor
sbb
mov
sar
add
imul
out
gs
inc
mov
sub
inc
leave
or
jo
push
or
xlat
cmp
out
jle
cld
aaa
incb
push
enter
cltd
xchg
jg
pop
mov
cmp
adc
in
lret
jge
loop
jmp
stc
cli
pop
inc
mov
stc
out
cwtl
inc
mov
stos
lahf
stc
ret
pop
clc
imul
sbb
insl
subl
addr16
cs
cmc
fisubrl
or
std
mov
dec
nop
gs
cmc
push
cmp
ss
push
cltd
movsb
addr16
ja
or
repz
js
sbb
jo
testl
ret
pushf
dec
lret
pop
sbbb
test
mov
dec
ljmp
sbb
and
and
mov
test
aas
faddl
rcrl
movb
push
popf
int3
xor
call
andb
mov
loopne
push
imul
pop
jmp
hlt
loope
bound
mov
fcmovnbe
xchg
xchg
les
mov
insl
repnz
outsl
test
mov
negl
lahf
jo
or
jbe
call
ss
cmp
les
lret
mov
sbbb
out
ljmp
outsl
fsubrl
sbb
js
loopne
cmp
cmp
inc
jmp
sbb
lods
loope
mov
lret
adc
pop
dec
cmpsl
ja
int3
adc
adc
mov
cs
mov
mov
enter
mov
lret
xchg
scas
pop
xor
leave
and
stos
clc
jne
popa
ja
mov
xchg
enter
leave
loopne
sub
js
int3
mov
lea
sub
add
lods
lea
push
testl
push
leave
mov
shlb
cmp
daa
cmc
mov
sti
jmp
adc
sbb
incb
cs
call
cli
fistps
loopne
mov
test
divl
xchg
movsl
lods
sahf
pop
jnp
test
fnstsw
pop
ja
insb
je
out
mov
jno
dec
mov
fs
aad
sbbb
xorb
sub
dec
outsb
out
xchg
pop
pop
push
push
cltd
loop
test
test
scas
xor
push
in
subb
in
out
fmuls
lea
lds
sbb
xor
mov
push
add
cld
jmp
mov
push
daa
sub
in
aas
push
mov
dec
dec
ret
clc
bound
mov
js
xchg
jmp
jnp
mov
mov
mov
or
pop
icebp
outsb
aad
cmpsl
stc
and
test
lahf
push
popa
inc
cmp
jnp
mov
dec
jnp
addr16
scas
stos
into
inc
mull
loop
aaa
lret
imul
pop
pop
xchg
jg
push
mov
cmp
add
pop
push
icebp
xchg
icebp
cmp
add
leave
pop
push
dec
push
inc
adc
cmp
add
ror
push
ret
pop
cmpsb
mov
int
pop
xchg
icebp
cli
rcrl
les
aam
mov
mov
f2xm1
int
jecxz
lods
sub
mov
push
sub
insl
inc
and
leave
xor
xor
sub
daa
inc
shll
add
fsubrs
mov
insl
xlat
test
aad
popl
jb
mov
fbstp
mov
ret
jae
mov
mov
mov
in
adc
fucomp
jno
adc
jmp
adc
dec
mov
mov
test
sbb
fisubrl
pop
stos
aas
stos
call
push
mov
les
push
test
mov
push
popa
xor
cmp
fidivs
and
jp
pushf
push
cli
or
xchg
sub
sub
cmp
sub
lods
arpl
je
mov
pop
jl
and
adcl
out
jbe
scas
in
jno
jo
pop
icebp
xor
push
test
jmp
scas
sub
xchg
sahf
inc
mov
cmc
in
lods
mov
push
cmp
xchg
icebp
dec
mov
mov
sti
mov
adc
mov
push
into
idivl
and
loopne
xlat
lds
lock
sub
out
xchg
and
repz
sbb
adc
pusha
push
fcmovne
jo
cld
sub
enter
sbbb
and
adc
test
xchg
xchg
shlb
mov
sub
mov
into
xor
sbb
stc
inc
add
ss
rolb
jmp
es
mov
lods
and
add
mov
lods
out
in
into
and
js,pn
cmp
jne
cmpsl
in
lock
in
in
pop
out
adc
mov
xor
cmc
mov
inc
lock
iret
movsb
pop
sbb
hlt
pop
mov
xor
pop
jns
sbb
lds
mov
arpl
mov
ror
insb
jno
adc
div
sahf
inc
das
pop
mov
cmpl
pop
mov
push
movlps
scas
pushf
mov
out
pushf
inc
addr16
mov
je
fwait
xchg
movsb
xchg
add
jmp
mov
cld
inc
and
insb
lock
dec
push
mov
sbb
cmpsb
outsl
and
ljmp
push
loop
dec
outsb
ret
sarl
fmull
lcall
out
sub
enter
out
cmp
xchg
sbb
add
cmp
ds
lret
mov
push
into
pop
mov
or
mov
test
pop
jmp
lods
notb
pop
cld
adc
and
mov
sbb
mov
enter
loope
jge
sbb
out
adc
mov
lea
mov
lret
les
cmp
or
fsubr
jnp
inc
faddl
sarb
testl
pop
ds
sub
jecxz
adc
shr
bsr
andl
stos
mov
in
ds
pop
cli
fimull
jecxz
clc
fists
pop
dec
mov
sub
jb
sbb
lret
loope
cmp
sbb
fists
ret
aas
nop
aam
ret
ja
neg
and
ds
push
repz
int
push
and
sbb
enter
add
shll
jno
movsl
mov
fs
cmp
dec
mov
xchg
jb
out
lret
stos
rorb
jnp
das
cmpsb
and
in
sbb
int3
adc
mov
bound
adc
in
or
into
fs
imulb
test
push
test
mov
rcrb
adc
into
adc
cmc
mov
pop
and
fimuls
insl
inc
outsb
mov
pop
insl
sbb
cmp
std
sbbb
andl
push
pop
lods
pop
adc
push
mov
incl
jmp
lods
stos
cmpsb
push
xor
mov
fcompl
inc
out
pop
dec
outsb
adc
push
sbb
push
pop
das
adc
notl
arpl
lods
lods
fs
adc
add
push
adc
or
xchg
daa
scas
jmp
addb
mov
mov
jno
lods
xor
xchg
aam
add
fdivrs
dec
push
adc
mov
sar
fsubrs
pop
and
xchg
call
pusha
in
sbb
sbb
rclb
push
mov
scas
dec
std
rcrl
mov
and
dec
loopne
add
xor
push
je
fnstenv
sub
arpl
lods
mov
test
arpl
xorl
add
shl
movsl
je
cli
filds
stos
dec
ds
mov
in
add
aaa
ss
movsb
lods
mov
jecxz
jbe
int3
movsb
push
add
sbb
in
jl
out
xchg
pop
pop
pop
call
gs
and
mov
push
inc
cmp
cmc
adc
add
push
or
push
aaa
xchg
adc
idivb
insb
into
jmp
or
or
bswap
jnp
inc
push
inc
add
outsb
adc
or
test
loopne
out
xor
movsl
jb
call
mov
mov
icebp
pop
out
out
push
inc
sub
sarb
mov
adc
ja
add
sbb
insl
xorb
and
aas
xor
inc
or
mov
outsb
imull
and
push
mov
sub
scas
mov
fwait
dec
mov
push
cltd
pop
sub
daa
arpl
cmp
cmp
inc
adc
aad
jnp
dec
jns
xchg
adc
pushf
push
cmpsb
in
sahf
mov
lods
mov
jmp
jne
cmpsb
lock
push
rcll
xchg
jo
lcall
mov
push
sahf
mov
cmp
dec
push
cmp
xchg
push
dec
push
aas
imull
inc
lock
mov
lods
sbb
scas
sbb
jge
push
push
call
jo
xchg
repnz
lods
je
pop
jl
pushl
add
mov
sahf
push
gs
out
sti
or
out
mov
rorb
repz
mov
repnz
fistpl
stos
push
popa
add
cmp
shrl
add
aaa
pop
orl
jae
sbb
sbb
popf
jl
nop
fisttpll
or
and
xchg
mov
sbb
xor
cmpsb
sbb
out
jae
xchg
lock
add
mov
jo
fisubrs
inc
and
mov
mov
cmp
aam
les
cmpsb
aaa
rcrb
push
in
mov
cmp
ss
aam
pop
push
mov
rcrb
outsl
loope
rcrb
lea
cmp
ja
popa
popf
in
inc
and
fnstcw
lret
mov
xchg
addl
push
js
pop
adc
fldl
xlat
dec
pop
jle
mov
cmp
fidivrs
leave
fiadds
mov
xchg
adc
sub
fdivr
fwait
rolb
mov
xchg
call
push
sub
inc
mov
jo
xchg
sti
sub
pop
shr
add
clc
fxtract
xchg
loope
cli
mov
fwait
cmp
mov
mov
jecxz
xor
ret
into
aad
cltd
xorl
inc
jle
into
pop
icebp
jne
scas
pop
mov
loope
addr16
outsl
push
add
cmp
pushl
xor
movsb
lock
xor
jno
js
jno
loop
stos
mov
sub
ret
push
fs
cmp
test
xor
mov
mov
outsb
enter
and
adc
inc
add
stos
les
or
fcmovnb
mov
sub
sub
loopne
inc
test
jmp
cld
sarl
lea
loopne
jnp
jnp
andb
jno
stos
je
ret
movsb
cld
int3
pop
sub
stos
pop
imul
cmp
pusha
xchg
int3
mov
pop
xchg
sbb
push
fcoms
mov
mov
jg
pop
xor
stos
popa
or
je
adc
sbb
or
jg
pusha
aaa
or
adc
mov
pop
mov
push
mov
mov
rcl
ret
adc
movsb
das
lret
add
sbb
mov
adc
jecxz
jg,pt
stos
inc
mov
jmp
mov
mov
lret
nop
xchg
sub
mov
testb
mov
aad
adcl
jp
fs
jbe
pop
xchg
xor
mov
or
jae
xchg
xchg
mov
push
jle
or
dec
cs
or
scas
js
cmp
adc
or
test
inc
mov
es
bound
pop
push
and
sub
cmp
pop
jno
xchg
ret
insb
inc
pushf
insb
xchg
clc
xlat
in
and
stc
inc
popf
mov
jmp
push
mov
xchg
and
sub
js
mov
comiss
lds
or
iret
enter
loope
push
mov
popa
xchg
sbbl
dec
shrl
xorl
adc
pop
mov
mov
cmpsl
sub
shll
addl
lea
xor
or
or
rcrb
xlat
int
lcall
je
xchg
insb
pop
cmpsl
lret
push
add
push
fcompl
mov
shlb
push
int3
jle
xor
xchg
aad
rcr
xchg
adc
cltd
mov
fadds
aad
cmp
pop
testb
adc
or
shrl
pop
fwait
sbb
icebp
enter
popa
subl
jae
mov
movsb
cmovne
or
xchg
pop
cmp
xor
adc
sbb
push
adc
cmp
mov
jb
mov
lret
inc
repz
xchg
xchg
mov
sbb
inc
mov
inc
cmc
aaa
push
jno
cld
xchg
insb
ret
inc
add
cmpsl
js
xor
adc
sbb
cmpsb
lods
inc
test
imul
test
fwait
jno
icebp
xchg
daa
imul
filds
mov
out
pop
inc
cmpb
test
jns
loop
dec
jle
add
jge
pusha
bound
jne
and
out
stc
jae
bound
jne
shrb
ficoms
popa
ljmp
cmp
mov
repz
push
test
cmc
repz
popf
lcall
ds
mov
lock
sub
dec
dec
inc
jne
sub
cs
xor
dec
pop
add
xchg
jp
jmp
in
sbb
dec
pop
in
loopne
test
mov
out
jno
stc
sub
adc
pand
pop
in
add
loop
gs
cmpl
xor
sub
insl
sbb
jns
mov
add
xor
or
dec
cli
scas
and
test
lahf
and
inc
shrb
ja
xchg
aam
adc
xchg
cltd
pop
sbb
mov
dec
pop
dec
pop
push
jecxz
xchg
push
xchg
adc
clc
sub
cmp
addr16
pushf
xlat
daa
ja
add
dec
add
sti
ss
repz
pop
sub
sahf
out
arpl
mov
jbe
fwait
pop
push
clc
arpl
xor
jp
or
cmc
and
ss
into
in
call
cli
aad
xor
push
js
in
insl
in
addl
in
shlb
jmp
mov
mov
adc
and
aad
lods
mov
sar
pop
fs
mov
fs
add
daa
test
les
cmp
je
jno
push
fxch
icebp
xor
fs
dec
jnp
mov
fs
js
sub
dec
out
loopne
ficoml
pop
xorb
mov
shrl
jnp
test
push
push
div
jge
dec
or
out
mov
mov
jb
pop
dec
cli
xchg
lahf
adc
pop
add
or
and
mov
jmp
pop
xor
ja
or
mov
js
cmp
push
xchg
and
in
mov
xor
pop
sti
pop
insl
inc
pop
repz
pushf
test
sub
xor
and
fcmovnu
mov
aam
imul
pop
xor
loope
sbb
xchg
xor
xor
test
pop
jge
lret
xchg
filds
ja
iret
jmp
insb
pop
mov
negl
adc
idivl
inc
loopne
aas
add
and
mov
in
test
dec
sub
dec
push
sarl
imul
fwait
scas
jo
xorb
mov
scas
rcrb
movsb
popf
std
adc
in
sbb
fstpt
jo
cmc
mov
stos
cmp
lahf
sbb
daa
call
inc
xchg
aad
fsubl
sub
mov
int
sub
xchg
icebp
in
add
xchg
gs
mov
lods
xor
or
out
cld
inc
mov
gs
push
or
or
fbld
sarb
add
rorl
jle
cmpsl
call
or
cltd
pop
jbe
int3
mov
xor
aam
inc
cmpsl
add
and
mov
mov
mov
cli
cs
jnp
sarl
push
scas
ret
mov
add
add
repz
ja
and
add
xor
push
bswap
adc
sub
adcb
cmp
int3
cltd
or
push
arpl
sub
xchg
test
xchg
int3
pop
cmp
add
xor
xchg
inc
dec
aad
les
add
xchg
add
xchg
dec
fildl
repz
mov
cld
jecxz
push
out
adc
jp
lods
jns
fsubp
dec
addb
push
loope
out
fisubrs
adc
cwtl
mov
add
push
hlt
icebp
cmp
aad
mov
xchg
mov
fsubrs
fisttpl
outsl
repnz
push
bound
lods
mov
loopne
jge
cs
xor
jp
leave
fisubrl
insl
enter
cs
add
push
mov
pop
push
xlat
outsb
mov
insb
cmpsl
mov
addr16
push
in
add
mov
adc
sbb
dec
js
movsl
jge
inc
sub
pop
test
incl
iret
push
or
add
outsl
fisttpl
xor
dec
add
hlt
clc
shlb
mov
dec
or
enter
mov
jmp
fimull
clc
add
sbb
sbb
das
add
rolb
sub
xor
mov
pop
sub
xchg
enter
dec
inc
aaa
mov
or
cmp
jne
not
outsb
push
aaa
test
cmp
lds
shr
jl
pusha
dec
pop
not
xchg
adc
mov
stos
jb
aam
lcall
adcl
sti
mov
cwtl
ret
test
xchg
mov
push
xchg
push
icebp
xor
mov
or
fsubr
xchg
stos
bound
mov
cmc
dec
adc
out
mov
mov
rol
push
inc
mov
movsb
push
sub
nop
xchg
pushf
aas
inc
mov
adc
inc
cmp
push
mov
addb
sbb
iret
leave
dec
mov
xor
loop
outsb
lds
jnp
je
add
out
sbb
ret
dec
jge
ffree
jmp
fstpl
hlt
xor
fld
lcall
aam
nop
pushf
stos
pushf
jno
pop
or
fwait
push
inc
lcall
pop
fstpl
and
loope
mov
mov
pop
xchg
js
js
imul
inc
ret
data16
ss
leave
xchg
mov
ss
push
mov
sti
dec
cmp
add
mov
or
sti
js
insb
mov
popa
idivl
inc
or
jo
lret
cltd
loop
mov
push
push
cwtl
cmp
lods
mov
lret
rorb
sahf
cwtl
in
cmpb
cmp
mov
cmp
pop
inc
in
push
inc
lret
add
rcrl
pop
inc
shlb
jg
cmp
sbb
clc
sbb
aam
scas
lock
daa
adc
repz
dec
fwait
pop
add
cmp
push
nopl
insl
call
mov
jle
fwait
scas
pop
cmc
inc
push
add
jnp
scas
insb
inc
mov
push
sbb
pusha
mov
js
in
je
shlb
pop
xor
iret
push
pop
jae,pn
into
push
lret
xchg
push
mul
sub
adc
mov
jb
popf
xchg
mov
sbb
sub
dec
pop
adc
pop
test
js
mov
cmp
insl
cmpsb
mov
adc
pop
daa
adc
sub
push
idiv
aas
pushf
aas
enter
or
sbb
ljmp
stc
les
add
cmp
leave
out
mov
stc
dec
ja
and
xor
push
rcll
cmp
mov
sub
cli
movsb
xlat
add
push
push
cwtl
push
ja
push
scas
lcall
jp
cmpsl
icebp
or
xchg
out
loopne
lods
test
mov
shrb
cmc
mov
int3
daa
jge
lea
cltd
pop
mov
jne,pt
jno
call
das
idivl
push
or
scas
mov
push
add
dec
in
inc
clc
add
jo
jno
mov
aam
cmp
gs
inc
shll
push
mov
sub
lds
push
dec
std
ja
push
sti
aad
add
rcll
repz
push
shr
mov
aas
mov
mov
stos
pop
cmp
cld
add
aas
mov
push
sbb
lods
jp
movsl
push
inc
jnp
push
lods
sbb
aam
xchg
push
sbb
ja
in
fisttps
pop
jbe
mov
xor
pop
mov
test
pop
imul
mov
mov
dec
shll
and
pushf
mov
mov
and
lods
and
xor
enter
jne
push
jg,pt
jae
out
push
or
test
shrb
stos
adc
mov
pop
xlat
sbb
jp
lds
jmp
mov
stc
mov
les
xor
out
nop
dec
popa
fnstcw
mov
ja
sti
cmpsl
test
fldt
mov
sbb
sbb
sarb
out
cld
cs
sarl
lcall
jg
rcrl
push
mov
push
js
js
shr
add
push
dec
inc
arpl
pop
lret
add
test
rol
pushf
jge
jge
dec
dec
jg
mov
mov
mov
dec
in
or
arpl
nopl
icebp
add
rcrb
cwtl
and
xchg
cld
stc
lods
aam
mov
aam
adc
sarl
sbb
xchg
lret
cmp
or
out
in
push
sbb
sbb
sub
outsl
pop
add
push
xchg
pop
stos
mov
add
pop
ds
ljmp
adc
insl
dec
mov
push
arpl
int3
adc
cmp
push
fadds
and
insl
shrb
sbb
push
gs
mov
jmp
xchg
psubsb
divb
cld
dec
cli
mov
leave
sbb
enter
pusha
stos
or
rcrl
aam
daa
pop
cmpl
cwtl
adc
sarb
inc
mov
popf
aas
or
lahf
push
sbb
test
dec
lret
cmp
adc
mov
xor
pop
jp
cli
inc
sub
adcb
sub
jb
mov
push
into
inc
pop
sub
mov
adc
xchg
xor
or
push
add
xchg
adc
lock
cmpl
pushf
iret
fwait
fwait
inc
cmp
pop
add
fdivrs
or
jge
fsts
push
mov
mov
add
add
movnti
dec
cmc
imul
out
pop
add
ret
xlat
aaa
shlb
out
roll
lock
pop
adc
xchg
les
call
in
lcall
jge
fstl
or
hlt
aaa
popf
xchg
xchg
jp
cmp
arpl
pop
fimuls
test
ds
fadd
scas
popf
jns
in
xchg
or
hlt
and
stos
pop
add
aad
dec
dec
aaa
cmp
xchg
cmp
mov
push
pushf
inc
sub
mov
sti
les
iret
jp
aam
cmp
icebp
stos
in
arpl
lea
and
ljmpw
bound
mov
loope
test
add
pop
jl
shll
pop
lds
mov
adc
fwait
shrb
test
fs
push
sub
and
les
jbe
jecxz
out
mov
dec
add
push
movsl
jg
ss
out
std
or
test
lcall
cmp
movsl
pop
out
pop
dec
push
ljmp
jl
or
sbb
mov
and
inc
lds
icebp
mov
scas
rcrb
dec
sbb
mov
push
pop
rcll
add
lods
jns
lea
andb
and
test
sub
imul
mov
xor
shrb
inc
inc
sbb
dec
jb
xchg
mov
adc
push
cmp
xlat
movsl
dec
js
jg
jnp
out
pop
jmp
popa
je
push
jg
jmp
and
pop
dec
arpl
push
sahf
enter
xchg
mov
test
xchg
loopne
and
xchg
imul
lcall
out
outsb
adc
mov
aad
test
add
or
pop
dec
dec
adc
mov
lcall
insb
aas
out
adc
push
dec
cli
aam
jge
roll
jge
stos
pop
and
cmp
aas
xorl
addr16
loop
pop
ds
jle
pop
pusha
out
mov
cmp
mov
mov
cmp
adc
leave
mov
push
adc
pusha
in
lods
jb
pop
mov
and
les
aad
scas
int3
mov
popf
push
mov
cmp
pop
lods
dec
shl
pop
addr16
aas
adc
addr16
add
pop
adc
cld
or
sub
pushf
loope
ffreep
pop
and
aaa
das
rol
mov
sar
repnz
sarb
mov
das
daa
movsb
pop
mov
aas
das
mov
daa
cli
dec
push
push
insl
aaa
fisubs
pop
into
iret
jp
xchg
pop
jae
shl
add
lret
jecxz
movsl
clc
dec
push
cld
stc
push
cmc
and
mov
lcall
in
mov
sbb
ljmp
call
out
sbb
and
loop
stc
movsl
xchg
pop
cs
retw
xchg
xor
out
aad
shrb
in
mov
dec
pop
lock
add
sub
mov
dec
sarb
mov
pushf
push
aas
inc
popf
aas
push
std
jecxz
push
stos
mov
push
fwait
popf
pop
ljmp
and
cltd
cmpl
push
cmc
pop
bound
rdtsc
mov
jg
scas
sbb
mov
xor
scas
popa
scas
sahf
xchg
xchg
and
sbb
das
inc
out
stc
pop
aas
cmp
in
or
jl
aad
inc
sti
inc
inc
gs
out
leave
cltd
adc
push
call
stc
mov
repz
aam
addb
mov
mov
insb
jb
sub
in
rcr
cmp
insb
call
sub
mov
dec
les
scas
arpl
cld
aam
jl
xor
jnp
sti
out
xchg
push
sbb
cwtl
data16
mov
mov
jae
in
pop
gs
loop
out
int3
js
test
js
lds
dec
rorb
sub
jg
fisubrs
mov
rorl
sbb
xor
push
inc
dec
addb
fiadds
cmp
sti
ficomps
xchg
bswap
cld
into
or
jg
addl
pop
test
mov
push
loop
lods
das
jle
loop
dec
mov
mov
push
xchg
pop
adc
mov
inc
push
lret
xchg
pop
push
out
lcall
push
sbb
shr
xor
xor
xchg
fcmove
mov
xchg
pop
inc
enter
push
jmp
dec
sub
xchg
outsl
dec
mov
addr16
jecxz
cmp
or
sbb
mov
stos
hlt
and
jnp
popa
sbb
stc
sbb
stos
int
bnd
push
in
jns
pop
daa
dec
mov
pop
mov
push
test
cli
insl
mov
rclb
jo
cs
xchg
sbb
in
push
pop
dec
popf
les
jb
test
xchg
enter
dec
insb
xchg
push
push
movb
mov
insl
jl
xor
loop
es
pop
mov
push
xchg
xchg
test
lds
adc
imul
aaa
imul
mov
and
jl
jp
pop
cltd
ret
idivl
je
daa
push
push
and
loop
out
push
movsl
popf
out
cmp
jmp
xor
xlat
fwait
and
inc
loope
rcrl
lret
dec
mov
pop
cmp
cld
xor
xor
lret
je
xchg
testb
int
and
addb
xor
fwait
movsb
stos
mov
jecxz
or
mov
mov
lds
loopne
push
xor
and
leave
out
int
mov
mov
scas
xor
xor
inc
adcb
pop
sarb
mov
push
cmpsl
xchg
ficomps
dec
xbegin
sub
int
js
outsb
inc
inc
push
aad
add
ja
or
ja
aad
fdivs
leave
xor
out
fs
adc
popa
or
negl
dec
cmp
sbb
mov
push
mov
push
push
mov
xchg
xchg
rolb
test
in
dec
pop
rcrl
outsl
or
xlat
push
jp
sbb
into
and
and
aas
lret
mov
mov
xchg
or
popf
imul
outsb
inc
cmp
adc
ret
cmp
jno
xor
or
test
adc
rol
lret
push
movsl
mov
jnp
sbb
or
xchg
fwait
lret
in
cld
aas
into
push
mov
shlb
jge
cltd
std
aad
push
add
xor
dec
cli
xor
ror
inc
add
test
enter
mov
sbb
xchg
cs
test
cwtl
lock
loope
fsubrs
insb
jge
or
sub
xor
mov
inc
std
fdivl
add
jb
dec
add
and
sub
loope
ficoml
adc
mov
xor
xchg
xchg
sub
fs
cmp
and
jno
inc
add
fdiv
xor
jno
lahf
xchg
movsb
mov
ss
cltd
rorb
loopne
fxch
mov
pop
dec
enter
pop
call
bound
sub
arpl
popf
fistpl
mov
mov
mov
es
lock
scas
sbb
gs
aas
or
mov
out
ljmp
sbb
xchg
sbb
sbb
aas
jno
aaa
push
mov
mov
xor
insl
mov
stos
cli
and
cltd
aas
inc
add
daa
arpl
fcoms
fwait
lcall
jne
imul
adc
jbe
cmp
std
lret
ds
dec
add
call
lds
sbbl
dec
push
ss
mov
xchg
cmpsb
fildl
gs
and
sub
mov
push
lock
dec
xor
lods
daa
jp
scas
mov
out
inc
mov
sub
jns
sahf
into
mov
pop
jbe
dec
cld
inc
icebp
mov
or
xchg
xor
lret
mov
adc
adc
mov
inc
pop
push
test
popf
or
scas
call
cmp
sbb
dec
data16
cmp
in
imulb
andl
int
fstl
adc
or
mov
and
jge
pop
popf
lahf
inc
mov
ret
pop
adc
xor
jns
lea
pop
pop
push
dec
cmp
in
jg
mov
dec
in
fwait
jg
xor
mov
jle
insl
jmp
lea
and
sti
adc
xorl
adc
orb
jnp
push
cmpsl
sbb
sbb
ror
pop
test
cmpsl
push
mov
call
cmpl
cmp
dec
and
mov
mov
add
mov
cmp
pop
sbb
add
gs
mov
out
or
repz
jl
jns
push
xacquire
fwait
xor
pop
lods
xor
jnp
jne
xor
xor
into
and
cmc
insl
pop
popw
dec
bound
movsl
cltd
push
mulb
pop
movb
lcall
jno
xchg
push
sti
pusha
aas
dec
scas
cwtl
or
sbb
data16
xchg
lcall
xor
ljmp
mov
sub
push
test
mov
data16
addb
and
fisttps
or
out
or
mov
scas
xchg
in
push
sbb
cmc
mov
sarl
mov
movl
in
lea
in
pop
dec
call
jne
fwait
or
aad
movsl
adc
scas
cwtl
cmp
sub
or
dec
xchg
xchg
sbb
mov
jecxz
stos
ficoml
call
dec
outsb
insl
imul
adc
dec
mov
pop
pop
dec
pop
lods
ds
ja
or
push
adc
dec
ret
xchg
push
jp
adc
pushf
cwtl
inc
xchg
cmp
stc
cmpsl
inc
cli
sbb
inc
pop
push
and
xchg
daa
cmp
adc
xchg
push
cmc
add
cmp
lods
test
loopne
ficoml
mov
aaa
push
mov
sub
fs
add
lahf
imul
and
push
lods
and
mov
sbb
add
sub
pop
in
jle
imul
dec
xorb
push
imul
mov
clc
fwait
outsb
insb
and
adc
mov
xchg
dec
xor
sbb
iret
fucom
dec
sar
pop
je
add
lea
daa
mov
fsubs
inc
jb
jg
stc
movsb
dec
in
xorl
aad
cmp
inc
cmp
pop
and
jg
int
lock
push
cli
mov
imul
cmc
dec
out
fsts
push
aad
add
pop
ja
icebp
mov
mov
ret
pop
sub
xor
jmp
popa
sub
cmp
jns
mov
mov
pop
mov
fbstp
xchg
sub
in
jns
inc
xchg
les
js
scas
jmp
pop
add
outsb
inc
popf
xlat
xor
rcrl
ja
sub
inc
bound
sub
insl
adc
orb
jne
aad
pushf
mov
lcall
adc
imul
mov
mov
jno
sub
mov
xchg
cmp
mov
jbe
cmp
sbb
pop
xor
and
xchg
pop
or
orb
mov
arpl
sub
sbb
pop
push
cmc
fwait
mov
dec
jo
lret
dec
mov
call
jp
jnp
movsb
test
popa
fsubs
lret
pop
jle
mov
jbe
push
push
jne
push
sub
lret
daa
jl
add
pop
adc
imul
inc
push
sub
dec
lea
lahf
scas
sub
xchg
aad
cli
inc
call
scas
or
pop
mov
and
xor
lret
pop
shl
pop
loop
cs
pop
or
add
ljmp
test
pop
dec
inc
je
dec
or
jne
push
fcmovnbe
push
mov
jge
sti
dec
movsb
jecxz
lahf
add
lcall
popf
bound
ficompl
sbb
mov
repnz
inc
fs
sahf
orl
or
in
xchg
fwait
icebp
jl
ss
xchg
cwtl
jo
stc
popa
cmp
push
fmull
push
rclb
iret
inc
xchg
jnp
rcrb
gs
mov
fidivl
cmp
subb
andl
das
mov
push
ja
rol
xchg
or
lahf
fwait
push
testl
fldt
sub
ret
fucomip
xchg
fcmovbe
js
sub
out
out
sbb
xor
retw
addr16
frstor
nop
push
fmulp
inc
jne
fptan
mov
mov
lods
push
loopne
xchg
xchg
lea
and
adc
cmp
push
repnz
cmp
xchg
cmp
push
cmp
sti
and
js
les
sub
test
inc
xor
dec
in
dec
jmp
loop
out
nop
leave
pop
dec
test
out
xor
aaa
pop
loope
ret
fs
xor
hlt
repz
cmp
cmp
mov
jb
shll
pop
jecxz
or
lret
in
jo
or
lea
push
dec
mov
outsl
cmp
cld
cltd
cmc
lcall
fsubs
arpl
add
mov
loop
jb
fwait
jne
dec
test
xchg
aam
inc
mov
fldenv
or
mov
jl
lods
lock
mov
cwtl
cmp
movsl
jmp
pop
popa
fiaddl
and
inc
int3
daa
scas
out
jle
pop
shlb
aam
and
pop
inc
xchg
mov
sbb
adc
nop
push
mov
mov
pcmpeqw
sbbb
in
mov
rorl
push
dec
adc
lcall
icebp
testl
int
push
mov
jbe
mov
testb
ljmp
pop
test
addb
lret
mov
jno
paddusw
hlt
imul
aad
mov
sbb
add
pop
cs
or
sbb
aas
xchg
xchg
nop
fwait
aad
mov
mov
pop
push
mov
and
test
aas
ljmp
lods
mov
push
inc
mov
xchg
jb
mov
cld
jnp
mov
scas
mov
out
in
cmp
pusha
clc
pop
mov
xor
pop
push
sbb
es
shll
gs
shr
rcrl
sub
in
mov
jmp
adc
ffreep
mov
cmp
dec
icebp
pop
test
dec
int3
jmp
and
iret
mov
data16
xchg
mov
outsb
test
mov
sbb
data16
out
scas
icebp
jno
xchg
sbb
mov
xor
loope
ret
ss
imul
push
mov
push
sub
roll
add
cmpsl
lahf
stos
inc
xchg
inc
aam
pop
push
lods
dec
jecxz
cmp
add
adc
pop
sub
sub
mov
in
insb
pop
and
enter
loop
popf
jmp
orb
push
bound
push
aam
push
push
push
stos
fildl
in
pop
adc
lahf
bound
xchg
neg
pop
xchg
mov
dec
repnz
out
xor
fucomi
xor
popa
sahf
add
icebp
and
jp
out
mov
xchg
fstl
inc
cltd
in
cs
cwtl
dec
rorb
xchg
mov
sub
out
out
mov
icebp
out
jmp
mov
inc
pop
lcall
loop
arpl
xchg
rcll
mov
mov
cld
clc
loopne
jecxz
mov
lcall
inc
sahf
out
fwait
dec
mov
lods
add
mov
test
add
xchg
jle
movsb
stc
cmpsl
and
adc
ret
mov
scas
sbb
loope
mov
addl
fwait
shlb
sub
add
pushf
mov
jae
popa
lret
mov
mov
pop
xchg
iret
cmc
je
fsts
cmp
imul
xchg
mov
repz
push
and
adc
shl
outsl
xchg
js
pop
pop
in
imul
inc
adc
arpl
repnz
push
inc
or
ret
lcall
pop
jb
jle
push
orb
add
scas
ret
test
mov
call
cmp
fldcw
xor
pushf
les
fwait
out
mov
xchg
cs
mov
std
test
outsl
jo
mov
repz
lcall
js
dec
adc
cmc
lret
mov
xchg
or
es
mov
or
mov
icebp
imul
lahf
test
xor
setns
scas
gs
test
adc
nop
cmc
in
xor
sti
or
sti
das
mov
pushf
adc
ret
mov
jne
out
adc
push
xchg
sbb
frstor
fdivs
push
insl
pop
icebp
mov
jo
sbbb
addl
mov
cmp
popa
push
out
inc
mov
fwait
loop
mov
adc
in
ret
push
cwtl
inc
daa
cmpsl
int3
xor
les
fs
rcrb
call
aas
fcoms
repz
push
adc
daa
inc
rol
pop
clc
push
imulb
pop
icebp
pushf
icebp
pushf
imul
inc
sbb
movsb
lret
repz
loopne
push
aas
lods
out
push
popf
mov
cmp
sub
lds
test
dec
dec
test
cmpsb
sub
iret
into
ret
fcompl
adc
insb
arpl
jp
stc
xor
cmpsb
enter
popa
das
enter
lret
xor
sub
xchg
nop
or
ljmp
adc
sbb
fisttpl
mov
mov
pop
pop
push
fdivr
icebp
pushf
sbb
ret
mov
xchg
mov
xchg
mov
pop
jns
sahf
rol
scas
aaa
inc
mov
jmp
loope
pop
mov
mov
arpl
cld
sarb
mov
imul
inc
mov
mov
stc
xchg
sbb
je
or
test
negl
mov
xor
ja
ret
scas
scas
push
fists
in
inc
xchg
jne
mov
inc
add
adc
add
cli
jbe
scas
jle
push
jg
fwait
and
pushf
mov
or
inc
mov
jb
mov
xchg
cmp
int
aad
or
xchg
das
mov
fisubs
sub
pop
inc
jae
xor
jl
notb
jae
jno
imul
add
push
lret
pop
dec
mov
in
movsb
clc
fldcw
add
lea
mov
or
out
int3
dec
cmc
or
or
movsl
jb
cmp
mov
cli
mov
pushf
cs
push
in
sarb
jmp
xlat
mov
testb
mov
imul
push
arpl
mov
mov
inc
daa
dec
add
out
shrl
push
call
or
loop
ret
or
lods
mov
ret
push
outsb
jecxz
mov
cltd
jae
aaa
and
dec
lret
pop
test
loope
dec
inc
adc
jns
int3
mov
jge
pop
mov
mov
and
inc
xor
mov
incl
lea
or
pop
add
adc
mov
push
lret
stos
lret
fistpll
fstp
xchg
push
and
add
movsb
adc
test
mov
or
sbbb
test
mov
mov
add
sub
pop
add
les
dec
jb
push
ja
enter
xor
and
cltd
mov
xchg
or
add
sub
push
divb
xchg
shrb
ret
add
sbb
mov
jg
sbb
loopne
out
and
xorb
negb
shlb
les
xor
adc
cltd
dec
lods
pop
sbb
fidivrs
sar
xchg
int
and
mov
int3
out
ret
mov
pop
mov
test
pop
subl
pop
movsl
stos
test
lcall
or
push
insl
add
imul
push
lods
push
ja
fnstsw
clc
sub
pop
ret
add
fucomip
xor
or
lds
pop
or
ja
sbb
push
into
xchg
add
popw
and
sbb
flds
pushf
sbb
sub
inc
aas
inc
movsb
xchg
orb
push
inc
int3
inc
mov
dec
insb
jl
sarl
out
cmp
dec
jae
cltd
lea
sub
ds
jp
jae
mov
push
jle
and
or
int3
lock
mov
adc
sub
repz
mov
inc
out
xor
cmc
xchg
xchg
outsl
out
mov
adc
into
push
stc
fidivl
daa
mov
dec
lds
jno
arpl
push
daa
int
mov
idivb
mov
dec
xchg
imul
mov
pusha
adc
fs
or
push
rorl
enter
sti
call
arpl
jb
loop
test
cmpsb
das
jecxz
mov
xor
je
and
cmp
int
insb
push
ds
inc
call
imul
jle
pop
mov
and
jo
add
fcmovnu
scas
nop
mov
xor
mov
fiadds
imul
jmp
aaa
insl
int
fldl
inc
test
scas
pop
pushf
jp
shll
enter
dec
dec
inc
add
sbb
vmread
inc
in
loope
fdivr
in
dec
roll
xor
ja
dec
sbb
pusha
scas
dec
pushl
or
jg
sub
test
pop
pop
fisubrs
into
adc
xor
test
pop
mov
sub
pop
cmp
scas
pop
je
mov
or
iret
push
sub
xchg
or
mov
fnstcw
cmp
pushl
xchg
sbb
cwtl
leave
test
es
mov
outsb
xlat
adc
loope
sarb
insb
cmc
add
mov
lahf
xor
repnz
and
into
mov
movsl
mov
flds
mov
adc
adc
jns
dec
mov
test
xchg
mov
jae
mov
ret
pop
mov
and
sbb
mull
sub
roll
xchg
push
lret
rcl
mov
mov
xchg
ss
pop
mov
pusha
mov
mov
movsb
or
lods
jne
jle
fistps
mov
mov
adc
add
adc
sbb
sub
mov
outsb
sbb
enter
popf
pop
call
icebp
in
cmc
shll
jg
mov
fsts
add
jns
scas
incb
mov
xor
or
sti
or
loope
or
jno
idivl
adc
cmc
gs
and
pop
addl
bound
xchg
int
lods
inc
jge
es
daa
mov
ljmp
test
add
icebp
lock
jae
cld
jg
jp
pushf
jg
xchg
sbb
adc
mov
daa
fsub
xor
mov
les
cmp
enter
inc
dec
imul
fidivrs
sti
out
add
pushf
stos
dec
inc
lock
mov
push
dec
cs
adc
and
xlat
xor
pop
mov
push
repz
arpl
ljmp
imul
gs
mov
jno
into
pop
sbb
jle
add
sub
xchg
sub
sub
in
xchg
xor
mov
sti
dec
xchg
fisubrl
mov
or
imul
fnclex
dec
lret
xor
mov
out
mov
xor
jmp
jns
mov
fsub
mov
movsb
stc
pop
mov
sti
mov
cmpl
lods
jne
out
inc
in
jae
int
xchg
xor
mov
popf
push
lret
pop
test
add
popa
sub
std
out
or
sub
lods
call
inc
or
xor
out
outsb
xchg
fldt
imul
mov
mov
cmpsl
push
xor
cmp
mov
mov
rol
out
push
cmp
and
add
pop
mov
push
insl
inc
in
repz
and
jp
les
dec
sbb
mov
pushf
into
adc
dec
lods
push
pushw
sbb
mov
ds
and
pop
js
or
add
outsb
and
je
cmc
out
or
in
mov
ds
dec
out
aad
lods
movsb
sub
or
js
aas
xchg
xchg
cmc
add
sarl
pop
adc
clc
cmp
cs
jecxz
ljmp
inc
imul
pushf
and
pop
les
fnsave
sbb
sbb
cmp
lods
mov
dec
mov
movsl
fs
mov
loope
cmp
fidivrl
pop
or
ss
add
dec
jns
out
ss
jle
cli
fs
push
inc
and
xchg
and
xchg
fwait
gs
push
or
pop
and
loope
pop
jle
daa
and
mov
hlt
mov
arpl
inc
ret
xor
lret
mov
dec
xchg
jbe
cmp
xchg
mov
jmp
mov
xor
pop
decb
loop
out
out
lcall
rorl
jle
clc
xchg
lods
pusha
es
or
aas
fwait
mov
imul
in
imul
xchg
sbb
cwtl
mov
jbe
inc
out
mov
inc
or
or
and
pop
jno
jp
std
fs
jle
push
mov
sub
xchg
cmp
xchg
mov
sbb
sbb
adc
xor
rcr
not
mov
or
fdivrs
adc
in
cmp
or
jp
sbb
sbbl
xchg
sbb
mov
std
in
sub
jae
sbb
mov
loope
mov
mov
idivl
sub
dec
test
jae
fstpt
mov
xchg
add
dec
xchg
add
pushf
push
pop
jle
jae
xor
pop
repnz
dec
les
loopne
push
add
lret
pop
out
arpl
sti
je
or
or
push
jmp
les
jg
xorl
mov
pushf
push
and
jno
or
or
les
add
inc
es
in
out
cmc
test
add
pop
push
mov
or
repz
pop
push
int3
pop
push
repnz
push
movsb
and
or
cli
enter
jecxz
xlat
adc
imull
data16
mov
fs
stc
fwait
and
ret
in
mov
and
andl
cld
mov
mov
pop
mov
jp
rorl
push
xchg
in
int
xchg
loope
lock
jbe
pusha
fwait
adc
xlat
fistpll
fildl
leave
in
fldln2
mov
lds
jecxz
sbb
fwait
arpl
out
inc
pop
dec
push
frstor
dec
fbld
leave
sub
mov
stc
push
push
popa
cmc
imul
dec
es
sub
inc
xor
jg
lods
and
adc
adc
inc
jbe
pop
adcb
mov
fdivr
rcll
aaa
clc
jnp
and
gs
sub
cmp
sbb
cwtl
xor
stc
sub
pop
imul
jae
mov
adc
xchg
adcl
jl
mov
ja
outsb
testl
cmp
or
sub
xor
mov
jge
and
ret
xchg
xor
inc
ret
cmp
inc
push
int3
inc
or
mov
scas
mov
push
imul
ljmp
cmpsl
movsb
xchg
shl
bound
add
pop
sahf
jno
addr16
gs
into
add
adcl
or
or
shlb
mov
testb
lcall
xchg
sub
pop
pop
test
call
in
movsl
xlat
add
or
loope
int
fists
jle
shrl
and
sub
movsl
arpl
std
cmp
cmp
mov
push
lods
pushf
test
inc
rcrb
mov
out
sbb
sbb
pop
mov
xchg
addr16
sub
inc
add
and
data16
in
movsb
scas
dec
push
xlat
or
js
out
repz
mov
jb
cmp
test
xchg
loopne
js
shrl
mov
outsl
push
aad
jle
adc
fwait
sbb
mov
inc
mov
pop
das
mov
lods
sub
insl
xchg
cmp
push
cmp
cmpsb
sbb
jp
mov
inc
pop
adc
jge
sarb
inc
rcrb
imul
cvtpi2ps
ds
inc
jb
mov
fisttps
fnstsw
dec
adc
inc
dec
je
sbb
mov
into
test
lock
sbb
fisubs
stos
test
push
cmp
push
cmpb
shrb
subb
mov
push
pusha
mov
push
push
es
test
push
sub
jl
push
adc
pop
mov
inc
popa
in
lea
daa
repnz
in
outsb
fidivs
pop
jmp
and
xchg
adc
into
jg
ret
adc
mov
inc
jb
adc
aaa
hlt
pop
lods
pop
xlat
sub
mov
aad
arpl
and
push
outsb
lock
push
dec
pusha
ss
mov
mov
dec
cmp
inc
call
cmpsl
call
or
inc
shrb
insb
xchg
cmp
es
nop
mov
mov
xchg
inc
mov
xlat
inc
outsl
adc
into
xor
aas
les
push
int
bound
es
pusha
push
mov
xchg
inc
add
cmpl
sbb
outsb
arpl
divb
outsl
adc
jge
push
cs
jge
dec
mov
push
and
pop
in
xor
cmp
push
mov
adc
jae
cmpsl
cmpl
mov
daa
mov
mov
mov
andl
roll
sub
int
outsb
shlb
lods
pop
fstl
adc
fcmovu
push
es
addb
jl
inc
sbb
cmp
pop
adc
mov
jmp
dec
test
repnz
dec
push
xor
imul
ds
sbb
mov
int
enter
or
sub
pusha
imull
jmp
repz
scas
pop
push
jae
sub
push
mov
mov
cmp
mov
iret
sbb
mov
dec
sti
pop
sub
idivb
sbb
out
mov
fstps
std
shll
add
cmc
scas
lods
and
js
pop
into
nop
push
pop
xchg
jp
mov
sub
xchg
sahf
xchg
push
mov
cmp
in
lods
mov
xorb
inc
mov
cmp
sbb
loope
out
push
mov
aas
xchg
and
push
push
insl
and
or
jp
inc
fdivrl
push
rclb
cs
jmp
pop
inc
mov
popa
xchg
push
hlt
orl
movsb
jmp
dec
xor
xlat
dec
insl
repnz
or
or
scas
int
test
out
sarl
jge
sbb
push
dec
ds
pop
jnp
test
cmp
pusha
jmp
sub
pop
xor
dec
adc
inc
push
sbb
mov
dec
push
addl
xchg
and
repnz
addl
movsl
data16
lods
stos
inc
rcll
movsl
in
cmp
ljmp
jg
xor
jnp
or
fisubrs
cmp
jbe
rcll
in
pop
lea
mov
and
lret
loop
jmp
mov
inc
andb
cld
rcrl
in
iret
xchg
cltd
test
subl
leave
fistps
repnz
jg
gs
out
idivl
xor
adc
add
jmp
mov
das
into
xchg
inc
sahf
mov
jmp
mov
xor
mov
jb
and
ja
cwtl
data16
imul
jb
in
mov
pusha
and
xchg
sub
orl
mov
pusha
popa
add
call
adc
repnz
sub
mov
inc
test
pushf
xchg
add
mov
mov
jecxz
mov
mov
xlat
fistps
mov
test
and
and
pusha
loop
stc
bound
mov
clc
int
js
cwtl
inc
cmp
stc
fstpl
sub
shl
cmp
pusha
and
mov
shll
add
dec
data16
je
aas
dec
xchg
xchg
mov
pop
rcr
sub
aam
cmp
out
xor
pop
jae
inc
dec
sbb
popa
inc
shrb
in
pop
sub
or
mov
xorl
aam
xchg
jge
incl
pop
jnp
push
outsb
repnz
ss
jecxz
test
aad
mov
movlps
add
scas
dec
adc
jp
in
and
push
cwtl
mulb
psraw
lods
int
xchg
mov
jns
jo
xchg
lahf
je
dec
jl
cmpsl
jo
aad
sub
mov
add
xchg
mov
mov
loopne
js
pop
jne
xor
pusha
dec
cmp
sbb
popf
mov
sbb
dec
outsl
xchg
mov
dec
mov
pop
cwtl
addr16
adcb
jle
es
or
cli
pushl
cmp
stos
dec
or
nop
pop
mov
in
lret
sub
jle
jmp
mov
and
mov
out
stc
adcb
cs
sub
pop
inc
ficompl
fisttpll
mov
addr16
cmp
xchg
cs
int
into
nop
jl
jnp
loop
fdivrp
and
insb
addr16
test
push
pop
daa
out
xchg
sbb
ret
and
push
stos
pusha
push
addl
push
and
xor
fstps
lret
jp
clc
pop
push
sbb
xor
cli
xor
sub
rorb
notb
pop
jp
std
out
xchg
fwait
out
push
jne
fdivs
cmp
mov
inc
mov
xor
lret
andl
aas
leave
popa
push
sub
push
inc
jae
loope
lret
inc
clc
mov
add
sbb
adc
jmp
xlat
sub
xor
rsqrtps
outsl
stc
dec
adc
sub
mov
sbb
mov
xchg
sti
mov
mov
ljmp
mov
jae
gs
cmc
sbb
xor
xchg
mov
ja
add
iret
int3
cli
nop
inc
loopne
test
xlat
out
mov
insl
sub
stos
clc
mov
in
aas
pop
mov
loopne
lcall
pop
test
insl
sub
std
jb
movq
mov
xorb
push
aad
mov
sbb
add
or
aad
insb
sub
loope
cmpl
pop
addr16
aam
lret
sbb
mov
lea
cli
out
testb
mov
cli
cmc
and
aas
sub
mov
out
mov
shlb
repz
pop
or
mov
cmpsl
out
push
mov
dec
scas
hlt
inc
mov
fsubr
jae
push
fsubl
sub
mov
cmc
pushf
mov
and
lods
mov
mov
cltd
loopne
pusha
lahf
icebp
adc
mov
lds
scas
add
insb
sahf
leave
sbbb
cmp
or
das
mov
mov
inc
dec
in
faddl
sbb
jmp
add
mov
dec
bound
adc
pop
int
push
pop
xchg
repnz
cmpsb
xorl
inc
cmc
popa
outsb
cli
and
std
dec
push
sbb
pop
and
inc
add
mov
adc
ret
rcl
jns
cmpsl
mov
and
daa
xchg
sbb
scas
and
aad
js
mov
jno
scas
jp
dec
lcall
mov
push
scas
mov
outsl
fcmovnu
dec
in
adc
inc
mov
not
mov
push
pop
fcompl
std
inc
out
add
mov
mov
pop
add
adc
ljmp
fists
or
fsts
loope
faddl
scas
mov
lea
cli
iret
rclb
xchg
adc
jb
xbegin
jle
mov
xchg
jno
das
jle
aas
cmp
das
cmp
popf
lret
pop
jne
shll
fisttpll
fwait
mov
mov
push
xlat
shl
adcb
call
mov
mov
dec
cmp
fcmove
sub
or
sub
es
fucomip
xchg
or
mov
ret
mov
loop
bnd
in
jge
adc
dec
jp
lods
pop
sarl
mov
out
jl
test
aaa
fcmovnb
test
add
repz
or
sbb
dec
sbb
outsb
cmc
cmp
add
push
pop
adcb
or
mov
xor
jp
lcall
stos
pop
mull
push
xorl
lods
ror
inc
xlat
cmp
cmpsl
mov
sbb
adc
mov
and
scas
xor
pop
ficompl
mov
and
mov
lea
ja
fwait
cmp
stc
shrl
xchg
cmc
lcall
mov
inc
jl
push
bound
mull
loopne
jmpw
jl
mov
sbb
or
in
xchg
sub
arpl
aam
cld
out
test
xor
in
and
sbb
xor
jmp
fwait
mov
xorl
decl
inc
cmp
dec
sbb
repz
xor
dec
nop
aad
or
leave
mov
leave
pop
bound
add
push
std
lds
in
sahf
in
mov
cmpsl
jae
inc
std
outsb
and
daa
xor
mov
lods
mov
out
xchg
popf
outsl
xor
out
insb
xlat
clc
add
imul
out
pop
ret
sub
cmp
lcall
adc
pop
cmc
aad
xchg
enter
sub
shll
inc
lcall
mov
icebp
fdivrs
repnz
and
mov
test
xchg
jmp
pop
cmpl
sub
sahf
xlat
cwtl
in
and
xchg
pop
repz
cmpsl
mov
inc
repz
mov
or
jae
or
push
mov
jb
jbe
cmp
mov
xor
dec
movsb
push
inc
cmp
dec
add
ja
inc
loope
xchg
cmp
and
inc
dec
jno
mov
out
xchg
movsl
imul
cli
repnz
cwtl
or
add
pushf
cmpsb
sbb
rolb
std
sub
stos
loope
mov
out
push
loope
jns
sbb
xchg
xchg
xchg
mov
cmp
scas
inc
les
adc
ret
pop
push
cli
xchg
mov
nop
mov
out
je
aaa
movsl
and
pop
xor
gs
das
xchg
lahf
inc
lods
mov
insb
mov
insl
imul
jno
sub
and
hlt
cmp
xchg
pop
or
sbb
sub
cmp
jbe
clc
aad
xchg
sti
mov
dec
mov
ljmp
pushf
ljmp
xor
scas
dec
out
scas
mov
sub
xchg
aam
add
xlat
mov
or
xchg
iret
movsl
outsw
xchg
outsl
sbb
lds
and
jge
sbb
fldl
mov
loopne
push
cld
js
mov
adc
das
mov
popf
pop
int3
inc
out
lods
cli
and
repnz
add
mov
push
xor
movb
xor
es
add
xor
cmp
int3
or
call
add
bsf
or
mov
aas
ja
sub
add
rorb
in
inc
fmull
idivb
stos
das
cli
jne
mov
mov
xchg
and
dec
mov
in
fs
fdivrs
and
shll
add
dec
jae
pop
int3
inc
pop
dec
sub
repnz
xchg
mov
mov
stos
or
cs
lock
xor
jno
pop
cltd
and
pusha
lcall
pop
sbb
stc
lahf
pusha
jge
or
jns
mov
jne
or
mov
xor
out
lret
xchg
push
push
ss
sub
mov
jecxz
ja
out
mov
jmp
pop
int3
call
prefetch
or
jae
enter
mov
fs
xor
push
sub
lds
push
xchg
xchg
dec
lahf
sbb
scas
stos
cmp
out
dec
pop
and
popf
cmp
bnd
pusha
push
xor
popa
jae
shlb
pop
ret
fcompl
xchg
inc
outsl
add
sbb
in
sub
fmulp
jmp
pop
fwait
add
jmp
clc
cmp
andl
mov
push
push
adcl
out
imul
js
cmp
lea
insl
push
xor
movsb
sbb
test
or
int3
mov
mov
jnp
jno
int3
leave
test
repz
iret
pop
pop
push
mov
adc
loope
loop
imulb
or
mov
cmpb
jns
test
cmpsl
or
sbb
iret
adc
jle,pt
add
fildll
testb
mov
pop
mov
out
xor
stos
ret
scas
out
or
jne
movsl
movb
pop
imul
inc
hlt
inc
jnp
ja
xchg
pop
xlat
pop
popf
ljmp
mov
stos
popf
call
aas
or
inc
mov
shrl
lret
int
cltd
sti
sbb
iret
mov
aad
fistps
push
and
inc
dec
push
mov
sbb
dec
pop
das
addr16
in
mov
test
push
add
xchg
cmp
push
xchg
mov
add
push
fs
xchg
popa
push
push
adc
pop
ja
cli
out
mov
jl
cmp
jns
and
xor
inc
loop
adc
xlat
sti
dec
xor
leave
jnp
adc
cmp
push
jae
int3
ret
int
loopne
scas
jne
lea
ficoms
and
gs
pop
daa
out
inc
push
dec
mov
mov
mov
fisttpl
adc
jns
addr16
mov
pop
fnsave
adc
stos
or
xor
mov
add
stos
ds
push
mov
jno
cmp
lret
jae
xor
jb
push
push
or
jbe
fwait
and
and
sbb
add
jb
scas
sub
inc
dec
imul
sti
push
shlb
ret
cmpsl
into
icebp
mov
dec
fcomps
jne
and
mov
mov
test
xchg
int
xor
insb
popa
add
filds
jb
jmp
in
push
dec
jo
push
gs
cmp
cmp
add
repz
mov
addl
jecxz
cmpsl
sbb
cmp
ja
das
daa
pop
cmc
adc
js
sbb
mov
sbb
mov
add
aam
lea
sub
je
fcompl
not
or
hlt
cld
cli
outsb
js
lods
fwait
ret
scas
mov
hlt
cmc
jl
popa
mov
mov
mov
ret
repz
das
movsl
rolb
fstpt
sub
addr16
hlt
jo
push
mov
mov
lea
fs
repz
or
int3
shrl
jge
inc
push
cmc
fistpll
cmp
cltd
mov
add
rcr
aaa
or
xorl
cli
divl
std
fmul
test
xor
mov
push
xor
mov
mov
in
push
stos
stc
shl
add
stc
bound
dec
out
cltd
and
jmp
add
lods
cmp
cmpsl
cmp
add
inc
scas
stos
inc
push
std
push
cmpsb
xchg
mov
cs
mov
mov
cli
dec
sub
jl
fsubrl
xor
pop
jp
lods
cmp
in
rorb
dec
adc
icebp
aam
mov
pop
std
call
mov
idivl
inc
xchg
sub
inc
addb
xchg
mov
sbb
dec
icebp
push
mov
mov
imul
int
lret
sub
imul
adc
push
sahf
test
movsb
shlb
fs
pushf
stc
mov
push
loopne
in
pop
out
test
call
dec
gs
pop
inc
mov
pop
jns
incb
push
or
mov
sahf
inc
scas
adc
jmp
mov
xchg
bound
in
dec
pop
out
sbb
adc
add
push
movsl
inc
sub
push
shll
fsts
bound
xor
xchg
mov
jmp
arpl
cmp
negl
jp
addr16
cld
inc
or
int
pop
and
mov
test
gs
out
ja
inc
add
xchg
fs
or
insl
xchg
int
sub
cmp
aaa
and
or
pop
mov
sbb
pushf
fstpl
ret
add
adc
cmp
ret
xchg
add
shll
stos
testl
in
lret
inc
or
add
js
js
insl
ljmp
mov
dec
gs
dec
adc
push
dec
xchg
sbbl
push
cld
pop
lahf
push
ds
lds
fs
bound
xchg
adc
mov
adc
mov
fstpl
addl
jmp
in
sarl
add
add
arpl
jecxz
jge
xor
or
sub
add
lods
test
jmp
mov
xor
mov
mov
lods
jg
jg
test
pop
test
clc
add
xchg
xchg
or
xchg
jle
gs
xchg
shl
pop
aam
mov
lret
out
prefetch
mov
mov
hlt
pop
into
jp
sbb
test
js
lret
mov
sub
dec
mov
ss
std
xchg
sarb
dec
sub
icebp
shll
jno
rcrb
mov
xor
and
adcb
dec
je
mov
xchg
or
lds
cmpl
add
inc
push
mov
jo
inc
xchg
mov
add
inc
adc
stos
das
cmp
fnstcw
inc
add
lock
stc
cs
pop
loope
xor
scas
pop
lds
lahf
test
les
adc
dec
add
jbe
push
pop
mov
or
testb
push
cmpsl
insl
int3
mov
inc
iret
andl
sbb
leave
pop
xor
icebp
xchg
push
sub
fcmovbe
pop
out
int3
inc
pop
push
ficomps
mov
inc
xchg
xchg
or
jmp
sarb
or
adc
in
out
push
pusha
imulb
testb
mov
vcomiss
pop
adc
popl
ds
mov
into
mov
or
stc
jp
mov
adc
xchg
xchg
xchg
movsb
movsb
mov
test
and
movsb
mov
jne
xchg
mov
lahf
adc
test
jmp
mov
mov
pushf
inc
sarl
or
mov
and
cli
aad
pop
xchg
aad
mov
and
lret
mov
xchg
xorl
rcll
jg
shl
pusha
cmp
sahf
leave
aam
or
insl
xchg
inc
push
adc
push
rcr
add
dec
jle,pt
xor
nop
addr16
pop
pop
lcall
jmp
push
lds
popf
fs
cmc
jns
pop
aaa
cmp
jl
shll
aaa
adc
jg
xorb
inc
jb
cmc
imul
repnz
cmp
mov
jge
jbe
jmp
dec
mov
scas
aaa
jnp
xchg
aad
pop
cmp
jo
push
mull
addr16
loope
pop
xchg
movsb
js
inc
mov
dec
sub
dec
add
arpl
lods
mov
adc
inc
inc
lcall
pop
mov
rcrl
hlt
sub
jbe
pop
insb
in
jbe
outsb
fdivs
dec
mov
jne
mov
mov
mov
jl
jle
sarb
shlb
add
popf
andb
ljmp
negl
push
arpl
mov
add
xor
pop
stc
insb
stos
inc
and
mov
xor
add
in
xchg
in
xor
push
decw
negl
or
add
jl
push
loopne
fsubrs
cmp
adc
loop
call
out
arpl
test
cmpsb
add
cwtl
cs
pop
inc
in
stc
shrl
and
mov
scas
mov
fucomi
pop
or
aam
test
out
dec
adc
divb
ja
aaa
leave
repnz
mov
jne
shll
xor
mov
stc
jmp
xchg
ss
std
xchg
xchg
push
pop
jp
fbld
hlt
in
mov
mov
mov
jg
and
je
xchg
fwait
sub
mov
cli
dec
cmc
mov
addr16
inc
fwait
arpl
cmp
push
sub
imul
repnz
jg
xchg
icebp
xchg
loopne
daa
fsubrl
xor
fidivrs
cmpsb
lds
inc
jl
popf
jns,pt
mov
nop
mov
cwtl
mov
xchg
addr16
int
cld
cmp
and
xchg
jae
mov
xchg
jo
push
mov
pop
mov
loop
shll
pop
or
cltd
jecxz
loop
jbe
or
nop
inc
in
push
mov
add
xor
and
xor
adc
mov
push
inc
push
push
mov
inc
fwait
xor
jmp
jno
sub
dec
stos
inc
or
mov
in
dec
mov
sbb
push
push
xor
hlt
addr16
lcall
mov
push
lods
pushl
add
loop
fidivrl
and
pminub
adc
data16
ss
jno
add
pop
and
and
js
ljmp
loop
jle
mov
ret
mov
jne
mov
stos
adc
lret
sti
sub
test
mov
mov
stos
xchg
push
std
pop
xor
jo
adc
nop
shlb
cmp
lcall
mov
sbb
push
fmul
lret
push
adc
inc
xor
jle
ljmp
sarb
das
and
popf
rcr
and
int
push
cmp
popf
lods
hlt
sbb
mov
lcall
xchg
mov
enter
sub
je
lret
repnz
mov
insl
sbb
insb
test
out
mov
bnd
lahf
xor
fcompp
pop
xor
and
aaa
and
mov
inc
mov
out
add
dec
mov
cli
mov
or
pop
ffreep
cmp
insb
in
xchg
and
jmp
mov
and
imul
or
lcall
scas
mov
xchg
js
jo
dec
frstor
and
mov
push
stos
push
and
and
pop
call
jmp
arpl
out
loope
hlt
jo
insl
shlb
into
imul
jmp
dec
fidivrs
test
sti
stos
call
es
gs
outsl
mov
mov
push
bound
mov
push
out
test
mov
rcrb
dec
or
int3
stc
shlb
or
cmc
idivl
arpl
cmp
mov
push
jmp
and
cli
dec
push
cmp
mov
or
mov
mov
cmc
sbb
shll
mov
pop
clc
ljmp
or
rcll
dec
sahf
fxch
das
jmp
ss
outsb
insl
sbb
mov
pop
lcall
push
arpl
test
mov
push
and
inc
mov
xorl
mov
mov
int
sub
sub
mov
lods
icebp
aam
hlt
adc
adc
movsl
ret
mov
mov
pop
movsb
scas
int
in
insb
sbb
lret
add
arpl
cmpl
adc
das
mov
xchg
cli
movsl
push
xor
mov
and
xor
stos
test
push
mov
test
pop
insb
jo
loopne
lods
popa
out
mov
imul
ret
cmpsl
xor
and
inc
pop
or
data16
clc
imul
push
inc
out
mov
push
mov
jbe
jmp
adc
enter
inc
mov
xchg
push
mov
inc
mov
xchg
idivl
inc
xor
jg
popa
cmc
mov
add
add
rorb
sahf
test
fisubs
repnz
or
les
push
cwtl
gs
add
xor
dec
ret
pop
or
int3
fld
push
cmp
push
jnp
sbb
xchg
push
pop
xchg
orl
push
dec
pop
pusha
adc
popa
pop
aas
and
inc
sbb
mov
jmp
pop
cmp
cmp
ss
shlb
or
push
mov
scas
jmp
add
pop
fcmovb
push
in
fwait
lods
movsb
popf
push
movl
pop
mov
rorb
pop
popf
insb
ret
cwtl
push
inc
sub
leave
sub
xchg
pop
mov
adc
mov
xchg
mov
and
sbbl
push
roll
movsb
jne
inc
je
out
sub
rolb
jae
mov
cmpsl
jnp
dec
mov
pop
cmp
flds
add
jns
sbbl
imul
fs
sti
cmpsb
or
dec
shlb
sub
and
jne
push
leave
gs
dec
adc
lea
mov
js
sbb
pusha
das
mov
lea
fists
mov
jbe
repnz
cmpsl
jecxz
sub
int3
ljmp
mov
scas
sbb
stos
mov
mov
int3
mov
push
dec
pop
pusha
xchg
rorl
xor
shr
gs
into
test
inc
loope
inc
jbe
mov
fcmovnb
or
cmpsl
xor
sub
xor
mov
in
clc
in
mov
cmp
mov
fiadds
and
mov
pop
pushf
mov
inc
inc
shlb
jmp
fcomip
pop
pop
jle
or
sbbl
add
sub
aam
filds
loop
pop
push
xchg
ret
ds
pop
sbb
nop
ljmp
js
cmc
rorl
fstp
jne
jp
add
jo
jb
and
push
jbe
int
cld
adc
in
cltd
and
adc
popa
aad
mov
mov
iret
mov
out
shl
pop
mov
pop
mov
inc
pop
imul
sti
cmc
pop
aad
repnz
scas
pusha
xor
sbb
js
scas
cld
jno
fnsave
jns
cli
xor
sbb
inc
int
sahf
push
lods
popa
int
cmp
ret
mov
jl
pop
loopne
fstl
jl
test
jns
mov
mov
sub
and
insb
dec
mov
cmpsb
and
pop
xorb
mov
lock
dec
add
xchg
xchg
sbb
mov
cltd
adc
into
inc
adc
daa
mov
dec
push
lods
add
cmc
pop
int3
in
jne
jns
add
xchg
mov
stc
ja
mov
lock
arpl
nop
and
jne
inc
rep
add
loope
insb
out
pushf
popl
gs
adc
push
cmp
mov
inc
les
mov
xchg
loope
shrb
mov
cmp
pop
psllw
es
jg
xchg
add
iret
sbb
adc
xchg
pop
shl
cmp
sahf
std
ss
push
jecxz
mov
fsubs
mov
inc
lret
add
inc
addl
cmp
pop
jne
xchg
pop
mov
jae
mov
hlt
int3
sbb
loop
xchg
es
mov
mulb
clc
pop
mov
outsl
dec
aad
dec
push
iret
icebp
inc
pusha
dec
sbb
xchg
gs
xorb
pop
adc
lret
insb
outsl
jns
outsb
mov
into
mov
push
cmp
aad
aas
mov
imul
aas
loope
mov
xlat
pop
movsl
add
adc
fmull
fwait
mov
or
push
cs
sub
adc
test
punpckhwd
test
mov
mov
cmp
jo
adc
in
stos
push
or
popf
dec
or
dec
mov
jmp
clc
in
lock
jg
cli
xor
xlat
xchg
xchg
pop
lret
cmp
xor
in
xor
inc
adc
dec
jno
jns
and
mov
int
cmpsb
nop
test
mov
push
fisttpll
ja
mov
mov
test
xor
sbb
ljmp
inc
xchg
sbb
adc
pmuludq
dec
push
push
pop
dec
adc
enter
es
xchg
cmpsl
ljmp
fwait
cmp
mov
dec
aas
sbb
cltd
xchg
cmp
mov
push
cmpsb
jo
les
nop
jmp
sbb
pop
jns
cmp
cmp
cs
mov
data16
sbb
in
stos
cld
dec
dec
cmp
xchg
xor
mov
adc
pushf
loop
inc
inc
adc
add
les
call
enter
push
into
mov
push
cmp
aas
mov
push
in
cmp
inc
imul
sbbl
hlt
inc
sub
or
pop
or
in
lods
int3
outsl
and
sbb
and
mov
addb
out
aad
add
stos
jg
lods
lret
pop
pop
arpl
bound
lret
sub
js
mov
imulb
int
cld
jp
movsl
es
sbbl
movsb
bnd
test
imul
sub
dec
sbb
out
xor
pop
das
and
in
sbb
sub
fildll
fisubrl
pop
sub
cmpsb
inc
mov
or
fs
je
mov
lds
pop
push
shrb
mov
push
pop
push
fidivl
fwait
popa
jno
fwait
sub
jo
sub
cmp
mov
dec
imul
inc
outsb
push
pop
std
xor
int
dec
pop
mov
cld
dec
cmp
add
mov
push
sbb
rclb
adc
sub
mov
dec
jmp
andb
cmpb
cld
scas
pop
cmp
loope
std
outsb
into
and
dec
xchg
icebp
call
adc
pop
pop
push
sbb
das
or
std
pop
sub
popa
adc
mov
iret
mov
pushl
gs
mov
arpl
imul
dec
lret
xor
ficoms
adc
fs
outsl
ret
xchg
cmpsb
mov
jnp
mov
sub
jge
push
mov
xor
sub
and
nop
mov
inc
dec
lea
add
pusha
jb
and
les
pop
into
out
push
popa
or
cmp
xchg
pop
fmuls
xchg
cmp
out
jnp
ss
push
cmpsl
mov
jp
test
add
sub
fs
stos
scas
push
and
mov
or
sbb
fwait
jecxz
cmp
cs
mov
cltd
dec
inc
push
lds
pop
adc
aad
push
or
es
cmpl
mov
fcoms
in
jbe
test
cltd
mov
push
adc
push
js
les
hlt
int3
mov
mov
out
bound
div
add
lret
sarl
and
fldenv
jmp
testl
jmp
and
sbb
gs
mov
rol
iret
es
fcmove
pop
and
push
sbbb
fcmovu
add
push
push
jo
ljmp
fs
sub
incl
cmpsl
repz
call
aaa
cltd
pop
mov
xor
iret
addl
push
push
xchg
push
out
add
scas
push
int3
pop
jno
lods
or
test
xlat
clc
jge
or
movsl
and
and
int3
mov
popf
insb
daa
sbb
xchg
jmp
js
out
outsl
loop
fsubrs
je
int
pop
jo
xlat
pop
cmpsl
and
inc
in
cli
repz
and
aas
mov
pop
dec
inc
pop
or
mov
ja
pop
mov
daa
jmp
stos
dec
inc
stos
xchg
lock
push
push
pop
jno
aam
mov
cwtl
push
mov
insl
movsl
sub
std
sbbl
outsl
shrl
jmp
dec
sub
movsb
inc
jle
aaa
cs
dec
pop
jg
jo
dec
call
mov
mov
out
dec
movsl
fldenv
sahf
xchg
ds
push
mov
pop
pop
push
jmp
jae
xchg
jns
push
jle
mov
xor
cmpsb
push
xor
inc
sahf
mov
cmpb
xor
cli
in
cltd
jmp
inc
movsb
adc
push
por
jmp
dec
adcl
aas
inc
sub
sub
and
mov
ja
inc
add
loopne
mov
jge
pushf
sub
xor
jo
sbb
scas
ja
mov
or
jns
into
int3
pop
iret
pop
rorb
jnp
out
adc
insb
xchg
pop
inc
pop
xlat
sub
fwait
mov
jl
test
rcl
scas
clc
pop
xchg
pop
dec
jle
add
sub
mov
cs
or
es
inc
or
je
adc
hlt
in
int
popf
xor
fsts
stc
popa
mov
outsl
dec
mov
cmp
or
push
sub
test
mov
inc
cmp
popl
lock
pop
adc
jecxz
mov
fnstenv
push
mov
daa
inc
lret
add
jb
andl
mov
cmp
adc
cmpsl
adc
adc
ja
jbe
rcll
sbb
fnsave
cltd
push
sti
dec
rorb
enter
syscall
les
cltd
or
cmp
js
mov
stos
xchg
les
loopne
insb
xchg
outsl
xor
mov
add
mov
inc
clc
hlt
or
and
mov
je
sbb
and
jbe
sub
loop
jl
push
negb
icebp
sbb
nop
and
subb
mov
pop
cmp
pop
add
inc
ret
sahf
jae
popa
xchg
mov
pop
pop
cmp
inc
inc
mov
inc
cmc
insl
push
mov
lahf
mov
xor
or
std
dec
dec
or
clc
xchg
scas
mov
popf
dec
adc
sti
sub
adc
rorl
jmp
xchg
inc
pop
pop
lret
mov
push
and
or
adc
sbb
mov
adc
jp
adc
out
mov
out
adc
enter
in
and
cwtl
add
movb
cmp
pop
push
sti
and
pushf
pusha
sbb
add
or
lret
xor
add
cmpsb
mov
mov
andb
insl
pusha
xor
fbld
fwait
and
and
stos
in
xchg
testl
lods
or
mov
and
jb
add
fsts
pop
jmp
stc
mov
jae
xchg
pop
cwtl
test
xchg
push
cwtl
cli
adc
jmp
repz
mov
out
pop
js
mov
pop
ss
clc
cwtd
jmp
sub
sub
sub
rcll
das
rorb
repz
lahf
or
fisttpl
mov
mov
push
nop
push
push
dec
rcll
aas
lds
outsb
clc
stos
cmp
push
cmpsb
add
jmp
aaa
loopne
jg
sub
in
loope
outsl
aas
loope
cmp
mov
mov
dec
push
push
sub
sub
outsb
lock
int
xor
mov
inc
cmp
into
add
test
rep
or
add
fwait
or
stc
repnz
dec
stc
mov
jle
clc
mov
xor
push
imul
nop
mov
mov
push
mov
out
fnstenv
pop
scas
mov
enter
pop
stc
sbb
sarb
pop
xor
imul
dec
popf
lret
ds
jne
fs
shll
ljmp
imul
push
pop
rcrl
push
jl
shlb
lret
mov
pop
cs
fidivrl
dec
cmp
sub
es
jl
movlps
mov
add
rcrl
aaa
icebp
dec
jno
pop
cwtl
lret
pop
mov
cmp
ret
inc
pop
push
loop
jmp
pop
mov
xchg
or
sub
xchg
adc
xchg
xchg
inc
push
cli
pop
pop
jno
xor
cmpsb
lods
dec
jle,pn
fmull
sub
dec
movsb
jp
inc
pop
push
ret
iret
inc
adc
mov
push
ss
fisttpll
jmp
iret
jbe
dec
pop
add
mov
dec
pop
push
pop
sahf
xor
aaa
add
xlat
scas
scas
mov
lods
rcll
repnz
xchg
aam
xchg
or
jmp
pop
push
hlt
nop
and
mov
mov
shlb
lods
stos
mov
cmpsb
sub
sub
add
lret
fs
sub
add
hlt
xchg
outsb
mov
stos
adc
lahf
repz
cmc
pop
mov
test
jecxz
or
jle
inc
xchg
lods
xchg
and
rolb
sub
test
xchg
push
and
int
insl
jb
movsl
xor
jb
push
repz
call
pop
cmp
cwtl
push
push
daa
push
loopne
jo
scas
ret
xchg
out
cwtl
lods
and
in
push
out
idivl
in
jns
xchg
xor
and
cmpsb
pop
andl
iret
mov
dec
frstor
or
ret
bound
icebp
std
aad
lcall
xchg
mov
hlt
out
insl
popa
ret
mov
add
popf
sbb
mov
adc
call
xchg
jmp
xchg
lcall
xor
adc
test
nop
or
push
sub
mov
test
faddl
cltd
sub
rclb
imul
mov
or
rdmsr
push
push
mov
mov
add
in
nop
popf
add
daa
pop
push
lahf
sbb
push
imul
mov
dec
adcl
loopne
cltd
ficoml
jae
movsb
movsl
std
push
xchg
sahf
cld
mov
jge
sub
idivb
int
lret
lods
es
mov
ljmp
iret
sarl
adc
sahf
xchg
adc
jge
cmp
popf
imul
out
fbld
scas
inc
xchg
mov
cmp
test
popf
pop
dec
push
aad
call
mov
adc
xchg
and
push
loope
add
insb
lock
bound
cld
push
stos
test
mov
iret
push
jle
mov
test
mov
mov
push
rorb
inc
dec
mov
xchg
inc
push
andl
mov
jno
mov
mov
cwtl
arpl
push
mov
jne
pop
jle
cltd
cmpsl
sbb
or
pusha
sub
xorl
push
mov
xchg
and
aaa
dec
sub
inc
shll
dec
test
ja
adc
jno
call
adc
mov
insl
aas
xchg
outsb
std
or
jmp
insb
daa
jecxz
sbb
in
jbe
or
mov
imul
out
rclb
outsl
sub
cltd
out
pop
push
inc
mov
scas
pop
sub
scas
cmpsl
int
dec
jle
mov
das
fwait
and
sahf
mov
jge
and
gs
insl
nop
int
addr16
dec
jecxz
das
sub
nop
sbb
xchg
sub
cltd
pop
jecxz
xlat
aas
imul
add
inc
mov
add
outsb
stc
cmp
or
jbe
into
lods
std
lds
xchg
inc
xchg
pop
inc
xor
out
cs
sub
out
and
sahf
xor
mov
daa
aaa
pop
dec
stos
mov
sub
loop
and
leave
insb
ret
push
pop
pop
outsb
insb
xor
pop
jg
lahf
push
inc
jmp
jg
out
mov
das
sbb
pop
repz
jg
and
xchg
xor
push
dec
gs
pusha
daa
addl
add
fs
clc
xchg
lcall
sbb
lds
mov
xor
imul
sbb
imul
fcmove
inc
inc
sbb
or
jmp
pop
add
mov
dec
int3
mov
lcall
jmp
call
xchg
sti
divb
imul
xor
ds
in
jo
lahf
push
push
rolb
mov
loope
ss
or
mov
out
fiaddl
push
in
sbb
fdivrs
in
jle
das
stos
push
mov
es
ffree
lea
xchg
jl
jb
call
jns
dec
insl
cld
int3
add
lahf
in
sahf
fisttpll
stos
pop
jnp
push
in
call
test
shl
push
out
fimull
xor
js
inc
lods
push
imul
xor
jecxz
call
ds
out
dec
or
mov
aaa
test
inc
gs
popa
mov
sbb
insb
int
mov
adc
pop
outsl
mov
test
pusha
mov
in
das
mov
jne
repnz
mov
fnstsw
mov
mull
scas
push
mov
jae
and
push
cmpsl
shlb
mov
lcall
call
xor
inc
movsb
dec
jae
jae
adc
sbb
daa
cmpsb
xlat
jo
jmp
xor
aam
fistl
xchg
inc
gs
push
outsb
push
xor
add
mov
addr16
dec
rcrb
mov
jo
dec
jecxz
dec
daa
pop
sub
sbb
jnp
in
jle
es
xchg
or
pop
fiadds
ljmp
ret
pop
dec
fisubrs
mov
faddl
mov
imul
jns
jae
adc
dec
fprem
aaa
xchg
repz
jb
fisttps
inc
push
movsl
or
and
sbb
add
push
cs
cld
mov
xchg
pop
adc
scas
fstl
jl
test
jl
in
mov
repz
popa
andb
push
pop
jne
cmp
sub
into
push
stos
les
sub
sbb
shrl
fdivr
aaa
xchg
pop
or
add
sub
and
cmp
testb
adc
comiss
nop
adcb
cli
adc
jae
popf
jg
or
sub
xorb
loope
jbe
sub
movsl
cwtl
sub
cmp
push
es
fdivl
dec
inc
mov
shl
int
add
sbb
cmp
popf
pop
jno
les
addr16
gs
jbe
xchg
imul
stos
jmp
aas
or
rcrl
sbb
test
jbe
mov
jb
mov
mov
cld
pop
xchg
pcmpeqd
mov
fdivrs
clc
dec
pop
cmp
orb
jecxz
sbb
xchg
jmp
subl
or
sahf
sbb
in
push
cmpsb
fcoml
push
mov
push
inc
lock
or
cmp
or
xchg
mov
lds
mov
and
push
cmp
and
sbb
lea
jmp
fisttpl
lods
xchg
lods
shll
mov
ret
ds
adc
je
mov
pop
and
int
mov
test
imul
mov
and
mov
stos
repz
call
xchg
popf
in
sti
aaa
xchg
nop
aam
push
and
jno
fsubrp
and
push
lock
jg
mov
or
movsl
clc
out
imul
mov
jecxz
pop
mov
outsl
fld
fidivrl
jo
stos
fs
cmpsl
jecxz
std
push
outsb
push
pop
js
pop
loope
adc
les
add
mov
cmc
into
repz
mov
lods
in
add
mov
sub
js
dec
xor
cmp
and
add
adc
inc
pop
sbb
inc
call
xor
iret
das
es
inc
fstpt
subl
add
pop
mov
mov
sti
stc
mov
lcall
insb
outsb
jl
mov
popf
xchg
lcall
and
pusha
ja
sbb
cld
rol
cmp
jg
jge
xchg
mov
mov
sbb
orl
repz
mov
xor
and
xchg
fwait
push
mov
and
adc
clc
sbb
or
and
pop
fwait
adc
mov
adc
hlt
fstl
loop
test
enter
pop
and
add
int
inc
mov
pop
fdivrl
sbb
ss
dec
leave
add
pop
ss
loopne
or
cmc
cmpsb
stos
icebp
fadds
push
push
dec
xchg
push
and
mov
mov
dec
add
or
lea
out
and
cltd
sti
test
divb
imul
scas
xchg
mov
mov
insl
push
cmc
push
mov
int3
sub
pushf
out
mov
adc
and
dec
adc
int
adc
in
fdivrl
add
push
ljmp
test
iret
loopne
dec
fsubs
out
dec
mov
leave
inc
sub
sbb
push
add
jmp
pop
lds
or
sahf
stc
test
insb
test
xchg
xor
call
mov
mov
mov
pop
xchg
popa
pop
fwait
cli
fs
cli
aam
sub
dec
xor
pop
adc
mov
xchg
push
aam
push
mov
inc
outsl
pop
cwtl
xor
enter
inc
subl
xlat
test
aam
fistps
cmp
popf
fstps
mov
jbe
xchg
adc
push
jbe
imul
mov
inc
incb
inc
add
inc
push
sbb
pushf
pop
test
cmp
lods
push
push
jno
sub
jmp
sbb
fdivs
mov
cmp
pop
mov
mov
sarl
pop
add
clc
mov
or
addb
mov
sbb
and
rorb
mov
and
ret
push
adc
add
xchg
sahf
adc
push
xor
add
pop
andb
ja
loop
mov
stos
scas
mov
incb
arpl
cld
dec
sahf
in
sbb
xchg
stc
fildll
lods
pop
xchg
sbb
sbb
xchg
and
test
xchg
jmp
popf
ja
mov
aam
out
popf
jne
mov
les
loopne
cmpsl
fimull
mov
fwait
loop
fisttpll
int3
cli
dec
stos
xchg
das
nop
or
mov
stc
inc
push
sbb
lret
call
and
je
int3
mov
loop
frstor
push
or
mov
std
or
cli
scas
inc
lods
out
jp
jae
rcl
rorl
enter
lods
mov
call
incl
addr16
cmp
mov
sbb
sahf
imul
pop
popa
movsl
div
xrelease
jmp
push
pop
hlt
sbb
mov
in
fbld
or
loope
and
mov
not
or
lods
test
mov
fmuls
roll
cmp
shlb
loope
gs
fbld
mov
loop
notl
jmp
mov
mov
push
out
push
std
mov
lcall
pop
add
rclb
pop
jmp
inc
dec
mov
shrb
or
xor
out
outsl
adc
cmpsl
mov
je
push
cwtl
add
repz
outsb
push
mov
lods
xor
xlat
lock
lret
stc
lea
xor
cmpsb
xchg
sar
push
ljmp
push
jae
mov
int
aam
and
push
fistl
sbb
daa
lea
push
add
imul
xchg
cltd
push
dec
inc
js
popf
inc
iret
mov
and
xorb
sbb
xlat
shll
popa
shll
xchg
sbb
aam
mov
in
xchg
icebp
dec
xor
and
sub
or
popf
push
pop
negl
pop
push
jmp
and
xor
sub
rorb
sbbl
arpl
repnz
sti
push
xchg
leave
pop
popf
pop
add
cmp
jae
adc
push
add
xorb
scas
repnz
or
iret
push
sbb
pop
in
push
add
movsl
gs
inc
gs
movl
test
push
adc
inc
push
push
push
xor
jno
xchg
fistps
int
mov
ds
mov
push
out
fsubp
cmp
push
and
and
cmpb
xchg
cs
out
stos
sbb
add
pop
cmp
mov
cmp
sbb
mov
imull
lahf
fsub
ret
xchg
and
jmp
jbe
push
shll
inc
and
ret
jecxz
test
les
sbb
test
sbb
pop
test
sti
mov
xchg
fwait
sub
push
cmp
mov
mov
sbb
rcrb
dec
mov
mov
je
repz
subb
setge
push
and
lods
mov
insl
mov
pop
xlat
out
sbb
pusha
xor
ffreep
mov
mov
cmp
in
pminub
in
cmpsl
sbb
and
in
push
fistpl
push
jns
inc
fisttpll
repz
das
pop
add
int3
cmp
jo
cld
mov
lcall
pop
mov
push
nop
fisttps
lret
insb
inc
int
fsts
loop
dec
inc
icebp
nop
mov
imul
mov
rorl
mov
int3
add
and
loope
out
jp
jge
jp
pop
cmp
call
push
xor
int
int3
and
xor
ljmp
mov
inc
cmp
std
jle
sarb
pop
cmp
ss
test
lea
and
aas
out
push
js
sub
inc
sub
xchg
sti
xchg
pop
sbb
lds
and
dec
adc
push
cli
pushf
lahf
or
jae
push
lahf
sub
cmp
lods
cmp
in
scas
cltd
pop
test
movsb
cmp
sub
inc
cmp
mov
out
inc
aad
jne
mov
nop
cmp
pop
imul
mov
lcall
mov
sbbb
fstps
or
jno
xorl
jg
out
orb
mov
fildl
out
jge
cwtl
add
push
mov
shll
push
xchg
jl
scas
fstpl
lock
add
jecxz
pop
aam
sbb
jmp
out
sbb
movsl
je
repz
loop
adc
in
sar
cmc
dec
lods
sbb
jae
xchg
cmp
stc
pop
fs
in
pop
andb
imul
sub
xor
push
sub
imul
push
in
les
lret
xchg
fs
loop
out
lock
outsl
hlt
dec
jbe
aas
es
decl
mov
cmp
xor
fimuls
mov
bound
pop
jl
mov
lds
das
negl
or
int
fstpt
cmp
jb
call
pop
fs
sbb
cltd
mov
ja
int
jbe
and
gs
inc
loop
adc
cmp
cmp
cmp
add
xor
hlt
sbb
pushf
xchg
clflush
cmp
cmpsl
xchg
cmp
shrl
sbb
fisubrl
mov
fidivs
ret
roll
sbb
shll
mov
sbb
add
fbstp
stos
rcrl
push
xor
out
jb
push
in
setns
test
pop
int
push
ffreep
pextrw
or
and
nop
sbb
xor
push
mov
xor
daa
aam
mov
cmp
push
js
push
pcmpeqw
lret
dec
pop
addl
jns
fdivs
sub
sub
jae
push
cmp
jne
jp
dec
jle
add
sarb
add
mov
lret
cmp
es
pop
repz
xor
push
or
mov
ret
mov
ja
push
inc
push
adc
push
mov
xor
nop
mov
cmpb
arpl
mov
lods
inc
test
push
imul
push
scas
rcll
dec
xor
jg
repnz
mov
sub
out
jae
lcall
adc
pop
arpl
mov
mov
inc
fstps
jnp
movhps
or
imul
xchg
push
in
push
sub
xor
imull
ret
ret
loope
jmp
movsl
jns
movsl
aam
inc
js
push
or
pop
jno
dec
pusha
mov
or
jne
mov
mov
ds
jp
sti
adc
popf
aad
add
lret
lods
mov
int
sub
lods
xchg
and
sub
cs
inc
pop
fmuls
xchg
inc
shrb
pop
icebp
in
test
iret
and
mov
test
mov
out
fldenv
insb
pop
mov
xor
icebp
loope
mov
out
adc
sbb
scas
jle
pop
jl
movsl
sbb
movsl
pop
xchg
ja
aas
cld
adc
inc
cmp
fnstenv
fcom
adc
ret
or
push
dec
xchg
push
jno
das
jae
fsts
fidivs
jnp,pn
ret
add
push
sbb
mov
loop
test
add
cmp
loopne
idiv
fistps
mov
int3
inc
push
decl
pop
daa
mov
xor
insb
rolb
dec
popa
test
scas
negl
xorb
outsb
dec
nop
and
mov
aaa
aam
dec
jb
in
ficoms
push
lds
pop
mov
push
sub
stc
mov
pushl
fdivrs
movsb
sbb
in
ss
inc
in
xor
mov
rorb
lods
outsl
js
in
mov
mov
pusha
sbb
cmpb
movl
int3
inc
leave
and
or
imul
mov
bound
dec
into
add
xchg
push
lret
dec
xchg
push
dec
cmp
dec
jb
xlat
imul
ja
std
mov
inc
scas
jnp
rorb
jne
scas
adc
je
pusha
jo
sbb
jae
ret
insb
inc
repz
jb
or
loope
xor
bound
mov
nop
push
scas
nop
pop
dec
cwtl
test
xchg
cwtl
jb
sub
into
add
pop
cmpsl
shll
pop
pop
mov
xchg
add
cmp
dec
add
dec
jbe
sub
insl
sti
xor
in
stos
pop
mov
jp
sub
scas
pop
rcr
das
cmp
fwait
ret
push
sbb
stos
cmp
push
out
ret
cld
roll
sub
stos
jno
mov
addr16
cmp
mov
lret
cmpsb
and
pop
xchg
in
or
cmpsb
xor
cmp
call
xor
in
or
xchg
jne
inc
out
or
jmp
push
and
or
sub
pushf
test
add
and
lea
jns
out
xchg
xor
mov
outsl
sbb
adc
mov
push
sti
mov
pop
test
sub
js
jmp
outsb
loopne
es
push
jl
mov
xchg
jno
int
fsubl
icebp
ds
adc
jnp
xchg
fnstenv
aaa
sahf
add
dec
out
xchg
add
push
dec
loope,pt
inc
dec
add
jecxz
std
cmpsb
sub
inc
sar
sub
repz
rcr
or
stc
xlat
dec
cmp
hlt
add
jae
lds
movsb
push
bound
daa
std
pop
aaa
fwait
sarl
je
pop
cmp
call
fdivl
add
xlat
lods
push
movsl
xchg
push
xchg
xor
cmpsb
pop
dec
pusha
xor
or
and
stc
cmp
les
les
gs
pop
movsl
pop
sbb
gs
mov
inc
insl
loopne
fidivs
mov
repnz
jo
fbld
mov
mov
xchg
mov
les
leave
clc
flds
add
sbb
sub
into
adc
int3
das
shll
stos
lock
clc
dec
push
sub
inc
pop
mov
pusha
dec
mov
cmc
adc
ret
mov
sub
fnstsw
lods
pop
into
mov
outsl
addr16
imul
push
or
outsb
sbb
or
cmpsb
sub
inc
jne
push
iret
fcoms
push
mov
call
inc
mov
movsl
dec
and
call
sbb
xchg
mov
xchg
scas
rclb
push
fdivl
jns
xchg
inc
mov
sub
daa
xchg
inc
mov
mov
insb
ljmp
movsb
dec
pop
mov
aam
hlt
stc
xlat
dec
adc
push
movsb
jnp
push
leave
xchg
insl
out
adc
sbb
test
mov
xchg
bound
push
mov
addl
or
lea
out
imul
test
arpl
xchg
insb
push
xchg
stos
dec
add
enter
mov
in
push
adc
and
inc
lret
mov
jmp
repnz
mov
jl
jo
lahf
xchg
sti
inc
repz
loope
call
pop
jae
sbb
sarl
mov
pop
xchg
adcb
pop
jns
sub
push
repnz
loope
sbb
scas
pushf
mov
push
ret
lods
cmpl
jge
jecxz
xor
lds
push
cmp
sbb
mov
scas
pop
imul
mov
fs
add
inc
cli
push
push
mov
sbb
stos
sbb
pop
and
and
mov
mov
mov
add
and
dec
subl
adc
mov
sahf
mov
lahf
into
xor
pop
mov
jbe
and
xchg
dec
fists
arpl
test
aam
or
rorb
sub
lea
cmp
sbb
xchg
adc
cmp
xchg
sbb
lret
and
stc
stos
xchg
ja
pop
fs
pop
xchg
jbe
mov
dec
js
pop
mov
repz
rclb
pop
mov
std
aas
push
sbb
in
push
cli
sbb
ja
pop
enter
mov
xor
xor
push
mov
repnz
fadds
insl
sbb
in
cltd
adc
jge
aam
in
mov
rcrb
pop
jmp
xchg
xchg
xchg
pusha
mov
dec
xor
ds
fnstcw
mov
jo
incb
pop
lds
test
aas
mov
je
out
adc
xor
divb
or
and
sbb
inc
adc
jle
test
hlt
addr16
adc
add
aaa
stos
andl
mov
add
cmpsl
aam
jmp
cwtl
or
mov
or
jg
lds
and
test
fdivl
lret
xchg
mov
fnstcw
jmp
inc
mov
adc
imul
pusha
mov
push
add
cmp
xchg
sub
mov
mov
and
subps
scas
mov
sbb
loop
arpl
fidivrs
dec
inc
jnp
imul
dec
mov
hlt
fwait
inc
daa
mov
adc
mov
adcb
stc
es
in
xorl
loop
in
jbe
std
rorb
sbb
addl
sub
call
sub
xchg
cmp
fsubrl
out
inc
jl
or
add
pop
outsb
and
pop
ja
jg
fdivrl
bound
jge
xchg
pop
cmp
and
lds
or
daa
mov
jnp
aas
sub
mov
inc
jne
iret
enter
test
loopne
and
jnp
sbb
pop
mov
jno
cmp
xor
fwait
rcrl
mov
xchg
es
out
mov
sbb
mov
jae
je
stc
das
pop
int3
pop
mov
and
arpl
push
outsb
cmpsb
and
shll
xchg
adc
clc
pop
mov
xchg
loope
adc
clc
pop
decl
movb
mov
and
push
jp
inc
js
icebp
mov
pop
insl
add
je
dec
pop
shlb
pushf
test
std
mov
stos
cmp
xchg
adc
fsubl
stos
cmpsb
add
icebp
push
pop
cmc
xor
mov
inc
dec
cmp
mov
es
aas
add
xchg
jbe
lds
mov
jae
lods
jge
adc
dec
movsl
js
in
dec
sbb
test
hlt
cmp
enter
fnstenv
adc
mov
lcall
fiadds
les
push
sahf
jecxz
insl
aaa
pop
sub
je
stc
cmc
shll
sti
xchg
dec
ja
scas
xchg
mov
arpl
push
cs
roll
pop
lea
pop
repz
lahf
bound
hlt
jne
movsl
outsl
mov
popa
add
mov
nop
test
rorl
lahf
xchg
or
xor
call
mov
aaa
outsl
add
shlb
cmp
adc
mov
testl
lcall
es
jge
ret
out
sbb
mov
mov
xor
pop
push
iret
or
ficomps
js
mov
xor
push
loope
les
adc
inc
js
inc
mov
sub
shrb
cli
lcall
add
xchg
mov
and
adc
loope
hlt
into
xchg
movsl
gs
and
rol
mov
loope
push
pop
mov
rcr
xchg
push
pusha
dec
out
mov
cwtl
dec
ficomps
rcrb
sub
lock
jns
outsl
out
out
mov
inc
pusha
stc
mov
adc
repnz
pop
sahf
add
or
jbe
add
in
cmc
or
mov
xlat
lea
mov
daa
jno,pt
jle
inc
repz
imul
mov
inc
adc
mov
adc
add
dec
adc
mov
push
xchg
jge
push
sahf
and
test
sbb
daa
sbb
jmp
fcoms
sbb
insb
call
mov
fnstenv
out
das
pop
stos
jmp
sub
popa
imul
pop
jge
dec
dec
lock
imul
cmpsb
das
cmp
sahf
fcomps
pop
out
clc
daa
dec
int
fwait
cmovl
lret
cmpsb
push
or
icebp
mov
enter
je
mov
cmp
int3
cltd
jmp
adc
sub
out
xor
jne,pt
fcmovb
arpl
cmpsb
aad
sbb
das
mov
sub
and
dec
and
into
dec
subb
movsb
mov
fldt
pop
jo
dec
in
ror
lahf
into
shrb
test
bound
test
in
add
mov
lret
or
mov
add
fucom
movsl
cmp
jb
sub
test
and
mov
or
idivb
repz
into
mov
cli
mov
aas
ret
sbb
cs
xor
or
nop
lods
pushf
sti
movsb
jmp
aaa
sbb
cmp
adcl
push
cmp
sbb
ret
fdivl
push
andb
push
gs
xor
in
push
cmp
cwtl
adc
lods
test
adc
out
dec
ror
cmp
les
jo
jl
repz
cmpsb
in
jl
or
mov
xchg
xchg
pusha
sbb
inc
pop
ss
inc
sahf
push
data16
mov
mov
adc
fldenv
loopne
pop
andb
lcall
and
sbb
inc
clc
pop
jbe
add
into
arpl
mov
pusha
xchg
outsb
cmp
jecxz
imul
inc
jno
in
cmpb
repz
xor
cmpsl
int3
push
aaa
lret
inc
jns
repz
xor
add
clc
aad
in
daa
xor
out
imul
inc
inc
rorb
xor
mov
shrb
dec
push
call
cltd
ffree
cmp
push
test
pop
adc
sbb
and
scas
sub
and
mull
push
jns
out
out
mov
dec
cmp
jns
sahf
mov
or
adc
mov
clc
pop
jge
jge
sbb
in
addb
ds
adc
mov
inc
jns
in
shlb
mov
adc
mov
hlt
stos
in
mov
mov
enter
pop
xorb
sub
fptan
test
daa
mov
int3
rcrb
add
lahf
mov
jmp
outsb
mov
mov
and
dec
lods
cmp
or
cmp
sbb
pop
lahf
ds
push
add
hlt
pop
cli
push
push
imul
bound
sahf
xchg
arpl
inc
adc
push
xor
and
cmpsb
shll
sbb
cmc
loop
std
cmp
jl
inc
es
loop
push
rcrl
lds
mov
xor
sbb
sbb
int3
cli
and
sbb
sub
sbb
inc
and
data16
out
frstor
or
xor
or
adc
jne
fimull
inc
repnz
cmpsb
inc
sahf
jecxz
xorb
cmp
or
or
and
cmp
pop
mov
loope
xchg
push
sbb
adc
mov
enter
das
in
inc
push
lods
popa
jg
aam
pop
add
lods
fisttps
je
imull
xor
rorb
fldl
faddl
xchg
xchg
rolb
cmc
jnp
dec
sbbl
dec
scas
ret
jmp
mov
xchg
shl
test
lock
lcall
stc
sbb
fnstenv
mov
cmp
mov
nop
dec
in
insl
aas
dec
mov
mov
and
xchg
aad
mov
fldt
test
int
aam
ds
fbld
pop
lret
pop
xchg
lods
push
xor
pushf
inc
rcll
in
in
nop
adc
sbb
in
cmp
sbb
pop
xchg
testb
popf
mov
inc
lahf
in
add
lret
push
in
movsl
jl
mov
in
inc
jmp
pop
loope
popa
out
clc
sbb
sub
jne
sbb
pop
lea
push
sub
mov
mov
iret
mov
aas
not
addr16
xor
cmp
ret
divl
shrl
dec
in
movsl
mov
mov
cs
aaa
cli
and
ds
std
inc
fs
in
jge
sbb
sti
cli
push
ret
or
stc
shll
lods
int
mov
xor
lret
mov
mov
add
xor
shrl
in
pop
repnz
add
pop
adc
or
invd
fucomi
sub
xchg
mov
test
jne
mov
ss
mov
mov
xor
clc
ds
dec
sub
inc
and
leave
adc
xor
in
sub
lea
shlb
les
scas
arpl
push
fldl
mov
ja
mov
mov
mov
xchg
or
dec
sbb
or
ljmp
cmp
mov
xlat
fmuls
jo
int3
mov
add
xchg
pop
arpl
inc
push
pop
aaa
popf
and
fistpll
cmc
mov
cmpl
inc
in
mov
inc
push
or
test
daa
fwait
or
pop
ret
orb
test
fistl
fistpll
ds
out
jne
rcrb
mov
js
pop
fdivs
sub
xchg
push
mov
inc
sbb
push
ss
mov
das
mov
fwait
rorl
or
dec
mov
mov
adc
test
sarl
pop
jns
inc
cld
sub
shrb
or
ret
adc
ja
out
testb
push
sti
aam
dec
or
adc
jo
in
enter
clc
jns
cwtl
dec
mov
dec
pop
mov
inc
dec
lret
jb
fimull
mov
jp
dec
pop
mov
out
cmp
pushf
mov
xchg
add
pop
cmp
sub
loopne
mov
mov
jbe
xchg
xchg
add
icebp
je
cli
movsl
xlat
scas
setno
mov
jns
fwait
inc
jecxz,pn
ja
mov
lock
xor
mov
mov
loope
cmp
int
xor
imul
sahf
cmp
insb
in
roll
test
inc
repnz
lds
lret
arpl
mov
ret
or
or
clc
stos
jb
sbb
mov
into
bound
out
mov
adc
and
push
insl
fidivl
add
sar
popa
pop
xchg
inc
movsb
gs
jns
sub
lahf
in
mov
mov
mov
and
call
dec
push
adc
and
lahf
mov
aaa
or
pop
mov
movsl
xchg
mov
push
jl
sbb
ror
test
xchg
mov
push
orl
mov
push
test
fnstsw
mov
lcall
es
push
push
dec
int
pop
push
in
shll
fbld
int
je
mov
pop
jg
hlt
xor
push
iret
out
mov
mov
mov
nop
push
imul
mov
decb
popa
mull
lea
sub
fdivs
xchg
adc
imul
pop
in
icebp
push
cmp
or
jecxz
mov
shrl
pusha
push
cmpsb
pop
sarl
mov
pop
adc
scas
xor
out
dec
nop
cmp
lock
nop
fistl
jo
sub
mov
outsb
xorb
mov
divb
cmc
arpl
out
pop
mov
neg
test
push
ljmp
ret
imul
clc
mov
cltd
cmpsl
and
ja
lret
inc
fimuls
mov
daa
adc
push
sub
push
mov
nop
push
xchg
or
dec
sub
jnp
outsb
push
mov
jns
push
cwtl
mull
clc
push
call
nop
push
iret
movsl
jns
xor
mov
or
test
push
bound
pop
jb
mov
in
rol
mov
aas
rorl
hlt
and
pop
mull
cmp
loop
insl
das
in
test
popf
cltd
push
and
cmpsb
iret
push
das
mov
stos
jl
xchg
dec
mov
lcall
pusha
push
adc
jb
in
or
pop
movsl
pop
pushl
std
mov
add
fsubr
test
dec
popf
jae
xlat
pop
push
cwtl
out
stos
jmp
xor
daa
and
adc
sub
dec
clc
mov
jmp
inc
adc
sbb
call
loopne
pop
adc
mov
push
int
daa
xchg
dec
aad
fcoms
stos
pop
cmp
aas
and
add
mov
outsb
test
out
movsl
shll
jl
pop
leave
inc
shll
nop
movsl
push
fistpl
mov
xchg
sarb
cmp
cmp
xchg
fcmovnb
outsl
jl
call
jmp
dec
fldt
dec
xor
and
pop
lret
pop
shrl
sahf
sub
mov
int3
push
std
dec
pop
sub
push
pop
fwait
add
aaa
sbbl
addr16
or
aaa
dec
mov
sub
stc
fidivl
jp
popa
lock
dec
cmp
sbb
add
inc
sbb
loope
xor
lea
xchg
xor
cmp
dec
jno
inc
sbb
dec
dec
loopne
ret
push
nopl
dec
negl
imul
nop
mov
jle
mov
mov
push
mov
rolb
cmpsb
mov
jb
dec
sbb
cld
pop
mov
cltd
mov
xchg
dec
xorl
sbb
aas
mov
mov
xor
imul
xchg
xor
or
xor
mov
lret
ljmp
xor
movsl
or
xor
and
or
fwait
xchg
xor
dec
fdivs
clc
jecxz
xchg
je
lock
fwait
jns
es
fnstenv
cltd
mov
mov
and
es
stos
iret
je
add
jge
add
jmp
test
add
pop
sub
jle
xor
pop
int3
push
adc
int
cmp
inc
les
and
rcr
xor
xor
popw
mov
inc
adc
inc
sub
push
in
xor
adc
das
mov
fwait
lahf
loope
in
xor
je
push
add
mov
mov
outsb
decb
decl
jmp
jo
hlt
in
sbb
pop
adc
in
cmp
test
adc
push
jbe
jo
imul
inc
push
add
mov
das
adc
std
and
pop
arpl
inc
jge
mov
dec
jle
xchg
mov
cmp
sbbl
dec
ljmp
arpl
addr16
nop
and
jnp
xchg
inc
add
ljmp
loop
jmp
out
out
mov
arpl
or
test
jbe
inc
cmp
cmp
push
pop
cmc
popf
mov
and
orb
push
pusha
adc
lcall
xor
pop
fimull
mov
cmp
stc
fsubl
adc
aad
aaa
or
cli
jno
add
cld
xchg
lcall
cmp
xor
and
lods
sbb
add
scas
jbe
pop
adc
in
and
mov
mov
lods
pop
dec
mov
loop
adc
pop
leave
mov
push
adc
aaa
add
fisubl
inc
pop
leave
je
flds
lret
pop
jmp
mov
cmc
mov
std
sbb
or
pop
dec
sub
into
cwtl
lret
gs
movsl
es
idivl
mov
xlat
lcall
sbb
jl
orb
repz
push
scas
push
xor
push
lahf
adc
int3
cmpsl
inc
mulb
imul
stos
push
leave
dec
repnz
pop
sti
jge
scas
jns
test
sub
pop
sub
xchg
negb
fstl
in
loop
addr16
pop
iret
dec
je
inc
in
cmp
cmp
out
dec
pop
js
lret
inc
test
dec
jno
mov
outsb
ds
js
addr16
lahf
test
rorl
clc
es
lret
mov
fmul
test
mov
cmp
mov
in
sub
cmp
shll
and
mov
adc
and
incl
mov
mov
idivb
inc
mov
ret
leave
stc
jo
cwtl
clc
mov
scas
icebp
add
jnp
les
pop
push
sub
fcmovnb
fisubl
scas
test
cld
sbb
daa
adc
daa
in
les
das
test
loope
shll
call
popf
push
cltd
popa
cmp
jne
or
je
out
daa
or
in
fsubs
or
leave
cmp
mov
jns
inc
inc
or
mov
shlb
faddl
and
mov
nop
std
shrl
cmp
outsl
cltd
mov
jmp
push
fmuls
adc
jmp
mov
stos
push
stos
negl
lret
aaa
xchg
inc
into
aaa
cwtl
jae
ss
cmp
stos
sti
jmp
fisubl
add
and
push
jns
sbb
xchg
mov
cmp
inc
mov
push
jnp
mov
popa
cld
and
mov
push
scas
mov
ret
xchg
or
mov
mov
lods
mov
addb
outsl
inc
sti
mov
in
jge
pop
jg
stos
loope
mov
sub
jne
imul
xchg
jae
adc
loop
lcall
xor
cmp
xchg
idivb
ret
xorl
pop
mov
sub
xor
fwait
mov
test
cmpsb
shrl
dec
fcmovbe
lods
fildll
jmp
movsb
xchg
mov
pop
mov
dec
les
inc
jno
push
jno
pop
xor
push
dec
mov
scas
sbb
mov
sbb
fidivrs
es
pop
mov
test
loopne
cwtl
add
dec
xchg
mov
fwait
jns
fimull
fstl
sub
pop
dec
pop
mov
xchg
jp
in
and
fwait
lahf
pop
lea
cmp
mov
call
adc
lret
sub
dec
xchg
jae
ret
sbbb
outsb
sbb
jo
stc
shl
movsl
jbe
popa
ds
fs
push
jno
movsb
test
jp
cmpsb
xor
xchg
jmp
js
scas
loop
cwtl
repz
sub
addr16
enter
push
movsl
popf
mov
flds
xchg
fnstenv
divl
fsubrs
testb
outsl
sub
pop
jmp
mov
popf
adc
mov
cli
adcl
and
mov
sti
push
clc
dec
push
loope
dec
jb
inc
xchg
fstl
pop
or
pushf
ss
xchg
xchg
mov
dec
mov
je
jge
bswap
inc
pop
inc
sahf
jb
and
inc
lret
xchg
jle
mov
enter
xchg
pop
in
cli
cmp
outsl
xchg
dec
movsl
decb
shr
cmp
hlt
inc
outsb
and
pop
fs
dec
mov
lret
cwtl
fldl
and
imul
outsl
fisubl
pop
cmc
sub
push
out
mov
mov
ljmp
push
adc
mov
add
inc
inc
dec
sub
arpl
lock
pop
cmp
xor
aad
dec
dec
out
lcall
out
mov
pop
pop
inc
xor
inc
jo
and
divb
mov
and
int3
insb
cld
aam
xor
xlat
xor
jmp
sub
push
xor
out
cmpsb
xchg
out
cmpb
sarl
es
xor
and
cli
add
sbb
sub
das
xchg
pop
mov
dec
jge
popa
mov
lods
popa
cmp
insl
das
imul
daa
mov
leave
pop
loope
sbb
push
sub
push
ficompl
movb
in
or
dec
fwait
jg
xor
pusha
sub
sub
push
test
aaa
outsb
sub
ja
pop
daa
pop
jae
sub
inc
fwait
leave
and
in
shll
fcmovnbe
popa
sarl
out
sbb
cld
push
xchg
adc
push
popa
push
or
jb
inc
out
imul
imul
js
jle
push
lret
sbb
xlat
mov
and
cmpsb
je
xor
ljmp
inc
pop
hlt
push
or
aaa
fs
or
xchg
or
jmp
mov
ja
xor
fldcw
aaa
leave
xor
test
sbb
sub
xor
inc
js
pop
push
mov
adc
into
push
bound
mov
shlb
push
add
fistpll
imul
daa
loop
lcall
daa
push
cltd
repz
or
call
call
lcall
and
inc
lret
lcall
stos
aas
fsts
jge
adc
sbb
fxch
mov
cli
ss
xlat
sub
mov
cmp
pop
add
je
std
sbb
fdivl
cld
enter
inc
aaa
add
cli
out
aad
ja
xor
addb
inc
mov
push
mov
std
stos
jbe
sahf
mov
stos
xchg
mov
mov
aad
ss
sahf
push
pop
or
cmpsb
xor
inc
popa
mov
fsubl
cmp
mov
inc
cld
jge
rcll
fcompl
lea
test
subl
out
pop
mov
mov
fstpl
mov
test
ret
xchg
pop
inc
in
pop
pop
stc
in
sbb
cmp
pop
gs
cld
cmp
dec
mov
testl
mov
sbb
jmp
xor
cmp
lods
sahf
sbb
clc
jbe
lock
in
pop
pop
pop
mov
ljmp
mov
rolb
adc
movb
inc
lcall
adc
mov
inc
out
add
je
scas
push
adc
or
std
out
mov
lods
popa
repz
addr16
aam
insl
arpl
out
inc
cmp
lcall
pop
mov
mov
dec
inc
push
cs
mov
mov
shll
mov
xor
or
mov
mov
ficomps
cli
imul
jnp
pop
lea
fisttpl
lods
cmpsb
xor
mov
in
mov
lods
sarb
inc
jge
shlb
test
or
mov
pop
mov
stos
jo
nop
and
inc
int3
lock
insb
mov
ss
pop
mov
shrb
fildll
cmp
or
cmp
lret
dec
xchg
mov
addr16
mov
negl
fcomps
clc
stos
xor
loopne
inc
adc
jp
mov
mov
in
xorb
add
xabort
pusha
push
fwait
jecxz
popf
rcrl
dec
int3
xor
push
cli
push
repz
stos
cld
lock
or
jmp
shl
inc
sbb
movsb
leave
in
gs
in
mov
xchg
test
and
and
clc
xchg
xchg
aas
loopne
cld
mov
adc
cli
and
iret
mov
fcmovnu
xor
mov
daa
out
cmp
push
stos
inc
lahf
and
push
xchg
push
test
add
sub
dec
and
dec
mov
loop
mov
icebp
ljmp
jecxz
fistpll
insb
adc
mov
push
mov
push
inc
push
xor
cmp
pop
nop
jae
cmpsl
fisubrl
rolb
push
sti
mov
mov
inc
incb
cmp
jns
dec
or
nop
sub
adc
inc
jp
mov
stos
fs
jp
movsl
cmpsb
push
ja
leave
mov
movsb
aaa
cltd
sahf
xchg
in
stc
fsts
mov
sub
aam
jo
in
ret
cmp
pop
call
daa
repnz
pop
cmp
push
mov
ret
xor
testl
and
sbb
test
inc
and
call
xor
fs
ss
push
fcomi
addr16
mov
push
orl
repz
cltd
push
jbe
xlat
lret
or
mov
xchg
test
dec
icebp
mov
push
xor
cmc
cmc
clc
xorb
loopne
adc
fwait
dec
lcall
jno
and
lret
and
arpl
stos
mov
xor
adc
jbe
dec
loop
inc
imul
sbb
test
push
test
mov
xchg
dec
outsb
hlt
or
pop
adc
aam
fxch
xchg
pusha
and
push
and
les
sahf
push
adc
cmp
mov
pushf
mov
cli
lea
cmp
pop
adc
xor
cmpsb
xchg
xchg
sahf
int
jns
or
mov
mov
xor
and
inc
push
jae
cmp
inc
adc
cmp
in
cmp
outsb
addl
mov
cld
push
movsl
xchg
sub
es
xor
inc
add
ljmp
inc
std
xor
inc
pop
pop
jg
mov
or
push
xor
test
or
icebp
in
add
mov
or
mov
xchg
cmpsb
xchg
out
xor
sbb
xlat
cmpsb
movsb
push
sub
sbb
adc
inc
xchg
stos
mov
sbb
dec
cld
cld
inc
pop
out
ss
jp
daa
dec
inc
in
fstpt
or
sbbl
pop
orb
and
inc
sub
xchg
lock
dec
cmp
adc
loope
or
inc
imul
push
das
adc
push
inc
xorb
dec
mov
add
lret
xchg
push
pop
leave
outsl
or
inc
xchg
cmpsl
pop
push
rorb
fnstsw
insl
lea
nop
adc
fldl
loopne
roll
sbbb
aas
pop
adc
cwtl
clc
xchg
fdivp
imul
lcall
xor
adc
js
cmp
cwtl
inc
std
xchg
loope
outsb
sub
mov
fsubrl
fisttps
ss
jb
add
aas
cmp
inc
add
out
rcll
pop
lock
movsl
xchg
mov
jl
xchg
add
cmpsl
jnp
nop
xchg
popa
pop
xchg
push
xchg
bound
sub
das
cmp
pop
xchg
add
pop
rclb
lds
pop
mul
jae
lret
test
mov
cwtl
add
enter
push
jns
cmpl
mov
mov
dec
scas
pop
in
fwait
outsb
jns
das
das
xchg
sub
hlt
divb
in
clc
mov
add
dec
push
sbb
add
mov
xchg
nop
mov
test
div
rcrl
rcrb
cmp
sub
push
jo
cli
pop
mov
stc
mov
sub
jns
mov
cmpsb
mov
in
cmp
leave
mov
out
mov
movsb
push
mov
ror
cmp
into
fcoms
push
mov
sub
inc
add
inc
cmpsb
cmp
repnz
xchg
shlb
imulb
sub
and
pop
sub
push
lds
out
test
in
stos
jle
jbe
xchg
push
dec
mov
xor
xchg
add
adc
das
outsb
add
mov
imulb
sub
jg
clc
pop
xlat
add
xchg
push
add
or
inc
or
push
insb
loope
popa
les
pop
push
jno
or
shl
jbe
push
insb
xchg
xchg
ss
mov
insb
pop
in
loopne
shl
pop
in
jne
out
inc
jl
mov
xchg
cli
mov
in
xor
test
test
inc
cwtl
adc
cwtl
pop
int3
push
push
loop
lret
ljmp
mov
mov
adc
push
int3
mov
out
int3
pushf
cmpsb
pop
mov
adc
cmp
or
and
cmp
cmp
fisubrl
outsb
call
aaa
out
imul
es
cmp
mov
cmp
mov
adc
push
inc
nop
jns
pop
jo
sti
sbb
imul
push
adc
push
adc
dec
sbb
popf
xor
mov
outsb
push
mov
dec
sbb
mov
adc
test
pop
jns
jne
pop
cmp
cltd
sbb
sbb
and
pop
cmp
pop
xchg
inc
lock
and
jecxz
sbb
pop
call
scas
mov
dec
xor
mov
mov
push
loop
mov
popl
popf
iret
test
enter
xchg
cli
outsb
lret
pop
pop
call
cmp
mov
dec
push
push
jno
and
cmpsb
mov
jmp
and
cli
push
in
push
jge
outsl
ret
rclb
stc
mov
lret
faddl
test
inc
lcall
pushf
pop
fdivs
mov
mov
aaa
add
pop
jno
dec
push
jb
sbb
stos
lock
aam
sbb
mov
mov
sbb
inc
mov
pop
mov
xchg
scas
add
lods
jb
call
fs
add
sub
adc
data16
jbe
repnz
xor
mov
ss
or
js
inc
dec
mov
pop
mov
fcoml
lret
push
mov
cmp
out
stos
insl
dec
clc
out
cmpsl
lods
mov
inc
push
or
mov
addr16
test
dec
add
sbb
ss
test
in
mov
dec
cwtl
movl
cmp
out
adc
lahf
xchg
sub
rorl
jb
mov
icebp
xor
mov
or
jno
nop
addb
mov
jmp
stos
nop
popa
and
pop
cmp
inc
push
and
ja
jno
cwtl
outsb
in
and
es
mov
sub
pop
sarl
jge
das
or
imull
loop
jl
test
add
insl
movsb
adc
add
movsl
cmpsb
or
xlat
lret
mov
jne
and
xor
jmp
lods
sub
push
clc
fdiv
imul
xchg
xchg
subl
sbb
mov
push
lds
pop
push
xor
es
es
mov
loope
mov
and
jo
rcl
dec
ljmp
in
std
cmp
data16
or
jp
sbb
stos
bound
cmp
push
ja
mov
mov
jns
xchg
fs
test
rorl
paddb
loope
shlb
nop
in
fsub
cmc
mov
jo
fmull
xchg
jbe
jnp
and
mov
lcall
in
jecxz
cwtl
sub
cmp
popa
lcall
cmp
aam
mov
mov
aaa
dec
sbb
je
leave
mov
loop
sbb
bnd
int3
mov
out
scas
sbb
sub
cmp
popa
sti
ss
sbb
xchg
jg
out
mov
xor
cmpsb
shlb
xor
out
add
pop
inc
lock
xchg
ja
pop
insb
mov
cmc
out
testl
mov
jg
mov
pop
or
dec
fisttps
mov
scas
mov
insb
adc
pushf
xor
push
mov
scas
mov
ja
mov
data16
xchg
sbb
cmpsl
jg
dec
inc
outsb
movsb
addr16
out
stos
push
jno
test
loopne
shrl
mov
fwait
lret
fmul
jne
jg
insl
jle
movsl
cli
xchg
inc
xchg
out
or
add
sbb
mov
cltd
out
jg
fildl
shrl
mov
adc
adc
test
or
nop
jge
xchg
imul
pop
aas
andl
xlat
fistps
jns
aas
jl
movsl
arpl
add
out
mov
inc
sub
cli
mov
addr16
in
daa
xor
cld
fidivrl
nop
mov
pop
sbb
bts
or
pop
movsb
xchg
pop
push
jns
cmpsb
push
jb
js
insl
or
fcmovnbe
jno
es
outsl
mov
frstor
and
jmp
xchg
sub
hlt
dec
dec
loopne
push
and
in
push
repnz
cmp
lret
getsec
inc
xchg
pop
cli
cwtl
mov
mov
in
out
cld
ja
xchg
inc
or
les
xor
adc
pop
stc
mov
ret
jbe
or
xchg
xor
mov
pushf
pop
push
xor
sbb
push
lds
jmp
push
pushf
subl
jmp
pop
rcrb
in
negl
shlb
js
imul
loopne
das
sub
push
arpl
ja
push
jle
into
dec
cmp
push
fidivrl
int3
sahf
icebp
enter
cmpsl
fcomps
sbb
stos
jl
xchg
das
adc
pop
test
nop
into
push
stos
push
mov
sbb
in
jno
fidivrl
cmp
push
imul
ret
adcb
cmc
outsb
sarb
test
adc
hlt
test
add
and
jle
in
and
imul
jo
inc
orl
push
iret
notl
pop
in
adc
push
out
mov
xchg
int
lea
mov
inc
mov
jbe
out
in
xchg
call
out
sbb
cmp
cmp
cmp
insb
inc
mov
pusha
cmp
inc
pushl
mov
orl
out
lret
iret
cld
jl
pop
jbe
lret
push
cmpsl
pusha
ja
outsb
pop
cmp
dec
gs
push
xlat
loope
mov
push
lret
movsb
or
lss
ret
jo
unpcklps
jle
cmp
movsb
dec
mov
sub
mov
cmp
popf
stc
inc
ds
lcall
scas
dec
cmpsl
mov
out
movsl
stos
mov
fildll
or
pop
mov
mov
out
add
and
sarl
mov
add
cmp
jno
insb
idivb
mov
test
adc
nop
neg
aaa
xor
mov
stos
mov
pop
pop
jg
mov
cli
cs
in
cmp
or
ret
sub
jle
dec
cmc
rcrl
movsb
fwait
push
and
bound
das
and
in
mov
cmp
mov
ljmp
outsb
cld
test
cli
ficomps
out
cmpsl
lods
xchg
stos
or
lcall
shlb
nop
in
jnp
mov
pushf
stos
mov
lcall
das
cmp
daa
and
pop
mov
and
mov
and
cmpsl
ret
int
mov
jne
aam
fs
imul
sti
in
pushf
mov
push
push
bound
jmp
sub
add
mov
and
sarl
leave
xchg
xor
push
pop
inc
sub
lahf
push
ret
dec
push
mov
mov
jge
shrl
cmp
sbb
fwait
shll
push
xchg
pop
in
in
out
inc
fldl2t
lods
xchg
ds
mulb
sbb
push
mov
or
in
xchg
lods
pop
add
jae
inc
push
ror
inc
ja
cwtl
repnz
fimull
decl
jmp
rcrb
stos
ret
cmpsb
mov
dec
out
mov
cltd
xchg
mulb
cli
insb
mov
shlb
fnsave
imul
push
scas
rolb
sarl
aaa
add
inc
repnz
loopne
lahf
out
pop
imul
shlb
dec
inc
cmp
push
imul
mov
xchg
int
in
mov
leave
jmp
fisttpl
int3
push
or
int3
cmp
jo
jp
jo
mov
xchg
inc
mov
mov
fsubrs
adc
cmp
or
pop
movl
pusha
daa
insl
ret
stos
add
xchg
xor
mov
inc
xor
push
lea
inc
mov
fwait
mov
call
shrb
mov
mov
popa
jmp
cwtl
xor
mov
pop
adc
scas
mov
push
icebp
lds
jns
bound
jge
daa
or
orb
pop
push
xor
mov
dec
lret
dec
push
nop
push
ss
xor
mov
xchg
or
mov
inc
loopne
movsl
test
fwait
cmpsb
rclb
push
sub
sti
xor
leave
je
nop
aaa
movsb
out
loop
popa
inc
notl
jae
ret
mov
sub
pop
stos
test
pop
lcall
push
lahf
and
inc
pop
cmpsb
dec
add
cmc
aas
aas
cmpsl
push
push
mov
shll
jmp
xor
mov
test
movsb
dec
sbb
pop
jns
in
imul
mov
mov
nop
in
push
xor
dec
cmp
pop
sahf
addb
sahf
shll
and
sub
xchg
enter
mov
cs
js
push
xlat
enter
sub
in
out
sub
rolb
rcll
scas
sub
add
mov
dec
scas
fisubl
mov
push
rcll
mov
push
xor
push
test
mov
inc
call
mov
mov
lea
cmp
sub
xor
mov
popa
jle
pop
adc
mov
sub
adc
jbe
je
push
es
or
fldenv
adc
adc
push
cmp
lods
xchg
and
sbb
pushf
pop
lea
rorl
cmp
sbb
mov
rcr
jns
lahf
cwtl
inc
push
push
sbb
sti
ljmp
cmp
push
lret
adc
or
repz
ss
inc
pop
dec
enter
push
mov
jnp
pavgb
rcrb
mul
add
inc
into
ret
loope
iret
pop
sub
out
jno
roll
movsb
rcrb
shr
mov
rcll
dec
push
inc
sti
popf
sahf
mov
adc
fmul
stos
pop
jp
mov
shlb
lods
sub
mov
ljmp
int
lock
mov
fs
jbe
add
jno
mov
dec
push
ret
cmc
jo
push
cs
and
mov
mov
scas
jno
cmpsb
popf
sbb
xorb
ret
cmp
inc
lcall
and
test
jne
mov
hlt
jnp
add
jle
frstor
das
xchg
out
jo
dec
leave
push
popa
loop
ficoml
and
or
lcall
fcomps
cltd
jmp
je
call
inc
adc
cmp
lods
xor
aam
xchg
test
outsl
lea
mov
nop
jb
jmp
pop
dec
adc
jno
cld
or
jae
aam
inc
push
mov
adc
rclb
movsl
mov
test
sub
add
dec
stc
xor
xchg
xor
push
sbb
mov
frstor
idiv
inc
mov
sbb
mov
fcoml
movsb
lcall
pop
ja
lahf
les
nop
dec
paddsw
sbb
pushf
mov
bnd
pop
sub
add
jmp
push
cli
inc
push
push
xchg
imul
es
imul
jmp
mov
mov
jle
stc
divl
jle
jmp
xorb
out
inc
mov
adc
mov
push
in
mov
fcmove
mov
out
ret
fsubrs
jne
ror
ljmp
sbb
or
xchg
loopne
insl
and
sti
gs
pop
lods
push
push
inc
sub
loopne
mov
mov
mov
or
adc
sub
mov
xchg
mov
arpl
and
cmp
lods
ficompl
shll
and
lcall
dec
pop
cmp
pop
sbb
orl
push
clc
lret
push
ss
push
repnz
aaa
fidivs
je
or
xor
push
xchg
fldt
mov
inc
popa
mov
xchg
jecxz
pop
xor
mov
cmc
xor
jae
mov
fists
fsts
jmp
lea
into
je
add
mov
dec
mov
jae
cmpsl
pop
rcrl
ret
push
jnp
sbb
sub
sbb
xchg
call
pop
lret
push
cmc
fdivl
fldcw
pop
out
mov
setle
inc
xchg
or
movsl
cmovo
mov
or
pop
pop
das
loop
out
push
insl
jecxz
stos
add
stc
pusha
push
push
sbb
sti
loopne
out
fsubl
stos
out
out
pusha
and
in
cmp
pop
xor
test
mov
stos
or
push
pop
jp
mov
fstp
push
sub
bound
xlat
mov
pushf
movsl
xchg
mov
jge
imul
adc
and
mov
sub
imul
leave
mov
call
fsubl
lock
bound
ljmp
pop
inc
inc
cmpsl
adc
cmp
fdivs
scas
sub
lock
mov
jne
jae
mov
pop
push
scas
popa
jb
leave
clc
and
inc
jnp
pop
cmp
mov
dec
cs
adc
cli
rclb
addr16
ss
sub
push
mov
mov
ficomps
jp
push
hlt
pop
test
mov
xor
insl
add
int
enter
push
push
mov
lcall
testb
cmc
pop
icebp
cmp
jg
int
add
push
jo
testb
lods
sub
or
mov
jecxz
push
loop
stos
sahf
idivl
pminsw
in
rcr
arpl
push
inc
fldt
mov
xor
jns
dec
sarl
dec
movsl
xor
or
fsubl
and
mov
mov
sbb
int
icebp
push
leave
mov
cmpsb
push
xchg
imul
jp
xor
inc
idivb
in
adc
bound
push
cs
inc
xchg
add
out
mov
or
mov
insl
cmp
xlat
adc
mov
pop
in
pusha
fwait
sub
adcb
mov
push
xor
adc
dec
gs
push
dec
dec
push
testb
mulb
mov
andl
or
dec
mov
insl
xor
mov
inc
or
pop
bound
jl
shlb
bound
jl
inc
xlat
jnp
dec
into
dec
jmp
popa
or
lret
pop
add
dec
fcoms
push
inc
lret
mov
mov
and
cmp
dec
call
jmp
mov
mov
jmp
aam
fsubrp
test
mov
aas
jno
bnd
pushf
or
stc
adc
and
sub
pop
sti
mov
xchg
jmp
inc
pop
popf
xor
jp
hlt
andb
mov
mov
stos
sub
mov
sub
and
jg
and
arpl
sub
add
or
div
jg
inc
rclb
and
dec
pop
lcall
sbbl
cmp
inc
iret
out
adc
clc
add
jp
sbb
pushf
sbb
cmp
mov
fmul
mov
mov
jle
push
stc
dec
or
mov
mov
mull
mov
mov
sbb
cmp
sub
inc
pop
aad
or
mov
or
fbstp
xchg
push
icebp
insb
mov
dec
cmpsb
or
adc
add
xchg
and
push
adc
xor
scas
enter
fstpt
or
sbb
in
das
stos
sbb
outsb
mov
jecxz
fmull
sarb
aas
mov
or
insb
lea
push
xor
jmp
pop
in
leave
rcr
cli
aas
and
xor
xchg
popl
sbb
pop
mov
lods
sbb
inc
rep
sbb
mov
sahf
arpl
shl
xor
pop
pop
push
call
mov
sbb
jno
sbb
pop
mov
xor
cmp
fwait
mov
dec
rcrb
or
pop
mov
lea
adc
jecxz
outsb
jge
adc
sbb
xor
in
dec
je
mov
inc
sti
sub
pop
pop
andb
mov
ds
add
fstp
scas
out
jmp
push
and
fistps
cltd
jl
lret
add
push
pop
jle
xor
cltd
jb
lods
ficompl
xchg
cmp
inc
jg
iret
test
and
cmp
mov
mov
addb
pushf
jp
mov
jae
popa
in
pop
loop
jg
pop
leave
jb
push
test
bound
pop
aaa
test
lret
cmp
jo
imul
jle
in
outsl
ja
incb
shlb
xor
jp
cmp
push
inc
cmpsl
scas
aaa
aaa
add
imull
aaa
inc
dec
cwtl
sbb
scas
cmp
push
dec
mov
pushf
test
out
movsl
pusha
mov
dec
and
aaa
inc
sbb
and
xor
add
lea
sub
outsl
pop
ja
xchg
mov
popl
dec
mov
insb
pusha
pop
outsl
xchg
sti
xchg
or
push
mov
nop
inc
cltd
dec
into
fwait
into
inc
loop
xchg
ljmp
sbb
rcll
fidivl
jo
in
dec
fcmovb
xchg
loop
gs
add
lret
xchg
dec
sub
mov
sarl
aam
or
scas
lret
je
pop
hlt
and
push
fstpl
dec
mov
cwtl
and
cmp
mov
jns
jle
nop
mov
xor
sahf
js
in
ret
pop
dec
lds
call
sahf
aas
jne
mov
and
lret
xor
cmpsb
shll
cmpsb
jnp
clc
divl
add
dec
les
mov
push
jno
and
rcr
loope
insb
iret
or
pop
add
inc
stos
mov
enter
xor
fwait
ljmp
call
test
stos
fistl
adc
fs
jo
gs
nop
fmull
or
jmp
leave
sub
cmp
mov
fmull
ss
jg
sub
sti
pop
mov
js
mov
mov
mov
int3
push
test
jno
cmpsb
mov
push
mov
inc
xchg
outsl
mov
cld
test
sarb
das
rorb
cmp
cmp
jg
mov
lods
add
jb
adc
nop
and
or
add
movsl
xchg
icebp
push
test
sti
jl
jae
aaa
or
data16
xchg
xor
out
je
inc
test
fcmovb
shrl
pop
and
inc
jne
in
rclb
adc
adc
xchg
cmc
movsb
ficomps
lods
es
cwtl
subb
jg
gs
push
test
mov
bound
jnp
pop
outsl
xor
mov
push
add
and
dec
inc
jp
pop
loopne
push
mov
outsb
add
jb
mov
rorb
push
test
cmp
xchg
add
xor
xchg
imul
sbb
enter
insl
decl
mov
sbbl
xor
mov
lods
clc
insl
icebp
outsl
stc
xchg
lret
rolb
mov
or
call
mov
outsb
cmp
stc
inc
pop
add
adc
in
pop
cs
nop
and
xchg
or
arpl
sbb
negl
dec
iret
xchg
cmp
fstpl
lock
inc
mov
xchg
jecxz
mov
or
jae
dec
jbe
adc
push
xor
jnp
mov
xor
jecxz
push
popa
mov
imul
call
and
or
jb
xor
sbb
add
or
gs
in
cld
mov
xor
sbb
outsl
pop
stc
aaa
sbb
cmp
addl
fisttpl
jp
jmp
inc
xchg
push
mov
push
cltd
das
std
cmc
mov
mov
mov
test
aas
addr16
mov
cld
ljmp
rcl
and
pop
scas
je
stc
mov
xchg
adc
jne
addl
xchg
lock
cli
loope
ss
jl
sub
fucomp
jle
lcall
js
dec
xor
inc
adc
push
fildl
rcrb
je
xchg
xor
xchg
fistl
or
fnsave
cmp
das
mov
loopne
mov
shr
gs
std
out
push
lods
out
jno
test
popl
sub
cmp
pop
dec
lahf
shl
sbb
fstps
sub
xor
mov
fisttps
mov
sbb
pop
pusha
jae
cli
sbb
sub
mov
push
fisttpll
sbb
lcall
cmp
cmc
aaa
cmc
xor
cmp
sbb
test
adc
popa
fisubs
scas
pop
mov
insl
xchg
inc
xchg
xchg
out
arpl
cwtl
mov
pop
mov
mov
xor
jge
pop
daa
inc
int3
insl
xor
push
ljmp
mov
adc
dec
cli
notb
repz
sub
mov
mov
int3
mov
scas
into
movsb
js
xchg
out
or
sbb
divl
idivl
dec
fimull
das
mov
rorb
xchg
call
stos
add
cwtl
das
movsb
mov
in
imul
das
ret
jb
sti
inc
lea
outsb
adc
jmp
inc
xor
mov
xchg
mov
adc
iret
ljmp
loope
insl
mov
cmp
mov
lods
jns
xor
mov
jo
ljmp
inc
scas
inc
sbb
sti
jno
dec
sub
mov
or
lcall
jnp
fldz
test
lods
fimull
stos
mov
cmp
or
xchg
mov
mov
aas
mov
ss
or
jns
adc
mov
scas
popf
jle
dec
jb
mov
inc
or
fucomi
loop
and
fwait
push
repz
push
enter
enter
adc
stos
fmul
jae
push
std
push
and
jbe
filds
or
es
and
pushf
pop
cmp
add
push
imul
notb
xor
sub
ret
jg
push
outsl
xchg
sbb
ret
incb
jb
push
sti
scas
pop
adc
ljmp
pop
mov
dec
push
push
xor
clc
add
cld
push
jae
cld
fstps
xchg
mov
push
push
xchg
fstpl
jno
jae
mov
aam
pushf
icebp
mov
popa
mov
cmp
repz
scas
adc
cmpl
ret
into
in
push
push
outsl
dec
jbe
call
cmpsb
pop
xchg
or
inc
xchg
mov
iret
int
inc
leave
add
cmpb
mov
pop
mov
inc
imul
push
fiadds
subb
jg
add
cmp
incb
in
mov
pop
enter
popf
jle
jge
add
bound
or
addr16
shlb
lcall
adcl
shrb
idiv
mov
push
inc
adc
pushf
sub
sbb
imul
scas
sbb
mov
fdivr
in
loopne
xchg
sbb
adc
loope
popf
push
dec
lret
pop
cmc
out
in
loopne
pushf
jp
mov
test
stos
pop
decl
das
into
push
cmp
xor
add
shl
push
xchg
mov
faddp
shlb
xor
xchg
out
in
push
ret
loopne
mov
add
xor
and
lods
dec
and
js
test
nop
xchg
or
sub
leave
jge
adc
std
sub
pop
out
xor
scas
idivb
int3
pop
sbb
and
mov
cmp
mov
ret
push
push
or
jg
sbb
sbb
into
inc
and
sbb
stc
lds
insb
or
or
fstl
nop
pop
aam
sub
int3
xchg
xor
iret
jmp
outsb
sbb
pop
jno
scas
or
movsl
lcall
sub
inc
inc
xor
arpl
xchg
and
mov
push
lret
mov
mov
mov
pusha
ret
add
sbb
jmp
fisttpl
mov
and
popf
or
int3
fidivs
mov
mov
movsb
arpl
lods
adcb
in
inc
xchg
push
xor
dec
cmp
pop
mov
mov
mov
aaa
and
stos
lcall
addr16
ficomps
cmpsb
adc
mov
add
xor
cld
jp
pop
cli
fidivrs
mov
xchg
push
jg
aaa
push
push
push
dec
xchg
xor
lcall
std
dec
daa
mov
adc
decb
and
inc
pop
es
or
bound
cli
pop
sub
push
mov
ret
cmp
push
sub
test
xchg
xchg
pop
lret
mov
mov
or
imul
insl
sahf
and
xor
jbe
neg
add
outsl
mov
inc
xchg
inc
add
dec
xchg
push
add
pop
jp
test
fstpl
les
or
pop
xchg
ds
loop
sti
inc
jg
mov
lret
jecxz
sbb
cmp
jle
addl
xor
adc
pop
adc
outsl
cmc
scas
xchg
pop
cmp
push
add
test
xor
loop
nop
jle
mov
ljmp
addb
push
sub
sbb
fsubl
shlb
rorl
mov
in
push
insl
jo
test
test
sub
adcb
hlt
xchg
jp
xchg
ret
std
cmp
xchg
mov
inc
and
cwtl
and
xor
lcall
lahf
fdivl
clc
dec
xor
shl
test
ja
jl
jns
adc
lcall
jmp
push
mov
lods
das
cli
out
mov
stc
ret
push
and
in
aaa
xchg
test
repnz
stos
in
out
movsl
fsubrs
sub
and
loop
push
dec
cmp
iret
jb
inc
xor
les
scas
cbtw
sbb
pop
push
jge
not
push
fcmovu
clc
jmp
and
mov
arpl
pushf
jbe
cmpl
stos
inc
adc
xchg
or
jae
outsb
mov
sbb
fcoms
jns
fxch
call
jp
xor
out
push
stos
pop
cmp
ss
fildll
ja
out
or
pop
lret
or
mov
xchg
ret
jg
out
and
jbe
pop
sarl
mov
mov
popa
push
sub
orb
dec
inc
jge
jecxz
push
add
repnz
push
mov
mov
push
repnz
inc
mov
nop
aaa
and
xchg
sahf
push
and
push
cld
fwait
aad
mov
imul
or
ret
addb
and
fs
leave
aam
pop
aad
imul
jecxz
enter
pop
scas
mov
cmp
cmpsb
in
pop
pop
cmpsb
in
dec
nop
inc
add
push
aas
push
dec
xor
mov
fsts
testl
push
adc
sub
lcall
or
adc
dec
jnp
cli
cmp
jns
pop
xchg
xchg
sbb
gs
subl
mov
jbe
push
lods
mov
leave
dec
icebp
xchg
or
xchg
test
gs
aaa
or
lcall
push
out
pusha
mov
es
stos
sub
mov
js
dec
and
jg
das
movsl
imul
pop
data16
mov
je
pop
or
dec
pop
cmp
shll
loope
filds
movsl
std
mov
adc
out
jns
or
lea
xlat
push
add
xchg
xchg
mov
imul
jns
je
pop
adc
fst
dec
xor
cmp
aaa
iret
dec
dec
std
fmul
dec
push
jns
pop
inc
pop
add
dec
adcl
test
dec
fisttpll
mov
lahf
iret
js
jmp
push
jb
ss
cmc
notb
cwtl
pushf
outsb
testl
xor
push
enter
mov
push
cmp
mov
rcrb
push
jmp
out
and
lret
out
push
ja
mulb
cmovns
or
ds
mov
push
pop
ss
repz
repz
mov
mov
scas
aam
imul
iret
iret
sub
inc
xchg
dec
movsl
xchg
mov
push
outsb
mov
ljmp
scas
mov
xchg
clc
dec
add
out
push
dec
cwtl
sbb
mov
je
xlat
mov
loop
mov
fcoml
xrelease
cmpsl
add
dec
push
mov
adc
jbe
or
cld
jae
xchg
rcrl
insl
pop
arpl
loop
jb
insb
sbb
cltd
xor
test
xor
ret
and
outsl
leave
pusha
jg
adc
pusha
out
out
add
cli
xor
and
outsb
fs
push
ficomps
add
xchg
shll
xchg
jge
mov
mov
mov
pop
stos
mov
mov
movsb
jae
jmp
cmpsb
nop
sahf
jp
jnp
mov
icebp
adc
int3
es
pop
lret
push
mov
push
fimull
repz
dec
inc
xchg
xchg
mov
mov
fisttpll
call
lods
or
fdivrs
inc
fcomi
loopne
push
popf
cmpsl
mov
lret
aam
lret
out
inc
pop
dec
or
xchg
movsl
and
push
inc
push
sub
mov
ror
add
stos
jmp
lret
push
ja
pop
xchg
aas
adc
les
movsl
sub
cmp
pop
mov
sbb
xchg
popf
xchg
scas
jp
hlt
mov
xchg
xor
lcall
int
dec
sahf
mov
jnp
mov
scas
push
push
ffreep
ds
movsl
push
pop
insl
addr16
add
out
rcr
sbb
inc
in
call
adc
adc
mov
inc
adc
sub
jmp
daa
fildl
test
jo
int
sarb
sti
xchg
sbb
dec
fsubl
sub
push
cli
push
in
push
pop
bound
adc
pop
inc
fdivrp
cmpsb
cmp
out
mov
cmp
push
push
js
stos
xchg
sti
pop
addb
xchg
repz
pop
pop
movsl
mov
xchg
sbb
dec
xchg
nop
arpl
push
rol
and
mov
pusha
sti
jle
lds
xchg
mov
cmc
add
repnz
enter
cmp
in
test
in
cmp
adcb
and
adc
leave
fsubl
and
inc
shlb
aad
push
out
popf
movsl
xchg
shl
sub
fstl
sub
xchg
push
inc
jnp
jle
mov
aam
sbb
rorb
addr16
sbb
aaa
cmpsb
sub
cli
movsb
scas
ret
or
rorb
test
loopne
mov
xchg
pop
adc
sbb
hlt
cmp
decl
hlt
stos
xchg
and
dec
push
add
inc
jmp
fsubl
sbb
pop
adc
xor
jb
push
push
stc
repnz
mov
cmp
popf
mov
loop
repnz
aam
pushf
sbb
gs
cmp
adc
xor
xchg
fwait
lret
in
leave
sbb
push
push
out
imul
inc
and
push
sti
mov
adc
pushf
in
imul
sti
cmp
leave
in
lahf
inc
imul
adc
push
lock
inc
inc
ret
mov
mov
mov
mov
add
xchg
and
mov
scas
inc
jo
push
or
cmc
in
adc
lcall
out
lods
cmp
xchg
xchg
add
add
dec
aam
addr16
mov
cmp
rol
pop
sbb
inc
ficoms
int
and
repz
incl
mov
gs
jne
cmp
inc
or
je
cli
movsl
push
aam
or
les
fdivrs
pop
aam
pop
je
decl
popa
pop
ljmp
clc
cmpsb
fsubl
leave
fstpt
dec
mov
cli
fmuls
jl
xchg
lahf
test
cmp
repnz
fisubrs
lea
rorb
sub
or
cli
lcall
repz
add
and
push
xchg
jecxz
sbb
fsubrl
shl
xor
push
and
test
fistpll
cmp
add
repz
push
mov
dec
test
popa
mov
xchg
mov
mov
mov
std
insl
out
sbb
bound
add
pop
mov
mov
push
cmp
and
pop
and
or
adc
dec
mov
xchg
inc
push
das
cmp
imul
push
sbb
popa
inc
outsl
mov
stos
loope
cmpsl
mov
insb
movsb
adc
negb
pop
es
ds
pusha
add
cli
xor
mov
xchg
ss
clc
and
ljmp
mov
cld
and
es
and
icebp
xor
pop
jnp
into
scas
rcl
xchg
fwait
pop
mov
mov
push
je
cmp
jbe
xor
insb
mov
jo
daa
or
repnz
in
shlb
xchg
repz
push
ljmp
icebp
mov
stos
adc
adc
cmp
idivb
fdivl
lcall
stos
mov
jo
mov
sub
inc
push
sbb
dec
and
icebp
jo
hlt
aaa
popa
ror
int
cli
mov
and
mov
cmpsb
sbbl
fimuls
scas
push
add
and
and
out
pop
outsb
add
pushf
jne
aas
cmp
pop
sub
je
dec
ja
pmulhuw
sarl
or
stos
data16
adc
or
iret
dec
push
je
mov
and
in
dec
aad
mov
ss
test
dec
ret
pop
ja
pop
or
loopne
insl
mov
adc
adc
ja
andb
mov
insl
push
and
or
sbb
sbb
xlat
pop
pusha
dec
sub
ja
lret
popf
repnz
mov
das
pop
inc
into
mov
or
int3
rclb
mov
xorb
mov
pop
repz
out
jne
adc
std
shrb
inc
enter
add
adc
inc
mov
and
mov
mov
ficomps
or
leave
adc
sahf
in
sti
mov
or
xchg
pop
in
sti
pop
sbb
push
arpl
ficoml
fdivrl
dec
data16
pop
push
in
bnd
in
adc
pusha
adc
mov
push
ret
insb
arpl
sbb
cltd
test
push
pop
sbb
inc
and
negl
xor
out
test
testl
sub
dec
push
subb
pop
dec
leave
imul
push
cmpb
and
xchg
add
pop
addl
mov
icebp
jp
dec
inc
pushf
ljmp
xchg
addr16
pop
adc
call
push
dec
xor
ret
mov
mov
int3
mov
lcall
push
mov
sbb
xchg
imul
xchg
in
dec
cmp
xchg
jle
inc
lods
jl
xlat
add
pop
jbe
push
add
or
or
xchg
sub
or
adc
dec
mov
out
sbb
gs
mov
repz
shll
pop
pusha
fdivrl
mov
stc
hlt
repz
cmp
jge
inc
cmp
ds
sub
popf
push
stos
pop
out
shrb
ds
gs
leave
cmpsl
sub
enter
cmc
jb
insb
imul
mov
inc
dec
mov
popa
je
jecxz
lods
cmp
jmp
and
in
fildl
jb
xchg
out
mov
mov
mov
cmp
sbb
mov
jb
int3
mov
and
sahf
cli
fldenv
pop
insl
daa
ss
ret
cmp
mov
outsl
rorl
ljmpw
jbe
jmp
fwait
xchg
xor
jno
pop
sub
lcall
lret
sub
cmc
jbe
int
fists
push
mov
imull
js
xchg
and
push
test
nop
mov
cmp
push
push
outsb
adc
push
out
pop
jp
jle
dec
adc
ret
mov
loopne
loopne
mov
cmp
imul
movsl
adc
push
into
loopne
xchg
cmp
dec
pop
popa
inc
xchg
mov
imul
adc
push
and
leave
movsb
inc
fbld
stos
shlb
movsb
adc
cmc
test
aad
jae
loopne
repz
add
adc
iret
sbb
and
aad
and
cmp
mov
mov
mov
or
jge
mov
or
sti
sub
jns
and
sub
add
gs
lods
lds
and
mov
push
lea
and
cwtl
sub
shrb
test
popf
mov
movlhps
cmp
fistps
cld
cld
movsb
sbb
jmp
fsubs
and
push
ja
push
and
cwtl
loope
ljmp
add
jns
les
addb
xorl
add
dec
stos
sbb
in
or
push
jg
xchg
sbb
adc
loopne
sti
push
pop
push
xlat
test
sbb
add
clc
sahf
xor
xchg
shrb
jecxz
jne
loopne
std
cld
dec
or
frstor
adc
push
daa
loope
int3
test
inc
sbb
adc
dec
and
loope
push
or
push
and
in
cmp
fwait
fwait
add
lcall
ss
sbb
lods
mov
xchg
sbb
in
lods
popf
xchg
jle
cmpsb
jb
adc
sub
mov
add
fildl
dec
mov
sbb
push
jp
push
cmpsb
sahf
fwait
cmpsl
mov
pop
lds
jmp
sbbb
inc
pop
mov
jno
sbb
jo
insb
iret
add
xor
cmp
cltd
xor
pop
cld
and
sbb
inc
ja
cli
push
adc
out
in
insb
mov
inc
jmp
adc
aam
xchg
loope
ret
mov
js
outsl
mov
into
mov
outsl
pushf
mov
inc
scas
imul
les
ljmp
cmp
pop
inc
fists
lods
cmp
push
popa
fwait
popf
fcoml
mov
mov
fwait
loopne
mov
neg
ljmp
pop
cmpb
mov
and
dec
and
insl
mov
cmp
adc
inc
and
mov
pop
stos
mov
pop
dec
lea
in
sar
sbb
pop
add
stc
xlat
push
push
fisttps
pusha
mov
jno
mov
int3
jecxz
outsb
mov
scas
mov
lods
mov
fmuls
sub
adc
dec
lcall
mov
imul
sbb
out
push
mov
add
cltd
ss
outsl
jmp
push
ret
mov
inc
lahf
fsubs
adc
xorb
stc
mov
mov
lods
adc
xor
into
ljmp
xchg
popa
das
mov
push
jo
sbb
sub
cmpsl
cli
jbe
jp
stc
ret
adc
lret
mov
pushf
int3
cs
dec
outsl
popf
inc
scas
jnp
hlt
aaa
sbb
lcall
mov
mov
mov
popa
ja
adc
and
movsb
fwait
les
xor
aam
dec
pop
inc
test
jne
push
ja
fs
pop
cmc
or
aaa
in
test
cli
jb
pop
sub
xchg
jne
int3
sbb
push
mov
sarb
fistl
mov
cmpsb
fisubrl
icebp
inc
loopne
cmpsl
sub
je
mov
pop
add
pop
jp
push
arpl
jl
cmp
push
cmp
das
inc
mov
and
push
lahf
jp
jae
mov
and
sti
dec
outsb
shll
bound
mov
aam
pop
loopne
xor
lret
cwtl
jecxz
scas
das
sub
mov
in
mov
roll
cmc
daa
fdiv
lock
dec
jns
or
jae
test
sbb
je
adc
jg
mov
pop
pusha
gs
adc
push
sub
mov
inc
sub
inc
fucomi
mov
mov
sub
loopne
mov
add
insl
icebp
lds
mov
add
cmpsb
insb
push
lret
cwtl
push
dec
int3
dec
sub
sbb
fcoml
daa
stos
das
pop
mov
incb
sbb
adc
push
cmp
bound
js
dec
and
add
iret
mov
lcall
stos
mov
rorb
xchg
lods
jg
cmp
loope
adc
mov
add
in
mov
iret
jecxz
dec
jne
sub
xchg
xchg
mov
lret
cmp
enter
ffree
rcrl
or
lret
sub
pop
push
mov
jge
adc
mov
enterw
pop
sbb
pushf
xchg
sub
inc
sub
iret
adc
jp
pop
fadds
das
out
and
and
push
adc
sar
adc
mov
mov
repz
push
loop
in
bound
inc
fisttps
adc
sbb
and
dec
sbb
hlt
enter
inc
push
add
test
inc
cmpsl
cli
push
sub
dec
or
mov
inc
test
repz
addb
sub
neg
inc
push
xchg
int
aas
push
addb
notl
inc
mov
add
or
sub
inc
int3
or
and
imul
jle
mov
fstpt
imul
stos
in
dec
stc
pop
mov
cld
xlat
popf
and
movsl
repnz
aam
mov
mov
sbb
push
and
movsl
aad
lea
push
cmp
daa
in
leave
std
xlat
dec
out
push
xchg
orps
push
stos
fs
mov
inc
les
mov
push
fs
sti
into
sbb
mov
push
pop
dec
les
dec
jmp
sbb
mov
jo
jmp
dec
mov
mov
jmp
sub
push
xchg
mov
inc
xchg
sub
lcall
icebp
in
out
inc
mov
mov
jno
hlt
mov
xor
sub
aaa
movsl
dec
xor
iret
sub
cmp
bound
rcrb
adc
cmp
and
testb
sarl
and
pop
mov
or
dec
outsl
scas
xor
rcl
dec
adc
adc
pusha
test
ret
push
cmpb
sbb
int3
scas
cmp
or
es
pop
and
mov
xchg
or
repnz
test
leave
stos
cmp
sub
sub
sub
cltd
push
clc
or
mov
test
lret
sub
lret
shlb
imul
ja
adc
mov
into
add
mov
pop
xor
mov
rorl
dec
cmp
xchg
jmp
movsb
lcall
push
loopne
and
jmp
sar
rolb
scas
lea
divl
add
aas
push
or
rolb
sbb
and
das
fcmovbe
and
test
push
mov
idivb
pop
pop
enter
pop
sub
pop
adc
xchg
inc
inc
mov
xlat
dec
addr16
scas
and
pop
jno
cmpsl
dec
jae
mov
dec
sbb
fisubl
mov
das
mulb
fstpl
es
sbb
and
xchg
xchg
sbb
xchg
cmpsb
stos
incl
sub
fwait
mov
sbb
inc
dec
cld
push
aaa
cmpsb
lods
sbb
sbb
jge
shrl
fidivs
and
push
lods
loop
push
mov
icebp
imul
data16
xor
int3
je
ja
pop
or
push
add
sahf
ret
push
daa
add
gs
jl
mov
pop
inc
mov
mov
icebp
cmp
mov
push
mov
xchg
lock
jmp
pop
test
dec
leave
inc
jp
push
nop
xchg
pop
fistpll
into
jne
mov
rclb
mov
orb
lock
add
sbb
stc
orl
add
and
scas
xor
push
arpl
test
sub
jecxz
addr16
sarb
push
shlb
pop
sbb
jns
sbb
insb
ds
insb
inc
das
ljmp
lret
push
cs
out
inc
cltd
fldenv
inc
movsb
ja
cmc
push
mov
stos
mov
dec
push
xchg
sub
ret
or
ja
mov
adc
cmp
loopne
test
or
push
stos
xchg
xchg
std
data16
mov
movsb
cld
mov
out
xchg
xchg
lods
mov
mov
add
lahf
int
movsl
stc
shll
pushf
shll
orb
fbld
in
inc
adc
test
dec
popa
aam
lock
mov
pop
jne
test
notb
xor
in
or
sbb
and
xchg
push
subb
adc
mov
loope
and
push
adc
pop
mov
gs
pop
das
pop
imul
daa
aam
push
cmpsl
mov
fadds
fimull
mov
mov
mov
hlt
lcall
mov
ret
cmpsb
mov
int3
jle
pop
fildl
inc
jne
sub
stc
and
in
ss
cmp
mov
mov
jae
fisttpl
bnd
gs
or
fs
jae
gs
sbb
rorl
rcrb
sbb
pop
arpl
ljmp
mov
ret
and
insl
outsl
xchg
push
mov
stc
xchg
xor
sbb
cmpsb
mov
sub
sbb
test
sub
lret
cmpb
push
lret
or
jle
adc
cmp
or
es
loopne
outsb
adc
enter
push
xchg
outsb
sub
iret
sub
mov
in
jge
jecxz
adc
cmp
out
fs
sub
scas
jecxz
mov
jl
dec
loop
jae
inc
jne
jecxz
fcmovnb
jno
or
jmp
xchg
ds
inc
pop
push
cld
add
insl
lret
inc
jmp
lock
popf
scas
dec
jle
mov
xchg
lds
adc
fwait
je
push
stc
stc
xchg
lds
xchg
cmpsl
adc
inc
repnz
rcrl
mov
cld
lret
and
lret
adc
inc
inc
pop
sub
add
test
mov
mov
sub
out
movsl
and
addr16
mov
ss
ds
stos
sbb
shrl
or
enter
inc
mov
ds
scas
cmp
push
cwtl
mov
ja
aam
stc
cmp
push
and
inc
mov
pop
push
out
pop
inc
jno
and
mov
repnz
push
xchg
scas
cmpsl
fwait
and
jmp
adc
je
mov
sahf
sub
into
or
mov
xchg
aam
inc
pop
and
adc
dec
je
push
jne
push
popa
into
hlt
subb
fcmove
pop
in
lcall
sti
repz
fistpll
insl
xchg
out
ret
imul
fmull
mov
out
xchg
fmul
mov
or
mov
cmp
leave
test
stc
fiaddl
ret
xchg
cmp
push
test
xor
lods
aas
adc
repz
orb
inc
xor
andb
push
mov
cwtl
pusha
scas
pop
push
xorb
lret
icebp
dec
pop
jb
bound
popa
inc
pop
cwtl
jmp
mov
sahf
and
jge
bnd
icebp
add
xor
xor
inc
test
mov
movsl
sub
adc
movsb
push
loop
test
in
mov
inc
iret
sub
mov
int
jle
movsb
insb
in
ljmp
cmp
in
jno
sub
xor
dec
xchg
mov
cmpsl
dec
xor
nop
push
xor
popa
out
inc
fisubl
bound
in
jns
imul
popf
xor
stos
std
push
and
cld
arpl
pop
or
sbb
gs
fwait
cmp
and
mov
fs
int
dec
fsubrp
sahf
inc
fiaddl
sti
mov
cmpb
dec
jle
out
inc
stos
cmp
es
xchg
push
pop
out
ja
repnz
mov
or
mov
xor
or
loopne
inc
xchg
inc
sub
test
adc
lods
adc
push
scas
lea
popl
ss
mov
bound
push
cltd
pop
pop
hlt
popf
stc
mov
sub
adc
lcall
jle
push
dec
repnz
sahf
ljmp
mov
dec
jmp
lea
pop
mov
mov
pop
js
cmp
jmp
mov
cs
movsl
out
cmp
jg
mov
mov
sbb
pop
stos
in
push
sbb
outsb
push
ds
ficoms
add
xchg
addr16
or
pop
jp
imul
in
arpl
push
add
mov
mov
jbe
mov
add
mov
pop
arpl
ljmp
movswl
jecxz
mov
push
pop
aas
das
into
enter
popf
lock
adc
push
dec
xorl
jne
lea
jl
mov
mov
stc
into
and
imul
cmpsl
mov
clc
test
cli
mov
adc
xchg
popa
push
push
int3
or
add
jo
xchg
jne
loop
or
mov
cli
push
imul
fisttpl
jno
stos
adc
movsb
or
or
xor
int
lret
inc
movsl
fs
stos
pop
outsb
inc
ds
xchg
pusha
and
out
mov
push
xchg
adc
pushf
mov
leave
jnp
sbb
shlb
ss
stos
xor
mov
mov
mov
out
fcmovbe
stc
or
ljmp
sub
mov
mov
pop
xchg
adc
jg
sub
fst
add
enter
daa
or
cs
cld
inc
stc
mov
xchg
sub
lock
jae
sub
xor
adc
mov
andl
fwait
hlt
jl
and
mov
rorl
mov
loopne
jl
dec
adc
add
fistpll
add
lods
xchg
aad
testl
das
popa
mov
aad
pop
and
test
jl
bound
ds
dec
cmp
test
mov
xchg
mov
in
dec
fwait
xchg
cltd
mov
cmp
sti
daa
movsl
push
sbb
mov
stos
mov
dec
adc
jmp
in
xor
jmp
data16
enter
mov
sbb
mov
or
dec
mov
xchg
into
and
mov
cs
in
ret
in
call
je
ds
dec
shrl
outsb
mov
xor
inc
dec
and
loopne
lret
add
out
clc
add
sub
pop
cmpb
mov
insb
je
loopne
data16
pop
mov
add
fs
lea
into
stc
jno
insl
push
or
test
popf
mov
orb
add
xchg
and
adc
push
nop
mov
adc
sub
outsb
xor
or
out
adc
adc
pushf
adc
push
out
mov
test
arpl
sar
pop
pop
xchg
icebp
xlat
int
inc
dec
jbe
sbb
xchg
movsb
je
dec
adc
xchg
push
pop
xor
jecxz
test
cs
pop
add
repz
repnz
ret
mov
sbb
dec
mov
leave
addr16
xlat
sbb
js
aaa
call
jmp
add
jne
stos
in
nop
into
scas
xchg
or
ret
jns
add
or
lcall
movsl
fstpl
or
jb
pusha
sbb
add
mov
add
dec
int3
push
add
lret
outsb
mov
mov
stos
cmp
clc
mov
inc
sahf
mov
mulb
sbb
push
into
inc
xchg
sub
popf
pop
mov
jns
push
inc
sbb
mov
dec
sub
nop
or
lret
aaa
cmpsb
repnz
mov
jg
or
stos
sub
scas
lods
jmp
ds
loop,pn
aas
sub
and
fxch
lods
sarb
xor
je
xor
add
fcmove
fisubrs
cmpsb
lahf
cmp
idivl
push
xchg
inc
xlat
rclb
pop
jge
jg
sub
dec
adc
andl
push
in
test
sub
nop
imul
push
xchg
xchg
jo
cmp
iret
inc
enter
hlt
fisttps
arpl
jge
or
movsb
and
dec
lea
sub
xchg
test
insl
mov
add
add
mov
aam
inc
insl
cli
movsl
aam
in
mov
repnz
jnp
repnz
jnp
pusha
imul
jnp
fmull
xor
mov
je
add
mov
push
cmpl
testb
fisubl
in
les
inc
daa
mov
ret
rcrb
dec
arpl
dec
fbstp
lret
pop
and
outsb
and
mov
pushw
icebp
out
sbb
xchg
into
mov
xor
daa
jge
scas
cmp
out
imul
xor
push
cmp
jge
cwtl
repnz
dec
jbe
or
addb
outsb
xchg
xor
jl
pop
out
mov
fs
jbe
lods
ret
fs
cmp
shr
mov
cli
mov
test
bndldx
lods
sbb
lret
adcb
adc
ss
mov
lods
xchg
call
push
pop
mov
lret
lcall
mov
adc
pop
inc
popa
xor
adc
insb
bound
push
nop
and
cwtl
and
fsubrs
jne
notb
jne
aad
jmp
shl
push
aas
add
adc
shlb
jo
cmp
pop
out
mov
inc
ljmp
jl
xchg
or
mov
lahf
mov
mull
aas
sarl
stos
cmp
lds
sbb
or
xchg
sub
bound
sub
sbb
rcrb
push
add
or
fcoml
xchg
cmpsb
mov
push
xor
add
push
into
dec
push
mov
push
dec
pop
imul
push
fistl
cmp
test
pop
dec
xorl
test
ret
lea
add
adcb
mov
push
push
dec
lret
adc
in
push
cmp
add
je
out
mov
inc
dec
aaa
sarb
and
aam
push
cwtl
ljmp
mov
jnp
cs
movsl
rcrl
jo
and
xor
pusha
int3
loop
jecxz
dec
push
pop
dec
jp
cmp
mov
and
pop
das
dec
test
subb
xchg
cmpb
in
push
add
cld
inc
mov
sub
mov
and
mov
test
loop,pn
rcrb
mov
pop
stc
mov
rclb
cld
in
sahf
mov
xchg
in
jne
jae
push
popa
cmc
or
lock
jmp
insl
add
adc
sbb
imul
pop
adc
push
push
add
mov
test
push
popf
sub
and
arpl
in
sti
les
push
mov
pop
dec
xchg
shll
cmp
pop
dec
in
addb
xadd
jp
push
fimuls
subb
push
jl
call
pushf
std
es
jae
sbb
bound
mov
mov
cltd
repz
in
add
imul
add
xor
fidivl
pop
add
xorl
mov
sub
jbe
mov
push
fildl
arpl
adc
pop
cmp
sub
adc
add
test
push
jae
test
mov
and
dec
jbe
icebp
mov
push
out
adc
xor
in
cwtl
or
push
dec
lock
and
push
add
mov
push
cmp
popl
add
xor
jne
fwait
mov
dec
leave
test
pop
push
sbb
inc
pop
xchg
or
cs
mov
adc
jne
mov
adc
pusha
push
jbe
jp
pop
dec
dec
in
jle
inc
imul
insl
mov
pop
lock
shl
or
push
sbb
fnstenv
push
xor
add
mov
fildll
dec
mov
jns
fldl
push
leave
xchg
test
and
clc
movsb
xchg
fiaddl
mov
jmp
add
aas
mov
jl
cmp
mov
lock
push
inc
rorb
outsb
xchg
hlt
pop
je
adc
push
enter
fisubl
lea
sbb
cli
mov
into
xor
cmp
je
shlb
mov
push
push
jns
scas
test
repnz
push
push
dec
jle
and
or
rcl
add
out
out
loope
lock
jbe
imull
inc
dec
daa
es
mov
movsb
xor
push
jp
pop
hlt
pop
daa
sbb
test
adc
movsl
dec
jne
mov
cmp
popl
movsl
movsl
cmp
cmp
and
dec
mov
xchg
out
sar
addr16
sbb
xchg
imul
pop
dec
push
mov
int3
dec
jmp
sbb
insl
xchg
adc
cwtl
jns
in
xchg
imul
shll
aam
scas
stos
fildll
in
push
or
enter
cmp
scas
movsl
sbb
sbbl
bound
mov
cmp
inc
jns
sbb
out
lret
mov
lahf
and
dec
mov
roll
pushf
push
std
mov
mov
rorl
xor
pop
loope
adc
movsl
nop
pop
outsl
push
inc
aas
subl
in
jmp
pop
dec
aad
je
and
xchg
pop
push
clc
xor
sti
mov
pop
out
mov
mov
repnz
jo
orl
test
gs
out
out
cmp
popf
xor
fiaddl
cmp
jne
mov
out
aaa
cmpsb
loopne
in
nop
or
ljmp
fidivrl
adc
xchg
push
xchg
enter
cs
adc
xor
cltd
jb
test
and
sbbb
sti
sub
sti
push
mov
adcb
aaa
pop
sbbl
fs
cltd
jmp
mov
iret
cli
add
mov
mov
inc
movsb
sbb
and
scas
push
inc
jge
sbb
fwait
xor
inc
inc
or
pop
stc
cmpsb
mov
xor
mov
in
iret
out
xchg
shlb
loope
mov
cmc
cmp
pop
icebp
xchg
scas
ja
hlt
out
fstl
add
adc
call
jge
sub
pop
mov
ret
outsb
sbb
dec
xor
ja
xchg
repnz
sti
and
mov
push
push
out
cmpsl
dec
jmp
mov
or
mov
sbb
mov
push
lods
pop
stos
out
add
pushf
gs
inc
push
xchg
push
xchg
inc
ss
pop
add
jg
pop
sub
out
notb
roll
dec
out
cs
sub
aas
cmpsl
mov
xor
and
dec
mov
or
pop
cmp
out
cmp
outsl
out
iret
repnz
xchg
push
inc
rcll
jecxz
lds
adc
das
stos
adc
pop
test
add
jb
mov
jp
aam
xchg
dec
xchg
pop
inc
gs
pop
clc
push
mov
repnz
cmp
outsl
or
add
repz
pop
cmpsl
in
xchg
je
or
ficoml
sbb
xor
in
das
inc
inc
xchg
daa
in
ret
cmpsb
mov
cwtl
jne
cmp
daa
inc
hlt
inc
icebp
scas
xor
pop
cmp
mov
testb
pusha
movb
imul
mov
pusha
insl
or
push
push
xor
in
push
and
clc
loopne
insl
in
mov
cmp
lods
and
test
or
xchg
adc
adc
xor
pop
jp
add
pop
xor
mov
push
pusha
jmp
mov
popa
call
xor
xor
sbb
les
test
mov
cli
lea
cld
clc
repnz
mov
addr16
push
mov
icebp
scas
in
jg
fwait
push
out
int3
fildll
lea
daa
bound
std
push
push
xor
push
inc
clc
ret
push
jge
fsubrl
loope
sub
jl
stos
fwait
out
iret
cmp
mov
das
and
mov
add
and
push
push
sbb
dec
mov
lea
xchg
lds
dec
sbb
add
mov
into
mov
pop
cmp
pop
xor
bound
push
test
outsb
dec
sub
stos
insb
mov
hlt
sub
xor
jp
mov
out
jb
sub
cltd
imul
mov
mov
mov
sbb
or
in
mov
int3
iret
lds
mov
pop
les
mov
mov
and
push
sbb
inc
aad
cmp
outsl
rclb
int3
mov
in
mov
mov
enter
insb
popf
sbb
pop
int3
jb
jnp
sub
loopne
insl
in
and
sub
movsb
xchg
xchg
sub
push
mov
test
pop
cltd
das
pusha
test
imul
xchg
jne
subb
lcall
inc
adc
icebp
inc
push
push
jmp
push
push
mov
sbb
or
jge
cltd
int
dec
mov
pop
lock
mov
sbb
adc
dec
xor
aam
push
in
dec
pushf
add
inc
xchg
mov
mov
adc
jmp
pop
ljmp
cmp
test
arpl
jmp
test
jbe
les
jmp
mov
popl
cmp
inc
icebp
sub
leave
jge
cs
aad
addr16
cs
push
mov
push
mov
outsb
and
inc
rclb
in
mov
mov
adc
add
out
sbb
idivb
add
cmp
out
inc
decb
lea
mov
jp
sarb
pop
test
pop
push
sbb
mov
or
repz
loope
jbe
addr16
push
in
jmp
lods
shrl
mov
mov
and
mov
repz
push
mov
ss
xor
cs
dec
sbb
test
cmp
shl
push
push
iret
scas
and
cld
scas
jnp
add
mov
sub
arpl
and
mov
xchg
inc
inc
popf
movsl
mov
mov
or
test
test
add
pusha
jbe
cmp
aam
and
dec
pop
mov
cltd
daa
fnstcw
mov
inc
xchg
and
outsb
jp
out
adc
insb
stc
add
push
in
mov
inc
jbe
cs
je
inc
popa
movsl
pop
push
repz
dec
cmp
and
cmp
add
imul
leave
push
inc
mov
mov
and
sub
pop
cli
sub
or
repz
mov
lods
push
pop
xor
jg
jno
outsb
xchg
out
enter
xor
xlat
xchg
test
aaa
jb
sbb
xchg
js
pop
movsl
sbb
subb
jp
rclb
xlat
mov
iret
inc
xchg
lea
lret
push
int3
mov
jbe
sub
xchg
in
dec
cmp
cmp
jb
push
pop
lret
ljmp
push
inc
jae
jne
stos
add
push
cmp
pop
out
mov
mov
sub
pop
repz
cld
call
mov
in
js
testl
cmpsl
add
cmp
jae,pn
mov
xor
cmp
sub
mov
sbb
inc
dec
outsb
xchg
xlat
push
inc
add
xchg
test
cmp
push
push
adc
clc
ds
xor
dec
inc
jb
mov
and
daa
loop
das
xchg
aam
or
xor
sub
mov
sbb
dec
sar
push
xchg
in
call
push
fisubrl
fs
test
adc
or
cmp
add
add
or
xchg
xchg
mov
mov
dec
out
inc
cli
test
cld
sub
shll
fnstcw
mov
mov
xor
cld
notb
pop
add
adcl
xor
outsl
dec
mov
mov
inc
arpl
in
fs
cwtl
daa
sub
sti
js
ljmp
leave
rcrl
mov
fadd
sub
out
jb,pn
into
xchg
add
nop
mov
cli
in
or
jge
mov
mov
lahf
jge
inc
jmp
movsb
inc
jnp
dec
sbb
sub
pushf
faddl
cmp
jne
nop
inc
xchg
inc
pushf
js
jecxz
cs
mov
sti
out
sub
jmp
xor
xlat
and
sbb
je
and
jmp
movsb
or
jp
or
pop
movsb
and
movsl
lcall
jecxz
cmp
cmp
aam
insb
lret
xor
jo
fs
test
adc
add
lods
mov
in
stos
out
sbb
and
jg
rcll
push
cmp
hlt
imul
adc
cmc
xlat
popf
testl
sub
shlb
jno
movsb
sub
jns
aas
cmp
ss
fnsave
mov
adc
out
ljmp
loope
adc
mulb
xchg
je
mov
mov
outsl
or
cs
insb
test
jne
int
push
and
dec
rcl
sbb
lock
sbb
xor
xchg
xor
rcll
cmp
into
je
xchg
int3
jo
outsb
jp
cmpsl
lret
iret
push
inc
fistps
pop
test
mov
or
lea
sti
push
push
mov
mov
cli
inc
mov
add
xchg
dec
xchg
jg
fcoml
lahf
shr
adc
test
xchg
cli
dec
ja
pop
stos
xchg
sarl
xchg
orb
lea
sbb
mov
es
les
add
fistpl
push
or
xlat
inc
inc
cmp
mov
add
sub
cltd
adc
aad
sub
adc
lods
imul
mov
xchg
call
fld
xchg
js
jecxz
test
cmp
cld
into
ljmp
pushf
test
mov
pop
xor
aas
and
cmpxchg
adc
rorb
xchg
sub
push
pop
out
scas
inc
ficoms
jecxz
push
ret
jle
pop
or
inc
mov
mov
cld
add
popa
mov
push
lods
ret
daa
xor
sbb
sub
push
pop
mov
gs
push
inc
nop
out
add
mov
jno
js
enter
ret
cmpsb
add
nop
xchg
test
jb
ljmp
stos
add
cmp
leave
insl
call
push
jb
mull
xchg
popa
add
fbstp
pop
gs
aad
mov
xchg
movsl
daa
cmp
sbbl
daa
je
cmp
cmpsl
sub
or
push
mov
cld
stos
jo
fildl
pop
xchg
lods
push
dec
jecxz
lods
jae
mov
je
mov
pop
aad
stc
mov
jb
pushf
pop
or
jne
idivl
lea
push
xchg
lahf
stos
cmc
xchg
pop
xorb
or
pop
inc
bound
pop
xchg
xchg
dec
test
xor
dec
ss
jb
in
repnz
xchg
in
mov
aad
ja
pop
jo
push
xchg
mov
in
jge
clc
stos
inc
inc
lcall
mov
cs
ret
mov
enter
fsubr
mov
or
push
sbb
int3
push
add
cmp
push
sub
mov
jae
mov
dec
and
push
shlb
cwtl
adc
pop
xchg
rclb
inc
xor
mov
jge
popa
repnz
loope
insb
jno
sbb
xor
int
sbb
or
and
icebp
cmp
sbbl
aad
pop
enter
lret
cwtl
into
scas
mov
mov
out
dec
sub
push
bound
loop
cli
cmp
inc
in
addr16
cmp
fld
test
js
and
jmp
xchg
test
xlat
and
and
shll
jge
jge
loopne
inc
mov
push
and
adcb
adc
filds
and
stos
test
or
enter
lea
jl
push
or
scas
jg
mov
stc
jo
orb
orl
add
rol
lahf
dec
mov
mov
sub
shr
out
adc
jns
xchg
shll
xor
cs
cs
xchg
pop
sahf
sub
mov
in
shlb
push
enter
cltd
sbb
daa
and
sub
lret
or
jnp
cld
sbb
push
popf
xor
push
pusha
cmp
fidivs
mov
mov
push
cmpsb
insb
or
pop
push
mov
inc
xchg
push
test
scas
xchg
mov
imul
sub
push
mov
pop
shll
into
lea
and
or
pop
inc
test
jl
test
ror
mov
cmpsb
add
jno
jns
fstp
sub
mov
xchg
mov
lea
jno
push
cmp
cmp
fwait
cltd
mov
push
ljmp
xor
or
mov
arpl
or
adc
jo
ja
fnstcw
rcl
and
fcomip
repz
add
sbb
push
neg
mov
mov
aam
sbb
sahf
cmpsb
popf
jae
jo
inc
andb
jo
mov
cmp
sub
stos
bound
inc
mov
xchg
aaa
repz
stc
test
xorb
push
cmp
pop
in
xchg
add
jb
int3
pushf
inc
addr16
pop
mov
sbb
xchg
push
add
stos
push
adc
scas
adc
dec
push
fiadds
jecxz
loop
mov
pop
jmp
mov
pop
ror
repnz
nop
xchg
sub
jmp
sbb
rcr
xchg
sub
out
inc
pop
mov
cmpl
test
adc
add
mov
nop
incb
loopne
pop
push
jnp
scas
das
add
lahf
inc
jbe
loopne
divl
je
fs
out
leave
jne
or
lahf
rclb
aad
lock
inc
std
loopne
pushf
lock
pop
addr16
insb
adc
sub
rcl
daa
jo
adc
les
jb
fcompl
pop
shrl
mov
inc
inc
rcll
bound
jmp
jmp
dec
imul
push
movsb
ret
hlt
sbb
mov
hlt
inc
mov
push
lods
jp
fnstenv
dec
mov
fs
sub
or
cmp
cmp
dec
mov
push
outsl
mov
xchg
and
in
aaa
int
jmp
in
sbb
mov
or
fmuls
xorl
push
loopne
inc
dec
adc
punpckhwd
cwtl
enter
movsl
add
ljmp
outsb
or
jmp
lods
pop
nop
lcall
sub
xor
push
fstpt
int
pop
mov
sti
pop
filds
out
mov
pop
arpl
ret
jg
outsl
arpl
or
mov
je
mov
xor
pop
add
inc
xor
jmp
jp
in
add
shrl
mov
mov
aam
lcall
cmpsb
fwait
sbb
pop
cltd
push
ret
dec
adc
rcrl
xchg
cmpsl
addl
repnz
shl
inc
jne
ljmp
pop
pop
iret
xor
mov
xor
lods
inc
dec
addr16
repz
fcmovbe
in
jns
ret
adc
stos
out
cmpb
pusha
and
sbb
or
mov
mov
cmp
inc
mov
ljmp
insb
outsl
mov
push
push
dec
imul
test
repz
mov
mov
mov
stos
push
adc
add
push
inc
sbb
and
mov
js
xor
mov
sahf
in
cld
jle
mov
popa
mov
adc
cmp
cmp
xor
dec
and
xchg
das
sub
xor
pop
mov
mov
jmp
das
sbb
xor
cmp
and
shll
dec
idivl
mov
mov
mov
stos
add
jmp
das
lcall
xchg
divb
sbb
jg
cmpsl
sti
mov
push
lret
sub
inc
mov
mov
movsl
inc
fnstsw
xor
mov
pop
shr
lds
outsb
sbb
sahf
jge
lds
scas
lock
aad
fstps
mov
sbb
hlt
scas
jg
cltd
adc
mov
out
cs
cmp
or
andl
cltd
push
stos
pusha
push
jle
jmp
inc
shr
pop
jg
outsl
cld
popf
mov
imul
adc
mov
pushf
xor
movsb
xchg
adc
xchg
fisubrs
pop
bound
push
ja
jne
jne
sub
aaa
push
push
in
sahf
add
push
inc
pop
adc
subb
ss
fnstenv
adc
cmpsl
mov
xorb
out
outsw
push
jmp
fbstp
lds
shl
mov
jge
clc
popa
pushf
inc
orl
jecxz
xchg
int
in
jb
icebp
inc
shl
inc
sbb
add
xor
xchg
jp
fsubrl
pop
fwait
xchg
mov
lret
cmp
mov
xor
push
cld
aad
xchg
cmp
out
jae
insl
and
imul
lcall
adc
neg
push
hlt
push
and
add
sti
xlat
pop
cmp
bound
mov
xchg
data16
dec
repz
mov
daa
ja
scas
pushl
out
ret
jb
mov
and
out
fwait
movsl
out
sbb
sub
sub
xor
mov
mov
jbe
pop
and
andl
cmc
pop
in
adc
xor
aas
cld
enter
or
imul
stos
mov
ss
in
fidivrl
and
stc
sbb
repnz
les
enter
dec
fwait
test
loop
icebp
lock
dec
mov
pop
and
pop
fldt
subl
int3
jno
pop
pop
shrb
jb
push
stos
or
mov
cld
std
test
sbb
pop
add
mov
out
int
push
or
mov
cmp
inc
mov
xor
jp
shl
ret
xor
jae
mov
enter
les
ret
push
adc
jo
and
imul
xor
repz
repnz
jnp
dec
and
fwait
fs
inc
or
sarl
or
cs
mov
lock
xchg
in
cmc
add
leave
pushf
inc
push
xlat
fwait
mov
inc
push
repnz
jle
gs
mov
lret
xor
and
push
adcb
dec
outsb
xchg
pop
xchg
mov
mov
fisubl
mov
nop
mov
push
mov
stc
ret
cld
enter
lods
push
stos
adc
ljmp
adc
cmp
ss
icebp
and
pop
sbb
inc
jecxz
jae
xchg
sbb
data16
lock
jecxz
filds
and
sub
in
jl
jge
lods
pop
inc
dec
sbb
ror
add
je
pop
iret
std
add
aad
and
mov
aas
insb
mov
mov
movsl
mov
push
mov
popf
shrb
inc
jb
dec
mov
push
pop
xchg
leave
xor
sbb
sbb
dec
xchg
mov
add
cli
in
popa
mov
outsl
mov
jg
out
pusha
xchg
dec
stos
jbe
cmp
repz
adc
cltd
dec
fwait
push
mov
pop
pop
inc
cmp
rorb
fidivrs
je
inc
stc
push
cltd
sahf
xor
pushl
mov
fsubrl
out
out
mov
cmp
or
sbb
xchg
add
or
pop
orl
mov
inc
imul
mov
sbb
cmp
orb
mov
dec
lods
lods
into
das
lods
adc
cmp
xchg
cmp
movsl
cs
pop
movsb
clc
ss
jge
mov
cmpsb
ja
xchg
ja
bound
shll
cwtl
outsb
enter
pop
dec
and
sbbl
fstl
cmp
push
lret
aam
cli
pusha
sub
adc
mull
out
add
xor
sub
frstor
cs
sub
cmp
insl
pop
cltd
movsl
add
inc
gs
jae
sub
je
call
clc
dec
dec
sub
mov
xchg
data16
xchg
and
pop
cmp
ljmp
xchg
movb
sahf
push
lods
repz
pop
xor
fwait
je
xor
dec
insb
adc
push
out
push
lock
mov
out
testl
push
or
and
jl
sarb
push
aad
xchg
add
adc
cld
cmp
add
sub
lret
push
aas
mov
sub
pop
cmp
cltd
das
mov
aaa
pop
xchg
jmp
dec
and
xchg
and
aad
int
inc
push
dec
int
pop
jge
push
mov
iret
popf
iret
inc
imul
sbb
sarb
inc
dec
aam
adc
push
rorl
clc
push
test
cmp
aad
sub
sub
add
cli
mov
pusha
jo
jns
popa
sbb
pusha
mov
mov
mov
cmpsl
sub
test
loope
pop
pusha
mov
les
into
mov
aas
test
mov
cmpsl
arpl
cmc
cld
test
xchg
std
mov
add
ficompl
lcall
push
sbb
sbb
push
dec
pushf
cmpsb
adc
xchg
fwait
jmp
mov
pop
xchg
cmp
aam
lds
mov
inc
add
xchg
jb
clc
jl
ret
hlt
jmp
sbb
mov
add
cmc
dec
es
dec
mov
mov
das
push
lea
mov
fsubr
sub
sub
jbe
cmp
jp
lcall
mov
pop
sub
sbb
test
push
cwtl
pusha
icebp
pop
into
sbb
push
pop
mov
or
mov
movsb
push
daa
insl
out
cld
jmp
jnp
and
dec
int
jb
addr16
insb
aaa
cmp
push
push
ss
mov
lcall
jp
fwait
test
push
mov
cmc
xor
fsubr
icebp
jb
sarb
clc
jg
cli
in
mov
inc
hlt
ror
xor
sahf
mov
insl
inc
loop
push
rorb
pop
or
cwtl
aas
xor
roll
movsb
lods
testl
fdivrs
adc
aas
js
cmc
in
sbb
test
xchg
addr16
test
mov
shrb
push
loopne
cmpsb
jecxz
pop
sbb
das
mov
out
sub
lcall
dec
add
mov
adc
lret
jg
iret
xchg
xlat
sub
xchg
jbe
shlb
es
sti
dec
adc
fwait
neg
inc
add
mov
xchg
popf
jecxz
adc
xlat
outsl
push
adc
jecxz
into
lcall
xchg
call
xchg
test
fmuls
movsb
aaa
shll
imul
mov
or
pop
cmpb
test
call
dec
loopne
sub
fisttps
and
and
into
ret
mov
cld
popf
jns
or
fst
sbb
fsubl
insl
push
add
jno
jp
aas
test
loopne
aad
mov
out
dec
mov
imul
insl
das
sar
mulb
daa
insb
xrelease
cmp
bnd
pop
les
lret
hlt
mov
lahf
mov
scas
mov
jle
scas
jb
fisubrs
ss
jge
ficomps
in
loop
cld
loope
push
std
hlt
pop
inc
push
xchg
cwtl
dec
mov
add
movsl
sub
test
mov
jp
adc
fcompl
std
movsl
mov
test
cmp
xor
hlt
inc
and
fbstp
add
out
mov
insl
icebp
and
sub
repnz
in
mov
aad
add
adc
push
arpl
rclb
lock
lcall
sbb
pop
mov
sub
lea
andb
cmp
call
push
pushf
cmp
sbb
cmp
mov
icebp
mov
adc
inc
andb
lds
pop
inc
mov
mov
inc
insb
adc
jecxz
mov
faddl
xor
aam
jmp
jle
mov
sbb
es
inc
add
sbb
daa
icebp
push
in
push
mov
adc
xor
sahf
pusha
insb
sub
mov
jae
jbe
cmpsb
in
addr16
dec
cmp
sbb
jl
out
dec
lock
nop
fiaddl
fs
jle
arpl
sub
pop
insb
push
sbb
inc
rorl
dec
jae
add
cmpsb
or
out
mov
mov
test
pop
cld
lods
iret
adc
std
pop
xor
out
mov
sub
cmp
dec
pop
popf
sbb
cld
pop
add
call
mov
test
mov
xor
aam
dec
sbb
orb
iret
and
inc
outsb
stos
sub
xor
cmp
sub
jg
fs
adc
mov
mov
imul
mov
fsubrs
imul
cmc
push
jae
mov
lea
xchg
cmp
mov
stos
pop
in
cs
lret
call
push
mov
ljmp
mov
daa
stos
xor
int3
popa
icebp
addr16
mov
xor
sti
outsb
cmpsb
popf
stos
mov
shll
cmp
jo
adc
cwtl
pusha
outsb
stos
mov
push
xor
test
xchg
dec
scas
inc
mov
adc
es
rcrl
pop
ljmp
and
or
aas
dec
daa
call
pop
add
leave
xchg
mov
cmc
sarb
xor
mov
ret
nop
jno
aam
pop
ss
jl
stc
popf
hlt
inc
sub
sub
mov
das
inc
rol
cltd
dec
jo
pop
mov
jbe
cmpsb
cmpsb
outsb
mov
pop
fs
jp
inc
insl
dec
add
jecxz
push
pop
cmp
addr16
mov
mov
mov
lods
or
subb
sbb
lcall
inc
xlat
xor
in
inc
stc
sahf
xorb
push
jnp
xchg
mov
pop
xrelease
sti
mov
movsw
sarl
test
shrb
adc
cmp
cld
scas
sub
rolb
mov
std
mov
xor
sbbl
dec
movsb
xor
rorl
add
mov
scas
lret
pop
dec
js
outsb
scas
cmp
icebp
inc
dec
sbb
push
mov
xor
gs
int3
data16
cmp
pop
jp
mov
fisttps
push
and
ret
stos
mov
xchg
int
sub
sbb
xor
enter
xchg
xlat
xchg
jmp
and
xchg
stos
sbb
nop
adc
push
mov
push
and
push
xor
lret
xor
stos
inc
and
mov
inc
imul
xor
rcrl
xchg
mov
adc
xchg
push
add
loopne
xchg
pop
cli
inc
jl
pop
cmp
mov
movsl
aas
or
jge
push
pop
lods
lret
sub
mov
outsl
xor
jecxz
rcrb
repz
dec
rorl
out
scas
and
xchg
mov
dec
insl
leave
and
lds
inc
adc
lods
movsl
jl
push
sub
or
push
mov
dec
mov
jo
sarl
insl
and
arpl
ffreep
outsb
pop
or
insl
stos
mov
mov
push
sbb
push
xchg
popf
sub
insb
lret
jns
pop
mov
pop
sbb
enter
ja
insl
rcrl
lods
daa
test
xchg
inc
xor
popa
cmovs
mov
insl
pop
and
ja
fs
ret
in
sbb
adc
arpl
xor
dec
sbb
cmp
jnp
jbe
lds
int
cmpsl
mov
fisubrl
dec
mov
xor
outsb
cmc
inc
xlat
push
or
in
adc
pop
aas
xchg
inc
cmp
ret
pop
test
and
in
sbb
cmpsl
and
repz
adc
shrb
mov
mov
add
sbb
adc
or
movl
cmp
sub
ret
dec
xlat
loopne
ret
and
in
add
sub
lods
xchg
cli
lea
jl
out
sbbl
ret
adc
iret
push
jbe
sarb
hlt
or
arpl
std
outsl
mov
leave
iret
or
dec
jmp
movsl
xchg
fnstsw
loop
dec
xor
arpl
sbb
cmp
xchg
repnz
mov
movsl
cmp
nop
stos
xor
fs
hlt
inc
xchg
cli
in
out
mov
lods
pop
std
rol
jno
pop
pop
std
inc
popa
xchg
adc
clc
adc
jne
ss
je
iret
dec
outsl
dec
mov
cmp
mov
and
les
fcomps
insb
mov
addl
sbbb
mov
ret
xchg
into
adcb
xchg
sub
mov
shll
push
pusha
xchg
push
repz
add
xor
fsts
pushl
xor
pop
arpl
push
cld
ret
fmull
inc
cmp
aas
xor
loop
xor
and
push
push
imul
data16
sbb
jns
cld
imul
sbb
mov
mov
loopne
stos
cmp
mov
mov
jmp
xchg
inc
sbb
shrl
int3
pushl
fistps
test
inc
inc
xchg
shll
scas
sub
jo
test
repz
js
sub
or
es
hlt
push
sub
or
xor
add
fmuls
arpl
test
dec
dec
testl
adc
cmp
push
loop
jno
push
cli
xchg
hlt
xchg
add
leave
push
fldt
pop
mov
int
pop
insl
pop
addr16
pusha
int
int
daa
jb
out
or
xor
stc
rcl
jno,pn
dec
icebp
stc
add
aad
repnz
and
push
orb
or
mov
jecxz
jg
mov
in
xor
pop
scas
pop
push
mov
lods
inc
mov
shll
cmpsl
adc
std
inc
daa
out
mov
outsl
push
cmpb
in
adcl
dec
ljmp
mov
loope
mov
xor
mov
push
adc
cmp
jg
lret
push
iret
setno
test
out
add
and
or
lea
push
js
mov
ss
fxch
mov
dec
push
mov
fiaddl
fistl
sub
or
lods
mov
iret
sub
jb
ds
inc
add
xchg
fnstenv
lcall
adc
dec
jecxz
push
push
cwtl
sahf
cmpl
sbb
loope
cmpsl
dec
adc
xor
pop
push
iret
data16
xor
aad
pusha
push
and
sub
nop
cmpsl
fsubs
subps
shrl
xlat
lods
hlt
sub
xrelease
fwait
or
adc
or
or
adc
aad
jns
cs
xor
sbbb
in
sbb
pop
repz
les
mov
pop
pop
incb
adc
mov
stc
jne
mov
orl
mov
adc
in
pop
enter
lods
mov
rcrw
ja
jnp
popf
add
in
mov
jb
loopne
ret
dec
in
fidivrl
lahf
and
add
push
mov
jne
jecxz
aaa
in
mov
sbb
scas
jle
mov
ja
aas
lock
loope
aam
test
dec
mov
sbb
jae
mov
jp
into
mov
je
xchg
pusha
or
mov
loop
fwait
leave
mov
mov
sbb
fmul
imul
mov
cmp
push
jbe
jno
mov
movsb
dec
scas
dec
add
daa
mov
fisubl
xchg
push
sub
sub
jns
shrl
int3
adc
fdivl
push
mov
mov
mov
cld
cli
lcall
notb
push
lock
mov
std
xchg
xchg
fs
jg
xchg
cmpsb
xchg
popa
iret
sbb
cmp
jb
mov
sti
and
fidivl
mov
jmp
cmp
cmpsb
call
add
fwait
adc
ljmp
pusha
fisubrl
push
mov
jl
xor
lret
sub
xor
sub
inc
rol
lret
ljmp
xchg
lret
jge
mov
repz
fcomp
push
mov
push
mov
in
inc
dec
jo
xlat
lds
or
lock
mov
js
shlb
fistpll
ljmp
add
mov
push
jae
cmp
int
xchg
aaa
daa
xchg
outsb
mov
jge
cmp
call
js
je
ja
mov
mov
sbbb
add
inc
or
and
stos
mov
mov
sbbb
cli
and
mov
cld
mov
xor
stos
or
cli
in
jmp
test
fldcw
out
mov
cs
dec
xchg
pushf
jnp
in
popa
outsb
or
sub
outsb
scas
out
outsb
mov
sbb
int
jae
pop
addr16
int3
push
je
daa
filds
stc
adc
add
add
mov
mov
inc
insb
js
xchg
push
and
in
es
xor
jge
mov
imul
sbb
mov
ds
add
andl
sbb
and
sub
xchg
pop
and
cmp
arpl
xchg
mov
sub
and
pop
push
push
mov
arpl
lods
fdivs
mov
cmp
xchg
xchg
mov
xchg
test
push
scas
xor
divl
ss
adc
push
dec
out
gs
cmp
adc
arpl
cmp
fldl2t
aas
inc
clc
repnz
fwait
jmp
jns
mov
adc
push
cmp
mov
mov
xchg
dec
sbb
xorl
xor
addl
mov
sub
dec
neg
mov
cmp
adc
scas
cmp
enter
cli
mov
call
test
xchg
je
sub
sub
test
sti
add
mov
xlat
insb
xchg
xor
shl
dec
jg
add
popa
sub
xor
lea
jnp
lret
icebp
shlb
add
ret
and
movsl
xchg
mov
ret
adc
stc
xchg
xchg
lret
dec
scas
sub
addr16
and
fisubrl
jb
arpl
adc
adc
cmp
clc
pop
xchg
fwait
pop
push
pop
cmpsl
cwtl
in
jg
out
inc
aam
mov
fwait
loop
loopne,pt
cs
inc
mov
xor
add
sbb
jge
mul
pop
fbld
fwait
mov
fcompl
roll
mov
xchg
loop
loope
mov
setb
mov
punpcklbw
inc
out
movsl
mov
mov
std
jp
mov
cmpsb
fimull
dec
shlb
adc
pop
mov
fcoml
test
and
loope
inc
out
ret
or
int
mov
mov
scas
cmc
nop
inc
insl
fs
test
fsubrl
mov
in
dec
loopne
data16
xlat
cld
in
or
xchg
imul
outsl
inc
lret
mov
pop
pop
cmp
sbb
sub
int
push
das
mov
cmpsb
fld
lcall
mov
js
stos
or
inc
mov
cmp
or
sahf
stos
push
xor
or
pop
adc
pushf
mov
loopne
inc
adc
mov
cmp
je
outsb
cs
loopne
loop
mull
sub
add
aad
xor
loopne
mov
dec
ret
pushf
outsl
cli
mov
cmp
mov
call
pop
push
mov
sbb
cmpsl
je
aas
xor
mov
or
in
xchg
cmp
shlb
inc
fisubrs
xchg
imul
ret
popa
sub
xchg
fsts
jns
ret
mov
push
nop
jno
rol
xor
mov
pushf
adc
mov
adc
loope
loop
push
shl
dec
mov
adc
pop
test
jno
jmp
das
xchg
ret
outsl
push
lea
jns
mov
mov
inc
mov
movsb
xor
stc
adc
xor
push
xor
xlat
outsl
mov
fists
push
dec
fsubr
fistl
enter
movsl
jb
lea
lock
adc
pushf
jp
jecxz
inc
out
shl
jb
out
hlt
jmp
inc
mov
sbb
cmp
cmp
dec
mov
push
jne
imul
jno
sti
addr16
test
cs
pop
movsl
mov
inc
divb
je
sahf
adc
mov
push
dec
movsb
stos
lcall
xor
fnstcw
test
popa
fadd
negb
arpl
dec
mov
jmp
mov
xchg
and
pusha
sub
iret
cmp
and
arpl
lds
andl
pop
xchg
imul
pop
jecxz
out
cmp
xor
xor
or
je
push
add
outsl
mov
stos
lods
xchg
xchg
xlat
fisttpl
push
sbb
pop
aas
xor
sbb
pop
insl
xor
in
push
and
rcl
or
xchg
in
mov
repz
hlt
mov
push
das
mov
or
jbe
and
push
and
push
sub
ss
sbb
pop
sahf
das
push
mov
movsl
add
sahf
stos
jae
fdivs
loop
xlat
and
filds
sar
lock
aaa
roll
push
stos
inc
lods
cmp
cmp
addl
xor
cld
outsl
sub
push
and
xor
repz
repnz
jno
out
pop
fwait
xor
mov
cwtl
popf
int
inc
iret
das
out
fistps
stos
xor
xor
int3
mov
in
inc
mov
dec
mov
push
pop
or
dec
mov
jne
mov
les
and
outsb
xor
repz
jp
pop
mov
das
lahf
mov
sbb
sub
in
cmpsl
mov
mov
jmp
loop
add
rorb
jno
mov
xor
inc
xor
arpl
push
dec
adc
bound
sbb
incl
xor
cs
push
hlt
in
adc
or
or
pop
cmc
int3
jnp
ljmp
int
in
outsl
sbb
rclb
ds
xchg
inc
sub
mov
jno
lahf
sub
pop
mov
ljmp
es
xor
inc
mov
xchg
sbb
xor
or
cmpsb
or
int
or
mov
pop
fdivs
mov
mov
sbb
inc
lahf
jg
add
aam
push
dec
aas
insl
fs
cmc
inc
mov
into
push
fdivs
lods
stos
sub
fwait
dec
testl
jne
cmp
cwtl
push
fdiv
jmp
jb
call
in
pop
and
or
lods
or
inc
lods
insl
stos
loop
xchg
jle
mov
mov
mov
ja
xchg
into
stos
cmpsl
scas
ret
adc
shl
lock
movsb
sbb
ds
dec
xchg
out
jne
call
insb
insl
xor
adcb
mov
movsb
xchg
popa
mov
inc
add
mov
ds
push
sub
pushf
test
or
pop
lcall
pushf
mov
dec
popa
jg
mov
loope
rorb
in
ss
push
fst
mov
xchg
mov
xchg
fwait
sti
dec
xchg
out
xor
jae
jne
cs
bound
add
lret
cmp
or
push
daa
and
rol
out
push
cmp
ds
out
push
jle
inc
es
dec
push
pop
fiadds
lea
push
test
add
je
and
cmp
xchg
testl
mov
or
mov
ljmp
divps
jmp
in
pmaxub
jge
cmp
push
in
dec
adc
cmp
ljmp
mov
gs
mov
mov
mov
xchg
daa
leave
cmpsl
cmp
sar
clc
mov
imul
inc
ss
adcb
pop
mov
cmp
jmp
push
xor
inc
rol
lret
cmp
jbe
mov
cmp
adc
movsl
xchg
divl
xchg
lock
cmp
test
divb
sub
jae
test
aad
in
jno
inc
subl
or
call
mov
cmp
scas
mov
sbb
sahf
repnz
and
push
aas
std
xchg
cwtl
push
lds
test
sub
outsb
sub
lret
adc
and
adc
xor
push
lcall
leave
sub
sbb
out
xor
icebp
pop
jge
nop
std
mov
mov
mulb
push
cs
pop
stc
lods
iret
xlat
cmp
mov
push
cwtl
mov
mov
inc
dec
ljmp
push
in
adc
xchg
js
dec
out
push
sub
or
add
mov
scas
jns
lock
push
sahf
enter
addr16
ja
sbb
and
and
mov
imul
cli
sbb
test
imul
mov
mov
mov
lcall
xlat
mov
stos
into
lea
mov
scas
cltd
sub
mov
jle
xchg
jae
lods
outsb
fcomip
cmp
jno
test
popf
or
pop
cwtl
lods
das
jle
inc
jo
stos
push
mov
cs
lods
aaa
fdivrs
int
pop
test
in
pop
iret
lret
mov
aam
xor
fcoms
aaa
lods
cld
xor
test
mov
pop
jmp
outsb
enter
lea
in
mov
test
ds
ret
xor
out
push
jmp
in
ret
icebp
mov
out
push
and
cmp
dec
popf
movsl
sbb
and
loop
ss
xor
ret
scas
cld
push
pop
loopne
testl
mov
insb
xchg
inc
mov
lods
les
repz
out
or
aaa
sub
addr16
fstl
fdivrs
pushf
fimull
mov
arpl
vpshldq
mov
and
popa
out
adc
jl
add
cmp
mov
xlat
scas
and
imul
sbb
ljmp
out
or
incl
adc
arpl
xchg
inc
jnp
or
mov
xor
js
sbb
mov
xchg
push
fistl
es
and
cmp
loopne
add
subb
xor
pop
lret
xor
xor
pop
test
jmp
sti
xor
test
rcr
mov
dec
dec
in
jbe
and
push
adc
bnd
imul
xchg
test
fcoml
lcall
das
jo
repnz
sub
add
mov
mov
daa
sbb
jg
add
dec
add
stos
mov
cmc
inc
sbbl
jl
jae
push
dec
rolb
mov
rcll
rcl
mov
jl
and
add
mov
or
xchg
pop
int
dec
adc
xor
cmpsb
xor
pop
lods
out
pop
data16
xlat
frstor
into
mov
lds
inc
aaa
sahf
xchg
cmp
neg
add
xor
fnsave
out
cmp
sub
movsl
mov
jbe
gs
push
cwtl
jg
test
mov
adc
mov
push
push
mov
jge
pop
test
and
pop
adcl
ret
pop
dec
cmp
rorb
adc
mov
stc
in
fs
das
js
jl
enter
je
inc
movsl
int3
xchg
ret
sti
test
sbb
xchg
jg
sbb
test
cmpsb
imul
in
addb
xchg
add
adc
adc
cwtl
cld
sbb
ss
jmp
jb
jnp
add
out
mov
stos
aad
mov
enter
dec
mov
rcl
pop
mov
pop
mov
add
dec
xchg
add
cmpsl
faddl
in
addl
cmp
inc
mov
inc
mov
repz
mov
pop
dec
ss
xchg
test
aam
sub
insl
mov
mov
mov
push
insb
inc
insb
lods
mov
es
mov
popa
lret
mov
movsb
cltd
dec
stos
loop
gs
inc
ds
jg
adc
mov
inc
mov
aas
insb
and
repz
dec
cmpxchg
fildl
push
jae
es
mov
push
mov
add
adc
cmp
roll
in
insb
jle
push
mov
fsubr
add
aad
mov
inc
rcr
push
cld
sbb
xchg
jns
popf
mov
sbb
lcall
aaa
bound
inc
or
popf
or
sub
lret
cwtl
or
mov
je
fnstsw
add
loope
std
dec
add
cmc
stos
out
push
and
or
notl
jns
jns
sbb
popa
sbb
mov
mov
mov
ret
sub
mov
jnp
fiaddl
bound
testl
cmp
mov
pop
nop
jmp
push
fcoml
dec
xchg
mov
xor
xchg
cmp
dec
out
nop
and
or
push
je
ja
hlt
lcall
pop
dec
xchg
xor
aas
lds
inc
lock
imul
pop
lcall
mov
movsb
fidivl
jmp
and
add
lcall
push
aad
enter
ret
subb
inc
jae
ret
jp
lret
lock
in
mov
mov
cmp
mov
lahf
movsb
pop
pop
push
mov
movsl
mov
inc
aam
push
xor
imul
enter
in
xor
jp
ljmp
and
mulb
push
dec
loopne
mov
popa
andl
mov
push
lret
jns
movsb
xor
scas
add
divb
sbb
cmp
sti
xchg
xchg
jmp
lcall
and
std
sbb
ficoms
lcall
and
out
pop
repnz
shlb
je
sub
in
test
loop
inc
cmp
dec
sahf
lds
ret
or
sub
and
imul
shrl
pop
xchg
mov
mov
enter
mov
jno
lods
lea
cmpl
enter
sub
dec
jg
mov
mov
mov
fcmovbe
loop
mov
pop
inc
inc
rcr
push
dec
leave
bts
or
jmp
xchg
mov
mov
imul
pop
jb
dec
sub
jecxz
inc
ret
or
inc
sbb
out
inc
fwait
out
jno
add
cmpsb
jg
out
mov
jnp
inc
push
imul
in
fcoml
and
sbb
sbb
hlt
lret
inc
rcl
sbb
ja
das
xchg
mov
loopne
mov
add
xchg
pop
imull
xchg
popf
cwtl
inc
dec
stc
xchg
push
leave
outsl
imul
sub
test
xor
aaa
inc
pop
mov
sbb
call
lods
jnp
movsl
mov
inc
inc
and
sbb
inc
js
mov
popa
in
mov
int3
cld
jg
xor
loope
lret
shll
sbb
pop
in
xor
shlb
mov
out
dec
inc
lods
aad
inc
call
add
jl
mov
fldt
cli
les
in
adc
dec
pop
and
lahf
and
cmp
xchg
arpl
ljmp
andb
outsb
mov
out
loop
aas
cmc
dec
sbb
sub
clc
cltd
addr16
xor
sbb
inc
inc
lret
in
mov
jnp
mov
inc
sub
outsb
sbb
sub
divl
mov
outsl
inc
aad
mov
adc
cmpsb
pop
add
inc
nop
ljmp
mov
in
push
mov
mov
mov
add
in
or
nop
or
imul
lods
sbb
lret
push
xchg
into
popa
es
mov
fcoms
or
int
in
notb
pop
das
cs
push
jnp
fwait
inc
loopne
int3
xchg
inc
popf
push
out
movsb
aas
push
pushf
test
add
mov
fsubp
inc
cwtl
xchg
xchg
popa
mov
testl
jmp
and
push
fimull
call
mov
fdivp
xchg
jnp
or
sbb
das
and
mov
lret
sti
int3
and
push
pushf
mov
xchg
aad
mov
stos
pop
mov
in
cmp
es
stc
gs
cmp
int
cmovno
imul
enter
or
nop
pusha
and
pop
fs
dec
sub
sub
mov
inc
xor
ror
push
or
xlat
pop
jns
sub
jb
pushf
testb
rorl
push
lcall
sub
sub
add
je
cmp
je
push
outsb
sbb
or
jbe
cwtl
lds
mov
or
in
fcmovnu
incb
pushf
push
fidivl
mov
sub
cmp
ja
adcb
mov
outsl
outsl
bound
push
xchg
jl
test
mov
pop
sarb
sub
inc
stos
dec
add
in
push
xor
ss
fxch
divl
mov
adc
fnstsw
addr16
mov
mov
pop
and
divl
sub
fmull
fmull
mov
ficoms
popf
loop
cli
jge
cltd
jmp
repz
sbb
or
leave
test
out
data16
aaa
repz
andb
arpl
scas
psubusb
fwait
push
mov
mov
sti
jge
mov
pop
cmpsb
dec
fstpt
jmp
fimull
repnz
ljmp
add
sti
pop
in
jle
cmpsl
or
movsb
not
add
jle
cwtl
outsb
push
orl
outsb
into
inc
ljmp
push
or
roll
cld
dec
cli
push
in
mov
sbb
sub
mov
in
pushf
inc
bound
dec
mov
add
xchg
add
mov
cmpb
out
pop
pusha
pop
stos
loopne
mov
add
or
pop
sub
int3
int
shll
rcll
lea
mov
mov
in
inc
out
push
dec
aaa
xchg
mov
pop
or
loopne
pusha
cmp
call
xor
nop
fnstsw
test
adc
jp
mov
push
ljmp
adc
sarb
arpl
aas
adc
mov
daa
and
push
ret
fdivrl
ss
imul
mov
adc
add
xchg
cmp
mov
or
dec
lock
dec
dec
shll
add
hlt
inc
ljmp
test
dec
int
lret
in
into
outsb
ss
jmp
mov
add
xchg
cltd
jne
mov
mov
sub
add
outsl
xchg
popf
roll
mov
jnp
adc
push
cmpsl
push
inc
sahf
fidivrs
movsb
int
ss
stos
testl
fs
sarl
sub
xor
test
or
jns
jle
cltd
sbb
cld
lods
push
bound
dec
jmp
mov
dec
sub
pop
cmp
inc
enter
insl
mov
xor
mov
mov
dec
mov
cmp
and
test
add
dec
loope
outsb
aas
adc
add
lea
push
subl
into
push
fldcw
rcll
push
inc
pop
xchg
ljmp
mov
lods
xchg
sbb
jne
dec
fstpt
cmp
vcvtsd2ss
sub
or
popa
fstpl
add
cmpsl
inc
pop
jbe
xchg
lret
cwtl
in
ret
dec
mov
inc
sub
repnz
leave
les
sub
mov
dec
or
lods
cmp
dec
ror
cmp
test
aad
fs
mov
pcmpgtd
daa
mov
arpl
addr16
test
push
jbe
mov
call
outsl
les
aam
xchg
sub
xchg
ljmp
pop
call
lret
mov
jmp
lcall
pop
ss
and
or
push
and
push
xchg
and
subl
shll
fstpl
push
cmp
jne
inc
aaa
fldcw
push
cld
add
lods
dec
adc
mov
aas
sti
loop
mov
pop
test
and
je
mov
jb
lahf
pop
jmp
sub
fs
adc
jns
es
ds
lahf
in
jae
pop
push
aam
test
jle
scas
or
pop
jns
lods
mov
push
dec
sub
dec
mov
popa
push
push
push
mov
add
and
std
pushf
hlt
test
call
rorl
sbb
add
loopne
xor
hlt
or
jge
repnz
and
int
xchg
hlt
int
popa
and
cmp
insb
dec
movsl
outsb
rcll
das
sbb
lret
adc
iret
push
jmp
in
jns
lods
cs
std
dec
frstor
out
fcomps
xchg
outsb
or
mov
dec
ret
sub
sbb
lock
push
jl
add
sbb
js
mov
mov
stos
dec
sub
fsts
psubq
sub
push
js
add
push
and
push
stos
fwait
xor
cwtl
or
jo
sbb
lret
push
add
add
push
in
pop
cmp
xor
std
pop
iret
repnz
mov
pop
clc
add
stc
push
imul
stos
sbb
fwait
sbb
xchg
movsb
adc
cmp
or
mov
mov
add
pop
mov
add
fwait
imul
jns
jne
fists
aas
lea
aas
movsl
cmp
pop
or
in
fs
sbb
pop
sub
iret
pop
jnp
adc
mov
and
pusha
or
in
int3
xchg
lds
xchg
push
je
push
push
mov
xor
stos
jge
xchg
lods
rorl
mov
cmp
ret
ss
jnp
stc
mov
jae
sti
mov
mov
mov
dec
lock
xor
mov
and
aas
pop
cmpsl
inc
adc
mov
add
and
imul
and
and
loope
push
loop
dec
sbb
xor
and
cli
scas
pop
inc
subb
insb
movl
das
pop
ret
arpl
icebp
mov
push
lea
aam
push
jb
and
test
add
mulb
mov
cs
jns
rorl
test
mov
addb
jmp
xchg
add
dec
mov
call
ds
sub
ds
pop
cmp
pop
push
shlb
and
sbb
dec
xchg
in
xchg
xchg
sbb
and
pop
ror
loopne
in
sbb
fpatan
adc
imul
nop
xor
fsts
mov
cmp
inc
xchg
adc
into
inc
cmpsl
loope
dec
int3
and
into
rorl
pop
loope
xchg
bound
ds
push
stos
push
dec
mov
or
mov
rcrl
cli
or
and
test
jbe
cmpsb
loopne
inc
mov
and
inc
mov
mov
xor
scas
test
outsb
pop
repnz
out
rolb
cld
pop
xor
sub
leave
inc
or
lret
jp
fwait
sbb
int3
dec
test
js
xchg
cli
inc
dec
icebp
pop
clc
push
xchg
fsubl
outsl
mov
mov
das
dec
add
jp
mov
and
rcll
cmc
ret
sub
jmp
in
mov
push
cmp
and
fcoms
leave
mov
out
lret
dec
addr16
arpl
fbld
add
sub
xor
aaa
and
jae
je
loope
sahf
mov
adc
cs
sub
out
jmp
or
mov
push
xchg
pop
popf
sarl
push
cmp
xorl
cwtl
inc
pop
and
xchg
sub
rcrl
lret
cli
int
pop
jmp
pusha
jns
gs
or
movsl
inc
test
cli
fsubrl
movsl
mov
popf
subb
scas
ficomps
scas
movsl
pusha
and
fwait
je
gs
les
mov
or
hlt
mov
cld
scas
pop
enter
mov
cmc
cs
fildll
jae
outsl
mov
cli
adcb
gs
ret
xchg
push
decb
lret
adc
pusha
add
aad
mov
ljmp
or
push
shrl
jle
out
or
loopne
arpl
mov
filds
fadds
sub
cli
xlat
cmp
sbb
pop
sarl
adc
xchg
or
dec
mov
loop
cmpl
mov
dec
pusha
lcall
dec
mov
jecxz
divl
lds
call
mov
iret
out
cmpsl
jmp
imul
dec
sahf
jo
movsl
inc
push
test
ljmp
push
adc
repz
daa
cli
scas
test
fsubl
push
xlat
shll
xor
sti
mov
int3
cmp
lret
add
fcompl
sub
jle
cmc
roll
lret
repz
mov
jnp
rorb
pop
inc
push
xchg
aam
lods
mov
cltd
repnz
jp
push
sbb
and
cmp
add
mov
sbb
sbb
mov
js
in
imul
mov
popf
movsl
call
int
fimuls
hlt
out
sub
enter
inc
mov
mulb
les
ds
push
adc
add
je
icebp
imul
insb
repnz
arpl
xor
repnz
or
dec
jnp
push
enter
test
sbb
jns
das
sahf
in
loop
cwtl
xchg
lock
mov
test
ja
mov
xor
jmp
xlat
mov
xlat
in
push
and
sub
dec
rcr
pusha
dec
add
xor
imul
scas
mov
cmpb
xor
push
es
lods
les
popa
xor
sub
mov
jmp
outsb
imulb
andl
imul
mov
inc
cwtl
add
popl
hlt
push
les
in
jmp
int3
insl
loope
fcom
enter
push
aad
sub
push
aaa
adc
cltd
dec
mov
mov
out
xor
orb
or
int3
inc
loopne
jecxz
add
mov
jns
pop
push
ret
inc
outsb
rclb
cmpsl
inc
stc
add
in
jb
xchg
fistpl
mov
jns
xor
int
out
pop
icebp
mov
mov
xchg
mov
enter
pop
aas
adc
test
out
addr16
cmp
cs
and
cltd
jb
imul
push
ja
imul
pop
mov
enter
mov
push
bound
mov
dec
fnstcw
fdivs
ret
dec
popf
mov
andb
jae
outsb
xor
cmp
add
imul
jb
push
fwait
pop
push
mov
shlb
pusha
pop
in
pop
into
das
adc
mov
clc
popf
ror
lods
icebp
cwtl
and
inc
jmp
sub
push
imul
outsb
cmp
iret
push
mov
xor
cwtl
add
es
bound
repz
iret
mov
stc
xchg
add
cmp
ret
out
pop
outsb
cmp
pop
sub
sub
loopne
sti
stc
mov
leave
pop
cltd
inc
outsb
jns
leave
mov
add
inc
mov
sub
nop
dec
out
test
fs
mov
clc
nopl
pop
stc
xchg
mov
fcoml
test
mov
popa
enter
or
mov
adc
loop
imul
in
add
popa
mov
mov
sbb
addr16
dec
leave
bound
gs
hlt
std
mov
ja
dec
movsb
cmp
pop
jo
nopl
pushf
xor
xchg
xchg
hlt
nop
movsb
mov
insl
dec
addr16
flds
sarb
push
loopne
mov
notb
loope
jbe
or
in
push
filds
inc
cmp
stos
mov
sub
mov
std
mov
jmp
push
mov
xlat
mov
out
cmp
dec
enter
out
ljmp
cld
lock
xor
sbb
js
pop
inc
inc
call
xchg
mov
cmp
aam
lahf
cmpsl
ret
xchg
jo
jmp
sub
xor
cmp
cmp
test
pop
push
arpl
loop
xchg
fwait
cltd
dec
xchg
pusha
popa
mov
mov
xchg
rorb
rcrl
and
aaa
lahf
mov
fildl
ljmp
ret
dec
pop
addr16
inc
pop
adc
mov
lds
js
cmpsl
arpl
icebp
dec
sahf
push
pop
ds
arpl
stos
mov
decb
push
int3
nop
push
add
pop
and
push
sti
adc
inc
pop
das
adc
cmp
inc
icebp
cmpsb
add
jp
xchg
pop
mov
in
inc
add
repnz
mov
in
mov
add
jae
into
xor
ja
sub
xor
lret
in
adc
stos
ds
fwait
pop
nop
in
dec
popf
jp
sti
bound
fsubs
scas
push
add
cmp
bound
lcall
loop
and
adcb
popf
hlt
in
mov
mov
imul
add
add
dec
shll
add
rorb
push
or
or
and
fwait
add
test
iret
and
cmp
push
mov
cmp
add
loope
std
mov
mov
icebp
xchg
scas
dec
push
mov
clc
pushf
and
movsl
data16
in
push
jns
xchg
fucomip
loope
aas
jp
shrb
mov
ret
pop
dec
xchg
jl
js
xchg
mov
cmp
inc
add
das
jae
mov
nop
in
cmp
dec
dec
cmc
pop
fwait
cwtl
inc
mulb
push
faddp
les
pop
loop
inc
imul
scas
or
repz
stos
inc
cs
cltd
dec
mov
or
cmpsb
lods
add
sub
hlt
pop
add
fs
xchg
outsb
push
fstl
cs
adc
lods
xchg
imul
or
xchg
ret
mulb
jmp
jmp
jnp
jo
sbb
in
and
repnz
mov
bound
gs
push
xchg
mov
sbb
mov
jnp
mov
jns
jg
insb
shlb
dec
in
addl
rol
jbe
and
out
xchg
cmp
jnp
repz
pop
mov
pop
outsb
nop
jecxz
ja
in
jbe
pop
gs
adc
clc
dec
adc
pop
sub
push
inc
mov
int
aaa
fdivs
push
or
test
loope
cmp
jle
imulb
mov
movsb
lods
lahf
mov
cmc
xor
dec
scas
xor
aad
push
inc
jp
daa
jle
iret
dec
cli
sub
jge
jle
jmp
cmp
int
icebp
inc
xor
pop
inc
sbb
arpl
imul
mov
pop
xchg
mov
push
daa
and
mov
push
xor
cmp
dec
stos
sahf
mov
dec
test
daa
fiadds
adc
je
cmpb
addl
cld
movsl
xchg
loope
test
fsubrp
arpl
test
lock
push
adcb
decb
jns
data16
in
mov
jp
js
add
and
sub
loopne
sbb
and
inc
jl
and
jb
popf
jmp
mov
cmp
jnp
cli
mov
ret
sbb
sahf
mov
subl
or
das
loope
test
xchg
notl
adc
pop
cmp
js
int3
cmp
test
pop
div
cmp
mov
xchg
or
xchg
fstpl
xor
add
mov
pusha
aam
and
and
lods
fidivrl
dec
rcr
loopne
psllq
push
dec
sub
lahf
xor
sub
into
pop
sbb
mov
sub
ss
cltd
call
aam
cmp
popa
inc
scas
cmp
pop
fnstsw
dec
loopne
ret
das
xchg
fisubrs
lods
rol
xchg
aaa
sbb
pop
insl
mov
xor
mov
inc
popf
inc
aam
xlat
imul
adc
pop
stos
inc
popa
adc
movsl
adc
dec
and
lahf
int3
xchg
leave
divb
xor
jnp
in
loop
loope
add
call
mov
leave
fcmove
inc
mov
inc
jp
mov
mov
jle
mov
pop
stos
fisubs
or
dec
mov
sub
fwait
jo
aad
fnstenv
fadd
pop
add
or
pop
cmp
ljmp
push
test
sub
into
addb
push
xor
ds
sub
jecxz
outsb
push
testl
sub
add
mov
jge
sahf
xor
std
mull
mov
sub
pop
insb
pop
xchg
dec
mov
cmp
mov
or
mov
mov
sahf
jp
fimuls
or
gs
or
push
mov
clc
data16
cs
testb
pop
test
mov
jl
stos
dec
hlt
daa
mov
sub
fbld
shll
add
std
xchg
jge
cmp
jmp
cld
xor
adc
icebp
dec
shrb
jo
mov
push
push
lcall
mov
and
fsubrl
push
je
loope,pn
xchg
mov
adc
push
sbb
mov
mov
mov
outsl
inc
push
in
test
add
out
dec
bound
push
sub
xor
add
push
loope
dec
cmpsl
inc
or
lret
ret
ljmp
mov
scas
inc
sahf
je
nop
xlat
xlat
cmc
iret
imul
cmp
pop
pop
sbb
pop
cmp
movsl
ret
push
pop
mov
push
roll
cmp
inc
loop
pop
push
or
sbb
bound
pop
nop
insl
fbld
jle
mov
lea
int3
je
in
and
cs
dec
push
jmp
xor
movsl
leave
lea
out
popf
pop
push
sub
in
stc
mov
aas
bound
out
push
inc
js
sub
pop
inc
or
lret
mov
cmp
xorl
inc
dec
out
cmp
shr
in
push
out
mov
in
outsl
shlb
push
cltd
dec
mov
movsl
cli
mov
xchg
mov
jmp
imul
sar
shl
mov
and
jo
imul
mov
aas
xor
stos
loopne
cmpsb
adc
push
fwait
or
and
sbb
aam
sub
nop
es
ss
test
mov
lea
inc
mov
aam
mov
mov
xor
dec
aas
jae
lea
js
test
sub
lahf
inc
scas
mov
xor
stos
stos
pop
jmp
mov
lods
mov
mov
mov
adc
insb
cmp
cmp
xor
pop
push
mov
sbb
es
scas
dec
xchg
repz
ret
jge
inc
jecxz
movsl
hlt
mov
jp
jmp
loope
adcl
jae
xchg
idiv
imul
jno
push
sbb
stc
aam
xor
inc
repnz
jnp
push
fninit
test
dec
push
cmpb
movb
pop
es
enter
and
fs
xchg
dec
out
daa
cmp
out
adc
push
lret
sbb
out
jmp
push
int3
xor
push
ficomps
jo
and
sbb
popf
mov
jg
fwait
aaa
cmp
sarb
push
shlb
jp
ss
or
mov
aas
andl
and
lods
inc
ror
mov
shrb
pop
and
xacquire
pop
dec
notb
faddl
rcll
jnp
addr16
fwait
test
int3
insl
ljmp
xchg
jnp
insl
pop
jp
ret
push
or
xor
clc
push
loop
cld
xchg
shrb
xchg
pushf
pop
stos
cmp
cmp
movsb
sbb
xchg
cmpsl
sub
lret
rol
mov
mov
or
test
push
cmp
push
lds
movsb
cwtl
or
jle
cmpsb
mov
sub
xchg
sub
lods
in
pop
sub
xor
and
mov
ret
movsl
inc
les
rclb
mov
das
dec
xchg
and
jne
xchg
pushf
jecxz
jnp
js
xor
dec
adc
pop
lock
in
inc
roll
inc
js
cmp
aam
inc
cltd
out
mov
aaa
xchg
movsb
insb
cltd
popa
and
jl
jmp
mov
xchg
xor
xchg
cmpsl
out
mov
pushf
push
fisubl
rcl
sub
mov
add
loop
xor
mov
movsl
dec
test
cs
lret
int3
cmp
xchg
jecxz
insb
sarb
push
lea
mov
fwait
dec
addr16
loopne
dec
repnz
loopne
cltd
mov
mov
cs
sub
ds
test
out
or
rcrb
lret
in
out
mov
scas
lret
mov
iret
jno
pop
lods
je
mov
pop
movsl
popa
lea
adc
sbb
icebp
mov
xchg
push
popa
sub
cwtl
pop
shlb
in
pop
mov
xlat
xchg
stos
lea
mov
mull
pusha
movsb
sub
mov
mov
lret
ret
ficoms
xorl
fcoms
jl
push
pop
push
int3
fldenv
icebp
or
sub
mov
pop
push
jne,pn
xchg
xchg
imul
push
movsl
jmp
pop
std
orl
cli
and
aaa
inc
and
sub
popf
pop
dec
jge
scas
xchg
cltd
cmp
xchg
fcmovb
mov
and
pop
inc
enter
int
test
in
jae
addb
gs
mov
cmp
das
pop
jb
sub
add
shrl
nop
js
nop
sbbl
ds
notl
push
inc
outsb
jnp
sub
int
adc
jmp
pop
clc
mov
nop
lea
mov
arpl
mov
inc
mov
mov
sub
and
arpl
dec
stos
les
mov
pop
xchg
push
mov
xor
popf
jmp
orl
add
loope
pusha
cmp
ds
pop
xchg
push
xor
pusha
xor
jae
jecxz
bnd
and
mov
dec
out
jp
aam
mov
inc
cmpsb
jae
insl
lods
sbb
ret
pushf
test
jmp
cltd
aaa
adc
push
adc
and
mov
mov
test
xor
out
mov
in
popf
sub
andl
iret
add
movsl
pop
std
aaa
mov
pop
mov
jno
imul
sbb
xor
sbb
and
adc
imul
xlat
jecxz
in
sub
pop
xchg
jne
or
mov
imul
add
xchg
pop
iret
in
nop
fildl
daa
lods
sub
ret
xor
adc
cmp
push
imul
mov
frstor
mov
sbb
lock
hlt
rcll
inc
jle
or
stos
hlt
mov
push
scas
inc
inc
lds
arpl
cmp
sbb
inc
pop
dec
mov
jecxz
pushf
lret
mov
subl
dec
and
pop
movb
mov
and
and
sub
enter
add
addr16
jns
aas
or
push
je
pop
add
mov
std
pop
dec
fmull
in
testl
sbb
sar
sub
bnd
shll
push
sbb
mov
xchg
adc
idivl
jae
out
std
sbb
push
dec
xchg
sub
lods
xor
mov
fisttpll
adc
fistpll
pop
cmp
inc
sbb
in
data16
push
cmp
inc
cmp
lods
fsubs
fldl
rorl
in
repz
outsl
mov
mov
mov
xor
pop
out
jecxz
jno
decl
jp
adc
in
mov
mov
xchg
and
data16
push
jmp
aas
insb
sub
popf
adcb
inc
fwait
cwtl
scas
mov
jle
jle
adc
mov
mov
cli
jae
adc
jmp
mov
ja
sar
cmp
dec
xchg
sbb
testl
jno
mov
jno
push
mov
fcoms
push
jb
pushf
repz
mov
lret
rcll
iret
sub
lods
add
xor
jecxz
cs
push
out
sbb
insl
outsl
loope
add
or
fisttps
xchg
xor
jae
jb
mov
push
sbb
pop
nop
std
mov
and
push
add
mov
mov
addr16
pop
pop
jge
push
jecxz
mov
decb
out
sbb
jl
add
xor
fwait
stos
das
mov
dec
mov
pop
iret
mov
sub
xor
mov
inc
sub
cmp
outsb
andb
gs
filds
rclb
and
push
xchg
test
fldt
test
outsl
sub
adc
enter
pop
sub
imul
hlt
shlb
dec
in
xlat
aaa
push
repz
inc
inc
jae
mov
push
pop
test
cmp
adc
lea
pop
lods
xor
mov
cld
ret
dec
add
ja
bound
mov
or
int3
aad
aaa
stos
insb
xchg
repnz
dec
sarl
inc
or
mov
leave
outsb
shrb
pop
lea
test
aas
fcoml
ljmp
cmp
adc
dec
push
aad
cmp
inc
adc
adc
push
dec
movsl
rclb
sbb
roll
or
push
ja
stc
dec
lea
ljmp
xchg
add
test
xchg
push
lods
in
or
sub
popf
jl
loopne
filds
lea
mov
pop
bound
jo
jecxz
adc
imul
arpl
inc
arpl
movsb
cli
mov
pop
lret
fnstsw
test
add
sbb
mov
jecxz
xchg
cld
mov
jne
loop
lret
jmp
stos
mov
and
cli
bound
arpl
cmpsl
mov
inc
adc
pop
out
inc
in
fcmovnb
daa
or
push
aaa
push
pop
inc
sub
xchg
push
imul
inc
pop
sbb
sbb
add
movsb
jmp
imul
xor
int3
nop
sbb
jge
lods
out
cmp
mov
sub
out
push
dec
and
jae
insb
js
fidivs
push
leave
das
mov
stos
mov
stos
push
subb
sbb
push
mov
xchg
test
sub
and
jbe
aaa
or
xchg
addr16
outsb
rolb
push
out
mulb
inc
aam
mov
push
test
call
adc
mov
and
insb
xchg
push
lea
push
mov
add
and
lahf
repz
inc
faddl
push
fwait
rcll
clc
xchg
shl
lcall
fwait
lret
mov
jne
push
cmp
inc
insb
lock
aas
inc
je
sarl
loopne
sbb
xor
inc
or
jle
push
inc
repnz
or
dec
push
cmp
imul
rcrl
cmp
adcl
call
test
fs
cmp
sub
ret
xchg
mov
xor
test
or
nop
fisubs
in
jmp
loopne
jmp
jge
jbe
dec
jb
iret
fists
pop
sub
jg
add
sbb
in
pop
ja
mov
pop
iret
outsl
mov
imul
inc
sub
dec
mov
push
aaa
loopne
popa
push
iret
sahf
and
lret
xor
inc
outsl
movsb
ficomps
js
dec
xchg
xchg
dec
fsubrs
xchg
std
push
nop
hlt
push
les
pop
out
jnp
jmp
jne
test
fcmovb
cmp
aaa
sub
fs
std
data16
je
sbb
add
shl
lcall
mov
add
int3
pop
or
dec
rcrb
mov
xlat
rolb
mov
outsb
inc
lods
xchg
add
ja
iret
lds
iret
push
add
mov
cmp
in
fmul
nop
mov
cs
sub
es
rolb
adc
and
fnsave
mov
xchg
je
fs
loopne
and
cmpsb
mov
fs
push
pop
sub
jp
push
inc
aam
jg
mov
jb
lea
leave
movb
cwtl
cmp
loope
nop
mov
jg
or
or
xchg
popf
xor
xchg
sbb
push
dec
das
in
pop
jl
mov
sub
mov
sub
pushf
cwtl
dec
inc
push
inc
int
cmp
insb
iret
ds
mov
adc
seto
mov
cmpsb
sbb
leave
jl
mov
inc
xchg
push
push
lret
ja
sti
sbb
imul
inc
ja
xchg
out
cmp
dec
test
enter
subl
cmpsb
popf
daa
shl
xlat
jp
jae
clc
pop
into
hlt
icebp
and
in
stc
outsl
je
push
out
or
inc
mov
mov
jg
addr16
cli
cmp
scas
inc
shr
xchg
lcall
out
or
and
lcall
mov
pop
pop
sbb
jo
dec
push
test
mov
jecxz
lcall
les
jl
mov
mov
popa
into
sub
cltd
and
mov
mov
mov
inc
sahf
sbb
mov
ja
cmp
mov
stos
mov
pop
add
outsb
jl
cs
gs
ja
cli
jnp
dec
add
jp
aaa
js
xor
sahf
shrb
pop
outsl
sbb
in
mov
sub
mov
xor
xor
mov
nop
pop
pop
test
iret
mov
cmp
nop
sbb
lret
data16
inc
fs
cld
clc
orb
mov
int3
int3
push
je
cmp
ss
fnstcw
inc
cmp
xor
addl
mull
aaa
pop
add
push
arpl
fnsave
cld
sti
sub
rorb
lods
rolb
rep
loopne
popa
sub
mov
shll
xlat
hlt
stos
fildl
mov
xor
pushf
xor
jne
ss
gs
test
fwait
jge
jge
xor
mov
scas
push
insb
out
inc
in
xor
add
sbb
xor
inc
cltd
sbb
mov
pop
mov
repz
pop
push
insl
push
sub
and
mov
xchg
cmp
and
cld
fs
leave
pop
js
sub
mov
enter
dec
mov
fs
pop
and
rorb
or
mov
sahf
aam
pop
mov
xor
icebp
test
push
into
inc
or
add
shlb
js
lret
out
add
jb
xchg
fdivrp
cltd
inc
or
inc
in
jno
arpl
mov
fildl
mov
push
or
ret
test
inc
fwait
sbb
leave
or
cli
out
repnz
popf
in
mov
jmp
cmpb
scas
js
or
lock
es
push
imul
shrb
mov
dec
popa
loope
xor
scas
cmp
dec
pop
pop
and
pop
loop
ds
jo
mov
jbe
inc
dec
add
cmp
mov
pushf
mov
test
and
dec
daa
pop
mov
sbb
pop
pop
mov
and
jecxz
imul
cmpb
sub
enter
add
repnz
inc
pop
xor
and
or
es
fwait
lret
mov
in
faddl
mov
xchg
adc
mov
aam
sbb
les
push
lods
cltd
out
test
sub
das
mov
mov
xor
lock
mov
jns
inc
cmpsb
pop
cmp
push
insb
and
jmp
insl
shl
ljmp
xchg
pop
sub
cmc
mov
call
ftst
in
jbe
mov
adc
inc
mov
cmp
adcl
adcb
xchg
icebp
and
shl
pop
fldcw
lock
aam
ret
mov
xchg
subb
dec
adc
out
xchg
sub
add
ljmp
sbb
push
lods
sbb
inc
mov
xchg
mov
push
dec
mov
flds
add
mov
push
xchg
cwtl
insb
jle
pop
popa
lods
inc
js
mov
fnstsw
cmp
popa
and
out
pop
mov
push
sbb
cltd
stc
lahf
jge
scas
sbb
adc
dec
imul
stc
push
mov
push
xchg
shll
sbb
pushf
sub
cmc
loopne
push
fnstsw
push
pop
mov
mov
pop
scas
sub
xor
mov
lock
xchg
imull
pop
std
mov
fstl
xor
jns
pop
jle
add
shrl
int
dec
add
cs
or
inc
les
jp
mov
test
xchg
fsubs
daa
xchg
xlat
cltd
pop
mov
icebp
lods
mov
rcll
xchg
hlt
sar
xlat
aad
mov
push
shrb
mov
cli
jp
sbb
das
cmp
adc
call
pop
enter
pop
cltd
mov
fstps
pop
fwait
pop
js
daa
or
iret
dec
outsb
fimull
cli
nop
movaps
jmp
and
addb
into
je
es
cmp
mov
push
adc
out
and
inc
pushw
ret
pop
pushf
xchg
inc
sbb
int
mov
xorl
or
and
adc
insb
mov
jge
mov
dec
mov
dec
test
ljmp
cmc
inc
xchg
cs
int
fimull
test
sti
mov
sbb
dec
adc
add
enter
je
stos
xor
pop
or
xor
test
mov
mov
lret
push
lahf
lods
dec
dec
repnz
mov
lahf
mov
test
or
push
fcom
xchg
push
pop
mov
inc
bound
mov
addl
faddl
loop
mov
in
out
sarb
mov
mov
pop
test
pusha
jg
ficoms
cltd
mov
mov
clc
xor
pop
gs
mov
cmpsl
scas
aas
add
sahf
into
pop
cltd
cmpsl
adc
lds
xchg
mov
and
clc
dec
pop
and
aam
cwtl
pop
push
mov
inc
xor
fsubrl
dec
mov
xchg
mov
sbb
lock
hlt
pop
scas
and
pop
in
adc
add
cmp
mov
mov
cltd
push
ds
mov
rclb
xor
mov
shll
cmpsl
shr
inc
fistpl
fnstsw
mov
mov
xor
xchg
cli
cmp
push
jns
lds
add
xor
loop
or
decl
pop
mov
cli
pop
rorb
mov
pop
jnp
adc
push
std
cs
pop
or
les
scas
lret
mov
and
jmp
sub
or
jge
aas
repz
and
sub
shll
mov
rclb
jbe
xor
dec
mov
dec
pop
xchg
add
insl
cmc
cmpsl
cmpsb
dec
cmp
pop
cmp
pop
xchg
push
orl
in
or
pop
inc
into
movsl
sub
sarl
popa
insl
sbb
aaa
test
shrb
shrb
imul
sub
cmpsb
loopne
scas
mov
push
sbb
add
sub
int
aad
mov
dec
rolb
pop
pop
and
imul
pop
inc
fs
loop
mov
les
fisubrs
ja
add
xorb
inc
and
mov
pop
fisubrl
popa
lods
push
call
rcr
icebp
outsl
movsl
mov
xor
pusha
jns
xchg
in
add
inc
test
add
mov
xchg
cmpsb
jo
xchg
lds
das
mov
jge
test
pop
mov
clc
or
dec
pop
les
js
in
dec
push
and
push
ds
xchg
mov
sbbb
mov
shrb
mov
mov
popa
mov
cltd
mov
mov
pop
int3
inc
pop
mov
jnp
arpl
fldt
loopne
mov
sub
inc
mov
into
and
or
scas
inc
add
pop
mov
xchg
call
or
fsts
mov
out
inc
dec
out
xchg
aad
xlat
sbb
in
loop
jnp
call
push
xchg
jns
lds
ret
dec
pop
adc
cwtl
mov
cmp
dec
jp
pop
xor
das
dec
gs
sahf
jno
lcall
clc
push
data16
dec
lock
jns
jo
rcll
icebp
shlb
sub
xchg
mov
cli
pop
loope
jg
push
xchg
xchg
jecxz
mov
cmc
aad
mov
lds
xor
lods
or
push
cld
insl
push
push
jmp
getsec
pcmpgtb
test
sub
or
pop
xchg
rorb
xchg
cli
push
mov
add
test
jne
sbb
in
inc
shlb
push
cs
mov
inc
lods
ret
lock
sub
mov
jg
scas
and
cmp
icebp
cld
icebp
add
outsl
sarl
imul
and
or
movsl
lods
dec
sub
add
pop
pusha
loop
arpl
lret
out
mov
pop
cmpsb
push
adc
aas
cli
cmp
cmp
ljmp
shl
notb
push
aam
movsl
ret
sbb
mov
xorb
fldcw
inc
aam
js
jge
outsl
fstpt
add
std
ja
fldt
mov
sub
add
mov
inc
mov
push
xor
sub
cmp
clc
sahf
push
and
mov
pop
popa
push
mov
imul
lcall
push
dec
repnz
pop
mov
jae
or
push
lahf
xchg
xlat
dec
mov
incl
inc
pop
jo
cmpl
in
xor
add
pusha
jge
cmp
inc
lds
adc
add
repz
pop
fwait
in
or
movsb
mov
sbb
popa
and
addr16
jae
mov
fcomp
lods
out
aaa
rolb
testb
insb
dec
aad
mov
pop
push
shl
movsb
nop
mov
ds
cmp
or
jecxz
in
test
in
jp
imul
mov
in
lods
dec
arpl
rcl
popa
pop
out
mov
xchg
test
inc
inc
sarl
ret
mov
movsb
in
pop
adc
push
pop
cmc
dec
cs
lahf
aas
jo
adc
insl
lods
divl
out
insb
es
addr16
mov
ds
lret
xchg
fsubrs
loopne
mov
mov
cmc
out
loop
push
sti
cwtl
and
cmp
or
popf
rep
cmp
sbb
rcrl
mov
pop
add
xor
mov
jnp
test
xchg
cmc
lods
sub
mov
jnp
and
mov
push
push
push
xor
ds
lea
add
imul
pop
mov
cli
adc
or
test
adc
pop
addr16
push
testl
scas
and
in
das
icebp
les
xchg
scas
nop
xor
jno
aas
cmp
cltd
sbb
mov
iret
cmpsl
push
add
ljmp
mov
and
and
stos
and
jnp
das
sbb
stos
adc
iret
rcrl
mov
pop
insl
cmc
dec
jo
sub
jno
jno
rorl
stos
sbb
pop
repnz
push
mov
testl
sbb
or
sbb
mov
push
ret
push
clc
test
push
push
jge
push
mov
mov
mov
or
call
out
into
jb
inc
add
subb
push
stc
mov
fistps
jg
pop
add
out
test
mov
icebp
xchg
sbb
cmc
lds
out
cmp
sub
mov
lods
dec
fnstsw
outsl
jg
and
pusha
aam
jmp
dec
ficoml
insl
jbe
mov
insb
dec
hlt
aas
dec
and
sbb
clc
cmc
out
cwtl
repz
and
rclb
enter
sbb
push
pop
lahf
pusha
mov
stos
adcb
iret
arpl
testb
mov
adc
cld
jp
jg
std
pop
ljmp
add
sbb
jbe
call
movsb
pop
pop
jae
sbb
jno
pop
lret
push
les
pop
mov
fdivrs
add
aam
xor
xchg
dec
bound
xlat
ret
mov
xor
shlb
push
inc
sbbb
jle
inc
loope
xchg
jmp
ss
movsl
inc
cmp
into
in
cld
sbb
dec
test
jnp
mov
mov
int
adc
mov
shl
mov
pop
int3
into
xor
push
les
out
mov
jns
add
std
jmp
imul
cltd
movsl
insb
pop
int
xchg
dec
jnp
ljmp
movb
testb
pop
xchg
gs
push
in
mov
pop
loope
xchg
into
int
insl
ret
cmp
xor
fwait
push
jmp
fwait
dec
scas
lock
inc
loop
test
cmp
sbb
mov
sbb
mov
jns
sub
les
push
es
or
lcall
jl
adc
jmp
or
mov
rolb
scas
dec
jle
out
pusha
fisubrs
push
inc
jle
lea
cltd
rol
pop
lret
inc
pushf
mov
mov
sbb
not
sbb
jecxz
push
mov
lcall
push
or
int
mov
lea
jmp
test
ret
dec
push
imul
addl
pop
xor
lret
int
pushf
push
push
lods
mov
pop
aaa
stc
xorl
ja
xor
jecxz
jmp
jmp
adc
aaa
popf
cmpsb
and
call
add
sarb
in
scas
sbb
int
cmpsb
shrl
adc
decl
pop
mov
fdivs
jmp
cld
movsl
imul
lea
sub
mov
idivl
inc
repz
mov
flds
pop
clc
test
insb
das
in
outsl
add
aas
xchg
outsb
les
int
cmpl
xor
fcmovu
dec
adc
dec
add
and
mulb
outsl
xor
sub
pusha
jbe
pop
cmpsb
inc
xor
dec
outsl
std
cmp
test
or
mov
sbb
jge
adc
push
mov
adc
cli
jle
add
fdivl
xor
inc
fmull
lret
scas
pop
jnp
sbb
fisubrs
movsl
fs
pop
ret
push
dec
inc
add
mov
dec
mov
jnp
insb
cmpsb
pusha
pop
xchg
loope
sti
dec
leave
inc
push
insb
insl
scas
in
push
dec
push
push
sub
mov
call
jb
push
xchg
xchg
lret
inc
inc
push
shrb
mov
faddl
addr16
jbe
jae
dec
insl
push
mov
out
fisubrs
jg
testb
lret
out
and
lods
daa
cmpsl
notb
pop
pop
and
loop
fists
loopne
popf
mov
push
xchg
mov
popa
inc
imul
xorb
ja
mov
lea
lea
repz
jl
and
les
jae
stc
ds
dec
cltd
popf
mov
je
mull
pushf
shlb
jns
mov
shl
fs
je
jnp
inc
test
jmp
push
sub
fmuls
and
add
shlb
pushw
les
add
pop
jmp
xchg
ljmp
je
pop
jl
and
dec
fisubrl
ficoms
pop
es
sbb
cmc
int
fwait
push
add
sub
jnp
ret
inc
xor
mov
bnd
repnz
sbb
bound
and
cltd
xor
sub
dec
and
lahf
adc
loopne
xlat
stc
pop
xor
pop
jae
jecxz
inc
stos
add
mov
shll
mov
je
mov
and
jp
sbb
clc
out
or
jp
xor
ret
insl
bnd
sub
ret
sbb
je
xchg
and
xor
lea
push
xchg
out
popf
sub
out
rcll
scas
sahf
adc
aad
jmp
push
mov
pusha
incb
mov
mov
cmpsb
clc
inc
call
pop
lcall
xchg
ret
mov
iret
lods
sub
push
int3
loopne
les
jp
gs
mov
aad
mov
in
test
cmp
rdpmc
loopne
xchg
loopne
gs
pop
mov
ret
jne
rcll
pop
add
outsl
enter
cmp
in
int
push
mov
repz
fwait
or
mov
cmp
cld
xor
test
jae
mov
lahf
xor
sti
js
repz
shl
lock
jp
xchg
sbb
sbb
rcll
inc
cltd
xchg
das
jg
xor
inc
pop
imul
daa
daa
dec
pop
inc
push
xchg
mov
or
out
xchg
or
push
adc
aas
dec
jmp
xchg
rcrl
js
add
mov
jg
mov
lret
dec
daa
adc
mov
ljmp
pop
mov
sbb
movsl
and
mov
lret
in
push
cmp
or
int
mov
xor
inc
add
pushf
arpl
pop
mov
ja
add
sub
test
test
call
mov
ds
xor
shlb
xchg
sbb
mov
jg
imul
out
outsb
and
sti
decl
jecxz
mov
pop
xchg
ljmp
mov
cmp
jecxz
pop
ucomiss
shrb
dec
add
adcl
aas
aad
jae
xchg
fdivrs
jnp
mov
mov
mov
add
inc
loopne
add
xor
and
mov
or
pushf
ljmp
and
lods
add
lahf
mov
or
int
jmp
into
sti
xor
out
scas
std
dec
jnp
out
loop
repnz
repz
sub
cmp
add
mov
sub
daa
cmp
lahf
mov
lds
adc
xor
sbb
jo
sbb
push
push
rolb
or
stc
pop
xchg
out
pusha
jnp
sahf
mov
scas
imull
mov
ljmp
xor
add
clc
in
int3
pop
jmp
mov
lods
pusha
cli
jge
rolb
aad
fldlg2
in
jno
add
xchg
fisubrs
push
push
aad
sti
rol
sub
testb
roll
outsl
sub
sub
test
cmpsl
mov
insl
leave
jmp
pop
roll
and
and
and
adc
ss
cmp
addr16
aam
ret
pusha
inc
adc
js
stc
scas
mov
mov
mov
mov
inc
dec
jp
push
dec
push
xchg
push
test
cld
rolb
inc
jle
sub
cmp
fstps
adc
xlat
jmp
faddl
mov
xor
stos
inc
adc
pop
add
sarb
xchg
aad
mov
push
int3
dec
stc
push
or
lock
mov
hlt
xchg
popa
divl
stos
jg
aad
mov
or
test
mov
pop
sbb
dec
mov
cmp
dec
xor
movsl
movsb
xlat
fsubrs
jmp
cmpsl
pop
jp
repnz
and
and
push
outsl
std
fs
cmp
sti
and
jl
lock
aas
jbe
dec
ja
jae
mov
pop
daa
jle
lcall
add
in
lods
inc
sbb
cwtl
daa
sti
addr16
jle
ret
add
xchg
mov
inc
shl
icebp
orb
outsb
sbb
jno
js
inc
gs
arpl
xchg
push
jge
jp
jo
scas
sub
jb
or
add
push
aas
inc
ja
cltd
xchg
lret
out
pop
lcall
sbb
fadds
xchg
pushf
sbb
xor
push
test
xor
jo
das
push
xchg
ret
sub
lahf
mov
lret
push
and
adc
es
imul
jl
ret
adc
rcl
repnz
adc
or
mov
test
jno
pop
pop
out
fs
mov
mov
repz
mov
data16
cs
cmp
faddl
jge
sub
stc
or
inc
cmp
repnz
lcall
adc
pop
pusha
push
das
pop
test
mov
push
mov
mov
loopne
pushf
jg
fidivl
cmp
aaa
test
lret
dec
pop
ja
pusha
sbb
xor
mov
mov
push
jg
das
push
xor
pusha
mov
sub
mov
inc
and
push
out
mov
sbb
popf
mov
push
ret
test
jns
push
xchg
aam
mov
rcl
movsb
cmpsl
lods
lcall
dec
jne
subl
leave
je
jecxz
lods
add
push
push
fwait
popa
call
push
jns
and
movsb
mov
fsts
xchg
and
sahf
sbb
or
pop
lea
iret
jmp
movsb
dec
mov
jmp
jnp
bound
daa
cmp
insb
pop
pusha
inc
jle
popa
mov
fmull
insl
mov
icebp
jg
or
pop
xor
mov
aad
mov
inc
adc
xchg
adc
cmp
test
into
jo
ret
dec
dec
adc
lock
push
dec
arpl
stos
sbb
dec
cmpsl
inc
push
add
subb
daa
or
test
inc
cmc
inc
push
push
jp
adc
sbb
push
in
sti
xor
and
push
and
nop
outsb
mul
adc
insl
movsb
lods
and
adc
cmp
nop
push
mov
imul
test
jecxz
andl
fsubl
arpl
xchg
lahf
roll
jae
js
jle
jmp
addl
xor
mov
xchg
fdivrp
inc
pop
push
mov
loopne
pop
adc
sub
pop
cltd
ja
sbb
ds
cwtl
xchg
in
scas
adc
add
cwtl
mov
fstpl
outsb
mov
and
loope
and
fcmove
dec
loop
jnp
pop
xor
imul
stos
xorl
cwtl
jns
cmpsl
into
cmpsb
fisttps
mov
div
cmp
xorl
mov
leave
push
out
add
lods
mov
mov
mov
ja
lods
call
aas
clc
xchg
pop
dec
stos
daa
xor
sub
inc
out
clc
push
pop
ret
data16
xchg
xlat
test
mov
aaa
push
mov
adc
push
jle
pusha
inc
ljmp
sub
mov
popf
addr16
movsb
adc
or
and
sbb
sub
sub
shr
cld
pusha
in
push
dec
sarl
xor
fistl
xor
in
or
add
sbb
mov
sub
test
push
popf
jl
addb
or
sub
sub
push
sbb
lock
xor
push
cmp
stos
ds
xorl
add
ljmp
fbstp
xchg
pop
gs
fstl
int
xchg
mov
xchg
and
mov
mov
repnz
or
adc
or
fisubrl
mov
sub
outsl
lret
and
pop
pop
stc
cld
mov
sbb
mov
iret
enter
xor
jb
iret
mov
xchg
jp
jo
daa
mov
cli
and
shll
mov
jbe
mov
cmpsl
push
out
and
pusha
int3
jp
and
sub
ljmp
jmp
lret
mov
nop
mov
das
inc
inc
sub
or
vmaxpd
scas
das
adc
mov
adc
insb
test
movsb
mov
pop
fidivs
data16
xchg
clc
xor
pop
and
and
dec
inc
mov
mov
leave
pop
adc
outsl
sbb
dec
pop
and
lock
repz
pop
xchg
xor
xor
xchg
int3
dec
lcall
xor
fwait
mov
imul
imul
mov
and
pop
btl
jmp
ret
in
sbb
js
inc
mov
aam
push
mov
add
jmp
aad
dec
xor
cmc
or
cmp
add
or
sahf
jno
adc
dec
or
cmp
and
stos
incb
repnz
and
or
mov
loopne
push
mov
ret
into
dec
sub
xchg
in
out
ret
mov
movl
or
xor
and
pop
aam
icebp
sbb
lds
fcoms
push
adc
dec
loope
adc
jmp
xor
in
cmc
cmp
repnz
and
insl
fcmovbe
aad
repnz
add
insb
mov
sub
xchg
jp
dec
xorl
imul
gs
aam
roll
jle
hlt
lock
or
test
or
movsb
xchg
in
xlat
dec
pop
lret
sbb
pop
mov
js
and
sub
add
lods
mov
daa
add
ja
arpl
mov
jle
cwtl
push
and
xchg
xchg
stos
or
and
jg
push
or
jl
and
xlat
pop
cmp
mov
insb
loop
dec
and
push
dec
loop
xchg
insb
cmp
xlat
imul
jbe
pop
outsb
addr16
shll
xchg
mov
xchg
lret
ja
data16
lods
cmp
mov
mov
mov
dec
or
addb
push
rclb
dec
loopne
ja
and
and
adc
mov
cmp
ss
jnp
jo
add
sbb
insb
push
mov
mov
pop
add
dec
mov
sbb
pcmpeqd
int3
and
fidivrl
sbb
mov
stos
jb
cmp
mov
outsl
xchg
scas
daa
into
sbb
test
jb
mov
push
outsb
and
cli
adc
pop
int3
stos
imul
dec
imul
mov
jecxz
cmpb
cltd
test
add
nop
push
pop
clc
out
mov
lahf
add
adc
idiv
pop
fs
les
and
test
xorl
xor
test
and
dec
or
dec
push
and
jmp
pop
push
jecxz
stc
loop
out
int3
jp
add
mov
outsb
lods
add
cwtl
addl
dec
enter
cmp
in
pop
sbb
sbb
xor
sub
xorl
xlat
add
pop
jbe
aas
mov
in
jb
add
mov
test
ljmp
icebp
cmp
xor
int
repz
push
es
fsubrl
imul
out
fidivrs
scas
pop
cwtl
mov
fadds
push
sbb
pop
test
mov
jne
jp
stc
push
sub
outsb
push
mov
pop
push
rcl
test
mov
stos
scas
imul
xor
mov
iret
xchg
xchg
jl
cmp
push
xchg
dec
sbb
psllq
jg
mov
mov
mov
pop
xchg
push
pop
sbb
cmp
mov
xchg
sub
adc
mov
in
cli
jbe
mov
add
iret
jbe
mov
rorb
dec
nop
xor
je
rorl
jmp
mov
fldt
loope
arpl
pop
dec
cs
sub
pop
mov
cs
push
or
ss
icebp
data16
aaa
test
xor
sbb
andl
adc
pusha
sbbb
dec
adc
sub
aam
xchg
aaa
xlat
xadd
cmp
sub
and
rcrb
fs
sbb
pop
les
inc
iret
aam
adc
jmp
loope
negb
mov
lret
jnp
pop
mov
outsb
je
cld
jge
or
xchg
es
pusha
push
inc
push
lods
sub
out
sarl
aam
loop
cli
inc
dec
popf
orl
cli
movsl
inc
aas
sub
cli
xchg
movsb
mov
outsb
js
mov
movsl
dec
dec
andl
and
push
daa
jl
ffreep
and
inc
test
rorl
mov
clc
xor
adc
push
or
mov
rcpps
mov
adc
iret
pop
mov
mov
sub
mov
xchg
and
pop
icebp
sbb
or
pop
rcrb
in
xchg
icebp
enter
or
push
sti
hlt
out
xchg
loopne
mov
xor
int3
insb
mov
lret
data16
dec
addr16
inc
or
mov
jb
mov
pop
filds
fwait
sub
pop
xchg
mov
mov
sbb
nop
divl
xchg
pop
push
dec
and
xor
call
mov
dec
push
adc
ljmp
movsb
jle
dec
ss
or
push
adc
test
xchg
ds
lret
xchg
mov
call
movsl
sub
sbb
sbb
jo
sub
ficoml
push
loope
popf
fstps
loop
ss
nop
cld
out
cmp
inc
and
in
xchg
sub
sbb
xchg
xchg
mov
stos
push
lods
pop
mov
or
enter
add
mov
add
or
xorb
out
int
jns
repnz
and
lahf
jmp
pop
cmp
adc
adc
or
sub
dec
je
daa
call
cltd
push
hlt
icebp
mov
addr16
mov
jle
xchg
sbb
test
sub
cmp
arpl
out
test
add
mov
gs
pop
in
shll
lcall
mov
nop
clc
push
lret
inc
insb
mov
daa
popa
mov
outsb
inc
xchg
mov
mov
dec
mov
cmp
je
in
cmp
mov
es
jp
ja
imul
mov
mov
into
rorb
mov
hlt
mov
outsb
xchg
xchg
int
dec
sbb
mov
popf
ret
inc
adc
xchg
cmp
jne
xor
dec
jecxz
clc
sbb
lods
dec
scas
ret
xor
inc
inc
dec
out
push
in
pushf
mov
sub
mov
bound
leave
dec
cli
add
lret
dec
xchg
loope
jae
ja
mov
xchg
into
call
mov
mov
js
cmc
in
push
pushl
lcall
scas
and
hlt
popf
pushf
sub
pop
loope
pop
xor
orl
or
repz
fimull
call
adc
sbb
mov
aas
mov
or
fisubrl
adc
fs
adc
sbb
repnz
xor
cmp
sbb
orb
cwtl
inc
pop
stos
bound
into
lret
jecxz
cmp
fadds
lods
pop
mov
xchg
jnp
aam
inc
push
xchg
mov
test
jp
or
sti
xor
mov
add
push
idivl
cmp
cld
cmp
jle
jle
push
sub
stc
inc
push
pop
insb
mov
jb
daa
xchg
jl
jp
ss
cwtl
outsl
jbe
int
imul
mov
mov
fldl
shrb
adc
mov
cmc
lahf
std
mov
mov
lahf
inc
loop
jo
mov
arpl
mov
sbb
mov
repnz
ljmp
mov
outsw
adc
mov
xchg
cmpsl
xor
inc
mov
cmp
push
sub
jae
sub
aas
xor
xchg
addr16
cmp
lock
loopne
andb
jb
imul
cmp
xor
dec
and
pop
nop
arpl
xor
dec
add
sub
in
les
inc
call
test
mov
mov
xor
test
decb
push
adc
adc
mov
cmpsl
inc
jge
cld
loop
mov
or
fldt
inc
leave
jg
mov
scas
sbb
mov
les
hlt
or
jg
int3
or
push
shrl
cmp
xchg
push
mov
pop
add
enter
push
and
dec
mov
pop
push
inc
and
or
jecxz
dec
pusha
jo
or
jns
insb
adc
dec
sub
or
icebp
mov
fisubrl
outsb
dec
adc
sbb
imul
scas
into
cmpl
shrd
jno
push
and
aas
dec
out
stos
jbe
dec
mov
or
xchg
mov
sub
mov
loop
sbb
shlb
movsb
dec
mov
jp
add
ret
dec
lret
cwtl
or
and
in
mov
fildl
dec
sti
dec
std
js
fistps
sub
int3
ficoms
xor
dec
mov
jg
out
enter
mov
scas
int
mov
ret
xor
mov
iret
arpl
popf
jmp
adc
xor
out
push
dec
ja
insl
loop
insl
ret
lahf
fnsave
or
cmc
push
hlt
mov
push
and
mov
insl
jg
imul
or
xchg
mov
mov
cmp
push
adcb
scas
lret
xor
fdivl
lods
out
push
loopne
jl
dec
imul
call
or
lods
fisttpl
dec
lock
scas
rolb
lods
out
repnz
popf
test
dec
test
adc
test
fcoms
cwtl
xor
cwtl
pop
lods
lret
mov
in
leave
loop
xor
mov
mov
mov
sbb
fsubrp
jle
inc
je
jle
sbb
sbb
inc
test
lahf
cmp
push
mov
pop
lcall
or
push
xor
inc
pushf
xchg
adc
int3
fisubs
fxch
rcrb
sti
sub
fcomps
sub
jbe
fdivp
lret
inc
and
dec
mov
lods
mov
aad
sub
mov
aad
fidivs
xor
mov
mov
add
or
andl
xor
push
xchg
call
and
mov
fstp
push
mov
xor
test
jnp
shr
out
cltd
xchg
in
inc
adc
testb
adc
sub
int3
into
les
pop
in
jmp
lods
sub
mov
pop
aad
adcl
sbb
jbe
sub
sbb
mov
mov
lret
outsl
jae
and
sub
xchg
mov
push
jg
fwait
lods
pop
hlt
lea
outsl
mov
adc
out
push
xlat
lret
in
aaa
push
loop
jg
sub
divb
ss
jle
and
cmp
mov
test
aam
repz
fs
mov
xchg
sbb
jae
xchg
fidivrl
cwtl
frndint
fwait
sub
mov
ss
and
push
movsb
adc
cmpsb
mull
xor
pop
fistpll
imul
in
mov
outsb
xor
mov
push
test
test
and
shll
shlb
sub
push
mov
xchg
push
fiaddl
cld
jnp
cli
fisubs
jmp
xchg
push
mov
mov
xor
xor
lods
mov
in
aas
arpl
ds
sbb
pushf
test
ficompl
nop
xchg
hlt
mov
push
shll
out
jne
test
push
inc
je
cmp
pop
dec
xlat
lods
mov
jne
fcmovne
insb
imull
fldt
fst
jnp
lea
push
leave
adc
repz
aam
adc
movsl
in
inc
aad
cmp
out
addr16
and
jb
or
rcl
jnp
fisttpl
fcoms
lret
or
popf
pusha
push
mov
cmp
ret
ljmp
push
lock
imul
pop
inc
xchg
push
mov
adc
daa
cwtl
adc
inc
or
mov
xchg
xor
mov
xorb
xor
mov
mov
jbe
xchg
dec
cmp
movsl
jmp
lcall
mov
push
in
hlt
stos
mov
adc
cltd
leave
push
pushl
test
std
sbb
xchg
popa
in
mov
into
popf
push
in
mov
mov
orl
sub
sbb
and
inc
incl
enter
dec
shl
clc
sti
inc
seta
loope
sbb
xchg
loop
adc
pop
loopne
in
test
popa
adc
jmp
daa
jecxz
adc
fwait
sarl
fimuls
mov
jne
ret
push
js
rol
mov
cwtl
jne
adc
lock
iret
fimull
xchg
mov
jl
mov
jb
arpl
xchg
testl
mov
rcll
movsl
xchg
inc
adc
cld
xor
add
mov
sub
hlt
pop
or
adc
daa
in
xor
cmp
cmc
push
fsubrl
in
xchg
int3
rorb
clc
mov
push
popf
xor
ljmp
mov
shrl
sbb
cmp
mov
jmp
xor
adc
fwait
scas
out
je
insb
mov
lcall
lea
lahf
lea
push
adc
out
insl
mov
lds
enter
xchg
jbe
insl
push
pop
ret
cmpl
cmp
mov
in
mov
cmp
xlat
push
inc
fistps
fistpl
adc
mov
rcrb
icebp
stc
sar
insb
outsl
push
popf
xchg
sub
lods
and
enter
out
aaa
push
mov
ss
inc
adc
sbb
shr
lcall
push
mov
jnp
je
pop
enter
mov
pop
sbb
cmp
push
xor
aam
test
mov
sti
add
push
xchg
or
dec
fistps
sbb
xor
jecxz
mov
ljmp
jle
sbb
mov
xor
lret
jbe
cmp
and
jnp
cltd
lods
push
adc
adc
mov
in
xchg
nop
mov
popf
lret
sti
mov
insl
sub
ss
push
fldcw
inc
lret
ficoml
hlt
aad
mov
dec
pop
push
add
sbb
mov
and
xor
sbb
adc
pushf
and
mov
mov
sub
rorl
insl
mov
add
or
add
cmpsl
sbb
mov
loopne
in
jno
es
daa
jp
inc
push
xchg
lods
inc
lret
and
add
xorb
add
cmp
jb
vfmsubaddpd
shll
adc
out
jo
lret
hlt
subl
or
lahf
cmp
orl
inc
or
cli
xchg
adc
aam
into
lret
shl
in
in
mov
test
call
cwtl
loopne
and
inc
xor
cmpsb
mov
in
add
popa
in
data16
jmp
popa
repnz
jmp
aaa
hlt
jge
dec
and
fmuls
pop
out
dec
adc
mov
push
mul
sub
pop
sbb
data16
jae
xor
and
bound
cmpb
mov
loopne
pop
shr
lahf
test
add
jp
lahf
fists
or
adc
int3
xor
subl
sub
xor
push
jmpw
adc
pop
fucom
test
leave
stc
call
out
js
nop
pop
imul
movsb
mov
loop
movnti
cld
hlt
jns
fcom
lods
push
hlt
sbb
in
mov
mov
dec
sub
and
xchg
scas
pop
dec
lods
fwait
push
mov
loop
rcrl
inc
std
imul
fwait
xchg
mov
out
repz
fidivrl
aam
push
imul
test
inc
jo
data16
or
aam
adc
inc
mov
xor
test
popa
in
sub
pop
mov
stos
jge
aaa
jecxz
scas
mov
inc
out
gs
lock
fadd
jno
inc
xchg
cmp
mov
sbb
cltd
jge
cmp
jmp
mov
mov
mov
fidivrs
out
das
ret
shl
adc
ret
int3
mov
adc
sub
cmpsb
in
sub
and
adc
arpl
sbb
xchg
jg
sbb
xor
popa
popa
mov
lret
sbb
xlat
cmp
in
iret
jle
pusha
call
loop
pop
popf
xchg
jmp
sbb
sti
push
test
mov
arpl
rolb
adc
stc
fildll
cmp
sbb
mov
xchg
popf
push
push
ljmp
and
mov
mov
int
dec
icebp
and
sub
lret
in
pop
aam
test
dec
push
jb
inc
callw
roll
cmp
out
push
loop
sti
jp
adc
cmp
pusha
cmc
mov
je
sub
shlb
mov
inc
shr
rcr
mov
psrad
out
xchg
and
cwtl
aas
fwait
pop
sub
dec
fcom
ja
add
enter
mov
inc
inc
mov
dec
cwtl
add
adc
rclb
stc
fincstp
adc
mov
xor
push
shrl
in
fmulp
repz
jmp
inc
adc
jge
scas
das
cmp
test
dec
cmpsl
rcrl
cs
push
xchg
clc
ds
cmpsb
mov
dec
xchg
xlat
add
jb
fs
inc
adc
mov
mov
mov
push
push
and
push
popf
imul
inc
aas
dec
out
sbb
xchg
add
dec
insb
stos
ret
dec
and
inc
insb
or
shl
aam
and
xchg
cmpsb
insb
lea
fstl
daa
shl
adc
jmp
jle
lea
in
push
movsl
std
lea
jo
xor
xor
outsb
pop
pop
push
push
jmp
or
inc
xor
mov
jp
adc
popl
das
lret
rolb
mov
jo
jbe
in
xchg
mov
xchg
in
leave
les
js
cmp
movsl
xchg
mov
ret
movsb
cmp
rorl
add
jecxz
push
scas
adc
insl
stos
leave
repnz
and
into
lods
push
pop
fs
in
test
enter
shlb
add
sti
adcb
loopne
jo
fnstcw
lods
mov
lock
sbb
ds
fsubl
adc
fnstcw
cmp
sarl
or
add
jns
add
shll
fs
jecxz
fdivs
xchg
in
mov
push
push
xlat
xchg
mov
pop
fs
int3
movsb
insl
fcmovbe
xchg
push
into
mov
sub
xchg
or
jl
mov
and
and
inc
cmp
dec
nop
shrd
inc
movsl
jg
movsl
rcr
in
sbb
pop
push
std
ds
aam
mov
loope
or
shlb
mov
cmc
or
xchg
jne
mov
jne
repnz
cmp
lods
and
arpl
cli
jmp
jle
frstor
jno
setns
sub
jae
or
ja
lret
sub
sub
leave
shll
pop
lahf
addr16
pop
cs
fildl
xchg
mov
inc
cs
mov
cmp
inc
jg
repnz
outsb
push
mov
or
cld
mov
jmp
nop
pop
cwtl
xchg
mov
mov
jl
fwait
test
repz
aam
lock
dec
jb
je
push
cwtl
ficompl
cmp
add
and
xor
mov
jnp
xchg
cmp
sti
pop
sbb
repz
movsl
mov
mov
inc
add
sub
flds
jne
out
add
xorps
pop
jl
std
jno
sub
divl
in
loop
push
imul
mov
cmp
std
pushf
test
test
dec
gs
or
push
icebp
jle
jmp
jo
push
pop
out
dec
sahf
adc
lret
pop
icebp
pop
insl
adc
lods
dec
orb
pusha
mov
push
jb
dec
ud2
jnp
ja
xchg
mov
in
push
jp
jae
nop
inc
xchg
cmpsb
aad
fistpl
rcl
out
jp
testl
notl
andl
inc
andb
inc
mov
daa
sarb
outsl
pop
aas
sets
push
ret
in
or
ljmp
out
or
repnz
idivl
test
mov
out
daa
or
add
fldt
push
push
adc
js
in
pop
push
aas
imul
push
mov
jae
mov
cs
test
push
arpl
data16
dec
add
orb
add
es
cmp
test
pop
mov
out
leave
mov
jnp
shl
sub
les
mov
sbb
pop
insb
sbb
dec
sub
add
xor
lret
cld
jmp
aad
clc
lea
sbb
pop
sbb
imul
sti
mov
ret
faddp
pop
es
sbb
cltd
pop
lods
sti
xchg
pop
mov
fisttps
ret
adc
lods
cmp
sub
pop
pusha
nop
int3
fimull
cmpsb
pop
aas
xor
nop
inc
xlat
cmpsb
imul
imul
inc
ficoms
xor
out
call
int3
sbb
add
lcall
cmp
xchg
add
rorb
rcrb
test
mov
loopne
dec
ja
inc
xor
scas
imul
sbb
pop
js
mov
xchg
test
sbb
xor
pop
mov
pop
mov
pop
inc
jne
jmp
xor
or
dec
dec
pop
mov
cmpsb
cli
and
shll
lea
jae
pushf
in
and
imul
ret
ds
ret
cs
cld
mov
hlt
xchg
mov
out
and
sahf
push
sub
push
inc
inc
mov
xor
jnp
mov
outsb
push
test
sbb
or
cli
daa
sbb
movsl
push
mov
pushf
ja
pusha
sub
mov
mov
jae
lahf
jl
insb
mov
mov
pop
in
cwtl
mov
in
ds
xchg
insb
hlt
mov
fsubl
lods
mov
in
imul
push
ljmp
popf
mov
sub
xchg
scas
xchg
mov
call
sbb
mov
inc
adc
scas
jge
jl
push
inc
and
movsl
les
repz
xchg
ret
imul
sbb
sbb
adc
adc
nop
pop
insb
mov
mov
push
push
xlat
sbb
jbe
fsub
ja
fwait
dec
or
es
aad
js
rcrl
and
xchg
and
fistl
arpl
push
xchg
in
ret
in
aaa
mov
jnp
ret
sbb
cmpb
fcom
xchg
jl
mov
scas
sahf
lods
xchg
push
pushw
xchg
mov
std
jmp
test
test
mov
pop
movsl
pop
inc
sbb
daa
pop
hlt
push
push
push
sub
cmpsb
sbb
xor
das
inc
shlb
outsl
push
cmp
jle
je
fisubl
or
in
clc
ror
mov
xor
and
push
shrb
cmp
mov
jg
cld
aam
pop
sbb
scas
test
mov
dec
cltd
push
pop
push
jo
lds
push
jnp
adc
xor
inc
sub
adc
int3
jne
sti
xchg
sub
mov
pop
cmp
pop
lods
or
jmp
cld
adc
mov
push
pop
or
ss
dec
stos
xlat
xor
xchg
jne
add
pop
subl
jb
inc
imul
jecxz
dec
jle
mov
push
pop
push
jo
adc
sbb
pop
pushf
mov
adc
scas
out
adcl
jnp
pop
insl
jle
jl
sbb
imul
ds
jle
mov
push
daa
shlb
cmp
mov
loope
lahf
sbb
shrl
push
push
dec
mov
mov
sbb
aam
ret
adc
rorb
mov
pushf
jmp
xor
adc
pop
mov
scas
popa
jae
stc
enter
dec
imulb
int
subb
inc
sbb
jo
std
adc
fbstp
sub
mov
daa
dec
adc
lahf
mov
cmp
subb
testl
add
mov
pop
sbb
int3
add
mov
das
cmpb
inc
loop
add
push
sahf
xor
inc
mov
inc
push
movsl
popf
dec
fstpt
jns
adc
pusha
mov
enter
rol
inc
adc
pop
arpl
push
stc
lret
xchg
cs
adc
aad
test
loopne
fcmovbe
jns
lds
mov
push
lods
dec
mov
bound
add
sti
call
xor
bound
loop
push
push
push
into
and
cmp
shrb
fwait
sub
mov
mov
jp
xchg
pop
jecxz
mov
jle
add
pop
movsl
jbe
xchg
push
fwait
inc
sub
jnp
jp
xchg
mov
lds
fldt
dec
mov
mov
or
aaa
push
icebp
int3
jae
lock
std
adc
scas
push
adc
dec
cld
loope
or
in
mov
pand
mov
or
xchg
jnp,pn
pop
jp
es
in
in
sbb
iret
sbb
adc
sub
xchg
or
icebp
repnz
mov
in
mov
dec
add
rcl
es
jno
lock
sbb
sbb
add
shl
dec
movsl
cmp
call
pop
jne
cmp
push
or
bound
pop
dec
add
adc
out
rcl
mov
nop/reserved
rol
adc
mov
idivl
mov
jne
jge
rolb
idivl
push
xchg
mov
sbb
xor
mov
and
clc
push
jmp
jp
test
mov
push
lea
bound
or
mov
or
pop
mov
pop
cmp
mov
adc
and
push
dec
or
adc
hlt
mov
jp
std
cmpsl
arpl
out
cmp
sub
or
and
sti
sub
repz
fs
shrl
enter
loope
mov
sbb
aaa
sub
pop
pop
pushf
movups
add
xchg
xchg
mov
fwait
mov
out
mov
aam
pop
dec
and
and
outsl
rcrl
or
mov
aad
loopne
shl
inc
xorl
add
js
jae
cwtl
jno
and
push
fdivrl
push
decb
mov
pop
lock
lret
jo
or
sub
aaa
xchg
pusha
ret
jmp
fisttpll
in
adc
xchg
xchg
ret
sub
pop
loop
fdivr
adc
int
jp
cmp
push
jge
iret
jg
mov
mov
pop
jmp
adc
adc
dec
xchg
mov
or
mov
or
cmp
faddl
daa
dec
xchg
pop
gs
dec
ljmp
loop
xchg
inc
aaa
ljmp
pop
lret
xor
int
jp
lret
and
push
ficompl
bnd
aaa
popa
sub
cmp
jle
mov
dec
cmc
xor
in
pop
insb
shlb
add
lret
push
sub
sbb
adcl
loope
pop
movups
fstl
mov
cld
mov
mov
popf
pusha
mov
out
loop
cmpl
mov
push
sub
and
xchg
inc
sub
and
inc
add
setnp
sbb
out
xlat
lret
dec
push
fwait
cli
movsb
outsl
mov
sub
push
lret
into
xor
cmpsl
nop
push
sub
ja
mov
cmp
and
mov
lea
testl
decl
xchg
dec
out
aad
jp
pop
push
xor
repnz
in
xchg
and
push
inc
cwtl
xor
cltd
pop
jb
imul
arpl
test
cmpsb
xchg
lods
aaa
outsl
or
lds
pop
xchg
repnz
cltd
lods
xchg
push
repnz
pop
out
add
mov
pop
ror
adc
inc
imul
mov
inc
lcall
jmp
push
push
mov
test
inc
xor
pop
adc
and
and
push
and
test
xor
jae
sbb
inc
das
out
jbe
xchg
add
cmp
or
subb
mov
or
insb
daa
mov
adc
push
test
movl
fs
mov
and
ja
mov
mov
push
sub
popf
insl
jb
movb
mov
loope
in
mov
fwait
xchg
mov
jle
sar
call
jle
mov
fnsetpm(287
bound
sbb
les
lock
cltd
and
inc
dec
or
sti
in
ret
aas
aad
ror
or
jo
lret
jp
cwtl
mov
and
xor
incb
pop
daa
jle
cmp
ret
sub
push
imul
jmp
sub
push
data16
pop
pop
push
mov
iret
out
out
fisubrl
pop
aaa
lret
aas
cmpsl
jne
mov
cmp
push
into
push
sub
pop
mov
adc
jmp
outsb
xor
xlat
mov
xor
bound
fcomps
arpl
sbb
push
lret
loopne
xchg
std
ljmp
mov
adc
pop
wrmsr
xchg
push
rcrl
outsb
dec
mov
sub
inc
push
insb
in
clc
mov
enter
add
in
cld
sbb
loope
and
imul
mov
rorb
int
push
aam
nop
aaa
xchg
pop
fidivs
jno
cmp
pop
sub
mov
push
add
inc
xor
addr16
out
adcb
jae
test
int
cmpsb
push
ss
mov
imul
aad
daa
jb
icebp
sub
sub
jns
sbb
push
mov
out
xchg
or
sti
sub
push
mov
sub
lods
sbb
sub
cwtl
leave
jecxz
pop
pop
mov
scas
adc
idivl
inc
sbb
sahf
mov
rcr
cmp
imul
mov
cmp
scas
mov
adc
pop
mov
xor
sub
pop
ds
push
mov
loop
dec
jae
adc
jecxz
lods
hlt
arpl
iret
in
cmp
andl
xlat
jl
pop
dec
imul
fists
add
pop
adc
leave
in
ljmp
stos
pop
sahf
arpl
pop
add
push
mov
or
push
jecxz
sti
adc
dec
call
pop
cltd
inc
push
add
pop
ret
xchg
jmp
sbb
push
mov
add
add
in
push
dec
fcmovbe
lods
arpl
ror
or
mov
js
inc
cmp
push
sbb
pop
jecxz
xchg
sbb
mov
mov
sbb
imull
test
cmp
cmp
outsl
and
int
xor
scas
ret
dec
xchg
cltd
jge
divl
pusha
sti
fs
out
mov
xchg
lret
cmpsl
imul
cmpsb
pop
mov
gs
incl
movsb
loop
mov
cmpl
outsl
addb
fdivrl
stc
jo
pusha
xor
subl
mov
cmp
adc
mov
cld
mov
cmc
pop
adc
xor
roll
ljmp
loopne
cmpsl
inc
movl
in
dec
mov
enter
lds
cmp
pop
ret
jmp
lcall
inc
push
cmp
repnz
in
add
and
pop
mov
jno
push
or
mov
or
xor
mov
shrw
jmp
add
ja
push
mov
loope
pop
test
push
jne
enter
daa
inc
cmpsl
mov
test
ret
leave
sbb
sbb
xor
cwtl
cltd
xchg
sarb
out
pop
jp
out
movb
or
inc
jecxz
xchg
ds
dec
xchg
repz
pushf
in
in
shll
les
scas
jae
xchg
addl
push
sahf
aas
ficoml
mov
lea
insl
sub
ret
cmp
outsl
call
js
fisubrs
lahf
sbb
jo
xchg
shll
xor
lock
mov
mov
or
jae
dec
lahf
lahf
data16
scas
dec
cmp
xchg
dec
adc
shlb
std
stc
mov
aad
and
insl
rcrl
jne
dec
lret
lods
sbb
je
or
inc
mov
mov
or
and
mov
adcl
push
or
repnz
mov
movsb
and
js
aad
stc
pop
sub
lret
cmc
and
inc
pop
dec
cli
ljmp
fmull
lahf
imul
mov
jge
mov
push
iret
out
loop
out
inc
int3
in
lods
dec
xchg
inc
xchg
cmc
ds
or
xor
clc
in
pop
pop
pop
sarb
out
add
faddl
mov
fwait
add
ret
outsl
sub
ret
pop
dec
lret
or
mov
xor
pop
cmpsb
mov
and
mov
ljmp
mov
rolb
shll
xchg
scas
je
cld
jle
xor
cmp
test
xor
mov
sub
mov
push
sub
in
cld
lock
not
into
add
dec
dec
in
inc
or
jnp
push
int
jns
popf
sub
jle
lods
ret
dec
out
fisttpl
and
jg
mov
repz
sbb
sbb
aam
xchg
jne
rolb
subb
add
shll
fs
test
sbb
jg
and
adc
inc
movsb
flds
xlat
dec
movsb
adc
scas
rolb
adc
jp
add
pushf
repz
shrb
xchg
sub
lock
std
into
jecxz
sahf
mov
jb
push
mov
push
add
sbb
int
cwtl
mov
es
jecxz
jp
in
fstpt
or
rcrl
pop
dec
dec
adc
or
movsb
mov
add
sbb
test
popf
idivb
push
daa
cmpsb
pop
bound
shrl
add
out
fwait
mov
jne
mov
in
xlat
popa
add
pop
jl
scas
xchg
inc
inc
popf
vpmullw
addr16
fiaddl
jbe
mov
fwait
aam
mov
jo
lods
std
lret
cmpsb
and
outsb
incb
pop
push
lret
out
neg
imul
pop
scas
aad
push
mov
jge
daa
sbb
push
dec
and
and
shl
or
stc
sbb
jnp
or
push
adc
sbb
add
add
xor
jmp
sarb
call
rcll
frstor
les
jle
fsubl
in
icebp
out
aas
jne
or
mov
push
mov
movsb
fldt
out
orb
dec
xor
adc
add
xor
cmp
or
or
andl
sti
cli
aam
mov
lock
and
xor
shrb
stc
aaa
jno
and
lcall
scas
fwait
jecxz
fwait
sbb
mov
enter
pop
lock
lock
pop
nop
lods
repz
or
lock
lock
aad
aas
push
ret
sbb
push
mov
imul
pusha
and
outsl
es
and
out
adc
mov
cli
dec
jnp
mov
jnp
out
or
iret
test
jno
adc
std
mov
popf
jmp
push
out
and
mov
movsl
xrelease
filds
inc
ja
cmp
inc
inc
mov
adc
sbb
sub
fistl
lods
inc
lahf
push
fdivr
push
jp
mov
or
movb
lods
arpl
mov
andl
inc
jl
adc
cld
push
pop
sahf
mov
pop
and
inc
and
push
and
mov
sub
aad
lcall
imul
sbb
call
xchg
cs
xchg
fldl
repnz
mov
testl
int3
or
pop
xor
mov
add
test
jl
movsb
cmpsl
imul
stc
pushf
hlt
jp
sub
bound
js
pop
pop
or
jnp
sbb
shl
pop
push
inc
pop
mov
jl,pt
xor
movsb
dec
sti
dec
inc
clc
test
ret
dec
sbb
fsubr
mov
mov
lahf
rolb
in
mov
mov
int
mov
mov
jb
pop
out
jecxz
insl
subb
je
data16
pop
lea
xchg
jecxz
adc
xor
dec
lret
pop
and
fs
jmp
push
outsb
lret
jl
xchg
mov
inc
je
popa
and
flds
inc
xorb
or
and
lods
daa
xchg
mov
mov
daa
shlb
pop
xchg
add
flds
fcom
dec
mov
cmp
int3
mov
xor
jmp
push
cs
ficoms
jbe
jmp
bound
aas
lret
xchg
jle
ret
lods
lret
and
xchg
test
loope
mov
mov
ljmp
fwait
sarb
push
adc
and
inc
lock
les
stos
xor
mov
gs
dec
mov
xchg
test
out
push
dec
pushf
loope
insb
xor
jle
fucom
popf
inc
pop
lods
leave
out
sub
stos
sti
inc
inc
imul
nop
bound
mov
out
call
lcall
sub
cli
out
sbb
xor
jecxz
test
cmp
sbb
stos
adc
enter
and
inc
outsl
cmp
mov
popa
pop
adc
mov
jne
add
movsl
sbb
sbb
roll
and
dec
aam
loope
outsb
out
out
into
sarl
dec
mov
mov
xor
adc
bound
and
xchg
or
cmpsl
loopne
dec
jmp
sub
lret
mov
bound
mov
adcb
popf
imul
dec
pop
jl
xchg
movsl
icebp
push
pop
mov
mov
js
flds
testl
sub
aad
push
clc
bnd
and
add
jmp
pop
test
les
push
push
push
mov
adc
test
pop
js
lods
mov
mov
dec
rcl
pushf
adc
subb
add
mov
add
cmpl
pop
xor
mov
repz
inc
rcr
mov
or
cmp
adc
in
xor
push
fnstcw
jno
cmp
je
adc
aad
xlat
aas
imul
xor
push
mov
sub
movsl
daa
loop
mov
mov
add
mov
repnz
adc
mov
out
ss
sub
jmp
pop
popf
cwtl
das
roll
and
jb
or
jle
clc
nop
jno
ja
outsb
adc
adc
cmp
jbe
dec
xor
adc
and
repnz
lahf
fistpl
mov
call
push
imul
pop
adc
test
dec
sbb
jecxz
inc
into
dec
or
test
sub
push
mov
mov
xchg
imul
imul
std
pop
lods
xchg
or
lcall
gs
xchg
into
out
adc
test
adc
cmpsl
xor
push
fisubrl
or
pop
sub
mov
inc
dec
loope
insl
adc
das
pop
inc
pop
int3
iret
inc
jmp
add
sub
pop
lahf
faddp
pusha
ret
adc
cli
cmpsl
cmpsl
xchg
inc
aad
push
cmp
dec
lods
add
adc
ljmp
repnz
icebp
sub
fnsave
mov
cmpsb
insl
negb
rcrl
jp
insb
push
int3
rcll
adc
jne
jae
jmp
jmp
bound
test
sbb
jge
repz
and
add
lods
xorl
int
mov
push
adc
dec
fisubrl
add
inc
int
shl
mov
bound
xchg
xor
jb
pop
dec
mov
xor
jge
popf
fisubs
das
sbb
cmp
adc
out
push
jbe
pop
inc
push
xchg
lds
pop
lea
xor
jns
scas
pop
mov
adc
add
scas
stos
mov
cmc
loop
in
jb
rolb
mov
popf
mov
mov
cmpsl
jecxz
stos
out
int3
pop
cmp
test
test
mov
push
fmuls
movsb
xor
inc
mov
and
mov
mov
push
call
xlat
rorb
fnsave
in
pop
sbb
stc
insl
test
xchg
dec
shl
sub
xchg
mov
js
decb
xchg
aas
out
js
cmp
dec
jle
sub
jg
push
ja
rol
lock
ljmp
and
int3
bswap
jne
or
clc
int3
cld
mov
es
adc
mov
outsl
xchg
into
ljmp
ss
mov
fdivrs
xor
push
xchg
lahf
inc
stc
mov
ja
mov
cmc
fbld
mov
stos
push
icebp
mov
fnstcw
fcmovbe
push
push
stos
mov
lods
jle
data16
pop
and
lret
sti
call
imul
int
xor
dec
das
push
or
in
push
repnz
fldenv
jge
pop
ja
jle
mov
rcrl
and
aaa
mov
test
add
nop
inc
frstor
dec
or
mov
push
orl
rep
sbb
test
push
fs
insl
andb
rcrb
dec
cmpsb
ljmp
outsl
or
addr16
cmpsb
xchg
dec
in
dec
mov
fildl
mov
arpl
loop
push
shll
pop
inc
lea
cmp
or
add
adc
mov
mov
fs
jmp
mov
test
xor
cmp
ja
push
into
sub
outsl
ss
cld
xchg
sbb
iret
xchg
or
out
pop
arpl
out
xchg
cmp
xor
fldcw
adc
xchg
in
mov
and
adc
xor
adc
fstps
mov
nop
pop
daa
nop
adc
jmp
push
jbe
frstor
gs
mov
mov
cmc
or
pushf
orl
sub
jmp
mov
fldl
and
add
ret
lahf
cmpsl
int3
xchg
mov
jne
mov
mov
orl
sbb
clc
sbb
popa
ret
push
insl
int
call
repnz
mov
pop
push
inc
popa
mov
cltd
lahf
jae
sbb
mov
call
mov
mov
xchg
jl
les
cmp
lret
pop
xchg
jae
and
fneni(8087
lret
xchg
dec
xchg
out
cmp
pop
sarb
and
jo
jl
add
iret
mov
mov
cmpsl
and
popa
or
sti
hlt
sbb
sbb
out
or
jge
and
jmp
sbb
mov
insb
rcrb
pop
int
ret
call
mov
rcrb
sub
jns
pop
mov
test
rclb
lcall
shrb
ja
mov
mov
ja
dec
dec
scas
adc
shlb
jo
xchg
cld
push
add
or
call
iret
in
clc
push
sbb
in
shrl
sbb
mov
das
pop
popf
and
xor
jg
sub
fstpt
sbb
mov
push
outsl
adc
mov
jo
aas
insl
mov
sub
pop
or
mov
xchg
cmp
out
neg
lahf
or
pop
sub
push
mov
outsb
lods
mov
xchg
out
outsl
cmp
cld
cmp
nop
and
cmp
fcmovnbe
in
add
sahf
sub
xor
shll
xchg
movsb
inc
push
popa
int3
mov
cmp
and
inc
xchg
xchg
pop
or
fildl
inc
xor
add
cmp
jmp
scas
sbb
aaa
leave
cmp
push
in
idivl
mov
imul
out
shl
adc
fstps
arpl
shll
enter
dec
sti
add
adc
fs
lods
loopne
das
inc
xchg
pop
mov
int3
jp
push
repz
test
mov
aad
ss
dec
sbb
ret
outsl
pop
cmp
fistpll
stos
rclb
xor
rol
fdivrs
jnp
fidivrl
dec
sub
push
push
cmp
dec
add
lds
mov
push
loope
push
mov
sub
pop
cmp
loopne
ret
mov
pop
icebp
or
cli
push
pop
jecxz
mov
fcmovnb
xor
sub
idivb
lock
ret
clc
add
daa
jnp
test
jne,pn
inc
lahf
call
das
xchg
pop
leave
push
push
lret
movsl
pop
mov
mov
cmpsb
cmp
and
push
out
outsb
repnz
sbb
rcl
test
xor
sub
aam
bound
in
mov
cmpsl
dec
mov
fistpl
clc
movsl
pop
clc
nop
out
pop
jecxz
sahf
or
mov
inc
sbb
jae
pop
mov
mov
sbb
dec
push
xor
outsl
shl
je
in
notl
inc
pop
in
jg
pop
or
adc
lods
pop
loope
dec
jno
test
sar
or
xchg
por
shll
and
push
jno
int3
mov
mov
pop
fucomp
pop
jle,pn
xchg
aam
rcll
shrb
movsl
mov
dec
jg
data16
in
mov
add
movl
inc
dec
inc
mov
push
in
mov
cmp
mov
push
adc
sub
mov
andb
popf
adc
jg
jg
stc
stos
jne
or
shlb
dec
divb
lods
test
push
xchg
push
jns
xor
add
icebp
hlt
hlt
dec
jl
xchg
push
sti
int
movsb
mov
in
xchg
and
pusha
mov
or
je
xor
dec
sub
mov
outsl
lock
dec
pop
test
inc
icebp
jmp
cmpb
push
push
lock
and
iret
add
sub
add
dec
xchg
bound
dec
outsb
inc
popa
test
push
mov
stos
xchg
sub
sub
es
int
popa
pusha
xchg
and
xchg
push
dec
and
mov
test
or
daa
out
pop
movsl
imul
sbb
jecxz
stos
lahf
out
xchg
loop
out
cmp
and
test
xchg
data16
outsb
mov
fistpll
adc
enter
lret
arpl
dec
mov
or
xchg
call
or
mov
enter
ja
popf
lcall
fiaddl
jbe
data16
jecxz
clc
into
shll
cmp
xor
sub
cmp
repz
loope
sub
dec
inc
scas
fcompl
stc
inc
push
lds
aaa
addr16
pushf
int3
repnz
xor
jge
xor
or
adc
cmp
ss
aas
mov
lcall
fisttps
pop
stos
imull
jo
adc
dec
add
xchg
adc
popa
lock
mov
movsl
mov
mov
sbb
mov
xor
add
adc
je
fstpl
dec
push
mov
pop
push
loopne
enter
sbb
pusha
jl
add
sti
add
add
pop
aad
cli
stos
sub
in
pop
add
sub
push
dec
dec
inc
aad
adc
mov
rcrb
add
lods
cld
lcall
pop
movsl
mov
test
jmp
fstpt
adc
call
cmp
cwtl
or
pusha
and
test
negb
jmp
xchg
cmp
jns
inc
mov
cmpsb
dec
adc
jns
call
fildll
test
xor
push
sbbl
push
fwait
clc
jp
jl
in
mov
sbb
fcmovnu
popa
adc
dec
mov
repz
push
or
inc
into
and
and
lret
scas
stos
jp
sub
jae
fmull
pop
xchg
adc
pop
dec
push
push
fisubl
jle
das
cmpsl
ret
push
loopne
repz
cmp
call
sbb
fs
out
call
test
in
xchg
cwtl
outsl
mov
add
aad
and
jns
mov
add
mov
in
xor
dec
pushf
mov
mov
fimuls
or
int3
in
adc
or
sarl
ss
mov
sub
test
and
inc
jb
call
lcall
lret
fucomp
icebp
or
fstpt
test
dec
clc
pusha
xchg
mov
push
ficompl
int
mov
cmp
jmp
xchg
sub
add
out
ja
std
in
pusha
and
pushf
mov
cld
js
xchg
inc
mov
jmp
dec
mov
inc
mov
lret
aam
sub
movsb
into
push
sbb
fistl
out
jl
mov
adc
dec
test
aad
xchg
mov
jge
insl
xor
mov
pop
gs
movl
and
outsb
push
xor
pop
fwait
stc
mov
push
addr16
ret
jae
sbb
and
xor
jne
xor
loopne
lcall
hlt
pop
or
adc
mov
pop
scas
push
cmc
data16
outsl
cli
sub
call
mov
mov
xchg
imul
rolb
mov
cmpsb
loope
lods
inc
lock
icebp
xor
out
sub
mov
sub
or
pop
jae
out
std
call
xchg
loopne
push
movsb
stc
sbb
jle
hlt
loopne
ret
imul
mov
popf
xor
and
mov
repnz
inc
out
cmp
or
repnz
fwait
movsl
jns
sub
sbb
push
es
mov
fidivs
adc
inc
cmp
pop
lret
test
clc
and
xchg
in
xchg
and
addr16
dec
sbbb
adc
xchg
adc
xor
jae
pop
pop
stos
mov
jbe
sbbb
cmp
push
push
shrb
cltd
xchg
add
aaa
sub
xor
dec
pop
mov
xchg
adc
mov
bound
movsb
jb
add
in
jle
adc
or
mov
into
mov
jnp
lret
enter
sub
sbb
mov
sbb
out
sahf
mov
mov
sub
jae
push
lock
cmp
pusha
jo
pop
push
ret
imul
mov
data16
adc
push
and
sahf
jl
nop
sbb
push
xor
push
adc
xor
gs
xchg
sar
pusha
jecxz
rcll
fwait
cmc
cmp
hlt
xor
ds
mov
roll
mov
lahf
ficoms
ss
mov
je
leave
nop
or
subl
sub
insl
ss
aaa
push
jno
jge
cwtl
pop
dec
add
es
dec
cs
test
adc
push
mov
aad
ljmp
mov
loope
sub
hlt
inc
mov
xlat
arpl
mov
fidivrl
cmpsl
or
and
push
lds
mov
cli
pop
pop
cmpsb
push
inc
cmp
adc
mov
adc
shlb
dec
negl
jnp
sbbb
loopne
inc
cld
sbb
push
and
in
cli
imul
mov
xchg
mov
push
fwait
push
cltd
xor
push
xchg
xchg
dec
cltd
xor
dec
movsb
in
pop
lods
adc
jno
push
int3
stos
add
inc
and
inc
dec
pop
mov
hlt
inc
cmp
push
mov
adc
lret
pop
mov
dec
jo
lret
fdivrl
aam
orl
pop
int
lahf
mov
lds
sbb
out
xchg
stos
sbb
loopne
lahf
mov
push
add
pop
cmp
adcl
sub
popf
jo
pusha
jns
pop
pop
test
jmp
cmp
or
push
mov
add
bound
in
loop
imul
lea
fistl
daa
and
inc
out
nop
cltd
jbe
mov
pusha
push
sub
scas
jge
push
jo
es
push
pop
xchg
divl
sbb
xchg
popa
aas
adc
loopne
mov
subl
cltd
dec
insl
cmpsl
xchg
jns
stos
hlt
dec
xchg
clc
in
sbb
lcall
push
or
daa
fildll
inc
or
xor
inc
outsl
mov
sbb
js
sub
in
repnz
inc
xchg
mov
sarl
jo
inc
popl
xor
repz
lcall
inc
es
shll
out
data16
or
push
jae
fistps
inc
das
ss
fmuls
or
dec
sbb
fwait
cmp
insb
rorb
imul
cmc
sbb
push
and
popf
mov
fmuls
mov
add
xor
xor
iret
insl
test
lcall
bound
daa
pop
lds
inc
insb
mov
aam
pop
jnp
jbe
sub
adc
push
push
sub
jmp
and
pop
and
cmpsl
mov
push
outsb
orl
dec
cmp
dec
mov
lea
add
cmp
ss
cmp
cs
fcomps
shll
push
mov
sahf
xor
aam
adc
sbb
data16
pop
rclb
cwtl
xor
pop
and
fldenv
add
jns
aaa
mov
mov
daa
int
xchg
xor
xor
inc
ss
mov
sbb
or
adc
xor
push
jno
js
sub
jecxz
into
sbb
shll
popa
sti
aaa
shrl
xchg
inc
test
xchg
lds
int
subl
jne
dec
gs
push
addr16
sbb
dec
mov
pop
cmp
adc
daa
xor
pop
or
push
dec
in
cwtl
enter
jp
xor
and
dec
xchg
das
jg
in
sbb
lcall
jnp
ljmp
ret
push
jb
pop
lods
fsub
and
repnz
iret
push
pop
add
movsb
dec
push
jno
addr16
xor
cmc
stos
xchg
jle
lea
xchg
inc
mov
out
loope
dec
js
dec
roll
mov
in
pop
inc
aas
mov
fadds
addps
xchg
mov
and
add
pop
nop
fcmovnb
pop
pop
sahf
enter
imul
pop
xor
xchg
pushf
xchg
hlt
xor
movb
mov
sbb
add
jle
xor
std
aam
xor
ret
not
lea
push
sldt
dec
adc
test
pop
je
and
xlat
mov
popl
jo
sub
sub
pop
lahf
mov
jp
mov
enter
mov
xchg
leave
stos
push
cld
sbb
xor
dec
fsubs
mov
sub
stos
into
mov
outsl
xchg
mov
sub
xchg
sahf
mov
xor
fimull
pop
push
mov
dec
jp
inc
rorl
mov
pop
or
sarl
lret
inc
insb
mov
jmp
xor
sub
cmp
mov
stc
inc
lds
push
inc
test
cli
mov
pop
mov
jns
repnz
aaa
mov
ljmp
sub
sbb
enter
out
xchg
mov
push
xor
int3
xor
cmp
jb
out
ret
adc
xor
push
inc
inc
test
mov
jle
or
imul
lock
add
mov
xor
pop
lret
into
icebp
fsubs
pop
int3
jg
mov
outsb
adc
loop
cmpsb
pop
mov
xor
cmpsb
ja
and
push
push
js
or
cmpb
fadds
imul
icebp
movsl
repz
inc
subl
pop
stos
mov
test
cltd
int
cmp
testb
loope
imul
jne
shlb
xchg
mov
fldt
and
fadds
cmp
fldl
cltd
sbb
pusha
sub
mov
sbb
jb
pop
mov
ficomps
sbb
jp
inc
sbb
rcrl
pop
leave
push
pushf
push
jae
push
cmp
adc
xchg
mov
pop
stc
aam
lret
mov
ljmp
pushf
adc
jo
gs
insl
adc
loopne
out
fidivrs
aad
dec
andl
lahf
or
and
fmul
jo
and
adc
sbb
dec
pop
cmpsb
adc
dec
mov
out
mov
add
mov
stos
xchg
add
mov
jmp
loop
iret
test
ret
push
or
fcmovbe
cmp
jb
les
xor
adc
and
pop
lret
mov
andb
push
xchg
mov
aaa
jmp
dec
je
xchg
cltd
mov
movsb
mov
or
and
jmp
sub
jno
inc
pop
push
mov
and
or
std
mov
jno
xchg
mov
loopne
mov
repz
lcall
mov
xorb
andl
shlb
or
cltd
pop
and
inc
int3
jle
aas
dec
rol
xchg
incb
xor
xor
sub
xor
lock
in
fdivrs
popf
inc
fistpl
push
sbb
dec
xchg
subb
mov
std
pop
rorl
loopne
sbb
mov
pusha
mov
cli
js
das
stc
mov
lret
pop
outsl
dec
or
shll
pusha
jge
imul
xchg
push
sbb
jle
fisubrs
mov
adc
cmp
mov
ss
rol
lods
add
push
inc
adc
mov
dec
push
mov
hlt
lods
jno
leave
fidivrl
std
sbb
jno
lock
daa
mov
rcrb
fcomps
das
jge
in
fdiv
aam
shr
sbb
and
add
shrl
mov
fistpll
sbb
adc
fsubrl
and
adc
inc
icebp
sub
sbbl
push
mov
add
les
fnsave
fmuls
cmp
dec
in
mov
jae
mov
shrb
test
adcb
push
stos
andb
cli
out
stos
lods
into
sub
push
nop
adc
xchg
fwait
je
mov
cmpsl
pop
push
sahf
cmp
test
mov
cmp
pop
imul
aas
cmp
sub
push
xchg
and
mov
and
outsb
mov
dec
and
xchg
xchg
sub
dec
inc
js
or
ss
popf
mov
push
sbbl
cmpsb
fs
xor
sbb
add
cmp
aad
mov
divb
outsb
push
jecxz
sarl
ja
negb
loopne
ffree
cs
cmp
shrl
xchg
or
outsl
ret
and
orb
add
ficomps
orb
or
rcll
jmp
push
sbb
mov
xor
and
scas
mov
ja
fdivl
mov
dec
stc
out
aaa
add
shll
pop
pop
out
adc
mov
or
sub
push
cmp
mov
out
movsb
rorb
add
rolb
mov
test
ja
sub
mov
aaa
ret
cmp
mov
insl
sbb
fidivrs
loop
mov
sub
push
cmp
pop
into
cmp
jnp
xlat
jb
stc
jp
in
gs
loopne
sbb
lds
andl
mov
sub
push
icebp
cld
inc
lods
pop
pop
addr16
cwtl
inc
test
imul
push
test
pmaxsw
cmp
cmc
lahf
jbe
dec
cs
fistps
lea
fisubrs
xchg
sbb
out
cltd
cmc
nop
scas
xchg
push
gs
push
or
xchg
sbb
sub
cmc
les
and
in
sbb
call
dec
mov
test
aad
pop
cmp
rol
inc
ja
subb
sbb
cwtl
stc
push
scas
mov
aas
mov
mov
imul
inc
cwtl
gs
and
pop
mov
loope
pop
sub
mov
mov
or
mov
andb
call
xor
cmp
loopne
popa
jns
neg
sbb
fsubrl
inc
pop
and
sub
mov
add
dec
mov
jo
jae
gs
pushf
xlat
jb
sbb
sbb
pop
stos
push
insb
xchg
insl
xchg
int
pop
movsb
leave
xchg
push
loopne
xor
pop
call
rorl
cmp
push
mov
lock
rcll
inc
add
rolb
mov
or
jge
push
fisubrl
adcl
loope
out
mov
xchg
xlat
or
pop
cmpsb
ss
push
shrb
sub
in
push
orb
sub
and
mov
ret
mov
rcrb
push
cli
outsl
test
jne
sub
rcll
loop,pn
dec
dec
stos
dec
cmpsb
cltd
mov
test
into
jle
xchg
pushf
cmc
push
push
pop
mov
in
inc
sbb
adc
test
xor
xchg
cmpb
sbb
cli
adc
jae
push
fs
mov
sub
addr16
jo
sbb
hlt
mov
out
and
fists
and
outsl
adc
jnp
movl
scas
and
iret
fnsave
sbb
mov
scas
sbb
fisubl
sub
mov
stc
sbb
out
jne
lret
out
adc
xchg
popa
test
les
in
add
insl
xlat
fst
xchg
int
pushf
push
stos
out
adc
out
int
mov
xor
aad
int3
xor
in
pop
fs
dec
iret
gs
pop
dec
test
les
pop
pmulhw
stc
test
rdtsc
mov
je
aad
mov
inc
stos
fucomip
dec
xor
adc
fsubr
add
repz
call
loope
iret
gs
rcr
add
faddl
dec
insl
and
cmc
sbbl
les
jae
sbb
jbe
and
das
mov
hlt
dec
mov
dec
and
adc
add
cmpsb
push
pop
ficompl
cwtl
inc
and
xchg
sub
sti
movb
sub
xchg
mov
shll
call
push
xchg
mov
cltd
inc
pop
mov
cltd
outsb
loopne
lahf
inc
and
pop
push
into
jno
xchg
pop
insb
das
lds
or
pop
fwait
pop
filds
xchg
cmc
pusha
imul
hlt
outsl
dec
add
sbb
sahf
push
cmp
sbb
cli
and
add
pushf
mov
sbb
xchg
es
mov
sub
mov
cmc
daa
mov
jecxz
sbb
xchg
xchg
inc
lds
cltd
xchg
scas
aad
or
push
aam
mov
fidivrl
inc
ss
ror
xchg
inc
mov
pop
data16
sbbl
iret
mov
cmpsb
and
jns
popf
xchg
mov
mov
nop
jmp
pop
std
xchg
iret
mov
jbe
cld
arpl
dec
sub
test
cmpsb
inc
loopne
xchg
es
mov
sub
clc
sar
lret
in
ror
movsb
clc
repnz
leave
pop
dec
mov
xchg
xchg
in
testl
inc
or
inc
xor
mov
push
or
inc
lods
xchg
xlat
jmp
pop
and
stos
pushf
mov
int
ficompl
clc
mov
sbbb
decl
sbb
ja
lock
les
and
xor
fs
xchg
stos
aad
fs
test
shr
test
add
jne
fcompl
imul
daa
mov
sbb
ja
adc
xor
sub
mov
addr16
sbb
mov
inc
sbb
divb
and
ret
addl
subb
adc
in
fsubs
repnz
cltd
ja
or
scas
dec
shl
dec
cmp
aaa
repz
inc
enter
gs
cmp
and
mov
insb
push
dec
mov
sub
or
sbb
mov
mov
sub
lahf
pop
imul
ret
cwtl
das
or
dec
fnstsw
pop
mov
push
fstpt
xchg
dec
pop
dec
icebp
inc
imul
pop
test
in
xchg
movsb
jmp
sbb
shlb
pop
and
xlat
jg
ret
push
int3
lds
adc
loopne
mov
or
sub
sbb
push
push
lds
inc
dec
jb
cwtl
aaa
ret
or
les
cmc
push
negb
dec
xchg
inc
stos
loop
mov
leave
mov
dec
int3
in
fdivl
mov
icebp
mov
push
shrb
and
nop
pop
jae
insb
dec
fdivrl
pop
cmp
test
pop
divb
sahf
idiv
les
pop
push
jmp
pop
dec
and
and
int3
xchg
adc
pushf
in
dec
or
or
push
faddl
sub
xor
push
fwait
push
add
lock
pop
pop
dec
ret
test
add
and
and
divb
mov
loope
jecxz
jnp
push
or
lahf
lods
popa
adc
repnz
orl
cmp
xor
sar
adc
cmpsl
in
push
lds
push
sbb
scas
mov
xor
and
mov
cmp
insl
pop
lods
aaa
lds
pop
fstpt
add
imul
push
add
sub
sbbl
dec
fs
dec
push
stos
cmpl
adc
imul
and
rol
pop
mov
andl
cwtl
fsubrp
shlb
pop
pop
sbb
push
xor
aaa
popf
adc
xor
jo
mov
jg
repz
dec
cwtl
das
ljmp
cmpsl
dec
xrelease
pushf
jae
push
call
fcoml
mov
push
sti
cmp
mov
jecxz
mov
push
fdivrl
mov
je
ja
js
xchg
scas
adc
dec
repnz
mov
aaa
jle
xchg
adc
pop
push
sbb
mov
loopew
fcomp
dec
pop
gs
jge
push
add
pushf
inc
bound
in
mov
xchg
lods
push
fisubrs
scas
sbb
out
cmp
jno
negl
mov
and
mov
mov
inc
mov
or
das
mov
mov
dec
jmp
or
push
xor
sub
das
jp
cltd
cmova
addr16
cmc
aaa
cmp
icebp
out
movsb
mov
and
jno
adc
pop
cs
jns
lcall
push
pop
sbb
and
mov
rcrb
mov
mov
add
std
sbb
sub
rolb
mov
shlb
lret
dec
fsub
movsl
jecxz
test
movsl
loopne
decl
jmp
aas
cs
adc
nop
stc
jge
pop
rol
cld
cmc
insl
mov
jl
adc
mov
push
xor
test
xchg
stos
sbb
mov
mov
fnstsw
jecxz
sahf
scas
test
shlb
lea
dec
je
lods
addr16
mov
rcrb
or
dec
jp
repnz
aaa
push
adc
mov
push
inc
jle
add
mov
test
jle
in
insb
xlat
mov
sub
add
jmp
lahf
adc
movsb
in
cmp
dec
push
xor
aad
jae
add
fstpt
jno
insb
cwtl
add
adc
lahf
jecxz
leave
push
inc
jnp
inc
aas
dec
mov
adc
push
xchg
int3
xor
sub
popa
and
fwait
pusha
cmp
xchg
imul
jecxz
aam
pop
dec
mov
push
sbb
pop
fistps
cmpsl
mov
ljmp
dec
adc
lea
lea
pop
push
jmp
int
mov
icebp
push
or
cmpb
pop
fcmovb
rcl
sub
in
in
mov
add
loope,pn
out
daa
pop
movsl
xchg
lcall
mov
into
mov
negl
push
stc
mov
and
into
mov
cmp
arpl
insb
mov
cmp
xchg
adc
xchg
and
test
jle
lock
or
mov
pop
xor
mov
cli
jae
out
pop
pop
mov
ljmp
cmp
sahf
add
mov
fwait
and
cwtl
addr16
sarb
into
push
mov
inc
gs
mov
cmp
aaa
fbld
pop
sub
mov
pop
scas
outsl
insb
por
test
cmp
xchg
mov
outsl
cs
mov
pop
xchg
add
ja
or
jle
mov
jb
scas
pop
push
loope
in
mov
or
fidivrl
sbb
mov
int3
mov
mov
hlt
enter
xchg
insl
pfrcpit2
gs
stos
lea
fwait
ljmp
movsl
xor
cmp
test
sub
aad
repnz
shrb
mov
mov
testl
int
icebp
sti
mov
inc
jmp
insl
sub
push
in
xchg
lods
jle
pop
push
cmp
or
jno
mov
jmp
adc
mov
int3
xchg
loopne,pt
cli
pop
popf
mov
sbb
daa
mov
ja
leave
lods
out
mov
jnp
dec
mov
mov
or
movnti
in
ficoml
sub
data16
loopne
xor
pop
mov
cli
cmpsb
mov
je
cmp
icebp
push
jl
jns
cld
inc
sbb
scas
jmp
push
adc
sbb
dec
imul
dec
mov
andl
mov
outsb
test
mov
imul
adc
arpl
in
mov
scas
mov
sbb
test
fdivrs
mov
pop
pushf
out
ljmp
mov
mov
lret
and
adc
sbb
in
pmuludq
es
sbb
mov
xchg
aam
pop
mov
shr
cli
aam
je
add
lods
sub
cli
fidivrl
mov
popf
outsl
loopne
xor
mov
insb
mov
sbb
std
stos
and
in
sbb
xchg
sbb
mov
mov
out
stc
pusha
loop
sub
in
stos
mov
add
sar
cmp
scas
and
sbb
faddp
push
sub
or
xchg
dec
dec
inc
cld
rcr
xchg
in
imul
aas
shrl
faddl
stos
inc
push
xchg
mov
imul
adc
shlb
jg
adcb
fsub
stos
xor
mov
push
mov
rcll
imul
jmp
stos
arpl
mov
fiadds
mov
pop
mov
aaa
lods
mov
xchg
rcrl
add
or
por
ret
addr16
cltd
mov
cmpsb
sub
rorb
dec
mov
mulb
sti
mov
hlt
inc
adc
cmp
cmc
in
jnp
jb
outsb
sub
mov
inc
mov
rcrl
bound
mulb
loope
movsb
jbe
rcrl
xchg
add
jb
inc
push
sub
not
in
out
and
xchg
cmp
and
dec
mov
sub
ret
aas
inc
dec
xchg
and
xchg
into
and
cmp
addb
mov
idiv
das
xchg
sub
rorl
sub
push
popa
dec
pusha
xchg
pop
pop
aad
cmp
mov
add
aas
lret
cmp
movl
into
filds
or
push
arpl
inc
mov
fnstcw
sub
mov
adc
adc
mov
scas
sti
jae
aaa
data16
icebp
xchg
inc
fisttpll
mov
repz
pop
mov
push
stos
lret
enter
mov
cmp
out
push
push
inc
xchg
outsl
loopne
lahf
mov
insl
sbb
mov
int
sbb
out
ret
lahf
std
add
sbb
aam
sub
lret
lahf
pop
aam
jp
xchg
push
mov
fwait
push
cltd
jo
inc
fcompl
push
sbb
out
dec
sbb
pop
add
stos
cltd
mov
fisubrl
test
and
pop
pop
iret
ret
in
hlt
xor
fabs
xchg
and
pushf
mov
lods
inc
push
je
test
sub
lods
insb
jae
or
fildll
sahf
repz
roll
push
ss
aad
push
imulb
xor
jg
mov
mov
pop
push
call
sub
mov
shr
add
scas
jge
pushf
pop
leave
jb
xchg
push
xchg
and
sbb
lods
mov
mov
pop
push
push
aam
sub
aad
insb
mov
nop
dec
push
mov
hlt
lds
insl
std
ret
cmpsb
hlt
cmp
xchg
cltd
push
sub
data16
cmc
in
jl
pop
mov
mov
push
dec
jne
add
fmull
insb
cli
popl
sbb
push
adc
rclb
add
jno
in
orl
and
mov
movsb
cmp
mov
lods
cmp
nop
xor
lahf
or
mov
sbb
fstl
scas
inc
rcl
cmpsl
ja
mov
arpl
imul
movsb
fistl
inc
lods
cmp
insb
jmp
es
mov
mov
sbb
fsubl
cmp
inc
fstpt
jae
cmpsb
push
ret
xchg
and
jl
jg
mov
fnstcw
sbb
sbb
dec
push
les
sbb
dec
aas
jb
push
rcll
out
cmc
ljmp
pop
sbb
cli
sbb
leave
inc
sbb
imul
push
fimull
stos
clc
fcomps
add
add
iret
test
sub
fsubrp
in
call
insb
repnz
es
adc
sti
mov
sbb
dec
fiaddl
mov
inc
fmul
int3
mov
inc
lahf
add
jbe
pop
sub
xchg
inc
cbtw
adc
push
add
daa
cmpsl
adc
mov
push
iret
lret
cli
sbb
mov
xor
shl
xlat
add
and
pop
sub
push
rolb
leave
push
cmp
jle
les
dec
nop
sbb
cmp
lcall
leave
add
mov
lock
movsl
xchg
xchg
pushf
insl
loop
or
jmp
in
sahf
jb
sbb
sub
inc
fs
xor
cltd
call
daa
pop
pop
push
sub
loope
push
lahf
xor
jecxz
push
scas
cmpsl
lock
aas
adc
test
testb
rorl
js
cmp
dec
ja
ss
and
xor
pop
mov
push
mov
fisttpl
loopne
dec
leave
in
test
push
or
cmp
ret
inc
dec
and
pop
cmpl
or
pop
rolb
aas
inc
int
mov
xor
xor
xchg
sbb
jecxz
xchg
test
sub
or
rclb
test
imul
das
rcll
xor
leave
daa
ret
insl
arpl
push
dec
push
mov
cmpsl
aaa
sub
mov
mov
pushf
or
inc
mov
sub
jmp
jle
popf
fnstsw
dec
cli
cmp
clc
mov
shll
insl
ss
ljmp
sar
and
and
push
leave
fdivs
les
out
shrb
pop
mov
imul
stos
mov
shl
adc
sbb
aad
loope
jb
mov
jmp
imul
dec
inc
push
cmpsl
and
aad
add
shll
sahf
popa
lahf
mov
mov
je
xchg
and
cmp
pop
incl
dec
push
and
pop
adc
add
call
dec
dec
push
cs
movb
and
mov
mov
lret
add
jmp
add
adc
adc
adc
mov
inc
adc
sbb
jle
and
lahf
ds
inc
push
mov
lds
sbb
pushf
leave
dec
cmp
push
cmpsl
cmpsl
arpl
shr
cmp
sbb
jmp
sbb
jge
pop
adc
fsubrl
lea
sbb
xor
cs
sbb
sarl
mov
sbb
mov
stos
data16
add
xchg
enter
sbb
popf
mov
jle
fidivrs
sti
jge
shll
pop
loop
outsl
faddp
call
imul
sarl
add
in
sub
sarb
sarb
dec
popf
mov
and
mov
mov
aam
mov
sub
jg
pusha
imul
cltd
push
inc
fs
fisubs
xchg
scas
sub
sbb
mov
test
mov
rorl
iret
test
fidivs
jmp
dec
jg
test
sub
out
sub
nop
insl
jne
decl
fsts
push
daa
cmp
or
xor
fistps
js
push
test
xor
jns
xchg
ss
gs
cmp
test
inc
pop
push
xchg
and
pop
fisttps
jmp
add
loopne
call
std
rolb
dec
jmp
sbb
or
or
cmp
mov
out
es
cld
test
lahf
sbb
das
xchg
mov
popf
pop
jns
loop
sbb
mov
fldcw
add
mov
xchg
insl
test
inc
mov
loopne
mov
xlat
mov
shr
test
shrl
fbstp
loopne
and
jecxz
xor
imul
outsb
adc
repnz
sub
mov
mov
and
arpl
test
mov
push
xchg
sub
xorb
loope
cmp
insb
sbb
shl
push
iret
in
cwtl
mov
cmp
repz
push
sub
dec
sub
sub
scas
mov
or
xor
shr
out
cwtl
call
sub
rcll
xor
es
and
xlat
inc
lahf
clc
imul
jns
fnstsw
pop
icebp
stos
movsl
dec
fucom
mov
add
cs
sub
adc
and
add
inc
movsl
push
xchg
and
lock
mov
push
mov
fistps
dec
repz
scas
and
cld
adc
cmpsl
pop
mov
sahf
mov
stc
pop
mov
mov
in
sbb
jl
push
lods
xchg
data16
loop
movsl
pop
cmp
adc
push
mov
mulb
cld
mov
int
mov
lods
cmovbe
xchg
sub
out
xor
fmul
test
xchg
ficompl
adc
xchg
jo
mov
push
jne
int3
or
mov
aam
mov
pop
push
lods
insb
repz
pop
cmpb
addr16
mov
shl
dec
push
cmpsl
stc
dec
into
movsb
lods
mov
ss
aad
add
mov
jo
pop
xchg
mov
pop
dec
shr
or
jae
outsl
int3
pop
fimull
and
lahf
in
dec
aad
cmp
test
xor
sbbl
cld
add
adcb
push
fwait
dec
jnp
inc
pop
jae
shrb
das
pop
add
out
pop
test
pop
xor
mov
outsl
dec
clc
stos
cli
in
xlat
mov
aaa
push
jns
stos
movsl
addr16
and
divb
sbb
es
pusha
subl
fldl
pop
out
pusha
adc
jge
adc
lret
repz
xchg
cmp
cmpl
cmp
imul
test
add
ds
dec
adc
or
add
pop
pop
test
shll
jg
adcb
xor
cmp
jl
or
mov
xchg
cmp
cli
ss
stos
arpl
int3
repz
sub
cmpsl
aaa
popa
aaa
enter
ret
add
aas
imul
fdiv
jb
adc
mov
mov
clc
or
adc
adc
and
dec
jle
push
data16
scas
add
cmp
insb
nop
xchg
fstl
lods
sbb
lcall
fwait
loope
out
push
jecxz
icebp
or
movb
arpl
popa
pop
insl
nop
xchg
lahf
mov
flds
jle
push
loopne
mov
inc
cwtl
and
outsl
cmp
fwait
mov
mov
test
mov
test
mov
shlb
add
or
jo
ja
outsl
imul
sub
sbb
push
xchg
push
pop
cmp
sbb
dec
adcl
dec
or
nop
outsl
insb
dec
cmovle
xchg
scas
in
enter
enter
lcall
jno
push
cmpsb
or
push
fdivs
cwtl
repnz
sub
shlb
cmp
or
jae
int3
divb
fiaddl
out
cmp
call
cmp
mov
in
push
push
movsl
xor
fisubrs
fbld
mov
sti
sbb
fs
xor
push
and
add
sub
or
pop
movsb
aad
mov
lahf
dec
in
mov
nop
dec
inc
cmpl
and
pop
push
mov
bnd
lret
push
and
xchg
pop
dec
and
mov
or
shlb
xor
cmp
sub
icebp
imul
les
cwtl
push
adc
jno
push
sub
bound
cmp
or
xchg
mov
mov
inc
pushf
xlat
pushf
mov
push
test
xor
in
in
cmp
stos
adc
xor
sar
xchg
arpl
mov
insb
dec
sarb
mov
movsl
xchg
sbb
mov
call
fmulp
and
cltd
in
mov
or
sbb
cmpsb
push
movsbl
jo
ret
das
stos
jnp
mov
outsl
cmp
jecxz
xchg
mov
jo
mov
pop
cmc
push
mov
mov
jo
rcll
insl
ljmp
xchg
xchg
icebp
test
or
aaa
mov
sbb
xchg
pop
test
out
mov
mov
fildl
jle
mov
outsb
rcll
mov
shrl
mov
or
icebp
jmp
pusha
mov
adc
xchg
add
sub
in
cmp
xor
fildl
stos
jmp
in
rolb
mov
loop
cmp
xchg
jl
mov
test
jmp
dec
mov
cmp
fstpt
jecxz
sbb
das
stos
outsl
push
jns
scas
mov
mov
jbe
fsubrl
sbb
fldl2e
jge
mov
and
out
stc
mov
inc
orb
loope
fst
push
sbb
stc
xchg
adc
adc
mov
mov
stc
and
in
stos
mov
loopne
dec
stc
popa
mov
mov
lahf
test
data16
rolb
or
mov
bnd
lcall
popa
clc
aas
adc
cmpsb
scas
jns
call
je
iret
mov
mov
push
sbb
lods
push
add
adc
mov
cs
out
pushl
cmp
cs
push
and
lcall
gs
repz
icebp
mov
imul
jp
mov
testb
mov
test
push
and
ljmp
dec
les
inc
mov
lret
mov
out
jecxz
push
jg
pop
push
leave
outsb
push
jmp
je
inc
jbe
cmp
data16
push
mov
test
int3
dec
cmp
inc
push
push
jno
insb
cmp
pop
test
rcrl
iret
dec
lea
sub
dec
ja
pop
ficoms
xor
adc
push
stos
cmpsl
sbb
cmp
outsb
jae
lahf
sub
hlt
lea
pop
fcompl
inc
or
inc
lock
das
push
int3
cld
jns
lods
jecxz
or
mulb
lds
lods
fwait
mov
ds
in
aaa
xchg
lock
aad
test
push
mov
jae
push
inc
xor
add
fcoml
pop
jmp
fstps
aam
test
and
fadds
push
idivl
jne
mov
roll
test
lds
fwait
adc
sub
or
adc
and
jle
cld
data16
pop
pop
lds
or
shll
pushf
jne
push
or
repnz
mov
xchg
push
pop
mov
mov
push
jmp
outsb
shll
scas
loope
pop
repnz
es
dec
imul
cs
lret
repz
cli
dec
jg
jb
xchg
lret
pop
pop
sbb
adc
push
pushf
inc
loope
lcall
ret
cwtl
dec
sbb
dec
stos
mov
ss
fcmovnbe
imul
jnp
push
inc
call
negl
and
dec
es
lret
xchg
icebp
ljmp
jnp
aam
xchg
in
pop
dec
add
lods
out
or
arpl
orl
xchg
fadd
jmp
mov
nop
mov
mov
outsb
dec
or
mov
cmpsb
or
jo
adc
sub
mov
scas
jg
mov
pop
jns
ret
add
push
pop
into
das
xchg
pusha
int3
jge
lock
inc
loopne
adc
and
int
clc
mov
dec
jp
outsl
jge
sahf
jp
jo
aas
mov
jge
add
adc
mov
cld
scas
push
repz
xor
mov
nop
dec
jl
push
stc
data16
dec
pop
xor
sarb
inc
xorl
push
sbb
jne
jp
cli
dec
shr
mov
lods
js
xor
aaa
dec
xrelease
or
push
into
stos
pop
std
xor
loopne
adc
pushf
cmp
ljmp
mov
cmc
push
std
stc
sti
dec
push
arpl
fbld
sbb
mov
sti
xor
and
push
dec
adcb
pop
shl
movsb
cwtl
xchg
and
jne
jp
hlt
add
pop
add
rolb
mov
xchg
cmp
sbb
sub
test
xor
cltd
and
mov
in
cmp
sbb
popa
sub
out
cltd
mov
pop
sahf
cmp
ret
sbb
mov
loop
adc
out
mov
dec
cmp
psrlw
cwtl
adc
cmp
popf
lods
jns
pop
jecxz
dec
fwait
sarl
shll
mov
inc
dec
outsb
das
xchg
xchg
dec
xchg
js
enter
xchg
insl
push
fstl
mov
xor
pop
sbb
and
pushf
nop
pop
adc
popf
idiv
pop
push
push
outsb
addb
pushf
xor
ja
inc
jne
xchg
out
jno
xchg
icebp
dec
mov
stos
fsubs
into
nop
sbb
sbbl
loop
cmp
adc
mov
sub
push
das
ljmp
mov
jg
es
mov
and
fs
mov
rolb
rcrl
test
sub
xlat
or
repz
into
xchg
int
mov
push
test
push
cmpsl
fcompl
and
adc
fdiv
in
js
xchg
cmp
xchg
sahf
jns
pop
inc
fdivs
mov
add
cmpb
sbb
inc
fsubs
enter
lods
fwait
add
hlt
jno
xchg
or
sub
lret
gs
int3
xchg
mov
roll
mov
das
adc
cwtl
imulb
shl
sub
movsb
subl
ds
pop
xchg
les
mov
js
sub
mov
jge
cmpsl
inc
xchg
js
xor
icebp
dec
fsts
adc
addb
xchg
adc
lods
je
xlat
cltd
inc
rcll
and
data16
pop
fwait
mov
addl
pushf
outsl
mov
mov
les
iret
cwtl
cmp
lods
scas
dec
mov
jp
xlat
fldt
pop
or
cs
adc
push
xor
mov
pop
jne
js
ljmp
inc
cltd
dec
push
sbb
push
jle
sbb
pop
decb
clc
fcmovnbe
icebp
mov
jmp
and
hlt
xor
or
pop
addr16
cwtl
jmp
ret
inc
or
mov
mov
lret
and
mov
push
pop
dec
push
loopne
push
mov
adc
lds
sub
data16
ja
hlt
mov
inc
adc
jge
std
xor
adc
icebp
push
jle
pop
arpl
pop
cltd
and
lock
call
mov
cmpsl
mov
sbb
cmc
push
xchg
or
imulb
mov
pusha
inc
cmpsl
sub
or
fimuls
sbb
cmp
lahf
or
clc
mov
ss
xor
les
arpl
pop
mov
jmp
add
stos
mov
bound
xor
dec
cmpsl
mov
xor
xchg
jnp
push
sbb
sbb
or
jnp
push
pop
movsl
inc
xor
mov
push
cmp
int
push
adc
lcall
mov
enter
mov
rolb
mov
adcb
cld
jle
mov
insl
mov
ljmp
xor
jno,pt
test
pop
add
sbb
pushf
push
mov
pop
pop
mov
scas
bound
mov
lcall
cmp
pop
loopne
je
sti
mov
fdiv
sub
adc
jb
mov
jae,pn
mov
fildll
lods
loop
jle
adc
inc
mov
das
inc
inc
arpl
cmpsl
ljmp
push
fimuls
out
movsl
cmp
je
cmp
stc
scas
decb
test
mov
cltd
xchg
mov
or
inc
jb
pusha
pop
call
cmp
mov
scas
scas
xorb
dec
pop
mov
or
stos
iret
hlt
and
push
sar
fnstenv
xor
xor
pop
pop
leave
cs
pusha
mov
orb
cmp
addr16
loop
cmp
sub
dec
rolb
push
dec
std
mov
data16
mov
stc
clc
pop
ljmp
add
leave
and
or
clc
rcll
push
jg
mov
out
data16
mov
push
sbb
stos
mov
fcomp
aaa
addr16
lcall
sarb
stos
shr
and
sub
loopne
and
or
fnstcw
cli
lods
sbb
cld
jp
cmpsl
rorb
inc
dec
cmc
xor
adc
iret
les
out
push
jle
lahf
inc
dec
jbe
aas
and
xchg
jae
sub
inc
sbb
mov
jns
mov
testb
xor
sbbb
test
in
pop
mov
loope
mov
lret
cli
inc
mov
mov
aam
les
or
mov
and
jnp
lcall
pop
aas
daa
aad
lret
add
mov
arpl
pop
rcr
xor
lods
jb
pushf
or
ret
and
shlb
ror
lods
sbb
and
push
or
cvttps2pi
sbb
mov
mov
push
nop
rcl
movsb
push
dec
dec
sbb
lahf
ss
inc
das
loope
ret
push
or
push
push
lahf
scas
ljmp
out
sti
sub
into
sbb
jo
in
and
mov
dec
daa
sbb
mov
or
inc
ds
movsl
dec
insl
mov
sbb
call
jg
int
push
jmp
cmp
add
mov
push
test
lock
cmpsb
aam
adc
cmpsb
mov
dec
lea
nop
dec
iret
dec
mov
out
dec
pusha
in
mov
push
and
jb
in
push
push
popf
daa
and
shrb
inc
push
scas
jb
rcr
insb
pop
pop
xor
mov
out
out
es
push
loope
mov
pop
cmpsb
mov
push
inc
ret
sbb
in
fadd
popa
arpl
ficoml
adc
cli
mov
clc
mov
outsb
mov
mov
sub
fninit
sub
in
pop
ficomps
add
cmp
dec
scas
cmc
cmc
stos
jl
movsb
pop
inc
movsl
push
ds
cmp
stos
sub
pop
or
dec
fucomip
mov
ret
or
aad
mov
negl
or
fnstsw
jg
ljmp
loop
lds
rcl
test
jecxz
mov
jl
mov
rorb
mov
ja
divl
inc
mov
sub
mov
mov
sbb
mov
pushf
dec
xchg
pushf
rclb
rcll
mov
mov
add
mov
cmpsl
inc
lcall
outsl
mov
rol
aad
rcrl
aad
rcrl
mov
xor
pop
stc
in
push
loope
and
fucom
jge
cmp
sub
outsb
jne
inc
push
inc
xor
and
ret
andl
or
fwait
cli
push
cmp
fbstp
pop
jge
mov
jl
push
stos
roll
add
push
popa
insl
addr16
mov
cwtl
out
inc
inc
add
imul
fimuls
adc
loope
popf
out
mov
data16
or
lcall
dec
das
and
mov
icebp
xchg
cld
dec
ds
jmp
shlb
sti
arpl
popf
jnp
das
popa
in
or
pop
int3
jmp
or
inc
xchg
jmp
pop
mov
mov
jmp
mov
dec
jg
imul
mov
xchg
pusha
fisubrl
aaa
mov
xchg
push
addr16
xchg
push
aam
mov
cmp
xor
dec
push
fwait
pushf
xor
in
fwait
pop
or
mov
adc
test
inc
je
leave
mov
lods
or
cmp
cmpsl
iret
mov
xchg
or
lods
sbb
sti
les
push
cmp
pop
notb
jl
ret
push
push
ss
add
or
jns
stos
lods
xor
leave
xchg
jnp
inc
les
cli
mov
adc
and
jnp
push
les
andl
inc
stos
push
jne
add
les
jno
mov
cmp
mov
into
xchg
jecxz
stos
movsl
inc
ds
out
ljmp
fcompl
int3
sarl
inc
out
dec
xchg
cmp
or
sbb
dec
cmpl
pop
mov
mov
cltd
lret
rorl
shlb
adc
sbb
add
in
xorb
pop
in
dec
xlat
dec
add
test
cmpsb
out
sub
inc
stos
mov
loop
mov
mov
mov
jg
pop
ret
out
stos
dec
push
sub
mov
ror
imul
rcrl
jns
mov
stos
cs
mov
mov
and
scas
and
aad
out
insb
aas
xor
pushf
mov
insl
in
cmp
dec
es
and
mov
loope
js
sub
aad
in
test
fdiv
cmp
sub
push
outsl
data16
push
pop
adc
sbb
cmc
adc
dec
jo
aam
mov
inc
mov
sub
xchg
popf
aaa
push
add
xchg
inc
add
push
shrl
sub
jge
push
movsl
scas
insb
pop
push
dec
lcall
popf
aam
rolb
mov
inc
pop
dec
mov
loope
call
lret
sti
mov
inc
inc
pop
lret
inc
lea
push
xlat
std
add
hlt
mov
pop
das
mov
nop
lcall
outsl
out
in
inc
jnp
cmpsb
xor
out
movsb
cmpsl
rdtsc
xchg
push
mov
cmp
out
cwtl
int
imul
rclb
cmp
inc
and
cmpsb
sahf
int
xchg
shr
or
dec
leave
movb
test
push
cmp
inc
add
or
pusha
xchg
dec
fidivs
out
js
sub
ror
or
jb
jl
xor
jae
addr16
divb
jmp
cmpsl
push
mov
in
loopne
lods
das
push
popa
je
push
movsl
push
rorb
push
addb
sub
lret
je
pop
cmp
outsb
in
mov
pop
sub
aad
xchg
inc
daa
shrb
imul
mov
hlt
pop
mov
iret
push
sbb
sbb
adc
shl
add
mov
or
dec
incl
sub
sub
daa
mov
push
out
idiv
lea
shr
leave
out
or
adc
mov
stos
aas
int3
sbb
cwtl
cmp
xor
jns
push
sbb
mov
xchg
fldcw
pushf
repz
xor
mov
or
mov
xchg
stc
enter
push
xchg
mov
popf
pop
jb
mov
shr
loopne
or
mov
lahf
sbb
ret
loopne
sub
xlat
rorb
aam
inc
jns
scas
sti
pop
int
inc
out
mull
ret
mov
or
les
fidivl
pop
adc
stos
push
add
mov
add
insl
sbb
or
sbb
rcll
cs
in
xchg
rolb
dec
mov
sub
cmp
loope
sbb
cmp
cmp
je
les
jo
shlb
enter
mov
sbb
movsb
pop
clc
sbb
dec
add
xor
jmp
mov
aam
negb
xlat
jl
movsb
sub
ljmp
repnz
cmp
adc
les
inc
lods
or
cld
jns
jmp
or
jge
scas
inc
movsb
bound
adc
xchg
outsl
sub
mov
push
cmp
pop
int3
sub
clc
sbb
ds
and
mov
inc
arpl
pop
mov
jl
and
rcrb
mov
loopne
cmp
jns
leave
push
shlb
or
filds
fcmovbe
cmp
in
adc
pop
shl
and
cmpb
jg
icebp
cld
test
in
mov
cmp
movsl
rorb
and
push
rorb
jge
leave
sbb
inc
loope
mov
inc
lcall
test
fists
lcall
pusha
es
daa
mov
add
mov
jge
loope
in
add
mov
int
xchg
fsubs
jns
aaa
dec
imul
xor
in
shrb
add
fsts
xchg
std
mov
mov
sub
mov
jb
and
cmp
pop
pop
jbe
jg
sub
test
mov
in
xor
mov
mov
aas
ss
jns
pop
rcrl
popf
adc
fistl
mov
adc
js
and
lods
xor
push
mov
mov
repz
xor
push
ja
inc
nop
jmp
mov
jp
mov
adc
das
pop
loopne
out
mov
lds
sub
mov
cmpsl
xor
cmp
add
rolb
out
adc
xlat
xchg
loope
or
jo
dec
into
nop
dec
aam
loop
into
sbb
jno
inc
je
ret
ja
das
inc
mov
rcll
dec
sbb
or
or
out
cmpsl
ret
jge
movsb
cs
pop
push
aad
lret
outsb
or
or
push
pop
inc
mov
ret
cmp
jg
push
jno
movsb
lret
dec
orl
pop
cmp
dec
ret
cli
std
jg
into
sub
xadd
ret
mov
xchg
les
sbb
jg
iret
hlt
add
test
lods
or
lret
mov
imul
xor
add
sub
xchg
inc
xchg
mov
fsts
push
sub
frstor
stos
inc
pusha
mov
pushf
aam
sahf
pop
push
jne
or
pop
aam
repnz
aam
cltd
and
int3
push
dec
ficoml
dec
int
sub
lock
add
rcrb
sbb
push
fisubl
sbb
push
inc
sub
add
cmpsb
les
inc
andb
fucomi
xchg
inc
das
adc
stc
jecxz
les
pop
sbb
jnp
outsb
lods
xlat
xchg
pop
negb
adc
and
stos
mov
add
sbb
int3
sarb
testb
je
fbstp
cmp
stos
stc
rcl
dec
pushf
lds
sub
mov
pop
adc
dec
sub
mov
and
jb
into
mov
sahf
aaa
jle
loopne
test
dec
xor
add
adc
cmc
je
add
cmp
and
imulb
test
aas
adc
pusha
jo
cmp
xchg
cmc
sbb
cmpsl
in
test
dec
cmp
int
and
add
add
mov
arpl
pop
das
mov
fadds
sub
negb
shll
insb
pop
sahf
popa
push
cwtl
cli
push
lret
sub
add
mov
sub
xchg
cs
inc
inc
add
xchg
outsb
mov
jno
inc
xor
ret
sub
sub
pop
pop
adc
cli
imul
bswap
je
push
dec
mov
nop
rcrl
rolb
movsb
mov
test
aam
mov
xor
test
scas
ss
xchg
cmp
cmpsl
out
jge
lea
scas
outsl
dec
int
or
fcompl
mov
push
subps
sub
shll
sub
push
movsl
ret
xchg
sub
xchg
and
xchg
lock
sbb
loope
imul
jae
sub
jno
adc
pop
ret
mov
dec
cmc
xchg
cmp
add
cmc
pusha
or
pop
dec
lret
insb
push
inc
jge
sbb
pop
aad
inc
lcall
inc
push
fnstenv
scas
inc
dec
push
adc
insb
test
aas
movsl
xchg
movsb
in
andl
dec
out
lret
pop
adc
ja
rorb
xchg
lret
ret
mov
clc
rol
xchg
imul
fldenv
out
push
jne
insb
pop
lcall
mov
fcomps
dec
cmp
mov
out
lahf
les
sbb
aas
aas
xchg
push
inc
iret
dec
fsts
les
mov
lea
int
ficomps
mov
insl
sbb
loope
push
call
mov
incb
cmp
dec
or
ss
std
lret
xor
push
jo
cmp
cmp
inc
loopne
mov
pop
outsb
fisttps
addr16
stc
data16
loopne
jecxz
rol
xor
arpl
pushf
dec
xchg
stos
scas
stos
in
int3
push
loope
lret
mov
adc
out
cmp
mov
mov
adc
pop
sbb
add
sbb
jp
sbbl
pop
mov
xor
out
loope
ljmp
or
mov
or
adc
adc
fwait
jbe
or
xchg
bswap
xor
les
rcr
jp
lret
dec
push
and
inc
test
fistpl
fdivrs
inc
pop
fidivrs
inc
xor
push
mov
repnz
push
inc
cmpsl
xchg
rcrl
fcoms
lods
rcl
push
jne
lock
sbb
sti
jbe
xor
xor
cmp
inc
lahf
loope
dec
aaa
xor
jp
push
movsb
jns
mov
or
pop
push
lahf
cwtl
xchg
and
inc
xor
mov
cmpsb
leave
rcrb
rclb
dec
jb
and
int
pop
cwtl
push
push
jl
and
cltd
aas
mov
pop
push
lods
cs
cmp
ficoms
je
iret
mov
sub
cwtl
mov
mov
add
dec
jp
mov
jecxz
push
fimuls
dec
das
shll
xor
iret
mov
mov
jg
pushf
js
cs
adc
push
scas
mov
push
mov
popa
mov
cmpsb
mov
xlat
lods
mov
push
cmovae
jae,pn
and
stc
fnstsw
cld
ud2
repz
insb
subl
jae
and
add
lock
pushf
cmp
loope
test
mov
js
bound
sub
adc
xchg
pushf
mov
push
imul
mov
js
lock
mov
or
test
jb
out
lock
adc
push
adc
repnz
fisubl
mov
repz
or
adc
mov
jb
pusha
jnp
pusha
es
inc
pop
gs
cmpsl
arpl
add
fwait
popa
icebp
into
push
mov
xchg
andl
pop
sbb
ret
jbe
lcall
push
daa
lods
repz
dec
popa
cmpsl
gs
or
sub
mov
sbb
pop
xchg
lock
sahf
sbb
arpl
pop
add
hlt
push
loop
les
mov
mov
inc
pop
or
aas
inc
xchg
clc
jge
pop
sahf
shrb
shrb
iret
lods
xor
cmp
ds
repnz
ret
int3
sbb
aas
sub
pop
stos
imul
test
mov
jecxz
popa
pusha
jmp
dec
scas
pop
int
addb
fistpl
mov
and
sarl
add
icebp
movsb
adc
loopne
cmp
cmp
xor
imul
cmpsl
sub
mov
loopne
pusha
inc
repz
into
es
int3
aad
mov
ds
repz
inc
xor
lods
push
cmp
ror
cli
mov
xchg
stos
test
roll
gs
daa
cwtl
inc
inc
repnz
pushaw
sar
popa
js
shll
sbb
mov
dec
std
enter
push
call
xchg
testl
inc
xchg
lds
hlt
push
loope
cmpb
adc
cmp
roll
dec
sub
jnp
add
xlat
push
inc
sub
and
ret
pop
mov
xor
imul
dec
div
dec
jno
cmp
adc
mov
popf
in
jae
iret
das
leave
int
aas
scas
mov
mov
popf
inc
cmp
jle
cs
dec
inc
mov
adc
inc
jae
mov
fidivs
rcrb
rorb
cmpsl
xor
icebp
xor
repnz
and
mov
cmpsl
xchg
popl
sbb
push
jne
pop
mov
cs
mov
cmp
xor
xchg
lock
push
pop
enter
mov
push
mov
addr16
das
sbb
je
xchg
jbe
int3
inc
dec
aas
aam
sarl
loopne
push
pop
addr16
push
ljmp
cmp
sbb
in
pop
and
add
cli
or
mov
sub
add
mov
mov
push
mov
loopne
mov
jno
mov
notl
cli
mov
test
ljmp
dec
popf
icebp
push
inc
sub
cmp
jle
dec
aaa
daa
fucomip
and
fldenv
pusha
pop
xor
xchg
mov
or
cmp
outsl
jmp
mov
push
cmp
pushf
mov
cld
mov
popa
jne
into
cli
xlat
repnz
insb
pop
sahf
sbb
add
add
out
iret
cmc
sbb
test
es
jmp
jns
pop
mov
add
and
xor
dec
stc
cs
xchg
cmp
pusha
dec
faddl
cs
ljmp
add
dec
gs
jb
push
pop
sub
pushf
pop
lret
fmuls
sbb
iret
and
push
and
sarb
add
mov
stos
mov
add
popa
pop
xchg
fsubs
push
sbb
or
lods
push
xchg
hlt
push
jp
ja,pt
sbb
lods
rcll
sbbb
adc
pop
push
std
or
or
cld
dec
les
xchg
test
or
js
xchg
push
mov
xor
sbb
adc
cmp
bound
jbe
jnp
mov
xlat
nop
out
mov
aas
push
jne
bound
repnz
enter
mov
jns
sub
lcall
arpl
push
pop
mov
jmp
addb
lcall
cwtl
dec
jl
mov
es
test
fbld
or
push
adc
jg
in
and
shlb
inc
sbb
sbb
gs
mov
imull
dec
add
mov
jne
push
mov
cmpb
leave
jo
icebp
xchg
out
xchg
jmp
inc
cmp
lods
fs
ss
pop
lods
sbb
push
pop
add
pop
fidivl
xorb
stc
pop
movsl
add
sub
and
push
xchg
test
dec
push
push
xorl
roll
stos
dec
imul
inc
fisubrl
iret
jle
pop
lods
lods
xchg
jecxz
mov
dec
push
lret
sub
push
sti
mov
mov
testl
arpl
adc
mov
aad
inc
stos
aas
addr16
and
leave
fldt
xchg
and
test
sub
cmp
cmp
pop
mov
sub
fs
rclb
push
jmp
cmp
sbb
in
sbb
std
xor
jle
scas
std
xchg
jge
lods
pushf
movsb
mov
sbb
testb
jb
sub
sub
dec
cli
mov
push
es
push
cmpsb
pushl
xor
in
shrb
jl
sbb
daa
mov
ficomps
mov
sbb
push
imul
scas
data16
cwtl
lds
lahf
jo
data16
add
adc
sub
stos
mov
dec
js
mov
out
mov
flds
xor
scas
int
out
orl
push
lds
test
test
fisubrs
das
rcll
cmpsb
out
sbb
inc
mov
out
adc
ret
adc
outsb
xchg
data16
js
xchg
mov
lock
clc
sti
outsl
loope
mov
icebp
dec
jecxz
inc
data16
adc
sub
cltd
inc
cmp
addr16
mov
pop
dec
sarl
shlb
repnz
xor
cmpsl
jle
hlt
out
mov
mov
and
jbe
test
adc
xor
adcb
xchg
es
xchg
out
test
mov
leave
cmp
or
fcoms
aaa
orb
xor
lods
jae
stos
sti
js
inc
fistpl
pop
jge
lcall
adc
lods
aad
ret
adc
or
sbb
inc
push
pop
popa
cmp
nop
dec
mov
push
mov
push
xchg
idiv
mov
in
fistpl
jmp
sbb
call
out
cmc
mov
dec
pop
std
je
ret
dec
cld
adc
xchg
or
jbe
test
ret
push
fisubrs
scas
rorb
xor
xchg
inc
sbb
dec
cld
fistpll
shrb
push
pop
jl
and
adc
insb
jmp
inc
mov
add
stos
jnp
mov
mov
aam
out
add
invd
xchg
xchg
pop
and
xchg
or
and
mov
leave
inc
sub
adc
int
insl
gs
push
mov
sbb
or
aad
cmp
stos
bound
cmpsl
xchg
xchg
sub
dec
mov
cmp
sub
in
in
jo
je
mov
cld
shll
and
dec
add
pop
es
rcll
loope
sub
lods
pop
mov
pop
adc
imulb
fimuls
jmp
loop
xor
dec
inc
sti
push
mov
sub
bound
fcoms
xchg
dec
xor
jo
cmp
pop
or
jnp
inc
inc
inc
lods
test
mov
adc
out
dec
ret
or
add
in
sub
add
mov
lods
mov
push
and
ret
fisttpl
or
inc
rorl
test
push
pop
fucomip
rep
adc
subb
dec
push
lock
pop
and
xor
sub
je
iret
jp
push
or
pop
xchg
mov
add
push
mov
movsb
cmp
into
and
adc
adc
and
sbb
aam
mulb
jmp
push
and
push
xorb
movl
mov
push
add
lods
es
imul
mov
xchg
jge
push
lcall
adc
shrb
mov
fisubrl
jno
hlt
cmp
xchg
xchg
adc
pop
scas
lret
int3
sbb
stos
and
scas
xchg
inc
mov
push
pop
cmp
dec
mov
cmpsl
enter
dec
aam
cmp
mov
and
cmp
sbb
sub
or
sahf
ret
sbb
andb
fcomip
dec
repnz
mov
loop
shrb
jge
mov
push
movsl
cmp
pop
ret
in
adc
adc
cld
pop
hlt
jnp
stos
stos
xor
sbb
dec
out
cli
aaa
bound
mov
dec
xchg
into
jnp
sbb
movsl
and
jbe
sub
sbb
sbb
out
adc
iret
fists
popf
xlat
xchg
lret
mov
fiaddl
jmp
loop
movsl
fistpl
dec
mull
pop
mov
mov
cmp
adc
mov
jg
cmpsb
mov
fs
lea
sarl
push
fld
and
cmp
sti
dec
ret
push
jg
cltd
outsb
xchg
adc
or
les
xor
lcall
jo
push
test
out
xchg
and
push
inc
cmpl
test
xchg
jge
sub
mov
loopne
movsl
arpl
das
stc
or
and
fildl
jecxz
fwait
or
fldcw
push
sub
jle
adc
mov
jle,pn
int
mov
mov
adc
sbb
jge
lret
dec
pop
push
sub
lret
ds
rclb
movsb
popa
sbb
push
mov
pop
xchg
pop
dec
iret
imul
stc
adc
dec
cmp
mov
mov
ror
call
or
push
and
ds
pop
jns
xor
mov
dec
out
ret
iret
cmp
mov
arpl
js
enter
mov
insb
and
mov
popa
sbb
les
out
fldl
and
xchg
aaa
mov
lods
les
gs
push
mov
sub
cmpsb
in
xor
loop
lret
inc
inc
mov
iret
fdivr
mov
and
mov
enter
and
cmp
imul
inc
fwait
and
xchg
or
dec
cmp
adc
data16
jle
push
sbb
add
jle
into
ret
repz
pop
mov
ja
call
xlat
pop
mov
dec
test
sub
pop
rcl
aad
mulb
subl
ret
sbb
aaa
push
pop
into
push
lcall
sbb
cs
lcall
imul
push
mov
mov
mov
jmp
jecxz
cwtl
stos
subl
and
mov
push
xor
call
outsb
inc
jmp
pcmpeqd
ds
cmpsb
push
pusha
imul
lods
sbb
lcall
shll
pop
insl
test
lea
jae
out
ja
inc
clc
mov
fs
cmp
scas
dec
jp
and
push
push
pop
pop
stc
xchg
push
sbb
fdiv
pop
dec
push
mov
aad
inc
or
xor
data16
pop
fmulp
mov
out
cs
adc
test
loop
daa
fmuls
pop
ljmp
les
inc
push
repnz
adc
dec
je
das
push
jge
lods
mov
movsb
and
sub
cmp
xchg
mov
jge
ffree
mov
shlb
fwait
test
cmp
sbb
out
leave
loopne
adc
pusha
sub
shlb
sbb
sbb
dec
lret
inc
cwtl
push
hlt
adc
and
aas
mov
jle
inc
push
imul
aas
xor
pop
xor
push
add
or
or
icebp
fidivrs
mov
rol
cmc
out
imull
jne
push
loop
lods
add
sbb
mov
mov
jno
fistps
xor
mov
adc
lods
repz
fadd
jae
in
insl
fidivs
mov
jo
push
cmpsb
jmp
sub
jmp
jle
pop
aas
inc
jge
out
mov
fs
popa
fiadds
xor
dec
pop
popl
xor
and
push
rorb
lret
mov
movsb
inc
pop
imul
push
push
mov
orl
scas
popa
fdivrs
daa
jp
lods
pusha
es
jo
dec
stos
jne
stos
aaa
sub
lcall
mov
aaa
cltd
xchg
push
mov
cmp
fsubrp
jno
and
dec
fmull
test
pop
aad
sti
add
mov
xchg
rcrl
ret
push
and
lds
xchg
out
fsubp
cmp
pop
rcll
sbb
or
aad
aaa
mov
imul
and
cs
jl
cmp
and
inc
push
sahf
mov
ljmp
call
dec
data16
mov
mov
mov
pop
popl
pop
in
and
and
sbb
mov
xchg
fld
fsubrl
xchg
mov
inc
dec
loop
fisttps
add
decb
ljmp
add
and
data16
ja
add
push
cld
leave
xchg
rorb
xor
addr16
xchg
sub
jecxz
out
enter
pop
xchg
push
jb
dec
cmp
pop
mov
push
dec
in
in
jle
popf
into
lret
push
push
std
sub
add
daa
pop
jbe
fneni(8087
pop
out
inc
mov
mov
adc
les
mov
push
jp
stos
pusha
testb
mov
lods
sbb
push
jp
shrb
xchg
iret
inc
test
inc
and
cmp
adc
loopne
test
jg
sub
das
jns
inc
mov
xchg
jbe
lods
dec
sub
mov
std
and
sub
inc
aad
sbb
shlb
or
xlat
lahf
or
xchg
and
inc
ljmp
dec
in
xor
mov
add
adc
sahf
mov
xchg
das
xchg
pop
test
insl
ret
into
sbb
sahf
push
mov
jbe
adc
push
aaa
pop
mov
ficompl
or
or
push
mov
add
or
movsb
xor
cli
ret
loope
inc
cmpsb
jg
pop
cmp
in
fisubrs
mov
xchg
outsl
std
rcr
fldl
das
ljmp
sub
dec
ja
sbb
sbb
frstor
imull
into
mov
mov
xchg
cmc
ret
pop
scas
cmp
adc
pop
mov
iret
sti
ja
loope
pop
icebp
rorl
fsubl
xchg
icebp
adc
push
xchg
rolb
rcll
add
cld
fistpll
xor
fldenv
scas
loope
pop
add
scas
mov
push
insl
fisttps
push
cmp
pusha
insb
xor
shlb
push
data16
jnp
or
cmp
inc
xorb
fcompl
and
dec
add
jae
sarl
adc
shrb
jns
mov
imul
add
inc
sbb
les
pop
fwait
inc
outsb
push
fcmovbe
addr16
popa
jmp
inc
pop
pop
pop
inc
pop
jnp
push
popf
outsb
jmp
add
sub
aam
insb
push
mov
add
sub
xchg
int3
xor
aad
xor
or
push
pop
popa
or
je
sbb
push
mov
cmp
xchg
mov
jl
pop
cs
inc
pop
js
jno
mov
pop
pop
outsb
push
pop
outsl
sbb
push
cmp
test
je
pushf
or
and
sub
fsub
pop
aas
mov
push
mov
subl
rcl
mov
sahf
sub
and
xor
jne
cmpsl
mov
cmpsb
mov
scas
ljmp
mov
pop
pusha
fst
cmc
xchg
inc
xchg
fs
das
shrl
xchg
faddl
pushl
and
xchg
dec
je
int3
rorl
sbb
lods
ja
push
nop
mov
pop
sti
or
aad
icebp
sti
mov
repz
lea
test
inc
out
popf
xor
ja
jae
lcall
js
fwait
mov
mov
cs
jbe
jp
fcmovnu
or
xor
icebp
mov
lods
jle
jne
loopne
mov
out
sbb
sbb
mov
sbb
pushl
cld
jecxz
cwtl
sbb
cld
jg
in
cmp
jne
mov
scas
test
std
into
sti
fs
stos
or
xchg
and
jle
idivl
and
repz
sbb
out
stos
cwtl
mov
adc
stc
mov
cli
outsb
movsb
cmp
dec
push
push
andl
jecxz
pop
pop
mov
jecxz
dec
mov
shll
lret
adc
push
and
jge
mov
xchg
push
push
cmc
repz
xor
addr16
scas
sbb
aas
inc
sbb
jle
hlt
movsb
pop
fmul
push
aad
pushf
push
or
test
lds
das
dec
scas
stos
mov
shll
stos
or
stc
fistl
into
nop
xchg
hlt
or
test
out
nop
je
jle
jne
push
je
mov
push
push
shlb
xchg
cltd
xor
aam
test
dec
out
sbb
xchg
daa
inc
jns
imull
into
mov
push
cwtl
sbbb
in
mov
rcll
push
jp
pop
mov
pusha
divb
dec
jae
repz
xor
cwtl
push
mov
inc
sbb
mov
mov
addl
mov
repz
and
fldt
mov
mov
stc
jge
adc
xchg
xchg
comiss
cmp
fmul
movsl
mov
shrb
dec
cmp
bound
enter
movsl
dec
dec
stos
pop
imul
iret
push
jl
out
sti
movsl
push
or
mulb
negl
push
gs
jb
mov
popa
cmp
push
das
std
sub
push
rorl
mov
movl
ret
lock
adc
pushf
outsl
rorb
test
push
jns
pop
jp
mov
xor
push
mov
icebp
scas
out
cltd
mov
mov
jle
ret
or
xchg
jl
mov
pop
ds
pop
mov
mov
jge
stos
ds
addr16
mov
clc
bound
adc
test
mov
arpl
mov
dec
jno
jp
add
cmp
test
mov
sbb
adc
xchg
xchg
sbb
cmp
outsl
cmp
inc
ljmp
cmc
add
inc
xor
rolb
movsb
mov
daa
jno
dec
test
shlb
mov
out
and
mov
xor
subl
or
add
and
cmp
jmp
imul
xlat
cmp
or
mov
pushf
in
xchg
cmc
stos
mov
cwtl
popl
jne
mov
shll
sub
movsl
mov
pusha
add
add
xchg
mov
xchg
or
adc
mov
mov
testl
popa
push
and
loop
xchg
or
loopne
xor
loopne
xchg
inc
push
sub
xor
sbb
mov
mov
push
jge
lock
jge
add
push
test
or
xchg
lret
pop
mov
mov
outsb
rep
xchg
arpl
or
pop
sub
push
xchg
sahf
sbb
mov
test
xchg
insb
mov
aas
jo
pop
imul
mov
sbb
sbb
pusha
cltd
sub
mov
inc
outsl
cmp
shrl
inc
ficoml
pop
pop
arpl
push
repnz
push
cli
jmp
scas
aad
fidivrs
sbb
xor
xchg
out
cltd
push
and
outsl
imul
sbb
cmp
pop
ss
aas
and
sub
iret
cwtl
pop
jnp
push
idiv
sti
and
hlt
mov
xchg
cmc
rcr
sbb
mov
mov
fistps
in
push
scas
cmc
sub
xor
jne
in
mov
jecxz
or
xor
stos
fistpll
std
fimuls
mov
xor
leave
mov
repz
rol
insb
imul
ja
shll
pop
or
aaa
or
imul
les
ljmp
or
sbb
push
idiv
gs
sbb
add
jle
jne
push
sub
je
daa
jle
mov
mov
fwait
add
clc
and
loop
jmp
outsl
cmp
pop
in
out
sbb
ret
lret
push
repnz
stos
mov
mov
je
int3
in
xchg
mov
inc
sub
jle
adc
push
adc
jne
dec
es
xorb
cmc
scas
push
dec
push
fldcw
xchg
inc
inc
andb
sub
fcoms
stc
jl
cmp
mov
lahf
sti
stc
jno
dec
xchg
insl
cmp
and
inc
int3
repz
jnp
flds
lret
ret
mov
lahf
sub
inc
repz
or
xorb
stos
pop
push
sar
int3
sti
daa
shlb
cltd
add
popf
add
push
mov
jmp
test
xchg
daa
xchg
adc
push
sbb
push
add
sbb
mov
insl
sub
icebp
ficoms
cmc
imul
loope
andb
lret
or
mov
arpl
mov
mov
adc
inc
adc
push
ret
cltd
sbb
push
rolb
jb
or
push
dec
jle
test
push
push
add
daa
push
je
xor
inc
sbb
enter
mov
add
outsb
mov
mov
rcr
xchg
rcr
mov
add
jp
push
incl
mov
je
dec
lods
or
pop
mov
stos
stc
xchg
xor
mov
sub
out
ljmp
add
ss
outsl
push
jae
nop
adc
inc
mov
out
inc
xchg
in
or
popf
mov
xchg
jbe
inc
cmp
xor
or
adc
sub
aaa
std
lods
pop
and
mov
push
pop
repz
sbb
jmp
pop
add
addr16
rolb
ja
pop
popf
adc
lock
sbb
sub
or
lea
add
adc
cs
lea
out
dec
stos
fcomps
add
pop
mov
push
ljmp
divb
les
clc
fidivs
jbe
xor
cmp
sub
xchg
aam
out
mov
pop
test
mov
bnd
inc
ret
test
movb
cmc
faddl
inc
inc
es
or
flds
clc
pop
inc
loop
xor
pop
cld
ds
add
mov
mov
pop
ss
popa
or
mov
sbb
stc
pop
push
pop
shll
xor
pop
inc
clc
out
fadd
fstl
inc
mov
movsb
push
adc
cld
repz
adcb
stc
popf
cmp
pushf
mov
imul
sti
aaa
xchg
mov
sbb
les
int
and
lcall
xor
push
add
repnz
mov
sti
dec
mov
mov
mov
loope
js
sub
inc
xor
xor
lahf
cwtl
dec
mov
add
in
add
fisubrs
cld
mov
cwtl
mov
lcall
mov
rorl
cwtl
push
xchg
rcrb
pop
xor
sub
xor
mov
mov
mov
inc
jl
push
inc
mov
leave
push
fcomps
imul
dec
lret
sub
sbb
not
inc
dec
lods
xor
sub
push
in
xchg
popf
sub
sub
sti
and
cmpsl
bound
cmp
ffreep
clc
cwtl
aam
pop
push
nop
hlt
out
sub
sbb
insb
aad
xchg
adc
xchg
adcl
sahf
lock
test
int
ljmp
ror
stos
add
loope
inc
es
inc
sub
adc
mov
push
inc
push
sahf
divb
mov
mov
mov
fsubrs
or
cmpb
inc
push
cmp
mov
test
and
jnp
push
ror
jns
adc
pop
dec
subb
push
jbe
sub
jmp
mov
mov
dec
mov
out
mov
aad
and
or
push
ss
in
adc
push
pop
out
test
sub
dec
push
pop
fildl
lds
sub
ljmp
push
test
lds
lcall
cwtl
sub
out
dec
mov
pop
pop
mov
dec
or
outsl
in
test
into
dec
sub
push
adc
jne
jb
jb
xchg
xor
cmp
adc
aam
outsb
cltd
ja
mov
test
pop
xchg
jecxz
out
stos
pushf
test
sahf
sub
sub
xchg
add
mov
jg
or
cmpl
adc
test
or
xchg
cmp
adc
dec
mov
mov
cmp
inc
aam
mov
aam
sbb
sbb
sbb
jo
cmpb
in
xchg
lahf
out
es
xor
jns
pcmpeqb
and
adcb
scas
movsb
std
icebp
sub
mov
inc
scas
jge
cmpsb
hlt
out
mov
dec
mov
pushf
shlb
xchg
mov
pop
leave
jne
adc
imul
sub
fldt
test
cmpsl
xlat
pop
test
pusha
dec
mov
ljmp
enter
mov
xlat
inc
cmpb
xchg
subb
neg
les
cmp
mov
cmpsb
sbb
cmpb
imul
addl
out
pop
inc
pop
fbstp
add
mov
mov
add
insl
add
pop
sub
mov
mov
add
pop
in
fwait
or
or
jns
iret
imul
jp
cmp
adc
mov
jae
mov
mov
dec
jb
out
aas
ret
gs
mov
popf
pop
movsl
xchg
ret
je
bound
aaa
fidivrs
movsl
in
sbb
in
pushl
sbb
inc
rcl
pop
fdivr
or
cmp
cltd
neg
sub
mov
jae
rolb
mov
stc
adc
jnp
mov
xor
mov
fstpt
sub
out
daa
cmpb
jecxz
subb
int3
add
mov
mov
mov
sub
or
stos
adc
aaa
pushf
xchg
mov
out
xorl
out
sbb
jmp
loop
std
ljmp
mov
mov
scas
and
pop
shll
xchg
addr16
outsl
addr16
inc
insl
add
imul
xchg
or
push
aas
cmp
aaa
ljmp
push
mov
add
fistpll
jnp
fcoms
xchg
insb
arpl
sbbl
cmp
ret
loop
sbb
data16
mov
jns
rclb
es
cltd
xor
out
movsb
xchg
shlb
sarb
lods
sbb
aam
icebp
stc
out
jp
cli
stc
lods
call
sub
mov
fidivrs
dec
xchg
jle
adcl
sub
cmpsl
jmp
mov
add
pop
loopne
jp
movsl
push
int
push
adc
stos
imul
lods
jp
or
mul
dec
xchg
cwtl
lahf
push
mov
mov
imul
pop
cmpsb
sub
adc
das
sub
fdivs
pop
xor
ja
adc
shlb
sbb
loope
sub
sbb
fwait
mov
idivl
lds
enter
loop
fidivs
dec
sub
push
in
mov
sub
mov
loopne
ds
lahf
ficoms
cmp
pop
sti
es
cmpsl
in
jecxz
mov
adc
mov
js
sarl
cli
lods
leave
jp
jbe
and
leave
jp
popf
pop
fwait
jmp
in
xchg
outsb
pop
scas
sbb
pusha
shr
outsl
testl
hlt
inc
and
add
jae
stos
xor
jnp
push
shll
xor
adc
push
xor
inc
push
jo
mov
inc
in
add
jne
push
adc
xchg
fimuls
pop
addb
test
jne
lahf
xor
out
push
cwtl
lret
lcall
xchg
and
xchg
cltd
mov
repz
mov
sbb
sarl
sub
clc
shrl
ja
cltd
xlat
dec
add
xor
lods
mov
mov
adc
loopne
mov
mov
bound
push
sub
inc
sub
arpl
in
imul
jno
sub
mov
pusha
cmpsb
mov
test
pushf
shlb
repnz
scas
in
sbb
and
fdivrl
mov
loopne
ss
cmp
dec
inc
pop
xchg
or
jne
jne
sbb
leave
xchg
adc
pop
inc
xor
xchg
repz
xor
repnz
pop
mov
jmp
mov
or
dec
aad
es
aaa
or
fisubrl
in
dec
cltd
inc
test
push
imul
leave
xlat
push
dec
fwait
in
sub
jmp
mov
jb
xchg
bswap
stc
lret
cltd
jecxz
stc
pushf
cltd
dec
mov
arpl
mov
ret
mov
call
call
in
sub
pminub
cmp
ret
aam
jecxz
push
and
mov
and
lret
mov
std
call
gs
adc
inc
add
andl
or
xor
test
add
sub
adc
fstl
int3
movsl
shll
sbb
scas
push
sbb
mov
out
ja
adc
mov
rcrl
das
fwait
xchg
aam
hlt
fs
idivb
ret
mov
imul
cmc
push
outsb
loopne
cmp
sbb
jo
or
xor
adc
mov
int
movsl
sahf
mov
shl
sbb
fildl
mov
lahf
sub
loop
inc
lret
clc
adc
aam
scas
adc
loope
loop
call
loop
push
inc
nop
inc
mov
and
sub
sbb
shr
or
push
push
jge
add
adc
push
ret
aaa
imul
jg
xchg
divl
inc
in
xor
bound
out
popa
push
dec
pop
je
xor
push
out
xor
icebp
add
ret
jae
mov
fcompl
sbb
sub
mov
or
jp
loope
push
sti
mov
aam
outsl
shlb
adc
dec
lret
xchg
push
ret
pop
ret
insl
mov
cmp
and
and
pop
stc
mov
flds
mov
mov
call
mov
ss
mov
rcrb
push
ret
and
mov
insb
xchg
iret
notl
mov
popf
fs
test
or
call
mov
inc
push
dec
mov
xor
frstors
popa
or
lea
cmp
inc
pop
pop
adc
jo
dec
movsl
out
jno
mov
fs
jne
add
dec
adc
cld
into
mov
xorb
sbb
jno
jbe
pop
add
pop
xor
and
sbb
xchg
imul
jne
sti
adc
rclb
leave
or
iret
mov
xor
addl
aam
mov
mov
xor
xchg
test
mov
fisubs
and
clc
int3
stc
in
push
mov
mov
sysexit
bound
mov
inc
arpl
mov
retw
inc
test
mov
lret
cmc
sub
int3
das
rorl
jno
icebp
pushf
sahf
mov
sbb
mov
xchg
push
aaa
lret
mov
stos
dec
xor
mov
mov
in
outsb
push
in
xor
out
hlt
xchg
fildll
sub
cltd
fdivrl
push
or
out
popa
pop
insb
cmp
cmc
mov
xchg
insl
call
push
cmpl
cmp
shll
mov
sahf
mov
idiv
scas
push
sub
sbb
rcll
push
arpl
xchg
insb
xchg
jbe
test
lods
dec
repz
dec
addr16
sbb
ret
cli
adc
add
incb
inc
xor
mov
and
dec
fstpt
dec
or
bound
mov
mov
pop
cwtl
cli
dec
add
aam
out
in
ljmp
adc
and
hlt
mov
dec
mov
int
mov
mov
ja
mov
outsb
pop
jp
xchg
push
ljmp
pop
inc
push
mov
es
mov
fucomi
xchg
outsb
je
sub
hlt
enter
and
mov
lea
jecxz
adc
js
clc
or
call
jne
lds
and
jbe
xchg
sub
adc
dec
scas
sub
ljmp
clc
shrd
lds
lods
sbb
pop
pop
xor
sub
add
cmpsl
scas
jno
add
aad
mov
cmpsl
mov
cmp
mov
sub
rclb
xchg
enter
mov
mov
addr16
ret
mov
sbb
idivl
push
mov
and
js
inc
mov
jmp
mov
rclb
shll
stos
lods
add
jnp
out
pop
jbe
in
lcall
or
mov
lea
cmp
jns
push
hlt
mov
rclb
mov
inc
and
xchg
movsb
inc
or
loop
hlt
mov
insl
lret
xchg
push
push
or
jns
push
sahf
xchg
push
add
rclb
stos
push
jecxz
push
xchg
inc
cmpsl
stc
ss
jmp
jne
adc
sbb
cltd
pop
addb
shlb
in
lods
mov
jb
icebp
xchg
lret
sahf
arpl
fiadds
inc
and
stos
shll
xchg
fcompl
jmp
pop
cli
jge
in
imul
or
dec
sub
mov
mov
dec
into
adc
jle
and
out
stc
into
shll
mov
and
adc
or
lds
adc
out
sti
cmpsl
sbb
and
cmpb
out
mov
xchg
call
stos
test
jp
inc
cmp
and
pop
sbb
mov
and
lret
scas
jae
mov
das
fistps
test
lcall
pop
or
jnp
mov
pop
sub
mov
rol
pushf
in
or
aam
xor
loopne
adc
loope
shrl
jecxz
hlt
cmp
push
cmpsb
sarb
mov
lret
test
popa
popa
xchg
or
lea
inc
movsb
gs
enter
sbb
inc
xor
popa
xor
dec
add
xchg
or
fsubrl
dec
dec
pmaddwd
dec
pop
sbb
lret
loop
mov
test
popf
mulb
fstps
in
int3
sbb
or
test
xchg
sub
and
xor
rcl
xchg
test
xor
pop
dec
push
imul
fmuls
lds
je
fldl
das
adcl
sarl
inc
inc
adc
incl
or
pop
jb
sub
ljmp
inc
aam
mov
in
leave
popf
cltd
jmp
cmc
inc
mov
pop
add
aas
sbbb
jbe
or
stos
or
in
mov
push
popa
nop
inc
gs
add
clc
xchg
mov
fmulp
sub
push
mov
out
cli
cmp
cld
jp
push
push
sti
or
xlat
push
int3
test
sub
ja
xor
mov
dec
cli
std
js
divl
pop
xchg
xchg
fcoms
das
test
push
cmp
sbb
cld
imul
das
pop
mov
scas
movsl
or
out
or
xor
scas
adc
add
dec
adc
popa
lock
mov
push
inc
bound
sbb
mov
aad
dec
mov
mov
jge
movsb
xchg
mov
out
mov
inc
jmp
loop
mov
push
lahf
out
sub
cwtl
dec
je
or
aad
ficompl
inc
xlat
xchg
ret
and
push
sbb
rol
lods
sar
mov
mov
jnp
sti
sti
cltd
imull
pusha
xchg
jl
mov
not
mov
jge
xor
cld
sub
inc
ss
mov
pop
jb
mov
notl
mov
add
movsb
js
scas
dec
aad
push
in
xchg
mov
out
iret
popl
or
out
sti
jge
jae
mov
mov
add
dec
insb
sarl
fiaddl
sbb
jne
test
sub
sub
inc
cld
sub
push
loope
mov
adcl
shl
push
imul
iret
sub
lcall
xor
cwtl
xchg
arpl
psadbw
shlb
push
loopne
xor
jp
push
jl
dec
cltd
jge
aam
mov
in
add
or
in
fs
mov
test
push
dec
sub
sub
pop
popa
icebp
cmpsl
test
mov
or
stc
sub
loop
jp
insl
jmp
or
jbe
sahf
lea
lds
jno
fisttpll
bound
cmpsl
lret
mov
mov
push
stos
push
fcoms
pop
sub
cmc
jge
pusha
mov
sub
pop
xchg
mov
inc
sarl
sub
hlt
pop
stc
and
inc
sub
inc
int3
sbb
aam
test
mov
jp
or
lcall
dec
mov
out
pushf
fwait
jecxz
pop
js
mov
fildll
pushf
lods
or
mov
bound
or
mov
call
fs
stos
push
inc
push
bound
sarb
insl
stos
sbb
inc
jb
leave
incl
dec
shr
ret
cmpsb
fbstp
movsb
jmp
enter
pusha
mov
outsl
push
jg
addr16
mov
xor
ljmp
pushf
imul
lds
add
and
jne
xchg
cmpl
xlat
adc
int3
ljmp
ljmp
das
stc
adc
push
int3
or
mov
ss
xor
test
cmpsb
stos
push
js
jns
mov
test
sub
mov
or
rcrl
loop
scas
xchg
loope
mov
jp
out
xchg
loopne
jbe
pop
push
jne
xor
mov
fistl
loopne
pop
popa
pop
dec
xor
pop
xchg
mov
int3
cltd
xchg
cli
shrl
imul
push
in
subl
push
push
sbb
pop
push
xchg
fisubrs
and
pop
adc
cwtl
sarl
hlt
rorb
jmp
and
or
iret
scas
mov
mov
pop
test
sar
aad
mov
sub
pop
inc
shll
das
mov
pop
cwtl
gs
xor
mov
mov
inc
adc
test
mov
adc
int3
adc
cmp
ss
mov
dec
xchg
iret
push
bound
fdivp
push
aad
cmp
jae
ffree
jb
addr16
jle
mov
and
hlt
pushf
ret
mov
fsubrs
sub
cmp
push
insl
call
or
and
ja
xchg
sahf
sarl
cmpsb
inc
rolb
push
roll
mov
mov
jno
inc
sub
lret
dec
xchg
dec
pop
inc
aaa
mov
lss
push
pushf
dec
push
out
inc
push
outsb
divl
inc
test
mov
mov
jecxz
lcall
inc
or
pop
fcmove
xor
pop
dec
fidivrl
icebp
mov
shl
xchg
shlb
mov
inc
out
stos
add
jp
jge
inc
add
push
in
add
dec
arpl
inc
ds
cmp
mov
cmp
mov
lock
or
add
in
cmc
cmpsb
pop
lahf
mov
inc
pop
xor
and
stos
shlb
adc
stos
sti
cmp
mov
loop
mov
addl
arpl
sub
nop
je
test
cmp
mull
dec
mov
pop
out
fdivs
in
push
dec
and
add
addr16
push
push
test
cmp
iret
mov
addr16
loopne
sbb
iret
sbb
jb
mov
lods
sarb
incb
pop
dec
inc
push
in
into
mov
or
ljmp
lahf
mov
pop
mov
push
incl
fldl
icebp
jg
into
daa
loope
dec
leave
and
push
cs
mov
mov
jp
push
mov
jnp
or
push
or
clc
inc
sub
pop
xchg
pop
lods
les
aas
sub
push
adc
or
lock
rolb
inc
fsubl
test
push
mov
xor
add
sub
test
adc
stc
notb
sbb
fs
xchg
pop
int
cmovge
out
ficomps
push
fcoms
cmp
inc
mov
pop
lods
xchg
loope
aas
les
or
mov
push
fwait
sbbl
inc
pop
mov
dec
gs
inc
popa
cmp
ja
pop
sbb
lret
int
mov
mov
adc
xor
es
roll
lds
call
movl
mov
loop
jbe
pop
insl
pushf
ret
push
xchg
sub
fsubs
or
push
shll
or
sbbb
mov
inc
jbe
popa
add
in
inc
cmpsb
rclb
inc
pop
addr16
iret
pop
xchg
ds
int
imul
outsb
sbb
sub
dec
scas
jo
cli
loop
out
movsb
push
adc
add
sub
rcrb
pushf
scas
sub
mov
insb
inc
repz
mov
xor
rol
inc
insl
arpl
pop
mov
mov
pushf
loopne
ljmp
stos
push
addr16
jecxz
out
pop
cmp
in
push
pop
pusha
jne
mov
push
cmc
popl
xchg
jecxz
lods
jno
ds
std
jo
hlt
add
push
aad
pusha
jne
xchg
sbb
add
jnp
adc
mov
cmp
and
roll
push
icebp
scas
test
add
aaa
inc
inc
aas
add
add
test
aas
ret
xchg
add
cli
out
in
sub
mov
mov
xorb
subl
push
aaa
fstpl
xchg
pop
jns
je
imul
rol
sub
js
fstpt
cmp
stos
popa
ficoml
cmpsl
call
int
pop
bound
adc
sub
pushl
sub
fsubl
xor
push
cmpsb
inc
cli
std
movsb
test
nop
jecxz
and
mov
push
mov
sti
cld
pop
dec
xchg
dec
jb
in
xchg
pop
cld
sbb
lea
or
sbb
rcrl
jecxz
incb
int3
sbb
add
and
push
sub
inc
pop
xchg
jmp
pushf
popf
sub
lds
mov
sub
and
out
in
pop
stos
jg
sbb
mov
aas
imul
ja
cld
ret
adc
adc
popa
cmp
mov
sub
mov
mov
pop
cmp
fcomps
daa
imul
inc
lahf
mov
cltd
fadds
dec
inc
lret
cmpsl
jle
and
adc
addr16
jns
out
xchg
sub
lock
xchg
ss
sub
push
mov
std
out
and
mov
nop
outsl
lret
insb
mov
popa
or
out
inc
jmp
inc
out
sti
dec
push
mov
mov
in
and
mov
mov
xorb
aaa
mov
or
sub
push
or
xchg
popf
sbb
sbb
ret
test
push
loop
or
cmp
jne
sbb
ss
out
sbb
add
pop
arpl
inc
or
jle
push
rorb
dec
or
cld
mov
jmp
mov
sub
push
push
mov
nop
in
xchg
jmp
pop
push
dec
ljmp
and
mov
out
sbb
cmpsb
push
stc
cmp
mov
aaa
dec
lds
push
sbb
add
pop
adc
mov
push
mov
pop
shrl
xorl
jnp
aaa
das
cmp
inc
mov
div
mov
clc
test
mov
loop
adcl
nop
sbb
adc
adc
lret
jo
loop
or
popl
lods
cmp
xchg
xlat
push
nop
mov
imul
jmp
inc
mov
adc
or
xor
push
cmp
rcrl
andb
cmc
bound
enter
add
push
mov
sbb
xchg
dec
cmp
bound
xor
dec
adc
lahf
and
inc
sahf
repnz
and
xchg
popf
icebp
jne
ffreep
mov
sbb
jnp
mov
jge
inc
lahf
bound
xor
fwait
pop
xor
daa
add
inc
xor
leave
pop
xchg
lret
and
aam
xchg
mov
movsl
inc
in
hlt
inc
incl
pop
pop
aaa
push
jmpw
in
mov
test
pop
mov
push
push
pop
push
jbe
pusha
fsubs
dec
xchg
pusha
push
xchg
call
jne
ljmp
xor
sbb
scas
xchg
mov
pop
std
xor
xor
adc
push
into
inc
fisubl
out
fisttpl
inc
or
inc
pop
cld
loope
mov
cmp
or
sti
rcrl
inc
cmp
shll
adc
orb
fwait
js
adc
xchg
jp
mov
or
in
mov
outsb
mov
out
shrl
das
in
and
iret
xor
adc
mov
jns
orb
loope
call
inc
jmp
sub
int3
push
add
ret
sarl
shl
test
lea
pop
cli
xor
xchg
push
shll
pushf
or
adc
shlb
rol
test
adc
notl
cmp
inc
shlb
mov
loop
mov
sub
push
dec
push
add
cwtl
xor
iret
enter
mov
cmp
inc
jnp
in
mov
jmp
add
mov
mov
push
push
and
popaw
push
out
imull
push
loopne
stc
dec
icebp
ret
shll
sub
out
xchg
mov
inc
push
lods
dec
add
ret
pop
ja
and
lock
lret
adc
fidivrl
cmp
inc
shrb
in
mov
sbb
pop
loopne
cwtl
call
fbstp
lret
adc
lret
adc
jns
shll
jge,pn
jo
lcall
inc
cmp
push
fcomi
inc
fwait
inc
cmp
cmp
push
jp
xor
mov
mov
test
test
sysret
mov
xchg
testl
push
jmp
sbb
cmp
pusha
jne
sub
into
popa
int
and
cmp
popa
cld
mov
cld
sub
fidivrl
dec
sub
shll
pop
shlb
in
roll
push
add
adc
dec
mov
repnz
xor
stc
pop
lods
push
dec
inc
adc
insb
pop
push
inc
pop
sub
sub
mov
sub
push
test
test
ret
mov
sbbl
push
push
movsb
add
add
push
or
xchg
insl
sub
lcall
sbb
cltd
jns
mov
sbb
adc
cmpsb
inc
icebp
adc
mov
push
xor
clc
repz
inc
sbb
and
in
dec
lret
push
jbe
xchg
sbb
std
fidivrs
pushf
sub
xchg
das
int
adcb
in
mov
adc
mov
fstps
fistl
sbb
xchg
dec
mov
add
mov
inc
adc
pop
mov
push
stos
jl
cmp
test
call
std
fcompl
add
mov
subb
fistpll
push
cmpsl
push
and
cmp
scas
fnstsw
xor
mov
adc
jae
sub
outsb
shrb
xchg
pusha
dec
xor
or
orb
dec
and
sbb
movsl
stos
rcll
insl
out
ficompl
adc
int
cmp
into
mov
fidivs
lret
fsubl
scas
push
sbb
pop
lret
sub
ljmp
test
dec
enter
iret
out
inc
lret
push
mov
ret
call
mov
mov
insl
xchg
push
xchg
add
fidivrl
pop
pusha
sbb
cwtl
stos
xchg
xor
sub
xlat
and
jp
xchg
icebp
push
dec
fstpt
inc
xchg
fistpl
and
sarb
pop
or
fucomp
push
incl
sbb
lret
pop
push
jge
pop
cmp
outsb
fiadds
dec
and
lods
fnstsw
inc
je
inc
icebp
adcb
mov
ss
mov
int3
cmp
adc
jmp
idivl
xor
pop
dec
loope
outsb
jmp
ficomps
push
mov
icebp
mov
mov
out
cld
cli
lret
push
leave
push
cmp
mov
in
push
jmp
pop
cli
mov
sub
sub
pop
pop
xor
push
les
xor
xor
cs
cld
test
mov
xchg
adc
mov
or
xor
jno
jns
sub
in
add
jl
and
repnz
loope
sub
pushf
lret
jl
mov
fsubrs
aaa
or
test
call
bound
sti
aas
xchg
dec
jae
rorl
mov
xor
xchg
int
xor
fildll
les
add
fldl
mov
jae
insb
lea
dec
inc
adc
push
xor
mov
inc
test
add
lret
sub
cmp
aad
cmpsb
repnz
add
fbstp
cmove
push
and
inc
sahf
jle
shrb
push
icebp
sub
imul
mov
ljmp
hlt
add
or
outsb
fisttpll
addr16
int
push
cs
shrb
jl
push
mov
xchg
je
pop
lret
arpl
lcall
cmp
lods
adc
hlt
jle
dec
xor
data16
rcl
add
mov
out
adc
or
cltd
inc
shr
pop
int
cmp
into
jns
lret
mov
stos
push
into
dec
mov
popa
out
fdivl
mov
inc
cmp
addl
jecxz
inc
repz
jno
out
sbb
mov
jecxz
push
add
or
sti
ljmp
aam
mov
popa
nop
mov
stos
sub
fisubrl
jmp
int
mov
imul
or
mov
adc
pusha
xchg
push
in
xor
lcall
ss
aad
sub
dec
pop
jns
inc
jl
mov
jbe
pop
pop
ljmp
dec
sarl
pop
add
pop
mov
aaa
repnz
test
divl
out
arpl
pop
mov
or
test
mov
pop
xchg
add
xor
xchg
xchg
xor
and
mov
stc
push
jecxz
punpckhdq
inc
jl
cmp
shlb
ds
add
adc
orb
pop
mov
cmpsl
jns
jge
fs
jle
mov
test
xor
and
es
stos
pop
pusha
fbstp
pop
or
pop
lret
fwait
je
popl
or
cmpsl
xchg
inc
add
pop
mov
add
aas
cld
fsubrs
fwait
inc
add
xor
pop
repnz
clc
cmp
sub
mov
sbb
dec
in
pop
sbb
mov
lahf
pop
xchg
test
inc
adc
pop
adc
cmpsb
sub
div
js
out
fbld
mov
in
int3
pop
mov
mov
pop
fildll
push
movsl
int3
pop
sub
xchg
inc
mov
lahf
dec
fmull
jbe
pusha
mov
aaa
out
insl
mov
fsts
push
pusha
mov
adc
jge
cmc
pop
lret
int
icebp
psubsw
aam
orl
lods
xchg
mov
inc
push
test
add
test
lret
cmp
xor
hlt
push
jl
inc
adc
inc
in
mov
inc
jb
lock
scas
add
and
mov
pop
gs
sub
roll
or
mov
push
test
cmpb
and
xor
dec
ljmp
and
fiaddl
sub
push
fiadds
rclb
sbb
cmpsl
unpcklps
dec
in
orl
aad
mov
dec
inc
hlt
pop
leave
jno
dec
cld
test
lods
dec
jmp
add
jne
mov
cltd
jle
dec
test
std
adc
and
inc
lock
fcmovbe
push
popa
lock
and
mov
dec
push
mov
or
rcl
outsb
xchg
lock
aam
negb
jno
lcall
mov
add
imul
jo
inc
sbb
adcl
insb
push
aam
and
scas
jp
add
int
xchg
cmp
icebp
hlt
pushf
push
stos
mov
pop
fucomi
jle
push
sbb
jae
fists
jmp
or
aad
add
pop
fsubs
ds
push
jb
push
scas
mov
lahf
cmpsl
mov
sub
dec
std
inc
jo
push
xchg
adc
sarl
push
mov
inc
out
sub
aad
enter
mov
push
jno
andb
add
add
test
xor
lea
bound
int3
lods
insl
jne
loop
sarl
xchg
data16
les
and
and
mov
and
jl
mov
rclb
loope
inc
scas
das
jmp
call
paddusw
mov
and
ds
daa
dec
mov
lahf
mov
loope
pop
cmp
xchg
xchg
mov
mov
rol
orb
dec
mov
sub
repnz
imul
lcall
pop
pushf
jp
fs
jae
push
fs
pop
mov
jge
xchg
ja
cmp
push
mov
pop
test
sbb
mov
rcrb
rorb
into
shrb
sbb
movl
aam
sub
inc
xchg
mov
jmp
push
sub
imul
leave
mov
ja
cmp
int
nop
xor
pop
dec
xchg
adc
add
rclb
lea
push
sbb
mov
arpl
xchg
aaa
cmp
jne
add
movsl
jne
shlb
mov
stc
aam
sti
enter
shrl
ljmp
sub
jno
jecxz
out
pusha
test
cltd
mov
sub
adc
es
fmuls
xchg
pop
sbb
push
push
fstpl
adc
cmp
push
iret
sti
movsb
fwait
leave
rclb
xchg
mov
cwtl
imul
sbb
fsubp
jb
or
lcall
je
sub
mov
fwait
hlt
jg
call
in
dec
mov
shll
insl
jg
pop
pop
cmp
fwait
addr16
adc
xorb
movsb
sbb
daa
idiv
mov
or
cltd
fcompl
shl
test
cmp
movsb
idivl
push
jns
mov
lods
fwait
inc
mov
aad
mov
dec
push
push
jns
cmpsb
dec
adc
cmp
insl
adcl
jbe
call
pusha
pusha
sub
xchg
add
test
cld
and
mov
enter
or
cmp
call
lcall
aam
sub
adc
fadd
or
inc
out
pop
test
jg
lret
xchg
xchg
mov
insb
jae
cmp
add
orb
mov
scas
cmp
adc
xchg
or
outsl
mov
movb
dec
outsb
mov
mov
stc
test
test
xchg
sub
lods
xchg
leave
cmp
push
ljmp
lea
call
fdivl
in
icebp
add
nop
xchg
cmc
fists
jp
push
sbb
movsb
jle
in
aaa
xor
rcll
dec
inc
push
jg
xor
inc
adc
aad
mov
or
pusha
mov
fwait
into
fs
loopne
hlt
push
cmp
pushf
inc
ds
call
or
out
mov
jl
inc
push
fsubs
scas
add
or
out
push
lahf
int
xor
call
out
jbe
bound
lea
hlt
adc
test
in
xchg
loop
out
xor
cli
sub
cmp
cmp
pop
add
in
mov
jg
fidivrl
lcall
es
or
jnp
sbb
xor
stos
cmp
xor
jmp
sub
sbb
push
popa
inc
out
out
loope
loop
mov
and
mov
dec
out
adc
pop
int3
mov
mov
xorb
cmp
adc
sbb
xor
adc
jecxz
imul
cmp
lret
jb
fsts
jb
and
pop
arpl
outsl
mov
lock
insl
xor
add
rorb
sahf
mov
test
dec
daa
and
in
sahf
sub
js
ss
outsl
sarl
push
icebp
ret
cwtl
sub
pop
loopne
incl
lea
xchg
dec
pop
push
xor
pop
mov
movsb
push
pop
loop
adc
jge
ds
loope
sub
add
jl
mov
rolb
xchg
xchg
test
mov
sub
xchg
mov
lahf
push
aas
mov
push
insb
mov
mov
xchg
sub
call
or
push
inc
mov
mov
dec
sbbb
out
aaa
or
bound
inc
sub
xor
out
cmp
xchg
inc
fcoms
lods
jo
or
adc
add
and
cwtl
adc
add
or
add
xor
xchg
daa
fistpl
push
jmp
test
dec
lea
push
cmpsl
aaa
pop
xchg
in
cmc
stc
repnz
std
push
push
push
dec
in
pop
and
dec
pusha
in
paddb
fbstp
int3
xchg
lods
dec
push
jbe
lcall
insb
icebp
sahf
cld
xchg
pop
stos
loopne
out
xchg
js
popf
pop
cwtl
cmp
xchg
dec
xchg
sti
imul
mov
out
jecxz
inc
repnz
jnp
lods
fadd
push
adc
adc
sub
test
leave
cmp
fistpl
adc
xor
aaa
rcrl
fidivs
inc
jb
ret
push
fucomi
insb
jge
push
xchg
ret
repz
es
push
or
inc
test
gs
je
insl
mov
mov
mov
fnstsw
out
fmull
jae
imul
inc
in
pop
daa
mov
dec
mov
fcmovnu
jmp
push
popa
push
stos
ljmp
lahf
fstl
jg
aam
leave
mov
push
dec
dec
xchg
cs
in
inc
adc
fwait
aad
es
cmpsb
loop
add
aas
dec
addr16
hlt
mov
sarl
clc
dec
ret
cwtl
xchg
mov
pop
fidivrl
out
or
aaa
and
aad
or
xchg
or
add
out
cmp
fisubl
cld
push
add
into
rolb
je
sub
movsl
scas
sub
loope
test
lods
ret
lahf
inc
leave
roll
out
and
pop
aas
clc
les
mov
outsl
sti
out
fisttpll
or
sub
sarb
int
fstps
mov
leave
fcoms
lock
mov
inc
int3
enter
mov
xlat
lret
rorl
jg
repz
xor
sub
cmpsb
pop
lahf
fs
xchg
scas
mov
aas
inc
sbb
push
dec
scas
std
inc
lock
mov
enter
fnstcw
push
and
and
popa
mov
push
adc
add
add
adc
idiv
lret
dec
fdivrl
stos
adc
data16
pop
cmp
out
xchg
neg
ficoml
mov
jl
push
fmull
and
icebp
movsb
jno
lods
ss
cwtl
stc
push
jae
jmp
dec
jne
sbb
int
jns
or
fcompl
jno
repnz
movl
loopne
or
in
jl
sbb
or
stos
xchg
shll
xchg
out
push
pop
adc
repz
mov
fwait
cltd
xchg
push
pop
jns
xor
lea
mov
sbb
jge
mov
out
scas
out
jl
inc
mov
mov
jns
sbb
fnstcw
mov
jne
in
dec
and
mov
xchg
jmp
inc
xor
xchg
pop
push
imul
in
push
add
lods
sub
mov
test
cmp
push
cmc
inc
mov
add
stos
addl
rclb
cmp
adc
pop
push
pop
and
pusha
in
repnz
jecxz
jnp
rcr
dec
addr16
xchg
xchg
adc
add
jmp
xor
mov
or
stos
inc
shl
push
fisttpll
shlb
jecxz
adc
pop
mov
aaa
mov
jl
out
shlb
fdivp
push
ss
sub
aad
xchg
push
paddw
mov
cmp
sub
xchg
mov
mov
or
bound
cld
ds
pop
sbb
lahf
mov
or
in
nop
mov
push
or
fdivs
repnz
adc
dec
cmp
testl
movsl
mov
outsl
jle
or
adc
mov
jle
rcl
pop
pop
into
outsl
lret
dec
loope
cmp
arpl
into
stos
loop
cmpsl
fs
cmp
mov
inc
jmp
jns
cmpb
mov
and
outsl
or
lahf
add
flds
pushf
fldcw
jp
push
xchg
xchg
les
out
roll
push
push
sub
sti
cli
lods
fs
adc
push
cltd
insb
add
push
mov
inc
cmp
and
lods
or
pop
daa
xor
jle
nop
pop
and
jne
sub
aad
mov
or
or
addl
adc
push
clc
ja
scas
sub
out
cwtl
sbb
addr16
dec
add
mov
push
test
inc
xor
stc
pop
into
xorb
push
inc
mov
or
dec
test
lods
popf
pop
add
out
jmp
add
pop
fidivrl
pushf
mov
repz
or
add
xchg
adc
mov
add
mov
lahf
jge
stos
mov
scas
es
lds
enter
sbb
leave
in
pop
xchg
test
repz
add
sub
push
mov
addr16
sbb
pop
jge
lock
pop
daa
jle,pn
stos
out
dec
aas
je
push
and
outsl
xor
insl
add
icebp
xchg
jl
and
mov
popa
je
bound
sbb
fadds
jecxz
jns
imul
and
sub
in
movsb
rcrb
lea
in
popf
dec
outsl
das
mov
popl
jmp
rclb
inc
stos
out
cltd
aad
popa
data16
ret
mov
sarl
adcb
aam
xor
lcall
into
nop
push
cs
inc
mov
outsl
mov
out
imul
mov
cli
das
dec
or
enter
sub
stc
rorl
cmc
sbb
out
lcall
sub
sub
pop
mov
outsl
sahf
mov
jno
popa
iret
inc
xlat
in
and
sbb
push
enter
sub
imul
aad
sub
out
imul
mov
push
add
mov
xchg
push
call
jg
sub
cld
cltd
jbe
pop
cmpsb
xor
pop
xchg
xor
sub
fidivs
cmpsl
lds
scas
mov
sub
push
mov
in
fisubl
cld
test
add
mov
cld
mov
dec
dec
inc
or
push
fwait
jecxz
add
shll
xor
and
push
pop
adc
lret
repz
pop
adc
and
push
sub
xor
adc
sar
xchg
sub
xchg
subl
mov
mov
mov
mov
aas
add
bndldx
ja
mov
mov
pusha
or
mov
and
cmc
jl
das
cmpsb
dec
xchg
fmulp
add
push
enter
sahf
test
mov
inc
fwait
idivl
rcll
arpl
lret
filds
mov
out
xchg
insl
or
fstpt
fiaddl
jle
loopne
mov
cmp
mov
mov
mov
xchg
xor
dec
je
lret
repz
scas
pcmpeqd
and
fcoml
int3
movsl
jo
mov
cmp
lods
or
cmpb
jp
pop
mov
dec
xor
lcall
sub
and
sbb
test
shl
cmp
stc
mov
enter
add
push
push
iret
ret
push
cld
repz
fstpl
imul
add
into
and
push
mov
inc
and
dec
sub
jne
loopne
or
mov
out
mov
lods
pushf
sbb
add
insl
andb
and
in
sbb
xor
hlt
mov
ljmp
xchg
lcall
jb
pop
push
mov
xchg
adc
scas
in
gs
mov
inc
rorb
fidivs
mov
adc
scas
movl
lret
sub
push
mov
hlt
call
mov
pushf
std
shll
xchg
addr16
sbb
jns
mov
jle
pop
pop
pop
xor
aas
in
dec
lods
out
cmp
das
iret
mov
imul
testb
adc
sbb
mov
sbb
into
sar
je
or
popa
push
jae
jns
mov
inc
push
rcll
in
inc
mov
mov
cmp
inc
pop
xchg
notl
pop
cmp
ret
pop
sub
add
jge
cmc
mov
xor
pop
adc
sahf
pop
cmp
cmp
cmc
or
xchg
cmp
nop
push
leave
jno
in
sub
repz
addr16
lock
or
ss
ds
sbb
xchg
into
imul
scas
out
es
gs
js
sbbb
xchg
roll
jecxz
mov
cmp
lahf
js
dec
clc
adc
in
into
mov
sub
sub
jg
xchg
pop
xchg
imul
les
pop
inc
lods
xchg
cmp
xor
xchg
inc
lret
imul
inc
call
pop
je
icebp
add
push
jl
cmpb
lods
fidivrl
test
xchg
icebp
mov
ds
cmp
hlt
jo
dec
and
mov
inc
mov
loopne
mov
inc
test
jne
imul
idivl
call
fsts
push
rcl
nop
ljmp
mov
xor
mov
inc
and
pop
int
adc
lcall
arpl
or
mov
ss
bound
and
in
into
sbb
and
sahf
jbe
mov
bound
mov
daa
mov
and
in
push
and
cwtl
sti
arpl
xchg
inc
inc
rorb
in
imul
lods
test
sub
adc
push
lods
repz
xor
std
scas
mov
add
shll
sbbl
adcl
repnz
xor
cmpsb
xchg
push
push
dec
js
icebp
or
pop
or
adc
pop
fldl
into
add
push
sub
repnz
andb
outsl
xchg
mov
divb
mov
jg
outsl
mov
cli
pop
mov
dec
push
gs
stos
test
rcll
add
sub
aaa
xchg
out
and
sub
lock
jb
and
push
push
mov
cltd
mov
call
iret
lret
add
or
push
sub
mov
roll
push
imul
pop
daa
jae
movsl
jae
dec
jns
jl
fcomps
push
jmp
mov
xchg
call
jg
jecxz
dec
bound
mov
loop
or
shlb
xor
cld
stos
cmp
das
mov
hlt
pusha
and
sbb
outsl
test
aam
fdivrp
jae
scas
jns
jnp
ret
inc
cltd
cmp
in
push
insb
icebp
sub
bound
jae
mov
or
cmp
arpl
in
jns
mov
and
and
ret
and
inc
jg
jb
mov
xchg
fisubl
icebp
negb
aam
stc
adcb
shll
xor
pop
inc
xchg
mul
sbb
aam
test
movb
adc
ja
xchg
dec
loop
sahf
jno
mov
stc
jno
test
aad
dec
adc
es
and
cmc
and
or
xor
inc
test
lods
mov
inc
mov
add
cmc
xchg
shlb
fisubrl
xchg
jo
popl
jns
test
xchg
sbb
jmp
pushf
or
inc
jns
orl
jne
and
xlat
sub
cld
jnp
xor
int
or
sbb
mov
aaa
inc
xlat
ss
cmp
sbb
hlt
pop
fcom
sub
js
lret
mov
shlb
adc
mov
fsubrp
gs
xor
clc
in
insl
mov
adc
repnz
nop
mov
fs
or
dec
loope
push
fsubrl
outsl
mov
push
dec
pop
cmpsl
pusha
fstl
loop
xchg
add
push
mov
orl
xchg
subl
js
cmp
rorb
xlat
repz
movsl
aam
inc
cmp
or
xchg
in
test
jb
fmuls
shlb
adc
filds
rol
dec
xor
outsl
nop
cs
push
pop
adc
daa
sarl
jne,pn
xchg
pop
xchg
xlat
jnp
jmp
nop
jmp
hlt
pop
ret
or
dec
push
xor
repz
and
pop
vpminsw
or
mov
jnp
repnz
sti
xorb
sub
jne
xor
int
cld
xchg
xor
add
insl
or
dec
mov
aas
fldt
popl
stos
dec
sbb
pop
xchg
fsubrl
rcrb
arpl
adc
and
aam
pop
sarl
pop
sti
or
in
mov
lret
mov
int3
in
jmp
ret
mov
mov
pop
loop
ss
add
aam
aam
push
in
adc
add
ds
sub
out
daa
ret
push
nop
cwtl
cmp
mov
xor
mov
int3
test
jmp
shr
mov
add
or
xlat
jne
dec
mov
mov
mov
push
das
cltd
inc
lods
in
and
daa
int3
pop
push
inc
fadd
fcom
push
mov
mov
xor
or
lock
sub
mov
dec
lock
adc
pusha
leave
cmp
mov
cmc
ror
dec
js
mov
leave
xlat
and
inc
lret
aas
into
aas
imul
scas
adc
or
in
es
in
ret
lcall
js
add
add
inc
inc
xchg
mov
add
mov
mov
mov
xor
mov
push
or
movsl
enter
imul
std
mov
push
movsb
mov
ljmp
out
repz
sbb
adc
sti
adc
push
lahf
mov
ret
sbb
jns
inc
cltd
ljmp
inc
es
sub
pop
adc
dec
data16
into
fs
mov
cmp
mov
lds
jnp
shlb
mov
insl
leave
in
cmp
jo
mov
in
jno
mov
mov
push
sub
mov
and
push
jmp
aas
and
adc
cmp
mov
and
add
test
popf
add
sarl
cmp
jmp
es
popa
mov
movsl
mov
inc
pushf
cld
aaa
sbb
pop
mov
jmp
dec
cmpsl
inc
jl
jae
int3
scas
aaa
add
inc
ds
gs
mov
mov
jns
notl
mov
push
push
adc
cld
std
pop
popf
leave
cltd
jno
mov
stos
xchg
jge
mov
sahf
mov
mov
xchg
repz
testl
sbb
movsl
in
sub
enter
loop
add
dec
mov
adc
xchg
and
scas
mov
inc
cli
sub
xchg
nop
and
mov
xchg
iret
add
pop
lds
sbb
jne
pop
push
xchg
push
push
sbb
ss
mov
add
mov
cmp
jg
mov
adc
mov
push
das
arpl
pushf
push
xor
and
mov
xchg
inc
shlb
dec
adc
sahf
xchg
mov
add
orb
test
sbb
in
rcrl
mov
xchg
xchg
dec
sbb
or
ret
mul
xchg
ljmp
mov
addb
mov
xor
gs
sbb
jecxz
mov
lods
xchg
icebp
es
inc
out
mov
and
push
pop
inc
sub
xchg
push
pop
cs
fnstcw
xchg
push
fldt
icebp
mov
icebp
pop
dec
icebp
sahf
and
or
jnp
sbb
cmc
dec
lock
pop
adc
pop
add
ficompl
stc
and
mov
ret
repnz
pop
js
jge
push
loope
popf
aad
or
jb
adc
or
insl
loop
mov
add
sarl
out
int3
pushf
adc
out
mov
andl
testl
mov
xchg
push
sbb
loop
sarb
dec
adc
shll
mov
arpl
or
pop
fdivrs
das
cmpsl
decl
pop
outsb
jno
sub
xor
mov
xchg
or
clc
sahf
inc
mov
mov
dec
rcl
cld
out
jmp
add
shl
mov
leave
add
cmp
movsl
negl
adcl
inc
aaa
push
stos
shlb
sbb
jmp
movss
lret
jae
ret
cmp
pop
insb
push
or
sub
mov
xor
sbb
jge
pushf
jbe
stos
andb
loope
shrl
test
repz
dec
and
inc
lcall
push
sbb
jecxz
sbb
mov
cmp
push
push
pop
scas
sbbl
sbb
cld
mov
cmpsl
cs
fcoms
xchg
dec
mov
pop
outsb
imul
jge
mov
aaa
es
fdivrs
jl
xchg
icebp
xchg
xor
push
adc
fistpl
or
pop
mov
test
mov
push
cli
and
mov
push
out
leave
cmpsb
xchg
pop
xchg
xor
loop
lret
rcll
je
jl
add
cwtl
adc
insb
inc
push
push
rcll
je
lcall
inc
movb
push
frstor
adc
xor
inc
pusha
sbb
jl
cmp
pop
push
adc
dec
xchg
sub
add
cli
int
xor
nop
sub
frstor
sbb
inc
call
mov
cmp
pop
rorb
dec
mov
mov
and
decl
or
cmp
dec
jg
dec
fidivl
out
fs
in
jbe
mov
xlat
aam
push
ret
inc
xchg
cmpsb
sbb
inc
dec
pop
es
mov
pop
jg
push
add
mov
ljmp
add
incl
imul
iret
push
inc
fisttpll
js
or
add
cmpsl
jb
out
cld
jb
nop
sbb
addb
pop
jle
cmp
lods
push
fs
sbb
push
xor
xlat
lea
pop
imul
jl
enter
shrl
lahf
inc
cmp
movl
outsl
call
imull
sbbl
aas
sub
std
mov
arpl
iret
pop
out
pop
mov
loopne
enter
mov
adc
jne
cli
ss
repnz
shll
lret
fidivl
fs
sub
leave
sbb
dec
adc
setnp
inc
rclb
les
sarb
jbe
xchg
ror
lods
push
and
and
push
pop
or
xchg
popf
aam
mov
cmp
inc
cmp
push
iret
cmp
popa
test
dec
jbe
sub
test
mov
add
fidivl
push
movsl
out
pop
add
jecxz
repnz
fs
add
cmp
fmul
pop
or
fbld
inc
xor
jp
es
adc
movsb
data16
pusha
add
push
cmovne
xor
add
or
loop
mov
clc
dec
popa
sub
lods
mov
cmp
out
or
xor
cld
mov
test
push
cwtl
mov
lret
jbe
test
or
pop
sbb
jne
pop
and
and
inc
pop
movsl
adc
lahf
pop
imul
cmp
js
ss
loope
sub
add
cs
add
mov
fmull
cmp
fadds
sub
mov
in
insl
dec
and
adcl
imul
xlat
add
popw
mov
push
sti
or
movsb
cmovbe
mov
ja
rcll
dec
xchg
sbb
bound
inc
mov
int3
inc
push
sub
add
fistpll
mov
push
adc
xor
mov
imul
or
popa
js
jp
pop
xor
decl
int3
mov
jl
inc
sbb
jp
aam
pushw
dec
mov
xchg
pop
jp
int
jo
push
js
enter
cltd
sub
cmc
jbe
jno
jns
rorl
idivb
movsl
push
loope
pop
lods
inc
cmp
loope
ja
in
add
sbb
pop
or
cmp
or
adc
sub
mov
pop
push
sub
into
push
xchg
addb
pop
sahf
pop
je
dec
cmp
arpl
test
stos
jnp
xorb
xchg
popf
sbb
popa
sbb
pop
jbe
cmc
sub
jns
out
xor
adc
into
scas
jo
gs
sti
jno
jae
sub
cmp
mov
sbb
inc
fincstp
xor
cmp
outsl
sbb
push
loope
rclb
cmpsb
lahf
das
decl
sarl
rorl
das
pop
xor
push
xchg
sbb
popf
lea
xchg
test
outsb
push
loopne
cmp
mov
cltd
shlb
orb
hlt
ret
inc
clc
leave
mov
dec
loop
mov
pusha
idiv
iret
nop
push
pusha
mov
gs
rclb
xchg
inc
ds
dec
pop
adc
mov
scas
in
movsl
xchg
imul
and
lock
inc
stc
lahf
test
icebp
cmpsl
les
fcomp
adc
cmp
sub
rcll
scas
dec
mov
jbe
pop
and
push
push
loopne
jbe
sti
inc
jle
jg
xchg
mov
xlat
xchg
fs
nop
pop
es
repnz
pop
xchg
adc
jns
dec
dec
inc
jl
fcoms
pop
cmc
pop
das
mov
daa
sbb
adc
add
popa
test
pushf
icebp
int
fwait
jl
adc
sbbb
in
call
or
cmp
or
jg
adc
xchg
cmp
inc
dec
jb
push
mov
int3
ja
jge
push
lock
lods
clc
push
xor
push
xlat
dec
dec
es
pop
in
out
push
pop
cmp
xor
seta
lcall
and
pushl
scas
je
sub
out
sub
clc
adc
mov
es
arpl
jmp
push
lret
inc
xchg
int3
pop
andl
inc
lret
stc
lcall
inc
jl
enter
shr
or
push
fists
jg
jle
jp
ljmp
adc
push
xor
mov
rorb
filds
push
nop
insl
inc
cmpsl
jp
xchg
repz
mov
das
movsb
outsl
shrl
insb
pop
cltd
jg
out
fistps
rorl
xchg
lret
jle
cltd
cmp
xorl
mov
insl
push
add
icebp
sbb
ds
cmpl
ja
mov
dec
iret
in
sub
leave
jmp
js
xor
cli
shlb
fiadds
lret
xchg
shll
call
cmp
push
mov
mov
mov
icebp
sub
sub
in
ficomps
xchg
xor
ds
jmp
mov
ljmp
mov
clc
scas
outsl
and
push
loopne
xchg
fwait
cld
mov
fcompl
jp
in
sti
popa
dec
je
dec
iret
mov
xor
cmpsb
ja
loop
xlat
jmp
push
fsubrs
dec
inc
pop
in
and
movsl
mov
rcll
ret
cmpsl
rcr
imul
sbb
adc
push
mov
xchg
mov
dec
and
das
mov
sahf
jge
jo
decb
push
xor
cmp
lods
jg
testl
mov
xchg
movsb
stos
mov
int
pop
adc
and
push
lea
sti
pop
xor
xorb
movsb
dec
loope
repnz
push
das
ljmp
scas
adc
enter
aaa
scas
and
dec
das
out
fwait
imul
dec
fbld
xor
mov
dec
xor
mov
mov
xchg
movsb
xchg
stos
shl
pop
adc
ljmp
hlt
xchg
mov
sahf
dec
sarb
push
push
in
cmp
mov
add
outsb
in
mov
je
push
divl
pop
incb
sbb
sbb
inc
jbe
int
push
sub
add
ds
dec
fsts
hlt
aam
and
mov
fmull
dec
push
out
mov
in
xlat
imul
jo
mov
mov
ljmp
dec
dec
repnz
mov
sub
mov
int
inc
or
cmpsl
frstor
shrl
aam
inc
dec
jb
cmpsb
mov
into
xadd
mov
aam
and
mov
cmp
sahf
ja
cltd
cmp
xchg
jmp
push
dec
pop
lods
add
les
mov
out
mov
sub
lds
pop
fcoml
dec
iret
out
cs
mov
enter
xor
mov
loope
cltd
lods
arpl
fidivrs
inc
nop/reserved
popa
loop
jne
mov
cmpsl
mov
or
pop
and
inc
adc
and
scas
lahf
je
rolb
lods
dec
mov
nop
frstor
dec
xor
jg
adc
call
mov
enter
repnz
fucom
pop
jle
cmpb
leave
mov
inc
xor
push
ja
scas
dec
cmc
das
push
out
add
test
shlb
sub
mov
push
ljmp
out
push
jno
pop
repnz
std
sub
imul
mov
test
nop
inc
add
xlat
sub
adc
rcll
cmpsl
ficoms
dec
push
cmp
push
mov
call
inc
insb
rcr
pop
inc
fcoml
ljmp
je
in
mov
adc
jle
lds
cmp
pop
xchg
dec
pop
jae
xchg
dec
push
ja
adc
add
xor
aaa
pop
cmp
mov
fcompl
add
sub
inc
pop
mov
sub
in
jecxz
add
int
test
das
dec
lahf
adc
stos
out
repnz
pop
jbe
dec
ss
pushl
dec
cmp
mov
push
mov
or
scas
out
shrb
js
push
out
sbb
cmpsl
pusha
iret
mov
jp
xadd
dec
cld
hlt
ss
insb
mov
aad
enter
fnstcw
popa
data16
xor
push
outsb
push
fdivs
insb
pushf
lds
add
xor
loopne
aam
inc
sub
cmp
mov
mov
cmp
mov
add
add
das
sub
test
mov
aas
push
insb
out
shll
in
jo
push
hlt
pop
xor
sbb
push
mov
xor
stc
daa
jne
int3
pop
sbb
sub
mov
or
loopne
lahf
sub
pop
dec
xor
cmp
add
stc
adc
xchg
mov
retw
aaa
mov
xlat
pusha
pop
gs
add
ret
push
push
outsb
test
pop
loopne
or
add
out
add
mov
mov
mov
shlb
arpl
push
enter
xchg
lahf
and
mov
popa
arpl
es
dec
fsubrp
pop
lahf
xchg
mov
add
test
mov
add
js
addr16
divb
xor
daa
enter
scas
insb
sbb
mov
jg
dec
bound
lcall
fcomps
xchg
jge
xchg
nop
sub
and
inc
jne
mov
and
pop
sti
dec
aaa
das
lcall
pop
fildll
insb
sub
pusha
mov
daa
push
scas
xchg
sbb
fscale
hlt
cmp
pop
push
in
sbb
sbb
and
cmp
insl
fisubl
push
popf
pop
lahf
out
push
or
jbe
jle
xchg
andl
loope
jmp
push
addr16
sti
xor
push
jae
jge
or
sub
scas
mov
std
ret
int3
insb
sahf
inc
fmull
sbb
hlt
fsubs
xor
stos
repnz
xor
nop
scas
sub
dec
and
xlat
xchg
shll
dec
cmpsl
mov
lret
mov
dec
lock
fsts
mov
aaa
lret
push
mov
aam
mov
dec
imul
push
popa
jbe
lds
xor
and
movsl
push
xchg
lock
mov
xor
clc
push
xor
and
xchg
sub
push
inc
ja
and
cmpsl
out
xchg
or
test
or
push
gs
fwait
notl
rcll
xor
pushf
imul
cwtl
mov
lock
out
bound
fcmovnbe
inc
xchg
inc
imul
out
lret
cmp
push
imul
insl
out
push
push
mov
or
mov
sub
in
adc
pop
push
push
es
bound
jle
adc
in
mov
xchg
pushw
pop
addb
add
adc
jno
jmp
les
sti
bound
in
pop
xor
mul
rcl
je
leave
mov
sub
mov
fdivl
sub
mov
lcall
or
push
lcall
and
jns
pop
jbe
cmp
jns
in
dec
jl
daa
rcll
or
mov
dec
les
adc
cmp
lock
xchg
pop
inc
mov
lcall
pop
mov
rorl
dec
aad
stos
and
ljmp
imul
stc
xlat
ljmp
push
cmpsl
shrb
cmp
xor
push
jecxz
pop
jecxz
add
mov
adc
movsb
in
sarb
mov
bound
fdivrl
adc
scas
mov
cmpsl
mov
mov
out
and
lahf
ret
mov
and
jb
jp
sbb
or
je
or
insb
inc
das
aaa
ret
hlt
popa
clc
loope
adc
or
xchg
outsl
push
mov
je
comiss
jmp
mov
cs
add
popfw
fdivs
mov
and
andb
jmp
jecxz
lock
jle
dec
xorl
mov
mov
mov
push
arpl
addr16
into
hlt
xor
mov
jmp
bound
sbb
loop
sub
and
xchg
in
ljmp
mov
xchg
push
or
jnp
jbe
jb
adc
arpl
pop
xchg
adc
sub
xor
or
add
mov
inc
inc
lds
mov
mov
mov
cmp
pop
mov
sbb
sti
cmp
mov
mov
adc
mov
jmp
sbb
hlt
test
jne
arpl
pushl
rolb
ficompl
jl
mov
xlat
pushl
mov
or
popf
push
rclb
xor
and
xchg
roll
imul
jne
or
mov
leave
pusha
mull
call
cs
push
loope
push
inc
loop
jo
jns
arpl
mov
mov
inc
push
and
pop
push
jge
divb
rol
pop
xor
push
out
sbb
ljmp
insl
cs
js
fnstsw
mov
fisubs
or
rolb
repnz
das
pop
std
popa
lea
jne
xor
dec
inc
or
cmp
loopne
inc
inc
push
mov
inc
jb
sahf
mov
fstpl
hlt
and
xchg
and
push
pop
pop
cmpsb
cltd
gs
push
jmp
loopne
ljmp
lods
adc
outsl
pusha
inc
xchg
testb
cmp
push
xor
mov
and
cwtl
xchg
add
mov
push
and
adc
pop
sbb
sub
rcr
cmp
call
inc
xor
inc
jo
pop
aam
lds
adc
jne
cmp
aaa
adc
ja
outsl
mov
xor
out
cmp
clc
sahf
icebp
add
popa
pusha
pop
rcrl
and
pop
xchg
loope
or
adc
mov
ficomps
inc
pop
cmp
pop
inc
cli
dec
mov
lcall
jno
xor
lcall
jl
movsb
ficoms
push
das
loopne
cmp
and
inc
sbb
push
cs
mov
pop
ds
mov
xor
jnp
fwait
daa
or
dec
aas
dec
xchg
ljmp
pop
and
push
sub
push
clc
iret
push
pop
scas
or
insb
or
jle
dec
inc
int3
shll
str
dec
pop
popf
shlb
sub
jns
pop
mov
push
add
out
dec
xchg
dec
adc
mov
sub
movsl
cwtl
pushf
shlb
sbb
inc
mov
std
pop
sbb
push
xor
sahf
hlt
fcomps
call
xchg
xchg
pop
jns
pop
seta
push
aaa
mov
push
xlat
aas
mov
jo
je
pusha
push
mov
mov
icebp
cmc
arpl
add
sbb
fucomip
pop
xor
insl
ss
andb
pop
xor
pop
sbb
mov
daa
pop
mov
add
aam
pusha
xor
mov
mov
shl
jbe
xlat
les
mov
xchg
in
jg
movsb
aam
pop
sub
add
loope
js
cli
inc
sbb
cli
adc
ror
sub
xor
xchg
pushf
xor
ljmp
lds
push
insl
out
mov
ja
mov
lcall
lds
or
popa
inc
call
mov
push
cmp
rorb
cwtl
nop
inc
sub
or
xor
pop
out
add
addr16
add
lock
sbb
int
les
push
into
ss
mov
mov
aaa
test
mov
sbb
adc
scas
sbb
mov
out
int3
enter
push
xchg
inc
pop
pushf
lea
xchg
mov
fldenv
in
out
push
sbb
insl
rcr
pop
daa
mov
dec
sahf
sub
xchg
mov
or
mov
mov
and
repnz
stos
lret
jp
mov
clc
sti
lcall
stc
xor
stc
cmp
dec
out
into
std
dec
fdivs
mov
movsl
adc
or
movzbl
out
outsb
js
cmc
push
cmp
xor
mov
xor
jno
call
pop
adc
out
pop
dec
repnz
in
pop
jg
mov
lods
dec
ss
inc
fsubrp
fistpll
fsubrs
fsubs
jg
mov
loop
outsb
lahf
call
lcall
pop
loope
in
mov
repz
push
jmp
ds
cmp
inc
mov
loop
arpl
mov
aam
idivl
cmp
fidivl
push
cld
roll
xchg
jge
cld
mov
movsb
mov
xor
ret
or
push
call
lods
push
inc
jae
dec
push
icebp
mov
lret
xchg
sub
mov
add
imul
inc
ret
xchg
aam
les
std
dec
ret
frstor
ljmp
gs
xchg
addb
daa
mov
push
rorb
and
lret
pop
lahf
xor
in
aad
fisttpl
adc
outsb
push
and
cmp
and
fldt
cltd
xor
xchg
adc
inc
es
dec
mov
mov
and
jmp
cmp
mov
xlat
clc
arpl
cmpsb
fisubl
shrb
push
test
fwait
cmpsb
iret
xor
imul
cmp
js
js
ret
in
ret
pop
ds
cmp
je
les
and
dec
mov
pusha
mov
ljmp
sbb
xchg
xchg
fcomps
mul
sub
push
push
in
outsl
test
test
nop
sub
aam
pop
jb
adcb
mov
lret
movsl
mov
shrl
imul
jne
inc
jmp
stc
dec
sbbl
sbb
adc
arpl
outsb
inc
jp
pop
jle
or
in
jl
pop
sub
cmp
sbb
call
dec
push
and
lret
hlt
mov
push
sub
lahf
jns
out
inc
mov
pop
mov
mov
cmp
shlb
xor
adc
mov
das
jns
lods
sbb
dec
dec
jmp
mov
adc
out
mov
mov
push
inc
in
mov
outsw
je
sub
sahf
dec
cmp
adc
je
lahf
mov
xchg
mov
inc
and
dec
iret
sbb
pop
jg
lcall
shl
out
push
inc
iret
inc
dec
mov
shrb
sarb
xor
or
jb
xchg
sti
call
popa
xchg
sub
or
sub
inc
adcl
int3
cmp
mov
test
pop
and
inc
repz
lds
add
dec
shll
and
and
imul
enter
push
jns
mov
pop
cltd
push
data16
adc
dec
fimull
mov
jb
cld
int3
inc
and
mov
jl
sbb
jmp
lods
shll
aas
outsb
push
or
icebp
sub
cmp
mov
sub
jnp
push
or
pushf
andb
sbb
out
xchg
sar
push
pop
push
sbb
inc
sbb
dec
mulb
adc
pop
push
aaa
stos
jge
inc
inc
and
mov
mov
mul
lret
sbb
cmp
shrl
mov
sub
cmp
pop
les
or
xchg
popa
inc
lcall
mov
dec
loope
mov
jg
fstpt
testb
das
std
add
and
xor
scas
repz
fwait
push
shlb
adc
sub
fiaddl
stc
mov
bound
aaa
lods
sbb
pop
popa
mulb
inc
dec
lock
adc
lahf
out
push
sbb
adc
leave
bound
dec
and
pushl
push
mov
out
fisubrl
dec
les
loope
rcr
clc
xor
push
xor
fs
mov
mov
repz
imul
loopne
lret
sub
hlt
int3
loopne
lock
adc
lcall
sti
or
adc
cmp
sbb
sahf
mov
or
test
adc
out
mov
sbb
cli
sbb
fstl
imul
repz
jg
aas
jo
mov
sub
and
lret
sbb
mov
daa
add
add
ja
xchg
jae
enter
inc
repnz
ds
outsl
outsl
imul
fiaddl
cmpsl
xor
call
repnz
jb
xchg
mov
pop
int
call
cmpsb
push
push
inc
std
aas
test
jae
jnp
mov
sub
fs
mov
and
push
ss
sbb
lahf
mov
int3
int
and
loopne,pn
and
mov
cs
andb
out
cmp
mov
ret
ret
mov
push
push
push
lcall
int3
jae
xchg
cmovg
jl
mov
inc
push
fs
jp
add
incb
in
jnp
mov
mov
repnz
mov
jne
push
mov
insl
or
shlb
adc
in
push
popa
cltd
jg
xor
add
lock
or
fnsave
dec
jno
jns
test
fildll
arpl
das
mov
push
sar
lds
pop
sarb
mov
xchg
pop
or
pop
or
lahf
mov
push
adc
sbb
adc
inc
and
push
mov
mov
ret
and
pop
faddl
loope
test
mov
gs
test
add
je
jmp
pusha
sti
cmp
icebp
sbb
pop
pop
data16
fiadds
xor
repz
stos
imul
test
leave
leave
and
mov
mov
pushf
cltd
mov
lret
mov
cwtl
and
cmc
mov
sub
jno
in
test
xor
out
jg
jae
cmp
adc
loop
insl
inc
jbe
out
cmp
xchg
jp
lds
or
stc
sbb
cld
or
xchg
mov
ret
dec
push
push
daa
jnp
push
mov
jge
cmp
aad
inc
lret
push
roll
xchg
cmp
jno
outsl
jmp
js
popa
loopne
bound
cwtl
mov
je
and
movsb
pop
or
pop
mov
mov
mov
xchg
arpl
bound
pop
add
ficompl
stos
mov
fsubs
jne
add
mov
pop
and
inc
ficomps
lahf
dec
mov
ds
aad
xchg
iret
pop
adc
aam
xlat
sbb
push
cwtl
sbbl
ret
ljmp
repnz
movl
fbld
fimull
div
jne
or
pop
sub
dec
es
cmpsb
shl
mov
outsl
adc
lret
arpl
inc
push
clc
jae
sbb
into
push
and
push
movsl
movsb
cld
and
inc
stos
jge
sbb
mov
aam
sub
mov
loope
pushf
outsb
push
popa
sbb
gs
fwait
jp
aam
xchg
out
inc
inc
pop
cmpsl
sbb
iret
data16
jns
jecxz
pop
and
ret
fwait
dec
and
push
jns
fdivl
pushf
push
icebp
cmp
mov
jbe
mov
sub
int
and
jg
pop
push
adc
pop
inc
test
out
push
pushf
popa
dec
push
dec
std
gs
fdivl
mov
outsl
fildll
pop
add
inc
mov
pop
push
cld
sahf
daa
pop
flds
xlat
loop
and
xor
int3
sub
negb
push
psadbw
gs
mov
mov
mov
pop
mov
mov
jae
cli
cmpsl
cmpl
ljmp
adc
mov
mov
sub
jecxz
bound
insl
pop
mov
mov
dec
loop
mov
movb
adc
xchg
loop
inc
push
dec
pop
pop
dec
push
cmp
mov
jg
cld
sbb
loope
push
dec
testl
std
test
sets
stos
in
dec
mov
jae
sbb
mov
lret
inc
cwtl
iret
and
clc
pop
cmpb
mov
or
sub
fsubl
ljmp
dec
daa
rcl
xchg
enter
jb
fstpt
mov
jp
enter
std
sti
adc
xchg
pop
push
fdivrl
pusha
sub
inc
fldcw
mov
mov
stos
stc
div
sub
xor
add
add
ja
dec
push
bndldx
adc
dec
repz
in
test
jp
xchg
divb
jecxz
iret
jecxz
into
addr16
pop
jle
fidivrs
dec
inc
cmp
mov
je
jge
call
adc
push
push
dec
xor
gs
mov
ljmp
or
mov
in
test
int
das
jle
popa
loopne
push
add
ret
aad
sbb
mov
clc
mov
pop
adc
jo
stc
popa
int3
out
cltd
jmp
rolb
xor
mov
icebp
adc
inc
mov
mov
sti
push
mov
cs
inc
xor
mov
xchg
inc
int3
inc
sub
adc
in
test
xchg
mov
push
lahf
cmp
das
jmp
cmp
lcall
test
dec
mov
ret
mov
pop
out
movl
std
xor
into
dec
test
push
mov
popa
pop
cwtl
stos
fiadds
xorl
pop
outsb
sbb
dec
sbb
cwtl
sbb
pop
xlat
pop
cmpsl
lahf
int3
and
imul
push
and
mov
jle
outsb
stos
icebp
lahf
inc
mov
je
mov
dec
sahf
xchg
sbb
dec
jns
in
push
mov
ljmp
or
xor
fs
movsl
fucomp
popf
jge
xchg
js
dec
mov
sub
fcos
add
and
xchg
fisubrl
cli
push
call
dec
push
xor
loop
aas
addr16
test
es
sti
lcall
scas
outsb
jnp
sarl
xchg
mov
pop
cli
insl
sub
pop
xchg
sbb
aas
xor
stc
es
jl
cmpl
stos
call
cld
cmc
push
sub
insl
jge
mov
pop
pop
movsl
dec
pop
xor
xchg
cmp
repnz
cmp
or
arpl
out
nop
xlat
fnstenv
pop
aam
fwait
or
xor
sahf
fcmovu
pop
adc
sbb
into
stos
mov
enter
add
push
cmp
cmp
addr16
xor
mov
shr
test
push
lcall
pusha
loop
loopne
aad
or
pop
test
clc
in
cmp
fisttpll
shl
into
mov
insl
out
pop
inc
mov
decb
ficoms
and
pop
mov
and
popf
push
nop
adc
in
pop
adc
jmp
fsubp
jmp
mov
fsubrs
popf
cltd
shll
sarl
mov
push
push
cltd
mov
leave
inc
sub
hlt
push
adc
jecxz
into
cwtl
mov
and
pop
test
push
out
aad
jecxz
pop
jge
test
xor
mov
int
pop
stos
dec
jae
push
jbe
popa
jno
lret
pop
fsubl
dec
mov
cs
cmp
or
add
inc
ret
orl
pop
test
fs
xchg
xor
cmp
mov
xchg
push
gs
movb
shll
icebp
lret
mov
adc
mov
hlt
pop
mov
mov
out
mov
jle
imul
mov
mov
jae
or
loopne
dec
mov
add
mov
stc
mov
lods
test
xor
sbb
inc
popa
dec
hlt
add
in
inc
and
mov
cli
mov
jl
lods
pop
dec
shr
and
popf
mov
mov
push
jge
shl
inc
mov
mov
jle
mov
sub
js
out
or
push
xchg
imul
add
inc
rolb
xor
pusha
pop
jne
mov
or
cs
mov
inc
movsb
xlat
add
push
mov
les
inc
idivb
adc
sbb
aad
je
lock
cmpsb
je
or
jbe
shll
shr
stos
je
dec
and
or
loopne
aad
xchg
mov
push
dec
dec
sub
insb
push
dec
push
cmp
shrb
or
je
in
in
dec
lahf
es
mov
and
iret
outsb
ljmp
jns
fdivrs
cli
adc
imul
mov
test
js
xchg
jne
hlt
adc
outsb
stos
repz
mov
add
jge
repnz
into
xchg
sbb
leave
stc
sbbl
adc
adc
dec
mov
les
mov
into
mov
fstpt
mov
pushf
mov
rorb
and
and
outsb
ds
push
cmc
mov
fimull
jo
sub
hlt
insb
xor
sbb
adc
add
fcmovnb
push
lods
dec
fcmovb
dec
shrb
movsb
adc
xor
cmp
fdivrl
and
cltd
or
jmp
lcall
fisubrs
in
adc
ds
adc
jmp
jb
mov
clc
jmp
cmp
outsl
in
loop
sbb
mov
adc
mov
ficomps
push
or
out
adc
pop
or
dec
test
sub
jbe
ret
mov
xchg
fdivrl
mov
notb
js
mov
outsl
int3
or
lret
xor
repnz
or
cli
shlb
and
xor
popa
mov
out
adcl
movsl
cmp
xor
mov
pop
mov
mov
mov
fnstenv
aad
insl
mov
lret
popf
test
sbb
fbld
xchg
rorb
or
mov
xchg
mov
cmp
xchg
fstl
sbb
fwait
cmpb
into
movsb
mov
cs
out
ljmp
inc
jbe
add
ficomps
out
or
dec
push
adc
push
xchg
mov
mov
sbb
jmp
sbb
push
xchg
mov
add
jb
or
mov
cmp
jg
mov
adc
js
ss
ret
loop
or
movsl
dec
pop
push
ret
dec
mov
lret
aam
ss
sub
xchg
in
and
sub
cmp
jno
xlat
ljmp
fildll
push
jb
data16
and
dec
popa
cmp
pusha
ds
movsb
mov
out
imul
mov
loop
dec
xor
lods
sub
and
aad
push
scas
lods
jecxz
jo
dec
add
inc
out
cmp
fldenv
movsb
mov
xor
fisubs
sub
xchg
dec
insb
fdivp
sahf
jecxz
adc
push
sbb
dec
je
mov
out
icebp
push
mov
fwait
leave
inc
scas
loope
pusha
sub
sbb
js
mov
into
ret
lret
dec
imul
and
imul
cwtl
aam
pop
repz
jmp
out
sbb
aaa
lods
xor
cmc
hlt
push
out
and
pop
mov
popa
lret
in
push
and
jmp
mov
fst
adc
lds
inc
xchg
xchg
repnz
mov
inc
xor
pop
sbbb
sub
push
lods
push
cmpsl
std
dec
out
push
jge
mov
add
dec
jno
pop
repz
fs
sub
mov
jle
fisubl
jle
lods
int
inc
dec
push
xchg
hlt
xchg
rclb
jle
adc
push
adc
pop
and
into
push
add
or
out
sbb
jl
lcall
nop
xor
cwtl
sub
jge
pop
icebp
scas
inc
les
insb
insl
insl
jbe
push
jle
stc
sub
gs
mov
mov
scas
push
leave
scas
movsb
daa
xchg
ret
cmp
inc
repz
push
jp
mov
jnp
in
test
sub
lds
int3
imul
cmp
jl
xchg
leave
stc
xchg
sbb
pop
outsl
mov
adc
fists
leave
mov
jnp
jmp
inc
ds
sub
xor
jmp
cmp
or
mov
daa
sub
cwtl
loopne
mov
jmp
add
mov
sti
mov
outsb
mov
cmp
ja
aad
and
fidivl
fld
sub
lea
movsb
adc
sub
cmp
push
popf
shrb
stos
or
negl
imul
xchg
fs
ljmp
push
lcall
mov
add
adc
cmpsb
insl
dec
push
lcall
push
cltd
pop
cmp
push
lret
repz
sbb
cwtl
dec
cmc
sbb
push
lahf
jge
pop
xchg
dec
cs
cmpsb
call
adc
rcll
inc
insl
cmc
dec
call
jb
sbb
call
subb
fs
outsl
aas
in
lret
lods
xchg
push
loope
ja
lahf
xchg
sbb
cmp
stos
popa
jl
add
test
rcl
mov
bound
andb
daa
mov
cmp
jle
je
stos
pop
jno
lods
dec
and
leave
pushf
imul
cli
out
lret
mov
cwtl
std
ss
push
push
push
enter
push
movsl
ss
mov
push
mov
xor
aad
int3
pusha
jl
xchg
jg
add
lea
jle
jge
mov
sahf
test
jb
inc
fdivr
inc
das
mov
dec
jno
xchg
fidivs
int
inc
pop
test
pop
movsl
ds
mov
mov
out
sub
and
mov
adc
push
cld
jmp
fsubp
mov
jbe
adc
ljmp
gs
fstcw
inc
cmp
in
shlb
and
inc
cld
mov
sub
in
enter
fnstsw
mov
imul
adc
daa
insl
jl
cmp
test
shl
pop
lock
jne
and
icebp
ret
jl
inc
adc
repnz
data16
mov
push
in
push
out
inc
adc
faddl
dec
dec
and
inc
fildl
das
addl
push
lahf
fldenv
repz
ficoms
inc
push
push
inc
inc
mov
leave
aaa
mov
pop
lcall
mov
jmp
fs
test
push
mov
in
lcall
mov
addb
add
adc
mov
jns
inc
pop
mov
int
mov
inc
mov
in
hlt
sbb
jns
test
cmpsl
sbb
add
pop
mov
dec
xor
loope
inc
mov
jnp
das
jle
scas
pop
jae
cmp
mov
add
lcall
in
adc
mov
add
stos
adc
push
gs
sahf
xchg
mov
cmpsb
fistl
mov
pop
addr16
mov
mov
stc
adc
xchg
loope
push
fdivl
ljmp
add
jmp
int3
pop
lock
mov
lcall
sti
orb
cmovl
inc
dec
xchg
inc
cli
sub
push
sub
pop
adc
sti
cmc
stc
cmp
ret
adc
insl
mov
shlb
inc
cmp
jb
sub
inc
mov
test
rcll
shl
cmp
fs
inc
jmp
push
out
xor
cli
ret
push
xchg
mov
jbe
sbb
pop
arpl
add
xchg
mov
std
movsl
jne
insl
shl
xchg
or
xchg
push
mov
fisubrs
pop
xchg
mov
jp
ja
subb
sti
jns
fwait
int3
pop
and
jecxz
fwait
shrb
lods
sbb
sbb
cmp
xlat
jmp
xor
sbb
jae
test
outsb
icebp
xor
xor
push
add
sti
push
lods
lcall
cmc
orl
dec
push
lea
cmp
or
ljmp
lods
cmp
xchg
jp
fmul
or
loope
mov
mov
xchg
call
cmp
jmp
ljmp
xor
popa
dec
mov
popa
ret
lea
add
jp
ljmp
mov
or
out
or
out
jb
icebp
fbstp
push
pinsrw
or
getsec
js
pop
pop
clc
in
outsl
scas
inc
mov
fstpl
leave
mov
inc
push
pop
mov
jg
fldl
addr16
cmp
add
inc
cmpsb
cmp
or
xor
aad
adc
jne
movsl
sub
insb
enter
ja
xchg
xor
fwait
repz
dec
cli
mov
xor
cs
dec
jbe
cmp
jmp
pop
test
sbb
push
xchg
xor
les
movsb
bound
faddl
xchg
loope
and
ds
fsubs
sbb
leave
jns
and
cmp
cwtl
testb
sbb
sbb
or
fs
or
test
mov
out
pusha
das
out
mulb
xchg
movsl
ret
and
out
ficompl
pop
or
inc
test
add
or
arpl
push
xor
das
leave
lock
adc
mov
ja
xchg
add
mov
sbb
iret
or
jge
popf
aad
aaa
imul
jo
push
pop
repnz
scas
dec
test
mov
mov
hlt
sbb
push
and
clc
js
mov
dec
mov
sti
push
jo
mov
lcall
test
pop
mov
cltd
push
sbb
inc
xor
pushf
mov
mov
lds
mov
pop
or
xchg
aam
xor
or
fwait
add
test
stc
cltd
push
and
mov
cmpsl
sub
xor
cmp
xor
loop
sub
insl
lods
stos
add
imul
fcomps
cmp
sbb
jae
and
mov
rol
jne
shll
shlb
cld
sub
test
sbb
mov
fld
in
pop
dec
cmp
pusha
ss
mov
push
outsl
mov
leave
imul
sbb
push
sbb
inc
icebp
xchg
pusha
lea
cmpsw
sub
inc
xorl
out
pop
test
push
inc
add
pop
ja
ljmp
jns
sub
fwait
jae
inc
inc
and
fidivs
dec
jecxz
stc
ss
xor
push
mov
mov
cmpsb
sbb
add
sti
data16
popf
sub
subb
loope
push
pop
fildll
ljmp
sbb
nop
adcb
enter
rclb
push
and
xchg
in
pop
ret
shlb
dec
loopne
mov
pop
push
mov
test
pop
mov
divl
aam
adcl
xchg
in
push
js
inc
dec
in
or
fcmovu
out
out
sbb
jg
cmc
movsl
inc
rolb
rcrl
inc
inc
je
push
shl
xor
popa
lret
push
mov
mov
mov
lret
scas
lahf
mov
mov
mov
cmp
icebp
jb
inc
js
cmp
push
sarb
lock
ja
dec
je
test
push
gs
cmp
push
shll
fcomps
aaa
call
mov
inc
mov
xchg
fstpt
lret
repz
data16
iret
addsd
jg
add
mov
scas
push
gs
pop
adc
sahf
fstl
gs
xchg
pushf
mov
in
ds
aam
jle
mov
mulb
enter
inc
push
mov
popf
pop
or
flds
and
jge
mov
sbb
pop
push
add
push
cmp
inc
lds
mov
mov
pop
dec
stc
adc
mov
inc
xchg
inc
test
inc
sahf
insl
jne
leave
stos
add
push
iret
andl
push
js
xchg
jno
into
xor
out
mov
cwtl
pop
mov
sub
imul
sbb
dec
inc
jnp
mov
std
cmovb
xor
fsts
cmpsl
clc
and
popa
in
dec
pusha
adc
mov
cwtl
inc
lods
movsl
dec
cmp
cmp
push
dec
mov
ljmp
and
ds
xchg
pop
mov
sub
adc
rcrb
in
sbb
xchg
inc
cmpsb
pop
int3
aaa
fs
loope
jbe
mov
stos
roll
cmpsb
lahf
add
cmp
mov
push
std
dec
mov
aas
xchg
sub
jne
mov
dec
or
cwtl
sbb
aam
cwtl
dec
push
mov
pop
aas
fs
pop
cwtl
lahf
out
dec
in
pop
dec
inc
roll
jo
mov
adc
jmp
loop
es
pop
pop
add
fadd
xchg
in
fldt
pushf
mov
pushf
rolb
into
sti
addr16
in
jne
inc
and
loop
xor
hlt
ret
fs
jo
rorl
imul
cmp
jp
mov
push
mov
ja
cmpsb
push
mov
pop
and
stos
cmp
add
push
cmc
call
dec
jns
mov
sbb
js
sarb
scas
out
mov
mov
addb
fldl
or
test
add
aaa
mov
inc
mov
fwait
mov
sbb
outsl
popl
mov
test
pop
mov
ret
mov
inc
lea
adc
out
add
jecxz
cs
xor
cmp
jo
inc
or
mov
js
push
sub
fwait
add
mov
fsubr
push
mov
pushf
xchg
test
push
mov
jle
dec
pusha
add
into
sub
xchg
out
mov
clc
stos
sbb
dec
pop
xor
sub
push
scas
sahf
rcrl
repnz
insb
inc
adc
in
arpl
aas
into
int3
repz
lock
inc
mov
fs
stos
hlt
ja
movl
cmp
lock
lahf
imul
sahf
cwtl
sbb
jo
sub
dec
dec
adc
int3
push
in
push
sub
aas
test
jne
xchg
dec
push
repz
xchg
mov
andb
mov
testl
mov
mov
js
gs
insl
xchg
mov
lahf
inc
dec
mov
dec
cli
and
mov
ja
popa
mov
push
scas
mov
mov
push
sahf
sub
adc
xchg
das
aad
repnz
xlat
aam
out
subb
mov
add
xor
fdivrl
lods
add
ja
iret
mov
mov
push
mov
fidivrl
mov
or
or
inc
leave
lahf
inc
lods
and
mov
into
aas
mov
in
mov
scas
xchg
sbb
dec
in
pop
hlt
mov
push
and
lock
and
add
outsb
outsl
inc
push
cmp
jg
mov
mov
lods
sub
ret
jo
jo
out
clc
mov
hlt
sbbb
or
es
std
xchg
test
or
sbbb
test
dec
inc
in
int
mov
jae
push
je
push
mov
cltd
cmpsb
scas
lret
out
mov
insl
subb
add
xchg
add
lds
sbb
or
xor
aaa
jg
rclb
ret
movsl
or
xchg
stc
pop
pop
fiaddl
jo
push
rorb
imul
push
sub
inc
ret
in
test
not
mov
push
das
gs
sub
adc
ljmp
dec
xchg
outsb
pop
add
lret
push
fbstp
mov
or
fldcw
jns
push
ret
into
into
push
ss
enter
into
pop
rolb
clc
jne
push
in
mov
xchg
jno
stc
adc
repz
jbe
sbb
sahf
push
scas
xchg
cmc
mov
daa
rcrl
inc
sbb
das
sti
fiadds
movb
mov
movsl
jge
adc
loopne
pop
or
cvtpi2ps
fistps
stos
mov
sub
mov
nop
mov
lret
jle
xchg
and
mov
xchg
rol
jns
xor
sbb
sbb
loope
out
mov
jp
nop
pop
addl
jns
xchg
pop
into
ljmp
cmpsb
dec
pop
arpl
mov
or
or
jmp
inc
xchg
mov
rclb
arpl
das
sbb
cmpsl
out
in
and
lea
push
mov
push
pop
icebp
dec
push
jns
fwait
jns
jp
adc
icebp
push
cmp
nop
ficomps
stc
mov
mov
sbb
sahf
or
jecxz
ja
mov
pop
add
out
dec
pop
mov
and
mov
andl
and
insb
mov
aaa
imulb
mull
dec
stos
sbb
pop
sub
std
fisttpll
mov
lcall
dec
xchg
aas
shr
repnz
movsb
jg
insl
and
cmc
leave
mov
dec
sti
mov
mov
pushf
xchg
xor
pop
push
push
sub
in
hlt
sbb
or
add
ljmp
pushf
out
pop
adc
inc
ss
pop
lock
pushf
cmpsl
jl
and
dec
dec
add
push
scas
add
and
pop
or
in
dec
pop
cmp
xchg
add
jp
sub
fstpl
je
mov
test
fiaddl
into
fcmovnu
cli
mov
stos
lret
mov
ss
add
lret
add
and
out
mov
or
enter
mov
pop
ljmp
jp
je
cmp
addr16
das
ret
rcll
mov
mov
add
ret
jnp
leave
ffreep
rcl
sar
push
xchg
stos
cltd
ljmp
xchg
ret
in
jp
lcall
mov
pushf
cmc
add
fstpl
orb
lret
in
lahf
out
daa
pop
mov
fcompl
add
sahf
lods
ja
xchg
adc
test
sbb
loope
mov
or
mov
xchg
out
pop
sub
repz
int3
scas
or
aad
push
cwtl
cmp
std
fistps
jb
into
movsb
mov
and
jmp
scas
and
sub
or
pop
push
inc
pop
int3
popa
push
jno
mov
fwait
xorb
outsb
dec
jle
add
mov
jo
mov
jb
lret
inc
cli
add
and
mov
mov
loopne
es
ss
xchg
mov
mov
lret
aaa
push
or
pop
and
jge
sub
enter
adc
out
pop
sbb
icebp
rcrl
hlt
dec
repnz
inc
loope
jno
jbe
or
pop
fdivs
inc
add
lahf
mov
mov
push
sbb
lcall
mov
andl
jl
mov
das
push
aad
int
inc
push
or
mov
repnz
or
test
adc
push
mov
enter
cmpsb
popf
ja
leave
xchg
jg
mov
das
ds
stos
in
mov
add
push
pop
add
sbb
aas
sbb
sub
adc
ss
jl
jo
test
cwtl
shll
jp
cmpsl
pop
pop
aam
ds
xchg
neg
dec
push
push
js
icebp
cmc
xchg
dec
jns
aaa
mov
mov
and
aam
shlb
mov
sbb
fstpt
mov
inc
test
push
cmp
mov
sbb
push
adc
jp
jne
cmpl
pop
repz
mov
xchg
ljmp
out
add
mov
in
pop
lods
mov
mov
addb
lock
cmp
addr16
scas
mov
inc
ljmp
addb
in
jecxz
dec
xchg
or
and
negl
and
xor
stc
lahf
movups
fstpt
mov
jmp
inc
sahf
cwtl
push
nopl
imul
add
test
ficompl
mov
mov
shlb
sbb
call
jmp
dec
inc
xchg
rorl
into
mov
in
cmc
jle
sub
in
mov
jo
das
cltd
add
lds
lds
popa
test
push
or
movsl
cmp
into
in
hlt
leave
popl
adc
jp
adc
lret
pop
xchg
stos
adc
orb
dec
add
adc
cmpsb
call
pop
pop
inc
aam
mov
cmpsl
loop
or
adc
add
jno
sub
shl
icebp
pop
cmp
je
scas
in
negb
rolb
ret
insb
xor
out
mov
dec
mov
out
cs
adc
xor
hlt
dec
sub
xchg
xor
enter
cmc
xor
jge
jg
shlb
cmp
bswap
push
stc
test
daa
inc
cs
in
and
and
xchg
ret
jp
mov
adc
lcall
cld
ja
insl
iret
sub
mov
cmp
xchg
loopne
pop
ljmp
sbb
mov
lods
rcll
rol
out
adc
mov
fsubl
push
faddl
push
pop
cmp
jmp
add
mov
xchg
or
sbb
sbb
lods
dec
jecxz
jg
or
pop
hlt
mov
mov
ss
in
inc
push
xor
push
xor
pop
jns
inc
fs
add
adc
arpl
mov
ss
add
movsb
mov
out
flds
add
mov
inc
or
adc
add
repnz
inc
pop
pop
xor
fs
sahf
push
jae
add
mov
cbtw
orl
fisttps
std
sbb
add
jns
lds
std
lods
inc
sbb
add
mov
jno
fistpl
roll
or
dec
fbld
cmp
arpl
imul
sub
and
cmpsb
andb
cmp
add
push
bound
lods
mov
mov
clc
fs
inc
dec
shlb
sub
out
jl
movsl
setne
sbb
xor
jno
enter
dec
pushf
xor
mov
aaa
outsb
addb
push
lcall
jecxz
sub
mov
add
mov
test
scas
jnp
cmp
mov
and
xchg
or
je
das
loopne
enter
xchg
pop
jle
mov
mov
addr16
mov
mulb
int
push
rclb
call
mov
sub
outsl
lahf
and
adc
mov
push
mov
pop
cli
dec
add
xlat
mov
xor
imul
insl
xchg
std
nop
cmp
sbb
add
mov
xchg
push
popf
fs
push
mov
push
xchg
shr
and
push
fs
orb
and
cmp
xor
push
push
sub
mov
enter
data16
dec
push
adc
repz
jmp
int3
lcall
inc
popf
or
or
cmpsb
mov
adc
call
xchg
mov
mov
sub
lret
fidivrl
and
or
popf
out
int
mov
bound
mov
inc
adc
jge
jmp
ljmp
xchg
cmp
pushf
enter
movb
sar
daa
pop
aas
aad
add
pop
or
mov
ret
int3
push
gs
mov
jne
xor
std
jns
lock
shrb
std
dec
mov
xchg
out
addr16
pop
adc
scas
jl
or
das
sahf
addr16
jecxz
pop
jns
cmp
stos
data16
fstp
push
xor
mov
mov
je
andb
add
fsts
das
push
jo
mov
push
rcr
pop
add
ret
mov
inc
outsl
in
xor
jbe
xchg
xor
lcall
testb
pop
lret
xchg
je
and
jo
int3
inc
out
rcrb
cmp
mov
xchg
lret
into
fadd
aas
ja
lock
mov
pop
push
mov
out
push
aad
je
int
movsb
lret
xchg
ret
add
frstor
add
pop
sbb
sub
mov
jae
out
dec
movsb
stos
call
out
pop
push
ds
adc
lahf
jg
movl
add
xor
and
add
shrb
ja
movsl
fcmovnb
sarb
or
push
jg
add
xor
xor
jmp
mov
cmp
cld
pop
int3
incb
dec
iret
test
dec
jle
out
insl
mov
leave
push
add
aaa
jp
mov
add
pop
mov
pop
in
in
cmp
mov
mov
jne,pn
lock
and
pop
aad
out
inc
and
sbb
push
fidivs
out
add
out
sub
sub
or
popa
arpl
cmp
loope
in
movsb
mov
push
pop
lahf
xlat
push
jecxz
bound
lods
inc
aas
lcall
mov
pop
add
inc
jge
sub
pop
ss
fdivl
or
and
lahf
lds
push
cmp
popa
adc
adc
push
aaa
add
cli
mov
mov
ret
hlt
xchg
jno
imul
and
loope
jo
pop
cli
sbb
stos
cmp
add
mov
adc
sub
ja
mov
add
int
cmp
or
ffreep
hlt
sub
cmpsb
or
pop
jns
xchg
mov
jge
cmc
cltd
lds
lret
and
repnz
add
xlat
dec
fldl
loop
jns
adc
sahf
xor
sbb
dec
dec
fs
mov
and
sbbb
cmc
mov
and
add
push
inc
ret
loopne
xchg
dec
push
lock
pop
les
jnp
pop
adc
push
arpl
bound
not
dec
pop
pop
iret
jecxz
popf
addr16
mov
push
lods
jo
push
lods
ja
cmc
outsb
mov
fdivrp
imull
sbb
or
stos
xchg
repz
lahf
jp
inc
or
cs
pop
imul
jmp
cwtl
push
lahf
push
scas
xlat
decl
dec
aas
rcrl
mov
rclb
repnz
xlat
lea
into
lahf
popf
push
xchg
inc
lret
mov
adc
cmpsb
mov
out
imul
and
lcall
aaa
inc
imul
mov
cli
test
push
jns
lods
insl
and
popa
and
mov
and
inc
sbb
inc
mov
clc
xor
dec
cwtl
test
out
in
bound
fdivrs
mov
in
bound
movsb
cmp
ror
jecxz
or
rolb
pop
scas
fs
cmp
jge
shlb
push
cmp
out
movsb
mov
push
test
mov
int
pusha
int3
fbld
mov
jge
mov
mov
and
and
es
lret
sub
sbb
fstpl
and
inc
cmp
fld
mov
or
frstpm(287
fnstenv
in
call
es
jge
popf
repz
mov
or
scas
pushf
fs
dec
mov
xorb
rol
rcrl
outsl
push
lcall
jnp
mov
rolb
subb
cmpsl
and
je
in
insb
rorl
jecxz
mov
or
int
pop
ficoms
push
xchg
mov
in
les
xchg
repnz
ja
icebp
jmp
aad
aam
push
cmpb
jo
mov
dec
fdivrl
jl
js
jnp
or
cwtl
daa
xor
dec
and
mov
mov
mov
pop
cwtl
aaa
mov
sbb
fidivs
cmp
xchg
push
aaa
call
out
out
lcall
pop
mov
pop
dec
loop
xor
stos
sub
ror
inc
push
or
ss
fstps
dec
sti
sub
mov
cmp
push
xchg
mov
sub
mov
stos
mov
imul
inc
mov
scas
jecxz
popf
dec
div
lcall
lcall
xor
inc
or
mov
ret
dec
mov
cltd
stos
stos
xorl
xor
inc
pushf
aam
mov
jne
xor
aad
in
pop
jmp
sub
in
sbb
lock
loope
mov
jecxz
jne
xor
push
aas
sahf
shrl
mov
repnz
mov
lret
jno
add
mov
and
in
repnz
clc
cmpl
jns
filds
mov
int3
pop
cmp
negl
pop
jo
xor
cmp
mov
and
push
jns
fldenv
jns
es
loopne
xchg
in
xchg
push
les
add
mov
pop
dec
push
inc
and
sub
mov
test
inc
sub
addr16
out
bound
and
or
in
cmpsb
jno
scas
pusha
sti
dec
pop
or
xor
enter
pop
sahf
in
lods
cmp
cmp
dec
das
cmp
and
xor
roll
xor
mov
int3
data16
mov
mov
rcrl
out
adcb
imul
xor
jbe
cmc
hlt
adc
cmp
call
mov
push
daa
leave
mov
jl
cmp
imulb
imul
inc
enter
sbb
pop
pusha
mov
imul
mov
cs
and
pop
sub
mov
pop
lret
movsl
out
ret
fcoml
jns
enter
xchg
mov
add
jmp
push
out
sbb
daa
add
inc
sub
xchg
imulb
cmp
xchg
and
lcall
cmp
fdivrp
mov
xor
push
dec
add
lret
scas
dec
sub
jo
mov
call
adc
mov
popa
cmp
aaa
js
adc
scas
clc
and
and
xor
imul
nop
push
adc
iret
or
inc
and
add
loop
stc
mov
mov
push
jp
add
lahf
hlt
inc
xlat
clc
mov
adc
fnstenv
sti
std
xchg
xchg
imul
aaa
ffreep
adc
add
push
imul
shlb
fcomp
enter
inc
mov
in
std
je
stos
push
mov
pop
fisubrs
pop
pushf
in
cmp
cmp
and
xor
mov
testb
popf
lds
xor
inc
cmp
std
mov
hlt
stc
add
xchg
test
into
test
mov
je
rorb
jp
cli
test
cmp
push
add
cmp
bound
push
jno
pop
jbe
jmp
nop
dec
or
pop
xchg
mov
pop
push
sbbl
es
xor
ja
enter
ret
sbb
fsin
ss
dec
cmp
pusha
adc
xlat
adc
rcll
add
jo
fldl
in
push
pop
dec
call
adc
xchg
push
outsl
aam
sbb
loope
pop
sbb
popa
dec
push
pop
jnp
nop
adc
aam
cmp
sub
sub
loopne
add
jne
rcrl
cmp
arpl
daa
xor
sbb
cmc
and
jg
cltd
adc
or
add
enter
inc
cmp
mov
xchg
cmc
lods
mov
ret
es
or
test
push
mov
lahf
out
xchg
aas
pop
xor
push
xchg
adc
add
sbb
inc
sarb
push
cld
mov
sbb
shr
imul
sub
xor
cs
sub
and
cmpsb
fldenv
aad
xchg
dec
adc
cmp
mov
test
xchg
or
lahf
insl
jne
sti
daa
outsb
mov
mov
divl
das
out
enter
xchg
mov
out
push
sub
dec
pop
ss
jo
or
mov
xchg
lcall
jno
in
xchg
mov
xchg
insl
mov
in
cmp
add
add
lahf
add
sbb
loopne
jne
lcall
push
jo
add
orb
inc
jl
cmp
mov
pop
insl
cs
mov
fwait
mov
or
inc
or
add
or
sub
push
xor
les
and
in
lds
into
push
or
mov
inc
inc
gs
insb
jge
pop
ljmp
dec
cli
cwtl
dec
icebp
js
adc
adc
mov
adc
jmp
inc
ss
sub
pop
pop
and
in
nop
lahf
lret
adc
jnp
push
in
imul
out
push
out
or
rolb
xor
push
loopne
jp
or
push
mul
iret
and
dec
fcoml
roll
out
shlb
xchg
aaa
xor
out
in
cmp
mov
pop
pop
aad
sbb
aam
mov
or
clc
xor
add
mov
sti
out
dec
pop
mov
add
push
cmp
adc
iret
inc
or
mov
addr16
add
inc
push
adc
scas
xchg
icebp
mov
call
and
fwait
insl
lock
outsl
std
dec
lret
xchg
inc
xlat
outsl
jmp
hlt
lcall
push
mov
movsl
shlb
aad
sysret
inc
pop
mov
jb
xchg
addr16
inc
and
sahf
int
push
adc
mov
loop
out
push
scas
and
sbb
daa
rol
rclb
std
push
pop
movsl
dec
js
add
or
mov
add
push
or
push
test
cmp
lods
repz
out
jecxz
test
mov
pop
mov
inc
loope
cmpsl
push
mov
pop
out
int
test
outsl
pop
call
pusha
icebp
bound
outsb
into
fmull
adc
push
les
mov
xchg
mov
push
sub
mov
leave
sub
add
dec
dec
fisttpll
out
mov
nop
jae
or
insl
and
loopne
scas
xorb
mov
aad
xlat
stos
mov
iret
xor
add
mov
mov
data16
into
mov
jne
aad
in
in
in
mov
sub
lods
push
mov
dec
sub
lahf
lret
sub
pop
cli
xlat
repz
ret
sub
mov
mov
jae
add
mov
cmp
out
xlat
popa
adc
scas
xchg
mov
mov
sub
cmp
push
lret
das
stos
dec
andl
sarl
or
xor
dec
in
imul
and
mov
jecxz
je
mov
or
sub
imul
shlb
push
and
or
loop
in
xlat
xor
fildll
test
test
cmp
jbe
adc
lock
adc
inc
mov
add
imul
mov
ss
mov
add
test
decl
loopne
test
stos
dec
xor
ficomps
jo
lcall
std
adc
ss
add
mov
fildl
pushf
adc
pop
mov
mov
sti
pop
cmpsl
jp
scas
add
sub
aam
bound
push
dec
pushf
movsb
mov
mov
mov
xchg
sbb
sti
ficomps
mov
inc
fucom
dec
jbe
jg
pop
in
mov
or
sti
lretw
cli
xor
popa
test
aas
imul
jmp
arpl
xchg
mov
xchg
push
adcl
leave
aad
dec
xchg
in
mov
aaa
mov
sbb
inc
test
mov
push
mov
int3
dec
jmp
or
test
mov
test
cmpsl
mov
adc
mov
aaa
bound
mov
jbe
or
rcrl
int
clc
scas
js
ss
les
xchg
sbb
imul
xor
cwtl
fsubs
push
jmp
inc
jb
pop
addb
gs
xor
dec
cmpsb
ret
dec
jge
insl
stos
enter
mov
inc
mov
mov
push
sahf
fsubrl
aas
inc
mov
pop
outsl
pop
leave
sti
into
push
push
popf
clc
fisubs
sti
lret
imul
ds
pop
mov
jmp
jg
je
mov
xor
aas
lret
inc
stos
mov
mov
fcmove
fnstcw
es
xor
or
push
mov
aad
sahf
sub
push
cmp
xlat
xor
idiv
adc
xor
mov
icebp
data16
ja
nop
xor
cmp
mov
enter
js
jmp
lcall
or
cmp
ret
aad
push
aas
mov
sbb
rcrl
inc
shl
int
enter
leave
pop
addr16
bound
lret
xor
popf
dec
jp
sar
pushf
data16
in
and
stos
fildll
out
adc
ret
push
add
negl
lret
fstpl
icebp
mov
mov
or
ret
cld
test
out
roll
mov
xor
fisttps
data16
jns
adc
loopne
jl
movsb
or
in
fmuls
adc
xchg
fcmovb
xchg
and
lahf
dec
mov
cmp
adc
jno
xchg
push
push
lods
adc
xor
stc
ljmp
add
mov
sarl
jle
ss
in
mov
pop
aad
popf
fdivrp
ret
mov
add
xor
mov
jle
std
hlt
popa
add
push
in
cli
daa
mov
ss
xchg
cmp
cmpsl
xor
mov
xor
add
sub
sub
icebp
cmc
push
cmp
dec
pop
stos
loop
mov
inc
mov
movsb
mov
mov
cmp
nop
inc
mov
mov
fs
ljmp
push
ljmp
flds
pop
jne
xchg
and
addl
cmpsl
inc
cli
outsl
int
push
loop
les
sub
fdivrl
dec
fldl
rcll
in
out
int
xor
jp
push
mov
mov
or
add
rclb
mov
mov
cmpsl
sub
mov
fcmovnb
jae
add
pop
insb
mov
ret
mov
int3
inc
xchg
push
nop
cld
movsb
xchg
pop
adc
lea
mov
lds
cltd
std
shlb
sahf
aaa
inc
repnz
xchg
sti
iret
lds
xchg
mov
pop
and
xorl
cmc
ficoms
pop
insb
cwtl
int
mov
xchg
or
stos
lahf
push
sbb
push
and
outsb
int3
test
arpl
sub
add
add
mov
mov
aas
push
lret
xlat
shrb
xlat
sbb
xlat
lock
pop
sub
aas
mov
cmp
dec
xor
dec
in
xchg
std
jno
dec
cmpb
push
jmp
test
xor
popl
divl
jne
xchg
mov
xchg
in
arpl
fisubs
rcrb
stc
or
test
add
fimuls
ficompl
push
lock
jge
mov
ret
mov
rclb
push
shrl
and
lret
pushf
pop
stos
dec
xchg
dec
cmp
filds
push
mov
fnstenv
negl
addr16
mov
sbb
jmp
fs
push
xor
or
sbb
test
test
rcrl
es
or
ja
ficoml
clc
xchg
sbb
imul
sahf
bound
xor
out
mov
adc
subl
or
sbb
mov
fimuls
sti
div
and
jae
and
adc
add
addr16
jbe
pop
jne
adc
sbb
outsb
es
mov
mov
mov
pop
hlt
adc
mov
sti
mov
fnstcw
pop
mov
iret
add
mov
ljmp
imul
add
test
nop
lret
pop
jo
mov
jge
hlt
leave
dec
shlb
outsb
out
xor
mov
stc
mov
das
pushf
cltd
ret
adc
or
inc
pop
dec
add
lret
stos
fdivr
add
sbb
cmpsb
xchg
sbb
or
test
out
fs
outsl
inc
lahf
aaa
fistl
mov
pop
ret
adc
pop
ror
insb
inc
adc
jp
dec
mov
call
mov
xor
lods
xor
sub
jg
loope,pt
dec
stc
outsb
xor
jbe
and
jo
popa
or
sub
out
in
lock
shll
push
sbb
xor
pop
or
inc
jmp
sbb
jae
mov
inc
push
push
fisttps
inc
jns
sbb
add
mov
adc
out
cmp
pushf
outsl
jmp
daa
sub
imul
jbe
jbe
inc
sbb
arpl
mov
jne
stc
xchg
hlt
push
icebp
adc
push
aam
fs
pop
mov
loopne
cld
xchg
fwait
jb
mov
inc
mov
lret
pusha
sub
fwait
adc
iret
pop
xorb
cmp
or
jg
push
arpl
in
mov
lret
inc
pop
mov
sahf
jle
js
bound
les
jmp
scas
test
test
lock
cltd
fstpl
xchg
sbb
jo
lods
test
je
push
std
out
xchg
xlat
scas
or
mov
in
mov
loope
pop
cmpsl
leave
inc
dec
inc
stc
cmp
add
push
scas
mov
pop
push
dec
pop
xor
je
loope
jb
jmp
in
push
xor
hlt
rorl
push
pop
jo
pusha
jge
dec
data16
loopne
dec
lock
push
pop
lods
xor
lret
mov
mov
or
dec
xchg
jne
cmpsl
int3
sub
movsl
mov
and
cmp
lea
addr16
add
roll
rorl
mov
lret
lds
pop
mov
add
js
stos
sbb
std
xchg
jns
jnp
int
sub
add
sub
inc
sbb
ret
cmp
cmp
ficoml
call
mov
jmp
movsl
pop
js
movsl
xor
jns
cmp
rorl
aad
dec
pop
aaa
call
outsb
fwait
rorb
stc
cmp
mull
test
and
pop
das
loopne
in
leave
test
fsubp
inc
lahf
shl
jne
mov
adc
enter
cltd
shrb
in
inc
lea
cmp
shlb
sbb
pusha
in
lret
xor
ljmp
jae
sbb
or
dec
sarb
inc
and
loop
pop
push
pop
push
cli
pop
in
out
and
xor
arpl
xor
out
test
lods
mov
or
mov
in
mov
test
mov
dec
jno
je
rorb
mov
sysenter
iret
push
mov
repz
cmc
xorb
sub
xor
scas
les
jge
pop
movsl
cmp
out
mov
sub
xchg
loop
mov
data16
jg
stos
cmp
xor
clc
daa
ss
out
imul
xor
test
ret
and
add
adc
dec
inc
pop
push
mov
sub
jge
adc
das
pop
aas
pop
fsts
fwait
or
pushf
sub
xor
out
iret
sti
dec
add
mov
pop
loop
mov
jle
outsb
mov
shlb
inc
outsl
repnz
fcomip
push
shrl
fs
add
std
lcall
xchg
ja
xchg
push
rcll
aad
push
call
cmpsb
or
int3
inc
test
ret
push
shll
sub
mov
mull
int3
mov
mov
adc
aas
ljmp
int3
scas
pop
lods
rcrb
mov
rcll
mov
jecxz
outsl
xlat
fcoms
adc
incb
cmpl
push
lods
aaa
and
stos
icebp
outsl
popf
ficoml
mov
cmp
data16
addr16
jecxz
loope
lcall
jp
push
test
clc
into
push
pusha
pop
sbb
out
popa
out
aaa
clc
and
mov
leave
movsb
fs
dec
lods
push
pusha
push
pop
xchg
movsl
fisubrs
adc
dec
add
push
or
popf
cmc
sbb
fistl
iret
adc
cmp
pop
testb
push
add
ja
out
sarb
jae
push
push
jno
inc
mov
add
push
jge
mov
and
test
lods
cmp
fs
movl
test
js
jno
popf
jbe
sub
in
and
mov
mov
rorl
xchg
sbb
cmp
push
xchg
enter
das
hlt
sub
int
std
or
stos
jg
sbb
in
lods
push
aaa
ljmp
cmpb
inc
cmpsb
jae
cmp
jns
sbb
mov
imul
adc
outsb
mov
imul
cmp
dec
adcw
add
cmp
mov
lds
lcall
and
pop
sub
bound
lea
imul
stos
enter
outsl
dec
loop
pusha
insb
xlat
cld
jo
xor
int
icebp
inc
pop
jg
push
mov
enter
out
ret
insb
addr16
mov
add
insl
jb
mov
sbb
in
dec
push
idivl
je
shlb
jns
hlt
cmc
mov
xchg
pop
adc
stos
cmpsb
das
xchg
jns
jae
xchg
push
ljmp
lahf
adc
movsl
adc
jo
push
outsl
and
lahf
data16
and
and
fadds
or
popa
stos
mov
imul
mov
daa
dec
mov
repnz
dec
decb
fldenv
mov
repnz
bound
ds
add
jg
stos
test
mov
or
popf
mov
aas
test
or
call
leave
mov
or
pop
data16
and
std
adc
mov
mulb
pop
mov
and
xchg
jl
fiaddl
leave
and
popa
mov
popf
out
xchg
push
pop
lret
xor
ret
jb
mov
shrl
lcall
cmp
adc
xchg
mov
inc
imul
mov
loop
popf
das
repz
rdpmc
dec
sub
lret
sbb
push
fldenv
inc
in
sbb
sub
mov
jo
and
cld
inc
dec
inc
pop
lret
jbe
pop
mov
movsb
or
jb
test
mov
cmp
cmp
pop
push
jo
mov
out
lods
stos
icebp
aaa
mov
js
sub
inc
xchg
fwait
xchg
xchg
sbb
mov
xchg
adc
pusha
notl
jbe
aad
cmp
dec
dec
cmp
sub
sbb
adc
adc
fisubs
dec
jl
inc
nop
sub
inc
gs
cmp
jmp
adc
jae
inc
shll
mov
sub
js
inc
cmc
ret
mov
xchg
mov
xchg
mov
xor
es
mov
sti
or
gs
or
icebp
dec
jmp
and
add
jle
push
sbb
fmuls
inc
gs
add
sbb
jl
movsb
push
mov
repz
fcom
lcall
mov
and
out
nop
out
push
xor
es
mov
mov
dec
mov
sbb
mov
adc
cwtl
hlt
jne
test
and
in
pop
popa
jae
lods
sub
sbb
call
inc
pop
hlt
mov
push
or
xchg
les
adc
mov
xchg
stos
push
repnz
mov
cmp
in
jno
lock
out
subb
xchg
jnp
divb
and
inc
jp
xor
jp
jb
xchg
jae
cs
test
dec
inc
push
push
jo
repnz
movsl
lock
xchg
sub
fisubrs
and
hlt
nop
das
pop
add
out
pop
dec
pop
push
push
fwait
push
shlb
test
sbb
push
clc
jle
jbe
pop
rol
cmp
adc
mov
adc
add
fsubrs
mov
lods
pop
stos
pop
fsubrl
notb
jae
xchg
xchg
stos
xor
push
dec
or
push
push
inc
int
mov
dec
sub
iret
or
gs
std
rolb
dec
lcall
push
cmp
and
ja
mov
inc
mov
push
mov
sub
jnp
push
sbb
ja
test
xchg
mov
mov
or
cli
mov
jb
jno
stos
mov
orl
ljmp
sti
lds
test
lret
call
pushf
push
sub
and
xchg
mov
push
scas
xor
cld
inc
cmpsl
mov
push
loope
dec
jnp
mov
or
pop
call
or
call
jnp
aam
pop
cltd
cmc
and
flds
iret
nop
or
fildl
test
iret
mov
dec
push
xchg
leave
cmp
adcl
in
or
ds
mov
fmuls
pop
adc
fisttpll
repnz
stos
insb
stos
lret
inc
pop
push
xor
shr
ss
cmp
xchg
adc
jae
jmp
adc
sub
ss
mov
movsl
xchg
jp
jmp
pusha
int
lods
divb
sbb
daa
out
das
je
ret
int
std
mov
andb
mov
scas
subb
jecxz
std
ss
xchg
pop
scas
aaa
adc
mov
jno
cwtl
fcomps
fs
int3
mov
xlat
movsl
out
mov
pop
pop
mov
xchg
lret
das
pop
fwait
xchg
shlb
or
xor
mov
testl
or
inc
loop
outsb
push
adcl
outsb
xor
lock
loopne
lea
repz
push
inc
xor
testb
fucomi
das
add
add
pop
push
movsb
mov
fsts
xchg
mov
xchg
push
dec
clc
loop
outsl
lret
xchg
std
lods
negl
add
sbb
mov
lret
imul
gs
xchg
cmpsb
addr16
stos
ljmp
and
pushf
or
pop
sub
mov
into
andl
cmp
fwait
mov
imul
repnz
int
xchg
xor
mov
adc
nop
mov
movsl
mov
fcmovu
adc
add
and
and
test
ds
mov
mov
sub
push
cmc
dec
sbb
in
add
adc
frstor
mov
push
mov
fucomi
mov
ja
and
push
rcrl
jns
ds
pop
rcl
insb
scas
mov
in
test
sub
sarb
sub
mov
mov
mov
in
mov
mov
mov
sahf
dec
test
data16
outsb
xor
sbb
mov
jmp
jmp
or
sub
sub
cs
ljmp
in
pop
add
ret
inc
push
in
mov
rolb
std
pop
xor
je
test
lods
push
cmp
inc
aam
xor
rcrl
mov
imul
cmp
dec
inc
cmp
or
or
sub
test
pop
arpl
icebp
xchg
aad
test
fisubrl
pop
inc
adc
push
mov
les
lods
mov
sub
mov
mov
push
les
in
sub
je,pt
cmp
inc
fwait
hlt
mov
fcoml
loope
mov
add
ss
pop
fldt
popf
fnstcw
ret
push
xchg
imulb
cmp
mov
fs
out
pop
inc
test
jmp
adc
pop
arpl
jno
cmp
fldt
icebp
fildll
pop
enter
xor
and
out
outsl
push
adc
in
bound
mov
inc
mov
fs
fisubl
sbb
adcb
sbb
lret
push
pop
mov
add
mov
pop
aaa
movsl
arpl
ficoms
dec
fisubrs
test
nop
jecxz
popf
nop
test
adc
int3
fwait
and
test
cmpsl
fucomi
push
xlat
inc
shll
dec
xchg
push
or
dec
adc
jl
and
jge
jmp
mov
and
test
push
sub
lahf
mov
loop
push
xor
shl
pop
sbb
mov
fmulp
adc
test
jmp
and
sub
lea
push
lret
test
out
and
inc
jp,pt
pushf
mov
pop
ljmp
push
in
inc
push
popf
mov
rclb
pop
push
sub
jnp
jnp
in
int
loope
pop
cmpsl
push
inc
jbe
pop
sbb
shrb
ss
jns
jl
inc
test
and
out
jecxz
mov
push
in
je,pt
into
out
ret
movsb
jle
ret
mov
jns
adc
push
xchg
mov
sbb
mov
jae
aaa
adc
in
into
push
or
mov
or
pop
or
insb
dec
xchg
cmp
lds
jl
enter
sub
cltd
jle
add
inc
insl
adc
inc
mov
imul
enter
lcall
ret
stos
pop
mov
fimuls
mov
es
popf
hlt
add
mov
xchg
cltd
lret
cmc
loope
jp
sbb
xlat
mov
xchg
mov
imul
mov
mov
sbb
rolb
test
cli
jne
fisttps
testl
call
dec
add
lds
or
ja
ficomps
and
xor
shrb
inc
jge
cld
clc
lods
roll
pop
cltd
mov
aad
aaa
xlat
jb
cmp
cmpb
clc
pop
lret
mov
add
in
out
iretw
imul
xor
inc
lods
or
add
mov
lea
ss
dec
sbb
sbb
loopne
pop
pop
movsb
rcrl
dec
sub
sub
in
mov
sbb
mov
mov
pop
int
sbb
add
fcomps
pusha
adc
loope
movsl
enter
aad
sub
imul
insl
movsb
loop
in
pop
sbb
icebp
test
or
sub
dec
pop
lods
cmc
pop
mov
shrl
jb
and
fs
lods
loopne
popf
stos
fldcw
lcall
jnp
dec
cmovg
loop
nop
pop
xchg
or
xchg
push
jno
mov
stc
jne
push
iret
jns
add
fidivl
cmp
stos
in
sub
cli
imul
lods
ret
add
stos
jl
mov
ja
minps
xchg
in
and
lods
scas
jne
mov
inc
xchg
into
dec
xchg
int3
mov
dec
mov
gs
lret
mov
add
mov
das
movsb
mov
sbb
mov
outsb
js
fwait
sti
movsl
mov
ret
cmc
or
gs
nop
cwtl
pop
popa
jmp
mov
loope
repnz
and
push
and
cmp
xchg
push
dec
jg
movsb
les
add
and
xchg
xor
pop
push
jne
in
mov
xchg
mov
inc
push
jno
dec
adc
dec
ret
rorb
cmp
mov
inc
pop
add
dec
repnz
mov
jbe
lods
sbb
enter
cmp
dec
std
shlb
sbbl
dec
in
fcomps
cs
imul
aad
jb
mov
mov
cwtl
or
or
testl
jns
mov
fsubs
or
jno
mov
test
or
icebp
clc
ret
mov
mov
sarl
test
cwtl
or
and
inc
flds
pop
sbb
mov
lock
fs
jnp
xlat
in
ficoml
adc
xchg
pop
cmp
dec
lret
pusha
int
notb
hlt
or
roll
rclb
testb
aaa
into
mov
movsl
add
insb
dec
inc
repz
pop
jg
and
lcall
leave
jle
inc
lods
mov
leave
cmpsb
jb
ljmp
mov
ss
clc
addr16
dec
and
pop
in
dec
aaa
cmp
pop
jg
mov
adc
dec
and
jmp
movsb
pop
int
popf
imul
mov
push
fdivrl
mov
cmpsl
push
or
popa
ret
or
out
xchg
push
sbb
ja
in
dec
ss
mov
iret
mov
jmp
cmp
cwtl
mov
mov
and
push
mov
ret
jns
shrb
mov
mov
jp
push
mov
addb
rorb
out
lods
dec
sbb
sbb
adc
movsb
aam
js
pushf
add
jecxz
and
jmp
add
cltd
add
mov
int3
pop
cmp
add
and
dec
or
xchg
out
add
sub
push
sbb
jo
icebp
add
push
add
repz
cli
movl
cwtl
jmp
sub
xchg
rclb
inc
cmp
iret
fisubl
mov
push
insb
or
dec
stos
and
dec
sub
popa
pop
ds
and
sbbb
inc
leave
mov
jl
insl
inc
xor
shll
cmp
mov
sub
gs
mov
mov
sti
or
lods
out
push
rcll
ret
xchg
push
xchg
sub
pusha
or
jl
icebp
and
mov
cld
sub
fcmove
sbb
inc
pop
sub
divl
or
cwtl
sbb
rorb
loopne
mov
mov
pusha
push
sub
xor
xchg
push
or
ja
das
mov
mov
fistpll
fidivrl
test
out
sbb
pop
fdivs
filds
mov
mov
int3
cmp
jg
mov
sub
adc
rclb
mov
movl
jle
shrb
sub
jno
adc
ljmp
fsubs
std
loope
sbb
push
int
insb
pop
mov
enter
subl
fildl
pop
mov
pop
push
outsb
aam
cmp
test
jb
gs
lods
lea
jle
lret
cmp
push
mov
ljmp
jno
mov
xor
adc
sti
fcomps
int3
rcr
cli
xchg
sub
push
scas
xorb
push
icebp
gs
out
ror
adc
xlat
ret
je
adc
jl
aas
lahf
mov
adc
subb
dec
out
jge
repnz
xchg
mov
mov
mov
inc
loop
sbb
das
ds
inc
shll
popa
push
sub
stos
pop
and
test
popa
mov
pop
ficompl
push
inc
cmpl
repz
mov
ffree
stc
les
push
jbe
xchg
testb
iret
inc
faddl
sub
movsl
fdivs
lret
or
inc
cmp
iret
jmp
cld
sub
pop
subb
pusha
mov
scas
or
sub
ret
sbb
cs
sar
xchg
in
test
adc
pop
cmpsl
lods
mov
push
shl
popa
add
repnz
push
lret
mov
jne
jbe
xor
test
in
sbb
lock
fwait
push
cmp
dec
in
insl
and
lcall
or
push
stos
ss
and
loope
jecxz
scas
jl
mov
sub
xor
xchg
and
mov
cld
rclb
in
std
lock
sub
cs
push
nop
sub
lock
popa
pop
in
inc
add
rolb
xchg
faddl
and
jns
cmp
cmp
pop
aam
mov
int
call
int3
in
scas
mov
jns
adc
dec
xchg
or
push
adc
mov
fdivs
pop
sbb
lock
bnd
xor
mov
push
mov
pushf
lock
leave
out
iret
loopne
or
adc
lahf
adc
jbe
enter
cld
mov
das
dec
inc
inc
push
lahf
test
mov
xchg
aas
jno
stos
popf
daa
sub
dec
push
xor
jecxz
add
out
sbb
outsb
subw
sbb
and
or
mov
cmp
stos
in
inc
xchg
push
add
jb
dec
mov
sub
lahf
roll
sti
subl
push
lahf
scas
adc
sub
ds
in
out
flds
pop
loopne
add
aaa
fistps
popf
ljmp
xor
and
stc
sbb
testb
jge
test
cmp
jmp
cmc
popf
in
xchg
push
mov
sub
ja
out
popa
cmp
addr16
jno
fcmovnbe
insb
cwtl
in
xchg
out
call
lcall
out
pop
push
push
shlb
inc
add
pop
xor
jb
sub
cs
mov
out
adc
cmpsb
pop
xor
inc
mov
fisubs
fsubp
clc
pop
sub
out
sub
lods
pop
sbb
movsl
out
fadd
lds
jge
xchg
into
in
add
sbb
xchg
cltd
mov
movsl
mov
test
lea
jg
scas
rolb
pop
jge
test
loope
add
shl
jb
adc
inc
jmp
shlb
adc
add
adc
mov
lods
out
inc
lret
pop
mov
rorl
mov
mov
sub
sbb
arpl
lret
repnz
hlt
push
bound
loope
pop
or
int3
mov
dec
or
stos
adc
adc
fcomps
enter
imul
xor
push
inc
jns
dec
push
xchg
jg
lret
sub
lock
xor
addr16
gs
push
loopne
ss
sub
pop
cld
cmpsb
lock
in
shrl
mov
cmpsl
movsb
xor
mov
ja
imul
xchg
xchg
js
mov
jb
ret
cmp
imul
xor
and
cmp
jb
sbb
jnp
outsl
dec
fwait
or
fcompl
mov
pop
lcall
loop
fcomps
mov
scas
jne
js
or
dec
adc
orb
shrb
jecxz
sbb
clc
mov
lods
pushf
shrb
or
insb
shll
fisubrs
pop
cwtl
jno
push
aaa
je
dec
xor
sbb
jns
add
adc
cmp
insb
inc
in
or
inc
or
and
popl
jmp
js
xor
ss
int3
inc
adc
aam
sahf
lret
inc
nop
arpl
repz
pop
sub
mov
lea
test
jmp
fistps
popa
mov
cmp
sub
cmp
rcrl
daa
inc
pushl
aaa
or
leave
daa
clc
inc
cmp
cmp
movl
sub
pop
xor
mov
add
or
push
lcall
sub
lret
mov
scas
cmp
stos
lret
js
scas
imul
xchg
push
sbb
ljmp
sbb
pusha
stos
sbb
clc
jbe
std
pop
cmp
jge
mov
lods
cmp
xchg
test
lea
xchg
dec
div
adc
cs
and
dec
cmp
addr16
adc
pop
and
mov
clc
xchg
incl
dec
sbb
jno
xor
xchg
inc
mov
mov
cs
daa
aaa
dec
repz
dec
sub
mov
outsb
pop
call
leave
stc
popa
inc
xchg
mov
xchg
mov
pop
cmp
aaa
or
cmc
movsl
mov
rcrb
add
out
adc
mov
xor
xchg
mov
cld
add
rcr
orl
loop
mov
jo
pop
fisubrs
sbb
mov
sub
pop
shrl
or
add
js
fldcw
add
cmp
dec
imul
icebp
arpl
sbb
cmpsl
add
xor
and
call
and
push
mov
sub
cmp
lea
scas
or
mov
jns
adc
sbb
pop
mov
and
pop
popf
testl
adc
rcll
jg
fs
lock
scas
out
fcoms
inc
and
pop
jnp
mov
arpl
lds
xor
inc
xchg
jl
test
outsb
into
dec
cmpsl
xchg
mov
cltd
adc
add
xchg
lcall
xchg
push
clc
jg
push
jo
xchg
outsl
push
sub
fistpll
or
push
lods
mov
ljmp
mov
mov
scas
cli
sbb
sbb
icebp
and
xchg
jno
mov
inc
jns
push
sti
jl
xor
enter
enter
xor
xor
sbb
shll
xchg
mov
cmp
fcompl
popa
dec
mov
movsb
pop
lret
inc
lds
push
sub
in
fdivl
mov
dec
add
sahf
push
andl
xor
outsb
jne
adc
jp
and
sub
mov
scas
mov
insb
dec
enter
sar
xor
inc
aam
inc
pop
test
iret
arpl
test
ja
cld
repz
divl
fdiv
xchg
sbb
out
jne
mov
push
cltd
sbb
in
jae
push
fidivl
xchg
rol
and
add
push
dec
adc
daa
outsl
inc
adc
ficoml
bound
or
mov
and
lret
add
scas
push
mov
enter
cmp
pop
adc
int
icebp
mov
mov
mov
pop
notl
or
inc
nop
mov
rcr
les
out
insl
fildll
mov
or
cs
cwtl
jl
call
scas
lahf
fisubs
in
cmp
adc
fcomps
push
push
mov
push
ret
cli
insb
push
sbb
push
gs
arpl
add
sbb
ss
or
cld
loop
loope
adc
shl
or
addl
push
jecxz
add
sub
enter
lahf
aam
repnz
push
inc
pusha
cli
push
repz
data16
sub
adc
pop
xlat
push
or
adc
xor
or
add
dec
dec
add
rep
dec
pushf
test
js
add
inc
dec
out
lods
repz
sub
mov
shrb
jnp
dec
push
add
dec
push
mov
sarl
lock
rorl
stos
mov
pusha
xchg
push
mov
or
rclb
ljmp
add
mov
pop
out
or
sbb
dec
testl
xor
roll
loopne
inc
mov
clc
mov
aas
out
mov
addr16
xchg
int
sbb
mov
call
shrl
nop
mov
lahf
mov
outsb
add
or
loope
mov
jmp
popf
jmp
cmpsb
ret
jmp
mov
xchg
out
repz
pop
imul
ljmp
in
enter
jl
aad
je
xchg
leave
sbb
inc
test
sti
in
loop
sub
mov
cwtl
mov
mov
iret
dec
mov
enter
addr16
mov
add
dec
dec
xchg
ja
outsl
in
pop
into
xor
add
mov
jno
jo
push
add
popa
or
mov
dec
bound
sub
pop
mov
sti
cltd
mov
sar
or
cmp
imul
aad
pop
pop
push
sbb
sbb
and
mov
fsubrl
sub
lock
xchg
rorb
test
or
lret
rcrb
xor
add
adc
sbb
movsl
movsb
xchg
fiadds
out
mov
cwtl
dec
mov
push
stos
fimull
mov
lods
add
jl
xchg
frstor
test
push
gs
fs
sub
adc
je
outsb
jecxz
sub
loopne
icebp
push
int
popl
add
lret
adc
pop
add
hlt
pop
mov
lods
fistps
pop
lds
rorl
mov
jne
push
xor
jbe
rcr
sarl
addb
inc
or
add
mov
hlt
into
adc
int
sub
pop
sarb
sub
ret
add
xchg
or
shrb
xor
scas
xchg
scas
cld
loope
mov
in
repz
xchg
and
aas
insl
dec
xor
loope
arpl
repz
gs
xchg
jbe
mov
xchg
iret
cli
leave
jb
jp
pop
and
data16
cmp
icebp
cmpb
arpl
pop
cmp
mov
pushf
pop
daa
or
mov
shl
movsl
or
pop
fcmove
out
xor
mov
out
aad
adc
push
mov
bound
sub
pop
pop
cmp
inc
sahf
data16
int
loop
aad
pop
call
sahf
out
and
lock
mov
and
ja
shll
dec
lret
ret
pop
out
and
fdivl
test
fisttpl
pushf
fwait
pop
negb
sbb
jnp
pop
arpl
das
ja
add
cmc
add
cmpsl
dec
aas
ds
es
shl
push
das
mov
or
jp
adc
cmp
popf
jns
into
sti
out
dec
cld
sbb
inc
xor
popf
dec
xlat
insb
std
lret
jp
test
je
push
shll
fldcw
sub
add
xchg
divl
pop
maxps
clc
test
imul
lret
add
sbb
mov
jne
mov
mov
mov
push
pop
pop
pop
dec
popf
xor
xchg
hlt
push
xlat
test
in
enter
add
mov
xor
in
ja
sbb
arpl
xchg
clc
bound
cmp
add
nop
ja
std
aad
add
or
add
cs
sbb
and
mov
xchg
xlat
lods
sub
jae
daa
out
sub
xchg
mov
xor
jb
outsb
mov
sbb
imull
icebp
pushf
pop
or
add
in
out
lea
push
popa
and
movsb
jle
push
jo
and
jae
cli
inc
mov
mov
cmpsl
sbb
pop
and
push
stc
adcb
cmp
cmpsl
sbb
mov
icebp
std
mov
or
lods
sub
inc
repnz
lcall
pop
pop
or
pop
jmp
int3
xor
movsb
das
outsl
pop
in
inc
xchg
cmpsl
jmp
sub
lahf
pop
jns
cmp
and
xor
cmp
or
arpl
cs
scas
cltd
aas
inc
dec
imul
xor
lret
dec
jbe
fwait
or
sbbb
pop
inc
cltd
or
je
imul
iret
in
push
jmp
sbb
add
test
xor
dec
bound
pop
fcmovne
loope
dec
pop
shrb
inc
sub
mov
in
and
jbe
sub
pushf
stos
fcomp
mov
inc
shr
xlat
enter
lock
addl
xor
pushf
movsl
xchg
xor
lea
out
dec
popa
or
daa
xor
xchg
jae
push
dec
in
cmp
mov
adcl
sbb
lret
cmp
pop
mov
or
xchg
inc
repz
dec
lods
mov
pop
mov
and
add
fwait
imul
aad
xchg
dec
loope
rcll
ret
add
mov
jo
fcompl
adc
push
mov
loope
push
sbb
lahf
mull
pop
out
neg
dec
popf
xor
btr
cli
push
call
pop
lcall
jbe
lret
xor
in
fimuls
mov
arpl
jb
xchg
add
test
lret
mov
dec
sarb
dec
adc
add
pop
and
in
mov
pop
jg
or
mov
or
pop
mov
movsb
add
orl
jbe
out
jo
sub
lds
enter
addr16
std
in
sarb
notl
dec
and
movsb
push
xchg
dec
pop
pop
cmp
daa
xchg
sti
or
mov
or
add
cli
fs
pop
repnz
adc
test
jp
outsb
adc
cltd
pop
pop
lret
adc
sahf
adc
negb
dec
push
les
pop
adc
pushf
lahf
inc
ds
mov
xchg
aaa
in
inc
lahf
jge
aam
ret
and
push
mov
pusha
sahf
jmp
mov
arpl
insl
push
mov
cmp
and
jge
mov
dec
push
mov
and
sbb
or
push
push
lret
mov
cld
imul
scas
xor
ljmp
sbbb
mov
sbb
ds
jae
cmp
movsb
dec
dec
cmp
fnstsw
push
cmpsb
loope
imul
and
sbbb
and
stos
addr16
mov
push
popa
xchg
mov
imul
jp
xchg
mov
and
xchg
cld
aam
test
in
arpl
popl
xchg
icebp
mov
std
mov
daa
jmp
cld
testb
or
jg
scas
and
call
psraw
ja
dec
jbe
cmp
lret
test
stc
push
lock
arpl
xor
lret
sti
js
lds
gs
cltd
push
jecxz
ret
fwait
mov
fisubl
outsb
push
pushf
leave
or
pop
cmpsl
aam
sub
fwait
mov
daa
jg
jns
sub
mov
jne
daa
mov
inc
insb
orb
dec
push
mov
inc
cmp
jg
loopne
cli
lock
add
mov
int
pop
cmc
test
imul
inc
add
jg
aaa
or
repnz
mov
push
cmpsl
xchg
cmpsl
xchg
dec
sub
lahf
pop
subl
push
push
push
ficomps
push
and
mov
adc
pop
or
push
in
pop
jb
js
or
add
call
mov
loop
cltd
addr16
adc
xlat
adc
jl
mov
imul
insb
mov
leave
out
imul
fwait
push
pop
imul
push
test
mov
adc
xchg
cmc
jbe
leave
aaa
xor
ja
sti
xchg
scas
pushf
inc
sub
add
sarl
fs
or
push
cwtl
push
daa
sbb
stc
inc
add
and
nop
std
mov
stos
out
and
fbld
mov
add
sti
fdivr
adcl
xchg
movsb
pusha
mov
mov
loopne
jne
jmp
pop
jb
xchg
push
cmp
cld
aas
shrb
add
pop
sti
and
inc
cld
or
push
xor
cmp
scas
cmpsl
add
mov
out
cmc
in
stc
add
xchg
imul
fwait
test
mov
mov
xor
pusha
push
aad
faddl
insb
jo
xchg
add
cmp
pop
sbb
in
das
fwait
mov
repnz
or
xlat
pop
into
in
and
push
push
mov
stos
lock
push
sarl
je
cwtl
inc
ret
shll
inc
add
fnstsw
inc
adc
int
dec
test
xor
jp
pusha
push
xorb
cmpsl
xchg
in
adc
cmp
mov
jb
push
nop
xchg
push
push
pop
mov
shl
push
adc
les
mov
shl
fwait
push
cwtl
push
shl
mov
xor
jae
pop
stos
jmp
test
mov
fs
and
stos
repnz
fstl
inc
test
cmpb
popa
mov
pop
icebp
push
outsl
jge,pn
cmpsb
push
mov
inc
test
nop
pop
stc
popa
mov
pushf
cmp
pop
repnz
mov
lcall
dec
inc
insb
ljmp
sub
xlat
mov
or
outsb
das
rorl
xor
adc
push
in
shlb
mov
push
sbb
xchg
pusha
cmp
dec
mov
mov
or
pop
and
rorl
cmp
push
fstl
cmp
mov
stc
lcall
dec
jle
jge
pop
pop
push
lds
jo
imull
push
cwtl
adc
into
mov
iret
and
shrb
cli
lcall
aad
adcl
shrb
adc
xor
inc
ret
daa
movsb
mov
in
imul
mov
testl
pop
test
fbstp
jbe
sub
lret
rcrl
inc
jle
mov
cli
push
xlat
pop
sahf
mov
xor
mov
sub
xchg
xchg
scas
sub
pop
loope
gs
pop
mov
int
outsl
popf
inc
pop
into
sbb
push
jmp
pop
sbb
or
jge
cmpsl
shll
pop
mov
mov
cld
add
xor
lds
outsl
push
cmp
loopne
arpl
xor
ljmp
inc
mov
xor
mov
cmp
adc
dec
xor
jo
mov
and
js
icebp
push
push
cmp
ret
jecxz
int3
addr16
xchg
outsb
dec
push
mov
xlat
sarb
and
fists
jge
pop
or
and
clc
xchg
fmuls
xchg
fs
mov
fsubrs
ret
lods
into
inc
subb
mov
cmp
out
mov
push
in
push
mov
sub
clc
cmp
rcrb
adc
push
mov
xchg
addr16
fsubrs
jle
and
xor
orl
addl
cmp
mov
dec
mov
mov
outsb
push
js
xchg
mov
xchg
mov
sub
roll
call
inc
pop
add
stc
jp
fs
or
cwtl
mov
pop
ja
testl
dec
push
and
mov
loope
aaa
adc
orb
and
js
std
out
fidivrl
mov
fsubr
sub
lret
add
std
outsb
cmpsb
or
add
rcr
sbb
arpl
mov
mov
rorl
mov
jge
in
dec
rcl
and
push
lret
sbb
fstpt
popa
cld
lret
imul
cmc
xor
push
roll
add
pop
es
pop
rcrl
pop
pop
inc
xlat
cltd
test
cmp
xor
cmp
and
call
aaa
ljmp
sub
adc
repz
or
fwait
pop
mov
mov
dec
xchg
jo
cmpsb
inc
mov
cli
in
ds
inc
mov
loopne
out
or
adc
aam
outsb
cmc
enter
sub
es
sbb
addr16
dec
sub
jno
mov
out
and
popf
loop
icebp
sub
mov
mov
pusha
int
out
dec
scas
lahf
and
sbb
add
cmpl
rcll
inc
push
lea
sub
push
lahf
xchg
nop
enter
jl
sbbb
mov
add
cltd
leave
sbb
inc
out
jnp
frstor
sub
mov
mov
in
fstl
xchg
insb
mov
push
jmp
pop
mov
jecxz
and
cmp
sub
mov
ljmp
into
push
xor
jmp
xlat
popl
cmpsl
and
mov
lods
or
cld
and
or
fwait
push
cmp
or
and
dec
nop
repz
icebp
add
out
test
push
cmp
loopne
out
clc
inc
add
push
or
jae
mov
pop
and
dec
mov
pop
mov
dec
shrl
jmp
js
lea
repz
pop
adc
rolb
mov
ret
pop
test
fcomi
outsb
xlat
scas
or
mov
cvtpi2ps
lcall
roll
jbe
je
sbb
mov
dec
insl
nop
adc
or
test
roll
stc
mov
fdivrs
bound
int3
mov
and
dec
fs
cmp
out
sub
fimuls
xor
mov
pop
mov
jp
xchg
cmp
sbb
das
push
xlat
insl
stc
push
xchg
aaa
lods
cs
mov
std
jae
jmp
mov
int
test
push
push
dec
fwait
loopne
dec
rol
add
inc
out
add
out
mov
xchg
fs
lds
fiadds
inc
adc
cltd
fisttps
popf
addr16
mov
jge
adc
mov
cmp
sub
push
jno
lret
sarb
mov
adc
sub
cmp
int
jns
insb
cmpsb
dec
cmc
decb
insb
inc
mov
and
mov
push
fnstcw
fs
inc
pop
sbb
cmp
imul
xor
test
jecxz
mov
fdivrp
jge
push
or
pop
push
gs
push
jb
or
in
lods
movsb
rolb
mov
push
out
test
and
lahf
mov
xchg
and
rcrb
clc
popf
or
inc
dec
aas
cmp
mov
shll
orb
xor
sub
xchg
xchg
dec
cltd
lea
jns
pop
inc
mov
mov
stos
push
push
pop
xchg
inc
sub
lods
mov
out
popa
jb
sbb
mov
add
push
ret
enter
xor
bound
leave
mov
shrl
xor
and
pop
sub
in
xchg
clc
push
xchg
lcall
shll
inc
daa
lahf
sub
cmpsl
into
fstpt
push
push
inc
pop
sbb
lret
loope
mov
jge
add
incb
idivb
jmp
sub
jge
nop
add
lcall
xchg
push
fdivrs
lret
testb
mov
in
push
push
adc
test
xor
add
leave
data16
lock
dec
and
adc
popf
cmp
or
cmp
or
pop
clc
jp
int
pop
popa
inc
dec
ja
jbe
imul
push
outsb
in
or
sub
lahf
adc
clc
mov
pop
sub
adc
add
xchg
iret
mov
jle
xchg
enter
and
xor
scas
pusha
lods
sbb
out
mov
add
std
mov
xor
cld
aam
lock
mov
enter
pop
pop
pusha
push
inc
pop
aaa
cli
loopne
or
insb
adc
cmp
in
inc
leave
ror
lods
mov
sti
jge
jmp
jnp
and
xchg
sub
inc
jb
mov
orb
cli
add
popa
xchg
movsl
in
imul
aaa
xor
call
fstps
mov
lcall
sbb
jge
icebp
je
ret
std
sub
cmpsb
dec
into
pop
fwait
pop
test
insl
lahf
insl
fcmove
jecxz
scas
mov
xchg
xor
pop
sarb
repnz
inc
int
mov
jb
push
pop
ja
mov
jmp
das
mull
call
fwait
outsl
repnz
cmpsb
lods
bnd
movsl
jl
and
lret
push
mov
mov
in
push
rcrl
sbb
jae
xor
fwait
lcall
pop
cmp
ja
adc
pop
jb
in
pop
in
ljmp
shlb
dec
inc
sub
addr16
pop
dec
adc
dec
cmp
push
or
inc
shl
sbb
cli
mov
jnp
outsl
jnp
jo
test
dec
aam
shrl
ret
dec
cmp
jg
jecxz
pop
xchg
mov
jnp
jbe
fidivl
dec
xchg
pushf
in
cmc
or
sbb
sub
loope
jmp
aam
hlt
or
shr
rcrl
push
add
lahf
scas
jl
push
cmp
mov
je
sub
outsb
inc
rol
mov
pop
mov
sub
ljmp
pop
sbb
icebp
jecxz
sub
int3
cmpl
bound
sbb
push
sbb
sbb
or
mov
xchg
adc
fcompl
notb
jo
mov
jl
shrl
push
push
lret
jo
jb
xchg
clc
repnz
mov
pushl
lods
xchg
xor
jne
xchg
xchg
mov
jmp
aaa
dec
out
test
sub
test
inc
xchg
mov
fwait
out
repz
jae
mov
cmp
pop
inc
xor
sbb
imul
movsb
jp
jl
cmp
nop
addr16
popf
lret
aad
leave
mov
or
sahf
enter
pusha
cmp
js
lock
cmpsl
jg
adc
cs
mov
ss
and
lret
outsl
inc
ds
cmp
adc
push
cmp
pop
cld
sbb
lcall
xor
sarl
push
es
aas
push
popf
idivl
movsb
lret
cmpsb
mov
jl
into
or
pushf
lods
ljmp
adc
push
pop
mov
mov
int
adc
ret
out
ficoml
adc
xchg
clc
xchg
sbb
out
mov
and
lods
add
ds
xor
loope
fiaddl
sbb
sbb
movsb
push
mov
jge
pusha
xor
pusha
add
outsl
lods
out
outsl
rorl
in
adcb
fs
mov
in
push
daa
rcl
rcrl
call
neg
dec
into
sbb
int3
mov
add
mov
or
subb
or
js
add
mov
rolb
push
int
lret
cmpb
xor
mov
mov
ror
lcall
xchg
jae
sub
pop
in
xchg
or
or
inc
mov
lret
dec
jnp
cmp
adc
xchg
push
dec
xor
mov
and
in
xchg
jns
aas
pusha
inc
ret
pop
push
lods
in
loope
mov
imul
out
insb
mov
and
xchg
jb
mov
adc
sbb
lret
negl
pop
lcall
int
xor
andb
es
das
mov
cwtl
enter
cwtl
in
es
jmp
sbb
int
pop
mov
mov
loopne
xor
push
out
xchg
lock
test
addr16
mov
cmp
fisttps
jns
and
aas
pop
shl
dec
push
popf
popw
movsb
js
jae
das
mov
xchg
lretw
lods
daa
sahf
push
push
mov
fildll
aad
lea
bnd
mov
rorb
jle
sub
mov
test
pop
pusha
push
pcmpgtw
insb
aam
popa
loop
fstpt
repnz
fcompl
push
stos
insb
mov
cwtl
jno
jg
out
out
push
mov
in
into
xchg
inc
xchg
imul
push
popa
mov
enter
xor
js
sub
int3
xchg
in
push
stc
mov
imul
dec
in
ds
inc
adc
bound
sub
test
xchg
aad
add
mov
cmpsl
aad
out
xchg
xor
fildll
cmp
dec
pop
in
call
push
lea
mov
fcomi
sbb
decl
mov
fdivrs
out
dec
nop
xor
repnz
shl
and
jge
pop
xchg
jmp
imul
pop
dec
shl
and
fmuls
lret
fimull
iret
sub
or
lods
into
mov
or
cmpsl
adc
add
hlt
jne
cld
xor
mov
pushf
mov
dec
lahf
or
rol
xchg
inc
inc
test
fiaddl
icebp
xchg
adc
push
xchg
data16
sqrtps
imul
daa
xchg
xchg
mov
adc
mov
test
shrl
sbb
fcoms
dec
outsl
mov
fistpll
mov
ret
pop
lret
sti
ret
cwtl
js
and
sub
xor
inc
pop
cmp
fs
pop
lods
shl
push
cmc
rcrb
or
insb
rcll
jmp
push
inc
ss
or
push
add
in
pushf
pop
stos
hlt
int
mov
mov
gs
add
ficoml
jne
repz
push
aam
fidivrl
sub
mov
mov
dec
or
aam
sarb
shll
enter
sbb
icebp
das
dec
es
ljmp
cmp
cs
stos
movsl
pop
jge
inc
adc
popf
cld
frstor
xchg
arpl
xorb
popa
mov
jbe
mov
pop
inc
sbb
xor
icebp
imul
mov
xchg
mov
jnp
rcrb
add
nop
lea
xchg
out
mov
lea
sbb
pop
repnz
clc
sti
pop
dec
lods
sti
adc
jecxz
mov
les
imul
and
incl
mov
fsubl
testb
loopne
loopne
fistpl
cmp
mov
xchg
mov
sbb
popf
dec
mov
insb
sub
jp
scas
inc
test
sbb
inc
or
cmpb
adc
push
add
push
imul
inc
mov
dec
movsl
int3
mov
loope
insl
or
jno
test
jbe
jne
jne
lea
pop
out
xchg
sbb
out
add
mov
fcmovnbe
popf
repnz
xor
repz
or
popf
pop
mov
sahf
jns
dec
push
sbb
pop
lea
shlb
ret
mov
je
mov
insl
mov
cmp
xchg
dec
xchg
adc
popa
fistpl
clc
push
pop
jmp
or
pop
cmp
bound
test
stos
mov
int
cmpsl
xchg
push
push
xor
rorl
movsl
imull
xchg
cli
adc
adc
enter
in
test
cmp
xor
lret
sbb
cli
insb
add
lret
mov
rcl
push
mov
dec
and
insb
xlat
mov
movsb
insl
in
clc
jmp
lods
js
popa
imul
outsb
stos
sbb
lods
cmpb
mov
mov
or
iret
out
and
cs
scas
stc
mov
std
push
rcrb
mov
jmp
mov
pop
push
mov
incl
into
xchg
mov
push
pop
sub
mov
jg
outsl
sub
or
jae
inc
in
ficoml
cld
pusha
out
in
xor
pop
adc
rolb
inc
sahf
sub
dec
mov
jno
iret
mov
dec
mov
stos
icebp
or
test
movsl
andl
mov
subb
dec
icebp
or
jno
xchg
rcrb
lods
dec
mov
mov
faddl
mov
mov
jmp
data16
das
mov
push
rsqrtps
jge
cmc
xor
stc
fimull
dec
aam
or
sarl
filds
cld
pusha
scas
int3
pop
inc
clc
cmc
lret
dec
xor
mov
jns
jge
jo
lret
dec
xchg
and
faddp
sub
mov
lea
xchg
cli
out
notl
fbld
xchg
adc
cwtl
cmp
mov
ss
rol
xor
stos
adc
push
hlt
adc
and
fists
shl
ss
in
call
jge
jg
jmp
mov
dec
out
fidivrl
sub
bound
int3
mov
mov
sahf
loope
add
push
push
adc
dec
loopne,pt
repz
xor
cmpsb
pop
mov
dec
popa
xchg
mov
pop
pop
outsb
add
ljmp
cmp
jnp
jle
ss
lock
push
icebp
inc
loop
scas
xor
pop
and
addb
jo
mov
lods
jmp
or
lods
mov
pop
stos
sahf
sbb
into
cmpsb
sub
and
divl
fildll
mov
icebp
insl
inc
xor
and
inc
repz
int3
les
out
jae
fstl
sbb
lock
or
or
dec
fcompl
rcrl
cmp
xor
adc
mov
repz
dec
pusha
add
icebp
mov
push
xor
xchg
xorb
adc
push
adc
neg
xchg
sub
or
jmp
pop
repz
mov
jbe
clc
fnstsw
call
mov
xchg
push
lahf
stos
xorl
and
jo
add
xchg
mov
and
ret
test
xor
adcb
dec
test
cmpsb
dec
sbbl
es
ljmp
xchg
scas
push
lods
aam
in
mov
or
xor
jg
je
jbe
mov
xorl
aaa
mov
mov
jl
cmp
jmp
cli
mov
xchg
imul
sub
negl
addl
cli
xlat
sbb
int
add
jbe
lods
mov
mov
std
xlat
sub
lods
fisttpll
dec
call
pop
mov
psllw
fsts
push
sbb
mov
fcmove
dec
loopne
lahf
arpl
nop
shl
popf
aad
fistl
push
test
fadd
jo
mov
xor
aam
jge
jmp
mov
inc
sti
in
or
loopne
adc
jl
es
hlt
imul
xor
cld
mov
or
mov
xchg
stos
div
xor
cwtl
ds
ss
inc
cltd
iret
push
insl
sub
mov
pop
fchs
xor
idivl
mov
mov
into
xor
fs
aas
int3
mov
push
das
xor
ja
leave
inc
lret
add
lds
or
test
pop
pop
test
jge
cld
pusha
mov
pop
jne
push
stos
fs
sti
aad
jl
mov
out
cmp
insl
lods
xchg
sub
dec
cwtl
mov
push
dec
dec
jo,pt
cltd
sub
imul
pop
sub
sti
dec
xchg
add
adc
imul
bound
xchg
stos
shlb
popa
sbbb
pop
popa
xchg
push
pop
cltd
xchg
lret
mov
gs
xor
sub
aaa
mov
and
xor
push
rol
inc
mov
adc
arpl
or
dec
cmp
dec
and
lret
add
fldenv
adc
push
in
cmpsl
mov
test
ljmp
nop
movsb
or
fwait
pop
sbb
adc
jecxz
xor
and
out
sub
icebp
fisttps
fidivl
jecxz
and
sbb
js
mov
dec
sbb
mov
sbb
jo
mov
push
shl
shrb
pop
call
lock
cmp
ret
pop
mov
push
fidivrs
addb
ja
rol
cmp
ror
jo
mov
mov
fstp
stos
jns
pop
xchg
aad
xchg
sub
adc
jne
mov
ds
push
int
jb
inc
jp
icebp
cmp
push
jb
jns
movsb
and
je
sbb
mov
sbb
paddd
mov
push
xchg
inc
push
mov
ljmp
jge
push
jbe
cmpsl
into
mov
xor
outsl
push
cmp
xchg
fdiv
aaa
mov
movsl
xor
imul
jbe
mov
mov
or
jne
xchg
clc
sahf
sbb
pop
mov
in
dec
jns
adc
sbb
leave
pushf
aaa
mov
fisubl
aad
das
lcall
mov
in
je
loope
rcl
jno
ss
xor
jl
inc
fisubs
shll
push
jecxz
inc
or
stos
pop
imul
call
jge
add
jp
dec
stos
in
xor
fists
mov
insb
push
cld
cmp
icebp
dec
inc
cmc
jmp
jp
addr16
pop
mov
adc
add
xlat
xor
xchg
push
movsb
jno
repz
outsb
push
stc
and
adc
fs
adc
cmp
shll
dec
inc
and
inc
jmp
ss
or
adc
cltd
rorl
mov
xchg
daa
xchg
jmp
push
test
imul
or
and
clc
lahf
lds
jbe
mov
lods
mov
in
insb
pop
jo
out
push
sub
shll
js
cmpsb
dec
decl
ja
ret
test
push
xchg
dec
movsl
jl
inc
xlat
cli
mov
rcll
push
mov
lret
shlb
sub
fst
xor
adc
invd
pop
sbb
scas
pop
mov
mov
push
mov
iret
lds
adc
out
js
fildll
ret
pop
mov
aad
rolb
jecxz
push
sub
aaa
and
mov
or
lock
mov
cltd
les
stos
mov
int3
mov
out
data16
jmp
nop
ds
jae
push
es
fidivrl
mov
sbb
sbbl
fcmovne
add
xchg
loope
in
xor
fcomp
aam
adc
cmp
lahf
repz
or
pop
scas
and
ret
mov
in
test
dec
fimuls
bound
cmp
fs
or
loope
arpl
cmp
imull
mov
mov
add
jg
xchg
push
xchg
test
pushf
push
sbb
xchg
add
sbb
mov
rorb
negb
xlat
cmp
jno
orb
mov
cmpsl
test
or
xchg
sbb
jb
mov
imul
mov
cli
pop
sbbb
dec
pushf
into
or
dec
daa
cmp
pushf
test
or
hlt
stos
daa
sub
pop
out
lock
je
sub
push
push
nop
pop
lahf
ret
fsubp
and
pop
pop
mov
fwait
and
jb
dec
dec
loope
add
in
pop
add
sbb
mov
sub
xchg
movsb
inc
ja
and
lret
pop
mov
mov
into
and
cwtl
cmp
mov
or
adc
loop
cmp
sub
addl
inc
mov
and
push
or
mov
iret
gs
test
jb
pop
test
push
outsl
loop
jae
ljmp
lods
imul
ljmp
sub
mov
sbb
fcomip
lahf
xor
dec
xchg
dec
shlb
sub
pop
int
cmp
dec
lret
int3
inc
xor
inc
pusha
push
adc
test
mov
mov
jle
push
mov
mov
fldenv
fiadds
sbb
inc
adc
ret
aam
jl
or
out
or
xchg
mov
orl
scas
push
pop
jno
cmpsb
xor
add
inc
mov
add
mov
mov
or
sub
cmp
mul
rcll
int
adc
push
inc
cmc
mov
insb
mov
icebp
inc
pop
jo
test
lds
add
stc
cld
outsl
sbb
icebp
leave
ret
mov
test
cli
and
and
mov
andb
cwtl
pop
test
xor
aas
adc
lock
imul
dec
out
xchg
sbb
xchg
les
ret
pushf
mov
ret
mov
jmp
mov
adc
cwtl
fsubs
jne
imul
gs
push
xchg
xor
and
hlt
push
xor
sbb
dec
enter
mov
dec
adc
test
repnz
jmp
sti
pop
and
ret
in
test
ficompl
out
insb
das
pop
mov
movsl
fs
pushf
les
push
or
dec
xchg
jbe
lahf
std
cmp
jmp
mov
cmp
sbb
mov
sub
cld
mov
aad
xor
je
sarb
xchg
push
or
jmp
inc
lods
fs
xchg
pop
aam
in
push
imul
cwtl
adc
push
jno
loopne
lcall
andl
add
adc
fsubs
jmp
jle
pop
inc
movl
mov
jle
cmpsl
addb
pop
and
pop
ficoms
das
or
inc
lods
or
es
sbbl
pop
mov
or
subb
push
mov
pusha
dec
adc
adc
mov
mov
imul
inc
int3
mov
xchg
add
lea
mov
gs
dec
xor
fs
daa
negl
loope
popa
cli
lcall
adcb
sbb
cli
mov
stos
jb
cmp
outsb
inc
push
jmp
add
pop
add
inc
in
test
cmp
xor
jbe
pop
icebp
dec
jle
aas
fsts
call
test
pop
mov
movsb
stos
mov
mov
sbb
outsl
ja
sbb
dec
enter
mov
shl
mov
imul
bound
jp
jl
vpsubq
adc
jb
cld
dec
push
cmpsb
sub
lods
cmp
icebp
jae
jne
xchg
pushf
xor
push
push
mov
xor
adc
fucompp
dec
cmp
daa
lcall
mov
adc
scas
jne
pop
jns
inc
or
xchg
mov
xchg
xchg
mov
add
stos
pop
mov
xchg
insb
sub
and
sub
sub
pop
sbb
lret
ret
sub
call
orl
out
lret
aaa
aas
add
push
xchg
lods
ljmp
lret
push
inc
jle
movsl
out
pop
mov
movl
sub
sub
stos
clc
lret
mov
mov
jae
push
xor
mov
bound
cmpsl
xchg
push
pusha
cmp
jle
test
xlat
xorl
inc
lea
cmp
cmpsl
icebp
cld
sar
adc
add
cmc
xchg
lods
movsb
and
sbb
inc
add
xchg
inc
jle
test
or
xchg
sbb
insl
stc
jbe
xor
mov
mov
dec
jnp
pop
and
lret
repnz
xlat
xchg
push
int3
lods
push
test
orl
push
enter
out
stos
mov
pushf
jecxz
sbb
adcb
and
je
adcl
xlat
pop
jmp
add
xchg
sbb
adc
lock
pop
xchg
lret
add
push
icebp
xor
fdivr
add
ret
xchg
inc
pusha
dec
cmp
nop
xor
movsl
scas
sbb
pop
cmpsb
pop
in
out
mov
fdivp
inc
jp
clc
and
jg
test
les
sti
sti
cmc
fisttpl
in
jno
push
or
mov
jne
pop
lods
test
cmpsb
outsl
aaa
xchg
je
call
push
or
jbe
popf
xlat
add
int3
fimuls
bnd
pusha
or
rcrl
mov
pop
stos
daa
or
xchg
loop
mov
ret
jns
pop
mov
dec
jno
jle
je
mov
mov
adc
push
dec
dec
jnp
sbb
xchg
jns
es
mov
mov
mov
mov
mov
sub
popf
mov
icebp
adc
dec
cmpsb
sbb
jo
xchg
push
fs
mov
inc
jmp
or
loop
int
rcll
clc
pop
pop
repnz
enter
ss
ficompl
rcrb
popf
pop
popf
cld
into
movsb
enter
add
mov
sub
inc
cmp
sub
fs
inc
adcl
cmc
pusha
add
jno
dec
cmpsl
fwait
insb
add
in
adcb
ds
cmp
dec
push
insb
lods
imul
inc
sbb
xor
scas
jnp
fistl
clc
sbb
mov
adc
insb
les
ret
sbb
xchg
add
rcll
lret
push
enter
and
cwtl
nop
aam
sub
add
scas
pop
int
add
mov
daa
jp
clc
test
pop
aad
fisubrl
dec
jns
repnz
adc
leave
pushf
inc
lods
cmp
into
push
shr
sbb
cmp
cltd
add
jns
outsl
out
or
cmp
es
ds
push
test
into
dec
xchg
xor
sti
shll
pop
scas
repz
sarl
addl
xchg
enter
loopne
mov
mov
jne
popf
outsl
test
mov
movsl
cld
xchg
push
and
mov
repz
inc
fdivrl
xchg
or
in
or
out
test
cmpsb
push
out
test
push
movsl
lret
push
call
into
xlat
mov
add
popaw
or
das
cmc
jle
sub
jo
jg
xchg
and
movsl
fadd
insb
repz
mov
stos
inc
leave
adc
and
add
out
jno
and
inc
movsl
fisubrl
add
jns
int3
jbe
lahf
jmp
dec
sub
cmp
adc
idivl
fisttpll
push
popf
mov
pop
mov
aad
lahf
stos
adc
shlb
mov
cli
sbb
push
mov
int3
mov
shr
mov
sub
or
or
insb
rcrb
xchg
sub
rorl
loopne
mov
xchg
dec
das
adc
xor
leave
mov
in
inc
pop
pop
sbb
inc
pop
shll
clc
sbb
nop
jg
and
cltd
arpl
repnz
jg
movntq
mov
filds
stc
mov
fwait
stos
and
sbb
repz
mov
iret
out
mov
pop
pop
lea
adc
lods
sub
nop
inc
or
push
mov
jae
lock
push
insl
movsl
out
pop
pop
bound
pop
and
mov
adc
mov
sbb
mov
add
dec
xchg
cld
jge
inc
xchg
les
hlt
aas
cmp
hlt
xlat
push
imul
clc
fistpl
dec
add
ja
pop
clc
fisttps
in
stos
mov
xchg
dec
jae
test
jne
out
insl
cli
mov
in
call
stc
mov
je
rcrl
popf
mov
out
out
jbe
sub
cs
xchg
mov
aaa
fs
jne
insb
fs
ljmpw
leave
jp
mov
adc
and
repnz
mov
in
xchg
outsb
mov
bound
in
ja
aas
adc
jl
inc
push
xor
icebp
imul
das
vmovsd
imul
cmp
xor
lret
mov
and
aaa
lret
pushf
xchg
xchg
imul
cwtl
enter
pop
shll
cltd
cltd
sub
push
iret
sub
xchg
mov
cwtl
shrb
jmp
jecxz
jo
mov
leave
mov
repnz
scas
lret
dec
lods
mov
out
rcr
enter
aas
mov
dec
gs
shlb
imul
stc
cld
sarl
push
stc
imul
inc
xchg
test
cwtl
inc
shll
popf
jge
divb
xchg
or
xor
mov
mov
xorb
mov
out
xchg
push
xlat
aaa
dec
les
shll
sub
adc
dec
mov
loope
or
push
stos
iret
cmp
movsl
push
mov
cmpsl
mov
add
push
lods
je
and
hlt
mov
stos
arpl
enter
add
andb
dec
into
dec
outsl
insl
jl
lret
sbb
mov
jns
cltd
lods
inc
mov
and
in
adc
repz
testl
imul
call
push
jns
add
sti
pop
test
fcmovbe
adc
cs
push
daa
fcoms
rolb
xchg
jo
adc
adc
mov
in
lret
jle
mov
data16
daa
daa
xchg
xor
push
out
outsl
mov
shll
mov
jbe
and
xor
notl
push
xor
mov
sbb
and
or
adc
xchg
jle
inc
xorl
stos
add
jns
or
sub
fisubrs
dec
bound
mov
xchg
stc
xchg
test
xchg
add
mov
sub
jbe
sbbb
les
addr16
pop
jge
jecxz
and
xchg
sti
sbb
or
sbb
jnp
inc
jecxz
mov
sub
push
push
xor
fistpll
dec
jl
daa
xchg
jno
addr16
nop
mov
cmpsl
fsubrs
dec
inc
loop
mov
ljmp
add
cwtl
sbbl
push
mov
icebp
filds
shll
je
push
mov
ret
dec
and
cmc
imul
or
add
aam
sub
test
xchg
dec
stos
out
int3
out
sti
jle
jnp
std
enter
adc
or
ret
lea
ficoms
jae
xor
and
rclb
loopne
and
cmp
cwtl
fcoml
pop
outsl
subl
adc
outsb
pop
data16
nop
scas
pop
mov
aas
push
sti
out
jnp
cmpsl
push
inc
sbb
cmpsb
ret
fs
mov
cmp
jb
test
push
mov
xbegin
mov
lds
cmpsb
xlat
jl
xchg
pop
cli
xor
out
fistps
fs
jp
ds
dec
aas
pop
push
inc
fdivl
xchg
mov
cmc
and
sub
sbb
add
xchg
or
mov
cli
fcmovnbe
sbb
jns
xor
xchg
push
in
xchg
adc
jp
pop
push
jb
mov
adc
and
sub
lock
jle
notl
or
push
les
mov
or
mov
mov
mov
subb
inc
jno
fs
push
std
push
lea
fwait
sub
cmpsl
imul
mov
or
pop
inc
in
loopne
cmp
dec
iret
dec
and
dec
dec
jnp
and
arpl
rcl
scas
cli
dec
push
add
out
or
add
fs
or
loopne
inc
paddb
pushf
rcl
subl
shlb
add
mov
mov
or
xor
cmp
pop
insl
insb
mov
push
xor
ret
ficompl
mov
pushl
mov
outsl
aas
cs
aam
pop
das
jno
push
mov
iret
push
push
pop
loop
mov
pop
repnz
mov
cmp
jp
xchg
xchg
stos
jg
cmp
push
jbe
arpl
js
xchg
lahf
test
inc
call
mov
sahf
cmp
ja
imul
or
and
js
pop
sub
cmp
adc
mov
ret
mov
cmp
in
cmpsl
xor
lods
sub
mov
cmp
movb
push
cmc
mov
jae
mov
jnp
mov
and
in
xchg
adc
pushf
sub
jb
int
dec
je
mov
cs
cmp
pop
and
or
lahf
and
add
add
mov
mov
xchg
xchg
test
lcall
popl
fs
sub
and
xor
outsb
pop
insb
xor
pop
fisubrs
rcll
test
shll
imul
jbe
xor
xor
sub
xor
sub
es
insb
rorb
cmp
mov
in
into
insl
jecxz
js
mov
bound
fdivp
cmp
xchg
test
adc
or
xchg
sbb
std
add
bound
xchg
mov
cmp
cmp
enter
cld
mov
das
scas
sbb
sbb
frstor
push
mov
and
cld
sahf
mov
int3
rolb
pop
movsl
lcall
rorb
inc
jle
leave
repz
fstpt
in
popf
pop
hlt
loop
insb
mov
xor
ljmp
test
sub
xchg
test
dec
jle
in
cmpl
mov
cmp
loop
add
mov
ja
adc
mov
movsb
rcl
xor
shrl
mov
mov
xor
sarb
pop
xlat
mov
rolb
jno
popl
neg
imul
loop
pop
jo
xor
mov
xchg
adc
sub
movl
sub
mov
jecxz
inc
out
push
pop
aam
jge
xlat
iret
pop
ja
sahf
mov
insb
add
pop
insb
loopne
dec
sbb
int
aas
adc
into
sti
call
jae
cld
pop
call
push
xchg
inc
cld
out
cmpsl
out
sbb
lret
pop
and
jg
andb
push
xor
test
jns
shr
mov
inc
scas
vpandn
cmp
push
repnz
inc
push
adc
mov
pop
loop
call
inc
dec
xorl
stos
inc
scas
xchg
adc
sahf
xor
negl
out
int
jp
hlt
jmp
stos
rcr
push
mov
push
jbe
test
cmc
into
pop
inc
nop
inc
mov
stos
jae
cmpsb
inc
mov
sbb
inc
push
xchg
or
das
lock
fwait
scas
or
pop
mov
js
stos
ja
jl
or
lods
cmp
jo
imul
pusha
imul
ret
sub
push
mov
sbb
push
int
mov
adc
ret
mov
lock
push
divl
push
clc
sub
jno
imul
sti
inc
out
sbb
cs
dec
mov
add
jmp
or
int3
sbb
jns
out
mov
stc
mov
imul
push
jne
push
ja
push
fcmovu
dec
lret
adc
out
mov
xchg
pop
mov
jb
arpl
aad
mov
mov
push
sbbl
rcrl
adc
out
xchg
movsb
jl
shll
jae
adc
xchg
cs
mov
jnp
movsl
cwtl
and
aas
cmpsl
push
mov
xlat
fisubs
iret
lahf
xor
aaa
clc
mov
or
cmpsb
scas
xchg
and
fs
cmpsb
jae
mov
andl
mov
jmp
or
lret
cltd
push
in
js
cmp
std
cmp
add
sub
mov
jle
stos
inc
pop
loope
stos
roll
inc
jns
in
lea
shll
sub
int
push
mov
inc
cs
das
or
sbb
nop
hlt
out
xor
mov
dec
rcll
mov
cmp
insl
pop
aad
or
cld
mov
daa
adc
fsqrt
leavew
mov
inc
mov
jo
outsl
push
and
adc
pop
test
adcb
cmp
fists
push
mov
roll
fxch
cmpsl
sub
xchg
fstpt
jbe
push
jno
or
fdivrs
shl
movsl
push
cmc
roll
sub
adc
rcl
xchg
mov
jb
in
ja
das
fdivrp
nop
xor
jmp
add
mov
dec
data16
lret
movsl
or
ret
sarl
repnz
sti
and
xor
add
mov
popa
mov
push
rcl
xor
insb
into
in
jne
jmp
inc
push
or
test
pushf
inc
xor
push
fsubr
lds
flds
fxch
ljmp
faddp
mov
insb
lret
push
movsl
adc
test
pop
aam
sub
fisubrs
ja
push
fsubs
and
push
xor
stos
xchg
insl
mov
test
sbb
mov
jno
les
mov
and
leave
sbb
xor
lods
cmpsb
xor
in
out
and
insb
jnp
dec
pushf
adc
push
push
pop
cmp
pop
cmp
add
fisubl
hlt
and
cmp
in
fucomp
push
es
pop
cli
sbb
jo
sbbl
xlat
xlat
mov
or
lods
jecxz
cmp
rorb
pop
inc
push
lods
shl
and
xchg
mov
imul
cli
xor
push
lods
adc
dec
dec
sub
mov
lretw
aas
hlt
cmpsb
es
outsb
adc
cld
cmp
int
add
inc
cmp
pop
adc
adc
pushf
scas
ljmpw
cwtl
pushf
bound
std
xchg
not
dec
dec
out
jmp
xchg
mov
cltd
lods
imul
mov
daa
xchg
or
mov
jmp
mov
sbb
fidivs
shll
lods
sub
and
sub
cmp
das
inc
imul
daa
mov
outsb
xchg
jo
xchg
mov
jo
leave
rclb
filds
xchg
mov
jns
or
xchg
adc
orb
sub
pop
sub
lahf
mov
push
int
in
push
dec
out
icebp
std
dec
lea
movsl
mov
cmpl
or
xchg
push
sub
xor
fcos
pop
lods
or
leave
les
sbb
scas
jno
adc
xchg
jge
sub
cwtl
fimuls
jbe
repz
inc
stos
hlt
inc
insb
iret
mov
test
push
in
scas
iret
lea
scas
sbb
mov
cmp
movsl
jle
loop
arpl
mov
lea
jb
or
addr16
rclb
insb
insl
fiaddl
lods
mov
xor
and
push
pop
inc
sahf
test
scas
and
push
push
inc
mov
adc
inc
aam
mov
call
repz
mov
jle
cltd
je
sbb
test
mov
clc
test
std
jnp
mov
adc
pop
pop
scas
jo
jp
fisttpl
mov
into
pop
js
and
pop
pop
sbb
cmp
mov
and
adc
mov
cld
sub
inc
testl
adc
inc
jecxz
cmp
pop
pop
cmp
mov
insl
movsb
xor
addr16
and
mov
mov
xchg
lret
shll
call
mov
cmp
les
int3
stos
fadd
mov
cmpsl
jle
mov
dec
popf
inc
jecxz
iret
inc
inc
mov
scas
outsb
cwtl
push
dec
xchg
xlat
roll
cmpsl
pop
test
lret
jecxz
icebp
cmp
add
jmp
popf
fnstcw
pop
aam
mov
ljmp
mov
or
mov
and
or
add
mov
jecxz
add
and
mov
int3
sub
mov
iret
cmp
in
aad
sub
cmp
dec
cltd
mov
mov
mov
lret
outsb
mov
loop
pop
sbb
dec
test
push
add
cli
mov
inc
mov
in
push
rcr
hlt
idivb
mov
jne
pop
call
jmp
shr
mov
or
cmp
aam
or
xor
cmpsl
jo
inc
loop
mov
test
and
orb
inc
fadds
xchg
lret
mov
rcrl
rorl
xor
sbb
pop
jbe
sbb
enter
jge
xchg
push
test
mov
stos
push
sbb
scas
pop
mov
test
cmp
pop
dec
test
cmp
cmc
sub
mov
mov
mov
xor
jb
pop
jmp
lret
add
adc
ds
pop
mov
add
loopne
jmp
push
hlt
inc
faddl
push
test
xor
das
cmp
fwait
mov
test
insb
lods
push
loopne
mov
cld
sbb
xchg
sti
or
cltd
aaa
push
and
stos
stos
cmpsl
arpl
fisubrs
mov
xchg
jge
rep
mov
std
daa
jae
dec
sbb
popf
into
sbb
and
mov
or
xchg
jmp
loope
imul
push
cwtl
aad
cmpsb
pop
sbb
mov
jbe
inc
insl
or
stos
scas
jl
mov
imul
adc
ss
out
int3
outsl
cmp
xabort
jp
and
imul
adc
sub
pop
daa
cltd
mov
push
dec
roll
pop
fwait
cmpsl
and
rclb
ret
in
pop
test
inc
addr16
pop
mov
popa
dec
xchg
pushf
mov
xchg
mov
cs
xor
lcall
cmp
pop
cmpsb
loopne
xor
cmp
bound
cltd
mov
mov
push
insb
test
add
pop
xchg
mov
xor
cmp
ret
xchg
test
cmpsb
aad
cwtl
aam
add
mov
sub
and
mov
push
and
jne
mov
mov
ror
mov
out
sbb
mov
jnp
outsb
mov
and
arpl
ja
cli
loop
jmp
jge
addr16
cmpsl
dec
scas
stos
bound
dec
add
pushf
out
jle
lods
incb
cli
inc
les
jae
mov
jno
sub
or
cmp
out
daa
add
movsb
cwtl
push
popf
addl
cltd
xchg
cwtl
xor
jno
stos
pop
scas
sti
jge
sub
pop
push
jne
dec
in
sbb
xor
and
sub
push
xorl
jge
jmp
push
rcll
dec
mov
inc
js
dec
arpl
std
in
rcr
adc
and
sbb
out
nop
clc
outsb
movsl
mov
ret
int
out
std
fists
xorl
jl
dec
mov
shl
lea
mov
pop
cwtl
addl
inc
dec
fcmovbe
jae
insb
rclb
mov
adc
lods
dec
pop
xor
and
cmc
or
xchg
jno
dec
inc
and
fmulp
pop
sbb
dec
push
mov
inc
sti
push
dec
les
push
fcoms
out
mov
xor
adc
jo
fcompl
dec
or
lea
fdivl
inc
jae
mov
dec
dec
pop
jo
mov
mov
in
xchg
filds
mov
ret
nop
mov
ret
adc
inc
loopne
int
or
pop
mov
js
jg
push
repnz
stc
adc
mov
mov
imul
mov
add
test
call
pop
xchg
push
and
jno
arpl
jge
xchg
faddl
or
pop
dec
jg
lret
jg
push
or
mov
xchg
popf
push
cmp
lds
shrb
push
add
xchg
fiadds
dec
cmp
push
adc
push
sub
cli
pop
mov
cmp
and
mov
mov
xchg
faddl
sbb
bound
jmp
push
mov
lahf
aas
in
mov
jle
jne
xor
inc
shrl
sti
bound
or
mov
pop
push
mov
in
dec
int3
repz
pop
mov
mov
in
push
xlat
adc
les
call
notl
inc
and
sub
xor
imul
sub
or
mov
dec
fistpl
lea
xchg
ljmp
pushf
sub
add
out
sub
fcmovb
jne
inc
sub
xchg
pop
icebp
push
xchg
inc
dec
jl
push
xchg
ljmp
adc
pop
sub
sbbl
mov
xor
stc
lods
jbe
and
aam
clc
std
mov
daa
imul
ja
pop
insb
and
fildl
xchg
cwtl
and
divb
xor
mov
or
js
cmc
xor
jno
cmp
movsb
mov
xor
xor
add
push
push
adc
jno
dec
xor
ja
mov
dec
ja
push
sarl
xor
jb
or
cmp
mov
pop
mov
add
xor
outsb
push
enter
add
mov
mov
ss
xchg
dec
pop
and
test
roll
scas
loope
dec
push
or
loop
test
push
sub
mov
out
pop
xchg
aam
in
pop
xor
or
stos
lods
out
ljmp
pop
aas
lock
and
pop
cmpsl
ds
out
xchg
add
jmp
push
ret
leave
xor
push
std
es
or
cmp
inc
xchg
xor
arpl
ljmp
xor
mov
bound
lea
jae
jae
adc
popl
in
mov
arpl
test
mov
sub
pop
aam
xchg
es
dec
rolb
stos
jle
enter
loop
pop
fmulp
repnz
jecxz
lea
sub
sar
push
cli
dec
out
notl
imul
imul
push
xor
std
push
push
xor
cs
rol
cmp
push
mov
jecxz
repnz
aas
insb
enter
fistps
mov
mov
and
fistl
scas
ret
clc
adc
jo
xor
pushf
mov
xchg
or
addl
stos
fwait
or
mov
pushf
mov
inc
mov
push
loopne
cmp
popf
sbb
loop
push
mov
das
scas
loope,pn
xor
push
sbb
mull
sbb
push
add
roll
cmpb
xchg
mov
fisttpll
lret
test
pop
fwait
jle
stc
add
cmpsl
push
ljmp
hlt
or
pop
inc
das
outsl
push
push
cmc
outsb
jne
pushf
xor
sub
je
push
sub
jle
iret
scas
addb
into
lcall
les
xchg
lret
clc
jno
push
jnp
fnstcw
jo
push
lahf
cmp
ficomps
fstl
pop
addl
idivb
mov
push
mull
push
loope
sub
xchg
jo
or
daa
bnd
xlat
clc
movl
ror
inc
test
jbe
push
movsb
mov
repnz
es
out
sbb
mov
or
fimuls
mov
insl
add
or
mov
mov
fcmovb
in
pop
gs
es
and
cmp
stos
xor
lcall
dec
lret
sbb
sub
repz
sub
std
iret
pop
push
insb
or
cmp
dec
sbbb
dec
fwait
movhps
test
in
xchg
ja
lret
mov
inc
cmp
lods
mov
jno
mov
jle
sahf
lods
xchg
push
xor
daa
pop
mov
mov
push
inc
cmpsl
mov
cmp
add
and
loope
stc
test
xorb
and
jmp
fimull
ret
xchg
fs
call
cmc
dec
data16
rcrb
data16
xchg
pop
dec
fnstsw
nop
and
rclb
xor
addl
lds
scas
mov
jle
pop
repz
adc
sub
repz
pop
hlt
enter
sbb
pop
xlat
jb
out
popa
dec
test
push
sub
dec
idiv
mov
jnp
enter
rcrb
inc
xchg
fstpl
inc
push
jmp
dec
ljmp
push
test
xlat
pop
adc
push
out
and
daa
mov
test
or
rcrl
add
cmpl
push
xchg
sti
mov
sbb
out
push
into
jle
inc
loopne
sbb
dec
jo
mov
mov
or
push
fcompl
push
loope
sti
sbb
insb
sub
nop
dec
xchg
mov
push
mov
or
sub
scas
push
int3
js
jns
mov
das
jmp
adc
pop
add
xchg
repnz
or
stc
inc
stos
and
jmp
pushf
test
andl
jnp
outsb
sbb
sub
cmpl
mov
xchg
insb
or
sbb
pop
ficomps
push
add
jae
jle
clc
mov
fnstcw
sub
mov
mov
pop
jmp
mov
inc
test
lcall
lret
pop
clc
push
es
das
aam
push
mov
lods
icebp
xchg
mov
scas
in
leave
in
ss
xlat
mov
pop
repz
pop
loop
mov
test
jmp
scas
testl
test
cmp
add
pushf
fsubr
outsb
push
cmp
imul
test
push
in
test
dec
push
inc
gs
loop
add
imul
or
xchg
mov
repz
lcall
xlat
rclb
ja
lods
or
xor
dec
add
cmpsl
mov
inc
xchg
sub
and
in
jg
pop
std
push
mov
or
int
adc
call
imul
imul
cmpl
xor
adc
mov
jnp
mov
cld
push
fadds
sub
loop
cwtl
ret
das
xchg
dec
sub
inc
sub
jmp
mov
mov
lret
mov
add
adc
cmpsl
mov
in
push
enter
dec
sub
fadds
mov
pop
cld
pop
rorb
lret
inc
mov
bswap
aas
dec
mov
jo
jmp
jbe
xchg
mov
shll
jbe
les
test
movsb
test
inc
cmpsl
shr
inc
cmpsl
incb
push
les
mov
mov
and
in
imul
pop
push
int
lds
dec
adc
or
mov
lods
xor
and
mov
jne
push
sbb
push
in
ret
mov
jns
push
inc
inc
jl
mov
ds
ds
ret
sti
and
mov
stos
push
inc
jmp
dec
clc
insb
sbb
adc
and
dec
enter
sbb
pop
movsb
mov
cmc
negb
cwtl
fimuls
dec
mov
mov
adc
call
out
cmp
sub
xlat
or
orl
out
je
test
outsb
les
add
pushf
dec
lret
inc
imul
fdivrp
sbb
push
in
mov
fimull
jp
call
mov
mov
pop
mov
add
cmpsb
mov
mov
and
xchg
jmp
test
mov
test
mov
cltd
and
add
cmp
xchg
lahf
lods
pop
mov
xchg
jns
sub
adc
xchg
push
or
cltd
enter
dec
shrb
add
loop
sbb
mov
mov
jo
sub
scas
pushf
dec
mov
scas
xlat
insb
aaa
and
push
movsb
mov
hlt
sbb
adc
hlt
test
scas
cmp
mov
mov
cmpb
dec
pop
cmp
push
adc
mov
jb
xchg
adc
popf
fprem1
cmp
fsubrp
adc
dec
pop
sub
or
stos
hlt
mov
adc
jge
mov
imul
mov
xchg
stos
jecxz
cmp
adc
push
fcmovnb
mov
cltd
ret
aaa
adc
cmp
push
enter
int3
xrelease
testl
xchg
add
push
out
test
pop
in
add
push
in
dec
outsl
std
ljmp
imul
pop
jge
jmp
mov
push
push
push
movl
rclb
arpl
icebp
xchg
cwtl
pop
jp
mov
pop
mulb
adc
lret
sub
sbb
mov
mov
inc
mov
mov
mov
and
stos
movsl
repz
scas
shll
pop
pop
and
cmp
cwtl
mov
mov
add
adc
jmp
xor
scas
insl
dec
mov
ret
xorps
mov
fnstenv
pop
test
pop
dec
xor
mul
into
and
cltd
jb
repnz
sub
cmpsl
sahf
test
xor
push
pop
outsb
xchg
nop
lods
xchg
or
shll
xchg
fidivrl
jb
pushf
add
icebp
test
mov
mov
jg
sub
fcompl
sbb
loopne
or
xchg
inc
in
leave
movsl
cs
lea
jg
jb
add
xor
jno
lea
push
adc
jno
ss
mov
addr16
lock
jno
ss
sub
cmp
add
sub
aam
sbb
lcall
xlat
sub
xchg
test
loop
cmp
jmp
push
mov
xchg
sub
hlt
xor
popa
cmpsb
popa
imul
stos
pop
orl
inc
sahf
jno
cld
pop
lret
adc
mov
inc
lock
in
xchg
mulb
adc
je
loope
push
loopne
out
inc
ljmp
xchg
int
sub
orl
jmp
fstl
and
aas
jg
lds
ret
or
pop
inc
adc
xchg
mov
push
arpl
sub
pop
fwait
nop
hlt
sbb
cld
and
enter
aad
addb
daa
out
and
adc
adc
adc
pop
xchg
jp
aas
movsb
or
cmp
notb
cld
inc
pop
sti
mov
pop
cmp
xchg
cmpsl
jns
mov
insl
add
sbb
data16
mov
sti
sbbl
aaa
pushfw
lret
lds
mov
push
rcrb
mov
and
pop
jle
ret
test
jne
repz
cmp
or
fsubs
fnstcw
test
out
dec
repnz
cmp
cmp
xchg
and
jl
cli
lret
cmp
sub
loope
sbb
fs
in
in
int
comiss
sub
test
mov
loopne
adc
mov
mov
stos
lods
out
in
lcall
cmp
rorb
mov
enter
adc
aad
inc
cltd
xor
mov
movsl
inc
sbb
ss
shlb
add
add
cmp
je
out
sbb
into
pop
sbb
pop
adcb
popf
xor
out
fcomp
jb
jbe
adc
in
mov
inc
pop
subl
popa
icebp
rolb
mov
xor
icebp
nop
ss
scas
psubq
pushf
aas
ret
into
adc
flds
pop
das
cmp
es
iret
sarb
aas
lea
roll
mov
hlt
pop
pop
addl
test
jne
dec
inc
mov
cmp
std
add
cltd
or
test
add
sub
xchg
dec
enter
into
sub
xchg
xchg
loopne
nop
iret
and
sbb
or
imul
fdivrp
cmc
aam
test
push
negl
mov
xchg
dec
dec
pop
mov
or
pop
popa
ljmp
je
jecxz
ja
xor
out
xchg
sbb
or
jb
xchg
cwtl
les
pop
ficomps
jbe
push
push
mov
mov
sbb
lods
or
fistps
fsubrs
into
stos
jmp
xorb
pop
mov
mov
popa
insl
ja
ret
jp
ja
jnp
push
add
mov
outsl
pop
test
jl
xor
lcall
sti
aam
repnz
xchg
or
adc
xor
mov
cmp
and
mov
or
ret
sub
xchg
dec
push
jl
notl
pop
cmp
or
loope
std
cmp
out
cmovnp
sar
out
sub
sbbl
push
xor
inc
shll
mov
inc
pop
mov
mov
subl
push
vdivpd
xchg
mov
in
mov
clc
shll
push
cwtl
fwait
and
dec
and
orb
cwtl
inc
adc
inc
xchg
addl
ret
and
push
adc
sub
add
push
sub
loope
movsl
clc
idiv
adc
pop
xchg
and
mov
or
repz
mov
aad
insb
clc
sub
mov
pop
jo
jg
and
jecxz
push
adcb
fucomi
xor
call
into
pop
cmpsl
push
jns
or
or
jb
jmp
lds
daa
xor
mov
mov
out
sti
cmpsl
inc
pop
mov
mov
pop
pushf
add
cmp
mov
movsb
je
inc
das
shlb
cmp
push
pop
dec
jo
pop
pusha
fsubrs
cmp
xchg
jb
test
lret
scas
xor
jge
ja
mov
xchg
and
dec
xchg
mov
imull
in
sbb
push
sbb
and
mov
xchg
push
dec
sub
shrl
in
outsl
jecxz
fisubs
fwait
out
push
add
stc
jne
mov
inc
inc
and
es
inc
push
mov
lret
mov
movb
xchg
cwtl
test
icebp
jle
and
add
iret
mov
mov
jle
cmp
inc
popf
xor
inc
push
adc
sub
in
dec
lcall
and
jb
push
ja
sbb
fs
pop
leave
cwtl
icebp
jp
mov
into
testl
sarb
or
out
sub
std
jnp
lahf
mov
push
ss
out
add
and
and
mov
aad
les
arpl
xor
in
imul
mov
pop
fcmovnu
lods
mov
mov
jmp
jg
out
popf
cmp
or
sub
stos
or
mov
pop
jns
inc
icebp
loope
ja
testb
popw
inc
int3
xchg
sbb
xor
add
insl
jne
push
fcmovbe
mov
fnsave
mov
cmc
syscall
arpl
jmp
cli
leave
jnp
pop
testl
data16
in
fnstenv
pop
push
decb
aas
insb
or
push
or
lods
popa
call
imul
xor
inc
jb
stos
out
mov
pop
add
add
outsl
mov
loop
pop
lods
xor
frstor
clc
sti
pop
add
shlb
divl
insb
ret
fcomi
fs
and
fwait
xchg
rcll
jecxz
sti
fs
xchg
push
jge
push
mov
sti
sbb
sbb
shrb
mov
xchg
mov
sarb
cs
push
push
daa
add
jecxz
or
push
cmp
aaa
mov
push
mov
or
addl
mov
ss
sub
das
sarb
or
pop
or
push
imul
and
jns
aam
mov
inc
fstpl
pop
lods
inc
insb
add
lret
lea
sbb
fnsave
addl
lods
mov
jmp
mov
bound
push
cmpsb
in
dec
sti
insl
push
mov
inc
cmp
adc
stos
orl
mov
pop
insl
xchg
rdpmc
mov
repz
jb
in
xchg
mov
cld
rorl
andb
ret
mov
jp
mov
stc
push
pop
aad
out
fnstcw
mov
mov
jge
addl
sbb
adcl
stos
pop
mov
lods
lret
test
ficompl
out
fstpt
jnp
mov
and
xchg
fdivs
movsb
pop
ja
ds
lahf
outsl
fstpl
pop
imul
push
rcrb
outsb
insl
xchg
loopne
das
xchg
push
imulb
and
jl
cwtl
shrd
fs
cwtl
dec
mov
and
mov
push
and
daa
data16
push
xchg
sub
shrb
out
es
pop
or
inc
push
cmp
push
inc
mov
popf
add
out
fwait
std
movsb
fsubl
je
jo
loope
pop
leave
sbb
and
popa
or
in
jle
inc
dec
cmpsl
jo
dec
dec
xor
push
fwait
test
xchg
movl
adc
outsl
adc
and
pop
sbb
cs
xchg
inc
jecxz
in
mov
sub
lret
in
test
push
xchg
adc
lea
in
mov
xchg
stos
popf
inc
lea
or
pop
jns
mov
cli
xchg
test
or
xchg
xor
int
ds
cmp
adc
mov
push
mov
dec
sarb
mov
repnz
inc
je
inc
pop
dec
ljmp
cmpb
scas
cmp
pop
pop
clc
rcrl
lods
ret
mov
cvtdq2ps
loope
inc
inc
cmp
and
xchg
je
push
dec
cmc
psrld
dec
rol
cmp
addr16
mov
push
add
stc
jmp
mov
cwtl
inc
jbe
lds
std
push
dec
xchg
xchg
jmp
pop
icebp
aaa
in
sub
daa
aam
mov
ja
es
fucompp
pop
and
cmpl
or
movsb
leave
daa
shll
lret
fbld
cmc
jecxz
fimull
mov
testl
jmp
jp
dec
std
cmpsl
jns
lods
cs
mov
pushf
sbb
push
fwait
into
jmp
js
mov
addr16
scas
jp
and
xchg
xchg
punpcklbw
lret
ja
xchg
outsl
add
dec
cmpsb
cmp
in
fldl
repnz
ds
into
dec
xor
outsl
jmp
cld
cld
sub
inc
repnz
popa
and
and
pop
mov
je
sahf
inc
or
cmp
mov
inc
repnz
int
xchg
sub
jmp
cli
lret
sub
xchg
pop
es
jge
test
mov
int
push
mov
faddp
gs
mov
ds
stos
popa
xchg
cmpsl
mov
sti
stos
jns
leave
sbb
pop
xor
mov
adc
sub
push
stc
arpl
adc
push
sub
cmp
and
pop
test
dec
jge
les
sub
leave
mov
das
jge
jbe
dec
push
ret
outsb
fists
cmp
int3
lahf
xor
or
rorl
add
shrb
mov
enter
jae
addr16
jb
xor
and
or
add
xchg
es
push
fnstcw
test
mov
push
adc
adc
cli
orb
pop
mov
sbb
cld
dec
dec
xchg
lods
add
loop
les
sub
xchg
lea
adc
or
mov
mov
pop
pop
clc
cmp
mov
jno
mov
push
xor
sbb
cwtl
or
ljmp
inc
push
adc
in
stos
addb
xor
clc
lds
pop
sbb
ja
push
cmp
jb
popa
push
in
addr16
inc
cs
cmc
popf
and
outsb
xor
push
out
lods
xchg
shrl
out
fbstp
add
repz
in
es
mov
xchg
dec
imul
and
addb
scas
clc
push
fs
xor
mov
stos
cmp
imul
xchg
dec
sti
fisubl
or
sbb
xchg
mov
test
cmp
lret
sub
or
int3
mov
repnz
mov
int3
mov
ljmp
pop
in
or
mov
inc
cld
pop
mov
jmp
sbb
aaa
add
sahf
jecxz
scas
push
popa
inc
lahf
push
mov
jmp
cmp
scas
mov
mov
mov
cld
lods
leave
aam
iret
testl
sbb
mov
pop
dec
mov
imul
icebp
and
ljmp
fimull
in
scas
xor
icebp
dec
push
inc
iret
jge
or
lods
js
sahf
jl
and
dec
cmpsb
mov
int3
addb
jle
cmpsb
cmc
push
repnz
inc
cmpps
ret
ds
mov
push
nop
push
mov
dec
repz
lea
jo
iret
mov
xor
mov
test
js
int3
add
shlb
xchg
iret
xor
add
mov
arpl
outsl
dec
push
push
ret
mov
and
fbstp
pop
shl
pop
out
xor
js
xchg
bound
aaa
int
pop
loopne
or
lret
ret
rclb
dec
add
jp
outsb
sub
stc
sub
inc
mov
call
jb
xor
adc
cmp
stos
and
loopne
ss
sbb
inc
sahf
sti
punpckhwd
sahf
orl
cmp
mov
adc
jae
bound
loope
or
leave
js
pop
fildll
mov
push
adc
lahf
xchg
xchg
jmp
cmpsl
ret
inc
hlt
push
call
dec
cmp
dec
ds
sti
jae
or
repnz
sbb
in
add
loope
xchg
rcrb
mov
cli
mov
popf
ja
roll
insb
inc
sub
or
xor
aad
mov
jmp
sbb
in
cld
lods
insl
push
xchg
dec
or
fs
iret
jbe
sub
and
fwait
push
fldt
adc
push
or
xchg
les
fimull
mov
xor
stos
mov
cmp
adc
in
arpl
popf
rol
ss
lret
fidivrs
pusha
add
dec
and
jecxz
les
mov
pop
push
jne
adc
xor
dec
in
dec
addr16
add
out
jbe
dec
or
sub
arpl
add
ret
add
lods
push
xor
into
push
imul
push
pop
cmp
dec
and
in
jns
add
mov
insl
mov
cld
loopne
lret
or
pusha
test
cs
pop
aad
dec
jge
pop
mov
xlat
sarl
mov
pop
fists
cmpsb
movsl
mov
mov
dec
enter
lds
insb
insb
mov
in
dec
ret
jns
sub
push
jns
push
cmp
insb
cld
dec
sbb
sub
movsl
stc
sbb
add
dec
fildll
push
push
mov
out
xchg
repnz
clc
or
xor
lods
push
push
call
popf
dec
cmp
push
mov
lcall
rol
imul
mov
adc
mov
cmp
inc
dec
int
xchg
or
mov
and
out
lea
push
mov
roll
inc
dec
in
jae
or
imul
xor
outsb
inc
in
pop
sub
push
dec
jns
call
ljmp
jle
xchg
in
push
out
lods
repnz
adc
test
imul
or
push
push
in
inc
push
mov
pop
jmp
xor
xchg
dec
sbbb
pop
cmp
add
mov
cmc
cmc
mov
dec
les
and
repz
scas
and
inc
stos
pop
ret
popf
xor
add
adc
cwtl
add
jae
push
testb
jge
inc
push
orb
out
mov
test
sub
xor
mov
add
orl
mov
cmp
dec
lret
xor
jmp
lods
ret
mov
fsub
add
or
pop
jmp
sti
adc
mov
inc
nop
mov
mov
test
cwtl
scas
xchg
jb
cmp
add
xchg
push
lret
js
aas
out
xchg
push
push
aaa
inc
ret
mov
xor
iret
pop
mov
hlt
es
outsl
out
roll
test
push
aam
int3
scas
call
into
insb
adc
adc
push
xor
mov
dec
jecxz
test
sbb
mov
xlat
addr16
jmp
scas
xor
ret
mov
outsl
mov
test
fldcw
das
lods
int
aad
pop
and
push
je
pop
and
lar
mov
mov
stos
add
cmp
xorl
dec
arpl
push
cltd
dec
pop
cmpsb
pop
sbb
and
mov
xor
sbb
cli
xchg
add
call
shrl
sub
fs
and
push
xor
sbb
adc
repnz
pop
push
add
sbb
pushf
mov
lods
in
adc
mov
sbb
cmpl
in
fnstcw
cld
jno
cltd
fstpt
sti
mov
pop
subb
outsb
cmp
sub
filds
xor
ljmp
adc
and
lock
pop
or
xchg
dec
mov
jo
pop
cld
mov
pop
push
stos
xor
adc
outsl
shlb
mov
or
adc
adc
mov
jle
jg
call
xchg
lea
fs
pushf
cmp
stos
rorl
cmp
xchg
push
xchg
xchg
sbb
or
iret
scas
stc
xchg
bound
mov
scas
or
and
adc
mov
pop
ffreep
outsl
jl
popa
dec
outsb
fcomi
xor
sbb
mov
pop
insl
pop
shl
cwtl
push
mov
orl
mov
adc
dec
pop
hlt
sub
addl
mov
xchg
mov
adc
xchg
in
and
cmpsb
jmp
push
jb
sub
pop
jns
xor
loope
das
arpl
adc
sbb
push
sbb
jecxz
cmp
addr16
stc
sub
push
imul
lods
sub
mov
pand
jb
imul
sub
mov
std
sbb
and
je
push
je
xchg
add
stc
stos
dec
mov
fnstsw
incl
out
inc
cwtl
mov
in
stos
outsl
or
ds
xor
push
push
mov
pop
xchg
bound
call
aam
leave
imul
mov
mov
icebp
mov
push
push
sbb
into
dec
lret
jg
add
mov
inc
jmp
push
in
xchg
lea
or
cld
sti
inc
je
inc
ds
js
js
adc
dec
int3
call
ds
sub
les
lahf
lods
jle
mov
push
lret
aaa
cs
out
adc
or
pop
push
and
mov
jp
adc
sub
out
dec
test
sub
jno
inc
cmpsb
or
push
xor
jae
aas
lahf
adc
sbb
and
inc
rcll
dec
xor
adc
pop
lcall
test
lods
mov
jb
repnz
push
stc
pop
pop
cmp
testl
xchg
and
imul
aaa
repz
dec
jl
dec
pusha
cltd
xor
or
inc
dec
sub
xchg
adc
test
pop
add
fs
lods
cmp
mov
inc
sbb
or
and
push
pushf
stc
cmp
imul
stc
mov
in
jmp
add
cmp
push
xchg
jno,pn
add
popf
int3
xchg
movsl
inc
or
and
jb
jnp
lods
xorl
mov
xor
out
dec
pmuludq
push
cmpb
ret
test
push
mov
push
sub
clc
lods
lret
mov
push
cltd
fbstp
test
or
rolb
cmc
sbb
add
jo
cmp
repz
pop
in
mov
adc
push
aam
stos
and
idivl
roll
mov
out
test
out
in
jno
push
cmp
adc
jg
pop
sbb
gs
mov
cli
daa
mov
mov
cmp
xchg
push
das
and
rorl
hlt
imul
mov
push
mov
hlt
bound
push
cli
push
push
cmc
mov
jne
mov
pop
adcb
ror
not
push
xor
sahf
dec
dec
lods
pop
popa
add
test
jb
cld
push
stc
mov
ljmp
test
ret
out
add
xor
sub
and
je
xchg
mov
add
or
ss
jb
fsubrs
mov
pop
movsl
lret
dec
mov
stc
nop
bound
lcall
sahf
repz
push
mov
clc
mov
fdivl
sahf
arpl
sbb
or
jecxz
sti
out
cmp
push
notl
dec
cmp
and
pop
jno
sub
cmp
xchg
enter
jecxz
dec
cli
ret
jecxz
inc
push
int3
imul
and
pop
addl
stc
out
pop
call
push
xchg
mov
cmp
scas
dec
pop
jg
xrelease
mov
lret
sub
and
dec
jp
enter
cmpxchg
fisubs
sahf
cmp
mov
out
icebp
xchg
mov
pop
fstl
mov
jmp
adc
cltd
shll
movsl
pop
iret
fwait
rcll
dec
push
mov
call
in
xchg
out
fists
outsl
mov
jne
pop
mov
xor
jno
dec
add
lret
outsb
sbb
jnp
add
inc
pop
hlt
mov
in
imul
frstor
sbb
mov
push
jmp
and
pop
mov
inc
sahf
daa
ficoml
push
push
push
stc
or
lods
xor
sub
jns
ja
arpl
divl
stc
mov
loop
jp
inc
and
movsl
sbb
and
ret
loop
or
cltd
and
ficomps
daa
or
xor
jae
pusha
or
push
inc
fsubl
sbb
ds
loop
out
psadbw
cmpsl
pop
out
nop
inc
daa
sbb
dec
sub
loopne
sbb
pushf
cmp
mov
aad
shl
sbb
fidivrl
scas
jb
int3
xchg
adc
ret
jbe
pop
push
cmpsb
xchg
les
cltd
mov
sub
xlat
sub
mov
dec
pop
mulb
and
push
popa
inc
sahf
cli
test
xchg
mov
add
cltd
mov
in
test
sub
mov
inc
clc
inc
out
cmp
cmp
popa
and
adc
xor
pushf
xchg
add
loop
into
mov
cli
xchg
add
nop
sbb
movsb
scas
add
test
sbb
pop
pop
xchg
frstor
addr16
arpl
movsl
pop
mov
xchg
jg
mov
cmpsb
jns
inc
mov
out
inc
pop
repnz
mov
adc
mov
add
sarl
push
jne
cmp
cltd
rcrb
out
add
hlt
stos
iret
cmp
into
cmp
mov
ficoml
mov
jno
test
lock
std
add
pop
push
push
cmp
mov
cmc
add
insl
pop
cmovnp
out
shlb
jle
iret
mov
stos
rorl
cltd
fstps
mov
lcall
shrl
and
movsb
arpl
mov
addb
test
repz
mov
cmp
pop
or
bound
dec
or
out
movsb
popf
mov
adc
push
push
pop
push
mov
mov
pop
or
jle
dec
std
clc
cld
scas
outsb
xlat
repnz
sub
jl
cmp
push
mov
aaa
adc
jp
sub
addr16
or
add
fwait
cltd
stos
push
out
adc
into
mov
mov
mov
js
loope
inc
push
or
mov
xor
sub
mov
mov
push
stos
add
out
mov
in
int3
testb
and
sub
push
push
cmp
mov
jecxz
test
out
mov
stos
sub
clc
dec
movsl
add
xor
add
or
lcall
cltd
into
dec
xchg
je
add
and
push
in
outsb
xor
cld
repz
adc
ja
subl
dec
bound
mov
add
scas
mov
add
pop
push
hlt
push
xchg
cmp
divl
add
mov
jb
add
xchg
sub
xor
loop
or
mov
inc
call
pop
push
test
xor
and
add
mov
rorl
icebp
test
xchg
addb
cmp
loop
ja
insl
addb
mov
aam
mov
and
cld
mov
sub
cmp
dec
mov
popf
pop
ret
add
js
fstpl
pop
mov
inc
into
data16
add
repz
cmpsl
inc
dec
lock
insl
rolb
jp
stc
pop
lods
faddl
inc
pop
pushf
xor
jo
add
pusha
push
cmp
cli
cmp
ja
sbb
xchg
pusha
and
mov
adc
or
out
fldl
repz
dec
in
loop
mov
inc
xchg
out
jmp
dec
lds
or
mov
lcall
sahf
inc
inc
scas
pop
int3
popf
sbb
das
xchg
iret
sbb
pop
psrlw
adc
cld
fcomip
xor
pop
shrl
mov
popa
push
lock
daa
xor
dec
mov
xor
jle
mov
add
push
stc
rcr
das
ficoms
fmuls
vdivss
mov
sbb
enter
mov
xor
fs
fisubs
jns
jecxz
lahf
scas
insb
xor
push
jo
pop
ret
decl
jle
test
pop
out
data16
pop
push
ds
cmp
std
clc
into
test
pop
adc
inc
aaa
mov
add
out
inc
pop
ret
cmc
push
loopne
das
push
dec
aas
leave
ljmp
push
xor
xchg
stos
orb
dec
mov
pop
and
or
shl
pop
adc
or
sbb
xchg
jbe
outsb
pop
xchg
mov
adc
mov
movsb
add
xchg
loope
sbb
mov
jmp
xchg
inc
imul
sub
cmp
xchg
out
dec
in
addr16
jb
mov
push
mov
push
mov
popf
cmp
fwait
lock
test
bound
cmp
sbb
pop
jns
lret
mov
inc
and
bound
orb
adc
dec
mov
daa
pop
pop
mov
fs
fistl
insb
cld
xor
push
adc
out
mov
subl
popf
sbb
gs
loopne
sbb
lea
jmp
push
mov
mov
dec
pushf
and
or
xchg
xchg
cltd
xor
xorl
hlt
xchg
lods
sbb
js
cld
fucomi
jp
jnp
aas
sub
jne
mov
adc
in
pop
jge
cmp
jecxz
mov
cwtl
cld
cmc
fadd
mov
hlt
loopne
dec
jae
mov
jmp
fsubrs
push
in
xchg
fsubrl
sub
mov
adc
adc
push
or
das
adcb
push
cmp
xchg
jle
stos
push
pop
hlt
push
repnz
rcrb
js
sub
dec
lock
sbb
out
xor
shl
mov
or
mov
sub
ret
or
ljmp
push
cs
cwtl
xchg
outsb
cmp
mov
sbb
cmpb
out
cmpsb
cltd
mov
aaa
fs
sbb
int3
cmp
pop
dec
jne
add
out
xor
adc
ds
inc
div
ljmp
out
lods
inc
jle
mov
mov
mov
call
mov
addl
pop
mov
enter
xchg
add
int3
or
insb
adc
stc
or
xchg
sbb
adc
into
ss
or
pop
push
int3
mov
inc
leave
or
fstl
add
xchg
cld
push
in
das
mov
shrb
jge
cmp
pusha
dec
mov
adc
sbb
cwtl
adc
std
mov
jbe
inc
sbb
xchg
pop
mov
cmpl
xchg
sub
jno
mov
out
dec
dec
sub
xor
xchg
pop
add
jl
nop
sarb
add
in
sub
sbb
jp
mov
lret
aam
std
ds
sub
inc
or
xor
sbbb
sbb
movb
sahf
adcb
mov
push
fsubs
pop
add
idivb
xor
outsl
sbb
pop
cld
or
xchg
adc
adc
stc
jmp
movsb
rolb
int3
inc
sti
adc
adc
data16
out
iret
jb
sahf
int
aam
and
sar
mov
ljmp
pop
cmp
mov
pop
js
leave
lods
inc
jmp
pop
jmp
sar
push
das
adc
sub
jno
add
shrb
mov
mov
jns,pt
lahf
and
mov
lahf
xor
repz
add
inc
push
lahf
rorl
sbb
pusha
lret
movsl
arpl
jnp
push
push
push
dec
mov
adc
or
mov
xorb
dec
loopne
jo
inc
jl
cmp
sbb
add
fcomp
popa
in
rcrb
cmp
test
push
arpl
adc
jmp
fidivs
sbb
dec
cmp
xchg
cmp
push
mov
repz
xor
mov
inc
cmp
mov
out
xchg
dec
data16
jp
or
xchg
stc
cltd
xor
and
mov
stc
push
fidivrs
add
sub
lahf
shlb
ss
iret
aas
add
pop
notl
das
dec
cs
add
dec
lea
add
mov
fildl
inc
imul
pop
imul
and
movsl
stc
sti
mov
mov
and
or
pop
shl
push
cld
mov
cs
push
lcall
adc
mov
out
je
pop
push
mul
sar
mov
cmpsb
hlt
lods
lcall
rcrb
dec
mov
sarb
fs
mov
cwtl
inc
packsswb
cmp
test
inc
scas
mov
ss
mov
out
xchg
orl
out
push
cwtl
jle
hlt
add
addl
outsl
shrb
hlt
into
xor
or
aaa
js
imul
ss
jne
fstpl
pop
mov
adc
into
es
ror
jne
sbb
jl
push
and
dec
xlat
push
mov
into
scas
pop
push
push
mov
mov
popf
mov
inc
out
add
out
pop
add
push
jle
push
lret
xor
cmp
cwtl
mov
int3
int3
mov
fisttpll
cs
cmp
cwtl
mov
mov
push
loope
push
cmp
fsub
fcmovu
cmc
out
sub
insl
jo
jno
push
lds
popa
mov
cmp
clc
aaa
test
ret
stc
or
mov
jns
pop
jno
push
daa
mov
push
repnz
js
orb
lret
leave
and
jns
push
mov
fadds
rcl
mov
and
shlb
pop
xchg
pop
inc
popf
push
lds
inc
mov
mov
pusha
shrl
ja
xor
aam
stos
lock
xchg
xlat
or
outsl
xchg
addr16
xor
sbb
pop
mov
mov
dec
mov
cs
insb
mov
fimuls
nop
scas
adc
cwtl
movsl
ss
xor
test
negl
push
mov
pop
pop
jg
test
fstpl
mov
inc
xor
inc
adc
cmp
cs
sub
and
sahf
popa
imul
loopne
pop
and
mov
and
adc
jno
jle
cmp
fldenv
imul
aam
lods
mov
pop
jbe
and
das
add
rcrb
sbb
movsl
push
jno
aam
pusha
pop
int3
push
insb
mov
jno
push
lods
push
shrb
test
test
pop
jb
mov
test
js
insb
sbb
adc
sti
std
loopne
mov
test
adc
clc
dec
sahf
push
fldl
ljmp
jp
mov
pop
sub
push
jnp
shlb
push
adc
cmpsb
cmp
and
pushf
out
jns
mov
mov
push
mov
push
jb
andb
stos
inc
maxps
stos
loope
fwait
dec
push
aam
lods
enter
sub
xchg
ljmp
leave
inc
in
sbb
pop
arpl
popa
fwait
xchg
dec
aaa
mov
test
pop
push
mov
stos
sub
in
or
pushf
jmp
sbb
mov
jne
out
push
jo
scas
push
pop
push
out
loope
fidivrs
into
mov
xchg
sub
xchg
and
aaa
adc
lock
incl
add
jb
xchg
or
icebp
fwait
add
mov
mov
cmp
ss
pop
mov
les
inc
cmpsb
mov
shr
mov
sub
jge
fsubrl
scas
sahf
imul
inc
sbb
ds
mov
mov
sub
das
out
pop
jbe
les
xor
imul
cld
push
cmp
imul
mov
push
hlt
xchg
fisttps
in
loop
repnz
mov
cwtl
cld
loopne
mov
sti
int
pop
scas
sbb
fwait
push
sbb
test
sbb
pop
cmp
mov
data16
sbb
cmp
imul
aas
lea
imul
sbb
mov
mov
iret
int3
in
cmp
shlb
cmp
repz
shlb
push
loopne
cmp
imul
push
gs
add
jb
movsl
jl
call
mov
xor
ret
addr16
pop
out
xchg
cwtl
pop
xchg
les
mov
ror
add
pop
cli
addb
insb
xchg
mov
cmp
and
inc
les
jmp
test
pop
xor
mov
xor
xor
mov
test
inc
loope
orb
sahf
jmp
sub
pop
adc
sub
test
add
mov
pop
fs
or
adc
xchg
mull
stc
push
cli
mov
mov
fisttpl
std
test
adc
sti
sahf
pop
inc
notb
pcmpeqb
push
ja
scas
add
je
mov
ret
aas
jecxz
mov
popf
inc
es
fstpl
fcomps
cmpsb
movl
loope
test
pop
out
les
pop
fisttps
bsr
leave
imul
push
mov
icebp
jbe
sbbl
movsb
adc
sahf
xor
movsb
xchg
pop
jb
scas
xchg
adc
inc
xchg
addr16
pushf
inc
mov
jle
mov
bnd
fucomip
mov
adc
mov
test
or
push
xor
push
sbb
jae
xorl
imul
leave
sti
sub
mov
repz
mov
mov
cmp
imul
mov
lock
mov
outsl
mov
cmp
mov
ljmp
ficomps
mov
inc
sbb
and
cmp
call
scas
inc
mov
into
inc
mov
jge
push
mov
push
adc
in
xchg
xchg
fadd
ret
enter
sub
push
call
aam
inc
dec
and
aas
js
dec
mov
stc
and
lahf
jno
sbb
aad
dec
clc
shll
jns
add
addl
and
adc
cmp
sarb
push
and
jbe
dec
in
xor
xchg
call
push
pop
test
adc
rorb
ljmp
in
fsts
mov
out
das
xchg
test
jle
jbe
ret
mov
out
out
xlat
push
std
data16
sbb
lahf
and
in
mov
xor
ret
push
lods
repz
dec
imul
jecxz
je
inc
and
jle
add
push
sbb
dec
call
or
mov
cwtl
and
push
jb
movsb
xchg
inc
push
lret
dec
test
or
mov
cmp
test
and
outsb
std
push
adc
xchg
jo
push
es
push
jb
in
xchg
xchg
ret
out
push
push
sub
arpl
je
je
test
repz
std
xor
push
shl
add
jno
mov
jecxz
daa
xor
negl
dec
cmp
enter
mov
loopne
mov
fdivs
cld
aad
jecxz
sti
leave
jns
and
popa
sti
lods
jg
mov
and
rorl
rcrb
push
add
rorb
mov
xchg
jl
sti
jp
movsl
repz
or
xor
xchg
push
xchg
stc
pusha
imul
filds
int3
imull
mov
enter
je
mov
bound
xchg
shll
into
add
je,pt
dec
pop
ja
mov
cmp
dec
jae
push
aaa
push
pop
repz
jnp
out
in
adc
pop
adc
rol
cmp
in
sahf
xor
xchg
mov
sbb
outsb
lea
int
mov
aad
lea
scas
dec
popf
je
mov
add
ds
and
dec
pop
jb
mov
in
mov
mov
xor
arpl
inc
popa
in
es
adc
bound
cmp
packuswb
fistpl
fimull
add
cmp
shl
loopne
stc
cld
inc
and
ret
push
fsubl
stc
repz
add
xchg
push
cld
jbe
cmp
or
xor
pusha
jo
push
pop
xchg
pop
cwtl
lea
fidivs
scas
push
dec
stos
in
and
pop
push
cmp
mov
xchg
test
les
pop
aad
outsl
mov
jmp
cmc
enter
jns
aam
jo
hlt
shl
and
ret
dec
add
and
mov
inc
jg
scas
jge
ja
or
repz
jle
ja
int3
xchg
loope
cli
and
dec
pushf
mov
lods
or
addr16
dec
in
and
pop
sbb
add
mov
sub
imul
inc
stos
lds
enter
xor
cwtl
sbb
inc
mov
push
cli
cmpsb
pop
jno
rcll
mov
mov
push
jne
xlat
and
sub
retw
stos
in
in
mov
nop
xchg
in
mov
lcall
inc
add
push
lahf
ss
fdivp
pop
in
xchg
repnz
shl
add
repz
sub
enter
sbb
test
inc
cmpsl
call
mov
xchg
ret
jnp
dec
shlb
add
mov
insl
lock
sbbl
dec
xchg
dec
sti
or
imul
mov
repz
xor
enter
andl
es
xchg
xchg
jo
shll
loope
mov
or
notl
inc
xchg
xor
rorb
daa
push
add
or
icebp
cmp
pushf
and
jne
pop
sbb
xchg
xor
add
aas
fs
mov
aas
adc
push
sbb
adc
aam
je
int
mov
scas
mov
lret
int3
push
jecxz
jo
cmp
nop
xlat
popf
xchg
inc
sti
sub
stos
jno
jp
jae
aaa
sahf
leave
and
mov
or
sbb
jo
mov
push
cmp
leave
divl
mov
es
enter
cmpsl
jmp
neg
out
clc
mov
sub
mov
push
cs
pop
cmp
imul
lock
mov
and
sub
test
mov
mov
sub
xor
mov
dec
dec
mov
mov
mov
out
cld
dec
rclb
rorb
mov
push
pop
outsl
jne
fsubrl
mov
outsb
sbb
adc
mov
imul
sahf
insb
in
cs
jbe
fs
pop
xchg
mov
das
adc
push
inc
and
inc
aad
stc
cmpsl
xchg
xor
in
aad
pop
int
aam
icebp
int
nop
into
ds
shll
jne
cs
cmp
rorb
mov
cmp
jmp
jmp
push
in
push
adc
into
aam
pop
push
cmp
mov
outsb
pushf
ret
mov
jp
jae
mov
mov
popa
xchg
mov
inc
mov
enter
cmp
dec
xorb
pop
loopne
dec
dec
sbb
mov
and
das
dec
add
cwtl
mov
stos
das
sbb
cmp
test
xchg
mov
mov
jmp
dec
xor
adc
adc
lret
adc
in
xor
xchg
jp
leave
xchg
fwait
mov
jb
inc
jb
sbb
ret
cmp
daa
imul
daa
lods
test
popa
in
andl
sbb
and
in
add
mov
call
hlt
jnp
scas
jmp
cmp
fisttpll
js
ret
or
std
push
out
add
cmp
mov
sbb
xor
lcall
pop
xchg
mov
testb
adc
pop
inc
jle
jl
add
jb
jae
out
adcb
loop
rolb
push
je
ljmp
jecxz
in
adc
ja
adc
ljmp
pop
ret
rolb
jno
sahf
adc
inc
xlat
out
cld
aam
push
mov
inc
or
xor
xchg
pop
clc
mov
pop
and
inc
scas
cli
and
lcall
xchg
xor
and
loope
imul
pop
xor
push
aam
cmp
icebp
lea
cmpsl
sbb
jecxz
sbb
loope
sub
pop
pop
inc
aas
jle
ffreep
clc
inc
les
aad
lock
daa
sti
push
xlat
inc
aaa
jge
pusha
test
jb
xchg
or
bound
inc
mov
popa
jg
xchg
mov
mov
and
xor
fisubrl
jne
bound
inc
popa
movsl
sub
xchg
dec
das
rclb
popf
xchg
fdivrl
mov
jb
dec
mov
or
test
lods
in
sbb
inc
sti
mov
adc
inc
or
sbb
jl
pop
push
jb
jmp
pop
xor
or
mov
or
data16
add
mov
cmp
jmp
dec
enter
ja
fcmovnbe
out
xor
inc
fidivl
sub
pop
test
shrb
test
inc
fisttpl
pop
jg
push
mov
and
mov
imul
push
pushf
mov
repnz
scas
int
fsubrs
fistl
push
mov
push
mov
jb
xchg
xor
aam
lret
in
adc
call
into
mov
pop
adc
add
insl
mov
sbb
dec
lock
sahf
push
adc
sbb
and
cmc
pop
mov
mov
adc
inc
ret
inc
cmp
push
aad
outsl
jle
sub
lods
xchg
push
ss
xchg
lods
xlat
xlat
call
xchg
and
ja
das
ret
imul
mov
int3
lcall
daa
cs
test
loope,pt
cwtl
rcrb
hlt
jge
cmp
iret
outsl
addl
aad
adc
outsb
add
jmp
andl
xchg
lahf
push
stos
push
popa
insb
mov
ja
jb
xor
mov
add
mov
loope
incl
ja
in
aas
lods
dec
pop
in
inc
mov
dec
inc
xor
adc
sub
cltd
jle
adc
test
or
loop
push
pop
fidivrs
in
add
dec
push
xchg
icebp
mov
jge
dec
dec
lods
pushl
int
push
add
push
ja
xor
test
fwait
sarb
out
pop
iret
loope
repz
or
mov
aas
mov
sub
jo
pop
out
shl
pop
daa
jg
popa
icebp
mov
dec
ljmp
das
cmp
xchg
rcr
xor
jne
jl
inc
mov
push
sbb
out
push
stc
outsl
add
xor
sub
xor
movsl
mov
mov
add
mov
inc
arpl
push
pop
rclb
and
pop
fsub
xchg
sti
jno
lahf
test
in
cmp
sbb
ds
daa
inc
xor
icebp
and
cmp
jmp
add
iret
or
loope
adc
lcall
nop
in
in
mov
mov
int3
pop
daa
sbb
xchg
out
push
dec
fcmovnu
out
psubb
cmc
add
push
sub
xchg
rcll
cli
xchg
pop
test
stos
loope
andb
xchg
push
sbb
bound
push
in
dec
fdiv
jno
and
das
dec
mov
fidivrs
jo
fldl
mov
out
xlat
sbb
xor
xor
push
sbb
dec
jne
push
out
cmp
mov
mov
lods
inc
cmpsl
pop
push
inc
cmp
icebp
ja
mov
xchg
mov
xchg
scas
insl
pop
mov
test
jecxz
lea
dec
mov
or
daa
jg
mov
and
sbb
ficomps
imul
gs
mov
push
xor
mov
xor
testl
mov
stos
dec
idivb
fcoml
fs
dec
jle
mov
adc
and
mov
dec
jg
fcompl
arpl
xchg
loop
mov
in
sub
das
cmp
xor
std
add
mov
mov
and
mov
mov
xchg
test
mov
mov
mov
or
insb
xchg
cmp
push
mov
sbb
fistpl
xchg
leave
jns
mov
inc
lock
adc
cwtl
and
ret
cmp
add
jnp
mov
pop
xor
js
xor
pop
jl
test
leave
mov
jbe
out
out
mov
push
push
pop
out
mov
jl
jb
inc
mov
sbb
data16
arpl
out
push
movsb
push
jl
imul
lds
aaa
sti
jb
push
insb
mov
xor
inc
pop
test
sub
inc
and
jae
xor
and
lock
push
adc
mov
repz
cmpsl
mov
int
iret
pop
fdivl
stos
sbb
sub
addl
adc
test
cmp
nop
sbb
out
mov
pop
aam
movsl
in
lret
xchg
int3
dec
cs
sti
inc
jmp
enter
jecxz
push
call
mov
nop
mov
jmp
dec
xor
mov
outsl
pop
addl
sti
int
mov
mov
loopne
pop
loopne
loop
lds
mov
sbb
cltd
mov
pavgw
jno
xchg
sbbb
dec
orl
lds
inc
movzwl
adc
out
aaa
pusha
jns
xchg
fs
mov
loope
icebp
js
andb
push
dec
push
mov
imul
cmp
push
stc
aaa
lea
cltd
addb
sub
scas
mov
jnp
adc
fmull
xor
mov
dec
adc
xchg
xchg
or
dec
push
mov
loopne
inc
ja
jne
sbb
lods
push
inc
cli
test
push
addr16
dec
sub
fisubl
pop
and
mov
or
dec
mov
or
dec
lods
movsl
loope
les
mov
jns
mov
push
pop
repz
push
push
mov
xor
cwtl
ret
lock
inc
ljmp
fnstcw
mov
test
jg
push
or
inc
cwtl
mov
adc
push
mov
shlb
mov
aaa
push
orb
test
roll
es
cmp
mov
jge
xchg
sub
lds
in
repz
pop
stc
loopne
push
push
addb
lret
test
dec
mov
test
call
cmp
cmp
lcall
xor
je
cmc
into
jno
inc
jge
lods
push
sbb
lods
cmp
mov
lods
pop
popa
lcall
outsl
loopne
jns
add
in
xchg
xor
cli
adc
mov
dec
xchg
push
out
into
mov
js
mov
pop
pop
inc
cmp
shl
pop
scas
inc
imul
sub
pop
cli
add
jns
xchg
jmp
mov
sub
dec
dec
ret
aas
es
dec
icebp
ficompl
sti
dec
cmp
pop
les
mov
in
xor
js
idivb
sub
sahf
addr16
lea
cmpsb
fadds
inc
into
xchg
xchg
xor
jmp
sub
sub
adc
popl
pop
dec
incl
xchg
mov
sahf
push
mov
testl
es
out
mov
repnz
and
push
push
sub
inc
mov
push
dec
add
push
loope
inc
gs
daa
xchg
mov
fldl
es
stos
ror
call
scas
std
out
shrb
jne
faddl
xchg
xchg
sbb
sbb
lahf
sahf
mov
push
sub
and
insl
inc
mov
mov
push
div
lods
scas
ljmp
mov
cmp
iret
push
bound
mov
mov
adc
or
fs
cmp
iret
and
std
jne
jbe
movsb
push
add
mov
clc
test
xchg
xchg
mov
pop
adc
dec
mov
addb
or
cmpsb
lods
pusha
stos
scas
mov
jbe
scas
mov
mov
aam
cmp
and
push
ljmp
or
fldt
loopne
push
dec
icebp
dec
adc
std
push
je
push
and
xchg
mov
mov
cmp
mov
scas
arpl
pop
andb
loope
jb
push
and
xchg
xor
jo
push
nop
cmpsl
xlat
inc
popa
pop
into
pop
inc
push
orl
fcom
xor
loopne
cli
pop
cmp
js
adc
mov
rcr
xlat
push
stc
xor
int3
dec
rorl
clc
subl
pusha
pop
adc
mov
and
out
popf
inc
cmp
push
push
shlb
shll
jo
and
lock
addl
lods
xchg
dec
xor
divl
test
arpl
ds
movl
jecxz
lret
mov
out
sbb
jecxz
test
cmp
enter
push
insl
inc
push
lea
cmpsb
push
cmc
pop
cli
push
lea
sbb
lea
in
mov
ja
adc
aaa
fdivrs
pop
test
rclb
sub
adc
xor
jmp
pop
sahf
out
mov
sti
repnz
inc
sub
fisttps
cmp
jne
ds
into
xchg
sbb
and
or
cmp
inc
add
xchg
test
out
in
enter
sub
sub
inc
loop
dec
push
loope
fistl
jle
ljmp
mov
setno
popa
cltd
out
popa
sbb
into
sub
xor
and
push
mov
add
aam
popf
out
outsb
mov
stos
into
insl
push
das
orl
pushf
stos
lods
mov
in
pop
lock
sub
or
ror
int
mov
or
mov
notl
popa
fsubrl
enter
mov
sbb
fdivr
pop
imul
pop
mov
movntq
js
adcb
or
lahf
orl
dec
dec
fdivrs
mov
mov
xchg
push
aad
and
jmp
add
adc
dec
addr16
test
dec
loope
out
dec
pop
repz
popa
and
sub
test
repz
outsb
pushf
adc
addb
push
jg
pop
mov
jae
rcll
xor
jno
test
aam
lea
mov
dec
and
das
pop
jb
movsl
adc
mov
popa
add
mov
pop
and
pop
imul
in
adcb
outsl
popa
in
pop
lds
add
gs
lods
lret
xor
sbb
mov
loope
push
jae
in
adc
mov
push
mov
adc
ret
xrstors
pop
mov
xlat
sbb
add
sub
lcall
std
addb
mov
sub
cmc
cmpsl
dec
cmpsb
jae
loopne
or
pop
call
mov
inc
xchg
inc
int3
mov
push
sbb
imul
xchg
xchg
xchg
cmp
sbb
jae
mov
int3
inc
call
pushf
mov
in
xchg
and
mov
stos
mov
mov
fwait
sahf
pop
jge
and
jb,pt
rcll
incb
je
jb
aam
sbb
or
mov
jmp
sub
mov
and
stos
test
aas
dec
fstp
cld
enter
push
sbb
sbb
jnp
or
mov
adc
test
lds
sub
jno
in
xor
outsl
and
loop
push
addr16
mov
mov
test
rcrb
lods
jl
push
rol
addr16
lods
xchg
je
cmpsl
jno
jge
jecxz
push
stos
push
pop
sbb
push
lea
enter
mov
inc
adc
fisttps
data16
pop
imul
mov
or
movsl
cmpsl
repnz
lahf
push
dec
aad
pushf
inc
and
lea
xchg
aas
test
test
or
pushf
sub
popf
or
mov
and
add
push
cli
mov
adc
sub
jno
out
push
push
das
mov
and
mov
ja
pop
fsubr
jo
push
and
fisttps
pop
or
lods
sbb
scas
push
scas
sub
mov
sbb
pop
pop
xorb
int3
cli
adc
jo
xchg
mov
cwtl
fldenv
addb
imul
es
sub
ret
add
jne
cmp
mov
dec
bound
mov
lds
adc
mov
rolb
into
gs
inc
mov
dec
pop
popf
xchg
mov
cli
pop
or
dec
mov
fmull
nop
in
push
push
lds
or
mov
lahf
in
cmpb
repz
mov
sahf
hlt
adc
daa
les
loopne
aad
aam
testl
out
out
pop
movsl
ja
addl
sub
hlt
pop
push
push
xor
cmp
popf
gs
pop
xchg
jno
push
mov
sub
es
pusha
arpl
and
adc
xchg
mov
xlat
into
in
push
dec
data16
xchg
sub
pop
out
mov
mov
pop
dec
loop
push
inc
and
jmp
pop
push
scas
and
mov
sti
pop
movsl
pop
dec
sub
jp
sbb
xor
in
cmpl
cmp
test
sub
shr
add
cmp
mov
ljmp
lret
arpl
je
shll
mov
push
sub
mov
lods
xchg
and
mov
pop
and
lahf
sbb
into
cmp
jns
es
leave
test
mov
lahf
pop
pusha
shll
xchg
sub
popa
loop
xchg
loop
ffreep
inc
subl
lods
push
sarb
jbe
sbb
je
data16
out
lds
dec
xchg
in
es
insl
data16
int3
gs
outsl
ret
aaa
mov
cli
sti
adc
pop
dec
and
and
jne
jnp
xorb
cmp
mov
push
xor
lods
scas
lret
push
sub
adc
popf
add
or
call
pushf
loopne
or
mov
idivb
inc
popf
inc
jb
dec
movsb
pop
sbb
int3
sub
jno
sub
jge
cld
fdiv
lcall
test
in
sti
outsb
inc
push
jmp
sub
aam
push
mov
cmpsb
and
shll
nop
cmpsl
inc
fs
aam
sub
cmp
nop
sub
cltd
mov
add
into
adc
stos
and
cmp
jbe
je
jp
cli
mov
and
sbb
dec
dec
or
cmpsl
rcrb
xchg
out
int
mov
or
int
jnp
and
jmp
push
insl
lret
push
fistpll
push
xchg
and
add
popa
mov
lea
dec
and
inc
push
mov
testl
fwait
js
mov
push
sbb
push
inc
out
pushf
enter
dec
test
inc
mov
dec
or
pop
pop
iret
sub
mov
adc
sub
test
mov
clc
push
xor
push
mov
fcoml
neg
cmp
lahf
movsl
stos
in
arpl
rorl
dec
das
imul
orl
insl
mov
xchg
mov
inc
cmp
aad
sbb
cmp
incl
cmp
fisubs
sub
lret
sub
and
daa
cs
add
sbb
mov
add
sub
int3
ja
insl
jp
sbb
jg
lret
mov
test
xor
mov
lods
aad
jmp
pop
mov
jns
cmp
push
dec
incb
mov
fnsave
scas
loope
call
scas
mov
cmp
xor
or
js
rcrl
or
loop
add
push
add
movsb
mov
pop
fmuls
in
repnz
dec
jl
or
loopne
push
xor
mov
dec
dec
rcl
xor
push
jl
adc
loopne
sub
mov
push
test
in
mov
jne
jp
pop
pop
xchg
xchg
push
inc
pop
adc
xor
js
sbb
stos
pusha
aaa
repnz
push
mov
sub
push
mov
push
adc
inc
adc
in
fldcw
and
lods
add
mov
iret
outsl
inc
push
es
lcall
jp
add
ss
hlt
xor
push
inc
in
movsl
mov
sbb
outsb
mov
and
js
insb
loope
jp
or
js
jg
push
cmp
mov
js
pusha
outsb
stos
pop
dec
in
push
push
es
fstpt
mov
push
scas
popa
cmpsl
mov
fldlg2
cmp
xchg
rcrb
repnz
adc
jg
bsr
inc
pop
pop
js
sub
xchg
jmp
call
arpl
sbb
imul
xor
mov
cmp
js
ret
xor
add
stc
cltd
das
dec
fists
xor
and
mov
cmp
fwait
in
mov
outsl
rcrl
out
cli
and
mov
pop
mov
adc
sbb
pusha
daa
popa
arpl
and
ret
imul
cmp
push
dec
arpl
lods
or
fnstsw
ficompl
stos
or
out
or
and
mov
and
cmc
mov
xchg
lods
xlat
inc
daa
sti
ljmp
imul
xchg
lods
dec
xchg
push
dec
push
pusha
cmp
mov
cli
scas
movsb
xorl
out
push
mov
dec
and
jae
and
add
icebp
aad
pop
rcrb
loopne
and
js
jg
adc
pop
stc
push
jp
xor
enter
jo
in
loop
and
pop
cmc
es
mov
add
mov
pop
mov
ret
nop
lahf
addr16
cli
js
add
nop
mov
push
jmp
popf
or
lret
stos
fisubs
ss
dec
inc
or
lcall
mov
cmp
adc
and
mov
ret
sub
jmp
mov
lds
pop
leave
and
pop
and
mov
pop
xchg
xchg
xchg
jmp
pop
or
cmp
dec
rorl
mov
cmpsl
call
sub
pop
mov
movsb
jnp
out
dec
fs
fs
in
cli
addl
in
cmc
pop
stos
es
dec
call
cld
xor
mov
xor
test
std
xor
enter
xor
mov
scas
scas
insb
xorb
imul
dec
loop
inc
pop
push
push
lcall
adc
and
xlat
cwtl
daa
stc
dec
js
push
jo
fcmovu
pop
lahf
leave
aam
mov
fisttpll
ret
ljmp
repz
mov
or
pop
push
mov
fs
das
lds
scas
inc
sbb
sub
xchg
and
das
add
clc
iret
outsb
cli
mov
or
dec
xchg
addb
je
repz
xor
outsl
daa
fwait
popl
insb
xlat
filds
sbb
test
bnd
popa
aam
add
lcall
or
mov
icebp
mov
mov
lods
punpckhwd
dec
aam
or
jg
push
push
repz
je
mov
mov
or
jl
clc
or
and
outsb
inc
sbb
xor
mov
stos
faddl
sbb
loope
sbb
sbb
or
add
adc
lcall
jo
push
add
into
sub
cli
shrb
mov
mov
mov
xor
cwtl
jge
js
rcll
jmp
insl
add
mov
dec
xchg
mov
sahf
xor
push
fs
mov
cmp
dec
push
movswl
addr16
mov
push
js
jnp
popf
mov
leave
mov
nop
fs
xchg
daa
mov
jge
mov
mov
cmp
addl
cmp
fldcw
mov
inc
push
inc
lretw
jnp
scas
mov
pop
dec
pop
mov
bnd
rcr
pslld
movsl
testb
mov
inc
xchg
mov
or
clc
mov
sbb
adc
sub
cmp
out
stc
fmuls
or
jl,pn
mov
cmp
lret
inc
out
mov
les
cmp
sbb
int
jle
outsl
sub
rclb
jae
fmulp
out
inc
je
inc
fmuls
in
pop
mov
pop
rol
mov
xchg
pop
nop
push
fidivl
and
lea
imul
int
mov
cld
and
xorb
stos
loopne
cmp
inc
scas
mov
adc
push
sub
and
push
mov
pop
xchg
mov
or
pop
cmpsb
or
pop
jo
aas
mov
adc
ret
bound
repz
dec
sbb
sahf
outsl
or
pop
push
popa
or
cmp
icebp
push
sahf
xor
andb
sub
call
rcll
push
adc
test
mov
mov
jne,pt
ds
int3
test
dec
and
call
ret
lock
pop
mov
lcall
sub
or
mov
lods
xchg
and
ret
popa
in
lret
or
ret
cli
dec
ret
or
dec
xor
dec
cmpsb
into
aaa
dec
clc
cmpsb
aaa
mov
ss
mov
jp
out
push
fwait
call
add
xor
mov
shl
hlt
mov
mov
pop
xchg
sbb
xor
rcr
push
mov
jne
lods
xchg
sub
cmpsl
scas
je
mov
jnp
loope
jae
outsb
outsl
in
or
loopne
rorl
xor
push
fisubs
lahf
and
mov
jecxz
out
push
inc
dec
dec
sub
out
cmp
in
ficomps
inc
xchg
imul
inc
negb
ds
mov
xor
shrl
dec
hlt
sbb
jne
ret
fcmovnb
rcrb
add
movsl
aam
loope
mov
pop
pushf
jae
mov
dec
adc
je
dec
lock
mov
movsl
push
fisubl
xchg
pop
cmpsl
dec
fistl
dec
push
dec
out
fs
mov
push
or
xchg
xchg
xchg
movsl
xor
dec
daa
fisubrs
loope
sbb
push
jns
pop
add
push
xor
dec
adc
jmp
clc
data16
cmp
jle
inc
lods
add
push
aaa
jae
es
xchg
rorb
mov
test
push
cmpxchg
dec
aas
andl
inc
ds
push
rcl
mov
test
repz
jnp
pop
sub
ljmp
sarb
mov
insb
adc
cli
call
enter
pop
out
or
loope
inc
add
and
inc
cmp
xchg
and
xlat
sub
inc
fcoms
and
cld
push
sub
es
scas
xchg
mov
pop
shl
aaa
pop
add
cmp
mov
insl
pop
mov
xchg
cli
stos
fistpl
inc
sbb
int3
out
notb
jne
call
and
jle
inc
insb
test
js
adc
mov
sbb
push
inc
sbb
jo
lds
dec
shr
out
jl
inc
outsl
or
xchg
fcoml
xor
fistpll
lods
ljmp
enter
ds
inc
popf
sti
push
adc
jp
cmp
jo
push
test
movsl
mov
cmpsl
test
xchg
movsb
pushf
adc
sarl
xor
icebp
push
subl
xor
int3
test
sbb
xchg
stos
mov
shr
aas
push
loop
in
mov
das
sbb
pop
pop
mov
pop
inc
mov
push
lcall
mov
jle
or
mov
or
into
fs
and
leave
jns
and
out
cmp
cmp
or
in
dec
dec
sbb
lea
jecxz
pusha
mov
nop
test
push
sub
push
lcall
and
imull
xor
xor
xchg
and
fldt
pop
jns
pop
repnz
fs
lds
inc
push
sub
sub
xor
sub
icebp
out
pop
test
mov
loop
cmpsl
aas
es
in
negl
sub
sahf
gs
sub
or
addr16
sahf
out
push
add
cli
adc
stos
std
das
add
mov
push
sahf
mov
xchg
loope
jmp
xorl
jecxz
in
ret
hlt
std
mov
cwtl
out
in
and
add
xorb
decl
bound
cmp
stos
jae
icebp
cld
ss
pop
cmp
in
out
iret
scas
sahf
push
aaa
sub
sub
sbb
cmp
push
adc
jecxz
movsl
into
xchg
fldt
pushf
jl
jmp
jmp
push
scas
jmp
adc
les
dec
sub
dec
in
pop
sub
cmp
stos
mov
dec
mov
mov
mov
add
aam
cwtl
mov
mov
imul
dec
pusha
xchg
imulb
cmp
mov
pop
ds
push
pop
gs
sti
push
ljmp
push
jmp
push
es
pop
mov
out
aad
mulb
andl
and
int
cmp
and
setnp
or
xchg
dec
insl
sar
mov
mov
lahf
cmp
call
in
pushl
imul
addr16
fsts
cmp
mov
adc
pop
xchg
inc
dec
jnp
call
dec
jno
stos
dec
inc
in
adc
xor
data16
fldenv
pop
sub
xorb
das
push
je
jp
pop
mov
mov
xor
dec
cmpl
bound
push
push
inc
ret
push
fdivrl
rcll
repz
mov
add
push
scas
pop
xor
icebp
test
add
hlt
mov
mov
push
stos
and
aam
fstl
inc
mov
sbb
xchg
mov
sti
xchg
push
push
and
adc
jnp
xlat
loop
cld
rolb
loopne
or
int
add
sbb
gs
imul
frstor
sub
outsl
sbb
insb
fdiv
std
mov
sbb
out
mov
mov
push
pusha
insl
sahf
sahf
xchg
test
outsl
loop
add
popa
rorl
les
push
xor
mov
cmpsb
mov
xor
xlat
aas
inc
jne
sbbl
ljmp
outsb
xchg
fdivrl
or
xchg
cmpsl
jne
pop
das
xchg
or
ret
push
adc
stos
xor
aad
mov
mov
test
fs
lret
or
pop
cmp
aam
test
push
in
repnz
stos
test
test
pop
cmp
and
scas
subb
fldenv
and
repnz
std
mov
and
adc
es
push
adc
mov
push
imul
adc
andl
mov
push
fwait
sub
data16
cmp
nop
ja
popa
addr16
and
sbb
push
mov
fisttps
xchg
orl
jle
add
fstl
dec
jmp
lods
test
xchg
fldt
addr16
lret
inc
outsl
pop
jle
adc
cmp
dec
inc
xadd
inc
or
js
or
jae
pop
push
xor
jp
mov
xchg
loope
push
imul
cmpsb
pop
add
dec
mov
sbb
mov
mov
xchg
fstl
xchg
xor
lahf
lret
dec
inc
mov
adcb
arpl
xchg
xchg
sub
sub
xor
jo
cmp
insb
push
js,pt
inc
dec
test
mov
dec
fildll
sub
mov
jo
imul
cmc
fst
push
ljmp
jns
mov
and
push
pop
outsl
sub
loopne
cmpsl
gs
adc
or
pop
sbb
test
push
inc
popf
aas
adc
ds
dec
xor
leave
push
sub
loope
movsl
push
inc
out
jmp
push
pop
mov
jmp
xor
mov
lret
cmp
mov
and
adc
push
or
mov
mov
mov
cmc
inc
and
xchg
push
push
jge
sub
push
push
std
xor
jno
jns
jno
cmp
sub
adc
imul
jle
push
xchg
xchg
subl
mov
es
adc
test
stc
push
cmpsb
and
or
xchg
int
rcrl
xorb
mov
jo
out
jl
lret
incl
enter
cwtl
add
and
cmp
lret
gs
mov
jo
push
inc
je
divl
addr16
fs
jle
mov
pop
xchg
mov
cld
jl
mov
mov
cmpsl
dec
mov
fdivrl
mov
xor
mov
jb
aaa
in
aaa
lahf
and
sbb
ljmp
int
cmpsl
jmp
hlt
filds
xchg
adc
pop
sbb
enter
xchg
pop
mov
fbld
or
and
adc
insl
xchg
push
xor
fwait
mov
icebp
in
cmpb
fsubrs
adc
adc
mov
js
rorl
push
popf
or
sub
fmulp
pop
mov
sbb
fstp
mov
cmpl
push
es
shlb
and
or
push
inc
dec
outsl
mov
nop
mov
xchg
shlb
daa
dec
cli
dec
sbb
cmpsb
in
enter
add
sarl
stos
mov
or
dec
repnz
inc
mov
xchg
sub
hlt
in
test
jno
mov
mov
clc
cltd
xchg
mov
in
dec
jnp
subb
mov
push
mov
lret
pop
inc
inc
cli
inc
or
pop
adcl
mov
sbb
pop
mov
nop
sub
xchg
push
imul
dec
ret
int
dec
jmp
jae
cmp
pop
sarb
jle
push
in
stos
xor
push
rolb
adc
add
and
xor
nop
pop
mov
jnp
sub
mov
aad
cmp
mov
or
sbb
ja
daa
push
xchg
pop
scas
cmp
jae
sbb
fldl
push
xchg
sbb
push
gs
popf
jge
mov
add
insb
push
popa
pop
adc
stos
aad
or
inc
shl
pop
in
adc
or
test
mov
das
sbb
push
cmp
popa
dec
cmc
jae
test
jae
sbbb
push
aas
out
xchg
xchg
mov
in
mov
mov
or
jae
pop
mov
bound
in
lods
cmp
sub
inc
cltd
push
cmp
lcall
xor
mov
sub
repz
loop
ret
jns
sub
adc
lock
mov
js
add
sub
dec
outsl
jo
or
test
in
mov
je
push
sti
mov
adc
cmp
inc
mov
sarl
enter
pop
pop
sbb
insl
sbb
inc
jle
gs
in
jo
dec
and
jo
addl
test
jno
xor
cltd
sbb
fcoms
shlb
or
jbe
pop
insb
jge
mov
pop
push
add
fistpll
and
hlt
in
pop
push
fmuls
jg
mov
int3
jp
cmpsl
cmpl
dec
sbb
movntps
cltd
cmpsl
aad
lcall
xchg
ja
mov
lret
xor
insb
not
push
and
ja
icebp
mov
and
dec
sahf
dec
lret
loop
xchg
popa
jb
mov
sub
movsl
in
xor
and
xor
scas
jnp
dec
mov
inc
mov
add
cli
daa
xchg
push
dec
mov
ja
mov
sbb
or
test
mov
enter
fstl
shll
mov
hlt
jmp
fs
aam
addr16
mov
aaa
add
jle
dec
cmp
xor
std
pop
push
shrb
add
mov
mov
fstl
mov
aam
ss
jmp
cmpsb
mov
cmp
jge
xor
xchg
dec
pop
inc
out
loope
loope
aas
jle
adc
ret
xlat
push
add
outsb
and
pop
lods
mov
xor
fwait
jbe
sbb
push
inc
sub
inc
lea
imul
add
stc
mov
and
dec
int3
cmpsb
xchg
shrb
call
xor
pop
outsb
out
inc
and
dec
cltd
jp
xor
mov
sub
imul
or
mov
mov
sbb
jbe
shrl
or
call
cltd
imul
lahf
and
push
mov
in
sbb
mov
push
loopne
adc
sti
pop
sti
stos
test
hlt
mov
je
jp
cmp
movsl
or
outsb
mov
jl
dec
mov
gs
mov
nop
xchg
sar
or
mov
xchg
scas
add
and
leave
les
adc
int
and
inc
insl
sub
daa
mov
lea
setg
mov
xchg
lds
addr16
jbe
adc
lcall
push
pop
aas
add
mov
adc
test
rorl
push
dec
xchg
data16
inc
ljmp
pusha
inc
fldcw
push
and
out
pop
and
aam
fcoms
shlb
sub
repz
loope
ret
icebp
pop
add
sarl
loope
mov
cmp
aam
pop
out
cmp
mov
out
inc
mov
xchg
lret
sti
ja
push
mov
cwtl
fldl
shr
ss
movl
push
popa
mov
jne
ds
decl
push
loop
adc
add
or
iret
movsl
mov
sbb
push
fstpt
mov
cmp
push
es
or
mov
iret
sti
mov
clc
pop
jp
and
jno
mov
cli
jno
and
je
sbb
jge
xchg
mov
movl
dec
sub
je
cmpsb
add
scas
loopne
cmp
mov
push
cmp
aam
mov
sub
out
and
insl
js
lock
dec
pop
or
push
cmpsl
or
test
outsl
lods
loope
and
pop
xchg
pushf
gs
jns
dec
sbb
dec
aad
mov
cltd
repnz
push
int3
pushf
leave
testb
sub
pxor
sub
sub
in
jo
push
mov
adc
enter
sbb
cwtl
xchg
or
int
mov
es
xor
add
das
xlat
and
repz
fisubrl
or
popf
and
add
call
orl
push
cmc
lds
xchg
mov
sbb
in
pop
push
push
mov
mov
jge
xor
pop
pushf
testb
jb,pn
je
inc
push
aam
imul
pusha
cltd
outsl
xor
sbb
dec
dec
push
mov
sub
jge
out
nop
iret
mov
ja
rcr
and
mov
mul
adc
inc
mov
call
decb
stos
and
cmpsl
lahf
popf
sub
mov
jb
xlat
pop
push
ja
dec
or
int3
push
sbb
in
frstor
fidivrl
pop
sub
mov
mov
notb
jle
sbb
and
push
inc
or
stos
test
push
sbb
out
popf
push
push
ret
aad
cmp
enter
inc
lods
add
push
jl
push
mov
lds
cmp
sbb
pop
shll
pop
fwait
bound
rcll
mov
jg
int
ja
cmc
adc
mov
mov
flds
aas
stc
ud1
dec
or
xchg
mov
mov
push
push
inc
mov
add
bound
mov
andl
repz
imul
pop
inc
and
ja
cmpsl
jg
inc
inc
out
mov
shrl
or
cmpsb
test
xchg
enter
add
cmp
adc
outsl
out
dec
adc
daa
movsl
and
dec
xchg
mov
fisttpl
popf
iret
inc
xor
adc
add
jo
pop
loop
out
out
aaa
mov
ss
sbb
aad
loopne
test
sbbl
sbb
jne
aad
dec
push
and
lock
daa
mov
and
addr16
xor
jge
scas
sub
insb
dec
es
jmp
test
jae
adc
xor
divb
xor
dec
out
adc
loope
xchg
dec
cmp
lock
ds
out
mov
addr16
movsb
or
ja
popa
les
rcrl
jb
in
test
adc
push
add
call
leave
mov
daa
ret
test
push
adc
fmul
push
or
push
pop
mov
fs
xor
shlb
sub
push
mov
aas
dec
push
xor
push
movsl
sub
mov
adc
or
xchg
adc
jle
lret
mov
ds
inc
lret
sub
jbe
rcll
inc
stos
cmp
enter
nop
jns
fimuls
or
test
js
es
aas
loope
mov
scas
add
dec
sub
cltd
sbb
push
addl
xchg
mov
fsts
test
mov
sbb
aad
push
test
push
jmp
lods
sub
push
lods
pop
push
sub
jmp
jmp
in
ljmp
icebp
out
jae
dec
dec
mov
inc
lods
sub
and
push
mov
aas
ret
add
cmp
or
pusha
adc
adc
adc
pop
jae
lea
pop
mov
outsb
xor
adc
and
movsb
es
mov
adc
shlb
mov
jmp
outsb
fs
imulb
imul
inc
das
sbb
adc
mov
in
xchg
in
sbb
call
mov
in
push
scas
adc
inc
loope
lret
jbe
mov
repnz
adc
fsts
sbb
mov
ret
sbb
jecxz
inc
je
push
outsb
xor
add
loop
dec
mov
sbb
xchg
cmpsb
pop
cmp
adc
mov
dec
push
add
in
dec
cli
cmp
mov
lds
and
push
mov
and
int3
stos
test
dec
popf
or
xchg
addr16
pusha
pop
int3
notb
addr16
bound
mov
lret
test
in
or
pop
xchg
fnstcw
or
out
movl
test
adc
push
xchg
fisttpl
cltd
lret
mov
in
incb
es
mov
lcall
pop
fisttpl
adc
cmpsb
shrb
cwtl
mov
push
xor
mov
lcall
into
adc
add
les
sub
mov
jge
push
mov
mov
dec
xor
jo
or
arpl
mov
fst
mov
sbb
add
mov
insl
ret
outsl
cmp
jae
je
mov
and
cmc
repz
fwait
or
jo
insl
lahf
icebp
mov
push
fsub
and
and
push
test
push
fnstenv
gs
cld
xchg
mov
pushf
in
sbb
push
pop
roll
ds
aad
cmp
dec
ret
shlb
aaa
ss
in
loope
adc
add
call
stos
and
jne
mov
add
xchg
inc
push
sub
cmp
xchg
or
jecxz
scas
cwtl
clc
mov
stos
int3
in
ficompl
add
push
fadds
add
pop
mov
fwait
mov
add
aaa
cltd
pusha
push
bsr
dec
mov
mov
and
movsl
pop
xchg
jns
pop
lahf
in
mov
fwait
inc
sbb
cmc
popf
out
xchg
lss
lds
sbb
aad
movsl
in
push
inc
lds
lea
jns
stos
dec
out
test
cmpsl
scas
int
add
mov
inc
pop
mov
cmp
xchg
out
xchg
ss
bound
jo
cltd
jp
mov
ljmp
jp
data16
lea
data16
icebp
jmp
stos
mov
cmp
les
lods
mov
out
adc
testb
jp
mov
push
jnp
jg
popa
jb
aad
push
push
scas
pop
in
jl
sti
mov
xchg
nop
or
mov
movsb
iret
inc
notl
out
test
add
push
sbb
testl
sbbl
push
adcb
frstor
jns
cmp
mov
xor
pop
xor
cmp
dec
mov
mov
mov
or
cmpsl
cmpsb
call
out
add
sarl
testl
sbb
sti
push
pop
push
lods
sbb
loop
dec
popa
lock
lds
rolb
xor
aam
enter
test
or
stos
es
adc
mov
pop
xor
cmpsl
out
adc
sub
scas
imulb
lods
aas
dec
repz
inc
jo
clc
arpl
aas
mov
push
and
test
push
es
sbb
sbb
mov
insb
aad
dec
or
xor
leave
out
sbb
out
and
imul
push
sub
pop
shlb
and
or
loopne
pop
mov
push
repz
bound
adc
and
scas
add
cmc
pushl
lods
std
sbb
adc
movsb
pop
stc
sahf
data16
loope
and
pop
fistpll
xor
xchg
insl
scas
fcomip
sbb
rorl
sbbb
pop
jp
cmc
lods
sub
daa
ds
cmc
xor
arpl
xchg
lock
cmp
outsl
push
jae
pop
xor
mov
insl
xchg
jmp
dec
lods
fisubl
lret
jmp
lods
flds
stos
popl
sbb
int
neg
out
mov
jl
inc
cmpsb
popa
imul
adc
bound
out
sub
and
movsb
imulb
cs
mov
rclb
sub
inc
mov
ffree
mov
daa
loopne
cmpsb
sub
cmp
aaa
add
imul
or
push
roll
sbb
and
jmp
add
sub
arpl
mov
mov
inc
cmpsb
js
cld
hlt
push
enter
xor
icebp
sbb
sti
xor
out
dec
popf
aam
pop
lods
add
jecxz
dec
adc
sahf
jb
out
pop
inc
pushf
jnp
sbb
xor
or
sbb
mov
adc
sbb
sub
jl
push
dec
data16
icebp
ds
sub
jl
scas
push
int3
arpl
subb
gs
cmpsl
push
jp
or
arpl
ds
fidivl
xor
add
lcall
add
int3
into
mov
js
lods
movsl
test
dec
adc
int
pop
es
xchg
jb
test
mov
mov
pusha
testl
cmp
es
mov
pop
cmp
xor
sub
enter
les
test
das
xchg
sub
cmp
lods
pop
mov
inc
clc
pop
stos
sbb
adc
in
jge
ja
ret
dec
push
xchg
icebp
or
lret
popf
inc
mov
lcall
ret
and
ret
out
jo
mov
fidivrs
int3
cmpl
cmp
pop
test
fwait
dec
push
stos
pop
dec
mov
xor
mov
das
lods
push
insl
stos
jo
sbb
je
dec
addl
and
les
push
and
mov
pop
out
shll
aas
xor
mov
nop
rcll
in
dec
jne
mov
sub
pop
fs
das
cmp
das
mov
std
inc
jmp
and
cmp
jbe
and
sbb
dec
mov
xchg
inc
mov
add
movsb
popa
push
clc
push
push
negl
lahf
mov
jns
movsb
inc
lret
and
insb
pop
bound
mov
in
xchg
dec
imul
xor
sar
sub
lea
filds
adc
test
popf
adc
loop
repz
jl
subl
add
push
pop
push
movsl
xchg
into
daa
out
cld
mov
sahf
mov
sahf
addr16
xor
mov
sub
movsb
nop
mov
andb
aam
adc
cmp
out
or
cmp
jp
adc
int
mov
and
xchg
out
xchg
jl
ret
mov
xchg
mov
scas
scas
mov
or
push
mov
in
pusha
cmp
lods
fdivl
xchg
outsb
lcall
bound
out
clc
sbb
dec
push
popl
mov
xor
aad
and
imul
xchg
iret
dec
add
dec
add
mov
mov
fisttps
xlat
cmpsb
scas
sub
fwait
fwait
daa
cld
adc
mov
mov
mov
inc
jo
fs
and
xor
mov
test
inc
sbb
adc
lret
push
push
inc
push
sub
pop
out
jo
shrb
xor
mov
aad
push
add
mov
or
fcmovu
je
sub
lret
inc
jne
popf
inc
xchg
dec
dec
jno
sub
lock
push
jle
mov
mov
rolb
push
push
lahf
shll
mov
lahf
stos
jle
jp
jnp
inc
xlat
or
fiadds
pop
jmp
fidivl
push
push
dec
out
mov
mov
mov
cmpsb
mov
xlat
xchg
push
cmp
psubusw
jb
arpl
pop
in
or
xchg
stc
in
jle
orl
mov
sub
out
subb
pop
xchg
jle
mov
inc
ljmp
mov
sub
rcrb
dec
sbb
cmpsl
adc
cmc
jl
xor
jno
outsl
imul
push
mov
xor
push
outsl
stc
xchg
jae
push
cltd
xchg
push
mov
or
sbb
add
xor
aaa
push
icebp
and
dec
xor
lods
cmp
aam
jle
mov
leave
push
add
or
repnz
dec
jbe
push
jmp
sub
jb
dec
test
push
push
ds
popf
pop
cmp
sahf
push
push
sti
repnz
cmp
push
mov
popf
outsb
mov
ficoml
cmpsb
imul
push
pop
test
adc
cmp
push
push
loop
cmp
scas
inc
dec
fs
repz
jg
loope
add
xchg
jae
aam
pop
push
sub
mulb
dec
sbb
mov
push
lock
fwait
xchg
xchg
ret
ss
cmc
movsb
loopne
mov
push
mov
jno
xor
ficoml
iret
adc
pxor
pop
mov
adc
jmp
inc
jbe
clc
push
in
arpl
sub
clc
cmc
setne
push
inc
inc
adc
add
xchg
push
and
sbb
sti
das
rorb
mov
mov
fists
arpl
jae
loopne
ss
inc
test
repnz
rcrl
int
rorb
xlat
fmull
cli
sbb
add
pop
sub
hlt
int3
push
aam
cs
xchg
into
cli
push
jp
pop
fstl
dec
add
aam
jl
bound
mov
mov
dec
xchg
cmp
pop
out
lods
fdivl
or
mov
cmp
jo
scas
jg
and
push
sub
sub
divb
mov
push
cmpsl
xchg
fnsave
in
idivb
into
mov
aaa
or
push
dec
or
imulb
xor
cmp
xchg
in
test
loop
dec
mov
fld
add
sub
push
or
mov
fildll
pusha
cmp
xor
cmp
shrl
jo
outsb
ljmp
xchg
cmp
pop
movsb
sarb
paddsw
rcl
pop
dec
aaa
pop
push
cli
sti
dec
adc
push
hlt
fbld
and
xchg
test
pop
push
je
dec
or
dec
fcoms
add
xchg
mov
arpl
outsb
stos
inc
xchg
ljmp
and
pop
cmpsb
and
popa
decl
xchg
xor
sbb
cld
test
xchg
pop
mov
push
inc
mov
jle
es
mov
daa
and
mov
ljmp
loope
and
sbb
jmp
add
mov
addb
stos
xchg
mov
mov
sub
push
xor
mov
dec
test
push
mov
les
push
adc
xchg
jge
cwtl
aam
mov
insb
pop
test
lret
cmc
dec
fildl
adc
mov
lock
jl
nop
and
mov
and
rcll
sbb
adc
fsubl
ret
jnp
add
and
jecxz
dec
mov
mov
fsubrl
push
pop
insl
shl
addr16
nop
push
or
inc
or
push
cltd
and
ds
out
imul
or
out
sar
xor
sub
mov
xchg
sub
inc
push
mov
pop
andl
pop
xchg
sbb
push
push
mov
addl
jns
mov
mov
pop
movsl
pop
mov
ficompl
das
outsl
div
cmp
in
push
push
data16
arpl
xchg
mov
xor
ss
adc
adc
pop
pop
xchg
repz
cld
lret
inc
mov
push
xlat
test
movsb
sbb
jle
sbb
stos
add
stc
js
xchg
pop
data16
jb
dec
test
add
push
push
and
in
adc
testb
mov
push
push
xchg
icebp
xor
push
adc
ja
das
movsl
push
mov
gs
into
mov
jne
rorb
and
ljmp
add
cmp
jb
sub
setl
mov
lock
cmp
outsb
sub
cli
xchg
lods
push
imul
inc
insl
loop
cmpsb
xor
mov
pop
lret
mov
movsb
adc
mov
insl
or
mov
lahf
mov
pop
dec
sub
push
mov
fstpt
adc
pop
popf
push
std
shrl
or
out
xor
xorb
dec
gs
cli
mov
shlb
popf
mov
gs
popa
mov
jl
shlb
mov
mov
rcrl
movsl
sbb
pop
repnz
arpl
cli
mov
sub
xor
shll
add
fmuls
imul
mov
xor
movsb
adc
mov
addb
mov
adc
sbb
sbb
cli
outsl
das
orl
popa
outsb
pop
mov
or
std
shrl
lods
sbb
xor
push
je
call
or
pushf
dec
lock
shlb
xchg
jns
or
add
jmp
out
xor
cmp
jo
movsb
int3
test
pop
pop
mov
adc
lds
or
sbb
mov
pushf
pop
fs
xchg
lods
outsb
in
xchg
js
andb
mov
mov
add
push
and
jp
addr16
lcall
mov
fistps
test
jl
push
mov
lret
cmp
jge
cmp
dec
test
loopne
int3
push
js
pop
je
adc
or
stos
cmp
je
enter
mov
rcll
add
dec
push
sbb
int3
lret
pop
dec
pop
lahf
repnz
push
lods
inc
adc
ret
jnp
pop
subl
cmp
jp
xor
mov
andb
pop
inc
fs
pop
lods
outsb
stos
lea
dec
loopne
paddd
data16
jmp
shrb
in
push
fwait
pop
js
aam
daa
jmp
loopne
pop
loopne
lods
push
pushf
pusha
and
pop
jno
repz
sbb
out
add
xchg
shll
mull
mov
jb
mov
inc
in
lods
mov
inc
jmp
sbb
pop
add
ljmp
adc
add
stos
add
or
fwait
mov
pushf
xor
pop
sbb
adc
hlt
and
dec
inc
mov
das
sbbl
cmpsb
lods
xchg
adc
movsb
mov
pop
addr16
or
dec
adc
rcll
in
lods
pop
test
es
add
xor
sbb
xchg
mov
imul
jle
ret
std
in
sbb
ret
mov
push
enter
fcmove
int
mov
scas
and
or
dec
int3
stc
addr16
je
cld
inc
xchg
xchg
sub
hlt
push
jp
test
scas
push
jp
sub
rcr
xor
loope
addr16
lcall
fcomi
ds
mov
inc
ljmp
dec
js
mov
imul
jg
sub
jg
outsl
push
pop
aas
shll
cmp
inc
clc
jno
adc
cmp
cs
cmpsl
sbb
push
aam
mov
or
insl
and
in
xchg
fisubs
int3
fdivr
pushf
push
mov
ret
xchg
cmp
mov
mov
cmp
aam
aaa
test
cmp
jmp
mov
out
mov
inc
lahf
pop
jecxz
cmp
add
daa
mov
dec
paddusw
dec
mov
movsb
repnz
xchg
inc
in
ss
call
lds
and
dec
push
mov
pop
in
popf
fbld
jno
jle
popf
sub
xchg
push
push
push
mov
mov
mov
mov
mov
lret
mov
lret
sbb
popf
iret
aam
sub
xlat
mov
lods
add
dec
push
gs
comiss
mov
mov
fisubs
fs
jmp
shll
push
sub
les
mov
scas
les
pop
mov
nop
mov
and
mov
inc
xchg
dec
mov
icebp
and
mov
dec
xor
iret
add
sahf
mov
push
cwtl
lahf
dec
dec
mov
lcall
adc
loope
sub
mov
sti
push
lahf
fimuls
adc
cmpsl
and
inc
adc
sub
xchg
xor
mov
sarb
pop
push
sbb
mov
mov
push
psllq
mov
pop
test
dec
popf
lock
rcrl
into
aaa
push
push
or
mov
cmp
sbb
aam
es
js
jmp
adc
mov
and
into
add
loopne
push
enter
scas
mov
lret
adc
pusha
ret
loopne
mov
call
and
stos
or
inc
mov
xchg
mov
scas
or
insl
sbb
test
adc
jbe
ljmp
or
push
arpl
ds
sub
out
push
inc
sbb
sub
ljmp
cmp
mov
out
inc
sti
pop
lret
mov
mov
cwtl
sar
mov
xchg
and
test
frstor
rolb
es
jl
lret
cld
cwtl
pushf
lahf
gs
inc
bound
xchg
xchg
xor
test
hlt
incb
xchg
movsl
aad
push
stos
jecxz
push
repnz
outsb
shrb
mov
lock
push
jle
xchg
lcall
outsb
jl
faddp
das
pop
xchg
pusha
mov
or
popf
mov
icebp
or
sbb
in
out
adc
sub
mov
cmp
and
add
dec
cltd
push
jl
movsb
mov
mov
jmp
addl
mov
jne
or
fcmovnbe
mov
or
push
push
pop
xchg
aas
jns
adc
js
sub
inc
sbb
sub
sub
nop
sub
jne
cmp
icebp
out
mov
rcl
jecxz
push
notl
or
sub
in
sbb
sbb
aad
jae
push
mov
sub
aad
enter
and
adcl
pop
je
shl
dec
xchg
mov
fsub
fdiv
loope
pop
pop
ret
orb
pop
inc
pop
add
mov
fldl
jge
clc
dec
dec
jb
aas
pop
or
mov
das
cs
aad
pop
lods
inc
rorl
cmpsb
mov
sbb
movsl
repz
jb
pop
add
shrl
cs
rcll
lds
and
pop
mov
sub
popa
jl
sar
jnp
stc
testb
into
pop
mov
jp
dec
test
pusha
call
pushf
pop
mov
pop
lcall
and
andl
push
dec
lock
push
jge
sarb
mov
mov
jnp
xchg
loope
addr16
imul
mov
fs
jne
cmp
jg
sbb
shrb
scas
js
shrb
sbb
jecxz
pop
jb
mov
push
mov
pop
cmpsl
xchg
cli
mov
shlb
xor
xchg
lods
add
mov
add
loop
in
adc
cmp
int3
fs
out
sub
cltd
ret
push
add
je
mov
or
pop
adc
mov
jp
push
out
mov
push
push
insb
mov
mov
mov
mov
add
pop
popf
mov
test
or
fsubrl
xchg
rol
mov
sti
dec
shlb
out
xor
rdtsc
push
je
shrb
rcr
inc
jb
sub
ljmp
lcall
ror
push
cmp
out
mov
fidivrs
xor
adc
in
push
dec
cmpsl
push
jl
loop
mov
sti
les
ljmp
xlat
cmp
ds
cmpsb
ja
in
inc
in
jmp
movb
sbb
pop
fidivs
xor
inc
test
jbe
xchg
jecxz
or
lds
bound
mov
sub
cmp
or
pop
cmp
mov
inc
fiadds
xor
and
mov
mov
sub
fnclex
adcb
std
cmp
les
push
notl
ret
in
cmp
mov
ljmp
cmp
and
out
push
jbe
aad
and
leave
data16
flds
sahf
popa
jae
mov
push
inc
in
inc
lcall
notl
adc
popf
jno
mov
mov
in
push
addr16
xchg
daa
rorb
clc
pop
cltd
jbe
out
dec
adc
outsl
push
push
popf
sbb
enter
les
test
xor
adc
ljmp
add
inc
sub
fwait
sub
push
dec
addr16
imul
jo
xchg
shlb
nop
lahf
cmpsb
clc
clc
or
and
cmpsl
mov
loope
xchg
aad
inc
sub
mov
jne
inc
pop
dec
hlt
out
lea
movsb
js
daa
aas
sub
sbb
xchg
sarl
popf
aam
add
sbb
dec
cmp
pop
ficoml
sahf
test
cmp
insb
dec
aas
inc
pusha
inc
jecxz
outsl
scas
int3
pop
test
push
addb
mov
rcr
jg
out
enter
mov
mov
xor
in
adc
call
add
call
lret
stc
inc
mov
cmp
and
cmpl
mov
mov
lods
lret
mov
nop
mov
push
xchg
mov
mov
into
lock
sbb
aas
fs
shlb
stc
cli
lods
repz
jl
push
adc
pop
push
push
cmpsl
dec
mov
dec
out
mov
fwait
cmp
clc
mov
pop
jl
push
or
imul
xchg
push
dec
adc
jnp
test
sbb
xchg
test
push
dec
call
jbe
test
out
movsl
push
aam
and
and
scas
pop
pop
sbb
mov
push
xor
sahf
fstps
mov
inc
clc
je
mov
sbb
aas
dec
mov
jae
lods
addr16
popa
rcrl
sahf
ljmp
inc
imul
dec
fidivs
out
jmp
imul
xor
and
push
mov
mov
xchg
cmovge
outsl
add
or
loope
aad
jb
adc
mov
xor
jg
mov
jnp
xchg
jbe
mov
mov
mov
filds
stc
adc
jno
and
shr
bound
mov
loop
shlb
sbb
jne
push
mov
pop
jl
and
mov
mov
cmp
cmpsb
or
jbe
push
es
aam
xchg
mov
pop
movsb
xor
flds
mov
lock
or
das
insb
jns
scas
shlb
sbb
inc
inc
jmp
jae
std
sub
je
icebp
insl
repnz
push
sub
mov
int
clc
shrl
movsl
adc
sub
sub
adc
adc
sbb
sub
fisttpll
loop
cmc
fisttps
jno
shrb
dec
adcl
lcall
jne
int
mov
ljmp
fidivrs
xchg
xor
icebp
in
inc
mov
ja
lds
sub
int3
jg
jecxz
xchg
repz
imul
imul
test
mov
iret
shlb
jp
repz
sbb
and
adc
push
lahf
dec
adcl
or
ds
jns
push
cltd
es
mulb
sub
je
adc
xlat
add
lea
lds
adc
pop
out
mov
pop
inc
sbb
push
lds
imul
inc
and
add
cmp
xorb
pop
mov
test
and
lret
mov
cwtl
dec
rcr
adc
pop
xchg
cmp
mov
dec
and
lret
mov
outsb
jle
cli
xchg
shll
or
add
pop
push
add
cmp
test
mov
jnp
data16
sub
adc
cltd
incb
xchg
idivl
cmp
and
push
sahf
lods
cmp
bound
stos
mov
cmpsl
rcrl
daa
test
int
cmpl
test
jmp
repz
push
cmp
inc
mov
jle
dec
dec
xchg
xlat
fadds
pop
loope
xlat
xlat
dec
je
pop
or
test
aad
jae
lahf
mov
xchg
xchg
xlat
in
xchg
adc
outsl
popa
add
xor
mov
jecxz
iret
push
std
lret
mov
arpl
dec
mov
test
add
in
orb
mov
in
stc
test
add
xor
ja
mov
or
jb
in
mov
repnz
imul
mov
mov
mov
popf
cltd
lods
jge
xor
mov
cmp
push
xchg
les
shrl
ljmp
nop
pop
jae
cmc
ret
decb
xor
jne
enter
mov
notl
fsubrs
or
scas
jo
loope
cli
add
push
jb
dec
addr16
mov
sub
out
jb
xchg
roll
jp
mov
mov
mov
fstpl
mov
popf
arpl
addb
test
mov
in
lds
pop
adc
pop
jae
das
rcl
cmp
loope
mul
mov
and
fstpt
and
sub
movd
adc
push
stos
pop
pop
sbb
xor
out
jbe
jne
mov
sub
pop
into
or
lods
mov
decl
fstps
push
mov
lods
or
mov
in
jb
mov
bound
out
mov
jecxz
xchg
jo
rclb
imul
cwtl
xor
sarl
mov
mull
rorb
into
mov
or
adc
mov
pop
cld
mov
push
mov
nop
into
cmc
jecxz
enter
adc
mov
inc
jg
lret
mov
mov
jae
out
jo
ds
cmpb
sbb
lods
xor
ss
andb
push
or
lea
ffree
shlb
orb
inc
nop
daa
stos
call
push
pop
jle
pop
lahf
cmpsl
movsb
sbb
jg
add
imul
and
fiaddl
pop
jle
fcoml
push
outsb
mov
xchg
mov
mov
push
leave
cltd
cmpsl
into
mov
arpl
push
push
mov
testl
iret
lea
lods
loope
dec
bound
jnp
roll
inc
cmpps
push
sbb
dec
dec
adc
pop
or
addr16
mov
sahf
sub
push
jl
adc
cmp
push
jmp
pushf
rcll
mov
push
push
rcr
ficoms
adc
shr
fdivs
ss
addr16
mov
xchg
lds
test
mov
mov
scas
dec
xchg
add
or
xchg
pop
imul
popa
add
jae
cmpsb
loopne
mov
mov
dec
xchg
loop
ss
mov
and
popf
xchg
jae
jns
jmp
inc
incb
and
push
hlt
adc
rolb
fcomps
popa
outsl
add
int
cwtl
shr
lods
mov
and
jg
pop
add
xchg
cmp
push
les
or
scas
sub
stos
in
xchg
sti
mov
push
outsl
inc
das
sbb
in
cmp
js
mov
mov
xchg
xchg
mov
scas
stos
repz
add
add
ds
sub
aad
and
mov
aaa
lods
into
bound
mov
ds
pop
mov
jns
cmp
mov
loope
jle
faddp
arpl
jne
movsl
loopne
jne
mov
jbe
cmp
jle
cmp
imul
pop
inc
std
or
sbb
jge
adc
loopne
jns
mov
sbb
sub
orb
pop
mov
mov
mov
adc
push
add
push
bound
dec
lea
xor
pop
test
ret
and
rolb
mov
ja
test
inc
repnz
outsb
push
int3
or
xor
into
inc
cmpsb
adc
cmp
mov
les
fwait
dec
sbb
xor
xor
and
sahf
icebp
jo
or
xor
cmp
movsl
aaa
jg
xor
and
ret
test
mov
fs
sub
test
les
cmp
jno
bound
lods
cmp
inc
ljmp
into
and
int3
mov
in
leave
pop
mov
sub
cli
push
xchg
cmp
and
cmpsb
andb
mov
sbb
fmul
pop
sub
adc
jae
js
mov
push
add
fisubs
mov
cwtl
dec
out
and
loopne
int3
sahf
scas
jmp
popa
cmp
dec
into
mov
jmp
popa
xor
or
mov
cmp
add
dec
pop
loope,pt
push
ss
mov
pop
nop
jns
sbb
loopne
xchg
inc
inc
mov
mov
fcomps
notl
cs
cmp
add
sahf
pop
dec
push
ficomps
cltd
cmpsb
xor
lret
push
adc
and
xlat
inc
dec
shlb
mov
and
push
jae
lock
pop
insl
mov
adc
bound
pop
int
shlb
push
lahf
adc
mov
jge
xchg
std
cs
nop
cmp
out
jno
sub
mov
xchg
dec
xor
and
scas
arpl
sti
jb
lods
xorb
lock
imul
sti
or
xor
jno
mov
ret
dec
mul
enter
inc
sbb
push
pusha
pushf
stos
xor
arpl
xor
xchg
cmp
mov
cmpb
sub
lretw
ss
pop
stos
adc
xchg
std
scas
dec
loop
lds
inc
fstpt
mov
add
jge
inc
dec
popa
pop
xor
inc
inc
and
in
adc
sub
mov
shlb
inc
scas
dec
dec
clc
push
in
push
adc
int3
das
mov
int
out
sahf
add
sbb
cli
in
dec
sbb
pop
pop
dec
push
loopne
cmp
decl
fimuls
xchg
jno
sarl
or
push
sbb
scas
popa
adc
or
fistl
inc
xor
pushf
xor
xor
notl
imulb
pop
push
adc
xchg
dec
xor
mov
push
sbb
xor
mov
inc
test
push
jle
out
je
mov
inc
aad
xchg
cmc
imul
nop
jnp
cli
adc
lock
jbe
pop
sarb
loopne
adc
cmp
fs
test
clc
shl
or
jnp
in
movsb
push
push
pop
jne
jb
orl
imul
cmp
loop
jbe
popf
cmp
out
push
or
aam
sbb
rcr
jmp
stos
pusha
push
inc
leave
lods
or
jne
jp
jp
push
repnz
mov
push
jp
xchg
pushw
jg
movsb
adc
fisubrl
mov
fucomip
daa
add
daa
mov
shl
mov
inc
pushf
ja
add
mov
cmpsl
iret
dec
in
addl
push
inc
adc
dec
nop
xchg
test
into
mov
loope
pop
cld
test
clc
push
lfs
mov
mov
test
add
push
mov
push
or
cmp
cli
pop
fimuls
sbbb
xchg
pop
mov
adc
fbld
mov
jae
cltd
insb
outsl
test
enter
mov
cld
sub
dec
adc
cmp
movsb
jge
loop
test
dec
repnz
xor
int3
xchg
je
dec
jno
xchg
pop
push
jl
xor
imul
lahf
or
mov
ret
mov
xchg
aam
jecxz
cwtl
pop
push
insb
xchg
xchg
adc
xchg
stos
outsb
nop
insl
loop
mov
cmp
or
mov
cwtl
ret
and
cmpsl
lret
jnp
xor
sub
int3
push
ror
ds
sub
jle
mov
mov
iret
ret
push
cld
ljmp
add
ljmp
movsl
nop
ljmp
push
std
dec
mov
xchg
cmc
adc
inc
dec
mov
iret
mov
cmp
mov
pop
int
out
dec
movsl
dec
lods
dec
mov
pop
or
mov
pop
sub
jecxz
inc
subl
pop
jno
jns
int
enter
mov
or
xchg
adc
mov
mov
pop
push
mov
cmp
mov
mov
test
push
mov
xchg
or
adc
jmp
dec
pop
arpl
fisttpl
adc
popf
pop
scas
imul
ja
adc
sbb
xchg
dec
ja
sub
mov
jnp
shll
jbe
les
xor
lods
xchg
push
int
cmp
popf
push
and
arpl
and
inc
jmp
dec
cmp
in
sarb
addl
sbb
rcrb
or
dec
jnp
adc
mov
aad
cmp
int
aaa
imul
stc
test
lds
push
jmp
adc
mov
mov
dec
inc
sti
mov
in
add
mulb
mov
mov
arpl
jg
jnp
fcmovb
inc
imul
dec
push
loope
scas
jb
mov
mov
inc
dec
iret
test
lahf
sub
inc
inc
mov
insl
dec
add
out
push
push
fisttpl
sbb
wrmsr
iret
lret
xlat
shrb
in
ss
fildll
pop
and
cmpsl
mov
fcomip
mov
lret
inc
fidivrl
stos
jne
inc
mov
and
dec
leave
aam
mov
int3
mov
jl
lahf
xchg
mov
loopne
xor
jmp
mov
mov
adc
aas
addr16
int3
and
xor
insl
jp
jno
cld
push
dec
xor
mov
rol
das
jp
aam
push
jno
pop
outsb
jmp
in
inc
lods
jp
stos
arpl
jnp
shr
stos
lret
fcomi
push
iret
cmc
repz
imul
xor
mov
sub
addl
bound
or
ja
pop
insb
push
or
imulb
pop
imul
into
pop
in
cmpsl
and
ja
adc
lods
scas
xchg
or
pop
out
movsb
mov
test
lock
xlat
dec
xorl
or
cmp
xchg
test
adc
sbb
push
lcall
test
mov
cld
mov
nop
testl
push
dec
or
in
mov
hlt
adc
pop
or
mov
dec
movsb
inc
sbb
stos
leave
clc
filds
inc
call
addl
mov
sbb
or
cmpsl
pop
mov
repz
js
and
stos
mov
dec
loope
mov
insl
dec
orl
movsl
mov
ds
xor
dec
mov
decl
mov
jg
push
dec
jecxz
cmovs
pop
push
add
outsl
mov
cmpsb
test
ds
cmpb
jle
jle
filds
jnp
pusha
xlat
sub
aad
outsl
or
mov
jp
push
dec
sahf
inc
popa
jge
jae
je
adc
dec
test
inc
fwait
adc
jnp
rclb
or
xchg
xchg
sbb
sahf
fcomps
lret
imulb
jns
dec
lahf
rcl
mov
inc
repnz
and
ss
pop
sarl
lea
mov
mov
cwtl
rorb
inc
fwait
dec
jp
in
mov
jmp
dec
sbb
mov
lcall
outsb
sti
addr16
inc
sub
mov
sub
or
xchg
adc
es
push
mov
lods
xchg
jae
sti
push
nop
pop
push
xchg
xor
and
dec
bound
xor
movsb
mov
addr16
inc
or
or
mov
mov
adc
nop
mov
xchg
fnstsw
cli
js
je
cs
push
xchg
outsl
lea
jge
shl
or
fsubrl
cmp
sbb
pop
cmp
push
jne
xor
and
inc
sti
mov
and
lahf
popf
movsl
mov
movsl
je
sub
outsl
adcl
dec
xchg
add
bound
jmp
dec
and
inc
inc
mov
sub
sti
mov
test
inc
popa
mov
leave
sbb
jmp
enter
shlb
stos
pop
adc
icebp
es
adc
jmp
loope
insb
add
mov
xchg
and
cwtl
out
in
sbb
cwtl
jae
push
push
movsl
and
jne
daa
push
mov
or
hlt
xor
xchg
jmp
adc
pushf
popa
lea
push
into
jae
push
je
mov
test
add
loop
sbb
mov
mov
jl
push
add
shlb
clc
xchg
xchg
pop
dec
outsl
jae
sbb
das
aam
leave
insb
pop
lret
and
push
xchg
mov
dec
inc
dec
dec
stos
mov
sub
jg
and
mov
add
repnz
fisttps
repz
pusha
repnz
add
mov
mov
and
arpl
int3
jno
dec
int3
add
pop
or
or
push
push
pop
mov
js
mov
std
mov
sub
test
push
push
outsb
mov
lods
mov
out
push
dec
shl
mov
xchg
mov
sub
mov
adc
pop
jmp
std
enter
xchg
or
inc
xchg
lea
cmp
xchg
dec
inc
das
sbb
sbb
hlt
icebp
xlat
dec
pop
xor
mov
cmp
mov
in
add
fimuls
jbe
cmp
add
sbb
sub
fcompl
daa
pop
xor
lds
rcrl
mov
xlat
imul
inc
insl
sub
inc
enter
lret
stos
cmp
inc
filds
outsb
sub
sub
jo
in
jmp
test
xchg
sahf
mov
jecxz
xchg
sbb
outsl
xchg
mov
nop
pop
pop
imul
jg
inc
es
repz
mov
lahf
mov
ret
in
cmp
sbb
and
cmp
mov
adc
aam
xchg
and
shl
rcrb
sbb
mov
jns
xchg
das
xchg
dec
xchg
mov
dec
fisubl
mov
popf
popa
ror
xor
popf
das
sbb
mov
in
cltd
fnstenv
inc
stos
xor
outsl
fwait
adc
mov
add
mov
es
daa
push
push
mov
xor
mov
inc
or
into
dec
jl
xor
pop
mov
cwtl
dec
pop
jnp
xchg
adc
push
mov
cmp
insl
outsl
cmp
das
shll
mov
push
cmp
ja
pop
popf
loopne
out
scas
mov
push
mov
push
xor
jl
fistpl
mov
pop
inc
jo
and
push
pop
adc
jnp
divl
and
imul
cmp
in
and
fstpt
sbbl
push
xor
cwtl
insb
push
sbb
repz
aas
cmp
inc
aad
fs
xchg
push
clc
lds
push
fcompl
and
adcl
mov
fnstcw
adc
into
cmp
testb
push
pop
aaa
out
aaa
dec
xchg
ljmp
loope
fisttps
enter
jo
sub
jnp
jge
pop
pop
mov
stc
mov
cmp
leave
sbb
cmpsl
nop
arpl
gs
pop
jbe
and
push
insb
adc
pop
dec
and
mov
cmpsb
push
push
xchg
sub
jbe
inc
jg
jl
push
adc
dec
or
push
mov
push
popf
fidivl
cmpsb
and
std
aad
bound
js
addl
xchg
inc
into
fisubrl
lea
je
hlt
cld
bound
jg
test
xchg
inc
fwait
lret
mov
inc
fcmovne
icebp
imul
std
sub
in
dec
movsb
pop
sarl
loope
push
mov
mov
jbe
sbb
cmp
mov
jge
add
dec
in
adcb
push
stos
inc
inc
out
outsb
and
in
and
mov
outsb
jbe
cmp
cmp
arpl
mov
jle
scas
popf
lods
lahf
xchg
call
cmpsl
fadds
out
subl
lea
jo
dec
mov
ja
pop
or
loopne
data16
adc
fsubr
andnps
sbb
pop
mov
nop
scas
add
jmp
outsb
adc
add
sti
or
sub
xlat
nop
cmp
rcll
loop
xchg
add
cmp
imul
mov
xchg
stos
cmp
test
mov
pusha
shlb
cmp
test
mov
push
mov
loop
loope
movsb
adc
mov
in
pusha
test
lcall
out
jmp
vsqrtsd
cld
sub
fcoml
cmp
mov
cmp
cmp
into
sbb
imul
or
inc
int3
test
movsb
mov
scas
mov
shrb
cltd
inc
shrl
sbb
jbe
inc
inc
jnp
js
je
jle
and
out
pop
push
inc
inc
sbb
cmpsb
xor
xlat
popf
or
or
stos
jnp
or
hlt
or
inc
subl
adc
aaa
or
push
clc
sbb
outsl
or
jns
sub
shlb
call
sbb
push
test
push
cmp
adc
call
ds
mov
jnp
cmp
cmp
lret
dec
scas
repz
xor
sahf
push
sub
fidivl
in
or
ret
fsts
sub
jmp
dec
ja
and
repz
pusha
andl
je
insl
test
stc
fcompl
mov
into
inc
int
xchg
pusha
sbb
mov
inc
dec
xchg
dec
push
and
dec
fidivs
sub
or
icebp
mov
dec
and
jecxz
or
stos
lahf
hlt
test
icebp
inc
or
je
popa
aas
es
inc
mov
cmp
mov
cmp
push
js
or
lods
push
inc
xor
xchg
xchg
push
pmaxsw
push
shll
pop
nop
mov
pop
pusha
adc
mov
js
or
ror
lds
jnp
mov
push
lods
dec
or
shrb
and
clc
dec
or
xchg
out
pop
daa
cli
test
fsts
mov
sbb
jle
jg
movsl
ljmp
mov
cmpsl
sub
fldl
ret
jno
inc
pop
xor
inc
ror
fwait
mov
push
out
loop
sub
mov
xchg
mov
imul
pop
cmp
sbb
imul
andl
fistl
cmpsb
mov
mov
das
cwtl
lds
adc
insl
inc
mov
mov
jb
dec
orb
rcrb
adc
cs
jo
cmp
in
mov
icebp
xlat
add
insl
push
ret
push
jne
xchg
adc
push
mov
aad
int3
mov
dec
or
lods
into
mov
sub
push
mov
popl
inc
sbbl
loope
faddl
fstpt
movsl
pop
jmp
cwtl
loope
sti
sbb
sbb
rcl
test
mov
lret
mov
jns
push
pushf
mov
in
mov
dec
xchg
push
push
jle
adc
and
cs
mov
jmp
fmull
das
psubsb
jno
out
dec
adc
push
jl
pop
xchg
dec
dec
sbb
jnp
and
out
or
and
rclb
pop
or
cmp
shll
xchg
fidivrs
movsb
dec
mov
out
fldt
and
inc
sub
pop
fs
mov
mov
dec
xchg
or
imul
dec
out
push
shr
mov
sbb
push
js
adc
inc
xor
mov
pop
push
insl
cmp
inc
or
loop
xchg
aas
dec
ss
popf
sub
cltd
lea
enter
jb
insl
jo
dec
and
les
push
jmp
stc
sub
mov
jge
je
lret
cltd
int3
jg
insb
sbb
fildll
cmp
mov
ljmp
mov
add
cmc
stc
clc
lods
sbb
pop
mov
pop
and
in
sub
imul
mov
int
ss
rorb
popf
loop
mov
push
stc
cmp
dec
adc
out
sti
sub
inc
mov
cld
mov
mov
pop
adc
mov
xor
jnp
mov
mov
imul
sub
lock
mov
xchg
xchg
xor
xor
mov
insb
cs
dec
adc
rorl
mov
sbb
xor
xor
and
mov
and
es
les
aas
push
jmp
or
pop
push
cmpsb
push
sub
pop
jae
arpl
pop
movsl
cmp
adc
cmp
fnop
dec
aaa
xor
divb
or
iret
inc
adc
sbb
iret
mov
insb
sub
pcmpeqw
je
mov
push
or
rcrb
jb
in
in
imul
xlat
inc
dec
lds
and
pop
loopne
dec
adc
cmp
testb
or
jne
push
jg
mov
aas
dec
daa
dec
pop
mov
or
rcrb
adc
rorb
pop
imul
mov
inc
adc
or
sahf
out
and
popf
adc
ret
call
iret
push
pop
add
inc
dec
mov
or
daa
icebp
addr16
push
mov
mov
pop
popf
popa
clc
out
incb
fucomp
daa
pop
movsb
or
xchg
pop
dec
push
push
adc
int3
xchg
fildl
jno
push
sub
jmp
dec
jmp
add
pop
dec
mov
jge
addr16
aam
fsts
mov
dec
sub
ja
bound
push
inc
loopne
jo
pusha
adc
pushf
add
dec
inc
push
and
mov
cli
inc
pop
je
fdivrp
testl
push
add
loop
pop
jne
mov
call
aaa
pusha
xchg
cmp
xchg
stos
cs
in
ss
jmp
mov
push
test
mov
mov
arpl
sub
sti
enter
mov
ds
andl
leave
jl
cs
jns
test
int
aas
jnp
sbb
cmp
push
int3
sub
ret
cmp
jbe
mov
mov
and
sti
or
out
xrelease
mov
mov
and
cli
pop
daa
pop
push
add
cmp
xchg
cmp
push
mov
cmp
loop
daa
cmp
inc
mov
sbbb
shlb
out
jge
push
mov
jmp
lret
fs
rcr
lcall
addr16
add
mov
iret
seta
int3
push
mov
xor
push
xor
clc
in
mov
stc
jp
or
clc
loope
enter
dec
or
push
in
cld
push
leave
aas
xor
pop
mov
out
sbb
mov
xchg
in
inc
sub
loop
sub
sbb
mov
dec
inc
imul
dec
lret
ds
pop
dec
mov
lahf
sub
popa
pop
lods
pop
mov
jae
add
add
xchg
cmpsb
popa
sub
arpl
jb
ret
std
xchg
adc
mov
push
dec
gs
inc
dec
adc
sub
in
test
clc
sub
lods
les
loope
xchg
inc
ss
cmp
sbb
or
pop
shlb
lahf
jge
mov
xor
add
add
cmpsl
mov
clc
or
in
jl
pop
pop
xor
mov
inc
add
fistps
sub
icebp
test
xor
inc
cmpsb
addr16
in
xchg
pop
jne
sub
repz
incl
test
or
jns
jmp
xchg
mov
adc
pop
out
add
and
lcall
and
and
mov
fisttpll
mov
imul
sbb
lret
rclb
lcall
in
mov
lahf
ljmp
push
xchg
mov
fs
jle
lret
scas
into
and
adc
or
lods
jp
popa
or
mov
fldenv
hlt
insl
pop
jb
addb
inc
adc
inc
aaa
xchg
push
sub
mov
das
push
js
sub
stos
jecxz
xor
cli
ret
cmp
jg
das
mov
lds
enter
jp
mov
or
in
add
jns
mov
mov
shlb
sub
jb
mov
lcall
dec
test
lcall
pop
pop
outsl
add
stos
pop
fcoms
insl
cmp
inc
imul
mov
out
adc
lock
out
or
shrb
stos
add
orl
jne
xor
aam
xor
sub
mov
pop
push
stos
xor
scas
js
push
xor
push
setns
adc
pusha
pop
lcall
push
out
jbe
add
imul
rolb
mov
aad
lds
sbb
push
and
call
or
add
mov
rclb
rorb
ja
stos
push
pop
imul
pop
jne
add
mov
stos
mov
mov
xlat
cmpsl
rorl
sbb
push
add
js
push
stc
iret
push
test
nop
pop
orb
xor
add
inc
cmpl
mov
or
push
and
stos
adc
jns
rcrl
mov
xor
ja
int3
lcall
cmp
cmp
mov
adc
inc
shl
andb
pusha
mov
ret
add
ss
adc
addr16
pop
loopne
lds
cmp
outsb
push
inc
cmp
aaa
sarl
mov
lods
lock
cwtl
movsl
add
fdiv
aam
jo
out
mov
jle
jmp
scas
orb
in
push
pop
mov
add
sahf
ret
cmp
xchg
cmp
lds
addr16
nop
mov
pop
cld
xlat
imul
aaa
mov
clc
aas
push
jl
xor
iret
push
push
icebp
aas
pop
ja
test
inc
lahf
dec
push
pop
adc
sub
mov
jae
inc
cmc
pop
clc
sub
outsb
into
or
into
push
adc
cltd
push
iret
jb
jp
cmpb
push
cmpsl
insb
in
jp
add
sbb
mov
dec
cmp
mov
or
lret
xchg
in
jge
dec
xchg
jo
shrb
xor
xor
iret
push
push
sbb
das
xchg
cwtl
pusha
in
lret
xchg
cmc
daa
pusha
lahf
inc
pop
insb
mov
and
mull
jge
mov
mov
icebp
movsb
and
sub
ljmp
pushf
in
or
or
pop
dec
jge
ds
jo
sub
pop
popa
test
mov
rol
pushf
sub
sti
pop
aam
arpl
leave
out
nop
sbb
inc
test
in
gs
inc
clc
movsb
insl
add
jl
nop
push
out
push
sub
pop
outsw
push
dec
les
mov
outsb
xchg
and
test
add
sbb
aas
mov
add
sbb
sbb
or
lret
sbb
xchg
jns
adcb
pushf
nop
cs
cmp
cmp
in
fs
jp
bound
orb
and
mov
icebp
imul
inc
sub
xchg
sub
lods
jno
test
repnz
andb
adc
stos
std
testb
fbld
mov
dec
rcrl
jnp
or
sub
sub
mov
mov
sub
fldl
repz
jle
cmp
mov
dec
addb
or
sub
xor
mov
xchg
in
js
dec
in
rclb
stc
cs
and
mov
xor
mov
sub
cmpxchg
or
xor
pop
inc
or
dec
pushf
out
mov
insl
js
repnz
mov
push
ret
mov
mov
pop
fildl
arpl
loope
sub
loope
and
cmp
gs
data16
cmp
mov
xor
ficoms
daa
ljmp
loope
movsb
lods
dec
rcrl
pop
push
outsb
fdivp
imul
and
js
cmc
and
das
fsubrs
das
sbb
imull
and
dec
push
fs
shlb
js
xor
bound
mov
adcb
adc
pop
iret
aaa
mov
lcall
mov
jnp
lret
jle
daa
inc
mov
daa
shr
into
mov
push
push
mov
in
or
in
lahf
out
repz
int3
cmp
lock
jg
and
push
aad
sub
pop
dec
or
pop
ljmp
inc
dec
cmp
sub
mov
xor
xchg
mov
fsubp
pop
pop
lea
das
xchg
faddl
push
xchg
bound
int
lret
roll
sbb
mov
and
jo
cmp
cwtl
lret
pop
sahf
push
push
pop
mov
inc
mov
add
mov
movsl
popf
dec
mov
xor
cmp
mov
cmc
cmp
sub
push
cmp
push
inc
and
fnsave
aaa
adc
cli
xchg
fldenv
clc
stos
int
fwait
rcl
inc
jne
mov
cwtl
xchg
fstpl
adc
dec
push
jo
adc
inc
push
fprem
inc
pop
movlps
dec
xlat
mov
or
fistpl
xor
xchg
and
icebp
inc
cmp
mov
sbb
sahf
dec
rorb
inc
je
or
sbb
and
mov
cmc
lds
push
hlt
xorb
out
mov
xor
dec
sbb
xchg
aam
imul
in
cmp
scas
dec
scas
test
stos
mov
out
push
sbb
cmpsl
jno
jp
cmp
mov
mov
jae
mov
mov
lock
pop
jb
mov
adc
inc
or
xchg
and
pop
rorb
dec
xor
jnp
or
icebp
mov
mov
loope
out
mov
xor
in
in
jne
dec
mov
repnz
int
subl
fdivrs
shlb
dec
fs
shlb
push
jg
pop
fdivrp
lock
enter
push
shlb
int3
inc
dec
mov
lods
adc
pop
jo
and
repnz
mov
xchg
test
push
xchg
mov
pop
mov
pop
std
pop
mov
add
int
shlb
stos
sub
xor
in
pop
and
pop
clc
dec
or
sbbl
add
ja
jbe
xchg
leave
mov
scas
jb
lahf
in
mov
aad
std
pop
movsl
dec
andl
dec
mov
lea
jne
and
pop
pop
xor
push
adc
push
mov
inc
sub
inc
mov
rcll
mov
testb
pop
in
lds
into
test
ret
ss
pop
xchg
aad
inc
fimull
jle
or
je
incl
das
int3
insb
mov
dec
jno
mov
lcall
lea
fdivrl
cmp
jns
xchg
add
int
jp
ret
jnp
lret
push
pop
icebp
das
pop
adc
adc
in
mov
push
aam
cwtl
or
pop
aam
jae
cmp
xor
imul
jb
mov
jge
add
movb
fidivs
jbe
mov
rorb
call
push
je
push
mov
lods
pop
imulb
fisttpl
stos
dec
add
dec
add
xchg
mov
push
int3
push
jae
in
xchg
push
enter
jg
pop
shl
jecxz
inc
cmp
in
or
int
xor
sahf
inc
jmp
adc
sbb
fcomip
add
iret
mov
cmp
add
add
lret
pop
ja
push
lods
or
and
outsb
jns
inc
inc
pop
icebp
cmpsb
dec
push
loope
xchg
sub
enter
je
fiadds
lds
or
xchg
cltd
mov
movsl
sub
daa
add
push
outsl
jge
into
filds
ljmp
cmpsb
mov
sarl
jge
fisubrl
dec
stos
adc
into
sbb
f2xm1
inc
aam
jg
fldcw
xchg
xor
cmp
test
xchg
sub
clc
adcl
dec
add
mov
sahf
jp
mov
and
andb
mov
repz
in
js
cmp
in
das
mov
pop
mov
mov
cwtl
dec
push
clc
cs
fists
pop
cmp
mov
insb
ds
rorl
outsl
push
or
out
int3
fsubs
push
movsl
in
les
les
ss
sbb
das
cli
aad
cmc
ficomps
mov
popa
movsl
out
cltd
jge
xlat
jne
pop
int3
jmp
adc
rcrl
shlb
ja
pop
push
cltd
ja
xchg
int3
popa
faddl
in
out
fldcw
push
and
rorl
insl
outsb
inc
popf
imul
inc
mov
into
bound
daa
mov
or
mov
xchg
sbb
pop
push
add
or
fimull
mov
push
xchg
mov
adc
lahf
fcomps
fsubrp
ds
iret
xor
or
or
into
mov
pop
mov
add
jge
cmpsb
stos
shll
pop
inc
mov
or
imul
cs
inc
dec
out
or
adc
into
out
mov
inc
pop
sbb
pop
ret
or
push
mov
mov
test
cmc
scas
add
sub
push
sub
mov
mov
add
jbe
add
ds
push
jle
popl
adc
cld
xor
hlt
jecxz
inc
mov
mov
or
jmp
sbb
out
and
pop
or
xchg
roll
adc
xchg
stos
pop
mov
adc
fdivrs
and
inc
les
shlb
jne
bound
test
inc
add
daa
fwait
getsec
in
or
jg
xlat
inc
gs
pop
sbb
lcall
pop
xchg
lea
outsl
cld
addr16
xchg
int3
xor
jge
insl
xor
push
or
and
aad
mov
inc
out
xchg
push
xchg
add
pushf
mov
cmpsb
pop
add
cmp
leave
xchg
dec
and
aas
test
fbld
xor
and
rclb
jns
cli
mov
or
xchg
test
push
add
mov
xor
cmp
icebp
sub
arpl
lcall
or
adc
and
mov
dec
jo
loop
jle
dec
add
push
lret
out
mov
mov
xchg
stos
pop
pop
repnz
nop
repnz
inc
add
push
mov
mov
mov
mov
mov
cs
add
pop
or
jmp
mov
xchg
jecxz
in
sub
cmc
lds
nop
cmp
cmpsb
aam
shl
inc
rorl
fstl
leave
adc
dec
hlt
call
lods
jb
mov
movsb
iret
xor
rorl
mov
int3
inc
add
add
hlt
cwtl
shr
add
loopne
dec
sbb
je
pushf
enter
mov
stos
inc
lcall
in
clc
cltd
ficoml
jb
insl
jne
pop
push
movsb
into
add
fisubrl
andl
movsl
fnstcw
push
mov
cmp
mov
push
jnp
sbb
insb
adc
pop
divl
push
or
fmull
mov
test
pop
lret
cmp
mov
lods
mov
icebp
and
lods
sbb
and
hlt
sub
iret
imul
out
lds
mov
inc
fistl
outsb
lock
mov
mov
cli
stos
je
clc
pop
xchg
pop
clc
sub
jmp
sub
pop
bound
jmp
cld
mov
add
lods
and
xor
in
std
mov
push
lock
rcll
mov
pop
inc
cmp
xchg
mov
inc
fimuls
shl
gs
sbb
inc
inc
pop
push
jge
mov
shr
cmpsb
call
sahf
mov
mov
stos
sub
popf
jnp
xchg
repz
sbbb
jae
sbb
scas
cld
mov
inc
out
push
mov
xchg
cld
addr16
cwtl
mov
push
mov
add
arpl
push
cmpsl
lret
fcmovbe
push
push
ret
test
roll
ja
cmpsb
frstor
idivl
pop
jmp
add
scas
adc
fidivl
mov
pop
mov
adc
push
sbbb
or
in
leave
imul
or
and
out
sub
add
cmp
mov
xor
mov
fdivrl
and
int3
pop
push
fisubl
xchg
sbb
jo
cmp
in
mov
xor
push
and
fldln2
sti
mov
mov
push
inc
sbb
fistpl
loop
jecxz
negl
pop
sbb
mov
push
sbb
cmpsb
sti
sbb
cltd
push
stos
mov
cmp
mov
addb
js
jp
xor
cld
out
and
pop
daa
pop
push
add
mov
test
fstpl
push
pop
mov
mov
xchg
ret
lret
int
push
loope
sub
pusha
xor
daa
fidivrl
xor
ror
int
and
test
aaa
fsubr
and
rolb
or
sbb
mov
or
pop
dec
xchg
sbb
stos
push
mov
ret
rorb
mov
fisttpl
or
adc
or
ljmp
fs
add
aaa
pop
nop
mov
sbb
add
fnstcw
push
jne
add
in
je
jne
dec
lea
mov
loop
fmull
call
mov
xchg
je
mov
xor
cmc
and
loope
nop
pop
pop
sub
xor
adc
aaa
in
fsub
push
cmp
mov
mov
je
xor
sbb
inc
and
push
sbb
cmpsb
mov
or
jl
cmp
xor
repnz
xchg
push
test
hlt
iret
out
sbb
in
ja
lods
cmc
xor
mov
jmp
dec
int3
aad
stos
ja
or
and
cmp
xchg
outsb
cmp
push
add
lods
hlt
stos
push
jecxz
fidivrl
in
or
mov
xchg
test
xchg
in
clc
dec
repz
into
adc
adc
inc
fcomi
or
xor
pop
inc
jbe
mov
scas
push
test
push
ljmp
inc
adcb
leave
mov
mov
fnstsw
jae
jg
mov
in
std
and
ficomps
xchg
inc
cs
pushf
test
mov
mov
in
inc
outsl
mov
mov
adc
jne
dec
add
inc
fwait
push
push
push
sbb
shlb
cs
fistl
add
cli
add
aam
jbe
popf
cli
out
iret
cwtl
out
cmp
xlat
mov
jnp
stos
xchg
call
mov
insb
xor
fwait
outsb
dec
insl
fisttpl
add
xlat
lods
push
xchg
mov
cmpsb
imul
lea
xchg
addr16
add
push
test
mov
sbb
xchg
sti
es
inc
ret
jns
outsb
mov
and
pusha
nop
mov
adc
insl
cmp
pop
adc
cmp
sub
adc
fwait
add
and
sub
lret
xor
xchg
shrb
stc
lock
aas
std
lret
lcall
test
imul
mov
and
js
repz
push
loope
mov
inc
int3
les
xor
lahf
enter
int
clc
push
pushf
or
in
lea
mov
loop
out
sub
icebp
xchg
and
mov
add
scas
add
inc
arpl
mov
inc
dec
xchg
sbb
pop
jge
mov
movsb
shll
xor
mov
sub
mov
mov
int3
je
sbb
jbe
mov
jb
mov
dec
cs
push
jge
ljmp
fwait
shrl
xor
xchg
daa
and
xor
andb
scas
inc
sub
add
daa
push
mov
nop
mov
ljmp
imul
inc
jecxz
lcall
mov
jae
mov
add
and
or
xchg
xor
dec
xchg
sarb
mov
lcall
clc
sub
sbb
add
test
sub
xor
mov
mul
lahf
sub
test
out
dec
xor
adc
setne
inc
daa
mov
psrlw
jne
pop
fnstcw
loope
mov
adc
pop
mov
adc
int3
inc
jne
jp
xor
mov
push
jmp
data16
cmp
push
mov
jne
jnp
jl
xchg
scas
or
repz
mov
push
push
jb
cltd
sub
mull
sbb
outsl
mov
sti
or
and
test
adc
mov
sub
cmpsl
jle
stc
cs
xor
cmpsl
jmp
shll
inc
xchg
in
push
repz
pop
sbb
test
pop
cmpsb
bound
loopne
ja
pop
aaa
ret
inc
xlat
xor
popf
xchg
add
lcall
pop
call
movsb
or
xor
cmc
fstp
jle
sub
pushf
ja
jae
fmull
mov
mov
jl
pop
in
jnp
pop
xchg
pop
fcmovbe
inc
xchg
test
pop
add
jp
repnz
push
gs
inc
jae
push
push
push
xor
inc
lea
sbb
icebp
mov
push
or
xchg
in
lahf
sbb
pop
lret
jnp
cwtl
cmpsb
and
mov
rorb
add
aas
mov
in
pop
aad
subb
mov
dec
pop
jae
inc
cmc
ror
xchg
mov
push
push
rcll
int
sbb
imul
test
call
add
enter
jecxz
pop
mov
cmp
icebp
jo
jge
mov
or
add
aad
fcompl
sub
idivl
jae
add
cmp
call
popf
mov
xchg
cmp
jns
out
pop
int
bound
sbb
pop
inc
push
adc
adc
push
inc
pop
cmp
mov
push
mov
add
daa
sub
jno
or
das
mov
sub
mov
bound
and
in
iret
pop
rcll
mov
jo
mov
lds
aas
subl
and
inc
ss
pop
jg
ret
lret
pop
ficoml
pop
jge
fisubrs
pop
adc
and
sbb
adc
add
notb
stos
out
cmp
hlt
shll
mov
dec
insb
andb
imul
popa
adc
int
adcb
push
or
push
mov
sub
scas
push
lahf
and
push
pusha
or
dec
std
push
popa
jge
sarb
mov
mov
scas
fwait
cmc
movsl
push
adc
les
sbb
pop
jmp
lods
fwait
xchg
pusha
out
inc
out
jge
sub
xchg
push
and
jecxz
js
in
inc
fidivrl
fwait
pop
sub
cmc
cmpsl
xchg
lds
and
imul
inc
psubsb
aam
cmpsl
mov
and
jno
pop
xchg
loopne
pop
and
loopne
mov
pop
out
ds
pop
sub
mov
idivb
xchg
loopne
lret
and
dec
sbb
mov
push
ljmp
xchg
negb
test
xchg
imul
mov
mov
in
mov
rcrb
cld
imul
xchg
sub
mov
and
popa
sub
pop
imul
ret
sahf
lret
shrb
adc
xor
mov
fnsave
scas
sub
inc
and
inc
pop
lock
jnp
lret
push
inc
das
mov
icebp
mov
inc
or
test
rcl
imul
and
pop
push
lds
rol
ds
repnz
pushf
nop
jecxz
sbb
xchg
dec
fbstp
push
adc
shll
inc
cli
imul
ds
orl
mov
gs
shrb
mov
popa
adc
out
test
scas
lods
popf
out
insb
mov
inc
add
and
push
jmp
sbb
ror
and
push
mov
inc
add
xchg
stos
fcomps
repz
push
sub
cmp
sbb
cmp
xor
xchg
mov
mov
cmp
daa
inc
sub
xchg
mov
push
jnp
sub
popl
xchg
mov
mov
sub
dec
sbb
test
sub
jo
cwtl
and
lods
jmp
mov
push
aad
xor
mov
or
cld
jno
fidivs
mov
jno
leave
bound
outsl
aaa
rcrb
test
rcrb
fisttps
ja
scas
es
sub
lods
adc
std
mov
cmp
add
stos
fs
test
and
lods
outsb
insb
cmpsl
jmp
add
fnstsw
add
andb
pop
es
cmc
cmp
cmp
and
sub
push
lahf
icebp
sub
xor
pop
out
adc
lods
adc
movsl
sub
mov
pop
mov
je
lret
xchg
imull
xchg
lret
mov
shrb
repnz
push
add
outsl
daa
push
and
rorb
lds
lock
mov
and
cld
adc
xchg
add
mov
mov
and
jne
into
pop
cmc
ljmp
stos
fnsave
sti
mov
jne
sbb
and
jl
push
rcrl
jnp
imull
aas
cltd
add
sahf
xor
add
loope
mov
dec
jge
mov
mov
jp
into
adc
pop
pop
jp
nop
sbb
inc
scas
ljmp
pop
movsb
xor
cmp
xor
shll
and
test
neg
movsl
or
pop
into
sbb
and
jecxz
iret
iret
jp
js
dec
cmp
push
ds
pusha
jns
pushf
lcall
sub
pop
add
mov
pusha
xchg
out
cli
lret
lods
divl
sub
fidivrl
jne
fwait
sub
jo
adc
loop
push
sub
push
or
xchg
pop
cmp
push
jle
inc
sbb
and
fidivrl
and
nop
cmp
pop
cbtw
or
ja
add
ret
aas
pop
scas
pushf
dec
xchg
xor
sbb
pop
jmp
imul
jle
stc
nop
and
and
push
popf
cltd
fmull
xor
mov
xchg
xor
add
clc
aaa
or
lods
call
push
xor
loope
cmp
cmpsb
jp
xchg
pop
das
lods
or
loopne
push
xchg
daa
adc
mov
jno
add
shlb
xlat
inc
iret
fidivs
test
mov
dec
iret
push
ss
dec
cmp
lret
jo
jmp
int
mov
jmp
xchg
clc
or
push
adc
add
ret
fs
mov
xor
dec
test
fcmovu
adc
dec
add
jge
shlb
scas
insl
mov
cmpsb
xlat
popa
push
jecxz
xor
testb
sub
popf
xchg
or
and
fldcw
dec
mov
insb
add
test
xchg
xor
mov
std
les
mov
jmp
mov
aam
cmpsl
pusha
rorl
push
sar
pop
les
jb
jp
pop
sahf
xchg
lahf
jae
dec
dec
je
mov
inc
jmp
mov
mov
mov
bound
fdivs
fildl
mov
cmp
sub
pop
enter
mov
aaa
nop
loop
push
mov
jb
int
insl
es
movsl
push
mov
mov
ffree
imul
adc
xchg
or
mov
repnz
sub
mov
mov
jecxz
and
aas
leave
mov
mov
loopne
dec
jle
xor
push
jmp
inc
cmpsl
cmpsl
inc
pop
and
xchg
mov
mov
jbe
jge
push
aaa
sbb
sub
lods
adc
mov
or
test
adc
mov
inc
jns
push
mov
sub
jge
das
adcl
jne
enter
lret
sub
inc
xchg
mov
sbb
negb
out
jecxz
cmp
call
nop
test
cmpsb
mov
or
orb
lahf
xor
ds
imul
xchg
cwtl
enter
dec
in
or
mov
iret
ret
daa
scas
jae
out
pop
inc
in
jnp
scas
jge
pusha
xchg
jbe
test
pusha
mov
mov
or
int3
cltd
cmpsl
inc
sbbb
lds
test
sub
xor
rol
jle
movsb
jge
sahf
lret
dec
and
inc
loop
dec
int
es
cli
mov
lcall
add
or
dec
das
dec
ret
insl
test
lcall
jnp
and
jno
pop
or
faddl
jns
xchg
fidivrl
sti
rolb
out
jl
or
mov
pusha
sti
mov
inc
movsl
cmpsb
in
pop
das
jae
scas
lea
sub
cmp
sbb
adc
add
shlb
lods
lahf
pop
fwait
xchg
in
mov
outsl
mov
lahf
test
cmp
ss
out
inc
jl
sub
ljmp
dec
mov
rcrb
inc
cltd
pop
shlb
jae
push
xor
sbb
mov
and
xor
push
pop
mov
sbb
stc
sub
push
mov
jl
sub
sub
cmp
xor
aas
stos
lret
test
cmpsl
pop
or
scas
enter
or
xor
mov
hlt
push
in
repz
pop
hlt
lahf
dec
mov
fsubrl
addr16
leave
test
fsts
pop
mov
ss
dec
arpl
or
xor
adc
out
jbe
dec
jns
fst
sbb
xchg
jns
push
test
std
imul
jo
out
in
stos
hlt
dec
adc
jmp
sbb
pusha
mov
xchg
xchg
in
xor
mov
push
xchg
or
cmpb
mov
cmp
inc
sahf
xor
dec
push
inc
mov
jae
xchg
xchg
rcl
jbe
push
out
jnp
fidivrl
xor
arpl
clc
repnz
mov
fisubrl
xor
sub
in
push
mov
jnp
cld
and
mov
mov
mov
leave
add
jae
inc
pop
shrb
xchg
gs
mov
or
jl
push
mov
xchg
loope
push
mov
loop
sub
loope
dec
push
inc
mov
nop
fmull
jnp
mov
cs
and
push
add
flds
cltd
insl
insb
mov
idivb
loope
mov
push
push
mov
mov
cmp
mov
cmp
sbb
iret
into
fisttpl
hlt
inc
in
ja
hlt
mov
dec
stos
outsb
mov
cmc
xor
rorl
test
pop
or
add
mov
cmp
adc
inc
xchg
add
sarb
clc
mov
add
or
push
or
neg
stos
pop
rol
aas
and
cwtl
dec
add
adc
and
cwtl
into
insl
push
xor
inc
pop
jmp
add
xor
and
loope
incb
xchg
pop
xor
bound
sbb
add
mov
fcoml
pop
aaa
push
push
pop
popf
cmp
push
jo
inc
mov
adc
fs
fcomps
repz
xchg
adc
je
pop
sti
mov
dec
or
out
add
dec
mov
mov
jo
jp
and
leave
adc
cwtl
xchg
lds
jp
inc
push
or
adc
inc
mov
xlat
ja
cmp
pop
insb
sbb
mov
subb
dec
rcrl
incl
leave
call
mov
in
mov
dec
jns
mov
or
jbe
and
int
out
lods
outsl
shrl
nop
sub
imul
into
mov
pop
mul
rorb
push
mov
mov
iret
popa
daa
mov
icebp
ja
cs
adc
jmp
loopne
push
mov
je
loopne
movzbl
stos
out
test
xchg
std
mov
cmp
repnz
ja
outsl
movsl
enter
xchg
out
int3
push
fists
lahf
addr16
mov
or
jns
lds
xor
xchg
xlat
outsb
inc
je
int3
test
in
in
lea
mov
cmp
fld
xchg
insb
mov
lret
cld
inc
pop
sub
push
inc
shrb
adc
pop
add
fsubrs
xchg
cltd
fmull
ret
mov
bound
negb
ljmp
pop
inc
iret
mov
sub
adc
push
pop
imul
into
ror
fmull
orb
cltd
mov
sub
imul
xchg
lret
jns
xchg
jnp
xchg
in
jmp
out
call
xchg
mov
push
js
lods
sbb
adc
sub
and
cmovs
push
jo
cwtl
popa
gs
sbb
xchg
adc
std
cli
push
push
xchg
cmp
pop
jl
mov
rcrl
mov
aaa
dec
lea
test
lea
mov
test
fcmovu
insl
stc
mov
addr16
lods
test
lods
cmp
test
rorl
std
xor
add
adc
push
into
jmp
decl
xchg
pushf
cld
inc
dec
cld
sbb
xchg
aad
bound
loop
push
out
inc
adc
mov
je
lcall
ljmp
in
arpl
in
imul
ficomps
in
aam
xchg
inc
lea
movsl
scas
movsb
cmc
xchg
push
adc
rcrb
dec
pop
pop
jle
in
sub
jns
or
push
jnp
jecxz
iret
jge
mov
lahf
and
cli
jmp
bound
xor
mulb
cmpsb
mov
shl
push
inc
mov
addr16
movsb
cmpsl
jne
daa
std
jnp
leave
fwait
nop
or
xor
jg
dec
jg
pop
push
push
push
dec
fsubs
xor
sbb
mov
das
sbb
sbb
xchg
ja
test
inc
mov
neg
mov
stos
pop
iret
ljmp
scas
pushf
mov
jg
push
test
ret
adc
incb
xchg
mov
inc
push
fidivrl
popf
subl
fs
xchg
mov
stos
jb
sub
out
sub
inc
jge
mov
push
push
pop
mov
mov
sub
pop
xor
dec
scas
adc
pop
fiaddl
dec
push
fdiv
out
jo
cmp
push
xchg
idivb
lods
clc
adc
xor
nop
in
jecxz
xor
test
nop
ljmp
adcb
loopew
aad
jp
xor
lods
popf
outsb
mov
test
movsl
lds
jle
jne
into
lods
xchg
ror
in
in
mov
lds
add
xchg
fwait
loop
dec
mov
mov
ljmp
fidivs
cmp
jns
ja
outsb
call
adc
pop
outsb
dec
inc
es
adc
adc
cmpb
mov
inc
rcrl
cmp
sbb
jnp
es
push
xor
adc
bound
cmp
lods
fnstcw
test
jb
sbb
cli
add
add
sahf
push
gs
inc
sbb
inc
mov
or
mov
dec
imul
les
adcl
aas
jbe
sar
lret
fsub
mov
loope
mov
pusha
out
stos
aad
gs
aas
jae
fwait
adcb
cmp
jns
sub
xabort
shl
xor
pop
inc
push
add
lret
jl
adc
cs
dec
xor
testb
adc
mov
xor
and
notl
lahf
or
test
outsl
xchg
dec
ds
cmp
pop
push
call
les
add
sti
leave
enter
fisttpl
xchg
hlt
ja
sub
mov
sub
hlt
xor
scas
cmp
jl
mov
jg
filds
push
icebp
mov
and
jnp
xchg
repz
push
or
push
xchg
dec
cmc
jecxz
adc
mov
mov
fucom
call
cs
jo
in
data16
add
xchg
sub
jg
ss
js
pop
or
pop
lock
subb
mov
leave
pop
add
xor
repnz
mov
idiv
gs
int3
dec
fisubrs
ds
jbe
mov
sbb
push
shll
ljmp
pop
pop
aad
jb
test
pusha
jbe
sub
sbb
adc
push
addb
inc
push
jb
cmp
sahf
xlat
loope
adc
mov
sti
mov
mov
sub
sub
add
int
xchg
cmc
mov
dec
fsubrp
and
fiadds
cmp
lret
ret
push
mov
pop
pop
es
jo
mov
shrb
into
in
fidivs
lret
out
sbb
mov
pop
inc
mov
insl
scas
mov
inc
inc
mov
in
test
sub
sub
mov
xchg
adc
iret
out
dec
jo
outsb
mov
mov
cmpl
in
inc
jle
inc
jecxz
jns
loop
and
ret
outsl
xchg
dec
jno
in
push
xchg
pusha
test
int3
aad
mov
aam
mov
xchg
dec
cmp
mov
mov
cmp
lea
shll
fldl
pusha
int
addr16
in
test
flds
mov
sub
xor
mov
pop
into
fdivrl
and
cmp
xor
lret
test
pusha
and
out
push
xor
into
rclb
and
adc
mulb
pop
sub
int3
lret
xorl
pushf
dec
ja
adc
jbe
popf
hlt
sub
cmp
add
mov
dec
aam
imul
xchg
fisubl
loope
pusha
daa
pop
xchg
out
out
cmp
cld
mov
jge
pop
das
rcl
cmp
adc
sub
and
cmp
or
adc
pop
dec
jmp
call
jl
dec
push
and
add
mov
dec
dec
mov
pop
cs
sbb
xchg
addr16
jmp
cmpsl
sbb
sub
testl
inc
cmpsl
sbb
dec
cmp
pop
mov
les
push
adc
movb
into
mov
call
outsl
insl
stos
pop
int
sti
inc
xchg
and
scas
pop
xor
adc
push
data16
adc
movsb
push
jecxz
inc
sub
sbb
repz
add
daa
lods
mov
adc
inc
mov
popa
sub
mov
lret
jl
rcrb
pop
and
stos
mov
jne
xchg
pop
loope
ret
es
xchg
mov
rolb
fisubl
cmc
xchg
inc
sub
sti
cmp
or
fidivrs
cmp
lds
mov
mov
cltd
out
scas
pop
xchg
add
stos
div
addr16
pop
andb
hlt
popa
and
stos
scas
orb
call
push
sbb
pop
in
test
loop
cmp
push
sbb
decl
lret
mov
lahf
fsubrl
sbb
pop
or
lahf
lahf
aam
fstpt
adc
les
pop
sbb
cmp
adc
orl
addb
mov
push
leave
or
xor
sti
mov
cli
xchg
push
mov
or
cmp
scas
aaa
shlb
push
add
push
lahf
fs
icebp
fldlg2
stc
lahf
jge
sbb
std
aas
movsl
or
add
xor
lds
dec
lods
dec
adc
inc
jnp
hlt
mov
bnd
jp
mov
cwtl
arpl
cli
decl
in
pusha
loopne
sti
mov
data16
pushf
nop
mov
int3
xor
and
push
dec
cmp
add
fidivrs
in
das
mov
adc
int3
in
push
push
cwtl
mov
pop
xchg
data16
hlt
sarl
into
xchg
test
testb
and
insl
fmuls
inc
fs
ret
adc
dec
mov
xchg
bound
xchg
inc
iret
imul
insl
mov
lcall
jmp
and
pop
je
or
mov
adc
inc
cld
pop
lods
aad
je
rorl
push
inc
xor
daa
xchg
or
icebp
push
mov
lods
loopne
jle
sahf
rclb
cmp
cltd
and
aad
stos
loop
inc
jecxz
jl
push
xchg
pusha
mov
lahf
inc
ss
pushf
lahf
mov
pop
add
outsl
faddl
out
test
inc
push
mov
sub
xor
sub
pop
aas
jl
or
ret
and
scas
jecxz
mov
jbe
aaa
sub
mov
pushf
pusha
dec
push
mov
pop
xchg
sbb
stos
pop
enter
inc
insl
jle
and
push
push
xchg
scas
in
pop
out
fucomp
stc
cmp
dec
mov
jle
dec
daa
push
jmp
adc
inc
jge
mov
std
hlt
ljmp
or
movsb
cmpsb
xor
or
or
gs
xlat
pop
dec
mov
push
arpl
lcall
sub
cmpsl
push
loop
hlt
jmp
jns
mov
inc
mov
dec
mov
adc
inc
adc
mov
dec
and
or
sub
mov
pushf
dec
cmp
mov
sbb
inc
mov
cmp
dec
add
rcrl
loop
arpl
adc
imul
jb
add
in
xchg
cmp
in
mov
mov
push
sbb
lret
sub
repnz
loop
test
hlt
cmp
or
into
arpl
add
cli
fwait
repnz
cmpsl
xlat
dec
add
push
lret
lods
mov
inc
mov
fdivrp
nop
or
aaa
lret
out
or
push
push
filds
mov
mov
les
jns
mov
or
test
adc
sbb
das
sbb
mov
jae
sbb
adc
or
jo
push
incb
pop
or
pop
mov
in
jl
lahf
sub
test
and
pop
jae
xor
movsb
fsts
pop
jl
popa
test
push
outsb
outsb
nop
insl
adc
loop
addr16
and
push
sub
mov
fstps
and
inc
test
sub
mov
call
repnz
cmp
cmp
popf
mov
mov
mov
mov
out
add
mov
xchg
in
ljmp
inc
add
clc
inc
inc
mov
push
insl
dec
ljmp
test
mov
cmpsl
call
fwait
shlb
push
or
mov
sub
adc
or
jle
jmp
loope
jecxz
and
pop
enter
fwait
repnz
dec
pop
sbb
pusha
ds
cmc
adc
cmp
adc
pushf
out
frstor
cli
icebp
or
fistpll
cmpsb
loopne
add
mov
xlat
test
adc
cwtl
jns
orl
jle
adc
xor
adc
mov
pop
cmp
lahf
aad
mov
dec
cltd
pop
mov
je
mov
xor
sub
mov
xor
mov
add
and
notb
stos
adc
out
nop
push
and
fdivrs
std
stos
push
inc
lret
mov
rolb
movsl
push
ret
add
stos
mov
mov
jb
mov
sahf
std
jp
xchg
shl
jl
sbb
enter
inc
xlat
sub
sti
inc
mov
mov
push
mov
mov
push
sbb
or
mov
adc
dec
jecxz
mov
push
lods
hlt
in
pop
movsb
nop
cld
or
loopne
movsl
idivl
cmpsl
imul
ret
sub
shll
es
paddsb
jl
xchg
mov
jne
hlt
xchg
xor
leave
pcmpgtd
imul
fists
mov
add
cmc
pop
inc
fadd
cwtl
mov
aaa
movsb
adc
aaa
je
lret
insb
je
es
xchg
and
xchg
fists
popf
insl
jb
inc
cmp
mov
lret
mov
inc
push
xchg
xchg
mov
in
pop
push
call
jecxz
pop
dec
cmpsb
xchg
pop
push
xchg
sbb
pushf
dec
mov
and
cmp
or
stos
loopne
inc
hlt
stos
iret
ljmp
aad
es
loopne
icebp
jnp
inc
pop
popf
aaa
push
iret
arpl
add
mov
inc
cmc
in
hlt
ret
pop
imul
stos
xlat
add
fidivl
push
inc
enter
out
test
loope
cmp
or
xor
push
mov
adc
hlt
jne
pop
fistpl
andl
in
rcr
sub
pop
adc
ret
fscale
lds
aad
es
inc
or
cmp
test
dec
jle
adc
aam
icebp
cld
pop
xchg
mov
mov
shrb
xor
sub
inc
and
lock
add
aaa
lods
push
es
add
jmp
jecxz
xchg
and
mov
inc
push
aas
int
cmpsb
or
push
xlat
fcoms
iret
adc
or
dec
test
lret
ret
sti
fsubrs
rorl
sbbl
std
mov
in
xchg
adc
adc
push
shl
fisttps
dec
sarl
push
in
scas
adc
adc
inc
pusha
sbb
xor
mov
mov
or
pop
aad
fs
pop
adc
mov
sub
repnz
or
sarl
repz
ret
pop
jae
aad
fstpt
inc
mov
jge
or
daa
cmpsl
sbbb
push
xchg
xor
lcall
xor
sbb
pop
jns
inc
sbb
xor
clc
mov
lcall
ret
fmull
insb
mov
and
pop
out
xchg
iret
lds
enter
dec
test
xor
xlat
jecxz
cltd
nop
out
inc
loop
in
push
clc
push
arpl
add
gs
add
repz
gs
dec
dec
push
cmpsl
xchg
pop
mov
pop
sbb
mov
in
leave
and
adc
lea
mov
or
outsl
into
and
inc
dec
mov
test
in
mov
inc
test
insb
aad
jb
dec
sbb
mov
popl
mul
push
push
xor
lcall
subb
mov
cmp
add
push
loop
push
scas
cmpsb
pop
scas
mov
lods
das
mov
push
fisttpll
jb
sti
add
or
xor
mov
loopne
pop
and
xor
bnd
lahf
cs
aam
loop
aas
mov
test
stos
fdivrl
adc
jp
sub
mov
enter
stos
fimull
pop
es
fwait
dec
scas
dec
inc
call
adc
pop
and
pop
and
imul
mov
cmp
add
sbb
adcb
and
sahf
mov
sbb
data16
dec
and
xchg
xchg
dec
ds
mov
xchg
add
leave
mov
lcall
sbb
lret
add
cwtl
fisttpl
cwtl
pop
ret
jle
adc
lock
enter
jns
adc
lret
add
mov
adc
jae
stos
or
movsl
cmp
aad
iret
aaa
and
in
insb
adc
aas
push
cmp
fsubrl
das
jmp
loop
sarb
int3
in
lret
test
out
xor
pop
loope
and
mov
sub
movsb
and
aam
ret
dec
les
cmp
pop
sub
and
mov
sub
popf
mov
jae
dec
fists
daa
ss
mov
out
mov
movsl
aam
mov
sub
clc
leave
cmp
xchg
out
push
daa
fpatan
mov
or
jecxz
or
clc
lods
adc
cmp
roll
insb
mov
mov
psllq
fcomi
mov
outsb
jns
sahf
sub
xchg
negb
push
aad
in
adc
cli
stos
lret
scas
mov
daa
ljmp
lock
push
sub
pop
and
mov
fnstcw
cmp
and
sub
lret
push
movsb
cltd
outsb
inc
cli
repnz
popf
jbe
sub
es
inc
out
subl
or
sar
dec
add
mov
stc
mov
ja
mov
mov
fisttpl
jge
out
aaa
loope
out
sbb
push
sub
xor
insb
and
pop
dec
mov
sub
push
jle
sub
mov
lcall
popa
xor
in
cmpsl
jno
loopne
sbb
adc
fcmovne
loop
pop
pusha
scas
dec
or
in
cltd
addb
or
aaa
cmp
adc
testl
out
xchg
lret
mov
mov
pop
pop
pushf
mov
pop
cwtl
pop
xchg
lods
dec
test
xor
mov
push
inc
dec
fs
mov
mov
aam
sahf
inc
pusha
dec
add
sbb
cmp
jo
test
jmp
shr
mov
push
out
rcl
push
movsb
jmp
loop
push
mov
cmp
xchg
icebp
or
aam
pop
loopne
cmc
cmp
add
xchg
xor
xchg
mov
inc
lock
jle
xchg
fiadds
mov
adcl
sbb
or
jo
jecxz
jg
ds
xchg
ror
mov
call
adc
or
or
inc
stos
mov
jl
bound
repz
mov
xchg
jp
test
popa
int3
push
adc
mov
orb
push
jge
or
gs
xchg
jge
and
out
inc
sbb
js
pop
mov
adc
fcoml
addr16
test
xor
mov
cmpsl
adc
fwait
jp
popf
div
aam
lret
testl
cmp
ret
shlb
cmp
dec
fmulp
and
in
stc
xchg
ss
jb
test
jmp
mov
push
fdivrs
sub
cmc
leave
xchg
sbb
cmp
test
int3
pop
stc
or
inc
xchg
cmp
frstpm(287
jecxz
ret
cmp
out
xchg
add
rcr
adc
and
out
mov
mov
mov
idiv
orl
xchg
lock
je
in
or
test
test
cltd
dec
jmp
pop
subb
push
mov
or
sbb
pop
shr
and
outsb
inc
mov
into
cmp
divl
imul
sbb
pop
lods
sbb
ret
pop
xor
outsl
call
das
mov
push
into
mov
aad
mov
dec
mov
mov
xchg
pop
in
sbb
enter
insb
mov
adc
imul
loopne
or
nop
dec
push
or
push
sbb
mov
jnp
scas
loope
mov
sti
mov
out
jb
mov
gs
sahf
outsl
adcl
scas
xchg
push
push
pop
sub
mov
xchg
ret
push
pop
test
mov
add
scas
out
or
pop
leave
test
loopne
push
rcr
test
test
cmp
hlt
cmp
arpl
sub
cmc
pop
bound
inc
pop
je
outsl
popa
nop
gs
jg
mov
and
sbb
jmp
and
fcmovnu
nop
or
mov
nop
push
vprotb
test
test
or
cmc
inc
adc
jo
cmp
pop
jne
orb
fsubrs
incb
int
outsb
sbb
iret
mov
out
cld
loopne
mov
and
hlt
xchg
addb
jae
stc
xchg
jmp
out
jle,pn
lods
mov
les
ret
or
adc
rorb
xchg
xor
xor
jmp
push
scas
fldcw
rcl
loop
mov
adc
negl
icebp
dec
movb
fwait
adc
mov
subb
inc
inc
out
xchg
sbb
sbb
andl
test
sti
ja
cmpsb
lahf
repnz
push
test
fwait
xchg
mov
jns
clc
sub
cmpsl
mov
jle
fidivrs
fcomps
jns
xlat
test
xor
pop
jp
sub
xlat
inc
leave
inc
outsl
fdivl
hlt
jae
sbbl
es
hlt
xchg
lea
push
call
mov
lea
std
and
mov
jb
dec
mov
xchg
hlt
ret
pop
and
lea
ja
push
jp
mov
jbe
xor
icebp
cmp
pushf
fwait
pmaxsw
int
jbe
sahf
pop
cmpsb
and
daa
lret
dec
dec
mov
inc
mov
aas
aam
and
cmp
filds
cmp
loope
movsl
mov
adc
sbb
push
jae
rcrl
cli
dec
outsb
xor
das
ja
mov
mov
sbb
pop
pop
lods
push
out
pop
push
add
xchg
ss
add
in
dec
sahf
mov
divb
dec
lock
sub
xchg
loopne
jle
xchg
enter
xchg
or
mull
cmp
push
push
js
hlt
mov
sub
lea
fiaddl
adc
stos
repz
mov
mov
dec
sub
mov
roll
jmp
xchg
scas
loop
rcll
subl
fidivl
dec
pusha
cmp
push
outsb
pop
aad
loope
or
enter
stc
cmp
xor
lret
rorb
adc
icebp
fwait
mov
stos
inc
les
jle
btl
mov
jnp
mov
movnti
add
inc
or
jb
insl
lcall
jecxz
loopne
jns
ja
stos
insb
shrl
dec
sahf
int3
test
cmpsb
call
push
es
or
xchg
push
inc
xor
fidivs
cli
inc
hlt
dec
push
or
dec
jnp
fldt
lds
test
stos
lcall
jmp
dec
lret
adc
shrl
mov
or
clc
mov
xor
idivl
sbb
dec
dec
ffreep
mov
sarl
dec
loop
push
popl
and
pusha
fbld
popa
or
fnstenv
xor
nop
xor
je
push
adc
das
dec
lret
cmpsl
shr
adc
xorl
test
inc
and
mov
inc
xchg
jge
out
daa
add
test
add
test
mulb
cmpsb
ja
dec
and
imulb
cli
loop
xor
lods
or
aas
call
fadd
filds
jecxz
pop
xor
lret
inc
dec
cmp
mov
cwtl
mov
push
pop
cli
hlt
mov
jnp
out
in
push
ret
pop
xchg
stos
out
jnp
mov
repz
mov
push
cmp
jbe
or
jno
es
adc
add
dec
repz
aas
inc
inc
lods
lods
aas
outsb
sbbl
cmpsb
call
mov
orl
in
mov
faddl
push
or
enter
dec
into
jno
or
dec
jecxz
repnz
stos
jecxz
std
mov
test
xor
lahf
sahf
test
gs
xor
jb
cmp
sub
out
dec
popa
pushf
lds
call
dec
dec
loopne
mov
pop
sub
pop
push
lret
stos
mov
sbb
fisubs
adc
mov
and
sbb
in
cli
and
mov
ds
bound
shlb
aaa
leave
and
pop
push
imul
fstpl
or
out
inc
fcoml
jmp
iret
and
ljmp
cmp
pop
push
in
jecxz
jb
psubb
pop
movsb
mov
outsb
dec
scas
adc
or
xchg
pop
inc
stos
je
pusha
jae
popa
pop
pop
addr16
orb
int
inc
adc
push
inc
sbb
imul
push
rorl
xlat
jmp
jl
jb
sahf
movsb
xchg
jno
inc
sbb
movswl
mov
jmp
mov
jge
pop
outsb
fimuls
xchg
into
mov
mov
cli
mov
push
into
mov
repz
add
cmpl
mov
outsl
xor
push
bound
ds
pop
aas
push
and
push
mov
rorl
cmpsb
rorl
insl
push
sub
movsb
in
daa
jp
push
insl
adc
inc
je
ljmp
jo
insl
jo
sub
int3
pop
lcall
jle
scas
imul
mov
cmp
xchg
fs
sbb
fcoml
gs
repz
xchg
push
dec
push
xchg
mov
add
dec
fimull
rcrl
in
cltd
mov
aas
sub
inc
js
or
push
scas
lahf
jno
cmpb
movsb
test
les
sbb
loop
pop
push
pusha
mov
cmpsb
je
mov
or
xor
leave
pop
xor
cmp
sbb
sti
add
jg
sbb
jecxz
pop
pusha
lods
sub
or
and
sbb
cmp
cld
rcrl
pusha
shlb
repnz
mov
in
fxch
bound
and
mov
mov
test
loop
push
mov
ret
cs
loope
shlb
xchg
cld
gs
sbb
ds
cmp
pushf
push
scas
push
aam
fwait
xlat
clc
mov
cmp
insl
sbb
stc
sbb
sub
mov
lea
out
push
jns
mov
pop
cmp
sbb
sbb
popf
dec
ficomps
cli
xchg
mov
loopne
cmp
and
in
inc
nop
repnz
sbb
bound
jo
pusha
scas
dec
dec
icebp
jne
add
dec
push
call
insb
push
pop
jmp
cmp
push
data16
or
adc
add
loope
jecxz
mov
pop
out
sub
jmp
cmpl
es
jb
pop
pop
imul
push
push
cmp
imul
push
rolb
movsl
xor
fildll
loop
push
call
sbb
lcall
jmp
into
and
dec
loope
jae
js
out
subb
movsl
add
mov
sti
and
mov
out
mov
push
push
sti
lcall
into
pop
xor
insl
mov
pop
out
clc
aam
xor
out
sub
mov
push
or
imul
pop
stos
push
sbb
lea
jns
pop
sbbl
adc
addr16
imul
pushf
adc
cwtl
icebp
xor
add
mulb
adc
ja
loope
jns
dec
jne
sbb
sahf
inc
dec
dec
lock
clc
xchg
add
outsb
fidivrl
dec
aam
addb
ss
mov
pop
and
lods
xchg
sbb
cmp
icebp
jbe
mov
adc
cmp
mov
mov
cwtl
pop
jnp
aam
xor
adc
add
mov
lret
lret
test
and
mov
sahf
sub
sub
sar
push
jno
sbb
imul
or
jbe
les
test
scas
clc
fisttpll
cli
pusha
and
and
lods
jne
and
nop
dec
sub
stos
cli
pop
enter
and
lods
lods
popf
mov
nop
scas
jno
lods
movsb
xor
push
xchg
lea
adc
cld
js
mov
sbb
pop
add
push
mov
pusha
rclb
sub
pop
faddl
daa
inc
insl
inc
js
jmp
cmc
and
xor
hlt
pop
jle
jp
aaa
adc
xchg
mov
cmp
gs
xchg
pop
js
mov
cwtl
jnp
inc
popa
jp
cmp
sub
cbtw
adc
sbb
in
loope
jns
stc
aaa
push
out
int
push
cltd
xchg
xchg
or
pop
lds
mov
jg
jl
insb
mov
andl
cmp
movsl
test
sarb
in
mov
dec
ss
lods
jg
xchg
jno
cs
das
inc
aaa
sti
jp
inc
add
insl
rcll
push
cmpsb
xchg
mov
mov
jl
xor
cmp
aad
dec
adc
jp
insb
addr16
mov
add
xchg
add
cwtl
outsl
xchg
andl
ja
aam
jecxz
and
dec
jnp
lahf
outsl
lahf
cs
leave
jno
xor
cmpsb
add
adc
cmpsl
leave
dec
jno
push
or
pushf
and
sub
jno
test
movsl
inc
cltd
inc
push
mov
loopne
popa
movb
jo
imul
mov
in
mov
lds
stos
sbb
inc
hlt
movd
cmp
jmp
fstpl
add
jmp
fwait
sub
stc
sarl
cli
push
mov
dec
ljmp
mov
iret
lds
sub
addr16
sub
sahf
mov
out
sbb
sbbb
std
sub
jg
pop
xchg
dec
cmp
test
cmp
jmp
push
repz
int
inc
mov
in
lret
or
pop
pushf
aas
lret
pop
or
mov
or
mov
sub
xor
jne
mov
stos
hlt
aaa
mov
sbb
adc
pop
outsl
in
inc
popf
push
fwait
je
fwait
mov
add
xchg
push
subb
inc
fcomps
stc
and
mov
add
inc
or
lds
jbe
inc
movsl
and
icebp
clc
in
pop
repnz
fnstcw
sti
ljmp
idivb
push
xchg
nop
push
xchg
or
sub
mov
cmp
mov
aaa
mov
inc
ret
xchg
mov
ret
cmp
xlat
mov
push
inc
andl
jl
inc
jmp
cmp
in
xchg
sbb
pop
js
lret
cwtl
cmp
cld
lahf
dec
aas
rolb
enter
jne
and
sbb
xlat
repnz
lds
sbb
andl
aaa
cmp
imul
inc
cmp
js
sub
imul
sbb
sbb
aas
xchg
imul
ret
cwtl
xor
cmpl
dec
gs
cltd
je
lock
cmpsb
pushf
in
int3
leave
dec
add
lret
cwtl
outsb
outsb
dec
test
test
pushf
dec
mov
adc
push
aad
adc
add
mov
sub
pop
pop
test
add
imulb
pusha
cwtl
pop
rclb
jecxz
scas
jbe
pop
loope
jnp
dec
outsl
or
or
sub
sub
xchg
insl
sbb
int
test
hlt
ficomps
clc
pop
pop
repnz
mov
mov
fcmovnbe
insb
dec
xchg
sarl
mov
aaa
mov
addr16
leave
ret
sub
pushf
jbe
jge
icebp
sub
and
or
aad
xchg
push
divl
mov
ss
subl
stos
ficomps
mov
loopew
sahf
xor
push
popa
dec
idiv
lcall
xchg
negb
mov
rcrb
ja
cmp
push
pop
mov
and
xchg
rol
jns
xchg
inc
out
cmpsl
pop
je
push
mov
jbe
and
lcall
in
sub
enter
adc
xor
mov
push
mov
out
bound
out
pop
or
shlb
insb
or
inc
pop
cmpb
mov
push
pusha
add
xor
scas
xor
lahf
or
icebp
mov
jae
ljmp
xchg
pop
fmull
lock
rclb
leave
outsl
loope
arpl
dec
or
fadd
sbb
repz
movsb
aam
cltd
call
insb
pop
cwtl
out
cwtl
add
add
cmp
repz
jmp
sbb
cmp
mov
and
sub
popa
jge
mov
dec
psrld
or
popl
outsl
stos
movsl
pop
pop
cli
rclb
sub
mov
pushl
in
js
mulb
jp
dec
pop
mov
dec
push
mov
rcrb
mov
mov
dec
mov
fisttps
pop
loop
dec
add
adc
js
rol
outsb
xor
scas
mov
mov
scas
sub
xchg
mov
cs
or
lods
fadds
dec
xor
test
fadd
mov
adc
test
imul
push
mov
shrb
int
mov
movsl
rcll
jp
adc
push
pusha
mov
mulb
cmp
cltd
push
mov
cmp
mov
pop
jnp
push
dec
bnd
in
stos
mov
dec
mov
pop
das
pushf
mov
push
lar
sarl
pushf
popa
push
jno
call
ret
push
sub
push
sub
ja
pop
imul
jp
lret
mov
mov
dec
and
loope
jg
sub
movnti
lcall
scas
out
ja
inc
lret
sbb
mov
cmc
and
mov
jl
jmp
xchg
push
ficompl
aas
dec
push
adc
call
jb
repnz
loopne
jnp
test
insl
pop
mov
dec
cmp
jbe
rcrb
mov
inc
mov
sbb
incl
lcall
test
notl
mov
mov
movsw
std
mov
std
arpl
test
orb
loop
jno
leave
jge
das
mov
cli
or
push
jae
and
and
or
das
sbb
add
jnp
scas
jg
dec
call
push
adc
je
push
add
shlb
mov
sti
lods
adc
fdivr
mov
stc
xor
and
scas
pop
sbb
ret
mov
shr
popf
addl
data16
sbb
mov
xchg
push
xor
scas
imul
in
push
jl
xchg
ds
mov
and
test
shll
stos
inc
daa
push
cmp
in
or
jno
sahf
mov
sbb
mov
add
out
pushf
dec
test
or
mov
xor
xor
ljmp
mov
loope
jge
sbb
xor
jge
mov
mov
xor
dec
mov
cmpsb
and
in
pop
lods
jecxz
dec
lcall
ss
xchg
dec
mov
xchg
xchg
jmp
dec
or
arpl
fadds
mov
xor
ret
rclb
stos
fwait
add
imul
mov
jl
push
imul
shrl
mov
dec
mov
mov
call
xor
sub
add
xchg
dec
jecxz
xor
fdivl
cld
push
xor
mov
or
or
lock
jne
test
inc
pop
shl
dec
lret
fstps
sbb
xchg
pop
mov
pop
mov
mov
lcall
int3
push
push
popa
imul
jno
xchg
jmp
les
pop
jecxz
adc
sub
in
xchg
xor
jbe
sti
push
or
shrl
push
js
xchg
adc
test
inc
cmp
xor
cmp
fdiv
pop
cmp
pop
jl
mov
adc
in
mov
hlt
jne
ss
fldt
mov
out
inc
jns
jl
imulb
add
or
popf
scas
mov
mov
fcoms
inc
jnp
add
lea
and
jb
cwtl
push
int3
stc
xor
mov
cwtl
cli
loope
sub
xor
fsts
mov
pushf
adc
imul
pusha
rol
scas
adc
dec
pop
push
rcll
xchg
fnstenv
mov
sbb
or
pop
stos
lahf
add
push
icebp
xchg
add
and
ret
jge
adc
adc
mov
mov
push
test
jne
pop
add
not
mov
lret
mov
or
repz
andb
mov
mov
je
xor
and
adc
mov
xchg
jae
sbb
sub
jns
lahf
popa
out
mov
and
xchg
loop
scas
fcompl
push
push
je
in
addr16
xchg
or
and
fldt
mov
mov
adc
mov
movb
daa
fidivl
jle
pop
jb
std
dec
out
lret
mov
mov
mov
sbb
stos
lea
mov
or
jno
inc
ret
push
daa
adc
and
sub
fnstcw
pushf
nop
push
stos
std
xchg
hlt
adc
nop
pop
sbb
cmpsl
adc
dec
mov
leave
negb
daa
test
test
dec
rolb
jmp
outsb
xchg
je
pop
or
sbb
adc
cli
insl
insl
xor
jb
sub
mov
cmp
push
add
xchg
inc
lods
sti
cmp
std
pop
sub
jbe
fnstsw
add
sbb
decb
cmp
dec
pop
add
add
sub
popa
mov
xchg
mov
mov
shl
outsb
pop
fisubrs
lods
nop
lcall
sbb
cli
repz
mov
dec
daa
fs
mov
or
and
adc
jnp
out
inc
test
adc
je
andb
imul
pop
gs
je
push
pop
inc
jo
ficompl
fsubrp
sbb
mov
and
outsl
fstps
sbb
xchg
xchg
xorl
loop
les
xchg
push
adc
or
out
push
pushf
daa
xor
sahf
imul
adc
mov
lock
shrl
mov
ja
inc
cs
cs
push
inc
adc
cmpsl
xor
jbe
jnp
pop
iret
jmp
icebp
xlat
sbb
and
shll
push
sti
into
jae
push
xchg
dec
ret
outsb
cld
push
ljmp
adc
arpl
sub
stc
in
cmpsl
mov
fnstsw
sub
in
mov
adc
adc
jno
iret
test
cli
testb
add
sbbb
gs
popf
push
sbb
cs
mov
sub
dec
inc
adc
xchg
outsl
xchg
sub
xor
or
les
inc
cwtl
and
jl
int3
or
cmp
sub
gs
jmp
jnp
stos
or
add
fcompl
aaa
push
dec
jle
mov
hlt
push
sbb
cmp
notb
sub
cwtl
out
cs
call
adc
loope
ficoms
jb
dec
cmp
out
in
and
js
pop
arpl
push
gs
add
ss
mov
loopne
pop
push
and
mov
dec
or
inc
aad
adc
out
inc
push
ljmp
and
mov
addr16
sub
pop
aas
lahf
add
js
scas
das
daa
sahf
jp
rcr
lcall
sbb
das
es
mov
jbe
fstps
mov
xor
ja
pop
aas
mov
aam
fdivr
pop
pop
aam
insb
in
fldcw
out
sub
push
std
push
sub
sbb
clc
nop
jmp
orb
inc
mov
mov
out
xchg
push
xchg
sub
in
repz
lea
fbld
stos
fs
add
mov
cmp
in
pop
sbb
pop
imul
push
xchg
mov
jne
lds
adc
push
cltd
jge
iret
jo
int3
push
je
loopne
pop
push
cmc
adc
sahf
cmpsl
lds
inc
popa
not
mov
xchg
sahf
sti
mov
inc
and
ss
sahf
lahf
jnp
lea
jae
pop
sub
push
push
fiadds
into
lcall
dec
sub
pop
mov
dec
and
cli
mov
insb
add
jp
adcb
dec
cltd
sub
mov
push
sub
jecxz
dec
and
stc
ss
push
and
mov
cmp
mov
andl
dec
out
jg
scas
sahf
and
fadds
xchg
xor
dec
mov
mov
inc
add
std
fsts
xchg
fisttpl
jno
aam
xchg
jecxz
mov
sub
fcmovbe
lret
push
inc
push
xchg
mov
sbb
jno
add
or
adc
cmc
rolb
inc
ret
push
adc
fisubs
rcrl
push
pushl
and
aas
test
and
scas
sbb
or
or
adc
pop
mov
cmp
test
mov
add
out
pop
das
loop
out
push
mov
out
or
add
in
nop
sbb
mov
adc
repz
faddl
push
mov
in
jle
arpl
mov
cmp
jle
jmp
or
fildll
mov
dec
jb
in
fwait
xlat
scas
cwtl
mov
cmp
mov
adc
mov
xor
and
add
movsl
ret
adc
fstpl
sahf
jl
mov
aam
jbe
inc
lahf
cmp
sub
dec
ljmp
mov
cld
dec
push
fcmove
shlb
into
hlt
cmpsb
bound
mov
add
and
jl
or
xor
xor
mov
fwait
ret
and
jp
gs
and
pop
jo
repz
adc
sbb
sbb
rcrl
xor
std
lods
rolb
ljmp
sahf
inc
clc
or
jp
lds
adc
scas
roll
call
pop
insl
or
aas
push
fsubrl
or
xor
adc
shrb
daa
push
je,pt
mov
ret
pop
inc
pop
push
in
fcmovu
aas
daa
push
movsl
or
inc
lock
dec
adc
jbe
jae
inc
mov
test
aam
mov
fwait
add
mov
out
in
and
insb
outsl
jg
adc
jo
mov
pop
mov
cltd
mov
inc
sub
ret
sbb
decb
mov
shrl
add
ficompl
incb
test
cld
push
mov
aam
push
dec
cmp
push
loop
or
cmp
sub
inc
cmpsl
sbb
xchg
cmpb
mov
aaa
adc
cmpsb
setl
push
scas
and
in
cltd
bound
imul
mov
shr
push
pop
outsb
add
mov
sbb
mov
sub
ja
enter
mov
xchg
add
push
mov
nop
xor
add
mov
cmp
aam
pop
adc
gs
mov
or
lahf
mov
and
pop
xor
and
adc
add
push
loop
in
fsubl
les
dec
adc
lock
leave
xor
lods
add
imul
or
mov
sub
xor
mov
adc
outsl
mov
aaa
xchg
dec
enter
lahf
add
lahf
out
push
mov
jbe
stc
jo
dec
xlat
cmp
mov
sbb
popf
sbb
xor
mov
fildl
ror
xchg
push
enter
add
je
lret
pushl
fcoms
aas
xlat
fs
ja
imul
mov
push
inc
call
cwtl
fistpl
neg
ljmp
or
popa
mov
sub
popf
aaa
mov
insl
dec
loopne
pop
cs
jae
inc
push
pop
stos
push
sbb
lcall
and
pop
pop
fstpl
xchg
mov
sub
mov
xor
test
movsb
mov
cmpsl
cmpsl
jns
push
sub
arpl
dec
adcl
and
sub
pop
bound
cmp
es
sbb
xchg
test
enter
icebp
es
sub
xchg
jecxz
int
and
xchg
inc
mov
nop
int3
add
jle
sub
out
enter
and
cmp
andb
add
cmc
out
aam
fistpl
out
jge
adc
clc
icebp
fwait
add
xor
pushf
sti
mov
sub
and
cmp
psubd
jp
push
sbb
pushf
and
mov
test
xchg
adc
mov
ss
ret
scas
adc
ror
push
cld
fcompl
popa
aad
pushf
sub
jg
gs
xchg
stos
loopne
sub
out
dec
lock
push
push
mov
mov
inc
test
int3
sbb
mov
out
xchg
cmp
sahf
jg
mov
pop
mov
push
pop
xor
sbb
aad
lret
insl
mov
mov
loope
stc
xlat
add
add
mov
sbb
filds
in
or
test
push
xor
lds
sub
outsl
in
jo
lods
inc
xor
out
ss
gs
das
mov
xlat
dec
sar
negl
adc
mov
sti
and
xchg
cmp
dec
push
pop
xlat
sub
jne
pop
sbb
cli
xor
sbb
add
fiadds
mov
sbb
pushf
push
mov
mov
faddl
mov
mov
push
aam
mov
dec
mov
test
clc
pop
scas
xchg
lea
in
loope
jae
xlat
mov
test
push
dec
lea
xlat
dec
jle
ret
mov
mov
xchg
mov
xor
ljmp
mov
rcrl
insb
add
rolb
shlb
imul
fmull
icebp
mov
push
into
test
punpckhbw
cwtl
addr16
lock
xchg
das
sub
cli
insb
sub
add
je
xchg
or
ss
sub
aas
inc
xchg
push
jo
xchg
rcr
add
mov
and
inc
in
push
orb
movsl
mov
and
mov
js
dec
mov
arpl
scas
jl
inc
or
inc
inc
std
add
push
and
sahf
ja
inc
popa
mov
adc
or
data16
mov
jb
mov
push
xchg
mull
insb
lock
fwait
ljmp
sysenter
push
push
add
and
cs
mov
jle
jo
jl
adc
push
cmp
adc
das
xor
jbe
jb
dec
in
pop
xor
testl
add
cmp
push
outsl
push
ror
push
pop
loope
sub
fmuls
insl
xor
ja
scas
inc
fidivrl
stc
adc
add
hlt
mov
dec
cmp
add
mov
sub
xchg
xchg
setle
shlb
or
ret
sbb
pop
into
mov
aam
push
and
movsb
repnz
xor
clc
pop
mov
mov
inc
fiaddl
add
dec
scas
in
aas
es
push
add
jmp
mov
or
fwait
lahf
cmp
cld
pop
imul
popf
inc
jmp
addr16
daa
add
mov
test
cmp
jecxz
int3
mov
add
add
sahf
mov
and
add
mov
bound
inc
mov
cmp
sbb
and
or
adc
sub
xor
or
pop
cwtl
mov
pop
push
xchg
jo
dec
xchg
jae
push
bound
repz
pop
mulb
jno
sbb
and
jbe
mov
or
popa
ret
and
insb
jnp
pushf
cmpsb
nop
xor
je
insb
inc
jg
hlt
jg
pop
mov
xchg
mov
xchg
sbb
lods
xor
xchg
inc
sbb
out
pusha
mov
imul
sub
mov
stc
test
xor
mov
jmp
call
dec
mov
mov
sbb
mov
mov
fs
mov
aad
mov
out
jp
nop
adc
fildll
ret
es
sub
lea
stos
movsl
test
xchg
dec
mov
mov
loopne
or
fs
inc
and
pop
stc
in
push
push
push
bound
ds
pop
out
sbb
lods
xchg
and
pop
push
push
cmc
jae
and
pop
push
jnp
rcrb
xchg
push
in
or
jp
sbb
popa
pop
mov
sbb
aas
fists
movsb
int
sbb
pop
or
adc
jmp
mov
testl
mov
arpl
rcr
xchg
icebp
mov
and
icebp
xor
cmp
jb
adc
dec
adc
and
jecxz
xor
fdivrl
arpl
scas
cmp
inc
rcrl
pop
jae
adc
dec
les
das
jb
mov
cmp
jbe
jge
mov
jnp
inc
push
jge
test
aam
mov
mov
jno
aam
les
add
jl
int
mov
cltd
pop
push
ja
repz
scas
in
sbb
popa
xchg
mov
test
adc
adc
mov
mov
jb
xchg
dec
mov
mov
test
sub
in
es
insb
data16
dec
clc
mov
dec
jns
ja
ljmp
shll
stos
sbb
sbb
daa
in
shr
mov
enter
fidivrl
lret
pop
aaa
jns
xchg
pop
xchg
aas
mov
je
pop
xchg
fsts
add
stos
es
pop
nop
shrb
pop
sbb
leave
bound
pop
sub
adc
adc
cli
arpl
push
sbb
add
dec
fistl
addr16
mov
inc
insl
int3
cmc
jae
outsl
jg
pop
jg
jns
icebp
push
adc
or
pop
arpl
cmp
in
sbb
push
xchg
sti
adc
pusha
clc
repnz
pop
shl
flds
cmc
aad
mov
fadds
jge
sbb
pushw
call
xlat
ficoms
sarb
cmp
cld
or
and
and
xchg
pop
test
add
faddp
push
add
mov
xchg
mov
adcl
loope
popl
lock
fistpl
mov
ret
mov
andl
ret
in
sbb
in
in
out
lds
daa
inc
call
hlt
pop
inc
std
dec
stos
out
pop
xor
fists
test
mov
movsl
mov
cmp
push
cmp
rolb
or
aas
incb
mov
sbb
or
movsl
sbb
and
sbb
push
arpl
je
roll
mov
or
les
cmp
insb
fnstsw
inc
pop
lret
ret
sbb
add
cmc
push
sti
jo
fcoml
jns
mov
jmp
mov
out
mov
mov
loope
pop
test
jne
adc
jge
lods
ds
or
or
lahf
int3
outsl
or
pusha
stos
scas
pushf
mov
add
test
pop
mov
into
mov
lret
les
in
cltd
hlt
std
inc
loop
arpl
sub
xor
gs
adc
push
aam
pop
inc
roll
fimuls
jnp
or
pop
test
pop
loope
adc
mov
and
sbb
mov
and
dec
mov
out
jmp
pop
dec
daa
mov
push
and
sub
mov
popf
bound
xor
fwait
gs
xor
stos
xor
or
xor
bound
int3
dec
test
adc
stc
mov
sbb
ds
mov
lock
mov
fimull
dec
inc
shlb
sbb
leave
bound
cmp
aam
pop
adc
negl
push
push
test
data16
or
lods
lcall
xor
sbb
movsl
popf
sub
mov
xchg
mov
xchg
mov
sbb
jno
cwtl
pop
leave
pop
sub
stc
sarb
mov
sbb
add
pop
lods
or
in
jb
push
ret
popa
in
ds
dec
add
es
iret
mov
fisubl
aam
xor
mov
lcall
test
sti
enter
data16
adc
dec
and
and
pop
add
jge
xor
push
jnp
mov
fmuls
sub
xchg
or
sahf
idiv
enter
popf
int
jno
int3
push
clc
add
pop
jecxz
lcall
mov
insl
xor
mov
outsl
mov
add
fistpll
fdivl
ret
jo
jg
cmpl
subb
cmp
mov
cmp
aas
or
popf
fidivrs
movsl
outsl
rcll
enter
clc
pusha
push
adc
or
pop
dec
cmpsl
dec
mov
cmp
jne
mov
or
fdivrl
pop
lret
aas
adc
int3
popf
popa
loopne
cmpsl
dec
pop
xor
fisttpl
lods
sarl
or
fwait
cmc
xchg
mov
mov
enter
in
leave
in
push
mov
aas
mov
ljmp
add
into
andl
bswap
jno
mov
mov
push
ljmp
push
jmp
mov
mov
jo
dec
in
outsl
adc
icebp
lods
mov
dec
loopne
in
shl
andl
aas
loopne
cld
push
icebp
jae
push
push
pop
mov
pop
pushf
push
test
xchg
jmp
adc
in
push
fs
jp
cmpl
pop
jb
ljmp
stos
call
add
inc
mov
aam
jbe
push
fxch
mov
push
outsl
pusha
in
test
stos
subb
ficoms
scas
dec
sahf
pop
clc
cmpsb
jae
mov
dec
sbb
pop
stos
mov
mov
sbb
push
test
pop
sub
int3
scas
pop
loop
or
ljmp
insb
adc
pop
cmp
and
dec
stos
xchg
stos
pop
adc
adc
clc
mov
pop
test
mov
inc
lds
test
shr
dec
push
in
mov
mov
mov
mov
inc
push
mov
xor
adc
out
cmp
push
outsb
scas
push
rcll
and
sub
add
int
inc
fldt
outsb
cli
je
cli
cmpsb
mov
sbb
fdivs
arpl
iret
sbb
and
xchg
mov
scas
sbb
leave
xchg
mov
or
ds
test
mov
test
xchg
dec
imul
xchg
icebp
mov
ss
adc
adc
test
mov
jg
xchg
mov
pop
adc
in
lock
xor
lcall
stos
lods
je
ja
rolb
cmp
ror
inc
repz
out
rorl
pop
mov
shll
inc
pop
or
scas
pop
dec
cmpsl
and
xor
fadd
aas
jmp
mov
ret
stc
ds
and
int
cmp
mov
into
push
dec
ja
xchg
sahf
xorl
xor
sbb
in
lods
mov
push
dec
ret
pop
jne
cmp
test
lock
and
mov
inc
pop
jns
pop
aad
or
add
push
jae
iret
mov
insb
pop
pop
xchg
pop
fdivl
ja
xchg
mov
and
and
inc
fcoml
sbb
xor
aas
test
fsubrl
add
adc
push
out
push
xchg
fs
rcl
sahf
dec
fmul
dec
psubd
mov
jmp
sbbl
mov
aaa
aad
jnp
cmp
aas
mov
mov
sbb
sub
fildll
jge
and
lcall
in
and
and
test
fs
and
sub
mov
loopne
mov
dec
mov
loopne
divl
and
mov
sub
movsl
call
imul
stos
movaps
and
testl
sub
popf
adc
cmp
aaa
scas
lret
push
dec
aas
mov
jbe
rcrl
cmp
cmp
dec
inc
jmp
loopne
les
push
shr
jns
cmp
jno
inc
sub
in
mov
jmp
sub
push
mov
jns
rol
adcb
sbb
mov
mov
stos
aad
fdivs
aas
xchg
sub
dec
xchg
inc
adc
push
lahf
and
pop
notl
mov
jmp
insl
pop
cmp
inc
lahf
orb
mov
popa
xor
leave
outsl
gs
cmp
jo
sbb
mov
sahf
cmp
dec
nop
pushf
xor
xchg
xor
mov
insl
ret
ret
sbb
shl
mov
jae
ds
jbe
std
bound
jb
outsb
add
pop
out
mov
xor
xchg
out
inc
xchg
movb
dec
sahf
insb
mov
fistl
out
gs
ret
aaa
push
lea
mov
push
jnp
xor
cld
push
sbb
push
pushf
aam
rcrl
jo
cli
mov
push
push
add
inc
adc
fnstsw
dec
imul
leave
clc
add
stos
lods
cmp
mov
mov
div
loope
xchg
push
inc
negl
push
test
cmp
ret
dec
sbb
out
add
push
mov
lret
push
rcrb
hlt
xor
iret
inc
dec
popf
test
mov
dec
jmp
xchg
push
dec
pop
fcomps
sub
aad
rolb
test
int
push
jmp
repz
xchg
push
test
adc
cmpsl
rcrb
push
fwait
mov
jns
or
cmpsb
push
in
xchg
je
js
sub
dec
es
pop
rolb
outsb
lcall
stos
ret
add
add
fstps
sbb
lret
cs
ja
sub
or
sbb
add
and
inc
outsb
or
sub
mov
out
or
mov
dec
insl
pop
push
jmp
fcoms
sub
arpl
xlat
fstpt
sub
xor
sbb
cmpsl
cmp
loope
and
or
push
xor
fdivrs
xchg
cwtl
xchg
pop
adcl
jo
adc
jmp
outsl
enter
sbb
stos
pop
insl
les
pushl
inc
mov
insb
inc
fisubrl
inc
mov
xor
push
inc
add
sbb
rcr
rolb
iret
into
sarl
push
scas
dec
ficomps
and
nop
aaa
jns
pop
and
mov
mov
xchg
mov
sbb
mov
add
sbbb
test
cmc
cld
xchg
lahf
pusha
dec
cwtl
fmul
xor
in
jle
pushf
push
hlt
sahf
imul
and
push
ret
ds
xlat
in
cli
mov
push
jns
cmpsb
outsl
adc
nop
mov
adc
lods
gs
loopne
adc
mov
js
out
dec
sub
cli
ficoml
adc
lahf
data16
pop
leave
inc
js
ret
mov
jmp
jmp
es
sti
cmp
ss
js
insl
jbe
jbe
adc
push
in
outsl
jmp
insl
mov
outsb
loopne
mov
mov
push
mov
cmpl
outsl
scas
lock
pop
or
and
fisubrs
pop
mov
mov
inc
mov
pop
arpl
clc
dec
andb
xchg
icebp
fcomi
ljmp
xchg
pop
mov
je
ret
nop
bound
cli
sarb
lahf
roll
icebp
sahf
inc
fcoml
fcomps
mov
rclb
loopne
movsl
loopne
pop
sbb
lret
stos
inc
fmul
mov
push
ret
sti
sbb
std
lret
ljmp
out
xlat
mov
sti
mov
mov
sub
sub
aas
xchg
mov
inc
outsl
je
xor
mov
pop
mov
sti
inc
imul
mov
sub
pop
std
inc
inc
mov
aam
fidivrl
jne
sub
jg
inc
or
dec
push
jbe
out
xchg
push
sbbb
outsl
cld
adc
inc
fnsave
loope
lahf
push
lret
mov
jb
xchg
testl
add
lahf
cmp
xchg
mov
mov
lods
sub
mov
pop
mov
adc
push
andb
pop
cmp
out
cltd
xchg
inc
push
das
in
add
add
rcrl
or
mov
call
push
cli
jne
inc
xchg
jae
sbb
insl
push
jmp
addr16
fwait
out
sub
push
xchg
dec
js
add
dec
mov
lea
call
dec
pop
push
xor
scas
cmp
push
mov
jns
push
xor
dec
pmuludq
mov
aam
pop
sbb
dec
mov
add
mov
repnz
imul
push
mov
xor
jnp
pop
cltd
fs
lcall
inc
shll
mov
ja
dec
xor
lret
and
mov
mov
mov
in
add
push
cmp
mov
xor
cwtl
fcoms
and
dec
out
movsl
xor
sahf
or
prefetcht1
sub
in
rorb
and
jecxz
or
or
nop
les
jmp
fcoml
pop
cltd
cmovb
jae
repnz
xchg
mov
arpl
push
cmc
stc
adc
in
rcrb
mov
aad
pop
mov
out
inc
inc
mov
dec
jo
jno
add
lret
inc
jecxz
adc
and
pusha
xor
and
xchg
cmp
inc
xorl
pusha
sbbb
cld
mov
ret
out
sub
in
dec
and
cmp
lods
out
xor
sahf
xchg
and
popa
adc
rol
mov
lret
mov
repnz
cmp
or
add
mov
and
xlat
jbe
xor
jne
add
push
mov
out
mov
neg
movsb
iret
push
scas
je
cmpb
xor
xchg
test
fisubl
add
in
adc
lea
stos
xchg
testb
rcrl
inc
add
sub
jl
dec
icebp
mov
jp
imul
aas
mov
cli
mov
cmpsb
xor
mov
xchg
scas
rolb
jbe
lea
sbb
fdiv
and
xor
insl
xchg
mov
xor
shl
mov
movsb
sbb
out
push
aaa
stos
sub
xor
shrb
inc
cld
mov
int
in
ret
mov
insb
xlat
cmp
adc
fmull
lret
icebp
xor
and
leave
xchg
xor
jle
scas
mov
adc
sbb
sub
pushf
fs
pop
cmpsb
pop
xor
mov
adc
mov
mov
out
fdivs
mov
sbb
add
xor
cmpsl
aad
aas
jne
add
sbb
push
in
xchg
es
push
das
lds
mov
fbstp
xor
jns
cwtl
out
push
fwait
sbb
sahf
lret
sbb
shlb
xchg
jnp
ds
cli
sbb
sub
push
mov
mov
stos
or
scas
lcall
and
jle
xor
push
adcb
mov
test
inc
inc
mov
dec
lock
imul
jbe
xchg
and
mov
pop
orb
add
mov
push
pop
dec
mov
push
dec
mov
inc
shll
outsb
lods
ds
jecxz
fwait
push
cmp
xchg
std
lock
leave
add
fists
mov
inc
leave
out
ss
jb
test
adc
lahf
filds
or
sbbl
dec
xchg
rcrl
xchg
pop
ss
je
sti
rorl
ficomps
mov
outsl
fldcw
lret
imul
lds
int
fnstenv
inc
fwait
cmp
or
test
mov
pop
mov
cmpsb
mov
imul
or
cwtl
cmp
rcrb
subb
scas
popa
or
mov
adc
mov
fisubrl
jl
mov
inc
mov
adc
orl
dec
insl
and
aaa
sub
xchg
jno
pusha
sahf
jecxz
stos
sti
mov
dec
adc
xchg
cmp
imul
mov
sbb
mov
icebp
aam
pop
lcall
mov
push
jle
ret
test
mov
sbb
xor
and
or
jbe
add
out
je
lods
mov
inc
push
add
ljmp
lahf
cmp
out
lods
dec
movb
xchg
fistl
jo
sub
mov
pusha
fucom
lods
add
aam
push
fwait
inc
sub
sbb
imul
mov
test
add
and
iret
add
arpl
stc
cmp
adc
dec
in
xlat
jmp
imul
push
cs
xchg
push
cmc
dec
rorl
xor
std
cli
mov
cmpsb
and
xchg
or
int
dec
pusha
pop
test
push
xchg
mov
mov
cli
inc
fs
add
push
neg
les
repz
push
jo
adc
and
cmp
jb
test
sub
lods
fldenv
or
movsl
cwtl
jle
cmpsb
es
jg
pop
dec
add
sti
pop
mov
push
sub
gs
out
or
adcl
ja
dec
adc
inc
inc
movsb
push
inc
sub
mov
xorl
or
adc
xchg
cltd
sbb
lret
mov
ja
inc
dec
inc
sbb
mov
inc
add
adc
inc
std
sbb
das
mov
mov
jno
std
jno
push
push
mov
xchg
pop
jno
push
sbb
js
and
out
fbld
sub
lcall
pop
xlat
xchg
pop
or
out
push
sub
bound
mov
sub
popa
addb
dec
cmc
inc
push
subb
aaa
xor
mov
or
push
xlat
or
push
ljmp
popa
ds
mov
sbb
sarb
gs
dec
lock
mov
popa
loopne
jge
mov
sbb
shl
or
sbb
xor
inc
sub
pusha
leave
das
fnstcw
and
jnp
mov
sbb
aaa
cs
cmpsl
fnstsw
push
sbb
jecxz
nop
stos
shrb
repnz
push
add
push
js
insb
xor
rcr
or
out
lret
mov
push
pop
mov
loopne
jmp
leave
and
popf
in
mov
movsb
out
pop
jb
inc
data16
dec
orb
push
mov
add
aas
hlt
fistps
imul
mov
push
incb
lea
mov
js
into
sub
and
ss
xchg
inc
scas
cld
xchg
out
cmp
int
mov
out
das
or
fsubs
mov
test
jmp
cmp
insb
inc
lds
movsb
call
pop
pop
inc
movsl
scas
jmp
inc
add
mov
je
orb
into
inc
mov
push
mov
sar
ljmp
xor
psrad
int3
pop
add
or
push
pop
push
push
adc
sbb
jp
inc
roll
aam
iret
adc
test
cmp
dec
mov
cmpl
add
jne
int
and
mov
cs
addr16
call
mov
stc
adc
scas
aam
arpl
lds
mov
adc
push
lds
and
inc
daa
dec
and
adc
scas
adc
push
imul
adcb
mov
mov
and
xor
out
mov
inc
xchg
imul
stc
enter
adcl
shrl
inc
xchg
aaa
sahf
cmpsl
ret
adc
orl
dec
cmp
pop
daa
pushf
push
mov
lods
dec
sti
fs
ret
out
xlat
dec
adc
rclb
addb
lock
lcall
test
and
ds
lahf
xchg
testl
in
cmp
sahf
loopne
mov
std
xchg
call
xor
adc
nop
aas
repnz
sub
scas
stos
jle
scas
cmc
addr16
fs
adc
popf
xor
inc
pop
pop
sti
and
xchg
jle
pop
je
adc
idivl
outsl
int
data16
pusha
rcrb
lock
shll
loop
cltd
xchg
add
add
mov
adc
push
sbb
cmp
xchg
stos
insl
lret
fcompl
popa
aad
aad
pop
and
mov
hlt
inc
mov
test
sbb
xchg
or
ss
and
pop
push
jecxz
jmp
in
dec
xor
hlt
add
cs
jae
push
xor
bound
mov
jae
out
mov
in
sub
fdivrs
stos
xchg
sahf
jbe
add
out
test
lcall
das
loopne
push
xchg
ljmp
adc
fldcw
push
cltd
aas
jp
shlb
aas
movsb
pop
inc
repnz
aad
cwtl
lods
mov
fildll
fucomip
or
adc
add
xchg
pop
insb
mov
imul
rcl
xorl
clc
jo
jnp
imul
shl
pushf
xor
arpl
stc
movsb
mov
cmp
nop
shll
scas
arpl
mov
loope
mov
maxps
cmp
daa
cmpsb
mov
scas
es
mov
sub
and
not
mov
mov
imull
hlt
xchg
xchg
js
mov
mov
lahf
mov
xchg
pop
shrl
shrl
sub
pop
fs
and
sbb
out
vpunpcklbw
dec
ja
sbb
rcll
shlb
movl
sbbl
push
ficoml
arpl
mov
jb
jecxz
pushf
cmp
daa
sbb
inc
loopne
sbb
icebp
add
add
inc
outsl
push
shll
cmpsb
add
sub
sub
dec
lods
adc
fisubrl
arpl
push
out
pop
out
fcomip
fsubrl
xor
test
push
fdivrs
add
iret
push
jbe
jno
fld
push
ljmp
rcrl
xchg
cmp
jns
pop
inc
popa
push
sbb
movsl
jno
xor
cmp
in
imul
and
fstl
jns
stos
out
sub
in
daa
sarb
pop
jb
or
fsub
xlat
xlat
pop
jno
sti
dec
mov
mov
xor
jle
insb
stc
pusha
ja
cld
popa
pop
les
aam
test
aaa
jbe
lods
xchg
sbb
scas
sub
adc
aad
jae
ds
test
xlat
insb
es
es
mov
inc
mov
mov
cli
sub
cmp
push
jg
mul
sbb
and
test
test
or
test
popa
mov
add
test
js
jg
xor
ret
jae
cs
inc
pop
xchg
jl
inc
sbb
out
lods
sub
or
push
lock
inc
add
fnsave
mov
xor
std
shrl
ss
push
out
sarl
inc
test
pop
xlat
jmp
and
cmp
cmpsb
mov
gs
and
mov
stos
and
jb
inc
leave
push
cmp
je
sub
push
fsubrp
push
adc
sbb
aas
jo
sub
lahf
push
cmp
aad
mov
rorb
add
dec
lret
xchg
and
jle
repnz
dec
shrb
xchg
push
or
into
dec
push
lock
or
xchg
jb
xchg
push
push
addb
jnp
push
int3
pop
pop
nop
out
jb
mov
imul
cwtl
repz
jecxz
leave
jae
fwait
rclb
xor
or
cmp
pop
push
inc
xlat
call
lahf
fdivr
ljmp
mov
mov
or
fstpt
jle
imul
nop
into
repnz
push
cld
mov
popf
popa
sbb
int3
inc
mov
ret
mov
xor
mov
imul
pushf
pop
dec
push
add
mov
fbstp
xchg
lahf
je
cmpsl
scas
dec
mov
push
cli
push
and
mov
pushf
xor
mov
stc
lock
pop
ljmp
call
jne
mov
or
mulb
jns
jmp
mov
lret
mov
mov
mov
xchg
xchg
add
inc
leave
mov
or
std
subb
jo
popa
lcall
stos
mov
adc
mov
and
fwait
cmp
sub
pop
inc
pop
add
adc
mov
pop
ficoms
scas
jl
ds
mov
mov
lea
cmp
or
inc
lret
sti
or
mov
pop
push
dec
aam
daa
stc
sbb
sub
and
xor
xchg
mov
mov
mov
push
cmp
ficoms
shll
jae
cmp
jmp
mov
js
pop
loope
ja
jnp
pushf
dec
dec
add
ss
int
jne
inc
jmp
inc
mov
arpl
push
sbb
gs
add
not
push
jnp
jge
pop
sub
mov
push
jg
push
pop
clc
sbb
jp
insb
jecxz
xchg
jnp
cmc
mov
scas
ret
mov
pop
mov
lcall
jge
jmp
cmpl
push
jnp
scas
cmc
test
xchg
clc
aas
ret
push
cmp
mov
sub
pushl
jnp
inc
data16
sbb
xchg
mov
xchg
in
pop
mov
fs
filds
imull
lea
push
sti
adc
push
jmp
test
cmc
scas
cmp
or
stos
sbb
xchg
testb
mov
sbb
outsb
push
mov
and
fmuls
jo
fisttps
jne
stos
aad
nop
dec
push
test
lret
pop
clc
popa
int
xor
xor
dec
fstpl
cmpsl
xchg
mov
test
and
xor
shufps
lock
xor
push
dec
outsl
cmp
or
test
lock
shrb
jg
add
imul
pusha
enter
cmp
std
cmpb
in
sub
cmpsl
cli
jg
insb
mov
xor
cmp
lea
lcall
insl
and
decl
in
push
cmpsb
sahf
ds
in
or
lds
cwtl
xchg
flds
popf
cbtw
mov
cli
fwait
repnz
dec
sub
dec
pop
cmpsb
fidivs
scas
inc
sub
and
fs
lods
and
lret
cmpsl
pop
adc
add
cmp
xor
sbb
rclb
testl
cmp
push
push
mov
mov
ss
pushf
aad
pop
jne
sub
leave
ljmp
jns
addr16
adcb
mov
adc
shl
sbb
xchg
cmpsb
mov
fsts
int
repz
aaa
xor
dec
inc
test
mov
xchg
rep
cmpb
mov
inc
lret
out
std
lods
jecxz
int3
pop
gs
inc
or
ret
aaa
lahf
sub
sub
and
push
dec
mov
push
lock
mov
cmp
rorb
movsl
inc
aad
cli
or
shrb
lods
loopne
sub
mov
fnstcw
mov
hlt
sbb
ror
in
movsb
sub
adc
ss
push
test
push
fidivrl
xor
stc
cmc
dec
scas
sbb
and
out
adc
test
mov
pushf
or
nop
shrl
cmp
cld
orb
jbe
out
mov
jecxz
inc
jbe
cmp
lret
popa
pop
add
data16
ljmp
jge
cwtl
lahf
mov
scas
mov
inc
push
or
xor
sahf
add
int
lods
xchg
aas
repnz
inc
lret
addb
and
loope
jl
pop
mov
gs
rol
std
out
imul
std
mov
jns
ljmp
cmp
sub
push
clc
mov
mov
mov
addr16
mov
stc
cmp
jp
pushf
dec
xor
in
js
cli
cmp
cmovge
in
into
add
gs
xor
xor
ds
pop
push
push
adc
cli
popf
or
mov
mov
nop
imul
es
add
ds
push
lret
xchg
jne
fistl
sbb
push
inc
cmp
mov
add
sbb
insb
dec
push
xchg
or
dec
ret
test
dec
insb
loop
or
shrb
or
cmp
mov
popa
cs
or
fwait
add
dec
mov
sub
dec
insb
cs
pop
sbb
out
sub
mov
lock
dec
sub
aam
ss
outsb
clc
cmp
push
aam
or
or
or
push
pusha
adc
dec
cmp
inc
cmp
and
mov
sti
ss
push
cmp
pop
jle
xor
add
data16
out
lret
fisttps
cwtl
rorl
fists
nop
and
inc
insb
sub
addb
xor
push
pop
fcmovne
inc
add
sti
ds
sbb
sub
in
addr16
aad
insb
xor
test
lret
inc
push
jl
dec
pop
data16
pop
lods
push
jbe
xlat
jae
and
xor
dec
jle
pop
mov
pop
cmp
inc
stos
movsb
and
jns
push
lcall
cmp
scas
pop
push
mov
into
push
mov
mov
pop
negl
and
aad
into
dec
pop
xor
cld
dec
pop
adc
add
push
lock
rcrb
neg
loop
imul
out
mov
pop
push
inc
sub
adc
js
cmpsl
push
icebp
out
add
lods
push
std
sub
adc
xchg
cld
adc
or
and
rcll
mov
push
jbe
adc
xor
cltd
repnz
das
ret
fs
and
mov
movsb
cmp
arpl
jbe
rorb
xchg
aaa
inc
jns
sub
hlt
adc
pop
mov
xchg
dec
fwait
mov
in
mov
in
xchg
jns
iret
jl
mov
clc
pop
addr16
mov
mov
sub
sub
xor
bound
adcl
jp
popf
addr16
call
and
lret
jbe
pushf
cmpsb
ret
stc
pop
dec
pop
cmp
pop
push
mov
add
xor
fimuls
dec
sti
push
or
fistpll
dec
inc
jb
cmpsb
lret
arpl
or
iret
pushf
add
jle
enter
pop
ds
jo
gs
mul
jae
push
xchg
jne
mov
dec
jb
sub
aad
fs
jne
xchg
sub
mov
inc
aaa
cmp
sub
aas
cmp
daa
aaa
sbb
repnz
dec
add
sbb
push
sarb
cltd
mov
mov
std
jl
or
repz
mov
call
cs
shll
mov
push
mov
jge
imul
daa
aad
jne
mov
clc
inc
and
xlat
or
jp
test
fwait
pop
jno
inc
pop
inc
adc
pop
xor
mov
sub
sahf
stos
add
in
dec
mov
and
xlat
sub
sub
jns
ret
pop
jge
or
jmp
mov
sbb
ret
outsl
int3
push
scas
std
xchg
xor
pop
xor
in
xor
mov
jae
add
sbb
popw
push
xchg
js
inc
pop
cmp
xor
push
int
and
and
mov
push
js
lahf
dec
mov
mov
stc
adc
inc
jne
cmpsl
xchg
leave
test
shrl
jne
inc
jno
cmp
push
jne
pop
cmc
enter
adc
iret
lcall
dec
fdiv
xchg
arpl
pop
jns,pt
sbb
and
out
push
call
lea
sahf
pop
in
dec
aaa
inc
loope
stos
cmp
fs
mov
sbb
icebp
movsb
sbb
adc
pop
enter
arpl
xor
lret
ret
outsb
out
or
decb
jle
jns
jno
or
dec
pop
push
test
leave
mov
popa
pop
in
sub
clc
pop
lret
fs
clc
scas
cmpsl
loopne
lock
es
out
dec
and
mov
mov
pop
pusha
fwait
loope
push
jo
pop
xchg
inc
data16
jg
push
add
jb
pusha
jo
mov
outsb
in
xor
daa
jno
sub
inc
push
and
sti
push
mov
daa
mov
repnz
push
xlat
dec
pop
mov
adc
int
aad
lods
ret
lods
dec
arpl
ficoml
adc
mov
push
es
sarl
cmp
daa
ja
clc
int3
lea
test
cmpb
jne
and
dec
lret
out
je
push
cwtl
shll
stc
mov
test
inc
in
scas
jne
pop
in
jg
sub
and
enter
leave
popa
cld
scas
push
jnp
inc
xchg
xchg
jno
pop
mov
inc
xchg
dec
fcmovnb
push
dec
shl
push
sbb
test
push
test
cmp
mov
mov
mov
pop
push
cmpsl
jecxz
mov
sub
adc
and
xchg
sti
xchg
add
jp
int
jae
icebp
cmpsl
fldl
xor
add
inc
mov
shl
jp
stos
lret
lea
sub
jge
push
sub
fnstcw
sub
aaa
outsb
cld
arpl
add
pop
popa
adc
dec
out
pusha
push
fldcw
cmp
or
mov
xor
mov
repnz
rorb
mov
shl
inc
sbb
ret
mov
mov
outsl
in
mov
cwtl
popf
xchg
mov
mov
loop
repnz
xchg
pslld
cmpsl
push
mov
push
cmp
fisttpll
adcb
push
add
lock
push
cmpsl
int
inc
hlt
mov
add
fistps
outsb
adc
mov
int3
xor
divl
mov
andl
int3
cld
lea
adc
add
pop
xchg
adc
mov
dec
dec
subl
or
mov
insb
stc
jne
jge
fstpl
loope
sbbb
push
aam
push
std
cli
and
mov
pop
ret
sub
mov
xor
idivl
or
mov
mov
mov
rclb
push
call
test
xor
adc
dec
lea
rcrl
arpl
or
jge
mov
loop
cmp
and
push
or
iret
add
mov
scas
rorl
mov
ja
mov
xchg
adc
jmp
cmp
scas
jns
mov
hlt
mov
cld
mov
aaa
into
mov
imul
ja
or
rcll
sbb
xor
sub
subl
and
fs
jnp
addl
popa
scas
mov
adc
mov
out
and
pop
adc
mov
pusha
daa
pop
sbb
hlt
das
test
jns
test
das
adc
push
mov
stc
fldcw
pop
jne
xor
cld
sub
xlat
inc
sub
mov
xor
mov
sbbb
clc
clc
loop
cmp
fsubrs
mov
fiadds
and
in
xor
or
outsl
loop
mov
icebp
fimull
push
or
inc
mov
lret
insb
movsb
popa
sbb
ss
and
push
jbe
movsl
sub
cmpsl
dec
sbb
inc
scas
adc
xor
mov
ret
cmp
daa
mov
and
adc
xlat
outsb
xchg
push
and
mov
inc
cmc
mov
aas
int3
dec
mov
pop
xchg
push
add
mov
jle
cli
rcrb
clc
sub
inc
pop
lods
push
cmp
adc
ljmp
ja
out
pop
push
mov
jns
negb
dec
add
test
test
mov
or
jbe
push
mov
fimuls
xor
cmp
out
mov
push
int3
orl
adc
out
inc
cs
ret
pop
cs
dec
add
into
shl
rorl
in
mov
or
pop
in
xor
ret
test
scas
mov
cmp
nop
mov
mov
lods
xchg
cli
jnp
cmp
cmc
mov
ret
sub
mov
inc
xor
sub
mov
push
adc
imul
pop
insb
sahf
test
fistps
cmp
ds
adc
push
push
pop
mov
pop
cmpsl
divl
sbb
fs
lds
jo
adc
mov
and
sti
sbb
out
lcall
mov
out
pop
pop
movsb
pop
adc
adc
shrl
xchg
add
outsl
mov
iret
inc
mov
iret
jg
push
cmp
cld
cmp
cmpsb
ficompl
xor
jo
mov
jae
icebp
mov
xchg
pop
icebp
and
out
vmovmskpd
movsb
pop
and
push
mov
jmp
push
mov
xchg
int3
inc
mov
idivb
aam
cmc
daa
fucomi
hlt
inc
ret
or
or
leave
test
jmp
out
sub
rclb
mov
cmp
repnz
rclb
and
movsl
inc
mov
mov
int3
mov
pop
pusha
xor
inc
test
adcb
sub
adc
mov
pop
mov
inc
cltd
inc
cmp
lods
xor
aad
ficoms
icebp
sbb
and
mov
inc
inc
pop
jmp
lods
jge
add
mov
out
andl
loop
and
icebp
ffree
xchg
mov
mov
call
sbb
je
flds
adc
inc
sar
and
mov
jge
lods
test
lea
jne
out
sbbl
out
mov
push
stos
mov
inc
push
repnz
int
cmp
cmp
cld
or
jecxz
lret
push
fcmovu
mov
adc
or
cmp
arpl
pop
lods
xlat
ret
daa
mov
nop
ljmp
pusha
sbb
lahf
add
add
pop
cmpsl
xchg
stos
inc
int
cmp
ljmp
int3
ret
lahf
add
push
add
push
mov
test
mov
fiadds
std
adc
jo
stos
xlat
xor
cmp
mov
in
xchg
lahf
or
and
loopne
mov
adc
movb
mov
jge
and
nop
fimuls
push
lock
sub
lds
xchg
xchg
notl
sub
imul
in
sub
inc
insl
rcrb
rcl
int
loopne
dec
sbb
pop
or
inc
mov
ficomps
add
subb
das
out
das
dec
dec
push
lods
bound
cli
imul
push
cmp
xchg
mov
mov
cld
ja
mov
jns
mov
sub
mov
in
push
xchg
push
push
or
inc
cmpsl
xchg
mov
std
mov
sub
adc
push
cmpsl
in
push
adc
push
pop
addr16
mov
and
std
sub
arpl
dec
mov
xchg
adc
inc
fmuls
adc
pop
push
jmp
inc
jmp
and
xchg
push
push
xor
into
cmp
sub
xchg
dec
or
das
mov
enter
lods
rcrb
mov
nop
stos
push
orb
lods
arpl
push
in
jp
jmp
mov
shlb
dec
inc
mov
lds
jle
pop
imul
mov
and
call
dec
jg
inc
movsl
frstor
push
data16
lea
cmp
mov
pop
or
ret
push
add
fists
pop
jecxz
cmc
push
aad
ficompl
add
adc
inc
inc
mov
out
dec
jmp
or
dec
or
aam
aam
sub
inc
adc
xor
stos
cltd
add
lock
jmp
fiadds
lret
iret
mov
mov
mov
das
ljmp
xchg
push
popf
xchg
dec
adc
xor
call
cs
lds
inc
cmp
push
and
arpl
xchg
mov
mov
enter
rcr
and
push
aas
jbe
test
pop
mov
pop
pop
movsb
aaa
or
loope
ss
leave
movsb
leave
jg
icebp
mov
fidivs
push
fstpt
loopne
nop
cld
or
je
mov
jl
ret
popf
popa
add
fisttpl
lea
push
mov
xchg
sarl
and
sub
popa
cwtl
leave
outsl
mov
mov
lods
push
sbb
outsl
cs
xchg
push
aaa
pop
jg
scas
dec
mov
clc
mov
mov
jl
mov
mov
cwtl
add
mov
out
inc
ss
std
push
inc
mov
push
pop
imul
pop
and
shrl
cmp
xlat
jl
cmp
sbb
roll
leave
and
fwait
outsb
mov
push
jge
sub
stc
mov
adc
add
scas
bound
cli
dec
fidivrs
pop
jnp
pop
repnz
sti
jecxz
les
cmp
repnz
fdivl
jne
cmpsl
in
or
pop
or
adc
sub
into
dec
sbb
aaa
mov
jg
cltd
jb
jo
mov
jbe
jnp
xchg
cld
xor
js
addl
rorl
bound
dec
outsb
dec
fs
cmp
cld
xchg
testb
test
adc
pop
mov
sarl
imul
repz
adc
mov
adc
jg
xor
mov
jp
pop
lret
scas
or
mov
mov
int
stos
out
lcall
nop
xor
les
aad
call
cld
das
subl
sbb
add
adc
mov
aad
pop
mov
add
inc
fmul
push
rclb
jecxz
and
outsl
sub
out
out
mov
lret
negl
pop
add
mov
push
cmc
iret
enter
dec
cmpsb
aam
mov
fiadds
scas
xchg
icebp
dec
push
movsb
arpl
popf
dec
dec
and
shl
dec
xor
dec
dec
into
cmpsl
xchg
cmp
lods
mov
cmp
ljmp
fistpll
jae
lcall
lods
sub
mov
leave
sbb
lock
rorb
outsl
jo
push
xchg
loope
add
push
push
push
pop
adc
gs
jb
mov
sahf
and
aaa
pop
cmp
and
jns
sub
cmpsl
ss
inc
xor
fstpl
xlat
pop
popf
mov
mov
ja
fisubs
or
out
js
sbb
into
daa
in
outsl
jns
pop
stos
dec
and
repz
lahf
push
push
jne
inc
push
btc
fcoml
xchg
push
ja
lods
fisttpll
fldt
pop
mov
xor
outsb
test
jb
inc
mov
mov
dec
add
xchg
xor
in
sbb
inc
pop
push
inc
subl
loop
push
aad
xchg
loopne
pushf
testl
ljmp
pushf
xchg
jge
ljmp
sbb
imul
dec
insb
push
sbb
sbb
in
call
cmp
in
push
inc
in
and
lods
jle
pop
pusha
jmp
sub
fnop
jbe
cmpsb
in
scas
test
popf
fistpl
inc
mov
lds
test
lds
pop
adc
fstl
pusha
xor
xchg
fdivrl
push
xor
mov
into
hlt
je
addb
lock
lea
fs
sub
popf
fdivp
sbb
sub
sbb
lret
pop
into
test
das
sbb
mov
mov
cs
sbb
loopne
xorl
add
adc
push
ret
dec
out
push
stos
fs
adc
jmp
jecxz
add
adc
or
test
out
mov
and
arpl
pop
xchg
movsl
sbb
lods
rcrb
lahf
mov
les
sti
or
cwtl
push
cmp
cmp
ss
pop
adc
adc
mov
xor
jbe
ret
push
call
clc
mov
movsb
jo
dec
adc
pop
inc
sbb
cmp
cld
pop
je
fisubrs
jl
xchg
mov
movl
aas
in
cld
cltd
aam
add
dec
add
clc
adc
xor
cmp
or
dec
jno
cmp
outsl
out
aas
popa
jle,pn
imul
fldt
push
repnz
mov
pop
or
scas
push
mov
push
inc
jbe
mov
loopne
leave
adc
ss
xchg
pop
adc
cmc
pop
jecxz
inc
js
cmc
mov
sbb
xor
mov
test
or
notb
ljmp
sbb
and
ror
xchg
aam
add
add
nop
dec
xorb
xchg
fcoml
js
in
sbb
jg
xor
ss
subb
hlt
shll
and
loop
clc
pusha
leave
cmpl
movsl
add
out
enter
or
pop
pop
sub
adc
enter
push
lock
das
fisubl
cmp
bound
xor
addr16
out
mov
pusha
shl
jb
out
sub
inc
lds
out
or
adc
in
or
cli
or
mov
dec
outsl
divl
pop
push
pop
dec
mov
mov
fs
or
jb
addr16
sbb
and
clc
je
and
sbb
push
jl
loopne
movsb
stos
sub
cmp
or
push
mov
mov
cmpsb
sbb
push
mov
fnstcw
in
inc
sub
or
loope
cmc
in
mov
iret
out
cltd
mov
mov
decl
rcll
stc
outsb
outsb
outsl
cmp
cmp
xchg
out
mov
xor
add
sub
jg,pt
mov
inc
arpl
ror
notb
addr16
lret
mov
mov
jne
je
inc
scas
xchg
fwait
mov
jge
mov
lock
es
loopne
mov
mov
mov
adc
fiadds
test
fcomp
pop
mov
adc
in
cmpsb
ror
xor
sbb
out
dec
arpl
adc
inc
pushf
fsubrs
xchg
or
lahf
int3
pop
push
into
inc
adc
rcrl
adc
scas
mov
dec
mov
imul
adc
sarl
shrb
rcrb
sahf
sub
mov
inc
adc
sub
shll
lret
adc
jne
mov
or
jmp
or
dec
add
push
inc
mov
jbe
push
addb
iret
ja
push
hlt
dec
cltd
stc
iret
push
popa
in
pop
loopne
pop
sarl
fwait
xchg
bound
pop
loopne
test
shll
test
ljmp
ret
mov
pop
pop
pop
nop
in
mov
sti
cmp
sub
pop
mov
xor
cli
adc
adcb
pop
icebp
jg
xlat
stos
inc
fsubl
push
dec
xchg
push
xchg
shrl
fcomps
cmpsb
cmc
adc
lods
inc
mov
add
leave
shlb
insb
mov
js
add
shrb
mov
push
xor
push
and
sub
icebp
mov
sbb
mulb
sbb
rclb
sbb
adc
inc
inc
scas
adc
test
mov
xor
adc
fnstcw
pop
int
inc
pop
jns
loop
or
cld
std
arpl
add
inc
clc
cltd
cmp
iret
cmp
or
xchg
je
add
aam
adc
aam
add
mov
orl
mov
push
adcb
jmp
xor
add
stos
mov
paddb
lods
lods
or
dec
add
stc
jno
stc
out
inc
jp
or
xchg
gs
sub
and
inc
jno
int3
fcmove
es
subb
xchg
push
popa
mov
test
inc
movq
mov
into
sbb
mov
pop
gs
adc
sbb
jp
test
mov
pop
adc
scas
fdivrl
pop
int
inc
jp
repnz
xchg
ret
push
pusha
iret
dec
xor
pop
rcrl
jl
adc
lods
int3
inc
stos
dec
gs
out
nop
inc
rcrb
data16
insb
mov
dec
fldt
sahf
insb
adc
xor
pop
xor
imul
cld
mov
lret
push
or
repz
arpl
fisubrl
xor
bound
pop
out
lcall
fs
mov
incl
ljmp
daa
jge
into
stos
mov
stos
enter
in
test
adc
adc
add
jns
lea
movsl
mov
fs
iret
cmp
push
xchg
mov
jbe
aad
mov
mov
mov
xor
pop
cmp
sub
xchg
into
push
mov
cmpsb
stc
scas
mov
gs
icebp
andl
rorb
sbb
ds
aad
cmp
jbe
repz
repz
push
hlt
push
inc
cld
fsubl
push
cmpb
xchg
cmc
mov
loopne
test
sub
xor
mov
addb
push
sub
or
or
jecxz
add
int
scas
xor
int
mov
mov
mov
aam
clc
cwtl
inc
ret
sbb
sub
sub
test
push
int3
push
ljmp
jl
jnp
js
xchg
mov
sub
xchg
call
fwait
cmpsb
or
mov
fcoml
imul
dec
fldl
sbb
sub
notl
or
daa
inc
jecxz
cmc
inc
testb
inc
pop
notb
dec
add
mov
xchg
cmp
dec
je
lea
or
lods
inc
cmpl
out
add
aam
std
sbb
outsl
mov
filds
inc
scas
mov
int
push
add
pop
fcmovbe
cltd
and
push
push
jmp
mov
inc
sbb
ss
pop
pop
popf
shrl
inc
mov
fldl
inc
jle
out
arpl
mov
ljmp
aam
cmpb
les
arpl
mov
cs
mov
stc
push
into
sbb
ret
push
imul
pop
mov
adc
test
xchg
jge
push
dec
mov
lods
pop
sbb
cltd
shlb
jo
ja
cltd
cmp
iret
popf
hlt
inc
pop
push
nop
push
and
inc
mov
lds
jo
pop
es
xchg
xchg
aaa
fdivp
add
shlb
or
sarl
sub
ja
sub
lahf
loop
cltd
pop
mov
mov
mov
dec
ds
xor
jbe
fwait
inc
xchg
scas
dec
jl
popa
jo
cwtl
push
pop
mov
sub
or
push
cmpsb
lods
jge
repz
push
mov
test
ds
movsb
stc
inc
and
lahf
mov
cmp
sbb
incb
stos
and
dec
ret
lea
int
imul
and
outsb
lock
ret
sbb
test
mov
adc
add
and
sbb
sahf
aas
scas
out
push
sub
xchg
or
jne
xor
and
inc
aam
mov
mov
xchg
push
fbld
into
cwtl
in
in
or
aaa
xor
iret
out
fsubs
add
or
stc
hlt
scas
lahf
stos
int3
push
lret
mov
mov
and
inc
icebp
xchg
inc
cmp
fimuls
incl
into
loope
pop
mov
mov
imul
push
stos
jb
lea
push
mov
ret
mov
dec
lret
and
push
inc
inc
fcomps
pushl
push
out
lret
jne
outsl
shr
cmp
jb
xchg
outsb
lods
add
lcall
sub
mov
adc
dec
popf
shrl
lahf
sub
loopne
pop
das
dec
inc
fcomp
ss
push
xchg
mov
push
xchg
cli
orb
jbe
out
xchg
push
cwtl
mov
xor
sti
lret
mov
mov
or
push
cs
mov
adc
mov
adc
or
lret
outsl
cmpb
dec
in
sbbl
ficoml
idiv
xchg
mov
sub
sub
push
dec
mov
scas
ss
clc
xor
int
sahf
push
in
inc
mov
loopne
sbb
imul
dec
push
test
pop
xlat
pop
xor
pop
jp
add
enter
mov
iret
divl
aaa
loope
outsb
ds
add
in
out
lods
add
in
push
xchg
daa
sub
push
in
add
xor
scas
cltd
stos
jl
aas
mov
adc
jmp
mov
add
inc
pusha
inc
into
mov
jb
into
jbe
icebp
mov
out
insb
mov
lret
mov
stc
loopne
dec
mov
sub
mov
jb
movsb
add
jnp
mov
in
outsb
sub
sub
mov
aaa
lcall
arpl
das
and
nop
pop
or
mov
mov
inc
int
in
jb
cmp
int
inc
and
sarl
loop
imul
and
xchg
jae
sbb
pop
and
xchg
mov
inc
and
xchg
iret
adc
jmp
fbld
das
jnp
mov
insl
mov
por
mov
fcom
sarb
fs
cmp
sbb
aas
jmp
inc
mov
clc
pop
mov
cmpsb
jp
inc
push
push
mov
pop
mov
movsl
xchg
pop
push
lds
or
je
nop
mov
lahf
das
xchg
jae
cmp
int3
lock
add
loop
cmp
sarb
or
fnstenv
lock
imul
loope
xchg
aam
iret
in
or
inc
idivl
jp
jle
aaa
push
dec
jno
sbb
add
shrl
add
pop
ljmp
addl
cmp
sbb
mov
add
andb
into
lock
pop
shlb
mov
add
push
jmp
jno
inc
sbb
cltd
cli
inc
movsb
es
or
ja
cli
ret
test
inc
aaa
andb
mov
ficomps
add
call
pop
or
or
bound
es
loopne
icebp
in
movsb
cmp
test
shll
mov
dec
mov
fs
pop
add
sbb
cmp
fidivs
ss
dec
pusha
lcall
push
scas
sbb
xchg
pop
stos
movb
push
mov
in
mov
push
lret
test
pop
sbb
repnz
pop
lahf
mov
or
pop
inc
in
out
mov
jbe
adc
sub
push
xorl
cmpsl
test
xchg
in
push
int
movsl
inc
sub
mov
ficomps
or
pop
mov
mov
push
loope
or
sub
lods
jp
repz
fistpll
dec
outsb
pop
loopne
call
dec
stc
add
or
in
xor
sbb
imul
xor
das
push
fs
xchg
sbb
and
jp
cmp
mov
and
cltd
xchg
dec
pop
push
insl
outsl
add
mov
sub
fidivs
cmc
scas
jo
xlat
addr16
fprem1
mov
xchg
sbb
mov
aad
adc
loopne
cld
or
aad
dec
outsb
jmp
out
in
dec
cmp
add
fsubr
std
mov
int3
sub
jp
cmp
repnz
sbb
test
fbld
lret
mov
ret
mov
jns
push
je
rcrb
mov
fdivrl
xor
mov
cmp
adc
xor
pop
push
adc
pop
pop
sub
popf
mov
sahf
inc
xchg
in
loop
cmpsb
inc
and
adc
cmc
push
pop
sti
inc
push
movsl
scas
loop
clc
mov
shr
les
or
dec
cmp
mov
add
mov
pusha
es
out
cmc
repz
add
mov
jmp
xor
push
mov
mov
outsb
push
mov
cmp
dec
cld
repnz
xchg
insb
jl
scas
ret
inc
adcl
pop
pop
mov
sar
test
paddsb
mov
jo
cmovne
cmp
inc
test
data16
dec
std
aaa
inc
push
les
testb
imul
add
lahf
in
xor
xchg
push
lea
movsb
popa
mov
ljmp
cmpsl
les
mov
jl
mov
mov
jmp
cmp
pop
inc
in
inc
enter
aaa
dec
es
jmp
jp
push
inc
add
pop
ficoms
aad
popa
fistps
aad
repnz
and
arpl
leave
out
js
mov
int3
ret
sti
dec
movsl
sub
sub
imul
mov
sbbb
jo
outsl
insb
adc
jnp
faddl
jmp
iret
iret
shlb
mov
pop
add
adc
and
sub
cwtl
js
mov
insl
sub
jecxz
xor
fildll
push
jo
xlat
scas
pop
jl
xor
xchg
jle
or
push
xchg
ficoml
mov
ret
inc
lret
lock
fdivs
xor
mov
xchg
jne
add
int
and
push
int3
lods
jl
sbb
mov
inc
pop
cmpsb
sbb
popa
xchg
cmpsl
insb
push
xorb
and
cmp
lahf
test
jne
sbbb
aam
mov
cmp
aam
stos
add
push
push
cmp
popf
leave
loop
sub
add
push
jle
inc
sub
das
aam
lret
daa
lock
out
cmp
pop
dec
or
aaa
mov
ss
mov
adc
outsl
jp
lcall
cmpsb
stos
dec
dec
push
lret
or
or
cmp
aaa
xchg
pop
mov
fisttpl
inc
and
push
jbe
xor
adcb
sub
popf
test
mov
sahf
mov
shrl
mov
xchg
mov
adc
arpl
insl
fsubl
and
cmp
mov
xor
ja
shlb
clc
add
mov
imull
push
xchg
sbb
aas
xchg
imul
popf
stos
enter
mov
aam
or
pop
ja
iret
repnz
xor
inc
mov
push
gs
in
hlt
int3
js
mov
std
pushf
push
outsb
lds
push
clc
xchg
mov
movsb
stos
mov
rolb
push
stc
loopne
pop
arpl
ljmp
pop
push
loop
or
or
push
lds
sub
sub
adcb
pop
or
mov
ja
mov
std
lods
std
fidivrl
adc
test
mov
aad
mov
add
inc
hlt
mov
mov
sahf
sbb
clc
int3
mov
fstpl
inc
sub
and
loope
dec
sbb
or
mov
cmpl
sbb
fcomps
fsubs
fisubrl
repz
xor
scas
jb
add
fnstenv
imul
xor
out
push
pop
or
fs
xchg
sub
sarb
or
mov
imul
mov
jbe
push
inc
sbb
add
inc
clc
mov
shll
divb
and
inc
jp
stc
mov
lea
ret
and
ror
push
test
cmp
imul
adc
adc
lds
fimuls
loopne
mov
xchg
outsb
mov
inc
addr16
js
xor
lock
pop
outsb
test
cmp
jecxz
out
inc
insl
pushf
int
pop
jns
mov
sahf
addr16
cmpsb
and
push
icebp
mov
movsb
mov
xlat
lret
int
and
js
fists
fs
decl
push
xchg
or
mov
xor
sahf
cmp
fisttps
fimull
jbe
pop
jnp
les
or
jno
mov
in
jns
xchg
shrb
enter
stos
ljmp
jecxz
push
mov
lret
sbb
mov
movsb
push
ret
leave
ljmp
mulb
clc
cmp
push
xbegin
rcrl
inc
pop
jne
pop
jno
divl
test
lret
xchg
aad
push
mov
mov
sti
push
pop
or
stc
scas
inc
sbb
rolb
or
jmp
cwtl
mov
pop
cmp
or
shlb
xchg
sbb
lds
sub
inc
xchg
mov
mov
hlt
negl
xor
adc
lahf
pop
ret
aam
pop
in
inc
jmp
cmpsb
xchg
cmp
mov
pop
dec
or
jne
pop
mov
pop
cmc
and
jl
clc
je
movsb
xchg
das
push
rcrl
stos
push
addr16
lret
pop
decb
inc
fisubrs
fnstenv
adc
and
mov
loope
inc
pusha
ljmp
scas
pusha
loope
sub
or
mov
jbe
arpl
jbe
pop
add
movl
mov
xchg
out
jmp
jmp
das
in
sbb
cs
dec
inc
stc
insl
mov
cmpsb
adc
pop
jno
shrb
jl
jp
mov
xor
adc
xchg
xor
push
mov
lret
movntps
cmp
mov
inc
rorl
dec
gs
call
aas
jecxz
cs
nop
or
imul
xor
sub
loopne
test
shlb
xchg
orl
data16
enter
test
repnz
cmp
pop
add
testl
mov
jle
mov
cld
incb
xchg
imul
pop
pop
prefetcht2
ret
adc
movsl
orl
push
mov
psrld
jbe
fwait
imul
xchg
push
insb
xlat
cwtl
cltd
aaa
aaa
push
and
mov
adc
xchg
pop
and
lods
inc
push
arpl
ds
sbb
call
inc
cmpl
imul
pop
pop
xchg
scas
pop
out
xchg
repz
push
lea
sbb
stc
adc
dec
adc
cmpb
iret
adc
rcll
push
inc
ficompl
inc
jae
sub
jmp
aam
mov
scas
rcrl
push
cmp
subl
repz
outsl
xchg
std
test
pop
xchg
popa
push
push
shl
dec
jb
pop
and
cmp
push
mov
ja
xchg
pop
stos
xlat
cld
popf
xchg
das
inc
lock
insl
xchg
jns
into
jns
ljmp
fsubrl
mov
mov
cli
repz
push
pop
pop
add
das
pop
shlb
cmp
test
aad
xor
or
lea
test
mov
cs
out
hlt
cmp
xchg
jge
fildl
insl
mov
push
aad
pop
pop
fbld
mov
adc
fcmove
adc
pop
rol
mov
inc
hlt
cmpsb
addr16
int3
mov
jmp
pop
jl
out
outsb
scas
out
mov
push
fcomi
xor
std
hlt
mov
pop
and
movsb
adc
mov
xor
mov
sub
inc
and
or
movsl
inc
push
mov
sub
sti
push
sbb
cmp
lods
int
jmp
mov
sub
or
test
mov
mov
or
push
in
test
cmp
mov
mov
add
inc
xor
cmp
repz
dec
std
xchg
cs
or
js
leave
fstps
mov
push
shrb
xchg
xor
aad
nopl
outsl
push
fsqrt
lea
jnp
je
or
inc
andl
push
std
mov
scas
fs
add
xchg
movsb
scas
test
cltd
cmp
shll
repnz
std
daa
jg
in
outsb
dec
xor
pop
int3
daa
mov
lret
addb
scas
jns
cmpsb
sbb
or
les
clc
mov
ja
stc
push
testl
sbb
cmp
cltd
jl
xor
adc
inc
in
insb
int3
mov
mov
mov
jecxz
loope
scas
push
sbb
or
cltd
dec
and
cwtl
jb
lds
stos
inc
mov
jae
pop
add
or
es
ja
push
xlat
ret
clc
mov
jge
mov
loopne
sbb
sub
push
jno
nop
stos
rol
imul
push
add
xor
pop
mov
loopne
cmp
xor
jl
xchg
cld
das
or
jae
pop
imul
imul
pusha
test
inc
sbb
mov
scas
push
lods
cmpsl
or
outsb
sbb
adc
addr16
or
xchg
sar
mov
enter
divb
movsb
imul
mov
dec
mov
add
divl
dec
les
pop
mov
pop
mov
cmc
movsb
and
sbb
sub
jae
mov
cwtl
popf
out
mov
or
pop
inc
stos
push
push
inc
ret
outsl
fdivrs
fnsave
xchg
push
jp
inc
pop
sbb
mov
add
call
and
sub
pop
test
sub
jmp
daa
push
pop
xchg
bound
popa
mov
fistpl
sub
mov
xchg
dec
sub
insb
or
push
and
fwait
pop
lods
nop
push
ja
out
fiadds
lods
mov
mov
test
inc
imul
adc
aad
jmp
inc
mov
adc
dec
in
mov
mov
or
jno
str
mov
jmp
hlt
push
cltd
arpl
lahf
mov
and
fdivrp
stc
cmp
sti
push
arpl
xor
xchg
inc
pop
repnz
mov
testb
in
push
sbb
cmp
jne
xchg
or
inc
jg
pop
lcall
pop
js
iret
test
inc
lret
add
pop
dec
xchg
xchg
cli
ficompl
cwtl
sub
mov
sbb
cmpsl
popf
sahf
and
lcall
fisubrs
dec
sub
out
xlat
aad
push
cmpsl
cmp
jae
jecxz
pop
adc
xor
dec
or
xchg
je
dec
imulb
std
add
cwtl
push
mov
repnz
lret
into
loope
lahf
movb
push
jae
sahf
pop
sbb
push
stos
js
popf
cli
adc
mov
push
xchg
ret
sbb
xchg
in
push
mov
cmp
loopne
cld
ret
add
mulps
sub
test
popa
fcmove
inc
das
test
push
mov
push
inc
fidivs
ret
cmp
mov
add
sahf
push
inc
fistl
xchg
mov
int
or
xchg
rorb
mov
xorb
push
aas
loope
int3
into
pop
fdivl
stos
mov
mov
out
cwtl
jae
mov
insl
orl
cmp
movsb
inc
cmpsb
jg
leave
mov
and
push
and
or
aaa
sub
rcl
mov
adc
push
ljmp
and
lret
icebp
mov
sub
lcall
cmc
addr16
mov
int
sbb
lods
mov
rorl
adcl
mov
push
popa
jo
push
push
cmp
pusha
pop
aam
dec
sub
pop
cli
in
dec
shr
ret
mov
enter
cmpsb
fst
jecxz
cmp
sub
outsb
add
gs
in
jge
daa
add
jb
mov
sub
imul
pop
sbbb
sbbb
pop
and
sub
arpl
lods
mov
imul
pop
mov
shr
pop
hlt
aad
jecxz
test
cmp
mov
xor
xorl
movsl
inc
inc
into
lret
sbb
cmp
cmpsb
out
ljmp
cmpsb
lea
cmp
dec
gs
ret
mov
test
push
jns
mov
ljmp
js
dec
mov
xchg
sub
jns
cmp
or
adc
mov
mov
add
pop
arpl
mov
mov
pop
test
sub
dec
dec
add
xchg
nop
ljmp
xor
cmp
sar
es
push
repz
sbb
jecxz
and
fwait
in
mov
ljmp
repnz
jmp
add
ja
sub
push
inc
outsb
and
push
or
leave
movsl
pop
mov
es
ja
mov
popf
repz
lea
jge
repz
add
pop
pop
fcomps
ljmp
mov
inc
das
dec
cmp
jp
ret
mov
movl
and
xchg
sarb
sub
cld
and
xor
mov
fwait
fs
dec
mov
clc
cmp
dec
pop
lods
pop
into
je
mov
movsb
add
sbb
jecxz
out
mov
push
popa
in
clc
nop
add
lock
add
and
mov
mov
out
and
push
push
mov
mov
ret
push
rcll
mov
ja
sbb
pop
pop
mov
xchg
orb
or
pop
lods
mov
add
in
pushf
scas
xor
or
or
arpl
cs
ror
rclb
mov
mov
in
lea
inc
sub
arpl
jle
ret
mov
scas
jo
xor
xchg
pop
cs
lcall
movsl
pusha
das
and
jno
popa
push
xchg
pop
xchg
arpl
adc
leave
fisubl
dec
mov
mov
cmpsl
sub
test
mov
or
xchg
cmp
or
pushf
ret
mov
aad
dec
mov
orl
or
xchg
pop
testb
stos
jl
xchg
hlt
pushf
scas
dec
jmp
push
test
pushf
xchg
jb
jp
mov
imul
scas
mov
or
mov
incb
mov
xor
jbe
fists
mov
jno
das
iret
sarl
inc
out
xor
and
sub
sahf
push
lds
cld
cli
loop
ret
jnp
sar
and
adc
xchg
rorb
xlat
sub
mov
jp
sbb
ja
std
cmp
xchg
inc
cmp
mov
inc
dec
imul
and
div
test
mov
pop
and
pop
dec
jg
gs
sahf
out
div
ret
lods
adc
xlat
jmp
dec
cmp
insb
stos
mov
add
imul
sbb
xchg
rolb
movsb
xlat
dec
jmp
pop
pop
adc
bnd
adc
repnz
loop
addl
bound
sub
sub
xlat
inc
leave
mov
pop
orb
inc
mov
testb
mov
sbb
insl
fnstcw
add
or
xor
adc
xor
pushf
sub
xchg
and
aas
ss
adc
cmp
or
std
pop
push
roll
adc
pop
or
test
jl
push
pop
pop
adc
xor
loope
fbld
jge
stc
mov
pop
push
test
mov
aad
mov
xchg
pop
or
pop
outsl
imul
sub
insl
aas
enter
sub
iret
sub
mov
xor
mov
lock
out
pushl
xchg
lcall
in
fld
xor
mov
pop
or
mov
mov
dec
aam
decl
rclb
sub
das
pop
jmp
in
mov
dec
pop
mov
stos
test
ljmp
xor
sahf
ss
rorb
inc
cs
add
js
push
mov
cltd
mov
mov
insb
fldln2
enter
fs
push
int3
bsr
jl
sub
hlt
dec
pop
shr
and
and
ret
lret
jle
xchg
cmpsl
add
jecxz
jle
xor
jg
js
or
add
lea
xor
push
cmpsb
jg
mov
xchg
inc
lods
out
or
adc
inc
popa
dec
out
fmul
sbb
sub
out
jge
xor
and
add
xor
gs
xchg
cmc
stos
cmpsl
jne
fldcw
ja
mov
or
or
jnp
outsb
sbb
mov
or
and
mov
inc
movsb
in
push
xor
sahf
pusha
insw
and
pop
cmpsb
xor
add
iret
das
mov
xchg
cmp
and
mov
pop
xchg
push
shll
cmpsb
adc
pop
mov
addr16
movsb
sub
mov
sub
incl
mov
jge
dec
dec
or
push
int3
pop
pop
pop
xor
mov
jns
mov
imul
mov
cmc
push
sbb
dec
lods
addb
ss
fbstp
in
cmc
inc
mov
mov
mov
dec
jecxz
cmpsl
inc
inc
fstpt
daa
fnstenv
inc
mov
or
sub
js
aad
and
mov
repz
push
cmp
int3
bound
mov
je
sbb
cs
push
cwtl
mov
rorl
cmpb
in
dec
rcr
cmp
jns
rolb
movsl
mov
xchg
js
add
jo
cmp
jne
imul
cwtl
jnp
adc
add
xchg
cmp
jnp
mov
push
mov
divb
divb
call
stc
adc
setae
stos
rcrl
int
xor
stos
shr
shlb
mov
fldt
or
js
jb
cmc
xor
inc
push
out
jmp
mov
and
cltd
mov
and
es
aad
in
js
adc
aas
inc
xchg
mov
mov
mov
or
dec
jmp
jg
mov
add
mov
out
add
jle
mov
mov
jge
xchg
je
push
pop
push
aad
cld
testl
mov
mov
mov
xor
mov
fdivp
cmp
nop
pop
inc
in
or
movsl
cltd
inc
rcr
icebp
mov
andb
pusha
arpl
dec
pop
pop
ljmp
pop
push
xlat
inc
xor
inc
pusha
je
jp
jle
imul
dec
dec
xlat
clc
lods
jns
push
jbe
stc
ss
daa
fildll
cs
scas
movsb
inc
mov
jmp
pop
inc
sahf
jl
sbb
adc
jns
or
adc
rcrl
xchg
ss
inc
sbb
xor
and
or
sbb
int3
jl
and
gs
mov
hlt
hlt
fstl
push
mov
mov
push
and
push
lcall
fiaddl
push
mov
mov
inc
xlat
int3
std
sub
jbe
rcll
adc
cs
loopne
and
dec
lret
loopne
mov
mov
stos
sbb
xor
das
dec
pushf
pop
stos
js
mov
sub
xchg
push
cmp
cltd
fisubl
xor
inc
inc
sub
cmp
stos
nop
sbb
test
in
push
mov
jp
orb
inc
fdivl
mov
stos
add
sub
mov
push
inc
das
push
sbbb
cmpsb
ss
mov
pop
lret
mov
negb
adc
sbb
pop
dec
imul
or
cmp
insl
ja
inc
mov
aad
testl
mov
shl
lret
mov
sub
pop
adc
sub
pop
mov
mov
jmp
ret
dec
out
popf
jg
inc
popa
cmp
mov
leave
mov
rol
cmp
fwait
pop
movsb
or
dec
jp
cld
pusha
or
mov
push
dec
js
add
movl
mov
ja
and
pop
lock
out
pop
jb
mov
jp
mov
dec
cltd
aad
push
std
and
not
repz
ret
mov
xchg
and
mov
xchg
lcall
sahf
sbb
add
lds
mov
pop
jns
mov
jns
test
cli
cmpsb
ja
icebp
cltd
xchg
adc
mov
jecxz
sarb
ja
pop
and
mov
pusha
mov
cmp
jo
pop
add
pop
movb
iret
push
out
rcrl
xchg
push
pop
imul
stc
xor
jmp
dec
xchg
std
inc
sub
jmp
dec
mov
jo
sub
les
cmp
add
cmpsl
push
aam
mov
jnp
jbe
ljmp
inc
int3
inc
repz
sbb
mov
inc
sbb
out
andb
cmp
ss
add
popa
rcl
scas
rorb
mov
cltd
pop
repz
test
push
and
xor
cwtl
iret
xchg
pop
leave
popf
push
mov
fiadds
negb
mov
mov
nop
idivb
ss
ja
test
and
sbb
lahf
movsl
outsb
call
lret
cs
das
push
inc
xor
xchg
fwait
in
clc
jnp
mov
xchg
xchg
scas
icebp
pop
arpl
dec
pop
leave
mov
das
jle
dec
xor
push
inc
xchg
add
push
pop
jl
mov
popf
and
mov
cmpsl
cmp
fcompl
push
mov
ljmp
sub
pop
sub
decl
inc
mov
hlt
adc
clc
xchg
pop
jecxz
iret
andb
push
and
inc
leave
mov
pop
dec
enter
dec
xchg
inc
add
xchg
sub
mov
push
inc
loop
fisttpl
sub
xor
fistps
sbb
lcall
mov
adc
dec
into
sub
cmpsl
arpl
cmpsb
push
mov
callw
pop
dec
shll
xor
test
andb
repnz
js
mov
push
inc
push
jb
push
jl
cmp
adc
inc
test
push
in
fisubrl
add
adc
dec
idivl
das
xlat
ja
add
pop
out
faddp
negb
xchg
repz
mov
jmp
jbe
fldt
pop
sub
push
pusha
jmp
xchg
imul
xchg
scas
imul
clc
fs
jmp
lret
mov
fists
orb
fimull
push
in
pop
mov
lret
cs
cmp
subb
sub
inc
xorl
dec
and
jae
sub
xchg
or
add
mov
imull
jne
lods
mov
js
data16
nop
jo
mov
cli
addr16
je
mov
adc
addb
fistpll
sarb
insl
mov
or
mov
andl
pop
inc
sahf
sti
mov
outsb
into
loop
std
adc
pushf
cmc
xor
inc
out
xchg
fadds
push
mov
pushf
clc
xchg
pop
pop
xchg
xchg
es
stc
xor
lock
cmp
pop
or
cmpsb
pop
jge
ljmp
cmp
cmp
and
test
lret
loope
loop
pop
mov
lds
imul
jecxz
popf
mov
sbb
popa
fcomps
or
sub
xchg
pop
movsl
push
out
xor
push
add
aad
sub
sbb
mov
pop
test
mov
push
lods
out
ds
mov
mov
sub
fistl
lods
sbb
in
push
dec
enter
int3
cwtl
mov
xlat
add
adcl
mov
shll
mov
sbb
test
outsl
add
lahf
cmpsb
lods
push
cmpsb
sahf
dec
stos
sarb
enter
pop
push
aaa
adc
add
test
inc
xchg
xor
cwtl
ret
push
sub
push
dec
in
mov
pusha
ljmp
inc
mov
shrl
xor
cmp
testl
cltd
push
xchg
mov
ljmp
adc
int
or
jae
push
and
cmpsb
mov
sbb
mov
inc
aaa
sti
daa
xchg
cmp
xchg
mov
lahf
rorl
lea
fidivs
xchg
pushf
pop
lods
out
and
in
jp
mov
jg
dec
movsb
pusha
dec
jecxz
loop
fwait
jo
dec
add
insl
fcomps
cmpsl
sub
push
sbb
mov
sahf
sbb
and
push
add
movsl
in
adc
sti
cmpl
add
mulb
lods
push
aaa
add
test
mov
movsb
ficoml
pop
dec
repnz
jl
stc
pop
xor
je
mov
mov
or
and
cmp
jge
stos
mov
mov
push
adc
popf
xchg
mov
adc
push
cmp
ss
movsb
mov
and
sub
aad
das
adc
addr16
call
xor
push
xor
outsl
cmpsl
mov
push
out
daa
push
fdivl
cmp
inc
mov
repz
or
inc
and
pop
fldcw
inc
loop
cmc
jp
ret
rcl
sub
or
out
loop
in
push
es
dec
pusha
insb
dec
pop
in
sbb
jns
jo
in
scas
out
cmp
or
sti
mov
lods
push
inc
faddl
call
sbb
push
clc
sbb
add
push
jnp
rorb
mov
dec
add
lret
push
jbe
adc
hlt
je
std
jmp
cli
jle
in
sub
xor
testl
int
shll
int3
sbb
cmp
jmp
jle
fabs
pop
mov
lahf
movsl
jp
repnz
test
shl
lret
xchg
movsl
pop
fisttpl
or
mov
pop
or
xor
bound
xchg
pop
lea
fcmove
jae
dec
subl
adc
cmpsl
xlat
xor
insl
and
mov
insl
and
imull
sti
fcmovu
movsl
xchg
xchg
in
ja
sub
dec
popa
xor
gs
fninit
fildll
adcb
lret
stc
add
pop
mov
mov
sbb
cmp
daa
push
mov
xor
xchg
mov
adc
mov
push
jo
jmp
xchg
jns
ds
inc
adcb
push
add
shrb
sub
or
in
mov
out
add
mov
xor
mov
jbe
outsb
es
xchg
add
mov
cmp
inc
pop
sahf
jae
jae
xchg
inc
mov
ret
loopne
push
xchg
or
jnp
cmp
jecxz
pop
sub
fwait
mov
lods
fdivr
ljmp
loope
lcall
nop
test
out
mov
jle
movsb
cmp
inc
decl
jle
ret
sbbl
aas
cld
lock
mov
out
or
pusha
mov
adc
gs
mov
and
jl
repz
mov
sbb
mov
jb
sti
and
outsl
dec
imul
mov
lock
out
mov
out
sbb
sbb
insb
jns
loope
ja
jb
scas
out
out
jo
cmp
mov
clc
adc
push
outsl
jno
in
add
cmp
or
push
cltd
push
hlt
repz
imul
push
shrl
push
daa
loope
les
xchg
add
xchg
ret
pop
ret
repz
int3
das
xchg
or
stos
aam
call
orl
popa
bound
jg
out
int3
mov
test
cmp
in
and
or
lds
fcomps
insb
xchg
rcrb
pop
jle
adc
xchg
pop
add
mov
fcomps
adc
mov
cs
pushf
lds
data16
dec
cltd
in
mov
ds
dec
push
add
repnz
mov
enter
fldlg2
int
and
mov
jae
jns
mov
hlt
lea
jne
push
sub
inc
das
pop
pop
xor
ss
mov
aaa
je
lret
mov
fdivs
inc
std
inc
mov
in
subl
scas
fwait
hlt
adc
push
sbb
add
enter
fisubs
xchg
jae
mov
xor
xor
inc
into
xchg
int3
inc
ljmp
push
rclb
mov
in
adc
cmp
rcrl
fwait
scas
bound
test
into
fsts
fbstp
sahf
xchg
sub
pop
scas
cmp
mov
cmc
xchg
lahf
and
mov
dec
cmpsl
in
loopne
dec
push
imul
das
cs
movsb
and
fadd
adc
jl
cli
adc
sbb
xchg
push
ffree
sar
add
outsb
push
aad
xor
fldenv
jle
jle
xorl
rcr
mov
inc
aas
mov
xchg
and
in
xor
jbe
inc
dec
xchg
das
ficompl
push
mov
pop
dec
addr16
pop
sbb
aaa
dec
push
arpl
aam
mov
mov
pop
rclb
in
mov
pop
icebp
sub
lods
out
sub
mov
or
adc
stos
xorb
test
dec
add
and
and
hlt
mov
mov
xor
adc
cmp
push
arpl
movsl
or
dec
pushf
andb
outsb
scas
sbb
addl
push
jg
mov
stos
fildll
xchg
mov
imul
shll
push
cmc
jge
xchg
mov
rcll
subl
nop
pop
sarl
leave
mov
dec
int
push
ds
ret
cmp
mov
jge
call
push
pop
jge
scas
loopne
mov
push
rcrb
cmp
ja
mov
jecxz
je
xchg
inc
pusha
jg
repnz
adc
xchg
aaa
sub
mov
cmpsl
mov
shrb
jp
or
rsqrtps
dec
pushf
add
sbb
mov
cmpsl
mov
shrl
loopne
andl
mov
in
test
daa
lods
out
xor
mov
aas
cs
mov
lea
mov
adc
fwait
dec
add
push
jb
rorl
sub
xlat
jne
cmp
pushf
mov
sbb
es
sarb
lret
dec
inc
jmp
xchg
inc
adcl
std
gs
pusha
fwait
in
adc
sbb
mov
movsb
inc
pop
pop
out
push
inc
cwtl
js
mov
mov
mov
lret
test
xchg
cli
mov
fucom
aaa
rolb
arpl
js
pop
pusha
jecxz
fimuls
dec
add
xchg
pop
mov
lea
push
out
mov
mov
sbb
jnp
ja
sti
into
push
call
jmp
inc
scas
sti
mov
mov
ss
test
pop
inc
daa
pop
mov
lods
mov
xorb
jp
repnz
cli
push
lock
in
fisubrl
and
jmp
fnsave
adc
jb
adc
lahf
lock
xchg
push
add
jae
outsl
cs
xchg
mov
insb
add
out
or
popa
push
jno
xlat
pop
shrl
mov
ds
mov
pusha
dec
and
xor
ficomps
inc
sub
rol
mov
in
movsb
in
push
fiadds
dec
es
adc
jae
dec
mov
rcl
pop
cli
inc
pop
jno
dec
gs
inc
cld
sti
call
xchg
andb
jns
scas
gs
push
arpl
jae
mov
int3
mov
loop
out
mov
pop
or
mov
fsubrp
lods
push
mov
fwait
dec
push
xor
sub
pop
imul
jbe
mov
shl
js
push
jno
stos
mov
lds
movsb
mov
xchg
add
xor
inc
adc
cmp
mov
pop
jmp
mov
bound
pop
sub
or
test
push
loop
cmp
rcll
scas
icebp
push
loopne
rcll
mov
push
sub
mov
xchg
js
pop
mov
dec
insl
mov
xor
je
popf
movb
push
push
ljmp
js
cmp
fidivs
jecxz
addr16
xor
inc
jno
adc
dec
mov
xor
push
shll
cltd
mov
rolb
test
sub
ret
nop
mov
repnz
stc
jo
nop
aad
enter
pusha
cmp
mov
lds
push
bound
push
mov
rorl
sub
cwtl
incl
pop
div
nop
je
bound
jge
mov
sbb
sub
mov
cmp
rcl
leave
sbbb
icebp
mov
jl
cmp
fsubrs
add
xchg
aas
or
dec
idivl
xchg
jo
jge
add
lea
cmpsl
xchg
and
inc
jno
fildll
mov
sub
scas
js
cmp
push
iret
pop
jae
test
cs
sbb
or
mov
fcom
cli
jl
add
cmc
add
mov
xchg
ret
fs
mov
pop
aad
adc
inc
sbbl
aas
mov
pop
mov
cwtl
dec
inc
and
js
pop
pop
in
shl
loop
mov
jmp
dec
xchg
or
enter
test
ljmp
inc
push
jne
mov
es
out
loopne
sub
in
mov
pop
dec
lcall
inc
add
push
es
inc
inc
ret
jmp
sub
shll
sarb
imulb
mov
add
test
push
mov
cmp
aam
push
ret
into
adc
inc
or
dec
sub
or
sbb
adc
cmp
iret
jmp
mov
popa
mov
and
filds
cmc
js
or
test
add
pushl
push
aas
iret
lcall
inc
pop
inc
shll
jo
arpl
ja
dec
add
andl
pop
fistl
push
inc
jo
fstl
or
insb
outsl
fisttps
push
add
dec
cmp
pop
push
dec
into
adc
inc
jl
sti
pop
push
jo
push
pop
push
adc
loop
or
cmp
aam
lods
lds
inc
sbb
cmp
push
cmpsl
lods
mov
inc
lea
mov
addr16
mov
fwait
sbb
add
push
scas
sub
fs
pop
popfw
jle
aam
outsl
inc
js
inc
add
fstpt
and
inc
je
popf
jb
pop
das
ja
cmc
lock
pop
push
cmp
nop
les
mov
and
adc
scas
movsb
add
cwtl
push
pop
into
cwtl
and
pop
mov
test
int
movb
outsl
mov
inc
sub
sub
pop
fdivrs
dec
xor
mov
movsb
add
pop
inc
xchg
fstpt
leave
aam
pop
mov
movsb
adc
sub
aas
inc
mov
jbe
jmp
divb
fmul
cli
inc
dec
mov
rcrb
in
xlat
out
movsl
push
xor
sbb
mov
adc
out
mov
out
scas
flds
adc
jl
nop
ljmp
test
jae
loope
push
aad
loope
call
mov
sub
push
cwtl
adc
xchg
push
pusha
stc
lock
std
fdivrl
lods
cld
sbb
push
add
xchg
jno
sahf
push
and
dec
dec
das
out
cltd
xlat
mov
cmc
jmp
cld
mov
mov
pop
mov
int3
cld
vmovq
imul
sbb
movsl
dec
push
loopne
popl
lea
faddl
jecxz
pop
mov
pop
adc
and
outsb
xor
pop
enter
arpl
es
jnp
jg
adc
imul
add
fwait
mov
cmovp
ss
in
mov
push
js
pop
jmp
imul
call
mov
in
es
loopne
pusha
xchg
test
mov
jno
icebp
into
or
mov
sub
push
mov
mov
ret
dec
or
stos
add
pop
mov
push
add
sbb
bound
jge
aam
cmp
cmp
xchg
xor
mov
test
cld
push
sbb
push
fwait
push
pop
js
cltd
subb
jecxz
push
cmc
pushf
sbb
sub
ss
rol
inc
sbb
scas
adc
or
in
outsl
das
pusha
lret
seta
dec
sub
mull
arpl
push
push
lods
jbe
jp
das
mov
or
adc
data16
fmull
cmp
xchg
lds
lods
cmp
mov
lahf
pop
jmp
adc
cld
or
mov
sti
aas
hlt
clc
sahf
pop
or
and
adc
imul
sahf
jo
inc
pop
out
stos
gs
leave
add
push
push
sbb
and
int
mov
lods
cmpsb
jns
push
lret
idiv
mov
int3
notl
sbb
in
lock
jle
cmpsl
sub
jmp
adc
xor
sbb
jl
cli
xchg
fiaddl
aas
jnp
enter
jne
mov
popa
cmp
xchg
aam
outsl
cs
cmp
xchg
cmp
insl
xchg
lcall
clc
and
xor
xchg
out
or
je
or
jnp
mov
sub
lahf
cltd
push
cmp
sbb
cmc
jl
test
fisubs
sub
xchg
das
mov
pusha
jae
pop
sub
scas
jno
aaa
dec
out
lret
clc
mov
inc
add
mov
je
cwtl
les
dec
addl
jmp
inc
jb
popf
insl
lcall
adc
push
pop
push
fldcw
in
pop
in
daa
loop
les
add
pop
xor
ret
fwait
lret
sbb
pop
ljmp
mov
ret
test
and
ds
imul
pop
and
repnz
into
mov
out
aaa
jo
pop
stos
sbb
sbb
inc
mov
lcall
pop
clc
aam
jno
cli
lcall
js
imul
xor
xor
outsl
addr16
fldl
hlt
and
aaa
xchg
hlt
cmp
bound
cmpsb
cmp
das
rorl
xchg
jp
xchg
xor
in
xlat
mov
xchg
mov
and
or
les
pushf
out
mov
add
sub
sub
test
std
xchg
mov
mov
nop
mov
sahf
repz
andl
mov
lea
jne
mov
nop
arpl
sub
cmpsl
sub
push
dec
rorb
dec
pusha
adc
or
fstl
in
and
push
stos
sbb
in
jmp
dec
mov
jb
es
out
inc
xchg
rcr
push
cmp
movsl
test
notl
cmc
push
push
push
out
insb
xor
inc
adc
xor
dec
jbe
adc
dec
arpl
xchg
lahf
xor
lea
iret
ss
pop
or
push
lret
push
movsb
lret
mov
movsl
adc
mov
movsl
lcall
and
lret
lret
jmp
xchg
adc
mov
clc
sbb
in
cmp
sub
icebp
jae
inc
adc
orb
inc
add
cmp
xor
mov
ja
daa
hlt
lods
fsubrs
icebp
cs
dec
hlt
arpl
cltd
insb
adc
mov
or
fisttps
and
out
xchg
inc
pop
in
pop
fmul
pop
dec
mov
push
sub
js
inc
cmpl
fisubs
xlat
sub
pop
or
pop
mov
repnz
outsl
sbb
aad
inc
scas
push
pushf
and
leave
and
push
xchg
xchg
jnp
insb
mov
ja
ret
loope
cmp
in
sub
lea
fstpt
and
std
test
or
jmp
in
jge
lcall
leave
les
add
dec
mov
push
push
cs
xchg
imul
xchg
push
vpsubd
cmp
xor
and
repz
lcall
add
or
xchg
cs
repz
dec
inc
jnp
js
cs
xor
fwait
repnz
xor
leave
xchg
jp
xor
cmp
or
xchg
jmp
xor
mov
pop
push
xor
cmp
dec
adc
pop
aad
int3
dec
mov
and
rcrb
inc
or
into
fnclex
test
xchg
aas
inc
mov
push
lea
jl
js
sub
std
inc
jp
jae
inc
fsubl
into
mov
sbb
add
lahf
test
add
lods
pusha
xor
in
mov
movsl
pushf
jb
cmpsb
ret
mov
lahf
add
sahf
xorb
mov
mov
shrb
lret
bound
in
pop
std
insl
fdivrs
sub
xchg
and
lds
jl
dec
mov
and
and
clc
jg
xor
das
icebp
mov
mov
pusha
mov
mov
push
in
mov
xor
bound
sti
jo
setg
sub
xchg
cmc
sti
ljmp
lds
jnp
ljmp
lret
and
push
jp
and
jp
mov
cmpl
push
jb
cs
add
fucom
xchg
mov
jbe
jne
push
insl
aas
sbbb
popl
aas
sbb
push
push
mov
jp
or
out
mov
sbb
out
popf
push
cmp
into
cmp
jo
pop
dec
repnz
mov
jg
mov
mov
ret
ret
xchg
adc
jmp
cli
cmpsb
sub
fcoms
movsl
aas
jne
aad
loope
pop
and
adc
pushf
or
xchg
ret
bound
popf
mov
fnsave
jle
inc
xchg
lcallw
adc
rorl
cmpsb
jle
pop
mov
jbe
test
in
or
cmp
adc
aad
push
lret
repnz
and
scas
dec
pop
mov
loopne
mov
shll
xchg
adc
stc
dec
mov
std
lods
fdivl
sbb
pop
imul
stos
xchg
mov
push
jg
mov
xor
mov
es
insb
mov
inc
icebp
mov
out
add
clc
nop
adc
adc
jnp
aam
or
xlat
sbb
popa
mov
ret
jl
lret
inc
aas
and
pop
out
dec
ret
scas
inc
lods
mov
adc
push
cld
pop
stos
imul
fistpl
jae
lret
cmp
mov
mov
mov
sbb
js
or
rolb
add
cmpl
pop
or
test
mov
scas
dec
pop
ss
lods
dec
add
lds
dec
ja
stos
mov
and
pop
xchg
xchg
add
jmp
data16
shrb
shrl
add
dec
push
daa
dec
enter
mov
push
jg
bound
and
repz
mov
jl
fisubs
push
or
jp
callw
jbe
pmullw
hlt
dec
pop
inc
adc
cwtl
add
sub
cli
jbe
mov
or
adc
dec
xor
inc
or
or
xchg
adc
cltd
insb
sbb
lock
int3
repz
sbb
jbe
push
adc
idivb
pop
jmp
loope
rcl
pop
mov
cmp
add
fisubl
aam
sbb
loopne
mov
test
xor
push
adc
xchg
sbb
add
and
sbb
out
pop
shll
jp
lahf
imul
dec
adc
jo
push
add
push
lcall
enter
mov
mov
inc
xchg
popa
push
pop
jg
fwait
cmp
leave
enter
jnp
push
out
jp
enter
jge
add
mov
dec
imul
loope
adc
addl
sub
and
pusha
push
push
and
inc
loop
lds
add
aam
adc
std
push
daa
pusha
sti
push
mov
mov
push
out
mov
out
imul
nop
xchg
outsl
jecxz
pop
push
add
loope
stos
insl
orb
add
add
test
cmp
imul
cmpsb
inc
enter
xor
push
xchg
lcall
inc
jg
insl
loopne
inc
or
xchg
fdiv
sahf
jge
and
stos
push
adc
jge
movl
sbb
mov
pop
imul
sahf
dec
aam
cmp
jg
jnp
push
into
adc
adc
sbb
bound
test
pextrw
adc
cmp
movsb
stc
sahf
pop
adc
push
push
push
loope
andb
cmp
enter
data16
mov
andb
xchg
outsl
pusha
ljmp
enter
lods
cmp
mov
fdivl
sub
in
add
lds
inc
icebp
cmc
lea
and
dec
jge
loope
imul
mov
movsl
subb
lock
sbb
inc
fnstsw
inc
rcll
stos
cs
jno
xchg
clc
pop
jnp
add
stos
fnsave
outsl
jo
add
movsb
dec
loopne
pop
mov
push
dec
ret
sbb
shr
in
test
loop
hlt
pop
hlt
jbe
dec
push
add
call
loop
mov
lret
pop
xor
mov
ret
pop
push
mov
xchg
rcrb
mov
cmp
int
pop
sub
test
in
pop
cmp
adc
lds
in
jae
and
cmc
jg
xor
mov
mov
fisttps
sti
xchg
pop
inc
aad
push
scas
add
jle
xchg
and
xchg
mov
xchg
push
pop
mov
fisttpl
std
mov
loop
sahf
dec
pop
mov
mov
xor
int
and
arpl
jecxz
sbb
in
sbb
fnsave
cmp
negb
and
js
dec
out
ret
push
scas
cltd
sub
mov
nop
iret
ffreep
fmull
push
pop
daa
xchg
mov
xor
lea
or
repnz
das
ret
lods
pop
inc
shll
cs
sbb
into
in
inc
ret
rcrl
clc
test
std
mov
psubusb
sbb
jne
xor
into
mov
pop
sub
xor
cmpsl
mov
je
dec
sahf
cmp
push
loope
jmp
jno
xchg
insb
test
xchg
cmpsb
jmp
xor
jns
jno
jle
add
lret
sub
dec
pop
scas
jb
sub
loop
pop
mov
cmp
outsb
mov
movsl
scas
dec
or
xchg
adc
push
mov
ss
sahf
jl
mov
sub
xchg
jecxz
popf
jmp
push
adcb
or
mov
neg
in
mov
scas
out
rolb
fcompl
and
jmp
dec
dec
dec
int
sbb
push
repz
in
xchg
xlat
xor
fwait
jmp
adc
mov
popf
outsl
add
mov
fimull
cld
sbb
xchg
iret
jo
push
sub
shrd
lea
pusha
or
insb
jbe
cwtl
inc
jne
push
and
repnz
pop
fidivs
repz
insl
push
or
pusha
jecxz
pop
movsl
dec
cmc
cld
mov
or
shrl
jb
jne
into
repnz
sbb
jb
dec
push
mov
mov
inc
ss
movsl
int3
sub
cmp
inc
jge
ljmp
adc
lret
outsb
jle
jmp
add
mov
jg
push
clc
xchg
lahf
sbb
push
loop
dec
jmp
jle
sub
adcb
mov
and
adc
xor
testb
cs
pop
into
or
cli
jge
mov
test
mov
imul
add
pop
dec
test
jo
cld
push
mov
fisttpll
loop
mov
xor
push
push
out
sbbl
jge
xchg
add
ret
imulb
or
imul
xor
test
adc
ss
inc
adc
xor
xchg
leave
movsb
testl
out
loopne
cmp
jns
scas
cld
in
cmp
int3
ljmp
or
rcll
loopne
daa
sahf
mov
sti
leave
adc
jmp
sub
adc
mov
sub
movsl
mov
scas
xchg
cmp
mov
inc
fdivs
adc
push
ss
cltd
adc
pop
fwait
jecxz
faddl
inc
mov
hlt
mov
mov
mov
shlb
addb
insb
fldenv
iret
sarb
in
aad
cmpl
rcrb
mov
js
cltd
cmpsl
sbb
mov
jp
cmpsl
fsubrs
mov
mov
int3
loopne
jecxz
mov
and
dec
ljmp
out
lahf
cmp
xchg
pop
or
repz
scas
loop
dec
test
cmpsb
popf
sub
xor
mov
shrl
pop
incb
movb
nop
rclb
sub
cmp
cmp
cmp
sarb
mov
push
test
mov
adc
clc
imul
cs
clc
mov
or
ljmp
mov
stos
pop
pop
lock
push
or
mov
sub
and
xor
mov
out
inc
mov
cmpsl
sbb
out
cmp
je
sbb
inc
pop
add
push
in
addr16
mov
push
mov
enter
pusha
mov
in
lahf
sbb
rorb
sub
aas
gs
or
xchg
test
cmp
push
outsb
ret
int
and
jl
dec
add
das
sahf
xor
sahf
ficompl
sub
jmp
mov
push
xor
pop
out
push
or
pop
cmp
mov
imul
jp
push
pop
xor
jmp
ljmp
adc
inc
aad
lahf
add
loop
dec
dec
nop
lret
repnz
inc
lret
xlat
jle
in
iret
sbb
stos
movsb
in
movsb
das
jns
xchg
lods
sbb
push
jecxz
mov
aam
or
in
add
adc
jp
jp
daa
es
pop
xchg
aaa
test
sbb
clc
loopne
jo
outsb
mov
cltd
ffree
fsubl
cmp
sub
mov
xlat
fwait
mov
mov
addl
or
jae
mov
sti
dec
repz
pop
out
filds
mov
test
bound
sub
pop
mov
sar
or
repnz
hlt
mov
jge
gs
xchg
mov
and
data16
or
lret
jns
dec
sbb
sub
inc
and
xchg
outsl
pop
outsl
lahf
xlat
lods
outsb
out
cmc
icebp
push
pop
repz
int3
shll
js
xchg
inc
and
cmp
mov
jle
adc
sbb
sbb
xchg
add
push
xchg
mov
inc
add
frstor
loope
fnstsw
loope
pslld
or
movsl
fcompl
pushf
stc
enter
das
jns
or
cmp
push
stos
data16
mov
lea
mov
jno
xchg
cmp
test
push
jae
out
lret
push
gs
sbb
arpl
add
iret
ret
daa
mov
fsts
mov
fwait
arpl
pop
lret
cltd
cmp
addr16
push
xchg
mov
ds
imul
and
mov
or
push
sub
shl
clc
fcomps
aam
xor
sbbl
shll
aaa
mov
push
push
mov
lahf
fwait
dec
xor
fildl
nop
inc
imul
pushf
or
dec
gs
mov
les
testl
sarl
sub
cmp
addr16
movsl
jno
in
or
sbb
xchg
icebp
mov
aam
jbe
jnp
js
icebp
cld
xor
addr16
or
mov
div
scas
pop
inc
das
hlt
cwtl
out
js
mov
sbb
inc
mov
out
fnstcw
out
dec
mov
ds
ret
or
test
mov
and
push
jecxz
cmp
xchg
mov
inc
sub
or
icebp
subl
sbb
dec
fildll
sbb
int3
cmpsb
shll
js
mov
push
gs
xchg
or
push
xchg
fcompl
psubusb
jmp
xor
ret
and
inc
dec
or
pop
fucompp
jne
push
xchg
pop
xchg
push
jnp
mov
ljmp
or
and
sahf
push
pop
repnz
or
aaa
jnp
or
dec
dec
jp
ficomps
popf
mov
hlt
out
cmp
mov
push
cltd
push
pop
mov
nop
lods
dec
gs
dec
cmpsl
or
add
jmp
inc
adc
fs
pop
test
xchg
aad
mov
cld
int3
out
decl
adcb
negb
stos
inc
jnp
fmull
aam
jp
xor
pusha
lods
addr16
arpl
xor
mov
mov
ficomps
xchg
pop
mov
or
push
into
cld
jmp
pop
jne
sbb
in
iret
fisubs
and
cmp
sub
mov
popf
pop
xlat
test
je
mov
xor
dec
xchg
movsb
mov
push
cmp
pushf
jl
cmp
cmpl
xor
out
mov
lods
jmp
push
xor
hlt
sub
pop
inc
addl
mov
mov
sarl
scas
enter
popa
or
icebp
out
adcl
mov
xchg
xor
dec
adc
loope
icebp
adc
jo
mov
not
xchg
mov
popa
pop
loop
xchg
out
rol
mov
dec
lret
mov
cmp
arpl
sub
push
jmp
sub
ljmp
rcl
repnz
fistpl
xor
mov
or
inc
in
jne
add
add
ss
pop
push
iret
mov
or
test
outsl
push
dec
cli
mov
mov
lret
sbb
and
shlb
in
add
sbb
xchg
and
lahf
or
cmpl
dec
arpl
or
dec
mov
push
adc
mov
cmp
and
xchg
jg
or
aam
cld
push
xchg
into
xchg
mov
jns
mov
out
cmpsl
imul
xchg
dec
mov
outsb
lods
sbb
mov
push
xchg
scas
cmp
or
sub
push
jmp
sbb
mov
lcall
lret
loope
insl
cwtl
andl
cmp
pop
mov
adc
mov
sub
adc
inc
mulb
jne
jno
int3
subl
inc
cld
jg
jl
dec
fcmove
and
cmp
stos
shll
sbb
sub
in
sti
ss
xor
cmp
seto
ds
mov
jns
outsb
xorl
incl
mov
lock
fdivrl
add
and
or
sar
cmp
jnp
outsb
movsl
pop
out
sub
fisttpll
push
mov
cltd
or
xchg
mov
movsb
pop
mov
loope
inc
dec
in
xchg
pop
dec
mov
mov
cmc
cltd
ds
pop
mov
sub
ret
or
sbb
imul
enter
ss
in
and
mov
jp
ss
dec
std
mov
jns
inc
lret
mov
sahf
outsl
fsubl
scas
or
sarl
cld
adc
jno
jae
push
loope
xchg
pop
paddsw
and
inc
fimuls
push
fstl
movsl
sbb
pop
inc
push
push
or
mov
repz
push
sbb
add
loopne
data16
imul
stos
push
or
push
out
xorb
lahf
cmp
push
sub
aad
add
gs
and
orl
xor
mov
cmp
jg
call
xchg
hlt
out
arpl
pop
aaa
or
nop
lds
test
outsb
ss
stc
cli
xlat
nop
inc
ljmp
jnp
clc
adc
pop
sbb
xor
std
mov
jo
outsl
inc
mov
pushf
pop
cmp
or
fildll
ror
pop
mov
xor
imul
or
xchg
in
and
and
or
xchg
mov
mov
jge
xor
mov
je
addr16
aas
div
ds
adc
or
add
subb
nop
clc
xchg
fmulp
popa
cmp
pop
shlb
pop
inc
push
fwait
movb
jl
jae
data16
idivb
jge
test
mov
test
ret
or
pop
pop
mov
jnp
js
aad
loope
repz
jnp
addb
mov
jle
shl
inc
xchg
movsb
push
std
outsl
hlt
xor
ljmp
pop
negb
adc
adc
cmp
mov
sub
fnstcw
push
cs
mov
jl
aas
inc
push
out
push
sub
or
pop
push
popa
out
adcl
rcl
xchg
adc
mov
sub
push
cmp
popw
imul
adc
pop
enter
in
push
or
push
shll
sbb
jl
popf
jae
cmpsb
or
xchg
mov
loope
jno
imul
add
xchg
mov
jmp
xor
and
lcall
ljmp
pusha
or
mov
adc
sarb
ds
mov
ds
loop
shll
mov
or
leave
ret
outsb
scas
dec
lahf
pop
bound
mov
sahf
mov
xor
pop
stos
es
hlt
adc
cld
mov
xor
push
mov
inc
pop
push
imul
push
flds
adc
push
incl
pop
jb
mov
cmp
popf
and
mov
ficoms
sub
push
in
jg
mov
and
insl
xchg
or
sbb
into
sub
or
sbb
fisubrs
push
jno
add
aas
push
and
cld
sbb
bound
pop
jnp
sahf
dec
mov
push
jle
inc
sbb
adc
rclb
stos
pop
mov
dec
dec
sub
mov
jne
iret
cmp
add
inc
xchg
mov
xchg
sub
mov
push
sbb
pop
loop
xchg
leave
pop
mov
cmpb
dec
xor
into
dec
add
out
mov
imul
mov
inc
mov
test
stc
fsts
je
push
in
test
push
xchg
mov
push
sub
aas
pop
sub
xchg
xor
sahf
sub
iret
addr16
mov
adc
cs
mov
mov
inc
imul
loopne
xor
sahf
popf
cltd
adc
stos
mov
push
xor
mov
cmp
idivb
jae
ret
pop
pop
mov
ret
or
push
popf
loope
dec
inc
jnp
mov
rclb
sbb
ja
std
add
dec
jmp
les
arpl
add
daa
adc
out
xchg
arpl
pop
addl
outsb
xchg
xchg
sarl
ljmp
sub
into
mov
aad
xchg
mov
jmp
xchg
sahf
lret
sub
push
pushf
dec
pop
ret
cmpsl
sti
or
fisttpl
pop
outsl
inc
inc
add
and
sub
pop
mov
ret
pop
and
imul
mov
outsb
jb
mov
jmp
mov
cmp
ja
cmp
and
imul
es
fwait
icebp
pop
sub
pop
mov
sub
xchg
mov
sahf
test
adc
jno
mov
fmul
lret
jge
mov
lds
cmp
xchg
sar
inc
jno
sub
clc
imul
inc
mov
shll
mov
mov
jo
nop
adc
xchg
mov
arpl
rcl
enter
test
out
fidivs
pop
or
mov
out
cmpsb
lret
or
out
mov
sub
push
jns
and
pop
test
jl
outsb
scas
cmp
cmpsb
xor
fisubl
test
notw
xchg
aaa
dec
lahf
ss
xlat
xor
cmp
sbb
inc
imull
or
mov
leave
xchg
pop
mov
mov
mov
xor
mov
pop
cmp
inc
mov
xchg
pop
push
sarl
into
lds
imul
movsb
sti
pop
ljmp
into
push
pop
cmp
pop
addr16
cmp
xor
or
or
out
lea
mov
jb
mov
fcompl
mov
and
adc
push
test
xor
enter
dec
jb
jmp
outsl
jecxz
lods
xor
les
jbe
rol
pop
popf
or
cltd
add
add
push
addr16
imul
mov
xor
cli
andl
adc
aas
jg
mov
lahf
jno
mov
repz
fcomps
sub
fildll
call
sbb
dec
sub
and
dec
xchg
cmpsl
xchg
repnz
loopne
jnp
lahf
lahf
subl
push
jbe
xor
and
and
xor
jl
mov
dec
sbb
lock
stos
dec
mov
loop
loope
std
out
mov
jns
test
mov
test
cmc
hlt
je
subl
jb
push
mov
adc
mov
pushl
cld
enter
dec
fwait
push
mov
mov
repz
or
loopne
insl
or
cltd
jno
out
xchg
dec
rorl
lods
repnz
xor
shlb
adc
push
jecxz
xchg
pushl
or
addb
mov
rorl
arpl
repnz
mov
cmc
enter
xchg
inc
xchg
arpl
dec
jae
sub
push
push
sbb
cli
xchg
or
cld
hlt
inc
adc
or
xchg
movsl
or
aad
xor
sbb
test
test
push
daa
lret
scas
mov
cmp
jecxz
test
sbbb
xorb
aam
cmpsb
xchg
testb
xchg
mov
pop
mulb
and
xlat
mul
lret
aad
sub
push
lods
lret
jo
push
in
cltd
std
fiaddl
inc
cmp
inc
cmp
inc
in
pushf
cmp
insl
ljmp
aaa
mov
int3
add
popf
sub
shrl
fwait
aaa
in
stos
fiadds
push
outsb
sub
pop
jge
std
sbb
inc
mov
push
in
push
loope
pop
fdivr
movsl
lret
stc
cmpl
loopne
mov
sub
sub
repz
jle
jecxz
mov
insl
das
sub
mov
mov
fdivr
sbb
xor
xchg
sbb
push
cmp
adc
in
mov
cmp
pop
pop
fstl
mov
sub
pop
mov
mov
xor
cmpb
and
mov
sbb
inc
scas
push
xor
xor
int
xor
add
jmp
hlt
adc
in
xchg
pop
pop
sarb
mov
cli
mov
cmc
out
push
ret
call
je,pt
test
xchg
sbb
mov
cmp
sbb
sub
pop
inc
sub
stc
lcall
dec
mov
stos
jbe
push
out
lods
loop
outsb
inc
cs
fcoms
cmc
jmp
repnz
test
add
push
inc
hlt
dec
fdivrl
loop
pop
lods
fsubl
in
lds
push
pop
jnp
add
and
out
in
xchg
jmp
sbb
repz
jne
int3
scas
mov
rclb
loop
xor
jecxz
push
test
xor
mov
lahf
iret
hlt
push
ret
xchg
subl
push
jle
sub
mov
leave
push
and
inc
jb
dec
bound
repnz
cmpsb
in
mov
xlat
pusha
jecxz
sti
fcoms
outsb
cmp
cmpsb
mov
subl
sbb
fiaddl
pop
cmc
dec
push
lock
and
idiv
cs
nop
xor
mov
add
cmp
out
xchg
aam
and
in
rcrl
fidivrs
mov
dec
roll
pop
push
mov
adc
adc
mov
rorb
cmp
pusha
in
je
mov
jns
xchg
lods
pop
lret
push
mov
es
add
pop
and
mov
xchg
sub
ret
imul
mov
shl
cmp
pop
rorb
lods
xor
xor
lret
andb
jle
xor
add
sbb
push
ljmp
test
popa
test
ret
mov
pop
sbb
dec
or
inc
daa
dec
adc
cmp
xchg
add
adc
lods
outsl
mov
loope
ds
jmp
sub
aaa
das
bound
add
movsl
add
push
xor
sub
bound
add
std
js
jbe
mov
sti
push
aas
aas
xor
sbb
cmp
ss
or
sbb
js
aad
scas
mov
gs
cmp
pushaw
mov
ss
dec
cmp
push
stc
filds
mov
mov
cmp
dec
addb
ss
aam
ljmp
pop
cmp
cmp
in
push
pop
xchg
mov
shl
xchg
xor
or
xchg
cmp
lahf
cmp
scas
mov
xor
xchg
out
lods
inc
lods
pop
sbb
mov
pop
clc
inc
in
imul
cmp
lcall
dec
test
and
mov
mov
xchg
jns
jnp
addr16
insl
lcall
fsub
pop
mov
jnp
loopne
xchg
xchg
ljmp
dec
cmp
cmpb
cmp
cld
push
xchg
aam
fld
outsl
addps
daa
mov
jno
mov
jmp
outsb
sbb
rcrb
mov
inc
lret
xor
pop
ja
jmp
cmc
bound
jns
movsb
adc
stc
cmc
test
std
lods
sbb
jl
xchg
cmc
stos
outsl
cld
ja
push
es
inc
stos
stos
lret
inc
repnz
mov
outsb
jae,pt
in
jb
loope
dec
ss
mov
int
cs
xlat
pop
mov
xchg
jne
dec
cli
mov
fsts
push
hlt
push
jno
inc
mov
lcall
subl
pushf
in
sub
cmpsb
ds
push
shlb
popa
xlat
imul
push
lock
test
out
dec
stos
inc
dec
enter
xchg
stos
cmc
and
cld
test
push
add
in
imull
fiadds
stos
jnp,pt
in
add
pop
imull
les
jge
cwtl
or
sbbb
jne
mov
and
aaa
notl
pop
ret
cmc
pop
push
mov
outsl
cmc
arpl
daa
mov
stc
out
mov
mov
sbb
popa
enter
pop
sbb
cmp
xor
dec
out
jle
push
xor
jmp
and
das
mull
jge
cli
ss
cld
sar
imul
cmp
sub
daa
lock
add
insb
push
cltd
movsl
mov
jecxz
ss
add
orl
xchg
adc
jo
xorl
mov
mov
std
push
pop
add
cltd
cld
gs
push
dec
jmp
or
and
and
data16
out
leave
clc
dec
mov
push
xchg
mov
loop
ss
nop
mov
imul
and
ficoms
test
imul
xchg
shll
mov
unpckhps
icebp
icebp
xchg
or
rclb
xchg
aad
lret
dec
xchg
divl
add
cltd
rcrl
lea
or
inc
pop
mov
mov
sub
mov
ret
imul
pop
repnz
je
data16
jne
sub
mov
gs
lods
sub
and
push
jl
cs
cltd
add
and
and
cltd
adc
sahf
call
and
cmp
dec
xchg
sbb
call
xlat
repz
adc
ljmp
sbb
sbb
repz
out
jge
jg
sub
fisttpll
push
dec
sbb
xchg
popf
pop
fidivs
das
movsb
dec
ss
daa
xchg
repz
jle
dec
addr16
mov
pop
fwait
and
test
mov
sub
push
dec
cwtl
dec
cmp
mov
adcl
inc
mov
pop
bound
inc
outsb
aas
repnz
lret
jne
xlat
aad
adc
mov
pop
xor
scas
imul
loope
cmp
lret
aas
or
psubsw
add
dec
daa
inc
jge
sbb
add
inc
mov
shlb
aad
cmpsb
insl
mov
ljmp
dec
mov
dec
sub
lgs
pop
loope
xor
fsubr
sbb
push
popa
movsl
xchg
lock
or
sbbb
xlat
inc
adc
stc
pop
mov
cmp
ljmp
xor
xchg
outsl
enter
out
add
cmp
rcr
xchg
daa
push
jl
push
into
data16
cmp
cmp
mov
and
je
call
sbb
cmp
cmp
stos
ljmp
xchg
movswl
jge
js
dec
xchg
sub
add
stc
lret
pop
mov
clc
inc
outsl
dec
push
push
jl
lods
test
adc
push
aaa
and
pop
sbb
mov
fwait
enter
inc
aas
js
mov
adc
push
cld
dec
sbb
addr16
push
stc
pop
dec
cld
inc
jno
xchg
test
add
xchg
cli
fisttpll
adc
cmp
mov
xor
and
sbb
mov
fldenv
add
movsl
mov
adc
cmpsl
dec
cli
out
out
cmpsb
ret
mov
and
xor
std
sbb
test
mov
xor
xchg
out
in
cmp
xor
cmp
or
js
sti
and
mov
fs
mov
or
mov
repnz
sub
shrb
mov
sbb
mov
into
repz
clc
xchg
mov
mov
lahf
add
sti
adc
lahf
dec
lret
add
out
lcall
xlat
fwait
cld
mul
sti
and
arpl
and
mov
mov
mov
out
std
sub
ret
xorb
icebp
addr16
xchg
fistpll
fwait
roll
loope
pop
enter
push
inc
mov
sbb
cld
jl
pop
jp
loopne
mov
or
shl
pop
sub
xchg
repnz
movsl
and
int
push
push
ret
add
pop
adc
lods
fstps
or
mov
add
cmp
jns
or
loope
mull
std
sbb
push
loopne
das
dec
ljmp
sub
loop
dec
mov
mov
stos
in
cld
insb
inc
jb
aas
dec
shr
mov
jnp
pop
test
inc
jb
fnstcw
sbb
mov
xchg
add
jnp
pop
into
cmp
mov
dec
mov
mov
aam
stos
movsb
adc
sbb
or
push
adc
mov
mov
mov
adc
test
inc
das
pop
sbb
das
lahf
outsb
stos
ret
rorb
test
pop
mov
subb
xchg
adc
fnstsw
aaa
fs
outsl
hlt
push
jb
and
ror
data16
sub
call
add
mov
mov
test
mov
adcb
out
cli
xlat
xchg
dec
and
fs
mov
rclb
loope
mov
sahf
repnz
add
rol
mov
outsl
aas
inc
and
mov
or
dec
mov
jbe
test
pop
in
cld
sub
mov
add
push
cmp
xor
popa
dec
cmp
inc
jecxz
jp
lahf
fidivrl
add
mov
mov
jo
mov
out
jecxz
stc
into
and
scas
cmp
inc
test
int3
popa
adc
xor
lahf
sub
xchg
outsl
jbe
xor
stc
xabort
lock
and
push
scas
add
fadds
or
out
mov
scas
push
adcl
pushf
fcomps
xchg
mov
sbb
or
xor
xor
cmc
cmc
pop
aas
stc
xor
fdivrl
mov
push
dec
push
inc
or
adc
notb
jg
xor
jbe
xchg
insl
xchg
in
cmpl
jnp
cmp
cld
dec
rcll
fidivrs
inc
xchg
adc
loop
icebp
add
fsubrl
and
push
rcrb
dec
mov
and
js
fldl
nop
inc
adc
pop
notb
pop
pop
lahf
js
std
pop
ss
push
sbb
adc
stos
ds
jmp
out
aad
out
test
cmpsl
xchg
je
push
into
pop
cli
jp
lds
je
nop
xor
es
in
jecxz
xchg
loopne
pop
sub
inc
sub
incl
scas
lret
mov
adc
mov
jbe
or
test
mov
push
iret
negb
sbb
dec
mov
adc
xchg
xchg
mov
sbb
ds
dec
adc
cwtl
and
cmpsl
lret
cmp
pop
push
sbb
push
xchg
fisubl
pop
mov
sbb
push
cmp
fcoml
and
push
insb
rep
and
jle
mov
icebp
das
mov
mov
xor
pop
ja
push
push
adc
sti
call
dec
jo
mov
mov
xchg
inc
jmp
cmc
aaa
pop
or
push
sti
inc
or
icebp
insl
ljmp
xor
mov
xchg
dec
xchg
xchg
je
scas
mov
in
push
dec
inc
push
cmpsl
inc
ljmp
add
xchg
pop
inc
xchg
jae
mulb
out
ret
pop
xchg
nop
dec
inc
and
and
push
insb
clc
pop
insb
mov
fsubrs
inc
ljmp
jge
add
aad
mov
stos
pop
imul
xor
mov
into
cmp
out
jb
fsubrl
dec
fnstenv
repz
clc
jl
movb
cmp
cli
or
sbb
cwtl
arpl
out
stos
push
popf
dec
and
jmp
fcomip
xor
lods
sbb
popa
and
or
push
sbb
icebp
nop
push
cmp
iret
movsl
les
sbb
mov
rclb
pop
fdivrs
sub
test
jmp
iret
fcmove
movsb
or
packuswb
ret
aaa
cmp
into
pop
mov
leave
lret
pop
mov
xor
or
pushf
test
aas
pop
subb
repz
ss
jns
ret
rcr
sbb
cld
xor
pop
mov
fwait
push
insl
popa
movsl
xchg
stos
ss
and
sub
scas
and
mov
test
jae
sbb
jb
mov
in
cmp
inc
in
cmp
dec
xchg
push
sbb
xlat
hlt
push
xor
sub
xor
xor
add
sahf
rorb
sahf
mov
mov
xchg
inc
mov
adc
inc
xor
sub
add
arpl
emms
push
add
daa
dec
mov
inc
stos
imul
xchg
xchg
and
push
cmp
rcl
jle
pop
shll
dec
dec
and
std
xchg
adc
clc
ljmp
popa
cmpb
push
sub
sbb
pop
mov
mov
dec
add
in
inc
mov
mov
fidivrs
push
cmp
lret
test
shll
sub
dec
mov
jo
lcall
xor
adc
out
jbe
jp
daa
fwait
cld
popf
sbb
push
inc
mov
adc
icebp
inc
sti
and
fucomp
int
lock
stos
inc
add
orl
pop
cmpsb
xorl
jnp
call
adc
fs
cli
shll
stc
cmpsb
add
xchg
loope
rorl
adc
sbb
jl
daa
mov
pop
pop
aaa
out
out
mov
xchg
mov
xor
rcrb
insb
xor
into
push
sub
es
flds
scas
rorb
sub
fwait
icebp
or
jge
xchg
adc
fisttpll
into
xorl
cmp
hlt
jnp
jle
arpl
outsb
lcall
or
inc
mov
push
mov
mov
popf
inc
cmpsb
xor
push
ds
hlt
jmp
mov
pop
adc
mov
lods
sub
xor
or
push
jne,pt
pusha
cmp
fistpl
mov
pop
or
push
mov
sbb
jo
ret
ret
mov
mov
push
punpckldq
pusha
adc
data16
in
jle
addr16
push
lds
gs
xor
loopne
aad
sti
pushl
or
fldenv
inc
xchg
xor
popa
mov
xlat
insb
ja
mov
adc
pcmpgtw
sti
dec
in
insl
aad
mov
xchg
loopne
push
sub
pop
ja
push
cltd
push
xlat
push
in
fs
push
lds
gs
jecxz
mov
or
pop
stc
and
jecxz
gs
enter
mov
sbb
rcr
outsl
filds
ret
fmul
shlb
lahf
pop
push
cld
sbb
inc
aas
push
jecxz
lret
iret
pop
movsb
cmc
push
sbb
mov
les
repnz
add
ret
ret
mov
data16
stc
dec
xchg
imul
add
xchg
adc
or
js
or
adc
sbb
loopne
test
movsl
push
icebp
sbb
in
ja
lahf
iret
pop
dec
popa
and
pop
ret
mov
inc
test
mov
cmp
ror
test
cmpsl
push
pop
add
lds
pusha
cmp
jg
insb
jecxz
xchg
and
adc
mov
mov
pusha
cmp
aam
or
bound
dec
xor
dec
or
add
jo
jns
int3
mov
inc
xchg
inc
ret
inc
enter
test
adc
xchg
jns
cs
and
and
jecxz
shlb
add
out
mulb
mov
imul
sbb
std
push
cwtl
inc
sbb
sbb
lcall
filds
mov
mov
add
mov
xor
add
dec
dec
or
lods
imul
in
out
push
push
les
sbb
adcb
inc
mov
popa
mov
hlt
daa
and
dec
mov
mov
andb
or
inc
dec
xchg
cmpsb
adc
inc
push
xchg
jnp
dec
dec
es
or
jns
push
sbb
jo
cmp
xchg
mov
std
mov
sub
mov
xchg
jg
adc
in
mov
cmp
aad
or
sub
imul
outsb
cmpl
call
adc
fcoms
shrb
push
adc
cmc
xor
frstor
lods
dec
frstor
rcll
cld
clc
popf
mov
mov
and
test
push
xor
adc
insl
jg
cmp
ss
lcall
mov
shrb
mov
andb
out
lret
jno
arpl
jmp
js
int
jecxz
inc
lds
arpl
add
and
push
pop
sub
lds
or
clc
fists
test
insb
inc
xchg
jmp
or
popf
or
pusha
and
pop
pop
xlat
inc
inc
cmp
add
outsb
std
mov
bound
icebp
mov
sub
jne
pop
dec
cmp
mov
aam
jp
cmp
das
xor
gs
jecxz
push
pusha
sub
fidivrs
push
sub
jp
ficomps
and
in
jle
push
mov
subl
cmpsl
mov
addb
in
fldl
xor
mov
jl
enter
into
pop
stc
divb
mov
movb
sbb
hlt
in
outsl
push
add
mov
pop
inc
add
arpl
and
das
mov
push
push
mov
in
imul
sahf
aas
into
movsl
push
sub
popa
scas
mov
mov
or
dec
jnp
nop
cmp
xor
mov
test
sahf
or
mov
cmpsl
and
incb
cmp
movsb
jnp
pop
dec
xor
fiaddl
pop
das
or
daa
pop
mov
test
movsb
or
into
fcmovb
mov
insb
andl
sbb
xchg
jne
inc
outsb
rcll
sbb
xlat
fsts
jmp
adc
outsb
aam
dec
fidivl
pop
mov
xchg
hlt
sub
hlt
or
pop
shl
stc
int
outsb
add
push
inc
sbb
add
pop
pop
insl
lret
push
jmp
loopne
xchg
int
jb
repz
loopne
inc
aaa
fwait
mov
adc
or
xchg
test
ret
mov
push
xor
rol
dec
int
sub
dec
fs
push
sahf
prefetchnta
sbb
sub
xchg
mov
inc
jnp
add
cltd
adcb
jl
clc
push
xchg
mov
sbb
inc
mov
inc
push
mov
mov
xchg
stos
fisubs
mov
jp
outsl
aaa
add
scas
pop
lcall
ljmp
add
rcrb
push
out
fistl
cmpsl
xor
dec
mov
int
pop
mov
insl
fldcw
cmpsb
push
je
enter
mov
les
and
push
div
jle
es
les
xor
loopne
sub
cmp
xchg
mov
xor
jle
pop
lds
dec
dec
mov
leave
mov
push
sahf
push
mov
jo
arpl
inc
js
popf
mov
inc
bound
lods
sbb
pop
dec
stos
out
mov
mov
icebp
push
lods
outsb
mov
inc
inc
add
add
mov
scas
int
out
pop
pop
xchg
mov
dec
sub
xchg
fstps
call
fyl2x
inc
mov
inc
jns
std
xchg
fcom
adc
push
xchg
into
jmp
push
mov
or
jns
cmp
imul
jmp
cmc
popf
mov
stos
cmpsl
push
lret
cmp
push
mov
pusha
xchg
dec
push
sarl
pop
cmp
aas
mov
mov
jle
fwait
divl
fcmovnbe
shl
rcrb
adc
pop
and
add
in
xchg
fsub
in
sti
shrl
cmp
jno
pusha
sub
fsubs
xchg
imul
lcall
clc
ret
sarb
nop
pop
mov
cmp
in
into
fdivr
push
jle
dec
jge
or
sub
ja
xor
pop
add
mov
popf
aad
xorb
icebp
daa
xchg
sbb
bound
les
test
cmp
dec
test
xlat
push
xor
jo
daa
in
aad
gs
aad
fsubrl
mov
add
push
mov
xor
xchg
sbb
cmp
sub
mov
dec
mov
fldl
gs
sub
jmp
insl
sti
jge
dec
cltd
mov
outsb
movsl
mov
aaa
out
push
fs
stc
insl
mov
mov
dec
push
dec
mov
scas
popa
repz
push
mov
dec
cmp
pop
mov
push
cmc
call
inc
inc
mov
pop
inc
jne
imul
pop
pop
jns
jb
push
push
sub
repz
dec
xor
pop
stos
clc
stc
cmpsb
std
outsb
push
iret
push
pop
push
mov
std
popa
dec
push
mov
add
pop
fneni(8087
mov
out
jbe
pop
das
push
testb
add
and
sbb
shll
cld
pop
movsl
push
setg
push
rorl
push
mov
mov
or
adc
vmovaps
sbb
pop
addr16
cmp
shrb
dec
lahf
adc
fcmovnbe
mov
je
xlat
lahf
cli
inc
js
ja
cwtl
mov
pop
mov
mov
loopne
mov
mov
jl
mov
test
ret
lcall
jo
add
das
sub
adc
es
sbb
push
pop
dec
imull
cmpsl
and
or
fdivs
cmp
lods
sbb
iret
dec
cmp
aaa
mov
xchg
add
js
cwtl
mul
and
orb
pop
or
repnz
and
or
xchg
dec
xchg
dec
adc
outsl
cld
scas
or
jns
sarb
push
stc
sti
mov
xchg
mov
jmp
sub
cmpsb
inc
ret
rcr
repnz
jo
jmp
dec
mov
push
push
sbb
jmp
xchg
or
sarl
repnz
movsl
daa
cwtl
xor
jae
adc
rcll
pop
ljmp
or
adc
add
pop
sbb
cmpsw
jl
jnp
inc
imul
addr16
inc
add
pop
insb
divb
and
inc
test
rcr
stos
pop
insb
dec
andb
sahf
and
push
push
mov
or
gs
and
xor
int
mov
addl
jne
int3
mov
arpl
mov
test
push
loopne
dec
add
testl
cmp
adc
insb
cmpsl
xor
jne
das
push
lret
jae
jbe
out
es
cmp
dec
lcall
push
aaa
push
or
inc
dec
mov
lock
jmp
lds
mov
je
fisubrl
lcall
mov
popf
aaa
out
rcrb
xor
cmp
dec
pop
dec
pop
push
push
jns
push
aam
add
js
inc
stc
hlt
jns
in
incl
mov
mov
jno
add
sbb
inc
lds
cs
lods
cmp
cmc
mov
mov
inc
aam
jae
hlt
mov
sub
jg
fldcw
cltd
xchg
sahf
dec
mov
je
mov
fistpll
cwtl
enter
mov
mov
mov
mov
mov
add
push
push
in
dec
mov
insl
and
loopne
or
sbb
std
and
sahf
cli
leave
xor
enter
and
imul
rorb
inc
sbb
out
pop
shrb
add
or
sbb
test
and
adc
lods
adc
out
pop
adc
pop
inc
out
push
sbb
ficompl
jae
sahf
dec
dec
jge
or
cmc
mov
arpl
rcrl
loope
test
xor
subl
dec
shr
mov
outsb
inc
mov
xchg
cli
jmp
add
sub
notb
jo
inc
pop
aam
hlt
cmpsb
jnp
xor
int
popf
dec
push
jecxz
add
inc
ds
arpl
xchg
pop
pop
jmp
dec
shlb
jp
mov
aaa
pushf
cmc
test
jno
aas
adc
popf
sub
popf
lods
push
add
aad
inc
movsl
jle
dec
aad
lcall
xchg
mov
fwait
push
adc
rcl
imul
popa
jle
mov
mov
or
xchg
xchg
add
addr16
cli
aas
xchg
pop
add
mov
shlb
repnz
icebp
xor
ljmp
sub
test
jmp
jne
repnz
lret
mov
out
jbe
jns
in
mov
in
jnp
scas
mov
mov
push
hlt
cmp
xor
scas
les
or
mov
aad
jmp
rclb
jns
ret
hlt
shll
sbb
daa
cmp
fidivrl
enter
test
shrl
add
rcrb
int
std
sub
inc
push
push
mov
push
xor
push
movsb
mov
fbld
lahf
xor
scas
xlat
int3
les
nop
or
xchg
rclb
movsl
pop
jl
dec
and
mov
stos
loope
insb
rcrl
mov
lcall
add
stos
push
pop
jle
sahf
imul
or
cltd
jle
xor
cmp
decl
bound
outsb
inc
ljmp
pop
mul
sahf
sbb
xchg
adc
lds
dec
lcall
out
mov
sub
or
push
push
addb
mov
dec
aas
mov
cmpsb
xor
push
outsb
inc
pop
push
jl
sti
movsl
es
push
and
sbb
leave
jae
nop
mov
xchg
fpatan
cmp
sub
gs
xchg
or
iret
dec
push
sub
sarl
dec
inc
fs
jo
push
push
add
imul
jmp
xor
xor
push
lea
aas
les
pop
mov
mov
ret
aam
mov
or
mov
test
jns
scas
popf
cmpsl
xor
arpl
fistl
mov
movsb
jne
xchg
arpl
pop
mov
sbb
inc
fcmovne
push
sub
lock
cmpsl
stos
aam
mov
movsb
mov
push
jp
adc
pop
lcall
into
cmc
mov
or
dec
adc
movsl
jge
push
aad
pop
xchg
daa
lods
cs
aam
push
mov
aam
pusha
out
arpl
arpl
test
dec
mov
xchg
out
mov
add
aad
mull
adc
xchg
jae
lock
cs
lret
test
xor
mov
bound
sub
xchg
sbb
imul
or
jae
jne
jns
mov
mov
mov
sbb
test
push
add
shll
mov
sub
pop
xor
cmp
sub
iret
icebp
ret
out
addr16
add
ss
movb
pop
and
test
out
pop
push
cli
idivb
out
outsl
inc
mov
das
loope
mov
mov
or
mov
es
mov
cmp
lcall
lret
push
add
andl
aas
pop
add
in
leave
inc
rorl
push
cmp
jnp
pop
lcall
and
mov
pop
ss
dec
xchg
push
sti
insb
fs
aam
xchg
sbb
mov
mov
lea
push
mov
and
or
mov
repnz
fisubrs
dec
cmpsl
pusha
ljmp
inc
test
ljmp
cli
jo
sbb
out
lret
out
cwtl
dec
fsubrs
cmp
pusha
lods
mov
jg
xchg
cmpsl
inc
push
sbb
mov
mov
pop
pop
sti
lret
cmp
pop
aaa
mov
inc
insl
jg
addr16
inc
mov
stos
stc
pop
stos
cmp
pop
push
pop
pop
test
jbe
icebp
setnp
fsubl
dec
inc
fisubs
pop
dec
sub
call
mov
shr
sub
cltd
popf
sbb
mov
sti
inc
dec
mov
hlt
and
sub
sar
aaa
pop
out
pop
popa
les
mov
pushl
jno
shll
js
gs
sbb
xor
fisubrl
fnsave
das
shll
aam
or
addb
push
xchg
sti
daa
pop
jns
inc
push
lds
jl
push
mov
mov
jb
leave
mov
insb
mov
in
and
cld
das
shll
sbb
or
sub
cmp
insb
cmp
test
pop
sub
adc
fsub
rcrb
push
into
mov
mov
out
fistps
lret
test
hlt
call
mov
loopne
mov
mov
jne
cld
out
mov
shrl
inc
fcmovnb
jle
sub
jno
and
xor
sahf
or
push
ds
repnz
or
sub
push
daa
xor
adc
nop
inc
sub
cld
pop
or
loopne
jno
inc
inc
addl
stos
popa
in
xchg
push
out
mov
loopne
dec
xchg
ja
gs
lods
or
sub
fdivs
sub
xor
test
in
mov
mov
dec
cmp
enter
shl
ror
pop
mov
bound
inc
sbb
lods
jmp
jo
push
insl
aaa
sbb
ret
adc
push
aad
or
xchg
push
mov
aam
sub
cwtl
inc
push
add
scas
push
cmp
mov
incb
shlb
setg
fldl
dec
mov
in
cmp
rolb
rolb
testb
dec
xchg
or
xchg
push
test
ds
mov
shll
pop
push
mov
xorb
fisubrs
sbb
and
pushf
fs
push
notl
fildl
mov
mov
inc
imul
out
mov
pop
ret
repz
xor
push
and
add
sub
adc
and
es
or
movsb
scas
lock
pushf
fistpll
call
mov
push
add
outsb
xor
pop
mov
cmpb
push
popf
push
lods
mov
mov
out
cltd
xchg
arpl
into
inc
mov
outsb
clc
jbe
testl
xchg
adc
fadds
mov
movsb
ret
dec
pop
jle
inc
adc
outsb
inc
jnp
out
jle
mov
scas
add
imul
push
mov
sub
mov
sti
mov
add
lea
mov
sarl
fbld
mov
xchg
stos
das
adc
xchg
sbb
andl
pushf
int3
sbb
sub
shll
mov
popf
addb
pop
or
jge
pushf
cmp
test
arpl
pop
mov
sbb
aaa
stos
mov
pop
dec
daa
mov
push
mov
add
xlat
imul
push
scas
mov
pushf
mov
dec
mov
add
xchg
pop
fdivs
dec
fdivl
out
sub
push
imul
bound
pop
xorb
orl
xor
cmp
or
lret
repz
sar
push
int3
xor
icebp
fldenv
das
add
xor
add
test
imul
mov
mov
inc
pop
xchg
aas
fstps
and
jle
cmpsb
test
sarb
icebp
mov
ljmp
aad
or
fwait
mov
and
dec
sub
in
out
dec
das
mov
cmpsl
loope
mov
mov
aas
jae
repnz
fucomip
push
dec
jle
loop
outsl
mov
stos
in
mov
inc
pop
adc
sub
push
cmp
inc
sbb
jmp
lock
nop
mov
das
sarb
dec
shl
subl
insl
xor
mov
cmp
out
mov
sbb
mov
jmp
xor
xor
repz
mov
jne
add
popf
xor
loop
lods
jnp
sub
mov
jge
cld
xchg
dec
stc
std
pop
ds
push
into
ficoml
aaa
pop
fistl
sub
negl
mov
out
into
out
dec
rclb
or
mov
cltd
mov
in
push
rcrb
iret
sbb
sub
mov
or
mov
xchg
sbb
pop
in
pop
or
mov
aas
sbb
pop
and
pushf
cmpxchg
addl
mov
ret
xchg
clc
sbbb
ret
sbb
cmc
into
jbe
mov
test
rcrl
mov
lock
stc
mov
stc
ljmp
repnz
in
mov
or
pushf
dec
mov
out
cmp
fwait
out
or
lock
and
mov
pop
fwait
cmpsl
notl
repnz
push
mov
out
je
add
jns
insl
sahf
fmull
push
je
pop
fmuls
push
fs
mull
cld
loope
cmp
xchg
cmp
mov
mov
ret
or
push
inc
push
push
rorb
gs
out
dec
js
mov
mov
popa
test
push
and
mov
mov
push
roll
fcoml
iret
push
ret
cmc
sbb
popf
xor
jno
pop
movsb
shrb
push
insl
pop
fsubrl
loope
into
shlb
dec
pop
pop
popa
mov
rcr
nop
push
pop
repz
pop
and
push
sub
daa
mov
lret
stos
aam
sbb
xor
adc
sbb
adc
shlb
jl
pop
divb
mov
sar
and
push
mov
mov
add
ljmp
pop
xchg
insl
lahf
sbb
sti
jmp
push
ret
pop
inc
or
jae
ljmp
push
dec
repz
inc
mov
fstl
inc
cld
cmpsb
sahf
or
mov
or
mov
loope
out
push
push
xchg
outsl
lds
cltd
sub
push
inc
dec
sub
cmp
sbbl
and
roll
mov
mov
in
lcall
adc
push
cmc
pop
and
xchg
clc
inc
mov
xor
mov
and
data16
test
stos
jle
mov
push
jmp
stos
and
jge
dec
scas
fstps
pop
cmpsl
and
mov
divb
mov
je
add
bound
and
sub
jle
in
jp
adc
push
or
negl
cli
xchg
mov
arpl
add
out
pop
ficoml
jbe
stos
mul
hlt
lods
addr16
bound
mov
and
adc
inc
pusha
aaa
addr16
popa
call
mov
lods
cmp
mov
int
fists
insl
daa
stc
pusha
pusha
mov
xchg
shlb
movsl
lahf
out
lahf
mov
inc
popa
roll
mov
iret
mov
push
mov
dec
mov
leave
mov
jb
sub
xchg
inc
pop
adc
enter
imul
adcb
sbb
aam
mov
fisubrl
stos
addr16
cltd
cmc
shr
add
fcoml
pop
xlat
fdiv
adc
mov
sti
jmp
out
inc
cs
lret
jne
leave
fldcw
lods
jge
es
nop
adc
or
loopne
stos
int3
and
pop
into
pop
clc
js
inc
aaa
sbb
stos
adc
rep
mov
xor
pinsrw
pushf
mov
jmp
mov
adc
out
loope
inc
jne
mov
das
sub
or
enter
jge
inc
addb
sub
cli
ficoms
nop
lock
fcompl
outsl
add
mov
dec
mov
cmp
repnz
lock
mov
dec
xchg
insb
sub
repz
pop
xor
int3
dec
mov
test
mov
call
push
or
xor
stos
pop
scas
clc
mov
mov
test
jg
mov
es
adc
or
push
icebp
ficompl
inc
aad
rorb
aam
fmuls
movsb
push
mov
pop
mov
or
xor
jae
fs
cmp
in
mov
adc
movsl
rol
and
cld
cmp
dec
loopne
stos
scas
xchg
sarl
insl
jno
or
aad
test
shr
mov
and
fs
or
enter
jle
pop
xor
or
push
cmpsl
adc
cmp
cmp
outsl
mov
dec
ret
outsb
test
cmp
es
xchg
test
call
icebp
les
gs
mov
xor
scas
xorl
imul
nop
test
pusha
lret
adc
repnz
dec
rcrb
xchg
xor
cltd
mov
mov
sbb
lret
js
rcrb
fwait
add
pop
lret
xor
inc
scas
sti
push
xchg
jg
push
xchg
xchg
popa
inc
jecxz
shrb
shlb
mov
mov
xor
test
pop
inc
icebp
or
sub
shll
or
and
pop
outsl
icebp
push
sub
test
jbe
les
enter
dec
push
int
sbb
nop
test
call
cli
xchg
mov
adc
stos
call
jle
push
subb
ljmp
popa
mov
fimull
repz
test
lahf
or
aaa
mov
jne
or
sub
mov
loope
pushf
scas
push
pop
icebp
test
pop
insb
pop
js
cmp
inc
ljmp
push
nop
pop
imull
test
adc
lea
imull
jmp
mov
add
iret
stc
in
or
push
mov
outsl
add
insl
sbb
enter
out
fdiv
adc
lret
cmovbe
pop
sti
pop
add
cmp
movsl
mov
mov
rcrb
mov
mov
das
rcr
adc
adc
add
loop
push
sub
stos
aad
inc
fistps
pop
aaa
mov
test
and
sarl
cmpsl
pop
sub
fisubrl
loopne
out
pop
pop
mov
stc
dec
mov
adc
xchg
idivb
jb
pop
add
mov
push
xlat
rorb
outsb
adcl
scas
cmp
lea
scas
mov
mov
fisubrs
mov
jge
pop
sbb
xor
pop
sub
rolb
jle
test
test
inc
in
jae
in
pusha
jbe
and
jp
jb
in
pop
xchg
lahf
xchg
push
cmpsb
shrb
movsl
jmp
in
shl
test
mov
sub
orl
mov
jmp
push
mov
stc
jp
stos
insl
push
jbe
adc
popa
out
xchg
dec
sbb
iret
pop
pop
adcl
fdivrp
push
ja
mov
in
push
push
xchg
push
shll
lods
mov
cmc
out
imulb
insb
cmp
add
mov
pop
jmp
mov
mov
ja
jb
arpl
push
outsl
loope
sub
push
sub
aam
and
xchg
or
shrl
jmp
xlat
jge
imul
nop
sub
dec
push
loope
adc
inc
xor
mov
cmp
scas
jg
gs
call
cli
sub
xor
repnz
das
mov
shlb
mov
pop
jl
cmp
or
out
mov
push
rcl
sbbb
divb
xchg
enter
adc
xor
into
or
xor
and
inc
sub
pop
inc
xlat
xor
aas
ja
mov
mov
inc
xor
add
in
imul
xor
push
out
stos
xor
int
into
sub
xchg
inc
mov
enter
rcll
sbb
push
adc
sub
cmp
in
jmp
cmp
mov
adc
push
mov
xchg
xchg
push
mov
subl
add
ds
repnz
push
sti
and
mov
into
stc
mov
and
insl
pop
pop
xor
fmulp
imul
lods
dec
popa
sbb
pop
push
mov
pop
pop
xchg
add
mov
push
xchg
pop
ss
mov
inc
pop
sahf
sub
cmp
and
clc
call
sbb
movsl
out
cmpsl
or
ljmp
dec
frstor
loop
jecxz
sbb
je
add
pop
addr16
cli
stos
inc
dec
push
cmp
mov
lret
lock
cmp
pop
negl
aaa
adc
lock
lret
in
cmp
popf
jmp
or
and
jns
scas
pop
sub
jl
and
jl
or
add
mov
dec
pop
mov
xchg
sbb
push
fldt
arpl
mov
dec
jne
lret
aas
inc
inc
testb
lea
and
out
jne
pop
jno
push
test
sub
jle
sar
fcmovu
dec
sbb
test
jb
in
mov
imul
insl
cmp
insl
or
into
ds
fadds
hlt
dec
mov
movsb
pop
inc
mov
cmc
push
xor
sub
popa
out
mov
push
sub
adc
pop
inc
in
jno
shll
in
mov
sub
cmp
sub
xor
adc
sbb
mov
sbb
jge
js
cli
out
in
inc
std
cli
jns
pop
enter
adc
pop
push
add
inc
jbe
mov
adc
xchg
mov
add
arpl
leave
xchg
cmp
mov
scas
fs
aas
cli
add
ja
mov
and
iret
outsl
add
mov
mov
fbld
popa
add
dec
iret
test
sub
cmc
scas
or
xchg
dec
inc
inc
mov
nop
aam
aaa
jge
dec
sub
mov
dec
sub
mov
cmp
push
mulb
cmp
and
jl
out
insb
test
jbe
jmp
dec
test
mov
mov
mov
in
insb
inc
cld
mov
gs
arpl
cmpsl
sub
mov
fcmovnbe
or
xchg
mov
divb
xchg
push
adc
xor
shrl
daa
mov
mov
mov
inc
dec
out
sbb
cmp
and
pop
ret
adc
pusha
push
pusha
cltd
push
addr16
pop
mov
in
sub
stc
or
cmpsl
lods
and
add
hlt
push
pushf
jmp
push
cltd
or
fldenv
and
dec
sub
nop
arpl
fistps
add
xlat
sub
out
sub
nop
dec
add
sbb
ds
jbe
fisttpl
xchg
pop
mov
jmp
aam
insb
xchg
sub
push
and
lahf
das
addl
lcall
fdivl
mov
movsl
and
dec
xchg
adcb
clc
pop
cwtl
cwtl
je
jecxz
sbb
dec
adc
sub
pop
stc
in
lret
xchg
or
xchg
aam
out
es
iret
jle
mov
scas
adc
in
xorl
lret
push
xor
mov
dec
adc
psllq
rol
and
mov
ret
and
push
outsl
pop
subl
hlt
adc
pop
outsl
aaa
clc
inc
xchg
jge
data16
out
divb
lcall
xor
jmp
pop
jo
xchg
repnz
repnz
sbb
fisubs
cmp
sub
test
repnz
loop
cmp
fmull
or
mov
je
sub
jno
xor
push
cmpl
fwait
and
in
lods
pop
or
add
daa
sub
push
popf
inc
mov
mov
shll
jno
add
xlat
sub
sbb
scas
pop
sub
out
push
xchg
insl
nop
mov
pop
or
mov
dec
std
sbb
jle
mov
ss
mov
aas
test
out
mov
sub
shll
cmp
je
aam
lods
lret
xor
sbb
cltd
arpl
cmpsl
add
jge
outsb
or
inc
fwait
xor
add
mov
cmpb
rolb
inc
mov
inc
sahf
sti
pushf
repz
subb
enter
push
fsts
add
xor
insl
cmp
cltd
xlat
scas
daa
sub
mov
mov
mov
xor
and
cmp
mov
pop
mov
adcl
sub
ds
sbb
loope
and
out
out
cmp
cmp
xchg
push
xchg
jle
or
mov
push
lea
cmpsl
testb
dec
cmp
cmpsl
sbb
dec
jnp
fwait
repz
orl
ja
icebp
jbe
arpl
xchg
mov
out
cmpb
cmpsl
rep
pop
cltd
orl
push
out
sahf
fsubrs
imul
ret
add
jle
jbe
lea
jl
shrb
rcrb
repnz
xor
cmpsl
insb
shrl
daa
mov
aam
shl
test
loope
dec
xor
xchg
clc
xchg
loope
cmp
mov
daa
int
dec
adc
lret
lret
mov
mov
mov
into
cmp
push
lds
jg
push
daa
pop
pop
fwait
mov
jle
push
xchg
lret
jo
mov
shlb
mov
push
and
mov
sbb
fsubrl
mov
sub
test
imul
sub
inc
jbe
insl
ficoms
pop
fcoms
jecxz
popa
adc
dec
idivl
dec
or
imul
rol
pop
push
push
mov
push
cmpsb
and
add
mov
jns
in
push
cmp
lock
aad
pop
aas
aaa
sqrtps
sub
orb
ret
push
cmp
lahf
in
xchg
lahf
mov
bound
repnz
cmp
jbe
pop
pop
repz
xchg
cmpsl
lahf
pushf
cmpsl
xchg
xchg
shrl
roll
push
shl
sbb
popf
inc
sub
decl
and
repz
cmp
fadds
mov
or
pop
enter
jnp
jl
add
jmp
js
movsl
int3
and
and
bound
adc
pop
insl
inc
jecxz
push
sarb
int3
mov
aas
add
sahf
shrb
test
xchg
mov
test
pop
pushf
jb
mov
sbb
or
pop
push
scas
stos
inc
xor
mov
push
xchg
sub
int3
cli
sub
sbb
cli
testb
daa
aad
mov
mov
fmull
mov
cmc
pop
or
dec
in
mov
dec
hlt
push
imul
xchg
jmp
stos
cmp
cs
cmp
incl
rcrl
lods
in
ss
dec
dec
dec
pushf
outsb
shlb
and
dec
lods
imul
adc
or
jnp
cmpsb
lea
or
dec
or
dec
cmpsl
pop
mov
scas
cmp
mov
arpl
push
cmc
sbb
pop
xchg
loopne
push
mov
cli
or
add
xchg
movsl
jo
icebp
jge
mov
dec
clc
xor
sbb
sbb
xor
push
pop
jns
jbe
rclb
xor
push
mov
out
out
ret
xor
or
inc
ret
lods
jmp
mulb
cmp
mov
clc
adc
sub
test
and
inc
movsb
in
loop
int3
jge
or
sti
sub
adcb
pop
mov
ja
inc
jbe
jae
inc
mov
push
jo
fisubl
pop
popf
pushf
add
inc
ljmp
or
outsl
rsqrtps
ret
jo
sub
jmp
pop
aad
xchg
shrl
dec
cwtl
mov
sbb
inc
sub
fs
in
fadd
pop
into
test
push
mov
aad
cmp
push
fisttpl
je
and
push
je
adc
cmp
push
insb
cmp
mov
dec
adc
mov
and
movsl
sbb
loope
daa
nop
jge
jae
std
adc
mov
mov
sysenter
dec
iret
sub
mov
in
and
xor
cli
sub
cld
ret
xchg
cmp
inc
adc
fninit
lea
call
or
pop
idivl
add
xchg
outsl
or
insl
pop
outsb
jo
pop
mov
loopne
push
jl
and
repnz
test
or
xchg
sbb
push
jo
leave
aas
jge
out
cmp
hlt
lea
or
push
mov
inc
jbe
add
xchg
fbld
pop
lea
les
cmp
js
adc
aas
loope
xor
xchg
inc
jmp
xchg
add
sbb
xor
lods
mov
push
pop
outsb
das
ljmp
clc
subl
adcb
iret
jge
stos
and
mov
adc
ja
pop
or
popf
mov
aaa
lahf
lods
pop
js
lret
adc
inc
fmul
fnstcw
xchg
lret
mov
cld
loopne
vmread
mov
or
pop
pop
xor
sub
loopne
push
sub
test
movsb
ficoml
jno
pop
ret
sbb
cs
mov
lcall
xchg
jbe
and
xlat
sub
dec
mov
xchg
xchg
jb
push
inc
inc
mov
out
out
jmp
jns
adc
push
sub
dec
push
dec
or
shll
pop
xchg
ret
xchg
es
push
or
stos
hlt
ljmp
cmpsb
xchg
dec
push
mov
add
frstor
inc
test
jo
pop
paddw
xor
mov
push
push
dec
scas
cmp
push
sahf
hlt
repz
or
or
cmp
dec
add
sbb
arpl
daa
inc
or
push
enter
out
xchg
sub
pop
loopne
cmp
shll
jae
fwait
out
xlat
fmull
scas
sarb
movsb
lds
popa
imul
lcall
mov
cmpsb
add
jns
adc
insl
das
jecxz
pop
mov
arpl
cltd
scas
outsl
scas
orl
notb
scas
dec
pop
jmp
mov
sbb
adc
int
lock
mov
add
inc
cmp
jmp
cmp
xchg
or
imul
mov
adc
xchg
iret
add
dec
cmp
mov
stos
push
push
jmp
ror
or
lahf
js
cmpsl
cmp
or
mov
lds
std
add
aad
cmc
js
fstl
xchg
outsb
xor
and
lret
lods
lahf
shlb
les
addr16
and
xchg
xlat
add
lock
enter
pop
loope
test
divb
call
push
repz
dec
iret
cmp
jnp
jnp
shll
xor
les
push
ss
loopne
lea
or
xchg
xor
arpl
fistl
mov
rolb
stc
fstps
rcr
mov
test
lods
cld
add
rclb
cmpl
aam
pop
and
adc
dec
pop
adc
lods
pop
mov
mov
mov
add
jecxz
sub
pop
mov
fidivl
int
pop
cs
push
add
mov
adc
cmp
push
ljmp
incl
fdivrp
sbb
xorl
ret
mov
xchg
pushf
mov
adc
das
add
out
movsb
daa
inc
popf
push
and
loopne
xchg
out
sub
aas
mov
pop
xchg
mov
sub
lret
push
pushf
add
dec
ret
adc
inc
out
data16
data16
call
insl
jmp
adc
and
add
lret
push
insb
aaa
shrb
fcomi
mov
lahf
xor
mov
sti
dec
mov
cmp
dec
dec
sbb
scas
loop
cltd
cmpsl
fisttpl
jecxz
sub
out
loopne
lcall
jbe
sub
fistl
leave
mov
ret
sbb
fwait
xchg
cwtl
jmp
clc
push
mov
ret
xor
dec
imul
arpl
mov
mov
dec
inc
jp
push
rcrl
push
enter
or
out
int3
ja
popa
pop
jno
into
stos
push
mov
int
add
sbb
mov
jae
aas
andb
fisubrs
jnp
jg
hlt
scas
jmp
fisttpll
adc
lcall
stc
addr16
in
cmp
lods
jae
das
lea
jno
add
or
sbb
fmull
loopne
sub
test
xchg
jne
push
pop
push
or
enter
call
xlat
xor
and
es
ret
sbb
xlat
inc
leave
clc
pushf
xchg
mov
xchg
xchg
pop
mov
mov
pop
rcll
mov
ss
jg
and
jnp
popa
xchg
shll
xchg
fistpll
sbb
mov
inc
test
push
int
enter
dec
mov
sub
ret
es
stos
sbb
push
in
inc
loope
out
inc
hlt
movsl
mov
and
adc
adc
minpd
xor
aas
call
sub
or
dec
mov
fidivrl
pop
repnz
adc
mov
adc
pop
or
inc
cmc
xchg
sub
xor
repnz
xchg
xorb
push
sbb
pop
mov
push
movsl
popa
mov
ret
pop
ret
add
rorl
or
push
aaa
or
jmp
xorb
loop
test
mov
mov
out
dec
jns
sub
push
bnd
adc
mov
lods
leave
arpl
push
cmp
sbb
cli
sub
mov
sub
xchg
inc
push
or
or
mov
dec
cmpsl
adc
sti
mov
sahf
xorb
push
out
ret
inc
sbb
out
dec
movsl
lahf
aaa
cmp
sub
push
xor
adc
adc
aad
push
push
xchg
xlat
aaa
fcoml
inc
or
shlb
leave
xor
in
cwtl
repz
jle
gs
mov
sub
mov
mov
push
adc
in
and
mov
mov
cmp
out
mov
xchg
jbe
push
lds
imul
adc
fcompl
divb
push
sub
cmp
xor
int
jne
insl
insl
adc
mov
inc
pop
popa
jle
jbe
mov
fcomp
daa
mov
cltd
ret
decl
movsb
mov
ljmp
outsb
lds
mov
sub
adc
mov
movsb
repz
icebp
dec
decl
int
arpl
in
and
aas
push
lret
mov
subb
mov
enter
aam
and
mov
popf
or
and
mov
and
push
push
and
pop
sbb
imul
and
mov
and
orl
js
imul
repz
scas
ficoml
adc
push
in
sbb
dec
or
mov
xchg
xchg
jb
cmp
stos
cmp
inc
or
xchg
cli
notl
cmpsb
outsb
rcl
movaps
int
pop
inc
rclb
popa
rcrl
aad
mov
cwtl
ficoms
sub
popl
xchg
mov
rorb
and
test
inc
jne
test
push
add
repz
sbb
xor
adc
add
mov
push
test
out
and
adc
mov
rorb
and
xchg
out
sbb
sbb
fs
mov
jge
sbb
lea
fistl
test
into
inc
mov
loopne
negb
adc
adc
test
gs
jo
mov
fcmovnu
jg
aas
fwait
mov
mov
mov
lret
adc
in
or
popa
inc
aad
sbb
das
lods
insl
sahf
inc
mov
dec
incb
cld
nop
inc
scas
pop
sbb
push
cltd
dec
in
bound
push
sbb
push
inc
jb
xchg
sub
mov
rolb
push
mov
pop
rcrl
ret
push
push
sti
into
and
lahf
xchg
ss
iret
dec
ret
rcrl
and
sub
shlb
pusha
shll
cs
mov
push
pop
sbb
push
pop
pop
stc
or
add
iret
cltd
adc
rcrl
clc
insl
gs
test
test
icebp
cli
rclb
mov
sti
jmp
jecxz
sti
xchg
mov
pop
jg
repnz
mov
sarb
loopne
push
clc
xchg
sete
pop
jecxz
sub
xor
bnd
out
or
ficoml
int3
repz
mov
push
dec
ret
mov
mov
fiadds
cmp
mov
test
movb
jb
loopne
jns
out
outsb
decb
icebp
lcall
bound
inc
sbb
and
xchg
int
sub
inc
jge
popf
hlt
push
mov
jmp
in
pop
push
dec
outsl
je
repz
testl
daa
and
cmp
sbb
popa
bound
nop
cmc
adc
mov
lret
xchg
push
pop
shlb
dec
lret
xor
xor
lods
pop
ds
aad
push
ret
fwait
add
sbb
pop
add
insl
mov
out
jmp
jmp
mov
inc
lret
pop
pop
mov
add
das
sarl
pop
add
sbb
mov
jp
xchg
mov
insb
and
loopne
fcoml
or
push
sub
cwtl
lock
or
cmc
cmp
inc
inc
popf
mov
jl
push
fnstcw
fs
and
int
inc
inc
je
xor
nop
add
sub
rclb
mov
push
fnstcw
lgs
sbb
movsb
push
adc
mov
jnp
cmp
es
nop
hlt
fisttpl
inc
mov
pop
fidivrs
dec
mov
js
xchg
mov
mov
aam
sti
cmovge
das
sub
rcrb
iret
faddp
repz
dec
adcb
push
push
js
or
or
and
mov
dec
push
insb
push
or
fcomp
add
out
insb
push
and
lret
imul
ret
sub
fidivrl
popa
xchg
xchg
push
std
xlat
and
cmpl
sbb
ja
inc
inc
xchg
pop
mov
sub
sbb
sahf
bnd
repz
xchg
and
dec
pop
jle
sub
xor
jno
jmp
notl
data16
xor
ljmp
cmpneqps
xor
jg
mov
jmp
push
sti
fisttpll
insl
jmp
imul
dec
push
fdivr
je
mov
cld
pop
in
mov
lret
aas
xchg
shll
popa
mov
mov
aas
mov
or
pop
or
gs
cmp
pushf
es
aad
or
testl
cmp
sbb
pop
mov
pop
int3
pop
xor
cmc
pop
mov
subl
xor
out
aam
mov
std
lcall
into
adc
aas
xchg
fisubrl
shlb
rclb
bound
inc
pop
daa
test
dec
dec
out
fs
ljmp
out
icebp
mov
adc
adc
push
imul
xor
xchg
repz
sub
sub
sbbl
pop
sub
lret
test
sbb
lcall
cs
or
or
cmpsl
sahf
in
sub
ficomps
pop
mov
ret
scas
ret
lcall
ds
movsl
addr16
mov
lcall
add
jle
aaa
daa
leave
in
mov
mov
ret
sti
cs
scas
ljmp
imul
shr
ds
xor
fisubl
aaa
lock
add
icebp
xchg
rorb
adc
notl
adcb
stos
add
push
cmc
mov
xchg
lods
xchg
jne
subb
and
xor
add
aad
fstl
adc
sahf
jmp
mov
xchg
imul
jbe
add
leave
mov
sbb
mov
stc
insb
push
repnz
sbb
sbb
cmp
adc
xor
scas
inc
or
mov
test
cld
cltd
pop
xchg
mov
mov
scas
mov
loope
and
lcall
in
and
inc
loop
push
inc
add
dec
sbb
stos
fcomps
fdivs
addr16
adc
mov
jle
adc
ss
and
fsubr
xchg
jmp
push
add
stos
xchg
or
inc
fwait
fwait
jp
mov
mov
push
out
imul
mov
cmp
push
pop
sub
lahf
inc
enter
push
repnz
out
addb
fdivrl
andb
jle
clc
dec
cld
fists
add
adc
idiv
fnstsw
sub
mov
popf
ja
gs
jno
cmp
in
xlat
fsubl
out
scas
cmp
cld
sub
imul
lds
jp
sub
mov
cmpb
inc
fwait
cmp
stc
inc
ret
out
dec
xor
push
cmc
nop
std
or
ja
add
aaa
or
cmp
sub
icebp
add
cmp
subb
stc
sbb
sbb
nop
mov
inc
ror
pop
ret
xchg
dec
notl
xchg
jp
lds
cli
mov
sbb
jmp
fimull
mov
jg
add
imul
arpl
inc
cmp
rcrl
testb
jne
xor
fbstp
jecxz
orl
sub
lret
in
cmp
cli
je
jne
or
mov
cmpsl
xor
test
sbb
jne
cmp
ljmp
clc
and
jge
cmp
push
psllw
pop
ret
mov
pop
fisubrl
pop
inc
add
gs
cmp
movsb
js
jle
fwait
sub
dec
hlt
adc
fwait
jo
sbb
or
mov
aas
push
jmp
ret
jmp
orb
pusha
dec
sbb
clc
cmp
inc
mov
lahf
push
lcall
mov
mov
lods
xor
mov
out
push
or
mov
dec
mov
mov
jmp
aad
adc
loopne
lret
insb
movsl
mov
push
rcrb
adc
movsl
push
mov
stos
cmp
and
jne
mov
cwtl
pop
orb
aaa
or
dec
add
xchg
ss
xor
adc
rorl
push
xchg
nop
jmp
jne
inc
xor
je
lret
pop
xchg
mov
push
xchg
and
sub
mov
sbb
xchg
pop
in
jge
dec
inc
mov
lods
dec
fstl
pop
repz
sub
aas
cmp
lret
daa
test
jecxz
inc
jno
fstpt
add
shll
cmp
stos
mov
orl
sbb
push
fmul
jnp
sbb
sub
xor
cli
leave
faddl
xchg
inc
mov
cltd
xchg
gs
cmc
mov
insl
xor
rcr
adc
sbb
in
sub
mov
cwtl
fwait
testl
xor
dec
mov
insb
jae
shrl
or
sti
rcll
jmp
addb
xchg
cwtl
push
popf
mov
es
sbb
mov
pushf
lret
mov
inc
mov
lahf
jg
fildl
adc
push
out
mov
rclb
push
iret
imul
sahf
or
addb
cltd
cmpb
mov
in
ljmp
pushf
outsl
inc
sbb
imul
cli
call
andl
sub
sbb
cwtl
jmp
js
bound
and
jmp
out
lahf
clc
sbb
hlt
or
dec
mov
mov
cmp
idivb
mov
in
cli
jecxz
scas
sbb
imul
inc
stos
and
repnz
jno
xchg
aaa
xchg
xor
ret
xchg
std
and
lcall
adc
sub
push
adc
jns
xchg
mov
push
cmp
lcall
sub
dec
shll
push
and
jo
sete
inc
addb
inc
xor
push
aas
es
fwait
xchg
or
mov
cmpsb
stos
xchg
mov
push
add
test
and
mov
xor
and
mov
data16
mov
outsl
fisttps
sub
movsb
dec
xor
sbb
addr16
adc
or
inc
addr16
andb
test
push
inc
int
push
dec
sbb
cmpb
test
cmp
mov
imul
mov
mov
jo
mov
in
testb
lds
xchg
inc
add
dec
mov
mov
in
jl
push
ret
es
inc
pop
cmp
cli
mov
xchg
jb
inc
add
mov
adc
imul
push
or
ds
ss
aam
mov
orb
jns
clc
jg
call
add
into
or
sub
psrld
xor
repz
sbb
cmpsl
enter
sub
cmpsb
jecxz
xchg
test
pop
mov
sub
insb
repz
add
jp
fs
sub
jecxz
cmp
rolb
dec
fidivs
lret
bnd
stos
sti
cmc
and
mov
loopew
jecxz
test
or
outsb
xor
lahf
jno
and
push
inc
mov
test
or
gs
xor
jne
fists
cwtl
mov
or
ret
fistpll
mov
incl
sbb
ficompl
jge
jp
imul
mov
inc
add
mov
cmpsl
les
sub
mov
mov
cmp
pop
sbb
sahf
or
dec
mov
out
lcall
mul
int3
jnp
repnz
push
fdivs
mov
add
mov
outsb
dec
inc
pop
bnd
adc
das
nop
cmp
pushl
popa
movsb
adc
pop
mov
jg
mov
sahf
loope
cmp
dec
pop
aaa
mov
ss
xor
es
mov
cmp
xor
jp
es
inc
push
aaa
mov
repnz
lods
mov
inc
mov
inc
popa
push
fsubs
push
lds
cmp
idiv
jb
rclb
imul
ficomps
cmc
jecxz
pop
cli
mov
jnp
jmp
outsl
push
popl
cmp
clc
or
out
repnz
movsl
ds
int3
or
add
test
xor
or
mov
dec
sub
in
xchg
and
mov
shlb
arpl
push
js
sub
jecxz
mov
shlb
mov
ljmp
test
jge
mov
js
in
stos
sub
clc
push
adc
movsl
pop
insl
adc
out
add
add
sbb
loopne
paddusw
popf
jae
test
dec
mov
jle
push
mov
cmp
xor
inc
in
rcll
or
lcall
xor
push
ljmp
push
lea
ret
pop
push
pushf
jp
cwtl
xlat
rorl
outsl
lods
aas
add
mov
iret
pop
push
mov
mov
mov
ja
sbb
xchg
fdivl
jg
mov
shll
lods
cmp
add
fcmovne
stos
or
adc
sahf
mov
mov
add
pop
mov
cli
dec
lods
repz
addl
out
imulb
enter
mov
sti
jne
and
inc
mov
pop
dec
mov
sbb
push
inc
popf
movsl
xlat
pop
cld
push
cwtl
faddl
mov
sahf
mov
mov
test
or
lret
imull
ljmp
push
jo
popf
xchg
movsl
pushf
cld
pusha
pop
mov
jl
sbb
rol
cwtl
mov
mov
mov
cs
lock
ud2
je
sub
or
pop
pop
pusha
mov
sbb
incl
adc
aam
out
cmp
iret
xorb
cmp
icebp
pop
mov
add
mov
andl
mov
sub
in
mov
gs
out
sub
adc
sti
mov
jle
jg
loop
xor
dec
sarl
rcll
mov
popa
push
call
outsl
mov
negl
rcrl
pop
daa
loop
repz
and
ss
xchg
movsl
xchg
add
enter
xchg
and
jo
fstpl
lret
mov
test
jno
mov
cs
and
loopne
cld
mov
xchg
gs
mov
sbb
jo
xchg
mov
inc
mov
lcall
in
fsubrs
add
adc
mov
add
jp
jno,pn
cmp
ret
jg
inc
cmp
fdivs
pop
fbld
xchg
int3
jmp
int3
jl
push
dec
cltd
and
and
xchg
inc
mov
push
idivb
shll
pop
mov
out
imul
outsw
imul
push
ret
xchg
movsb
int
mov
dec
pop
in
in
mov
incb
push
sbb
pop
sbb
cmpb
movsl
pop
dec
stc
inc
cmp
and
mov
sub
sbb
outsb
test
fsubrs
or
sbb
in
mov
insb
ret
mov
jmp
andl
mov
mov
gs
aam
xor
sub
add
sub
test
pop
sbb
mov
push
sub
push
push
push
dec
pop
jns
je
sbb
and
add
and
mov
clc
insb
adc
daa
pusha
fld
jb
into
push
and
and
or
sub
mov
insb
xchg
addr16
mov
lea
xor
sahf
mov
fcoml
es
data16
adc
pop
nop
mov
adc
pop
and
pop
in
cmp
sti
sbbb
loop
dec
in
test
test
fs
pushf
aas
add
fistl
and
pop
ror
xor
mov
test
cmp
int
pop
cmp
into
in
adc
lret
mov
insb
nop
andb
mov
xlat
ljmp
clc
shrl
jl
rcrl
xchg
stc
popf
push
cs
lock
or
sbb
imul
sbb
jle
shll
repz
cs
cmp
psraw
cwtl
push
dec
inc
mov
add
movsb
mov
mov
dec
cs
cmp
xchg
dec
mov
pop
outsl
xchg
mov
pushw
int
adc
cwtl
cmp
subb
push
out
and
mov
jg
jl
xchg
pop
jecxz
cmp
xor
cmc
mov
jg
das
xchg
xor
sub
lret
cmp
push
pop
adc
push
jae
cmovb
mov
dec
pop
leave
pop
and
shl
cmp
es
data16
xchg
or
xor
test
add
ficoms
out
sub
mov
int3
lcall
mov
and
fmulp
sub
push
test
std
std
rclb
dec
ret
jne
xor
int
pop
lret
lods
fucom
stos
sbb
pusha
scas
out
jl
push
out
loopne,pt
add
test
mov
fnstenv
xor
and
xchg
adc
cmp
sbb
and
xchg
pop
or
dec
dec
and
stos
lcall
xchg
incl
pop
jae
mov
fwait
jle
mov
jmp
jb
push
push
ja
adc
push
sahf
inc
sbb
jge
sarl
mov
mov
fildl
imulb
and
pusha
std
sahf
je
mov
xor
dec
or
pop
and
mov
movsb
push
mov
pmuludq
fwait
out
add
cmp
xor
mov
push
xlat
xchg
ficomps
mov
push
fwait
mov
fxam
enter
in
aaa
test
fistps
in
ret
xor
adc
aam
jmp
xchg
sub
and
fld
cmpsb
call
mov
shll
mov
shlb
mov
bound
mov
insb
adc
test
pop
enter
cli
push
flds
sub
dec
push
push
aam
into
std
arpl
out
mov
jp
inc
jecxz
xchg
sbb
nop
repz
lods
xor
xchg
int3
cmp
add
xor
add
cmp
insb
pop
push
xchg
out
push
mov
inc
and
jle
sub
sub
push
notb
mov
mov
lea
dec
mov
pop
xchg
xor
sbb
xchg
sub
and
sarl
fists
stos
cld
mov
cld
mov
nop
leave
xor
icebp
fists
test
js
mov
inc
xchg
movb
call
inc
xchg
cmp
jmp
pop
stos
cld
adc
int3
popf
cmp
andl
push
sub
rcl
mov
popa
lea
xchg
mov
ret
ljmp
jge
cmp
add
and
insl
rclb
mov
dec
or
in
and
jns
addr16
push
fwait
ds
push
sarb
push
test
push
stos
mov
rorl
cmc
cmp
insb
neg
sbb
lcall
xabort
popf
push
loopne
mov
mov
dec
jle
adc
cmp
in
mov
out
mov
cmp
xchg
cmpsb
pop
sbb
jne
add
xor
inc
xchg
ret
push
mov
lods
adc
jge
mov
insb
es
into
shrl
insb
mov
or
insl
adc
je
or
cltd
xlat
push
lcall
repz
xor
aas
push
imul
dec
jmp
hlt
addb
xor
jmp
lock
imul
lds
or
jecxz
lods
adc
mov
das
aaa
testl
int3
mov
in
not
and
push
pusha
inc
mov
xor
inc
js
jmp
les
ret
aas
loop
insl
incb
sbbb
mov
dec
icebp
into
das
imull
inc
ds
out
daa
in
dec
cmp
xor
pop
lock
sbb
xor
pop
jle
sub
jne
cltd
arpl
adc
mov
arpl
dec
inc
lret
inc
xor
push
inc
call
ljmp
lock
popf
fs
dec
cmc
push
push
nop
and
cwtl
cmp
arpl
push
rcr
outsb
cmp
out
push
fistpll
sub
into
pop
enter
sbb
mov
xor
mov
aad
dec
or
mov
mov
jp
mov
jecxz
mov
in
dec
lcall
jno
fadds
sub
mov
sahf
enter
jno
lret
adc
cmp
stc
xchg
cmp
mov
ss
jl
mov
or
xchg
imul
sahf
xchg
or
xchg
push
in
lcall
sbb
fsub
sbb
mov
fisubrs
not
and
bswap
lea
in
mov
sub
into
out
sarl
mov
in
mov
pop
cld
out
das
jge
mov
jnp
cld
mov
lods
scas
test
jp
rcll
test
addl
xor
fisttpll
pop
dec
add
ret
push
loopne
push
inc
xchg
movsb
jae
test
int
inc
sub
repnz
in
inc
lret
mov
jbe
aad
pop
jp
sbb
adc
sub
out
fistpl
push
cld
fcoms
fadd
dec
test
dec
pop
and
add
lcall
mov
dec
rcrl
add
mov
mov
out
jmp
lods
test
jecxz
cmpsl
and
lcall
das
shll
adc
xor
mov
inc
cltd
push
xchg
xor
add
inc
push
mov
mov
sub
ss
in
adc
icebp
shr
inc
inc
scas
add
push
insb
mov
add
imul
fistl
push
hlt
xor
lods
popf
call
pop
shlw
cmp
stos
xor
jp
mov
roll
inc
outsb
bound
out
jbe
out
xchg
push
repnz
xchg
fimull
pop
jp
mov
int3
inc
jb
jp
ret
arpl
xchg
lds
cmp
pop
setb
js
test
add
in
ret
or
jae
shlb
mov
pop
dec
pushf
mov
cmp
insb
clc
popf
cwtl
mov
mov
fsubs
movl
call
dec
add
enter
inc
ret
aas
bound
mov
and
cs
fimuls
mov
insb
pop
or
pushf
pop
int
push
int
mov
rcll
out
cld
mov
loopne
ret
ja
pop
test
jb
sub
out
or
and
arpl
jp
dec
stos
sti
cmpsl
ror
add
mov
out
add
push
dec
repz
push
xor
jae
stos
gs
xor
cmp
inc
mov
jbe
test
dec
xor
leave
cmp
cwtl
add
xor
test
stc
dec
or
lods
jg
cli
test
mov
add
lcall
fstpt
decl
mov
sub
lods
test
scas
cltd
fldt
mov
jge
cmp
out
inc
stc
ds
sub
jb
add
push
add
push
mul
testb
in
dec
das
ret
not
push
popf
ds
divl
xchg
imul
push
ja
fdivrl
ss
in
adc
std
aaa
mov
sti
jne
push
mov
sarb
cmp
scas
sub
xor
popf
shr
jge
cld
movsl
xchg
push
or
push
sbb
stos
aad
push
sbb
pop
hlt
mov
xor
pusha
inc
shll
mov
fiadds
mov
and
sub
jae
pop
sbb
or
test
aaa
jle
fcmovnu
repz
cld
out
aam
aad
mov
fnstcw
jns
dec
push
addr16
sti
pop
inc
cmpl
sbb
jns
lods
mov
and
adc
mov
mov
mov
mov
ja
loop
inc
push
xor
dec
pop
int
mov
cmpsl
cs
insb
fsts
mov
mov
mov
or
repnz
cmc
mov
and
xor
mov
orl
push
inc
adc
lds
aam
jge
andl
test
xchg
pop
push
mov
leave
lea
push
jl
xchg
pop
adc
int3
rol
adc
xchg
lods
cli
mov
xlat
pop
xchg
mov
push
add
nop
lret
mov
imul
sbb
leave
mov
mov
test
push
cmpsb
out
dec
cld
xlat
pop
cmp
sbb
jnp
push
cmp
leave
fs
xor
mov
dec
ljmp
mov
push
mov
push
or
out
and
es
daa
shl
insb
inc
bound
stc
ljmp
add
cmp
push
dec
sub
cmp
or
repz
lcall
dec
pop
arpl
mov
xor
movsb
mov
and
sub
xchg
std
inc
push
pop
ss
mov
daa
adc
push
ret
jns
push
fs
daa
sub
push
mov
gs
mov
pop
mov
cmpsl
lea
dec
rorl
xchg
jo
aam
xor
xchg
inc
mov
add
sbb
ficompl
cltd
jnp
cmp
mov
add
fninit
ret
pop
xor
pop
aas
mov
scas
cwtl
scas
push
sbb
xchg
dec
dec
scas
fstl
fwait
lret
or
xor
into
cmp
xor
mov
adc
movsl
inc
ljmp
xchg
sti
pop
adc
dec
dec
cmc
xorl
outsl
jp
ljmp
adc
pop
lea
ljmp
sti
mov
mov
sarb
and
add
xor
inc
cmpsb
add
and
sbb
adc
jmp
mul
push
test
push
mov
inc
fldcw
xor
mov
pushf
sbb
ficomps
notb
imul
out
ljmp
lcall
pushf
mov
xor
adc
repz
jbe
popf
lock
inc
stc
outsl
mov
imul
sub
pop
mov
cmp
push
sti
daa
shlb
dec
mov
jl
lods
and
clc
adc
or
xor
int
dec
pop
push
pop
pop
std
add
add
jne
mov
cmp
xor
xor
or
xchg
adc
mov
rcrb
dec
push
lret
jmp
or
outsl
and
mov
scas
jmp
test
jo
lret
push
jnp,pt
rol
xchg
movnti
out
jae
movsl
adc
scas
and
and
cmc
test
cltd
sti
adc
mov
dec
rolb
mov
lret
inc
push
mov
or
jge
out
push
nop
jmp
push
and
sub
ja
add
fucom
mov
add
int3
jno
les
ljmp
xor
shr
popa
mov
sbb
roll
xchg
dec
xchg
xchg
cs
push
movsl
ret
cltd
je
enter
pop
fmulp
iret
sahf
add
insb
push
arpl
inc
lret
adc
jp
and
aaa
mov
dec
xlat
aad
outsl
mov
pop
bound
outsl
mov
int3
leave
fnsetpm(287
movsb
or
sarb
iret
dec
inc
sbb
int3
rcll
lock
cmp
call
adc
or
cwtl
movsb
pop
mov
scas
jmp
bnd
or
pop
pop
inc
xor
test
es
sti
xor
push
repnz
fldt
shl
rcrl
ja
notb
out
cwtl
xor
adc
xor
pop
push
jl
sarl
mov
insb
test
cmpl
xchg
fwait
rcrb
xchg
les
cmp
jle
adc
jo
loopne
in
pushf
xor
cmp
outsl
pop
jecxz
pop
mov
nop
mov
loop
cmp
cmp
dec
in
std
outsb
add
test
sbb
call
or
jns
arpl
push
cltd
push
xchg
push
pop
push
dec
mov
jo
imul
aas
or
add
fwait
cwtl
pop
or
jns
out
pop
inc
push
xchg
adc
hlt
orl
jbe
decl
push
cltd
leave
push
loope
aad
cmpsb
clc
mov
adc
loope
mov
idivb
call
nop
cwtl
or
mov
js
shlb
es
test
sbb
fcomip
xor
mov
jo
or
xor
cmp
lahf
push
mov
or
xchg
les
dec
pop
and
xor
stc
jge
cli
mov
mov
pop
jge
push
popl
insl
adc
pop
jle
jecxz
hlt
fildl
inc
mov
mov
pop
testl
out
les
push
lret
pop
push
xor
dec
sub
jbe
orb
jmp
sbb
cli
les
push
push
pusha
adc
lea
lea
aaa
add
movsl
imul
or
push
add
pushf
adc
notl
xchg
insb
ss
fs
jb
hlt
lock
sub
pop
xchg
mov
mov
xor
or
mov
out
push
mov
or
jne
aad
sbb
adc
cmp
stc
push
xchg
mov
inc
jb
fwait
jb
enter
out
mov
outsb
outsb
lret
popf
lock
aaa
out
mov
enter
sub
mov
mov
cld
es
test
out
in
and
mov
xor
add
push
roll
stc
aaa
add
outsl
sbb
mov
in
xchg
xchg
inc
std
sbb
push
les
mov
dec
ficoms
push
loop
rorb
popl
lret
xchg
mov
imul
ja
int3
jb
stc
aad
fisttpll
xor
nop
lea
shrl
add
sbb
jne
jb
rcll
loopne
std
cmp
aas
mov
sahf
int3
aas
fisubrs
flds
sahf
and
movsb
lcall
push
fnsaves
out
jp
in
cmpsl
stc
push
mov
jne
xor
dec
push
cs
nop
popf
fdiv
pop
jae
std
mov
xor
mov
lret
push
popf
jl
gs
push
add
adc
addr16
pop
inc
sub
shrl
lods
mov
enter
imul
sub
jecxz
repz
lock
das
std
pop
pop
jp
mov
cmc
sahf
inc
mov
cmc
fs
or
lods
scas
jmp
lods
adc
and
jne
cmp
cmp
adc
notb
repz
mov
mov
lea
je
sbb
sbb
roll
fidivrs
les
jns,pt
pusha
jl
mov
and
jle
inc
cltd
push
movsl
arpl
sub
xor
mov
ss
shl
movsl
psllq
bound
loope
fcom
sub
stos
cltd
jnp
mov
insl
push
les
push
ret
or
dec
fucomp
test
jg
push
inc
dec
adc
insl
xor
lcall
fstpl
push
xor
push
fdivrl
sbb
jmp
jbe
int3
add
adc
call
lret
add
push
fnsetpm(287
push
das
and
inc
inc
sbb
stc
or
add
jns
ja
pop
negb
ret
sarb
imul
repz
jmp
sbb
pushf
dec
cli
or
xor
out
inc
sub
test
push
lds
int3
sub
sarl
xor
add
test
sub
xor
mov
mov
push
sarl
cmp
nop
push
stos
fldenv
pop
shl
cwtl
jb
inc
mov
or
call
fcomp
cwtl
insb
sub
lea
repnz
sbb
xchg
clc
lea
mov
in
add
outsl
push
add
sbb
scas
cli
in
repz
insb
mov
aam
arpl
adc
push
insb
loopne
dec
sub
iret
dec
mov
movsl
xchg
cmp
xchg
adc
stos
fcomps
sbb
dec
xchg
mov
xor
dec
inc
sub
jb
mov
inc
pop
addr16
cmp
mov
inc
mov
xchg
ljmp
and
jnp
or
into
aam
mov
data16
dec
or
jge
mov
rolb
mov
adc
push
cmc
cmp
pop
loop
mov
out
test
add
jne
inc
mov
fcmovbe
add
pushf
shl
aam
dec
mov
pop
out
and
or
xor
jo
lcall
sub
fsubr
xor
leave
pusha
in
inc
push
adc
frstpm(287
fsubl
mov
in
pop
jecxz
and
rcrb
mov
xor
cmpsb
pop
lret
mov
cmp
pop
inc
sahf
rep
es
pop
mov
ret
sub
or
add
mov
pop
cmp
xchg
push
lods
mov
ss
popa
sbb
add
testb
loopne
loopne
dec
jbe
push
loope
pop
mov
dec
dec
fadd
mov
aaa
jbe
cli
movsb
sbb
xchg
clc
ret
push
mov
xchg
lret
sub
out
or
xchg
cmp
outsb
add
lods
sti
mov
mov
push
or
jae
add
aas
lds
call
lcall
xchg
in
fildl
repz
cld
or
cltd
mov
stc
loop
shll
movsb
cmp
repnz
mov
scas
pop
inc
inc
xchg
lret
out
mov
jmp
sub
xor
push
jnp
hlt
into
idiv
adc
push
mov
mov
jecxz
mul
test
push
fsubs
movsl
call
xor
pop
ret
imul
pop
popf
sarb
loop
ret
cwtl
mov
sahf
dec
std
loop
hlt
insb
pop
and
fwait
test
fisubs
mov
testb
jne
test
and
xchg
outsb
into
pushf
jg
sbb
sbb
add
add
sbb
imul
cmpl
nop
lret
sti
int3
sbb
adc
push
pop
and
inc
sub
xor
pop
sub
cmp
mov
mov
cmp
in
int3
xor
or
testb
sarl
aad
inc
andb
ja
daa
das
mov
and
js
jg
stos
fistl
mov
or
fists
das
scas
mov
or
push
shll
sub
sarb
jnp
push
ret
and
nop
push
cli
js
sbb
int
jnp
xchg
incb
test
xor
loope
data16
push
mov
cltd
dec
in
push
movsb
pop
sub
adc
insb
cmpsb
jp
and
and
dec
mov
xorl
cmp
into
popa
mov
add
pop
popf
xor
mov
lods
test
mov
ret
rcrl
add
scas
adc
adc
leave
enter
sub
xor
fdivl
out
jle
int3
notb
fisttpll
cltd
mov
sub
nop
xor
fcmovnu
sbb
sbb
cs
pop
nop
xlat
sub
es
shlb
cmp
lock
xchg
int3
rorl
ret
in
inc
je
arpl
call
js
popl
pop
sbb
cltd
arpl
in
insb
inc
pop
orl
sti
xchg
pushf
lods
mov
dec
mov
pop
or
outsb
jle
and
adc
and
testb
inc
sarb
pop
fnstenv
cmpb
fsubp
ret
jns
dec
aad
fsubrs
pop
jecxz
test
jb
cmp
sub
push
cmp
sahf
in
cmpsb
mov
xor
lods
es
xor
or
xor
adc
jmp
or
popf
dec
loopne
push
bound
jecxz
imul
in
push
inc
cmp
imulb
jmp
clc
mov
jge
fisttps
clc
ljmp
sar
push
mov
xchg
fwait
mov
in
mov
xchg
cs
sub
sti
mov
lret
rclb
cmp
mov
movsb
lea
sub
mov
cmp
cld
rcl
or
mov
xchg
rcl
or
xchg
mov
xchg
sbb
lcall
jno
addr16
jp
xor
imul
pop
out
into
jmp
movsl
icebp
jb
sub
or
xor
pop
sub
dec
mov
pop
and
inc
sub
lcall
ret
pop
cmp
add
xor
cltd
jp
ret
aaa
xchg
imul
ja
push
je
pcmpgtd
dec
shrb
negl
je
or
adc
cmpl
test
xchg
push
jecxz
outsl
jbe
mov
sbb
jnp
or
out
lods
cmp
sti
imull
xor
ja
test
mov
pop
lds
xchg
fldl
adc
and
jnp
push
jmp
and
lahf
xchg
lods
cltd
rolb
je
and
and
push
add
repnz
mov
sbb
pop
imul
fs
add
pop
cmp
push
adc
adc
mov
jb
dec
inc
inc
in
dec
test
dec
inc
jge
adcl
loopne
sub
xor
mov
dec
jle
sbb
add
inc
cmpsl
fstpt
push
jmp
jl
add
movsl
out
add
out
cld
out
jns
mov
jo
jge
stc
sbb
xchg
insl
jnp
aad
or
dec
inc
in
shlb
loopne
inc
lods
lods
leave
insb
adc
dec
lods
lea
lret
insl
xor
pop
pop
lock
cmpsl
mov
je
pop
dec
xchg
in
and
push
cwtl
push
dec
repz
aad
or
xchg
pop
aaa
shrb
xchg
dec
dec
add
sbb
ret
loopne
pop
fst
xchg
leave
mov
dec
mov
test
jg
nop
int3
fucomi
lds
popa
mov
cs
dec
cmpsb
xchg
aad
stos
pop
jo
stos
lret
cmp
cltd
imul
sub
test
sbbb
sbb
insb
std
xchg
add
pop
cmp
pop
mov
dec
xor
insb
pop
insl
jnp
inc
add
std
cli
cmpsl
xchg
push
fwait
call
jnp
out
sbb
sbb
testb
push
icebp
fwait
int
lcall
loope
xlat
je
mov
and
lods
xchg
push
adc
pop
mov
inc
cmp
push
jecxz
pop
out
int3
aam
pop
xchg
sub
mov
shrl
xor
int
stc
arpl
adc
imul
xor
sub
sbb
jp
cmp
jne
pop
fsts
loop
pop
ss
mov
inc
mov
fsubrs
or
leave
lock
sub
lock
test
and
lcall
xchg
les
das
aaa
adc
lock
scas
lods
ret
int3
fisubs
jbe
testl
rorl
mov
call
xor
cmp
xor
or
ret
jge
jmp
and
lods
subb
into
js
daa
adc
test
call
aam
pop
sbb
xchg
push
mov
cli
ret
icebp
aad
xor
loope
test
mov
cmpsl
inc
jno
in
ljmp
jne
jg
ja
cmp
add
pop
or
imul
add
xchg
sar
mov
sbb
mov
sbb
pop
frstor
stos
sbb
test
test
and
push
mov
sbb
mov
jge
fadd
adc
test
repz
mov
arpl
jo
repz
sub
stos
push
scas
inc
mov
and
int3
or
inc
mov
je
mov
jae
mov
les
mov
xchg
mov
andl
cmp
subb
imul
jbe
fs
sub
push
add
xchg
sub
in
inc
xor
cmc
mov
fsubl
mov
push
or
xchg
mov
xor
dec
mov
inc
xchg
jnp
add
pop
pop
cltd
lds
pusha
pop
data16
sub
xor
and
add
aas
nop
testb
test
ficoml
xor
dec
aam
mov
rorb
nop
cld
lods
outsl
cmpsl
adcl
sub
or
ljmp
jb
add
and
sbb
movsb
sub
dec
sub
jae
lcall
out
std
pop
pop
int3
inc
push
sbb
push
mov
shll
movl
mov
insb
icebp
cmp
insl
mov
or
sahf
popf
popf
scas
mov
push
add
dec
stc
scas
rorl
mov
adc
xlat
leave
jbe
mov
jle
shrb
adcl
ret
sbb
adc
ret
sbb
adc
daa
pop
and
xchg
inc
add
outsl
test
cmp
sar
test
fisubrs
push
and
and
inc
jnp
sub
sarb
push
je
popf
xchg
cmp
daa
adc
aas
xor
add
adc
fwait
add
mov
imul
mov
sub
inc
fdivs
add
iret
shlb
mov
in
xor
inc
in
aam
adc
jp
insl
std
test
iret
sub
imul
push
int
ret
sbb
sbb
jecxz
pop
iret
pop
out
xchg
xchg
lcall
test
shll
mov
test
xor
pop
sub
ss
mov
bound
repnz
cld
sbb
push
fmull
cmpb
dec
lods
addr16
push
movsb
jge
arpl
roll
push
daa
inc
in
inc
iret
pop
ret
jl
sbbb
add
ret
jg
adc
inc
jne
testl
or
sti
sub
adc
sbb
in
add
stos
mov
xlat
icebp
and
aad
fdivrp
sub
xchg
add
imul
and
stos
lods
and
xlat
scas
mov
aaa
inc
cmp
add
mov
mov
xchg
aaa
adc
adc
xor
xchg
dec
stc
adc
push
push
mov
sbb
mov
in
add
movsl
cmp
aad
loop
sub
sahf
aas
cmpsb
cmc
xor
mov
inc
js
stos
outsl
cld
pop
mov
pop
mov
insb
push
sub
cmp
add
out
insb
in
ret
movsl
or
lds
ret
mov
insb
fiadds
jne
stos
mov
sahf
bound
fs
inc
cwtl
in
xor
movsl
push
add
rolb
cld
lahf
sub
loopne
mov
cmpsl
out
push
aas
dec
xchg
mov
mov
fcompl
and
lods
or
sub
cmp
hlt
js
jbe
lcall
inc
sub
or
push
ret
inc
fisubs
mov
fsubrs
xor
or
in
cs
jb
inc
push
cmpb
and
cwtl
std
repnz
sbb
fisubl
ficoms
push
mov
cmpsl
orb
inc
movhps
scas
repz
and
push
aas
jo
jecxz
or
fisttpl
in
addl
int
sub
je
cmp
test
in
loop
sub
stos
sub
mov
jae
call
xor
fs
mov
outsb
sub
jnp
cmp
stos
fnstcw
lods
mov
lock
pop
pop
xor
fdivrs
push
movsb
jne
cmpsb
frstor
jg
xchg
xor
add
jae
inc
mov
push
mov
es
push
inc
xchg
rorb
rorl
pop
jecxz
out
insb
lods
sub
aaa
dec
fcompl
xor
das
pusha
sbb
test
or
mov
inc
and
arpl
out
adc
pop
pop
xchg
lock
lret
fistpll
andb
stos
in
jns
jecxz
leave
aaa
cltd
out
cmp
ficompl
lea
xor
adc
outsb
addr16
lds
rcll
fldl
pop
sti
stc
adcl
addl
inc
ja
sub
ret
xchg
mov
inc
add
clc
test
jl
mov
xchg
leave
push
mov
ret
mov
mov
loopne
test
inc
dec
pop
lret
outsl
cwtl
dec
cmp
mov
fsubl
mov
cmpb
add
dec
movsl
sti
inc
mov
scas
faddp
out
jle
and
sub
scas
outsb
or
jg
sbb
jecxz
or
or
inc
dec
insb
daa
mov
jmp
addl
sub
and
aam
xchg
inc
test
rclb
inc
aam
or
out
dec
sub
sub
pop
lds
arpl
out
loope
xchg
popa
in
test
icebp
mov
jbe
out
pop
xor
mov
xor
in
xlat
out
inc
iret
xchg
pusha
jp
cmp
inc
pop
cmp
outsb
jnp
inc
nop
xchg
lea
scas
aam
stos
xor
lds
fucomi
sub
iret
arpl
test
inc
leave
sub
dec
lret
loopne
push
int3
mov
cmc
xchg
sub
out
dec
hlt
mov
scas
mov
dec
inc
xlat
jb
aas
cwtl
xchg
jo
mov
push
mov
movsl
cld
inc
scas
and
xchg
out
std
jge
or
and
inc
xchg
je
test
xor
jne
call
and
adc
push
push
icebp
jne
aad
divl
mov
xor
jle
fistpl
ss
inc
sbb
dec
mov
adc
jmp
data16
sbb
adc
popa
cmp
push
mov
dec
mulb
leave
push
jb
mov
jl
cld
les
outsl
cmp
nop
jae
sub
sbb
jge
bound
push
mov
or
mov
cli
outsb
lahf
push
and
adc
sahf
mov
and
add
rcll
jb
jno
test
insl
lods
sbb
jb
pusha
push
dec
or
sbb
in
mov
test
add
in
add
pop
cmp
sbbb
jmp
clc
jae
clc
push
xchg
jp
lret
jno
add
fnstenv
out
mov
mov
out
lock
mov
add
test
aaa
push
pop
ja
inc
or
or
insl
dec
mov
testb
ret
cmp
pushf
lods
test
es
scas
enter
popf
notl
movsb
sub
xor
push
and
fdivl
arpl
in
and
enter
leave
cld
repnz
pop
jl
shl
mov
fwait
inc
lods
test
fst
setg
add
xor
push
sbbl
rorl
sbb
mov
bound
test
push
lods
cmpxchg
lea
icebp
xor
mov
ret
out
into
test
stc
mov
inc
fwait
gs
cmpsb
fists
aam
pop
jp
divl
call
out
dec
xor
repz
and
jnp
into
in
popa
mov
insl
fwait
icebp
jbe
mov
sti
mov
pop
in
fwait
push
push
inc
adc
xchg
push
adc
cmp
cwtl
jp
dec
in
shll
movl
std
iret
test
push
shll
adc
mov
cmpsb
fldcw
xor
sub
in
mov
in
add
int3
cli
sub
mov
leave
inc
mov
mov
loope
sub
sub
pop
lea
mov
ja
out
push
mov
sbb
dec
leave
pop
cs
dec
cmp
adcl
jae
xor
test
cltd
clc
or
sbbl
subb
sbb
decl
mov
pop
push
ljmp
sbb
fcoml
dec
aaa
inc
xchg
les
add
mov
arpl
mov
cli
cmp
cmp
adc
mov
sbb
in
push
mov
mov
jns
lret
dec
mov
sarl
in
inc
pop
cwtl
sub
and
push
lock
cmp
loop
pop
push
and
popf
and
ljmp
aaa
jg
mov
sub
pushf
jae
ja
aas
adc
out
or
xchg
jne
shlb
adc
jb
adc
in
ja
in
mov
add
add
and
dec
jne
mov
dec
mov
add
jp
jb
mov
rolb
clc
popa
jp
les
sub
dec
or
outsl
xor
call
repnz
and
and
aas
data16
mov
adc
jmp
mov
push
fisubrs
sbb
stos
jno
repnz
xorb
and
sbb
je
movsb
cmpb
xchg
nop
jge
cmp
rorl
jmp
cmpsb
lret
bound
pop
pop
adc
fwait
and
fwait
js
push
das
ds
sbb
dec
push
aam
fincstp
push
pop
outsb
jecxz
dec
xchg
ss
inc
rorb
jb
sub
cltd
loop
pushf
bound
dec
xchg
inc
dec
mov
jb
imul
in
out
daa
test
fistps
cltd
int
stos
and
push
push
je
out
popa
scas
int3
add
lock
inc
pop
pop
jp,pn
adc
outsb
adc
shr
xchg
and
jno
pusha
adc
cwtl
push
cmc
fisttpl
subl
push
test
je
cmpsb
lret
std
xchg
and
jno
mov
lcall
ret
cmp
loop
sub
mov
push
fwait
ret
aad
push
or
rorb
test
leave
std
jge
xchg
out
and
mov
cwtl
aam
xlat
inc
ret
xor
inc
je
dec
ret
mov
or
jne
fisubrl
jb
imul
fisttps
sbb
add
or
and
cwtl
jae
clc
sub
fcoml
aad
sbb
test
dec
sub
nop
and
jg
daa
and
in
inc
jle
pop
popl
cmc
mov
mov
clc
in
and
nop
test
pop
fdivs
push
arpl
push
sub
push
mov
mov
jnp
push
inc
lds
xchg
lret
add
es
ficomps
adc
jae
fldenv
andl
fdivrs
iret
push
mov
cld
push
adc
xchg
stos
dec
arpl
aaa
or
add
fdivs
mov
test
imul
outsb
jle
sahf
rclb
cli
sbb
arpl
sarb
out
cwtl
cmp
mov
xchg
dec
push
mov
pop
shrl
cmp
imul
xor
mov
mov
push
sub
int
push
loope
jb
in
and
mov
repz
push
add
fisubrl
inc
xor
xor
xchg
push
sbb
xor
mov
cwtl
sub
pop
cmp
lret
mov
sahf
and
adc
das
sbb
loopne
out
movsb
sub
dec
aad
inc
aam
add
stos
cld
clc
in
jl
cltd
or
and
mov
and
cmp
or
lea
sti
in
inc
ja
mov
inc
int
push
cvtdq2ps
dec
leave
shlb
inc
insl
in
mov
pop
sbbl
cmc
ss
ret
push
xchg
sti
aam
flds
jae
dec
test
std
dec
jns
in
mov
xchg
xchg
loop
cs
movl
adc
daa
xchg
mov
fdivrs
mov
adc
dec
lea
jae
sbb
push
scas
fmull
outsb
pop
cmp
insl
mov
sub
enterw
loope
cltd
ror
test
je
mov
fcomp
nop
jnp
pop
cmp
insl
jecxz
dec
rolb
in
mov
lock
fcompl
fldcw
pop
mov
pop
test
push
jmp
and
js,pt
stc
mov
insl
dec
lcall
jp
cmp
dec
push
push
xchg
add
pushf
neg
sub
jl
mov
or
out
cltd
or
lds
nop
mov
xchg
repz
fwait
pop
cmp
out
mov
fadds
ret
sub
push
je
push
into
sbb
and
sub
xchg
loope,pn
xor
or
mov
xchg
fldt
lods
lret
arpl
loopne
push
js
shll
dec
inc
shll
adc
sbb
cmp
mov
jge
mov
cltd
aad
sbb
outsl
pop
push
xor
flds
imul
aas
adc
out
arpl
test
imulb
push
xor
add
inc
mov
cs
clc
fstpl
fimull
and
mov
mov
scas
or
pop
mov
neg
movsb
mov
pop
xor
xlat
jo
dec
dec
daa
mov
and
cld
test
push
sahf
cmpsb
xlat
aas
pop
arpl
or
cli
inc
outsb
xor
push
mov
sub
loopne
push
inc
shrl
and
mov
mov
or
in
jbe
xor
jp
in
sahf
or
xlat
cmp
lock
adc
mov
dec
pop
jno
fs
rol
mov
mov
cmp
es
ficompl
dec
mov
jmp
loop
jmp
test
and
fmuls
mov
popf
jne
pop
add
in
dec
in
mov
lods
imul
cli
lahf
sub
jle
icebp
or
jne
fcmovne
push
mov
mov
mov
add
lds
dec
add
push
addr16
in
inc
dec
xchg
inc
pop
rol
rcr
fnstenv
jo
add
pop
pop
mov
lods
popf
sub
lret
and
cmp
loop
pop
nop
imul
mov
jl
xchg
sbb
push
ljmp
jg
cmpsb
out
and
xor
notl
push
cmp
add
and
gs
ljmp
insb
lret
pop
mov
pop
stos
lds
mov
xor
stos
and
mov
test
data16
dec
imul
mov
pushl
mov
mov
addl
jle
or
jg
pop
lock
andb
adc
pop
or
call
push
jle
pop
dec
ds
jns
jno
xor
test
ret
loopne
frstor
jle
jp
inc
xchg
dec
jnp
mov
mov
jg
xchg
aad
loopne
jae
outsb
mov
dec
mov
outsl
out
jecxz
sub
push
xchg
mov
and
test
cwtl
adc
imul
push
fisubs
cmp
cmp
pusha
and
fimull
pop
xchg
sub
nop
sub
add
stc
pop
jns
cmpsb
jge
cmp
stos
xchg
inc
lcall
cmp
push
aam
mov
push
mov
adc
test
fwait
xor
jns
mov
cmpsb
movsl
in
pop
sahf
mov
imulb
rorb
sbb
ret
test
jne
jno
stc
icebp
test
sbb
imul
sti
popf
jle
xlat
fnsave
and
pop
mov
push
ss
sbb
push
push
out
cmp
mov
add
mov
sub
adc
mov
popf
mov
rcrl
inc
mov
push
sbbb
mov
sub
add
mov
clc
lcall
leave
xor
xchg
cltd
add
and
inc
xor
and
scas
iret
cli
dec
mov
push
mov
dec
xor
aam
push
cwtl
call
std
jp
insb
mov
cli
in
aad
adc
enter
jo
dec
adc
jns
outsb
incl
testb
jbe
jnp
aad
jp
inc
jg
andb
push
out
sub
into
repnz
mov
cltd
or
sti
lahf
add
adc
std
pop
sarb
test
or
cwtl
das
fbld
push
aad
mov
xchg
lods
data16
inc
popl
mov
lods
addl
cmc
int3
lcall
push
inc
je
fimuls
jmp
cmp
xchg
and
inc
data16
pop
sbb
sahf
sbbl
call
adc
addb
dec
in
mov
dec
test
sbb
xor
ret
mov
fst
loop
fistps
mov
shll
ljmp
pop
push
repz
leave
pushf
ret
cmc
daa
cmp
popf
jno
cmp
fcompl
sub
lods
loope
sti
mov
mov
mov
arpl
or
push
sahf
lahf
in
pop
push
pop
push
ljmp
jp,pt
mov
ss
outsb
ret
and
pop
jg
push
jb
sub
pop
insb
movsb
mov
xchg
pop
pusha
and
lret
mov
mov
out
shrl
sahf
rorb
push
dec
dec
clc
lea
sbbl
stos
mov
mov
ss
cmp
xchg
shrl
cwtl
add
dec
leave
aas
mov
pop
adc
or
jg
dec
jecxz
adc
loope
xor
into
xor
mov
test
add
out
sbb
in
addb
jle
lret
dec
arpl
insb
cmpps
dec
lahf
inc
jg
cltd
ljmp
fnstsw
jp
popa
pop
cmpsl
xlat
inc
cld
sbb
cmpsl
adc
lds
lret
push
jno
dec
push
mov
push
xor
or
sub
push
fabs
inc
or
cld
pop
pushf
ja
inc
fidivrl
rcrb
mov
mov
stos
sti
js
mov
cmp
fisttpl
jbe
movl
scas
mov
jecxz
inc
iret
negl
push
dec
test
call
mov
pop
loop
cmc
push
xor
fadds
push
and
mov
xlat
out
xor
aaa
fucomi
mov
andl
xchg
push
cltd
jge
xchg
mov
ret
lds
ja,pn
mov
sbb
fildl
int3
fs
adc
sbb
mov
roll
push
cmpsl
inc
repnz
andl
inc
stos
pop
out
jns
lcall
xchg
insl
data16
repz
xchg
imul
bound
data16
cmp
hlt
push
cltd
push
and
sbb
mov
jne
test
and
jno
cs
jle
out
outsl
mov
rolb
jns
mov
push
jecxz
sub
lret
imul
repz
mov
insb
push
aaa
fiadds
std
adc
jecxz
sti
xlat
xlat
or
push
pop
mov
stc
mov
aaa
jp
pop
sub
ret
fwait
test
cmp
or
lods
cmp
outsl
adc
and
outsb
out
pop
xchg
out
lcall
int
pop
cli
rcrl
jge
jg
mov
sbb
repnz
mov
cltd
jnp
mov
fwait
test
imul
test
icebp
dec
pop
mov
pop
lret
sbb
clc
pop
inc
lods
cmp
mov
fdivrs
sbb
xor
fsubl
sub
pop
jno
orb
sbb
sbb
data16
xchg
test
and
jae
mov
pop
adc
lahf
xor
dec
mov
lahf
fwait
adc
aad
out
imul
insb
sub
fwait
add
loop
mov
mov
fldcw
shr
in
pcmpeqd
and
push
fiadds
mov
and
xchg
lea
inc
sbb
leave
sub
cmpsb
imul
test
adc
jno
or
xchg
fidivrl
xchg
dec
jb
xor
inc
mov
jp
mov
mov
test
jecxz
lret
jge
int3
out
or
sub
inc
idivl
ficomps
xchg
inc
xchg
repz
imul
pusha
in
imul
jns
inc
xchg
sub
jne
rclb
shrb
movsl
roll
mov
into
scas
mov
or
and
push
ja
or
cmpsb
inc
dec
lcall
test
ss
mov
inc
mov
shlb
fdivr
and
fisubrl
dec
dec
les
sbb
push
sbb
test
cmpsb
loope
js
adc
stc
adc
in
pushf
inc
push
lcall
pop
pop
mov
or
and
jnp
xchg
xor
dec
xor
pop
data16
imul
andb
inc
andl
sbb
test
jnp
addb
popf
dec
xlat
mov
das
std
dec
jg
mov
std
out
pop
push
and
jbe
sbb
addb
push
pop
in
adc
pushf
int
test
mov
test
inc
xchg
lahf
sub
sbb
aaa
aas
and
add
into
pop
loop
fwait
add
inc
inc
mov
outsb
iret
std
mov
sbb
jmp
xlat
arpl
dec
jge
es
jbe
mov
pop
jb
ja
sub
mov
mov
into
test
push
mov
xchg
std
jmp
movsb
iret
int
pop
lret
mov
clc
test
jb
cmc
dec
sbb
outsb
inc
mov
shlb
in
ret
clc
clc
dec
in
xor
scas
test
mov
aaa
push
lods
test
in
shll
imul
sbb
sub
add
ljmp
bound
fcmovbe
cld
bound
bound
loopne
push
cwtl
cmp
jnp
dec
cmpsb
lret
mov
lahf
sub
outsb
test
jle
ret
inc
sarb
rdtsc
call
out
cmp
push
pop
int
imul
mov
lods
fwait
not
data16
fcomps
and
scas
movsb
mov
pusha
shll
xchg
push
mov
std
mov
add
in
pushl
or
pop
notl
or
stos
dec
call
out
mov
pop
movsb
cwtl
push
ljmp
jno
mov
in
cmp
mov
jle
xchg
call
mov
push
addr16
mov
rorb
arpl
sub
aaa
add
adc
mov
xchg
pop
push
mov
popa
push
xrelease
push
repnz
aam
lds
sub
add
xchg
ficoml
inc
mov
mov
leave
mov
push
lods
aam
scas
cmp
or
lods
xorb
pusha
pop
mov
mov
and
cmpsl
andb
int3
int
xor
lahf
mov
add
fimull
or
popf
mov
mov
loop
into
ficomps
les
mov
cmp
xlat
test
inc
and
adc
les
dec
hlt
imul
mov
ret
mov
rcr
pop
xlat
scas
in
cli
adc
or
xchg
test
sti
fcoml
mov
lea
inc
add
les
dec
cmpsb
mov
fsubr
stc
in
cmpsb
sub
aam
dec
push
sbb
mov
cmc
dec
in
jge
or
cs
insl
cwtl
sub
iret
xor
pop
xchg
xchg
ljmp
pop
mov
pusha
mov
mov
mov
int
mov
jae
daa
sub
adc
pusha
push
repz
into
push
arpl
inc
mov
mov
pop
out
dec
push
shll
xor
es
std
dec
lcall
or
jb
xchg
dec
cmpsl
outsb
mov
dec
jo
repz
cmp
ret
inc
mov
pop
lea
lcall
jecxz
xor
in
test
or
jge
flds
xchg
jp
adc
or
stos
pop
add
pop
add
pop
and
scas
outsl
jecxz
mov
xor
and
sbb
adc
pushf
jnp
sbb
cwtl
add
jg
enter
cmp
es
jae
lcall
xchg
addr16
iret
add
popf
mov
out
dec
xor
fnsave
movsl
add
mov
aad
mov
pop
pop
xor
lret
xchg
imul
lock
sub
test
push
adc
xor
test
repnz
mov
ret
or
push
cmpsb
lea
popa
sbb
lcall
ret
sbb
and
inc
scas
popa
fdivs
adc
enter
enter
neg
and
jp
movb
jg
xchg
dec
icebp
std
in
popf
mov
out
pop
movsl
lods
xchg
mov
inc
push
sub
pop
or
popa
mov
add
or
fsubs
cmp
jbe
mov
sbb
cmp
pandn
stc
std
js
mov
jp
xor
test
xchg
adc
jne
call
mov
incb
and
mov
clc
popa
fmulp
fiaddl
push
pop
push
adc
and
addr16
imul
xchg
out
call
cmp
enter
pop
dec
adc
sahf
cmp
sti
dec
dec
loope
jge
xchg
mov
xor
xor
mov
mov
sbb
sub
adc
arpl
and
mov
imul
push
add
xchg
pop
loopne
imul
shlb
pop
out
cmpb
mov
pop
outsb
sub
mov
push
jecxz
ret
call
lods
jne
xor
sti
popa
xor
bound
xchg
pop
dec
sti
mov
sarb
jnp
fldl
push
dec
test
inc
outsb
in
rcll
or
inc
cmp
push
outsl
rcr
js
iret
adc
dec
pop
mov
jg
xchg
pusha
jmp
addr16
sub
nopl
popa
mov
jge
je
pusha
dec
and
mov
lock
into
ja
in
mov
or
sub
ret
mov
sub
sbb
or
push
fdivr
fstp
sti
je
shlb
add
mov
ss
add
aaa
jne
sahf
ja
mov
faddl
mov
outsb
shlb
out
inc
ret
paddsb
pop
jo
clc
rcr
mov
mov
popf
rcl
mov
mov
jo
push
mov
mov
push
xchg
xchg
mov
test
inc
mov
nop
or
rcr
dec
mov
hlt
sbb
roll
jno
stos
sbb
test
insl
or
mov
dec
iret
or
cwtl
in
sbb
push
mov
push
sar
clc
jb
in
insb
fnsave
pushf
pusha
fdivs
sti
inc
xchg
js
outsl
mov
or
icebp
and
mov
push
xor
xchg
mov
repnz
lret
xor
lcall
or
insb
popa
sub
mov
push
das
shl
icebp
fiaddl
fimuls
or
inc
sbb
stos
xor
cmp
dec
cmpsl
clc
lock
push
mov
aam
scas
push
xchg
repz
inc
jl
adc
cmp
jno
popf
js
test
jp
inc
mov
or
test
dec
inc
push
fdiv
mov
mov
sbb
adc
jo
jge
mov
and
xchg
jmp
popf
mov
mov
dec
mov
xor
inc
insl
ficomps
test
mov
push
sub
add
cmp
push
cmp
test
movsb
mov
pop
jge
imul
aaa
push
push
pop
int
mov
dec
jbe
pushf
dec
mov
push
ljmp
inc
insl
lret
mov
adc
inc
scas
stc
loop
jge
xor
rorb
pop
adc
test
lea
push
and
aad
push
pushl
sub
and
ret
sub
mov
loope
xchg
sub
jbe
stc
data16
scas
lods
gs
pusha
aad
scas
sahf
mov
stc
scas
adc
jns
push
jp
jmp
xor
outsl
jl
sbb
xor
mov
jg
test
pusha
shrl
mov
cmp
jo
and
int
sti
ds
in
xchg
mov
loope
xchg
ret
jmp
rcrl
mov
les
pop
cwtl
mov
popa
jb
iret
push
adc
push
out
iret
movsl
push
add
xor
dec
stos
xchg
push
lret
daa
pop
fwait
or
mov
cs
scas
xchg
daa
mov
or
in
cmc
xor
inc
jg
jbe
repnz
push
and
xchg
popa
push
xor
push
int3
xchg
cltd
mov
inc
push
and
icebp
jmp
sbb
cmpsb
ficomps
mov
sbb
sbb
mov
repz
ja
xor
add
pop
in
out
shrl
loop
mov
xor
mov
rclb
xor
inc
fwait
ret
mov
fldenv
dec
stos
test
cwtl
cli
shlb
movb
popf
xor
outsb
lds
mov
mov
adc
mov
clc
mov
lds
test
in
lods
inc
jae
in
cld
mov
jg
sub
sti
add
push
out
push
popa
out
popa
pslld
inc
mov
cmc
mov
pop
mov
xor
mov
or
dec
jns
gs
pop
pop
ficoms
ret
test
pop
shlb
loope
jb
sbb
inc
or
or
pop
xor
fidivrs
dec
roll
dec
aam
movsb
out
cmp
popf
push
push
push
es
or
mov
out
dec
adc
xchg
lock
repz
sub
pop
push
inc
push
sub
ss
and
pop
jmp
xor
pop
les
jae
aaa
push
icebp
cwtl
add
inc
out
mov
inc
fimuls
xchg
mov
das
xchg
jns
je
flds
cli
push
aaa
jns
inc
movsl
jmp
repnz
ficoml
pop
decl
nop
pop
arpl
mov
jnp
mov
mov
push
std
mov
adc
mov
adc
insb
outsb
filds
movsl
shlb
push
or
fucomi
pop
inc
out
jns
outsb
push
cwtl
rol
and
jp
cwtl
lods
xchg
test
jl
sbb
jno
divb
xor
jl
add
mov
mov
push
inc
mov
fwait
mov
aam
xor
adc
sub
push
outsl
jle
and
sub
adc
adc
mov
adc
mov
insb
xchg
mov
sbb
test
push
pop
jb
pusha
jmp
dec
mov
dec
adc
or
sbb
icebp
rol
mov
xlat
rcrb
ljmp
inc
jl
dec
mov
add
xchg
xlat
mov
repnz
cmpsb
jbe
das
push
pop
hlt
mov
dec
inc
pop
aaa
divl
cmp
shlb
and
cmpsl
and
cmpb
mov
sti
shl
ret
fwait
lret
push
shrb
adc
mov
pop
nop
pusha
repnz
push
adc
into
lret
mov
jge
pop
push
jbe
jb
movsb
aam
hlt
cmp
or
jne
sbb
popa
stos
push
jns
popa
hlt
mov
sbb
adc
mov
jge
xor
and
popf
push
addr16
les
xlat
push
in
sub
fs
out
xchg
mov
xor
or
jge
outsl
jle
bnd
lods
jo
and
xchg
scas
jle
dec
mov
cmp
outsb
add
loopne
pop
cld
das
stos
inc
pop
arpl
ljmp
cmp
sbb
mov
andb
jp
addr16
cmp
loope
mov
cltd
mov
outsl
xor
bound
jle
leave
lds
jg
or
adc
scas
add
push
in
push
sbb
xchg
popa
iret
addr16
add
adc
ds
icebp
mov
and
scas
in
popf
dec
ret
outsl
push
add
repz
notl
mov
jns
xchg
mov
fcmovbe
cld
incl
loopne
insb
mov
push
mov
nop
dec
mov
insl
jp
sub
iret
push
ret
sti
mov
and
sbb
xchg
dec
cs
ficomps
jno
das
rcll
mov
ret
outsb
imul
or
jnp
pop
test
cld
cmp
arpl
outsl
xor
cmpsb
push
inc
add
push
imul
and
mov
lods
pop
cmpsl
xchg
jecxz
xchg
iret
cmp
nop
outsl
sub
popf
xor
imul
pop
add
sarb
pop
pop
sti
ret
push
scas
gs
pop
lret
mov
insb
add
jg
sbb
jg
add
sub
xchg
pop
sbb
cmpsb
lahf
push
pop
lahf
sahf
jae
int
mov
adc
xor
notb
sbb
xchg
arpl
jmp
loopne
push
ret
scas
sti
in
jo
and
out
inc
jp
dec
or
jno
movsl
sub
adc
sar
sbb
add
cmpsl
out
add
dec
and
stos
cmpsl
out
pushf
aas
jno
insl
inc
sbb
cmp
cwtl
xor
dec
stc
mov
lods
adc
mov
inc
lds
mov
lea
add
pop
scas
daa
pop
and
gs
addr16
sbb
cmp
jge
or
push
pop
mov
rolb
cmp
or
mov
push
inc
shrd
fs
push
frstor
xchg
inc
adc
fisttps
jb
push
adc
xor
cmpsl
inc
or
frstor
add
sbb
or
shr
and
jge
inc
jbe
or
lods
sbb
fsubs
lea
add
lcall
movl
outsl
inc
push
enter
adc
jmp
in
xor
adc
dec
push
test
mov
aaa
icebp
in
pop
add
push
jbe
imul
cmp
dec
cs
mov
cwtl
mov
rcrl
mov
ret
xchg
subl
dec
js
scas
icebp
or
out
insl
inc
xchg
fwait
inc
jle
and
mov
and
js
xchg
cmp
in
add
test
xchg
and
out
inc
iret
and
push
lcall
punpckhdq
loope
pushf
enter
pop
xor
jp
jge
and
add
das
cmp
nop
dec
pop
inc
aam
jecxz
cltd
in
ffreep
mov
lcall
sahf
movsl
xlat
push
imul
xor
xchg
in
mov
int
cs
imul
pop
push
jae
inc
cmp
mov
inc
cmp
icebp
in
jb
push
frstor
roll
repz
repz
call
addr16
ljmp
sub
mov
nop
jecxz
mov
mov
jge
cltd
push
and
sbb
cmc
add
pusha
add
lock
xchg
insb
sub
push
dec
shlb
push
and
repnz
mov
cs
mov
in
ljmp
mov
add
das
adc
lds
dec
arpl
divb
mov
mov
in
cmp
fisubs
les
inc
sarl
mov
adc
popa
lcall
inc
ds
xchg
sti
repnz
daa
push
push
adc
push
jge
sbb
in
mov
push
fs
mov
into
cmp
cmp
cld
or
cli
jbe
cmp
outsb
add
loopne
mov
ficomps
jle
xchg
xchg
mov
cmpsb
aad
sbb
dec
push
push
jge
adc
pop
fimuls
jb
sbb
xor
lcall
lahf
pop
repz
mov
leave
test
mov
pop
bound
and
mov
sub
mov
sbb
daa
push
out
inc
mov
mov
and
add
out
iret
sbb
jno
cmp
ds
jecxz
xchg
scas
subl
hlt
xchg
imul
out
outsb
push
call
out
adc
icebp
mov
cmp
xor
cmp
jno
in
and
pop
int3
and
stos
inc
jmp
and
aas
add
mov
jle
adc
jne
mov
jg
pop
call
mov
sbb
dec
pop
mov
icebp
pop
jle
pop
or
jmp
add
sub
jb
sub
loop
sub
inc
loope,pn
xlat
sbb
sub
aad
mov
jge
mov
sbb
dec
lahf
int
xchg
lcall
movsl
add
fs
popf
dec
mov
inc
stc
enter
mov
in
mov
ss
sub
fcmovb
lret
cs
cmp
jne
outsl
cltd
stc
push
scas
fisubrs
sbb
lods
cli
jl
insb
add
dec
cld
aaa
scas
mov
or
sbb
dec
fs
cmp
sar
fsts
outsb
inc
in
sahf
mov
push
xchg
into
ljmp
jb
int3
xchg
mov
popa
mov
pop
lret
sbb
pop
loop
cwtl
push
mov
test
incl
loop
xor
adcb
int
dec
mov
cmp
movsb
stos
mov
sbb
loope
mov
out
stc
jmp
lret
push
or
dec
je
pop
test
jo
mov
cli
addr16
cwtl
mov
mov
sub
adc
movsl
call
and
cmp
fwait
stos
and
test
cltd
jp
add
cmpb
cs
pop
jbe
movsl
xchg
inc
and
leave
aad
into
in
xchg
add
mov
pop
cmpsl
mov
cmp
xchg
cmc
adc
ficompl
leave
divl
test
and
test
ljmp
mov
ret
jb
mov
mov
cmc
mov
cwtl
scas
add
xchg
loop
test
faddl
stc
adc
mov
aas
push
jnp
sahf
rorl
data16
adc
repnz
mov
inc
out
pop
js
and
cltd
movb
mov
cmp
jbe
xor
scas
and
and
jne
adc
fcom
ss
adc
xor
push
bound
pop
mov
pop
jo
cs
pop
jge
xor
pushf
pusha
dec
push
and
xor
adc
sahf
stos
xchg
sub
into
in
fsubr
dec
out
arpl
test
inc
xchg
sbb
out
dec
rcr
loop
push
arpl
add
xchg
jecxz
stc
sahf
sbb
xchg
lock
sahf
inc
push
xchg
lret
xchg
div
pop
iret
test
sbb
mov
es
aam
jle
jmp
pop
mov
lcall
pop
les
push
into
das
dec
lock
loop
aam
out
inc
in
rcrb
cmp
cmc
shl
inc
fbstp
mov
add
movsb
ljmp
mov
addb
mov
call
xchg
iret
fiaddl
and
push
fsubrl
aam
sub
adc
in
sub
aas
scas
sub
jmp
jnp
push
jns
aam
cltd
lods
leave
inc
mov
mov
dec
add
rep
adc
mov
lret
aam
cltd
lods
jl
jp
cli
scas
xor
add
mov
daa
mov
xchg
mov
in
arpl
stc
sbb
or
xchg
jno
fdivl
fists
lds
ds
dec
outsl
xchg
mov
cmp
sahf
pushf
adc
push
ja
fwait
shll
in
aaa
stos
push
push
mov
cmc
push
lock
sbb
fiadds
fcmovnu
pop
mov
push
dec
jnp
mov
ret
pop
data16
addr16
dec
and
cmp
ret
cmp
xchg
push
pop
popa
push
mov
push
call
mov
add
bound
mov
mov
jmp
insb
dec
lahf
xchg
loopne
imul
stos
xchg
push
out
out
pushf
aaa
das
fwait
repz
xor
sub
loop
jno
pop
and
fadd
or
dec
xor
mov
xor
sbb
mov
repz
into
mov
or
or
mov
lret
test
lcall
test
jle
pop
push
jmp
push
xchg
stos
cli
pop
and
stos
nop
sub
bound
push
push
jno
scas
repnz
ljmp
xor
imul
in
cltd
adcb
jl
aas
xorb
ret
mov
jno
sbb
cmc
xor
stos
push
mov
xor
aam
cltd
inc
xor
add
push
rclb
mov
call
mov
jp
aaa
pop
mov
jno
and
clc
out
pop
movb
out
dec
sub
adcl
hlt
dec
mov
inc
and
pop
add
aaa
mov
repz
sbb
aad
mov
fcoms
arpl
push
mov
cmp
je
xchg
lods
pop
sarl
in
cmc
aas
cmp
stos
pop
add
cmp
aam
mov
adc
mov
ss
jecxz
push
pop
je
repz
loope
pop
andb
popf
and
ljmp
mov
cld
flds
fldenv
mov
xorl
sub
add
out
push
xor
test
mov
aas
mov
orl
push
mov
stc
jbe
roll
fidivl
ss
ret
jo
sbb
icebp
push
pop
mov
iret
push
filds
repz
stos
je
out
mov
pusha
xchg
into
jno
imull
bound
rcrl
daa
lret
and
add
jl
scas
jle
insl
das
leave
pop
cmp
fidivl
sbb
dec
insl
xor
arpl
cmc
pop
cmp
pusha
pop
clts
stos
jg
jbe
cmpsl
iret
daa
ljmp
xlat
push
inc
lock
push
cwtl
jle
cmp
fs
aad
push
test
hlt
pop
cmc
rolb
cs
cwtl
popf
scas
jg
adc
or
outsl
ret
mov
mov
inc
jnp
sti
xchg
push
addr16
loope
popf
push
mov
cli
lret
jle
sub
mov
sub
mov
jns
add
shll
rcl
insb
jge
mov
add
outsb
jp
push
mov
imul
mov
push
cmp
in
xchg
mov
loope
or
mov
cmovae
test
daa
or
lret
mov
mov
out
cmpsl
addb
mov
rcrb
mov
out
mov
xor
sub
das
loop
notl
aaa
stos
cli
int3
add
lahf
jne
xchg
adc
add
movsb
xchg
sub
xor
mov
std
fldt
loop
int
iret
jmp
mov
mov
incb
lea
xchg
ss
jno
pushl
dec
enter
or
cmp
lods
dec
adc
mov
fldl
lea
xor
add
add
out
lret
outsb
or
mov
roll
pusha
xchg
cld
mov
daa
mov
adc
mov
cmp
inc
mov
in
dec
dec
nop
sarb
insl
dec
ds
pop
decl
pushf
cmp
adc
sub
jo
xor
ja
inc
pop
ret
push
negl
movsb
mov
xlat
dec
mov
loopne
mov
inc
mov
mov
and
cli
filds
int
and
dec
stos
sbb
jl
je
mov
into
mov
pushf
loopnew
mov
inc
xlat
aad
or
mov
cmpsl
xor
mov
divb
xchg
movsl
sti
xor
inc
xlat
sub
cmp
mov
test
lods
and
repz
shlb
add
insl
addl
subl
adc
inc
cmp
push
out
lret
pop
fnsave
mov
mov
pop
dec
pop
leave
push
int3
aas
scas
lea
arpl
jp
inc
jge
and
popa
in
mov
pop
xchg
sbbb
xor
popf
and
in
jecxz
xchg
arpl
jne
mov
lcall
cmpl
cmc
add
push
pop
loope
mov
jae
jge
pop
sahf
in
test
dec
push
jo
cwtl
jns
pushf
lods
enter
mov
inc
or
mov
lcall
cmp
gs
sbb
out
mov
mov
jnp
adc
jbe
nop
xchg
push
mov
xor
add
pop
ss
jnp
jnp
lahf
pop
aam
sar
mov
lret
scas
nop
loop
cld
fdivs
or
pop
scas
jecxz
push
in
or
ja
mov
sbb
push
imul
and
mov
jno
loopne
xchg
jl
into
sbbb
xor
rcll
pop
stc
pop
dec
jge
imul
fcomp
xchg
out
hlt
cmc
adc
rcl
and
out
stos
fsubrl
iret
cmp
aas
arpl
or
mov
ja
xchg
jno
fstps
inc
sbb
mov
inc
dec
add
xchg
jg
hlt
jp
cwtl
xlat
pop
js
adc
ljmp
lods
imul
jecxz
ficoms
pusha
push
pop
jle
rcll
addr16
out
adc
push
test
jge
ja
sub
dec
add
fidivrl
jp
icebp
jmp
shlb
or
mov
mov
mov
ja
and
movsl
js
std
and
mov
or
mov
out
outsb
sti
ror
gs
lds
sbb
js
dec
movsb
test
jge
inc
add
into
pop
sbb
adc
and
fdivrl
xor
xchg
das
fs
mov
pusha
shr
repnz
inc
gs
xor
sbb
push
cmpsb
cld
push
stos
popa
popf
enter
sub
mov
jge
lcall
in
pushf
mov
pop
in
and
inc
outsb
mov
push
adcl
xor
out
imul
sbb
ffree
xchg
jge
push
fs
adc
lock
xchg
in
mov
fildl
inc
dec
mov
and
pop
rcll
js
xchg
rclb
or
and
movsl
adc
jle
ss
mov
imul
fstps
and
pop
cmpsb
in
add
or
dec
pop
mov
test
cmp
and
xchg
out
jecxz
iret
jb
or
call
mov
ret
aaa
pop
movsl
xchg
dec
in
jno
or
icebp
add
in
mov
add
add
sub
jp
fstl
stos
mov
push
insb
or
push
mov
mov
push
inc
pop
cmpsb
jae
cmp
jns
push
decl
testl
div
lods
popa
xchg
int3
rcrb
push
orl
iret
pop
cltd
ljmp
pop
pop
sub
ds
and
cltd
in
sub
int
shll
pop
imul
popl
daa
lods
test
sbb
sub
xchg
xor
cmpsb
mov
cmp
test
lock
movsl
loop
fldl
dec
sbb
sbb
lahf
movl
ja
jae
adc
outsl
test
cld
inc
ljmp
push
sub
mov
and
mov
push
movsb
inc
arpl
out
cmpl
fnsetpm(287
lahf
outsb
inc
push
jo
fs
nop
mov
or
ret
rcrb
mov
arpl
stos
insl
fldcw
sbb
adc
out
mov
jno
insl
push
xor
popa
dec
shlb
int
mov
cwtl
xchg
dec
mull
add
das
hlt
ret
aas
test
dec
jb
loopne
lret
and
loop
lret
add
repz
imulb
aad
in
push
ljmp
cmp
sti
and
cltd
add
sub
mov
mov
popa
leave
push
jbe
scas
add
and
cmp
fsts
movsb
pop
stos
lret
pusha
sub
mov
imul
fcmovnbe
xor
rorb
push
ret
xor
iret
jns
xor
scas
divb
xor
daa
clc
sbb
mov
or
out
add
jo
movsb
add
scas
cli
orb
xorb
popf
or
cmp
inc
mov
test
pop
pop
popf
cmpsl
or
movsb
int
lea
iret
push
arpl
dec
aas
jl
push
mov
push
sub
loop
mov
inc
cmpsb
push
cmp
push
adc
sub
adc
scas
add
cli
pop
arpl
and
loope
outsb
xchg
add
fwait
sub
pusha
out
pop
popf
inc
jmp
gs
dec
push
test
pop
pop
jbe
filds
push
mov
lret
sahf
and
shlb
mov
loopw
mov
and
sbb
test
dec
std
mov
shrl
and
jmp
lcall
pop
std
scas
rcll
ret
lcall
addr16
push
ss
repnz
jg
ret
inc
scas
jb
mov
sbb
and
push
pop
testb
jl
mov
xchg
stos
or
testl
je
nop
sti
rep
cmp
cwtl
add
xlat
fimull
fadds
negl
pop
into
pusha
int
jg
rorl
adc
mov
dec
cmpl
mov
data16
outsb
add
push
pop
mov
int
jnp
inc
arpl
jmp
and
xchg
xor
jno
add
ret
fstl
mov
xor
neg
pop
mov
cli
fstpt
cmpsb
pop
push
insb
jae
sbb
jb
lds
jo
xor
or
jge
add
cmp
xchg
dec
sub
inc
cmc
rol
movsl
jp
into
iret
jg
vpermilps
cld
or
insl
sbb
jg
or
or
das
cmp
push
js
and
shrl
adcb
dec
test
fildll
sahf
icebp
jb
sbb
xchg
mov
and
inc
mov
jge
imul
filds
lcall
and
popa
mov
jns
popa
lahf
lahf
cmc
xor
jne,pt
mov
inc
addb
aam
mov
jge
jne
lret
je
lret
push
fildll
or
loope
lahf
xor
pop
sub
or
cmp
xchg
arpl
testb
test
and
pop
repnz
mov
iret
dec
xchg
jbe
push
mov
repz
xchg
adc
mov
into
mov
cmpsl
mov
std
inc
sbb
aad
scas
iret
out
xor
dec
movl
or
mov
sbb
sahf
add
das
xlat
adc
aas
mov
mov
sbb
xchg
cmp
mov
and
in
fimull
add
sbb
shlb
jge
and
negl
repnz
cmp
cli
dec
pop
cmpsl
dec
jo
testl
pop
aas
cmpsb
lods
mov
sbb
loop
cmc
lock
mov
cmp
lods
mov
es
xor
xchg
push
call
stos
pop
add
mov
push
pusha
pop
cmp
mov
fnstcw
xchg
push
lea
sub
cs
out
cmp
out
sub
xchg
mov
lock
clc
mov
jo
ja
call
sub
jnp
test
xchg
xlat
inc
dec
movsl
xor
lcall
test
xor
add
bound
or
mov
decb
test
fidivl
pop
mov
enter
jecxz
pop
add
sub
insl
leave
pop
mov
push
jg
pushf
add
adc
cmp
xchg
pop
push
iret
xchg
inc
mov
pop
dec
dec
fs
add
and
xchg
mov
xchg
push
cmpsl
pop
movsb
dec
xor
inc
out
rcl
repnz
sub
shrl
jle
adc
pop
jp
mov
das
push
jne
pop
dec
imul
scas
imul
lcall
adc
popa
sub
sub
sub
and
mov
jle
imul
pop
mov
and
push
xchg
imul
ss
cmpsb
enter
aam
lahf
xor
ljmp
cmp
cmp
mov
mov
sti
inc
push
call
or
sub
in
inc
loopne
lock
cmp
inc
add
inc
mov
imul
mov
push
mov
jbe
mov
js
mov
cmp
mov
jnp
subl
insb
ds
mov
cli
ds
adc
in
adc
pop
xchg
imul
xchg
les
inc
dec
adc
mov
andl
or
jae
cltd
sbbb
out
minps
sbbb
xchg
imul
dec
push
add
mov
pop
cmpsl
mov
mov
cmpsb
dec
cwtl
test
pusha
je
mov
pushf
mov
scas
adc
stos
cmp
inc
mov
adc
es
adc
jno
iret
in
cwtl
dec
sub
push
lods
outsb
call
pop
notl
mov
outsl
repnz
push
inc
pushl
sub
jg
daa
dec
xorl
lock
pop
jecxz
jl
hlt
std
mov
jp
lods
sahf
enter
add
imul
sub
int
dec
sub
insb
test
dec
push
mov
inc
mov
dec
xor
pop
jge
adc
cmp
sbb
xchg
xlat
add
mov
jnp
mov
repz
dec
inc
mov
pop
shll
decb
arpl
cwtl
mov
cmp
xchg
movsb
mov
fsts
mov
popa
aas
mov
add
ror
push
pop
xchg
imul
roll
xchg
daa
mov
dec
pop
pop
xor
fdivl
jne
mov
in
add
jbe
cmp
stc
dec
sub
inc
lcall
mov
call
cmpsb
int
notl
cmp
mov
rclb
int
mov
fbld
dec
jmp
lods
jle
lock
adc
or
xorb
fistl
inc
and
add
sbb
lcall
xchg
shrl
add
call
loop
or
lods
ficomps
pop
jns
cmp
lock
xchg
das
jnp
inc
xchg
mov
sub
imul
test
fyl2x
dec
sbbl
jnp
add
mov
jnp
pop
jbe
sbbl
daa
aaa
mov
mov
xchg
pop
mov
dec
sbb
sbb
pushf
ficomps
mov
cld
imul
movsb
sbb
les
flds
lret
int
dec
mov
mov
mul
iret
sub
jns
push
imull
push
pop
je
xlat
mov
icebp
mov
push
jecxz
push
aad
sbb
test
fdivrl
inc
lds
clc
outsb
sub
xor
cli
dec
aaa
iret
imul
push
loop
inc
inc
test
mov
rolb
mov
out
cmpsb
popf
inc
lcall
fadds
stos
push
mov
sub
lahf
xchg
jbe
jmp
mov
jbe
and
mov
orb
orb
mov
lcall
lahf
dec
inc
xchg
lea
mov
aaa
sbb
shlb
push
mov
dec
mov
dec
jbe
jnp
mov
rcll
cmpl
mov
insl
aas
mov
rcl
rcrb
sti
lock
inc
daa
xor
out
xchg
repnz
pop
add
xor
push
jge
aas
icebp
pushf
aam
mov
sbb
mov
jl
push
les
shlb
pop
fnstcw
sbb
arpl
fidivl
push
inc
inc
push
in
das
push
mull
rolb
inc
scas
add
cwtl
and
lahf
lods
repz
aad
sub
fcoml
in
cmp
pop
or
cmpsl
mov
jnp
test
shl
push
scas
js
jbe
notb
lds
mov
cld
lods
mov
push
push
fadd
jne
and
mov
repnz
lods
jge
inc
enter
cmpsb
daa
scas
push
lea
pop
repnz
das
insl
push
xor
leave
and
add
push
inc
adc
sbb
pop
cs
or
cmp
mov
lret
dec
and
sbb
sub
iret
mov
cmp
out
dec
add
sbb
push
fsts
loop
or
and
inc
shrb
ds
cmpsl
mov
cmp
rcrb
xor
cmp
in
pop
mov
lds
out
jne
jl
xorl
je
idivb
cmp
insb
jne
daa
mov
mov
repnz
mov
cmpsb
jmp
mov
push
testl
and
and
shll
cmpl
imul
mov
mov
arpl
les
popf
ss
xchg
pop
aas
mov
add
fidivrs
add
les
mov
dec
dec
jno
lock
jno
cltd
in
xor
xor
adc
testb
les
and
test
xchg
inc
jo
pushf
inc
cmp
inc
sarl
dec
push
les
adc
xchg
pop
pop
cmp
je
push
sub
loope,pt
mov
bound
mov
sar
sub
insl
das
outsl
rol
sub
jmp
sbb
nop
inc
ret
icebp
out
lock
mov
mov
and
sbb
pop
push
pop
adc
mov
lods
pop
push
xor
push
sbbl
cld
mov
mov
pop
push
cmp
mov
pop
lods
mov
push
xor
stos
xor
inc
aad
pop
xchg
movsb
or
xchg
pop
lea
insb
push
xlat
xchg
shll
bound
xchg
or
in
jecxz
mov
mov
sub
or
aas
in
xchg
jmp
xor
mov
aad
rcr
out
or
push
stc
add
cli
mov
cmp
adc
dec
lods
es
push
sub
repnz
mov
bound
and
bnd
js
lods
je
into
cmp
xchg
cltd
or
sub
pop
mov
cmp
add
in
add
cmp
iret
xchg
push
popa
mov
mov
pop
test
pop
or
aad
add
imul
sub
rclb
pop
fidivrl
int3
pusha
push
mov
pop
pop
xchg
xchg
jl
leave
or
iret
pop
fld
push
push
adc
mov
bound
aad
xchg
ret
add
xor
ds
mov
push
enter
jo
outsl
ljmp
or
xor
imul
cmp
sub
add
clc
jo
pop
insb
mov
mov
jb
mov
mov
add
sbb
pop
sbb
push
sbb
push
ret
push
mov
mov
sub
fldl2e
daa
xor
in
push
xchg
fildll
and
out
arpl
out
xchg
jno
push
push
ss
xorl
insb
mov
push
outsb
addl
mov
jo
ffree
cwtl
pop
adc
aaa
scas
addl
adc
mov
ret
mov
loopne
push
in
mov
pop
stos
adc
mov
sub
sub
cld
cmc
cmp
lea
mul
jo
adc
insl
in
sar
sub
add
sub
arpl
in
sbb
inc
pop
popf
imul
add
mov
mov
gs
pusha
dec
push
xchg
lcall
inc
cmpsl
push
mov
test
sub
jbe
es
leave
mov
jno
das
or
or
ret
jae
scas
fidivl
mov
fisttpll
add
jmp
cs
popa
arpl
pop
iretw
inc
pop
push
push
pop
sub
cmp
mov
scas
mov
xchg
icebp
sbb
das
push
mov
je
enter
sbb
cwtl
xorb
xor
aas
test
xor
in
scas
fnstcw
inc
sahf
pop
stos
or
icebp
lahf
mov
mov
and
xchg
pusha
js
xchg
adc
and
mov
mov
stos
fiaddl
fstpt
jp
inc
mov
xor
addr16
ret
or
sub
repz
sti
inc
mov
cwtl
test
or
stc
cld
adc
adc
outsl
fisubs
call
es
pushf
and
mov
mov
test
jno
inc
pusha
jge
cwtl
int3
push
lods
or
push
xor
dec
ss
stos
sub
mov
mov
repnz
cmc
adc
push
sbb
jns
iret
push
mov
mov
adc
mov
push
push
std
mov
int
std
mov
fwait
repz
cld
bound
xchg
mov
push
mov
xchg
pop
xchg
mov
xchg
and
mov
lea
jl
sub
dec
sbb
mov
imul
mov
and
rorb
jne
or
mov
or
cli
insb
ds
cmp
out
inc
and
mov
adc
in
movsb
inc
mov
xchg
repz
sbb
lcall
scas
out
xchg
loope
imul
mov
fwait
aad
xchg
cltd
incb
mov
and
add
add
cmpsl
loope
arpl
jo
push
fdivrs
mov
mov
ja
mov
loop
ljmp
jmp
imul
lahf
aas
pop
int
xor
fcomp
out
mov
pop
xchg
punpckhwd
test
daa
push
xor
push
and
fcoms
gs
sub
push
xor
adc
pop
scas
mov
out
and
pop
jb
out
xor
imul
sbb
add
xchg
daa
icebp
loopne
mov
lcall
inc
or
fistpll
fstps
aas
int
and
and
int
mov
in
xchg
pop
inc
sbb
mov
adc
and
nop
cwtl
push
jle
jmp
cltd
insb
ret
out
adc
push
push
ja
ds
xlat
jb
or
jb
inc
pop
or
sbb
xor
psrld
push
jmp
and
ja
jb
cmc
xlat
lods
jge
xchg
cli
movsb
mov
mov
outsl
sub
xor
in
andb
push
inc
addr16
ret
mov
or
dec
jne
into
sbb
xor
dec
imul
icebp
lea
pop
mov
jnp
lcall
and
push
sbb
inc
add
outsl
sbb
jg
pop
inc
ja
mov
and
push
sarl
nop
mov
xor
lret
stos
xchg
adc
js
repnz
xorl
call
rcrb
pusha
adc
js
mov
sbb
jnp
mov
imul
jmp
repnz
pop
push
lods
push
add
pop
stos
jg
or
cmp
push
sbb
outsb
push
mov
out
lods
sbb
add
ss
lgs
ds
sbb
fcmovbe
dec
scas
add
pop
arpl
stos
mul
push
mov
lahf
aas
inc
xchg
leave
jle
sbb
cld
icebp
cmp
ret
mov
out
jecxz
addb
fildll
js
aaa
dec
ficoms
andl
cmp
lds
enter
repnz
jae
into
sub
mov
adc
adc
push
leave
lock
sbb
mov
fcomi
ja
and
rorb
pop
jbe
sbb
mov
es
pop
jno
arpl
mov
iret
pushf
add
mov
cwtl
pop
pop
xchg
knotb
pop
dec
imul
push
gs
in
scas
ss
xchg
loopne
popf
mov
pusha
xchg
in
dec
inc
dec
leave
cmp
mov
inc
xor
fs
push
popf
les
mov
je
outsl
ja
fs
cmp
repnz
mov
popf
stc
pop
ret
sub
fldcw
mov
popa
out
push
inc
inc
pop
adcb
ljmp
nop
adc
push
jmp
jb
icebp
jbe
fidivrl
loopne
mov
jecxz
lcall
mov
xor
pop
in
mov
fnstenv
pop
call
call
jmp
aas
in
cmpl
addr16
fistpl
or
and
into
pop
pushf
jb
inc
and
fst
sub
mov
push
repz
xor
pop
test
movsl
mov
push
out
nop
movsb
mov
cmp
cs
sti
xchg
add
push
sbb
fwait
lahf
and
nop
mov
jmp
ficompl
testb
xchg
insl
mov
cmpsl
and
cwtl
cli
adc
sub
les
ret
dec
jle
divb
sti
scas
adc
cwtl
gs
stos
mov
imulb
jle
out
pusha
cli
rol
orb
pusha
adc
sub
pop
mov
das
inc
mov
repnz
cmc
dec
in
rcrl
jmp
pop
rorb
adc
out
add
push
lock
popa
jo
pop
rcrb
into
dec
fidivrl
pop
pop
repz
mov
mov
push
jns
jo
shlb
shlb
ds
and
sub
cld
jecxz
ret
pop
xlat
lret
mov
bound
xchg
or
jl
in
mov
fldcw
cmp
push
jns
fcoms
bound
add
push
or
ljmp
lahf
testl
lcall
add
out
fnstsw
setns
mov
outsl
les
dec
push
pop
call
push
dec
loope
je
hlt
cmp
lret
pop
rcrb
pop
mov
movsl
pop
pop
loopne
push
adc
pop
inc
mov
push
or
shll
pop
sub
mov
das
insb
cmp
addr16
xchg
mov
push
imull
push
movsb
add
push
aas
jge
imul
jp
inc
in
xor
mov
dec
shrb
lahf
sbb
pop
addr16
jge
push
xchg
repz
fistpll
cli
jnp
sbb
cmp
loopne
push
gs
out
sub
jl
xchg
xor
xor
lock
movb
xchg
ficoml
adc
mov
fbstp
clc
rolb
mov
jno
dec
xchg
xor
lret
sbb
mov
add
ret
pop
mov
xchg
std
jnp
int3
pusha
rcll
lock
mov
les
jmp
cli
push
jl
sbb
das
rcll
dec
lahf
ret
leave
loop
push
rcr
jno
sub
sti
jbe
repz
mov
dec
stos
push
call
mov
enter
lock
clc
jp
popa
out
mov
jp
sub
mov
mov
mov
jbe
movsl
inc
inc
xchg
mov
sub
inc
cmp
jl
jnp
movsb
xchg
fwait
daa
xor
dec
and
cld
adc
ss
cltd
mov
aaa
jnp
repnz
test
out
inc
int
rcrb
pusha
xchg
aaa
mov
adc
insl
jmp
sub
add
test
push
and
mov
pop
mov
repnz
sahf
mov
sub
adc
push
test
adc
je
dec
and
cmp
aaa
icebp
nop
je
pop
add
xchg
fisttpl
push
jb
xchg
or
mov
xor
mov
cmp
inc
adc
mov
cmpb
mov
nop
jmp
dec
scas
lahf
sahf
xor
dec
push
xchg
mov
dec
arpl
mov
in
aaa
push
mov
xor
lret
pop
scas
stos
aam
jns
test
insb
js
push
call
shrb
outsl
popa
add
lds
mov
aas
mov
data16
add
mov
sub
rcll
rclb
comiss
inc
scas
cmpb
jge
cmp
lahf
mov
mov
sbb
adc
xor
loope
sarl
movsb
pop
cmp
ds
lea
and
xchg
cmp
xor
dec
pop
pop
add
adc
cli
jb
rolb
push
push
loope
int3
cli
add
ret
push
xchg
jb
imul
mov
leave
adc
addr16
fcoml
or
repnz
outsl
xor
iret
lds
pop
es
loop
aaa
test
pop
lahf
cmpsl
rcll
sub
mov
jg
or
pop
or
fldcw
nop
mov
and
pop
int3
stc
mov
mov
jb
inc
cwtl
shrl
sub
ja
dec
leave
outsl
xchg
xchg
subl
ljmp
or
je
inc
sbbb
cltd
cltd
inc
push
mov
sub
ret
push
nop
sbb
idivb
dec
pop
std
out
lret
jbe
add
pop
xchg
in
cltd
add
test
aaa
pop
or
inc
aad
mov
jmp
lcall
loop
mov
loop
inc
mov
sbb
test
imul
add
mov
aad
clc
push
out
or
sarb
popa
jge
in
xchg
stc
or
lods
jnp
push
lods
cwtl
or
inc
arpl
dec
test
nop
lds
jns
lret
lahf
test
xchg
jmp
rcll
mov
sub
dec
jge
mov
aam
jns
out
mov
xor
in
into
pop
insl
aad
push
flds
inc
cli
in
int
mov
mov
out
rorl
mov
loope
mov
fcoml
scas
xchg
insb
inc
lods
sbb
imul
adc
mov
or
mov
xchg
jb
cmpsb
xchg
das
scas
add
andl
std
dec
pop
outsb
cld
mov
sbb
adc
repz
jno
je
cltd
out
orb
jp
or
cmc
cld
int
test
clc
jbe
lds
mov
xor
dec
mov
sub
pop
cmp
or
push
loop
repnz
scas
pop
loope
mov
inc
push
imul
fcompl
es
xor
inc
pop
cmp
dec
push
and
sub
jno
adc
sub
ss
jno
les
data16
cwtl
cmpsb
dec
push
pop
repnz
jecxz
dec
arpl
sti
push
or
out
lds
mov
add
and
dec
repz
into
dec
andb
or
jle
pop
in
out
daa
daa
jmp
sbb
cmc
add
pop
push
mul
adc
sbb
shrb
or
mov
push
mov
scas
imul
je
jbe
cs
fidivrs
popf
inc
les
push
shll
cmc
dec
inc
sub
lret
sbb
sub
pop
mov
xchg
loop
rcrl
xchg
dec
adc
mov
mov
mov
or
push
fst
in
cs
gs
and
inc
adc
jle
iret
mov
int3
jmp
sbb
jle
pop
push
push
xchg
cmc
cs
mov
cmc
jne
sbb
and
jp
pusha
cmpsl
jl
jae
not
aam
ja
fdivrs
sub
daa
call
mov
popf
pop
pop
mov
shrl
adc
or
mov
dec
insb
dec
imul
call
or
aas
xchg
push
sbb
dec
jns
cld
sub
dec
dec
bound
cwtl
mov
dec
movsl
add
jb
fdivrl
xchg
jg
popf
and
mov
das
gs
inc
out
ret
dec
icebp
popa
in
xor
dec
jbe
mov
mov
stos
clc
and
imul
add
mov
insl
push
je
sbb
addb
xor
mov
dec
push
ss
dec
int
ja
jmp
cmpsb
lea
movsl
cltd
out
jecxz
scas
movsl
cld
and
imul
pop
add
mov
mov
mov
bound
or
jb
or
adc
cmp
dec
or
xor
test
push
test
xchg
jnp
stc
cmc
int
xchg
and
sarl
pop
addr16
cld
pushf
in
test
mov
in
jb
stc
lods
adc
ss
lret
stos
out
push
push
mov
xchg
push
in
fmull
roll
stos
shll
adc
mov
leave
and
insb
mov
dec
mov
xor
mov
xchg
push
jl
fisubrl
mov
jbe
lret
fidivrl
jns
rep
inc
xchg
es
add
mov
arpl
mov
inc
cmp
jp
xor
xor
imul
je
sbb
cmp
pushl
lcall
stos
outsb
int3
cmpsl
std
inc
and
xor
inc
mov
jbe
push
jno,pt
jle
and
fisubrs
rcr
out
ror
push
xor
cli
xor
clc
rcrl
xchg
test
in
inc
test
mov
xchg
loope
xor
popf
lock
sbb
cmp
adc
bnd
call
aas
cmpsb
inc
clc
dec
lds
inc
addb
lds
sbb
dec
jl
leave
and
mov
cmp
mov
xor
fcompl
pop
sbb
movsl
sbb
push
jl
roll
mov
bound
in
jg
jno
movsb
xor
sub
movsb
cltd
xchg
pop
xlat
stos
out
mov
and
and
and
and
enter
stos
ss
and
xchg
es
outsl
jns
cld
imul
inc
arpl
daa
aaa
and
and
cltd
fsubrs
mov
nop
cmpsl
icebp
jle
ret
jge
outsl
testb
mov
cmp
movsb
and
push
or
movsl
pop
loop
insb
scas
outsb
das
lret
xchg
out
pushf
adc
dec
cmp
and
push
cmpsl
inc
aad
jl
das
rolb
fs
push
bound
scas
loop
sbb
fstpt
popl
imul
jnp
inc
cli
imul
cmpb
add
xchg
movsb
iret
jl
jo
cmp
subb
dec
xor
sub
xchg
fidivrs
pop
out
xor
stos
adc
pusha
movsl
or
pop
enter
mov
add
imul
cmpsl
sub
lods
dec
js
dec
add
mov
jb
hlt
inc
push
sub
adc
fdiv
in
cmp
and
test
aaa
cmpsl
lea
push
sub
mov
add
jb
cmp
call
bound
push
dec
lock
call
cmp
iret
imul
out
dec
cld
mov
sarl
jg
les
shl
adc
les
into
cmp
popa
mov
push
shrl
icebp
fmuls
and
xchg
mov
push
push
popa
shrl
pop
cs
xor
les
pop
cwtl
and
add
lret
in
add
scas
inc
testb
leave
fwait
and
or
xchg
dec
or
inc
inc
or
sarb
dec
loope
repz
cmp
sbb
sbb
or
gs
pop
xor
test
xchg
mov
cli
loopne
test
je
sub
loop
xlat
mov
cwtl
je
cmp
mov
fdivrl
fiaddl
dec
inc
loopne
fisttpl
xchg
test
insb
into
shll
stos
and
stos
pop
cmp
jmp
std
jno
mov
ds
ror
rorb
adc
pop
pusha
lcall
jle
cltd
test
sub
mov
scas
lods
push
loop
scas
mov
sarl
rclb
repnz
out
and
and
inc
adc
jmp
push
and
xchg
fwait
dec
inc
pop
cmp
insb
push
ret
je
fcmovnbe
aas
cltd
cmp
or
lods
outsl
mov
xchg
pop
sbb
push
fwait
imul
xor
incl
jmp
or
stos
addl
fidivrs
sbb
or
mov
and
cs
adc
cmpsl
lds
loope
imulb
std
sbb
push
jo
in
rorb
and
ljmp
cltd
mov
xchg
dec
and
andl
int
cmp
dec
dec
or
pop
inc
popa
orl
mov
fistl
ss
mov
daa
outsl
fs
test
pop
add
fwait
aad
cmp
loop
dec
inc
sub
loopne
aam
test
add
dec
rcrb
dec
test
sahf
sbb
jl
pop
aas
dec
push
stos
adc
mov
dec
mov
lea
push
push
in
hlt
outsl
sub
jnp
xchg
mov
int
push
imul
repnz
lret
xchg
mov
inc
add
xor
mulb
sbb
jg
pop
arpl
jecxz,pn
std
mov
xchg
lods
daa
mov
lods
pusha
and
xchg
add
pop
int3
lds
and
idivl
out
ja
mov
xchg
xchg
pop
popf
pusha
xor
push
push
push
cmp
cmp
push
pop
xor
rol
push
test
jmp
adc
adc
jge
ds
pop
cwtl
sar
repnz
or
aam
sahf
adc
bnd
adc
ja
mov
loope
or
test
icebp
cli
jnp
daa
stc
ljmp
push
test
enter
push
mov
dec
jae
and
mov
adc
stc
ds
int
mov
decb
pop
pop
add
adc
roll
lods
bswap
jp
gs
xchg
sti
mov
jns
xchg
adc
rorb
adc
rorl
idivb
sbb
shr
movsl
xlat
mov
aad
add
mov
mov
sub
jg
xchg
ja
popf
and
jmp
jecxz
inc
sbb
outsl
lea
fs
inc
add
push
sbb
and
fisubrl
cmc
pusha
int
jnp
cltd
cmp
xlat
lods
hlt
xchg
sub
xlat
add
inc
lret
stc
loope
icebp
jns
jmp
out
out
je
dec
mov
das
imulb
ret
ret
std
jno
aam
adc
imul
mov
xlat
movsb
sub
mov
sbbl
push
repz
and
xor
sub
mov
xor
lods
call
inc
leave
jg
int3
cmp
out
jmp
sarl
outsb
sbb
inc
das
das
mov
jg
and
pop
adc
mov
pop
sahf
aam
cmc
pusha
scas
mov
adc
xchg
pop
rorl
imul
mov
in
movsb
lods
dec
std
adc
iret
xor
cmc
and
lea
je
mov
js
test
test
and
rorb
sbbb
mov
add
pop
inc
insl
ds
dec
pop
xlat
inc
fsubp
imul
push
mov
mov
sub
aad
xorb
out
insl
xor
lret
ja
ss
sbb
dec
lock
or
imul
mov
out
pop
inc
add
lods
fwait
pop
rcrl
in
inc
shll
mov
mov
mov
jns
adc
cld
jecxz
push
ret
movsb
pop
leave
into
aas
iret
unpcklps
push
mull
push
xchg
adc
add
xchg
push
insb
mov
pop
fdivl
sub
xchg
adc
icebp
inc
into
daa
or
inc
js
pop
loope
dec
mov
mov
jnp
mov
jnp
loopne
xor
hlt
and
movsl
dec
stos
nop
push
iret
in
pushf
xor
ja
xlat
and
sub
adcb
push
jle
sbb
bound
xor
aas
enter
cli
or
fsubs
cmp
inc
pop
dec
mov
jle
cmp
les
aad
dec
push
movsl
insb
dec
sub
movsl
push
sub
jae
adc
push
test
sub
xor
push
icebp
mov
fwait
stos
fs
xchg
mov
xor
inc
pop
cmp
mov
push
or
add
jmp
xchg
add
xor
je
stc
push
dec
mov
add
shl
jge
and
imul
mov
sub
add
jno
fcoml
imul
add
ret
je
push
mov
add
add
in
shlb
fmuls
in
rorl
inc
cmp
test
lods
mov
inc
mov
and
dec
add
cmp
push
lods
and
adc
xlat
nop
hlt
mov
ljmp
rcll
rol
and
fs
push
repnz
test
push
fs
ficoms
mov
iret
sarl
mov
and
jns
lret
inc
xor
setle
mov
ds
or
mov
dec
xchg
xor
xchg
mov
inc
mov
dec
adc
loope
add
and
pop
test
push
sbb
push
push
mov
in
cmp
adc
xchg
adc
test
mov
imul
add
sbb
cltd
fcmove
jl
mov
inc
loope
jge
mov
ja
cmp
sub
xor
pushf
es
adc
or
push
aad
mov
stos
repz
das
sbb
dec
inc
por
sarb
icebp
out
lret
cmp
push
cmp
in
dec
sahf
ljmp
pop
sarl
outsb
push
ret
xorl
shrb
pop
scas
shlb
push
sub
scas
ret
xor
dec
jg
cli
ljmp
insl
rcrl
sbb
insl
cmpsl
cmp
scas
ss
js
mov
fisubs
sbb
outsl
pop
daa
xbegin
subb
popf
movsb
outsb
mov
mov
imul
sbb
push
pop
aas
sub
cmpsl
or
xor
xchg
nop
adc
inc
leave
sbb
gs
call
xchg
push
cwtl
ds
xor
sbb
push
cmp
mov
xor
popa
and
lods
loope
test
out
cmp
pop
adc
loop
mov
mov
dec
test
sbb
sahf
mov
inc
push
sbb
popa
repnz
adc
imul
jle
xchg
dec
jmp
gs
ret
pop
adc
mov
dec
or
jns
sbb
andl
inc
aas
mov
imul
jo
fistpll
sbb
cmp
xor
dec
rclb
addl
daa
daa
dec
sbb
pop
rcl
sbb
and
jnp
fcompl
mov
jne
dec
fldcw
sbb
jle
mov
popf
cs
outsb
jno
fdivr
fs
loopne
mov
cmpsb
test
xor
aaa
repnz
sbb
xor
loop
jg
pop
lods
pop
fnstenv
orb
pop
jo
lea
fisubrs
emms
jg
bound
enter
add
sub
add
test
mov
inc
jb
or
stos
popa
lods
movsl
dec
fsubrs
xchg
xacquire
mov
adc
out
mov
rorl
cmpsb
cmp
or
lods
int3
mov
popf
ret
or
cs
jle
movsb
inc
jno
push
pop
imull
jl
addr16
cmpsl
sti
sbb
mov
add
pop
adc
popa
xor
pop
ds
push
test
cmp
jo
test
inc
insl
dec
or
push
icebp
xchg
out
xchg
jge
mov
inc
pop
jnp
loope
outsl
push
loop
dec
cmp
jns
lods
pop
or
hlt
and
and
cmp
aad
adc
mov
clc
aam
jns
mov
out
test
js
lcall
jb
dec
add
jno
lods
cltd
out
popa
repz
inc
and
lret
xchg
sbb
mov
sbb
shr
mov
les
cmp
mov
bound
jb
std
imul
adc
mov
sti
sub
mov
adc
pop
mov
sbb
xor
call
xlat
adc
je
pop
jmp
cld
repz
jg
mov
mov
dec
sub
sub
xchg
push
and
jo
or
ljmp
test
jmp
pop
pusha
rorl
and
mov
jle
sub
cmp
sub
rcll
js
mov
push
insl
mov
imul
cmc
cmp
pop
push
dec
dec
shl
loopne
cmp
aas
aaa
mov
pop
cmp
xor
shl
cld
arpl
add
and
hlt
mov
xchg
mov
jl
sti
sahf
daa
dec
lods
xor
imul
pop
jecxz
pop
lods
andl
sub
mov
aam
inc
mov
orl
lds
sbb
jmp
sbb
xor
push
test
es
aas
fildll
dec
rcl
inc
cmp
add
test
outsl
xchg
adc
mov
xor
adc
lahf
inc
and
sub
sti
loopne
and
dec
fnstenv
cmpsb
stos
push
mov
pushf
fiadds
dec
mov
mov
in
sbb
jo
mov
inc
jp
leave
fisttpll
mov
xorb
xchg
and
loop
std
ljmp
sbb
imul
mov
dec
daa
sbb
imul
movmskps
ljmp
imull
test
aam
dec
and
mov
aaa
or
dec
mov
jbe
test
xchg
pop
mov
ret
sbb
pop
cmc
lea
add
pop
mov
cmpsb
cld
jg
in
cli
lea
lock
xor
adc
cmp
sub
pop
pop
jo
iret
jle
bound
lods
sub
frstor
push
jns
shrb
cmp
cmp
add
inc
pop
iret
dec
mov
push
jmp
inc
aad
repz
leave
mov
mov
jno
push
dec
in
dec
ss
dec
xor
add
and
add
adc
inc
jns
adc
ljmp
and
dec
lret
negl
xchg
and
outsb
sub
mov
sbb
aad
xor
ljmp
fdivs
adc
cli
xchg
dec
arpl
and
in
pop
fstl
iret
push
sbb
inc
shrb
mov
xor
pop
loope
popaw
mov
cmpsb
sbb
mov
sub
mov
xor
imul
adc
fildl
sub
sbb
pop
xchg
jnp
lock
push
cld
lcall
stc
xchg
xchg
nop
clc
lahf
pushf
cmpsb
xor
inc
ljmp
mov
cmpsl
insb
or
and
fwait
jp
insl
push
xor
std
test
rorb
mov
loopne
mov
cmp
fadd
je
imul
jns
das
stc
jp
xlat
pop
in
mov
inc
push
or
fsubs
pop
and
mov
bound
mov
repnz
rcrl
jns
pop
and
movsl
cmpsl
xchg
xchg
cwtl
adc
and
mov
rolb
movsl
push
aas
mov
jnp
aaa
mov
xor
sub
lret
jne
jp
repz
into
test
mov
sub
and
add
adc
jl
and
push
xchg
lcall
aaa
das
outsl
popf
fwait
pop
push
fadds
filds
fisubrl
leave
mov
inc
shlb
aaa
cmp
pop
push
and
cs
call
test
mov
add
fiadds
lret
in
rcrl
clc
xchg
jo,pt
outsb
mov
cwtl
mov
inc
mov
dec
push
ss
je
mov
lds
in
cmpl
push
shl
fucomi
dec
aam
mov
inc
xchg
pusha
data16
sub
imulb
cmp
lret
dec
pop
imul
faddl
lds
mov
push
jp
pop
mov
xchg
fdivs
rcrb
sub
xbegin
mov
ss
rol
xor
push
adc
icebp
mov
or
sbb
cmp
sti
hlt
lahf
stos
mov
fmuls
adc
push
daa
mov
xchg
dec
repnz
imul
insl
clc
inc
and
jbe
ljmp
inc
leave
fcompl
js
sarb
jne
out
push
ret
daa
cmp
testb
dec
leave
arpl
out
stc
and
mov
shrb
scas
shll
push
jmp
cwtl
adc
shll
push
ret
pushf
and
ret
jecxz
and
out
fnstenv
push
es
cmp
in
mull
fistps
outsb
mov
jo
incl
test
iret
int3
mov
adc
push
daa
xchg
xchg
mov
and
jo
mov
or
jg
inc
outsl
out
xchg
es
adc
mov
lahf
dec
iret
je
nop
loopne
jge,pn
adc
xor
jae
out
decl
aam
xchg
ss
mov
stos
jle
into
lahf
inc
mov
cmp
lods
aam
xor
ret
xor
int
xor
inc
xchg
push
jbe
sahf
xor
cmp
in
push
lods
cmp
repnz
outsb
aam
jecxz
or
icebp
aam
sbb
jmp
pop
adc
imul
push
std
int
dec
idiv
add
dec
icebp
cmp
cmp
je
cs
xchg
sub
mov
sbb
pop
icebp
dec
sbb
addb
mov
arpl
sub
dec
mov
stos
test
test
pop
xchg
or
mov
inc
jge
aas
sbb
dec
or
bound
sbb
jmp
push
icebp
imul
push
jg
sti
ja
cmp
ss
pushf
fwait
mov
lret
and
in
lea
repnz
orb
out
andl
or
dec
lret
rcrb
jg
out
iret
int
jle
scas
andb
fdivr
fists
push
xchg
or
pop
xchg
hlt
add
jmp
ficompl
shl
fwait
std
cmp
flds
cmpsb
push
jmp
push
sbb
cwtl
cmp
sub
dec
fcomi
add
test
jae
int
and
cld
add
pop
repz
inc
cmp
sub
dec
or
xchg
and
push
fidivl
pop
push
jecxz
loopne
call
addr16
push
out
and
out
out
inc
mov
outsb
xchg
and
push
sub
cmpsl
nop
bnd
shll
push
lock
cmpsb
cld
and
lods
sti
ja
int
lock
and
sub
sbb
push
jno
xchg
ret
int
jo
inc
mov
int3
push
push
mov
cwtl
shll
push
inc
sar
ret
stos
cmp
lods
mov
loop
aam
aas
mov
out
insb
scas
sub
dec
repz
pop
sbb
dec
scas
xchg
mov
add
popf
pmulhw
insb
xor
sub
dec
ljmp
call
idivb
es
add
into
xchg
stos
insl
and
nop
jp
out
dec
in
xchg
xchg
mov
sub
and
pop
mov
in
insb
test
rcrb
xchg
inc
in
iret
je
test
pop
cmp
mov
pushf
mov
jge
push
mov
jns
or
mov
mov
push
pop
dec
je
mov
fldenv
mov
dec
and
xchg
outsb
pop
and
add
mov
js
cltd
imul
mov
out
nop
lods
mov
mov
pop
into
daa
shll
fmull
adc
jo
aam
fnsave
mov
jo
cmp
mov
cmp
mov
xlat
mov
xor
ds
xchg
out
cmp
cmp
stc
jmp
xchg
or
pop
mov
and
ret
or
xchg
fs
cmp
adc
and
sub
xchg
adcb
adc
es
mov
xchg
inc
int
sbb
cli
inc
sti
mov
push
push
movsl
subl
sti
xchg
mov
or
dec
mov
cmc
aam
in
sbb
mov
cmp
clc
jo
add
mov
int3
incl
mov
cmp
daa
xchg
push
or
sbbb
rcl
mov
je
mov
inc
outsb
jbe
lock
je
lock
mov
add
outsl
decb
in
mov
cmp
mov
jle
shl
arpl
xor
dec
mov
cmc
lds
pop
inc
inc
dec
xor
cmp
xchg
popa
push
mov
insl
inc
neg
push
fwait
rorb
mov
adc
cmp
scas
mov
jns
sbb
repz
popfw
lods
sub
movsl
daa
sub
xor
test
ret
mov
dec
mov
and
pusha
adc
lea
mov
mov
cmpsb
fcmovnb
in
mov
mov
xor
push
leave
repz
loopne
push
xchg
dec
test
out
out
mov
mov
cmp
aaa
stos
pop
cmp
adc
push
fs
cmp
int3
sahf
clc
sahf
cmc
add
mov
sub
and
mov
adc
icebp
and
cmp
lcall
int3
mov
mov
movsl
sub
loope
imul
in
mov
inc
out
aas
int
mov
leave
inc
adc
jle
add
mov
clc
sarl
push
xchg
mov
pop
push
or
xlat
les
or
icebp
xor
sub
add
and
and
pop
cltd
push
popa
in
push
stos
adc
nop
enter
fnstcw
mov
aaa
sahf
cmp
test
je
lret
in
into
leave
push
mov
inc
fimuls
addr16
call
and
cmp
je
cmp
fildll
xorb
addr16
fcomps
repnz
cli
cwtl
sub
xlat
pop
cmp
and
mov
jns
add
loope
ds
idiv
mov
jmp
js
cld
push
sub
in
inc
fcompl
adc
mov
aam
inc
mov
jno
test
ljmp
sbb
add
insl
cld
xor
cwtl
add
ss
or
pop
cmp
xor
stc
fwait
xchg
jnp
mov
push
in
lea
jo
add
lcall
mov
inc
sub
sbb
data16
push
sbb
aad
xchg
and
sahf
mov
or
sbb
negb
stos
int3
inc
ret
mov
movsl
stos
clc
rcl
push
add
xchg
mov
cli
dec
test
jp
inc
xor
push
xchg
mov
mov
in
mov
fldt
sub
lret
in
xor
xchg
jb
imul
sbb
dec
ret
cmc
and
insl
or
push
mov
cwtl
lds
mov
mov
dec
adc
in
jle
sbb
xor
jo
lret
jmp
mov
mov
in
fisubrs
js
add
sarl
dec
shrl
xor
out
xchg
xor
xchg
pop
pusha
mov
or
incb
mov
xor
arpl
cli
mov
mov
jmp
lahf
push
push
or
mov
mov
es
xchg
scas
and
mov
daa
jle
pop
cs
sarl
add
jae
push
dec
cwtl
fnsave
daa
jg
dec
and
mov
movsb
xchg
sbb
sbbb
jp
pop
addb
xor
imul
cmpsb
pop
mov
and
mov
testl
sub
mov
sbb
cltd
mov
sahf
loopne
cmc
sub
inc
or
leave
xchg
aad
jne
movsb
jge
jmp
mov
jle
aam
iret
mov
loope
mov
and
pushf
and
dec
mov
xchg
rolb
clc
sub
das
adc
adc
jmp
mov
rcrl
dec
mov
or
sub
and
mov
jns
mov
rcll
pop
into
test
in
cmovg
and
push
mov
or
add
xorl
std
xor
jge
sbb
or
sbbb
aam
cmp
test
bound
and
and
stos
or
scas
loop
pop
push
xor
int
lods
repnz
add
xchg
jmp
mov
push
jp
cmp
gs
mov
mov
add
mov
push
scas
fmuls
mov
movsb
call
push
gs
shl
fcoms
mov
call
mov
lcall
pop
xchg
xchg
mov
sbb
in
push
mov
loop
out
pusha
sub
clc
sti
jo
inc
int3
cwtl
fstps
nop
movsl
nop
push
pop
fldcw
jne
and
frndint
xchg
mov
fisubrl
mov
or
lock
mov
pop
push
call
jo
push
cmp
pop
test
cmp
jno
pop
daa
mov
jmp
in
fsubrs
scas
add
scas
adc
orb
pop
outsl
in
and
popf
xchg
bound
pop
or
insl
test
pop
push
xchg
popf
sub
push
jbe
mov
push
add
gs
jg
pusha
pop
mov
ja
add
sub
fdivrs
cmc
xor
pop
pop
shrb
mov
loop
je
fsubrs
stc
fiadds
shlb
push
repnz
push
xor
pop
icebp
cmc
cmp
addr16
ret
xchg
test
repz
cmp
add
out
les
movsb
dec
pop
out
movsb
mov
cwtl
mov
sbb
insb
in
lods
in
push
scas
inc
std
sti
and
ds
inc
dec
mov
sub
cmp
add
push
fistl
ret
xchg
idivl
jg
int
jo
mov
mov
xchg
notb
cmpsl
cltd
and
sbb
xor
cmp
pop
jecxz
add
dec
cmp
js
jae
ret
add
push
add
sub
fdivrs
dec
or
and
cmpsl
add
mov
or
sti
imul
mull
loope
xor
sahf
sub
mov
aam
push
cli
inc
cmc
cmp
lods
enter
fidivrl
int3
test
add
xchg
mov
jbe
adcb
xchg
sbb
int3
jl
hlt
xor
xor
xchg
lcall
fldcw
xlat
enter
push
faddl
pop
jae
paddq
inc
and
add
sub
lret
shll
jb
pop
xchg
and
sub
mov
push
mov
jecxz
push
lock
divb
push
push
bound
add
jmp
push
mov
jg
fcmovu
pop
xor
add
or
dec
pushf
cltd
push
outsl
dec
inc
iret
mov
xchg
sbb
jmp
push
mov
into
lods
ret
icebp
int3
addr16
cmpsl
xchg
and
sbb
bound
stos
test
adc
fmuls
jg
inc
psllq
sbb
push
mov
bound
or
push
and
mov
xlat
fbstp
xchg
nop
jbe
and
jl
xchg
jo
dec
dec
pop
jno
insb
shl
and
out
or
test
lods
mov
xchg
out
push
rep
aas
pop
and
sarb
jae
cmp
ja
push
cli
mov
les
lahf
int
xchg
jbe
xor
sbb
dec
sub
xchg
arpl
jo
out
xchg
lods
testb
out
iret
stos
and
push
ds
inc
pop
sub
scas
cmpsl
dec
mov
xor
out
stc
pop
pusha
add
sub
roll
jle
sbb
ficoms
cmp
push
hlt
inc
add
or
insl
xchg
in
pop
lcall
push
dec
pop
cmp
jmp
out
clc
mov
jo
cmp
outsl
call
test
insb
nop
jno
in
mov
push
mov
dec
mov
rcr
jge
mov
push
lds
cmp
aaa
mov
iret
push
stos
shlb
aas
mov
out
aaa
in
or
xlat
pop
stos
cld
ret
fwait
add
add
sub
push
fistpll
xor
pop
mov
ds
xchg
xor
dec
test
js
loop
mov
mov
scas
pop
xchg
jg
jecxz
jae
icebp
and
mov
hlt
sub
fstpt
cmp
stc
fsubrs
xor
fistps
sti
push
int3
push
xchg
out
sbb
push
pusha
adc
push
xchg
sbb
jle
xor
xchg
mov
call
mov
or
imul
adc
cmc
jne
and
pop
push
and
cmpsl
inc
adc
xchg
in
addb
jg
cmpb
pop
shll
push
inc
jno
movsl
dec
int3
dec
mov
dec
dec
and
jle
xchg
mov
pop
mov
out
int3
int3
cwtl
push
add
cmpsl
leave
push
push
pop
lahf
clc
xlat
dec
cmp
sbb
mov
test
mov
push
stos
lods
bound
popl
inc
push
fstp
sub
mov
mov
push
cld
repz
mov
dec
pop
mov
call
pop
icebp
lret
mov
or
in
mov
clc
pop
adc
xchg
cmc
jae
cld
and
inc
loope
inc
xchg
push
lcall
cli
dec
stos
stos
mov
rolb
cs
inc
xchg
leave
into
test
sub
xchg
inc
idivb
add
fiadds
cmp
daa
lea
cmp
dec
sbb
push
mov
dec
les
sbbb
mov
test
int
mov
push
mov
sub
mov
push
pushw
popa
ret
push
and
pushf
pop
insl
xchg
mov
sbb
cmpsl
out
xchg
outsb
icebp
divb
cmp
cmp
sarb
mov
addr16
mov
shlb
mov
push
pop
loopne
jge
hlt
sbb
mov
mov
pusha
push
dec
or
insl
adc
cmc
addr16
cwtl
mov
add
outsb
xchg
mov
stc
mov
or
cmp
les
push
push
outsb
in
cmp
or
xor
lret
frstor
gs
add
push
hlt
out
jl
cmp
pop
insl
cmp
mov
push
addr16
mulb
out
mov
cmp
pop
dec
es
add
orb
inc
mov
fnstcw
mov
mov
mov
jecxz
jmp
enter
or
sbb
lahf
add
jle
inc
add
out
mov
xlat
xor
in
xor
add
sub
fadds
cmp
mov
in
jmp
mov
pushl
imul
xor
aaa
jb
cmp
mov
lods
pop
or
fcoml
push
ret
icebp
add
add
mov
std
dec
cs
mov
dec
arpl
mov
or
xchg
jmp
jmp
mov
dec
mov
or
xlat
mov
cmpsb
mov
and
pop
and
testb
xor
inc
loope
test
and
fwait
out
mov
gs
out
orb
lcall
mov
jp
mov
xor
aam
fisubl
jnp
cmp
dec
imul
insb
mov
scas
push
movsb
loopne
sar
out
sub
ficoms
shlb
scas
pop
lods
dec
bswap
push
and
jp
mov
fildll
sub
fwait
xor
xor
nop
loopne
jle
imul
pusha
ret
cmp
jl
repz
in
icebp
insb
jbe
mov
sahf
sbbb
inc
imulb
sub
sbb
ja
jo
sarb
dec
gs
cmp
pop
or
jo
mov
mov
lods
iret
pextrw
ds
pop
ret
adc
dec
scas
aas
jb
mov
mov
inc
fcmovnu
jl
icebp
ja
dec
xor
pop
pop
outsb
es
ret
popf
popf
cli
leave
sub
jae
inc
imul
push
stos
mov
loop
daa
cmp
andl
out
dec
sub
jp
repz
mov
push
sub
mov
bound
jae
icebp
inc
ja
idivl
sbb
outsb
mov
aaa
cmpsl
mov
xchg
lahf
or
push
loopne
ljmp
dec
in
fwait
insb
les
push
fs
add
imul
icebp
xlat
jnp
in
out
push
dec
js
xor
jae
test
loopne
test
ja
loope
js
push
cmp
pop
daa
repnz
mov
mov
rorb
adcb
inc
in
ss
add
push
dec
or
push
or
mov
pop
scas
mov
sub
xchg
mov
into
nop
repz
fisttpl
mov
jno
fiadds
or
jb
xchg
movsb
jo
xlat
outsl
jae
jge
mov
ror
sahf
jmp
jnp
cmp
mov
xchg
push
out
sub
add
push
pop
push
stos
test
dec
dec
cli
ljmp
aam
imull
roll
pop
fldt
aaa
mov
popa
int
pop
jmp
jne
jmp
add
push
jnp
into
shr
cmc
or
cmpsb
leave
xor
ljmp
xor
and
inc
jp
addr16
push
mov
push
call
dec
mov
mov
add
jae
push
inc
out
sbb
call
add
sbbb
rcl
cwtl
pop
mov
sbb
loop
test
jbe
outsb
push
jne
xchg
adc
inc
into
pop
hlt
icebp
clc
pop
adc
push
loop
dec
imul
sub
mov
and
xor
add
xor
repz
into
pop
fsubrs
mov
hlt
loop
leave
xchg
xchg
sbb
xchg
out
ljmp
test
leave
jno
insb
divb
movsb
push
stos
mov
xor
js
lret
arpl
pop
push
jne
push
rolb
xchg
dec
jno
push
mov
outsl
lretw
pop
add
add
loope
arpl
sub
mov
ss
mov
sbb
jno
xchg
loope
cld
jnp
sti
sti
ja
or
xchg
lret
shll
add
shlb
movsl
or
dec
rcll
dec
jbe
or
sbb
jle
movsb
out
int3
sbb
adc
sbb
push
cmpsb
enter
pop
or
pop
lret
mov
les
cs
sbb
push
add
inc
daa
jns
std
fildll
cmp
push
divb
out
das
sbb
je
or
mov
xor
push
inc
push
inc
out
rolb
les
add
mov
aad
mov
adc
popf
and
mov
sbb
mov
or
ja
rolb
cmpsl
dec
lret
mov
mov
test
movsb
shr
inc
gs
cmp
pop
lock
lret
ret
mov
lods
les
mov
mov
dec
dec
adc
jbe
add
mov
xor
lds
aaa
std
push
push
test
aas
stc
cmpsl
movsb
out
mov
sbb
mov
test
sbb
aaa
popa
or
push
ficomps
xchg
mov
es
jae
aad
sub
fsubrs
sbbb
test
add
ljmp
leave
icebp
mov
daa
cld
or
mov
adc
adc
xlat
push
jbe
xor
hlt
push
mov
andl
push
push
stc
mov
div
bound
adcb
cs
jno
cmp
push
adc
rcrb
mov
dec
or
jmp
sub
imul
es
jge
push
mov
mov
out
mov
inc
mov
fwait
shrb
mov
rol
aam
fiaddl
imul
and
int
adc
dec
dec
rorb
fstpt
sti
add
cwtl
popa
inc
jecxz
js
jmp
dec
imul
adc
fbld
xchg
loopne
stos
add
scas
sub
ds
insb
pushf
loopne
mov
fisttpll
je
add
jg
mov
dec
cld
adc
jl
ds
or
mov
jmp
adc
and
aad
les
and
inc
xor
insb
icebp
mov
pop
pop
pop
sub
mov
not
push
dec
cmc
in
icebp
push
sbb
arpl
pop
sub
mov
mov
icebp
push
lahf
push
dec
pop
jmp
adcb
jbe
xchg
repnz
sub
cmpxchg
xchg
repz
mov
sbb
adc
lcall
push
insl
mov
push
ljmp
pop
xchg
daa
dec
lods
xchg
jmp
jo
adc
xor
pop
jp
xor
or
loop
sbb
lcall
stos
fs
icebp
aaa
imul
outsl
xchg
in
cmp
mov
call
add
nop
xor
fisttps
subl
dec
cmp
push
sbbb
dec
loope
sti
pop
sbb
enter
mov
dec
in
push
pop
or
xor
mov
fwait
sub
mov
mov
mov
inc
sub
jmp
add
outsb
std
mov
cmc
shll
stos
and
mov
bound
into
inc
mov
mov
adcl
sub
mov
push
push
fidivl
sub
jecxz
xchg
xor
jo
ss
add
in
add
inc
sbb
pop
repz
push
ja
or
mov
dec
xchg
loopne
or
lods
lcall
sahf
repz
adc
in
pop
dec
lcall
test
nop
mov
ret
enter
aam
aas
push
sti
mov
sub
gs
stos
movsb
mov
out
adc
adc
xlat
jae
jl
and
rol
into
iret
push
lods
or
popa
imul
adc
rcrb
adcb
pop
pop
mov
lret
jg
les
xchg
push
jns
rcrl
sub
imul
ja
mov
test
imul
popf
pop
and
icebp
ss
inc
in
int3
mov
add
flds
fwait
dec
clc
lock
mov
ds
cwtl
or
jle
int
inc
ds
call
inc
and
fs
into
inc
cltd
fs
mov
stos
sti
or
jmp
jnp
sub
adc
insb
dec
ficoms
adc
xor
js
subl
xchg
in
sbb
push
mull
scas
data16
rcrb
lcall
rorl
out
or
int3
fcoms
push
jo
xchg
inc
mov
clc
rorb
pop
pop
mov
lret
sbbb
pop
adc
jp
jecxz
mov
and
leave
jge
ret
stos
xor
jl
push
lock
mov
xor
and
aaa
es
data16
mov
repnz
xchg
inc
test
mov
sub
fildll
and
mov
jl
js
inc
outsb
pop
test
adc
sarb
in
cltd
rcr
cmp
pop
mov
jl
and
push
neg
enter
push
dec
push
nop
dec
and
fimull
insl
jg
mov
xchg
inc
pop
aam
stc
std
sbb
lahf
ret
js
or
pop
cmp
lret
jbe
aaa
push
iret
add
jg
out
push
xorl
mov
xor
mov
jbe
adc
or
call
clc
mov
shr
or
shrb
mov
dec
testl
mov
cmp
lock
mov
sti
scas
dec
pop
or
and
pavgw
ss
loop
inc
jmp
inc
js
sub
jae
pop
testb
sub
lret
cmpsl
add
popa
addr16
in
push
and
inc
inc
mov
jnp
fwait
cs
jne
mov
pop
bound
adc
cli
push
cmpl
std
dec
and
adc
insl
pushf
adc
push
ds
cmpsb
call
cmc
adc
test
mov
ja
push
dec
ljmp
inc
cli
pop
jg
xor
sub
add
ret
outsb
mov
fistpl
mov
mov
sbb
add
test
mov
lcall
inc
inc
pop
out
mov
sbb
inc
mov
inc
test
std
data16
push
adcb
in
dec
cld
jb
or
sub
gs
sbbl
aaa
push
cmp
ds
xor
xchg
lcall
or
rcll
mov
popf
in
rol
std
sbb
adc
push
mov
inc
xor
jae
mov
pop
test
mov
and
ret
add
pop
inc
subl
fucomp
mov
xchg
inc
jecxz
xchg
push
cmp
das
mov
pusha
popf
lcall
inc
inc
outsl
mov
pop
lods
cmpb
mov
lar
addr16
mov
cmpsb
mov
faddp
movb
mov
dec
inc
mov
sub
fnstenv
xchg
xchg
loopne
sub
xor
xchg
insb
icebp
out
cmp
scas
data16
and
dec
jnp
test
xchg
fcomi
push
and
dec
data16
test
mov
mov
xchg
xor
cmp
mov
adc
cmp
inc
or
jo
xor
and
out
dec
cmpsl
mov
aad
xchg
mov
sub
daa
push
cwtl
shrb
and
inc
dec
hlt
jnp
cmp
movsb
cmp
in
cmovp
cmc
rol
xchg
jne
add
xor
cmc
movsb
sbb
jp
daa
inc
inc
inc
mov
mov
daa
clc
dec
bound
add
test
scas
iret
jne
xor
popf
cwtl
and
into
test
aaa
cld
sahf
leave
cmp
aam
aam
stos
sbb
test
sub
mov
flds
out
and
out
sti
or
clc
mov
stos
test
clc
shll
mov
pushf
cwtl
imul
fwait
daa
mov
stos
mov
sbb
mov
inc
loop
mov
mov
rclb
jb
iret
imul
fxch
outsl
imul
daa
jo
dec
sub
cmp
and
add
push
test
fwait
std
fimull
loop
lret
jno
jmp
cmp
or
pop
repz
pop
movsb
xchg
movsb
mov
add
out
jnp
fistpl
aad
addr16
adc
iret
dec
insb
add
push
out
aaa
cmpsb
cld
insb
notb
jp
xchg
mov
mov
sbb
push
cmpsb
jno
push
xor
or
mov
mov
xchg
mov
mov
loopne
xor
add
sbb
xor
aaa
cmp
xchg
int
push
push
cmp
xor
push
enter
cmp
enter
pop
and
negb
push
mov
shll
subb
cmpsl
test
adc
daa
pop
sti
adc
cmp
rorb
dec
je
movsb
movsb
push
pop
mov
push
dec
pusha
add
jle
lds
mov
cli
out
inc
mov
inc
inc
loop
jge
push
cmp
popf
jo
jne
stos
mov
push
std
sub
inc
pop
scas
aaa
add
jle
adc
cmp
push
sub
inc
out
mov
lods
jg
mov
gs
pop
add
sub
sub
pop
stos
out
or
cli
jp
xor
rcll
out
iret
dec
xor
mov
or
into
scas
cmp
dec
into
jmp
hlt
add
loop
mov
pop
outsb
pop
adc
jmp
inc
leave
pop
mov
fimull
nop
xchg
mov
ja
push
add
xchg
aas
jns
out
jo
sub
cmp
and
lds
movsb
push
jns
xchg
movsl
jbe
cmp
mov
mov
adc
cmp
shrb
or
repnz
or
or
add
xchg
scas
mov
repnz
mov
push
lahf
mov
add
stos
test
call
loopne
testl
xor
xchg
in
fisttps
xor
jle
shll
add
mov
add
or
ds
xor
hlt
pusha
or
notb
ja
scas
push
test
jb
and
cmp
enter
mov
pop
mov
leave
mov
mov
fdivs
pop
adc
lods
xchg
int
mov
mov
sub
mov
xchg
cmpsb
and
test
pop
outsl
mov
dec
jp
adc
mov
mov
sub
jg
dec
push
xchg
push
pop
movsl
ret
sti
rclb
jae
sbb
fs
mov
imull
test
xchg
cmp
and
jnp
std
mov
call
mul
in
insl
popf
push
ja
stos
dec
inc
cmc
cmp
sub
stc
clc
mov
xchg
clc
inc
xchg
dec
les
stos
ja
orl
cmp
mov
cltd
ljmp
lods
arpl
push
xchg
inc
jne
int3
test
push
push
popl
lods
es
aad
pop
push
fwait
sub
xchg
leave
mov
or
mov
adc
sbb
push
not
aaa
adc
out
inc
imul
les
xor
or
jl
mov
adc
out
fidivrs
or
shrl
push
and
or
pop
int
daa
pop
cmp
pop
mov
dec
pop
imul
jbe
inc
and
add
jp
push
movsb
pop
inc
mov
xchg
fwait
insl
push
xor
xchg
xchg
outsb
dec
pop
xchg
outsb
inc
aad
push
jl
insb
lret
pop
aaa
cmp
add
xchg
cmp
adcl
clc
push
push
in
inc
jne
mov
in
addr16
jnp
push
in
iret
push
mov
inc
lret
adc
sub
mov
in
fldenv
sub
ljmp
loopne
cltd
jl
decl
and
sub
pop
xor
mov
imul
sahf
std
out
call
mov
push
mov
cmp
xor
pusha
adc
insb
mov
xor
sarb
stos
fdiv
or
sbb
leave
shlb
or
sub
mov
notb
jecxz
sbb
cltd
mov
fmuls
hlt
inc
testb
popa
xor
jg
cmp
loopne
and
or
cmpb
aam
lret
ja
daa
je
repnz
add
sti
in
sbb
push
add
and
inc
xor
dec
inc
js
shrb
fucomip
dec
das
popf
or
and
cmp
mov
xchg
mov
orl
sub
mov
push
push
dec
or
xor
push
test
push
iret
mov
sub
jl
push
repnz
xlat
adc
ss
out
adc
in
and
divl
mov
idivb
jae
mov
sarb
data16
ss
out
add
xchg
repz
mov
xchg
ficoms
adc
movsb
jp
jmp
rcrb
jo
mov
or
jo
lds
sbbb
enter
jne
jl
rcrb
pop
jo
add
imul
mov
or
gs
daa
in
pop
in
cmpsl
push
dec
dec
mov
sbb
adc
fsubrs
sbb
sarb
bound
inc
addr16
add
test
cmpsl
int3
jbe,pn
or
leave
lcall
lcall
lods
nop
mov
dec
nop
call
add
or
jno
loop
sbb
xor
fwait
cmp
push
sbb
imul
inc
fistl
je
pop
xchg
clc
fstps
rorb
push
pop
fsts
in
mov
inc
jecxz
mov
cmp
push
rcrl
mov
ret
cmp
cwtl
mov
inc
or
ficoms
cmp
enter
lock
icebp
pop
inc
pushf
xchg
test
lock
lods
cmp
scas
hlt
stc
push
jae
lret
inc
mov
sbbb
xor
push
fcmovb
mov
nop
test
int
test
ljmp
mov
loope
inc
cwtl
sbb
sti
das
sub
daa
jecxz
dec
mov
fbstp
insl
enter
mov
fisttpll
lretw
xchg
idivl
addl
call
stos
addr16
and
xor
xchg
pop
push
mov
inc
mov
insb
leave
movsb
sbb
cmpsb
incb
loop
push
mov
test
add
rolb
mov
pop
mov
mov
in
push
fistps
dec
jmp
insl
mov
sub
mov
sbbb
xchg
xchg
in
out
jge
popa
mov
xchg
and
ljmp
pop
ljmp
mov
jge
cmp
sub
dec
jnp
xchg
jno
lea
cmc
ss
mov
push
mov
ret
push
in
rorb
inc
jg
repz
cmp
xchg
aad
sbb
mul
or
xchg
mov
adc
jecxz
pop
pop
ljmp
jb
xchg
jns
sub
and
push
dec
jns
cmpsb
stc
mov
scas
cli
bound
mov
mov
es
rcrl
mov
mov
imul
mov
lea
mov
xor
push
bound
and
mov
mov
ficoms
inc
push
lods
pop
in
cltd
fs
sbb
mov
jnp
or
clc
scas
cs
fisttps
jle
jmp
pusha
mov
rclb
movl
mov
mov
dec
jb
sbbl
enter
ror
bound
cmc
dec
lsl
pop
push
movsl
enter
jbe
in
movsl
or
dec
jbe
mov
push
dec
fwait
andl
sbb
mov
jge
add
or
mov
fcom
test
mov
xchg
outsb
pop
notb
jl
scas
sti
pop
xchg
cmpb
mov
cbtw
das
jmp
xchg
int3
mov
push
fnsave
js
out
bound
je
cmpsl
mov
mov
xor
mov
lahf
aas
push
in
movsb
out
adc
jmp
cld
addl
jno
outsb
xor
mov
inc
inc
imul
jmp
xlat
dec
cmp
negb
sti
xor
inc
ja
add
and
lahf
enter
jne
adc
fildll
jae
or
xor
cmp
mov
push
xor
sar
sub
ja
mov
push
adc
sahf
sbb
push
adc
add
adc
addr16
push
and
imul
jge
daa
jno
xor
out
dec
ja
mov
or
insl
in
push
es
cwtl
jb
sbb
jp
xchg
add
mov
rorl
xor
xor
sti
ret
jge
mov
cmpsl
fdiv
fistpl
test
shr
inc
leave
inc
out
dec
xor
faddl
jg
xor
mov
aam
mov
sub
add
sarb
dec
mov
cltd
and
xchg
ficomps
pushf
repz
jbe,pt
data16
pop
cmp
sub
push
je
jno
idivl
push
mov
mov
movsb
add
dec
mov
add
add
xchg
push
ja
pcmpeqd
int
sub
or
mov
xbegin
xchg
mov
ds
std
mov
imul
mov
dec
sahf
fs
shrl
pop
pusha
mov
and
jge
jno
fildl
adc
ljmp
faddl
stos
sbb
in
shrb
add
cmp
test
jmp
call
fs
call
mov
sbb
push
in
dec
lods
in
imul
pop
push
cs
or
add
or
repnz
and
adc
xchg
movsl
mov
les
xor
incl
inc
test
sti
arpl
add
push
mov
mov
mov
ljmp
mov
int3
lock
iret
imul
jmp
pop
inc
pop
icebp
push
push
jecxz
sub
xchg
sbb
imul
hlt
loope
add
fwait
adc
in
cmp
iret
cmpsb
mov
loop
ret
push
inc
or
insl
sahf
dec
push
sbb
push
jp
mov
mov
cli
data16
orb
movsl
xor
mov
mov
pop
pop
cmp
imul
lods
testl
mov
dec
jbe
push
addl
cmp
iret
or
test
pop
sbb
or
inc
pop
ds
mov
lock
mov
out
mov
pop
mov
clc
add
ret
and
sarb
lds
sbb
nop
mov
stos
dec
inc
test
xor
inc
sub
mov
xchg
imul
xor
xor
mov
and
fdivl
pop
jbe
xor
es
push
xchg
cmp
pop
push
mov
jecxz
dec
stos
jg
jno
mov
or
int
aas
movsb
mov
pop
ret
rclb
adc
mov
jae
aaa
xor
cmp
test
cmpsb
clc
dec
ds
mov
subl
or
pusha
mov
sub
pop
dec
mov
mov
jp
xor
pop
in
incb
psubw
dec
ljmp
cltd
test
cwtl
mull
dec
sub
stc
scas
test
js
jae
push
pop
loope
cmp
ljmp
cwtl
into
jbe
imul
xchg
nop
cli
pusha
sub
sub
mov
pop
sbb
jns
pop
in
sub
xor
jbe
ficompl
sub
push
jb
adc
or
int
lcall
inc
adc
mov
mov
div
out
push
push
ficoml
push
imul
faddl
test
fidivrl
pop
imul
fs
pop
and
cmp
xchg
push
je
xor
fistpll
mov
xchg
jnp
pop
sub
lods
repnz
repz
cmc
repz
push
and
push
mov
jns
icebp
aas
jge
mov
inc
adc
ljmp
push
mov
rcrb
sub
push
cmc
dec
pusha
inc
sub
shll
mov
jecxz
add
outsb
xchg
pusha
xor
nop
push
jl
cmp
push
subl
repnz
sub
loopne
cmp
or
push
int
ds
nop
or
dec
lcall
and
outsb
xor
xor
cmc
sbb
jle
cmp
bound
xor
bsr
or
ja
xchg
mov
fs
xor
xchg
xor
sarl
sub
jbe
pushf
xor
vpslld
dec
pavgw
stos
clc
addr16
push
ret
repz
push
sbb
add
xchg
adcb
xchg
xchg
mov
add
iret
dec
insb
push
pop
fsts
rcll
add
mov
inc
cli
gs
xchg
push
push
cmpsl
add
hlt
mov
stc
sbb
push
incb
andl
jmp
test
push
and
mov
adc
icebp
rcll
mov
loopne
cmp
dec
int3
xor
imul
cli
sbb
imul
into
aad
or
push
adc
jbe
or
decl
jb
addl
sub
stc
cmp
pop
mov
mov
filds
pop
jbe
aad
mov
adc
pop
add
mov
test
jp
notl
rcrb
mov
push
test
pop
add
push
and
cmp
jno
add
sbb
out
add
inc
adc
ljmp
pop
es
cltd
xor
add
int
ja
hlt
aaa
push
bound
ds
pop
sbb
clc
push
call
nop
imul
xor
fwait
sbb
pop
mov
xlat
push
imul
adc
lods
sub
pusha
data16
jle
pop
or
in
insb
inc
js
jmp
stc
call
push
mov
sbb
scas
std
mov
or
lret
lock
stc
inc
rcll
or
fsubr
pushf
sub
mov
cmp
mov
adc
les
in
mov
mov
aas
mov
or
insl
jle
out
fstpl
mov
push
mulb
dec
loop
adc
inc
lds
dec
pop
push
jnp,pn
cmp
mov
mov
in
jne
loope
in
dec
nop
fstps
jp
adc
inc
cltd
fmuls
push
aaa
sub
push
mov
mov
aam
mov
jns
ja
mov
and
sahf
lahf
xor
andb
out
adc
jle
mov
inc
test
add
or
std
cld
adc
add
mov
add
aaa
cmc
mov
ljmp
jo
stc
pop
sbb
push
loop
movsl
je
cld
add
dec
rcrl
cmpsl
in
popa
push
and
cwtl
jns
insb
jg
lds
mov
cmpsb
mov
std
fists
cmp
test
ds
push
or
imul
jae
into
jno
pop
cmp
cmp
push
lret
lods
and
lcall
hlt
sbb
aad
inc
xchg
jecxz
outsb
add
in
shrb
sub
and
jnp
js
das
pop
cltd
inc
movsb
cmpsl
out
imul
cmpsb
dec
jmp
out
pop
or
std
inc
push
mov
repz
and
push
mov
test
or
xor
sub
xchg
pusha
push
inc
mov
xor
mov
ja
lret
push
and
movsb
insb
mov
inc
cmp
stos
cmp
pop
inc
mov
xor
es
and
and
mov
jp
das
jl
and
dec
mov
shll
mov
iret
hlt
jle
pop
adc
jp
popf
arpl
movl
ja
push
adc
in
cmc
data16
xchg
mov
mov
dec
jne
leave
push
pop
pop
push
jp
inc
cmpsb
pop
in
dec
stos
mov
pop
in
fisttpll
imul
push
add
testl
cmp
fdivl
pop
fwait
insl
mov
int
mov
jo
sarl
add
jmp
mov
xchg
lahf
pushf
adc
in
mov
mov
fnsave
adc
bound
sahf
cli
push
and
inc
add
add
inc
inc
pusha
insb
xchg
xchg
cmc
jmp
push
les
jle
mov
call
pop
jae
mov
fcomp
daa
nop
adc
adc
push
aaa
xchg
jnp
inc
fistps
cmp
es
jae
int3
fbstp
gs
popf
add
out
pop
adc
pusha
fildll
les
cmpsl
sub
sbb
or
adc
adc
adc
add
popf
leave
jno
inc
cmp
mov
push
jbe
scas
dec
inc
push
mov
scas
hlt
inc
cmp
mov
pushf
pslld
or
das
sub
leave
mov
xchg
and
jns
and
into
cmp
mov
sbb
xor
out
lods
aaa
add
add
movsb
inc
out
sub
imull
add
into
outsl
mov
imul
and
fdivrs
lods
scas
and
jle
jmp
pop
sahf
aam
xchg
xor
mov
fildl
hlt
sbb
inc
sbb
and
inc
sub
in
icebp
test
hlt
mov
fiadds
sub
mov
add
iret
cmp
movsb
rclb
rcrl
inc
push
fdivrs
aaa
or
sub
lds
and
xchg
add
dec
ret
vpshld
mov
rcll
xor
mov
cmc
mov
jecxz
out
fstl
enter
add
jmp
in
in
inc
mov
ds
push
outsb
imul
sub
xchg
inc
add
inc
pop
addl
arpl
stc
sub
mov
push
sub
mov
movsb
jl
xor
sub
mov
loope
in
mov
fwait
adc
jecxz
repnz
push
push
negb
sub
fiadds
sub
jle
jb
hlt
daa
pop
fwait
xor
aas
int
into
lahf
fs
sarb
jecxz
push
scas
aas
sub
xchg
mov
test
mov
mov
add
pop
lret
fiadds
and
and
push
cmp
scas
pmaxsw
or
cmpl
scas
or
push
aad
mov
xlat
imul
fimull
jg
jb
adc
call
enter
out
sbb
pop
call
adc
loop
add
sbbb
rolb
xchg
jg
jle
jg
mov
aad
push
ss
lods
aam
pusha
sbb
cmp
mov
pop
out
jl
test
cmp
and
cltd
clc
adc
xchg
aad
imul
xchg
in
test
push
push
ljmp
repz
outsb
inc
sbbl
xor
mov
dec
inc
mov
jle
push
subb
jmp
fsubrp
out
scas
mov
pop
fcmovb
sahf
push
out
in
int3
xchg
enter
loope
mov
push
aas
or
lcall
mov
mov
ds
jecxz
mov
call
bound
scas
dec
stc
aam
pop
ljmp
add
and
fsubrs
repnz
data16
fildl
cmp
sbb
loop
shl
adc
cmp
mov
sbb
dec
outsl
mov
and
in
cmp
enter
cmpsb
test
test
inc
mov
shl
mov
mov
ds
mov
lret
pop
cmp
inc
hlt
inc
jb
daa
fs
repz
inc
or
sti
pop
pop
movsl
cld
sbb
or
jmp
mov
jae
inc
mov
jns
ret
inc
cmp
ret
lcall
mov
add
scas
add
cwtl
clc
movsb
pop
push
lea
mov
ja
movsl
or
lret
repz
sti
jbe
je
loopne
cmp
enter
or
jecxz
in
push
pop
insl
push
jge
xchg
cmp
fdivrs
js
fsts
mov
lods
xor
add
js
push
and
inc
adc
loopne
adc
push
inc
sub
js
mov
int3
add
lahf
xchg
add
lock
mov
lods
int
ss
shlb
test
pop
sbb
add
mov
add
push
push
mov
mov
cmp
add
pop
in
stos
xchg
sbb
push
jecxz
addl
add
sub
loop
adc
leave
adc
mov
ljmp
fucomip
mov
jbe
test
xor
fbstp
addl
cs
imul
insl
pop
ret
scas
xor
inc
mov
jbe
int3
sub
xchg
mov
or
pop
daa
xor
inc
xchg
aaa
cmp
cmp
aam
pop
pushf
mov
jo
inc
ffreep
fldl
inc
movsb
adc
fistl
jmp
sub
push
inc
push
movsb
mov
leave
loope
cmc
ficompl
pop
cmc
adc
add
mov
dec
xlat
popf
cwtl
repz
fcomp
repnz
jge
mov
mov
stos
or
into
movsl
dec
repz
dec
sbb
cmpsb
outsb
xchg
jb
pop
or
xchg
outsb
mov
inc
aam
adc
jge
inc
subb
mov
push
sub
repz
aas
fldcw
lret
outsb
cmpsl
mov
xor
sbb
mov
notb
xchg
lcallw
sub
jp
adc
iret
inc
pop
xacquire
add
dec
add
push
mov
pop
loopne
jmp
mov
insl
inc
jle
incl
dec
jnp
cwtl
leave
imul
pop
xor
mov
adc
mov
push
data16
add
pop
nop
aas
jl
in
popa
aad
cltd
pop
ret
mov
nop
or
jmp
dec
xor
in
sub
pop
iret
xor
repz
dec
ja
fmuls
mov
rcrl
sbb
mov
loopne
iret
repz
pop
xchg
xor
sub
addr16
lcall
movsl
xchg
push
loopne
mov
xlat
sub
lds
cmpb
imul
lret
adc
icebp
fdivr
dec
repz
je
sub
push
jnp
outsl
adc
inc
jae
sbb
mov
mov
pop
jp
xor
mov
push
jo
sti
test
mov
cwtl
daa
sbb
pop
sbb
aam
arpl
fistpll
xchg
ret
icebp
push
jle
push
fwait
clc
push
add
outsl
cmp
mov
out
pusha
cmp
nop
xchg
push
or
je
lret
cs
pop
repnz
add
jmp
popf
fiadds
push
fcmovb
shl
data16
je
xchg
sbb
pop
and
sbb
pushf
and
cltd
xchg
mov
iret
jo
sahf
mov
lea
and
pop
daa
in
cmpsb
sbbl
je
or
cmp
and
add
lods
lret
push
lret
dec
lret
mov
pop
std
or
lret
adc
adc
xor
sub
cmp
xor
push
jmp
lcall
std
insl
sub
and
mov
add
sysexit
mov
and
dec
add
fwait
xchg
out
ja
lock
adc
cmpsl
bound
jae
movsb
adc
jge
jnp
cmpsb
sub
les
movsb
adc
in
repnz
and
sbb
xchg
loope
inc
testb
mov
adc
cmp
stos
add
sbb
xchg
sbb
cld
loop
mov
imul
addr16
out
fidivl
subl
or
add
mov
cvtps2pi
and
aaa
pop
int
mov
in
les
jecxz
xchg
sub
push
dec
jmp
sub
dec
stos
push
mov
cwtl
jno
sbb
gs
mov
pop
pop
jns
ljmp
shl
fidivrs
xor
ja
cmp
iret
lret
test
mov
pop
shl
mov
push
mov
jne
dec
leave
enter
rolb
jno
ja
xor
mov
inc
mov
cmpsb
fidivs
sti
fisttps
cmp
leave
cmp
jo
sub
inc
inc
mov
mov
mov
cli
xchg
mov
pushf
xlat
and
push
sub
ja
cmp
dec
jmp
andb
inc
sarb
mov
enter
lea
stc
push
shrl
mov
push
enter
popa
pop
pop
adc
sbb
test
jle
cltd
pop
sbb
lock
in
out
and
inc
pusha
stos
fs
imul
iret
imul
nop
cmp
sti
pusha
jg
or
dec
js
cld
cltd
push
roll
loop
xor
adc
insl
cmp
mov
cmp
xchg
repz
push
aad
dec
mov
push
adc
rdtsc
sbb
and
hlt
push
test
test
lret
add
pop
dec
insl
xor
mov
push
inc
dec
mov
nop
mov
dec
mov
in
cmp
ret
lahf
iret
les
repnz
pop
fidivrl
and
jbe
cld
sti
aad
lret
in
inc
int3
xchg
movsb
insb
mov
push
xchg
int3
test
es
jmp
test
add
mov
mov
pusha
jge,pn
mov
and
mov
push
xor
in
in
cmpsb
jb
mov
movsl
inc
icebp
clc
push
lahf
pusha
fstpl
sub
outsl
dec
and
adcl
mov
mov
add
sbb
adc
xchg
out
inc
mov
xor
cmp
add
pusha
out
sbb
mov
popa
push
pop
out
int
dec
loopne
popf
mov
pop
das
gs
or
sbb
push
add
pop
sub
shrb
sbb
insl
das
aam
sub
insb
fdivrs
inc
or
dec
mov
jae
movsb
int3
test
ss
dec
cli
fnstsw
hlt
adc
enter
sub
int3
cli
enter
lea
cmp
xor
mov
imul
enter
and
or
sbb
cmp
xchg
sahf
and
lods
shlb
es
xor
jge
fiaddl
stos
mov
pop
ret
cmc
cmpsb
cmpsl
cmp
fdivrs
cmpsb
push
jo
addr16
lock
mov
neg
fucomip
in
add
fimull
dec
mov
jne
add
sub
mov
push
outsl
pop
out
sub
xchg
jle
lods
cltd
sub
imul
call
and
sbb
dec
nop
mov
xor
subl
js
pop
push
pop
dec
addr16
add
cmpsb
dec
fisubrl
mov
add
lock
mov
iret
imulb
mov
insl
adc
aas
sbb
mov
sbbl
loope
int
lahf
movsl
lcall
jae
cld
test
dec
dec
loopne
es
dec
pop
dec
jp
push
add
enter
jg
fdivrs
in
push
add
imul
or
ret
push
inc
adc
adc
addr16
cmpsb
in
cmp
add
xchg
jmp
pop
adc
fs
jecxz
pusha
xchg
aaa
insl
push
pop
cmp
and
lcall
fstl
mov
call
xchg
jno
filds
lods
popf
adc
ljmp
dec
mov
loopne
adc
out
inc
push
xchg
mov
fidivrl
popf
mov
out
mov
in
jne
adc
mov
rolb
ficompl
in
cwtl
test
dec
cmp
lock
sbb
mov
or
hlt
out
mov
xlat
lock
in
add
dec
call
mov
loop
lods
fldt
rcrb
add
jmp
mov
jno
push
adc
pop
push
rclb
pop
xchg
call
rorb
inc
inc
repz
stos
and
mov
xchg
lds
adcl
in
maskmovq
negl
fisubs
mov
mov
idivb
jmp
call
push
xchg
mov
int3
dec
xchg
fmuls
icebp
pop
stc
pop
mov
jmp
pop
cmp
iret
pop
ds
mov
or
and
cmp
push
xor
daa
xlat
add
xchg
pop
cmp
xor
or
aam
push
cmp
inc
mov
lahf
jno
ret
repz
push
mov
lahf
scas
fstpt
cmpsl
mov
mov
pop
pushl
out
lret
nop
inc
mov
xor
lahf
xchg
clc
stos
popl
into
mov
in
or
xor
dec
movsl
sbb
fnstsw
addb
mov
lahf
pop
fisubrl
repnz
push
lods
call
dec
shrb
dec
pop
or
xchg
and
test
loop
inc
cmp
mov
incb
push
and
imul
cmp
mov
xchg
mov
xchg
xchg
pushf
daa
adc
pop
pusha
mov
or
repz
or
aam
or
push
cmp
xchg
pop
sbb
add
imulb
movb
stc
rcrb
out
lcall
out
pop
icebp
and
xlat
je
loope
ret
push
aam
sbb
jbe
imul
in
xlat
mov
jge
adc
lahf
mov
fstp
ljmp
fxch
push
mov
repz
fmuls
push
fistpll
mov
mov
shlb
fwait
jb
ds
xchg
adc
xor
mov
in
jg
popf
clc
mov
stos
jnp
movsl
popf
mov
dec
adc
xchg
xor
sub
cmp
dec
jge
std
fnstsw
in
adc
jae
ljmp
mov
pop
mov
shrl
test
fists
movsb
adc
mov
addr16
adc
adc
jmp
scas
cwtl
jno
sarb
lea
lret
mov
in
and
imul
push
lods
mov
les
movsb
out
rcrl
mov
jl
push
push
dec
mov
gs
jo
cmp
pop
faddl
xor
arpl
int
xchg
dec
xchg
adc
out
rorl
mov
in
jle
out
dec
fisttpll
es
inc
xchg
and
lock
inc
lret
cmp
js
iret
in
sti
dec
ljmp
out
inc
push
bswap
lea
mov
arpl
shlb
inc
inc
jecxz
aam
cli
test
orl
xor
and
push
cmpsl
loopne
xchg
push
subb
mov
ffreep
xor
cvttps2pi
bound
bound
popa
mov
jns
pop
and
inc
pop
xlat
incb
xchg
xchg
adc
xchg
repz
adc
test
jae
les
xor
jo
xor
and
cli
ja
xchg
ret
das
call
insb
out
mov
xor
out
out
fsubl
add
scas
cwtl
xchg
cmp
ret
out
jge
jge
loope
js
xchg
cld
in
mov
sti
push
mov
inc
das
mov
mov
jle
xchg
xchg
test
aaa
pop
xor
pop
outsl
das
and
pop
cmpsl
pop
adc
mov
jecxz
mov
push
loop
cli
cmp
pop
xor
out
pop
mov
and
xlat
inc
outsl
mov
fmulp
xor
outsl
pop
das
jb
insb
add
sbb
ja
sbb
data16
inc
sub
popf
jl
aad
pop
adc
clc
jp
mov
or
aas
lea
sub
adc
sbb
fsts
stos
cltd
lea
mov
jo
push
loope
inc
mov
pop
rcl
jo
and
mov
inc
sahf
pop
test
mov
mov
mov
dec
or
test
loopne
lock
cmp
ret
jecxz
add
or
inc
dec
std
repz
frstor
pop
sti
inc
push
jle
add
dec
push
push
loopne
add
mov
cmpsb
adc
mov
aas
dec
xchg
leave
cpuid
test
pop
mov
pop
arpl
pop
inc
inc
or
jo
pop
jecxz
add
adcl
dec
xor
shlb
jmp
mov
scas
cmc
daa
xchg
dec
call
pushw
mov
and
inc
outsl
mov
or
xchg
adc
mov
add
xor
out
insb
or
pop
cmp
inc
shl
and
and
dec
mov
mov
jo
pop
out
outsb
push
aaa
sbb
cltd
xchg
jb
fcmovbe
cmpsl
xchg
in
sub
sub
mov
lret
imul
test
adc
shrl
cmpsb
std
dec
cwtl
inc
icebp
xor
push
leave
ljmp
jl
adc
pop
ret
mov
popf
leave
subl
xchg
jne
mov
add
xchg
jle
ret
repz
add
out
fstpt
pop
in
jne
jle
test
cmp
push
jge
jmp
fsub
cmpsl
xor
xlat
xor
pop
xchg
aad
mov
aad
xor
rorb
mov
sub
pop
jo
sub
fwait
stos
jg
fildll
jo
sbb
stc
in
push
mov
cwtl
mov
sar
subb
inc
lds
xchg
loopne
mov
popf
pop
mov
in
mov
add
movsl
xor
or
pop
or
mov
inc
test
mov
fs
aad
scas
call
out
push
lea
inc
inc
fstpl
scas
dec
aaa
push
push
jp
lcall
das
notl
jae
js
sbb
ja
xlat
stos
imul
mov
or
test
xor
dec
shrl
xchg
mov
in
fnstenv
and
out
je
fiaddl
inc
cli
jmp
xor
imul
shrl
sbb
and
in
into
inc
dec
xchg
in
xchg
fistl
cmp
fucom
dec
and
clc
push
arpl
repnz
fildl
push
jg
xor
pusha
dec
xor
pushf
jae
sub
cmp
pop
push
gs
nop
lock
mov
push
bound
cmp
and
shrb
ror
or
aas
repnz
mov
adcl
pop
jge
mov
mov
sbb
cmc
mov
mov
cmp
out
loope
test
js
ret
shl
enter
jne
lret
mov
sub
je
adc
cmp
shrb
pop
adc
je
stos
movsb
push
ljmp
sbb
xor
mov
ljmp
and
leave
shl
leave
jbe
mov
repnz
dec
cmpsb
or
loopne
fimuls
daa
es
push
mov
mov
jle
fcoml
mov
movb
or
mov
jno
push
lods
xlat
mov
pop
push
das
inc
jae
xchg
jge
int3
jl
jge
pop
mov
rcll
and
lock
adc
stos
pop
xor
lock
aam
insb
mov
movsl
mov
cld
push
rcll
icebp
mov
mov
ftst
xor
xchg
call
mov
lahf
fldt
mov
popf
popf
inc
pop
movsb
xchg
dec
aas
mov
out
mov
mov
jl
lret
lret
mov
mov
mov
test
jo
cmpl
fstl
pop
mov
neg
std
dec
cmp
lods
pushf
xchg
sti
mov
sbb
cmp
jl
dec
fs
inc
popf
push
mov
shl
sahf
adc
xor
cmp
sub
cs
or
adc
and
into
pop
jne
xlat
inc
mov
push
sbb
rorl
into
insl
mov
pop
add
flds
mov
jnp
push
int
insl
scas
xchg
mov
jne
inc
divb
jmp
rolb
xor
jge
sub
lea
mov
js
push
clc
mov
jns
and
push
mov
inc
pxor
orl
sbb
test
iret
out
fcoml
fwait
xor
mov
adc
bound
fimuls
adc
fdivr
pop
out
mov
je
sbb
pop
inc
aad
lds
rcr
aaa
cmpsl
sbbb
pop
sub
lods
jae
jae
jge
mov
jmp
scas
lds
inc
sbb
add
neg
test
movsb
xchg
push
push
jg
or
ss
xchg
in
cmpl
fnsave
dec
stos
cmpsb
int3
push
add
xchg
inc
outsb
rorb
jno
movsb
cs
push
pop
incb
mov
adc
fstps
mov
cmc
test
pop
jae
jle
jle
sub
scas
xor
imul
cmpsl
inc
xchg
inc
ret
ficompl
mov
mov
cmp
sub
cmp
adc
lret
repz
push
sbb
or
fwait
loopne
mov
scas
fcompl
and
mov
mov
xchg
dec
enter
inc
nop
int
mov
pop
push
adcl
fmul
ljmp
adc
dec
or
xorb
lds
leave
repnz
push
adc
jno
adcb
push
aam
jecxz
cwtl
jbe
hlt
cld
sub
movsl
push
mov
enter
fmul
mov
jp,pn
pop
jo
push
jl
push
repz
rol
push
aam
push
jnp
scas
jnp
mov
adc
in
inc
pop
inc
bnd
sbb
inc
jnp
and
jns
dec
sbb
jecxz
rcll
inc
xor
js
sub
adc
roll
hlt
xor
int
insb
in
ret
dec
lret
inc
push
mov
lret
out
lock
repnz
dec
xor
imul
lea
sbb
mov
fists
dec
fiaddl
rcll
enter
rcll
in
mov
into
in
add
adcl
jecxz
dec
fdivs
or
jae
xor
jp
inc
xor
inc
or
cltd
cs
mov
fwait
scas
push
lahf
ret
push
mov
outsb
mov
dec
mov
sti
loopne
in
add
orb
icebp
pop
andb
jmp
mov
out
push
jbe
sahf
pusha
cmc
cltd
lcall
inc
aam
and
cltd
add
adc
xchg
mov
aad
push
mov
cs
sbb
stos
cmp
ljmp
pop
or
js
lds
pop
loope
sub
leave
pminub
mov
jo
mov
xor
and
shrb
aam
or
and
les
rcrl
movsl
xor
outsb
addr16
and
rclb
call
mov
mov
mov
xchg
insb
mov
inc
inc
inc
fmuls
xlat
sbb
movsl
push
jne
lea
inc
loopne
dec
adc
in
and
out
insb
and
or
int
jae
pop
hlt
stos
repnz
mov
push
aam
enter
push
ret
or
dec
inc
cld
cs
adc
adc
fcomip
aad
movsb
add
in
call
daa
outsb
adc
push
arpl
mov
testb
in
adc
or
stos
in
mov
lret
pop
in
les
inc
scas
rorb
lret
fs
icebp
adc
insb
push
xchg
sahf
cmpsb
xchg
icebp
inc
fstps
sbb
jg
divl
in
cmp
insl
cli
jbe
sbb
sbb
in
lds
aas
adc
add
fidivrl
fcmovbe
sub
add
dec
jne
ret
xchg
js
movsb
out
mov
std
push
mov
fwait
cmc
jg
pushf
xchg
sub
sbb
pushf
aas
mov
add
clc
loop
xchg
cmp
mov
push
pushf
cmp
jle
sub
cs
fstpl
push
out
push
aas
dec
cwtl
sahf
lcall
xchg
dec
jg
cmp
mov
insl
fucomip
mov
xor
xor
mov
jb
jae
jp
lock
shr
sbb
mov
ja
xchg
aas
inc
add
fistpl
js
cmpsb
test
cmpsl
jmp
out
inc
shll
insl
leave
xchg
mov
fwait
les
sbb
xor
mov
adc
xor
xchg
jle
mov
mov
sbb
test
or
and
out
adc
fcoml
ds
cld
mov
negb
xor
mov
jmp
xor
jmp
cmp
adc
mov
ja
dec
loop
push
jle
push
ljmp
mov
mov
ja
fcomps
lcall
int3
jnp
arpl
mov
jne
cld
pop
dec
mov
in
pop
sub
cltd
in
std
fisubrl
test
idiv
jno
ret
adc
jae
ret
jnp
scas
jo
mov
aam
xchg
imul
cmp
in
mov
pop
push
adcb
pop
sbb
mov
sarb
cltd
push
outsl
sbb
loopne
shrb
std
xchg
insl
add
add
push
shl
test
cmc
ffreep
lock
cmc
dec
and
lret
mov
add
pop
or
popa
push
or
pop
push
and
shll
es
adc
dec
jno
mov
andl
mov
fsubs
mov
inc
orb
fcmove
dec
pop
mov
xor
xchg
les
jno
repnz
inc
dec
js
test
sahf
pop
adc
xchg
fsubs
push
mov
fs
and
aam
test
pushf
mov
dec
xchg
adcl
test
inc
jae
daa
push
cmp
push
or
mov
test
jecxz
push
xor
ret
flds
movsbl
andb
push
cmovb
mov
xchg
fstpt
mov
pop
cmp
js
jb
cmpb
mov
jbe
sahf
sbb
and
inc
pop
mov
in
sti
xchg
jl
lret
dec
rorl
jae
testl
sbb
cs
mov
stc
push
pop
lret
and
stos
ret
dec
sub
sti
adc
fildll
xor
xchg
mov
pusha
dec
mov
shll
cmpsb
lods
sarl
add
cmp
daa
lahf
mov
les
xchg
xrelease
out
push
int3
ja
dec
mov
popa
fsubs
jno
out
es
jle
ficompl
push
inc
adc
dec
jle
push
and
and
cmp
movsl
sarl
sbb
sub
xchg
pop
cmp
inc
aad
scas
fs
jo
das
andl
sbb
mov
or
or
rcrl
push
popa
inc
jb
mov
sub
in
test
in
sarl
sbb
and
push
xchg
inc
mov
ret
orb
adc
push
loope
push
adc
in
or
sbb
xorl
insb
out
pop
lsl
fs
fistpll
loop
mull
mov
lret
fcoms
sbb
fcomi
pop
pushf
fldl
or
push
fs
cmp
inc
adc
and
cmp
pop
mov
sub
jg
in
sub
mov
fsubrp
fwait
mov
scas
popa
add
push
xor
in
mov
push
pop
adc
imul
pop
in
enter
ret
arpl
cld
dec
int3
xchg
stos
in
sbb
mov
fldl
cmp
jae
out
add
mov
jecxz
ret
int
cmpsl
in
mov
jnp
xchg
mov
push
ja
sbb
ss
jnp
mov
ljmp
rclb
das
aad
or
imul
dec
call
fdivrl
es
jg
cmpb
sub
test
push
xor
lcall
or
cwtl
fs
loop
test
daa
inc
and
mov
mov
test
mov
xor
ret
aas
cmc
and
push
mov
cmp
xchg
xchg
int
dec
mov
stos
xchg
pop
and
inc
mov
sub
or
jp
sbb
cmc
repz
mov
sub
inc
jnp
outsl
xchg
push
cmpsl
mov
lea
inc
or
jnp
out
jmp
adc
add
iret
push
mov
sub
push
movl
rcrl
mov
pop
loope
pop
fwait
sbb
mov
scas
and
push
or
jno
xor
shll
aas
sarb
lret
fisttpl
and
sbb
and
cltd
and
inc
adc
nop
inc
mov
stc
xchg
out
mov
insl
lret
mov
dec
sub
ss
mov
add
push
jns
or
mov
and
fisttpll
push
popf
sub
push
push
in
pushf
popf
mov
pop
cwtl
pushf
cmpsb
int
test
std
push
out
filds
cvttps2pi
jl
js
pop
inc
icebp
sbb
pop
xor
pop
add
sub
orb
hlt
gs
jle
pop
add
in
mov
jg
loopne
push
and
sub
mov
xor
xchg
pop
rorb
fwait
mov
xor
sti
add
inc
xchg
add
jmp
addr16
lock
push
add
inc
std
dec
fsubrs
loopne
push
sub
mov
xchg
dec
dec
ror
cmp
and
idivb
ja
adcb
cwtl
cmpsl
fdivrs
add
push
add
rcll
out
cmpsl
xchg
daa
mov
mov
jecxz
scas
mov
adc
cwtl
lret
dec
in
nop
xor
ja
adc
xor
adc
test
xchg
xchg
sbb
or
cli
pop
lds
sarl
enter
jo
clc
push
and
add
mov
lret
insb
sub
push
and
mov
jnp
jmp
xchg
jp
jns
stos
out
jecxz
pop
xor
dec
sbb
test
orl
scas
out
int
cmc
push
rolb
incb
scas
cmpsl
push
xchg
incb
cmp
cmp
insl
cmp
cmp
push
loopne
pop
adc
mov
pop
call
mov
out
dec
push
mov
inc
pop
or
pusha
movsl
mov
fadd
andb
jge
jnp
lods
jle,pn
mov
test
and
imul
insl
xor
sbb
int
lret
mov
out
rcll
jno
push
adc
cmp
jb
or
fldl
data16
int3
cmpl
ret
mov
dec
push
rcrl
fisubrs
lahf
sub
jno
push
in
mov
idiv
popa
insb
loope
push
test
out
jmp
push
daa
sub
jno,pn
inc
bound
xchg
jp
cmpps
mov
inc
sbb
inc
loop
add
cmc
xchg
xor
and
sub
mov
loop
sahf
push
mov
rcll
mov
jp
cltd
shll
ljmp
mov
xlat
out
pop
lret
lea
xchg
test
mov
aad
sub
jbe
pop
mov
outsl
movsl
sahf
cmp
dec
mov
jno
pop
inc
idivl
das
mov
mov
cmc
lret
stc
adc
push
pop
into
dec
notb
bound
or
sbb
jp
movsl
or
out
mov
and
rolb
mov
sub
mov
into
js
std
stos
ja
rorb
lea
mov
fwait
jno
insl
xchg
xor
ret
pop
dec
push
pop
fsubrl
sub
cltd
pop
mov
scas
fcmovu
xchg
and
test
scas
out
insb
cmpsb
data16
fldl
jp
mov
ds
pop
push
mov
lcall
lods
addb
or
les
cmp
pop
lret
push
mov
int
mov
mov
loop
or
mov
insb
mov
dec
cmp
cmc
ret
push
leave
and
dec
jle
push
pushf
popf
test
dec
out
popa
lcall
mov
jns
out
xor
aad
cmp
jnp
dec
jbe
mov
in
ror
aas
test
and
push
cld
test
inc
jecxz
inc
fcoml
push
inc
push
andl
inc
fsubrs
popa
scas
cwtl
punpcklwd
xchg
or
jl
inc
pushf
push
lahf
or
dec
jle
sahf
lock
inc
inc
pop
test
add
stos
ret
aad
das
shrl
xor
mov
mov
push
or
aam
or
cs
sarb
popl
mov
push
cli
jne
shlb
adc
sbb
mov
dec
push
inc
stc
movsl
sub
ljmp
sub
xchg
pop
push
call
adc
add
stos
or
jbe
cmc
xlat
mov
int3
aad
es
loop
roll
and
or
fdivrs
cs
push
movsb
add
xor
fcompl
cmp
xchg
push
ficoms
adc
adc
sbb
lods
and
mov
andb
cmp
or
mov
and
or
sbb
rcll
data16
and
nop
adcl
inc
cmp
adc
loop
inc
adc
jns
lret
icebp
push
mov
in
or
mov
mov
pop
pusha
push
and
lds
sbb
xlat
mov
push
push
mov
jp
sub
leave
xchg
addr16
jae
jmp
pop
jo
stc
rcrb
fstps
add
sbbl
sbb
xchg
push
popa
shlb
push
ds
add
popf
push
in
adc
inc
out
fdivrp
dec
cs
jno
mov
filds
sub
sub
icebp
xchg
jl
mov
mov
bound
loope
mov
cmp
stos
lea
pop
mov
in
jmp
outsb
mov
jb
aad
int
jmp
xchg
rclb
je
inc
fcmovnb
iret
fcmovnu
shll
ret
sbb
f2xm1
rcr
pushf
inc
add
mov
loope
push
add
gs
sub
fisttpll
and
jb
lahf
outsb
xchg
cmp
fimuls
xchg
stos
lcall
mov
pop
or
clc
es
push
and
lahf
push
mov
xor
mov
jo
aad
pop
jno
jo
pop
jmp
leave
cmp
cmp
dec
js
pop
imul
and
sub
inc
lahf
cmpsl
dec
aam
or
aam
jb
cmp
cmp
movsl
enter
mov
pop
dec
add
mov
ret
sub
enter
aaa
mov
mov
sbb
dec
mov
cmp
shll
mov
repz
insb
cltd
add
xor
cs
std
test
xchg
adc
push
adc
pushf
inc
arpl
and
mov
and
mov
shll
add
or
and
sahf
movsb
aas
outsl
push
cwtl
lods
out
lret
mov
pop
sti
fadd
cwtl
shll
adc
clc
or
sub
and
outsb
xor
iret
je
sub
xor
pop
pusha
xor
xchg
sbb
enter
inc
inc
xor
push
xchg
add
cmpl
fists
dec
lcall
ljmp
mov
stos
add
stc
and
xor
sti
mov
stos
add
dec
xchg
ss
lds
leave
adc
cmc
mov
fst
mov
inc
popa
outsb
mov
sub
push
movl
inc
xlat
outsb
ret
sbb
repz
xor
imul
jns
mov
cmpl
aaa
cmpb
das
jle
push
lret
pushf
jo
inc
iret
and
and
sbb
repnz
ljmp
rol
sbb
sub
push
sub
mov
jnp
rcrl
mov
push
jmp
movsl
rorl
roll
push
push
jb
xorb
shrb
push
cmp
aaa
enter
aaa
cmpsb
nop
xor
dec
out
or
cmpsl
pop
out
push
out
adc
adcl
xchg
push
lret
aaa
inc
cmc
mov
xor
xchg
pop
jo
sbb
fwait
cld
push
out
xor
mov
test
notl
shlb
pop
cmp
movsb
jmp
fs
push
gs
jle
pusha
movsl
sub
rorl
cwtl
jno
popf
fwait
scas
je
jns
push
outsb
inc
adc
in
into
pop
mov
das
ret
jmp
es
scas
jp
imulb
outsl
adc
jle
jecxz
das
cmp
dec
xor
loop
fldt
sti
mov
dec
fwait
scas
iret
adc
jl
adc
in
sarb
dec
stos
xchg
movsb
mov
mov
lret
or
cmpsl
sbb
mov
jnp
mov
cmc
lods
mov
xchg
ret
adc
push
push
push
xor
subl
or
stc
lods
mov
mov
mov
push
movntps
pop
inc
lods
adc
cmpl
cmc
mov
inc
mov
popa
adc
mov
insb
dec
mov
mov
add
mov
lock
gs
test
loop
test
dec
clc
jle
pop
ja
pop
clc
mov
shrl
daa
test
dec
sub
ds
mov
cld
sub
pop
mov
pop
lods
or
ja
outsl
jo
lcall
add
enter
das
js
cwtl
dec
or
es
jecxz
xchg
pushf
dec
or
xchg
jo
push
mov
adc
je
cmp
repz
outsl
stc
adc
xchg
jno
xorb
and
sbb
inc
xchg
pop
fisttpl
xchg
inc
test
repnz
pop
shll
clts
inc
add
push
pop
adcl
test
repnz
push
pop
mov
push
repnz
imul
dec
fisubl
sti
or
xchg
sbb
popf
cmp
jae
cmpsl
push
xor
data16
adc
fisubs
rcl
mov
mov
jge
call
scas
stc
movsl
jno
push
movsl
sub
pop
adc
xchg
dec
rclb
add
aam
lds
outsl
cmp
idivb
les
ja
mov
sahf
dec
pop
std
or
push
orb
movsl
pop
cs
pop
cmp
pop
push
test
push
xor
cltd
xor
addl
in
adc
cmpsb
mov
mov
outsb
push
push
jnp
addr16
pop
loopne
dec
push
fildl
movsb
sbb
fisubs
pop
jl
aas
adc
adc
inc
popa
clc
jne
sbb
mov
sbb
pop
movsb
sub
out
push
loop
mov
xor
sbb
movsb
inc
adc
das
inc
lock
lods
jge
aam
inc
sarl
jmp
lods
pop
lods
call
inc
divl
jg
sti
mov
inc
mov
loop
dec
push
xor
add
pop
ja
add
adc
mov
sbb
pop
push
inc
sub
lcall
aad
fbld
je
push
lods
cmc
fsubl
cld
xchg
in
cs
and
jb
mov
addr16
cld
jns
imul
inc
push
and
mov
orb
scas
push
mov
push
repz
stos
pop
add
or
ja
fwait
xchg
pop
xor
fdiv
inc
inc
aas
in
mov
push
sub
pop
insl
xchg
test
push
fs
pop
xchg
lcall
repnz
push
je
sbb
insb
jne
ljmp
aas
ja
xchg
out
fxtract
jg
jecxz
leave
xchg
insb
loopne
adc
jo
or
ss
push
xchg
xchg
sub
jbe
cmp
xchg
inc
movsb
sahf
shrb
jle
add
out
jno
and
ret
pop
out
iret
add
dec
dec
inc
cld
fcomip
push
fwait
sub
adc
sub
cltd
mov
inc
sbb
sbb
adc
fstl
in
cmpl
lcall
mov
packsswb
xor
xchg
inc
add
mov
es
je
pop
movsb
ds
push
cld
mov
in
scas
xchg
shl
mov
push
xchg
imul
fsubp
addl
xchg
or
fstpl
sbb
or
pusha
jge
ja
xchg
xor
mov
mov
repz
mov
cmpsb
adc
faddl
gs
and
xchg
pop
pop
je
push
xchg
js
mov
adc
add
lods
sbb
dec
sbb
mov
jns
dec
push
xchg
cmp
fwait
lds
sarl
mov
mov
cmp
imull
cmp
xchg
jne
je
jbe
orb
lret
cltd
in
sahf
mov
les
mov
in
mov
ret
mov
jg
push
test
push
shl
lds
or
sub
push
cld
xchg
mov
test
imul
sub
pop
or
test
test
and
jle
and
pop
sbb
xor
xor
sub
int3
das
mov
lahf
jmp
sub
rorl
inc
or
es
adc
xor
inc
push
shlb
scas
push
js
scas
xor
push
dec
lods
and
arpl
xor
cli
fsts
xor
sahf
pushf
into
push
push
hlt
sub
mov
push
ss
enter
loop
xchg
xor
out
rorb
into
jge
sub
jb
mov
adc
aas
or
outsl
sub
andb
pop
and
jne
jmp
jmp
fidivrl
push
mov
dec
fidivrl
inc
fs
cwtl
mov
mov
jg
xchg
inc
shlb
or
cmc
sub
add
xchg
pop
nop
inc
nop
pop
pop
bound
cli
push
je
mov
xlat
sub
and
and
mov
shlb
fiadds
or
out
scas
add
mov
sti
inc
mov
ljmp
js
mov
lahf
fdivs
mov
sub
xor
inc
jae
push
out
xchg
ret
ret
testl
or
scas
pushf
and
in
fs
mov
movlps
jp
mov
jg
int
mov
inc
jb
inc
jl
out
pop
data16
jmp
sub
pusha
jg
or
xor
test
ja
xchg
mov
jbe
out
cwtl
or
movsb
cmpb
pusha
cs
imul
je
aad
add
pop
add
insl
mov
push
mov
loopne
mov
mulb
jp
xchg
push
push
and
icebp
or
lods
shrl
dec
push
sbb
push
xchg
sti
popf
push
push
es
ss
test
mov
dec
mov
fnstenv
aas
fwait
xchg
add
pop
cli
mov
ja
je
mov
push
lock
movsl
cs
clc
sarl
mov
sub
push
nop
pop
cmp
mov
movsl
add
cmp
pusha
dec
sub
repz
push
int
out
mov
pop
mov
sbb
setl
pop
xchg
int
xchg
fwait
or
sarl
fimull
ds
mov
push
xor
das
bound
sti
push
pop
dec
xor
jns
sub
jp
lahf
push
aam
push
je
popf
sub
jg
xchg
mov
pushf
movsb
outsb
mov
addr16
sbb
push
adc
xchg
jae
or
jg
addr16
int
out
lds
pop
lods
jp
or
cmc
or
repz
xor
aam
xchg
xchg
mov
lock
cmc
inc
push
cmp
popa
cmp
je
add
xchg
jb
mov
decl
into
lahf
xor
push
jle
shrb
loopne
sbb
icebp
andl
mov
mov
xchg
icebp
xor
pop
aam
sub
push
xlat
loop
insl
xor
sub
roll
movsb
push
aam
adc
push
jns
in
push
dec
mov
dec
inc
pop
inc
je
mov
dec
mov
insl
sbb
sahf
add
mov
dec
maskmovq
imull
pushf
xchg
mov
arpl
xor
jmp
frstor
lcall
or
out
les
fildl
push
push
and
aad
sub
push
aas
cmp
std
iret
repz
sbb
pop
xlat
out
sbb
inc
out
scas
mov
dec
jo
not
pop
cmp
in
add
sahf
cmpsb
aaa
mov
outsl
jo
test
outsb
enter
movsb
inc
mov
cmp
movsl
rclb
pop
jne
repz
repz
test
jnp
ss
mov
add
xorb
sbb
or
addr16
sti
pop
jecxz
mov
jge
out
negb
ficomps
xor
pop
jno
je
mov
and
cmp
std
aad
push
mov
xor
out
pop
sbbl
fisubs
lcall
jge
jmp
lock
jle
or
adc
scas
pop
mov
fcmove
out
fdivrl
insb
jae
xor
ret
xchg
mov
push
scas
mov
mov
fbld
lret
xchg
call
dec
xchg
mov
cmp
test
push
ds
test
fcomps
int3
push
pop
mov
in
imul
jl
push
fcoms
xor
lret
and
scas
add
daa
jne
or
test
and
cmp
xchg
mov
mov
jmp
ret
gs
cmovge
jns
fcmovnbe
das
fnstcw
andb
sahf
xchg
sbb
mov
lret
test
dec
mov
xor
pop
ret
or
xor
pop
out
call
adc
hlt
sbb
stos
enter
inc
dec
push
icebp
shrl
jmp
sub
dec
jg
add
cs
loopne
xchg
sar
sbb
lods
mov
sub
push
xchg
or
push
mov
add
inc
cwtl
adc
hlt
adcb
inc
fsubp
dec
stc
testl
mov
mov
and
js
or
xchg
pusha
in
jns
pop
loopne
mov
dec
push
js
mov
pop
inc
iret
je
sbb
dec
rolb
mov
ret
xor
jo
stos
addr16
repz
ss
xor
xchg
hlt
out
outsb
and
les
mov
imul
imul
call
jle
xchg
mov
scas
xchg
stos
stos
dec
fdiv
shll
sub
push
xchg
or
loope
sbb
push
add
ficompl
mov
jb
movsl
jae
and
hlt
cmp
call
or
lret
jmp
out
hlt
orb
cld
aam
arpl
xchg
jge
mov
xor
insb
push
aaa
mov
jmp
aad
aaa
hlt
mov
outsb
and
push
xchg
leave
test
dec
int3
inc
shl
mov
mov
xchg
fwait
xor
call
in
sahf
pop
mov
pop
inc
lahf
add
cwtl
adc
sub
js
xor
dec
inc
in
sub
es
mov
xchg
rcll
sub
jl
es
cmp
out
icebp
pusha
pop
int3
xorl
lret
inc
jg
shl
cmpsl
jae
or
lods
and
call
in
inc
sbb
adc
or
cmp
pmaddwd
sub
ja
jmp
xchg
lds
cmp
jns
push
pop
addr16
aad
inc
out
das
jb
movsb
dec
mov
jp
test
inc
jbe
aas
dec
add
fstpl
popf
add
addb
sar
inc
sahf
mov
in
push
sahf
mov
lea
jle
lcall
bound
sbb
adc
fnstenv
jns
and
outsl
add
add
xor
test
push
ret
jmp
mov
sub
ss
mov
test
jae
add
sti
mov
xchg
sbb
adc
or
sbb
or
pop
pop
cs
cltd
in
popf
xchg
xchg
test
dec
inc
cli
sbb
pop
xchg
orb
push
xchg
in
and
mov
hlt
lahf
jns
aaa
mov
fidivl
shlb
push
mov
jo
fcmovu
or
jg
adc
aaa
lcall
jmp
or
jecxz
pop
mov
jle
or
insb
jge
or
sahf
push
mov
lret
test
adc
adcl
or
jge
js
mov
and
incl
jecxz
xor
cmpsb
fisubl
stos
adc
jb
jo
xchg
pop
shll
sahf
bound
cli
int
mov
lret
out
fildll
mov
xor
movsl
fstl
or
daa
out
cmp
int3
cmpsl
pop
call
push
and
sbb
fstpl
outsl
mov
jle
jl
or
repnz
jecxz
add
xor
push
imul
add
test
xchg
jle
jns
fdivl
and
fmul
dec
cs
cmp
inc
addr16
aas
out
test
jns
adc
mulb
xchg
js
push
jl
mov
jns
fmuls
add
lods
mov
fidivs
mov
mov
push
pop
orb
and
sbb
in
shr
arpl
fdivl
je
mov
daa
std
push
fwait
std
rolb
lods
data16
ja
and
and
mov
lods
or
push
mov
mov
and
sbb
cmp
rorb
push
addr16
inc
push
dec
scas
cmpsb
and
or
mov
loop
jbe
stos
addr16
sbb
pop
or
jg
dec
popf
inc
xchg
xor
repz
xor
outsl
push
loopne
xchg
mov
lret
mov
push
lahf
mov
insl
dec
pop
mov
jo
adc
stc
or
popf
addr16
mov
iret
stos
movsl
mov
shlb
inc
adc
and
imulb
nop
lea
in
mov
push
jo
adc
inc
dec
cld
dec
or
cltd
fisubrs
daa
push
push
cmp
fisttps
jo
or
call
popf
pop
fnstsw
mov
test
push
mov
xchg
test
and
pushf
subl
xchg
jge
cmc
sub
add
push
into
insl
jns
pop
jle
jbe
cmc
jo
loope
out
in
daa
into
adc
imull
movsb
and
loop
ljmp
mov
cmp
mov
pop
and
mov
rcrb
adc
jmp
pop
shlb
cmpsl
mov
push
sahf
dec
test
lret
dec
test
repnz
jns
adc
or
xchg
push
add
mov
cmp
fidivs
sub
shll
movsl
data16
adc
xor
xlat
pop
ss
mov
sbb
dec
inc
data16
or
in
ljmp
lock
js
movsb
rcll
and
xor
icebp
and
add
gs
jmp
test
sbb
aas
push
ljmp
loope
and
sbb
adc
add
jmp
lcall
scas
mov
clc
jmp
and
and
dec
push
icebp
in
frstor
jnp
mov
dec
stos
cmp
and
or
fsubrs
jmp
dec
lods
push
clc
dec
fcmovnb
pop
jp
ret
in
push
add
fidivl
and
mov
push
jae
mov
pop
dec
pop
int
cmc
fadds
sarb
or
sarb
inc
xorl
mov
dec
mov
in
in
mov
sbb
mov
test
daa
xor
mov
out
shl
decb
jmp
inc
sbb
sbb
or
cltd
cmp
das
pop
sahf
push
dec
sbb
cli
dec
shlb
inc
xchg
nop
movsb
push
loopne
sub
shl
outsb
pusha
cmp
cs
xor
popa
loopne
das
add
movsl
adc
jecxz
out
adc
jno
iret
mov
cmp
es
popl
push
adc
or
rcrb
in
inc
divb
or
jnp
mov
mov
mov
mov
add
gs
cwtl
inc
adc
outsl
pop
fwait
xchg
rcl
icebp
cmpsl
fisubrs
je
data16
cmc
mov
cli
xor
sahf
and
std
frstor
lcall
mov
dec
xlat
sahf
aam
rcr
je
call
bound
or
clc
loopw
es
out
fs
cld
inc
lahf
jmp
xchg
or
lds
outsb
lock
mov
stos
cmpsl
sub
mov
sub
cmc
negb
inc
fisttpll
and
push
fistpll
jb
ss
inc
jne
sub
pop
in
test
lahf
add
and
insl
and
add
iret
sbb
pop
outsl
xor
push
adc
stos
nop
stc
dec
mov
cmc
add
push
pop
mov
outsl
cmpb
mov
or
mov
loope
jns
mov
popa
xchg
into
ss
daa
jne
shr
not
shl
inc
test
mov
data16
aad
jge
mov
popf
cltd
mov
nop
or
add
add
shl
sbb
jg
push
pop
pop
fsubs
sub
xchg
fcomp
sbb
pop
mov
test
pop
xchg
outsl
jns
mov
cmc
fcom
lock
mov
lds
fidivrs
mov
pop
testl
lret
adc
lock
ja
ret
cmp
filds
sbb
iret
out
mov
add
xchg
ljmp
imul
test
add
pop
xchg
cwtl
ss
ss
ss
in
mov
jb
loopne
rcrb
in
pop
mov
cmp
imul
ficompl
data16
pop
push
mov
out
push
ret
ror
adc
ja
adc
or
in
push
les
sti
jmp
repnz
xor
loopne
push
xor
xchg
or
mov
mov
popa
add
and
les
repnz
fs
adc
jns
fstpt
jecxz,pt
sub
test
pushf
jmp
sti
rorb
or
in
mov
sub
mov
cwtl
loopne
cs
cld
dec
daa
xchg
mov
and
scas
dec
and
call
add
adc
jg
outsl
add
repz
adc
cmp
stos
imul
pop
sub
call
imul
or
mov
jle
test
fwait
mov
mov
in
dec
das
icebp
add
sub
movsb
or
outsl
ss
stc
out
sub
mov
cmp
or
mov
add
cmp
inc
xor
mov
loop
call
xchg
loop
mov
mov
call
jo
mov
data16
xchg
aaa
in
repz
into
fstl
dec
scas
cs
mov
or
test
mov
inc
adc
in
outsb
cwtl
cwtl
mov
pop
aas
inc
sti
pop
and
xchg
jmp
insb
inc
enter
lahf
repz
add
pop
arpl
shll
push
negb
jns
adc
push
adc
and
mov
sub
fs
dec
jp
ja
add
cmp
inc
jp
int
outsb
repnz
cmc
cmpsl
test
and
outsb
dec
xchg
fcoml
std
pop
mov
adc
outsb
jo
push
sbb
jg
xor
stc
ret
push
lret
push
sub
loopne
loope
jl
sbb
sub
mov
and
popa
call
leave
cmc
ret
dec
mov
mov
fstl
pop
sbb
jp
push
mov
mov
andb
pop
mov
lods
push
loope
out
add
aas
ss
mov
and
leave
add
test
xchg
cld
adc
sub
pop
inc
scas
cmpsb
jmp
bswap
push
loope
test
insl
xor
xor
inc
jns
mov
test
loop
adc
cwtl
jle
xchg
arpl
scas
fsubl
les
jg
aam
adc
sub
cmp
xchg
mov
jge
push
addr16
jbe
jnp
adc
call
jmp
out
dec
mov
cmp
test
imul
cmpsb
mov
cld
push
cli
fsubrs
mov
xchg
push
lret
add
rcrl
sub
je
push
sbb
pusha
xor
sub
pop
rcll
mov
mov
scas
jle
jbe
imul
and
mov
insl
adc
mov
lea
push
sbb
cmpsb
xor
and
mov
and
sti
sbb
cmp
pop
sbb
push
jmp
push
fsts
and
inc
test
jno
mov
int
ret
test
mov
push
lahf
sti
outsb
or
stos
inc
sbb
sbb
jp
pop
and
cld
push
hlt
and
in
push
pop
mov
icebp
push
sub
or
hlt
push
mov
dec
sbb
hlt
aaa
sub
pop
decl
leave
inc
mov
push
aaa
adc
gs
ss
add
pusha
sbb
xchg
fadd
fldz
jne
pop
fucom
push
adc
out
mov
sete
out
jne
or
ret
dec
cmc
lea
xchg
out
add
in
pusha
fcomps
mov
mov
pusha
jmpw
sbb
sbb
mov
cwtl
sbb
popa
jp
pop
fwait
sub
mov
push
addr16
mov
pop
pop
mov
push
cld
cltd
sbb
pusha
rcr
testl
cwtl
and
in
push
sarb
jp
mov
aas
sahf
subb
mov
lods
das
xchg
fists
xchg
data16
mov
pop
and
sub
pop
pop
sbb
sarl
in
cs
mov
inc
and
femms
mov
dec
or
sti
das
stc
dec
sub
movsb
and
inc
ss
insl
pop
push
jbe
xchg
xor
inc
add
inc
mov
mov
lods
test
pushf
adc
loope
loopne
fmull
jno
inc
cwtl
stos
lock
dec
lea
shlb
pop
or
adc
cmp
or
lods
loopne
cld
std
mov
or
popa
pop
lret
das
mov
scas
mov
push
pop
scas
test
jp
cs
orb
jmp
dec
in
or
mov
call
aam
lahf
add
iret
jnp
pop
jge
aad
out
lahf
lods
fcompl
scas
fs
push
cmpsl
jge
scas
pop
sbb
loope
lods
jmp
call
das
fisttpll
jns
adc
mov
test
clc
cs
mov
movsb
imul
mov
jns
movsb
sti
out
push
mov
xor
jge
movsl
imul
fsubl
test
xlat
pop
jo
scas
and
pop
test
jb
out
dec
shll
popa
push
fildll
cmp
out
popf
sbb
push
sarl
into
ficoml
cld
xchg
pop
call
mov
dec
or
ret
or
mov
mov
imul
xor
push
ds
in
xchg
or
add
or
jg
mov
loope
dec
mov
add
stc
inc
xor
sub
mov
int3
dec
ret
cld
push
mov
cwtl
decb
push
js
fnsave
cmp
stc
jo
mov
data16
push
jmp
inc
lea
outsb
in
popf
pop
sub
mov
aad
inc
stos
std
lret
cs
pop
pop
lods
dec
pop
fldl
ret
jo
jge
push
lret
in
pop
scas
jae
or
push
adcb
lock
rsm
jnp
xchg
dec
movsl
rcr
mov
lret
arpl
pop
jmp
inc
pop
and
mov
test
push
cwtl
push
and
ret
sbb
int3
adc
int3
pop
into
rcrb
pop
scas
clc
loope
xchg
mov
or
movsb
mov
testl
xor
inc
xor
dec
aam
pop
rcll
jle
push
cwtl
test
cli
adc
sub
dec
mov
test
xchg
aaa
lahf
int
jb
in
repz
add
stos
repz
jno
dec
inc
scas
ret
pop
jnp
cwtl
pop
sbb
movsb
sar
and
add
scas
aad
inc
mov
jns
xor
mov
das
notb
cmp
inc
fsubs
or
adc
addr16
lods
dec
inc
ja
mov
xor
out
or
dec
mov
xchg
and
cmp
or
popa
filds
and
add
cmc
aas
aam
ljmp
jge
pop
sbbl
fdivrl
mov
lret
sbb
jnp
adc
loop
jle
cmc
std
sti
mov
pop
cmp
sub
daa
mov
push
sub
or
scas
or
pop
clc
cmpsl
stos
cmpsl
push
int
ds
and
notb
sarl
push
sahf
or
jnp
cmp
xor
pop
fisubs
movsl
xor
rorl
xor
pop
iret
mov
in
enter
xchg
pop
jp
lods
and
jne
js
es
fxch
jns
push
mov
mov
ss
jbe
sub
mov
mov
arpl
and
mov
mov
gs
jp
clc
adc
xor
push
lahf
xchg
inc
pusha
push
dec
mov
push
or
add
test
mov
pop
mov
add
pop
push
jge
dec
rcrl
add
scas
mov
inc
jne
xchg
add
jle
into
movsl
lahf
mov
xchg
cmp
fmul
pop
cmp
leave
iret
sti
push
out
mov
test
popa
arpl
jge
test
jp
repz
test
fiadds
xlat
in
xchg
cwtl
cmpsl
jne
call
xchg
fldenv
mov
outsb
cmovg
or
mov
jl
cmp
enter
xchg
lahf
outsl
les
in
add
int
cs
scas
push
jns
pop
xchg
mov
push
and
ficomps
xor
dec
mov
loopne
pop
ljmp
in
xchg
add
add
das
mov
lods
dec
mov
lods
cmp
stos
dec
dec
jae
mov
push
test
sub
int
or
sub
enter
sahf
test
movsl
aad
xlat
jo
jecxz
inc
in
pop
das
adc
out
cmp
ret
daa
fucomi
xchg
xchg
insl
and
repnz
sub
add
inc
ljmp
xor
pop
in
push
push
add
xchg
call
mov
stos
je
mov
jg
js
inc
pop
jo
add
xchg
mov
das
dec
xor
push
xor
push
jb
push
cmp
xchg
call
fcomi
int
xorb
jecxz
iret
int3
cs
mov
mov
pop
imul
idiv
outsb
int3
jnp
jne
or
out
hlt
push
mov
xor
mov
xor
lods
fstps
sub
dec
mov
jne
cmp
std
out
sub
inc
push
insl
test
mov
repnz
pop
jnp
mov
xlat
pop
adc
xchg
in
mov
lods
outsb
and
add
cli
push
adc
mov
cmpsb
xor
jns
and
clc
push
mov
mov
add
cmpsl
insb
inc
mov
and
pushf
das
subl
mov
push
jne
test
cli
out
pop
mov
push
mov
out
test
push
loop
les
sub
pop
mov
les
in
cwtl
jb
call
aad
mov
mov
add
add
mov
push
mov
push
push
jmp
xchg
gs
pop
lret
lret
mov
int3
add
adc
insb
dec
lock
sbb
adc
dec
jle
mov
mov
movsl
pop
nop
insl
lret
pop
mov
mov
nop
xchg
or
ret
out
ret
fcompp
or
ss
push
mov
aad
and
fstp
xchg
ja
jae
out
sub
cmp
dec
cmp
pop
mov
out
inc
push
into
jmp
mov
in
std
out
out
out
jp
xchg
daa
shl
and
scas
dec
into
push
and
pop
pop
xor
mov
mov
bound
shl
jge
aaa
scas
cwtl
rcll
imul
out
jmp
sub
testl
fiadds
bound
add
int
cmp
xor
in
loopne
push
xchg
and
es
adc
fisubs
dec
int
cmp
es
je
sysexit
imul
push
cli
xor
test
test
mov
test
stc
bound
std
outsb
mov
rcl
sub
push
jbe
popf
cmpsl
movsb
mov
xor
sub
lods
push
stc
pop
pusha
sub
pop
cwtl
pop
in
mov
rol
in
cmc
int
dec
mov
push
imul
mov
mov
xchg
adc
sub
push
insl
xchg
jp
adc
jp
hlt
jge
push
out
aas
cmp
test
mov
lock
ss
cmp
inc
pop
outsb
lock
add
fldenv
ja
dec
sbb
mov
aas
sub
popf
scas
adc
adc
arpl
add
pop
cmc
add
jo
sti
push
jae
ja
inc
jno
lea
cmc
shl
fwait
lret
decl
mov
cmpsl
or
aam
dec
mov
bound
clc
push
outsl
aam
jae
sub
outsl
stc
sbbl
push
repnz
scas
imul
cld
aas
pop
jo
xchg
test
vhaddpd
jmp
sub
push
ljmp
movb
fsubs
aam
sahf
mov
jle
xor
das
ja
pop
enter
cs
loope
jmp
out
xchg
orb
pop
push
sub
xor
insl
leave
test
ret
pop
adc
mov
sub
shl
jg
repnz
push
rcl
jg
sub
nop
mov
mov
adc
adcl
mov
shl
pop
sti
cld
js
push
sbb
mov
outsl
dec
ret
pop
inc
pop
fistps
icebp
das
sbb
jp
ret
push
mov
jg
aam
mov
sti
mov
mov
stc
aaa
sti
dec
bound
pop
sbb
xchg
imul
cmp
stos
cltd
aam
cli
test
or
sub
pushf
pop
xchg
outsb
adc
xor
in
inc
shrl
dec
dec
mov
movsb
fbld
mov
jbe
xchg
mov
dec
out
mul
movsl
xchg
aam
pushf
gs
lock
mov
int3
mov
sub
add
mov
cmp
add
fldcw
pop
cmc
xchg
insb
insb
sbb
frstor
shr
out
inc
mov
push
outsb
mov
lcall
adc
pop
cmp
sbb
int3
gs
addr16
xchg
mov
and
lock
mov
iret
nop
test
xchg
sarb
inc
sbb
ljmp
xor
lret
loop
add
push
dec
test
sbb
jg
imul
and
mov
push
sub
js
dec
pop
in
fisttpll
mov
mov
popf
inc
lcall
mov
mov
outsl
scas
scas
mov
jg
mov
mov
pop
popf
lret
inc
cmc
push
mov
psubq
call
jle
fimuls
mov
es
cmp
sub
stc
pop
sti
enter
sbb
sub
sub
mov
push
fmul
mov
push
or
jo
mov
enter
mov
fcomps
leave
xlat
jg
jo
adcl
cli
aam
cs
daa
mov
dec
divl
int3
dec
mov
cmc
cmp
pop
add
in
in
or
cmp
fisubrs
mov
fnstsw
loopne
cmp
jnp
inc
mov
xor
icebp
mov
push
mov
lods
and
xchg
out
in
scas
lahf
push
cmp
push
and
adc
aaa
mov
xor
adc
push
sub
mov
sbb
outsl
add
stc
adc
adc
lcall
pushf
out
cltd
cmc
mov
xorl
scas
jle
inc
lret
lods
push
arpl
mov
aam
es
lret
andb
stos
and
add
jge
pop
push
jecxz
xor
mov
jae
test
mov
pop
push
push
fwait
sub
mov
invd
jge
cld
mov
mov
or
insl
outsb
jno
jge
enter
pushf
and
jns
pop
pop
sub
daa
rorb
ret
jp
cli
or
push
aaa
enter
sbb
fcomps
sbb
lods
mov
leave
xor
icebp
xchg
mov
dec
push
insb
lcall
scas
sub
outsb
movsb
out
pusha
add
sbb
test
pop
sub
nop
lea
stc
jnp
rorl
sbb
cmp
out
or
aas
imul
ss
and
mov
xor
pop
pusha
call
jae
inc
mov
in
adc
imul
sub
sbb
pushf
dec
hlt
and
inc
cmp
mov
sbb
jo
cld
sub
popa
int3
addb
xchg
negl
out
sub
mov
push
push
in
std
push
ja
add
push
mov
push
js
cmp
mov
leave
lahf
ja
mov
push
inc
mov
push
imul
sbb
sbb
dec
das
stos
les
jmp
std
mov
out
lahf
divl
cmpsl
je
mov
cmp
ja
imul
mov
lds
xchg
arpl
mov
inc
cli
loope
sbb
in
fisttpl
fwait
xor
jb
or
xor
cmpsb
mov
int
mov
mov
int3
cli
gs
hlt
jge
fdivs
pop
aas
adc
or
rcrw
sub
and
adc
add
or
ss
jmp
addl
sbb
mov
add
insl
and
ljmp
in
and
jo
ret
cmp
mov
jae
imul
in
ljmp
lret
cmp
jle
mov
adc
mov
push
scas
push
push
and
lret
adc
cmc
adc
test
dec
lahf
sub
shll
sub
rcll
popf
jbe
and
inc
subl
movsb
add
addb
dec
lret
xchg
and
xlat
lods
mov
adc
fabs
shlb
mov
or
test
ds
lods
lds
scas
arpl
pop
or
mov
adc
jmp
sbb
into
pop
mov
movsl
push
cli
iret
push
divl
xchg
sbb
stos
outsb
jae
and
xchg
jae
lods
roll
loop
or
ss
adc
jp
cmp
adc
add
rclb
sub
pop
cmp
fs
movsl
test
cwtl
jp
or
int
and
insb
iret
test
fiadds
dec
mov
push
loop
mov
les
das
and
mov
mov
xchg
or
dec
sub
sub
mov
mov
mov
mov
psubusw
push
popa
or
lods
ret
enter
loopne
test
xchg
pop
sub
adc
inc
add
cmpsl
push
imul
mov
xlat
sbb
add
mov
xor
mov
dec
push
push
mov
and
jbe
or
jle
mov
mov
xor
sbb
arpl
mov
add
test
jecxz
xchg
imul
dec
dec
cmp
jle
xor
sub
test
add
pop
push
cmc
inc
and
ret
mov
flds
adc
cmc
rol
das
lods
sti
push
ret
dec
sbb
jne
imul
bound
cmp
mov
popf
icebp
or
xor
push
icebp
mov
aad
fdivrs
iret
fisttpll
sbb
int3
mov
dec
movsb
and
cmpsb
mov
jae
jo
push
cltd
mov
inc
mov
maxps
movsl
mov
and
ficoml
iret
mov
push
push
pushf
imul
push
or
mov
ficomps
int3
mov
push
pop
pop
lret
dec
lea
cld
xchg
jae
mov
daa
imul
fimull
inc
repz
outsb
jb
xor
cmp
mov
pop
push
cmp
mov
adc
or
or
adc
adc
mov
test
xchg
hlt
outsl
scas
lret
roll
mov
gs
aad
dec
mull
mov
notl
sub
jmp
aaa
mov
cmp
adc
in
popa
sbb
and
sbbl
mov
in
xor
subb
jl
xchg
in
insl
rcrb
cmp
xchg
jmp
adc
cmp
sbb
leave
inc
sub
lret
pop
arpl
mov
inc
add
test
aas
jbe
inc
shrb
jo
lcall
nop
inc
lds
mov
ret
cmpsl
rcll
ljmp
xchg
mov
aad
sbb
bound
push
push
add
pushf
mov
lahf
inc
cld
icebp
shll
sti
xor
roll
leave
les
pop
icebp
xchg
jns
jle
sbb
sbb
pop
push
and
xchg
fnsave
in
lods
jmp
cmc
lret
and
sbb
sbb
sbb
arpl
xchg
xchg
mov
popl
sub
test
push
and
gs
mov
sub
pop
inc
repz
add
sub
xchg
add
jbe
cmpl
cmp
in
push
imul
imul
mov
test
in
mov
inc
in
mov
push
aas
sbb
sbbb
sahf
adcb
and
sbb
ja
xchg
in
rol
inc
lret
sbb
mov
stos
xchg
arpl
cld
mov
add
cmc
push
mov
or
xchg
mov
jb
lret
xchg
xchg
icebp
std
mov
negb
faddp
mov
dec
int3
imul
add
or
add
sbb
dec
xchg
cli
fcomps
sub
mov
or
std
pop
mov
cmp
icebp
inc
push
stos
cmp
xor
mov
jmp
pop
scas
fmull
repnz
lea
imul
jge
mov
into
icebp
scas
in
jns
dec
add
add
xor
xchg
orb
movsl
shll
lcall
or
rcll
or
lret
jle
push
pop
jbe
xlat
dec
repnz
lcall
jb
xchg
mov
pusha
addr16
ret
sti
psrlw
mov
inc
cld
add
loop
push
mov
dec
push
lret
and
mov
mov
and
xor
js
mov
cmp
adc
test
push
mov
jno
or
pop
lock
dec
mov
pushf
add
adc
outsl
mov
daa
inc
xor
xchg
popa
shrl
pop
aad
adc
pop
arpl
or
jl
int
jb
daa
fisubl
cmp
in
hlt
outsb
jl
sbb
cs
push
fisttpl
sbb
loop
repnz
pop
adc
mov
hlt
sub
mov
cmp
insb
les
jl
lea
cmp
shll
test
ss
mov
sub
add
sbb
jae
lret
cwtl
dec
xor
mov
cmp
dec
sub
iret
xchg
jb
pop
mov
clc
xchg
or
jmp
test
lds
and
jle
lods
aad
out
xchg
xlat
in
jl
mov
fistl
sub
inc
jg
push
fxch
push
loopne
mov
lock
adc
pop
jnp
lods
and
cltd
xchg
or
push
sub
sbb
cmp
add
mov
movsl
idiv
pushf
js
jo
insb
jl
xchg
lret
shll
add
aaa
push
fbld
mov
dec
dec
push
sti
repnz
sub
xor
dec
mov
movsb
shrb
xor
ret
pop
xchg
shll
loope
lahf
jns
xchg
mov
cmp
fildl
into
pop
pop
rolb
pop
or
xchg
sub
cmp
mov
inc
xor
mov
rcrb
push
lahf
iret
leave
sub
jl
push
insl
mov
add
xor
vpunpcklwd
das
loopne
dec
ret
sidtl
add
or
iret
das
dec
xchg
arpl
nop
test
cmp
rcll
sbb
sub
adc
movsl
adc
inc
mov
sahf
std
cmc
xor
outsb
scas
xchg
imul
sbb
lahf
pop
xchg
mov
mov
stc
jl
fildl
hlt
adc
add
xchg
mov
out
daa
mov
lret
sbb
cmp
test
rcrb
add
jns
and
cmp
nop
loope
in
repnz
jge
add
aad
cs
std
and
lods
iret
fsubr
sub
inc
pop
adc
push
out
pop
push
shll
push
aad
jp
inc
int
mov
testl
inc
sbb
insb
enter
shlb
lret
icebp
pop
mov
jmp
jmp
adc
mov
jnp
clc
jle
testl
dec
test
lret
mov
dec
jg
mov
or
roll
xchg
dec
add
rcrb
pop
inc
jl
rorb
arpl
int3
outsl
or
int3
lahf
test
shrb
add
add
out
out
popf
adc
rcl
shlb
inc
ror
add
or
imul
push
aaa
mov
es
inc
push
inc
dec
mov
mov
fidivrs
and
movl
repnz
pop
xchg
xchg
loope
bound
mov
fsubrl
lret
pop
xorl
jg
outsl
push
sub
out
fiaddl
mov
xor
or
clc
sbb
and
jp
test
int3
rclb
or
daa
pop
cmc
push
add
adc
pop
xor
ficoms
mov
lret
pop
addr16
or
paddd
ja
std
push
sahf
inc
dec
mov
js
stos
aam
jno
push
mov
nop
jne
les
mov
dec
mov
fmulp
outsl
mov
shlb
lahf
jle
fists
out
ja
cmp
jmp
in
fmull
jp
mov
xchg
dec
mov
dec
dec
out
inc
add
adc
adc
mov
dec
cmc
jnp
jnp
testb
xchg
in
inc
or
roll
mov
push
lods
push
jb
std
lods
gs
push
push
popa
sub
push
jmp
push
hlt
repz
ret
dec
or
roll
jbe
push
push
mov
push
lcall
rorb
or
cmpsl
xchg
rcrb
dec
int
insb
inc
in
inc
inc
cmp
enter
dec
inc
jl
add
xchg
pop
xchg
xor
mov
jns
jb
scas
in
push
push
lret
fisubrs
stos
fcoms
pop
aas
sub
test
and
mov
mov
cmpsl
jle
fwait
push
mov
orl
jp
insb
mov
fidivl
xor
or
lret
cmp
mov
test
aad
mov
push
push
stos
mov
mov
mov
mov
inc
fbld
mov
hlt
or
arpl
test
iret
pop
aaa
sbb
mul
cmp
mov
or
fistl
jl
or
sti
hlt
cld
clc
cmp
dec
sbb
pushf
xchg
rorb
mov
sbb
fildl
cmpsl
lods
insb
fs
shr
xchg
mov
sbb
shlb
cmpsl
mov
mov
dec
loope
adc
sub
mov
dec
dec
das
push
scas
mov
xchg
insl
cld
lds
hlt
push
push
xor
cmp
adc
cs
arpl
sbb
ljmp
xchg
out
out
and
and
gs
incl
lds
insl
into
out
int
push
add
jl
fstpt
in
fistpl
xchg
and
push
loop
mov
sub
andb
bnd
pushf
xchg
movsl
lret
xchg
jle
lea
fwait
cmpb
orb
out
and
pop
and
jge
xchg
add
lret
and
test
fildll
mov
rorb
in
rcr
ret
mov
leave
pop
imul
add
imul
adc
push
dec
mov
mov
push
aad
dec
pop
cmp
dec
fwait
and
jmp
rcrb
pusha
aad
dec
dec
mov
mov
ret
fistps
pop
sbbl
scas
mov
outsl
xor
daa
push
pop
inc
mov
shlb
xchg
jno
ds
inc
dec
xor
pop
pop
mov
mov
fwait
out
adc
cmp
jle
pop
test
aas
in
mov
add
dec
pop
or
xchg
xor
je
push
cmp
aad
cmp
shlb
mov
xlat
inc
mov
fwait
aam
rolb
jno
xchg
lret
sbb
lret
sbbl
aas
pushf
out
sbb
xor
adc
add
mov
jecxz
adc
inc
adc
adc
idivl
jae
in
adc
das
push
mov
push
icebp
jle
mov
jnp
shr
pusha
ror
xchg
mov
fucomp
rol
cli
mov
mov
in
and
inc
paddsw
sbb
movsl
scas
push
loop
pop
mov
jae
xchg
mov
insb
sub
cs
dec
leave
adc
scas
test
lds
dec
clc
enter
jge
jno
movsb
in
dec
insl
nop
jbe
aas
fstl
pop
cli
push
pop
repz
cld
or
fnstcw
dec
rcrb
cmp
lods
jnp
loopne
ja
sbb
fisttps
insl
xchg
stos
mov
cmp
dec
push
arpl
push
lods
jecxz
and
xchg
mov
pop
in
pop
jb
xor
pop
and
dec
ret
lret
or
fistps
test
nop
pop
ror
lret
xor
xchg
ret
enter
addr16
add
mov
cld
out
lds
mov
cli
sub
push
aas
les
jge
add
testl
insl
add
aaa
out
sbb
test
cmp
lahf
pop
lret
cmpsb
mov
aas
lods
mov
mov
lods
mov
jb
add
adc
cmp
iret
ret
mov
sbb
loope
xchg
loopne
data16
push
jbe
pusha
and
lret
jns
xchg
mov
add
frstor
mov
hlt
xchg
adc
mov
sub
lea
je
movsb
jmp
mov
xchg
add
mov
stc
jno
mov
jmp
adc
push
adc
mov
cmp
fwait
mov
es
inc
xlat
sbb
xchg
xorl
xchg
mov
adc
sub
pusha
es
xchg
jecxz
popf
filds
fwait
xchg
jno
sub
addr16
jns
cld
xchg
mov
sub
cmp
loop
jmp
dec
movsb
out
jno
in
movsb
scas
sbb
adc
mov
ss
cld
inc
dec
mov
push
xor
flds
add
mov
decb
leave
sbb
pusha
mov
and
fdivl
sbb
lret
xor
inc
add
mov
xchg
mov
int3
jb
movhps
jmp
mov
mov
pop
add
clc
sub
or
cmp
nop
jmp
mov
ficoml
ds
add
out
sti
jl
int
sahf
out
xchg
cli
xchg
xchg
rolb
push
andl
jno
popf
aam
mov
adc
jmp
into
xchg
xchg
xchg
jmp
fbld
jbe
pop
or
int3
jb
cmp
lods
aas
jge
inc
hlt
aam
sub
xchg
dec
and
jge
cmp
call
xor
fistps
push
push
js
xlat
pop
enter
add
mov
push
cmc
fisubrs
hlt
cmpsb
sub
push
rcrl
inc
pushf
stos
test
test
mov
sub
lea
xchg
jg
addr16
int
inc
mov
inc
imulb
or
adc
inc
pop
inc
sub
pop
outsl
sub
scas
jb
mov
mov
add
pop
push
jns
decb
in
mov
cmp
iret
sar
pop
popf
pusha
dec
mov
jns
pop
cmc
jae
cmp
jl
ds
mov
or
cmp
loope
xor
ljmp
and
jmp
mov
xor
push
outsl
test
push
jnp
inc
leave
movsl
fistpll
push
lds
adc
int3
decl
fucomip
push
jb
fsubrs
xchg
mov
xchg
inc
rcl
inc
or
cmp
div
or
pop
sub
lods
mov
pop
imul
xchg
pop
roll
add
adc
add
outsl
xchg
xchg
lock
and
in
and
mov
xchg
repz
pop
insb
iret
ja
lea
notb
out
mov
fwait
shrl
aad
int
jae
inc
sub
mov
xchg
push
sub
lods
ret
insb
in
into
mov
inc
xchg
push
inc
inc
or
orb
leave
aad
test
icebp
xchg
bound
jno
insl
jo
pop
shl
or
inc
jmp
in
das
mov
mov
xchg
adc
daa
sbb
mov
cs
pop
shlb
inc
fbld
jb
sti
popf
rorl
scas
mov
insb
cld
out
pusha
push
jg
ljmp
adcl
pop
mov
inc
lock
and
jmp
cmp
dec
mov
or
jno
pop
jbe
lods
mov
pushfw
xchg
hlt
dec
fwait
pop
mov
sti
fstpt
add
mov
loopne
lret
mov
fldt
movsb
cld
fisttpll
mov
cmpl
jnp
cmp
add
insb
insb
enter
sbb
add
icebp
mov
jno
mov
xor
mov
mov
outsb
dec
addr16
clc
fld
test
cmpsl
outsl
dec
push
xchg
pop
jecxz
xor
or
loope
cmc
ljmp
inc
cmp
sbb
jo
repnz
int
ljmp
cwtl
fcomp
lods
sahf
cmp
movsb
loopne
push
mov
lea
add
daa
mov
int3
xor
xchg
xbegin
movsb
aad
xchg
dec
add
xchg
add
jb
jo,pt
fbstp
jp
or
imul
pop
rol
sbb
sti
leave
pop
pushf
pop
das
sub
test
enter
mov
stc
stos
xchg
shr
push
xor
sbb
and
push
mov
mov
cmp
andl
fwait
pop
rorl
inc
insb
notl
and
pusha
mov
mov
fsubrp
outsb
aam
popf
push
push
or
popf
imul
push
pop
mov
lret
inc
je
push
stos
out
adcb
repz
call
lods
iret
push
les
inc
dec
sub
mov
stc
jnp
daa
ss
icebp
mov
jecxz
inc
jns
cmp
lahf
jge
dec
adc
xor
add
fisubl
pop
repz
push
pop
jp
test
lret
out
subb
in
aaa
aad
out
mov
icebp
mov
not
movsb
and
jle
cmpb
cwtl
clc
sahf
in
test
aad
loopne
outsb
push
pop
push
push
punpckhwd
sti
add
int3
ljmp
jnp
dec
sub
scas
adc
pusha
lock
lds
aas
inc
cld
lcall
std
mov
rcl
mov
inc
paddw
sub
aaa
popa
mov
outsl
movsl
jmp
ffree
ret
jbe
data16
into
sub
inc
gs
adcl
cmp
stc
test
pop
adc
dec
pop
call
add
rcrl
inc
clc
adc
jmp
clc
sbbb
int
lds
hlt
lea
adc
push
jnp
nop
xchg
mov
fmull
mov
push
sbb
cwtl
xor
je
leave
mov
mov
and
dec
jb
clc
mov
lea
dec
jb
inc
js
cmpsl
aaa
push
adc
xor
pop
adc
adc
pop
cwtl
jmp
addr16
call
mov
cwtl
dec
leave
loope
inc
mov
jae
or
fidivl
jne
icebp
pop
inc
repnz
xlat
test
dec
js
ret
push
testb
inc
xor
push
mov
pop
sbbb
shrl
xchg
mov
inc
fcmovnu
or
stos
jp
or
jnp
mov
cld
sub
cmc
push
cltd
cmpsl
ljmp
jecxz
cmp
out
imul
push
add
xlat
ret
and
and
jmp
xchg
add
or
clc
mov
lods
into
mov
sbb
pop
or
push
dec
adc
aam
inc
dec
mov
cmp
pop
add
sub
lret
dec
sahf
fisubrl
movsb
andl
loopne
inc
lcall
jne
adc
hlt
sub
fmul
dec
stos
stos
pop
xlat
dec
sbb
icebp
pop
push
jp
test
xchg
pop
adcb
sti
xor
and
std
add
in
adc
es
mov
xchg
and
cmp
mov
faddl
adc
aas
or
lret
std
arpl
push
nop
cmpb
fistpll
iret
mov
dec
jmp
jns
mov
jecxz
and
fildll
mov
popa
xchg
daa
jo
mov
push
imul
add
adc
mov
sub
add
pop
popf
sar
pop
xchg
ret
cmpsb
adc
pusha
ret
repz
ret
loop
test
jo
lcall
fs
jmp
aam
jecxz
xchg
add
pop
lods
int
adc
sub
cs
sbb
inc
jp
inc
dec
fistl
dec
jns
push
sbb
in
test
aas
lahf
leave
lret
std
jnp
dec
mov
pop
clc
pop
lock
dec
movsb
jae
mov
test
imul
lods
outsl
mov
out
mov
sahf
cld
jno
sbb
push
movsl
sahf
mov
pop
icebp
gs
in
jp
pop
loopne
jne
xchg
mov
add
lods
xchg
or
notl
std
mov
cmp
xchg
bound
je
idivl
imul
xor
getsec
dec
outsb
inc
jb
in
and
mov
lds
or
push
jne
push
jge
mov
jecxz
jno
xchg
and
pop
gs
bound
pop
dec
sub
mov
xchg
add
lds
add
dec
cltd
pop
aam
movsb
pop
cwtl
lods
sbb
jg
xor
xlat
fwait
mov
mov
lret
addr16
xchg
mov
fldl
and
pusha
cmp
and
es
lret
enter
aas
or
out
cld
inc
mov
test
add
inc
frstor
pusha
adc
out
sub
std
xlat
mov
ja
rol
je
and
das
mov
sbb
aaa
fsqrt
shll
push
insb
push
xchg
loope,pt
iret
jle
hlt
xor
xchg
fsubs
call
rep
jge
xchg
je
cmp
mov
or
call
fwait
or
push
push
sub
icebp
out
bound
ja
test
int
mov
jge
lahf
cmc
ds
sub
jmp
mov
xor
push
xchg
lahf
dec
ljmp
push
je
jbe
jae
loopne
loop
xchg
push
xlat
insl
push
and
push
or
out
test
lds
and
add
push
jne
and
lret
xchg
xchg
mov
sub
jne
repz
mov
and
or
rcl
push
push
jmp
jl
inc
inc
dec
in
jmp
pop
iret
mov
xor
mov
imulb
gs
mov
movb
xor
xchg
xchg
sbb
jno
cmc
adc
ss
mov
and
int
cmpsl
push
adc
fldl
xor
mov
jno
out
orl
mov
push
sub
fcoml
pop
ret
mov
lcall
lahf
pushf
jns
mov
mov
xchg
dec
out
sub
cmpsb
cmp
fnstenv
fwait
or
dec
cmc
pop
and
inc
mov
push
fstpt
mov
push
sub
jl
inc
or
lret
jb
mov
xlat
sbb
mov
inc
scas
ds
mov
mov
in
xor
aaa
lods
adc
das
andl
xchg
pop
mov
loop
lods
fdiv
das
and
int3
movl
test
mov
sahf
pop
jne
rcrl
mov
jno
inc
mov
inc
iret
inc
pop
faddl
adc
lret
or
addr16
cmp
insl
xor
and
xchg
imul
lahf
pop
test
sbb
push
xchg
mov
xor
pop
or
sub
aaa
add
dec
xor
xor
mov
xchg
adc
out
sbb
sbb
jne
xchg
mov
fs
xchg
loopne
ljmp
xor
inc
outsl
out
mov
and
sbb
rolb
in
loopne
add
test
pop
pop
mov
les
mov
movsb
repz
mov
aas
lds
loopne
and
inc
dec
mov
push
inc
js
pop
das
lcall
dec
jae
aas
dec
lcall
mov
cmp
int
out
pop
rcrb
xor
or
pushf
xchg
iret
sbb
jno
cmc
sbb
repz
cwtl
pop
popf
imul
ljmp
sbb
scas
leave
imul
cmp
lret
mov
sarb
adc
mov
or
repnz
ss
mov
int3
pushf
jne
xchg
ds
nop
add
dec
out
jp
xor
mov
push
into
sbb
mov
sbb
mov
xchg
lret
jo
in
add
iret
inc
sbbb
pop
sub
jnp
jno
dec
in
mov
jle
fisubs
in
into
add
rcrl
mov
pop
outsb
jb
test
mov
scas
ret
loope
or
loope
js,pn
cmp
jo
ljmp
ret
int
or
scas
xlat
and
mulb
xchg
dec
ljmp
push
in
aam
lods
sbb
jl
mov
lock
and
jo
jl
test
test
jp
sbb
push
push
sub
mov
in
inc
mov
sbb
scas
shll
xchg
sub
and
inc
pop
mov
mul
jp
add
mov
test
cwtl
test
fsubr
fldl
dec
je
mov
sarb
dec
ficoml
shlb
addr16
pop
fildl
sbb
xor
xchg
fisubrs
pop
bnd
jns
adc
addr16
jecxz
adc
test
lock
mov
push
jg
cmp
add
jge
mov
push
add
repnz
push
push
push
mov
pop
fdivr
xchg
insl
pushf
lcall
loop
push
pop
fwait
inc
jb
pop
sub
arpl
pushf
mov
fld1
mov
mov
or
xchg
cwtl
lahf
das
cmpsb
ss
xchg
xor
mov
xchg
ds
xchg
mov
push
pusha
cmp
push
xchg
mov
jecxz
aad
xchg
dec
inc
popf
ficoms
xor
adcl
sub
adc
repnz
add
mov
dec
cs
test
subb
ja
push
jl
loope
loope
xchg
loope
fadds
mov
adc
jo,pt
dec
pop
xchg
xlat
in
pop
add
xlat
stos
loope
out
into
sti
mov
int3
jnp
mulb
negl
inc
cmpsb
or
test
bound
outsl
rclb
sub
pop
jge
mov
repnz
iret
dec
call
inc
xor
test
pop
ficoml
mov
mov
shll
xchg
bound
push
mov
cld
sub
xchg
mov
mov
hlt
imul
cmp
dec
orb
add
aas
icebp
movsl
ljmp
sbb
cmp
loop
push
jp
movsb
push
sub
sbb
adc
subb
and
sub
and
sbb
push
cmp
mov
push
sub
mov
lret
repnz
imul
cwtl
arpl
in
dec
int
out
inc
icebp
or
cwtl
test
loope
js
aad
add
ret
pop
cmpsl
dec
clc
test
adc
insb
stos
xlat
and
aam
js
push
aas
in
fwait
mov
dec
sbb
cmc
or
and
xor
into
add
adc
gs
rcll
cmp
ljmp
bound
cmp
xor
leave
xor
or
jnp
xor
es
cwtl
stc
xor
imul
jecxz
push
andb
xor
cmp
push
sbb
aas
sub
sahf
lahf
cmp
test
lcall
int3
addb
divl
fstps
and
repz
pop
mov
jmp
dec
in
mov
push
cltd
mov
mov
mov
sub
push
jmp
fs
ficomps
cli
shr
sahf
pop
cwtl
push
aas
xchg
xor
pop
cmp
fnstenv
imul
adc
std
mov
rorl
les
sbb
lcall
nop
xor
pop
pop
je
mov
pop
push
mov
mov
mov
cmp
fwait
je
arpl
jle
add
das
hlt
lock
addb
in
jmp
sbb
lods
int3
popa
ret
lcall
mov
jl
aas
mov
popa
repnz
xchg
pop
push
lods
sbb
pop
insl
jl
ror
cmpl
inc
cmp
sti
sbb
add
in
cli
mov
decl
pusha
test
mov
gs
in
ds
insl
sub
repnz
xor
mov
enter
jns
arpl
or
in
add
fstp
cmpsl
cli
movsl
xchg
lea
adc
cmpb
add
mov
mov
lea
in
mov
jg
cli
adc
jle
aam
mov
push
addl
icebp
jae
ja
xor
dec
pop
sti
pop
jge
in
aas
bound
xchg
push
mov
xor
cltd
sub
cwtl
fldcw
xchg
cmpsl
mov
sub
adc
imul
sbb
fistps
jbe
cmp
andb
push
idivb
ss
xor
rol
adc
loop
push
or
clc
pop
mov
movsl
add
pop
xchg
sbb
adc
and
jns
test
hlt
jne
push
push
mov
bound
bound
popa
or
and
aaa
sub
pop
or
jl
stos
sbb
addr16
cmp
mov
jl
sbb
fisttps
clc
mov
popf
shlb
mov
mov
xchg
lret
jp
xchg
scas
xchg
imul
insl
das
lock
shlb
pop
fwait
popa
dec
inc
rclb
ret
jns
arpl
adc
push
push
leave
jle
mov
cmp
jns
outsb
mov
add
and
cmp
das
cmp
ljmp
lret
xchg
xor
jle
out
adc
dec
lock
leave
data16
jecxz
jns
jns
xchg
and
adc
and
xchg
dec
cwtl
test
adc
bound
loop
or
ffree
test
iret
test
mov
sbb
in
imul
sbb
nop
lods
sbb
jbe
sub
or
sub
out
cmpl
cwtl
and
add
sub
gs
gs
cmp
out
xchg
out
pop
mov
mov
scas
test
rcr
mov
xor
jno
xor
mov
mov
and
cmp
mov
out
aas
divl
push
sub
mov
xor
push
cwtl
jb
aas
enter
sub
popf
test
mov
fnstcw
sub
jmp
aaa
mov
mov
lods
pop
addl
inc
or
scas
jno
adc
pop
scas
push
or
inc
into
and
int
mov
push
pushf
sti
mov
adc
xor
int3
out
aam
insb
lret
jb
mov
pop
and
gs
faddp
and
das
sbb
cmp
out
in
adc
movsl
cwtl
test
iret
fdiv
cmpsb
popa
pusha
jbe
xchg
mov
mov
jbe
js
cltd
cwtl
rcrl
lret
push
pop
repz
adcl
add
scas
repz
xor
fwait
dec
int3
bound
icebp
pop
jbe
fcmove
dec
add
add
es
xchg
out
stc
mov
dec
push
xchg
mov
jl
mov
adc
ds
xor
pop
dec
and
add
xchg
mov
jl
and
orl
cs
cmp
cltd
lods
dec
bound
sub
les
push
fdivl
mov
mov
pop
cmpsb
or
test
xchg
sbb
popf
pop
mov
test
into
outsb
jne
fdivrl
xchg
adc
jecxz
in
mov
cmp
loopne
pop
mov
add
roll
dec
ss
cmpsl
add
push
fisubl
ljmp
inc
mov
or
sub
test
lds
dec
aam
push
inc
in
std
xor
lods
mov
sub
mov
and
pop
dec
cmp
sahf
push
in
jge
mov
mov
pop
push
leave
sar
jb
repnz
loop
cwtl
push
sbb
xchg
sbb
std
xchg
or
sbb
div
fcmovnu
ret
inc
inc
dec
lds
movl
jge
and
popf
xlat
pop
popa
decl
xchg
scas
testl
in
test
lret
fcoml
repnz
mov
lahf
add
cmp
adc
cld
sarb
sbb
sbb
xor
sbb
cmpsb
add
sub
insl
sbb
paddd
and
in
in
jb
push
inc
mov
cltd
sbb
lods
mov
push
push
and
in
shlb
loop
jns
pop
lea
pop
test
sbb
cmp
cmp
sbb
jb
xor
adc
inc
xchg
flds
pop
jp
outsl
mov
mov
call
jl
xor
mov
sub
pusha
xchg
popl
push
ror
test
jo
or
jmp
aad
into
pop
or
dec
xchg
sbbl
push
out
inc
jg
mov
dec
rcl
sbb
sub
aaa
add
and
arpl
ss
cmpsb
jne
xor
cmp
jge
cltd
mov
dec
pushf
mov
repz
ja
push
scas
daa
lea
adc
jno
dec
cmpl
xor
jns
popa
and
sbb
push
ret
push
mov
push
add
js
stc
lods
mov
je
push
flds
lret
test
movd
fnstsw
jle
jbe
xor
add
aad
add
jp
enter
pop
sti
add
or
xchg
jle
or
loopne
cmp
xor
cmpl
hlt
clc
and
mov
pop
imul
je
xlat
push
shrl
loope
sub
push
and
jmp
outsb
sub
subl
xchg
bound
dec
aas
pop
mov
dec
cli
push
aaa
xor
xchg
jge
lock
or
filds
shl
dec
jmp
imull
xchg
lock
mov
bound
push
mov
cmp
aam
lock
mov
sub
test
mov
leave
sbb
lods
xchg
add
mov
sti
es
dec
loop
lret
leave
xorb
mov
mov
sub
inc
add
pop
sbb
mov
push
loop
cmpsb
cmp
repz
pop
jecxz
pop
push
push
adc
and
imul
pop
xor
cmp
dec
stos
mov
dec
shlb
push
test
push
push
jns
and
hlt
arpl
outsl
test
push
push
je
pop
push
dec
or
insb
mov
aam
or
hlt
add
scas
lret
mov
pop
mov
roll
aad
sub
daa
stos
xor
and
and
xchg
fs
and
dec
hlt
les
dec
addr16
push
dec
pop
dec
mov
nop
pop
rcl
leave
mov
or
dec
and
or
xor
sahf
or
mov
ja
mov
add
pop
and
xchg
int
mov
popa
xchg
pop
sub
sub
js
insl
out
shlb
outsl
mov
lds
sub
adc
aaa
inc
test
push
sbb
fidivs
lds
jp
push
mov
and
mov
aad
icebp
mov
out
repnz
shlb
push
repnz
xchg
mov
or
popf
jl
outsb
ds
pop
repz
nop
push
das
cmpsl
mov
jp
mov
mov
mov
aas
cs
sbb
stc
xor
pop
cmp
stos
rcll
and
cli
xor
adc
jo
cs
cmp
shll
fs
nop
xchg
js
sbb
enter
pop
and
rcrl
clc
mov
mov
jae
jb
shr
outsl
cli
dec
pop
inc
addl
movsb
nop
test
push
rcl
adc
mov
push
adc
jno
mov
shl
pop
shlb
mov
sti
jge
pusha
and
ljmp
jecxz
jl
test
mov
fs
push
jge
push
ss
test
in
mov
jo
lcall
and
push
pop
mov
loop
in
lds
xor
insl
ret
imul
aam
mov
enter
je
adc
adc
lahf
push
push
mov
frstor
lea
dec
dec
imul
enter
xchg
movsb
push
xchg
cmp
adc
test
out
bound
mov
test
std
popf
movsl
aaa
mov
lahf
pop
and
jle
jge
cmp
xchg
cmp
aad
fs
mov
xchg
push
xor
scas
add
in
movsl
mov
inc
test
arpl
mov
or
test
push
jp
cmp
mov
pusha
jmp
sbb
andb
in
mov
int3
ds
mov
mov
mov
repnz
sbb
lcall
mov
hlt
fnstsw
add
ds
inc
lret
repz
xchg
inc
iret
pop
mov
lock
dec
sbb
into
icebp
ja
daa
leave
mov
pop
inc
mov
sbbb
cli
add
rcll
pop
pop
fs
and
aad
fwait
mov
es
std
aad
xor
aas
mov
sbb
or
or
xorb
in
mov
out
sub
lods
std
cltd
inc
sub
mulb
lea
adc
xchg
leave
cmpsb
pop
sub
fcompl
pop
dec
gs
sti
adc
mov
push
insb
xchg
stc
lods
mov
int3
dec
std
mov
daa
inc
sti
arpl
sbb
lahf
inc
jmp
xchg
or
mov
test
cltd
mov
pop
lret
add
punpckhdq
xchg
addr16
das
aad
orl
faddp
mov
loope
jecxz
mov
mov
fldcw
lods
repnz
insl
pusha
lahf
pop
jnp
xchg
xor
icebp
cld
test
aaa
mov
dec
pop
dec
test
xor
dec
inc
push
inc
cld
sub
dec
jp
cmpsb
cmpsl
xrelease
xchg
xor
sub
ss
pusha
jmp
cmc
ja
divl
and
xchg
mov
lcall
inc
aas
bound
lods
sub
js
sbb
stos
aam
cvtps2pd
scas
jae
hlt
or
shr
mov
inc
cli
mov
lods
and
inc
cmp
jno
pop
shlb
shl
clc
test
sub
mov
stos
sbb
and
sbb
cmp
jle
lea
lret
aad
jmp
xchg
scas
insb
sbb
jno
jno
mov
icebp
aad
mov
adc
cwtl
fimuls
sti
sti
jmp
add
mov
jge
add
jl
mov
xor
sbb
push
and
xchg
out
jo
sbb
fildll
ss
sbb
xchg
or
in
xor
sbb
jns
cltd
iret
cmc
sub
and
inc
pusha
movsb
mov
mov
cmp
cmp
outsb
out
loopne
popf
dec
mov
sub
pusha
mov
xor
out
movsl
pop
mov
sub
dec
fildll
pop
rep
sub
jle
fs
mov
xor
jno
or
mov
sbb
mov
fucomp
stos
push
sub
sbb
push
push
test
mov
sbb
dec
xchg
adc
push
add
mov
outsb
mov
xchg
mov
mov
mov
mov
fdivp
nop
fdivs
jg
les
call
and
mov
cmc
cmp
pop
adc
bound
dec
mov
gs
fs
psllq
mov
popf
jmp
aas
shll
push
loope
add
repnz
xchg
mov
dec
mov
loopne
ja
mov
lea
sbb
jecxz
stc
test
aad
mov
or
test
sbb
jmp
add
mov
scas
ret
int3
nop
pop
scas
mov
or
ja
cld
cmp
imul
movsb
mov
mov
aad
bound
clc
stc
xchg
mov
repz
mov
push
inc
sub
cltd
ds
mov
decl
dec
repnz
sub
jns
insb
outsl
sub
jns
sub
aad
push
nop
push
int3
sub
repnz
cmp
aad
jae
jg
xor
mov
call
outsb
aaa
pop
fcompl
push
xchg
pop
and
insb
shl
mov
push
push
inc
jmp
aaa
lods
sbb
div
in
sarb
jmp
xor
jl
sub
push
pop
in
mov
je
jno
movsl
scas
pop
fimuls
shrb
ja
add
mov
out
nop
pop
lcall
adc
jae
fs
mov
shrb
nop
addl
mul
cli
call
inc
in
dec
cmp
mov
xchg
jae
stc
sbb
lret
cmp
sub
arpl
stos
pusha
ret
repnz
addr16
movl
pop
mov
mov
push
cmpsl
sub
cmc
movsb
fsubr
popf
pop
push
sub
fptan
xchg
sub
ds
dec
ficompl
sub
pop
inc
pushf
pushf
test
or
cmp
jb
fsubr
dec
les
pop
jmp
mov
xchg
pop
pop
mov
js
test
or
clc
mov
mov
pop
test
push
sub
add
aad
push
mov
dec
and
dec
fidivrl
nop
ret
data16
mov
enter
cmp
cli
or
mov
fdivr
dec
xchg
xor
or
enter
sub
sub
les
sbb
fwait
push
mov
test
js
aad
in
jne
out
jno
out
jne
rdpmc
mull
push
insl
mov
pop
jnp
add
sub
pop
mov
or
cmc
int3
push
jecxz
ljmp
xchg
fildll
out
lcall
push
and
scas
dec
jl
ror
ret
push
inc
stos
lea
ljmp
mov
pop
cmc
adcb
pusha
call
ret
ja
pop
lret
nop
pusha
inc
xchg
stc
xchg
inc
aaa
and
orl
push
psubsw
sub
mov
pop
sti
out
aaa
push
dec
cmp
sub
fildll
aas
pop
aas
int
insl
dec
jge
shlb
fldcw
stos
sbbb
mov
lret
jmp
imul
fwait
pop
and
inc
pusha
mov
xor
dec
sahf
cmp
pop
mov
shr
mov
or
nop
addr16
jge
inc
cmp
aaa
lock
insl
cmp
cmc
mov
fwait
dec
and
lea
sub
mov
mov
in
pop
push
lods
mov
rcrb
add
inc
js
cmp
outsb
push
inc
inc
fwait
xchg
sbb
movl
sub
xchg
stos
push
xor
popf
fwait
in
les
cmp
arpl
lcall
push
xor
inc
add
fldln2
add
leave
push
inc
in
push
icebp
das
mov
xor
push
xlat
scas
pushf
pop
inc
int
mov
lret
adc
jmp
leave
push
jno
out
and
inc
mov
push
int
fsubs
adc
inc
repnz
inc
ljmp
fsub
ret
jns
enter
mov
dec
fwait
movl
out
sub
xchg
subl
enter
jl
repnz
in
push
popa
test
mov
inc
lods
push
cli
outsl
mov
roll
push
push
push
fxch
push
mov
jle
and
andl
cld
xor
jb
cltd
pop
jns
imul
jl
shl
mov
divl
loop
shr
jb
pop
ror
outsb
mov
lret
or
imul
push
shlb
cmp
insl
sbb
xor
mov
outsl
jg
xchg
add
push
push
mov
mov
mov
mov
jns
mov
push
inc
ja
icebp
mov
xchg
imul
adcl
int
xor
addr16
es
test
push
shrb
popf
mov
stos
idivb
push
aam
add
je
fdivs
punpckldq
js
sahf
inc
sahf
test
dec
dec
pop
cli
loop
rorl
jl
push
mov
inc
aad
mov
inc
mov
jae
js
cmpsb
adc
inc
xor
jp
nop
sub
jl
add
push
mov
xor
test
bnd
lods
sbb
mov
inc
sti
xchg
andb
insb
inc
fidivs
push
pop
sbb
xchg
dec
cli
mov
push
pop
and
inc
fcoml
fmuls
pop
push
lods
dec
leave
and
mov
xchg
and
mov
in
loopnew
push
sahf
jae
cmp
mov
test
test
enter
ljmp
in
fs
pop
mov
lea
mov
cmpsb
push
or
lea
mov
fs
jecxz
pop
push
insb
cltd
add
cli
inc
mov
cmovg
push
pop
pop
jmp
test
mov
adc
cmovae
mov
mov
jns
in
sbb
ret
jae
repnz
iret
movsb
cmpsb
mov
fstpl
loopne
mov
stos
adc
push
jbe
push
ja
mov
jmp
popf
fstps
enter
sbb
inc
pop
ss
in
mov
in
negb
inc
mov
inc
daa
fisttpll
mov
xlat
shlb
jno
fldcw
and
or
mov
sub
aad
mov
inc
lcall
adc
sarl
push
xchg
das
xchg
nop
pop
adc
fisubrl
sub
sti
lock
or
aas
mov
fnsave
sbb
fs
stos
stos
push
adc
movsb
push
int
ljmp
mov
and
xlat
arpl
dec
dec
push
aaa
lods
cld
jle
pop
or
popl
test
lcall
dec
jae
push
out
scas
inc
add
daa
sbb
in
push
push
aas
testl
push
in
pop
pop
inc
push
fsts
loop
mov
or
pop
mov
movsb
sbb
call
and
mov
into
mov
push
add
mov
lea
movsb
mov
addr16
aam
mov
sub
inc
mov
test
call
sbb
scas
pusha
bound
fucomi
inc
or
adc
pop
and
lret
cmpl
lods
jno
fwait
aas
in
xlat
inc
xor
inc
bound
inc
clc
xchg
mov
inc
cwtl
or
and
leave
push
ficomps
mov
lret
mov
sbb
dec
repz
pop
std
add
mov
mov
jo
fwait
nop
xchg
cmpsl
or
sub
jg
sahf
out
push
mov
adc
inc
inc
adc
fmulp
mov
inc
dec
iret
cmpsb
sbb
mov
aas
add
and
dec
xor
mov
ss
ds
xor
aas
pop
std
repnz
std
jp
xchg
pop
pop
dec
stc
inc
or
add
mov
inc
out
lea
push
sub
mov
sbb
sbb
push
scas
inc
ror
jno
pop
push
pop
push
enter
or
mov
xchg
mov
push
gs
xchg
push
aad
ds
mov
cmp
mov
sbb
add
sub
push
push
lret
pusha
movl
pop
pop
add
ja
lods
rcrb
and
out
push
gs
shl
mov
push
test
stos
xchg
test
push
jg
aas
imul
aaa
enter
jb
cmpl
push
and
mov
pop
setb
add
mov
lret
iret
mov
std
int
mov
mov
sbb
stc
mov
inc
int3
xchg
push
add
cmpl
sbb
jns
out
lcall
dec
pop
jmp
fsubl
dec
fisttpl
adc
dec
loopne
dec
add
insb
sarb
or
mov
mov
adc
mov
jmp
lret
iret
pop
mov
bound
push
pop
aaa
dec
xor
inc
mov
xor
jle
pop
jbe
std
test
pop
adc
out
in
lds
lea
jne
sbbl
andb
jmp
xchg
fs
jo
movsb
xchg
mov
icebp
andb
mov
loop
xor
sub
sub
sbb
push
xchg
or
sbb
cmp
mov
xchg
data16
mulb
fwait
ret
inc
cld
mov
fsubrl
adc
mov
in
sarb
std
or
fwait
mov
out
scas
int3
jl
sbbl
mov
out
cwtl
mov
xchg
in
js
fsubr
and
push
adc
sti
xor
mov
xchg
pop
movq
test
add
fwait
xchg
imul
popa
sbb
pop
loop
in
push
test
push
xchg
ss
pusha
loope
movsl
faddp
add
inc
jmp
pop
stos
xor
mov
repz
dec
adc
and
mov
mov
addr16
addr16
jns
fsubrl
jns
xor
je
adc
add
imul
fstp
arpl
mov
xchg
pop
sbb
fmuls
mov
inc
movsb
jl
mov
mov
push
in
jle
mov
adc
je
in
cmp
pop
enter
push
push
insb
mov
out
pop
xchg
adc
pop
jecxz
push
addb
lock
mov
popa
push
xor
insb
adc
sbb
add
mov
pop
sbb
lahf
cmp
repz
cmp
push
in
inc
mov
add
stos
test
pop
and
int
int
aas
ljmp
xor
in
lret
push
push
pop
sub
jmp
mov
out
fisubrl
imul
rolb
or
or
icebp
fsts
es
lds
mov
fists
mov
mov
bound
and
lret
pusha
jmp
sti
pop
mov
adc
inc
orb
pop
add
add
xor
lods
fisubl
test
cltd
pop
jno
fisubs
ljmp
mov
add
mov
sbb
add
in
outsl
fimuls
mov
mov
xor
push
int3
add
xor
out
sbb
mov
inc
adc
and
out
mov
dec
mov
jmp
mov
jne
mov
pop
lret
push
mov
iret
mov
loope
rclb
sbb
cmp
sbb
call
mov
in
adc
lock
popf
sbb
sbbl
fstl
jge
sahf
lret
imul
fwait
and
xchg
inc
jo
cmp
je
pusha
add
sbb
jp
aam
mov
sbb
sbb
jo
addb
sbb
push
xchg
insb
pop
xchg
dec
and
repz
and
mov
jnp
mov
pop
mov
push
sub
call
mov
in
mov
push
cmp
lods
or
xor
dec
adc
hlt
jns
jge
cmp
or
cmp
xor
jmp
mov
dec
xchg
xchg
inc
push
push
mov
xor
push
xchg
xchg
iret
test
jo
mov
pushw
ljmp
cmpsl
xchg
ret
push
push
das
sbb
inc
movsl
push
and
enter
scas
mov
and
dec
and
xchg
andl
cmp
and
jnp
call
jo
sbb
adcl
sub
push
repz
pop
outsb
lds
scas
sub
push
xor
pop
add
pop
stos
or
iret
inc
inc
sub
add
xor
push
cwtl
push
fwait
xchg
mov
daa
pop
mov
rcrb
sahf
xchg
pop
mov
fistps
push
rcrl
ret
leave
xchg
jns
or
push
outsl
data16
mov
test
add
data16
lock
fs
dec
lods
mov
mov
xchg
cmp
pop
sub
adc
fildll
clc
out
iret
sbb
mov
add
sbb
call
movsl
jns
sti
and
jo
xor
lret
lods
push
into
jecxz
fstpt
push
cmp
popf
pushf
jmp
and
loop
nop
fcompl
pop
jl
rorl
mov
push
repnz
lds
divl
fildll
or
push
and
clc
mov
mov
xchg
cs
mov
fldl
fisubrl
sub
pusha
subl
mov
sbb
popa
mov
pushf
adc
mov
fs
jl
pop
mov
test
lods
fadds
push
cmp
cmp
nop
cltd
cmc
push
mov
test
outsb
stos
test
fisttps
xchg
jl
es
fildll
sti
push
xchg
jmp
inc
mull
mov
in
push
lret
cmc
in
xchg
nop
inc
push
fcomps
or
dec
push
mov
pop
mov
inc
ret
mov
popa
xor
rcl
ret
xchg
les
mov
mov
mov
push
fistpl
loopne
and
nop
jnp
cmp
call
stos
mov
inc
pop
fmull
int
pop
mov
cmpsb
sbb
scas
mov
outsb
nop
jle
sbb
movsb
dec
fucomip
inc
ret
popa
sub
cld
mov
insl
test
mov
out
or
pop
das
mov
jmp
out
out
mov
mov
daa
daa
les
dec
dec
cmp
mov
sarb
int
mov
add
or
popf
mov
mov
movsl
mov
lds
fwait
xlat
rcrl
arpl
or
mov
stos
in
dec
push
das
pop
adc
push
xchg
lods
jmp
dec
enter
cmpsl
push
push
fwait
lcall
jge
gs
fcomp
cmp
dec
inc
out
sub
mov
xchg
stc
cmp
add
pop
fs
enter
dec
xchg
sbb
vandnps
and
rcrl
dec
jecxz
ss
push
and
xor
inc
pop
sub
add
rcr
pop
jl
adc
iret
rcll
dec
or
ja
cmp
test
sbb
xchg
lods
cmpsl
xchg
cmp
adcb
mov
cmp
push
dec
mov
dec
mov
outsb
push
sahf
jae
xor
aas
ds
fiaddl
mov
jnp
pop
xchg
and
icebp
cltd
sti
andb
push
jg
into
and
mov
and
jnp
fisttps
scas
push
cmp
xchg
je
mov
add
push
add
loop
hlt
xchg
ja
gs
mov
add
in
or
push
sub
clc
hlt
out
test
mov
frstor
mov
inc
inc
sub
imul
cmp
add
rcrb
shrl
or
xchg
out
push
cli
cmp
mov
and
push
call
loop
sbb
lret
pop
cmp
push
mov
call
inc
stos
out
fwait
mov
test
pusha
jmp
aad
adc
jle
sub
lahf
mov
sub
pushf
loopne
xor
xchg
adc
pop
dec
mov
sub
out
add
negb
lock
cwtl
out
sub
ret
pop
sub
imul
mov
out
xchg
pop
movsb
inc
cmp
cmp
pop
loop
jp
mov
fisttpll
inc
xchg
out
push
adc
in
mov
cmp
in
pop
jae
lods
add
adc
icebp
or
ss
dec
or
test
sahf
inc
pop
jae
dec
aas
jo
jb
insl
outsl
outsb
vcvttps2dq
andl
adc
xor
addb
insb
fsubs
mov
cmp
xor
push
jae
sub
sahf
cmpsb
sbbb
add
xor
pop
loopne
or
or
xor
ljmp
jmp
out
jnp
insb
hlt
ret
adc
stos
dec
mov
jmp
mov
mov
ds
pop
clc
xor
jg
mov
out
cmp
mov
stos
shll
sub
or
jl
xchg
out
xor
ret
int3
mov
jmp
push
int
dec
fisttps
mov
addr16
inc
mov
mov
hlt
mov
popa
int
subl
inc
dec
sbb
fiadds
aaa
xchg
and
ret
ficomps
test
adc
xor
cmp
stos
push
cld
fadd
cmpl
sub
add
stos
or
test
push
stos
mov
fwait
mov
mov
rorl
mov
fisubrs
pushf
neg
popa
pusha
imul
sbb
rcll
cli
sti
insb
add
xor
into
xchg
pop
mov
sarl
mov
ret
pop
or
faddl
sub
test
in
pop
scas
push
pushf
fsts
dec
cmpsb
push
xchg
adc
or
lods
adc
fiaddl
les
push
mov
and
pop
arpl
dec
or
les
in
testl
pop
sbb
std
scas
push
nop
mov
push
jg
and
sbb
or
dec
jmp
ljmp
arpl
push
mov
pop
lret
mov
stos
mov
mov
cmp
pop
fdivl
pop
flds
xor
sbb
sbb
xchg
mov
aam
in
mov
nop
mov
mov
jl
cmp
xchg
mov
loopne
fimull
in
cmp
scas
push
stos
push
mov
movsb
xor
mov
icebp
inc
int3
dec
and
fistpll
inc
call
fisubl
and
pushf
pop
sbb
lock
in
movsl
js
cltd
inc
sub
push
andl
and
dec
mov
test
sub
int3
push
mov
jmp
sub
lret
jbe
les
adc
aas
sub
or
das
ret
adc
enter
mov
dec
add
dec
push
jl
mov
mov
mov
std
call
push
cld
loope
daa
sahf
mov
shll
cmp
cli
jbe
fs
test
add
clc
sub
push
sub
es
sub
out
fcoml
insl
push
out
outsl
test
cltd
xchg
cwtl
push
mov
mov
add
mov
mov
outsb
sahf
pop
pushf
out
out
or
scas
popa
aas
push
lret
jnp
cmpsl
scas
sahf
xchg
mov
mov
mov
xchg
mov
and
das
fidivrs
pop
stos
test
fbld
insb
and
sub
jle
jo
inc
leave
int3
sbb
pop
pop
into
lods
mov
add
in
shlb
repz
sub
xor
add
xor
sub
pop
inc
jge
dec
jb
stos
jne
fs
ja
jns
outsl
test
mov
insb
das
cmp
imul
in
orb
or
jge
push
aaa
cs
jg
cmp
xchg
mov
fsubs
add
jb
rorb
cmp
xor
lds
cmp
dec
in
push
mov
iret
xlat
shl
jp
push
inc
shrb
xor
xchg
aad
mov
push
out
shr
mov
add
jge
push
lock
ficomps
das
pop
jmp
cltd
or
in
jmp
jns
mov
xchg
cli
ret
xor
push
aas
dec
xchg
push
mov
es
mov
cmp
addr16
cmp
inc
notb
adc
push
sbb
rolb
and
sub
mov
call
orb
xchg
mov
rcrb
pop
mov
popf
movsb
test
nop
push
xor
jns
roll
ds
sbb
add
mov
andb
mov
jno
pop
cwtl
xor
jb
mov
cmp
dec
ljmp
cmpsb
shrl
sub
pusha
mov
lods
out
fsubrp
mov
in
pop
and
jne
pop
xchg
je
dec
push
and
fstl
and
mov
clc
xor
xor
enter
add
add
xchg
pop
mov
cmp
fs
ret
dec
sahf
iret
in
cmp
mov
cs
adc
jae
lahf
jge
mov
int3
fcmove
insb
lea
dec
push
and
sub
les
xchg
dec
mov
adc
or
mov
pop
ja
jecxz
inc
xchg
mov
and
xchg
incl
cmp
gs
js
dec
xor
and
cmp
jp
xor
dec
xchg
xlat
icebp
loop
lcall
mov
in
sbb
aad
pushf
pop
sbb
dec
sbb
xchg
imul
add
pop
aaa
adc
test
test
cld
lahf
and
ffree
pop
in
fldcw
pop
inc
cwtl
cmp
jbe
xlat
cmp
mov
pop
andl
cmp
dec
stc
mov
fs
mov
pop
je
aad
insb
or
adc
aam
or
push
xchg
add
push
mov
test
addr16
decl
pop
repz
outsl
add
sub
pop
pop
sbb
mov
fbld
mov
int
loop
sbb
mov
jno
lock
xchg
add
jne
faddl
ja
repz
mov
ljmp
xchg
adc
repnz
jp
aam
mov
ficoms
cmp
and
xor
inc
cltd
mov
mov
test
adc
push
xor
andl
pop
jle
cmc
sbb
sarb
gs
idivb
ret
dec
mov
mov
sub
ret
sbbl
into
pushf
lcall
loopne
cmpsl
cmpsl
pusha
push
sbb
push
test
ja
sbb
aas
lahf
mov
lds
push
mov
das
addr16
lds
xchg
cs
repnz
xchg
mov
jne
movsl
xlat
lods
jp
mov
sahf
imul
imul
mov
mov
lahf
cwtl
cmp
xchg
fstpt
int
call
fists
stos
lods
mov
push
inc
jo
in
adc
sbb
or
cmp
rcrl
push
or
ror
pop
subb
cmp
inc
jmp
int3
icebp
xchg
sarb
fisubs
repnz
xchg
mov
sbb
fs
lahf
dec
shlb
cmp
xlat
mov
mov
mov
imul
add
inc
neg
movsl
enter
clc
jns
mov
dec
testl
pusha
mov
and
mov
mov
repz
rcr
dec
ret
jbe
popa
pop
mov
and
jnp
nop
aas
movsb
bswap
cmp
call
sbb
out
pushf
stos
ror
jle
jbe
insl
push
out
lds
fidivrs
fmulp
mov
adc
cmp
xchg
sbbb
in
pop
jnp
shll
rorb
sbb
xchg
and
aad
mov
shll
test
vpandn
mov
stc
or
mov
jecxz
push
in
imul
mov
pop
sbb
scas
push
mov
mov
in
xchg
xor
push
fcoms
mov
stos
lcall
push
lods
outsb
leave
sti
fucomi
lods
stc
loopne
mov
in
idivl
fs
mov
movsl
imul
cmp
int3
push
mov
xor
mov
std
cmp
sbb
add
frstor
call
pusha
imul
add
loop
leave
inc
in
and
adcb
xchg
push
insl
dec
cmc
sub
dec
jae
iret
fdivrs
cmpsb
or
imul
adc
addr16
jb
inc
jp
fs
cwtl
sub
dec
cmp
or
nop
jge
out
jnp
mov
jnp
cmp
sub
pusha
es
lea
mov
cmp
xor
push
dec
adc
in
fisttps
mov
jp
leave
aam
xchg
pop
ss
arpl
jno
les
imul
movsl
stos
in
mov
ret
stc
sub
push
aam
popf
out
fwait
ja
xchg
jl
shrl
jnp
push
out
mov
sahf
push
push
incb
or
xor
ja
or
repz
lea
pop
add
mov
jbe
mov
xchg
int
ja
and
repz
scas
mov
fwait
dec
xchg
xor
mov
sbb
pop
icebp
fwait
sbb
and
mov
pop
sub
lods
pop
pop
push
clc
cmpsb
fisttpl
add
ja
add
je
push
xor
push
sub
inc
jae
stos
leave
push
mov
fucomip
pusha
inc
cmp
dec
cmp
and
lock
adc
and
mov
fisttpl
scas
mov
sub
out
dec
jno
lods
testb
mov
aad
jns
sbb
fs
mov
loopne
mov
jp
aam
scas
xchg
repnz
fimuls
pop
pop
push
pop
call
sbb
jle
inc
in
xor
cli
fsubl
test
arpl
std
mov
sub
push
jne
pop
mov
mov
gs
xlat
lock
fsubr
hlt
pusha
test
shrb
adc
vsqrtsd
lcall
enter
scas
popa
fisttps
and
test
cmpsl
test
cld
adc
pop
dec
lret
dec
imul
or
js
andl
cltd
push
xchg
sbb
and
aad
cwtl
ret
add
mov
mov
mov
iret
stos
cmp
lret
inc
lahf
fs
xor
push
cmc
push
sbb
xchg
sbb
stos
push
mov
mov
iret
inc
aad
mov
jmp
mov
in
hlt
ret
addr16
or
movsb
inc
aad
mov
mov
imul
jae
push
or
add
inc
sub
lret
inc
sbb
dec
das
sti
push
dec
cmp
push
dec
mov
cmp
xor
fldl
ret
xchg
push
sbb
dec
leave
push
and
sub
cmc
movsb
scas
mov
sbb
push
xchg
cmp
aad
jae
pop
sbb
add
inc
sbbl
iret
sbb
inc
inc
call
xor
push
mov
test
sar
xor
xor
inc
sub
outsb
xchg
xor
psllq
mov
sub
fcmovnb
or
xor
stc
icebp
mov
push
inc
adcb
push
lret
pop
sub
lock
mov
mov
stc
dec
cmc
fldt
addr16
aaa
dec
push
mov
adc
or
sbb
xlat
push
roll
leave
jbe
shll
jbe
push
mov
push
mov
adcl
push
cmp
pop
push
sbb
cmp
int3
xlat
hlt
xor
sub
loop
pop
lea
jmp
insb
mov
repnz
in
adc
mov
js
push
cmp
imul
sahf
jne
fbstp
jg
movsl
push
xlat
and
add
gs
lods
fwait
xchg
je
add
js
add
ds
scas
mov
insb
push
cld
aaa
pop
lods
subb
outsb
jb
test
add
dec
addr16
push
pop
and
mov
mov
inc
jae
aas
mov
push
std
gs
test
loop
adc
xchg
cmpsb
sti
hlt
mov
lret
mov
sbb
data16
xchg
push
sbb
fidivl
push
aad
fnstcw
sub
iret
dec
cltd
lods
ret
loopne
adc
ret
mov
push
xchg
cmpsl
loop
imul
mov
notl
xor
stc
push
popa
in
or
into
xor
shll
lcall
jecxz
inc
and
popa
jl
ret
cmc
xchg
jecxz
dec
adc
adc
jge
pop
xchg
inc
ja
or
loop
cmc
jnp
push
pop
test
jb,pn
push
jb
sbb
sbb
and
mov
dec
les
xchg
pop
xlat
dec
iret
xor
test
inc
stos
data16
mov
pop
add
push
lods
inc
arpl
cmp
rcrl
test
sti
bound
test
sub
repz
rcr
dec
decl
rcr
sbb
popf
jge
xor
mov
gs
addr16
cmp
fimuls
fsubr
push
call
xor
inc
sub
push
push
cs
mov
xor
loopne
push
imul
jne
clc
push
lods
xor
jb
int
ror
int
jae
mov
mov
out
mov
xor
jl
stos
ss
std
and
xor
sub
cld
mov
dec
or
xchg
and
mov
pop
sahf
in
aas
xchg
aad
mov
shl
cmp
adc
dec
iret
mov
cltd
sbbb
mov
push
cmpsl
stc
inc
xchg
push
mov
cmc
push
dec
and
sbb
cmp
data16
add
jnp
or
cmp
jg
fstps
mov
push
mov
xchg
xlat
push
jg
rolb
fcoms
dec
push
jnp
das
addl
xor
push
sub
test
leave
jmp
add
sub
sbb
sub
test
xchg
inc
lea
repz
lret
or
aad
cmp
lcall
push
mov
lods
ss
iret
decb
jmp
into
pop
enter
div
cmp
fucom
and
jg
daa
ds
pusha
or
adc
mov
mov
insl
pop
cmpsl
cs
sahf
lock
jmp
cltd
dec
push
sbb
xchg
mov
je
jae
fiadds
nop
out
cmpsb
std
cmc
rorl
jbe
cmp
adc
mov
test
add
push
lods
sub
add
je
mov
das
das
pop
fnsave
sbb
stos
jge
jo
add
push
fwait
aaa
mov
popf
push
rcll
mov
lea
into
mov
imul
push
xchg
mov
xchg
xor
sub
push
movsl
scas
lock
xchg
scas
xor
jg
push
and
aad
dec
mul
lock
pop
add
test
xor
movsl
enter
std
sbb
add
pop
xchg
test
repz
and
jo
xchg
xor
outsb
add
xchg
mov
jbe
std
or
add
adc
pop
lret
xor
jecxz
pop
pop
dec
outsb
mov
pop
popf
xchg
mov
or
in
test
out
pop
js
and
test
jl
cmc
jae
mov
pop
mov
imul
lret
mov
adc
and
sub
or
push
inc
or
in
scas
int3
idivb
pop
test
lahf
negl
scas
push
pop
repz
cmc
loopne
daa
mov
xchg
add
gs
adc
pop
lock
cs
mov
push
lds
sub
push
sub
mov
adc
int
incl
sub
bound
mov
movsb
push
inc
mov
sbb
in
in
scas
stos
cmpsl
or
shl
pop
push
or
mov
mov
push
test
jl
popa
out
cmp
lock
test
addr16
and
and
jne
fists
shll
push
add
add
gs
popf
push
scas
adc
cli
repz
mov
test
mov
jle
jle
pop
mov
imul
stos
sub
sub
es
push
add
int
inc
jne,pn
ds
adc
jecxz
ljmp
push
pop
xchg
cmp
xlat
test
mov
add
lods
scas
fldt
xchg
mov
add
imul
icebp
aaa
insl
clc
mov
dec
xor
negl
test
cmpsl
ret
imul
mov
inc
dec
addr16
sti
bound
std
adc
pop
cmp
inc
and
sbb
int3
sahf
inc
cmp
add
mov
int3
aad
mov
sbb
ljmp
sbb
mov
mov
pop
sub
ret
inc
mov
jmp
push
loop
or
imul
xchg
mov
iret
jmp
inc
imul
ffree
jmp
outsl
movsl
lods
push
mov
lahf
filds
movsl
and
andb
dec
pop
test
inc
ss
mov
xlat
add
inc
fisttpll
pop
or
push
fs
pop
sti
mov
and
pop
xor
ds
and
or
clc
sti
insb
arpl
sbb
and
and
loope
repz
jmp
popa
push
lods
cld
mov
mov
dec
adc
jp
movsl
and
test
hlt
inc
mov
scas
ljmp
dec
fadds
lret
jbe
fsts
gs
mov
sub
test
push
std
mov
insl
repnz
fs
cmp
sub
inc
imul
sub
push
leave
mov
mov
out
addr16
jl
jb
cmp
mov
adc
dec
mov
idivb
pop
mov
mov
push
dec
popa
das
daa
lret
pop
lods
arpl
and
mov
or
popa
mov
sub
jae
scas
fs
icebp
xchg
lcall
or
mov
pop
lcall
mov
loopne
or
adc
aaa
xor
xor
push
cmp
lods
test
pushf
jb
pop
aam
call
cli
mov
pop
dec
mov
sub
inc
lret
outsl
pop
cmp
push
mov
xchg
dec
push
movsl
js
pusha
icebp
movsb
mov
mov
dec
xchg
leave
or
push
test
inc
and
pop
shlb
xchg
mov
xchg
jne
cmp
shl
sub
pop
mov
jle
mov
jge
push
xor
ja
dec
stos
jns
inc
repnz
cld
xchg
orl
repnz
aad
sub
jnp
inc
sbb
adc
mov
dec
fldt
inc
ljmp
cmp
jo
popf
stos
pop
js
cmp
jnp
shr
outsl
xchg
push
mov
je
xchg
gs
push
out
push
add
bound
pop
or
sub
and
sahf
fisubrl
lret
adcl
testl
mov
xchg
loopne
xchg
cmp
sub
leave
jp
jle
and
push
pop
stos
jne
jno
or
cmp
pop
pop
jge
add
jge
scas
xchg
ret
movb
cmp
cli
pusha
sub
test
loopne
stos
cmp
adc
enter
lock
jae
loopne
push
cmp
mov
jmp
or
xor
addl
mov
repnz
mov
iret
and
imulb
out
fstpl
aas
rcr
scas
xchg
push
jecxz
pop
xor
sbb
xor
mov
jp
or
stos
add
adc
add
int3
es
daa
mov
jbe
lea
sub
inc
pop
out
in
test
pop
add
rcrl
mov
in
jl
stc
in
mov
mov
and
fcomip
sub
mov
test
cmpl
dec
in
rclb
cltd
jbe
punpckhdq
lea
and
outsb
sbb
xor
les
data16
bound
nop
xchg
sbb
jbe
mov
lret
jmp
scas
fcomi
inc
movsb
push
sti
lea
xor
lret
out
push
sub
add
jge
js
mov
sub
mov
dec
sbb
call
pop
jle
test
imul
cmp
push
pop
cmp
dec
in
pcmpeqw
loopne
test
icebp
mov
std
pop
xchg
xchg
icebp
scas
das
dec
ror
jecxz
lcall
ret
mov
lds
and
insb
mov
bound
movsl
divl
push
fstps
lods
jge
jae
cwtl
xlat
mov
popa
or
outsb
xchg
jg
xor
movsb
cwtl
sbb
roll
add
jns
in
aam
inc
xchg
push
lock
nop
mov
pop
mov
in
loopnew
pop
stc
add
jb
mov
lea
cmpsb
or
test
icebp
push
leave
mov
loopne
mov
jno
mov
cwtl
jp
idivb
test
popa
mov
fnsave
mov
mov
lea
out
inc
inc
mov
mov
add
ds
das
sahf
clc
fbstp
jns
fsubs
int
ret
popf
xchg
or
scas
test
or
dec
dec
js
add
ljmp
or
insl
adc
aam
mov
dec
inc
pop
ss
push
out
xor
pusha
stos
and
and
add
fs
aam
dec
ss
xor
xor
mov
dec
mov
inc
xor
jno
sub
adc
mov
sub
lds
in
daa
ror
xlat
push
das
outsb
jne
mov
stos
aad
push
cmpsl
rclb
loop
mov
icebp
sub
mov
lds
add
mov
pop
lret
cmp
imul
mov
cltd
dec
cli
std
in
push
push
pop
ljmp
sub
xor
pop
xchg
rclb
inc
loopne
sarl
cld
icebp
loope
js
ror
and
shrl
mov
xor
push
cmc
cmpsl
insb
je
mov
add
inc
sti
fs
xor
sbb
adc
pop
add
cltd
aad
mov
inc
dec
movsb
jbe
push
jg
or
lock
test
inc
mov
pop
popl
jns
adc
jb
and
cmp
pop
jnp
push
in
push
mov
mov
pop
aaa
and
sub
mov
jne
fsubl
inc
mov
ficoms
dec
push
jbe
int3
jg
sbb
lcall
sahf
fnstenv
push
add
je
fsub
clc
stc
xchg
push
fsub
cmpsl
mov
mov
lock
ljmp
adc
fs
xlat
lea
push
idiv
nop
jg
jmp
xchg
jle
arpl
negl
jae
mov
fistpl
pop
jmp
mov
adc
mov
push
addl
adc
ljmp
loop
inc
or
adc
les
aas
ljmp
loope
fcoms
gs
inc
mov
outsb
cld
pusha
add
hlt
or
ljmp
int
leave
aas
xchg
hlt
xor
das
sarb
insl
xchg
inc
sbb
ret
pop
lret
out
iret
and
jmp
xor
lods
inc
sbb
stc
push
push
push
test
pop
leave
mov
mov
std
jne
lods
fsubrl
push
outsl
and
cld
xor
out
cmp
mov
xor
adc
or
mov
ret
lcall
rclb
pop
lret
nop
mov
add
lcall
push
dec
adc
mov
xor
add
out
pop
shlb
add
dec
mov
clc
pop
mov
mov
add
movsl
cmp
leave
js
sub
sbb
shll
push
sti
fsubs
push
xor
adc
in
scas
inc
inc
jo
xlat
sub
xchg
xchg
int
pop
jb
int
mov
mov
jle
push
ret
lcall
lcall
sbb
leave
jae
les
and
aas
jecxz
clc
inc
jo
sub
sar
add
jle
ja
mov
or
dec
scas
stc
popf
jo
lods
push
out
and
ljmp
mov
ds
popa
divl
push
and
les
test
sbb
xchg
mov
je
push
fdivl
fimuls
call
jo
inc
ljmp
mov
and
stc
jne
jno
and
mov
sahf
out
cltd
jecxz
stos
cmpsl
stos
mov
out
mov
sub
xchg
js
aad
test
mov
push
mov
or
andb
xor
ret
imul
je
enter
cmp
cmpsb
lcall
scas
loopne,pt
xchg
test
data16
es
leave
repz
insl
mov
push
mov
xor
xor
test
notl
dec
fcmovu
out
push
dec
int3
mov
int
pushf
es
mov
xchg
cs
lret
xchg
std
and
je
addl
add
inc
fdivrp
movsl
popa
cs
pop
jbe
aas
jnp
fwait
push
cwtl
dec
fwait
stc
ss
outsb
sbb
sbb
lea
ret
pop
mov
push
push
adc
rolb
mov
shll
xor
sub
cmpsb
mov
lock
loopne
xchg
pop
cwtl
adc
notl
mov
add
mov
adc
rclb
daa
inc
ja
jecxz
test
enter
sti
pop
daa
or
dec
fcom
xchg
outsb
adc
pop
adc
paddq
inc
insl
out
loopw
xor
mov
adc
mov
movsl
outsb
pop
inc
in
inc
and
adc
lret
shlb
sub
imul
xchg
mov
sti
push
push
sbb
fadds
testb
nop
ja
mov
hlt
out
in
jg
jo
or
and
pop
fldl
and
add
pop
ljmp
fistpl
and
mov
js
ds
sbb
push
xchg
nop
ror
inc
and
jle
cmpsb
outsl
ret
lds
jle
aam
mov
stos
es
dec
mov
repz
and
ss
scas
mov
ljmp
xchg
out
sub
sub
addr16
andl
addr16
pop
loop,pt
sub
iret
xor
mov
xor
in
xor
dec
mov
sub
repz
xchg
adc
push
cmpl
push
and
adc
push
fucomi
xchg
and
and
leave
mov
cmp
xchg
fmull
jg
sahf
and
mov
dec
stc
enter
leave
jl
fmull
or
pop
sti
and
fcoms
xor
int
pusha
repz
imul
shll
aam
ds
jns
in
mov
jge
push
sub
clc
roll
cmpsb
lcall
out
lds
mov
sbb
jge
mov
lret
addr16
not
in
xchg
les
xchg
xor
push
out
cld
or
adc
push
mov
mov
or
lahf
xchg
adc
dec
ja
adc
adc
je
in
sub
insl
arpl
cmp
push
jg
popf
fidivrl
aad
or
neg
mov
fisubs
mov
addb
cmc
pop
dec
pusha
push
in
push
jl
adc
add
aas
das
rcll
xlat
dec
push
jmp
insb
xchg
sbb
sbb
xchg
fcmovnbe
and
lods
inc
inc
idivl
adc
lcall
nop
push
js
ljmp
mov
jecxz
adc
sub
lock
xchg
sbb
ja
mov
push
shll
pop
enter
stc
push
push
sti
out
sub
cmpsb
adc
mov
out
insb
cmp
shl
inc
and
xchg
adc
and
sahf
jb
pusha
fadd
lods
adc
lods
fsubrs
sti
imul
imul
aam
scas
mul
xor
cs
fadd
mov
pop
shlb
cmp
adc
outsb
and
mov
cwtl
ficomps
movsl
test
inc
mulb
dec
mov
fistpl
fldenv
cmc
adc
ficompl
lods
mov
and
inc
sbbb
testb
xor
mov
sub
jae
test
adc
add
adc
adcl
sub
fdiv
inc
repz
sub
popa
in
loopne
adc
jne
clc
mov
icebp
xchg
sbb
dec
gs
lds
inc
inc
loop
dec
mov
enterw
mov
sub
je
and
jo
pop
jae
fs
data16
andb
pop
inc
bound
jp
push
push
in
pop
stos
dec
cwtl
aaa
push
sahf
movsb
cs
mov
imul
int3
mov
inc
and
rorl
rclb
addr16
fstp
cmc
add
mov
or
int3
inc
ja
stos
cmpsb
pushf
cltd
jge
repz
sar
or
jbe
into
cwtl
cltd
cmpsl
iret
push
ljmp
cmp
mov
mov
jecxz
imul
lods
xor
push
push
push
sarl
aaa
mov
icebp
or
leave
into
mov
xchg
pop
mov
in
add
dec
add
jbe
inc
mov
or
fimuls
mov
fmul
push
mov
cli
dec
add
fistl
or
mov
sbb
flds
into
jnp
mov
insb
cmp
jne
sbb
movsl
aaa
xchg
pop
jp
mov
sub
pop
rcr
cwtl
mov
mov
sti
inc
jl
nop
jg
scas
ljmp
jno
xlat
xor
idivb
xchg
leave
mov
push
je
lret
mov
jnp
pop
hlt
ss
ret
repnz
dec
cltd
dec
sbb
inc
fdiv
movsl
loop
inc
mov
add
or
cmp
in
mov
sub
mov
loopne
push
mov
xor
fldenv
mov
push
sarl
jl
cld
lods
sub
inc
roll
mov
mov
push
dec
out
movsb
cmc
leave
je
sbb
sbb
ds
mov
arpl
jbe
gs
mov
pushf
add
jnp
fisttpll
jg
jno
fisttps
xchg
mov
mov
insb
ret
fldenv
repz
xchg
xchg
test
stos
std
lds
adc
dec
mov
rclb
dec
ret
fldt
xchg
mov
jp
cli
roll
and
xlat
xchg
lret
jne
mov
daa
lcall
cmp
outsl
and
imul
ss
add
enter
and
addr16
cmc
outsl
mov
out
sub
int3
ja
mov
mov
loope
adc
jl
packuswb
std
lret
or
push
stc
fadds
lcall
rclb
xchg
jmp
xchg
and
pop
dec
cs
dec
fisttps
into
lock
cltd
jno
outsb
fsubp
ret
cli
push
xchg
mov
les
inc
fwait
jp
xchg
nop
das
popl
cwtl
test
jb
fxch
aas
mov
push
insl
aaa
mov
cmp
mov
sahf
cli
lock
stos
and
dec
inc
push
cwtl
lahf
adc
cwtl
clc
test
xchg
in
sarb
sub
jbe
xchg
adc
mov
inc
je
ja
cld
shl
mov
iret
add
int3
mov
test
jne
rclb
scas
or
add
push
jno
jnp
xchg
mov
pop
lahf
sbb
dec
setl
pop
mov
or
xchg
and
xchg
mov
dec
xchg
inc
decb
mov
pop
push
bound
lods
add
push
fiadds
mov
jo
inc
and
scas
pop
cmc
enter
add
dec
push
sub
call
pusha
jae
les
icebp
sarl
jg
mov
in
pop
adc
cmp
pushf
pop
dec
lahf
sub
in
sti
lcall
xor
leave
clc
cltd
sbb
sbb
dec
pop
bound
xor
aad
fwait
popf
popf
xor
sub
leave
xor
es
cld
mov
fstpl
mov
jmp
jge
rep
dec
scas
sub
mov
fldlg2
sub
mov
sub
ret
inc
ja
imul
cmp
xchg
in
xchg
mov
enter
nop
add
aas
inc
pop
and
daa
loop
mov
dec
scas
out
insl
mov
mov
xor
lock
popf
mov
push
test
ljmp
xlat
jle
add
mov
mov
mov
int3
into
cmp
int3
arpl
mov
jp
xchg
xlat
mov
addr16
or
add
into
mov
jmp
flds
xchg
fiaddl
sub
cltd
mov
sub
lea
xor
enter
fmuls
inc
jecxz
xchg
mov
mov
in
mov
ljmp
inc
pushl
mov
fsubs
cli
cmp
cmp
push
inc
cld
jg
xchg
mov
mov
add
jle
mov
sbb
loope
pop
sub
clc
jnp
addb
xchg
and
adc
add
loop
adc
add
pop
cmp
xchg
in
push
lea
or
fcomps
mov
pop
movl
adc
or
stos
mov
inc
and
lods
aas
cmc
dec
sub
pop
jge
sub
cwtl
nop
scas
mov
js
sbb
fcoms
mov
popa
cmp
testl
cmp
in
adc
lret
pop
hlt
gs
jp
sub
adc
mov
mov
pop
stc
int3
stc
mov
mov
mov
adc
sub
pushf
hlt
shrb
fsubl
pop
and
mov
jnp
cmpsl
push
rorl
inc
and
scas
mov
loope
mov
testb
rclb
sbb
js
fsubrl
push
mov
fistl
repz
xor
iret
enter
lds
stc
call
inc
out
popa
pop
inc
cli
loopne
push
loopne
hlt
xchg
testb
mov
cli
inc
lret
ret
cmpsb
sbb
aas
mov
pop
rsm
push
arpl
push
fistps
daa
push
ss
ja
fisubrs
lret
clc
mov
ja
dec
in
lret
jne
out
mov
pop
xchg
out
push
test
inc
mov
sbb
sub
std
xor
repz
push
repz
popf
adc
les
test
sub
aas
icebp
movsb
pop
mov
cmp
sti
cmc
jp
push
lret
jne,pn
out
es
sbb
xor
push
mov
out
mov
sub
push
xchg
stos
lds
mov
pop
roll
xchg
xchg
bound
sbb
test
stc
loope
fbld
add
sub
mov
ss
test
add
gs
jmp
sbb
and
mov
mov
dec
lret
add
sub
out
divl
mov
sub
add
dec
loop
xor
mov
pushf
xor
aaa
xchg
xlat
adcb
jno,pt
sbb
sbb
sbb
pop
les
mov
das
cmp
xchg
xchg
andb
add
das
fadd
cmp
orl
movsl
and
or
mov
sarl
or
mulb
cs
fldcw
fwait
cmp
in
int3
mov
stc
jns
outsl
int3
int3
cmp
jo
xorl
xlat
test
dec
test
pop
int3
loop
fstpl
jb
vlddqu
push
push
and
xchg
xlat
or
lss
push
xchg
arpl
xor
int
aas
mov
jp
clc
mov
mov
xchg
add
xchg
mov
loop
in
shlb
inc
add
cmc
enter
out
fstpt
jp
je
jb
adc
mov
push
push
jmp
imul
nop
or
inc
fwait
add
adc
sub
in
add
xor
loope
mov
hlt
repz
ret
out
xchg
ds
popa
sbb
shrl
or
pop
or
into
ret
ds
call
nop
sbb
fs
push
lret
fcompl
push
repz
add
stc
adc
pop
negl
fildll
rorl
in
or
mov
cld
test
dec
push
mov
rolb
jmp
xchg
add
dec
jb
test
sahf
jb
sete
push
mov
adc
push
pusha
inc
add
scas
daa
sbbb
pushf
adc
dec
rorb
int3
mov
mov
std
stos
or
mov
mov
xor
inc
pop
and
dec
lret
add
repnz
sbb
test
push
cld
fmuls
fwait
inc
jge
hlt
jmp
sti
mov
enter
clc
jmp
and
and
xlat
repnz
popa
xor
lds
popa
mov
scas
shlb
xor
jno
pop
mov
test
lock
fdivrp
mov
mov
aaa
in
out
push
sub
xchg
out
xchg
adc
lret
cmp
jo
lods
jbe
jae,pt
pop
dec
xor
mov
dec
push
push
stos
push
inc
mov
andb
mov
mov
adc
cmp
push
sub
shlb
lock
push
push
xchg
jnp
mov
mov
xchg
mov
mov
das
jmp
cmp
cmpsb
arpl
in
cli
push
shrl
mov
aas
iret
sub
push
out
stos
scas
stos
scas
ret
jecxz
add
add
pushf
dec
test
inc
push
sub
in
cmpsb
out
or
test
idivb
sbb
add
scas
inc
je
sti
inc
lods
inc
pushf
std
ljmp
adc
test
dec
aaa
jns
cmp
inc
out
xlat
enter
mov
fmuls
push
jl
scas
cli
mov
mov
imul
addb
mov
cmp
filds
aaa
push
xchg
pusha
mov
faddl
ret
sbb
je
imul
loope
add
je
or
xchg
test
rorb
imul
push
mov
scas
jl
push
mov
mov
cwtl
bound
push
pop
rorb
add
push
dec
aaa
fadds
adcl
test
cmp
loopne
xor
in
js
dec
dec
mov
lret
sbb
daa
mov
xchg
popf
pop
lcall
daa
sbb
in
mov
mov
gs
jmp
mov
xor
sbb
shll
xchg
dec
sub
jnp
xchg
imul
push
lret
insl
xor
push
sub
fdivr
call
icebp
mov
inc
xchg
outsl
imull
mov
adc
out
add
ja
insb
adc
xchg
movb
inc
xor
leave
ss
cmpb
jle
loopne
mov
fs
ror
imul
orl
xor
repz
das
and
out
adc
push
outsl
popf
and
fidivl
or
cmpb
mov
xor
dec
mov
dec
lods
inc
fadds
imul
dec
stos
xchg
add
adc
cli
jmp
mov
xchg
xchg
enter
push
dec
js
das
imull
aam
iret
js
pop
dec
mov
sbb
add
lock
fcmovbe
lods
and
rcrl
xchg
repz
lods
fdivrs
inc
push
ja
sbb
adc
inc
test
push
mov
and
gs
addl
lods
popf
into
push
bound
add
fs
mov
pop
into
xchg
ret
mov
sub
test
pop
movsb
adc
mov
push
xor
stos
xchg
mov
jae
imulb
ret
sbb
fisubs
cmc
push
dec
cld
loop
imul
sub
stos
push
jg
cli
xor
or
adc
in
dec
sub
dec
in
and
das
pop
cmp
push
test
sub
ret
push
or
movsl
adc
les
and
stc
sbb
mov
push
jp
adc
es
add
inc
sub
xchg
jmp
push
cmp
imul
push
popf
out
xor
add
inc
sub
jo
fiadds
imul
jb
imul
sbbl
stc
adc
outsl
sbb
dec
icebp
jb
notl
test
or
filds
pop
in
jecxz
mov
adc
dec
out
dec
pop
mov
scas
fstl
dec
jl
mov
out
scas
sub
inc
push
fimuls
aad
repnz
jns
inc
in
inc
pop
cmpsb
jecxz
jmp
cmpsl
cmp
adc
or
cmpsb
pop
mov
cmp
lds
lahf
jg
gs
mov
scas
or
xchg
push
fistpll
sbb
repz
jle
insb
test
dec
dec
add
add
dec
hlt
inc
xor
pavgw
add
push
dec
sbb
mov
inc
lahf
push
mov
outsl
inc
xchg
xor
mov
xchg
inc
js
add
adc
outsl
out
insb
dec
dec
or
xchg
xchg
adc
inc
es
stos
sahf
xor
int
sub
inc
das
notb
ljmp
lcall
jle
mov
jg
pushf
cmp
mov
push
inc
add
push
das
xchg
pop
push
ds
hlt
sub
pop
scas
mov
cmpsb
out
hlt
daa
cmc
in
inc
mov
add
adc
fstl
scas
adc
mov
lret
or
jle
jne
inc
sub
jle
inc
pusha
test
loope
fmul
pushf
cs
mov
repnz
shr
rep
xchg
cmp
data16
pop
ficomps
xor
mov
gs
scas
int
fdivs
jmp
pushf
insb
cltd
mov
jno
int
push
mov
je
sub
or
cltd
ret
xor
popa
repz
push
xor
inc
lret
gs
or
sub
stc
mov
out
sbb
pop
stos
xchg
dec
add
sarl
sub
mov
adc
imulb
leave
push
jmp
movsb
xchg
adc
data16
push
adc
ljmp
jb
mull
mov
sbb
test
or
jo
bound
cmp
sub
pusha
cmp
inc
inc
or
icebp
in
notl
aas
xor
or
add
repnz
mov
test
inc
loop
int
popa
daa
xchg
cli
fs
aaa
push
cs
mov
imul
cltd
sti
cmp
pop
mov
lea
jns
or
inc
dec
clc
mov
lea
add
aad
push
or
stos
mov
cwtl
mov
sar
jg
inc
mov
test
xor
push
lret
jge
cmp
dec
fiadds
inc
nop
fdivrl
xor
lods
inc
inc
lock
cltd
and
ljmp
jnp
push
cmp
push
push
dec
shrb
mov
cmp
jp
sub
push
das
mov
mov
je
enter
stos
flds
mov
cwtl
mov
jle
es
shll
mov
idivl
jnp
les
adc
mov
mov
mov
add
aam
and
repnz
jmp
mov
cmp
jmp
inc
push
adc
mov
or
inc
lret
js
pop
jle
int
mov
pop
pop
xor
jne
cld
and
stos
pop
sbb
add
or
jns
push
pop
hlt
imul
mov
push
fs
fld
xor
or
pop
fs
adc
and
js
xacquire
mov
sbbb
inc
push
inc
sub
notl
ja
in
pop
pop
add
ror
aas
mov
xchg
push
ret
ret
inc
dec
lcall
fisttpl
clc
inc
mov
or
lods
pop
inc
sbb
xor
ret
xchg
mov
xchg
add
out
sub
aas
cmp
or
outsl
sbb
push
add
xor
jmp
cwtl
fidivs
mov
aam
dec
add
shrl
into
inc
mov
xchg
ja
sbb
rclb
inc
mov
adc
pop
add
pop
bound
push
imul
cwtl
cld
or
shll
scas
mov
pop
jg
sub
fsub
insl
dec
inc
iret
lea
testb
test
mov
into
jl
jne
mov
popa
jmp
jle
test
sbb
xchg
lods
xor
inc
pop
cmp
or
xchg
xchg
or
mov
lods
push
push
lret
or
jae
orb
xor
sti
js
mov
ja
cmp
roll
add
cwtl
or
repnz
inc
adc
das
es
nop
cmp
in
int
data16
pop
push
movsbl
mov
or
mov
mov
loopne
data16
add
cmp
sub
jae
les
bound
xchg
and
adc
sahf
pop
dec
mov
testb
mov
shld
ret
test
mov
sub
aas
mov
subb
in
jecxz
cmpsb
jbe
pop
mov
popa
push
out
in
iret
loop
repnz
enter
fbstp
pop
xchg
lods
cwtl
nop
js
enter
lret
xor
lock
or
mov
inc
pop
adc
inc
sub
cmp
dec
imul
cld
int
mov
cmpb
lea
cmp
lods
popf
or
mov
mov
je
jg
mov
mov
notl
lcall
out
pop
or
xchg
mov
lret
nop
test
mov
jg
dec
cmpsb
iret
in
mov
aad
add
repz
add
push
orb
push
inc
cmp
mov
call
pop
sbb
dec
xor
je
xor
jl
mov
lcall
xor
cmp
xchg
adc
popa
xchg
stos
iret
sub
push
xlat
add
lea
add
fsubrl
fnsetpm(287
inc
jl
into
mov
outsl
call
jae
jns
sti
insl
jb
scas
lock
jnp
call
push
push
repnz
rorl
lret
pop
aaa
pop
js
mov
int
clc
push
pop
lcall
outsb
push
pop
pop
loope
aaa
cld
je
lds
and
addr16
ficoms
sub
push
and
xchg
call
sbb
dec
xchg
or
ja
push
pop
mov
jl
pop
repnz
cmp
mov
xor
and
push
js
pop
push
pop
mov
lahf
aam
push
stc
inc
std
xchg
dec
sbb
pop
setp
add
fisttps
push
jle
pop
sub
fiadds
outsl
push
and
mov
pushf
subl
jb
xlat
lods
test
aas
push
add
negb
dec
xor
nop
mov
fs
sahf
lahf
mov
not
jecxz
inc
enter
jecxz
daa
scas
adc
call
inc
cltd
mov
arpl
jnp
add
sub
sbb
jmp
in
mov
repnz
test
fdivs
mov
xchg
pop
xor
mov
push
jp
and
sahf
es
rclb
fistpl
aam
lret
iret
into
xchg
dec
in
jbe
push
divps
scas
popf
sbb
mov
push
lea
fcompl
dec
and
jnp
pop
mov
mov
imul
into
int3
sahf
jp
xor
adc
inc
and
sbb
push
in
or
add
adc
push
push
sbb
cmp
jle
hlt
and
mov
push
add
arpl
jae
mov
sub
test
or
iret
pop
aam
inc
and
out
ljmp
jne
push
lcall
sbb
jp
mov
pop
pop
mov
xor
sub
add
inc
mov
add
cmpsl
jmp
movsl
jno
mov
cmp
inc
jns
ljmp
aam
mov
xchg
cli
movsl
xchg
dec
fcoml
cmp
mov
data16
mov
into
cmp
push
adc
cmp
enter
xor
adc
dec
mov
inc
adc
xchg
js
add
jmp
add
fs
mov
lret
xchg
fldenv
sbb
add
sub
fildll
fisubrl
in
mov
jmp
mov
and
or
sbb
fldt
jno
aaa
bound
jl
mov
inc
int
dec
xor
mov
sub
in
stos
xchg
imull
xchg
mov
xchg
out
outsb
jecxz
mov
xor
pusha
and
stos
cmp
cmp
or
push
mov
xor
push
iret
or
pop
lret
sbb
dec
lret
nop
add
mov
inc
jl
push
push
xchg
pushl
out
push
mov
push
cmp
jne
sbb
push
mov
xchg
test
movsb
push
xor
xor
mov
rcrl
aaa
adc
int
mov
test
in
popa
or
push
and
xchg
mov
daa
popf
jae
xor
subb
iret
cld
scas
mov
das
aad
and
lcall
imul
add
pop
push
test
lock
inc
sti
aam
into
push
mov
and
in
dec
mov
mov
rorb
es
dec
sahf
je
insl
adcl
jmp
out
insl
add
mov
push
mulb
loope
test
xchg
mov
mov
leave
mov
mov
mov
scas
or
or
jbe
push
sqrtps
sbb
shll
mov
nop
test
inc
or
or
push
andl
gs
xchg
jle
dec
sub
test
daa
loop
in
ss
clc
mov
xchg
push
jge
dec
fimull
lret
mov
sub
or
push
mov
stc
adc
test
nop
mov
mov
jmp
arpl
xchg
mov
inc
xchg
jg
std
pop
push
adc
fidivs
or
sbbb
ja
daa
movsb
push
xchg
jmp
enter
daa
mov
push
push
sub
fs
sti
sub
lds
push
andl
adc
int3
mov
fisttpl
inc
ss
movsl
xchg
sbb
mov
fdivl
mov
sbb
mov
gs
in
inc
push
cmpl
insl
xor
out
cmp
inc
sbb
inc
jecxz
stos
xchg
ja,pt
in
int3
loopne
cmpsb
ret
es
adc
jge
xor
shlb
into
mov
ret
pop
xchg
push
push
out
cmpb
jb
ljmp
jle
sub
stc
jmp
cmc
jb
push
add
in
lods
pop
in
sub
xchg
shll
add
in
lds
or
lods
adc
mov
adc
and
jb
pop
dec
cmp
out
mov
cmpsl
scas
rolb
fwait
pop
mov
push
int
inc
push
pusha
movsb
mov
sahf
cs
xor
adc
scas
clc
fstl
pusha
sub
icebp
arpl
daa
and
xchg
or
sti
inc
test
cmp
ficomps
lds
ss
push
outsl
and
pop
mov
jl
movsb
adc
imul
or
jns
shl
test
mov
xchg
push
jb
xor
xchg
rolb
in
cwtl
call
mov
mov
xor
adc
fisttpl
and
inc
ret
sub
or
pop
mov
mov
dec
push
loopne
mov
scas
pop
lahf
cltd
push
imul
outsb
xchg
jg
in
test
cmpl
and
or
push
test
jl
imul
mov
in
adc
mov
pop
mov
fdivrs
lret
cltd
mov
scas
sbb
mov
jecxz
scas
lock
gs
sbb
outsb
lcall
inc
int
pop
fwait
subb
ljmp
test
push
jecxz
dec
add
mov
movsb
ljmp
lds
shll
imul
pop
pusha
ja
into
cltd
out
xor
adc
jne
lretw
repnz
movsb
pop
push
outsw
call
jl
cmp
nop
pop
mov
xor
bound
adc
insb
dec
dec
pushaw
movb
call
and
xor
out
cltd
shlb
add
pop
repz
xchg
mov
fcoms
cmp
popf
movsl
cld
dec
sar
xchg
dec
sub
inc
ffree
jl
outsl
mov
xor
sbb
mov
shll
or
lret
mov
mov
jl
fwait
test
dec
hlt
into
adc
push
leave
insb
xor
add
lods
jmp
pop
dec
cs
fidivs
adc
lock
cwtl
mov
fnstsw
adc
pusha
leave
mov
inc
sti
test
push
xor
lods
leave
and
fbld
shl
icebp
jns
xchg
dec
lcall
outsb
call
jne
outsl
sbb
xor
test
and
arpl
lret
test
inc
adc
cltd
mov
ja
into
adc
fcmovb
dec
aas
fwait
xchg
insb
mov
je
loopne
test
mov
lds
imul
adc
ja
pop
fstps
mov
popf
cmp
lcall
inc
sbb
push
rcll
cmc
push
icebp
xchg
cmp
jge
je
lock
sbb
repnz
scas
lock
push
mov
sub
pop
pushf
mov
daa
dec
shrl
lods
and
xor
ficompl
cmp
adc
leave
repz
xor
sbb
sub
pusha
xchg
into
aas
mov
and
jbe
test
popa
jle
and
enterw
jmp
jns
mov
jmp
in
xor
outsb
mov
mov
pop
xchg
inc
mov
into
jmp
lds
sub
test
fsubrp
arpl
in
nop
jg
int
stc
loope
cmovno
mov
shll
xchg
cli
push
icebp
lods
leave
cmp
divl
outsl
cld
sub
fs
lds
aas
incl
sub
lret
cmpb
cltd
pushw
cltd
and
mov
inc
sub
rol
jp
add
inc
fidivrl
clc
clc
aad
jmp
call
inc
jae
xor
jmp
xchg
sbb
xor
dec
mov
pop
stos
dec
cmp
mov
out
aaa
sbb
jns
and
dec
neg
sti
jl,pn
lea
arpl
cs
adc
sti
shr
leave
push
fimuls
xor
push
es
inc
push
sbb
inc
push
dec
fmull
into
int
mov
cmp
mov
xlat
pop
add
ret
and
addl
scas
insb
lock
mov
push
mov
dec
sbb
stos
imul
mov
rcrb
lds
mov
fdivr
mov
inc
pop
test
pop
rclb
pop
pop
and
into
xchg
sub
ror
mov
fldenv
or
mov
movsb
mov
push
out
mov
aas
cmp
in
test
scas
arpl
xchg
push
dec
inc
adc
xor
scas
xchg
cmpsl
jg
repz
add
push
jnp
cli
add
sahf
das
push
imul
push
clc
dec
hlt
inc
popa
in
popf
inc
push
and
pop
adc
pop
and
sbb
fsubr
mov
push
xor
dec
and
pop
adc
repnz
push
sti
testl
inc
xchg
or
arpl
jg
fs
pop
cli
pop
hlt
xchg
mov
rcr
xor
testl
xchg
or
xchg
pop
add
popf
sub
sub
loop
xor
xchg
ja
ret
lret
loop
inc
sbb
mov
mov
jb
inc
pushf
jl
adc
mov
sub
and
adc
lods
jmp
je
cvtps2pi
jnp
stos
sub
push
inc
jl
cmp
in
pop
xchg
stc
popa
xor
and
lret
cmpsl
sarb
mov
mov
push
sti
ret
dec
sbb
and
mov
push
jns
aas
add
rorl
cmp
xor
ja
mov
ds
lret
xchg
sbbb
mov
mov
xchg
std
xor
sbb
jmp
pop
mov
rcll
out
dec
pop
and
dec
insl
push
nop
cs
xor
shlb
fsubs
stos
or
xor
xchg
sbb
in
push
pop
jl
insl
lods
pop
fisubrs
call
pop
xchg
inc
jno
dec
aam
pusha
jns
cvtpi2ps
pop
cmpsb
push
adc
pop
lcall
sbb
push
xor
rolb
push
scas
shlb
test
repz
mov
and
std
sub
movsb
mov
sahf
popf
lret
xor
sti
sbb
cmp
xor
mov
sub
mov
arpl
test
addb
nop
jecxz
xor
movsb
adc
pop
shrl
mov
arpl
je
andl
lahf
out
test
sbb
sbb
push
lods
sub
dec
mov
fildl
das
and
cmp
lret
in
mov
cmp
outsl
cmpsb
sbb
sbb
mov
leave
xor
aad
iret
sbb
pop
sbb
mov
inc
pop
mov
repnz
aam
inc
mov
mov
and
xlat
pop
fadds
dec
xchg
cmpb
adc
add
mov
cmp
rorl
mov
jns
hlt
inc
xchg
dec
fldcw
call
xchg
xchg
mov
lods
mov
test
test
or
sub
or
cmp
outsl
imul
incb
mov
aad
or
pop
mov
mov
sub
and
jnp
pop
ret
add
paddusb
lahf
cmp
enter
adc
xor
je
dec
dec
in
mov
jmp
xor
aad
dec
cli
mov
jno
aad
insl
xchg
jmp
decl
movsl
sbb
jae
sbb
lahf
adc
hlt
or
subl
push
es
std
rcrb
dec
xor
dec
das
dec
fidivs
push
xchg
dec
test
jge
or
shll
jo
rclb
cltd
inc
enter
lds
mov
fbstp
inc
push
out
inc
aas
inc
repnz
jmp
push
adc
adc
iret
jo
sub
dec
addb
sbb
lock
mov
inc
gs
stc
fdivp
fadds
mov
je
and
dec
and
daa
ljmp
es
mov
inc
lahf
out
and
insb
test
popa
pop
cmc
jmp
jecxz
out
sub
mov
adc
mov
mov
xorl
inc
sub
adc
jle
fwait
int
cld
sbb
sub
mov
jne
call
stos
test
mov
push
into
mov
push
pop
rol
lea
je
stos
lock
mov
inc
sub
inc
xor
cmpsl
lret
mov
jecxz
outsl
push
pop
cmp
cmp
outsl
bnd
sub
clc
test
ljmp
xchg
subb
dec
jbe
mov
sbb
lea
int
adc
icebp
inc
push
sbb
and
outsl
mov
scas
mov
or
faddp
adc
pop
lea
repnz
mov
in
mov
and
mov
mov
ret
addr16
scas
add
ret
sbbl
jmp
dec
dec
xchg
push
push
lret
push
xor
stos
sbb
mov
xor
sar
or
mov
ficoml
ja
pop
and
int3
dec
int
cmp
sbb
repz
or
xchg
mov
push
dec
in
ret
cltd
setae
test
cmc
push
jmp
outsb
pop
hlt
push
pop
in
mov
rolb
adc
sti
outsb
sub
xor
mov
arpl
sbb
and
repz
adc
sbb
ud1
sbbb
arpl
xlat
adc
cmp
cli
lret
and
stos
pop
jo
dec
bound
ds
or
cli
rcrb
jbe
dec
or
inc
mov
lcall
cmp
fwait
pop
push
xor
jne
lret
out
adc
mov
into
xor
add
pop
xor
add
pop
loopne
lret
cld
dec
jb
ss
stos
jbe
in
adc
daa
lcall
aas
jne
jbe
mov
in
inc
jb
insl
ss
call
push
ja
std
scas
adc
pop
jl
jmp
xor
push
cmp
fcmovbe
add
and
jmp
fwait
or
sub
mov
aad
int
mov
aam
movsl
sub
sub
jnp
lods
mov
std
add
cmpl
pop
xchg
adc
add
clc
test
cmp
jmp
sarb
xchg
adc
xor
adc
mov
jmp
mov
arpl
sbb
fistl
fnsave
xor
jge
test
enter
rorl
cmp
mov
inc
into
in
and
insl
lret
dec
adc
daa
cld
mov
cmp
insl
jne
jo
push
pop
add
cli
js
dec
fadd
mov
jno
pop
cmp
xchg
shll
in
insb
cmp
mov
or
or
jp
out
push
xor
into
inc
daa
cld
mov
fadds
cltd
int3
push
shufps
xchg
shl
ret
jne
jb
stos
fsubp
and
jno
sub
dec
popf
ss
lcall
pop
pop
stos
mov
mov
iret
into
repnz
cmp
arpl
cmp
ret
dec
lds
xchg
mov
cs
or
xor
rcl
stc
fsubr
ja
jnp
xor
jo
ret
rorb
add
leave
mov
mov
imul
mov
pop
inc
cld
add
xor
daa
aas
xchg
xchg
loopne
sbb
xchg
sub
dec
push
test
xchg
jno
leave
jae
adc
inc
loopne
test
mov
dec
push
or
mov
lret
or
xchg
loop
cltd
push
mov
mov
imul
lahf
sbb
fcoml
jne
mov
incb
mov
cmc
sbb
gs
mov
adc
hlt
push
scas
cli
sub
inc
push
mov
inc
in
test
jle
jbe
add
sbb
in
mov
fwait
push
ficoms
clc
push
push
cmp
test
iret
jge
mov
out
jns
sub
fbstp
jne
xchg
add
inc
in
mov
add
cmpsb
icebp
jae
and
ret
test
xor
xor
sub
push
out
sub
inc
jp
inc
xchg
daa
cmc
popf
inc
and
mov
aas
mov
andl
in
imul
nop
cmp
adc
das
cmp
xchg
fisttpll
jae
sub
push
aad
stc
and
and
call
movsb
inc
adc
ss
push
loopne
addr16
out
dec
int3
xchg
xchg
and
jg
in
fabs
dec
nop
xchg
mov
repnz
test
dec
pushl
clc
push
inc
pop
int
stc
jle
outsl
sahf
xchg
mov
in
xor
dec
or
mov
inc
push
inc
sbbb
lock
mov
pmaxub
add
int3
adc
fwait
xchg
sar
push
out
push
outsl
add
mov
mov
daa
addr16
and
iret
imul
ss
adc
add
mov
sahf
mov
idivl
pop
std
pop
pushf
pop
movsb
or
aad
dec
fidivrs
xlat
sahf
pop
jae
cmp
lcall
add
stos
shll
test
loopne
test
dec
mov
jg
mov
add
lock
xchg
or
mov
imul
int3
out
addl
xor
out
xchg
mov
jo
xchg
int3
adc
jle
pop
lods
push
xorb
iret
sub
jle
xchg
outsl
adc
ja
movsl
cmp
hlt
mov
punpcklbw
mov
mov
fnsave
pop
jb
or
andb
xor
lock
xchg
shll
dec
repz
repz
inc
lds
movsl
push
xlat
mov
push
fs
insb
or
push
adc
add
sbb
out
jb
pop
sub
pop
xor
mov
movsl
test
inc
lds
cmpsb
sarb
xor
sbb
pop
inc
jge
lods
lock
mov
mov
mov
cmpsb
xchg
out
mov
jae
inc
mov
mov
sti
sbbb
add
add
inc
jno
jge
leave
shl
mov
rcl
pop
in
dec
push
lods
mov
adc
stc
loopne
jno
xor
cmpsb
out
outsb
rclb
inc
cmp
pop
pop
shlb
js
mov
imul
mov
jg
xor
in
addr16
and
mov
fwait
cwtl
popf
outsl
dec
or
add
inc
pop
lds
cli
mov
cld
lret
in
or
or
or
sbb
test
mov
mov
mov
das
jne
stos
test
lock
orb
mov
mov
sbbb
jge
movsb
xlat
mov
or
push
repz
sahf
movb
imul
sbb
jmp
addb
dec
dec
cmp
xchg
inc
mov
push
push
sub
push
addr16
popf
mov
jle
test
cli
jmp
jnp
mov
movb
jns
cmpsl
cs
push
xchg
push
inc
rorl
add
test
fmul
xchg
data16
or
and
sti
push
dec
mov
outsl
fdiv
adc
mov
mov
xchg
push
xchg
leave
sbb
add
and
pop
les
or
sub
xor
fnsave
aam
stos
cmp
xchg
mov
sbb
mov
mov
xchg
popf
adc
sarl
pop
sub
adc
in
xchg
lods
in
js
adc
lret
enter
shll
pop
scas
pusha
and
inc
xchg
sbb
xor
inc
loopne
bound
popf
in
bts
pop
push
addb
dec
stos
pushf
adc
movsb
sbb
and
ret
inc
inc
frstor
enter
mov
pop
push
ljmp
xor
mov
jne
jp
add
adc
mov
or
cmpsl
call
mov
or
iret
push
mov
inc
jns
jge
sbb
jb
les
xchg
lds
adc
and
mov
or
xlat
jae
pop
or
push
mov
xchg
push
xchg
xchg
pushf
jne
clc
sti
je
jnp
popf
add
dec
je
or
sub
aaa
add
lret
ret
add
push
rcrb
lea
fisubrs
stc
sbb
push
and
cs
leave
fists
andl
xchg
fnstenv
insb
fisttps
jae
jg
rorb
jbe
sub
leave
xchg
dec
into
rcr
orb
mov
add
xlat
mov
jne
mov
or
loopne
mov
stos
sbb
pushf
pop
add
xchg
jp
mov
cs
in
pop
aam
and
sahf
lea
mov
lret
adc
sbb
dec
cltd
mov
fstpt
shll
ss
out
pop
cltd
cmpsl
mov
xchg
pop
dec
inc
jmp
outsb
jae
push
cmp
loopne
and
and
ret
lods
mov
fxch
lret
dec
idiv
adc
cmpsl
and
cmp
xor
cmp
inc
adc
xor
sbb
mov
icebp
stc
test
cli
mov
popa
fists
xchg
arpl
jl
xor
mov
fstpl
sti
shlb
jno
je
mov
pushf
pop
mov
out
or
pop
les
repnz
sbb
sbb
cmp
xor
stc
cld
mov
jae
orb
xor
aaa
pusha
push
test
xchg
mov
sbbl
int3
or
rcrl
jl
push
in
mov
adc
xor
push
call
mov
lds
call
nop
sbb
in
aad
push
xor
clc
fs
incb
xchg
xor
mov
xchg
jbe
or
nop
and
xchg
pop
leave
enter
test
pop
xchg
mov
fstps
test
and
pop
rol
mov
pxor
jg
lret
lret
cmp
jbe
dec
pop
lods
sub
cmpsb
dec
movsb
fcmovbe
cli
push
sub
sahf
jge
rcr
dec
rcrb
ljmp
push
add
cs
shrl
or
lret
loop
and
mov
and
out
sub
mov
push
and
push
dec
xchg
xor
fwait
das
xor
xlat
sub
push
lods
lret
fldz
cmp
and
or
inc
repnz
cmp
subl
mov
iret
or
push
into
addr16
add
add
pop
sbb
inc
jae
pop
fbstp
sbb
mov
fs
pop
cmovnp
pop
mov
enter
dec
sub
shl
inc
fnstsw
ret
sub
dec
and
pop
mov
dec
dec
sub
jg
pop
sub
push
mov
push
push
pop
call
mov
lods
js
jecxz
xchg
ficomps
mov
pop
and
test
pop
fsub
mov
mov
add
inc
adc
arpl
loopne
mov
test
jo
loop
mov
mov
jl
scas
dec
scas
pusha
dec
cmp
mov
in
decl
sbb
mov
sarl
sub
add
sub
cld
lock
in
ja
in
mov
push
pop
jmp
loope
aad
push
xlat
loop
pop
sbbl
push
std
lret
rol
leave
mov
aad
pop
mov
out
shll
bound
cmp
xchg
aaa
dec
cli
decb
cmp
mov
fildll
jp
add
sub
fcomps
fnstsw
clc
nop
ja
cmc
dec
popa
push
pop
xchg
fstl
jmp
dec
xchg
and
push
imul
loop
xchg
loopne
lahf
jae
fnstsw
inc
stos
mov
xchg
adc
jmp
bswap
cwtl
scas
aaa
movsw
cmpsb
or
out
jecxz
and
fstpt
add
adc
xor
adc
mov
cmp
or
fildl
xor
xchg
jle
sbb
xor
je
pop
cmc
icebp
loope
int3
adcb
push
stc
pop
jp
out
hlt
inc
sbb
int
movsl
ficomps
cmp
sub
lds
outsl
sub
loop
cmpsl
cld
inc
mov
dec
sub
in
aas
mov
out
rcr
in
jmp
mov
shlb
out
mov
sub
ja
fwait
inc
pop
add
dec
hlt
adc
cmp
ret
gs
test
add
pop
jle
mov
mov
push
movsb
mov
lahf
fcoms
cmc
sbb
stos
bound
mov
push
adc
add
jne
ret
jg
ret
jecxz
mov
dec
xchg
xor
jle
test
movsl
mov
sbb
aas
mov
insl
lea
adc
lods
mov
fadds
xchg
and
jae
or
or
into
lcall
jmp
push
cltd
jge
inc
leave
in
adc
call
pop
orb
out
add
and
sti
sub
sbb
jg
xor
push
dec
aas
aad
xchg
and
decl
ss
lods
loopne
subb
enter
adc
pop
mov
cmp
mov
jg
dec
jae
int3
cmpsb
dec
inc
imul
in
dec
mov
popa
add
xor
dec
or
cmp
push
push
pop
popa
push
sbb
sbbb
cmpsb
jns
pop
push
lcall
fwait
cmp
gs
inc
xchg
andb
push
subl
jp
js
xchg
or
sbbl
sahf
sub
or
lds
cwtl
aas
xchg
loop
adc
outsb
sbb
out
leave
shll
sbb
jge
inc
jmp
fistl
cltd
sub
adc
ret
xchg
cmpl
mov
or
insb
imul
mov
lret
mov
mov
or
dec
clc
stos
jo
push
out
and
aam
lret
pop
or
movsl
inc
jbe
jno
cmp
outsl
pop
icebp
mov
sub
into
dec
add
jl
ds
ds
jno
and
mov
jne
in
test
xchg
push
iret
aad
inc
cmp
push
fildll
jmp
adc
hlt
push
or
shl
pusha
add
adcb
daa
mov
stc
inc
movsl
inc
insl
scas
push
cwtl
lock
jmp
out
xorl
dec
ja
test
loope
in
pusha
mov
sbb
jbe
dec
subl
cli
pop
mov
mov
faddl
es
and
lock
mov
ljmp
push
fnstsw
jp
in
pop
subl
mov
movsb
fcomps
and
leave
test
mov
rorl
cmp
fisubl
push
inc
push
xor
push
loop
movsb
jge
lock
das
xchg
lahf
mov
jns
xchg
sbb
cmp
adc
fwait
sub
in
js
cmp
loopne
xor
call
mov
test
pop
jl
daa
leave
fnstcw
out
push
ja
inc
jmp
fsubp
sti
inc
sbb
push
push
mov
test
rcll
pushf
inc
fs
fisttps
mov
repz
nop
sbb
push
inc
cltd
je
cmpsb
jo
inc
xchg
loopne
call
iret
add
push
mov
sub
aad
out
ror
fdiv
leave
mov
inc
jmp
addr16
push
fildl
and
xor
pop
out
out
jo
ds
mov
dec
aaa
inc
inc
cwtl
call
fdivl
and
mov
add
mov
fdivl
mov
fisubl
ds
arpl
outsb
addr16
dec
in
jne
sbbb
cmp
seta
fidivs
iret
and
add
xchg
subl
out
and
dec
pop
in
sarl
lcall
and
cmpsb
sbb
sbb
cs
dec
jb
pushf
aam
pusha
sbb
mov
in
adc
mov
imul
cmc
hlt
gs
jecxz
inc
pop
jns
in
mov
es
lcall
dec
stos
jo
xor
gs
mov
mov
fucomi
xor
pop
xchg
jg
jbe
aaa
jle
mov
fcmovb
inc
mov
and
jge
jmp
mov
rcll
dec
xchg
inc
xchg
xor
movsl
add
pop
out
jb
lret
push
xchg
leave
cmp
sahf
push
push
add
lds
sbb
inc
xor
push
sbb
dec
xchg
pop
mov
aas
idivl
divl
push
clc
popa
pop
test
adc
and
insl
adc
jg
movl
mov
push
into
xchg
ljmp
test
jg
or
and
insl
lods
add
jp
cs
test
aad
and
pop
in
cmc
mov
test
fwait
push
rcrl
sub
jnp
jae
cmp
jl
fidivs
sbb
test
js
lods
pop
add
shlb
std
sub
adc
xchg
fs
loop
in
bndldx
mov
stos
lock
lods
sub
mov
xchg
jnp
ret
out
sub
cmc
in
ret
ljmp
lahf
shll
sti
cmp
movsl
jp
fwait
jo
pop
or
cmp
sub
lds
sahf
iret
call
mov
fidivrs
fisubrs
xchg
into
xor
jne
std
push
pushl
cwtl
lds
xor
jg
out
jno
jns
sbb
push
loopne
imul
ficoms
sti
xchg
sub
xor
ror
sahf
inc
sub
jns
jg,pt
xchg
outsl
mov
repnz
mov
hlt
push
or
mov
adc
scas
mov
fwait
sub
outsb
scas
push
out
and
mov
cld
or
lcall
icebp
cmc
sbb
not
jb
sbb
test
movsb
sarl
adc
insl
mov
jle
loope
ljmp
push
or
sbb
lret
daa
pop
sub
jp
mov
test
test
cmp
loop
int3
pop
testb
lahf
pusha
imul
add
outsb
ret
mov
mov
push
push
xchg
rol
cmp
sbb
cmp
inc
insb
or
jns
dec
out
lock
lock
dec
cmpb
and
jl
sbb
jecxz
and
addl
push
adcl
gs
jecxz
lahf
cwtl
mov
ljmp
push
mov
mov
ret
sbb
pop
lcall
mov
inc
loopne
xchg
pusha
int3
cmp
divb
push
aas
rolb
lcall
or
ljmp
xor
cwtl
fisubs
dec
mov
ljmp
pop
insl
cltd
add
inc
jbe
pop
jno
test
inc
flds
aas
lea
loope
pop
sti
loop
cmpsb
imul
popf
fnstcw
bound
movsb
pop
js
and
pop
push
addb
ret
xchg
rcll
adc
add
sub
or
xlat
mov
sbb
adc
push
push
cmpsb
mov
int3
stos
xchg
push
aad
cmpsb
and
push
dec
xor
repnz
push
pop
scas
cltd
push
pop
xorb
cli
jecxz
cmp
mov
enter
jmp
in
xor
mov
addr16
mov
stos
fs
cmpb
and
imul
insb
sub
out
lea
push
aaa
in
popf
cmpsb
xchg
popa
adc
mov
add
xchg
pushf
mov
fimuls
mov
das
sub
add
sbb
ret
test
mov
mov
adc
push
push
push
icebp
repnz
xchg
loope
dec
xor
jmp
out
mov
hlt
lahf
fs
sahf
stos
aas
dec
xchg
out
arpl
pop
mov
mov
cmpl
test
test
pushf
lret
pop
mov
lds
jae
xchg
dec
add
adc
push
mov
cmp
mov
enter
fmulp
outsb
pop
mov
test
mov
lea
sbb
sub
xor
shll
and
insl
add
cli
cmpsl
imul
out
or
sbb
ljmp
test
ja
mov
mov
hlt
incb
pop
pushf
aaa
and
and
cmp
mov
les
movsb
cmpsb
inc
int3
inc
add
and
notb
or
cld
adc
mov
xchg
ret
leave
cs
into
inc
xchg
xchg
rol
cmp
std
addl
lds
mov
inc
std
push
cs
movsb
es
lahf
imul
push
dec
sub
insb
xchg
js
cli
sbb
inc
xchg
aad
push
xchg
es
mov
pop
inc
adc
cltd
enter
dec
add
mov
insl
push
vpsubsb
aad
rorb
xchg
ret
sub
popa
or
push
mov
xchg
inc
sub
setae
popf
sub
mov
in
push
cwtl
cmp
jge
xchg
rolb
jnp
in
inc
ficomps
xchg
push
mov
sahf
lock
mov
mull
imul
add
mov
sahf
popa
std
adcl
xchg
xorl
sub
popa
push
adc
push
cmpb
mov
fidivrl
scas
mov
xchg
xchg
loopne
cmp
inc
push
push
pop
mov
loope
mov
je
xchg
mov
sbb
xchg
in
and
inc
inc
cmp
popa
push
mov
insl
fildll
scas
ds
loop
push
dec
inc
in
or
scas
adc
adc
cmpb
jae
dec
rolb
and
rcrl
insb
loop
adc
jecxz
aas
xor
add
mov
jg
stos
mov
outsb
lahf
inc
sub
sbb
adc
in
sbb
push
xchg
dec
fs
shll
lret
pop
cwtl
daa
mov
dec
push
test
push
or
mov
rorl
mov
push
mov
push
les
pusha
mov
popf
mov
cmp
loopne
inc
xchg
aaa
dec
ja
fs
cmp
jns
jne
xchg
and
dec
cmp
clc
cli
stc
aam
pop
test
sub
push
inc
dec
jns
clc
out
scas
xchg
inc
frstor
push
jmp
xchg
nop
icebp
cmpsl
and
fldcw
mov
outsl
nop
jge
leave
into
mov
sbb
xchg
mov
sub
aas
inc
pop
sbb
cmp
sub
or
push
xor
sub
mov
sbb
fs
jo
jbe
aam
and
mov
or
or
push
test
mov
rcr
push
fwait
mov
leave
je
mov
inc
or
fimuls
dec
or
cmc
mov
nop
out
lahf
fisubs
adc
xchg
or
in
push
mov
mov
cmpsb
into
xchg
sbb
outsl
imul
mov
jb
lahf
xchg
pop
xchg
arpl
shlb
aam
mov
or
loop
lods
cwtl
mov
movsb
sub
pop
dec
arpl
scas
mov
and
loope
dec
aas
adc
or
clc
dec
cld
mov
jge
repnz
or
mov
stc
adc
test
adc
pop
in
hlt
inc
insl
imul
lcall
test
cmp
dec
sub
les
fdivl
rcrb
aaa
mov
mov
jno
mov
sbbl
in
cmp
lcall
data16
frstor
add
aad
les
lods
sub
push
sbb
in
movsb
xor
out
dec
xchg
push
xlat
xorb
test
dec
mov
cmp
pop
aas
jmp
and
cltd
popa
decl
pop
and
xchg
into
subl
mov
pop
outsl
sub
inc
xchg
xchg
aaa
cmp
pop
mov
push
push
adc
sbb
or
xor
xchg
std
insl
daa
inc
jb
xor
add
or
pop
ficomps
frstor
pop
cmc
inc
shrb
shll
mov
shll
int
lods
add
mov
notl
mov
or
or
xor
add
cmp
loopne
push
notl
adc
mov
add
xchg
dec
jnp
gs
int
jge
pop
loope
mov
push
xorw
or
adc
mov
mov
jl
lds
pop
adc
movsb
aas
lcall
cmp
js
cwtl
mov
daa
cmpsl
jns
adc
push
lods
pop
cltd
add
outsl
push
fistpll
push
mov
push
in
push
insb
sub
jg
sub
add
popa
mov
lea
sahf
cltd
adc
jecxz
or
push
cmp
pop
addr16
loope
jp
mov
repz
jnp
sbb
leave
test
rcr
jmp
wbinvd
mov
ret
in
iret
imul
add
fidivrs
add
sar
mov
lea
insb
and
cld
xor
pop
pop
push
outsl
cmpsb
xchg
std
and
lods
js
in
xor
cs
adc
int3
ficomps
xchg
adc
mov
cmc
testl
adc
iret
icebp
mov
test
or
pop
ss
rclb
add
inc
jg
ja
and
mov
mov
xchg
lret
loope
scas
loopne
int
cmp
int3
jle
gs
aad
lods
or
jmp
subl
jp
mov
jbe
cmp
loope
push
and
xchg
and
push
lds
dec
test
mov
and
sbb
adc
pushf
aad
push
push
adc
outsl
lods
pop
shlb
mov
push
mov
pop
pop
nop
mov
cld
data16
mov
scas
mov
mov
jnp
fwait
mov
pop
lods
mov
in
mov
mov
and
inc
jbe
lahf
mov
push
inc
shr
inc
fisubl
jecxz
mov
add
pushf
mov
loop
or
fsubr
addr16
or
mov
lea
jmp
xor
movsl
or
in
outsl
scas
or
dec
sahf
cld
mov
mov
push
inc
fisttpl
jnp
ljmp
inc
mov
jge
mov
ljmp
push
test
fs
adc
cmp
sbb
dec
dec
dec
and
pop
and
movaps
cmp
bound
or
push
mov
outsl
cmpb
sbb
jl
sbb
fsubl
cli
call
hlt
addr16
rolb
adc
daa
mov
and
pop
add
mov
jne
sbb
int
add
je
xchg
popf
mov
mov
lret
jo
push
xor
enter
push
pusha
daa
cmp
adc
dec
sahf
sbb
xor
inc
sub
outsb
adc
and
aaa
cmp
sub
aas
push
cmp
in
xor
xor
mov
mov
pusha
in
pop
xchg
fisttpll
mov
pusha
cli
sbb
lret
xor
adc
dec
cmp
lea
inc
in
xor
push
fcomip
push
push
push
std
xlat
mov
lret
mov
mov
push
xchg
lret
cmpsl
xchg
push
int3
add
mov
inc
push
xchg
mov
cmpsl
xchg
call
push
sbb
add
sbb
sbb
inc
mov
jae
mov
mov
leave
sub
repz
xchg
test
add
cmp
inc
jns
rolb
xchg
xchg
aam
xchg
cmpb
jae
js
lret
xlat
dec
repz
push
cli
pop
or
xlat
xorb
sbb
in
sub
push
in
andl
or
imul
push
push
mov
dec
mov
xor
add
push
test
dec
pop
notl
dec
int3
enter
cwtl
push
es
mov
add
leave
pop
pop
mov
dec
pop
fsts
inc
stos
fdivs
cmp
pop
xor
mov
insl
and
loop
jnp
out
or
adc
adc
cmp
dec
dec
dec
repnz
push
dec
cwtl
mov
test
xor
ret
mov
or
dec
lods
cmpsb
mov
out
jno,pn
and
xchg
mov
xor
lea
cmp
bound
xorb
jecxz
sarl
sbb
sbb
mov
xchg
rclb
xlat
mov
add
pop
mov
sbb
sbb
fdivrs
addl
push
sub
jns
out
inc
and
fdivrl
or
call
push
aam
jbe
xchg
out
push
mov
out
test
andb
pusha
addr16
cmp
ss
cmp
xchg
fiadds
jbe
dec
test
xchg
call
popa
pop
adc
mov
testl
hlt
repnz
stos
stc
and
inc
mov
shl
into
jno
dec
notb
cmp
ret
pop
xchg
aam
jmp
xchg
movsb
test
jo
or
fstl
mov
or
xchg
xor
and
lds
and
mov
pop
sub
jno
test
sub
mov
fxch
daa
in
fisubrl
inc
xchg
cmpsb
inc
int3
mov
hlt
pop
rcr
ds
jnp
add
sahf
clc
dec
jp
jne
sub
popf
sti
push
in
out
hlt
or
fwait
es
pop
adc
xor
stos
jp
adc
add
outsl
inc
fmuls
ret
jno
repz
icebp
cmp
mov
cmp
push
js
add
add
mov
add
ss
fdivl
shrl
sti
pop
push
cld
mov
add
mov
out
scas
ja
fwait
movsb
ret
mov
xchg
lret
sub
inc
add
and
cwtl
jo
mov
push
popa
movsl
push
adc
aam
adc
aaa
pop
rorl
adc
in
fcoms
dec
or
inc
mov
subl
jmp
xchg
loope
mov
inc
sbb
sbb
push
jbe
loop
jno
and
jg
stc
test
cld
je
push
add
mov
aam
std
es
les
pop
dec
jnp
cmp
sub
sbb
dec
or
jnp
mov
mov
mov
callw
pop
or
dec
sarl
jnp
out
mov
outsl
xlat
and
push
sub
stc
lret
movsb
insb
jae
pop
ss
cmpsb
or
mov
sbb
pop
cmp
add
sub
lret
sbb
push
jne
bound
loopne
inc
cmp
adc
dec
xor
mov
or
cltd
xchg
cld
jp
subb
ss
lds
lret
mov
dec
ds
aad
test
int3
aam
addl
in
nop
add
ret
imul
movsl
repnz
clc
xchg
cmp
pop
iret
lcall
inc
xlat
pop
inc
jp
dec
xchg
scas
and
mov
adc
mov
push
dec
pop
adc
imul
idivb
xchg
jo
adc
arpl
out
stos
pop
adc
lret
or
dec
aad
rorl
lret
out
mov
sbb
sbb
sbbb
in
pusha
lock
imul
lcall
jle
push
jecxz
lcall
ss
sub
aad
jle
push
or
js
leave
pop
xchg
cmpsb
lock
aad
out
nop
mov
dec
mov
and
cmp
inc
mov
cmp
daa
sub
xchg
add
imull
leave
mov
aaa
xchg
imul
push
rcrl
mov
xchg
test
test
stos
in
daa
mov
xchg
not
jo
repz
jne
pop
inc
into
ud0
push
pop
sub
cwtl
jg
xor
ljmp
not
dec
jg
mov
pushf
stos
xchg
push
ljmp
xchg
push
cvtps2pi
cmp
xchg
fsubrl
daa
pop
fdivrs
lock
shrb
ds
pop
dec
pushf
dec
pop
sub
pop
jno
out
das
mov
movsb
jge
dec
addl
xchg
push
insl
sahf
and
xor
push
shlb
jno
cmpsb
and
daa
lret
inc
ds
pop
adc
push
test
jp
jae
fwait
aad
cwtl
push
dec
cld
aam
adcl
dec
cmp
fildll
lret
pop
cmp
jno
add
xor
xor
cmp
testl
in
ret
ror
cmp
xchg
dec
cmp
xchg
sbb
xor
loopne
sbb
push
mov
lea
cmp
cmp
sub
ficompl
xchg
adc
cmp
loope
and
mov
or
iret
hlt
in
adc
mov
rcr
xor
out
mov
lcall
jg
jle
pop
lock
adc
xchg
pop
mov
mov
xchg
mov
ror
rcll
add
dec
pusha
or
mov
cltd
mov
mov
pop
stc
cs
xchg
or
fmull
add
or
imul
stos
mov
pop
pop
je
test
xor
jne
pop
ja
dec
adc
jnp
fcomps
lods
sub
int
lea
int3
in
xchg
lahf
sub
sbb
mov
roll
out
xchg
mov
pop
out
lods
push
aaa
fdivrl
dec
cwtl
and
mov
push
das
or
lods
aam
addb
jmp
push
dec
xchg
pop
cmc
sbb
ds
adc
test
into
mov
dec
pusha
adc
inc
mov
mov
xchg
in
dec
loop
mov
inc
mov
jb
int
mov
push
enter
xchg
sbb
mov
in
and
lock
les
js
dec
outsl
out
jp
cmp
js
adc
jle
stc
cmp
ss
push
inc
mov
mov
cwtl
and
fnsetpm(287
add
imul
mov
sarb
popf
fisubrs
mull
dec
daa
in
and
orb
test
lock
es
pop
pop
imul
subb
jb
mov
fadds
inc
shll
mov
popf
js
lcall
mov
cmp
dec
inc
fs
and
ljmp
xchg
icebp
adc
insb
add
or
jmp
cld
outsb
std
xchg
fisubrs
mov
fcoml
xchg
cmpsb
js
xlat
dec
mov
mov
sbb
fcoms
sbb
adc
jnp
scas
js
mov
mov
in
cmp
mov
push
test
xor
mov
pop
cmp
daa
cmp
add
cmp
sub
repnz
stos
rcrl
pop
mov
mov
pop
sbb
add
popf
xor
mov
jno
pop
jnp
mov
ja
mov
mov
jbe
aaa
shlb
sbb
scas
icebp
push
stos
sub
xor
repnz
inc
or
add
adcl
fcompl
or
insb
insl
pop
mov
fnsave
scas
popf
pusha
sti
shll
jns
sub
adc
fwait
es
add
icebp
imul
lock
cli
adc
cmpsl
adc
lods
gs
rolb
jno
leave
sahf
inc
push
scas
xchg
lcall
into
bound
mov
dec
lret
mov
movsl
mov
mov
xchg
push
add
scas
xlat
pushl
pop
xchg
pop
popa
bound
sbb
cmp
and
pop
ret
aam
fwait
inc
or
push
cmpsl
mov
dec
mov
adc
popa
dec
test
mov
inc
xchg
divl
fstps
js
jo
jp
ja
add
arpl
adc
adc
jmp
repnz
aam
loope
popa
and
mov
sti
dec
push
f2xm1
out
or
jge
jo
cmp
aam
sub
push
jbe
jl
mov
inc
lcall
icebp
mov
fiaddl
fisubs
lret
lods
int
xchg
jno
ret
sbb
int3
xor
dec
add
mov
jne
aas
pusha
pop
push
fcmovnu
push
mov
sarb
add
outsb
jno
sarl
mov
push
inc
pop
les
movsl
push
inc
xor
push
insb
sarl
icebp
adc
emms
test
mov
scas
dec
xchg
iret
dec
sub
or
in
mov
mov
imul
add
mov
mov
in
mov
jno
pop
mov
cmp
loope
in
ja
adc
rol
mov
cmp
ret
xor
xchg
popf
push
int
jle
std
sbb
jle
ss
fstp
jne
arpl
pop
ja
jb
pushf
xor
mov
aad
dec
inc
cli
and
ret
push
movsb
push
push
cld
aam
hlt
ret
ret
add
and
fbld
mov
ljmp
sarl
xor
jnp
jp
cld
lret
negl
xchg
push
push
scas
lcall
rorb
fidivrl
push
sbb
scas
in
call
adcb
sbb
lds
lods
mov
cltd
cmc
into
mov
dec
fnstenv
mov
pop
mov
fsts
pop
add
fincstp
mov
fsts
adc
movsl
mov
pop
in
daa
pop
cmp
mov
icebp
xor
sub
jno
out
test
rolb
rcrl
call
add
pushl
loop
dec
cs
adc
lods
insl
push
addb
jne
imul
xor
mov
pop
cs
pop
cmp
cmp
cld
inc
imul
mov
negb
leave
adc
cltd
mov
bt
jmp
sarl
stos
jg
mov
stos
xchg
jg
dec
jb
jne
imul
jp
dec
stos
rcl
cltd
push
shrd
inc
pop
fucom
mov
push
inc
sbb
outsb
test
xchg
push
popa
ds
sub
pop
fisubl
faddl
sub
adc
jecxz
loope
fildl
xchg
mov
mulb
pop
cmp
sub
imul
jne
inc
jno
mov
fldl
mov
mov
adc
imul
pop
mov
sbb
int3
insb
jg
loope
sbb
push
ljmp
fiadds
adc
jle
lds
aam
ret
push
leave
inc
xchg
mov
mov
insl
hlt
test
sub
jmp
or
je
stos
inc
lahf
adc
out
sbb
sbb
cmp
loope
sbb
jge
inc
jmp
sbb
jnp
mov
dec
std
pop
ror
enter
mov
and
lcall
int3
and
in
or
ds
lcall
pushf
xchg
ret
std
mov
pop
cmp
push
js
push
xor
test
sahf
cmpsl
xchg
mov
insl
in
sub
cmp
dec
mov
hlt
mov
icebp
mov
test
jo
xchg
jmp
aad
aam
push
mov
mov
adc
jge
in
loope
push
xchg
mov
aas
daa
sub
cltd
lods
and
dec
mov
mov
jbe
or
mov
push
jp
rorl
xor
ja
cs
mov
gs
jns
sub
cli
adc
mov
cmp
movsl
lahf
rorb
xchg
stc
inc
push
pop
push
and
movsb
jae
xchg
push
push
leave
fidivs
mov
jns
xor
mov
outsl
jb
lods
pop
es
mov
mov
add
xchg
push
pushf
and
lods
jo
test
mov
lret
mov
push
lods
je
cmp
jecxz
mov
lcall
outsb
rcl
cmp
icebp
pop
jbe
mov
pop
xchg
stos
push
or
insb
sub
xor
add
fcmovnb
xchg
in
mov
xchg
es
or
mov
pop
sub
es
xchg
mov
loope
les
add
cmc
and
les
inc
mov
add
popa
xorb
push
cwtl
pop
pop
sahf
mov
inc
dec
add
outsl
stc
call
add
cs
mov
jge
cmc
ljmp
lea
mov
stos
push
mov
xor
testb
outsb
inc
fisttpl
mov
add
push
and
mov
in
incl
addr16
cmp
mov
sub
mov
call
daa
into
adcb
dec
mov
push
dec
ljmp
fiaddl
gs
pop
xchg
mov
xor
add
mov
adc
cltd
jg
add
xchg
mov
getsec
pop
loop,pt
push
sahf
push
jns
pop
cmp
xor
push
scas
xchg
add
cld
out
jno
rolb
imul
pop
in
daa
push
inc
pushf
sub
mov
mov
sahf
inc
pop
sub
pop
or
mov
xor
in
pop
rclb
test
aad
jmp
mov
xor
fwait
jle
sbb
sbb
pop
ret
xor
cmc
adc
push
cmc
sbb
inc
shld
repnz
mov
adc
push
mov
xor
sti
push
mov
mov
int
inc
sub
and
mov
out
fcomps
fstpt
decl
jge
jmp
mov
loop
scas
sbb
or
lret
jp
imulb
movsl
cmc
mov
std
addb
mov
mov
jmp
sub
sbb
and
fcomps
scas
outsl
jae
jo
jle
sbb
sub
jb
pop
std
xor
push
jge
dec
jle
xchg
addb
ljmp
xor
dec
pop
addr16
sub
sarl
test
fstps
dec
loope
lret
cmp
lods
loope
and
mov
jb
jge
pushf
mov
mov
mov
mov
xchg
mov
stc
inc
jb
out
sbb
adc
addr16
mov
ljmp
dec
push
icebp
inc
lock
dec
int
sub
jae
pop
bound
cwtl
jne
push
ret
cmp
xlat
clc
adc
mov
push
fildll
add
inc
or
mov
mov
es
cwtl
leave
mov
pop
stc
lahf
or
mov
loopne
inc
or
mov
inc
loop
cmpl
jle
inc
or
mov
pop
mov
xchg
rcll
cli
xchg
jbe
pop
cmpsb
data16
inc
xor
add
xchg
sbb
xor
and
aas
push
mov
popf
sbb
dec
lea
adc
dec
aaa
or
and
mov
mov
fstpt
rcrb
data16
rcrb
cmp
dec
int3
addl
inc
hlt
in
scas
loope
pop
and
rcrl
mov
test
nop
ltr
adc
movsl
minps
clc
dec
punpcklbw
push
repz
push
gs
fistpll
inc
push
sbb
iret
inc
mov
test
xorl
movsb
sub
cmpsb
dec
andb
aaa
rorb
popa
mov
outsb
xchg
mov
xor
test
cmc
mov
pop
stc
xchg
fistps
and
outsb
outsb
jne
out
js
fldt
daa
jb
stos
mov
push
mov
mov
xorl
mov
and
sub
adc
and
popf
xor
and
addl
or
add
dec
push
sub
loope
hlt
cli
pandn
in
sbb
in
dec
sti
push
pusha
jb
cs
stos
popf
and
ds
jmp
pop
add
lods
into
push
sbb
jb
mov
push
adc
adc
and
cld
gs
add
ljmp
pop
pop
gs
scas
sub
inc
and
pop
stc
jle
movsb
sub
mov
and
jns
inc
arpl
mov
adc
add
pop
les
mov
fwait
inc
mov
lea
dec
sub
sbb
lret
push
lret
imul
xor
sbb
ja
adc
lock
mov
in
jns
dec
mov
push
xlat
mov
fistl
xor
out
test
inc
lret
pop
push
push
addr16
pop
xchg
dec
jmp
out
pop
xchg
mov
inc
jne
xchg
adc
jmp
cmpsl
adc
es
or
mov
push
push
shll
in
inc
lcall
mov
repz
sub
lock
pop
pop
mov
xchg
or
xor
cmp
push
pop
frstor
xor
gs
movsb
xchg
mov
add
mov
pop
imul
cmp
aaa
in
out
idivl
cmp
pop
xlat
aam
iret
pop
cltd
fs
jecxz
adc
xor
mov
inc
bound
push
aam
sahf
lret
mov
xchg
lds
cltd
cld
in
sarl
mov
loop
pop
dec
out
and
outsl
xchg
sub
adc
xor
add
xor
test
dec
inc
sbb
ret
out
xor
jns
pop
sahf
inc
rorl
sub
jns
sti
or
mov
push
xor
dec
or
cmpsb
pushf
outsl
xor
push
ds
data16
push
sbb
mov
pop
popa
cmp
mov
push
xchg
push
cltd
jno
jnp
faddp
mov
scas
scas
icebp
sub
insl
cli
jne
adc
insb
cmc
clc
xorb
xchg
xor
xchg
popf
insl
dec
cmpsl
ret
stos
and
or
js
push
sbb
mov
or
adc
je
lcall
lea
cmpsl
fucomip
popl
and
hlt
ret
pop
pop
loopne
pop
push
push
and
inc
enter
add
aas
rorl
or
mov
fcompl
mov
add
cltd
mov
popf
cmp
jo
lods
xorl
lods
inc
adc
inc
das
jle
scas
cmp
or
pop
and
shll
popf
inc
cltd
or
aam
shll
dec
cltd
mov
decl
mov
mov
push
imul
dec
mov
xor
test
dec
adc
aam
xchg
int
jle
mov
jnp
fildll
add
add
incb
pushf
not
outsb
adc
orl
adc
or
lods
repz
cld
inc
fimull
mov
fidivl
sub
fildll
mov
push
mov
mov
insb
inc
cmp
out
fstl
cltd
in
les
es
ja
mov
xlat
dec
test
adc
push
loope
daa
popl
xor
xor
pop
adc
ja
fldcw
hlt
dec
cltd
mov
jo
cli
data16
pop
push
sbb
cwtl
popa
js
arpl
add
sbb
cs
xchg
or
lods
pop
push
jmp
aas
pop
mov
int
jmp
std
pop
add
mov
mov
arpl
das
dec
repz
dec
dec
push
bound
out
adc
pop
pop
jecxz
les
cmp
dec
fdiv
adc
dec
imul
scas
out
adc
addr16
dec
xor
je
sub
mov
fwait
sbb
jecxz
sbb
mov
jmp
jecxz
outsl
sub
out
imul
or
out
xchg
jle
jmp
ret
mov
cli
test
sarw
sub
cmp
push
or
mov
dec
mov
push
out
hlt
add
jg
addb
cs
mov
sub
pop
add
mov
cmp
xchg
fstpt
push
or
fstl
xchg
repz
rcl
push
dec
and
or
xchg
sbb
dec
adc
jl
shlb
add
inc
push
mov
push
clc
mul
inc
clc
loop
test
inc
mov
cmc
cmp
lret
lds
push
test
std
mov
insb
testb
or
push
loop
jmp
movsb
mov
sahf
int
jle
dec
loopne
push
mov
adc
cmpl
mov
dec
push
dec
inc
sbb
or
outsb
mov
sub
push
rorl
dec
cmp
push
push
cmp
xor
add
mov
loopne
xchg
mov
adc
push
inc
mov
cs
in
xor
fcmovnbe
sbb
cmp
inc
sub
sbb
rsm
fnstenv
xchg
inc
rcr
filds
mov
push
out
in
scas
scas
movsl
scas
mov
sub
push
pop
pop
or
popa
add
bound
lret
leave
mov
aaa
sbb
ror
xor
jb
out
mov
fadds
inc
xor
rorb
push
jnp
and
xchg
cmp
adc
cmp
jo
sbb
std
mov
sub
mov
mov
shr
lea
mov
sbb
sub
jne
lcall
dec
xor
mov
inc
jnp
push
xchg
cmpsb
add
sbb
aam
inc
cmp
pop
inc
push
mov
pushf
pop
in
mov
push
lret
loopne
aaa
scas
pop
pusha
pop
xchg
sbb
gs
into
andb
cmp
sti
enter
jg
outsl
xchg
or
cmp
aad
mov
int
dec
lock
pop
mov
ret
loope
loop
xchg
test
cmc
dec
push
testl
insl
jno
push
add
das
jnp
mov
xchg
ficoms
stos
hlt
cmp
inc
or
push
mov
mov
mov
xchg
mov
loope
test
lret
into
test
rcrb
dec
loopne
fisubrs
mov
stos
ds
jns
xor
movsl
lods
pop
mov
out
or
jmp
pop
lds
f2xm1
andb
iret
mov
jg
lret
adc
dec
in
sub
or
popa
mov
jo
rolb
dec
xchg
aam
push
dec
mov
mov
sub
inc
or
sti
imul
repz
mov
test
je
xchg
ret
ret
and
test
jl
fidivl
push
mov
push
adc
fnsave
or
addb
push
adc
xchg
lods
sahf
pop
mov
mov
add
lret
pop
fdiv
mov
cwtl
xchg
lock
gs
mov
xor
repz
es
mov
xchg
adcb
sbb
jnp
xchg
aas
shll
jp
ret
mov
lds
mov
psubw
push
sbb
jecxz
mov
into
dec
test
stos
jmp
call
lret
adcl
int3
test
push
push
lret
mov
fsub
cld
xchg
fcomps
push
mov
mov
scas
call
lcall
sti
dec
lcall
and
sahf
adc
imul
lods
mov
mov
loopne
hlt
rclb
cmpsb
xor
out
shll
rcrb
pop
push
aas
jmp
das
mov
cs
xchg
adc
mov
call
into
fidivrs
adc
dec
pop
xor
jb
push
fidivrl
cmp
in
mov
stos
stc
stos
pop
mov
in
pop
fdivs
movsl
jnp
scas
add
pushl
jp
and
ljmp
shll
xchg
aam
jmp
mov
pop
mov
into
adc
jae
push
mov
aad
aas
mov
sub
lret
sub
cmc
sub
cmp
mov
or
push
add
fucomip
adc
iret
aaa
cmp
sub
lcall
pop
adc
lods
ss
in
and
jmp
mov
in
jae
jno
lcall
lea
xor
xchg
in
imul
pop
popa
sub
std
decb
outsb
ljmp
divl
aas
les
sub
mov
sbb
push
push
shll
lds
xchg
shlb
cltd
or
mov
out
hlt
inc
mov
in
add
pusha
cmp
fwait
inc
mov
mov
sbb
fstl
xchg
test
inc
clc
mov
add
inc
dec
insl
jno
push
hlt
in
push
loop
or
pop
stc
fists
lea
aad
sti
in
into
roll
xchg
add
inc
xor
aaa
adc
cmpsb
adc
sub
dec
fistps
jns
cmp
repnz
std
ja
adc
icebp
mov
test
mov
aam
fisttpll
add
jo
or
cltd
daa
scas
pop
mov
cmp
loop
sub
cmp
cmp
inc
sub
js
popf
jns
and
hlt
jp
sbb
pusha
jb
dec
inc
clc
cmp
push
pop
lods
iret
pushf
insb
int3
shll
stos
mov
lahf
fdivs
mov
lods
mov
les
jo
mov
or
les
cs
stc
hlt
adcl
jge
mov
nop
rcll
into
sbb
pop
insb
adc
fimuls
mov
fcompl
cmp
or
in
cltd
push
out
scas
lret
jecxz
push
and
mov
jne
mov
xor
and
in
les
aas
inc
insl
aas
mov
fdivl
mov
data16
dec
adc
in
xor
scas
xor
adc
or
sub
cmp
cmpsb
cmp
push
movsb
and
cmpb
clc
daa
pop
push
inc
les
cltd
clc
or
add
and
stos
add
ror
lods
mul
shr
mov
rcll
xor
arpl
test
cmpsl
jmp
adc
andl
mov
mov
aad
pop
in
mov
fadds
xor
mov
inc
mov
and
mov
xchg
jge
mov
inc
mov
in
inc
lods
dec
pop
adc
mov
xor
data16
imul
dec
scas
inc
popa
leave
ljmp
aam
lds
pop
mov
sub
movsl
xor
addl
jns
jo
xor
cwtl
xchg
mov
insb
bnd
mov
inc
rcll
xchg
xor
adc
mov
adc
sbb
aad
inc
pop
mov
xchg
test
loopne
outsb
call
shrl
scas
cmp
mov
cli
or
dec
add
cmp
xchg
adc
call
popa
sbb
mov
repnz
mov
inc
push
jmp
xchg
out
sbbb
jg
sbb
lds
xchg
int3
orb
shrd
adc
daa
jl
mov
ret
repz
mov
loop
mov
sbb
cmp
data16
imul
ds
lcall
pop
xorl
push
cmpsl
mov
mov
ja
dec
xchg
mov
add
xchg
mov
gs
xchg
shll
stos
cmp
sbb
pop
das
jp
out
push
out
mov
dec
out
xchg
insl
enter
ja
dec
sarl
and
sub
lods
add
cmp
sbb
out
cld
jns
xchg
in
fwait
in
jmp
add
fsubs
in
scas
jbe
xchg
js
sub
mov
sub
inc
pop
or
jmp
push
add
mov
push
xor
mov
popf
sub
cmp
faddl
les
rep
mov
push
pop
push
cmp
xchg
xchg
push
adc
add
xchg
mov
adc
js
pop
inc
sar
mov
pop
into
jecxz
std
fbld
in
vcomisd
sbb
push
mov
fmull
mov
xor
mov
out
call
mov
test
mov
insl
jecxz
adc
out
hlt
mov
push
mov
das
in
xchg
mov
pop
or
inc
jecxz
jbe
scas
jo
int3
dec
mov
dec
fcoml
int
and
sahf
lods
add
adc
orb
push
xchg
pop
sub
arpl
lea
dec
pop
xchg
xor
orb
gs
sbb
ficoml
jns
mov
bound
pop
cli
daa
pop
filds
pushf
and
push
movl
or
sbb
jecxz
js
nop
sahf
gs
loop
sahf
mov
mov
inc
negl
xchg
jbe
push
xor
push
arpl
lcall
sbb
mov
inc
xor
cmp
jnp
mov
cmpsl
mov
dec
push
imul
cmp
xlat
sbb
xchg
inc
andb
shr
es
popa
xor
lret
push
sti
addl
jno
xchg
adc
in
lahf
sub
movsb
js
cs
repnz
cmp
sbb
or
cmp
pop
or
and
sub
add
sub
lds
push
test
icebp
and
cmpb
mov
out
out
pop
push
push
lods
pop
xchg
movsl
lret
mov
movsl
xchg
jecxz
cmp
cmp
ljmp
jle
shrb
jnp
xor
mov
ljmp
pop
jg
lods
mov
shl
ja
std
pop
mov
jg
dec
test
nop
fdivs
lret
frstor
push
repz
mov
and
shll
dec
clc
fmull
cmp
sbb
enter
adc
push
dec
sbb
push
pop
or
cmpsl
inc
fisubl
jne
stc
sub
jnp
dec
aaa
push
sub
push
subl
loop
xchg
pushf
aam
test
cmc
movsl
fucomi
out
pop
notl
or
cld
jmp
pusha
inc
jl
adc
out
dec
push
push
inc
pop
jns
es
cmp
push
mov
pop
mov
mov
and
mov
ja
lahf
lret
sti
xchg
inc
lods
out
pushf
rol
pop
outsl
ja
adc
add
add
hlt
adcb
pop
mov
or
xchg
dec
mov
dec
cltd
jp
or
imul
fs
mov
adc
push
xor
shlb
roll
test
cmp
mov
es
push
icebp
xor
ret
test
xlat
push
loope
fnstsw
and
lea
ds
mov
inc
mov
xorb
loope
pop
mull
inc
push
mov
sarb
inc
imul
sbb
or
mov
gs
ficoms
mov
xor
xchg
dec
in
jno
icebp
or
push
ret
mov
fdivrs
ja
pop
ljmp
cwtl
insb
ss
inc
pop
stos
jno
addr16
rol
stos
es
stc
jne
jb
sub
movq
xchg
mov
mov
push
mov
cli
push
fnsave
pop
push
enter
lcall
rcrb
jge
mov
jecxz
iret
push
cmp
and
jo
mov
mov
and
cmp
and
xchg
test
mov
stc
sbb
cwtl
adc
jae
cwtl
xchg
inc
mov
lods
cmp
push
jp
fisttpll
xor
orl
push
push
popa
shll
in
and
and
xchg
pop
push
mov
test
popl
lods
pop
sub
add
int3
mov
lret
adc
xor
jns
call
dec
adc
decl
jmp
mov
shlb
and
mov
aas
and
jp
sub
mov
aas
sub
cmpb
or
cmp
sbb
dec
jns
dec
mov
cmpw
jo
mov
jge
ret
shlb
icebp
pop
popf
jae
sahf
in
imul
shrb
arpl
mov
cmp
xor
inc
popa
and
cmp
and
repz
mov
jbe
pop
cmp
push
sahf
pop
nop
mov
and
popa
rcrl
jnp
lea
pop
dec
inc
call
punpcklwd
jmp
add
gs
mov
sbb
dec
fs
pop
adc
bound
cmp
push
mov
and
enter
adc
xor
sub
dec
leave
loop
lret
jmp
xchg
sbb
and
jns
inc
gs
pop
into
add
test
xchg
sbb
arpl
shrl
data16
sbb
insl
in
fsub
mov
sbb
fs
jo
pop
push
add
packsswb
adc
jne
push
cmpsl
lcall
jbe
mov
xor
jge
scas
jae
adc
arpl
add
lret
int3
jnp
sahf
xchg
loopne
sbb
and
arpl
sbb
iret
mov
push
and
incb
imul
or
mov
mov
cmp
jge
mov
sahf
dec
adc
clc
test
xchg
xlat
adc
mov
mov
xchg
out
cld
in
in
jge
sub
mov
xor
push
mov
push
cld
scas
push
xchg
aam
sbb
cld
mov
sti
rorb
out
js
cmc
xchg
clc
inc
add
rep
out
mov
xor
mov
xchg
mov
xor
dec
xchg
pop
or
jns
test
faddp
adc
ret
fcompl
ljmp
pusha
in
jnp
aam
sub
mov
cwtl
nop
repnz
mov
sub
das
sbb
movsb
into
nop
jmp
call
leave
push
push
xor
ret
push
lret
lods
outsl
subb
inc
xchg
popa
xchg
adc
cld
inc
dec
jle
mov
addl
mov
mov
mov
roll
imulb
push
jno
push
push
cmp
cmp
out
xor
lods
dec
in
xchg
dec
in
sti
dec
add
out
add
jb
loop
mov
and
sbb
je
aad
xor
insb
mov
fisubl
mov
pop
fmuls
nop
ret
sbb
mov
lock
sub
fcomip
jo
sbb
mov
xchg
lock
or
pop
fdivr
inc
shrl
sub
dec
jle
mov
mov
push
pop
add
inc
push
std
mov
mov
xchg
cmp
inc
jmp
ja
mov
xchg
mov
lret
jle
adc
andl
negb
adc
sub
sbb
test
add
push
lcall
call
mov
lcall
fsts
sub
in
mov
subl
jl
sub
rorl
into
xchg
cmp
xchg
mov
lcall
mov
cwtl
mov
or
scas
jmp
pop
mov
sahf
lods
xchg
jg
push
int3
fs
push
imul
out
xchg
repnz
sub
cwtl
mov
rcr
inc
sub
push
sub
push
mov
inc
ret
outsl
sbb
adc
push
fsubs
and
push
cmc
sbb
cwtl
sbbb
pop
fldl2e
out
es
mov
mov
or
popf
sarb
adc
dec
addr16
sub
data16
out
rorl
xor
pop
mov
sub
add
popf
jp
mov
andl
stos
cltd
xchg
insl
jecxz
xor
pop
push
pop
xchg
add
sbb
mov
inc
add
lcall
lods
xchg
xlat
xchg
mov
xchg
mov
adc
lods
stc
loopne
aam
lss
xchg
lods
aad
jno
jecxz
mov
or
inc
jo
and
dec
pushf
movsl
cmp
lods
dec
pop
rorb
mov
out
sbbb
cmp
sub
push
rorb
sti
jne
imul
aam
cs
mov
mov
int
mov
insl
movsb
mov
cmp
jno
pop
xor
add
pop
push
pop
loopne
xchg
call
sbb
xorb
cmp
icebp
add
mov
imul
sahf
push
pop
sbb
das
pop
dec
cmp
ss
cmc
outsl
cmp
fnsetpm(287
push
xor
add
jnp
push
push
rcrl
sub
push
xchg
ljmp
pop
mov
out
pusha
std
cmc
nop
popf
or
dec
sbb
movsb
mov
shr
mov
in
add
mov
dec
or
sbb
jmp
mov
lret
adc
pop
sub
notb
dec
or
sub
stos
adc
nop
test
cmp
dec
aas
loope
jp
imul
mov
push
cmp
lret
sub
pop
push
dec
fstl
test
aaa
sbb
adc
pop
ljmp
xlat
je
pop
imul
pop
dec
data16
xor
mov
scas
add
pop
push
push
addr16
or
xchg
xor
int
and
into
test
sti
jle
ds
rcrb
add
mov
jno
cs
jns
decl
push
nop
fs
mov
cmc
ret
adc
dec
push
lahf
fisttps
or
frstor
jmp
in
pop
pop
jnp
daa
add
fists
mov
xchg
add
sbb
nop
mov
loopne
add
xchg
rcrb
dec
pop
loopne
cmp
ss
or
sub
xchg
add
pushf
out
jecxz
mov
fiadds
push
xor
push
int
pop
in
mov
mov
lods
out
in
mov
pop
mov
pop
add
int3
add
dec
sbb
jns
inc
add
shl
dec
ja
fbstp
lds
imul
outsb
jne
mov
sarb
cmp
and
out
sti
fcom
in
inc
cmp
lods
std
cmpl
repnz
xchg
test
xchg
into
pusha
mov
xchg
fdivl
pop
xchg
aad
xchg
es
ljmp
pusha
fs
repz
lock
dec
das
jns
cmp
jno
lret
fmull
jmp
inc
ret
testb
and
jno
mov
mov
mov
jmp
mov
fsubl
adc
sub
xor
and
adc
andl
add
jbe
cmp
ficompl
nop
xor
ss
js
sbb
pop
out
subl
pop
movsl
cmpsl
or
jb
sub
into
lahf
or
out
ret
bound
insl
add
or
insl
ret
adc
adc
test
into
sub
dec
insb
pushf
nop
imul
test
imulb
pop
lahf
test
pop
shl
imul
cmc
imul
dec
and
push
dec
xor
dec
push
shll
frstor
das
cli
imul
mov
push
movl
mov
int3
mov
xchg
shr
adc
sbb
mov
int3
mov
pop
mov
adc
xchg
xor
sub
push
mov
and
loop
push
mov
insl
aaa
aam
shrl
in
test
sub
ds
and
mov
jmp
je
mov
lahf
cwtl
gs
enter
mov
push
dec
mov
mov
mov
fxch
data16
adc
inc
sub
or
stc
shrl
pop
mov
clc
movsb
cmpsb
sbb
adc
insb
ficompl
in
dec
lods
push
ret
roll
dec
fldcw
adc
and
jo
adc
sbb
push
dec
and
sarl
jne
xchg
jbe
push
into
push
jge
dec
push
jno
out
pop
push
stos
mov
mov
mov
mov
leave
cmp
jb
adc
sbb
cmp
daa
xor
jecxz
div
jno
mov
cmp
jbe
mov
or
push
pop
add
lcall
xorb
sbb
cmp
push
or
adc
pop
mov
fdivl
sub
dec
stos
push
or
dec
sbb
add
or
jae
aam
mov
xor
into
push
daa
jle
cmp
leave
jnp
dec
scas
xchg
jl
cmp
xchg
out
sti
sub
enter
add
mov
dec
jne
fst
rorb
sbb
and
out
dec
push
cmp
sbb
jmp
mov
imul
sbb
fnstsw
add
xchg
jmp
push
divb
dec
mov
jle
sti
push
popa
push
push
idivb
jmp
sub
loop
or
mov
ret
in
adc
xor
jp
pusha
xor
add
rep
stos
pop
aas
scas
mov
lock
frstor
dec
cs
seta
dec
jg
mov
scas
mov
cmp
loopne
sbb
mov
fidivrs
ror
add
cs
cmp
jo
mov
cmp
mov
sbb
lods
cmp
sub
fs
push
aad
pop
jmp
and
shll
mov
ret
int3
call
sbb
pushf
sub
jno
stc
inc
out
insl
sub
loope
clc
sbb
adc
test
jmp
jae
dec
cltd
clc
sub
psrlw
mov
data16
jnp
ja
mov
add
cmp
jbe
push
ret
pusha
push
cld
xor
std
mov
adc
cmpsb
test
mov
movl
pop
outsb
dec
lods
dec
dec
sti
xchg
loope
dec
pop
lcall
push
push
call
popf
popa
adc
or
sub
inc
mov
xlat
lcall
cltd
stos
inc
sbb
or
mov
outsb
mov
rcrb
imul
inc
lahf
inc
cmpsl
mov
js
dec
int
cmpsl
xchg
fdivrs
and
sub
jmp
cmp
repnz
aaa
or
ret
loopne
scas
ja,pn
hlt
call
jp
mov
imulb
jmp
sbb
jl
pop
xchg
das
sahf
cli
out
push
movsl
push
and
popa
nop
out
lahf
mov
push
movl
mov
sub
addr16
movsb
or
mov
lahf
cmp
inc
cmp
and
rolb
or
daa
xchg
loop
lcall
cltd
jle
insb
mov
mov
mov
jb
xchg
int3
lea
jmp
push
lahf
cmpsb
push
mov
jl
outsl
push
pushf
adc
scas
hlt
rol
sub
test
dec
jecxz
in
int
out
mov
dec
xor
lret
inc
notl
daa
mov
xchg
mov
sti
mov
fsin
lock
jecxz
xchg
mov
xchg
jo
cmpsl
scas
nop
loopne
shl
jns
fucomip
lret
dec
mov
xor
xor
dec
daa
mov
loop
pop
icebp
dec
inc
rcl
xchg
mov
mov
and
jnp
adc
add
xchg
lcall
mov
clc
bound
scas
jae
xchg
pop
in
notb
or
fdivrp
xchg
hlt
cmc
jg
gs
xor
or
push
icebp
jo
ret
rorb
ljmp
nop
hlt
dec
shrb
mov
xorb
xchg
fs
sbb
pop
pop
popa
push
stos
les
mov
sub
fwait
xchg
rcll
mov
pop
lods
cmp
aas
aad
fildl
or
pop
cmp
in
repz
adc
clc
pop
mov
in
lcall
mov
cltd
lea
dec
in
pop
int3
inc
push
loop
mov
fcoml
and
je
sub
pop
fsubl
in
mov
je
lock
das
cwtl
sbb
mov
loope
cli
mov
rcl
inc
pop
movsl
data16
ss
addr16
rclb
fsts
jae
dec
jmp
xchg
xor
or
fcmovu
and
push
push
mov
arpl
xchg
ja
andb
int3
adc
call
stc
popa
sarl
in
fstpl
pop
and
daa
int3
cmp
stos
cmp
mul
push
push
xor
cld
and
testb
lds
leave
cltd
adc
xor
cmpsb
mov
add
std
pusha
inc
push
fsubs
movsl
push
mov
imull
test
lret
dec
and
inc
loop
iret
or
cmovnp
hlt
mov
sub
sub
mov
mov
stc
lea
lret
insb
cmp
or
pushf
xchg
pop
in
jns
ret
inc
stos
push
orl
inc
adc
daa
push
dec
cmc
scas
fisubs
cli
push
andb
xchg
cmp
cmp
icebp
call
jmp
repz
add
mov
shll
fs
sar
jns
movsb
aaa
btc
adc
fdiv
test
fisubrs
das
pusha
and
enter
or
cld
inc
sahf
arpl
adc
pop
mov
je
call
and
idiv
lret
lret
test
xchg
movsb
test
xor
cwtl
push
scas
sub
cmp
test
stc
in
int3
cmp
inc
inc
mov
out
int
shrb
sub
fldt
jg
cmc
inc
cld
popa
fmuls
pop
adc
mov
popa
rorb
jns
mov
mov
adc
test
testb
adc
jnp
shrb
stc
pop
nop
orb
xchg
stc
lea
mov
cmpl
bound
mov
ret
roll
test
mulb
cmp
pushf
dec
movsl
stos
inc
insl
sub
out
mov
mov
pop
cmp
out
and
popa
ja
xchg
das
inc
iret
xor
jle
mov
ret
popa
js
cltd
fcompl
rcr
xor
jle
gs
xchg
xorl
jmp
ss
xchg
pusha
hlt
shll
mov
cmpl
pop
lock
leave
outsl
xor
jns
icebp
dec
gs
in
dec
inc
pop
and
xor
sarl
push
add
dec
dec
dec
adc
pop
inc
cwtl
nop
adc
lcall
std
mov
and
insl
out
jnp
mov
mov
or
fsubrs
or
das
or
and
mov
jae
imull
xorl
or
lret
and
cmpsl
arpl
pushf
leave
and
mov
cmp
sbb
mov
addr16
fdivl
outsl
iret
insl
jae
add
cld
add
add
mov
dec
out
es
adc
push
sub
and
push
sub
insl
repz
mov
pop
xor
jb
jae
add
cmp
pop
sub
cmp
bound
jmp
out
sbb
jae
and
imul
shll
daa
jge
js
inc
test
rcll
mov
inc
mov
and
filds
out
lret
ret
daa
aas
cmc
out
inc
mov
dec
pushf
push
push
mov
sbb
sub
and
bound
rcl
outsl
ficoml
push
inc
jle
dec
ret
adcb
jecxz
clc
inc
fstpl
xchg
and
rcl
adcb
imul
pop
lods
xor
ficomps
push
ret
jl
push
shl
shl
xchg
andb
out
lea
out
aas
or
cmpsl
cs
or
jle
cmp
stos
decb
xchg
sbb
dec
xchg
in
push
add
add
sbb
dec
push
mov
rclb
and
repz
xor
add
mov
mov
xor
sub
xor
icebp
dec
iret
or
mov
sub
fbstp
sbb
add
xchg
lods
dec
xor
lods
sub
cmp
jne
scas
les
stc
mov
or
adcb
lds
adc
cwtl
sub
cmp
xor
out
stos
enter
dec
push
mov
leave
mov
or
jo
inc
mov
test
imul
pop
aam
dec
pusha
ret
dec
int3
mov
adc
xchg
push
dec
mov
add
dec
jg
sub
ja
cmp
xchg
or
cmp
and
dec
xchg
lret
test
daa
and
or
jbe
jge
dec
loopne
scas
or
sbb
jb
xor
mov
sbb
lods
mov
jecxz
mov
rcrl
and
dec
pop
mov
cmc
out
pop
mov
xlat
xor
add
and
dec
xlat
or
es
inc
in
pop
movsl
lcall
add
stc
lcall
call
xor
fwait
jo
dec
test
ret
cli
cmp
and
xchg
xchg
pop
jns
and
push
sahf
or
mov
inc
stos
mov
pop
cld
rolb
and
cmpsb
sti
stc
pushf
mov
sbb
out
inc
jg
xor
aam
adc
push
sbb
rcr
imul
icebp
mov
arpl
cs
sbb
sub
xchg
mov
sbb
xor
cmpsl
loop
lds
outsl
ljmp
or
insb
xor
sahf
fnstenv
arpl
cmp
cmp
into
adc
jp
push
lods
test
xchg
pop
mov
dec
xchg
out
clc
pop
filds
push
pop
jo
or
mov
es
int3
xchg
inc
ja
xlat
bound
pop
sub
jns
lahf
cmp
bound
or
out
mov
adc
lret
fdivl
sbb
movsl
push
fwait
xor
mov
test
push
inc
out
sti
mov
pop
pop
mov
lods
mov
mov
in
mov
xor
inc
shrb
test
ja
in
mov
jecxz
adc
mov
xor
xchg
and
jb
in
subl
leave
cmp
ror
ret
xchg
pop
fmul
push
cwtl
fcompl
leave
pop
sub
iret
pop
pop
out
cs
mov
fldt
or
jecxz
lahf
lret
xlat
mov
cmp
xor
push
in
xchg
movsl
mov
pop
sti
mov
sbb
in
stc
sarb
xchg
es
loope
shrb
stos
mov
adc
loopne
push
insb
push
cmc
jnp
in
clc
fwait
mov
pop
push
mov
into
jle
xchg
arpl
daa
shrb
cmp
push
mov
cmp
adc
dec
sub
les
fs
pop
xor
sbb
fadd
dec
inc
out
xchg
sbb
xchg
jmp
push
lret
or
inc
mov
jl
dec
lods
add
pop
mov
imul
inc
cmp
stos
stc
test
jg
xor
je
shlb
in
lods
inc
mov
in
cltd
sub
push
shrb
inc
pusha
lahf
inc
adc
mov
fdiv
pop
xchg
es
imul
mov
maskmovq
idivl
inc
sub
ds
cmp
adc
jb
jns
ror
sub
add
jge
push
push
lods
push
push
adc
test
pop
mov
out
cmp
push
xchg
es
in
cmp
mov
or
or
mov
leave
test
jae
outsb
das
mov
adc
in
pop
adc
out
sar
lods
rorl
mov
xchg
aam
xchg
test
add
cli
xor
xchg
jp
pop
int
adc
mov
scas
int
aad
aad
mov
dec
cmp
or
and
imul
out
push
inc
sbb
pop
fisttpl
sbb
leave
test
lret
add
dec
repz
andl
and
inc
pop
xchg
aam
ret
jg
pop
andl
sub
adcl
imulb
test
aam
out
jge
fistl
xlat
iret
ss
cmp
icebp
mov
fs
movsb
adc
dec
mov
clc
cltd
cmpsb
inc
adcb
jg
and
lock
fmull
xchg
rcrl
mov
jp
insb
es
or
jmp
ljmp
cmp
cmc
push
push
xor
leave
cli
mov
mov
xor
pop
push
pop
fdivr
inc
hlt
add
cmp
movsb
sti
rolb
push
mov
mov
bound
mov
inc
scas
fdivr
sbb
stos
xor
lret
xchg
cwtl
mov
mov
test
outsl
out
pop
and
sbb
lock
sbbl
pop
int
mov
stos
xchg
loope
push
lods
into
lods
fists
ficoml
in
dec
push
addr16
test
inc
or
je
xor
sbb
js
xorl
cs
mov
outsb
mov
pushf
xchg
pop
leave
pop
mov
std
inc
test
outsb
jl
test
dec
jne
add
arpl
pop
pop
mov
sbb
lret
jmp
sub
mov
test
mov
or
fidivs
push
jmp
test
popa
adc
pop
icebp
fcomps
pop
es
scas
add
or
mov
or
fdiv
js
aad
insl
daa
jo
or
mov
sub
outsl
orb
jp
nop
mov
mov
xchg
dec
jne
sub
rolb
lahf
call
lock
ret
mov
cmpsb
adc
movsl
xor
popf
shlb
sbb
test
xlat
inc
jp
jb
push
cmp
cs
inc
mov
fbld
xor
fistpll
stos
in
int3
lods
stos
sbb
fsubrl
pslld
cmp
aaa
insb
sbb
mov
insl
subl
movsl
std
fnstsw
icebp
test
mov
mov
ds
xchg
repnz
sub
xchg
aaa
jne
outsl
popf
mov
clc
cmpsb
call
ficoms
push
pop
ss
loope
pop
in
repz
pop
xchg
adc
shrb
aam
shl
enter
dec
insb
rcrb
hlt
dec
addl
sbbl
shll
pop
mov
jge
scas
xchg
dec
sub
mov
movsb
lods
nop
mov
pushf
push
adc
popa
dec
pop
push
ret
jae
loopne
rorl
xchg
cli
bound
xorb
loopne
into
push
xor
nop
stc
fmull
into
xor
hlt
imul
ss
dec
cmp
fs
xor
int3
mov
jbe
ret
adc
pop
inc
or
push
loop
or
adc
movd
sub
testl
pop
inc
clc
jns
or
aas
inc
cmc
pop
mov
stos
xchg
aas
popf
test
lods
or
and
mov
into
clc
iret
inc
xchg
cmp
rclb
fnsave
mov
and
aaa
fidivl
in
mov
cmp
mov
test
jo
jae,pt
xchg
sbb
scas
call
inc
mov
mov
xchg
stos
xchg
jae
repz
push
adc
fwait
sbb
push
ret
aas
shll
out
jmp
cwtl
icebp
mov
ljmp
push
fnstenv
pop
mov
ret
stos
ror
test
cwtl
repz
sub
mov
int
inc
and
push
or
and
jmp
or
and
jae
push
mov
sub
inc
call
repnz
ja
clc
pop
repz
iret
hlt
loope
sarb
sub
pop
rcrl
xchg
aas
int
xchg
test
jb
push
lret
mov
jp
icebp
daa
iret
frstor
lret
mov
mov
jl
rorb
add
out
mov
cmp
or
dec
or
test
outsl
push
mov
mov
fstpt
aam
xchg
les
loop
lds
lcall
scas
movsl
adc
iret
pop
fidivrl
pop
xchg
sbb
pop
iret
jo
xor
int3
pop
add
loopne
rcrb
imul
jo
xor
or
lds
je
inc
std
out
pop
andb
xor
mov
mov
push
mov
xchg
test
xor
scas
xchg
cmp
popf
push
rol
jge
fldl
push
and
das
insb
mov
insb
mov
push
not
andl
xor
in
popa
jmp
xor
sub
out
lds
hlt
sbb
out
sbb
mov
mov
adc
fidivl
pop
mov
jle
jo
nop
leave
and
xchg
dec
lcall
ja
addr16
jns
ss
inc
xor
insl
jne
add
hlt
pusha
adc
or
ljmp
jo
cmpsl
xchg
adc
popa
add
mov
das
jecxz
movsb
test
pushl
nop
or
jb
push
dec
sbb
xorb
call
xchg
sahf
stc
emms
inc
push
fucomp
lret
add
adcb
adc
dec
cli
ficomps
push
outsl
fidivrl
icebp
dec
pop
mov
test
sbb
cmp
shll
dec
mov
cmp
repz
cmp
testl
sarb
adc
mov
mov
mov
mov
sub
or
sub
adc
jge
test
stos
movsb
jecxz
mov
cmp
shll
xlat
push
inc
in
push
and
arpl
push
pusha
stc
lret
push
aaa
rcr
and
frstor
push
pop
mov
test
popf
mov
sbb
push
popa
mov
mov
mov
push
lock
push
rolb
aas
fcomp
fldt
bnd
out
adc
dec
adc
loop
mov
sbb
ljmp
inc
js
fsts
bound
pusha
insl
adc
adc
rcll
xchg
iret
xchg
push
test
or
lahf
cli
in
jge
or
dec
mov
aam
out
push
lahf
cmp
inc
outsl
mov
mov
nop
fdivp
ja
mov
mov
lock
adc
test
add
ljmp
adc
and
mov
push
out
hlt
daa
mull
loop
mov
mov
push
faddl
sub
pop
jb
dec
xor
cmpsb
enter
jbe
push
bound
mov
mov
cmp
mov
int3
andb
insb
or
mov
mov
or
aaa
filds
sbb
and
xlat
pop
add
lcall
out
lods
mov
das
push
int3
daa
xrelease
movsb
cmpsl
rclb
fwait
mov
jle
fwait
jle
loope
push
fisttpl
pop
into
test
stos
inc
cmp
push
cmc
inc
jne
and
ret
shlb
cltd
jmp
in
je
jns
mov
add
mov
cmpsb
mov
inc
rorb
decb
hlt
stos
fmuls
in
sbb
adc
dec
add
outsb
inc
xchg
dec
xorb
xor
cwtl
xor
cmpb
cmpsb
leave
lahf
jnp
sub
or
rcl
aad
pop
imul
jb
gs
bound
dec
push
rcrl
inc
fwait
ljmp
inc
outsl
sahf
dec
iret
ret
jmp
pop
jnp
push
mov
ficoml
add
xchg
call
movsb
pop
jne
in
std
jno
mov
popf
xchg
add
sbb
mov
adc
cmp
cmp
mov
mov
pop
in
push
pop
pop
or
mov
inc
fmuls
push
fld
sub
mov
idivb
dec
lea
lcall
or
mov
mov
push
jp
in
pop
popf
inc
xchg
mov
push
jb
aas
shrl
mov
cld
adc
sti
pushf
jg
inc
shr
js
lret
and
iret
sbb
or
or
mov
jne
fsubp
inc
repz
dec
inc
mov
pushf
dec
adc
fwait
jp
lret
lds
jnp
nop
mov
jmp
pop
in
outsb
mov
cs
mov
adc
rcll
mov
rcr
cmp
hlt
cmpsb
cmp
lea
cmc
nop
cld
pop
shrl
pop
xor
loopne
fisubs
mov
or
lcall
out
lods
lahf
adc
mov
sub
js
add
cmp
jb
mov
xchg
je
or
xchg
cld
outsb
int3
push
push
xor
cmp
cmp
aas
out
in
popa
test
mov
sahf
scas
cmc
mov
push
addl
out
cmp
les
repz
push
and
jge
push
jecxz
jmp
fadds
add
pusha
fstpt
pop
adc
notb
leave
fistpl
and
add
gs
pushl
inc
pop
jns
mov
icebp
ss
pop
pop
testl
xchg
inc
loop
mov
pushf
jge
ret
cmpsb
push
mov
inc
out
std
andb
insb
jmp
sarl
and
push
mov
fldenv
sti
jb
jle
mov
imul
sbb
inc
popa
cmp
lods
pop
shll
and
mov
dec
inc
sahf
cmp
cmc
aaa
adc
and
enter
sub
cli
adc
dec
filds
repz
rcll
jmp
jb
cmpsl
xor
mov
ja
xorb
xchg
leave
out
in
loopne
mov
inc
das
mov
data16
inc
cmp
jmp
mov
adc
lret
xor
or
mov
xchg
incb
mov
cmp
insl
call
jmp
adc
pop
cld
xor
fldcw
mov
lret
or
jmp
adcl
inc
ds
out
sub
jnp
and
gs
sbb
and
movsb
inc
ss
xlat
adc
sbb
jg
inc
orl
cltd
pop
mov
sub
popa
jno
mov
xor
mov
pop
xor
stos
std
and
mov
pop
ret
push
xor
jg
jno
xor
aam
mov
int3
pop
popf
clc
jbe
push
ljmp
call
mov
add
pop
pusha
fs
sarl
and
leave
pop
mov
add
mov
cli
scas
sub
push
movsl
jns
cmp
push
or
into
test
cmc
out
adc
into
les
fisubl
nop
aas
lahf
add
jp
movsl
je
loope
and
cmp
xchg
stc
shrl
rcrb
fdivrs
cmp
mov
in
pop
addr16
push
pop
lret
ret
daa
lods
data16
inc
xchg
ss
cmp
fists
loop,pn
hlt
int3
sbb
outsb
xchg
pushf
jbe
fists
mov
fsubrs
insb
pop
dec
xchg
push
addr16
sbb
adc
xchg
enter
fcomps
dec
pop
lahf
push
sub
ret
jge
push
pushf
and
stos
inc
aas
insb
sub
sahf
aaa
icebp
pushf
xchg
sarl
in
in
pop
ds
lret
adcb
sarl
dec
mov
cmp
push
xchg
cli
mov
sbb
aas
je
xchg
mov
or
push
mov
loopne
add
push
ds
add
loopne
fistpl
or
pop
ret
jne
jmp
fninit
push
mov
cltd
cmp
andl
lock
pop
fdivl
adc
dec
xor
xchg
ja
inc
enter
sbb
mov
dec
sub
mov
test
xchg
fisttps
mov
mov
lret
xchg
clc
syscall
mov
loopne
leave
fstpt
jecxz
and
sub
pop
aam
je
and
cmp
les
mov
out
jnp
hlt
push
scas
test
mov
mov
push
aad
cmpsb
pop
movsb
cmp
mov
pop
aam
dec
xchg
stc
pop
aam
scas
inc
mov
pop
cwtl
inc
mov
inc
dec
inc
test
jnp
aam
in
add
sub
ja
imul
ja
test
cmp
inc
xor
mov
daa
cmp
and
pop
rcl
pop
or
mov
outsb
sahf
clc
and
mov
adc
sub
bound
std
adc
inc
sub
jno
cmp
aaa
aas
scas
std
push
pop
jb
inc
test
in
pop
sarb
mov
jnp
out
pop
sub
int
sub
jecxz
pop
lods
mov
push
js
mov
dec
adcl
adc
pop
xchg
aaa
jnp
aaa
xor
mov
out
jecxz,pt
xchg
sbb
scas
dec
imull
mov
push
and
xor
mov
push
fadds
xchg
pop
lods
es
fmuls
jp
push
push
jl
push
fidivl
add
lcall
mov
stos
sbb
push
pusha
addb
jle
add
mov
push
or
rcrl
ljmp
insb
into
ja
adc
aam
out
es
cmp
jne
imul
movsb
scas
aam
sbb
filds
mov
inc
nop
dec
add
orb
jp
cmpsb
adc
pop
add
cmp
outsl
add
shll
mov
pop
loope
sbb
mov
aaa
jmp
jbe
cmp
mov
addr16
stc
cmpsb
jge
incl
pop
ret
outsb
insl
movsb
rcl
neg
arpl
leave
pop
bound
insl
mov
xchg
ja
out
xor
add
and
inc
xchg
in
cmove
mov
cwtl
jae
stos
mov
push
mov
push
and
cmp
inc
xor
scas
dec
push
cmp
je
push
cli
or
stc
out
fucomp
mov
push
xor
loop
or
xchg
and
xchg
stos
add
cltd
cmc
nopl
adc
into
std
mov
dec
stc
lock
mov
push
mov
jnp
push
es
sub
jns
xchg
push
mov
xchg
jo
aaa
ret
inc
test
mov
push
jp
xlat
pop
and
gs
repz
movsl
xchg
mov
push
js
movsb
inc
push
lods
jle
scas
xlat
insl
pop
mov
push
mov
loopne
mov
out
cmp
adc
loopne
and
movsb
in
cld
xchg
sarl
cmp
inc
add
out
dec
cmpsb
int
mov
ret
pop
mov
jno
mov
icebp
lea
out
add
dec
xchg
icebp
inc
or
dec
and
std
push
push
pop
jg
sub
shll
sbb
mov
sub
add
test
arpl
sarb
cwtl
dec
popf
jnp
cmp
imul
sub
adc
mov
lods
lds
fstp
ret
and
or
bound
mov
xchg
and
mov
out
loope
push
loopne
ret
fadds
xchg
sbb
rcrb
or
pop
add
xchg
pop
inc
mov
add
dec
adcl
xor
push
dec
xchg
sti
dec
mov
es
fiadds
cltd
mov
pop
inc
push
push
mov
stos
fs
jl
sub
pusha
and
mov
jbe
sbb
jo
pop
test
cs
daa
sub
outsl
jno
fisubrl
jp
xchg
cmp
mov
ljmp
sub
ficompl
bound
daa
pushf
jbe
test
and
inc
mov
xchg
mov
mov
pop
jmp
cmp
fs
les
push
mov
mov
lret
nop
mov
push
int
adc
jb
mov
mov
adc
adcb
dec
push
outsl
push
clc
pop
mov
mov
or
movsl
lds
xchg
jb
ficoms
stos
scas
mov
sbb
mov
lea
dec
es
sti
xchg
in
xchg
push
sub
xchg
out
icebp
jecxz
add
adc
jo
jno
lcall
cltd
repz
dec
xor
jno
divb
rcrb
mov
jp
and
movsl
push
repz
sbb
push
out
pop
outsb
sbb
repz
fs
push
aad
xchg
cmpsb
add
sarl
repnz
cmp
mov
inc
cwtl
xchg
push
aam
jmp
inc
jg
mov
lds
es
pushf
idivb
mov
jo
mov
fiaddl
pop
and
flds
jle
and
mov
adc
inc
mov
jle
sub
mov
jmp
ss
test
incl
push
lds
fcomp
or
sub
rcll
dec
loope
cmp
sahf
shrl
sub
ret
into
sbb
xor
push
push
pop
fisttps
sbb
in
sbb
shl
sbb
inc
clc
mov
cltd
stos
dec
adc
xchg
mov
dec
outsl
out
and
aas
adc
jb
fldt
iret
pop
xor
and
or
testb
mov
gs
inc
lea
insl
sbb
and
int3
push
or
test
pushf
mov
sub
add
dec
shll
jecxz
lret
xchg
xchg
insl
jne
lcall
jae
insl
cmp
sbb
dec
scas
out
out
xchg
lret
pop
xor
aad
cmpl
pop
push
adc
adc
call
push
ja
or
lret
lods
sub
jmp
jg
in
mov
inc
lods
das
mov
addb
jmp
rolb
repnz
push
pop
es
lret
aad
ja
cli
adc
push
loope
jp
shll
fcompl
xchg
data16
cwtl
xor
in
shrb
inc
push
push
mov
out
xorl
jne
jge
fiaddl
movsb
inc
es
push
jno
fwait
out
sub
cmpsl
or
or
lea
sbb
cmp
gs
mov
pop
cmp
jle
mov
mov
int3
out
cmovs
dec
popf
or
xchg
inc
stos
cs
inc
mov
cmp
adc
icebp
jno
inc
sar
repz
jbe
ljmp
jb
ret
mov
sbb
movsb
data16
cmp
das
mov
test
pop
fdivl
xchg
ja
ja
push
mov
aaa
xlat
jg
shl
mov
dec
mov
dec
daa
mov
push
jnp
cmp
pop
xor
lods
inc
je
test
mov
dec
xor
cwtl
mov
pop
in
cmp
mov
jge
xchg
fimull
gs
cmpsb
inc
repz
ds
call
arpl
jl
xchg
xor
mov
stos
mov
sub
into
inc
call
sbb
inc
f2xm1
xor
push
mov
leave
in
lret
aas
fwait
out
imul
nop
inc
scas
ds
ljmp
push
scas
lret
adc
imul
adc
lds
cmp
cmpb
mov
neg
rclb
lds
pop
sbb
repnz
sbb
outsl
andl
mul
pushf
xchg
pop
mov
sbb
out
pop
cmp
gs
inc
pop
inc
out
add
mov
ja
push
es
inc
sub
mov
add
ja
lea
mov
mov
aam
mov
mov
mov
cmp
roll
bnd
imul
xor
cwtl
fadds
dec
jp
mov
jecxz
mov
mov
cmp
fadds
xchg
adc
aas
and
sti
inc
cltd
pop
out
adc
jecxz
dec
mov
add
cs
cmpsb
rorb
je
repnz
pop
dec
cmp
stos
ror
inc
mov
lods
loopne
cmp
add
and
nop
mov
jecxz
jge
stc
mov
jl
cmp
xor
push
out
popa
cmpsb
das
frndint
mov
push
fwait
out
ss
lret
es
dec
mov
push
mov
pushf
mov
mov
in
mov
lcall
cmc
cmp
dec
add
test
jmp
adc
fistpll
leave
dec
ds
idivl
imul
lret
addb
pop
cmp
cmp
jp
push
sub
xchg
test
xchg
cld
jg
dec
lods
jae
fcoml
pop
dec
jp
pop
jne
in
xchg
mov
fstps
jo
inc
stc
mov
jbe
mov
pop
gs
or
es
iret
aam
push
mov
fnstenv
cwtl
sbb
hlt
cli
and
mov
movsl
fisttpl
mov
mov
imull
mov
mov
cmp
jbe
popf
test
loopne
mov
xchg
in
xchg
add
scas
aaa
and
and
pop
push
insl
xchg
jmp
xchg
popa
in
dec
ljmp
push
pop
jp
stc
add
jge
push
sbb
sub
xor
rcl
ss
and
cmpsl
adc
mov
call
sar
mov
push
test
pop
dec
js
dec
adc
insl
pop
loope
dec
push
jbe
and
and
jl
sub
in
push
or
fisubl
xchg
les
std
mov
test
mov
andb
sbb
fisubrs
adc
test
scas
test
cmpsl
out
mov
add
push
fs
sarl
inc
adc
je
aas
ret
inc
and
add
xor
cmpsb
stc
in
push
pop
sub
cmp
adc
jb
out
inc
lret
ret
lret
cmc
sahf
les
sbb
mov
jmp
pusha
mov
ret
adc
and
insb
dec
lret
shlb
and
pop
stc
dec
mov
mov
mov
imul
out
mov
mov
aaa
push
fisubl
in
push
add
cli
jp
popa
adc
push
fnsave
movsb
lret
popf
sub
loop
enter
aas
inc
fldl
ret
mov
movsl
push
inc
push
xchg
adc
inc
test
lock
test
add
cmpsl
rorb
push
fdivrl
inc
stc
lret
dec
dec
cs
inc
sbb
sbb
dec
sbb
cli
aam
in
mov
lret
jmp
pop
sbb
das
aaa
and
inc
in
loopne
mov
xchg
pop
pop
lock
sub
mov
and
mov
mov
or
fisubs
add
mov
addr16
ret
or
hlt
lea
jbe
leave
or
push
ret
shrb
add
imul
inc
pop
jg
pop
into
sti
js
cwtl
or
cmp
les
arpl
cmp
aas
add
or
cs
cmp
hlt
repz
jp
mov
cmpsb
jno
inc
psubsw
cld
repnz
outsb
cmp
cltd
mov
repnz
and
cld
cmp
dec
pop
cmp
test
lret
cmp
out
loopne
aaa
in
push
xlat
adc
mov
pop
lret
mov
inc
sbb
jl
popa
mov
stos
sbb
es
rol
in
in
lret
push
lods
dec
int3
es
movsb
mov
in
inc
mov
cmp
sub
push
lea
insl
mov
pop
inc
or
push
movsl
mov
loop
in
and
push
jg
jbe
pop
lcall
push
inc
fcoml
in
addr16
or
or
inc
in
mov
orb
mov
xchg
xchg
jno
dec
adc
cli
xor
xchg
lods
loop
add
loopne
inc
out
push
fstpt
dec
mov
xor
inc
mov
dec
inc
test
nop
roll
les
mov
push
mov
imul
jp
in
lods
sbb
shrl
xor
addr16
lock
rcrl
add
inc
xor
cmp
sbb
xor
mov
adc
stc
pop
lret
lods
sub
imull
shrb
mov
add
jne
rorb
fs
xchg
pop
loopne
lods
shll
lret
jmp
jnp
lahf
cmp
and
pop
lock
cld
jle
or
sahf
pop
hlt
mov
not
or
add
test
insb
mov
fmul
icebp
jle
sbb
pop
sub
sub
ret
inc
pushf
pop
sub
fidivl
and
in
insl
inc
gs
sahf
jnp
es
pop
add
lods
fsubl
popa
or
cmp
sahf
negl
xchg
inc
es
adc
inc
adc
movsl
push
dec
sbb
mov
notb
cmp
mov
lock
sbb
add
sbb
shlb
mov
aad
gs
dec
mov
dec
and
outsl
pop
das
add
xchg
dec
shlb
mov
stos
pop
inc
negl
dec
cmp
mov
pop
jmp
add
movswl
les
xchg
stos
push
lahf
popa
cmp
enter
lods
ficompl
subl
mov
loope
test
mov
cmp
mov
les
js
mov
cld
inc
dec
xchg
jnp
xor
lret
call
imul
inc
inc
dec
ror
push
lock
dec
mov
ds
test
loopne
and
cmp
push
sub
aaa
loopne
mov
add
sub
rol
fidivrl
cmp
add
mov
xor
jne
add
push
xchg
or
ss
nop
out
shrl
mov
add
lds
xor
sub
sub
inc
loopne
jns
push
jne
fiadds
pop
xchg
mov
dec
xchg
fadds
and
int
test
xchg
outsl
cmp
inc
xor
jno
and
xchg
in
or
pop
and
icebp
pop
insb
cltd
sub
lock
sti
lret
fidivrl
xor
fidivs
and
or
inc
adc
popf
add
iret
or
jne
subl
or
cmp
insb
xchg
into
inc
outsl
pop
inc
xor
mov
xchg
sub
jecxz
pop
add
cs
adc
sub
je
xchg
fldcw
mov
mov
lret
insl
sub
sbb
fucomip
ds
jbe
jno
mov
fldenv
mov
icebp
stos
fldcw
cmp
jmp
jg
loop
jmp
cmp
out
and
adc
inc
test
mov
push
pop
js
jnp
pop
add
push
fisubl
mov
push
ret
ljmp
in
arpl
add
ffree
jo
jo
clc
rcr
inc
addb
pop
nop
aas
mov
jno
out
insb
and
into
sub
movsb
es
push
fiaddl
fs
adc
rolb
xchg
scas
jne
stos
stc
mov
pop
jns
stos
lcall
add
push
xor
mov
mov
dec
adc
ljmp
pop
fisubl
sbb
sub
insl
pop
addr16
fwait
add
xchg
int
rcr
mov
inc
inc
inc
movsl
movsb
call
jo
fcmovu
push
push
test
xor
inc
lret
int3
fwait
out
repz
mov
movsl
push
mov
out
test
nop
cs
cwtl
loop
test
inc
cmpsl
ficoml
mov
or
imul
or
push
jmp
and
adc
pop
loope
push
xchg
mov
gs
repnz
jmp
outsb
subl
xorl
adc
in
fimull
xor
fwait
dec
cwtl
icebp
outsl
aad
ja
hlt
inc
push
lret
outsl
outsb
repz
xor
rcrb
xchg
add
xor
and
in
xchg
int
pop
lock
xchg
inc
adc
mov
addr16
cltd
jg
pop
sarl
lahf
lcall
dec
iret
add
jp
xor
in
cmp
in
fwait
pop
jbe
ljmp
shlb
mov
test
push
inc
inc
jo
mov
push
mov
dec
cld
sbb
lock
cmpl
xor
xor
xor
stc
mov
jae
fsubrs
or
push
jnp
test
fnstcw
cld
iret
std
psadbw
or
pop
mov
jns
repz
xor
loop
sbb
into
xor
stc
push
lea
mov
jmp
frstor
sbb
push
jne
in
sbb
mov
outsb
lcall
in
fists
ss
frstor
je
mov
cmp
inc
push
sarl
es
ret
xor
scas
gs
dec
cmp
adc
mov
addr16
std
ljmp
popa
pop
inc
xchg
test
leave
xchg
inc
jg
test
sbb
cwtl
insb
push
shrb
mov
out
int3
nopl
or
sub
test
sahf
pop
jg
fbld
sti
push
jo
insb
add
inc
in
inc
pop
out
lds
test
cmc
rol
loope
cmp
inc
jl
mov
fcomp
fsubp
outsb
aam
ds
out
dec
jbe
sbb
or
inc
loope
ficomps
sti
mov
mov
imul
lahf
iret
out
incl
cmc
mov
lret
int3
insb
mov
mov
movsl
push
in
cmp
push
arpl
mov
in
xor
cmp
sbb
lds
ficoml
dec
dec
addr16
push
popa
push
add
xchg
dec
adc
adc
popf
out
adc
xchg
push
push
mov
dec
sahf
jnp
sbb
push
test
lea
sub
or
ret
xchg
pop
adc
mov
add
stos
mov
gs
sub
data16
xor
mov
iret
xor
insb
loopne
push
mov
imul
mov
adc
sub
loope
xor
stos
jo
jg
out
xor
add
mov
dec
out
mov
jnp,pt
mov
inc
out
fwait
pop
movsb
lock
add
test
jg
mov
push
inc
jo
sub
les
out
push
xchg
xchg
fdivp
dec
add
push
and
jmp
testl
ljmp
xchg
movsb
ja
inc
lret
insl
cmp
add
scas
or
leave
pop
mov
mov
pop
daa
sbbb
faddl
xchg
faddl
mulb
imul
in
pop
jno
dec
cmpsb
xor
cmp
stos
sbb
jle
add
cmp
push
test
fs
jns
sbb
sbb
cmpsb
outsb
movsl
push
cmpsb
pop
jp
xchg
icebp
cmp
or
stos
subl
rcrl
inc
mov
inc
mov
popf
dec
popf
jnp
or
aam
imul
movsb
mov
inc
jmp
sbb
nop
cmp
add
fisttpll
ss
movsl
scas
pop
icebp
les
daa
test
or
jmp
movsb
mov
fs
iret
jbe
test
mov
ror
call
clc
mov
int3
divb
nop
insl
inc
jno
cmp
test
add
xchg
loop
sahf
in
lds
inc
xchg
or
jmp
mov
imul
push
pushf
scas
xor
test
pop
lea
lods
ja
cmpsb
sub
jg
lret
push
jo
add
dec
cmp
std
divb
fcmovnu
ljmp
and
pop
ds
je
fsubr
imul
dec
lret
negl
loop
jp
daa
xor
cmp
jno
mov
jg
pop
or
mov
outsb
loop
mov
rol
rcl
test
mov
test
ret
stos
inc
das
test
cwtl
mov
into
imul
mov
mov
push
in
jno
xchg
jmp
shrb
outsb
movsb
xchg
fmull
lret
lahf
lret
add
jo
mov
iret
js
addr16
sbb
add
cwtl
push
or
adcl
stos
xor
lds
out
adc
mov
mov
mov
xchg
and
lds
clc
jnp
fwait
xchg
mov
or
cmp
pop
dec
cmp
mov
xchg
mov
push
push
push
cmp
scas
xorb
out
aas
add
stc
seta
xor
mov
arpl
mov
mov
imul
push
pop
mov
test
jle
add
addr16
cmpsb
mov
cmp
pusha
nop
adc
add
pop
cmp
or
ss
popa
xorb
scas
cmp
pushf
push
in
stos
or
fidivl
jne
cwtl
jmp
mov
pop
scas
imul
mov
jl
ljmp
lcall
std
dec
repz
sub
sbb
mov
mov
pop
xchg
cmpsb
shl
arpl
popf
jmp
pop
call
and
push
mov
ror
es
mov
lods
jae
mov
adc
mov
pop
sbb
ljmp
test
fwait
mov
adc
lcall
jo
roll
or
xchg
push
dec
aaa
and
loopne
lcall
mov
stos
dec
dec
std
cmp
sbb
inc
mov
into
adc
sub
in
jno
sbb
rep
add
mov
repz
inc
mov
stos
cmp
jns
insw
sbb
cwtl
lret
out
or
adc
test
xchg
push
mov
call
repz
push
or
cltd
jae
push
shrl
inc
hlt
push
icebp
mov
mov
mov
xchg
in
dec
add
xor
or
push
adc
and
sbb
push
dec
jno,pn
insb
xchg
mov
movsl
clc
lret
cmpxchg
mov
jg
std
insb
pop
mov
sbb
jnp
ss
sbb
ljmp
jecxz
lods
push
addb
pop
lds
lahf
adc
sbb
xchg
out
xchg
cmp
rolb
das
loop
aaa
mov
cwtl
cmc
psubusw
in
mov
shll
in
lret
mov
sub
mov
or
dec
popf
cmc
mov
andb
pusha
xlat
insl
mov
cmp
cmp
inc
adc
jmp
test
lods
dec
sub
divb
jbe
test
pop
sbb
out
es
jbe
pop
fisttpll
repnz
add
jbe
lods
adc
es
push
push
ljmp
push
cmp
push
clc
xchg
mov
xchg
mov
lods
adc
push
inc
loopne
xor
fstps
insl
loopne
pop
daa
fiaddl
scas
and
loopne
iret
sbb
adcl
fimuls
sub
adc
test
jno
sbb
sbb
inc
fisubl
orl
shl
pop
mov
xchg
add
repz
push
fisttpll
pop
xchg
add
jnp
xchg
xor
mov
outsb
loopne
fcompl
inc
sbb
cmpsl
fwait
xor
sbb
je
insl
sub
mov
pushf
or
lret
pop
mov
xor
data16
ja
mov
rcrl
stos
lods
xor
mov
mov
push
lods
dec
arpl
or
repnz
sarl
pop
mov
aaa
pushf
dec
push
and
inc
jg
es
lcall
add
notb
pop
mov
xchg
cld
push
repnz
mov
push
jo
out
sbb
popf
popf
movsl
sar
pushf
dec
aas
or
loopnew
mov
mov
cmp
repz
jo
testl
xchg
or
sub
lds
cld
ret
cmpl
stos
jne
cwtl
notl
dec
pop
daa
je
adc
mov
cmc
test
xchg
xor
xlat
outsb
dec
dec
jecxz
sbb
rolb
pop
push
inc
dec
arpl
jl,pn
xor
add
incb
cmc
in
add
cmpb
push
xor
inc
cmp
loope
cmp
sub
dec
stos
scas
lods
lods
aam
in
mov
loopne
es
adc
adc
mov
sub
dec
inc
out
stos
adc
pop
sub
and
popa
stc
add
inc
xchg
test
lahf
jecxz
inc
mov
popa
push
mov
sub
dec
popf
mov
test
push
rcll
cmp
out
in
cwtl
nop
xchg
adc
pop
pusha
push
les
insb
shrb
xchg
pushf
adc
aaa
or
pop
jns
jbe
cltd
movsl
sbb
cld
mov
mov
lahf
fwait
loope
push
mov
stc
jl
pusha
and
push
ds
mov
rorb
jecxz
sub
ja
sbb
or
push
orb
lock
sub
mov
pop
cmp
popl
or
mov
lahf
push
xchg
mov
xor
stos
dec
dec
daa
add
rcrl
cwtl
sbb
pop
inc
in
les
imul
das
mov
xchg
shlb
icebp
mov
mov
lea
mov
in
aas
adc
sub
jg
and
adc
and
mov
es
insl
fistl
xchg
mov
mov
pop
cmp
xchg
fidivrs
pop
jnp
xor
xchg
ss
push
ds
sbb
push
mov
mov
push
dec
nop
imul
aad
xlat
sbb
jl
in
in
lret
mov
ficomps
mov
fisubl
mov
push
les
mov
xchg
xchg
xchg
add
test
push
sub
sub
cmpsb
sub
fmulp
pop
jo
lret
stos
andl
xchg
mov
fidivrs
jo
popa
lods
cmc
lods
jp
cmp
inc
mov
mov
jl
and
psubb
loope
add
in
xorl
scas
gs
or
push
loop
dec
cmp
and
pop
dec
or
push
mov
stc
push
push
pop
lods
ja
xchg
fiadds
fcomps
mov
cmp
stc
or
mov
call
shl
jp
out
pop
mov
mov
add
dec
xor
xor
dec
aas
jno
stc
cmc
pop
xchg
js
jb
mov
add
adc
movsb
pop
push
imul
shrl
mov
rcrb
xchg
out
push
das
sahf
das
add
imull
xor
cs
aad
pop
pop
std
fistps
mov
pop
add
cltd
or
adc
ljmp
mov
stc
add
js
xchg
sbb
testl
or
fnstcw
ds
and
imul
and
mov
adc
lock
sbb
in
cli
clc
ss
pop
xchg
adc
inc
fldl
nop
cld
imul
sahf
fimuls
fsubrl
repz
dec
es
adc
lahf
push
cmpsl
pop
fs
lods
int3
inc
cmp
mov
sbb
call
sub
fxch
dec
scas
mov
push
adc
add
push
adc
iret
nop
outsl
adcl
dec
aaa
ja
dec
sbb
xchg
mov
lret
add
add
adc
xchg
rcr
dec
pusha
push
dec
mov
push
xchg
stos
iret
dec
pop
sub
sarl
mov
pop
mov
dec
and
imul
faddp
into
les
dec
jno
ljmp
pop
push
mov
add
add
fimuls
inc
pop
push
push
mov
cltd
out
cld
sub
ss
aas
repnz
mov
pop
pusha
ret
sbb
or
pop
je
cmp
xor
xor
xor
in
pop
lds
xor
arpl
adc
and
jno
fwait
dec
mov
mov
jge
lahf
xlat
hlt
sub
push
test
lods
pop
out
xor
xchg
movsl
gs
sub
imul
xchg
jne
push
sub
cld
pop
or
add
push
jb
int3
repnz
jp
jmp
mov
and
or
lds
jne
nop
add
xor
mov
dec
das
inc
lock
add
arpl
push
sub
push
add
std
shlb
inc
ds
jcxz
lcall
sub
fildll
inc
stc
sbb
ret
fsubrl
inc
mov
xchg
add
loop
mov
mov
xor
xchg
cmp
jbe
dec
insb
adc
outsl
jo
cmc
mov
sahf
into
push
jecxz
xchg
mov
int
jp
dec
aaa
rolb
sbb
cmp
aam
call
clc
repnz
sub
fsubrl
int3
xor
pop
dec
or
jmp
faddl
lcall
loope
fadds
ret
aaa
adc
dec
decl
icebp
fucomip
push
mov
mov
dec
mov
test
sub
cld
ss
sahf
adc
add
das
mov
sub
sub
scas
ss
icebp
mov
inc
lea
pusha
push
test
pop
xchg
enter
ds
xor
push
icebp
aad
cmp
ss
push
jecxz
cmp
cltd
inc
lahf
xchg
std
negl
fstpt
add
dec
mov
adc
pop
pop
sub
dec
fadds
pop
ret
mov
inc
add
out
idiv
and
popf
adcl
adc
enter
cmp
push
call
es
pushf
stos
rorb
pop
clc
scas
xchg
fdivrs
dec
shl
and
int3
pushf
mov
subl
add
cmp
out
jbe
mov
sti
pusha
adc
gs
jns
dec
mov
jge
xchg
mov
lods
cmpb
or
dec
adc
adc
add
xchg
gs
dec
xchg
inc
call
sub
or
push
and
dec
js
aad
mov
fidivs
mov
or
inc
lahf
mov
arpl
cmpsb
stos
xor
sbb
xor
mov
inc
pop
cmp
mov
out
je
dec
cli
or
stos
or
sub
lret
int3
addr16
jg
stos
and
repnz
mov
stos
inc
or
pop
cli
mov
push
cmp
aaa
test
test
mov
cmp
rcrb
inc
or
mov
cmc
dec
fstps
sahf
pop
repnz
fistpl
int
call
lea
pop
in
inc
bound
mov
push
leave
and
rorl
adc
pop
dec
push
add
cmp
pusha
lock
int
out
std
das
xchg
mov
movsb
idiv
aaa
push
imul
pop
add
ljmp
mov
jns
mov
mov
add
or
cmp
scas
mov
jae
pop
mov
inc
jbe
sub
fldl2e
fstl
mov
lods
fadds
xor
insb
cmc
bound
jp
stos
dec
or
or
rcrl
xlat
pop
mov
lea
sub
pop
lcall
sti
xchg
insb
imul
inc
push
xor
mov
inc
inc
dec
outsb
xchg
xor
cmp
popf
fwait
test
ds
xor
jb
stos
cmp
xor
stos
jne
iret
sub
mov
add
popl
pop
movsb
push
xchg
sti
xor
insb
push
pop
ljmp
sarl
fs
popf
jmp
xchg
or
fdivl
sub
push
mov
in
bswap
sbb
sbb
and
jmp
and
xlat
cmc
les
mulb
or
orb
lret
cmpxchg
xor
cmp
push
pop
cld
sub
imul
and
fistps
movsb
mov
repnz
xchg
inc
dec
dec
gs
mov
inc
test
lret
cld
xor
adc
mov
ds
rcr
mov
ljmp
and
sahf
fidivrl
or
push
dec
lds
lock
insb
cmp
cmp
add
dec
fists
cmp
test
lea
sbb
sub
xor
sub
sahf
addr16
mov
ud1
stos
sahf
dec
add
das
js
loopne
and
push
in
adc
add
sbb
sti
scas
fistps
mov
push
cli
sbb
pusha
dec
lock
jp
dec
cmpsb
lea
fldl
jb
pop
or
mov
fdivrs
aaa
lock
sbb
repnz
or
dec
add
cmpsl
fcompl
scas
je
inc
mov
jge
clc
dec
mov
dec
pop
push
pop
pop
or
push
mov
test
add
cmpsl
scas
xchg
bound
cmp
fs
xchg
out
ja
sub
cs
cmp
shl
mov
icebp
cmp
dec
inc
xchg
mov
xchg
leave
hlt
cmpsl
pushf
dec
ds
leave
lret
xor
shl
cmp
popf
je
cmpsl
xor
popf
or
push
xchg
cwtl
mov
ljmp
dec
stos
mov
std
sarb
outsb
cltd
mov
aaa
aad
ds
loop
jno
mov
jecxz
lock
cs
and
cmp
adc
push
gs
es
dec
mov
xor
adc
and
push
and
ljmp
icebp
push
aas
xchg
movl
mov
xor
rcrb
push
dec
std
inc
movsl
movb
mov
arpl
popf
add
outsl
outsl
js
xchg
int3
or
in
sbb
dec
cmpsb
dec
rcrb
push
adc
mov
sbb
pop
and
and
mov
xchg
sbb
and
clc
push
dec
mov
pop
repnz
mov
jbe
mov
jmp
shrb
adc
fstpl
aad
mov
sub
xor
out
fs
adc
add
mov
mov
or
xchg
daa
mov
adc
popf
mov
sbb
aas
mov
fcmovnbe
sub
in
cmp
leave
push
or
out
sbb
rsm
in
scas
push
js
int
loopne
in
std
pop
lds
add
push
push
mov
sbb
cmc
ja
mov
outsb
negb
add
sub
loope
fwait
cmp
inc
shrl
jno
sbb
jns
shll
mov
push
ror
out
or
xor
es
repnz
mov
fdivrs
enter
lahf
rcll
out
lock
popa
mov
arpl
push
hlt
push
es
sub
dec
popf
outsl
mov
mov
cmp
and
inc
outsb
pop
adc
lods
add
call
int
or
aas
pop
test
cltd
inc
mov
push
lahf
outsl
pop
cmc
jl
cmp
mov
push
mov
jp
ds
test
sbbl
sub
pop
das
push
and
imul
push
stos
sub
dec
lret
das
jbe
scas
std
into
xor
ds
add
loop,pt
loopne
xor
or
ds
dec
mov
popa
xchg
add
push
mov
pop
cld
inc
stos
lods
clc
out
jnp
insb
in
ret
addr16
or
nop
adc
dec
jno
mov
nop
or
es
xchg
ss
iret
mov
push
xchg
mov
shlb
cmpsb
pop
out
les
mov
jmp
xchg
mov
pusha
and
mov
xchg
inc
push
inc
push
sar
adc
insb
add
dec
mov
aas
adc
and
xor
push
add
in
arpl
insb
pop
mov
test
dec
xor
mov
jecxz
ja
js
ljmp
push
lret
clc
pop
andb
mov
in
mov
dec
daa
enter
dec
rorb
in
mov
cli
jge
outsb
mov
mov
sub
gs
cmp
cmpl
add
and
pop
adc
dec
mov
and
lds
pop
jg
lods
adc
mov
or
cld
test
data16
roll
pop
xchg
push
test
cmc
xor
cmp
xchg
jns
js
daa
pop
int3
nop
add
ret
adc
pop
add
mov
pop
popf
fldt
pop
mov
push
pusha
lods
cli
rcll
fcoms
sbb
rsqrtps
xchg
lret
das
add
or
mov
imul
int
jle,pn
cmpsb
sub
inc
ret
fldcw
fnstcw
lret
sub
fcompl
cmp
cmove
loope
xchg
xchg
inc
lret
iret
mov
mov
dec
push
dec
andb
lods
or
ja
fidivs
daa
leave
lcall
jo
sbb
loop
or
imul
pop
or
pop
sbb
sub
cmc
adc
pop
push
push
adc
adc
or
jbe
cmp
sahf
shr
lahf
dec
xchg
stos
add
sahf
shlb
rolb
stc
iret
orb
mov
jno
push
pop
xor
xchg
outsb
das
adcb
enter
cmc
jl
or
fs
xor
ja
mov
in
and
or
pop
lock
js
in
inc
or
mov
xchg
adc
sbbb
in
sub
xchg
iret
dec
inc
mov
dec
push
daa
push
jnp
pop
mov
inc
and
xchg
mov
je
mov
or
flds
sbb
xchg
add
sbbl
out
mov
fs
in
sahf
int
dec
shl
insb
push
aas
mov
xor
sbb
cmc
dec
xchg
inc
decl
mov
dec
or
lret
imull
dec
icebp
lret
mov
xor
out
xor
and
mov
ret
iret
fs
cmp
aad
ss
ja
ret
lods
add
and
out
repnz
out
or
mov
and
lret
cmp
jle
add
mov
push
stc
pusha
add
mov
sbb
xor
jbe
inc
mov
mov
cmp
and
out
shlb
pusha
push
out
jae
mov
xchg
sub
int
sbbl
insl
rorl
jne
pushf
lret
and
cli
dec
out
rcl
rol
loopne
pop
jmp
out
cmpsl
sbb
in
std
mov
icebp
xchg
jb
mov
daa
mov
pop
jmp
movsl
outsl
mov
push
and
test
sahf
pushf
xor
xchg
stc
mov
add
out
cs
mov
add
mov
dec
test
nop
sub
stos
es
pop
arpl
inc
mov
rcr
shll
mov
jle
push
idiv
insl
repz
idivb
xchg
dec
sub
cmp
mov
shll
testl
mov
cmp
div
pop
sbb
pop
sbb
pop
cmp
vshufps
add
jb
cltd
mov
out
and
cmp
pop
or
xchg
dec
mov
loop
or
lret
rolb
mov
sbb
arpl
push
inc
sti
nop
pop
rorb
stos
imul
cltd
shrb
dec
pop
in
imul
mov
adc
jle
jb
mov
call
sahf
ds
push
ja
shrl
ret
inc
sarb
shl
adc
imul
sub
es
or
out
jmp
or
mov
inc
mov
inc
lret
jp
mov
xchg
sbb
sbb
out
mull
push
pop
test
xchg
push
jmp
push
push
pop
pop
jp
cs
pop
pop
push
mov
jb
int3
jne
jb
xchg
lcall
test
sub
sub
inc
sbb
aas
int3
mov
push
cmpsl
sbb
xchg
enter
and
aas
xor
mov
xchg
cmpsb
mov
and
lock
in
popa
sahf
jae
push
mov
sub
fistpll
mov
call
adc
stos
out
das
insl
mov
jmp
fsubl
dec
das
jb
nop
xchg
js
out
dec
pop
std
or
stos
pop
scas
cwtl
or
cmp
insl
fildll
mov
mov
cltd
and
std
pop
enter
xchg
sbb
cmp
xor
mov
imul
mov
push
inc
fmull
mov
mov
jl
cmc
xchg
dec
push
stos
je
adc
mov
jno
cld
push
adc
xor
pop
mov
notb
inc
cmp
aas
sbb
add
lods
nop
push
inc
ret
and
dec
push
andl
inc
cld
movsl
bound
mov
ret
subb
ss
iret
data16
and
out
mov
add
sub
testl
dec
and
fiadds
pop
push
pop
mov
mov
popf
jno
cltd
add
add
imul
xor
sbb
lea
mov
cltd
int
push
sbb
lahf
out
xchg
mov
scas
call
call
jnp
popa
ds
nop
xchg
or
sub
cmpsb
std
int
pop
stos
sub
scas
insl
call
int3
test
dec
in
xor
and
push
pop
scas
mov
jnp
adc
stos
xchg
les
leave
xchg
testb
dec
ret
cmp
lahf
jnp
movsb
mov
and
push
xlat
cmovle
xor
cmp
pop
cs
mov
jmp
and
fisubs
jnp
mov
xorb
test
inc
sbb
or
cmp
lahf
in
into
sub
add
mov
leave
sbb
subb
into
gs
lock
fistl
fnstenv
outsl
insb
fdivrs
iret
iret
rcl
into
int
lret
je
lahf
or
fcmovnu
daa
push
push
repz
cmp
inc
and
mov
les
and
pop
aas
icebp
jge
push
push
lea
sbb
ljmp
imul
out
icebp
add
adc
pop
test
call
xchg
mov
xchg
push
xorb
rcrl
pop
flds
insl
sahf
cmpsl
enter
cld
stc
cltd
fidivl
pusha
xor
add
es
jecxz
pop
pop
test
pop
loope
push
sbb
jo
pushf
leave
push
call
push
jns
test
cmp
cwtl
les
scas
or
dec
call
pop
xchg
jne
add
and
jmp
int3
mov
daa
lahf
dec
lcall
test
xchg
pop
xchg
adc
mov
fdivl
iret
lret
imulb
jbe
sti
cld
and
addr16
push
and
cmp
xchg
fists
jge
lret
es
or
xchg
lea
mov
pop
add
out
cmp
or
pop
jnp
sti
push
int
outsb
and
stos
repz
scas
inc
clc
enter
jecxz
test
repz
inc
jne
xor
jb
push
stos
icebp
jge
xchg
cs
int
cmpb
fmuls
lahf
aam
sbb
push
cmp
js
addr16
push
jg
inc
call
push
std
push
xorl
mov
xchg
sub
sbb
sbb
pop
or
loop
xlat
add
pop
out
and
rolb
cltd
jg
mov
sub
lahf
cmpsl
dec
mov
mov
sbb
in
repnz
scas
xor
mov
outsl
loopne
stc
es
xchg
cmp
add
je
mov
or
fnstenv
pusha
sbb
or
jbe
mov
pop
mov
mov
xchg
jae
push
inc
sub
out
push
sahf
mov
dec
ja
mov
inc
scas
test
bound
adc
cmp
mov
call
ja
sbb
leave
movsl
and
xchg
push
cmc
inc
or
in
jl
outsb
repz
aas
je
stos
jb
sbb
push
fidivl
add
add
xchg
enter
outsl
in
inc
lcall
dec
in
pop
xchg
mov
jae
js
ja
dec
bound
gs
mov
push
out
mov
cmpsb
cwtl
mov
movsb
int
xchg
and
sub
mov
xchg
popa
xchg
movsb
fadd
adc
out
sub
inc
lret
scas
cmp
jmp
test
xor
sub
jp
jne
outsl
loopne
cmpsb
gs
jns
mov
fistl
fwait
jecxz
lcall
and
mov
xchg
in
inc
sbb
fldcw
push
ljmp
popa
cmp
cmp
aas
jo
lret
mov
pop
hlt
int
repnz
mov
cmp
inc
adc
push
fs
mov
push
mov
inc
pusha
or
inc
hlt
fildll
cmc
test
sub
mov
cmp
and
or
repz
les
and
pop
jl
push
push
xchg
popf
adc
shll
mov
push
aam
insl
shrl
or
movsb
cld
xor
xlat
test
push
adc
mov
xchg
push
push
in
call
cmp
scas
mov
gs
dec
addb
ljmp
fstps
mov
inc
jg
xor
in
jo
es
jo
add
or
cmp
hlt
pop
fcomp
stos
add
and
jl
into
sub
int3
push
fdivrs
gs
mov
fmulp
mov
insb
xchg
mov
and
fsubs
minps
inc
push
aas
testl
or
outsb
mov
pop
sub
inc
xchg
lock
mov
data16
push
sti
sub
dec
jne
or
sub
sub
orl
xor
pusha
arpl
jge
int3
int
dec
mov
dec
adc
shll
push
shrb
jns
fisubs
cmp
test
sbb
icebp
loope
lock
lahf
iret
push
and
sub
xorb
cmp
mov
inc
stos
out
lods
lea
mov
adc
mov
loopne
clc
push
lods
stos
xor
std
repz
divb
mov
int
or
mov
test
and
imul
jecxz
dec
arpl
push
dec
stc
push
fld
fldenv
cmp
push
mov
dec
mov
mov
loop
aaa
cli
test
jg
in
fcomp
es
mov
sub
jbe
add
dec
dec
in
xchg
mov
xor
fsts
rcr
daa
mov
dec
jbe
iret
out
daa
sub
xchg
xlat
pusha
or
or
dec
xlat
mov
in
roll
fwait
negb
fcmove
cld
test
push
fsubrs
push
push
in
fcom
iret
jecxz
pop
jle
cmp
xchg
mov
int3
in
cmc
mov
pop
fcmovnbe
cmc
out
arpl
subl
inc
sti
dec
mov
mov
push
xor
scas
cmp
fsubrs
push
imul
jns
add
xchg
jne
push
xchg
rolb
and
jo
outsb
pop
xchg
adc
push
inc
mov
nop
push
inc
fsubp
sub
das
sbb
jp
sub
out
dec
push
fsubl
xchg
xchg
pop
push
jmp
mov
jmp
dec
pop
pop
int3
movsl
sbb
lock
mov
jl
vpsrlq
jbe
imul
cs
mov
in
cmp
add
mov
jnp
cltd
jl
pop
in
addr16
sub
push
push
int3
aam
inc
xor
xor
and
in
mov
shl
decb
lods
repz
mov
add
or
test
adc
sahf
testl
cmp
push
icebp
je
adcb
ret
ret
fwait
sbb
pop
leave
ljmp
push
jo
clc
xor
or
sbb
repnz
cld
push
push
jg
imull
cmp
data16
and
pop
add
xchg
jmp
jnp
xchg
icebp
xchg
fiaddl
jmp
sbb
orl
cli
repz
js
sub
sub
dec
sahf
cmp
mov
fisubrl
movsb
xor
lahf
dec
xor
or
test
xor
mov
es
in
xor
ljmp
inc
xor
cmp
push
jl
in
sub
jo
pop
xchg
std
jo
movl
cmp
jmp
je
js
filds
mov
je
fildl
test
repnz
fnstenv
xlat
mov
pop
sbb
sahf
int3
inc
shrl
xchg
inc
sbb
jecxz
mov
stos
mov
cltd
jmp
dec
cmp
sbb
out
imul
or
ret
dec
lcall
iret
out
cmp
lods
push
ret
or
add
pop
std
shlb
or
outsl
stos
mov
int3
dec
ja
aad
xchg
inc
mov
dec
jb
mov
stos
adc
mov
mov
cltd
and
mov
dec
jmp
jp
int3
sbb
lock
mov
add
clc
ss
jl
in
mov
jge
xlat
cmpsb
in
mov
jbe
jmp
push
pop
div
js
pop
imul
mov
xor
out
sub
outsb
mov
nop
repnz
jl
jo
rcl
push
das
sbb
repnz
jbe
movsl
nop
enter
movsl
insb
repnz
lds
jbe
sbb
push
fcom
lret
aad
arpl
lods
lret
xchg
add
idivl
push
cmp
adc
mov
mov
push
imul
dec
sbb
lods
cmpsb
and
pop
sub
lods
addr16
jbe
jle
and
lret
mov
sbb
adc
in
and
dec
lahf
sti
pop
les
das
imul
loope
ss
cld
movhlps
xchg
jno
imul
rcl
jp
add
aam
push
into
mov
dec
inc
lods
addr16
outsl
inc
pop
test
sub
outsb
sub
hlt
aad
dec
mov
add
sbb
aad
xor
pop
cld
add
sahf
mov
xchg
or
cwtl
dec
sub
call
bound
or
inc
or
mov
pop
or
ss
mov
mov
out
jb
fdivrl
push
cmpsb
or
jl
jecxz
add
bound
cld
popf
pop
addr16
mov
out
jg
mov
adc
and
stos
sub
sarb
pop
dec
fstp
pop
popf
xchg
pop
out
fs
jle
lret
xchg
push
mov
outsb
push
mov
adc
jae
or
adc
cmpsl
outsl
dec
xor
mov
xchg
imul
sbb
push
lret
popa
lock
push
std
mov
pop
and
push
addb
push
and
stc
jmp
cmp
xor
cmp
clc
push
adc
es
push
jl
push
addb
lods
push
jmp
dec
or
mov
push
mov
daa
xlat
arpl
cmp
scas
pop
add
inc
ljmp
and
sbb
and
jmp
or
add
stos
adc
mov
cwtl
push
cs
and
repnz
jae
push
dec
movsb
and
loopne
dec
pop
add
pop
stos
lcall
inc
and
cmpsl
in
jae
mov
ret
pop
pop
mov
fwait
and
cmp
push
ljmp
fidivl
fucomi
sub
std
and
push
leave
outsl
xchg
lcall
incb
lret
cwtl
jecxz
xchg
jne
rclb
and
xlat
movsb
jmp
jo
adcb
rcrl
arpl
je
mov
pop
cmp
cmp
jmp
test
pop
xlat
scas
dec
mov
jge
inc
inc
xchg
mov
jmp
rcrb
sub
repz
sarl
fwait
mov
adc
lea
test
jmp
or
push
xor
dec
loope
pop
das
fisubl
iret
fisubrs
cmpsl
mov
xor
mov
lret
add
jne
cmpsl
sbb
and
jle
shlb
pop
scas
jb
daa
clc
stc
jbe
bound
mov
scas
fimuls
jo
mov
sbb
js
cmpb
push
mov
and
pop
xor
fsts
fidivl
push
sarb
xchg
xchg
mov
lods
das
fistpl
push
ficompl
arpl
push
shrb
xlat
sub
dec
add
mov
cmp
icebp
idivl
push
ljmp
mov
or
cmp
pushf
add
xchg
pop
dec
bnd
loope
jmp
mov
sahf
push
mov
lahf
sbb
fs
inc
clc
outsb
add
ljmp
call
lds
fiaddl
iret
cli
leave
cmp
pop
jecxz
xlat
jne
into
les
or
push
mov
add
cli
je
jb
pop
outsl
out
adc
mov
inc
roll
or
jmp
pop
lcall
in
sarl
test
into
cmp
jmp
ret
add
fcomps
call
sbb
in
lods
hlt
and
cmp
ja
cwtl
push
xor
and
and
mov
or
out
xor
or
les
mov
lods
xor
jmp
mov
fcomi
and
fnsave
sbb
push
fldt
mov
das
jo
gs
insb
inc
xchg
std
sub
or
imul
push
push
pop
cltd
jbe
fcoms
in
mov
jmp
mov
pop
fldcw
insl
lods
sub
mov
cli
sbb
cld
and
mov
mov
shll
and
push
ja
jge
bnd
mov
push
addr16
mov
leave
push
sbb
xor
imul
add
sbb
add
lods
inc
mov
jge
lock
cltd
xchg
icebp
loopne
idivb
jge
in
outsl
out
inc
or
rclb
sahf
push
sub
add
into
lds
sub
cmp
std
sbbb
cmp
lahf
mov
fs
mov
cmpsb
in
cwtl
pop
sub
xor
mov
enter
mov
lock
loopne
in
stos
xchg
inc
mov
pop
test
pop
aam
adc
fs
dec
push
or
sub
loop
dec
sub
dec
sbb
sbbb
outsb
fiaddl
mov
iret
inc
leave
je
mov
sub
or
jmp
scas
std
adc
std
mov
sbbb
cmp
adc
rcll
js
add
test
test
xchg
stos
jp
daa
imul
nop
lods
pop
or
fs
stos
fs
xor
dec
cmp
push
ds
and
aas
push
ret
jl
mov
fs
fsubrs
pop
or
xchg
push
lods
stos
rorb
rcrl
int3
xor
mov
dec
cmp
lcall
in
mov
jl
dec
vmwrite
mov
pop
scas
lahf
xchg
sbb
sahf
in
cld
mov
cmp
js
repz
sub
xor
cld
push
stos
fstpt
jg
mov
mov
push
sub
test
adc
flds
mov
jo
addr16
cmp
push
and
inc
loop
jl
mov
sarl
mov
and
sbb
jne
das
fadd
and
scas
mov
out
lock
jnp
jmp
stos
call
push
mov
mov
loopne
ja
push
sahf
loop
pop
out
mov
data16
leave
ds
sbb
xchg
cld
sub
or
shll
cli
xlat
mov
mov
push
jne
dec
imul
mov
cli
mov
sahf
ds
adc
or
scas
xor
cltd
xchg
mov
xlat
or
jg
enter
adc
push
adc
dec
sub
cmp
or
testb
in
jno
adc
ljmp
outsb
test
or
jg
mov
jmp
push
jbe
out
push
in
inc
xor
pusha
lahf
sahf
fdivl
mov
add
dec
xlat
bound
stc
addr16
and
mov
xchg
pop
mov
popa
and
int
in
xor
mov
cltd
stc
inc
xchg
sahf
pop
out
cmp
fs
mov
jbe
lret
movsl
test
pop
sarl
mov
in
xor
mov
adc
shr
ret
into
mov
adc
push
or
shr
ror
cmp
fistl
inc
pop
or
inc
dec
cltd
pop
lods
lahf
xor
arpl
push
in
dec
mov
push
lret
pop
jnp
stos
xor
jne
test
inc
dec
sbb
push
dec
call
enter
xchg
xor
in
rclb
movsb
jae
jae
xor
int
popa
addr16
icebp
test
mov
jg
loopnew
inc
pop
mov
cmp
cmp
not
pop
ljmp
cmp
pop
cmp
and
js
jl
and
ret
xchg
mov
and
xor
pop
jne
jo
popa
cmc
inc
jl
dec
cwtl
dec
das
in
xor
inc
sbb
stos
jae
insl
lods
or
xor
add
nop
xchg
add
in
leave
pop
int3
loope
jae
aam
add
out
mov
and
les
enter
jg
push
mov
xchg
mov
int
cli
cmovnp
cmp
cmpsb
mov
popa
js
icebp
lahf
jge
int3
jle
jmp
push
fwait
mov
popl
les
popa
clc
and
mov
stos
or
mov
and
push
add
in
inc
inc
sbb
push
xlat
lret
movsl
xchg
lret
mov
xchg
fildl
xor
or
adc
bound
out
leave
xor
lahf
pop
ret
adcb
in
pop
lock
nop
rol
mov
rcr
sbb
pop
std
push
jge
lds
pand
jmp
shrb
mov
andb
repz
pop
fsubl
roll
sbb
mov
xor
aad
fmuls
adc
stos
icebp
sbb
out
icebp
aam
xor
dec
gs
inc
loop
or
mov
cmp
lahf
enter
mov
or
adc
xchg
push
xor
lock
and
dec
lds
movsl
xchg
mov
imul
pop
adc
xchg
lret
stc
scas
push
sahf
mov
ret
insl
mov
popf
pop
shrb
mov
popf
stc
mov
jecxz
dec
push
mov
fldl
je
sub
push
or
xchg
ds
inc
dec
mov
jmp
int
data16
imul
das
int
adc
mov
fdivr
orl
imul
pop
mov
stc
sbb
cwtl
xor
inc
dec
js
and
mov
push
mov
rorb
adc
push
or
pop
cli
lcall
sbb
jne
inc
pop
ljmp
cli
or
ljmp
mov
sub
xchg
or
jge
loop
lock
pause
pop
jnp
flds
shr
xorl
pop
int3
ds
mov
shll
sbbb
jb
mov
mov
push
xlat
aas
out
push
sti
imul
fdivs
pop
xchg
mov
jne
hlt
jns
adc
popa
in
adc
xor
adc
rcrl
adcl
scas
mov
sbb
inc
shrb
jno
leave
pop
in
lods
push
arpl
cmp
or
jno
cmp
shl
mov
cmp
inc
cmp
sbb
inc
incl
adc
xchg
cmovb
lock
mov
mov
adc
nop
mov
add
imul
mov
divl
cmc
in
lret
add
test
mov
out
jp
shrb
aad
inc
adc
imul
test
push
out
cmp
inc
movsb
xchg
es
in
les
ror
sahf
push
mov
sbb
jg
adcl
vsqrtps
repz
add
cmpsb
lods
lcall
xor
lahf
adc
loopne
repnz
adc
xlat
xor
dec
lea
fidivrs
push
scas
daa
fs
dec
add
pop
sub
sub
stos
jp
imul
in
pop
add
lcall
or
push
rcrl
xlat
lds
or
sahf
frstor
adc
int
inc
sub
ror
rcrl
sahf
xor
lds
add
fmul
pop
mov
js
push
ds
sub
mov
rolb
pop
adc
in
xor
orl
rorb
jo
pop
dec
xor
sub
cmp
iret
mov
dec
aad
dec
mov
pushf
out
ret
push
lock
in
lret
jns
xchg
mov
cmpsl
cmp
cmc
or
addr16
popf
push
lods
lret
jbe
int
mov
sbb
adc
stos
pop
inc
mov
adc
test
sti
pop
xchg
cltd
jae
mov
into
adcb
jnp
cmp
imul
adc
in
cmpl
pop
scas
or
int3
inc
loopne
fldt
add
dec
ret
lods
dec
push
cli
insb
mov
push
out
xor
fst
add
ds
sub
in
mov
in
jecxz
shl
add
or
stos
dec
out
dec
lods
sbb
xor
dec
fistpll
push
inc
xchg
test
xor
mov
mov
icebp
jo
hlt
or
inc
pop
bound
push
fisttps
add
and
pop
mov
loop
adc
jo
sti
sub
mov
movsb
stos
mov
lret
cs
inc
ljmp
inc
cs
sahf
push
adc
xor
imul
lret
jae
mov
xor
shl
inc
lahf
mov
xchg
mov
adc
push
test
add
fistps
lods
rcrb
int3
adcl
push
gs
jmp
add
cmp
xor
cmp
test
sub
adc
push
insb
inc
stc
xchg
lret
shll
mov
bswap
jl
jmp
ds
mov
stos
jl
nop
mov
movsb
cwtl
icebp
pop
sbb
pop
mov
sbb
mov
lods
pop
insb
push
mov
icebp
cwtl
imul
push
sub
movsb
pop
lret
jo
inc
and
fcomps
push
or
jl,pn
insl
aad
jg
sub
aad
lods
push
test
lret
insl
sbbb
movl
std
loope
ret
lret
rolb
je
cwtl
jnp
jnp
lret
gs
push
mov
jecxz
int
adc
mov
sbb
loopne
nop
aaa
rorl
test
mov
jecxz
stos
cltd
or
aaa
call
xchg
and
xor
ljmp
stos
leave
arpl
ja
and
cmpsl
rol
aad
stos
daa
insb
cmpsl
cwtl
jo
rcrb
or
lds
dec
shlb
cmp
push
ret
mov
jl
push
repz
sub
mov
imul
loope
inc
outsb
jb
sub
cld
in
or
and
hlt
adc
sub
mov
popa
push
rcr
jbe
push
icebp
fsubp
xor
xor
scas
add
ds
cmpb
inc
cld
nop
cwtl
or
sub
clc
dec
jge
mov
nop
mov
stos
add
xchg
and
dec
insl
sbb
lods
les
dec
mov
jb
xchg
push
mov
scas
sti
adc
dec
mov
jne
daa
cld
bound
inc
pop
and
js
inc
das
mov
hlt
je
lods
rorb
and
fistl
movsl
sub
push
and
test
dec
lods
jno
cmp
aad
fisubrl
rcl
loop
pop
add
xchg
iret
pop
push
testl
mov
fs
xor
or
cwtl
xor
leave
mov
push
fidivrs
mov
orb
aad
add
push
pusha
leave
adc
sahf
pop
mov
adc
ljmp
sbb
pop
sub
repz
pop
sbb
movsb
and
test
in
add
lds
mov
imul
jg
mov
bound
shll
pushf
xchg
inc
lret
or
lods
push
in
inc
test
in
fwait
sti
je
and
mov
jb
jbe
mov
sub
pop
lret
xor
popf
iret
xchg
cmp
sti
adc
pop
push
mov
aaa
int3
adc
add
cmp
mov
xor
mov
push
add
dec
in
mov
orb
lahf
pminub
fisttps
inc
cmp
fmuls
push
fcoms
das
repz
insb
idivb
cmpsb
ret
loop
lret
shll
cmpsb
es
insb
leave
aaa
imul
sbb
cmp
imul
cltd
cld
mov
push
pop
mov
pop
mov
aam
pusha
idivb
repnz
es
jle
xor
dec
lret
jg
loop
mov
push
lods
push
lahf
lret
insl
add
jp
jg
xor
push
mov
mov
repnz
fcoml
imul
pop
adc
lods
jecxz
mov
nop
push
adc
ret
lods
inc
push
in
pop
sbb
leave
lods
jb
mov
cmp
pop
jae
leavew
xchg
pop
mov
aaa
cltd
xor
mull
mov
aaa
or
sub
sub
out
dec
push
lcall
pop
test
sbbl
lock
lret
xchg
jmp
jg
lahf
mov
cmp
add
movb
and
es
push
xor
in
addb
jno
je
dec
fisttpl
mov
cmp
jl
adc
or
inc
bound
sbb
or
roll
aas
xrelease
cld
jecxz
ja
dec
pop
sti
sub
lahf
cmp
loopne
lcall
mov
shlb
sbb
push
push
scas
pop
push
shrb
dec
mov
pop
and
jbe
sbb
lahf
adc
mov
sti
push
add
pop
mov
dec
dec
in
jl
mov
sbb
aam
cmp
fs
or
sbb
or
enter
test
mov
bound
xchg
inc
mov
mov
rcr
jnp
ss
sub
jne
les
sub
movsl
fisttpll
and
stos
mov
inc
jl
jle
pop
adc
shrb
add
adc
pop
pop
adc
lea
pop
sbb
add
pushf
in
push
gs
lods
dec
inc
popf
xchg
outsl
mov
jae
sarl
fwait
push
sbb
sti
mov
test
mov
mov
push
loopne
addr16
adc
ficoms
ja
int3
mov
lcall
inc
mov
xchg
xor
fcoml
jmp
and
jns
rorb
inc
or
fsubrl
or
or
lret
repz
fnstenv
int3
inc
rolb
pop
xlat
in
dec
dec
movsb
add
lcall
jae
push
and
xor
add
push
lock
sub
lea
xor
add
push
call
mov
sub
push
lahf
cmp
or
fldt
outsb
movsb
xchg
call
dec
mov
aas
mov
movsb
out
sub
ficompl
push
fstpl
fisttpl
sub
cmpsl
adc
fsubrs
leave
dec
cmc
lcall
push
aas
push
pop
dec
cmpsl
iret
mov
push
xchg
mov
push
ss
cmp
mov
shl
mov
fcompl
dec
mov
bound
mov
mov
fsts
pop
sbb
shl
repz
xor
or
lock
inc
insb
xor
xor
int3
jmp
int
mov
cmp
stos
mov
loope
jge
and
pop
push
ss
and
cmp
cltd
sub
push
mov
push
jno
nop
mov
dec
ljmp
or
xchg
cmpsl
pop
repnz
xchg
and
lret
pushf
rcl
and
xchg
adc
call
mov
inc
inc
adc
out
lods
into
xchg
daa
jne
jns
jmp
icebp
call
fiadds
aas
imul
ffreep
inc
adc
mov
dec
lea
push
jge
jbe
dec
inc
and
mov
and
enter
push
mov
cmp
fwait
cmp
push
jmp
xlat
mov
insb
sbb
lret
push
add
insb
lock
push
cmc
movsl
cmc
pop
out
lds
mov
jl
xor
fisubrl
or
and
cmpsl
jne
xchg
in
mulb
lret
fdivr
xor
mov
add
mov
or
in
ljmp
push
push
and
icebp
or
jge
cmpsl
jmp
int
push
in
pop
aad
mov
push
je,pn
dec
stos
push
cmp
ljmp
cs
repz
add
add
add
mov
loope
mov
cmp
mov
int3
int
mov
mov
or
mov
repnz
jno
cmp
add
insb
stos
push
sti
cwtl
mov
mov
xchg
push
adc
inc
push
popa
out
iret
pop
cltd
fwait
aad
sub
xor
popl
outsb
push
mov
hlt
inc
ds
rcll
push
insl
xchg
mov
push
xchg
xor
pop
rcrb
cmpsb
sub
push
imul
lcall
or
ret
mov
data16
cmp
cwtl
pop
pop
xor
jmp
xchg
dec
mov
mov
mov
icebp
orl
xor
dec
fmul
sub
ja
orl
outsl
out
setno
bound
cltd
lret
or
repz
push
xchg
lods
cmpsl
cltd
outsb
adc
mov
or
in
nop
fisubl
mov
repnz
fsubl
xor
js
mov
cltd
and
jae
or
sub
sbb
mov
insl
pop
and
sahf
es
pop
lods
js
cmp
inc
mov
js
and
subl
pusha
mov
sbb
clc
dec
rcl
outsl
and
jbe
sub
jns
xor
adc
rclb
mov
cmpsb
icebp
add
test
jp
ja
ljmp
inc
sahf
push
filds
xlat
sbb
xor
xchg
push
jge
xor
mov
loop
imul
stos
mov
lahf
jg
jl
sub
mov
pushf
fsubs
mov
lcall
jecxz
lcall
lock
stos
imul
aam
inc
sbb
shll
add
or
enter
paddsw
out
jbe
add
sarb
test
push
arpl
enter
fistl
mov
mov
mov
pop
out
inc
stos
xchg
add
adc
jno
sub
stc
jo
xchg
lds
jp
adc
pop
adc
sbb
and
movsl
inc
xor
rcrb
adc
ret
stos
mov
and
xchg
pop
or
pop
fsubp
mov
mov
sbb
inc
adc
sub
sti
jmp
lret
mov
push
xchg
add
adc
lock
sbb
sbb
adc
add
pop
jge
xchg
cmp
mov
cltd
ret
add
inc
pop
and
mov
pop
incl
pop
and
sub
pushf
outsl
out
int3
fdivr
lods
or
xor
jo
mov
and
or
pop
pushf
cmp
xchg
cwtl
lahf
mov
movhlps
popf
sub
sub
fisttpl
insl
idivb
fistpl
and
std
mov
mov
shrl
jge
test
xlat
cli
push
mov
sbb
repz
ficompl
repz
sahf
push
xor
pusha
cltd
jne
loope
push
loop
test
pop
daa
push
ja
dec
pop
dec
sar
or
push
mov
jge
movsb
repnz
dec
push
jle
cmp
sub
fwait
loop
mov
or
dec
in
dec
stc
xchg
and
stc
pop
in
push
push
lahf
pop
fadd
sub
mov
cli
push
xor
or
and
lds
inc
rclb
add
jge
inc
adc
mov
xor
lods
mov
addr16
sub
jge
adc
xchg
pop
cld
mulb
add
sub
ret
loop
dec
xchg
xchg
dec
int3
xchg
in
and
adc
pop
jmp
lock
mov
sub
mov
push
add
mov
in
mov
and
insl
inc
mov
dec
clc
dec
pop
sbb
mov
aad
sub
sub
std
dec
arpl
jbe
xchg
movsb
sub
nop
pop
fstpl
movlps
or
xchg
jmp
xor
daa
rol
adc
mov
or
out
cmp
xor
ret
jbe
sbb
ret
dec
mov
fnsave
cmp
push
push
rcrl
cmp
and
daa
fstpt
lret
mov
jle
mov
and
pop
xchg
incb
popa
mov
loop
ds
dec
adc
fcomi
bound
je
movsb
cmp
std
xchg
icebp
mov
shll
stos
lods
fidivrl
xchg
inc
adc
sub
loope
adc
sbb
push
out
imul
loope
icebp
lods
mov
or
add
cmp
insb
mov
pop
repz
or
stos
int
in
adc
ret
fistpl
stos
jno
test
pop
or
fmul
sbb
add
and
lock
and
in
pushf
imul
jns
mov
mov
jns
fs
cmpsl
add
xchg
xchg
push
clc
jb
hlt
hlt
pop
out
push
repz
and
mov
or
fsts
repz
fwait
or
pop
dec
pop
ljmp
ljmp
out
enter
int
and
sub
xchg
cmp
cmp
imul
or
addr16
dec
cmp
cs
iretw
leave
shl
in
sahf
push
loopne
out
cmp
loop
gs
push
or
leave
jbe
inc
in
sub
cmpsl
lret
cmp
shr
pop
out
add
pop
rcrl
mov
and
dec
dec
adc
add
sbb
cmpsl
imul
pop
out
dec
dec
pop
sub
jo
fwait
mov
jmp
pusha
outsl
pop
inc
pop
sub
push
push
mov
xor
pop
rolb
xchg
sub
add
ljmp
bound
cmpsb
mov
and
lahf
mov
in
imul
pop
mov
in
test
pop
ss
fnstcw
loope
or
jp
push
call
jmp
mov
pop
push
push
sub
sti
insb
fildll
pop
sbb
cmp
dec
lods
mov
inc
mov
sbb
outsb
mov
hlt
lods
or
xchg
movsb
and
and
in
leave
lcall
push
pop
test
bound
mov
push
das
js
sub
cmpsb
cmc
scas
ss
imul
ficoms
mov
push
sub
push
push
push
jbe,pt
jnp
mov
scas
mov
in
cmpsl
or
js
adc
xor
shl
or
fisttps
push
daa
sbb
xchg
out
rcl
sub
fcos
xor
lock
adc
push
add
loop
adc
sub
xchg
pop
fs
fstl
dec
sbb
mov
into
into
mov
sub
push
movsl
leave
cmp
nop
iret
fcomip
leave
leave
insb
jg
mov
mov
ret
push
cld
in
or
sarb
push
mov
inc
ret
pushf
rorb
push
xchg
gs
add
push
cli
imul
add
pusha
test
movl
data16
fwait
es
into
and
jbe
daa
test
sub
cmp
mov
cmp
dec
mov
inc
push
aad
aaa
jbe
aad
sub
dec
sub
rcll
sub
mov
pusha
imul
xchg
and
pop
mov
jl
or
xor
sub
xchg
scas
add
jmp
rorb
push
cld
std
fsubrp
out
lods
sahf
mov
dec
nop
rcrb
pop
sub
hlt
sbbb
cltd
into
mov
icebp
mov
sub
rcrb
fiadds
xor
lods
lds
xchg
push
clc
mov
cmp
das
pop
mov
cmp
adc
test
fidivrl
jle
movsb
stc
negl
push
add
out
frstor
into
stos
xor
repz
sbb
cmp
addr16
push
popa
mov
dec
jl
dec
daa
xchg
int3
shrl
add
lods
fisttpl
mov
sub
call
sub
js
fnstenv
leave
stos
pop
push
push
bound
sbb
cld
inc
loopne
call
xor
cltd
add
in
repz
fwait
imul
inc
add
jae
fstl
out
dec
inc
gs
add
mov
push
xchg
sub
test
or
xor
mov
jne
inc
das
mov
jbe
test
daa
call
dec
mov
les
test
out
outsb
cmp
push
mov
mov
cmp
loopne
jg
enter
pop
repz
shrl
dec
lahf
mov
jbe
dec
mov
nop
dec
in
ret
imul
decl
push
push
push
mov
jp
mov
inc
adc
sub
sti
call
xor
sub
inc
repnz
test
jmp
sbbl
or
sarl
xchg
ss
cmp
fidivs
cltd
ror
or
sub
daa
mov
cltd
jae,pn
xor
fcoms
imul
cmpsb
adc
pop
and
or
dec
push
jb
sub
jge
pushf
ror
xchg
loope
xchg
fistpl
jnp
aam
in
mov
push
push
xlat
mov
test
fdivr
scas
cmp
xor
lret
clc
cltd
ret
sbb
repz
test
call
push
mov
clc
jp
inc
adc
arpl
mov
pop
into
int3
in
fmull
sub
jae
lahf
ror
out
mov
mov
out
roll
stos
mov
jb
in
xchg
std
out
push
add
sub
mov
scas
dec
test
sub
xor
dec
mov
ficoms
xor
pop
and
add
mov
dec
xchg
clc
mov
or
jmp
mov
jp
lods
jns
mov
sub
sub
bound
sbb
sub
js
push
sbb
sub
pop
stc
pushf
negb
inc
push
fsubp
gs
sti
pop
inc
inc
lret
fdivs
inc
imull
test
adc
cmp
mov
mov
leave
div
adc
movsl
aad
outsl
test
aam
add
xchg
mov
xor
and
lods
pushl
hlt
mov
imul
xchg
sub
mull
lahf
addr16
jmp
mov
dec
and
pop
sbbl
lret
aad
iret
loopw
stc
adc
mov
push
sti
lret
and
mov
jne
das
mov
xor
xchg
orb
or
outsl
add
daa
shl
mov
enter
out
xor
popa
ss
xlat
lahf
add
insb
push
sbb
sub
es
leave
add
adc
jl
sub
add
jmp
jno
lds
pop
les
mov
inc
mov
fldenv
andb
js
pushf
ss
pop
inc
sti
or
cwtl
jge
cmpsl
loope
mov
sub
jbe
orb
lods
adc
into
and
push
jo
loope
out
fxch
push
sahf
sbbb
sbb
push
stc
jle
cmp
jl
repz
jg
add
dec
shll
lds
and
lcall
pop
call
out
hlt
and
in
or
add
ret
ret
cmp
or
mov
jb
mov
popa
lahf
mov
out
jo
or
and
daa
dec
ret
push
insb
fwait
sar
xlat
mov
ljmp
jg
xchg
pop
ss
fmuls
scas
xor
leave
jmp
fildl
shlb
or
add
bound
dec
sbb
adc
sub
mov
push
mov
jp
or
mov
or
testl
scas
rcll
lds
inc
jne
push
test
push
sbb
fstpt
mov
xchg
sbb
jmp
jmp
inc
ljmp
or
js
pop
call
push
mov
imul
mov
filds
xchg
fildl
mov
or
pusha
inc
repz
mov
or
dec
jns
cmpsb
sbb
pop
mov
sbb
or
inc
stc
popf
ss
mov
lds
cmp
dec
cld
xchg
xor
add
fldenv
mov
and
hlt
mov
test
sub
daa
incb
dec
xor
dec
mov
pop
out
mov
fcmovne
sbb
aam
push
adcl
aad
adc
lds
xchg
loopne
fistps
aad
out
gs
cwtl
add
push
jb
adc
pop
imul
shl
cmp
inc
jp
pop
mov
inc
mov
popa
int
lods
jecxz
mov
shr
mov
cmp
lea
data16
xchg
inc
cmc
add
out
and
push
cmpsb
xchg
mov
adc
pop
repz
jle
cli
sub
rcr
inc
add
pusha
jmp
in
imul
sub
adc
test
js
shrl
jno
adc
sbb
or
cmpsb
inc
cmp
es
mov
in
cwtl
in
jmp
jmp
pusha
push
loopne
movsl
lcall
pop
test
xor
nop
fdivrl
or
test
scas
btc
xchg
popf
jge
dec
xor
sub
lock
cmpsb
pop
int3
arpl
mov
fucom
or
icebp
xchg
mov
mov
pusha
lret
enter
xchg
rcr
daa
cmp
adc
rcr
xchg
or
pop
fcoms
int
shrl
adc
cmpsb
in
leave
jnp
outsl
test
push
jae
pop
sbb
cmp
les
add
add
dec
cmp
int3
shrb
dec
fsubs
mov
add
cmpsl
pop
lea
cmpsb
iret
stc
cltd
mov
jecxz
sub
mov
adc
xor
rorl
sbb
loopne
pop
cli
sbb
ret
ljmp
xchg
dec
xor
scas
movsb
je
mov
mov
mov
push
cmp
int3
les
out
push
dec
dec
mov
dec
jmp
adc
sbb
imul
ffree
ret
pop
insl
cwtl
cmp
fidivl
cmp
push
mov
add
push
mov
push
cmpsl
pop
aad
shlb
insl
cmc
xchg
outsb
fcomps
add
sub
dec
fisubl
insl
imul
jb
mov
adc
jnp
add
mov
inc
sub
nop
imul
push
test
mov
lods
xchg
sbb
jo
mov
dec
sbb
pop
pop
ljmp
enter
fistpl
jbe
gs
in
leave
frstor
ljmp
ja
insb
aaa
iret
inc
pop
ss
mov
scas
and
fcoml
lods
adc
or
aam
jb
mov
fsubrl
mov
cmp
scas
push
in
cwtl
add
insb
dec
mov
xchg
mul
outsb
mov
jle
inc
mov
sbb
and
insl
cli
cld
pop
add
xorl
loopne
ljmp
cwtl
pop
pop
lret
cmp
shrl
dec
sub
subps
repz
fcmovb
pushf
adc
leave
cmp
jge
mov
mov
mov
push
xchg
fucomip
and
pop
in
cwtl
ret
xor
inc
dec
mov
aas
sbb
cmc
daa
push
into
scas
jmp
mov
add
push
inc
sbb
sti
sub
out
and
xor
xchg
cwtl
pop
stos
lret
jge
pop
push
mov
mov
icebp
cmp
lods
insl
dec
add
gs
cmp
add
sub
inc
cltd
cmp
jne
gs
gs
shr
aad
or
cmp
addr16
push
call
cltd
cltd
xor
out
xchg
imul
icebp
cmpsb
jge
xchg
fwait
inc
sub
cmc
mov
ret
fwait
test
adc
popa
mov
inc
cmpsl
inc
cmp
pop
fsubr
movsb
pop
and
arpl
lahf
jo
and
orl
cmp
fldt
dec
xchg
cmpsl
push
loope
mov
adc
js
addr16
stos
repz
sub
es
xchg
xchg
out
add
lret
mov
out
mov
fistps
mov
or
dec
out
arpl
and
pop
cld
lahf
int3
mov
dec
fmuls
pusha
inc
movsl
das
sahf
push
rcll
and
in
test
test
mov
mov
jge
and
mov
mov
push
push
lret
lcall
jns
sub
cli
push
js
les
push
pop
xchg
sbbb
mov
inc
sbb
aad
sub
xorb
pusha
fsubs
mov
std
out
bndstx
xor
dec
cmp
sbb
das
insl
xchg
cmp
xchg
aam
stc
sbb
out
push
mov
sbb
pop
aas
test
lcall
jge
into
repnz
or
jl
inc
pop
mov
mov
shrb
or
mov
andb
sub
pop
mov
mov
dec
jp
adc
mov
imul
pop
divb
mov
test
int
ret
nopl
jmp
cmpsb
cmpsb
pop
add
js
and
lock
push
imul
jle
xor
fcmovnu
xchg
adc
mov
or
inc
sub
repz
sbb
cmp
xchg
xor
adc
out
dec
fisubs
adc
lods
jns
pop
mov
sub
xchg
popa
pop
mov
push
push
cmpsb
movsb
mov
fisttpll
adc
es
jbe
loope
and
mov
push
mov
mov
and
and
cmp
mov
cmp
sbb
out
mov
and
ss
loop
jmp
icebp
sub
mov
call
lods
add
andl
les
push
mov
call
jmp
pushw
test
sbb
lea
movsb
insl
push
les
in
je
fdivrs
cmp
xlat
cmp
xlat
pop
xlat
inc
rcrb
cmp
outsb
fsubs
aaa
add
xchg
adc
es
rcrb
loopne
or
add
adc
fdivl
push
call
inc
in
insb
jns
js
rorl
push
inc
mov
test
adc
pop
or
mov
jmp
test
sub
sbb
dec
ja,pn
cltd
xor
in
imul
add
call
sbb
mov
enter
add
mov
repz
sbb
add
es
in
les
sbb
pop
call
sti
inc
cmp
js
xchg
dec
xchg
pop
mov
clc
in
add
or
jno
cli
mov
xchg
iret
pop
cli
data16
mov
dec
push
icebp
dec
aam
cwtl
nop
mov
xor
aaa
mov
cld
push
sbb
je,pn
je
or
pushf
pop
pop
pop
cmp
movsl
in
sbb
cmc
mov
and
insb
call
push
push
pop
xchg
popa
test
dec
shrb
sti
andb
nop
xor
and
testb
rorl
adc
gs
inc
pop
ror
add
mov
push
push
mov
rclb
test
jnp
nopl
pop
ret
jg
mov
jmp
idiv
aad
stos
inc
fadds
dec
into
cltd
fildl
and
inc
inc
cmpsl
fs
pop
cwtl
in
inc
out
out
dec
or
mov
mov
ljmp
repz
movl
outsl
mov
lcall
pop
xor
mov
xchg
mov
jmp
arpl
fwait
out
fcmovnu
and
das
insl
lahf
nop
in
fwait
push
aaa
or
hlt
imul
or
into
scas
xchg
in
movsb
jae
in
dec
aam
out
xchg
inc
xlat
xchg
push
sub
incb
fs
fwait
push
sub
insb
mov
inc
test
add
movlps
mov
ret
scas
rcll
shrb
jb
divl
dec
imul
cmc
dec
push
push
cmpsb
xor
xchg
lcall
sub
out
fsubrs
fcomip
daa
incb
mov
fidivrl
je
lods
loopne
sub
mov
xorb
cltd
or
mov
loopne
mov
shl
mov
fcmovnbe
fst
idivl
and
mull
push
mov
icebp
out
xorb
mov
sub
mov
cmpsb
movsl
je
sbb
pop
les
inc
jbe
jmp
cmp
push
mov
popa
push
lahf
mov
adc
jle
cmp
mov
jmp
push
xor
cli
xchg
fisubrs
adc
dec
in
imul
mulb
push
ret
and
dec
xlat
xlat
xlat
mov
add
movsb
mov
in
mov
xchg
mov
iret
scas
jo
pop
lods
sbb
xchg
sub
sub
fwait
cmpsb
leave
or
inc
bound
xlat
xor
adc
lret
mov
sub
add
mov
sub
pop
push
add
jle
outsb
push
adc
adc
jmp
outsl
orb
fstpt
fisubl
sbb
xchg
insb
cmp
cmp
sub
outsl
enter
stos
jns
lret
xchg
jp
mov
data16
fsubrl
cwtl
xchg
adc
movsb
push
lea
push
jno
fwait
pop
dec
test
inc
adc
enter
mov
aas
and
inc
test
ret
xchg
add
jl
mov
mov
out
cmp
aas
cld
out
addl
inc
sti
jae
xchg
jl
lahf
call
push
push
ss
cmpsb
add
cmp
lret
jns
movsl
xchg
xor
das
xor
fcoms
pop
fldt
pop
xchg
je
in
add
inc
jle
sarl
mov
pop
xor
lds
daa
int
xor
cmpsl
lods
cs
add
cltd
sbb
cmp
int3
pop
jmp
xor
pop
sub
rcr
mov
leave
or
cltd
outsl
adc
cmpsb
addr16
in
mov
mov
stos
xlat
mov
jb
pop
mov
and
jnp
push
bsf
enter
sub
out
inc
cmpsb
add
cmp
jge
sbb
jecxz,pn
popf
dec
pop
inc
aaa
mov
or
imulb
shl
mov
mov
push
push
xor
add
popa
cmp
into
xchg
dec
cld
dec
or
cwtl
mov
scas
loop
xchg
cmp
sub
mov
lods
nop
in
hlt
inc
sti
push
in
lock
pop
in
mov
jbe
mov
push
mov
mov
adc
addr16
pop
cmp
jb
pop
pop
sbb
out
cld
xor
rolb
shll
and
push
out
loope
sbb
and
pop
adc
or
push
mov
or
lret
shlb
pop
fistps
scas
aam
ror
das
mov
sbb
fwait
inc
lods
in
mov
xchg
mov
sub
xor
mov
mov
test
lock
scas
fnstenv
pusha
add
loope
call
sti
fs
movsl
mov
sub
mov
sub
or
pop
jge
icebp
aam
push
and
push
xchg
stos
scas
addr16
dec
sbb
insl
pop
jecxz
jmp
jno
daa
call
imul
shll
pusha
push
les
ds
cmp
cmp
addr16
lods
repz
xchg
hlt
push
ljmp
fsubrp
in
ror
cmp
pop
xrelease
dec
add
dec
in
cmp
mov
daa
mov
shl
inc
daa
pop
aam
cmp
cwtl
or
push
ss
mov
es
insl
push
mov
fwait
push
jae
das
cltd
mov
pop
mov
popa
jno
xor
lods
dec
int
sahf
scas
bound
fbstp
jp
add
or
xlat
lahf
movsb
fcom
mov
adc
inc
jnp
mov
xor
add
jbe
xor
add
out
sub
cmpsl
jmp
movsl
and
aas
aam
sbb
ret
inc
jb
push
xchg
mov
imul
insl
icebp
std
gs
cmp
push
insl
dec
scas
cwtd
ss
mov
mov
stc
stos
sub
xlat
sbb
sbb
mov
xor
outsb
jl
fadds
test
adc
add
lock
pop
mov
sbb
sub
lea
loope
out
add
cmp
pop
mov
je
ds
adc
adc
pop
iret
cmpsb
icebp
lret
outsl
pop
mov
std
mov
mov
xor
cmc
loopne
cld
lods
clc
and
jmp
dec
aam
fiadds
xor
stos
stos
jmp
int3
stos
cmpb
into
xcrypt-cfb
cmpsl
and
lcall
lods
sub
test
shl
lret
cmp
pop
xchg
dec
push
loope
outsl
movb
out
xchg
xchg
jmp
fsubs
nop
movsb
je
jb
lods
mul
fs
xchg
mov
xor
pop
adc
sub
jne
mov
orl
jl
cltd
jg
xor
xchg
xchg
pop
sub
iret
out
mov
mov
sbb
xchg
movd
sub
add
sti
inc
movsb
mov
jmp
dec
fs
ret
addr16
mov
and
sti
mov
bound
std
jae
jp
sbb
push
dec
popf
mov
push
mov
xor
mov
adc
mov
mov
test
sbb
bound
test
loopne
inc
ficomps
jne
mov
adc
mov
push
scas
pop
roll
imul
iret
int3
cs
sub
fwait
add
fmuls
enter
mov
dec
lahf
scas
mov
outsl
dec
inc
and
sub
mov
push
test
pop
jecxz
push
mov
aas
dec
aad
cmpsb
cli
cmp
aad
mov
dec
inc
jg
movsb
sbb
pop
xchg
inc
sub
dec
iret
pop
xor
out
lock
loope
cli
daa
scas
jo
stos
ja
jmp
out
jmp
incl
in
js
icebp
jns
sub
add
inc
rcrl
mov
xor
sbb
cmpsl
xchg
jne
data16
jp
lahf
jecxz
in
mov
adc
addr16
stos
adc
and
aad
adc
mov
push
rorl
out
mov
ds
lea
push
nop
jge
out
clc
shrb
dec
pop
repz
mov
cmpsl
gs
addr16
ljmp
push
sbb
int3
shr
cmpb
inc
adc
lcall
mov
imul
je
int3
inc
mov
repz
jno
movsb
pusha
fsubrs
jbe
dec
lret
inc
hlt
pop
ljmp
insb
divb
jbe
sub
inc
xchg
xchg
lods
dec
sbb
stos
jle
add
cltd
loope
sub
mov
addr16
mov
dec
fbld
jg
sub
js
pop
jg
sub
enter
mov
rcll
int
and
lods
repnz
nop
xchg
fists
sub
xchg
scas
mov
and
addr16
shll
dec
and
icebp
pop
iret
xor
inc
fisubs
adc
sbb
jb
and
dec
in
cmpl
fdivr
pop
ret
int3
insl
adc
push
shrb
lds
xor
clc
dec
sub
pop
inc
dec
fnstsw
cmp
jmp
inc
jecxz
cmpsb
dec
fwait
test
jnp
pop
dec
rorl
mov
push
and
jnp
icebp
adc
or
xchg
mov
in
sbb
out
dec
sub
xor
pusha
add
mov
push
rcrl
lock
bound
pop
fiadds
ljmp
add
xchg
les
cmp
loop
adc
pop
outsb
das
shrb
jae
dec
push
jns
sub
mov
or
mov
test
add
sub
adcb
sub
mov
mov
test
popa
pop
js
pop
data16
jecxz
pop
mov
aad
fcoml
scas
add
add
sub
push
sub
call
out
daa
jl
ljmp
out
mov
inc
or
push
out
mov
out
and
stc
mov
inc
scas
lahf
mov
xchg
jbe
enter
or
sub
sbb
mov
inc
jl
nop
xor
jmp
mov
pop
out
xlat
lds
insb
mov
cmp
inc
and
aad
dec
push
mov
jns
jns
sbb
movsb
adc
insb
and
lcall
cld
mov
and
pop
jae
lock
dec
jle
jb
push
js
insb
jnp
mov
out
xorl
or
cmp
pop
sub
xor
gs
xchg
xor
test
scas
sbb
sub
mov
push
fidivrl
xchg
or
cmp
cmp
call
xlat
rcll
add
inc
andl
call
pusha
gs
pop
cwtl
mov
inc
push
xor
jb
and
dec
push
cmp
lahf
jmp
adcb
aaa
pop
add
notb
adc
lock
lods
jp
ret
movsl
dec
adc
test
or
xor
cmp
inc
mov
xchg
mov
dec
xchg
in
lock
adc
and
scas
lret
xlat
nop
jecxz
jmp
xor
imul
mov
mov
lret
xlat
ljmp
jbe
jnp
insl
out
push
pop
mov
mov
das
out
adc
out
jecxz
dec
int
outsb
jne
pop
pop
adc
sarl
imul
mov
mov
dec
or
in
stc
inc
xor
cmp
movsb
and
or
cmp
ja
mov
fisubrs
aad
lods
cmp
imul
hlt
rcll
pop
fdivr
repz
ret
xorl
inc
inc
pusha
popa
cmc
insl
repz
push
mov
das
popf
mov
in
jnp
push
xor
shlb
int
or
add
les
arpl
pop
test
wbinvd
or
scas
pmaxub
movsb
bound
loope
cs
popf
mov
adc
mov
ja
lret
imul
adc
in
in
int
mov
xor
mov
shll
ja
pop
fidivrs
les
jns
adc
call
std
ret
cmpsl
stc
lret
stos
sbb
sub
mov
and
dec
pop
dec
fimuls
fs
mov
insl
repnz
inc
add
dec
push
arpl
mov
mov
jns
lds
mov
push
pop
add
aas
xchg
out
loop
gs
movsl
lret
shl
das
shlb
testb
pop
ljmp
mov
push
fsubrl
pop
sbb
fstpt
ja
rcrb
push
mov
out
xchg
jge
js
nop
push
mov
and
pop
jg
mov
test
clc
push
pop
cmpsl
add
dec
popf
fstl
test
gs
xchg
mov
scas
mov
test
call
sbb
pusha
cmpsl
push
push
jno
add
pop
pop
enter
mov
cmp
xchg
add
mov
fcmovb
pushl
inc
push
and
orb
idivl
movsb
push
inc
and
inc
mov
cmp
es
lret
xchg
adc
out
mov
push
inc
sbb
push
sarb
jbe
mov
push
cmp
hlt
inc
je
sti
push
sbb
cltd
popa
in
mov
fs
push
iret
inc
rorl
inc
fimull
idiv
pop
dec
sub
xchg
lret
sbb
dec
faddl
fnsave
insl
mov
lods
dec
sub
icebp
mov
iret
sti
pop
mov
ljmp
cli
mov
mov
adc
faddl
addr16
imul
pop
stos
mov
clc
int
and
rcrl
sub
lcall
movsl
repz
cmp
icebp
int
nop
leave
mov
jp
lea
adc
aad
fnsave
dec
and
lock
cwtl
dec
and
add
adc
repnz
lods
mov
inc
fisttps
fs
xchg
xchg
fists
push
jno
int
insb
add
enter
push
out
mov
orl
icebp
ret
adc
dec
in
cli
in
cmp
repz
inc
aaa
loop
push
mov
add
push
aad
out
and
hlt
cmp
cmp
insl
cmpsl
call
cs
cmp
cmpsb
inc
loope
xchg
mov
xchg
xchg
pop
mov
iret
jmp
xor
lods
add
ds
and
cmp
push
xlat
xchg
je
push
mov
loop
push
inc
stos
test
loop
sub
arpl
mov
jg
bound
lods
dec
loopne
inc
out
andl
jo
pop
mov
xchg
cmpsb
adc
testl
movsl
fsubrs
fildll
loopne
xchg
mov
sar
pop
lcall
push
xor
das
adc
cld
jae
mov
jae
scas
stos
andb
and
and
mov
popa
mov
or
aad
pop
sbb
dec
pop
lret
or
ucomiss
inc
loope
sub
pop
pop
mov
fcmovne
inc
mov
cwtl
or
in
xchg
ret
shl
push
mov
es
mov
imull
dec
xchg
or
aas
push
sub
out
stos
movsl
sub
jno
push
cmp
loope
jo
jb
jno
inc
mov
and
gs
sbb
cmp
adc
rcrl
cs
fadd
loope
push
pop
call
jo
xchg
shr
pop
outsb
es
jg
mov
jnp
js
aas
pop
call
mov
push
outsl
imul
sbb
sub
faddl
mov
jecxz
jns
xchg
jg
mov
je
sbb
mov
xorl
push
add
cmp
imul
pop
icebp
pop
jns
adc
or
pop
jl
jg
dec
mov
cltd
fs
mov
xor
xchg
mov
xlat
sbbl
inc
push
xor
je
les
xlat
cli
pop
jecxz
pop
in
std
sahf
sarl
repnz
enter
dec
loope
in
mov
outsl
bound
pop
daa
push
bound
xorb
xor
cmpsb
inc
into
inc
add
icebp
ja
movsl
adc
popl
dec
xor
push
insl
xor
in
cmp
inc
or
movsb
xchg
sbbl
pusha
mov
xchg
loope
shrl
push
ret
cwtl
andb
imul
ret
lcall
rcl
cld
lea
push
jle
jbe
add
out
pop
ret
sub
mov
outsl
fsub
jns
mov
clc
cmp
dec
jg
dec
mov
lock
and
sub
cmp
jg
jae
mov
adc
sbb
jecxz
outsl
xor
ds
mov
jns
mov
or
jecxz
insl
add
dec
repnz
mov
cmpsb
dec
xor
outsl
or
jne
jno
dec
outsb
pop
jo
cmp
leave
push
ret
fst
loope
jle
xor
mov
lret
jbe
mov
inc
cmp
ja
dec
dec
sahf
and
sub
sub
dec
cmpsb
jecxz
fnstenv
pop
and
inc
test
fdivl
outsl
or
mov
mov
pop
or
xchg
lods
repnz
andb
test
mov
and
fninit
imulb
push
stc
sub
cwtl
fsts
mov
rcrb
das
sub
adc
int
mov
pushw
jb
imul
add
add
mov
push
mov
movsl
sub
lea
shr
mov
pop
jg
add
pop
and
je
scas
imull
imul
in
pop
xor
pushf
sub
imul
mov
mov
jle
cmpsb
movsb
es
cmp
or
push
mov
dec
inc
fistpll
stc
mov
fs
les
in
inc
nop
dec
lods
mov
iret
mov
mov
jne
imul
subl
or
jne
sbb
pop
or
pop
cmp
or
dec
push
shlb
dec
aad
push
cwtl
sub
xchg
gs
push
test
nop
push
lds
insl
pusha
dec
jns
mov
fcoms
xor
xchg
pop
rolb
pushf
iret
addr16
mov
enter
lea
cwtl
cmp
and
lcall
pop
loop
mov
cmp
fs
mov
xor
jmp
cmp
sbb
pop
xor
inc
sub
pop
pop
rcr
and
test
lcall
call
inc
cwtl
call
push
xor
out
dec
cmpsb
sti
push
addb
rcll
and
xchg
lock
imul
rorl
imul
mov
mov
push
lcall
xchg
mov
sub
cli
lock
cltd
cmp
jb
xlat
jle
add
pop
jb
ja
aaa
icebp
jo
test
std
xor
sahf
imul
cmpps
jle
lret
dec
push
addr16
iret
sbb
shl
mov
dec
enter
call
fldl
pop
lds
sbb
loope
mov
shufps
daa
inc
mov
in
sbb
fisubl
out
loop
mov
outsl
xchg
adc
shl
lret
sub
rcrb
repnz
fs
out
jge
jnp
idivl
push
sub
mov
dec
clc
fwait
xchg
push
mov
das
hlt
mov
cwtl
or
dec
test
and
in
pop
cmp
cmp
ja
adc
add
sub
dec
mov
lahf
icebp
xor
jl
rorb
pop
loope
push
ret
mov
jo
fimull
call
in
xchg
mov
cmpsl
orb
les
pushf
add
iret
mov
mov
fldt
mov
add
push
iret
pop
jl
fmuls
out
adcl
outsl
movsl
inc
inc
test
mov
idivl
lock
jge
sub
lahf
cli
sbb
iret
imul
mov
call
lods
add
mov
addr16
repz
mov
imul
add
pop
in
or
mov
mov
lcall
xchg
push
pop
xorb
xor
cmp
cwtl
mov
sub
out
or
outsb
mov
sbb
iret
imul
out
jl
jecxz
ds
push
cmp
mov
push
popa
negl
pop
xchg
or
mov
ja
dec
push
mov
add
fistl
jne
int
rcl
dec
or
in
test
jmp
test
adc
aas
subl
cmp
icebp
dec
xor
cmp
lea
in
enter
mov
das
mov
ljmp
sub
in
mov
sub
inc
cs
mov
xor
mov
mov
pop
leave
dec
clc
aas
dec
or
push
xor
ljmp
arpl
jne
sub
jns
or
div
add
call
hlt
add
insb
pop
add
fwait
xor
mov
push
cld
sub
push
xchg
enter
pop
insb
rclb
cmp
mov
adc
divl
cli
int
and
mov
mov
aad
inc
and
lds
adc
cwtl
cmp
xor
sub
pop
jns
dec
das
mov
lret
ret
mov
push
jmp
sete
mov
data16
mov
out
test
mov
or
ss
icebp
xor
cmp
or
je
sub
std
ss
xchg
rcl
test
iret
push
and
xor
sbb
add
sti
int3
or
fdivrl
mov
mov
in
test
dec
popf
sbb
imul
clc
aad
xor
dec
ljmp
push
pop
call
sbb
out
aaa
lret
pop
push
fldcw
or
jo
fwait
subl
jns
xchg
mov
mov
into
incb
popf
push
and
xlat
mov
pop
mov
pusha
mov
lahf
int3
cmp
movsb
and
sbbb
lea
push
aaa
fstps
cmp
pushl
push
jae
aas
arpl
test
mov
and
stos
cmp
aaa
mov
in
and
in
inc
mov
shll
stos
adc
cltd
movsb
mov
inc
mov
sub
inc
xor
sbb
mov
xor
adc
mov
ds
mov
push
and
fcoml
mov
push
xor
mov
pop
lock
jmp
js
int3
dec
or
mov
jnp
pushf
pop
out
outsl
push
popf
xchg
dec
or
jp
jmp
sbbb
call
imul
ljmp
daa
sbb
jno
xor
and
or
mov
bound
and
push
jns
movsb
pop
loopne
jbe
aaa
sbb
adc
xchg
psllq
ljmp
dec
rorl
mov
sub
mov
push
lahf
mov
jl
add
or
lret
std
inc
stos
loop
sbb
int3
mov
movsb
and
imul
xchg
pop
jne
xchg
dec
test
add
lods
je
jno
jbe
sbb
cld
fwait
push
inc
mov
xchg
rcrb
test
cmp
daa
rcll
dec
inc
push
add
sub
das
xor
loope
push
fcoms
mov
sarb
fucomi
adc
in
cs
test
outsl
cs
fdivrl
cmc
scas
mov
cwtl
lock
mov
sbb
data16
je
sbb
rclb
push
sbb
mov
add
fwait
mov
insl
adc
test
stos
call
fnstenv
popf
in
jl
in
ljmp
loop
sahf
enter
push
xchg
in
movsb
adc
jo
ja
adc
scas
test
dec
mov
shll
cs
inc
std
ds
jg
out
inc
outsb
sbbb
sbb
cmc
inc
shr
je
push
loopne
jno
cltd
mov
cmpsb
fs
pop
xor
push
xchg
fistl
shrb
filds
pop
pop
popl
stos
insl
sub
sbb
sbbl
repz
out
push
cmpsl
xchg
mov
dec
and
mov
mov
sub
or
mov
inc
rorl
cmpsb
sbb
mov
setne
push
cmp
dec
test
repnz
cvtps2pi
xor
push
mov
ja
in
and
leave
pop
enter
arpl
lods
inc
sbb
pop
push
or
call
inc
add
sub
mov
cmp
pop
jnp
jae
lcall
push
sub
shl
sub
or
push
cmpsl
cmp
scas
jns
lahf
jo,pn
push
xchg
cmp
jl
sbb
test
and
add
loopne
outsl
test
mov
push
xlat
jle
clc
aaa
in
aas
gs
jmp
push
mov
sti
push
les
push
cs
ud2
call
stc
pop
stc
jmp
xor
xchg
fistpl
push
cs
fildll
sti
xchg
addl
ret
into
fdivrl
cmpsl
adc
dec
sbb
sub
ds
ret
sub
sbbl
xchg
test
daa
sub
sarb
addb
xchg
out
test
iret
push
mov
pop
inc
push
sub
push
sbb
add
cwtl
addr16
jnp
out
cmpsb
mov
das
mov
gs
fwait
sbb
sbb
aam
xor
dec
bound
dec
data16
lods
xchg
mov
in
dec
xor
mov
das
mov
push
inc
jmp
mov
mov
jae
xchg
push
lea
inc
ror
xor
and
cmc
lds
jne
out
pop
sbb
test
lret
insb
shll
int
sub
add
jl
scas
pushf
push
and
mov
fsubr
daa
jmp
push
shrb
das
out
aam
push
sbb
les
jp
mov
enter
xchg
adc
cmp
mov
lea
mov
cwtl
popf
shl
adc
push
xchg
or
jge
or
in
jmp
xor
mov
int3
lret
lods
jnp
pop
shl
les
divl
rorb
add
repz
mov
js
insl
sarb
inc
fwait
push
pop
ffreep
mov
dec
les
lahf
xor
int
aam
add
sbb
addl
xchg
cli
push
cli
cwtl
mov
push
or
or
insb
sub
fs
inc
inc
leave
test
sub
rcrb
jmp
je
outsb
call
imul
in
dec
mov
adc
inc
sub
push
and
jle
jno
out
lock
aaa
cmp
std
imul
mov
fdivrl
flds
ja
dec
mov
movlps
dec
lret
xchg
mov
cmpsl
lcall
sarl
push
sbb
or
das
ret
cwtl
stc
in
mov
into
mov
add
jae
scas
sub
push
mov
add
out
imul
dec
loope
xchg
xor
or
fcmovnu
adc
mov
popf
inc
arpl
cmc
cli
fistps
hlt
ret
jl
add
in
dec
insb
loopne
mov
inc
int
test
aam
jp
xor
xchg
in
sub
add
lock
dec
pop
pop
test
sbb
loopne
cwtl
mov
sbb
or
nop
xchg
dec
cltd
pop
mov
repz
shll
aas
jne
or
sub
xor
nop
inc
inc
inc
sub
add
fiaddl
sbb
loope
sub
stos
add
test
out
jnp
dec
sbb
mov
lock
cmpsl
rcr
cwtl
mov
mov
lds
pop
mov
fsubrs
js
dec
aas
xchg
outsl
sbb
pop
pop
push
fbstp
jno
or
push
stos
sbb
cmp
test
and
repz
pusha
js
dec
and
movsl
pop
push
sbb
xor
pop
jno
ret
fcomip
push
sub
lock
fwait
std
and
pushf
push
adc
dec
or
pop
imul
es
lea
or
mov
push
pop
xchg
out
jmp
out
stos
out
cmp
mov
and
orb
push
xorl
inc
sbb
movsb
test
shll
cmc
mov
and
rcrl
leave
and
cs
fmuls
xor
mov
pusha
xchg
lods
add
call
ja
sbb
jge
addr16
icebp
mov
mov
sbb
mov
insl
loop
std
cmpsb
cs
sub
imul
dec
iret
cli
xchg
rcr
cwtl
push
imul
xchg
jne
xchg
cltd
pop
xlat
lret
je
test
push
sahf
mov
mov
aaa
popf
dec
mov
scas
scas
cmpsb
clc
xchg
rcrb
pop
inc
lahf
pushf
loop
xor
and
push
movsl
shrl
push
roll
xorl
dec
clc
xchg
sbb
fs
or
jmp
pop
les
dec
jnp
fisubs
aam
fidivrs
jne
fmuls
and
pusha
shlb
int
repz
or
ss
dec
imul
int3
mov
fwait
popa
inc
add
xchg
mov
lret
mov
inc
pop
ret
adc
pop
xchg
mov
outsb
adc
lea
and
jbe
imul
jns
dec
inc
je
jl
jb
and
arpl
sub
mov
fwait
dec
imul
xlat
mov
cmp
in
push
pop
xor
repz
or
nop
out
xchg
mov
mov
jg
popf
aam
cwtl
stos
cs
stos
out
insb
movsb
push
adc
adc
int
aad
outsb
inc
jl
mov
cmp
cmp
adc
out
jge
into
lcall
pop
enter
add
inc
test
dec
jbe
in
jo
fisttpl
mov
cmp
sti
je
rolb
cmp
out
lcall
fwait
and
dec
mov
sub
aaa
xor
int3
fildll
mov
add
int
push
cmc
in
ds
dec
mov
mov
xor
fnstsw
sub
pop
mov
and
icebp
xor
pushf
push
jns
or
or
sbb
fs
mov
dec
xlat
rcrl
pop
ds
sbb
or
mov
dec
fbld
jle
aam
stc
cmp
mov
insl
mov
inc
in
bound
pushf
std
sti
jnp
out
cmp
lahf
xlat
aam
daa
into
xor
push
mov
ljmp
or
je
aas
push
movsl
fsubs
push
sbb
out
loope
outsl
push
rcr
mov
cmp
xchg
div
pop
loopne
xor
daa
icebp
mov
mov
mov
inc
enter
fmuls
out
push
sbb
outsl
aaa
cmpsl
cmc
fimull
out
lock
inc
data16
xchg
add
mov
add
daa
xchg
sub
fwait
das
push
mov
dec
dec
xlat
and
jle
into
mov
sub
mov
inc
cmp
adc
fs
mov
cmp
out
jp
out
mov
das
insl
pop
push
shrb
cmc
sbb
cmp
xor
das
or
mov
dec
out
inc
xchg
int3
cwtl
js
repnz
adc
ds
nop
cmc
pusha
push
in
aad
mov
add
and
push
xchg
ds
mov
pop
pop
sub
inc
add
fisubl
inc
dec
cmp
cld
orb
rcr
xchg
jmp
push
hlt
or
push
jl
lret
cmp
loopne
dec
fdivr
in
jae
nop
pop
and
inc
fnclex
rorl
movsb
lret
enter
pop
movsl
xor
mov
scas
mov
mov
cld
sbb
stos
leave
sbb
mov
ror
inc
movsl
fadds
or
mov
sub
mov
xchg
aas
mov
mov
in
out
lret
jmp
int3
lret
fwait
pushf
pop
push
mov
pop
push
test
push
inc
cmc
dec
out
mov
icebp
adc
cltd
push
clc
jecxz
in
and
xor
faddl
pop
gs
cmp
cmp
popf
test
call
test
cmp
and
xchg
xor
and
lcall
hlt
xchg
add
and
pop
jnp
fwait
sub
sti
shlb
cmp
std
xor
pop
and
mov
jg
lods
jae
sbb
int
dec
mov
inc
sti
das
iret
or
mov
arpl
cmp
lahf
adc
movsb
ds
xchg
or
pop
js
dec
pop
daa
mov
mov
stos
pop
lods
sub
cmp
in
lret
lds
inc
rorl
sub
xchg
je
pop
bound
ret
dec
stos
xchg
sarl
ror
mov
ret
data16
pop
adc
fisttpll
scas
inc
das
outsl
cli
stos
je
and
rcl
fs
adc
aad
imul
xor
test
xchg
jbe
pop
sbb
inc
cmpsb
jg
je
jmp
and
test
dec
xchg
pop
scas
mov
loopne
jno
aaa
push
xchg
adc
inc
mov
inc
cvtps2pd
mov
fwait
dec
adc
sub
insl
xchg
fsubs
jle
subb
std
or
out
jmp
andl
sbbb
scas
fsubl
cmp
sti
popa
pop
jge
adc
movsl
lds
cmp
cmp
notl
adc
aaa
add
mov
fs
mov
movsl
incb
pop
xchg
add
into
dec
test
adc
and
mov
sarb
call
add
lret
xor
ret
iret
sub
xor
lahf
xor
xchg
inc
mov
jno
add
cmp
fstps
aas
pop
ret
push
aas
push
or
xor
jno
mov
mov
mov
xor
movsl
pop
dec
adc
push
jno
hlt
into
out
cmp
ret
cmpsl
subl
mov
insl
adc
mov
shlb
je
loopne
dec
pop
push
pop
mov
nop
mov
mov
jecxz
ss
js
pop
outsl
negb
jge
imul
pop
push
pop
sbb
sbb
push
dec
push
andb
nop
or
lods
aam
mov
lcall
push
outsb
mov
sub
jns
dec
push
bound
inc
cmp
push
sub
mov
sbb
sub
adc
xchg
push
pop
push
pusha
mov
sbb
test
xor
icebp
cmp
jle
pop
arpl
xor
les
add
sti
pop
call
or
xchg
mov
xchg
xchg
mov
fdivrs
stos
rcl
sti
fs
mov
aaa
imul
pushf
femms
loop
aaa
dec
add
test
ret
outsl
push
rorl
test
push
xchg
or
xchg
cmp
in
push
sbb
push
fsubs
cmp
arpl
stos
negl
jne
bound
mov
sub
dec
pop
ret
stc
jp
dec
movsb
jbe
push
lods
mov
cmp
push
idivl
fildl
sti
add
pusha
in
nop
xchg
mov
aad
call
nop
sbb
insb
mov
xchg
push
and
sbb
lahf
popf
add
dec
fwait
call
and
dec
rcll
data16
aam
xor
pop
add
movsl
repz
xchg
sarb
nop
loop
cmp
dec
mov
mov
sahf
push
push
jbe
cs
aas
in
cmp
bound
mov
test
scas
mov
inc
stc
jl
add
mov
jg
cmp
inc
in
loopne
std
sbb
jbe
and
ja
inc
movsl
enter
cs
outsl
mov
js
xchg
imull
push
and
out
pop
sbb
in
jb
sbb
sbb
out
lods
add
call
xlat
mov
je
fiadds
mov
mov
add
mov
xchg
or
cmp
movl
ljmp
lcall
mov
jns
inc
into
pop
inc
loope
xor
xchg
pop
dec
mov
test
mov
inc
jns
xor
pop
jne
sahf
cmp
fmuls
or
mov
stos
mov
sar
mov
enter
jge
mov
mov
lcall
pop
clc
mov
adc
cmp
jns
imul
jbe
inc
into
and
es
lea
mov
pop
call
adc
es
push
jp
movsl
or
xchg
bswap
push
fistl
call
lret
inc
jl
pop
in
add
and
xchg
sbb
jae
cmpsb
hlt
rol
lds
mov
movsb
or
xor
push
jns
dec
or
aam
mov
fwait
and
aaa
push
xorl
push
imul
mov
test
mov
stc
pop
inc
jecxz
in
stc
xchg
ja
in
icebp
push
mov
xchg
imul
call
leave
cmp
pop
adc
xor
or
mov
jmp
sbb
jno
das
mov
dec
into
inc
js
ss
imul
repnz
sbbb
mov
idivl
cmp
mov
fimuls
rcrl
dec
or
xor
dec
push
sahf
sahf
mov
sahf
mov
in
and
movsl
cli
inc
xor
jge
test
fs
pop
and
shl
inc
fcoml
out
movsl
cmp
xor
das
adcl
or
mov
xor
std
cmp
sub
cmpsb
test
or
xor
je
loopne
or
fnstenv
pop
mov
lea
aas
push
mov
lods
jb
pusha
iret
mov
in
mov
cmp
adc
int3
shll
adc
sub
hlt
adc
outsb
outsl
std
ss
ror
and
and
push
xchg
push
push
movsb
dec
xor
or
jbe
cmp
hlt
mov
cmp
mov
loop
cmp
inc
lahf
mov
xchg
push
adc
lea
cmp
mov
mov
fadds
rep
fsubl
fsubl
or
push
stc
int
cmpsl
pushf
outsb
repnz
add
cli
push
fsubrl
pop
ja
rcrl
sub
inc
stc
xchg
lret
test
push
push
addr16
fnsave
test
arpl
pop
outsb
mov
faddl
ror
fwait
pop
add
dec
lock
and
cmp
jo
fdivl
inc
shl
mov
loope
cwtl
push
mov
add
outsl
leave
loop
pushf
pop
shl
bound
adc
mov
sarl
pop
xor
outsl
fmull
nop
mov
daa
add
jb
and
mov
mov
fwait
aam
hlt
jmp
inc
fcmovbe
push
jb
cmp
aam
es
xor
test
add
fldcw
cltd
ds
or
xchg
ret
and
cmp
ja
hlt
xlat
and
mov
jle
shrl
dec
pop
outsb
lahf
imul
dec
xchg
sbb
dec
out
add
sub
xchg
adc
xchg
jo
fmull
cli
jb
mov
lods
pop
push
fnsave
or
push
add
jno
sub
mov
or
repnz
jl
inc
push
movsb
sbb
cmp
xor
xchg
xor
push
es
pop
inc
sub
ficoml
ret
lods
push
ret
sbb
or
inc
dec
cltd
xchg
sub
jge
cltd
or
in
mov
aaa
jl
loope
out
jp
jmp
mov
dec
aad
out
in
pop
mov
gs
dec
outsb
or
cmc
cmp
jae
popa
jle
inc
dec
mov
xor
xchg
fs
sub
jns
xor
repnz
xor
lea
daa
insl
or
mov
insb
adc
cmp
push
pop
testb
icebp
push
adc
mulb
push
mov
inc
fldl
stos
dec
rorb
add
and
pop
push
adc
in
push
mov
xchg
add
pop
jae
dec
pop
mov
aaa
fiaddl
jmp
das
adc
stos
sub
push
mov
pop
sub
out
fiaddl
fs
je
sbb
mulb
or
add
dec
out
pop
iret
cmpsb
or
mov
push
loop
in
loopne
sbb
sti
cmp
or
lret
sub
xor
fbstp
ret
sbb
push
aaa
frstor
sahf
or
sub
or
mov
mov
xchg
loope
xorl
stos
dec
jg
mov
in
jmp
or
lcall
pop
sbb
gs
movsb
orb
push
ret
gs
dec
fcompl
mov
jp
add
sub
inc
fiaddl
in
mov
cmp
lcall
xchg
aam
inc
sbb
mov
mov
fwait
int3
mov
pop
repnz
add
cmpsl
ja
push
mov
lahf
xor
cmp
lds
adc
arpl
in
sub
mov
aas
add
hlt
in
shlb
in
addr16
scas
fcompl
je
stos
filds
aad
iret
mov
stc
inc
add
push
jbe
out
sbb
dec
das
in
adc
icebp
adc
jb
push
mov
or
outsl
je
xchg
leave
push
rolb
xchg
mov
mov
xor
shll
cs
das
popf
cmp
je
jnp
outsb
out
push
xor
dec
loopne
int3
xchg
clc
imul
mov
int
je
std
inc
dec
and
daa
scas
adc
xchg
or
jb
add
jl
hlt
adc
je
fbld
fwait
mov
lds
out
das
jno
adc
je
loopne
jle
adc
sbb
xor
arpl
in
xchg
bound
push
pushf
cld
mov
or
xor
pop
mov
in
es
or
lret
fidivrs
mov
and
pop
and
je
das
insl
dec
dec
xor
mov
jns
sbb
lcall
inc
sub
xchg
in
imul
pop
popa
cwtl
inc
test
stc
test
and
sub
sub
sub
insb
pop
xchg
and
loop,pn
test
repz
and
and
mov
jns
xchg
sti
xor
je
jg
ret
iret
mov
xchg
loope
inc
ss
push
jae
mov
push
push
cmp
mov
popf
dec
mov
scas
cmp
xacquire
cmp
popw
or
test
cwtl
pop
mov
mov
jbe
rcr
test
rcrb
es
xor
fisubrs
and
pop
fimuls
sub
fdivrl
xor
mov
pop
insb
mov
mov
movsb
sti
adc
das
popa
push
push
adc
add
push
mov
bound
sbb
aam
fldl
push
loopne
mov
mov
jns
aas
inc
ret
shl
jae
cmp
jp
outsl
cmc
test
mov
or
and
lods
subl
jle
int
in
movsb
and
nop
xchg
mov
imul
gs
push
and
or
xor
andb
jle
cli
pop
push
icebp
popf
call
cmp
adc
jo
sti
or
jp
insl
pop
out
int3
movsb
and
xchg
and
ret
aam
into
lret
test
or
gs
movsb
xchg
push
sub
adc
mov
ror
inc
cli
xor
jb
sbb
sub
cmpsb
adc
jle
push
pop
and
cmp
test
push
xor
or
pop
pushf
pop
ja
and
daa
das
stos
aaa
xlat
in
and
aaa
jbe
xor
shrl
movsb
in
sub
adc
dec
mov
dec
and
out
mov
mov
cs
jg
mov
adc
js
pop
add
push
and
scas
push
insl
cmp
aaa
add
cwtl
cmp
lods
xchg
je
mov
mov
loopne
adc
aaa
xchg
nop
mov
cmpsl
jbe
cltd
mov
sub
sbb
cmp
in
movsl
or
pushf
adc
scas
jp
xchg
test
insl
cwtl
pop
or
adc
mov
mov
pusha
lds
ds
mov
dec
iret
xor
rorb
js
out
stos
pop
jo
jp
in
mov
test
orl
xchg
shrb
loopne
jno
rolb
arpl
les
xor
sbb
jmp
xor
or
das
xchg
lock
dec
ljmp
adc
lods
jg
add
aaa
loope
pop
jnp
or
inc
shrl
aad
test
xor
cmovnp
scas
test
sbb
ficoms
jl
pop
addr16
sub
fisubl
push
cmp
jp
out
btc
sahf
loop
xchg
sar
leave
mulb
mov
nop
cmpsb
adc
mov
out
mov
cmp
in
fwait
test
pop
js
xchg
popl
mov
xorb
mov
cmp
stc
xchg
jl
cwtl
adc
cltd
into
adc
xchg
pop
xor
push
sbb
sub
mov
and
jno
add
jl
add
dec
js
mov
cs
xor
inc
or
mov
push
movsl
test
repz
ja
or
cmp
std
clc
sbb
popa
jbe
dec
out
in
sbb
and
push
ljmp
dec
xor
and
ds
jg
or
les
mov
pop
hlt
dec
enter
aaa
mov
jg
test
sahf
sahf
pop
icebp
cwtl
iret
adc
fsubl
cmp
adc
scas
int
adc
mov
mov
adc
loop
pushf
lret
or
je
push
iret
mov
cmc
push
loop
inc
inc
jmp
clc
mov
add
movl
cld
inc
fimuls
cmp
int3
popa
pop
and
ss
repz
xlat
test
shrb
adc
imul
shlb
jb
mov
mov
mov
inc
cli
push
mov
lea
stc
in
inc
aas
shrl
adc
mov
xor
icebp
inc
fstps
or
inc
push
aas
cmp
scas
ficompl
mov
cmc
sbb
shlb
sbb
int3
cs
ja
das
aaa
push
cmc
mov
mov
stc
ss
dec
xchg
call
fldcw
dec
sbb
popa
xchg
jg
pop
or
xchg
mov
jle
dec
mov
insl
das
fsubl
dec
out
repnz
dec
sub
mov
or
ret
aad
and
frstor
jbe
js
inc
or
add
loop
jle
mov
adc
hlt
sbbb
mov
pop
dec
iret
fs
or
cmp
mov
ja
jge
or
shrb
mov
dec
int3
add
mov
dec
in
in
or
push
int
xchg
sub
or
mov
pop
ja
imull
jb
jb
or
sub
mov
nop
in
fwait
pop
sbb
ljmp
jecxz
cmpsb
insl
fs
rolb
bound
ret
sub
or
sub
and
sub
sub
mov
fisubs
les
movsb
mov
dec
dec
rorb
es
fstl
mov
sbb
lcall
inc
sub
mov
mov
cwtl
or
lret
test
ds
rorl
push
sub
movsl
in
sub
mov
mov
ror
loopne
xor
cmp
ljmp
pop
clc
add
mov
js
sbb
dec
dec
add
pushf
dec
addl
fcomi
add
xchg
ljmp
scas
xchg
inc
in
lret
icebp
pop
insl
jl
and
hlt
addr16
mov
jle
in
loope
adc
dec
in
shlb
loop
mov
jmp
xchg
xchg
push
sbb
mov
sarb
push
fimuls
xor
mov
mov
add
cmp
cmp
dec
cmpsl
xchg
mov
inc
dec
mov
call
jns
int3
mov
or
cld
fmuls
sub
pop
shlb
iret
sbb
inc
mov
out
xchg
out
sbb
pop
push
mov
rolb
gs
ret
sbb
or
das
adc
test
xchg
cmp
lcall
mov
inc
pop
pop
ret
sti
add
and
in
iretw
daa
push
out
rolb
mov
insl
lock
jnp
mov
xor
xor
lcall
push
into
sbb
mov
mov
repz
add
jo
cmp
aas
das
cmp
adc
mov
jmp
dec
add
int3
cmp
cli
pushf
js
dec
push
ljmp
mov
enter
cltd
outsw
and
scas
xchg
sbb
xchg
push
add
in
sar
int3
sbb
mov
shlb
jl
sbb
inc
and
dec
mov
les
jp
sub
clc
sbb
adc
into
pop
xchg
ss
cmp
arpl
add
xchg
es
test
cmp
jnp
add
sbb
ss
xchg
clc
mov
jno
xchg
pop
push
imul
test
sbb
push
cmpsl
cwtl
sbb
add
adc
mov
stos
adc
cmp
cmpsl
in
iret
in
push
testb
mov
call
mov
pop
cmc
cmp
inc
jmp
incl
rcrb
push
mov
inc
pop
pop
mov
cmp
jae
xlat
test
les
push
sub
jno
inc
popf
adc
mov
test
inc
les
stos
mov
or
xor
dec
arpl
push
xor
push
dec
std
out
out
lods
pop
cmpsb
scas
push
sysexit
std
je
fiaddl
dec
mov
cmc
notb
in
pop
push
mov
dec
jb
push
clc
aas
dec
lods
xor
insb
outsb
cmpb
dec
sub
pop
adc
test
add
lods
les
mov
in
inc
mov
sbb
mov
loop
das
push
pop
adc
xchg
dec
sub
ret
popa
adc
loop
cli
loope
test
xor
add
jl
clc
jae
cmp
xchg
sarb
stos
inc
mov
out
mov
mov
sub
movsl
mov
dec
cs
add
mov
mov
jg
hlt
add
sbb
xchg
mov
fs
jo
out
data16
xor
or
les
outsb
jbe
nop
pop
push
leave
push
cmp
nop
hlt
jae
in
scas
sub
pop
gs
xchg
icebp
repz
stos
insb
mov
push
mov
stc
mov
ret
add
sahf
mov
push
fdivrs
push
inc
out
mov
mov
icebp
sbb
outsb
add
xor
jb
lock
add
lret
enter
cmpsl
lret
popa
add
loop
insl
sbb
jmp
ficomps
jbe
sbb
lret
cmp
in
jnp
cmp
test
into
lret
add
mov
push
js
cs
outsb
mov
js
imul
pop
insl
aam
aaa
in
fwait
cmc
inc
fsubr
shrb
dec
mov
gs
pop
nop
in
mov
xchg
outsb
xchg
lds
mov
repnz
mov
mov
mov
fbstp
and
cmpsl
repnz
jp
repnz
xchg
loope
shll
and
lahf
lods
sub
sti
rcrb
sbb
xlat
js
cmp
sub
cwtl
adc
in
mov
int
add
dec
aaa
xchg
sbb
jnp
inc
jmp
cmc
push
out
int3
out
xchg
inc
add
or
mov
mov
mov
fsubr
mov
into
adc
mov
in
push
fdivr
aaa
push
mov
aam
aas
jmp
sub
loopne
pop
fucomip
jns
data16
loop
jle
jp
mov
pop
dec
ljmp
adc
push
jl,pt
cmc
dec
cmc
adc
push
int3
adc
cmpsb
cltd
cli
ret
pop
loope
lahf
adc
mov
or
push
jmp
imul
sbb
jne
fstpl
and
lcall
inc
xchg
imul
jge
insl
xchg
insl
xchg
mov
pop
ja
dec
mov
js
inc
inc
mov
add
icebp
mov
sbb
dec
xchg
cmpsb
loopne
subb
repz
pop
mov
les
inc
div
xchg
xchg
jno
cmp
test
xchg
out
call
or
push
jmp
jb
and
pop
in
push
pushf
jmp
push
add
das
dec
or
stos
ret
fnstcw
pop
scas
outsb
or
inc
fisttpl
aam
or
xor
movsl
sahf
push
mov
lock
cmpsb
sbb
push
jb
ljmp
testl
scas
xor
xchg
push
sub
xchg
pop
out
xchg
sbb
add
and
test
xchg
outsl
sub
subb
enter
or
mov
js
js
pop
adc
mov
inc
cmp
pop
pop
sti
dec
xchg
mov
cmp
sbb
mov
adc
test
movq
xchg
sub
push
xchg
leave
mov
push
fdivrp
scas
push
scas
movl
inc
js
repnz
jbe
mov
and
subb
xchg
and
pop
mov
out
fucomip
and
jno
jnp
xchg
pop
xchg
cld
pop
sub
pop
pop
add
mov
adc
mov
movq
cltd
movb
imul
cld
pushf
inc
cmp
mov
mov
adcl
aas
jle
lret
inc
pop
repz
mov
push
ja
out
jbe
out
addb
aaa
in
adcl
ror
cld
jnp
push
pop
adc
jle
loop
mov
add
dec
add
cmpl
jg
push
divb
dec
int
sbb
mov
mov
in
js
aam
lods
inc
pop
fldcw
or
adc
inc
push
insb
and
inc
imul
xchg
sub
es
pop
shrl
or
jne
xor
xor
dec
mov
xchg
jp
pop
shlb
push
call
in
clc
and
aad
imul
xchg
xchg
and
adc
js
jno
fucomp
in
push
cmp
out
shl
call
loope
xchg
pop
mov
pushl
dec
cmp
aad
cwtl
pusha
sub
lds
jne
jo
sub
ret
lods
lahf
mov
ret
cmpsb
movsb
aas
lock
ja
inc
fmul
mov
pop
push
xor
pusha
or
cmp
and
and
and
adc
push
mov
ds
rorb
lds
add
jle
or
fwait
jbe
cmpb
sahf
arpl
hlt
arpl
jecxz
nop
ljmp
test
inc
adc
sbb
gs
cmp
inc
mov
jno
in
je
push
insl
imul
insl
jns
add
and
out
jle
test
sbb
jo
or
cmp
aam
adc
mov
jecxz
dec
dec
loopne
das
hlt
popf
pop
xor
xor
jae
inc
add
sbb
mov
sti
mov
ja
xor
adc
push
das
sarb
test
js
add
mov
in
jl
sete
mov
daa
fstps
mov
jb
sbb
or
ret
imul
mov
xchg
cmpsb
ja
sub
insl
cld
cmc
dec
adc
pop
movsb
sbb
loopne
push
dec
in
dec
imul
pop
jmp
ja
jno
cmp
leave
jbe
push
lahf
sub
jge
cld
cmp
xchg
mov
jns
daa
and
inc
in
sub
inc
mov
jne
repnz
inc
lret
addr16
pop
xchg
jb
dec
xlat
int3
std
loopne
xchg
cwtl
xor
mov
xchg
pop
push
mov
addr16
sbb
xor
pop
xchg
aas
jmp
or
sub
cmp
fwait
cwtl
out
and
dec
lret
aam
and
out
cli
jmp
mov
inc
fildl
xor
pusha
push
fidivrs
xor
push
mov
aaa
dec
pop
mov
mov
xor
loop
scas
fisubrs
ss
call
mov
cmp
pop
loopne
and
xchg
mov
adc
dec
rorl
les
repz
shll
xlat
out
mov
pop
pop
xor
fisubrl
das
xlat
and
mov
jge
jnp
cli
xchg
push
rclb
out
add
movsl
inc
inc
xchg
hlt
daa
add
xchg
cld
inc
jg
add
xchg
push
jl
or
sub
sbb
or
leave
add
jmp
xor
xor
add
and
subb
push
fstpl
pop
dec
cmpl
stc
fs
jae
pop
enter
cmp
nop
in
mov
adc
push
jo
dec
sub
or
imul
mov
xchg
add
negb
jge
xchg
xor
call
aad
dec
or
push
inc
mov
popf
std
fcomps
dec
fldcw
nop
and
and
push
inc
cmp
cmpsl
je
movsl
push
lea
fisubrs
dec
shrb
xlat
enter
in
pop
xor
test
sub
std
test
sub
mov
in
orl
adc
ficomps
pop
pop
movsb
lds
ljmp
ss
xchg
or
leave
scas
out
mov
std
mov
push
shlb
inc
cwtl
jae
xchg
xchg
mov
dec
std
insl
cmp
jbe
fisubs
inc
xor
ljmp
and
sub
mov
mov
popf
cmp
jb
sbb
bswap
outsl
push
scas
lds
xchg
push
and
inc
jbe
dec
cmp
jecxz
cmp
es
imul
lret
in
jl
push
int
mov
mull
lds
std
xchg
pop
cmp
stos
jb
lret
aaa
xchg
sub
clc
push
and
dec
push
insb
sub
gs
jl
imul
int3
cmp
cmp
mov
std
dec
cmp
lods
push
rorl
add
test
jle
lock
mov
adc
and
dec
je
xchg
or
clc
dec
mov
cmp
or
adc
lret
insl
sbb
and
lret
xor
lock
mov
adc
inc
jbe
push
xchg
mov
sub
dec
cld
loop
xchg
fistpl
adc
add
test
sub
or
inc
xor
pop
int3
ja
jb
stos
loopne
mov
and
pop
imul
push
xchg
imul
mov
test
mulb
sbb
adc
faddp
int
mov
push
fstpl
in
pop
dec
xchg
mov
faddp
xorl
sbbl
sahf
loop
jae
ret
negb
imul
xor
jo
add
fldl
mov
fwait
push
adc
pop
xchg
sbb
test
sbb
pop
ja
sbb
cmpsb
inc
cwtl
rcll
mov
xchg
push
repnz
sub
out
jnp
jne
fld
and
movb
adc
push
inc
imul
inc
imul
cmp
or
iret
inc
xchg
into
inc
lahf
dec
mov
sub
add
aaa
xchg
lds
addr16
or
idivb
js
mov
fdivrl
clc
mov
adc
shl
sbb
ja
sub
adc
mov
add
push
inc
sub
fstp
lds
sub
idivb
outsb
dec
mov
lock
test
pop
sub
mov
pop
pushw
sub
in
xor
roll
adc
incl
fcmove
and
mov
test
and
jp
iret
push
out
xor
jne
sub
fucomp
and
out
movsl
rcrl
inc
fcomps
int3
testb
jne
mov
aad
jnp
cmpsl
mov
dec
push
pop
ja
inc
inc
popa
fldl
xchg
sub
dec
inc
xor
mov
lea
xchg
inc
lods
fcompl
mov
inc
pusha
cmp
cmp
and
or
xchg
cmc
pop
jnp
fs
dec
jo,pt
std
mov
mov
sbb
and
repz
imul
inc
dec
or
mov
push
outsl
fdivrs
push
dec
fcomp
xchg
mov
fucomi
shlb
out
jbe
lret
add
adc
fiaddl
sbb
sbb
insb
bound
adc
adc
into
imul
xor
dec
cmp
push
or
sub
cmpsl
jle
cwtl
push
das
mov
jecxz
insl
pop
pop
cmp
incl
out
xor
push
outsl
mov
clc
repz
and
insb
jp
scas
pop
dec
aas
add
sub
rolb
fstpl
push
sub
fwait
fwait
cmp
into
jge
int
push
sub
push
xchg
cmpsb
xchg
mov
aam
fnsave
mov
fisubs
mov
lods
adc
pusha
sub
jb
imul
mov
xchg
xchg
lods
call
dec
sub
lods
aad
jo
cwtl
out
jbe
js
fildl
xchg
sub
cmp
mov
xlat
jns
aam
sbb
ja
ja
es
jmp
mov
out
add
cli
add
call
test
sub
ret
pop
sbb
mov
adc
fwait
mov
dec
stc
xor
pop
push
mov
fldt
fildll
std
mov
lods
mov
clc
pop
adc
rclb
scas
dec
inc
adc
push
mov
add
loop
jmp
xchg
mov
and
lcall
and
lods
sbb
mov
mov
adc
dec
push
notl
out
imul
ret
out
sbbl
ja
inc
add
inc
mov
pop
imul
lahf
fmuls
pop
int3
into
pop
fdivrl
sbb
add
mov
cmp
mov
enter
xchg
dec
aas
or
negl
frstor
aam
incb
data16
gs
push
inc
fwait
xlat
xchg
xchg
iret
mov
xor
bound
in
dec
lods
mov
repnz
cmp
add
jns
pop
lock
mov
jb
divps
mov
and
add
test
dec
insl
je
sub
enter
jecxz
add
dec
or
fstps
push
push
dec
xadd
lea
xor
or
ss
gs
push
pop
xlat
out
dec
fstpt
ja
xor
jb
jmp
mov
mov
lret
mov
cmp
scas
out
test
leave
xchg
icebp
cmp
jno
scas
into
sbb
push
idiv
pop
mov
stc
clc
and
enter
push
jo
jne
dec
jb
xchg
pop
in
test
iret
pop
sub
mov
push
xor
push
pushf
xchg
or
dec
into
jne
test
icebp
movsl
and
jge
mov
popf
dec
test
mov
popa
lods
pop
and
add
mov
lea
fstp
lods
mov
fidivs
filds
dec
pushf
jg
mov
in
push
aad
out
repz
outsb
cmpsl
rorl
jno
dec
les
ja
scas
pop
pushf
int3
push
aam
jmp
sbb
lock
pop
cld
and
ret
sub
xorl
sbb
mov
sahf
jae
dec
stc
and
mov
mov
ret
das
mov
and
ss
push
rol
cmp
sbb
out
aaa
dec
subb
pusha
lock
mov
out
add
jg
and
xchg
or
pop
les
pcmpgtw
pop
mov
jp
fnstsw
ds
cmp
mov
inc
sub
sub
pop
mov
cli
cli
push
xchg
ja
and
cmpsb
pop
inc
icebp
rcrl
rcll
xchg
insb
adc
mov
test
jno
cld
lcall
jecxz
jmp
fs
mov
fs
xchg
cmp
or
xlat
in
sbb
sub
fisttps
vmfunc
inc
inc
test
movsb
sub
movsb
mov
aaa
test
ficoms
arpl
and
repz
in
jmp
jmp
pop
repnz
dec
shl
out
scas
adc
jge
push
sub
imulb
push
dec
sub
push
ror
out
dec
push
or
xor
push
sbb
pop
daa
dec
fdivs
shrl
mov
mov
movsb
shrb
sub
pusha
sub
push
cld
decb
or
sub
adc
jle
shll
mov
sti
dec
dec
fnstcw
arpl
out
ret
clc
and
fwait
xchg
mov
imul
shrl
adc
in
aas
dec
sbb
imul
sbb
jno
dec
jno
movb
sti
loope
shlb
icebp
dec
jmp
es
repz
xor
in
cmp
pop
cld
cmpsb
insl
pop
cmp
xchg
fdivrl
mov
adc
movsb
out
jge
cs
mov
or
out
or
jle
inc
leave
push
adc
and
les
xorl
xchg
out
mov
arpl
ljmp
and
not
cmp
es
addl
roll
add
mulb
jecxz
popa
stos
or
stos
test
jmp
push
into
jb
or
outsb
xlat
push
mov
sti
test
rcll
sahf
lret
push
adc
sbb
lea
ljmp
jg
jg
movsl
popa
jmp
in
xor
test
je
dec
jns
or
hlt
sub
dec
aad
mov
shll
inc
aas
imul
jnp
dec
lret
stc
xchg
aad
pushf
ret
nop
pop
lods
sbb
aaa
cmpsb
adc
mov
lods
jecxz
fildll
pushf
ds
cmpsb
pop
in
aam
xor
lahf
loop
sub
outsl
push
pop
fdivp
sbbl
ficoms
and
hlt
scas
xchg
fucomi
addr16
inc
adc
jge
loopne
pop
xchg
cmp
lods
or
outsl
sahf
inc
jmp
mov
inc
xchg
cmpb
loope
in
jae
dec
pop
dec
dec
jecxz
fistpl
cmp
sbb
push
dec
jmp
sub
mov
xchg
nop
xchg
mov
orb
pop
xor
shll
popf
mov
fsubl
xchg
cmp
into
dec
adc
dec
movsl
in
add
data16
and
or
sbb
jne
jnp
cs
int
pop
pusha
push
jae
fcoms
icebp
cmp
xchg
pop
pushf
adc
add
cmp
lahf
dec
dec
pop
aam
xchg
jecxz
fistpll
stos
and
cmpsl
shlb
das
pop
mov
out
jb
hlt
fdiv
shll
mov
pop
jns
mov
push
inc
xor
mov
pop
inc
aaa
sub
dec
cmc
and
and
icebp
mov
dec
sti
jnp
push
aam
cli
sbb
scas
cltd
xchg
std
js
lods
fcmovbe
xchg
subb
arpl
sub
movl
cld
ljmp
int
sbb
jbe
notl
mov
enter
out
cmp
out
icebp
push
add
jmp
push
in
mov
dec
inc
inc
pop
je
push
and
in
fs
imul
arpl
ds
sbb
cwtl
aaa
and
sub
iret
ds
addr16
pop
adc
addr16
icebp
or
mov
cmp
sub
addb
int3
repnz
dec
jns
ret
loope
out
popf
pop
mov
xchg
cmp
pop
xor
fsubp
mov
and
jns
fldcw
cmpsl
rcrb
dec
add
aad
mov
fstpl
loope
mov
cld
iret
pop
dec
pop
shlb
ffree
out
sbb
inc
shl
scas
lret
cmp
aaa
cmp
pop
testb
lds
rclb
jbe
mov
or
lock
enter
pop
jecxz
daa
fcmove
pop
xchg
hlt
scas
cmp
add
test
mov
push
cmp
mov
out
cld
imul
test
fildll
stc
in
addl
jl
movsb
sbb
sahf
or
and
paddusw
sub
aaa
inc
in
lahf
lock
mov
pusha
fwait
roll
adc
lcall
dec
or
push
mov
in
or
and
mov
dec
pop
fcompl
push
dec
ret
repz
mov
sbb
mov
xor
push
shrb
sub
and
ljmp
jl
add
out
mov
push
cmpb
pop
jl
aad
jmp
mov
int
mov
inc
jle
add
pop
mov
mov
cmc
lcall
cltd
xchg
push
repnz
sub
mov
ret
xchg
mov
dec
adcb
out
ljmp
or
shl
mov
mov
mov
sbb
cmpsl
and
fcmovne
test
pop
loop
lds
mov
ds
cli
sahf
and
jecxz
and
sub
pusha
sbb
cmp
sub
test
pop
imul
jb
jmp
repz
int3
fcompl
outsb
test
xlat
loope
push
or
repz
bound
jbe
mov
sbb
sahf
in
dec
mov
fdivs
xchg
push
jp
sub
psubq
ret
stos
mov
stos
sbb
in
decb
outsb
push
rolb
les
push
add
imul
cmp
popf
mov
pop
bound
sub
mov
shlb
int
sti
adc
lock
lds
mov
and
mov
lods
outsb
orb
bound
xor
add
into
mov
push
mov
pop
mov
fidivs
xor
out
jg
add
in
bound
add
sarb
sub
mov
shlb
push
in
xchg
xchg
sbb
js
or
mov
mov
pop
xchg
mov
sbb
scas
shr
repnz
nop
es
xchg
imul
jp
push
or
jp
shll
jnp
sub
add
jbe
icebp
jns
mov
dec
imul
shr
pusha
shlb
dec
xor
pop
ds
push
test
or
sbb
jp
push
or
adc
and
and
sbb
daa
dec
andb
or
fxch
xor
xchg
push
and
addb
je
lret
jg
fnstcw
jno
addr16
mov
sbb
loopne
xchg
jns
sub
fimull
js
jae
push
mov
decl
and
scas
repz
xor
test
or
jns
mov
and
sar
adc
hlt
iret
mov
aad
fstl
push
movsl
cmp
outsb
jmp
stos
inc
push
and
imul
push
jp
mov
mov
icebp
popf
shll
fs
std
in
nop
sbb
adc
xchg
mov
pop
popa
mov
movsb
in
icebp
sub
leave
cmp
test
dec
inc
inc
add
push
fucom
sar
or
outsl
enter
ljmp
out
xchg
xor
push
push
mov
loop
xchg
cli
adc
divl
pushf
mov
pop
cmp
cmp
test
rcr
cli
ja
out
in
mov
mov
or
iret
scas
and
and
mov
xchg
bound
pop
mov
test
cmp
arpl
insb
xor
mov
dec
cmp
arpl
cmc
fstl
push
add
inc
loop
sbb
sbb
and
repz
test
cld
mov
and
inc
mov
cld
je
jne
and
inc
cmp
xchg
push
dec
int3
call
and
pop
in
cmp
outsb
sub
cmp
cld
aaa
out
push
jns
sub
adc
mov
xor
and
lods
aas
pop
push
dec
push
xchg
or
mov
rcrl
mov
mov
cmc
shrb
repz
lcall
cwtl
std
and
inc
neg
adc
cmp
jo
lcall
in
push
loope
xor
mov
es
add
xchg
sub
pop
add
out
fsubl
push
negl
sub
push
lret
add
sbbl
cmp
into
mov
inc
in
loope
and
stos
jno
iret
sub
xor
mov
aas
or
leave
xchg
pop
enter
mov
es
and
mov
clc
gs
rorb
pop
cli
add
push
cltd
stos
and
andl
lret
clc
cli
cmpsw
fs
rolb
arpl
andl
in
daa
jmp
sub
push
jmp
es
cmp
addr16
nop
scas
mov
loope
lcall
add
or
mov
inc
jns
pop
fcompl
jo
test
fwait
pushf
xchg
pop
or
inc
xchg
jns
lahf
insl
cwtl
lahf
xchg
sbb
test
mov
gs
push
lds
out
sub
addr16
cmp
dec
ja
add
in
int
and
cltd
aam
sub
mov
popa
cmp
fisubs
push
xlat
mov
imul
jne
sarl
sub
push
lret
sahf
dec
pusha
pop
push
mov
cmp
adc
inc
shll
in
pop
jg
mov
nop
push
mov
sub
pushf
rclb
sub
repnz
pushf
sub
cmp
mov
xchg
popa
vmovlps
jb
std
int
movsb
cmpsb
pop
pop
in
mov
addr16
ret
or
mov
xor
je
mov
imul
icebp
les
orb
xor
mov
daa
out
fiaddl
adc
jno
notb
lods
mov
and
rcrb
je
adc
mov
in
or
xchg
cwtl
rol
adc
addb
pop
orl
in
ja
out
xchg
push
out
sbb
mulps
add
adc
fdivrs
adc
out
mov
jae
push
xor
hlt
pop
mov
in
jae
in
xchg
xor
pop
pusha
decl
jg
sbb
sbb
jns
pop
test
sbb
rcpps
jo
and
or
adc
std
clc
pusha
ds
loope
test
insb
sub
addr16
imul
xchg
mov
data16
ffree
jnp
inc
dec
iret
lahf
insl
cmp
cmc
out
sbb
mov
xor
hlt
pop
lahf
sbb
dec
add
xchg
mov
mov
mov
in
sar
inc
cmp
rorl
movsb
inc
jl
shrb
sbb
dec
stos
lsl
loop
inc
pop
pop
int
inc
push
add
stc
test
jo
pop
jge
mov
repz
divb
cwtd
lcall
daa
lock
movsl
movsb
xchg
test
lret
js
ret
xchg
imul
push
add
or
cmpsl
rcrb
js
mov
dec
and
movsb
dec
add
loop
xchg
add
loopne
lcall
adc
repnz
stc
incb
pop
push
cmp
dec
or
push
arpl
mov
cwtl
dec
adc
shll
int3
addr16
jnp
mov
or
test
jmp
mov
out
cli
loop
and
insl
loope
dec
jno
sub
jb
adc
pop
jge
movb
test
pop
repnz
push
mov
int3
imul
mov
cld
ret
jmp
fdivl
stc
cmp
hlt
jle
pop
sub
sub
push
mov
scas
out
add
lahf
adc
sbb
push
rclb
sbb
adc
push
leave
jne
sti
push
test
fsubl
mov
pop
push
xor
pop
sbb
push
jbe
mov
push
repnz
into
aaa
jae
dec
mov
jle
out
in
rol
pusha
xchg
subb
pushl
imul
ja
xor
mov
xor
pop
cli
in
add
jbe
or
negb
addr16
mov
mov
pop
clc
test
or
movsl
sub
fbstp
dec
and
vcvtdq2pd
xchg
add
xchg
xor
and
stos
or
lods
xchg
aam
jno
add
pusha
fisttpl
clc
jecxz
xchg
mov
push
xchg
cmp
int
sub
cld
dec
lods
mul
or
sbb
mov
xchg
or
jp
mov
sub
cmp
js
ja
loope
pop
cmp
shrl
test
es
incl
cltd
cmp
jno
nop
aad
mov
push
mov
sti
mov
sub
clc
mov
xor
push
std
and
add
xor
in
mov
lahf
jb,pt
ret
sti
push
or
mov
mov
cwtl
inc
shrb
shll
jns
push
sbb
dec
icebp
stc
jge
out
int3
imul
popa
loopne
xchg
out
pop
xor
mov
mov
and
fidivrs
iret
out
stc
into
mov
mov
pop
enter
es
sub
in
add
mov
xchg
in
cmc
jp
fimull
incl
test
pop
sub
js
xor
add
cmp
insb
push
int
test
sbb
push
jmp
icebp
popf
mov
inc
mov
fstpt
jae
addr16
test
or
call
in
push
out
lahf
sahf
dec
ja
push
les
sbb
insb
pop
jae
inc
xchg
icebp
int
loopne
sub
imul
out
mov
and
xchg
bound
pop
aad
sbb
stos
sbb
cmp
jne
inc
pop
add
shlb
lods
push
fs
into
adc
hlt
xchg
and
mov
xorl
or
jl
scas
pushl
cmp
js
int3
popa
mov
xor
sbb
mov
dec
fsubrl
sarl
push
and
hlt
pop
cmp
xchg
push
and
or
dec
xor
mov
mov
fcom
pop
push
enter
ret
sub
or
cmpsl
push
cli
ds
push
mov
enter
outsl
dec
das
pop
mov
add
cmp
mov
jge
adc
push
addl
loope
adc
mov
test
push
popa
add
dec
test
cmp
push
xchg
push
loop
inc
mov
lret
or
sub
jne
sub
mov
rcrl
jnp
add
cmp
push
shll
jo
xchg
in
sbb
or
ljmp
mov
scas
dec
push
lds
popf
gs
cs
aas
jle
hlt
pop
test
js
lock
adc
push
imul
sub
fisubs
inc
mov
sbb
jae
inc
popf
push
mov
les
outsl
mov
insb
inc
lahf
add
cmp
icebp
add
push
enter
sahf
lods
js
out
or
fldl
stos
sub
xchg
stc
xchg
or
cmp
ds
ret
cmpsl
mov
test
fidivrl
jmp
mov
pop
in
inc
pop
push
and
mov
mov
insb
xorb
lods
jns
pop
mov
loope
push
insb
addr16
lahf
subl
cmp
icebp
mov
js
scas
sub
xorl
add
in
mov
out
ss
cld
push
jae
lea
loope
jbe
mov
push
loopne
jg
out
cltd
push
je
call
jle
in
pop
add
loopne
add
mov
js
rcrb
push
add
push
xchg
ja
pop
dec
out
fidivrl
adc
pop
add
out
into
int3
mov
out
cld
pop
xor
and
insb
iret
stos
popf
test
rorb
push
pop
sahf
pushl
cmp
bound
jbe
jns
add
rolb
ret
repz
cli
mov
into
inc
outsb
mov
pop
shlb
push
inc
int3
dec
pop
xchg
aas
sub
jb
jg
ret
into
jno
add
pop
insl
push
rorl
fwait
rorb
jb
fldt
jl
pop
inc
lds
fcompl
adc
outsb
cmpsb
popa
dec
out
dec
iret
cs
push
outsl
sub
fidivrs
test
adc
das
push
scas
jbe
ja
add
mov
xchg
ror
lret
or
fadd
out
scas
pop
mov
or
cmp
push
lret
sbb
std
xor
popf
call
adc
test
daa
ret
mov
push
mov
sbb
mov
push
loope
push
xchg
add
xchg
daa
xchg
mov
jle
mov
imul
out
mov
cltd
push
popa
xor
inc
stos
sbb
or
std
fidivs
adc
loopne
mov
add
cld
and
sarb
inc
push
jmp
and
pop
mov
lea
push
lds
pop
fstps
sarl
dec
mov
stc
sub
lock
les
and
jl
stos
pop
mov
cld
mov
jo
push
popf
sbb
cwtl
sbb
movsl
clc
ret
mov
fstp
and
add
add
sub
inc
mov
aas
gs
lds
sub
pop
cmp
add
sub
pusha
jle
shlb
cmpsb
or
int
add
int
pop
std
stos
fcmove
and
sbb
insb
jl
push
into
mov
and
cs
aaa
lds
out
push
cmpsl
jmp
mov
lods
movsb
cld
jecxz
mov
hlt
outsl
fcoml
bound
clc
int
inc
or
addl
iret
add
fadds
xchg
pushf
insl
out
push
es
cltd
and
jge
and
sbb
outsb
rorb
cmp
jg
fstl
xor
jmp
push
movsl
movl
shrb
lcall
loopne
scas
inc
pop
fwait
xor
xor
and
ds
dec
fwait
jmp
test
xchg
and
repz
jmp
pop
push
orb
mov
inc
cmp
aam
jne
out
pop
aam
sbb
mov
insl
mov
xchg
repz
pop
push
lods
pop
mov
jg
scas
sub
pop
insl
xor
mov
lock
or
dec
mov
sbb
test
popa
pop
mov
repnz
aad
dec
orb
int3
ljmp
mov
fidivl
fnsave
fstpt
in
test
in
repz
cs
push
stos
je
movsl
outsb
loop
dec
jne
shrl
rolb
mov
call
and
push
mov
decl
mov
add
stos
in
lahf
xor
aaa
iret
and
ret
subb
mov
rclb
mov
xchg
dec
imul
pop
jecxz
bound
ficomps
dec
les
mov
in
add
jae
cmc
in
aad
lret
dec
cmp
popf
jmp
ljmp
and
into
dec
out
sbb
imul
xchg
and
mov
push
leave
adc
sbb
xchg
int
lds
test
rdpmc
pop
mov
loopne
idivl
pop
pusha
mov
adc
adc
das
test
fadd
dec
sbb
or
fs
cs
cmp
jl
or
mov
pop
stos
es
test
ficoms
bound
sahf
scas
shrb
add
movsl
xor
adc
xchg
andl
mov
mov
add
clc
pop
in
mov
in
inc
sub
lock
cli
popf
pop
iret
push
gs
fwait
lods
push
and
fldt
adc
dec
sub
sub
fbld
lods
sub
push
rorl
es
mov
push
jecxz
fstps
pop
lahf
xchg
mov
loop
mov
and
fstp
into
pop
jbe
lret
lahf
mov
js
pop
enter
mov
lcall
test
cmp
xor
dec
test
cmc
outsb
incb
loope
and
les
push
mov
jae
push
jmp
pop
insl
cmp
mov
mov
icebp
in
inc
and
dec
mov
push
mov
xor
movb
pop
pop
mov
sub
dec
movsb
mov
and
popf
inc
mov
out
dec
push
xlat
sub
sub
popl
es
shll
and
sub
sarb
cwtl
dec
fcoml
mov
outsb
clc
enter
and
aam
xchg
sbb
icebp
cld
loopne
or
push
cwtl
rclb
movsl
cwtl
dec
jecxz
mov
insb
add
ljmp
cmp
xchg
pushf
int
jle
ds
rcrl
push
js
push
sbb
adc
ret
fisttps
test
insl
mov
fists
pop
repz
xchg
fwait
sbb
daa
jmp
xor
lahf
adc
mov
ja
das
mov
shl
lds
xchg
fists
rolb
bound
pop
loop
test
mov
sti
adc
mov
repnz
out
mov
in
aam
mov
sub
out
mov
out
into
xlat
jg
push
pop
and
and
test
sub
push
mov
sahf
mov
cwtl
mov
jno
mov
cmp
jle
mov
pop
inc
cld
loope
push
ljmp
push
mov
subb
pop
int
pusha
dec
popf
push
sub
push
dec
aad
mov
int
add
lahf
repnz
inc
pop
push
adc
sbb
mov
xlat
mov
lcall
icebp
xchg
repz
sbb
sub
sub
cld
fbstp
jns
mov
stos
jg
mov
shlb
sahf
inc
inc
pop
push
aam
cmp
gs
rol
mov
mov
ucomiss
jl
xor
xchg
daa
xchg
inc
dec
push
cld
adc
sbb
gs
ret
jp
jge
and
push
jnp
aad
push
adc
and
adc
sbb
push
iret
in
cmp
jae
mov
sti
out
scas
push
xchg
cs
jns
xor
xor
stos
xchg
and
ret
movl
cmp
adc
notb
inc
xchg
xor
pop
xor
inc
dec
insl
je
and
and
mov
lods
cmp
and
loop
jns
mov
sub
mov
xor
stos
fcompl
jns
test
pop
xchg
add
mov
mov
xchg
cmp
test
fwait
xor
sbb
mov
lea
dec
mov
sub
ja
lret
push
repnz
stos
fnstcw
insl
pop
mov
xlat
add
loope
iret
fisubrs
and
imul
pop
pop
std
pop
cmpsl
push
jns
mov
repz
mov
add
push
jle
mov
add
aas
stos
movsb
cwtl
mov
mov
pop
mul
cltd
push
jno,pt
and
fcompl
mov
push
lea
mov
jbe
in
jno
gs
xchg
dec
std
push
ss
push
jge
in
cmp
fcompl
xchg
arpl
xlat
in
or
repz
test
mov
sarb
or
sub
mov
sbbb
and
cmc
test
psubusb
movsb
mov
test
sub
push
mov
mov
and
mov
outsb
loop
or
xchg
add
pusha
xor
ret
jbe
loopne
lods
leave
in
in
push
in
inc
or
add
imulb
in
fisubrs
sbb
test
data16
push
xchg
mov
adc
test
insb
aam
mov
inc
cmp
add
test
in
sub
ret
test
lds
addl
cmp
cmpl
je
inc
push
push
aas
mov
data16
and
or
dec
push
push
inc
in
push
dec
adc
add
and
test
and
aad
mov
rorl
negl
sbb
jmp
loope
je
add
and
mov
xor
mov
sbb
call
sbb
test
stos
mov
jp
stos
jp
ret
out
sbb
test
or
push
jne
xor
inc
jecxz
hlt
scas
adc
dec
xor
addr16
sete
test
test
push
das
test
aam
xorl
add
pop
push
fildll
push
dec
push
lea
add
add
stos
xchg
mov
dec
mov
mov
inc
xchg
mov
movsl
mov
jo
cmp
adc
mov
adc
jp
in
pxor
mov
repz
lret
jle
xor
mov
dec
mov
add
sub
xchg
fdivs
fistl
stos
cmpsb
movsb
inc
sar
jno
xchg
adc
repnz
add
inc
xchg
pop
mov
lahf
push
push
insb
sub
push
jb
addb
adcb
xor
ret
pop
xor
xor
jno
mov
je
jae,pt
mov
mov
inc
mov
jmp
lret
inc
push
ret
xor
jecxz
sub
pusha
cmp
fcomps
xor
mov
pop
dec
mov
mov
je
or
mov
cli
out
movsb
ret
movsb
jmp
mov
cmp
jle
jl
mov
comiss
addr16
insb
jne
xchg
xor
shll
jmp
mov
xor
out
adc
and
lock
dec
cmp
xchg
scas
repz
jb
dec
fcmovnb
lods
push
pop
cli
loop
stc
fs
into
call
neg
inc
mov
xor
adc
sbb
mov
xor
stos
bound
jmp
movsb
gs
xor
dec
hlt
mov
ljmp
xorb
dec
pop
popf
ss
sub
push
mov
fld
dec
lahf
jle
or
shll
psubq
jp
js
ss
xchg
add
das
cmc
mov
test
stos
add
imul
hlt
push
push
repnz
cmc
mov
cwtl
test
xor
mov
cli
sub
push
insl
lods
std
fadd
mov
push
ret
call
mov
adc
and
pop
incb
shll
push
lea
dec
sbbb
mov
mov
jmp
in
pop
lds
pop
popl
fcoml
inc
lret
pop
and
call
fistpll
cmpb
or
notb
pop
sbb
jg
insb
sbb
add
pop
mov
add
aaa
pop
mov
mov
pop
pushf
jge
outsl
inc
std
dec
dec
mov
fsubs
dec
inc
dec
sub
lea
cli
icebp
xor
sub
pop
nop
popa
cli
mov
adc
jnp
in
testb
ret
adc
out
loopne
dec
scas
add
data16
mov
shrb
leave
xchg
or
jb
les
stos
xor
add
push
xchg
hlt
mov
mov
add
mov
xor
mov
jg
dec
imul
scas
xchg
sbb
rcrl
sbb
das
or
mov
or
adcl
sub
dec
int
mov
or
mov
xchg
push
cmpsl
jb
in
jecxz
cmp
in
inc
pop
mov
js
xor
lahf
pop
loopne
lods
cmp
cmp
mov
ret
rcll
int
dec
jbe
or
fwait
pop
cmp
mov
in
inc
inc
sbb
sub
push
bound
call
jle
fs
fwait
inc
push
and
imul
ror
pusha
jbe
inc
testl
int
out
add
add
int
insb
cmp
sub
mov
xchg
or
ljmp
xor
pop
sbb
sbb
sbbb
call
or
lea
add
pop
shlb
shll
fstpl
xor
addl
mov
test
repz
iret
aaa
shll
xor
xor
lea
cwtl
pop
nop
outsl
push
jmp
loopne
mov
xor
push
cld
lods
sub
mov
jne
push
add
aam
adc
dec
xor
jb
out
dec
cwtl
mov
adc
insb
sti
cmp
sahf
lods
fldlg2
cmp
inc
push
add
mov
dec
fwait
add
xchg
dec
or
js
push
rclb
lahf
mov
cmpsl
mov
repz
mov
push
jg
pushf
pop
scas
iret
push
scas
mov
and
fs
cmp
cmpsl
lods
dec
or
dec
adc
inc
daa
inc
jle
sti
adc
pop
xor
xchg
sub
adc
rcr
int3
pop
mov
pop
cmp
xor
ss
or
or
mov
aad
dec
js
rcrl
xchg
mov
push
xchg
jae
lds
lahf
inc
push
movsb
in
ljmp
push
pushf
ja
inc
icebp
inc
sbb
pop
hlt
rcrl
inc
xor
testl
daa
iret
xor
pop
dec
loope
fcompl
and
movb
mov
ds
movsb
cmp
add
add
addl
shrl
test
lock
mov
pop
sub
xchg
and
mov
mov
push
pop
cs
mov
cmp
je
adc
fidivl
and
repz
fbstp
mov
loopne
int
popf
dec
and
cs
cld
out
outsl
pop
cmp
minps
cmp
adc
mov
inc
push
je
cs
inc
fdivs
out
push
addb
adc
cmpsl
mov
pushf
push
icebp
mov
mov
inc
aam
mov
inc
out
fidivrs
movsl
fisubrs
sub
fisubrl
jb
xchg
lcall
jg
pop
push
inc
mov
ret
int
mov
cmpsb
push
and
pop
je
je
lock
subb
fst
mov
jmp
push
sarb
xorl
pop
push
mov
aam
mov
dec
insb
mov
inc
stos
pop
cld
pop
dec
sbb
cld
mov
dec
cmpl
sub
jnp
inc
jle
ret
jns
inc
out
shrd
addl
in
push
stc
outsl
add
je
push
xor
sub
cltd
scas
push
lock
pop
repnz
adcb
add
sub
ljmp
pop
xlat
imul
add
add
lret
pop
inc
pop
mov
imul
inc
or
push
mov
jl
stos
jo
inc
arpl
insb
icebp
or
aas
inc
popf
mov
xor
dec
mov
push
push
dec
int
add
roll
bound
or
or
sarb
mov
mov
call
pop
sbb
shlb
movb
and
bound
pusha
jmp
jge
cmp
test
shl
or
jge
jl
push
aaa
push
repnz
adc
sub
loopne
jnp
shl
psllw
pop
push
sub
lret
je
sub
push
movsb
adc
sbb
out
lods
pop
xchg
add
leave
add
xor
sbb
cmp
ret
mov
or
std
loope
mov
lret
popf
in
mov
push
imul
and
inc
into
lock
add
sub
repz
shrb
outsb
sbb
subb
jo
hlt
cmpl
sub
rcrb
pop
mov
mov
fwait
imul
lahf
mov
xor
mov
and
lahf
lahf
and
cmc
shlb
ret
add
cmp
ja
pop
daa
pop
cmc
call
mov
cli
das
cmp
xchg
clc
add
aam
shl
outsl
jp
mov
mov
imul
mov
fcomi
or
push
movsl
lods
sub
cld
in
xor
xchg
push
js
addl
push
xorl
repz
loope
mov
and
aaa
xlat
out
insb
test
shlb
and
push
cmp
hlt
jle
mov
xchg
cmp
sub
add
dec
xchg
mov
jns
sub
mov
xor
mov
gs
lods
je
mov
xchg
movsl
sarb
push
ret
in
aas
fisttpl
fldt
enter
sbb
xchg
dec
lret
in
inc
sub
xchg
mov
and
incb
pop
mov
xchg
sti
loope
cwtl
jge
bound
xchg
sar
lcall
leave
add
dec
add
roll
sub
fwait
jmp
rorb
mov
sbb
fdiv
xchg
fabs
jbe
mov
imull
sub
subl
jmp
cltd
push
outsb
push
add
mov
gs
stc
mov
push
imul
into
outsl
sbb
and
xchg
out
shlb
scas
outsb
adc
cmp
rcll
gs
in
fiaddl
inc
andb
ficompl
xor
cmp
es
dec
and
cmc
lds
aam
mov
xchg
adc
rorl
xor
aam
push
in
xor
cmpb
sub
xor
outsl
fnsave
and
dec
jnp
movsl
sti
xor
inc
mov
movmskps
xrstor
ja
sub
decb
push
pop
jb
push
enter
icebp
rcll
inc
xchg
sbb
fidivrs
lcall
pop
pop
sbb
int
jb
and
fstps
test
cs
int
leave
repnz
mov
jecxz
xchg
cld
dec
add
inc
lea
shlb
add
mov
sub
js
dec
add
xchg
inc
mov
cld
jo
or
sub
jle
push
addl
loopne
imul
mov
pop
sbb
add
aaa
mov
pop
dec
lcall
xchg
aam
icebp
inc
xor
mov
pop
jmp
imul
and
inc
mov
mov
push
mov
mov
add
dec
dec
ljmp
fcoml
pop
jg
mov
and
pop
data16
inc
add
dec
in
jbe
in
xchg
jge
les
push
cmpsb
pop
push
mov
xor
gs
lds
mov
mov
push
jl
mov
insb
inc
test
add
adc
dec
xor
mov
in
outsb
bound
movsl
sub
cmp
adc
outsb
dec
cltd
out
pop
pop
shl
pushf
sub
cmp
sub
repz
icebp
adc
das
sbb
mov
adc
sahf
std
push
mov
mov
push
sahf
cwtl
cmp
in
mov
rcll
popa
pop
push
push
adc
rcrl
leave
dec
add
popa
mov
mov
stc
xlat
cwtl
dec
scas
or
mov
repnz
fwait
jo
jne
inc
push
cltd
in
lahf
jg
in
in
insl
test
lcall
jmp
dec
ret
das
inc
loope
insl
arpl
add
mov
fs
push
lods
jbe
mov
aas
jp
xorl
arpl
ret
push
dec
fbld
pusha
pop
and
cltd
lret
xor
repnz
outsb
outsl
jno
outsb
mov
test
in
cwtl
mov
jae
sbb
subb
clc
stos
sub
adc
mov
lcall
mov
lock
dec
pop
nop
push
fs
clc
add
inc
or
js
or
jl,pt
in
stos
inc
and
mov
push
int3
ret
dec
push
jge
divb
push
sub
add
or
jb
jnp
orb
data16
sub
ffreep
jge
insl
sbb
jge
sarl
rcrl
clc
add
sbb
inc
add
pop
or
icebp
sbb
fnstcw
aas
sbb
adc
add
push
into
insw
mov
cmp
xor
dec
jmp
sub
adc
and
rol
shl
dec
and
push
or
ds
hlt
cmp
dec
inc
popf
cmp
enter
stos
push
ljmp
testb
adc
push
jp
out
sbb
js
pop
and
mov
mov
call
push
mov
push
shrb
outsl
cmc
cmp
add
shr
outsb
push
mov
and
cmp
sbb
push
imul
scas
push
inc
push
dec
cmp
hlt
xor
and
push
hlt
jmp
dec
pop
jno
je
lock
cmp
pusha
outsb
mov
mov
pusha
test
sti
loopne
adc
or
xchg
mov
dec
in
pop
lock
cltd
cmp
xor
pop
push
data16
test
mov
orb
pop
pop
roll
mov
mov
lods
pop
mov
mov
pop
xchg
subb
out
loop
sbb
add
jnp
out
mov
jne
push
cmp
lods
sbb
mov
pop
or
ljmp
sub
in
push
insb
xor
jnp
ret
cmpsl
push
scas
xor
mov
dec
inc
add
or
mov
sbb
add
fcoms
fwait
xor
sub
cmp
pop
sahf
int
ja
mov
repnz
mov
cli
enter
xchg
dec
out
push
push
cwtl
mov
xor
xchg
pop
mov
stos
pop
sti
xor
mov
push
movsb
lock
daa
scas
mov
adc
pop
cmpsl
jbe
inc
jecxz
psubq
and
movsl
pop
fimuls
daa
lret
cmp
repnz
add
add
push
in
call
out
aam
pop
nop
mov
mov
adc
lods
xchg
adc
stc
push
pop
lcall
imul
lock
sub
sub
push
pop
dec
push
inc
rcrl
and
frstor
iret
xchg
jno
pusha
jno
xchg
fstl
xor
push
add
dec
pop
dec
xorl
cmp
int3
data16
cmp
mov
cmpsl
sub
fsub
jmp
iret
jns
sbb
hlt
fadds
mov
inc
test
imul
int
mov
ret
cmpsb
xchg
mov
xchg
or
aad
in
mov
xchg
cmpsb
pop
jmp
pop
or
ja
smsw
cltd
push
add
adc
loope
outsl
dec
mov
cmpsb
repz
out
addr16
notb
sahf
inc
int3
jmp
sbb
cmpsb
lret
mov
or
jge
inc
push
cmp
add
fdiv
jg
loope
lock
imul
jge
rorb
mov
fwait
lcall
inc
loopne
fs
push
mov
bound
addr16
ret
and
jl
mov
addb
and
inc
or
mov
push
sbb
nop
push
push
fwait
cmp
rcl
adc
and
mov
fldcw
cmpb
dec
jmp
lcall
sub
push
cmc
adc
stos
lock
clc
int3
dec
loopne
fbstp
call
sub
jnp
jbe
inc
dec
in
int
sbb
and
aad
adc
and
imul
dec
inc
clc
adc
push
leave
ret
push
xor
and
lods
out
sub
cmp
push
ror
hlt
out
fldcw
std
xchg
stos
jno
or
pop
sbb
or
fmul
jle
sti
lods
xchg
movl
pop
icebp
pop
xor
sub
dec
adc
adc
xchg
push
mov
jno
push
out
popa
lock
xor
aad
add
repnz
mov
cli
aaa
arpl
push
mov
int
adc
mov
inc
int
or
mov
jns
sahf
xor
mov
daa
call
sbb
or
sbb
xchg
inc
mov
cmp
jo
cmp
xchg
sbb
mov
sbb
push
ficoml
mov
sub
mov
leave
pop
lods
push
adc
imul
sub
push
jbe
jbe
stc
push
sub
jp
incb
pop
popf
fnstsw
test
mov
repnz
mov
jge
inc
pop
into
jmp
push
or
std
shrl
mov
jae
mov
cmp
mov
arpl
xchg
or
fsubs
outsb
pop
cmp
rcr
sbb
jg
test
stc
insb
inc
dec
in
pop
ljmp
or
arpl
dec
sub
jb
lret
das
call
xchg
mov
test
int3
fldcw
cltd
pop
push
das
fnstsw
aam
pushf
mov
xchg
lods
mov
or
icebp
movsl
in
lods
jns
movsb
insl
test
xsha1
cmpsb
or
cli
in
sub
ljmp
mov
cwtl
clc
call
pop
js
dec
in
sti
adc
loopne
dec
or
mov
sub
lret
out
push
mov
pusha
mov
loop
fsubs
xor
and
sub
stc
faddl
cltd
or
movsl
push
add
sub
xchg
fmuls
adc
inc
lock
sbb
ljmp
lcall
jno
jae
into
mov
or
lods
das
or
push
out
lcall
fiaddl
cmpsl
adc
test
jl
or
mov
repz
fisttpll
incb
mov
mov
js
push
dec
push
push
out
push
js
stc
mov
inc
inc
pushl
sti
in
push
loopne
mov
cmp
iret
lahf
ret
sahf
es
mov
add
inc
dec
xor
push
icebp
xchg
movsb
daa
adc
adc
test
sti
pushf
mov
sbb
test
inc
or
out
mov
push
push
inc
cli
sub
push
int3
imul
leave
pop
aas
mov
sti
das
mov
ret
nop
fadd
je
push
adc
inc
sub
jo
mov
mov
ret
test
sbb
pop
jns
imul
aad
mov
and
jge
mov
icebp
mov
loopne
xlat
pop
hlt
ljmp
js
lahf
out
test
dec
int
add
ds
mov
cmp
pop
pop
push
aad
mov
sub
push
movsl
test
cli
pop
or
push
adc
jp
adc
and
dec
roll
mov
mov
inc
lahf
and
xchg
je
inc
repnz
adc
push
and
mov
loopne
jne
aam
dec
xchg
or
cmpsb
jmp
pop
sub
mov
xchg
jo
popl
ret
mov
jbe
or
mov
jbe
xchg
adc
ljmp
in
jne
jl
and
jnp
mov
xchg
sarb
sarl
pop
fcoml
xchg
iret
hlt
inc
sub
mov
inc
push
mov
xor
mov
and
pop
or
xor
adc
pushf
and
mov
call
test
sub
jne
imul
in
sbb
outsl
inc
add
addr16
aad
lock
inc
pop
cltd
sbb
sahf
xchg
mov
in
repz
and
std
nop
add
or
fdivl
fsubl
sbb
jecxz
scas
scas
fildll
cmp
das
or
sub
jbe
add
dec
loopne
mov
cld
cmp
sbb
adc
adc
pop
xor
nop
mov
mov
movsb
xchg
or
inc
fcompl
mov
inc
xor
dec
xchg
movsl
mov
lds
and
loop
jno
push
jns
mov
adc
aad
fldcw
mov
adc
rcll
pop
movsl
jle
jg
cmp
cmpsb
mov
xchg
pop
es
mov
mov
sbb
int3
shlb
cmp
push
in
sub
sub
or
popa
jnp
fildl
mov
data16
cld
sarl
insl
push
add
out
dec
mov
shll
aas
cmc
call
fstpt
out
add
mov
popf
test
pop
push
sbb
and
jne
mov
add
fstpt
ds
mov
dec
dec
ficoml
add
pop
push
test
mov
mov
scas
frstor
cltd
xchg
enter
push
mov
xor
dec
or
call
scas
test
jmp
test
cli
test
mov
pop
mov
or
imul
js
das
cwtl
jnp
cmp
mov
inc
pop
xchg
out
into
aam
rcrl
mov
data16
push
push
insb
int
out
data16
shll
jmp
sbb
loope
orb
clc
jp
add
inc
out
fisttpll
popa
ret
cmp
and
mov
int
sahf
fs
iret
xchg
in
jbe
dec
push
out
leave
mov
xorb
or
lods
gs
scas
xchg
mov
add
js
sbb
dec
ja
cltd
aas
inc
dec
mov
jmp
xchg
add
cmc
fisubrl
pop
lret
js
repz
cltd
mov
test
sti
inc
mov
cmp
nop
dec
push
pop
stc
stc
pop
dec
dec
dec
mov
into
lods
mov
pop
pushf
div
mov
pusha
or
andl
push
jmp
mov
cmp
dec
push
inc
rol
scas
nop
test
call
inc
daa
add
enter
mov
test
cmpsb
cmpsb
mov
mov
gs
out
add
scas
scas
or
out
lock
mov
xorl
int
or
mov
sub
xlat
outsb
loope
daa
ret
aas
inc
cld
out
es
dec
out
and
cmp
test
int
in
xor
inc
outsb
xchg
add
mov
dec
fcmovb
mov
jne
sub
xchg
and
jb
vpsubw
icebp
push
or
jnp
loop
stos
jmp
fidivrs
mov
std
add
push
mov
test
inc
pop
jb
inc
negl
xchg
fs
mov
into
test
das
mov
pop
repnz
vmovlpd
adc
jp
mov
mov
xlat
test
push
decl
push
xor
mov
xor
leave
mov
mov
dec
pop
adc
pop
repnz
jbe
popf
in
rcr
fcom
xchg
scas
not
inc
flds
insl
xchg
ficompl
mov
bound
icebp
inc
add
rol
pop
cmpw
xchg
cmp
sbb
jb
je
adcb
add
push
out
ret
lret
in
in
jl
dec
test
out
jp
jnp
jo
into
jp
jg
sbb
enter
pop
call
or
ljmp
jp
enter
adc
pop
mov
in
bound
inc
hlt
hlt
test
push
jo
movsb
out
sbb
je
mov
int3
les
inc
xlat
cwtl
mov
dec
cmpsb
jecxz
pop
xor
cmp
adc
les
mov
xchg
in
out
cmp
mov
ja
out
mov
fimull
mov
addb
inc
push
call
xchg
xchg
fs
addr16
fnsave
adc
daa
xor
mov
cmpl
push
inc
gs
sub
xor
cwtl
cmp
pop
or
lods
fsubrs
add
mov
mov
pop
hlt
int
xchg
lahf
jo
push
mov
and
test
imul
stc
mov
mov
popa
loopne
es
dec
dec
sub
push
out
int3
pop
scas
adc
or
inc
pushf
mov
std
mov
aas
pop
jl
ss
and
adc
dec
xchg
or
jns
sub
push
cwtl
cwtl
jp
add
cmc
push
shll
dec
adc
push
cmp
repz
mov
mov
mov
insb
jne
jbe
lcall
pop
lods
loope
xchg
push
lret
leave
jmp
jge
dec
pop
cmp
sub
sbb
fimuls
mov
movsb
popf
mov
fwait
push
scas
lods
pop
mov
lret
adc
mov
mov
enter
jae
push
nop
int
inc
pop
push
iret
div
pusha
std
lahf
fsubl
xchg
dec
gs
clc
daa
addr16
insb
pop
mov
jae
jns
fnstenv
add
pop
out
dec
test
lret
hlt
push
push
test
push
mov
mov
add
mov
push
fisubrl
fsubrl
add
sub
push
sub
shrb
push
pop
mov
fsubrl
mov
inc
ret
pop
dec
test
insb
mov
push
push
push
xchg
cmp
mov
rcr
addl
xchg
mov
std
mov
mov
aam
pop
mov
ljmp
in
jno
std
pop
sbb
imul
pop
clc
fstpl
loopne
lcall
stos
arpl
ss
out
mov
shr
push
cmp
fidivrs
xchg
xchg
add
push
pop
rol
push
in
adc
dec
push
pushf
movsb
loopne
lock
sub
mov
or
ljmp
repz
inc
or
cltd
inc
pop
jg
mov
push
loopne
inc
push
sbb
je
mov
pusha
cmp
adc
shrl
or
xchg
or
adc
adc
mov
das
call
sub
arpl
xchg
rcr
sbb
add
in
xchg
mov
cltd
xor
inc
jae
lret
dec
out
pop
xchg
jmp
shrl
sbb
sub
adcl
dec
inc
xchg
cmc
lock
cmp
jno
add
push
sbb
movsl
sbb
movb
insb
cmp
out
sbb
test
jnp
fdivr
loop
cld
add
jge
nop
ret
and
stos
es
mov
ds
insl
testl
mov
insb
mov
mov
push
ja
inc
insl
int3
pop
into
xor
sahf
rcrl
clc
enter
dec
adc
cmp
add
mov
or
lcall
cmp
or
loopne
or
mov
mov
call
lods
mov
in
and
in
mov
mov
pop
sahf
shlb
dec
xor
xor
jp
push
push
jg
xchg
std
xchg
lea
jb
cmc
jecxz
mov
pop
inc
cltd
in
and
hlt
and
xchg
sub
or
xor
test
arpl
mov
xor
sbb
in
cli
mov
das
jns
fadds
arpl
xlat
jle
pusha
ja
popa
or
movsb
repz
adc
clc
cmp
mov
lret
stos
aad
popa
test
xchg
add
or
or
pop
push
scas
es
pop
jno
sbb
dec
scas
add
pop
pop
inc
iret
imul
xchg
imulb
sbb
pop
fcmovbe
clc
mov
sbb
xchg
mov
push
push
inc
out
mov
add
jae
sub
fdivs
mov
btr
imul
sub
sub
push
adc
cmpsb
lods
sbb
and
dec
clc
mov
insl
das
mov
inc
mov
xor
lds
sbb
ja
shrl
dec
sbb
add
cmp
xchg
jge
pop
jnp
or
add
sub
mov
js
repz
and
adc
adcl
out
jb
fisttpl
lret
push
or
inc
xchg
call
mov
mov
mov
prefetchw
dec
sub
fdivs
rclb
js
push
out
add
mov
popf
lds
lea
mov
add
leave
out
scas
add
pop
je
cmp
pop
lret
pusha
into
stos
adc
lock
push
hlt
adc
push
jle
xchg
cmp
in
lahf
mov
xchg
pop
push
call
sbb
push
push
mov
mov
loopne
out
out
jne
cmc
insb
and
test
in
ret
inc
mov
call
pusha
int
lds
inc
and
fildll
shufps
insl
inc
mov
mov
xchg
pop
add
vpunpcklwd
movsl
bound
mov
sub
rcrb
iret
leave
in
cld
sub
pushf
xor
jno
leave
dec
or
in
lcall
xchg
fnstsw
push
sub
stc
fadd
repz
stos
inc
icebp
test
in
aas
adc
faddp
xchg
xchg
push
xchg
mov
vunpckhps
ljmp
cltd
insb
pop
mov
mov
enter
ja
and
sbbl
out
cwtl
or
arpl
inc
cld
mov
fimull
push
cmp
cmp
jl
jno
inc
in
cmovo
outsb
and
inc
enter
fxch
loopne
cwtl
cmp
mov
test
mov
fs
xchg
out
iret
cmp
and
sbb
xchg
jns
dec
cld
jo
jl
mov
xchg
lret
sbb
xor
cld
xor
pop
out
xor
stc
ja
push
outsl
push
int
roll
xor
and
sbb
add
cmp
pop
xchg
cmp
adc
je
jnp
push
lret
cmp
jnp
jp
dec
cmc
and
mov
test
lds
jo
ret
lods
and
sbb
mov
mov
adc
aam
out
mov
add
add
pop
cwtl
adc
dec
in
cltd
mov
in
and
lds
sub
fnstenv
sbb
pop
leave
lods
leave
mov
cmp
xlat
mov
insb
stos
sysret
jmp
lcall
jae
imul
sbb
xchg
cmpsb
mov
mov
push
cmp
jg
mov
push
out
sub
xchg
jae
ret
stos
sarb
cmp
or
xchg
cmpsb
and
xchg
je
iret
xchg
hlt
dec
jne
dec
add
mov
lret
xor
xor
loope
adc
mov
lock
int
cmpsb
loope
ss
add
xor
mov
dec
add
xchg
pop
out
sbb
stos
idivl
in
cmp
xorl
add
outsl
push
rclb
call
test
jbe
scas
in
ds
jmp
mov
xlat
mov
xor
pop
sbb
jbe
push
cld
lods
mov
out
cltd
jl
and
in
out
or
xor
pop
jo
ljmp
dec
and
inc
sbb
or
add
add
mov
adc
adc
mov
adc
out
mov
fcomip
sub
dec
pop
sbb
insb
add
loop
pop
ja
pop
lods
mov
jecxz
cmp
test
movsb
mov
je
lds
mov
mov
shrb
psrlw
jecxz
daa
pop
sti
mov
mov
iret
flds
push
push
mov
xor
outsb
nop
hlt
fistps
nop
push
outsb
in
aam
cmp
sysexit
dec
and
out
std
ret
jae
loop
les
jne
xor
int
cmp
inc
pop
xchg
pop
gs
mov
fidivrs
stos
ja
add
imul
xchg
mov
sbb
icebp
dec
lea
mov
mov
push
push
scas
in
sbb
rcl
andl
inc
int
xor
xchg
mov
pop
pop
sbb
adc
lock
push
imul
hlt
and
test
or
cltd
gs
lea
cmp
sub
add
mov
fistpll
xlat
mov
jg
nop
iret
jno
mov
push
mov
pop
lods
mov
orl
xor
imul
mov
dec
jo
pop
ret
loopne
mov
cld
dec
pop
mov
xor
leave
shlb
adc
xchg
pop
std
outsb
shll
inc
and
ds
xabort
or
pushf
imul
jae
sub
sahf
test
imul
push
fcompl
pop
ret
inc
pop
inc
mov
fwait
sbb
xor
out
lds
xor
das
or
call
mov
fs
push
imul
jnp
stos
dec
or
loop
mov
sbb
add
add
add
add
sbb
lods
subb
xchg
pop
dec
lea
arpl
loope
xchg
inc
add
dec
scas
out
outsb
aas
add
outsb
pusha
jmp
push
ficompl
xchg
lods
das
icebp
lret
xchg
pop
pushl
aas
ds
mov
mov
mov
push
mov
ljmp
pop
idivb
lods
xchg
loop
data16
jmp
dec
gs
out
xchg
jns
into
hlt
sub
cmpsb
cmp
dec
mov
popl
push
sbb
mov
xchg
xchg
out
cmpsl
imul
or
sub
jl
cmpsl
xchg
inc
ret
add
push
mov
shlb
push
or
dec
call
jnp
fstpl
push
ucomiss
mov
dec
sub
sub
cwtl
repz
cltd
pushf
push
mov
pop
push
in
dec
repnz
movsb
ja
mulb
sbb
rorb
fs
mov
inc
lds
mov
mov
or
stos
pop
test
iret
lock
loop
lcall
pop
push
pop
fcmovu
lds
xor
jne
xchg
sti
xchg
or
pop
push
aam
data16
aaa
adc
cmpsl
out
mov
mov
cmp
insl
daa
stc
pop
dec
or
push
xchg
or
iret
adc
stos
cmp
adc
test
aas
out
xlat
cs
push
xchg
js
fidivrs
or
test
data16
sbbl
mov
cmpsb
dec
jle
shlb
dec
adc
add
xlat
adc
mov
dec
ret
addr16
inc
jle
cmpsl
test
pop
push
add
add
and
sub
pop
outsl
idivb
add
xor
negl
cmp
rcll
cmpsl
mov
xor
in
imul
es
pop
push
decb
push
loope
cmp
repz
inc
adc
lock
mov
std
pop
sahf
lods
inc
xchg
aas
bound
cs
jbe
arpl
dec
sbb
or
xchg
mov
and
sbb
loop
adc
and
and
dec
sbb
ja
out
stc
bound
jnp
clc
push
jecxz
or
popf
mov
rcrl
sub
lods
jmp
cmp
xlat
jns
mov
mov
push
inc
sbb
push
lds
push
lret
imul
push
bound
arpl
js
out
arpl
or
jmp
jns
loop
loop
jne
in
add
inc
mov
push
inc
mov
aas
out
push
push
test
dec
popa
sub
or
bound
in
jno
mov
lahf
mov
xchg
adc
xor
mov
mov
mov
daa
in
dec
inc
or
xchg
jb
pop
rcll
daa
jno
push
push
sub
lcall
cs
out
js
repz
mov
test
hlt
xor
xchg
mov
sub
enter
sub
arpl
arpl
aam
inc
stos
or
fsubrl
test
inc
mov
hlt
jl
hlt
call
push
jle
stos
aaa
dec
pop
xchg
fisubs
mov
jnp
cmp
lcall
cmpsl
insl
daa
xlat
mov
push
leave
push
shlb
push
add
add
and
or
imul
hlt
aad
and
xchg
in
ljmp
enter
scas
jg
daa
ret
cld
out
out
jl
loopne
in
fs
data16
add
sbb
mov
cmp
cmp
or
cs
imul
sbb
in
stos
add
dec
insl
sbb
pop
push
lahf
ret
inc
insb
pop
adc
pop
cmp
subb
pop
push
mov
cmp
push
xchg
mov
imull
mov
insb
mov
loope
fwait
push
filds
in
shll
sti
sub
mov
jo
push
jnp
popf
push
xchg
xor
jo
sub
mov
cmp
mov
push
adc
sbb
fisttps
ret
jmp
fisubrl
ret
out
pop
pop
jle
stos
xchg
mov
stos
mov
and
jns
jnp
push
cld
int
out
mov
sti
cltd
cmp
cmpsb
lds
pop
pop
or
fs
test
inc
or
fldenv
dec
mov
stos
sub
clc
scas
into
pop
xchg
xor
fwait
shll
push
das
mov
adc
sub
out
lock
ja
adc
hlt
dec
mov
arpl
outsb
into
xchg
incb
mov
push
add
push
push
xor
test
pop
out
mov
mov
lret
lods
fwait
adc
sti
add
push
popa
test
inc
mov
pop
mov
scas
jne
jp
add
ficoml
jp
mov
mov
pop
ficomps
andl
pop
insl
lret
jmp
mov
mov
mov
dec
js
mov
mov
bound
mov
mov
sub
fiadds
mov
xor
dec
cmc
mov
test
sub
pop
or
shl
push
and
add
or
add
dec
pop
pop
std
cltd
fisubs
mov
mov
sub
xor
push
repnz
pop
dec
int3
jge
test
mov
xchg
inc
loope
cli
sbb
shrb
shlb
jae
and
jle
cmpsb
ret
or
dec
mov
mov
mov
cmpsl
pop
shlb
test
lahf
sub
jmp
xchg
cmp
xchg
pop
or
stos
xchg
movsl
push
es
js
ds
ja
jmp
mov
mov
pop
push
insb
and
inc
les
bound
push
fnstsw
into
pop
out
add
xor
jnp
es
mov
sbbl
mov
fwait
or
popa
sbb
rorl
jbe
add
enter
cmp
mov
pop
int3
jae
stos
cltd
sti
and
lds
jae
shr
mov
frstor
cs
push
push
aad
sub
dec
mov
into
dec
sar
push
pop
lret
sub
mov
in
cmp
cmp
ss
ljmp
roll
cmp
int
ja
push
or
lock
mov
clc
mov
das
jmp
xor
lcall
xchg
jno
push
addr16
fsincos
or
insl
pop
cld
repz
imul
sbb
sbb
mov
inc
out
mov
push
bound
clc
bound
mov
xor
fsubrs
nop
mov
adc
fmul
mov
leave
push
cld
std
movl
call
mov
sub
lcall
in
add
push
cmp
xor
adc
frstor
dec
iret
and
in
ja
sarb
pushf
adc
fwait
sub
fcoms
inc
addl
jnp
add
push
testb
sbb
push
sub
sub
sar
jle
in
into
inc
mov
fnstsw
fs
popa
out
mov
xor
cltd
xchg
mov
imul
test
adc
add
sbb
xchg
sbb
sbb
in
insl
and
ret
std
mov
pop
hlt
mov
pushf
or
ret
add
add
cmp
pop
xchg
lcall
lock
jae
mov
sbb
into
mov
sbb
in
xchg
lahf
jecxz
leave
add
shrb
sti
cmp
sub
xchg
je
mov
scas
aas
sub
push
mov
inc
lret
jmp
ds
mov
js
sub
xlat
notl
pop
lahf
into
movsl
clc
dec
nop
and
xchg
repz
dec
pop
inc
or
out
mov
inc
pop
loopne
int
fimull
adc
movsl
sarl
pop
mov
pop
inc
fwait
mov
add
sahf
idivb
outsb
int3
fidivl
gs
jae
je
xchg
xchg
jnp
data16
xchg
loopne
add
scas
call
dec
and
rorb
push
flds
cmp
jne
push
pop
sub
xchg
mov
push
dec
test
mov
leave
inc
dec
adc
dec
out
dec
rcrb
and
loope
inc
dec
sub
mov
sub
mov
mov
pop
mov
les
hlt
leave
cmc
push
mov
int3
mov
sahf
dec
inc
arpl
or
add
jnp
bound
inc
adc
inc
mov
enter
push
mov
in
cmpl
sarb
lahf
stos
inc
push
ds
leave
loop
xchg
xchg
mov
fcompl
gs
pop
adc
loop
pop
sbb
mov
add
sbbl
add
sub
inc
out
dec
mov
pop
pop
test
arpl
das
sbb
fwait
or
fisubrs
je
js
aam
xlat
jge
and
sahf
test
sahf
dec
mov
sbb
into
pusha
add
imul
and
add
int3
sbb
add
mov
hlt
das
and
inc
push
adc
rclb
mov
scas
push
xor
adc
push
xchg
jg,pn
add
iret
xchg
cmp
fisttpll
cmp
cmpsl
nop
dec
cmp
test
xor
scas
push
sub
mov
xchg
mov
inc
std
push
jo
outsl
add
push
cmp
pushf
sbb
and
ja
dec
xor
loopne
or
push
popa
jmp
add
adc
cwtl
pop
imulb
iret
aaa
subl
mov
mov
xchg
mov
cld
les
jne
sbb
call
fstl
in
jne,pt
xchg
movsb
jb
xor
or
sub
mov
je
xor
mov
jp
lds
loop
ss
rorb
dec
pop
cmp
adc
lds
pop
mov
sub
xchg
adcl
lods
insb
movl
stc
das
push
pop
out
mov
lahf
loopne
xchg
xchg
mov
xor
pop
mov
je
mov
xchg
outsb
stos
shll
cmp
fucom
sbb
inc
cld
in
arpl
outsl
mov
stc
add
scas
leave
ret
add
mov
mov
pop
popf
or
test
outsb
icebp
data16
dec
fdivr
lods
pushf
dec
push
mov
out
and
out
nop
testl
dec
lods
mov
es
or
loopne
inc
mov
sbb
and
jecxz
sub
sbb
cmpsl
push
out
jl
out
xor
inc
jnp
ret
jl
jo
movsb
jmp
push
xor
shl
iret
pop
mov
cli
icebp
cmpsl
out
push
mov
fs
rcll
xor
imul
inc
outsl
push
inc
dec
popf
add
cmp
pop
and
imul
repnz
push
adc
add
ret
pop
adc
bound
xchg
mov
aad
jb
lahf
mov
lods
into
in
and
popf
js
jp
mov
adc
add
and
inc
xchg
push
ret
jae
jg
cmp
mov
outsb
mov
pop
test
cmpsl
lcall
add
jecxz
push
pop
push
repz
dec
out
fiadds
sub
or
test
pop
fdivrl
mov
aad
jb
addl
xchg
dec
gs
mov
adc
clc
mov
sbb
or
jb
pop
mov
pop
push
cmc
adc
pop
mov
xor
xlat
movsb
repz
push
data16
mov
mov
sub
test
popf
and
negl
imulb
and
inc
aad
ja
pushf
mov
aad
jb
push
jmp
lret
push
push
mov
in
scas
ljmp
inc
mov
fstps
or
mov
lcall
jp
inc
mov
sbb
dec
adc
jae
add
mov
loopne
stos
aad
int3
cmc
sbb
in
adc
fbld
sub
ret
push
mov
jno
call
mov
adc
andl
fnstcw
ja
sub
mov
sbb
cmp
jmp
scas
imul
sub
xchg
dec
pop
push
and
addl
inc
ds
imul
movq
popa
dec
dec
test
icebp
push
jns
fdivl
add
lock
pop
aaa
daa
mov
cmp
iret
popf
xor
jmp
add
jmp
add
sub
push
inc
clc
xchg
sarb
xchg
ror
push
push
addr16
and
insb
cmpsb
pop
cltd
mov
or
adc
and
out
mov
lahf
cmpsl
je
mov
lea
out
sahf
cwtl
cs
and
test
das
das
aam
ds
xchg
cltd
and
fcmovnbe
xchg
sahf
jl
adc
add
test
xor
je
mov
xchg
lcall
ret
adc
shrb
mov
lret
inc
mov
inc
rolb
in
out
insb
push
in
push
xchg
sub
decb
cmp
lods
cmc
out
bound
stos
inc
mov
adc
int3
stc
adc
mov
lcall
xor
mov
dec
mov
or
or
sub
icebp
int
mov
dec
push
dec
inc
mov
mov
mov
popa
pop
cmc
or
adcb
iret
stos
lret
inc
mov
add
add
cmp
lods
xchg
fcom
mov
pop
sti
incl
loope
mov
imul
js
pop
adc
xorb
sti
jl
out
push
ret
push
inc
mov
sbb
test
mov
fisttps
loope
and
cmp
dec
test
adc
inc
adc
aaa
pop
fcomps
jb
pop
dec
shrd
push
imul
push
sbb
inc
sbb
jge
mov
call
dec
mov
add
push
jle
loopne
sar
jle
dec
jecxz
test
mov
inc
adcb
mov
cs
in
pop
aad
or
jecxz
inc
stc
mov
imul
mov
push
adc
lret
fcmovnu
dec
dec
dec
sub
mov
xor
sbb
or
mov
jbe
push
pop
ss
mov
out
mov
fwait
jle
inc
loop
sub
mov
repnz
xlat
jbe
stos
dec
ret
bnd
jno
pop
sahf
push
mov
add
sub
dec
and
into
push
outsl
sub
sub
fists
int
rcrb
mov
sub
popf
imul
cld
xor
outsl
jns
sbb
test
les
cmp
insl
pop
push
movsb
push
insl
bound
jb
bound
push
mov
stc
out
inc
sbb
lods
inc
or
outsl
in
stos
adc
outsb
dec
fadds
push
xlat
cli
adc
mov
cli
frstor
push
cmc
mov
cvtpi2ps
and
sub
cmp
inc
and
pop
xchg
test
ja
scas
xor
pop
push
mov
sti
sbb
loope
es
aam
pop
enter
push
pop
push
fstps
inc
rcl
and
inc
xchg
mov
aam
mov
jle
adc
mov
dec
cmp
sbb
xchg
inc
jo
cmp
lcall
clc
mov
sub
push
aad
outsl
push
jo
jno
outsb
repnz
leave
mov
dec
hlt
xor
dec
pop
push
push
stos
push
fdivp
dec
jne
pop
divb
sub
rorb
xchg
pop
dec
popa
mov
popa
sub
ljmp
ljmp
test
mov
mov
add
stc
mov
into
adc
push
push
int
push
js
cmp
jge
int3
jbe
pop
cwtl
inc
dec
js
scas
xorl
mov
push
pop
aad
mov
and
in
jl
jno
push
push
push
mov
sarl
mov
jle
ljmp
aad
in
lahf
fstps
sub
clc
and
mov
and
rolb
push
bound
or
mov
js
xchg
imul
or
jbe
jae
outsb
xor
stos
js
icebp
out
or
sub
xlat
push
pop
pop
lds
push
inc
scas
adc
out
loop
popa
in
lods
sbb
outsl
inc
xchg
insb
lds
add
fdivrl
cld
mov
outsl
push
xor
sub
mov
push
dec
out
dec
test
test
clc
cmp
loop
adc
sar
insl
stos
push
aaa
inc
repnz
aam
clc
and
mov
push
shll
sub
add
ds
pop
sbb
enter
add
icebp
mov
scas
mov
mov
or
dec
outsb
dec
push
arpl
jmp
int3
arpl
ljmp
adc
cmp
xor
gs
jb
jg
sbb
jg
adc
insb
lahf
notb
add
fcmovnu
push
pop
daa
dec
mov
add
cmpsb
xor
aaa
cmc
test
ret
inc
mov
jmp
and
cld
daa
lds
push
dec
loop
xchg
lahf
data16
iret
xchg
jmp
scas
or
mov
adc
into
test
or
push
scas
add
dec
mov
pop
push
shl
cwtl
cmp
jae
adc
idivb
pop
jae
mov
mulb
repz
aaa
add
repz
add
fimuls
clc
psubusb
mov
mov
fmulp
jg
filds
mov
pop
fistps
mov
mov
mov
jae
cmp
cmpb
cmp
cltd
inc
dec
pop
push
icebp
xlat
repz
enter
cmp
cmp
pop
pop
imul
inc
dec
cmp
add
leave
lea
xor
push
jecxz
loopne
push
fucomp
cmp
ret
push
xor
pop
call
dec
jp
fwait
pop
fiadds
mov
mov
cmp
repnz
mov
hlt
lret
add
adc
dec
mov
sbb
jno
adc
aas
or
insb
addb
mov
pop
push
pusha
js
imul
icebp
adc
dec
fdivr
mov
in
push
loope
ss
enter
cs
insl
sbb
xor
out
enter
mov
ds
iret
ss
popa
popf
sbb
lods
pop
mov
popa
mov
out
ljmp
push
pop
repz
xor
inc
jmp
mov
dec
pop
jecxz
sub
bound
push
iret
xor
notl
mov
stc
adc
out
lds
sub
push
jle
cld
stos
rorl
sub
xchg
lock
lds
sti
mov
outsl
sub
cmp
jns
dec
loopne
movsb
mov
mov
dec
mov
sub
loopne
add
fidivrl
pop
cmpb
jnp
shlb
arpl
dec
mov
jp
cmp
lods
lds
sti
mov
xor
cld
add
sub
insl
sub
jae
push
push
outsl
insl
stos
mov
clc
js
add
dec
out
fcompl
or
sbbl
aam
in
xchg
mov
adc
cmp
dec
fs
xchg
shlb
inc
fnsetpm(287
xor
push
ljmp
rolb
pop
aam
ret
or
les
cmc
mov
pop
dec
loop
stc
mov
repnz
mov
add
rcrl
push
fsubl
mov
les
inc
mov
push
stos
pushf
or
cmp
fwait
loope
sub
fwait
out
cltd
data16
nop
loopne
jp
or
ficompl
mov
bound
data16
lea
das
mov
pop
adc
or
das
jmp
outsb
arpl
sahf
cmp
lahf
int3
fs
inc
xor
bound
lods
std
in
dec
in
fldenv
mov
sbb
frstors
xchg
sbb
inc
inc
xchg
ret
push
push
sahf
sahf
cmp
pmulhuw
test
inc
daa
cwtl
out
lcall
mov
or
add
push
ret
mov
push
pop
jge
add
mov
xor
mov
insb
sbb
cmpsb
xchg
mov
adc
inc
fucomi
xor
enter
faddl
mov
push
jmp
cmpsl
stos
mov
pop
insl
rorb
mov
mov
adc
xlat
es
ret
pop
sub
icebp
mov
call
mov
mov
fisttpll
fldenv
mov
out
push
cmp
sbb
imul
pop
js
xor
push
movsb
pop
jl
mov
jmp
inc
jns
mov
mov
repnz
lea
push
mov
lret
fldenv
imul
out
push
in
xlat
pop
sbb
push
push
cs
jmp
sahf
test
outsb
popf
adc
xchg
jmp
testb
add
gs
push
lods
repnz
push
or
push
jmp
dec
xchg
push
lahf
pop
popf
pop
shlb
scas
jae
fistpll
test
xchg
add
sbb
in
test
dec
and
cmpl
mov
mov
or
lock
mov
xlat
mov
xor
cmp
popa
mov
add
shlb
add
add
lods
pusha
loop
pop
out
lret
popa
call
outsb
xchg
mov
in
jl
arpl
aam
xchg
dec
dec
adc
out
ja
ret
jne
sbb
adc
sbb
cmp
add
or
mov
add
cmp
bound
je
ds
cld
fnop
aad
jo
adc
inc
or
xor
pusha
jmp
xchg
cmp
mul
adc
fisubrl
ficompl
push
push
or
mov
cmc
sbb
sbb
loop
popf
pop
in
mov
sub
mov
mov
jl
jo
dec
push
repnz
inc
mov
test
cmp
xchg
insl
insl
stos
cmp
call
jg
dec
mov
daa
xchg
aad
pop
pop
push
lcall
sub
outsb
jnp
and
mov
std
das
pop
and
push
pop
lods
push
inc
sbb
sbb
cmp
stos
adc
add
mov
scas
loopne
push
test
je
mov
mov
out
ffreep
inc
adc
mov
mov
jne
lcall
xor
ret
cmpsb
or
and
xor
mov
add
ret
pop
call
jnp
mov
pop
int
or
aaa
test
movsl
jb
lret
jo
out
daa
pop
cmpsl
lret
fucom
stc
sbb
xlat
fnstsw
outsl
bound
mov
adc
xlat
dec
jns
into
orb
adc
jb
ja
xor
es
xchg
push
stos
arpl
fistpll
nop
mov
xchg
or
popa
mov
jp
cli
pop
push
mov
jne
sub
lods
fdivs
push
sub
sbb
push
inc
mov
shrb
push
xor
aaa
push
in
out
aam
in
lcall
ljmp
mov
mov
push
push
cwtl
and
pop
inc
loopne
leave
ja
or
push
daa
repnz
or
xor
mov
popf
scas
sahf
sbb
stos
cmpsl
xchg
shrb
mov
mov
pop
je
mov
and
out
jge
sahf
arpl
lods
and
xchg
ret
addr16
mov
push
in
data16
dec
int3
je
fidivrl
mov
imul
bts
fidivl
push
test
repnz
inc
sub
loopne
je
pop
fwait
mov
cmp
fsubr
jne
add
xor
pop
imul
das
insb
int
stos
test
ret
push
loope
xor
push
cltd
aam
stc
fistps
aas
nop
mov
in
jns
stc
cmp
ret
mov
lea
xchg
mov
int
inc
lock
inc
adc
shl
mov
mov
xchg
das
jmp
repnz
jl
mov
mov
sbb
cmp
movsl
lret
add
bound
sub
imull
sti
mov
sbb
dec
jbe
xor
mov
jo
mov
pop
cmp
mov
pop
fldt
xchg
jnp
or
cmp
or
and
aam
dec
fidivrs
lea
or
les
out
lds
push
mov
lods
add
sahf
das
sbb
aam
repz
int
enter
push
sbb
jl
cli
add
sub
push
lock
cltd
sub
cmp
adc
popl
push
adc
dec
jp
dec
adc
jns
adc
popf
out
ret
jecxz
jnp
xor
mov
push
pop
or
imul
xchg
push
cmp
jns
cmp
lahf
cli
dec
cmc
push
mov
cmpsl
cmp
jle
pop
bound
les
mov
aas
mov
ja
lret
stos
push
xor
icebp
xor
add
or
scas
popf
and
insl
sbbb
pop
pusha
push
mov
pushf
fstps
mov
push
loopne
jl
xchg
inc
jp
aad
sub
and
repnz
ss
jne
repnz
in
mov
and
dec
popa
push
dec
jbe
add
and
insl
cmp
jne
out
push
addr16
rcll
mov
inc
je
add
jb
in
mov
push
push
iret
inc
addr16
das
gs
cmp
cld
push
lods
into
into
iret
daa
adc
push
dec
jmp
jge
mov
fdivrs
das
mov
or
and
inc
mov
into
and
aad
test
mov
mov
adc
adc
rol
lods
xchg
mov
adc
hlt
sbb
xchg
inc
xchg
les
mov
mov
lds
inc
dec
or
arpl
jne
idivb
lret
mov
push
andl
insb
das
stc
stc
std
add
or
jns
ja
xor
sub
orl
sbb
pop
mov
hlt
or
or
arpl
std
or
lock
xor
cli
cmc
mov
jb
roll
cli
jns
fdivr
leave
mov
push
push
aas
fiaddl
mov
push
lret
lods
pop
in
int3
ficompl
jbe
sub
loopne
add
mov
fsubrp
andl
inc
mov
in
xor
ss
xchg
adc
adc
adc
jge
mov
rolb
cwtl
sub
icebp
pusha
xor
sbb
aas
and
xchg
addl
xor
ljmp
out
adc
push
movsb
pop
cmp
lretw
pop
xor
mov
mov
shlb
fcoms
cmp
rcll
loop
repnz
enter
ficomps
push
mov
leave
mov
mov
lea
loopne
in
test
aas
xor
in
cwtl
dec
mov
jns
in
rcrb
cmp
leave
mov
decb
push
aaa
cmp
and
pop
test
mov
sub
pusha
enter
mov
xorl
fistpll
inc
rorb
popa
cs
push
sbb
cld
loopne
push
jmp
adc
dec
cmp
popa
cmc
les
aaa
ds
rorl
xor
gs
mov
ret
mov
lcall
sub
push
pop
ja
dec
mov
aam
aad
push
pop
hlt
notl
out
or
jmp
shlb
repz
mov
or
or
sbb
popf
imul
pop
pusha
ret
pop
negl
test
cmpsb
aas
pop
adc
lahf
loopne
or
dec
mov
cmpsb
adc
stc
lea
cld
adc
and
sub
iret
daa
push
pushf
dec
gs
imul
addr16
adc
je
add
push
mov
and
dec
insb
icebp
xor
fstpt
mov
push
mov
fdivs
cmp
enter
aad
test
dec
pop
dec
shll
mov
cmp
loopne
jmp
jbe
dec
dec
mov
jnp
inc
aas
pop
pop
adc
sub
sub
cmp
int
and
inc
nop
incb
mov
imul
fistpll
popa
xchg
into
push
test
out
std
dec
and
mov
pop
inc
imul
pop
dec
lock
js
lea
insl
fmul
cli
adcl
jnp
ror
dec
or
cmpsl
lds
cmp
or
sub
sbb
cmp
mov
mov
inc
jl
arpl
xchg
int
add
add
jg
pop
repnz
enter
call
sub
fisubrs
dec
ss
addr16
inc
enter
mov
repnz
loope
sub
andl
inc
aas
sub
mov
xorb
sbb
mov
add
jb
mov
or
and
cs
shlb
pop
cmp
mov
ret
out
sbb
stc
mov
xchg
xor
fucomp
dec
cmpsb
insb
arpl
cmp
rcrb
mov
add
and
daa
mov
pop
jecxz
arpl
movsl
cmp
add
cli
inc
dec
mov
mov
enter
test
push
or
iret
aam
cli
sub
push
adc
jbe
addr16
mov
sub
sbb
ja
clc
movsb
jo
and
mov
xchg
jp
addr16
cmpsb
pop
inc
repnz
movsb
and
lea
and
cmp
add
mov
and
icebp
hlt
popl
sbb
lcall
and
cmp
jle
cmp
xor
inc
jne
insb
imul
es
xchg
movsb
stos
in
fisttps
in
xchg
jno
fcmovu
int
mov
jb
roll
jl
int3
shrl
jne
fnsave
xor
xor
ret
lret
int3
je
mov
loope
icebp
psllq
jo
dec
stos
or
pop
cmp
repz
fists
mov
or
jecxz
add
push
daa
sbb
ror
lods
mov
outsb
mov
sbbl
imul
ds
scas
cmp
out
cmp
cmp
fisttpll
fidivl
mov
jg
loop
jg
dec
aad
std
lret
iret
cmp
pop
jmp
dec
pop
mov
cli
shl
mov
xor
adc
xor
xor
clc
sub
jno
imul
xlat
in
test
fcomps
lods
int3
inc
xor
add
or
in
inc
popa
lcall
or
test
in
lret
fisttps
test
push
nop
sub
rcrb
xor
in
cs
sub
mov
sub
out
dec
dec
lahf
sbb
pop
pop
repnz
in
inc
add
xchg
mov
mov
xor
imul
aad
jns
jl
iret
popa
and
sbb
loop
pop
addr16
test
lret
and
stos
repnz
pop
cmp
jle
addb
mov
adc
mov
pop
mov
outsb
sbb
sbb
lods
or
andb
inc
pop
lods
inc
or
addl
sbb
lcall
mov
into
xchg
fstl
adc
jecxz
xchg
dec
fiaddl
push
jno
mov
test
mov
mov
popf
mov
push
mov
xor
or
popa
testl
adc
call
cmp
and
cmpsl
inc
jmp
xchg
mov
xorl
jecxz
push
mov
les
test
lret
lea
jp
cli
and
add
movsb
fwait
in
sahf
nop
nop
dec
and
testb
testb
adc
xchg
orl
rcl
in
in
pop
jno
dec
cmc
mov
add
xchg
mov
cmpsb
cmp
xchg
or
pop
pop
pop
imul
sbb
das
xchg
add
push
call
dec
adc
mov
or
jb
pop
xchg
push
lods
js
inc
jmp
inc
push
ds
mov
out
mov
push
mov
mov
or
jge
mov
jno
adc
pop
jecxz
pop
pusha
mov
loop
fst
add
lret
movsl
xor
stos
out
dec
out
int
or
fildll
mov
aad
and
loope
mov
and
lea
dec
xor
int
insb
jne
subl
xorl
shrl
push
mov
popf
push
push
jnp
adc
adc
sbb
in
cmp
in
jo
cmp
das
pop
or
xor
imul
add
stc
enter
jecxz
push
inc
popf
mov
xchg
bound
rorb
addr16
mov
fists
cmp
jmp
and
push
pop
cmp
fdiv
sbb
xchg
shl
jl
jae
sbb
imul
jne
and
out
int3
pushf
mov
rolb
arpl
scas
fs
sahf
ljmp
mov
loopne
test
add
mov
imul
xchg
je
inc
addr16
movsb
jmp
xchg
loope
rorl
jle
es
aaa
sbb
and
cld
bnd
mov
sub
idivb
xchg
jnp
or
push
out
aaa
pop
lea
in
ja
inc
jnp
dec
lock
jne
lods
fnstsw
mov
lahf
xchg
mov
xchg
xor
mov
stc
out
int3
addr16
stos
jnp
pop
mov
mov
add
ljmp
fidivl
in
loop
fnstenv
mov
push
fucomi
test
push
xchg
notb
sub
jg
jmp
rcr
leave
orb
xchg
sarb
in
cmp
das
push
ret
ljmp
jae
js
aam
lcall
outsl
jg
jle
dec
jbe
lods
cmp
movsl
push
sub
pop
push
loopne
stos
lcall
data16
mov
stc
sub
data16
pop
sub
test
fwait
lahf
imul
or
jne
xchg
add
stc
imul
lods
loopne
xchg
outsl
xchg
pop
lret
xchg
inc
mov
orb
mov
out
mov
subl
push
lea
test
dec
je
push
pop
test
mov
cmc
rorb
rcrb
movsl
bound
mov
sbbl
mov
sub
orl
mov
xchg
loopne
fisttpll
adc
push
mov
fstps
mov
xchg
dec
mov
xchg
stc
daa
addb
ret
js
cmc
pop
adc
inc
add
mov
cmpsb
jmp
cmpb
fcmovnb
fisttps
adc
cmpsb
outsb
pusha
lods
out
cmpsb
addr16
xchg
mov
xchg
test
aad
loope
pushf
shll
inc
daa
in
jnp
testl
and
dec
test
out
cmp
data16
jle
and
bound
test
aad
mov
jecxz
xor
or
arpl
in
sub
mov
sub
sbb
ds
roll
or
jmp
clc
sbb
es
fwait
addl
sti
int3
mov
xor
push
jmp
lret
xor
add
repnz
dec
in
mov
inc
mov
mov
add
jnp
xor
pusha
adc
ret
add
sbb
jg
cmc
sbb
int
lcall
mov
outsl
je
xor
je
outsl
jno
sbb
sub
push
cmp
movsl
push
ss
icebp
mov
sub
adc
into
ss
or
sub
rolb
mov
xchg
popa
aaa
push
mov
sarl
lds
or
fistl
rcl
ficomps
xor
cmp
jmp
ja
pop
cltd
pop
je
or
sub
es
fdivrl
jmp
or
add
ss
cmp
scas
arpl
mov
fisubrs
xor
push
dec
aas
jb
addl
sbb
cmp
icebp
andl
addr16
aaa
push
add
divl
and
push
movsl
ds
leave
into
sbb
outsl
jae
lcall
mov
mov
xchg
loope
cmpsl
lea
cld
mov
jbe
clc
out
loopne
movsl
hlt
leave
dec
mov
leave
sti
jle
rclb
sarl
jb
das
or
aam
into
mov
sbb
and
pusha
and
push
pusha
mov
cmp
frstor
scas
and
mov
mov
cmpsl
mov
jb
fstl
pop
and
push
popa
ss
inc
adc
mov
or
jmp
outsl
dec
pop
shll
pop
xor
sub
push
cmp
mov
aaa
jns
mov
adc
inc
jl
lods
push
loop
lds
ficoms
gs
shrl
xchg
jle
test
jge
mov
cmp
sub
testb
sbbb
or
fidivl
scas
adc
ret
ljmp
dec
jecxz
outsb
mov
nop
shr
andl
cmp
clc
aas
rcrb
push
sub
mov
or
stos
gs
mov
filds
adc
mov
cmp
pop
adc
jg
jl
dec
mov
icebp
cld
adc
inc
popf
xchg
push
nop
and
fimull
repnz
nop
pop
out
xchg
xchg
rorb
xor
push
xor
and
pop
xor
pushf
mov
dec
xor
popa
icebp
pop
test
push
pop
sbb
jecxz
nop
dec
pop
jle
sbb
pop
cmpsb
jo
cmc
and
inc
fstl
rcrl
insl
clc
jge
inc
enter
shrl
mov
cli
inc
mov
test
cmp
mov
cmp
mov
sbb
imul
jae
in
ja
mov
jno
push
fdivr
rcll
cmc
jl
add
sub
add
sbb
or
push
clc
pop
xchg
add
inc
jge
jmp
cwtl
cmp
pop
je
cmpsb
rclb
mov
or
into
mov
lcall
pop
push
push
cmp
lret
cmp
movsl
or
rcrb
or
and
or
xchg
out
inc
pop
push
jecxz
bsf
insl
mov
pop
dec
xor
lahf
push
insb
adc
inc
sub
clc
ficompl
sub
adc
loop
jnp
daa
stos
dec
arpl
xchg
mov
dec
inc
mov
add
mov
adc
sub
pop
jbe
mov
mov
or
jb
cli
repnz
jl
pop
test
insb
out
push
mov
aam
add
add
jg
cmp
rclb
inc
andb
mov
cmp
sbb
in
insb
outsb
push
imul
test
pop
pop
cmp
ja
out
int3
in
cmp
cmpsl
add
popf
aam
cmp
dec
popf
adcb
xchg
aas
loopne
leave
lods
add
test
mov
cwtl
mov
push
mov
or
addl
into
outsl
pop
scas
adc
push
inc
aad
add
jecxz
mov
push
xchg
mov
mov
iret
or
mov
test
sub
mov
aaa
imul
jns
mov
mov
pop
ja
jge
js
ja
in
shr
leave
cli
mov
add
lods
in
jbe
push
vcmppd
inc
xor
dec
add
mov
sub
cld
sti
jbe
push
fs
xchg
loop
sbb
dec
jmp
xor
or
add
cmp
cmp
add
pop
push
test
out
and
sbb
repz
dec
and
les
test
stos
mov
xchg
mov
out
fdivs
sbb
out
shll
push
sub
cli
iret
iret
mov
scas
std
ss
lock
adc
divl
iret
push
scas
pop
xchg
sahf
icebp
std
push
jl
mulb
mov
scas
lea
jae
std
push
nop
into
rclb
pop
cltd
lret
sub
jg
push
mov
push
fisubs
repnz
cmp
mov
stos
xor
pop
lcall
cmpsl
mov
nop
push
test
mov
pop
cli
xor
loopne
out
mov
xchg
cmp
enter
pusha
aad
push
jbe
mov
ss
stos
jmp
xchg
cmp
jo
jo
test
testl
jl
dec
int3
sbb
leave
mov
mov
jne
mov
or
fistpl
ret
jecxz
movsb
enter
iret
inc
xchg
arpl
xchg
dec
xchg
cmp
mov
enter
ret
pop
dec
dec
dec
and
jo
xor
cmp
cmp
inc
xchg
fsubrs
jns
clc
out
std
pop
mov
stos
into
popf
outsl
pop
out
xchg
dec
das
mov
mov
cltd
jp
and
dec
mov
mov
mov
xchg
out
outsb
xchg
loop
push
out
jae
sub
pop
xor
pop
add
rclb
xchg
jp
lods
xor
fistl
xor
fsubr
push
cmp
mov
add
pop
push
ljmp
or
push
in
aas
rorl
icebp
fs
arpl
add
mov
cmp
fisubrs
mov
push
sti
loop
push
xchg
jg
push
aam
jae
int3
stos
out
pushf
test
sub
xor
repnz
jl
mov
jnp
adc
shll
sub
cmp
sbb
dec
push
push
jge
je
stc
xor
sahf
mov
repz
js
pop
enter
in
insb
xchg
testb
cli
xor
mov
loop
fistl
test
add
sbb
pop
cmpsl
push
mov
mov
lret
mov
mov
xor
mov
pop
insl
mov
add
call
sarb
xchg
pop
in
lock
into
sbb
cmp
mov
sbb
or
xchg
adc
jg
mov
push
or
xor
pop
insl
sbb
inc
xorl
mov
ret
fwait
cli
movsl
int3
mov
pop
adc
mov
sbb
push
mov
sahf
push
fsqrt
push
lahf
pop
pop
and
mov
jl
arpl
lret
mov
push
mov
inc
jecxz
ret
push
fdivrs
mov
jle
cmp
mov
sbb
nop
mov
outsl
filds
sbbb
insb
lret
mov
dec
pop
jns
cmp
scas
cmpsb
loop
movsl
jbe
orl
inc
bound
xchg
fsubrl
mov
in
mov
lcall
inc
mov
xorb
out
mov
jne
and
mov
adc
das
push
fwait
sub
xlat
mov
push
adcb
ror
aad
imulb
dec
sar
je
shrb
cwtl
jb
cmp
dec
pop
lods
lock
mov
sbb
jno
cmpsb
mov
xor
xor
cmp
add
dec
sub
pop
push
lret
jnp
pop
loop
cmc
cmp
loope
xorb
sbb
sub
cmc
mov
int
stos
mov
aad
stos
ja
adc
sbb
fwait
xor
sub
outsl
in
faddp
pusha
lret
inc
push
out
leave
mov
mov
out
jno
cmc
pop
sub
pop
scas
dec
aaa
dec
es
push
fdivs
dec
in
push
cmp
pop
dec
pop
shr
leave
scas
pop
stc
xor
cmp
arpl
addr16
cmp
and
cmp
cmc
and
mov
inc
addb
movsl
shl
adc
lods
std
cmp
xor
sahf
sarb
aaa
pop
cmc
mov
adc
enter
push
aam
hlt
dec
les
jmp
inc
ret
mov
jge
addl
pop
fwait
xor
adc
testl
xor
mov
mov
xchg
or
hlt
jecxz
mov
sub
sub
leave
sub
jb
sub
nop
and
in
bound
mov
aam
or
fistl
js
out
lods
dec
pop
inc
cmpsl
inc
xor
push
nop
sub
push
adc
movsl
repz
xor
pop
call
rcrb
xor
lahf
pop
jbe
or
insl
mov
mov
ret
nop
lahf
mov
xorb
mov
xor
sub
sbb
out
out
cmp
xchg
cmpsb
jge
xlat
cli
cmc
xchg
xor
dec
xchg
and
cli
xchg
es
xor
lods
adc
push
pushf
jge
bound
add
popf
xlat
adc
mov
lock
mov
xor
cmpl
int3
test
mov
or
cld
addl
ss
and
push
mov
mov
xchg
adcb
dec
loop
mov
ja
popa
shll
push
out
sub
jne
stc
xor
add
mov
lods
mov
scas
sbbl
dec
int3
mov
stos
or
sub
jae
xor
cmp
scas
sti
add
sahf
imul
mov
enter
jp
sbb
movsb
outsl
mov
pop
shll
test
mulb
test
aam
out
insl
out
cmp
dec
push
sbb
jmp
int
aad
or
push
dec
repnz
ss
les
clc
xor
mov
inc
stc
inc
cmp
lock
cld
or
adcb
push
fcomi
movsb
adc
test
pop
pop
jecxz
sub
and
movsb
cmp
sti
daa
and
les
nop
fcompl
push
push
mov
cltd
xchg
jo
neg
mov
sahf
imulb
loopne
or
test
sub
mov
cmp
pop
pop
outsb
or
xlat
add
popa
xchg
out
test
dec
out
push
clc
pop
pop
stc
lret
or
mov
cmp
clc
adc
fmull
cmp
test
test
mov
pop
push
jle
sbb
sarl
xchg
pop
push
iret
roll
or
cmp
dec
inc
mov
xchg
mov
pusha
fimull
push
mov
fwait
add
frstor
int
cmp
xor
jbe
sub
out
in
cmc
pop
arpl
mov
push
sub
push
add
add
test
xor
sub
sbb
je
or
adc
lahf
lea
lea
jmp
mull
or
shrl
and
inc
insb
lahf
sub
gs
inc
sarb
pop
je
inc
in
and
and
pop
data16
sub
push
lock
add
inc
adc
adc
adc
and
lret
xchg
push
cmpsl
lahf
jecxz
int3
cmp
add
mov
repnz
mov
mov
jns
xchg
fs
outsb
test
mov
call
mov
lret
out
jp
add
push
int3
mov
inc
icebp
adc
adc
decl
mov
add
sub
or
aam
loope
push
ret
add
xchg
adc
mov
sub
or
mov
sbb
add
lret
cmpsl
mov
sub
scas
lcall
xchg
inc
add
pop
mov
jae
mov
inc
xor
out
jns
and
out
cmc
inc
std
scas
push
push
add
adc
mov
mov
fcompl
dec
scas
vpsrlw
fs
pop
imul
push
lret
sahf
mov
ret
xor
xchg
stos
sub
mov
insl
adc
aam
faddl
mov
xchg
mov
stos
cmp
ret
jnp
mov
mov
adcb
aas
jl
stos
add
sti
rcr
xor
jo
mov
jl
adc
mov
call
push
data16
or
ret
pop
mov
xor
subl
dec
inc
xor
mov
add
das
xchg
ds
popf
faddl
adcb
data16
in
inc
les
push
icebp
sub
mov
jg
pop
adc
xlat
jle
inc
sbb
mov
adc
xor
push
lahf
mov
mov
addl
shl
imul
gs
mov
cmpsb
data16
mov
fsubrl
cmp
push
xor
shlb
sbbb
and
outsl
js
test
cwtl
clc
test
stos
outsl
and
cmc
push
bnd
dec
je
jns
aas
movsb
pop
and
xchg
mov
xchg
add
mov
or
push
jp
xor
adc
sbb
jmp
push
xorb
adc
pop
rorl
mov
sahf
arpl
mov
neg
pusha
pop
cmp
mov
jp
aaa
dec
xchg
in
jne
jl
iret
ja
incb
pushf
mov
xchg
shl
cmp
movb
sbb
jns
sub
push
movsb
call
jno
jo
loopne
cmp
push
mov
xor
mov
mov
das
or
xor
fisubs
adc
dec
cmp
mov
ljmp
push
fcmovbe
adc
xlat
jb
int
jg
jno
mov
jecxz
pop
inc
mov
push
fistl
and
xor
cmp
mov
pop
sub
pop
xchg
xor
std
mov
cmp
aas
fwait
xchg
pop
push
stos
or
mov
mov
mov
jnp
pop
cmp
fadds
add
adc
dec
int3
mov
lahf
dec
push
pop
push
out
sbb
std
adc
and
mov
fistpl
into
lea
cmpsb
shlb
cld
insl
cli
test
insl
gs
adc
out
icebp
aas
pop
je
rorb
dec
xorb
fidivs
pop
ljmp
shrb
test
test
lahf
dec
add
dec
fisttps
xor
pop
adc
xchg
push
scas
ret
stc
cmp
sub
pop
xlat
js
cli
fiaddl
jo
mov
push
dec
jge
inc
and
cmp
jmp
test
gs
xchg
aas
mov
out
cs
punpcklbw
pop
push
iret
or
sbb
loop
add
aad
push
int
fldcw
pop
loop
lret
mov
lcall
movsb
xchg
lods
les
movl
cmpsl
mov
xchg
mov
cmp
rorl
add
lea
pop
or
mov
aam
inc
idivb
insl
negb
jns
cmc
into
push
jo
xchg
mov
lds
sbb
test
sub
xchg
mov
stc
lea
hlt
ret
cltd
nop
add
cmpsl
dec
ret
push
jb
scas
mov
mov
enter
mov
mov
and
pusha
push
and
icebp
sub
cmc
inc
mov
gs
les
jo
outsb
clc
fisubrl
sbb
call
sahf
stos
jno
xor
sub
out
int3
push
add
das
out
push
jge
cmpl
shrl
cltd
jbe
gs
in
xchg
movsb
mov
popf
and
xchg
dec
inc
pop
sbb
test
add
sbb
inc
mov
outsb
loope
add
pop
stos
stos
push
xor
and
ds
pop
scas
shlb
lret
xor
sahf
ja
xchg
gs
loope
jecxz
lock
inc
sti
adc
idivb
inc
push
sub
mov
mov
cmpsb
xor
xor
mov
sahf
push
loop
push
or
mov
fs
jne
inc
sbb
mov
or
cld
fldenv
popf
jb
ja
not
outsl
cmc
add
push
xchg
dec
dec
addr16
lcall
insl
imul
mov
ss
lea
push
cld
push
out
imul
xchg
push
dec
sbb
lahf
add
mov
xchg
fcompp
test
cwtl
cltd
xor
mov
jecxz
das
leave
or
in
aaa
inc
cmc
or
ret
jno
outsb
icebp
sub
aad
dec
jge
push
std
adc
xor
xchg
pushf
xchg
sub
xchg
or
cmp
lret
add
and
push
jbe
jnp
pop
sbb
lods
sub
aam
scas
lret
ljmp
gs
add
fildl
dec
scas
lret
cmp
jp
pop
and
insb
mov
mov
incl
cmp
leave
sub
mov
test
mov
cs
inc
mov
ret
xchg
fisubs
cmpsl
leave
cwtl
push
jge
clc
lcall
mov
xor
mov
daa
test
fs
add
or
arpl
inc
rorb
subl
jbe
leave
dec
or
and
jle
jbe
jp
sub
int
out
ret
xor
mov
sbb
sbb
stc
dec
scas
push
pop
jl
ret
mov
mov
repnz
les
xor
or
icebp
adc
mov
cmp
xor
xchg
sbb
xor
js
shrd
adc
and
hlt
push
movsl
lcall
ja
mov
mov
lods
stc
fwait
and
repnz
out
pminsw
call
xor
dec
mov
pop
hlt
mov
push
push
sbb
cwtl
pop
movsl
js
xor
rorl
mov
ss
in
dec
movsl
fmul
outsl
xchg
cmc
scas
repnz
sahf
jl
xchg
lea
hlt
shlb
aad
ja
sub
and
insb
popf
loope
fld
push
mov
out
lret
cmp
loope
incb
daa
pop
ds
jg
jo
dec
xchg
out
xorb
addr16
out
sahf
out
andb
call
mov
popf
jo
cs
sub
xchg
pushl
add
and
lea
xor
call
scas
jne
test
adc
xchg
call
outsl
dec
je
push
or
sarb
xor
jg
sahf
jl
ljmp
xorl
sbb
fiadds
adc
mov
scas
add
cwtl
aam
lret
nop
or
push
or
jo
repnz
ret
add
cmp
pop
sbb
mov
dec
xchg
mov
sub
and
pop
push
adcb
fisttpll
sub
pop
jg
test
enter
mov
sub
push
sub
ljmp
addr16
cmp
dec
ss
push
aam
push
jp
arpl
neg
lea
cmp
loop
pop
out
cmp
jmp
inc
loopne
cmpsl
push
jns
sub
insl
push
cmpb
shl
push
shll
sbb
inc
inc
push
mov
push
cmp
add
in
xchg
fmull
mov
faddl
call
mov
pop
out
dec
jmp
xor
sbb
xor
mov
ljmp
jae
lcall
andb
ss
mov
pop
shrb
inc
gs
lcall
jg
loopne
test
scas
lds
mov
shrl
leave
cmp
add
shrb
lcall
ficoms
mov
ret
cmp
addl
cmp
push
xchg
jle
fimull
sub
divb
call
sbb
test
cmpl
shl
pop
push
fidivrs
loop
loopne
rcl
and
inc
xlat
shlb
inc
std
xchg
aas
or
xor
imul
dec
jo
sbb
lods
shlb
jle
mov
cmc
hlt
push
cmc
int3
inc
sbb
iret
ss
inc
pop
dec
mov
in
or
push
aad
pop
mov
jnp
fstpl
out
mov
pushf
xorb
jle
js
test
stc
das
sbb
jg
leave
shrl
ljmp
fdivs
int3
mov
fidivs
insl
mov
fmulp
cmc
pop
jb
add
aas
inc
sub
std
imul
xchg
sbb
sbb
adc
int
int3
xor
enter
xchg
jo
lds
jecxz
dec
enter
mov
dec
vaddps
xchg
lods
shrl
adc
cs
stos
inc
dec
fstl
pop
pop
cli
les
dec
sbb
test
ss
mov
ja
loope
roll
rcrb
int3
aad
ret
mov
pop
xchg
into
call
push
stc
jmp
sbb
adc
gs
xor
mov
xchg
out
pop
sbb
pop
data16
stos
cmp
inc
andb
jg
jmp
jmp
cmp
fwait
int3
subl
test
xor
cltd
cs
cmpb
sbb
push
sbb
fistps
mov
aaa
ljmp
sbb
pop
cld
add
xchg
sti
cmpsl
cmp
push
mov
ret
test
dec
mov
cmp
mov
or
outsl
pop
mov
dec
hlt
mov
dec
test
lods
mov
sbb
mov
push
mov
dec
movsl
jge
hlt
and
push
mov
push
rclb
sub
addr16
aad
test
jmp
adc
pushf
mov
stos
xchg
dec
js
mov
sub
lret
or
sub
sbb
je
sub
out
stos
insl
push
addb
xchg
mov
das
mov
push
mov
cmp
enter
jp
add
popf
sbb
push
xchg
xor
or
xchg
dec
pop
scas
mov
push
sub
xchg
sbb
adc
inc
cmpsb
fstpt
jnp
cmp
or
lock
or
fbld
dec
inc
fcompl
popf
or
aad
mov
cs
or
add
or
sbb
stc
addl
sbb
lcall
arpl
xor
or
and
outsl
fildll
cmpsb
call
movsl
mov
in
cmc
xchg
dec
add
enter
cld
add
int
bound
xchg
cli
pop
stos
mulb
call
clc
xchg
lret
test
cmp
push
aam
stc
add
mov
mov
mov
xor
ret
jbe
push
pop
mov
std
jp
ret
popf
jmp
adc
cmpsb
mov
prefetcht2
cmp
push
out
push
stos
xchg
out
pushf
dec
cwtl
lret
and
stos
cmp
aaa
stos
sbb
hlt
call
xchg
stos
data16
and
jno
and
js
mov
push
sahf
les
popa
push
pop
ret
fbstp
imul
xchg
sub
jb
into
lds
and
je
jmp
inc
mov
mov
mov
pusha
sub
add
push
mov
mov
test
je
or
or
add
mov
icebp
test
sub
pop
fnsave
dec
xchg
mov
pop
mov
inc
les
cmp
pop
push
xchg
xchg
inc
mov
mov
js
test
xchg
push
cli
lahf
push
in
mov
je
xor
mov
insb
add
mov
mov
or
mov
incb
mov
sbb
aas
js
fdivl
imul
mov
and
movsb
xchg
add
jo
test
xor
and
in
xchg
mov
imul
jge
mov
or
push
push
jg
mov
cmpsl
push
dec
xchg
aam
add
mov
outsb
sub
lods
push
pusha
ja
sbbb
out
idivl
lret
mov
cld
mov
aaa
in
pop
push
ret
sti
adc
mov
mov
sbb
xor
pop
imul
outsb
sbb
mov
fnstcw
or
mov
jmp
in
push
aad
push
repz
aaa
mov
xchg
mov
xor
and
push
lds
aam
out
jg
data16
xchg
xor
dec
push
fcoms
cmpsb
dec
shlb
dec
lret
notl
lahf
pop
out
or
mov
add
les
adc
or
mov
sbb
stc
in
shll
push
xchg
or
das
std
cmp
mov
inc
int3
cld
stos
jns
mov
scas
js
mov
wrmsr
sub
push
fnstcw
jns
in
scas
jl
push
mov
repz
cmp
leave
and
add
repz
loop
mov
loop
push
stos
push
inc
pop
xor
repnz
pushw
adc
xchg
mov
rorl
or
inc
sar
inc
rcrb
repz
daa
dec
cs
push
sub
enter
sbbb
inc
cmpsl
pop
adc
pop
clc
jecxz
push
dec
cli
out
xor
gs
idivl
fs
insl
cltd
leave
cwtl
in
mov
inc
sub
fisubrl
jnp
cltd
movsb
test
popf
inc
imul
mov
mov
arpl
test
sbbb
rep
and
xchg
mov
dec
movb
fstpt
xchg
dec
insb
push
push
testl
test
mov
adc
gs
call
fisubs
pop
and
cltd
sub
sahf
outsl
scas
mov
xchg
xor
daa
ss
cmpsl
add
add
pusha
outsb
pusha
mov
mov
shll
pop
popa
in
dec
and
aas
jl
in
push
sub
sub
cmpsl
lea
fwait
imul
decl
mov
adc
ret
sbbb
clc
cld
hlt
push
std
in
jmp
mov
mov
mov
fstpl
jg
sbb
test
stos
fwait
subb
mov
push
mov
mov
pushf
adc
test
xchg
scas
pop
xchg
adc
adc
jle
test
cmp
stc
mov
lret
ret
jmp
out
movsb
andl
ds
mov
mov
jle
push
xchg
mov
dec
popf
add
inc
jp
out
das
push
call
xchg
fadds
push
jae
hlt
leave
mov
icebp
and
mov
out
icebp
cwtl
fildl
xchg
jo
lea
lahf
outsb
sub
adc
sub
xor
xor
jo
inc
jo
jge
hlt
mov
in
lods
lods
pop
ds
inc
ds
fcomi
test
jnp
imul
cmpsl
or
inc
std
in
mov
adc
xorb
cmc
mov
je
and
aam
mov
push
xor
mov
addr16
jp
das
mov
mov
sub
ret
pushf
jns
dec
and
aas
pop
xchg
inc
lcall
lahf
inc
xchg
shr
bound
or
xchg
int
jae
lahf
test
xor
or
cld
lcall
in
mov
int
jne
mov
jecxz
and
repz
mov
xor
in
mov
adc
aaa
inc
mov
sbb
push
push
or
test
fs
dec
push
add
mov
xor
shlb
xchg
jae
mov
ficomps
push
outsb
aaa
iret
push
mov
unpckhps
add
test
pusha
cmp
mov
xor
xor
gs
fstpl
and
pop
pop
cli
jne
push
test
sahf
push
dec
xchg
push
pop
jb
mov
sbb
dec
sbb
adc
in
cmp
mov
adc
out
mov
dec
roll
ja
pop
pop
sbb
dec
ljmp
adc
and
cli
pop
loope
ss
push
push
xchg
test
pop
or
repnz
xchg
cmpl
in
cmc
xchg
es
sub
cmpsl
adcl
pop
bound
push
lds
popf
outsl
ss
cld
in
add
ljmp
cwtl
pusha
movl
das
xchg
and
jg
movsl
cmp
mov
fidivrs
aam
popf
jp
mov
mov
jmp
insl
fisubs
sub
cmpsl
jmp
test
aad
daa
cmpsb
mov
roll
into
iret
add
push
fidivl
mov
push
mov
cmpsb
jns
jb
dec
addr16
les
inc
add
push
add
loope
sarb
jne
js
ljmp
sarl
fisttps
hlt
jge
push
movsl
insl
cli
inc
pop
iret
xchg
pop
xor
mov
inc
sbb
inc
in
cmp
cmp
adc
cmp
xchg
and
push
push
mov
mov
cli
push
xlat
sbb
pop
gs
sub
fiaddl
sbb
pop
jle
idivb
sbb
dec
cld
and
dec
xor
in
push
aas
xchg
mov
cmp
decl
and
add
xor
mov
mov
jnp
push
cli
test
sarl
cmp
add
lock
repnz
jns
dec
dec
enter
or
push
popa
lods
sahf
inc
cmp
repnz
arpl
push
mov
pusha
lods
adc
dec
arpl
mov
or
out
loopne
push
icebp
jns
dec
mov
adc
fdiv
rcrb
popf
inc
outsb
push
xchg
fiadds
add
jo
test
inc
sub
xchg
fildl
lea
and
std
inc
mov
pop
push
fistpl
sub
xchg
rcll
fwait
repnz
aad
and
in
lock
jne
push
mov
xchg
pop
jmp
jno
shrl
xorl
pop
lahf
out
rorb
fsubrl
push
fists
jp
loope
dec
test
loopne
test
pop
xor
in
aad
jne
leave
push
and
sbb
mov
mov
idivb
sbbb
lods
jbe
xchg
adcb
cwtl
cmc
test
pop
and
xchg
push
and
sub
or
jns
inc
testl
fcomip
in
xlat
dec
or
enter
inc
fcmove
sbb
js
push
mov
and
mov
das
aas
mov
js
in
pop
mov
enter
jp
ja
sar
mov
lds
xchg
and
and
inc
mov
lods
subl
xor
xchg
xlat
mov
xchg
loop
cmp
jae
mov
push
push
subps
mov
inc
and
jmp
jno
in
and
push
fidivs
jecxz
xor
in
nop
call
dec
adc
sub
mov
xorb
cld
xchg
pop
sub
test
arpl
xchg
fwait
sub
std
inc
or
jnp
loopne
imul
pop
scas
push
sub
lahf
test
subl
pop
add
fwait
pop
add
xchg
shl
mov
cs
dec
cltd
dec
sbb
dec
sbb
scas
in
int3
mov
cmpsb
and
or
loopne
fildl
nop
int
popa
adc
ret
stc
popf
pop
dec
push
shlb
mov
xchg
or
lods
es
jp
xor
mov
outsb
lret
arpl
mov
pushf
push
jl
sbb
cs
jae
push
mov
jns
inc
jmp
lret
adc
inc
xchg
push
int3
jp
and
rclb
jg
sbb
xchg
test
or
popf
xchg
out
iret
repnz
xchg
testb
adc
cmpb
push
imul
stc
lahf
cltd
pushf
cmp
addr16
mov
sub
xchg
les
sahf
cmpsl
ja
cmp
jno
lahf
add
lcall
jg
or
or
inc
xorl
fisubl
and
inc
sbb
inc
sbb
loope
in
add
cltd
xor
push
cmc
rcr
sbb
aas
xchg
test
clc
sub
aas
fs
sbb
data16
mov
in
mov
lret
add
in
lea
data16
test
pop
mov
sub
jmp
mov
sub
cld
pop
inc
add
pop
sub
inc
pop
add
leave
orl
ljmp
adc
push
xorl
aam
mov
or
hlt
add
lcall
xlat
or
xchg
popa
dec
mov
jne
inc
test
jnp
jl
pop
sbb
cld
insb
inc
xor
dec
cmpsl
bound
lock
add
std
aam
test
aas
pop
sahf
in
pop
jl
lcall
inc
in
sbb
popf
xrelease
fs
mull
je
shll
sbb
fwait
pop
xor
xchg
lea
add
clc
je
nop
xchg
inc
popf
pmuludq
jne
ds
sub
sbb
jne
xor
mov
stc
inc
inc
pop
push
pop
nop
push
sahf
lds
and
sub
popf
ss
mov
test
and
insl
adcl
push
sbb
add
stc
xor
outsb
adc
xchg
test
push
int3
cltd
das
mov
sti
sbb
adc
mov
ljmp
popa
mov
sbb
mov
shll
rorl
xchg
pop
mov
das
out
testl
arpl
aad
in
sub
add
push
pop
pop
push
or
xor
lcall
loop
sub
fnstsw
les
fld
out
xchg
stos
js
sbb
enter
lret
out
nop
roll
repnz
out
cmc
xchg
adc
movb
xchg
mov
xor
insl
dec
fidivl
jns
inc
stc
fistpll
mov
add
loope
mov
cmp
nop
mov
enter
cmp
ja
pop
push
out
jb
mov
and
ret
xor
mov
mov
jmp
clc
notl
stos
std
rclb
xbegin
mov
iret
mov
adc
mull
xchg
out
or
mov
or
ljmp
sti
push
mov
push
repz
pop
pop
push
pop
adc
pop
pop
inc
push
test
dec
stc
das
sub
out
fmull
add
adc
inc
mov
and
lcall
jge
gs
push
dec
or
and
mov
ds
inc
repz
ret
sahf
test
idivl
iret
jecxz
fs
enter
sbb
out
jns
cmp
jmp
stos
add
shrb
lds
push
iret
adc
xchg
dec
and
mov
mov
out
jmp
sbb
mov
mov
jne
pop
rorb
adc
pop
hlt
test
test
movsb
jp
cmp
fnstenv
dec
dec
out
sti
push
divl
les
xor
pop
dec
icebp
jp
aad
lock
mov
ds
fstl
es
cmp
cmp
sbb
inc
aad
mov
test
in
cmp
push
or
and
idiv
cmp
ret
add
mov
mov
and
rorl
dec
xchg
mov
jbe
ljmp
inc
xchg
mov
xor
inc
push
rcll
aam
fisubl
jns
clc
pushf
push
lret
mov
jno
mov
cltd
mov
cli
test
iret
sbb
xlat
filds
push
pop
cmp
lret
xchg
int
inc
add
push
ljmp
or
mov
fiaddl
data16
pop
dec
shl
in
lods
lods
dec
adc
in
movsb
lods
add
dec
pop
insb
jmp
inc
lret
in
ret
push
in
outsb
clc
jo
pushf
js
pop
sbb
cs
mov
cmp
pop
aad
ss
gs
xchg
mov
adc
outsb
pop
hlt
cmp
shll
int
dec
out
cmp
cmpsb
sbb
jg
and
imul
pop
dec
das
dec
out
or
mov
imul
fnstcw
xchg
sub
mov
jnp
mov
or
arpl
scas
in
mov
fsubrl
cmpb
jp
ja
insl
jae
scas
mov
dec
ja
pop
imul
enter
lcall
jp
cltd
insl
call
pusha
insb
scas
pop
add
in
dec
sub
mov
adc
cmp
adc
notb
xchg
and
mov
xlat
test
adc
repnz
outsl
or
ja
icebp
mov
xor
jb
shll
addr16
cs
mov
mov
xchg
sbb
bound
cmp
push
fidivs
cmp
jbe
xor
inc
inc
cli
test
jg
cli
hlt
daa
lock
push
out
mov
fwait
test
lods
test
push
adc
mov
or
xchg
push
sub
mov
loope
call
mov
mov
sahf
or
push
loope
and
xchg
add
ss
inc
sahf
and
gs
cmc
fcomps
jge
es
pop
fbstp
pop
adc
push
jmp
adc
mov
inc
into
pop
add
popf
aad
daa
dec
mov
cmp
dec
dec
loop
out
aaa
incb
add
sti
addr16
mov
in
cmp
cmp
jg
insb
mov
sahf
xchg
scas
push
xchg
xor
xchg
scas
addr16
pop
fidivl
adc
add
stos
sbb
and
sub
adc
pop
mov
bound
jno
ja
call
mov
hlt
pop
sbb
jo
sub
pushf
ds
ljmp
aad
or
mov
jne
std
shl
fnstsw
cmp
pop
cmp
iret
daa
das
shl
rclb
movsl
fucomip
pop
xor
mov
je
pop
repnz
push
xor
in
mov
fwait
cmp
add
cmp
lods
sar
jmp
mov
mov
cmp
sbb
add
xor
jl
mov
sub
inc
dec
leave
add
negl
add
mov
push
inc
or
inc
insb
cli
icebp
sub
adcl
shl
loopne
pusha
dec
cwtl
mov
and
sarb
and
sahf
inc
sbb
jne
test
mov
leave
add
clc
mov
jecxz
push
ljmp
dec
add
or
fistps
xor
mov
out
inc
cmp
sti
mov
fidivs
das
out
test
dec
adc
sub
xor
fiaddl
sub
mov
outsb
fimull
push
out
ficompl
lock
fsubs
xchg
int3
jne
xchg
scas
and
pop
push
jne
cmpsl
mov
lahf
add
or
pop
xchg
inc
pop
inc
imul
sub
sar
idivb
sub
cltd
fcoml
mov
fnstsw
add
mov
cmp
cmp
pop
jo
push
out
dec
cmp
xchg
mov
mov
mov
dec
mov
dec
jae
adc
popa
lea
push
test
les
mov
inc
push
ret
imul
inc
mov
imul
mov
jmp
mov
popa
sahf
xor
pop
push
loopne
adc
sbb
sub
pop
inc
jle
jbe
bound
int
pop
push
sbb
popf
or
std
mov
movlps
insl
xor
jno
adc
lcall
xchg
lret
xchg
xchg
pop
mull
or
pop
mov
cmc
or
pushf
sub
andl
cli
jmp
mov
sbb
push
in
out
or
in
or
adc
mov
add
push
bound
idivb
mov
xchg
gs
or
in
dec
xor
fcoml
xchg
xchg
adc
xchg
out
test
inc
lahf
js
mov
cltd
mov
jbe
in
shll
dec
push
int3
ja
imull
add
pop
mov
sub
jl
int3
dec
repz
pusha
or
ss
mov
fdivrl
stos
push
pop
sub
mov
xor
mov
or
push
movsl
pop
js
pop
idiv
inc
call
stos
cmp
mov
and
sub
push
mov
incb
mov
repnz
mov
enter
dec
ja
jo
add
sbb
fadd
aam
sti
into
loope
cmpsb
rorb
je
add
xor
in
clc
sub
pop
daa
in
push
jge
xchg
pop
gs
popa
stc
push
scas
clc
addb
push
inc
mov
inc
int
cmp
ror
adc
sahf
rclb
xor
push
in
fwait
test
push
add
repz
inc
fdivrl
xchg
dec
sub
outsl
test
popf
inc
xor
movsl
jae
push
jecxz
enter
inc
and
out
mov
in
popa
je
movsl
fcmovu
test
imul
fcomps
xchg
sete
scas
mov
push
test
xchg
or
or
mov
test
arpl
pop
xor
filds
mov
push
int3
add
dec
stos
xor
sbb
imul
js
outsl
movsl
add
pop
adc
jl
sbb
cmpsb
push
xchg
mov
jo
aas
scas
fldcw
inc
cmp
sub
sbb
push
adc
push
jnp
push
fwait
clc
sub
out
mov
fxtract
xor
mov
movsb
sbb
mov
arpl
sbbb
xor
shl
inc
adc
leave
adc
sbb
sar
lret
inc
xor
jbe
clc
mov
sub
mov
xchg
xchg
jp
xchg
fwait
out
data16
loope
push
hlt
lock
dec
mov
inc
inc
jge
pop
and
fs
xor
cwtl
jb
fsubl
xchg
mov
push
mov
incl
test
pop
or
sahf
add
mov
inc
mov
xchg
cmpsb
sbb
mov
jp
dec
movsl
ret
push
jbe
xchg
jmp
jne
or
jmp
iret
ficoml
ja,pn
pop
addr16
xchg
in
pusha
loope
iret
repnz
xor
xchg
pop
mov
lea
sbb
and
pusha
inc
sbb
fdivrp
ret
add
lcall
rcrb
pusha
insl
adc
jmp
pop
jecxz
inc
stos
pop
xchg
pop
loop
stos
push
xor
dec
push
inc
fstl
jp
inc
das
ja
mov
lcall
dec
pop
jbe
data16
cmc
mov
and
inc
ds
pop
mov
nop
in
cmpps
pop
xor
jne
push
xor
dec
and
call
pushf
in
jp
je
jb
insb
and
cld
rcll
aam
gs
aam
negb
inc
push
pop
xor
pop
inc
jnp
cmp
scas
sub
mov
out
testl
fadd
rclb
fcoml
sbb
sti
das
lret
inc
mov
das
cmp
cmpsl
jge
hlt
jne
and
adc
inc
jg
aad
mov
and
push
mov
xchg
or
xchg
push
mov
adcb
add
sbb
dec
mov
mov
loopne
sbbl
cmp
addl
jmp
hlt
jg
fdivrs
ja
dec
pushf
hlt
or
jge
mov
inc
scas
mov
in
addl
xor
jmp
or
adc
bound
insb
mov
lret
sub
in
sbb
and
std
cmpsl
dec
pop
jns
out
push
mov
mov
sbb
and
inc
or
sbb
and
les
mov
notl
sbb
mov
rcrl
stc
jecxz
pop
mov
push
pop
push
iret
outsl
inc
repnz
fstl
bound
cli
dec
add
out
push
enter
jge
out
arpl
add
mov
inc
shll
fldenv
call
or
out
xlat
lods
repz
xchg
add
add
test
movsl
scas
iret
setae
rcrl
popf
pushf
jo
cli
daa
andb
bound
in
cmpsb
fs
mov
mov
push
fwait
or
push
int3
sbb
cmp
or
clc
add
rcrl
cmp
fmuls
repnz
test
addr16
push
or
jnp
fs
aaa
push
mov
dec
pop
test
jmp
or
pop
pusha
xor
xchg
xchg
ds
inc
xchg
xchg
cmpsl
push
into
push
adc
loopne
shr
jp
pop
mov
test
jo
js
xchg
out
dec
cld
scas
pop
lahf
adc
and
ret
mov
sbb
push
push
add
dec
sbb
or
adc
mov
inc
ja
xchg
xchg
mov
push
jbe
rclb
rcl
mov
sbb
leave
call
cmp
xchg
mov
pop
jb
daa
inc
cwtl
scas
leave
fidivrs
icebp
jbe
mov
sub
xchg
jmp
hlt
insb
and
mov
cmpsl
iret
xor
fcmovnbe
inc
inc
xchg
push
sarb
insb
fistl
clc
mov
jmp
mov
sbb
test
push
push
fildl
loope
out
xchg
sbb
lahf
fdivs
ds
out
sub
shrl
mov
push
sbb
and
cltd
or
cltd
cmc
in
cmp
imul
vshufps
sub
add
sbb
lock
xchg
adc
mov
inc
and
cmp
sub
pop
ds
sarb
les
lret
gs
loopne
adc
scas
push
pop
inc
xchg
fcoml
mov
lea
cmp
pop
cmpl
lea
jecxz
xchg
adc
or
inc
das
lods
adc
adc
jge
out
lcall
addb
xchg
int3
pop
lods
fnstenv
rol
imul
xor
xorb
je
cmp
out
mov
mov
xor
jge
jp
jmp
xlat
cltd
add
adc
imul
mov
xor
or
shl
nop
clc
cmpsl
bnd
cld
lods
stc
aas
jle
mulb
dec
shrl
test
push
popa
lods
into
int
js
mov
fucomi
fs
pop
mov
mov
fistpll
adcl
rorl
ds
loope
mov
imul
jge
imul
gs
jno
or
push
sbb
scas
adc
mov
out
rcrb
cmpb
cmp
mov
int
pop
out
inc
mull
xor
cmpsb
insl
mov
cmp
scas
jecxz
push
jg
xchg
sbb
xchg
sbb
xchg
sbb
pop
sbbl
icebp
iret
inc
inc
sbb
mov
xor
movb
incb
test
jp
adc
mov
int3
sub
rcrl
dec
in
cmp
enter
add
into
push
lds
sahf
mov
xchg
hlt
push
repz
pop
push
loope
xlat
sub
sub
xchg
xchg
cmpsl
mov
fisttps
scas
sub
inc
rorb
and
je
scas
movsl
sub
add
pop
aam
adc
mov
sbb
xchg
mov
and
adc
dec
scas
sbb
cmp
mov
sbbl
pop
icebp
pop
mov
lahf
scas
test
mov
nop
sbb
sbb
xor
cld
add
aam
mov
push
roll
jmp
add
ret
pop
mov
push
adc
scas
add
xchg
insb
out
iret
stc
inc
shr
jp
jne
imul
scas
sub
out
fldcw
repnz
jne
jne
mov
xor
jae
mov
and
into
mov
out
out
and
xor
and
cli
hlt
negl
imul
jns
imul
mov
aas
aaa
adc
andl
stos
add
sub
xor
andl
out
ja
cmp
je
out
dec
inc
xchg
dec
pushf
or
and
push
test
aaa
imul
adc
or
sub
inc
pusha
cmp
andl
dec
mov
icebp
jns
in
leave
jl
fisttpll
test
leave
mov
jg
lahf
push
jecxz
jle
hlt
dec
fbld
mov
and
and
jmp
inc
mov
gs
jnp
dec
xor
dec
repnz
bound
enter
daa
daa
xchg
xchg
inc
cmp
stos
mov
xor
or
in
push
xchg
nop
xor
sbb
out
pop
mov
in
aam
lods
iret
repnz
adc
inc
adc
in
pop
aad
add
push
jb
mov
mov
lds
or
cli
into
push
mov
mov
push
ret
rcll
mov
nop
lcall
xor
inc
negl
mov
sahf
out
mov
push
dec
arpl
xor
jne
aaa
mov
sti
and
pop
pop
push
lahf
lds
mov
add
int3
or
mov
cmp
mov
insb
outsl
pop
aaa
pushf
out
lds
inc
negl
jge
mov
fmull
add
fistpl
add
ljmp
fcomps
ds
xchg
in
push
dec
rorl
test
adc
mov
sbb
in
xor
pop
arpl
std
stc
data16
jae
in
repz
cmpsb
xor
mov
gs
and
aad
test
int
jbe
addr16
mov
or
cmp
push
pushf
not
add
sub
push
subb
push
mov
jle
in
xor
xchg
lock
jne
adc
sbb
cmp
lcall
roll
stos
aad
clc
add
dec
inc
pop
into
xchg
cmp
sti
sbb
or
outsb
or
stos
in
lods
enter
mov
pop
push
sub
mov
lock
jb
cmp
stos
pop
jl
ret
arpl
lds
add
ret
and
or
cld
xor
fcmovnbe
mov
shl
jge
dec
inc
fs
icebp
jae
mov
shlb
and
dec
fldl2e
faddl
rorl
push
lock
cmp
fcomp
push
push
push
repnz
mov
out
xchg
imulb
imul
enter
in
sbb
in
outsl
sti
leave
xchg
lea
andl
movsl
in
xor
add
and
xor
mov
pop
insl
or
iret
icebp
shrl
xor
les
mov
add
ja
jnp
or
sbbl
jnp
mov
push
mov
dec
repz
cmpsb
push
dec
xchg
push
je
sbb
loop
clc
push
and
mov
lahf
xor
inc
in
dec
lock
loop
pusha
lods
xchg
dec
pop
inc
negl
popa
lcall
int
pop
dec
push
push
sub
out
cmp
xchg
in
iret
nop
xlat
adc
adc
dec
dec
add
dec
mov
sbb
mov
or
jbe
repz
add
inc
jns
hlt
push
inc
xchg
pop
sub
movsl
aam
iret
jno
push
mov
mov
push
add
push
mov
sbb
xchg
lods
push
imul
mov
lods
idivl
lea
inc
dec
in
mov
jg
or
cld
adcb
lock
sarl
cmp
sbb
and
scas
jbe
push
and
mov
mov
jecxz
xchg
and
in
cmp
dec
movaps
cmp
push
es
fwait
push
push
and
lods
cmp
mov
push
sbb
pop
pop
sbb
dec
fwait
sbb
ja
mov
outsl
pop
faddl
lds
lods
sub
and
iret
xchg
push
push
mov
cmp
sub
sbb
mov
mov
add
xorl
mov
mov
xorb
sbb
cmp
ret
and
mov
decb
jmp
arpl
cmpl
mov
pop
sar
outsl
shl
or
dec
repz
xchg
cs
inc
sub
and
mov
pop
fld
inc
mov
repz
jns
aaa
sahf
xlat
daa
sbb
mov
into
cmp
repnz
arpl
das
dec
stos
pop
insb
mov
push
mov
adc
inc
add
jecxz
cmc
add
test
jmp
xor
ja
lods
pop
push
push
ds
loop
aad
lods
imul
fstl
loopne
sbb
icebp
clc
push
mov
insl
push
fisttpl
mov
and
pusha
fsubrl
aam
cmp
jge
mov
inc
pushl
and
xchg
mov
mov
inc
inc
cli
mov
ror
pop
push
adc
or
call
xchg
pop
mov
lods
mov
daa
leave
and
xchg
pop
fidivrl
pop
lds
cmp
rol
push
subl
or
jb
inc
push
jno
jne
cld
popf
jmp
and
psubw
movsb
pop
pop
js
out
fisttps
cmp
pop
sub
dec
ficoml
es
int3
ret
out
mov
es
in
bound
ret
popf
and
andb
daa
cmpl
cli
inc
pop
dec
push
jecxz
inc
and
push
int
mov
xlat
adc
decl
add
lcall
fldenv
clc
fistl
sub
shll
in
int
std
or
repz
jge
sbb
std
aam
mov
dec
push
xchg
das
lods
sub
xchg
fdivl
sahf
jge
xor
sbbb
mov
test
ret
pusha
mov
jmp
fstps
icebp
inc
cmp
cmc
and
jbe
inc
sti
int3
mov
push
inc
jge
repz
stc
pop
xor
int
jg
fsubl
mov
xchg
push
adc
or
dec
enter
movsl
pop
nop
sahf
and
push
out
sbb
test
pushl
add
jg
in
outsb
lods
shlb
test
iret
fwait
mov
mov
xor
ret
jl
fistpl
add
adc
loope
pop
or
jne
xor
push
addr16
cmp
icebp
inc
or
jmp
imul
and
and
pop
call
test
push
dec
dec
mov
pop
and
subb
out
push
sti
std
clc
and
add
xor
sbbl
pop
pushf
pop
in
jg
loopne
roll
cmpsl
pop
xchg
ss
popf
sub
jno
and
xor
jle
push
inc
outsl
mov
lock
mov
popf
sbb
push
arpl
mov
mov
sahf
xlat
int3
lahf
push
push
or
mov
pop
aad
push
xor
enter
adc
mov
addr16
mov
insl
pop
movb
sbb
xor
cs
mov
jecxz
and
jo
test
test
xchg
pop
rorb
jb
shrl
scas
aaa
add
cmc
pop
mov
sub
ds
mov
mov
push
add
lock
pop
xchg
jno
jg
mov
outsl
xchg
push
sbb
fiadds
push
repz
out
dec
js
scas
add
arpl
imul
mov
stos
outsl
or
xchg
mov
adc
adc
push
aam
sahf
inc
jnp
sbb
hlt
icebp
icebp
test
cmp
rcr
and
call
cltd
cmp
test
mov
mov
mov
daa
push
cli
pop
rcr
fs
add
xchg
repnz
push
or
popf
push
cmp
test
dec
add
lods
inc
add
adc
ret
or
pop
in
jl
dec
sub
movsl
xor
xchg
daa
ljmp
lock
dec
sub
dec
shl
mov
pop
mov
push
nop
or
and
inc
xchg
jae
les
and
adc
pop
jne
fdivr
add
in
push
mov
and
jno
int
call
imul
fnstsw
in
cltd
shrl
cmp
push
inc
out
or
xor
jo
into
mov
ja
inc
insb
test
or
xlat
fidivrs
mov
cmp
add
popa
ss
dec
jp
push
pop
aad
mov
dec
pop
shlb
cmc
ljmp
imul
mov
jg
push
push
and
int
sbb
fsubl
andb
sub
push
mov
das
lods
gs
gs
stos
push
push
dec
xor
mov
rolb
arpl
int
add
cmp
imul
or
call
mov
dec
loope
cwtl
je
or
data16
or
mov
imul
sub
pop
lds
pop
dec
cmc
testb
xlat
cmp
mov
aas
push
sbb
push
pusha
mul
jl
sub
shlb
sahf
loopne
lds
xor
add
enter
leave
in
dec
out
add
cmc
sub
fistpll
das
dec
dec
cmp
out
adc
lock
inc
test
lea
push
add
cmp
vpshaw
xchg
inc
imul
pusha
loop
je
jae
std
and
andb
add
jl
arpl
jl
loope
cmp
jno
jne
add
jecxz
jg
cmp
stos
test
sarl
xlat
and
cmp
pop
mov
mov
push
jmp
cmp
xchg
pop
test
xchg
jmp
xchg
and
inc
popa
pop
outsl
mov
in
scas
jb
mov
imul
test
popf
mov
sbb
xor
mov
xlat
movnti
mov
icebp
popf
stos
stos
xor
sarl
icebp
test
lahf
out
jp
mov
repnz
fdivs
jmp
add
js
test
fisubrl
aas
push
mov
in
int3
es
stos
dec
fcomps
dec
hlt
outsl
iret
add
sub
cmp
mov
pushf
jb
lock
and
inc
fs
stc
rolb
mov
ja
daa
mov
orb
fxch
inc
xchg
mov
jp
test
add
stc
repz
dec
inc
and
mov
mov
cmc
sub
testb
rcrb
sub
cltd
xor
frstor
loope
mov
insl
call
out
fcomps
loopne
sarb
mov
push
nop
add
xor
or
fmull
sub
pop
leave
mov
cltd
shr
push
mov
pop
sbb
xor
push
jne
loop
xor
cld
jnp
xchg
lds
xor
imul
adc
pop
pop
stos
cwtl
enter
in
mov
jb
lahf
mov
mov
js
mov
xchg
popa
fiaddl
jb
arpl
stos
ss
sbb
sub
subl
inc
jno
loopne
ffreep
js
in
push
inc
aam
push
mov
shl
sbb
mov
insb
cs
jmp
cmp
sahf
addr16
inc
sbb
jae
and
pop
mov
jl
sbb
pushf
loope
xchg
imul
insl
pushf
outsb
ror
call
add
enter
pop
pop
bound
lea
jecxz
arpl
enter
pop
and
and
imul
mov
xorl
dec
lods
add
bound
movaps
sbb
test
and
lea
pop
hlt
mov
ret
pop
out
add
pop
arpl
jmp
aas
and
adc
push
dec
adc
push
insb
cmp
fbld
outsl
push
dec
aas
dec
jae
imul
mov
ret
push
ret
out
fs
repz
mov
inc
das
mov
mov
dec
inc
loop
mov
lcall
fcomps
mov
add
push
inc
xor
push
out
sub
dec
loope
xchg
lret
xor
aam
mov
fstps
push
lcall
sub
test
outsl
push
int
in
or
dec
filds
push
sbb
loope
sub
add
cmp
mov
mov
jmp
mov
inc
sub
sbb
xchg
daa
iret
sub
inc
in
movsl
test
sub
das
arpl
cmp
or
pop
sub
push
shll
adc
popa
dec
jne
aas
sub
in
sub
push
xchg
ljmp
ret
and
sub
fcom
dec
lret
sub
xor
mov
aam
pop
inc
std
lcall
mov
bound
test
arpl
pop
in
add
xchg
popa
pusha
xor
insb
inc
push
sub
xchg
outsl
add
xor
fdivrs
lahf
jle
pop
daa
lret
sbb
inc
push
mov
cmp
sbbb
jnp
mov
mov
adc
lret
cmp
in
push
leave
flds
ds
xchg
fldenv
pushf
sbb
jle
mov
test
sar
jae
mov
ds
mov
cmpsb
mov
fwait
dec
dec
xchg
insb
lea
out
jb
ljmp
lahf
cmpsl
scas
or
cwtl
mov
imul
outsb
inc
fldl
pop
and
fnstenv
and
pop
push
loopne
test
and
dec
dec
cmc
xchg
das
push
mov
jb
test
rcll
popa
enter
xor
jp
dec
aad
adcb
push
xlat
aam
sarb
xor
das
add
sbb
repz
mov
or
mov
inc
mov
rcrl
sub
icebp
push
add
sub
mov
clc
in
out
je
cmp
in
mov
push
scas
ret
test
jmp
cli
push
pushf
orl
enter
jl
push
test
mov
pop
push
aas
pop
mov
in
pop
shlb
ds
stos
ret
in
int
mov
push
mov
fildll
fimull
fwait
lds
cltd
pusha
sbb
int3
mov
sbb
fisubs
cmpsb
test
mov
lds
xchg
and
xchg
dec
jl
and
cmpsb
int3
addr16
andl
adc
dec
dec
sbb
repz
mov
addr16
sbb
mov
notl
clc
inc
dec
or
outsl
ret
cmp
sarb
pop
stos
dec
ss
dec
jo
lret
mov
cs
push
jb
sbb
or
mov
iret
cmp
lock
loopne
push
mov
repnz
dec
xlat
jge
negl
idivb
addl
and
adc
mov
test
addr16
inc
fs
cs
lret
sbb
and
mov
xchg
push
adc
xor
push
bound
aad
mov
push
xor
sbb
dec
ljmp
out
add
cmp
xor
pop
inc
cwtl
cld
out
stos
lods
ds
xlat
mov
jecxz
lock
sbb
add
adc
push
jo
inc
das
lock
fcompl
cli
cmc
push
sbb
bound
idiv
icebp
cmp
arpl
fimull
push
pusha
cmc
hlt
aam
shll
jp
xor
jne
jae
or
jecxz
mov
outsb
fcom
or
jo
pop
mov
and
pusha
sbb
or
das
dec
push
mov
mov
cmpsb
aaa
and
or
cltd
mov
nop
ficompl
sbb
jne
cltd
adc
pop
and
and
adc
cmpsl
aam
and
out
lea
pop
push
add
ror
into
xor
pop
pop
jecxz
jecxz
clc
mov
iret
lods
mov
hlt
imul
test
lods
xor
addr16
dec
fwait
cwtl
neg
cltd
ror
fistpll
mov
dec
in
andl
popf
adc
ja
lods
pop
xchg
imull
xchg
popf
lods
lahf
mov
fistl
and
nop
mov
jmp
push
mov
mov
mov
jae
out
mov
aad
cmpsb
dec
adc
stc
pop
sub
aam
mov
ss
movsl
les
inc
punpckhbw
adc
or
aaa
mov
inc
pusha
xlat
ss
push
inc
jne
stc
cmp
mov
data16
loop
push
stc
mov
orl
aaa
das
sbb
lock
rclb
push
pop
repnz
xchg
jl
pop
subb
stos
inc
and
shrl
mov
mov
jp
orl
cld
imul
test
shll
pop
movsl
jg
int
mov
or
or
xor
lds
das
int3
cmp
mov
jbe
int
cmp
nop
inc
mov
adc
ret
push
lret
pop
mov
out
xchg
sbb
es
js
xchg
loop
mov
stos
popf
and
cmp
pushf
stos
pusha
gs
push
out
sbb
sbb
push
push
repz
jo
cmpb
fcompl
or
loopne
cmpsb
xchg
pop
xor
gs
lds
scas
mov
fdivrl
jae
push
adc
cmp
movsl
pop
xorb
and
sbb
sbb
inc
in
cwtl
pop
xchg
jmp
adc
fs
aad
in
clc
cmp
pop
inc
rcrl
cltd
mov
repnz
dec
nop
add
pop
add
jl
fnstsw
aad
pop
sti
xor
cmovbe
fldt
mov
mov
popf
test
sahf
mov
iret
ljmp
out
add
in
int3
mov
xor
icebp
mov
ficoml
inc
iret
call
insl
icebp
jno
add
sbb
lods
cmp
sub
mov
adc
rorb
fnstenv
cli
jmp
test
xor
fs
in
nop
cltd
ja
movsl
ret
xchg
xor
cmp
xchg
les
pop
push
push
leave
and
mov
pop
adc
divb
mov
out
ret
in
xchg
sub
movsb
sub
mov
pop
sar
sub
stc
mov
pushf
pushf
and
data16
dec
loopne
pop
mov
xchg
loopne
loopne
divl
fwait
sbb
push
test
nop
lods
push
shlb
jb
adc
or
ds
cmp
mov
bound
mov
sbb
test
jne
and
lea
mov
pop
imul
push
inc
popa
mov
scas
cmc
icebp
ret
mov
shlb
ret
and
stc
sbb
add
sub
orb
sub
dec
mov
or
push
mov
fdivl
push
aas
shl
xchg
mov
insl
mov
add
push
call
loop
in
loop
cs
jb
loop
cs
aam
movsl
test
lock
xchg
pushf
scas
lods
sub
adc
cli
fisubrl
or
inc
push
adc
pusha
loop
shrl
test
cmp
or
jmp
in
inc
aad
std
sar
fbld
ja
scas
pop
jmp
ret
repz
pusha
jbe
das
insl
add
and
cmpsl
popf
insb
lahf
dec
push
outsl
jnp
dec
int3
aad
xchg
push
adc
or
fidivl
cli
push
and
push
mov
fldt
out
mull
aaa
in
xchg
and
jmp
mov
xchg
call
daa
pop
in
dec
fisttpll
push
adc
lods
jo
fmul
and
dec
fstpt
or
sti
mov
sub
mov
rcl
negb
jle
loopne
mov
add
stc
xchg
out
stos
mov
jg
mov
cmp
sbb
or
pop
jne
push
std
lods
pop
sbb
addr16
jbe
sbb
mov
fimuls
or
fwait
jo
aam
dec
push
or
roll
cmp
ret
in
mov
out
inc
jl
jb
sbb
lods
adc
insb
push
and
dec
inc
aad
pop
mov
je
inc
xchg
stc
inc
fdiv
test
sbb
sahf
cwtl
adc
mov
or
aas
imul
sub
jno
mov
jae
repnz
out
call
scas
add
lock
fadd
mov
cmp
testl
xchg
decb
loop
inc
sbb
lahf
inc
jp
out
add
xlat
dec
or
mov
xchg
enter
dec
les
ror
je
lea
mov
scas
daa
push
pop
lods
sti
ja
and
xadd
ljmp
movl
add
lods
lods
loope
inc
cli
pop
inc
repz
ljmp
sbb
rorb
scas
int3
mov
xor
mov
andb
jns
sub
and
xchg
aam
psrlq
test
mov
inc
inc
daa
cmp
cmpsb
pop
mov
jecxz
mov
push
scas
xor
cmpl
repz
gs
cld
mov
mov
add
inc
adcb
ss
jns,pn
lea
or
std
lret
mov
orps
sbb
cmpsb
pusha
or
adc
and
lods
add
testb
mov
clc
in
mov
mov
nop
repz
push
repnz
daa
jae
adc
clc
pushf
and
mov
es
xchg
xor
mov
push
mov
pop
rol
push
sbb
adc
dec
adc
sahf
sahf
and
repz
pop
hlt
adc
mov
push
pushf
or
sbb
cwtl
out
jbe
jns
mov
xor
sub
or
adc
xor
arpl
mov
in
sub
repz
pop
jecxz
ret
out
into
fmuls
jmp
insb
pop
stos
push
test
inc
dec
std
adc
add
mov
orl
cwtl
mov
xor
mov
push
inc
mov
sbb
push
loop
mov
pop
fnstsw
std
sbb
jg
arpl
mov
sahf
add
jns
and
outsl
xor
mov
sbb
ljmp
sub
push
mov
in
addr16
mov
stc
adc
add
dec
push
adc
sti
mov
aad
outsb
cmp
mov
fcoml
sbb
clc
pushf
inc
leave
aaa
subl
cmpsl
mov
inc
dec
popa
and
lods
movsl
ret
xlat
test
jmp
xchg
in
mov
data16
pop
cmpsl
fsubl
rorl
pop
push
mov
out
jbe
pop
adc
mov
enter
mov
lock
loope
es
pop
jmp
scas
add
lods
inc
lahf
push
push
inc
jl
push
aas
call
xor
xor
jge
sti
icebp
dec
mov
pop
test
les
outsb
das
push
pop
lahf
in
push
dec
das
inc
out
mov
aad
and
inc
pusha
dec
lods
adc
test
adc
jmp
lahf
adc
lock
popa
mov
mov
hlt
mov
call
repz
test
jnp
push
add
rcll
cmp
fldl
gs
sub
aad
dec
loop
mov
add
adc
leave
xchg
pop
and
lahf
rcrb
out
jmp
dec
stc
sub
icebp
mov
push
push
pop
out
mov
inc
mov
or
fsubrs
hlt
or
xchg
sub
inc
dec
cld
push
aas
test
pop
imul
inc
xchg
mov
or
insb
or
jo
hlt
adc
inc
mov
and
cld
adc
add
lret
mov
aad
cld
es
in
bound
std
mov
sub
cwtl
xor
inc
adc
sub
sahf
xor
sbb
dec
jecxz
mov
push
pop
and
aad
jne
adc
add
and
fidivrl
dec
add
hlt
popa
sub
gs
ja
jns
jmp
inc
sub
jno
shr
jle
and
scas
sbb
sub
dec
loope
mov
or
adc
orl
enter
leave
test
shl
jmp
sbb
test
cltd
and
mov
and
add
stos
out
push
loope
mov
inc
scas
jo
test
jp
stos
mov
push
fisubrs
insl
pop
xor
sti
lcall
out
movsb
push
xchg
divl
cld
jmp
mov
sub
and
and
mov
dec
cs
xchg
mov
in
xor
mov
cmp
inc
pop
mov
or
aam
xchg
or
stc
jns
xor
aaa
sbb
pop
sbb
aaa
inc
inc
adc
cmp
mov
sbb
sub
mov
scas
repz
jbe
and
mov
xchg
xchg
jl
aad
cwtl
jae
movsl
inc
mov
or
call
mov
icebp
inc
xor
mov
pop
jp
loop
add
fstl
ss
push
sub
mov
push
jmp
push
pusha
ds
into
call
int3
test
leave
out
push
dec
cmp
or
mov
or
jl
inc
dec
lea
adc
clc
mov
mov
pop
popf
pusha
sbb
dec
aam
lret
mov
jb
sub
arpl
mov
gs
mov
stos
add
push
add
repz
xchg
jle
ret
mov
xchg
mov
es
cmp
ljmp
jae
rol
fisubs
dec
sti
addb
xlat
mov
adc
mov
dec
lock
sbb
popa
mov
sub
jmp
sahf
sbb
pop
in
lahf
sahf
cld
mov
jno
push
loope
aaa
fiadds
or
adc
stc
jg
jmp
std
aaa
movl
inc
ja,pt
mov
push
cmp
repnz
cmpsb
sub
mov
mov
movsb
dec
movsl
imul
fisubrl
iret
xchg
rorl
movsb
sub
aad
mov
pop
add
jns
xor
es
sub
stc
leave
popf
pop
out
adcb
out
rcrl
mov
xlat
loopne
mov
lahf
inc
ds
dec
out
push
jb
into
push
lock
mov
lds
xchg
daa
popf
or
mov
or
add
fnclex
xor
nop
lods
fadds
push
jp
lahf
add
aas
pop
fsts
es
xor
cmp
aas
mov
pop
ds
mov
add
xchg
lret
lcall
mulb
cmpsb
cmp
int
mov
jecxz
sub
xchg
dec
dec
mov
in
fsubrs
in
and
push
loope
fcmovnu
bound
xor
xor
inc
call
arpl
sub
jle
lahf
pop
xchg
jae
jae
sbb
dec
outsl
imul
adc
inc
mov
sub
and
icebp
clc
lea
sub
adc
dec
sub
xchg
jle
mov
bound
mov
loopne
shlb
jne
outsb
pop
int
push
mov
jno
xchg
push
iret
lret
push
sub
pop
icebp
dec
adc
outsl
xchg
dec
fcompl
roll
out
ljmp
push
mov
mov
fsubrp
je
imul
out
or
mov
sub
frstpm(287
test
inc
cs
add
in
xchg
stc
test
xor
xor
in
inc
movsl
lods
dec
pop
dec
pop
adc
fstpl
fisubs
xchg
jno
pop
arpl
xchg
sbb
dec
test
stos
inc
and
add
test
and
lcall
xchg
pop
and
popa
ljmp
pusha
out
jb
or
insl
adc
scas
dec
hlt
mov
xchg
in
jo
xorb
adc
ljmp
sub
cltd
adc
ficomps
cltd
loop
and
push
lods
in
int3
addb
inc
push
aaa
adc
mov
rol
push
das
stos
mov
jle
out
mov
push
push
add
rorb
mov
jae
cwtl
iret
mov
fcomps
jne
pop
dec
add
lds
cld
sub
pop
mul
inc
adc
outsb
jle
imul
mov
out
inc
dec
rol
mov
xor
and
sub
je
add
xchg
in
mov
push
mov
lods
adc
inc
ljmp
lahf
lods
cmpsl
fidivrl
lret
ret
push
fisubs
aad
adc
hlt
adc
bound
lret
clc
inc
sub
xchg
lret
ret
mov
popa
jns
sbb
std
test
cmp
pushl
adc
adc
mov
loop
push
lods
mov
cmpb
scas
aad
mov
int3
xor
stc
xchg
inc
mov
into
and
or
adc
lret
rcll
sbb
dec
push
jne
adc
rorl
sbb
clc
mov
xor
and
mov
mov
xchg
pop
inc
mov
aas
adc
dec
sahf
mov
add
lret
add
iret
pop
stos
mov
ja
xor
rolb
sbb
mov
mov
mov
mov
jne
adc
mov
mov
test
add
aaa
icebp
insl
in
mov
dec
push
out
shrb
icebp
and
jnp
and
inc
mov
cpuid
lar
cmpsl
jns
cli
pop
push
shlb
sbb
daa
push
setle
adc
sbb
push
fisubrl
das
mov
cmpsb
mov
jge
xor
hlt
cs
test
lods
mov
xor
sbb
ljmp
inc
pop
test
and
push
or
imul
sub
sbb
mov
xorb
mov
or
fstpt
test
pop
out
sub
ror
jnp
xor
icebp
test
push
in
pop
push
idivb
mov
xchg
sti
push
test
sbb
loope
fcoms
xchg
sub
cmp
test
jmp
stos
jge
lahf
and
pop
inc
mov
lds
roll
jae
sbb
pop
ss
xchg
sub
sub
mov
out
push
in
iret
out
mov
add
data16
fisubs
rolb
in
mov
add
clc
clc
test
fcoms
mov
sbb
jge
xchg
outsb
dec
movsb
mov
addr16
cmpl
sbb
mov
test
sbb
jns
lds
fisttpll
and
sbb
enter
test
ljmp
std
xlat
xchg
rep
icebp
push
cmpsl
adc
fdivs
fwait
mov
inc
mov
test
iret
popa
inc
and
mov
mov
lods
add
insb
lods
pop
xor
pop
aas
es
not
pushf
into
aas
test
jb
jo
jo
mov
ja
mov
lret
xor
jg
gs
add
sbbl
adc
cwtl
iret
push
insl
xchg
mov
or
fisubrl
leave
inc
les
and
fwait
mov
rcrl
inc
mov
pavgw
jae
pop
fildl
outsl
shll
inc
clc
adc
pop
adc
clc
mov
les
add
hlt
jecxz
add
movsl
lcall
aad
ret
sub
test
add
mov
pop
das
sahf
out
shr
sub
arpl
adc
ficompl
into
ret
and
iret
inc
pop
mov
inc
imul
cltd
aad
or
int
fwait
cmpsl
push
arpl
push
cmp
enterw
ret
mov
or
jns
pop
cmpsb
jb
push
in
jg
les
cli
jbe
mov
adc
push
shl
testl
insb
scas
adc
je
sbb
mov
shl
mov
flds
aad
dec
cwtl
lret
cmp
jne
inc
mov
lods
insb
xor
loop
loope
cmpl
and
xor
out
mov
cmp
and
mov
dec
jo
ljmp
add
dec
outsl
andl
or
pop
pop
ss
into
cmc
mov
loope
cmp
push
je
call
xor
out
inc
fwait
scas
fistpll
andb
push
leave
mov
jmp
dec
je
icebp
pop
out
cs
punpckhbw
sub
nop
test
data16
sbb
xchg
xchg
bound
lret
cmp
stos
ret
pop
adc
mov
push
sub
cmp
ja
das
icebp
pop
add
or
ret
notl
dec
imul
or
orb
or
cwtl
aam
adc
pop
push
fstl
pop
lret
std
push
mov
inc
pop
xor
gs
stos
aas
icebp
pop
out
dec
add
or
jle
xchg
test
stc
scas
int
movsb
movsl
dec
lcall
push
test
pop
clc
dec
adc
jbe
hlt
jp
xchg
inc
adc
repz
mov
jbe
add
leave
hlt
gs
sti
dec
sub
lods
jg
add
cli
aad
nop
mov
ds
insl
xchg
stc
mov
xorl
xor
and
pop
mov
ljmp
aaa
xchg
ret
in
sub
sub
mov
inc
inc
mov
jno
js
xor
adc
mov
cmp
xor
cli
cmp
xchg
jecxz
xor
inc
jmp
push
and
dec
add
mov
scas
xchg
arpl
jbe
jp
mov
movsl
sbb
fistl
hlt
mov
xor
into
pop
pop
xlat
inc
mov
sbb
xor
fadds
add
cmpsb
xor
rol
stos
repnz
ret
mov
gs
clc
mov
sub
jg
addr16
mov
and
sub
clc
push
pop
jecxz
pop
inc
out
inc
ljmp
dec
cmp
push
mov
inc
cmp
dec
inc
cs
test
pop
dec
in
mov
dec
jbe
pop
cmpl
mov
pop
push
inc
outsl
pop
and
out
sbb
lock
je
xchg
repz
fdivl
test
or
mov
jg
out
in
jnp
jmp
pop
das
je
imul
push
scas
jbe
add
mov
call
insl
dec
sub
push
pop
and
lahf
mov
mov
and
jmp
shll
xchg
out
fnstenv
int
fistpl
iret
insb
cmc
sarb
out
jbe
imul
mov
lret
mov
sbb
test
loope
xlat
mov
decl
mov
mov
stos
lcall
outsb
out
ret
ss
sbb
addr16
and
mov
adc
add
sbb
or
mov
stos
push
mov
das
insb
leave
add
dec
stc
inc
aaa
xchg
xchg
cmpsb
sbb
scas
pop
push
mov
int
pop
inc
mov
mov
push
add
xor
adc
lret
adc
jno
lcall
or
jle
inc
out
scas
inc
out
dec
iret
pop
mov
push
imul
gs
inc
aas
inc
lcall
mov
aad
adc
and
xlat
lahf
adc
mov
push
cld
lret
stc
cmp
mov
repz
sbb
in
out
in
jbe
aam
into
push
inc
fisubl
fcoms
xor
ja
loop
hlt
mov
sbb
lahf
repz
fcoml
cmp
add
out
test
mov
cwtl
mov
dec
mov
xor
adc
je
or
and
pop
xchg
pop
pop
pop
pop
and
mov
clc
test
jmp
aam
movl
les
mov
aad
inc
add
clc
mov
sub
cmpsl
dec
jmp
mov
adc
cmp
movsl
ss
fisttpll
rep
icebp
das
dec
lea
jmp
jo
pop
sbb
inc
aam
pusha
clflush
adc
jmp
adc
hlt
jg
sub
jo
add
scas
cld
pop
enter
add
push
sbb
lahf
fistpl
lahf
sub
xorl
shlb
notl
js
or
shrl
pop
psubb
sbb
data16
fidivl
push
fisttps
inc
cmp
push
clc
and
xchg
xchg
jl
xor
insl
lcall
test
lret
cwtl
xor
pushf
pop
push
push
sbb
sub
push
xlat
xchg
rcl
ret
mov
or
imul
push
call
iret
call
pusha
cmp
jmp
mov
filds
in
xchg
xlat
add
or
xchg
push
sub
mov
jo
shll
and
rclb
jnp
aam
mov
std
and
lcall
adc
out
lret
jg
push
mov
adc
cmpl
and
popa
movsb
mov
xchg
cwtl
call
jp
loopne
test
int3
enter
cmp
sahf
loopne
cmpb
movsb
jge
xor
mov
stos
push
jecxz
sbb
lds
mov
in
push
cmc
push
out
jbe
add
mov
jne
mull
adc
inc
sbb
test
xlat
es
addr16
or
fistps
lret
adc
div
dec
or
or
sbb
cwtl
adc
data16
lahf
and
jae
insl
cmpsb
mov
in
insb
xor
cmc
addl
xor
test
xor
in
and
push
test
into
or
pop
jb
adc
dec
pop
mov
inc
cli
ffree
xor
and
pop
dec
push
inc
loope
add
loopne
pop
mov
iret
adc
popl
inc
jle
cmp
bound
ds
xor
push
inc
or
bound
popa
cmp
std
test
dec
xchg
jnp
ss
in
or
sbb
lcall
pop
xchg
cmp
cwtl
push
jne
into
adc
xchg
testl
jle
test
mov
mov
sub
inc
outsb
xor
xor
push
inc
scas
xchg
xor
dec
pop
jne
jge
mov
repz
stc
js
add
mov
dec
gs
pop
fwait
push
dec
loopne
outsl
frstor
lret
data16
cmp
or
pushf
dec
push
clc
icebp
jmp
ljmp
cmpsb
cltd
lods
and
cs
fdiv
xlat
push
rcll
push
andb
daa
std
sti
into
cmp
hlt
fidivrs
stos
adc
sti
or
loop
and
xor
and
aad
into
clc
xchg
scas
push
xchg
sbbb
cmp
inc
push
mov
or
cmp
dec
pop
cs
xchg
outsb
xchg
fwait
popf
outsl
rorl
mov
bound
and
fs
inc
mov
call
inc
mov
pop
jbe
jnp
arpl
xlat
and
pop
mov
jg
test
inc
icebp
xchg
mov
out
cmpsb
xor
push
in
cmpsb
das
jg
les
push
and
push
mov
js
bound
stos
mov
dec
sbb
call
pop
mov
imul
sub
xchg
pop
jb
dec
shrl
mov
shll
roll
rcrb
stos
xor
std
icebp
into
daa
sahf
pop
shr
enter
push
add
or
mov
gs
xchg
repnz
jmp
movsl
xchg
jle
dec
sti
aam
cmp
mov
lret
xchg
cmpsb
mov
sbb
and
sarl
push
leave
movsl
jne
mov
sarl
rdpmc
jbe
rcll
mov
sbb
daa
mov
rcrl
int3
lock
push
imul
inc
fucomip
lods
lret
cltd
movsl
cwtl
cmc
ja
xor
jg
ret
xchg
inc
pop
sub
in
adc
cmc
or
jno
sahf
fstl
or
push
bnd
out
pop
stos
add
pop
mov
lret
cmp
dec
mov
mov
cli
xchg
daa
xchg
test
fsubl
testl
sub
cs
jns
aad
stc
pop
loop
xor
mov
and
cwtl
adc
adc
std
jo
ret
in
push
popf
or
inc
lods
cmpsb
push
sarl
enter
and
int3
std
insb
rorl
lcall
clc
jmp
and
call
mov
outsl
dec
js
pop
push
rol
inc
arpl
adc
jbe
lret
jne
pop
push
lret
dec
sub
lret
xchg
mov
mov
test
out
fidivl
mov
movsb
js
repnz
movzwl
dec
adc
lahf
pop
test
mov
shrl
imul
movsl
mov
push
dec
sbb
or
jb
cmp
movl
imul
xchg
imul
push
test
xchg
movsl
shrb
ds
cmp
mov
xorb
jne
stc
and
sti
mov
fs
arpl
lock
lcall
sbbb
mov
fcomi
and
repz
pop
push
ljmp
jno
enter
loopne
add
lcall
int3
inc
in
mov
mov
leave
push
mov
adc
std
sub
xor
jl
mov
leave
xchg
rcr
mov
mov
cltd
xchg
fistpl
inc
pop
xor
fwait
cmpsb
fwait
mov
push
xchg
xchg
sbb
inc
imul
dec
fdivs
inc
repnz
add
orl
lock
mov
xor
out
outsb
xchg
inc
daa
add
or
jb
dec
out
jmp
and
jle
into
add
aad
out
sub
jo
int
xor
fldt
jge
jmp
jecxz
sbb
repz
pop
xor
xchg
add
je
popf
push
jo
xchg
xor
mov
lret
in
frstpm(287
daa
dec
cmp
sbb
dec
mov
push
cli
sub
cmp
mov
rol
add
cli
mov
insl
dec
aad
cmpsl
mov
sub
mov
sbb
mov
fadds
hlt
nop
pop
mov
push
fldenv
test
xchg
and
sub
aaa
clc
lods
push
test
add
pop
mov
mov
mov
movsb
push
and
adc
add
mov
jmpw
xor
mov
inc
jle
jns
sbb
jo
xchg
push
lds
outsl
xor
xor
and
adc
jecxz
idiv
push
fs
or
jmp
scas
mov
inc
adc
test
sarl
mov
orb
cld
dec
and
into
sbb
scas
int
add
pop
pop
xor
dec
mov
scas
pop
lret
push
lock
add
push
and
inc
hlt
xchg
sub
mov
js
bound
add
decl
dec
xchg
push
addr16
test
and
or
clc
push
out
das
and
mov
decl
mov
daa
jns
scas
mov
inc
movsb
dec
fildl
stos
cs
dec
cltd
bnd
aaa
imul
sub
mov
lods
pusha
xchg
sub
pop
xchg
shrl
mov
push
xor
jmp
fldt
pop
lret
out
sub
outsb
mov
or
mov
jg
loopne
sahf
sub
shlb
mov
fsubrs
outsb
shll
adc
lea
sti
jmp
inc
or
cmp
imul
jl
out
dec
mov
aaa
lock
mov
cmc
pushf
sub
loope
mov
pop
mov
bound
lods
into
sbb
jle
lahf
add
hlt
and
das
add
push
adc
cmp
scas
jns
push
inc
insb
je
jmp
xor
in
out
cmpsb
fdivs
xlat
pusha
popf
cmpsl
add
inc
inc
ljmp
movsl
cs
and
xlat
xlat
jne
rcrb
and
std
pop
fucomi
mov
xchg
movsb
jmp
test
insl
xchg
aam
in
pop
dec
ljmp
je
sahf
loop
mov
sti
cvtpi2ps
filds
adc
or
inc
out
out
lods
pop
icebp
pushf
cwtl
cli
stc
jnp
sub
xor
cmp
push
imulb
lea
stos
jmp
mov
test
adc
xchg
dec
aad
stc
out
xchg
fsubrs
shrl
aam
pop
les
js
fcmove
int3
cmp
dec
sbb
sti
ljmp
sub
or
lahf
add
sub
jmp
xor
or
or
hlt
lods
and
addr16
pop
lret
fcoml
jae
adc
roll
and
fdivl
ljmp
push
popl
out
jae
enter
fsts
and
popa
sti
jmp
fcoml
sub
adc
xchg
scas
pop
inc
sti
pusha
lea
jns
lock
pop
loope
movsl
push
cmp
cmp
idivb
int3
mov
int3
loope
fucom
int
scas
cmpsl
push
roll
and
fcomi
inc
sbb
movsl
add
leave
inc
popf
mov
pop
cmp
sbb
pop
jne
flds
fsubrl
push
pop
ss
sahf
mov
ds
sahf
mov
jge
jecxz
mov
adc
sbb
out
mov
scas
fsubrs
daa
xor
cmp
or
xor
loopne
xchg
cmpsl
pcmpgtb
outsl
dec
pop
jns
leave
xchg
pop
out
mov
and
mov
icebp
ret
popa
adc
mov
push
ss
imul
xchg
pop
xor
adc
addb
ret
or
lock
adc
sub
mov
daa
inc
add
testb
mov
aaa
xor
or
shrl
int
xor
pop
dec
jne
and
mov
mov
test
shll
fdivl
pop
test
push
adc
adc
pushf
test
mov
and
outsl
mov
std
push
and
dec
jae
and
or
fimuls
jno
int
jns
jno
sub
xor
adc
je
in
mov
cmp
push
sbb
into
pop
xchg
lds
jmp
movsb
mov
int3
test
daa
cmpsb
sbb
fsubrs
stc
jle
inc
mov
cmp
push
aam
xchg
in
lock
inc
mov
aaa
je
imul
sub
cs
lds
stos
cli
pop
dec
adc
xrelease
in
inc
pop
pop
out
sbb
movsl
aas
mov
popa
ret
jbe
pop
outsb
dec
aam
jo
lahf
jge
inc
cmp
das
sbb
push
dec
data16
xor
outsl
adcl
sub
shll
mov
ja
scas
scas
inc
xlat
and
nop
test
sbb
adc
or
pop
mov
xor
aas
mov
sahf
fdivrs
fs
into
jecxz
outsl
test
inc
out
dec
mov
or
push
and
lret
inc
xchg
mov
push
test
int
mov
inc
out
adc
pop
dec
push
or
ja
mov
repz
adc
pop
out
and
frstor
shlb
and
jge
jmp
out
inc
pop
pop
lcall
inc
sub
popf
mov
xchg
stos
insb
push
aam
mov
lds
data16
adc
inc
sar
cs
test
loopne
inc
addr16
scas
sub
mov
repz
call
lods
stos
jle
jo
lret
shll
mov
fucomip
jne
sub
sbb
jnp
sar
add
lods
push
xchg
shll
lret
negb
xchg
add
je
mov
jp
sbb
push
add
or
fs
sti
and
mov
inc
xchg
sbb
pop
ja
out
inc
leave
xchg
mov
lds
jecxz
je
jo
mov
comiss
ror
adc
cmp
imul
cmp
sbb
neg
hlt
shlb
jg
bound
divl
jae
mov
and
pop
pop
or
cwtl
rcrb
jp
jno
and
cs
loopne
mov
int
cmp
and
daa
sahf
push
jbe,pn
in
cwtl
push
jbe
pusha
jmp
push
aas
test
mov
mov
pop
push
push
xor
xorb
scas
jg
ret
out
scas
lret
xchg
cmp
out
rclb
or
jno
jp,pn
lret
push
cwtl
sbb
lret
outsb
fs
sbb
sbb
sub
in
sub
and
mov
jmp
fcomps
cmp
popf
mov
in
or
cmp
idivb
mov
js
ja
jne
pop
and
jl
and
dec
pop
stos
add
add
pop
cmpsb
pop
sbb
adc
ja
add
repz
cmc
mov
sub
call
outsb
pushf
iret
shll
bound
mov
add
js
mov
or
jle
add
shlb
push
adc
or
icebp
jnp
push
sbb
sub
sbb
sahf
bound
cs
sub
enter
imul
sbb
xchg
sahf
pop
add
xchg
cmp
mov
fwait
test
add
mov
add
push
push
dec
ds
adc
adc
stos
je
inc
xchg
lock
stos
ret
inc
fxam
aam
pop
jae
dec
popw
push
sti
pop
pop
enter
dec
jg
pop
imul
push
into
dec
jo
inc
out
mov
test
dec
pop
mov
pop
scas
cmp
in
divl
adc
xchg
pop
outsl
fdivl
xor
mov
jmp
and
out
pop
pushf
ret
call
cltd
outsb
cld
testb
out
xor
in
and
xchg
adc
push
addr16
out
xor
jo
fmull
orl
cmp
push
test
and
scas
cli
or
iret
popf
lock
int3
mov
and
aam
sub
or
xor
or
cmp
out
inc
je
loopew
outsb
ret
add
aas
fsubs
gs
xchg
jbe,pn
stc
sbb
fimull
pop
cmp
mov
inc
xchg
pop
xchg
add
popa
push
in
mov
fldenv
add
icebp
pop
aam
mov
pop
inc
stos
add
test
mov
xor
xor
dec
in
int3
mov
gs
cmp
xchg
cmpsl
mov
test
ja
cmpsl
movsl
mov
popf
jl
and
test
psubusw
ficompl
jle
mov
or
mov
and
cltd
jg
scas
inc
sbb
dec
mov
cmp
xchg
xor
and
and
ss
push
mov
cmpsb
daa
and
pop
hlt
or
adc
fists
xor
in
adc
mov
lock
test
xor
xlat
int3
adc
inc
mov
in
mov
xchg
and
mov
fs
jle
fnsave
into
xor
push
add
and
faddl
ja
stos
inc
pop
pop
fadd
mov
cmp
imul
mov
movhps
jmp
jmp
mov
adc
inc
push
or
test
outsl
pop
cltd
jbe
shl
pop
and
sbb
into
into
das
insb
daa
inc
xchg
lret
xchg
mov
test
pop
cmp
xchg
push
inc
mov
mov
jecxz
mov
in
cmp
imul
pop
mov
pop
mov
sbb
xchg
mov
jecxz
mov
sub
push
ljmpw
out
aad
or
fldcw
ds
gs
adc
push
icebp
icebp
dec
scas
xor
cld
dec
lea
adc
mov
and
scas
xchg
cli
aaa
push
sti
add
xor
in
mov
popf
std
pop
mov
sub
in
jbe
imul
inc
push
push
sarb
xor
pushf
scas
jmp
imul
dec
daa
lahf
add
mov
fistps
sub
aas
jae
inc
cmp
sub
movsl
push
xchg
addr16
inc
xchg
addl
inc
mov
xchg
stos
add
pop
clc
je
mov
fists
lea
fstpt
inc
cmp
mov
push
mov
rolb
mov
push
inc
dec
insb
test
xchg
imul
rolb
cmp
cltd
xchg
sub
add
jo
cwtl
push
pop
cwtl
sub
xorl
push
mov
fstp
or
imul
adc
jg
fsubrs
inc
mov
dec
int3
and
jg
xor
cmp
jno
loopne
stos
jg
in
sbbb
int3
dec
dec
or
pop
cmpsl
stc
lret
lea
pushf
flds
cmpl
pop
lret
enter
rorl
in
push
cli
sub
outsl
adc
test
stos
in
xor
scas
sub
sbb
leave
push
insb
xor
lret
ss
pop
ret
add
popf
repz
pop
adc
dec
or
adc
ret
rcrb
scas
sbb
notl
fucom
loope
out
les
add
pop
xor
mov
xor
jl
pop
aaa
test
push
mov
jge
jno
xor
sbb
mov
in
sub
add
ds
int
into
packsswb
ss
aad
xor
adc
pop
in
cmc
pop
pop
sbb
pop
das
or
pop
lods
lret
sub
ss
ror
lea
and
pushf
sbb
fistpl
push
scas
cmp
or
or
dec
stos
popf
fldenv
push
loope
push
fs
fdivs
jp
cmpb
cmp
movaps
xor
xor
or
aad
sub
aam
out
push
and
jge
add
sbb
ljmp
loopne
sbb
ljmp
cmp
fstpt
icebp
into
cmp
push
out
push
adc
and
adc
ret
hlt
xchg
add
stos
mov
fdivs
mov
inc
aaa
mov
mov
sub
fidivrl
das
mov
pop
cmp
insl
pop
or
mov
cltd
mov
mov
je
je
cmp
call
ja
push
pop
lahf
popa
mov
loope
add
les
movsl
lods
iret
pop
nop
adc
pop
and
lods
imul
cmp
cld
pop
jno
mov
mov
repnz
mov
pop
aas
inc
xchg
rol
lcall
pop
test
in
psrlq
inc
into
xchg
jmp
push
sahf
mov
cli
fisttps
ds
fdivl
xchg
adc
pop
mov
or
testl
push
xchg
xchg
adc
pop
ss
and
sbb
push
add
or
divl
nop
add
jne
pop
mov
jp
cli
ljmp
pop
push
cli
leave
ja
push
mov
lea
xchg
sub
fidivl
pop
je
xor
cmp
sti
pop
add
mov
or
dec
bound
pop
cs
lahf
lock
clc
addb
push
les
pop
iret
test
xor
popf
fisttpl
loopne
test
aad
xchg
jl
adc
nop
jns
rcll
adc
addr16
bound
lea
repz
xchg
dec
jno
ja
lret
mov
cmp
mov
test
popf
push
cmp
filds
cmp
lods
iret
repz
addr16
add
mov
push
cmpsb
pop
in
sub
in
test
pop
outsb
in
dec
out
pop
aas
andl
pop
dec
sbb
sbb
sub
mov
mov
dec
sub
sub
xor
xlat
inc
cmpsb
push
out
cmc
leave
xor
je
test
and
cmp
popf
mov
test
mov
cmpsl
bound
or
adc
sti
and
scas
push
push
cmpsb
or
ficomps
inc
sub
sbb
cmp
arpl
es
icebp
push
clc
sub
mov
pop
push
jb
xor
sbb
mov
gs
xor
daa
decl
sub
mov
cli
ds
mov
mov
sahf
stos
je
ret
xchg
test
inc
int3
cmpsb
inc
icebp
xchg
sti
enter
movsl
add
pop
adc
and
add
out
xchg
ss
sub
dec
push
into
addr16
aaa
push
adc
push
push
clc
xchg
mov
dec
mov
mov
mov
push
pop
addr16
bound
rcrb
jle
jbe
shrl
ret
aas
ja
push
cmp
cmp
iret
mov
jg
mov
rorl
and
mov
pop
iret
ja
daa
pop
mov
jecxz
push
cmp
in
jle
in
out
sub
arpl
mov
or
adc
fnstcw
mov
mov
xchg
aad
dec
ret
loopne
adc
cwtl
pusha
negl
in
push
push
jmp
cmc
push
inc
sbb
imul
repnz
ljmp
add
mov
xchg
ss
out
inc
mov
sub
xor
stc
mov
xor
mov
push
negl
sti
pop
sbb
inc
test
js
sahf
pop
das
loop
je
dec
and
or
inc
dec
jo
testl
test
enter
xchg
mov
pop
mov
dec
inc
inc
or
out
call
or
push
int
push
push
adc
mov
pop
mov
mov
mov
xor
push
mov
fwait
stos
bound
add
xchg
pop
test
jmp
lret
and
dec
test
pop
fsubp
xor
lods
inc
icebp
repz
int
adc
lret
je
into
sbb
test
ficomps
enter
imul
movsb
jae
dec
sahf
inc
mov
xchg
adc
out
loope
mov
pusha
lret
pop
or
rolb
imul
mov
cmp
fcoml
cmovb
fisttpl
pop
rcrb
pop
cltd
pop
and
lods
sti
cmc
adc
rorl
pop
cmc
repz
lcall
pop
les
lcall
cmp
sub
dec
jb
or
lods
inc
out
mov
jbe
inc
sbb
sub
mov
push
aam
fimuls
xor
orb
outsb
inc
cmc
ds
mov
imul
add
rol
xorb
int3
pop
je
mov
lea
mov
mov
xor
mov
inc
sub
ja
adc
xchg
aaa
mov
xchg
daa
lret
sbb
mov
and
ja
shrl
xchg
out
dec
push
pop
mov
push
cmp
dec
sub
mov
dec
lds
mov
scas
sub
cmpsb
sbb
iret
push
mov
sub
dec
mov
loopne
add
hlt
inc
mov
mov
sub
ljmp
and
jnp
cmp
sahf
fsubr
rclb
sti
test
call
dec
ret
inc
xchg
adc
cmp
push
jno
jae
shrb
arpl
in
lahf
xchg
sbb
sub
ds
pusha
sti
fscale
imul
mov
lea
xlat
sbb
enter
in
sub
out
lret
pop
dec
repz
mov
shrl
jae
cmp
xor
xchg
pop
cmp
in
pop
sets
arpl
add
xchg
ret
cmp
imul
lret
mov
lret
or
outsl
and
and
adc
lcall
mov
or
add
xor
int
enter
sub
insl
push
mov
out
dec
adc
aas
out
sbb
nop
repz
cmp
mov
mov
shr
jmp
inc
add
or
mov
leave
orb
jb
mov
lea
push
dec
lods
jg
fsts
lds
sbb
js
push
pushf
fs
insb
repz
jmp
pop
xchg
decl
jg
fwait
jmp
pop
push
sbb
shlb
and
iret
cld
in
mov
mov
mov
sub
xchg
shl
mov
aam
shl
or
xchg
out
lods
js
sahf
rsqrtps
fbstp
mov
push
scas
cld
test
xor
inc
push
fdivrl
sub
les
aam
outsb
out
shrb
mov
lds
ss
pushf
jmp
int3
movsb
fldcw
or
jnp
mov
mov
popf
cmp
xchg
jmp
fstpt
inc
loop
imul
jg
jns
xor
loopne
mov
pop
push
jno
jg
js
or
ret
out
cwtl
jl
adc
sub
ret
leave
mov
js
or
rorb
fidivrl
nop
out
inc
add
shr
scas
fstps
out
hlt
dec
je
mov
js
adcb
and
imul
imul
insb
out
lret
hlt
add
and
xor
mov
dec
and
push
arpl
flds
push
xor
pushf
inc
lea
add
add
jle
subl
cmpsl
xor
out
cmp
sub
data16
jno
subb
stos
xlat
jnp
push
pop
xor
adc
cwtl
fucom
push
push
dec
jl
mov
and
ljmp
xchg
sbb
mov
rolb
arpl
ja
gs
test
and
push
or
and
shrb
int
insb
mov
and
xchg
loopne
stc
addr16
push
lret
mov
xor
enter
pop
in
stc
out
jmp
popa
fisubs
mov
inc
gs
ficoml
xchg
add
loope
aam
xchg
xchg
cmpsb
jnp
daa
push
mov
sarl
lcall
xchg
sbb
jmp
loop
cmp
popf
inc
into
mov
in
fsubrs
push
dec
scas
test
push
or
adc
or
jmp
inc
and
imul
adc
add
cld
sub
mov
ds
adc
mov
and
lret
pop
xchg
sbb
fs
lock
arpl
push
jae
jp
int
lods
fidivl
add
lret
outsb
xlat
mov
xchg
or
jp
cmp
push
push
clc
dec
js
mov
and
lods
repnz
aaa
mov
sub
xchg
mov
xchg
testl
cmp
pusha
inc
jno
bnd
jmp
es
outsl
pop
push
fstps
xchg
mov
jp
sti
dec
test
or
mov
mov
cmpsb
jno
jo
test
sbb
aam
sti
in
push
xchg
xchg
imulb
sarl
test
and
jmp
testl
nop
xchg
in
mov
push
mov
cltd
out
mov
adc
mov
xor
daa
scas
and
std
inc
pop
movsb
bound
scas
lcall
inc
cmp
push
mov
jecxz
mov
callw
inc
imul
inc
sub
push
inc
lcall
mov
outsb
cwtl
and
cltd
jle
imul
jge
and
loop
add
neg
push
cmp
push
push
fstpl
xor
cmp
mov
fwait
cld
pop
mov
ja
or
mov
icebp
lock
dec
lods
dec
sbb
cltd
in
aaa
repz
sbb
jno
enter
das
fmuls
jmp
jle
rclb
dec
push
xchg
add
sub
jl
les
adc
pop
icebp
push
sahf
mov
push
jns
fs
add
inc
mov
imul
lcall
xor
stc
or
push
roll
mov
out
lods
sarl
fwait
aam
mov
daa
vpmullw
jecxz
inc
in
movsl
lahf
pushf
mov
cmp
push
push
int
push
dec
in
sub
fisubs
xchg
aam
or
imul
shl
or
stos
clc
addr16
ja
adc
pusha
imul
cwtl
or
push
sub
jg
push
cmpsb
push
jg
outsb
inc
jo
add
int
movsl
cmp
jb
cs
dec
pop
stc
int
mov
shl
adc
das
mov
mov
lock
add
aam
xor
mov
test
divb
aam
inc
fcmove
or
loope
sbb
data16
xor
jnp
cmpsb
mov
mov
xlat
and
cmp
jae
push
sbb
fs
stos
cmpsb
imul
dec
push
lahf
mov
jno
rol
stc
cmp
mov
xchg
push
and
add
bound
add
rolb
imul
sbb
sti
in
sub
orl
outsb
mov
or
inc
std
cld
adc
push
mov
fisttpl
rcr
fabs
test
movsl
sub
jne
mov
js
lret
push
int3
ss
neg
xor
push
scas
lods
mov
xchg
out
je,pt
xor
aas
pop
in
xchg
cmp
movsl
movsl
jp
enter
in
adc
jns
cld
jne
into
das
fsubrl
stos
push
ret
aad
in
add
jno
xchg
pop
jb
inc
adc
jp
push
pushf
jb
mov
mov
cmp
gs
sub
sbb
dec
bound
in
adc
mov
mov
decb
lcall
pcmpgtd
cmp
mov
jbe
sub
inc
lock
in
mov
or
movsl
hlt
jl
fcmovnbe
lock
jecxz
jecxz
loope
daa
jno
adc
mov
or
mov
sarl
sub
adc
es
idivb
jecxz
push
mov
and
dec
sub
std
mov
or
push
ljmp
sar
mov
sbb
sub
sbb
cwtl
mov
lds
mov
scas
pop
mov
and
shll
je
and
hlt
clc
mov
dec
out
out
and
pop
jecxz
xor
das
gs
clc
dec
je
add
sub
fcomip
loope
out
fisubrs
sbb
nop
xlat
addr16
cltd
and
loopne
scas
repz
push
or
or
repnz
xchg
fistpll
jno
sub
pusha
or
and
shrl
stc
pop
fs
mov
idivl
xlat
test
jge
popf
or
pop
mov
sub
movl
jb
sbbl
mov
mov
enter
lret
insb
out
mov
or
scas
or
cld
cwtl
push
insl
jbe
xor
imul
add
daa
pop
lods
sub
dec
cmp
icebp
mov
mov
mov
push
jne
mov
push
mov
leave
pusha
add
lret
push
inc
push
arpl
inc
inc
sti
aaa
xchg
mov
and
test
imul
mov
int
push
neg
mov
xor
push
jecxz
adc
xchg
mov
lahf
or
inc
popf
add
ret
test
dec
dec
imul
and
loop
pop
fnstcw
pop
shlb
and
jb
pop
mov
mov
cmc
lock
pop
pop
sbb
enter
insb
and
loop
push
jecxz
out
xchg
push
sub
nop
cltd
and
in
cmp
xor
xchg
data16
sub
cltd
mov
js
and
incl
adc
dec
jo
imul
repnz
aaa
cs
jecxz
jns
push
cmp
xchg
dec
mov
jle
test
pop
mov
pop
mov
xor
jp
push
cmp
dec
mov
fbld
stc
aam
and
lock
ds
fcomps
add
push
xchg
and
add
cld
in
cmova
cmpsl
loope
xor
fs
or
dec
or
adc
mov
icebp
push
in
sub
jle
movb
pop
xor
shlb
mov
sahf
call
sub
or
hlt
mov
int3
pop
in
mov
out
out
cwtl
imul
mov
das
shlb
popf
ret
cli
pop
in
xor
cmp
in
cmp
insb
adc
lret
filds
lods
roll
xor
mov
and
mov
xchg
fmulp
sub
lods
in
mov
fdivl
es
inc
test
xorb
das
popf
pop
out
jno
sar
adc
push
inc
fldenv
push
mov
and
sbb
xchg
xor
push
pop
jae
add
pop
out
push
or
xchg
fists
mulb
sar
sar
push
xchg
push
loop
fcomi
addb
pop
and
iret
pop
test
fildl
pop
scas
mov
lcall
pop
adc
sti
sub
inc
in
mov
push
or
mov
loop
xor
cld
add
stc
sbb
fildl
movsb
sub
add
negb
xor
addb
xor
popl
pop
mov
cmc
cmp
daa
cmpsl
stos
xor
sbb
pop
jmp
rcll
into
mov
mov
jne
mov
push
lds
sbb
test
js
nop
or
add
stc
aaa
inc
dec
or
jecxz
imul
fs
adc
ret
ja
xchg
mov
jo
dec
fsubr
shll
add
cs
movsl
aaa
adc
scas
jl
fstpt
xor
pop
ret
adc
je
sbb
bnd
rol
jno
enter
push
add
and
das
in
out
jns
xor
out
addb
pop
push
xchg
scas
ret
and
fcomip
int
push
mov
stos
aad
pop
mov
xchg
and
fwait
bnd
popl
rolb
pop
loop
popa
test
mov
jle
jg
sbb
into
iret
arpl
and
push
movsb
dec
dec
push
aaa
scas
pop
repz
jge
mov
insb
out
add
ljmp
jmp
mov
ror
pop
mov
mov
dec
test
jnp
jbe
lods
sub
out
leave
xchg
push
push
jmp
lock
rcrb
int3
add
add
ds
psubd
in
pop
inc
or
push
cmpsb
xor
xor
xorl
out
mulb
mov
loop
std
add
ret
push
loopne
or
sahf
mov
adc
nop
fs
push
mov
aam
cltd
mov
pop
aas
das
sub
xchg
outsb
xchg
and
inc
jns
push
mov
mov
jb
xchg
cli
cld
adc
jl
aas
push
xorb
pop
cltd
fdivrl
inc
insb
mov
or
jmp
mov
int3
ja
rcr
arpl
lods
mov
push
dec
pusha
mov
dec
cld
inc
xchg
push
jns
and
sahf
pop
jne
jl
insl
mov
sbb
mov
pop
hlt
sub
imulb
sbb
cld
adc
shrl
mov
stos
add
lret
mov
dec
cli
jl
shrb
sub
xorl
adc
aaa
xchg
or
inc
fsubl
cwtl
ss
ror
adc
push
dec
testl
js
dec
pop
outsl
lds
cmpsb
mov
add
mov
imul
out
sti
pop
and
mov
xor
rorb
jle
add
pop
pop
jb
mov
test
mov
cmp
ds
xor
inc
sub
pmaxsw
rcll
xor
add
sahf
leave
mov
jno
push
loope
ljmp
subb
lods
mov
jle
xlat
scas
mov
pop
std
add
lds
imul
sbb
mov
nop
add
add
aaa
jmp
or
mov
inc
dec
addl
mov
jecxz
push
adc
push
imul
and
jns
aad
fst
push
es
pop
movsl
mov
mov
dec
mov
xchg
jae
push
ror
sub
xor
out
jno
xlat
jge
xchg
cmp
mov
ss
pop
push
mov
mov
sub
xchg
dec
imul
or
in
pusha
xor
dec
jge
pop
repnz
outsl
push
fprem1
dec
mov
jl
push
sbb
lahf
repz
int3
add
popf
mov
inc
hlt
lock
hlt
mov
pushf
mov
add
repz
out
xchg
jno
arpl
jge
adc
sbb
testb
shll
adc
jno
inc
fdivrp
pop
and
adc
sub
fidivrl
dec
xor
ffreep
lahf
push
adc
ret
xor
pop
and
cmp
out
xchg
mov
mov
nop
jecxz
jle
out
adc
mov
pop
pop
rcrb
cltd
cmp
pop
stos
cmp
cs
test
movsl
mov
jmp
mov
ret
cmp
clc
out
loope
adc
leave
in
cmpsl
mov
jle
push
or
pop
outsb
fists
test
jae
fsubp
insb
inc
or
and
and
dec
repz
lods
scas
outsb
xor
pusha
adc
out
fsubp
xor
insl
std
push
out
dec
aas
ds
pop
mov
les
mov
pushf
xorb
sbbl
loop
cld
repz
lahf
sub
jg
mov
call
push
add
sub
aam
data16
inc
mov
mov
xchg
sbb
mov
and
mov
push
arpl
cmpsb
repnz
jg
push
sub
xor
ret
sahf
ljmp
sbb
repz
je
lret
addr16
adc
aas
inc
xor
and
and
rolb
es
fildll
sarl
roll
mov
std
stc
sub
rcrl
fs
mov
jmp
rsm
pop
xor
aam
sub
stos
jmp
pop
int3
sahf
pop
mov
push
sbb
fsin
dec
out
or
mov
test
mov
imul
or
addl
add
fiaddl
shrb
cmpl
sbb
jp
add
add
jb
pop
inc
lret
icebp
push
mov
ljmp
out
mov
pop
xor
icebp
enter
inc
jno
push
addr16
aaa
cld
pop
pop
addl
iret
dec
and
xchg
push
scas
or
xchg
and
movntps
rcrb
cmp
mov
push
test
repnz
jge
pusha
cmp
mov
jae
lods
fyl2x
loopne
das
iret
sub
rcl
test
psrlq
xor
mov
or
rol
mov
add
mov
test
cmpsb
mov
out
xor
jle
insl
mov
lea
pushf
repnz
push
test
gs
lret
loope
add
das
aaa
add
ljmp
sarl
jl
imul
je
adc
pop
inc
cld
int3
xchg
outsl
andb
sub
push
add
push
outsb
add
cmpsb
movsb
and
test
jecxz
fs
ds
out
add
dec
pushf
inc
lods
ja
enter
and
xchg
sbb
jl
jns
fdivrl
loope
insb
and
pop
add
jecxz
jp
pop
jecxz
xor
into
jge
daa
pop
adc
clc
sbb
stos
rcll
mov
push
pop
outsl
sbb
fwait
mov
decb
mov
dec
imul
adc
bound
mov
pop
cmp
adc
mov
push
add
inc
cli
int3
rcrb
std
lock
cwtl
push
scas
out
fcomps
xchg
xor
ficoml
aad
mov
sub
pop
inc
std
sbb
xlat
arpl
jne
cmp
dec
inc
add
dec
sub
push
ror
jg
jecxz
inc
cmp
pop
or
out
cmp
inc
int
insl
aas
push
jp
sub
inc
mov
mov
pop
xor
cs
addl
addb
jo
xchg
clc
in
or
lock
cmp
lds
iret
shl
xor
cltd
fld
jnp
shl
or
sahf
mov
mov
rcrb
mov
dec
int
int3
or
shrl
push
inc
and
pushf
jo
in
and
test
movsl
outsb
dec
loop
addr16
xchg
test
bound
sbb
shrb
dec
push
arpl
divl
rcr
sub
and
cmp
ficoms
int3
xor
pop
sbb
subb
dec
aaa
stos
je
leave
scas
xlat
rcrl
aaa
daa
xchg
loop
lea
in
add
dec
xchg
push
lea
xor
jno
pop
call
adc
jnp
cmp
std
imul
enter
push
insl
shll
lahf
dec
add
xor
out
jl
outsl
or
icebp
and
enter
xchg
pop
mov
hlt
add
lret
sti
xchg
movb
hlt
stc
in
inc
mov
lds
mov
mov
popa
out
jmp
pop
dec
loopne
loopew
fld
mov
sub
mov
jmp
jle
or
cli
inc
add
xchg
sbb
in
push
sahf
loopne
lret
fs
outsb
push
int3
jecxz
sbb
lcall
mov
nop
lock
lret
or
fiadds
ds
sbb
jbe
aad
jecxz
xlat
mov
outsb
fidivrl
addr16
sub
and
sbb
push
jo
mov
outsb
and
clc
xlat
push
scas
std
pop
outsl
lock
rcll
psrad
jp
cmp
insb
loope
or
rolb
data16
test
mov
std
jl
xchg
sbb
jb
mov
lods
fimull
aad
sbb
push
jl
add
out
push
push
sbb
repnz
mov
pushf
clc
in
stos
adc
les
cwtl
adc
or
aaa
cmpsl
or
lods
mov
and
movsl
cmp
in
std
dec
in
or
jo
insl
fstpt
mov
lock
cwtl
hlt
mov
icebp
test
jecxz
dec
mov
xor
fucomp
xchg
pop
clc
je
je
jmp
pop
divb
repz
cmp
xchg
out
pusha
adcb
mov
divb
int
scas
inc
jne
xchg
lret
mov
jge
adc
dec
jp
and
mov
in
mov
mov
fadds
mov
hlt
adc
shlb
rorl
cmp
adc
rolb
mov
xchg
sub
or
repz
jae
fs
add
xor
popa
xchg
push
nop
mov
add
inc
hlt
and
call
mov
faddp
sar
mov
mov
push
mov
cmp
cmc
shll
outsl
frstor
pop
xchg
addr16
push
shll
jl
in
iret
push
pop
pop
das
cmc
xor
sbb
push
sub
cltd
and
incb
mov
mov
in
scas
inc
movsl
cwtl
xor
mov
outsb
loope
sahf
xchg
cmp
cmpsl
mov
ds
sbb
stos
ja
inc
xchg
out
fdivr
stc
icebp
mov
clc
mov
into
jle
sub
outsb
add
inc
imul
xor
mov
jp
das
ror
sti
jb
mov
or
imul
jp
les
lea
cld
bnd
add
xlat
shl
lea
ja
ss
flds
xor
xor
dec
mov
notl
mov
pusha
mov
or
xchg
jl
test
fistps
sar
jo
out
test
daa
dec
iret
xchg
std
push
sub
sub
mov
fldenv
ror
inc
jmp
add
inc
sbb
dec
pop
lock
push
xlat
mov
flds
jp
rcl
rorl
stos
cli
outsl
pop
stos
cld
scas
stos
mov
fwait
clc
call
stc
ja
jg
and
lret
mov
stos
xchg
fisttpl
rorb
aas
adc
bound
mov
add
sub
loopne
cmc
pop
pop
mov
inc
cli
pop
pop
pop
call
sub
mov
pop
imul
data16
adc
push
xor
sub
or
add
sahf
cmc
test
bound
mov
sbbl
cwtl
mov
xchg
lods
shll
lret
out
mov
movsl
jo
xchg
or
lret
dec
popf
fisubrs
out
das
call
aas
sub
and
call
mov
xchg
mov
inc
jnp
or
or
fildl
in
mov
fbstp
push
aam
cwtl
and
cltd
xlat
and
aas
out
jno
loope
push
sti
mov
dec
pop
aaa
jl
icebp
movsl
lret
test
rcrl
mov
cmpsb
adc
mov
shlb
adcb
push
xor
aad
das
pusha
cmpsl
xchg
adc
mov
rcr
jg
nop
outsb
lea
shl
fildll
lods
ret
xchg
adc
fisttps
jb
dec
dec
pop
mov
aas
ja
std
int
mov
push
outsl
xor
call
xchg
lret
out
add
mov
scas
pop
out
fiadds
fsubrl
lret
movsb
mov
lds
push
mov
hlt
ss
mov
jno
das
je
fcoms
fiaddl
add
nop
dec
test
push
push
faddl
cmp
xchg
push
out
fmuls
mov
pop
or
or
or
pop
dec
push
and
ffreep
xchg
pop
insb
call
in
lock
cltd
cld
add
test
push
adc
clc
mov
xor
dec
and
rorl
xor
iret
mull
jne
or
sbb
jmp
push
cmp
adc
negl
in
scas
adc
ret
jmp
data16
xor
mov
outsb
mov
add
pop
rcrb
dec
repnz
pop
xchg
xor
mov
ficoms
cmp
das
pop
repz
mov
mov
or
mov
mov
cltd
rclb
xor
adc
movsb
mov
ds
pop
or
add
pop
fistpll
and
mov
std
cmp
int
push
or
dec
sbb
mov
mov
mov
sarb
push
lea
pop
jecxz
inc
arpl
outsl
push
adc
stc
push
out
mov
cmp
fnstenv
lahf
dec
lods
or
inc
push
adc
inc
dec
xchg
scas
inc
jge
fdivs
mov
lcall
sbb
push
jo
xor
mov
sub
jne
mov
pop
fsub
cmp
mov
mov
cmp
roll
inc
xchg
cmp
add
mov
sbb
neg
cmp
aas
jo
sub
mov
cmpsl
or
sbb
push
sub
fdivrs
push
sbb
mov
or
test
jl
pop
rolb
xor
ss
push
jo
leave
mov
test
clc
jmp
ret
inc
rcrb
enter
pusha
jg
or
push
mov
push
jnp
pop
jne
mov
or
jne
insb
dec
mov
pop
pop
int3
cltd
enter
xor
stos
jne
ret
jmp
cmp
sub
xchg
shrl
fstps
adc
mov
stos
xor
xchg
addb
ds
insb
subb
add
mov
test
leave
pop
mov
or
js
push
cmpl
push
popf
pop
stos
cmpsb
jns
jp
adc
or
pop
jne
icebp
rorl
dec
or
arpl
pop
nop
lahf
sahf
movsb
dec
stos
push
inc
adc
iret
inc
sub
ret
enter
jl
arpl
sahf
mov
adc
sarl
pop
push
xor
mov
imul
les
imull
rcr
xchg
or
sbbl
lret
adc
add
ret
mov
lea
cld
sbb
xchg
clc
jns
add
or
lods
cmp
jmp
pop
into
popa
add
push
push
cmpsb
push
pop
and
jecxz
call
cmp
mov
test
cmp
push
in
jmp
outsb
mov
xor
dec
int
in
or
mov
outsw
and
movsl
push
negl
in
fdivrs
xchg
mov
lea
inc
adc
pushf
add
dec
and
int
loop
xchg
insl
clc
inc
xchg
es
xchg
movsl
in
xor
mov
inc
dec
mov
shll
jb
xor
pop
aad
mov
bound
cli
push
jp
add
mov
mov
ret
lods
insl
sbb
mov
clc
imul
push
adc
dec
mov
mov
pop
xor
pop
enter
mov
dec
or
pop
fistl
js
xor
loopne
nop
cmp
xor
mov
pop
icebp
shl
in
mov
cmp
shlb
adc
sbb
xchg
mov
push
imul
pop
addr16
push
daa
inc
aam
add
call
mov
in
sub
mov
cmpsl
paddusw
xchg
jmp
es
popa
mov
dec
mov
fmuls
cmpsb
out
fisttpl
sbb
sti
jmp
jne
add
rolb
jg
cmc
fwait
dec
mov
clc
movsb
test
add
idivl
mov
pop
insb
pop
das
push
adc
inc
repnz
mov
jl
outsb
fsubs
pop
lahf
and
xor
lcall
pop
xchg
mov
movsb
pop
xor
xchg
mov
es
rorb
ljmp
cmp
xchg
add
inc
jge
mov
xchg
push
call
mov
xchg
adc
and
push
ret
xchg
add
and
mov
fdivp
stc
pop
jne
sub
mov
out
xchg
ret
or
hlt
stos
jmp
adc
mov
sbb
cwtl
rclb
fnstcw
lea
jne
stc
dec
mov
clc
js
into
mov
leave
inc
push
sbbl
cwtl
movsb
lea
sub
sbb
and
push
sbbl
or
mov
stc
fidivrs
sbb
inc
addr16
imul
jmp
cmpl
jecxz
xchg
cwtl
pop
adc
scas
nop
and
mov
xchg
pop
inc
std
ror
mov
repnz
enter
jge
xchg
loop
loopne
and
lret
stos
dec
mov
inc
sbb
push
andl
fistpll
aad
push
std
mov
or
aam
mov
rorb
push
jmp
cmc
mov
or
mov
out
les
jecxz
adc
je
pop
pop
cmpsb
xchg
mov
and
inc
repz
scas
mov
sub
xchg
push
cmp
push
jg
out
sbb
fs
mov
jo
jecxz
stc
mov
outsl
xor
int
fldl
mov
sub
sbb
nop
mov
pop
xor
out
mov
dec
insl
sbb
shll
dec
mov
xor
add
cmc
xor
sbb
push
mov
xchg
jae
roll
loope
aam
push
mov
inc
cld
lods
and
stc
call
xchg
cmp
repz
cwtl
dec
inc
pop
push
hlt
jg
lods
mov
add
sbb
add
daa
lea
xchg
outsl
cmp
mov
adc
pop
int
sub
jnp
rcll
cld
sbb
xchg
and
xchg
inc
ss
pop
push
rclb
arpl
into
addb
sub
shll
mov
pop
jo
insl
jge
pop
push
inc
mov
jg
sub
insb
jl
lcall
loope
into
imul
adc
dec
add
stc
popl
movsl
in
xor
pop
mov
imul
mov
sub
bound
push
mov
scas
shlb
push
mov
add
lea
or
adc
cmp
clc
mov
iret
lret
mov
sahf
mov
mov
adc
out
mov
call
xor
mov
mov
idivl
xchg
nop
les
jbe
sub
aam
outsl
push
cmp
xor
enter
call
fmul
mov
dec
aam
fiadds
pop
dec
push
push
insl
stos
and
sbb
bound
inc
inc
mov
fcomp
pop
push
mov
pop
cmp
jge
jnp
push
xchg
xchg
adcl
push
out
fstpl
mov
fstpt
fs
mov
sbb
loope
out
loopne
hlt
mov
push
mov
push
lret
mov
push
jmp
mov
pop
pop
dec
mov
or
icebp
hlt
arpl
pop
fimull
ja
xor
fadd
movsb
repnz
mov
cmp
push
ja
sub
push
and
popf
or
xor
movsb
cltd
sahf
sbb
faddl
xchg
jbe
movsb
sub
xor
scas
add
push
movsl
and
jmp
or
fists
leave
hlt
and
and
cmpb
dec
fildll
cmp
mov
adc
fcom
pop
push
aaa
cwtl
ja
fisubrl
bsf
jp
daa
lock
inc
xchg
push
xchg
cs
insb
pop
cld
xchg
mov
into
test
and
sbbb
add
fwait
xchg
add
mov
adc
jle
aas
les
xchg
add
test
jbe
cmpsl
jno
inc
dec
sub
scas
mov
push
ret
imul
ds
test
or
subl
lret
mov
and
cwtl
scas
pusha
jp
jecxz
jmp
add
push
and
push
outsb
add
push
inc
pop
outsl
cmp
fsubrl
in
jl
xor
int3
push
sbb
push
xchg
mov
lret
rclb
and
fcompl
mov
dec
sbb
dec
push
out
and
out
jne
movl
ljmp
dec
push
mov
mov
mov
in
out
jns
das
sbb
mov
leave
sahf
shlb
repz
xchg
inc
pushf
xchg
loop
movsb
fstps
sti
scas
das
xchg
cli
adcl
pop
lret
jecxz
pusha
aaa
call
sub
addl
es
lcall
mov
jl
call
mov
push
sbb
and
cwtl
std
jne
adc
jb
out
mov
mov
je
push
jle
sbb
adc
shll
and
fistpl
cli
jle
stos
sbb
stc
push
mov
outsl
repnz
pop
test
cmpsb
aam
gs
mov
mov
aaa
pusha
cmpsl
dec
push
lock
aam
pusha
aaa
arpl
xor
or
repz
push
popa
xlat
jle
mov
roll
stos
jmp
jo
push
mov
ret
pop
jl
nop
dec
clc
mov
sub
mov
orl
test
jns
cmp
ljmp
stc
and
pop
test
pop
inc
or
push
add
fbstp
cmpsb
jo
adc
adc
pop
add
es
jecxz
jno
stos
outsl
lahf
je
fstps
call
xor
cmp
fidivrl
rorb
add
loope,pn
sbb
lds
pusha
lret
pop
shr
pop
movsl
lret
jbe
fimull
daa
cs
scas
call
xor
imull
fcmovu
shll
jecxz
xchg
out
fbstp
test
fistps
in
sbb
adc
cmp
xchg
jmp
and
ljmp
mov
xchg
cmc
int3
xlat
pop
out
popf
fsub
jecxz
rcr
sub
fcompl
adc
adc
in
xor
mov
pop
xchg
sbb
or
movsl
jno
and
data16
jmpw
nop
test
push
push
pop
or
xor
fcoml
mov
xchg
pushl
cmpsb
popa
imul
in
enter
push
mov
cmp
add
dec
mov
mov
pop
and
mov
call
mov
push
push
in
dec
push
loope
cli
add
ret
pop
add
lds
mov
sub
or
movsl
cli
jge
jge
cmpsb
push
outsb
cmp
dec
das
stos
mov
sti
idivl
and
mov
jmp
sbb
dec
js
add
or
out
sbbl
xchg
outsb
popa
pop
xor
std
sarl
push
cmpsb
out
loop
cld
pop
mov
push
leave
imul
inc
lock
call
cmp
xor
sub
int
mov
dec
scas
mov
add
sbbb
mov
or
data16
adc
cwtl
int3
adc
push
adc
pop
pop
shlb
cld
stos
test
xchg
out
xor
cmp
in
fnstsw
dec
sub
jecxz
push
adc
out
call
sbb
mov
pop
xchg
sbb
stos
shll
sub
add
xor
xchg
fistpll
nop
cmp
cmc
and
add
subb
in
cmc
inc
or
add
jae
xor
or
jmp
fcmovnu
ret
mov
jnp
iret
sbb
pop
call
mov
insl
sbb
jle
mov
in
scas
xchg
xchg
and
mov
and
mov
mov
xor
mov
mov
mov
adc
js
cmpsl
mov
mov
pop
sahf
cwtl
outsb
mov
mov
dec
cmc
jbe
inc
fisubrs
leave
mov
inc
adc
fnstsw
mov
nop
test
aas
scas
ret
mov
out
add
scas
lods
jle
sub
or
push
rcrb
mov
push
push
xchg
outsl
mov
icebp
aam
jno
clc
sbb
mov
jb
jmp
fsubl
lock
dec
repz
test
inc
cmpsb
or
rorb
push
imul
dec
cmpsl
jle
idivb
push
popf
sbbl
outsb
mov
popf
xchg
out
stos
jae
inc
mov
push
pop
mov
dec
in
xchg
repnz
fmull
orl
cmp
dec
lcall
xchg
sub
test
adc
inc
pop
pushf
fiadds
pusha
sub
sahf
xor
sub
jno
ss
jo
mov
jae
mov
push
cli
mov
fnsave
xchg
test
xchg
es
hlt
adc
test
data16
push
hlt
inc
cmp
dec
loopne
inc
loope
sbb
cli
andl
cmpsb
lds
cmp
xor
pushl
call
je
cmp
fwait
inc
stc
in
mov
mov
xor
movsb
das
sbb
add
cld
mov
stos
xor
add
test
dec
adc
sub
sub
loop
mov
jle
jae
cmpsl
add
mov
aas
sub
out
xor
adc
subl
dec
cmp
push
jmp
cmp
stos
lcall
add
ljmp
sbb
dec
add
inc
loope
aaa
in
movsb
rclb
xchg
and
cmovo
mov
add
cmpl
mov
mov
hlt
pop
push
mov
or
jns
cltd
out
mov
dec
rol
xor
jl
fnsave
sub
and
pop
xchg
cli
imul
addr16
loope
mov
push
sbb
lods
xor
fistl
pop
in
mov
xchg
sbb
int3
mov
mov
stos
lods
into
mov
arpl
loope
insl
f2xm1
cmp
xor
lahf
and
mov
sub
mov
add
or
sarb
or
cmpsb
xlat
scas
jge
dec
dec
mov
and
mov
xor
leave
pop
aaa
inc
cmp
sbb
pop
inc
and
pop
pop
push
pop
shrb
mov
push
push
mov
ret
clc
fisttps
fdivrl
lahf
loopne
int
dec
imul
cmp
dec
cli
je
mov
popf
std
xor
jae
fbld
mov
aas
pop
xor
push
push
mov
fsubl
ret
xor
pop
ret
aad
loope
test
jne
cs
cs
rorl
aas
sti
adc
ffree
ja
pushf
push
pusha
pushf
push
dec
iret
dec
outsb
dec
or
sbb
sub
sub
push
xchg
pop
xchg
aam
orl
or
pop
sub
add
mov
fiadds
pop
test
inc
mov
inc
jmp
sub
popf
je
pusha
cld
fcmovne
inc
push
gs
sbbl
pop
in
stos
cmp
stos
adc
xchg
cmpsb
add
into
jnp
push
fistps
das
notl
jge
cli
inc
xorl
cmp
xor
jbe
ret
push
push
imul
in
test
mov
mov
add
cmp
mov
ja
xor
pop
mov
cmpsb
or
out
int
mov
ret
je
adc
sub
push
and
push
push
pop
js
xchg
lock
std
jecxz
inc
cmpsb
mov
cltd
jmp
xchg
mov
mov
icebp
scas
in
insb
inc
nop
cwtl
mov
clc
jl
cmpsb
cwtl
enter
and
imul
mov
clc
leave
and
push
icebp
or
in
into
mov
in
rorl
cltd
cld
mov
xor
js
gs
xor
mov
out
xchg
sub
pop
ror
sbb
jae
or
cld
pop
cmpb
mov
stos
icebp
push
in
dec
jo
push
mov
cmp
mov
lea
into
adc
cltd
xchg
push
inc
in
mov
adc
fstpl
dec
sbb
sbb
and
mov
jmp
or
ffree
es
enter
rcrl
pushf
rcll
mov
mov
pop
cmp
ss
fucomp
mov
mov
shll
jne
push
jmp
xchg
cwtl
ljmp
in
jns
sbb
dec
out
lret
mov
xchg
testl
int
clc
sub
scas
les
xlat
jmp
sub
test
mov
mov
shl
adc
adc
and
sbb
sbb
xchg
out
and
scas
push
js
and
push
add
imul
xchg
xchg
cmpsl
mov
sbb
pusha
je
mov
mov
jne
and
or
repz
push
sbb
filds
jb
mov
mov
dec
fmuls
pop
test
mov
pop
inc
jge
sbbb
mov
orl
jo
in
bound
jnp
cmp
dec
adc
add
mov
adc
mov
mov
inc
je
setae
in
ljmp
adc
dec
jno
jmp
sub
aas
stc
sub
cmp
aad
push
in
ss
out
fwait
dec
in
xor
es
cwtl
push
sets
arpl
test
push
in
push
ljmp
ret
filds
notb
xchg
aam
inc
push
pop
mov
int
inc
adc
mov
cmp
xchg
sbb
cmc
dec
xor
movsl
xchg
xchg
sbb
jecxz
icebp
lock
lcall
inc
add
xor
div
cwtl
out
insl
loop
push
ss
cmp
fdivp
mov
in
pop
lods
cmp
notb
mov
lcall
sub
or
adc
push
nop
cwtl
sub
fsubl
mov
xchg
and
dec
repnz
sbb
add
andb
fwait
cmpsb
loope
stc
outsl
xor
test
bound
lods
or
frstor
cmp
scas
mov
push
inc
cmove
pop
repz
pushf
outsl
fisttpll
bound
xor
mov
icebp
data16
dec
xor
xor
jg
sub
cmpsl
lea
divb
lock
lods
mov
push
mov
dec
cmp
leave
int3
mov
lret
int
loopne
add
inc
cmp
jge
repz
orl
jb
lods
int3
ja
mov
sub
js
mov
sbb
icebp
add
sbb
inc
sub
mov
outsl
cmpsl
fisubrs
ret
js
mov
out
imul
in
push
cmp
packuswb
sti
repnz
xor
dec
sbb
mov
mov
push
mov
test
aam
mov
movsb
cmp
out
cltd
xchg
jmp
into
in
inc
adc
push
jno
hlt
popf
inc
test
push
sbb
lcall
mov
in
jbe
mov
imul
ja
cmp
mov
in
insl
cmpsb
sbbb
mov
adc
stos
mov
or
outsb
xor
push
cmp
ss
adc
outsb
lea
mov
iret
loope
repz
jns
pop
mov
stos
in
dec
mov
and
mov
les
jb
test
inc
pushf
jle
out
iret
out
xor
fldenv
mov
mov
ljmp
mov
jg
mov
lock
dec
ret
cmp
popa
mov
add
xor
or
faddl
push
bound
push
sbb
adc
lea
dec
mov
jecxz
out
leave
inc
repnz
dec
insb
fst
jns
mov
test
orl
test
pop
sarb
adc
inc
inc
outsb
add
loope
shlb
pop
aad
push
cltd
cltd
loopne
xor
lods
imul
and
nop
stc
fwait
mov
inc
mov
pushf
xor
jb
add
jnp
jne
fstl
cltd
shll
push
loopne
dec
adc
aaa
mov
cmpsl
sub
jno
repnz
shrb
lock
mov
fwait
sub
ds
jb
cli
push
loopne
mov
and
pop
aas
sub
push
xchg
mov
dec
sbb
imul
aad
pop
imul
dec
pop
fbld
addl
shlb
and
jge
push
mov
fsin
pop
enter
sbb
inc
pop
jmp
mov
sbb
test
in
dec
out
xchg
inc
test
iret
mov
imul
xchg
cmp
loope
mov
mov
mov
xor
inc
push
push
stos
and
je
fstpt
cli
add
adc
push
fwait
addr16
popf
and
mov
lret
adc
cli
sbb
pop
std
flds
call
into
movsb
jp
out
shlb
sub
mov
jge
xchg
sbb
sbb
sarb
das
push
stc
sti
sti
xchg
and
outsl
xorl
insl
int3
out
fidivs
jae
lahf
enter
bound
popa
and
fsubp
push
pop
repz
add
pop
jg
es
std
dec
lea
jl
sub
sbb
xor
pop
push
pop
mov
and
std
shll
sub
pop
inc
xchg
out
add
test
pop
movsb
jbe
dec
add
pop
fidivs
out
and
mov
aam
mov
icebp
mov
cld
dec
jg
out
push
fnsave
iret
adc
jg
ret
out
adc
xchg
sub
loope
imul
jg
fmuls
pop
xor
mov
and
fmuls
adc
inc
push
loopne
pop
lock
lret
cmpl
ja
inc
sbb
lock
aaa
bound
jb
mov
xor
mov
mov
sbb
mov
sub
jecxz
add
ret
pop
and
enter
orb
sbb
cld
add
xor
hlt
es
aam
cmp
adc
enter
lods
pop
sub
test
xchg
lret
lret
jl
jl
jle
in
pop
repz
mov
int3
test
or
inc
add
lods
sahf
pop
clc
jns
xor
mov
push
push
mov
rorb
std
scas
in
test
pop
data16
inc
ret
stos
mov
dec
loopne
adc
fsubrp
clc
out
ret
outsb
cmp
loopne
int3
mov
inc
or
ja
push
pop
iret
test
and
sbb
sbb
lcall
xchg
subb
dec
xchg
cmpsb
lods
fwait
popf
xlat
aam
test
out
lods
xchg
push
mov
stos
cwtl
mov
sbb
in
mov
lea
jbe
fwait
and
rcrl
mov
push
outsb
xchg
andb
dec
ss
scas
sub
es
pop
jle
ret
jge
mov
jge
imul
mov
jmp
jmp
jle
fildll
xchg
or
xor
cmpsl
lret
pop
push
jmp
add
sbb
out
push
int
hlt
mov
push
pop
inc
adc
std
imul
xor
lea
fs
sbb
xchg
popf
mov
jb
cmc
call
fsubl
push
push
cmpsl
in
out
dec
daa
test
cmp
les
nop
xorb
ds
fisttpl
push
shrb
mov
xor
xchg
insl
mov
out
mov
cwtl
dec
roll
icebp
stos
gs
xor
cmpsb
jb
inc
in
pop
push
push
inc
jecxz
cmp
in
push
add
adc
scas
jl
or
pop
add
xchg
inc
inc
insb
lods
mov
dec
loop
cwtl
out
xchg
pop
xchg
nop
push
arpl
mov
fidivrl
notl
inc
add
int
pop
call
push
push
jmp
clc
lret
xor
pop
adcl
shll
pop
jae
push
xchg
push
push
cmp
jg
addr16
sarl
sub
inc
sti
aam
and
popa
negl
push
aam
scas
sbb
aaa
movsb
xchg
sub
xor
and
icebp
push
loopne
into
into
jl
push
push
sbb
adc
push
adc
adc
cltd
mov
fcoml
mov
clc
fst
xchg
out
mov
loop
jno
out
iret
das
jmp
scas
mov
repz
pusha
movsl
fisttps
call
cwtl
subl
pop
sbb
push
pop
jno
sub
ja
cmp
addr16
lea
mov
je
mov
push
scas
dec
cmpb
insl
or
dec
mov
inc
lcall
fldenv
jl
push
lock
cwtl
xchg
scas
push
std
pushl
jb
jno
dec
xlat
inc
mov
out
dec
scas
addr16
fucomip
test
ljmp
movsl
in
popa
cli
adc
cmp
dec
fbstp
jo
sarl
imul
shlb
das
mov
nop
lock
adc
and
add
nop
sbb
or
lcall
inc
icebp
inc
sub
pushf
mov
pusha
dec
in
push
or
inc
fisubrl
push
inc
sahf
adc
mov
xchg
pop
lcall
fwait
xchg
mov
mov
mov
mov
inc
mov
ss
inc
inc
dec
ljmp
stos
js
jmp
sbb
imull
out
hlt
push
or
jecxz
out
lods
cli
mov
outsl
push
in
adc
fimuls
jle
cmc
push
insb
rcr
mov
pop
push
mov
mov
xor
pop
jl
bound
call
add
shrl
hlt
cmp
es
orl
mov
add
cmc
push
pop
add
test
mov
test
add
pop
sti
xor
pop
xchg
cld
mov
outsb
xchg
outsl
cmp
lods
push
push
in
pop
dec
das
and
lcall
push
xchg
add
push
mov
mov
cli
pop
or
dec
mov
stos
dec
jmp
outsb
enter
mov
fucom
clc
arpl
mov
xchg
mov
hlt
mov
nop
dec
int
ss
enter
push
cmp
pop
inc
repz
mov
fwait
insl
stos
sub
mov
jne
mov
jno
sub
shll
mov
inc
in
ret
out
aad
aad
repnz
sub
int3
lret
jecxz
xor
lret
insl
enter
add
outsl
add
or
in
ret
push
clc
insl
repnz
pop
sub
mov
and
arpl
xchg
sahf
subb
lcall
insl
shr
jns
cmpsl
adc
jg
jo
repz
jmp
stos
aas
adc
sahf
sub
add
or
lahf
mov
xchg
ja
daa
cltd
outsb
sti
inc
in
daa
mov
std
js
mov
std
sub
push
xor
mov
es
ds
sbb
fcmovbe
jmp
je
cmp
dec
mov
pop
dec
loopne
xchg
mov
jle
lods
sbb
xchg
xchg
shlb
add
imul
aam
xor
jmp
lods
sub
pop
jbe
in
lods
dec
pop
pop
ffreep
jae
mov
or
out
push
imul
ficompl
ljmp
stos
cmp
adc
cmp
jmp
xor
out
and
cmp
xchg
jb
jle
xor
mov
xchg
mull
cmpb
pusha
push
ja
mov
into
in
mov
cmpsl
js
dec
mov
ljmp
cld
les
mov
loop
sub
in
pop
insb
pop
outsb
ja
jge
rcrb
cmp
cmp
test
lods
jns
repnz
xchg
adc
call
das
cmp
in
fcmovbe
sti
or
push
popa
sub
popa
cld
and
dec
sub
cmp
shrb
imul
jmp
and
test
mov
xchg
adc
sbb
rcrb
sbb
mov
jno
cmp
iret
adc
jns
mov
out
mov
cmp
add
mov
cmp
lods
inc
jb
xor
push
ja
scas
mov
shr
inc
or
lahf
lahf
jecxz
and
push
fucomip
sub
dec
insl
push
push
fst
loope
pop
adc
xor
sbb
pop
jl
sbb
jno
cltd
pop
adc
popa
jge
gs
fsubs
and
sub
ljmp
and
in
xchg
fldl
aaa
push
dec
iretw
add
out
push
jp
jbe
inc
cmp
pop
and
inc
aam
sbb
dec
ret
sub
xchg
mov
dec
mov
sub
sub
mov
outsb
mov
mov
cs
mov
popa
repnz
add
push
mov
jmp
int3
sbb
xlat
in
in
xor
pop
mov
cmp
push
push
jl
cmp
add
jae
shrl
push
inc
or
cmp
push
pop
into
mov
xor
cld
in
jns
dec
mov
cld
jb
bound
xor
test
lahf
shlb
fisttpl
pop
repnz
adc
cs
mov
mov
inc
sahf
push
or
das
sahf
enter
lret
cmp
movsl
inc
outsl
cs
sub
jae
mov
imul
roll
mov
push
call
push
cld
nop
xor
sub
and
push
lcall
adc
pushf
nop
push
pop
testl
xchg
push
ret
ja
or
push
lcall
daa
dec
mov
and
mov
push
mov
pop
xchg
mov
movsb
xor
pop
fnsave
sbb
in
and
push
pop
or
adc
jo
and
enter
push
jae
movsb
cmp
mov
dec
and
enter
lahf
mov
add
xor
stos
fcompl
cmp
inc
in
iret
dec
js
es
icebp
fisubs
xchg
loopne
loopne
jge
punpckhdq
sbb
fdivrl
jle
pop
jle
dec
xchg
addr16
shrb
xor
adc
add
push
xchg
sub
mov
inc
jg,pt
lock
gs
push
cmp
dec
inc
call
test
jnp
or
js
lock
sub
pop
jmp
mov
fstpl
and
dec
mov
lds
lock
dec
xchg
gs
andl
push
movsb
mov
xchg
fwait
insb
jecxz
nop
xchg
adc
clc
rorl
in
imul
xor
inc
fdivrs
faddl
adc
mov
sar
jle
mulb
jne
insl
in
movsb
or
cmp
inc
fsts
jb
fucomip
push
lret
or
mov
push
pop
test
lcall
andl
fwait
pop
rol
cmpsb
mov
test
in
and
cld
sub
jmp
inc
loopne
scas
xchg
jmp
je
xchg
xor
mov
out
push
jb
mov
out
or
cli
xorl
xor
cmp
pushf
lods
cmp
stc
andb
push
jmp
cld
and
cmp
aad
or
pop
xor
pushf
pop
sub
in
fistpll
movsl
enter
shrb
sub
add
loop
cmp
and
cmpsl
dec
dec
sub
je
ret
and
int3
mov
iret
enter
or
sbb
push
in
xchg
icebp
js
std
add
cs
adc
adc
mov
and
ret
ret
in
inc
xor
mov
pop
adcl
mov
rol
jle
push
fwait
shrl
jns
aaa
mov
push
mov
inc
push
push
imul
dec
mov
jnp
cmp
or
pop
sub
cmp
adc
lock
dec
outsl
mov
insl
sbb
cltd
mov
sbb
dec
loop
xlat
mov
test
stos
jb
xchg
dec
pop
pop
bound
or
xorl
jmp
or
pop
sub
ret
stos
pop
mov
paddd
or
and
scas
pop
pop
add
xlat
push
lahf
pop
push
sub
cld
cmp
fcmove
cli
roll
add
test
inc
inc
aas
and
pop
xor
outsl
xor
sub
xor
fwait
pop
cld
xor
jle
lock
cs
cmp
iret
repz
adc
and
arpl
jns
dec
dec
push
push
jp
lret
scas
add
fnstenv
add
fcomps
pushf
and
inc
nop
dec
iret
enter
jecxz
pop
push
outsb
mov
pop
mov
call
mov
mov
xchg
in
lcall
fsubr
adc
sub
jle
mov
sbb
arpl
pop
jnp
pusha
mov
xchg
xchg
insb
inc
rcr
jl
test
push
pop
sbb
mov
sub
xchg
jae
jae
pop
xor
push
pop
int
inc
pop
mov
mov
push
test
scas
cmc
mov
jnp
adc
out
mov
frstor
out
stos
sahf
lods
pop
mov
pop
xchg
negb
mov
lret
sbb
inc
mov
lods
inc
pop
xor
movl
js
jnp
fwait
push
push
mov
jbe
aam
pop
addr16
dec
mov
mov
inc
or
xchg
cwtl
pusha
inc
stc
adc
test
lock
and
pop
das
mov
in
cpuid
shll
cmp
sub
aad
pop
dec
jl
aaa
inc
insb
inc
cli
sbb
jae
mov
push
push
mov
fwait
lods
gs
dec
in
mov
add
mov
cltd
inc
bts
jo
and
aad
negb
int
cmc
jne
pop
dec
xchg
lcall
inc
cmp
mov
cwtl
cmpsl
xchg
scas
xchg
std
cs
mov
fildl
aad
xchg
adc
es
das
mov
aad
cmp
call
sub
fcmovu
iret
sbb
fistps
dec
call
test
pushf
daa
mov
jle
push
mov
push
out
push
jle
mov
jg
mov
nop
leave
adc
push
inc
test
movhps
xchg
movsb
mov
cwtl
sub
movsb
fsubl
cmc
pop
xchg
test
xchg
sti
mov
sub
repz
or
mov
jae
pop
ror
mov
test
fidivl
in
in
xor
cmp
mov
dec
add
or
loop
pushf
add
push
add
pop
outsb
flds
adc
retw
mov
iret
in
loope
incb
inc
popf
push
f2xm1
jb
xor
push
cwtl
cmp
lret
mov
jbe
loopne
sbb
mov
pop
pop
sbb
bound
sbb
mov
fucomip
mov
jo
aas
mov
test
pop
into
das
icebp
jno
sub
ja
dec
aas
fstpl
out
in
rcl
mov
push
pop
or
jo
lcall
mov
insb
cmpsl
das
sbb
int
pminub
xchg
adc
jae
xchg
jae
stos
stos
es
and
pushf
inc
cmp
mov
dec
iret
xchg
jmp
in
sbb
adc
test
and
inc
repz
sbb
frstor
cwtl
mov
sahf
or
ljmp
lods
dec
or
data16
cmpsb
push
lcall
mov
jbe
ss
push
pop
cmp
sub
lds
and
xor
sti
divb
int
cmpsl
cmpsb
mov
sarl
hlt
notl
pop
repz
cld
mov
das
xor
dec
shll
aad
hlt
stc
sbb
lods
leave
jns
push
lret
lea
loopne
inc
fmull
bound
mov
mov
cmp
or
add
addr16
cmpsl
push
jns
aas
inc
pop
push
xor
addb
nop
push
cmp
jns
movl
pop
sbb
inc
mov
iret
hlt
movq
and
mov
movsb
shl
rorb
and
ss
cmp
mov
pop
push
jp
mov
xchg
iret
and
sbb
push
pop
xor
pop
fists
mov
or
mov
fst
mov
xor
lods
pop
out
jge
jg
inc
cmp
and
mov
dec
jg
add
movsl
je
xor
jne
iret
mov
out
pop
sahf
test
mov
das
or
in
movd
push
in
xchg
sbb
stos
fs
test
sub
push
push
test
fnstenvs
mov
aad
and
insb
inc
cmp
xchg
cmp
fisubrs
cltd
xchg
cmp
andb
insb
adc
xlat
das
xchg
mov
mov
pop
and
iret
repnz
xor
mov
add
loope
xchg
out
or
sbb
add
pop
mov
adcb
mov
leave
add
sub
pop
push
rcrb
add
ss
js
push
cwtl
pop
dec
nop
dec
inc
notb
mov
dec
and
ror
out
jmp
push
into
mov
push
mov
adc
mov
lods
loop
pop
addb
sbb
push
adc
cld
cwtl
jnp
jge
popa
rcll
call
dec
mov
mov
mov
ret
pop
cltd
cmp
and
loopne
sub
mov
sub
and
popa
jecxz
cmp
mov
gs
sbb
insl
popf
mov
or
gs
into
call
out
or
out
and
int
adc
test
sub
movsb
cmpsb
repz
fstl
out
cltd
and
mov
xchg
mov
cmpsb
xor
mov
pop
cmpb
movntq
out
add
jl
lcall
sbb
fdivp
iret
mov
cltd
push
popa
arpl
lock
test
jp
ds
in
outsb
das
icebp
movsl
cmp
xchg
push
mov
mov
mov
in
aas
pop
mov
aas
fidivs
sub
bound
cmp
out
sub
inc
cmp
cmpsl
rcrl
shlb
out
js
pop
and
ds
shll
stos
lea
push
jp
ficoml
mov
std
leave
xor
inc
std
jp
push
int3
adcb
cli
xorl
cli
pop
mov
jo
iret
cwtl
add
mov
add
mov
imul
cmc
xor
mov
sbb
jmp
aaa
dec
push
push
xor
pushf
outsl
imul
cmpsl
clc
addb
mov
es
jl
jl
shl
adc
sbb
rclb
push
cld
ret
sti
fimuls
xchg
and
sub
dec
push
push
leave
stos
pop
out
pop
xchg
inc
stc
imul
iret
jnp
sub
sub
jns
inc
test
cwtl
fst
sbbb
fwait
fs
add
pop
inc
mov
mov
xor
sti
pop
mov
movsb
mov
imull
outsb
cmpb
pop
cmp
cli
fimull
sbb
ss
push
popa
std
lods
hlt
jmp
mov
mov
mov
out
fisttpll
add
fmuls
aam
jns
ljmp
xchg
mov
jg
inc
lds
sarb
cmp
dec
shll
je
pop
fsts
xchg
rcrl
pop
rcrb
shll
jne
mov
mov
sbb
and
push
add
sub
cmp
sbb
adc
testl
mov
js
inc
add
nop
int3
adc
gs
ds
xchg
xchg
mov
movsl
dec
cmp
in
js
mov
ljmp
inc
jle
adc
daa
rcrl
pop
adc
adc
cmp
pop
in
fwait
sub
jp
int
movsl
dec
rclb
sahf
and
jp
sub
into
mov
leave
cmc
mov
movsl
lcall
sub
mov
ret
cli
jno
jmp
cmpsl
jge
ss
fs
jnp
fnsave
add
push
jo
xchg
mov
adc
jnp
icebp
mov
xchg
fstl
icebp
pop
or
testb
lea
pop
mul
rol
insb
sub
daa
movsl
xchg
jae
ret
into
sbb
lahf
xor
pushfw
mov
jmp
outsb
jmp
sub
pop
adc
lods
jno
jo
adc
add
movsb
fdivrs
loop
sarb
jo
mov
fisubrl
or
shll
sbb
cmp
mov
push
into
jge
shlb
cmp
sbb
dec
repz
repz
dec
jle
ds
fisttps
pop
jle
push
jno
push
es
aad
mul
jno
lods
push
lret
mov
mov
xchg
daa
and
in
insl
ja
jns
jns
or
mov
adc
mov
mov
faddl
incl
lea
test
xor
mov
leave
sbb
jle
adc
dec
mov
ficomps
daa
lods
mov
cs
fs
xchg
fcmovnb
sbb
cmpsb
push
popf
addl
cltd
and
cmp
repz
mov
add
jl
jl
jp
push
cmpl
mov
push
xor
pusha
xchg
int
lock
rcll
push
add
mov
aaa
adc
pop
loope
sub
fcmovnb
dec
sub
sarl
lret
inc
add
adc
push
jno
jge
shll
adc
ret
in
rol
aad
rcrl
fstpt
xor
xchg
lcall
les
push
rcll
mull
xchg
dec
sub
jmp
scas
fimull
lds
xchg
outsb
jo
add
inc
jns
pop
push
aam
cli
xchg
shl
push
and
jecxz
fldl
adc
clc
cmp
test
jle
dec
std
sub
xor
in
cmc
add
dec
adc
outsl
shl
inc
xor
jae
mov
mov
push
or
inc
loopne
stos
shlb
ficompl
aas
mov
clc
sbb
int
xchg
shl
mov
cli
stos
popf
and
cmpsl
es
sub
lret
push
jne
jmp
pop
mov
mov
fsubs
mov
imul
outsl
lock
add
adc
mov
and
push
pop
cmp
test
repnz
push
std
xor
and
nop
mov
push
filds
jnp
cmp
shlb
sub
stc
aad
jns
dec
rcrl
push
dec
fs
push
loopne
sub
stos
push
lcall
inc
cmpsb
arpl
jle
rcrl
fnsave
je
stos
mov
pop
movsl
aas
pop
xchg
fmuls
push
push
sbb
cli
mov
push
scas
outsl
sub
sbb
cli
enter
int
dec
in
int3
mov
pop
push
mov
out
pushl
sub
dec
rep
xor
or
lcall
add
xor
mov
xchg
cwtl
cld
in
lahf
sti
outsl
in
addl
sub
jno
and
xchg
int3
push
out
and
dec
inc
outsl
xor
enter
mov
lret
sub
dec
jp
out
fs
pop
insb
xlat
popf
cwtl
rcl
mov
addr16
repnz
or
cmp
imul
nop
jae
nop
test
mov
mov
lods
push
out
insl
mov
mull
sbb
in
dec
std
xchg
sbb
mov
mov
cli
mov
call
js
cmpsl
cld
es
xchg
jbe
cltd
sub
lea
nop
addl
lods
dec
pop
out
fistl
push
repnz
mov
pop
pop
jp
push
jl
mov
popa
xor
in
and
loopne
dec
adc
pop
mov
and
cli
push
mov
ror
stos
lret
cli
test
rcrb
cmc
sbb
lret
pop
fisttps
pop
push
inc
rorl
add
sti
iret
cltd
shll
loope
test
or
xchg
std
ret
mov
or
pop
inc
rorl
xor
ljmp
and
shrb
jmp
jmp
stos
loopne
pushf
repnz
aam
push
cld
sahf
push
outsb
ss
ljmp
test
sahf
sub
jmp
lret
mov
test
pop
mov
rorb
test
movl
aaa
jmp
push
ss
cmc
or
movsl
lahf
xchg
scas
cmpb
cwtl
mov
cwtl
ret
adcb
push
ret
fnstsw
push
mov
jecxz
mov
jno
xchg
les
je
rolb
imul
pushf
add
arpl
push
cmpb
jae
icebp
adc
aas
jo
sbb
pop
xchg
add
xlat
sti
shrb
sbb
xchg
mov
pop
ret
int3
cmc
xor
jl
jb
mov
inc
cmp
call
push
and
cmp
xor
cwtl
pop
test
fucomip
push
icebp
call
fstpt
fs
mov
push
inc
in
lret
ret
int
mov
sahf
mov
insl
and
sti
jno
nop
test
cmp
ja
xor
call
cltd
pop
pop
stos
inc
jmp
imull
call
roll
fildll
hlt
xor
adc
jne
repnz
sbb
push
mov
sbb
repnz
jg
inc
mov
xchg
xchg
jb
cmpsl
out
pop
pop
mov
clc
leave
sbb
jae
bound
cmp
mov
clc
cli
mov
test
jp
adc
cmp
jle
dec
in
mov
lods
repz
cmp
mov
push
xor
mov
leave
call
xchg
mov
xchg
outsb
push
test
sbb
movsb
jae
jmp
or
pusha
std
loope
push
mov
sub
sub
jl
sbb
lock
repz
js
ret
jmp
fisubrl
dec
sbb
mov
lock
fsubr
jbe
adc
popf
lock
fwait
pop
or
arpl
out
xchg
fadds
pop
pop
sub
movsl
and
add
das
daa
inc
lea
cmpsl
mov
pop
cmp
sub
mov
fsubp
mov
cmp
lods
push
data16
inc
rorl
mov
push
fidivs
pop
repnz
and
jne
xchg
sahf
xor
lcall
cs
mov
outsl
lds
mov
data16
scas
enter
cmp
aad
push
inc
sti
iret
stos
bsr
and
dec
adc
xor
mov
je
mov
sbb
divl
adc
mov
inc
adc
fiaddl
mov
out
and
push
sbb
xor
pop
rcrl
pop
out
pop
fidivrs
jb
pop
push
xchg
movsl
push
xchg
in
sbb
addr16
dec
popa
pop
pop
or
lods
pop
sbb
cmp
in
pop
ds
jns
lods
jge
push
and
sbb
in
cmp
ds
fimull
mov
xchg
or
loope
mov
push
cmp
outsb
popa
imul
popa
add
imul
mov
mov
add
inc
push
or
xchg
sbb
call
push
inc
jmp
and
in
cmp
xchg
leave
dec
dec
fcomip
add
repnz
sahf
mov
test
push
or
mov
sub
enter
call
xchg
mov
cmp
repnz
icebp
adc
pop
sbb
cmp
aam
adc
lahf
cmp
cmp
push
scas
mov
push
and
and
test
dec
or
fdivrs
test
push
dec
pushf
out
subl
push
es
dec
mov
adc
mov
orb
imul
btc
adc
sbb
stos
ljmp
xor
push
cld
push
leave
jmp
lods
jge
jns
jp
xchg
jne
or
cmpsl
lods
adcl
inc
and
fstpt
adc
adc
xchg
jae
and
dec
adc
adc
jecxz
lock
ss
fdivrp
mov
mov
loop
inc
inc
xor
mov
inc
js
dec
mov
lods
sub
push
and
mov
xchg
mov
xchg
aad
sub
test
stos
sub
ret
sbb
or
pushf
outsb
xchg
stos
call
push
push
pushf
cmp
or
jnp
mov
dec
orl
xchg
add
or
cld
cmp
fidivrl
aad
sub
cmc
inc
adc
push
push
in
sub
mov
mov
test
fnstenv
fnstenv
js
jge
and
inc
cmp
fidivl
and
push
jmp
out
xor
cli
push
jecxz
add
mov
addb
pop
insl
pushf
enter
sbb
out
jo
adc
jp,pt
out
push
sub
out
je
stc
push
xor
js
vsubps
lods
cmpsl
or
cli
mov
scas
cld
cmc
or
jp
sbb
movsb
jbe
addr16
jmp
sub
ljmp
cmpsb
mov
push
adc
cmc
aad
pop
adc
or
cmp
or
sahf
and
outsl
push
mov
mov
sub
cmp
xchg
call
xchg
ja
out
sbb
sbb
pop
jmp
cmp
push
xchg
fs
push
fnstenv
pop
xor
or
movsl
popf
in
fisubrl
fstps
fcoms
push
inc
inc
mov
jne
and
cmpsb
mov
sub
sbb
stc
push
mov
lahf
rcl
cmp
or
lea
add
iret
in
push
dec
testb
sub
cmpb
ret
fnsave
mov
and
or
mov
lods
lock
push
aas
mov
cwtl
fwait
cmpsl
dec
test
pop
pop
add
test
xchg
dec
cs
ret
and
adc
lods
shlb
pop
or
and
push
sbb
out
jmp
fldt
scas
in
jl
xchg
aad
rcrl
adcb
cwtl
cs
push
adc
lods
mov
xchg
dec
sub
push
cmp
cmp
sti
inc
push
mov
inc
les
cli
jl
loop
ds
sbb
stos
js
add
xchg
jmp
and
push
fwait
lea
mov
mov
mov
and
sbb
lahf
fstpl
xor
xor
dec
inc
add
and
ficomps
js
mov
cmp
and
jg
mov
push
in
out
add
int3
movsl
in
stos
inc
xor
pop
mov
sbb
bound
and
adc
adc
jge
outsl
inc
ljmp
icebp
push
fcomps
cld
cmc
leave
adc
xor
cmp
imul
sub
push
test
jns
add
imul
cli
ret
sahf
xor
add
xor
push
mov
mov
shld
mov
jae
out
iret
xor
push
mov
daa
mov
dec
data16
into
inc
idiv
scas
ljmp
aad
xchg
push
push
je
sbbb
mov
rcrb
push
xor
jo
xchg
xor
sub
aas
sbb
jle
inc
push
dec
jb
push
addr16
sub
aaa
cltd
mov
ds
negl
dec
add
add
cltd
pop
nop
cmp
and
ds
inc
sub
js
lretw
xchg
xchg
lcall
dec
xchg
ror
mov
lahf
mov
cmp
mov
ds
and
push
jmp
inc
repz
mov
mov
ja
out
outsb
lods
xchg
jno
fdivrp
iret
xor
jmp
in
mov
cwtl
mov
lret
lods
lahf
mov
sbb
iret
xchg
fldenv
dec
call
xchg
or
fwait
scas
insb
dec
sbb
sub
shl
stc
repz
inc
or
xchg
popa
cli
sahf
leave
xor
ret
mov
dec
cmp
lods
outsl
test
int
mov
xor
mov
push
les
mov
loope
aam
stc
push
into
xchg
mov
shrb
bound
xor
ds
and
mov
repz
stos
mov
ror
aam
mov
loope
jp
mov
jno
in
pushf
nop
es
cli
testl
mov
pop
push
daa
sbb
fadd
scas
fcmovu
je
imull
lahf
test
sub
jne
dec
pop
cmp
add
mov
sbb
fcoml
push
in
xor
add
fcoms
das
sbb
lcall
or
xor
leave
js
and
mov
frstor
mov
inc
pop
add
cld
dec
sub
fisttpll
adc
mov
repz
push
sub
jns
or
cld
and
in
les
cld
cmp
add
or
les
test
push
sbb
decl
and
js
jb
sbb
mov
push
sub
fwait
rcrb
push
mov
arpl
stos
xchg
inc
push
xchg
mov
mov
imul
add
push
dec
add
ss
jl
arpl
or
imul
lods
scas
or
fwait
jecxz
mov
cs
xchg
jno
fnstcw
pop
pop
xorl
jnp
xor
mov
loop
mov
es
and
push
jl
push
or
jge
sbb
rcrl
push
add
ficompl
das
in
cwtl
jmp
jnp
ret
icebp
mov
ret
lds
gs
jb
inc
jg
jecxz
jp
push
in
js
scas
push
dec
pop
insl
fwait
data16
jno
xor
xor
push
or
push
mov
std
lods
mov
mov
xchg
adc
jmp
dec
mov
mov
imul
scas
jecxz
pop
mov
mov
rorl
cmpsb
xor
jo
add
iret
or
pusha
bound
out
cli
jge
mov
rorb
mov
mov
jg
push
testl
add
movsb
mov
inc
cs
pop
dec
inc
cwtl
sarl
push
xchg
ficomps
inc
addr16
fists
flds
add
mov
xor
pop
sub
sub
inc
and
sub
ret
mov
or
push
push
mov
pop
xchg
inc
sub
cmp
push
test
test
jbe
sub
jbe
xor
and
push
call
cs
hlt
add
jmp
jo
mov
jbe
cwtl
jns
sbb
xchg
dec
ret
or
and
xor
or
and
scas
pop
inc
push
xchg
loopne
push
pop
out
fstpt
inc
jo
push
sti
sbb
mov
std
mov
cmp
pop
mov
pop
bnd
enter
adc
bound
jns
ds
dec
mov
and
sarb
inc
mov
jmp
mov
jle
rcl
sub
aaa
jne
xor
mov
cmc
xchg
add
shll
mov
xchg
ljmp
adc
push
test
popf
jo
dec
stc
lcall
jge
enter
push
push
and
repz
add
adc
in
jle
mov
imul
adc
adc
xchg
mov
pop
scas
scas
jnp
daa
mov
stos
into
or
push
jge
lods
or
sub
shlb
rcrb
inc
clc
pop
xchg
scas
jbe
aam
aam
mov
nop
shll
outsb
out
sub
xchg
sbbl
mov
stos
push
arpl
daa
xchg
xor
jl
push
int3
out
adc
add
stc
push
jmp
leave
pusha
push
sbb
call
fwait
pusha
imul
call
rcrl
xchg
and
jnp
mov
lret
mov
pop
lods
jnp
jno
iret
test
push
mov
ds
mov
arpl
insb
jno
inc
xorb
jo
push
jle
sbb
rcll
lock
lock
cmp
xchg
add
iret
xor
shlb
rolb
mov
or
mov
xlat
ja
loop
ret
sub
jbe
in
les
and
push
lret
pushf
jno
lea
push
jnp
push
aad
aad
xchg
lret
aam
icebp
clc
imull
imull
mov
icebp
in
aad
pop
add
jns
pop
jp
and
shlb
xor
scas
add
and
cmp
or
lods
pop
xor
sub
sub
mov
sbb
mov
lret
ds
lahf
roll
mov
jbe
fldcw
mov
in
push
dec
jne
das
or
xor
imul
cli
pop
pop
sar
mov
in
les
stos
adc
adc
or
stc
push
mov
addl
and
test
popf
ja
test
in
outsb
aad
jecxz
sbb
in
adc
jns
arpl
cli
cmp
ljmp
xor
nop
pop
ror
mov
adc
xor
push
sbb
mov
dec
xchg
fildll
ret
mov
mov
aaa
orl
xor
in
ret
ja
mov
and
idivb
sar
xor
in
push
pop
lret
aaa
inc
dec
loopne
leave
dec
add
jp
movsb
inc
scas
pop
outsl
mov
loop
je
sbb
mov
xor
jb
inc
hlt
iret
pop
in
test
aam
inc
popa
mov
out
xchg
cmp
clc
stos
aam
loope
add
jnp
push
out
fistl
filds
or
pop
push
popa
sub
xchg
cltd
cmp
inc
pop
jl
sub
jecxz
bound
and
xchg
xchg
inc
ja
stos
push
imul
jmp
xor
sub
push
ss
sti
mov
sub
testl
es
cmp
mov
aaa
push
mov
mov
pop
xchg
pop
jge
jns
aad
lock
push
mov
mov
mov
scas
pusha
cmpsb
sti
mov
insl
es
aaa
jb
add
or
sbbb
mov
sbb
sti
and
cli
mov
xor
call
fidivs
inc
jecxz
sbb
bnd
out
shll
cmc
xor
pop
shll
dec
stos
lds
jbe
scas
fbstp
jae
xchg
ljmp
mov
adc
ret
bnd
dec
scas
cwtl
outsb
popf
xchg
inc
mov
repnz
incb
mov
push
pop
cmpsl
pop
incl
push
ret
leave
scas
ss
push
int
sbb
and
mov
adc
mov
sub
mov
fdivrl
and
lds
mov
or
mov
pop
xchg
pusha
inc
cmp
add
in
dec
sbb
jle
mov
jle
ret
divb
pop
es
movsl
cwtl
inc
sbb
test
adc
xchg
inc
add
popf
mov
inc
stos
xchg
mov
lods
and
ret
dec
and
inc
push
les
int
jo
or
sbb
cltd
jle
cmpl
dec
cmp
inc
ja
jb
lods
sar
xchg
hlt
in
rorb
test
adc
push
ja
inc
push
push
lahf
xchg
outsl
scas
push
daa
mov
inc
mov
sub
jno
push
imul
int
adc
pop
dec
mov
push
scas
mov
andl
fucomi
jne
in
stos
bound
repz
das
sarb
hlt
or
and
push
push
mov
pop
or
rclb
das
pushf
push
mov
in
push
xchg
jmp
mov
mov
pop
pop
pop
xor
inc
push
in
mov
sbb
in
inc
out
loop
dec
scas
push
dec
jp
popf
xor
pop
nop
pusha
outsl
cmp
in
clc
sbb
popf
shrb
cs
pop
sub
pop
push
xchg
add
mov
pop
pop
std
fcmovnu
inc
mov
sub
xor
dec
add
test
push
lods
cltd
insl
mov
rclb
xchg
push
aad
test
test
and
addb
add
xchg
test
adc
mov
mov
inc
adc
clc
lcall
inc
jmp
mov
lods
insb
and
inc
js
inc
adc
flds
test
insb
icebp
lods
mov
ljmp
sar
cmp
stc
dec
std
fcos
mov
jg
mov
cmp
mulb
jo
fcmove
push
inc
loopne
push
ljmp
mov
in
lcall
xor
cmp
test
push
inc
adc
cmp
aas
insl
adc
pop
xor
push
lahf
in
mov
cli
sahf
xor
je
cltd
sbb
inc
lods
aaa
cmp
xor
shll
pop
or
and
daa
iret
loop
jb
mov
dec
mov
adc
jecxz
and
fs
ljmp
aam
fstpt
inc
insb
jle
cmpsb
mov
add
lods
mov
lret
or
div
xchg
sub
lret
scas
sub
push
and
scas
cld
ljmp
mov
push
nop
js
mov
pop
in
pop
push
inc
fisubs
mov
push
lret
pop
test
mov
jo
adc
push
ja
data16
test
mov
mov
mov
rolb
pop
ret
add
mov
pop
ror
inc
rorl
adc
mov
or
test
std
dec
cmpsb
mov
jns
pop
jnp
vmwrite
aaa
gs
fidivs
shr
sbb
js
fistpl
cmp
cltd
and
push
hlt
loop
gs
sbb
sbb
mov
imul
int
xchg
add
xor
mov
gs
mov
xchg
pop
mov
loope
sbb
addr16
rorb
hlt
das
mov
pop
sub
sbb
mov
mov
sub
adc
loopne
jae
fmull
sbb
jno
inc
addb
fsubl
pop
pop
int3
imul
inc
pop
out
push
jge
sbb
mov
stc
cmp
cmpl
add
sub
stc
pusha
add
adc
lret
inc
mov
sub
sbb
xor
sub
xor
in
pop
jg
jbe
repnz
xor
xchg
lret
movsb
cmpsl
scas
gs
push
add
iret
popf
imul
fwait
jae
in
mov
jl
clc
add
mov
xchg
cmpsl
push
in
or
sub
sub
xor
adc
xlat
cmp
mov
mov
fsub
mov
mov
xor
fsubs
daa
xlat
dec
push
jp
adc
lds
pop
push
add
and
mov
xchg
push
fbld
addr16
mov
aaa
dec
imul
shll
popf
mov
pop
cli
adc
jne
mov
aad
and
jge
das
pop
pop
in
mov
xchg
dec
cmpl
jmp
sub
push
mov
mov
outsl
mov
or
push
jle
icebp
or
imul
mov
xor
or
add
inc
sarl
fiadds
ljmp
cmc
lods
in
sub
andl
in
push
mov
sub
aas
cmp
pop
lods
sub
mov
sub
jle
ljmp
sub
insl
sub
into
pop
into
shll
insb
sub
cmc
dec
shrb
cmp
int
insl
fwait
mov
pop
jecxz,pn
repz
aad
lock
fimuls
nop
pushf
out
adc
mov
xchg
add
mov
inc
int3
adc
add
mov
sub
fwait
gs
movsb
faddl
push
push
insl
lret
ret
je
in
xchg
fmull
mov
push
dec
jb
jg
and
shll
mov
imul
testb
mov
lods
push
inc
push
jns
jl
fwait
inc
mov
arpl
mov
xchg
orl
ljmp
scas
movsl
dec
test
in
mov
cmp
stos
test
xor
test
nop
jge
xchg
sbb
sbb
popa
enter
lods
xor
loope
lret
lea
xchg
add
shrb
bound
xor
pop
div
sahf
xor
movsb
cwtl
les
xor
repnz
xlat
leave
mov
mov
popl
js
xorl
in
shlb
inc
dec
xor
sahf
out
inc
or
fcmovb
mov
popf
mov
roll
push
jmp
jecxz
lcall
ljmp
fisubrs
das
loope
ret
jb
jmp
or
dec
rcr
call
nop
jg
sbb
cmpsl
int
or
pop
test
pop
mov
outsb
scas
adc
jmp
lds
xchg
push
iret
pushf
clc
arpl
lods
pop
rcr
mov
repz
stos
pop
insb
aad
push
and
mov
push
jae
xchg
scas
lock
mov
mov
imul
adc
mov
lea
in
ljmp
test
pop
xchg
push
ja
mov
aam
mov
ret
jno
fcmovne
test
mov
xchg
adc
xchg
outsl
loop
mov
adc
stc
shlb
lea
ds
push
fs
sub
mov
xor
add
sub
cmp
add
push
mov
rorb
lea
hlt
push
cmp
xchg
jnp
sbb
jbe
mov
stos
test
mov
mov
jge
sbbb
mov
popf
imul
cmpsb
mov
adc
pop
addl
push
inc
pop
push
cli
adc
inc
fwait
scas
xor
mov
mov
push
dec
xchg
pop
cli
jnp
fimuls
les
sub
xchg
push
add
mov
jle
cmp
mov
adc
mov
xchg
lods
es
pop
jae
xchg
repnz
adc
repz
nop
add
dec
dec
es
xor
sahf
push
in
xlat
loope
dec
repnz
dec
and
loop
push
mov
and
lret
sub
ret
xor
jbe
pushf
mov
mov
or
inc
fwait
xchg
xor
jl
inc
and
fcoms
mov
das
lret
jb
and
mov
pop
and
aaa
in
imul
or
shr
lahf
repz
les
lcall
lahf
aam
nop
fiadds
aas
es
leave
mov
mov
mov
xor
std
jno
mov
mov
pop
loop
arpl
fisubl
cld
push
cld
jge
sbb
test
xchg
test
add
ret
fisubl
ret
push
fidivs
faddp
sub
cmp
mov
ret
stos
mov
ret
sbb
sub
sahf
cmp
xor
gs
or
mov
stc
fistpll
shlb
cld
jbe
out
xchg
mov
test
ljmp
rclb
call
mov
cmp
ja
xchg
or
dec
jb
pop
in
xor
add
arpl
lods
inc
mov
mov
jecxz
xchg
dec
ljmp
test
lock
outsb
adc
pop
int
test
cltd
mov
mov
mov
loope
cmpsb
hlt
sbb
jecxz
mov
aas
ret
inc
mov
xchg
lret
movsb
ljmp
and
xchg
mov
ljmp
icebp
xor
and
cld
xchg
mov
push
push
mov
mov
dec
inc
lret
adcl
inc
xchg
ret
aas
and
sub
cmp
add
xor
test
jo
inc
mov
lret
mov
cmp
int
or
sarb
int3
mov
push
xchg
dec
mull
add
fwait
out
dec
mov
mov
push
adc
es
lcall
jle
add
mov
push
cwtl
add
pop
bound
push
pop
jno
fstps
xchg
and
popa
xchg
neg
ljmp
jle
mov
psubd
stc
addb
mov
sub
lock
movsb
cwtl
ds
pop
xor
pop
lods
sbb
movsb
fimuls
push
test
cmp
ret
out
jb
fsubl
mov
cwtl
add
cmc
mov
int3
jmp
dec
push
jmp
adc
inc
cld
mov
aaa
xchg
sarb
js
scas
xchg
sub
cs
outsb
inc
mov
push
inc
pushf
adc
test
jo
add
dec
stos
xchg
lret
dec
rcll
hlt
xor
mov
mov
cld
enter
or
and
scas
jmp
or
rcll
int
inc
loope
shlb
out
inc
jbe
mov
mov
mov
push
daa
xor
stos
mov
pop
cmp
icebp
push
aad
mov
aam
cwtl
sub
pop
mov
leave
sbb
mov
inc
push
rcrb
movl
test
mov
xchg
aas
fisubl
push
aaa
iret
jae
test
adc
add
xor
xor
dec
mov
mov
dec
adc
aaa
or
mov
add
out
sbb
loope
iret
cmpsl
cli
pop
les
jecxz
mov
pop
mov
and
in
mov
rolb
adc
mov
ja
and
inc
lahf
push
imul
push
int
inc
insb
cmp
pusha
xchg
es
aaa
ret
cwtl
scas
inc
sub
sub
lods
push
xor
xchg
insb
push
ds
loop
add
inc
sbbb
mov
dec
dec
loope
or
stos
cltd
mov
sbb
les
mov
mov
xchg
lods
sti
pop
inc
idivb
inc
cld
fs
pop
mov
dec
sbb
xchg
daa
insb
scas
mov
sub
or
mov
mov
jb
sub
mov
ret
es
jecxz
and
jae
mov
popa
das
jae
lds
push
int3
shrb
mov
ficomps
xchg
subb
xchg
lods
jg
scas
pushf
sbb
std
scas
cltd
push
shll
sbb
sub
fistpl
mov
sbb
fstl
adc
xchg
sub
dec
cmc
dec
lods
cmpsl
hlt
xor
inc
out
jmp
sbb
mov
cmpsl
xor
push
rcrl
cmp
cmp
add
mov
mov
push
push
jge
xchg
mov
or
mov
rol
testb
xor
mov
hlt
test
xchg
mov
mov
push
add
clc
sbb
sbb
dec
sub
push
fwait
iret
and
jo
xchg
lcall
fidivrl
push
je
add
jne
adc
mov
cmp
sbbl
push
cmpsl
popf
or
mov
hlt
je
and
mov
sbb
push
sahf
xor
in
xor
test
add
in
jg
or
loope
paddusb
and
xchg
cltd
sbb
mov
adc
mov
pop
les
sbb
mov
fld
sbbb
pop
dec
jl,pt
inc
mov
jnp
fwait
movsl
adc
js
ret
pop
push
ds
fimuls
mov
inc
into
insb
xlat
test
jb
mov
in
cmp
test
push
js
adc
icebp
cmp
out
mov
roll
dec
imul
das
repnz
jmp
add
out
mov
or
ret
jecxz
mov
pop
fstpl
pop
push
cmp
xchg
sbb
sti
xchg
jns
mov
push
clc
popf
jns
fxch
mov
xchg
xor
shll
jne
loope
jae
jae
mov
movsl
popa
mov
push
sbb
sbb
inc
xor
addl
inc
mov
cmp
or
sbb
je
fsubrs
mov
cmpl
jg
jmp
push
push
ret
aas
lock
test
push
pop
pop
loop
xor
jecxz
fmul
xor
push
pusha
or
mov
test
cmp
pop
add
sub
xchg
movsb
loop
int
xchg
push
ja
in
bound
inc
lods
pop
adc
push
mov
fcompl
ss
roll
lret
test
inc
inc
xor
mov
movsb
dec
xor
movsl
out
rcrl
jo
les
mul
arpl
xor
inc
push
out
out
dec
mov
xor
inc
lock
pop
popa
xchg
push
sbb
negl
lret
jge
outsb
and
push
iret
dec
fmull
dec
fbld
xchg
sbb
lret
shr
dec
jnp
call
out
jge
pop
clc
mov
mov
push
fmulp
xor
and
add
mov
pushf
mov
mov
mov
js
and
mov
push
sub
mov
and
xchg
xchg
mov
push
int3
cmp
dec
hlt
xor
mov
in
subb
mov
sbb
adc
push
mov
jge
add
mov
ljmp
or
xchg
lea
jmp
sahf
jl
sub
xadd
dec
mov
or
pop
cwtl
dec
jnp
cmp
adc
andb
and
mov
repz
push
add
andl
and
cld
in
daa
ret
mov
sbb
pushf
mov
ja
test
cmp
pop
sbb
lea
xchg
fwait
dec
faddl
dec
and
cmp
idivl
popf
aaa
out
sub
frstor
iret
dec
adc
aad
xlat
test
push
jmp
sbb
loop
mov
sub
xlat
test
fidivrs
xchg
int
lods
js
mov
push
sbb
test
jp
lds
mov
xchg
fwait
aam
enter
gs
xor
mul
stos
cmp
and
lea
pusha
fsubr
movzwl
js
dec
in
out
sub
lcall
cmp
rcll
xchg
jp
sub
test
mov
adc
inc
fwait
dec
leave
inc
and
scas
popf
ljmp
inc
push
mov
test
and
xchg
mov
frstor
out
mov
dec
cltd
dec
jecxz
inc
test
add
dec
cmp
xor
and
scas
pushf
stos
cmpsl
in
pop
repz
movups
cwtl
jp
lods
ret
push
lret
loop
cli
nop
adcb
lds
or
sub
sti
mov
movl
cli
xchg
pop
aaa
jns
fldenv
or
ss
cmc
addr16
xor
or
mov
das
lea
jp
and
mov
jg
fcoms
xor
mov
mov
inc
mov
popa
pusha
call
mov
jno
jb
adc
das
jp
js
mov
mov
loopne
cwtl
adc
pop
addr16
mov
ss
xor
test
movsl
adc
test
sub
jge
jge
xchg
aaa
sbb
nop
scas
xchg
insb
mov
mov
mov
aad
or
arpl
out
fimuls
pop
mov
bound
mov
and
arpl
sbb
xchg
stos
cmpsl
xor
cmp
out
pop
xchg
pop
jl
xchg
scas
jo
mov
testb
lcall
fistpl
inc
in
adc
adc
lea
jbe
push
fldl
cmpsb
push
mov
or
mov
fldl
jo
push
inc
ss
push
pop
mov
push
out
pop
cltd
cmp
popl
dec
movsb
mov
cmp
leave
and
xchg
movsb
dec
dec
aaa
hlt
imul
idivl
inc
dec
inc
add
push
adc
push
pop
jns
inc
and
sbb
add
insb
xchg
cmp
aad
or
loopne
mov
xor
arpl
xor
sub
in
insb
std
call
sbb
ljmp
in
push
and
lock
fcmovnb
test
xchg
pop
cltd
les
cmpsl
subb
xchg
repz
xchg
adc
lods
cmc
xor
lods
inc
adc
push
aam
cmp
push
xor
mov
dec
repnz
push
scas
imul
stos
icebp
ret
mov
push
lcall
mov
sarb
leave
outsb
xor
call
stc
fldl
pusha
daa
inc
pop
std
sbb
inc
pop
lahf
xchg
inc
mov
sbb
sub
fcmovu
lret
in
adc
xor
testb
test
popa
mov
add
add
pop
fcompl
popl
mov
int
pop
pop
push
stos
movsl
cmp
sbb
mov
push
or
cmp
inc
mov
cs
imul
fisubs
lcall
lret
xchg
xlat
mov
cmp
rcl
jmp
cmpsl
sbb
xchg
jnp
cs
jnp
pop
mov
push
or
inc
sbb
aam
pop
repnz
mov
es
push
inc
sbb
popf
rolb
pushw
orb
mov
and
das
pop
xor
fildll
push
or
pop
fidivrs
jl
hlt
dec
jmp
sahf
outsb
sarl
int
sbb
jno
or
in
jg
inc
pop
fs
sahf
iret
ja
aaa
jnp
or
sbb
pop
lea
jp
std
jno
fwait
sti
pop
sub
imul
sub
or
ss
mov
jnp
popf
dec
jge
mov
lret
iret
lss
inc
insb
mov
xor
mov
scas
stos
rcll
xchg
pop
or
icebp
jae
pop
mov
mov
or
out
jge
adc
movsl
jge
push
loopne
ja
icebp
lahf
pop
test
push
enter
hlt
ds
cld
mov
testw
sbb
xorl
jno
mov
adc
aad
and
cwtl
lea
jp
cmp
sbb
jae
movsb
outsb
push
sbb
sarl
in
xor
xchg
or
fstps
inc
cmc
test
aad
jbe
adc
jmp
vmread
mov
sbb
stc
ljmp
sbb
mov
inc
sbb
imul
mov
pop
dec
and
loop
scas
jb
out
jecxz
mov
lds
push
cmp
jno
rcrb
sub
cmpsb
negb
cmc
fidivrs
movsb
inc
sahf
repz
jbe
or
xchg
ljmp
clc
lds
adc
loopne
std
jb
mov
cltd
movsl
mov
dec
inc
mov
add
mov
rdmsr
rcll
addr16
jge
add
in
je
pop
sbb
ds
outsb
jg
in
loope
pusha
subb
movsl
sti
mov
outsl
or
adc
fisubl
pop
jmp
xchg
stos
out
sbb
loop
mov
sahf
jnp
push
push
cld
rcrb
pop
cmp
je
faddl
adc
das
movsl
lock
push
inc
jmp
xchg
and
mov
insl
push
mov
ja
mov
adc
mov
xchg
mov
pushf
ret
lods
fimull
in
loope,pt
sbbl
testl
sbb
stos
mov
fwait
les
ja
push
pushf
lods
mov
fnstenv
push
pop
xchg
mov
cmp
mov
mov
out
cmc
leave
out
lock
gs
pop
add
fwait
ret
pushf
pop
outsb
addb
lret
les
push
pop
outsl
and
pop
or
jg
mov
and
pushf
lock
stos
aad
push
xchg
mov
and
jo
push
dec
mov
cmp
jl
outsb
lcall
cltd
cli
mov
pop
sub
inc
lret
xchg
push
sbb
dec
mov
dec
mov
das
cmp
mov
rorb
jo
mov
enter
push
lea
cmpsb
pop
pushf
add
je
pushf
add
flds
push
imul
inc
aad
mov
mov
inc
xor
mov
inc
mov
lahf
mov
insb
dec
sbb
gs
pop
jge
repz
sbb
push
into
mov
mov
jne
lahf
mov
push
call
adc
mov
xchg
sub
mov
add
jp
jno
mov
bnd
loope
aas
mov
jnp
cmp
mov
mov
push
cmp
xchg
inc
loopne
sbb
es
adc
in
cs
push
int3
fwait
or
cmp
fprem
lock
push
mov
pop
xchg
ds
jg
outsb
fsubl
loopne
addb
mov
rolb
mov
dec
shl
sbb
dec
add
xorl
repz
scas
jno
jp
xchg
cltd
or
jbe
and
add
dec
daa
clc
lods
into
adc
test
push
pminsw
adc
and
mov
cs
pop
nop
xor
xor
cmpsl
push
mov
cmc
mov
leave
ds
push
lods
cmp
into
out
mov
out
pop
mov
xor
xor
cwtl
das
pop
lret
xchg
out
xlat
dec
insl
neg
adc
mov
cmp
xchg
cmp
adc
push
xor
lods
sbb
push
lock
cmp
sbb
cli
xchg
mov
mov
adc
cld
das
push
mov
or
bound
adc
cltd
rclb
fwait
or
pop
jecxz
push
lea
xor
adc
push
outsl
jnp
test
pop
insb
pop
xchg
mov
jge
into
lds
pop
es
mov
and
leave
inc
sbbb
inc
inc
inc
mov
and
and
cmp
in
dec
scas
cli
outsb
add
cmp
mov
pop
test
sarb
sub
jo
xchg
imul
adc
add
mov
pop
push
jle
js
or
sub
sahf
fxch
jge
mov
add
adc
jl
shlb
sti
pop
fs
lret
inc
mov
aad
jae
sub
sub
push
push
adc
fdivrs
xchg
aad
hlt
and
sub
cmc
stc
sub
cmc
xchg
js
mov
jno
mov
mov
add
ret
or
sub
cmp
test
rcl
pop
and
jno
cld
stos
enter
lcall
jmp
sbb
mov
adc
adc
js
in
mov
or
mov
es
cwtl
scas
repz
out
pop
pop
cs
mov
addr16
sti
xchg
fnstenv
inc
xchg
lea
jp
div
push
pop
jns
mov
sbb
rorb
stc
inc
ds
ret
and
pop
in
pop
or
jge
sub
test
push
push
in
cmp
repz
sbb
lods
cmpsl
sbb
mov
jg
sub
dec
and
or
imul
and
shlb
out
ror
xchg
aam
repnz
lcall
sbb
mov
andl
mov
xchg
and
scas
mov
ss
lret
adc
or
add
icebp
sar
adc
scas
repz
imul
cltd
inc
sub
call
jg
stos
mov
clc
pop
jle
jb
rorb
xor
push
test
cmc
iret
dec
xchg
cmp
loopne
push
std
stos
add
jmp
test
mov
lret
testl
mov
and
mov
ret
push
sahf
mov
icebp
add
dec
sub
frstor
xor
daa
repz
mov
inc
subb
adc
sahf
xchg
xlat
cmc
adc
enter
test
jl
in
popf
stos
fmull
and
cmc
inc
mov
test
push
fistps
je
xor
xchg
ss
out
or
gs
mov
mov
push
jno
stos
mov
int3
sar
int
and
or
mov
mov
add
xchg
pop
mov
shll
xor
roll
je
mov
fwait
add
cmp
dec
jmp
and
cld
lea
push
sarb
cld
movsb
sbb
fadds
jle
aam
fisubl
pop
mov
push
les
mov
sbb
insb
outsl
pop
cmpsl
test
pop
movsb
mov
fidivs
push
mov
rcrb
mov
cmp
mov
and
inc
dec
in
loope
cmpsl
imul
stos
xchg
outsb
mov
in
sub
or
pop
dec
out
cwtl
jge
lea
in
push
mov
pop
jge
sub
insb
mov
in
loopne
into
inc
mov
movsl
pushaw
imul
cmp
cwtl
andl
cmp
loop
mov
sti
add
mov
jmp
orl
sub
jecxz
lret
repnz
inc
rcl
ret
iret
ret
scas
addr16
arpl
fildl
daa
mov
jb
adc
jmp
js
xor
xchg
les
inc
add
pop
mov
es
fnsave
mov
jge
shlb
movsb
xor
fs
lods
push
frstor
cltd
dec
mov
fwait
add
scas
clc
cld
sbb
adc
lock
sbb
fs
push
stc
shll
lea
inc
xor
mov
sub
cmp
fucomip
adc
inc
mov
pop
dec
adc
push
mov
adc
les
sti
or
test
push
stc
inc
cs
inc
divl
and
and
pop
and
xor
sbb
push
and
mov
in
mov
ret
sbb
lods
jl
xchg
adc
dec
out
cs
adc
insb
ds
inc
in
inc
mov
push
mov
sbb
int
xor
test
inc
rcl
dec
xchg
cwtl
adc
daa
out
xchg
kortestb
sbb
add
dec
das
xor
inc
outsl
subl
add
ret
dec
xchg
sbb
jnp
xchg
and
dec
jnp
dec
or
mov
mov
and
imul
mov
or
arpl
xchg
xor
hlt
test
scas
aam
xchg
stos
add
fnstcw
cmp
repnz
mov
inc
pop
js
aad
mov
adc
icebp
das
dec
pop
and
in
jl
jl
movsl
adc
iret
cmp
pop
addl
std
pop
cld
shrb
cmp
mov
jns
shlb
or
adc
xor
testb
shll
jae
bound
jnp
std
aaa
jl
inc
insb
shlb
stc
popa
jmp
out
dec
xor
cmp
neg
push
jge
dec
sub
jo
ja
cmc
arpl
insl
or
adc
and
divb
scas
mov
jecxz
push
dec
int
inc
mov
inc
push
mov
retw
out
shl
stos
sub
outsb
loop
into
mov
out
adc
mov
push
mov
and
cmc
and
push
cld
dec
pop
xchg
addr16
xlat
movsb
xchg
in
pop
add
xor
mov
loopne
xchg
cltd
or
cld
or
daa
adc
sbb
add
pop
adc
xchg
inc
mov
test
add
scas
cltd
dec
and
dec
daa
loop
adc
add
xchg
movsb
mov
jno
clc
lcall
jno
dec
inc
mov
mov
xor
addb
and
mov
adc
dec
ljmp
jle
inc
sahf
orl
or
or
fdivs
add
add
xchg
int3
adc
test
inc
jg
lea
sti
dec
sbb
cs
xor
adc
or
stc
insb
sub
add
jmp
jmp
fwait
inc
add
int3
sti
cmp
stc
addb
icebp
lea
jae
lahf
fdivs
stos
iret
mov
pop
aaa
jbe
push
shlb
ds
lcall
addr16
lods
lcall
imul
pop
out
outsl
cmpsb
sbb
lret
daa
mov
out
icebp
xchg
sub
sbb
lods
lcall
pop
orl
stos
jle
jge
or
pop
and
ljmp
lds
and
or
adc
dec
inc
add
add
mov
in
push
call
mov
inc
sti
xchg
xor
jg
je
mov
cmp
stos
adc
fstl
sbb
xchg
clc
xor
mov
sub
cwtl
es
xchg
dec
lcall
addr16
cmp
sbb
aad
test
scas
shrb
loope
shrb
es
adc
lods
dec
out
lds
shl
popa
stos
dec
push
sbb
test
cmp
shl
mov
loope
xchg
push
scas
nop
push
push
sbb
dec
shlb
dec
js
jmp
sub
mov
jl
inc
mov
jl
in
mov
jbe
push
pop
fcmovbe
mov
stos
xchg
dec
sbb
lock
out
inc
mov
std
mov
sub
lahf
fsub
rclb
xor
cmpsl
add
sbb
push
std
and
adc
lods
cmpsl
shlb
xchg
and
aaa
test
aas
les
lret
mov
push
cld
aad
in
and
xchg
insl
fstps
adc
inc
icebp
xor
mov
mov
icebp
cmp
in
mov
sti
dec
test
ret
mulb
leave
jns
js
out
and
lods
sbb
push
jne
outsb
jl
movsl
dec
cmp
js
subps
iret
adc
ret
jne
pop
add
fs
shll
ss
roll
xchg
sti
test
lods
add
and
stc
pop
push
sub
or
push
mov
adc
push
imul
cltd
jecxz
add
int
in
push
repz
push
rcrl
mov
mov
outsb
insb
adc
add
mov
adc
in
lods
xchg
dec
sbb
pop
mov
xorb
mov
ljmp
and
mov
divl
mov
imul
push
daa
shlb
in
adc
cwtl
push
xor
inc
cld
inc
push
notl
shlb
ret
lret
es
mov
test
dec
cmpsl
shlb
movsb
cmp
jae
aaa
mov
push
aas
movsl
pop
repnz
inc
out
lods
aaa
and
sbbl
mov
lds
iret
xchg
notb
mov
mov
imul
pop
loopne
insb
add
into
adc
mov
loope
loope
mov
jp
std
cmpsb
jnp
adc
movsl
es
cltd
adc
scas
sbb
lods
das
fisttps
call
jns
push
sbbl
repz
dec
jno
stc
aam
mov
inc
add
pop
and
pop
gs
enter
xor
out
imul
push
pop
jmp
pop
push
fmull
js
jne
outsb
mov
ret
fdivp
cmp
ljmp
cs
inc
inc
or
pop
jne
mov
dec
mov
scas
cmp
xchg
push
dec
movsl
or
fcmovb
add
mov
aaa
lret
stos
les
push
dec
sarl
cmp
popf
ljmp
push
inc
arpl
sub
sub
mov
xchg
xor
sbb
cwtl
xchg
jmp
ror
pop
test
ljmp
imul
mov
jnp
jb
mov
pop
cmp
push
inc
subb
jns
data16
stc
lock
lods
or
sub
dec
lret
inc
inc
lock
out
dec
xchg
or
in
sbbl
fists
in
sbb
add
js
push
scas
jle
cmp
cmpl
sarl
pushf
push
mov
mov
and
in
cmp
cmp
fcom
lret
and
arpl
shl
push
push
mov
imul
fnstcw
mov
mov
mov
das
movsl
sbbb
mov
into
int
pop
mov
rcrb
xchg
mov
daa
jne
into
arpl
idiv
dec
jle
sub
push
sti
jb
inc
and
xchg
mov
inc
inc
and
loopne
ds
xor
xchg
xchg
cmp
xchg
mov
inc
int3
xchg
push
push
mov
jb
mov
mov
fcmovne
leave
gs
out
jg
loope
in
add
loop
dec
movsl
and
add
pop
add
loop
scas
in
fmuls
cmp
add
xor
jmp
xchg
movsl
inc
mov
sbb
test
jmp
mov
stos
ficomps
out
and
sbb
push
inc
push
push
cmp
sbb
stos
leave
faddl
aaa
xor
les
pop
add
mov
into
cmp
ret
movsl
icebp
arpl
adc
repz
mov
jnp
ds
enter
dec
xchg
pop
jle
repnz
fsubr
pop
add
lcall
aas
decl
shll
sahf
push
rorl
inc
shlb
adc
xchg
cwtl
mov
sub
das
lods
xchg
cmp
dec
stos
mov
ljmp
add
cmp
xchg
dec
mov
aaa
cmp
sarl
movsl
inc
jae
pop
inc
bound
rcrl
push
add
sbb
cmpsl
ret
sbb
leave
xchg
pop
jg
mov
inc
and
lret
pushf
jg
pop
cli
mov
jg
lods
dec
shrl
or
loope
adc
scas
xor
push
xorl
push
sbb
mov
fimull
dec
xchg
out
das
stc
sbb
cmp
sub
por
add
movsl
mov
mov
mov
xchg
daa
pushf
xor
xchg
dec
in
frstor
sub
fmull
mov
xor
cmp
push
shll
push
add
xor
cmp
xor
xchg
push
je
pop
lds
rclb
movl
in
sahf
xor
xor
mov
in
arpl
push
aas
mov
aaa
into
jne
call
inc
push
push
inc
jo
test
icebp
sbb
mov
and
sub
push
dec
add
xchg
push
dec
enter
or
jne
or
mov
std
push
cmp
mov
out
es
jp
push
add
into
aam
xchg
lahf
adc
adc
jb
push
xchg
out
ja
jl
and
pushl
or
daa
sub
in
fldl
call
mov
call
mov
mull
sbb
and
cli
into
popa
das
shl
cmc
mov
inc
loop
and
inc
mov
inc
iret
dec
cmpsb
inc
and
push
or
mov
jecxz
mov
pop
sub
mov
xchg
inc
xchg
cmp
movsb
push
test
test
pop
and
inc
inc
test
dec
adc
mov
out
imul
lods
lea
out
int3
xchg
movsb
fistl
in
clc
outsl
fcoml
push
repnz
mov
loopne
or
push
add
nop
pop
into
mov
cmp
cmp
mov
das
sbb
into
mov
adc
push
aas
mov
imul
xacquire
adc
mov
push
lret
pop
push
popf
ffreep
in
xor
inc
push
push
popa
xor
ds
push
mov
cld
cli
fcmovne
push
xchg
notl
das
dec
loope
add
sti
inc
inc
mov
ds
loopne
popf
jns
test
cmpsl
adc
xor
sbb
adcb
jp
aaa
mov
ret
imul
xchg
movsb
inc
fwait
inc
xor
sub
and
dec
jb
adc
pop
jae
mov
imul
es
cltd
mov
pop
mov
xchg
jg
xchg
shlb
std
mov
out
mov
and
lods
mov
nop
push
out
stos
out
lret
cli
pop
repz
push
stos
cmp
mov
leave
inc
mov
arpl
jae
sahf
inc
inc
and
cmp
repnz
dec
popa
cld
or
loope
cmp
xor
and
inc
test
pop
js
jecxz
out
lock
pop
cld
enter
xorl
mov
cld
pop
ret
add
jno
push
in
int
mov
es
and
ljmp
hlt
xchg
imul
lea
leave
pop
cmp
jns
or
leave
inc
pop
loopne
aas
cmp
into
sti
adc
test
jno
mov
push
out
sub
push
add
sbb
add
repnz
cmc
aam
xchg
add
pushf
xchg
iret
mov
and
mov
ljmp
sbb
ss
cmpsb
adc
sahf
mov
loop
adc
lahf
andb
mov
adc
sbb
mulb
mov
ja
add
jne
cmp
repz
push
jge
push
jecxz
iret
loope
xlat
add
or
lcall
test
or
dec
jo
add
jb
pop
aas
push
push
sbb
rclb
mov
out
adc
jno
ja
arpl
jle
xchg
loope
pop
adc
ret
mov
xor
andb
out
xor
jo
pushf
xor
adc
out
dec
mov
jg
int3
xchg
sbb
test
rolb
mov
mov
cli
push
loop
xchg
imul
rcrl
push
fst
push
sub
sub
push
jg
ds
fucom
fistps
sbb
sub
pop
arpl
push
push
cmpsb
cli
jb
call
jge
outsb
jmp
sbb
adc
outsb
aas
pop
hlt
pop
clc
jae
or
sub
stos
pop
clc
xchg
lock
dec
adc
fs
add
push
push
popf
jo
xor
mov
lret
test
xchg
sbb
cmp
or
pop
push
ja
loope
fbld
push
ret
lahf
pop
repz
push
shl
inc
xchg
fbstp
mov
insb
pop
sub
pusha
movsl
popa
xor
pop
sti
popa
cmc
jbe
mov
dec
lods
sub
mov
dec
push
nop
dec
push
les
mov
pop
test
or
aam
mov
xchg
clc
xchg
mov
not
sub
mov
adc
add
add
or
ret
jo
ficompl
dec
xchg
sti
dec
fstps
lcall
sbb
push
cmpsl
mov
ljmp
sub
push
push
pop
sub
gs
gs
fs
inc
mov
pop
imul
fdivrl
add
dec
das
outsl
push
sbb
sbb
in
mov
push
fisttps
sti
inc
push
das
push
mov
xchg
ds
popf
jle
and
jbe
pop
test
stos
inc
je
push
xor
and
in
scas
cmc
je
ret
fwait
adc
sub
xorl
mov
jnp
mov
das
xlat
fs
cmp
jae
shl
mov
push
filds
sbb
and
sub
les
js
mov
dec
rorb
xchg
insb
mov
or
mov
cmp
and
push
int
push
or
adc
sbb
xor
int
fst
test
or
stc
add
xchg
mov
mov
lock
rcl
cs
negl
divb
and
mov
inc
sub
mov
pop
hlt
cmpsl
movsl
pusha
fiaddl
sub
and
mov
dec
cltd
fdivl
xor
pop
loop
mov
pop
push
lods
mov
divb
shll
cmpsl
fs
ds
and
outsb
shll
imul
insb
jle
aaa
fdecstp
jle
push
pop
add
mov
sbb
or
hlt
popf
test
mov
mov
sbb
repz
cmpsb
punpckldq
sbb
sahf
dec
nop
shlb
fsub
push
and
lret
push
notb
mov
enter
clc
test
cmpsb
loop
clc
sbb
and
xchg
sarl
dec
jmp
add
imul
je
jg
aad
jno
xchg
hlt
adc
push
jbe
repnz
pop
aas
xchg
xchg
stc
loope
aam
sbb
lret
mov
insl
sub
adc
push
sub
andb
mov
cs
shll
mov
nop
enter
cli
xlat
mov
dec
or
lret
xchg
cltd
mov
out
mov
rcll
dec
push
add
subl
sbb
mov
in
sub
aaa
orb
adc
xor
imul
repnz
push
fidivrs
mov
sbb
inc
sub
test
add
movaps
mov
sub
fdivl
mov
add
enter
mov
mov
pop
stos
jns
and
jno
fdivrl
mov
and
fildll
mov
movl
jge
sub
jns
rolb
pop
adc
cmp
aaa
sub
sbb
or
in
push
pop
into
sub
mov
cmp
xchg
push
sub
aas
decb
sbb
and
mov
adc
inc
leave
mov
js
mov
int
inc
sub
sbbl
sbb
xchg
jns
leave
hlt
inc
adc
or
loop
xor
and
stos
into
iret
mov
xchg
cmp
daa
pushl
pusha
in
out
test
dec
pop
cmpl
jmp
sub
sub
mulps
cmpsb
jmp
jmp
gs
xor
daa
mov
mov
xor
jb
outsl
mov
dec
mov
arpl
notb
sub
pop
jb
push
inc
dec
push
pop
jbe
mov
adc
push
push
pop
lds
adc
jns
inc
sbb
or
push
xor
cmp
xchg
push
notl
pop
lret
push
jb
hlt
push
dec
loope
scas
movsb
leave
out
add
ljmp
adc
int
inc
sti
add
negl
dec
inc
sbb
int3
add
push
stc
nop
icebp
dec
jle
add
pushf
popa
aad
add
aas
xchg
aaa
std
xchg
jb
add
cmp
mov
cmpb
data16
gs
mov
rorl
imul
sub
cwtl
jmp
jp
mov
ljmp
mov
or
jae
cmp
jmp
sub
ret
rorl
lods
add
jnp
jo
mov
push
mov
in
pop
stos
xor
cld
xorl
mov
loopne
sahf
adc
fcompl
stos
addr16
or
jno
sahf
inc
or
out
sahf
xor
sbb
adc
ret
in
andb
push
test
pop
mov
mov
aam
out
lret
xor
stc
test
add
call
dec
pop
jmp
addr16
or
mov
std
aam
cmp
pop
loop
jns
movsl
sub
out
cmp
mov
sub
flds
sbb
add
xor
loopne
and
pushf
sub
xor
inc
dec
cmp
jle
std
lret
and
cld
adc
cmp
mov
cmpsl
and
gs
jb
js
jnp
mov
imul
scas
mov
add
in
aaa
cmp
xor
cmpsb
insb
stos
out
sbb
xchg
cmp
inc
cmpsl
add
or
aaa
or
repz
dec
mov
push
push
out
insb
arpl
sbb
test
out
add
mov
or
push
lods
fdivrl
jg
hlt
loopne
adc
aas
dec
or
jmp
das
xor
sbb
sbb
pushf
pop
inc
out
lock
push
mov
jnp
mul
xchg
mov
fistpll
xor
jne
and
ja
pop
hlt
adc
and
mov
arpl
fldl
push
leave
shrb
out
and
neg
iret
notb
std
in
mov
dec
xchg
aam
rolb
xchg
jne
inc
sbb
push
mov
lcall
push
aaa
cmp
lcall
ret
fucom
and
lods
pushf
aas
cltd
das
mov
lcall
push
sub
sti
or
xchg
clc
aaa
dec
je
xchg
fidivrl
inc
jmp
leave
and
add
into
jl
rdtsc
xchg
lock
and
bound
pop
pop
sbb
in
xor
cmpsb
dec
out
movsb
pop
and
push
mov
stos
mov
cli
adc
lret
adc
cmp
pop
decb
mov
popa
cmp
sahf
loopne
enter
push
arpl
stos
mov
cmp
lret
or
imul
sbb
inc
adc
inc
daa
movsb
mov
pop
push
xor
adc
stc
inc
pusha
mov
xor
dec
fdivp
mov
jg
and
shrl
and
add
daa
or
ss
mov
int3
mov
inc
adc
dec
push
or
lcall
test
fsubl
inc
clc
and
lret
int3
je
add
movsl
or
push
call
imul
xchg
mov
pusha
fucomp
divl
cmp
out
outsl
cli
jo
pop
xlat
cwtl
les
push
aad
mov
in
ja
cs
or
sbb
xor
cmc
iret
inc
push
dec
fs
sarl
xor
cmp
jnp
mov
lret
dec
jp
test
into
mov
jns
jne
loopne
push
sbb
aad
inc
std
js
mov
add
jp
cld
mov
leave
leave
mov
dec
jnp
fcoms
jmp
mov
xchg
stc
xor
inc
jmp
fcompl
inc
pushf
sar
out
mov
std
dec
add
cmp
lods
sbb
shl
aas
arpl
mov
cmp
pop
xor
lret
xchg
test
push
stos
int3
mov
mov
and
lds
pop
sub
fiaddl
stc
inc
mov
in
mov
fmuls
xlat
mov
loop
mov
ficoms
sbb
cmp
xorl
sbb
sub
popa
cmp
addl
pop
push
pop
cmp
mov
cmpb
dec
out
xchg
pop
popf
and
leave
mov
addb
fs
xchg
adc
mov
cmp
sub
aas
hlt
scas
pop
dec
clc
in
xchg
in
inc
cmpsb
add
push
mov
cmp
mov
push
stos
lock
xor
and
shrl
cmp
leave
int
pushf
jnp
ja
lock
repnz
pop
sub
aas
push
arpl
push
mov
cmp
cmp
aam
sbb
cltd
cmp
rcrl
sbb
push
xchg
stc
adc
jae
add
sub
sahf
inc
negl
pop
pop
mov
mov
loopne
xor
imul
inc
add
add
dec
inc
xchg
cmpsb
cmp
divb
adc
cmp
dec
sar
movsl
jecxz
inc
shl
adc
add
clc
cmp
adc
pop
int3
push
lds
xchg
mov
in
jo
nop
movl
xchg
adc
fldenv
fisubrl
pusha
mov
mov
scas
ds
sub
sub
int
imul
and
setae
gs
mov
jnp
sbb
call
into
jl
sbbl
push
mov
or
rcrb
xchg
mov
out
sbb
cmp
sarl
or
push
xchg
iret
jge
pop
mov
sub
in
or
sti
ja
in
in
les
and
add
inc
mov
loope
mov
pop
lds
call
out
ret
fstps
jo
xlat
adc
push
nop
in
icebp
dec
roll
das
or
js
cmc
mov
mov
sbb
repnz
pop
and
mov
push
jg
pusha
addr16
pop
xchg
outsb
jns
out
scas
inc
cmp
gs
adc
pop
jge
insl
ss
inc
rcr
cwtl
fs
dec
push
cmpsb
jp
loop
mov
xchg
rolb
adc
int
daa
leave
cmp
fdivl
or
push
mov
mov
xchg
mov
push
push
mov
rorl
jae
xchg
scas
jg
pop
ror
dec
sub
jae
lcall
jl
mov
lcall
and
out
add
inc
inc
ss
sbb
shl
pop
cmp
hlt
mov
mov
lret
push
cld
pop
pusha
push
inc
cmpb
icebp
lcall
in
idivb
jb
mov
rcr
mov
mov
and
push
stos
call
push
xor
dec
arpl
es
call
lea
mov
adc
pop
stos
fsubrl
mov
in
movb
dec
aam
sub
gs
repz
fisttpll
into
mov
cld
daa
in
jns
fisttpll
add
clc
fsubs
xchg
dec
pop
xchg
mov
and
insl
lret
loop
push
subb
pop
test
inc
pop
mov
repnz
fstpl
dec
popf
lea
and
or
out
lods
out
xchg
addl
sar
add
or
xor
mov
pop
int
sarw
sub
in
roll
jmp
xchg
or
popf
push
lock
jnp
insb
test
ljmp
inc
pop
or
sub
lods
jl
xchg
inc
repnz
mov
sub
or
ret
cmp
cwtl
test
cmp
rcrl
addr16
pop
inc
xchg
inc
in
ljmp
negb
and
inc
xchg
mov
jge
push
push
jbe
add
pop
pusha
xchg
mov
push
cmp
fisttpll
rcrb
cmp
mov
clc
add
inc
pop
pop
inc
arpl
cmp
and
xchg
mov
stos
jbe
pop
mov
fcomps
in
shr
push
mov
insl
xchg
jae
push
bound
and
fcoms
add
xor
sub
rcrb
cmp
les
nop
mov
cmp
jle
leave
popa
cmpb
adc
cld
pop
xlat
ret
xchg
and
call
jge
add
test
stos
mov
xchg
inc
and
sarl
inc
jns
jecxz
movsb
hlt
sbb
into
mov
shlb
data16
dec
push
movsl
repnz
cmp
xor
mov
and
loope
push
in
xchg
fbld
int
ja
stos
movsl
test
and
xlat
sub
cmp
push
add
je
insb
add
test
jge
fsubrp
shlb
mov
cmc
je
andb
jle
dec
leave
leave
cmpsb
xchg
jmp
iret
movsb
dec
mov
movsl
jno
sub
sbb
mov
scas
popl
lds
mov
leave
or
or
pop
or
mov
dec
sbb
icebp
inc
sub
push
adc
adc
mov
ret
popf
cmpsb
xchg
dec
into
mov
xchg
mov
lret
mov
sub
adc
jg
dec
pop
popa
mov
dec
out
roll
sti
test
xchg
cwtl
dec
mov
lret
push
lods
divl
aas
mov
mov
mov
mov
insl
sub
mov
pop
call
push
xchg
call
dec
jne
addr16
sbb
xchg
shrl
mov
inc
jmp
or
xchg
mov
repnz
into
cwtl
inc
cs
adc
test
movsb
fwait
insb
pop
and
pop
push
mov
inc
mov
add
es
mov
push
dec
inc
cmc
ret
pusha
xchg
insb
subl
mov
jae
add
ss
fiaddl
out
jne
pop
std
xor
adcl
or
pop
xchg
inc
jmp
into
pop
push
mov
outsb
jmp
out
sti
or
push
mov
mov
test
pop
add
data16
orb
lcall
test
dec
jo
cmp
aad
scas
out
jp
sbb
sub
popf
sub
adc
enter
adc
mov
inc
mov
mov
fucomp
aam
dec
inc
cmp
lods
flds
in
xchg
jo
or
bound
xor
pop
sub
jbe
data16
xchg
loope
mov
mov
jae
loop
fwait
sbbb
out
adc
mov
in
je
and
xor
icebp
mov
in
sbbb
fdiv
aam
sub
in
movsb
pop
push
cs
push
inc
mov
mov
mov
lea
fwait
stos
sub
cmp
pop
mov
cwtl
push
shl
push
jge
mov
add
dec
addr16
sub
in
pop
mov
cli
ret
mov
lods
loopne
int3
xor
push
add
pop
mov
fstp
mov
rcll
inc
mov
pusha
jnp
push
push
enter
jnp
mov
jl
pop
or
test
xor
pusha
adc
out
in
fs
pusha
sbb
jg
lock
push
inc
out
jp
fcompl
lock
cld
lret
mov
adc
sarb
movsl
pop
mov
lods
mov
lret
cli
pop
jne
insl
push
orb
adc
cmp
dec
pop
push
arpl
adc
jb
push
fucomi
mov
out
mov
cmp
push
sarb
popl
iret
call
dec
nop
cmp
mov
imul
sbb
les
xor
mov
repz
je
cmp
popf
adc
enter
sbb
insb
repz
inc
push
lret
and
push
sbb
das
inc
fsub
ret
insl
adc
push
leave
outsl
cmpl
cmp
push
and
xor
add
fisttpl
test
lea
pushf
lret
push
mov
gs
mov
aaa
lcall
xchg
wbinvd
jae
xor
and
lods
movl
sub
subb
aas
les
test
xchg
mov
adcb
sar
pop
out
xchg
loope
xchg
mov
mov
mov
daa
add
cmp
dec
pusha
adc
movsl
add
out
mov
push
add
xchg
pop
cmpsb
dec
ss
dec
mov
xchg
add
mov
jmp
clc
and
fstl
pop
fiadds
es
nop
cmpsl
push
dec
nop
fwait
js
push
les
xor
xchg
push
cmp
push
call
push
mov
jae
cmp
lret
outsl
push
xchg
jg
pop
in
jnp
shll
fisubrs
loope
fs
gs
rcl
cld
aad
rorb
loopne
inc
cs
add
call
fwait
push
push
sub
xchg
and
push
sarb
inc
enter
mov
inc
aad
enter
mov
test
jae
imul
inc
cmp
xchg
dec
mulb
shl
fistl
lock
push
push
test
int
xlat
gs
daa
xchg
mov
pop
jns
xor
mov
jge
dec
pop
mov
jo
call
push
out
scas
fs
mov
insl
lods
sbb
mov
pop
push
push
lea
outsb
xor
repnz
sub
jmp
in
jb
insl
inc
jl
nop
cmpsb
lock
lahf
jb
mov
pop
cltd
clc
pop
mov
mov
add
xor
cmpb
jnp
add
xchg
jne
fwait
js
xor
mov
call
rcr
mov
fstp
sub
jno
jno
stc
ret
fwait
cmp
dec
shl
out
nop
xor
push
sub
mov
inc
cmpsb
cmp
fs
mov
movsl
mov
pop
jecxz
push
adc
push
mov
mov
lret
popf
mov
stos
pushf
test
and
dec
lret
int3
pop
enter
movb
adc
fistps
and
lcall
outsb
jl
insl
cmp
enter
mov
out
jmp
and
xchg
inc
pushl
and
dec
pop
adc
les
ret
cmp
jl
cwtl
pop
cmpsb
and
dec
xchg
scas
xchg
mov
lahf
popa
adc
jns
cli
push
and
addr16
add
stos
std
sti
pop
inc
dec
lea
push
push
push
imul
mov
roll
shl
sahf
sbb
imul
outsl
lea
out
jmp
lcall
pop
cmp
outsl
pushf
add
test
loope
adc
mov
xchg
inc
xor
and
mov
imul
mov
pop
cmc
adc
aas
xor
adc
rcrl
pop
lret
add
addl
movsl
mov
pop
hlt
add
sub
orb
dec
cltd
shlb
xchg
and
xor
mov
sti
jg
inc
insl
nop
xor
cmpsl
push
lea
add
out
inc
int
mov
push
jns
push
or
add
mov
aas
stos
sub
adc
imul
ret
in
nop
or
push
shrb
scas
push
inc
addb
cmp
jbe
lods
sub
cmc
jo
and
cmp
cmp
dec
sbb
ret
mov
out
in
sbb
sub
xor
adc
xchg
js
std
gs
icebp
iret
add
jecxz
pop
push
in
xor
es
push
jl,pn
mov
adc
int3
ljmp
sbb
ficoml
aaa
stc
push
ss
mov
mov
test
and
adcb
mov
pushf
adc
into
or
xor
insb
enter
xor
mov
dec
in
stos
mov
pushf
out
push
push
popf
dec
call
mov
jne
stos
and
push
mov
inc
cmp
push
and
scas
pop
mov
xchg
fstpl
jo
or
fmuls
sbb
jg
jl
cmp
repnz
aas
ss
dec
arpl
sbb
mov
ja
adc
sti
mov
ret
fs
xchg
js
mov
enter
mov
jmp
xor
push
lock
std
mov
inc
das
mov
lea
inc
push
js
cmp
and
add
add
xchg
lock
jno
or
mov
rcrb
xchg
shrl
jne
mov
xor
std
repnz
xchg
popa
pop
movsl
les
cmpl
add
int
add
xchg
adc
cltd
add
icebp
ss
or
jns
out
stos
or
adc
inc
adc
sahf
insl
xor
jg
dec
aas
sub
pop
push
jg
mov
loop
loopne
or
cmp
sub
std
dec
movsb
out
cld
mov
pop
add
das
jp
cmp
pop
add
ficoml
cmc
fmul
push
cmc
stmxcsr
rorl
xchg
sti
jecxz
push
and
je
loopne
cli
push
ljmp
out
pop
std
aaa
inc
sbb
popa
sbb
push
xor
add
mov
rcll
adc
je
xchg
add
xchg
sbb
nop
xchg
fidivl
sbbl
cmc
shrb
insl
hlt
or
mov
inc
nop
rorb
ret
filds
imul
ret
test
mov
xchg
bound
push
push
outsb
out
rorl
fistps
fsub
jo
leave
mov
jge
aad
shrl
adc
movsb
and
adc
testb
jl
int3
sti
inc
bswap
mov
and
cs
mov
pop
mov
insl
push
std
fsubrl
push
insb
jns
popf
int
movsl
adc
fs
sti
xchg
xchg
sarl
mov
jmp
mov
das
shr
push
loop
ss
push
add
and
movsl
push
gs
mov
adc
stos
shl
dec
leave
clc
mov
mov
popf
sti
xchg
clc
cli
xor
clc
mov
inc
mov
int
sbb
in
fdivs
clc
pop
sbb
pop
in
je
pop
cmpsl
into
mov
adc
adc
adcb
xchg
mov
cmp
dec
into
std
mov
mov
or
daa
out
repnz
loopne
lret
rcrl
xchg
in
lods
leave
push
and
enter
fsubr
xor
sbb
or
cmp
lahf
push
push
hlt
inc
jmp
outsb
jl
xchg
int3
out
inc
imul
xor
push
cmp
loopne
popf
addl
pop
mov
cmp
jg
out
cmc
test
clc
pop
jecxz
ror
and
leave
dec
pop
test
pop
adc
mov
mov
xchg
push
mov
push
das
dec
pop
xor
jbe
mov
xor
sub
ret
sarl
out
rcll
pusha
iret
xor
scas
les
data16
and
mov
testl
mov
test
push
int3
std
fcmovbe
in
lock
shlb
mov
ret
and
mov
mov
push
movsl
jbe
jmp
push
loope
ljmp
xlat
das
inc
mov
add
mov
outsb
adc
mov
fdivrs
sbb
add
sbb
mov
shl
faddl
or
pop
outsb
push
xchg
mov
stos
mov
fildll
add
bound
jo
cmpxchg
lcall
in
xchg
daa
aas
xchg
xlat
iret
or
fwait
mov
mov
ret
push
inc
clc
xchg
movsl
or
call
sti
jno
adc
jno
jmp
push
xlat
jne
daa
mov
lea
in
push
sbb
fmul
insl
jb
pop
cmpsl
and
dec
push
add
rcr
dec
fwait
sbb
int
mov
call
pop
mov
cs
std
jle
mov
imul
fldt
cwtl
add
inc
sbb
sbb
fsubrs
nop
xor
sub
ja
popa
aaa
popf
inc
adc
jnp
mov
in
test
sub
insb
mov
jae
fs
mov
xchg
add
jle
decl
rclb
lret
xor
mov
jmp
fbstp
js
add
pop
inc
adc
sahf
imul
pop
pop
jo
and
pop
xchg
ret
jnp
pop
cmpb
call
xor
xchg
cltd
add
arpl
fiaddl
adc
int3
daa
das
mov
pop
inc
sub
or
pop
pop
pop
mov
sbb
popf
mov
lds
inc
mov
mull
repz
cmpsb
pop
adc
arpl
sbb
imul
dec
data16
cmp
std
es
push
mov
call
fnsave
loopne
jle
cmp
jbe
scas
mov
jg
das
aam
daa
push
out
xchg
cmp
mov
inc
add
sahf
ljmp
inc
lock
hlt
xor
fwait
imul
aas
push
fnstsw
sbb
mov
js
sbb
orl
imul
push
jge
mov
cltd
dec
lock
fwait
add
mov
jnp
in
sub
pop
and
sbb
aas
dec
push
lahf
pop
sbb
sub
and
dec
add
in
dec
pop
adc
xor
sbb
ds
popa
out
lods
mov
inc
and
jns
outsl
test
sti
fistpll
inc
sbb
dec
imul
ret
cltd
daa
cmp
xchg
mov
jne
imul
pop
stos
jno
adc
inc
lea
mov
xorb
imul
cltd
mov
pop
push
scas
call
or
cmp
lret
xor
imul
xchg
lea
and
lods
loop
jno
mov
bound
cmp
push
fwait
or
xor
jae
jp
imul
aaa
cli
imulb
imul
pop
or
mov
sbb
rep
jg
dec
sbb
aam
adc
or
push
jae
sub
movsb
shrl
out
lods
lret
jecxz
push
jg
lret
in
jb
jbe
add
push
xor
mov
adc
dec
stos
fs
ret
loopne
subb
dec
sub
cmpsb
stos
aaa
push
cs
or
push
cmp
mov
add
aaa
sbb
aam
lret
cmp
sub
clc
dec
xor
addb
mov
or
outsb
adc
aaa
test
cmpsl
dec
dec
int3
aad
push
jns
push
imul
push
mov
stos
xor
dec
cmp
or
rcrl
aad
sbb
mov
lods
mov
and
mov
dec
and
inc
push
int3
cltd
aam
mov
sub
sub
mov
stos
arpl
cmp
add
cwtl
fmul
imulb
aas
fdivr
rolb
loopne
outsb
and
sbb
jbe
in
leave
stos
lret
push
fnsave
imulb
sub
repz
sbb
mov
mov
lock
popf
push
mov
daa
aam
imul
sub
repz
xchg
mov
lods
push
add
call
xor
dec
mov
test
add
popa
lret
insb
dec
leave
fbstp
xor
push
mov
pop
push
adc
xor
lret
jnp
push
jno
fimull
popf
push
pop
out
or
pop
or
enter
xchg
popl
sbb
test
aam
das
add
scas
hlt
mov
adc
mov
jmp
xor
xor
rorl
jge
in
mov
jecxz
arpl
mov
jns
xchg
cmpb
dec
insb
jno
xchg
pop
lret
jbe
gs
jp
jae
inc
xor
jns
fdiv
cmp
inc
push
xchg
in
mulb
icebp
push
cld
sti
xor
and
dec
jle
sti
sbb
enter
shll
mov
ret
fisubrl
xchg
aaa
jl
cmpl
jecxz
orb
push
pop
pusha
jecxz
dec
mov
in
loope
insb
and
sbb
test
push
lret
gs
adc
cwtl
cmp
fnstenv
xor
call
hlt
dec
push
and
push
cmp
pop
fsubp
fldcw
rorb
loope
push
lret
fwait
loopne
bound
sub
push
jnp
pop
into
mov
add
pop
cmpl
jo
aam
mov
jno
int
mov
stos
pop
sbb
lods
jo
imul
cltd
add
pop
mov
sti
xchg
or
inc
filds
and
mov
or
movsl
sti
jp
sub
lret
xlat
jp
stos
adc
mov
lahf
test
dec
xor
hlt
out
gs
fptan
adc
jnp
inc
arpl
test
push
stos
sbb
lds
sub
mov
adc
cltd
pusha
push
xchg
ss
inc
xchg
xor
pop
xor
int
div
ss
in
mov
xchg
in
ja
cmp
push
shlb
call
mov
out
or
ret
jg
mov
push
daa
test
data16
mul
push
rorl
scas
andnps
into
mul
pmullw
adc
repz
xor
scas
lahf
mov
pushf
sbbl
sbb
xor
mov
adc
test
add
out
xor
push
stos
call
insl
je
out
fs
test
insl
loope
xor
sbb
pop
mov
gs
std
xor
mov
mull
pop
lds
fs
mov
int3
lret
jb
xchg
mov
xor
sahf
adc
mov
and
lock
mov
xchg
sub
fmuls
or
mov
jbe
cmp
jno
xor
cli
xor
fstp
ret
sub
sbb
mov
sub
push
push
mov
xchg
nop
int3
pop
mov
fsubs
and
pop
push
fs
and
dec
ljmp
hlt
xorl
mov
sar
lods
dec
xor
mov
jecxz
pop
pop
movsl
incb
mov
fistl
sub
call
clc
mov
mov
mov
lods
hlt
aaa
jp
fisubl
sti
adcb
sbb
pop
jno
mov
or
setge
popa
sbb
pop
mov
ficoml
xchg
mov
xchg
dec
adc
push
dec
icebp
push
jb
and
ljmp
stos
adc
cltd
outsl
cmp
xor
pop
and
dec
sub
mov
adc
cmc
fsubr
andl
insl
push
xlat
call
or
aas
cmp
mov
les
pop
aad
rclb
dec
mov
pop
push
jae
pop
inc
add
push
push
mov
fs
lcall
lds
pop
push
ss
sub
stc
jecxz
xchg
test
fildl
mov
xor
mov
ds
xlat
inc
push
lea
ja
scas
push
mov
int3
repz
sahf
subb
mov
mov
sti
xor
pop
inc
jmpw
les
mov
cmpsl
adcb
iret
jg
add
dec
mov
rorl
pop
into
std
in
mov
outsl
iret
in
in
rcll
enter
bound
loop
dec
clc
negb
lahf
test
sahf
sub
cwtl
in
call
xlat
sub
mov
sub
pop
rol
leave
stos
xor
popf
scas
int3
pop
cwtl
fs
es
inc
movsl
outsl
sbb
dec
pop
pop
outsl
dec
scas
xchg
xor
je
add
mov
outsb
xor
add
int3
push
out
xchg
adc
clc
xchg
loopne
shlb
sub
out
or
sub
iret
jae
repz
imul
xor
js
add
push
test
int3
popa
fs
shl
imul
jbe
fldt
inc
aad
lods
mov
dec
mulb
jb
mov
insb
dec
out
ss
sub
mov
in
or
sub
test
push
fnstenv
sahf
jne
cmp
sbb
in
push
dec
cmp
insl
or
pop
and
fmull
dec
xchg
pop
inc
repz
ret
or
sub
dec
mov
test
add
mov
aam
pop
adc
add
add
mov
mov
faddl
dec
addr16
out
adc
push
lock
adc
fiaddl
pop
cmpsb
je
nop
stc
jno
xchg
cmp
mov
ss
je
mov
jae
jne
inc
xchg
jp
add
pusha
jl
pop
add
pop
jle
mulb
fs
or
push
dec
jg
sbb
xchg
dec
lret
mov
pusha
mov
add
mov
data16
loop
insb
inc
popf
lods
cli
or
xor
pop
xchg
mov
movsb
jmp
fwait
jmp
pusha
xchg
jecxz
mov
lret
add
sahf
mov
dec
xlat
push
lds
out
sarb
sub
sbb
sbb
jg
lods
and
jmp
fs
popf
mov
scas
imul
xor
hlt
in
pusha
leave
cmp
dec
mov
addl
in
in
fs
xchg
dec
cltd
int
pop
jge
ret
jnp
mov
mov
inc
div
outsl
mov
pop
dec
lods
pop
pop
xchg
cmp
xor
outsb
test
int3
cmp
cmpsl
and
fwait
outsb
fcmovnbe
sbb
sub
push
es
and
dec
imul
sbb
aam
xor
stc
mov
add
in
mov
in
aaa
imul
les
or
ja
cmp
aaa
inc
out
lea
xchg
out
mov
adc
rclb
dec
stos
sub
icebp
aas
out
loopne
lcall
push
in
mov
inc
cs
jmp
xchg
jnp
xor
and
inc
outsl
in
mov
rclb
mov
cs
out
cmp
lds
addr16
fwait
add
fldcw
pop
adc
and
sti
xchg
sub
cmc
pop
sub
hlt
cltd
call
dec
inc
and
ficoms
imul
dec
shrl
add
loop
jb
jo
les
pop
stos
sub
fdivp
adc
into
movzwl
cmp
mov
mov
test
xor
clc
jge
inc
sub
movl
repnz
aam
cmp
test
pop
push
adc
jl
push
fisubrl
ja
stos
jno
mov
pop
mov
dec
int
out
xchg
addb
into
sub
sub
inc
je
xchg
mov
subl
dec
mov
rorl
mov
icebp
add
mov
mov
shr
push
fcomps
fs
das
and
fs
or
add
dec
jb
frstor
jge
sub
and
xor
ret
bswap
pop
push
or
cmpsb
int
lds
rcll
jbe
icebp
mov
leave
mov
pop
jns
add
imull
and
sbb
cwtl
negb
rorb
fdivrp
jne
outsb
mov
rcll
mov
mov
pop
pop
into
pop
orl
nop
test
mov
push
or
ret
movb
fwait
pushf
or
sbb
cld
rorb
loope
stos
pop
adcb
leave
xchg
mov
lahf
addr16
shll
addr16
mov
hlt
mov
fists
and
jo
mov
pusha
insb
ret
cmp
inc
je
test
fstl
jb
out
insb
lods
sub
cmc
insb
ss
inc
sub
push
xchg
cmp
pop
jne
xor
sahf
ljmp
add
or
pop
js
push
les
jnp
fildl
mov
sti
sti
mov
leave
or
mov
cld
lret
cli
imull
mov
sub
sahf
inc
cmp
out
movsb
lock
mov
xchg
aas
jbe
in
into
iret
addl
sub
push
push
mov
sbb
mov
inc
and
inc
sub
cmc
and
outsb
add
stos
pop
idiv
mov
mov
xchg
pop
jg
loop
inc
mov
gs
mov
adc
cmc
mov
mov
mov
mov
js
leave
imul
stos
sbb
sub
cwtl
sti
into
in
fs
adc
sub
iret
xor
or
mov
sbb
xlat
push
scas
cmp
rcrb
push
and
sub
jbe
cmpsl
cltd
test
mov
or
rol
subb
push
mov
xor
imul
push
jbe
sub
int
les
test
jno
jb
jns
es
daa
dec
mov
push
loopne
clc
jno
loopne
jmp
mov
sub
xchg
push
cmc
inc
xor
insb
cltd
lcall
scas
scas
adc
cmp
popa
add
ret
or
dec
cmpsl
adc
aas
ljmp
sub
and
nop
ret
outsb
lret
adc
cmp
adc
pop
sbb
or
dec
cmpsb
sub
sbb
aaa
push
lahf
pop
mov
xchg
jns
push
icebp
jae
pop
loope
sub
push
repnz
lret
cli
inc
push
clc
push
imul
enter
sub
negl
cmpsb
jge
sub
leave
xor
mov
fsin
test
fisttps
scas
xor
mov
pop
dec
xchg
mov
mov
popf
out
inc
mov
xchg
inc
cmp
pop
roll
loop
ljmp
outsb
loop
jg
loope
outsl
stos
xor
loopne
mov
sahf
out
mov
ja
lret
adc
test
stos
xchg
xchg
adc
push
loop
jle
ljmp
call
jp
jne
pop
fcoms
xchg
jnp
dec
mov
das
dec
or
shl
shrb
or
pop
mov
notb
mov
sub
fbstp
and
sub
sbb
jb
and
and
mov
rcrl
dec
icebp
dec
add
add
cmp
cld
xor
sbb
jae
pushf
ja
fcmovbe
sbb
and
bound
dec
jle
push
dec
test
fadds
pop
ja
mov
push
dec
or
mov
fnstsw
ds
lods
leave
ja
jecxz
sub
je
lcall
sbb
or
sbb
jb
leave
movsl
or
push
xchg
into
cs
push
mov
fisubrs
in
cmp
outsl
sub
lret
out
dec
cld
add
jbe
pop
dec
loope
mov
lcall
mov
cmp
sbb
xchg
addl
sub
imul
cmp
add
push
outsl
inc
daa
mov
cli
add
mov
mov
repnz
mov
inc
sbb
cmp
lahf
sbb
dec
ret
repnz
cmp
dec
adc
cmpsb
outsl
jmp
add
mov
shrb
push
or
insb
push
xchg
add
repnz
in
cltd
mov
push
ret
mov
mov
xchg
sarl
mov
cli
and
or
pop
sbb
cmp
out
in
xor
cmp
sbb
inc
jl
dec
dec
data16
push
lcall
js
aaa
mov
ja
jb
into
mov
mov
pop
pop
xor
popf
imull
or
xchg
in
sub
gs
stos
dec
test
sub
mov
sub
xchg
or
mov
xchg
subl
js
cmpl
adc
mov
xlat
fcmovne
push
mov
sbb
jno
ljmp
cmp
fsubl
sub
mov
xor
dec
jnp
ss
mov
mov
lret
push
lods
add
mov
les
stos
movsl
and
xchg
lods
sub
pop
inc
lret
mov
outsb
ds
or
or
fstl
fstps
jns
pop
enter
test
cld
icebp
mov
out
adc
push
sbb
inc
jno
push
mov
lcall
js
hlt
jb
pop
cld
in
pop
mov
fmul
sahf
dec
and
jle
cmp
push
jmp
and
xchg
shl
xchg
dec
test
outsb
mov
sbb
inc
inc
xchg
sub
mov
fwait
pop
mov
mov
adc
in
push
inc
push
mov
fimull
push
loope
sbb
js
pop
cmp
jne
outsb
ljmp
arpl
cli
roll
cmp
shlb
out
jbe
mov
loopne
mov
and
mov
shrl
ljmp
adc
inc
push
cmc
pop
sbbl
pop
ss
mov
jnp
jp
outsb
cmpsb
jo
std
sub
pushf
mov
jl
mov
xchg
test
pop
or
xor
dec
loope
pop
lea
roll
ret
sub
lret
pop
mov
iret
xor
dec
inc
pop
xchg
pop
mov
out
dec
sub
push
cmp
pop
stos
inc
aad
ds
nop
push
and
pop
test
push
xor
jecxz
pop
add
mov
inc
xor
inc
and
xchg
stos
fstp
out
and
jecxz
fdivr
cwtl
out
addr16
xchg
and
and
or
inc
popa
or
or
pop
fcoml
rcll
scas
cmp
mov
fwait
repz
punpcklwd
jb
aam
push
sub
or
cmp
jbe
loopne
mov
mov
inc
adc
jge
or
lods
and
mov
mov
pop
push
pop
data16
inc
aas
and
les
add
mov
cmp
or
popa
dec
mov
lds
ret
test
xchg
push
adc
andps
or
sbb
out
push
dec
loope
addr16
rolb
or
jle
push
xchg
xor
jb
cmpsb
pop
mov
out
mov
pop
adc
push
xlat
ret
mov
adc
jb
or
mov
movsb
gs
dec
mov
sbb
and
in
xchg
push
call
dec
stos
dec
mov
repnz
pop
xchg
fs
cmp
xchg
adc
pop
fsubrs
pop
cmp
mov
sub
lock
out
jmp
cwtl
insl
mov
dec
xchg
jmp
jbe
pop
jp
shrl
pop
int3
or
sti
pop
sbb
or
xor
iret
cmc
pop
int3
in
inc
push
xor
add
nop
inc
push
test
adc
adc
mov
shrb
outsb
xchg
pop
and
movsl
mov
out
sub
xor
dec
pop
repnz
add
or
ficoms
popf
lea
adc
add
cmp
inc
dec
jne
inc
fwait
mov
lea
adc
and
fwait
add
in
lahf
push
sbb
les
and
loope
xor
lahf
mov
out
push
mov
or
or
lea
test
mov
push
cmp
fdivp
insb
cmp
push
clc
inc
stc
xchg
pop
ret
mov
dec
test
imul
adcb
scas
aam
dec
clc
sub
push
lods
fucom
iret
int3
hlt
mov
loope
aad
mov
ja
out
adc
jns
fisubrl
pop
aad
ret
nop
push
imull
mov
data16
xor
fwait
inc
push
xor
rcrl
and
lds
scas
jnp
mov
dec
cmpsb
adc
std
add
mov
cmp
daa
cmp
imul
mov
xchg
pop
mov
pop
mov
aas
aam
cld
jg
nop
test
in
adc
inc
dec
xor
stc
cltd
sub
iret
dec
rolb
sbb
leave
pop
movsb
sbb
je
jo
mov
sbb
sub
lret
jno
outsb
pop
sub
test
bound
or
popa
fcmovnu
push
xchg
xchg
lods
ds
or
das
sbb
xchg
dec
cmp
int3
enter
pop
test
lret
movsl
mov
sti
sub
mov
cltd
mov
pop
es
out
sub
rcrl
xor
outsl
and
add
push
add
out
mov
movsl
loop
enter
out
jae
mov
sub
stos
sub
add
loop
xchg
jbe
or
mov
cmp
rcll
adc
nop
xor
cmpsb
fidivrs
daa
cltd
lods
push
cld
or
aam
push
dec
ds
push
jmp
cwtl
pop
stos
push
add
imul
dec
push
sub
ljmp
push
push
inc
stc
jmp
and
pop
pushw
lods
mov
in
and
popa
or
mov
dec
stos
add
leave
mov
cld
ds
cmp
roll
aad
add
in
pop
jo
cmp
pop
ds
push
call
xchg
aam
and
aad
xor
push
dec
mov
mov
sahf
out
stc
inc
daa
xchg
cld
ds
cmpsl
sbb
mov
out
cmp
in
ljmp
sub
adc
jbe
xchg
movsl
data16
jo
test
popa
incl
mov
stc
ss
addr16
adc
pop
mov
push
jb
out
pop
ljmp
in
mov
clc
ja
mov
inc
mov
and
aad
popl
sar
je
mov
or
aad
addr16
mov
pop
pusha
add
mov
int
xchg
add
and
inc
xchg
mov
int3
sbb
je
movb
xor
pop
into
mov
popf
pop
int
adc
jle
jmp
pop
or
stos
or
imul
mov
lahf
jb
cld
lret
ret
jo
xor
dec
aad
mov
popa
ds
sbb
inc
cmpl
xchg
and
sub
out
push
fstps
cmpsb
pop
add
call
mov
xlat
xchg
mov
daa
ret
sbb
xor
out
call
xchg
repz
mov
mov
sub
in
cmpsb
jp
pop
mov
insl
adc
mov
cmp
and
and
xchg
gs
push
int
ret
dec
add
fs
push
xchg
in
jns
mov
and
sub
fidivs
xor
push
adc
lret
sbb
subl
out
add
cld
xchg
push
std
mov
je
add
sub
cmp
adc
test
hlt
cwtl
cmp
push
dec
ds
mov
into
aas
and
faddl
add
mov
adc
fdiv
pop
mov
das
scas
xchg
xor
push
leave
mov
adc
add
cli
sub
jbe
loope
jl
cmp
orw
mov
mov
add
jno
repz
push
inc
lret
mov
jbe
in
out
clc
imul
or
xchg
repz
pop
pop
in
roll
cld
xchg
pop
xor
bound
jmp
jb
movl
add
dec
addr16
xchg
xor
add
adc
or
pop
sub
jbe
and
fidivrl
xor
jge
xchg
divb
mov
push
jecxz
mov
jp
leave
and
cmp
cwtl
push
rcll
in
xor
mov
jo
mov
sarb
sbb
sahf
cltd
fnsave
pusha
dec
push
mov
rol
push
mov
loop
loopne
lcall
adc
aaa
test
popa
cmp
hlt
inc
or
cmp
movl
inc
and
dec
cmp
hlt
cld
mov
sbb
and
out
insb
pushf
push
imul
mov
sub
jecxz
xor
fwait
repz
out
out
inc
sub
pop
loopne
gs
mov
movsl
mov
mov
push
jle
aam
cmc
jb
jecxz
or
sbb
cmp
xor
pop
in
call
xchg
sub
hlt
ds
fldenv
into
cli
mov
pop
iret
cmp
dec
dec
mov
dec
mull
packssdw
popa
or
add
frstor
inc
jns
icebp
sbb
cltd
or
aas
insb
sub
fidivrs
push
hlt
jp
pop
mov
cwtl
dec
pop
or
mov
testb
xchg
or
cmp
pusha
adc
sbb
adc
stos
xchg
push
pop
les
cmp
scas
mov
lret
out
lea
fnstcw
sarl
xlat
in
aaa
adc
sub
ret
or
cmp
es
and
mov
inc
push
cmp
mov
aam
and
bound
push
stos
jns
in
inc
push
fstl
pop
xor
jbe
or
pusha
or
or
lods
aad
test
ljmp
fistpll
sqrtps
lods
xchg
shll
fcmovbe
in
pop
mov
sub
ficomps
sub
imul
ja
jmp
lcall
push
mov
loope
adcb
or
std
inc
cmp
cmp
out
iret
sub
lods
lret
adc
jae
fs
dec
mov
imul
sub
xor
sbb
in
cmp
xchg
fisttps
push
mov
mov
jnp
mov
stos
enter
xor
imulb
mov
cmp
jg
add
add
pop
int3
bound
mov
sub
pop
faddl
mov
jmp
jne,pt
xor
clc
pop
dec
cwtl
dec
cli
popa
daa
cmpsl
fcmove
das
sub
jb
jbe
pop
leave
sahf
enter
push
test
lret
rolb
and
movsl
sbb
sub
lea
loopne
daa
es
adc
pop
negl
push
ret
add
sbb
dec
popa
xor
icebp
inc
and
sub
push
xor
dec
cmp
xchg
dec
shrl
adc
in
mov
sbb
test
xchg
mov
aad
sbb
and
es
decl
hlt
repnz
mov
xchg
mov
cli
xor
push
push
push
mov
int
leave
and
mov
lock
bound
mov
cmp
test
stos
xchg
mov
sbb
in
nop
fcmovnu
cmp
stos
and
sbb
daa
aad
and
pop
xchg
rorb
or
push
sbb
mov
aam
xchg
int3
pop
loop
sbb
int3
rol
fidivrs
ret
xchg
es
inc
or
dec
aas
or
loope
fldl
adc
in
int3
cmp
jno
das
sub
iret
imul
cld
or
outsb
je
test
mov
stos
xchg
mov
lcall
mov
push
jmp
scas
repz
fs
jle
les
fdivrl
mov
pop
ret
sbb
test
mov
or
fldl
xchg
mov
andl
and
rcrl
rorl
insl
pop
lds
or
and
pusha
stos
xchg
add
insb
imul
fwait
or
jmp
push
lcall
int3
mov
inc
dec
call
cmp
jae
jo
lods
xchg
rorb
movsl
sti
ljmp
test
ja
loop
sbb
xchg
int3
jne
dec
pop
out
fdivrp
pop
js
mov
test
jg
jle
lock
ficoml
pusha
or
or
pop
les
mov
jns
xor
js
jns
fnstcw
js
shlb
hlt
jge
outsl
ds
faddl
mov
dec
cmpsl
testb
cli
mov
add
pushf
faddl
test
lcall
in
adc
std
scas
pop
in
adc
rorl
dec
mov
add
jecxz
out
mov
test
sub
sbb
xchg
adc
cltd
adc
lahf
test
clc
sub
fistpl
gs
call
inc
gs
or
and
inc
jns
loop
cmp
test
mov
dec
movsb
in
dec
xchg
sbb
testl
loope
or
repnz
and
lods
data16
pop
inc
xchg
adcl
cltd
test
shrb
dec
mov
push
loop
rcrl
sub
pop
pop
cmpsl
test
add
sub
ret
push
xchg
push
lahf
ret
xchg
sbb
jl
adc
or
sti
mov
jo
fldl
sub
clc
mov
pop
jb
inc
les
adc
mull
jecxz
inc
sahf
push
ja
xor
xlat
push
inc
into
vmovupd
fs
call
sub
inc
aas
rcll
outsl
mov
loop
jl
inc
xchg
mov
or
push
imul
in
jl
stc
jb
mov
push
shl
mov
hlt
aad
popf
mov
sub
push
jne
sbb
call
inc
fidivrs
cwtl
sub
and
stos
faddl
test
dec
mov
and
lea
sahf
mov
sub
sub
xor
add
aam
sahf
pop
int
mov
push
or
scas
pop
cmc
movsb
pop
loopne
loopne
loopne
push
test
jg,pn
jbe
jl
dec
fisubrl
mull
and
push
push
out
out
pop
test
test
daa
dec
inc
fstpt
dec
cmp
push
push
test
mov
in
fcmovbe
push
mov
mov
leave
push
fstpt
enter
mov
mov
jg
loope
cmp
mov
pop
push
lea
jbe
out
test
ljmp
dec
lock
push
mov
push
pop
icebp
push
push
push
in
fwait
xor
inc
leave
cwtl
test
lods
and
inc
sub
sbb
inc
ror
lods
repnz
out
adc
call
push
mov
scas
addr16
or
clc
mov
push
stos
push
pop
icebp
mov
cmp
dec
push
cmp
sub
cmp
test
jns
mov
clc
call
movsl
in
inc
sbb
mov
stos
inc
adcl
int3
rcrl
push
xchg
pop
adc
xchg
xor
dec
xor
out
or
out
jae
pop
dec
rclb
repz
jnp
mov
stos
cltd
lds
aam
inc
mov
mov
push
sub
jae
add
add
mov
bound
xor
sahf
xchg
outsl
inc
jo
add
pop
cmp
dec
push
jge
pop
daa
cld
xchg
and
test
ss
pop
sbb
adc
add
jmp
cld
mov
sahf
mov
shl
dec
fwait
adc
jge
cmc
cmpsl
jb
sub
mov
lcall
scas
cmp
sti
pop
xor
mov
adc
stos
arpl
insb
pop
xchg
xchg
jg
in
xor
add
ja
ret
fs
arpl
jbe
add
dec
das
loope
sarl
clc
cmp
imul
xchg
gs
shll
mov
xor
ja
testb
enter
pop
les
fldt
imul
in
fsub
ret
add
jnp
and
or
imul
mov
std
iret
pop
cmp
mov
cmp
gs
outsl
and
mov
loopne
mov
fisttps
mov
xchg
pusha
clc
push
fnstenv
cli
add
sub
fbld
or
ja
sbb
xchg
mov
mov
lods
shll
int
mov
cmp
mov
aas
call
dec
test
insb
jecxz
fldl
lea
inc
push
es
xchg
aam
inc
sub
xor
bound
add
cmpsb
jp
mov
in
push
dec
mov
mov
push
dec
pop
loope
mov
clc
adcl
stc
lret
jg
and
imul
pop
cs
data16
loope
ljmp
popa
sbb
mov
repz
fnsave
int3
mov
sar
add
inc
popf
fbstp
scas
dec
jb
bound
repz
inc
ficoml
lock
pop
bnd
jne
mov
loop
dec
mov
jmp
fdivl
loope
jae
cmp
xchg
mov
push
fwait
xor
xor
mov
clc
fsub
inc
mov
insl
inc
mov
inc
ds
cli
lret
pop
jns
jle
dec
lret
sbb
jns
inc
cmpsl
out
add
jb
push
arpl
pop
out
sub
scas
int
sub
fwait
mov
rorb
dec
pusha
and
pop
loope
adcb
leave
aas
inc
add
subl
xor
fadd
pop
stc
jle
jns
mov
sbb
imul
test
sarl
pop
or
inc
mov
in
and
push
into
fwait
sbb
mov
iret
jb
sub
out
sti
insb
inc
push
shl
out
or
ret
push
add
in
cmp
lock
rorb
sub
and
hlt
adc
fucom
and
jne
jg
cwtl
test
daa
cs
pop
xchg
rolb
aas
outsl
iret
mov
jbe
lock
xchg
fbld
jns
and
xchg
ret
inc
std
xor
test
js
insl
push
and
jg
jl
fs
mov
test
and
je
je
std
xor
push
cli
push
dec
xchg
fistps
shll
int
lock
and
sub
jge
outsl
stos
out
into
xchg
ss
in
mov
cmc
int3
std
inc
orl
and
inc
add
loopne
cwtl
in
sbb
cwtl
dec
sub
popa
data16
xchg
call
mulps
call
leave
call
inc
fs
sbb
cmp
add
fs
push
outsl
pop
das
inc
add
loopne
dec
push
hlt
in
int
push
cmc
xor
adc
sbb
push
pop
stos
adcb
leave
mov
mov
das
addr16
outsb
stc
inc
data16
dec
mov
inc
das
inc
mov
shrd
sbb
add
ss
inc
mov
push
cld
movsb
add
adc
sub
imul
cmp
lock
dec
push
and
jnp
xchg
leave
adc
xor
mov
adc
add
mov
call
xor
mov
sub
adc
int
sbb
inc
sarb
cmpsl
cmc
xlat
push
fwait
imul
mov
out
repnz
pushf
out
jns
and
aam
xchg
jns
jnp
dec
repz
sub
adc
je
mov
and
das
aas
gs
pop
jae
mov
xchg
push
popa
sbb
in
decb
jecxz
adc
mov
adc
ret
flds
pop
xor
push
movsb
fisubrl
cli
xor
les
jle
bound
add
jecxz
aaa
xchg
mov
cmc
andb
inc
sub
bound
jnp
xchg
imull
sub
insl
xlat
stc
mov
jmp
push
out
lods
pop
cmp
dec
push
inc
ficomps
mov
clc
imul
out
pop
fsubrs
dec
repz
sbb
push
or
push
sub
jno
jb
negb
mov
cs
mov
out
fisubs
pop
push
sub
or
test
sbb
cmp
adc
cmpsl
fs
mov
add
push
arpl
push
and
in
mov
xchg
add
loopne
mov
lods
or
leave
push
pop
jg
lcall
push
je
test
pop
mov
iret
jbe
aas
cltd
mov
sub
pop
in
xor
outsl
xor
inc
dec
rcll
hlt
loopne
xor
lods
les
adc
jg
sub
mov
fwait
sub
outsb
mov
mov
and
mov
outsb
out
cmc
inc
mov
ljmp
push
fcoml
mov
mov
push
cwtl
or
xchg
aam
push
popa
dec
les
dec
jle
cs
add
jno
sbb
jnp
int
cmp
imul
sbb
push
mov
push
dec
lcall
dec
mov
xlat
mov
hlt
or
ds
and
mov
aaa
cmp
dec
scas
lods
pop
fbld
adc
mov
mov
rorl
xchg
gs
xor
pop
xor
xor
add
stc
add
push
repnz
mov
scas
inc
fs
pop
les
jge
or
mov
call
add
sbb
mov
testb
push
popa
ret
jg
lods
lods
pop
daa
lcall
dec
cltd
test
cmp
popa
mov
fnstcw
xor
test
lods
inc
cli
inc
add
cmc
sub
int3
rcrb
cli
loope
mov
add
jl
inc
xor
jno
mov
or
mov
cmc
mov
push
jg
jl
cmp
add
insb
jg
jns
stc
test
rorl
xchg
popf
das
lods
imul
jle
int
mov
mov
jns
sub
mov
inc
or
int
adc
mov
in
adc
mov
mov
jns
aaa
in
mov
mov
xchg
nop
ljmp
icebp
cltd
lods
mov
mov
mov
and
inc
out
jl
dec
inc
into
repnz
xlat
jp
xor
adc
cmc
icebp
ljmp
loopne
repz
aas
mov
xchg
std
gs
mov
sub
fdivr
out
or
push
adc
sbb
sub
add
int3
rol
adc
nop
dec
sti
pop
sbb
jp
push
test
jns
cmp
cmp
and
jae
and
mov
ud0
jmp
adc
insl
das
cmp
xor
xchg
mov
cmpl
data16
out
arpl
add
push
push
test
adc
aad
xchg
adc
test
hlt
xor
enter
add
dec
xchg
int3
push
pop
idivb
push
addl
push
adc
dec
pop
pop
push
pop
pop
repnz
addb
inc
pushf
loope
xchg
dec
or
xchg
into
jns
mov
mov
std
mov
inc
cmp
mov
cmp
jo
popa
jl
lahf
rcl
or
lret
loopne
fldenv
lock
repz
ss
mov
mov
push
sub
ret
pop
aas
mov
jl
in
test
arpl
pop
adc
push
cmp
fdiv
arpl
sbb
and
or
push
ds
movsl
int
das
scas
dec
jp
or
mov
push
xlat
aad
lea
mov
cwtl
jmp
cld
cld
mov
call
sub
xchg
push
cltd
ljmp
movsb
test
add
int3
ja
loop
xchg
ret
fisubrs
xchg
cmp
leave
add
adc
fiadds
and
loopne
adc
fwait
jmp
mov
mov
dec
cmpsl
cltd
cmp
shrl
nop
addr16
cmpsl
or
scas
pop
inc
mov
xchg
push
mov
rorb
cmp
pop
cmpsl
inc
add
call
jge
daa
mov
push
sbbb
pop
mov
loopne
cmp
mov
xchg
clc
sbbl
insl
aaa
js
add
shrb
fs
lock
sbb
cmp
cli
and
shrb
xor
xor
shl
push
add
sbb
in
rcrl
cmpsb
int3
or
cli
mov
mov
int3
stos
xor
mov
mov
jge
fmuls
testb
testl
push
inc
sub
fwait
or
push
lods
stc
daa
pop
stos
adc
mov
inc
out
in
cmpl
or
cli
sub
xchg
fsts
cld
repz
pop
xchg
jle
stc
outsb
adc
stc
ret
or
repnz
xor
cmpl
pop
loope
imul
lret
mov
iret
repnz
or
dec
dec
jl
xor
rcrb
or
ss
sbb
jbe
mov
ja
imull
pop
fdivl
add
mov
ret
pop
xor
mov
adc
push
cmp
iret
and
dec
outsb
jo
adc
and
aas
fcoml
les
cmp
shll
inc
sbb
je
pop
fdivrs
push
inc
lea
ljmp
cltd
xlat
in
mov
jmp
testl
movb
push
stc
std
in
in
fldt
pop
xchg
xchg
dec
cmp
or
adc
daa
sub
test
and
pop
cmp
fcmovne
ja
or
add
pop
jecxz
ss
imul
dec
adc
pop
int
push
in
sbb
jbe
rcrl
and
outsb
int
xchg
add
movsl
dec
cs
call
mov
push
movsl
mov
mov
maxps
mov
nop
xor
sub
mov
pop
es
mov
imul
xor
mov
lds
aaa
inc
popa
adc
push
push
cmp
ret
dec
mov
pop
xchg
ds
popf
add
lcall
aad
mov
adc
inc
lea
jae
imul
xor
sub
imul
adcb
aam
mov
fistl
adc
xor
or
cli
mov
addb
stc
hlt
outsl
jge
cli
mov
fcmovb
adc
xor
fcoms
adcl
ret
xor
xor
jmp
or
xor
add
sub
in
dec
cmp
jg
xchg
mov
cmp
jb
loopne
pop
leave
and
out
push
add
incl
add
inc
adc
pushf
jmp
gs
adc
mov
sub
cmp
leave
inc
insb
or
dec
push
gs
mov
stos
inc
cmp
mov
jmp
mov
sub
test
xchg
dec
hlt
out
pop
jae
je
clc
scas
and
movsl
mov
dec
nop
imul
xorb
pop
scas
inc
jg
mov
in
out
push
out
mov
out
mov
outsb
insl
mov
aas
arpl
mov
enter
pop
popf
sub
nop
ljmp
popf
lret
stos
push
imulb
mov
fidivs
repnz
fwait
cmpsl
pusha
push
cltd
lods
into
ljmp
fisttpl
inc
dec
adc
lock
aaa
outsl
inc
jns
mov
into
mov
or
fwait
pop
inc
push
dec
xor
dec
iret
sti
xor
pop
ret
push
lods
insb
scas
cli
pusha
and
dec
mov
imul
or
xchg
push
mov
repnz
jnp
push
and
ficoms
mov
cmp
ja
inc
aas
push
sub
fsubr
shll
cld
xchg
stc
jns
jno
mov
push
lcall
jb
aam
ljmp
pop
gs
stos
xchg
push
sar
cmpl
or
inc
outsl
cwtl
bound
inc
or
jmp
xor
rol
mov
andb
and
mov
and
sbb
lea
mov
sbb
fwait
ljmp
into
js
add
push
sub
xchg
lods
lahf
push
in
test
xorl
iret
jl
scas
dec
jg
inc
and
lret
add
sub
leave
dec
cmc
call
pop
pop
test
pop
outsl
mov
jl
leave
add
xor
out
and
xlat
loopne
xor
notl
xchg
cmpsb
xchg
inc
mov
test
outsl
cmp
adc
scas
in
jnp
and
fdivrl
fxch
inc
or
mov
fs
mov
pushf
cltd
cmp
cmc
popf
insl
xchg
cmpsb
lret
fdiv
dec
mulb
or
mov
movl
jecxz
jnp
xchg
inc
jecxz
xor
jno
insl
gs
mov
and
loop
test
fidivs
xchg
pusha
lock
xor
clc
cmp
push
int
cltd
test
inc
sbb
les
in
mov
dec
je
mov
dec
adc
and
mov
jnp
in
push
dec
stos
jmp
xchg
xchg
add
ret
add
mov
aas
pop
push
mov
xchg
dec
imul
lods
gs
stos
inc
jge
ds
xor
add
dec
ljmp
mov
lds
adc
es
int
pop
aad
xchg
call
push
dec
jg
rcrl
gs
loop
push
mul
sar
aam
enter
mov
inc
popf
cwtl
push
pop
jnp
cmpsl
fs
fs
mull
sub
xor
int
push
in
fmulp
xchg
jns
scas
andb
orl
and
dec
sub
dec
dec
ret
cmp
push
and
jae
loop
mov
cld
or
mov
pop
and
sub
outsl
add
mov
aas
inc
ja
scas
push
jmp
ror
push
sti
mov
lods
loopne
mov
mov
xor
sbb
push
int3
cmpsb
fmuls
jnp
outsl
sbb
jmp
cmovbe
into
outsb
sbb
addb
jle
or
xor
insb
popf
leave
inc
jb
imul
sbb
push
adc
repnz
push
repnz
nop
fcomi
lahf
into
xchg
dec
pushf
pop
mov
adc
lods
ret
inc
mov
cmp
dec
js
loopne
push
mov
fistpl
adc
jle
retw
pop
inc
cmp
mov
or
lret
mov
sbb
mov
fwait
imul
mov
lds
cmp
lcall
xor
xor
fcoms
xchg
aam
fildll
clc
mov
pop
mov
and
mov
sub
pop
aas
push
lds
ret
mov
in
push
push
daa
or
mov
jge
outsl
dec
jmp
lret
dec
js
insb
jo
imul
pop
push
lret
add
mov
shlb
mov
adc
or
jns
pushf
inc
xlat
jns
int3
mov
pop
push
aas
mov
cmp
testl
js
imul
add
pop
jns
stos
add
sbb
push
das
jnp
dec
orb
popf
jb
adc
adc
cld
inc
stos
add
push
icebp
bound
inc
cmp
add
aas
sub
hlt
movsl
mov
xchg
jnp
sbb
dec
lods
in
cmc
dec
jg
popf
sub
lea
aad
cwtl
adc
ds
shl
sub
xchg
ds
adc
dec
rcrl
int3
cmc
dec
sbb
jb
inc
mov
xchg
divl
or
enter
mov
xor
fcmovne
or
jae
sub
loopne
sti
mov
mov
inc
push
push
cld
cmp
xchg
fimuls
mov
sbb
or
mov
fisubrl
lods
out
xchg
mov
out
xchg
sbb
push
movsl
jne
mov
into
insb
xchg
dec
jmp
or
mov
shlb
inc
jbe
idiv
imul
adc
add
pop
lods
jo
pop
lods
xor
jnp
pop
cmp
loop
jbe
sbb
aas
scas
into
jbe
push
lret
jg
mov
subb
add
xchg
test
dec
add
lods
stc
pop
adc
sbb
mov
scas
jge
ret
lahf
xor
push
or
push
rcrb
mov
outsl
pop
js
and
pop
pop
inc
xor
ret
jb
loop
outsb
and
xchg
inc
push
lcall
outsl
pop
popf
inc
cmp
fucom
or
fisttpll
ficoml
lea
sub
dec
mov
mov
cmp
aad
pop
sbb
daa
pushf
pop
push
pop
add
sub
dec
sbbb
pop
addb
push
mov
adcl
ret
inc
sbb
push
inc
int3
icebp
nop
leave
outsl
add
or
jg
mov
jnp
les
loopne
arpl
sarb
mov
cmc
daa
testl
jg
js
scas
fmuls
call
les
push
pop
sar
imul
pushf
sub
ret
add
pop
mov
rolb
jnp
mov
pop
test
mov
arpl
adc
ds
data16
in
sbb
mov
hlt
hlt
adc
mov
aaa
cli
sub
popf
stc
in
rcrb
mov
call
mov
fcmovne
out
ret
inc
sub
lcall
addr16
adc
mov
jp
adc
mov
sub
ds
inc
roll
dec
sub
add
cmpsl
popa
test
fcomps
lds
gs
and
mov
adc
divb
sbb
bound
shlb
mov
xchg
das
add
push
lods
xchg
adc
adc
loope
movsl
ljmp
push
or
cwtl
jno
out
dec
popa
inc
and
or
xor
test
loope
adc
enter
xor
inc
out
mov
inc
mov
pop
lea
or
imul
xchg
sbb
jecxz
jecxz
jb
mov
dec
dec
and
cmp
inc
add
in
fldl
imul
in
jecxz
xchg
mov
mov
mov
pushf
jnp
push
mov
push
push
cld
fstpl
fwait
adc
mov
repz
and
aas
xchg
adc
sbb
das
lds
stos
inc
xor
int3
jnp
iret
fisttpl
jno
xor
lcall
mov
dec
add
xchg
xchg
mov
ror
cmp
insl
dec
sbb
ss
xor
outsl
mov
loope
jne
xor
sub
push
daa
hlt
fcmovnbe
aas
scas
mov
pop
cs
out
lret
outsb
fsub
jb
sub
in
sub
dec
xchg
fwait
mov
iret
test
cld
adc
ds
call
jle
filds
popa
xor
sbb
xor
mov
mov
sbb
cmpsl
mov
out
jmp
push
mov
push
jns
mov
out
test
mov
scas
addr16
inc
rclb
lds
daa
cmc
int
mov
xor
inc
jge
sarb
jb
mov
call
and
rcrl
jne
mov
sbb
test
xchg
jle
jns
rcrl
inc
cwtl
mov
movsb
ljmp
adc
loopne
sub
inc
mov
jmp
in
clc
mov
fisubrs
mov
test
and
inc
mov
inc
imul
mov
movsl
fidivrl
jo
mov
pop
sbb
shrb
mov
jl
push
xchg
aaa
scas
mov
jle
dec
mov
mov
push
ret
popa
addr16
ds
ja
mov
scas
imul
add
aam
int3
in
dec
test
imul
adc
mov
in
sub
or
pop
xor
inc
out
rcrl
loope
mov
imull
inc
sahf
data16
mov
sbb
lods
mov
cs
enter
arpl
imul
repnz
repnz
into
scas
or
push
shl
icebp
out
mov
pop
sbb
cmp
loope
add
pop
dec
clc
mov
lcall
test
mov
shr
or
jmp
or
push
ds
dec
js
sahf
sub
outsl
push
dec
dec
mov
sbb
leave
inc
adc
and
pop
les
add
dec
sub
cld
add
repnz
dec
addl
pop
call
mov
cs
mov
aas
scas
mov
jno
ss
adc
jno
std
insb
mov
add
out
fistpll
dec
fidivs
mov
jne
mov
fsub
jl
cmc
mov
dec
dec
push
xchg
imul
in
fwait
and
mov
cld
inc
mov
lcall
xor
mov
cmc
push
mov
mov
adc
inc
sub
lods
lds
js
sub
push
test
push
lret
mov
xchg
lea
pop
mov
lods
fs
xchg
add
add
mov
mov
mov
cmpsl
sbbl
sbb
adc
sqrtps
leave
stos
lds
movsl
dec
inc
into
fimull
sbb
or
inc
add
and
inc
xchg
add
call
insl
cmpsl
aas
daa
js
lret
inc
push
or
mov
iret
insb
fbstp
pop
sbb
push
jnp
sti
inc
jns
push
sub
mov
jl
mov
sbb
in
in
and
fiadds
fwait
inc
push
mov
lret
stc
and
daa
aaa
ljmp
cmc
push
movsb
xchg
sbb
mov
fcompl
mul
sahf
xor
test
sub
dec
add
stc
dec
shr
mov
pop
iret
inc
jecxz
ret
push
mov
decb
loop
xchg
fwait
dec
in
mov
push
push
sub
fsubs
xlat
popf
mov
sti
cmp
sbbb
xor
test
into
push
cltd
inc
aas
aas
cmp
pusha
leave
je
dec
xor
push
cmp
sbb
movsl
xchg
daa
aam
insl
add
jnp
cmp
std
cs
adc
jp
sub
das
jp
or
inc
test
push
dec
insb
std
or
mov
out
cs
scas
adc
add
test
clc
loope
sbb
add
dec
lret
pop
fs
xor
icebp
adc
jnp
subb
sbb
sbb
cmp
pusha
test
and
fisttpl
xchg
fcmovne
mov
or
inc
inc
dec
sub
fpatan
int3
and
popf
sub
mov
jns
fmuls
out
inc
jbe
cmp
mov
push
movsb
repnz
mov
jle
jecxz
dec
jb
clc
sbb
cmp
fs
jae
add
or
fdiv
dec
subb
xor
pop
or
decl
pop
xor
adc
dec
pusha
pop
daa
fmull
mov
loopne
jnp
data16
pop
or
lahf
pop
xor
icebp
xchg
pusha
repz
jmp
jmp
dec
arpl
aam
cmp
jae
add
push
imul
and
aam
ret
inc
popa
cmp
mov
int
imul
outsb
or
lea
sub
jnp
enter
aaa
adc
jnp
pushf
and
or
lea
sub
jl
mov
in
pusha
lahf
xlat
mov
lgs
and
test
push
fwait
cmp
jbe
and
movsb
scas
dec
mov
push
cld
lods
push
loopne
sub
mov
adc
adc
jo
lret
xor
add
sbb
subb
pop
push
xchg
sub
loop
adcb
and
mov
jge
push
lods
lret
sub
in
mov
stos
inc
and
bound
xor
bound
push
stos
leave
sbb
pop
fwait
aaa
in
adc
mov
or
pop
cmp
and
push
out
pop
stos
and
rcll
shlb
dec
mov
pop
adc
lea
aam
cmp
loopne
out
cmc
mov
in
push
je
loopne
out
inc
sti
jno
xor
push
jl
ret
test
cmp
stos
scas
xchg
push
dec
adc
jae
hlt
xchg
or
pop
nop
mov
jb
push
lret
jmp
and
jp
ja
out
sbb
mov
ja
push
mov
fwait
loope
inc
rep
push
xchg
xchg
add
pop
add
dec
push
je
loope
insb
out
mov
inc
adc
popa
add
xchg
pop
jo
out
addr16
and
or
fwait
addr16
repz
xor
cld
inc
sub
push
xor
jae
shrd
std
sahf
mov
sbb
cmc
inc
popa
test
sahf
cli
inc
or
call
inc
insb
mov
lock
cmc
pushl
adc
sub
cmp
into
inc
inc
push
sbb
dec
or
lods
rolb
out
jnp
xor
pop
inc
jb
pop
xchg
jl
xor
mov
cmpsb
add
xor
dec
ficomps
pop
inc
js
in
push
ss
push
and
xor
push
inc
add
and
dec
xor
or
push
loop
fwait
add
movsb
add
fnstenv
in
jl
push
mov
pop
jno
push
push
sub
push
cmc
das
mov
stos
sub
jnp
push
jbe
sahf
mov
mov
cmp
and
or
mov
ret
pushf
or
stc
sbbl
push
dec
ret
lcall
add
mov
jo
insl
dec
or
fwait
in
push
or
adc
aam
test
sub
bound
dec
sub
divb
add
pop
cmpl
pop
push
andl
inc
sub
push
inc
in
mov
xchg
adc
jp
jecxz
lods
or
in
pop
sar
cmp
sub
or
mov
mov
push
pop
mov
fwait
pop
rorb
repnz
pop
inc
repnz
loopne
fcompl
push
jmp
adc
pop
fwait
sub
and
sub
sub
or
fdivrl
enter
lea
popa
xor
ja
or
mov
pop
pop
or
and
leave
push
cmp
icebp
jnp
addr16
jne
outsb
test
jbe
add
jmp
daa
cmp
add
dec
pop
mov
xchg
cwtl
add
xchg
sbb
sub
loop
cmp
nop
test
push
push
mov
outsb
add
jae
outsb
add
arpl
aas
mov
movsb
xor
dec
adc
push
push
mov
mov
add
pusha
repnz
cli
lods
ljmp
dec
sbb
sub
sbbb
std
sbb
aaa
fnstsw
inc
sbb
dec
pop
outsl
adc
mov
outsl
xchg
cmp
sar
out
insl
xlat
movsb
int3
adc
push
dec
out
and
leave
jae
push
lret
pop
cmp
pop
lret
pop
inc
daa
ja
insb
rol
xchg
sbb
dec
dec
or
cs
xor
add
fwait
pop
mov
arpl
cli
mov
mov
sbb
pop
movsb
jo
out
into
cmpsb
loop
test
sbb
call
sub
xor
add
cmp
cmpsb
cmpsl
xchg
pop
jl
xor
push
call
call
mov
scas
jmp
or
jno
pop
push
and
pop
pop
das
movsl
ret
test
or
sbb
sub
pop
test
xchg
cli
push
scas
ret
add
sub
cmp
push
xor
cmp
aas
out
jno
das
sahf
jp
cmpsb
cmpsl
xchg
sarl
sahf
jl
lods
mov
inc
push
pop
bnd
mov
sub
loope
inc
data16
ljmp
sbb
inc
leave
sub
icebp
fwait
scas
pushf
push
fsubrp
cltd
or
fbstp
push
xor
lds
mov
xchg
test
push
mov
test
mov
jp
add
adc
xor
dec
push
js
cmpsl
mov
mov
shll
rorb
dec
sub
ret
jo
ljmp
and
pop
aam
les
or
fsts
push
xor
xor
add
lock
add
xchg
test
adc
pusha
ss
bound
aam
dec
jb
loope
testb
negb
fucom
insl
lret
cmpl
mov
mov
xor
xchg
lock
push
push
lret
jg
out
mov
sub
mull
fcompl
addr16
sub
mov
or
add
push
hlt
adc
popf
xchg
movb
movsl
mov
adc
jbe
dec
push
push
mov
sub
es
inc
jo
fisubs
scas
shll
insb
fwait
and
jb
sbb
push
inc
movsl
push
xor
or
ds
out
add
lret
scas
add
adc
dec
insb
xchg
xchg
fs
mov
outsb
push
sub
jmp
xchg
cmp
into
ja
cltd
ss
mov
imul
cld
pop
dec
sub
jae
jp
inc
or
mov
mov
adcl
fldcw
testb
sub
xor
xchg
xor
clc
mov
stos
add
enter
sub
mov
push
pop
scas
xchg
out
sti
inc
cmpsb
xchg
push
sbb
push
dec
and
push
xor
std
mov
in
lcall
out
sbb
cmp
aas
xchg
ss
call
jbe
pop
push
jle
scas
inc
jmp
ret
mov
xor
pop
aas
lods
sbb
mov
pop
adc
jae
mov
jo
or
data16
xor
adcb
dec
and
fsubrl
cmpsb
outsb
daa
jo
mov
adc
aad
loop
stc
add
aas
fcmovnu
scas
sub
shr
jg
ds
mov
sub
mov
xchg
adc
jl
loopne
push
pop
dec
aas
out
jmp
xchg
sub
mov
xor
mov
mov
shlb
iret
xchg
outsl
cli
xor
pop
leave
and
lahf
xor
jo
mov
mov
inc
xor
xchg
inc
inc
cmp
sbb
test
pop
faddl
push
mov
push
dec
loopne
les
shlb
aam
and
inc
int3
sub
out
push
mov
adc
mov
or
inc
repz
pop
lods
jb,pt
sahf
movsl
push
scas
int3
mov
ja
xchg
int3
xor
mov
xchg
adc
jns
clc
mov
inc
inc
popa
xchg
les
xchg
nop
jns
mov
mov
pop
scas
mov
dec
int
inc
mov
and
push
inc
pop
add
pop
add
sub
mov
push
inc
or
hlt
sbb
les
jp
fstpt
outsb
leave
jle
pop
dec
iret
mov
xor
mov
stos
sbb
pop
push
loop
jl
lds
stos
idivl
test
add
inc
repz
stc
dec
imul
scas
outsb
js
pop
das
dec
mov
inc
cs
and
inc
ficoml
scas
sbbl
or
jmp
shll
sbb
pop
lcall
xor
and
xchg
jl
test
sbb
pop
lcall
loope
dec
xor
repz
je
inc
lret
xchg
aaa
in
push
or
rclb
push
jnp
xlat
push
pusha
cmp
insb
popf
ljmp
je
jmp
mov
shlb
pop
ja
mov
or
shrb
test
jns
lcall
adc
bound
dec
imul
stc
movsb
jno
sub
je
and
mov
xchg
ja
andl
sbb
mov
lea
in
mov
xlat
mov
mov
push
jb
pop
pushf
jge
imul
aam
xor
mov
arpl
sbb
outsl
stc
repnz
cmp
mov
fists
mov
dec
inc
push
mov
sub
lock
push
sahf
pushf
lret
jno
mov
sbb
filds
bound
cmp
mov
xor
adc
ljmp
insl
into
clc
jns
inc
ret
repz
ret
test
inc
lds
and
popf
roll
add
int3
mov
xor
mov
cmp
in
gs
adc
inc
loop
mov
dec
xchg
les
ja
repnz
dec
int
decl
inc
addl
in
test
cltd
imulb
cmc
imul
mov
mov
push
movsl
sub
push
nop
inc
adc
mov
daa
das
jecxz
or
sbb
clc
dec
dec
jle
hlt
add
xchg
sbb
cmp
icebp
mov
jecxz
std
sbb
jl
arpl
adc
xchg
ret
lret
fimuls
clc
out
jbe
inc
push
bound
mov
dec
loopne
xchg
sub
inc
pop
mov
outsb
add
inc
fld
fcomp
popf
cs
cmp
xchg
adc
sbb
test
in
xor
jl
nop
push
jbe
data16
inc
and
cmp
jb
imul
imul
mov
insb
xchg
dec
xor
push
jns
sub
fs
mov
lea
mov
aaa
lods
and
xor
pop
mov
mov
aam
sbb
insl
adc
cmp
pop
pop
jo
jle
loop
cld
negb
cltd
shlb
sub
inc
dec
popf
ljmp
pop
in
push
inc
into
fiadds
aaa
mov
mov
in
insl
and
push
bound
mov
cs
popa
imul
push
mov
arpl
out
push
cmp
sti
sub
adc
adc
insl
adc
xor
insl
push
clc
dec
or
mov
pop
mov
push
xchg
test
push
jmp
mov
mov
push
cwtl
out
xor
aam
xor
inc
mov
dec
hlt
xor
insb
sbb
jg
test
in
inc
daa
push
mov
adcb
inc
adc
repnz
mov
xchg
push
bound
loope
or
rorl
xor
test
xchg
leave
push
sub
aad
fstl
sub
mulb
adcb
std
jmp
inc
push
and
lea
lretw
scas
js
fwait
mov
hlt
mov
ljmp
xor
dec
and
mov
movsb
inc
mov
es
leave
adc
xchg
xchg
rcl
xor
sub
add
mov
jns
cmp
xor
sbb
rclb
dec
jle
pop
leave
sub
loop
lahf
outsb
jbe
out
call
std
movsb
pop
mov
lods
mov
cs
xchg
xor
inc
outsl
and
xor
or
xor
xor
mov
mov
pusha
int
sahf
pusha
mov
xor
into
sub
jo
sub
cmp
or
idivl
or
mov
dec
push
xchg
insb
xchg
loop
stc
push
mov
incl
inc
push
lea
and
cmp
xchg
jecxz
mov
or
xchg
pusha
add
pop
adc
add
daa
jbe
pop
pop
lea
fwait
push
xor
out
cmp
xchg
cmp
sub
ljmp
pop
in
or
jle
jbe
or
or
std
cmp
nop
std
dec
cmpsl
mov
inc
outsl
or
ja
ret
xor
outsl
xchg
fsubs
in
out
lea
xchg
dec
ja
hlt
pushf
pop
push
out
xchg
jmp
cltd
gs
pop
std
sbb
fwait
jbe
in
sahf
mov
cli
addr16
in
push
repnz
adc
mov
loopne
mov
sahf
test
or
and
out
cs
test
adc
inc
or
pop
jo
dec
decl
cmp
das
xchg
stc
ss
xor
mov
in
xor
mov
xchg
adc
sub
add
xor
and
imul
jne
push
enter
inc
cld
cmp
das
cmp
inc
cmp
adc
repnz
aaa
inc
movsb
ds
sbb
cli
sti
dec
ja
adc
xor
cltd
adc
mov
ljmp
or
mov
add
pop
jle
sub
or
push
lock
push
push
repz
shrl
roll
adc
stos
xor
int
hlt
and
pop
push
scas
mov
lss
xor
lret
addr16
roll
xor
jle
imul
xchg
jmp
loopne
stos
jb
adc
xchg
sbb
or
xor
mov
lret
or
cmp
pushf
cltd
mov
sub
and
mov
inc
sbb
out
xor
stos
std
dec
cltd
int3
or
inc
pusha
movsb
hlt
cmp
or
or
adc
add
outsb
out
dec
push
xchg
scas
mov
ja
or
mov
out
push
jg
push
xchg
fdivs
sub
sbb
ss
mov
xor
push
mov
jge
mov
xchg
push
mov
jae
push
cli
mov
cld
lahf
mov
notb
fstl
rcll
pop
inc
pop
jnp
insl
ror
mov
add
and
mov
sbb
mov
add
dec
and
or
test
xor
mov
mov
inc
stc
and
and
dec
push
dec
inc
repz
sub
dec
mov
dec
jo
jns
push
or
xchg
jl
fidivs
xor
jmp
test
mov
outsb
test
or
jl
lahf
xlat
decb
jmp
mov
push
push
adc
ret
xor
sbb
daa
pop
test
jl
jecxz
enter
adc
or
dec
add
inc
loopne
add
ds
push
shll
int
in
movsl
adc
sbb
mov
mov
idivl
add
out
jmp
xlat
aad
das
iret
push
cmp
imul
movl
add
and
jl
orl
out
iret
sub
addr16
pop
pop
mov
pop
jb
inc
xorb
inc
pop
mov
out
enter
xchg
lods
jns
scas
add
in
xor
dec
jbe
xchg
enter
inc
pop
stc
mov
dec
xor
lock
fimull
iret
add
fisttpll
jmp
call
or
cmp
add
lret
iret
out
mov
stc
cmpsb
xchg
outsl
test
pop
hlt
xchg
sbb
sbb
std
sbb
dec
fwait
sbb
lds
mov
fs
repnz
sub
out
xlat
lcall
out
jge
xor
lahf
cmpsb
in
inc
cmp
jl
mov
pop
loope
adc
aad
fisttpl
xchg
add
push
hlt
xchg
iret
outsl
mov
sub
sub
inc
dec
mov
cmp
add
mov
push
lcall
clc
and
nop
mov
sahf
pushf
out
std
lret
ds
cmc
test
call
push
idiv
mov
mov
in
and
lods
cld
mov
mov
lea
sub
push
inc
fs
cltd
dec
inc
js
aam
shl
std
int3
fsts
ja
lahf
add
cmp
cmp
sbb
or
push
in
fbld
sarl
out
sub
sbb
add
into
sub
cmc
and
jae
ja
movsb
and
cmp
fistps
pop
jg
sbb
mov
icebp
dec
pop
lods
rol
outsb
iret
sar
not
push
mov
cmovle
les
lock
jle
xorl
mov
mul
js
and
ret
inc
pop
push
fcoml
dec
push
push
ret
pop
adc
push
addr16
mov
push
in
lock
mov
dec
nop
pop
call
xchg
dec
cvttps2pi
lock
mov
sub
jbe
sub
lahf
xchg
push
in
mov
jg
rep
lods
xchg
push
jns
aaa
xor
xor
xor
or
mov
sub
outsl
xor
adc
sub
popa
cmp
push
pop
js
dec
outsl
lret
push
jbe
and
je
xor
push
cli
cmc
ljmp
loop
int3
pop
xor
ss
pop
popf
and
mov
inc
ror
addb
mov
mov
lods
aas
lea
fs
sbb
shll
ja
push
cwtl
xchg
add
mov
jo
pop
sub
xor
cmp
stos
aam
pop
cmpl
pop
setne
sbb
cmp
pusha
dec
aaa
sbb
cmp
outsl
xchg
push
ret
xor
push
gs
stc
dec
daa
xchg
test
mov
rolb
lret
sub
adc
jle
repnz
pushf
popf
mov
out
lcall
push
or
imul
lea
jg
sbb
cmp
cltd
jno
xorl
pop
lea
sub
lea
test
adc
sbb
js
xor
sub
adc
jp
mov
test
pop
out
int
or
xor
jo
clc
ret
and
pop
pushf
jp
sti
xchg
fnstcw
hlt
and
and
push
gs
adc
cmp
push
fcoml
stc
cmpsl
fsubrp
rcl
mov
incl
in
push
cmc
and
out
mulb
pop
pusha
das
sbb
cmp
push
loop
dec
bound
sbb
mov
popl
popf
jmp
bound
or
rcll
subl
cwtd
or
xor
les
jp
test
gs
xchg
sbb
test
aas
movsl
nop
jle
or
push
fbld
xor
imul
pop
test
adc
mov
inc
test
daa
js
jno
fimull
add
lods
daa
shll
jne
jne
repnz
js
sbb
xchg
into
and
mov
fdivrl
inc
xchg
mov
sbb
sbb
push
mov
push
add
mov
and
repz
mov
cmp
pop
sub
mov
idiv
nop
clc
test
mov
xchg
ja
int
nop
ret
dec
xor
xchg
lahf
pop
mov
mov
push
lds
push
dec
imul
test
lock
ret
addl
sbb
push
or
adc
sub
decb
push
add
pcmpgtb
shlb
mov
scas
pop
and
jns
hlt
aad
cmp
dec
mov
push
mov
in
sub
jno
jmp
aam
mov
xchg
imul
mov
dec
cwtl
pushf
enter
aad
sub
add
mov
mov
mov
out
hlt
loop
push
adc
mov
jle
fs
or
fs
negb
dec
sub
mov
sar
inc
or
jo
mov
lods
xchg
push
sbb
adc
xchg
mov
testb
mov
push
icebp
leave
mov
repnz
and
lret
jae
mov
xchg
xor
into
mov
in
cmp
subb
daa
add
lods
xchg
or
sbb
xor
xchg
lds
ja
subl
incl
and
add
add
adc
adc
jle
call
aaa
adc
push
cmp
or
pusha
sub
mov
inc
push
shlb
jg
mov
dec
pop
lods
dec
push
cmp
cmp
adc
je
pop
jo
mov
addr16
jge,pt
fsubs
or
sbb
cld
mov
pop
dec
xor
sbb
mov
push
test
int
mov
fidivrs
jb
mov
cmp
jo
addb
dec
or
fs
xchg
dec
cmp
rclb
adc
and
adc
push
insb
mov
or
inc
and
cmp
and
xlat
addr16
lret
jg
xchg
sbb
js
mov
cld
rolb
pop
fcoms
add
jecxz
in
cmp
add
cltd
sti
mov
push
mov
cmpsl
mov
ss
popf
testl
pop
cli
cmp
mov
ret
fldcw
sahf
jecxz
push
mov
popf
cld
jl
fistl
pop
xchg
push
pop
addl
xchg
mov
xor
movlps
cmpsb
jne
cmpsb
mov
sbb
cmp
aad
lds
lcall
das
mov
lcall
push
dec
mov
cltd
sbb
inc
enter
add
sbb
xlat
lock
dec
cmp
dec
adc
mov
mov
inc
test
pop
lods
sub
pop
in
mov
cmp
rcr
repz
xor
in
sub
xlat
jnp
dec
cmpsl
jnp
sbb
in
adc
dec
addb
adc
adc
ds
cmc
fst
or
mov
pusha
fstpl
pushf
inc
inc
jg
test
ds
mov
aad
add
loop
sub
into
lods
fsincos
add
add
sub
sbb
dec
loopne
in
fcmove
fisttpll
into
cltd
sar
rcl
sbb
lock
add
fsts
mov
inc
fidivrl
fnstcw
fdivs
push
push
cwtl
shrl
mov
mov
mov
add
push
jecxz
pop
int3
mov
lahf
daa
and
fcmove
push
cmp
in
mov
in
stc
mov
adc
and
cmpsl
call
sub
hlt
sub
inc
out
imul
mov
mov
cmc
and
nop
dec
aaa
sub
lahf
xor
lods
mov
les
popf
mov
ret
fisttpl
inc
leave
push
imul
sbbl
cmp
neg
aam
mov
add
stc
xchg
aam
fldt
or
hlt
lret
dec
mov
cmp
xchg
pop
lret
pop
iret
shll
loop
cmp
sahf
jne
bound
aaa
loop
jecxz
mov
cmp
adc
sarl
add
mov
clc
mov
outsl
mov
sbb
imul
pop
dec
call
inc
add
sub
mov
insl
out
mov
cltd
ret
cmp
inc
scas
push
test
adc
mov
jne
out
xchg
jg
sub
jl
xchg
nop
xchg
sub
cmp
pop
in
rcrl
js
mov
sarb
aam
cmp
out
mov
xor
lahf
es
and
sbb
mov
daa
add
inc
cmp
sahf
mov
mov
es
xchg
orb
pop
lock
pop
jo
hlt
xlat
je
rolb
or
xor
imulb
push
and
xor
dec
aas
ror
jecxz
in
dec
xchg
dec
mov
mov
mov
dec
mov
data16
gs
into
aam
pushf
sbb
pop
ss
mov
lds
xor
dec
mov
mov
shll
outsb
out
daa
cwtl
in
dec
es
or
sbb
add
xor
lret
roll
pop
jb
xchg
sbb
mov
aam
add
andb
fisubrl
xor
adc
sub
out
fiadds
shrl
jo
jno
ficompl
mov
push
sub
out
imul
mov
mov
pop
movsl
dec
mov
inc
sub
xor
add
fmulp
and
pushf
or
jecxz
cmp
out
sbb
je
in
pop
jnp
mov
adc
pushf
movsb
pusha
pop
in
add
je
cmp
clc
and
movsb
in
pop
cli
rcrl
xchg
or
shrb
leave
cwtl
cmc
pop
mul
fs
dec
std
rcrl
in
sub
mov
mov
xchg
push
mov
fs
cmp
lds
repnz
rol
nop
sarb
adc
pop
ds
cltd
rcrl
lcall
cltd
push
sbb
int3
rcrb
mov
jl
and
jle
pop
xchg
sbb
sub
into
ret
or
pop
ret
inc
cmpsb
aad
and
sarl
push
inc
loope
pop
xchg
popf
inc
pop
test
pop
push
imul
adc
sbb
std
pusha
sahf
sbb
rorb
xchg
sti
cmpsb
loopne
add
andb
and
popf
mov
pop
js
arpl
adc
ret
sbb
test
jb
mov
stos
or
jae
mov
fwait
jge
adc
shrl
scas
enter
inc
sbb
fmul
movl
sbb
jb
push
sbb
test
pop
dec
adcl
mov
mov
repnz
xchg
sub
flds
call
inc
jmp
sub
or
std
sti
dec
jnp
mov
push
inc
sbb
inc
push
mov
push
pushf
adc
sbb
lret
xchg
dec
cmp
inc
dec
sbb
sub
test
sbbl
push
xor
sbb
and
cli
mov
movsb
es
jo
mov
dec
stos
stc
add
addr16
adc
mov
loopne
test
jae
lock
in
aam
ret
add
dec
jae
mov
fsubrp
inc
aas
ljmp
cmp
mov
jecxz
jno
gs
mov
pop
mov
cmpsl
rclb
test
sbb
ret
ficomps
xor
inc
mov
std
into
lods
xchg
inc
das
or
je
sub
cs
or
scas
xor
rolb
sub
call
insl
in
push
cmp
icebp
out
jns
push
pop
aam
sbb
mov
and
push
or
nop
or
pop
dec
and
jmp
out
mov
ljmp
lahf
stos
push
jb
dec
pop
dec
test
cmpsb
sub
sub
stos
pop
test
test
iret
test
sub
adc
addr16
xchg
cmpsl
imul
xchg
jno
rcrl
sti
test
sahf
pop
loope
cmp
adc
push
into
sti
cmpsl
xor
jg
out
call
fsubs
clc
sbb
push
xchg
xor
shrb
dec
or
adc
and
aaa
xchg
xor
ret
cmp
push
test
lea
mov
ret
jle
jne
push
cmpsl
jl
push
ss
cltd
pop
test
lock
xchg
sbb
lods
clc
scas
push
in
xorb
out
cmp
dec
jns
adc
push
push
xorl
cmpsb
in
test
lcall
cld
lods
xor
sbb
push
mov
test
enter
and
sbb
sbbl
mov
mov
test
pushf
rcr
pop
or
test
cmpsl
icebp
aad
sub
mov
test
shrl
push
xor
icebp
insb
sti
mov
sahf
movsb
stos
inc
movsb
add
cltd
and
insb
cmp
cmc
push
jne
fimull
jmp
dec
pop
jb
mov
outsb
push
mov
mov
aas
mov
xchg
inc
out
in
adc
jl
rcr
jnp
inc
pop
cmpsb
test
pop
jae
sbb
sbb
or
das
xor
ds
nop
addr16
mov
jno
xchg
dec
fisttpl
into
ret
mov
push
sbb
add
into
dec
push
add
cmp
jl
xlat
fcompl
push
inc
or
fistps
add
and
fwait
aaa
dec
inc
jne
das
cmp
call
subl
mov
push
mov
or
push
dec
inc
fnstcw
idivb
xchg
jmp
cmp
sub
test
jns
pop
rcrb
ret
adc
mov
nop
test
lcall
ljmp
out
popf
add
mov
fcmovb
popf
insl
roll
sbb
xor
dec
loopne
jle
jl
add
mov
data16
sub
jns
add
push
add
outsb
push
scas
xlat
test
mov
push
pushf
adc
push
movsl
mov
lock
hlt
jecxz
dec
outsl
xor
outsb
mov
jg
mov
jno
fbld
and
test
jg
icebp
leave
shll
inc
sti
mov
push
push
inc
js
xchg
mov
pop
mov
in
dec
push
enter
jne
clc
mov
push
repnz
loop
lsl
adc
mov
xchg
add
pop
cmp
xor
das
js
out
inc
pop
clc
xor
iret
cld
push
mov
test
in
pop
sub
jb
aad
sahf
pop
pop
xor
pushf
adc
push
xlat
xchg
cmpsb
test
aam
sub
pop
out
outsl
xor
sti
shrl
incl
sbb
insl
jp
jno
mov
jle
xlat
and
ret
inc
push
mov
testl
pop
stos
cmc
xchg
jle
inc
ret
mov
dec
push
inc
call
decl
push
imul
test
mov
adc
mov
ljmp
mov
jmp
mov
sub
adcl
inc
push
ror
bound
mov
fs
sbb
movsb
inc
mov
jbe
arpl
jns
mov
lds
stos
stc
ficomps
xchg
popa
popa
adc
fwait
pop
das
mov
or
popa
shlb
bound
fildl
icebp
call
ja
jge
fidivrs
and
or
or
mov
cmpsl
xchg
adc
adc
dec
inc
sahf
dec
mov
lock
inc
mov
inc
mov
enter
pop
lock
or
adc
and
movsl
rcll
jbe
ljmp
call
mov
iret
mov
sbb
pop
cltd
sub
divl
mov
nop
dec
mov
enter
lret
xchg
rcl
lret
mov
pop
mov
icebp
mov
outsb
inc
and
mov
jmp
jmp
je
out
xchg
sbb
and
roll
pop
dec
mov
add
popf
mov
pop
frstor
mov
xchg
push
add
leave
dec
out
imul
inc
ss
scas
lods
shll
fsubrl
lods
cltd
and
mov
cltd
mov
das
cld
jge
jp
jge
mov
and
outsl
fmul
outsb
or
shl
or
sub
lret
inc
adc
dec
push
int
jp
push
lds
test
mov
pop
mov
sti
ljmp
ss
sbb
push
xor
rcrl
je
in
shr
sbb
cld
arpl
sub
fisttpl
jo
scas
lret
mov
or
mul
lods
mov
dec
dec
decl
mov
mov
jo
sub
int3
sti
shl
adc
push
movb
cwtl
cltd
cmp
add
sti
roll
pushf
test
or
repz
roll
mov
cmpsl
mov
lods
and
mov
inc
mov
bound
mov
add
jbe
cltd
les
xor
cmc
aaa
xor
cmp
push
push
cltd
daa
aaa
mov
std
sti
dec
in
sub
push
dec
inc
sbb
cmpb
rolb
jae
push
scas
or
test
dec
fnsave
jle
mov
add
enter
loope
imul
iret
adc
push
rolb
push
scas
int
cvtdq2ps
sub
lock
xchg
adc
push
dec
gs
ficoms
dec
into
or
xchg
sub
jno
loope
and
pop
inc
jne
mov
mov
pop
mov
mov
add
adc
stc
test
in
mov
popf
mov
and
or
jb
jg
jmp
mov
mov
out
mov
or
inc
sub
stc
sub
lahf
inc
mov
repnz
enter
sbb
xchg
dec
fdivs
xchg
test
pop
adc
pop
push
cmpsb
push
cs
cmpsl
and
and
inc
sahf
orb
inc
in
aas
mov
pop
ret
lods
sarb
clc
push
scas
loop
push
adc
and
ds
mov
rcr
sub
cmpsl
popf
adc
or
pop
hlt
inc
sbb
xlat
fwait
sahf
sbb
jle
pop
incl
xor
sbb
inc
xchg
ja
xor
divb
lret
fcomp
pop
dec
das
sub
pop
xchg
faddl
enter
addr16
test
lcall
jo
dec
sbb
repnz
sbb
loop
lods
jmp
aaa
inc
or
sahf
inc
dec
xchg
pop
lods
jg
gs
rorb
add
out
jmp
xchg
add
adc
inc
jle
test
dec
push
mov
mov
rep
pop
mov
sbb
sub
ficoms
rclb
and
dec
inc
test
ljmp
flds
dec
mov
adc
mov
jae
mov
sahf
push
jo
sub
fwait
into
pop
and
out
push
push
lcall
fs
sbb
sbbl
jns
repz
sbbl
inc
popf
rcrb
out
popl
sbb
mov
fdivl
int3
or
adc
popf
add
mov
adc
int3
nop
jo
imul
loopne
pushf
and
jbe
and
js
adc
imul
notl
rcl
push
fldt
mov
mov
sub
fmuls
push
arpl
pop
and
pop
pop
data16
icebp
fistpll
mov
adc
into
sub
jae
popf
cltd
add
sbb
inc
clc
divl
inc
ds
xchg
mov
arpl
jp
cli
btc
mov
jle
or
sub
out
insl
clc
aaa
mov
fimull
add
outsl
mov
pop
cmpsb
xchg
xor
push
and
rcrb
dec
orb
es
fwait
stos
push
mov
ljmp
lds
cld
mov
pop
sti
outsl
jnp
or
and
mov
add
sbb
cli
fldt
adc
fldcw
dec
cmp
hlt
mov
xchg
cmp
out
cld
fnstcw
jp
ss
or
pop
popa
in
cmp
xchg
cli
repnz
call
inc
mov
jl
sbb
in
xor
jmp
inc
xchg
mov
add
push
repnz
cmp
adc
xor
ds
add
jae
mov
push
push
xchg
xchg
xchg
sbb
mov
jbe
shlb
dec
dec
sbb
lock
adc
gs
subl
push
pop
and
repz
pop
sub
aam
jge
pop
jmp
shll
das
push
push
pop
cwtl
xchg
jecxz
in
sub
sti
jge
aam
sti
call
aaa
mov
test
leave
test
xchg
lods
minps
idivb
pop
lock
and
push
pop
shrl
mov
mov
std
insb
std
std
scas
movsl
daa
int
es
jbe
xor
sbb
jnp
in
sbb
lahf
sub
mov
lcall
mov
test
adcl
inc
xor
sbb
cld
ja
test
clc
push
sti
lret
xchg
xchg
push
and
das
jae
dec
aam
les
int3
popa
jge
scas
pop
sbb
mov
addr16
out
js
scas
movsl
dec
out
hlt
push
out
bound
inc
or
xor
enter
and
aas
jl
jne
and
pop
pshufw
sbb
jno
daa
ss
xchg
scas
add
sbb
into
divl
inc
popa
pop
sub
xor
or
daa
outsl
jmp
inc
push
sbb
out
shl
out
xor
nop
outsl
rcll
dec
aad
push
dec
dec
xor
push
ds
mov
push
aam
jnp
add
es
inc
xchg
test
or
sti
data16
scas
cmc
jno
int3
cmp
hlt
inc
popf
mov
scas
dec
mov
mull
xchg
jg
daa
imul
out
sbb
and
dec
popa
pop
mov
mov
pop
cmpb
mov
movsb
and
sbbb
mov
push
push
in
out
fs
push
and
mov
mov
loope
mov
ja
sahf
mov
ret
add
mov
scas
scas
addr16
push
add
lret
ror
fs
outsl
lret
out
sbb
outsb
pop
adc
psrlq
push
or
fstpl
add
mov
daa
shll
jns
cmp
loop
dec
vpaddd
add
notl
cld
mov
jmp
lret
or
scas
fsub
fstps
dec
cltd
jae
xor
pushf
fwait
xchg
jmp
rorb
sbb
gs
movsb
pop
lret
add
jecxz
jmp
jp
imul
loopne
jo
mov
sbb
jae
mov
jae
cmp
xchg
aam
push
fs
push
jne
add
mov
push
popa
ds
loopne
dec
enter
insb
lds
movsl
cs
jns
push
test
popf
jnp
cmpsl
out
mov
out
std
jmp
rorl
pop
push
and
inc
push
xchg
int3
jnp
mov
cmp
in
dec
ljmp
mov
cmp
in
mov
cmp
mov
rorb
cwtl
bound
fcmovbe
mov
loop
pop
mov
push
push
cmpsb
sbb
jecxz
ljmp
shrb
push
movsb
ja
sbb
push
pop
xlat
adc
addr16
enter
inc
adc
out
mov
sbb
sahf
jl
sbb
movsb
xchg
xchg
jbe
lds
mov
rcrb
setb
ret
mov
push
cmp
hlt
jge
repnz
mov
xchg
lock
jle
sbb
pop
add
int3
dec
xchg
rorl
les
mov
or
jmp
inc
jbe
rolb
or
push
cmp
xchg
fiadds
lcall
sub
rorl
imul
xchg
pop
sub
push
nop
sub
pusha
js,pn
fwait
loopne
es
xor
xor
push
idiv
add
scas
test
loope
test
mov
das
jb
fdivl
or
cli
xchg
popf
inc
jp
jmp
jno
lret
subb
jmp
cmp
std
xchg
fld
addr16
cs
cwtl
push
dec
imul
ret
pop
and
cmp
mov
mov
test
ss
add
push
clc
fsts
cmp
pop
stos
push
mov
and
push
insb
dec
lahf
sahf
stos
ds
sbb
mov
stos
jae
mov
xor
movb
fistl
outsl
cmpsl
push
aas
icebp
stc
movsl
mov
xor
lea
scas
daa
cltd
mov
add
jmp
out
inc
dec
pop
xchg
pop
push
lcall
xchg
fcmovb
pop
and
mov
pushf
and
jne
sbb
jmp
push
xchg
xchg
int3
in
cmp
push
fs
std
test
xchg
pop
xchg
in
sbb
je
pushf
shrl
or
repnz
mov
ret
pusha
add
adc
pop
add
fisttpl
hlt
mov
push
call
ljmp
lea
sub
mov
insb
enter
addr16
mov
or
xor
insb
mov
out
add
mov
jne
jo
out
adc
xor
pop
subps
popf
insl
jb
fst
scas
lods
aas
test
sub
xchg
mov
mov
mov
mov
fisubrl
add
mov
out
jbe
sub
dec
mov
test
xchg
inc
lods
js
ds
in
ja
dec
das
outsb
or
sbb
out
pop
lods
faddl
xchg
fwait
imul
add
jecxz
dec
js
mov
cs
jecxz
mov
cmp
stos
xor
les
nop
stos
lahf
test
jp
fwait
ud0
or
out
cmp
xor
out
jne
shl
movsb
lds
dec
in
test
leave
jnp
dec
mov
lret
lahf
lea
cs
mov
jno
fdivrl
addr16
call
xchg
inc
cmp
jnp
mov
insl
scas
jbe
dec
andl
mov
loopne
xor
pop
sub
jmp
add
insl
fdivrl
lcall
repz
call
xchg
jo
pop
or
or
jne
lods
mov
es
xor
test
push
push
mov
xchg
outsb
xchg
aas
push
ret
cli
cltd
je
icebp
stos
std
and
les
push
xchg
sub
or
repz
push
loopne
inc
xchg
in
sub
mov
add
in
aas
scas
push
inc
mov
flds
sub
push
xor
pop
lret
xor
js
sarl
mov
sahf
enter
shl
adc
and
xor
es
adc
add
out
push
adc
shrb
mov
je
in
insl
test
jl
and
sahf
subb
int3
ljmp
movsl
addl
cltd
outsl
jnp
jl
mov
sub
loopne
adcl
sarb
add
in
data16
leave
jne
testl
cmp
or
xchg
lcall
daa
xor
std
test
mov
negl
stos
cmpsb
ss
call
rclb
outsl
iret
jns
fisubs
mov
and
mov
ficoms
jge
push
xor
adc
mov
fistpl
test
push
sub
and
pushf
sub
ja
sti
mov
xchg
cmpsb
mov
add
mov
push
and
bound
jnp
out
rcrl
stc
jl
inc
mov
call
mov
orps
xchg
insl
idivb
push
dec
inc
fistps
adc
sbb
icebp
sub
add
add
sarb
jge
into
loop
ja
add
push
aas
xchg
sbb
outsl
rorb
mov
fwait
cld
jg
lods
stos
dec
dec
mov
orb
jl
dec
push
pop
jns
out
daa
mov
and
movsb
dec
adc
scas
adc
inc
or
ss
dec
add
push
adc
call
mov
hlt
xchg
stos
add
cmc
lock
sarl
inc
jne
lahf
xor
mov
aas
pop
pusha
push
fcoml
push
jge
jmp
add
je
ret
dec
xlat
jg
int3
cmpsl
data16
gs
pop
jne
sarb
lret
aad
mov
es
stos
ret
mov
std
mov
sahf
ss
or
int
scas
cld
aas
cmp
out
shll
xchg
shll
bound
imull
cmp
pop
sbb
sar
leave
pop
cld
ret
push
sub
cmp
rcrl
dec
lds
jno
test
inc
fucomip
push
loop
jp
or
and
pushf
imul
pop
divb
jle
dec
push
or
mov
adc
sub
insb
push
adc
add
mov
jne
jo
ret
sti
sbb
fwait
ret
clc
pop
dec
push
into
test
lea
std
imul
daa
call
out
and
jne
sub
inc
pop
sub
lahf
sbb
add
mov
push
add
ljmp
dec
neg
cmc
fdivl
fs
or
add
loope
xor
loope
shll
pop
out
movsb
jmp
outsb
lock
add
or
daa
xlat
mov
das
mov
cmp
jecxz
stc
jo
xchg
xor
cmpl
push
dec
jae
jne
mull
xor
pop
mov
cmp
sub
outsl
jae
push
fdiv
jmp
shll
or
mov
cs
repnz
scas
dec
sub
faddl
fisttpl
sub
and
mov
xchg
adc
mov
imul
aas
and
rol
clc
jne
sti
cmpsb
fimuls
rcll
add
pop
pop
icebp
adc
loopne
or
aam
adc
lret
adcb
cmpsb
xchg
sbb
mov
sbb
adc
mov
sarl
adc
jmp
stos
cmc
test
test
loope
icebp
dec
push
dec
fisubs
shlb
push
cmp
orb
insb
mov
fnsave
imul
icebp
imul
int
mov
icebp
rolb
mov
cmp
adc
cli
xlat
jnp
sbb
sbb
in
fstl
sub
xor
mov
loop
adc
xor
int
push
fcmovnu
sar
test
mov
push
ret
stos
push
cmp
mov
push
sub
adc
shll
sub
xor
and
mov
imul
cmc
mov
jmp
test
movl
mov
jb
sub
mov
inc
push
sbb
pop
and
rorb
int3
lock
cltd
mov
mov
or
stos
mov
stos
imul
rorl
inc
ja
rcll
xchg
jge
xchg
xchg
push
je
push
scas
mov
cmpsl
test
add
add
jo
pop
inc
sbb
mov
in
in
es
sub
movsl
aam
push
mov
ds
pop
xchg
lea
inc
ret
dec
jns
nopl
adc
mov
push
cmp
sub
fcmovnu
mov
mov
mov
adc
sub
jl
mov
pop
stos
mov
daa
jbe
or
ret
lea
dec
xchg
add
jecxz
test
into
dec
mov
addr16
jl
es
shll
mov
movsl
aam
jne
mov
shrl
js,pn
les
out
idivb
jns
inc
in
cmp
daa
sbb
inc
mov
lea
sub
rorl
jmp
fisttps
push
jae
sub
pop
fwait
xchg
data16
scas
lcall
test
mov
stos
adc
fsubl
inc
std
sahf
bound
mov
add
rorl
dec
push
pop
js
leave
inc
xor
sub
push
les
or
fmuls
pusha
xor
fistps
sti
push
xor
int3
scas
icebp
mov
jbe
push
mov
cmp
push
xor
in
and
stos
sbb
out
cmc
mov
scas
repz
xchg
adc
mov
push
gs
jmp
push
sbb
gs
inc
syscall
jge
stos
clc
fisubrl
push
sub
xor
movsl
call
test
or
inc
bound
inc
or
inc
cmp
scas
jge
fldln2
push
xchg
jnp
pop
mov
pop
into
mov
iret
push
aas
sub
jne
xchg
or
pop
jg
cmpsb
clc
dec
mov
mov
outsb
push
sbb
pushl
sub
mov
push
out
add
out
dec
lods
fimuls
jnp
les
dec
mov
hlt
sub
or
test
fcomp
jp
sub
xor
adc
and
rcl
and
mov
pop
jb
bound
pop
mov
xchg
or
cmp
sti
sarb
ds
pop
xor
nop
dec
leave
dec
sub
loopne
push
out
or
mov
sbb
lock
mov
mov
pop
bound
xor
cmpsb
lret
test
lret
mov
divb
clc
mov
jbe
inc
jmp
inc
das
out
mov
push
sbb
push
inc
cli
jb
shr
sub
fnstcw
testb
inc
cltd
pop
hlt
xor
fs
enter
xor
cmpsl
xchg
pop
lret
outsl
adc
pop
out
xchg
ljmp
orb
sbb
cmp
lcall
inc
popf
mov
cmp
xchg
cmp
inc
inc
push
in
daa
in
adc
mov
inc
mov
ljmp
mov
scas
mov
lock
ds
aad
add
adc
cmp
stos
pop
jl
out
shll
xchg
mov
mov
adc
cs
ret
test
std
lock
stos
leave
sarl
inc
pop
shll
jmp
mov
xlat
in
mov
xchg
mov
test
dec
adc
adc
aad
in
sbb
mov
or
enter
and
movnti
mov
cld
dec
pop
out
xor
mov
inc
fistps
out
add
shl
push
test
adc
xchg
mov
cmp
mov
test
mov
fmull
sarl
incl
out
push
jo
mov
pop
xchg
sub
out
sbb
jp
mov
push
stos
data16
mov
push
lods
sub
mov
jle
sbb
inc
movsl
xlat
cmp
mov
addb
lea
icebp
insb
or
sarb
push
push
jns
jae
fidivrl
dec
inc
pop
aas
lret
in
cmp
push
mov
xchg
pop
mulb
push
push
mov
gs
inc
mov
ss
test
xor
push
jle
or
cli
sti
jl
outsl
popf
notb
stos
xor
push
pop
idiv
outsb
iret
jns
and
aad
push
cmp
lahf
int3
out
pop
jbe
daa
ud2
roll
test
aad
push
pusha
rcl
test
stc
rorb
ljmp
pop
cmp
test
cmpb
scas
aam
adc
arpl
lds
icebp
call
dec
sahf
xor
cmp
repnz
pop
xchg
cld
jae
push
cmp
stos
aas
loopne
sub
jcxz
mov
sbb
lret
mov
push
and
mov
aad
cmp
or
push
arpl
cmp
call
add
mov
cs
loopne
xor
push
sub
mov
lock
gs
out
or
daa
daa
jns
add
mov
jns
fdivs
ret
push
inc
jecxz,pn
sbb
dec
sub
loop
stos
sbb
out
push
cld
cmp
mov
mov
sbb
mov
stos
iret
in
pop
push
xor
stos
stc
xor
in
or
movb
ror
jae
cli
ret
xchg
popa
jge
jmp
add
popf
inc
lcall
jbe
jge
mov
pop
test
bound
fstpt
sti
mov
add
fildll
or
fldl
cwtl
inc
or
xor
cmp
xchg
pop
xchg
sbb
fxch
fdivs
dec
inc
mull
movsl
addb
mov
push
pop
or
and
fdivl
sub
out
mov
pop
mov
xor
adc
icebp
push
jb
fiadds
fstpl
aad
lock
in
scas
movsl
sbb
out
dec
add
push
inc
test
mov
inc
loope
int3
shl
sbb
push
mov
mov
stos
fsub
sbb
leave
clc
fdivp
mov
pop
mov
aaa
lds
stc
inc
js
jbe
cwtl
cmp
adc
rol
xchg
xlat
cmp
mov
dec
dec
imul
mov
enter
mov
repnz
gs
mov
or
sub
das
fildl
xor
cmp
pushf
mov
xorl
out
xor
push
mov
ret
popa
dec
push
pop
in
push
test
loop
add
inc
inc
divl
xor
ljmp
ficomps
jns
jns
sub
cmp
notb
in
mov
push
mov
scas
imul
push
ljmp
sbb
sub
xchg
xchg
sbb
scas
daa
lods
pop
sub
not
or
test
lahf
push
jns
mov
clc
out
loope
in
sub
mov
test
mov
xor
mov
call
push
lds
insb
xchg
ss
and
scas
xchg
data16
adc
dec
sbb
mov
cmp
push
cmc
mov
jle
stc
std
jno
sbb
jnp
or
push
nopl
icebp
lcall
std
lret
inc
rclb
push
push
stc
mov
faddl
test
cmp
pop
xlat
mov
xor
ret
fcomps
sbb
pop
xor
dec
mov
lret
cmc
ja
push
push
vcomiss
xor
xor
dec
testl
xor
ljmp
dec
rcrl
or
orl
mov
sub
int
pop
pop
xlat
rol
dec
sbb
sub
xchg
mov
mov
mov
and
or
stc
cmp
pop
testb
inc
dec
cmp
imul
mov
adc
jmp
push
aam
sbbl
cmp
movl
sbb
push
push
sub
aad
and
push
or
adc
inc
push
jbe
enter
push
lea
add
repnz
sub
and
leave
int3
iret
repz
into
mov
addl
rol
cwtl
int
icebp
out
leave
add
and
fmull
pop
rclb
xor
in
jge
ljmp
mov
mov
test
jmp
jle
leave
ss
pop
xchg
xchg
je
mov
mov
mov
mov
pop
inc
xor
jle
std
into
fsubs
stos
sub
outsb
inc
xchg
out
xor
push
inc
xchg
jae
cmpsb
hlt
and
jbe
cli
sbb
lods
xor
adcb
jno
xchg
dec
daa
xchg
popf
jbe
jae
loope
sub
imul
xorb
push
shll
or
adc
xchg
inc
data16
xchg
rcl
aaa
dec
mov
mov
pop
xor
mov
mov
dec
push
sbb
adc
imul
cld
mov
arpl
add
push
into
mov
mov
adc
and
mov
cmc
push
cmp
mov
jns
aad
mov
mov
mov
pop
jg
push
and
scas
sub
cld
fcompl
ljmp
mov
cmp
pop
fs
xchg
out
push
addl
xor
mov
das
cld
jecxz
xor
lods
dec
sbb
out
loopw
and
ret
jmp
ret
push
aaa
test
popa
add
adc
outsb
ja
mov
int
int3
xor
push
or
dec
cmpsl
outsl
mov
add
jbe
xchg
out
stc
xchg
in
mov
jnp
adc
push
fsubrs
add
dec
mov
xor
movsb
xor
je
sbb
outsb
hlt
cltd
inc
addl
sbb
xchg
sti
addr16
lret
lcall
ficoml
insl
dec
hlt
mov
pusha
xchg
mov
push
or
cmp
pop
jle
ret
push
mov
cmpsl
shrl
cs
cmpsb
add
inc
and
jl
pop
js
add
xchg
popf
sub
bound
outsl
orb
mov
ret
mov
imul
sub
cmp
in
lods
mov
mov
dec
fs
xchg
xchg
in
xor
je
loop
mov
mov
arpl
cmp
ret
aad
iretw
out
enter
aad
lahf
lret
out
outsl
repz
mov
xchg
pop
and
pop
mov
inc
jecxz
insl
imul
ret
mov
lret
mov
and
sub
fwait
mov
ret
ss
dec
mov
cs
cli
xor
add
pop
hlt
mov
mov
shll
inc
adc
lock
in
je
imul
sarb
mov
lods
pop
sti
outsl
test
jb
push
test
or
push
and
adc
push
lods
mov
adc
les
or
sbb
sti
pop
mov
movsb
aas
cmp
pop
stc
mov
push
adc
ja
ss
inc
push
pop
inc
rorb
jg
adc
mov
jl
push
cmc
in
out
mov
push
mov
push
addb
mov
ds
cmp
mov
out
push
pop
cmpb
sbb
jnp,pn
ja
loope
and
das
outsl
xor
adc
dec
shll
stc
xchg
sub
fcompl
out
std
sbb
jl
dec
cmp
inc
dec
sbb
xor
cmpsl
push
pop
sub
adc
jmp
xchg
loope
pop
push
xorl
fsubl
xchg
sub
push
pusha
mov
cwtl
je
push
mov
mov
pop
fs
lret
icebp
rolb
xlat
shr
xchg
outsl
lahf
xchg
sbb
inc
push
pushf
xchg
scas
lds
incb
das
xor
pop
test
js
cmp
popa
and
jle
push
mov
or
aad
imul
cmp
pushf
adc
push
jg
test
cmp
jecxz
jne
sub
mov
addr16
out
cmp
push
das
cmp
mov
fidivs
adc
hlt
enter
mov
jp
sbb
mov
mov
or
sarb
xchg
orl
dec
je
pop
popf
sub
movsb
lock
cmpsl
pop
dec
xor
scas
xchg
xchg
rolb
sub
pop
mov
push
and
cmp
sub
dec
mov
pop
dec
repnz
rorl
test
add
adc
cmp
insl
loopne
inc
cmp
sbb
mov
fs
and
mov
pop
sahf
sahf
fcom
mov
rcr
inc
nop
or
in
enter
mov
or
addb
lods
xchg
and
int3
and
inc
insl
mov
std
cmp
xor
imull
xchg
ss
inc
mov
xor
nop
push
test
and
cmp
js
pop
out
leave
dec
lcall
mov
lret
aad
rol
adc
pop
or
and
hlt
mov
aas
scas
pmullw
enter
jae
mov
ficoml
addb
mov
aam
mov
cld
mov
jp
lcall
leave
pop
pop
cmp
fsubrl
xchg
in
mov
in
sbb
mull
enter
xor
xchg
dec
scas
rcrl
cmpl
lcall
dec
data16
push
adc
mov
cltd
mov
adcl
loopne
fs
dec
push
add
movsb
sbb
popf
pop
pop
fists
rcr
ret
stos
dec
push
bound
dec
cmp
sbb
pop
fadds
rcr
cmp
pop
rcr
mov
hlt
sub
ja
outsb
bound
pop
or
paddsb
aam
in
xor
repnz
adc
add
bound
aam
xchg
lret
cmpsb
jb
dec
cmp
sbbl
lock
scas
jle,pn
mov
xchg
repz
and
shlb
sub
jno
or
and
sarl
paddusb
in
pop
mov
xchg
loop
sarb
repz
gs
imul
or
out
outsl
push
orl
into
jmp
lret
test
sbb
ds
pop
adc
xchg
and
mov
ss
mov
aam
and
sbb
call
jg
dec
sub
mov
out
faddl
xrelease
repnz
call
sahf
cmpsl
jb
mov
sbb
adc
jbe
jne
cs
adc
mov
bound
mulb
xor
mov
push
loop
mov
cltd
cs
add
pushf
jp
mov
daa
cmp
fcmovnu
popf
bound
dec
sub
sbb
cwtl
les
imul
pop
and
pop
cmp
mov
aad
in
lcall
mov
jb
jns
fcomps
jbe
test
outsl
orl
popf
out
mov
sbb
decb
sub
and
cmp
lods
cmc
pop
lahf
inc
es
sub
push
and
push
mov
lods
out
cmc
cmp
shrb
incb
xor
andb
mov
arpl
xor
push
scas
and
pop
fwait
sbb
and
sbb
pop
adc
out
xlat
cmpsl
jg
mov
jg
cmp
dec
scas
add
repnz
cmpsl
cli
add
fs
push
into
mov
out
and
xlat
add
icebp
pusha
ja
mov
in
jnp
mov
inc
jo
cmp
push
jp
aad
sub
jmp
out
jb
xchg
mov
mov
pop
subb
ds
mov
je
xchg
enter
pop
lock
cmpb
add
jne
adc
jp
inc
data16
dec
fs
imul
das
cmp
mov
xor
adc
sbb
lahf
cwtl
stos
cwtl
add
mov
inc
mov
cmc
sbb
repnz
inc
adc
xor
cmc
push
fstpl
jns
mov
inc
in
jnp
xchg
jle
jno
and
aam
rorb
adc
inc
out
sub
daa
rcll
dec
pop
cwtl
or
xor
sbb
and
cmpsb
mov
mov
outsl
mov
fildl
dec
shl
cmpsl
sub
sub
push
xor
or
jbe
sub
push
jg
inc
idivl
push
fcmovne
mov
and
mov
xor
add
repz
dec
in
inc
in
cwtl
roll
incl
sub
outsl
aaa
xchg
sub
popa
mov
icebp
mov
xchg
addr16
fldcw
stc
lock
mov
dec
andl
push
inc
mov
cmp
xor
adc
inc
out
jns
subb
addr16
das
pop
xor
xor
add
jg
mov
sbb
ljmp
mov
sti
sub
xor
jne
sub
adc
pop
pop
imul
push
mov
jnp
inc
push
xchg
negb
ret
or
movsl
ja
push
cmpsb
jl
cmp
je
xor
enter
adc
lea
lea
mov
dec
or
outsl
xchg
or
movhps
leave
add
ficomps
xchg
das
rcll
arpl
mov
dec
push
mov
push
pusha
push
nop
lock
dec
fbld
inc
pop
pop
fidivl
test
adc
mov
inc
test
aam
xchg
bnd
dec
sar
push
lock
jl
js
jp
scas
imul
out
push
data16
mov
cs
inc
cs
insw
nop
test
in
pop
cwtl
pop
imul
sbb
sbbl
jno
clc
jns
shll
iret
mov
test
lret
pusha
mov
and
scas
imul
mov
cmpsl
xlat
leave
jle
cmpl
ss
lods
push
inc
out
popa
std
notb
xor
add
xchg
jp
mov
loope
add
pop
jp
stos
cs
dec
pusha
pop
or
push
xor
jae
mov
pop
inc
fisttpl
mov
push
pop
in
js
adc
nop
test
into
add
es
xchg
lea
stc
pop
and
push
inc
addl
push
in
leave
iret
sub
rcrl
leave
add
adc
xor
xor
repz
test
popa
mov
adc
xor
dec
lret
fimuls
adc
andb
xchg
mov
jmp
or
adc
cmp
xchg
mov
into
mov
cwtl
cli
mov
lods
xor
cmpsl
out
je
mov
mov
push
inc
push
pusha
mov
push
sbb
cltd
mov
push
cmp
call
xor
jmp
mov
popa
or
or
mov
cmpsl
xor
xor
mov
ffree
bound
inc
mov
addr16
dec
lds
add
bswap
out
rcr
pop
xor
iret
ficoml
push
jecxz
lret
pop
test
enter
and
mov
cmp
jle
adc
cmp
out
popa
xchg
pop
pushf
dec
nop
dec
stos
and
test
push
or
xchg
leave
mov
ret
fmull
push
out
lds
in
mov
push
mov
pop
mov
rolb
push
push
cmp
push
es
mov
cmp
sub
pop
imul
mov
adc
mulb
add
loop
pop
mov
jmp
push
push
mov
subb
pop
jb
pushf
dec
mov
pop
mov
rclb
mov
outsl
stos
shr
mov
out
bound
cs
mov
or
dec
cmpsl
mov
jnp
jp
pop
and
and
cmc
in
in
sahf
push
ss
arpl
div
jo
mov
in
das
cmp
test
data16
mov
and
push
lods
push
jge
imul
test
sbb
aas
fadd
loopne
mov
inc
fwait
int
outsl
mov
mov
xchg
ja
pop
rorl
loop
push
aas
repnz
lcall
push
jne
inc
add
data16
xchg
or
faddl
popa
sbb
jns
scas
jnp
jp
pusha
cmp
xor
das
rcrb
cli
outsb
adcb
pop
fwait
lea
inc
or
insl
mov
push
mov
inc
test
pop
sahf
lahf
in
cs
mov
jg
out
jno
shrl
inc
gs
pop
stc
jb
lahf
jge
lds
loopne
sets
inc
es
in
enter
add
or
xchg
sub
jns
mov
push
or
or
mov
shlb
jmp
sub
inc
enter
fistpll
imul
jb
lahf
xchg
xchg
icebp
push
dec
es
ss
lds
das
pushf
mov
stos
adc
leave
fdivs
in
ds
push
adc
xor
aas
test
inc
loope
lret
xchg
stc
fndisi(8087
ljmp
jae
mov
xor
mov
call
or
inc
stos
add
rcrl
test
in
cmp
popa
mov
sahf
repnz
lret
movb
hlt
scas
aaa
xor
sub
push
out
mov
dec
sbb
ret
mov
dec
sbb
push
dec
leave
fnstenv
in
das
cmpsb
push
jp
jno
pop
xlat
pop
into
rclb
in
mov
sub
test
pop
in
test
add
das
cmp
ret
scas
jo
int3
sarb
push
or
divl
das
inc
adc
movsb
mov
in
arpl
pop
pop
lods
daa
mov
in
xor
jne
mov
and
add
sbb
pop
push
fidivs
lret
les
sbbl
lea
js
xor
rcr
jg
dec
push
adc
push
mulb
adc
pusha
pop
das
adc
jno
mov
xor
insl
pop
mov
bound
or
stc
test
clc
cmc
clc
cmp
shl
cmp
jecxz
test
repnz
test
xlat
push
jo
push
adc
pop
dec
add
rclb
adc
aaa
out
test
std
add
push
in
pop
faddp
rcr
xor
and
cwtl
mov
std
inc
js
ljmp
fstpt
push
adc
int3
aam
in
push
inc
xchg
pop
sbb
out
sahf
mov
jg
mov
outsl
xchg
inc
mov
notb
dec
mov
movsb
jecxz
pop
aas
out
dec
mov
fmuls
outsb
je
test
fildl
cmp
cmpsl
mov
stc
inc
inc
hlt
and
cmpb
aam
mov
adc
mov
adc
cmpsb
cmp
or
xor
sahf
cmp
push
stc
inc
sbb
or
imul
push
test
in
ljmp
xchg
insl
call
subl
xchg
insb
lret
mov
cmpsb
cmp
in
dec
cs
sub
icebp
addr16
stos
inc
xchg
jp
xchg
cltd
test
mov
pushf
mull
fwait
and
sti
std
mov
pop
xor
xlat
loop
add
mov
fnstcw
push
xchg
std
dec
pop
push
test
lcall
nop
ds
dec
fisubrs
stc
pop
mov
xchg
inc
aas
subb
jno
fcmove
mov
fwait
enter
js
fisubrl
mov
or
rcr
inc
mov
fbld
mov
mov
icebp
sarl
push
mov
adc
test
mov
lods
push
pop
xor
push
stc
stos
jb
jecxz
mov
mov
negl
movsb
fnsave
inc
fildll
das
jne
out
lods
call
clc
dec
xor
mov
cmpsl
pop
pop
mov
dec
jb
fnstcw
jmp
mov
inc
jo
and
icebp
test
and
dec
test
je
sbb
or
repz
pop
push
mov
mov
cmp
mov
insb
jle
push
push
rol
xchg
dec
fldt
pop
jne
rol
mulb
xchg
jmp
mov
mov
outsb
inc
sub
push
dec
sbb
dec
xor
flds
adc
xor
into
xor
vmulss
leave
orl
daa
fdivs
jecxz
dec
and
mov
adc
inc
adc
jnp
push
inc
push
jae
cmp
enter
mov
rolb
sub
adc
xchg
mov
jle
add
lock
and
shrl
push
scas
push
popf
mul
push
xor
das
jno
cmpsl
pop
mov
xchg
fs
js
pop
rcrl
movsb
int3
gs
out
dec
es
mov
mov
out
leave
sarl
xchg
mov
pop
push
ret
iret
loop
dec
xchg
lcall
scas
andl
in
mov
lds
lahf
xchg
jmp
add
pop
sub
test
sub
test
jecxz
sbb
add
add
xlat
sti
xchg
mov
dec
xchg
dec
pop
lock
int3
xor
loop
ss
mov
outsl
mov
pop
cltd
shll
rolb
pop
cmp
shr
stc
repnz
and
dec
xlat
xor
cmp
inc
fwait
adc
mov
call
xorl
pmaxub
clc
aas
push
xor
mov
or
mov
add
jp
mov
or
xor
mov
inc
xor
mov
pop
cmpsb
push
sbb
cmp
xchg
sub
sbb
js
cmc
mov
pop
pop
mov
mov
xchg
in
pop
jns
inc
js
and
sbb
sbb
aaa
shr
loopne
push
loop
hlt
push
scas
je
repnz
push
inc
pop
lods
imul
and
cmpsb
inc
stc
adc
fs
lret
and
enter
mov
fcompl
dec
mov
mov
push
insl
push
lret
fbld
xchg
test
fidivrl
cld
daa
insl
sbb
jl
mov
loope
mov
loopne
ss
adc
addr16
mov
xchg
ret
add
ss
jle
push
mov
lea
out
subl
jb
movaps
adc
das
mov
dec
stc
sub
inc
test
in
pop
mov
js
mov
aas
mov
inc
fldcw
or
push
iret
cmpsb
cmp
and
aas
loopne
push
sbb
sub
aam
movsb
sbb
pop
not
loopne
cmp
push
cmp
cmc
inc
cmp
sbb
das
push
and
jnp
mov
pop
aaa
insl
adc
test
push
xchg
and
inc
cmp
fs
dec
push
jo
adc
lret
imul
add
int
lret
fnstcw
and
int3
loop
xchg
mov
xor
jns
out
xchg
or
mov
int3
lahf
sarb
sub
out
imul
dec
stc
es
flds
jnp
hlt
mov
dec
cmp
xor
mov
cmpsb
adc
ljmp
sub
add
pop
and
add
xor
add
aad
cs
cmpsb
fsubs
fcoms
lahf
push
scas
adc
push
sub
testl
push
sbb
mov
dec
das
add
push
pop
mov
jns
cmpsb
enter
dec
lahf
sub
jmp
repz
icebp
imul
push
lea
or
in
xchg
add
dec
clc
add
sub
fsubrs
mov
shl
pop
jg
aas
and
xor
jno
sbb
add
xchg
inc
sbb
test
pop
sub
fadds
scas
out
in
call
ja
rclb
out
lret
push
cmp
cmp
jo
mov
dec
pop
xchg
jmp
push
mov
les
mov
shlb
int
cmp
add
push
adc
jl
mov
pop
cwtl
and
mov
or
or
jo
mov
and
xchg
roll
ljmp
push
repz
out
aas
movsl
pop
or
sbb
mov
cli
pop
das
rcrb
gs
andb
mov
arpl
clc
adc
adc
xchg
xchg
daa
jae
adc
outsl
xor
add
add
adc
lods
cmp
or
fidivs
std
rorb
mov
pop
or
cmpsl
shl
mov
add
ljmp
pop
aad
sarl
add
xchg
aad
inc
subb
add
or
lahf
cmpl
or
dec
xchg
or
in
dec
jno
loopne
mov
orl
adcl
sbb
cmp
jnp
lret
jbe
mov
aad
into
ljmp
sub
lahf
in
push
or
in
jns
mov
and
sahf
push
pop
jb
jnp
jns
sti
xchg
faddl
add
arpl
inc
pop
adc
loope
ds
test
cli
or
xor
mov
inc
movsb
mov
mov
int3
mov
mov
jo
cmp
scas
sub
andb
and
xorl
lret
add
mov
pusha
and
out
push
and
out
cld
lahf
jmp
sub
cwtl
iret
jae
and
mov
lods
xor
jns
ljmp
jo
imul
xchg
dec
xor
lcall
pop
gs
gs
cmp
loope
loop
jecxz
or
icebp
adc
jae
test
adc
movsb
dec
xchg
jne
je
adc
mov
adc
cmpsb
mov
mov
jmp
dec
xor
adc
mov
or
shll
in
mov
sub
andl
inc
lds
jbe
mov
mov
roll
jl
cli
cwtl
and
inc
popa
pop
inc
rorb
cmp
sub
cmp
pusha
mov
lahf
lds
in
cs
repnz
movsl
pushf
sti
lcall
in
in
push
sub
ds
sarb
aaa
push
ss
nop
into
das
jne
daa
pop
aas
cmp
or
lds
lea
arpl
xor
sbb
xor
inc
flds
mov
xchg
rcrl
dec
rcll
push
insb
jl
xor
fs
or
pop
sub
cli
push
pop
cltd
xchg
dec
insl
scas
xor
pop
fs
cmpl
hlt
fsubrl
or
mov
mov
cmpsl
mov
lret
cmp
mov
cmp
ret
and
xchg
xlat
fistpl
test
stc
popf
arpl
pop
jae
adc
jge
push
xchg
cmc
jae
cmpsb
jp
and
cmp
cmp
mov
cmp
fwait
aam
jge
sarl
xchg
push
iret
pop
or
ljmp
pop
mov
hlt
jbe
pop
enter
pop
lret
mov
shll
jne
mov
out
jns
jp
negb
xlat
cmp
loope
jmp
xchg
jecxz
rcrb
fisubrl
mov
push
insl
mov
adc
add
int
ficoml
ficompl
sub
fucomi
adc
and
push
mov
lea
and
dec
rcl
nop
adc
push
sub
jnp
jns
sub
pop
mov
lret
add
ret
inc
push
ficoml
jb
out
fsubs
push
nop
xchg
push
cmpsl
repz
push
inc
rcr
and
sub
and
cmpsl
loop
insl
mov
jle
pop
fnstcw
movsb
add
int3
cmp
sub
mov
mov
clc
sub
xlat
push
xor
popa
cs
lret
adc
dec
push
sub
jbe
aas
sbb
sbb
sub
pop
lods
test
fldlg2
insb
and
jns
mov
xlat
inc
outsb
xchg
rcll
out
je
or
adc
sbb
cmp
scas
bnd
loopne
xor
scas
mov
sbb
mov
and
mov
jns
add
xchg
sahf
sarl
cmp
loopne
mov
mov
mov
jp
lds
testb
out
movsl
cmp
or
jge
arpl
xchg
fimuls
je
push
lods
js
lea
dec
ljmp
dec
testl
andl
call
lock
add
iret
sub
jae
jmp
das
rcr
sub
js
push
sub
or
pop
cmp
gs
inc
or
and
cmp
pop
push
cs
mov
push
sarb
les
out
loop
cmpsb
fdivrl
divl
mov
mov
add
dec
insb
dec
hlt
push
fwait
push
sbb
mov
sbb
xchg
mov
popa
in
push
into
and
inc
scas
movsl
mov
fistpl
mov
loope
mov
mov
movsb
jo
iret
mov
inc
jmp
je
fwait
xchg
xchg
fldl
mov
je
iret
lods
shrl
ja
xor
es
jb
sbbl
xchg
xchg
mov
xorl
jae
xchg
enter
fldl
imulb
xor
nop
cbtw
es
push
lods
sbb
pop
pop
lea
or
cmpsl
scas
xor
insl
or
stc
mov
fmuls
pop
xor
stos
mov
insl
adc
sbb
jmp
in
xchg
cmp
or
xchg
lcall
lret
pop
jnp
pop
lcall
jge
xchg
repz
mov
add
shrb
mov
push
adc
cmp
clc
js
mov
rcl
cmp
cld
pop
jmp
hlt
in
xor
daa
adc
rep
aas
sub
arpl
dec
shlb
mov
test
xchg
push
jmp
push
push
cmp
pop
sub
icebp
addr16
inc
dec
loop
dec
arpl
pop
dec
out
popa
and
fwait
mov
pusha
xchg
insb
nop
dec
mov
lret
mov
inc
jne
stos
pop
mov
cmpsb
cmc
js
adc
cli
imul
cmp
jp
lock
jns
and
adc
mov
leave
dec
xchg
lea
xchg
and
jne
inc
pop
pop
fwait
jge
fidivrl
call
dec
out
cmpsb
add
gs
in
fstl
xchg
xchg
pop
sbb
mov
or
mov
les
sbb
add
cmpsl
xchg
cwtl
or
mov
fstl
jp
pop
push
aam
jge
pop
lock
js
jmp
push
lea
test
xchg
mov
fwait
adc
xchg
mov
cmp
xor
push
push
mov
out
sbb
in
inc
xchg
jge
ret
mov
and
inc
inc
push
sahf
mov
cmp
es
or
fdivrl
bound
ja
mov
mov
js
inc
mov
sbb
lods
mov
mov
imul
cld
repnz
sbb
cmpb
and
in
lcall
arpl
lods
mov
sub
jge
addr16
dec
sub
xchg
sbb
addr16
mov
mov
pop
pop
cmp
push
mov
and
pop
cmpl
lahf
inc
insl
in
mov
inc
cli
fnstcw
mov
pop
out
jne
cmp
mov
cmp
out
sbb
repnz
test
inc
mov
in
cli
mov
cmp
mov
dec
mov
aas
mov
in
mov
push
sub
add
les
jecxz
lcall
cs
xor
xchg
test
adc
loopne,pn
test
iret
xor
jns
arpl
lcall
xor
jnp
jp
jns
mov
ljmp
stos
mov
xchg
or
repnz
scas
pusha
je
xchg
mov
push
pusha
ja
push
fldcw
inc
negl
iret
mov
cltd
cmpsb
adc
gs
mov
pop
mov
cmp
rol
jle
aam
and
xor
jg
std
adc
lcall
or
mov
imul
push
jg
jae
adc
mov
or
movb
pusha
inc
movsl
inc
icebp
xor
mov
leave
fwait
mov
sbb
xor
lret
repz
pop
test
sti
push
ljmp
pusha
adc
nop
rclb
jge
pop
mov
lods
ljmp
out
add
fsubrl
sar
dec
and
mov
out
xorl
inc
mov
aad
daa
in
add
in
cmp
xchg
call
ds
pusha
xor
adc
movsb
jmp
repnz
add
dec
dec
stos
cwtl
mov
scas
and
dec
add
mov
and
adc
das
adc
sbb
repnz
push
fsubrs
loop
and
inc
xor
cmp
push
pop
xchg
cmp
add
mov
mov
ds
sahf
mov
sbb
xor
and
xchg
cmpsb
arpl
call
push
dec
xor
pop
mov
sub
cmp
or
sub
dec
int3
inc
sbb
sti
ljmp
cmp
shrb
mov
fwait
adc
in
xchg
cmp
cmp
push
lods
mov
inc
pushf
fs
lret
xchg
inc
les
sub
add
lcall
pop
mov
or
outsl
scas
shl
sbb
push
lret
es
add
sbb
insb
adc
lea
and
mov
jp
mov
inc
adc
inc
ret
sbbb
fs
fsubrs
xchg
adc
aam
or
fiadds
cmp
inc
jmpw
mov
loop
lods
pop
fisubs
push
scas
xchg
sbbl
fadd
outsb
adc
add
inc
sub
jg
test
pusha
jb
dec
mov
or
fmul
insl
cmp
shrb
wbinvd
fs
sarl
mov
outsb
cltd
xor
xlat
add
inc
call
sar
lret
loop
jge
xlat
or
jo
cmp
push
adcl
fisubrl
xchg
icebp
insb
adc
cmp
cmp
movsl
xchg
fsubs
sub
cmp
into
mov
dec
mov
cmp
pop
or
addl
imull
movsl
pop
and
cmp
fwait
cmp
mov
jp
inc
dec
pushf
or
add
mov
data16
sub
inc
popf
jae
call
scas
jno
loope
jecxz
rolb
rorl
sbb
inc
int3
movsb
sub
hlt
sbbb
scas
mov
lcall
sbb
in
fidivrs
sbb
push
xchg
push
mov
mov
lret
mov
add
lret
test
push
push
inc
and
cmp
and
cmp
pop
bound
add
inc
xchg
test
mov
cmp
lahf
mov
or
pop
test
repz
add
loop
jl
xor
dec
les
sbb
cld
xlat
or
push
insl
adc
mov
dec
mov
lcall
imul
dec
lret
ret
stos
push
int
sbb
xor
mov
dec
movsb
push
repz
sbb
rcr
jno
push
xchg
mov
sbb
xor
and
call
pop
jo
lret
xchg
loop
add
daa
in
popf
jl
shlb
lods
or
jle
mov
jbe
mov
fisttpl
test
sti
add
cmc
xlat
cli
xchg
gs
enter
dec
shrl
sbb
mov
push
cld
push
sbb
jecxz
jnp
das
cmpsl
lret
cld
jmp
out
aas
inc
adc
sbb
clc
xor
pushl
out
cmp
sbb
shl
push
shll
shrb
outsb
jb
bnd
mov
fs
jne
add
mov
mov
jne
mov
mov
pushf
in
and
mov
ret
or
data16
inc
dec
bound
pop
jo
pop
in
test
mov
mov
scas
ror
rcll
fdivrs
insl
adc
sahf
mov
imul
add
jbe
in
jl
xchg
popf
iret
pop
xchg
dec
test
push
call
push
push
jo,pn
mov
call
sub
lcall
lret
or
jbe
sbb
loopne
scas
xchg
hlt
lods
pop
push
jb
cmpsl
adc
cmp
add
lea
pop
sbb
mov
lock
xor
jno
ds
lret
push
cmpsb
jl
mov
push
nopl
in
or
adc
mov
pusha
and
cmp
inc
mov
je
in
xchg
and
cmp
add
pop
or
fnstsw
popf
push
push
sbb
mov
adc
sub
lcall
mov
xor
xchg
bound
pop
repnz
jb
xchg
dec
push
inc
xlat
jge
inc
pop
xor
xchg
xlat
sub
fldenv
sar
push
hlt
outsl
adc
xlat
add
xchg
cs
inc
clc
addr16
pop
mov
mov
sub
cmp
mov
lahf
pop
mov
jnp
pusha
push
jnp
pop
xchg
movsl
mov
addr16
pop
cmpsb
xchg
imul
imul
mov
fistpll
inc
jnp
push
fimull
mov
mov
mov
pusha
sbb
adc
jbe
popf
loopne
test
out
icebp
jle
sub
dec
jle
adc
lret
sub
lds
adc
sbb
popf
mov
mov
cmp
pop
add
filds
cmp
scas
xor
mov
fs
pushf
push
cmc
aas
fcomps
mov
daa
stos
test
ljmp
adc
sub
iret
test
jbe
stos
cld
inc
add
ja
repz
fbstp
inc
cmp
in
sub
fs
call
in
aas
inc
orb
fstpl
mov
cmp
xor
xchg
push
pusha
sub
cmp
mov
and
cmp
push
pop
xor
mov
notl
repnz
bound
cmp
sub
rorb
xchg
push
adc
ficoml
mov
adc
aas
fildll
inc
xor
loope
out
rol
stc
adc
sbb
mov
mov
inc
mov
in
fnsave
pusha
or
lahf
fadds
dec
pusha
xlat
mov
fistl
and
cltd
mov
lds
xchg
sbb
cmp
sub
add
inc
movsb
arpl
mov
mov
dec
mov
jg
scas
scas
and
fmul
dec
fiaddl
hlt
dec
adc
sub
cmpl
rorb
cwtl
movsb
int3
xchg
xorl
imul
jno
std
inc
push
pop
xchg
cmp
cs
xor
pop
inc
or
roll
sub
call
clc
popa
jnp
insb
jne
sub
imul
cmc
cmp
rol
cmp
pusha
ss
adc
iret
into
push
mov
xchg
jno
fwait
xor
push
stos
rol
inc
movsl
jg
ja
stos
or
sbb
mov
mov
lds
mov
sbb
int3
cs
insb
lods
rorl
xchg
pop
jae
mov
adc
and
fsubrs
outsl
jo
cli
jbe
leave
xor
add
or
ret
cwtl
addr16
xchg
scas
addl
popf
popf
in
mov
jle
mov
out
cmp
jnp
sbb
xchg
pusha
adc
xchg
sub
or
dec
and
pop
fistl
adc
cmp
push
cmpsb
aas
inc
repnz
mov
pop
adc
aas
std
jns
push
int
cwtl
aas
ljmp
into
je
adc
xorb
xchg
sbb
inc
xor
fisubrl
jle
rcrb
stos
sbb
jae
insb
arpl
push
jnp
or
and
sti
and
and
sahf
sbb
ret
add
jl
or
lds
push
mov
adc
pop
add
add
lods
stos
push
arpl
or
push
xchg
test
bnd
inc
sbb
xchg
loopne
sahf
fildll
test
pop
sbb
push
into
arpl
lods
mov
or
xchg
mov
daa
test
test
clc
mov
push
aam
int3
gs
bound
scas
jno
add
jb
push
xchg
incb
xlat
xor
aaa
push
fstps
or
mov
jns
jecxz
ret
addr16
stos
mov
add
mov
insb
pop
pop
addb
xchg
push
arpl
lods
mov
jmp
imul
and
out
mov
cmpsb
aad
pop
dec
loopne
push
cmpsb
fs
sbb
mov
jp
nop
mov
in
testb
arpl
inc
mov
xchg
add
pop
aas
fdivrl
subl
jnp
adc
popf
inc
pop
test
in
cli
fmul
xchg
lds
pop
aas
and
mov
xchg
push
jecxz
int
jmp
cmp
xchg
and
and
aas
nop
insb
fiadds
jmp
loopne
shll
mov
test
scas
cmpsb
gs
icebp
jnp
pop
mov
stos
in
imul
repnz
sti
push
cld
dec
dec
xchg
pop
outsl
push
or
pop
movsb
in
cmp
fiadds
push
gs
jbe
dec
and
jecxz
dec
cmp
cmpsb
pushf
inc
mov
out
imul
scas
jnp
lret
mov
xchg
adc
fcmovnu
or
cmpl
ficomps
xchg
and
jbe
iret
out
and
mov
cmp
mov
aaa
pushf
into
fwait
jg
sbb
std
mov
inc
daa
dec
xchg
popa
dec
mov
adc
push
and
lcall
and
add
adc
pop
div
inc
push
in
sti
and
mov
add
cld
out
imul
inc
movsb
nop
lahf
sub
repnz
movsb
mov
imull
xor
lret
cmp
push
mov
arpl
add
push
lods
popa
inc
jl
test
ja
push
cmpsl
test
xchg
shrb
test
shll
fldenv
and
shrb
in
dec
out
outsb
mov
adc
adc
outsl
add
cmp
pop
sbb
mov
scas
jmp
mov
sub
lds
jge
push
mov
jl
ficompl
loop
xor
iret
inc
mov
out
push
cmc
lahf
pop
jo
sub
imul
mov
mov
inc
js
movsb
push
iret
inc
idivl
cmp
lea
sbb
ss
pop
mov
stos
stc
inc
cltd
dec
adc
out
test
adc
sub
mov
scas
lds
scas
sbb
int3
sti
jp
int3
sbb
push
lret
sbb
test
sbbb
push
cltd
cs
shrl
pop
push
cld
out
jo
in
dec
or
lea
pop
je
pop
inc
outsb
jmp
loop
in
stos
js
inc
push
jae
cs
or
mov
jb
into
idivb
mov
inc
add
cmp
push
lds
push
cmpsb
iret
cld
cs
popa
hlt
xchg
andl
jo
cmc
pop
dec
andl
push
mov
xor
fmuls
cli
xor
dec
sub
mov
movsl
xchg
push
adc
cmp
lock
adc
sub
cmc
iret
sbb
mov
xor
xchg
mov
add
and
xchg
push
adc
sub
in
loop
insb
or
cmp
es
mov
nop
mov
lods
xor
sahf
hlt
roll
daa
xlat
loop
test
sub
pop
sbb
lahf
imul
cld
inc
lea
add
and
scas
sbb
lahf
push
pushf
xchg
shrl
jns
mov
lods
jle
and
xor
adc
out
je
sbb
out
mov
fs
jge
outsl
fistpll
mov
inc
nop
mov
xchg
icebp
imul
addr16
push
sbb
pop
dec
ret
repz
in
adc
leave
mov
out
std
addr16
lahf
fcom
out
cli
dec
js
rorb
dec
clc
imul
dec
inc
shll
xchg
dec
xlat
mov
jbe
dec
push
divl
lods
xchg
lods
in
stc
pop
dec
xchg
mov
jns
movsl
adc
loop
js
mov
xor
mov
xor
add
lods
mov
fmul
pop
arpl
cmp
pop
lods
cltd
clc
movsl
ja
shl
pusha
pop
jns
rcl
adc
cmovne
shlb
incb
pushf
out
inc
adc
test
lds
push
cmp
jp
mov
and
das
ffreep
mov
cmp
repz
ljmp
mov
insb
aas
aas
ljmp
hlt
scas
ret
or
lcall
popf
dec
inc
mov
jmp
cmp
pusha
add
lcall
nop
cmp
repz
aad
pop
rcrb
sub
into
daa
out
pop
cmc
mov
push
ljmp
sub
jmp
imull
pop
shlb
notl
sahf
icebp
out
mov
rolb
sbb
cmp
aas
ljmp
sbb
and
jl
aaa
sbb
add
cmp
test
inc
fisttps
dec
pop
mov
data16
pop
lock
test
cwtl
dec
mov
mov
jb
out
jae
aam
push
jecxz
in
cmp
and
adc
add
icebp
sub
jl
test
add
cmp
rcll
hlt
arpl
cmp
movsl
repnz
xchg
notb
mov
nop
rorb
sbb
outsb
mov
add
dec
push
mov
pop
xor
movl
xchg
or
popf
cmp
ljmp
fcmovu
pop
cmp
mov
jecxz
and
rclb
aam
addr16
and
and
mov
sub
movsb
in
fwait
sbb
sarl
push
movsb
repnz
jno
psrlq
rcrl
inc
cmp
cwtl
aam
test
sub
out
and
xchg
cld
cmp
mov
hlt
xor
imul
cmp
popf
xchg
pop
sti
jbe
xchg
shll
pop
nop
mov
push
idivb
xor
hlt
shr
filds
or
sti
cmp
sub
cmp
ror
jno
xchg
arpl
dec
xlat
mov
push
js
in
ret
aaa
data16
or
jg
fistl
shll
fucomip
out
cmp
xchg
fldt
inc
push
or
inc
pop
imul
adc
cwtl
dec
shlb
fdiv
sti
dec
popa
push
dec
lea
jmp
jo
mov
add
add
push
leave
into
pop
jb
das
add
out
scas
bound
mov
and
mov
dec
mov
xchg
nop
shrb
shlb
xor
xchg
dec
rolb
imul
lock
sbb
sub
xchg
dec
scas
stc
mov
insb
loopne
mov
xchg
and
pop
push
cltd
out
enter
mov
pop
pushf
je
mov
das
loopne
shll
in
scas
mov
outsb
int3
jle
lods
in
push
sub
jne
outsb
push
loop
sub
mov
xchg
dec
xor
repnz
adc
lret
popa
and
jae
jb
cld
adc
sar
insb
imul
aad
fcomip
lock
lret
out
mov
and
xchg
clc
js
repnz
das
fadd
cmpsb
or
pop
and
mov
lea
fwait
hlt
jo
addb
jecxz
pop
add
push
daa
xchg
or
mov
mov
js
icebp
out
pop
iret
ds
nop
testl
fists
rclb
add
clc
fimuls
jecxz
xchg
sbb
ret
sub
ja
scas
movsl
or
cli
push
lea
stc
outsb
mov
push
dec
lock
imul
or
std
inc
imul
mov
xor
sti
loop
mov
jb
cli
add
xchg
hlt
mov
mov
pop
pop
shrl
loopne
dec
aad
xchg
stos
sub
lds
in
cmp
sub
iret
cmc
jl
add
aad
xchg
pop
mov
push
out
outsb
outsl
or
sbb
fstps
xchg
cmp
dec
ret
imul
sbb
dec
rorl
sbbl
sti
cmp
inc
push
sahf
push
or
addr16
push
push
push
adc
push
das
icebp
lcall
popf
adcb
sub
in
inc
dec
inc
clc
inc
fistl
jns
aas
and
sub
push
sar
divl
xchg
out
add
or
jnp
inc
sbb
inc
mov
adc
cmp
or
xchg
out
aad
inc
sti
fdiv
dec
lahf
stc
jns
push
inc
and
js
push
jge
sub
add
out
fidivl
and
pop
addb
mov
lock
sub
inc
fbstp
push
inc
fistpll
xor
inc
fwait
or
adc
pop
fsubp
and
mov
mov
in
icebp
mov
jb
xor
movsl
or
lahf
cs
test
push
jmp
movsb
cs
stos
sub
int
mov
imul
lods
pop
adc
shrl
mov
sbb
popf
dec
out
xchg
dec
xchg
mov
push
or
sub
mov
jo
pop
testl
fmul
fcoml
sbb
mov
into
out
shlb
push
int
cli
js
mov
arpl
adc
jno
cmc
ds
in
and
xchg
je
or
jp
repz
dec
cmpsb
fildll
or
or
loopne
xor
add
pusha
out
pusha
lahf
add
cmp
out
outsb
outsl
pop
out
into
rolb
dec
insb
aam
jle
and
rcrb
add
insl
fisubl
xchg
call
add
clc
aam
add
and
xchg
pop
push
sub
dec
fistl
dec
mov
or
fsubrs
mov
push
lahf
pop
pop
push
jnp
scas
mov
sbb
adc
mov
mull
sbb
xor
idivl
mov
aaa
sbb
sahf
mov
std
ret
sbb
mov
in
pop
das
dec
repz
lahf
sbb
mov
movsb
push
push
mov
sbb
sbb
mov
sbb
daa
in
pop
enter
ljmp
sub
xchg
testl
mov
jo
lods
push
add
fisttpll
pushf
jo
arpl
lret
fists
jae
adc
es
das
inc
iret
imul
mov
insl
inc
push
je
sbb
arpl
jbe
call
mov
mov
enter
and
es
sbb
test
imul
mov
mov
pop
rolb
stos
add
or
add
lret
enter
or
and
aas
fcoms
sbb
and
out
idivb
jo
cmp
add
cmc
out
in
mov
addr16
pushf
cltd
pop
ds
sub
cltd
inc
lods
mov
out
adc
pop
loopne
mov
adcb
in
and
xchg
les
jp
stc
lret
aad
or
xchg
inc
inc
mov
inc
adc
and
fs
repnz
pop
mov
imul
jl
shll
jnp
into
xlat
xor
outsl
and
push
xchg
ljmp
popa
push
fldenv
test
hlt
mov
xlat
popf
rclb
inc
sbb
jbe
aaa
inc
or
sti
cs
mov
fdivr
cltd
frstor
pusha
insl
dec
mov
dec
es
xchg
xor
pop
jl
fcomi
lea
xor
push
je
out
jecxz
mov
lea
add
stos
imul
pop
fsts
cmpsb
lods
jae
jecxz
mov
loop
fsubrl
jl
pusha
jp
pusha
pusha
add
sub
sbb
dec
iret
movsl
pop
jb
into
adc
scas
jmp
adc
dec
fsubrl
dec
test
mov
outsl
addb
decl
out
pop
lock
xor
push
rorl
popa
cmpsb
pop
dec
jg
xor
push
add
mov
sbb
or
stc
stos
xchg
dec
xor
add
and
xor
int3
fcoml
loopne
sub
inc
pop
dec
jbe
add
stos
push
and
loopne
scas
orl
and
cmp
inc
mov
fwait
cmpsb
xchg
xchg
lea
loop
sub
mov
push
adc
jnp
bound
lods
hlt
inc
sti
mov
outsl
in
jge
ss
std
aas
in
mov
jae
inc
push
lahf
mov
gs
xlat
push
lods
pushf
or
cltd
outsl
xchg
ret
gs
lahf
sar
cmp
lock
in
or
ljmp
adc
pop
clc
loope
and
and
mov
pop
jo
out
dec
pop
cmpsl
stos
mov
cmc
push
cltd
dec
inc
in
cmp
push
pop
lea
jl
jns
cmp
pop
push
inc
jg
aad
or
cmp
sbb
lds
mov
mov
mov
xor
repnz
aam
ret
pop
mov
add
rorb
dec
push
mov
in
push
testb
fidivs
jl
push
addr16
in
cmp
add
mov
in
push
stos
sbb
es
daa
mov
xor
xchg
push
xchg
inc
adc
adc
cld
mov
push
scas
pop
inc
cmp
xchg
mov
aaa
lock
out
cmove
xchg
cmp
and
rolb
jle
cmpsb
stc
mov
sbb
mov
ja
int
mov
sub
rorb
std
push
dec
push
fdivp
add
add
push
pop
insb
into
push
int3
mov
dec
lret
cmpsb
dec
out
or
adc
rcrl
jno
push
push
sarl
mov
imulb
inc
pop
decl
cmpsl
sbb
je
jno
mov
xor
lret
aaa
fldt
mov
lods
mov
push
rcll
add
ret
xchg
mov
testb
fmuls
xor
stos
push
push
inc
push
cmp
pop
push
inc
cmc
add
notb
xor
jnp
rorb
ss
decl
cwtl
sti
or
push
pop
stos
mov
hlt
pop
dec
js
les
lcall
cmp
in
xor
cltd
dec
hlt
jecxz
hlt
lds
add
push
sub
mov
cmp
inc
sbb
mov
xchg
stos
pop
jne
sub
mov
lcall
mov
loop
pop
mov
lods
pop
scas
outsb
sbb
stos
dec
ljmp
mov
retw
in
fs
dec
dec
push
cmova
pushf
shll
sbbl
pop
std
idivl
sbb
cld
sub
xor
push
repz
push
clc
call
xchg
pcmpeqb
adc
pop
daa
pop
out
lcall
push
enter
and
hlt
je
sbb
inc
dec
pusha
push
dec
push
stos
es
push
sahf
fisttpl
loope
mov
stc
dec
pop
dec
xor
stos
mov
iret
rclb
cmpsb
repz
data16
int
cmp
adcb
xor
jle
cltd
adc
aas
fildll
fnstsw
jno
mov
lods
mov
adc
cmp
inc
sbb
mov
cmc
mov
adc
sahf
mov
std
repz
iret
loopne
lods
push
jp
add
add
and
inc
bound
pop
xor
fldl
jge
mov
adc
and
mov
dec
std
pop
cmp
adc
notl
sar
mov
int
inc
shl
xor
idivb
inc
dec
sub
lock
mov
fstl
mov
push
sbb
fnsave
pop
aaa
dec
fldcw
cli
push
mov
add
dec
fs
xor
jns
push
mov
and
rcl
xor
paddsb
clc
cmp
test
adc
add
ss
scas
in
fildl
das
pop
jl
mov
bswap
sbb
movsb
cld
lcall
dec
jb
int3
inc
arpl
test
repz
adc
xor
frstor
mov
shl
mov
repnz
sti
add
lea
sbb
mov
js
leave
and
mov
lea
insl
fwait
test
xchg
loope
mov
jl
sub
mov
in
or
pop
inc
stc
loope
stos
shll
popf
cmpsb
cmp
xchg
xor
inc
addb
jge
and
daa
add
out
add
andb
dec
sbb
in
adc
ret
pop
je
mov
mov
push
testl
aam
mov
mov
xchg
daa
repz
scas
inc
mov
insb
sti
mov
push
outsl
in
vmulsd
lods
std
cltd
lds
push
and
xor
out
inc
cmpsl
test
fld
stos
pop
inc
movb
pop
dec
fucompp
jg
push
outsl
jmp
lea
add
mov
push
cmpb
fs
addb
test
pushf
inc
divl
lcall
movsl
mov
ret
fdivrs
cmp
scas
pusha
mov
pop
jae
add
rcrb
call
stos
pop
and
mov
adc
loop
push
popa
pop
cmp
xchg
mov
fwait
nop
cmp
stc
dec
or
insb
xchg
popaw
int3
outsl
xchg
lea
mov
cmp
in
jo
stc
inc
data16
popa
nop
sub
movsb
mov
add
pushf
push
mov
or
pop
out
rcr
loop
les
pusha
and
xchg
pop
jg
cmpsb
repz
iret
jle
fadds
jg
clc
gs
push
hlt
not
cmp
adc
add
mov
push
add
jno
mov
and
jl
das
pop
sbb
jg
insb
cmp
mov
daa
dec
and
sbb
cmpsb
out
outsb
ret
das
sahf
xor
outsl
cltd
pop
aad
loop
inc
imul
or
ljmp
lea
stc
jno
in
je
cmp
out
pop
cmp
outsb
fisubs
cmp
or
rclb
out
mov
lcall
push
js
repnz
ds
fists
bound
imul
call
xchg
fistl
or
pop
push
dec
adc
mov
jbe
lds
les
adc
dec
sbb
mov
push
addb
in
mov
mov
scas
fstpt
insb
jle
aad
lahf
outsb
test
ss
jae
cmp
or
cmp
jne
outsb
insb
cmp
adc
push
popf
xchg
insl
cmp
xor
or
xor
rol
rol
insl
cmp
xor
and
jns
dec
dec
in
jl
daa
test
inc
and
sti
adc
aas
pop
fistpl
push
jae
cmp
jp
sbb
sti
lret
aas
pop
cmp
je
into
mov
cmp
or
mov
and
mov
jnp
in
scas
je
jecxz
leave
shlb
add
sub
jmp
outsb
adc
inc
test
push
cmp
mov
xor
adc
mov
enter
xchg
int3
int
or
mov
mov
pop
and
sub
sahf
mov
xor
aam
je
mov
cmp
les
dec
iret
fcomps
cmp
ror
push
fidivs
push
imul
jp
mov
inc
jmp
and
daa
clc
in
leave
lcall
dec
or
std
xchg
xchg
std
sbb
xor
or
or
cmc
jecxz
pop
ja
mov
jnp
push
fsts
xor
or
add
sub
rorl
or
test
popf
push
and
push
icebp
mov
mov
cmp
push
mov
mov
inc
pop
add
sub
stos
cmp
dec
mov
lods
lret
sbb
jmp
decl
mov
aam
pop
loope
push
sbb
clc
clc
xlat
and
leave
jge
aam
call
pop
cs
jl
dec
jge
scas
cmpsl
notb
pop
jp
das
pop
xsha256
cmpsb
adc
aas
mov
pop
mov
movsl
stc
shlb
pop
push
insl
pop
xchg
mov
mov
mov
lcall
inc
lret
cmpsb
push
mov
adc
inc
pop
xor
xchg
dec
jecxz
jns
add
dec
jecxz
push
or
mov
aam
nop
leave
repz
outsb
aad
adc
movb
push
scas
sbbl
adc
push
mov
das
es
div
or
enter
lea
clc
mov
movl
pop
xor
pop
insb
pop
icebp
dec
ja
cmp
mov
sub
insb
into
pop
pop
xchg
xor
mov
mov
cmp
xchg
xorl
iret
movl
jg
inc
mov
xchg
dec
xchg
js
in
in
iret
mov
adc
adc
mov
add
push
out
push
leave
ljmp
cs
fcmovbe
test
push
cltd
int3
pushf
aas
icebp
sub
jns
dec
push
or
xchg
sub
mov
add
or
xlat
add
repnz
xor
push
outsb
insb
or
sbb
inc
and
fstpl
or
jns
jge
lcall
push
jne
mov
hlt
addr16
add
mov
out
push
push
icebp
dec
xchg
ror
cmpl
or
mov
jge
cs
mov
addb
push
adc
mov
sbb
and
push
fsubl
xor
adc
push
lea
sub
mov
dec
pop
adc
jge
mov
push
nop
daa
pop
cmpb
mov
sbb
cs
cmp
shlb
xor
dec
inc
pusha
xchg
inc
sbb
jp
push
cld
pusha
popf
outsb
loop
daa
in
lock
xchg
mov
mov
cmp
subb
mov
add
pop
add
movsl
mov
sti
cmp
and
movsb
jl
jl
popa
mov
adc
ljmp
loopne
imul
pop
ret
pop
mov
cmp
inc
fwait
or
jae
adcl
loopne
cmp
test
loopne
pop
push
test
mov
xchg
shll
dec
mov
stos
ret
xor
mov
ja
xlat
int3
push
xchg
clc
xor
es
pop
orb
jle
mov
jne
dec
inc
ret
popa
adc
cmp
push
mov
mov
dec
jbe
adc
mov
bound
notb
lods
jg
fnstsw
inc
ss
fstpl
mov
inc
lret
pop
push
mov
outsb
mov
dec
in
in
adc
and
xor
in
sub
pop
enter
cs
xchg
xchg
inc
subb
adc
cmp
pop
aas
mov
int3
daa
addr16
or
cwtl
nop
neg
stos
sbb
xchg
or
jb
cmp
mov
add
pop
dec
outsb
in
pop
mov
lahf
bound
push
or
mov
mov
and
pusha
cli
push
push
loope
movsl
in
and
aas
popa
push
pop
lea
xchg
ja
daa
js
dec
les
mov
iret
in
inc
pop
pop
sbb
mov
pushf
xchg
and
fsubl
sarl
pushl
and
aas
cmp
xchg
or
test
dec
loopne
jp
mov
push
jne
adc
imul
jbe
data16
or
push
sbb
testl
xor
paddusb
cmpsb
mov
cmp
pusha
out
adc
xchg
push
jp
cltd
mov
sbb
jge
cmc
mov
stos
into
inc
insb
adc
and
inc
hlt
cld
int
clc
ret
sub
xor
or
or
cmpsl
fwait
pusha
adc
dec
lcall
les
jno
dec
xchg
mov
lret
pop
mov
addr16
jb
hlt
xchg
mov
arpl
ds
jae
adcb
shl
fistps
pop
testl
mov
dec
push
mov
ret
mov
mov
cmp
andb
adc
ds
addr16
aad
dec
push
mov
pop
fbld
lods
sub
rcrb
push
inc
cmc
jb
lcall
lahf
ljmp
xchg
pop
or
test
emms
fwait
enter
shr
stos
stc
push
cs
and
dec
push
sti
adc
or
aam
sub
cmc
nop
inc
dec
mov
out
insb
rcl
cmpsl
xchg
mov
add
aaa
call
sub
arpl
cs
pop
mov
scas
add
cmc
adc
fbstp
jmp
adc
lahf
xchg
inc
ss
clc
out
mov
stos
cs
cld
fs
mov
push
nop
and
or
call
ss
outsl
xchg
push
sbb
rorb
aad
xchg
fcompl
scas
pusha
sbbl
loope
rorb
mov
arpl
rcr
rcr
and
mov
icebp
and
test
push
sub
imul
in
push
inc
int
push
out
je
inc
pop
clc
adc
mov
mov
mov
and
mov
mov
jne
add
aas
in
int
out
adc
mov
subb
insb
pop
pusha
insb
adc
int
xor
xchg
mov
xor
xchg
repz
xor
clc
inc
sbb
out
scas
cmp
cmp
push
mov
xor
xor
and
in
push
mov
movsl
xchg
cli
or
jno
fildl
mov
xchg
pop
mov
pop
andb
push
cmp
pop
or
pusha
lods
mov
loope
daa
mov
push
jno
or
or
insl
jecxz
ret
add
or
inc
sar
lock
mov
cmp
fldenv
and
mov
rorl
push
cmp
mov
aaa
int3
jne
pop
scas
lret
inc
sub
loope
out
fiadds
aas
in
das
xorl
xor
cmp
xor
mov
sub
jge
dec
sahf
or
jl
addb
or
fcomps
imul
mov
jo
lock
pop
push
mov
inc
mov
sbb
in
movd
adc
dec
scas
sarl
stos
leave
adc
popf
loope
stos
adcb
cld
pop
clc
pop
or
iret
jp
mov
divb
cmp
scas
insb
push
xor
sarb
adc
mov
int3
clc
insl
push
push
jge
dec
les
pop
mov
jle
jmp
and
xchg
xor
andl
cli
add
in
stc
sub
push
das
adc
shlb
lds
sub
mov
adc
push
adc
mov
and
repz
loop
mov
adc
mov
mov
mov
jae
int
imul
push
mov
sbb
test
call
sub
mov
mov
mov
and
push
rcr
sbb
push
std
push
ja
pop
push
dec
popf
psubw
test
scas
in
pop
push
clc
jle
std
testb
clc
jmp
mov
lods
ret
pop
xor
sbb
fisubrs
aas
sub
sub
pop
cmpsl
and
lea
sbb
outsl
cwtl
andl
cld
aas
add
je
pop
sub
xor
xchg
push
inc
mov
cmpb
clc
xchg
les
push
jae
imul
mov
mov
repnz
js
cmp
insb
push
icebp
icebp
pop
jge
xorb
mov
std
adc
cmp
and
fldlg2
clc
imul
ds
push
push
xor
mov
cmpl
bnd
pop
sub
iret
cmp
pop
std
movsl
adc
inc
adc
in
outsl
hlt
sub
sub
enter
adc
cmp
test
hlt
pushl
and
cwtl
jle
imul
ss
inc
sbb
jns
lds
mov
dec
pusha
add
add
neg
xchg
nop
mov
push
push
decb
mov
ljmp
mov
daa
aad
lods
jp
and
mov
pop
add
add
popf
jg
push
push
inc
inc
fldt
fidivrs
jb
inc
sti
mov
push
ds
loope
cmpsb
test
lret
push
cwtl
test
add
scas
inc
mov
sub
test
push
lock
stos
mull
js
and
pushf
and
repz
orl
movsb
adc
dec
out
popa
orb
loope
testb
xor
jb
dec
clc
jbe
mov
pop
jno
inc
lret
and
aaa
ss
test
add
xchg
daa
sarl
clc
cmp
inc
jmp
xor
lahf
inc
cltd
inc
movsl
lods
mov
jo
js
dec
in
fsubrs
inc
lahf
mov
mov
rcr
ret
test
mov
pushf
fucomp
sbb
mov
sbb
sbb
fs
sbb
sbb
in
js
loope
dec
sbb
pusha
push
test
arpl
mov
inc
mov
mov
and
sub
gs
jnp
insl
mov
mov
sbb
sub
mov
inc
xor
lahf
add
mov
mov
xlat
ja
cmovae
cmp
dec
xlat
stc
jo
xlat
popw
icebp
dec
es
fildll
cmpsb
jno
movsb
mov
rorl
rol
xchg
inc
cmp
and
inc
out
stc
fsubrl
aaa
add
add
adc
fcmovnb
mov
xchg
mov
xchg
jno
pop
xchg
pop
pop
cmp
lret
xchg
addr16
cmp
add
xor
xchg
fs
pop
mov
stos
das
cld
xor
mov
pop
sub
js
or
decb
xchg
jnp
sbb
popf
inc
pop
adcl
inc
jecxz
push
mov
push
xchg
daa
xor
adc
xor
mov
out
sub
sbbb
sub
dec
xor
sarb
into
push
aam
jne
dec
in
sbb
xchg
mov
sub
rcrb
mov
add
sub
pop
pop
fbstp
out
xchg
and
jbe
sbb
cmp
xchg
sti
lea
popf
mov
xchg
jmp
push
dec
jg
jno
int3
pop
lar
cmpsb
inc
fsts
inc
add
ffreep
outsl
push
enter
in
cli
pop
out
in
in
shl
cmp
scas
jo
cmpsb
leave
push
popa
loopne
mov
aam
mov
call
sub
sub
and
mov
xor
or
jecxz
shll
test
cmc
rcll
jp
lock
xchg
pop
and
adc
push
ja
inc
mov
sbb
jo
and
sub
jle
aad
loop
add
fidivs
divb
repnz
in
hlt
std
cmp
stos
sbb
mov
js
mov
repnz
cmp
sub
mov
aaa
loopne
xor
stos
lahf
clc
mov
lret
inc
outsb
lods
xlat
aas
pop
rcr
jb
xor
or
iret
sub
aas
and
pop
rorb
pop
arpl
sbb
add
pop
aam
cmp
mov
js,pn
icebp
jbe
sbb
push
pop
mov
lock
mov
xchg
scas
jmp
inc
xor
or
xchg
cli
jbe
popa
call
fwait
cwtl
std
cmp
xchg
ljmp
fcmovbe
push
shlb
sbb
mov
push
sbb
icebp
lahf
mov
lds
je
leave
stc
cmp
fidivl
xor
push
out
xchg
adc
adc
leave
fdivrp
into
pusha
leave
mov
mov
add
inc
and
in
inc
pop
xchg
dec
jecxz
fcomip
fbstp
mov
push
xchg
loope
stc
js
bound
inc
sahf
lea
and
push
mov
roll
jb
jmp
lahf
xchg
or
or
add
divl
adc
fsubp
sub
push
sbb
fdiv
mov
mov
int
mov
add
push
pop
and
in
ss
dec
fldl
shrl
aas
sub
idivb
cmp
xchg
hlt
and
push
sbb
mov
mov
cmpsb
mov
xor
xchg
lret
mov
add
insb
jnp
adc
or
mov
xor
push
insl
andl
clc
sub
dec
nop
ret
mov
sahf
shll
mov
xor
lods
and
pop
pop
and
andl
pop
rclb
pop
test
xchg
sub
aaa
jecxz
mov
mov
mov
dec
mov
outsb
mov
jno
xor
and
jno
repz
add
rcrl
nop
test
xorl
mov
xchg
movsb
xor
clc
pop
mov
and
mov
xor
in
mov
lret
xor
dec
cmp
mov
loope
stos
jmp
loop
mov
cld
and
xor
icebp
jno
fcom
pop
xchg
mov
les
out
mov
dec
or
xlat
mov
inc
lock
out
insb
lea
rcrb
pop
sahf
push
movsl
sbb
pop
mov
mov
cli
mov
cmp
add
outsl
push
orl
and
loop
stos
mov
fs
loop
and
add
cmp
jo
xor
mov
or
testl
mov
xor
and
inc
out
xchg
lret
clc
movsb
rclb
testb
ja
js
js
mov
and
sbb
xchg
inc
jge
test
jns
pop
dec
fs
sub
add
inc
sbb
outsl
daa
dec
inc
iret
das
add
or
pop
mov
enter
cmp
sbb
xchg
xchg
mov
or
xor
dec
or
inc
adc
fiaddl
cmp
dec
bound
mov
mov
out
in
aas
mov
or
cmp
xchg
fldcw
stos
jnp
in
std
popf
pop
xor
or
push
pop
sub
inc
cmp
add
pop
andb
push
xor
xor
aas
adc
sub
cmpl
xor
xchg
out
or
add
push
jecxz
pop
mov
add
in
ret
push
jge
push
sub
mov
jge
mov
lea
in
lods
popf
pop
incb
cli
mov
pushf
xor
inc
mov
sbb
dec
aas
adc
aad
sub
push
sbb
dec
add
pop
pop
imul
int3
jb
adc
iret
mov
popa
push
mov
mov
mov
ret
mov
out
and
pop
scas
pop
pop
jl
jle
aad
fimuls
roll
sbb
sbb
ud2
sti
pusha
push
xor
cmp
bound
xchg
cmp
les
xor
mov
stos
cmpsb
adc
add
mov
inc
inc
rcrb
mov
scas
push
bswap
sbb
jl
jl
pop
into
ret
lock
das
imul
ret
repz
enter
jns
xor
pushf
mov
mov
jp
xlat
xor
int3
addr16
test
call
iret
lahf
shll
les
xor
ud2
sub
test
out
imul
aaa
or
add
push
mov
sub
orps
adc
push
out
xchg
push
jge
insl
mov
jnp
repz
cmp
les
outsb
sub
xlat
sbb
outsb
jl
cmp
push
mov
sbb
loope
stos
sti
sub
mov
mov
daa
pushf
jae
jne
test
fistps
xchg
sub
imull
js
mov
pop
mov
jo
and
add
mov
adc
and
cmpsb
cmp
movsl
xor
in
jmp
stos
pop
push
mov
mov
mov
mov
adc
ljmp
sbb
sub
xor
xor
lds
into
or
in
xor
and
mov
insb
mov
mov
sti
aaa
mov
mov
mov
fwait
movsb
andl
shll
mov
inc
jp
mov
scas
push
push
notl
scas
mov
add
aas
push
aaa
push
scas
mov
cmpsl
outsl
mov
cltd
inc
ja
cs
mov
outsl
mov
scas
in
inc
cltd
sbb
dec
push
inc
push
mov
cmpsl
sub
dec
daa
dec
cmp
andb
mov
cmpsl
lock
aad
mov
mov
pop
rcll
lds
pop
fisubrl
ret
sub
lahf
xchg
out
pop
loope
cmp
xchg
xor
and
scas
jnp
mov
into
arpl
fmull
scas
fbld
fisttps
xchg
sub
call
sbb
testl
out
verw
cmc
pop
adc
mov
mov
pop
dec
pop
push
out
jmp
cmp
test
lret
sub
fcom
and
imul
bound
mov
xchg
js
inc
mov
push
aaa
les
xchg
scas
add
hlt
sahf
xchg
movsb
jl
nop
mov
rol
adc
lods
xchg
ja
fdivrs
lcall
arpl
lret
inc
cmpsb
xchg
rcl
sbb
test
test
leave
push
rcl
leave
mov
pop
mov
mov
ss
out
mov
mov
mov
inc
jne
into
fiadds
jge
shlb
je
dec
ret
jp
or
mov
insl
adc
sbb
push
icebp
fcompl
push
or
jbe
jle
pushf
mov
and
sbb
jbe
loope
rorb
test
js
jle
inc
jmp
lret
movsb
mov
lret
lahf
and
lods
hlt
inc
push
or
cli
inc
addr16
jle
cwtl
icebp
jno
pop
push
shlb
pop
test
loopne
aam
ficoml
int3
push
dec
sbb
xchg
stc
pop
add
ret
insb
inc
pop
xor
ficoms
mov
fld
sbb
jecxz
or
popa
dec
jb
mov
fs
jl
stc
fcom
lods
pop
mov
fstpt
lret
push
pop
xchg
mov
jb
sbb
js
std
mov
sbb
cwtl
aam
mov
imul
jg
mov
or
adc
mov
cmp
push
lret
pop
xchg
inc
imul
fbld
pop
or
mov
sbb
loop
add
xchg
adc
sub
mov
cmp
mov
cmp
popa
imul
lahf
pushf
inc
cmp
pushf
cmp
sbb
rcrb
les
data16
cmc
inc
xchg
or
insb
out
dec
jne
std
fs
enter
adc
jmp
sbb
push
mov
mov
in
test
jo
addr16
sbb
out
xchg
aad
mov
push
jne
ss
fiaddl
adc
cs
cmp
movsl
out
sbb
mov
loope
jb
hlt
ret
gs
xchg
inc
pop
mov
jb
out
add
aas
mov
lret
mov
or
inc
idiv
hlt
arpl
xor
hlt
xchg
mov
lcall
clc
stos
mov
xchg
or
and
jb
dec
pop
xchg
pop
les
call
pop
mov
add
adc
push
mov
sub
clc
loope
add
div
mull
lods
push
push
std
pop
push
add
imul
jge
jg
sbb
in
stc
mov
ljmp
push
push
test
imul
shl
cmp
adc
shll
sbb
enter
aad
repz
pop
dec
mov
lock
mov
push
pop
lcall
adc
aas
in
shll
insb
jl
pushf
dec
mov
inc
shrb
cmp
cmpsb
push
ljmp
xor
into
mov
shlb
hlt
push
addr16
ja
jnp
cmpb
aaa
push
mov
fildl
ret
push
xor
sub
xchg
int
add
mov
enter
sbb
out
aaa
dec
out
dec
push
adcl
xor
outsl
jg
jg
imul
in
rolb
outsl
and
loop
cmpsb
fadds
imul
ds
add
addr16
and
in
pusha
mov
out
xor
mov
divl
shrb
xor
scas
hlt
pop
xchg
in
mov
stos
dec
xchg
outsb
repz
jp
cli
push
xchg
popa
xor
mov
sub
push
aam
pop
fisttps
std
mov
pop
enter
in
sbb
fiadds
rolb
inc
test
xchg
mov
mov
xor
inc
jb
xchg
and
push
or
push
mov
sub
jl,pn
dec
in
sti
adc
mov
cld
jno
cmp
pop
imul
push
mov
add
imul
mov
inc
loope
adc
sub
enter
and
or
add
inc
int
adc
sub
sbb
xchg
leave
js
movsb
push
je
push
cmp
sub
cli
xchg
ret
sub
aad
sbb
sub
xchg
in
aad
iret
push
cwtl
mov
shr
es
cmc
jb
sti
rcl
push
in
pop
dec
sub
mov
cmpsb
rcr
leave
shr
or
and
shl
inc
lods
stos
jl
and
jo
push
sub
pop
test
jmp
ds
lds
push
or
and
xchg
out
in
lods
lret
inc
cmpsl
imul
les
pop
jae
inc
les
out
and
jle
test
add
adc
lods
mov
mov
pop
xlat
cmc
daa
or
bound
xchg
dec
lcall
call
pop
addl
inc
aaa
icebp
xchg
pop
pop
dec
loop
sub
or
sub
jecxz
cmp
dec
xor
pop
pop
hlt
dec
pop
pop
inc
mov
mov
and
insb
dec
jns
popf
ds
push
sbb
sahf
and
aam
xchg
pusha
insb
cld
xchg
mov
adc
adc
xchg
mov
push
movsl
or
dec
cli
js
lods
add
aam
stc
sbb
sbb
inc
push
test
or
mov
mov
cmpsl
into
ds
stos
jl
cmpsl
mov
jecxz
das
outsl
xchg
push
or
dec
cli
pop
scas
sbb
pop
stos
rcrl
aad
sub
jl
stc
jp
mov
and
lds
jmp
cmpsb
pop
cli
sub
adc
mov
fidivl
scas
dec
sbb
insb
jb
stos
sbb
test
lods
andl
stos
leave
subl
jb
lods
pop
into
sbb
push
call
lahf
adc
dec
xor
test
fnstenv
pop
mov
adcb
js
sbb
gs
mov
les
add
js
xchg
shr
cld
shr
in
js
leave
out
scas
adc
repz
lods
lock
call
xchg
testl
mov
leave
push
xchg
inc
sahf
inc
adc
aad
xor
cmp
aam
cld
sti
and
cmpsl
ret
xlat
push
fcompl
out
adc
pop
and
and
cmp
repnz
sbb
dec
mov
dec
in
pop
je
loope
ja
sti
lret
mov
aam
data16
mov
mov
fstpl
in
loop
mov
push
push
scas
cmp
xorl
jge
push
in
jb
pop
test
dec
enter
mov
shl
inc
ficoml
xchg
xchg
insb
test
clc
push
xor
les
mov
adc
xchg
lods
add
xor
cltd
inc
enter
cli
cmp
xchg
in
or
pop
cli
scas
ret
or
adc
lret
shll
dec
sti
xor
jg
daa
into
xlat
in
rcrb
cli
ja
jl
and
imul
mov
mov
mov
ja
sub
jb
sbb
pop
imul
ds
adc
ljmp
pusha
xchg
dec
popa
cld
movsl
fisttpl
pop
and
aaa
sub
gs
imull
pop
push
jmp
xchg
insb
cli
push
stos
andl
mov
cmpsl
or
mov
loop
aad
fiaddl
popa
jne
cmp
mov
ret
dec
xor
mov
std
cmc
push
test
out
inc
cld
push
cmpl
mov
pop
push
xchg
ret
push
dec
inc
mov
loope
inc
jg
lock
inc
inc
clc
dec
jno
mov
push
lret
cmp
call
mov
cltd
lret
inc
imul
dec
mov
dec
xchg
mov
mov
jbe
pop
or
jae
add
loop
stc
int
adc
push
ret
sub
jle
push
hlt
ss
pop
mov
pop
xor
adc
jo
mov
dec
stos
cld
in
jl
insb
je
dec
popa
fsubl
stc
pop
xchg
add
addr16
mov
xchg
idivl
imul
rolb
inc
mov
xchg
fsincos
mov
mov
dec
popf
dec
sub
jbe
test
pop
push
lods
add
push
dec
dec
in
cmpsl
lock
int3
jmp
sbb
inc
mov
dec
mov
xlat
dec
out
jp
aas
pop
dec
xchg
int
ret
andb
push
jle
mov
fnstcw
out
cmpsb
lret
fld1
rorb
fistpll
rcl
jns
mov
pop
sbb
leave
inc
lret
xor
movsb
xchg
push
sbb
jnp
lret
pop
jl
mov
inc
xchg
lahf
xor
push
and
adc
xchg
xchg
stos
jle
sbb
dec
mov
in
jp
jb
out
xor
ja
lret
cmp
stos
adc
pop
arpl
dec
ret
mov
push
lods
pushf
ds
daa
cmp
bound
loopne
xor
ss
mov
jle
out
inc
rcrl
xchg
lret
addb
inc
hlt
inc
gs
adc
xrelease
lret
cmp
data16
adc
or
xor
inc
sbb
xor
xor
into
mov
faddp
inc
mov
dec
nop
cmp
push
fisubl
enter
mov
or
rol
outsl
jne
ja
xor
mov
nop
jne
std
mov
sbb
add
rol
lret
repz
aas
add
jb
fldl
iret
sub
sub
mov
aam
jns
mov
dec
ljmp
aaa
mov
pop
mov
mov
testl
sbb
clc
cwtl
testb
das
movsl
xchg
mov
inc
test
cltd
inc
rolb
lods
xlat
mov
icebp
push
sub
xchg
repnz
xchg
fbld
dec
addr16
cmc
lds
jae
and
lods
out
daa
out
cmp
dec
add
mov
mov
jb
mov
inc
xchg
stos
inc
cmp
adc
or
lcall
jge
adc
lds
in
cli
mov
and
lock
sti
adcb
arpl
pop
pusha
mov
mov
cld
jne
mov
pop
test
mov
xchg
xchg
nop
push
out
mov
outsl
mov
fcoml
popf
in
sbb
out
push
inc
sarb
lcallw
add
ficomps
imul
aad
sbb
test
jle
ljmp
inc
xor
push
inc
xor
dec
fwait
lods
jge
pop
lds
inc
and
outsb
mul
cmp
ret
nop
lea
cmp
aam
lret
pop
add
mov
jge
rolb
cmc
daa
mov
push
jb
fsubr
into
cmp
stc
xchg
sbb
outsl
sarb
dec
rcrl
xchg
movsb
fnstsw
push
cmp
pop
in
rclb
jmp
cwtl
sahf
jmp
jb
inc
scas
mov
pop
jnp
es
shlb
subl
mov
repz
sub
jle
or
insb
mov
jnp
fdivrl
lcall
push
rcl
std
push
dec
add
leave
mov
pushf
shr
vmwrite
jnp
out
pop
mov
mov
add
ss
cwtl
mov
cmp
mov
push
rolb
lock
or
add
lahf
sub
lahf
dec
fstpt
mov
loope
xchg
push
pop
shrl
stos
sub
add
leave
mov
mov
add
cmp
mov
std
xchg
jecxz
mov
test
imul
push
ljmp
cltd
fs
sub
jg
jp
sbb
xor
cmp
roll
aaa
hlt
push
pop
scas
mov
mov
sbb
pop
adc
mov
scas
into
lods
cmp
ja
popa
inc
pop
mov
pop
mov
dec
mov
xlat
pause
dec
dec
dec
out
adc
or
aas
push
xchg
sarb
sub
sbb
jg
jl
jp
test
cmp
or
cmp
mov
xorb
sbb
andb
jmp
inc
nop
push
insb
xchg
into
mov
fbld
mov
ja
sub
stos
xlat
adc
add
loope
ja
and
inc
in
mov
adc
push
out
adc
loopne
add
ret
add
inc
add
adcl
js
jno
xchg
fs
in
cs
dec
pop
popa
ror
mov
scas
jb
shl
jl
pop
add
aas
push
aad
fcoms
cmp
aam
inc
xor
cmpsl
fisttpll
lret
pop
sbb
pop
call
add
push
sbb
add
jne
xchg
lock
arpl
out
loop
mov
jl
loope
mov
hlt
std
sbb
or
subl
push
inc
repz
jb
data16
ret
fistl
jge
mov
adc
fcoml
loop
daa
pop
adc
sub
jp
push
push
dec
loop
insl
xlat
mov
or
push
fsubrs
adc
movhps
clc
ds
das
xchg
mov
loopne
ss
loop
add
int
pop
or
mov
out
mov
sub
mov
cmpsb
in
rcr
lock
jb
loope
mov
dec
stos
xor
mov
sub
ret
divb
test
xchg
lds
stos
mov
xchg
add
jb
push
std
fcompl
xchg
ret
repz
or
xor
shll
inc
xor
stos
aas
arpl
insl
arpl
mov
mov
cmpsl
adc
arpl
and
mov
cs
dec
mov
fsubr
mov
cld
push
adc
stos
xchg
inc
xchg
in
repnz
add
and
lahf
or
ljmp
icebp
andb
dec
dec
and
ds
div
je
dec
push
lock
or
pusha
jne
and
shrl
cmp
out
xchg
dec
mov
pop
lahf
sbb
js
mov
repz
cmc
iret
imul
les
xor
adc
jnp
popa
in
movsb
sar
mov
addr16
jo
sbb
mov
popf
es
push
push
aam
lret
fbld
mov
out
sbb
aas
les
in
sub
xchg
out
mov
xor
push
mov
movsb
sbb
addr16
cmp
adc
aad
xor
daa
and
cwtl
xchg
jns
jge
mov
test
cmp
jle
lahf
fcmovu
or
mov
xchg
mov
xor
push
sahf
popa
in
adc
push
sub
sbb
sub
sub
adc
push
or
pop
in
sbb
cmp
inc
daa
push
dec
sbb
jecxz
dec
and
lds
lret
jmp
outsb
std
test
cmp
les
aas
jmp
lret
dec
mov
rclb
test
hlt
icebp
xchg
mov
divl
es
sbb
sub
out
mov
testb
cmc
imul
leave
lea
mov
js
filds
mov
fidivrl
adc
dec
out
ss
cmpsb
outsb
mov
jl
into
int3
pop
lret
sahf
xchg
lret
fistpl
outsl
adc
rcrl
pop
mov
dec
adc
or
cli
dec
sub
rcrl
jno
jl
sbb
push
loop
stos
push
into
xor
mov
cmp
mov
js
ret
scas
ror
dec
xor
jle
in
popf
push
inc
or
pop
js
repz
ret
jmp
outsl
jmp
stos
in
es
mov
popf
adc
xacquire
mov
push
sub
idivb
jmp
rcrb
test
fwait
das
js
xor
and
mov
jno
loope
je
in
rorb
mov
xchg
sbb
pop
inc
inc
out
jae
add
jl
pop
jnp
int
aas
sub
filds
rclb
xchg
xchg
lahf
add
scas
mov
add
xchg
dec
cmp
add
push
lret
xchg
je
test
and
lret
fistl
clc
dec
adc
jl
add
xor
jp
and
stos
push
popa
jg
dec
xor
fmuls
stc
mov
cltd
lret
lahf
jno
mov
scas
jmp
push
cmp
adc
mov
hlt
out
mov
xor
inc
jge
fcomp
push
fisttpll
shlb
mov
in
xrelease
shlb
fadd
or
jb
aad
pop
pop
pop
mov
xchg
mov
test
into
or
out
ljmp
outsl
pushf
add
loopne
gs
sbb
jnp
xchg
cli
push
push
in
sbb
mov
xor
cltd
dec
lret
mov
hlt
pop
out
push
fdiv
xor
mov
push
lods
add
mov
jge
mov
xor
pop
inc
lods
push
pop
shl
push
outsb
inc
js
mov
push
aaa
outsl
pop
cmpsb
nop
movsl
js
push
cmp
sub
push
dec
fs
addr16
push
sbb
aas
cmp
cwtl
addr16
notl
push
mov
adc
inc
dec
gs
sub
sbb
lds
jge
add
fwait
ret
es
repnz
mov
ja
mov
jae
fcoms
mov
push
fldcw
aaa
outsb
lds
aad
loop
mov
gs
sbb
andnps
inc
inc
cmpsl
lret
sub
ret
roll
inc
mov
inc
inc
das
ret
jle
mov
or
pop
int
cs
test
dec
movsb
pop
insl
push
xor
add
test
cltd
push
lock
inc
adc
lods
jmp
fisttpl
fldl
pop
bound
prefetch
or
imul
mov
lods
mov
icebp
mov
sbb
stos
xor
and
jns
dec
jmp
mov
mov
jmp
int3
popf
popa
sbb
repnz
mov
cmp
mov
bound
add
lcall
mov
mov
inc
xor
shlb
add
js
movsb
sbb
mov
fistl
inc
mov
dec
rolb
lods
addb
and
and
cmp
lcall
test
cmp
mov
mov
cmp
mov
dec
fnstcw
fwait
ret
int3
jg
jo
add
dec
shl
mov
cmp
stc
xor
imul
inc
into
rcll
or
xchg
in
icebp
sbbb
xorl
pushf
mov
mov
sub
mov
jp
sti
jge
cwtl
mulb
push
stos
mov
add
inc
dec
arpl
jge
out
cld
adc
adc
fmull
mov
mov
movl
pop
pop
dec
shrb
arpl
inc
aas
movsl
sub
or
mov
shr
idiv
inc
in
fldcw
mov
std
imul
cmc
loopne
push
or
xor
cs
fcmovu
pop
push
pusha
mov
jl
lcall
imul
xchg
mov
addr16
jp
outsl
mov
adc
iret
test
rcr
lds
mov
cmp
xchg
clc
sbb
cmp
mov
ljmp
pusha
movsb
ret
imul
add
or
mov
fs
pop
outsl
rorl
iret
std
mov
adc
push
xchg
adc
std
inc
stos
add
mov
dec
mov
cmp
sub
ss
xchg
js
ret
sub
ret
mov
cs
out
add
push
mov
cmp
jl
sbb
adc
mov
xchg
sub
pop
repz
xchg
jle
test
push
ds
repz
cmpsl
push
inc
push
adc
xor
inc
in
xchg
test
pop
imul
xchg
cmp
dec
aas
and
pusha
mov
cmp
mov
jnp
out
mov
clc
je
and
or
mov
mov
push
jnp
mov
ss
int
into
out
loope
sub
cmp
mov
in
and
ret
insb
xor
adc
cld
outsb
sub
orl
jne
pop
pop
pop
in
lahf
pop
or
fwait
jg
and
push
repz
stos
je
test
insl
je
jb
sub
mov
or
je
stc
mov
sahf
repnz
sbb
rolb
mov
inc
mov
and
mov
cmp
scas
mov
jmp
iret
out
ds
pop
ja
decb
xchg
fcmove
push
filds
xchg
les
insl
or
fdivrs
jb
dec
xchg
lret
sub
data16
lret
xlat
adc
mov
and
xchg
jne
pop
add
adc
add
push
mov
pop
jb
inc
shll
pop
mov
and
js
pushl
rcll
jle
cmpsl
cltd
clc
sub
bound
in
xchg
sbb
ja
clc
adc
pop
ljmp
lds
int3
xor
add
in
push
insb
test
sub
sub
pop
jp
pop
dec
and
scas
in
shlb
mov
gs
rcr
mov
jo
mov
sub
push
adc
adcl
je
and
fmul
movb
hlt
pop
std
in
pop
mov
sbb
cmpsb
insl
lods
jno
cmpsl
push
cmp
inc
xor
cmp
mov
cltd
arpl
mov
mov
sub
mov
cwtl
or
pop
xorl
sarl
jbe
fisubrl
and
mov
add
cmp
pop
outsl
int
adc
mov
daa
test
cmpb
outsb
imul
movsl
mov
sub
mov
pop
xchg
push
call
icebp
push
mov
mov
sbb
fadds
xchg
out
call
test
insl
repz
aam
mov
cmpsl
rolb
mov
enter
leave
lea
jbe
or
dec
loop
and
popa
mov
adc
add
cmp
outsb
and
fisubrl
mov
pop
in
sub
mov
push
jecxz
xchg
pop
ds
xor
stc
jbe
push
xor
aaa
push
enter
or
push
lret
ret
mov
into
xor
jecxz
stc
movmskps
leave
pop
push
dec
jmp
dec
push
add
or
xor
sub
xchg
in
arpl
pop
push
mov
insl
loop
mov
packuswb
test
cmpsb
xor
mov
sbb
movsb
sbbl
add
enter
gs
push
lock
imul
lock
stc
fnstcw
lds
and
fcoml
les
in
dec
mov
sub
xchg
xchg
sbb
inc
push
inc
mov
mov
fisttpll
mov
cld
fdiv
push
ret
stos
sub
xchg
lahf
je
dec
mov
xchg
pop
in
mov
insb
pop
sub
add
aas
or
outsb
scas
sbb
pop
imul
pop
mov
xor
jmp
jle
sbb
cli
paddsb
pop
push
pusha
lahf
data16
ja
arpl
mov
pushl
dec
xchg
dec
jb
sub
ljmp
jecxz
xor
push
dec
out
call
or
sbb
and
dec
mov
cli
scas
sbb
je
lahf
cmp
and
mov
lock
movsl
jno
lahf
es
in
es
sub
or
imul
xor
outsl
test
or
inc
cmp
fimull
mov
add
loopne
push
gs
dec
mov
notl
mov
xor
xor
repnz
mov
in
adc
mov
loope
mov
repz
loop
and
inc
sbb
adc
idiv
outsb
mov
das
add
hlt
test
or
inc
mov
mov
jp
or
fldt
dec
aam
xchg
test
dec
aaa
daa
add
cld
jnp
int3
fimull
adc
xchg
loope
jmp
jge
in
inc
insb
jmp
jbe
in
push
iret
lock
sbb
jo
inc
sbb
pop
add
adc
in
popa
js
jb
cmp
push
mov
loopne
adcb
outsl
cld
shll
mov
scas
inc
sbb
das
xor
in
xchg
or
popa
cmc
ret
add
outsb
lods
dec
jo
jp
cmc
push
pop
out
mov
mov
push
jmp
mov
jge
shr
je
cli
adc
adc
sub
adc
sub
mov
icebp
jo
rorb
xlat
mov
aam
imul
and
push
fcomps
pop
xchg
inc
insb
lahf
iret
xchg
lret
sub
jns
mov
outsb
imulb
jmp
inc
scas
rcl
out
push
jmp
mov
push
rorl
clc
adc
lahf
pop
mov
mov
xchg
mov
push
ficompl
je
stc
sahf
push
jmp
imul
call
pop
push
dec
fcmovnu
repz
xor
icebp
mov
pop
xlat
ss
mov
sbb
sbb
mov
fucom
or
lret
push
call
mov
in
clc
ds
insl
dec
push
mov
arpl
mov
push
and
and
jo
xchg
and
adc
pop
sbb
push
mov
push
jmp
inc
mov
into
decl
fcompl
inc
xor
lret
sub
cmpl
lods
xchg
push
inc
inc
mov
and
push
adc
fcmovnu
adc
hlt
xchg
inc
xchg
xchg
test
sbb
leave
int
shrl
test
jl
sti
scas
das
sbb
shl
fsubs
inc
jmp
xchg
xor
scas
lahf
jns
pop
sbb
add
sub
leave
lock
fadds
sub
mov
negb
stos
jmp
cmp
sti
and
ret
aam
loop
or
lret
push
hlt
lret
lods
inc
xchg
loope
lock
repz
pop
push
in
adc
ljmp
imul
std
pop
ret
mov
sbb
ds
inc
adc
xchg
shlb
and
fstpt
cltd
or
cld
xchg
sub
popl
sbb
fwait
loop
call
xchg
outsl
xor
sub
mov
outsw
daa
cs
out
lahf
sub
addr16
scas
fistpl
cmp
inc
and
lods
out
adc
int3
sub
mov
adc
and
sub
adc
roll
adc
or
add
mov
icebp
cwtl
incb
adc
push
dec
ja
ret
arpl
iret
test
movsl
lret
fidivrs
insb
dec
jg
iret
ficoms
jnp
sub
decl
sbb
je
jnp
pop
dec
mov
nop
frstor
pop
rcl
or
subb
mov
push
push
ret
mov
movsb
mov
rcll
fnsave
vmovups
mov
cli
dec
dec
push
sbb
add
adc
sub
sbbb
cmp
or
add
cwtl
adc
lea
fcomi
adc
mov
imul
jp
negb
shll
scas
test
inc
mov
fcoms
aas
fldt
mov
dec
cmp
daa
sbb
jae
inc
mov
stc
ret
cmp
out
loope
and
mov
dec
jns
je
fs
stc
data16
add
pusha
outsl
iret
iret
ret
stc
or
test
es
inc
cmp
xchg
dec
and
jnp
gs
mov
mov
dec
outsb
repz
jo
and
xchg
int
movl
sub
fistl
jecxz
xor
inc
jns
or
sub
clc
jle
emms
and
xor
mov
ds
in
jp
or
leave
adc
sub
loopne
cmp
enter
sahf
xchg
jecxz
ficoml
mov
les
incb
mov
jmp
int3
jns
xor
push
mov
aam
jbe
ret
sbb
pop
in
sub
fwait
xor
andl
or
and
inc
add
cmp
xor
hlt
cwtl
inc
add
lods
cmpsl
sub
cmp
shll
xor
push
and
mov
mov
mov
push
push
cmpb
jae
sahf
cwtl
ss
shrl
lahf
adc
in
or
push
sar
in
and
lods
stc
mov
int3
and
jecxz
scas
jge
rcrl
inc
lret
sub
rcr
pop
in
xlat
subb
div
xchg
or
pop
push
add
iret
mov
popf
test
cmp
sbb
sti
pop
sub
xor
and
sti
ss
imul
mov
xchg
lret
pop
loope
ret
insb
jp
xor
dec
loope
cmp
fcmovu
pop
and
fistps
sbb
mov
xchg
lret
or
push
nop
adc
test
je
dec
jg
adc
js
sub
jmp
out
xor
jmp
pop
fld
in
leave
mov
out
mov
mov
and
lods
add
aad
in
ja
jns
add
dec
cmpb
and
push
addb
in
dec
addr16
sub
xchg
mov
mov
mov
cmp
sbb
or
jle
jae
jg
sbb
lret
cmp
and
out
mov
add
mov
jnp
mul
sbb
xor
in
push
xor
pop
into
inc
sub
cmp
mov
pop
jmp
jae
ja
jb,pn
je
mov
gs
and
repz
popf
xchg
xorl
mov
push
test
fcomp
or
ret
scas
push
cmp
clc
sbb
or
pop
xchg
rclb
lods
jae
mov
lahf
xchg
or
js
mov
clc
movsl
fwait
popf
stos
jle
inc
dec
push
jmp
inc
fbld
xchg
mov
std
xor
adc
jle
rorl
xchg
and
mov
push
sbb
test
iret
push
pop
dec
push
sbbb
sarb
sbb
cmp
sahf
daa
mov
pop
or
sbb
ss
fwait
sahf
push
pop
mov
lods
sahf
js
jp
je
xor
adc
jmp
adc
xchg
clc
in
setg
cmpsl
lret
leave
or
jl
repz
mov
hlt
lcall
dec
clc
insb
repz
pop
cmpsl
push
dec
fwait
dec
sub
dec
push
loopne
sub
shll
jbe
sub
mov
push
lahf
stos
ljmp
pop
xor
loope
pop
mov
adc
and
ffree
and
dec
fwait
jae
js
inc
mov
in
loop
and
out
mov
fisttps
test
mov
test
push
sub
les
lret
jne
mov
and
imul
test
push
out
mov
sbb
mov
pop
call
mov
push
je
xor
mov
pop
sub
std
cmp
ret
mov
mov
aad
aad
add
mov
insl
loop
ss
pop
fsubrs
movsl
or
in
sbb
andl
repz
test
sub
lcall
loope
push
aas
or
sbbb
jno
hlt
xor
lahf
jle
cmp
lods
push
femms
mov
mov
xor
stos
ficoml
repnz
pop
test
sub
imul
lret
ret
or
jbe
sbb
xchg
gs
flds
jbe
xchg
mov
cltd
sbb
inc
add
outsb
and
shr
and
jle
lcall
xlat
std
mov
inc
sub
lcall
mov
sbb
ds
outsl
addr16
dec
dec
lock
xchg
sbb
fcmovb
cli
imull
dec
or
add
sub
sub
sti
add
pop
sub
push
push
pop
bound
adc
cmp
nop
scas
fyl2xp1
pop
xor
shlb
out
loop
rolb
push
adc
pop
pop
xchg
sub
fwait
outsl
daa
xchg
iret
xor
in
fwait
xlat
in
in
adc
add
enter
cli
push
jbe
push
adc
cmp
in
sahf
mov
in
out
inc
ja
ficoml
clc
jl
pop
mov
mov
inc
xor
push
das
sbb
subb
ds
xchg
and
pop
inc
pushf
or
nop
repnz
sbb
xor
cli
mov
addr16
insl
sbb
jg
sti
push
mov
scas
loope
pop
out
ss
mov
push
push
mov
xchg
rcrb
mov
sub
pcmpeqd
and
fdivr
out
ror
mov
mov
fwait
push
cmp
hlt
lods
sbb
adc
mov
jge
in
cld
mov
dec
add
xor
das
mov
andl
xchg
mov
xor
dec
cmp
mull
xorb
adc
repnz
sti
enter
daa
jl
xorl
lds
into
pop
mov
out
adcl
je
iret
jae
test
jl
pushaw
in
and
icebp
and
mov
ja
cld
jp
cmp
inc
fadds
jbe
pop
aad
mov
cmpsl
cmp
cwtl
icebp
andl
or
rcrb
enter
jno
das
stos
stc
bound
int3
add
sbb
rclb
sti
xchg
mov
inc
imul
push
rclb
mov
and
pop
jg
jbe
adc
push
out
xchg
mov
cs
les
ja
and
or
jmp
cmpsl
adcl
mov
pop
xor
sti
pop
add
sub
lcall
xor
or
add
mov
mov
lret
adc
pop
pop
push
dec
fisubrl
das
sub
mov
and
or
mov
xchg
pop
jns
mov
loope
cmp
xchg
jne
das
jg
or
pop
mov
adc
into
inc
fs
enter
sbb
rcrb
mov
pop
dec
jmp
int3
cmpsl
test
add
and
mov
cli
inc
ss
sub
mov
pushf
daa
call
je
xor
push
push
movsb
repnz
push
and
jb
and
cmp
xor
xchg
push
fsubrs
cmpsl
sbb
or
leave
or
jnp
xlat
mov
shrb
or
imul
xchg
gs
xor
std
scas
divb
xlat
jo
pop
movsb
sub
gs
in
jl
inc
xchg
movsl
in
push
pop
popa
push
mov
pusha
mov
pop
fstp
cmp
popf
rcr
mov
imul
sbb
out
pop
mov
testl
lret
ret
sahf
push
icebp
pop
sbb
clc
in
das
shlb
int
mov
push
es
loope
xor
jle
test
hlt
imul
xor
push
mov
cli
add
into
loope
arpl
cmp
iret
xorb
cmpsl
pop
xchg
xlat
sarb
add
dec
pop
jb
mov
xor
or
xchg
add
out
pop
cmpsb
test
fsub
push
cmp
dec
inc
hlt
lds
cmp
repz
jo
xchg
xlat
xor
sti
push
push
roll
lods
mov
ja
cmp
fwait
sarl
adc
lea
movsb
out
call
ljmp
xchg
sub
xchg
cltd
jo
lcall
sub
jecxz
add
push
lret
jg
bound
pop
les
sub
test
repz
das
sub
push
scas
cmp
or
cmp
mov
xor
add
sbb
popa
jp
loope
cmpsl
sarl
pop
cmp
mov
pop
stc
and
rcrl
imul
jb,pn
or
or
icebp
mov
ljmp
in
ss
xchg
je
sbb
push
xor
mov
mov
add
bound
mov
lcall
mov
addl
pop
sub
push
sahf
push
dec
lds
push
jp
popa
sahf
stos
clc
out
addr16
popf
xor
adc
push
scas
repz
xchg
das
or
adc
cmp
pushf
or
inc
cmpsl
sbb
lret
testl
pop
leave
lock
je
push
jp
cwtl
and
xor
and
ret
push
ret
jo
mov
cwtl
mov
sbb
aam
sti
sbb
adc
add
or
push
fwait
sbbb
pop
cwtl
js
cmp
adc
or
scas
xor
push
jae
mov
das
imul
mov
insb
mov
xor
cmpsl
into
outsl
hlt
cld
push
movsb
ret
sbb
lock
lcall
rcll
rclb
cmp
xchg
pop
adc
imul
jne
dec
iret
add
ja
xor
push
sbbl
mov
jns
int
sbb
outsl
mov
jno
cs
jecxz
cmp
mov
adc
mov
dec
data16
pushf
ds
cmc
adc
in
fistl
out
mov
and
push
shlb
shr
stos
in
leave
cltd
shl
imulb
stos
push
sahf
lret
test
jo
jbe
pop
push
pusha
inc
in
or
dec
ss
in
lahf
cmp
fdivs
ja
in
jmp
pop
cld
cmp
sub
movsl
sub
pop
fidivl
xor
inc
outsb
in
jge
inc
mov
sub
mov
stos
mov
mov
imull
ja
neg
fwait
add
mov
ljmp
cli
dec
iret
sub
or
scas
neg
or
sahf
scas
push
sub
xor
mov
mov
rcrl
fisubrl
jo
sub
scas
xor
xchg
sub
jnp
push
loop
int3
js
pop
in
leave
nop
cli
aas
pop
imul
mov
out
mov
inc
sti
loop
les
ds
clc
mov
enter
sbb
icebp
hlt
sbb
add
sub
outsb
rcr
push
arpl
movsb
push
in
dec
popa
dec
xchg
jo
pop
add
cmp
addr16
add
pop
sbb
mov
shr
nop
jb
addr16
aaa
pop
cmp
add
xor
inc
sbb
inc
test
push
mov
pop
ret
int
notl
fiadds
fwait
dec
imul
pop
ljmp
fidivrs
add
in
cs
xchg
lahf
pushf
cld
cmc
lahf
inc
ds
fdivr
xchg
stos
mul
mov
mov
nop
ret
pop
outsl
repz
scas
loope
adc
push
jo
dec
lret
add
add
jl
adc
mov
int
cmp
sbb
mov
xchg
int
in
ror
pop
fnstenv
shl
leave
sbb
scas
int
arpl
mov
fmuls
shll
push
test
or
mov
sahf
ja
jbe
sti
jmp
jl
push
cmp
xor
cmp
fimull
cmp
arpl
xor
ss
inc
stc
sbb
lock
call
pop
cltd
adc
aaa
jle
pop
cli
leave
leave
mov
test
add
mov
pop
mov
push
int3
add
mov
push
xor
push
mov
das
dec
in
inc
and
aas
mov
into
pop
stos
pop
xor
fwait
sub
cmc
or
inc
or
inc
mov
pushl
xor
aad
inc
out
js
stos
xchg
cltd
orb
pop
push
repnz
filds
lahf
and
jecxz
arpl
int
nop
pop
fadd
pop
push
jle
mov
pop
subl
mov
cmpsl
jmp
cmpsb
sub
mov
bound
and
mov
cmp
mov
jb
lods
aas
xchg
jg
in
jmp
mov
fsubr
sbb
negl
mov
inc
push
dec
pusha
addr16
testb
push
cli
or
in
shrb
cmp
cmp
or
dec
sub
das
out
sub
and
sbb
add
push
sbb
sarb
lcall
and
pop
or
repz
pop
mov
cld
out
popf
jno
cld
or
fwait
xchg
or
sub
scas
push
addr16
sarb
jl
add
mov
sub
mov
cmp
and
xlat
or
pop
out
out
pop
lcall
cmp
or
and
sub
fs
ret
xchg
push
in
sbb
xor
in
inc
xor
mov
cmc
and
or
std
rolb
ret
shll
sbb
out
adc
ljmp
lds
dec
push
mov
repz
jbe
hlt
and
addl
loope
mov
mov
mov
push
or
xchg
in
scas
dec
dec
mov
push
cmp
enter
inc
xchg
mov
push
xorl
xchg
mov
inc
dec
loopne
data16
inc
sbbl
push
clc
xchg
mov
in
cmc
stos
xlat
and
fnstenv
cs
lret
movsl
push
repnz
dec
ficomps
mov
sbb
insb
pop
test
inc
cmc
lret
decl
cmpsl
cld
dec
push
and
pop
js
dec
jno
loopne
jae
icebp
loope
adc
in
clc
lods
mov
cmp
and
cmp
push
and
inc
push
sub
mov
outsb
inc
sub
lods
adc
adc
lret
ds
pop
dec
cmp
pusha
es
and
jmp
fwait
jns
cmpsl
jne
test
cmp
aad
lcall
out
popf
loope
rcrl
out
ljmp
add
cltd
push
mov
push
jae
es
cmp
jg
jg
cltd
outsl
mov
mov
addr16
enterw
pop
or
mov
sbb
lock
pusha
popf
stos
stc
add
cs
sbb
les
lea
push
pop
cwtl
dec
fisttpll
sub
insb
add
and
je
out
insl
and
mov
add
mov
pop
test
test
jae
std
xor
push
pop
mov
lret
pop
shll
je
mov
leave
xor
sub
fcmovnbe
jae
cmp
pusha
daa
inc
lret
cwtl
pop
test
aaa
dec
adc
ror
in
sub
inc
cmp
jns
sub
fnstcw
lcall
cltd
arpl
xchg
sahf
mov
jmp
in
scas
cmp
or
lods
jl
mov
cmp
in
mov
cmp
mov
test
or
cld
and
test
pop
or
ljmp
in
stos
adc
inc
lea
and
xlat
mov
into
lret
ljmp
lods
mov
dec
lahf
mov
jne
or
and
adcl
cli
sbb
and
stos
jae
sbb
mov
sahf
test
int3
fcoms
addl
adc
fistps
adc
in
call
xor
mov
pop
push
ljmp
pop
cltd
clc
repz
popl
sbb
mov
push
xchg
push
neg
push
pop
jo
or
sbb
cmp
push
clc
pop
lods
subl
int
mov
jb
stc
movsb
push
in
loope
out
insb
jno
inc
enter
mov
and
and
in
cmp
push
imul
cmp
lea
shrl
inc
popf
cmpsl
xor
bound
sub
sbb
ja
out
dec
out
cld
pop
mov
stc
stos
cmpsb
popa
mov
incl
pop
and
adc
into
mov
jbe
push
push
repnz
jg
fildl
cli
jo
push
push
mov
pop
mov
mov
or
dec
in
pop
repnz
jo
fisubrs
or
sarl
inc
mov
ja
mov
sbb
pop
fs
pop
in
call
fs
cs
fisttpl
mov
push
cmc
mov
mov
sub
xchg
pop
mov
ds
and
test
add
mov
in
adc
cld
outsl
or
repz
cmp
or
std
push
repz
ficoms
cmp
stos
ficomps
out
aaa
into
mov
ss
js
xchg
pop
scas
lds
std
and
fptan
movsb
rcrb
xchg
pop
cmp
sbb
ds
pop
cmpsl
jmp
mov
pop
add
push
jge
or
ja
mov
repz
sub
rorl
mull
mov
lock
pushl
fildl
fdivp
jp
loope
xchg
movsl
jecxz
and
aas
adc
iret
das
daa
sbb
dec
adc
rcrl
dec
in
adc
dec
andl
icebp
xchg
add
push
mov
in
xchg
push
into
mov
adc
dec
repz
push
and
cld
mov
ret
push
dec
mov
clc
data16
mov
stos
cld
test
mov
aad
and
in
hlt
adc
ss
push
mov
inc
add
repz
loopne
mov
mov
out
addr16
scas
pop
aam
mov
adc
add
inc
add
sahf
pop
inc
cmc
loope
push
cmp
lret
jae
out
sbb
jmp
fcmovnu
xchg
lods
jl
out
test
pushf
inc
add
ljmp
ds
lods
test
sub
push
mov
jecxz
cmp
add
loop
pusha
aam
nop
xchg
arpl
ror
daa
and
fdivrl
jmp
lds
cmpsl
mov
cmp
jnp
and
xchg
push
mov
repnz
rcl
dec
dec
pop
push
jno
lods
mov
mov
inc
mov
add
sbb
mov
fsubrl
dec
aam
ljmp
out
pop
push
mov
sarb
pop
decb
cmpsb
data16
arpl
hlt
ds
push
mov
push
and
flds
fdivr
mov
fnsave
in
outsb
es
add
out
or
jl
adc
xor
repz
shr
sti
lods
add
push
push
mov
ret
xchg
jnp
jae
ja
sub
loopne
test
cltd
jno
sbb
arpl
sub
movsb
cwtl
jmp
xchg
cs
sub
jp
dec
cmpb
fiaddl
cmp
push
mov
push
sbb
ss
test
sahf
sbb
sub
rcrl
cld
sahf
fsubrl
inc
and
fsubr
xchg
clc
jge
movsb
fsubrs
pop
lret
call
add
mov
in
sarl
mov
scas
test
lock
rorb
nopl
jp
cmp
xorl
mov
sbb
aaa
sbb
sub
pop
inc
xchg
jb
std
xlat
sub
scas
bound
pop
mov
pop
mov
push
cmc
rorb
inc
loopne
adc
xchg
mov
testb
fcompl
fs
jb
inc
dec
shrb
mov
jle
sub
clc
aam
jb
cmpsb
daa
pop
rclb
mov
mov
push
out
jnp
lahf
jp
or
or
add
test
or
mov
mov
pop
sbb
imul
adc
dec
es
push
inc
movsl
repz
xchg
or
xchg
das
rclb
shl
aad
imul
inc
mov
iret
lcall
pusha
cmp
xchg
cmpsb
outsb
shll
cwtl
pop
imul
jp
sub
dec
sbb
adc
int
xor
and
mov
daa
sub
out
dec
dec
xchg
jnp
popa
mov
mov
cmp
add
call
lds
pop
cltd
cmp
stos
dec
out
sub
jne
xchg
pop
cmp
dec
push
and
fisubl
movsb
popa
pop
mov
mov
push
rclb
call
cld
sbbb
loopne
sbb
dec
push
call
xlat
push
push
jge
xchg
add
mov
add
popf
jle
inc
movsb
pushf
and
jge
inc
lret
cmp
and
pop
push
shll
fsubrs
arpl
adc
inc
mov
mov
lret
or
lahf
jns
xor
enter
or
aam
fs
les
mov
dec
ja
lcall
sub
pop
or
rcrb
sarl
xor
test
aas
cli
rcrb
adc
test
mov
rol
mov
ret
int
push
aaa
add
sub
gs
jno
stos
jb
call
ffreep
mov
notl
xchg
mov
sbb
push
out
cmpsb
cmp
cmpsb
loop
daa
subl
mov
data16
sub
hlt
dec
inc
xchg
cmp
pop
cmp
mov
outsl
leave
nop
std
sti
out
into
rol
jnp
scas
jns
push
mov
lret
mov
mov
shrl
je
cmp
fldl
mov
stos
xchg
insl
sbb
jg
mov
lahf
adc
or
sbb
test
lods
jae
mov
mov
jns
pop
xchg
jle
xor
and
shrb
in
cmc
repnz
lcall
pushf
push
pop
jbe
push
ds
inc
push
adc
adc
cmc
int3
lahf
sbb
data16
jbe
cmp
negl
adc
ret
iret
pop
sti
dec
das
push
mov
xchg
enter
imul
out
inc
pop
dec
test
int
jg
inc
ja
sbbb
push
push
test
adc
sub
xchg
pop
mov
fdivs
pop
inc
cmp
js
movsb
pop
hlt
iret
fsubr
xor
mov
inc
dec
out
sti
mov
fs
shrb
sub
lret
xor
push
hlt
dec
imull
aad
mov
loop
mov
and
sti
in
xchg
jmp
push
jns
incl
fsts
push
daa
xchg
adc
xor
out
cmpl
pop
outsl
jmp
iret
mov
int
lods
pop
faddl
mov
xor
cmp
cwtl
mov
fiadds
nop
push
sbb
jl
jg
xor
push
pusha
mov
popa
fs
test
sbb
xor
out
cmpl
ja
int
jmp
cmp
aad
rorl
add
sbb
fildll
cltd
or
fnop
sub
clc
pop
pop
lods
adc
ret
lret
in
cmp
sbb
sbb
ljmp
inc
aas
sti
dec
sub
sub
ja,pn
aam
ds
pusha
arpl
xchg
js
or
cmp
ret
fcom
popa
and
inc
lods
inc
ja
lea
mov
xchg
cli
xchg
xchg
int
test
movsb
inc
pop
xchg
clc
push
and
adc
jmp
cmp
pop
ficompl
aas
inc
push
push
ret
inc
repnz
ja
fwait
or
push
cmc
mov
xchg
adc
dec
jb
xchg
pop
repz
inc
addr16
or
and
pop
push
mov
iret
jp
or
cwtl
je
stc
jge
lock
push
mov
jp
leave
loopne
push
mov
fsubrs
xor
bound
test
sti
mov
mov
add
mov
xchg
movsl
test
pusha
mov
dec
lods
test
inc
popa
cmp
xor
or
hlt
mov
sbb
insb
pop
mov
cmc
and
xor
push
adc
es
loop
mov
aaa
xchg
inc
add
pop
push
adc
imul
call
insl
loope
xchg
mov
xchg
push
cltd
fwait
cmp
cli
xor
jl
ja
nop
add
call
int3
pushf
ret
ja
xchg
or
dec
sub
data16
inc
pop
std
and
lcall
das
loope
mov
dec
push
loop
mov
xchg
add
cmp
xchg
roll
imul
outsl
adc
int
int3
and
enter
mov
aad
dec
ret
xchg
jb
sub
outsb
mov
loope
dec
and
insl
lcall
ljmp
addb
fcmovnu
mov
iret
xchg
dec
push
cmp
adc
mov
inc
outsb
push
jp
mov
or
subl
mov
and
mov
xchg
clc
cmpsl
ljmp
jno
lsl
imul
add
sbb
inc
movsl
scas
test
dec
cmp
jns
cwtl
jle
test
mov
inc
enter
mov
or
push
xchg
or
jg
cmp
addr16
popa
xchg
es
pop
sbb
aas
jb
jo
fs
in
cmc
xor
es
push
ret
sub
sub
in
pop
and
mov
aas
adc
insb
testl
adc
orl
imul
xor
mov
fsubs
jl
fistps
pop
mov
scas
xor
loopne
je
mov
lods
sub
fidivl
cmpsl
inc
inc
es
and
sub
icebp
ret
pop
movsb
jmp
mov
inc
xor
aad
enter
inc
movl
daa
clc
inc
adc
fcoms
fcoms
and
mov
dec
adc
jmp
xchg
mov
mov
arpl
xchg
cli
dec
mov
jecxz
out
orb
mulb
inc
aas
cmp
fidivrs
push
iret
adc
jno
or
inc
mov
nop
fimuls
repnz
push
leave
push
and
popa
xor
lock
rcl
or
pop
xor
scas
leave
adc
fldcw
aas
fisttpl
mov
inc
sarl
xchg
stos
das
push
movsb
add
jge
loop
jno
mov
notl
lea
lods
pop
ret
xor
cwtl
cmp
mov
sti
je
out
ret
test
mov
cmpsl
test
xchg
xchg
mov
test
das
xchg
fwait
pop
or
pop
rep
xchg
adc
scas
mov
inc
ds
fnstcw
xchg
pop
cld
jl
xor
jp
ja
leave
push
cmpsb
cmc
mov
xchg
push
shlb
sbb
sbb
xor
sub
loopne
sbb
arpl
xor
mov
pop
push
popf
fldenv
push
xor
insb
in
lret
adc
cmp
sub
sahf
jbe
lahf
ret
cmp
sbb
push
aas
adc
fldl
jecxz
subb
mov
or
je
sub
add
jmp
add
sub
jecxz
jmp
outsb
imul
mov
rcl
mov
sbb
pushf
sti
inc
pop
movsb
pop
mov
sub
sub
icebp
mov
add
sub
iret
xchg
ds
add
sub
enter
lods
in
stos
or
lret
faddp
xchg
stos
out
jb
mov
pop
jmp
add
xchg
pop
cli
sbb
mov
test
push
sub
pop
shlb
mov
jne
out
je
daa
bsf
sub
loop
popa
movsb
jg
mov
xor
jbe
test
sub
sti
cmp
inc
and
aam
pop
aaa
mov
aas
xlat
mov
jecxz
mov
loope
jecxz
negl
xor
into
testl
ficomps
aaa
sbb
repz
mov
scas
mov
dec
or
mov
pop
xor
test
jle
in
lock
popa
mov
xchg
xchg
inc
fcoml
arpl
mov
xor
in
imul
aam
add
add
lock
jno
pop
and
pop
mov
scas
mov
or
push
pop
insl
aam
mov
jg
cld
dec
sub
pop
xor
pusha
add
pop
mov
fistps
sbb
lea
fldt
rorl
sub
push
mov
jno
out
dec
jne
xor
push
ret
rol
in
test
mov
push
sub
xchg
call
jge
outsb
push
imul
jnp
add
shl
mov
fidivrs
sahf
push
xchg
cmp
sbbl
xor
inc
mov
add
mov
mov
xor
sbb
popa
repnz
add
enter
xor
mov
pop
adc
or
stc
int3
dec
sbb
outsb
sub
rcll
hlt
aad
mov
push
cld
jne
and
push
insb
or
dec
sbb
mov
mov
xchg
inc
adc
test
outsl
cwtl
loope
test
rcrl
lods
sbb
cltd
and
mov
popf
movsb
xchg
pop
lds
cmp
xchg
mov
cmp
aaa
pop
jnp
iret
dec
mov
pushf
pop
test
jnp
sub
jge
aad
and
hlt
xor
adc
add
lea
into
mov
shll
xchg
andl
and
aam
fistpl
jns
test
xor
xor
test
or
push
jno
adc
jmp
ret
adcl
orb
or
and
inc
add
ds
shll
jno
jmp
push
dec
pop
insb
pop
pop
outsl
aaa
jmp
mov
loope
mov
sub
maxps
es
inc
jge
icebp
stos
dec
in
das
int
cmpsb
cmpsl
sbb
and
push
inc
mov
in
mov
data16
movsb
mov
popf
and
test
das
jp
fs
jb
push
mov
and
incl
jp
rcrl
pop
add
cmpsb
adc
xchg
mov
push
push
mov
pop
mov
adc
int3
add
mov
inc
inc
sub
pop
test
insb
mov
das
jo
insl
jmp
dec
push
scas
and
jmp
pop
ficomps
adc
xchg
subl
mov
cmp
sbb
adc
mov
mov
mov
std
push
push
ds
cmp
pusha
in
sub
dec
psubq
ret
adc
stc
pop
mov
inc
xor
ss
cli
inc
jns
sub
push
in
mov
sbb
adc
insb
in
das
mov
outsl
dec
es
pop
pusha
loopne
push
adc
lock
xchg
mov
movsl
inc
lods
xor
xchg
mov
in
pop
xor
adc
daa
xchg
fidivrs
scas
into
mov
aas
push
add
cmp
dec
fstps
rep
sbb
faddl
loop
jnp
loope
repz
orl
int3
sub
xchg
stos
pop
shrb
rcll
mov
scas
rorb
leave
arpl
and
outsb
jle
and
fisubs
stc
sbb
hlt
add
adc
mov
aas
popf
xchg
aaa
mov
mov
xor
aas
loopne
pop
cmp
push
repnz
mov
jnp
mov
push
mov
sbb
movsb
mov
loope
fwait
imul
cmp
xor
xchg
mov
pop
xlat
cltd
push
push
ss
push
sub
test
fstl
xor
xchg
lahf
push
psubusb
jge
add
xchg
shrl
and
sarb
jb
cmpsb
jne
push
sbb
add
lcall
sti
dec
mov
jl
jnp
lahf
pop
mov
xorl
pushf
jecxz
dec
nop
mov
and
push
pop
xchg
adc
int3
mov
dec
pop
fisttpl
clc
fstps
lahf
xchg
daa
hlt
inc
in
sub
or
pop
out
mov
lahf
sbb
jle
jp
aam
jne
mov
cmp
dec
jmp
or
or
filds
or
js
cli
mov
lret
gs
sti
cltd
jno
enter
and
and
je
in
sub
js
and
ja
fistl
push
xor
pusha
daa
lods
out
sbb
push
jle
inc
sub
jns
inc
sbb
fcoml
ss
add
mov
cld
stos
push
idivb
pop
fs
cmp
pop
popf
mov
adc
mulb
xor
outsl
sahf
add
cmp
rolb
adc
shrb
inc
out
adc
das
scas
shll
jp
push
push
pop
popl
push
shr
fisubs
xchg
jl
sti
int3
loope
mov
gs
adc
ret
sbb
js
in
shll
test
pop
push
and
pushf
mov
pop
cmpsl
cmp
dec
in
outsl
or
in
push
adc
shrb
cli
mov
scas
movsl
lret
leave
rcll
pop
mov
inc
jns
loop
pop
repnz
loope
inc
test
pop
test
or
out
push
pushf
pop
aam
jp
sub
inc
fisubrs
add
rcrl
movsl
test
sub
and
cmp
xchg
xor
adc
mov
fucom
daa
out
adc
cmc
push
mov
jecxz
mov
jne
push
jno
loope
push
pop
es
test
pop
jbe
lret
and
sub
add
mov
dec
xchg
pop
popa
jmp
jno
mov
arpl
orb
or
ret
test
lods
fidivl
xchg
cltd
xchg
ds
cmpsl
inc
mov
push
ficoms
push
and
outsb
rcrl
mov
sub
lods
gs
cmp
pushf
and
gs
je
or
mov
xor
sub
out
mov
xchg
in
jno
sub
hlt
cmpsb
pop
add
js
test
in
mov
cmpsb
push
das
dec
ret
leave
test
add
push
and
repz
loopne
bnd
dec
sub
popf
or
loop
cli
cmp
add
test
fnstsw
iret
imul
nop
call
inc
xchg
mov
or
je
cwtl
xor
dec
xor
jmp
sub
xor
in
lret
in
cmpsl
shl
cmp
pop
lret
cmp
data16
mov
loope
dec
or
sub
mov
jnp
jno
dec
int
test
add
dec
and
outsb
adc
adc
or
cmpsl
cvtps2pi
lcall
das
xor
loope
cmp
add
ret
adc
xor
pushf
xchg
sub
lret
lcall
xchg
adc
mov
subb
and
mov
mov
popa
mov
mov
jbe
add
das
fucomp
imul
pop
call
daa
neg
xor
push
nop
out
xchg
and
and
or
arpl
dec
in
mov
insl
xchg
adcl
pop
mov
dec
in
mov
mov
cmovnp
dec
cmp
xchg
pop
mov
mov
mov
inc
leave
and
sub
out
mov
aaa
negb
mov
pushf
inc
push
mov
mov
mov
ljmp
prefetch
dec
cmp
pop
fadds
cmp
xor
jno
sub
test
adcl
fisubl
adc
nop
lock
xchg
mov
mov
jns
mov
pop
sbb
sbb
cmpsb
adc
sub
fwait
ss
andl
sbb
daa
nop
rclb
xchg
rcrl
push
and
sub
jmp
mov
out
jno
les
subb
ret
scas
arpl
aas
adc
mov
xchg
cmp
sub
sbb
decb
jbe
xlat
push
fdivrs
inc
add
sbb
rcr
jmp
mov
dec
lret
les
mov
lock
cltd
leave
jmp
push
mov
xor
push
push
mov
add
mov
mov
gs
notb
fldl
or
cmp
hlt
das
mov
jg
pop
shll
scas
dec
pop
aaa
push
arpl
inc
and
jae
mov
insb
dec
jb
repnz
arpl
dec
jnp
inc
pslld
dec
sub
jecxz
daa
addb
and
ficoms
add
fisttpl
mov
dec
xchg
lods
add
movsb
sbb
fs
mulb
inc
push
bound
mov
cmpsb
mov
in
into
or
scas
cmc
xchg
testl
decl
push
lods
pushf
mov
xchg
push
outsl
adc
nop
sub
add
in
lret
inc
addb
test
jo
pop
jno
cwtl
cs
loop
and
arpl
inc
rcrl
inc
movsb
mov
cmpsl
mov
adc
sbb
mov
out
xlat
movsl
adc
fldcw
push
test
enter
mov
add
jmp
mov
mov
mov
lods
data16
and
daa
cmc
push
stos
mov
scas
jb
icebp
mov
lock
outsl
and
enter
ja
jns
int
jge
jbe
stos
mov
push
jecxz
pop
fisubrs
dec
bound
or
call
push
fs
fsubrl
xchg
push
or
insb
ja
jg
xor
sub
cmp
or
aad
dec
int
pop
shlb
inc
adc
mov
mov
sbb
repz
mov
iret
cmp
fisubrl
sbb
lods
jl
dec
jg
jg
iret
jno
fs
dec
pop
out
push
jns
add
mov
pop
xor
popf
cmp
data16
je
iret
sbb
popa
jne
adc
add
jns
cltd
clc
mov
insb
sbb
shlb
sub
fs
shl
mov
xchg
mov
xchg
mov
lahf
mov
popa
daa
add
mov
or
idiv
bound
lea
jb
in
orb
add
pop
lahf
inc
mov
mov
mov
ret
mov
mov
jg
mov
lock
mov
addr16
test
aam
push
xchg
xchg
aam
das
sar
jo
adc
cwtl
dec
xlat
repz
cmc
inc
cmc
out
sbb
push
pop
cltd
dec
outsb
cmp
push
sahf
xchg
mov
xchg
loope
pop
lret
push
cltd
repnz
jnp
jge
inc
shr
bound
mov
fucomip
push
bound
sub
leave
fwait
out
scas
inc
popa
je
lret
and
mov
cmc
push
xor
sub
aad
outsl
dec
rorb
ss
ret
push
jns
cmpsb
lcall
in
hlt
and
and
movsl
test
mov
mov
xor
dec
add
or
pop
es
popl
sti
pop
mov
cld
pop
aad
sub
cli
push
jmp
in
and
scas
dec
ljmp
sbb
cs
mov
popa
jno
call
xor
arpl
repz
inc
push
pop
xchg
lods
xor
adcb
enter
and
mov
scas
xchg
pusha
jp
pusha
jmp
repnz
jg
xor
fwait
imul
insb
lcall
add
push
lret
jp,pt
add
push
ljmp
popa
jecxz
repnz
adc
test
xor
dec
jno
inc
pusha
enter
lcall
jae
mov
jmp
bound
mov
sti
shrb
push
fisubs
pop
imul
movsl
roll
jecxz
insl
push
out
xchg
xchg
jo
repz
mov
xor
xchg
imul
push
and
icebp
shrl
xchg
pmovmskb
andb
adcb
in
push
repnz
loopne
inc
das
loope
add
pop
sbb
xorl
fdivl
xchg
aas
dec
mov
mov
xor
mov
jb
pop
stos
out
or
mov
sarb
fwait
inc
mov
loopne
sarb
out
push
fcomp
inc
pop
mov
repz
mov
fisttps
test
push
in
and
imul
mov
mov
fwait
pushf
es
cmp
pushf
pop
cmpl
mov
insl
aaa
pop
rcll
pop
pop
test
bound
test
idivl
push
in
lret
fcomi
ret
xchg
sub
ss
xlat
sbb
sti
jp
hlt
add
rorb
xchg
inc
jge
mov
orl
cltd
daa
xor
xchg
fs
pop
jle
jl
sub
dec
movsb
mov
mov
pushf
out
xchg
test
ret
adc
test
incl
flds
ja
dec
xlat
mov
mov
jmp
mov
inc
cmc
lret
outsl
dec
fsubr
iret
ss
stos
inc
std
cmp
and
or
jmp
daa
or
cs
lret
inc
lock
mov
adc
sub
cmp
loopne
xor
pop
sbb
mov
xchg
iret
shlb
jno
lea
jno
lret
fsubs
dec
stc
loope
adc
mov
fwait
mov
xor
out
cmp
mov
das
cwtl
data16
insb
pop
js
or
nop
jns
iret
add
and
sbb
xchg
xlat
out
jl
cld
xor
mov
mov
push
outsb
sub
lods
and
mov
push
leave
xlat
andl
out
and
out
fsubrl
or
insl
inc
dec
xchg
xor
add
mov
mov
mov
sbbb
mov
inc
mov
or
dec
mov
adc
add
sbb
and
mov
push
sbb
push
aam
aas
xchg
shlb
shlb
std
sbb
subl
inc
cmp
inc
pop
dec
xchg
push
mov
mov
mov
xchg
or
or
ljmp
jp
dec
daa
jne
repz
sub
mov
adc
pop
rcl
dec
orb
stc
insl
rcll
mov
cmp
push
addr16
mov
adc
push
sub
xlat
ja
xor
pop
jns
test
and
xor
push
sub
sub
add
cmp
ljmp
daa
shll
push
inc
incb
cmc
popa
sub
lock
pop
and
scas
pop
mov
clc
mov
dec
dec
cwtl
scas
ffree
ljmp
insb
mov
xchg
lcall
arpl
fs
outsl
test
shr
fldenv
jle
mov
mov
push
push
adc
je
dec
mov
lds
clc
outsb
out
push
cld
or
ja
addb
fisttpl
push
scas
iret
jmp
and
jg
test
repz
stos
cs
cmpsb
enter
mov
mov
add
add
arpl
int
shr
pause
cmp
inc
push
dec
addl
aaa
cmp
xchg
repz
jb
out
in
ja
or
xchg
push
sbb
into
pop
mov
push
mov
pusha
lret
lret
cmpsl
out
push
cmp
repz
inc
inc
pop
xchg
aas
lods
sbb
scas
mov
adc
aad
pop
mov
popa
mov
push
push
je
aaa
xchg
xor
add
sbb
fwait
sti
aas
cmp
add
xor
lods
ljmp
fisttpll
dec
jbe
cmp
jb
nop
fisubrs
mov
clc
movsl
test
add
push
mov
jae
mov
cwtl
ret
mov
pop
dec
lahf
or
sbb
or
mov
and
inc
loope
inc
loope
pop
push
inc
jo
or
mov
sub
jnp
pop
cmp
rcl
sbb
jno
gs
fldenv
inc
in
insb
addl
orb
mov
fs
out
sub
icebp
adc
jmp
push
push
mov
lret
push
xchg
fsubl
inc
hlt
xchg
and
enter
fidivs
out
sarb
mov
lods
inc
iret
xor
or
cmp
jmp
pop
dec
lea
dec
gs
xchg
arpl
fs
jle
imul
sbb
hlt
out
jae
cli
sub
jmp
pusha
int
pop
mov
jo
sbb
leave
nop
movsb
and
jae
sub
movsl
imul
faddl
jb
in
jns
xchg
test
xor
xchg
xchg
hlt
lret
mov
dec
std
jecxz
out
mov
xor
aaa
jns
dec
xchg
ret
inc
mov
cmp
rcrb
sub
mov
cwtl
mov
popa
sbb
pop
jbe
stos
jbe
das
push
mov
sub
test
adc
test
xor
rcl
adc
mov
enter
lret
xchg
sbb
or
cmp
ds
dec
repz
clc
jo
jg
imul
insl
adc
mov
and
xor
ss
jl
loope
jge
inc
mov
jne
std
popf
push
push
je
in
pop
sbb
fcomi
fnstcw
aad
cltd
adc
pop
cmp
dec
and
push
and
jl
testb
push
lret
idivb
or
mov
jl
xor
mov
sbb
jo
jae
les
repnz
aam
and
adc
jo
xor
mov
mov
mov
iret
or
addr16
stos
aam
jne
and
cmp
insb
arpl
jl
or
and
das
pop
ficoms
push
lcall
les
mov
test
jno
and
stc
stc
scas
arpl
loope
mov
sbb
inc
jno
loope
and
mov
xchg
aad
xchg
fdiv
icebp
fsubrs
or
jg
and
or
movsb
inc
lahf
pop
add
push
pusha
mov
call
mov
adc
testb
jmp
adc
lret
cld
pop
or
in
data16
outsl
ds
add
ja
jge
mov
inc
sub
inc
int3
jns
movsl
add
pop
sub
or
xlat
sbb
inc
pop
jmp
leave
xchg
test
xchg
das
push
loope
shlb
call
sbb
imul
aad
fists
dec
pushf
mov
pop
add
ja
sbb
jl
daa
ret
scas
loope
stc
stos
bswap
das
out
movsb
cmpsl
stc
test
cmp
dec
adc
pushf
xor
dec
mov
mov
push
and
fsts
aaa
fcmovnbe
ss
and
xchg
rcl
fcmovb
jnp
cmp
out
cmc
shlb
bound
dec
fsubs
mov
in
jns
or
mov
pushf
cld
xlat
dec
ret
cs
daa
pop
dec
mov
adc
or
test
out
sti
push
pop
push
lock
rolb
imul
push
btr
cmp
jge
jns
hlt
or
pop
in
sub
bound
sahf
dec
jl
orb
pop
or
sahf
pop
in
jno
outsb
adcl
mov
xorl
aad
xchg
shll
dec
xchg
xor
orb
sbb
jno
add
xchg
ds
and
movsb
mov
fimull
cmp
dec
xor
adc
push
xchg
lds
mov
insb
sbb
push
into
pop
mov
fstps
jno
dec
cmc
mov
shrb
stc
insl
push
pusha
stos
loope
es
push
push
fildll
aas
mov
ret
loop
aad
pop
cmpsl
mov
pop
std
fwait
cmp
xor
pop
inc
stos
inc
aad
cmc
rorb
mov
push
xchg
push
push
fwait
in
xchg
gs
pop
xlat
cld
pop
inc
jp
push
das
and
cwtl
mov
push
test
andl
jg
push
in
mov
inc
mov
les
add
xlat
insl
jno
adc
repz
jecxz
mov
shrl
xchg
xor
push
and
mov
dec
push
dec
enter
and
mov
gs
js
dec
out
jmp
jg
pop
cmp
pop
mov
sbb
and
shrb
rclb
cltd
lea
inc
popa
xchg
call
inc
dec
mov
rol
cmpsl
inc
inc
out
xchg
in
dec
aad
inc
xchg
aad
cmp
scas
xchg
inc
imulb
test
push
pop
adc
mov
pop
ljmp
adc
pop
mov
fbld
stc
xor
mov
ret
jp
sub
clc
in
mov
outsl
mov
sbb
push
jb
rolb
xor
cmpsb
int3
lods
rcr
push
dec
xchg
into
dec
xchg
push
push
inc
mov
icebp
lds
and
mov
out
jne
xor
mov
jne
sub
setle
mov
andl
xlat
add
adc
mov
sbb
xorl
pusha
dec
cmp
xchg
pop
push
pusha
mov
fisttps
mov
dec
jle
dec
hlt
scas
push
inc
outsb
adc
ret
daa
sbbb
orb
sub
es
xchg
pop
push
mov
cltd
daa
cs
pop
fadd
mov
sub
and
inc
ret
adc
cld
and
outsb
xchg
xchg
xor
push
push
mov
inc
dec
xor
and
loope
flds
mov
in
les
inc
xchg
jno
jmp
shll
push
std
pop
add
mov
add
and
xor
in
xchg
xchg
data16
pop
mov
aaa
inc
pop
and
adc
testl
add
imul
inc
push
or
in
add
add
addr16
stc
mov
push
cli
push
and
mov
pop
adc
or
and
pop
das
pop
pop
inc
mov
push
pop
mov
sbb
add
jge
lcall
dec
mov
cld
mov
sbb
cmp
mov
fsts
mov
sub
iret
loopne
ljmp
cmp
or
test
or
xor
sahf
aad
pop
imul
ficoml
mov
hlt
lds
mov
pop
fimuls
xchg
adc
iret
lea
out
xchg
pop
es
addl
sbb
xchg
sub
andl
in
in
cmp
add
icebp
jmp
cmc
aas
fisubrl
orl
or
aaa
enter
fmull
cmp
sbbb
stos
loope
inc
mov
mov
dec
movsb
mov
inc
push
and
inc
sbb
es
data16
add
cmpsb
and
cmp
addr16
push
fiaddl
sbb
data16
adc
or
repnz
xlat
sbb
leave
mov
sub
loope
out
jle
mov
mov
pop
loopnew
add
xchg
dec
out
jp
push
pushf
xchg
mov
cmp
lcall
push
aam
js
out
in
cmp
stc
fnstsw
and
aas
scas
das
mov
sub
lds
mov
or
push
lods
jg
ror
scas
in
sbb
jbe
int3
aad
sub
test
xlat
mov
push
movb
mov
mov
dec
pop
mov
movsb
jl
inc
scas
pop
std
test
aas
pop
aas
data16
mov
xor
xchg
in
sbb
cs
ljmp
arpl
add
jno
jg
add
xchg
jb
cmc
out
mov
arpl
shll
les
fmuls
test
mov
subb
jp
fs
ret
adc
cmp
in
add
xchg
dec
adc
mov
in
fstp
jge
daa
mov
daa
adc
cmp
cmpsb
mov
sbb
pop
shrl
and
mov
imul
jbe
adc
xlat
out
adc
sub
mov
idiv
push
cs
lods
ja
mov
cmpsb
inc
mov
xchg
fistps
loop
ret
xlat
cli
sahf
or
sbb
rcrl
xlat
adc
sbb
or
sbb
pop
inc
sbb
cmp
xlat
jb
xchg
jl
jae
pop
inc
push
jecxz
faddl
cmp
cmc
out
ret
orl
push
rcr
imul
dec
je
dec
mov
pushf
dec
push
in
fdivp
fnstsw
cs
arpl
push
mov
insb
outsb
jb
jle
fcmovbe
loopne
xor
sbb
inc
pop
test
push
stos
adc
ret
push
shlb
and
cltd
das
xor
mov
xor
mov
lds
cwtl
push
pop
cmp
xor
push
jmp
repz
daa
sbb
dec
add
insl
fiaddl
ljmp
mov
cmpsl
popa
stos
out
outsl
dec
sbb
in
mov
movl
cmp
fisttpll
les
sub
and
mov
filds
lock
test
pushf
rcrb
mov
sub
iret
shr
ret
mov
divb
and
push
lods
bound
dec
push
pop
jle
adc
push
xchg
push
cmp
cltd
pop
cmpsl
or
call
shlb
inc
stos
pop
inc
pop
jno
in
mov
ja
push
and
sub
lea
jl
fisubrs
cltd
cltd
push
pmuludq
pcmpgtd
pop
fiaddl
sub
mov
push
scas
inc
and
into
cmp
dec
mov
cmc
lock
iret
in
lds
sub
rcrb
pop
lahf
dec
loopne
iret
loope
inc
aas
lret
sarl
stc
or
lods
femms
in
ss
dec
jp
enter
mov
cmp
fdivr
cli
in
leave
std
lcall
mov
repz
sbb
pop
push
mov
std
das
sti
jp
mov
dec
mov
dec
lahf
popf
xchg
data16
stos
daa
ret
movsl
jne
cmp
add
enter
add
sub
push
iret
or
add
repz
xchg
and
mov
sbb
es
lahf
out
inc
pop
mov
inc
sbb
push
pop
addr16
adc
imul
dec
adc
daa
mov
bound
push
cmpsl
push
add
jb
loopne
out
inc
pop
movsl
cs
popf
pop
cmpsb
add
mov
jne
scas
mov
leave
movsb
arpl
ds
xlat
mov
push
popa
std
cmpsb
mov
daa
in
fs
pusha
xlat
mov
cmpsb
test
fs
mov
dec
inc
out
loope
sbb
dec
out
cld
mov
jge
mov
fmul
xlat
xchg
sub
loope
mov
es
cltd
mov
pop
xchg
lcall
and
mov
adc
es
pop
test
xor
inc
add
pop
daa
aaa
jecxz
pop
push
roll
cmp
ja
pop
and
and
mov
addl
pop
and
cmp
mov
add
std
xchg
dec
cmp
xchg
sbb
push
rcrb
dec
or
xchg
dec
pop
and
pop
cmc
popa
popf
sbb
or
cmp
mov
xchg
clc
mov
cld
aam
lea
mov
dec
pushf
pop
pushf
add
stc
jmp
adc
lea
outsb
mov
jns
fistps
dec
mov
sub
cmp
fwait
out
das
pop
pop
push
sub
mov
jge
mull
jno
push
push
outsb
add
lret
scas
das
sbb
and
inc
cmpsl
pusha
mov
inc
in
mov
and
mov
dec
test
push
cltd
shl
jle
xchg
xor
cmc
pop
fcoml
bound
dec
shll
fisubrs
adc
cld
sub
or
sbb
leave
push
and
lods
cs
clc
or
cmc
das
arpl
cmp
gs
mov
jmp
sub
push
mov
js
outsl
or
rcrl
add
lea
push
pop
cmp
lock
mov
test
lea
mov
aas
xchg
aad
and
shll
andb
cmp
stos
mov
test
outsb
mov
into
inc
mov
aaa
mov
adc
inc
ss
jno
pop
cmp
xor
sub
dec
outsb
pusha
inc
or
in
es
subb
adc
mov
divl
movsl
push
xlat
js
adc
xor
jb
mov
pushf
lds
xchg
cmp
or
les
dec
leave
mov
jne
inc
repnz
rcrb
dec
call
add
loope
mov
cmp
push
xchg
jle
sub
movsl
in
pop
jbe
icebp
out
jae
loop
ror
lods
es
fnstsw
or
cmp
aas
mov
or
cmp
xor
loop
pop
xchg
push
out
icebp
dec
inc
cmpsl
or
jno
mov
mov
imul
test
popf
pop
cltd
add
js
add
push
imul
mov
pop
sbb
mov
fidivrl
inc
mov
push
jo
mov
dec
jno
pop
in
pop
mov
mov
push
fmull
lods
push
mov
cmp
int3
xor
dec
pop
add
outsl
repnz
repnz
pop
mov
nop
hlt
jmp
mov
xchg
pop
lret
dec
out
cmp
jmp
in
mov
sbb
inc
jg
arpl
bound
add
ret
mov
mov
pop
lods
mov
xchg
call
xlat
sub
cmpsl
clc
notl
add
push
aas
fildll
fldenv
pop
outsl
and
mov
push
pushf
adcl
cmp
jecxz
cmp
and
or
js
stos
xor
or
xchg
dec
inc
or
rcll
and
leave
popa
mov
adc
ljmp
jg
jo
jbe
mov
push
adc
in
into
loopne
push
mov
cltd
sbb
ror
inc
push
push
push
movsb
cmp
xor
pusha
std
in
out
jmp
mov
mov
or
push
nop
in
ret
rolb
mov
call
js
mov
outsb
arpl
shl
pop
jecxz
sub
xor
xchg
or
fbstp
jmp
repz
jae
test
dec
push
sbb
addr16
loopne
or
sub
lret
mov
adc
push
cmpsb
sub
sbb
mov
cmp
call
jae,pn
jg
adc
adc
test
out
pop
sbb
push
adc
dec
mov
jp
mov
cld
push
xlat
sub
cmp
pop
mov
lea
xchg
les
mov
mov
ret
push
mov
movsl
jo
imul
xor
sub
or
inc
mov
lret
pop
fadds
pop
hlt
sub
insl
pop
adc
sub
aaa
je
push
fdivs
dec
lcall
or
or
repnz
testb
movsb
sbb
int3
mov
das
push
jne
lods
jno
sub
in
mov
or
add
loopne
fstl
ss
popf
in
mov
dec
mov
gs
xor
and
cmp
scas
data16
inc
test
clc
ja
jo
mov
mov
mov
cli
dec
mov
mov
sbb
stc
push
jbe
scas
push
push
ficoml
subl
lock
scas
cs
mov
and
imul
and
fldz
jl
inc
inc
inc
add
mov
dec
pop
jbe
lcall
xchg
cmpl
enter
bound
inc
pop
dec
pop
fisubs
add
popa
sahf
arpl
pop
ds
push
pop
in
popf
xchg
sbb
jns
inc
adc
in
lds
shr
jle
aaa
jne
mov
int
cmp
push
dec
jge
int
mov
mov
addr16
or
out
mov
and
loop
loopne
push
xor
cld
dec
adc
imul
or
rcr
jmp
aad
sub
and
shrl
test
cwtl
push
pushf
fwait
mov
popf
add
pushf
inc
jno
cmp
lods
push
nop
fildl
push
cmp
rclb
xchg
stc
scas
xchg
jmp
and
out
cmpsb
pop
into
cmpsl
mov
imul
faddl
jns
xchg
mov
or
xchg
lods
test
or
testb
cwtd
icebp
data16
mov
setns
fsubrl
cltd
pop
add
adc
xchg
cwtl
dec
fldenv
xor
cmp
inc
xor
shlb
xchg
popa
or
adc
xchg
ficomps
int3
pusha
pop
cmp
aad
sbb
test
test
stos
shll
adc
aas
inc
loope
js
xor
in
out
les
es
subl
das
lret
xchg
int3
cmp
cld
popf
shlb
outsl
les
mov
inc
repz
lock
sub
jl
aaa
out
out
fcoms
hlt
push
incl
dec
sub
and
add
lahf
mov
loope
jb
jp
dec
in
mov
jo
cmpsb
mov
or
dec
and
sahf
fsub
int
xchg
mov
sub
ret
jmp
cmp
dec
aaa
mov
push
mov
sbb
js
rorl
adc
ret
lcall
ss
mov
sahf
pusha
sub
sub
mov
imul
mov
xchg
pusha
insb
jl
dec
mov
cmp
lret
test
scas
push
mov
sub
incl
mov
es
dec
xlat
repz
test
imul
dec
gs
stos
in
pop
pop
and
cwtl
mov
mov
inc
cmpl
scas
mov
add
jnp
sub
cmc
int3
cmp
enter
cmpsb
dec
pop
dec
ds
jns
mov
jb
int
jns
jl
and
sub
outsb
jbe
xlat
cs
insl
out
arpl
lsl
adc
add
fistl
dec
leave
push
aas
scas
push
sbb
mov
dec
in
pop
inc
stc
test
sbb
clc
arpl
mov
jno
mov
cld
iret
sub
mov
les
and
inc
mov
fcomi
scas
xchg
xchg
cmp
test
cmp
sub
fldt
pop
out
mov
jnp
mov
andb
push
sub
sub
call
inc
or
jmp
ljmp
xchg
or
lds
jecxz
dec
mov
push
lret
cmp
adc
cli
ds
xchg
cmp
mov
je
and
mov
test
outsb
mov
xchg
mov
ljmp
imul
xor
mov
sbb
xor
clc
ss
fildl
xor
push
fcoml
in
dec
rolb
pop
xchg
mov
cmp
stc
outsl
dec
push
jae
xlat
mov
outsb
pop
and
cmpsb
xlat
push
out
inc
shll
add
loop
xchg
ss
jae
out
stos
jb
adc
inc
add
scas
js
fldln2
imul
sub
xor
out
in
cmc
movsb
xor
js
outsl
jle
sbb
dec
addr16
inc
mov
mov
int3
pop
addl
adc
lret
enter
imul
add
mov
inc
mov
sub
sub
mov
movsb
cmc
movsl
xchg
add
push
in
aas
pop
into
mov
push
dec
push
jle
xor
rorl
push
adc
inc
iret
adc
push
cmc
mov
jecxz
sbb
inc
cmp
ja
xchg
arpl
adc
leave
sbb
push
call
cltd
in
cltd
xchg
pop
in
ret
cwtl
das
adc
pop
inc
xor
push
adc
mov
cwtl
xor
dec
dec
arpl
out
add
outsl
shlb
shlb
push
arpl
or
mov
out
sahf
mov
mov
pop
or
xor
jg
pop
scas
stos
lods
sbb
ja
mov
add
div
jbe
and
pusha
iret
jae
mov
ljmp
fisubrl
push
cmc
in
push
iret
lds
addl
mov
mov
fistpll
sub
inc
stos
negl
arpl
add
sub
cli
pop
lcall
sub
shlb
sub
pop
dec
fisubrl
pop
mov
sbb
jle
roll
fwait
or
mov
xlat
repnz
xlat
cmp
shrl
arpl
or
push
into
add
mov
xor
fmul
jns
test
mov
mov
mov
jl
int
mov
aas
test
xor
and
jmp
mov
popa
stos
pop
gs
std
jmp
cli
pop
js
popf
rcl
pop
movsb
test
loope
test
addr16
and
mov
pop
arpl
or
rcl
cmp
cmpsb
jo
jo
sahf
mov
mov
jne
adc
mov
int3
sarb
push
jb,pt
addl
jg
pop
repz
mov
in
mov
es
repz
sbb
dec
mov
pop
inc
loope
dec
fsubl
mov
sub
sub
mov
loope
mov
aam
rorb
filds
clc
call
sub
out
rcll
shl
mov
jmp
pop
push
push
add
adc
mov
ja
outsl
inc
aaa
mov
iret
push
push
xor
xor
mov
push
in
imulb
adc
rcl
addl
pop
and
add
stos
inc
daa
inc
ret
dec
ljmp
and
fists
inc
mov
adcb
xor
loope
mov
cmpsl
mov
sub
or
aam
inc
imul
test
mov
jno
cmp
jo
sub
mov
test
mov
xor
or
scas
cmpsl
xor
jmp
aam
push
mov
decl
or
jg
or
decb
loope
outsl
mov
pushl
xchg
pop
jb
or
jle
xlat
popa
ss
enter
xor
in
sub
js
outsl
insl
cmp
sub
out
xor
fsts
jns
pushf
outsw
xchg
repz
fcompl
insl
jecxz
leave
inc
lahf
adc
aam
mov
cld
mov
dec
pop
shlb
jge
mov
push
mov
or
cwtl
iret
push
inc
cmp
adc
repz
jbe
cltd
xor
adc
out
pop
insb
mov
fs
dec
sbb
jmp
in
in
cmp
pop
push
adc
sarb
into
ds
loop
test
lds
popa
jns
pop
rorb
in
mov
aaa
mov
leave
dec
outsl
enter
aas
pop
dec
testl
ret
sub
les
push
scas
mov
sub
addr16
sub
mov
mov
cmp
add
enter
sbb
dec
clc
ljmp
shl
mov
push
cltd
hlt
pusha
outsl
push
clc
pop
in
fldt
mov
mov
pop
stos
push
imul
lods
fadds
lcall
ja
pusha
aam
or
das
mov
dec
xor
xchg
add
rol
add
decl
mov
jo
lods
jae
pop
lahf
pop
mov
xor
pop
cld
xchg
mov
ret
js
push
and
xchg
ret
push
jl
pop
cmpsl
loope
jbe
fs
xchg
mov
inc
cwtl
test
movsl
test
imul
mov
jmp
push
xchg
fildll
fldt
jl
cmc
adc
sbb
jae
and
js
incb
imul
mov
shlb
mov
jp
stc
pusha
cmp
or
jnp
and
pusha
shrb
dec
arpl
cltd
and
addb
fistl
adc
scas
sub
pop
dec
outsb
bound
repz
jmp
shll
xor
ret
sub
xchg
sub
outsb
dec
ficompl
stos
scas
std
cmp
das
jnp
imul
xor
jecxz
imul
in
adc
addr16
mov
fidivrl
out
dec
fisubrs
add
inc
inc
and
loop
fs
lods
cmc
outsl
cwtl
ss
mov
jl
movsb
in
jnp
xor
push
inc
data16
sti
adc
mov
push
in
aad
mov
fisttpll
adc
mov
testl
and
pop
dec
and
es
aas
adcb
mov
xchg
std
sbb
xchg
mov
in
mov
bound
adc
push
fldenv
insb
or
dec
jl
fadds
inc
inc
pushf
dec
sbb
mov
adc
or
jp
mov
insb
add
fmuls
sub
rcrb
xchg
push
lahf
inc
pop
jg
sub
movsb
dec
pop
pop
sub
inc
mov
lods
fs
enter
push
pop
xor
and
mov
gs
aad
ror
addl
mov
dec
inc
repnz
mov
sub
xchg
js
jl
out
adc
push
pusha
fsubs
mov
push
sub
mov
fwait
mov
or
cs
seto
imul
dec
push
fs
sub
mov
out
mov
popf
out
icebp
mov
aam
pop
popa
pop
pop
sbb
mov
xor
adc
std
outsb
insl
xchg
mov
imul
int
pop
dec
adcb
mov
cld
push
mov
cmpsb
xchg
mov
adc
jp
nop
stc
scas
jb
outsl
in
out
xchg
mov
roll
cmp
stc
xchg
arpl
sti
imul
sub
dec
js
mov
mov
and
dec
xor
adcl
ja
jns
dec
jae
mov
push
lods
xor
push
push
inc
xor
cmp
add
in
aaa
int3
mov
addr16
or
dec
jae
stc
jle
pop
mov
cltd
cmp
pop
jne
std
arpl
popa
in
cvtdq2ps
xchg
daa
mov
add
mov
add
cmc
jbe
arpl
add
jl
in
and
fists
out
sbb
jmp
xor
in
mov
icebp
je
jl
nop
lcall
mov
inc
inc
orb
test
xor
into
out
repnz
sub
pop
cltd
pop
fsubs
and
rorl
stos
xor
movsl
mov
das
adc
jge
mov
sub
subb
mov
iret
jno
sub
cmp
lods
lret
aam
mov
cmp
leave
shlb
fadds
dec
sbb
lcall
xor
inc
in
dec
fstpl
xchg
and
mov
shrl
dec
fst
mov
es
ja
jns
or
je
and
dec
cltd
jle
mov
cli
ret
cmp
mov
mov
movl
jbe
imul
cmc
arpl
loopne
das
es
scas
fs
push
sub
adc
sbb
xor
add
test
cmpsl
mov
fistl
jecxz
sub
sarl
mov
xchg
adc
lods
imul
pop
dec
xchg
mov
movsb
inc
in
out
jb
test
cld
sahf
xor
dec
cmpsb
sahf
movsl
or
call
mov
or
and
jmp
dec
movsl
lods
mov
shr
in
ret
loope
adc
lock
outsb
xor
pop
loope
int
and
and
push
inc
imul
rcll
movsl
mov
jmp
in
lock
xor
fcomp
idivl
jp
jp
dec
or
jecxz
js
int3
lcall
jmp
imul
mov
push
pop
jecxz
inc
inc
xchg
lcall
dec
ret
jo
movsb
xor
sti
cmc
insb
imul
cs
xchg
jmp
test
out
mov
cmp
mov
pop
fstl
nop
daa
or
inc
inc
mov
test
pop
inc
jmp
bnd
jo
push
sti
mov
mov
outsb
pop
mov
orb
xchg
lret
loope
sbb
iret
add
jecxz
cmc
les
jnp
scas
inc
ss
lods
sahf
outsb
dec
pop
repz
mov
lcall
push
mov
pushf
dec
cmp
loope
in
arpl
cmpsl
mov
mov
jmp
xor
xchg
std
and
inc
adc
out
mov
jb
pop
aad
add
push
push
push
lcall
fwait
add
cmp
cmpsl
cmc
push
mov
ret
and
ret
jae
mov
cmp
imul
sub
out
cltd
stos
pop
aad
pusha
cmc
fs
xchg
inc
repnz
mov
out
fadds
mov
mov
inc
push
cmpsb
inc
nop
insl
lahf
lock
add
add
jb
mov
xor
push
push
hlt
loope
shlb
mov
int
in
lcall
mov
in
movsl
adc
gs
adc
loope
into
sahf
fisubrl
std
gs
adc
aam
in
cmp
xor
push
cpuid
push
iret
ss
ret
push
lods
pop
shll
in
loop
rolb
rcr
inc
xchg
mov
push
pop
push
sar
xchg
mov
arpl
in
mov
cmp
vphaddudq
push
mov
push
out
outsb
inc
sub
fldenv
xor
ljmp
in
movsb
cli
add
and
insl
mov
adc
mov
outsl
ja
jmp
inc
jmp
push
jmp
imul
adc
push
inc
les
addl
inc
into
xlat
or
push
lds
sbb
leave
pop
jmp
and
push
daa
ret
lret
or
ja
call
mov
sti
xchg
and
out
dec
shrl
js
ljmp
lods
xor
inc
xor
xchg
mov
das
cs
mov
sbb
push
enter
loope
and
push
mov
push
pop
adc
scas
dec
push
mov
cmpsl
inc
push
scas
push
lods
cmc
mov
stos
cli
aaa
stc
sbb
scas
repz
ss
adc
inc
or
fiadds
gs
fcoml
cmp
pop
or
push
inc
scas
fld
push
add
repz
sti
scas
je
mov
xor
call
outsl
inc
stc
lds
mov
adcb
fwait
aad
push
shr
pop
clc
sbb
in
outsb
and
or
pop
or
mov
add
xor
idiv
repnz
jmp
add
inc
test
push
stc
adcb
jae
or
out
lret
pop
insl
and
or
cmpsl
out
sub
add
xchg
sti
xor
int3
stos
into
jmp
and
pop
dec
jmp
jo
mov
push
mov
and
cmp
pop
cmp
loope
aaa
mov
lcall
fidivl
mov
test
dec
push
mov
mov
and
pop
movsl
enter
loope
cwtl
lret
in
imulb
lock
push
mov
sub
call
mov
insb
and
outsb
mov
sub
ljmp
clc
repnz
and
fwait
inc
push
inc
lea
mov
xor
ret
mov
ret
cmp
add
ljmp
xchg
inc
mov
ret
and
js
push
dec
push
sub
lods
xorl
inc
in
or
insb
dec
pop
iret
inc
fdivs
mov
pop
dec
stos
into
mov
adc
into
iret
scas
das
les
jmp
mov
sub
mov
inc
push
jecxz
bound
push
into
ja
ret
cs
loope
scas
mov
lock
push
adc
insl
sbb
lcall
popa
rcl
testb
popa
out
call
les
jne
push
push
jo
pop
movsb
movsl
jge
dec
movl
lahf
cwtl
enter
cmp
xor
sar
cli
ds
mov
adc
shll
add
dec
xchg
jl
ds
dec
mov
incb
sar
insl
add
inc
mov
or
inc
mov
and
leave
xor
sbb
adc
lret
add
lds
repnz
adc
cwtl
cwtl
sbbb
lods
xchg
mov
jg
movsl
stc
xor
leave
sbb
push
push
adc
les
sub
fildll
es
icebp
xchg
xchg
scas
mov
inc
mov
mov
fwait
cmp
test
int3
jne
mov
push
sbb
jmp
lret
loop
jecxz
add
je
das
jnp
cli
out
dec
push
pop
out
hlt
rclb
dec
xor
testl
mov
loopne
add
sbb
pop
add
sbb
fimuls
push
mov
mov
aaa
les
jmp
add
mov
mov
sub
jecxz
adc
xor
add
mov
mov
insb
mov
xchg
mov
sbb
in
xchg
cmp
test
fbstp
mov
push
ss
mov
roll
or
data16
ret
adc
jle
or
rclb
cltd
mov
fdivrl
bound
cwtl
inc
add
fiadds
cli
push
scas
mov
or
lret
jge
outsl
cmc
cwtl
cmp
add
jno
cmp
jecxz
pop
mov
arpl
and
jmp
xchg
push
sbb
leave
out
in
sub
aad
adc
push
insb
sarl
movsl
adcl
jg
daa
push
and
dec
insl
mov
sbb
insb
lds
push
push
scas
pop
adc
rcrl
repz
mov
xchg
fldl
lock
or
and
cltd
lea
sub
scas
rol
xchg
xchg
mov
or
in
or
pop
lcall
mov
add
lods
cmpsl
push
dec
sub
pop
cmpb
jbe
insl
sub
pushf
scas
mov
mov
xor
cli
cld
push
out
sti
xor
insl
lods
push
loopne
xor
push
movsb
sbb
xor
xchg
dec
movsl
push
test
mov
imul
cmp
xchg
jp
cld
lret
repnz
aaa
aam
inc
das
mov
jp
pop
mov
fistps
mov
xchg
jb
fsubr
lret
lret
in
or
cmpl
or
pop
sbb
sub
movups
lock
mov
popa
xchg
mov
insl
xchg
xor
sbb
test
or
or
rorl
cltd
xor
push
add
pop
jmp
jle
jnp
push
in
inc
add
jecxz
cs
jle
nop
xor
arpl
mov
out
in
pop
movsb
cmpl
sbb
sbbb
sub
insb
push
repnz
add
mov
lods
pop
lcall
push
xor
mov
das
out
cmp
out
mov
aad
xchg
pop
imul
pop
cld
sahf
mov
dec
ret
xor
loop
mov
popa
jno
xor
xchg
xchg
pop
aas
adc
mov
jo
incb
cmp
sbb
push
pop
test
push
mov
mov
test
stc
push
push
xor
sbb
cmpsb
out
stos
fs
sarb
test
fstl
xor
mov
fs
push
les
cmp
sub
xor
js
cmpsb
push
pop
fidivrl
mov
inc
dec
pop
data16
inc
adc
or
sub
sbb
cmp
and
mov
sub
andl
pop
nop
addr16
popa
sbb
ficomps
ret
int
insb
shrb
aas
jae
in
lods
and
push
lret
inc
and
and
xorb
mov
xchg
mov
imul
dec
test
or
dec
cwtl
push
sbb
xor
lcall
lds
mov
cmp
cld
cmpsb
inc
or
pop
or
cmpsb
pop
lret
inc
xor
jecxz
mov
mov
jo
fldl
sub
push
cltd
sarl
leave
stc
ds
repnz
popa
fdivl
dec
cld
adc
dec
push
mov
leave
cli
cld
outsb
cmp
mov
or
or
outsl
insl
inc
adc
faddl
out
pop
sub
ja
mov
scas
inc
shrl
insl
mov
fsubl
jle
mov
lahf
add
adc
shlb
push
mov
push
inc
mov
jno
push
stos
add
or
es
out
adc
roll
inc
sbb
add
jno
dec
mov
shl
movb
bound
dec
jmp
fwait
mov
das
lret
pop
push
lds
and
mov
cmp
jge
sbb
pop
xchg
dec
scas
mov
or
push
sahf
xor
or
stos
add
push
repnz
cmc
cs
cmp
int3
fimull
lods
jne
sub
movsl
mov
sbb
adc
jmp
adc
sub
inc
xchg
pop
pop
jg
out
add
repnz
and
aad
aaa
aaa
mov
sbbl
or
dec
ret
add
pop
cmpsl
stos
test
aaa
sbb
push
jne
hlt
fcmovb
out
std
xor
jns
dec
and
pop
mov
pop
dec
fcoml
mov
inc
jge
inc
loope
es
clc
xor
in
fldenv
callw
dec
or
stos
ficomps
mov
clc
pop
sub
push
pop
and
push
repnz
into
lods
stc
push
movsl
mov
int3
xchg
cwtl
add
sub
sub
popl
sbb
mov
mov
leave
test
stc
xor
les
aam
inc
lahf
lret
sbb
ljmp
add
mov
lret
bound
jle
mov
popa
pop
sub
rcrl
popa
shlb
out
pop
or
xor
push
push
test
push
cs
and
dec
push
jge
xor
int3
jno
lahf
or
call
pop
jns
insb
jno
ds
add
aad
xchg
mov
jl
push
ficoml
sub
test
sbb
push
ja
cmp
nop
inc
cmc
jl
mov
pop
cld
ja
lds
fimuls
out
cmp
xchg
xchg
mov
ret
aad
stos
pop
jae
jne
lcall
in
aad
insl
es
pop
shrb
mov
roll
stc
xchg
rclb
lret
dec
out
aad
pop
int3
mov
add
xor
mov
mov
push
rorl
imul
cld
mov
xor
pop
je
xchg
and
cmc
pop
dec
xchg
mov
ret
loope
out
in
fimuls
adc
mov
ss
jae
jl
push
xchg
xchg
in
in
xor
icebp
nop
mov
add
inc
lods
filds
adc
or
cmp
dec
mov
jecxz
cltd
fsubrl
push
test
mov
cli
arpl
dec
add
cmp
sbbl
subl
dec
add
clc
insb
lods
xchg
lods
xchg
ror
ss
adc
mov
adc
cmpsl
ds
aaa
mov
inc
pop
cld
das
les
test
adc
inc
out
or
xchg
sar
ss
adc
stos
pop
mov
cmp
and
pop
inc
adc
push
fstpl
jmp
add
cwtl
jae
or
adc
lret
dec
adc
or
sti
mov
rclb
iret
or
int3
in
popf
sti
lret
lods
cld
or
sub
xchg
mov
shl
sbb
adc
and
push
lock
cmpsb
pushf
mov
hlt
aas
leave
js
fmull
xchg
or
or
mov
sti
dec
push
in
mov
stc
mov
mov
xor
adc
icebp
xchg
es
insb
sub
test
scas
mov
dec
and
les
jb
imul
es
cwtl
push
xor
ljmp
cmp
imul
arpl
xor
push
outsb
mov
mov
ret
push
imull
roll
mov
adc
insb
mov
std
enter
dec
add
cmp
xchg
sub
inc
sbb
or
cmp
jo
jns
pop
xchg
fmuls
data16
add
adc
xorl
cmp
mov
sbb
mov
xchg
push
mov
pop
jle
mov
outsl
mov
xor
mov
insl
or
dec
lahf
push
mov
adc
cmpsb
pop
add
inc
rolb
outsl
lcall
adc
inc
lods
dec
inc
mov
xchg
scas
xchg
inc
xchg
xchg
adc
mov
lret
negb
movsb
jg
jo
aas
imul
sbb
add
xchg
jmp
cmp
nop
pop
sahf
inc
pop
out
and
jg
push
cmp
or
sbb
inc
ror
and
outsl
ljmp
cmp
clc
cmpsl
call
add
or
adc
inc
call
or
and
dec
cmpb
jle
jp
loope
push
addr16
or
aas
es
in
mov
cwtl
adc
stos
outsb
subb
sbb
xor
jnp
dec
fstpl
shrl
mov
xor
int
out
hlt
mov
pop
test
fprem1
cmpsb
dec
fiadds
pop
jp
inc
dec
stc
push
push
icebp
mov
adc
sarb
mov
mov
call
mov
xor
stc
sbb
imul
fdiv
mov
mov
scas
cld
mov
or
dec
cmc
daa
in
add
insl
loope
insl
xchg
jle
xor
les
lods
shrb
out
mov
dec
mov
lret
repnz
mov
xchg
dec
std
pop
divl
ret
sub
lds
dec
ss
test
cmpsb
sarl
sbb
inc
and
inc
loop
test
mov
push
out
jns
out
mov
pop
mov
xlat
pop
push
cltd
test
xchg
divl
dec
pop
inc
fdivr
sti
bndstx
or
pop
mov
out
int
mov
push
push
pop
sbb
mov
dec
movsb
add
dec
xlat
jno
shrb
and
ljmp
sarb
or
pop
sahf
adc
cmp
imul
xor
data16
call
push
jae
dec
jecxz
xlat
lods
lahf
aad
mov
cmp
sbb
pop
ja
mov
into
and
shl
hlt
js
push
or
sbbb
and
icebp
pop
mov
mov
daa
loope
lods
inc
xor
push
shrl
mov
cmpsl
aas
in
cwtl
push
ror
xor
cmpsl
sahf
in
inc
lea
fs
outsb
mov
rcrb
sbb
and
test
push
push
stc
test
imul
popf
mov
mov
pushl
mov
fisubs
sbb
or
cmp
in
mov
addb
fwait
adc
dec
stos
inc
add
fst
jg
lcall
das
mov
fdivrs
mov
push
adc
lea
inc
mov
mov
cmpsb
push
dec
gs
mov
lahf
sti
xor
xchg
jg
inc
xorb
xchg
mov
xchg
ljmp
sti
push
adc
psubusb
push
loope
fisubrl
push
xor
mov
cmp
mov
sub
dec
sub
xchg
roll
divl
std
mov
inc
or
push
push
mov
ret
sub
pop
loop
rep
into
loop
fistpl
ljmp
movsb
cmp
add
fildll
fwait
stos
dec
sbbl
inc
imul
fstps
imul
add
inc
in
push
test
test
ret
lock
xchg
adc
mov
imul
mov
js
addps
pop
data16
int3
pop
loopne
add
and
push
das
sub
arpl
and
pop
lea
in
sub
stos
push
dec
in
lock
ror
dec
scas
mov
mov
sbbb
xor
repz
jp
insb
mov
scas
inc
int3
fdivrs
hlt
fwait
hlt
daa
scas
xor
ds
mov
jae
out
loop
inc
fs
out
xchg
cwtl
sub
insb
jle
imul
xchg
cmc
pop
xchg
mov
mov
iret
loopne
mov
sbb
loop
add
loopne
lahf
sbb
jne
mov
or
push
adc
cs
pop
sub
mov
nop
in
cltd
ss
xchg
and
test
fidivl
in
scas
add
aas
cmp
outsl
mov
cmp
xchg
fisubl
popf
add
dec
sub
adc
clc
mov
mov
push
fwait
pop
mov
addl
lahf
ja
les
adc
stos
popf
cld
lret
sub
in
dec
and
pushl
and
cmp
test
orl
mov
xlat
js
mov
add
mov
adc
lods
hlt
repnz
or
and
out
cltd
cmp
xchg
push
addl
bound
jle
test
in
lret
ljmp
out
inc
outsb
jo
mov
sbb
inc
bound
rclb
mov
dec
in
out
dec
sub
inc
cmp
add
push
sti
insl
push
aad
cmp
mov
inc
sbb
les
sbb
iret
dec
lret
imul
outsb
or
xor
dec
pop
mov
push
jmp
cmpsl
lcall
fidivl
test
and
out
iret
stos
and
leave
fdiv
push
pop
popf
shr
mov
inc
mov
jg
or
xorl
pop
popa
test
pop
mov
lcall
mov
pop
mov
fwait
adc
xchg
lea
enter
shrl
cld
cs
imul
stos
jmp
jecxz
xchg
adc
outsb
fbld
pop
sbb
inc
xchg
adc
xor
mov
idivb
cmp
xchg
test
sahf
jge
bound
call
mov
lods
call
push
mov
push
push
orb
pop
shrb
jl
cmp
or
into
add
pop
dec
movsl
jbe
scas
xor
stos
push
dec
lret
mov
pusha
cli
movsb
jg
sbb
lahf
cmp
pop
arpl
inc
inc
ret
xchg
sub
scas
cmc
push
cld
inc
ret
mov
pusha
inc
push
dec
and
mov
and
mov
jno
inc
inc
je
out
inc
adc
outsl
and
lds
pop
jnp
mov
pop
push
xor
cli
push
cmpsb
pop
dec
lock
cwtl
mov
jle
dec
push
sbb
jmp
adc
test
out
imul
cmc
and
adc
mov
push
jp
sti
mov
bound
pop
roll
std
sarb
inc
xchg
sbb
mov
in
dec
pop
adc
addr16
sbb
mov
jno
and
xor
mov
sub
dec
in
aas
aaa
bound
in
addr16
push
or
mov
jl
mov
dec
shlb
add
inc
or
push
pop
iret
enter
pop
scas
mov
cmpsl
add
movsb
icebp
in
bound
cltd
shl
bound
or
mov
je
sub
dec
clc
fisubrs
and
jg
mov
pop
aam
or
hlt
cli
aaa
or
outsb
leave
sahf
je
notb
dec
mov
mov
mov
dec
popf
ljmp
ret
repz
jge
pop
mov
mov
jbe
fs
test
mov
push
jmp
test
pop
jns
jmp
movsb
cmp
insl
push
sti
adc
fcompl
pop
mov
repz
xor
inc
push
cmpsb
mov
lret
xchg
aad
push
ret
mov
jns
mov
push
sub
insb
xor
ret
add
cld
push
xor
or
ret
lods
loop
or
and
and
add
sub
es
clc
push
aam
sub
fsubl
popf
push
push
popf
imul
or
push
dec
mov
into
and
lods
imul
scas
sbb
loope
sub
mov
push
pop
mov
mov
gs
adc
sbb
call
adc
enter
cmp
out
mov
push
jmp
stos
xor
dec
xchg
repz
call
mov
test
jno
sbb
mov
inc
sbb
pop
push
enter
iret
in
stos
sbbb
add
sbb
inc
idivb
pop
test
jle
sub
jns
sub
add
mov
sbb
pop
fwait
mov
in
lods
jae
push
cltd
add
pop
aam
jmp
xorl
stc
addr16
xchg
push
loope
adc
repnz
fldenv
iret
aas
xchg
pop
xor
xor
in
sbb
mov
xchg
fidivrl
and
aas
or
sub
imul
outsb
cmp
xor
sub
sbb
jno
je
lret
les
mov
cmp
and
dec
lds
xorb
out
add
mov
test
mov
test
iret
rclb
cmpl
jmp
sub
out
dec
pusha
add
mov
insl
sub
daa
xor
inc
test
cli
aad
sbb
shrb
cmpsb
stc
lret
std
pusha
add
pop
or
xchg
push
out
pop
cltd
in
pop
pop
mov
xchg
mov
jl
inc
push
ltr
ficomps
pop
xchg
sbb
mov
test
push
not
mov
adc
lret
xor
popa
cmc
add
test
cmp
loopne
repnz
iret
ja
ret
stos
xor
or
pushf
cmpsb
mov
mov
out
mov
add
movsw
mov
dec
movsl
jno
mov
sub
mov
int
sbb
mov
and
and
testb
je
jb
loopne
fucomi
ljmp
rol
fsubrs
add
jb
or
fiadds
in
sub
movsb
pop
mov
add
cmpsb
lock
nop
xchg
sbb
pop
adcl
lahf
test
mov
shl
cwtl
mov
xchg
aad
jno
stos
adc
xor
aas
adc
mov
fs
pop
loope
out
popf
xchg
push
cmp
xlat
loopne
push
xor
pop
sub
rorl
iret
xchg
pop
dec
xchg
adc
adc
sbb
pop
jmp
jle
mov
cmc
mov
insb
cld
sub
roll
call
dec
scas
or
sar
sbb
pop
add
jmp
imul
push
fdivl
push
outsb
into
call
mov
push
out
hlt
xor
gs
or
rorb
sub
jp
outsb
inc
jge
and
movsb
or
mov
inc
insb
test
ret
mov
push
clc
call
sbb
arpl
testl
dec
sar
lahf
push
out
addb
out
push
fbstp
std
sbb
inc
or
push
xor
inc
sub
mov
adc
or
jns
inc
sqrtps
ja
adc
mov
stc
mov
je
ds
mov
push
lea
and
adc
push
sti
movsb
loope
add
xchg
test
sub
ss
push
adc
adc
shlb
adc
dec
std
jg
fcoms
test
imulb
bound
cld
push
inc
pop
popf
das
cltd
repz
pushf
fidivs
xchg
or
lcall
test
cmpsb
test
jg
inc
movsl
icebp
xor
mov
or
xchg
test
shlb
scas
push
in
popa
ss
adc
push
xchg
cmp
or
icebp
popf
imul
add
sbb
loopne
xchg
jne
int3
cmp
cmp
icebp
outsl
imul
mov
jle
cmp
jmp
flds
jmp
sub
dec
add
shl
scas
dec
jecxz
rcrl
sub
jne
and
aaa
xlat
mov
mov
jne
or
ljmp
in
adc
dec
add
mov
outsb
push
pop
cmp
aad
test
push
mov
int
cmpsl
inc
pop
mov
adc
jle
test
mov
mov
and
fcmovb
and
and
pop
ret
pop
sbb
aad
fcoml
pop
in
repnz
jmp
jo
shrb
notl
out
mov
cmp
push
les
hlt
jg
or
repnz
out
xor
frstor
cmp
jne
mov
sarb
sub
jno
cs
mov
inc
push
int3
xchg
fisttpl
test
shll
pushf
sub
cli
orb
push
dec
sub
call
pop
lret
test
cmpsl
ficomps
sbb
je
leave
hlt
aas
in
sbb
pop
dec
insl
popf
or
lods
jmp
jae
rclb
das
adc
test
outsb
add
inc
dec
adc
xchg
lahf
outsb
test
xchg
pop
js
dec
push
jb
aam
fcmovnu
inc
test
dec
lea
xchg
jo
mov
or
dec
push
add
and
arpl
push
mov
loopne
cld
jbe
std
adc
out
inc
je
pop
shr
sahf
ljmp
shll
insb
pop
dec
mov
testl
xchg
mov
adc
mov
cmp
fsubrl
and
mov
jb
rorl
mov
in
sbb
fwait
pop
rcl
add
out
leave
das
xor
and
jl
fmull
je
cs
jg
mov
les
lret
push
cltd
mov
les
out
ljmp
je
mov
inc
add
or
sahf
lahf
jl
push
cmp
cmp
sbb
mov
int
cli
jb
push
push
or
xchg
das
loopne
jg
xlat
ds
das
icebp
jg
add
push
mov
fstpt
sahf
xchg
mov
inc
dec
mov
sub
pop
sbb
push
mov
imul
mov
mov
lds
js
xchg
cmp
repz
inc
sub
sbb
pop
cmp
fsts
xchg
sub
into
mov
adc
mov
popa
movb
mov
lea
mov
loop
and
stos
popf
cmp
js
negl
jmp
pop
adc
out
mov
xchg
loopne
dec
mov
out
mov
bsf
inc
jb
adc
es
or
push
sub
sub
push
jmp
adcl
push
stc
test
cmp
lret
xchg
mov
adc
daa
lahf
imul
and
or
movsb
jb
pop
in
out
inc
clc
repnz
push
aad
jp
lea
inc
std
ret
aaa
fldcw
mov
imul
shl
pop
pop
arpl
mov
sbb
lock
das
dec
fmuls
lds
loope
pop
mov
mov
dec
mov
incb
fdivp
pop
jo
mov
xchg
sahf
push
imul
and
jns
xchg
adc
cmpsb
xor
rcr
adc
sbb
pop
dec
testl
mov
mull
or
leave
shlb
les
lcall
rcrb
outsb
sub
inc
dec
fcomip
ret
outsb
xchg
je
dec
daa
and
jae
int
xchg
aad
rorb
lret
bound
outsl
sbb
movsl
and
lahf
push
mov
sub
lahf
xchg
sbb
mul
adc
icebp
dec
cld
lods
add
or
test
into
or
add
movsb
ss
dec
sti
inc
fstpt
arpl
jge
cltd
popl
fsts
cmpsl
in
orb
cmp
fsub
lock
addl
shrb
push
sbb
mov
add
mov
call
or
lods
jns
mov
ret
xor
inc
leave
in
ja
daa
loope
lret
mov
fcmovnu
pop
sbb
sbb
mov
enter
jl
or
cmp
movsb
outsb
addr16
pop
jge
insl
mov
mov
test
and
in
lret
push
dec
fdivrs
stos
addr16
out
leave
ds
adc
pop
jl
mov
sbb
jns
xor
cmp
out
mov
jo
xchg
je
les
mov
andl
or
into
fcompl
push
in
rcll
pop
adc
int3
dec
test
movsb
in
bound
cmc
mov
mov
pop
pushf
data16
shr
adc
pop
adc
xchg
jns
adc
es
push
pushf
fmuls
lods
jb
add
mov
leave
sub
daa
decb
cmpsl
neg
push
aam
ljmp
ret
jne
test
mov
sahf
mov
sbb
xchg
jne
lahf
jno
push
aam
fldcw
pop
hlt
int
sub
adc
mov
dec
cmp
fstl
popf
test
and
or
pop
mov
insb
pushf
out
aas
mov
std
or
sub
je
jp
btr
rcll
push
jbe
sahf
pushf
mov
mov
mov
lods
inc
sbb
pop
lcall
sti
test
pop
sbb
std
mov
sbb
in
movsl
out
push
clc
sub
or
fstps
rorl
push
outsl
int3
daa
fisttpll
cltd
inc
in
sub
icebp
pop
pop
repnz
pop
inc
in
add
sub
mov
xchg
mov
cwtl
daa
and
jp
adc
sbb
loop
fcompl
outsl
mov
jmp
imul
ret
and
push
fwait
push
int3
xchg
outsb
shll
pusha
lcall
mov
fwait
push
xor
mov
adc
dec
cmp
pop
push
pop
cmpl
sbb
sub
pop
and
rcrb
lret
or
aam
xor
and
scas
insb
inc
dec
addb
iret
pushf
negb
loopne
pusha
out
cmp
cmp
cmpsb
aad
fwait
sub
bound
add
xchg
clc
xchg
cld
ljmp
fcoml
and
xor
pop
stc
jp
cmp
push
insb
cmpsb
inc
cld
xor
jg
inc
cltd
jmp
sbb
cmpsb
dec
lcall
add
loop
cltd
sub
xchg
sub
dec
xor
scas
add
xchg
pop
pop
or
out
testb
adc
mov
sar
mov
inc
mov
fwait
xor
out
adc
cmp
lret
cmp
loope
inc
xor
mov
dec
push
sub
imul
adc
sub
mov
lcall
pushf
pushf
push
cli
test
mov
push
cmp
jg
mov
cmpsb
data16
popa
movl
lods
mov
xlat
sbbb
stc
in
jmp
les
movsl
rorb
pop
cmp
inc
iret
adc
mov
mov
push
mov
dec
rcr
push
cmpb
nop
jecxz
xchg
jle
in
mov
inc
les
push
jp
sub
shlb
jge
inc
mov
repz
dec
and
mov
and
insb
lea
lahf
xlat
aam
or
aas
sbb
mov
mov
sub
fidivs
push
test
arpl
or
cmp
mov
mov
fildl
lcall
fcmovnb
xlat
mov
fidivrs
mov
lret
repnz
lahf
stc
dec
in
gs
mov
into
mov
pop
jmp
xor
ret
shlb
mov
mov
xor
dec
jno
dec
dec
xor
push
or
jbe
pushf
push
ret
cmp
add
cs
scas
sar
lods
xchg
scas
adc
and
inc
clc
cmp
pop
push
dec
or
push
je
and
sahf
or
and
mov
jg
ds
ja
push
cmp
pop
aas
jbe
jbe
arpl
das
inc
push
out
dec
mov
push
loopne
and
pop
mov
bound
and
dec
sbb
fwait
sbbl
imul
iret
mov
cmpb
xchg
lock
mov
mov
inc
shr
lods
insl
mov
pop
popa
mov
fisubs
mov
cltd
and
cmp
xchg
out
stc
add
add
enter
popa
push
or
pop
adc
pop
add
jbe
sti
aas
push
inc
jle
mov
and
lods
lret
pop
fsubs
inc
outsb
fwait
das
inc
or
mov
hlt
outsl
cld
shll
lahf
push
mov
mov
lods
adcl
and
shl
fstl
cmpsb
ret
mov
add
lret
lods
xchg
fisubrl
mov
add
movb
leave
das
push
testl
jmp
lahf
or
in
popf
subb
lcall
push
outsb
es
aam
std
adc
lods
push
adc
insb
out
shr
outsb
mov
sbb
mov
call
inc
fiaddl
sbb
pop
pop
mov
sbb
xchg
mov
leave
adc
imul
cli
stc
xor
mov
jp
mov
ficoms
adc
inc
jne
lret
sbb
adc
mov
inc
mov
mov
push
push
pop
inc
xor
rorl
hlt
xchg
cmp
int
fmull
insb
outsl
adc
sbb
in
shlb
mov
icebp
stos
fstp
or
aaa
mov
repnz
cli
jle
imul
xorl
push
xchg
cmpsb
mov
xchg
lret
push
sbb
lods
push
loopne
sbb
dec
es
inc
push
fsts
jne
lock
xchg
test
cmp
mov
call
inc
pushf
aas
pop
mov
inc
fisubl
addr16
roll
ficomps
call
jno
adc
mov
mov
adc
loopne
shlb
shl
arpl
shll
sbb
add
jg
jnp
orl
aaa
mov
jo
outsl
xor
ds
inc
cmpsl
aaa
rcll
aas
int3
sub
lahf
jmp
subl
and
cmp
push
leave
jmp
jle
adc
push
or
insl
lods
push
mov
imul
pop
jae
insb
mov
cmp
push
lock
lea
shll
insl
or
dec
xchg
loope
fstl
xchg
and
push
outsb
push
psraw
push
mov
mov
pusha
xor
pop
test
inc
xor
out
int3
xchg
cmpsb
mov
jbe
mov
ret
push
jbe
hlt
sbb
push
shlb
fsubl
insb
ja
jecxz
mov
mov
sbb
std
or
cmp
adc
stos
out
sub
out
in
push
ss
sbb
cmp
sbb
cmpsl
jb
mov
sub
and
rorb
orb
or
pop
in
ljmp
ret
cmp
cmpsb
out
inc
cmc
nop
sub
je
cmp
sbb
inc
push
mov
dec
out
xchg
aas
fsubs
in
xchg
cli
xor
push
pop
ret
push
jae
ss
fisubs
xchg
js
inc
or
cs
push
mov
mov
adc
xor
notb
test
and
cmpl
negl
mov
and
in
cmp
pop
mov
jp
xor
pop
sub
lcall
data16
subb
mov
lcall
jmp
cs
cmp
cmpsb
cmp
lahf
xchg
mov
imul
call
lea
sbb
add
movsl
lahf
add
and
fstpl
pop
mov
xchg
insb
pop
cmp
aam
fsub
cli
roll
jp
jmp
mov
jp
jmp
mov
xor
mov
push
inc
push
sbb
jo
sub
out
in
and
push
lods
mov
jns
mov
jge
push
inc
adc
jne,pt
ds
cmc
in
mov
cmp
insb
sub
repnz
jl
in
ss
sub
insl
fdiv
stos
test
popa
mov
mov
cmp
clc
jmp
aad
je
sbb
arpl
test
xchg
jo
mov
mov
mov
push
shrl
iret
xchg
movsb
movsb
or
add
pushf
stos
imul
push
jne
movsl
and
nop
sub
add
js
stos
js
xchg
cs
icebp
mov
mov
add
xchg
add
push
adc
jnp
ffree
pop
xor
push
push
fisubrs
fcoms
rcrb
push
insb
into
clc
adc
pop
cmp
out
adc
add
inc
test
cmp
pop
jnp
lods
cld
jp
pop
cmp
mov
in
inc
aaa
or
push
jae
lret
fstpt
jbe
inc
pop
xchg
pop
jno
mov
pop
addr16
das
filds
stc
xchg
xchg
mov
daa
mov
mov
pop
jbe
ss
xorl
stc
pop
ds
push
in
xor
xchg
mov
mov
int
pop
mov
sub
dec
ljmp
pop
push
stos
or
xor
daa
cltd
and
and
cmp
xchg
cli
pop
mov
dec
sahf
xchg
popa
jo,pt
xor
dec
jae
mov
xchg
sbb
inc
sbb
pop
pinsrw
and
icebp
icebp
add
xchg
dec
adc
cld
ret
ss
shll
push
mov
sub
imul
xchg
pop
cmp
arpl
xchg
push
and
arpl
sbb
rolb
movd
stos
fwait
popf
add
xchg
add
cmp
push
lods
push
dec
adc
lods
sub
mov
je
inc
mov
pop
inc
sbb
icebp
aad
sti
or
scas
ret
js
cmc
lcall
dec
arpl
aaa
inc
nop
mov
into
inc
mov
mov
xor
adc
popa
rclb
int
popf
add
mov
sub
push
jb
lds
cmpb
mov
fidivs
mov
cmpsb
dec
or
sub
and
push
ljmp
std
jge
gs
xchg
push
in
or
lgs
test
stos
adc
sti
ffreep
xor
cmp
cmc
ret
data16
sar
out
sub
fisttps
pop
jb
out
pop
mov
cli
enter
mov
add
fcoml
dec
mov
cmp
pop
stos
dec
ja
outsb
sbb
push
test
int
xor
sbb
dec
mov
inc
fnop
nop
sbbl
pop
jg
mov
sbb
inc
inc
mov
cmpsb
div
mov
pushf
jbe
adc
mov
aad
pop
sbb
in
mov
xor
gs
mov
mov
dec
fadds
movsb
ss
out
inc
stc
fisttpl
sahf
xchg
or
and
iret
imul
xlat
xchg
ret
jnp
or
and
cmp
scas
lret
push
ret
mov
mov
adc
jmp
sbb
rcrb
repnz
sub
icebp
mov
xchg
cmovle
sti
jl
out
pop
inc
ret
lds
movsb
mov
data16
push
out
in
xchg
mov
sti
or
into
inc
icebp
fnsave
add
cmp
mov
jnp
adc
xchg
cmp
mov
jno
jno
adc
pushf
jb
fisubs
mov
jne
mov
mov
cmp
inc
mov
adc
das
and
jo
ss
add
rolb
mov
dec
ds
lret
sbb
inc
aaa
pop
jmp
pop
pop
push
inc
inc
ljmp
int
xor
repz
xchg
add
mov
xchg
jg
aad
and
faddl
out
inc
push
push
rcll
pop
popa
bound
jnp
ds
into
pop
cmpsl
xor
mov
push
xchg
cmp
push
mov
xor
mov
push
es
xor
sub
or
add
push
and
nop
xchg
mov
subl
sahf
cmp
xor
mov
mov
xchg
push
inc
push
das
jp
je
pop
loop
loope
mov
sar
xchg
jno
add
pop
and
aam
mov
in
push
sbbb
inc
test
aaa
xchg
push
jae
jg
push
xchg
pop
insl
pusha
xchg
push
adc
repnz
pop
sub
mov
jbe
test
mov
aam
xor
adc
andl
push
test
xor
jbe
push
inc
das
lods
or
xchg
int
ss
adc
in
xlat
jg
int
xchg
leave
push
test
popa
in
push
adc
lahf
pop
add
and
fabs
xchg
mov
push
icebp
inc
xchg
inc
cmp
jp
ret
xchg
ret
mov
jb
sbb
or
cmp
jmp
scas
xchg
lods
mov
popa
push
mov
stos
mov
push
fwait
std
or
das
adc
pop
sbbb
rcl
cmp
or
test
mov
popa
lret
dec
lea
xor
dec
xchg
cmp
lret
or
dec
movsl
cld
dec
jge
mov
add
inc
inc
push
push
cmc
lea
insb
addb
sub
mov
pop
push
popf
mov
sbb
push
sar
or
pop
leave
lret
insl
clc
or
hlt
repz
mov
stc
andb
jecxz
push
mov
sahf
fisttpl
adcb
and
fidivrl
sub
loop
cmc
int3
rep
test
jb
mov
std
arpl
fidivl
push
enter
daa
sub
in
pop
outsb
inc
outsl
and
pusha
mov
nop
ss
aas
jecxz
sbb
std
or
mov
jecxz
dec
insl
mov
enter
xor
jecxz
popl
and
test
mov
mov
jge
sahf
mov
fcoms
pop
add
arpl
add
xor
xchg
xor
push
in
dec
subl
mov
mov
cwtl
mov
lahf
arpl
loop
add
lcall
aam
push
pop
movsb
sarb
push
sar
adc
mov
pusha
outsb
std
mov
dec
pop
jns
test
or
inc
rcrl
mov
sub
mov
ljmp
xor
ds
divl
push
inc
aad
sbb
mov
iret
rorl
movsl
mov
xchg
lea
imul
xchg
pop
adc
and
adc
rcll
pop
fisttpll
mov
fstl
adc
shl
test
dec
dec
dec
push
and
sbb
aaa
mov
mov
ds
mov
test
int3
shll
mov
xor
or
in
cmpsb
mov
pusha
jno
pop
mov
iret
mov
movsl
or
push
pop
repz
roll
cwtl
sbb
push
popa
in
repnz
mov
cmp
sbb
lcall
paddb
jne
fisubs
ds
pop
andb
or
call
dec
neg
mov
sub
lock
test
les
or
out
jg
and
sub
in
insb
jg
mov
test
xchg
leave
pop
lock
stc
pop
push
pop
inc
stc
or
and
leave
popf
cmp
fcoml
lret
push
mov
jmp
pusha
mov
subl
xor
or
sbb
cmp
sbb
jg
sbb
pop
push
jne
adc
jo
jp
adc
pop
or
inc
dec
aaa
pusha
stc
dec
out
add
mov
ljmp
movsl
pavgb
pop
mov
add
or
inc
sahf
jb
ret
mov
cli
add
pushl
lea
cmpsl
fcmovne
scas
aam
rolb
push
push
mov
jmp
or
fildll
movl
xor
push
sub
inc
aam
push
add
jle
inc
mov
out
ret
stos
dec
pop
imul
in
loop
out
out
scas
inc
mov
sbb
repz
push
jecxz
lahf
lahf
fistpll
xor
jns
jmp
and
inc
dec
dec
sub
pop
xchg
sub
xchg
inc
bound
ret
push
lea
movsl
pushf
mov
pop
mov
stos
and
push
popf
fs
popf
rcl
cmp
popf
push
popa
divl
pop
inc
popf
mov
sub
and
cmp
fwait
mov
cmc
xchg
xor
push
xchg
clc
nop
test
ret
pop
sbb
inc
sub
inc
xor
mov
push
sub
add
add
test
notb
es
inc
scas
clc
nop
repz
add
mov
repz
dec
loopne
adc
aam
mov
lods
sbb
mov
inc
or
mov
mov
call
adc
movsb
sub
pop
nop
aam
xchg
xor
push
or
jl
jl
mov
stos
pushf
or
decb
mov
pushf
dec
or
jb
int3
dec
sbb
xchg
mov
call
pop
sub
loop
pop
adc
inc
mov
dec
repnz
call
add
mov
mov
sarl
repz
clc
push
jns
push
sti
imul
jmp
mov
dec
outsl
psubsw
adc
lods
decb
sub
loop
sub
addb
int3
pop
ficompl
cld
inc
push
jmp
or
fadds
jbe
fidivl
or
xsave
scas
xchg
mov
bound
push
sub
es
out
jecxz
andb
adc
lcall
adc
cltd
repnz
pop
insl
pop
test
lea
pop
add
mov
adc
inc
inc
inc
dec
dec
test
lret
xchg
popa
adc
cmp
fs
pop
rorl
repz
bound
mov
xor
ret
ja
jle
pushf
push
stos
pop
in
jae
pusha
mov
inc
sarl
outsl
add
xor
out
in
mov
mov
data16
pop
inc
rolb
aad
movsl
lcall
push
lock
std
pop
inc
aas
stos
pop
inc
mov
bound
jg
sub
inc
pop
push
lock
mov
push
dec
dec
or
jle
fsubl
inc
jne
jg
pop
add
cmp
or
mov
lret
addr16
jae
sahf
pop
orl
xchg
lret
or
mov
pop
imul
cltd
xchg
das
test
sahf
xchg
and
adc
sub
fstpl
and
call
int3
fcoms
in
xor
call
inc
xor
stos
sbb
and
aaa
jl
cwtl
out
mov
call
pop
sbb
sub
loopne
out
pop
gs
sbb
push
cmpsb
aaa
push
jmp
fwait
jbe
loop
decb
sbbb
sti
dec
scas
shl
dec
pop
xchg
cld
jne
and
rcrb
xchg
cmp
cmp
filds
inc
xchg
sub
sahf
xor
loope
out
add
fistl
add
cmp
push
cmp
cmpsb
mov
test
mov
and
xchg
or
loopne
pop
mov
fs
lea
pop
leave
loopne
jne
pop
lock
add
pop
mov
push
rclb
test
int3
leave
jmp
xchg
dec
mov
fnsave
stos
adc
fdivrl
mov
int
fisubrl
mov
sbb
ja
mov
pop
sub
pop
fsubs
or
mov
mov
dec
mov
jb
sub
cmc
iret
dec
jns
arpl
sub
sub
call
pop
or
mov
popl
inc
mov
mov
fiadds
pop
mov
xchg
movsl
jns
test
scas
adc
mov
out
icebp
push
out
mov
adc
leave
mov
clc
sahf
test
in
xchg
stos
int
sub
fists
lds
sub
or
sbb
or
and
rol
xchg
or
xor
fld
ds
and
in
mov
aam
push
pop
sbb
out
int3
xor
outsb
mov
mov
mov
aas
je
sbb
iret
popf
xchg
jne
cmpsl
daa
mov
dec
mov
xlat
adc
imul
rcrb
cmp
das
cld
lods
lds
pusha
repz
inc
cwtl
add
aaa
rcll
inc
or
fucom
mov
repnz
push
jbe
js
sub
fwait
and
add
stos
shrb
shl
or
xlat
andb
push
daa
pop
and
inc
in
std
inc
mov
scas
mov
into
je
dec
fsub
mov
shlb
out
mov
jnp
shl
addb
inc
stos
imul
nop
or
mov
popa
inc
and
inc
rorb
das
jne
loop
insl
or
repz
push
repnz
pop
lldt
and
pop
sub
sub
bound
nop
scas
outsb
mov
jb
leave
pop
and
fmuls
inc
cmp
or
popa
clc
mov
imulb
dec
loopne
daa
call
bound
addr16
loope
in
movsb
mov
xchg
int3
cmp
jecxz
rorl
pop
xchg
mov
push
stc
pop
sub
test
out
dec
jle
lahf
outsb
push
inc
xchg
adc
pop
xchg
add
sbb
pop
outsl
adc
adc
lcall
cmpsl
xor
jl
fs
cmc
push
jle
adc
mov
or
lret
jg,pt
or
insb
shll
rcrl
lods
jge
mov
dec
sub
or
inc
dec
ja
rcl
sbb
repnz
in
cld
cmp
dec
je
pusha
imul
in
jo
cmp
cs
out
test
and
xchg
sbb
cmp
lret
xor
mov
mov
mov
pandn
cmc
xor
mov
dec
icebp
ljmp
loopne
and
cs
cmpsb
push
and
adcl
pusha
addr16
inc
adc
jne
inc
mul
sub
mov
rcrb
gs
test
add
push
sbb
in
push
mov
xor
icebp
and
inc
mov
lods
cmp
test
cmp
enter
mov
jne
jbe
notl
scas
sub
add
gs
lcall
mov
jg
mov
sub
xor
push
cmp
hlt
mov
insb
movl
push
jo
loop
inc
stc
mov
jns
inc
iret
mov
mov
fwait
or
imull
in
lea
es
mov
mov
outsb
fld
lret
shlb
in
ret
xchg
imul
out
and
pop
orl
mov
test
scas
or
test
mov
cmp
aad
in
jmp
sbb
popa
roll
jns
fcomps
call
pop
mov
and
sub
repnz
fs
cmpsl
sub
aaa
xchg
and
xchg
mov
xlat
out
push
jecxz
mov
lcall
jns
pushw
push
sbb
in
rcrl
adc
enter
jge
shrb
cmp
mov
mov
iret
test
xor
psubd
sbb
out
test
fists
inc
cmp
test
icebp
lods
inc
cmp
dec
push
in
xchg
mov
sbb
jnp
xchg
xor
daa
or
dec
sti
loopew,pt
aaa
jl
lret
add
jmp
sbb
adc
or
cmp
pop
push
sub
jne
into
push
sahf
je
lods
mov
lods
inc
mov
lods
dec
das
mov
lret
xchg
dec
dec
jge
pop
lods
or
mov
jae
aaa
jbe
mov
addr16
dec
xor
daa
es
cmc
dec
loope
jl
icebp
push
or
fsubl
sti
inc
cltd
add
jmp
fwait
xor
das
sbb
adc
andb
fistpl
cmpsb
sahf
imul
mov
sub
jle
jmp
mov
daa
test
cmpsl
push
mov
xchg
push
cmp
mov
mov
dec
sbb
pop
mov
mov
push
scas
ret
adc
es
jge
lds
mov
sub
lahf
and
jbe
add
insl
cmp
test
lods
lret
mov
gs
inc
mov
mov
xor
xor
orl
mov
in
inc
lret
sub
bound
roll
out
arpl
sub
hlt
jg
push
rcrl
in
push
jl
xor
dec
push
cmp
push
xor
fistpll
mov
in
push
das
xor
sub
dec
mov
mov
clc
push
pop
lods
mov
lds
movsl
jl
enter
push
data16
ficomps
push
and
fsub
popa
cmc
xor
cmp
sub
out
or
clc
jne
pop
mov
sbb
sbb
xor
mov
int
dec
cmp
scas
sti
test
push
and
and
lods
fstpt
xor
into
in
in
js
push
jp
mov
rcrb
shl
fadds
jp
xor
icebp
cmpsl
fwait
jnp
insl
in
xchg
pop
and
and
je
imul
and
dec
movsb
add
aas
stos
mov
int
xor
cmp
test
pop
test
xor
stos
pop
cmp
mov
dec
dec
stc
mov
fidivs
jmp
pop
mov
popw
lds
insb
mov
and
inc
ds
mov
add
into
add
imull
inc
mov
fsts
cmpsb
out
mov
mov
fcmovb
aam
fiadds
in
dec
adc
mov
test
xor
push
and
into
and
cmp
adc
sbb
mov
test
sub
or
mov
or
fstl
jecxz
call
pop
leave
lock
scas
mov
pushf
sbb
sarb
mov
dec
lods
pop
adc
xor
ljmp
inc
shll
imull
inc
or
xor
ljmp
add
mov
lret
stos
inc
pusha
or
ffreep
sbb
std
js
and
xor
int
shrb
xchg
cld
adc
mov
notl
bound
adc
fnsave
cld
lret
or
adc
enter
shlb
mov
mov
shlb
sub
mov
rcrl
lea
test
pop
inc
xchg
adcl
adc
out
and
sbb
dec
pop
mov
pop
mov
test
mov
pusha
and
filds
mov
lcall
lahf
pop
jb
push
xchg
cmp
sar
xchg
call
sbb
ret
and
loop
imul
cltd
lahf
sahf
mov
lds
sub
push
wrmsr
cli
data16
repnz
movsb
mov
adcb
sbb
xchg
cwtl
push
ret
sub
pop
cltd
rorl
ja
bound
and
lock
pop
out
mov
add
cltd
push
inc
xor
daa
aam
dec
test
fistpll
push
jmp
adc
adc
test
int
in
leave
pusha
ds
sub
mov
fsubrl
sbb
mov
lcall
push
pusha
adc
in
data16
fcomps
dec
daa
sub
cs
sbb
xor
sbb
gs
or
xchg
and
mov
movsb
pusha
inc
jp
sbb
pop
sbb
or
jne
inc
or
inc
gs
xor
cmp
mov
xchg
push
sbb
inc
mov
nop
xchg
jo
and
pop
mov
bswap
cmp
outsb
dec
xchg
ja
add
popf
repz
xor
or
fidivs
movsl
cmp
mov
cmp
inc
mov
ficoml
aaa
cmp
adc
in
jmp
and
xchg
les
xchg
inc
xchg
cmp
mov
cmp
ljmp
adc
pop
clc
fs
add
adc
lea
int3
xor
addr16
jge
jp
in
pushf
repnz
adc
xor
clc
mov
aaa
cmc
jmp
push
and
xlat
adc
cmp
in
dec
jp
push
test
rclb
cmp
cmc
psrlq
mov
out
enter
cmp
mov
or
dec
mov
add
das
in
std
push
push
imul
ret
fsub
cs
sbb
into
push
cmpsl
pusha
ret
addl
lret
sbb
sub
fidivrs
mov
sahf
in
pop
loop
lcall
sbb
pop
mov
jg
aad
xchg
sbb
xorb
lret
cmp
fs
cmpsl
add
push
in
adc
cmc
jns
ja
shll
cmp
lret
out
mov
mov
xchg
mov
sahf
cmc
imul
ds
leave
jb
jne
int
leave
mov
lods
stos
sbb
pop
daa
push
mov
fldl2e
test
test
sub
mov
pop
dec
data16
sbb
pop
dec
repnz
push
out
dec
in
pop
test
fnstcw
roll
in
xchg
lods
in
sbb
pop
leave
add
jns
adc
dec
addr16
and
sub
mov
mov
push
nop
dec
push
and
out
loope
pop
xchg
mov
lcall
pop
mov
inc
mov
push
fcmovnb
lods
or
data16
and
jne
insb
push
mov
jbe
jb
jge
je
jge
mov
cmpsl
mov
inc
js
mov
xlat
push
jge
push
mov
push
mov
loop
lcall
cltd
movsb
test
int3
andb
les
ret
cmc
movsb
int
mov
dec
or
sbb
leave
push
pop
fstpt
xchg
in
pop
ficompl
pop
sbb
add
movsb
push
cmpsl
in
aas
and
mov
int
xlat
mov
cmp
mov
arpl
mov
pushf
xchg
aad
xchg
mov
and
jp
shrb
pop
xchg
dec
out
sarb
shlb
aam
or
insl
repnz
loope
push
mov
mov
adc
pop
cmp
movsb
mov
xor
stos
cmp
push
mov
fldlg2
out
rcr
mov
test
inc
pusha
mov
sti
xchg
jae
imul
xchg
notl
sahf
pop
mov
mov
and
ret
pushf
cmp
bound
jl
push
or
test
cli
xor
push
cmc
inc
jb
pop
aas
movsb
xchg
insb
inc
sbb
sbb
in
cmc
jne
xchg
arpl
or
dec
insl
int3
sahf
lret
dec
or
mov
mov
dec
loop
push
stc
clc
or
adc
insl
ror
mov
pop
adc
out
jge
fldenv
xor
ret
jo
icebp
aas
and
jle
stos
adc
mov
fcoml
cmp
inc
push
adc
aaa
test
pop
adc
mov
fcoml
add
xchg
rolb
mov
and
lahf
mov
out
jp
addr16
cmp
xchg
jmp
adcl
in
dec
or
push
hlt
dec
fstpl
iret
and
xor
xor
mov
lock
cmp
or
jbe
xor
or
pop
fucomi
aas
pop
pop
sar
int
aad
cmp
xor
ss
stc
mov
inc
repz
es
push
loop
les
sti
mov
cmp
loop
pop
push
lahf
mov
or
shlb
mov
movsl
cmpsb
jne
add
aaa
lods
aam
mov
lret
clc
xor
or
cmpsb
mov
nop
mov
fs
outsb
cmpsl
sub
xchg
rorl
dec
xor
lret
or
inc
jecxz
out
adcl
pop
movsl
mov
mov
out
repz
repz
sub
adc
ret
fisttpl
ds
stos
mov
dec
pop
lcall
cli
sbb
mov
mov
data16
mov
rolb
sbb
ret
jp
test
adc
cs
fcompl
jbe
xor
int3
repz
pop
sub
stos
push
jbe
sub
mov
out
mov
cltd
scas
cmpsb
fdivrs
int
dec
movl
test
andl
mov
mov
hlt
movsl
sbb
and
jno
and
sbb
pop
add
push
cmp
call
popa
dec
mov
test
sarl
psrld
push
mov
dec
jno
mov
pop
mov
call
notb
adc
and
inc
shrb
arpl
xchg
push
pop
out
xchg
cwtl
bnd
or
je
in
mov
aas
cmc
dec
cmp
ja
xor
int3
jmp
sbbl
cmp
nop
adc
hlt
mov
push
stos
incb
scas
out
jmp
in
dec
jge
lds
push
sbb
fwait
sub
add
pop
ret
push
mov
pop
jae
mov
mov
pop
xor
inc
mov
dec
pop
popf
sahf
in
lret
add
daa
mov
push
pushf
int
xor
mov
xchg
or
fldcw
test
adcb
vpaddusb
aaa
dec
cmc
or
ss
and
dec
decb
sti
dec
daa
aas
rclb
popf
int3
jae
ljmp
ret
test
repz
inc
sub
adc
sub
cs
xchg
jecxz
daa
aas
sub
add
xor
fcmovnbe
sub
adc
ss
pop
lock
xor
sbb
ror
xor
rcr
jo
imul
arpl
insb
add
xchg
pop
or
movsl
inc
stos
add
sti
push
jl
sar
test
push
insl
testb
pop
insb
adc
popf
inc
cmc
inc
sti
jecxz
xor
inc
jp
cmp
fstpt
gs
aaa
add
pop
insb
cmp
in
cld
mul
mov
insl
xchg
ja
bound
cmp
and
icebp
imul
mov
lahf
aaa
dec
fisttps
dec
repnz
rol
jns
pop
jne
mov
pop
push
and
fcmovnu
lock
mov
lea
nop
movsb
pushf
fldenvs
push
and
jl
loop
adc
test
stos
imul
xlat
orb
sbb
jle
rcrb
in
les
shl
mov
add
js
mov
jo
enter
add
mov
fldt
into
scas
dec
rcr
sbb
sub
loopne
lret
lods
outsb
mov
and
and
xchg
jns
lock
lret
fwait
adc
aaa
mov
fiadds
aam
stos
push
xor
sub
sbb
adc
push
retw
cmc
sti
insl
xor
btr
scas
cs
cwtl
icebp
mov
pop
jl
lret
stos
mov
rorl
lahf
pop
mov
outsl
into
inc
xchg
adc
sub
jl
aaa
pop
sbb
cld
test
stc
push
in
loope
hlt
add
sub
sbb
xor
mov
add
jbe
pop
mov
cmp
loop
push
cli
dec
mov
in
in
dec
mov
rcl
xor
inc
outsb
and
or
push
in
sub
fcmovnb
loop
scas
inc
out
sub
je
das
or
fsubs
xchg
ret
inc
lods
mov
or
outsb
out
cmp
stos
cli
outsl
xchg
sub
jno
dec
adcl
in
out
fucom
es
fisubl
jnp
or
das
xor
add
lods
popa
imul
lcall
daa
dec
movsl
adc
inc
aas
or
pop
insb
adc
mov
sub
lock
fildll
lret
popf
pusha
repnz
cmp
movsb
mov
ds
mov
and
mov
imul
in
cmc
sahf
mov
jnp
sbb
mov
insl
adc
or
dec
pop
lea
adc
jnp
jge
stc
pop
aad
xchg
jl
push
test
push
cwtl
aad
in
push
sbb
hlt
clc
rolb
sub
repz
mov
into
add
pop
stc
imul
nop
fmuls
mov
out
pop
xchg
lods
shrb
push
xor
leave
mov
push
popf
pop
add
mov
cmpsb
cmpsb
pop
and
fstpt
addr16
and
cmp
aam
or
ljmp
jne
adc
popf
icebp
push
pop
jl
mov
fwait
arpl
into
int3
mov
mov
dec
add
mov
shlb
xor
mov
inc
bound
xchg
xor
popa
or
or
in
xchg
into
call
sbb
jp
dec
mov
dec
mov
xchg
xor
push
or
inc
or
fsts
je
mov
ret
inc
mov
repz
xor
adc
inc
adc
gs
adc
jne
lret
test
cld
lock
enter
sub
xor
out
das
iret
jo
xor
imul
and
jns
inc
dec
cmpb
adc
repnz
xorb
jae
mov
test
fiadds
xchg
les
cmp
pop
xchg
imul
push
mov
outsl
cmpsl
lret
mov
sub
jl
in
es
inc
inc
dec
mov
bndldx
in
mov
inc
adc
jo
xor
mov
stos
outsl
popa
adc
add
pushf
int
daa
hlt
jno
shll
mov
inc
jg
idivl
inc
in
mov
mov
popf
sbb
push
or
cmp
rclb
jae
jmp
sbb
scas
es
mov
pop
mov
aaa
pusha
test
les
mov
lea
cmp
xor
inc
or
mov
decb
test
repnz
pop
mov
js
dec
hlt
push
addps
cld
mov
lret
cmp
aad
or
sub
cld
lods
xchg
jnp
sbb
hlt
aas
jge
and
jl
in
std
sub
dec
xchg
sbb
rep
mov
sbb
es
and
loop
cld
fcmovnbe
xor
pop
pushf
pop
repz
inc
subb
ret
mov
cltd
jmp
fld
insl
mov
inc
ja
jmp
pop
aam
fstpt
vxorpd
add
aas
fsubrs
imul
cmp
cli
test
pop
or
sbb
jp
pop
or
mov
stos
sbb
inc
xchg
in
fwait
lahf
xchg
sbb
imul
xchg
in
mov
cmp
mov
mov
or
int3
mov
sbb
mov
jnp
sbb
mov
pop
xor
loope
sub
lock
push
jl
sbbb
xchg
daa
add
mov
inc
mov
ljmp
shrb
out
push
jb
out
xchg
rol
xchg
sbb
js
xchg
movsb
scas
negl
imul
lods
mov
push
mov
xor
dec
cmp
mov
lret
popa
into
cs
xchg
xor
xrstors
mov
lea
mov
adc
mov
mov
fstpl
dec
sub
sbb
pushf
add
fidivrs
lret
cwtl
mov
push
jnp
nop
cmc
out
ret
enter
xlat
mov
fsubl
ret
test
cmpsb
ja
lret
cmp
in
fisttpl
pop
popa
pop
cmp
movsl
mov
ret
jg
jge
notb
jb
es
xchg
jmp
inc
cwtl
adc
jbe
xchg
add
hlt
sub
jae
jbe
push
xor
sbb
in
cmc
js
xor
pushf
inc
pop
add
mov
cmp
sbb
sbb
mov
lahf
adc
iret
sbb
imul
mov
dec
ljmp
pop
add
mov
das
into
pop
add
aas
mov
outsb
ds
cltd
cmp
test
sub
mov
sarb
mov
loop
cmpsl
and
fdivp
mov
iret
iret
add
sub
pop
gs
sbb
mov
adc
imul
shll
mov
out
jmp
mov
xchg
cmp
out
cmp
aaa
cltd
mov
mov
dec
adc
pop
adc
or
adc
mov
repnz
push
adc
xorb
pop
push
sbb
stos
cwtl
outsl
test
cmpsb
imul
sbb
jp
jmp
lock
cld
std
test
mov
gs
aad
aas
dec
cmp
sbb
andl
inc
hlt
sbb
mov
sahf
dec
adc
addr16
push
stos
leave
mov
aas
mov
lock
sbb
pop
mov
outsb
pop
dec
pop
mov
hlt
pop
lock
adc
or
stc
xlat
aas
and
imul
mov
shlb
stos
sahf
sub
mov
jo
mov
lock
xor
xchg
test
mov
push
mov
jo
adc
inc
add
mov
or
ficompl
dec
loop
mov
fadd
loope
add
popa
pushf
mov
imul
das
ja
cmp
push
jecxz
xchg
xor
mov
das
pop
clc
mov
xchg
sbb
xchg
mov
outsl
es
or
sub
jb
adc
test
or
xorl
add
dec
es
adc
add
cs
outsb
dec
jnp
stos
ds
xlat
xchg
lret
in
xchg
out
push
xlat
sub
dec
mov
mov
dec
xlat
cld
test
jne
and
lret
pop
enter
faddp
std
arpl
icebp
jns
fidivs
test
outsl
mov
xchg
fcompl
nop
and
clc
mov
jl
or
push
sub
out
pop
popf
ds
xchg
cs
or
psrad
ret
add
adc
or
dec
test
pop
or
loopne
test
pop
cld
xor
push
sub
push
outsb
rcl
cmp
aas
xlat
add
pop
das
mov
enter
insb
fnsave
lahf
and
push
mov
push
cs
dec
jo
test
ret
push
loopne
fs
mov
and
cwtl
mov
aad
ja
movsl
or
push
aas
fcomps
test
aam
dec
fildll
enter
test
adc
cs
arpl
dec
cmp
push
repz
out
inc
inc
lods
imul
mov
clc
lret
dec
lock
fstpl
mov
mov
out
pop
push
loopne
mov
jae
test
addr16
pop
and
in
movsl
je
in
cltd
test
sti
aas
and
jno
pop
pop
add
lcall
stos
mov
add
mov
dec
jmp
or
mov
add
xor
xor
ljmp
ds
mov
rorl
pop
adc
fisubrs
push
test
scas
fdivs
sbb
xchg
push
lea
xlat
fwait
jo
loope
pop
cmpl
clc
mov
mov
outsb
and
lock
cltd
incl
scas
dec
inc
dec
mov
repnz
in
cmp
sbb
dec
icebp
sahf
loopne
ja
xor
jecxz
sbb
xchg
add
mov
test
loopne
jae
stos
push
bswap
pop
mov
and
stc
mov
cwtl
bound
push
aaa
cmpxchg
or
popa
inc
ljmp
xchg
in
sti
stc
push
fsubr
rcrb
push
adc
adc
adc
or
jl
cld
aas
xchg
jne
pop
mov
fwait
movntq
sbb
enter
stos
mov
addr16
pop
out
lods
and
loope
movsl
in
inc
imul
jp
push
cld
pop
dec
cmpb
cld
inc
or
addl
jno
divl
and
and
ss
jl
and
mov
mov
sti
inc
push
inc
or
pop
sbb
cmp
adc
cmp
imull
sub
or
add
jno
fldenv
cld
or
inc
pop
pop
push
adc
cmp
into
mov
aam
imul
loope
mov
mov
scas
mov
arpl
fstp
insl
push
xchg
sbb
adc
cmp
test
push
mov
jbe
mov
cmpb
scas
sbb
jecxz
jbe
sub
xchg
push
xchg
mov
stc
jno
bnd
mov
test
inc
ljmp
or
test
jp
popf
cwtl
pop
stos
pop
nop
adc
mov
cmp
mov
cld
sub
out
iret
mov
addb
pop
cmc
sahf
mov
ja
add
mov
outsw
sub
sub
mov
or
adc
dec
pop
das
and
mov
arpl
mov
in
and
inc
call
jbe
xchg
or
das
fs
ret
test
in
fimull
icebp
stc
pop
xchg
push
jle
enter
cli
sbb
imul
dec
pop
jae
add
pop
cmp
and
pushf
and
fiaddl
inc
cmp
add
pop
repnz
sub
and
cmpsl
movsl
roll
dec
sub
int3
push
mov
stos
push
xor
stos
add
stos
and
out
or
jo
les
push
add
repz
and
imul
sbb
movsb
or
repz
pushf
cmpsl
lret
jnp
aad
cmpsl
test
enter
stc
scas
adc
dec
repz
mov
cmpsb
mov
cmc
add
in
xor
pop
int
cs
cmp
jecxz
ret
clc
adc
pop
mov
push
lret
les
mull
sub
mov
dec
xchg
mov
pop
mov
popf
test
stos
fidivs
sub
mov
and
addr16
inc
imul
mov
fsub
fwait
and
cli
aad
dec
btr
jns
aad
push
mov
xchg
xchg
rcrl
pop
inc
repz
and
outsb
popa
loopne
adc
fildl
lahf
dec
mov
push
sub
std
or
push
jae
int3
jnp
adc
in
insb
lret
push
ficoms
divl
enter
shl
out
push
mov
cmp
cs
jmp
mov
sbb
xchg
in
js
adc
scas
inc
loop
push
jle
test
and
insl
daa
xor
sub
adc
mov
pop
push
and
repnz
dec
das
sub
dec
adc
mov
mov
in
outsl
cmc
or
cmp
subb
std
arpl
fiaddl
cmp
ja
mov
lret
lods
not
lods
sbb
fcoms
xchg
adc
inc
fs
insl
fsubrp
mov
test
lea
xlat
mov
mov
in
jge
or
mov
adc
rorl
ss
ss
push
xor
negb
lods
jmp
mov
push
mov
inc
std
arpl
sti
or
sbb
xchg
and
fcompl
sbb
loopne
cmc
sbb
scas
jnp
xor
fisubs
xor
int
sbbb
cld
push
dec
push
data16
xchg
push
push
movsl
mov
mov
mov
push
push
test
mov
adc
sbbb
and
or
nop
sbb
push
sub
mov
push
lahf
cmovno
push
add
dec
fucomip
mov
pop
out
movsb
mov
les
lcall
std
dec
shlb
push
cmp
sub
imul
pop
push
add
cmpsl
mov
bnd
sbb
xchg
int
cmp
fs
stc
push
sti
in
xor
push
adc
and
out
adc
ret
or
mov
icebp
sbb
add
mov
scas
cli
test
mov
stos
push
or
pop
pop
push
or
fs
xchg
mov
sub
xchg
add
push
enter
pusha
adc
movsl
mov
add
aas
stc
sbb
dec
jmp
cmp
fisttpll
in
cwtl
fs
ds
rcl
clc
cmp
mov
fdivs
lret
repz
les
mov
jmp
adc
fildl
insl
aam
xchg
imulb
dec
cld
mov
fadd
dec
or
jo
aaa
pop
fmuls
pop
adc
sub
push
jmp
sbb
stos
repnz
out
insl
mov
mov
push
mov
mov
push
inc
rcrl
pop
push
rcl
or
dec
pop
jbe
fst
scas
std
dec
mov
sub
pop
gs
test
mov
mov
jge
mov
adc
sub
ljmp
roll
dec
adc
sub
jp
inc
dec
addr16
leave
dec
fdivrp
xchg
dec
pop
jne
push
and
sbb
mov
sar
mov
jno
stos
test
fucomp
fldcw
push
adc
xlat
roll
pop
pop
inc
and
enter
push
or
xchg
test
rclb
aam
push
lret
xor
cltd
lock
pusha
adc
ss
pusha
mov
sub
push
imul
mov
mov
imul
xor
dec
inc
imul
repnz
or
xchg
dec
popa
ja
mov
ja
inc
mov
adc
scas
fcom
sahf
jbe
push
in
pop
or
std
pushf
cltd
mov
mov
cmp
inc
in
sbb
imul
push
mov
pop
mov
jb
push
aas
cmp
ljmp
jo
push
repz
loop
sub
and
int3
xor
inc
add
jb
lea
insl
add
pop
mov
jo
aam
jp
add
or
movsl
out
mov
jmp
jne
sub
lahf
int3
stos
cmp
shll
pop
aad
add
out
fstpt
stc
out
rclb
xchg
and
push
lahf
add
push
icebp
arpl
pop
mov
adc
add
xor
jl
mov
xchg
push
dec
xchg
shlb
addr16
mov
inc
mov
insl
lahf
bnd
notb
in
dec
sbb
pusha
mov
lods
in
or
mov
mov
cmc
mov
pushf
add
sbb
mov
in
inc
sbb
xor
pop
xchg
mov
adcb
dec
movsb
jmp
outsb
leave
push
mov
cli
mov
push
xor
iret
push
sbb
std
bound
dec
fwait
mov
inc
test
add
data16
ds
les
xor
dec
push
adc
mov
add
decb
stos
dec
and
xchg
pop
stos
ja
in
sahf
fisubs
leave
pop
cmp
jae
sti
jecxz
lea
fwait
and
pop
inc
movsl
mov
ds
repnz
mov
sub
xor
sub
push
pusha
sub
das
xor
jns
scas
push
in
popa
pop
xchg
xor
cmp
imulb
push
lret
je
mov
loopne
std
pusha
pop
dec
xchg
bnd
stos
jmp
jge
jge
scas
stc
gs
mov
rcll
repz
out
test
iret
mov
icebp
dec
ds
icebp
data16
ret
dec
sub
fcomps
fimuls
mov
mov
sbb
or
in
push
outsl
iret
and
call
scas
movsb
push
add
cmp
inc
popa
dec
jecxz
outsl
scas
mov
cli
lahf
jbe
mov
das
mov
sub
push
mov
mov
push
and
or
jge
ja
imul
sub
lret
movsl
clc
negl
imul
gs
pusha
std
xchg
in
fstps
xor
push
dec
fstps
xlat
aam
lods
adc
movsb
sti
mov
adc
dec
mov
fs
lock
xor
cli
mov
xchg
leave
arpl
lret
adc
pop
pop
xor
daa
arpl
pop
xor
cltd
dec
sub
jp
xchg
dec
sarb
xor
mov
mov
pop
aaa
dec
movsb
sahf
enter
mov
sti
jbe
jne
int3
xor
adc
xchg
call
or
xchg
xchg
sub
or
sbb
adc
lret
aas
pop
fidivrl
inc
mov
rorl
pop
adc
pop
pop
bound
lock
sub
das
sahf
iret
out
push
adc
pop
xchg
and
jno
sbb
xor
movsb
pop
iret
xor
insl
pop
mov
subl
frstor
or
movsl
aas
in
mov
pushf
incl
fdivrl
inc
das
mov
cs
xor
int
pop
push
jle,pn
leave
inc
pop
cmp
scas
incb
pop
insl
dec
xor
pop
scas
iret
mov
xor
imul
aam
xor
pop
sbb
lds
cmp
ljmp
push
inc
out
mov
stc
mov
dec
dec
adc
ja
sbbb
push
inc
out
xor
mov
pop
call
sub
ljmp
sub
ret
lds
sti
fmuls
inc
adc
mov
sub
pop
mov
xchg
mov
arpl
mov
xchg
push
rclb
lret
faddl
xchg
mov
or
cmp
mov
adc
gs
lock
lea
cmc
pop
outsb
rolb
in
push
jno
or
lock
mov
jecxz
push
ss
add
das
mov
lods
sub
xchg
adc
cs
sub
imul
dec
jmp
imul
add
lea
mov
push
jb
and
or
dec
loope
pop
inc
jecxz
jp
aas
lods
pop
add
inc
push
mov
jns
data16
rcll
js
frstor
imul
jge
mov
push
ret
jge
cmp
xor
bound
bound
fidivl
popf
pop
pop
pop
push
and
push
outsb
jo
outsb
aad
cmpsl
or
push
std
or
push
popf
cld
mov
xchg
dec
lret
insb
les
addr16
loop
jmp
das
dec
cmc
loope
xchg
sbb
into
stos
xchg
mov
arpl
les
push
fs
jnp
adc
daa
pop
adc
and
jmp
jge
xchg
les
xchg
sub
divl
les
jns
jnp
jecxz
insl
stc
mov
sbb
adc
xor
nop
es
filds
mov
rolb
xor
jecxz
movntps
not
or
xchg
sbb
pop
inc
pop
mov
fcomps
pop
outsl
fs
mov
xor
fwait
test
js
jg
dec
mov
cmp
xchg
mov
or
ljmp
lds
and
test
subl
daa
ljmp
addr16
xchg
mov
push
mov
jnp
int
add
xchg
push
out
lret
aaa
mov
aam
icebp
dec
jl
and
adc
mov
repnz
mov
xor
pop
cmpsl
testb
xor
pop
adcl
pop
rolb
mov
mov
jl
add
pop
jns
je
movsb
mov
movb
jge
xor
sbb
jle
vmread
or
cmp
fadds
fs
bound
mov
push
aad
fsts
lods
adc
int3
pop
shll
loopne
dec
movsb
jle
fcmovbe
sahf
enter
ljmp
add
mov
outsb
mov
in
xchg
lds
add
fistl
ja
mov
mov
mov
fldt
lds
fcompl
fdivrs
sbb
ss
xchg
repz
stc
dec
int
mov
repz
dec
cmp
fistl
iret
cwtl
pop
ret
mov
pop
xor
clc
lcall
add
outsb
mov
andb
pop
pop
ret
jl
inc
sbb
fs
mov
and
mov
outsb
rorb
aas
mov
ja
sbb
push
lods
pop
pop
sub
ja
cmp
jp
decb
shl
cmp
mov
leave
cld
sub
mov
cs
xchg
cmpsl
aas
mov
pop
sbb
insl
jns
pop
add
enter
mov
stos
adc
cmp
cld
or
jle
push
jb
ja
loope
jmp
lahf
sbbl
mov
mov
mov
jno
mov
push
push
ljmp
rorl
popf
pop
aam
dec
sbb
jae
lods
add
into
arpl
cltd
xor
xchg
daa
push
inc
mov
pop
js
inc
pushf
hlt
sti
inc
lds
push
mov
aaa
inc
ja
mov
mov
xchg
ret
jle
adc
adc
in
push
dec
and
mov
testl
je
mov
xor
mov
shlb
sbb
shll
adc
bswap
xor
lods
sub
add
ljmp
and
in
stos
ja
mov
es
cmpsb
cmp
xchg
adc
shll
fmull
jg
cmc
adc
out
or
jecxz
scas
jne
cwtl
pop
and
lods
adcb
pop
jmp
sub
xchg
in
movsl
imul
sub
jmp
fmuls
fmuls
daa
hlt
insl
in
mov
add
imul
xchg
fstps
push
sbb
and
shrl
mov
and
sub
and
out
sub
call
ljmp
push
sbb
pop
cmc
out
leave
jge
outsl
xor
adc
pop
out
push
lods
clc
pop
xchg
clc
ja
outsb
mov
dec
data16
dec
sbb
les
out
pushf
cltd
pusha
hlt
or
jge
cwtl
leave
aas
hlt
xchg
push
xchg
add
lods
scas
mov
divl
sub
add
mov
adc
repnz
bound
shrl
call
ret
mov
adc
lods
shrl
in
pop
xor
lds
out
cmp
push
inc
rcrb
fildll
movsb
sub
xchg
shrl
pop
in
in
pop
addr16
mov
test
rorb
sbb
sub
dec
pop
jae
xchg
aam
adc
push
or
push
and
inc
mov
in
pop
cld
and
in
push
scas
sub
jge
test
adc
cmc
pand
push
jo
xchg
fidivl
jo
pop
idivb
loope
jmp
shr
push
lods
testb
loopne
inc
inc
pop
push
mov
push
cmp
jae
mov
push
mov
inc
cmp
test
jecxz
cli
test
xor
dec
dec
lret
jp
jmp
ret
fisubl
mov
lret
gs
fnstcw
xchg
sbb
les
sarl
dec
jo
jae
sub
stos
inc
cs
mov
inc
rcrl
push
sbb
add
mov
rcrl
xor
stos
xor
sarb
fimull
popa
add
adc
or
pusha
mov
push
outsb
push
dec
ret
lret
push
sub
or
mov
adc
push
cmp
bsr
dec
fs
arpl
pop
mov
jmp
lahf
loop
sbb
and
inc
xor
inc
popf
scas
xchg
pop
arpl
jmp
movsb
loope
add
xchg
negb
xchg
push
in
and
push
mov
incb
jbe
cltd
mov
jl
leave
mov
adc
pop
adc
popf
dec
and
dec
or
push
add
cmp
mov
mov
inc
pop
cmc
mov
jns
xor
jg
mov
sub
adc
out
iret
sbb
negl
pop
cmp
xchg
dec
xchg
mov
jno
sub
adc
dec
pop
idiv
lods
inc
push
cmp
out
jmp
mov
iret
mov
dec
enter
xor
dec
jno
fidivl
in
pushf
popf
lret
and
xlat
rcrb
lret
push
jl
cwtl
jb
jnp
insl
adc
aas
sub
pop
and
arpl
fdivrl
repz
and
out
lock
push
fs
mov
push
stos
int
clc
lea
js
into
jnp
fistpl
add
add
xchg
aaa
mov
add
pop
mov
mov
push
dec
lods
push
fsubrs
xchg
je
pop
inc
xchg
sbb
repz
dec
mov
and
imul
stos
aad
inc
inc
xchg
lcall
mulb
xchg
inc
push
sbb
jnp
pusha
cmp
mov
aas
fs
adc
xchg
xchg
xchg
inc
aad
xchg
xchg
push
inc
mov
mov
loop
dec
js
mov
and
scas
loop
inc
xchg
ds
xchg
icebp
rorb
imul
pop
and
int
dec
pop
mov
movsb
sub
mov
push
sbb
sub
mov
pop
stos
mov
pop
fildll
mov
pop
inc
ss
in
fsubr
cld
rol
icebp
test
scas
sbbl
and
add
add
rcll
sbb
pop
sbb
sub
jecxz
dec
gs
loopne
mov
jecxz
pop
imul
pcmpeqd
stos
out
data16
in
sbb
cmc
jp
out
rorl
imul
cmc
mov
or
call
sahf
jbe
int3
mov
gs
xchg
sti
movsl
xor
mov
jno
cld
adc
inc
jnp
or
cmp
dec
js
and
and
pop
scas
mul
ja
out
nop
adcb
dec
mov
mov
inc
xchg
push
mov
jnp
mov
bound
cmc
and
lds
iret
mov
imul
fsubrl
push
jle
repz
out
mov
pop
inc
sbb
call
push
fdivl
movsb
dec
jne
in
add
add
out
xchg
jne
dec
adc
call
and
ja
xchg
or
mov
add
repnz
mov
inc
sarl
lret
sub
loopne
fst
popl
inc
add
cmp
stc
imul
aas
sub
xchg
or
xchg
add
loope
push
cmp
add
sbb
add
popa
push
push
aaa
xor
or
inc
cmp
adc
cmp
jp
roll
outsb
or
hlt
adc
push
fsubrl
cltd
fmul
pop
lds
sbb
sbb
test
cmp
jl
in
stc
mov
xorb
stc
pop
sbb
mov
repnz
adc
in
outsl
xchg
daa
mov
in
jo
jmp
jge
shrl
lret
xchg
stos
sub
aas
xor
push
mov
bound
xchg
popa
sub
mov
cmp
cmp
cmpsl
lret
and
arpl
pop
mov
lods
xchg
jle
aaa
mov
push
sbb
lcall
push
and
jbe
into
cmp
pop
sub
jmp
out
out
mov
shl
rolb
pop
icebp
or
leave
icebp
sbb
xor
fnstsw
aas
popf
dec
adc
mov
inc
sarb
jb
jge
addr16
clc
lahf
adc
sbb
mov
dec
sub
jg
dec
adc
aad
imul
and
xor
xor
das
gs
xor
inc
xlat
add
sub
mov
je
inc
xchg
rcr
jp
stos
scas
dec
aas
add
in
cmp
inc
or
jmp
push
pop
add
bound
dec
ret
pop
jno
sarl
into
cmp
jp
jo
sbb
push
adc
xchg
repz
push
add
cltd
bound
inc
insb
sbb
pop
cmc
jbe
mov
rcll
aam
pop
fisttps
lds
push
lcall
test
mov
sub
push
pop
out
adc
testl
jb
in
cmp
xor
lods
mov
movsl
mov
sub
lds
stos
inc
nop
fsts
and
addr16
jns
jb
lret
pushf
xchg
inc
mov
dec
insl
divb
mov
mov
xchg
mov
into
pop
outsb
inc
rcll
mov
and
mov
dec
ret
stos
inc
outsb
or
ljmp
cmp
jp
ss
jl
jg
jmp
xchg
mov
add
pop
lret
push
mov
hlt
out
int
jo
pop
pop
enter
stos
xlat
push
test
push
lock
nop
rolb
jnp
inc
jno
popf
or
outsb
leave
sbb
in
cld
jnp
rclb
push
xacquire
mov
mov
clc
lret
and
ss
jne
stc
push
into
inc
push
cmp
mov
and
pop
mov
cld
mov
in
mov
xchg
es
dec
mov
ljmp
stc
cltd
jne
adc
mov
sub
dec
xchg
mov
idivl
sbb
or
cmp
bound
xor
inc
outsb
or
mov
movl
pop
inc
fdivs
jge
pop
pusha
shll
mov
test
lods
int3
inc
add
push
bound
sbb
mov
xchg
das
push
scas
or
jne
adc
mov
jns
int3
and
mov
and
in
pop
push
mov
pop
pop
or
mov
icebp
mov
dec
push
inc
sbb
ret
aaa
push
nop
pop
jmp
pusha
sbb
rorl
daa
aam
movsl
inc
push
sbb
in
adcb
jbe
or
mov
stos
jecxz
adc
imul
and
cmp
pop
imul
and
cbtw
adc
and
cmp
lret
addr16
pop
shll
push
mov
lret
pop
clc
jmp
mov
mov
inc
xlat
mov
sub
xor
mov
sub
mov
push
push
ret
data16
jnp
push
pop
pop
jge
sbb
cld
lods
and
pop
xorl
push
rorl
dec
cmp
jmp
xor
lret
in
jb
jmp
arpl
test
repz
and
pop
sahf
mov
loop
sub
mov
stos
imul
popf
pop
cmp
cmp
test
xchg
push
sub
pop
ficompl
inc
sub
test
not
mov
rcll
mov
nop
outsl
xlat
mov
sub
mov
mov
shll
int
and
test
xchg
fnstenv
dec
add
xor
lea
xchg
andb
xor
clc
sbb
dec
imull
pusha
inc
shlb
push
mov
divb
std
movsb
jg
fcmovbe
fidivl
mov
push
insl
cli
sbb
mov
jne
outsb
dec
mov
sbb
pusha
mov
imul
shll
les
gs
or
gs
mov
push
jmp
in
adc
pop
dec
lea
movsl
add
mov
or
jl
fwait
push
push
push
lret
mov
out
and
pop
call
das
sub
xchg
fsubs
or
es
and
adc
dec
shrb
mov
aaa
leave
stos
pusha
rolb
test
fcom
aas
lods
sti
std
outsl
addb
jl
pop
repnz
jne
ficoml
outsl
sub
in
adc
adc
mov
fsubrs
mov
cwtl
outsl
mov
aas
mov
add
xor
or
xlat
mov
mov
or
inc
xor
cltd
lret
loop
jno
xor
mov
jns
js
pop
es
test
ljmp
fsts
or
inc
imul
cmp
scas
jg
aaa
ret
repz
cs
push
mov
arpl
cli
bound
cld
in
les
or
push
hlt
stos
cmp
test
hlt
xor
push
xchg
mov
mov
mov
jg
cmc
jmp
mov
xchg
push
mov
jns
in
cmc
mov
dec
stos
mov
pop
and
push
mov
xor
repnz
addr16
inc
hlt
and
mov
cmp
mov
sbb
mov
xlat
jnp
int3
pshufw
hlt
roll
xchg
stc
sbb
jns
push
clc
outsl
jne
mov
sbb
ljmp
xor
rolb
aad
nop
in
push
mov
mov
ror
mov
add
push
xchg
jns
iret
xchg
sbb
stos
mov
push
push
ret
mov
add
jns
sti
and
cmpsl
icebp
movsb
mov
test
movsb
jo
daa
lock
cwtl
adc
fmuls
shlb
or
pop
jp
pop
xor
jbe
sbb
pop
pushf
dec
dec
adcl
fwait
fs
arpl
mov
cmp
fcoms
mov
mov
dec
dec
test
jo
cli
addr16
sub
jg
scas
scas
hlt
cmpsb
repz
dec
mov
in
dec
ds
sbb
fdivrs
clc
mov
mov
mov
and
loope
push
les
aad
sahf
or
popf
and
cmp
pop
ret
adc
loop
mov
js
or
mov
or
lds
push
push
out
lods
pop
cli
jl
sub
roll
or
or
jno
mov
sbb
das
jo
shrl
jl
mov
iret
call
jo
lret
cmp
dec
pop
clc
outsl
aas
xor
mov
push
xorb
jl
sbb
inc
sbb
inc
test
and
fildll
in
stc
hlt
dec
xlat
lcall
sub
aam
mov
jp
imul
and
adc
mov
sbb
or
fsubrl
in
lcall
in
leave
out
mov
jb
repz
fstpt
cld
out
insb
sub
pop
lods
xor
enter
jbe
xchg
ja
mov
in
dec
into
ljmp
cmp
push
bound
mov
xchg
int
lahf
js
mov
mov
dec
nop
leave
pop
cmc
std
stos
fwait
test
add
mov
cli
xor
je
test
mov
dec
sbb
dec
dec
inc
adc
mov
xchg
in
test
jb
xchg
int3
sub
fnstenv
pop
inc
and
ret
fwait
mov
jo
inc
popf
or
inc
push
push
loope
push
aad
fimuls
popf
shrb
or
sbb
out
pop
xchg
inc
jnp
push
sbb
adc
repz
jmp
in
dec
and
push
mov
sarb
fiadds
ljmp
xchg
fwait
xchg
or
push
insl
out
pop
jl
mov
jmp
lret
sahf
lock
insb
mov
icebp
push
aam
inc
das
iret
inc
jno
aam
sbb
xchg
fneni(8087
or
les
out
xchg
popf
mov
xor
dec
push
mov
cmp
xchg
in
cmp
add
mov
and
cmpsl
jp
mov
sbb
inc
out
sbbb
push
dec
jg
lock
ds
jbe
jecxz
mov
scas
imul
mov
xchg
mov
dec
int
xchg
pop
es
decb
xlat
ja
les
mov
and
jle
pop
std
xor
int
popf
cltd
adc
daa
add
xchg
add
or
inc
in
pop
fwait
xchg
mov
mov
rclb
add
iret
jno
add
jge
jnp
mov
addr16
add
pop
orb
rcr
cmp
lret
int
rcrl
pushf
cvtpi2ps
and
cmp
clc
add
inc
add
outsb
fs
jg
sub
mov
scas
mov
stc
sbb
mov
sbb
add
mov
subl
sub
mov
shl
fcoml
push
aaa
inc
xchg
icebp
addr16
sub
xor
mov
or
ds
jg
mov
rorl
sbb
jecxz
pop
jne
ja,pn
daa
insb
aas
xchg
in
cltd
sub
int3
jmp
mov
or
insb
in
and
mov
vshufpd
inc
movsb
cmpsl
popa
andb
pminub
push
clc
adcl
stos
jne
lret
xor
clc
cli
and
inc
dec
movsb
lea
xor
pop
data16
cmp
sub
in
addr16
cmc
fst
lods
jl
pop
and
xchg
mov
out
jle
enter
jp
push
outsb
mov
adc
mov
test
rclb
add
insl
pop
inc
jne
xchg
pusha
pop
addr16
ljmp
sub
push
push
mov
rorb
addb
xchg
lret
insl
push
cmp
js
fisubrl
out
subb
repnz
call
inc
cmpsl
scas
stos
push
je
and
sbb
test
shrl
ret
dec
leave
aas
and
inc
mov
fs
mov
fidivl
cwtl
cmp
sbb
pop
std
mov
lods
sub
stc
and
push
ja
push
push
and
pop
outsl
stos
bound
aam
in
ret
test
and
stos
mov
adc
call
fldenv
aaa
cs
push
lods
add
sub
mov
xchg
sbb
mov
aas
xchg
dec
ja
mov
inc
or
lcall
inc
fisttps
arpl
cmp
gs
push
push
pusha
mov
clc
inc
jo
inc
cmc
inc
fidivs
push
or
mov
outsl
bound
cmp
cmp
push
gs
jne
cli
in
add
push
out
mov
or
add
mov
mov
outsb
pop
pop
push
cmp
testl
cltd
add
mov
xchg
aam
mov
cmp
data16
jo
pop
ror
add
lret
fwait
cli
fwait
aad
jge
xor
clc
and
push
cmp
jne
scas
sub
fcmovnu
cld
sbb
sarl
mov
mov
inc
mov
ret
adc
out
jp
test
mov
ja
pop
xor
sbb
and
adc
dec
sub
mov
push
daa
outsl
popf
jnp
adc
out
jg
or
fisttpll
aaa
pop
push
and
xchg
jl
jae
std
mov
ds
aas
lock
int3
and
das
insb
xchg
sbb
mov
mov
and
aam
mov
lahf
sub
xchg
ror
rorl
das
mov
mov
movl
cli
xorb
sahf
test
cmp
stos
movsl
or
popf
daa
inc
test
pop
push
movsl
out
stos
xchg
movsl
mov
pushf
dec
imull
xchg
das
xor
fistps
sbb
ljmp
mov
push
jle
addr16
aam
mov
jp
jb
fdivs
into
jle
mov
lret
imul
imul
pop
mov
repz
mov
jo
ror
icebp
lock
xchg
popf
fcom
scas
cmp
cmp
fwait
and
sub
add
pop
xlat
mov
xor
dec
or
loope
push
shrl
rorl
ret
lds
dec
jmp
mov
into
loope
jnp
and
int
jb
add
push
enter
sub
aaa
popa
cmp
jg
pand
out
xorps
mov
sbb
mov
sbb
jb
and
int
cltd
sub
fdivrl
mov
cmp
cmpsl
lock
push
icebp
pop
dec
and
inc
jge
subb
into
mov
cmc
lods
fiadds
js,pn
mov
fists
lock
inc
stos
jb
or
fs
add
inc
psubb
xchg
adc
imul
insl
inc
pop
imul
xor
ljmp
jecxz
shr
leave
ljmp
imul
mov
es
lods
mov
sub
jne
sbb
or
fcoml
mov
add
std
dec
dec
imul
repz
loope
mov
sbb
mov
jbe
mov
cmpsb
mov
xor
or
loopne
mov
ror
sub
add
adc
jge
dec
push
outsl
add
push
or
loope
scas
mov
jmp
outsb
int
mov
ss
xchg
mov
xor
mov
cltd
mov
idivl
fs
jg
in
jbe
xrelease
add
adc
movsb
or
add
jb
hlt
cli
aad
lock
aad
scas
out
dec
xor
mov
lret
ds
imul
das
repz
std
loop
in
cmc
imul
je
fdivrl
scas
movsl
out
xchg
mov
sub
mov
cmp
adc
sub
aam
je
xor
cmpsl
sbb
xor
add
mov
xor
test
popf
and
lods
mov
mov
mov
ja
subl
inc
push
mov
dec
daa
movsl
xchg
or
loopne
xchg
call
jg
call
leave
inc
sbb
ja
movsl
cmp
pushf
pop
pop
mov
sbb
jmp
mov
jecxz
cmc
and
cmp
sbb
popa
sub
movl
dec
or
push
popa
mov
mov
cltd
inc
ja
rclb
pop
insb
and
mov
mov
imul
cmp
popa
stos
mov
and
xchg
xchg
imul
and
xor
xchg
bt
mov
repz
push
call
xor
sahf
or
movsl
cmpsb
icebp
ds
test
iret
mov
imul
sti
mov
jb
sbb
push
push
inc
aas
or
loopne
sbb
mov
in
je
add
push
lods
ds
push
or
ja
imul
inc
or
es
mov
jmp
jecxz
sub
clc
sub
xchg
stos
out
rcll
cmc
sub
mov
xchg
mov
xchg
inc
xchg
or
stos
outsb
mov
pop
cmp
idivl
mov
or
js
xchg
pop
push
jmp
andb
cmp
jecxz
sahf
jae
xor
xor
dec
ret
xchg
arpl
mov
insl
rcr
insl
pop
popf
loope
inc
mov
mov
daa
sbb
mov
insl
xchg
and
fdivl
shlb
iret
mov
adc
push
pop
jb
add
sbb
cwtl
pop
push
aaa
mov
les
imul
fwait
std
cmp
jg
push
or
sub
jg
mov
push
dec
les
pop
push
sbb
lods
dec
insl
xchg
cmpsb
pop
or
mov
adc
test
psraw
stos
fwait
roll
imul
and
sbb
jle
mov
nop
cs
and
mov
mov
push
cmp
orl
adc
fs
cld
movsb
aas
mov
dec
cltd
push
cwtl
sub
push
sbb
stos
cltd
jae
pop
push
js
mov
lock
push
pop
bound
mov
jns
inc
push
mov
push
out
add
xchg
push
mov
fxtract
mov
pop
or
mov
pop
xor
out
add
into
xchg
test
sti
leave
xlat
je
and
sbb
inc
idivl
dec
bswap
jmp
push
cmp
test
iret
mov
push
or
sub
cmp
orl
mov
ret
out
cmp
cmpsb
xor
pop
push
int3
adc
jbe
pop
popa
dec
jnp
sbb
lea
dec
pop
leave
sub
movsb
cmp
push
pop
jle
jb
adc
dec
sub
stos
in
sub
sbb
sub
aam
stos
xchg
mov
jnp
pop
jno
mov
mov
xchg
out
jnp
lds
pushf
xlat
cmp
pop
push
push
jne
out
inc
pop
add
les
rorl
xor
sbb
push
adc
mov
mov
sti
aaa
xchg
in
sub
cmp
orb
cltd
ss
jl
or
inc
loop
cmp
das
mov
aam
fwait
jnp
loopne
dec
mov
jmp
push
fwait
cmp
sub
add
pop
and
gs
test
or
test
adc
xchg
fldcw
arpl
xchg
jecxz
add
hlt
or
and
xchg
xchg
inc
in
sub
stc
jno
push
mov
sbb
or
loop
test
outsb
ss
pop
je
and
push
cmpsl
cmc
add
dec
testl
mov
add
jge
ret
int
insb
test
pop
cwtl
outsb
mov
mov
jp
loopne
and
mov
xor
fs
sub
mov
or
out
xlat
cmp
adc
in
and
insl
out
outsb
adc
adc
mov
mov
jbe
or
cltd
and
add
daa
inc
lock
fwait
adc
mov
push
test
jg
pop
pop
stos
inc
push
dec
mov
icebp
dec
push
adc
push
dec
mov
into
cltd
fnstsw
pop
add
lock
cmp
mov
push
xchg
push
sub
scas
xchg
mov
lock
cmp
roll
xchg
jb
pushf
jb
cmp
pop
cmp
mov
xchg
sbb
in
push
stos
ds
mov
jnp
lret
inc
jle
push
jle
jae
dec
adc
insl
push
in
inc
push
cmp
cltd
testl
sti
fiaddl
inc
in
addl
cmc
xchg
inc
stos
out
testb
test
jmp
mov
je
lds
insb
xor
fwait
movb
popa
and
pop
mov
push
or
andl
mov
sub
and
cmp
mov
shrl
js
and
jmp
pusha
xchg
cmpsb
movsb
ljmp
movb
jmp
int
dec
push
lret
in
mov
sbb
mov
imul
ret
mov
rolb
cwtl
push
leave
sub
pushf
mov
jp
sub
sub
add
mov
mov
mov
mov
mov
dec
mov
mov
pop
push
loope
pop
add
push
dec
daa
out
adc
leave
pop
nop
xchg
mov
repnz
scas
out
scas
mov
pop
movsl
pusha
push
daa
cltd
test
or
je
push
add
fstpl
loopne
jns
mov
test
hlt
adc
inc
ret
mov
fdivl
cmc
ljmp
dec
cltd
adc
mov
add
scas
aam
outsb
cmp
sbb
repnz
push
xor
bnd
lods
dec
fwait
mov
cmp
std
imul
jg
iret
dec
sbb
daa
push
popa
mov
pop
xchg
out
sbb
xchg
scas
xchg
mov
clc
inc
in
dec
shl
in
xor
fdivl
mov
pop
xor
cli
xchg
inc
push
xchg
sbb
jl
fldcw
xchg
test
xlat
push
xchg
cmp
or
icebp
fbstp
and
mov
adc
sbb
pushf
cmpsl
adc
fdivl
or
sub
adc
divb
add
movsb
lods
mov
clc
fdivs
arpl
push
in
cmp
push
cmp
inc
xchg
insl
sbb
aam
ja
cmpsb
sub
mov
xor
ja
cmpsl
or
jo
and
lret
loope
jge
psubusw
ljmp
adc
and
push
nop
jb
push
jae
push
jl
mov
add
or
mov
rclb
and
jbe
push
nop
repz
sti
sbb
add
add
shrb
add
sbb
cmp
or
sbb
mov
mov
pop
pop
mov
fistps
push
lret
and
jbe
jmp
xlat
jae
test
call
jns
mov
xchg
inc
scas
xor
or
popf
push
xor
cwtl
push
mov
lret
or
dec
test
sbb
jp
loop
xchg
push
cmpb
pop
xchg
rcrb
sub
popa
ja
clc
cmp
mov
inc
out
push
xlat
pop
insb
nop
in
out
movsl
xor
in
shll
or
sahf
mov
cmpsl
dec
aam
jge
mull
or
ret
or
adc
scas
xchg
mov
test
sbb
ja
sbb
jns
lods
das
sarb
stos
mov
aas
and
pushf
inc
mov
ja
pop
adc
shr
loope
sti
xchg
cwtl
inc
popf
jnp
cli
jecxz
pop
repnz
popf
repnz
xor
adc
cmp
cli
lahf
cltd
jae
les
and
cwtl
test
xor
jnp
enter
cltd
sub
fnstenv
pop
in
outsl
leave
es
lret
pop
push
popa
push
clc
inc
inc
and
jo
cmpsb
adc
movsl
or
sub
push
out
xchg
xchg
ljmp
pop
movsb
arpl
dec
and
adc
jo
outsl
out
int
sti
xor
mov
adc
lods
push
or
std
jno
addr16
mov
movsl
push
mov
ljmp
ret
jnp
cs
bound
jne
movb
les
test
xchg
and
loopne
jp
ds
idivb
push
loop
arpl
sbb
jl
add
xchg
lcall
cmpsb
mov
xchg
lods
xchg
rolb
pusha
rcr
xor
jmp
cli
mov
adc
inc
cli
loopne
xlat
in
pop
add
int
aam
cltd
rcrb
jg
cmp
stos
push
mov
jmp
push
vcvtpd2dq
pop
mov
jb
inc
jo
adc
or
push
bound
testl
lds
or
cli
pop
xor
sbb
mov
dec
scas
jne
cmp
les
cmp
inc
scas
jecxz
std
mov
pop
mov
sbb
xor
stos
dec
pushf
loopne
fnstcw
pusha
xor
cmp
add
pop
lods
xor
push
xchg
mov
xchg
sbb
mov
jo
popa
cld
rorl
addb
pushf
test
lods
jge
pop
sbb
push
mov
push
mov
mov
divb
jns
adc
leave
dec
jl
push
ss
and
repnz
jecxz
mov
push
xchg
add
inc
fldcw
nop
mov
push
pop
and
push
or
jne
in
mov
push
pop
cld
repz
std
cmpsl
je
mov
pop
jne
mov
add
idivl
push
jnp
mov
call
lods
arpl
pop
in
pop
mov
add
xor
and
js
or
movl
cltd
dec
xchg
outsb
in
xchg
movsb
push
cwtl
mov
push
jno
sahf
push
test
test
frstors
xorl
cli
cmp
scas
cmp
popl
pop
bound
inc
push
in
jecxz
jbe
push
push
pop
inc
sub
arpl
mov
enter
movsl
push
hlt
add
cmpsb
xchg
mov
jae
pusha
hlt
xlat
jae
addr16
pushf
sub
adc
cmp
sti
aas
pop
imul
sub
pop
push
insl
movsb
das
les
in
mov
push
shll
mov
rorb
gs
mov
xchg
or
adc
push
clts
or
mov
cmp
fwait
mov
popf
pop
mov
mov
jmp
cld
xchg
fdiv
call
pop
subl
sub
in
adc
notl
in
mov
or
pop
adc
xor
fwait
or
clc
sbb
hlt
cwtl
arpl
add
add
fisttpll
es
xor
sub
test
enter
mov
xchg
nop
inc
shrl
in
imul
imul
jnp
data16
in
inc
cs
push
sub
push
push
cmp
shll
or
lret
out
cmp
dec
add
push
mov
jle
test
out
into
shlb
movntps
sar
jb
add
enter
dec
mov
pop
jge
inc
xchg
or
cmc
fdivs
push
push
inc
daa
loop
or
or
call
int3
daa
sub
in
mov
lret
ret
aaa
mov
call
pop
jle
mov
nop
mov
pop
add
mov
pop
sub
lahf
jo
push
int
add
cmc
push
adc
inc
xchg
xor
or
jp
xchg
jae
fs
test
addr16
ljmp
push
jb
aaa
arpl
push
jge
pusha
dec
adc
push
lock
ljmp
adc
cwtl
mov
lea
pushf
mov
repz
fmuls
or
dec
movsl
jge
xlat
cmp
fildl
std
sbb
mov
jmp
or
xor
xor
dec
mov
xchg
imulb
mov
notb
mov
je
inc
iret
inc
stos
adcb
cmpsb
stc
xorl
lret
test
movsb
lock
add
test
push
sahf
lock
add
les
jne
mov
out
xchg
mov
jle
xor
pop
popf
popf
xor
cmp
in
push
push
mov
sub
jl
xlat
cmp
in
mov
mov
or
jnp
out
insl
sub
lods
daa
stos
cmpsl
pop
mov
jmp
into
repz
mov
push
cli
mov
insb
ljmp
jmp
sub
mov
dec
outsb
push
leave
sahf
ss
stos
test
adc
imul
push
ret
aaa
andb
pop
scas
icebp
insb
jle
xchg
xchg
mov
cwtl
lcall
ficoml
pushf
popf
int3
mov
negl
sbb
pop
gs
lock
jecxz
mov
xor
dec
je
mov
jl
outsl
js
sbb
xchg
or
sahf
cmc
xor
outsl
dec
sbb
and
xchg
inc
into
inc
push
mov
incl
je
outsb
dec
jns
cmp
xchg
inc
out
call
std
cli
sub
aaa
hlt
lock
ja
push
fcmovne
lods
mov
push
ja
mov
dec
dec
xlat
dec
jg
stos
cmp
fwait
jle
bound
mov
ret
in
sub
lret
and
mov
mov
fdiv
mov
pop
sbb
cmpb
and
int3
mov
inc
addr16
movsl
sub
into
icebp
mov
test
mov
repz
hlt
int3
cs
inc
mov
or
adc
add
aas
jle
rorl
push
repnz
inc
adc
gs
in
xor
shl
outsl
andb
loopne
rcrb
ja
adc
scas
add
adc
imul
mov
or
pop
sbb
push
out
push
insb
popl
inc
lret
movl
frstor
ss
int3
in
out
adc
sbb
add
packssdw
fwait
loop
je
push
int3
xchg
push
stos
dec
lods
mov
pop
dec
inc
dec
pop
push
test
cltd
fwait
movsl
dec
mov
clc
jecxz
aaa
imul
jl
shrl
sbb
pop
idivl
xor
mov
lock
mov
xor
lret
ljmp
fcmovnbe
mov
inc
pusha
mov
lret
gs
dec
ret
lret
mov
jo
push
inc
sbb
push
xchg
pusha
mov
rcl
in
pop
add
int
or
sbb
aas
adc
cmpsl
sti
cmpsb
inc
xchg
xchg
iret
dec
inc
sahf
aad
jnp
dec
adc
pusha
xor
fwait
ret
inc
push
loop
or
sub
jnp
mov
loope
or
cli
push
sbb
rcl
add
xchg
mov
push
push
xchg
mov
nop
mov
ds
mov
mov
pop
pop
pop
fcmovbe
cmp
push
mov
mov
cmp
aaa
imul
mov
mov
dec
mov
pop
ss
hlt
xchg
in
inc
out
inc
sbb
cwtl
inc
and
pop
dec
and
andl
and
xchg
icebp
xchg
into
mov
xchg
popf
push
pop
jge
jg
daa
cmc
iret
ret
and
mov
mov
inc
pop
rcll
pushf
das
fmuls
cmpsl
int3
insb
sub
std
mov
outsl
push
ja,pt
mov
add
into
stos
mov
dec
inc
xor
sub
das
add
or
xchg
add
jmp
and
in
imul
in
leave
stos
lods
ret
fs
jge
cmp
cmpsl
lock
iret
xor
sbb
pusha
mov
mov
icebp
repz
jno
dec
fisubs
lods
fisubs
mov
sub
inc
push
or
addr16
fidivs
cmpsl
pop
movsl
popf
mov
jp
loopne
cmc
fcmovb
mull
shr
add
or
dec
aad
push
ret
nop
arpl
mov
sub
sbb
mov
int3
jle
cltd
stc
add
pop
push
mov
shr
xor
mov
repz
add
jns
add
push
push
xor
mov
rcrl
mov
mulb
mov
loope
mov
add
adc
inc
adc
ja
pop
pop
popf
push
in
push
aam
jns
ja
cmc
aas
xor
decl
roll
lods
inc
push
sub
push
lcall
scas
sub
mov
test
imul
sub
ds
pop
outsb
cmpsl
ss
hlt
and
adc
in
and
pop
das
jb
xor
inc
mov
jmp
jae
lret
cmc
mov
jno
aam
dec
and
mov
jne
adc
test
jnp
or
outsb
jle
or
es
nop
cli
sub
std
fistl
adc
mov
xlat
nop
les
rorl
cltd
cmp
cld
ret
xor
ljmp
fs
add
and
pop
scas
adc
int
addr16
fwait
mov
xchg
int
je
daa
pop
push
push
dec
cwtl
xor
call
aaa
and
subl
sahf
loopne
xchg
cld
push
xchg
lret
nop
scas
sbb
imul
xchg
test
jno
pop
pop
jle
je
cmp
mov
xchg
inc
push
mov
add
dec
jp
pusha
pop
xor
out
jmp
jns
mov
cltd
test
dec
addb
std
mov
in
and
cmp
pop
int
daa
fnsave
repnz
icebp
mov
inc
sub
pop
push
or
and
xchg
push
xor
lds
mov
fdivr
int
mov
push
imul
fidivrl
pop
aaa
sub
sarl
and
sbb
xor
out
sub
inc
fcompl
add
outsb
cmp
sub
push
fwait
or
imul
jge
cmp
ficoms
push
shll
test
mov
jmp
repz
and
shrb
es
push
sub
or
inc
inc
push
call
ljmp
out
jns
push
scas
pop
sub
into
stos
xor
aaa
lods
adc
popa
incl
shlb
insl
sarb
sbb
jp
fdiv
notw
lahf
ret
test
shll
cld
sar
rcl
or
jns
das
mov
fimuls
and
or
xchg
jmp
adc
test
and
cmp
mov
jg
clc
shl
or
cmp
cmp
arpl
mov
mov
lret
addr16
sarb
xchg
sub
cmp
loopne
iret
cs
test
push
mov
mov
inc
gs
lret
jnp
adc
cmp
pop
and
cmp
js
std
push
cmpsb
jns
pop
cmc
cwtl
mov
aam
pop
mov
das
jae
hlt
out
gs
jle
lret
push
fisubl
jle
sbb
divl
sahf
lahf
jns
xchg
add
xchg
mov
cltd
shlb
fs
dec
mov
dec
pop
out
or
pop
hlt
dec
mov
cmp
cmp
out
jmp
movsb
adc
lods
imul
das
push
iret
jns
and
xor
loope
mov
jo
in
mov
dec
lods
das
xor
dec
scas
pop
test
push
lret
insb
mov
inc
test
jg
in
daa
cmp
enter
int
stos
jns
dec
jbe
and
adc
pop
dec
pop
nop
push
push
or
inc
outsl
scas
mov
movsb
mov
lds
mov
add
and
lods
data16
ja
sti
fidivrl
dec
stos
dec
add
orl
test
sub
push
sti
lds
jb
push
push
dec
lea
mov
sarl
and
inc
push
es
cmp
ret
mov
xchg
mov
ret
fwait
rorb
enter
ja
and
mov
mov
insl
scas
fstpl
sbb
add
scas
fprem1
movsl
mov
js
les
xchg
icebp
idiv
add
xor
or
or
pop
push
aam
int
fsub
sarb
xor
test
negb
pop
daa
popa
ficoms
jmp
das
xor
pop
imul
jge
int3
icebp
ficoms
ret
test
inc
das
roll
cmpsl
das
push
sub
jl
pop
xor
cmpsl
inc
xor
dec
mov
jle
shl
vpshaw
jo
es
incl
pop
hlt
addr16
into
cmc
push
rcrw
cmp
push
and
pusha
jmp
in
test
jg
and
insl
out
fnstsw
jbe
dec
test
dec
or
nop
lods
cld
inc
mov
imul
sbb
dec
or
lcall
or
sbb
movsl
inc
and
mov
xlat
xor
xchg
jne
add
jb
xor
imul
adc
xor
arpl
pop
pop
lret
fcompl
xor
xchg
xlat
cld
fstpl
sbb
push
mov
xor
movsl
daa
fsubrs
insl
xor
fs
loope,pt
push
inc
iret
cli
sahf
jo
mov
and
shll
insl
cltd
and
mov
jge
cmc
outsb
stc
fisttpl
mov
or
inc
dec
lret
in
rcll
jo
jne
xchg
adc
pop
mov
inc
cmpsl
jbe
out
xor
sbb
xchg
sbb
enter
lods
stos
inc
repnz
xor
or
fadds
fwait
call
nop
cmp
add
int
fisttps
loope
jo
inc
mov
sub
adc
out
mov
and
dec
rorl
push
adc
cld
jae
xchg
daa
in
sbb
test
les
cmp
push
adc
cltd
jno
leave
stos
jmp
adc
mov
outsl
xchg
jmp
addb
out
popf
xor
jle
dec
add
loope
dec
cld
out
xchg
out
and
rcll
clc
cmp
cmp
pop
loope
mov
xor
cwtl
mov
imul
or
subl
pop
jl
jnp
cmc
sti
jae
dec
stos
int3
in
cld
mov
mov
out
sbb
sbb
adc
fistpl
std
jb
jne
popa
rorb
test
sub
pop
push
std
hlt
mov
jo
je
aad
add
inc
xor
mov
fstpt
mov
push
cmc
push
bound
sti
leave
mov
pop
fiadds
push
fcompl
adc
add
dec
rorb
jbe
sbb
xor
cmp
lcall
jg
cmp
testl
mov
mov
fists
sub
jne
jno
fidivl
and
xchg
cmp
std
adc
andb
inc
pop
mov
and
jmp
fwait
sub
fdivrl
lahf
in
push
negl
ljmp
jecxz
es
cli
inc
or
ja
mov
push
int3
add
mov
stos
dec
jns
push
push
addr16
mov
cli
inc
jnp
add
fcmovnb
jo
jnp
add
in
stc
adc
jb
fwait
loope
pop
xchg
push
sub
in
testl
cwtl
push
int3
inc
das
mov
push
push
xor
nop
repnz
leave
dec
mov
hlt
js
clc
lock
bnd
repz
inc
mov
mov
cmp
and
and
movsb
push
jno
mov
sbb
mov
jge
pushf
repnz
mov
lcall
jmp
out
cmpsb
push
enter
add
aas
or
jl
sbb
lock
test
mov
fstpl
pop
test
arpl
adc
idivl
mov
or
cli
insb
faddl
rcrl
pop
clc
push
xor
into
std
jbe
iret
loop
data16
loope
movsl
mov
js
shll
adc
mov
inc
and
or
movsl
and
sbb
mov
aas
lods
adc
lret
mov
lret
mov
aaa
lea
add
dec
sbb
incl
aam
sbb
or
es
jnp
xor
out
imul
jl
pop
xor
in
icebp
mov
stos
pop
rcrl
cmpsl
dec
jmp
sbb
imul
mov
hlt
icebp
ds
iret
insl
scas
pop
lahf
call
js
lock
ret
jae
les
pop
sbb
inc
jle
mov
sbb
inc
add
shrw
mov
xor
jg
mov
push
xor
jecxz
aas
push
scas
loop
movsb
xchg
push
add
aad
mov
mov
das
out
xchg
mov
mov
out
mov
js
or
or
movsb
dec
popa
nop
inc
ror
ret
leave
fistpl
addr16
jmp
lock
mov
cwtl
xor
xchg
xchg
xor
jns
and
int
scas
rolb
sub
mov
lods
clc
push
jp
int
jo
shll
scas
sti
add
out
or
jbe
mov
push
shl
xor
sarb
stos
add
pop
js
sub
adc
cmp
pop
imul
fmulp
loopne
or
aam
jno
ret
arpl
fiaddl
pushf
enter
inc
jmp
sahf
psrld
sbb
mov
out
xchg
dec
stos
sub
outsb
test
test
nop
add
pop
movsl
addr16
ss
or
ficoml
fbld
inc
divl
xor
xor
enter
pushf
push
loopne
outsl
push
add
lods
push
and
and
or
out
call
stos
cmp
imul
bnd
xor
in
lds
int
cmc
arpl
push
pop
or
xchg
test
adc
insl
aam
mov
test
fwait
add
jmp
cmp
sti
push
lret
int3
movb
sub
out
xor
data16
dec
xchg
lods
jl
test
pop
xlat
xor
dec
jo
int
aad
mov
sub
lods
cs
jo
int3
ret
or
es
test
cmpsl
subb
js
lcall
jp
outsl
pop
xor
cmpsl
mov
or
scas
add
sahf
inc
inc
loope
mov
or
push
jl
or
ss
repz
push
nop
add
jbe
xchg
xor
xchg
xor
or
sub
in
adc
add
xchg
pop
xchg
jns
in
subps
sbb
add
outsb
dec
mov
xchg
jp
out
dec
inc
sub
add
dec
jmp
cmp
inc
sub
rcrb
repnz
js
mov
dec
in
sub
movsb
cwtl
sub
mov
inc
insl
inc
and
lods
sub
repz
ds
es
stos
call
add
scas
dec
pop
xchg
es
lods
push
daa
adc
sbb
cmp
jp
stos
flds
push
inc
repnz
enter
fnsave
outsl
jnp
xchg
jle
sub
notb
sbb
jl
and
pop
add
fwait
in
std
fnstcw
jmp
jl
mov
insb
nop
pop
loop
sahf
cmovno
jl
cmpsb
les
xchg
ror
test
les
fcmovnbe
xor
pop
xchg
pop
add
xchg
fiaddl
add
pop
fucomip
mov
mov
xchg
inc
jmp
dec
pop
in
hlt
sbb
pop
inc
lret
sub
sbb
lock
push
decl
dec
subb
mov
push
mov
stc
insl
mov
and
aas
xor
lods
in
jle
xor
xlat
roll
jl
arpl
fdivrs
sbb
js
adc
aaa
mov
pusha
int3
push
mov
cli
fadd
testb
xchg
inc
scas
pop
add
inc
fcmovbe
xchg
ljmp
cmp
aas
rcl
jl
xchg
lahf
jg
bswap
xor
sub
filds
sahf
jns
mov
movsl
pop
pop
lods
jns
js
adc
adc
jno
out
lock
js
dec
mov
pushf
mov
push
push
xchg
rolb
mov
dec
add
xchg
and
hlt
or
bound
insb
in
push
adc
pop
xchg
inc
sub
adc
mov
mov
mov
mov
aas
pop
loop
and
jbe
cmp
sbbl
jae
cmp
dec
xor
mov
add
pop
mov
arpl
call
mov
fisttpll
push
mov
pusha
and
mov
fsubs
cmp
pavgw
movsb
inc
xchg
js
and
xchg
arpl
stos
xchg
mov
pop
ja
ljmp
imull
scas
fcoml
mov
sbb
add
sub
or
aam
or
inc
test
addr16
dec
mov
icebp
dec
loope
sti
or
jae
mov
mov
lea
pop
arpl
jecxz
add
xor
ja
inc
lock
pop
outsl
or
push
rol
lahf
pop
movsb
divb
pop
out
adc
dec
or
daa
and
cmp
pop
dec
mov
loopne
cld
sub
mov
outsl
pop
jno
sbb
lcall
cld
lcall
or
mov
push
movsb
lods
addb
je
out
testb
mov
repz
cli
xor
fucom
fiadds
mov
sti
sub
pop
sbb
push
lret
out
loope
mov
xchg
sti
sub
push
adc
mov
in
cmp
outsb
out
jbe
push
inc
data16
nop
dec
popf
inc
inc
cmc
stos
pop
push
push
inc
cmp
test
jae
cmp
push
and
fiadds
hlt
mov
mov
sub
lds
dec
xor
push
xor
pop
xorb
cli
sbb
jge
push
daa
lea
mov
insb
jno
mov
dec
ss
mov
jae
xor
shll
mov
mov
aam
fcoms
pop
es
mov
xchg
inc
xchg
and
cld
addr16
sub
inc
pop
jb
js
test
cmc
ret
xchg
jp
mov
arpl
push
push
bswap
movsb
std
pop
fiaddl
xor
inc
add
adc
movb
std
mov
inc
jno
adcb
rol
add
fchs
dec
mov
loopne
test
nop
mov
mov
add
icebp
add
adc
xor
lea
sbb
add
cmp
pop
or
lea
xor
push
fldcw
mov
xchg
cmc
add
mov
lock
arpl
ret
je
loopne
xchg
lret
loop
pop
nop
pop
popf
flds
hlt
xlat
jbe
out
add
cltd
and
xchg
mov
jmp
sub
mov
dec
cld
push
test
incl
cmp
inc
stc
test
jle
ljmp
call
mov
stc
mov
xchg
fcmovbe
ja
aaa
ljmp
sbb
mov
xchg
cmpsb
lea
lret
cmp
lahf
loop
cmp
adc
xlat
int
je
jns
mov
addr16
loopne
xchg
xchg
pop
repz
mov
mov
aad
jp
test
and
in
subl
mov
mov
out
outsb
test
rcrb
pop
clc
push
push
mov
mov
mov
add
and
test
inc
scas
mov
push
pop
enter
mov
lods
test
roll
and
pop
mov
lret
pop
cmp
xchg
fwait
add
push
jmp
inc
pusha
cld
inc
pop
sub
inc
mov
out
in
call
sbb
jb
aaa
jge
icebp
cld
inc
cmpsb
scas
test
or
jecxz
stos
mov
ret
pop
sub
shrb
cmp
in
mov
frstor
dec
mov
adc
es
and
jle
lea
lds
out
nop
mov
fisubs
addb
jmp
ss
das
arpl
ret
shrb
xchg
jno
push
outsl
or
xchg
sahf
movsl
mov
in
fiaddl
mov
jp
ret
loope
mov
stos
orl
hlt
adc
xchg
jp
lret
andl
mov
xchg
mov
mov
sbb
sti
loop
shr
into
dec
inc
add
inc
jg
dec
add
bound
jecxz
leave
cwtl
ss
iret
sahf
cli
adc
lods
push
out
inc
loop
inc
lahf
mov
test
aas
xlat
daa
mov
inc
int3
addr16
cmp
into
add
jns
mov
stos
ficoms
sbb
les
rorb
insb
sub
mov
jae
sbb
sub
jo
dec
sub
inc
popa
into
ror
fistps
std
jecxz
or
mov
sbb
frstor
pop
sbb
loopne
push
jnp
dec
mov
insb
fldt
ret
lock
pop
addr16
enter
dec
or
mov
fcmove
jecxz
sub
incl
lcallw
arpl
lret
mov
add
mov
mov
in
sbb
jnp
inc
adc
xor
jge
or
mov
cmp
lds
es
pop
lcall
add
push
ret
repz
repz
call
aaa
adc
lcall
jl
push
jns
cmp
icebp
mov
or
outsb
je
inc
test
fdiv
xchg
push
gs
lea
push
jmp
popa
cmpsl
cmp
es
insb
jl
mov
inc
out
subb
call
out
push
sub
xchg
xchg
mov
inc
sbb
push
das
mov
pop
or
or
push
aam
mov
sahf
lock
push
sbb
push
mov
int
lds
repz
jo
lds
cmp
mov
inc
adc
pusha
xor
jl
lock
in
mov
jmp
push
push
mov
or
ljmp
imul
xchg
add
pushf
pop
inc
test
gs
adc
fwait
pop
ficomps
jle
jne
cmpsb
pop
mov
fadds
push
pop
cwtl
ret
dec
mov
xor
test
clc
lahf
iret
mov
sti
int
ret
xchg
fs
sub
out
int
fs
cs
dec
xor
xor
jbe
jns
out
cmpsb
pushf
aam
or
clc
cli
adc
lods
jbe
add
cmp
jmp
ja
outsb
dec
pop
aad
das
aaa
fimull
dec
pop
lds
loop
rcll
xchg
shll
out
push
aas
sub
cmpl
mov
ret
daa
pop
jp
bound
inc
cmp
sub
jne
pop
cs
pop
sbb
xor
inc
bound
xor
out
imul
mov
imull
xor
es
popf
jle
pop
mov
push
or
mov
repz
sbb
jno
cmpsl
outsb
loop
fists
lods
add
pop
sti
fistl
int
pop
jmp
mov
xlat
lods
loope
push
mov
pop
outsl
or
add
or
test
mov
cmpsl
or
iret
lods
xor
aad
cmc
sub
xor
xor
call
jg,pn
adc
aam
aaa
sbb
rolb
movsl
out
iret
and
inc
and
xchg
sbb
and
push
add
jns
adc
icebp
pop
in
bound
sub
add
jnp
mov
test
js
inc
adc
inc
xlat
xchg
in
pop
or
dec
jne
pop
lahf
push
imul
push
mov
test
out
inc
sub
test
cs
pop
push
out
jae
jo
popl
jecxz
xor
aad
scas
mov
inc
add
ret
xchg
add
hlt
jecxz
nop
in
push
jp
cmp
lods
add
loope
xor
cli
jno
xor
insl
or
xchg
rclb
leave
shlb
push
pop
popf
sub
xor
and
jge
jl
idivb
fmull
sbb
add
repz
push
push
pop
or
pushf
aas
or
adc
outsb
inc
or
lahf
lret
jmp
jbe
enter
dec
push
sub
cvtps2pd
imul
sub
pop
or
arpl
dec
and
add
int3
mov
ret
sub
push
fsubrs
mov
cmp
dec
add
mov
sbb
push
inc
rclb
dec
orb
xchg
and
dec
in
cmp
rcll
stc
push
outsb
fcmove
adc
or
push
jmp
push
and
std
iret
cmc
out
movsl
push
int3
mov
or
aam
roll
xchg
out
sbb
or
jae
daa
xchg
mov
addl
push
xor
pusha
testb
adc
mov
mov
cmc
mov
add
repz
das
mov
ja
xor
cltd
sahf
mov
bound
out
test
outsl
push
aas
scas
adc
jbe
pop
in
dec
sbb
push
cmp
xchg
xchg
jle
cs
xchg
movsb
jb
mov
fdivr
push
subl
rol
iret
mov
push
xor
push
bound
dec
mov
imul
mov
add
cmp
popf
jle
stos
rcrl
add
imul
adc
in
mov
add
bnd
mov
mov
sbb
sbb
cmp
dec
push
or
call
enter
sub
fldl
ds
ss
es
std
inc
pop
sahf
rol
inc
pop
stc
jne
aam
imul
mov
xchg
xchg
push
dec
push
push
add
je
stos
ficoml
stos
dec
jle
add
dec
mov
outsl
jp
cmp
cmp
cld
into
lds
iret
data16
and
pop
rorb
fwait
decl
inc
pop
jne
xchg
dec
cmc
or
cmp
mov
lahf
movb
testb
ret
bound
imul
enter
sbb
xchg
clc
pop
add
jno
jae
decb
sub
adcl
jp
rcl
push
mov
sti
pop
pop
dec
push
scas
iret
fiaddl
subb
fsubrl
dec
jmp
nop
jbe
mov
pop
add
stos
sub
lret
mov
sbb
sub
jecxz
ret
test
sub
lds
sarb
xchg
push
fistps
ret
cmpsl
imul
sbb
call
shrl
xor
jbe
movsl
lock
outsl
fsubp
test
dec
mov
mov
lock
adc
xor
and
pushf
inc
push
push
push
mov
or
cmpb
leave
mov
inc
jmp
mov
outsb
pop
pop
and
adc
icebp
inc
cli
add
jb
cli
and
in
jbe
lods
ficompl
jmp
addr16
mov
popf
and
sti
jnp
dec
sbb
jnp
jmp
lock
rcr
shll
xchg
or
pop
inc
inc
cmp
lret
push
add
xchg
mov
and
sbb
dec
sbb
out
xchg
xor
xchg
cmpsl
mov
jmp
dec
mov
out
repnz
data16
add
or
xchg
popa
mov
ficoml
arpl
or
xor
mov
mov
mov
shl
jmp
rorl
inc
fwait
jg
stos
mov
pop
shll
xorb
in
or
test
push
fwait
sbb
imul
jns
pushf
or
movl
inc
call
push
dec
adc
je
test
jo
xor
fldt
push
iret
shlb
xor
mov
fucomp
inc
jns
cltd
aam
jbe
push
popf
test
xchg
fwait
cltd
inc
scas
lds
shl
lea
jle
ds
or
enter
add
push
xchg
dec
or
sub
subb
xor
out
lods
xor
inc
sbb
add
ja
dec
mov
push
jo
mov
xor
aam
stos
scas
test
outsb
les
aaa
das
dec
jge
popf
ret
push
out
jb
dec
loop
roll
dec
cmp
lahf
lcall
das
or
sub
sub
cmp
outsb
pusha
test
jno
jg
pop
pop
pop
cld
push
xchg
das
fnstcw
sbb
shll
mov
mul
mov
cmp
lea
pop
pop
cmp
into
jp
mov
loop
popf
mov
sbb
mov
push
outsb
movsl
sbb
add
loope
popa
pop
fsts
jg
mov
mov
cmp
loop
mov
cltd
inc
es
dec
mov
mov
sbb
cmc
mov
lods
jle
enter
pop
adc
test
sub
sti
xchg
sbb
sahf
adc
je
xor
rclb
aam
xor
daa
push
push
xchg
inc
inc
in
jne
decl
rcrb
pop
ss
dec
or
pushl
adc
xor
sbb
xor
cmc
frstor
cmp
sub
mov
jmp
cmp
mulb
sbb
fsincos
imulb
jp
fwait
xchg
sar
sbb
sbb
xchg
pop
dec
jg
cld
cmp
pop
mov
or
push
dec
test
out
add
and
cmp
or
test
xchg
test
jmp
cmp
xchg
in
pop
daa
fstl
xor
or
js
rcr
adc
loope
mov
inc
jnp
xor
adc
adc
jle
or
pop
xchg
or
imulb
loop
dec
stos
in
movsb
imul
xchg
pop
rolb
inc
add
and
lahf
stos
jnp
pop
mov
aam
inc
jbe
fwait
pusha
sub
and
rorl
es
repz
fstps
mov
dec
je
xor
jns
imul
mov
dec
fwait
cmp
sti
jle
aam
cltd
push
cld
add
popf
cmp
add
cmp
jne
and
aas
inc
lahf
cmp
xchg
jmp
in
push
mov
jne
movsl
enter
push
lret
adc
shrl
inc
testl
fs
dec
in
mov
adc
ficomps
lods
daa
push
sahf
movsb
ds
pusha
inc
pop
aad
adc
int
add
pop
pop
outsl
cmp
jae
jae
sub
dec
out
pop
xor
add
mov
out
inc
rclb
insb
nop
decb
mov
bound
sub
pop
ljmp
adc
push
push
xchg
ret
jb
out
pop
je
les
repnz
cmpsl
decb
jo
push
clc
dec
xchg
das
pop
hlt
add
jae
rcr
movsb
dec
mov
mov
fs
sub
sahf
pop
sbb
stos
cmp
cmp
sbb
test
xchg
pop
push
mov
dec
sbb
jne
aas
cmp
inc
mov
mov
mov
sub
test
fadds
int3
adc
lea
adc
insl
fmulp
pop
pushf
mov
jne
jmp
cmp
jl
jbe
cmp
xchg
push
test
out
pop
sbb
jg
or
loopne
aaa
mov
addr16
cmp
sbb
jnp
arpl
aas
call
jl
es
dec
cs
jnp
adcl
push
jl
adc
xor
mov
push
cli
xchg
shl
data16
sarb
cmpb
sub
sti
fidivl
xchg
ja
fcmovnb
xor
shll
xor
cmp
jb
adcb
jns
add
cli
mov
jmp
shrl
adc
cmp
inc
mov
sbb
or
jmp
mov
mov
and
and
sub
icebp
xchg
adc
lea
dec
shl
nop
inc
repnz
pushf
mov
jle
sahf
sub
mov
and
shll
pusha
lcall
pop
push
pop
adc
dec
cwtl
cltd
add
test
cmpsl
push
in
pop
ficoml
adc
push
mov
icebp
insb
into
outsb
cld
sbb
fcoms
add
lahf
mov
test
jmp
js
aad
pushf
jae
xchg
adc
mov
das
mov
int3
cmpsl
out
test
popa
mov
jecxz
push
and
cltd
nop
mov
outsb
sub
outsl
pop
test
jne
xor
das
test
add
mov
adc
ret
mov
cmp
cld
inc
mov
incl
push
dec
lods
mov
mov
mov
or
outsl
call
imul
push
testb
movsl
test
dec
mov
pop
and
jg
inc
xchg
adc
in
mov
movsb
sbb
repz
add
into
popa
cmp
aam
sub
push
repnz
rcrl
dec
dec
push
sub
fcomp
jo
inc
sub
adc
mov
jbe
rcrb
addr16
mov
sbb
pop
stc
mov
jge
dec
repz
fcomps
imul
cmp
bound
dec
imul
sbbl
mov
loop
or
inc
fsubs
and
adc
pop
pop
dec
in
xchg
cmpsb
xchg
dec
mov
xor
jecxz
sub
adc
jecxz
in
in
or
push
popa
xor
outsb
jnp
mov
fistl
out
into
leave
jno
in
daa
lds
test
dec
push
icebp
inc
outsl
jge
jno
in
aas
lahf
xorb
jb
enter
jb
mov
cltd
cli
stos
imul
cltd
sar
sbb
sbb
jl
xorl
hlt
xchg
popa
mov
lds
fs
mov
push
stc
movsl
in
mov
jae
xor
sub
in
pop
std
fbstp
lcall
xlat
and
cmp
inc
stos
or
in
inc
ja
in
test
ss
out
cmp
lret
xor
or
sbb
xchg
gs
xor
fistps
scas
pop
or
push
test
pop
cs
aas
lock
sarb
mov
sbb
fldt
daa
and
adc
repnz
or
mov
jmp
out
sbb
or
adc
cltd
out
addr16
faddp
xchg
jo
mov
adc
daa
add
ret
minps
sbb
sbb
xchg
addb
mov
gs
pop
and
push
daa
sar
inc
fimuls
jmp
mov
and
cmp
je
xchg
pop
iret
pop
popf
setp
mov
add
rclb
movsl
leave
jne
cmpsb
mov
scas
lods
sub
bound
std
ds
je
adc
pop
inc
lds
mov
inc
jg
xlat
push
add
xlat
xor
mov
popf
arpl
pusha
mov
jmp
and
xchg
test
arpl
daa
test
sub
push
jg
pushf
fs
fcomps
or
aaa
xor
jge
ficoml
movsl
add
push
cmpsb
xorl
cmp
popf
enter
mov
aam
pop
mov
sub
or
jp
cs
ret
ficoml
jg
das
pop
inc
adc
or
push
and
outsl
and
pop
mov
mov
push
sbb
xchg
aam
test
dec
lods
int3
inc
sub
pusha
pop
dec
dec
fldl
mov
push
mov
cmpb
sbb
leave
mov
fiaddl
lods
sub
mov
data16
in
imul
orl
clc
push
hlt
shrb
repz
mov
sbb
sbb
sub
pusha
jmp
inc
and
out
cmp
mov
fs
pop
sbb
jl
mov
dec
cld
push
es
inc
daa
lds
and
push
sbb
pop
push
cmpsl
cli
arpl
addl
fldl
add
rorb
or
fisubrs
xchg
mov
add
lds
pusha
shlb
int
mov
mov
xchg
test
in
imul
or
icebp
cmpsl
pop
xchg
add
and
lods
xor
fwait
xchg
push
mov
outsl
adc
sbb
test
sbb
shr
ret
jg
and
xor
fistpll
mov
mov
in
imul
je
sub
nopl
push
xor
dec
sar
popa
ret
push
xchg
sbb
add
cmp
cltd
inc
mov
shll
adc
lret
add
aad
movsb
fldl
rcpps
add
aad
adc
rcll
mov
repz
pop
fidivs
pop
popl
mov
push
xor
popa
add
cmp
out
lret
sbb
jb
xor
push
into
dec
ss
leave
jg
mov
mov
xor
push
add
pusha
adc
lret
sbb
test
icebp
fdiv
jae
clc
lds
add
shrl
outsl
push
movsl
jne
xchg
pushf
lods
out
insl
gs
mov
jg
sbb
pop
ror
push
mov
stos
cmp
jmp
xor
je
iret
in
or
pop
mov
inc
pop
or
neg
scas
and
ficoms
pushf
icebp
outsl
jne
pop
push
pop
sub
pop
inc
lahf
jb
xor
and
scas
add
mov
stc
ljmp
loopne
sub
pop
cmp
mov
popf
repnz
aas
mov
ss
sbb
dec
out
or
negb
push
push
cmp
mov
cmp
xor
xchg
in
ret
iret
mov
xor
xchg
fwait
pop
out
push
negl
pop
hlt
jmp
mov
pusha
xor
push
adc
push
in
xchg
fdivs
repz
or
in
lods
sbb
pop
mov
mov
cmp
cmp
fwait
xor
dec
test
pop
and
dec
jmp
mov
and
ja
mov
fwait
lret
int3
int
mov
cli
inc
cltd
add
cmpsb
cmpb
sbb
loop
jp
enter
mov
addb
insl
mov
sub
into
xchg
mov
mov
das
movsl
movsl
fstpl
ret
push
fnstcw
mov
sbb
jnp
inc
loop
add
aad
popf
aad
enter
in
sti
arpl
call
scas
popa
or
xor
test
je
cmc
mov
loope
popa
int
ret
aad
cmpsl
test
add
pop
popa
mov
cmpsb
sub
dec
xchg
sbb
in
sti
lods
jp
jnp
jb
insl
push
loop
add
jle
push
mov
rol
rolb
mov
lahf
jno
es
adc
adc
jge
fnsave
rorl
cmc
cmp
std
mov
pop
or
sbb
push
dec
mov
xlat
xor
jge,pn
dec
mov
and
es
shl
jmp
imul
push
cli
cmp
push
enter
jbe
inc
or
inc
xor
and
or
nop
cld
hlt
pop
adc
sbb
xchg
inc
mov
xor
xor
data16
push
fnstenv
scas
dec
xor
loope
cmpsl
pop
push
adc
movsb
pop
out
insl
testb
mov
mov
rolb
jne
jp
into
and
and
xchg
rorb
and
stos
mov
push
xor
ret
mov
pop
and
sti
data16
fstps
insl
jb
and
xorl
sbb
icebp
lds
sahf
cmp
fnstenv
out
fldenv
out
lret
pop
aam
mov
pop
xor
push
mov
or
sbb
xor
xchg
pop
out
add
cld
inc
outsl
fwait
ss
add
andb
push
in
lcall
pop
push
jle
and
jp
jnp
addl
bound
mov
push
test
xor
mov
mov
shlb
mov
loope
scas
frstor
sbb
add
adc
loop
jbe
aad
ds
mov
icebp
inc
mov
sahf
jno
mov
mov
frstor
loop
es
fmul
sub
mov
jno
mov
aaa
xor
sbb
xlat
mov
adc
sti
lea
stos
ss
mov
jp
push
jb
mov
ror
inc
addb
mov
lahf
and
and
push
dec
leave
or
jno
int3
lcall
mov
or
push
fdivrs
xchg
cmp
sbb
lea
push
mov
jp
cwtl
into
andl
pop
and
subl
fdivs
js
lock
mov
mov
mov
enter
adc
out
dec
pop
scas
sbb
sahf
push
mov
sbb
scas
cli
sbb
xor
fnstsw
add
test
cld
ja
jmp
repz
pusha
cs
shll
fmull
mov
fwait
pop
mov
add
lea
mov
cmp
enter
push
mov
or
cmp
cltd
mov
jp
xor
lret
decb
xor
in
add
das
hlt
lds
data16
sbb
push
inc
mov
cltd
cld
inc
xchg
dec
cmp
rorl
dec
mov
push
or
fistps
pusha
cmpsb
insb
push
jp
xor
andl
cmpsb
xchg
daa
xchg
mov
pop
sti
push
hlt
jb
gs
fildll
sti
in
dec
dec
mov
repz
insb
push
xchg
and
mov
or
dec
xor
sbb
and
icebp
pop
test
outsl
fcmovnbe
jo
cmp
das
jge
inc
xchg
lock
pop
cld
iret
movsl
jns
adc
arpl
jp
loopne
daa
or
lahf
movsl
aad
sbb
sahf
jne
mov
fsubrs
and
adc
push
mov
iret
cmp
add
mov
pop
xor
xor
mov
push
mov
mov
sbbl
sbb
dec
incl
test
inc
negb
shr
cmc
mov
xorb
rorl
lock
dec
jne
lock
addr16
mov
movsl
or
out
hlt
out
cmp
or
xchg
repnz
xor
andl
jae
or
pop
jmp
xchg
push
loopne
scas
ficoms
adc
loop
mov
jecxz
rcrb
cmp
rclb
jnp
ljmp
pop
sbb
daa
xlat
xorb
lods
lea
adc
orb
call
push
data16
adc
outsb
sub
imul
add
test
enter
dec
clc
pop
loop
cli
inc
and
mov
add
mov
xchg
sahf
mov
sub
dec
gs
push
mov
test
add
push
jecxz
mov
mov
fists
sbb
mov
out
dec
mov
xor
cmp
scas
mov
add
std
xchg
arpl
out
add
add
mov
add
adc
xchg
sub
sub
loop
inc
icebp
inc
lahf
stc
add
pop
out
das
shll
cmp
lret
stc
mov
in
clc
adc
fstpt
jbe
ret
outsb
and
sti
mov
push
test
sahf
inc
jge
rcrl
imul
pusha
out
push
sub
data16
lock
jg
dec
out
pop
lcall
pop
test
ss
mov
ljmp
dec
pop
cmp
adc
je
dec
rcll
add
cmc
cmp
mov
mov
xchg
jns
xrelease
test
sarb
cld
pop
jnp
adc
cmpsb
pop
mov
test
inc
shlb
or
jle
lods
aad
xor
inc
inc
andb
and
adc
fmulp
mov
inc
dec
cwtl
pop
adc
push
into
push
or
xor
xchg
xchg
dec
lea
pop
sub
jg
int
or
pop
jno
dec
movsl
cmpsb
mov
jl
ss
adc
fs
add
mov
test
test
and
or
test
clc
stc
jle
popf
jbe
push
sbb
inc
and
lock
push
outsl
mov
cmp
test
dec
std
fs
or
mov
or
clc
insl
push
cmc
inc
jecxz
ss
enter
pop
test
rolb
xor
or
jg
and
iret
mov
xor
push
test
xchg
lods
xchg
mov
mov
inc
xchg
and
push
push
xor
rcr
in
or
or
scas
cmpsb
jecxz
inc
mov
test
ja
mov
dec
test
pop
shr
orl
lods
cmc
add
addr16
mov
nop
push
xlat
sti
mov
adc
loope
lock
es
pop
shl
hlt
dec
int3
jo
test
dec
clc
jecxz
pop
lret
mov
mov
insb
xorb
movsl
jl
std
xchg
mov
pushf
inc
into
mov
mov
mov
push
and
addr16
pop
cmpsb
jae,pt
out
mov
add
mov
daa
mov
rorl
fisubrl
enter
mov
inc
cld
incl
mov
addr16
icebp
mov
dec
popf
xchg
aad
adc
icebp
adc
dec
paddd
mov
jnp
mov
stos
sub
xor
into
fstl
imul
lret
roll
icebp
loope
mov
dec
das
rolb
jmp
sub
setb
jbe
jae
cmp
xor
lcall
cmpsl
fs
xchg
sbb
xchg
dec
add
add
cmc
jbe
sahf
mov
ror
lret
lea
les
jae
fadd
mov
push
sbb
ret
add
xor
cltd
jno
sbb
cs
lock
std
xor
mov
pop
test
xor
aaa
ss
mov
ret
add
dec
in
cmpsb
mov
push
mov
cld
adc
arpl
sub
sbb
adc
jecxz
rcr
bound
mov
push
xorb
xor
sub
sub
xor
mov
jg
and
add
stos
add
daa
mov
inc
orb
pop
mov
or
pop
fiadds
andb
insb
mov
and
inc
scas
sbb
jb
push
push
dec
clc
dec
mov
push
or
xchg
popa
imul
adc
cmp
pop
add
sarl
pop
sub
pop
sub
xor
stos
adc
dec
push
fwait
and
test
call
or
aas
push
and
gs
cmp
pop
cmp
in
aad
dec
xchg
sbb
cmp
adc
fs
inc
faddp
rcrl
sub
sbb
or
jge
xchg
mov
testl
push
in
sub
mov
sbb
cmp
xchg
test
mov
loop
test
mov
inc
sarl
pop
fbstp
mov
cld
inc
push
shll
fdivl
mov
sub
lods
mov
add
dec
push
dec
xchg
icebp
aam
sub
add
jne
lock
adc
fcoms
enter
leave
roll
bound
pop
dec
mov
push
arpl
jne
sbbb
fcompl
les
inc
mov
and
or
mov
cmc
call
push
daa
inc
jbe
add
xor
mov
xor
rorb
sub
or
es
pop
push
push
divl
rorb
fdivr
mov
xchg
lret
pusha
std
dec
jb
test
mov
fimuls
sub
gs
add
and
movsl
mov
into
adc
dec
pop
or
adcl
xchg
mov
fcomp
or
ret
gs
push
mov
add
cwtl
push
cmp
cwtl
clc
imul
pop
pop
jp
xor
adc
mov
sub
rolb
hlt
fsubrl
mov
je
xchg
cltd
cmp
xor
mov
adcl
fldt
cmp
leave
mov
inc
aaa
mov
cmp
lds
sbb
jmp
xchg
fldenv
push
lret
call
lret
cltd
adc
movsl
cmp
cltd
or
push
cmc
rcrl
cmp
ror
jecxz
and
clc
aam
jae
mov
jnp
stos
enter
lret
ss
xchg
jo
lods
sub
push
movsb
pop
jnp
pusha
addr16
mov
jno
push
lret
subb
mov
stc
jo
xchg
sub
pusha
call
xchg
lods
ret
ds
jno
mov
dec
or
test
les
sarb
shll
out
xor
stos
jns
gs
gs
out
inc
and
jle
mov
pushf
fcmovbe
adc
push
mov
pop
push
and
icebp
xor
test
dec
sub
ret
lcall
push
sbb
jle
imul
xchg
jle
xchg
cmc
jge
ds
pop
adc
sahf
pop
inc
xor
lock
idivl
mov
pop
mov
jae
cwtl
test
and
bound
stos
aad
adc
fsub
xchg
xlat
inc
mov
test
inc
and
push
dec
jae
stos
je
dec
sub
hlt
push
lock
mul
ficoms
mov
in
data16
adc
adcb
fcmovnu
push
cltd
out
mov
mov
push
test
or
lahf
sub
dec
mov
or
xchg
hlt
mov
jb
aad
mov
and
xor
mov
xchg
leave
mov
setne
stc
sarl
insl
mov
push
cmp
out
jno
cmp
jne
push
mov
mov
fistps
pop
jnp
dec
or
xchg
dec
add
or
gs
xor
out
cmp
push
adc
mov
aas
daa
lret
mov
xorb
push
jmp
outsl
shll
cmc
popa
imul
xlat
addr16
pusha
test
sbb
or
push
sub
lret
mov
loopne
xor
ror
test
xchg
mov
xlat
movsl
in
push
jb
pop
dec
nop
popf
notl
movsb
in
stos
dec
jno
popa
sbbl
push
test
sbb
psubw
fmull
sub
out
aas
pushf
xchg
popa
mov
dec
shll
repz
adc
leave
lret
adc
xor
push
loopne
clc
movsl
pop
test
jnp
and
call
sbb
fldenv
ss
hlt
scas
aaa
xchg
aas
mov
mov
out
shlb
stos
inc
inc
lret
cld
rorl
lret
xor
sbb
xor
xor
ljmp
or
scas
xchg
xchg
pop
out
lods
fwait
rclb
sub
insl
ss
inc
lock
loop
cmpsb
inc
sub
sti
cwtl
mov
add
jne
pop
sbbl
popf
call
lea
xchg
cld
sub
mov
hlt
jmp
and
dec
enter
out
outsb
cwtl
jno
sti
xor
mov
imul
mov
sbb
adc
and
clc
lea
mov
les
jbe
mov
call
jmp
xchg
out
mov
test
mov
sub
pop
lods
prefetchwt1
les
or
mov
out
push
js
cmp
adc
std
push
incl
dec
xor
fnsave
xchg
notl
test
mov
cmpsl
inc
aas
test
sti
ljmp
loop
lcall
jne
fidivrl
pop
dec
fmul
lcall
fsubs
mov
push
adc
and
jg
stc
fs
xchg
jle
inc
mov
mov
dec
mov
and
out
ljmp
lods
aaa
jns
dec
fcmovne
orb
mov
movb
pop
and
fstpt
repnz
dec
imul
add
xor
pop
cli
jns
and
pop
scas
je
aad
sbb
mov
lods
mov
lods
pop
pop
int
andnps
sti
outsb
ret
xor
scas
pop
pop
mov
sub
and
in
iret
imul
fwait
test
cmp
dec
fldcw
cmp
aaa
mov
pushf
jno
fwait
xor
lea
std
cld
jmp
cmp
ret
lcall
dec
and
mov
shll
aad
andb
dec
frstpm(287
push
pop
mov
mov
jp
pop
jge
aaa
loope
cmp
lcall
jae
fdivs
fisubrl
outsl
dec
in
jl
adcl
repnz
xchg
jp
sub
cmp
or
jne
cmp
orb
add
mov
pop
cmpl
rcrl
aad
dec
clc
sahf
jg
sar
jg
inc
jns
int
cmp
push
fbstp
repz
movsb
iret
lds
js
adc
mov
sub
rcrl
ja
mov
and
sbb
cmc
inc
xchg
and
pop
fwait
mov
xor
mov
pusha
aad
push
out
dec
sub
out
into
or
pop
and
mov
push
or
sbb
test
push
dec
sub
in
xchg
sbb
mov
push
adc
cmpb
dec
pushf
sarb
push
cmc
adc
stos
pop
sub
repnz
and
xchg
flds
insl
out
sbb
xorl
scas
jae
push
jp
mov
filds
xor
push
mov
adc
andb
mov
test
dec
nop
inc
faddl
jl
mov
test
jb
jl
dec
das
xchg
mov
sti
bound
lods
popf
rolb
fcomip
sub
fs
test
adc
mull
lods
aaa
shl
fs
add
stos
cld
pop
call
out
call
insb
mov
ret
or
fidivl
or
popa
xlat
insl
cmp
xchg
mov
pop
push
inc
in
inc
adc
cmp
sbb
ret
mov
jno
test
jl
jno
fsubrl
ret
mov
and
dec
je
addr16
mov
jmp
mov
mov
loop
push
inc
rcll
jge
sub
fists
loopne
mov
ss
push
pop
movsb
popa
and
shrb
les
dec
lea
or
movsb
sub
push
jne
or
int3
cmp
push
mov
sbb
lcall
add
fwait
lahf
movsb
and
call
arpl
andl
push
lea
xchg
push
cmp
inc
xchg
push
jo
loop
push
hlt
mov
push
xchg
mov
shll
les
dec
call
push
push
push
jge
jae
jae
push
out
outsb
lret
test
out
pop
loope
insl
dec
lods
mov
adc
xchg
std
and
insb
mov
mov
add
xchg
mov
jmp
in
imul
arpl
jmp
xchg
stos
scas
push
in
and
sub
push
inc
daa
ljmp
arpl
test
arpl
fmul
add
cmp
sar
cmpsb
mov
or
fadds
out
cwtl
test
das
test
jbe
pop
fsubp
mov
sbb
cmp
xor
cmpsl
test
mov
add
scas
pop
jns
ret
insl
or
sbb
dec
fmuls
ja
test
push
inc
mov
mov
ja
test
ljmp
lcall
sti
push
nop
lods
outsb
inc
int
cmp
imul
ljmp
leave
cmp
fisttpl
and
popf
cmp
movsb
inc
or
adc
push
jne
xchg
fs
movsl
hlt
inc
mov
faddl
gs
add
std
mov
pusha
test
mov
pop
pop
ja
pop
fisubrs
or
clc
loopne
fs
sbb
jno
push
movsb
sbb
jp
outsl
cld
ljmp
and
iret
std
push
xchg
sbb
push
dec
or
mov
adc
ljmp
add
push
inc
push
aaa
jp
pusha
inc
ss
adc
mov
sbb
ljmp
enter
iret
lock
adc
jne
pop
jno
icebp
adcl
add
or
bound
aad
mov
or
add
lret
addr16
pop
mov
lea
imul
fldcw
negb
jo
movsb
adc
lret
inc
cs
mov
repnz
sub
cmovbe
fcomps
add
lret
sub
in
movsl
pop
add
ljmp
lods
adc
arpl
push
push
test
loope
pcmpgtd
jmp
fcomip
xor
aad
sbb
shr
inc
push
imul
push
bound
jmp
cmc
inc
lahf
push
notb
mov
out
cmp
nop
or
out
jno
pop
dec
jge
jl
pop
dec
jnp
ds
rorl
mov
ret
in
ss
sbb
push
pop
xor
enter
add
push
dec
dec
into
int3
ljmp
inc
decl
mov
insb
xor
adcl
inc
in
xor
lods
lea
xor
sbb
je
xor
cmpsb
and
dec
mov
hlt
push
push
sahf
fisttps
cmp
add
adc
add
mov
iret
into
xor
fidivrs
pop
flds
mov
jb
dec
mov
imul
cmp
subl
nop
sbb
aaa
pop
sub
and
out
fwait
call
sti
sub
jg
stos
insl
jle
dec
sub
xchg
lods
repz
ljmp
roll
fdivrl
jge
inc
mov
int
fsubp
into
jge
pop
lcall
iret
jge
fisubs
fiaddl
out
rcll
leave
mov
cmpsl
femms
leave
jg
xor
in
fsubs
sti
xchg
test
sbb
insb
ret
push
inc
add
xchg
enter
cwtl
cltd
mov
mov
aad
enter
call
lcall
int
sub
dec
cmp
loopne
lret
dec
pop
adc
xchg
sbb
jecxz,pn
test
push
mov
or
mov
sar
and
out
mov
dec
cmc
pop
movsb
jne
add
dec
imul
pop
jmp
ljmp
jo
out
std
enter
pop
or
and
xchg
cwtl
inc
push
sub
lods
xor
dec
in
cmpsb
jo
test
fs
xchg
aaa
lds
pushf
add
and
cmp
and
enter
pop
jle
push
mov
cmc
negl
xchg
mov
in
push
add
lods
sbb
and
insb
fisttps
sub
push
mov
fdivl
adc
xor
out
insl
add
cmp
inc
addr16
es
ficoml
xor
out
xor
pop
js
enter
fs
enter
sub
mov
sub
inc
jg
mov
je
add
dec
mov
shlb
cmp
cmp
inc
stc
pop
mov
shll
mov
sub
mov
test
mov
mov
jl
pop
call
mov
shll
push
rolb
xorl
pop
add
push
incl
or
pop
sub
mov
fsubp
cs
jle
and
test
incb
mov
and
push
adc
mov
or
push
adc
mov
pop
sub
cmc
aas
sbb
fsubrl
push
dec
int3
shll
mov
mov
jae
inc
andb
xchg
rcrb
aam
incl
adc
fstl
testl
jp
adc
dec
xchg
mull
mov
pop
shlb
push
or
jae
sub
aam
das
subl
daa
push
sahf
jb
sub
cwtl
adc
adc
or
test
pushf
repnz
dec
scas
xor
pusha
outsb
pop
mov
aas
push
dec
pop
sbb
in
sbb
jo
insb
ret
jnp
mov
fwait
add
dec
or
inc
pop
mov
repz
aad
pop
ret
cld
loope
mov
or
lods
lea
push
inc
daa
int
and
popf
jo
ja
inc
dec
mov
inc
mov
rorb
jge
dec
xchg
insb
aas
fisubrs
sti
xchg
in
scas
mov
fldl
dec
cli
lods
lret
adc
push
dec
leave
scas
in
rol
sub
sarl
sub
jns
pushf
inc
xchg
xor
ljmp
push
jmp
lock
mov
int3
loopne
adc
lods
and
push
sbbb
stos
push
jno
rorb
fwait
movsl
push
cs
cld
cld
fwait
shl
jae
mov
or
xchg
js
imul
div
mov
push
mov
ljmp
sti
xchg
repz
imul
sbb
loope
jl
and
mov
or
test
push
push
lahf
jb
mov
mov
lret
pop
push
mov
mov
inc
and
repnz
pusha
xor
mov
and
fbld
popf
lret
std
push
cmp
pop
push
shlb
sbb
push
xchg
ja
sbb
sub
push
scas
outsb
out
pushf
jle
cld
push
xchg
jle
add
hlt
dec
cli
imul
outsb
icebp
push
push
pop
aad
and
out
mov
arpl
jns
push
dec
add
fwait
pop
mov
xchg
dec
insb
pop
inc
jmp
lds
lock
stc
iret
mov
repz
into
jne
fcoms
lods
xchg
fwait
inc
ljmp
inc
stos
lcall
pop
subb
loop
js
in
daa
imul
cmpsl
imul
jb
or
icebp
ret
mov
pushf
into
mov
cmpsl
leave
add
out
dec
stc
mov
fmuls
out
aad
in
repz
pop
jg
ror
dec
push
test
rolb
or
jle
in
dec
xor
xor
sbb
inc
inc
shl
imul
inc
add
inc
repz
mov
pop
scas
sub
loopne
out
enter
mov
repz
cmp
fwait
sbb
push
test
in
pop
ja,pt
gs
sub
lds
mov
lret
mov
xchg
push
mov
popf
lret
clc
xchg
cltd
or
xlat
inc
sub
add
mov
inc
mov
or
stos
repnz
mov
and
sub
mov
and
and
or
push
cmp
lahf
xlat
xor
insb
and
das
pop
push
xchg
xchg
aas
sbb
in
sub
into
mov
mov
movsl
bound
inc
mov
xchg
jl
inc
lods
mov
daa
test
inc
sarb
mov
or
lods
cmp
dec
mulb
cmpsb
fists
lahf
add
js
mov
jae
mov
mov
cmp
in
js
adc
frstor
cmpsl
mov
fdivrs
or
and
insl
cmp
imul
dec
sub
sub
or
xor
dec
mov
ret
mov
cwtl
mov
in
popa
xchg
mov
sbb
sahf
ret
fwait
xor
cmpsl
loop
adc
push
mov
hlt
rcl
in
lcall
ret
je
mov
mov
xor
lods
outsl
and
into
out
in
and
pop
cmpsb
popa
fldcw
sbb
loopne
jae
or
or
pop
rcrb
ret
inc
adc
cmp
fisubrl
mov
in
inc
sti
pop
lock
dec
out
lock
mov
mov
xor
xlat
ljmp
cltd
adc
sbb
and
test
mov
movb
cli
xchg
outsb
movsb
mov
adc
xor
dec
push
xor
jae
adc
push
int
scas
push
pop
das
loope
lea
inc
mov
xchg
test
testb
dec
inc
xchg
jl
sbb
sub
mov
mov
outsb
xor
mov
xchg
outsb
and
add
ds
js
jno
cli
and
sbb
push
mov
adc
dec
loopne
es
shrl
add
and
cld
push
in
aam
lods
sbb
mov
sbb
mov
sbb
ljmp
fistl
pop
fs
loop
lods
ss
into
cs
aas
push
mov
or
lock
jg
movhps
cmp
outsl
cmp
cmp
or
mov
loope
leave
and
lock
push
test
stc
and
pop
mov
sti
into
xor
xchg
data16
std
or
repnz
clc
push
lods
mov
mov
je
or
sbbl
lcall
adc
add
pushf
add
jo
sbb
sbb
and
fidivrl
inc
add
imul
dec
scas
addr16
scas
pop
pop
push
test
mov
outsb
add
int
fsts
repnz
pop
aam
fdiv
testl
hlt
push
jp
sub
push
mov
aad
lahf
dec
dec
push
mov
mov
cli
out
mov
mov
test
test
mov
fldenv
xchg
cmp
mov
mov
add
xor
xchg
dec
mov
stc
cmpsl
sub
jmp
push
dec
sbb
mulb
inc
movsb
insl
dec
push
xchg
mov
mov
insl
in
cmp
repnz
leave
bnd
and
xchg
pop
sub
lock
rcrb
and
test
imul
jle
aas
push
dec
fstl
pop
test
cmpb
push
dec
test
out
imul
ljmp
or
dec
add
fcmovne
and
hlt
pusha
insb
clc
bnd
iret
pop
push
nop
pop
and
xor
jg
int
adc
out
and
mov
lahf
sahf
rclb
sub
lret
inc
stos
and
nop
cmp
xchg
fsts
fwait
pop
mov
sbbb
ds
sti
fwait
stos
enter
add
adc
loop
dec
jns
push
cld
push
lea
icebp
sub
sub
mov
rorl
rcrb
fnstsw
imul
in
insl
xor
insb
ret
aas
dec
movsb
add
repnz
scas
pop
or
or
mov
pop
pop
inc
addr16
repnz
dec
cmp
mov
repz
mov
std
and
ret
inc
test
add
adc
rcl
loopne
inc
je
inc
aad
jnp
faddp
clc
andl
fisubs
dec
mov
mov
mov
aam
push
adc
aam
pop
shll
sbb
push
mov
mov
in
insb
adc
ljmp
pop
mov
mov
jnp
xor
shrb
mov
push
xchg
xor
test
out
pop
cmpsb
jno
xchg
in
xchg
clc
stos
cmp
ret
in
cld
scas
push
jg
inc
pop
rclb
sbb
rclb
sub
pop
dec
loop
and
push
adc
mov
test
cmp
and
lea
inc
mov
mov
pop
bound
leave
addr16
pop
aam
xchg
pop
das
mov
mov
push
add
scas
leave
cmp
fbld
cmp
jb
mov
jge
fdiv
loopne
add
fisttpll
or
jmp
push
xchg
add
adc
xor
imul
cmp
dec
fdivl
mov
lods
das
std
les
jo
gs
pop
mov
jle
pop
or
dec
leave
repz
cmp
insl
mov
aad
into
movsb
lret
subb
outsl
in
inc
aas
jnp
leave
lahf
mov
mov
fidivrl
mov
sub
stos
push
jge
xchg
aad
push
push
hlt
repnz
mov
cmp
mov
stc
movsl
mov
xor
mov
aas
aam
push
es
dec
repz
push
into
lret
sbb
incl
pushl
pushf
fisttpl
mov
sbb
enter
out
pusha
cmpsb
cmp
or
mov
out
mov
xchg
jl
mov
jne
add
rclb
xor
rcr
mov
dec
test
std
add
gs
sbb
loop
inc
and
std
mov
cpuid
popf
fstpl
popa
mov
je
in
sbb
insb
test
xchg
mov
arpl
adc
cld
lods
mov
pop
sub
xchg
in
mov
fstps
mov
mov
mov
sbb
sbbl
jg
popf
shlw
loopne
dec
lods
call
les
dec
mov
push
jl
call
xchg
push
inc
dec
lds
sub
xchg
lods
cmp
pop
adc
popa
pop
push
popf
mov
jbe
repz
cmp
xchg
xchg
out
out
sbb
inc
in
orb
das
cmp
and
sti
adc
adc
push
test
pop
es
ja
jo
jmp
jae
test
xchg
jp
imulb
in
push
pop
fsubrl
ljmp
xor
sti
out
sub
test
cmpsl
adc
hlt
push
mov
and
fnsave
pusha
test
jp
jle
call
stc
filds
push
mov
lret
in
out
ja
xchg
cmpsl
popf
mov
push
insl
rcrb
adc
stc
jp
shr
je
mov
call
inc
movsl
imul
lret
jg
or
aam
push
pop
ds
ja
nop
jmp
mov
adcl
mov
loop
push
testl
lret
mov
jae
out
push
jle
jns
ja
xor
push
shlb
clc
mov
icebp
loope
or
outsl
lret
xchg
out
bsf
cmp
mov
ss
jl
xchg
and
xorl
repz
arpl
loop
dec
jge
ljmp
dec
lds
lret
das
pop
xchg
test
lds
or
mov
sub
xchg
stc
adc
dec
adc
sub
sbb
daa
aas
add
sub
mov
test
push
cmpsl
bound
mov
dec
add
cmp
mov
jle
xchg
jecxz
jecxz
ds
loopne
mov
mov
push
stos
test
adc
dec
lret
mov
mov
and
or
pop
lock
iret
dec
xchg
pop
mov
fs
cmpsl
xor
xor
jg
cli
mov
lea
pop
inc
add
repz
push
push
inc
idivb
lds
out
lcall
loope
imulb
int3
mov
in
pop
stos
adc
test
xchg
cmp
imul
in
jno
xor
dec
imulb
outsb
arpl
or
into
xchg
dec
adc
repz
es
fisubrs
psrld
movsl
xchg
fdiv
cmp
xor
and
hlt
insl
and
icebp
mov
lock
sahf
ljmp
fistpl
int3
or
icebp
inc
ljmp
cld
pop
inc
pushf
test
sbb
imul
nop
add
sbb
mov
adc
pop
enter
xorb
mov
into
jbe
xchg
jbe
jns
je
in
loopne
js
ror
jmp
call
cmp
adc
repz
fmull
aam
mov
xlat
sub
mov
aam
sbb
add
dec
add
cwtl
stos
pop
daa
int3
sub
push
sarl
push
je
out
shrl
cmc
stc
lods
add
and
add
inc
fcompp
pop
out
xchg
in
sbb
sbb
cmp
into
loopne
mov
sbb
test
lret
xor
std
sbb
ficompl
mov
out
test
clc
pop
rcl
sti
loop
orb
les
jno
mov
jmp
push
ja
dec
loope
cwtl
mov
mov
and
imul
xor
adc
sbb
adc
jne
mov
out
push
add
mov
pop
int
test
mov
sub
lods
jae
xorb
mov
cli
sbb
lcall
cltd
in
cmp
clc
insb
fistpl
jbe
cmpsb
xor
das
jae
mov
loope
push
add
imul
cmpsl
std
aaa
inc
dec
fisubs
ss
and
pop
pop
push
dec
clc
jl
scas
int
aad
pop
mov
scas
mov
enter
pop
xchg
mov
aaa
mov
xchg
lock
clc
icebp
decl
je
js
fdivr
push
xchg
pop
xor
popa
add
das
pushf
xor
jo
add
cmc
sbbb
sub
popa
bound
mov
sub
fidivl
roll
jmp
mov
mov
dec
stos
out
mov
leave
movsl
jle
push
pop
ret
xchg
mov
mov
aad
mov
sbb
frstor
adc
pop
cmp
add
mov
mov
mov
pop
xchg
mov
orb
cwtl
jge
ss
inc
les
sahf
rcl
cwtl
inc
or
push
mov
mov
mov
lods
sbb
adcl
cmp
cmpsl
test
push
jmp
dec
push
jle
xchg
xor
inc
fistl
shll
hlt
fdiv
dec
cmpsl
std
add
notb
scas
xchg
mov
rcrl
nop
sub
sub
sbb
shlb
inc
mov
or
pop
jbe
pop
lds
daa
lret
cmc
jecxz
fadd
xor
pusha
mov
xchg
data16
jo
sbb
fs
xchg
dec
dec
imul
sbb
jle
arpl
in
cmp
clts
outsl
mov
add
ds
mulb
lcall
inc
lea
arpl
xchg
mov
ret
adc
sbb
movsl
ljmp
out
mov
or
fld
cmpsl
sub
dec
or
lahf
cmp
ja
lret
push
adc
in
sub
or
add
decl
push
les
inc
mov
cmc
fbstp
loop
add
pop
mov
gs
xor
add
add
popf
add
pop
rep
aaa
repz
sti
orb
sbb
fcompl
cmp
cmp
std
popa
inc
negl
xchg
sub
rolb
mov
mov
xchg
shll
inc
add
aas
or
or
repnz
or
dec
dec
clc
push
xor
dec
out
mov
lret
sub
mov
loope
or
jl
shrl
xorb
jnp
mov
jne
enter
adc
push
in
cs
pop
push
xor
and
or
incb
nop
jle
sarl
mov
ds
mov
inc
adc
dec
pop
sub
nop
ret
cmp
orb
mov
ljmp
pop
xor
push
mov
inc
ret
pop
push
and
xchg
mov
stc
mov
movsb
imul
subl
loop
lea
pop
ljmp
jno
imul
rclb
ja
mov
cld
mov
notl
mov
ljmp
inc
mov
sub
pop
pop
and
and
xchg
mov
inc
fisttpl
sbb
andl
les
das
lock
in
dec
xlat
fdivrs
mov
mov
mov
push
inc
imul
jne
sub
jo
dec
jl
push
mov
repz
sub
adc
fadd
mov
lods
es
or
icebp
mov
push
mov
jmp
mov
mov
mov
xchg
out
lcall
push
outsb
inc
mov
mov
addb
js
insb
cmp
jecxz
mov
js
leave
mov
and
mov
dec
mov
mov
jb
mov
pop
mov
mul
jge
cltd
ret
push
jmp
in
sbb
mov
mov
pop
das
ret
scas
ret
mov
add
push
in
adc
sbb
ja
adc
sub
cmp
roll
jl
xchg
sbb
lds
mov
xchg
cmp
sbb
popa
xchg
sbb
ljmp
aas
inc
leave
mov
push
jo
subl
jne
aas
or
js
sarb
lods
std
sub
addr16
test
jg
mov
pop
jecxz
shrb
xlat
fcompl
loopne
shrl
cmp
jb
es
xlat
test
out
sbb
mov
clc
mov
std
or
incl
cmpl
in
push
push
out
call
rcrb
or
and
sahf
pop
test
daa
or
ss
in
insl
push
mov
cmpsb
pop
dec
fidivl
mov
stos
std
inc
xchg
cmp
pop
in
jo
xor
inc
pop
icebp
lock
jo
inc
jns
mov
jl
lods
js
addr16
cmp
sub
dec
arpl
add
adc
jb
push
cmp
push
cmpsb
dec
xchg
dec
jmp
cmp
divb
or
ja
jbe
mov
out
add
cld
ja
cmc
pop
je
fstps
js
enter
pushf
and
les
sbb
fdivr
aas
xchg
out
mov
mov
xchg
std
mov
inc
imul
pushf
fisubl
xor
xchg
in
aas
mov
fdivrl
loop
andl
jp
pushf
bound
jle
flds
mov
pop
cmp
xlat
aam
push
imul
scas
sub
shlb
fdivs
test
jo
loopne
sbb
and
adc
ret
lret
sub
andb
lds
push
shr
push
mov
cmpsl
xor
cmp
xor
push
sub
gs
sub
or
cltd
push
sub
jae
into
jns
pushf
mov
popf
sub
inc
dec
aaa
push
mov
mov
pushf
cld
and
pop
fs
mov
test
sbbb
mov
jmp
movsb
inc
or
fcmovnb
cli
add
lret
les
and
mov
shrl
aad
jns
in
test
mov
aam
aas
inc
mov
repnz
mov
inc
aaa
jbe
adc
data16
es
sub
rcrl
cmp
mov
fisubrs
lods
in
filds
inc
or
aaa
xchg
into
mov
push
push
mov
inc
xabort
into
inc
push
or
and
mov
cli
call
jns
pop
mov
cmpsb
push
push
adc
test
stc
mov
pop
pushf
pop
sbb
add
lock
pusha
imul
cmp
or
mov
jge
jo
subl
js
loope
cld
ja
inc
push
mov
cmp
into
ret
daa
mov
popa
lea
out
or
adc
cwtl
mov
jns
adc
mov
jmp
mov
int
in
mov
imul
xor
xor
sub
cmp
nop
mov
or
enter
cmp
pop
repnz
repnz
mov
inc
mov
mov
rcr
movsb
lods
lods
fwait
roll
mov
xor
pop
js
xchg
repz
dec
lds
imul
jl
sub
xor
xor
popf
pusha
mov
je
les
fisttpll
xor
mov
push
and
int
mov
xchg
cltd
pop
mov
xor
outsb
and
out
or
pop
ds
cmc
push
adc
notl
dec
push
xor
into
arpl
lods
jb
adc
push
mov
repnz
out
decb
jae
fidivl
dec
roll
cs
cmp
cwtl
fwait
pop
lea
push
xchg
ds
cmpsb
xor
outsl
cmpsl
jae
ja
mov
stc
dec
shl
fistpl
mov
popf
daa
or
jp
dec
dec
sbbl
loope
push
scas
pop
jecxz
add
imul
stos
mov
out
int
inc
push
add
das
lock
push
xor
pusha
cltd
mov
mov
or
xor
decl
testb
dec
rolb
loopne
mov
lock
add
rcl
cmp
mov
mov
or
cmpsb
movsb
cld
int3
ja
push
loopne
mov
enter
dec
enter
test
xchg
cs
roll
dec
mov
push
out
cmp
jp
adc
movsl
add
fnsave
aaa
daa
in
popf
or
mov
cmpsl
cmpsl
repz
hlt
sbb
rol
in
push
in
ljmp
xor
mov
pop
outsb
sti
and
add
dec
jge
dec
adc
cmp
pop
or
gs
sub
adc
loop
frstor
fsubl
pop
loopne
out
push
add
sti
cmovge
sbb
pop
fistpll
call
in
jmp
daa
ds
sub
loop
mov
movb
adc
in
sbb
jmp
jmp
cmp
fcoms
mov
rcll
stc
xchg
das
cmp
lcall
das
lret
adc
xor
rorl
mov
inc
outsb
mov
loope
or
cmp
in
jne
imul
dec
out
arpl
das
sub
push
mov
sub
aam
call
fildll
jmp
pop
outsl
push
cmpsb
jbe
ficoms
lea
pop
daa
cli
sbbb
inc
mov
push
pop
adc
dec
and
mov
fcmovbe
imul
outsl
pop
ret
pop
lea
out
or
bound
push
push
xor
rorl
mov
jl
xchg
aaa
loop
repz
jbe
in
xchg
sbb
lods
pop
iret
adc
aaa
lds
jnp
sbb
sub
push
es
mov
add
pop
lods
pop
movsb
or
and
test
lret
pop
mov
xchg
mov
jae
jp
pusha
fcoms
dec
test
jecxz
xchg
arpl
icebp
or
test
cmc
fimuls
mov
mov
cmp
adc
sbb
jl
inc
rcrl
jne
loope
pop
xchg
add
fwait
add
or
iret
mov
and
mov
lcall
je
xor
inc
sahf
mov
outsb
fdivs
shl
inc
cs
dec
mov
cmc
hlt
cmp
mov
sbb
mov
jge
popl
push
push
pop
roll
std
rcll
jmp
fstpl
pop
fmull
cmp
fdivl
sub
cld
and
sub
shlb
test
js
xchg
and
push
mov
enter
mov
xchg
loopne
imul
popf
loop
and
shll
add
lret
arpl
mov
sbbb
sub
stc
mov
sahf
sarl
push
popa
add
lds
enter
or
push
add
dec
pushf
push
and
and
mov
jg
adc
test
inc
fwait
lret
sub
aam
jae
pop
ficoms
xor
test
loop
aad
jb
movsl
repnz
outsb
inc
mov
mov
inc
out
cmpb
sbb
cld
sbb
outsl
dec
jno
lret
jne
inc
icebp
sub
std
sub
loop
mov
add
sahf
add
out
fstps
pop
adc
rol
lods
mov
dec
pop
cmc
push
and
pusha
push
dec
and
xor
pusha
sub
imul
xchg
jae
cltd
out
mov
arpl
pop
sub
or
and
jp
mov
mov
push
jp
xchg
aam
lcall
test
in
push
add
mov
push
pop
inc
cld
xorb
sub
stos
outsb
fisubrs
shufps
je
call
dec
or
sahf
jmp
adc
das
xorb
push
cmp
das
test
jge
push
loopne
inc
mov
and
mov
jne
pop
adc
test
mov
faddl
lahf
outsl
bound
insb
cmp
les
dec
jle
lret
mov
sbb
or
jle
push
xchg
xchg
push
mov
cmp
jmp
dec
ja
sbb
lret
push
sbb
pop
pop
inc
pop
mov
pop
pop
inc
aaa
pop
jp
push
test
enter
ret
mov
mov
stos
mov
sbb
jae
mov
jp
aaa
jae
pop
xor
adc
add
jbe
pusha
inc
testl
stos
push
fcomip
xchg
mov
les
das
shlb
imul
cmp
imul
adc
sarl
pop
pop
fsts
push
cwtl
mov
mov
pop
push
mov
adc
push
cmp
std
mov
or
cmp
test
xchg
fisubl
xor
dec
and
fbld
ds
add
or
pop
pop
fisubrl
ljmp
das
mov
sub
hlt
push
sbb
inc
jnp
add
ljmp
add
clc
xor
jae
ret
xchg
jle
cmp
rorl
cmp
push
cmpl
jmp
cmpsb
cmc
fs
or
jno
cmpl
xchg
xor
nop
xchg
repnz
bound
and
mov
jnp
dec
mov
bnd
pop
fiaddl
mov
rcrb
lea
repz
sub
mov
outsb
lret
mov
pop
dec
jno
gs
mov
lahf
movsb
out
dec
movsl
or
push
cld
ss
jecxz
inc
jae
fistps
mov
or
adc
inc
add
test
sbb
jg
stc
clc
dec
dec
xor
inc
mov
mov
andb
mov
nop
mov
jmp
cmp
scas
adc
adc
pop
mov
pop
movsb
dec
and
popf
in
clc
mov
sahf
jge
mov
dec
pop
sub
hlt
sbb
outsl
cmp
cli
in
arpl
aad
cmpsl
sbb
test
cmp
dec
insl
jae
ljmp
inc
push
xorl
push
or
adc
mov
add
lock
dec
addr16
inc
outsl
int3
shl
outsb
psubsw
inc
push
sbb
fwait
and
sbb
sub
sbb
movsl
sbb
rol
push
xor
ds
ret
sub
push
test
inc
mov
outsl
adc
xchg
out
xchg
ss
fdivl
in
int3
push
orl
icebp
stos
fcoml
fisttpll
and
jmp
push
sbb
mov
or
xor
fiadds
addb
stos
mov
or
xorl
data16
lahf
pop
movsb
cmpsl
push
sub
call
mov
dec
mov
sbbb
aaa
data16
mov
lods
cmp
push
seta
in
idivb
xor
adc
fnstsw
scas
mov
or
jle
and
push
push
xchg
inc
push
lret
mov
loopne
inc
jecxz
lret
imul
icebp
movsb
in
iret
fcompl
lret
lods
mov
aas
pop
pusha
fwait
xchg
inc
mov
fnsave
adc
repz
lcall
mov
insl
sub
test
add
xchg
jno
xor
outsb
add
test
push
mov
ror
aaa
mov
es
push
adc
push
adc
pop
xor
mov
jne
push
fstps
scas
cmp
dec
sub
mov
pop
jge
pop
in
std
sub
mov
jmp
xor
and
loop
imul
sti
mov
pushl
test
lret
fbld
adc
pop
xor
mov
pop
mov
xor
inc
mov
push
ret
push
xchg
addr16
ret
loope
dec
rclb
shl
ret
xor
nop
in
adcl
das
mov
cmc
stc
inc
xchg
lahf
dec
ret
rorl
pop
insb
into
icebp
arpl
mov
pop
lcall
les
inc
mov
sbb
pop
add
mov
jnp
filds
test
mov
mov
sub
rcrl
mov
jg
xchg
push
adc
jg
test
popa
push
cmpsb
repnz
lret
aaa
repnz
enter
inc
je
lahf
adc
mulb
cli
cmc
test
xor
adc
out
loope
inc
push
in
addr16
pop
nop
sbb
mov
sub
jbe
dec
insb
stc
cmp
lahf
je
xchg
data16
sbb
push
mov
mov
lret
ret
push
dec
inc
mov
push
mov
sbb
mov
sub
jns
push
negl
adcb
dec
aad
arpl
test
test
pop
rol
sub
daa
adc
test
aaa
js
sahf
cli
ja
pop
ss
xchg
pop
rcrl
sbb
pusha
clc
inc
mov
mov
dec
jmp
mov
stos
xor
fwait
jecxz
clc
shr
xlat
fdivp
inc
lods
mov
dec
xchg
addr16
lods
pop
pushf
popf
lahf
add
push
push
movsl
dec
int
sbb
xchg
mov
jns
addb
push
ljmp
loop
hlt
insl
rcrb
fildll
push
mov
nop
and
daa
lds
mov
iret
jbe
adc
xor
xchg
pop
add
lea
and
repz
inc
dec
inc
dec
dec
enter
xor
fimuls
dec
dec
add
jg
xlat
mov
out
xor
test
mov
push
je
popl
xchg
pushf
std
sbb
hlt
stos
cmp
adc
and
lret
sbb
and
push
jecxz
pushf
ret
mov
pop
jl
push
xor
inc
inc
insb
ret
dec
sbb
xor
repnz
push
xchg
or
dec
xor
push
xchg
lds
fdivrs
sub
inc
pop
sbb
lods
pusha
mov
stc
mov
push
aam
cmp
cmp
xchg
ljmp
cmp
xor
cmp
push
mov
mov
jmp
arpl
scas
cmp
push
iret
mov
push
movsb
sti
xchg
pop
jae
mov
lahf
cmp
insb
sti
xchg
sub
jo
fcoms
push
sub
imul
push
jae
and
in
sbb
popa
jl
push
xchg
stc
push
mov
or
pop
jne
inc
pop
push
sbb
and
and
push
in
clc
mov
inc
mov
pop
ds
pushf
adcl
inc
mull
fdivr
mov
scas
imul
dec
cli
fstps
mov
insl
and
pop
jle
mov
push
xchg
fldl
mov
xchg
outsb
mov
xor
int3
mov
cmpsl
push
insl
xor
push
inc
subb
out
mov
aas
xchg
push
daa
dec
loop
movsl
cmp
push
lret
jb
lea
pop
mov
lret
lds
and
adc
mov
jge
xlat
and
cmpsb
sub
add
imul
inc
dec
movsl
mov
push
mov
jne
xchg
and
imul
insl
test
pusha
mov
dec
and
ljmp
out
psubq
dec
dec
ret
xor
mov
int3
ja
cmovo
shr
repz
mov
jp
popa
push
or
test
jo
int3
sub
inc
sti
pop
mov
pop
mov
sub
jnp
pop
outsb
jb
and
push
loopne
sarb
rorl
ljmp
fimull
addb
cwtl
or
sub
into
sbb
int
insb
push
nop
sahf
adc
jno
jnp
aas
fisttpll
lahf
lods
jbe
insb
sbb
fstpl
jmp
mov
lds
xchg
xchg
mov
imul
push
jae
aam
add
in
pop
dec
jb
pop
xlat
test
lods
test
fcmovnu
mov
mov
push
test
push
xor
es
pop
sub
and
inc
mov
sarl
mov
xor
dec
addr16
leave
pop
add
je
addr16
scas
xchg
rolb
js
or
and
push
rcl
es
lret
ret
lea
mov
or
std
push
pushf
or
fsubp
aad
adc
mov
mov
jns
es
scas
fidivrs
outsb
pop
add
pop
and
pop
add
icebp
push
pop
lock
cmp
in
jmp
dec
jb
mov
add
xchg
mov
cmp
pop
mov
jmp
and
sub
loopne
pushf
jg
push
fisttpll
sarb
nop
lods
jno
push
movsl
xchg
dec
pop
mov
push
jae
dec
dec
out
out
sub
or
js
mov
in
lea
push
in
xchg
loope
test
sbb
xchg
dec
je
dec
mov
pop
mov
stos
clc
or
addr16
clc
sbb
adc
dec
sub
int
push
adcb
scas
adc
clc
mov
sbbb
adc
pop
fcomp
cmp
loopne
push
or
ljmp
lcall
cmpb
xor
aad
xlat
popa
xchg
and
lods
int3
mov
push
mov
fimull
scas
bswap
xchg
mov
mov
jne
or
lock
jge
cli
push
loope
push
mov
into
cmc
sub
fistps
xchg
cmp
dec
mov
mov
clc
adc
loope
fs
sahf
or
xlat
push
xchg
mov
add
jnp
mov
mov
cld
loopne
insl
cmpsl
cvtps2pi
scas
sbb
mov
lret
xor
pop
cmp
lds
mov
test
out
nop
cs
js
ret
dec
insl
sbbl
idiv
jo
push
frstor
mov
sub
push
sbb
or
mov
or
insb
sub
adc
sub
xorl
negb
inc
fcomi
fiadds
mov
jb
scas
jmp
add
ss
xor
ds
xchg
pusha
lock
mov
push
insb
cmpb
test
les
cmp
lahf
sub
mov
shll
add
bound
cmpb
push
jne
and
or
cmp
xor
mov
mov
icebp
mov
dec
out
lds
mov
sar
das
iret
mov
shrl
dec
in
insb
stos
aaa
jbe
test
mov
mov
aad
fwait
syscall
shrl
inc
sub
inc
stos
scas
into
jge
cltd
insb
add
pop
cmc
incl
fsubs
cmp
pusha
out
dec
nop
insb
jns
cltd
dec
outsl
ficoml
xlat
cmp
in
iret
into
scas
lods
dec
into
jl
repz
lret
insl
ljmp
mov
in
adc
pop
pop
fimull
aam
push
aaa
loop
fstps
aas
and
test
mov
xchg
test
mov
push
cmp
xor
xor
mov
dec
pop
inc
cli
sub
xchg
jmp
inc
adc
xor
jge
xchg
or
dec
sub
mov
mov
mov
xchg
popa
cmp
jl
cmpl
mov
sbb
mov
push
cmpsl
out
jnp
in
or
rorl
and
ss
push
hlt
xor
out
mov
repnz
jo
pop
or
repz
add
sbb
xchg
cmp
cmc
cmp
push
push
sbb
add
pop
pop
pushf
mov
outsl
dec
popf
js
or
xadd
jbe
imul
pop
lret
add
cmpsl
push
jmp
fiadds
cmp
sub
sbb
mov
pushw
or
dec
test
stos
aas
xlat
insb
or
sbb
push
xchg
xchg
test
cmpsb
jge
push
popa
pop
push
cmp
adcl
pop
lcall
int3
aad
and
pop
adc
mov
ret
addr16
sbb
std
mov
adc
inc
psrlw
sbb
into
mov
stos
xchg
jle
insb
push
inc
addl
mov
sbb
rcl
cmp
mov
mov
push
pop
pop
xchg
inc
out
loop
pop
push
ds
out
leave
jne
test
in
push
jo
mov
cmp
mov
in
and
test
adc
das
jmp
shrb
out
cltd
or
add
repz
roll
pop
push
sti
fnstcw
daa
hlt
pop
sti
sbb
push
sub
inc
scas
rolb
mov
aaa
jecxz
sub
jbe
stos
jp
mov
sub
sbb
inc
and
fldl
xchg
shlb
movsl
xchg
repz
jle
fildl
adc
xchg
xor
fcomi
fmul
hlt
jbe
xchg
jge
ljmp
pop
jle
ja,pt
insl
jg
add
mov
mov
pop
icebp
add
cld
sub
outsb
dec
push
mov
in
in
leave
arpl
pop
adc
cltd
imul
fucomi
xchg
mov
push
mov
sbb
mov
lahf
adcl
mov
into
nop
mov
xor
mov
push
lock
dec
fdiv
scas
push
scas
clc
jle
add
nop
test
pop
jnp
mov
add
bnd
out
xor
repnz
int
gs
shlb
enter
inc
adc
lcall
or
hlt
sub
cmp
pusha
cmpsb
repnz
fabs
fs
jmp
mov
or
pushf
jl
pop
ljmp
add
xchg
push
sub
sbb
inc
std
loopne
and
cmpsb
mov
sbb
sahf
xchg
or
out
insb
sbb
pop
xchg
rcll
arpl
add
adc
lods
or
mov
cmp
lret
lds
push
push
add
ljmp
bound
xor
inc
std
push
mov
and
xchg
aaa
inc
pop
adc
and
dec
aam
mov
jbe
ret
cmp
jo
adc
adc
roll
mov
in
mov
dec
mov
xchg
aad
test
fbstp
insl
outsl
cmpsb
fs
sbb
ljmp
xor
divl
jno
pop
scas
mov
mov
ja
xchg
xchg
adc
xchg
inc
add
insb
inc
movsb
cwtl
popf
dec
pop
and
addb
adc
pop
pop
add
sub
insb
push
push
or
notl
arpl
adc
mov
in
cli
leave
bt
fcomps
pop
stos
add
arpl
sahf
cmpsb
movsb
ljmp
xlat
mov
push
ss
psrlq
jnp
shld
test
sub
xor
fisubrs
aad
lret
xchg
out
mov
or
pop
adc
cmpb
jnp
or
sub
xor
fldl
xor
subl
pushf
adc
sahf
mov
jg
sbb
mov
adc
int
movsb
push
mov
icebp
data16
int
push
mov
inc
push
outsb
js
adc
dec
imull
enter
pop
pop
sbb
adc
je
ds
pop
mov
push
jecxz
addr16
shl
add
cli
sti
xor
cmc
dec
pop
insl
add
lock
mov
adc
bound
push
cmpsb
jns
mov
leave
rcrl
push
and
mov
jne
and
rcll
repnz
inc
std
and
xor
leave
clc
adc
pop
test
decb
jbe
mov
popf
out
stos
cmc
pop
mov
dec
gs
mov
sbb
xor
and
divb
dec
ja
push
pop
in
hlt
xchg
fnclex
mov
or
es
sbb
inc
dec
mov
in
mov
inc
dec
mov
in
sbb
leave
pushf
mov
and
out
out
scas
ret
push
into
push
jle
or
incb
daa
mov
xor
mov
dec
add
into
mov
pop
push
mov
leave
scas
shlb
jmp
cmp
in
jns
call
fdivrs
mov
repz
sbb
cmp
cwtl
sub
xchg
nop
aad
int3
mov
les
mov
sbb
sbb
dec
shll
lret
or
popf
dec
xor
or
dec
lret
pop
test
mov
fisubs
cmp
mov
adc
in
inc
inc
jecxz
in
je
addr16
mov
mulb
iret
and
pop
dec
aad
xor
and
sub
adc
in
and
inc
push
fnstsw
mov
mov
pop
filds
loope
mov
sub
add
in
cld
or
out
cmp
xchg
enter
sub
rcrb
movb
stos
push
into
filds
int
fstp
rcll
adc
fucom
mov
push
mov
rcll
xchg
mov
or
mov
testl
inc
push
loope
add
leave
mov
testb
pop
pop
adc
cmp
test
or
pusha
sub
mov
jno
mov
add
sahf
push
ds
lds
dec
fnstcw
cmpl
jne
jo
icebp
dec
shr
xchg
jns
aam
adc
test
stos
xor
jle
xchg
xchg
jo
push
sahf
sub
jp
and
aam
inc
idivl
loop
or
jo
jo
lahf
xor
or
rep
fistps
jne
adcb
adc
arpl
imul
push
fcomp
add
mov
leave
dec
add
pop
xchg
insb
push
outsl
mov
jge
dec
aas
push
fidivs
mov
xchg
fistpl
out
aas
cmovs
push
shlb
xchg
sbb
and
cmc
push
outsl
pushf
xor
mov
sub
push
push
adc
jns
add
loope
in
inc
adc
fdiv
xor
rcll
jb
jmp
popa
lret
andl
lds
ds
aad
cmpsl
fsubrl
aaa
dec
jle
xchg
fucomip
inc
dec
lods
sbb
jno
cs
xor
mov
daa
dec
push
lods
jg
lods
xor
jecxz
fstl
fmuls
sub
push
mov
jb
dec
jo
adc
pop
cmp
notl
inc
ret
pop
js
js
test
lock
and
inc
mov
jge
ret
lret
insl
xchg
in
sbb
adc
xchg
pop
das
or
xchg
adc
out
push
aas
insl
push
inc
clc
push
clc
sbb
jne
push
and
sbb
adc
mov
push
jo
mov
shl
das
or
int
mov
scas
adc
mov
and
pop
sbb
cmpsl
sti
jbe
lret
sbb
mov
les
lcall
leave
xchg
arpl
adcl
repz
leave
fsubrl
mov
xor
popa
out
and
push
dec
inc
dec
jne
pop
adc
or
mov
cmp
mov
lods
scas
pop
gs
sbb
mov
inc
xor
orb
dec
sub
into
nop
ficompl
int3
sub
add
jne
and
push
shrl
xchg
dec
test
andl
lods
lea
pop
add
clc
jp
pushf
dec
orl
pop
mov
in
ja
fisubs
add
inc
inc
push
hlt
loope
mov
outsb
push
pop
push
enter
add
test
ljmp
jp
jno
in
cmp
ja
mov
mov
push
adc
aad
pop
push
sbbl
cmp
in
stos
mov
rorl
sti
mov
icebp
sbb
sub
lock
shll
xchg
outsb
ret
aas
leave
pushf
pop
mov
mov
push
mov
call
and
push
je
in
dec
push
ret
ret
adc
push
sbb
adc
scas
xor
bound
sub
cmp
xchg
cmp
adc
icebp
mov
fwait
xor
loopne
pop
out
jbe
xchg
bound
cmpsl
mov
inc
shll
push
popa
sbb
jno
mov
dec
sbb
pop
pop
pop
lahf
push
xchg
dec
fucomp
imul
mov
and
lods
test
insb
cmp
xchg
js
test
pop
mov
jge
lret
js
ret
shl
fisubrl
inc
fwait
aad
mov
jne
arpl
or
cmpsl
ss
mov
sbb
mov
leave
std
loope
push
addr16
dec
xor
push
dec
push
loop
sbb
fcomps
decl
xor
out
xor
pop
fistpl
outsl
push
xor
adc
inc
jle
pop
test
sub
inc
mov
into
clc
mov
stos
push
mul
rcrb
ret
loopne
inc
adc
push
mov
mov
loop
data16
cmc
hlt
xchg
pop
sub
jnp
sub
push
dec
and
inc
add
pop
scas
aaa
xor
dec
sub
sub
leave
and
pop
mov
loop
mov
es
cs
popa
lahf
rolb
cwtl
rorb
adc
in
movl
push
mov
jge
insl
aad
mov
gs
cmp
jo
jae
repz
in
dec
sbb
add
sbb
jecxz
mov
nop
pop
inc
pushf
pop
stos
pop
jl
push
test
cmc
inc
dec
mov
ljmp
jg
mov
jge
rcll
xor
lahf
ret
fadds
sbb
xor
xchg
jno
test
push
mov
insl
push
xor
repz
sbb
dec
fstps
push
sarb
daa
xor
push
add
movsb
outsb
xchg
shlb
xor
jge
cmp
aaa
sbb
mov
icebp
loop
sbb
sbbb
jo
mov
shll
pop
adc
pop
sbbl
out
push
mov
add
jg
or
sbb
inc
dec
cmpsl
adc
jns
add
es
mov
js
adc
mov
add
jae
cltd
aad
push
loopne
jl
leave
insl
sub
dec
and
lahf
xchg
and
pshufw
adc
add
mov
push
out
shrb
mov
arpl
inc
push
popf
data16
mov
xchg
leave
or
pop
fcmovbe
add
mov
xchg
and
int3
lock
inc
insb
dec
outsl
xchg
xor
pop
cwtl
test
pop
pop
inc
insb
hlt
push
sbb
fisubl
rolb
pop
sbb
inc
imul
loopne
inc
out
and
xchg
xlat
sarb
xor
out
mov
pop
inc
rclb
js
out
jne
jge
pusha
test
outsl
rcrb
sbb
lods
push
lret
push
lock
mov
or
push
xchg
sub
inc
fstp
lret
pop
xchg
in
add
dec
sbb
test
dec
pop
dec
jge
jno
push
cmp
inc
xchg
push
in
stc
inc
dec
inc
addb
cmp
fdivrl
fs
add
dec
xacquire
sbb
pop
xchg
outsl
in
subl
inc
ja
sar
xchg
push
fnstcw
jecxz
push
out
stc
fldcw
xor
or
mov
mov
pop
push
xorl
stos
lcall
out
ds
lds
cmp
imul
jnp
jne
orl
and
push
and
mov
adc
mov
jns
and
imul
cmpb
push
dec
popf
jnp
lea
mov
jae
add
push
clc
in
fisubs
sub
imul
addr16
or
xchg
and
cmp
dec
stos
cli
pop
jle
inc
pop
sbb
push
leave
leave
negl
pop
icebp
out
or
aaa
mov
mov
into
popf
inc
xlat
add
addr16
pop
je
loopne
pusha
add
pusha
inc
iret
inc
in
xchg
out
mov
push
push
pop
add
fadds
int
mov
mov
shlb
inc
xchg
or
ret
mov
cmp
scas
xor
pop
int
xchg
test
pop
pusha
pop
outsb
fistps
push
cltd
jno
ror
pop
cmp
xchg
dec
scas
jmp
incl
cwtl
mov
or
fwait
lcall
mov
pop
adc
iret
hlt
cmp
es
mov
pop
cmc
push
stos
into
and
inc
jmp
stc
jb
xchg
cmp
lret
pop
mov
push
aad
pop
xchg
lret
jge
mov
fdivrp
cmp
repnz
in
aad
pop
sbb
lds
clc
lahf
leave
cltd
into
das
arpl
es
mov
movsb
ljmp
adc
aad
jp
bound
popf
inc
cwtl
mov
push
xchg
mov
jp
js
scas
dec
mov
divb
mov
pushf
push
mov
or
push
xchg
or
je
mov
lea
jl
sarb
cmp
xchg
mov
daa
in
outsb
lods
gs
xchg
fdivrs
mov
pop
xor
add
das
xor
stos
mov
jle
out
mov
xor
or
aam
pop
jecxz
push
dec
xor
lahf
int3
and
rorl
dec
idivb
aaa
jmp
mov
push
or
mov
mov
in
stc
mov
mov
dec
jo
das
push
xchg
dec
pop
add
daa
mov
push
xchg
cli
std
leave
add
mov
rclb
dec
in
add
repnz
arpl
sbb
mov
jle
rorl
add
jecxz
les
or
jl
imul
std
repnz
arpl
into
inc
loop
cmpsb
cmp
lea
and
stc
mov
mov
fimull
or
inc
jno
add
jae
xor
and
ja
push
mov
in
push
xlat
adc
push
testb
push
cmp
gs
int
call
cli
aad
mov
inc
and
fistpll
shrl
out
lcall
mov
cmp
xchg
xchg
jae
iret
push
fpatan
xchg
out
mov
jae
pop
cmp
std
out
imul
arpl
fcom
dec
arpl
clc
mov
test
js
in
std
repz
mov
stc
dec
jbe
sbb
jne
fisubrs
cmp
rol
sar
loope
push
xchg
cltd
fsubp
and
inc
hlt
popa
pop
adc
xchg
sbb
mov
std
notl
mov
pusha
xchg
inc
or
adcl
mov
sub
mov
rolb
negl
mov
cltd
lds
sub
inc
int3
pop
sbb
scas
stos
cmc
rep
lods
cmp
leave
xor
shll
fnsave
daa
sub
outsl
adc
pop
adc
test
out
cs
sub
fwait
and
rorb
imul
mov
dec
cltd
xor
push
ja
inc
test
in
ds
jo
or
xchg
movsl
sbb
stos
xchg
ds
lea
pop
mov
call
je
fwait
dec
fwait
mov
pop
sub
sub
or
rolb
inc
mov
push
cld
or
dec
pop
xor
pop
lea
aad
adc
sbbl
fbstp
nop
fisubrs
fisubs
xchg
dec
shl
add
mov
sti
mov
mov
push
std
mov
jo
push
xchg
dec
fldl
xor
adc
xchg
jge
cmp
sti
insl
sub
xorb
jmp
xor
and
push
aas
xchg
stos
mov
xor
call
jae
mov
mov
add
mov
pop
pop
arpl
out
cmpsl
mov
cli
ficomps
mov
into
or
repnz
clc
sub
mul
dec
insb
push
aas
rcr
leave
xchg
shl
arpl
test
push
push
sbb
sbb
addr16
xchg
jecxz
xor
outsb
ljmp
and
inc
pushf
rolb
jecxz
push
pop
jns
xor
xchg
push
push
xchg
ljmp
lcall
xor
mov
sbb
add
les
je
stc
xchg
data16
sahf
mov
push
in
xchg
mov
pushf
push
cmp
outsl
int
push
subps
fimull
mov
sbb
jle
xchg
fcomp
jo
cltd
mov
test
adc
jne
mov
sbb
movl
mov
sbb
sbb
lahf
or
dec
cld
insb
sti
popl
sub
pop
or
inc
push
xchg
mov
and
sahf
pop
sbb
lcall
pushf
dec
xchg
xchg
jnp
out
and
cwtl
pop
and
dec
cmp
push
xor
dec
rorl
ficoms
inc
mov
bound
jne
dec
sbb
stc
loope
inc
clc
mov
mov
xor
sbb
enter
sti
add
adc
rcll
mov
cld
xlat
mov
or
dec
or
pop
je
jnp
repnz
jmp
adc
or
mov
lods
jns
mov
fisttps
popf
mov
or
in
or
enter
pop
jmp
xchg
insb
bound
mov
mov
adc
push
mov
mov
sub
pop
out
fwait
xor
xchg
fistps
les
or
dec
aad
jp
insl
push
mov
mov
ja
and
pop
test
enter
or
mov
enter
shll
xchg
out
adc
and
cltd
stos
jb
or
clc
add
push
js
leave
in
clc
push
test
push
xor
movsb
ja
ja
xchg
xor
xor
pusha
arpl
sub
xorb
and
lret
jae
sarb
cmc
adc
shr
add
lods
adc
les
inc
lock
and
ret
movsb
fstps
push
fisubl
mov
fdivr
dec
ret
fld
pop
sub
pop
push
aaa
dec
bound
push
sbb
mov
xor
mov
shlb
jns
rcrl
test
cmp
mov
add
mov
or
jmp
aad
mov
imul
cmc
jl
je
mov
or
pop
scas
mov
mov
or
xchg
and
movsl
xchg
push
push
mov
das
or
dec
mov
scas
push
push
rcr
sub
out
jnp
xor
push
lret
add
ja
addb
repz
sub
rcrl
ret
sti
xor
pop
mov
jecxz
mov
push
rorb
dec
mov
mov
rolb
dec
in
lcall
pushf
stos
fdivs
fcomps
fnstcw
mov
cmp
rorl
xlat
or
out
or
mov
in
std
xlat
jae
mul
or
pop
out
cmp
insb
inc
cmp
and
in
js
iret
push
outsl
nop
xor
adc
out
dec
bound
dec
dec
hlt
call
outsl
inc
ss
xor
jmp
faddl
pop
mov
jmp
les
cmp
mov
fdivl
mov
lcall
in
fistpl
cltd
mov
hlt
sahf
pop
orb
in
pushf
push
aas
jo
fs
lcall
push
add
cld
push
xchg
push
or
fsub
notl
sbb
push
push
dec
aam
cli
pusha
js
add
test
in
lahf
pop
inc
into
cmpsl
pop
fs
pop
mov
sbb
sbb
xchg
lods
mov
test
mov
mov
push
xchg
dec
sbb
jns
xor
leave
adc
psubb
repnz
mov
aad
sub
xchg
and
addr16
cld
add
xchg
jp
subl
mul
pop
and
mov
out
cmc
push
sahf
pop
in
aam
jns
jl
fimull
jmp
mov
mov
mov
sbb
mov
sub
sarl
jg
ds
dec
sahf
icebp
les
in
xchg
lock
divl
dec
ja,pt
js
and
and
push
fadds
mov
cli
pop
adc
push
lret
dec
sbb
imul
pop
cld
fcmovnu
or
lahf
add
popf
push
loope
mov
mov
dec
sub
lahf
and
outsb
xchg
orl
sbb
push
or
bswap
pop
pop
sub
inc
inc
mov
fbld
jns
data16
pop
sub
adc
dec
outsb
fstpl
into
test
ret
jp
or
mov
jp
sahf
or
dec
mov
test
and
rcrb
push
or
into
out
xchg
setp
movsb
test
shlb
inc
push
sarb
mov
push
imul
mov
sahf
push
cli
shrl
leave
shl
adc
dec
repnz
pushf
mov
iret
mov
xchg
popf
jns
hlt
popa
test
and
mov
sub
sub
mov
xchg
mov
and
pop
dec
sbb
gs
inc
ds
mov
fwait
push
pop
rorw
jo
or
rcrb
mov
jb
imul
inc
imul
mov
mov
dec
test
adc
dec
jae
push
adc
loopne
pop
mov
and
in
aam
inc
into
lds
loope
stos
addb
mov
out
lret
add
cli
cwtl
mov
js
rorl
sahf
cmp
rcl
push
test
cmp
ja
or
aam
stc
je
pop
in
cmp
xchg
je
leave
stos
mov
add
cltd
or
mov
lcall
add
push
mov
mov
adc
sbb
push
aas
enter
sbb
cmpsb
xchg
jnp
stos
gs
mov
mov
daa
mov
push
push
ja
push
mov
sar
lcall
xchg
pop
shll
adc
loopne
xor
sub
int
addr16
xor
jae
popf
lock
das
testl
dec
test
pop
loope
data16
outsb
sbb
out
mov
sub
aam
mov
mov
adc
fimuls
std
aas
xor
inc
decb
imul
and
insl
jl
dec
sub
aaa
aaa
push
test
inc
mov
inc
adc
rorl
xor
movsb
fstps
and
pop
pop
out
xor
push
inc
mov
mov
sbbb
pop
rcll
les
add
loop
aaa
inc
fstl
cmpsl
fmul
sub
adc
mov
sub
mov
cmp
lods
aam
jmp
and
xor
fdivrs
mov
pop
lds
sbb
dec
int3
jns
push
dec
xchg
sbb
cli
sub
fistl
or
adc
cmp
test
int3
jo
cmpsl
add
sub
orl
xor
lret
jp
nop
test
dec
adc
xchg
rcll
sbb
inc
fbstp
aam
sbb
dec
jb
pop
mov
addr16
inc
xor
or
jne
fistps
mov
sbb
aad
jecxz
pop
imul
ja
cmp
stos
jle
inc
inc
in
aas
sbb
add
xlat
push
mov
cs
mov
gs
rcrl
push
pusha
scas
sub
and
loopne
fcompl
in
ljmp
and
insb
or
push
gs
outsb
mov
loop
inc
push
pop
xor
dec
mov
or
sbb
mov
out
xorb
fsubl
xor
mov
mov
push
pop
out
addr16
iret
xlat
sub
mov
call
xchg
sub
mov
lahf
adc
lea
sbb
push
push
sub
sbb
jp
jnp
js
dec
inc
cmp
push
mov
sub
shrl
out
in
cmp
filds
movsb
xor
xchg
sti
shr
popa
adcl
shll
dec
insb
adc
fdivr
add
scas
adc
mov
shr
inc
lea
mov
fwait
cli
stc
out
je
push
dec
scas
add
out
out
cmp
into
cmp
sub
inc
and
mov
int3
in
xorl
fsubrs
ds
gs
inc
xchg
mov
push
add
mov
dec
xchg
loope
fisttpll
int3
mov
out
sub
shr
inc
pop
push
push
loop
scas
rolb
adc
stos
add
pop
and
outsb
dec
push
sbb
push
scas
fisttpll
mov
lret
sub
cmpsb
xorl
jne
mov
sbb
in
pusha
push
shlb
fs
inc
pop
push
mov
push
addl
scas
lods
pop
cmpsl
or
ret
ss
pop
inc
mov
outsb
bts
push
sub
ds
pop
inc
inc
push
jp
sub
test
jmp
push
cmpsb
add
in
jg
mov
mov
inc
xor
sbb
mov
insb
pop
pop
push
ja
dec
out
sbb
pop
mov
fmul
dec
dec
rclb
and
sub
mov
add
popf
sbbl
in
fucom
cmp
and
fsubrl
jge
dec
add
rol
into
les
sbb
int3
or
fbstp
out
push
sub
mov
xor
xchg
ret
mov
fcoml
jp
lcall
scas
mov
pop
cmpsb
movsb
stc
add
int3
mov
jecxz
inc
adc
mov
jecxz
pop
cwtl
add
movb
sub
push
adc
lcall
xor
lea
fcmove
nop
push
imul
cld
sbb
ret
insb
fdivrs
cs
jo
in
xchg
sahf
sbb
dec
les
test
loope
pop
js
mov
dec
jp
ds
lret
mov
xor
pushf
add
ljmp
jge
dec
mov
lods
lret
sub
ds
shl
fs
or
add
scas
pushf
xchg
fwait
dec
mov
sbb
out
mov
dec
insl
cltd
aam
pop
inc
aaa
rorb
adc
push
movsl
jne
or
cmp
aaa
push
xchg
insl
lret
cmp
pop
push
insl
call
call
push
xchg
loop
adc
sbb
test
sub
sahf
iret
fimull
sub
lods
ljmp
sub
in
pop
test
outsb
xchg
daa
imul
adc
xchg
enter
prefetcht0
pop
insb
and
nop
cltd
aaa
adc
push
in
cmp
and
dec
push
jmp
sbb
mov
lods
iret
dec
xor
mov
es
lea
xor
loop
mov
dec
pushf
sbb
test
rolb
xchg
adc
test
outsb
test
imul
mov
xchg
stos
xchg
or
bound
mov
jg
xchg
cmp
pop
push
jecxz
sub
add
popf
sarl
mov
das
test
les
insb
sti
out
xor
pop
je
enter
les
jp
shl
sub
hlt
mov
mov
or
fldl
mov
cmpl
mov
xchg
mov
dec
dec
std
and
push
xchg
jne
lds
data16
mov
xchg
mov
jmp
mov
jno
dec
or
mov
xor
push
sub
fistl
bound
xchg
shrl
and
xchg
mov
fwait
add
subl
das
and
cwtl
dec
xor
dec
cmp
addr16
fdivr
aas
inc
mov
ja
test
aas
jns
push
mov
mov
dec
and
call
stos
scas
das
ret
xor
std
out
cli
enter
loope
adc
sbb
dec
scas
xor
pushf
fdivrl
repz
sahf
es
aaa
andb
add
mov
or
add
int
inc
adc
push
jbe
xchg
cmpsb
int3
cmp
push
or
xrelease
andl
ss
js
fwait
push
dec
mov
enter
pop
shl
dec
sub
sti
cmp
das
sahf
lahf
adc
sub
lock
bound
jb
dec
jne
fmull
push
into
into
les
orl
jmp
bound
out
enter
das
scas
ret
inc
js
push
dec
adc
jg
cmp
ja
xchg
mov
insb
and
rcll
inc
ljmp
bound
xchg
push
loopne
pop
clc
pushf
xchg
les
lret
mov
mov
cltd
clc
push
pusha
dec
jecxz
push
xchg
es
es
push
and
lret
sbbl
inc
icebp
inc
xchg
ret
or
or
dec
pop
dec
adc
add
or
imul
or
xchg
clc
lahf
movsl
mov
sbb
dec
test
cwtl
jne
inc
mov
push
and
pusha
jns
inc
sub
fdivs
cmp
into
push
and
loop
fs
ret
inc
jg
fdivp
xchg
pop
enter
sub
cmp
dec
add
out
pop
mov
jbe
bound
lods
jp
test
xor
and
jecxz
ret
mov
addb
sbbl
arpl
inc
xor
movsb
nop
sbb
into
lock
sbb
mov
jecxz
scas
adc
or
mov
sahf
out
adc
cmp
sub
jo
je
test
adc
es
dec
pop
push
jnp
jecxz
and
ljmp
add
xchg
sbb
rclb
push
sti
push
out
mov
popa
movsb
out
outsl
xor
sbb
xor
fsubrl
insb
xchg
sbb
dec
or
and
loope
cmp
mov
sbb
je
mov
cmpl
xor
loope
inc
inc
mov
shlb
inc
jecxz
aad
je
add
mov
or
xor
stc
add
rclb
imulb
push
in
ds
out
insb
das
js
push
add
and
push
cwtl
insb
adc
cmp
inc
jns
pop
pop
xor
ljmp
adc
call
dec
xor
mov
cmpsb
dec
mov
mov
imul
push
mov
flds
fisttpll
scas
push
mov
mov
in
inc
sub
xor
les
in
cmp
sbb
cmp
xor
out
adc
pop
mov
sbb
into
fs
pop
mov
test
mov
pushf
out
data16
pop
xchg
lods
mov
cmp
sub
mov
movsb
mov
push
push
bound
inc
daa
mov
sarl
fsubrs
xor
push
push
inc
sbb
iret
xor
cmp
xchg
add
push
push
pop
jle
iret
jecxz
dec
jo
push
fcoms
xchg
or
cmp
sub
mov
inc
mov
sub
pop
xchg
and
loop
pop
lea
cmp
push
cwtl
mov
adc
xchg
out
es
push
fs
lcall
pushf
ja
adc
push
xor
fidivl
fs
in
jmp
stos
xlat
arpl
adc
adc
cmp
push
out
not
add
aaa
mov
sbb
hlt
mov
adc
mov
das
push
ret
inc
out
mov
clc
sti
add
scas
sti
lea
inc
gs
outsb
pop
inc
mov
inc
sub
mov
add
stos
xchg
push
or
sub
adc
push
pop
sbb
xchg
cld
mov
leave
ret
pop
mov
das
dec
arpl
and
dec
push
dec
fld
popf
clc
ret
xchg
outsl
sub
je
lcall
psrlq
pop
outsl
sahf
mov
mov
repz
xchg
es
mov
les
jge
insb
push
push
adc
adc
imul
adc
inc
dec
jo
sbb
jno
pop
pushf
lret
mov
mov
dec
fisttps
cmp
xchg
and
and
dec
sub
sbb
in
inc
adc
fs
push
jb
pop
adc
cmp
mov
sub
shr
rcrb
and
xorb
add
leave
mov
inc
out
cmpsl
or
mov
dec
xchg
cmp
push
and
inc
xor
and
dec
pop
nop
dec
sub
xchg
les
mov
inc
inc
out
adc
pop
iret
out
inc
in
mov
punpckhdq
inc
insb
fs
sbb
sub
adc
jne
into
in
mov
add
stc
mov
push
rorb
xorb
pop
fcom
xor
aaa
shr
or
out
xchg
ret
adc
sbbb
fadds
push
loop
pop
push
fisubs
scas
popf
test
push
sbb
push
fsubs
mov
js
push
lock
pop
sti
xchg
xchg
or
shll
loopne
ret
movsl
jecxz
ljmp
in
movsb
out
stos
push
jle
dec
dec
decb
pop
movsl
sbb
in
mov
enter
outsl
lahf
mov
sarl
adc
or
sbb
and
mov
hlt
dec
cwtl
mov
movsl
push
aas
jmp
or
sbb
jg
cld
xchg
mov
cli
stos
xor
iret
add
xchg
jmp
inc
ljmp
nop
sub
mov
push
sbb
sbb
add
and
jae
popf
loope
xchg
add
fiadds
test
and
test
xor
push
outsl
scas
jns
adcb
or
xor
repnz
inc
xor
adcb
int3
pop
inc
cli
out
data16
ds
and
cmc
add
nop
ficompl
imul
add
mov
mov
sub
dec
and
ret
popf
ds
fcomi
cmp
xor
andb
mov
lds
sti
jne
fimull
push
xchg
or
out
repnz
sub
jcxz
lcall
popf
sub
ret
fbstp
mov
popa
movsb
inc
in
aam
add
jge
xor
and
mov
bound
inc
jecxz
dec
mov
stos
cmp
push
in
cmpsl
pop
sub
xchg
inc
hlt
xorb
xchg
jbe
leave
cmp
and
mov
dec
test
dec
clc
mov
ss
lcall
jne
inc
aam
add
adc
push
jecxz
cmp
sarb
imul
shll
rclb
pop
cwtd
repnz
mov
jae
jle
arpl
or
dec
aad
stc
mov
ret
les
lock
push
and
pop
pop
mov
ret
shl
das
lds
xchg
or
ficomps
out
push
inc
dec
or
lods
jns
mov
lds
inc
movsb
xor
sbb
cmp
jbe
sbb
sub
test
push
fwait
adc
int
xor
cli
xchg
mov
lret
hlt
inc
push
jnp
dec
clc
xchg
fistpll
pop
add
call
pop
sbb
cmp
popa
mov
icebp
jmp
add
push
dec
cltd
out
jbe
enter
mov
push
xor
or
arpl
scas
cmp
outsb
outsb
cwtl
adc
incl
aam
sub
mov
dec
pop
shr
dec
add
xor
addr16
pusha
jo
inc
xchg
push
pusha
fs
cmp
mov
bound
pop
in
mov
je
add
sub
mov
xchg
dec
push
sbb
sub
sub
ret
ljmp
rolb
xchg
dec
add
iret
js
push
or
mov
inc
imul
dec
mov
mov
mov
pop
push
icebp
mov
xlat
rorb
mov
dec
out
in
fwait
adc
out
les
gs
daa
jecxz
imul
outsl
dec
xchg
or
fdivrl
inc
mov
rolb
imul
lods
call
xor
or
lret
cmp
cmp
mov
mov
inc
inc
test
in
out
outsl
dec
mov
jecxz
sbbb
pop
fimull
inc
jl
rolb
mov
repz
pushf
lret
inc
out
test
scas
sub
gs
dec
clc
xor
fdivrl
and
xchg
push
es
stc
iret
dec
mov
cmp
lods
mov
jge
xor
adc
and
and
lock
icebp
push
cmp
cld
inc
popa
or
nop
xor
out
ret
stos
ds
mov
or
mov
jmp
rcr
sti
sub
adc
hlt
push
mov
movsl
aam
das
lretw
or
push
push
imulb
bnd
push
lahf
stc
xor
js
mov
into
adc
cmp
pop
rorb
adcl
mov
fcoml
push
mov
and
mov
cltd
add
xor
fisttpl
sbb
rorb
aam
je
fimuls
xor
sbb
sbb
or
imul
lret
mov
shrb
pop
cwtl
add
sub
sub
xchg
sbb
dec
push
mov
mov
and
out
pop
dec
mov
ret
and
popa
jno
inc
inc
stos
rorl
mov
out
add
mov
xor
sub
mov
insb
leave
cmc
pop
in
xchg
aam
out
movsl
add
loop
sub
ss
xlat
icebp
aad
imul
cmp
imul
jge
mov
movsb
cli
push
push
cmp
ficoms
and
add
inc
add
stos
out
mov
icebp
sub
ret
jl
adc
jns
cmpsl
pop
adc
inc
stc
or
lret
aam
xor
sbb
pop
lret
mov
das
das
lret
and
xchg
sub
js
push
dec
ja
and
xchg
test
gs
repnz
pop
lds
sbb
xchg
daa
fmuls
cld
and
cmpsl
mov
mov
pop
and
jl
movsl
call
jnp
mov
insb
iret
int
xchg
jecxz
movsb
lock
arpl
pop
lahf
cmp
das
sub
xchg
movsb
bound
mov
jg
xor
lods
mov
out
jo
jno
xchg
loope
dec
outsl
lret
addb
cli
pop
icebp
jb
fisubrs
mov
in
daa
outsb
mov
enter
mov
pop
arpl
push
popa
and
xchg
jno
cwtl
sarl
jbe
leave
xchg
sub
dec
dec
pop
mov
ret
mov
rclb
jno
jle
stos
mov
pop
loop
fcmovnb
jae
fbld
outsb
cmp
add
adc
pop
jbe
pop
sbb
mov
pop
dec
imul
add
stos
push
jg
lea
pop
add
sub
sbb
add
das
xchg
and
clc
pop
dec
sub
aam
dec
dec
jae
fdivrl
add
aas
jle
daa
inc
dec
xor
jae
jl
loop
xor
pop
push
xor
std
and
xchg
mov
pop
push
lods
loopne
mov
sub
aaa
xchg
push
mov
mov
outsb
arpl
js
out
jnp
call
mov
jae
jbe
jge
mov
test
movsb
rcr
stos
in
test
stos
and
pop
push
push
xlat
or
xor
dec
push
hlt
cs
push
dec
sbb
cwtl
insb
test
pop
aad
jne
adc
cmovnp
stos
repnz
movsb
or
jo
push
nop
jnp
mov
pop
shlb
pop
stos
and
test
addr16
pop
fidivs
xchg
lock
aaa
outsl
xchg
mov
dec
add
clc
xor
and
stos
neg
push
or
das
push
aad
adc
xchg
daa
inc
out
decb
mov
ljmp
inc
sbb
cld
pop
xor
iret
xchg
mov
xchg
or
add
push
and
divb
add
lods
orb
test
je
push
subb
in
sti
xor
and
jl
movsl
dec
adc
jo
xchg
arpl
mov
std
cwtl
shrb
cmp
cmpsb
jbe
xchg
and
nop
ret
jge
jno
xchg
push
fcoml
sbb
sub
xchg
mov
adc
jmp
subb
pop
popl
jae
int3
stos
shlb
stos
loopne
fnsave
scas
jmp
push
adc
cld
mov
fs
xor
push
imul
sbb
iret
sub
xor
pop
push
xchg
lea
stos
scas
insb
ficomps
sub
adc
mov
movsl
in
lock
dec
int3
jmp
inc
cltd
popf
aaa
mov
repnz
inc
adc
inc
insl
pop
add
and
jp
loope
or
push
lahf
adc
test
dec
movsbl
pop
shrl
add
loop
xchg
inc
mov
pop
lock
pop
jo
xchg
sub
dec
or
and
shlb
cmp
add
jge
and
and
fiadds
pop
dec
xor
push
loope
shl
rclb
xchg
out
push
mov
jg
mov
cli
lock
dec
data16
fsubl
out
mov
arpl
pusha
mov
popa
mov
test
fstl
cmp
sbb
loop
jmp
cmp
test
cmpsl
fs
test
cmp
sub
cmp
js
mov
dec
jl
ret
pop
mov
push
repz
mov
int3
mov
andb
or
sbb
call
cmp
adc
push
outsb
in
jns
movsb
fcoml
cmp
push
cmp
dec
aam
jp
sbb
lock
lahf
push
jg
mov
xchg
lret
xor
ss
aas
adc
cmc
int3
mov
insb
mov
xor
adc
jp
cmp
cli
add
or
sbb
cmp
lock
in
mov
test
cmc
clc
in
pushf
rorb
sti
or
jne
imul
pop
pop
push
pop
test
lods
sub
imul
loope
ljmp
adc
add
mov
popf
call
xchg
or
xchg
faddl
orl
push
shll
std
mov
pop
out
idiv
add
mov
enter
fwait
or
jl
scas
faddl
sbb
mov
cmc
sbb
add
cmp
fmull
fs
inc
mov
ret
shll
push
out
dec
ret
leave
cwtl
dec
jae
mov
jge
stos
jmp
out
rcrb
push
sbb
int3
inc
add
xchg
and
inc
and
into
cmp
mov
jno
push
mov
push
shll
dec
in
mov
mov
fxam
jb
and
out
sub
aad
insb
sbb
sbb
imull
dec
imul
daa
push
pop
xchg
in
mov
pop
fldln2
pop
bound
into
jnp
mov
or
lods
ds
sbb
inc
sahf
cmp
ficoml
push
jae
rclb
stos
jle
jae
jl
int
mov
or
push
scas
adc
or
lea
aaa
lock
dec
adc
lods
xlat
and
mov
push
outsb
mov
and
repnz
imul
ret
lock
aaa
nop
movaps
inc
fsub
mov
popf
stos
sahf
xchg
sbb
pop
jmp
outsl
adc
jns
lret
bound
lds
out
mov
sti
jo
jl
sbb
xor
aaa
int
aaa
hlt
adc
jne
leave
xchg
lods
inc
icebp
mov
sti
repz
jns
jo
push
cmp
into
aaa
adcl
add
xchg
in
mov
sub
mov
push
divb
aaa
ret
arpl
pop
fistl
dec
pop
sub
enter
jns
outsb
bound
popf
ja
into
lea
push
mov
adc
inc
jg
pop
push
mov
aad
fsts
mov
pop
jne
mov
out
lods
jo
lods
leave
cltd
mov
push
xor
ret
gs
dec
and
xchg
dec
data16
dec
jle
call
ss
sti
std
lret
nop
ja
sbb
jbe
fcompl
jb
sub
pop
jns
push
xchg
nop
aas
pop
lcall
aad
ja
sbb
in
cmc
xor
inc
imul
rcrl
add
and
lret
xchg
adc
add
imul
or
mov
mov
inc
orl
cmp
cltd
sbb
inc
mov
lret
inc
sahf
inc
xchg
push
inc
sub
adcl
loope
test
or
lods
loopne
xchg
mov
mov
frstor
std
pop
pop
mov
sub
push
aam
or
andl
add
mov
push
jnp
ljmp
pop
xor
fxtract
mov
cmp
xchg
xor
out
jno
jp
jecxz
lods
adc
ss
mov
or
pop
lock
mov
adc
enter
dec
sub
lcall
inc
call
pop
scas
adc
push
icebp
inc
pop
or
daa
dec
test
sub
mov
test
aas
lahf
idivb
mov
pop
sbb
inc
cmp
pop
inc
lea
xchg
dec
clc
fisubrs
inc
adc
pop
fcompl
lea
jo
nop
and
jmp
cli
mov
dec
sbb
roll
test
push
xor
or
sub
sti
xchg
jmp
cli
xorl
fsubp
add
jmp
ja
out
and
jno
jecxz
sbb
clc
movsl
rclb
or
psubw
scas
std
stos
jbe
jbe
stc
jns
stos
push
dec
mov
xchg
mov
push
jae
ja
jne
pop
adc
hlt
pop
add
imul
xchg
in
test
sarb
sbb
fcom
aam
imul
jecxz
scas
lods
inc
pop
or
movsb
cmpsl
mov
pop
and
insl
test
mov
inc
int3
and
jge
jae
movsl
dec
push
add
inc
je
je
pop
imul
lods
outsb
fsubrl
in
jae
fistl
pop
pop
pop
jmp
ficoms
pop
mov
addr16
mov
scas
les
test
test
cmovl
dec
jne
or
mov
fsubl
adc
jo
mov
push
push
mov
cmp
popa
ljmp
addr16
mov
push
inc
aam
ret
and
and
adc
lock
movsb
and
fisubrl
loop
sub
bound
lcall
xlat
lods
dec
mov
out
pop
cltd
gs
pop
das
mov
arpl
fmuls
scas
xchg
outsb
js
popf
xchg
movsb
add
pminub
push
push
mov
ret
test
dec
xchg
or
mov
out
xor
stos
add
out
ljmp
hlt
js
xor
push
imul
scas
sbb
sbb
loope
aas
inc
rcrb
xchg
std
mov
nop
push
out
gs
out
inc
scas
cs
sub
mov
aas
les
sbb
movsb
rcl
jge
aad
imul
shrb
or
aam
cmp
rcll
push
mov
ja
mov
cmp
insl
insb
daa
movsl
inc
cmc
add
fdivrp
mov
subb
les
lret
ja
lret
fmull
mov
or
xchg
push
pusha
hlt
or
aaa
into
aam
leave
sbb
popf
test
lods
dec
je
fs
shll
pushf
jns
movsb
mov
sub
pusha
loopne
jp
pop
dec
dec
cmpsb
adc
cmp
shlb
int
and
mov
dec
inc
sub
aaa
call
sti
in
dec
aas
jns
ficomps
pushf
jg
iret
into
das
lret
mov
sbb
cltd
or
xchg
lods
mov
jb
inc
sub
inc
inc
push
or
or
mov
sub
push
and
pop
mov
jbe
pavgb
mov
lahf
imul
sbb
push
or
idivb
jecxz
fwait
mov
push
mov
jmp
out
or
incl
aad
push
cmp
mov
or
xor
push
xor
test
push
and
idiv
cld
notb
stos
inc
sbb
jae
lahf
stos
dec
inc
mov
ret
cltd
push
cmp
push
add
rclb
iret
cmc
dec
das
loop
mov
xor
pop
test
jecxz
mov
pop
pop
loop
stos
xchg
inc
sbb
jecxz
popa
cli
mov
lods
push
mov
xchg
jg,pn
inc
scas
stos
inc
test
sbb
mov
lods
adc
push
scas
lahf
fldcw
add
inc
or
mov
divl
aad
cltd
rolb
sub
dec
mov
sub
aam
xor
xchg
mov
xchg
push
adc
lods
lock
addl
inc
ja
fdivrl
pop
les
repnz
pop
repz
test
mov
lods
test
lds
popa
lcall
xchg
jb
imul
xchg
imul
adc
mov
cli
ljmp
jl
dec
sbb
les
repz
inc
int3
repz
cmpl
pop
inc
sbb
xor
sub
scas
mov
mov
cmpsl
xchg
fisttpll
lahf
mov
jecxz
push
in
jle
stos
in
sub
frstor
cmp
jns
outsb
rcll
pusha
cmc
dec
aad
pop
or
movsl
push
outsb
arpl
mov
stos
xchg
pop
dec
jg
fmulp
add
or
aas
scas
testb
and
js
sub
out
int
insl
jne
scas
lret
jge
add
cmp
leave
out
mov
push
lret
adc
mov
xchg
mov
dec
pop
notb
filds
ja
jbe
cmp
sub
and
leave
cld
jecxz
aas
cld
int
insb
jnp
dec
ja
pop
jl
sub
and
xorl
mov
dec
pop
or
pop
inc
sbb
pop
jnp
push
mov
jo
mov
andb
pop
inc
out
iret
or
xchg
test
xor
mov
ljmp
sub
pop
mov
cld
mov
inc
ss
xchg
push
fimuls
push
out
pushf
scas
sbb
jno
sub
pop
sbb
push
mov
clc
jg
add
ljmp
mov
into
or
dec
xor
mov
xor
or
dec
cmp
mov
imul
lds
dec
repnz
mov
int
pop
mov
outsb
into
pop
adc
sti
push
dec
xchg
mov
fdivs
pop
inc
mov
in
sbb
scas
gs
fiadds
test
sbb
roll
mov
andb
cmp
mov
mov
enter
sbb
iret
aam
into
roll
aam
insb
fwait
dec
decl
movsb
cmpsb
jo
add
adcb
mov
xchg
mull
insl
fnstsw
xchg
push
mov
jnp
dec
xchg
iret
ss
shrb
cmpsl
adc
fdivr
jne
inc
add
xor
add
ljmp
inc
les
das
lcall
add
addr16
pop
clc
dec
repz
adc
adc
xchg
jge
sub
add
mov
outsb
out
or
or
pop
int
xor
ret
cltd
mov
mov
adc
lret
imul
and
rcrl
outsb
adc
test
mov
mov
add
dec
inc
cmc
lret
inc
push
popa
lcall
dec
orb
test
mov
or
fmuls
aas
aam
and
icebp
out
and
adc
cmp
insb
gs
incl
dec
sub
mov
mov
mov
lcall
out
sbb
or
loop
mov
add
daa
jp
and
sbb
ret
rcr
pop
jle
adc
xlat
inc
shrl
xor
dec
mov
pop
fs
into
pop
cmp
push
mov
sub
mov
loopne
inc
aam
mov
add
daa
adc
xchg
xchg
add
insl
pop
xchg
inc
xchg
cmp
jb
dec
sarl
inc
sbb
and
cmp
xchg
inc
xor
sub
sub
loopne
mov
push
out
mov
fs
fisttpll
jns
aam
imulb
sbb
shlb
imulb
into
xchg
push
mov
imul
les
or
clc
movsb
nop
ja
hlt
bnd
hlt
jmp
fucomp
adc
data16
rcrb
loop
negb
std
and
pop
sub
xor
push
jnp
lea
lret
push
nop
call
es
push
adc
cmp
adc
add
mull
sbb
cmc
xlat
aam
cmp
ljmp
divb
fsubrl
sbb
cmc
lcall
lock
js
jle
das
adc
mov
dec
or
stos
cmp
cli
mov
mov
adc
xchg
or
mov
out
mov
ljmp
fwait
repnz
push
adc
nop
push
adc
pusha
or
xchg
xchg
loope
sub
inc
loope
mov
out
mov
pop
rcrb
cmpsl
push
sub
shll
xchg
pop
inc
loop
mov
arpl
mov
nop
cmp
mov
mov
inc
and
notb
ss
rcrb
jecxz
sahf
sub
sahf
ret
das
push
and
sub
fcoml
hlt
xchg
call
xlat
pop
fadd
insb
je
hlt
sahf
test
leave
inc
test
mov
adc
lcall
and
rorb
loop
pop
in
cmpsb
shrl
sbb
cmp
jno
xor
lahf
pushf
das
repz
xor
jae
fiaddl
sub
std
sub
cli
out
fbstp
mov
adc
hlt
mov
inc
pop
sub
push
sbb
inc
ss
cmpsb
inc
pop
cli
mov
jnp
jno
dec
and
xor
mov
jp
mov
js
in
das
btl
imul
jl
loopne
or
cmp
sbb
hlt
jno
sahf
cmp
mov
jae
dec
loope
arpl
enter
push
inc
in
aam
mov
outsl
sub
imul
test
mov
es
jne
sub
mov
lods
push
popf
daa
js
inc
jne
xor
xchg
pop
cld
adc
push
aaa
bound
sub
cmp
or
shrl
or
push
in
sbb
lahf
loop
fimull
push
jge
loope
cmp
out
daa
cli
stos
ljmp
inc
jbe
dec
mov
xchg
mov
mov
rcrl
mov
psubsb
scas
xchg
test
jo
mov
icebp
repnz
sub
mov
sbb
filds
das
jle
sbb
jns
push
and
scas
scas
xchg
mov
in
stc
fldl
fisttpl
lods
nop
sbb
and
sub
in
ret
or
or
sbb
fs
jno
inc
xor
mov
mov
popl
xchg
in
cltd
es
mov
es
lret
inc
dec
xchg
dec
dec
pop
dec
jp
mov
aam
push
in
aam
dec
mov
inc
js
ret
add
mov
lods
je
outsl
sub
cmp
sub
stos
repz
dec
inc
xor
shll
loopne
lahf
stc
dec
mov
jmp
ds
loopne
in
adc
popa
jecxz
shlb
inc
push
jmp
push
jmp
dec
sbb
outsb
repz
call
cli
xchg
xchg
push
insl
xchg
popa
lret
cmpsb
dec
outsb
sbb
xchg
pop
fdivr
push
mov
cltd
les
push
int3
push
pop
decb
imul
sbb
sbb
cmpl
add
dec
aam
mov
dec
scas
movsl
or
je
jp
mov
arpl
pop
test
mov
jle
in
mov
jg
imulb
loope
out
jae
lods
mov
dec
inc
bound
int
push
scas
repz
ret
or
cmp
xlat
or
mov
sub
or
popf
xor
sbb
stos
nop
dec
xchg
adc
lahf
out
xchg
jae
mov
add
xchg
and
mov
clc
fsubr
test
or
scas
sub
out
lahf
ss
xchg
pop
push
jae
push
icebp
mov
inc
fldenv
mov
aad
cmp
fcomp
xor
arpl
lods
and
push
sbb
adc
push
cmp
in
test
xorb
arpl
xlat
das
mov
outsl
movsb
jecxz
dec
cltd
aam
or
loop
jno
cmovb
sub
dec
jnp
adc
dec
sbb
std
mov
outsl
and
cltd
pop
jb
or
jge
ret
xor
mov
jl
aad
or
rcll
shll
xchg
jecxz
adc
mov
fwait
sub
shlb
mov
jb
jle
add
enter
jge
pop
inc
pop
xor
lret
insb
add
mov
mov
ret
push
repz
cmp
inc
mov
scas
jnp
mov
xchg
cmp
add
jb
repz
dec
pop
jo
and
into
jg
ficoms
jo
or
and
dec
dec
test
add
fwait
xchg
pop
push
std
lock
xchg
or
decb
je
or
xchg
cmp
sub
xorl
shll
mov
out
jne
jae
shl
in
out
lods
stos
shrb
es
mov
pop
loope
adc
and
in
adc
push
test
adc
mov
or
fisttpl
orb
sahf
jmp
jb
sub
fisubl
dec
les
test
repz
cs
ret
xor
jnp
sbbl
dec
outsb
js
out
xor
dec
pop
cmp
mov
popa
addr16
fisubl
fisubrl
cmp
push
cmpb
and
aas
loope
inc
repz
push
cmp
fwait
push
inc
xchg
xchg
lods
dec
push
cmp
jmp
and
in
in
loop
push
dec
js
inc
push
push
orb
sarb
out
sub
sub
adcb
xchg
dec
xchg
or
lret
clc
cmpsl
jp
daa
push
mov
rclb
stos
dec
fsubrs
sbbl
aaa
fstpl
iret
and
xchg
leave
push
ja
scas
int
js
sbb
xchg
push
mov
outsb
dec
sub
and
sub
popa
fs
in
frstor
push
lret
iret
cmc
pushf
mov
mov
lret
testb
or
lcall
lds
jl
lods
divl
and
push
arpl
mov
cmc
cwtl
push
fdivs
mov
mov
push
fldcw
lcall
xor
push
xchg
fwait
mov
xchg
fisubs
or
xor
sbb
fstpl
mov
lret
loope
ja
lods
jp
fldenv
leave
or
xchg
push
pop
and
idivl
mov
jo
sar
popa
push
or
cmpsl
les
icebp
and
xchg
dec
or
xlat
inc
test
add
mov
pop
or
pop
dec
es
mov
cwtl
lods
je
or
push
loopne
cmp
clc
repz
das
jle
cmp
pushf
loop
repz
and
push
cmp
push
mov
dec
mov
mov
cli
and
jne
pop
fdivrs
enter
mov
loop
cmp
jb
or
xchg
iret
lcall
repnz
jnp
testl
push
xchg
movsb
jo
sbb
sar
adc
fld
arpl
xor
or
jge
subb
xlat
imul
aas
push
push
mov
dec
xchg
in
sbb
iret
fldt
ss
push
jne
andl
xchg
jg
stos
imul
push
shlb
mov
add
xor
pop
jnp
xchg
push
inc
dec
fsts
and
test
cmp
je
jbe
aas
test
and
sbb
push
adc
dec
jns
jmp
jbe
inc
out
lret
mov
and
xchg
pusha
ja
mov
mov
in
pop
inc
les
mov
dec
inc
mov
jo
push
mov
dec
sub
jb
fcoml
mov
divb
cwtl
test
mov
adc
push
jno
and
aam
push
mov
cs
ror
xor
insb
sub
nop
sub
cld
mov
push
mov
sbbb
stos
imul
sub
loopne,pn
repz
je
addr16
shll
cmpsl
add
mov
loop
sub
push
and
sbbb
jmp
xor
xchg
push
dec
jle
fwait
nop
int
dec
pop
and
push
xchg
daa
in
dec
mov
xchg
out
mov
mov
pop
xchg
call
aad
cli
push
sub
loopne
in
sub
fldenv
rclb
fsubs
loopne
xlat
out
jnp
mov
push
dec
out
xor
imul
insb
xor
popf
ds
or
mov
xchg
clc
test
enter
jecxz
imul
or
lret
out
addr16
test
popa
sbb
push
jo
nop
popa
int
add
in
jnp
pop
mov
or
fmulp
arpl
sub
mov
fdiv
mov
das
sbb
lcall
sub
repz
mov
xchg
faddp
push
jge
loop
pop
dec
push
loopne
nop
push
mov
lcall
sahf
adc
jg
xor
xor
clc
sub
or
cwtl
or
out
jo
xor
mov
out
xchg
pop
push
adc
xchg
xchg
mov
jmp
fbstp
xlat
mov
mov
dec
pushf
and
inc
inc
fdivrl
or
jge
lret
lret
xor
adc
add
outsl
repnz
je
test
cmp
scas
mov
xchg
movsb
dec
mov
data16
ljmp
call
in
repz
jne
out
into
icebp
fildl
or
lods
or
movsl
push
stc
mov
mov
add
test
push
cld
xchg
js
repnz
out
mov
movsb
fadds
push
mov
xchg
test
add
sub
ljmp
in
insl
stc
rcrb
add
fs
clc
js
pop
sbb
fwait
hlt
sahf
shll
lret
iret
divl
jae
and
xchg
lods
pop
enter
aam
jp
mov
xor
mov
iret
xlat
shrb
jne
or
jbe
out
fs
mov
test
sahf
xchg
sarb
add
xchg
movsl
mov
xor
scas
push
adc
roll
cltd
dec
out
pop
shl
mov
mov
mov
add
push
scas
sbbl
sti
subl
dec
jo
mov
add
lock
fiaddl
mov
sbb
adc
pop
mov
add
jle
js
sub
sbb
jp
shlb
fmull
xor
call
in
loop
cmp
sti
sbb
cmp
test
mov
rcll
dec
cli
pop
and
cs
and
xor
cmp
cltd
aam
popa
cmp
ficoms
daa
fstl
adcl
out
xchg
dec
imull
push
xor
lods
scas
aaa
lock
pop
jnp
js
mov
test
inc
pop
mov
push
addb
leave
jnp
fmuls
out
dec
cmpsb
cmp
sbb
xor
mov
test
adc
xchg
adc
and
sbb
aam
dec
cmc
dec
mov
loopne
inc
jle
sbb
add
mov
sub
mov
enter
lds
mov
cmc
mov
xchg
sub
push
mov
inc
pop
in
stc
pop
iret
jns
bound
adc
mov
cmc
jbe
mov
push
dec
xor
jne
fildll
jmp
popa
jo
inc
sub
push
ss
in
out
pop
inc
adc
js
sub
lea
test
and
or
cmp
inc
fisubrl
push
xchg
adc
jnp
iret
or
scas
fnstsw
and
inc
jbe
lret
pop
cld
or
test
ret
popa
sbb
insl
call
je
out
dec
divl
roll
repz
ss
scas
xor
sbb
mov
jle
inc
test
decb
and
fistps
sbbb
enter
out
xchg
adc
out
or
mov
test
test
stos
fwait
xchg
or
push
ja
inc
cmp
int
mov
ja
pop
xchg
jo
sbb
mov
imul
mov
pushf
xchg
or
mov
scas
ret
xlat
scas
add
push
fildll
push
mov
and
cmpsb
popf
add
loop
cmp
pop
dec
sarb
test
or
fildl
int
rcr
ret
popa
push
pop
mov
dec
xor
cmp
xchg
and
mov
xor
jnp,pn
aad
les
pop
mov
add
cmp
in
rcll
push
mov
inc
mov
mov
fistpll
mov
loop
les
ret
lock
lahf
xchg
aaa
pop
jne
mov
movsl
js
jo
xchg
bound
daa
xrelease
daa
sahf
and
call
sarb
push
mov
sbb
mov
mov
lret
sub
movl
popf
inc
cmp
int3
xor
shrl
out
jecxz
test
lret
dec
lret
fwait
aaa
mov
sub
aad
dec
mull
sub
ljmp
fstl
or
adc
sub
sub
lods
sbb
push
sbb
sub
add
subl
pusha
dec
ljmp
mov
pop
adc
cmp
adc
jle
pop
aas
inc
push
jg,pn
mov
pop
test
pop
repnz
jbe
pushf
in
lea
jge
sbb
jp
sbb
loope
mov
rorb
push
adc
popl
out
xor
push
addl
stos
push
add
sub
sbb
jno
test
push
orps
or
xchg
lods
pop
movsl
inc
cmpsl
out
in
test
mov
xchg
sbb
pushf
pop
sahf
lcall
dec
aas
cld
push
xchg
and
xchg
enter
lods
test
adc
mov
dec
lods
sub
add
or
popf
sbb
adc
mov
mov
hlt
dec
pop
mov
xor
lods
movsb
lods
mov
jmp
pop
popf
pop
in
xchg
ss
or
cmc
ljmp
jle
xchg
cs
insb
loope
mov
loope
repnz
aad
in
lds
call
lret
jbe
xor
pop
mov
ds
cs
and
iret
or
ret
add
sub
mov
lret
sbb
outsl
push
notl
jmp
jmp
insb
adc
pop
push
jb
sub
mov
icebp
add
sahf
sahf
mov
repnz
stos
mov
ljmp
push
xor
add
call
clc
xor
adc
pop
adc
xor
jns
mov
sub
pop
scas
fmul
sbb
push
push
popf
outsb
xor
inc
push
clc
add
dec
push
and
pop
cwtl
cli
or
lret
pop
mov
xchg
jnp
jg
sbb
and
jp
mov
lahf
push
jo
mov
stos
sub
mov
mov
movsb
jle
ja
cmpsb
ljmp
push
mov
fstpl
shlb
sub
fdivrl
xchg
add
jmp
xchg
adc
sqrtps
xchg
push
sub
cltd
test
imul
mov
addr16
dec
into
xchg
sbb
fnstcw
adc
repz
adc
std
jno
jle
stos
in
cmp
xchg
inc
addr16
addr16
xor
mov
cmp
loopne
imul
loopne
cmp
jge
push
imul
negl
and
push
pop
aaa
and
rclb
idivl
cwtl
rol
adc
and
cs
movsl
mov
mov
cmpsl
mov
and
sti
inc
mov
lods
outsb
mov
xor
call
mov
and
rcr
out
jecxz
sti
fsubrl
outsl
cmp
jb
shr
xor
jmp
push
push
in
imul
push
stos
xlat
push
mov
sub
cld
ret
xlat
mov
out
inc
test
mov
cmp
xchg
out
out
cmp
inc
aad
into
mov
pop
nop
idiv
outsb
mov
xchg
sbb
sub
push
push
ljmp
mov
leave
or
and
imul
cmp
cld
mov
jmp
xchg
pop
bound
mov
jmp
ficoml
fildll
cmc
adc
jae
lret
test
mov
sub
pop
push
pushl
in
js
push
inc
xchg
xchg
mov
in
push
cmpb
xchg
lret
fidivrl
dec
jmp
xchg
adc
and
stos
scas
xor
pop
mov
cmp
jne
loopne
stos
jg
sbb
push
aaa
shlb
cmp
in
xlat
and
out
push
rorl
add
out
cmc
xchg
add
daa
pop
sub
and
sti
inc
fcomip
sbb
das
test
pushf
test
nop
das
mov
push
clc
xchg
push
dec
inc
jl
jnp
mov
dec
mov
repnz
je
push
les
jle
test
sahf
lods
ljmp
mov
das
arpl
sti
cs
push
out
dec
int3
cmc
pop
xchg
fnstenv
es
sbb
imul
icebp
push
xor
sahf
jge
xor
mov
or
or
xlat
and
adc
pop
pop
mov
sbb
dec
insl
stos
mov
into
jmp
ds
in
sub
and
push
sti
addr16
jae
incb
outsl
mov
pop
aam
push
lds
fcomps
mov
ficomps
addr16
xor
cmp
push
inc
pop
xor
int
dec
sub
pop
mov
outsb
push
adc
jmp
into
jb
cli
es
popf
jne
sbb
hlt
cbtw
xchg
out
xchg
cs
sti
mov
ror
xchg
xchg
mov
pop
movsl
and
xchg
jmp
into
mov
imul
sbb
push
cmp
sti
pusha
jge
cltd
sub
int3
icebp
sub
nop
stos
xchg
arpl
clc
cmpsb
rcr
adcl
sub
pop
ljmp
das
sarb
xchg
sub
imul
cli
pop
xor
mov
dec
cli
lret
mov
push
loopne
js
imul
insb
mov
jns
pop
xchg
mov
xorl
lret
ret
push
shld
loop
pop
mov
movsl
pop
pop
sbb
rcrb
shl
shl
sbb
das
jp
and
fmull
add
fs
cmova
arpl
js
movsl
imul
xor
rcrb
add
cmpsl
lds
les
ja
xor
cmc
xchg
inc
inc
jmp
call
clc
mov
inc
inc
cmp
xor
mov
mov
ror
sahf
jbe
std
fsubr
cmp
stos
fnstcw
dec
stos
sbb
pop
and
pop
dec
and
xor
jne
fldt
cmp
leave
pop
sbb
fwait
mov
xchg
in
mov
jbe
mov
test
xor
cmc
insl
dec
loop
imul
push
mov
mov
stc
pop
jns
mov
xchg
mov
xor
popf
mov
dec
and
dec
sarb
clc
and
fbld
dec
addl
mov
dec
cmp
adc
xor
adc
and
clc
mov
jmp
int3
or
xor
push
push
inc
pop
ss
mov
nop
sbb
mov
mov
mov
or
scas
jnp
sub
dec
fs
pop
bound
pop
hlt
sbb
mov
fistpll
xchg
cli
or
add
pop
jge
jg
dec
sbbl
jo
inc
xor
vmwrite
lock
mov
sbb
mov
pop
enter
mull
jb
mov
or
dec
loop
xor
xchg
dec
pop
mov
decb
lods
aaa
xchg
or
int
sub
jge
jno
push
in
push
or
adc
call
clc
xchg
sub
jno
rol
pop
sub
fucom
imul
loop
in
cmp
outsb
jnp
rcrb
jecxz
mov
jle
xor
mov
jns
out
add
out
stos
insl
add
insl
test
lock
push
les
jg
sbb
pop
or
lds
cld
iret
xor
icebp
push
dec
lods
push
xor
push
sbb
lods
inc
test
push
imul
adcl
lcall
test
cmp
rol
mov
jb
ret
inc
inc
cltd
stc
and
or
imul
sub
dec
ja
aas
pop
add
dec
xor
inc
sub
push
push
stos
mov
adc
dec
xchg
mov
out
pop
aam
or
push
cmp
jg
cmpsl
fxtract
out
fldenv
cmp
pop
data16
in
aad
push
jae
xchg
call
adcl
adc
mov
push
stos
cltd
iret
rorb
pop
jecxz
pop
dec
jl
xor
shll
mov
aas
rclb
mov
and
push
or
imul
cmp
mov
adc
inc
insl
add
xor
into
imul
jg
popa
cmp
mov
mov
sbb
rorb
notl
and
ror
dec
mov
subb
jno
mov
loop
jbe
fmull
jno
fstps
sbb
insl
sbb
add
mov
add
mov
dec
and
push
jmp
popa
fnstenv
faddl
mov
xor
sub
stc
mov
sub
clc
fsubrp
xchg
mov
xchg
out
jg
das
int3
mov
and
mov
add
push
adc
sbb
xor
cli
sbb
sub
and
adc
loope
cmp
stc
mov
dec
sarl
push
cltd
jb
sbb
sbb
xor
dec
loop
and
roll
rcr
insb
lcall
ljmp
mov
int3
outsl
icebp
jecxz,pt
lods
add
cmpsb
fisttpl
out
sub
shll
mov
cmp
jns
dec
add
call
push
sub
insb
dec
adc
lock
in
mov
test
pop
push
aas
xor
clc
fneni(8087
aad
xor
frstor
xor
jne
inc
push
shll
and
jl
frstor
and
pop
test
pop
and
push
fs
mov
int
cmp
inc
sub
fildl
ret
xor
xchg
jno
push
inc
aas
and
imul
pop
fnsave
repnz
xor
jbe
sbb
push
subl
loope
arpl
add
ds
pop
mov
jmp
addr16
clc
popf
sbbl
mov
je
xchg
xor
dec
call
repz
rol
jne
adc
xchg
pop
sub
test
pop
xor
sti
push
ljmp
popa
or
add
rclb
pop
repz
add
outsl
not
stos
push
div
ret
pop
lods
inc
mov
subb
fdivr
vandnpd
lds
adc
jp
ds
das
cmp
push
hlt
addb
shrb
rorl
add
in
mov
scas
jg
sbb
leave
fstpl
addb
jns
mov
popa
sub
imul
mov
sbb
cs
cli
std
add
nop
sbb
lock
sbb
loop
cltd
in
mov
pop
frstor
shlb
cs
sub
int
inc
cmp
std
dec
mov
daa
inc
ja
sbb
aam
xchg
lock
mov
and
leave
inc
adc
xchg
add
fsub
outsb
push
jae
cmp
mov
and
das
out
sub
movsl
adc
sbb
aas
cwtl
bound
negl
push
jno
fcompl
jb
add
loopne
push
adc
inc
inc
xchg
xor
adc
dec
outsb
imulb
sbb
nop
and
push
insl
ljmp
and
pop
andb
inc
aaa
aas
lcall
add
enter
nop
sti
adc
xchg
sbb
dec
loopne
nop
in
lock
inc
js
cmp
jns
mov
adc
sbb
adc
loop
pop
sub
sbb
xlat
test
negl
mov
pop
or
les
xor
int
sti
in
lret
nop
or
les
loop
xchg
sub
or
icebp
cwtl
stos
out
mov
mov
mov
xchg
fsubrs
mov
into
pop
aam
lds
mov
xchg
xor
xchg
sbb
inc
addl
adc
mov
inc
cmpl
xor
icebp
and
pop
and
jne
incl
cmp
jne,pn
cmpsb
movsb
loope
and
lret
std
jge
stos
mov
and
mov
call
jg
data16
adc
js
and
call
push
jbe
push
xchg
add
mov
cmp
add
push
push
mov
test
pop
jbe
ret
roll
js
imulb
test
movsb
dec
jl
cmp
jl
cwtl
mov
mov
mov
add
dec
cmp
or
sbb
fsubrl
sbb
inc
shll
add
mov
inc
arpl
cwtl
adc
and
lock
push
inc
imulb
sarb
aam
in
sbb
mov
stos
enter
xchg
mov
lds
xchg
pusha
into
enter
aam
xchg
add
leave
and
daa
mov
ja
mov
adc
push
jne
cld
in
dec
mov
jne
xlat
nop
repz
jl
ret
xchg
gs
mov
repz
int
jnp
bound
jne
es
btc
out
pop
push
sub
jecxz
stos
fwait
aam
sub
jmp
movsl
jmp
push
push
loopne
jae
orb
jae
test
xor
sub
jecxz
adc
push
lret
and
jns
ret
lods
in
dec
xlat
dec
sar
cmc
or
add
lret
ds
lahf
cmp
punpckhdq
test
cmpsl
xor
daa
rcl
std
mov
or
std
sbb
pop
adcl
scas
inc
in
insb
sahf
sub
dec
in
loope
lcall
loop
mov
insb
dec
push
pop
int
cmc
aaa
std
inc
shrb
adc
call
sub
int
pushf
fisttps
jnp
mov
inc
or
shll
shrl
pop
insl
insb
xchg
rorb
nop
and
and
inc
adc
push
mov
xchg
stos
int3
ds
jecxz
mov
lcall
mov
lcall
popa
rcrb
or
xor
imulb
flds
mov
inc
lods
das
mov
push
out
adcb
mov
push
sub
cmp
test
lret
cmp
jbe
adc
xchg
xor
cmp
scas
mov
addr16
inc
fistps
sbb
loop
add
aaa
js
fbld
jl
and
add
insl
xchg
lret
or
or
cltd
ss
pop
push
xor
dec
mov
mov
out
mov
out
and
cmp
mov
xlat
sub
out
gs
push
inc
out
mov
inc
mov
pop
or
out
or
ss
sbb
pop
sahf
mov
inc
xor
sahf
xor
test
dec
xchg
pop
test
dec
jns
fistpl
or
jnp,pn
dec
ds
in
in
testb
jmp
add
loop
repnz
stos
fcmovnbe
inc
ret
fcompp
clc
test
test
jmp
mov
mov
lcall
out
lock
cs
inc
cmp
lock
mov
fwait
cmc
cwtl
pop
fsubrs
xchg
sbbl
fwait
cmp
xchg
jge
xchg
add
icebp
repnz
sbb
imul
pop
sub
popf
in
cmpsb
fsubrs
xchg
lret
cmp
sarl
mov
ja
into
in
scas
out
stos
cmp
adc
push
cmp
jno
imul
jno
xchg
in
and
jae
ficomps
mov
pop
in
pop
pop
jge
idivb
xor
ficoml
xlat
or
inc
and
lods
inc
cmpsl
fdivl
mov
sbb
xchg
push
ror
outsb
mov
lret
mov
imul
rcll
clc
xlat
sub
sti
push
lahf
mov
incl
dec
lock
rcrb
mov
xor
and
sahf
cmpsb
shll
jge
push
xor
xchg
xchg
stos
iret
inc
xor
cmp
out
mov
cmp
ljmp
dec
dec
dec
pusha
sbb
sbb
push
in
iret
ds
xchg
pop
out
xchg
mov
jno
inc
dec
sahf
daa
adc
mov
test
mov
xchg
enter
xchg
aad
aad
mov
or
not
pop
add
daa
pop
push
loopne
movsb
popf
test
mov
repz
mov
pop
das
push
pop
add
ror
adc
frstor
adcl
ja
test
mov
ret
sbb
xlat
mov
rorb
xchg
sub
jg
push
mov
imul
scas
adc
sbb
pop
ljmp
mov
iret
mov
sub
insb
movsl
movsb
cmc
fidivrl
lea
pop
jnp
data16
cmp
xor
icebp
add
icebp
jb
in
fistpll
xchg
mov
fwait
cs
xlat
pop
dec
sar
and
xchg
jle
cmp
mov
movl
push
int3
push
and
add
mov
bound
xchg
sub
arpl
cs
add
fsqrt
xor
mov
pop
xchg
and
cmp
dec
jbe
cmp
loopne
dec
fistps
icebp
jp
popf
dec
xrelease
fwait
xor
movsb
cli
pop
jp
sub
shl
xchg
and
lahf
fcomps
fwait
cmpsb
push
cmp
call
lock
inc
in
imul
mov
stos
jbe
xor
mov
adc
dec
inc
mov
pop
out
pop
sub
jb
xchg
mov
imul
and
sar
xorl
hlt
adc
scas
cld
pop
fs
roll
test
xchg
movsb
ss
inc
mov
xchg
mov
nop
xchg
in
aam
inc
pop
mov
lahf
les
adc
test
movsl
fwait
dec
rorb
mov
outsb
push
sub
ret
pusha
mov
into
jmp
ret
or
cmp
mov
push
sub
mov
add
jbe
push
cmp
mov
mov
dec
insl
test
sub
pop
dec
xor
cld
loop
xchg
jmp
popf
push
jno
scas
cwtl
sbb
xchg
dec
mov
push
push
rcrb
jo
mov
ja
in
lods
nop
sub
stos
dec
ljmp
xchg
or
mov
jecxz
jmp
inc
push
dec
inc
cmp
out
icebp
ds
xor
sub
jo
add
and
cmpsl
mov
push
xchg
xor
fs
push
xorl
push
adc
ljmp
fcoml
jmp
enter
add
outsl
jnp
sbb
add
xor
xchg
call
and
rcll
push
or
fisubs
or
add
cmpsl
mov
adc
add
shll
and
sbb
leave
mov
push
fnsave
mov
adc
jne
add
mov
or
sbb
push
fstps
jbe
popa
pop
stos
push
outsl
fs
adc
bound
es
scas
and
mov
push
add
movsl
fcomps
xchg
fiaddl
stc
rorb
push
dec
loop
loop
in
mov
js
es
mov
jle
mov
push
xchg
inc
loop
shrl
or
dec
mov
sub
fcomi
add
xchg
daa
inc
sub
xor
lock
js
rol
push
aam
outsl
push
fistpll
outsb
test
mov
push
fsubr
aaa
add
pop
adc
mov
dec
lret
call
sbb
data16
shll
aam
je
and
xor
lret
mov
sbb
clc
dec
dec
clc
push
jle
test
or
mov
mov
dec
or
pop
and
sub
xor
lds
fists
push
fs
cmp
cmp
push
movsb
pop
or
les
pop
pushf
scas
pop
cmp
push
and
mov
das
cmpsl
fcmovne
xchg
xor
mov
subl
cmp
out
outsl
stc
mov
les
out
imul
nop
and
stc
fdivrs
mov
jp
imul
lcall
test
mov
mov
mov
push
imul
lock
or
movsb
outsl
icebp
dec
dec
cmp
cmp
je
mov
sub
mov
mov
mov
mov
jmp
mov
fcmove
shl
cmp
mov
jge
sbb
sahf
push
pop
jecxz
sbbl
out
jb
and
mov
pop
sbb
adc
ljmp
ret
inc
push
lods
stos
jp
loope
pop
push
cli
lods
push
shrl
jo
sub
cmp
jmp
mov
jo
sti
lret
or
sbbb
add
jo
inc
hlt
push
mov
push
dec
popf
xorb
das
dec
shl
roll
mov
mov
sbb
sbb
mov
adc
inc
lds
inc
inc
add
stos
push
push
stos
out
mov
loopne
dec
mov
daa
test
pop
out
imul
or
jl
sub
rolb
in
fcoms
mov
cli
pushf
cmp
xor
leave
mov
dec
adc
mov
inc
mov
fwait
adc
mov
out
mov
xor
xchg
inc
cmovbe
or
jo
ret
test
je
fiadds
stc
out
negl
int3
movsb
or
sub
adc
sarl
xchg
mov
xchg
push
scas
mov
sub
fwait
sub
mov
pushf
sbb
ds
pop
das
dec
les
jl
cwtl
sub
inc
shll
xlat
mov
pusha
fdivs
add
lret
xchg
fistpll
xchg
std
pop
lret
mov
mov
test
test
ja
sbb
call
or
push
fimuls
and
xor
cmp
jg
inc
dec
xor
data16
or
aaa
das
push
in
clc
sbb
mov
negl
sti
cmp
ret
negl
imul
rolb
lret
xor
rcr
pop
stos
fsts
push
dec
rcr
sub
sbb
push
inc
imul
psraw
jecxz
mov
add
stc
jnp
dec
dec
or
pop
arpl
out
adc
fldt
pop
and
jp
dec
push
pop
fldt
mov
mov
mov
xor
add
or
xchg
cltd
int
jmp
sahf
jge
or
push
out
add
shll
sub
cld
mov
dec
mov
clc
dec
jbe
call
test
lret
mov
mov
mov
ret
ljmp
mov
std
push
push
cmp
cmp
movsb
call
lahf
dec
rcrb
sahf
cmp
into
lea
adc
enter
cltd
mov
mov
shll
xor
mov
push
and
dec
jae
inc
xchg
sbbb
sub
lods
aam
lock
xchg
mov
mov
cli
je
call
fwait
pop
das
imul
rorb
mov
popa
lahf
icebp
iret
mov
push
push
or
and
imul
int3
mov
mov
ret
test
xchg
xchg
lods
cmc
push
adc
fwait
mov
sub
daa
pop
outsb
mov
mov
adc
cmp
stos
push
sub
jle
sbb
dec
xor
outsl
call
and
mov
shlb
dec
sbb
add
das
test
ljmp
in
xchg
int3
mov
inc
out
mov
pop
lods
xor
inc
movsb
data16
stos
lahf
mov
es
notl
xor
shrb
scas
mov
pop
movsb
jbe
insb
je
loope
cwtl
xchg
insl
mov
pop
xor
cs
test
imul
cmp
add
fldl
cmp
jb
push
dec
jle
pop
inc
pop
test
ja
in
jnp
mov
mov
push
scas
adc
adc
scas
loop
lds
lods
mov
negl
test
es
popa
lea
add
bound
fcoms
nop
push
or
pop
bswap
in
js
lods
andl
dec
xor
fiadds
dec
rcrl
push
push
pop
aaa
lahf
das
cld
out
lret
mov
shlb
fiaddl
in
xor
bound
lods
mov
xor
dec
imul
push
lcall
add
xor
jo
loope
sub
aas
jmp
es
push
popf
inc
sub
loope
insl
mov
popa
jb
sub
push
data16
cmp
mov
push
jmp
adc
sbb
adc
sbb
test
shlb
jle
sti
adc
and
mov
adc
jbe
pop
mov
repnz
and
adc
fnstsw
dec
shlb
aam
cmc
rep
icebp
cs
pop
enter
je
xor
lods
das
rorb
ja
sub
repz
ss
mov
xchg
in
in
pop
xlat
rcrl
gs
mov
jb
pop
mov
sbb
inc
add
into
cs
decl
xor
mov
mov
sarb
sub
xor
cwtl
iret
fcoml
xchg
aaa
sahf
add
movsl
shlb
jmp
push
out
mov
xor
mov
add
ja
mov
dec
mov
cli
frstor
sbb
xchg
je
stc
ret
cmp
push
add
enter
repz
es
out
rclb
xchg
out
inc
je
add
aaa
mov
xlat
mov
ja
test
inc
lea
jnp
sahf
cmp
bound
rorl
imull
rcrl
sbb
outsb
xor
loop
rcr
xor
imul
enter
and
les
mov
sub
dec
cwtl
sbb
mov
stc
jg
cmp
jle
popa
sbb
fcompl
fwait
call
in
stos
cmpsb
and
and
mov
into
rcrb
sub
out
rclb
adc
int3
in
xchg
sbb
std
xchg
std
mov
push
cmp
fcoml
fbld
push
xchg
jnp
add
jae
fwait
call
fildl
subl
aas
insb
fmull
idivl
jne
fisttps
mov
lods
push
xor
mov
add
fcomp
shlb
pop
sbbb
pop
sub
sub
mov
lret
pop
orb
jecxz
xchg
iret
in
sbb
xchg
pusha
addr16
jecxz
add
cmpsb
adc
sub
loope
cmp
pop
scas
sbb
push
addr16
repz
jbe
cmp
push
sbb
or
js
mov
or
sub
nop
xor
push
adc
and
inc
mov
addr16
daa
push
jmp
xchg
outsb
andl
aas
popf
pushl
inc
in
push
add
fmulp
loope
rcl
mov
push
mov
jp
scas
ss
movsb
stos
in
mov
daa
xlat
sarl
xlat
pop
shll
out
push
fisubrs
stc
into
icebp
clc
fcmovnu
push
pop
and
mov
out
sub
test
addr16
insl
mov
imul
jae
into
jg
or
in
jae
mov
pop
or
filds
loope
mov
outsl
push
dec
rsqrtps
and
sahf
jl
rcl
scas
out
fisttpll
rcll
push
js
pop
in
jnp
pop
adc
dec
mov
cwtl
dec
jnp
xor
imul
inc
cmpsl
cltd
inc
lret
rorl
outsb
in
add
int
and
faddl
stos
bound
mov
sbb
push
pop
add
call
leave
pop
repz
adc
adc
jp
outsb
cli
sbbb
mov
jno
daa
rorl
lret
push
cmp
enter
mov
and
outsb
push
loopne
push
cld
mov
bswap
jns
mov
mov
xchg
sbb
or
iret
jmp
ljmp
daa
pop
mov
mov
rorb
cwtl
arpl
insl
test
mov
test
mov
aad
cmpsl
int3
cmp
inc
mov
repnz
out
call
inc
adc
adc
pop
add
xor
dec
hlt
mov
dec
lcall
movsl
xchg
scas
mov
jl
shlb
cltd
lods
mov
orb
scas
dec
lods
push
div
lret
adc
mov
push
adc
mov
out
cld
cmp
repnz
mov
test
xchg
jae
cltd
hlt
add
js
pop
test
jg
fbstp
repnz
decb
push
push
lods
adc
popf
mov
mov
mov
mov
loope
xor
lock
xor
repnz
fistpl
xor
ret
addl
sbb
adc
add
mov
in
cmpsl
cld
adc
js
insb
aaa
rclb
pop
push
cmp
xchg
mov
arpl
xchg
xchg
dec
pop
dec
dec
sub
pop
js
std
mov
jl
mov
push
lods
imulb
or
xor
fiadds
xor
inc
jge
pop
mov
out
cltd
stos
sbb
cmp
imul
dec
sahf
or
jmp
mov
in
adc
movsb
insl
in
cmpsb
fs
pop
xchg
add
push
inc
cmp
cltd
sbb
out
sahf
les
ja
mov
xchg
aas
insb
pop
mov
icebp
mov
pop
jb
xchg
sbb
sahf
int
inc
add
test
popa
je
stc
ljmp
je
lahf
jl
lods
push
push
in
sahf
in
mov
add
pop
mov
loop
xchg
or
cld
cmp
loope
popf
jecxz
test
stc
or
stos
push
or
add
loope
and
pop
scas
inc
ljmp
and
adc
mov
movsl
inc
push
add
push
popf
mov
aad
aas
pop
test
out
pop
jg
iret
pop
lcall
dec
popf
lret
dec
mov
call
sub
cmp
leave
in
cltd
fsubrs
jb
rcl
and
in
call
mov
rcrb
inc
out
test
jge
fidivrs
loopne
arpl
ror
bound
mov
sahf
xor
mov
sbb
in
pop
fs
clc
xchg
push
rcrb
daa
cwtl
cmp
into
dec
js
push
fdivp
jbe
sub
jle
negb
inc
fdivs
mov
pop
xor
xor
hlt
sub
dec
lea
arpl
sarb
mov
sahf
xor
es
out
lods
mov
mov
dec
xchg
gs
dec
insl
gs
dec
jae
fstp
sahf
ret
es
scas
stos
ss
jb
insb
gs
stc
out
or
jae
pop
dec
ja
and
sbb
adc
add
popa
mov
mov
sbb
mov
and
fwait
shr
cwtl
out
out
inc
jne
pop
inc
xchg
inc
dec
mov
daa
lcall
cmp
xor
hlt
mov
pop
mov
push
adc
push
test
mov
pop
fdivl
add
inc
out
movsl
repz
in
inc
cmp
mov
out
insb
mov
xor
mov
popa
jno
cmp
xchg
lea
scas
dec
lock
sub
pop
out
mov
lcall
bswap
pop
adc
mov
lods
popa
insb
shrl
dec
add
lods
or
push
sub
and
cmp
and
imul
repz
in
inc
pop
imul
mov
lods
mov
loopne
inc
adc
scas
xchg
test
or
jl
aas
into
jg
into
xchg
push
xor
cmpsl
mov
lds
mov
mov
mov
pop
lods
aam
ret
sbb
xlat
daa
aas
mov
mov
mov
and
aaa
push
imul
mov
out
sbb
in
ja
lea
push
push
cmp
lcall
sub
or
jno
je
jl
add
mov
imul
dec
add
push
out
xchg
cli
jge
sbb
sar
shlb
cwtl
or
sub
sbb
xor
adc
fisubrs
int3
popa
inc
repnz
push
sub
fldenv
ret
cmp
mov
adc
mov
sbb
xchg
movsl
fadds
cld
sahf
hlt
cli
jecxz
cs
jae
and
inc
pop
test
dec
nop
add
adc
lret
jo
or
sub
dec
push
leave
dec
clc
xchg
repz
imul
push
lods
or
jle
xor
xor
test
out
loopne
xchg
xchg
addr16
xor
enter
stos
dec
push
mov
imul
mov
es
mov
cmp
fldt
adc
mov
jo
popa
imul
incb
jge
push
push
mov
or
or
jne
lods
mov
jns
jae
inc
pop
and
jnp
int3
mov
cmpsl
adc
xchg
cltd
dec
push
sbb
hlt
cwtl
cmp
add
mov
cltd
mov
pop
movsl
pop
fwait
pushl
inc
fisubrs
mov
pop
jbe
test
jl
int
call
mov
mov
jno
pop
adc
lods
jmp
int3
xlat
xor
hlt
inc
add
mov
std
rcll
add
cltd
jne
jae
fwait
mov
pop
cmp
call
push
adc
mov
xchg
jne
lcall
adc
pop
inc
out
or
orl
fmul
iret
dec
push
loop
stc
dec
cmpsb
in
cmc
jae
into
sub
jp
in
jp
fdivrl
das
pop
inc
das
dec
adc
xlat
pop
popf
popf
jae
jns
scas
jmp
shl
loopne
filds
pushf
movsb
aaa
xchg
add
loope
stos
iret
lea
pop
pop
fbstp
push
xchg
stos
out
mov
lret
xchg
in
mov
inc
mov
aad
dec
add
shll
cmp
push
lods
xchg
stos
scas
inc
daa
test
out
call
mov
dec
jae
popa
push
jnp
push
dec
dec
mov
andl
push
cltd
jae
insb
das
inc
es
pop
sub
mov
adc
mov
stos
rcll
stos
pop
sbb
loopne
hlt
aam
imul
out
mov
cmpsb
mov
aad
out
adc
ret
or
jbe
xor
mov
xchg
dec
faddl
pushf
jnp
xor
lahf
push
js
fptan
and
outsl
and
mov
and
mov
movl
and
jb
nop
movsb
sub
jnp
add
pusha
jbe
mov
hlt
movsb
stc
jb
leave
mov
scas
cmp
sub
lea
xchg
push
xchg
movsl
ss
out
mov
fadds
cli
nop
insb
jnp
ret
mov
popl
sbb
nop
add
and
mov
mov
mov
fnstsw
mov
push
push
or
pop
sbb
sbb
add
in
testl
mov
mov
loopne
pop
cli
or
lea
inc
push
aas
mov
imul
loope
ds
arpl
pop
dec
outsl
inc
xor
cmpsl
jecxz
jle
gs
out
inc
sahf
mov
inc
mov
push
mov
mov
or
mov
dec
imull
push
jge
or
pop
test
pminsw
cmp
mov
mov
cli
pop
in
xchg
bound
pop
insb
es
sub
loopne
sti
push
frstpm(287
and
adc
mov
pop
outsl
mov
inc
daa
repz
push
nop
ret
dec
jp
xor
daa
sbb
stc
mov
orl
xor
or
inc
into
icebp
adc
mov
cs
sbb
wbinvd
xor
movq
mov
mov
aaa
and
aaa
cs
and
inc
negl
dec
ljmp
sbb
das
subb
ss
negb
lea
ja
in
mov
mov
mov
push
movb
lcall
pop
jno
lret
cmp
pop
sub
dec
and
arpl
movups
aad
sbb
pusha
xchg
and
test
add
sahf
pop
rorb
mov
add
sbb
cmp
push
movsl
lock
and
loope
clc
sbb
cmc
mov
cmpl
sbb
xor
xor
outsl
cltd
outsl
leave
cld
roll
stos
insb
outsb
jae
icebp
cmp
push
xchg
jmp
pop
in
mov
loop
stc
loopne
and
imul
fucom
cmp
in
adc
ds
jle
and
push
addb
push
shrl
pop
jmp
push
nop
mov
out
push
mov
repz
mov
orl
or
into
jle
mov
adc
mov
aas
ffreep
pusha
cmpsl
inc
jle
fildll
push
jl
xchg
loope
add
mov
sub
cmc
and
cmp
and
fcmovne
mov
jnp
mov
add
out
insb
mov
fcmovnbe
pop
jmp
pop
pop
fidivrs
xchg
jl
cmpl
mov
shll
fsts
ja
lods
jmp
imul
xchg
movsl
mov
sub
addr16
sub
add
jns
rcll
dec
loope
pop
mov
adc
sete
mov
pop
cwtl
add
pop
push
push
xchg
dec
bound
imul
push
jns
sbb
cltd
mov
cmp
inc
aas
cmpsb
cld
icebp
jp
subb
loop
ja
mov
decl
imul
mov
or
xchg
rolb
rol
insl
outsb
out
jae
cmpsl
ret
clc
dec
dec
aam
dec
adc
push
sbb
xor
pushf
jno
pushf
add
jo
mov
jmp
add
lret
dec
add
popa
inc
test
inc
fsubrs
inc
sub
in
inc
mov
push
dec
inc
bound
mov
jge
ret
aad
dec
push
dec
pop
pop
mov
adc
dec
adc
shl
jne
mov
cmp
rorb
xor
cmpsb
cltd
mov
repz
icebp
bound
cmpsl
dec
add
sub
fwait
xor
inc
imul
outsb
mov
cmp
int
and
shlb
dec
xchg
mov
xorl
sbb
xor
pop
movsl
xchg
ficompl
adc
cmpsb
and
stos
adc
xor
jle
or
add
insl
lea
into
adc
cmpsl
sub
jle
inc
in
add
stos
loopne
sbb
dec
sub
jg
and
nop
pop
in
aam
call
cmp
lcall
test
xchg
cld
push
mov
cwtl
int3
fldt
push
and
imul
leave
push
mov
out
fwait
pop
mov
push
xor
adc
aam
iret
push
shrl
xlat
xor
and
sbb
sbbl
push
into
mov
int
popa
adc
xor
into
xor
mov
in
lds
pop
imul
dec
add
mov
mov
mov
fs
mov
mov
add
xor
and
pusha
insl
push
inc
xchg
popf
mov
or
fidivrl
add
enter
pop
pop
sbb
jns
sbb
dec
xor
js
mov
iret
or
adc
push
rcrl
popa
pop
xchg
stos
push
xchg
into
aad
or
and
shrb
stos
fsubs
xor
dec
pop
push
pop
mov
push
dec
xchg
push
ret
bound
jns
sub
xchg
dec
das
aas
in
lods
es
out
cs
push
stos
mov
cld
inc
aaa
xchg
ds
test
xor
cmpl
je
int3
cwtl
jl
add
decl
out
inc
test
mov
fimull
mov
cmp
shlb
pop
movsl
sub
and
dec
push
fwait
inc
adc
mov
sbb
pop
mov
fisubs
inc
dec
bound
enter
std
mov
xchg
inc
out
xor
fisubrs
dec
repz
call
mov
out
dec
enter
int3
or
lret
adc
iret
inc
nop
orb
add
and
adc
mov
jmp
mov
movsb
stc
cmp
ljmp
mov
imul
push
add
mov
cmp
sub
mov
xor
inc
xchg
add
outsl
int3
cmp
sahf
into
int
pop
mov
cwtl
test
xor
out
insb
adc
xor
xchg
xchg
or
cld
cs
mov
les
lahf
cmp
minps
jb
lret
jp
rcr
push
aam
jle
cmp
roll
les
mov
xchg
cmpsl
repnz
jbe
sub
sub
cmp
xor
pop
xlat
pop
insb
sub
mov
insb
pusha
cs
in
cmp
or
lahf
or
sub
xchg
lcall
sbb
mulb
sahf
aad
in
inc
loope
push
je
ja
fcmovbe
cmpsl
xor
sbb
sub
mov
jle
push
dec
cli
sbb
xchg
enter
xor
xchg
rol
fstl
jp
push
mov
in
jmp
aam
push
repz
push
or
or
pop
xor
pop
sbb
xchg
jbe
mov
pop
das
mov
xchg
and
ret
inc
mov
push
xor
nop
filds
dec
imul
in
icebp
sbb
shrb
push
rcl
fists
hlt
lea
js
push
pusha
divl
sub
cmpb
xor
ret
pushf
fildl
imul
repz
icebp
mov
lret
dec
std
jns
test
mov
add
ja
push
jl
mov
jae
js
adc
sub
xorl
inc
sub
test
jbe
jnp
jp
push
stos
mov
fsubs
repz
and
mov
add
arpl
es
dec
xchg
sub
and
mov
ds
sbb
mov
rcrb
push
rol
push
jl
in
fidivrl
sbb
lods
dec
sbb
fldl
xor
dec
and
mov
aaa
test
js
and
fcoms
mov
je
std
dec
bsf
xchg
pop
inc
not
or
xchg
xchg
and
mov
push
mov
shr
outsb
sbb
fisttps
sbb
sahf
faddl
pop
adc
decb
sbb
mov
xor
sub
daa
dec
xlat
mov
cwtl
mov
stc
lcall
lock
mov
es
je
cmp
mov
loop
js
cmpsb
mov
jb
rolb
jnp
mov
iret
cmp
push
ret
mov
push
mov
xor
xor
loope
imul
dec
dec
pop
mov
lock
dec
or
inc
jge
cmp
add
gs
outsb
clc
out
jle
in
inc
mov
sti
sbb
adc
lds
sub
clc
push
xchg
iret
jge
cs
mov
pavgb
fmul
dec
cwtl
add
lods
lret
mov
jle
stos
pop
adc
mov
add
les
mov
push
addr16
in
sbb
std
pop
imul
clc
aad
popf
in
gs
and
movsb
cltd
sbb
test
mov
rolb
popf
popl
add
adc
jbe
fwait
xchg
in
fldt
sub
scas
fadd
gs
mov
stos
jnp
mov
cwtl
stos
out
and
or
stc
dec
roll
xlat
add
pop
pop
pushf
jno
incl
xor
jne
imul
push
mov
jecxz
cmp
lret
insb
dec
std
lock
mov
push
push
or
pop
jne
lods
add
mov
rcrb
mov
in
adc
lea
fistl
cmp
inc
pop
dec
xlat
pusha
in
fsubp
sbb
push
fwait
cld
outsb
mov
clc
xor
add
fwait
je
xor
sbb
and
out
xor
ljmp
daa
and
fistps
mov
insb
fidivs
sbb
push
fstpl
movsl
push
out
dec
aad
xchg
mov
mov
fcmovnbe
icebp
fisubrs
shlb
mov
cmp
push
hlt
mov
mov
iret
jae
mov
and
ja
push
in
mov
movsl
fcmovb
push
jb
adc
mov
push
mov
sbb
iret
ja
lods
push
inc
xchg
jnp
push
sti
gs
jno
pop
rorl
mov
mov
pop
mov
shl
adc
mov
jne
xor
rorb
or
sbb
mov
pop
andl
push
sbb
cmp
add
push
fmulp
sub
popf
addb
dec
cmp
in
jecxz
imul
aaa
stc
jg
das
test
jmp
mov
daa
push
sub
in
subl
pop
fists
lods
mov
mov
inc
les
xor
jno
and
aas
mov
bound
cld
daa
mov
mov
cmp
cmpsb
je
pop
cmp
fdivp
ds
movb
push
cmpsb
data16
cmpsl
cwtl
bound
aad
mov
pop
pop
mov
jecxz
push
incb
inc
lahf
aam
faddl
mov
cmp
int
or
dec
dec
xor
mov
jbe
icebp
insb
adc
inc
imul
xorl
pop
inc
js
jecxz
and
xchg
mov
outsb
mov
or
cli
loopne
fsubrs
inc
fs
ljmp
shrb
sbb
xor
outsl
cli
aas
jo
call
add
lcall
lods
pusha
into
pop
fsub
mov
fcmovb
dec
push
xchg
adc
movsl
cmp
add
enter
mov
mov
sub
mov
and
adc
mov
sbb
stc
or
shll
daa
jg
mov
lahf
aad
fcom
pop
in
mov
shlb
adc
jge
mov
je
mov
cmp
push
cwtl
mov
inc
fstpt
xchg
jp
arpl
loopne
inc
adc
shrb
inc
sub
sbb
loope
in
aam
ret
and
and
cltd
cwtl
push
adc
mov
fcmovnb
push
scas
aas
aaa
xchg
mov
gs
popa
stos
xchg
ficoms
ret
mov
jns,pt
loope
scas
mov
fbstp
imul
mov
pop
rorb
test
sub
mov
xor
cld
mov
scas
movsb
push
dec
push
and
sub
add
xchg
cld
sbb
inc
push
add
add
sub
adc
in
adc
out
inc
cs
and
sbb
aas
aas
addr16
add
mov
or
cmpsb
dec
bound
and
mov
mov
mov
jnp
iret
hlt
scas
sub
out
fsubp
or
add
adc
stc
add
lahf
sub
xchg
pop
lcall
incl
jbe
cmc
mov
mov
inc
push
mov
pop
test
movsb
cli
xchg
sti
aas
inc
xchg
sbb
dec
sbb
cmp
or
das
or
pusha
enter
cs
mov
std
or
sbb
arpl
ss
push
ja
in
jne
cmp
mov
enter
out
inc
sahf
bound
jnp
aad
xor
push
repz
add
ja
and
hlt
test
pop
dec
sbb
cmp
test
fimull
pop
test
cld
fldl
les
loopne
push
pop
lds
aad
adc
jno
adc
or
shl
pop
repnz
dec
add
jb
pop
ret
xor
add
xor
loop
push
inc
mov
add
in
shll
inc
xor
pop
jmp
mov
sti
dec
xor
nop
cltd
data16
call
test
and
sbb
jae
faddp
dec
dec
jg
call
add
mov
cld
xchg
rolb
cmovp
adc
loop
int
mov
sbb
insl
inc
pop
xchg
mov
pop
push
pop
xchg
ljmp
into
inc
xorl
popa
xchg
pop
xchg
imul
das
pop
push
js
sub
adc
rcr
push
and
adc
fwait
rcrb
stc
jg
ja
push
popa
stc
imul
test
push
mov
and
pop
jo
sbb
sbb
add
jae
mov
daa
lock
ficompl
adc
jbe
insl
idivl
pop
xorb
ret
cmpsl
mov
mov
dec
out
dec
sbb
mov
inc
jbe
dec
cwtl
sub
into
call
dec
loopne
cs
pop
dec
nop
test
add
daa
call
xchg
jnp
cwtl
jp
and
add
sti
outsb
test
adc
xchg
cld
pop
cmp
xchg
mov
dec
dec
sub
push
pop
cmc
xor
and
sbb
sub
test
and
orl
lahf
inc
mov
cmp
dec
dec
cmp
aas
fbld
cmp
sub
jg
pop
test
dec
mov
loopne
and
inc
leave
sbb
dec
push
cli
pop
scas
or
dec
incl
aad
and
cmp
xor
add
mov
repz
test
adc
iret
aad
out
lock
mov
xor
add
xchg
xor
mov
outsb
xchg
or
push
and
popa
imul
int
xchg
ret
movsl
enter
add
std
cwtl
and
sub
dec
mov
and
gs
pop
mov
fimull
and
inc
sbb
push
mov
add
movsb
cs
lods
cs
dec
dec
lock
ds
out
mov
pop
insb
out
jb
mov
outsb
dec
dec
sub
xchg
lods
icebp
xlat
popf
pop
mov
jl
xchg
jb
sahf
xchg
jne
xchg
jae
outsl
test
clc
gs
mov
mov
xor
inc
incb
mov
xchg
mov
sahf
fdivrp
icebp
sbb
fldenv
sbb
mov
lock
dec
fimull
in
sbb
cld
mov
mov
xor
mov
cmp
std
loopne
subl
jg
clc
add
lret
cmp
movsl
loop
add
iret
jnp
mov
leave
mov
add
inc
enter
lcall
sbb
fwait
mov
test
loop
pusha
mov
sbb
and
aas
es
cli
lret
clc
mov
cmp
sti
or
out
les
jae
outsl
adc
and
pop
or
dec
in
xchg
popf
mov
pop
mov
lds
mov
das
sbb
inc
cmp
ja
xchg
or
and
cmp
cs
fisubrs
js
and
dec
sti
pop
daa
cmp
jae
inc
push
and
cmp
jns
xor
pop
test
js
scas
ljmp
cltd
lret
test
sti
fstl
pop
mov
in
lea
jb
jmp
or
mov
rcll
add
push
push
jo
gs
insb
adc
mov
jge
or
jmp
mov
or
les
fidivs
mov
push
mov
mov
cld
cli
fstps
aas
push
adc
add
sub
jge
enter
icebp
and
ret
mov
xchg
dec
push
mov
pop
sbb
dec
add
and
aad
fidivrs
and
imul
sbb
roll
movsl
lods
pop
mov
xchg
movsb
test
xor
insb
xchg
cmp
lea
lods
movsb
jnp
outsl
mov
jle
inc
scas
jg
mov
mov
rolb
cmp
outsl
dec
mov
leave
sbb
shrl
pop
lcall
popf
cmc
fldcw
test
js
push
adc
sbbb
ljmp
mov
mov
ljmp
pop
loope
cmp
dec
xchg
out
mov
xor
push
scas
mov
xchg
inc
mov
fcompl
enter
pop
daa
jmp
in
push
mov
test
pop
je
xchg
mov
data16
add
pop
cltd
push
or
imul
jae
xor
jg
inc
pop
cmpsb
and
jnp
lea
mov
hlt
jne
and
loope
add
mov
loopne
push
data16
jle
mov
pop
popf
outsb
cwtl
sbb
pop
inc
and
lret
sbbb
in
jns
inc
cmc
xor
xor
iret
mov
sarb
mov
loope
push
mov
lock
mov
cmp
mov
subl
insl
out
fwait
adc
sbb
pop
pop
pop
push
outsl
dec
add
test
push
imul
lds
push
call
mov
mov
pop
call
mov
adc
repz
adc
fidivrl
lock
adc
ljmp
adc
push
das
ljmp
dec
xchg
call
stos
xlat
jp
sub
inc
jns
in
mov
xor
arpl
scas
icebp
xchg
mov
sahf
sahf
stos
lods
mov
lcall
pop
jecxz,pt
cltd
inc
pusha
pop
mov
dec
sahf
pop
push
ficoml
xor
outsb
stos
jb
sbb
mov
pop
jbe
mov
dec
cld
sbb
iret
test
in
push
clc
cmpsb
lds
jae
nop
dec
push
cs
fcompl
in
xor
dec
fwait
xchg
outsl
repnz
sub
in
cmp
mov
xchg
cs
shlb
or
add
mov
or
movsl
js
dec
sbb
test
push
jbe
and
in
sbb
mov
decl
lock
cs
pop
inc
jg
cmpsb
add
out
stos
inc
jl
sbb
stc
mov
movsl
addr16
inc
leave
clc
mov
pop
and
sbb
sub
adc
fcompl
je
or
xchg
sbb
movsb
mov
or
mov
loopne
adc
stos
add
fnstsw
jle
inc
push
test
mov
icebp
xrelease
fimull
jmp
imull
bndldx
daa
inc
loop
push
xor
movsb
adc
and
aas
dec
dec
popl
insb
mov
popa
loop
les
xchg
push
repnz
fildll
mov
lods
shlb
push
fs
sub
adc
js
daa
fldenv
ds
stos
sub
mov
dec
arpl
iret
lret
clc
or
gs
sbb
jno
add
xor
mov
sbb
rcrl
and
adc
movsl
push
sti
push
pop
gs
loop
imul
push
xor
ret
lock
mov
and
lret
dec
pop
data16
ret
cmp
gs
mov
inc
loop
adc
jg
pop
scas
rorb
and
lea
and
into
and
cmp
xchg
xor
dec
addr16
adc
push
xor
data16
mov
popa
sub
aam
xchg
ds
or
rcrl
fsts
loope
sbb
mov
dec
push
lds
push
sbb
scas
ret
lea
mov
iret
pop
xlat
dec
div
imul
sub
jns
or
pushf
jne
mov
int
xlat
mov
shl
sub
stos
xor
gs
mov
clc
cmp
shl
cmp
add
push
inc
add
iret
mov
jnp
cmp
mov
dec
call
jl
test
lds
xor
ficoml
mov
rcr
sbb
fucom
sbb
inc
rcll
mov
inc
aas
add
scas
aad
lret
sub
cmp
or
fdivl
or
out
movsl
push
stos
int3
xchg
dec
push
sub
dec
out
ds
mov
pop
push
mov
cmp
test
incl
les
rcl
xchg
xchg
inc
inc
std
sub
jg
stc
dec
mov
stos
sbb
jge
notb
into
fcmovne
xor
mov
xor
add
pop
or
mov
in
sub
push
pop
jecxz
bound
into
shrb
rolb
inc
pop
clc
popa
jns
xchg
or
xchg
push
std
jl
and
loop
cltd
jg
cmp
das
loopne
mov
fcoml
xlat
stos
imul
sbb
xor
sub
push
cmp
in
add
cmp
xor
mov
xchg
dec
pop
loopne
das
inc
sbb
mov
insl
xchg
imul
pop
pushf
gs
lods
mov
adc
dec
inc
outsl
test
cld
jno
iret
push
sub
or
std
int
push
aas
jmp
test
push
and
fsts
push
cli
icebp
cmp
jbe
out
sub
rcl
stos
pop
xor
cld
or
inc
inc
in
addr16
add
in
sub
cmp
dec
xchg
mov
xor
addr16
add
and
push
scas
mov
fs
notl
cs
test
out
inc
mov
xchg
push
sub
scas
popf
pop
ftst
repz
dec
iret
sbb
or
fwait
sub
test
aad
pop
sbb
jno
pushf
xchg
mov
mov
in
mov
cwtl
lds
call
sub
shlb
filds
icebp
mov
sti
cmp
shl
add
push
inc
ret
call
pop
gs
mov
cltd
adc
movsb
out
sbb
inc
push
jb
xchg
test
jae
or
jmp
mov
aaa
repz
push
in
into
frstor
imul
mov
ljmp
xchg
sbb
test
aad
enter
xchg
and
lret
fs
loop
xor
jb
ror
add
dec
dec
mov
loop
test
orl
mov
push
into
xor
stc
xor
mov
outsl
sbb
adc
jno
stos
mov
test
adc
std
mov
out
aam
in
adcb
xor
pushf
mov
push
mov
lcall
xor
scas
sub
cld
outsl
lods
sahf
cmp
xchg
cwtl
in
push
pop
scas
out
mov
and
inc
gs
scas
das
adc
clc
inc
cmp
repz
push
in
fidivrl
xor
sub
fst
mov
aam
fsubl
cld
adc
push
js
icebp
in
xchg
jmp
vpmacswd
lahf
imul
xchg
ds
inc
add
jmp
mov
lods
sahf
dec
mov
pop
in
pop
cmp
mov
shll
mov
mov
popa
mov
stc
test
outsl
test
daa
inc
sbb
xchg
sbb
inc
testb
mov
adc
int3
cmp
aaa
dec
sub
xchg
push
fcoml
pop
pop
in
mov
imul
leave
out
mov
mov
pop
jge
fstps
test
sbb
pop
add
jl
iret
test
and
daa
adc
into
outsb
imul
clc
mov
test
jne
adc
mov
adc
daa
fbld
lods
ret
outsl
aam
mov
mov
fadd
push
sub
lcall
jecxz
sbb
cmp
fwait
xor
rcrl
jae
loop
subl
cmp
test
xor
cltd
jno
sub
test
rcrb
jp
cwtl
scas
mov
pop
popa
mov
cmp
add
jnp
push
inc
lock
push
test
push
idivl
mov
add
add
stos
inc
fistps
clc
int3
inc
stos
or
pop
xchg
test
xchg
push
xchg
mov
adc
inc
pop
jmp
mov
inc
scas
jg
lcall
in
or
clc
test
ljmp
jmp
jns
mov
mov
stos
jb
rcrl
push
sub
fwait
std
mov
add
pop
or
sti
call
and
mov
mov
jnp
popa
mov
push
aaa
push
cmp
push
movsb
sub
in
push
je
out
sub
lret
js
aas
out
and
mov
mov
push
and
scas
mov
repnz
push
mov
movsb
sarl
sbb
fidivrs
pushf
inc
sahf
lds
enter
mov
push
je
push
jg
add
and
in
jno
es
fwait
dec
decb
addr16
mov
lock
fwait
xchg
sub
dec
sahf
sbb
jge
and
out
jb
je
rorl
cld
sbb
jge
mov
jnp
mov
dec
cli
loope
dec
fisttpl
pop
mov
mov
aaa
adc
and
nop
inc
test
adc
les
mov
or
jae
or
scas
mov
fstpl
test
js
stc
jnp
or
scas
aas
jg
nop
pop
dec
cmpsb
dec
mov
sarb
lea
xor
cmp
dec
lods
outsl
sbb
push
jo
pop
loop
movsb
stos
int3
pop
repz
out
push
les
lea
pushf
push
push
or
pop
rcr
in
push
mov
sub
inc
out
cld
add
sarb
inc
into
loop
imull
mov
dec
push
push
push
icebp
fs
mov
roll
aam
out
adc
scas
push
std
adc
out
xchg
inc
mov
in
push
pop
fwait
les
mov
call
cmovs
mov
loope
mov
sub
inc
xchg
push
and
roll
mov
cmp
fwait
ret
iret
mov
outsb
out
imul
adcl
adc
pop
adc
push
push
add
outsb
enter
std
hlt
xorl
int3
jns
test
fsubs
adc
or
or
lcall
sub
sbb
jmp
jbe
jbe
add
fstps
push
jl
jmp
jno
pop
pop
outsb
test
pop
daa
pop
adc
sbb
or
not
es
xchg
out
jns
shl
jno
mov
jle
enter
imul
je
dec
inc
lds
mov
in
jo
fwait
movsb
movsl
inc
lret
adc
adc
popf
lods
loope
adc
scas
arpl
icebp
test
lods
push
mov
pop
jl
fbstp
add
pslld
jns
pop
sbb
in
xchg
les
out
push
jbe
repz
jb
pop
lret
sbb
js
mov
sbb
mov
or
aas
imul
fisubrs
push
fistpll
dec
scas
inc
push
lret
dec
mov
fidivl
sbb
sbb
pop
fdivrs
in
adc
push
inc
jne
stc
xchg
ja
dec
ljmp
xchg
fstps
jl
pop
loope
stos
es
imul
fnstcw
xor
sub
call
inc
call
je
xor
mov
jl
jno
pusha
cmc
mov
imul
jp
cmpsb
aad
loop
mov
or
hlt
insl
aas
rcll
in
dec
and
inc
push
jle
std
jnp
mov
test
lahf
push
xor
mov
pop
nop
movsl
pop
inc
gs
data16
jg
les
scas
mov
in
mov
mov
or
leave
jae
cmp
xchg
jg
lods
cmp
adc
mov
pop
popf
gs
jge
testb
cmpl
pusha
mov
movsl
jmp
mov
insb
rorb
inc
cmp
jns
cltd
fnclex
mov
push
xchg
ljmp
cmp
sahf
outsb
aam
pop
ret
sub
jmp
inc
sub
movsl
or
js
std
add
pop
xchg
test
pushf
add
xchg
pop
jg
mov
movsl
or
pop
lcall
xor
jmp
sbb
fcoms
push
mov
adc
jle
jns
dec
jcxz
bound
in
xchg
jecxz
stc
outsb
outsl
xchg
lods
mov
xlat
lods
add
sbb
cltd
jl
call
mov
lret
dec
mov
lods
push
jns
fsts
test
dec
call
mov
lea
cltd
scas
fldl
stos
mov
pop
sbb
and
push
lcall
vrcpss
rolb
fst
js
in
pop
add
movsb
fldl
cmp
stos
and
pop
sarl
iret
popf
pop
dec
addb
adc
xor
loope
hlt
jp
test
push
add
leave
pushf
imul
inc
std
mov
cmp
rolb
xchg
push
cmp
imul
sub
jo
jo
sbb
inc
out
mov
stos
xor
ja
testl
dec
clc
pushf
and
pusha
jne
jnp
ret
in
pop
daa
shl
jecxz
sub
sub
cmc
and
inc
loope
mov
lea
pop
pop
fadds
out
or
leave
cmp
inc
sub
and
cmc
mov
pop
and
cs
clc
dec
jmp
sahf
push
loope
dec
aaa
adc
mov
mov
or
inc
fimuls
xchg
dec
xchg
leave
int
cmp
stos
push
in
scas
fwait
cmpb
bound
outsb
add
lds
xchg
shlb
pop
mov
rcrl
sbb
add
mov
add
popa
nop
movl
lods
insb
push
adcb
xchg
insl
pop
gs
cmc
cmp
push
and
roll
sub
repnz
mov
jg
in
push
push
lret
data16
cmpsb
xchg
ret
shlb
cmpb
cmp
out
xor
rcrb
cmpb
loopne
hlt
sti
rcll
jbe
movsb
pop
pop
dec
icebp
cmc
sahf
and
xchg
xor
loop
xchg
or
bound
rcrl
cltd
roll
cmp
pop
xchg
fwait
mov
and
or
xchg
xor
push
pop
mov
fwait
add
inc
jl
imul
xchg
adc
mov
push
and
mov
or
cs
jg
nop
cli
insb
xchg
fsub
xor
add
aas
push
pop
xlat
inc
inc
mov
xchg
lock
ret
push
rorb
lret
test
insl
xlat
cmp
icebp
js
das
js
xchg
sbb
pop
push
js
dec
xor
jbe
xchg
add
arpl
cmpsl
mov
sbb
int3
popf
push
xor
lds
out
xchg
mov
push
pusha
pop
add
mov
sub
mov
sub
ror
jg
sub
sti
mov
push
clc
popa
and
je
mov
nop
hlt
aad
pop
dec
fwait
inc
hlt
push
ficompl
push
jb
and
fsubs
adc
jecxz
les
hlt
pushf
cmpsb
clc
je
sub
js
jg
jecxz
cmpsl
mov
test
sahf
pushf
lret
cmp
adc
lock
jmp
mov
dec
ret
ss
push
mov
fistpll
test
mov
pop
lds
aad
imul
gs
inc
lock
xchg
cli
aad
jne
iret
or
mov
sti
and
fwait
xlat
push
mov
lret
roll
out
sub
loopne
lods
sub
ret
inc
jmp
out
rcll
mov
loop
sub
inc
pop
lods
int
test
mov
sbb
and
aas
xor
mov
fisttpll
inc
loopne
outsb
push
aaa
cmpsb
push
mulb
adc
dec
std
pusha
pusha
lahf
sbbb
ffree
imul
lock
jns
mulb
cmp
fisubrl
fisubrl
jle
fnsave
dec
lret
in
fistpl
and
push
adc
stc
leave
mov
lods
jb
mov
push
jg
push
rclb
jl
aaa
cmpsb
jbe
pop
cmp
cmp
pop
pushl
push
jp
mov
or
divb
jle
cmp
lods
mov
dec
jmp
lock
xchg
or
scas
stos
pop
fistpll
sbb
cmp
fists
mov
push
imul
cmp
sbb
mov
cmp
lods
insb
push
mov
push
and
cli
pop
sbb
or
jmp
imull
cltd
push
nop
pushf
inc
test
mov
adc
shr
movsb
leave
inc
pop
iret
and
xorl
add
aas
iret
sbb
xchg
repnz
fstpl
inc
mov
inc
pop
xchg
stc
ljmp
ret
ficoms
movsl
xor
rorb
cmp
test
scas
icebp
mov
mov
mov
lcall
repnz
mov
mov
mov
xorb
jnp
lcall
std
pop
into
pop
xchg
sbb
inc
xor
inc
xchg
loop
popa
jg
push
es
push
adc
push
cltd
imul
xchg
lock
sub
sub
mov
jle
dec
adc
push
arpl
nop
xor
dec
xor
mov
mov
clc
js
mov
pop
call
lods
jmp
inc
jecxz
je
lahf
pop
in
mov
cmp
push
daa
sub
xchg
daa
or
jno
and
stos
inc
cmpsb
lea
enter
mov
jb
stc
xchg
push
lods
cld
dec
scas
sahf
inc
in
fwait
sbbb
dec
lods
inc
insl
shlb
sbbl
mov
repnz
jge
pop
cmpsl
mov
pop
cmp
mov
incb
sarl
sub
rorb
lea
clc
and
mov
adc
jns
cmp
es
imul
ret
in
cld
mov
iret
dec
xor
ficoml
imul
in
jg
into
cli
dec
in
pop
xchg
cmp
insl
add
jge
aaa
inc
and
mov
xchg
in
mov
push
loopne
es
adc
cmpsl
in
or
sub
inc
jnp
mov
in
sub
dec
jb
mov
jg
xchg
and
sbb
arpl
jp,pt
shlb
and
sbb
sarb
jb
fsubrl
mov
lret
jae
popf
cmp
adc
xchg
pop
cmpsl
pop
add
nop
sbb
fidivrl
sub
es
int3
jle
data16
xchg
sbbb
jp
and
inc
test
pop
cmp
cmpl
push
dec
call
dec
dec
bswap
sub
ds
cmp
pop
in
dec
lock
mov
cmpsl
jnp
push
pushf
sti
inc
adc
es
sub
std
mov
mov
mull
mov
pop
mov
pop
in
iret
sub
in
adc
arpl
adc
add
or
sub
lret
jae
adc
lahf
test
push
aam
cmp
mov
fldcw
cmpsb
sbb
mov
add
dec
lahf
lcall
stc
mov
mov
dec
in
popa
imul
leave
daa
bound
je
pusha
std
enter
in
loop
or
dec
push
in
decb
mov
sub
daa
push
mov
mov
pop
mov
stos
sub
outsl
pop
sbbl
or
daa
orl
cmp
cltd
cmpsb
sub
clc
cli
inc
cmova
sbb
pop
bound
xchg
mov
mov
ss
popf
call
jp
xchg
clc
cmp
push
dec
xchg
pushw
pop
sub
bound
push
aas
xor
mov
fdivl
adc
enter
sar
sbb
sub
or
stos
data16
inc
mov
jbe
ret
scas
into
mov
out
ss
jns
or
test
sub
popf
dec
pop
sarb
dec
scas
call
cmp
scas
mov
lret
mov
jg
push
stc
lea
inc
out
pop
mov
dec
out
add
xchg
or
cmp
fsubr
test
out
mov
les
filds
nop
xorl
mov
mov
mov
cmpsl
imulb
lea
insl
and
and
fdivr
rcrl
sbb
xchg
xchg
jae
pop
inc
push
pop
mov
std
xor
mov
pop
mov
dec
jge
loopne
bound
call
fwait
push
cmp
rcrl
ret
jno
inc
arpl
push
pop
dec
push
movsb
fistps
imul
cld
testl
fs
sub
ljmp
outsl
not
arpl
imul
sti
add
push
mov
je
mov
popa
lret
add
dec
or
cmp
push
sbb
aad
lahf
inc
into
push
adc
or
test
sub
lds
out
loopne
mov
dec
in
push
icebp
stc
lret
cmp
and
dec
mov
shrb
dec
in
push
push
sbb
dec
sub
sbb
gs
incb
lods
das
lea
lahf
adc
inc
mov
sub
mov
xor
adc
mov
pop
mov
inc
mov
xor
xor
sub
mov
sbb
lock
arpl
out
roll
mov
mov
dec
cmpsb
push
jb
mov
lea
mov
daa
cmp
sti
mov
jo
or
adc
pop
les
sbb
xchg
dec
xchg
xchg
stc
dec
daa
cli
es
daa
loopne
cmpb
aam
cmp
movsb
adc
in
cmp
and
ret
push
pop
sub
lds
idivl
and
cmp
and
adc
addr16
mov
aaa
xor
pop
aaa
and
xchg
out
lret
rorb
push
test
mov
sarl
int3
mov
inc
xchg
sub
cwtl
pop
scas
stos
inc
xor
and
xor
lea
in
mov
test
out
xor
push
mov
adc
int
add
mov
fwait
hlt
imul
sbb
sub
ds
sub
iret
sbb
scas
jmp
xchg
test
scas
dec
loop
lret
add
inc
jl
out
inc
mov
iret
sub
les
push
ss
or
mov
loopne
cmp
push
sarl
int3
jmp
ret
adc
pop
dec
mov
mov
addr16
dec
fsubl
icebp
das
loop
scas
xchg
adc
lock
pop
divl
in
ficomps
lcall
call
aad
hlt
sub
fsubrl
into
loopne
aaa
stc
sahf
das
jle
push
and
mov
je
jge
mov
ret
fdivl
mov
lods
pop
xor
mov
fldenv
and
repnz
idiv
lcall
aad
fs
outsl
and
jno
cli
jo
out
pop
insl
lcall
jbe
mov
push
jno
adc
fwait
popa
fbstp
dec
push
mov
mov
dec
cltd
out
fldt
test
xor
stc
mov
outsl
mov
mov
aas
adc
loope
mov
xchg
sub
lahf
icebp
cmp
arpl
cltd
je
adc
mov
cwtl
sub
push
in
jl
mov
push
push
add
enter
cmp
add
jbe
inc
je
cmp
js
icebp
xchg
xor
pop
inc
hlt
fnstcw
pop
neg
in
sbb
mov
imul
add
dec
and
in
test
jne
in
lret
inc
jns
xchg
push
xor
cmp
mov
mov
push
icebp
push
rolb
gs
dec
nop
dec
je
cmpsb
divb
fnsave
adc
ds
mov
inc
xchg
sub
gs
and
pop
sbb
adc
jp
sbb
xchg
sbbb
and
call
and
mov
lea
or
and
or
into
out
addb
out
xlat
fs
loope
inc
movsl
pushf
fwait
aad
pop
xchg
sbb
or
loopne
and
xor
xchg
cli
popa
adc
jle
xchg
rorb
mov
int
mov
xchg
icebp
adc
movsb
lods
loope
sbb
xchg
push
fwait
adc
cmp
fistpll
lea
les
mov
or
lds
ljmp
sub
mov
xlat
fwait
or
push
mov
cli
sbb
dec
in
test
xor
and
inc
mov
sbb
pop
ss
jle
repnz
or
adc
aam
iret
xchg
cmp
push
inc
xchg
jecxz
cmpl
adc
xor
cmc
aad
popa
xchg
rcr
aas
aaa
jae
stos
ret
in
or
jns
adc
arpl
ljmp
xchg
lret
gs
cmp
push
and
xchg
addr16
xor
pop
mov
adc
out
outsb
xchg
cmc
or
lds
mov
movsb
scas
ss
push
mov
ss
jp
outsb
aas
xor
ficompl
test
mov
push
mov
dec
xor
dec
into
andl
and
notb
mov
scas
pop
jmp
loop
lret
sbb
in
ja
aas
xchg
cpuid
aam
dec
sbb
push
mov
scas
das
inc
jno
fdivr
aaa
repnz
insb
pop
adc
xlat
jns
jmp
pop
popa
or
mov
push
sahf
xor
cli
popf
aad
mov
pop
and
mov
movsl
push
mov
mov
jl
mov
or
jns
mov
pusha
sub
dec
mov
ljmp
shl
ljmp
mov
sarb
sbb
dec
loop
mov
cmp
dec
xlat
das
xchg
or
cli
les
xor
mov
dec
les
mov
lret
scas
jbe
lcall
push
pusha
pushf
mov
movsb
sbb
mov
cld
test
das
imul
push
xchg
jl
pop
mov
mov
sbb
popa
add
divl
or
scas
lods
and
sti
subb
loop
cmp
movsl
pushf
add
int3
stos
push
mov
pusha
and
call
add
jg
push
addr16
rolb
test
jg
xchg
jo
mov
sub
inc
push
mov
add
pop
inc
mov
pop
inc
bound
or
ss
add
in
xorl
repnz
pop
or
pop
or
loopne
jne
inc
or
scas
jno
fsts
mov
jbe
je
negl
cmp
xchg
out
stc
mov
or
shlb
mov
aaa
sub
out
inc
xchg
xchg
inc
or
adc
push
adc
shrl
das
and
rcll
cld
push
test
lea
pop
repnz
jle
and
pop
add
sub
subb
inc
mov
pusha
jg
add
cs
jnp
xor
loopne
insb
and
addr16
push
jmp
cmp
add
cmpsl
iret
sbb
pusha
jo
dec
cmp
mov
add
cld
lret
cmp
inc
mov
popa
out
popf
sbb
ficompl
sbb
add
cmpsl
push
xor
adc
xor
mov
xchg
cmc
xchg
out
jge
dec
dec
push
test
cmc
adc
test
in
xchg
sub
scas
insb
aam
dec
sub
cmpsl
lcall
ljmp
push
adc
ret
pop
sarl
sub
adc
push
mov
push
bound
das
mov
sbb
adc
ss
xchg
push
and
xor
test
dec
das
xor
mov
sbb
pop
out
mov
fstpt
sbbb
mov
or
lods
adc
xor
add
mov
sbb
sub
daa
movsl
xchg
cmc
dec
insl
mov
arpl
test
lods
cltd
rcrl
ja
xchg
adc
push
int
xor
adc
cmpl
lcall
sti
mov
loop
or
jl
js
dec
inc
in
cmp
xchg
inc
xchg
cmc
pop
mov
lea
int
leave
jae
loope
mov
enter
lcall
rcrl
aas
adc
mov
frstor
lret
or
xchg
pop
cmpsb
dec
int3
push
and
roll
dec
sub
add
gs
sub
xlat
cmc
neg
fistpll
mov
test
pop
mov
push
jb
clc
sbb
add
pop
call
clc
arpl
lods
sbb
push
addl
dec
mov
push
cwtl
xchg
cmpsb
dec
or
ret
mov
in
or
subl
pop
dec
stos
jle
xchg
xor
setbe
jle
inc
ret
and
in
cmp
add
dec
xchg
or
pop
in
negl
outsb
int
jae
dec
rcrl
sub
jle
jnp
loopne
lods
sub
clc
add
mov
pushf
testl
mov
jae
repz
mov
sbb
js
scas
hlt
rorl
xchg
or
jge
pushf
mov
adc
icebp
and
mov
aas
add
adc
sti
cmp
and
adc
in
ss
jg
sbb
pop
inc
add
syscall
jb
test
mov
jl
sahf
fsubr
sbbb
aam
enter
cmp
sti
test
into
inc
inc
cmp
loopne
fsubl
jecxz
mov
testl
adc
lods
in
movsb
mov
xchg
xor
pop
divl
mov
repnz
inc
mov
cwtl
pop
into
adc
fwait
xchg
xchg
adc
or
lods
outsl
mov
jg
imul
ret
xchg
inc
pusha
in
out
psraw
pop
mov
pop
sub
scas
enter
sub
and
shrl
cld
mov
adc
dec
push
sbb
cmpl
shlb
inc
sub
leave
dec
lea
lahf
dec
mov
mov
cmpsb
xchg
out
sub
test
leave
popa
xor
jg
repnz
mov
fisubl
mov
jo
fcoml
mov
call
movb
sbb
leave
xchg
ja
ret
addl
jp
pop
mov
daa
into
cmp
add
daa
xor
sbb
mov
call
jg
mov
mov
aaa
lock
jg
xchg
mov
sub
ja
dec
adc
clc
movsb
movsb
push
inc
leave
fadd
lahf
ret
dec
out
es
mov
ret
int
mov
pop
push
push
aas
imul
adc
jmp
jae
push
addr16
pop
xor
pop
and
jp
mov
jp
fucomip
or
stos
fcoml
mov
sbb
or
ret
mov
insl
iret
arpl
inc
push
sub
mov
or
iret
int
pop
stos
lcall
ret
iret
jl
adc
push
pop
call
mov
inc
push
xor
jl
fstl
pop
test
mov
dec
ret
sti
push
test
and
addl
mov
and
cwtl
nop
movsl
xor
ja
push
mov
pop
jbe
cmp
cmpsl
stos
mov
jbe
cwtl
cmpsb
mov
dec
outsb
mov
xor
and
xor
int
inc
rorb
imul
xlat
ret
pop
pop
inc
in
dec
sahf
mov
lods
mov
cs
in
dec
lods
sbb
scas
inc
pop
inc
jle
push
xchg
adc
test
shrl
sbb
pushf
or
in
push
daa
cmp
xor
popa
jb
outsl
icebp
int3
out
stos
mov
cld
leave
notb
xchg
mov
sbb
cwtl
fildl
cmp
xchg
ss
mov
fwait
push
pop
ds
mov
pop
sub
aad
ss
repz
push
add
std
aas
cld
or
inc
test
adc
mov
xor
add
call
push
lock
mov
insb
push
jno
cwtl
daa
xor
and
dec
in
mov
add
sbb
xchg
mov
fs
out
inc
sahf
sbb
jae
push
cmp
ficoml
dec
dec
add
lret
push
sub
fidivrl
cmp
mov
movsb
dec
js
test
and
shlb
and
jno
push
mov
mov
lods
push
lea
call
sub
jne
test
dec
cmp
mov
mov
mov
add
repz
cmpsl
xor
sub
push
inc
jecxz
and
jb
or
pop
aam
mov
sub
xchg
ret
test
int
rorl
mov
loopne
ret
adc
push
or
pop
lsl
cmp
lods
add
sub
add
rclb
adc
mov
push
ljmp
mov
inc
out
out
jb
push
sbb
out
sub
inc
iret
sbb
sbb
shlb
clc
int3
clc
fisubrs
cmp
sub
bound
push
imul
fisttpll
dec
in
mov
mov
dec
add
rcrb
push
pop
and
add
adc
mov
dec
adc
insl
lcall
and
lds
movsb
pop
lds
fs
imulb
mov
testb
iret
out
sub
cmp
negl
mov
inc
xor
mov
adc
ss
sub
fnsave
cmp
loopne
mov
jle
and
mov
jge
mov
and
scas
aam
jno
mov
in
mov
xchg
sub
faddl
jecxz
je
sub
adc
add
cmp
sub
popa
xchg
jp
in
ljmp
add
fmul
test
and
inc
push
xchg
lea
cmpsl
sub
jb
xchg
or
scas
mov
jbe
clc
jnp
xchg
test
sarb
push
sbb
add
sub
roll
cmpsb
addr16
xchg
jbe
xchg
das
mov
jne
pusha
testb
ss
lods
dec
dec
stos
pop
imul
cli
sti
or
sub
outsl
mov
and
adc
push
dec
les
jnp
xchg
pop
enter
insb
jecxz
inc
sub
stos
sbb
and
mov
mov
insb
out
enter
mov
enter
movl
mov
repnz
arpl
xor
and
push
mov
sahf
dec
or
loop
inc
inc
dec
xlat
jl
shr
push
push
cmp
add
jg
mov
xchg
jb
push
test
mov
or
pushf
imul
js
popa
ds
jmp
hlt
or
test
incb
les
je
aam
jo
std
sub
inc
jg
nop
push
mov
mov
or
test
mov
mov
cmp
push
aad
lea
push
push
mov
hlt
cmp
xor
adcl
mov
int3
mov
adc
cltd
sub
mov
push
imul
or
pop
mov
jnp
mov
jmp
mov
add
cltd
insb
sub
sarb
rorl
cwtl
inc
out
jmp
push
cmp
push
cwtl
adc
xchg
sbb
xor
icebp
xchg
xor
dec
dec
cs
mov
jmp
cwtl
push
adc
lock
fcmovbe
adc
xchg
fnstcw
cmpsl
in
adc
add
enter
inc
xor
imul
mov
jnp
in
lods
or
mov
sti
sub
or
lods
sti
rorl
cmp
fcomps
mov
jl
pop
and
mov
loopne
push
xorb
lock
mov
add
aam
cli
out
shrl
test
pop
bnd
icebp
inc
cmp
add
push
dec
scas
dec
push
mov
dec
pop
inc
jge
xchg
fwait
mov
cmpsl
inc
adc
out
icebp
inc
cld
stc
ljmp
repz
or
push
sahf
out
xchg
dec
mov
fidivrl
fs
int
dec
test
mov
out
ds
andb
cwtl
push
mov
cmp
push
insl
ja
andl
mov
jmp
xchg
xchg
cld
sub
cmp
pop
sahf
cmp
cmp
dec
clc
adc
or
and
fwait
iret
ljmp
test
pop
in
insl
mov
test
sbb
inc
cld
cmp
leave
and
js
adc
jmp
or
aas
mov
and
xor
clc
mov
in
add
lcall
and
outsl
and
sub
inc
jl
clc
and
inc
adc
and
in
je
test
in
cli
les
aam
xchg
xchg
mov
inc
and
scas
push
jg
xchg
cmp
pop
cmpsl
sahf
std
aaa
mov
jp
and
mov
ss
scas
cmp
fwait
jp
and
outsl
icebp
jo
sti
js
mov
sub
jo
dec
and
xchg
jmp
xchg
fisubrl
scas
push
int
rcrb
js
ficoms
adc
cli
add
lods
jp
outsb
xor
or
mov
nop
jg
js
out
repnz
xchg
inc
push
aas
movsb
int3
movlhps
push
repz
jl
cmpsb
and
in
mov
out
mov
incl
int
fs
jns
iret
sbb
movsb
std
sti
adc
js
xchg
hlt
int3
out
dec
mov
ficoms
insl
aad
xchg
cmp
lods
je
xchg
out
in
subl
jle
xchg
lea
and
sbb
jle
inc
cmpsl
pop
cmp
test
test
mov
and
cld
insl
jmp
gs
mov
rclb
inc
pop
sub
pop
in
insb
dec
popf
pop
ds
outsb
lods
lods
jmp
decl
in
cmpsl
stos
insb
pop
in
in
inc
or
cs
inc
jbe
push
ljmp
rorl
lea
inc
dec
fildll
test
leave
add
or
mov
push
sbb
pop
xor
mov
call
xor
popf
in
sub
push
fldenv
fdivs
jb
test
hlt
test
xchg
inc
inc
in
adc
lock
dec
jns
pusha
into
lret
dec
xchg
cs
pusha
xchg
mov
mov
xchg
mov
jns
js
imul
popf
aad
lea
nop
fimuls
dec
push
jmp
ja
ja
fs
fwait
out
push
js
jb
mov
fstp
push
xchg
in
sub
decl
das
movd
cmp
repz
ss
mov
dec
xor
or
mov
cwtl
jo
fisubl
dec
test
jmp
stc
jo
push
outsb
mull
aas
mov
test
rcl
popf
movsl
dec
inc
addl
scas
push
fld1
or
adc
jge
push
es
roll
inc
dec
mov
ds
mov
ficompl
mov
push
add
in
enter
mov
mov
iret
mov
jo
mov
sahf
mov
pop
es
hlt
push
shr
mov
test
test
ret
inc
cmp
adc
mov
out
neg
pusha
cmp
pop
jl
fstpt
pop
mov
mov
sbb
mov
mov
push
or
shrb
arpl
popa
shlb
sub
mov
push
push
addr16
les
loope
mov
xor
in
fsubrl
sub
fisubrs
aaa
mov
mov
lahf
bound
movsl
jns
pusha
mov
cmp
rcrl
xchg
sbb
cmp
xorl
and
dec
xchg
mov
sbb
push
mov
jo
dec
shll
jl
mov
and
jl
push
sub
clc
ror
pop
push
sbb
jmp
jle
cwtl
mov
sub
mov
pop
jne
or
dec
cmpl
repz
mov
push
cmp
cmpb
mov
xchg
jl
jmp
cmp
loop
xchg
dec
add
push
xchg
out
pop
rep
mov
mov
imul
jbe
push
xchg
out
mov
push
add
enter
jne
call
stos
xlat
popf
out
std
iret
xor
mov
mov
mov
or
dec
push
push
pop
xchg
out
insl
scas
out
pop
popa
fwait
out
out
xchg
push
ret
fistl
je
dec
xchg
mov
pop
ljmp
int3
hlt
outsl
ja
push
test
inc
add
xor
test
setb
test
and
rcrl
lea
test
mov
fisubs
xor
clc
popa
mov
aam
sub
rorb
dec
or
cmp
inc
std
in
cmp
cltd
leave
pop
loop
loopne
xchg
shll
sar
push
insb
ficompl
lea
mov
xchg
mov
push
js
add
push
cmpsb
mov
dec
test
sub
xor
mov
scas
in
sub
adcb
jno
fldcw
or
neg
sub
neg
popl
andb
stos
inc
jb
out
decb
jge
in
imul
pop
push
or
jb
mov
test
enter
pop
into
inc
push
mov
dec
iret
jbe
mov
add
mov
movsl
sub
jae
add
xchg
leave
dec
push
sub
int
das
jns
add
enter
pop
test
lods
js
jmp
call
add
adc
pusha
inc
out
or
lahf
jnp
and
subl
push
in
mov
cld
mov
push
sub
inc
call
cmp
mov
ret
mov
aas
and
xorb
popa
add
out
add
mov
cli
lods
mov
orl
scas
sbb
lods
jb
cld
jb
les
pushf
into
push
mov
cmp
xor
xchg
cmp
jle
cmpsl
shrl
xor
das
push
or
mov
int3
pop
xchg
shl
sarb
xlat
mov
or
mov
std
cmp
sub
test
and
mov
dec
push
push
adc
add
movsb
test
add
mov
pop
repz
push
outsb
jne
sbb
shll
mov
push
ss
jo
mov
mov
add
jmp
add
ja
addb
cmp
stos
shl
add
fiaddl
ja
push
add
lahf
cltd
jmp
sti
pop
outsl
inc
add
cli
mov
call
dec
xor
or
mov
and
or
cmp
xchg
movsb
imul
jne
cs
inc
repnz
cmp
cmp
sub
and
das
push
mov
jmp
pushl
out
push
mov
jecxz
adc
movsl
mov
repz
and
sub
mov
test
nop
in
mov
insb
adc
add
and
test
push
xor
aam
div
shlb
roll
js
or
xor
xor
add
xor
dec
popf
jmp
aaa
mov
sahf
cmp
mov
mov
cmpsl
xor
inc
or
xor
inc
js
jg
test
test
aas
jmp
dec
xor
adc
lds
push
xor
test
mov
mov
sbb
mov
sarb
lea
sbb
imul
push
stc
dec
xchg
in
inc
or
not
fstps
pusha
lcall
mov
lock
push
adc
xor
test
add
inc
xchg
dec
mov
add
out
inc
pusha
or
dec
cmp
push
pop
sbb
je
mov
xchg
fcmovbe
xor
cs
aam
dec
cmp
push
icebp
into
sbbl
pop
js
push
jmp
loop
or
pop
mov
arpl
jns
push
imul
mov
or
add
inc
mov
ret
mov
mov
rcrb
out
push
mov
mov
bound
lcall
sub
insb
decb
gs
inc
jmp
mov
or
add
mov
jge
sbb
fs
ss
cli
or
sub
aaa
cmp
xchg
inc
mov
sbb
andb
cmc
xlat
rolb
adc
push
and
int3
push
jns
pop
test
mov
lods
stc
iret
xor
aam
gs
loop
movsb
push
push
ss
xor
sub
aaa
js
in
xorl
iret
and
push
and
mov
stos
or
sub
push
inc
jmp
mov
lods
lahf
mov
mov
js
clc
jg
mov
lds
movsl
aam
pop
clc
pushf
dec
adcl
jp
inc
sub
insb
pop
mov
je
std
jecxz
jmp
sub
ret
push
or
out
adc
pushf
lods
ret
inc
enter
dec
cltd
mov
in
inc
pop
stos
push
mov
mov
mov
int3
jl
fcomps
mov
mov
or
xlat
xlat
dec
or
cs
cwtl
mov
and
or
addr16
mov
dec
test
ret
icebp
fstps
mov
lret
ret
call
inc
sub
or
mov
imul
sbb
mov
cld
cltd
xchg
lds
mov
push
loop
dec
mov
jo
xor
cwtl
jno
cld
or
dec
stos
jbe
cmp
push
test
xchg
popf
push
adc
test
jae
emms
inc
xor
test
scas
xor
jbe
xor
and
pop
xchg
add
cwtl
hlt
mov
repnz
push
mov
cmp
xchg
rorb
call
ss
jge
lret
je
sbb
cli
mov
xlat
ja
mov
in
mov
fadds
cmp
stos
mov
cmp
fldenv
jge
mov
aad
adc
addr16
sbb
push
movsl
daa
decl
imul
jo
bound
bound
pop
mov
push
fdivl
addb
stos
push
jb
iret
mov
call
loopne
popw
inc
inc
xor
pushf
enter
nop
subl
sbb
test
dec
cmp
and
in
out
sbbl
add
pop
mov
es
mov
out
jo
mov
add
xchg
mov
pop
dec
and
test
mov
mov
pop
pop
filds
xor
lret
or
adc
ds
loop
inc
fdivs
jecxz
adc
and
xor
rcrl
leave
bound
hlt
lcall
push
mov
loope
mov
iret
dec
daa
xchg
xchg
or
bnd
sub
inc
je
dec
inc
cmpb
mov
arpl
lret
xlat
inc
jne
pop
pop
mov
rcr
xchg
fsubs
btc
ret
mov
xchg
cmp
ffree
pop
cmpsl
push
dec
cmp
lahf
popf
fwait
lea
daa
pop
imul
sbb
xor
cwtl
inc
and
gs
int3
inc
and
inc
lahf
mov
mov
adc
push
lahf
mov
test
pop
xor
xchg
adc
xchg
fimuls
lcall
insb
cmp
mov
cld
outsl
and
jge
aas
add
ret
fldenv
inc
xor
repz
ljmp
jae
scas
or
outsl
lds
adc
jmp
js
push
leave
sub
jl
iret
cmp
shll
dec
lods
inc
push
sbb
int
inc
lods
add
mov
sub
inc
add
rorb
sar
mov
sbb
dec
int
xor
jb
xchg
push
js
cli
add
insl
inc
jecxz
dec
sub
fisubs
push
pop
cmpsb
roll
je
fcmovbe
test
shrb
jns
arpl
xor
inc
loope
aam
push
cmp
push
mov
hlt
push
jne
lock
cmpsl
sub
add
push
or
cmp
sub
imul
push
xchg
adc
dec
jb
lcall
das
shl
sub
push
ret
add
xor
popf
out
sbb
insb
arpl
sbb
mov
sbb
cwtl
lock
xor
stos
cmp
enter
outsl
ss
lea
nop
test
cmp
cmpsb
dec
push
arpl
es
rorl
and
jne
mov
pop
cmpsb
add
clc
aad
jmp
sub
jae
adc
scas
mov
mov
xor
mov
or
stos
test
jb
pop
leave
or
dec
add
pop
inc
lret
push
imulb
add
flds
xchg
xor
mov
ljmp
lret
and
cmp
inc
pop
aam
call
outsl
ret
adc
je
roll
xor
xchg
test
in
mov
imul
inc
fildl
or
aad
xchg
js
sbb
stos
add
jl
call
rorb
test
decb
fidivl
mov
xor
adc
lea
jb
or
loopne
fldl
lock
lahf
sbb
int3
fidivs
bound
out
sbb
pop
push
or
arpl
frstor
inc
inc
jne
cld
sub
mov
cmc
sbb
mov
mov
xor
mov
add
jecxz
mov
pop
mov
fcmovne
jae
in
lahf
pop
into
sahf
pop
add
gs
subb
xchg
adc
push
pop
dec
dec
sti
lcall
imul
cmp
pop
jmp
xchg
mov
add
lock
imul
cli
aad
in
es
decb
mov
push
mov
jl
push
add
addb
adc
add
ret
cs
sti
lcall
push
fcmovb
adc
xor
or
das
cmp
test
in
mov
scas
pop
gs
ds
fistps
or
out
arpl
xchg
fwait
adc
push
lahf
push
mov
adc
out
fidivrl
inc
dec
jg
shlb
xchg
clc
in
aam
test
aam
int
add
sbb
inc
cld
xchg
int
mov
jne
mov
push
aam
mov
xchg
fidivs
push
sub
pop
gs
add
icebp
xchg
dec
mov
mov
les
nop
jo
mov
or
rol
sbb
in
dec
dec
iret
pop
cmc
std
int3
pop
je
push
das
push
xchg
insb
testl
jmp
dec
push
inc
lds
cltd
and
stos
data16
ljmp
sbbb
cmpb
xchg
xchg
dec
scas
lock
adc
fcmove
fidivrl
jo
enter
sbb
jge
pop
data16
bound
mov
lret
ss
movsl
xor
xor
and
xchg
loope
mov
pop
mov
inc
dec
stos
leave
xchg
jge
aad
pop
fcmovb
push
mov
and
cmp
lret
mov
fimull
mov
rol
mov
bound
repnz
mov
loop
cmp
cmp
arpl
ljmp
outsl
fwait
sbb
imul
mov
dec
in
jb
jo
in
loope
and
and
ja
lea
mov
jg
iret
add
mov
loopne
aad
pop
xor
mov
xor
or
cmpsb
dec
mov
dec
dec
xchg
mov
data16
jle
loope
add
jbe
pop
push
clc
mov
dec
cmpsb
xchg
imul
loope
in
adc
movsb
and
fcmovnb
mov
mov
push
loope
movsb
mov
or
sti
fs
and
xchg
sub
inc
cwtl
inc
sub
outsb
aam
mov
shlb
sti
test
mov
push
lcall
adc
enter
inc
xorb
push
out
mov
mov
shll
sbb
ja
jg
out
das
popf
cmp
xor
dec
adc
push
negb
mov
xchg
jge
int
add
insb
sub
xor
fcmovnbe
push
out
pop
mov
xor
jmp
int
rorl
jg
pop
pop
loop
mov
sbb
addr16
xchg
sahf
gs
lods
jmp
add
les
xchg
mov
cmp
mov
mov
ds
cmp
fisubrl
add
repz
pop
mov
add
push
lahf
or
push
or
jnp
dec
bound
js
xchg
mov
aam
stc
into
push
cmp
es
jnp
pusha
mov
add
aas
incb
int
scas
ja
mov
or
push
ds
divb
rcll
jp
out
add
mov
xor
jge
stos
daa
dec
dec
xchg
cld
adc
push
stos
push
jmp
xlat
mov
stos
test
mov
sbb
shl
adcb
popf
lcall
xchg
aaa
test
push
into
popf
flds
xor
pop
ja
in
inc
jns
loop
adc
sub
sarl
adc
fisubrl
test
pop
push
inc
push
mov
lods
insl
xor
mov
jp
test
dec
and
loopne
test
stos
xchg
and
das
lea
sub
testl
jmp
xchg
jbe
ror
and
pop
mov
scas
mov
mov
outsl
push
jl
xchg
imul
xchg
inc
sbb
and
sbb
mov
mov
sub
adc
jns
std
scas
adc
lods
mov
xchg
mov
and
fstp
sbb
cmp
and
out
lahf
test
and
jne
mov
push
push
or
movsl
cmp
ret
mov
fcmovnbe
mov
xchg
outsl
pop
fstps
or
cmp
andb
or
je
data16
mov
je
daa
fwait
int
fdivrp
pop
stos
inc
loopne
pop
repnz
adcb
sub
std
ficoms
sbb
sbb
cmp
jbe
arpl
inc
and
mov
push
int
pop
mov
inc
fmul
xchg
jmp
pop
inc
fwait
add
filds
test
fwait
lods
aad
pusha
dec
imul
sbb
jmp
dec
bound
push
mov
and
and
div
or
js
inc
dec
mov
das
popf
into
ljmp
popf
cmp
jg
mov
fcmovnu
jl
lea
inc
aas
es
ss
inc
adc
jmp
pop
sbb
pusha
mov
leave
fstl
movsl
xor
or
out
outsl
cmpsl
mov
movsl
push
test
mov
pusha
or
into
cmp
ss
stc
push
orps
mov
cmp
dec
or
iret
popf
mov
lcall
and
popw
test
pusha
pop
insl
ljmp
add
stos
xor
mov
jns
aad
sbb
loope
jge
cmpsl
imul
subb
mov
mov
xor
xchg
jae
das
mov
mov
push
push
mov
mov
xchg
mov
or
dec
mov
sbb
gs
mov
fldenv
data16
mov
sub
mov
jp
mov
mov
cmp
out
and
fdivrl
jne
out
int3
mov
xchg
rcl
lock
out
popa
xchg
data16
jecxz
and
dec
xchg
rcrb
jp
push
mov
cld
push
xor
ret
sub
test
or
mov
cli
xchg
xchg
in
xchg
jbe
sub
shrl
and
call
sub
ljmp
call
loopne
ss
les
xor
nop
nop
add
shrl
das
loop
mov
or
add
cmp
inc
mov
stc
pop
movsb
movsl
mov
or
and
je
cld
andb
repnz
mov
pop
cmp
pop
loop
lds
scas
data16
xor
arpl
cmp
pop
shlb
sub
outsb
push
push
mov
rorl
adc
test
xlat
mov
test
push
out
pop
dec
out
mov
clc
push
lds
mov
sub
cmpl
add
nop
lret
bnd
gs
jo
bound
push
or
std
int
pop
xlat
xchg
xchg
mov
stos
mov
lods
mov
jecxz
dec
dec
pop
sub
out
push
loop
les
adc
mov
cs
add
lahf
lret
mov
int
lahf
push
fs
imul
cmp
stc
sub
into
in
pusha
imul
fs
inc
xchg
xor
mov
arpl
push
add
mov
cmp
xchg
fbld
out
ljmp
dec
or
lret
adc
lret
in
add
inc
mov
aas
jae
fs
mov
or
dec
std
call
pushf
and
and
out
cmpsl
cmp
xchg
test
movsl
orl
fisttps
arpl
stos
iret
bound
jg
push
testl
xchg
inc
lret
loop
cltd
mov
inc
inc
imul
inc
loop
add
shlb
cs
add
dec
inc
push
fisubrl
xchg
lret
in
cmpsl
jnp
mov
aaa
and
push
ds
push
int
sbb
xchg
mov
xor
xor
cmp
cld
icebp
into
cmp
pop
inc
cmp
dec
push
add
sub
cmpsl
stos
xlat
in
push
mov
push
out
inc
push
loopne
mov
sbb
jg
sub
pop
imul
cmc
mov
push
shr
ja
rcrl
xor
pop
mov
cmpsl
addr16
push
fsubrp
dec
sub
inc
lret
push
adc
fcompl
lea
test
jmp
xor
insl
inc
cmp
or
decb
adc
push
cld
push
add
pop
test
push
in
loop
adc
int3
xor
ret
mov
ret
mov
lahf
adc
lahf
je
sarb
or
sub
clc
pop
add
xchg
out
pushl
in
jns
pop
cmp
mov
jae
mov
out
fsub
jns
jecxz
std
xor
jg
xchg
lea
out
mov
add
jno
ds
pop
stos
add
add
icebp
or
dec
int3
fsubrl
imul
jge
cmpb
jo
mov
repz
loope
and
adc
mov
xchg
mov
sbb
mov
sub
out
xlat
or
out
xchg
add
fcomip
dec
push
es
xchg
add
jo
or
inc
sub
jo
jne
stc
ja
cmc
inc
enterw
xor
into
xor
push
pop
icebp
cmpsl
out
imul
xchg
cmpsb
shll
lahf
testb
add
pushf
push
rorb
jge
fs
or
enter
outsl
fistpl
inc
add
sbb
lock
mov
les
pop
fwait
add
cld
push
and
dec
mov
mov
ret
outsb
xor
mov
jecxz
aas
stos
movsl
push
sbb
lods
cmp
mov
clc
cli
push
popl
outsl
and
dec
jge
aas
xor
lods
xlat
fiaddl
ds
ja
xor
pop
inc
cmp
sub
repz
insl
mov
sbb
lods
and
shl
xlat
aaa
cmpsl
pop
les
ds
das
lods
mov
cs
ja
adc
xchg
test
rcl
repnz
out
push
sbb
daa
mov
cmc
pop
enter
pop
ss
inc
fnsave
dec
cmpsl
dec
pop
add
lea
js
inc
imul
xor
into
xchg
or
lret
add
pop
xchg
call
aam
mov
cltd
aas
mov
inc
insb
sti
pop
pushf
or
sbb
test
mov
loopne
mov
jno
lret
cmp
test
popa
dec
pop
fucomi
cwtl
shrb
lret
xor
loop
les
push
test
rorb
jb
popa
std
sub
mov
addl
iret
in
pop
les
cmpsl
sahf
fdivr
add
jmp
cli
mov
repz
or
sub
xor
mov
mov
jl
ja
pop
std
xchg
lcall
mov
xor
popf
dec
mov
sub
loope
lods
pop
mov
pop
push
test
in
mov
dec
jns
xor
shrb
inc
addr16
ja
clc
stos
ret
sbb
cmp
lret
imul
push
scas
and
outsl
scas
push
mov
clc
inc
and
cltd
adc
lods
and
shr
push
test
xor
dec
fwait
mov
shl
lock
pop
sarb
ret
shrl
fiadds
arpl
aam
andb
out
xchg
in
inc
lods
lret
or
dec
mov
and
int
gs
cmpl
or
cmp
test
fwait
sbb
xlat
sbb
add
push
mov
rorl
xor
popa
jae
adc
sbb
test
jae
and
mov
mull
ss
test
shr
bound
pop
mov
pop
lahf
push
fiadds
aad
and
lea
imul
adc
pop
ret
dec
and
lret
es
push
mov
out
sbb
or
lock
aas
sub
orl
or
mov
test
dec
push
ja
add
das
daa
imul
sbb
xchg
xchg
imul
push
sbb
add
or
jmp
pop
insb
lret
test
adc
outsb
popf
mov
subl
pop
icebp
pop
mov
shrb
jmp
mov
in
cmpl
dec
rcll
inc
or
fwait
cmpsb
add
mov
and
cld
xorb
xlat
add
dec
adc
xor
mov
popf
out
mov
xlat
adc
inc
fsts
xlat
sbb
mov
cs
mov
push
mov
pusha
bound
subb
ja
add
adc
loop
sbb
lea
fmulp
jae
add
nop
mov
xchg
xchg
mov
mov
xor
push
nop
mov
xchg
test
test
les
pop
arpl
xchg
jp
xchg
add
in
pop
out
pusha
in
pop
lds
std
bound
divb
fldenv
jbe
clc
in
and
sbb
out
data16
cmp
roll
pop
adc
in
loope
loope
mov
inc
ret
inc
xchg
cltd
and
jecxz
cld
fsts
fwait
or
inc
sbb
ret
sbbl
je
mov
push
pusha
push
aam
pop
jecxz
jp
ja
and
or
push
add
cmp
or
lahf
cltd
add
movsb
xor
std
call
mov
mov
fwait
mov
xchg
test
jecxz
in
add
xchg
test
mov
sbb
pop
xor
xor
xchg
call
xchg
or
xchg
movsb
int3
or
xlat
fldcw
lock
cwtl
mov
mov
push
repnz
jle
pop
lret
lods
mov
cmp
jle
fdiv
loop
add
mov
into
lret
cmpsb
sbb
or
jnp
jl
cs
mov
das
pop
dec
jne
imul
or
push
ja
jmp
cmp
push
mov
fistl
data16
xor
repnz
es
bound
cltd
fadds
mov
adc
dec
hlt
aad
addr16
clc
mov
out
enter
cltd
pushf
push
ss
dec
cmp
mov
add
rcl
je
movsb
xchg
pushf
iret
js,pt
out
adc
lods
mov
dec
fdivrp
or
ud1
add
pop
adc
clc
add
stos
inc
add
int
in
ss
rorb
bound
or
cmp
xchg
popa
jne
fwait
mov
imul
mov
cld
add
push
push
jl
pop
mov
sahf
shl
pushf
inc
test
daa
jle
dec
mov
sahf
mov
fmull
cmpl
cmc
jns
adc
scas
clc
ret
iret
clc
adc
add
sub
ret
or
cmp
outsb
mov
dec
fsts
mov
ds
and
je
push
pushf
mov
pop
ret
test
ja
mov
int
das
iret
sbb
cmp
ret
jo
in
fldenv
push
aas
imul
data16
pusha
pop
aam
test
xor
xchg
out
bound
shlb
daa
cs
imul
jmp
xchg
jnp
iret
sub
and
inc
ss
fdivs
stc
loope
cmpsl
jp
addr16
sbb
lea
test
mov
aad
or
sub
and
movsl
movsb
les
stc
ja
dec
or
imul
cwtl
adc
pop
cwtl
aam
out
rol
test
jnp
adc
pop
cli
pop
push
lea
mov
pop
or
pop
adc
scas
pusha
enter
cmc
pop
jns
call
push
ja
cmp
sbb
mov
cmp
mov
dec
loop
cmp
decl
xchg
in
sub
mov
xchg
fucomi
fsubs
push
jnp
dec
testb
cwtl
pop
shr
fcomps
pop
sti
xor
or
insb
and
cmp
mov
add
push
cmp
scas
cmp
out
push
or
test
jno
pop
movsb
sbb
mov
in
push
lock
stos
gs
cmpsl
cwtl
push
lock
das
sbb
out
js
outsb
scas
shlb
lahf
in
pop
xchg
and
xor
cs
arpl
sbb
movsl
jae
scas
adc
mov
mov
xor
insl
mov
cmp
outsb
push
push
mov
je
xchg
mov
xor
dec
pusha
cld
lret
dec
addb
outsb
popf
xor
dec
mov
clc
jns
sub
stc
out
lods
jg
mov
in
inc
incl
scas
sbb
push
test
jo
clc
stc
cmp
pop
mov
xchg
adc
adc
jmp
cli
xor
jl
xor
aas
gs
lret
lcall
loop
hlt
inc
or
notb
or
leave
into
sahf
test
cmc
fdivl
lock
jl
call
repz
sbb
addr16
shlb
je
adc
aaa
lret
inc
mov
xchg
and
adcb
push
leave
xchg
nop
jmp
xchg
lret
mov
xchg
gs
xor
jbe
je
hlt
pop
xor
mov
xchg
rcr
shll
sbb
lock
mov
sub
sahf
xlat
xchg
push
gs
sbb
inc
push
bnd
pop
push
daa
and
jo
in
adc
stos
xchg
push
mov
adc
cmp
or
icebp
sti
add
xor
lcall
lods
xor
or
in
int
xchg
and
xchg
xchg
fs
xor
mov
and
or
inc
cmp
jns
xor
shll
cltd
and
aas
imul
cmc
aaa
inc
int
lahf
into
or
jg
mov
push
or
loop
test
xor
inc
aaa
fmuls
adcl
bound
sub
je
dec
cmpsl
sbb
pop
scas
mov
push
push
xor
push
lock
pop
sub
dec
ja
sub
dec
mov
fdiv
loopne
test
ret
in
pusha
add
and
test
jp
xchg
xor
or
jge
sbb
rorl
jp
pop
ljmp
cmp
adc
mov
leave
cmc
loopne
mov
mov
dec
scas
push
jnp
jb
fdiv
adc
add
ret
mov
adcl
dec
outsb
das
daa
fimuls
imul
movsl
mov
adc
arpl
test
les
out
repnz
jns
mov
inc
pop
rcr
movsb
and
shl
insl
sbb
jp
lds
inc
hlt
xlat
into
ds
in
mov
sub
dec
cmpsl
and
aam
adc
mov
mov
pop
fstpl
pop
inc
cmpsl
xor
mov
mov
xor
mov
fisubrs
cmpsl
aad
push
mov
lcall
sarl
fimuls
adc
mov
cmc
data16
rorb
and
lock
scas
repz
and
repz
pop
and
js
popf
jge
out
roll
lret
into
push
dec
mov
outsl
and
cmp
mov
out
testb
mov
mov
fistl
fisttpl
or
sbb
aas
dec
jle
mov
sub
mov
repz
out
push
jmp
into
sub
out
pop
mov
or
ret
push
scas
xchg
jnp
fsubrp
lods
jmp
dec
xor
adc
dec
dec
and
clc
mov
or
jmp
push
and
hlt
adc
lahf
mov
inc
insb
in
dec
mov
je
push
aad
mov
dec
test
fadd
jo
mov
jecxz
mov
rorl
fnstsw
pop
push
incb
mov
add
sahf
jl
sbb
repnz
ret
add
mov
cmp
ds
dec
pushf
adc
add
lahf
push
pop
out
mov
sub
mov
js
and
bound
ja
add
inc
jle
xchg
lcall
std
jno
lock
shl
cmp
push
daa
test
mov
shl
mov
aam
add
sub
mov
mov
cmp
arpl
xchg
ja
rol
hlt
xchg
mov
ss
xor
adc
fucomi
xor
shl
cmpsl
inc
jns
aaa
imul
sub
xor
fistpl
push
in
outsl
mov
cmpsl
gs
test
jge
fwait
pop
insb
jns
adc
enter
xorl
pop
push
inc
and
sbb
pop
push
cmp
inc
or
adc
xchg
sub
jp
jg
lock
mov
inc
sbb
mov
in
leave
and
ja
xchg
xchg
xchg
and
nop
insb
mov
out
psllw
cmp
sub
cmp
pop
jb
out
mov
test
insb
popa
xor
lcall
aas
es
jle
fnsave
mov
mov
inc
mov
xchg
dec
dec
int3
cli
xchg
testb
test
les
ds
sbb
incl
push
in
popa
rcrb
inc
add
mov
outsb
push
sub
pop
ret
mov
stc
mov
jle
addr16
cwtl
mov
cmp
dec
sbb
repnz
mov
dec
and
sbb
pop
push
sub
repnz
jmp
pop
push
cmp
mov
loop
or
jl
jno
addr16
insl
sub
mov
adc
xchg
ja
clc
in
ret
scas
or
jne
ds
or
sub
mov
out
ja
pusha
sti
ja
ret
lea
push
adc
andb
imul
sub
jb
sbb
mov
insl
fcomps
sti
xor
mov
leave
mov
jecxz
fnstcw
inc
dec
pop
sbbb
das
popa
mov
cmp
mov
and
mov
and
cmp
daa
mov
std
mov
xlat
pop
xor
cmp
jb
mov
mov
mov
sbb
mov
lods
enter
enter
xchg
clc
cmp
cltd
jo
sbb
mov
pop
pop
test
out
fistpll
mov
movsb
jns
outsw
jmp
cmp
int3
push
cmovo
inc
int
xor
outsl
movsl
xlat
add
jl
cmp
ja
add
pop
cli
xlat
gs
and
xchg
pop
push
mov
sarb
stos
sbb
cld
data16
and
fistl
pop
aas
pop
std
sub
push
outsl
shrb
mov
mov
jl
test
push
test
cmp
add
or
or
fidivl
jo
mov
stc
jae
jno
adc
rcr
les
outsb
imul
push
jne
jb
adc
scas
mov
add
inc
fdivp
lods
jl
jmp
push
sti
jae
test
add
mov
push
inc
icebp
push
push
imulb
lret
dec
or
inc
inc
andb
std
cmpb
dec
push
xchg
add
or
xchg
shr
gs
aad
fistps
fmuls
jbe
cmp
lcall
jno
sbb
push
inc
aas
xor
cmpb
je
cli
xchg
xor
xchg
lock
mov
add
xor
pop
push
adc
outsl
lea
push
cmp
xchg
mov
jg
mov
pop
sub
hlt
pop
inc
das
cmpsb
test
outsb
jl
mov
rcl
jnp
xor
adc
shrl
dec
push
push
mov
loopne
fidivs
aad
jmp
arpl
out
jle
mov
out
inc
push
cmpsb
adc
sub
adc
inc
push
xchg
fildll
cmp
jge
loope
pop
ret
int
sarb
adc
leave
stos
shrl
jns
lret
loopne
pop
shlw
sti
jge
and
cld
lock
popf
pop
mov
dec
sbb
jmp
test
loopne
sub
xor
push
jmp
mov
in
pop
lcall
std
dec
and
mov
sbbb
jmp
push
sub
jns
pop
arpl
add
sub
xor
hlt
or
jne
fwait
dec
and
add
pop
adc
push
mov
ja
jecxz
xchg
imul
mov
inc
fbstp
test
sahf
jp
ljmp
and
inc
jb
jge
sub
push
outsb
mov
jnp
push
ja
jnp
inc
pop
or
sarb
in
push
push
icebp
mov
cmpsb
sbb
or
sbb
mov
mov
push
popf
jmp
cltd
add
mov
shl
fmull
mov
jno
outsb
sub
bnd
lods
xchg
pop
jle
rolb
outsb
mov
in
push
sti
cltd
cmp
aaa
addr16
jne
jo
imul
add
cltd
mov
cli
pop
ret
add
mov
jge
sub
lods
mov
jecxz
fwait
jmp
cmp
mov
lea
sbb
cmp
jbe
iret
cld
adcl
jmp
and
push
pop
push
sarl
and
inc
pop
notb
mull
xor
or
gs
imul
push
ss
into
out
jo
fimull
rolb
inc
push
test
mov
and
arpl
les
popa
inc
add
push
pop
stos
lret
jb
add
icebp
test
pusha
inc
mov
mov
cmp
inc
xchg
sbb
xlat
dec
fcmovnu
add
xchg
mov
inc
sub
xchg
fwait
mov
cmp
add
cltd
ficomps
test
addl
pop
inc
mov
mov
shrl
adc
imul
cmp
adc
mov
lcall
xchg
jnp
fsubrp
jl
repz
and
add
lds
imulb
xchg
and
movsb
inc
daa
repz
pop
daa
xor
loope
jns
mov
hlt
mov
mov
push
mov
sbb
sub
fcoms
mov
xchg
jle
mov
sub
nop
enter
fstp
mov
push
push
add
pop
cli
xor
outsb
cmp
scas
xor
mov
outsl
repz
mov
mov
mov
xchg
cmpsb
add
mov
sub
add
push
and
pop
into
xchg
daa
or
fwait
jmp
repnz
arpl
outsl
xorl
in
fisttpl
fmull
sub
inc
pop
addr16
loope
nop
push
sbb
push
cmc
enter
ljmp
push
jno
dec
cmpsl
pop
push
xor
or
flds
jge
loop
pop
rcr
loop
jbe
popf
pop
add
mov
mov
xor
cs
add
pop
mov
dec
push
push
fxch
and
js
and
push
add
pushf
jecxz
cmp
jg
dec
jo
xlat
cltd
je
popf
mov
lcall
push
sbb
lcall
test
mov
inc
adc
and
out
call
repz
aam
aas
mov
push
inc
fwait
sbbl
faddl
cs
jl
and
outsb
insl
push
lds
cmp
fnsave
or
fdecstp
cmp
pop
icebp
insl
mov
adc
add
or
mov
adc
dec
lock
aad
pushf
adc
divb
pop
and
das
sti
cmpl
jecxz
iret
or
mov
imul
mov
adc
mov
mov
mov
cmp
jmp
cmc
push
in
inc
icebp
repz
int
xor
nop
lea
test
and
insb
xchg
imul
push
add
pushw
jg
inc
mov
ljmp
mov
mov
jle
fadds
push
push
dec
add
inc
inc
lret
arpl
jg
mov
fnstcw
pushf
inc
xor
mov
or
iret
fstl
xchg
sbb
sub
out
mov
out
rcl
icebp
ret
cmp
out
in
adc
jg
or
or
loope
jae
cld
add
and
addr16
xchg
mov
sub
addb
jne
test
loope
jne
xor
sbbl
stos
xorb
mov
icebp
xchg
pop
stos
testl
mov
xchg
jle
mov
fsub
cwtl
cltd
push
enter
pushf
aam
iret
xchg
and
inc
xor
or
add
shll
ja
testl
mov
xchg
aas
or
dec
inc
inc
imul
cwtl
and
jmp
pop
leave
jne
outsb
inc
arpl
inc
lds
inc
lcall
sbb
adc
cltd
mov
xor
add
ficomps
iret
jne
in
in
xchg
inc
mov
inc
cmpb
out
mov
xor
rcl
mov
mov
xchg
cmp
xor
push
or
in
pop
rcl
flds
mov
or
idivl
mov
push
scas
leave
aam
iret
lds
xchg
fs
xor
cmp
test
leave
xchg
ret
ja
out
faddp
mov
shrb
adc
jecxz
inc
insl
outsb
inc
paddusb
sahf
and
fsub
insl
cmp
or
movl
insl
and
xor
fidivrl
add
xchg
sub
inc
inc
clc
adc
or
test
stos
xchg
fisttpll
jecxz
fwait
mov
xor
cmp
rcl
clc
xchg
dec
aaa
push
popa
xor
lcall
int3
icebp
lods
pop
mov
ret
mov
adc
jp
out
push
push
and
cmpsl
jmp
in
add
and
fcompl
rclb
sti
stc
cltd
xor
shlb
addr16
xor
pop
cs
cmc
les
mov
in
idivl
jnp
mov
inc
sti
jne
pop
xchg
in
shlb
in
adc
rcll
negl
cmp
push
aaa
cs
mov
pop
jmp
mov
sbb
pop
ret
dec
adc
lcall
cmp
adc
lock
rolb
mov
cmp
and
cs
lods
ja
ficoml
mull
fiadds
pop
ret
or
pop
mov
stos
pop
xchg
xor
ja
jle
cmp
movsb
xorl
add
jmp
xchg
cmp
arpl
out
les
xchg
ret
sbb
stc
call
or
popa
push
lds
cmpsb
mov
add
pop
roll
fimuls
mov
sbb
lds
loope
xchg
imul
mov
lret
into
daa
push
xchg
mov
push
and
cltd
pop
add
loope
push
fdivrs
or
ficoms
pusha
mov
inc
jmp
adc
pop
scas
push
mov
push
testb
cs
xchg
pop
mov
mov
jecxz
mov
add
mov
sbb
hlt
jle
roll
push
ss
clc
fadds
rclb
ds
jne
push
push
pop
ret
rcll
sub
mov
or
pop
into
loop
cmp
push
inc
dec
ljmp
inc
xchg
mov
imul
movsb
hlt
add
iret
xchg
jb
cmpl
jns
cmp
into
cmc
fsts
push
jge
jmp
cmc
push
jno
lds
sub
pushf
sbb
iret
out
fiadds
out
movsb
inc
mov
xchg
jne
lahf
aam
jp
cmp
lods
adc
arpl
gs
push
push
stos
mov
pop
cmp
xor
sub
mov
das
dec
mov
add
pop
xchg
inc
push
jg
ret
fscale
aas
outsl
lret
jno
or
lea
pop
cld
xor
hlt
ja
mov
adc
addr16
mov
xor
dec
fucomip
jmp
jle
outsb
and
lret
inc
jp
clc
xlat
sub
test
adc
popa
pop
aam
fiaddl
test
std
sti
cmpsb
and
aad
std
fisttpll
test
insl
push
pop
daa
mov
push
fwait
mov
xchg
mov
inc
lahf
popf
mov
int3
xchg
mov
mov
rcrl
or
xchg
mov
dec
add
mov
jnp
jle
mov
and
sbb
lods
xor
inc
jge
bnd
std
xor
mov
fwait
lds
je
add
test
gs
mov
call
mov
mov
pop
and
mov
rolb
lret
add
push
sbb
push
cmc
mov
push
dec
and
add
out
inc
xor
cmp
bound
dec
pusha
pop
fdivrl
jg
add
gs
dec
push
xchg
pusha
sbb
pop
and
sub
xchg
scas
push
insl
mov
imul
sub
ljmp
js
mov
jecxz
adc
jg
xchg
inc
sub
cmp
xchg
imul
data16
leave
push
push
lds
mov
adc
popa
push
jg
jb
jmp
inc
xchg
in
mov
or
cmp
pop
into
sub
ss
xor
push
arpl
in
daa
fdivp
test
out
jge
ficomps
or
repnz
xor
cmp
int3
push
insl
repz
adc
test
cmp
fstps
into
mov
mov
out
cmpl
push
xchg
and
jbe
sarb
loop
je
pop
in
jge
daa
insl
and
mov
dec
and
mov
inc
jmp
imul
mov
je
pop
ret
xchg
fdivr
dec
mov
xchg
dec
arpl
jecxz
dec
and
xor
cmp
lret
out
or
inc
and
cmc
adc
add
imul
push
cmp
adc
nop
outsl
mov
movsb
cwtl
dec
daa
mov
jbe
cli
aas
add
int
and
jns
jecxz
into
data16
sub
mov
inc
lock
cli
js
fld
imul
xor
dec
mov
jge
fstpl
jno
xchg
divb
dec
push
js
mov
pop
inc
pusha
test
add
or
jb
jecxz
out
jne
ret
adc
rcrl
je
ficomps
fstpl
flds
repz
pop
test
jne
sarb
sar
pop
mov
rcll
sbb
xor
push
sbb
outsb
and
insl
cmpsl
fpatan
xor
cmp
cmp
jp
inc
jnp
jo
mov
adc
iret
jnp
cmp
sub
inc
fcmove
rcll
test
add
mov
dec
sbb
lahf
sub
andl
push
mov
push
and
in
and
jo
dec
xchg
jmp
xchg
fdivrs
imul
cld
dec
mov
inc
dec
jns
pop
mov
ljmp
lahf
mov
and
push
jl
int
roll
test
inc
outsl
es
out
nop
lahf
sub
cmp
mov
inc
jo
rcll
sarl
or
lock
inc
adc
mov
ds
pop
mov
das
push
mov
xchg
cmp
xor
mov
push
push
je
push
lds
or
aam
or
xchg
xchg
test
int3
cmp
test
stc
es
pop
and
adc
sub
cmpsl
lods
push
clc
sbb
lock
aas
mov
mov
leave
pop
rorl
sarl
sbb
xchg
jg
into
inc
cmp
push
sub
loope
lahf
xchg
aad
movsb
jmp
or
in
cmp
inc
push
mov
cmpsb
movsb
adc
jg
aas
inc
jge
mov
cmp
jle
push
out
fdivs
xlat
out
fnsave
sahf
mov
inc
aaa
leave
in
lret
sub
adc
dec
mov
lds
push
stos
or
adc
test
lds
repz
in
mov
inc
enter
xor
iret
mov
xchg
pop
add
popa
movsb
das
imul
leave
cmp
aaa
arpl
mov
das
mov
loope
inc
inc
jns
stos
das
mov
stc
xor
dec
lcall
ret
repnz
jns
add
lea
adc
pop
insl
or
or
outsb
iret
push
clc
pop
jae
test
mov
fcoml
movsb
fldcw
sarb
sbb
nop
push
adc
push
push
mov
sub
scas
mov
pop
into
push
test
imul
mov
shlb
les
data16
add
xor
shl
push
stos
loop
push
xchg
fisttps
repz
fcmovnbe
adc
repz
sbb
stos
and
test
inc
mov
out
or
push
inc
mov
out
fucomp
sub
fwait
jae
sarl
mov
into
push
cmp
add
dec
popf
and
mov
and
jg
test
sahf
fwait
cmp
jl
aad
pop
pop
ret
adc
ret
out
mov
fwait
rclb
add
ljmp
add
lock
lahf
sbb
aaa
gs
sahf
xchg
add
and
test
dec
out
shl
scas
rorl
jge
mov
lods
xchg
or
mov
in
test
imulb
js
pop
push
jns
xor
dec
jp
loope
movsb
jo
data16
sti
popf
jg
lods
popa
jecxz
sbb
inc
lret
cmc
icebp
lret
sub
es
dec
ja
pop
mov
insb
insl
fnstenv
fucomip
sbb
adc
mov
fsubrl
and
lcall
and
lea
bound
lods
and
pop
or
call
mov
cmpsb
pop
jno
cmpsb
adc
push
leave
scas
sbbb
leave
jp
aas
in
mov
and
andb
dec
sbb
fisubrl
mov
xchg
mov
sub
xchg
xor
lahf
cmp
fisubs
test
std
and
jne
ffree
inc
fwait
test
mov
iret
shlb
cmc
out
in
jns
aam
ljmp
leave
sub
adc
xchg
mov
add
dec
or
shlb
fldpi
sub
out
test
sub
les
sahf
call
pop
xor
mov
in
pop
lret
adc
inc
sub
cli
cmp
mov
xor
mov
inc
shll
cmp
mov
adc
xchg
jnp
ret
jge
jg
scas
sub
mov
in
fcoms
bound
data16
adc
in
nop
scas
dec
scas
lods
cmp
cmpsb
pushf
stos
ja
add
cmp
sub
sbb
sub
cmp
nop
dec
in
push
repnz
pusha
jo
lea
xor
shrb
scas
nop
xchg
add
adc
sbb
das
daa
es
pop
nop
lock
jae
add
and
mov
xorb
cmp
lods
push
xchg
xor
sub
mov
add
lcall
push
addr16
mov
or
xor
pop
or
xchg
out
outsl
cld
inc
add
add
mov
sub
push
adc
inc
mov
sbb
movsl
inc
es
push
inc
je
xchg
sub
cmp
aaa
adc
or
push
sbb
in
inc
pushf
and
das
shr
add
loopne
and
stos
mov
repnz
push
mov
cmp
mov
nop
inc
pop
pusha
cmp
daa
xlat
sbb
jae,pt
inc
stos
adc
cmp
in
les
fiadds
int3
push
inc
pop
lods
hlt
cmp
ja
out
jge
add
add
fisubrs
mov
xchg
or
lret
test
and
in
inc
or
shll
xchg
lret
dec
mov
in
mov
int3
sbb
adc
xchg
mov
jge
lods
or
scas
dec
test
scas
jnp
jl
mov
stc
jb
fs
pop
sub
xchg
mov
mov
clc
xchg
push
subb
test
ret
dec
push
lea
cmp
cld
inc
je
adc
sub
mov
xchg
xchg
mov
xchg
ret
fsubrs
pop
test
push
mov
out
add
mov
or
out
lods
loop
dec
cmp
pop
xchg
rcrb
add
fwait
lods
adc
add
add
jmp
jge
scas
sub
jbe
sahf
xor
cltd
xor
int3
fstl
int3
arpl
inc
add
stos
ds
test
inc
inc
cmpsl
repnz
xor
xor
pop
notb
cwtl
cs
sub
test
hlt
push
adc
dec
pop
adc
lods
pop
je
loop
jnp
mov
inc
clc
push
gs
xchg
jp
mov
pop
add
lahf
push
add
jae
pop
xchg
or
pusha
dec
cmp
sbb
icebp
dec
int
sbb
je
xlat
rorb
inc
roll
je
in
and
mov
or
cwtl
jno
push
jo
or
inc
and
out
xor
mov
mov
imul
push
mov
xor
push
push
mov
xor
jo
into
leave
movsl
push
mov
and
loopne
loope
mov
lods
neg
gs
pop
push
lcall
add
cld
pop
filds
and
sbb
outsl
dec
in
add
add
lret
sbb
shll
insb
adc
inc
cli
adc
loopne
mov
loop
popw
outsb
jmp
push
inc
scas
ljmp
dec
sbb
pusha
xor
enter
movsb
mov
fbld
inc
adc
int
mov
cs
in
fwait
mov
icebp
mov
sbb
cmp
fwait
mov
sti
das
jg
fildl
sbb
add
sbb
in
out
and
ret
jle
pop
out
push
jmp
jnp
dec
cmp
in
jp
mov
jne
dec
fwait
and
mov
or
popf
adcb
pop
mov
and
cmp
mov
pop
mov
ja
xchg
test
adc
cltd
fwait
add
sub
hlt
in
cmp
jnp
jle
andl
loop
ss
mov
inc
fnstenv
mov
popf
jb
add
dec
sar
sub
mov
loopne
jo
cmp
fwait
cli
ljmp
adc
andb
adc
dec
mov
enter
cld
jo
mov
es
hlt
iret
pop
dec
lds
jp
sub
sbb
mov
sbb
cmp
test
xor
mov
fcmovnbe
xchg
mov
cmp
jp
cli
jecxz
rcrl
repz
jle
push
adcl
cmp
dec
push
dec
sub
jnp
fstpt
popf
cltd
xchg
pop
and
xchg
mov
or
xor
mov
fisttps
pop
xchg
sahf
in
add
push
out
cltd
dec
add
cmp
cmp
imul
xchg
push
adc
mov
je
sub
andb
inc
hlt
mov
cwtl
pop
fdivr
cmpsb
daa
lods
in
dec
xor
push
pop
jbe
sbb
pop
ljmp
adc
fdivl
mov
xor
push
add
notl
sbb
loopne
in
aas
cs
or
jle
and
aas
sbb
js
sub
cld
xlat
repz
jbe
xchg
or
mov
add
lea
ljmp
mov
leave
std
push
mov
ror
xchg
mov
sti
orl
jo
pop
dec
pusha
loope
imul
jle
and
jae
jo
and
clc
jns
or
std
or
mov
sub
sub
into
out
shll
push
xor
stc
add
pop
xorl
lods
add
xchg
cld
and
lcall
fisttpl
stc
dec
jp
aas
inc
into
lods
xchg
cmp
pop
and
shll
mov
dec
je
test
clc
fs
rcrl
cs
loop
hlt
add
stos
inc
and
mov
out
arpl
and
dec
or
and
sti
dec
jbe
adc
loop
mov
xchg
insb
les
push
jns
mov
in
add
pop
pop
dec
in
mov
cltd
mov
fdivl
fs
das
icebp
sbb
xchg
sbb
test
lret
mov
add
fs
cmp
insb
and
jbe
xchg
pop
inc
icebp
inc
mov
or
test
inc
in
je
cmpsl
dec
mov
inc
cmp
add
add
pop
xor
lds
mov
int
insl
out
lret
and
cli
ds
std
inc
int
sbb
push
xlat
int3
mov
lcall
out
fidivrl
cmpsb
dec
je
lcall
lds
test
nop
add
das
into
adc
dec
das
pop
call
mov
rcrl
dec
and
sti
mov
addb
shlb
in
gs
stc
nop
push
repz
lret
int
inc
pop
mov
test
sub
mov
rcll
insb
sti
inc
mov
cmp
scas
aad
inc
mov
ds
mov
xor
cmp
mov
push
dec
mov
mov
add
or
pushf
sbb
fdivrs
dec
mov
sbb
push
adc
addr16
pop
sbb
pop
lret
scas
repnz
mov
lock
mov
push
jnp
and
add
sbb
jl
js
jno
xchg
mov
lock
loope
mov
push
fsubrs
cmp
pop
lcall
cmp
sbbb
sub
test
repnz
pop
cmpsb
mov
lahf
rorb
mov
nop
cmpsb
push
mov
sub
add
or
xchg
stc
mov
push
cltd
jae
xchg
outsb
jg
pop
adc
movsb
push
pop
push
xchg
mov
jne
aaa
mov
cmpsl
inc
pop
aas
add
mov
ds
dec
cmp
rorl
mov
inc
xor
movsb
push
inc
leave
mov
shll
sub
insl
jl
push
mov
mov
mov
adc
mov
bound
out
lock
mov
pop
xchg
jg
test
xchg
or
jl
dec
jg
xchg
ds
mov
and
mov
and
add
add
xchg
arpl
dec
std
inc
xor
popa
icebp
pop
xchg
imul
ljmp
pop
pusha
in
cwtl
jl
addr16
lods
inc
and
jl
push
mov
pop
out
stos
or
aad
rcll
xor
clc
xor
and
pop
jae
lods
jecxz
repz
clc
lea
cmp
sub
or
aaa
push
negb
xor
dec
mul
mov
imul
fldcw
mov
add
jecxz
push
imul
pop
add
into
jl
stos
arpl
push
lahf
addb
pop
repz
pushl
mov
cmp
and
mov
xorl
stos
fs
dec
call
cmp
fmuls
sbb
mov
ror
push
pusha
cmpsb
inc
test
mov
cmp
in
xor
inc
ret
call
mov
daa
dec
ja
ljmp
inc
xchg
imul
mov
mov
sub
out
fldcw
push
dec
jecxz,pt
sub
sbb
lods
sbb
in
jg
adc
or
push
pop
mov
jo
xor
cmc
addr16
imul
add
dec
inc
mov
imul
addl
cmp
or
cmp
pop
in
cwtl
dec
orb
dec
cmpl
rcl
bound
cs
ds
test
movsl
add
inc
aad
mov
push
push
xchg
call
dec
sub
inc
je
and
into
push
mov
xchg
mov
jmp
call
sub
inc
lcall
daa
cs
ja
mov
adc
xchg
inc
or
shr
arpl
mov
adc
mov
mov
ds
clc
inc
movsb
mov
test
inc
rorl
testl
xchg
icebp
pop
and
pop
xor
cmc
push
xrstors
pop
pop
dec
mov
sbb
sbb
leave
xchg
je
pop
pop
scas
cmp
jo
push
aaa
lret
daa
adc
add
dec
mov
dec
xlat
pop
aam
mov
sub
aaa
push
daa
sbb
addr16
ds
loop
rol
out
add
pusha
sbb
pop
aam
adc
in
xchg
into
leave
xchg
aaa
dec
dec
test
std
rcll
rolb
sub
jl
mov
dec
or
repz
push
je
push
xlat
pop
push
orl
aad
mov
cmp
mov
sahf
imul
es
lcall
dec
addr16
jb
jo
aas
mov
stos
sub
push
lods
add
sbb
push
leave
sub
push
arpl
imul
cmpl
gs
pushf
in
sub
lea
das
int
pop
aas
in
adc
int
std
cli
jo
out
xlat
lcall
add
inc
jecxz
loopne
mov
scas
inc
pusha
sub
es
addl
fs
adc
xchg
outsl
das
lahf
inc
fmul
jg
out
jb
scas
aam
mov
inc
and
or
add
cmpsb
fs
dec
aad
cmp
cmp
lds
mov
stc
std
mov
xchg
jmp
inc
jnp
push
stos
test
xchg
jle
int3
pop
dec
xchg
aaa
outsl
insb
pop
sub
stc
imul
or
leave
lret
rcrb
lret
dec
jecxz
sti
ja
mov
ret
pop
dec
mov
push
pop
mov
int3
or
dec
mov
js
lea
in
cmp
sub
or
and
and
aas
dec
sub
add
mov
push
jg
stc
insl
adc
or
es
cmp
ja
or
jb
xchg
add
xchg
scas
inc
add
push
scas
xchg
das
je
xor
push
mov
jmp
push
xchg
adc
in
ret
rorl
add
int3
and
scas
sub
xchg
fisubl
inc
leave
rcr
aam
cmp
and
push
xor
popf
insb
dec
clc
iret
imul
mov
imul
and
aam
das
out
leave
add
int3
or
cmp
sbb
sahf
xor
dec
xchg
imul
and
rorl
jg
ret
push
mov
aas
fidivs
jl
xorl
sub
mov
pop
sahf
dec
sub
jg
pop
mov
pushf
iret
mov
stos
jnp
scas
shll
cltd
mov
mov
dec
cmp
mov
pushf
test
sub
ret
icebp
sub
iret
call
lock
enter
in
xchg
mov
inc
fisttps
mov
lahf
pop
inc
or
aaa
aad
add
rcrb
xlat
sub
push
inc
addb
out
dec
jg
das
or
jb
jb
fwait
push
imul
mov
scas
cmc
push
test
outsb
rorb
repz
inc
mov
ss
scas
xchg
test
mov
and
pop
xchg
sub
pop
std
xchg
push
outsb
mov
loopne
fs
idiv
or
pop
fidivrl
xor
mov
es
lds
das
push
leave
xchg
add
sti
jne
stos
or
pop
movsl
xor
jns
mov
ficoml
ret
lret
push
jg
mov
dec
outsl
pusha
jmp
sti
icebp
cmp
push
movsl
sub
lods
or
popf
aad
push
xchg
xchg
xor
mov
sbb
pop
rorb
dec
xor
xchg
add
mov
and
into
lret
xor
xchg
sbb
cmp
dec
jnp
imul
ds
icebp
repz
sahf
and
jnp
pop
mov
xchg
jle
xchg
movsl
xorl
dec
adc
adc
repnz
sub
imul
mov
insb
fs
xchg
call
add
pop
cmp
int3
or
cltd
lds
sbb
add
shll
push
sbb
cmpsl
xor
popl
pushf
xchg
lcall
loopne
jg
pop
pop
lcall
rolb
fsts
js
lret
daa
mov
mov
add
nop
xchg
sar
dec
aad
mov
mov
dec
scas
fwait
imul
add
out
in
mov
mov
clc
repnz
push
sbb
and
rol
mov
and
pop
fwait
push
enter
orb
in
rclb
or
xorb
aam
ja
xchg
jecxz
add
add
mov
testl
xor
scas
test
lcall
addl
adc
jo
inc
inc
mov
add
adc
add
int3
cmc
cltd
jg
add
or
mov
cli
mov
mov
cmp
sahf
mov
pop
les
pop
jmp
aad
lret
pop
xlat
scas
pop
xchg
stc
cmp
push
daa
mov
ret
mov
cwtl
sbb
das
stc
stc
pop
insl
mov
lock
sahf
daa
fs
pop
xor
jge
outsb
test
mov
push
lcall
ret
jne
scas
sbb
scas
dec
mov
mov
dec
pop
mov
leave
or
pop
out
jae
push
pop
scas
addr16
inc
out
fs
in
nop
jecxz
in
loope
and
loop
out
add
sahf
repnz
or
adc
dec
rcrb
mov
push
push
stos
push
xchg
aas
mov
cmp
stos
or
or
out
dec
push
dec
jno
iret
fwait
leave
or
ret
sub
adc
xchg
push
leave
loope
xor
iret
les
pop
cmovns
ret
jno
mov
adc
ror
mov
or
outsb
jl
push
stos
inc
adc
fldcw
mov
pop
mov
jno
xor
cmp
daa
out
dec
dec
ret
push
push
xor
sbb
xor
lock
adc
and
popa
push
stos
ret
mov
sbb
iret
mov
or
pop
add
pop
jmp
arpl
data16
iret
lods
jmp
dec
in
inc
lcall
inc
ljmp
push
ja
adc
stos
sbb
mov
lods
push
pop
push
fcompl
dec
int3
std
mov
fisubs
sbb
mov
inc
dec
lcall
imul
mov
push
pop
das
xchg
or
jnp,pt
cltd
mov
mov
dec
lret
popa
rcl
mov
jbe
sub
adc
pop
cmp
pop
rcrl
mov
dec
cltd
test
push
mov
cld
inc
adc
and
int
cmpsb
jae
jnp
mov
pop
jae
dec
cmp
shlb
testb
sub
cmp
push
nop/reserved
cli
add
pop
xchg
ljmp
pop
pop
mov
mov
cmp
fcmovnu
frstor
mov
loope
call
push
xor
pop
std
mov
mov
xor
xchg
scas
scas
xchg
fwait
xor
int
jae
std
and
popf
dec
aaa
sub
fstps
js
hlt
mov
dec
pop
divl
cmpsb
mov
mov
loopne
xchg
push
push
xor
pop
inc
add
popl
aas
out
sub
icebp
push
push
cwtl
out
xlat
push
imul
out
add
cmpsb
fists
sbb
mov
add
mov
adc
adc
fstpl
unpcklps
inc
or
lcall
aam
outsb
mov
xchg
lock
cmp
repz
push
lcall
js
inc
cmp
adc
sub
dec
cli
pop
inc
out
lahf
ret
je
ret
imul
repz
jns
scas
repz
aam
pop
cwtl
popa
cmp
ds
lret
mov
add
inc
pop
int3
or
scas
into
sbb
or
std
push
leave
pushf
icebp
loope
inc
xor
jns
ds
or
and
inc
xchg
xchg
adc
or
into
sbb
sub
push
pop
lea
aam
out
jl
cmp
popf
lret
mov
adc
inc
sub
in
and
cltd
cmp
test
jnp
hlt
lods
add
pop
ja
roll
xor
fmulp
std
or
inc
out
pushf
mov
add
lods
mov
inc
jge
into
hlt
and
out
lods
movsl
in
addr16
jne
sub
dec
movsl
sub
xlat
push
ja
or
cmp
xor
inc
jge
xchg
mov
mov
sub
mov
stc
dec
scas
js
xlat
mulb
aas
aaa
pop
out
cmc
decl
inc
and
pop
sub
xor
repnz
pushf
rcrl
xchg
push
lret
shrl
pop
ret
das
repz
lds
addl
cmc
stc
rcll
loop
jge
ss
je
or
repz
insl
mov
sub
sbb
daa
and
mov
inc
pop
ror
cmpsb
cmp
shlb
pop
jo
xchg
xchg
sub
int
ljmp
jbe
sub
cmp
int3
xchg
out
push
cmc
out
pop
ret
dec
jbe
jp
add
out
jmp
pop
out
orb
push
mov
inc
jbe
xor
into
enter
in
nop
pop
hlt
push
call
mov
sti
vpcmpuw
push
inc
fistl
outsb
xchg
insl
popa
cmp
xor
pop
ret
data16
inc
xor
mov
adc
xlat
pop
xchg
pop
cli
lret
movsl
stc
mov
jp
inc
repz
out
insl
mov
or
pop
mov
sbb
rcrb
jp
cmp
pop
push
or
addr16
jmp
fstps
push
mov
sbb
addr16
hlt
pop
jnp
xchg
mov
mov
add
scas
inc
push
adc
sbb
pusha
sub
fsts
and
out
cmp
pop
in
xor
mov
iret
mov
mov
cld
pop
xchg
inc
neg
pop
outsb
mov
flds
add
push
sbb
adc
enter
repz
inc
es
mov
adc
xor
ja
sub
push
xchg
cmc
cltd
outsl
loope
mov
lahf
cmc
subb
aas
mov
imul
mov
arpl
mulb
cmp
fs
cli
pop
imul
inc
lods
dec
dec
and
cmp
mov
pop
push
cltd
in
and
int3
jne
xor
mov
cmp
ss
subb
mov
jae
lahf
shll
xor
aaa
adc
sub
push
cmc
incb
arpl
jmp
leave
jle
jle
or
xor
fstps
xor
xchg
push
divb
shlb
xchg
push
sub
stos
orb
pop
andb
or
mov
je
inc
mov
jae
pop
jge
test
mov
sbb
xlat
pop
xchg
push
sbb
into
popa
lahf
fimuls
aam
mov
scas
iret
mov
mov
lahf
xchg
sub
ja
cltd
movsb
adc
das
sbb
dec
inc
cmp
mov
jecxz
jmp
imul
ror
insl
mov
push
sahf
jmp
xchg
fs
or
cli
dec
push
jbe
add
scas
inc
into
es
sbb
insl
clc
andl
jge
divl
or
sbb
xchg
sub
dec
jnp
inc
repnz
jl
popf
fistps
fs
cs
std
xorb
pop
add
cltd
sbb
add
test
roll
fstps
fcmovnu
mov
mov
stc
clc
aaa
lret
dec
xor
or
xor
loopne
mov
gs
mov
jno
mov
adc
pop
fwait
push
stos
mov
pand
or
mov
in
test
sub
daa
cmp
data16
out
push
stos
dec
addr16
dec
out
ja
int
jb
into
aaa
mov
add
push
stos
loop
js
es
cmp
andl
or
inc
sbb
test
sti
lret
mov
out
repnz
push
cmp
leave
lods
xor
lret
shl
adc
add
mov
sub
fisubrs
aas
and
inc
fsubs
jmp
mov
stos
pop
insl
test
call
adc
std
sarb
outsb
dec
jae
inc
push
pop
xchg
jmp
sbb
mov
negl
mov
and
mov
xchg
int
inc
fisubrl
inc
ror
pop
pop
addb
jmp
jno
or
jns
insb
jne
rorl
cmp
pop
cmpsl
mov
pop
sub
inc
jge
inc
adc
mov
fiadds
mov
pop
add
loop
jbe
or
ds
test
pop
adc
mov
aaa
in
adc
imul
lret
fwait
cmpsb
push
jbe
testb
aas
cld
or
push
aaa
jge
cmpl
cmpsb
fldenv
xchg
stc
sbb
adc
or
push
push
es
and
pop
dec
data16
or
add
jnp,pt
and
hlt
aam
clc
inc
out
fs
jno
lock
add
into
or
mov
adc
pushf
mov
cmp
jg,pn
mov
xor
pop
xchg
mov
ret
mov
movsl
mov
in
mov
inc
jns
enter
push
dec
push
adc
stc
adc
aaa
test
sub
jl
das
stos
jecxz
mov
pop
ds
int3
test
pop
ret
pop
mov
nop
in
andb
xor
popf
sbb
enter
mov
inc
cli
inc
cmp
push
mov
cmpsb
cmp
mov
mov
lods
xor
mov
jmp
fsubrs
adc
sub
inc
inc
call
inc
pop
lret
icebp
xchg
std
pop
int
mov
pop
add
lcall
sbb
or
fidivs
stos
push
xchg
jg
sahf
popf
jae
add
inc
scas
inc
or
pop
loopne
dec
aas
rolb
or
test
adc
push
jb
int3
pop
xchg
cmpsb
sahf
inc
arpl
in
ja
push
mov
sub
mov
push
add
es
xor
push
fs
loope
xchg
mov
fbstp
dec
sub
sbb
xchg
mov
jge
mov
test
xchg
cmp
shl
or
lock
dec
loop
std
cwtl
cs
add
stos
jge
cmpsl
loopne
hlt
adc
into
cmp
and
enter
jae
push
cld
adc
pop
cmp
xchg
jns
test
or
jl
out
mov
idiv
adc
jnp
push
cmp
popl
push
pusha
ljmp
push
popa
std
sbb
outsl
xor
xor
test
cltd
outsb
or
loope
mov
test
xchg
jns
push
mov
int
adc
stc
imull
arpl
add
dec
dec
sti
sbb
xchg
xchg
jp
mov
cwtl
cltd
cmp
into
pop
sub
mov
pop
sarb
rorb
gs
fmull
dec
add
or
mov
in
mov
mov
and
test
cmpl
into
adc
adc
aad
mov
imul
pop
pusha
cmp
lds
mov
lcall
jge
mov
pop
push
enter
js
push
inc
or
in
inc
loop
jp
mov
cmp
in
jbe
xchg
dec
pushf
lret
push
mov
rcrl
pop
loopne
mov
ljmp
dec
rcrb
in
test
sub
mov
cwtl
lret
cmp
jae
mov
std
mov
rorb
dec
adc
fnstenv
mov
rclb
outsb
inc
mov
sbb
fstps
dec
push
int
cltd
jb
mov
pop
sbb
test
jmp
popf
sbb
rcll
cmp
push
xor
addl
pop
cmpsb
mov
push
jbe
fisubrl
std
xor
xchg
sbb
xor
inc
sub
xchg
mov
into
xor
xor
pusha
sbb
xchg
xor
mov
mov
jp
cmp
xchg
mov
outsb
aad
pushf
lods
fwait
js
imul
sbb
push
sbb
inc
test
jmp
roll
adc
or
or
lcall
pop
jne
sti
test
into
push
jl
inc
xchg
jg
sahf
xchg
lret
inc
stc
adc
xor
cwtl
subb
sub
fiaddl
loope
or
cmp
inc
scas
dec
inc
orb
lds
and
stos
call
add
and
out
leave
mov
or
pop
mov
shr
jp
mov
push
cmp
lahf
pushf
enter
pop
out
sbbb
and
ficomps
shl
jno
loop
rolb
fldt
xchg
mov
and
mov
insb
test
mov
dec
daa
mov
mov
add
push
cmp
das
movsb
add
sub
out
add
arpl
pop
push
or
insb
repnz
sbb
loop
scas
insl
sub
jp
out
dec
adc
sbb
push
pop
loope
adc
xchg
lret
dec
push
xor
jecxz
sub
mov
cs
push
roll
xchg
pop
pop
popa
fiadds
dec
xor
jbe
jp
sbb
aaa
popf
mov
inc
shlb
in
push
pop
daa
mov
mov
sbbb
mov
or
mov
jmp
inc
test
inc
movsb
hlt
in
push
sub
xor
call
cs
mov
push
cmp
frstor
mov
xor
mov
xor
aad
mov
lods
sbb
dec
jne
push
rcrb
shll
xlat
sbb
bound
mov
or
repnz
adc
aad
int3
and
hlt
jg
jb
xchg
add
cmp
cmp
out
rcrl
mov
push
dec
cmpsl
into
push
lahf
in
punpckldq
popa
mov
aaa
mov
pop
inc
hlt
leave
or
hlt
mov
pop
imul
adc
mov
push
jg
or
sti
stos
sub
dec
cmpl
xchg
inc
punpckhdq
push
and
xchg
mov
xor
mov
icebp
adc
mov
dec
jno
mov
cltd
aad
cmp
mov
and
jl
pusha
loope
cmpsl
add
xchg
pusha
int3
push
push
addr16
dec
stos
divb
push
aam
pop
mov
sbb
jo
adc
ds
insl
in
fcomp
mov
or
call
mov
push
mov
popa
push
ret
pop
xchg
dec
mov
icebp
inc
test
rcrl
jmp
mov
push
inc
and
xchg
insl
mov
adc
pop
rol
sbb
jecxz
fxch
add
xchg
push
xor
lahf
es
shl
pop
inc
dec
cmpsb
fldcw
sub
in
mov
mov
and
xchg
into
jge
call
pop
in
add
xchg
lds
cmp
mov
stc
mov
daa
ljmp
mov
push
xor
xchg
das
mov
mov
sahf
adc
jns
clc
imul
fisttps
scas
lock
add
dec
sub
aad
lcall
sti
cltd
aad
mov
repnz
sbb
jmp
sub
lock
mov
xchg
aam
shll
cmc
inc
pop
mov
xor
xor
mov
jmp
lret
sbb
std
stos
stos
mov
adc
jmp
arpl
inc
xlat
jle
mov
jle
sar
xor
mov
stos
push
xchg
pushf
mov
push
outsb
flds
mov
xorl
jo
fistps
pushf
xorl
xchg
push
in
aad
push
push
es
adcb
and
call
jb
adc
cmp
inc
mov
mov
dec
ljmp
sub
in
or
jae
mov
mov
add
pop
outsl
jae
clc
mov
pop
stos
pop
adc
sub
sahf
gs
into
sub
push
or
cmp
mov
push
jne
and
cmpsb
pop
orl
cmpsl
mov
jno
mov
imul
insl
movsl
push
sub
and
sub
scas
add
adc
xor
dec
or
shlb
fs
movsl
inc
push
arpl
lret
stos
sbb
add
mov
push
jae
mov
jg
lods
fcompl
cmp
xor
outsb
dec
mov
int
in
mov
add
and
ficoms
xchg
mov
stc
int3
mov
jno
pop
shlb
sarb
pop
js
repz
cmp
adc
push
push
mov
pop
push
sahf
in
nop
rcll
cltd
mov
cmpxchg
mov
sbb
xchg
xchg
pop
inc
out
sub
push
mov
add
movsl
sub
dec
xchg
sub
inc
dec
sbbb
outsl
sub
xlat
negb
sbb
sti
mov
lret
or
adc
xor
int3
mov
lahf
mov
out
pop
xor
dec
in
fisttps
xchg
mov
jo
sbb
jbe
sub
dec
inc
add
sbb
xchg
inc
je
pop
cmp
add
or
sub
cltd
sahf
jnp
mov
aas
in
pop
sbb
mov
mov
aam
int3
inc
push
fwait
dec
xor
add
cmc
and
pop
sub
cmp
push
enter
cld
inc
repz
pop
inc
loope
hlt
xor
dec
cmpsl
cmp
mov
lods
ret
lock
dec
js
test
jns
dec
push
leave
xor
jo
cmp
cmp
loopne
jns
push
and
arpl
test
shlb
cwtl
jae
ret
roll
push
xchg
push
add
jo
sbb
dec
ds
addb
inc
nop
xchg
shrb
in
leave
mov
xor
arpl
insl
dec
mov
loopne
testb
es
loopne
test
sbbl
adc
fisttpl
ds
or
cmpsb
out
push
shl
mov
rolb
js
dec
shrl
add
add
enter
jle,pn
push
mov
xor
fidivl
shrl
and
pop
popa
mov
ljmp
pushf
add
testb
xor
cmpsl
repnz
lcall
xchg
xor
mov
inc
xchg
pop
cmp
ss
xchg
sub
push
jmp
in
dec
enter
out
shl
and
jge
fistps
clc
ljmp
push
nop
jb
es
adc
loop
rorl
xor
call
jo
out
ret
cmp
push
or
ret
mov
or
mov
aaa
cmp
adc
ja
hlt
loop
clc
lret
cmp
pop
mov
addr16
pop
jb
iret
mov
sarl
into
mov
das
aam
sbb
ljmp
sub
adc
and
cmp
and
cmpsl
mov
dec
hlt
mov
pop
pop
popa
imul
dec
test
add
lret
in
cli
popf
xlat
outsl
sbb
aas
inc
lods
xchg
jge
ret
xchg
iret
das
aad
mov
ja
adc
xchg
push
push
add
dec
in
xchg
pop
and
imul
jb
lret
mov
aas
or
in
jecxz
mov
fstpl
vxorps
dec
sti
sub
cwtl
push
xor
imul
pop
cmp
enter
in
pop
stos
dec
cmovp
and
adc
outsb
sbb
pop
pop
dec
stos
xchg
loopne
and
mov
test
sti
dec
in
frstor
jo
fmuls
sbb
adc
dec
into
jle
div
add
cltd
rcll
adc
pusha
sbb
aad
pop
cmp
leave
and
adc
sub
and
jp
pop
add
or
test
adc
cmpsb
inc
jmp
push
in
dec
fdiv
inc
cmp
loopne
movsb
cli
lds
out
test
in
lret
xchg
xor
sub
jg
xchg
cld
jge
push
dec
in
mov
mov
mov
fsubrl
jne
mov
sub
loop
pop
lods
data16
mov
inc
outsl
add
in
or
je
lahf
or
imul
xchg
fidivrl
push
into
call
cmc
pop
jmp
jb
pop
pushf
cmpsb
xor
sub
lret
sarl
fisubl
sarl
xor
in
mov
mov
icebp
or
mov
insl
sbb
ss
xor
adc
movsb
mov
jne
and
dec
inc
fst
adc
or
adc
arpl
je
call
sub
loopne
fildl
pop
push
add
xchg
mov
lods
jg
rolb
sbb
inc
xor
lock
mov
or
je
dec
lahf
lds
mov
fdivrl
test
adc
fwait
mov
or
push
lahf
xor
xor
xchg
ja
sub
mov
mov
ret
mov
cs
nop
testl
cmpl
pop
add
out
cmp
lea
or
std
enter
sti
loopne
mov
shlb
mov
clc
arpl
mov
mov
sbb
xorl
adc
mov
add
fstpt
sbb
xor
cmpsl
and
xchg
jo
out
lods
push
les
stos
call
int
adc
mov
or
gs
aad
subb
or
cmp
xchg
mov
loope
insb
or
cmp
add
dec
ja
sbb
rorb
int3
test
jp
sahf
aaa
cld
sbb
jbe
mov
sahf
mov
es
jecxz
dec
pop
out
dec
jg
push
pop
stc
insl
sub
dec
stos
aas
gs
rcll
xchg
inc
dec
negl
cwtl
divb
cltd
enter
mov
test
mov
push
mov
mov
out
xor
pop
mov
sahf
inc
les
aaa
sub
imul
fmuls
jbe
push
inc
or
sub
popf
loope
mov
mov
sbb
push
int
lds
out
pop
jb
out
enter
shlb
into
cmc
mov
inc
push
and
icebp
ds
test
mov
lods
xchg
loop
lret
cmpsl
andb
loopne
ret
jno
mov
cmp
lds
add
fistpll
xchg
jl
adcb
lds
fnstcw
addr16
xchg
fadds
imul
mov
mov
daa
jo
cmp
fidivrl
jne
mov
push
or
lret
popf
lcall
rolb
pop
add
adc
push
hlt
int
imul
int3
lahf
lods
mov
or
push
das
das
mov
or
cld
fadds
gs
ret
pop
repz
jo
sub
icebp
mov
stos
fs
pushf
setl
or
roll
scas
mov
scas
mov
inc
add
flds
aad
ret
inc
ret
insl
push
cmpb
adc
xchg
mov
dec
fcoms
call
fcompl
jge
or
hlt
gs
mov
fimuls
shlb
mov
or
lret
push
xchg
sbb
lahf
stos
dec
lods
stc
adcb
mov
pushl
pop
call
mov
xchg
call
mov
movsl
loopne
sarw
add
jb
inc
xchg
in
jg,pn
gs
inc
xor
mov
lods
adc
jle
sti
cmp
lock
test
lock
cmc
fmul
sbb
aam
xchg
mov
xor
fsub
cwtl
outsb
les
add
or
sahf
in
mov
lea
sub
mov
test
inc
loop
jae
shll
dec
cmp
adc
xchg
pop
cmp
mov
popf
sbb
sarl
jae
loope
jbe
movsl
cld
push
jmp
add
mov
or
lret
mov
push
xchg
je
insb
push
test
popf
xchg
sbb
xchg
mov
orl
push
arpl
cmp
or
movsl
sbb
int3
lret
adc
testb
movsl
dec
mov
mov
es
push
inc
into
aaa
cltd
out
stc
xor
aad
mov
xchg
test
pusha
push
mov
lods
pop
xor
popa
inc
push
sti
xchg
lods
xor
lret
add
xor
xor
jp
mov
push
mov
push
sub
add
arpl
mov
aas
xchg
add
push
xor
cwtl
pop
fistpl
insl
sbbl
mov
push
mov
push
mov
push
jp
fisubs
fidivl
mov
pushf
pop
sub
mov
and
mov
mov
jnp
cmp
movsb
hlt
into
addb
adc
cmp
push
les
cli
sbb
xor
cmpsb
fldt
jno
xchg
cltd
js
pop
pop
dec
jns
clc
cld
and
lea
test
jns
out
or
fildll
lds
mov
lcall
int
mov
mov
sub
jnp
stos
jbe
xor
out
stos
popa
mov
sub
fstps
jg
jns
inc
aam
lcall
xor
pusha
sub
popa
xor
cmp
loop
xor
mov
and
add
pop
xor
notb
sbb
jge
ffreep
fsubs
dec
or
mov
xchg
adc
push
lahf
lret
and
cmc
pop
icebp
jbe
inc
xlat
lea
or
jns
stc
sbb
jp
sbb
pop
inc
xor
mov
mov
fbstp
jo
sub
test
sub
adc
mov
mov
jo
je
int
std
fst
lret
sub
frstor
pop
xor
call
sbb
out
movl
ret
out
sbb
dec
fistps
pop
xor
testl
xchg
xor
mov
arpl
ret
repnz
pop
repnz
addr16
adc
dec
js
mov
mov
jns
dec
fmull
jmp
dec
pop
popf
adc
cmp
sbb
ds
outsl
cltd
lods
sub
push
jno
punpcklbw
jb
jns
lahf
push
aam
fsts
adc
inc
inc
push
call
pop
mov
pop
hlt
inc
js
jno
and
pop
cmp
push
or
ret
jb
sbb
or
xorb
dec
mov
fistl
pop
add
je
mov
and
pop
mov
mov
outsl
js
shl
das
push
cmpl
xchg
pop
cli
fs
je
mov
movb
je
lea
jle
mov
xor
or
mov
aaa
dec
pop
std
mov
hlt
sub
mov
mov
jge
sbb
mov
cmp
sub
push
stos
and
leave
pop
imul
int
or
shrd
or
jmp
js
xlat
push
test
pop
mov
hlt
jle
mov
icebp
mov
sub
cltd
loopne
mov
mov
xor
fwait
lahf
mov
scas
add
mov
adc
data16
das
faddl
and
popa
sbb
andl
je
sub
in
loop
aam
jbe
fs
adc
daa
imul
adc
into
test
mov
dec
jns
cmp
mov
jmp
jl
pop
aas
mov
xor
int
int
jg
idivl
pop
cwtl
xchg
sub
add
nop
inc
add
ja
push
clc
in
in
add
pop
aaa
es
mov
xchg
mov
jp
cmp
dec
in
jbe
adc
je
cmp
movsl
leave
std
xor
fstps
outsl
fdivrs
push
or
pop
cmpsb
cmp
push
gs
jp
push
cs
cmpsl
xchg
jl,pn
dec
xor
push
cmpsl
mov
shll
adc
xchg
pusha
xor
ret
inc
mull
ret
add
dec
xlat
jg
dec
mov
sub
push
or
mov
mov
iret
or
rclb
and
and
sub
push
pop
mov
test
int
jne
inc
mov
push
repnz
jno
mov
mov
ret
mov
jmp
sarl
jno
push
ljmp
repnz
loope
xlat
inc
in
or
xchg
imul
mov
aas
jle
pop
push
dec
push
lds
xlat
adc
push
je
adc
outsb
add
pusha
bound
mov
pop
daa
push
add
push
shll
lds
sahf
jecxz
orb
mov
mov
arpl
call
jns
lods
jnp
fisubrl
addr16
push
lret
les
adc
pop
rclb
push
push
push
outsb
cltd
mov
push
push
fstpl
mov
mov
shlb
push
jae
and
gs
pop
dec
or
xor
xchg
and
push
mov
call
or
imul
sbb
fstpl
lahf
test
mov
lret
xchg
pop
inc
sub
mov
out
mov
test
mov
jnp
cmp
xor
fwait
lcall
cmp
ret
lret
imul
cmp
fsubl
push
jne
iret
push
inc
and
enter
mov
pop
jmp
xor
lahf
clc
hlt
cli
push
sbb
xchg
into
fwait
jnp
into
arpl
mov
fdivs
push
sbbb
stos
pushf
test
cmp
aad
pop
aam
and
popl
push
push
mov
ret
and
push
cwtl
cld
cmp
sahf
ljmp
sarb
fs
jl
mov
mov
lods
shrb
ljmp
xchg
orl
icebp
adc
shrl
scas
je
cmp
adc
dec
mov
inc
jp
in
test
fs
gs
sbb
pop
or
xchg
mov
pop
xchg
sti
fildll
mov
scas
out
pushf
out
fbstp
std
jb
push
sti
dec
sbb
push
cmpl
test
call
pop
repnz
insl
xor
cmpsb
scas
or
jbe
mov
lock
push
into
sub
test
xchg
push
jnp
pop
ljmp
stos
xlat
aad
scas
imull
cli
loop
add
cmp
mov
push
xor
shlb
scas
iret
mov
sub
push
in
cmp
stos
insl
cmp
pop
ljmp
pop
or
nop
dec
pop
ficoms
imul
sbb
and
pop
lsl
push
fisttpl
loopne
ficoms
fldl
and
sbb
les
imul
mov
enter
movb
cld
inc
repz
popa
sbb
xor
ss
icebp
inc
sti
gs
aas
inc
mov
imul
pop
popf
rolb
add
push
xor
jno
ja
jecxz
test
int
movsb
decl
stos
imul
or
int
mov
pop
adc
mov
fsubr
bound
daa
movsl
leave
add
cmp
push
xor
iret
out
in
lods
fcmovnu
and
fdivs
in
pop
pop
push
and
stc
xor
out
push
mov
aad
iret
inc
mov
xor
push
or
jl
mov
push
jo
ss
mov
idiv
int
decb
lcall
jp
push
pop
je
inc
dec
imul
pop
lcall
mov
xchg
add
sbb
insl
mov
or
aas
scas
jo
cmpsb
mov
rclb
jbe
mov
inc
push
scas
adc
push
pushf
add
rcrb
nop
xorb
lahf
out
jno
clc
inc
mov
enter
loopne
push
sub
fdivrs
mov
test
sbb
imul
pop
mov
jp
adc
aam
gs
xor
mov
inc
and
mov
pop
loope
in
or
push
clc
or
mov
dec
sub
inc
ss
or
lock
int3
aad
enter
jge
cmp
sbb
lea
cmpsl
xor
jne
lahf
ljmp
lret
mov
xchg
dec
and
cmpb
or
je
cmp
sbb
rcrb
cmp
push
jl
mov
adc
imul
testl
xchg
sbb
shlb
pop
xchg
or
xchg
inc
adc
sbb
out
icebp
push
adc
enter
jle
lcall
popa
subl
int3
cmpsl
fstpl
es
addb
mov
jbe
sbb
clc
int
mov
cltd
addr16
xchg
push
pop
mov
test
ret
inc
cmp
mov
jae
xchg
lods
xchg
cmp
sahf
mov
cmp
andb
adc
lret
mov
inc
mov
push
or
xlat
mov
nopl
ror
pop
movsl
ret
shlb
popa
adc
jnp
in
in
dec
pop
ret
xchg
jno
ret
cld
int3
shlb
sahf
arpl
ss
sarl
insl
insl
xor
or
outsb
or
icebp
imul
mov
incl
xor
lcall
lods
and
loope
es
icebp
adc
out
stos
push
mov
adc
sbb
loope
jle
sub
in
pop
jl
or
sub
inc
xor
mov
sbb
mov
push
xchg
aas
xorb
push
into
jle
cld
xorl
out
les
insl
sbb
daa
adc
jae
jmp
cmp
inc
push
add
faddl
stc
mov
pop
outsb
dec
clc
mov
sub
pop
fstl
aaa
mov
xchg
test
sub
in
nop
shll
cld
cmpsl
inc
xchg
fnsetpm(287
xor
mov
pop
mov
dec
dec
push
outsb
push
pop
nop
jg
addl
mov
stos
add
sub
and
xor
jo
jns
xchg
jne
sbb
sub
inc
into
push
jae
insl
mov
sbb
movsb
xchg
imul
popl
rcll
int3
xchg
xchg
pop
cmp
scas
fs
mov
sbb
inc
and
xchg
adc
ss
lods
outsb
jo
int
arpl
xor
outsb
fs
xchg
fucomp
sahf
ja
sbb
lret
pushf
aad
or
add
repz
mov
and
pushf
nop
ret
add
jl
adc
roll
add
xchg
aad
loop
and
arpl
mov
or
inc
psubw
mov
testl
or
shll
sar
adc
cmp
shrb
pop
xor
loopne
and
std
shll
stos
xchg
push
jno
popf
add
mov
push
cmp
mov
scas
call
mov
fs
inc
repnz
pop
leave
bound
cld
outsl
pushf
or
pop
sbb
int
xor
cli
sahf
ret
dec
ret
fcoms
xchg
mov
loope
orb
test
repnz
idivl
jmp
pop
jns
fdivs
jle
add
outsb
xchg
out
sub
pop
jnp
out
cli
shlb
xor
dec
pop
xlat
push
jmp
cld
xchg
pop
xlat
pop
ret
out
inc
dec
cmp
xor
mov
fs
push
push
les
lock
add
cs
xor
fs
jbe
inc
add
std
lret
push
insl
bound
and
adc
fistpl
xchg
je
jmp
cmp
or
push
lods
das
out
call
arpl
mov
mov
ret
cwtl
jg
mov
mov
ja
dec
xchg
add
mov
rcrl
pop
sub
mov
dec
fdivp
out
cmp
push
sbb
cmpsl
iret
sub
out
and
ret
out
push
sbbl
shll
dec
out
out
add
jmp
inc
xchg
push
nop
sub
fld
pop
js
inc
pop
cli
out
rcrb
mov
loope
add
rorb
jle
xlat
lcall
xchg
cmp
ds
sub
dec
push
dec
lret
adc
cmp
sets
jo
xor
pop
xor
insl
out
sbb
push
aaa
lahf
fxch
aad
jb
imul
sub
mov
cmpsb
pop
aaa
test
addr16
iret
loop
add
iret
or
mov
lret
mov
ror
push
dec
fistps
in
push
jmp
test
in
stos
inc
jbe
jmp
mov
push
xor
imulb
sub
cmpb
add
or
push
sub
cli
mov
mov
jne
jl
xor
out
cmp
int3
mov
je
mov
into
call
xchg
sub
add
cmp
aaa
adc
stos
cs
shrb
ficoml
lods
lret
test
outsb
dec
outsl
sbb
imul
dec
and
in
sbb
jne
push
out
or
js
mov
xchg
mov
fnstcw
aad
jg
adc
or
cmp
ds
mov
out
repnz
inc
adcb
in
jb
xor
or
inc
dec
cli
sub
and
sub
in
mov
insw
pop
loop
imul
rorl
add
lahf
pop
stos
mov
fsubrl
cltd
xchg
lret
gs
lcall
mov
mull
pop
shl
and
jnp
mov
lock
adc
sahf
xchg
scas
dec
scas
or
dec
mov
fwait
adc
loope
jle
pop
popl
movsb
lods
or
mov
dec
inc
xorb
cmp
push
xor
test
xchg
sbb
push
cmp
dec
orps
into
cld
imul
movsl
add
iret
rorl
and
or
outsb
inc
jmp
mov
pop
cmp
dec
adc
cmc
push
sbb
mov
xchg
mov
mov
push
sbb
std
or
sbb
pop
stc
jb
fisttps
add
and
movsl
je
mov
cltd
xorl
lods
xchg
pop
cs
dec
and
or
out
jns
mov
mov
mov
mov
add
jg
cmpb
inc
pop
test
pop
jb
mov
mov
sub
xchg
lret
cmp
mov
es
add
call
push
pop
pop
in
stc
xchg
nop
mov
call
sbbb
fstps
push
arpl
clc
stos
testb
test
jns
jno
mov
push
xor
lds
movb
int
jb
jecxz
icebp
mov
dec
dec
sbb
mov
adc
hlt
adc
jbe
lods
in
sub
std
pop
cmc
into
adc
insb
jecxz
cmc
dec
outsb
inc
adc
aaa
xchg
mov
mov
xor
mov
or
inc
fwait
in
add
cltd
mov
clc
gs
and
lcall
mov
jae
cld
mov
pop
pop
cmpsl
cmp
pop
decl
fs
pop
mov
stos
mov
mov
lds
inc
sbbl
outsb
cmp
adc
cmpsl
fs
jge
jg
out
mov
mov
in
cmp
scas
adc
push
jno
out
loop
sahf
shrb
or
insb
xchg
pop
lods
cmpsl
jns
dec
add
xor
add
or
mov
and
or
gs
les
jae
arpl
cmp
jbe
lret
fcmovnbe
icebp
nop
cs
nop
sub
mov
std
mov
aas
and
xchg
loop
jle
dec
push
out
cli
sti
outsl
test
dec
cmpsl
jge
aaa
xor
push
cmpsb
out
sarl
loope
push
shr
repnz
sub
pop
xor
stc
dec
loop
int
cmpsl
and
int
mov
test
add
repnz
jae
subl
add
and
fildll
addr16
arpl
mov
decb
lret
idivl
aad
cmp
adc
push
daa
mov
testl
leave
std
xchg
adc
jbe
mov
in
jl
rcrb
out
sbb
pop
push
test
in
pop
or
xchg
iret
test
in
jae
test
cld
sahf
je
testb
scas
enter
mov
pop
orl
insb
sbb
stos
cmp
cmp
xchg
lds
pop
imul
std
cmpsl
aad
sbb
xchg
pop
pop
stc
mov
lcall
jbe
dec
cmp
outsb
inc
inc
mov
push
jge
lret
or
sbb
xchg
out
jnp
das
rcrb
push
imul
arpl
in
sahf
adc
cmc
and
pop
repnz
daa
cmp
hlt
rcrb
sti
imul
clc
scas
mov
loope
call
push
adc
xor
in
xchg
sub
xchg
repnz
incb
adc
and
movsb
adc
sbb
popf
pop
loope
push
sub
inc
cmc
cld
mov
cli
imul
inc
xchg
xchg
cmp
xor
incl
xlat
lahf
aad
add
push
pop
lds
dec
jae
add
ljmp
xchg
sbb
ror
ficoml
adc
pop
fstpt
xchg
rorb
dec
adc
xchg
xchg
xchg
jmp
movsb
or
mov
push
jge
pop
jg
je
addl
lret
xchg
shr
popa
pop
sbb
clc
adc
lret
lods
sbb
ret
fstl
xchg
aas
jbe
xchg
mov
mov
jns
loop
sub
outsb
sub
xchg
jo
lret
pop
shlb
mov
mov
js
cs
iret
cmpl
ja
mov
mov
cld
rcrl
in
js
ja
xchg
fsub
jne
or
pop
in
and
repnz
add
fwait
or
and
xchg
repnz
int3
repnz
rorb
xor
pop
sbb
jmp
stos
and
insl
and
pop
mov
push
xor
into
lods
in
xor
mov
mov
idiv
cld
js
popa
pop
jno
pop
sbb
rcrl
xor
sbb
lret
lahf
cmpsb
std
xchg
fcoms
ljmp
hlt
mov
dec
adc
test
pop
dec
out
daa
and
mov
insb
lcall
sub
and
fwait
test
mov
pop
fsubrl
out
sub
out
xchg
fistps
aas
inc
aas
incb
pop
leave
sub
fmuls
out
test
imul
stc
js
pop
pop
out
jl
push
sbb
jl
sub
jl
push
cmc
imul
sbb
push
xchg
ret
jge
sub
rorl
mov
xor
test
shr
sti
sbb
jo
rcll
pop
frstor
mov
out
pop
sbb
dec
xchg
sub
xchg
ds
arpl
pop
mov
fnstsw
and
mov
and
add
std
jp,pt
xchg
xor
jae
stos
xor
cmc
fcoms
jbe
xchg
pop
popf
imul
gs
lods
and
fdivrp
jae
adc
arpl
or
movsl
jge
sub
sti
daa
mov
lret
dec
movsl
and
test
outsl
jp
xchg
xchg
or
sub
sbb
pop
jecxz
sbb
outsb
aam
loop
add
mov
int
insb
adc
dec
mov
jecxz
inc
cmp
cmp
jmp
leave
out
push
add
scas
push
int3
pop
nop
push
nop
jecxz
pop
adc
jne
push
sub
mov
ja
dec
popf
arpl
pusha
mov
jbe
insl
lods
mov
nop
fst
in
icebp
and
xchg
aaa
mov
sub
push
into
mov
imul
pushf
loop
clc
cmp
and
aam
lret
leave
je
aad
cmpsb
and
repnz
adc
mov
jge
test
out
lret
inc
aad
insl
stc
aas
jge
mov
push
sub
pop
push
sbb
and
add
cmp
add
jae
fs
je
adc
pop
aas
xor
cld
add
or
xchg
aaa
je
add
enter
sbb
pushl
or
shl
int3
xchg
gs
jle
rcl
outsb
insl
shr
stc
subl
jns
cmp
into
push
dec
dec
daa
adc
dec
and
out
push
xor
and
xor
mov
ja
or
jne
lods
dec
push
scas
dec
pop
xor
xchg
outsl
fsubs
jns
jp
mov
cs
mov
mov
inc
ja
xchg
adc
mov
in
mov
pop
fildll
les
adc
andl
jbe
cmp
popf
xchg
and
xor
push
xor
shll
add
fbld
loopne
enter
rorl
je
pop
aam
or
pop
ret
shl
mov
and
into
add
pop
sbb
mov
shrb
add
or
jle
sahf
lds
pop
sbb
add
stos
popa
mov
in
arpl
test
rorl
add
jmp
rol
and
cli
dec
roll
into
divl
mov
cmpsl
in
fdivs
add
push
lds
insb
rol
fbstp
adc
push
imul
or
cwtl
jp
fmuls
inc
cmpl
xchg
jnp
mov
mov
in
xchg
push
fiaddl
out
imul
jge
cmp
sbb
fsubrs
sub
push
ret
mov
lea
inc
mov
inc
mov
pop
fiadds
cmp
adc
cs
dec
push
roll
xlat
movsl
sub
adc
call
mov
arpl
xchg
sub
daa
sbb
test
stos
dec
incb
xlat
ret
pop
mov
or
iret
mov
pusha
and
inc
mov
cmpsl
in
xchg
xchg
lods
lret
xor
cli
sbb
xchg
cmp
lods
hlt
mov
insl
push
js
ljmp
andb
lock
dec
xchg
mov
inc
jbe
lods
adc
and
cli
mov
hlt
jmp
sub
loopne
jnp
and
cmp
xor
ret
mov
mov
xlat
pop
loope
jp
push
dec
movntq
add
incl
lcall
push
jge
inc
movsl
mov
out
xor
jg
sbbl
scas
inc
outsb
xchg
push
push
jbe
shll
mov
imulb
and
xchg
scas
or
psadbw
dec
push
mov
pop
jmp
clc
imul
shrb
sub
mov
add
aaa
xchg
jne
loopne
int3
jge
sbb
push
sti
lds
in
push
xchg
aam
dec
aas
rcrb
mov
das
inc
and
fcomps
divl
pop
pop
fidivl
fwait
scas
rolb
addr16
movsl
arpl
test
jle
mov
lcall
imul
ret
mov
ret
xchg
or
adc
jne
adc
inc
loope
pop
in
jbe
sbb
pusha
ljmp
repnz
inc
xchg
fwait
pop
ljmp
lcall
movsb
mov
mov
adc
in
mov
lcall
xlat
pop
call
xor
test
pop
ja
loope
lretw
sbb
outsb
out
cld
outsl
jbe
inc
cltd
mov
inc
pop
sub
mov
mov
nop
inc
es
loop
aam
and
cwtl
inc
jne
pop
lock
mov
or
xchg
arpl
sbb
mov
or
push
pop
lahf
mov
or
pop
xchg
pop
pop
add
or
sub
adc
xor
hlt
jae
and
icebp
or
pop
scas
dec
xchg
call
jle
mov
push
xchg
xor
ret
or
cs
dec
daa
ja
fldcw
jns
in
mov
or
inc
loope
aaa
insb
idiv
enter
push
mov
pop
xor
test
dec
push
lretw
rorb
add
lcall
lcall
cmpsb
outsl
test
das
jnp
sahf
cld
push
adc
mov
es
mov
push
repz
lods
andb
adc
rorl
mov
cmp
mov
sub
jl
in
push
pop
add
add
pusha
imul
jne
fwait
or
popa
sub
ja
dec
das
mov
mov
sbb
pushf
rcll
jecxz
insb
xchg
jno
scas
bound
call
xchg
filds
push
stos
push
repnz
or
sub
leave
shll
xor
push
movsl
dec
test
std
and
push
insb
lret
nop
nop
imul
xor
lods
push
stos
push
or
pop
daa
cld
cmp
mov
shrl
or
sub
push
sub
dec
outsb
xorl
data16
mov
add
dec
or
mov
push
adc
lock
push
mov
dec
cmp
cmpb
xor
dec
jl
fwait
inc
leave
int
faddl
out
sti
mov
loop
push
in
adc
ja
mov
mov
test
sbb
xor
adc
push
data16
and
jns
jno
call
cltd
sbb
mov
sbb
lret
cld
movl
mov
loopne
scas
lods
stos
out
pop
push
aaa
pop
fsubr
aad
arpl
pandn
mov
or
add
rolb
mov
push
dec
jl
je
sbb
or
fdivrl
add
adc
mov
dec
sub
xchg
sub
jp
sub
stos
stos
mov
push
dec
ret
jmp
sub
mov
sti
xchg
aam
cmp
xlat
add
je
je
fists
xchg
add
shr
pop
pusha
adc
pop
mov
xor
or
scas
lock
daa
push
nop
mov
ja
ror
sti
dec
aad
std
sbb
dec
test
sub
pop
sub
lret
mov
js
push
inc
fcompl
mov
fisubrl
lods
pop
outsb
sahf
add
ret
insl
or
aaa
or
aad
outsl
lcall
ljmp
dec
dec
mov
outsl
dec
mov
cmp
daa
js
push
sub
add
push
ficompl
rcl
imul
jns
test
pop
mov
dec
fwait
sub
sbb
cld
pusha
pushf
repnz
inc
dec
sahf
ss
mov
scas
repnz
fstl
test
das
adc
test
movsb
inc
lahf
pop
push
mov
bnd
mov
fdivp
scas
scas
aaa
push
cmp
mov
lcall
cmc
into
bound
push
jle
adc
test
bound
out
or
stc
pushf
xchg
dec
or
and
push
push
push
pop
aam
leave
push
inc
or
shrb
pop
bound
jecxz
mov
push
jns
aam
dec
outsb
jo
dec
pop
andl
leave
test
out
jge
rcrl
dec
mov
xor
mov
call
pop
enter
pusha
inc
mov
pop
adc
scas
dec
add
pop
push
cmp
inc
jg
jne
aaa
in
xor
je
int
pop
sub
cmp
xor
inc
imul
ficoms
daa
mov
shll
mov
ret
sub
pop
xchg
xchg
in
jle
test
jns
imul
add
cmpsb
mov
std
add
test
aad
and
push
in
call
lret
sbb
jmp
repnz
cltd
dec
cltd
mov
sarb
or
mov
ret
add
rol
stc
aam
mov
in
cmp
adc
push
add
test
sub
divb
mov
add
cmp
repz
fdiv
jo
mov
jb
mov
sahf
cltd
test
sbb
fcompl
cmpsl
mov
sub
xchg
fstpt
test
clc
iret
arpl
xor
cwtl
call
lods
mov
dec
fstpt
mov
and
icebp
cmpsb
js
sbb
jle
mov
mov
push
add
js
out
pop
loopne
xor
pop
jae
iret
jnp
movzbl
bound
cmp
gs
lods
enter
fs
mov
stos
cmpsl
sub
mov
insb
fstl
outsl
icebp
mov
test
xchg
lods
pushf
push
mov
pushf
ja
xchg
sub
flds
int
gs
shl
xor
jecxz
sbb
gs
or
ss
repnz
or
out
rorl
adc
jae
push
add
xchg
xchg
test
pop
dec
dec
pop
fisttpll
lods
adc
andl
xchg
mov
aaa
push
sbb
sti
in
jg
fldcw
mov
sub
and
lock
and
inc
mov
push
mov
shlb
jbe
gs
pop
xor
jmp
lret
sub
and
je
or
pop
and
push
mov
jecxz
cld
or
negl
lcall
push
ljmp
push
or
mov
mov
xchg
popf
mov
fistps
xchg
sub
sbb
mov
jae
jno
cmp
pop
push
mov
leave
ffree
out
stc
fs
push
add
push
fcmovbe
sti
repz
ljmp
aam
mov
fwait
cld
js
add
into
add
ss
push
adcb
xchg
lock
std
into
xlat
jp
jne
sub
mov
lret
pop
dec
xchg
icebp
cmp
adc
sbb
jecxz
aam
mov
cmpsb
sub
pop
inc
int3
add
fnstsw
mov
mov
push
inc
scas
loope
inc
int3
push
cmc
push
pusha
test
iret
and
add
push
xchg
add
or
orb
sbb
jae
jle
cmp
adc
dec
repz
daa
push
and
mov
shl
pop
cmp
ror
mov
push
jbe
iret
sar
sahf
jle
popf
out
jge
add
test
inc
ficompl
xchg
ljmp
fsubl
or
loope
bound
and
push
lods
insb
push
mov
inc
and
int
adc
test
stos
fistl
in
xchg
cmp
sub
popa
cwtl
sub
in
outsb
pop
nop
adc
dec
sub
cmc
inc
adc
les
xchg
jno
int3
sbb
mov
stos
cmp
out
mov
into
inc
sahf
mov
notl
movl
flds
push
add
xchg
ret
into
inc
mov
adc
ss
cld
push
lds
mov
jecxz
lret
fisttpl
pusha
repz
or
adc
adc
ja
or
loope
testb
sub
movsb
sbb
in
psubq
movsb
mov
ljmp
leave
je
jo
fs
sbb
pop
dec
fwait
push
push
jbe
add
jmp
bound
stc
mov
pop
sub
lcall
ds
mov
lock
adc
lahf
dec
lods
jne
xchg
push
ja
mov
push
jmp
push
repz
cmp
mov
enter
pop
or
adc
out
nop
std
cmp
xor
push
cltd
popf
cmp
xor
xchg
int3
sub
jnp
pop
mov
adc
lock
ret
incb
inc
push
dec
mov
push
sahf
clc
gs
scas
push
mov
clc
jl
mov
mov
or
nop
or
xchg
rcrl
les
inc
das
test
enter
and
enter
mov
enter
cmpsb
ja
jbe
imul
rep
xchg
cmp
add
or
adc
or
mov
adc
loop
cmp
add
mov
mov
mov
adc
cmp
ret
push
mov
or
lret
fcomps
repnz
ret
inc
movl
mov
add
sahf
jl
mov
pop
cmp
int
scas
push
iret
je
pop
mov
nop
jp
flds
sub
sbb
pop
mov
inc
jbe
scas
xorl
les
jmp
xchg
jo
es
clc
mov
adc
pop
fidivrs
adc
mov
das
xchg
sub
les
fdivs
adc
shl
aaa
jg
fistl
pop
cmp
ss
lahf
and
out
xchg
int
outsb
xlat
sbbl
hlt
repnz
sbb
stos
inc
inc
xchg
push
movsb
dec
lods
lods
fwait
xchg
jae
and
repz
mov
nop
test
adc
jb
loope
xor
je
into
testl
mov
in
popf
aam
outsl
or
jmp
xchg
roll
lea
jnp,pn
sub
scas
and
sbb
out
inc
adc
out
mov
outsb
je
jge
push
sti
cmc
xor
push
pop
test
movsb
dec
and
mov
add
inc
jmp
scas
jns
and
jg
popa
pop
mov
in
jb
mov
mov
ljmp
pop
pop
js
xchg
xor
leave
data16
fucomp
scas
cmp
mov
jae
mov
loopne
mov
rcl
xchg
inc
aad
out
mov
sbb
and
mov
dec
into
inc
push
mov
lock
sub
pop
cmp
loop
sub
mov
add
clc
addr16
cmpsb
insl
enter
outsb
xor
scas
inc
stos
out
sub
sbb
out
pop
jno
repz
ret
cmp
fmuls
xlat
icebp
rcr
adc
add
xlat
in
ljmp
jnp
sub
mov
and
scas
mov
sbb
or
sbb
rcrl
pop
out
pushf
sub
ljmp
xchg
sub
sahf
test
dec
loop
mull
mov
mov
shrl
ret
sbb
popf
imul
jns
dec
dec
mov
add
clc
xlat
push
fistps
sub
mov
mov
bound
jmp
movsb
cmpsb
test
jl
push
mov
xchg
mov
push
enter
clc
cmc
jno
dec
rcl
repz
jge
inc
sbb
outsl
push
pop
xchg
ror
cmpsl
mov
mov
inc
jbe
enter
add
cmp
leave
pop
cmp
mov
fcmovnu
fistpl
jg
je
cs
inc
xchg
imul
out
stc
fwait
cmp
inc
cld
fildll
fwait
push
or
sbbb
std
mov
rcrl
movb
pushf
aam
in
lahf
xor
inc
les
pop
arpl
add
ja
dec
out
iret
cli
pop
and
add
cmp
out
ret
add
or
push
push
ret
fimuls
xchg
mov
incb
mov
aaa
pop
mov
push
push
pop
mov
ja
or
fistl
orl
jno
cmp
cld
sahf
jle
jecxz
or
aam
mov
adc
cltd
ss
dec
add
addr16
les
adc
sub
fisubl
popa
push
xor
pop
inc
rclb
jb
inc
adc
pushf
jmp
mov
cmpsb
and
sbb
xchg
sub
mov
jbe
mov
in
aaa
test
mov
inc
mov
hlt
out
xchg
mov
pusha
lret
ret
test
or
cli
pop
xchg
in
fildll
or
pop
or
jge
jmp
and
int3
dec
repz
outsb
mov
in
iret
outsb
mov
cmp
gs
shrb
dec
test
mov
out
pop
and
xchg
fs
ret
mov
test
mov
mov
sahf
push
mov
push
arpl
lcall
add
or
jmp
inc
pop
pushf
movsb
out
outsb
bound
jbe
out
arpl
push
arpl
mov
mov
pop
hlt
adc
pop
add
cmc
dec
lahf
inc
xor
inc
adc
repz
pop
and
std
mov
jecxz
mov
inc
pop
sub
or
rorl
mov
aas
imul
stos
ljmp
cld
mov
pop
pop
pop
jbe
lock
xchg
es
jmp
adc
or
xor
test
lea
xchg
out
shlb
icebp
pusha
lahf
cmpsl
push
out
in
addb
or
movsb
mov
sbb
mov
fdivl
and
and
test
arpl
test
mov
int
push
out
jp
dec
or
lcall
or
insb
sbb
icebp
fwait
mov
and
lea
push
ss
push
test
cmp
mov
mov
subb
rcrb
mov
popf
mov
sbb
movsl
add
cmp
add
in
mov
testb
popa
cmpsb
push
arpl
push
imul
bound
sbb
pop
or
arpl
pop
je
cmp
ja
xor
pop
and
in
stos
dec
test
imul
mov
lds
mov
ret
push
xor
push
add
mov
add
faddl
jl
pop
rorl
cwtl
mov
xlat
sahf
xor
cltd
sub
flds
test
adc
mov
mov
mov
into
std
xor
or
andl
jno
push
cs
pop
dec
xchg
add
aad
cmp
out
scas
aas
mov
sarl
push
inc
sbb
shll
xchg
jle
nop
add
lods
jp
les
rol
pop
sub
setge
inc
sub
ficoml
xor
leave
sbb
pop
or
fisttps
fndisi(8087
push
sbb
fcompl
jl
xor
dec
push
flds
xchg
ds
aas
mov
lahf
xchg
in
pop
mov
jl
dec
mov
adc
cmc
pushf
dec
adc
or
jbe
jmp
jo
stos
insb
ret
test
inc
nop
das
jle
jne
mov
mov
rorl
adc
jmp
or
jmp
movsl
mov
dec
xor
dec
cmp
pop
mov
mov
add
push
jge
testb
xor
xor
popf
rorl
xchg
xor
pop
mov
mov
fdiv
adc
and
cmp
jns
dec
sub
iret
lods
fisubs
add
mov
mov
xor
rcrb
test
xor
pop
call
fimull
sbb
jmp
das
hlt
popa
pop
inc
xchg
out
cwtl
inc
mov
outsb
push
add
mov
mov
sub
mov
jmp
shlb
or
jl
jne
xor
pop
xchg
repnz
shll
and
jb
sbb
adc
and
mov
mov
sub
or
cmp
jnp
repnz
and
dec
sub
ret
popf
sub
out
mov
mov
cli
dec
je
push
mov
testl
or
pop
stos
out
mov
clc
incb
ljmp
lods
rclb
dec
jne
cmp
pop
mov
push
mov
xchg
call
cmp
mov
and
pop
mov
les
aam
out
decb
int3
test
push
int
leave
and
mov
pop
pop
jle
fcoms
or
ret
mov
sub
sbb
ret
out
rorl
pop
dec
test
inc
lods
pop
mov
in
mov
cmp
lea
cmp
cmp
push
fs
std
lcall
test
mov
into
cmpsb
xor
sbb
aam
adc
inc
xorl
je
outsb
push
cmp
cmp
xchg
fimuls
pop
lahf
shrb
sub
sbb
sbb
xchg
shll
mov
xchg
gs
push
movsl
rcl
adc
jge
iret
repnz
sub
pop
aas
lock
pop
gs
loopne
repz
xorl
adc
loope
push
push
pop
mov
aaa
inc
push
in
mov
inc
nop
das
lods
inc
fwait
lret
mov
sbb
test
mov
or
mov
push
or
aas
inc
inc
fiadds
mov
adc
push
jmp
add
pop
filds
sbb
adc
movsb
hlt
dec
add
ret
dec
pop
fildl
sbb
jnp
xchg
cmp
and
repz
nop
hlt
inc
in
cmovge
mov
jmp
or
jne
sub
inc
jmp
dec
repz
adc
and
mov
push
test
xchg
jge
and
cmpsl
jnp
push
adc
cmp
lret
mov
enter
xchg
jecxz
pop
aas
int
jb
fwait
pop
nop
adc
es
jg
enter
fsubr
arpl
or
imul
push
mov
dec
push
mov
and
mov
sarl
mov
push
jae
inc
xor
push
xchg
outsl
lock
pop
addr16
ss
xchg
lret
pop
cltd
push
mov
je
inc
xchg
cmp
sbb
in
jle
inc
sub
pop
mov
sbb
rcll
mov
lods
mov
cmc
xchg
and
aaa
cmpxchg
mov
inc
push
sub
bound
mov
pop
stc
ss
fsubrl
mov
stc
jecxz
xlat
jecxz
mov
fidivrl
out
mov
xchg
cmp
sub
sub
outsb
ja
and
jge
pop
mov
cmpsl
pop
mov
lods
lret
cwtl
fs
outsl
or
xchg
pop
pop
mov
daa
sub
data16
and
jbe
xchg
fimull
enter
inc
das
ljmp
loope
xchg
pusha
jne
iret
lods
xor
cli
hlt
push
mov
stc
es
cld
push
ret
cmp
dec
pop
xchg
stos
imul
xchg
fxch
roll
jmp
jbe
in
daa
cmp
cmpsl
leave
imul
daa
sbb
es
cmpsl
mov
or
dec
xchg
ret
sbb
loope
fiadds
mov
xor
add
pop
jns
sub
rol
pop
sub
repnz
dec
subl
xchg
and
mov
addr16
cwtl
adc
or
cld
mov
xchg
hlt
pusha
xchg
xorl
jo
insb
stc
or
push
jmp
sbb
xchg
xor
sub
mov
push
and
sub
fs
inc
popa
fwait
in
call
fsubs
test
adc
jae
pop
leave
mov
inc
mov
aam
pop
lea
icebp
dec
int
sub
lret
adc
inc
int
test
pop
mov
inc
bound
adc
mov
cld
lret
ret
push
push
jns
test
decl
imul
xor
cmp
jbe
clc
adc
xlat
pop
aaa
subl
or
and
dec
loope
add
push
and
adc
lcall
pop
xchg
push
mov
stos
sub
lret
push
les
lcall
mov
les
sub
imul
fidivl
mov
loope
pop
sbbl
inc
ret
inc
test
xor
fimuls
adc
xchg
xlat
ret
push
out
pop
cli
mov
cmp
mov
fcoml
mov
stc
xchg
pop
in
mov
adc
imul
es
lock
adc
repnz
fs
sub
mov
pop
lret
icebp
inc
lahf
sub
cmp
and
mov
cmpsb
and
xor
bound
sbb
das
cmp
jns
lcall
jnp
mov
mov
mov
mov
pop
in
into
repnz
movsl
and
or
cltd
pop
push
add
aam
and
xchg
sub
jns
jmp
mov
sub
cmp
in
cmpsb
and
sahf
dec
cmpsb
and
jo
or
push
jb
xchg
push
lret
cltd
pusha
mov
pop
rcl
xor
les
fs
jmp
js
cmc
cmp
adc
or
mov
and
dec
test
xor
jle
adc
mov
xchg
jg
lods
loop
sahf
xor
std
cmp
std
scas
mov
stc
test
or
scas
ficomps
xchg
ret
ljmp
rclb
cmp
jnp
mov
mov
pushf
inc
mov
push
cmp
test
ljmp
xchg
xlat
ds
add
mov
and
jg
xlat
pushf
or
nop
xchg
repz
cmpsl
xorb
mov
ss
ss
in
mov
cltd
popa
xchg
call
adc
pop
repnz
sub
xchg
stos
arpl
dec
mov
jecxz
pop
fbstp
inc
sub
aad
loop
inc
les
outsb
and
mov
fiadds
jne
jp
mov
in
cmp
jmp
and
sbb
add
mov
repnz
mov
aam
sbb
lods
cltd
sahf
sub
pushf
push
cltd
xor
and
jo
push
jno
jne
sbb
jno
out
xchg
mov
inc
scas
pop
pop
inc
push
xor
cmp
sti
add
push
movsl
xor
into
mov
pop
jmp
in
rcll
dec
inc
sub
and
mov
sbbl
sahf
adc
dec
xor
push
cmp
test
sub
mov
and
or
ret
sbb
call
push
mov
jle
lods
pushf
out
lds
cmp
out
lret
sbb
or
push
inc
adc
mov
cs
mov
sbb
jo
mov
xchg
jge
test
iret
je
cmp
aaa
std
enter
pop
push
push
mov
jle
adc
or
addr16
lock
pop
pushf
or
adcb
mov
mov
push
mov
in
or
and
jmp
xchg
add
and
mov
loop
loop
xchg
lahf
sbbb
jno
and
fimuls
test
mov
fdivr
pop
push
dec
cmc
mov
out
repnz
pop
add
test
adc
insl
add
or
ficomps
or
push
addl
scas
test
push
pushf
in
mov
xor
xchg
in
in
in
arpl
sub
sbb
dec
ss
pop
push
mov
cmp
jno
bound
pop
into
adc
adc
cmp
or
cmp
add
data16
cmpsb
std
adc
inc
inc
or
mov
insl
fsubl
cmp
pop
mov
fstl
push
or
or
sbb
cmp
mull
dec
push
mov
outsl
sbb
lret
sub
subb
fs
and
repnz
dec
mov
push
xchg
push
push
xor
imul
popa
lcall
inc
sub
test
sbb
adc
aas
adc
add
sub
or
mov
add
push
adc
inc
cmp
icebp
aam
nop
shll
cmp
in
mov
jl
xor
fsubrs
cmp
scas
mov
loopne
push
xor
popa
dec
cmpsl
movsb
sub
mov
test
mov
adcl
pop
mov
arpl
test
push
sahf
fs
cli
mov
pusha
jl
faddl
jnp
adc
xchg
dec
dec
push
movsl
rcl
loopne
adc
and
jae
cmp
jb
xchg
mov
call
cli
notl
idiv
test
cmpsb
pop
fcomi
mov
mov
pushf
add
movsl
jnp,pn
ret
inc
and
add
imul
jge
arpl
push
into
stos
int3
test
stc
cli
icebp
add
xchg
imulb
xchg
xchg
fsubrl
mulb
jno
out
xor
add
cwtl
repz
add
cmc
std
mov
mov
pushf
js
fdivrl
add
push
or
pop
sub
mov
pop
sti
lea
lods
push
lret
pop
out
or
shlb
stos
daa
push
cmpl
shr
lods
fwait
and
push
nop
mov
aam
pop
out
data16
jb
jnp
test
insl
fcmovnb
or
loop
xlat
int3
aaa
mov
mov
arpl
add
movsl
test
enter
movsb
sar
add
jp
cmpb
mov
inc
add
loopne
fisubl
fwait
mov
dec
bound
je
cmp
xchg
xchg
inc
stos
movsb
loop
xchg
push
das
pop
mov
mov
sub
cs
mov
loop
pop
rorl
jmp
out
pop
fcmovne
adc
negb
out
push
int3
mov
ret
mov
sub
frstor
sbb
sub
daa
lret
cmp
inc
mov
ja
lds
ret
test
movsl
in
sbb
popa
std
mov
cmp
in
mov
inc
nop
and
imul
dec
push
in
hlt
jle
ljmp
jp
hlt
and
fucomi
out
int3
fimuls
pop
adc
mov
int3
and
aaa
das
mov
adc
mov
js
and
inc
sbbb
cmp
push
mov
pop
in
fldl
cmp
pop
js
mov
fimull
sti
ret
popa
mov
pop
into
xchg
negb
push
sub
negb
std
dec
dec
jge
pusha
test
test
lock
int3
jge
imul
push
push
mov
out
mov
loopne
ror
jb
or
minps
jl
leave
pushf
mov
adc
jo
fwait
inc
pop
repnz
lret
adc
scas
sahf
cmp
dec
mov
mov
cmpsl
mov
incl
das
cs
movsb
push
sarb
loop
ficompl
stos
jne
pop
adc
loope
xorb
jb
push
lret
xchg
pop
mov
arpl
push
ret
mov
xchg
daa
pop
divl
pop
test
pop
fisubl
dec
inc
das
scas
push
xor
imul
gs
xor
pop
shll
push
cmovge
cwtl
fcoms
testl
lcall
mov
repnz
iret
or
inc
inc
mov
stc
jne
mov
mov
inc
test
xor
and
sahf
idiv
enter
dec
andb
dec
fimuls
insl
loope
aaa
pop
ror
in
pushl
sbb
or
in
or
jge
xor
jge
pop
and
adc
jb
mov
pushf
adc
movsb
jne
out
in
push
mov
aas
cmpsl
cmpsb
shlb
dec
fsubs
ds
jle
sbb
cmp
jbe
pushf
push
push
repnz
push
cmp
mov
mulb
aas
lea
xchg
lret
cmpsb
cmp
fimuls
lds
daa
fists
lods
add
inc
pushf
iret
sbb
cmp
mov
add
xabort
pop
aam
ss
aas
pop
fs
out
jle
imul
mov
ffree
nop
pusha
xor
mov
sbb
xchg
jae
jns
sub
aam
add
jnp
cmp
sbb
or
aas
pop
jb
push
pop
sbb
movsl
inc
lods
push
dec
adc
roll
in
and
adc
out
xchg
mov
pop
iret
shrl
ret
jg
and
mov
fwait
jnp
adc
and
int3
sub
test
fimuls
leave
push
cwtl
mov
jbe
xorl
sbb
push
in
test
stos
xor
inc
cmc
lock
jae
xchg
arpl
xchg
mov
xor
cmp
adc
pop
and
sub
fs
test
cli
pusha
ss
sub
sti
lahf
sahf
sbb
ja
cmp
insb
sahf
mov
mov
mov
sub
jne
xchg
lock
mov
push
lds
stc
stc
pop
sub
cmp
rep
dec
jmp
mov
mov
push
or
je
pop
jno
pop
inc
imul
stos
lock
cli
sub
stos
or
cmp
fidivs
add
test
jns
xorl
cld
ja
dec
test
pop
push
pop
cld
mov
add
add
insb
mov
lds
insl
aaa
mov
add
mov
mov
jns
push
or
push
nop
fsubrs
mov
icebp
push
ret
scas
bound
adc
call
aad
xor
add
dec
ret
xor
movsb
cmpsl
loope
mov
stos
stos
imulb
hlt
iret
loope
icebp
repz
test
loop
fsubl
loopne
data16
idivl
cmpsb
bswap
jb
cmpsb
or
mov
xorl
mov
dec
orb
jae
in
cmp
push
mov
bound
test
mov
mov
loope
mov
cwtl
xchg
add
pop
jb
jb
test
insl
aaa
inc
lahf
pop
insl
sbb
xlat
push
fistps
cmpsl
pop
stos
xchg
stos
pop
aaa
lock
and
arpl
pop
movsb
into
mov
in
std
dec
sub
push
cld
and
xor
and
or
cmp
jbe
cmp
jecxz
xchg
mov
mov
mov
jnp
pop
add
push
cmp
or
ret
sbb
movsl
xchg
ret
shl
cs
mul
jb
push
test
aam
mov
iret
enter
int
inc
int3
inc
orl
fimuls
jle
mov
or
sbb
cli
sbbl
xor
and
jb
dec
pop
je
lea
push
sub
dec
ret
outsb
loope
add
cld
test
mov
int3
dec
jecxz
iret
mov
loopne
fnsave
inc
sbb
push
iret
lret
and
mov
dec
in
or
adc
les
mov
out
jg
push
cli
jmp
mov
aaa
jle
lock
sarl
aas
jne
pop
rclb
cld
mov
sti
ja
xor
bound
inc
cwtl
loopne
ja
insb
aas
sbb
scas
mov
add
mov
pop
mov
xchg
int3
arpl
pop
lret
in
inc
mov
div
mov
mov
mov
dec
pop
mov
lret
jge
cmp
jno
xor
pop
sbb
add
mov
mov
pop
mov
ficoms
fs
stos
flds
sbb
adcl
sbbb
push
fs
add
push
jle
movsl
test
lret
pop
sub
cmp
jecxz
fiadds
popf
mov
cmp
jbe
lcall
jne
jp
mov
loope
out
mov
xchg
cmc
movl
jne
fdivr
pop
mov
pop
lds
xchg
xor
xor
pop
out
sub
or
or
pop
pop
mov
push
js
lahf
or
xchg
insl
dec
lock
test
jp
pop
push
and
rcr
sbb
jp
std
mov
mov
cmp
mov
imulb
or
mov
adc
test
mov
xor
sub
leave
lcall
out
and
dec
sbb
mov
es
mov
bnd
sbb
sahf
xchg
dec
pop
lret
or
or
jge
insb
nop
mov
sub
mov
cmp
mov
fs
aas
jo
in
test
dec
mov
push
jo
fs
mov
f2xm1
mov
repnz
and
mov
inc
out
shr
aaa
jo
subl
sub
imul
into
cmp
dec
fwait
jno
scas
outsb
data16
jmp
push
mov
xchg
out
scas
popa
push
or
or
jno
and
pop
inc
popf
mov
add
push
jmp
aad
sti
cmp
adc
jmp
shlb
and
rcll
xchg
fidivrl
adc
rep
or
mov
decb
loope
ret
rclb
cmp
inc
les
xchg
loope
lret
pop
call
ljmp
sub
or
std
push
jbe
jne
xor
inc
dec
clc
out
mov
adc
jmp
fstl
xchg
subb
scas
subb
shrl
pop
sub
call
es
icebp
out
add
roll
test
xchg
out
jns
sahf
insl
imul
leave
add
into
or
gs
loope
icebp
imul
ret
test
xchg
xor
nop
adc
cmp
sbb
add
sub
jns
jnp
movsb
pushf
jnp
lcall
pop
addr16
cwtl
add
and
sub
adc
int3
clc
js
xor
movlps
push
mov
xchg
sub
test
pop
mov
aas
mov
mov
lcall
xor
dec
pop
fsubl
cmpsl
inc
stos
add
cwtl
cmp
pop
xchg
add
jl
dec
dec
rorb
js
dec
push
and
jnp
jbe
call
inc
adc
mov
push
aas
cmpsb
andb
ror
and
icebp
std
mov
shlb
aam
inc
mov
dec
add
xchg
fildll
jp
and
movsb
jnp
std
bt
inc
mov
xchg
out
pop
popa
push
push
movsl
fildll
jae
or
mov
sub
dec
sbb
mov
push
lods
sub
mov
std
push
iret
hlt
mov
push
sub
xor
test
aaa
push
or
push
je
test
inc
add
xor
sub
ret
and
in
lret
shlb
fcompl
xchg
mov
ficoml
pop
in
movsb
xor
loope
rcpps
mov
xchg
mov
dec
pushf
ljmp
sbb
push
push
pushf
addb
cmp
mov
xchg
es
cmp
add
pop
aas
sbb
push
pop
andb
dec
popa
test
scas
test
lods
jg
cmc
jecxz
scas
clc
stos
xchg
sbb
dec
or
movsb
pusha
cld
test
adc
adc
and
jae
cltd
jbe
dec
push
addl
mov
lds
jmp
inc
dec
jnp
ljmp
stos
and
xor
xor
inc
and
mov
sbb
jne
lods
icebp
into
mov
mov
inc
push
push
adc
aam
repnz
mov
cwtl
aas
jb
shll
int
xor
rolb
xchg
int3
shlb
mov
push
lret
jno
jg
pop
imul
adc
mov
popa
cld
cmp
sbb
arpl
leave
cmp
mov
pop
pop
jecxz
cmpsb
cs
or
cwtl
sub
mov
es
ja
jle
in
sbb
adc
add
mov
mov
ret
aad
lcall
iret
mov
imulb
sbb
or
pop
cvtpi2ps
dec
xor
in
pushf
xchg
or
addb
push
in
lods
popf
cmp
or
jmp
inc
lcall
imul
pop
fwait
sbb
lods
sbb
push
lret
cmc
lods
int3
repnz
and
mov
out
dec
xchg
mov
fidivrl
aam
sub
out
mov
mov
and
or
xchg
mul
scas
jl
mov
inc
loopne
mov
into
aad
test
popa
jb
mov
mov
xchg
inc
je
repz
inc
lock
mov
loop
cmp
imul
cwtl
jecxz
cmp
movsb
out
xchg
adc
sbb
pusha
scas
outsb
xor
outsb
and
hlt
popf
test
cmp
cmp
cli
jp
rcrb
mov
dec
mov
or
lds
sarb
es
pop
inc
in
sbb
jb
push
mov
repnz
sbb
cmp
rcrb
sti
mov
mov
mov
scas
jl
aam
ss
xor
adc
sbb
lods
add
adc
psubusb
inc
hlt
xor
test
pop
add
sbb
js
sub
mov
cli
mov
dec
mov
scas
fimuls
xchg
or
cltd
out
push
shlb
rorl
and
pop
ret
xor
xchg
mov
dec
outsl
iret
sahf
cld
or
ljmp
cmp
sbb
loopne
pop
and
in
in
sbb
and
aad
pushf
jl
xorb
adc
stos
fwait
sbb
lods
ljmp
push
call
xchg
dec
pop
cmp
cmpsb
cmp
rcrb
jne
or
jmp
shll
ja
je
cmp
pop
add
xorl
aas
jnp
popf
andb
lcall
ds
add
xchg
lret
pop
fldl
loopne
jl
rclb
test
scas
mov
push
mov
shr
adc
or
mov
add
mov
jo
add
arpl
test
addr16
push
mov
lcall
sub
ss
add
in
fistpll
aas
xor
scas
push
jne
mov
cmp
adcl
insb
dec
scas
push
orl
movsl
mov
sbb
jmp
insl
mov
fcompl
mov
std
add
xchg
xorb
or
out
mov
or
mov
sbb
shl
ljmp
test
aam
xor
pop
jl
xchg
int3
dec
js
mov
pop
ret
and
mov
or
sub
mov
xchg
sbb
js
loopne
aad
arpl
ja
repz
jb
inc
std
mov
stc
xchg
pop
cmp
out
out
rolb
pop
in
pop
and
leave
jl
out
mov
sarl
cmp
xchg
neg
sbb
fdivrl
sbb
cwtl
aas
fcmovne
out
push
movsl
lret
outsl
movsbl
cmp
pop
or
enter
int3
mov
mov
mov
cmp
inc
jecxz
aaa
adc
xor
ss
loop
enter
icebp
in
sete
sub
cmc
fbld
sub
pushf
pushfw
loop
aam
lock
dec
popf
std
add
adc
loop
sar
mov
sbb
inc
call
cmpsb
cmpsb
clc
inc
roll
fxtract
lds
and
mov
pop
movsb
outsb
enter
popa
jne
insl
ja
testl
mov
mov
hlt
adc
mov
push
add
push
dec
into
adc
jge
test
mov
out
or
in
ss
push
into
jns
add
ljmp
add
shlb
jnp
arpl
and
adc
inc
lds
das
test
pop
sahf
call
fdivs
fisubl
push
loope
lahf
jnp
fidivrs
pop
add
in
push
pusha
dec
out
test
jb
add
ss
std
insl
mov
call
inc
insb
ss
nop
pmullw
int
aaa
roll
inc
pop
cmp
adc
aaa
sahf
pop
sbb
push
mov
in
sbb
mov
cmp
imull
xor
nop
cmp
mov
inc
cmp
cmp
xchg
mov
jne
aad
and
daa
je
out
cmpsl
faddl
iret
pop
into
cmp
cmp
mov
nop
jb
cli
aam
xchg
and
inc
fnstsw
aaa
fwait
add
insb
push
shll
rcrb
stos
test
scas
roll
fbld
arpl
enter
dec
lock
out
sub
jle
rolb
orb
pop
rclb
and
mov
test
ret
sub
and
dec
pop
dec
fldt
adc
adc
lods
loop
xchg
sti
jmp
cmc
movsl
pop
cld
push
push
stc
dec
jnp
stos
inc
pop
adc
repz
scas
lcall
push
loop
imul
popf
mov
pop
mov
fistps
call
xchg
push
pop
int3
jbe
imul
mov
addr16
icebp
mov
inc
inc
call
sarl
inc
imul
xchg
cs
cmp
push
lcall
sbb
jl
aam
mov
sahf
inc
ja
clc
cmc
out
das
inc
mov
or
xchg
nop
js
pop
pop
jae
cmp
push
dec
mov
add
jmp
test
mov
sbb
inc
sub
in
aam
aaa
mov
add
sahf
xchg
jmp
dec
scas
push
xchg
sbb
inc
outsb
jg
xchg
test
rclb
or
mov
jmp
and
adc
insl
shll
mov
adc
shl
int
add
sbb
or
sbb
or
daa
fidivrl
movsl
mov
movsl
mov
xlat
add
sub
jecxz
fidivrs
mov
test
dec
xlat
cli
sahf
clc
aaa
loopne
xlat
lret
test
lock
scas
jne
mov
push
mov
rcrb
jge
loop
int
imul
rolb
or
mov
xchg
sbb
insb
mov
mov
push
stos
ljmp
xor
xchg
cltd
popf
mov
add
aaa
pop
std
xchg
in
cmp
push
mov
pop
jns
mov
sbb
mov
stos
mov
jmp
cmc
mov
push
add
pop
test
mov
mov
dec
pop
sub
ljmp
jae
aad
aaa
mov
xchg
or
dec
mov
xor
mov
int
mov
fdivrl
sti
stos
ficoms
test
enter
xor
les
sahf
jmp
cmp
jae
lea
arpl
pop
adc
adc
mov
lea
sbb
mov
or
xor
fdivl
mov
xchg
push
pop
cltd
fwait
mov
push
pushf
dec
rol
push
mov
mov
ljmp
pop
sub
push
mov
adc
lock
jno
add
je
jne
add
shl
mov
int
cmp
sub
pop
ja
gs
pop
mov
lods
inc
jmp
inc
inc
inc
jl
sar
add
scas
push
cmp
cmc
jecxz
ljmp
pusha
push
or
imul
add
inc
fildl
pop
xor
les
inc
sti
cli
hlt
pushf
xor
les
lret
inc
dec
add
add
nop
stos
adc
mov
les
test
aad
shr
inc
xchg
xor
xor
ds
cmp
or
scas
add
mov
and
add
inc
jnp
std
and
rorl
mov
cmp
xor
lahf
iret
or
lret
test
and
lahf
xor
in
jne
fdivrl
test
mov
cmp
xor
nop
pop
pop
testb
test
sbb
das
jp
decb
sub
ds
call
xor
sarl
adc
test
mov
adc
call
mov
jnp
xchg
xchg
lods
fmull
mov
cmp
enter
dec
orl
cli
xchg
pop
jg
dec
cmp
mov
jo,pt
mov
or
xlat
insl
outsl
in
jns
inc
jbe
dec
or
shrl
stos
shlb
icebp
or
jno
testb
imul
arpl
mov
out
aaa
cmp
icebp
enter
and
push
imul
rclb
xor
mov
sahf
xchg
hlt
or
nop
or
aam
pop
cmpsl
das
mov
imul
jge
pop
pop
xchg
nop
roll
jo
xchg
jbe
dec
xchg
hlt
adc
fisubl
hlt
inc
sbb
mov
js
inc
mov
cmp
mov
xor
adc
add
adc
in
pop
xchg
sub
xchg
cmp
and
mov
lods
insb
pop
xor
divb
ss
mov
js
jle
dec
lcall
bound
mov
stc
mov
ljmp
and
dec
pop
int
sti
out
stos
mov
mov
fwait
adc
test
jae
and
cmp
and
mov
fisttpl
nop
lret
fwait
pop
add
sbbl
imul
cmc
sbb
and
xchg
inc
mov
fmuls
dec
lods
push
xchg
push
or
shlb
push
inc
shll
aad
sti
push
hlt
jmp
and
inc
dec
add
mov
sbb
adc
lds
in
loopne
inc
jmp
outsl
mov
push
xchg
fidivrl
or
mov
xchg
shl
jb
mov
push
lcall
mov
aas
cmpsb
fcomps
sbbl
js
test
stos
rcl
push
shrb
push
sti
inc
das
in
leave
pop
adc
jae
test
and
sahf
jg
andb
add
jp
or
push
mov
or
mov
int
pop
jns
insl
divb
mov
mov
loope
mov
fmulp
dec
sbb
pop
lret
es
xor
mov
in
mov
mov
jnp
xor
popa
adc
inc
or
in
fdivr
xchg
in
xlat
jg
pushf
imul
bound
movsl
or
mov
ficompl
xchg
add
bound
nop
and
cmp
dec
outsl
sbb
pushf
jbe
push
andb
ret
dec
mov
cmc
addr16
xlat
jno
repnz
loop
mov
dec
decb
or
movsb
rcrb
cmp
jns
push
xchg
jp
and
xlat
push
pop
iret
dec
dec
rcll
cmp
xor
fidivrl
popf
je
pop
push
loope
leave
xlat
ss
cmpsb
sub
adc
jge
jmp
and
les
lcall
test
jno
add
icebp
arpl
mov
insl
lahf
adc
xor
in
in
push
sbb
mov
sbb
jp
fisubs
call
int
mov
test
outsl
lods
pop
stos
mov
xorb
mov
orb
bound
scas
fcompl
xchg
cmc
loopne
mov
repz
cmp
nop
xchg
fisttps
rolb
pop
xor
enter
test
fs
outsb
fisttps
xor
and
push
fwait
test
xor
outsl
rcl
push
pop
ret
and
fs
mov
adc
movsl
xchg
and
pop
movsb
mov
dec
sbb
paddusb
jp
mov
xrelease
jp
mov
outsl
and
jns
cmp
andl
sbb
cmp
inc
rclb
cmp
insb
sub
rolb
jo
lret
dec
das
sahf
sub
in
scas
inc
jae
pop
es
mov
movsb
out
xor
stos
cli
sbb
lods
andl
outsl
mov
or
in
enter
arpl
mov
or
pop
xor
mov
loopne
pop
pushl
mov
scas
xchg
add
pop
stos
imul
sti
pop
cmp
adcl
sti
xchg
pop
mov
xchg
imul
xor
pop
jae
inc
dec
iret
movsl
cmp
inc
enter
sarl
or
movsb
cmp
out
or
xor
insb
mov
adc
xchg
mov
xor
psrad
sbb
cmp
gs
aaa
and
push
adc
mov
das
jo
push
std
inc
pop
push
xor
cmp
call
inc
or
loopne
jecxz
add
orb
jne
lret
xchg
aam
test
mov
adc
movsb
jns
fimull
lods
test
cld
call
repnz
mov
xor
inc
mov
shrb
push
mov
ljmp
pusha
add
jns
sub
sub
in
imul
push
in
adc
sub
std
adc
fwait
jb
int
mov
jecxz
xchg
pop
inc
lock
aaa
clc
shlb
gs
in
add
mov
push
inc
push
fcomps
inc
pop
mov
dec
dec
add
or
sbb
sub
add
mov
sarb
paddd
or
sub
mov
test
mov
cmp
shl
jne
mov
push
test
into
ret
arpl
clc
or
rcll
jo
jns
fld
daa
push
lods
outsb
insl
xchg
or
lahf
sub
adc
pop
bswap
movsl
push
mov
sub
xchg
and
jo
mov
jmp
cmp
mov
mov
push
mov
sub
pop
or
mov
mov
pop
jbe
orl
insl
push
test
xor
movsb
out
inc
xor
inc
lret
cld
and
or
lods
bound
aam
add
mov
test
icebp
faddp
xchg
or
test
lock
fs
lock
sub
nop
pop
icebp
pop
notl
icebp
dec
andl
cmp
inc
jmp
out
and
xor
mov
pop
push
scas
sbb
cli
push
arpl
repz
sub
push
or
push
lret
cmp
pop
icebp
scas
testb
sbb
push
sbb
out
xchg
pop
adc
repnz
jge
mov
jecxz
or
or
push
imull
pop
mov
mov
cmpsb
xchg
mov
cli
adc
adc
aam
cmp
test
adc
hlt
sbb
stos
mov
fsubl
push
icebp
jecxz
add
inc
mov
cwtl
push
mov
icebp
jnp
stc
mov
insb
dec
and
lds
lret
mulb
sarb
lret
stc
setns
repnz
movsb
inc
inc
push
sahf
mov
in
sub
imul
in
inc
xchg
sbbb
pop
pop
pushf
sbb
sbb
jo
decl
mov
movsl
inc
push
add
xchg
sbb
fsubrl
xor
lock
push
mov
xchg
or
fisubs
push
or
mov
out
inc
cltd
push
je
addr16
inc
pop
xchg
inc
jl
je
outsb
out
xor
std
fbstp
bound
adc
push
int3
in
pop
outsb
dec
ljmp
push
imul
pop
and
sbb
dec
fdivr
sbb
mov
mov
test
fcompl
mov
mov
sub
push
mov
aas
pop
push
push
jne
stos
sbb
lods
jmp
mov
lods
mov
fs
out
push
xchg
mov
xor
dec
push
bound
push
pop
dec
daa
dec
jp
ljmp
pop
movsb
mov
lock
ficompl
pop
mov
repnz
movsl
mov
int3
mov
mov
inc
cmp
outsl
sub
sub
divl
jg
mov
lods
sub
jle
adcl
getsec
dec
jp
cmp
cld
call
rcrl
mov
imul
sbb
mov
cltd
aad
pop
jnp
imul
and
mov
dec
es
aaa
gs
int
and
mov
into
lcall
jl
and
xlat
shlb
cmpsl
add
in
js
sti
ds
movsb
addr16
push
or
jne
es
fistpl
dec
out
jb
and
sub
or
clc
dec
shrl
or
call
xchg
addr16
dec
fxch
orl
mov
xchg
mov
mov
call
iret
add
pop
jge
xchg
stos
daa
daa
das
adc
bnd
outsl
push
das
popa
cld
add
jl
enter
pop
jge
cmp
addr16
jl
leave
aaa
ret
lcall
or
sbb
fwait
imul
int3
outsl
jae
xor
ret
stc
xchg
mov
mov
inc
push
fisubrl
popf
sbb
mov
mov
in
sub
outsl
mov
push
in
jnp
jp
pop
and
movsl
cmc
jle
in
daa
pushf
aaa
nop
xchg
add
jle
mov
xchg
test
adc
mov
gs
testl
push
lods
cli
pushf
adc
add
leave
jmp
cmp
mov
ljmp
mov
icebp
or
pop
out
push
mov
push
mov
bound
xorl
mov
fsts
push
iret
adc
and
cmpsb
pushf
sti
ss
adc
xchg
cmc
aam
sbb
sub
sub
mov
adc
jnp
sub
inc
aam
cld
std
pop
jb
cmpsl
mov
into
pop
push
sbb
fists
push
mov
mov
pop
and
mov
stos
sbb
repz
notl
cmpsl
inc
adc
adc
push
shlb
aas
sub
test
ss
mov
mov
incl
ret
jne
or
aad
stos
adc
insl
cltd
xor
jecxz
ja
arpl
cmp
mov
lods
in
test
jo
mov
pop
jae
inc
mov
fs
sbb
sbb
add
cmp
inc
jae
push
lcall
lds
xor
add
push
out
sti
and
ja
lods
and
pop
adc
data16
jae
adc
mov
cmp
and
or
cmp
shll
or
adc
gs
pop
and
cli
nop
cld
in
inc
ja
xchg
mov
mov
adc
insb
xchg
add
daa
mov
test
lcall
push
mov
lock
mov
in
mov
in
and
cmpsb
icebp
mov
imul
loopne
in
dec
ret
xor
enter
and
lahf
nop
sub
fidivs
incb
jmp
sahf
push
test
push
cmp
fcom
xor
cmp
cli
pop
xchg
xsha256
cmpsb
rorl
cmc
scas
pop
cs
push
in
outsl
test
or
shll
pop
add
xchg
dec
pop
pop
add
cmpsl
mov
int3
jo
xchg
add
jnp
lods
lret
leave
scas
xchg
sahf
stos
aam
jno
pop
imul
or
ficompl
jo
cmp
xchg
rolb
mov
sub
add
mov
push
sbb
sbb
imul
pop
mov
lods
ds
dec
mov
pop
adc
xor
ljmp
ret
orl
es
fisttpl
mov
or
adc
and
xor
xchg
sbb
loopne
movsb
sub
inc
test
jp
inc
in
mov
mov
or
and
pop
push
and
fstps
jge
insb
mov
pop
stos
test
cmpsl
arpl
data16
mov
xor
insb
ss
testb
or
fcmovu
fsubs
ljmp
andl
into
inc
gs
sbb
add
push
push
stos
inc
mov
xor
loop
fnstsw
lcall
fs
inc
je
and
sub
jb
jl
andl
dec
or
mov
jbe
cmp
out
jns
or
xchg
cmp
aaa
test
fistps
and
lea
xor
and
sbb
cli
sub
cltd
xor
subl
push
jle
push
cmpsl
in
or
or
cld
lcall
mov
add
out
pop
scas
lock
lds
cmc
hlt
sti
jb
xchg
or
movsl
mov
xchg
lahf
arpl
pop
push
push
subb
jmp
inc
mov
adc
inc
inc
data16
fdivl
pop
sbb
in
sti
in
mov
scas
jb
or
jae
mov
ret
dec
or
sub
mov
fstpl
das
or
sbb
aad
rcr
xchg
cmovl
mov
movsl
enter
inc
pop
xchg
or
fdiv
frstor
rcrl
or
mov
hlt
mov
mov
xchg
xchg
rcrl
iret
stc
pop
sub
push
mov
add
adc
mov
mov
mov
lahf
xchg
in
pop
notl
mov
dec
lock
mov
mov
popf
aas
faddp
ret
push
ret
xor
lcall
adc
ds
sbb
sbb
xlat
xchg
sahf
in
call
scas
xor
movsb
lcall
test
cmp
or
cmc
fwait
es
out
dec
cwtl
pushf
mov
fwait
cmp
loop
mov
fmull
mov
mov
or
subl
push
jle
mov
shlb
ja
mov
nop
loope
inc
shlb
in
pusha
or
int
mov
pop
add
sahf
jle
jmp
ja
mov
mov
cwtl
ss
mov
cltd
cmp
dec
imul
push
mov
in
inc
or
jge
cltd
in
nop
inc
aaa
cmp
popf
inc
leave
data16
jnp
and
js
pop
pop
pop
adc
and
into
je
jecxz
push
jecxz
out
and
sbb
and
insl
or
mov
fwait
ljmp
adc
in
push
les
lcall
hlt
shl
dec
sti
enter
push
xchg
jecxz
jge
pop
ror
mov
xchg
push
pop
frstor
mov
and
and
adc
mov
jmp
xchg
push
xchg
das
pop
pop
imul
xor
inc
lods
mov
sbb
sti
push
sub
addl
imul
mov
push
fwait
lret
jle
push
dec
jb
xor
inc
out
subb
out
roll
cmp
jno
fmulp
or
inc
popa
sbb
cld
push
jne
and
inc
push
mov
ds
xlat
push
pop
insl
testl
subb
mov
outsb
sbb
repnz
out
jne
or
add
sbb
or
fldcw
movsb
out
push
shl
insb
xor
mov
leave
adc
mov
ret
iret
hlt
inc
out
mov
mov
movsb
test
ja
xor
jo
pop
lcall
cmp
mov
sbb
es
mov
jmp
xchg
je
das
outsb
das
jnp
pushf
loop
int3
popa
rcrb
xor
xchg
in
inc
jg
iret
cmp
inc
jbe
mov
dec
hlt
stos
outsl
cli
xor
push
add
pop
dec
push
push
adc
and
cmpsb
mov
pop
popa
mov
mov
shr
cltd
test
mov
and
lea
sbb
gs
and
dec
jne
in
test
js
cltd
shll
mov
sarl
cmpsl
iret
movsl
sub
adc
sub
fsubs
adc
dec
or
mov
nop
push
xchg
cmpsb
lock
cmpsl
and
jno
incl
out
notb
popf
jnp
les
out
xor
insl
repz
or
out
sub
lods
cmp
push
daa
lods
popf
jp
jbe
pusha
adc
push
adc
adc
cld
lret
inc
xor
loopne
inc
movsl
push
data16
push
sbb
test
sub
pop
adc
in
pmuludq
mov
movsl
dec
mov
jmp
and
sub
mov
jecxz
movsb
or
xchg
dec
inc
mov
mov
and
mov
jmp
ss
gs
inc
and
aad
movsb
mov
dec
les
popf
test
pop
pusha
sbb
push
adc
es
push
daa
scas
sbb
lock
leave
add
cmp
pop
inc
out
arpl
mov
dec
jle
ljmp
fcomps
es
sahf
mov
mov
xor
mov
ja
mov
push
mov
sbb
mov
insl
out
lea
pop
cmpsl
sbbb
push
jl
inc
dec
xchg
into
movsl
cmc
pop
das
xchg
push
push
push
jle
rcrl
inc
xor
mov
cli
dec
dec
cli
call
xchg
mov
call
mov
lcall
xor
jns
adc
jmp
aam
sub
movsb
mov
cmp
jmp
jne
mov
push
mov
or
push
push
icebp
dec
push
pop
sub
testb
sti
xor
mov
mov
jnp
mov
sbb
inc
stc
leave
test
out
shr
pop
daa
jmp
xchg
cmpsb
adc
pop
lock
mov
dec
push
cmpsb
je
cmp
sbb
and
mov
dec
or
test
xchg
sti
mov
rolb
arpl
pop
mov
pushf
inc
movsb
popf
cmp
test
pushf
add
mov
adc
mov
out
scas
popa
sub
jmp
andb
sbbl
add
popa
xor
mov
cmp
frstor
in
movsl
loop
ffree
aad
leave
jge
cmp
cmpsl
aam
dec
movb
xchg
gs
lods
ss
mov
pop
aad
inc
rclb
cmp
rcrb
push
out
adcb
gs
cltd
clc
stos
sbb
mov
pusha
int
gs
push
std
sbb
iret
add
bound
hlt
mov
pop
and
pop
cs
pushf
dec
insb
stos
xchg
add
xor
mov
rcrl
rclb
and
in
xchg
negl
xchg
and
pushf
cmpsl
ret
fiaddl
mov
jno
das
lret
cli
mov
cmp
mov
mov
adc
aam
pop
mov
cs
jns
jge
xchg
lcall
mov
jnp
or
mov
mov
adc
lcall
dec
push
lods
leave
ret
pushl
jb
mov
data16
inc
jecxz
add
es
mul
add
cwtl
mov
mov
mov
fwait
clc
sub
dec
mov
loope
xor
add
arpl
ljmp
cmpsb
out
test
scas
enter
pop
push
fs
sub
sub
addr16
lret
pop
mov
ret
lret
mov
push
cmp
insb
aam
mov
push
inc
mov
and
loop
mov
push
aam
push
arpl
xchg
push
or
dec
xlat
push
callw
mov
ljmp
push
arpl
ficoml
or
loopne
movsl
add
fs
push
push
rol
jp
xchg
sub
ljmp
movsl
dec
daa
jg
mov
cltd
cmp
in
pop
xchg
imul
aam
cmpl
sub
fimuls
scas
push
pop
mov
mov
push
scas
lock
push
aad
movsl
fldenv
fisubl
inc
sarl
sub
nop
scas
shrl
or
imul
dec
in
in
loop
push
nop
pop
mov
or
xor
movsb
mov
push
arpl
pushf
divb
cmp
scas
dec
mov
aaa
xchg
test
jb
gs
fisttpll
mov
je
jle
psubd
outsl
mov
mov
aas
cmp
pusha
repz
cwtl
xor
dec
lods
mov
cmpsb
push
ds
fsubs
xchg
lret
inc
aad
push
ljmp
xor
push
push
mov
pop
in
sbb
pop
jle
xor
push
repz
movsb
mov
std
cld
mov
cltd
sbb
lds
fists
popa
mov
mov
jmp
inc
sbb
minps
flds
pop
in
jns
popa
sbbl
mov
das
jno
sbb
fscale
insb
mov
pop
pop
xor
dec
push
xor
pop
cmp
insl
mov
ret
loope
data16
sub
add
adc
xchg
mov
imul
cmpsl
mov
jp
add
mov
or
mov
adcb
or
call
mov
mov
cmp
arpl
jae
sub
fildl
fnsave
mov
pop
insb
ret
mov
pusha
fistl
dec
sub
push
js
cmp
xor
jb
ret
mov
cmpl
cs
aaa
imul
and
dec
pop
add
test
xchg
xchg
mov
xchg
clc
and
inc
push
sub
test
loop
mov
rclb
mov
pop
sub
jle
rol
mov
outsl
jb
pusha
movhlps
scas
jno
add
and
or
xor
cmp
mov
mov
mov
scas
lock
sub
test
mov
and
mov
jae
lcall
scas
sti
and
cs
mov
rcrb
pop
pop
jg
sbbb
mov
sahf
pop
dec
or
pop
in
add
fistps
div
mov
fmuls
aad
xchg
sub
fstpt
xchg
xchg
sub
mov
and
sub
roll
mov
or
inc
mov
insl
adc
cmp
pop
inc
mov
fldenv
pop
xchg
sub
cltd
insl
lea
inc
cmc
sbb
jecxz
aad
mov
pop
push
dec
inc
jno
mov
jbe
xchg
popf
jbe
xor
lcall
jns
xor
shrl
lcall
fildll
push
pusha
gs
lods
lret
in
jp
adc
cmp
sbb
movsl
mov
out
lret
int3
adc
inc
pop
std
cs
mov
daa
js
dec
mov
jl
sub
repnz
jae
jg
pop
idivl
jmp
jg
lahf
out
popf
iret
pop
insl
or
cmp
test
shrb
les
jmp
rcll
sbb
out
enter
cltd
ficomps
aaa
shlb
in
xchg
das
adc
inc
in
ret
xchg
in
in
push
popa
stc
call
mov
xor
push
dec
xchg
mov
aad
dec
test
and
sbb
pop
into
mov
aam
mov
jl
test
xchg
sahf
pop
pop
cmp
pop
popf
jo
sub
stos
adc
das
ret
cli
adc
shlb
xor
xchg
popf
insb
add
mov
stos
xchg
add
jg
cltd
in
aam
jmp
adc
pop
sbb
fidivrl
dec
roll
add
pop
jae
pop
pop
bound
and
icebp
pop
jno
and
frstor
jmp
ss
test
inc
rcrb
outsb
adcb
shrb
xchg
jnp
push
outsb
cmpl
test
loope
xor
les
gs
pop
push
xor
or
and
scas
mov
jl
lock
outsb
mov
test
fdivp
into
dec
addr16
pop
dec
clc
or
adc
pop
push
sbb
sti
push
stos
fldenv
aaa
ficoms
pop
xchg
icebp
add
jl
leave
push
test
mov
in
aam
out
mov
jmp
dec
push
cmpsl
push
adc
fwait
dec
mov
shlb
inc
punpckhwd
mov
xchg
xor
into
cmpsl
insb
inc
pusha
push
fmuls
fucomi
and
out
std
push
xor
pop
jl
push
jns
leave
popf
cmp
lea
inc
dec
ljmp
ss
or
enter
mov
and
push
and
push
xor
jns
vpmaddwd
xchg
jecxz
jae
mov
dec
xchg
icebp
sti
jns
call
xor
jae
xchg
psubq
clc
mov
jno
test
aam
mov
mov
stos
jp
pop
xchg
mov
repnz
jbe
push
mov
fucomp
lea
fdivs
lock
popa
data16
mov
dec
lcall
aad
out
xchg
xor
or
fistl
cs
sub
xchg
js
sub
push
mov
rcrb
sarl
enter
aas
movsb
cltd
xchg
clc
rolb
mulb
mov
sahf
incl
add
fildl
xlat
mov
jno
add
pop
js
addr16
out
mov
jb
das
lods
shlb
test
es
inc
dec
push
inc
mov
imul
xchg
pop
mov
adc
mov
pop
push
mov
ds
and
sti
gs
movsl
jmp
jnp
out
jg
repnz
mov
or
shl
mov
xchg
mov
pop
dec
roll
cmp
xor
cmp
imulb
lea
mov
jp
dec
stos
mov
sub
cli
xchg
popf
scas
mov
nop
stos
scas
scas
dec
fiaddl
jmp
in
inc
mov
xor
aas
popa
cmp
xchg
jnp,pn
or
push
lea
aam
fcmovnbe
stos
jecxz
dec
xor
inc
pop
out
mov
daa
sub
sbb
int
inc
jne
push
jbe
mov
bound
cmp
repnz
sbb
pop
and
and
mov
pop
mov
stc
leave
sti
sti
mov
repz
lret
and
add
adc
in
dec
into
cltd
mov
jle
nop
xor
lods
xchg
and
inc
fcmovne
mov
push
repz
push
mov
xchg
mov
pop
xor
jge
mov
jae
mov
xchg
lods
imul
sbb
and
aad
lods
movsb
mov
jl
sbb
dec
pop
cs
jp
stos
dec
or
cltd
xor
lahf
jl
mov
shlb
mov
lods
mov
ds
lea
cmpsl
stos
test
arpl
mov
mov
js
mov
adc
and
adc
clc
inc
ja
adc
mov
int3
xor
imul
test
adcl
add
mov
insl
and
xchg
cs
xchg
sub
cmp
hlt
sub
fldcw
sti
jnp
adc
lret
pusha
lahf
dec
inc
xchg
sbb
movsb
sbb
insb
pop
sub
insb
ja
sub
not
leave
mov
xchg
cmp
in
fiadds
xor
out
and
push
std
stc
mov
je
popf
xchg
push
mov
inc
das
xchg
add
jecxz
stos
push
pushf
movsb
jnp
cli
mov
rol
sbb
cmc
sarb
or
adc
cmp
scas
lret
and
pop
xlat
repnz
cmp
repnz
inc
roll
pop
cmpsl
mov
test
outsl
in
xorb
arpl
std
test
xor
pop
addr16
data16
sbb
lcall
repnz
out
push
xchg
lds
clc
daa
cmp
insl
xchg
ret
mov
dec
shrl
ret
inc
in
ficompl
pop
cmpsl
in
add
adc
push
lret
scas
shll
test
inc
adc
jo
xor
in
repnz
sub
stos
jne
in
jl
xchg
cwtl
lods
xchg
dec
popa
and
jecxz
or
test
call
sbb
xchg
inc
shll
fisttps
adc
sub
movsl
xchg
jecxz
xchg
push
leave
or
add
js
frstor
mov
and
add
imulb
hlt
scas
pop
cmp
dec
clc
cld
mov
or
out
xchg
sub
or
jle
push
nop
dec
insb
out
sahf
add
scas
cmpsl
insb
sub
ja
pushf
adc
fldt
add
fimuls
xor
dec
jae
push
adc
push
pushf
inc
int3
xlat
jno
mov
pop
add
leave
icebp
dec
mov
lret
repnz
in
mov
stos
and
call
xor
jne
dec
test
data16
xchg
lret
fcompl
shll
iret
xor
xchg
mov
fucomip
push
gs
pop
hlt
rorb
fimuls
cltd
lock
push
lcall
das
ret
dec
notb
cwtl
mulb
add
fwait
and
mov
shll
cmp
dec
rolb
pop
or
in
inc
scas
icebp
addb
outsb
insb
bound
push
aaa
sti
adc
push
mov
push
xchg
and
ljmp
lds
jno
mov
popa
jl
aas
xlat
sbb
fisubrl
aaa
dec
inc
push
pusha
mov
rolb
sti
pop
push
jmp
cmpb
and
and
adc
sub
movsb
or
sub
sahf
imul
lock
xchg
lcall
test
pop
sarl
into
lods
lahf
inc
push
das
xor
push
aam
push
cmp
jne
sti
mov
sar
xor
enter
cmp
jl
add
cmp
lcall
sbb
scas
call
fwait
pop
das
lods
aam
imul
andl
cmpsb
cmp
es
dec
cli
pushf
and
pushf
test
xor
in
mov
sahf
imul
push
jne
push
lret
xor
lret
mov
push
sub
call
aaa
cmp
xchg
pop
shrb
push
ret
cs
test
aam
fmul
loope
fdivrl
clc
sbb
inc
pushf
mov
xchg
js
push
loope
mov
pop
and
int3
mov
sbb
push
imul
popl
push
repnz
mov
mov
mov
subl
mov
cmp
out
enter
aam
mov
loope
xor
imul
js
push
popa
sbb
arpl
sbb
test
lret
aas
cmpsl
loop
and
out
pusha
test
or
pop
nop
and
mov
mov
ret
out
xchg
mov
icebp
dec
cmp
mov
xchg
push
mov
xchg
push
lret
lods
movsl
xchg
dec
mov
dec
mov
aam
inc
and
andb
punpckhdq
mov
lret
dec
fstpt
inc
mov
es
inc
test
xlat
inc
jge
leave
fiadds
push
xchg
pop
lods
repz
adc
inc
cld
fcmovbe
insl
andb
cmpsb
dec
push
and
out
lret
scas
int3
or
adc
and
mov
and
fwait
xchg
pop
rol
imul
nop
xchg
orl
mov
add
enter
and
push
jnp
lret
mov
test
fcoms
cld
sti
fwait
loopne
jl
cmpsb
rcll
inc
das
pusha
push
sub
and
inc
sub
out
sbb
mov
or
or
cli
mov
addr16
or
cmp
pop
mov
pop
mov
mov
popf
and
mov
cs
sub
aad
xchg
fists
cmp
lahf
sbb
and
and
out
ja
mov
sub
push
sub
push
sahf
or
pop
xchg
outsb
sub
add
sbb
data16
and
imul
addr16
ljmp
or
xchg
add
xchg
imul
or
out
hlt
dec
icebp
mov
xchg
cld
sti
bound
jge
pop
icebp
rcl
aaa
sub
or
movsb
mov
and
out
fs
xor
jne
dec
aas
ret
sbb
fisttpll
xchg
hlt
jns
pop
shrb
jb
punpcklbw
mov
lahf
inc
add
sbb
sarl
mov
push
fwait
mov
inc
xlat
subl
stos
repz
mov
or
xchg
arpl
adc
ss
dec
loopne
jle
mov
into
flds
ljmp
mov
pop
mov
mov
test
aaa
lods
mov
lret
push
pop
xor
mov
jno
loopne
in
or
jb
ljmp
outsl
mov
or
fucomip
mov
adc
clc
dec
clc
adc
hlt
and
push
xchg
pop
orb
lods
mov
sarb
fimuls
pushf
lea
lods
fldl
stc
cmp
jne
jne
imul
fwait
mov
jae
ret
test
sbb
lds
sarl
mov
xchg
push
cmp
in
loope
push
mov
mov
loopne
cli
lods
xchg
mull
ror
xor
outsb
mov
pop
xlat
and
nop
outsl
les
aam
dec
cmp
xlat
arpl
fst
jo
push
lods
xlat
and
loopne
pop
xchg
jae
nop
roll
jno
sarl
xchg
outsb
and
ficoml
adc
mov
js
xor
insl
stos
and
lret
hlt
fdivr
in
pop
outsb
pop
xchg
ljmp
test
sbb
out
push
pop
rorb
insb
fnstenv
dec
imul
pop
sbb
loopne
inc
mov
xor
push
loopne
jae
inc
mov
fwait
lret
dec
js
mov
into
cmp
scas
push
fimull
or
and
jnp
shrb
aam
stos
jo
out
loope
inc
fcoml
pop
repnz
lcall
mov
lds
push
push
lods
inc
cmpsl
xor
mov
add
notb
cld
pop
ja
adc
insl
sbb
inc
mov
inc
dec
stos
out
push
jae
cmp
add
jmp
xchg
fincstp
aas
imul
xchg
aas
adc
es
stos
lea
insl
imul
addr16
gs
sub
mov
gs
ljmp
in
insb
mov
mov
push
jo
sarb
rcrl
sti
mov
mov
inc
pusha
or
xchg
arpl
es
pop
out
repz
ficoms
negl
mov
icebp
jb
imul
out
out
mov
ds
insl
loope
sbb
dec
jnp
jp
jmp
pop
pop
outsb
fsubrl
add
add
leave
adc
dec
insl
lea
loope
adc
daa
xchg
pop
lahf
xor
sbb
mov
fmull
push
mov
mov
sbb
nop
or
lock
lock
push
add
lock
push
mov
mov
cmpsl
jnp
aaa
flds
popa
sub
clc
mov
sub
aas
js
mov
mov
or
add
mov
dec
mov
mov
or
pop
xchg
adc
mov
adc
or
lcall
xchg
stos
and
loop
lret
cmp
sti
out
add
and
in
inc
outsl
stos
in
xor
xor
notb
leave
sahf
clc
pop
call
mov
in
sbb
rol
cmc
mov
in
cli
ja
pop
cmc
into
lcall
lds
cmp
inc
inc
xor
stc
aad
iret
in
pop
mov
xlat
in
int3
jnp
push
xchg
xor
sub
and
idivl
lods
stos
lods
inc
inc
out
shll
pop
push
push
jns
cmp
inc
push
clc
push
adc
push
jae
cmpsb
dec
popf
add
xchg
aad
sbb
ret
mov
or
das
in
pop
scas
lds
inc
jecxz
fwait
inc
jmp
insl
mov
addr16
popl
iret
add
out
fsubl
mov
add
or
or
inc
cmp
add
and
mov
dec
pop
lods
mov
mov
xchg
or
loope
add
adc
outsb
or
pusha
call
in
xor
cmpsl
enter
or
sub
push
and
repz
hlt
jb
and
rcrb
ror
sbb
inc
mov
or
pop
jbe
sbb
jle
xchg
jp
jbe
dec
es
adc
dec
imul
fwait
adc
outsl
xchg
xor
xchg
inc
clc
push
hlt
mov
es
push
leave
enter
hlt
ffreep
push
adc
cmc
jb
cmc
call
xchg
iret
mov
pop
mov
repnz
inc
sahf
stc
mov
fmuls
aas
sub
jb
mov
sbb
sbb
and
lods
mov
fists
dec
cmpsb
mov
jmp
lret
movsb
cmp
xlat
push
gs
out
incl
xorb
jl
pusha
xchg
push
fsubl
xor
es
and
dec
xchg
jne
xor
mov
ja
mov
fbld
or
sub
subb
add
int3
dec
hlt
xchg
loop
push
cmpsl
stos
rcl
push
lods
imul
insb
test
inc
pop
stc
lea
cmp
data16
adc
cmp
int
jbe
in
insl
mov
rorl
sbb
sub
js
and
repz
push
push
repnz
push
lret
in
jnp
cmpsl
xchg
test
ljmp
shr
push
pop
cmp
adc
aad
pop
adc
sub
pop
xchg
cmp
jb
mov
inc
mov
notb
fs
shl
fs
mov
inc
icebp
jmp
fwait
scas
mov
imul
push
cld
mov
sbb
ret
rcl
outsl
and
lahf
ljmp
movsb
mov
addr16
popw
out
cmpsl
push
jbe
push
mov
nop
repnz
cmp
das
dec
in
clc
jo
pop
rorb
or
sbb
sbb
js
js
shl
mov
mov
stos
pop
and
mov
mov
imull
pop
cmp
cwtl
lret
iret
dec
xor
or
pop
mov
push
and
fbstp
push
not
ljmp
nop
sarl
pop
pop
in
fs
pop
shlb
mov
inc
out
add
inc
push
add
or
mov
sub
push
xor
sbb
lahf
cmp
pop
xchg
mov
xchg
pop
pop
sub
sub
pop
mov
xchg
out
sbb
cli
pop
dec
mov
std
sbb
insl
sbb
sahf
lahf
mov
sub
mov
mov
jb
adc
cld
or
addr16
push
pusha
mov
std
push
lahf
cmp
jmp
movsb
lea
pop
push
imul
jle,pt
ja
xor
jne
pusha
jmp
fidivs
lret
mov
loop
dec
adc
clc
insb
mov
sub
jg
pop
int3
jge
and
xchg
clc
cmpsl
jns
mov
mov
clc
std
cmp
pop
cld
sbb
add
xchg
cmp
mov
pop
into
aam
mov
sbb
sarb
gs
and
xor
adc
shlb
mov
sbb
xchg
orl
mov
cli
in
dec
mov
idivl
pusha
test
jnp
dec
loop
imul
or
nop
push
push
pop
idivb
scas
jae
push
lods
mov
test
adc
xor
mov
add
adc
nop
and
pop
push
dec
insl
mov
imull
cmp
or
aas
pushf
icebp
dec
adc
dec
inc
inc
test
int3
mov
scas
div
jmp
mov
or
andl
cmp
lds
cltd
enter
or
ret
lret
repz
jge
out
roll
fsubrs
xor
bound
imul
and
movsb
fistpl
test
inc
lods
fdivs
cmp
adc
sarb
or
imul
lock
push
pop
mov
cmp
adc
call
cmp
fisubl
inc
int3
stos
lcall
jg
popf
adcb
notb
cmpl
fstpt
xlat
aam
dec
inc
mov
fisttpl
pop
test
or
mov
js
arpl
ret
cmp
ljmp
and
mov
inc
in
pop
xorb
adc
push
sub
es
ret
xchg
sub
out
fnop
pop
in
jnp
mov
imul
ret
jne
in
data16
xchg
xchg
icebp
mov
lret
shll
fstps
cmpsb
enter
cmp
cld
shl
cmp
rclb
pop
insl
cmpsb
xor
cld
pop
cli
and
dec
je
test
popa
mov
push
and
push
jl
or
arpl
and
jl
pop
imul
gs
fimull
and
sub
dec
jl
xchg
cli
cmp
jns
aam
xchg
jno
mov
leave
ret
daa
dec
pop
aam
sbb
inc
mov
push
clc
sbb
insl
ret
pop
fcmovnb
outsl
adc
test
clc
jmp
call
sahf
cmp
loope
leave
jb
add
lock
in
sub
push
and
dec
loop
std
jno
xor
movsl
repz
cltd
ss
lahf
xchg
dec
imul
fistpll
out
aad
mov
push
mov
xlat
push
hlt
in
jl
jg
repz
movsb
mov
popf
jl
movsb
and
call
or
push
mov
bound
lea
push
and
jge
scas
fnstcw
js
jnp
ds
in
jno
loope
sbb
xor
shll
imul
cmp
inc
fimull
jbe
push
sub
sub
mov
xor
cltd
sti
sub
lods
das
loop
mov
and
jo
call
xor
jno
add
or
leave
pop
bts
imul
pop
loope
adc
push
mov
xchg
pushf
frstor
cs
ss
imul
mov
xlat
stos
and
push
mov
jo
sbb
xchg
push
add
stc
push
inc
jl
mov
add
inc
sbb
or
cli
stos
es
pop
call
mov
add
int
lock
add
inc
test
mov
sbbl
sbbl
imul
jb
cli
ja
xchg
lods
test
xchg
adc
cltd
sbb
xchg
pop
fsts
push
rol
mov
jmp
inc
mov
leave
adc
rclb
xor
ja,pt
mov
leave
and
je
bound
cmp
jmp
push
mov
fs
pusha
add
inc
mov
popa
movsb
rcll
dec
sbb
fs
xor
test
adc
adc
jle
repz
out
mov
in
mov
nop
rcrl
jmp
mov
cwtl
bound
test
pop
pop
mov
xchg
loopne
add
jecxz
cmp
mov
mov
inc
cmpsb
loopne
inc
in
adc
cld
mov
mov
stos
add
ds
and
enter
sarl
xor
in
xchg
xchg
ljmp
cld
mov
scas
sbb
addb
bound
mov
mov
in
cmp
adc
std
mov
xchg
push
fdivrs
xor
xchg
inc
repnz
push
rcrb
call
push
adc
xor
je
add
push
jmp
in
outsl
pop
mov
xlat
mov
mov
popa
add
in
xor
ss
xor
inc
aad
in
mov
fwait
lahf
and
arpl
out
and
jne
dec
sub
cld
push
hlt
push
das
loop
jo
push
daa
jmp
test
shlb
add
mov
pop
in
in
xor
jge
xor
push
mov
xchg
test
and
inc
sbb
fmull
mov
lret
inc
push
sarl
adc
fs
jmp
sbb
dec
sbb
iret
and
lods
sti
push
popf
andb
fistpll
adc
mov
cmp
lods
push
lock
push
pop
leave
pop
mov
adc
jo
mov
sub
int3
push
xor
dec
mov
mov
mov
jns
adcl
int
lock
cmp
aad
daa
xorl
pop
mov
mov
nop
loopne
clc
mov
ja
gs
fdivrs
int
sar
mov
rcll
xchg
xor
cmc
int3
or
and
cmp
test
fldl
sar
add
stc
adc
xchg
push
dec
mov
sti
test
sub
sahf
lods
jg
sub
lahf
dec
ljmp
pop
in
mov
aaa
cltd
scas
mov
add
divps
push
mov
and
cmpsl
pop
iret
mov
push
in
lret
xchg
pop
mov
pop
inc
mov
cmc
push
add
cs
dec
xchg
cmp
mov
mov
lods
cmpsb
jecxz
ja
adc
movq
pop
nop
adc
add
ja
pop
sahf
xchg
sbb
inc
sbb
pop
mov
push
pop
inc
jo
add
aam
pop
hlt
add
sbb
push
mov
test
daa
cwtl
pop
add
sbbl
pop
push
mov
orl
adc
sahf
dec
push
sub
sbb
mov
mov
inc
js
stc
adc
sarb
jnp
jle
loopne
idivb
jg
inc
bound
into
sub
inc
inc
jbe
push
pop
dec
mov
mov
cmp
dec
pop
and
xor
rorb
loopne
push
cmp
xchg
push
ret
stos
popf
testl
and
sub
add
movsl
das
dec
dec
sbb
ljmp
jns
push
fsts
and
cmp
insb
jmp
stc
ret
xchg
std
push
dec
mov
add
inc
repnz
movlps
pop
aam
or
or
rcr
icebp
cmc
sbb
xchg
adcl
jnp
lcall
sti
lret
sub
jecxz
mov
cld
repz
mov
movsb
dec
ds
sbb
decl
ret
mov
mov
jmp
daa
jo
add
leave
call
lret
scas
mov
call
das
cmp
push
into
mov
stos
mov
mov
mov
sub
out
push
mov
lret
inc
mov
sahf
push
out
push
pop
out
int
mov
add
repnz
sub
add
sub
mov
or
inc
xor
shrl
sub
ret
jo
pop
nop
adc
inc
mov
movsb
pop
je
arpl
sub
in
mov
adc
xor
int
jns
adc
sbb
arpl
fimuls
push
ror
xor
lds
and
jo
jae
jne
jb
push
cli
out
pop
into
repnz
sbb
mov
inc
xor
adc
sub
cmp
stc
xor
outsb
das
popf
cmp
je
jecxz
andb
insl
push
xlat
popf
jno
rol
dec
int3
push
mov
pushf
mov
outsb
lock
shlb
inc
scas
and
sbbb
mov
aas
outsb
mov
jne
repz
jns
or
das
stos
inc
inc
and
inc
push
in
jnp
dec
xchg
fnstsw
lret
and
adc
sub
push
loop
push
fstpl
sbb
test
fbstp
push
adc
inc
dec
test
add
ds
xor
in
jp
scas
cmc
outsb
or
push
insb
mov
jl
inc
xor
jp
or
xorl
bound
pop
and
adc
and
cmp
cmovb
add
sub
jecxz
rorl
pop
inc
push
js
sbb
add
rcr
jae
scas
push
dec
adc
pusha
xor
dec
outsl
repz
ret
insl
cmp
push
xlat
xchg
xchg
dec
sbb
outsb
xor
lea
imul
sub
setae
mov
push
sbb
dec
add
or
lcall
fidivl
push
inc
movsb
shlb
push
stos
adc
dec
test
xor
push
lds
rcll
xchg
inc
pushf
pop
jl
push
mov
add
lods
nop
cmpsb
lcall
inc
scas
push
cmpsl
sub
add
dec
inc
mov
xor
adc
loop
sbb
sbb
push
add
into
and
icebp
ret
icebp
pop
jl
jp
sub
ja
inc
add
pop
xchg
jmp
outsl
lods
lods
fcmove
fsts
mov
mov
adc
push
testl
dec
cmp
mov
pop
or
dec
sti
sbb
insb
mov
cmp
mov
jl
xor
cli
cltd
pop
sti
je
jmp
add
in
sbb
xchg
cmp
xor
imul
adc
pop
or
js
cmpsl
mov
outsb
mov
insl
xor
sub
cmp
sub
stos
xor
aad
out
sbb
adc
pop
aas
pop
popa
and
add
out
daa
lock
stos
fidivl
ror
jl
int3
movsl
insl
add
mov
jge
mov
mov
push
sbb
xorl
int3
loop
into
or
xor
les
lret
sub
imul
push
cmpsb
das
mov
sbb
xor
daa
sbb
das
jns
add
outsb
mov
cli
orb
mov
loop
repz
xor
out
mov
enter
repz
out
push
ret
cmp
push
mov
imull
cmp
pop
push
movsl
cmc
xchg
xor
in
xchg
jg
rcl
lret
lods
jbe
mov
jg
sub
fmuls
mov
out
imul
inc
jl
jb
arpl
out
push
jp
push
and
mov
subl
adc
sti
push
jecxz
cmp
sub
mov
stos
iret
push
push
test
xor
push
mov
into
pushf
cwtl
pop
pop
adc
stc
and
push
mov
rcl
mov
xchg
push
sahf
pusha
xchg
stos
out
pop
test
mov
mov
jle
shr
xchg
cmp
or
fisubrl
or
lcall
nop
mov
int
cwtl
bnd
aas
lods
cld
jmp
mov
sahf
in
cmpsb
enter
jle
pop
rolb
lcall
or
sbb
sub
aas
int3
pop
loope
vmptrld
fcompl
adc
dec
lods
xchg
popf
leave
and
aam
and
jle
lcall
or
add
addl
stc
push
lods
jp
pop
jmp
jg
stc
add
mov
xorl
outsb
xchg
lock
in
fstps
pop
cwtl
insl
mov
out
shlb
adc
cmp
cmp
out
or
cmpsb
jge
cltd
lret
fnstenv
pusha
sbb
sub
push
mov
inc
mov
dec
test
mov
cmpb
push
in
aam
leave
imul
jge
js
dec
out
in
or
cmpsl
dec
mov
clc
scas
loop
mov
scas
gs
stos
shrb
dec
xor
popf
out
repz
dec
or
pusha
popf
mov
push
ljmp
jp
or
cld
jbe
cmp
scas
adc
subb
lock
sub
leave
ja
movsb
cs
aam
jno
jl
mov
inc
lock
cmc
inc
and
mov
mov
aaa
sub
inc
xchg
and
fcoml
jne
and
nop
lock
push
mov
adc
inc
mov
or
cmc
rcll
pop
pop
xor
mov
sub
adc
test
sahf
or
cld
sbb
jecxz
push
push
push
mov
push
mov
mov
xchg
data16
jmp
push
pop
jo
push
fldcw
xorb
sbb
jecxz
mov
popf
mov
in
jg
adc
pushf
mov
cmpsl
outsl
adc
push
inc
jge
leave
xchg
leave
xlat
popa
cmp
pushf
rcrl
iret
inc
cmp
xchg
outsl
xor
sub
inc
mov
jo
inc
xchg
sbbb
int
push
das
cmovno
lods
call
jmp
mov
mov
in
ds
add
pop
sbb
sub
movsb
mov
sbb
fbld
jl
ret
popf
js
xchg
test
mov
xor
leave
xchg
rcr
sbb
ja
insb
pop
mov
cmp
mov
std
inc
adc
sbb
ret
sub
jge
sti
arpl
lds
and
pop
xchg
out
fwait
push
icebp
mov
clc
inc
and
pop
loopne
mov
fsubs
scas
push
and
daa
adc
add
fmuls
rorb
push
arpl
nop
cmp
mull
sti
xor
dec
fnstenv
jae
lds
in
xor
xor
xor
sbb
and
cmp
test
sub
xor
nop
nop
xor
insl
adc
xlat
mov
xchg
lcall
pop
sub
dec
adc
mov
adc
or
xchg
mov
cmpsb
fimull
in
inc
test
test
jbe
ds
adc
in
outsl
jne
adc
dec
dec
and
add
mov
je
cmp
mov
fildll
nop
jnp
dec
cwtl
cmp
mul
in
sbb
mov
in
mov
fs
mov
mov
mov
ret
dec
sbb
xor
jae
inc
cltd
inc
fistps
cmp
mov
pop
movsl
jg
lods
and
mov
cmp
dec
mov
mov
sub
xlat
insl
into
mov
and
cmp
js
fdivr
or
jp
xchg
pop
mov
fdivs
inc
call
jae
clc
mov
and
insb
mov
cmp
push
xchg
popa
sub
cs
or
inc
push
add
xor
push
lock
sub
add
inc
les
idiv
ljmp
push
cmp
sahf
aaa
mov
mov
aam
movsl
cs
fdivrs
out
and
lea
das
addl
adc
dec
dec
insl
iret
push
gs
sbbw
call
out
outsb
dec
adc
push
push
int
xchg
or
push
sbb
ja
in
dec
xchg
pop
xor
xlat
push
mov
pusha
xchg
pop
clc
xlat
push
aas
xor
jle
xor
ljmp
out
les
cmpsl
roll
fdivl
add
xor
cmc
enter
and
jae
sbb
pushf
roll
pop
mov
xchg
jmp
xchg
adc
mov
insl
cmpsb
in
jb
int3
leave
std
lods
lds
rcl
stos
lods
mov
clc
mov
pushl
xchg
and
lea
sbb
testl
test
jmp
stos
mov
std
mov
gs
std
cld
mov
fists
andb
mov
in
mov
jne
mov
xorb
xor
lock
or
ss
dec
jle
jns
inc
mov
mov
inc
xor
jnp
push
mov
ljmp
sarl
xchg
cwtl
pusha
lock
mov
sti
pop
aaa
jae
pop
aaa
shlb
repnz
pop
popl
repnz
xchg
jb
push
dec
xorb
jg
fsubr
adc
pop
or
mov
mov
cmp
jae
push
mov
fsts
nop
mov
fiadds
lods
jecxz
add
int
iret
cmc
fists
rorl
loop
mov
mov
ret
adc
push
dec
in
loope
pop
sub
push
push
xchg
jmp
out
xchg
scas
mov
jge
or
test
out
xor
loop
in
rol
imul
pop
test
jb
mov
inc
aam
pusha
out
dec
mov
pop
mov
dec
sub
test
xchg
mov
shlb
lods
repz
cwtl
clc
xor
jo
in
adc
adc
addb
jge
xchg
fwait
hlt
lcall
mov
inc
ret
out
stos
jle
addr16
mov
das
mov
shr
lea
add
pop
mov
test
push
add
push
mov
shl
mov
cmp
mov
stos
orl
in
lcall
dec
cmp
lods
stos
mov
int
mov
fsubr
and
outsb
and
adc
dec
adc
mov
scas
addr16
mov
fidivs
sahf
add
popa
inc
pop
and
sti
mov
lds
je
cld
push
pop
xor
push
ret
push
pushf
in
mov
fistpl
jbe
xorl
or
mov
xchg
xchg
movsb
popf
push
bound
loop
and
aam
loop
loop
add
aaa
orl
mov
insl
clc
jae
push
std
pop
ret
cmpb
add
ret
std
sti
and
imul
dec
or
xchg
mov
std
rcl
pop
in
sbb
mov
sub
inc
dec
outsl
les
add
xor
xchg
xchg
cmc
std
mov
mov
add
mov
enter
jmp
test
add
mov
insl
movsb
inc
cs
mov
fcomps
jno
loopne
bound
push
mov
dec
popf
xchg
idiv
shlb
das
fidivrs
jecxz
lcall
xchg
xchg
mov
push
jnp
popa
hlt
xor
leave
movsb
push
dec
aaa
negb
adcl
jns
xor
loopne
mov
jmp
mov
inc
adc
jle
loop
xchg
imul
cld
out
dec
mov
leave
nop
sub
xchg
fucomp
aaa
fldl
mov
and
nop
xor
in
int3
pop
das
push
or
xlat
and
shl
push
call
insb
sub
int3
addl
cmpsl
mov
dec
test
mov
sub
lds
pop
adc
xchg
popa
ss
movsl
fisubrs
andb
movsb
lds
fwait
es
and
fistpll
enter
jl
inc
rorl
iret
sbb
sbb
add
addr16
stos
fcompl
pop
cmpsl
inc
adc
or
cmp
fnstcw
jge
and
mov
push
xor
into
test
pop
sub
jmp
icebp
jmp
movsl
xchg
xor
jmp
mov
les
push
roll
mov
push
or
inc
xchg
sub
xchg
mov
and
cltd
arpl
rclb
add
mov
jae
xor
loope
icebp
sti
xchg
sbb
mov
and
or
das
jae
adc
fistpl
out
inc
push
add
cs
xchg
in
lret
dec
push
test
and
xchg
aad
mov
iret
call
xorl
jle
popa
iret
adc
xchg
lcall
push
mov
add
movsb
push
lods
sahf
mov
sbb
xchg
mov
lods
dec
xor
push
push
mov
cmp
inc
pop
in
mov
leave
mov
xchg
mov
mov
jnp
jp
mov
arpl
fsubrl
pusha
cmpb
ret
and
mov
sbb
cwtl
aad
add
dec
test
xor
xor
int3
add
sti
addr16
mov
jno
test
mov
testl
mov
popa
mov
sub
les
imul
xor
add
fcomps
icebp
add
leave
dec
shl
push
es
sbb
clc
testb
fdivs
mov
shrl
sbb
in
fisubl
icebp
leave
mov
jmp
mov
cmp
inc
fwait
lcall
mov
aaa
sahf
decl
fsubr
fisubl
repnz
add
sbb
scas
mov
lret
jl
mov
push
add
and
sbb
pusha
adc
fiaddl
inc
je
icebp
inc
inc
dec
ja
loop
cmp
cmc
in
into
lds
add
mov
pop
cmp
negb
ss
sub
push
pop
push
and
cmp
gs
lock
xorl
push
xor
or
mov
mov
mov
push
lods
ret
mov
mov
faddp
fisttps
jg
push
mov
sbb
mov
fcmovnb
in
push
xor
pusha
mov
out
dec
and
push
cmp
mov
sub
xor
pop
mov
nop
popa
sub
sti
shlb
sub
inc
cmpsl
push
loop
sub
mov
pop
add
repnz
xlat
xor
cs
data16
int3
ret
and
cmp
shll
sbb
adc
cmovno
je
test
xchg
inc
sub
test
mov
jnp
test
pop
fstp
lcall
mov
push
mov
enter
mov
mov
lret
cltd
cmp
mull
mov
dec
pop
jmp
inc
push
aad
add
call
cwtl
mov
addr16
sti
sub
fcoml
ss
movsb
pop
jbe
gs
push
jne
sub
clc
icebp
mov
mov
add
cli
inc
lds
enter
jns
dec
lods
add
push
sbb
mov
outsl
popf
cmp
pop
jmp
std
cmp
lods
cmpsb
inc
jne
xchg
nop
movsl
xor
into
fsubs
jnp
or
loopne
push
dec
mov
sbb
dec
enter
cltd
adc
ljmp
sahf
aas
jne
fsub
sub
andnps
xchg
movsl
loope
popf
dec
repnz
dec
inc
cmpsb
fsubrl
push
shrl
dec
cmp
mov
or
dec
out
sahf
and
sbb
imul
andl
inc
cltd
xor
or
pop
jb
xor
ret
enter
sbb
fisubrs
fbld
bound
arpl
test
mov
lock
inc
fisubs
sub
cmp
cli
adc
in
or
shr
xchg
dec
cli
ret
or
cwtl
ljmp
loopne
addl
stos
clc
insl
add
mov
sti
mov
mov
rclb
daa
fidivs
cltd
push
dec
das
orb
out
push
push
sahf
jmp
push
sbb
orl
and
aam
lret
inc
pop
mov
push
push
xchg
in
jnp
lahf
xor
mov
mov
adc
pop
and
push
lret
inc
inc
mov
xchg
fldt
imul
lcall
pop
sarb
out
xchg
ret
and
aam
iret
hlt
popf
cmp
mov
jne
or
cmp
mov
icebp
enter
dec
push
xchg
arpl
dec
aad
rclb
adcl
movsl
mov
cltd
mov
inc
int
loop
fwait
pop
jo
sbb
daa
lea
out
mov
lods
mov
cld
pop
dec
imul
fstl
add
sbb
mov
je
mov
pop
pop
adc
and
mov
std
and
out
pop
mov
shll
or
mov
ss
xor
mov
fisttpl
insl
cmc
outsb
pop
sub
pop
mov
negl
dec
imul
pop
imul
mov
das
xor
mov
stos
movsl
mov
jmp
outsl
lods
jbe
fdivs
xor
lret
in
or
ds
jecxz
pop
xor
das
pop
das
loop
lea
mov
shrl
mov
mov
fmull
mov
movsb
lods
rcl
add
ljmp
out
imul
sti
adc
movsl
daa
inc
int
stc
push
or
repnz
mov
cs
pop
sub
xchg
shll
je
outsb
inc
mov
ror
pop
test
mov
xor
or
out
mov
lds
movsb
call
fldenv
adc
xor
mov
xchg
ja
xor
xor
cmc
or
jbe
cs
movl
jns
adc
push
mov
add
xchg
loopne
cmpsb
adc
pusha
insb
aam
and
inc
ljmp
add
call
pop
push
add
mov
lds
ljmp
lods
dec
addr16
adc
and
sbb
xchg
aaa
fidivs
scas
xchg
lea
mov
pop
jbe
pop
jecxz
push
dec
lea
cld
lret
inc
dec
cmp
mov
scas
lock
or
inc
enter
cmp
mov
dec
push
pop
bound
fidivrl
stos
cmp
jl
mov
push
jmp
pop
shlb
cmp
add
loop
and
push
mov
lcall
sbb
xor
mov
inc
orb
push
in
out
or
adc
mov
nop
fidivrs
pop
xor
jle
jbe
sbb
dec
adc
scas
and
test
loopne
dec
cmp
in
dec
mov
pop
pushf
pop
jb
sbb
mov
push
sub
addr16
scas
mov
jp
cmc
mov
in
push
push
or
lret
jecxz
jae
pop
push
and
mov
aaa
les
cmc
cmpsb
out
bound
jp
leave
insb
aaa
hlt
xchg
cmp
imulb
mov
sahf
xchg
jns
push
icebp
int3
inc
xchg
xchg
mov
fistl
xlat
fiadds
arpl
and
mov
and
and
pop
stos
cmp
adc
shrl
daa
sub
or
xchg
imul
mov
mov
mov
lds
out
add
in
lea
pop
jle
adc
xchg
rcrl
je
popa
pop
repz
jl
pushl
sub
adc
mov
in
xor
mov
xchg
or
outsb
sahf
or
jb
loope
cvtps2pi
mov
je
dec
fnsave
pop
dec
scas
loop
lret
jmp
or
lcall
adc
lcall
mov
mov
mov
ret
adc
push
xchg
sub
cwtl
lcall
int3
mov
xor
clc
arpl
jne
lods
rcrb
test
pop
ret
pop
rcrb
cmc
rcrb
mov
es
fninit
fistl
mov
jmp
pop
divb
cld
fmuls
add
nop
cmp
inc
sub
imul
pop
add
fnsave
jno
dec
xchg
out
sub
jl
lods
ret
sarb
sbb
adc
mov
cmp
gs
hlt
xchg
int
notl
outsb
rclb
pop
xor
inc
xchg
dec
pop
mov
pop
pop
push
dec
cs
fwait
in
jns
or
arpl
push
inc
cmpb
dec
mov
enter
mov
push
int3
cld
jo
popf
inc
mov
inc
int3
or
inc
movl
mov
push
imul
and
movsl
and
sar
hlt
mov
shr
lds
mov
jecxz
lret
pop
es
rorl
loopne
pop
and
mov
add
sub
jns
xorb
lret
out
or
or
dec
mov
pop
xor
mov
jmp
lcall
aas
lret
incl
xchg
xor
out
jl
mov
or
cltd
scas
jmp
and
mov
mov
cmpsb
les
lret
add
mov
mov
sbb
xor
rclb
xchg
cli
push
pop
or
shl
movb
push
mov
push
adc
jmp
push
hlt
push
lock
rorl
mov
test
sub
xchg
and
cmp
jp
sbb
and
cmp
inc
addr16
xlat
pop
dec
xor
or
mov
cmpsl
mov
jl
sbb
push
inc
add
movb
mov
jg
inc
sub
repz
xchg
jp
aas
jle
bswap
inc
ja,pn
add
or
dec
pusha
cmp
push
dec
movsl
adc
xor
sti
mov
aad
sbb
xor
dec
lods
lods
popf
push
jmp
aaa
aas
sbb
je
ss
out
xchg
arpl
mov
sbb
sub
xchg
cmp
push
fadds
xorl
js
fcmove
mov
movsl
in
fwait
mov
dec
ret
xchg
aad
mov
or
mov
sbb
xchg
xor
mov
cmc
or
lock
ja
dec
or
pop
outsl
fildll
jmp
adc
insl
rcrb
outsb
push
jecxz
adc
ja
cltd
jl
add
sub
vminpd
jle
mov
js
or
ds
call
mov
sti
pop
xchg
aad
orl
dec
adc
pop
and
adc
sbb
push
xchg
jge
sbb
sbb
push
xchg
orb
mov
mov
stos
dec
jge
mov
adcl
jno
ret
and
push
or
pop
xor
pop
push
push
sahf
push
mov
jmp
test
dec
js
lds
dec
or
cltd
mov
popf
adc
arpl
popf
loop
xchg
scas
dec
mov
pop
sub
and
sti
daa
lods
fcomip
mov
aaa
rcr
stos
or
dec
out
sub
push
push
repz
mov
jg
aad
in
xrelease
xorl
aas
adc
dec
cmp
lods
fwait
push
xor
sbb
in
test
inc
js
data16
mov
rcll
dec
incb
inc
sub
cmpsl
xor
loope
cld
xor
flds
fiadds
or
test
ds
shl
jae
mov
mov
fwait
mov
mov
pop
mov
dec
negb
mov
or
into
xchg
arpl
rclb
or
mov
add
or
movsl
fwait
inc
pop
sbb
lods
cmp
mov
fwait
sub
lret
inc
push
fstps
sub
push
xchg
sub
popa
mov
push
sub
incl
idiv
cld
scas
je
push
ja
in
fwait
call
pop
mov
pop
mov
lahf
lahf
imul
pop
ret
divb
in
in
ja
adc
dec
mov
push
cmpsb
cmp
adc
xlat
fcmovnu
test
aaa
adc
adc
cltd
fsubs
out
clc
imul
test
lcall
mov
jge
inc
pop
xor
sbb
xor
sti
test
and
add
pop
inc
pop
inc
iret
adc
lret
xchg
mov
ja
js
mov
shrl
xor
push
adc
xchg
push
divl
mov
xchg
movsb
mov
lea
repnz
ret
aaa
sbb
subl
xchg
xchg
cmpsb
dec
sub
test
push
dec
jle
std
popf
shll
push
lahf
inc
push
xor
jg
shrl
in
xor
cmp
in
sbb
shl
adcb
stos
push
push
dec
jns
add
add
add
mov
ret
clc
mov
fnstsw
sub
insb
sub
cmp
popa
mov
out
clc
add
push
inc
mov
inc
addr16
faddp
mov
dec
dec
aad
mov
fldl
cmp
lret
cs
fimull
pop
iret
test
push
cmpsl
stc
into
ljmp
xchg
inc
lods
test
enter
add
push
in
xor
add
mulb
xchg
sbb
bound
bound
fsubrs
daa
cmp
jmp
lods
mov
shll
xor
cmp
cld
jge
lods
jo
push
mov
outsb
test
jnp
aaa
in
data16
shr
and
push
lcall
pop
or
mov
popf
and
iret
out
inc
lods
inc
pop
sub
adc
aam
xlat
out
fisttpll
pusha
daa
xchg
pop
adc
ljmp
dec
pusha
aaa
lcall
jp
jns
je
push
adc
pop
push
leave
cmp
or
out
jge
cmp
pop
xlat
sub
xor
adc
sbb
loop
shlb
add
out
inc
fcomps
imul
fbstp
xchg
xchg
pop
rcll
and
aam
ja
add
rorl
jbe
ror
addr16
gs
push
cmp
fwait
add
popf
inc
loopne
mov
fisttps
adc
movsb
pop
xchg
repnz
jns
ds
fwait
xlat
mov
popa
push
loopne
xor
jmp
mov
mov
in
cmp
cli
and
hlt
outsl
xchg
rcl
shl
mov
adc
roll
outsb
popf
mov
mov
loopne
mov
sbb
or
jns
push
rcr
int3
and
fmull
and
add
repz
loope
and
scas
sub
bnd
call
sub
aam
gs
jns
clc
jb
xchg
sbb
pop
inc
shll
call
add
scas
add
mov
sbb
add
iret
or
jns
in
movsl
pop
es
popa
pand
insl
imul
cmpl
in
loopne
in
lcall
mov
xor
jge
inc
jp
push
mov
inc
cmpsl
xchg
xor
pop
mov
xchg
cld
sahf
xor
add
jns
lods
cmp
mov
rclb
jle
or
sub
mov
imul
inc
adc
sub
hlt
mov
out
jmp
push
push
cltd
adc
cmpsb
stos
jge
popf
cmp
mov
aaa
lea
mov
mov
dec
xchg
xchg
ja
sbb
out
les
xor
pop
lret
push
cmp
jmp
jns
inc
je
mov
popf
and
mov
jl
add
xorl
ds
ret
lock
cmpsb
stos
test
ret
xchg
push
les
jbe
adc
or
repnz
pushf
jae
mul
das
addr16
das
adc
sub
dec
pop
in
icebp
mov
ret
gs
iret
lcall
inc
or
loopne
pop
xchg
cli
inc
mov
xchg
mov
ss
mov
icebp
xchg
xor
hlt
cwtl
mov
into
cld
xor
cmp
sbb
jns
sbbb
pop
in
xchg
icebp
xchg
xchg
mov
add
outsb
cmp
mov
mov
ds
cli
inc
ret
fs
push
aas
fwait
jp
cmc
jmp
sbb
inc
ljmp
fistl
pop
jg
sub
mov
andl
in
imul
cmp
jmp
daa
xchg
in
and
or
jg
cmp
mov
pop
adc
ret
xor
pop
and
lret
pushf
in
aaa
sbb
push
movb
lret
mov
sub
lcall
int3
int3
pop
dec
sbb
and
fadds
mov
sub
cmp
test
loopne
pushf
les
add
push
pop
out
jnp
jnp
xchg
xchg
mov
jno,pn
cli
andl
dec
mov
mov
and
mov
jmp
pop
pushf
fs
repnz
xor
sbb
notb
into
jne
lock
jae
push
xchg
es
cmc
pop
fnstcw
mov
das
cmp
inc
jecxz
sbb
repz
int3
push
jle
lock
xchg
xor
shll
xchg
mov
stos
sar
cltd
lahf
out
jle
dec
xor
xchg
imul
pop
and
xchg
and
cmp
scas
pop
popf
lcall
faddp
sbb
and
cld
mov
ror
xor
fwait
out
es
inc
mov
popa
or
in
lahf
test
cmp
ror
lahf
and
inc
in
jnp
fstpl
mov
xchg
mov
sbb
cld
or
or
xchg
mov
cwtl
push
sub
jmp
sbb
adc
in
and
mov
pop
mov
dec
cli
lcall
negl
stos
insl
fiaddl
push
cli
mov
mov
test
pop
adc
mov
fists
add
jae
xor
add
adc
fstps
outsw
scas
sub
pop
cmpsb
mov
xchg
test
fmuls
js
scas
xchg
sub
or
sub
mov
repnz
push
sub
mov
into
data16
jb
repz
cmp
shrb
roll
or
add
lret
xor
jmp
outsl
xchg
enter
pop
out
in
addr16
add
shll
cmp
lahf
push
push
adc
ljmp
push
call
sub
hlt
pop
cmp
inc
add
xchg
sbb
test
loop
arpl
int
int3
xchg
pop
ds
out
pop
or
lea
inc
push
jne
js
ret
push
pop
fisubrs
lret
in
mov
lock
mov
sbb
or
add
int3
stos
fisttpll
xor
mov
mov
loop
mov
jbe
xor
addr16
arpl
and
nop
aad
or
lock
cs
jg
aaa
add
inc
and
lea
fcompl
sbb
sahf
add
push
mov
ret
inc
sub
and
mov
or
cltd
aaa
mov
negb
insl
mov
cmpsb
enter
cmp
xor
cmpsl
pop
int
rolb
adc
lret
movl
cmpsl
mov
jae
jecxz
sbb
add
imull
push
dec
fcomip
mov
ret
arpl
sbb
subl
fs
xor
popf
adc
fbstp
jno
inc
sub
dec
mov
int3
movsb
outsl
enter
jo
js
out
push
and
icebp
addr16
testl
cmp
popa
or
outsw
nop
add
mov
inc
xchg
popa
call
fiadds
pop
mov
xchg
pop
adc
fwait
sub
pusha
or
stos
inc
call
out
push
mov
test
jmp
jae
jo
pop
cmpsb
test
mov
jns
lods
jle
ds
scas
scas
scas
inc
jnp
js
aad
aam
dec
mov
and
fildl
fsubl
xchg
mov
or
push
fwait
bound
xchg
adcl
ss
test
pushf
ffree
fstps
jno
mov
aaa
pop
out
sub
subb
or
sti
jmp
dec
cmpsl
in
pop
sbb
cli
pop
sti
push
sub
sbb
pop
xchg
pop
sahf
inc
test
lret
lds
outsb
es
dec
cli
add
pop
jecxz
sbb
inc
and
lock
xor
cld
push
arpl
pop
lret
popf
movb
add
pusha
cmc
mov
enter
push
mov
test
fildl
out
xchg
std
movsb
fldt
and
xlat
xor
ss
push
mov
imul
rcll
sbb
xor
push
out
divl
sar
mov
aam
cmpsl
icebp
aas
fisubs
add
stc
and
push
mov
xor
cs
icebp
push
int
shrl
in
loopne
dec
xor
cli
mov
ljmp
adc
bound
inc
xor
push
and
mull
sbb
out
js
fsubrl
xor
jmp
pop
repz
and
call
movsb
jmp
or
andb
lret
jbe
mov
div
mov
aaa
popa
shrb
mov
push
fcmove
das
shll
cld
cmp
dec
inc
lods
jnp
mov
xor
in
mov
cmp
in
shrb
lods
mov
or
pop
mov
xor
push
mov
xor
sub
push
stos
movsb
cmpsl
jno
dec
lea
jb
imul
adc
popf
inc
rol
lock
add
lds
fdivp
cmp
movsb
mov
pop
mov
sbb
in
push
mov
lock
push
insl
sbb
and
pusha
adc
mov
pusha
ret
xor
push
fldt
adc
adc
jmp
mov
jb
dec
jbe
hlt
push
dec
or
xlat
scas
cmpsb
push
dec
mov
mov
scas
mov
lret
adcb
xchg
daa
pop
jbe
push
xlat
fldl
cmc
jecxz
das
in
add
and
arpl
or
adc
pop
push
dec
add
out
enter
mov
sub
into
outsb
jbe
inc
sar
jnp
shl
out
mov
sub
movsb
xchg
mov
enter
aam
inc
pusha
and
out
ja
sbb
clc
and
mov
lret
pop
shl
cwtl
jne
imul
or
test
test
fs
and
jp
push
inc
je
pushf
sub
sbb
xchg
mov
hlt
fsubrl
je
lods
mov
repnz
and
inc
dec
cwtl
out
ss
sbb
xor
dec
and
push
push
or
mov
xchg
call
inc
int
mov
dec
xchg
fsubrs
fldl
or
push
loop
in
mov
push
sahf
dec
mov
sbb
push
xor
mov
mov
cmp
lcall
jnp
mov
fidivrs
fstpl
adc
setle
dec
icebp
xchg
adc
cmp
rcr
js
ds
jp
xchg
jo
hlt
iret
dec
into
test
les
mov
in
dec
cmp
mov
fldl
fildll
mov
xlat
adcl
inc
pop
imul
jno
call
cs
or
mov
lds
iret
pop
mov
shll
rcrl
pop
mov
in
popl
pop
sti
and
daa
or
and
xor
cmp
jp
stos
decl
or
jnp
scas
jp
test
jge
scas
push
inc
jae
pop
les
stos
and
mull
jbe
je
mov
shlb
test
fbstp
paddsw
jge
xchg
push
mov
pop
inc
mov
adc
push
dec
adc
push
daa
sahf
jnp
pop
pop
ficoml
cltd
loop
or
sbb
ja
mov
push
mov
pop
clc
in
sbb
nop
push
or
mov
xlat
insb
in
push
ret
or
mov
daa
push
or
dec
cmp
int3
ds
xor
jecxz
rcl
movl
rcrl
cmc
add
push
sarl
xor
or
ficoms
fdivrs
pop
mov
fwait
pop
dec
sbb
rcrb
aas
mov
fwait
les
imul
mulb
imul
fisubrl
sti
adc
scas
xor
inc
xor
add
sub
addr16
cmp
jo
mov
loope
mov
stos
dec
ds
cmp
cmp
je
mov
test
aaa
inc
arpl
cmp
scas
inc
push
xchg
mov
fisubrl
pop
psubq
vcvtpd2psx
inc
adc
sbb
cli
lock
imul
mov
roll
repz
bound
frstor
je
sti
call
gs
wbinvd
test
pop
adc
aaa
mov
push
mov
clc
sti
jnp
movsl
rorl
clc
fucomip
mov
pushf
ljmp
xchg
fmulp
repnz
xor
pushf
rcrb
mov
sub
imul
lahf
xchg
push
fwait
inc
add
mov
sbb
sahf
imul
aas
enter
sbb
mov
sub
add
jge
xchg
adc
fidivrs
pop
dec
inc
into
repz
or
popa
and
push
sbb
test
popf
lea
jb
pop
js
push
mov
or
nop
push
mov
sbb
fs
push
mov
ds
insb
pop
and
ret
loope
xor
mov
gs
shlb
ss
lcall
ficomps
inc
and
test
js
popa
dec
call
push
pop
shrl
dec
fmuls
and
aam
sub
in
test
jb
mov
mov
imul
mov
cmp
in
leave
mov
inc
jne
out
jmp
add
mov
and
sti
adcb
js
fdivp
mov
or
ljmp
cmp
mov
inc
sbb
mov
pushl
mov
in
movsl
cmp
mov
or
test
mov
imul
lds
subl
xor
or
mov
ret
movb
out
or
pop
int
cmc
sub
and
fimuls
or
subb
ss
movsl
mul
jns
inc
fstps
or
sbb
jb
and
mov
lret
jb
not
ss
out
mov
dec
fsubrl
idivl
mov
js
call
ljmp
mov
jge
addr16
sti
push
push
push
dec
sbb
pop
cmp
cmp
in
add
add
mov
into
stos
leave
ret
jge
scas
sbb
out
adc
xorl
pusha
mov
decb
pop
add
rcrl
rcrb
mov
sbb
fs
lock
xor
lea
cmpsl
rolb
add
lods
std
sbb
xor
pop
imul
outsl
dec
sub
lahf
je
setns
cmpsb
xchg
xor
cmp
dec
xchg
fistps
mov
adc
or
jnp
std
nop
xchg
shlb
lcall
and
xor
cld
stc
mov
mov
aad
ljmp
rclb
mov
jne
push
inc
push
mov
popa
popf
mov
mov
add
in
mov
jecxz
sbb
data16
out
in
fidivl
movsl
ja
sub
pop
aas
outsl
lock
mov
and
sbb
and
cmpsl
adc
inc
idiv
addr16
and
cld
jo
scas
inc
mov
cmc
push
scas
xor
mov
pushf
int3
and
mov
movlhps
ds
lods
loopne
lods
mov
sub
ljmp
mov
push
push
lcall
test
and
jmp
adc
add
fdivr
ss
cmpsl
std
adcb
jmp
and
pop
jmp
sahf
mov
icebp
xor
jecxz
loopne
xor
dec
sahf
enter
fwait
push
aas
xchg
lret
and
push
mov
pop
xchg
int
jle
test
xor
mov
int3
xor
lock
aas
imul
xor
inc
adc
and
inc
adc
jns
push
mov
fbld
aad
repz
dec
std
xchg
jmp
push
dec
rorb
mov
rcr
pushf
out
divl
pusha
jbe
mov
sbb
popa
and
xchg
xor
sbb
imul
mov
insl
add
js
pop
rorl
aaa
cld
aaa
js
lock
aad
add
xchg
inc
movsb
and
mov
sbbl
mov
cmp
aad
in
in
pusha
aas
or
and
dec
sub
lcall
je
lds
and
imul
jge
sbb
xchg
aaa
and
sbb
std
dec
push
lahf
or
xchg
scas
xchg
ficompl
aas
cmp
mov
aad
mov
adcl
outsb
ret
outsl
icebp
jb
sbb
xor
lods
mov
mov
mov
out
fidivrl
sub
lea
lret
jne
or
imul
ja
xchg
iret
ss
mov
gs
adc
push
xchg
fcompl
jno
mov
outsb
add
pop
pop
dec
fwait
scas
hlt
xor
jmp
je
roll
loope
push
or
rolb
sbb
fs
leave
sbb
add
sarb
jae
xor
stos
repz
add
add
mov
jne
popa
push
ret
dec
dec
inc
and
clc
xchg
out
mov
dec
push
les
mov
xor
xlat
pop
xchg
js
mov
sahf
push
add
push
push
ffree
xchg
iret
ss
insl
fisttps
sbb
xchg
lock
sbb
jmp
mov
jge
adc
insl
loopne
jl
jmp
cmp
bndstx
sub
jno
jne
mov
dec
dec
inc
imul
jb
push
and
jns
xor
imul
and
imulb
xchg
add
inc
sbb
clc
pop
fdivrs
stos
divb
cmp
xor
pop
std
mov
adc
fsubrs
stos
lret
push
ljmp
pusha
pop
dec
add
pop
add
xorps
push
sahf
jo
cmp
xchg
jae
cmp
sbb
push
pop
jmp
cmc
imul
sbb
mov
lret
jg
outsl
dec
add
pop
mov
sub
sub
cmpsl
jnp
jl
fs
aam
in
imul
jae
js
or
jmp
aad
out
sub
js
or
ret
xchg
add
xor
jne
test
ljmp
fisubs
and
insb
movsl
fdivrl
aaa
ss
arpl
sub
imul
mov
inc
test
pop
jmp
pop
das
icebp
std
dec
inc
push
lods
ja
xor
pop
sahf
add
xchg
imul
xchg
xor
mov
int3
in
loop
jge
arpl
xchg
sub
mov
xor
rorl
pushf
pop
sub
int
dec
fwait
xchg
mov
mov
add
inc
arpl
sub
mov
jb
dec
mov
add
jl
sbb
jo
mov
in
adc
frstor
dec
cltd
mov
xchg
jle
cmp
mov
insb
sub
cmp
push
int
push
inc
data16
inc
or
mov
mov
inc
jmp
cltd
dec
add
dec
xchg
outsb
fwait
pop
sub
xchg
push
sub
pop
bnd
clc
cs
fisubrs
dec
cmp
mov
mov
and
xchg
push
in
pop
dec
aaa
test
sbbl
mov
dec
push
mov
pop
inc
sub
test
test
xor
mov
xchg
pop
mov
call
das
xor
cmp
ror
adc
and
jmp
or
jl
inc
or
or
fmuls
pop
clc
insb
xchg
in
pop
push
lock
mov
or
testl
mov
ss
dec
andb
add
sbb
xor
push
mov
push
loope
pop
jp
dec
push
or
popf
xchg
imul
insl
jne
fiadds
cmp
xor
pop
pop
dec
movsl
add
mov
inc
dec
cmp
out
jmp
stos
xor
jbe
lods
ljmp
pop
push
xchg
pop
mov
pop
sub
cmpsl
sub
int3
js
test
loopne
xchg
inc
pop
add
fstpt
out
add
dec
adc
xor
lcall
cld
xor
xchg
jge
aad
daa
dec
jp
repnz
or
aad
mov
sar
cmp
das
cltd
jne
aad
mov
mov
into
mov
ret
jae
pop
xor
or
ja
jmp
outsl
inc
push
xor
dec
and
xchg
fxch
pop
je
cmpb
jno
loope
mov
mov
push
or
call
into
jmp
cs
shl
test
inc
lods
inc
pop
mov
xor
fmul
push
mov
test
add
je
add
xor
pop
mov
cmpsl
mov
jmp
mov
leave
loopne
xchg
xchg
mov
outsb
sub
stos
negb
fnstcw
data16
icebp
push
ja
sahf
or
or
scas
mov
lahf
jmp
fs
loopne
icebp
jo
hlt
jl
xchg
lods
add
sub
sti
mov
push
or
jmp
mov
push
mov
fsubs
mov
mov
out
pop
push
sub
cli
jno
cmp
push
xchg
scas
loope
sub
scas
pop
lahf
sub
cmp
mov
lea
into
nop
or
dec
stos
or
call
bound
sbb
sub
add
and
sbb
jns
subb
sub
cmp
loopne
sbb
in
daa
cmp
insl
add
sbb
out
imul
mov
sbb
mov
and
jae
lds
mov
das
faddl
xor
daa
je
sub
popa
cmp
push
fs
push
adc
add
addl
mov
icebp
mov
out
dec
xlat
stos
fxch
mov
mov
test
mov
pop
dec
pop
xchg
into
mov
sti
mov
inc
scas
faddl
incl
fildl
and
out
xchg
xlat
out
pop
pop
add
and
movsl
mov
and
push
jae
push
mov
mov
cld
mov
sbb
sub
adc
rolb
test
xchg
add
call
sbb
inc
sbbb
add
and
mov
movsl
push
or
cmp
out
and
sbb
xchg
sbb
shl
push
out
in
fmull
jmp
enter
push
sub
sub
pop
fdivp
push
lods
inc
adc
cmp
and
lcall
add
jl
cltd
xor
lods
insl
stos
add
mov
arpl
leave
sub
loope
pop
cmpb
leave
add
inc
lahf
les
stc
popf
out
pop
clc
test
xor
dec
call
dec
mov
ret
sar
mov
sahf
mov
ret
adc
packssdw
adc
addr16
stos
xor
sbbl
outsb
dec
push
sbb
inc
lods
mov
xchg
inc
ret
mov
daa
outsl
les
sbb
outsb
jae
in
xchg
xor
and
jns
jg
jecxz
jmp
push
shl
popf
mov
negb
xlat
mov
test
push
pop
aad
push
mov
push
enter
in
nop
mov
push
jmp
aas
rcll
stos
rclb
cmc
lcall
inc
cmpsl
adc
add
lods
pop
jb
clc
mov
push
lcall
ret
decl
enter
push
pop
sub
inc
sub
mov
cld
ret
sbb
and
fnstcw
and
ja
mov
or
popa
pop
int3
jl
sbb
sub
fnsave
js
lret
pop
adc
jnp
enter
mov
and
push
mov
mov
fwait
call
ljmp
mov
out
sub
scas
jo
in
xor
lods
cli
shll
icebp
stos
out
icebp
jbe
shll
mov
test
pop
mov
mov
sbb
cmp
mov
enter
mov
pop
lock
sbb
cmc
pusha
mov
stos
sbb
push
shr
push
pop
adc
fsubs
aam
push
add
xor
jo
imul
fadd
jge
mov
or
or
jmp
jnp
dec
std
push
fdivp
cmp
lahf
ja
inc
xor
scas
pusha
sub
xchg
fistl
jne
pop
sbb
fldl
adc
orl
jl
sahf
or
adc
dec
mov
cs
pop
in
pop
cwtl
inc
aaa
push
mov
insb
gs
cmpsb
adc
xor
pop
inc
js
fwait
dec
andb
add
jp,pt
or
or
scas
jmp
out
jno,pn
pop
push
push
sti
jb
sub
push
or
loope
add
add
jg
push
lahf
stos
sub
movsb
cli
call
test
iret
push
loop
fdivs
popf
dec
fisubrs
push
inc
adc
or
aam
mov
mov
rcll
les
addb
loope
mov
mov
inc
mov
push
shrb
inc
adc
jns
add
jle
leave
mov
xor
pop
sti
arpl
xlat
insb
pop
mov
jns
adc
cmp
push
scas
icebp
or
out
rorl
pushl
dec
sub
jg
xor
ret
int3
xchg
sub
daa
test
lock
jmp
xchg
xlat
mov
sub
xor
sbb
repnz
cmpsb
xor
mov
adc
inc
out
scas
clc
xor
in
in
cs
frstor
call
iret
pop
popf
cmp
push
add
pop
aaa
xchg
xchg
mov
scas
fisttps
mov
inc
xchg
sub
cmpb
and
loope
xchg
cmp
out
test
lahf
jne
cld
iret
adcl
rclb
xchg
dec
mov
jg
enter
ss
rorl
lea
stos
das
xchg
inc
leave
mov
push
pop
mov
dec
add
shlb
cmpsl
lods
xor
jbe
xchg
popf
arpl
push
scas
cmp
jge
mov
jno
ja
dec
sub
or
push
inc
push
ret
mov
pop
lret
mov
xor
jle
test
jg
loop
andb
cmp
adc
push
in
pop
ret
icebp
mov
rcll
jge
pusha
xor
mov
push
lods
frstor
adc
add
aaa
lods
movsb
test
push
inc
leave
and
add
popf
jb
sbb
sbb
sub
sbb
mov
lahf
cmp
lock
ljmp
jle
fistps
pop
xchg
add
push
cwtl
icebp
mov
inc
aam
jb
jo
cmp
subl
aaa
leave
mov
imul
push
dec
ljmp
fcmovne
mov
sbb
and
sub
push
pop
rcl
mov
mov
mov
mov
rol
ja
shrl
or
push
fnstcw
pop
sti
lea
lea
pop
inc
push
xchg
fs
and
js
call
cmp
int
lahf
dec
pop
lods
pop
or
xchg
in
and
adc
lods
inc
aaa
push
mov
fimull
adcb
push
sub
imul
mov
push
ret
inc
ja
popa
rcll
dec
sbb
lahf
or
cli
imul
pop
int
fs
stos
imul
adc
sub
pop
xchg
add
std
pop
or
test
adc
cmpl
push
xor
out
or
add
ja
das
mov
mov
mov
movsl
mov
cmp
lret
stos
xchg
dec
int
mov
ljmp
mov
push
or
add
sahf
jnp
dec
clc
ret
adc
bound
popf
fisubrl
jb
xor
inc
pop
add
data16
sbb
cld
test
jge
test
mov
frstor
cwtl
sbb
out
dec
cmp
hlt
mov
pop
inc
inc
cmp
popl
adc
push
mov
sub
dec
lea
hlt
cltd
insb
imul
addr16
jmp
mov
pop
sbb
jge
imul
push
xor
inc
icebp
lret
or
fsts
jecxz
add
mov
outsl
lcall
or
mov
xor
nop
xor
push
mov
andl
aad
adc
sub
scas
lret
dec
inc
pop
roll
sbb
sub
push
or
sub
movsl
jle
cmpsb
xor
mov
pusha
test
xchg
sbb
icebp
cmpsb
iret
mov
mov
mov
dec
pop
icebp
mov
loopne
lret
mov
outsb
sub
insl
enter
adc
dec
push
sbb
adc
mov
cwtl
xor
fucomp
adc
xor
cmpsl
inc
icebp
popa
js
xchg
cmc
roll
scas
sti
mov
scas
push
xlat
test
mov
daa
aad
inc
jg
jo
mov
nop
fldcw
aaa
dec
xchg
and
lret
xchg
mov
jp
add
sub
pop
adc
or
into
mov
fwait
iret
sub
movq
pop
add
fnstcw
sbb
leave
in
xor
xor
jnp
xchg
or
in
test
xor
and
mov
adc
jo
scas
pop
sbb
iret
push
inc
sub
ja
jo
mov
cmpsl
out
lcall
lcall
fiadds
bound
mov
push
hlt
stc
mov
dec
iret
and
shll
insb
out
fidivrs
jmp
fiadds
decb
testb
es
addr16
jmp
or
xor
popa
and
xor
stos
das
std
insl
lret
inc
rorb
xchg
xchg
add
cmp
test
mov
je
dec
ljmp
imul
js
mov
aam
xor
call
adc
push
or
clc
rolb
aas
cmp
loopne
xor
lods
inc
mov
pop
xchg
loopne
push
pop
jb
and
mov
push
ss
in
xlat
test
fimull
mov
lcall
stos
jp
mov
push
ret
lea
pop
popf
push
test
jo
mov
lea
cmpsl
int
je
cltd
mov
ficoms
add
clc
pop
out
dec
aad
pop
mov
ret
xchg
int
xchg
and
jne
cmp
je
xchg
sti
cltd
pushl
es
scas
mov
mov
fmuls
sub
outsb
les
mov
dec
dec
sub
push
data16
sub
mov
and
stos
cmp
jecxz
push
cmp
int3
ss
repnz
imul
dec
lds
outsb
rcrl
outsl
ja
pop
not
lea
in
or
adc
fs
in
mov
mov
inc
jae
push
in
sbb
popf
adcl
rcrl
add
leave
test
mov
pop
imul
repnz
in
nop
jge
les
sbb
out
cmp
jg
xor
inc
push
outsb
shlb
mov
adc
or
sarl
xchg
jb
and
cltd
cld
loopne
enter
fcomps
jle
sub
sbb
inc
push
enter
xor
rcll
add
cmpsl
inc
sbb
icebp
out
aas
pop
add
test
fidivrl
das
in
cmp
mov
cmp
test
fs
push
out
jmp
jecxz
add
sub
lock
fistl
adc
fwait
xor
fucomi
ret
mov
js
jno
cmpsl
inc
push
push
add
hlt
xor
pop
jmp
add
push
int3
in
arpl
scas
mov
aam
gs
insb
popa
push
ret
jp
nop
insb
xchg
jo
jo
pop
mov
sub
into
cltd
in
insb
loop
in
mov
mov
ss
sbb
sbb
test
test
in
cmp
shlb
or
adc
mov
repnz
out
or
jmp
mov
xor
mov
sbb
mov
add
jge
out
outsb
add
push
out
push
fcomp
push
out
ja
mov
inc
outsb
mov
mov
mov
js
sub
xchg
in
out
push
push
or
popa
push
insb
rcl
add
ja
daa
imul
add
mov
and
inc
gs
mov
bound
daa
cmc
divb
mov
mov
mov
mov
ds
das
dec
arpl
xchg
adc
pop
imul
lret
push
fwait
and
lods
dec
push
imulb
jno
cs
pusha
sub
xchg
ds
jb
mov
in
push
inc
xchg
dec
xchg
pusha
sbb
push
dec
sbb
std
imul
call
xchg
sbb
push
insl
xchg
ljmp
dec
sti
sub
adc
pop
xchg
stos
adc
leave
push
sub
xor
mull
xlat
icebp
mov
jmp
inc
add
fdivp
pop
jb
or
fisttps
sti
aad
add
and
mov
or
push
jne
xchg
fiaddl
mov
clc
imul
jmp
mov
sbb
test
fimull
call
lods
iret
push
xor
xchg
vpand
mov
and
cltd
int
and
xchg
ljmp
dec
inc
adc
adc
lret
cmpsl
pop
imul
fdivs
in
xchg
mov
jg
out
aad
push
pop
pop
jge
test
push
cwtl
sahf
push
mov
push
fnclex
cltd
push
movsb
mov
movsl
lea
int
ret
lret
mov
jge
inc
fs
cmp
outsb
rcl
and
lret
push
jbe
inc
mov
dec
das
lods
and
push
or
orb
call
push
loopne
ss
pop
in
adc
inc
pop
sarl
fs
adc
or
lds
pop
mov
pop
dec
xor
xlat
lds
sbbl
xchg
and
xchg
sbb
lcall
sahf
adc
icebp
jle
mov
aas
in
aam
ret
push
fstl
in
rclb
push
lock
mov
addr16
scas
push
pop
out
adc
fimuls
xchg
das
fisubrl
repz
sub
add
test
xchg
pop
fildl
ffreep
jb
dec
add
sahf
dec
jae
mov
daa
pushf
or
popa
sub
inc
adc
daa
js
xchg
sub
insb
cmovp
int
cmp
je
inc
insl
inc
shrb
movsb
cmp
add
mov
mov
fistps
insb
dec
pop
add
pushw
ljmp
arpl
into
stos
cwtl
sarb
mov
push
out
addb
fbld
roll
pop
jmp
lea
mov
lock
lret
xchg
mov
je
imul
leave
push
ficoms
fwait
inc
inc
push
div
mov
pop
cmpsb
outsb
and
mov
pop
add
pop
xlat
mov
rorl
bnd
cwtl
mov
mov
ret
not
xchg
or
rcr
jecxz
pushf
mov
insl
jg
and
xorl
inc
add
es
xor
xor
loope
inc
add
sub
icebp
jno
jae
sub
cmp
enter
inc
ret
jns
jl
jnp
and
enter
sahf
shl
fidivl
int3
add
ja
push
sbb
mov
sub
mov
xchg
or
movsb
cld
adcb
lds
xchg
das
sti
xchg
push
pop
push
aam
loope
xchg
das
mov
lea
pop
dec
idivb
inc
mov
mov
imul
test
push
adc
sbb
ss
fdivrs
fcmovb
add
add
push
ja
inc
clc
es
and
lcall
popa
push
out
adc
repnz
out
and
popf
cmpsb
push
fidivrl
stc
mov
mov
push
pop
mov
test
cwtl
jb
testl
in
dec
push
mov
mov
push
sahf
jle
daa
popf
das
lock
addr16
push
icebp
loopne
add
mov
or
mov
dec
push
dec
fwait
or
call
mov
and
push
mov
fldenv
and
mov
push
loope
pusha
cmc
nop
inc
orb
repz
or
out
lds
inc
testl
add
insb
js
xor
adc
inc
push
or
fsubrl
adc
sbb
mov
mov
xor
and
out
cmc
xchg
js
jno
outsl
cmp
or
adc
popa
dec
pop
cmp
imul
pop
lcall
mov
imul
shlb
and
rcl
sbb
jl
push
fistpll
jb
mov
pop
out
fisttpll
ss
jae
iret
lcall
push
xor
fidivrl
clc
jb
jp
inc
leave
aas
ljmp
icebp
xchg
pusha
mov
and
xchg
dec
add
bound
shr
loop
out
push
push
mov
lcall
push
insl
mov
and
sbb
adc
mov
bound
popa
sub
sub
cmp
xchg
mov
pop
out
and
test
cmp
scas
mov
out
jns
pop
cmpsb
test
enter
xchg
pop
bound
cld
in
out
scas
adc
sbb
subl
or
je
aam
push
or
aam
jge
dec
scas
lret
sbb
xchg
push
iret
mov
mov
lock
les
xchg
int
mov
jmp
lret
inc
cld
nop
test
cmpsb
sub
mov
icebp
jbe
add
sub
cmp
pusha
mov
push
inc
dec
mov
add
lahf
cltd
or
movsb
xor
dec
jb
popf
aam
pop
xor
loopne
push
sbb
scas
push
inc
mov
dec
scas
fsubrs
insb
mov
stos
outsb
jns
or
cmovo
arpl
pop
cmp
test
mov
pop
sub
arpl
iret
cmpsl
pusha
pop
nop
addr16
faddl
ljmp
fcompl
loopne
aaa
sbb
lret
imul
cmp
insl
push
mov
push
mov
mov
scas
sbb
mov
movsb
mov
sar
outsl
or
inc
pop
or
mov
sub
jae
icebp
fstpl
push
int
pusha
inc
jns
test
stos
out
mov
inc
js
adc
lds
divl
mov
pop
aaa
xor
or
std
aaa
sub
outsl
jg
cmp
mov
aas
cmpsl
iret
sub
enter
mov
in
inc
mov
inc
xchg
fdivl
jno
mov
mov
or
mov
loop
sbb
inc
insl
jo
add
test
rcl
test
dec
daa
call
outsb
xor
pop
xchg
stos
xchg
cmp
aad
and
shll
data16
sarb
jb
adc
inc
sbbb
dec
add
push
loopne
push
push
in
fisubs
int
sub
jmp
push
sub
pop
mov
shlb
clc
sub
or
aad
inc
pop
inc
sub
test
loop
cmp
xorb
push
int
sbb
sarl
outsb
xchg
sbb
lahf
sbb
out
outsb
popa
mov
out
or
das
push
jg
sub
push
das
jns
loopne
push
iret
sahf
dec
aam
jns
mov
out
adc
pushf
dec
jnp
push
mov
adc
push
cli
iret
fcom
sub
fs
inc
dec
push
pop
dec
xorb
repz
movsl
dec
pop
dec
adc
pop
sbb
outsl
mov
cmp
int3
sub
jbe
in
pop
lods
into
addl
sub
adc
test
dec
fidivs
cmp
mov
or
pop
xchg
ret
fistpl
jb
cmp
int3
loopne
out
cmp
out
and
iret
mov
xchg
mov
outsb
leave
xchg
pop
mov
mov
adc
jo
movsl
testl
xchg
rep
cmpsb
mov
inc
mov
out
call
jg
adc
mov
cmc
rcrb
cmp
sbb
xorl
cmc
adc
test
mov
sub
mov
mov
in
out
mov
sbb
out
imul
push
lods
ret
cmp
mov
call
jle
insb
add
div
cmovns
mov
cmp
push
cmp
mov
adc
in
insb
push
cmp
xor
push
addr16
pop
mov
mov
add
fidivrl
and
sbbb
jle
mov
jmp
int
fisubrl
adc
stos
jp
jns
test
mov
ucomiss
inc
loopne
add
cmp
fxtract
and
dec
out
sub
mov
xchg
sbbb
push
mov
sbb
xchg
lods
das
sub
pop
stos
jnp
mov
dec
ja
add
test
clc
mulps
sub
adc
mov
pop
xor
ret
int
jnp
push
pop
and
xchg
push
or
xor
les
mov
imul
and
xor
call
cwtl
sarb
addb
jmp
clc
inc
fs
push
cmp
orb
das
mov
cmp
cmp
mov
das
sub
lret
lret
cmp
stos
xchg
mov
dec
add
std
mov
lock
mov
pop
jae
or
aaa
ficomps
aas
js
not
jne
in
add
jo
jo
sahf
adc
gs
scas
popf
pop
push
adc
jl
insl
daa
mov
inc
cmp
mov
push
inc
sbb
xor
fildl
jno
cs
jb
movsl
xchg
dec
cmp
or
jecxz
in
push
frstor
lret
scas
repnz
popa
xlat
inc
fldcw
mov
mov
mov
xlat
or
fisubl
cld
mov
out
jno
cmpsb
movsb
sbb
mov
adc
js
inc
sarl
dec
xchg
xlat
sub
imul
pop
mov
movsl
pop
pop
mov
jl
jecxz
mov
jge
and
std
lea
sbb
outsb
jg
xor
ret
xor
call
jecxz
sbb
push
out
xchg
xchg
add
jl
ficomps
insb
mov
mov
mov
sbb
in
loop
mov
iret
punpckhbw
mov
pop
dec
mov
push
nop
mov
mov
jl
mov
scas
loopne
mov
std
xchg
xor
mov
out
fiaddl
test
call
faddp
or
cmp
in
movsl
pop
fs
sub
stos
cmpsl
out
xchg
mov
pop
popa
mulb
push
loopne
mov
push
scas
in
cmpsl
enter
push
adc
inc
dec
xchg
xchg
mov
lods
iret
jl
adc
adcb
push
xor
es
ds
dec
cmp
pop
xchg
sbb
jle
test
sbb
mov
jp
cmp
rorb
pop
int
jecxz
test
xor
xor
sub
neg
cmp
mov
mull
push
clc
mov
sub
scas
daa
shll
cmp
xlat
stos
je
pop
pop
ret
shr
data16
clc
or
shll
adc
mov
jecxz
xchg
fs
mov
or
sbb
push
fsubrl
les
dec
in
and
adcb
ss
adcl
push
jo
push
loope
in
mov
xor
adc
rorl
adc
sub
jns
loop
lds
inc
in
scas
incb
mov
test
mov
clc
or
jns
mov
sbb
fs
imul
dec
pop
pop
adc
mov
cmpl
mov
xor
lret
rorl
add
mov
inc
inc
inc
xchg
xchg
xorb
stc
jno
xor
stos
scas
int3
clc
and
insl
pop
int
inc
push
in
or
or
xchg
cmp
or
fcompl
sub
xor
pop
test
fsts
push
rcl
dec
cmp
xor
sub
dec
mov
adc
xchg
fidivl
sahf
inc
pushf
xchg
jmp
shll
cld
xor
into
xor
push
pusha
mov
push
jg
aas
outsb
and
sub
arpl
xchg
add
cld
sbb
test
test
jne
lret
cld
mov
pusha
add
add
cmp
dec
lods
test
xchg
sbb
adc
xchg
xchg
cmpsb
fldt
rcll
jmp
pop
xor
mov
mov
in
jp
xor
repnz
bound
out
jne
call
add
cli
repz
ds
lret
mov
cmp
jp
cmc
lret
cmp
testl
clc
push
mov
and
jae
aam
je
mov
mov
mov
testl
push
push
sti
rcrl
xchg
adc
sbb
lret
xorb
cmp
repz
cwtl
or
dec
add
fistpll
imul
ss
scas
fs
and
push
cmpsl
xlat
or
dec
repz
or
jb
arpl
push
mov
cs
sbb
inc
adc
flds
jp
adc
icebp
imul
repz
shrb
imul
lea
aad
out
sbb
shrl
xor
fstl
insb
dec
pop
inc
push
das
sbb
ss
std
jecxz
xchg
mov
sbb
cs
pushf
jge
cmp
pop
int3
xor
jecxz
aam
in
push
and
push
inc
stos
sub
cmc
stc
gs
fisttpll
add
sbb
cmp
faddp
mov
add
xchg
fwait
mov
hlt
or
xchg
push
divb
or
xlat
out
xchg
leave
push
xchg
xchg
jb
xchg
les
inc
sbb
and
mov
xor
mov
cli
in
pop
in
jne
push
xchg
mov
push
mov
pop
mov
or
sub
rolb
das
cs
ss
inc
mov
push
std
jl
pop
or
jmp
insl
outsb
shl
lret
cmp
frstor
sti
push
sbb
sub
enter
out
sbb
push
repnz
out
adc
jne
addr16
stos
mov
mov
xchg
or
xor
jg
ds
xor
outsb
inc
rcl
sbb
xorb
cmpsb
jb
push
pop
mull
mov
or
dec
sbb
pop
or
pop
mov
daa
add
cmp
popa
jecxz
adc
mov
mov
into
loope
mov
mov
cs
mov
repz
addr16
push
clc
pop
lods
in
push
hlt
mov
pop
mov
pop
mov
insb
daa
clc
loope
mov
movsb
lds
or
cwtl
jg
sbb
jae
adc
in
jl
mov
lahf
nop
mov
cmp
in
and
xchg
jge
mov
movsl
push
iret
movsl
add
negb
mov
mull
enter
and
xchg
inc
mov
adc
out
sahf
or
and
imul
pushf
shlb
sbb
mov
adc
test
xchg
xchg
pushf
xchg
out
mov
xchg
xchg
shll
mov
cmp
dec
insl
fisubrl
imul
inc
xchg
cmp
mov
push
push
cli
ret
popa
lahf
shlb
mov
push
adc
pop
cwtl
es
mov
les
test
movsl
push
and
dec
or
push
scas
push
mov
inc
jmp
idivl
or
adc
or
cmp
inc
xchg
fyl2xp1
mov
mov
inc
cmp
negb
fdiv
push
jbe
aam
enter
jge
stos
mov
imul
loop
mov
addr16
sbb
cmp
sbb
sub
push
pop
repz
inc
pop
lahf
push
iret
arpl
pop
jl
mov
cltd
dec
mov
add
pop
imulb
add
rorl
jmp
lds
faddl
ljmpw
cmp
fnsave
mov
daa
int3
pop
rolb
mov
in
iret
cs
sbb
xchg
mov
xor
push
lods
xor
dec
mov
push
xor
mov
cmpsl
xor
cli
xchg
nop
test
in
mov
mov
repz
cmp
sbb
mov
mov
mov
repz
inc
push
ss
adc
push
pop
je
pop
and
mov
xchg
cmp
or
mov
xor
push
nop
jmp
movsb
lods
adc
fbld
xor
cmc
imul
shll
fwait
xor
mov
cmp
xorl
jnp
jo
jmp
lods
aas
sub
push
roll
movsl
mov
das
inc
adc
popf
outsl
push
sub
ret
sbb
pop
push
ds
dec
lret
xchg
arpl
out
bound
stc
pusha
xchg
fsubl
mov
sub
repnz
js
adc
xor
ret
sbb
cmp
adc
push
mov
dec
push
jns
jmp
jo
mov
mov
sarb
lahf
sbb
xlat
call
sbb
hlt
icebp
fnsave
cmc
cmovne
adc
sbb
pop
xchg
fisttpl
sbb
iret
sbb
jae
mov
pusha
pushf
and
add
outsl
nop
rcrl
andl
adc
leave
call
mov
and
jle
ljmp
adc
imul
std
pushf
ja
cwtl
out
mov
outsb
jecxz
out
sub
ret
add
sahf
insl
pop
jbe
in
mov
push
pop
jnp
insl
xchg
pop
sub
mov
xlat
mov
adc
pop
push
ret
pop
imul
psadbw
mov
insl
lods
adc
add
or
add
and
push
pop
lahf
cmpsb
das
inc
inc
imull
inc
cs
js
outsl
add
and
sbb
lahf
push
sbb
pushf
push
stos
or
cmpsl
mov
inc
push
mulb
pop
fwait
and
sbb
push
frstor
ss
add
mov
mov
nop
aam
mov
dec
sti
lods
and
push
ljmp
mov
imul
sbb
adc
sbb
lock
jg
and
adc
push
movsb
test
aas
hlt
into
lret
adc
push
mov
mov
jp
xor
leave
rol
inc
adc
pushf
fists
and
jecxz
dec
sbb
and
stos
arpl
push
arpl
jmp
mov
push
rol
orl
inc
in
xchg
adc
jecxz
jb
out
or
mov
pop
sbb
xchg
loopne
aas
jo
sti
and
popf
cltd
mov
add
pop
lea
addr16
clc
das
ljmp
adc
adcb
movl
xchg
stos
jg
roll
push
popa
pop
jns
add
push
pop
sub
in
sahf
jmp
lret
jb
push
xchg
adc
jle
or
mov
lret
testl
fsubl
call
into
jb
cltd
adc
lret
xor
fnstcw
lock
cmp
mov
add
pop
mov
cmp
cltd
dec
ljmp
push
or
dec
in
clc
or
xchg
mov
imul
scas
push
enter
push
pop
mov
daa
test
push
mov
cmc
mov
sub
loopne
inc
movsb
cmc
fcomps
adc
inc
sub
add
add
fwait
dec
faddp
mov
std
scas
and
lgs
or
stc
fwait
xor
scas
mov
roll
jl
in
insl
push
scas
sti
test
xlat
xchg
adc
xchg
pop
dec
dec
add
jno
out
popa
out
lods
test
test
jns
lret
js
xchg
xor
icebp
shrl
mov
loop
in
xlat
jle
pop
shll
cmpsb
sbb
push
sub
fdivrp
pop
push
adc
ljmp
mov
fxch
mov
movsb
es
lds
cmp
mov
movsl
jne
sub
inc
pop
push
insl
xor
arpl
lahf
fbld
cltd
sub
jb
xor
sbb
test
pusha
add
jnp
pop
int3
mov
push
outsb
dec
rclb
int
popa
cmp
push
cmp
lea
out
fidivrs
and
mov
xorb
insl
cmp
cltd
sbb
inc
cmp
inc
lock
andl
lcall
lods
subl
popa
in
mov
xchg
mov
xchg
jae
cmp
decb
push
movsb
mov
mov
out
enter
and
mov
test
fs
adc
pop
aaa
cmp
imul
jmp
dec
xlat
xchg
cmp
test
sti
xor
add
push
xor
enter
je
adc
mov
push
add
push
xchg
stos
hlt
inc
push
jmp
push
xlat
pop
sub
lcall
jp
mov
adc
mov
cmp
mov
sbb
push
jle
outsl
movsb
jle
mov
aam
xor
push
stos
lock
addb
mov
dec
mov
jnp
and
hlt
or
testb
cmp
pminub
and
mov
shlb
fdivrs
cmc
aam
jle
dec
pop
mov
test
and
gs
mov
test
mov
int
and
sahf
cmp
mov
lods
mov
push
xchg
dec
mov
out
push
pop
popf
push
loop
mov
cmp
insb
pushf
add
test
jns
push
sub
and
ret
clc
fwait
mov
cmp
sar
xor
inc
call
fisubs
les
pop
cmp
mov
inc
or
mov
call
jne
mov
pop
ror
or
lods
xchg
xor
popf
inc
adc
dec
dec
pop
loope
dec
es
inc
dec
jae
mov
xchg
or
imul
pop
or
mov
jecxz
lcall
pop
into
repz
data16
stos
sbb
and
std
and
movsl
mov
in
test
sarb
sub
out
jmp
pop
ret
pop
inc
adcb
test
jbe
testl
push
mov
ret
inc
mov
mov
and
scas
stos
add
lods
inc
mov
dec
pop
jb
popf
loop
inc
jo
scas
pusha
out
sbb
push
jb
ja
aad
jbe
dec
xchg
and
inc
push
insl
or
push
mov
add
scas
sbb
mov
cmp
mov
ja
mov
or
andl
mov
mov
sbbl
ja
jne
nop
xor
xchg
addr16
sbb
cmpb
addb
dec
push
xchg
and
adc
pusha
mov
out
imul
jb
adc
mov
jo
sti
pop
iret
fistpll
mov
jb
cmpsb
jmp
in
cli
mov
aas
stc
jg
es
scas
xchg
jl,pn
push
cmp
lock
ja
test
call
pop
pop
xchg
mov
roll
push
xchg
add
mov
insb
mov
lea
push
mov
mov
aaa
sub
lret
outsl
loopne
or
push
inc
loop
adc
rorb
movsb
shrb
pop
xor
sbb
popf
xchg
outsl
ss
inc
in
shll
cltd
push
pop
shr
test
push
add
into
jmp
cmpsl
cmp
jmp
popf
adc
mov
test
loop
push
roll
push
mov
out
addr16
mov
lret
in
fists
rcrl
sahf
decb
aam
insl
sbb
out
push
loopne,pn
pop
fimull
daa
pushf
shl
std
jl
test
idivb
daa
loope
outsl
pop
jecxz
dec
sub
pop
shlb
xor
cld
shlb
mov
mov
je
or
cmpsb
repnz
mov
aaa
int3
rolb
mov
aam
stc
fnstcw
or
callw
xchg
lret
mov
aas
je
sub
leave
lret
pop
xor
adc
stc
loope
dec
xchg
mov
pop
js
lcall
loope
gs
mov
stc
mov
add
mov
insl
inc
mov
push
pop
lock
jmp
leave
out
xchg
std
movsl
out
jnp
xor
push
shll
sbb
sbb
sbb
sbb
int
sub
hlt
mov
in
movq
adc
sahf
inc
xchg
and
leave
mov
xor
testb
dec
in
ret
xor
out
test
sbbl
sbb
hlt
mov
inc
cmp
push
lods
pushf
pop
pop
mov
jecxz
or
enter
mov
mov
cmpsl
inc
out
ljmp
and
mov
mov
imul
das
xchg
lahf
sbb
mov
push
pop
lds
aaa
xor
ds
mov
daa
cs
push
in
nop
or
cmp
lcall
cmp
fs
loopne
lods
and
mov
ljmp
mov
inc
push
mov
out
std
scas
and
mov
js
fwait
mov
cmp
decb
ret
rol
xchg
imul
outsl
xchg
or
push
cmp
sbb
mov
andb
mov
test
sub
pop
pop
addr16
cli
jmp
and
dec
push
cmc
addr16
push
in
pop
inc
aas
push
ror
add
loop
mov
cmc
pop
mov
or
outsb
and
imul
adc
xor
rcl
inc
fcomps
in
push
out
ds
push
jge
mov
cmpsb
cmp
outsb
dec
sub
fprem1
insl
cwtl
jno
mov
push
and
dec
sbbl
lea
fs
popa
push
int
insb
insl
mov
cwtl
dec
inc
push
insl
lods
or
lods
mov
sbb
jg
jo
mov
fcoms
jae
sub
leave
mov
repz
sbb
jae
test
cmpsb
add
leave
cs
xchg
inc
ret
inc
cmp
pusha
sti
adc
add
mov
popa
pushl
in
xor
fwait
mov
daa
test
add
mov
shll
lds
cs
dec
nop
jae
aaa
mov
cmp
js
mov
adc
pop
or
dec
pop
out
jnp
push
jns
outsb
or
sub
lea
pop
inc
in
out
rcrl
push
lea
lret
in
lods
in
push
adc
call
mov
dec
push
ss
cmc
into
in
sbb
and
add
or
jae
push
push
mov
xchg
subb
mov
or
push
inc
or
inc
add
nop
lret
sti
mov
jns
dec
dec
loopne
lret
jmp
imul
ss
bound
int3
in
mov
jge
inc
adc
pusha
xor
cld
loope
lret
jmp
or
xchg
adc
jmp
xor
icebp
ficoml
ret
ret
inc
stc
push
or
jo
add
das
into
push
xchg
mov
mov
push
dec
mov
iret
test
scas
je
cmc
test
loopne
xchg
lret
repz
push
cltd
popf
stos
pop
cmpsb
pop
or
bswap
cmp
lds
fcompl
lods
jb
std
addb
sbb
out
mov
push
cltd
scas
repnz
jo
adc
pop
cmc
pop
lds
popf
or
push
xchg
repz
push
jbe
ret
jns
jne
repz
pop
scas
mov
test
mov
sbb
fucompp
test
add
aas
add
pop
push
je
push
jb
out
pop
add
movsb
sub
nop
cmp
in
adc
out
stc
mov
inc
test
sub
xchg
gs
xchg
rcr
out
xchg
ficompl
cltd
movsb
fisttpll
in
out
push
inc
ljmp
adc
jns
rcll
cmp
cmpsl
xor
add
iret
inc
iret
arpl
and
pusha
outsl
cli
pop
call
mov
rcll
xorb
mov
out
adcb
sahf
lds
loop
enter
and
repnz
lea
dec
js
or
lret
inc
push
pop
xchg
aas
stos
cltd
adc
cmpl
aaa
pop
jl
insl
adc
jb
int
jg
shl
notb
aad
jo
cltd
pusha
movsl
pop
repz
pop
popf
sub
pop
das
lods
cmp
aaa
and
sub
or
ljmp
outsb
bound
add
and
and
mov
and
bound
gs
dec
movsl
push
daa
in
repnz
pop
nop
dec
jl
xchg
sbb
jp
pop
out
mov
dec
xor
xchg
loopne
xor
out
or
mov
pushf
loop
sti
insl
bound
dec
adc
ret
mov
movsb
inc
fidivs
adc
fidivrl
lods
frstor
dec
dec
aaa
inc
inc
fstl
xor
std
jg
fisttps
js
sbb
pop
lahf
cmp
repnz
test
jne
sub
adc
or
stos
mov
mov
aaa
lahf
mov
jbe
dec
sbb
das
mov
popa
loop
mov
loop
push
mov
mov
cmc
lret
movsb
inc
xchg
mov
xlat
inc
pop
fiadds
adc
xchg
fcomp
sbb
cmpsl
xor
dec
xchg
pop
pop
js
loop
and
jmp
int
lds
mov
cmp
or
aaa
mov
sub
fistps
leave
outsl
hlt
inc
mov
pop
stos
adc
divb
ret
and
adc
ds
popa
dec
sbb
out
xchg
call
push
mov
int
ds
test
pop
push
inc
or
mov
adc
push
xchg
in
add
in
fistpl
nop
test
daa
xor
icebp
in
rclb
cld
stc
sbb
jp
lret
push
push
es
ds
add
adc
addr16
push
cwtl
inc
repz
mov
adc
lahf
lahf
dec
call
inc
mov
fsub
lret
movsb
mov
mov
push
mov
fisttpll
mov
adc
jmp
xchg
aam
xchg
inc
outsl
popf
or
cmp
sub
lret
mov
loope
int
dec
andl
and
push
mov
negl
adc
add
and
mov
sbb
int3
add
jnp
test
add
sub
out
nop
jp
cmp
lods
outsl
sbb
scas
and
push
jno
mov
push
gs
sbb
xor
loope
inc
into
test
or
or
ds
xlat
in
stos
sub
push
mov
mov
sbb
lds
sbbl
sub
addr16
out
pop
pop
ljmp
ficoms
or
add
pop
inc
inc
jmp
jp
pop
repnz
mov
ja
mov
lret
mov
xchg
idivb
iret
pushf
pop
bound
xor
popf
or
call
or
cmp
or
cmp
das
fucomp
in
pop
in
rolb
inc
pop
aad
outsl
nop
push
xor
sarb
or
dec
xor
dec
cli
dec
test
inc
push
insl
shr
outsl
je
adc
scas
ja
not
add
cmp
je
inc
cmc
jge
in
fdivrl
idiv
push
add
jnp
jge
push
sahf
and
fwait
add
out
and
out
cmp
jmp
cmc
rcl
scas
xchg
rcr
in
jp
or
data16
jp
cmc
push
loope
les
jg
sub
pop
mov
lahf
dec
shll
loop
popf
push
cli
fistl
sub
js
mov
jle
adc
addr16
dec
movsb
lret
loope
push
ficoms
and
aad
xor
jno
and
push
add
jbe
popa
inc
inc
push
add
fucomip
or
xor
xor
popa
fisttpll
fmulp
xor
imul
mov
outsl
out
xor
test
cltd
into
jns
jp
push
out
xchg
lods
xlat
sbb
out
testb
leave
jae
mov
js
and
out
cli
les
mov
je
adc
mov
cmp
mov
mov
imul
xorl
adc
xor
daa
sbbl
out
adc
pop
and
cmp
mov
lock
aam
push
push
mov
pop
mov
inc
push
pop
mov
arpl
fsubl
cmp
bound
and
sbb
iret
imul
adc
sbb
inc
xlat
stos
lock
testl
pop
inc
xor
fcmovnu
add
adc
lock
std
mov
fdivs
lods
jnp
push
push
or
push
xchg
insb
std
fisubrs
stos
xchg
push
fs
mov
loopne
push
sub
and
pop
xor
es
push
fucom
je
xchg
adc
inc
hlt
xchg
sbb
mov
and
pop
jmp
mov
pop
sub
test
std
push
sbbb
and
mov
idivl
xchg
mov
or
pop
mov
mov
push
cmpsb
mov
into
in
int
adc
cs
mov
push
inc
iret
aas
or
popf
adc
or
scas
or
mov
packssdw
jecxz
mov
pop
cmp
dec
xor
sub
ret
cmpl
add
daa
movsl
mov
data16
dec
pop
int3
orb
sbb
test
sbb
rorb
cmpb
sbb
pop
add
and
cmp
mov
cmpsb
mov
insl
movsb
and
xor
pop
adcl
enter
lods
xbegin
in
jp
mov
cmpsb
ljmp
mov
aam
add
push
mov
cmc
popf
sahf
out
mov
push
pop
adc
das
sbb
pop
movsl
mov
pusha
mov
aas
jecxz
outsl
arpl
push
ret
clc
dec
inc
pusha
cmpsl
ds
into
pop
jno
movsb
sbb
mov
add
cs
jnp
sbb
inc
pop
pop
loop
inc
out
mov
mov
je
mov
push
cltd
xchg
push
fnstsw
sub
push
push
insl
pop
or
nop
stos
sub
jl
inc
sahf
popa
cmp
mov
pop
out
push
dec
mov
mov
inc
mov
xchg
cmp
mov
adc
jmp
push
xor
aaa
mov
mov
in
movsl
imul
xor
roll
cmpsb
popa
dec
mov
inc
cmp
sub
and
and
leave
sti
bound
mov
lods
lret
push
mov
into
and
dec
mov
and
daa
lcall
lods
mov
rorb
push
pop
cmpsl
sub
jmp
xor
sbb
push
adc
xchg
mov
add
loope
push
out
movsb
pop
jns
mov
int3
jo
hlt
lea
bound
loop
jno
loope
and
and
mov
adcb
push
aam
nop
lahf
shrl
lea
push
cmp
xchg
xchg
fldt
mov
mov
out
jl
jecxz
inc
mov
into
sbb
ret
and
fistl
jmp
fisubs
mov
popf
rorl
or
ret
out
aas
rcr
pop
cmp
jge
jne
movsb
push
repz
lea
rcrb
aaa
and
inc
sbb
rclb
outsl
cmc
dec
add
in
mov
cld
inc
hlt
dec
pop
and
xlat
cmp
cltd
push
enter
mov
dec
sbb
jae
mov
sbb
add
adc
std
cld
out
dec
filds
notl
movsb
jns
cmc
mov
movhps
sub
xor
fisttps
jnp
adc
adc
insl
dec
daa
mov
and
popf
mov
loope
lret
xlat
arpl
shrl
jl
fwait
xor
addl
jecxz
mov
sbb
sub
sti
push
out
lcall
jl
sub
mov
cli
sbb
lods
dec
push
and
and
adc
lds
xchg
push
mov
pop
arpl
cld
cmp
es
jge
lahf
mov
mov
push
push
test
data16
mov
adcb
fwait
cld
dec
push
mov
pop
mov
push
iret
int3
mov
pop
xchg
shrb
ss
inc
jb
std
aas
inc
sub
sbb
cmc
outsl
and
test
mov
xchg
inc
ret
pop
popa
fcompl
xor
jo
loope
push
add
sbb
fcoms
xor
inc
out
fnstcw
dec
mov
jmp
jno
push
sarb
jge
pop
sbb
adc
push
scas
xlat
pusha
cltd
mov
pop
inc
imul
scas
or
inc
loope
pop
push
adc
push
adc
fs
inc
dec
out
scas
pop
lds
adc
cmp
cwtl
arpl
xorl
lock
cmp
and
xlat
or
aas
xchg
cmp
mov
lods
ficoml
repnz
pop
pop
das
call
mov
inc
aas
nop
les
fsubrl
mov
add
outsb
push
ret
mov
lret
in
std
cmp
mov
jbe
incl
lahf
and
insb
js
cmp
xchg
xchg
adc
and
and
aas
out
in
add
scas
mov
sbb
jbe
jge
push
adc
xor
pop
sub
lods
and
cmpsb
cmpsb
movsbl
int3
add
inc
pop
add
aas
jecxz
fidivs
daa
add
jno
test
aas
aas
decl
dec
xchg
out
xchg
lret
jg
adc
add
jno
xor
das
push
movsb
nop
mov
aaa
out
lret
push
and
mov
fwait
scas
sub
mov
ljmp
fcoms
sub
jl
cmp
fcompl
mov
call
mov
inc
push
push
flds
call
mov
outsb
cmc
movsb
imul
lods
xchg
push
jmp
mov
in
cltd
ret
inc
sbb
jl
dec
mov
mov
clc
lret
jb
lcall
aam
push
or
test
cmc
push
fistl
or
add
mov
fcomip
cltd
pop
sub
pop
pop
cmp
or
and
dec
dec
loop
shrl
stos
ja
pushf
jecxz
inc
stos
ds
in
push
aas
mov
mov
call
jmp
loope
testl
ds
push
mov
daa
sbb
add
movsb
imul
fldenv
mov
leave
mov
jmp
iret
mov
jg
testl
adc
ret
jl
pushf
fldl
jecxz
fstl
sahf
shr
mov
cld
loop
clc
cmp
in
scas
insb
mov
mov
scas
sbb
rorl
test
cmpsl
jmp
lods
cmp
xor
repnz
mov
xchg
jbe
cmpsb
shld
cmp
test
pop
cmp
test
mov
sub
push
stos
pop
mov
xor
inc
add
dec
push
xor
popf
xchg
movntps
jg
stc
pop
xchg
mov
fsts
jle
dec
mov
mov
xor
popf
sar
loopne
xchg
fsts
xor
add
adc
xlat
sarb
imul
das
out
pop
clc
daa
or
cmp
adc
filds
es
push
sbb
sub
rclb
push
jo
jae
fbstp
xor
mov
shrb
dec
stos
adc
lahf
leave
mov
lods
or
imul
and
dec
lea
sbb
xchg
ret
ss
or
pop
dec
or
fwait
cmp
push
push
js
aad
push
mov
xchg
cli
out
or
dec
jns
dec
popa
add
mov
mov
sbb
pop
pushf
mov
outsb
push
cmc
scas
aas
push
rcll
outsb
mov
pop
roll
xorl
bnd
test
or
scas
subb
fldl2e
jle
loopne
scas
fisttpl
mov
out
and
sub
xchg
add
scas
mov
jae
movb
push
cwtl
insb
adc
inc
sbb
push
xchg
or
lahf
stos
ret
ljmp
and
ss
pop
push
fistpl
push
cmp
stos
pop
sti
dec
rorl
sub
dec
out
and
adc
mov
fwait
outsl
or
ljmp
xor
popf
scas
inc
jnp
mov
imul
jmp
test
jo
mov
xor
and
call
das
add
jp
push
in
repz
xlat
dec
xor
dec
clc
fstpl
adc
mov
rcll
push
mov
aad
lea
cld
lods
push
push
push
push
lods
jae
hlt
fucom
cmpsb
inc
pop
jno
lahf
adc
test
fmull
fcoms
shll
iret
int3
jp
sub
adc
push
jnp
add
adcl
jg
mov
stos
aad
pop
cltd
push
icebp
inc
pop
pop
cmp
cld
add
les
sbb
adcb
jns
outsb
push
sarb
pop
inc
sti
int3
and
sbb
dec
push
fsubrs
shl
push
into
inc
dec
dec
push
inc
jo
subl
pop
add
inc
outsb
cltd
and
loop
in
out
push
add
inc
xchg
mov
cmp
or
pop
ljmp
jg
or
pop
mov
xor
mov
outsl
mov
fcoml
inc
sbb
mov
pop
test
sbb
jmp
int3
mov
sbb
pop
jmp
lcall
add
cmpsb
lea
test
arpl
andb
push
lahf
stc
add
int3
ss
dec
add
addr16
loope
xchg
mov
lods
aam
inc
fsubl
sahf
adc
sub
hlt
insl
les
or
or
outsl
mov
lds
lahf
inc
outsb
rol
faddl
mov
adc
sbb
ret
idiv
mov
pop
int3
mov
mov
outsl
loope
jnp
movsb
lods
lret
mov
imul
loopne
cli
divb
dec
sub
repnz
aaa
adc
dec
jno
sbb
dec
in
sarb
scas
adc
int
pop
jge
pop
sub
push
jle
mov
pop
shl
jl
jmp
and
lret
rcr
outsb
aaa
jmp
arpl
lods
movd
push
dec
pop
cmp
push
pusha
mov
mov
push
sub
js
sbb
cmc
cmpsl
sahf
insl
pusha
cmp
ret
clc
push
les
and
movsb
jg
mov
push
in
xchg
cmp
js
shll
cmpsb
mov
jge
aaa
push
leave
loope
mov
mov
pop
fisubl
ja
test
les
fcmovnbe
mov
lock
out
pop
std
popa
shll
mov
mov
adc
enter
jle
out
xchg
adcb
inc
je
ja
mov
test
jb
scas
out
aam
mov
bnd
enter
shrb
jmp
cmp
jne
dec
movsb
jg
xor
fcmovne
cmpb
pusha
mov
cmp
cmp
or
add
jae,pt
iret
test
push
sub
mov
popa
rorb
sbb
inc
push
nop
pop
mov
inc
jno
xchg
testl
jb
icebp
iret
or
push
xchg
sbb
pushf
std
leave
mov
pop
xlat
clc
fiaddl
mov
push
scas
enter
icebp
push
decb
call
in
xlat
das
and
lcall
dec
dec
stos
jae
ret
ret
pop
xlat
cmp
sbb
inc
pop
stos
icebp
and
stc
push
mov
hlt
hlt
loope
aad
cmp
mov
test
sbb
aad
adc
mov
xchg
xchg
cmp
dec
sub
hlt
mov
mov
gs
sbb
xchg
add
xchg
sub
fnstcw
aam
bound
xlat
jmp
pushf
popf
cmc
das
mov
add
mov
mov
add
stos
pop
pop
cmp
cwtl
jle
mov
ret
sub
fwait
arpl
mov
hlt
add
mov
mov
xchg
sub
hlt
add
inc
push
cwtl
mov
xchg
int
push
adc
lcall
stos
pusha
bound
outsb
push
and
dec
mov
mov
mov
es
sub
sub
fptan
icebp
fcoms
aam
mov
cwtl
sbb
fcomps
lock
lds
cwtl
mov
lock
imul
rcrl
pop
or
mov
xchg
xchg
mov
adc
sub
lock
insl
sbb
shll
cmpsb
shrl
mov
push
inc
in
mulb
hlt
js
adcl
rorl
in
stos
inc
sti
xchg
and
scas
lahf
add
fsub
mov
add
repz
mov
lock
push
aad
mov
fstl
mov
jne
pop
cs
outsl
adc
dec
cmp
mov
jle
push
loop
das
jne
push
and
cwtl
jno
ds
jo
xchg
ret
pop
pop
push
push
call
loopne
lret
cmpsl
sub
add
fwait
repz
in
or
fisubrs
js
scas
or
mov
jne
sub
pusha
mov
xlat
jnp
lcall
int3
dec
out
pop
cmp
cmc
dec
push
fidivrs
mov
out
test
adc
fadds
push
or
loope
sti
aam
inc
push
rorb
idiv
mov
adc
aam
lahf
int
ss
sub
idivl
fbld
addr16
dec
jmp
icebp
and
inc
lcall
daa
jg
out
pop
mov
into
xor
lret
test
and
cwtl
rcrl
xor
popf
dec
xchg
ficoml
sti
mov
and
cltd
add
sti
pop
test
sarl
pop
loopne
imul
add
andb
bound
and
pushf
sahf
repnz
je
faddl
mov
sarl
mov
rol
mov
incl
inc
mov
setae
pop
jp
in
sbb
mov
mov
leave
hlt
cmp
sarl
nop
repz
adc
xchg
add
stos
leave
pop
and
jmp
ljmp
xchg
xchg
adc
xor
jnp
dec
cmpsb
bound
out
fsts
sbb
enter
sahf
sbb
je
dec
ss
mov
cmp
push
push
xchg
and
pusha
lods
lcall
sbb
or
sbb
push
imul
insb
push
push
sub
mov
je
inc
xchg
out
sbb
movsl
cmp
pop
mov
int
xchg
decb
mov
and
and
cld
pushf
jmp
push
jp
push
cmp
pop
outsb
orb
cmp
aas
mov
adc
shll
cmp
roll
das
pop
adc
xchg
push
rclb
dec
sahf
dec
mov
pop
push
or
or
or
pusha
arpl
mov
jo
push
and
rol
scas
cmpsb
mov
mov
add
std
test
mov
jnp
cmp
seta
loope
pop
lcall
adc
lea
insl
jecxz
jns
or
push
out
addb
inc
cld
fs
orl
frstor
and
daa
pop
pop
loop
adc
ret
nop
cmp
adc
lock
sub
xchg
pop
imul
sub
fisttpl
pusha
fdivs
out
mov
scas
stc
divl
nop
arpl
shll
and
cs
mov
and
aas
push
imul
sub
mov
mov
test
fs
pop
and
inc
or
pusha
je
adc
and
pushl
xchg
fld
mov
stos
pop
pusha
xchg
sub
mov
push
jo
hlt
pop
sbbl
push
add
aam
iret
pop
jbe
stc
stos
add
or
cmp
add
jge
movsb
hlt
test
out
pop
in
sbb
je
jns
lock
imul
xor
stc
mov
mov
movsb
xchg
push
out
and
jmp
jmp
dec
test
mov
sub
push
js
out
idiv
scas
and
fnstcw
pop
cmp
fldt
dec
scas
sbb
jbe
inc
cmova
mov
mov
dec
jns
push
mov
mov
aas
fcmovne
push
out
fnstcw
fwait
imulb
lods
jp
cmp
lods
xchg
xor
jae
pop
and
xchg
cs
push
push
sbb
jnp
enter
daa
inc
loope
bound
lret
fcompl
pop
adcb
pop
or
and
adc
jno
sub
mov
maxps
mov
std
cmpb
stos
enter
aaa
mov
xchg
int3
mov
adc
ret
xchg
mov
mov
popf
arpl
mov
les
aaa
xchg
add
push
pop
or
incl
gs
repz
push
add
fsubp
bswap
mov
loope
dec
mov
add
cmc
mov
xchg
mov
push
mov
imull
push
sub
scas
mov
aas
loope
adc
arpl
cltd
addr16
jmp
mov
jns
repnz
and
jmp
bound
mov
sahf
mov
std
and
in
push
rcrb
das
add
js
mov
inc
sub
scas
push
test
inc
mov
mov
daa
sbb
pop
lret
pop
jecxz
ror
loopne
enter
mov
ja
and
mov
insb
adc
pop
loopne
or
ss
cmp
daa
and
jg
ljmp
and
and
cmpsb
sbb
arpl
lea
sub
repz
push
sbb
fwait
and
cmc
adc
js
push
xchg
sbb
loope
mov
xchg
das
cmpsb
scas
inc
xor
inc
rorb
push
sbb
repnz
sbb
inc
or
sbb
cwtl
dec
aas
ret
dec
stc
jge
pushf
inc
and
insb
fsub
mov
aaa
lcall
inc
mov
out
out
aam
jo
xor
js
mov
das
xor
or
and
cli
dec
imul
ljmp
out
cmp
test
pop
sub
push
fcomi
dec
sbb
push
sbb
or
cmp
xchg
sbb
mov
sbb
rcrl
stc
jl
mov
ficoml
pusha
fs
xor
sbb
jbe
sub
xchg
lods
mov
fwait
cmc
in
pop
fwait
inc
xor
push
jnp
jle
out
fmull
enter
les
insb
insl
mov
mov
xor
rorl
loop
movsl
hlt
sbb
cmp
fisubrl
shlb
ret
aas
imul
lods
test
sbb
mov
mov
call
xor
out
mov
into
test
in
stos
ret
lcall
rcll
cs
push
dec
mov
xchg
lret
pop
xchg
lods
iret
sub
inc
jno
xor
pop
inc
lods
push
fbld
sub
leave
scas
icebp
data16
cwtl
testb
and
iret
and
push
push
xor
setnp
push
add
mov
test
setle
ss
neg
mov
mov
mov
fsubrl
dec
pop
pop
mull
sbb
psubsw
cwtl
adc
mov
in
dec
push
fsubrs
fldpi
xchg
sbb
idiv
and
divl
sarl
adc
mov
sbb
sbb
mov
cmc
add
leave
test
and
leave
push
arpl
loop
xchg
dec
fwait
dec
jecxz
and
test
add
in
dec
push
fwait
imul
pop
mov
out
out
repz
mov
roll
adc
imulb
inc
inc
and
jae
sar
ljmp
push
pop
rol
mov
mov
sbbl
fcmovb
cwtl
pop
mov
scas
pop
cli
cli
mov
mov
mov
mov
fwait
or
or
lock
pop
pusha
movsb
mov
cmc
hlt
repnz
dec
call
push
loop
ja
and
aaa
xor
inc
xchg
ljmp
les
dec
inc
cmc
movb
sbb
rolb
mov
pop
mov
pop
fwait
loop
shrl
inc
fnstenv
dec
pop
add
enter
aaa
ljmp
cwtl
inc
cmp
push
add
das
les
xor
loop
pusha
imul
add
test
mov
loope
data16
and
add
gs
in
cs
outsb
push
inc
mov
dec
pop
shlb
jb
adc
mov
xchg
add
mov
pusha
jne
pop
xor
sub
xchg
pop
stc
jb
in
inc
mov
and
imulb
popf
inc
jb
arpl
icebp
ror
leave
xor
je
aam
mul
icebp
pop
cmc
and
mov
adc
jae
lret
gs
pop
sub
popa
ljmp
add
xor
add
inc
fsts
cwtl
mov
pushf
mov
push
and
add
aaa
push
les
push
fldt
xlat
ret
imul
sbb
mov
inc
push
sub
stc
mov
popf
out
add
jae
add
mov
or
loope
cmpsb
xor
mov
lock
adc
addr16
dec
call
fisttpll
sbbl
mov
mov
rcl
inc
loopne
jno
pushf
fadd
stos
cli
mov
sbb
rorl
push
cmp
test
test
jns
outsl
mov
jge
mov
aas
cmp
lea
push
xchg
xchg
incl
mov
fmuls
mov
inc
daa
cld
int3
clc
stc
and
jno
scas
fbstp
push
mov
inc
fbld
or
cmp
fcoms
pop
sbbb
jno
imul
es
and
rcr
push
in
cld
mov
rcr
pop
adc
jb
push
jnp
adc
call
mov
adc
fisubs
pop
inc
movsl
push
fwait
out
xchg
mov
fwait
dec
lahf
mov
test
push
test
in
orb
repz
pop
testb
jge
inc
or
and
jbe
sub
ljmp
subb
mov
loope
sarl
push
inc
pop
cmp
mov
xchg
or
sbb
imulb
add
data16
dec
xor
push
addb
icebp
jb
mov
push
aas
or
aad
out
out
mov
data16
mov
rorb
mov
inc
jbe
sub
scas
int3
idivl
adcl
cmc
test
cmpl
aam
aam
pop
lcall
inc
fs
mov
jae
out
dec
lock
or
and
out
inc
testb
xchg
dec
nop
inc
cmpsb
push
decl
jmp
ja
jne
mov
inc
imul
push
std
mov
mov
mov
mov
dec
mov
mov
xor
and
and
sahf
lods
jle
xor
movsl
jnp
aaa
mov
in
push
ret
leave
ret
cmc
aas
dec
xor
mov
into
popf
daa
xchg
sarb
mov
aad
cli
cmp
adc
jmp
cmc
test
mov
stos
dec
test
ss
ret
enter
dec
xor
push
inc
ljmp
jae
xchg
push
out
repz
push
lret
insl
pop
cltd
lods
inc
outsl
pop
push
es
mull
push
mulps
cmp
sub
loop
pop
pop
dec
sub
lock
pop
xchg
xlat
xlat
jmp
lds
test
jo
pop
lods
inc
adc
filds
pop
jl
jbe
outsl
loopne
negb
and
xchg
xor
loope
mov
jle
fldt
mov
out
xchg
or
fwait
scas
pop
mov
jecxz
mov
cmp
cld
cmp
cmp
ret
adc
or
xor
outsb
xor
push
xchg
cmp
jp
stc
addr16
adc
adc
out
pop
sub
xlat
scas
adc
push
adc
ljmp
test
jecxz
xchg
inc
sub
jnp
popa
jmp
add
push
test
lock
dec
aaa
aas
add
lret
xor
das
adc
les
jp
mov
rorl
and
outsb
push
mov
xor
pop
pusha
rolb
enter
fisttpll
adc
xchg
shrb
mov
mov
and
mov
lret
les
imul
dec
adc
sub
dec
or
test
push
pop
dec
dec
test
adc
jge
xor
xlat
sbb
imul
test
sti
es
cmp
ret
xor
inc
lds
sbb
adc
pop
adc
int
ret
inc
dec
sub
push
ficoms
ret
mov
jmp
jne
jne
cld
insl
jb
dec
jb
imul
mov
orb
stos
sub
mov
or
inc
mov
or
sub
jl
out
pop
pushf
mov
dec
cmpsb
cmpsb
pop
outsb
mov
ds
push
mov
jle
into
xchg
daa
and
pop
inc
fcompl
std
push
pop
mov
or
mov
inc
and
jecxz
pusha
and
mov
jne
mov
adc
inc
xor
popf
jecxz
scas
shr
push
dec
xchg
lea
inc
stos
xchg
or
pop
in
adc
sub
xor
ror
ljmp
jo
dec
adc
es
inc
xchg
push
ret
sbb
xor
and
insb
xlat
cli
enter
mov
sub
repnz
pop
stos
xor
and
dec
orl
or
shll
out
xorl
ss
xchg
jnp
insb
lret
or
fiadds
lcall
ja
aam
subl
xchg
add
jg
rorb
shlb
jmp
ret
cmpl
pop
addl
test
scas
data16
mov
pop
test
rolb
fidivrl
push
lods
rorb
scas
mov
add
mov
and
and
mov
lcall
cs
mov
lret
and
loopne
daa
jno
sbb
dec
cmp
jg
push
cs
ret
lret
mov
addr16
outsl
dec
lea
lock
pop
xchg
sahf
mov
aad
in
pop
faddl
inc
mov
ret
addl
ret
mov
adcl
pop
or
lock
xor
add
fdiv
in
test
pop
lret
rorb
jbe
or
ret
cmp
movsb
and
pop
les
mov
call
clc
addr16
aas
cmp
sarb
push
fisubrs
imul
xchg
pop
data16
frstor
js
mov
cwtl
fldpi
and
cpuid
lock
xchg
sbb
inc
pop
and
xchg
cmc
push
ljmp
adc
iret
cwtl
std
and
mov
icebp
sub
xor
mov
adc
cmp
and
xor
pop
xchg
sarb
and
push
out
push
cli
andb
fisttpll
inc
jnp
xor
nop
jno
sbb
lahf
dec
jns
mov
mov
xor
cs
cmp
repnz
fcmovu
stc
pop
out
aas
out
mov
pop
sbb
xchg
xchg
mov
leave
int
sbb
fistps
dec
xor
xor
xor
jecxz
or
insb
fcomps
pop
push
push
adc
in
imul
imul
incb
mov
mov
dec
pop
xor
or
fstpt
and
out
repnz
fstpl
xchg
stc
inc
fmuls
outsl
es
ljmp
or
jns
push
out
shll
jp
pop
out
xchg
sub
cmp
pop
int3
cld
stc
iret
jno
push
pop
ret
imul
add
pushf
insl
fxch
pop
or
pop
mov
int3
fldt
dec
jl
push
mov
mov
jmp
test
xchg
mov
inc
es
stos
std
aam
and
sbb
rcrb
aas
sahf
iret
mov
xchg
sbb
dec
pop
fcomi
lods
mov
pop
pop
outsb
mov
lret
lods
jo
push
sub
mov
or
movsl
or
xorl
xchg
daa
lret
push
and
cmpsb
jnp
dec
dec
test
fildll
adc
dec
lcall
sbb
cmpsl
out
or
popf
jo
cli
cmp
les
or
lret
icebp
sub
gs
lea
mov
push
xchg
mov
push
xchg
sub
int
out
jl
sub
mov
pop
cmp
cmp
cwtl
sub
es
mov
arpl
push
and
mov
lods
jp
aas
aaa
lock
mov
loope
popf
pop
lock
out
mov
outsb
mov
dec
loopne
testb
jne
jne
xorl
imul
test
and
mov
in
gs
test
stos
cmp
push
pop
imul
sbb
je
and
push
and
or
fcoms
sbb
mov
rcl
jne
xchg
fimuls
or
and
push
add
icebp
popf
ja
sbb
jns
imul
idivl
scas
loopne
dec
inc
insl
lds
aad
push
inc
lahf
lods
sbb
sbb
mov
insb
lcall
pop
mov
inc
mov
sub
mov
loope
jp
sub
adc
jle
popf
and
rorb
add
mov
shll
mov
xchg
cli
inc
dec
dec
jns
aad
sbbl
mov
divl
and
cli
imul
aam
je
dec
mov
aas
push
pop
out
push
jge
stos
pop
and
in
push
lods
out
in
inc
test
in
pop
xchg
jmp
xchg
imul
outsb
jl
mov
adcb
xor
and
push
icebp
xchg
mov
cmpsb
enter
cmp
and
xchg
out
dec
icebp
lret
ret
mov
insl
xchg
xor
scas
das
sarl
xchg
in
adc
cmp
ja
mov
sbb
call
xor
xor
data16
xchg
jp
dec
cmp
sub
push
mov
jg
sub
xchg
and
sub
pop
icebp
push
sbb
loop
fnstenv
xor
push
sub
cwtl
cmp
pop
pop
mov
mov
out
ret
pop
addr16
pop
call
test
movsl
stos
pop
nop
xor
imul
sub
xchg
nop
push
dec
and
or
fwait
lods
leave
pop
or
shrb
inc
scas
outsb
xchg
stc
jns
stos
fldl2e
bound
xor
cmpsb
mov
aam
das
jp
xor
outsb
jle
mov
jle
dec
test
ja
push
fsubrs
mov
sbb
ret
movsl
movsb
add
cmpsl
adc
add
dec
sub
cli
ljmp
push
scas
addr16
enter
repz
mov
add
add
and
sahf
orl
mov
mov
nop
inc
scas
xchg
dec
mov
jmp
out
loopne
sub
jecxz
repz
enter
shlb
es
mov
inc
xor
cmp
mov
sarl
xor
fcomi
inc
test
push
mov
add
stos
mov
inc
in
pop
push
sbb
mov
fwait
xor
pop
pop
xchg
fcomps
cmp
adc
pop
mov
scas
popf
das
cmp
into
and
jb
inc
outsl
cmp
in
ss
xchg
mov
pop
dec
mov
mov
jmp
dec
or
xor
mov
leave
daa
js
cltd
mov
xchg
mov
jp
jge
out
dec
imul
and
sbb
sub
xchg
into
int3
mov
aam
push
bnd
push
pushf
sbb
adc
jl
pushf
xchg
popa
mul
outsl
shrb
fcomps
pop
adc
dec
clc
aaa
movsb
fs
fbld
sbb
adc
jne
adc
mov
enter
cwtl
jno
or
xchg
aam
xchg
imul
les
add
add
jns
cli
rorl
pop
xor
jg
dec
cmp
pop
mov
mov
jb
xchg
loopne
or
lcall
jmp
cmpsb
push
orb
cmp
cmp
or
lds
sbb
loope
movsb
pop
pop
cmp
lahf
adc
shrl
lds
fisttps
mulb
sarl
add
jp
mov
mov
or
mov
cld
inc
cmp
loop
sub
inc
xchg
xchg
pop
mov
outsl
jns
ds
stc
ja
xchg
and
push
and
jno
test
cmpsl
cld
into
mov
and
push
aaa
in
idivl
in
imul
sbb
adc
fstpl
in
leave
ret
cmp
mov
lods
pushw
mov
in
out
push
xchg
jge
test
cwtl
inc
mov
std
cli
bnd
iret
popa
and
pop
lret
or
out
out
aas
arpl
cmc
sub
add
pop
xor
push
or
movsb
push
add
xchg
aaa
movq
or
sub
leave
in
mov
test
out
dec
divb
roll
outsl
xor
cmc
loopne
jge
jno
xchg
jmp
inc
fmull
and
mov
mov
insb
adc
outsl
mov
cmp
inc
push
inc
push
jl
popa
dec
sbb
aas
ds
xchg
das
cmc
leave
cltd
enter
cmp
xlat
popa
jg
test
rcr
pop
mov
movl
push
nop
inc
scas
mov
test
dec
pushf
orb
jo
xchg
bound
xor
lret
mov
sahf
notl
out
je
jmp
loopne
ret
push
or
sub
jl
ds
sarb
fimuls
sbb
fdivr
xchg
sbb
stos
cmp
push
scas
movsl
arpl
jg
ret
mov
xor
mov
pop
sbb
daa
rorb
jle
pop
pop
push
and
mov
aad
arpl
pop
iret
dec
lahf
sub
dec
clc
ljmp
repnz
imul
dec
mov
cwtl
ret
out
push
lret
into
stos
es
in
out
mov
fstps
insb
cmc
shlb
fdivs
pusha
enter
fildll
xlat
imul
imul
sbb
inc
sub
in
pop
lahf
push
dec
mov
pop
int
rorl
ss
icebp
jns
dec
xor
call
and
addl
sbb
push
pusha
mov
pop
fadds
xchg
mov
mov
mov
xchg
xchg
inc
movsl
pop
dec
aam
sub
pop
mov
jb
pop
cmpsb
outsb
inc
inc
int
lock
test
adcb
cltd
sub
repnz
inc
es
test
pop
xlat
js
mov
xchg
push
popf
jne
movsl
xchg
inc
shrb
sahf
ret
inc
sbb
int
sub
scas
jbe
cmp
jne
inc
ret
mov
mov
xchg
sbb
inc
clc
vrsqrtps
xor
insb
out
repnz
pop
push
sbb
mov
adc
movsb
sub
and
popl
dec
in
adc
sbbb
sbb
pushf
out
je
repnz
test
xor
das
mov
in
and
and
xchg
dec
sub
or
stos
mov
jmp
fidivrl
mov
sub
jae
jns
movsl
adcb
int3
lea
and
enter
int3
lsl
daa
lds
popa
mov
push
adc
popf
or
aad
push
lahf
sbb
xchg
jno
sbb
in
insb
cmpsl
nop
jl
lds
fsts
enter
enter
ret
mov
xor
sbb
fimull
loopne
stos
in
stc
outsb
pop
pop
gs
out
or
add
leave
in
push
push
test
divl
stos
pop
aas
push
mov
mov
and
das
and
jp
xor
mov
aam
xor
mov
and
sub
push
js
sbb
mov
pop
sub
jge
and
ds
push
cld
mov
push
mov
scas
fwait
and
jnp
lret
sbb
stc
loop
dec
in
dec
mov
pop
inc
dec
gs
outsb
lahf
mov
fwait
mov
ds
frstor
lds
icebp
sahf
popf
sbb
notb
pushf
push
loopne
sbb
sbb
adc
or
push
mov
mov
imul
int
popf
popf
loop
mov
incb
leave
mov
sbb
inc
xchg
xlat
les
xchg
jns
or
xchg
pop
or
add
adc
lcall
ds
jl
das
mov
pop
inc
push
add
fs
inc
mov
cmpsb
jmp
ret
pop
xchg
es
dec
xor
xor
push
cmpsl
jl
arpl
jp
in
add
mov
xor
push
rol
cmpsl
cmp
arpl
push
aaa
pop
scas
xlat
lea
in
cmpsb
js
or
cmp
xchg
add
sbb
daa
push
jmp
mov
xchg
pushf
test
and
loope
inc
lahf
mov
aas
mov
xchg
ds
sahf
sbb
sarl
mov
imul
insb
push
or
xor
aad
loopne
add
sti
cmpsl
dec
sbb
sti
xor
sub
inc
adc
outsb
ret
out
cld
es
ret
and
jb
movsl
or
inc
push
xor
pop
je
dec
out
outsl
or
or
mov
jecxz
mov
aaa
xchg
push
pop
popa
fwait
out
pushf
iret
sahf
int
aad
cwtl
jle
sti
or
add
cmp
or
inc
ret
push
and
add
dec
xchg
jg
scas
mov
daa
bswap
add
mov
popf
insl
roll
gs
push
push
jle
insl
xlat
loope
cmp
sbb
sti
repnz
xor
cli
adc
cmp
repz
sarl
cmc
sub
pop
fstpt
or
and
jl
mov
lret
mov
jno
sbb
or
jg
frstor
jno
jp
sub
cmp
out
ja
insl
loope
imul
push
pop
jno
test
adc
and
cltd
jmp
fsubs
dec
inc
sbb
outsl
mov
loope
xlat
add
push
aam
imul
fcomip
pop
aaa
mov
mov
dec
sub
imul
xchg
sub
mov
aas
into
inc
dec
xchg
and
daa
xchg
in
pand
mov
loop
rcll
sbb
clc
icebp
xor
jb
jmp
pop
push
mov
xchg
pop
pop
mov
mov
loopne
movsb
subb
gs
mov
pop
jmp
cli
clc
mov
shrl
xchg
data16
pushf
fwait
push
pop
fs
out
sub
jae
inc
xor
sub
mov
mov
orb
imul
out
iret
dec
pusha
sub
in
or
pop
es
mov
pop
int
stos
je
add
hlt
jns
sbb
dec
fisubrl
std
je
insb
out
dec
jge
mov
adc
pop
push
sub
popf
ja
sbb
pop
filds
push
sub
fdivr
cmpsl
clc
cmp
and
shrb
imul
cli
iret
fidivrs
jl
adc
jb
insb
aad
sub
je
sbb
cmp
push
xchg
and
cmp
popa
cmpsl
push
pop
sbb
pop
cmp
mov
aas
mov
mov
sub
clc
jno
xlat
jnp
push
mov
sbb
sarb
popa
sahf
in
mov
movsb
test
pop
xchg
add
cld
xor
push
imul
sub
movsl
adc
jb
lods
inc
scas
sub
and
xor
fidivrl
sbb
add
and
inc
test
and
and
push
dec
fcompl
or
mov
lods
cmp
stos
andnps
adc
mov
adc
cmp
hlt
mov
sub
in
rcrl
daa
or
lock
lret
add
xor
mov
dec
mov
inc
add
nop
mov
xor
lock
movsl
stos
jl
mov
or
and
push
ja
movsl
mov
icebp
sbb
aam
out
stc
mov
js
aam
pop
outsb
sahf
enter
cltd
pop
jmp
mov
and
push
mov
mov
push
adc
inc
lock
inc
push
cmp
movsb
icebp
lret
xor
stos
shl
mov
test
ss
mov
mov
cmp
icebp
jecxz
insb
push
scas
fcompl
mov
shl
add
lock
or
das
add
outsb
shlb
rorl
lahf
outsb
jl
push
xchg
lock
sbb
ret
cmp
jge
jo
inc
xor
fisttpll
cmp
xchg
test
flds
stos
sbb
jns
sub
out
add
lods
sub
xchg
jp
in
fwait
cltd
in
adc
flds
jmp
ja
pop
sahf
and
ror
sub
loopne
mov
inc
and
mov
push
inc
sbb
adc
mov
lds
pop
sbb
xchg
pushf
int
add
inc
adc
jo
ss
lcall
xor
jo
inc
adc
out
mov
jae
subl
push
out
add
jecxz
and
sub
cmpsl
xchg
add
pop
pop
addr16
or
rorl
push
push
jl
addr16
popa
insl
adc
out
jecxz
pop
mov
lret
out
fwait
aam
pop
fisubrs
lahf
jb
fnstenv
popa
jmp
arpl
pop
jecxz
aaa
pop
sub
repz
xor
pop
and
bound
jnp
clc
jne
in
ret
iret
push
cmp
inc
add
loop
sub
movsl
pop
dec
or
adc
sub
ret
push
cmpsl
jne
daa
sbb
xchg
jb
jge
ljmp
inc
add
cli
add
pop
orb
out
add
mov
rcll
outsb
adc
in
aaa
mov
pop
jl
rcrb
adc
sub
repz
push
out
pop
mov
cmp
xor
add
leave
dec
mov
out
cmpsb
push
shlb
in
pop
or
xchg
sar
enter
push
inc
mov
test
xor
mov
adc
pop
adc
adc
dec
ds
pop
loope
adc
imull
test
in
pop
cmpsb
cli
inc
pushf
mov
mov
xchg
push
pop
mov
jmp
stos
and
enter
in
jb
aaa
push
lcall
jl
or
fsubrp
jg
iret
outsl
xchg
sub
jnp
jne
inc
icebp
jmp
sub
incl
insb
fsubs
xchg
mov
inc
jge
iret
cld
cmpsl
sub
mov
test
push
lea
jge
mov
lock
outsl
xchg
call
stos
cmpsb
std
add
push
pop
mov
stos
pop
jp
stos
ficompl
das
fists
dec
mov
stc
divl
dec
fimuls
inc
xchg
jno
pop
xor
push
mov
xor
cmpsb
sar
dec
loop
cltd
inc
xor
pop
sub
sub
movsl
in
scas
pop
mov
roll
pop
sbb
adc
mov
or
push
mov
xor
in
out
mov
loope
cmp
rcr
add
test
insb
or
dec
mov
inc
pop
sbb
and
test
aas
repz
repz
xchg
cmp
sbb
cld
push
and
adc
in
mov
ficoml
cmp
in
add
test
jg
out
mov
jbe
mov
repz
jmp
repz
nop
xchg
cltd
mov
add
adc
pop
add
ret
adc
sub
xlat
addr16
sbb
dec
test
pop
mov
xor
lds
pop
mov
cmp
cmpsl
xchg
aad
mov
mov
lods
shl
loop
inc
dec
jp
and
leave
push
movsb
push
dec
fs
pop
push
jae
stc
in
push
ss
jb
sbb
and
lds
xchg
gs
call
je
stc
inc
fistl
or
push
call
loop
ss
xor
sahf
mov
icebp
jae
arpl
in
push
sub
ja
les
adc
cmpsl
or
add
decb
adc
popf
mov
xchg
ret
les
test
idivl
je
bound
push
mov
pop
shlb
lret
mov
ffreep
push
or
insb
sub
and
mov
outsl
stc
jae
mov
add
out
and
dec
lea
mov
imul
xor
sub
xor
icebp
sbb
sub
leave
inc
addb
push
push
movd
mov
adc
out
lock
jmp
jp
xchg
pop
mov
mov
push
inc
cmpb
jmp
sbb
nop
fwait
mov
sub
add
leave
pop
and
cmp
pop
push
jg
mov
fstpt
cli
adc
xchg
loope
cld
popf
push
es
xchg
xchg
mov
pop
lea
outsl
xor
fsubrs
push
outsl
push
in
push
test
and
incb
lods
mov
arpl
and
icebp
sti
inc
ret
xchg
adcb
pop
adc
in
jae
jns
ljmp
jno
or
push
inc
inc
pop
test
repnz
or
pop
andb
push
xor
out
xor
jge
fcomip
sbb
cwtl
pop
inc
push
popa
push
inc
pop
sbb
fcmovbe
aas
enter
into
shr
test
loope
int
adc
and
pop
mov
xchg
iret
mov
movsl
mov
lcall
or
stos
test
pop
ljmp
popa
sbb
mov
xchg
inc
xor
and
inc
lock
xchg
and
ret
pop
into
cltd
cvtps2pi
push
sbb
mov
push
insb
jmp
loop
std
pop
adc
xchg
xchg
xor
sub
rcll
cmpsl
fwait
add
adc
es
adc
and
icebp
roll
cmp
arpl
mov
std
fmul
cmc
insb
shll
inc
or
lret
sbb
cmp
pop
jg
out
mov
mov
cmc
dec
rcrl
mov
push
push
fnstcw
fimull
rcl
call
or
push
push
mov
pop
jns
xor
out
xchg
movsl
notl
xchg
lock
sub
pop
dec
scas
popa
pop
jo
ss
xor
cli
int3
inc
int
addr16
xchg
push
aam
mov
movl
pop
pop
xchg
jnp
nop
shlb
dec
jl
mov
jmp
inc
out
mov
divl
lods
ret
shlb
lods
sub
and
dec
sbb
mov
add
arpl
inc
scas
movsb
jne
filds
lods
push
push
out
jnp
sbb
ss
je
pop
xor
mov
adc
mov
sarl
inc
inc
xor
mov
addr16
push
imul
rcrl
adc
mov
out
andl
sbb
sbb
jo
ljmp
loope
scas
cld
mov
sub
aaa
push
andl
jnp
test
ja
icebp
stc
lock
inc
mov
loop
les
iret
es
mov
negb
sbb
pop
addr16
aam
repz
push
movsl
cmp
into
outsb
xchg
push
imul
in
add
ss
add
jns
push
add
js
mov
ljmp
xor
or
add
dec
scas
leave
and
leave
jno
xchg
iretw
pop
movsl
xchg
inc
sbb
push
es
shl
push
into
jno
dec
xchg
jae
dec
add
in
out
add
dec
inc
or
jb
inc
sub
popa
jle
sarl
jmp
push
gs
and
loop
xchg
fs
cmp
jbe
mov
cmp
ljmp
sbb
jnp
lock
cmc
sub
cmp
mov
mov
add
je
add
xchg
pop
js
jp
aas
pop
cltd
sub
sti
push
stos
out
pop
and
sub
ret
sub
dec
scas
lock
lods
shl
adc
pop
cld
jl
push
iret
xchg
mov
sahf
scas
mov
rcll
xor
sbb
std
mov
cs
xor
punpckhwd
xlat
int
lock
inc
shll
dec
cmc
je
cmpsb
sub
int3
pushf
sar
mov
into
inc
sbb
ret
mov
xor
out
fnsave
scas
idivl
mov
mov
push
cmp
fisttps
dec
push
push
jb
shrl
dec
dec
cmp
pop
dec
sbb
xor
push
push
out
xchg
loope
enter
sahf
and
xor
or
adc
mov
sub
cmp
mov
sub
daa
add
repz
jno
ret
icebp
lods
stos
cmp
sbb
xlat
jle
stos
mov
add
mov
mov
inc
xor
push
cmova
xor
dec
mov
jge
cmp
lds
sub
aas
push
clc
popf
mov
sub
adc
movsb
push
push
das
js
lods
loopne
pop
mov
pop
xor
rcll
cmp
pop
insl
mov
lods
push
sbb
cmp
mov
testb
xor
sub
roll
sbb
addr16
jne
subb
int
mov
inc
mov
or
pop
lret
inc
movsb
mov
inc
arpl
imulb
cmp
jbe
scas
int3
pop
shl
jge
or
adcl
testb
test
aas
xor
je
sbb
lcall
mov
xchg
out
clc
mov
test
mov
pop
cltd
addr16
pop
mov
fcmovb
mov
push
pop
insb
sub
cmp
aad
int
jnp
cld
hlt
jo
cld
mov
int3
ss
pop
mov
in
add
and
sub
or
xor
push
mov
dec
test
stos
repnz
ljmp
int
pusha
jbe
adc
daa
dec
test
pop
pop
xchg
mov
sub
xchg
cmp
ficoml
dec
ret
xor
sub
jns
fs
jge
mov
adc
push
fimuls
test
lret
inc
add
jbe
addr16
adc
out
and
mov
test
jbe
jbe
mov
ss
ja
cwtl
mov
mov
out
mov
lods
jp
pop
adc
mov
adc
lea
rclb
lret
lret
mov
mov
out
xor
frstor
lods
je
pusha
lds
inc
lods
ret
and
es
cmp
das
xchg
add
adc
dec
enter
adc
sbb
adc
jne
outsl
and
adc
stos
adc
mov
stc
mov
add
test
fs
sub
sub
aam
sbb
pushfw
daa
int3
shll
cltd
insl
adc
stc
fs
hlt
or
sub
subb
mov
push
ror
lcall
pop
aad
es
ja
in
and
adc
mov
jp
push
shlb
push
testl
adc
inc
dec
inc
mov
test
into
js
cmp
jecxz
out
rol
cmpsl
jp
jnp
idiv
pop
cs
xor
rclb
add
out
stc
subl
dec
in
cmc
hlt
push
jecxz
aaa
push
arpl
insb
pop
cs
fiaddl
mov
push
bound
sub
or
mov
sub
jo
lahf
xchg
cs
push
and
fcom
dec
pusha
scas
adc
fsubrp
mov
cmp
jmp
notb
lahf
or
repnz
testl
call
push
pushf
push
xchg
bound
jb
divl
mov
push
out
mov
xor
pusha
sbb
mov
jno
dec
dec
mov
notb
pop
test
sbb
ss
fdivs
mov
aad
xchg
push
out
outsl
jbe
mov
adc
jne
ss
cmpsb
dec
dec
icebp
jbe
sbb
or
loopne
hlt
movl
mov
jmp
imul
xor
sbb
outsl
cwtl
jb
ss
and
aas
or
xor
xlat
sbb
into
rcll
sub
jmp
inc
pop
testb
cmp
shlb
add
mov
popf
leave
dec
std
pop
adc
or
pushf
sub
mov
xchg
cmp
fisubrs
cltd
sbb
test
mov
pop
lods
stc
arpl
mov
adc
fdivr
outsb
arpl
add
xor
and
and
or
cmp
mov
mov
push
xor
mov
adc
pusha
add
sarb
fisttpll
bound
jge
js
xlat
movsb
cli
iret
xlat
stos
iret
scas
jge
inc
adc
imul
jmp
add
pop
ffreep
cmpsl
mov
pop
mov
push
mov
imul
sti
cli
ret
sarb
xor
dec
test
sahf
out
mov
mov
es
inc
xor
pop
shlb
lods
sub
and
ss
and
roll
es
cmp
fs
cmp
jae
jl
and
mov
loop
hlt
add
push
mov
xchg
in
dec
loope
inc
js
enter
mov
mov
mov
fmulp
insl
pop
jmp
sbb
add
xchg
mov
mov
mov
ss
lds
iret
push
cmc
and
arpl
shll
mov
pop
mov
test
sub
dec
xor
js
mov
cs
cmc
mov
push
int3
mov
insb
and
lahf
xor
dec
cli
fs
mov
shr
or
dec
outsb
jle
xor
mov
push
insl
out
loopne
or
shll
xor
and
sub
xor
mov
movsl
cmc
cmp
inc
mov
add
push
fsubl
xchg
test
cmp
sub
push
in
iret
cmp
push
sti
iret
xor
cltd
test
mov
xchg
sbbb
test
dec
pop
test
pop
cli
cltd
out
clc
cmpsb
shll
pop
inc
cmp
cmc
mov
xor
cli
ficoms
or
dec
lcall
and
out
mov
mov
jl
mov
add
out
loope
jb
mov
dec
data16
xor
pop
cmpsb
lods
outsb
push
pop
dec
pop
and
cmp
addr16
dec
mov
fadd
cs
int3
xchg
lret
pop
je
mov
inc
imul
jp
pop
jae
push
pop
xlat
xlat
out
xchg
bound
hlt
test
andb
push
hlt
sbb
xor
jmp
mov
loop
ret
inc
fsubrs
sti
icebp
ret
mov
test
in
pop
mov
int
pushf
ret
pop
cli
pop
test
ja
into
shll
cs
sub
insb
cltd
stos
mov
pop
lret
pop
adc
cmpsb
scas
inc
loope
add
xor
nop
mov
lock
clc
cs
movsl
daa
mov
into
xchg
xchg
jnp
push
aas
mov
pop
and
loope
sbb
cmp
jnp
lock
inc
mov
lock
std
daa
popa
cwtl
pop
pop
inc
sub
out
add
mov
mov
mov
sbb
jae
and
jl
dec
add
cmpsb
mov
repz
cmpsl
std
insl
icebp
aas
lods
mov
mov
xchg
push
push
insl
arpl
mov
fsubr
icebp
xor
repz
mov
xchg
add
rcrl
inc
lds
xlat
lcall
shlb
pop
dec
icebp
in
dec
das
imul
aas
or
mov
jne
xor
out
std
sub
xor
bound
in
mov
cmp
xchg
ljmp
aas
and
add
dec
mov
and
xor
xchg
addl
sub
push
repnz
xchg
shrl
jo
mov
jp
sar
das
lcall
cmp
pop
insl
hlt
push
push
fs
jge
mov
xchg
mov
pop
gs
lods
mov
sub
lds
xor
or
lahf
stc
mov
ficoms
stos
add
pop
inc
mov
sub
push
pop
and
sbb
and
addb
push
jne
out
xchg
or
cmpsb
stos
pop
das
jo
and
and
je
mov
loope
enter
sbb
dec
das
iret
test
sbb
jmp
xorb
push
hlt
arpl
push
xor
es
lret
aas
mov
xchg
mov
leave
dec
cmc
mov
xchg
mov
xchg
mov
xorb
dec
lahf
insb
das
push
sahf
sub
fmull
mov
mov
cwtl
es
aam
fwait
jo
cmp
jae
test
aas
mov
ret
pop
loope,pt
out
pop
xor
lods
xorl
outsb
mov
sub
and
jg
outsl
and
pop
xchg
cld
fsts
stos
push
add
mov
jns
push
mov
jae
fidivl
jnp
mov
ja
rcrl
sub
jl
lret
xor
pop
add
cmp
into
or
push
scas
cld
mov
push
test
mov
or
dec
jae
xor
jb
mov
add
pop
sub
lods
push
inc
out
cmp
xor
xor
fsub
das
test
and
clc
dec
les
mov
in
into
lret
xor
xor
loop
dec
xchg
push
stos
fstpl
mov
or
xchg
js
sub
mov
out
fadd
scas
sbb
inc
negl
jle
clc
aaa
dec
xchg
jns
pop
push
cmp
mov
ret
stc
out
cmp
test
or
jmp
xchg
popl
std
test
mov
insl
lret
test
mov
subb
sbb
out
out
lcall
cld
push
and
sahf
or
inc
push
mov
ret
or
movsb
mov
out
das
sbb
scas
mov
mov
js
fiaddl
lahf
in
push
hlt
jg
lock
push
mov
mov
fldcw
jecxz
call
and
mov
repnz
out
mov
sbb
xor
push
pop
fadds
mov
sub
popf
mov
shlb
imul
pop
sbb
ret
inc
int
mov
inc
cmp
add
cli
cwtl
mov
push
mov
out
mov
aam
ljmp
pop
pop
int3
pusha
pusha
add
stos
cmpsl
lds
setae
lcall
in
pop
hlt
mov
fisubrl
test
pop
jae
inc
test
add
hlt
push
adc
xor
mov
aas
inc
mov
and
arpl
or
sbb
jae
sbb
mov
push
in
jmp
add
inc
fstpt
lret
aaa
inc
sub
sbb
dec
jb
in
push
out
sti
inc
bound
pextrw
xor
mov
cmpl
push
push
in
adcl
xchg
fs
or
fidivrs
jg
push
adc
adc
sbbl
mov
fldcw
inc
js
mov
test
stos
and
and
in
push
das
mov
shlw
add
and
dec
push
popf
sub
jg
loope
jnp
imul
sbb
sti
inc
pop
add
mov
setno
pop
sbbl
push
add
xchg
xchg
inc
subb
dec
clc
mov
mov
gs
xchg
push
in
pop
out
jae
inc
sub
lods
jge
and
in
cld
out
les
out
in
push
jecxz
jbe
or
dec
xor
inc
mov
xchg
arpl
lods
out
data16
aas
xchg
pusha
sub
sub
insb
mov
les
push
dec
dec
or
pop
iret
std
into
daa
jnp
leave
mov
icebp
mov
pand
lcall
fadds
out
xchg
arpl
fisttpll
loopne
test
mov
jecxz
cltd
popa
ja
cmpl
lahf
sbb
pop
stos
inc
add
es
lahf
fisttps
adc
mov
xchg
ss
in
sub
add
mov
popa
dec
ret
pop
sub
insb
pop
sub
xor
loope
mov
iret
int
mov
inc
mov
add
adc
cmpsl
lods
orl
lock
mov
or
lcall
popf
pushl
shrl
pop
mov
insb
mov
inc
lods
pop
and
push
icebp
lahf
adc
mov
pop
iret
aas
jo
push
xlat
mov
out
lret
in
clc
in
inc
cmpsb
repnz
add
pop
xchg
sti
push
lods
out
and
push
xchg
dec
je
xchg
push
xchg
ljmp
das
xor
insl
mov
scas
iret
pop
push
sbb
adc
out
dec
fs
outsb
daa
add
fdivrs
mov
cld
ret
pop
cmp
daa
adc
lock
adc
cltd
xchg
dec
mov
inc
sbb
cmp
jg
shll
cmpsl
enter
jl
mov
es
test
iret
pop
inc
sarb
mov
test
push
xor
rolb
loopne
stc
xorb
mov
xchg
bnd
lcall
sub
jp
xchg
fdivs
loop
in
jnp
inc
insl
lods
jecxz
xchg
sbb
dec
xchg
arpl
in
mov
loope
push
outsl
pop
push
inc
sub
lds
and
jmp
shrl
mov
es
jns
inc
leave
sbb
jnp
mov
nop
sahf
jp
inc
subl
bound
push
sbb
bound
ljmp
mov
lret
and
dec
movsl
fsubp
mov
add
outsb
out
xor
or
ds
jne
inc
iret
jbe
test
jg
pushl
add
aam
xchg
in
push
dec
dec
nop
das
in
out
xor
jne
iret
mov
lods
jbe
cmpsb
xor
pop
mov
rorb
dec
cmp
add
outsl
ret
insb
cmc
sub
call
xchg
jns
enter
pusha
dec
repnz
repz
cmp
inc
push
loope
in
adc
xor
mov
flds
add
adcl
xchg
cmp
aad
xor
sbb
jmp
or
sbb
cmc
ja
push
lock
ljmp
xchg
push
cmp
mov
hlt
pusha
xchg
adc
mov
ljmp
rcr
mov
cmc
je
xchg
lret
and
or
mov
cmp
mov
nop
test
jmp
lea
shrl
lods
scas
pop
adc
pop
lret
fdivs
into
test
ljmp
add
mov
std
push
mov
xor
pop
pop
lock
xchg
popa
jne
scas
sub
cmp
aas
dec
sbb
inc
add
rclb
insl
lods
sub
test
sub
shl
sbb
adc
mov
push
mov
cmp
pop
shrb
rcl
xor
dec
push
repnz
pop
lret
inc
mov
sbb
jp
setge
add
icebp
int3
cmp
fwait
mov
clc
dec
xlat
mov
shlb
scas
sub
push
insl
mov
enter
xchg
fbstp
sbb
pop
mov
jo
pusha
inc
dec
jecxz
xor
jb
mov
and
cmp
fildll
daa
mov
or
jb
dec
leave
push
aaa
dec
sub
mov
mov
orl
or
data16
adc
das
out
add
in
cltd
leave
cmc
sarl
adc
mov
movsl
outsl
push
pop
xchg
aad
jmp
jl
sbb
sbb
and
push
add
mov
in
lods
xor
or
out
inc
fwait
xchg
scas
cli
lods
mov
sbb
jp
es
or
repz
std
mov
dec
scas
lock
mov
inc
cmp
stos
add
je
cmp
test
pusha
loop
xchg
push
cwtl
xchg
cli
push
sbb
jno
mov
push
and
xchg
add
xlat
repz
inc
dec
dec
inc
or
movsl
xchg
mov
fcoml
mov
mov
loopne
sti
jae
push
test
iret
shl
arpl
fldcw
movsl
mov
xor
fsubl
rclb
sbb
cmp
xrelease
jb
jb
sub
fsubl
rcrl
sub
jb
loope
xchg
cmpsb
adc
daa
int
xchg
lds
clc
xor
lret
mov
jns
hlt
xor
sub
and
pop
sub
sti
insb
dec
sub
std
jecxz
clc
cld
pop
subb
stc
sbb
add
test
jge
mov
jb
xchg
loop
push
ss
sub
sbb
into
loope
mov
rcr
cmc
arpl
mov
push
sub
test
inc
jmp
mov
xor
xchg
sbb
ja
jns
mov
lret
addr16
loop
dec
jl
push
subl
xor
pop
adc
clc
jae
int
mov
add
lds
test
arpl
jo
leave
pusha
loopne
dec
in
and
ret
loop
clc
sub
push
clc
dec
shll
jl
mov
orl
bound
push
jnp
xchg
inc
cmpsb
add
int3
inc
inc
sub
hlt
popa
xchg
mov
jl
pop
rolb
jmp
push
ds
jnp
repz
mov
add
seta
mov
dec
xor
cs
jns
add
pop
xor
xchg
xchg
mov
aaa
inc
xor
imulb
inc
mov
push
add
push
jmp
push
jg
insl
dec
add
call
lock
push
adc
push
rclb
dec
jmp
test
xor
sbb
flds
cli
mov
xchg
dec
aad
add
scas
xchg
pop
mov
xor
inc
mov
or
sub
add
and
inc
sbb
mov
mov
jns
dec
movsl
mov
shr
test
test
shr
cli
add
shl
aaa
call
mov
hlt
push
cmpsl
punpcklbw
sbb
and
leave
fisttpl
inc
add
test
test
sub
mov
pop
xchg
popa
cmp
insb
testb
enter
ss
inc
rol
pcmpgtb
stos
insl
fcmovu
repnz
stos
js
neg
enter
or
movsb
jp
pusha
mov
inc
mov
dec
or
inc
lahf
mov
imul
movsb
stos
cmp
inc
loop
xchg
pushf
les
lcall
pop
int3
cmp
xor
xor
jmp
pop
scas
out
pop
pushf
into
or
mov
cmp
mov
ja
shll
cmpsl
mov
sub
pop
out
test
repnz
lock
or
add
adc
xlat
push
or
mov
sub
push
mov
aad
stos
lcall
and
rorl
scas
mov
jl
jecxz
jg
movsb
sbb
daa
sub
leave
mov
fcomip
scas
sub
xchg
inc
aaa
call
adc
sub
lods
jo
imul
cltd
ds
enter
iret
pop
lret
xchg
mov
popf
loopne
cmpl
shlb
xchg
mov
fiaddl
pop
xor
mov
sbb
push
mov
aam
and
sbb
or
lods
pop
jne
lcall
push
idivl
push
fcoml
outsl
cmp
lods
sub
jb
mov
jne
test
jo
cmp
int3
leave
repz
mov
popf
mov
shll
add
mov
jecxz
pusha
mov
ret
pop
scas
shrb
loopne
sub
dec
xchg
and
push
dec
inc
xorb
pop
xor
push
mov
mov
cltd
or
mov
jle
dec
mov
movsl
int3
adc
add
stos
dec
sub
jecxz
xlat
and
iret
push
dec
mov
pushf
popf
repnz
sub
xor
lret
jl
aaa
fwait
mov
inc
or
jecxz
loop
nop
pop
or
and
outsb
adc
jnp
cmc
movl
stos
cmp
lret
ljmp
sbb
je
jge
cmp
ret
jno
mov
adc
jecxz
stos
jae
mov
imul
push
loope
fs
sub
push
jge
adc
dec
outsl
push
test
jnp
xor
xchg
ficoml
bound
or
pop
dec
cli
scas
and
jl
xchg
add
sbbb
push
dec
push
xor
mov
cltd
iret
xorb
xor
xor
xchg
xchg
into
push
mov
or
lret
inc
adc
fsubrp
cmp
inc
inc
add
lret
mov
movsb
jnp
mov
divb
gs
lret
inc
xchg
stos
out
push
test
pop
cmpsl
nop
std
arpl
mov
clc
jle
cli
dec
cli
mov
sub
pop
pop
fsubr
add
int3
jp
jno
lret
inc
add
dec
mov
or
or
fs
rolb
mov
lret
or
lcall
cmpsl
hlt
xchg
mov
test
dec
pushf
push
in
notl
push
inc
add
out
mov
je
jae
mov
inc
cmc
ret
fadd
ffreep
jmp
xchg
lds
out
ret
sub
ret
imul
in
sub
andb
mov
jle
dec
ret
call
push
iret
or
jle
pop
orl
push
stos
icebp
lods
cmp
aam
pop
add
mov
sub
pop
jnp
add
xchg
inc
jle
sub
rol
je
jne
lcall
sbb
fwait
in
mov
jp
iret
fldcw
into
jbe
es
adc
xchg
mov
shlb
pushw
sbb
jb
mov
sub
mov
and
add
cmp
sbbb
xchg
aam
mov
add
pop
cli
fisttpll
mov
into
pop
mov
stc
loope
add
jmp
loop
adc
scas
push
mov
jmp
aam
cwtl
ret
and
xlat
push
decl
mov
shl
pop
sbb
out
movsb
inc
mov
cmp
or
imul
dec
dec
xchg
xor
cmp
sahf
sbb
jp
sub
out
adc
lods
jae
or
aaa
xor
jmp
mov
das
data16
mov
or
or
xor
ss
cmpps
push
icebp
je
jb
jae
lret
mov
push
jb
pop
out
cmpsl
fs
mov
dec
and
scas
push
loop
jl
dec
adc
cmp
pop
fs
sbb
jl
and
jl
cli
stc
repnz
sbb
sahf
xor
mov
cltd
and
fimull
or
lds
aas
mov
cli
cmpsb
and
push
sbb
inc
pushf
fistl
jmp
dec
adc
test
and
std
daa
jo
and
into
arpl
out
ret
aas
int
in
insl
xchg
xchg
mov
clc
sbb
dec
imul
mov
jnp
pop
test
mov
inc
cmp
loope
sub
inc
pop
js
loope
cmp
and
popf
cmc
and
sub
loop
nop
push
pushf
adc
cmp
push
sub
sbb
pushf
imul
xchg
inc
sbb
ret
shl
fwait
pop
lahf
xchg
adc
in
pushf
loop
mov
inc
adc
sbb
cmpb
mov
lret
jmp
mov
push
ret
imul
mov
sub
mov
push
jnp,pn
cmp
adc
in
in
pop
and
xchg
pop
jbe
inc
add
mov
push
dec
jns
pop
mov
or
or
shr
into
fmulp
or
jb
and
pushl
mov
stos
mov
push
xor
gs
incb
mov
popf
jo
xchg
mov
sti
ds
idiv
xor
mov
or
xchg
jg
lret
pop
loopne
jl
cmp
add
out
push
fdivrs
and
cltd
sbb
mov
das
add
push
push
loop
lods
hlt
rcrb
rol
test
stc
mov
or
repz
pop
mov
or
pop
jae
pushf
xor
test
ret
and
inc
push
std
sub
push
add
movsb
popf
aaa
xorl
lock
or
inc
rorl
jecxz
scas
movsl
xchg
and
bound
mov
inc
mov
and
lret
push
mov
test
cmpb
fs
sbb
mov
push
call
cltd
or
jne
add
out
repnz
adc
xchg
pop
fs
push
mov
push
mov
inc
push
iret
loop
xchg
or
push
lock
ljmp
in
aad
testb
loope
jecxz
outsb
mov
addr16
mov
or
pop
add
push
les
popf
push
aad
addb
insb
pop
outsl
xor
mov
icebp
subl
lret
push
pop
mov
add
push
leave
stos
je
jae
lea
mov
es
std
inc
lret
jno
pop
sbb
repnz
aad
scas
xchg
jmp
sbb
push
sbb
scas
test
xlat
data16
mov
mov
xchg
outsl
xor
mov
dec
sbb
xor
fldt
xchg
aad
mov
fs
cltd
popl
lods
xchg
adc
je
test
mov
fnsave
sub
dec
arpl
fisubrs
fcomps
loop
dec
xor
mov
inc
imul
cmp
cli
xchg
outsl
xchg
mov
adc
or
push
imul
inc
sub
mov
jmp
loop
lcall
mov
jecxz
fcmovnbe
clc
push
dec
mov
push
xorb
ja
mov
or
ljmp
xlat
rclb
test
out
mov
xchg
mov
out
adc
mov
jge
out
mov
inc
cwtl
ret
dec
dec
sti
in
roll
jle
icebp
sahf
int3
xor
out
mov
and
shrl
ja
enter
sbb
je
adcl
xchg
leave
mov
xor
fimull
inc
test
push
xchg
cmpsl
jl
cld
cld
dec
repnz
xor
jmp
xor
bnd
jns
dec
fadd
enter
je
mov
inc
call
mov
pop
int
ficoml
aaa
or
push
gs
mov
xor
shlb
pop
aaa
dec
adcl
or
fcompl
pusha
pop
shl
bound
mov
cltd
outsb
into
imul
xchg
jl
popf
out
push
clc
sar
cli
xchg
xor
sub
adc
push
stos
pop
dec
lea
bound
ret
pop
xchg
test
repz
stc
sub
scas
insb
ss
or
cmpsl
test
pusha
mov
sahf
sub
add
bound
push
add
inc
loop
add
adc
ficoml
shlb
xchg
dec
jecxz
sbb
clc
out
cmpsb
testb
mov
cmp
inc
add
jnp
push
mov
jo,pt
sub
mov
clc
iret
mov
ljmp
xchg
ds
cwtl
xor
xchg
xchg
push
mov
pop
aas
sub
xlat
iret
movb
in
mov
cmp
ljmp
jle
sti
ja
mov
aam
ljmp
and
inc
ja
xchg
xchg
mov
es
xchg
cwtl
add
inc
gs
jle
sub
lods
mov
add
dec
dec
cmp
fiadds
out
ljmp
jmp
adc
add
sub
popa
rorl
into
addr16
in
cmp
loope
repz
call
mov
divb
lret
fs
subl
cmp
jb
or
xchg
pop
mov
pop
xor
xchg
mov
mov
imul
inc
cwtl
jmp
jno
ret
inc
addb
ljmp
jmp
pop
paddb
xchg
int3
stc
fwait
cmp
gs
aad
xchg
insl
cmp
xlat
rcrl
jne
stc
gs
fimull
xlat
mov
fwait
call
imul
inc
mov
rcrl
scas
push
sarl
adc
hlt
mov
sahf
push
xor
sub
add
pop
lods
and
hlt
xor
xorl
pop
sub
in
jns
into
das
sahf
fsubl
push
dec
sbb
popa
inc
adc
push
int
aad
xchg
mov
sti
fdivrl
sbb
hlt
push
mov
lods
lds
xor
aad
les
sbb
int3
insl
or
leave
jns
sub
rclb
adc
hlt
add
fs
cld
rclb
jae
out
push
fst
pop
icebp
sar
dec
push
pop
pop
push
inc
sub
pop
inc
cmpsb
ja
insl
test
out
ret
sub
lods
mov
leave
sahf
insl
mov
scas
sbb
ljmp
sub
mov
sub
add
rcl
aam
test
aaa
int
fnsave
cli
ljmp
cli
mov
mov
xlat
movsb
jb
jo
enter
jns
dec
push
or
jp
mov
out
movsl
data16
lods
hlt
inc
mov
jns
dec
and
jecxz
data16
xchg
unpcklps
inc
das
aam
int
int
cmpsl
mov
or
movsb
xchg
adc
aam
mov
rcrl
add
add
and
cli
rcll
daa
in
mov
enter
push
leave
adc
scas
inc
mov
sub
mov
push
testl
sbb
mov
ret
arpl
lea
outsl
cld
mov
or
lock
cld
push
popl
lret
pop
mov
ficomps
xchg
dec
xchg
xchg
mov
mov
sbb
ds
test
and
or
adc
std
ja
inc
dec
cmp
sub
popf
cli
sbb
push
and
pop
jge
pop
jle
test
adc
dec
add
or
xor
dec
sbb
neg
ret
mov
sbb
xor
xor
lret
and
mov
add
mov
ds
xor
sbb
cmp
xor
pop
cs
movsb
adc
in
and
mov
addb
cli
ss
cmp
test
push
cmp
cmc
jge
add
add
jae
cmpsl
cwtl
inc
imul
imul
dec
dec
movsl
and
push
and
push
out
xchg
jae
rcrl
push
rolb
mov
sub
nop
xchg
jle
inc
jmp
mov
lds
out
mov
xor
sub
push
push
mov
addl
add
mov
addl
push
inc
imul
rclb
jp
mov
xchg
cmp
sti
pop
mov
xor
stos
ret
cmp
pop
icebp
pushf
mov
xchg
popf
pop
dec
ficomps
jmp
punpckhwd
arpl
movsb
mov
jb
or
sbb
add
and
icebp
ret
fwait
out
aad
hlt
lea
sub
fdivl
dec
int3
sbb
in
mov
sub
ds
mov
pop
sbb
daa
movsl
pop
cs
cmp
in
cwtl
pop
sbb
shl
mov
mov
mov
or
jbe
inc
sbb
mov
movsb
iret
stos
je
lret
jae
test
add
cmp
cmp
xchg
not
jne
mov
push
sbb
insl
dec
push
add
lret
sub
xchg
insb
jb
xchg
jno
int
stos
aaa
shrl
adc
mov
aam
sbb
push
stos
enter
aas
in
pop
sbb
jl
or
sub
in
repnz
orl
sub
jns
xchg
jb
dec
scas
cld
mov
ds
add
dec
sub
call
lock
fyl2x
movsb
jno
xor
cld
insl
sub
sub
je
sahf
pop
pop
xchg
es
inc
int
lahf
adc
ja
dec
cltd
xchg
xchg
popa
jmp
xor
daa
sahf
je
inc
fisubs
and
fistl
ds
aam
xor
mov
jg
sbb
jbe
sbb
fcompl
sbb
in
jecxz
int3
mov
movsb
jp
mov
adc
mov
adc
cmp
int3
push
cli
je
pop
jmp
outsb
jmp
ds
push
cmpsl
outsb
sub
cmpsl
inc
ret
cmp
daa
sbb
xor
movsl
lods
pusha
pop
pop
cmp
sub
sub
iret
cmc
outsl
and
lcall
in
push
push
dec
jecxz
ljmp
dec
lret
dec
lds
lea
ret
incb
pop
xor
outsl
add
aad
test
adc
adc
jbe
sub
and
lret
pop
jns
inc
xchg
aad
stos
inc
cli
lods
sub
sbbb
or
popa
cmc
sub
sub
xchg
icebp
mov
ficompl
xchg
cmp
mov
jmp
out
inc
lret
adc
shl
dec
inc
mov
stos
or
xor
push
aad
pop
test
fidivs
pop
test
xor
in
inc
repz
shlb
ret
pop
dec
dec
mov
mov
mov
dec
and
and
cmp
ljmp
push
andb
fs
cmpsb
in
jns
data16
cmpsb
cli
jo
fdivl
into
adc
out
fistps
gs
into
xchg
lret
loopne
outsl
in
dec
cmpb
push
sbb
aaa
in
jnp
mov
cltd
lret
out
mov
dec
addb
js
or
and
es
xor
movsb
arpl
jge
icebp
mov
mov
cmpsl
mov
sub
jae
push
cltd
push
sub
add
add
add
add
xor
sti
push
testb
xchg
sbb
cmp
xor
clc
xchg
mov
test
movsl
divb
sub
ds
out
xor
int3
mov
push
mov
mov
mov
adc
adc
mov
lcall
lcall
arpl
or
lcall
adc
lret
and
pop
dec
xor
repnz
and
sbb
imul
loopne
jns
outsl
inc
add
outsb
pop
jns
pop
scas
cltd
lds
mov
int3
test
add
push
mov
shrb
jmp
ret
cltd
fidivs
push
std
aam
out
loopne
pop
mov
shl
loopne
cmp
xchg
inc
out
sub
stos
adc
mov
mov
stos
pop
lahf
aas
fnsave
inc
pop
aad
or
mov
ja
pop
jp
test
popa
fildll
or
jl
mov
int3
das
popa
popa
iret
jns
into
cmp
or
xor
or
and
adc
xor
mov
cmp
out
mov
push
sahf
or
dec
jbe
mov
fistpl
mov
sti
push
repz
or
sbb
push
insl
aaa
incl
filds
inc
sbb
stos
cmp
push
sub
and
sub
xor
mov
ds
mov
push
mov
mov
push
test
add
pop
mull
mov
repz
mov
jle
inc
jmp
jle
lock
leave
jae
pop
jge
cltd
and
addr16
xchg
fldt
std
xchg
mov
and
ret
adc
out
inc
sub
fnsave
lods
mov
pop
dec
mov
sub
loopne
in
nop
in
cmpb
or
leave
inc
xchg
jle
lret
int3
leave
or
jg
xchg
xlat
sbb
out
jne
mov
jecxz
push
xor
mov
fiaddl
aas
clc
or
push
inc
aam
ret
or
fidivrs
add
fwait
sbb
aaa
push
outsl
mov
testl
imul
mov
sub
jnp
sub
xchg
cwtl
pop
mov
jle
lds
arpl
loope
pop
push
gs
imul
test
mov
push
mov
or
dec
sbb
stc
xor
stos
push
out
add
pushf
ficomps
outsl
inc
ror
sub
and
addr16
sub
in
in
jb
or
mov
stos
lret
jg
pop
adc
addr16
push
mov
out
cwtl
pushl
icebp
xor
push
lret
lahf
xlat
fwait
cmp
cmp
insb
hlt
bound
pop
ds
ljmp
jo
das
sbb
push
negl
fbstp
in
rorb
test
jp
rorb
loop
xchg
jge
inc
jns
pop
outsb
sbb
jmp
dec
or
sbb
inc
push
push
dec
mov
sbb
daa
into
fcmovnbe
lret
lea
mov
mov
add
mov
fnstcw
mov
xor
fldt
pop
loope
hlt
fistpll
mov
or
dec
fimuls
test
or
fs
subb
cmp
insb
cmp
cmp
pop
in
das
mov
popf
notl
inc
sbb
and
jo
into
pop
cld
testb
popa
push
inc
sbb
add
jo
cmp
outsb
pop
pop
inc
stos
xchg
imul
scas
insb
mov
lcall
push
cmp
jecxz
jno
dec
gs
xchg
adc
lea
inc
ja
shrb
das
mov
jle
es
push
lock
scas
mov
mov
sbb
lock
loop
or
or
enter
out
fldenv
cmp
xor
int3
mov
loope
addr16
sbb
push
jle
dec
imul
mov
ret
ss
mov
add
stos
push
cmp
mov
mov
imul
sahf
popa
loopne
movsb
sbb
jnp
mov
push
hlt
outsb
mov
jb
scas
adc
pop
or
mov
shll
pop
pop
xor
shl
ljmp
adc
fld
mov
pusha
dec
out
sarl
sub
in
cmp
adc
mov
xchg
mov
fdivl
sbb
xor
pop
add
xor
repz
adc
aaa
sarb
or
cmp
sbb
div
push
cmpsl
mov
mov
push
jg
lcall
out
daa
in
inc
addr16
sbb
and
int
ds
and
adc
loope
cmp
jbe
sub
inc
ret
stc
or
stos
sub
je
outsb
jge
jle
xchg
cmpsb
add
gs
mov
or
mov
push
mov
jg
jno
xchg
and
ja
and
imul
push
lahf
aaa
in
lock
xchg
test
adc
push
push
stos
ficoms
fstl
cwtl
mov
lock
notl
aas
stc
nop
iret
aam
pusha
push
sub
mov
xor
sub
aaa
mov
int
stc
xchg
lds
rolb
jmp
cmp
sub
mov
add
xchg
inc
lock
jnp
cmp
inc
or
mov
jns
in
pushf
repz
mov
mov
aam
call
sub
dec
out
mov
shrl
aas
pop
or
lock
test
sbb
test
mov
push
dec
arpl
rcrb
rcr
enter
and
fdiv
push
jmp
fdivs
xor
sub
fwait
leave
push
fs
ja
inc
pop
and
je
out
jne
lahf
aad
sub
int
popf
movsb
cmp
pop
sbb
fiadds
popf
and
pop
test
int3
out
and
add
xchg
fsubl
xor
in
mov
jbe
lods
inc
inc
cmp
jg
iret
fcmovne
jecxz
xorb
loop
cmp
in
fstpl
push
pop
loop
mov
dec
sar
repnz
sub
push
daa
cmp
test
gs
cltd
inc
pop
xchg
scas
lods
imul
push
inc
lret
sarb
aaa
cmpsl
push
add
test
push
and
stc
xchg
mov
es
sub
jno
pop
mov
cmp
dec
nop
mov
xor
test
push
call
xor
xchg
pop
pop
fistpl
ja
dec
push
cld
jecxz
inc
pusha
out
leave
sahf
inc
xchg
shrb
add
adc
push
jge
clc
or
repnz
mov
cmp
or
pop
insb
jp
lahf
pop
xor
jns
or
bound
test
dec
enter
int
inc
sub
and
stos
dec
mov
fisubl
sbb
lock
dec
sbb
mov
push
sqrtps
sbb
aaa
lret
out
je
clc
push
mov
pusha
adc
psadbw
or
test
and
andb
ljmp
loope
cltd
pop
mov
xchg
in
xor
adc
not
movsl
sbb
addr16
and
sti
in
lret
push
cltd
or
les
mov
test
mov
mov
punpckhwd
mov
cmp
mov
roll
lcall
ljmp
int3
notb
mov
xchg
dec
data16
cmpsl
subl
xchg
aad
xchg
fnsave
xchg
or
inc
dec
in
sti
pop
push
lock
int3
cmpsb
mov
inc
shl
imul
js
xchg
pop
insb
xor
scas
sub
or
inc
call
mov
aam
cmp
mov
xor
gs
dec
inc
mov
fnstcw
cwtl
test
dec
ljmp
jno
arpl
xor
push
jne
jp
pusha
mov
cli
sahf
mov
imul
xchg
lret
stos
adc
in
jnp
mov
push
std
adc
cltd
cmp
mov
jo
sahf
mov
xor
test
std
repnz
sbb
xchg
jns
push
lods
mov
imulb
add
mov
pushf
jge
xchg
dec
mov
repnz
pop
and
mov
xor
testb
fs
mov
push
hlt
fstpt
cmp
out
lret
lds
push
sub
sub
pop
add
into
sub
or
push
push
out
dec
sub
loope
dec
xor
iret
push
testl
data16
lea
mov
mov
sbb
push
mov
xchg
dec
dec
mov
mov
sub
xchg
test
and
push
add
push
jbe
dec
dec
or
cmp
xor
lods
xchg
fistpll
pop
xchg
sbb
stc
repnz
test
mov
out
pop
mov
xor
add
lock
dec
lods
gs
pusha
xlat
outsb
pop
dec
insb
and
or
fdiv
jmp
adc
cmp
mov
push
cmpsl
or
stos
xchg
rcll
jmp
pop
and
mov
repz
jbe
mov
mov
aam
pop
xor
nop
jae
lock
rcr
sub
or
xorl
xchg
push
jno
mov
lods
mov
in
loope
mov
outsb
xor
lahf
lret
mov
dec
into
xor
jb
cmp
cmp
je
jae
jp
outsb
sbb
jle
scas
xor
sahf
add
dec
outsl
clc
sbb
jb
dec
xor
pop
icebp
icebp
lcall
pop
fldt
ja
lock
mov
jp
test
pop
jnp
ja
cwtl
stos
sti
xor
in
out
cmpsl
or
in
or
stos
outsb
push
idivb
mov
dec
lods
push
push
mov
sbb
push
pop
shrb
sti
or
sub
xlat
add
xor
scas
mov
test
loopne
inc
push
or
stos
enter
mov
pop
jae
in
cmp
mov
jle
mov
in
inc
add
push
enter
add
fldt
loope
jmp
arpl
jg
inc
xor
lods
mov
nop
push
movsb
pop
insl
push
cmp
sub
outsb
mov
mov
repz
fdivl
mov
adc
mov
sbb
ljmp
cmp
arpl
jge
add
rolb
insb
mov
push
nop
pusha
cmp
cmpsb
pop
mov
cltd
iret
adc
add
inc
lcall
adc
sub
ret
les
movsb
mov
cmp
in
lret
jg
xlat
lock
xchg
bound
mov
mov
xlat
addb
jp
das
xor
loope
pop
add
and
xchg
in
ja
mov
add
cmpsb
scas
mov
test
sbb
push
jne
sub
xor
mov
insl
cld
gs
nop
mov
loop
add
mov
mov
pusha
movlps
push
jne
fcmovu
xor
jmp
data16
push
sub
xchg
pop
pop
js
cmp
inc
stos
adc
cmpsb
xchg
push
icebp
push
mov
pop
add
ror
dec
xorl
inc
call
cmp
push
out
xchg
sbb
xor
pop
imul
testb
mov
les
push
mov
xchg
dec
icebp
or
cltd
cmp
xchg
ss
mov
jbe
mov
add
arpl
and
sahf
pop
subl
test
inc
lcall
push
lock
push
test
sub
dec
xchg
and
hlt
popa
mov
xchg
sbb
lock
les
dec
pusha
lds
adc
outsb
pop
test
mov
cli
push
push
fmuls
xor
mov
push
fucomi
pop
jmp
or
mov
jo
lcall
outsb
addb
fcomps
push
loopne
cli
push
adc
lcall
jmp
mov
scas
sub
xchg
sti
rcl
or
sbb
mov
into
daa
lods
add
adc
push
and
and
cmp
sbb
jge
xchg
mov
xor
nop
ret
inc
iret
sub
push
adc
repnz
pop
loope
inc
pop
jnp
ret
rclb
arpl
xor
dec
cmpsl
icebp
sub
or
aad
iret
lods
jge
dec
xchg
xchg
incl
aaa
gs
lcall
dec
mov
xorl
jo
adc
scas
and
add
sbb
push
xor
dec
adc
paddb
add
cmpsl
nop
fwait
stos
sarb
imul
inc
xor
repnz
cli
add
aas
push
sbb
mov
and
loopne
adc
mov
add
mov
loop
rorl
jge
in
pusha
push
inc
popf
in
movsb
pop
jnp
lret
pop
sahf
out
add
lcall
mov
pop
cltd
js
sar
adc
mov
ficoms
inc
pushf
stos
les
pop
loopne
dec
mov
loop
add
sbb
xor
addb
jno
out
pop
hlt
jae
gs
je
into
fmul
movsb
shll
idivl
aaa
test
call
jbe
dec
pop
repz
insl
sarb
add
bnd
mov
sbbl
pop
test
jno
xor
jle
shlb
shlb
in
mov
daa
cmpl
inc
and
xchg
scas
jo
xor
aam
mov
sub
jle
sub
add
push
xchg
dec
inc
movsl
xor
addr16
cmpsb
adc
dec
xchg
int
nop
test
xchg
out
lcall
out
pop
cli
sbb
pop
fs
adc
mov
push
sbb
inc
cld
pop
int3
daa
cmp
jmp
insl
push
loop
and
xchg
ret
lret
rolb
lods
dec
inc
push
int3
adcl
call
add
fs
sar
neg
pop
push
bound
dec
out
out
and
ret
pushf
cmp
dec
stos
inc
adc
mov
cmp
jnp
out
aam
pusha
dec
ja
fsubrs
jecxz
popa
dec
fimuls
test
stos
js
imul
rorb
mov
push
dec
sbb
orb
xchg
mov
fsubrl
incl
pop
mov
js
fdivrs
and
gs
out
cmp
notb
adc
jbe
xchg
push
imul
dec
xchg
inc
icebp
movsl
sub
sbb
int
enter
repz
mov
lock
dec
cmp
lret
mov
mov
les
and
dec
xor
cs
or
nop
add
popa
sbb
inc
pop
out
fstpt
sbb
es
pusha
pop
dec
dec
outsb
push
inc
jmp
movsb
iret
pop
mov
adc
ss
jl
and
gs
cmp
pop
xchg
popf
idivb
xor
mov
iret
pop
lds
imul
divl
inc
iret
xor
nop
adc
jmp
ret
insl
push
das
sub
js
stos
data16
fwait
mov
imul
nop
pop
adc
stc
insb
cmp
xlat
pop
loopne
sub
cltd
ljmp
imul
cmpsb
das
xchg
iret
sahf
enter
shl
dec
mov
cmp
test
je
pop
sbb
xchg
imul
xor
dec
cmp
les
imul
fstpt
fneni(8087
repnz
lds
jno
in
add
ds
and
das
fs
btr
lret
scas
sub
sbb
lcall
scas
data16
aaa
push
dec
cld
ds
loope
xor
lcall
mov
xor
in
jg
sbb
in
jne
sahf
push
pop
idivl
sub
addr16
shr
jmp
mov
pop
out
pusha
inc
lret
cmp
or
rcrl
clc
adc
push
rorl
mov
jg
aam
stc
loop
aam
fidivrl
push
xchg
lods
outsl
test
mov
sub
push
aas
pop
mov
add
rorb
mov
dec
stos
sbb
sub
push
lds
lahf
popf
cmp
pop
add
jne
lret
add
xor
push
mov
cmp
fildll
fimull
and
aad
aam
int
insb
mov
inc
lret
push
sub
xchg
fmuls
push
dec
je
nop
push
jmp
inc
jne
lea
jae
cmpsl
popf
int3
sbb
pop
mov
pushf
mov
pusha
test
out
xchg
test
or
sbb
push
out
bound
jg
rclb
lds
not
sub
pop
cs
cld
xchg
xchg
cmp
sti
jbe
or
add
hlt
fdivl
cmp
xor
pop
mov
sbb
aas
insl
jecxz
lods
sub
pop
lret
push
mov
in
adc
mull
jo
mov
sbb
inc
idivb
std
outsl
fnsave
js
pop
xor
sbb
cltd
mov
outsl
add
scas
mov
pop
xchg
xchg
cwtl
in
out
lret
fimuls
push
subl
leave
jns
jmp
call
sbb
movsl
and
jmp
lcall
sub
lret
sub
xor
or
jb
sbb
aad
jle
and
fists
pop
mov
out
aas
xor
std
imul
in
inc
scas
shll
jbe
add
clc
scas
ret
xor
push
out
mov
add
xlat
aaa
movsb
jmp
mov
cmp
xlat
push
dec
and
div
xor
test
mov
xor
jne
xlat
mov
or
fcomps
cltd
mov
cltd
adc
fistpl
mov
sub
ret
sub
add
mov
add
push
or
sbb
adc
outsb
bound
jb
jg
jg
or
mov
xchg
cmp
pop
repnz
iret
ret
mov
dec
or
les
nop
sbb
xor
out
lds
stos
xor
cmc
dec
adc
dec
push
jne
xchg
lods
xchg
xchg
mov
daa
or
lods
inc
sub
inc
or
addb
sbb
sub
xchg
xor
lods
cmp
std
into
push
pop
or
push
mov
adc
cmp
sub
out
inc
inc
cmpl
xor
add
or
inc
inc
sub
push
pushf
push
pusha
aas
xchg
in
lret
popf
push
popf
lea
mov
xor
clc
fsts
jno
int
mov
mov
mov
in
daa
push
testb
ss
dec
xchg
in
jl
mov
cld
int3
aaa
test
xor
in
cmp
test
stos
inc
movsb
jle
dec
jle
in
jne
jns
dec
addr16
mov
xchg
or
pop
sbb
fimull
popf
xchg
nop
sahf
cmpsb
test
nop
and
iret
or
lods
adc
bound
fwait
inc
push
lcall
adc
rcll
scas
stos
pop
push
mov
mov
dec
sub
cmpsb
add
pop
cmp
xchg
dec
xor
pop
or
add
or
mov
mov
gs
xor
bound
push
dec
xor
ja
jns
sbb
jnp
fdivrl
xor
jo
add
or
ficoml
and
sub
pop
adc
data16
aad
sub
lods
adc
insb
mov
imul
mov
mov
adc
rorl
lock
clc
adc
push
cltd
dec
mov
adc
push
stos
mov
sub
sbb
iret
pop
lea
xchg
adc
es
nop
loop
mov
xchg
add
loop,pn
test
pop
cmc
mov
in
xchg
jmp
sbb
mov
jle
js
movb
adc
sub
stc
sbb
xchg
sti
movb
mov
mov
test
push
and
ret
add
push
sbb
out
ret
test
mov
les
shr
mov
inc
xor
sub
test
nop
fdivrs
mov
xchg
mov
dec
sbb
inc
lahf
sbb
jge
push
or
in
xchg
pop
icebp
and
push
aam
mov
pop
jg
ss
mov
sub
jo
dec
cmp
leave
and
inc
push
movsb
dec
sbb
loope
sub
nop
jne
mov
dec
and
test
cltd
lock
and
mov
negb
in
push
add
mov
imul
pop
cmp
mov
inc
fldcw
sbb
xchg
mov
mov
movsb
sub
out
cld
mov
lret
xor
push
pusha
cmp
mov
xchg
in
stos
add
push
lahf
sbb
mov
mov
adc
jnp
sahf
mov
sbb
icebp
out
xlat
hlt
outsl
ds
cs
dec
test
dec
nop
mov
fldenv
mov
dec
out
ljmp
mov
aam
add
pop
adc
in
push
pop
and
leave
add
xor
repnz
in
fdivl
mov
pop
in
jle
mov
iret
pop
repz
mov
mov
mov
data16
addr16
push
repnz
in
mov
or
arpl
imul
push
xor
leave
mov
out
pop
sbb
and
insl
pop
inc
gs
ds
mov
sbb
jnp
cmc
mov
es
or
push
cmp
push
jns
cs
arpl
mov
push
mov
push
jb
js
out
pop
orl
in
loopne
xchg
hlt
ja
mov
dec
sahf
pop
es
sbb
push
sub
pop
fst
repnz
stc
cmpsb
mov
mov
inc
cmpsl
xchg
cwtl
jmp
ds
shll
out
lcall
iret
popf
stos
and
inc
sar
aaa
bound
nop
fmuls
leave
mov
jnp
mov
out
pop
nop
das
call
dec
xor
mov
mov
pop
and
mov
subl
imul
sbb
fnstsw
sti
xor
sub
xor
jmp
sbbl
call
add
scas
xlat
cld
shrb
dec
push
add
xchg
cmc
xchg
or
mov
daa
sbb
lcall
mov
cmp
cmpb
sbb
pop
and
mov
cmpsl
fs
test
add
stos
out
cs
test
cs
insl
aad
sahf
or
jmp
mov
outsb
jg
repnz
inc
pop
inc
mov
retw
and
pop
pushf
xchg
das
or
andb
int3
mov
roll
jmp
mov
add
adc
sub
mov
popa
cmc
shll
outsl
xor
pop
in
adc
xchg
scas
sbb
lahf
jp
int
addr16
xchg
xor
sbb
pop
mov
push
inc
mov
fldenv
sub
mov
insb
push
mov
call
sti
scas
loope
mov
sti
cmp
and
call
aas
xor
cmp
fs
cmp
in
movsl
scas
xlat
ror
bswap
repnz
and
xchg
shl
jl
cld
pop
aam
lock
subb
cmovg
cmp
sub
jns
mov
add
sbb
jmp
mov
dec
into
inc
inc
push
jmp
repnz
dec
sbb
es
and
in
mov
dec
outsl
push
clc
dec
lods
pusha
push
cmp
stc
and
mov
mov
adc
stos
pop
dec
push
imul
sbb
popf
jle
jle
aaa
pop
add
push
push
sbb
lahf
adc
je
mov
inc
aaa
scas
xor
scas
pop
and
jns
xchg
dec
or
pop
sbb
mov
cmp
cwtl
mov
push
loop
fcomip
ret
insb
adc
dec
test
outsl
or
iret
enter
push
mov
pop
push
lcall
cmc
mov
push
pop
xchg
js
xchg
jae
repnz
test
inc
stos
cmp
bt
xchg
pop
cmp
inc
cmp
clc
cs
setne
mov
js
das
xchg
sarl
enter
shrl
clc
xchg
daa
or
mov
in
imul
push
sbb
cli
test
lods
cmpsl
jmp
scas
or
lret
pop
mov
dec
cld
vphaddbw
test
sbb
jbe
fimuls
mov
add
xchg
xor
iret
mov
aad
mov
jle
push
data16
int
jle
xchg
xchg
in
ss
push
sbb
bound
xchg
dec
arpl
roll
fbld
shl
repz
push
sar
test
add
mov
add
xchg
push
cmp
hlt
cmc
shrl
setne
cmpsl
in
outsb
movsl
mov
mov
imull
or
inc
mov
push
int3
mov
aas
or
shr
fsub
std
lret
cltd
xorb
pop
mov
sub
test
xlat
or
dec
movsl
pop
stos
clc
enter
mov
loop
mov
jg
xor
xchg
popa
fsubrl
inc
mov
mov
or
pushf
rcrl
xchg
rorb
xorl
shl
push
adc
mov
mov
mov
scas
dec
cmc
ss
mov
out
out
daa
and
cmpsb
in
lods
addb
inc
les
lahf
cmpsb
fidivrs
int
pop
or
pop
push
xlat
out
mov
add
fmuls
sbb
sub
jmp
test
inc
je
roll
sub
divb
lock
xchg
jo
imul
cltd
imul
xchg
imul
dec
in
imul
adcl
adc
popf
movsl
sub
adc
pop
icebp
leave
mov
adc
xchg
adc
mov
inc
cmp
in
shlb
jnp
gs
cmp
stos
in
mov
popa
xor
mov
insb
imul
insb
mov
inc
adc
inc
fdivp
mov
jae
jle
mov
xlat
mulb
pop
lahf
ret
lret
xor
pop
aas
in
add
jecxz
repnz
jmp
sub
fsubl
push
push
lds
clc
aas
dec
or
iret
fs
dec
add
lret
mov
xchg
aad
and
sbb
sub
repnz
scas
mov
sbb
mov
mov
push
mov
push
pop
stc
mov
sbb
mov
or
and
pop
adcb
pop
xchg
or
cli
add
inc
sbb
insb
call
dec
cmpsb
in
dec
subb
es
icebp
sub
ljmp
mov
lods
inc
lret
into
sbb
inc
nop
pop
aaa
jg
popa
or
jge
mull
xchg
inc
mov
scas
jbe
push
outsl
xchg
mov
movsb
shll
nop
mov
scas
cmp
or
jno
int3
mov
pop
movsb
ljmp
arpl
lret
enter
mov
movsb
pop
scas
inc
push
fadd
cmp
loopne
adc
imul
cmp
mov
rclb
pop
aam
std
sbb
push
iret
cli
movsl
movsl
or
jmp
addb
popf
rolb
sbb
sbb
cmp
in
mov
sarl
mov
add
cs
xor
lock
jne
aas
mov
jns
loop
and
lods
sbb
inc
aad
cli
cmp
jecxz
jo
fs
mov
clc
xchg
and
inc
in
and
shrl
mov
inc
mov
inc
cmp
and
add
cmp
mov
test
lods
dec
daa
mov
in
inc
mov
fldt
outsb
xor
arpl
and
sti
fldlg2
xchg
push
sub
mov
mov
sbb
pop
aad
adc
jb
sub
dec
in
jbe
rorl
inc
cmp
fstps
lea
dec
pop
into
lods
inc
mov
rcrb
lods
sahf
mov
adc
lods
pop
fisttpl
jg
xchg
das
fstpl
xor
mov
push
dec
jae
xor
adc
test
mov
pop
cld
enter
mov
cmp
shll
pop
test
inc
inc
xchg
pop
jmp
push
cmp
xor
jns
sbbb
mov
mov
sbb
push
dec
leave
jno
xor
lds
adc
rcr
jae
xchg
test
int3
push
jmp
adc
and
sarb
mov
or
notb
mov
and
mov
insl
sbb
fldt
xchg
ror
fdivrp
loopne
insb
ficoml
inc
test
push
insb
mov
push
iret
cmpsl
dec
mov
cmp
cmp
mov
inc
cmp
cmc
xchg
subb
mov
mov
cmp
xchg
fs
cltd
insb
fcoml
fdivr
mov
mov
ss
add
fcmovb
adc
xor
iret
sbb
shll
mov
xor
push
add
scas
adc
int
icebp
mov
ds
es
inc
pop
pop
add
je
cmp
stc
dec
mov
cmp
sbb
in
mov
out
das
nop
iret
or
clc
repnz
int3
loopne
xchg
pop
out
adc
bound
push
jb
call
jg
push
rol
push
outsb
fnstsw
aad
inc
sub
call
mov
push
bound
out
cmc
sbb
je
add
repz
gs
fildl
xor
jns
imul
dec
int
rcl
divl
imul
stos
ja
shrl
or
and
cli
sub
repz
add
adc
push
arpl
insb
and
sbb
out
cmp
das
lods
sub
out
jge
sbb
mov
fmull
push
es
sub
cld
xor
pushf
mov
test
mov
and
icebp
push
test
xlat
cmp
lret
in
mov
pop
ja
jp
add
xor
lahf
cmpsb
dec
stos
outsl
mov
jmp
pop
or
out
loop
cmp
adc
push
int3
shl
subl
adc
jbe
and
cwtl
mov
lahf
add
js
in
jne
popa
mov
fstl
push
sbb
push
pusha
lods
cmpsb
xchg
fnclex
fsubrs
mov
inc
push
or
in
mov
or
testb
popa
hlt
fsubr
fst
xor
mov
sub
sbb
mov
cmp
fistps
sub
insl
insb
fimull
sbb
in
jno
fisttps
pusha
mov
fwait
in
and
sbb
inc
mov
inc
push
jno
mov
sar
lahf
movsl
jp
dec
insl
dec
xchg
dec
repnz
pop
mov
loop
movb
imul
xor
mov
cwtl
into
outsl
push
xchg
xor
jns
dec
mov
add
mov
std
push
int3
lock
jnp
mulb
imulb
aad
adc
cmp
loope
jle
andl
out
pop
ret
sbb
test
xchg
push
mov
int
mov
cmp
cs
add
int
inc
js
loop
pushf
mov
push
test
mov
add
mov
movsb
sbb
into
hlt
pop
cmpsb
xchg
add
shll
icebp
clc
arpl
sbb
aaa
or
and
cmp
repz
dec
mov
jns
cmp
fdivl
or
shl
adcl
xchg
aam
add
cmpsb
pop
pop
mov
cltd
out
inc
push
add
cmpsb
cmpl
xor
lea
jecxz
push
enter
mov
or
rclb
sahf
sahf
in
out
int3
test
or
test
pop
and
fidivrl
jb
test
or
sub
dec
jo
xor
sbb
push
mov
cmp
inc
lea
std
mov
cmp
or
ret
and
lods
test
add
int3
mov
mov
subl
mov
jmp
cmp
push
in
fisttpl
ficoml
sub
xor
loopne
fldcw
lds
mov
mov
leave
cld
mull
pop
sbb
lods
push
popf
fdivl
push
std
add
sbb
sarl
out
rolb
cmpsb
cwtl
in
or
shl
flds
testl
dec
js
xchg
pop
mov
push
push
clc
dec
lahf
or
ja
mov
push
sti
mov
lods
and
push
outsb
xor
mov
sub
cwtl
mov
dec
inc
jmp
leave
inc
stos
iret
movsb
imul
mov
lods
mov
jae
fsub
add
testl
jno
adc
xor
test
push
mov
inc
iret
dec
adc
xchg
sahf
enter
mov
iret
dec
pop
test
fldcw
insl
push
cli
fdivrl
mov
cmpsl
js
fwait
push
jl
ds
push
out
int3
mov
dec
mov
adc
xchg
lock
cmp
pop
icebp
push
jmp
jbe
xor
ja
inc
popf
in
pop
iret
daa
fs
add
cmpsb
dec
dec
outsl
lcall
mov
and
testb
inc
ljmp
test
je
or
dec
xor
addr16
mov
testl
fs
icebp
fstl
add
fldenv
cwtl
and
push
scas
jbe
xchg
lret
inc
add
or
push
shrl
scas
adc
push
ljmp
jnp
out
mov
jae
xchg
cwtl
ljmp
add
js
cmpsb
cmp
mov
popf
xchg
jl
in
adc
in
adc
adc
jge
xchg
pop
aas
sahf
inc
roll
push
orl
in
cmpsb
outsb
adcb
fsubrl
aad
sbb
xchg
outsl
sub
scas
lds
cmp
jbe
pop
mov
push
adc
pop
dec
jle
in
out
out
repz
test
xchg
aam
push
xchg
frstor
cmc
fisttps
vmptrst
cmp
xchg
lea
das
cmpb
popa
dec
les
push
add
jno
mov
lods
dec
adc
into
outsb
inc
or
imul
nop
dec
sub
jne
cmpsl
xor
push
push
dec
and
cs
jnp
stos
push
orl
ret
cwtl
push
jmp
div
cli
jne
pop
cld
push
ret
icebp
loopne
lret
popa
mov
sbb
push
mov
loopne
or
jmp
xchg
jge
mov
pop
and
sahf
jle
scas
cmp
les
lods
jno
mov
mov
dec
inc
and
rcr
fadd
cmp
xor
or
mov
in
xor
setns
cwtl
addr16
in
cli
jbe
jo
notb
fstps
pop
adc
rolb
sub
lahf
xlat
pushf
jp
xor
jne
inc
push
add
inc
dec
mov
hlt
enter
test
out
fdivr
sti
hlt
fwait
cmp
dec
les
addr16
das
enter
adc
cmpsl
dec
mov
inc
xorb
push
setnp
addr16
sbb
xchg
mov
adc
hlt
xlat
xor
xchg
out
xchg
sub
mov
in
bound
jmp
pop
push
sti
xchg
mov
addl
popf
add
fisubs
xchg
and
imul
mov
xor
mov
aaa
xor
jg
inc
seta
inc
int3
leave
and
cmc
pusha
inc
pusha
cmp
dec
push
sbb
push
cld
dec
aas
xchg
subb
cmp
mov
fmull
pop
push
mov
cli
fldenv
push
push
je
outsb
lds
mov
xchg
inc
xor
inc
lds
aaa
hlt
pop
pop
cmpsb
xchg
lret
pop
inc
ss
ret
jo
push
jmp
adc
mov
std
sub
lds
fstpl
dec
sbb
inc
test
xchg
mov
xchg
sahf
mov
push
cmp
cmp
mov
sbb
js
inc
mov
dec
rclb
fdiv
or
push
and
mov
jge
sbb
or
lahf
lahf
jg
xchg
xor
ret
loop
fisubs
jno
xchg
rcrl
inc
in
or
inc
jns
inc
dec
adc
andl
dec
or
inc
notl
xor
repnz
mov
cs
adcb
xchg
push
xorl
push
movsb
cmp
clc
mov
mov
aam
push
sub
aam
cli
lcall
cmpsb
jb
jp
pop
and
inc
jl
lds
mov
mov
lea
adc
adc
stos
in
jns
push
mov
xchg
cld
stc
sub
stc
add
xchg
shll
cmp
stos
or
fldcw
loope
int3
and
ret
jl
push
das
add
leave
out
addl
dec
cmp
xor
mov
cmc
adc
push
add
lods
ficoml
addl
addr16
mov
loopne
jg
jb
je
pop
test
movsb
imul
aam
jne
dec
mov
into
xchg
mov
aam
in
out
in
dec
loopne
jne
mov
loop
cmp
xchg
pop
idiv
test
out
sub
leave
movsb
sub
pop
push
mov
dec
inc
push
inc
adc
pop
es
mov
sub
out
je
in
mov
ds
les
dec
mov
enter
mov
into
inc
add
jecxz
sub
into
add
shlb
add
mov
stc
add
clc
dec
push
lds
ds
mov
jge
cmpsb
push
adc
sbb
mov
jno
mov
lea
js
mov
pop
sbb
mov
sub
rorb
adc
in
sbb
jno
es
cs
cld
andl
sti
dec
and
or
lock
dec
sbb
mov
push
inc
int
pop
int
pop
mov
xchg
cmpsl
popa
pop
scas
popf
cmc
loope
lret
je
jbe
xorw
and
cmp
pusha
nop
inc
call
xchg
ror
adc
ret
sub
jmp
imul
mov
push
adc
jns
testl
enter
push
or
mov
icebp
pop
lcall
mov
mov
xchg
mov
loope
inc
loopne
mov
stc
js
sub
lods
lods
mov
push
fnstenv
push
mov
test
fisubl
int3
hlt
inc
adc
mov
ja
sub
rorl
dec
lods
push
pop
inc
add
addr16
pusha
ret
inc
cmp
sub
aas
xor
mov
out
lcall
js
sub
jmp
lcall
jl
sbb
fs
int3
jno
clc
mov
mov
lods
jp
xor
pop
cmp
pop
shrl
into
lock
sub
cmp
mov
inc
mov
and
push
out
stos
daa
mov
inc
adc
js
cmp
int
ret
lret
mov
repnz
shl
insb
mov
adc
dec
loopne
dec
lret
aad
mov
cmp
inc
sbb
iret
insl
sub
xor
jge
xor
test
popa
test
sub
jecxz
mov
xchg
in
cmp
roll
in
cwtl
imul
pushf
mov
adc
lea
fmulp
add
pop
adcl
int3
jge
adc
jbe
and
adc
ss
jp
jbe
dec
shl
test
shll
test
lock
rcrl
les
lret
in
gs
mov
mov
call
push
push
jg
int
gs
or
pop
dec
in
ds
fs
sbb
or
xor
mov
jle
xchg
push
add
push
jmp
inc
mov
pop
adc
sub
add
ds
scas
in
pushf
stc
cmp
pushf
mov
int
call
stos
iret
or
cld
push
pop
mov
ljmp
pop
lahf
mov
push
lods
scas
out
pusha
add
lock
lods
icebp
xchg
out
xchg
lret
jb
cmp
jge
cmp
sub
loope
cwtl
jae
pop
js
cmp
ss
and
dec
in
push
dec
pop
cld
add
lds
cmp
dec
jge
loope
mov
fwait
enter
int3
in
call
xchg
xor
sbb
outsl
pop
mov
div
fwait
jne
pop
pop
daa
add
cmp
lret
jecxz
jge
stc
popa
xor
cmpsb
xor
dec
pop
les
inc
mov
dec
jecxz
insb
jp
dec
loopne
leave
dec
jnp
and
and
call
add
stos
sub
xor
addr16
push
int3
mov
pop
mov
sti
cmc
pop
sub
lea
stos
dec
jecxz
nop
fwait
or
jg
or
out
test
nop
je
stos
and
dec
xor
push
repz
jge
loop
lds
dec
out
xor
jecxz
pop
icebp
mov
sbb
xchg
cwtl
out
jae
adc
adc
dec
mov
inc
mov
or
cmp
inc
aam
adc
js
mov
test
lods
lret
fsubr
mov
xchg
jle
popa
in
adc
push
push
mov
out
daa
or
fwait
push
aas
popf
stc
jmp
fld
cmp
mov
adc
iret
mov
mov
dec
addr16
scas
lcall
movsl
adc
mov
jmp
call
loope
movsb
cmp
pop
jo
adc
pop
stos
xor
mov
ss
sti
adc
xorl
cltd
fbstp
push
inc
pushf
adc
adc
inc
pop
fdivrl
push
repz
insb
xor
out
pop
in
and
xor
adc
fcoml
inc
xor
ljmp
popf
lock
sbb
cli
out
negb
jns
dec
das
inc
cmp
icebp
stc
sub
jb
xchg
ret
xchg
jne
mov
test
inc
jl
addr16
pop
pop
push
sbb
popf
adc
adc
xor
mov
cs
in
xlat
mov
lret
jo
imul
in
cmp
jmp
scas
imul
or
adc
iret
or
sub
popa
imul
sub
je
xchg
sub
jnp
pop
imul
out
sub
cmp
ds
jbe
jne
sbb
mov
and
adc
mov
mov
jno
mov
xor
mov
enter
gs
add
test
mov
test
xchg
inc
add
xor
pusha
getsec
xchg
enter
scas
xor
lahf
jnp
enter
cld
cmc
cmp
nop
mov
cmpsb
mov
jnp
es
inc
scas
rorb
ds
arpl
or
dec
add
aad
dec
xchg
sub
and
inc
mov
xor
movsb
lds
push
dec
adc
mov
cs
push
mov
push
pop
js
mov
clc
insb
imulb
pop
test
sub
fcomps
push
out
pushf
inc
mov
push
test
jg
popl
or
sti
xor
mov
jbe
into
inc
shrb
fmul
dec
or
outsb
stos
fidivrs
outsl
sbb
stos
adc
jmp
enter
push
push
mov
out
jmp
out
mov
imul
fiaddl
mov
inc
in
das
icebp
cmc
ljmp
in
popa
dec
pop
jb
dec
in
jno
jnp
jecxz
mov
mov
jae
adc
gs
push
dec
jo
jmp
mov
mov
mov
movsl
enter
mov
mov
cs
imul
cmp
popf
mov
shl
ffree
adc
sbb
loopne
shll
mov
shrl
xorps
popa
fdiv
mov
sub
movsb
repz
pop
sarb
mov
pop
adc
xchg
repz
shll
mov
push
das
cli
dec
mov
arpl
jge
xchg
mov
cld
out
jns
ss
adc
es
ret
adc
mov
push
call
sbb
outsl
test
mull
jae
push
jno
dec
imulb
imull
mov
movsb
bound
mov
test
icebp
repnz
lret
add
or
cmp
push
jmp
jne
cmp
loop
int3
std
inc
daa
gs
aaa
cmc
addb
push
fwait
outsl
loope
and
sahf
xchg
stc
lods
imul
xorl
or
push
adc
mov
out
stos
lock
fdiv
ljmp
fldcw
and
mov
push
adcl
xchg
lahf
inc
mov
scas
adc
bound
negb
jg
sbb
lods
add
std
paddd
mov
cmc
fildl
xor
aam
dec
into
mov
icebp
jno
xchg
sbb
inc
aad
sbbb
mov
jno
or
lods
pop
cmp
ja
outsl
fbstp
and
out
add
pop
insb
fsubrl
xchg
iret
cmp
pushl
jb
sbb
push
pop
lods
loope
int3
psrlw
mov
lcall
xor
js
daa
sarl
sbb
jmp
jns
cs
jne
test
fstpt
rorl
xchg
mov
frstor
mov
jo
mov
andl
mov
mov
and
push
aaa
call
bound
clc
dec
popa
inc
hlt
xor
dec
cmp
jmp
test
loope
xchg
cmp
push
ja
xchg
ss
imul
inc
pxor
adc
jmp
xchg
mov
insl
pop
les
std
cmp
xchg
test
cli
sahf
jmp
mov
jle
mov
cmp
loop
rorl
fstps
cmp
push
inc
jp
inc
clc
pop
sub
inc
sbb
ljmp
jl
xchg
xor
pop
loope
pop
in
mov
in
jb
divl
std
add
push
jecxz
pop
arpl
mov
xchg
imul
jmp
sub
and
xchg
push
xchg
push
outsl
pop
iret
aas
shll
and
cltd
jge
addr16
test
jl
cli
jmp
jmp
jecxz
sub
mov
es
stos
lret
pop
lret
aas
pop
or
inc
sub
movb
inc
popf
dec
fildl
mov
cmc
add
cld
cmp
mov
dec
addl
push
fnstcw
add
aad
and
in
sub
into
adc
lret
ret
add
adc
cli
pushf
dec
rcrb
pop
outsb
add
shlb
mov
iret
in
and
addr16
shlb
pusha
inc
sahf
std
sti
mov
test
push
inc
rcll
xor
out
dec
cmp
stos
xor
adc
lret
outsb
sub
dec
mov
cmp
adc
in
cmp
stos
fisttpll
iret
fdivl
cmpsl
adc
sub
pushf
pop
adc
loop
fiadds
mov
cwtl
lea
cli
jno
jl
leave
dec
add
jb
push
sub
pushf
pop
out
fwait
mov
test
idivb
jmp
push
push
repz
mov
orb
ds
xchg
mov
roll
jp
mulb
pop
lock
sbb
in
ret
jp
push
pop
mov
dec
mov
sbb
cmp
sub
push
sub
leave
mov
jmp
jecxz
call
icebp
push
dec
xchg
inc
ja
sub
in
or
xchg
iret
add
or
aam
fucomp
shufps
pop
jns
jno
push
sbb
inc
pop
into
mov
nop
std
mov
clc
push
dec
and
mov
data16
loopne
jl
idivb
jns
or
jge
sbb
pop
mov
fmull
push
cmp
sub
sbb
jmp
pop
in
xor
rcr
push
fisubrs
int
outsl
xlat
pop
movsl
push
cmp
lds
pop
push
dec
xlat
stos
push
mov
std
jbe
imul
pop
xchg
sub
cmpsb
insl
icebp
sbbb
fnstcw
dec
jge
divb
je
inc
push
mov
inc
aam
xor
arpl
cmc
popa
add
inc
jne
shl
sub
push
lea
jnp
mov
and
inc
pop
cmpsb
bound
push
mov
inc
lret
lret
mov
add
inc
add
cwtl
fsubr
in
pop
jle
cmp
dec
and
mov
xchg
repz
dec
jnp
push
push
mov
xchg
dec
adc
xchg
nop
ret
cld
shll
xchg
test
mov
test
leave
mov
mov
jl
add
mov
out
scas
shl
fucom
mov
push
mov
and
movsl
adc
xlat
adc
cwtl
iret
cmc
add
fsubrl
outsl
cmp
cmp
fwait
sti
xchg
into
sbb
xor
pop
inc
js
ljmp
imul
jmp
aad
mov
adc
xor
jae
sub
or
outsl
fucomp
shrl
inc
jnp
test
mov
sbb
sub
leave
in
push
pop
je
test
pop
movsl
cli
xchg
in
jb
inc
xchg
sub
jnp
xlat
cs
jne
dec
je
cmp
shll
jg
ret
notl
pop
lea
push
clc
dec
aas
in
aas
add
jl
dec
mov
sbb
in
ficompl
gs
js
out
sub
mov
mov
xlat
fadd
or
pop
mov
dec
add
adc
jl
mov
and
imul
adc
fstps
adc
icebp
xchg
hlt
and
dec
data16
sbb
jb
dec
xchg
lret
xor
mov
mov
aad
ja
push
cld
dec
sub
push
pusha
push
mov
inc
push
std
jnp
sbb
jb
and
mov
loop
addb
scas
js
or
xorl
mov
pop
pop
leave
pop
add
test
addr16
mov
shrb
hlt
ds
pop
dec
bound
push
mov
mov
fdiv
jns
nop
pop
add
fdivr
push
cmp
lds
test
inc
jbe
push
xorl
xlat
xor
int3
xor
iret
jl
in
repnz
roll
cmp
push
out
loopne
xor
ja
das
or
ljmp
jp
clc
cmp
pop
insl
mov
aad
ljmp
repnz
push
mov
mov
push
fnstenv
aad
mov
sub
lcall
mov
leave
adc
lods
pushf
lret
filds
stos
cmc
fsubl
into
mov
cmp
cmc
pushf
fidivl
fistl
sub
push
sub
mov
test
and
arpl
lods
fisttpll
inc
push
xchg
outsb
sti
loopne
pop
add
cltd
mov
jae
dec
inc
in
inc
ds
jnp
mov
or
lcall
sub
lods
mov
push
std
loopne
adc
mov
mov
mov
roll
je
repnz
xchg
jle
inc
mov
lahf
mov
out
mov
dec
mov
arpl
sahf
jl
or
mov
mov
add
stc
int
scas
test
and
mov
sbb
add
out
sbb
push
push
pop
out
pop
jle
pop
or
incb
dec
mov
xchg
lret
ss
or
out
pushf
pushf
mov
aam
jmp
test
sbb
jno
cmp
dec
cltd
inc
cmp
daa
mov
add
sub
mov
stos
in
sub
sub
cmp
pop
out
lret
xor
mov
jae
jae
add
fdivrs
hlt
fcmovb
loopne
inc
decl
dec
loop
mul
lcall
addb
nop
push
sub
pop
sub
orb
xchg
lods
add
xchg
lods
push
out
clc
loope
repnz
xlat
sbb
dec
hlt
pop
push
test
sti
inc
lds
outsb
or
push
repnz
or
push
mov
clc
sub
xchg
mov
mov
mov
dec
repnz
movsl
ret
shrl
jmp
push
inc
mov
mov
das
in
xchg
add
in
xor
das
push
insl
xchg
cmpl
pop
and
cmpsl
gs
pop
xor
repnz
mov
push
movsb
mov
mov
push
mov
jbe
xchg
adc
scas
in
mov
pop
add
push
popa
gs
into
mov
mov
xchg
test
cmp
add
lret
ljmp
sub
std
lcall
call
aaa
cmp
movsl
das
sub
inc
mov
mov
jbe
push
push
or
lcall
push
push
push
addr16
arpl
aas
mov
in
movsl
xchg
push
pop
lahf
mov
xchg
sbb
rclb
push
sahf
outsl
lea
insl
addr16
jl
daa
sbb
mov
xchg
les
shlb
add
pop
dec
fadd
adc
fsubs
jmp
xor
inc
clc
xchg
inc
incb
aam
jae
pop
adc
outsl
clc
or
pop
jmp
rcrl
fidivl
orl
arpl
in
or
mov
je
mov
imul
or
rolb
mov
int3
ja
jmp
or
dec
gs
movsb
xchg
stc
cmp
and
mov
ljmp
scas
sahf
mov
sub
pusha
imul
in
stos
scas
stos
dec
adc
adc
inc
mov
and
or
push
mov
dec
sub
lahf
or
push
bound
push
mov
jb
or
cmp
les
addb
sbbb
pushf
cmpsl
rorl
ficoml
sbb
ds
andb
lret
pop
dec
jecxz
or
int3
adc
add
ret
ftst
out
lds
repz
in
repnz
incl
shrb
and
dec
js
fldl
loope
jecxz
xchg
xchg
xchg
rcrb
mov
inc
outsl
add
sub
nop
dec
xor
cmp
ds
mov
jo
xchg
mov
or
loop
xchg
scas
repnz
add
jbe
enter
daa
and
xchg
jb
dec
pop
jp
mov
dec
lcall
cmc
outsb
pop
mov
daa
push
add
cmovle
scas
jno
sahf
decb
xchg
leave
sub
rolb
mov
inc
push
fs
scas
adcl
ljmp
pop
add
mov
orl
call
push
push
sub
or
mov
xor
or
in
dec
add
mov
mov
lret
data16
ljmp
sti
out
dec
iret
loope
jecxz
sub
ljmp
jne
push
lcall
mov
sub
xchg
sub
in
jle
push
xor
loopne
push
xor
jl
sub
xchg
xor
fs
dec
cltd
popa
out
insb
ret
and
stos
inc
lods
cmc
dec
xchg
xlat
daa
call
xchg
mov
xor
es
dec
call
jns
ljmp
mov
jge
sub
int
ss
or
fdiv
jecxz
dec
mov
les
lahf
movsl
add
loopne
mov
in
dec
xchg
ret
pop
cmp
sbb
into
and
dec
inc
push
push
inc
stos
lahf
in
enter
rcl
mov
add
cmp
cmp
popf
inc
mov
rclb
in
dec
xor
push
sub
ret
xchg
and
stos
cmp
mov
aaa
mov
add
inc
mov
and
push
sub
xor
or
repnz
xchg
repz
test
push
std
pop
xchg
adc
in
xor
xor
inc
loop
js
mov
push
pop
pop
inc
pushf
or
or
lret
mov
pop
lea
rcll
jge
pop
and
inc
cmc
divb
mov
je
cltd
or
dec
cmp
inc
mov
xlat
dec
es
cmp
scas
push
or
into
stos
fstl
mov
inc
or
adc
inc
idivl
xlat
movsl
sbb
mov
ja
rorl
mov
xchg
xchg
mov
loope
paddq
sahf
test
push
mov
inc
icebp
jo
mov
fimull
mov
enter
lahf
mov
adc
sbb
lahf
fcmove
cs
int
mov
jbe
jo
sub
xor
sbb
clc
jmp
inc
jae
xor
mov
mov
push
in
inc
sbb
pushf
mov
push
or
fisttpll
aam
sbb
clc
inc
jne
ret
lcall
xchg
or
push
stos
sbb
iret
inc
bound
pop
out
out
push
sbb
cmp
loop
and
shlb
rcr
das
push
mov
loopne
sahf
loop
aaa
cmp
dec
inc
push
dec
mov
fnsave
jae
xchg
call
and
rcrb
and
mov
fldenv
scas
popa
jp
and
aas
les
in
push
add
out
adc
and
jecxz
push
aas
setns
mov
inc
mov
mulb
fbstp
pop
xor
mov
xor
adc
cmc
scas
aad
add
sub
ds
cmpsl
mov
cmpsl
ljmp
roll
xor
test
ja
test
pop
ret
into
repnz
xchg
or
add
fsubrs
movb
adc
subps
xchg
mov
iret
push
out
pusha
sbb
std
outsb
push
add
test
rolb
add
jp
push
out
pusha
das
lods
mov
pop
pop
shl
mov
data16
fcos
aas
sub
or
push
stos
jp
stos
lcall
mov
push
mov
push
dec
icebp
adc
les
mov
ret
inc
popl
or
mov
dec
add
ret
dec
call
sbb
push
daa
add
outsl
cs
add
xorl
stos
lret
push
scas
jae
fidivl
xor
cmpsb
addr16
sbbl
arpl
adc
xor
out
arpl
sub
xchg
popf
push
mov
cmc
mov
xchg
sub
enter
sti
jnp
inc
pop
lea
test
movsb
popa
outsb
or
fists
lods
lea
lea
hlt
and
jnp
lret
paddw
add
emms
push
mov
mov
and
mov
in
push
fistpl
loop
enter
push
out
aam
icebp
pushf
cmp
notb
xor
cli
fisubrl
outsb
xor
jo
lea
rcr
call
cmp
in
pop
add
lock
and
or
jne
imull
test
dec
jle
mov
scas
mov
pop
outsl
dec
fidivs
mov
stos
pusha
pop
in
out
mov
rcpps
es
or
cs
sub
aam
iret
lcall
xchg
lret
push
cmc
mov
daa
mov
jmp
shlb
sub
shll
lcall
out
mov
cmp
hlt
xchg
sbb
arpl
or
stos
ficompl
jge
pop
mov
jge
jl
xchg
pop
jns
jmp
repz
mov
xchg
addr16
lods
jmp
fbld
mov
push
out
adc
shrl
or
cmpsl
lods
fidivl
xor
pusha
or
xchg
adc
or
ss
sub
dec
imul
jle
lods
in
cmp
mov
mov
fsubs
fisttpll
mov
push
add
or
cmp
push
ljmp
lods
xchg
std
xor
push
adc
fistps
jl
imul
sub
ljmp
dec
fadds
jbe
popf
nop
and
adc
mov
mov
mov
xor
rcrl
ja
inc
pop
xor
icebp
xor
mov
scas
fwait
or
insb
ret
add
jb
push
dec
mov
and
sub
dec
cld
or
and
into
mov
xor
mov
out
lods
sti
repnz
ss
or
cmp
shlb
jmp
daa
push
es
negl
ret
dec
ljmp
sbb
xor
ljmp
stc
jl
cld
mov
insl
insl
inc
out
pop
adc
add
shr
add
insb
lea
loopne
cmp
push
rclb
adc
ss
outsl
out
push
sbbl
ret
xchg
iret
and
pop
movsb
dec
sub
insb
outsb
mov
loop
popa
in
sti
xchg
stos
cli
fwait
inc
lods
out
dec
sbb
push
repz
not
mov
xor
test
xor
cltd
xor
and
mov
sqrtps
lods
or
in
stos
lea
xchg
out
or
mov
xchg
mov
repz
lock
xlat
and
mov
inc
cmpsb
lods
adc
lahf
mov
sub
mov
cmp
push
addl
les
gs
jno
lods
xor
cmp
xchg
dec
lea
cmp
sub
xchg
scas
jb
push
adc
ja
lret
mov
mov
sub
sub
lret
adc
pop
mov
into
xor
loop
jmp
pop
cmp
xor
jno
or
jecxz
pop
ds
add
xor
rclb
inc
cmp
cmpl
xor
pop
xchg
sub
xor
in
cmp
stc
mov
dec
and
out
push
push
push
insb
int
add
jmp
jg
mov
cli
cmp
pushf
fildll
mov
pextrw
or
cmp
and
in
in
nop
xchg
xlat
pop
and
out
pop
iret
sbb
nop
xlat
mov
aam
mov
adc
xchg
jecxz
mov
aaa
xor
or
cltd
mov
inc
insl
pop
jl,pn
mov
xchg
xchg
mov
pop
lahf
mov
ja
pop
push
shr
in
fsubrp
out
fsubl
std
dec
push
movsb
or
xor
ss
add
push
dec
bound
bound
push
repz
xchg
rcl
in
loopne
sub
cmp
sbb
je
mov
pusha
popa
cld
je
shl
rolb
inc
fbld
mov
dec
pop
add
rcrb
pushf
mov
popf
popa
add
testl
xor
adc
or
xor
push
ljmp
inc
xlat
lods
mov
pop
movsb
fidivl
hlt
jmp
mov
xchg
out
inc
jle
dec
das
bound
push
lret
xor
clc
and
or
xor
jle
mov
out
adc
imul
out
fadds
jmp
mov
and
xchg
into
mov
pusha
out
jl
pop
int
movsl
xchg
jb
jnp,pt
rcrl
and
jecxz
mov
cli
jle
out
mov
movsb
mov
sbb
mov
and
dec
sbb
test
adc
pop
lret
jae
pop
mov
and
adc
add
std
inc
rorl
sbb
jo
mov
cmp
add
xor
adcl
fsubs
pop
dec
sub
mov
sub
movsb
lret
mov
inc
or
or
xor
shl
orl
mov
movb
sub
cmp
add
dec
mov
ret
jle
into
stos
xchg
adc
pop
sub
or
sbb
dec
push
lahf
pushf
fisubl
inc
push
jb
cmp
push
je
jecxz
ffree
xchg
lahf
pop
in
sbbl
enter
subl
rorl
icebp
test
mov
fldl
xchg
mov
add
ss
adcl
xor
add
push
sub
cmp
mov
movsl
das
aaa
fsts
xor
fnop
push
push
mov
filds
je
dec
jne
leave
mov
test
sub
adc
mov
mov
cli
outsl
xchg
inc
mov
roll
or
mov
xchg
int
mov
push
testl
sub
aas
std
mov
xchg
es
mov
jle
sub
inc
addb
enter
mov
out
cs
out
stos
lods
int3
pop
lret
rcrl
leave
push
adc
dec
aas
out
pop
insl
nop
cmp
jmp
inc
cmpsl
mov
pusha
xchg
ja
add
xchg
psubd
test
iret
cmpsl
cli
jmp
add
sahf
hlt
rol
flds
loopne
ljmp
test
mov
push
mov
arpl
mov
scas
ja
test
gs
dec
cs
fsubl
inc
push
icebp
push
mov
jns
cmpsb
jmp
mov
sti
mul
movswl
scas
jg
jmp
pop
jg
dec
and
and
lahf
dec
test
mov
or
cvtps2pd
icebp
enter
pop
imul
push
sbb
je
fadds
jns
inc
aad
xchg
or
push
test
sbb
sub
out
mov
push
cs
das
jmp
adc
xorb
std
stc
enter
movsl
js
sbb
pop
xor
popf
or
xchg
jg
sbbb
mov
xchg
je
xchg
sbb
in
rcll
in
sbb
push
roll
mov
inc
xchg
xor
dec
adc
ljmp
push
push
jnp
loop
shrb
xor
mov
das
cld
adc
mov
mov
and
fld
imulb
or
out
out
jbe
sbb
cmpsb
aam
mov
repnz
sub
insb
mov
xor
mov
dec
out
and
xor
xchg
jmp
clc
pusha
add
mov
mov
cmp
xchg
std
test
xchg
pop
adc
subb
add
dec
inc
dec
mov
dec
adc
cmp
and
pop
xchg
lock
and
insb
jl
push
out
cmc
jno
test
nop
sbb
insl
and
daa
pop
xchg
mov
mov
mov
add
mov
test
loope
xor
xor
mov
nop
stos
inc
std
cmp
outsl
popf
and
in
cmp
pop
xor
cli
or
add
fistl
mov
inc
cmp
jae
push
push
ret
add
sarl
outsl
xchg
inc
cld
mov
rolb
sbb
xlat
jne
in
push
cmp
insl
test
add
pop
push
bound
xor
daa
and
iret
push
aad
repz
popf
mov
les
jno
adc
xor
sti
aas
mov
jmp
test
dec
aam
dec
and
push
and
int3
test
inc
in
xlat
out
cvtdq2ps
and
dec
enter
xchg
fcompl
or
adc
xchg
xor
cmp
rcrb
shrl
xor
push
fstpl
mov
cltd
out
dec
insl
adc
or
gs
ds
sbb
jge
add
adc
sub
pop
jle
add
insl
shl
xchg
dec
xor
cli
int
popf
cmpsb
movsb
test
jg
ja
push
push
pop
in
add
outsl
xchg
adc
iret
in
imul
inc
pop
test
cmp
add
pop
stos
leave
fimull
ljmp
cmc
pusha
xchg
clc
call
mov
fcmovnbe
xchg
fdivs
xor
push
fwait
add
push
in
xor
fisubs
fsubr
mov
xchg
scas
std
push
rcrl
jbe
cmpsb
sahf
es
rclb
bound
mov
pop
sbb
sahf
clc
out
xchg
fmul
xor
cmpsb
push
in
jno
lock
dec
add
out
es
mov
outsl
jne
xchg
push
pop
add
pusha
xchg
pop
cli
pop
sub
cmp
mov
les
inc
jl
dec
js
jnp
or
or
mov
sub
xor
sbb
es
cmpsb
ret
inc
sbb
cmpsl
aaa
sub
ja
movsl
mov
push
std
push
dec
or
sbb
pop
repnz
fiaddl
adc
add
adc
pop
dec
js
stc
clc
push
sub
mov
loop
stc
mov
sti
pop
mov
mov
xlat
ss
xor
mov
mov
pop
mov
fstpl
pop
addr16
add
xchg
orl
out
sub
dec
hlt
xchg
in
mov
fs
lods
ja
lret
and
test
std
je
mov
aas
jo
frstor
ret
adc
fiaddl
aam
jge
scas
push
out
push
jo
xchg
ret
push
stos
stos
jns
sub
pop
movsb
imul
roll
inc
hlt
je
jl
cwtl
add
out
or
add
sub
es
xor
xchg
jmp
or
movsl
cmp
in
inc
dec
jb
cld
cmc
inc
das
rorb
dec
pop
pop
or
outsb
xchg
sbb
or
jns
sti
repz
in
adc
mov
adc
xor
mov
arpl
mov
stos
jmp
push
lods
pop
sahf
cmp
dec
xchg
insb
repz
lahf
rolb
mov
scas
jg
lret
xchg
fstl
mov
xor
push
loope
mov
pop
fcomi
iret
dec
sub
fadds
or
push
dec
jecxz
outsl
sbb
mov
addr16
push
sub
add
jo
daa
cmp
pop
ja
xor
out
imul
out
movsb
jns
ds
cmp
cmp
cmp
push
pop
imul
adc
fwait
mov
add
or
vpsrld
lods
aaa
pushw
outsb
xchg
jb
bound
dec
or
fs
mov
mov
stc
push
gs
sub
fbstp
test
inc
inc
outsl
pop
adc
mov
push
mov
mov
jge
out
aaa
xor
popf
sbb
and
sarl
mov
jb
jmp
sub
repz
pusha
push
dec
pop
cltd
shll
dec
fxch
nop
pop
shl
dec
test
std
inc
or
aas
stos
push
es
je
cmp
daa
push
and
std
xchg
loop
sub
push
into
lods
shl
mov
mov
test
pop
jae
add
movsb
mov
cli
ja
xlat
clc
xchg
dec
iret
inc
mov
mov
in
sti
inc
pop
stos
and
fucomi
in
xchg
jne
ds
in
std
ret
cmp
ja
jle
xchg
push
sbb
cltd
pop
xor
ja
arpl
cld
or
ja
dec
sub
lods
xor
mov
int3
dec
sarb
rclb
mov
jns
cld
mov
lods
sbb
push
pop
cld
xchg
cs
push
ss
testl
fwait
inc
sbb
adc
and
lret
dec
movsl
aam
inc
and
push
cli
int
cs
je
dec
pop
out
jg
lret
push
jns
mov
cwtl
push
or
inc
popf
adc
xchg
jb
in
mov
jge
jge
cli
xchg
dec
scas
sti
inc
jecxz
fdivl
cmpsl
lock
stos
fs
cld
mov
sub
rolb
mov
scas
adc
mov
pop
jl
repnz
cld
iret
loope
or
add
in
test
pop
cmp
inc
dec
cmp
push
in
scas
aad
out
ret
dec
cmpsb
sbb
xchg
lret
add
xor
jle
insl
sub
inc
cld
std
adc
and
jnp
cwtl
mov
add
add
xorl
and
or
inc
mov
nop
nop
jns
decl
insl
xor
in
sbb
aas
and
mov
imul
push
mov
jmp
jge
pop
sbb
pop
les
inc
repz
pushl
push
dec
stos
dec
lds
test
push
push
jns
lods
push
cld
push
mov
test
mov
jnp
lds
arpl
sub
adc
ds
scas
pop
lds
repnz
mov
sbb
fimuls
cmp
adc
jecxz
pop
adc
mov
in
stc
out
jns
and
test
and
mov
fwait
repnz
pop
jmp
sub
orl
dec
sub
js
sub
push
xor
ficomps
ja
jp
ffree
dec
xor
orb
jg
repz
addr16
mov
and
movsb
xchg
hlt
jbe
stos
int3
inc
in
jp
pop
std
mov
cwtl
xchg
addr16
stos
loope
cmp
adc
sub
rcrb
push
jb
mov
sub
ja
out
adc
int
dec
xor
cmp
inc
push
aam
dec
mov
xor
dec
dec
or
cmp
and
scas
xchg
js
or
cli
shlb
xchg
and
outsb
addr16
in
pop
inc
xchg
rcrb
mov
jns
popa
pop
imul
ret
add
pop
outsl
es
pop
push
or
inc
mov
pop
sbb
inc
push
fdivl
repz
fadd
out
jg
mov
or
fildll
insl
mov
cmp
xchg
mov
movsl
add
pop
xchg
ja
fisttpll
pop
mov
dec
add
add
testb
jp
sub
mov
ja
or
out
in
mov
cmp
bnd
popa
push
hlt
popf
cltd
push
ljmp
push
xor
bound
or
jp
pop
loop
sbb
divl
push
sbb
int
out
repz
out
push
adc
mov
or
rcrl
outsb
call
subl
cmpsb
inc
in
add
pusha
mov
loop
sub
dec
pop
sahf
cld
jnp
xchg
and
js
adc
std
adc
sarb
out
test
add
pop
mov
adc
mov
negl
adc
cmp
xlat
cmp
cli
lcall
imul
dec
jo
js
cmp
inc
inc
scas
nop
and
ljmp
test
arpl
sub
fbstp
bound
xor
in
shlb
pop
push
mov
push
xor
repnz
fdivp
popa
adc
loope
popf
mov
cmp
enter
add
inc
add
inc
mov
movsb
or
jno
aad
leave
mov
les
adc
subb
push
push
and
sub
popf
enter
dec
jmp
xor
leave
aam
mov
adc
daa
adc
cmp
push
pop
fiaddl
xchg
out
cli
ret
xor
adc
divb
cs
inc
or
adc
inc
outsb
incl
call
insb
lods
filds
jno
insb
jne
mov
movsl
push
int3
mov
fstl
push
xchg
lods
aad
mov
jno
in
scas
xlat
sbb
ljmp
fidivrs
fcmovu
or
lds
inc
pop
or
in
adc
into
adc
in
movsb
jno
mov
ds
dec
or
xor
push
mov
fwait
add
jns
test
cltd
jmp
push
xor
jp
sub
sbb
inc
in
test
ljmp
jp
in
js
test
push
jne
xchg
es
jbe
xchg
push
pop
popa
cmp
cs
ret
and
dec
push
stos
xor
push
pop
sbb
and
push
push
movsl
dec
dec
insb
add
inc
cltd
repz
inc
mov
push
xlat
jmp
and
push
push
ljmp
dec
jl
jle
ds
aad
orl
mov
xchg
push
lret
add
movsl
xchg
pop
pop
or
testl
dec
imul
nop
js
enter
fdivrl
add
out
lahf
jo
jg
pop
cld
xor
sbb
loopne
hlt
dec
add
mov
jmp
outsl
mull
movsb
sbbb
cmp
mov
nop
popf
rcrb
xchg
ret
push
push
daa
sarl
push
or
stos
cmp
adc
or
mov
xchg
aad
add
sbb
add
les
dec
pop
imul
inc
push
in
jnp
jl
push
out
inc
lods
mov
lahf
and
pop
xchg
pop
cs
inc
xchg
imul
and
and
rorb
scas
int3
push
pmuludq
pop
jecxz
pop
lret
sub
daa
aam
mov
cmp
mulb
out
mov
loope
mov
dec
lds
mov
mov
in
ret
hlt
call
mov
ret
cmp
add
fwait
jns
pop
mov
push
sbb
inc
outsl
add
je
xchg
push
push
jecxz
inc
jae
lret
ja
jns
or
fs
adc
xor
test
das
addb
and
call
lahf
enter
xchg
call
inc
cmp
pop
outsl
xor
inc
xchg
data16
jbe
fistpl
roll
cmp
jle
adc
cld
fdivr
sti
jle
dec
cmp
test
mov
add
lock
cld
cmp
xchg
addr16
dec
pop
xchg
mov
dec
mov
dec
jge
mov
lds
mov
test
in
cltd
add
sbb
adc
lahf
xlat
clc
cmp
loope
cmp
mov
aad
pushl
aaa
mov
ja
iret
inc
xchg
mov
adc
cmp
cmp
frstor
stc
cwtl
lock
sub
xchg
mov
or
fwait
iret
adc
in
lret
mov
push
inc
inc
lret
and
ret
rcl
cmp
ret
cmpsb
push
mov
orl
insl
js
stos
mov
aam
repz
fnstcw
lds
insb
mulb
mov
addr16
xlat
sti
add
cli
pop
rorl
mov
xor
fwait
add
sub
or
loope
fbstp
mov
jae
rclb
repnz
sub
mov
xchg
xor
pusha
add
mov
and
or
mov
les
fistpll
mov
into
scas
mov
pop
xchg
xor
fsubrp
pop
rcr
inc
enter
and
in
xor
cmpsl
mov
shlb
jle
fcoml
repz
fs
sbb
push
or
inc
mov
pop
sbb
in
gs
ljmp
aas
pop
inc
xchg
adc
jge
cmp
ja
and
jnp
ret
add
jge
jae
out
xchg
mov
push
in
rcrb
sub
das
imul
testb
outsb
outsl
rcr
jle
mov
xchg
jge
aaa
inc
pop
push
mov
adc
int
cs
dec
add
fmuls
add
ds
cmpsl
mov
ja
sbb
andl
mov
inc
icebp
inc
sahf
gs
mov
xchg
call
xchg
mov
sbb
out
or
rcr
fldl
call
fsubrs
pop
sbb
or
pop
popl
ret
sub
add
and
cld
out
nop
into
mov
stc
inc
stos
cmc
shr
movsb
sahf
rolb
adc
inc
and
or
inc
aam
lds
mov
idivl
jg
in
dec
or
fistps
repz
ds
fsubs
call
sbb
inc
push
inc
add
push
shll
lods
movsb
pop
dec
xchg
orb
cltd
mov
insl
arpl
std
and
jo
xchg
lea
mov
mov
sbb
mov
mov
dec
aam
mov
loop
adc
push
ror
out
mov
fcomps
jo
jae
popf
xor
movsb
inc
adc
push
adc
out
pop
cmpl
out
and
or
shrl
out
push
cs
jmp
cwtl
sub
push
mov
fisubrl
enter
mov
mov
and
jmp
lds
dec
mov
out
dec
mov
push
ja
jnp
jp
repz
push
enter
dec
xor
mov
call
mov
iret
cmp
xor
js
mov
jp
daa
jl
repz
sahf
out
mov
pop
mov
stc
adc
addr16
icebp
lahf
add
push
adc
pusha
jle,pn
out
mov
fisttpl
xchg
rcrl
jge
ret
in
and
lahf
sbb
jae
test
mov
std
movsl
ds
mov
fwait
sub
mov
andb
xor
test
adc
out
lahf
lds
inc
mov
xchg
add
jbe
decb
outsb
sub
in
cmpl
xchg
inc
jmp
popa
ss
mov
xchg
mov
mov
pushf
push
out
lret
sbb
jge
int
xchg
fsubrp
jns
cmpsb
mov
pop
movsb
push
jg
dec
xor
sbb
loopne
mov
fwait
adc
cli
ds
enter
ret
das
cmpsl
add
and
outsl
dec
and
jp
dec
mov
cli
jae
rolb
add
mov
adc
in
dec
add
mov
add
mov
push
inc
and
ret
fildll
cmp
sahf
cmp
decl
fists
pusha
mov
in
xor
dec
fmuls
addr16
sbb
pop
lret
pushl
lods
add
fwait
xchg
addl
loopne
pop
mov
dec
test
stc
fstps
jecxz
mov
cmc
mov
ja
cmpsb
jmp
inc
nop
and
lret
bound
push
jecxz
das
jmp
out
mov
jbe
xchg
sub
das
loop
jg
add
xor
lods
fmul
ror
xor
das
dec
leave
or
xchg
fsubrp
aaa
sarl
push
es
lea
jmp
mov
sarb
mov
pop
pop
add
inc
stos
push
and
in
jne
in
dec
mov
sarl
adc
dec
and
dec
inc
mov
jae
popa
mov
xchg
inc
cli
cmpl
jns
or
cmpsb
sub
fnstsw
xchg
movsl
insb
lods
add
stos
cmp
scas
repnz
jo
jo
sub
mov
push
xor
les
int
dec
rcrl
and
js
inc
xor
rorl
es
sti
sbb
arpl
outsb
sub
adc
sub
shrb
aaa
xchg
push
jl
mov
and
pop
mov
test
aaa
xor
fcom
clc
imul
mov
adc
insl
imulb
sub
jg
stc
sti
mov
aam
push
dec
jle
je
test
adc
mov
insb
mov
int3
pop
dec
iret
leave
jecxz
jb
jecxz
clc
inc
scas
cltd
ret
and
mov
cld
aas
ja
popf
xchg
jae
add
imul
popa
scas
mov
mov
jle
popa
test
mov
mov
jnp
daa
add
or
xchg
es
or
pop
adc
aam
add
outsl
push
in
imul
xor
xchg
inc
sbb
or
gs
nop
mov
adc
cmc
addb
andl
ret
js
out
sbb
xor
pop
push
inc
adc
sar
popa
shrl
int3
lret
sti
rcrb
jo
dec
cmp
add
add
dec
jp
push
push
imul
jb
cmp
outsl
xor
addl
dec
pushf
and
pop
jmpw
popa
inc
or
lahf
fs
sbb
lahf
pushf
and
lds
mov
mov
enter
fcomp
ja
pop
jnp
mov
popa
cmpb
inc
leave
xor
loope
add
dec
xor
inc
jle
enter
push
sti
add
xchg
std
push
sbb
pop
decl
pop
out
bound
das
or
and
sti
imul
aam
rolb
push
stos
fmuls
mov
mov
stos
jg
mov
add
loopne
popf
xchg
mov
xor
out
push
ja
mov
push
mov
sarb
in
mov
icebp
xor
scas
movsl
shlb
lea
mov
xchg
push
cmc
cmovg
add
ss
in
mov
pop
pop
rolb
mov
fdivrl
jmp
popl
je
mov
ja
jne
cmp
cmpsl
cmp
pop
sbb
lods
fiadds
daa
dec
mov
testb
incb
inc
pop
xchg
repnz
mov
adc
inc
jmp
cld
fcomp
fs
push
cmpsl
sub
popa
mov
mov
adc
xor
fsubrs
pop
add
adcb
jno
je
inc
inc
inc
aad
pop
push
sbb
cld
clc
fwait
jge
dec
mov
add
outsl
popf
push
icebp
pop
cmp
mov
xchg
push
jg
mov
jnp
outsb
and
cld
movsl
or
xor
add
mov
jge
dec
mov
mov
jl
mov
add
or
call
lds
xor
xlat
mov
inc
inc
mov
jae
lods
mov
int
ljmp
imul
push
pushf
cmc
ret
int
ljmp
pop
popa
sbb
nopl
mull
mov
sub
mov
enter
or
aaa
lods
test
pop
out
iret
xchg
popf
sbb
cmp
xchg
sbb
dec
push
mov
mov
out
loope
dec
fsubs
js
pop
jns
cmp
cmp
and
jno
lahf
out
push
dec
in
shlb
and
sti
outsl
fdivrs
cld
incl
fldcw
addl
stos
push
leave
clc
xchg
stos
pushf
pop
pop
inc
mov
sub
call
xor
nop
gs
jne
jnp
xchg
sti
sar
inc
sub
popa
inc
mov
imulb
and
pusha
pop
dec
cmpb
sub
adc
cmp
pop
js
add
mov
out
sbb
cld
fimuls
andl
xchg
cmc
repnz
lahf
jecxz
xor
cmc
mov
fidivrs
jle
out
lods
aam
lods
aam
test
fiaddl
push
aaa
mov
shl
popf
inc
test
sub
cmpsl
data16
lret
dec
imul
imul
xchg
xchg
outsl
shlb
cwtl
or
arpl
jg
push
mov
test
inc
outsl
movb
pop
das
scas
addl
test
mov
cmpsb
xor
dec
jg
into
cmpsl
jbe
outsb
push
in
rcr
loop
jp
cmp
add
jmp
test
push
decl
out
les
or
push
sbb
mov
and
sbb
je
mov
or
xchg
in
cmc
outsb
loope
pop
fs
js
lea
jae
mov
push
clc
xor
inc
les
xchg
push
adc
mov
shrb
cmpsb
pop
aaa
repz
les
out
xchg
mov
jno
in
loope
dec
push
stos
and
sahf
test
int3
into
cmp
hlt
jg
and
fnstsw
xor
mov
mov
idivb
jg
and
xor
push
mov
lret
dec
xchg
mov
dec
add
ljmp
dec
add
outsb
cmpsl
add
xchg
or
push
outsl
scas
insl
fisttpll
push
shl
cmpsb
mov
ja
lods
xlat
and
cltd
cmp
out
mov
or
or
xor
ss
divl
out
test
mov
mov
mov
cmpl
cmp
pop
test
pop
lret
mov
push
iret
popa
repnz
lods
and
and
and
jbe
dec
movsl
cmp
dec
movsl
inc
lods
daa
gs
inc
push
cmp
sub
imul
test
lahf
fisttpll
imul
mov
cltd
add
push
nop
in
sbb
imul
mov
popf
sbb
mov
jg
imul
xchg
cmc
sbb
adc
or
xlat
mov
and
out
dec
arpl
rorb
out
fiadds
sub
pop
int
mov
ja
jno
pop
mov
movsl
scas
mov
popa
mov
sti
mov
insb
fadds
mov
or
ja
xchg
sbb
jl
jb
leave
nop
mov
or
adc
int3
pop
daa
stos
adc
hlt
ret
movsb
lahf
std
xchg
sub
sub
sbb
push
jmp
mov
mov
jecxz
faddp
and
mov
mov
xchg
or
sbb
xchg
js
mov
xlat
xchg
mov
sbb
pop
loopne
cmc
sti
sub
stc
shlb
popa
push
push
lods
mov
cmp
mov
pushf
cwtl
push
fs
lea
cmp
add
out
jo
out
or
xchg
ds
roll
or
jl
mov
pusha
pop
inc
ljmp
mov
push
jl
lds
sbb
in
fimull
dec
popf
mov
mov
in
pusha
imul
mov
push
icebp
adc
dec
mov
cmpl
mov
mov
xor
repnz
mov
sbb
xchg
shll
mov
jno
or
mov
jmp
out
pusha
cld
enter
mov
add
mov
les
into
loope
mov
call
test
scas
arpl
icebp
xor
sahf
insl
mov
and
sahf
ret
sub
xor
inc
fiaddl
push
test
lea
ja
or
pop
lods
not
add
loopne
dec
cmp
cmp
push
shll
jmp
jle
mov
or
shrl
add
mull
mov
cmpsb
aam
test
jmp
mov
mov
add
sbb
mov
leave
scas
loope
jae
ds
xchg
cli
mov
mov
dec
mov
imul
sub
push
adcb
and
dec
nop
cmp
cmp
or
in
xchg
mov
repnz
leave
jns
mov
push
mov
pop
mov
mov
add
pusha
scas
inc
inc
int3
mov
cmp
xor
or
jbe
mov
push
icebp
push
cmpsl
inc
xchg
and
stc
rcrb
orb
add
mov
push
clc
pop
shlb
imul
sti
test
bound
dec
xchg
xchg
mov
or
adc
jo
aam
adc
imul
dec
inc
push
test
mov
in
fs
jnp
insb
inc
sub
ror
inc
sahf
stc
jg
aam
and
add
sbb
cs
negb
mov
shr
ljmp
or
mov
add
add
and
pop
fisttpl
mov
jbe
bound
repz
cmc
inc
adc
sbb
pusha
leave
xchg
jecxz
fsubs
lret
sbb
pop
mov
data16
push
xor
or
lock
pop
les
mov
ljmp
push
ret
pop
add
xchg
cld
jbe
cmpl
test
call
call
push
or
jns
imul
movsl
fstps
and
xor
mov
fwait
xor
push
mov
movsb
fcoms
and
aad
shrb
xor
in
pcmpeqw
iret
adc
inc
or
bound
sbb
xchg
xor
push
je
pop
mov
imul
jmp
sbb
ffreep
mov
cmpsb
imul
cmp
dec
iret
pop
scas
lret
mov
and
xchg
imul
scas
xor
loopne
push
les
call
lret
dec
aas
mov
ja
lock
and
push
dec
sub
enter
rcrl
out
mov
call
inc
clc
call
push
pop
jnp
repnz
aas
iret
adc
add
es
ja
sbb
clc
mov
mov
or
pop
push
rorl
mov
add
insl
xchg
cmp
call
loop
aas
leave
frstor
xchg
rorl
pop
jnp
pop
add
ror
cmp
loopne
sub
and
loope
sub
cmp
ds
push
clc
out
jb
sbb
fdivs
iret
xchg
adc
cs
pop
ret
jg
addr16
xor
lahf
mov
scas
push
fsts
pop
xor
lods
ret
lret
nop
pop
dec
ret
ret
xor
dec
push
filds
rep
or
out
repnz
ret
cs
xor
mov
sahf
xchg
loope
ror
fldl
jb
and
pop
xchg
add
adc
push
inc
aad
mov
movsb
sub
adc
jo
stos
decl
data16
daa
xor
dec
cmp
out
out
ljmp
int3
jl
and
and
fisubrs
xchg
pop
xor
or
imul
push
adc
pusha
add
insb
sub
lret
das
sbb
daa
imul
aas
cli
nop
push
and
sbb
punpckldq
popf
stc
xor
inc
lods
int
sbb
sbb
cmp
int
test
outsb
pop
adc
fwait
inc
jge
pop
xlat
jl
gs
jns
scas
pusha
imul
mov
cs
dec
cmp
mov
push
das
cmp
outsl
jb
push
cli
push
or
jnp
dec
jns
xchg
mov
cmp
xchg
pop
mov
lea
jl,pt
push
sarl
dec
add
mov
shll
add
mov
mov
mov
lea
push
xor
sbb
mov
xor
aas
lret
mov
xor
cmp
jnp
data16
jle
test
negl
sahf
loop
fwait
dec
adc
adc
divb
push
mov
int3
cmp
das
sahf
cld
test
adc
cmc
mov
and
movsb
sub
or
jle
cwtl
hlt
adc
add
inc
aas
fistl
pop
sbb
fsubrl
mov
and
das
mov
test
cmp
leave
fisubrl
lds
out
mov
lds
lds
push
fbld
add
push
jo
nop
jl
andl
sbb
ja
sub
adc
lret
shl
mov
cs
jp
add
adc
sub
jecxz
mov
lahf
jle
jle
aaa
adc
sub
lds
daa
shlb
sbb
popf
xchg
lret
arpl
popa
stc
cmp
xchg
test
mov
push
jg
in
lret
hlt
mov
test
inc
stos
xor
sub
xor
or
aad
pop
iret
cmc
arpl
xchg
or
lahf
stc
add
push
cmc
sbb
add
test
lods
jg
xchg
fst
mov
mov
loopne
lret
push
xlat
mov
iret
lcall
aaa
insb
loopne
aaa
push
or
dec
and
adc
add
aad
cs
shlb
xchg
cmp
mulb
dec
push
push
jmp
add
mov
jns
sub
xor
pop
loopne
lahf
xchg
inc
xorb
add
shlb
fcmovnbe
dec
scas
pop
mov
mov
push
push
inc
inc
stos
lahf
cmpsb
sbb
xchg
jne
mov
imul
xor
iret
aam
das
inc
shll
add
dec
pop
movsb
fcomps
or
js
xor
js
fnstsw
clc
subl
add
add
jl
cs
ret
fsincos
inc
cmp
xchg
ds
iret
inc
test
call
inc
lds
addr16
into
aam
insb
mov
xor
add
inc
jl
xchg
into
fwait
imul
sub
nop
jo
dec
cmp
insb
jge
cmc
inc
inc
mov
fwait
cwtl
pop
sbb
pop
xchg
pop
or
cmp
mov
mov
adc
xlat
add
and
inc
xor
in
xor
or
add
out
mov
and
leave
xchg
loop
cmp
and
cmp
mov
roll
add
xchg
fs
cmp
jno
fildl
mov
mov
pop
pop
push
mov
out
ret
scas
sub
inc
aam
cmp
jo
iret
stos
fcompl
mov
sub
cmp
mov
arpl
mov
mov
pop
les
dec
and
cli
mov
push
pop
mov
test
jle
cmp
push
xchg
mov
and
out
test
xchg
xchg
sbb
rolb
pop
loopne
mov
push
aas
or
addr16
in
mov
mov
sub
neg
or
arpl
add
js
adc
lcall
jo
fs
sub
sub
dec
repnz
jp
and
mov
xor
ret
imul
inc
lea
cmpb
or
inc
ljmp
ficoml
rolb
cltd
jno
decb
inc
ret
adc
and
push
into
fisttpl
dec
cwtl
xchg
pop
mov
lds
rcrl
xchg
xor
pop
sub
call
sti
cmp
ds
jecxz
add
sbb
or
outsb
inc
pop
adc
push
mov
jae
nop
into
sbb
imul
xchg
movsl
cmpps
mov
cmp
pop
inc
pop
notl
mov
mov
cmp
cmp
mov
fwait
dec
sub
leave
mov
fwait
lods
hlt
enter
xchg
mov
dec
lods
push
mov
jne
mov
pop
lods
jecxz
and
pop
jp,pt
test
sahf
xchg
ja
mov
jmp
jecxz
vpaddusw
imul
mov
mov
inc
jg
in
addl
hlt
jo
lods
push
pop
xor
enter
icebp
roll
cmp
dec
out
scas
mov
stos
adc
mov
mov
call
insb
pop
mov
push
inc
daa
jl
pop
insl
mov
sbbb
add
ja
mov
loopne
out
aaa
sub
stos
push
movsb
mov
pop
ret
dec
mov
sub
jns
dec
into
mov
adc
enter
fsubrs
push
or
repz
sub
popf
scas
lds
js
pop
je
sub
loop
bound
lret
inc
mov
iret
ds
out
inc
fsubl
movsb
mov
fscale
aam
sbb
adc
stos
popa
loop
mov
sti
jecxz
daa
jbe
scas
lds
aam
jne
aas
enter
loop
sbb
jl
test
dec
aas
leave
int3
jge
pop
cmp
lret
sbb
stos
or
ret
scas
fidivs
fs
mov
out
pop
pop
fisubs
jp
aam
ljmp
sbb
adc
rolb
stos
ljmp
push
mov
sbb
dec
mov
push
cs
mov
in
or
nop
cmp
iret
repnz
pop
imul
add
das
jle
push
loopne
aam
pusha
mov
outsl
xor
ja
cmp
mov
iret
shr
insb
mov
dec
das
scas
out
add
jecxz
pop
addr16
ds
cli
daa
inc
mov
test
loope
or
xchg
jnp
sbb
es
ljmp
daa
fwait
jne
in
xchg
in
push
dec
add
xchg
push
ja
movsb
aas
data16
push
dec
add
fs
jno
popl
sarb
or
int3
lahf
cmp
bound
mov
sbb
orb
sub
stc
dec
jb
and
mov
adc
aas
pop
testl
jmp
pop
add
sbb
push
add
in
dec
mov
pushf
xor
dec
inc
rol
sbb
jp
pop
mov
incl
call
or
xor
sti
add
leave
push
push
add
dec
mov
or
pop
pop
pop
cmp
mov
pushf
lods
roll
mov
les
imul
add
add
es
test
rcll
sbb
mov
lret
stc
xchg
cmp
popa
mov
pop
sbb
lds
adc
cmp
push
shl
sub
test
cmp
mov
js
or
rcrb
mul
jmp
cwtl
aaa
ljmp
push
fs
out
sub
popf
fsubrs
push
mov
push
sub
sbb
xchg
adc
sar
dec
aas
mov
pop
sbb
mov
jp
inc
rcrb
inc
ss
xchg
lock
mov
in
notl
mov
pop
xor
mov
outsb
xchg
pop
cwtl
xchg
sbb
setle
call
jmp
pop
pop
repz
scas
fidivl
pop
sarl
fwait
sub
add
add
sti
dec
jns
mov
mov
fistpl
dec
inc
les
lods
push
cmp
xor
aad
aam
lock
pop
sbb
jle
add
mov
sbb
fidivrs
std
aaa
push
inc
popf
sub
push
xor
fwait
push
xor
push
sbb
fwait
outsl
push
xlat
pop
mov
or
paddsw
fwait
stos
xlat
xchg
push
mov
mov
cmp
lret
rorl
push
cli
int3
mov
outsb
jns,pt
xchg
mov
mov
inc
addb
sbb
cmp
ds
pop
pop
push
sarb
jle
jp
cmp
push
mov
pop
fimuls
xchg
cld
lods
jno
mov
or
cli
iret
iret
fstpl
dec
add
mov
daa
xor
or
dec
push
push
add
in
popf
clc
scas
cmc
inc
in
out
xchg
adc
push
xchg
sarl
cmp
or
pop
imul
jnp
push
int3
or
fsubrs
je
sbb
jge
arpl
enter
in
sub
rorb
dec
fadds
loope
inc
sub
jecxz
xchg
mov
push
inc
arpl
and
ja
lods
je
jmp
push
xor
and
lods
cld
mov
mov
push
xor
or
mov
sbbl
mov
mov
in
dec
xor
repnz
iret
pop
sahf
movsl
sbb
mov
sub
jl
push
xchg
jle
sub
cmp
arpl
xor
sub
inc
or
mov
sbb
mov
xchg
les
jo
imul
loope
xchg
push
sub
test
xchg
mov
jns
stc
test
sar
ss
xchg
xchg
rcrl
sub
xchg
or
lahf
mov
adcl
ds
xchg
sub
or
neg
sbb
pop
iret
test
pop
or
adcl
jno
dec
sbb
cmp
lea
add
mov
mov
or
call
mov
ret
xchg
les
inc
cmpsb
adc
sbb
jecxz
imul
or
or
stos
sub
push
mov
add
jmp
jno
sub
mov
pop
mov
push
fistps
outsb
sub
inc
ljmp
in
inc
xchg
and
cmpb
add
pop
inc
xorl
sbb
jge
mov
ja
hlt
cld
and
pop
bound
dec
mov
or
cmp
xchg
inc
inc
dec
icebp
mov
pop
fmul
sub
testl
enter
push
imul
mov
cmc
push
xor
clc
gs
and
fisubl
ja
sub
mov
xor
in
stc
and
repnz
mov
repnz
and
xchg
jecxz
adc
loop
data16
mov
sub
or
mov
add
es
mov
lods
scas
bound
xor
xchg
andb
adc
call
adc
iret
arpl
scas
push
inc
xorb
sbb
push
ljmp
test
pop
pop
out
loop
dec
cwtl
lods
fwait
cmpsb
ja
mov
stos
inc
sbb
insl
int
cmp
fdivl
ret
jle
ss
mov
dec
pop
push
adc
mov
sbb
shll
pop
shl
test
or
ret
pop
jmp
mov
mov
pusha
ficompl
imul
xchg
dec
push
enter
mov
mov
popf
lcall
repz
std
lret
bnd
jge
clc
sbb
testb
ds
push
cmpsl
rorb
xor
dec
pop
mov
je
lds
sbb
aas
stos
sbb
mov
xchg
add
jg
call
scas
jl
cwtl
sub
sbb
jmp
mov
dec
popa
and
pop
mov
call
arpl
loopne
mov
jg
pop
jl
mov
sbb
iret
stos
popa
or
and
sub
loop
mov
sbb
test
push
mov
aam
mov
fiadds
or
inc
imul
js
push
cmp
lods
pop
and
movsb
adc
xor
imul
lods
lock
add
adc
test
mov
test
int3
lds
gs
and
sub
dec
sahf
stos
and
push
sub
shll
mov
adc
cwtl
aas
aad
jle
mov
jmp
aad
es
loopne
daa
out
mov
out
pop
clc
popf
xchg
ljmp
or
sti
ret
das
mov
inc
lret
mov
mov
jne
cmp
jle
mov
add
in
push
push
leave
loopne
stc
mov
mov
outsb
adcl
adc
xor
in
pop
jmp
cmp
mov
sbb
adc
js
xor
mov
mov
dec
test
pop
stc
imul
outsl
pop
dec
or
dec
mov
xchg
pusha
mov
in
sbb
add
cmp
sub
js
mov
dec
pushf
or
popf
nop
mov
loopne
sbb
cwtl
inc
xor
and
push
aad
sub
xchg
push
xchg
shlb
xchg
add
insl
push
push
aam
hlt
lock
push
outsb
ja
imul
fimull
jo
cli
pop
xchg
call
mov
pop
arpl
movsb
lock
sbb
outsl
sbb
in
call
int3
adc
or
hlt
lods
sub
dec
jnp
sub
icebp
push
ja
push
test
mov
pop
mov
xor
hlt
cmp
mov
roll
cmp
ret
cmpsl
cmp
enter
mov
test
daa
loop
inc
mov
sbb
mov
cmp
adc
std
dec
fimuls
push
push
dec
pop
inc
aad
jg
fcomps
mov
push
leave
dec
add
test
mov
adc
xchg
rclb
add
imul
mov
mov
jge
jns
jmp
cmpb
test
mov
inc
push
xor
mov
pop
xor
add
or
jb
mov
sub
push
pop
enter
dec
cltd
cmp
gs
stos
pushf
mov
xchg
stc
or
out
cs
sti
xlat
sbb
call
jns
adc
icebp
mov
add
cmc
pop
mov
mov
push
cmp
mov
insb
jg
adc
add
ret
aas
sub
push
sahf
adc
mov
sbb
sbb
pop
aas
pop
sbb
pop
fadd
adc
mov
lods
icebp
xchg
inc
sahf
push
arpl
ljmp
test
push
nop
pusha
dec
xchg
adc
imulb
add
mov
hlt
adcb
cltd
xchg
xchg
popf
ficoml
mov
fmull
imul
sbb
das
mov
xor
or
pop
sbb
loop
imul
outsl
xchg
sbb
mov
xor
imul
imulb
je
scas
jg
fwait
mov
sbb
inc
sub
push
xchg
jge
inc
mov
cli
inc
push
mov
es
punpcklwd
gs
sti
jecxz
jb
inc
xchg
add
xchg
push
and
test
insb
fwait
xor
mov
sets
cmp
imul
jbe
xchg
mov
call
scas
jns
adc
iret
stos
mov
and
sbb
sub
icebp
xchg
test
gs
cwtl
push
sub
ja
mov
fwait
call
je
and
lods
mov
clc
int3
fisubrs
inc
xchg
andb
daa
mov
arpl
fstl
gs
inc
push
fdivrs
mov
hlt
inc
pop
stos
lock
and
cltd
inc
mov
add
not
mov
jno
push
lahf
or
cmp
sbb
fisubs
dec
and
in
jle
ja
mov
jo
cmpb
js
sub
jae
xchg
jae
pop
inc
jbe
insl
addr16
pusha
aad
jno
out
loopne
nop
sahf
pop
cs
cmp
pop
lock
push
mov
leave
enter
aad
cvtpi2ps
push
cmpsl
xor
jmp
cmpsb
cmpb
push
in
sub
pop
dec
loop
mov
cmp
out
daa
dec
cmp
mov
or
pop
or
cli
push
cltd
jo
adc
mov
dec
mov
seto
pop
sub
out
add
js
int3
fwait
mov
add
and
addr16
sbb
sub
pop
test
add
xor
aas
cmpsl
inc
popa
push
mov
pop
or
adc
ds
jge
scas
test
xchg
lahf
and
lods
inc
pop
push
roll
add
imull
lea
in
xor
add
lea
push
out
icebp
int
mov
sub
jo
adc
xor
jle
ljmp
std
or
scas
lret
mov
scas
and
cmp
jo
adc
add
aam
mov
bound
adc
subl
stos
xchg
iret
jo
cld
in
repnz
shrb
dec
jecxz
sti
ror
scas
adc
push
xor
mov
mov
addr16
mov
pop
jnp
pop
mov
ja
sti
push
fisubs
mov
loopne
mov
pusha
das
mov
xchg
pop
inc
push
sbb
popa
pop
jge
int
divb
mov
or
sub
cmp
setnp
cs
cmp
sbb
mov
adc
add
xor
scas
mov
adc
jae
add
lahf
xchg
fsub
aas
xchg
rcll
mov
mov
lret
sbb
xchg
rcl
rclb
add
xchg
xchg
inc
xor
pushf
mov
pop
xchg
mov
es
mov
std
xchg
leave
sub
loop
mov
add
cmp
or
call
cmp
hlt
cmp
xchg
pop
mov
pop
int
xor
mov
mov
test
mov
mov
mov
das
or
push
jecxz
cmc
dec
dec
xadd
sbb
ret
mov
test
scas
shl
pop
lods
lahf
roll
sti
sub
clc
mov
sbb
and
xchg
in
popa
sub
push
dec
pusha
mov
mov
in
xor
adc
push
lcall
push
pop
xchg
xchg
push
outsb
mov
xchg
hlt
push
ret
pop
fimull
dec
jns
shr
aaa
loop
cmp
cli
mov
mov
add
dec
imul
jmp
sbb
lcall
test
in
addr16
mov
insb
or
add
movsb
adc
dec
popa
inc
cmpsl
loop
inc
push
mov
add
cmp
cmc
test
push
and
or
inc
icebp
sahf
cltd
cmpsb
mov
in
ss
loopne
mov
out
cmpsl
inc
sub
imulb
incb
pop
or
and
push
jno
lock
pusha
pop
testb
andb
test
mov
cmc
pop
adc
jbe
std
loop
push
sbb
in
sarb
inc
lea
mov
int
in
push
lcall
out
or
dec
call
out
adc
emms
lods
inc
xchg
xor
or
scas
jecxz
mov
lea
mov
stc
fxch
fdiv
pop
repnz
mov
and
inc
test
lret
cwtl
mov
lret
stos
jl
call
outsb
sbb
pusha
cmp
and
pop
push
mov
mov
shlb
inc
shll
adc
xlat
pop
pushl
loop
dec
pusha
test
sub
cmpsb
icebp
mov
out
jecxz
out
icebp
pop
enter
and
push
jl
dec
adc
les
out
cmp
mov
mov
lods
into
mov
sub
roll
inc
jb
sbbl
cmp
cwtl
pop
push
mov
por
or
pop
or
cmp
test
dec
push
movsb
addr16
xchg
movsb
out
cmp
insb
outsl
inc
adc
or
sub
dec
scas
jecxz
hlt
inc
inc
enter
movsl
int
ljmp
inc
ret
arpl
pushf
lods
aam
das
or
mov
insl
mov
sbb
arpl
sbb
mov
dec
pop
mov
xchg
pop
fstpt
out
push
and
stos
sub
dec
inc
cmpb
lret
jae
sbb
add
shrl
lds
adc
adc
jge
push
cmp
shll
push
push
mov
mov
je
push
popa
pop
cld
fsubs
adc
repz
in
mov
dec
int
popa
cwtl
xor
adc
mov
cs
mov
lret
jae
adc
arpl
inc
add
jne
xlat
js
test
mov
cmp
scas
std
push
adc
mov
dec
push
xor
push
mov
adc
ljmp
cwtl
xchg
add
addb
or
push
sub
sbb
enter
mov
rorl
out
and
call
fsubrs
dec
or
xchg
shl
mov
lods
aam
add
es
add
cmpsb
sub
ret
and
lahf
insl
rcrb
add
add
in
xor
sbb
sub
lds
push
dec
stc
mov
push
sbb
outsb
xor
rcrb
mov
dec
jle
mov
sub
cmpsb
xchg
enter
mov
outsl
test
xchg
and
push
sbb
add
jo
sbb
push
sbb
adc
enter
jp
hlt
fwait
pusha
pusha
sbb
xchg
pushf
lcall
out
sub
cmc
jl
adc
cmpsl
or
js
ja
mov
ja
fbld
sub
push
bound
sbb
jp
outsl
ret
adc
fisttpll
mov
out
jns
testb
lock
inc
mov
lahf
inc
loop
adc
adc
lds
mov
inc
mov
lcall
push
push
cmp
ret
sbb
xchg
sbbl
lods
addb
mov
in
push
xchg
shl
in
sti
jbe
ret
push
dec
mov
mov
sub
outsb
and
mov
sub
add
fs
testl
ds
jecxz
pop
adc
mov
loop
pop
jg
adc
xchg
adc
lea
loop
jo
leave
inc
mov
jle
cmp
inc
sbb
push
pop
fdivs
out
inc
lock
cltd
push
int3
sbb
sti
cmp
sub
mov
sub
bound
out
cs
sub
pop
mov
push
aad
dec
cmpsl
cwtl
iret
dec
aaa
ds
cmp
cmpsl
pop
cld
pop
leave
cmp
loop
aad
push
or
dec
add
cmc
shrw
jo
or
dec
add
add
and
out
movsl
filds
loope
mov
xchg
jg
loop
scas
dec
sbb
push
or
adc
mov
daa
inc
ror
or
fs
jb
cs
shrb
dec
push
or
dec
xchg
lret
mov
xchg
hlt
pop
ljmp
pop
or
cld
insb
shll
aas
xlat
and
jnp
or
fistps
icebp
in
repnz
aam
out
add
or
push
cli
mov
pop
iret
mov
jg
dec
iret
push
jnp
insl
push
roll
pop
cmp
or
mov
repnz
pusha
dec
adc
std
jle
out
ficomps
xchg
pop
pop
dec
xchg
add
mov
lods
mov
jecxz
orl
fcomp
push
pushf
in
and
and
xchg
daa
dec
xchg
pop
cmpsb
fwait
mov
inc
inc
es
inc
adc
loop
adc
and
loopne
sbb
add
add
aaa
lods
add
es
in
cmpsb
leave
mov
jge
enter
sbb
adc
sub
pop
std
xor
xchg
shrl
and
lock
xor
pop
xchg
inc
inc
push
sti
cmpl
lret
mov
add
xor
test
insl
enter
xor
subl
leave
sub
mov
ja
arpl
inc
and
fucomip
test
shlb
xchg
jbe
popa
pop
bound
adc
add
ds
cs
hlt
in
loop
adc
pop
and
fmul
out
mov
dec
jl
loopne
popf
xor
into
rcrl
xor
and
cs
push
lcall
inc
and
jnp
jne
sarb
adc
pop
outsb
jl
adc
fcoml
mov
adc
shlb
cwtl
test
les
and
lds
or
out
add
xchg
mov
add
xchg
sub
scas
cmp
js
sbbb
call
push
aad
fwait
push
xchg
mov
jns
jmp
repz
pop
cmp
mov
in
sarl
pop
insb
fstpt
into
sub
inc
mov
aaa
pushf
imul
xor
cmpsb
xor
loopne
sarb
sahf
or
shlb
jnp
and
jo
subl
in
fmul
sub
adcb
aad
inc
xchg
mov
nop
mov
into
roll
hlt
jb
mov
sub
xor
xor
imul
jno
push
loop
sub
into
rcl
dec
pop
mov
mov
jae
ss
pop
mov
insl
inc
sbb
loopne
cwtl
jmp
or
xor
loopne
lahf
push
mov
fcomip
pop
jg
jbe
sti
xchg
mov
test
cs
lods
ja
imul
push
cli
add
sbb
lret
mov
sub
js
scas
jecxz
xor
aaa
je
lock
pop
or
popf
leave
shlb
ss
adc
mov
test
repz
scas
jne
inc
mov
lcall
or
aad
cmp
cmpb
adc
mov
push
cmpsb
fcompl
xor
add
mov
push
shl
sbb
out
adc
gs
pop
sbb
sub
inc
or
daa
xor
or
cmpsl
jg
adc
push
jb
and
sub
pushf
inc
adc
xchg
iret
mov
mov
maskmovq
mov
fadds
dec
aam
xchg
inc
push
jbe
ds
fstpl
testl
inc
pop
xchg
test
test
xchg
sti
cmp
inc
in
pop
clflush
mov
mov
nop
add
cmc
xchg
sarl
not
push
add
outsl
xchg
jno
imul
mov
mov
in
mov
fwait
subl
lret
aad
fistpll
and
mov
xor
sbb
call
mov
sub
ja
out
inc
adc
fidivrl
idivb
mov
inc
mov
stc
inc
test
dec
ss
xor
negb
mull
int3
or
sub
dec
or
pop
pop
xor
test
mul
loope
push
lea
js
cs
and
lock
mov
ljmp
mov
ljmp
lea
imul
or
nop
test
dec
fwait
sbb
call
mov
shrl
sbb
push
popf
xorb
roll
push
rol
xor
sbb
mov
jo
out
jbe
cli
outsb
lcall
sbb
xchg
mov
sbb
ret
nopl
xor
sub
enter
pop
pop
push
ret
enter
mov
cmc
rcrl
xchg
pop
push
cmpsl
sub
call
mov
leave
and
adc
inc
mov
hlt
push
lcall
pushf
xchg
inc
insb
mov
test
pusha
xlat
orl
push
xchg
or
jmp
add
or
push
dec
pop
sbb
addl
mov
cltd
popa
push
das
aad
or
ret
pop
movsl
inc
pop
fsubs
ss
inc
in
scas
add
xlat
mov
gs
add
push
sbb
pop
or
push
test
out
jne
adc
and
push
cmpsb
or
in
jno
mov
in
dec
lock
ds
add
jnp
adc
xchg
in
fcomip
lock
sub
jnp
icebp
negl
aam
test
lods
or
cmpsl
lret
pop
inc
std
xchg
movsb
ret
mov
in
clc
cmp
enter
push
pop
or
dec
insl
push
and
pop
push
sbb
sbb
cld
pushf
mov
stos
leave
dec
mov
lock
adc
inc
jl
fcoml
jno
xor
cmc
jg
jecxz
or
cmp
dec
repnz
mov
imul
push
sub
and
mov
push
or
je
push
add
dec
inc
test
test
outsb
sbb
jge
dec
loopne
mov
std
jmp
mov
cmp
daa
addr16
int
xchg
sbb
test
cmp
xor
lret
iret
faddl
xor
es
cmpsb
aaa
jno
add
loope
cmp
dec
cmp
pop
enter
pop
sub
mov
pop
pop
jmp
sbbb
add
sbb
push
fcoms
push
call
adc
scas
sub
xchg
mov
mov
orb
add
psadbw
sub
inc
add
sub
mov
inc
lock
pop
out
jge
out
add
xor
adc
cli
xor
das
sbb
dec
test
rclb
xor
fisubl
mov
cs
stc
ja
test
leave
sub
repz
adc
inc
push
mov
jb
ret
mov
das
or
stos
xor
mov
iret
rcr
psubd
push
sub
inc
add
insl
pop
adc
jne
sahf
sbb
or
stos
aaa
cs
aam
out
push
and
push
into
push
mov
inc
bsr
popa
sub
adc
rolb
or
lret
add
pop
imul
xchg
adc
add
sub
jne
stos
push
cmpsl
movsb
aaa
fwait
jnp
sub
lods
inc
shll
inc
out
rol
and
lds
or
push
mov
add
xor
xchg
or
or
or
mov
ret
sbb
cs
and
hlt
pop
out
test
dec
pop
in
enter
dec
xor
mov
push
imul
jle
scas
pop
sbb
xlat
sub
lahf
mov
clc
insb
xlat
xor
das
hlt
mov
cli
inc
mov
add
int
aaa
pop
xorl
rcl
stc
sbbb
mov
sti
pop
pop
jg
aaa
mov
call
jp
push
mov
mov
int
aam
and
cmp
scas
push
mov
cmp
mov
addl
add
push
xchg
call
inc
adc
pop
ret
xor
lahf
cmc
fwait
mov
out
cmpsl
xor
push
jb
jnp
cwtl
dec
jecxz
dec
push
mov
scas
dec
jl
pop
cmp
gs
mov
sub
inc
cli
adc
mov
inc
pop
ret
push
sub
popa
sub
std
cwtl
imul
mov
cld
fwait
movsb
and
repz
mov
pop
dec
mov
add
and
ret
sbb
sbb
or
loopne
push
aad
add
cmp
inc
cmp
push
push
popf
lret
push
lcall
loope
fsts
cmp
push
adc
xchg
ret
jmp
scas
fnsave
and
mov
int
dec
lods
adc
xchg
mov
icebp
pop
roll
cmc
ds
cli
dec
xchg
in
sub
mov
and
in
or
cmp
test
int3
imul
push
push
call
add
xabort
mov
jp
movsb
out
pop
add
std
fiaddl
insl
in
test
int3
in
int3
loope
idivl
dec
jle
mov
scas
fwait
dec
rorl
mov
adc
sbb
inc
inc
icebp
cmp
test
pop
push
xor
into
stos
insl
fsubs
addr16
cld
das
adc
mov
cmpsl
mov
pop
fistps
mov
sahf
add
ficoml
and
cmp
in
pop
lcall
mov
not
jo
pop
xchg
mov
sbb
imul
mov
cltd
adc
xlat
jecxz
in
xchg
xacquire
test
cmp
adc
lods
pusha
mov
bound
xchg
stc
in
fidivl
mov
fsubrl
pop
xchg
lret
loope
xchg
in
jecxz
cmpsl
pop
mov
inc
sbb
sbb
xor
int
or
mov
lret
in
push
sbb
loope
dec
scas
test
jecxz
cmpsb
int
pop
or
lret
dec
mov
shrl
popf
imul
inc
jns
in
lret
mov
jle
lods
jecxz
sbb
stos
adcb
xor
fsubrl
or
lret
mov
cld
adc
or
inc
mov
fwait
mov
xchg
xchg
jg
es
arpl
sbb
sbb
in
add
cmp
test
addr16
enter
jno
enter
cmp
jns
or
mov
movsb
pusha
lret
pop
sbb
sbb
les
cld
mov
mov
imul
mov
push
jnp
add
xchg
scas
jle
jecxz
into
call
mov
es
sti
mov
mov
add
addr16
lea
aaa
xor
push
sub
mov
add
add
inc
inc
and
popf
jo
subl
jbe
xchg
mov
mov
sub
sub
hlt
sbb
int
sub
add
xchg
push
inc
push
insl
dec
and
cmp
hlt
insb
shrb
jle
add
pop
push
in
imul
sarb
das
and
aam
les
pop
adc
fs
push
xchg
xchg
xor
xchg
das
dec
sbb
push
jb
aad
lcall
or
fwait
and
mov
pop
add
nop
cmp
jnp
shl
aad
je
dec
cmp
loope
fnstenv
adc
push
fcomps
inc
outsb
dec
mov
pop
adc
jp
dec
rep
out
mov
repz
test
scas
pop
or
lods
adc
pop
dec
mov
bnd
cld
xlat
mov
mov
jnp
push
arpl
sub
push
sbb
xchg
lcall
int
xchg
and
jbe
and
jmp
push
jo
and
pop
rcr
or
test
int
lret
insb
mov
outsl
jne
dec
xchg
xor
out
pop
cmp
jge
scas
fstpt
in
adc
js
xor
cs
lcall
inc
fwait
aad
lahf
int
dec
iret
jge
add
cmp
adc
mov
add
pop
outsb
jge
and
cli
enter
or
and
add
enter
lret
jge
push
mov
push
jns
cmpxchg
and
mov
sahf
xor
sti
pop
movb
xchg
mov
adc
je
add
ds
dec
mov
mov
sub
xor
or
leave
lret
das
stos
not
add
mov
or
movsl
mov
leave
test
inc
je
lock
mov
ficoms
mov
jns
popa
int3
lock
ljmp
or
fimull
into
and
mov
mov
mov
mov
std
jbe
fbld
xchg
ret
sbb
mov
jg
push
aas
out
dec
inc
mov
lahf
lea
sbb
test
ficoms
jnp
loop
push
add
push
mov
xor
imul
ja
cmp
jne
jmp
pushl
cltd
add
push
jge
jae
fcmovb
lret
mov
push
repnz
imul
lahf
pop
or
inc
movsl
out
cld
in
sbb
in
adc
xor
push
fldl
fbstp
mov
outsl
sub
jnp
into
inc
aaa
sarb
insb
xchg
dec
jp
pop
insb
cmpsl
pushf
out
mov
lods
je
push
ss
pop
inc
fbld
sbb
pusha
pop
xor
jecxz
scas
nop
jle
scas
pop
jle
adc
std
push
cli
xchg
inc
adc
in
pop
add
adc
andl
repz
lds
cmp
cltd
dec
mov
data16
lds
mov
sbb
jo
int3
lock
pop
and
jnp
jl
ja
mov
cmpsl
bound
cmpsb
arpl
push
sbb
mov
daa
pop
mov
cmp
dec
addr16
xchg
cli
in
cmc
jmp
lock
cwtl
loope
repz
or
dec
pop
out
int3
xchg
dec
icebp
jle
add
sbb
inc
inc
repz
pop
add
movsb
xchg
cmp
sbb
xor
mov
in
ret
sub
sbb
xchg
xor
pop
mov
testl
pop
loopne
push
xor
stc
and
iret
insl
inc
lds
test
clc
inc
fwait
loope
push
fimuls
add
loope
aad
push
mov
cmpsl
rorb
out
popa
or
sbb
lods
sbb
stos
test
mulb
and
mov
push
gs
fmul
bound
pop
push
test
xchg
int3
xor
dec
negb
shlb
jbe
repnz
cmp
lcall
jp
in
jle
dec
push
rcrl
cmp
jns
dec
add
fdiv
shlb
cmp
cmpl
iret
sbb
mov
or
imul
add
push
sets
addr16
sbb
sub
jns
cld
adc
adc
cmp
imul
push
add
sbb
mov
sub
or
sahf
add
dec
iret
lods
pop
insb
pushf
in
pop
push
lock
fcmove
rcrl
mov
ret
push
jnp
add
push
or
stc
or
das
dec
hlt
xchg
inc
mov
mov
fcmovne
jecxz
mov
loope
mov
xor
stos
mov
adc
add
es
xchg
inc
cmp
jnp
sbb
dec
add
xchg
daa
jmp
xchg
sahf
sbb
and
dec
sub
imul
insb
jnp
fmull
add
addr16
mov
adc
dec
sbb
push
xchg
lock
mov
mov
inc
jne
push
sub
popf
jecxz
in
out
push
and
mov
inc
loop
inc
lahf
dec
pop
ljmp
bound
jg
aaa
cmp
enter
lahf
jo
iret
sbb
sub
inc
icebp
xchg
call
daa
jbe
stc
sub
xchg
rclb
dec
test
orb
push
ds
rorl
xor
xchg
xchg
push
xor
pop
add
clc
inc
or
inc
aad
inc
sub
lahf
mov
in
push
or
and
inc
xor
cmpsl
inc
mov
ret
gs
es
sbb
hlt
xchg
out
lods
subb
mov
arpl
in
and
inc
xor
mov
push
adc
outsb
imul
cmc
mov
dec
sub
cmpsb
mov
xor
mov
in
sbb
iret
hlt
neg
outsb
movsb
mov
push
enter
dec
inc
in
sarl
cmp
shlb
jmp
cmp
aaa
adc
ss
xlat
jne
mov
pop
push
adc
add
xchg
jnp
scas
nop
enter
push
lods
rclb
pop
out
lds
mov
dec
mov
cmp
mov
mov
inc
pusha
ret
adc
pop
fldt
push
xor
push
int3
scas
js
divb
pop
sbb
js
mov
bswap
jae
test
out
xchg
xchg
loopne
adc
add
movsl
adc
xchg
push
ret
mov
cmp
fs
movl
mov
sub
xchg
cli
aas
xchg
push
ds
xchg
push
cmp
jp
xor
cmp
stc
push
ret
ds
dec
and
data16
cs
dec
xchg
andl
loop
stos
or
jmp
inc
mov
int3
push
adc
mov
xlat
aas
xor
sbb
adc
lods
dec
addr16
add
das
dec
test
push
sub
cld
xlat
movsl
icebp
fistl
mov
repz
jnp
aas
lock
cmc
cwtl
mov
xor
iret
mov
xchg
shll
call
cltd
lcall
xchg
sbb
mov
lahf
sbb
aad
mov
lahf
fwait
sbb
lock
mov
push
cmc
arpl
inc
jb
enter
ljmp
mov
mov
mov
cmp
xchg
push
cmp
cmp
push
addr16
fimuls
xchg
dec
iret
inc
or
cmpsb
leave
stc
adcb
fmuls
sbb
scas
bound
or
fisubs
aaa
push
pop
mov
dec
ror
fs
inc
pusha
xlat
lahf
adc
std
sbb
hlt
shlb
add
add
jl
xchg
mov
mov
aam
cmp
lods
xorb
xor
push
popf
push
ja
cmc
xchg
add
lds
jnp
lea
xchg
xor
sbb
push
or
popa
sbb
test
out
aam
arpl
ret
xchg
into
add
sub
and
lret
fistps
adc
mov
mov
outsl
or
xchg
mov
pop
jne
inc
inc
add
cmc
mov
mov
sub
push
paddw
xlat
icebp
bound
cmpsb
pop
sarb
leave
adc
pusha
movsb
mov
push
xchg
icebp
and
adc
shrb
jo
cmc
inc
in
adc
pop
mov
dec
sbbb
repz
bound
idivl
mov
pop
inc
gs
lods
jbe
idivl
cltd
mov
push
mov
lods
xor
push
fstl
push
pop
fs
sbb
xchg
lods
inc
pop
xchg
or
repz
in
movsb
add
addl
push
and
mov
cmp
shl
jge
sbb
pop
ja
insl
js
xchg
adc
es
xchg
scas
outsl
mov
mov
or
jne
pop
or
jmp
loopne
cmp
data16
fbstp
push
sbb
rol
push
mov
sub
nop
dec
add
and
andb
rorb
mov
clc
xchg
test
test
mov
push
cltd
pop
push
popl
mov
andl
nop
adc
repnz
and
sub
dec
mov
push
out
fdivrp
pop
sub
or
insl
nop
lods
or
xchg
mov
push
aas
push
xor
jno
cmp
push
mov
jb
jmp
out
mov
dec
xchg
push
dec
inc
mov
divb
inc
jae
fidivs
xchg
adc
adc
scas
test
pop
xchg
cld
mov
lods
jb
inc
repnz
insl
add
cmp
and
outsb
stc
adc
into
movsl
scas
sbb
insl
sub
lds
frstor
dec
mov
aas
or
fdivrl
cld
mov
mov
pop
int
mov
jmp
mov
test
and
jae
inc
xor
push
ficompl
cld
inc
pop
sahf
shrb
jl
sbb
idiv
testb
cmp
shlb
and
cmpsb
push
imul
cwtl
ret
jge
adc
pop
push
fucomi
adc
xchg
push
sbb
pop
jp
pop
mov
push
and
mov
lods
jbe
aas
mov
sbb
sbb
inc
cmp
adc
mov
dec
aaa
push
aad
mov
andb
lret
notb
inc
or
mov
repnz
mov
popl
cmp
push
outsl
loope
ss
push
sbb
mov
adc
outsb
nop
mov
pop
ret
test
and
outsl
lods
mov
xchg
scas
adc
dec
xchg
pusha
call
or
fsubl
jns
and
xchg
fists
clc
cld
jns
xchg
cs
pop
lock
js
xchg
xor
jp
push
mov
xchg
data16
shrb
sub
aam
pop
pop
lahf
add
jl
cmp
dec
xchg
jbe
lahf
stos
cs
mov
and
mov
or
ljmp
test
insl
out
dec
fwait
xchg
sub
cmc
test
sbb
xlat
push
mov
je
out
mov
addr16
scas
mov
pop
mov
xchg
aas
pop
dec
and
or
sbb
daa
insl
int3
sbb
xchg
lock
dec
int3
sti
int3
mov
pop
sub
mov
out
outsb
dec
mov
out
mov
test
in
aaa
in
xchg
lret
mov
mov
jecxz
sbb
ret
mov
xor
sahf
cmp
sbbb
aam
and
ljmp
push
or
addl
test
dec
dec
lcall
test
imul
inc
mov
test
and
lock
nop
pop
aad
in
lea
sub
pop
add
es
jne
adc
jmp
outsb
xor
cli
decl
lea
leave
sbb
dec
negl
popf
sbb
xchg
loope
es
mov
in
fidivrl
outsb
arpl
jmp
mov
jp
sub
fldt
mov
pushw
pop
rclb
stc
ds
popf
xor
lcall
jae
inc
sub
idivl
push
in
mov
push
sub
xchg
fs
push
adc
ja
cli
dec
hlt
lcall
xchg
mov
inc
cmp
jne
pushl
in
dec
mov
push
pop
mov
inc
arpl
push
gs
fisubrs
jecxz
into
push
push
pop
add
loop
sub
push
xchg
push
imul
fildll
push
dec
dec
dec
fcmovbe
adc
stos
frstor
dec
mov
and
shlb
dec
sbb
in
pop
or
je
dec
or
lahf
push
pop
in
dec
loopne
dec
dec
add
bound
in
insl
adc
fbstp
jns
dec
jl
pop
rcrl
ja
stos
pushf
and
dec
lods
sbb
mull
imul
and
outsb
sub
pop
fs
inc
int
fldl
push
loopne
mov
dec
push
xchg
and
ja
imul
and
push
push
dec
lahf
pop
leave
pushf
in
or
cli
mov
lret
adc
flds
leave
adc
lods
xchg
push
pop
sub
or
into
and
mov
cmp
cmp
shr
mov
adc
popl
push
cmp
pop
xorl
or
mov
mov
xor
popa
jg
xchg
xor
fcoml
and
ss
cli
sub
xlat
ret
xchg
mov
shll
mov
push
loopne
loop
js
add
test
cmp
daa
sahf
insl
subb
orl
imul
scas
inc
mov
inc
pop
add
mov
int
fimull
int3
gs
rcrl
cli
test
and
mov
ja
daa
hlt
sbb
jmp
mov
shrb
mov
dec
jecxz
addr16
stos
push
roll
adc
xor
inc
push
adc
mov
lea
jns
fmul
rolb
jns
adc
mov
xchg
jmp
ret
lods
cmpsb
or
and
xor
leave
mov
pushf
jmp
pusha
cmp
rcl
mov
xor
addr16
mov
sbb
fnstsw
ret
sbb
hlt
add
insl
dec
in
aam
mov
adc
push
jbe
dec
lock
push
xlat
cmp
repnz
incl
insb
movsb
push
jp
mov
fcomps
cli
movsl
movsb
lea
fs
cmp
sahf
orb
scas
aam
or
mov
xchg
inc
xchg
pusha
mov
cs
dec
pop
mov
mov
loopne
push
jae
mov
jmp
addb
mov
sahf
pop
add
pushf
les
jg
or
jno
push
sbb
lock
mov
add
or
jns
xor
dec
xchg
add
xor
popf
fst
aam
add
jl
dec
push
inc
xchg
pop
nop
add
push
sbb
sti
aam
fwait
jb
mov
lods
xchg
and
adc
mov
es
pop
psubsb
and
stc
push
adc
nop
or
test
sahf
sbb
aad
cmc
xor
aad
pop
xor
mov
add
jno
daa
pop
aaa
jmp
out
inc
cmp
shll
clc
scas
jle
test
jbe
cmp
mov
shlb
dec
xchg
xlat
xor
inc
sub
jp
cwtl
mov
inc
imul
es
mov
cmpsb
int3
fldl
call
fwait
and
or
orb
push
rorb
xchg
cwtl
mov
lahf
andb
xor
or
xchg
outsb
stc
mov
xchg
jl
sbb
insl
add
adc
sbb
clc
divl
dec
scas
inc
add
jl
jbe
bound
popf
mov
xchg
or
jg
sbb
xchg
movsl
xor
dec
dec
adc
sub
mov
rcrb
lahf
jnp
jmp
push
or
je
mov
add
adc
fcmovnu
fidivrl
shll
cs
mov
pop
rep
js
das
lock
nop
inc
add
or
pop
aaa
jnp
call
rcrl
adc
cmp
or
and
mov
dec
stos
test
ljmp
sub
cltd
lock
add
popa
dec
jecxz
test
out
testb
lret
iret
lods
dec
xor
movsb
mov
push
in
pop
test
icebp
lcall
pop
rcll
push
test
pop
fiaddl
jbe
imul
in
sbb
lods
xchg
sub
xor
mov
inc
div
pop
and
dec
repz
fldcw
add
jns
in
push
push
icebp
sahf
mov
stos
mov
cltd
addr16
in
pop
out
adc
lret
mov
mov
sbb
mov
out
notb
loopne
int3
xchg
int
aam
mov
shlb
icebp
xor
mov
shll
mov
mov
mov
mov
jg
daa
inc
addr16
and
xchg
cmp
ret
sbb
dec
mov
cmp
mov
xacquire
mov
int3
inc
icebp
jge
lea
outsl
aaa
push
or
jno
jle
sub
insl
push
add
std
in
pusha
pop
add
lret
ror
inc
sti
hlt
in
ja
in
sbb
cmpsb
push
jmp
test
or
or
cmp
mov
push
cmp
fmul
adc
dec
les
into
mov
fld
or
or
push
pop
daa
inc
mov
cmp
stc
aas
scas
imul
sbb
dec
nop
dec
mov
xor
mov
inc
sub
fildll
or
push
icebp
cmp
popf
test
mov
idivl
add
push
setno
jecxz
sbb
movsb
cmp
fwait
push
cld
sub
mov
dec
lret
in
fcompl
cmpsb
xchg
mov
js
movsb
adc
fnstenv
dec
cmp
hlt
jmp
scas
xchg
pushf
adc
mov
mov
add
stc
sub
jecxz
push
outsl
test
rolb
xor
jecxz
adc
arpl
call
dec
jae
rcrb
mov
inc
icebp
xchg
outsl
js
xchg
inc
nop
mov
mov
je
cmp
jle
jns
and
into
xchg
pop
test
cmp
pop
cli
mov
imul
pop
movsb
mov
fmull
arpl
jmp
jp
je
jmp
jbe
add
sbb
adc
iret
int3
jmp
lea
gs
mov
loope
iret
int
pop
pop
das
mov
repz
jno
fmull
pop
add
jecxz
xchg
test
sub
test
pop
lds
ss
cmpsb
das
inc
rcl
shl
outsb
dec
jne
inc
das
jb
xchg
inc
xchg
adc
dec
push
movsl
xor
data16
mov
sbb
out
jo
dec
jle
lret
mov
pop
leave
mov
sbb
mov
lods
es
fadds
adc
jp
in
std
sub
inc
add
ficoml
fsubp
aam
sub
inc
cmp
or
orl
pop
mov
add
inc
rcl
and
cmp
adc
lcall
rcll
outsl
pop
scas
push
mov
out
inc
sbb
sub
pop
addr16
insb
sbb
bound
cmp
xchg
stc
negb
mov
loope
shrl
jo
sub
aaa
xchg
out
push
push
lea
lcall
cmp
ror
out
ds
lds
addr16
push
mov
lretw
mov
data16
mov
sbb
xor
inc
fs
inc
rcrl
dec
mov
pop
jmp
cmp
mov
inc
dec
out
xchg
pop
adc
sub
cmp
testb
xor
xor
pushf
xchg
lods
ret
jbe
push
lds
shll
test
repz
cmpsb
notb
fs
andl
mov
aas
or
push
jo
xchg
inc
loop
rclb
out
mov
pop
dec
xor
icebp
les
jb
sbb
jbe
cmp
mov
jmp
loopne
cmp
pop
loopne
fs
repnz
loopne
in
mov
xor
mov
lds
loopne
cmp
stc
xchg
mov
stc
ljmp
addl
add
or
jp
and
push
dec
aad
shlb
movsl
sub
jl
rolb
inc
idivb
inc
adc
and
cmp
inc
ret
mov
aad
mov
xor
pop
outsb
pop
call
pop
testl
dec
cli
loop
xor
and
mov
scas
inc
fs
lahf
stos
xor
cmp
das
xlat
or
jl
inc
cmpl
arpl
je
leave
loop
pop
mov
aas
ja
jne
mov
stos
and
movsb
adc
adc
sbb
fiaddl
or
cwtl
adc
ss
arpl
xorb
add
clc
xlat
stos
fucomi
xchg
loop
nop
les
xchg
enter
sbb
lds
jg
jge
data16
js
clc
cmp
clc
out
jmp
cmpsl
nop
push
pop
pop
daa
push
ss
mov
dec
ja
or
pcmpgtw
adc
fstps
adcl
add
fistps
xor
sbb
fmull
lret
iret
test
mov
aad
insl
aas
sub
push
out
cmpl
dec
testb
and
ficomps
cwtl
cmp
vpmacssww
jo
push
jle
pop
add
xchg
popa
sbb
sub
fnstenv
mov
xchg
repz
sbbl
cmpsl
pop
jg,pt
cmc
fiadds
push
inc
js
in
fisubrs
out
iret
inc
cmc
lret
add
icebp
ds
aad
mov
mov
mov
mov
add
mov
cs
mov
das
in
int
pop
cltd
xor
dec
sbb
pop
jne
inc
jae
mov
imul
mov
das
sbb
push
ja
pushf
xchg
insl
pcmpgtb
push
inc
pop
popf
inc
inc
inc
outsb
sbb
mov
aam
pushf
dec
loop
sub
sbb
adc
repnz
cmpsb
fldt
rorl
jge
push
mov
xor
shlb
enter
push
dec
pushf
inc
push
fwait
xchg
outsb
mov
ds
cltd
test
sub
mov
fdivrl
pusha
js
lods
mov
xchg
push
push
movsl
out
push
pop
xlat
pop
test
mov
inc
aad
ret
xchg
testl
loop
repnz
repz
sbb
test
cwtl
negl
or
lock
push
aaa
sub
iret
and
add
ljmp
clc
gs
pcmpeqw
aad
mov
add
push
add
mov
add
stc
add
sahf
sub
test
mov
std
sub
pop
cwtl
lret
cs
scas
push
mov
jl
jne
mov
mov
cmpl
xor
adc
jb
int3
adc
pop
xchg
fs
jb
into
dec
popf
mov
roll
dec
mov
clc
adc
xchg
loopne
add
mov
jno
scas
lods
mov
mov
cmp
jne
clc
in
push
aaa
das
leave
cs
shll
sub
jnp
add
add
mov
mov
inc
test
fdivrl
add
pop
add
cltd
mov
pushl
in
cld
aaa
or
inc
adc
rcrb
shlb
loopne
cmpsb
movsl
ret
lahf
inc
int3
fmull
mov
cwtl
mov
xor
stc
neg
insb
outsb
dec
adc
notl
cmpsb
std
and
xor
jnp
xor
add
pushf
lods
xchg
loop
sbb
fwait
jae
pop
scas
clc
insb
jg
push
adcb
push
add
outsb
nop
pop
adc
push
test
jae
or
cmp
ret
jb
sub
imul
stos
pop
xchg
mov
inc
sahf
or
cwtl
out
push
xchg
mov
repz
ret
inc
ror
push
adc
cltd
lds
sub
stos
add
cmp
inc
mov
xchg
rorl
arpl
push
mov
rclb
sbb
fisubrl
dec
xchg
ljmp
sbb
pop
arpl
andb
orl
in
add
dec
push
int3
std
xor
and
xchg
fwait
inc
sar
test
call
jae
push
sbb
mov
jecxz
cmp
daa
jge
enter
or
enter
sti
out
sub
and
adc
test
cmpsb
mov
sub
dec
dec
push
lods
xor
xor
dec
push
ljmp
mov
cs
orb
mov
sbb
aad
loopne
lret
cmp
dec
sbb
sub
mov
mov
arpl
loop
dec
in
rcrb
cltd
loope
push
adc
and
add
inc
mov
xor
outsl
sarl
ss
enter
xchg
into
xor
in
ret
push
mov
push
lret
in
xchg
mov
clc
jp
pop
js
das
mov
xchg
loope
dec
jns
ds
pop
int
loope
hlt
mov
push
lock
cmc
das
lock
push
lods
in
jbe
arpl
outsl
fs
aaa
pop
data16
insb
dec
sbb
popa
lock
shlb
mov
inc
dec
cmp
sarl
call
shll
movsl
jb
loop
lds
push
call
jbe
daa
enter
xchg
mov
idivl
add
jp
mov
ja
in
loop
or
sub
adc
push
call
and
push
lods
mov
xchg
adc
push
xchg
jbe
repz
pop
inc
outsl
cmp
inc
fisttps
pop
jg
jmp
sub
cmpsb
mov
aaa
ret
adc
cmp
jl
inc
pop
push
pop
push
sub
add
push
push
add
sarl
add
ljmp
push
jl
sbb
sub
pop
repnz
testb
imul
push
mov
daa
push
jl
sub
leave
or
sbb
sbb
xor
pushf
cld
fsubrl
sbb
int
xchg
pop
lea
jno
dec
jne
and
rcr
adc
inc
sahf
xor
out
roll
rclb
mov
mov
in
mov
cmp
push
mov
dec
adc
push
inc
outsb
outsb
sti
inc
sbb
mov
inc
jo
xchg
aam
sub
sti
mov
xchg
cmpsb
inc
dec
cmp
inc
add
and
xchg
or
fisttpl
pusha
pop
sahf
jl
daa
lea
bswap
sub
pop
sbb
push
adc
or
loopne
clc
rcr
aaa
mov
in
test
sbb
movsl
push
jnp
scas
mov
push
leave
jnp
inc
lods
pop
rol
cmpsb
xlat
bound
scas
push
sub
sti
mov
aaa
add
out
stos
lea
jle
test
imul
mov
pop
popa
xchg
jp
xor
je
push
sub
mov
add
cmp
daa
xor
sub
jbe
jb
push
test
add
out
jecxz
loopne
mov
leave
shr
adc
aaa
xchg
int
and
addr16
push
and
pushl
and
jl
test
imul
adc
cmpsl
pop
mov
das
fistpll
rolb
add
cwtl
inc
push
jae
push
xchg
sbb
stos
shlb
push
xchg
cltd
jg
jo
mov
stc
lods
xor
scas
fcomps
aas
push
imul
sub
mov
pop
dec
inc
sti
sarb
mov
sahf
xor
mov
dec
jnp
sub
loope
jbe
div
popa
pop
js
mov
stc
dec
rorl
inc
arpl
ljmp
xchg
negb
popa
push
mov
dec
rolb
or
push
push
mov
pop
fsts
sbb
clc
lock
pop
ljmp
pop
or
mov
shlb
push
add
xor
mov
fidivrl
fcmovnu
ret
mov
out
imul
or
hlt
push
or
movsl
jae
and
cmp
fwait
mov
lret
dec
cmpb
cmp
xlat
daa
fists
push
or
decl
mov
push
sahf
ret
orb
outsb
pop
cmp
movsb
into
mov
sbb
scas
andl
inc
adc
stos
mov
shrb
mov
popa
adc
lret
mov
aas
jp
cwtl
inc
sub
cld
outsl
jb
xchg
push
or
lret
add
xor
into
dec
adc
lcall
xchg
jle
inc
sbb
das
lahf
clc
mov
shrl
sbbb
and
mov
sub
and
test
jge
imul
test
rorl
adc
out
test
adc
mov
fdivrl
fsubrl
inc
lret
daa
mov
mov
cmpsl
push
cmp
clc
jb
test
stc
hlt
push
push
mov
pusha
ja
pop
ret
and
pop
loope
and
xchg
inc
pop
xor
notb
lods
cs
sti
dec
push
call
jecxz
inc
aad
adc
mov
push
inc
repz
push
in
js
jge
lahf
sub
adc
sub
subl
imul
fs
shlb
xor
jb
sub
aas
xchg
jns
stc
arpl
aas
jo
outsl
pop
popf
dec
fisubrs
sti
jmp
jmp
mov
cmp
pop
add
gs
insl
push
mov
scas
inc
push
leave
sbb
test
jg
fimull
mov
or
adc
mov
das
push
push
xor
subl
fidivrs
into
push
push
push
or
inc
ja
push
and
push
pop
pop
push
or
mov
ss
mov
add
and
mov
into
push
outsl
int3
popa
push
ret
scas
or
lock
icebp
xor
js
and
out
in
loope
inc
xor
dec
mov
std
xchg
movsl
sub
inc
cmc
add
out
lret
rcll
testl
mov
loopne
mov
nopl
jg
pop
mov
xor
cmp
xor
sbb
push
fbld
jmp
cmpsl
out
iret
jp
sub
jno
and
in
push
adc
cmpsb
scas
cmp
mov
adc
or
push
lods
sbb
mov
lods
cltd
mov
mov
faddp
jb
pop
jb
dec
ja
je
pop
leave
iret
push
cmp
scas
cmpsb
or
cmpsb
mov
pop
jno
push
push
in
xor
xchg
cmpsl
pop
pop
push
inc
xchg
pushf
cmp
add
mov
cmpsl
jo
xor
jbe
mov
pop
push
mov
fs
arpl
xchg
mov
test
and
fidivrs
repz
insb
xlat
add
adc
bndstx
decl
movsl
shr
outsl
xor
inc
mov
shlb
leave
iret
syscall
cmp
add
and
push
mov
bound
outsb
push
test
or
sbb
je
stos
mov
out
jns
cld
push
add
xchg
push
adc
push
xchg
bnd
stos
pop
bound
push
lret
lods
adc
sub
scas
jbe
insl
stos
sbb
cld
jl
sbb
ret
xor
sahf
cmp
cmc
mov
jae
xchg
cmc
cmpsl
mov
mov
lret
dec
jno
cmp
scas
pop
notl
mov
scas
scas
mov
mov
cmp
jp
lea
push
jge
mov
adc
add
aaa
stos
dec
fnstenv
jno
popa
sub
push
dec
inc
rolb
int
xchg
cmp
aaa
cmpsb
bound
cmpl
jne
lods
cmp
mov
sbb
lods
mov
push
enter
sbb
push
push
loope
or
push
aas
sub
mov
leave
lods
jns
mov
ss
pop
cwtl
retw
fs
mov
fists
in
add
pop
cmp
out
jecxz
and
mov
scas
arpl
push
mov
aam
or
jne
xlat
xor
fistps
or
shll
pop
aas
xchg
sbb
divps
pop
sub
repz
iret
insl
inc
jle
ja
in
xor
cmp
inc
pop
movb
lock
xor
andb
inc
push
jns,pn
rcr
repz
stc
cmp
or
test
fdiv
mov
sub
cmp
add
movsb
push
mov
adc
pop
mov
icebp
or
cmp
jg
loop
mov
jecxz
clc
outsb
imul
mov
push
in
or
dec
pop
flds
scas
imul
jno
out
out
cld
shrb
adc
fcoms
in
xor
dec
adc
fcoms
mov
in
ja
jmp
lods
popf
push
xchg
pop
outsl
shr
sbb
pop
push
loopne
lret
sbb
in
cmp
movsb
sbb
rorl
push
aad
in
mov
pop
or
les
and
add
dec
cmc
loop
jmp
aas
nop
mov
adc
pop
movsl
inc
aaa
sub
cltd
push
sbb
mov
lahf
dec
pop
sbb
call
fstps
or
inc
ss
fwait
leave
cmc
movsl
mov
mov
les
xor
enter
mov
jmp
inc
push
sbb
movsl
sub
mov
je
lock
fcmovnu
cld
mov
dec
imul
in
jne
insl
sub
add
leave
mov
push
arpl
test
test
pop
mov
jbe
mov
pop
bound
push
and
sub
xlat
mov
sub
fstpl
rcll
xchg
push
negb
out
push
loope
xor
gs
and
les
pop
sub
inc
dec
pop
in
xor
pop
out
mov
xor
ljmp
xor
addr16
adc
add
mov
adc
dec
cmp
iret
or
test
mov
cmp
sbb
shll
xchg
out
dec
add
and
out
lock
inc
bsf
sbb
cmp
or
adc
jb
divl
inc
clc
mov
movsb
daa
jno
mov
cmpsl
ret
cmp
lea
aam
das
push
mov
ljmp
inc
repnz
les
pop
xor
dec
cmpsl
insb
call
sbb
cld
leave
adc
lcall
pusha
jecxz
test
inc
das
xchg
es
dec
dec
cs
xor
loope
pop
add
cmp
pop
or
shll
repz
pop
daa
push
stc
hlt
pop
into
jbe
jbe
enter
out
dec
inc
cmp
dec
mov
pop
cmpsb
ds
sti
adc
xchg
iret
add
loope
pop
shll
andb
stos
pop
jp
push
xlat
enter
or
cmpsl
dec
jge
pop
popf
lcall
push
ss
inc
push
ret
leave
test
push
pop
inc
cwtl
pop
into
cmpsb
mov
pushf
lahf
inc
arpl
scas
fwait
dec
shr
das
in
adc
and
scas
faddp
mov
pushf
or
nop
fs
xorl
jae
jne
add
mov
xchg
out
adc
mov
bound
loopne
icebp
inc
ret
jne
inc
movb
pushf
es
scas
add
mov
les
aad
inc
xchg
int
and
push
inc
nop
insb
pop
xchg
cltd
repnz
mov
inc
or
jo
mov
repnz
jo
dec
adcb
lret
pop
std
imul
call
cmpsl
jl
popa
int3
pop
cmpsb
sub
cmp
test
fwait
fwait
repnz
cltd
adcb
lret
pop
mov
pop
jle
push
xchg
cmpl
adcl
outsb
xchg
sub
pop
shrl
inc
addr16
movsb
popf
pop
push
rclb
mov
xor
das
xchg
or
pop
insb
or
adc
loop
pop
imul
xor
lods
jno
mov
fadds
roll
xchg
shll
sahf
or
orb
push
in
stos
frstor
mov
insl
dec
push
add
fcmovne
ss
or
lahf
movsb
arpl
mov
nop
xor
jns
jno
mov
in
lods
mov
aas
lods
push
pushl
test
xchg
in
push
sti
mov
xor
sbb
mov
sahf
pop
daa
adc
lods
mov
add
push
fimull
pop
lret
dec
cmp
or
jae
aam
mov
dec
mov
inc
xor
pop
jno
mov
scas
pop
sbb
out
adc
adc
xchg
out
sub
mov
pop
pop
movsl
mov
xor
add
int
jns
mov
mov
popa
test
add
iret
cld
xor
movsb
icebp
std
incl
leave
sub
xor
testl
scas
movsb
xor
mov
pop
xor
outsb
fsubrl
in
out
loop
and
and
push
fstl
inc
adc
jmp
sbb
mov
shll
mov
dec
int3
push
jb
mov
outsb
sbb
xchg
mov
push
in
fistpll
dec
fnstsw
pop
scas
lds
cmp
fistps
xchg
icebp
and
ds
daa
int
push
cs
dec
cs
add
xchg
cmp
out
cli
and
and
aaa
dec
sbbl
mov
xchg
test
stos
push
cltd
cmpsl
fists
adc
popf
aaa
adc
bound
inc
jge
inc
sbb
jo
xor
jae
sub
mov
jbe
js
xor
leave
jle
cltd
xchg
mov
out
dec
sub
sahf
sub
mov
test
into
mov
loopne
in
neg
or
leave
inc
sub
js
outsb
rcr
mov
dec
cwtl
adc
jo
mov
sub
lock
xchg
sbb
push
iret
add
and
pop
push
adc
ss
gs
adc
mov
loopne
insl
dec
repnz
jle
lret
sbb
je
xchg
jb
test
jge
rclb
ja
sbb
lods
sub
mov
fisubl
add
xor
push
or
inc
mov
clc
mov
cmp
loop
pushf
loope
mov
mov
pop
xchg
movb
fdivs
xor
xchg
inc
dec
popf
pop
into
sarb
div
rorl
rorb
pop
ret
mov
cmc
scas
movsl
sahf
lret
push
lods
jnp
jns
daa
std
aaa
imul
icebp
push
in
pop
fs
shlb
sbb
xchg
fcmovnu
rcll
or
adc
jge
add
ja
and
sub
nop/reserved
push
out
out
xchg
push
addr16
mov
sbb
mulb
cld
push
jbe
adc
sbb
cmc
push
cmp
push
push
outsl
push
xorb
loop
or
xchg
push
mov
pop
jmp
xchg
test
mov
jmp
repnz
cmpsl
popa
adc
sub
sti
out
pop
add
xor
loope
or
cltd
xor
mov
in
addl
adc
and
mov
out
inc
cwtl
lret
xor
xor
xchg
push
or
rcll
mov
ds
jg
lds
adc
imul
repnz
lret
xchg
push
push
jmp
or
outsl
add
fs
mov
mov
in
cltd
sub
xchg
shr
mov
sub
xchg
dec
in
call
mov
mov
mov
or
adc
dec
xchg
inc
sti
lahf
pop
cmc
jae
cld
fs
adc
sbbb
mov
enter
mov
jns
xor
lcall
nop
fsubr
mov
mov
or
and
lret
call
mov
inc
dec
gs
imul
xor
sbb
inc
cs
dec
pop
or
mov
xchg
mov
outsl
mov
push
popa
out
push
add
push
int3
fiaddl
fldcw
adc
push
xor
aas
lods
mov
lcall
add
sbb
popl
clc
sub
xor
and
xchg
or
fwait
dec
sub
cwtl
dec
in
movsb
jmp
adc
movsb
pop
inc
lret
mov
pushf
and
mov
or
xchg
dec
mov
cs
sbb
loopne
adc
insl
add
pusha
dec
mov
pushf
scas
cwtl
out
fwait
sbb
push
sbb
out
popa
arpl
mov
xchg
shlb
mov
cmc
fiaddl
pop
xchg
aaa
lock
dec
test
sub
into
popf
xor
push
add
or
loopne
hlt
shrb
inc
repz
jmp
and
push
insl
setge
sub
or
cs
in
shll
std
adc
insl
xor
lret
xlat
in
cmc
out
add
jp
mov
outsl
lods
pop
test
sarb
outsb
mov
and
sbb
cmp
lods
mov
mov
mov
out
repnz
xchg
pop
popa
repnz
stos
xchg
xchg
stos
lds
mov
jmp
xor
inc
outsb
outsl
leave
inc
fs
shll
imul
xor
inc
sub
mov
xor
and
daa
and
or
xchg
test
aad
lds
rclb
lret
fisubrs
ss
adc
add
rcrl
cmp
jnp
iret
iret
sub
xor
ss
lea
push
mov
popf
push
ljmp
jae
subb
mov
jmp
mov
movd
inc
mov
jne
cmp
push
xchg
shl
in
dec
xchg
adc
sub
cli
add
inc
in
jo
stos
into
testl
rcrl
mov
addr16
jne
mulb
sbb
pop
push
out
bound
aam
xchg
xor
jne
inc
or
mov
mov
mov
jl
adc
sbb
mov
inc
push
aad
mov
clc
mov
or
andl
adc
fwait
mov
sbb
outsb
sbb
mov
push
sub
dec
les
loop
and
and
rcrb
mov
pusha
xor
jbe
mov
or
add
inc
clc
loope
sub
jae
outsb
popf
xor
shrl
mov
sub
std
call
add
adc
pop
arpl
nop
dec
sbb
aam
jle
fidivrl
jns
insb
ljmp
sbb
pop
in
mov
inc
and
mov
xchg
imul
out
jo
xchg
mov
xchg
push
mov
fs
and
sub
mov
loopne
pop
jne
out
outsl
out
hlt
cld
sub
lods
add
mov
repnz
sbb
mov
clc
sbb
xor
pop
cmp
popf
data16
je
and
cmp
stos
sbb
loopne
lods
or
and
lods
movb
data16
sbb
int
xchg
adc
gs
gs
xrstor
pusha
xchg
in
call
xor
cmp
jbe
mov
push
cmc
arpl
test
sub
jns
mov
pop
jge
dec
mov
std
imul
test
and
imul
icebp
sbb
cltd
out
mov
lods
sbb
mov
call
xchg
push
xchg
mov
cld
push
xor
imul
pop
fidivl
xor
sub
in
mov
mov
into
pop
mov
jns
or
jno
stc
push
clc
jecxz
out
xchg
in
test
and
push
fisttps
scas
sub
in
lret
js
loop
int
or
clc
or
sbb
pop
xor
aam
add
ss
push
xchg
mov
popa
push
sbbl
je
out
and
cmpsl
cmpsl
dec
sbb
dec
mov
push
mov
or
out
movsl
cld
cltd
dec
mov
sbb
mov
je
pop
sahf
sbb
or
outsb
mov
dec
mov
fisttps
call
jno
jmp
repnz
mov
imul
scas
divl
xchg
sub
arpl
scas
in
jae
ret
or
push
jnp
xchg
loop
adc
test
sti
jp
out
jno
outsl
aas
enter
dec
push
adc
or
imul
add
ret
out
nop
fs
mov
addr16
push
clc
ficomps
mov
cli
iret
loope
mov
and
imulb
xor
leave
mov
push
add
add
movsb
loop
fidivs
mov
divl
xlat
int
xor
lcall
xor
lods
jp
jb
stc
pop
int
repz
sub
nop
sbb
test
xor
fistps
fidivrl
xchg
push
sahf
pop
popa
sub
pop
pop
xor
sub
leave
inc
mov
je
in
push
pop
call
xor
cs
je
pop
jl
ret
mov
into
adc
rcrb
imul
xor
push
and
inc
aad
push
inc
ja
mov
adc
das
xor
xor
add
out
push
aas
xor
popa
xchg
test
stos
ds
shll
mov
nop
mov
negb
push
adc
sbb
sbb
sub
mov
in
pop
sub
iret
mov
mov
adc
sub
xchg
mov
push
popf
cmp
ret
xchg
inc
sbb
inc
pop
scas
xor
jge
xor
adc
jnp
notl
and
push
push
popf
sbb
mov
leave
inc
mov
sub
aas
jle
jae
mov
sbb
decb
adc
xorb
pop
repnz
and
xchg
jle
pop
shrl
icebp
nop
nop
cld
jo
aad
loopne
push
inc
ds
rcrl
cmp
mov
jge
cs
jp
mov
test
adc
dec
jg
es
mov
movl
arpl
jp
xor
ret
jmp
push
mov
cltd
in
or
imul
imul
pushf
lock
ja
cmp
jne
adc
shlb
psraw
bound
mov
ss
pop
mov
adc
xchg
aaa
sub
adc
call
dec
sub
xor
addl
popa
xor
push
pop
out
mov
jno
add
jnp
sbb
int
adc
push
pop
insb
adc
mov
jge
sbb
je
push
mov
pop
fwait
inc
pop
stos
cs
or
add
fwait
xchg
xchg
out
cmp
out
dec
mov
mov
shl
lcall
jnp
sub
add
and
mov
fwait
mov
sbbl
jne
hlt
dec
mov
aaa
mov
xchg
xchg
pop
xchg
jne,pt
fs
out
jl
mov
mulb
gs
lret
xchg
cmc
push
sbb
push
xchg
fildl
jg
mov
push
jno
mov
mov
stos
rcr
inc
sub
pop
test
insl
jp
ja
jnp
mov
ds
fdivrl
cmc
mov
nop
dec
xor
xchg
add
xchg
cmp
pushf
cmp
push
and
ret
lods
mov
pop
push
inc
dec
dec
rcrl
jmp
test
mov
sub
stc
dec
jae
loopne
insb
and
iret
pop
push
xor
xchg
pop
sbb
cwtl
ja
lret
inc
push
repz
jl
rcll
ret
iret
cmp
jp
stos
adc
xchg
inc
iret
lods
push
jle
dec
dec
sti
dec
negb
mov
leave
int3
fimull
cmp
in
jne
xchg
pop
cwtl
sbb
push
cmp
int3
mov
popl
pop
fcmovu
divl
negl
mov
jp
push
xchg
xchg
mov
jae
mov
mov
fs
arpl
mov
imul
adcb
ljmp
cmc
jecxz
jb
xchg
inc
mov
std
mov
add
fcoml
or
mov
adc
enter
adc
shll
jmp
jmp
xchg
imul
ds
push
xchg
xchg
fstl
sub
call
jmp
adc
pop
mov
sub
xchg
mov
shl
imul
out
hlt
and
loop
jle
hlt
fmul
mov
mov
notb
cld
add
push
lods
cmc
loopne
dec
aad
cmp
dec
ja
jle
push
jg
add
pop
sti
shlb
pop
xchg
cli
shl
xchg
inc
loope
sbb
cmpsb
fwait
sub
repz
and
jo
arpl
pop
jbe
xor
mov
std
data16
mov
mov
inc
inc
imul
icebp
inc
inc
in
xorb
movsb
add
repz
ret
incb
scas
fidivl
loope
mov
and
push
lret
test
inc
jnp
int
xor
in
stc
pop
into
cltd
sti
imul
repz
dec
aam
jecxz
imul
sbb
lret
pop
fwait
or
mulb
jp
repnz
sub
int3
or
or
mov
adc
cmp
push
mov
add
fisttps
push
test
test
push
sub
push
adc
sbb
jbe
cmp
push
fwait
movsl
jg
enter
dec
mov
mov
sub
dec
inc
loop
adc
lret
xor
add
mov
arpl
push
int3
outsl
jle
dec
ljmp
add
cmpsb
sahf
nop
inc
popfw
scas
mov
fwait
cs
add
notl
int3
pop
cmpsb
sbb
fstps
aad
push
jns
nop
aam
jo
dec
fs
or
xchg
xchg
inc
daa
dec
and
cmc
cld
jecxz
stc
cmp
jnp
sub
addl
ret
xchg
mov
in
mov
mov
mov
gs
inc
push
mov
push
insl
icebp
out
mov
jmp
ret
add
out
scas
aaa
mov
les
imul
hlt
and
pop
add
and
jo
rclb
iret
aam
decl
adc
mov
insb
cmp
xor
mov
pop
xchg
clc
mov
test
mov
aas
loopw
hlt
fmulp
mov
shl
out
shr
xlat
sbb
push
xor
repz
shr
push
pop
add
xor
mov
hlt
clc
fldl
xchg
rcl
fsubrl
mov
icebp
jne
and
jecxz
mov
inc
sbb
loopne
sbb
cmp
mov
nop
lds
repz
ss
pop
sbbl
cmc
sbbl
or
sahf
or
pop
add
sbb
test
icebp
movsb
xchg
outsb
repnz
test
div
sub
shrb
es
loopne
sub
push
stos
das
push
jg
jcxz
sbb
inc
cld
add
cltd
pop
push
pop
push
jl
jo
mov
or
xor
adc
enter
ror
lcall
orl
pop
xor
xchg
jp
loopne
mov
out
jmp
and
fwait
iret
mov
pop
or
jmp
or
enter
ret
xchg
out
ret
popa
stos
pop
inc
mov
mov
jge
sub
and
jl
idiv
add
lods
stc
mov
push
push
or
push
cmovo
push
xchg
and
int
fnstsw
sub
fdivp
cmp
mov
push
imul
and
cmp
push
mov
mov
or
lret
jp
jp
jg
jb
std
dec
mov
cmpl
inc
ja
js
sbb
fldt
cmpb
adc
aas
pusha
mov
xchg
push
fimull
imul
bound
stc
pop
mov
jo
xchg
cmp
push
mov
scas
jg
insb
sub
xchg
pushf
insb
or
fcoms
inc
pop
xchg
mov
pushf
insb
sahf
inc
clc
mov
js
adc
cmpb
push
inc
sub
clc
dec
sbb
adc
dec
jg
lcall
and
mov
or
cmc
sbb
mov
sarb
jmp
js
fidivrl
outsb
ficoml
add
jae
mov
inc
dec
jno
pop
xor
in
mov
in
cld
add
popf
shlb
inc
and
inc
push
call
dec
movl
in
je,pn
pop
outsb
dec
aad
mov
cwtl
fstl
insl
mov
jns
push
fists
rol
jp
lahf
xchg
mov
push
pop
enter
lea
push
pop
aas
iret
or
xchg
cmp
test
mov
push
daa
mov
loopne
push
or
pop
lods
sub
fmull
test
pop
fldenv
jbe
sbb
inc
adc
push
mov
add
add
out
popa
repnz
pop
mov
mov
pop
jnp
ja
mov
mov
push
mov
mov
loopne
les
or
mov
cwtl
pusha
cltd
int3
cltd
adc
mov
and
loop
jbe
ds
icebp
ret
jbe
inc
enter
and
pop
subl
sbb
jge
jecxz
ja
mov
or
jb
dec
dec
sti
lods
cmp
jg
push
lret
jmp
mov
aas
inc
pushf
sub
mov
mov
movsl
push
nop
xchg
ja
or
leave
scas
fmull
jp
cmp
cmpsb
cmpsb
jb
addr16
cmp
leave
mov
arpl
das
ret
fsts
mov
add
pusha
mov
sub
aad
jmp
sbb
std
push
push
cmp
jno
sarl
lcall
push
dec
inc
xor
frstor
jg
stos
inc
or
and
inc
jg
mov
xchg
xchg
mov
mov
lds
lods
cld
out
int3
sub
jl
insb
xor
mov
cmp
orb
inc
popf
ret
fwait
mov
gs
dec
jp
mov
fldenv
fistpl
fcom
jmp
xor
cmp
sub
js
push
xchg
sub
into
nop
jns
mov
int
sub
or
gs
and
mov
mov
adc
arpl
cs
fdivrl
add
mov
xchg
loop
sahf
or
stos
xlat
ja
adc
rcl
sbb
inc
inc
lret
cltd
xlat
inc
cld
not
test
pusha
dec
pop
mov
push
test
imul
pushf
gs
push
shrb
push
stc
push
imul
cmpsl
outsb
jge
and
testb
xchg
in
imul
inc
xchg
int3
lods
mov
rolb
rcrb
js
inc
jae
in
popa
push
popf
mov
test
cmc
sahf
inc
cmpsl
jb
aad
and
mov
push
lea
and
insl
inc
ds
push
xchg
or
jge
adc
add
cmp
xchg
mov
mov
addl
add
and
rorb
mov
dec
add
cwtl
xchg
popa
enter
lods
out
sub
mov
shrl
jbe
pop
inc
jb
inc
dec
mov
pushf
or
fnsave
das
pop
fsubs
cmc
adc
pop
mov
and
mov
mov
push
fiaddl
pop
out
into
out
sub
cli
aas
push
nop
out
sbb
cmp
icebp
call
call
sbb
insb
xchg
icebp
into
clc
fists
fs
or
mov
fistpll
rcrl
test
inc
in
sub
jp
cli
mov
clc
outsb
sbb
cmp
cmp
add
push
xlat
inc
outsb
int
push
aas
fadds
or
mov
mov
in
stos
in
push
pop
movsl
imul
js
into
push
data16
es
in
pop
stc
sub
lock
repz
aaa
or
dec
insl
scas
adc
sbb
addr16
dec
mov
sub
cltd
push
pop
mov
add
push
and
dec
ds
add
mov
leave
in
cmp
jns
jmp
dec
cmp
out
lret
adc
dec
lods
mov
rcr
sbb
fs
cltd
movsb
mov
push
mov
pusha
lret
push
pusha
sbb
mov
addr16
mov
jl
xor
fiadds
loope
adc
jae
test
push
pop
adc
cwtl
jle
stos
das
repz
cwtl
inc
es
dec
or
jmp
dec
aas
scas
adc
adc
inc
adc
and
fldl
insl
pop
ja
jg
or
push
sbb
or
sbb
jmp
and
cmp
and
cli
push
jecxz
in
decl
lods
lret
push
push
mov
mov
push
out
in
mov
stc
inc
xchg
enter
jmp
sub
imul
rcll
mov
subb
fs
pop
pop
mov
jnp
inc
pusha
pop
bound
movsl
mov
mov
xchg
aas
fcoml
imul
pop
cmpsl
jno
push
sti
je
add
pushf
add
call
out
jmp
jnp
lret
inc
sub
cwtl
hlt
or
mov
repz
push
jmp
pop
adc
out
enter
lcall
push
sahf
sub
dec
adc
push
jl
push
dec
inc
mov
mov
adc
es
lock
dec
mov
push
ret
dec
push
mov
roll
test
das
es
negb
sbb
daa
inc
mov
nop
jo
pushf
es
sarb
js
insb
cmp
ret
xor
into
mov
xor
xchg
call
add
js
icebp
out
jne
and
inc
cmpsl
sbb
insb
inc
shlb
mov
fnstenv
add
sub
cmp
cmpl
pop
xor
mov
jnp
rclb
lds
cmpsl
push
repz
lods
mov
gs
mov
jno
orl
mov
xor
add
in
or
cmp
cmp
js
add
lds
out
sarl
jecxz
in
mov
push
xchg
jno
cs
test
xchg
clc
movsl
loop
leave
jnp
jmp
inc
iret
movsb
add
jno
push
mov
inc
divb
mov
and
out
push
or
ret
insl
hlt
data16
mov
sbb
fsubl
inc
adc
scas
cltd
adc
pop
sub
pop
add
jge
or
inc
sub
inc
mov
dec
mov
std
arpl
dec
mov
sarb
call
push
leave
mov
cmp
scas
jns
test
pop
movsb
scas
xor
and
je
cwtl
and
es
ja
add
enter
int3
pop
or
add
mov
sub
fwait
or
sbb
add
je
cmpsb
dec
out
lret
nop
sub
xor
push
ret
or
cwtl
xor
inc
inc
and
stos
mov
fs
jg
loop
mov
out
adc
add
pop
cmpsl
shlb
add
adc
pusha
outsb
rclb
sub
pop
ljmp
add
fwait
sub
cmp
arpl
stos
adc
clc
cltd
in
jbe
jle
xorb
fadds
pop
out
mov
pop
data16
les
add
mov
out
adc
or
xchg
pop
sahf
lret
ret
add
das
pushf
mov
xor
fnstcw
imul
dec
rcrb
orb
mov
sub
loop
xor
push
cmp
orb
mov
and
cltd
xchg
sub
and
sub
xor
xchg
and
dec
ss
in
imul
push
jecxz
mov
cmp
mov
push
mov
fistpl
sbb
or
je
dec
ret
mov
mov
int
int
push
push
je
xor
call
dec
xchg
xorl
inc
cmpsl
in
loop
or
pop
sub
cmpsl
lods
iret
and
imul
cmp
fbld
dec
mov
mov
aam
dec
movsl
mov
and
hlt
sti
lcall
js
bound
dec
dec
sbb
add
mov
cmp
sub
sahf
sbb
in
iret
arpl
push
aas
popf
aad
cmpsl
inc
sub
imul
aam
in
in
cld
fisubrl
mov
mov
in
int
mov
mov
ret
mov
clc
push
xchg
mov
fcoml
add
and
dec
call
add
rolb
dec
adc
jmp
mov
and
loopne
dec
loope
std
call
lret
mov
jae
sti
push
xchg
dec
or
dec
lret
mov
mov
mov
insb
cmp
es
push
dec
scas
adc
pop
and
jmp
gs
sbb
dec
jmp
sbbb
in
pop
sti
stc
cmpsl
xor
aaa
cs
dec
sti
test
xor
and
popf
jns
mov
sahf
outsl
mov
in
mov
cwtl
movsb
lahf
mull
fcomp
pop
sub
into
fs
pop
dec
in
xor
inc
testl
cmp
cmp
xchg
mov
sbb
fisttps
repnz
pop
inc
sub
repnz
add
lds
addl
in
fidivrs
fnstenv
sar
mov
repz
sbb
sahf
pop
xchg
push
hlt
scas
or
adc
mov
stos
ja
loopne
decb
bound
dec
mov
comiss
dec
in
test
cmp
sub
loop
or
xchg
andb
mov
inc
mov
subb
aaa
and
aam
mov
sbb
aam
pop
xlat
xchg
fsubrl
daa
dec
sbb
ljmp
mov
add
scas
and
push
popa
mov
xchg
fcmovnb
add
adc
sub
xlat
jecxz
mov
shl
clc
int
cli
lret
icebp
jge
fnstcw
jbe
jns
mov
aad
sub
cld
cmc
push
lahf
std
mov
pop
pop
mov
push
pop
cli
pop
sub
inc
sti
jbe
sub
fildll
or
sarl
adc
dec
add
sbb
cli
out
mov
in
clc
xchg
mov
xchg
cs
jmp
mov
push
xor
clc
pcmpgtw
imul
into
daa
xchg
push
test
push
add
mov
mov
daa
and
enter
adc
adc
dec
insb
or
shll
popf
test
cld
scas
inc
jnp
adc
ds
sbb
inc
daa
add
cs
mov
out
pushf
cltd
or
push
pop
dec
in
cmpl
cmp
pop
mov
aam
or
and
adc
push
sub
ja
mov
mov
sahf
iret
nop
mov
sub
cmp
imul
out
arpl
jg
inc
xor
jge
mov
jae
push
jle
lea
lea
push
inc
fnop
out
pop
adc
xlat
in
sub
cwtl
dec
inc
mov
and
mov
push
mov
mov
sbb
adc
push
stos
add
outsl
clc
ffreep
mov
dec
sahf
pop
jne
mov
inc
dec
sti
xlat
sbb
jl
mov
xor
out
or
shl
stc
adc
mov
loop
cmp
cmp
fisttpll
jmp
mov
cmc
add
loop
mov
fwait
test
and
xchg
xchg
cmp
out
andl
mov
or
dec
fbstp
dec
imul
xchg
jge
xlat
test
mov
mov
dec
or
call
jnp
fisttpll
mov
pop
pop
aas
sub
inc
cmc
clc
ljmp
data16
or
xchg
mov
pusha
pushf
repnz
daa
mov
test
sub
lahf
pop
jp
je
sbb
push
movsl
push
jl
add
pushf
dec
cli
adc
out
outsl
test
scas
and
aas
lods
xchg
push
stc
adc
add
jo
sbb
subl
jnp
movsl
xchg
out
lock
push
push
pop
fistpll
or
xor
sub
jmp
das
or
dec
repz
xchg
scas
idiv
xchg
add
mov
insb
fildl
outsl
int3
jne
std
pop
xchg
ret
push
sbb
pop
scas
in
lock
cmp
or
jb
cltd
lret
push
add
add
insb
jge
ja
scas
repnz
aad
xlat
ret
mov
insl
fdivl
dec
or
in
or
or
sub
adc
cld
aas
popa
addl
lock
ffree
lret
push
test
sub
xchg
dec
pop
in
jo
adc
fincstp
cmp
xlat
add
popa
dec
pop
jge
clc
mov
fnsave
push
jmp
fs
cs
ljmp
pop
in
mov
sbb
inc
mov
xchg
nop
cld
adc
add
subl
cli
pop
mov
mov
add
in
stc
aaa
or
mov
dec
enter
inc
mov
xchg
sarb
sub
push
cmpl
and
call
or
mov
inc
or
orl
daa
popa
push
jbe
push
jno
or
ret
jp
repnz
sub
stos
jns
and
pop
fsubl
shlb
xchg
add
and
sub
inc
inc
fstps
add
call
mov
gs
rolb
jnp
fcomps
mov
jo
ret
mov
mov
sub
cltd
divb
dec
and
dec
repnz
cmp
movsb
popa
dec
fistl
subb
pop
ds
inc
mov
cmpsb
addr16
xchg
out
xchg
test
adc
fsubrl
add
push
sub
sub
fucom
or
call
jnp
pop
xchg
jno
mov
mov
frstor
inc
dec
lea
inc
dec
and
mov
cmp
xchg
mov
inc
test
jne
sbb
loopne
xor
repz
jbe
mov
or
int3
mov
mov
push
xchg
inc
jns
psllw
in
fsts
push
push
jle
call
xchg
pop
jg
pop
cltd
mov
jecxz
add
xchg
in
or
std
jge
orb
inc
pop
jmp
lahf
cltd
or
sub
sahf
mov
mov
inc
movsb
inc
into
jb
stos
lret
pop
aad
cmp
push
pop
jecxz
push
std
mov
mov
out
enter
add
push
xor
decl
jns
sar
cmpsb
cli
gs
pop
jecxz
flds
mov
lods
xchg
and
ss
je
icebp
movsl
outsb
les
jp
hlt
scas
icebp
test
stc
inc
pop
es
mov
cmc
bound
sbb
xchg
les
stos
mov
push
pushf
and
imull
mulb
cmpsb
sysenter
adc
push
int3
pop
mov
int
jmp
aad
and
fnsave
pop
xchg
push
dec
ljmp
sbb
pop
mov
mov
mov
sub
xchg
fildll
xchg
imul
adc
fcoml
out
nop
outsb
xor
mov
jge
sahf
sahf
or
jmp
rorl
mov
mov
jp
jnp
insl
sbb
test
jp
cmpb
cmpsb
rcrb
addr16
daa
pop
jmp
cmp
adc
repnz
adc
ljmp
or
inc
cmp
and
loop
xor
pop
rcpps
sbb
in
mov
inc
aam
sub
mov
imul
lcall
pusha
out
ja
mov
out
inc
sbb
outsl
xchg
rolb
jle
add
out
int
sbb
jns
sub
sub
add
gs
fnstenv
lcall
adc
dec
test
repnz
pushf
icebp
push
xor
test
ds
jecxz
ret
push
xchg
rcll
out
adc
movsb
rcll
mov
shll
lods
adc
add
or
mov
sbb
sub
rcl
fdivrl
inc
mov
jo
inc
imul
scas
lcall
loope
xchg
jecxz
call
mov
fs
adc
mov
dec
in
loope
push
dec
mov
repz
cli
dec
mov
test
xlat
xchg
xlat
jl
outsb
aad
mov
pusha
lods
imul
scas
psraw
sub
sbb
lret
pop
pusha
flds
mov
jp
repnz
jmp
add
push
in
adc
int
jo
movsl
cmpsb
jmp
add
mov
imul
dec
jo
mov
out
lods
pop
aas
mov
adc
fisttps
les
roll
xchg
jle
lods
call
lods
mov
mov
inc
cltd
loope
or
pop
aad
mov
or
pop
mov
imul
hlt
jnp
cmp
ljmp
pop
xor
das
lret
clc
loop
cmp
or
stos
cmp
loopne
push
aaa
shll
pop
movsb
jecxz
mov
dec
in
sbb
fucomp
push
iret
add
loopne
sub
pop
popf
cld
rcl
fdivl
je
sub
mov
jns
bound
dec
jle
ficoms
call
inc
sbb
cmp
xlat
loopne
jle
xorb
popf
ljmp
push
icebp
push
add
gs
add
adc
imul
test
jge
pop
mov
push
adc
pop
mov
inc
pop
fs
or
mov
in
inc
out
lock
in
shll
iret
cmpsb
scas
les
int3
andl
subb
popf
mov
mov
out
inc
int
push
pop
or
pop
lea
daa
jns
add
arpl
mov
pop
cmp
mov
pop
inc
add
pop
push
jge
mov
mov
pop
rcpps
pop
xchg
fs
or
mov
test
sub
popf
icebp
enter
sub
scas
bound
jns
mov
push
jnp
jle
sahf
xor
pop
sub
xor
xchg
cmp
cmp
test
xor
shlb
aas
in
pop
arpl
fisttps
cmp
dec
leave
mov
mov
mov
jb
mov
out
mov
pop
xchg
imull
out
ja
or
aas
test
push
shlb
push
sbb
das
inc
dec
inc
sub
xor
add
insl
mov
inc
ret
sbb
xchg
and
addr16
mov
shrb
mov
cmc
outsb
test
and
adc
enter
int3
mov
sbb
lods
aas
into
repz
outsb
repnz
mov
sub
filds
xor
push
lock
dec
pop
ror
cmp
add
lds
enter
ljmp
cmpb
testl
je
imul
ret
sbb
std
jg
cs
gs
shl
out
int3
push
pop
sbb
sbb
jmp
out
mov
stc
ficomps
pop
xor
lods
mov
push
or
shrl
xor
imul
ret
sbb
dec
pusha
mov
jnp
inc
scas
fsts
das
addl
jg
sub
or
push
sbb
cmpsb
add
push
jge
loopne
mov
pop
sub
push
cmp
mov
loop
loop
fcompp
cmp
xlat
and
sti
inc
push
jnp
mov
clc
outsb
xorb
mov
insl
cmp
pop
bnd
pop
ja
cmovae
jle
xor
add
in
nop
inc
test
dec
fwait
xchg
test
xchg
aam
push
or
stos
xor
mov
inc
push
dec
cltd
push
repnz
pop
mov
jb
sbb
push
adc
push
push
add
cmp
negb
jnp
in
xor
xor
mov
clc
out
enter
jae
pusha
mov
inc
dec
test
mov
into
test
pop
sub
enter
stos
call
out
xchg
push
mulb
pushf
mov
jecxz
or
fs
jne
iret
test
in
jle
lds
out
and
xchg
sbb
rcrb
dec
jge
ss
lcall
push
hlt
mov
cmp
mov
push
inc
cld
mov
scas
mov
out
sahf
mov
push
test
into
loop
and
and
or
ljmp
lods
pushf
inc
inc
loop
xor
inc
sti
repz
movsl
mov
mov
push
movsb
adc
push
ret
mov
call
cwtl
rcll
jno
test
xor
in
daa
jle
jo
adcb
rcrl
and
adc
push
dec
out
jge
mov
cmp
icebp
loopne
push
xor
jb
loope
pusha
shll
ret
jne
movl
jo
jecxz
and
cltd
lea
mov
jo
cmc
test
aam
in
pop
or
and
xor
cltd
jnp
lea
push
nop
push
inc
mov
and
jecxz
push
add
cmp
addr16
lea
and
inc
or
test
or
sbb
jge
cmp
loop
insl
and
movsb
pop
dec
xor
aad
fistps
sti
addr16
loop
mov
sbb
or
adc
xchg
xor
shlb
fisttpll
mov
push
shrb
adc
icebp
dec
or
mov
cltd
rolb
mov
imul
or
push
int
shlb
xchg
or
sbb
je
sub
orl
mov
cld
pop
mov
jecxz
push
jecxz
mov
inc
push
inc
arpl
popa
xchg
addr16
pop
push
sub
mov
mov
add
into
adc
movaps
int
cmp
cmpsb
ss
shlb
sti
imul
push
xlat
sub
mov
sbb
mov
leave
mov
fs
lret
jge
xchg
push
mov
jle
ret
dec
push
repnz
sarb
sbb
cmp
xchg
ret
pop
mov
mov
jnp
rclb
inc
imul
fwait
pop
xor
push
sbb
cmp
adc
fistps
mov
mov
lcall
dec
or
xor
mov
xlat
mov
imul
into
mov
das
scas
jo
imul
cmp
xchg
and
arpl
in
jbe
test
cs
cs
jg
push
ret
mov
lea
adc
cmovb
fisttpl
lahf
sub
bound
sarl
push
rcrb
push
movsl
mov
fstl
pop
push
jns
notb
push
orb
cmpsl
dec
int3
pushf
xor
mov
push
and
ja
push
aaa
out
es
into
sarl
cmc
pop
dec
pusha
stos
negl
push
push
add
or
ror
jnp
popa
movsb
sbb
out
cmp
pop
out
push
popf
mov
shrl
xor
cmp
and
sbb
std
shll
inc
clc
mov
xor
outsl
out
stos
pusha
int3
lea
and
cmp
fisttpl
adc
fnstenv
dec
mov
mov
mov
sbb
jae
idivl
inc
add
in
cmp
in
cltd
xchg
out
mov
mov
movsl
and
mov
pusha
in
fldl2e
jbe
leave
ljmp
out
iret
mov
add
cmp
sub
dec
sub
dec
fidivrs
stc
fwait
cmc
and
or
push
jnp
lods
push
aas
lds
lret
jns
jnp
lods
dec
test
xor
push
hlt
sbb
mov
inc
xlat
testb
mov
mov
lret
mov
cmp
sbb
idivl
push
cmpsb
pop
inc
popa
daa
stos
mov
repnz
jo
mov
sbb
pop
std
movsl
fchs
into
cmp
push
jb
popa
push
xor
sub
fisubrs
stos
inc
cmp
xor
push
test
lea
push
pop
rorb
jle
mov
test
push
mov
pop
in
icebp
push
sub
mov
cwtl
xchg
into
mov
push
mov
mov
orb
xchg
rolb
test
sbb
insb
stos
sub
mov
or
cmpsb
mov
lea
icebp
and
xor
sub
movsb
in
inc
out
inc
gs
int
and
jp
aad
add
inc
cwtl
test
repnz
mov
push
outsl
and
orl
test
jle
repz
std
lret
push
cmp
push
jp
xchg
decl
iret
stos
lahf
sub
xlat
ljmp
or
or
loopne
ss
hlt
ja
or
ss
lea
lcall
and
push
add
bound
mov
roll
outsl
scas
push
cmp
arpl
sbb
xor
adc
shrl
shll
loopne
and
sub
je
push
aam
adc
icebp
mov
sbb
mov
gs
test
test
push
mov
lds
push
sbb
jae
repnz
outsb
push
push
sub
in
outsb
rcr
movsb
mov
dec
insb
xor
sub
loop
mov
sub
jo
xchg
xchg
loopne
lcall
mov
mov
adc
mov
fdivs
mov
adc
adc
or
jne
xor
cmpsl
mov
jmp
loopne
push
movsl
std
lods
das
fldcw
icebp
xor
lock
pop
cmp
sub
imul
out
leave
cmpsb
nop
andl
and
aaa
cmp
pop
imul
add
inc
aas
cmp
sbb
xchg
adc
and
add
ret
mov
lret
push
jmp
enter
add
test
cmp
cmpsl
shr
das
arpl
xchg
hlt
pop
mov
clc
xchg
and
jns
out
dec
xor
add
add
push
call
dec
xchg
push
xchg
loop
insl
fimuls
int
mov
or
cmp
inc
pop
aaa
cli
rcrb
or
test
push
jge
aad
sbb
dec
dec
lods
bound
xor
mov
add
mov
mov
mov
mov
xchg
cmp
loopne
add
aam
fcmovbe
mov
ja
sbb
insb
icebp
cmp
mov
xlat
cwtl
dec
mov
fs
jecxz
call
cmp
cmove
push
xchg
xor
adc
loopne
add
filds
ret
inc
scas
sub
sbb
sbb
insb
jae
sbb
stos
add
jo
outsl
sub
dec
daa
mov
mov
fwait
sub
dec
enter
ss
sarb
jg
dec
lods
arpl
jmp
xor
push
inc
sbb
adc
dec
fwait
out
push
rorb
mov
fildll
ret
mov
cs
loope
jo
or
xchg
por
aam
sbb
cmpsl
mov
inc
aad
or
mov
stos
shrl
or
push
sbb
fsts
jle
and
mov
inc
movsb
jno
scas
mov
sbb
jp
cmp
scas
push
xor
and
mov
das
cmp
into
sub
dec
push
jmp
enter
popa
mov
jg
andb
xorb
push
push
add
fs
sbb
pop
jo
je
mov
cmp
pushf
cs
sbb
repz
mov
lahf
adc
xor
adc
sarl
pop
mov
sbb
fisttpl
inc
push
test
jecxz
ja
mov
or
jno
xor
sbb
arpl
aam
fisttpll
pushl
jb
xlat
clc
sbb
rcl
jns
iret
add
test
mov
inc
and
ds
dec
and
data16
cmpsb
mov
push
mov
rorl
jne
mov
sti
pop
push
insl
aas
je
push
fmuls
adc
cmp
xchg
mov
lcall
imul
mov
rcrl
xchg
in
xor
mov
sbb
orb
fiadds
mov
inc
cmpsb
add
xchg
cmpsb
jnp
dec
pop
cmpb
inc
mov
jmp
scas
mov
sub
mov
test
mov
jg
adc
dec
stos
es
add
cltd
repnz
adc
mov
push
inc
xor
xchg
push
xchg
std
mov
mov
int
xchg
jg
jns
push
aad
mov
push
jge
les
aas
xor
rcrl
and
mov
jbe
xchg
loope
ljmp
cmc
fdivrs
stos
mov
loopne,pn
lcall
xor
fsts
stos
mov
cmp
or
push
pop
xlat
sub
push
pop
stc
push
push
jb
mov
stos
cltd
push
jle
mov
pusha
sub
push
mov
adc
std
xchg
daa
outsb
fdivl
inc
jae
sbb
rorl
sbb
push
fstl
and
fs
jmp
aam
movsl
lret
xchg
adcl
cmpsb
jge
and
subl
dec
repnz
cmp
aam
inc
stc
fbld
mov
inc
outsl
or
cltd
insl
pop
daa
pop
push
adc
xor
dec
fcoml
clc
aad
in
add
inc
js
xchg
xchg
fisubl
xor
dec
in
mov
insl
out
add
out
lock
cmp
jo
inc
mov
fwait
stc
push
pop
jne
das
jb
mov
dec
bound
jecxz
mov
hlt
pop
xor
daa
add
mov
and
add
insb
enter
in
insl
and
add
loopne
or
mov
rclb
bound
mov
inc
mov
testb
or
mov
dec
adc
pop
or
sub
hlt
sbb
sub
pop
adc
jae
xorl
stos
loop
and
push
ret
add
fnstsw
push
and
pop
cmc
pop
loope
push
cmpb
push
popf
jmp
adc
pushf
jae
push
or
out
xor
jle
jb
jno
push
push
imul
test
cld
fs
mov
push
mov
jb
cmp
dec
cltd
insb
in
adc
jne
test
movsb
stc
pop
jmp
mov
add
rorb
scas
jbe
int3
push
xchg
sbb
pop
enter
outsb
mov
mov
xor
cmp
sbb
iret
jbe
sub
orl
or
sub
dec
call
mov
fnstenv
xorl
popl
sbbb
xchg
ja
push
pop
cmpsb
adc
test
inc
hlt
fwait
pop
nop
sarb
pop
pushl
sub
mov
mov
push
repz
jp
jp
in
into
mov
jne
pop
cs
mov
inc
xlat
adc
adc
jbe
rcl
in
jl
js
dec
jnp
cmp
mov
push
and
jns
in
or
fs
mov
sub
xchg
adc
nop
jg
mov
aad
shl
jo
popf
push
sbb
jmp
push
cmp
sub
xchg
je
je
stc
adc
push
scas
dec
neg
lock
shl
inc
out
xor
pop
cmp
orb
das
push
jp
mov
out
sbb
leave
pop
fstl
xor
push
lahf
dec
hlt
clc
enter
or
pusha
daa
outsl
push
xor
iret
and
jl
and
mov
loopne
push
icebp
sub
inc
ds
enter
fwait
cltd
jns
sbb
xlat
loopne
repz
mov
lcall
fsubrs
or
aam
mov
xlat
mov
dec
or
cltd
pop
fwait
pop
stos
pop
and
ror
lahf
repnz
ljmp
rcr
xor
sub
sub
sahf
ljmp
repnz
and
push
and
or
push
xchg
int3
xchg
mov
jne
mov
ret
enter
mov
iret
mov
hlt
test
mov
lahf
dec
mov
jmp
cmp
xchg
sub
mov
dec
jg
mov
cmp
cmpsb
push
inc
jecxz
outsl
insb
icebp
xchg
out
lret
dec
xchg
ficoms
lods
jge
ret
and
add
fmul
call
negl
xchg
xchg
and
jne
xchg
push
lods
shll
xor
clc
nop
add
inc
push
mov
lods
aam
jle
cld
aad
fs
loopne
adc
aad
and
adc
ret
out
cmp
inc
pop
jae
sub
pushf
fdivp
mov
or
and
xchg
inc
outsl
push
enter
loopne
mov
push
ja
das
xor
ja
pop
outsb
int3
ficomps
mov
je
push
pop
ret
jns
out
out
fninit
xchg
xchg
mov
out
out
and
mov
sub
insb
insb
inc
xchg
xor
mov
in
aaa
xor
cmp
cmpsb
pushf
syscall
stos
cmc
mov
lcall
leave
and
aas
sti
repz
adcl
out
jmp
cmc
cli
test
out
mov
push
sub
ss
mov
and
ret
cltd
in
mov
shlb
sbb
leave
adc
mov
fsubs
in
je
inc
daa
cwtl
imul
jne
pop
jo
sub
jp
aaa
xchg
outsb
ljmp
jo
dec
lods
dec
sbb
xchg
push
cmpsb
insl
or
cmp
es
mov
lcall
or
pushf
leave
pop
xor
inc
ret
cltd
and
xlat
orl
push
mov
lahf
pop
ret
sub
in
loopne
sti
pop
insb
out
cld
bound
jno
jecxz
js
pushf
in
adc
jns
shl
mov
shrl
into
js
sub
mov
andnps
and
dec
icebp
ret
leave
push
loop
cmp
sub
push
inc
fnstenv
filds
std
pop
jmp
jecxz
or
sbb
dec
ja
pop
xor
push
xor
adc
dec
xchg
ja
sub
imul
cwtl
dec
mov
xor
pop
nop
mov
lods
sbb
mov
dec
in
mov
sbb
sbb
enter
adc
xor
and
insb
jmp
and
add
out
add
sbb
loopne
dec
jne
add
insb
shll
nop
imul
adc
add
into
scas
shlb
popf
push
push
outsl
mov
push
mov
xchg
pop
and
aas
mov
icebp
or
nop
pop
push
mov
push
mov
scas
sub
shrl
out
imul
xor
gs
push
mov
pop
lds
cmp
pop
std
out
pop
cmp
je
xchg
sahf
mov
pop
pop
shrb
lsl
imul
add
data16
or
pop
popa
mov
cmp
fbld
mov
jns
aas
outsl
adc
outsb
or
mov
adc
clc
or
minps
push
sbb
adc
inc
stos
xchg
mov
push
scas
adc
push
or
add
pop
and
out
and
mov
inc
icebp
push
loope
scas
mov
and
add
or
mov
je
daa
repnz
out
pop
imul
add
aaa
or
push
les
idivl
pop
mov
jge
inc
rolb
jge
pushf
mov
in
mov
or
push
xor
xor
iret
pop
xor
or
xor
mov
xchg
loopne
ret
mov
inc
enter
push
shrl
ds
movsb
xlat
cmc
xor
mov
cmp
stos
test
push
mov
int
ret
xor
adc
pop
cmp
cli
fwait
inc
mov
sub
test
xor
or
cmp
push
clc
rcll
add
cmp
sbb
mov
mov
sarl
xchg
aad
push
movsb
imul
js
js
outsl
adc
sub
jcxz
or
cmp
mov
inc
mov
rorb
adc
inc
movsb
sub
jecxz
or
cld
clc
dec
fdivl
inc
pusha
adcb
pop
outsl
jno
mov
xchg
inc
adcb
call
enter
test
and
or
fmuls
sub
adc
fnstenv
enter
inc
pop
testb
pop
sbb
xchg
outsl
rcrb
jbe
fwait
addr16
inc
pushf
outsl
mov
scas
mov
icebp
push
data16
repnz
inc
orl
pop
repz
ljmp
dec
imul
push
jno
adc
popa
in
pop
in
dec
dec
outsb
ret
in
fcoml
data16
fadds
stos
clc
in
sub
fwait
jnp
mov
bound
jo
imul
xchg
adcb
xrelease
adc
xchg
addr16
loope
bound
cmpsl
lret
dec
fistps
outsl
inc
mov
out
enter
dec
jb
xchg
dec
push
xchg
ret
xor
lods
test
adc
loop
pop
sbb
dec
bound
pop
cmp
test
mov
pop
xor
fwait
sti
ficoms
adc
and
rclb
sbb
jb
repz
fs
or
push
inc
into
movb
jns
sbb
xchg
pop
insl
rorl
test
inc
xchg
cmp
dec
bound
or
and
out
arpl
das
scas
sbb
push
aad
lret
out
jmp
mov
scas
cmp
and
mov
lods
stc
ds
insl
sub
adc
sub
sub
movsl
fmuls
inc
les
xchg
in
scas
mov
or
cltd
or
std
lds
cmpsb
xor
enter
mov
aaa
adc
cmpsb
mov
js
mov
sub
in
jg
jnp
mov
scas
push
sbb
imul
fstpl
mov
cltd
lret
aaa
shrb
daa
jge
push
sub
xor
push
push
jae
jmp
mov
in
sbb
mov
movb
sbb
xchg
inc
xchg
movsb
mov
mov
cmc
iret
sub
fwait
lods
cmp
inc
add
dec
jbe
add
inc
mov
cmp
inc
inc
orb
cld
outsb
ret
inc
adc
mov
lret
test
push
mov
mov
sbb
mov
jb
gs
test
jns
arpl
jg
lcall
in
mov
jge
int3
fdivrl
sbb
jae
gs
movsl
lret
mov
sub
lret
pop
sub
fimuls
mov
mov
jp
shrl
rol
or
xchg
jmp
imul
pop
mov
push
cmpsl
sbb
sbb
inc
in
incb
adc
adc
mov
test
and
mov
inc
ljmp
cli
popa
rcll
mov
push
shlb
jbe
sar
add
xchg
push
out
int3
out
or
dec
mov
mov
xchg
jg
aaa
std
cmp
hlt
mov
sbb
jge
xor
xchg
or
push
push
ljmp
push
jnp
pop
dec
mov
xchg
hlt
aam
jg
out
lret
mov
subb
mov
or
sub
pop
popf
jecxz
int3
jl
mov
xor
mov
mov
pop
mov
adc
push
xor
loopne
shlb
test
cmp
xlat
dec
inc
push
push
rorb
movsb
rcll
sarb
test
fcoms
cmp
les
jge,pn
inc
lods
ss
mov
mov
stc
stc
pushf
fistl
xchg
xchg
aaa
scas
and
pop
adc
mov
icebp
adc
loop
jo
cs
lock
jge
adc
add
cwtl
mov
sbb
lret
mov
pop
punpckhwd
ss
mov
dec
sbb
lcall
jle
add
cmp
les
pop
test
and
jbe
stc
xor
popf
and
cs
pop
jecxz
in
sbbl
aas
pop
mov
test
les
push
shlb
fnstsw
or
iret
and
movsb
xor
mov
outsl
and
ds
loope
push
jo
cmp
fldt
lods
add
jge
adc
mov
fs
sub
push
and
mov
and
mov
movsl
int
in
cmpsb
pusha
sub
nop
ret
jg
jnp
dec
xchg
scas
lcall
xlat
leave
jnp
in
jg
inc
orl
clc
xor
sub
and
cltd
mov
test
decl
mov
leave
cmp
sub
ljmp
call
dec
sbb
pop
jmp
xchg
jp
ds
dec
xchg
fidivs
aas
fistps
pop
jl
or
fsubp
enter
les
ds
lods
aam
adc
pop
call
pusha
cmc
scas
push
xor
and
inc
lods
loop
or
pop
push
mov
xchg
jg
cwtl
push
mov
fnstcw
out
push
mov
cwtl
mov
ja
cwtl
pusha
xchg
xchg
inc
or
stc
out
rorb
pop
xchg
nop
cs
mov
mov
add
inc
call
jne
aam
lods
movsl
aam
jl
rcrl
cmp
sub
adc
ficoml
lret
mov
je
out
std
outsl
jge
and
mov
mov
inc
fildll
les
mov
adc
push
xor
mov
cmpsb
inc
mov
mov
and
add
aad
mov
adc
pop
jecxz
xchg
sbb
mov
sub
xor
pop
cmp
mov
fdivrl
mov
jmp
xchg
mov
stos
push
sahf
adc
or
mov
jle
xor
mov
les
rolb
xor
dec
inc
sub
arpl
mov
jns
mov
lds
jne
sub
sbb
lds
add
push
arpl
dec
push
repnz
jle
cmc
jns
inc
sub
out
and
dec
das
sub
mov
repz
jae
jle
ret
xchg
mov
push
int3
xchg
xor
es
shl
bound
or
repz
outsl
inc
inc
bound
outsl
jbe
jg
inc
lahf
rcr
pop
insb
fdivr
int3
jle
inc
mov
test
dec
andl
cmp
mov
or
add
aaa
and
pop
xchg
mov
gs
mov
xor
into
loope
push
mov
sbb
pop
jmp
outsl
stc
inc
cld
xor
jno
mov
clc
lds
int3
or
jle
daa
cmp
into
xor
out
xchg
jno
imul
mul
jge
fwait
js
adc
movsb
sbb
jne
shll
mov
pop
pop
lcall
ret
int3
mov
aas
mulb
add
or
scas
inc
pop
pmuludq
into
imul
out
sub
adc
push
xchg
or
or
pop
sbb
insl
sub
inc
mov
xor
sarb
out
sbb
inc
cli
ss
jp
sbb
and
into
cmp
cmp
lock
inc
push
es
jge
popf
pop
pop
and
pop
and
lea
lret
xorb
mov
ds
pop
inc
movsl
jo
leave
xor
or
leave
mov
out
imul
mov
mov
sub
cli
jecxz
icebp
jnp
sbb
push
push
aad
push
incl
movb
in
aad
rcll
mov
insl
pop
stos
outsl
cli
jp
in
es
cs
sub
mov
ret
inc
lods
xchg
inc
jg
out
andl
dec
imulb
movsl
inc
mov
in
inc
out
inc
bound
rol
cmpsb
jbe
push
scas
add
scas
mov
push
stc
pop
xchg
cwtl
or
out
mov
mov
jle
clc
movsb
sbb
mov
fbld
rolb
inc
stos
cs
jp
out
mov
cmp
out
dec
inc
xor
xchg
xchg
movsl
mov
lods
sahf
push
push
xor
aam
daa
aad
and
sbb
mov
lock
cmp
xchg
fimull
mov
xchg
sbb
inc
push
sub
in
mov
aas
loope,pn
repz
ret
out
outsb
mov
sub
pop
nop
in
gs
mov
int3
xchg
ja
and
sarl
leave
xor
or
pusha
add
adc
xlat
jg
mov
repz
stc
jnp
outsl
sbb
jae
cmp
ret
movsl
nopl
mov
lods
jne
hlt
sub
faddp
lea
jp
test
push
cltd
aaa
xor
sbb
cld
test
inc
jp
add
ret
add
outsb
mov
ret
mov
popf
in
and
loop
iret
mov
jnp
pop
inc
mov
mov
mov
or
stos
sub
inc
pop
push
cmp
lcall
add
aas
cmpb
loope
imul
sub
add
jecxz
insl
gs
pop
dec
cltd
les
loopne
jg
repz
cmp
aam
mov
sbb
test
jge
dec
scas
xor
sbb
popf
inc
xchg
test
add
xlat
inc
lret
mov
mov
pop
fisubl
add
sub
dec
pop
inc
lcall
or
out
fs
or
les
sbb
inc
aam
addl
negb
push
pop
mov
enter
cmc
cmpsb
jle
xchg
mov
ja
or
fstl
cli
int3
pop
xchg
sbb
lret
jecxz
sahf
lret
jg
add
or
xlat
in
fistps
mov
mov
lcall
dec
inc
insb
or
jns
mov
js
frstor
lret
xor
lahf
inc
test
out
movsl
sub
adc
mov
out
push
lret
loop
jno
int
push
lods
ljmp
push
dec
cltd
mov
or
sbb
or
movd
test
jl
mov
push
add
ja
mov
lret
orl
test
loopne
fisttpl
adc
sub
notb
push
setb
xor
sbb
into
adc
xchg
les
ljmp
adc
clc
or
arpl
add
pop
stc
xchg
out
stos
pop
pop
mov
cmc
mov
sbb
mov
popa
rol
push
adc
dec
mov
and
push
out
xchg
in
cmp
push
stos
dec
fstpl
divl
mov
cmp
sti
inc
inc
das
add
out
or
not
test
cmp
aad
sub
scas
lods
stc
push
and
shl
cwtd
sub
addl
xchg
paddb
rorl
ljmp
dec
and
outsl
sar
sbb
bound
int
stc
jnp
adc
notl
or
daa
hlt
insl
dec
popa
cmp
aad
push
cmp
inc
divl
dec
fdivp
mov
add
outsb
xor
stos
roll
dec
pshufw
cmp
mov
jge
xchg
mov
xchg
lods
aad
xchg
sarb
stos
sbb
out
scas
fcomip
call
add
jmp
add
jle
dec
lds
adc
leave
cs
mov
mov
ljmp
outsb
sti
pop
std
jecxz
xchg
jne
cmpsl
ror
rcrb
int
insb
xor
int3
addr16
ss
imul
jo
cs
push
hlt
xchg
push
adcl
push
xchg
pop
bound
and
js
fwait
ret
mov
dec
scas
cmp
mov
cmp
sub
into
push
mov
sbb
outsb
xor
std
cmpsb
bound
mov
push
insl
xchg
in
push
lods
sahf
mov
sub
xor
sbb
cmpsl
sbb
dec
adc
div
cmp
push
dec
cld
inc
ds
popf
test
dec
cmc
in
cmp
and
movb
inc
dec
sbb
stos
sbb
mov
and
cmp
sbb
push
cld
push
xor
shll
pop
fiadds
xchg
pop
xchg
pop
and
push
scas
sbb
cmpsb
adc
and
fucomi
add
mov
adc
lret
repz
pushf
jne
mov
ljmp
sub
or
push
dec
lret
inc
pushf
insb
sbbl
lds
sbb
rorl
pop
in
inc
pop
xchg
pop
js
dec
enter
lock
outsb
jae
ret
fst
sahf
test
push
mov
jmp
adcl
aas
gs
in
jge
stos
ret
ljmp
mov
push
cmp
sbb
pop
aas
ret
mov
daa
xchg
outsl
out
outsl
cmp
dec
ljmp
pusha
sbb
out
dec
aaa
mov
out
sub
push
jmp
dec
sub
xor
push
and
xor
mov
icebp
add
pop
dec
ja
jle
jecxz
pop
rcrb
push
mov
inc
pop
in
xchg
aas
fucomip
mov
adc
xor
sbb
pop
inc
test
or
out
loop
jns
cmp
pop
in
pop
or
mov
inc
mov
jbe
ficomps
fcoml
loop
shlb
mov
lea
cmp
xor
mov
mov
pop
and
or
add
dec
xorb
imul
inc
jno
aam
pop
xor
push
dec
adc
cli
negl
je
nop
mov
loop
mov
ret
mov
cmc
outsl
mov
sbb
or
inc
add
out
popf
out
outsb
sbb
scas
xchg
sub
outsb
push
mov
mov
adc
clc
mov
shl
sub
adc
sbb
aad
mov
fcomps
or
jl
mov
fiaddl
mov
daa
mov
push
ret
dec
test
fsubrl
xchg
andb
xor
aad
lea
cmpsb
xor
pop
push
cmp
int3
jmp
sbb
pop
sub
inc
and
rcrb
movsl
subl
lret
outsl
xchg
mov
jb
popf
push
or
lock
iret
mov
sub
adc
xchg
xor
jae
pop
mov
cmp
jge
fmuls
mov
jbe
ljmp
lahf
jne
jns
jecxz
push
mov
pop
add
scas
cmp
call
in
pop
sub
and
sbb
push
jmp
bndstx
dec
rclb
mov
xor
push
mov
dec
rcl
adc
popa
adc
loope
xor
push
aaa
rclb
jno
jnp
cmpsl
popa
inc
cmpsl
xchg
push
and
mov
clc
or
add
pmullw
and
rorl
shrl
jno
jmp
roll
jbe
pop
mov
lret
inc
ret
insb
test
in
lahf
xchg
mov
add
cvttps2pi
test
lret
inc
mov
fimuls
mov
adcl
int
xor
clc
mov
insl
lods
es
in
loopne
jle
push
xchg
ret
pop
cmpsl
jnp
xchg
push
xchg
cmp
das
mov
int3
and
dec
in
loopne
popa
adc
movsl
cmp
ret
enter
fbld
pop
xor
clc
leave
xlat
jl
lock
pushf
test
lea
inc
insb
or
ja
stos
and
xchg
jnp
add
in
in
jae
dec
dec
in
arpl
notb
pop
xor
inc
lods
dec
inc
push
xchg
arpl
sbb
and
movsb
or
mov
daa
outsl
xchg
sbb
call
lahf
fsts
dec
inc
add
sub
pop
dec
dec
lret
push
in
inc
cli
rcrl
pop
cmp
dec
jl
popa
lods
push
jns
add
mov
sbb
jp
lcall
sub
bnd
and
test
sbb
push
adc
dec
mov
jecxz
or
adc
sub
mull
lahf
cmpsb
daa
loop
cmp
pop
sub
push
scas
mov
stos
mov
rcrb
clc
mov
lea
and
imul
inc
push
adcl
shlb
jecxz
pop
xchg
ficompl
xchg
loopne
cwtl
das
ljmp
scas
int
shll
mov
mov
xchg
mov
ffreep
jo
out
fwait
cwtl
movsl
imul
lds
dec
adc
mov
lret
lods
loopne
imul
insl
pxor
lods
movd
dec
jmp
test
loop
inc
xor
icebp
ret
fdiv
popa
loop
pop
iret
cltd
ja
arpl
daa
mov
test
add
dec
les
and
enter
cmp
dec
cmp
orb
jp
sarl
add
ja
adc
inc
mov
scas
fsubl
aam
push
enter
scas
and
aas
xchg
cmpl
fcomip
inc
xchg
mov
notb
jge
xor
sbb
push
inc
and
insl
in
mov
jae
js
ds
loopne
add
mov
jbe
loopnew
mov
xchg
xor
inc
adc
subb
dec
xor
pop
mov
in
movsb
divl
sub
sbb
aad
icebp
stos
leave
inc
or
or
loopne
sahf
mov
sbb
shlb
mov
mov
rolb
popf
fmull
mov
je
mov
rolb
and
cmpsb
mov
jno
jl
lods
mov
add
in
xor
add
mov
and
pop
add
jl
pop
iret
push
jmp
pop
sub
or
dec
and
xadd
xchg
ljmp
loopne
inc
ja
dec
loope
pop
push
pop
test
cmpb
ficoms
jle
inc
cmpb
outsl
cmpsl
mov
inc
pop
insl
scas
leave
push
mov
sub
inc
stos
inc
push
fadds
inc
cmpsl
cs
rorb
dec
ds
xlat
rcrb
loop
dec
stos
ret
fwait
mov
in
mov
mov
or
jno
and
dec
repnz
std
cld
nop
popl
xchg
test
stc
mov
jne
aas
adcl
push
cmp
or
sbb
imulb
add
das
add
adc
aas
in
push
jnp
xchg
imul
fimuls
and
movsl
jle
sbb
jg
testl
les
or
pop
popf
int3
cli
maxps
pop
ror
sub
and
xor
xor
mov
lods
xchg
lret
cmp
repnz
dec
cmp
jbe
negl
ljmp
imul
into
mov
xor
or
sbb
jno
add
sarb
xlat
dec
enter
jge
mov
jo
mov
fwait
xchg
rorl
roll
stc
and
mov
dec
jge
dec
rclb
dec
adc
pop
add
push
and
int3
lods
rcrb
cmpsl
adc
or
out
fs
pop
stos
data16
xchg
jle
push
jl
xchg
andl
adc
callw
clc
push
mov
adc
test
adc
push
inc
push
jecxz,pn
int3
mov
inc
pusha
divl
test
loopne
subb
mov
inc
jb
add
and
mov
push
push
and
add
xchg
aam
loop
ljmp
ja
or
adc
fs
cmp
lods
loop
scas
push
outsb
and
sti
setp
add
cmp
cmp
dec
icebp
mov
imul
insb
cmpsl
push
xchg
cmc
cld
std
pop
lret
or
js
sbb
xor
sahf
mov
arpl
cmp
sbb
mov
push
xchg
movsl
mov
outsb
push
out
or
scas
outsb
int
repnz
mov
cmp
imul
push
cmp
pop
push
stos
pop
ret
ficomps
and
mov
test
out
clc
rolb
cmpsb
inc
adc
xchg
xor
cmp
sbb
xchg
push
loop
cmp
sbb
mov
inc
stc
sbb
add
inc
mov
lds
sbb
lods
arpl
add
inc
test
insb
mov
ljmp
adc
inc
mov
jae
pushl
jb
jns
loopne
xchg
out
lea
cmp
xor
mov
lea
sahf
inc
cmp
xor
jmp
inc
ja
icebp
jmp
adcl
repz
ss
sub
mov
popw
mov
out
jbe
std
ja
sbb
pop
out
adc
outsb
into
lret
aas
jmp
pop
jg
lret
fstl
xor
repz
iret
daa
lret
mov
int3
fsubrs
ja
or
lock
jl
fmuls
mov
push
cld
adc
fdivrl
ret
jle
test
je
lods
cmp
movb
popl
and
ss
jne
cmpsl
js
loope
adc
dec
stos
daa
push
sarb
mov
mov
and
lea
lods
dec
add
mov
add
shlb
lods
repnz
mov
in
hlt
mov
in
inc
jbe
insl
jbe
pushf
and
mov
mov
ljmp
test
lret
sahf
clc
jg
jnp
push
jg
mov
pop
pop
mov
mov
inc
sbb
jl
dec
repnz
jnp
popa
ret
xor
fdivr
mov
dec
xor
mov
mov
xor
and
iret
mov
movsl
pop
into
mov
clc
sub
int
subl
leave
into
in
adc
lods
stc
scas
xchg
ljmp
xor
cmp
mov
adc
xlat
out
dec
psrlq
adc
push
mov
mov
das
jnp
dec
pop
mov
cwtl
xchg
mov
adc
cltd
inc
rcrb
lea
add
sbb
jle
ja
cmpsl
sti
nop
shl
mov
mov
sbb
lahf
push
dec
cmp
mov
or
push
subb
jp
jno
sub
push
in
sarb
lcall
pop
std
sbb
cmpsl
mov
push
repz
cmp
sub
cwtl
cmp
or
jmp
jp
jbe
bnd
clc
mov
sub
adc
push
mov
mov
mov
cld
aad
xchg
cld
stc
into
cwtd
dec
adc
mov
inc
jg
mov
lds
push
or
cmpsl
adc
pop
inc
xchg
mov
test
in
test
leave
orb
pop
mov
fwait
sbb
lret
mov
adc
sbb
or
pop
jbe
sbb
sbbb
and
pushf
xor
xchg
bound
test
fimull
out
pop
mov
outsl
gs
inc
cmp
pop
xor
ja
scas
lock
ljmp
mov
cwtl
fwait
pushf
lock
xchg
xchg
and
rorb
xchg
jg
test
aam
and
pop
push
adc
jbe
pop
cs
pop
js
paddd
cmp
lods
mov
xchg
mov
sbb
insb
cmp
loopne
jbe
test
add
push
pop
or
jbe
insb
aas
cmp
push
rclb
dec
mov
lea
push
test
add
push
hlt
das
dec
testb
out
cltd
fistps
ret
dec
and
aad
testb
cmpsb
inc
jg
cli
or
cmp
lahf
fidivl
xor
outsb
pop
push
and
es
aam
lret
or
and
sub
mov
cwtl
xchg
ljmp
shrb
test
pop
fs
aas
dec
inc
out
xor
popa
push
daa
ret
inc
cmp
inc
out
lahf
xchg
fdivs
in
xor
cmp
mov
sbb
loop
mov
cmp
dec
andb
adc
xorb
pop
gs
lret
push
jae
fs
mov
scas
movsl
push
shrl
dec
mov
cmp
pop
push
lods
inc
and
fsubrl
into
fdivl
or
push
rclb
lea
out
push
xchg
adc
xchg
jb
pop
dec
jle
inc
adc
inc
sbb
jmp
and
or
adc
adc
dec
or
stos
pop
cmp
push
test
ficoms
sub
rcrb
mov
pop
jne
xor
and
outsl
xlat
xchg
jo
xor
xchg
cmp
arpl
xor
lods
je
inc
std
xchg
jb
aaa
sbb
scas
lcall
mov
popa
repnz
js
adc
xchg
fcmovu
leave
jl
test
push
mov
xor
outsb
jne
scas
lock
adc
add
push
in
popf
mov
aas
push
push
mov
mov
pusha
cld
lahf
adc
mov
sub
je
and
cli
rcrl
inc
out
and
jecxz
mov
jne
scas
in
and
jno
fst
jmp
mov
inc
lret
pop
cwtl
add
xor
xlat
and
push
lret
enter
rcr
inc
negb
xor
int
iret
shl
inc
lods
or
mov
ljmp
mov
mov
aad
jmp
aaa
push
adc
push
aam
cmp
xlat
int
negb
cs
xchg
pop
cwtl
cld
inc
call
shll
dec
mov
sete
xor
mov
nop
sub
rol
and
jo
fcmove
inc
inc
sarb
xchg
inc
int
adc
in
lahf
xor
mov
inc
inc
pusha
mov
outsl
fcmovnu
or
gs
jbe
push
int
or
shlb
jg,pn
sbb
mov
jge
fsubs
ss
ret
insl
sub
dec
sub
loop
popf
in
je
cli
add
fsqrt
lret
xchg
jecxz
pop
jp
js
mov
movsl
icebp
aaa
add
jmp
sahf
push
cmp
and
push
xchg
and
push
shr
push
add
cmc
mov
es
and
cmp
jo
mov
sbb
das
inc
inc
push
jmp
mov
jp
pop
aas
addr16
xchg
pop
jg
sub
push
pushf
imul
add
xchg
add
daa
inc
cli
or
mov
je
cs
insb
in
xchg
mov
sbb
add
loop
sbb
test
dec
sub
test
dec
or
ds
cmp
xchg
sbb
into
xchg
aad
fdivs
aad
clc
push
subl
sbb
in
jp
sbb
pop
xor
and
jo
xchg
cmpsl
add
lret
mov
jle
andl
push
test
cmp
sbb
data16
cmp
mov
and
cmp
pop
jne
xchg
mov
movsb
lods
dec
das
insb
adc
jns
js
xchg
sub
lcall
out
mov
cmpsb
shlb
lds
lret
in
imul
sbb
pop
jae
mul
movsb
aam
les
xchg
cwtl
and
leave
sahf
loop
cmpsl
or
mulb
dec
aam
repnz
fcmovne
or
cmp
sub
loopne
fidivrs
xchg
subl
add
mov
stc
mov
sub
or
xchg
pop
mov
xchg
dec
fildl
or
orb
add
fs
lods
sub
dec
and
or
fmuls
pop
test
dec
roll
imul
ja
push
movsb
jg
mov
sub
rcrl
mov
sti
jns
mov
scas
scas
xchg
xchg
mov
dec
sub
xor
cld
and
push
shlb
es
aam
es
lss
lcall
fdivrl
iret
cmpsl
jns
int3
aaa
in
scas
mov
or
stos
pop
je
sbb
in
mov
jmp
xchg
sbb
inc
cmp
mov
sbb
dec
sbb
inc
int
jnp
fwait
sub
stos
push
dec
jne
mov
jo
nop
mov
sbb
inc
sub
jo
pushf
fbstp
jmp
scas
xorl
lock
cmp
ss
rcrl
iret
cmpsb
sub
push
cmp
or
xlat
push
dec
testl
pop
mov
enter
sub
xchg
sub
cmp
fcompl
sbb
mov
pop
imul
mov
xorb
cmp
stos
faddl
or
mov
or
insl
pop
adc
stc
pop
aam
sbb
mov
data16
cmp
mov
xor
outsl
ja
sti
test
push
mov
lds
fsubrs
ror
cwtl
mov
dec
cmp
ljmp
xchg
mov
sti
popf
out
sub
push
pop
in
mov
sbb
or
imul
loop
loopne
mov
popa
into
movsl
adc
sbb
lret
inc
icebp
je
jns
int3
lea
fs
lds
repz
cmp
push
mov
mov
inc
inc
lea
add
rorl
xacquire
xchg
movsl
cmp
mov
sbb
push
fwait
lcall
or
mov
jp
jo
jne
shl
fsubl
pop
pop
fwait
add
or
insl
and
or
cmpb
rolb
aad
jo
xor
mov
mov
cmp
pop
jb
xor
mov
dec
popa
xchg
mov
inc
leave
cmp
shll
push
lret
or
aas
hlt
pop
imul
xchg
dec
jo
mov
out
nop
or
and
push
fcomps
dec
and
repnz
in
cmpsb
insb
sub
int
ror
and
movsb
push
movsl
lods
rcl
popf
pop
mov
push
mov
das
jg
jmp
jp
mov
int
fwait
mov
aad
lock
ja
pop
mov
xor
xchg
fisttps
je
js
ljmp
lret
pop
rcll
mov
mov
movsl
inc
jb
pop
mov
iret
lcall
xorb
xchg
nop
push
outsl
scas
jnp
fsub
ja
or
push
dec
jmp
inc
nop
mov
pop
jl
mov
xchg
pop
mov
fwait
push
clc
push
xchg
jae
lret
sbb
addr16
test
pop
and
test
into
outsl
inc
push
fimull
repz
push
xor
mov
ret
mov
out
outsb
js
outsb
repz
jns
inc
and
jp
mov
fnstsw
into
scas
push
mov
sbb
mov
dec
int3
push
je
aam
leave
sub
mov
dec
mov
sub
into
mov
push
xor
and
mov
or
jns
mov
xchg
inc
fimull
push
lcall
mov
inc
jno
push
dec
jae
mov
and
inc
xor
mov
or
mov
cld
xchg
dec
leave
fcompl
pop
adc
and
mov
inc
ljmp
mov
insl
mov
adc
lock
hlt
push
scas
xchg
popa
pop
add
mov
jns
xchg
mov
test
adc
xchg
rcr
dec
bswap
xchg
and
and
mov
imul
lret
pushf
jle
gs
xchg
or
dec
mov
xor
mov
inc
xor
mov
pushl
scas
jecxz
das
dec
mov
pop
mov
jge
ret
adc
or
aam
dec
mov
dec
pusha
loope
sbb
add
lods
mov
lods
mov
sbb
sub
int
daa
xor
inc
mov
pusha
push
jno
dec
add
es
mov
mov
sub
sbb
sub
addr16
add
mov
mov
inc
fisubrs
insl
jecxz
aam
cs
cltd
pop
adc
cmp
sub
fisubrl
pop
and
fwait
sbb
push
lret
sbbl
sbbl
repz
repz
xchg
mov
pop
and
cmp
in
into
je
loop
into
fsubl
gs
ss
jb
iret
fldt
ret
pop
dec
mov
pop
mov
and
sub
imulb
out
xchg
ret
cmpsl
push
pop
out
dec
fidivs
roll
rcrl
jne
cmpb
push
dec
sarl
xchg
cmp
add
or
xor
in
mov
mov
scas
and
xchg
push
sub
mov
pop
add
sbb
push
orl
add
add
bound
pop
inc
ljmp
inc
jbe
stos
xor
inc
divb
lock
cmp
adc
and
add
dec
in
lock
mov
dec
test
rcr
pushf
mov
fsubl
mov
or
outsb
in
dec
add
inc
data16
negb
xor
shrb
loope
dec
rclb
sbb
loopne
sbb
movsb
push
lcall
data16
stos
cli
push
mov
push
inc
imul
xor
lret
arpl
adc
scas
ja
int
adc
push
add
stos
push
inc
add
imul
sarb
dec
and
or
scas
sub
jp
iret
xchg
in
mov
enter
in
sub
add
push
cmp
sarb
inc
sub
aad
sbb
xor
pop
cmpsb
das
xorb
mov
add
daa
xor
enter
dec
pop
fisubl
movsb
imul
and
es
push
lret
data16
lds
cmc
fucomi
sub
cmpsl
sarl
or
test
push
add
rcrb
sub
test
xchg
popa
movsb
adc
bound
mov
lcall
pop
insb
shll
lods
mov
ret
push
stos
adc
andl
test
jmp
push
push
fildll
std
test
movsl
or
idiv
lahf
cmp
sar
xchg
enter
pop
ret
mov
idivl
mov
mov
xchg
ret
lcall
xchg
fstpl
inc
mov
in
add
adc
adc
cmp
jmp
mov
in
scas
daa
jae
es
repnz
lods
add
roll
scas
cmp
jae
cwtl
scas
mov
mov
and
xchg
mov
lea
std
imul
mov
movsl
push
aas
movsb
dec
sub
dec
outsb
pop
sub
mov
and
imul
adc
adc
mov
je
lahf
xor
dec
repz
lods
mov
mov
pusha
mov
and
mov
cmpb
jecxz
mov
fsubs
out
icebp
sbb
out
ljmp
dec
cmp
rclb
das
cmp
xchg
pop
dec
sbb
pop
sub
jb
mov
das
ds
push
nop
sbb
icebp
inc
fsincos
adc
adc
and
and
pop
mov
dec
adc
stc
xchg
cmp
jge
jecxz
push
mov
aaa
mov
sti
xchg
xor
jecxz
repnz
push
dec
mov
fwait
lods
xor
and
xchg
push
in
orl
sbb
mov
sub
lret
je
and
sbb
cmpsb
jl
adc
cmpsb
lods
sbb
fwait
xlat
in
dec
xchg
aad
inc
add
lcall
add
mov
lds
movl
sbb
xor
dec
add
or
jmp
fimuls
jns
and
stos
sbb
jno
pop
cmp
pusha
mov
subb
xor
inc
insl
mov
xlat
movsb
add
and
out
adc
stc
pop
adc
sub
xor
mov
adc
jno
push
inc
inc
lock
stos
push
and
jmp
adc
or
cmp
mov
push
sub
call
imul
les
xchg
test
jp
cmp
icebp
das
or
in
pop
sub
jmp
mov
imulb
pop
jge
ljmp
cmp
push
loopne
mov
pusha
and
and
data16
and
pop
in
fsubs
push
je
xor
jmp
iret
jo
push
adc
jae
xchg
mov
fisubs
pop
mov
adc
xchg
push
dec
inc
sub
testb
mov
arpl
pop
bound
sub
push
rorb
outsb
fiaddl
push
outsl
cmp
push
cld
lret
jns
andl
xchg
mov
popa
xor
cld
int
and
inc
sbb
lods
pop
inc
xor
mov
repz
icebp
test
push
addr16
ja
data16
xadd
out
test
in
cmc
jbe
pop
fiaddl
xor
and
jae
pop
data16
sbb
mov
adc
fnstsw
out
clc
aaa
fldt
je
rol
pop
or
dec
mov
xor
fdivrp
aad
push
imul
add
or
pop
cmp
and
mov
test
pop
inc
hlt
rcll
dec
or
data16
adc
adc
icebp
stos
add
fs
int
leave
push
fs
xor
pop
push
sar
dec
shlb
ret
test
mov
rcrl
std
adc
repnz
dec
push
addb
mov
lahf
add
mov
jmp
mov
repnz
lret
stos
mov
sbb
enter
jo
xor
stc
ljmp
test
mov
sbb
push
jnp
mov
sub
pop
shlb
xor
cltd
scas
push
mov
dec
xchg
inc
hlt
ret
loope
and
push
inc
dec
jbe
mov
fstps
mov
bound
jp
sub
insb
adc
inc
sbb
adc
insb
lcall
pop
xorb
lods
ljmp
cmp
out
fnstcw
mov
cli
or
lahf
and
test
xlat
leave
aaa
mov
cmp
icebp
dec
mov
hlt
jmp
cli
mov
test
xorb
push
adc
push
push
clc
jge
jecxz
jg
xchg
sbb
push
mov
fldcw
adc
mov
mov
jp
xor
sarb
das
adcb
out
in
jp
loopne
insb
scas
dec
popf
add
mov
sarb
loope
push
xchg
xchg
jae
std
jbe
or
inc
dec
push
xor
lods
pop
jp
adc
sub
cld
cmpsl
scas
bound
div
or
lock
sbb
mov
push
nop
aad
call
jo
mov
pop
adc
mov
jp
les
pop
in
aaa
push
fidivrs
push
icebp
push
aas
jae
jp
into
sti
and
shr
sbb
jb
btc
add
or
mov
jmp
inc
xchg
pop
jbe
xor
repnz
repz
adc
jg
xor
idivl
cmpsb
xchg
xor
adc
push
nop
iret
pop
ret
dec
scas
pop
xchg
ret
movsb
call
push
arpl
adc
mov
sub
loope
in
xor
jle
cmpsl
cmp
shl
xlat
movb
xchg
and
ss
inc
and
aam
xor
add
pop
jb
xor
cmp
adc
mov
loopnew
faddl
mov
imul
pop
push
loopne
and
add
ficoms
dec
loopne
xchg
movups
mov
jb
xchg
fcompl
mov
lock
jo
mov
imul
shlb
and
sbb
fbld
mov
dec
sub
lds
loopne
sbb
dec
sbb
jne
or
xchg
add
test
mov
push
mov
dec
sub
mov
sbb
pusha
fscale
pop
pop
sbb
adc
inc
fwait
mov
lret
cmpsl
xor
outsb
pop
xchg
out
fnstenv
dec
enter
inc
mov
pop
mov
test
aas
in
and
lds
rcrl
add
push
pop
int3
pushf
sbb
repz
imul
inc
jno
imul
insl
push
adc
sub
sarl
movsb
xorl
aaa
mov
outsl
mov
mov
out
nop
xorl
push
push
cmovae
inc
sub
pop
inc
lock
test
adc
out
orb
xor
xor
push
inc
rcll
xchg
cmc
xchg
add
in
repnz
mov
xlat
rclb
call
mov
into
rcrl
into
sbb
out
jb
ds
adcl
lret
sub
imul
xchg
stc
out
sbb
jae
fstps
push
sub
std
mov
aam
push
adcb
mov
iret
pop
dec
popf
cltd
clc
push
repnz
mov
pop
aas
jbe
jne
jae
insl
fcompl
cmp
push
notl
mov
adc
jp
dec
pmaddwd
int
int3
sub
fsincos
andl
int
add
imulb
mov
push
push
out
cli
mov
cmpsl
sub
pop
dec
mov
addl
mov
and
mov
pushf
sbb
fcmovbe
cmp
sbb
arpl
cmp
cmc
cld
iretw
fisubs
cmp
jmp
es
pop
insl
sbb
xchg
sub
mov
fistpll
push
dec
iret
or
popf
jge
push
mov
repnz
int
into
aad
add
nop
scas
ja
lea
dec
xchg
or
lret
mov
and
xor
insb
push
xchg
scas
adc
sarb
lock
int3
loopne
out
dec
pop
pop
ret
fsub
arpl
lret
xorl
add
sub
mov
inc
xchg
jnp
xor
add
and
mov
mov
sar
mov
jnp
aaa
pop
scas
scas
in
mov
adc
xor
fnstcw
cs
sbb
jge
lods
mov
adc
jle
mov
jge
lret
loope
pop
push
pop
push
mov
stos
mov
dec
filds
sub
pop
fdiv
jecxz
push
mov
inc
clts
pop
out
adcb
inc
shll
mov
dec
xor
mov
xchg
test
data16
sbb
xor
lods
aas
push
inc
test
les
nop
inc
ljmp
repnz
mov
pop
in
std
pop
dec
pop
shl
into
dec
stc
xor
mov
cmp
bound
dec
pop
and
or
mov
aaa
outsl
arpl
or
adc
es
fldcw
xlat
or
stc
ja
stos
xchg
adcl
pusha
clc
mov
pop
add
push
stc
push
adc
inc
scas
jb
cld
lds
ss
dec
sbb
rcl
xchg
jmp
cmp
jle
inc
sbb
cmp
xchg
lcall
sbb
and
fcmovu
inc
iret
sbb
push
mov
or
push
cwtl
jno
bound
xchg
scas
fmull
and
pop
push
mov
test
pop
inc
or
inc
clc
adc
cmp
cld
sub
sub
xchg
out
adc
inc
jmp
outsl
inc
test
dec
pop
jle
xchg
or
sbb
in
cmpl
dec
flds
inc
lret
jge
pop
xchg
shrl
insl
movsl
cmc
dec
inc
rcll
cmp
pop
out
xchg
loope
pop
loope
std
ja
cmc
xor
jp
shll
mov
push
and
in
push
xchg
or
test
rcrl
lahf
lret
test
xchg
xchg
stos
test
cld
xchg
out
shll
fisttps
mov
cmp
jg
out
scas
inc
das
stos
xlat
mov
adc
jno
in
sub
cmp
testl
jecxz
pop
mov
ucomiss
pusha
fs
mov
add
mov
push
ja
sub
or
cs
push
jge
sbb
mov
inc
add
jmp
lretw
cmp
push
int
aad
scas
pushf
push
jno
dec
cmp
popf
fisubrs
pop
xchg
bound
xchg
imul
xchg
jnp
leave
mov
sub
mov
cmc
inc
push
test
andb
xlat
lods
cmpsb
les
xchg
mov
in
daa
js
int3
loop
loope
jnp
cmp
xchg
lcall
pop
adc
aam
mov
mov
stos
sbb
cmpb
xchg
mov
cltd
push
inc
je
cmp
cmpsb
lahf
aad
or
aam
push
jns
sahf
lcall
nop
popf
jnp
das
movsb
or
das
sbb
test
cmp
popf
incl
ja
rcrl
imul
es
mov
fnsave
shll
pop
test
ss
add
repz
popa
jmp
call
mov
jae
cmp
lea
shlb
mov
sub
pop
addr16
clc
add
lea
cmp
lret
lds
in
nop
jp
xchg
repnz
sub
xor
imul
cmc
jle
out
cmp
dec
mov
scas
sub
mov
dec
leave
mov
push
dec
cltd
outsb
xor
push
sbb
or
test
xchg
je
jne
pop
lods
lock
inc
out
sti
insb
adc
bound
in
adc
sub
popf
xorb
inc
jmp
jl
push
pop
dec
pop
cmc
lret
ret
sbb
loopne
pop
stos
test
mov
insl
xlat
les
repnz
mov
xor
xor
mov
ficoml
or
fstps
mov
addr16
xchg
shrl
test
mov
jp
dec
cmpsl
cmp
xchg
xchg
push
inc
mov
inc
cs
lret
sbb
inc
in
lods
mov
dec
xor
popa
test
aas
dec
into
push
mov
push
sub
shl
sahf
push
test
sarl
dec
inc
inc
inc
push
sbb
repnz
fidivl
cmp
adc
jbe
insb
in
lods
in
loop
jno
pop
test
mov
sub
mov
fs
cmc
dec
out
call
push
mov
and
mov
sub
dec
fwait
dec
add
ss
stos
adc
lret
mov
or
xchg
mov
jb
push
push
add
cmp
scas
je
or
lahf
fwait
pusha
outsl
subl
and
pop
pusha
adc
int
sub
leave
add
das
mov
lock
stos
cwtl
push
push
jle
ds
push
lret
cltd
mov
xchg
mov
push
dec
je
dec
mov
loop
shlb
iret
mov
push
sbb
mov
notb
lods
dec
test
pop
lcall
sub
test
mov
sti
mov
das
addr16
into
xchg
sub
or
dec
into
iret
es
adc
inc
mov
xchg
popa
les
movsl
lret
add
jae
enter
jecxz
pop
or
xchg
xor
mov
data16
sbb
xchg
imul
push
sub
mov
dec
xchg
xor
push
test
icebp
jle
jne
xor
mov
rorb
ret
push
scas
add
add
sar
popf
inc
lcall
shll
aam
or
sbb
sub
sti
inc
pop
ja
adc
in
xchg
pop
inc
add
mov
mov
out
test
into
jl
xor
cmpsb
les
push
add
les
add
inc
or
adc
xor
cld
and
test
and
cmpsl
lea
bswap
and
and
inc
je
je
iret
es
out
push
xor
xor
pop
mov
ficoms
add
cwtl
mov
sub
shlb
sbb
mov
adc
aaa
icebp
bound
in
pop
test
add
cmp
mov
pop
fstpl
popf
sub
dec
push
xchg
ljmp
inc
mov
xchg
movsb
cmpsb
xchg
jne
test
xchg
dec
lods
repz
fidivl
xchg
xor
xchg
mov
shlb
test
int3
arpl
jmp
inc
mov
roll
data16
mov
pop
lret
loopne
incb
or
cltd
js
push
add
aad
and
rorl
ds
sahf
cmpsb
xor
pop
frstor
sub
push
jne
shl
out
fcomip
sbb
cmp
lods
inc
jb
test
inc
and
push
subl
inc
inc
ja
cmp
loope
pop
mov
add
jp
or
rclb
xchg
dec
ret
incl
inc
pushf
hlt
adc
push
inc
and
into
mov
push
jmp
cltd
xor
jmp
out
in
mov
aad
mov
outsb
test
stos
ds
icebp
aad
aaa
shl
outsb
stc
add
sub
cltd
cli
mov
add
xchg
xchg
movsb
aam
repz
xchg
push
ljmp
mov
pop
and
adc
xor
add
in
lods
dec
aas
jle
xlat
fcoml
or
lcall
rorl
packssdw
push
xchg
pop
out
fdivp
sbb
xchg
dec
pusha
in
nop
and
popf
popf
mov
xor
mov
out
mov
andl
repz
mov
mov
and
sub
loopne
push
cmpsl
nop
imulb
ds
sbb
mov
bswap
add
sbb
addr16
into
popa
xchg
pop
mov
sub
xor
pop
dec
movsl
imul
or
mov
arpl
mov
xor
ljmp
js
pop
movsl
xchg
inc
mov
ljmp
addr16
mov
inc
addr16
xchg
lcall
fwait
ljmp
aam
push
clc
mov
lods
mov
jl,pt
lods
cmp
into
movl
sub
xchg
push
js
repz
add
outsl
jge
jmp
push
loopne
xchg
testb
pop
mov
xchg
pop
mov
lahf
cmp
add
cmp
aad
sbb
sub
add
fisubl
xchg
fdivrs
sbb
mov
test
mov
jp
or
or
fidivl
and
cmp
dec
lock
mov
fstps
adc
sub
mov
dec
jns
push
mov
nop
insb
xchg
inc
int3
jmp
cli
popf
inc
fwait
ja
pop
test
inc
xor
inc
cmp
push
test
add
and
sbb
aas
fadds
mov
dec
sub
xorb
rclb
fcoml
and
sub
arpl
shlb
pusha
repz
sbb
mov
psrlw
fisubl
push
ret
pop
dec
inc
mov
cld
ret
ds
dec
lods
add
sahf
xchg
cmp
mov
fwait
mov
push
scas
mov
push
xor
mov
hlt
lret
popa
mov
movsl
data16
mov
cltd
push
mov
stc
fdiv
mov
fisttps
sub
nop
xor
jo
aad
cmp
cmp
push
std
sarl
dec
fidivl
in
outsl
out
out
int
insl
in
leave
divl
nop
mov
fisttpll
xchg
push
dec
and
cmp
mov
aaa
ss
mov
inc
xchg
push
nop
sbb
sahf
ret
mov
push
push
inc
and
fcmovb
push
mulb
jae
aas
daa
pop
mov
sbb
xor
out
xor
fwait
push
divb
rolb
xor
or
pop
dec
lahf
mov
jmp
call
stc
stos
stc
shl
jp
mov
mov
pop
cmpsl
cmp
mov
sbb
dec
mov
scas
add
scas
cwtl
repnz
hlt
lret
dec
cmp
pop
test
cmpsl
or
push
push
aaa
dec
mov
add
data16
xorb
notb
mov
popf
bound
imul
mov
xlat
mov
or
imul
movsb
int
imul
icebp
std
adc
mov
rolb
push
aad
sarl
in
fs
pop
fsub
pop
cld
push
pop
xor
es
mov
sbb
inc
dec
dec
hlt
xor
adc
sbb
jae
adc
addb
inc
add
cmp
push
fcmovnu
add
xlat
inc
and
mov
movsb
lea
push
repz
mov
adc
movsb
push
cmpsb
outsl
and
mov
push
aad
jbe
mov
ret
in
sbb
outsl
dec
icebp
jl
inc
fstpt
clc
sub
sbb
jmp
mov
mov
sbb
xchg
int
pop
daa
xor
sti
sar
adc
inc
icebp
lock
mov
shrb
pop
push
lcall
push
mov
scas
mov
mov
jno
or
fstpt
push
sub
cwtl
sbb
popf
dec
and
shrl
bound
lret
cmp
ds
sahf
fcoms
aas
fs
repnz
mov
mov
ja
jb
and
int3
dec
divl
jnp
add
fstps
adc
xlat
and
or
mov
das
out
jl
insb
insl
push
jnp
jecxz
cli
inc
into
or
imul
and
xchg
adc
xchg
sti
mov
es
test
int3
lods
inc
add
dec
ss
adc
pop
add
rorl
lret
push
insb
test
xchg
push
jmp
sub
push
dec
or
fwait
call
jo
xor
xor
stc
jmp
pop
mov
push
sti
int
jl
inc
negb
jbe
and
xchg
mov
mov
fidivl
cmp
jle
and
call
mov
and
inc
repnz
or
mov
addr16
mov
addl
sub
stos
lcall
les
sbb
jnp
popf
cmc
sbb
lret
lods
mov
stos
jae
imul
popa
sbb
dec
shl
cltd
pop
jno
insb
inc
ret
rolb
rolb
xchg
jl
out
pop
push
ds
popa
test
out
hlt
lock
and
sub
fwait
jecxz
push
int3
xor
je
mov
scas
lahf
nop
mov
add
push
mov
or
cmp
inc
inc
in
adc
dec
mov
pop
jmp
xor
mov
fmull
orl
in
test
push
or
dec
jle
fmul
add
pop
lahf
addb
pop
aam
es
shrl
xchg
loop
mov
mov
adc
fsubp
lock
or
mov
insb
leave
rorb
inc
inc
jge
sbb
data16
adc
add
imul
inc
dec
push
stos
xchg
stos
sysenter
adc
and
cli
cwtl
ljmp
push
mov
pop
inc
mov
push
dec
xchg
pop
mov
cmp
dec
mov
popf
jbe
in
js
sahf
std
pop
aad
enter
cli
add
in
xchg
inc
nop
sbb
shrb
sub
out
lahf
call
mov
hlt
adc
mov
xchg
mov
and
and
jmp
pop
or
scas
movsl
dec
mov
gs
jmp
popf
je
icebp
loopne
mov
insl
add
aaa
sar
movsl
cs
mov
test
mov
stos
xchg
xchg
aas
or
xor
arpl
mulb
sub
lds
sbb
inc
jg
inc
lret
cli
jns
mov
pop
mov
inc
pop
stos
inc
outsb
or
dec
nop
out
jmp
andb
sub
gs
push
outsb
cmp
test
sbb
fnstsw
and
or
xchg
mov
insl
idivb
xor
adc
or
movsl
jl
test
insl
jmp
out
scas
sub
adc
pop
cwtl
pop
or
lahf
sub
jb
loopne
insl
mov
dec
jne
adc
outsb
aas
jl
pop
sbb
xchg
rclb
ja
inc
nop
dec
cmp
jp
xlat
aad
xchg
fwait
ret
arpl
ds
jno
inc
dec
pop
out
ficompl
ret
stos
xlat
jb
fcmovne
insb
stos
divb
adc
ljmp
lret
and
test
sub
cmp
movsl
xchg
into
imul
ret
xor
xchg
aad
mov
xlat
or
cld
add
rcr
rcll
push
insl
test
in
fisubs
rcr
push
pushf
add
add
or
add
jp
or
adc
in
sahf
and
push
out
xchg
aam
mov
sbb
jb
cmpb
add
int
test
cld
push
cld
jbe
scas
jnp
call
xor
or
mov
mov
push
stc
jge
xor
jnp
or
fistps
fsub
sub
fst
dec
test
mov
sbb
cmp
pusha
mov
xor
mov
sub
lods
stc
aam
in
pop
cmpsl
fstpt
adc
sbb
icebp
negl
movzwl
xchg
aaa
jle
popa
sbb
orl
mov
mov
arpl
sbb
dec
repnz
xor
mov
mov
mov
push
pop
xor
push
push
shr
jmp
into
sub
repnz
cld
call
xor
test
inc
cmp
sub
test
adc
enter
popa
dec
mov
xchg
inc
dec
xchg
fisttpll
jmp
pop
push
mov
sbb
xchg
sarb
pop
inc
stos
cltd
lds
mov
fidivl
rcll
pop
inc
arpl
scas
mov
pushl
or
sub
jbe
mov
mov
jbe
sbb
pop
rcll
popf
sub
xchg
call
mov
push
mov
ss
pusha
xchg
sbb
mov
loop
sahf
cmpb
mov
xchg
cltd
pusha
popf
mov
fs
adc
inc
push
mov
and
mov
ljmp
bound
dec
leave
imulb
jo
mov
push
push
xchg
inc
ljmp
leave
out
shlb
dec
jne
add
push
test
xor
shlb
repz
cwtl
gs
enter
mov
inc
jb
xchg
push
inc
inc
mov
mov
xor
cmp
mov
mov
mov
ds
jmp
pop
iret
inc
pop
cltd
test
das
aad
xchg
scas
and
dec
mov
pop
dec
scas
jp
sub
cmp
pop
pop
cmp
inc
mov
xchg
pop
mov
addb
adc
ljmp
imul
dec
pop
sar
call
sbb
inc
pop
sbb
fstl
or
push
arpl
dec
test
adcb
inc
mov
or
push
adc
cld
aaa
bound
and
cmpsb
push
jge
cmp
insb
into
icebp
in
xchg
movsb
xchg
data16
out
and
js
fsubs
push
mov
mov
and
lcall
sbb
gs
insb
adc
out
cwtl
lock
ret
jmp
add
sub
cmp
sub
push
lahf
movsl
push
mov
push
cli
lods
cmpsb
repnz
add
out
sbb
cs
int
mov
xchg
daa
lcall
fiadds
dec
shrl
xor
insb
fwait
push
xchg
cld
jle
dec
mov
fs
mov
add
es
mov
add
xchg
cmp
cmp
ficoms
das
jbe
xchg
push
lea
rcrl
sub
push
stc
int3
jb
iret
orb
mov
cld
inc
adc
push
push
ret
jo
pop
jl
pop
push
xor
pop
sahf
shlb
cwtl
lret
adc
sub
repnz
pop
or
xor
or
add
add
push
data16
push
clc
sub
jno
cltd
scas
cmpsl
sbb
xchg
inc
aaa
xlat
out
sbb
push
in
jle
sarb
insl
adc
xlat
ljmp
push
ret
mov
push
mull
ret
sti
adc
daa
in
cmp
jg
nop
in
xchg
pop
pop
mov
push
repz
jns
pop
sbb
fistl
in
icebp
enter
ret
ss
out
aad
mov
cmpsl
fbstp
xchg
sub
push
aad
sbb
aas
call
rcrl
jmp
mov
test
imul
sbb
repz
inc
imul
sbb
int3
leave
mov
gs
scas
movb
dec
stos
dec
sub
pop
cmc
push
out
pop
xor
out
mov
inc
mov
inc
cmc
test
inc
test
cmp
int
xchg
add
pop
adc
fwait
scas
and
js
add
xor
test
or
pop
cld
mov
loop
jbe
bound
dec
ret
mov
dec
or
add
ljmp
xlat
or
jne
push
xchg
jecxz
bound
inc
and
pop
hlt
sbb
add
out
and
jbe
push
dec
addr16
xchg
pusha
pop
jne
jge
xor
cmp
sti
arpl
hlt
scas
fistl
adcl
js
cmp
into
outsl
sbb
jp
jg
loop
orb
adc
pop
loope
and
subb
sub
pop
movsb
cs
xor
inc
and
out
mov
add
lock
ret
jo
cmp
push
imul
xchg
jo
mov
fdivl
xchg
mov
adc
jns
xor
in
xchg
dec
fldcw
adc
inc
jo
mov
push
imul
xor
paddusw
lret
xchg
outsb
fs
shll
dec
int
dec
mov
mov
imul
xor
fwait
ljmp
cmp
mov
fisubl
hlt
xor
insl
cmp
xchg
outsb
push
cmc
adc
negl
push
inc
xor
outsb
outsl
stos
sti
sarl
or
stos
push
push
fsubr
mov
mov
sub
ret
or
adc
scas
cmp
test
xor
xor
mov
xchg
insl
pop
and
cmp
addr16
orb
cmp
cmp
mov
add
xlat
in
insl
out
test
mov
sbbb
pop
xchg
data16
aam
pop
sub
cmp
xchg
pop
xchg
mov
repnz
ljmp
es
pop
mov
popf
inc
das
fldenv
xchg
or
mov
sbb
dec
and
jle
sub
sub
bound
in
cmp
dec
nop
into
fs
lods
incl
pop
cld
mov
jne
in
arpl
leave
push
leave
pop
xchg
mov
mov
cltd
sub
push
stos
add
inc
fsubl
xchg
mov
and
bound
cmp
movsb
cld
inc
xchg
lahf
mov
push
test
lcall
repnz
jno
in
daa
lcall
jmp
cmp
in
lods
fmuls
mov
std
ljmp
into
or
cltd
mov
arpl
xchg
push
and
pop
insl
jp
push
fiadds
or
imul
mov
jle
imul
arpl
push
ja
or
cltd
push
popa
mov
cmp
xchg
mov
mov
xor
sbb
or
pop
imul
test
fists
fiaddl
dec
int3
js
push
jns
sub
inc
adc
add
cmpsl
test
jo
insb
ja
push
pop
loop
dec
insl
aam
stos
add
sub
push
mov
cli
std
out
sub
int
inc
roll
lcall
data16
nop
sarl
insl
push
and
cmpsl
fs
mov
push
add
xor
loope
push
lret
sbb
xchg
push
out
scas
sub
cmp
pop
and
xchg
mov
push
in
test
mov
cmpsl
adc
xor
push
lods
clc
mov
cmp
int
mov
or
inc
loope
sbb
xchg
outsl
jp
jno
mov
fucomi
ja
clc
ficompl
xor
int3
adc
mov
movsl
xchg
cmp
push
or
fisubs
xor
loope
movsb
push
jg
imul
ret
lahf
cmp
mov
xor
sub
cmp
ret
add
lea
ficoms
shlb
inc
loop
mov
sub
subb
pop
andb
ja
xlat
push
movzwl
mov
or
push
out
andl
xor
fimuls
mov
inc
or
mov
xor
dec
add
add
push
sbb
add
push
jno
fidivrs
pop
or
adc
fcomps
mov
xchg
jg
cmp
cmpsl
data16
ror
subb
xor
shlb
in
mov
fwait
add
jg
mov
imulb
sbb
xchg
rcrl
pop
mov
daa
inc
out
mov
push
mov
or
subb
push
ja
dec
xchg
mov
jb
and
fnstenv
mov
push
and
cmp
outsb
loop
in
aad
and
mov
out
sti
add
fwait
jb
mov
sbbl
mov
out
jo
dec
mov
scas
sahf
sbb
bound
cltd
mov
inc
sbb
les
scas
arpl
sub
ja
ss
fucomp
lock
pop
imul
push
mov
hlt
popa
mov
andl
popa
pop
mov
fbld
dec
pop
dec
jmp
in
mov
and
sub
test
jno
adc
cli
and
mov
cwtl
stos
cmp
insl
xchg
ja
and
daa
or
lret
jge
lahf
pop
push
dec
loope
cmpsl
repz
mov
stc
cli
pop
mov
pushf
hlt
pop
cmp
cmp
mov
pop
loope
push
loop
dec
test
in
out
scas
mov
cltd
cmp
mov
jl
or
stos
pop
cwtl
dec
jbe
or
or
lock
call
dec
dec
dec
jbe
shrl
sub
push
mov
clc
add
pop
jl
or
inc
inc
add
sub
mov
and
inc
push
flds
dec
imul
shl
outsb
jne
dec
enter
add
test
bound
mov
push
mov
scas
xor
popa
test
add
pushf
mov
imul
inc
adc
jae
xor
cmpsl
xchg
adc
aad
pop
mov
sub
adc
lcall
add
shrl
or
xchg
test
inc
movsb
sub
lods
add
mov
push
enter
push
push
int
or
fidivs
jle
pop
das
xchg
inc
pop
add
jns
or
repz
or
lcall
jge
inc
jnp
inc
in
jle
jmp
hlt
adc
mov
push
mulb
stos
pop
les
add
pop
jge
inc
pusha
jle
jo
jle
lds
push
cwtl
sti
jb
sbb
pop
mov
mov
pause
xor
lret
adc
mov
pop
ljmp
and
test
test
pop
icebp
push
mov
aam
je
dec
adc
mov
or
nop
andb
inc
leave
aam
inc
movsl
jnp
xor
daa
test
and
jbe
adc
lret
dec
inc
inc
jnp
push
enter
clc
repnz
stos
add
mov
outsl
dec
pop
jb
mov
sahf
mov
mov
out
add
mov
stc
popf
jp
or
jge
movsl
pusha
cmp
pushf
out
mov
jle
push
pop
cs
mov
dec
int3
mov
insb
xchg
mov
xchg
iret
icebp
gs
jmp
inc
mov
mov
addr16
push
popa
xchg
int
je
movzwl
insb
xor
cltd
scas
adc
loop
fwait
mov
jmp
and
in
or
cli
add
lret
dec
push
cmp
xor
push
xchg
push
repnz
lret
jl
loop
int
lods
sbb
pop
xor
add
xor
mov
stos
jb
dec
je
test
add
xor
lock
icebp
add
loopne
ret
mov
jmp
mov
mov
out
sbb
je
xchg
into
aad
lods
mov
pop
test
jmp
xor
jns
push
cmpl
jle
orl
jmp
enter
xchg
xchg
cltd
lock
icebp
notb
push
dec
or
mov
in
jle
imul
pop
sbb
and
mov
push
notb
adc
in
loop
adc
push
jl
pop
pusha
movsb
clc
cltd
xorl
mov
sbbl
adc
movsb
sub
ljmp
add
call
cmpsl
mov
add
jne
test
hlt
mov
and
in
fcomps
cmp
stos
mov
std
xchg
icebp
pop
jnp
sub
jg
test
jae
lahf
loopne
mov
rcrb
add
dec
repnz
lds
sub
and
ja
rclb
lods
out
add
fwait
clc
fisttpll
jns
mov
rorb
mov
dec
cwtl
inc
cmp
std
fbstp
and
loopnew
lods
adc
sbb
inc
bound
add
jno
fldl
fs
xorl
decl
fstpl
test
pop
push
push
into
jae
add
aaa
inc
iret
mov
push
cmp
add
mov
or
ss
inc
cmpsl
push
add
pop
mov
loope
lock
sti
push
xor
inc
cld
xchg
stos
dec
pop
pushl
push
lods
ficoml
pusha
mov
lds
cmpsl
pop
pop
lret
das
cltd
xor
ss
popa
movsb
ss
int3
push
and
xlat
pop
mov
dec
push
push
cmpsb
xchg
sbbl
push
mov
out
jns
sub
push
daa
aam
testl
xchg
imulb
pop
bound
aas
push
in
xor
dec
adc
out
push
xlat
cwtl
xor
movsb
out
ds
cmpsl
das
or
ljmp
movsb
and
mov
cwtl
test
or
dec
fstpl
xchg
mov
or
pop
nop
popa
add
xor
push
popa
jmp
push
les
fld
and
or
jmp
loope
xor
cmp
arpl
pop
out
sub
call
xor
mov
push
mov
movsl
mov
mov
outsb
pusha
dec
scas
sbb
lret
push
xchg
jne
jl
and
cmp
lods
mov
or
orl
fwait
push
sbb
push
xchg
xchg
leave
push
ljmp
test
pusha
scas
insb
pop
js
mov
mov
dec
xchg
movb
in
xchg
cltd
or
add
shrl
aad
dec
add
into
loopne
clc
or
incl
add
sbb
jbe
jg
mov
lcall
test
xor
mov
pop
dec
fcmovnbe
arpl
out
lods
lds
cmp
push
xor
push
cwtl
je
js
stc
inc
mov
dec
dec
rcr
out
push
pop
sar
nop
sar
sbb
cmp
inc
sbb
pop
or
cwtl
sbb
notb
jne
sub
sub
mov
stos
cmpsb
testl
xchg
lea
mov
or
int
inc
jb
mov
jmp
pop
test
push
dec
imul
fstps
loop
insb
mov
int3
cmpsl
out
in
arpl
cwtl
ljmp
mov
dec
jmp
iret
in
add
aaa
pop
ds
flds
sub
or
dec
xor
in
ljmp
iret
call
addl
shrb
mov
in
adcb
insl
adcl
adc
idivb
lcall
inc
inc
in
mov
or
dec
mov
push
lret
dec
pushf
ds
lds
cmc
cmp
aad
icebp
or
mov
adc
mov
fwait
imul
xchg
loop
test
shrd
jae
call
out
xchg
outsb
sbbb
mul
or
and
popa
jp
aad
mov
out
sbb
or
mov
popa
stos
repnz
jae
mov
adc
stc
das
es
xchg
mov
mov
outsb
mov
xchg
cmpsl
call
and
xchg
in
and
test
cmpl
fidivs
xorb
movsl
inc
push
in
fs
mov
push
cmp
mov
inc
fimuls
pop
cli
fildll
mov
and
jb
inc
push
jo
or
mov
and
into
clc
fs
arpl
cs
mov
dec
test
dec
mov
es
and
imul
add
jmp
iret
cli
or
mov
adc
or
ljmp
es
addr16
sub
js
cmp
xchg
les
cmp
push
lods
mov
xor
and
xchg
xor
test
pop
or
in
push
lret
imul
or
test
push
push
test
or
shrl
inc
lea
sbb
aaa
mov
rcrl
std
and
adc
xchg
mov
push
shlb
repz
mov
cmp
inc
pop
repnz
icebp
adc
xorb
mov
pop
mov
in
and
ljmp
sahf
insb
leave
mulb
ds
bound
jmp
js
daa
scas
xchg
cmp
sbb
arpl
sub
inc
mov
or
insb
sahf
lcall
dec
inc
sub
mov
jge
das
fwait
cmp
mov
sbb
movsb
pop
int
mov
cmpsb
test
sbb
test
jnp
out
fsubr
iret
inc
clc
xor
shl
mov
pop
adc
pushf
mov
lret
lret
fwait
daa
sahf
in
add
add
xchg
fnstcw
jge
cs
cmp
mov
pop
das
pop
jmp
sbb
pop
aaa
roll
cwtl
lods
sbbl
movb
cmp
setae
cmp
imul
push
nop
sbb
inc
add
imul
push
cli
inc
push
loopne
xchg
jne
mov
and
adc
int3
in
inc
mov
scas
mov
stos
add
bound
in
das
mov
out
sub
push
jmp
scas
jne
imul
adc
inc
popf
mov
jle
jge
mov
call
jbe
push
ss
push
aad
mov
xchg
std
daa
lods
adc
jno
add
fsts
pop
loop
mov
out
sub
mov
repz
push
adc
mov
sub
roll
daa
mov
mov
jle
and
cmpb
movsb
movsb
push
and
es
add
and
fnstsw
xchg
pop
xlat
popf
sbb
pop
lcall
std
push
or
data16
into
test
mov
scas
xor
mov
in
leave
adc
mov
loope
jecxz
stos
cwtl
add
pop
dec
sbb
cmpsl
inc
sbb
dec
lds
les
in
sub
mov
adc
sti
jp
mov
push
jnp
ljmp
push
and
clc
imul
dec
ja
and
xor
pop
mov
cwtl
xchg
clc
push
pusha
xor
sahf
fs
or
pop
cltd
sub
sub
sar
sbb
ss
push
xchg
in
aam
insl
pop
mov
pop
pop
or
sbb
mov
nopl
in
mov
sarl
nop
mov
lahf
adc
neg
mov
cmp
repz
add
jmp
movsb
in
shrl
std
pop
and
ljmp
xchg
and
adc
inc
inc
mov
sub
inc
lea
movsw
pop
nop
or
ret
gs
out
xchg
ljmp
jo
sbb
out
push
ds
out
mov
dec
jns
pop
cmpb
test
dec
cmp
ljmp
pop
sbb
outsl
add
mov
xchg
fs
xchg
sti
adc
ds
push
jae
pusha
xor
adc
mov
test
popf
jne
mov
fs
loop
in
fisubrl
mov
dec
xchg
in
jae
jbe
stos
pusha
out
pop
nop
push
lcall
repz
in
push
scas
sbb
hlt
loopne
or
mov
sub
insl
cmpl
push
addr16
dec
cmp
stc
jo
aad
pop
jbe
imul
mov
adc
lods
dec
cld
sarb
inc
xchg
js
sub
sarb
ja
inc
push
mov
mov
add
fstpt
jnp
cmc
mov
lods
or
es
out
and
mov
roll
push
enter
xchg
pop
sbb
xor
cltd
rolb
imul
mov
adc
fwait
jnp
sub
add
add
fnstcw
dec
es
cmpsb
clc
lret
xchg
and
xchg
cmp
mov
xor
dec
test
nop
hlt
in
call
rcll
xchg
dec
fs
pop
jae
cmp
aad
push
mov
cwtl
lods
js
fildl
xlat
jecxz
rorl
jbe
js
loop
sub
push
add
int3
or
enter
pop
fildl
stos
cltd
jne
or
cmp
bound
js
arpl
negl
icebp
aaa
xchg
pop
int
addr16
cmp
gs
jg
loopne
cmp
ja
je
xor
cmp
push
fadds
mov
pop
scas
pop
and
nop
cmpsl
mov
repz
and
or
outsb
inc
or
lret
push
mov
mov
and
test
pop
out
cmp
out
sub
loop
xor
mov
out
mov
adc
movsl
clc
or
sub
sbb
dec
out
sbb
xchg
mov
sbb
sbb
sti
xor
out
xchg
lods
int3
cld
push
repnz
adc
frstor
stc
adc
mov
fdivrs
mov
cmp
jns
cmpsb
cmp
adc
fiaddl
jg
in
inc
jo
xor
dec
lahf
jno
mov
iret
lock
xchg
ds
gs
xor
ljmp
repnz
adc
addr16
lods
mov
rcl
push
xlat
dec
fsubrs
imul
int
inc
addl
fdiv
add
test
mov
aam
dec
mov
mov
outsb
sub
imul
adc
cld
shlb
popf
in
shll
push
enter
xchg
fsubrl
insb
sahf
inc
clc
jg
shll
sbb
jg
xchg
mov
mov
jg
shufps
sbb
or
xor
inc
add
rcl
jmp
push
popf
mov
mov
or
fsubr
and
cwtl
and
adc
aam
das
pop
push
mov
pop
cmp
xchg
sub
jne
sub
fstpl
les
add
das
imul
pop
mov
jecxz
mov
xchg
jp
push
add
out
mov
mov
push
stos
and
jb
dec
add
sub
cmpb
xor
pop
mov
lds
std
fiaddl
and
test
mov
in
das
mov
mov
xchg
sti
jb
sahf
add
test
cmp
xchg
pusha
push
cmp
in
jns
hlt
push
jg
fisubs
push
adc
dec
xlat
pop
mov
nop
inc
xchg
cmp
cmp
in
nop
addr16
mov
xchg
dec
jp
ljmp
and
mov
cmpsl
adc
sub
cmpsl
hlt
and
add
lea
pop
dec
add
cmpsb
inc
mov
mov
jbe
movsb
fcomps
jb
icebp
testb
pop
mov
inc
out
cs
subl
mov
lcall
push
scas
sub
dec
dec
insb
jg
and
mov
push
sahf
loopne
bound
or
pop
mov
lds
fcoml
fucom
fnstcw
nop
jge
jp
cmp
fisubrs
dec
mov
jo
stos
lea
cld
pop
xlat
and
inc
out
xchg
mov
dec
cmp
sub
pop
dec
adc
mov
and
pushf
xor
insl
in
cmpsb
popf
loop
imul
sub
pop
pop
cmp
jne
and
mov
pop
fiaddl
xchg
fists
in
lret
lret
stos
push
stc
pop
mov
aad
cwtl
rcr
test
cmc
lret
stos
and
cmpsb
sbb
sar
bound
pop
stos
cmc
lret
ret
add
sbb
hlt
ds
jmp
jae
lret
fnsave
rorl
ja
jmp
rorl
loope
and
cmp
or
pop
xor
addr16
xchg
out
cmp
test
xlat
add
push
icebp
int3
or
sahf
repz
pop
mov
roll
subl
push
adc
cmp
ja
pushf
lret
xor
lods
sahf
fldl
cmp
sub
xor
fcmovnb
clc
push
les
stos
jb
jne
shl
shll
or
arpl
es
dec
xchg
fnstcw
loop
clc
ret
dec
nop
sbb
sub
pusha
add
pop
add
pop
add
lods
pop
add
adc
pop
mov
mov
bound
sub
inc
inc
std
shll
pop
shlb
inc
sahf
sbb
nop
add
xchg
ds
movsl
xor
xor
sbb
push
pop
push
gs
or
xor
xchg
sub
mov
iret
mov
push
out
pop
dec
js
adc
int
and
push
aad
mov
ficoml
push
cmp
sbbb
mov
mov
xchg
js
or
xchg
push
or
mov
inc
and
mov
add
jg
clc
mov
sbb
rol
fildll
and
sbb
or
ret
cmpsl
stos
inc
jl
push
mov
xor
roll
divb
bound
dec
rorl
scas
mov
cmc
rcrb
sub
add
xchg
adc
fwait
sub
cmpsb
or
repnz
adc
inc
mov
notl
or
push
out
add
insl
rcrl
jl
mov
mov
stos
lods
shlb
xchg
sbb
in
cmp
popf
or
adc
push
arpl
lcall
sbb
das
jnp
test
jp
inc
inc
xorl
incb
sub
add
push
sbb
add
icebp
in
sbb
fistpl
lcall
cmp
jle
mov
scas
lods
test
jle
cwtl
or
and
xchg
pop
sub
add
fucomi
scas
adcl
jae
mov
ja
xchg
add
inc
xchg
inc
pop
pop
cli
insl
stos
xor
xchg
mov
pop
xchg
pop
mov
mov
nop
xchg
pop
ljmp
in
or
jbe
mov
add
incl
add
lcall
xor
xor
pop
sbb
sub
sub
hlt
jnp
das
dec
and
sub
push
js
pushf
gs
mov
loopne
add
nop
sbb
mov
adc
je
add
idivl
jne
or
out
je
xor
cld
mov
int
adc
bnd
fisubrl
xchg
loopne
and
stc
scas
push
in
sbb
enter
lcall
insl
mov
and
repz
clc
jge
mov
mov
out
and
arpl
push
push
out
mov
sbb
mov
or
xchg
in
pop
das
cmp
and
jae
loopne
inc
pop
lods
test
sbb
cmp
dec
jnp
ret
push
inc
rolb
pop
popa
aam
dec
cltd
adc
and
xchg
test
int
jo
dec
and
add
pusha
addr16
std
call
jp
into
xchg
popa
sti
jp
aam
sti
mov
mov
mov
sub
pop
adc
sub
nop
mov
mov
push
sbbb
ret
xchg
dec
insl
jmp
notb
stos
lods
lods
cmp
fidivrs
lods
adc
jg
daa
sbb
cmp
call
jg
int3
mov
std
adc
lea
jne
or
movsl
adc
callw
rcll
dec
imul
xor
das
and
inc
xchg
pop
sarb
sbb
jae
or
mov
mov
and
fdivl
jp
jge
jmp
or
int
and
sbb
incl
add
lods
xchg
ret
aas
or
sti
paddusw
mov
pop
scas
nop
std
cli
insl
es
adc
add
push
push
pop
push
dec
stc
inc
ja
lock
cld
fwait
adc
cmp
stos
fwait
jg
lea
jnp
push
xor
fs
les
inc
movsb
jnp
jl
add
movsb
xchg
repnz
insl
enter
mov
mov
inc
int
jbe
inc
aam
mov
mov
cwtl
es
test
call
xchg
out
pop
lods
inc
aas
xchg
scas
ret
into
fwait
sbbb
dec
call
fildl
cmp
out
or
ds
rorb
arpl
push
pop
addb
enter
sbb
fnstenv
aam
cltd
test
in
cmpb
mov
jl
add
leave
in
add
push
loope
loope
jb
push
push
and
ds
iret
aad
push
fildll
outsl
sbb
cmp
lods
jb
jno
pop
dec
sahf
xchg
mov
pushf
fidivl
jge
fisubl
mov
mov
dec
jns
adcl
mov
scas
test
xchg
push
shl
outsb
pop
add
mov
aas
outsl
xchg
mov
out
inc
sbb
aam
sahf
lods
xchg
aad
sub
push
and
in
push
dec
lods
stc
popa
aam
lea
and
sub
lds
adc
icebp
ficompl
pop
dec
mov
insl
sbb
mov
les
dec
mov
push
lods
in
mov
ljmp
cmpsb
xchg
add
inc
fisubs
lock
shr
mov
add
mov
sub
cltd
imul
and
fldt
and
es
mov
cmc
out
cli
jae
and
test
push
out
mov
mov
pop
dec
adc
icebp
fimuls
dec
in
pop
xchg
mov
push
xchg
movsb
sahf
sub
dec
xor
cmp
xchg
cmp
imul
scas
maskmovq
imull
or
les
jae
pop
adc
stc
cmp
in
mov
ljmp
cwtl
mov
xor
loopne
movsl
sub
cwtl
inc
adc
push
faddl
dec
xchg
mov
xor
xchg
inc
mov
sbb
push
sub
mov
ficomps
jmp
shrl
div
loope
xchg
xchg
pop
out
out
sbb
sub
fimull
test
sbb
mov
push
adc
repz
cmp
mov
xchg
popf
mov
mov
pop
rcrb
sbb
cmpsb
mov
sar
clc
sahf
fwait
inc
mov
pusha
iret
sbb
inc
xchg
std
outsb
jbe
xchg
push
ja
sub
xor
iret
mov
jecxz
and
mov
and
push
scas
frstor
or
sub
mov
pop
mov
enter
loope
pushf
mov
sbb
xchg
in
mov
ljmp
push
add
cmp
xchg
or
xchg
sti
out
cmc
shlb
out
push
sub
cmpsl
and
pop
imul
mov
fisttpll
add
sbb
test
jo
insb
pop
mov
inc
xchg
xchg
xchg
lea
mov
mov
cmp
cmpsl
leave
or
jo
push
ds
test
clc
push
pop
pop
jecxz
ror
ret
pop
mov
idiv
loop
test
and
jl
cmp
cld
jle
pop
push
and
ds
ficomps
popl
aas
scas
pop
mov
lret
stc
mov
dec
faddl
stc
push
pop
push
jno
mov
outsl
gs
test
mov
sbb
cmpsb
in
int
stos
jns
rcrb
pushf
and
dec
jle
clc
mov
and
mov
pop
out
bswap
sbb
insl
iret
sub
mov
jp
mov
loop
ljmp
pop
lea
sbb
cmpb
ss
cwtl
xchg
mov
fcomps
inc
push
lds
loope
pop
and
mov
ja
mov
add
ss
push
adc
cmp
leave
rol
pop
bound
dec
mov
push
push
ret
sub
sbb
inc
sbb
fnstsw
loop
dec
popa
mov
test
cli
mov
lahf
arpl
data16
mov
jge
data16
pop
movb
int
test
pop
xchg
lods
pop
fcmovb
or
push
xor
leave
sbb
rorl
dec
sub
push
and
rcll
xlat
aad
xor
adc
lcall
mov
inc
sti
std
pop
dec
adc
xor
ss
mov
pop
or
lods
cwtl
jmp
rolb
adc
cmpsb
inc
insl
ss
shll
xor
cmpsl
dec
ja
xor
push
xor
pop
inc
and
mov
hlt
mov
outsl
es
jl
dec
mov
push
imul
mov
rcrl
js
pop
cltd
jmp
sub
and
pushf
aaa
mov
push
and
jmp
les
arpl
push
mov
inc
jle
add
leave
lock
nop
push
inc
mov
jnp
mov
dec
mov
shrl
sahf
jecxz
arpl
mov
sahf
imul
loop
ja
ja
lods
shl
xor
xchg
stc
push
mov
xchg
test
mov
hlt
inc
mov
jae
sbb
insl
aas
xor
scas
mov
incb
adc
mov
sbb
std
adc
stc
jb
adc
mov
jbe
movsb
stos
ljmp
mov
jb
sbb
pop
out
sub
jp
jecxz
cltd
daa
gs
dec
cmp
mov
lock
mov
jae
xchg
fcomi
inc
push
lcall
lea
pop
mov
shll
rcrl
ja
or
or
adc
jge
outsb
shll
mov
jae
inc
push
push
mov
xchg
mov
sub
sub
push
lcall
lret
lret
int
sub
or
pop
call
pop
cmc
jae
das
bound
xchg
das
lods
sbb
xor
push
es
ret
cmp
sbb
mov
ja
pop
inc
sub
jbe
sbb
ss
je
lahf
xchg
mov
lret
cmc
outsb
mov
iret
jae
push
outsl
inc
push
ret
decb
testl
loop
aam
xor
xor
iret
mov
inc
ja
push
and
cmp
cmc
add
xor
xchg
or
test
xchg
loopne
add
adc
jle
mov
jle
cmp
xor
icebp
xchg
gs
cmp
push
push
jmp
adc
lahf
in
sub
lret
push
jae
lods
sbb
dec
cmp
repz
rol
in
inc
pop
das
js
push
addr16
push
cmp
scas
mov
push
fbld
loop
fidivs
push
insl
jnp
or
inc
inc
clc
inc
xchg
popf
push
test
cwtl
add
mov
enter
or
pushf
and
mov
cmp
and
lret
int3
test
pop
inc
cmp
outsl
xlat
lret
cli
jmp
xor
pop
push
inc
and
push
xchg
in
incl
cmp
lahf
jmp
jg
cmp
dec
mov
lret
daa
inc
imull
mov
es
int3
rcll
addr16
jne
insl
and
aas
int3
outsl
cmpl
lret
cmp
mov
int
jo
jbe
movsb
insb
jecxz
pop
mov
push
pop
pop
lea
popf
fisubrl
pusha
cltd
mov
scas
sbb
fdivrl
mulb
dec
pop
jmp
testb
lret
into
and
mov
mov
psllq
lret
cmpb
jmp
mov
pushf
enter
inc
jp
pop
insl
pop
js
jmp
or
adc
pop
cmpsb
das
mov
lcall
out
mov
push
adc
lods
dec
je
fnstenv
inc
mov
add
inc
mov
sti
mov
mov
outsb
fcmovb
stos
stc
sbb
xor
into
dec
sbb
pop
int
sbb
cmp
cmpb
fisubrs
xlat
fs
sub
in
xchg
inc
cwtl
mov
dec
fsts
pop
cli
cmp
or
sub
ds
dec
aad
outsl
cmp
mov
rorl
scas
jge
popa
movntq
out
sbb
push
adc
push
push
arpl
push
mov
add
push
shl
dec
mov
dec
daa
dec
jae
mov
arpl
aam
mov
icebp
popa
xor
lcall
cld
mov
cmp
fbstp
pop
pop
insb
imul
pop
jge
xchg
dec
mul
and
sub
and
mov
or
imul
sub
cli
push
shlb
sbb
ficompl
dec
int3
fsubl
jg
mov
jno
push
std
mov
dec
inc
shr
jge
or
mov
call
push
xor
sub
push
and
or
test
scas
scas
push
mov
pop
push
ds
jle
in
rcrl
mov
jle
outsl
arpl
inc
or
test
dec
test
cmp
cmova
incb
inc
popf
cs
cmc
in
out
lods
lret
inc
scas
xor
or
movsl
mov
cmpsb
and
lret
sub
daa
xchg
pusha
xorl
test
iret
jmp
nop
adc
cmpsb
scas
popf
mov
push
push
inc
adc
pop
jnp
mov
mov
pop
xor
cmp
adc
mov
hlt
inc
ret
jnp
add
out
mov
out
mov
movsl
divl
adc
sub
es
data16
cmp
jmp
fiadds
ficomps
jge
sbb
jno
shll
sti
mov
inc
paddw
inc
test
mov
out
shlb
pop
jmp
mov
jbe
shll
or
xchg
sub
jp
addr16
lods
pop
mov
inc
or
pop
lods
mov
movsl
subb
test
lahf
and
jg
and
xchg
push
out
and
pusha
sti
lods
push
cmp
sub
popf
cmp
or
pop
je
xchg
sbb
movsl
ljmp
addr16
adc
mov
stc
mov
inc
into
mov
sbb
push
lock
push
adc
cmp
imul
dec
das
sbb
jnp
ss
inc
movsl
jns
scas
fiadds
imul
xorl
dec
scas
xchg
or
add
or
xchg
xchg
xor
mov
jb
jl
push
sti
dec
in
cmp
cmp
clc
outsb
in
push
subl
or
outsb
leave
sbb
js
cmp
cld
sub
test
push
mov
cmp
cmpsl
mov
add
repnz
vunpckhps
mov
pop
add
dec
sbb
shl
jp
jo
xorb
loop
clc
aaa
sbb
cmp
push
sbbl
test
out
push
inc
cmp
lahf
adc
and
push
mov
insb
jno
imul
insl
stos
aam
fstl
icebp
sarl
mov
ja
jno
ret
add
in
ljmp
push
cmp
xchg
xchg
fsub
cmpsl
jns
idivb
mov
aam
sbb
in
es
push
fidivrs
pusha
cld
test
mov
dec
int3
mov
push
adc
xchg
das
mulb
jmp
aam
or
int3
ds
cmp
cmc
test
hlt
leave
adc
mov
insb
sbb
scas
not
fdivrs
dec
mov
test
cmpsb
bound
mov
jl
enter
add
sti
insl
pop
sbb
int
cmp
aaa
call
push
or
rcl
in
sbb
mov
int
and
cs
dec
ja
cld
out
inc
jne
mov
jg
sub
push
cmp
stos
ljmp
and
scas
inc
cmp
push
frstor
fsubrl
ret
cltd
fsubp
mov
cmpsl
mov
push
bound
jecxz
sbb
push
sti
scas
push
jmp
dec
pop
lret
and
bound
repnz
ret
mov
or
jb
dec
outsb
dec
dec
inc
popf
sbb
dec
fs
nop
push
push
jge
psubq
inc
fsts
jle
cmpsl
lea
push
das
push
xchg
sti
mulb
stos
mov
movb
pop
push
or
fcmovne
cmp
mov
fcmovnb
ss
loop
cmp
stos
xchg
and
sbb
test
xchg
jge
pop
sub
mov
mov
les
xchg
or
sub
shrb
xor
into
out
sub
fldcw
dec
movsb
mov
sub
sbb
iret
xor
xchg
shll
sub
sub
and
cmp
mov
mov
in
adcl
ljmp
add
jnp
sbbl
xchg
push
dec
in
in
test
lahf
sbb
rorb
ret
mov
dec
cld
jno
dec
sbb
jae
lret
mov
jne
out
push
cmp
inc
scas
jecxz
int
mov
mull
iret
add
test
in
xchg
sbb
cmp
jmp
repz
lds
jge
aaa
dec
cwtl
dec
or
adc
imul
add
xchg
std
insb
data16
pmulhuw
mov
mov
cmp
or
sub
cld
fsubrs
mov
sahf
cmp
adc
ret
ja
gs
fsubr
lret
dec
xor
sbb
in
push
fiaddl
dec
lods
cmp
pop
sub
inc
rcr
lret
mov
jmp
mov
and
scas
lret
cmp
psubusb
cltd
rcll
mov
cld
jmp
jecxz
dec
mov
mov
shll
mov
sbb
cmpsl
sbb
sbb
inc
mov
and
add
mov
and
cmp
pop
aaa
insb
outsl
inc
jo
jmp
sahf
adc
add
adc
mov
cwtl
sbb
je
lret
jecxz
jl
pop
push
gs
scas
mov
inc
ficomps
lea
icebp
dec
in
mov
mov
rorb
jle
xor
pop
or
mov
out
rolb
mov
inc
dec
addl
lret
cmp
testl
cwtl
xchg
negl
mov
xor
stc
push
xor
insl
cmpsb
aam
push
mov
sbb
jns
adc
pop
xchg
vpsllq
in
enter
and
xchg
out
jmp
iret
dec
mov
int3
pop
outsb
test
int
xchg
fbstp
xor
push
daa
push
mull
stos
aad
sbb
xlat
dec
pop
inc
add
jle
out
inc
push
jne
sub
fisttpll
nop
rorb
rorb
sub
push
fcoms
cli
adc
add
add
repnz
mov
dec
xlat
push
imul
fwait
mov
dec
xor
pop
gs
fildll
jp
pusha
pop
adc
mov
loope
xchg
mov
imul
dec
enter
mov
add
push
jnp
or
cmp
inc
dec
xor
inc
sbb
and
movsb
enter
inc
lret
in
cmp
xchg
cmpsl
sbb
cmpsb
cmp
xchg
mov
and
dec
xchg
pop
call
aad
mov
into
lea
shlb
movsl
sub
les
sub
or
dec
in
mov
pop
mov
lret
adc
or
mov
xor
lea
in
cld
pop
sbb
stos
xorl
psubd
sar
mov
add
stos
xlat
ret
cmpsb
pop
cmp
imul
mov
xchg
leave
inc
mov
in
adc
xchg
or
movsl
sbbl
push
push
nop
ljmp
xor
leave
shlb
sub
add
jno
pop
jo
rol
mov
mov
adc
cmp
adc
push
sbb
mov
sub
popf
sub
fidivl
aam
call
cmp
or
dec
fldl
adc
pop
cmp
pop
das
out
loopne
or
lret
add
mov
testl
push
repz
mov
push
in
xor
and
das
mov
lods
adc
leave
xchg
cmp
sub
dec
enter
cmp
cmp
xchg
in
jle
mov
popa
jl
mov
or
add
pop
xor
clc
lret
ret
mov
xor
and
shll
ss
xchg
push
mov
add
fiadds
and
xchg
and
loopne
mov
loop
or
lret
test
jl
xchg
jae
movsb
jp
or
pop
sbb
push
cmp
or
sub
xchg
insl
sub
mov
sub
sbb
call
adc
int
or
mov
mov
jmp
dec
pushf
cmpsb
push
jnp
test
push
adc
ss
pop
int3
sub
jmp
sbb
insl
xchg
loop
inc
add
xchg
and
push
test
and
pop
jmp
dec
pusha
pop
out
mov
mov
fldt
mov
or
repnz
jg
outsb
addr16
lahf
sub
movsb
fs
fs
ret
jge
daa
shrl
pop
and
fnstenv
lahf
movsl
pop
jg
repnz
pop
in
ds
xor
enter
mov
pop
mov
push
pop
push
dec
and
pop
scas
rcr
pop
test
adcl
addr16
ret
push
and
insl
shl
sahf
add
out
ret
lret
arpl
mov
sub
fstpl
sub
push
xor
jae
loop
xchg
jno
sbbb
mov
test
jnp
ss
repz
fmul
mov
ljmp
out
fwait
jg
les
ds
push
pop
cmovae
adc
bound
lret
adc
pusha
lcall
shll
or
mov
pop
pop
call
push
repnz
inc
and
xchg
out
shl
das
dec
sub
pop
dec
xchg
mov
dec
inc
xchg
push
inc
cmp
and
mov
sub
push
test
or
scas
scas
data16
push
sub
cmp
xor
inc
fiaddl
or
repz
sub
std
mov
pop
cmp
andb
movsb
mov
rcll
sub
inc
in
push
enter
lock
mov
push
jb
cmc
ljmp
sbb
hlt
cmp
push
xor
test
fxch
sub
sahf
mov
cmp
xor
sub
repz
xchg
leave
outsb
int3
inc
sbb
push
aas
and
xchg
and
popf
pop
jge
orl
add
mov
cmp
inc
mov
sub
loope
call
cmp
test
push
mov
mov
push
sahf
xchg
test
sbb
stc
pusha
mov
pop
frstor
pusha
sub
imul
mull
sbb
movsb
xchg
outsl
pop
and
adc
push
jp
pop
dec
add
cltd
add
push
jnp
inc
push
inc
pop
insl
loop
push
inc
loop
gs
adc
aaa
jne
hlt
push
lods
dec
add
repz
bound
test
enter
xchg
sub
test
xchg
cmp
pop
push
cmpsl
fdivr
insl
mov
sti
sub
jmp
insb
stos
outsb
adc
xchg
fsub
mov
fdivl
jbe
aam
add
dec
mov
dec
fstpt
push
push
push
push
insl
mov
jo
xchg
aam
mov
lods
sbb
add
push
xchg
or
repz
sbb
mov
mov
mov
std
in
das
repz
jne
xor
stos
xchg
add
movsb
lret
imul
mov
sbb
pusha
ss
and
mov
inc
test
lcall
mov
ret
mov
adc
scas
call
cltd
movsl
rclb
xor
xor
mov
bnd
sbb
repz
mov
and
popa
movsl
or
push
sub
xor
fadd
js
add
and
pop
xchg
cmp
add
ret
pop
ret
cmp
dec
stos
testl
xor
fwait
pop
mov
push
sub
arpl
pop
mov
stc
cmp
mov
and
popf
sbb
cmpsb
fwait
imul
or
adc
or
mov
imul
in
and
adc
jl
fdivrs
shlb
out
cmp
jno
movsb
and
repz
sbb
cmp
adc
adc
mov
icebp
add
cmp
lds
mov
mov
add
test
push
jne
icebp
inc
mov
sub
out
pop
data16
adc
jle
mov
rdpmc
lret
loop
mov
push
int3
add
bswap
into
push
cmp
and
lea
mov
lahf
hlt
jg
lret
push
aas
ret
je
mov
add
xlat
daa
jo
dec
mov
jmp
lcall
sbb
cltd
inc
and
xchg
xchg
fimuls
psubq
mov
and
mov
aad
sub
and
stos
mov
push
nop
mov
in
aaa
adc
inc
mov
xor
pop
stc
loope
int3
loope
cmpsl
lahf
icebp
imul
inc
popf
popf
jns
lcall
fxch
mov
cmp
in
repz
cmp
mov
or
push
dec
in
outsb
stos
xor
nop
test
jne
push
xchg
mov
fiadds
mov
leavew
mov
xor
pop
rcrb
call
push
add
jmp
insl
cmp
push
mov
add
das
jl
jb
inc
xor
aad
or
add
dec
aaa
fdivrl
pop
ss
shrb
rcll
mov
outsb
mov
push
pushf
movsl
mov
ljmp
inc
movsb
int
add
jbe
bndldx
fs
or
add
pusha
lock
or
cmp
or
xchg
es
jae
std
push
les
movsl
ja
test
rcrb
js
aas
xchg
pop
scas
adc
dec
and
rorb
and
cltd
xlat
xchg
inc
insl
ds
sbb
sbbl
frstor
pop
lods
aad
mov
scas
add
out
cmp
sub
cltd
cmp
cwtl
sti
cmc
dec
lea
sub
lret
frstor
rorb
mov
repnz
mov
cmp
movsb
xchg
and
push
pusha
cld
lcall
popa
das
add
xor
jne
dec
ss
loopne
movsb
arpl
loope
inc
movsb
arpl
mov
in
sbb
inc
sarl
ss
aaa
cmp
push
lcall
xchg
push
mov
xchg
psubd
dec
mov
sti
mov
int3
cs
int
loope
pop
in
pop
push
mov
iret
ds
jb
mov
mov
adc
adcl
xchg
mov
cmp
push
sarb
dec
decb
iret
insb
int
cltd
call
jne
rolb
lret
movsb
pushf
shll
mov
xor
cltd
mov
jnp
aad
jb
cmpsb
push
mov
loope
mov
stos
addb
ljmp
sbb
sbb
js
int3
shl
mov
jmp
jo
rcll
dec
pop
add
add
sahf
add
pusha
and
divb
adc
sub
test
ret
or
and
xchg
dec
adc
and
fcoms
out
les
push
test
pushf
push
mov
cmp
push
stc
mov
inc
cmp
push
pop
jmp
jle
jae
and
fildl
or
jae
mov
and
stos
sbb
mov
aad
and
add
rolb
iret
sub
push
xchg
aam
into
and
mov
mov
xchg
mov
xor
sub
test
js
cs
or
pop
ret
cli
ss
mov
or
rcl
mov
dec
addr16
jns
adc
fistps
jae
or
je
leave
jmp
lret
loopne
jns
and
mov
out
out
es
roll
es
mov
sub
inc
jnp
fsubrs
mov
jp
sbb
arpl
mov
fisttpl
xor
or
mov
int
sbb
inc
imul
cmp
frstor
xchg
cmpsb
or
pop
sarl
jbe
movsb
pop
mov
andb
xlat
nop
sub
idivb
sub
or
adc
ds
dec
mov
enter
iret
mov
push
mov
sbb
or
add
cmp
lock
jg
mov
int3
mov
inc
loop
jmp
adc
pop
sbb
hlt
iret
adc
sti
fdivl
andb
sub
bswap
imul
lahf
test
and
inc
iret
mov
add
pop
xchg
dec
or
inc
lods
jns
mov
and
movsb
pusha
ret
xchg
aam
dec
mov
sti
push
cmp
cmp
lds
mov
sub
mov
cltd
js
fisubrs
cmpsl
insb
hlt
pop
mov
inc
loope
fdivrs
loopne
mov
lods
loope
sbb
sub
dec
lahf
jb
xchg
push
mov
jmp
pop
roll
rcl
sbb
or
push
add
out
rcl
scas
pop
pusha
xor
push
clc
cmp
adc
sbb
pop
cld
lcall
lahf
data16
mov
sbb
out
xor
inc
xor
mov
or
stc
cmp
xor
test
sbb
out
lea
jno
xchg
mov
xor
dec
icebp
cmp
xor
and
sti
xchg
or
jecxz
sbb
test
mov
out
imul
and
fildll
sub
mov
ret
push
mov
stc
mov
cmpsb
iret
mov
stos
dec
push
out
es
add
mov
lcall
mov
out
inc
hlt
mov
cmpl
cmp
sub
jl
xchg
pop
fsubl
iret
pop
test
test
leave
repz
xor
mov
mov
in
js
aad
roll
and
lcall
movsb
out
mov
gs
add
dec
push
xchg
add
andl
jo
sub
ret
or
push
pop
fs
pushf
fistpl
jb
or
push
aad
cmp
outsb
aam
cli
sbb
repnz
jg
jb
sbb
cmp
int3
mov
push
sub
sti
shll
cmp
in
push
sbb
test
aad
mov
das
test
push
and
jge
mov
jne
iret
pop
daa
test
xor
and
push
sbb
aaa
ja
lea
repz
lcall
add
loope
xor
movsb
jp
or
sub
xchg
fwait
jle
push
cmp
and
gs
or
cmp
push
and
jbe
shl
sub
les
jb
movsb
pop
xlat
xor
sbb
div
mov
ja
dec
jo
ds
jno
call
ljmp
nop
out
xchg
lahf
xchg
outsl
movsl
lds
mov
add
adc
icebp
sub
xchg
ss
pop
pushw
insl
sahf
mov
and
lock
xchg
inc
push
push
push
lods
sbbb
push
shll
pop
and
dec
loop
jbe
sbbl
fstps
cmp
add
cmp
inc
jno
mov
mov
and
cmc
mov
xchg
shrb
push
cmove
aaa
test
sbb
lret
sbb
xchg
dec
insl
outsb
push
push
cmc
push
arpl
lahf
and
jge
xchg
dec
dec
xchg
shrb
add
push
xor
nop
xor
mov
push
jmp
mov
mov
mov
dec
les
pop
ret
in
mov
daa
sbb
dec
rorl
inc
stos
movsb
test
mov
test
mov
outsl
in
int3
orl
fdiv
fistps
lods
jb
cmp
push
pop
mov
lret
or
clc
out
repz
pop
lds
mov
fnstcw
pop
jp
pop
inc
movsl
cmp
xlat
hlt
mov
fldt
xchg
test
dec
aam
es
test
ss
cmp
or
cmpsb
lods
xchg
in
xchg
xlat
lods
cmp
cmp
pop
lcall
pop
mov
lea
rorb
sub
stc
jnp
inc
out
sub
movsb
and
std
cwtl
pop
cltd
lods
add
inc
inc
cmpsb
dec
jg
push
and
sub
sub
cmp
push
es
inc
cmpsb
les
add
xchg
and
dec
fdivrl
mov
das
inc
mov
fcomps
int
repz
cmpsb
xchg
call
add
imull
bound
in
jnp
mov
mov
pop
fmuls
cltd
jae
ss
test
stos
fwait
notb
pusha
pop
dec
lret
jbe
pop
fdivrs
jmp
jg
dec
push
add
flds
adc
fwait
ss
and
mov
mov
jle
nop
cmp
xor
pop
push
outsl
faddl
mov
cli
loop
mov
sbb
sub
adc
aad
into
aaa
inc
jns
jb
cs
test
inc
pop
rcrl
in
xchg
lret
in
adc
arpl
imul
les
arpl
enter
and
lods
pop
jnp
hlt
js
shlb
popa
stos
ljmp
dec
test
xor
push
push
arpl
sbbb
ret
sub
sbb
js
pop
repz
hlt
dec
mov
sbb
cmpsb
xorl
sub
jmp
mov
lock
fsubrs
fistpl
mov
loopne
dec
cld
pusha
push
icebp
dec
insb
fisubl
insl
iret
mov
aam
lds
sub
mov
shld
push
dec
cmpsb
xor
and
hlt
enter
jae
xor
std
ret
mov
push
sub
push
jle
movl
imul
mov
xchg
xor
dec
sbb
lods
fsubrp
test
pop
test
enter
popa
pop
lret
add
rol
jns
jle
push
je
or
inc
mov
repnz
xchg
push
jo
dec
mov
mov
dec
fstpt
frstor
leave
addr16
mov
shrb
mov
rcrb
iret
data16
mov
mov
and
ror
xor
dec
xchg
xor
lock
fstp
icebp
mov
ret
out
mov
bound
fidivs
jbe
aam
add
and
stos
jb
add
fwait
add
movsl
push
sub
pop
clc
xor
push
in
iret
shlb
push
lea
sbb
arpl
xor
mov
push
shr
jb
jl
mov
sbb
loope
adcl
mov
pop
xchg
push
out
jg
sbb
dec
pop
scas
or
cmpsl
mov
lods
mov
xchg
add
sub
lods
lock
mov
out
scas
mov
xchg
mov
sbb
push
or
cwtl
call
push
test
scas
adc
push
dec
sub
imul
mov
inc
sub
ja
mulb
fnsave
es
sub
or
xor
mov
faddl
outsl
movsl
sub
jmp
rcll
sti
or
sbb
jne
pusha
jle
cltd
xchg
jle
mov
push
call
ja
mov
xchg
shl
mov
cmp
test
stos
fcmovnu
push
pop
jmp
ret
pop
mov
shrb
sbb
cld
cmp
inc
xchg
int
jge
dec
bound
ja
mov
call
adc
dec
adc
cmpsb
pop
lret
das
or
rcrb
mov
xchg
cmp
ljmp
pop
mov
loope
lahf
jno
cwtl
inc
les
ret
push
adc
mov
and
js
inc
jp
push
mov
jbe
sub
mov
dec
xchg
lahf
loop
loopne
data16
bound
out
js
mov
sbb
nop
mov
lcall
sahf
inc
adc
mov
or
jmp
cmp
cld
jno
adc
add
pop
nop
pop
mov
adc
int3
lods
loop
loopne
addr16
sbb
and
mov
xor
out
dec
loope
stos
fisubl
mov
and
jge
push
cmp
movsb
fmul
insb
out
inc
lret
or
je
movsb
xor
push
insb
test
jns
cwtl
dec
ss
sti
fadds
ret
push
fcompl
mov
ficompl
mov
sub
movl
repz
xchg
push
xor
adc
add
inc
pop
cmpsl
popa
dec
xor
outsb
or
sbb
pop
jecxz
mov
jecxz
call
fwait
addr16
inc
popa
shll
js
pop
iret
pop
test
js
pop
pop
jnp
movsb
mov
js
cmp
scas
push
pop
add
jmp
jmp
cmp
xor
fdivrl
mov
int3
neg
sbb
pop
push
mov
leave
pop
clc
mov
bound
cltd
adc
mov
inc
adc
mov
sub
insb
mov
add
mov
mov
clc
pmuludq
and
jns
lock
xchg
test
ffreep
lret
fistpll
outsl
push
sbb
notl
adc
cmp
adc
nop
pop
out
push
int
les
fistpl
pushf
cli
int
xor
sub
stos
addr16
xor
mov
add
pusha
fidivrl
jnp
mov
fcmovne
sti
add
dec
push
addr16
enter
mov
idivl
dec
adc
or
and
mov
sbb
add
push
sbb
lods
jne
movl
pop
mov
mov
mov
sub
rorb
xchg
jmp
mov
mov
rclb
jecxz
call
fcmovbe
decb
outsb
dec
jg
push
ret
addr16
mov
imul
pop
and
sbb
rorb
inc
loopne
cmc
dec
pop
sub
and
and
xchg
cltd
sbb
jg
inc
incb
pop
cmp
add
pop
enter
ljmp
dec
dec
jno
xchg
fadds
iret
aad
insb
jns
and
push
mov
rclb
inc
adc
addr16
shl
push
fwait
sub
jle
and
rolb
mov
dec
stc
clc
mov
mov
pop
bound
data16
bound
adc
jle
mov
mov
outsb
mov
add
mov
pusha
mov
mov
pop
jg
mov
mov
stos
and
xor
lret
and
mov
xchg
scas
fildl
roll
popa
fimull
cmpsb
fldpi
in
adc
pushf
ljmp
popf
out
loop
add
cmp
and
repz
fimull
fstl
jne
jne
shl
inc
jb
inc
push
ret
clc
lock
cli
out
mov
mov
jae
cmp
cmp
adc
gs
push
in
adc
xor
adc
mov
mov
in
lret
rcrb
int
cmp
pop
sub
adc
cmp
cld
cli
push
sahf
jl
aad
add
mov
sbb
push
xor
test
scas
jge
xor
sbb
dec
add
pushf
stos
xor
lock
daa
sbb
fwait
sbb
xlat
pop
adc
out
mov
and
ljmp
outsb
je
add
inc
pop
adc
xlat
inc
dec
pop
out
jb
ja
pop
cltd
cmpl
xchg
sub
sub
mov
aad
jne
inc
ja
and
movsl
mov
mov
jns
popf
bound
add
popf
orw
mov
cmp
pop
lret
push
sub
test
sbb
scas
lods
lea
dec
adc
lods
iret
mov
push
jae
and
xchg
and
nop
insl
fcmovne
xchg
rorb
loop
loop
jbe
sbb
jl
sbb
lods
jnp
pop
pop
aaa
ds
push
fsubl
add
add
in
das
lcall
inc
fcmovne
inc
test
pop
mov
sub
adc
in
adc
xor
inc
xor
push
mov
je
test
add
mov
ds
cmc
fldcw
jo
repnz
pop
adc
adc
xchg
fbstp
jle
cmpl
xchg
test
and
push
lods
js
int3
or
pop
pop
pop
mov
or
add
mov
fimull
xlat
sbb
push
xchg
lea
mov
hlt
and
add
movsl
out
shrb
roll
negb
ja
sub
loope
push
push
jmp
daa
orl
loopne
hlt
sbb
addr16
das
mov
push
inc
or
test
add
adc
xchg
mov
jb
or
add
pop
jle
insb
or
xchg
jbe
mov
inc
sti
mov
ds
inc
sbb
pop
cwtl
lret
dec
push
inc
call
push
roll
sub
and
xor
fisttpll
and
daa
cmp
cli
movsb
dec
mov
xorb
popf
inc
lds
dec
sahf
mov
loop
inc
clc
sub
andb
mov
jno
xor
fwait
cmp
clc
iret
loop
int
jo
std
in
andl
shr
mov
sbb
pop
or
jno
xlat
or
mov
push
mov
inc
fcomp
pusha
out
mov
das
or
dec
outsl
push
mov
outsl
sahf
in
cmp
test
in
adc
ret
imul
mov
xchg
cmp
lret
data16
adc
jg
mov
mov
lock
cmp
mov
out
sbb
arpl
pop
leave
call
frstor
fwait
pusha
xchg
notb
mov
jno
cmp
int
cmpsb
andb
push
pusha
stos
sti
addb
sub
xchg
cmp
idivl
or
aam
shlb
in
pop
sub
rcrl
ds
mov
lret
popl
fisubs
add
fisubrl
mov
sbb
adc
pop
and
pop
popa
mov
and
xorb
sbb
xor
and
subb
xchg
clc
mov
pop
dec
shll
pop
sub
ds
scas
push
aad
les
sbb
inc
leave
pop
iret
enter
pop
sub
jg
repnz
pop
xor
cwtl
xor
adc
and
and
push
icebp
scas
sbb
pop
outsl
data16
sub
mov
push
mov
lds
daa
sahf
sbb
pushf
xchg
jno
and
lahf
roll
adc
movsb
push
adc
mov
add
cmpsl
in
xchg
mov
jmp
fbstp
add
add
js
xchg
mov
jns
jae
scas
es
jge
pushf
adc
daa
xchg
mov
hlt
mov
push
or
and
inc
icebp
out
push
inc
pop
add
sub
pop
in
pop
fwait
dec
push
arpl
jb
add
sub
shld
sub
lahf
shl
cmp
cmp
push
jecxz
ficoml
xchg
addb
ss
repnz
loop
mov
xchg
or
xlat
mov
loope
mov
xchg
xor
jo
jle
idivl
ficoml
inc
lods
push
stc
sbb
jmp
jno
rolb
inc
cmc
aaa
je
cmc
lret
and
dec
cmpsl
cmp
lods
cmpsb
out
push
ss
sub
test
pop
neg
dec
mov
sti
sbb
jae
mov
lret
popa
xor
dec
pop
test
pop
mov
xor
sbb
lock
jecxz
or
cli
cmp
xorb
xchg
dec
int3
xchg
shr
xchg
sahf
cmp
adc
ss
cmpl
pop
popa
xchg
push
sarl
mov
dec
or
push
sbb
inc
pop
sub
shrb
push
daa
push
test
or
inc
and
mov
sub
adc
or
or
push
add
lcall
xchg
jmp
jge
and
loop
loope
cmpsl
push
mov
out
popa
addr16
ret
sbb
in
jnp
fsubl
mov
dec
ret
sub
jmp
stos
xchg
xchg
adc
mov
call
xchg
add
popa
push
mov
enter
scas
scas
mov
cmpsl
andl
jecxz
adc
int
call
js
and
pusha
sbb
jne
jecxz
daa
stos
or
sarb
mov
ret
push
pop
lods
ja
dec
add
test
cmc
and
xor
in
inc
arpl
mov
xlat
mov
repnz
jl
lcall
fdivr
push
push
mov
pop
cmc
pop
fidivl
xchg
push
roll
incb
cmp
cmp
imul
or
inc
test
mov
sti
jp
dec
xchg
jp
mov
adc
shll
or
iret
shl
call
insb
cli
mov
inc
sti
jge
mov
cs
pushf
mov
loop
jb
cwtl
icebp
lret
xchg
jp
push
mov
pop
lcall
outsl
into
xor
pushf
ret
mov
cli
jb
xchg
leave
pop
push
jb
adc
jge
in
popf
enter
jno
cltd
loopne
cwtl
jmp
inc
cltd
rcr
fwait
jg
outsb
xchg
jmp
pop
fldt
cmpsl
jecxz
insl
adc
xlat
scas
aas
mov
pop
ret
insb
cmp
dec
xchg
mov
popw
cltd
and
xlat
pop
out
aam
imul
xor
xchg
dec
hlt
adc
jae
push
add
movsb
pop
stos
mov
in
add
sbbb
fdivrs
scas
daa
test
inc
sbb
imul
repz
addr16
xchg
cltd
lea
mov
adc
mov
sbb
ss
add
ljmp
xchg
dec
pop
jmp
inc
add
xchg
stc
aam
sbb
mov
or
pop
mov
xor
loop
add
jl
inc
gs
sbbl
dec
add
scas
cmpps
rorl
mov
adc
lahf
lods
es
inc
xchg
hlt
lods
int
add
int3
pop
call
aad
loopne
imul
inc
sbb
mov
or
sub
xchg
xlat
mov
mov
or
popf
or
adc
into
out
pusha
out
insb
ficoml
push
lcall
fisubrs
shll
sbb
cmpsb
inc
add
sub
mov
cmp
lahf
cs
lods
inc
dec
pop
iret
mov
dec
mov
sub
sbb
push
mov
push
lods
cmp
test
addl
aas
sahf
dec
pop
add
rorb
pop
shll
das
mov
cmpb
push
xchg
xor
pop
cmc
imul
sbb
decl
sbb
mov
mov
xchg
in
jl
daa
movsl
jno
xchg
ss
xchg
rorb
push
scas
fisubrl
xor
xor
lds
dec
lcall
sub
sub
fcompl
mov
jb
shll
cmp
mov
out
dec
aaa
sahf
outsl
inc
andb
cmpsl
mov
int
pop
mov
cld
outsb
in
xor
ja
mov
testl
outsb
mov
push
or
add
frstor
and
mov
inc
sbb
or
jns
mov
mov
comiss
insl
dec
push
xlat
bound
loope
adc
fmuls
sub
out
xchg
xchg
pop
sbb
lods
into
mov
fmull
mov
or
sbb
movsb
adc
nop
jns
movsl
jmp
das
es
repnz
mov
mov
xchg
fldl
les
popf
mov
dec
push
dec
lahf
lcall
test
push
mov
xor
je
mov
sbb
cld
pusha
dec
mov
movsb
jnp
push
push
lret
stos
pop
or
sbb
stc
andb
cmpsl
adc
sbb
add
jge
bound
ds
addb
adc
push
mov
pop
lahf
hlt
sub
cmp
pop
or
aam
adc
mov
clc
mov
insl
out
mov
lods
lret
cmp
mov
test
jecxz
iret
cmp
mov
into
decl
out
aas
cmc
xchg
lahf
lea
cmp
fistpl
arpl
pop
pusha
inc
stc
call
enter
fldenv
cmp
mov
je
int3
dec
pop
jecxz
jle
insb
cmp
mov
mov
push
push
xchg
mov
test
sub
cmc
shll
lahf
test
pop
sbb
mov
cmpsl
les
lret
dec
rorb
mov
gs
and
dec
dec
sub
testl
xor
xchg
sbb
push
push
add
leave
lcall
push
in
cltd
and
xchg
mov
sbb
in
jmp
sbb
dec
sub
add
xchg
and
loop
std
addl
inc
add
in
and
mov
shlb
mov
jle
xor
mov
pop
mov
jle
mov
xor
repnz
jmp
fcomps
inc
jae
aad
xlat
test
fidivl
add
sub
and
daa
xor
inc
or
cmp
popf
xor
jb
mov
xchg
and
pop
and
sub
xor
aad
jp
jp
push
sub
imul
fnstsw
inc
mov
ret
mov
bound
pop
mov
sarl
xor
xchg
push
test
cmp
cs
js
pop
addr16
lods
sbb
xor
push
lahf
data16
sub
adc
insb
sbb
xchg
and
lds
sbb
mov
bound
data16
and
or
sub
ret
stos
sub
daa
jp
fwait
or
pop
ljmp
push
or
push
cmp
dec
fildl
jne
sbb
lods
sub
mov
mov
add
push
aas
mov
mov
dec
iret
add
nop
push
cmpsb
dec
mov
mov
mov
lods
add
je
mov
add
in
lea
fistpl
adc
testb
push
fs
mov
pop
mov
pop
pop
lret
fmul
aam
mov
out
or
jno
shrl
cltd
mov
pop
xor
repz
in
arpl
cltd
andb
pop
fmulp
xor
int
pusha
sbb
xchg
cli
into
mov
rolb
add
push
add
aad
xor
xor
arpl
push
fwait
movsl
xorl
imul
insl
mov
mov
cmpsl
push
lods
and
stos
pop
mov
es
sub
cmpb
pop
jb
pop
in
jl
and
mov
inc
mov
sub
xor
int
adc
ret
xchg
aam
cmpsl
mov
inc
lock
popa
jge
jle
cld
daa
mov
mov
gs
xor
adc
into
sbb
sub
and
lea
lahf
cmp
sbb
out
ja
aas
sarl
subb
lahf
icebp
in
cmpl
call
jno
xor
sbb
stos
ds
test
dec
or
int3
pop
enter
xorb
or
sbb
cmpsl
xadd
nop
jecxz
mov
and
rclb
stos
add
adc
mov
jb
mov
adc
or
int3
fdivr
dec
push
pop
dec
stos
cmc
mov
roll
jp
add
add
add
push
aaa
loopne
push
cs
jl
push
pushf
pop
fs
push
fdivrl
fsubs
arpl
xor
xor
jae
jbe
out
lret
movsb
stc
mov
push
sbb
jbe
fldl
mov
cmc
push
jb
adc
cmc
test
sub
cmp
xor
or
jno
or
fnstsw
cld
pop
iret
sbb
xchg
insb
cmpb
fmul
cmc
aas
aam
call
adc
outsl
adc
pop
cmp
addr16
push
fwait
sbb
enter
out
std
call
stos
push
fsubl
gs
lods
sub
inc
or
lret
enter
mov
push
dec
jnp
mov
in
fisubl
and
adc
dec
pop
hlt
pop
cmp
mov
or
inc
scas
adc
outsb
das
xchg
and
mov
arpl
lret
and
out
xchg
push
adc
icebp
test
and
jnp
and
adc
sbbl
jmp
pop
mov
sbbb
fcomi
out
in
or
into
loope
aas
sub
fdivs
mov
mov
mov
mov
push
and
aam
mov
add
add
dec
cltd
cwtl
push
pusha
cmc
into
f2xm1
push
lods
fisttps
mov
call
or
mov
mov
jmp
mov
jbe
sbb
xor
in
dec
fisubs
jbe
and
call
fdivl
jge
pop
cmp
cwtl
es
mov
insb
cld
imul
je
sub
das
aas
nop
repnz
jmp
push
jns
orl
mov
arpl
cmpb
loope
mov
sti
test
mov
and
or
loopne
cmpsb
jg
xchg
pop
xchg
cmp
dec
int
in
jo
cmpl
sbb
adc
mov
inc
jb
cmp
cltd
cs
push
fidivrl
or
shld
insl
into
add
mov
inc
jns
cmp
loop
fldcw
sbb
addr16
jecxz
scas
cld
xchg
mov
mov
ljmp
jecxz
mov
inc
xchg
sub
dec
xchg
push
sbb
fildl
cmc
cmp
mov
mov
sbb
dec
sub
xchg
mov
push
xor
xor
cwtl
jno
lods
insl
dec
cmpsl
add
cmp
sbb
out
or
daa
stc
repz
mov
fisubs
iret
in
lret
mov
cmp
test
sahf
pop
cld
fcmovnb
or
sub
cltd
loop
mov
pop
ret
mov
push
or
popf
dec
cld
pop
pop
hlt
or
je
cld
call
out
push
xor
mov
hlt
xor
pop
fsubr
cmp
ja
fldt
inc
out
cmp
mov
xchg
mov
popf
aam
mov
mov
aaa
dec
call
imul
mov
call
push
imul
daa
shr
add
pop
push
out
out
sub
push
inc
fmuls
pop
inc
test
aad
imul
jmp
or
xchg
jb
js
mov
cwtl
push
add
clc
rcrl
xchg
addb
push
mov
out
and
xchg
push
out
cwtl
inc
addr16
jbe
pop
lret
addr16
mov
push
jo
testb
push
pop
xchg
inc
adc
into
push
dec
inc
ljmp
add
dec
add
out
divb
xchg
xchg
test
sbb
inc
and
aas
notb
popf
mov
lahf
cld
mov
push
xor
adc
fcompl
sub
mov
enter
mov
pushf
aas
popa
test
add
push
jle
jle
inc
jo
jae
inc
leave
rorl
loope
jmp
xor
imul
mov
lds
mov
out
test
push
mov
mov
cmpl
fsubrs
pop
pop
sbb
lret
push
aaa
decb
sahf
mov
xor
shll
adc
shr
jne
lret
push
sbbl
or
mov
adc
add
xchg
in
hlt
mov
inc
sub
dec
push
outsl
xchg
sbb
mov
aad
and
js
adc
insb
fdivl
jb
and
daa
or
pop
inc
stos
fildl
jns
fidivrs
sbb
loop
push
add
cmp
mov
or
cs
lods
in
orl
push
mov
imul
ljmp
mov
mov
popa
in
lcall
mov
sub
out
mov
fldenv
sbb
jb,pn
cmpsb
adc
hlt
imul
jne
lret
add
pop
push
pop
pop
jge
ss
ret
cmc
dec
mov
push
gs
cmp
stc
test
push
pop
mov
int3
pop
xor
xchg
xor
mov
mov
ret
mov
lea
xor
int3
out
shll
push
les
movsl
repnz
xchg
sti
mov
cli
or
jns
lea
insl
pop
inc
cmp
push
aaa
dec
xchg
pop
in
dec
dec
jne
imul
sbb
pop
xchg
dec
out
test
dec
popl
mov
scas
aas
sbb
stc
lea
xchg
mov
hlt
sahf
push
or
add
out
ret
jnp
xchg
mov
fwait
ja
int3
jae
or
sbb
or
iret
mov
xchg
mov
addr16
test
daa
ret
les
mov
push
andb
inc
dec
sub
sub
cmpsl
fidivrs
loop
out
in
push
icebp
in
mov
loop
adc
jecxz
push
adc
pop
or
ja
cmp
icebp
mov
dec
and
xchg
pushf
jnp
lock
jmp
nop
fwait
mov
out
in
push
in
test
outsb
mov
cmp
movsl
jae
push
xchg
call
into
cmp
lods
sbb
loope
icebp
and
or
jae
stc
and
dec
test
mov
push
mull
scas
cmp
and
jae
push
outsb
xchg
push
cs
sti
jmp
pop
int
xor
das
jb
frstor
adc
and
aam
jbe
xlat
icebp
call
xchg
in
jmp
mov
notl
mov
andl
adc
test
inc
in
mov
and
pop
push
lods
fcoml
push
stos
lods
sbb
in
xchg
jmp
ja
je
fsubp
insl
inc
adcb
jg
sti
dec
lods
mov
popf
test
out
fxch
cmp
mov
outsl
mov
imul
mov
xlat
xchg
out
rcr
mov
data16
xchg
stos
out
call
fwait
int3
jae
pusha
mov
fwait
out
outsb
sub
mov
inc
in
pushf
aad
sub
push
push
das
loopne
dec
test
inc
movsl
sub
jne,pn
int3
fsubs
or
shll
jmp
sbb
mov
loop
pop
xor
jecxz
mov
dec
push
scas
out
jle
dec
inc
sahf
push
int
ja
and
or
gs
push
cmp
out
test
xchg
inc
or
pop
xlat
sbb
repnz
scas
dec
dec
nop
mov
mov
cmpsb
pop
jo
in
sub
cmp
inc
pusha
pusha
or
je
std
jecxz
outsb
lcall
call
inc
ja
cmc
push
ret
mov
sbb
sub
and
in
and
arpl
mov
iret
jecxz
jg
cmpsl
cmp
mov
jmp
mov
or
mov
and
lsl
jb
jg
xor
ret
sahf
sub
shrl
ror
mov
bound
nop
cmc
out
ficomps
inc
lahf
push
jno
add
add
push
test
mov
inc
push
jmp
jecxz
mov
int3
js
dec
js
enter
pushf
insl
hlt
mov
mov
mov
fcmovne
push
pop
repnz
add
xor
pop
pop
pop
cli
or
cmp
rcl
daa
mov
xorb
scas
inc
call
fisubs
ljmp
add
pop
mov
mov
cs
xor
dec
subb
sub
shll
sub
pop
ret
or
in
dec
adc
fbstp
lcall
mov
das
sbb
push
daa
pop
mulb
push
lock
bound
andl
push
mov
mov
aad
lahf
mov
test
mov
pop
fldt
cs
and
adc
lret
lret
sub
push
sub
cmp
nop
imul
ss
jne
sbb
pop
nop
in
or
insl
push
push
xlat
rcrb
jb
cmp
les
add
xchg
sbb
jnp
lock
cld
out
add
lock
nop
cmp
movl
xor
adc
cmp
int
call
call
insb
mov
test
movsl
pop
dec
out
push
cmpsl
mov
cltd
lods
or
or
push
push
cli
xor
push
jne
jle
sub
push
jns
pop
xor
adcb
sbb
mov
inc
hlt
mov
cltd
jmp
jmp
inc
loopne
loop
push
lods
insw
or
movsbl
daa
and
ljmp
xchg
fs
mov
and
je
inc
pop
cld
addb
adc
loop
pop
lret
in
xchg
cmp
push
int3
add
mov
xlat
adc
lods
sub
test
shrb
ret
enter
cmp
and
dec
imul
jns
cmpsb
movsl
or
pop
mov
inc
imul
mov
mov
ret
lods
divl
lret
loope
das
jl
pushf
inc
test
xchg
inc
jae
add
add
sbb
mov
add
in
stos
and
xor
xor
scas
iret
mov
mov
push
or
dec
sub
fwait
add
adc
mov
shrb
cmp
iret
mov
add
or
loope
out
mov
add
leave
add
pop
sub
and
fwait
pop
aam
sub
scas
add
sub
mov
sbb
or
push
ss
mov
mov
int
jmp
cmp
rcrl
mov
fs
enter
or
gs
sahf
inc
outsl
outsb
mov
cmp
rcll
inc
xor
jno
inc
xchg
xor
aaa
shrl
xor
stos
xchg
or
and
adc
mov
add
sbb
out
test
pop
or
inc
inc
repz
pop
push
outsl
cmp
sub
inc
jo
inc
pop
daa
jl
iret
mov
xchg
jg
cmp
xchg
fsts
push
test
mov
jp
cmp
es
or
xchg
popl
cwtl
mov
movsl
push
pop
and
adc
mov
jmp
enter
mov
les
shl
xchg
mov
test
xor
sarl
cmp
mov
cli
mov
inc
xor
xor
push
ljmp
bound
or
fiaddl
jge
add
in
enter
loope
pop
clc
rorl
jo
ror
hlt
xchg
test
mov
mov
sbb
xchg
push
xor
addr16
nop
lods
inc
out
pop
or
ja
or
stos
cmpsl
jmp
mov
xor
jg
push
pop
je
iret
je
jb
push
xchg
sbb
std
insl
mov
mov
rcll
push
mov
jl
and
mov
and
mov
jo
int
pop
in
pop
fidivs
lret
fiadds
sbb
mov
roll
pop
bound
add
dec
push
and
cmp
in
mov
scas
gs
shrl
sbb
mull
mov
mov
jle
mov
jbe
mov
mov
mov
inc
addb
insb
test
pusha
sbb
sbb
adc
test
sahf
rol
stos
push
fsubrl
in
idivb
and
imul
pop
pop
bsf
dec
mov
jnp
add
xor
jbe
push
sbb
insl
jle
or
ret
mov
adc
in
imul
daa
mov
cli
inc
xlat
jecxz
fcomps
ljmp
jns
int3
pop
adcb
das
and
aad
es
add
dec
mov
nop
incb
jmp
jle
add
push
push
mov
jge
xchg
push
call
mull
das
xor
scas
leave
dec
xor
aam
imul
in
bound
movsl
jl
dec
and
mov
adc
xor
fmul
adc
cli
rorb
sarl
cmpb
jp
ret
and
leave
cli
popa
fimull
mov
repz
inc
xchg
mov
out
jge
test
cmp
scas
or
push
or
mov
fdivr
icebp
sub
call
mov
mov
lcall
subl
xor
sbbl
imul
sbb
adc
inc
cmp
mov
xchg
push
jne
dec
pop
sbbb
repz
and
sub
lock
imul
or
lock
pop
outsl
test
int
mov
lahf
and
jne
mov
lock
ja
or
or
mov
mov
mov
insb
inc
xchg
stc
fdivrs
jne
jns
jmp
cmp
lret
movsl
lods
xchg
jbe
fbstp
mov
and
sub
rorl
mov
fs
pop
inc
test
out
arpl
loop
push
hlt
sti
pop
je
shll
rcrw
rcrl
cld
jo
inc
lret
scas
and
test
shrb
scas
and
jno
ret
pop
outsl
sti
adc
insb
mov
mov
scas
inc
out
dec
fsin
xchg
mov
adc
add
add
cld
xor
mov
movsl
mov
xor
iret
xor
adc
inc
bnd
xor
sub
repnz
and
aaa
aam
xchg
cmp
and
imul
notb
imul
sbb
fucomp
repnz
pop
lock
ss
pop
add
out
cmp
pop
iret
xor
dec
sbb
push
cmp
sahf
in
fldl
pushf
mov
pop
xchg
addr16
aaa
dec
lods
sub
mov
das
jb
stc
mov
add
pop
xchg
aam
jno
push
jne
xor
pop
push
xchg
or
xchg
inc
sub
imul
shll
lock
jge
mov
and
lds
icebp
dec
sub
adc
das
pop
and
sbb
pop
scas
sbb
mov
add
xlat
sbb
in
xchg
iret
inc
xchg
pusha
or
push
sub
mov
mov
bound
xchg
std
push
cmpsb
outsb
clc
mov
sub
js
sbb
fs
cmp
cli
xchg
sub
or
mov
push
push
dec
shll
loop
lret
cs
mov
bound
ror
lds
shlb
aaa
jmp
cmp
or
jg
stos
jbe
gs
test
cmp
ret
push
mov
les
leave
js
icebp
cmp
inc
fidivl
aad
lock
fcoms
into
lcall
xor
mov
xor
icebp
and
add
adc
mov
pop
xor
dec
mov
sarb
pop
adc
stc
lock
mov
xor
lahf
call
push
ss
movsb
clc
sti
mov
cmc
ret
iret
insl
fs
pop
jge
jecxz
mov
mov
adc
les
rcr
cwtl
int
xchg
adc
movsl
es
subb
xchg
fisttpl
loopne
leave
jge
inc
xchg
in
bound
mov
xor
adc
negb
or
adc
pushf
pop
lods
mov
xchg
or
ds
jne
cmc
mov
std
jb
cs
imul
bound
sub
mov
pop
jmp
ror
out
cmpsb
adc
pop
jl
mov
sarb
add
push
jge
push
xlat
pop
mov
popa
mov
inc
fnstenv
aad
xor
add
bnd
stos
dec
pop
mov
in
xchg
sub
out
mov
test
pop
push
pop
mov
addr16
ss
sub
stos
lea
test
rol
dec
shll
adcl
pop
sbb
lret
jecxz
xchg
in
dec
fsubrl
mov
xchg
test
repz
test
push
adc
lock
push
scas
jecxz
and
lret
lcall
insl
jb
rcl
stos
mov
mov
xchg
pop
fsubrs
leave
xchg
or
mov
mov
mov
jae
inc
stos
in
into
test
leave
into
mov
std
xchg
and
movsb
pusha
or
sbb
repz
sar
stos
adc
push
fisttpll
sbb
add
mov
mov
jecxz
dec
adc
jb
mov
add
or
jp
pushf
mov
nop
cmp
sbb
hlt
xlat
in
in
mov
sub
push
call
cmp
in
jmp
mov
fimull
sub
adc
dec
or
sub
mov
out
pop
pop
sub
pop
jb
mov
xor
ss
fisttps
jo
mov
mov
push
stc
or
xor
jb
rcrb
sub
push
jnp
xchg
sbb
daa
test
and
popf
adc
fwait
out
ja
fadds
or
jo
lahf
lds
mov
sbb
xchg
mov
xchg
in
negb
sti
sbb
xchg
repz
jmp
xor
call
ret
inc
bound
pop
push
jg
in
sub
mov
es
lcall
loope
ret
idivb
mov
add
dec
mov
inc
push
loopne
add
mov
xor
jb
cli
ficompl
mulb
cmp
pop
fcomps
cmpsb
bound
cmp
iret
xchg
into
in
call
dec
push
xchg
fstpt
imul
push
and
ret
dec
leave
xchg
rcll
aam
sbb
pop
daa
xchg
mov
fdivr
divb
mov
sub
cmp
sub
xor
mov
sub
cli
inc
and
push
xchg
mov
xor
out
mov
xchg
test
shll
jnp
or
adc
aas
xor
sub
out
mov
call
jo
gs
adc
mov
jnp
in
std
cmp
stc
aad
sub
pop
pop
mov
push
pop
fnstcw
jecxz
pop
test
xor
filds
add
je
out
pop
pop
mov
setne
ja
push
test
inc
pop
push
stc
fistps
test
and
scas
dec
push
in
pop
pop
loop
mov
pop
sahf
mov
cmp
lahf
push
bound
in
lock
and
sub
imul
push
adc
dec
jne
xor
xlat
lahf
push
popf
icebp
test
dec
repz
cmc
mov
outsl
stc
inc
lods
pop
repz
ret
inc
cs
repz
jl
xchg
or
js
and
dec
add
jno
dec
dec
cmp
push
sub
inc
xor
mov
xchg
enter
cmp
cmpsb
add
pop
lock
shld
cltd
inc
jmp
cmp
loope
pop
cwtl
add
repnz
mov
in
lods
into
inc
mov
push
sub
std
pop
scas
push
mov
sarl
xchg
cs
xchg
inc
adc
movsl
inc
dec
sub
sub
adc
cwtl
stos
scas
popf
add
xchg
push
jbe
das
ljmp
pop
xor
push
in
or
shll
loopne
xor
nop
lahf
out
lcall
inc
aaa
sbb
mov
jle
call
pop
xchg
sub
orl
dec
or
cmpsl
or
and
adc
popf
lds
repz
cli
int3
push
and
shl
adc
loop
in
aam
cltd
test
sarb
int3
insl
xchg
ret
xor
stos
and
add
and
dec
daa
mov
aad
lcall
mov
out
push
and
inc
mov
stos
adc
jns
dec
std
cmp
mov
and
adc
dec
sbb
clc
adc
lds
mov
aad
mov
out
imul
jae
pop
push
shrb
and
xor
mov
jmp
test
push
jae
divl
push
and
mov
cltd
mov
ss
mov
fdivrs
jmp
mov
leave
lea
data16
shll
xchg
pop
cmp
lods
jl
and
mov
push
push
ljmp
cmp
lcall
push
insl
lahf
add
mov
xor
ljmp
push
mov
jae
mov
es
jecxz
adc
xchg
inc
shlb
test
subb
imull
pushf
lock
test
hlt
mov
mov
sub
add
loope
add
repz
add
loope
jb
es
push
jno
jnp
push
sub
pop
imul
mov
dec
cmp
inc
push
mov
jnp
push
xchg
dec
rcl
fucomip
std
push
repz
xchg
pop
mov
les
cmp
popa
bound
fdivp
call
push
and
sub
pop
add
sub
sbb
lods
imulb
mov
mov
jnp
insb
dec
jo
jge
arpl
adc
pop
ja
pop
adc
push
mov
or
filds
mov
add
and
mov
xchg
test
xor
sbb
lds
cmc
jae
shlb
pop
push
sbbl
mov
imul
xor
jnp
jp
adc
lret
mov
mov
push
lds
mov
ss
mov
sub
lcall
rcll
cmp
icebp
filds
popf
hlt
arpl
sub
xchg
push
orb
dec
pop
sub
pop
push
mov
sti
or
std
pop
sbb
shlb
mov
iret
in
or
arpl
push
add
xchg
fadds
dec
mov
into
or
mov
mov
xor
push
jnp
sbb
imul
xor
imul
nop
jg
les
add
imul
mov
cmp
mov
out
adc
sub
aad
in
cltd
mov
imul
lock
in
cmc
mov
adc
sete
fsubl
lds
inc
cmp
jns
pop
mov
lods
adc
in
sub
addr16
pop
pop
out
mov
pop
jmp
push
push
test
sub
fucomp
cmp
cmp
adc
xor
cwtl
ljmp
mov
pop
jnp
imul
mov
add
or
iret
dec
dec
es
mov
inc
lods
jo
sarl
xchg
sub
shll
sub
shll
repz
setb
or
xchg
and
cmpl
xchg
pop
lahf
in
aas
mov
jno
ret
rep
xchg
faddl
mov
or
inc
std
fistl
lcall
cld
pop
pop
js
test
or
pop
xchg
mov
andb
jmp
movl
mov
sbb
sbb
sub
xchg
mov
add
sub
and
hlt
popf
xchg
adc
sti
push
popa
sarb
or
insb
test
push
ja
xchg
out
xor
xor
hlt
push
cmpsb
stos
lds
and
imul
pop
scas
int
scas
cmp
int3
cmpsl
loope
and
fdivr
cmp
outsb
xchg
pop
cmp
or
repz
xchg
out
sbb
stos
xor
fs
push
in
aas
sub
xchg
stos
pop
ret
rcll
stos
lods
push
call
and
fists
sub
xchg
jmp
scas
sbb
cwtl
ds
mov
int3
xor
mov
sub
cmpsl
xchg
stc
pop
iret
sub
popf
pusha
or
lea
pop
sub
add
fwait
int
rolb
push
inc
jnp
push
mov
popf
xlat
pop
sbb
push
sub
sbb
out
cld
cmp
inc
mov
dec
inc
pop
pop
mov
test
or
pop
loope
arpl
out
pushf
mov
mov
mov
mov
inc
orl
in
test
xchg
push
cmp
stc
scas
inc
mov
mov
jle
push
and
and
inc
addr16
shrb
je
sti
adc
pop
dec
ret
mov
lcall
das
ja
cmc
in
jmp
jb
cli
jbe
push
lods
lret
pushf
cmc
sbb
insb
into
cmp
pop
xchg
sub
mov
into
xchg
mov
sub
loope
insl
lret
sahf
sub
out
testl
lods
ja
adc
mov
inc
or
add
inc
mov
lahf
mov
or
call
mov
lods
sbb
aas
scas
jno
out
shl
lods
and
sub
fstps
pushf
inc
mov
orl
inc
in
push
mov
mov
sbb
outsb
lds
add
std
adc
push
jecxz
jne
xor
and
out
cld
addl
mov
mov
je
mov
xchg
cmc
xchg
inc
and
xchg
and
icebp
push
or
shll
call
aas
xchg
or
js
push
pop
iret
sub
clc
xchg
ret
test
mov
ljmp
subb
sbb
shll
cmp
sub
data16
jmp
or
les
mov
test
adc
jbe
daa
sub
fimuls
push
push
call
sub
push
js
jne
xorl
add
adc
mov
nop
jne
jl
shl
sbbl
xchg
or
cmp
xor
cmp
fcomps
dec
jne
xor
jnp
push
and
cld
lret
pusha
pop
mov
or
int
inc
or
xor
gs
test
into
mov
fbld
push
jge
add
jae
inc
call
rolb
jmp
dec
sarl
jne
xor
in
jae
push
push
mov
pavgw
cmpsb
jb
push
pop
mov
cmp
lret
xor
ja
lret
fs
pop
les
adc
and
dec
xor
pop
test
inc
or
adc
cwtl
or
lret
cmpsb
jbe
aas
push
mov
out
push
shrb
out
dec
loope
jo
xchg
imul
imul
add
and
movl
mov
push
sqrtps
xchg
sub
xor
sbb
jne
mov
jno
outsb
sbb
outsb
inc
mov
out
addb
jns
xchg
outsl
mov
ss
xor
dec
inc
cld
dec
sbb
ljmp
test
or
out
js
repz
dec
test
jo
mov
stos
xor
push
imul
mov
mov
jl
lahf
rcrb
mov
fucomi
arpl
cwtl
pop
aas
aaa
xchg
inc
push
movsb
mov
adc
pusha
fs
or
cwtl
inc
mov
lcall
mov
push
shll
inc
jmp
inc
insb
push
dec
js
in
aas
jb
or
test
cltd
mov
cwtl
mov
divb
or
pop
mov
icebp
pop
fwait
aas
mov
xchg
jmp
adc
dec
jle
fst
xchg
adc
cmp
add
lret
pop
in
adc
in
movb
adc
xlat
daa
dec
xchg
adc
lahf
cmp
dec
xor
pop
xlat
test
xor
xlat
addr16
mov
push
loope
gs
mov
pushf
mov
dec
sbb
shll
in
adc
adc
push
add
sub
test
xchg
pop
insb
repz
and
js
jp
xchg
sbb
movsb
cmpsb
cwtl
push
inc
loopne
data16
xor
clc
lcall
or
and
stos
aad
lock
jge
add
mov
xlat
pop
push
sub
mov
jecxz
sbb
test
nop
dec
in
jecxz
out
sbb
cs
fiadds
leave
test
adc
adc
add
push
fsubr
test
mov
mov
and
or
push
mov
insb
jnp
lea
add
cmp
push
cmp
dec
pop
sub
rcrb
mov
xchg
fucomip
xchg
cmp
out
and
dec
lds
dec
or
js
rcll
dec
sbb
test
xchg
push
and
fwait
adc
std
aad
xor
dec
jo
mov
out
mov
aas
data16
js
dec
test
rcrb
loope
loope
jno
mov
fsubr
push
cwtl
lods
inc
cmp
ss
dec
xor
movsl
arpl
fidivrs
adc
inc
movsb
push
cmp
bound
paddd
xorl
mov
ret
stos
test
xchg
test
xchg
pop
nop
pop
xchg
in
add
push
add
test
lret
rcrb
mov
repnz
in
dec
sahf
fwait
mov
sbb
jecxz
leave
or
lcall
test
xchg
dec
call
je
outsl
hlt
and
sub
addr16
push
jb
repz
lock
lods
sti
cmp
sub
or
pop
out
dec
sbb
out
out
sahf
jno
loope
and
dec
xchg
push
aas
bound
and
cld
enter
mov
mov
and
int
outsl
xchg
cld
lea
mov
je
gs
rorl
pop
push
sub
pop
shll
daa
cli
mov
fmuls
popf
jnp
xor
xchg
ljmp
inc
ds
mov
and
flds
and
jbe
dec
cwtl
adc
or
mov
xchg
push
sbb
lods
mov
push
pop
add
test
push
mov
xor
pop
sbb
pop
cmp
sbb
xchg
adc
shl
mov
lods
cmp
lods
sahf
mov
mov
cmp
and
mov
mov
stc
push
in
inc
ljmp
rorl
test
sbb
adc
xor
mov
fimuls
mov
outsb
mov
lods
int3
xorb
lea
shlb
es
xchg
mov
mov
mov
out
push
xchg
mov
sub
xor
shr
mov
mov
rcrl
xor
in
mov
sbb
sub
sarb
gs
sbb
inc
movsl
lcall
dec
call
in
adc
popa
insb
cld
mov
fwait
push
inc
pop
mul
lcall
movsl
xor
fistpll
jo
ja
movsb
xchg
mov
jb
stc
ret
add
sbbb
add
and
push
mov
fstps
dec
sbb
cmp
out
xchg
scas
inc
jmp
xchg
cmc
notb
ss
es
jge
inc
add
or
call
cmp
lea
mov
dec
pushf
rcr
pop
jmp
in
mov
or
stos
lds
or
test
sbb
roll
xchg
dec
or
xchg
stos
jg
mov
ds
aad
jb
movsl
push
jne
mov
mov
mov
jmp
pop
daa
in
jae
cmc
int
mov
filds
ret
cs
pusha
adc
lcall
mov
ror
and
fnstcw
mov
cli
pop
repz
jp
test
enter
scas
add
jb
rcll
rcr
jo
cwtl
dec
cmc
dec
cmp
test
shl
dec
popa
pusha
mov
call
fsubs
lods
jp
pop
jbe
xor
xor
aaa
lock
out
ljmp
mov
jnp
xchg
jbe
mov
push
out
push
or
mov
xlat
cmp
add
mov
insb
fidivrs
sbb
cmpb
inc
ss
jb
hlt
sbb
mov
push
fidivl
rorl
fsubs
arpl
inc
or
jmp
jnp
in
out
adc
inc
mov
mov
cld
and
cmp
cltd
ret
push
mov
cmp
flds
mov
mov
pop
ret
sub
mov
jnp
or
shrb
lret
xor
pop
dec
loopne
rclb
lock
push
js
pop
dec
cmc
enter
mov
mov
push
test
sbb
stos
mov
add
dec
push
js
add
insb
xchg
hlt
sbb
xchg
mov
push
inc
andb
add
sar
andb
int
jmp
cmp
sbb
addb
dec
inc
scas
and
or
data16
and
xchg
mov
push
lahf
or
mov
test
jbe
gs
aaa
popa
adc
mov
into
jg
mov
push
cmc
and
inc
push
xchg
stc
je
mov
push
fbld
or
jo
pushf
das
ficoms
inc
aam
jecxz
ja
add
std
mov
mov
fildll
dec
add
stos
jbe
pop
inc
push
test
and
rcrb
dec
repnz
imul
std
sbb
adc
pop
lahf
popf
enter
cmc
cmpsb
or
pusha
imull
aad
sub
pop
aam
sub
add
mov
data16
cwtl
dec
imul
insl
lock
xchg
jno
ret
xor
fsubrl
paddb
aad
int3
inc
das
cmp
lahf
cwtl
lds
mov
mov
inc
sbb
mov
imul
cmp
cmp
sbb
fcmovne
daa
jle
dec
stc
loope
inc
into
dec
movsb
adc
ljmp
rol
inc
cld
outsl
push
cmp
cli
push
loopne
push
dec
mov
daa
jns
test
lret
jbe
dec
dec
push
jge
lcall
jae
mov
lock
push
cmpsl
xchg
int
fildl
inc
adc
dec
out
xor
popa
jne
mov
ss
mov
lock
imul
cmp
add
stos
push
mov
mov
enter
mov
lock
shlb
lds
dec
pop
pop
and
pusha
xor
ret
data16
jmp
xchg
cmp
sub
mov
jne
sbb
jecxz
pop
mov
push
mov
or
or
mov
ret
out
out
scas
out
in
leave
mov
loopne
xor
repnz
jge
les
icebp
sub
lods
lret
sbb
dec
mov
dec
aam
and
outsl
jb
imul
ficompl
sbb
shr
sarb
mov
clc
cmc
lret
sub
sub
jno
inc
shrl
popa
push
mov
fldt
pop
push
lea
insb
cmpl
rcrb
int
enter
or
pop
push
cli
cmpsl
ficoms
sbb
ja
sub
test
xchg
cmp
pop
jle
mov
shlb
and
ret
jg
sbb
mov
das
jno
adc
cmp
push
test
jns
mov
xor
cmp
aas
pop
cmc
jmp
sbb
xchg
xchg
fcomps
push
ja
dec
aaa
sub
mov
mov
lea
cmp
or
scas
or
out
cwtl
repnz
rcr
insb
lods
lock
jb
push
out
cmp
sub
bound
mov
pop
dec
pop
loopne
mov
mov
repnz
gs
icebp
jle
jp
inc
jae
test
sbb
int
std
mov
mov
xchg
jp
xchg
sbbl
adc
jle
xchg
arpl
inc
pushf
adc
das
fiadds
sub
sbb
adc
or
cmc
scas
cmp
or
pop
sbb
imul
iret
xlat
sti
add
mov
sti
mov
sub
xchg
and
nop
aam
xchg
lds
and
test
xchg
add
loop
push
in
in
clc
add
xor
xchg
fidivrl
sbb
out
psubq
ret
das
xor
pop
fnstenv
pop
and
add
aas
push
jb
negb
cmp
pop
andb
in
lahf
pop
call
inc
pop
and
mov
inc
stc
or
sub
push
push
enter
nop
popf
push
into
int
sub
or
lds
pop
jo
xchg
scas
cmc
mov
ret
pop
test
mov
fisttpl
test
jae
rcl
aas
jge
mov
mov
outsb
cmp
push
mov
and
dec
cmp
push
js
in
inc
mov
ror
sbbl
mov
in
adc
pushf
mov
fnstcw
lret
shl
sbb
xchg
mov
xchg
cmc
int
out
jns
out
sub
int3
and
mov
imul
fucomp
cmp
mov
mov
cmp
jl
out
lret
outsl
repnz
cld
decb
leave
inc
movsb
or
inc
lret
test
clc
inc
mov
fcomps
push
and
pop
jb
fcmovu
aas
jae
idivl
arpl
pop
enter
add
jle
pop
sub
jne
inc
cs
xorl
mov
push
xchg
dec
fmull
neg
gs
push
dec
sbb
fdivl
mov
xchg
mov
xchg
push
cmp
mov
repz
enter
pop
hlt
pop
mov
arpl
loop
js
and
mov
test
inc
dec
je
in
arpl
shrb
pop
sub
clc
popf
nop
pop
xchg
xchg
push
ljmp
fdivrl
inc
mov
push
lods
imul
jge
sti
imul
rorb
pmaddwd
pop
mov
mov
sbb
mov
and
arpl
sbb
adc
pop
mov
sub
or
mov
dec
fiaddl
cmp
outsb
fists
ret
stos
pop
xchg
sbb
in
ret
je
clc
pop
or
adc
push
cmpsb
add
repnz
cld
in
scas
jecxz
enter
cmc
pop
test
jbe
dec
xchg
stos
jl
icebp
leave
imul
mov
push
pop
jge
mov
ss
leave
xor
loop
arpl
sub
jmp
jnp
fwait
push
jae
cmp
fldt
or
out
pusha
fimuls
pop
mov
mov
ret
jecxz
cmpsl
enter
jl
dec
jno,pt
dec
sbb
push
into
pop
out
insb
lret
call
push
loopne
push
and
aad
pop
rcrb
addr16
les
jns
aam
and
xchg
cmpsb
dec
jo
nop
out
push
jo
outsl
ljmp
jl
scas
mov
and
pop
leave
push
dec
clc
push
fdiv
lock
mov
call
scas
test
outsl
dec
testl
inc
sti
cmp
imul
and
inc
mov
mov
sbbb
lds
jnp
adc
jbe
jmp
repnz
add
movsl
add
inc
or
popf
push
stos
xchg
test
shl
insb
orl
fistps
cmp
negb
dec
cmp
dec
lds
xor
in
mov
pop
xchg
lods
mov
sbb
into
mov
mov
arpl
sub
push
lret
and
loope
push
xor
decb
inc
lea
call
insb
lahf
jbe
mov
scas
scas
test
scas
push
xchg
call
pop
int3
pop
mov
pop
out
jp
jg
shlb
dec
cwtl
shrl
in
mov
sbb
push
mov
cmp
pop
aam
add
test
enter
sbb
in
repnz
xor
fnstcw
mov
pop
mov
aad
mov
dec
in
inc
hlt
sahf
xchg
stos
inc
lods
arpl
mov
out
inc
leave
jne
les
xor
add
lcall
call
cli
pop
aaa
xchg
adc
out
orb
push
mov
mov
adc
push
popf
or
ja
pop
add
add
popa
mov
push
lahf
fsubl
add
int3
in
cmp
imul
pop
mov
gs
push
sbb
mov
or
out
jmp
mov
jno
sti
jne
jecxz
and
outsb
cmpsb
inc
aad
xor
mov
inc
iret
sti
inc
sahf
sbb
test
mov
or
lahf
push
adc
cs
cmc
jne
jbe
xchg
cmpsl
hlt
loop
sub
push
bound
and
xchg
sti
sub
aas
insl
lea
addr16
in
popa
mov
or
or
popf
and
in
push
mov
adc
or
outsb
sbb
in
icebp
test
ljmp
sub
xchg
mov
lea
call
mov
push
xchg
jbe
out
lods
mov
mov
jae
fs
int3
int3
imul
xlat
jge
sub
mov
xor
repz
ja
lods
iret
jle
out
jb
rcl
and
dec
sbb
arpl
xor
lret
lock
mov
xchg
inc
inc
aas
xchg
lods
stc
test
push
cmpsb
ljmp
lret
pop
in
mov
push
jns
loop
or
xchg
or
cld
cmp
sarl
mov
mov
movsl
cli
adc
push
sub
xchg
fidivl
cmp
int3
push
jecxz
ret
pop
inc
xchg
mov
xor
fwait
loopne
mov
sbb
sbb
xchg
mov
inc
test
stc
mov
adc
aad
fs
movsl
pop
int
jp
scas
push
data16
loope
pop
testb
push
and
in
je
pop
mov
loopne
inc
xor
js
dec
lcall
aaa
cmp
inc
dec
add
sub
icebp
push
mov
shll
es
orl
push
cmp
add
cmc
arpl
sahf
das
lret
outsl
lret
mov
cmovs
lcall
sbb
xorb
ss
aad
or
cmp
inc
fcmovnu
pop
addr16
adc
cli
xor
xlat
push
inc
mov
xorb
mov
and
inc
xchg
xchg
jnp
cld
jp
in
sub
xchg
mov
filds
or
adc
mov
inc
push
hlt
aas
in
stos
xchg
shrb
jmp
push
popf
rcrl
cbtw
aam
inc
aad
mov
fcoml
jmp
lret
sub
lret
cmpsb
in
fcomip
mov
push
fiadds
dec
movsb
rcrl
xchg
xor
push
inc
in
sub
sbb
cmp
push
dec
popa
subb
and
xchg
ror
add
push
fmuls
pushf
jmp
shr
movsbl
mov
sbb
jae
out
fidivs
lods
out
fistps
lahf
shll
repz
scas
xchg
std
scas
xchg
pop
les
dec
dec
dec
inc
popa
xchg
pop
cmp
jbe
ret
push
push
stos
cmp
and
cmp
scas
test
pusha
stc
dec
cli
cmc
or
lcall
cmp
lock
push
pop
out
or
shll
inc
daa
dec
adc
xor
stos
test
mov
xchg
std
test
xchg
divl
pop
jo
mov
lods
fldl
clc
adc
xchg
mov
cmp
outsl
xor
fcomp
jne
push
sub
add
mov
lea
push
mov
leave
pushf
cmp
dec
imul
lock
jb
push
roll
nop
adc
mov
xchg
jg
fldenv
pusha
fisubrl
lock
aas
fildll
jb
xchg
fwait
mov
push
mov
mov
cmp
leave
mov
in
add
push
arpl
call
jecxz
insl
rorb
dec
inc
dec
mov
lds
ljmp
inc
xchg
clc
jnp
xchg
dec
lods
push
inc
cmp
xchg
lret
and
or
out
mov
ds
aad
aad
jne
fdivr
xchg
xchg
jbe
dec
xor
adc
or
js
dec
mov
mov
mov
jb
aam
dec
lcall
pop
adc
mov
das
pop
and
stc
jge
xchg
pop
sarl
and
std
mov
xlat
lahf
jecxz
adc
mov
iret
cli
mov
in
add
fdiv
imul
leave
das
dec
pop
rcll
pop
sub
sarl
out
clc
mov
dec
rcr
cmp
adc
jae
outsl
mov
clc
sbb
rolb
xchg
pop
jle
loopne
add
clc
push
push
jnp
fcmovu
shl
fldt
mov
and
into
xor
aad
jl
movsb
pop
xchg
and
adc
cmp
cmp
outsb
rcl
lds
ret
jnp
dec
jmp
mov
add
jne
cmp
subl
xor
addl
mov
xor
push
pop
repnz
movsb
mov
loopne
imul
lods
pop
in
popf
nop
movsb
mov
popf
mov
inc
add
adc
xchg
fimuls
negb
jns
mulb
mov
aaa
je
push
jmp
and
inc
mov
sti
daa
scas
das
push
push
stos
adcb
jl
pop
jle
and
data16
ja
shr
mov
loopne
push
jmp
mov
adc
aam
jbe
mov
pop
push
pop
jecxz
or
xor
outsb
mov
xchg
jo
imull
cmp
mov
rcrl
call
mov
shll
repz
repnz
js
xchg
dec
xchg
scas
ret
and
jecxz
mov
mov
push
repz
dec
mov
xlat
ja
pop
sbb
sub
xchg
pop
sbb
sbb
das
mov
lock
shl
mov
or
jo
test
data16
jbe
xchg
jno
dec
mov
jne
pop
cmc
and
dec
mov
in
adc
hlt
ss
push
pop
inc
lea
mov
mov
leave
sbb
inc
cwtl
loop
push
cmp
cmp
push
cmp
ljmp
jns
sbb
push
fiaddl
jns
lea
mov
mov
out
jg
or
sbb
mov
mov
addr16
data16
lahf
loop
shll
cmp
in
loope
movsb
or
sbb
adc
out
pop
mov
sbb
xlat
call
mov
pop
mov
scas
ljmp
push
icebp
mov
mov
inc
in
sub
mov
cmove
pop
and
les
fldt
push
push
mov
sbb
in
insl
mov
mov
sbb
jmp
jmp
mov
add
mov
bnd
out
ljmp
jns
push
popf
cmpsb
xchg
into
pop
in
ret
sbb
fwait
xorb
push
lret
imul
sub
fimuls
fisttps
gs
mov
jl
ret
mov
nop
xchg
and
and
add
xchg
movsl
lcall
push
push
ljmp
cmpsl
ret
xchg
loopne
adc
loopne
adc
jecxz
dec
pusha
cmpl
cmp
notl
inc
sub
cmp
xor
push
mov
cmpsb
sub
mov
lahf
loop
scas
xchg
fstps
es
dec
add
xor
push
arpl
mov
in
subb
or
in
inc
inc
cmc
jl
push
out
les
mov
mov
jb
push
ret
mov
ljmp
xor
mull
hlt
pusha
out
std
sbb
dec
xchg
mov
push
out
mov
mov
loopne
sbb
shll
adc
xchg
out
sarl
hlt
leave
pop
or
cmp
pop
outsl
in
dec
inc
xchg
cmpsl
fmul
stos
pop
mov
inc
leave
lret
pop
mov
pop
and
push
lcall
icebp
sbb
cltd
and
addl
xor
ljmp
gs
inc
mov
lret
xchg
mov
rcr
sub
jnp
pop
lods
inc
and
push
ss
jbe
bound
xor
sub
outsb
daa
pop
fwait
in
sub
push
xor
add
sub
incl
cmpsb
jle
xchg
cmc
cltd
push
xchg
imull
popa
xchg
push
xchg
cmp
enter
inc
test
ret
cmp
int3
inc
aad
test
ret
jo
or
add
aaa
es
fcompp
mov
divl
xchg
fcomps
cmp
sbb
cltd
loope
xchg
xor
dec
sub
jge
xchg
mov
mov
in
sub
in
cli
es
xchg
sbb
push
cmp
and
imul
hlt
mov
xchg
lret
aam
dec
fprem1
cmp
inc
imul
in
insb
cltd
inc
call
outsb
test
andl
mov
sub
push
mov
inc
mov
out
adc
mov
dec
sub
jo
mov
push
cmp
es
mov
dec
jno
fidivrl
cmp
lds
lea
dec
mov
cmp
mov
sbb
stc
mov
mov
test
addb
jbe
adc
movl
mov
gs
movsb
mov
les
pop
rclb
inc
daa
xchg
mov
in
sub
mov
loop
movsl
xchg
dec
cmp
add
xchg
loope
add
mov
movb
fcmovbe
hlt
lds
inc
and
data16
movsb
cmc
sub
cmp
insb
sbb
addr16
add
punpckldq
lahf
iret
cwtl
mov
jl
and
lock
mov
add
adc
stc
ljmp
fldcw
push
inc
mov
xor
add
mov
adc
pop
and
sub
lahf
bound
mov
mov
out
sbb
xchg
mov
aaa
outsl
jle
add
xchg
shrl
add
jge
outsb
or
push
pop
or
xor
mov
icebp
dec
jg
test
subb
les
mov
in
cmpsb
shll
pop
mov
mov
mov
jmp
pushf
shll
mov
jns
cmpsl
inc
pop
push
iret
std
out
xchg
sub
jecxz
sti
hlt
jae
test
adc
add
pop
hlt
je
jbe
and
cmp
stc
rolb
inc
rorb
jno
cs
nop
call
jbe
scas
mov
and
decl
mov
xchg
not
and
add
cmp
push
imul
push
add
sub
lahf
in
das
pushf
xchg
ret
push
adc
jbe
dec
jecxz
cmp
clc
loope
shrb
fldenvs
sub
pushf
jnp
inc
icebp
and
push
sbb
and
cmp
jno
lret
fsubs
and
push
and
or
cmp
inc
ja
cs
jnp
xchg
mov
xchg
ja
push
push
xchg
mov
push
inc
cmpsl
mov
mov
mov
jg
call
xor
fdivs
fucom
loope
add
sub
xor
xchg
push
jno
xchg
push
push
xchg
or
adc
xor
fwait
and
inc
jl
je
dec
jp
lock
icebp
xchg
aad
adc
or
lods
lcall
insl
push
pop
mov
fisubs
shrl
dec
jb
negb
xorl
xchg
dec
nop
adc
and
loop
subl
out
hlt
scas
sub
mov
inc
in
out
ja
jge
xchg
dec
ret
dec
ret
add
sbb
cmpsb
ror
mov
inc
pop
adc
mov
push
and
dec
xor
mov
jmp
xchg
add
sbb
and
mov
pop
inc
inc
push
pop
mov
je
daa
sub
add
out
pop
xchg
mov
dec
inc
insl
cld
lods
push
call
inc
cmp
negl
cmpsl
lods
cmpb
xchg
inc
enter
repz
jo
push
xchg
insb
inc
or
push
and
xor
les
xchg
add
xchg
sar
call
loopne
movsb
cld
and
adc
jb
push
dec
and
mov
adc
pop
xorb
test
inc
loopne
pop
pop
es
add
sarl
pop
jbe
dec
pop
jne
xor
std
jmp
mov
loope
clc
lds
call
and
jg
sub
xchg
idivb
sub
xchg
in
sbb
xchg
lret
repz
mov
xchg
mul
imulb
jle
cmp
hlt
sbb
mov
dec
mov
inc
pop
jle
jmp
insb
hlt
dec
fidivs
cmp
js
dec
call
in
push
stos
pop
rol
add
imul
jmp
fwait
out
dec
lea
jb
lea
mov
pop
imulb
pop
lret
es
push
fdivl
pushf
jecxz
das
test
mov
mov
mov
leave
ret
movsb
pop
lds
xorl
mov
mov
or
xchg
adc
add
dec
adc
gs
movsb
jp
je
mov
js
mov
inc
div
add
dec
mov
int3
cmc
jno
cmpsl
je
int
inc
es
cwtl
idivl
xor
cwtl
push
pop
mov
and
es
das
mov
dec
xor
sbb
movsb
lods
xor
sub
mov
push
popa
lods
iret
jno
mov
add
movsb
xchg
negl
in
lfs
shlb
std
add
into
dec
enter
pop
inc
lahf
imul
push
rcr
imul
fisubrl
in
cli
adcl
sub
lods
arpl
add
mov
scas
or
popa
outsl
push
out
and
int
enter
insl
repnz
inc
hlt
inc
push
mov
int
jbe
push
fimull
out
or
popa
outsl
ljmp
mov
outsb
sub
pop
sub
xchg
int3
cmc
stos
es
pop
and
enter
push
push
mov
lahf
sbb
shl
add
loop
xor
imul
cmc
inc
fcompl
mov
test
sub
pop
aas
xchg
repnz
sar
inc
arpl
test
testl
repnz
clc
and
fcmovu
mov
dec
mov
cmp
and
push
jnp
stos
repz
ficomps
dec
sbb
sub
mov
adc
and
lret
dec
xchg
pop
inc
cli
cmp
cmpsb
mov
sub
inc
sbb
sti
pusha
cmp
mov
push
sbb
adc
pop
mov
aaa
mov
mov
mov
and
and
data16
inc
into
loop
or
popa
out
or
or
fscale
dec
paddsw
mov
daa
push
push
hlt
fmull
pop
outsb
sbb
mov
or
xor
sub
adc
int3
incl
fwait
imul
mov
sbbb
arpl
push
or
aam
xchg
jno
dec
or
jbe
stc
xchg
in
loopne
pop
cmp
mov
fmul
int
mov
int3
push
adc
push
dec
clc
daa
and
cmp
push
in
repz
adcb
and
jl
xor
mov
je
outsb
nop
test
lret
mov
jne
push
mov
repnz
add
divl
adc
ds
and
inc
xor
cmp
je
xchg
divb
xchg
dec
jne
lds
add
mov
push
mov
js
add
cmp
int
inc
ljmp
cmp
pop
push
sbb
call
inc
dec
dec
ja
or
adc
out
imulb
push
cmp
push
mov
xchg
loope
scas
cmp
sub
sbb
mov
pop
inc
in
mov
loop
xchg
inc
icebp
inc
rcr
imul
clc
adc
aas
rcrb
mov
jmp
in
pop
dec
pop
pop
inc
dec
xchg
mov
out
pop
dec
and
mov
das
mov
cmp
cs
pushf
xchg
ja
movsb
jbe
lcall
push
xor
scas
sub
add
sub
addr16
jb
stos
dec
insl
xchg
popf
jne
mov
pop
repnz
push
mov
roll
loopne
sub
inc
and
into
sbb
out
imul
and
rcll
sbb
dec
push
mov
pop
outsb
cmp
sbb
gs
enter
rcll
push
mov
subb
movsl
add
sub
adc
mov
cli
xchg
lret
sbb
pop
pop
fsubs
dec
pop
xchg
mov
mov
fwait
sbb
jbe
pop
push
pop
add
bnd
inc
inc
out
cld
div
ds
sub
mov
push
sbb
or
dec
mov
and
mov
xchg
andb
idivl
lcall
leave
daa
jp
sbb
sub
mov
fnstenv
push
mov
push
gs
inc
jmp
push
sub
imull
sbb
xor
pop
or
adc
dec
sub
lds
test
loopne
and
inc
cmp
in
lret
adcb
jg
pop
inc
cmp
or
sub
mov
add
je
loopne
pop
subl
xchg
mov
inc
add
pop
fdivs
push
and
ret
bound
loop
sub
or
lcall
in
sti
inc
mov
adc
push
dec
neg
test
fs
movsl
cmpsl
push
stos
lods
ss
pop
in
pusha
movsl
imul
and
pop
cs
call
in
movsb
mov
nop
movsl
loop
in
xchg
sbb
std
adc
ljmp
and
call
xor
push
ljmp
push
mov
and
inc
xchg
and
repz
lret
mov
std
mov
inc
subl
fwait
sahf
int3
movsl
pop
xor
fsubs
ljmp
fcomip
mov
dec
or
inc
dec
or
xchg
insb
mov
aam
push
dec
loopne
outsb
dec
std
inc
jno
mov
lods
sbb
imul
inc
fistpll
outsb
cld
push
xor
int
pop
jle
fcmovbe
mov
jb
std
xchg
test
dec
lret
jbe
fs
mov
fcompl
jl
bound
inc
jb
fdivl
nop
xchg
sti
ret
fwait
rorb
pop
fcompl
pop
adc
movsl
cmp
ds
jo
popf
arpl
and
lcall
imul
sbb
or
jp
insb
call
popf
insl
aaa
nop
ja
jns
inc
cmp
or
xchg
fmuls
push
sbb
jecxz
jl,pt
loop
outsl
xor
or
popf
or
outsl
stos
es
inc
sbb
addb
fbld
sub
js
sub
cmp
js
inc
rolb
cmp
cmp
cmp
test
movsb
adc
scas
stc
fdivrl
jge
dec
adc
popf
hlt
pop
and
std
test
jns
into
sub
mov
mov
jmp
bound
out
adc
cmp
or
icebp
jae
xchg
cmp
or
lret
pushf
loope
data16
push
popa
sbb
loope
sarl
stos
sub
push
sbb
xor
dec
arpl
pusha
ror
lahf
cmp
xchg
imul
scas
inc
or
in
hlt
or
adc
lea
jg
pushl
divl
fs
pop
pop
jb
pop
push
xchg
sbb
lods
xor
lods
pushfw
pop
pushf
pop
loope
cmpsl
jae
and
out
cmp
xor
adc
test
loop
push
dec
jmp
sbb
leave
cmp
mov
ja
nop
jmp
sub
shrb
inc
shl
cmp
fsubl
push
decl
inc
dec
sti
mov
mov
es
adc
dec
push
pop
mov
lock
dec
mov
add
add
pusha
seto
lahf
or
sub
fisttps
add
and
sbb
imul
jle
adc
hlt
push
mov
cmp
outsl
pop
les
pop
scas
cmpsb
sub
adc
loop
dec
fcmovnbe
mov
subl
push
fwait
insl
out
rol
adc
push
repz
mov
out
xorl
out
cmp
xor
inc
je
mov
mov
test
mov
outsl
jp
dec
and
sub
pop
add
je
pop
push
xchg
int
das
std
mov
xchg
rorl
into
mov
aad
test
test
and
cmp
xchg
and
cmp
ljmp
and
loopne
sub
rclb
adc
mov
out
jl
xor
hlt
fwait
push
jg
orl
mov
add
mov
addl
sbb
xor
in
dec
jmp
jmp
xchg
xchg
fisubl
test
loopne
xchg
mov
cmpsb
xchg
outsb
jmp
popf
sbb
push
cltd
xlat
pop
test
frstor
xor
xchg
adc
jmp
jnp
push
inc
je
pop
mov
mov
xor
cmp
add
jmp
daa
arpl
mov
sub
mov
clc
add
jae
dec
out
jge
add
xchg
mov
int3
cwtl
icebp
test
pop
cld
mov
in
mov
jb
in
cmpsb
stos
pop
loope
jbe
dec
ja
js
inc
imul
or
cwtl
xchg
inc
push
adc
inc
cwtl
lock
call
shll
push
fbstp
cld
xlat
pop
shl
sbb
jb
loop
mov
aas
add
movsl
mov
or
cwtl
or
mov
pop
out
lret
lret
sbb
or
xchg
pop
ficoms
jo
adc
fnstsw
jne
cwtl
pop
inc
jmp
jno
out
stos
pop
xor
lcall
out
int
xchg
std
inc
jmp
xor
ret
mov
les
stos
mov
repnz
sub
inc
cmp
mov
adc
fs
xlat
mov
cmpsl
dec
and
xor
imul
mov
push
mov
pop
mov
and
pusha
and
mov
jge
jae
data16
popf
inc
lahf
sub
cmpsl
addr16
xor
int
push
iret
movsl
sub
add
lea
dec
leave
pop
cld
add
testb
das
stc
mov
push
into
and
aad
test
push
jns
scas
fcoml
cmp
add
outsb
sub
sub
xor
fadds
inc
push
cmpsb
pop
add
add
in
inc
add
dec
xchg
xlat
mov
sub
icebp
pop
push
jle
mov
lods
dec
mov
push
fdivrl
mov
jg
adc
or
lahf
push
add
scas
jns
pop
sub
fistpll
pushf
popl
lahf
or
mov
mov
cmp
lock
inc
arpl
mov
and
fisubrl
or
or
dec
xor
nop
jl
stc
adc
subl
and
fnstsw
fwait
clc
mov
scas
push
jno
xchg
push
int3
es
imul
cmpsl
xchg
scas
push
int3
addr16
adc
sub
imul
adc
lahf
xlat
fldcw
fbstp
jae
push
in
std
lea
sbb
pop
fisubrl
push
roll
adc
decl
add
sbb
in
push
dec
mov
jl
enter
addr16
mov
xchg
xchg
iret
inc
out
mov
movsb
loope
dec
pop
adc
inc
inc
or
cwtl
pop
adc
rsm
inc
out
xor
and
push
or
cs
sub
rorl
ss
pop
iret
icebp
cmp
dec
lds
insb
mov
cmp
fmull
mov
pop
inc
scas
pop
notb
mov
mov
sub
hlt
aam
jp
jmp
adc
cmp
fstl
xor
xor
sahf
fildll
jb
mov
notl
ds
dec
mov
jl
and
dec
int3
mov
fcomps
ret
and
and
dec
sbb
pop
add
mov
mov
std
and
divl
xor
xchg
testb
mov
xchg
sbbb
mov
movsb
cwtl
pushf
jbe,pt
sbb
adc
mov
pop
test
pop
stos
jbe,pt
es
frstor
aam
addr16
sahf
cmp
cmp
sysret
sbb
jae
push
out
adc
aad
in
arpl
xchg
add
mov
imul
mov
xchg
xor
xor
sbb
cmp
jg
adcb
ds
jle
scas
xchg
leave
andb
rcl
pop
popf
jmp
in
enter
js
jge
cmp
cmpsb
roll
inc
mov
scas
dec
shrl
inc
adc
leave
sbb
int
jno
jno
ret
enter
test
out
es
outsb
cld
mov
repz
inc
jmp
xor
jne
setns
adc
dec
in
ret
inc
push
aas
xchg
xor
or
into
pop
std
sub
mov
and
lods
out
shr
pushf
stos
aas
add
adc
xchg
xchg
or
fldt
es
mov
pop
test
dec
or
scas
int
cmc
push
push
jb
into
rorb
cmp
xchg
fsubrl
pop
in
mov
enter
and
fldenv
push
popf
cmp
jbe
cs
loopne
movb
pop
xchg
cmp
push
mov
push
inc
push
pop
mov
dec
repz
sbb
dec
enter
push
mov
or
test
sub
cwtl
cmpsl
fstps
ja
mov
push
sub
into
xor
sub
daa
jnp,pt
sbb
jp
pop
repz
push
ret
ret
adc
xor
jp
cltd
add
mov
rclb
fcompl
sbb
std
or
mov
push
mov
xlat
cld
outsl
jns
sub
sub
lcall
push
flds
addb
mov
cltd
cli
lods
mov
and
sub
icebp
jnp
sub
loopne
mov
add
notl
or
sub
mov
sbb
adc
popa
test
xor
imul
sub
pop
rorl
cmp
sbb
addl
dec
ror
push
test
sbb
mov
jnp
repnz
enter
and
pop
movsb
sub
movsb
mov
xor
subl
imulb
orb
lods
mov
mov
sbb
pop
xor
aaa
mov
jbe
push
icebp
out
icebp
rcrl
push
shll
imulb
or
mov
and
mov
adc
aaa
out
inc
sub
mov
sbb
cmc
xchg
nop
inc
sbb
inc
jno
inc
cmpsb
sub
and
rsm
daa
movsl
adc
sbbl
jbe
mov
mov
dec
sbb
inc
sub
movsb
mov
std
loop
lahf
inc
movsb
orb
push
cwtl
outsb
mov
pop
addl
iret
mov
adc
xor
add
je
leave
or
push
iret
push
cmp
push
and
lock
mov
jge
push
in
jb
inc
pusha
push
repnz
shl
shll
lods
push
pop
stos
jae
pop
xor
jnp
inc
xchg
sti
jl
int3
in
sbb
mov
ret
ja
psubd
rorb
jo
repz
pop
movsb
lods
mov
add
popa
aaa
fcoml
mov
out
shl
sbb
or
sbb
jb
aad
stos
jae
jns
xor
in
or
sbb
and
movsl
and
push
arpl
lcall
sbb
pusha
and
adc
mov
lahf
jle
sub
cmp
cmp
pop
test
shrl
adc
inc
rorl
cmc
jecxz
sub
ret
xor
xlat
push
xor
hlt
mov
sarl
into
jge
stos
pop
sar
or
hlt
cmp
int3
ja
test
repnz
push
test
add
into
addl
lahf
xchg
sub
arpl
xor
test
shlb
and
xlat
xor
mov
mov
hlt
lods
sbb
mov
xchg
cmp
xchg
scas
lods
ret
sub
aad
xchg
jns
jle
adc
sbb
push
icebp
jno
imul
sbbb
add
test
push
mov
repnz
test
mov
cltd
xchg
inc
adc
jg
xchg
js
pop
cmp
lods
mov
sub
int3
pop
push
mov
mov
push
sbb
cmc
sub
push
dec
pop
mov
lret
cmp
xchg
pushf
jno
sbb
scas
mov
mov
ja
scas
fildll
scas
mov
add
jge
cmp
ret
xorl
cmp
or
movl
sarl
negb
int
sbb
adc
lds
jmp
shll
movsl
xor
out
dec
or
in
add
sub
lock
cmp
push
cmp
orb
pop
mov
hlt
sti
jmp
push
movl
jbe
push
pop
in
dec
bound
fwait
jnp
int3
js
push
cmpsb
inc
lea
in
cmp
jl
inc
sub
mov
test
xor
ja
jnp
mov
lret
mov
xor
mov
mov
dec
lods
and
mov
mov
mov
mov
ret
xor
sti
and
fnstsw
mov
lret
fcmovnb
adc
aas
mov
add
or
cmp
fsubs
xor
and
sahf
pop
xor
stos
add
lcall
mov
mov
xchg
addr16
lock
ja
hlt
repnz
inc
jg
pushaw
cmpl
sbb
addr16
push
outsl
dec
add
outsl
data16
xchg
ljmp
adc
flds
jnp
and
cmpsl
insb
rolb
decl
inc
insb
mov
cmp
push
out
sub
jb
mov
inc
sub
cmp
xchg
lea
addr16
and
and
mov
mov
add
jl
pop
rol
xchg
xor
cmc
lret
gs
ret
popa
enter
lahf
test
arpl
gs
imul
rclb
stc
jmp
dec
push
es
jp
adcl
jecxz
mov
inc
mov
or
jle
inc
pushf
mov
repz
xchg
jmp
xchg
insl
fnstsw
or
dec
or
into
mov
mov
fimull
mov
mov
and
jbe
pop
lock
push
out
popa
push
pop
cmp
mov
xor
lcall
mov
jne
icebp
adc
aaa
imul
pop
add
jnp
mov
cmp
je
push
adc
fsubs
std
or
je
mov
push
xchg
lret
or
xchg
dec
cmp
sbb
stos
inc
fs
stc
dec
add
aad
mov
pop
lahf
iret
sbb
jns
xchg
xchg
mov
add
mov
jl
mov
inc
and
add
push
hlt
filds
lcall
adc
push
cwtl
dec
test
in
imul
xchg
sbb
movsb
pop
aam
mov
and
or
out
jne
jl
mov
pop
movsl
stc
test
push
rcll
xorl
pop
faddl
sbb
mov
xor
dec
mul
pop
pop
popf
xchg
sbb
push
leave
mov
jmp
xorl
loope
push
xor
addr16
mov
or
cmp
pop
mov
in
insb
inc
push
loop
loop
mov
testl
ficoms
adc
fadd
inc
mov
into
fxch
fwait
imul
mov
dec
jg
outsb
flds
inc
dec
loope
cld
dec
test
test
cmpsb
rcl
adc
in
cli
imul
jmp
cmp
xchg
xchg
inc
mov
inc
xor
ss
mov
scas
out
sbb
pop
xor
or
cmp
pxor
shl
enter
cmp
mov
jnp
cmpsb
jae
or
lret
std
mov
inc
cmp
sbb
adc
jmp
mov
in
add
sysret
adc
push
inc
js
in
mov
add
movsb
ss
jbe
notl
enter
mov
das
jp
nop
and
xchg
cmovp
andb
sub
insl
mov
outsb
inc
popf
jp
jb
imul
stos
ss
nop
dec
inc
cmp
subb
and
mov
hlt
imul
xchg
cld
out
jns
aad
fdivrl
popa
sbbl
mov
push
adc
add
cmp
inc
mov
icebp
mov
push
repz
sbb
sbb
cmp
add
aad
xorl
pop
push
enter
jge
add
cmpl
fsubrl
mov
shll
lcall
xchg
jmp
xor
sbb
xor
int
sbb
mov
ja
aaa
scas
repz
push
pop
test
fcmovnu
repnz
sub
ljmp
sbb
mov
into
test
divb
cmp
icebp
mov
xor
fisttpl
push
pop
stos
popa
iret
rcll
add
cmp
js
sbb
cmp
decb
inc
mov
pop
leave
in
pop
or
test
push
mov
loop
jb
sbb
mov
stos
icebp
shlb
or
cmc
popf
aas
mov
mov
and
or
xchg
lahf
or
add
cs
push
sti
imul
dec
fcoml
out
sbb
or
loop
stos
pop
test
ficompl
adc
aas
cmp
jg
arpl
inc
xor
push
test
sarl
repz
sbb
lcall
pop
dec
popa
adc
mov
adc
push
stc
inc
and
aad
jg
xchg
daa
inc
mov
icebp
imul
decl
inc
in
imul
fildl
mov
pop
mov
pusha
push
pop
ds
rcl
dec
rorb
sub
push
popf
sti
mov
xorl
cld
rcll
movsb
shll
jae
and
loopne
mov
fistpll
iret
xchg
ss
sub
or
push
or
pop
xchg
inc
adc
rclb
or
jle
iret
lock
out
movb
add
mov
stos
dec
mov
adc
push
xlat
jecxz
pop
jbe
xlat
mov
xchg
cmpsb
pop
outsb
lods
dec
dec
popf
mov
xor
into
in
lret
cmpsb
or
gs
or
fcoms
call
mov
mov
sarb
aas
pop
adc
int
pop
sti
push
loope
pop
imul
insb
loope
jno
jl
and
cltd
data16
pop
add
sarb
mov
ss
pop
popa
stc
inc
sub
cmp
dec
in
insl
push
mov
push
cmp
into
lret
pop
cmp
inc
push
pop
xchg
sub
hlt
sbb
or
bound
and
pop
xor
inc
aad
inc
jecxz
pop
cltd
inc
inc
sub
push
call
out
adc
aad
aad
pop
mov
out
cmp
sub
mov
sbb
adc
jnp
sub
pop
cmp
rcll
aam
xlat
mov
insb
xchg
scas
out
mov
lret
push
loopne
test
sbb
add
cmpsb
cmp
in
push
ret
mov
mov
push
sarl
and
pop
dec
jp
addr16
bound
lcall
mov
gs
out
xchg
iret
imul
xchg
data16
jl
push
sbb
push
xchg
add
dec
xchg
pushf
adc
mov
das
cmp
mov
mov
mov
cld
mov
sbb
imul
and
lods
pushl
cmc
xchg
inc
mov
repnz
data16
cltd
sub
lret
push
movsb
lret
andb
cwtl
rcll
shrb
ret
adc
mov
lods
fistl
andl
mov
cmc
fdivl
or
test
mov
js
jns
cmpsl
and
ret
lahf
mov
rclb
ja
jmp
test
xchg
fs
cwtl
pop
jb
pusha
test
jbe
imul
dec
sti
jmp
jl
dec
in
and
xchg
pop
enter
lock
or
push
ja
insl
or
cmp
mov
sbb
xor
insl
xor
icebp
fcmovnu
rclb
nop
ds
lret
dec
push
inc
cli
push
push
mov
es
cmp
jne
fldl
sbb
mov
ljmp
or
jmp
iret
mov
addr16
push
loop
leave
push
xor
outsb
cs
pop
sbbb
push
pusha
pop
dec
mov
sub
fxch
in
hlt
fisubs
jp
aaa
pop
jmp
stos
pop
fnclex
xchg
inc
jne
pop
into
add
repz
mov
iret
xor
shl
test
mov
sub
or
dec
and
sbb
mov
jae
adcl
xchg
adc
pop
mov
jl
test
out
jle
pop
lret
mov
imul
mov
cld
cld
jnp
pop
jecxz
mov
pop
mov
orb
enter
stos
cmp
sbb
jne
lock
movsb
xor
repnz
adc
pop
rorb
stc
pop
rorb
xor
pop
jl
lea
icebp
inc
mov
out
pop
lods
bound
out
insl
mov
fs
fiadds
pop
pushf
dec
arpl
mov
pmulhuw
sbb
cmp
loope
xor
pop
xchg
and
sbb
sbb
andb
aaa
cmp
push
je
mov
mov
jg
xor
mov
add
into
push
xchg
popf
xchg
inc
loope
cmp
add
dec
gs
mov
mov
iret
insl
out
fisttps
aaa
aad
sub
mov
popa
aad
jns
inc
add
jecxz
push
fcompl
dec
add
lea
push
mov
sbb
adc
addr16
push
dec
inc
outsb
outsb
xor
addr16
xchg
mov
aas
stc
ret
into
pushf
mov
mov
pop
ss
xor
and
xor
imul
push
scas
lret
inc
ljmp
inc
push
xchg
inc
jp
ret
xor
lock
adc
clc
cltd
jnp
mov
sbbb
xchg
out
into
shr
sbb
fadds
les
mov
sbb
outsb
aaa
gs
test
mov
mov
jno
fwait
sbb
mov
jle
pop
inc
sub
sub
out
je
lret
test
jmp
or
pop
cld
lahf
imul
idivb
pop
loop
mov
add
ret
lds
test
push
nop
lods
mov
cmp
inc
iret
adc
addr16
scas
mov
push
cmp
xor
xchg
scas
or
dec
mov
mov
mov
test
negl
leave
dec
addb
xchg
popf
push
pushf
mov
jmp
dec
nop
jae
and
push
pop
mov
jns
bound
xchg
cmpsb
jg
add
push
or
repz
jp
orl
push
aaa
xchg
pop
sub
jle
xchg
mov
out
lahf
test
es
mov
xchg
xorb
jns
lea
jae
out
repnz
cmpsb
dec
test
and
and
or
push
fcmovnu
test
pop
je
sti
mov
push
test
pop
xor
mov
jl
add
sbb
xchg
sbb
dec
test
nop
mov
cmpsl
dec
clc
mov
fisttpll
xor
into
adc
mov
dec
xchg
stos
mov
cmp
jo
xlat
loop
sub
ds
insb
fildl
sub
inc
inc
pop
shl
aad
cmp
mov
pop
imul
sub
int3
ds
in
xchg
push
jmp
cli
sub
and
jae
inc
jb
cli
mov
loopne
fadds
push
or
fldenv
dec
cmpsl
stos
or
mov
lret
movsb
push
popf
popf
jo
sbb
into
or
outsb
fildl
je
pushf
icebp
adc
out
je
add
mulb
das
or
or
out
mov
mov
shll
xchg
adc
sarl
xchg
mov
inc
lods
dec
fadds
popf
lahf
aam
push
mov
dec
cld
push
mov
bnd
pop
xorb
enter
out
mov
ret
test
mov
fcoms
ret
je
pop
push
inc
xor
push
out
sbb
xchg
lahf
repnz
hlt
inc
add
enter
adc
dec
aam
fisubl
xor
imul
aas
sub
or
orb
push
leave
daa
pusha
mov
out
imul
out
mov
mov
mov
bound
hlt
ljmp
or
shlb
mov
ja
outsl
sub
movsl
int
push
sub
mov
clc
mov
repz
les
lahf
repnz
test
adc
sbb
and
int
add
mov
out
sbb
mov
adc
and
shrb
mov
mov
popf
les
xchg
lods
ret
mov
sbb
aas
pop
daa
jnp
xchg
cld
in
xor
les
jl
mov
sbb
push
sbb
imul
addr16
aaa
enter
stos
mov
mov
aas
mov
inc
aas
pcmpeqw
or
pop
jnp
fcompl
mov
pop
loop
pop
test
rolb
aam
adc
cmpb
call
jnp
dec
jmp
sub
mov
clc
push
cmovge
call
xchg
push
dec
mov
inc
cmp
pushl
mov
imul
scas
xchg
aaa
test
das
dec
or
jle
leave
cld
sahf
aaa
lds
and
adc
imul
push
hlt
aad
nop
into
push
inc
out
cmp
test
adc
mov
inc
bound
or
notb
pop
popa
adc
xor
mov
cmp
arpl
inc
int
mov
jo
fadd
loop
or
pop
and
pop
inc
pusha
hlt
mov
sub
and
pop
cs
sub
mov
test
fs
hlt
dec
out
repnz
outsb
xchg
cli
and
jg
jns
mov
imul
xor
test
sub
push
in
ret
daa
jbe
lds
dec
mov
pop
int3
rorb
nop
mov
dec
push
sti
sub
jae
cltd
insl
mov
fnsave
test
inc
or
mov
jmp
insl
int3
mov
sbb
pop
mov
push
jmp
bswap
jp
or
mov
scas
ret
fcomip
add
aam
scas
sub
fstpt
lret
xlat
outsl
pop
cld
jbe
test
inc
shrb
sti
sbb
hlt
shll
repnz
inc
outsb
push
pop
in
sbb
enter
xchg
popa
ds
enter
enter
les
pop
lret
movsl
xchg
sub
pop
cld
insb
call
in
lds
sbb
mov
jge
push
xor
xchg
negb
cmpsb
mov
addr16
lock
xor
movsb
or
mov
sbb
mov
or
mov
movl
sarl
dec
fidivl
xlat
addr16
repz
xor
ljmp
pop
mov
mov
cmp
popf
repnz
adc
in
cs
push
adc
dec
mov
mov
mov
xlat
sbb
cmpb
mov
clc
sub
aas
pop
loopne
in
leave
imulb
movsb
push
je
cli
ud2
leave
pushf
imul
clc
inc
ss
push
push
cld
xor
ret
mov
iret
add
and
mov
xchg
mov
mov
jnp
mov
add
imul
xchg
push
fsubrs
mov
mov
dec
jecxz
fisttpl
push
das
movsb
test
ficoml
movsb
dec
or
clc
popa
pop
imul
push
iret
mov
sbb
adc
cmp
faddl
stos
xor
mov
lds
and
pop
pushf
lods
mov
or
fwait
jno
inc
loop
ja
pop
pop
push
xchg
sbb
cmp
sub
pop
js
pop
into
dec
push
jge
stc
jmp
mov
insl
fildll
mov
je
and
fs
fsubl
addr16
ret
adc
in
jo
pop
add
mov
in
jp
pop
jns
push
leave
xchg
sti
test
pop
jmp
add
mov
testb
add
in
push
lahf
mov
mov
mov
into
cmp
xchg
sti
mov
lret
mov
ljmp
add
cli
aam
jbe
jg
mul
and
xchg
xlat
rolb
xchg
inc
rclb
shlb
xor
push
call
xchg
and
jbe
js
or
cmpsl
push
cmp
cmp
pop
aam
jne
jmp
or
movsb
mov
rcrl
xor
data16
int3
sbb
vmwrite
lea
aaa
and
lret
mov
push
stos
add
std
mov
mull
fcoms
fucomp
cmpl
shlb
enter
shll
jg
pushf
rclb
mov
aaa
mov
in
dec
js
xchg
cmp
es
pop
shll
push
jg
mov
dec
cmp
shrl
pop
jl
xchg
jge
xchg
in
xchg
dec
dec
xor
add
pop
repz
inc
jge
inc
dec
add
das
mov
push
cmp
mov
push
stos
scas
adcb
sbb
repz
xchg
out
xlat
dec
adc
xchg
add
pop
ret
or
dec
mov
push
push
cmp
and
xor
push
xchg
mov
inc
cmc
stos
pushf
ror
xor
nop
cli
or
leave
jno
and
sahf
aaa
jns
sbb
inc
inc
jle
scas
scas
add
mov
sbb
dec
scas
adc
dec
jns
xchg
jae
les
add
mov
cld
and
sti
and
push
mov
cmp
dec
push
popf
mov
xor
out
shll
push
cmp
fistpl
cld
loop
hlt
mov
mov
lods
enter
pop
loope
std
arpl
popl
mov
sbb
sbb
arpl
adc
cs
popa
int3
ror
into
lea
push
dec
jp
pushf
mov
add
ret
stc
inc
les
inc
std
sbb
xchg
cwtd
test
dec
cmpsb
push
xorb
gs
fwait
xchg
mov
jne
leave
inc
and
xlat
xor
mov
adc
ds
rorb
cmpsl
push
push
stc
mov
mov
xor
jb
cld
adc
sub
in
imul
pop
dec
cmpsl
loopne
push
sub
adcb
sub
shl
js
push
push
mov
sub
or
jae
and
movsl
jle
dec
xchg
cmp
jmp
mov
out
push
or
add
test
inc
dec
bound
jmp
fiaddl
in
cmp
shl
movsl
sbb
insb
jno
xor
add
lcall
sbb
mov
cmc
cmc
lret
pop
ja
mov
mov
aam
out
add
mov
xchg
xor
jnp
ss
pop
in
enter
test
push
jle
and
leave
das
mov
cltd
cltd
mov
xchg
iret
push
inc
inc
hlt
orl
ss
jle
cld
cmp
push
cmp
icebp
mov
mov
and
sub
and
leave
add
jge
adc
leave
pop
dec
insb
loopne
xchg
into
or
in
xor
and
dec
ret
stos
add
out
mov
dec
xor
insl
les
or
xchg
mov
nop
shl
push
in
xchg
cld
jmp
mov
lret
rcrl
dec
pop
add
or
cs
push
sub
repz
cmp
xor
pop
fistpl
cld
adc
ficoml
push
pop
dec
leave
shl
dec
mov
jno
je
stos
rcl
sub
or
inc
sarl
cmp
cmp
sahf
pop
aaa
push
cmp
aas
or
daa
jno
or
dec
dec
jge
clc
xor
jns
sti
les
cmp
shl
lahf
in
mov
shrb
cmpsb
sub
xchg
jge
lret
frstor
sbb
in
imul
pusha
addr16
adc
gs
sbb
pop
int
mov
fdivl
dec
mov
loopne
rolb
add
cmpl
adc
ds
sub
popf
punpckhwd
mov
out
xor
push
jno
sti
imul
clc
and
jnp
mov
sbb
jmp
icebp
cwtl
nop
mov
jo
dec
js
aas
inc
xor
popa
jle
dec
add
sub
pop
jle
pop
pop
in
dec
adc
mov
jnp
adc
nop
sbb
scas
push
pusha
inc
xchg
xchg
jb
aaa
and
mov
pop
repz
stos
int
fldt
mov
jl
push
sbb
decb
ret
pop
add
loopne
call
and
out
mov
and
dec
mov
movsl
pop
xor
ljmp
xchg
ret
and
mov
or
dec
stc
xchg
mov
dec
adc
pop
int3
mov
aaa
pushl
push
mov
lea
daa
cli
sahf
jae
repnz
mov
bound
inc
jmp
sub
mov
mov
mov
push
xlat
sub
leave
inc
cltd
mov
call
iret
or
enter
imul
stos
scas
mov
inc
addb
xchg
mov
in
filds
nop
push
push
dec
cmp
mov
pop
pop
inc
jno
jns
dec
cld
cwtl
pop
hlt
mov
aaa
lret
roll
sti
ret
lods
popf
fwait
sbb
mov
mov
push
dec
xor
push
daa
jne
loop
dec
mov
jo
popa
rol
ss
or
addr16
xchg
dec
mov
ret
or
cmpsb
sub
jbe
mov
rcrb
jle
mov
repz
loop
je
and
xchg
fcoml
icebp
lcall
pop
stos
mov
sbb
sub
mov
sub
inc
out
into
inc
push
testl
aam
and
jns
cs
inc
cmpsb
insb
sub
outsb
iret
mov
jne
add
push
sbb
mov
jmp
adc
dec
and
movsb
popf
lea
mov
into
lods
lock
and
roll
ret
js
cmp
cmc
enter
sub
sbb
inc
push
lods
lock
aaa
jmp
adc
pusha
loope
mov
mov
jmp
add
dec
jecxz
jmp
lods
xchg
jmp
into
mov
lcall
out
add
xlat
xchg
dec
sub
mov
inc
xchg
pop
fbld
mov
or
and
xlat
ret
push
rcrb
lcall
mov
jl
xchg
or
mov
and
shlb
in
mov
dec
push
psubusb
pusha
push
adc
mov
sub
pop
fsubrl
test
jg
lret
dec
outsl
int3
mov
adc
push
mov
lods
inc
lea
mov
mov
pop
pop
push
mov
dec
xor
mov
push
das
fdivrl
daa
jl
pop
loope
jne
xor
mov
pop
mov
faddl
cld
mov
sahf
call
inc
shrl
aaa
sub
cltd
dec
leave
cmp
pop
in
inc
hlt
pop
imul
and
popa
shlb
test
std
dec
or
mov
and
clc
xlat
mov
add
jno,pt
ret
ffreep
lods
cmp
imul
jae
pop
fwait
je
inc
fdivl
fdivrp
jmp
mov
or
mov
loope
mov
jle
cmp
adc
xlat
push
jne
jne
adc
jo
test
mov
inc
lock
mov
icebp
insb
stc
push
jno
test
nop
andl
mov
nop
ss
leave
mov
jp
sbb
aas
sti
xchg
mov
push
adc
push
and
mov
cmp
js
mov
jno
pop
cmpsb
or
out
push
out
dec
xchg
mov
in
enter
and
sbb
movsb
imul
out
sub
sbb
sub
xchg
pop
xor
xchg
shl
sub
xlat
cmp
pop
rcll
push
lret
mov
cmpl
xorl
dec
outsb
jle
loop
iret
test
rorl
out
aad
cmp
ret
call
roll
pop
add
mov
pop
push
std
or
inc
cmp
or
jnp
cmpsb
es
mov
cmp
xchg
pop
and
test
xor
push
rclb
sub
xchg
in
inc
mov
xor
mov
jle
jl
lret
stos
xor
mov
cmpsb
jnp
fld
ret
insb
add
idiv
mov
sub
incb
lret
addb
xchg
mov
sbb
sub
jb
add
and
rcll
dec
aad
pop
push
jmp
scas
jecxz
in
jmp
std
push
jns
adc
or
ja
cmpsb
jo
int3
xor
mov
dec
cld
notl
addps
and
aaa
aas
push
sti
cmp
dec
mov
stos
jecxz
jne
aas
mov
stos
insl
pop
pop
iret
dec
jae
push
pop
xor
and
and
xor
loop
adc
xor
scas
fs
push
push
shl
gs
sub
popf
add
out
das
pop
orl
je
mov
aas
jb
adc
fsubp
xor
jbe
cmp
mov
xchg
lea
mov
push
bound
mov
mov
je
sub
sub
addl
add
lock
inc
mov
loope
adc
leave
or
mov
or
insb
insb
pop
cmp
mul
imul
loope
dec
xchg
push
adc
ss
cltd
mov
loope
sub
decb
dec
std
hlt
xchg
inc
mov
mov
cld
push
cli
stos
inc
shrb
hlt
sbbl
popf
in
push
dec
jecxz
insl
pushf
ret
lods
xchg
int3
or
je
jecxz
addl
imul
mov
mov
push
add
shrb
or
shll
pop
push
popa
inc
je
int3
xor
pop
push
subl
inc
pop
push
jne
dec
jno
cmp
je
push
test
xchg
or
stc
mov
or
add
test
pop
loop
orl
xchg
je
js
xchg
adc
add
and
cmpsb
push
sti
stos
popf
xchg
aas
pop
in
fildll
or
rolb
jp
and
mov
add
cmpsl
push
jnp
sbb
inc
xchg
and
jae
setp
push
mov
cmpl
mov
lret
push
addr16
scas
dec
sbb
sbb
in
cli
rcr
sub
push
rcrb
or
jbe
js
cmp
cmpsb
icebp
rcrb
dec
mov
cmpsb
movsb
in
out
hlt
cmp
in
jne
in
sahf
stos
xor
push
int
js
shlb
rcll
and
cmp
pushf
pop
mov
lock
jae
div
push
pop
fistps
stos
std
mov
mov
loopne
xor
add
test
int
iret
jns
scas
popa
inc
imul
or
repnz
push
or
xchg
loop
lods
jo
push
scas
dec
je,pn
pop
ljmp
imull
pop
or
dec
hlt
push
add
hlt
andb
inc
imul
add
adc
push
or
cmp
pusha
ret
js,pn
cmpsb
notb
cmp
cmp
push
mov
outsb
hlt
push
jns
adc
push
movl
mov
mov
ret
mov
dec
mov
adcb
ret
popl
cs
fmull
popa
and
shr
cld
aam
or
lods
popa
in
push
or
xlat
mov
cli
call
movsl
aas
or
push
lods
or
pop
jle
push
loopne
pushf
inc
cmpb
jo
int3
decb
sarb
xor
mov
dec
jg
mov
jae
xor
dec
gs
jle
fldenv
adc
push
int3
mov
fildl
adc
fdivl
out
xchg
test
clc
shlb
push
cmp
hlt
pop
aas
or
pop
outsb
inc
push
test
push
icebp
shll
ja
jne
jno
jl
out
adc
insl
ss
das
pushf
sbb
cmp
mov
adc
cmp
jo
fs
cmpsb
out
mov
cwtl
js
push
jns
cs
mov
jl
loopne
inc
push
mov
mov
pop
dec
push
pop
and
jae
sub
popa
push
xchg
sbbl
int3
push
daa
add
inc
jae
jle
sti
jae
rcr
cmp
adc
push
push
inc
rcrl
dec
imul
stos
xorl
sub
std
jle
jno
std
icebp
int3
mov
scas
ja
loop
jae
jnp
imul
inc
in
fdivs
push
out
ja
jb
mov
adc
out
in
outsl
int3
sbb
in
or
push
loopne
lret
lret
jne
pusha
mov
into
jne
test
add
mov
adc
and
or
test
nop
and
jbe
nop
jmp
mov
test
aaa
inc
lret
or
les
mov
inc
cmp
add
push
ret
push
xlat
cmp
inc
divl
adc
mov
cmp
xor
ret
or
mov
addr16
out
je
pop
xor
adc
cs
xor
in
xchg
jle
sbb
pushf
xchg
movsb
cmp
mov
out
std
add
shlb
push
sub
rolb
xor
jp
pop
mov
add
fisubrs
int
mov
and
xchg
pop
dec
lret
dec
test
in
push
sub
mov
fstpl
xchg
insb
shl
and
rcl
mov
pop
sub
dec
mov
dec
and
ds
inc
dec
mov
popa
push
pop
movsl
xchg
outsb
in
and
outsl
lahf
cmpsl
xor
insb
fwait
xor
fs
push
fstpt
test
sarl
and
xchg
mov
daa
or
push
cmp
push
xchg
test
shlb
sub
cmc
aaa
mov
addr16
and
test
mov
fxch
adc
and
pop
icebp
pop
stos
pop
cmp
gs
cwtl
add
out
sbb
outsb
fmul
sarb
jae
pop
mov
iret
in
ss
and
mov
or
inc
jnp
sbb
ss
call
icebp
test
scas
hlt
inc
imul
push
pushf
pop
jle
mov
loope
xchg
xor
lret
jmp
fsts
mov
mov
adcl
jp
popf
adc
xorl
loop
test
insl
in
fcmovb
ljmp
pushf
pop
sahf
rorl
in
movsl
adc
aaa
into
sub
jle
jb
inc
xchg
aas
stc
jb
test
adc
mov
out
push
sub
pop
xor
xchg
xor
xchg
out
xchg
sub
into
rcl
cs
in
jl
dec
lock
pop
sub
add
cmpsb
insb
push
setbe
out
pop
into
insl
mov
je
sbb
jge
test
mov
sti
out
lods
cs
in
push
pop
cwtl
pusha
mov
pop
scas
push
mov
je
add
hlt
movsl
mov
imul
mov
sti
dec
pushf
mov
jg
jo
cmp
xchg
cltd
jo
fisubrl
pop
je
push
in
sbb
gs
aam
ja
dec
inc
cmp
or
in
cwtl
idivb
jecxz
xchg
sahf
mov
jge
xor
pop
lods
loope
mov
aad
jmp
jbe
push
mov
pushf
pop
mov
mov
pop
dec
xor
inc
adc
jge
icebp
jmp
cmp
cmp
testb
cmpl
rorl
inc
mov
aad
and
mov
ds
cmp
sub
pop
outsl
xlat
xchg
cmp
mov
fildl
shrb
push
mov
xlat
adc
add
sarl
sbb
lds
xchg
repz
jo
repnz
add
adc
sbb
mov
and
daa
push
pusha
push
in
cld
xchg
imulb
dec
cmovle
cmp
adc
out
aad
inc
and
mov
dec
or
xor
lcall
cmp
adc
in
je
pop
and
or
jno
mov
movsl
jg
repnz
jno
aas
jo
cmc
fwait
push
adc
cmp
xchg
scas
fcom
rcll
xchg
adc
test
xchg
jae
mov
jmp
pop
pop
or
lcall
mov
loope
adc
cmpsl
les
insb
dec
inc
and
dec
jecxz
jg
jmp
repnz
jb
lea
xor
sbb
sbb
push
inc
push
imul
subl
push
addb
xchg
out
xlat
cwtl
js
cmpl
push
nop
and
mov
clc
loop
jge
adc
iret
sub
lock
rol
loope
fwait
into
lock
mov
jge
lret
jb
pop
lahf
lds
xchg
out
scas
xlat
inc
ja
mov
sbb
clc
test
dec
pushf
cmp
or
lea
lock
pop
adc
imul
out
test
out
fimull
sbb
cmp
ret
das
ss
push
test
pop
cmp
jnp
cmp
cli
push
or
push
insl
stc
sub
inc
pusha
sub
xor
das
lods
jle
insb
lahf
int3
xor
push
js
or
jne
push
mov
sahf
rcrl
xor
adc
ds
mov
mull
cmp
test
inc
mov
push
mov
sarb
push
jp
xchg
jge
cmp
mov
sbb
add
and
mov
decb
daa
mov
cs
in
call
jmp
into
movsb
test
dec
bound
out
sbb
jl
nop
mov
les
add
inc
out
je
shlb
dec
sub
push
out
sub
arpl
fs
cltd
push
push
subb
mov
mov
ret
and
push
xor
loope
les
dec
inc
xchg
movsl
mov
adc
push
xchg
push
dec
hlt
nop
dec
push
dec
cld
dec
jmp
cmpsl
arpl
inc
mov
add
cld
xor
test
or
mov
sub
mov
ss
or
scas
lods
inc
xor
sub
xchg
mov
push
add
scas
jmp
dec
adc
inc
cs
pop
lock
jg
or
dec
bnd
xchg
std
mov
pop
inc
mov
mov
jbe
jno
push
jbe
int3
inc
sub
outsb
outsl
dec
popl
jbe
jge
scas
push
push
addr16
mov
push
lds
fsubl
ret
aas
std
pop
fwait
mov
push
daa
fcompl
pop
xchg
cmpsl
cmp
daa
lret
call
inc
fdivs
js
fistpl
std
scas
mov
push
dec
pop
push
cs
cmpl
stos
cmp
mov
adc
icebp
jecxz
lods
push
stos
ja
dec
cmp
scas
lldt
sbb
sub
dec
fnstsw
lods
adc
subb
push
xor
xlat
sub
cwtl
shl
jecxz
pop
imul
push
cmp
in
stc
xor
lods
fistps
mov
adcl
test
iret
mov
or
inc
mov
sarb
sbb
notb
xchg
mov
lret
mov
clc
xchg
in
fstpl
sub
fnsave
cmp
mov
sub
icebp
movl
add
cld
mov
lock
popf
adc
in
adc
mov
test
loopne
push
xchg
cmp
jg
dec
leave
cmp
inc
xchg
jne
jnp
inc
outsl
mov
cltd
jns
add
repz
pop
sbb
adc
clc
or
nop
and
movsb
push
push
adc
or
xor
jae
outsb
sbb
push
clc
mov
and
push
dec
xchg
ud0
mov
jbe
data16
pop
out
aaa
sub
jnp
lock
fsubs
in
xchg
lret
or
test
out
and
test
insl
push
cmp
cmpb
inc
mov
cmpsl
fimull
iret
jl
movsb
pop
sbb
iret
scas
mov
jecxz
cmp
jne
out
das
jne
out
les
xor
inc
js
pop
sbb
or
and
negb
std
clc
hlt
xchg
rol
es
cmpsb
mov
push
cmp
sbb
fmuls
xor
orl
shr
xor
cwtl
jo
das
fcompl
mov
dec
pop
adc
loop
push
cmp
inc
mov
imul
addl
icebp
iret
jmp
sbb
push
cmp
adc
xor
icebp
iret
add
xor
sar
lahf
idivl
mov
mov
and
cmc
push
and
sahf
and
daa
and
lret
push
dec
mov
ret
mov
jnp
into
mov
sub
repnz
subl
xchg
pop
dec
sti
fistpll
nop
dec
stc
jne,pn
xchg
cmp
inc
inc
pop
in
mov
mov
hlt
fimull
xchg
lock
fimull
dec
dec
xorl
movsl
xlat
lcall
insl
out
in
lcall
jne
sub
xchg
jb
add
xor
cmp
push
sub
jmp
and
test
dec
shlb
sub
jno
mov
jl
xchg
pop
adc
fistl
or
jns
add
mov
add
or
fdivrs
cmp
and
repz
xchg
mov
addr16
test
push
fnstenv
adc
push
rcrb
xchg
ss
adc
in
sahf
cmp
jae
adc
mov
in
or
add
cmpsb
push
fldt
mov
pop
into
mov
jmp
popa
mov
movsl
xchg
mov
cltd
js
jbe
inc
jp
mov
mov
add
xchg
sub
jge
sub
mov
sbb
cmpsl
dec
pop
flds
test
leave
rcl
popa
mov
and
mov
push
pushf
jmp
inc
jp
xor
mov
iret
jl
std
sbb
out
insl
push
inc
mov
aad
loop
movsl
jecxz
shrb
pushf
dec
sbb
leave
dec
or
xor
outsl
out
dec
pop
cwtl
aas
ret
and
xchg
lock
jno
jo
cmp
push
imul
mov
pop
push
daa
xor
lods
xchg
lds
adc
push
add
adc
cmp
dec
incl
jnp
mov
lret
fptan
push
jo
decl
fidivs
or
xor
push
data16
jmp
mov
fwait
dec
inc
cmp
rorl
daa
xchg
inc
inc
and
or
pop
inc
test
idivb
in
lods
pop
mov
repz
mov
int3
test
and
lea
or
mov
jge
cmp
or
and
or
repz
in
xchg
test
sbb
jbe
and
pop
iret
push
mov
jecxz
or
shlb
sbb
push
aam
push
and
repz
out
sub
push
sub
push
adc
cli
in
xchg
inc
lcall
or
fstpt
std
ss
push
addr16
out
rcl
ret
popf
lea
sub
in
test
sbb
push
lock
adc
out
divl
push
mov
out
mull
sub
rorb
mov
cmp
ss
pop
dec
ljmp
cmp
adc
mov
xchg
adc
ds
fs
aam
mov
push
mov
mov
in
negb
cli
xchg
sbb
jl
mov
sahf
push
xor
or
sub
scas
or
adc
pop
sahf
rcrl
int3
clc
sbb
cltd
cwtl
popa
mov
adc
pop
adc
scas
movsb
insb
jns
pusha
dec
fbld
jne
ljmp
and
jmp
jp
pop
mov
xchg
mov
lock
xchg
inc
pop
xchg
jne
mov
clc
lods
lret
mov
arpl
ljmp
push
imul
jmp
push
mov
jle
jecxz
push
sbb
lea
notl
xchg
int
mov
pop
lret
lahf
mov
mov
cltd
aad
inc
jnp
inc
outsb
lahf
sub
cmp
push
push
decl
pop
out
push
jne
jne
sarl
in
rorb
rcl
lods
andb
mov
mov
pop
popf
and
and
test
subb
sbb
dec
mov
mov
or
dec
or
add
jle,pn
dec
pop
lcall
cs
fwait
lahf
test
add
lcall
mov
jb
cmpb
push
rclb
jb
data16
push
ret
scas
add
xchg
aaa
cmpsb
adc
aam
mov
xor
pop
movsb
add
fs
mov
pop
jecxz
push
fists
sahf
xchg
aam
inc
aas
es
pop
inc
adc
and
scas
cs
mov
stos
cli
sarb
xchg
imul
popf
push
xor
scas
daa
jns
idivl
test
or
sub
dec
mov
mov
inc
stos
movups
mov
jge
test
and
push
inc
push
push
add
pop
ret
mov
ljmp
sub
pop
sub
pop
aam
test
mov
sbb
int
aad
out
iret
fnsave
adc
xchg
fs
jns
mov
fsubs
jl
mov
stc
loope
cmp
loop
xchg
fstps
mov
pop
push
pop
test
push
lret
pusha
ds
push
push
sbb
xor
rcrl
add
fcoml
or
cwtl
outsl
leave
in
mov
push
and
sbb
mov
daa
loop
push
push
sub
fs
roll
daa
icebp
mov
jae
aaa
xchg
mov
mul
je
fsts
fcompl
sbb
mov
mov
push
mov
xchg
xchg
pop
mov
aaa
xchg
movsb
and
xor
ljmp
in
mov
aas
push
dec
pop
or
pop
sti
sub
jg
xlat
rcrb
xor
es
xor
imul
jecxz
cmc
xor
xchg
push
enter
or
aad
outsl
test
mov
mov
outsb
stc
fsubrs
or
jo
repz
sbb
push
sbb
pop
cmp
imul
jnp
in
mov
sbb
fistpll
ret
xlat
in
cld
nop
cli
das
cmpsb
int
gs
movb
fists
mov
mov
add
repz
inc
roll
mov
xor
mov
test
ret
sub
inc
ret
sub
loopne
and
gs
hlt
scas
and
push
loop
or
push
inc
enter
push
sub
loope
je
xchg
push
out
stos
scas
sbb
sbb
xchg
outsl
aam
mov
aad
jg
inc
outsl
push
and
repz
daa
pop
push
nop
iret
xchg
out
out
pushf
js
addl
jb
pop
int
pusha
add
js
jns
sub
jmp
fdivl
push
mov
loope
mov
xchg
lret
pop
mov
inc
mov
xchg
movsl
or
add
pop
or
mov
xlat
pop
cmpsb
add
adc
ds
cmpsb
xchg
xor
mov
push
mov
adc
lods
push
es
jo
push
loope
testb
mov
sbb
in
lock
and
lods
jecxz
sbb
and
xor
sbb
jmp
jp
mov
lahf
mov
out
lea
dec
add
test
mov
in
jl
mov
xchg
or
mov
inc
aaa
and
aad
jle
ds
fwait
jns
xchg
jb
arpl
fistl
push
and
aas
iret
dec
movb
outsb
push
test
bswap
inc
adc
xor
stos
cltd
scas
mov
gs
lahf
sbb
xor
pop
sub
mov
dec
in
scas
pop
subl
inc
push
mov
cmp
cmpsl
sbb
repz
sub
sbb
add
movsb
outsb
aas
jb
jle
mov
ret
pop
loope
push
iret
into
mov
sub
push
mov
sti
mov
ja
jg
mov
xchg
cmp
addr16
mov
arpl
ljmp
cltd
mov
cmp
mov
adc
cmp
xor
or
cmp
imul
movsb
enter
cmpl
es
fs
or
insb
jo
jnp
sbb
dec
push
test
mov
mov
push
push
fldenv
mov
inc
cmp
inc
test
mov
cmp
and
mov
into
dec
cwtl
ss
dec
inc
ds
insl
mov
mov
push
push
icebp
rcrb
cmp
cmpsb
cmc
dec
push
push
sub
cmp
dec
sbb
enter
inc
test
movsb
cmp
int3
sbb
push
fwait
push
mov
pop
shr
mov
adc
or
fcmovu
hlt
xor
sub
inc
rclb
or
add
mov
pushf
outsl
add
and
fstps
stc
sbbl
jbe
sub
mov
cmp
dec
stos
push
fs
pop
xor
shr
aas
push
and
inc
into
loop
xchg
in
or
cmp
in
out
mov
fsubl
rolb
push
jp
sub
and
in
and
sbb
jmp
pop
aam
aam
xor
out
je
aas
rclb
arpl
lea
in
push
add
push
dec
adc
xchg
adc
cmp
imul
sbb
jno
sbbb
lea
add
pop
adc
aas
sbb
xchg
sub
mov
xchg
test
ja
push
jle
std
andb
pop
inc
subb
ljmp
insl
push
cmp
out
push
insb
jb
push
les
and
lods
sub
mov
or
and
inc
dec
mov
xchg
sbb
lods
adc
int3
arpl
cltd
cmp
cmp
cld
lcall
inc
sub
shll
scas
or
mov
fisubrl
das
stos
rorl
aad
sub
xchg
cmp
jnp
ja
int
adc
dec
lea
imul
push
lcall
xor
mov
pop
mov
out
mov
jnp
add
add
loop
leave
dec
mov
arpl
add
insl
sub
dec
xchg
in
or
cmpsb
lcall
test
out
data16
add
push
arpl
push
pop
shlb
sub
mov
test
adc
xchg
push
sub
nop
push
pop
lds
mov
call
movsl
pop
pop
imul
into
outsl
lods
sbb
jb
jl
movsb
add
cltd
push
pushf
fistl
out
pusha
dec
sbb
inc
fwait
repnz
mov
insl
xchg
ss
cmp
adc
jmp
inc
inc
xor
and
lds
inc
mov
inc
jno
hlt
dec
data16
xchg
ret
or
lret
push
xchg
or
dec
mov
sahf
insl
push
outsb
xor
pop
jae
inc
into
mov
fcompl
sbb
mov
cwtd
loope
scas
or
stc
xor
fcoml
or
fs
dec
sbb
hlt
insl
add
xlat
pushf
cmc
cmp
daa
xchg
dec
daa
jmp
push
std
add
bswap
les
leave
pop
push
cli
sub
xchg
mov
and
and
outsb
sbb
out
mov
push
xor
inc
cwtl
sub
add
dec
dec
push
xor
jae
or
xchg
rcrl
std
push
add
insl
add
dec
sbb
icebp
cwtl
or
sub
inc
jns
js
sbb
dec
xchg
gs
inc
call
sahf
lods
movb
lock
in
push
push
dec
xchg
push
mov
out
mov
cmp
mov
fstpl
jno
jbe
sbb
into
mov
push
jmp
scas
xor
js
xlat
rcrl
cmp
or
dec
dec
dec
ret
cmp
xor
jae
in
mov
cld
cmp
int3
aas
mov
cwtl
add
loop
pop
notl
mov
test
int3
mov
aad
imul
sub
dec
jmp
mov
lea
pop
hlt
fldenv
mov
into
mov
cltd
stc
mov
int3
dec
xchg
cmpl
out
stos
rolb
add
push
les
imul
popf
cli
and
fs
lds
movd
outsb
push
lret
cs
sub
add
sti
ret
mov
mov
rolb
xchg
cmpb
dec
orl
loope
mov
jnp
mov
cmpsb
into
sbb
pop
in
stos
loop
cmp
push
xor
or
pop
aam
inc
or
sub
ret
fld
lahf
mov
cli
mov
jmp
ss
jbe
mov
add
mov
push
or
ror
cmpsl
mov
test
lea
xchg
cmp
stos
iret
mov
jb
inc
mov
add
jle
push
cld
lcall
lcall
rorl
in
xchg
ss
and
iret
adc
inc
inc
sbb
push
push
adc
aaa
add
lods
repnz
cmp
stc
scas
sar
scas
sub
outsb
rcrb
les
shrb
sub
enter
mov
cli
and
imul
outsl
jle
and
aaa
cmp
in
mov
imul
xor
js
or
sub
hlt
xchg
loopne
cs
popw
lea
adc
js
sarb
jo
adc
push
and
mov
rcrb
mov
enter
jns
fxch
and
add
xchg
jl
icebp
push
push
or
xor
pop
mov
arpl
dec
ficompl
das
add
mov
adc
pop
daa
outsb
mov
sub
jo
call
lods
xchg
and
lret
test
inc
ret
pusha
ja
jle
je
xor
mov
movsb
jle
mov
push
test
xor
xchg
mov
sarl
stos
leave
adc
cli
jnp
pop
push
xchg
dec
dec
in
out
mov
rcr
lret
sarl
cmpl
outsb
lods
stc
and
push
call
push
dec
push
push
push
outsl
sub
mov
adc
sbb
loope
fldl
sub
mov
inc
movsl
add
or
sbb
add
aas
dec
or
cmc
push
dec
cmpsl
cmpsb
hlt
in
xor
xchg
mov
fistps
xchg
outsl
out
sti
movsb
mov
jbe
testb
mov
scas
insl
lods
mov
fdivs
sub
mov
pop
mov
mov
xor
sbb
rcll
pop
cld
push
orl
sub
test
sub
mov
sahf
xor
sbb
imul
or
mov
movsl
out
xor
push
xchg
xchg
inc
mov
test
cmp
and
jge
mov
inc
adc
adc
adc
bound
xor
cmp
in
mulb
jp
insl
lcall
mov
xor
jbe
rorb
mov
jb
call
ret
sbb
faddl
mov
push
pop
aam
aad
pop
test
jg
lds
jae
sub
mov
div
xchg
cwtl
ret
int
jns
and
shrb
jb
xchg
adc
push
mov
pop
fwait
jae
pop
add
mov
adc
mov
lret
rcll
lahf
dec
add
sbb
jge
repz
xchg
mov
cwtl
and
mov
insb
push
push
add
and
ret
adcb
sbb
loope
or
jae
add
xorb
out
push
lret
jmp
cmp
mov
imul
push
aas
xchg
fists
sbb
push
add
hlt
js
movl
xchg
cmp
sub
xchg
push
cmp
inc
sub
mov
leave
or
jl
jne
popa
outsb
int3
inc
icebp
dec
ja
fistl
in
mov
xchg
fcoml
lret
decb
sbb
inc
sub
int
sub
clc
sbb
xchg
push
adc
mov
jb
fsubrs
or
movsl
subb
insl
mov
aaa
cmp
rclb
sbb
mov
stos
iret
cmp
mov
imul
in
mov
xor
mov
mov
fsts
into
dec
add
out
loope
jp
xchg
lahf
xor
in
inc
cmp
ljmp
and
pop
and
aad
jne
cmp
adc
test
scas
xchg
inc
mov
push
xchg
icebp
push
clc
jg
sub
lcall
in
stos
and
mov
aaa
mov
dec
out
pushf
insl
cmp
push
mov
sbb
roll
addr16
rclb
insl
add
mov
cmc
sub
adc
das
lods
ret
test
pop
out
xor
xor
push
cmp
pop
mov
mov
add
and
adc
aad
in
pop
push
mov
fcmovne
in
lods
int3
xor
xchg
inc
dec
roll
addr16
inc
sub
les
mov
movsb
pop
cld
int3
popa
pop
lcall
pushw
dec
cld
and
xchg
push
fwait
adc
imul
insb
mov
add
sub
or
sub
inc
ss
rclb
mov
cli
mov
cmpsl
sub
pop
test
movsb
jo
xor
cmp
repz
sarl
mov
add
insb
inc
fimuls
mov
inc
ja
sbb
sub
fcomi
dec
fisttps
cld
add
scas
mov
pop
les
mov
and
adcb
mov
push
sub
cmp
call
fidivs
xlat
fnstcw
shll
mov
test
int3
xor
dec
cmp
xchg
dec
call
popf
and
push
mov
and
dec
bound
cs
jo
mov
cmpsl
sar
daa
pop
push
jb
jnp
fwait
aam
mov
inc
inc
loop
dec
add
test
push
js
mov
jg
psrlw
fiaddl
cmpsl
shlb
sub
shl
incl
loopne
stos
les
shr
in
cmpb
add
test
jmp
cltd
cmpl
adc
mov
shl
jmp
cmp
movb
cltd
std
lods
stc
insb
mov
xor
mov
jne
popl
aad
nop
aad
mov
xor
add
fdivrs
es
movsb
xorb
mov
jns
lea
out
mov
nop
ret
add
mov
orb
sbb
movsl
sub
pop
bound
shlb
sti
sbb
ret
mov
stc
sarl
mov
cwtl
jge
jg
movsb
movsl
add
push
inc
repnz
dec
ficoml
sub
cld
fs
jmp
movsb
cmp
std
mov
ja
add
cmpsl
loope
jmp
mov
sub
and
cs
pop
add
xchg
fistl
nop
cltd
imul
call
pop
cmp
cli
call
sbb
popa
jmp
fwait
lret
cmp
enter
flds
addr16
shlb
in
adc
jnp
loopne
inc
loop
divb
jae
scas
mov
inc
movsb
pop
push
aad
push
cltd
js
test
cmp
pop
cli
popf
test
in
add
cwtl
sbb
dec
fs
jo
add
push
enter
cltd
cli
add
jmp
and
insl
fists
xchg
inc
and
ja
ljmp
cmpb
shr
inc
dec
mov
push
xor
aaa
bound
jle
adc
lods
and
mov
out
sub
sub
mov
add
jmp
shl
fisubl
leave
cmp
test
pop
xor
aaa
mov
adc
aad
and
aaa
shlb
lret
loopne
roll
outsl
add
sub
inc
cli
fcmovnu
cmpsb
push
jmp
mov
cmp
cli
mov
notb
and
jne
jg
loop
cmp
cmp
push
imulb
mov
pop
xchg
popa
mov
mov
adc
sub
dec
lcall
add
add
out
jp
fcmovne
xchg
into
fcomps
pushf
lods
lcall
aam
gs
iret
or
xchg
mov
pushf
loopne
or
mov
xlat
pop
lds
out
sarb
lcall
push
out
test
cld
mov
scas
insb
sub
outsl
push
adc
cmp
cmp
and
icebp
xchg
shrb
xchg
ja
mov
fsubr
ljmp
cmpsb
rol
test
fdivrl
xor
adc
and
in
xor
and
nop
inc
push
sbb
dec
insb
mov
popa
mov
lcall
je
shrb
push
mov
aad
enter
fs
mov
sbb
lods
cli
jo
and
test
lock
popf
adc
mov
in
xchg
fimull
push
adc
in
testb
out
sahf
insl
sbb
das
lret
cmp
fdivl
sub
ss
cmp
xor
rol
out
insb
mov
in
and
aam
jbe
pop
xlat
push
stc
loopne
sbb
stos
jbe
xchg
lods
movsl
adcb
mov
xchg
les
inc
inc
insl
js
inc
outsb
mov
dec
push
shll
popl
jge
jns
jbe
imulb
cmpsb
jl
notb
fwait
push
or
inc
shlb
leave
mov
leave
mov
adc
adc
and
ja
dec
std
out
rcrl
jecxz
fdivr
add
hlt
ja
mov
stos
addr16
fistl
out
sbb
mov
push
push
shrb
mov
pop
sbb
mov
cmpl
mov
bound
push
fs
mov
icebp
xchg
arpl
aad
dec
sub
mov
stos
cmpsl
pop
mov
push
pop
inc
and
loopne
pushf
mov
or
sub
push
cmp
jb
dec
and
rcrl
fdivl
pop
mov
loope
mov
daa
jnp
mov
cmp
in
aaa
pop
daa
stc
dec
lods
shrl
das
cmp
mov
js
sarb
insb
scas
cli
pop
xlat
jmp
ja
pop
jmp
adc
mov
hlt
push
sbb
insb
in
push
jge
fdivrs
cmp
xor
pop
nop
cld
or
cmp
scas
fs
push
pop
push
mov
dec
jp
cwtl
fisttps
ficompl
inc
pop
sti
push
js
sbb
cltd
lock
repz
loopne
out
mov
xchg
fsubrs
out
jl
movsb
mov
imul
stc
incl
push
lea
popf
pop
push
mov
outsb
mov
push
mov
mov
repz
out
jl
dec
mov
loopew
lcall
jmp
sub
popf
or
pop
push
test
or
lods
xchg
sub
jo
mov
xchg
lods
shll
lods
in
rcrl
lds
jae
in
loopne
xor
add
xchg
xor
out
xor
notb
insb
adc
inc
mov
sbb
add
xchg
mov
jae
mov
push
jo
xchg
dec
out
xor
lcall
int3
pop
dec
int
push
int
xchg
jae
insb
inc
cltd
and
add
stos
push
jmp
mov
adc
pop
adc
adc
iret
dec
jmp
jle
sti
pop
bndldx
and
sbb
shr
lret
mov
jb
mov
adc
aaa
movsl
cmp
sbb
aaa
lea
pop
mov
xchg
xchg
icebp
xchg
inc
cmpsl
jle
inc
adc
jne
or
adc
cmc
fbld
loope
daa
push
stos
mov
fs
push
add
cltd
ror
enter
sbb
rcl
sub
test
dec
lcall
je
popa
frstor
adcb
inc
bound
dec
nop
mov
lods
fisubrl
sar
cmp
mov
pop
movsl
std
insb
jnp
mov
sbbb
mov
mov
xchg
xchg
mov
cli
shll
ret
dec
sbb
repz
pop
ret
loope
fwait
pop
pop
mov
mov
dec
pop
in
fistpll
add
movntq
out
lods
fldenv
push
sub
mov
add
int3
xchg
pusha
ljmp
sarb
cmp
and
daa
push
sub
popf
arpl
mulb
and
mov
or
sub
fldenv
pop
pop
and
sti
insb
repnz
dec
mov
call
int3
es
insl
aas
and
mov
ficompl
shll
and
mov
jns
mov
icebp
gs
mov
add
xchg
add
aad
or
enter
mov
jle
popl
shrl
push
pop
cvtpi2ps
in
xchg
mov
jge
addr16
out
std
sub
mov
imul
add
icebp
cmp
test
dec
xorl
jne
into
push
sahf
push
mov
jnp
sti
mov
and
inc
and
pop
ror
add
and
push
mov
inc
clc
add
lahf
pusha
cmpsl
dec
or
stos
sbb
cmp
and
add
xor
in
test
fdiv
int3
mov
and
dec
stos
push
insb
in
push
mov
pop
mov
js
add
lock
mov
inc
mov
addb
in
mov
xchg
xor
jmp
xor
sub
push
rcr
sub
repnz
jge
mov
fmul
out
out
or
sub
jle
mov
add
or
pop
xchg
arpl
mov
pop
insb
scas
cld
xchg
sbb
test
popf
pop
xor
sub
push
in
lods
bound
and
es
push
jg
cmp
and
push
dec
jge
je
or
stc
adc
fs
mov
lock
sub
pop
gs
stos
xchg
xchg
sti
inc
testb
addl
into
fmul
jb
xor
pop
lcall
push
cmp
sahf
or
out
fcompl
lcall
adc
outsb
cmp
rol
cmp
pop
pop
pop
sbbb
mov
sbb
xchg
jnp
aad
adc
loopne
int3
das
jbe
je
jnp
cmpb
movsl
testb
jns
pop
test
ljmp
push
sbb
test
jl
push
loope
push
mov
xor
mulb
stos
cmp
stos
cmpb
cmc
femms
pop
fnstcw
sub
hlt
jns
out
fsubr
push
clc
fdiv
inc
lea
out
fisubs
ds
pushf
jbe
lock
lods
hlt
pop
lea
fldcw
push
xlat
push
in
jne
xchg
lahf
imul
sarb
or
xchg
loopne
and
mov
mov
sub
cmp
stos
xchg
scas
mov
xor
xchg
and
addl
jecxz
cmp
push
lock
imul
ret
and
repz
xchg
or
add
loope
xchg
mov
ret
mov
and
clc
and
sub
call
mov
lret
pop
out
inc
or
adc
lea
fcmovu
sti
add
out
adc
insl
in
leave
lret
leave
push
cmp
out
xlat
aaa
lcall
xor
out
and
sub
jbe
sbb
sbb
sarb
pop
aad
jne
test
sub
push
enter
daa
shlb
mov
aaa
pop
sub
js
stc
mov
das
out
in
push
and
mov
pusha
iret
and
inc
jge
ficoml
push
mov
or
sbb
xchg
je
mov
fwait
pop
mov
into
xorb
sbb
out
lea
adc
push
pop
mov
xchg
adc
int
data16
pop
push
inc
int
mov
jecxz
imul
mov
fadds
inc
jae
sub
jno
mov
mov
stos
pop
lds
adc
cmp
xchg
mov
arpl
bnd
lahf
pushf
ret
repz
ficomps
adc
out
stos
aaa
mov
pop
jg
mov
movsb
pop
or
jnp
cmpsb
es
cld
daa
in
test
adc
dec
push
repz
scas
xor
test
mov
push
pusha
out
pop
enter
das
and
aad
add
jo
cmpb
gs
lcall
pushf
aaa
cwtl
pop
les
in
pop
shl
add
or
jle
xchg
sub
je
and
push
sub
repz
int
je
xor
mov
into
lea
mov
push
add
sub
mov
adc
mov
leave
outsb
aas
cmp
repz
cmpsl
xchg
pop
pop
dec
lret
inc
shr
fs
adcb
jno
lds
jb
repz
dec
sbb
pop
mov
or
sub
jp
in
movsl
in
add
mov
std
jp
pop
add
pushf
lret
out
lret
pop
push
leave
jmp
cld
push
and
xchg
cmpsb
sarl
jecxz
fdivp
in
hlt
js
add
xchg
scas
push
pop
outsl
mov
mov
cli
jbe
rorl
mov
or
mov
xchg
xchg
imul
jecxz
cmp
lods
lahf
jnp
dec
fwait
mov
jl
outsl
lods
arpl
jbe
aam
shll
inc
fs
sbb
mov
xor
fimull
pop
sub
or
daa
loope
cmpb
shll
dec
or
gs
aas
push
mov
sub
testl
rcrb
xchg
out
insb
xchg
mov
sub
xchg
inc
or
jns
and
or
add
dec
fildl
fcoms
pop
push
lods
lds
sub
jle
inc
mov
and
imul
jmp
lods
icebp
sarl
pusha
pop
sahf
fmull
xchg
addr16
cmp
jne
add
ljmp
adc
jno
sbb
xchg
push
rolb
pop
adc
sbb
es
mov
push
js
push
rorl
mov
ss
popf
pop
jno
enter
icebp
adc
pushf
pop
xchg
imul
add
ret
aas
cmp
xchg
cmpsb
stos
imulb
jp
mov
ja
mov
push
mov
push
add
dec
sbb
mov
sub
das
insb
ljmp
or
stos
mov
outsl
rcrb
mov
mov
and
nop
pushf
aas
cmp
stc
cmpsb
sub
ss
pushf
push
xchg
and
dec
je
sub
fs
mov
jp
pop
aam
jl
xchg
mov
sub
mov
ret
push
sub
or
loope
dec
lret
aam
mov
adc
sbb
shll
in
push
iret
or
adc
addr16
sbb
pushf
push
cmp
pop
jnp
int3
stos
cmp
scas
sbb
notl
mov
test
mov
or
adc
or
lods
fcoms
cltd
outsb
loopne
xorl
orb
shlb
ret
push
dec
pushf
mov
sarb
dec
xchg
pop
divl
xchg
mov
xchg
scas
jne
imul
pop
icebp
lds
fcmovnu
adc
inc
or
idivb
imul
int3
insb
pusha
insl
cmpsl
js
jl
jbe
mov
push
and
jne
sbbb
rclb
push
jmp
movsl
inc
jo
outsl
test
rcl
and
mov
es
mov
push
push
mov
arpl
out
mov
cmp
jg
out
sahf
loopne
mov
xor
inc
mov
movaps
adc
sub
inc
adc
push
mov
aam
cli
mov
and
ret
sbb
aaa
outsb
jo
mov
mov
in
hlt
jge
sbb
stc
adc
repz
mov
out
das
sub
sbb
stos
push
xor
push
jae
ret
mov
sub
mov
inc
clc
imul
add
insl
pop
push
xchg
inc
inc
xor
mov
push
sbb
dec
outsl
push
or
dec
xchg
icebp
add
fwait
mov
xchg
call
or
pop
fisttps
or
jle
pop
pushf
int3
repz
mov
jno
ds
movsl
fs
push
mov
push
arpl
mov
adc
mov
lock
mov
sarb
stos
xor
pop
xchg
lods
add
out
cmp
pop
mov
imul
sub
les
loope
shl
roll
mov
push
in
sbb
adc
or
xchg
inc
outsl
lods
mov
jmp
mov
call
jg
xchg
imul
pop
mov
cmc
popa
and
shl
int3
clc
data16
dec
icebp
mov
outsb
xlat
movsl
repnz
pop
clc
xchg
xchg
nop
mov
nop
sahf
sub
cmp
dec
mov
scas
cmp
shrd
stos
js
insl
mov
add
or
mov
dec
mov
pop
xchg
inc
add
scas
push
call
cmpsl
shlb
add
gs
scas
cmp
inc
test
inc
or
fdiv
inc
mov
jns
jbe
ja
jne
lea
xchg
mov
fwait
mov
aad
shll
push
xor
xor
arpl
jno
lds
mov
test
mov
sub
add
or
mov
in
cmp
push
icebp
inc
push
or
pop
out
mov
popf
pop
dec
or
xchg
dec
pop
or
scas
and
dec
jo
jmp
xrelease
mov
dec
cmp
lea
xchg
shll
xchg
jge
jo
mov
cli
out
adcl
fisubrl
inc
mov
add
and
lods
dec
jb
push
or
mov
jb
js
dec
mov
lret
test
push
ja
sbb
cmc
int
lods
sub
xchg
test
fisubrs
lret
pop
scas
cld
nop
lock
mov
xchg
inc
and
mov
fimuls
mov
outsb
xchg
sub
insb
mov
cs
xor
jbe
sbbb
xlat
or
pop
sub
sub
cmp
in
xchg
lods
repz
addb
cmp
push
roll
adc
xor
jbe
lahf
outsl
sbb
std
inc
pmullw
in
add
pop
inc
loop
xchg
jbe
sbb
lret
je
out
dec
xchg
outsl
push
jl
xchg
popa
inc
pop
leave
push
inc
sbb
aad
inc
and
es
fldcw
ds
push
jl
loope
adc
sub
jge
stos
fcoms
xchg
jmp
jle
push
lock
jl
insb
sub
push
push
lock
aad
loope
sub
cmpsb
lods
lahf
jbe
rclb
push
lods
pushf
shlb
pop
icebp
mov
pop
xlat
pop
es
fwait
sbb
push
adc
into
and
dec
fisubl
sahf
cmp
xlat
sub
xchg
xlat
dec
data16
xchg
das
leave
flds
dec
dec
pushf
sbb
das
mov
or
outsb
mov
daa
xor
mov
icebp
ljmp
scas
or
or
lahf
aas
int3
je
das
nop
cmp
cmpsl
or
addl
push
cmc
sbb
mov
pushl
movsb
arpl
lods
int3
cmpsb
imul
in
sbb
sub
aam
mov
ret
or
js
jg
and
sbb
mov
orb
or
xor
dec
lcall
fcomp
lcall
nop
mov
sar
std
mov
pop
fnstcw
push
xchg
push
hlt
arpl
fisttpll
iret
add
lret
add
call
mov
out
shll
ffreep
xchg
je
cs
inc
stos
mov
push
mov
das
loope
push
loope
test
sarb
fadds
adc
xchg
aam
cltd
xchg
jl
mov
roll
mov
rcll
lret
mov
sub
cmp
daa
add
or
inc
mov
xchg
mov
in
xchg
jecxz
pop
rcrl
outsw
je
mov
xlat
fsubr
pop
sbb
arpl
xchg
pop
in
cmp
mov
or
push
sbbb
cmp
imul
pop
mov
push
aaa
inc
fs
xchg
leave
add
js
sub
insb
pushf
mov
mov
das
call
mov
mov
cmpsl
mov
push
mov
outsl
fwait
add
popf
cmp
adc
test
dec
pusha
stos
shll
popf
pop
out
xchg
cmp
aam
jo
pop
sub
test
xor
sub
xor
nop
adc
inc
cmc
cs
outsl
sub
fldcw
or
fsubs
out
cmp
es
inc
loope
adc
mov
je
mov
fpatan
mov
sub
je
xchg
cmpsl
gs
jo
data16
push
lods
call
iret
push
push
in
ds
push
xchg
cmpsb
cmp
cld
lods
repnz
mov
das
or
fwait
pop
pop
sub
or
push
xor
pop
xchg
jnp
push
mov
push
sbb
xchg
in
and
adc
cmc
test
or
sub
loop
fdivl
out
repnz
mov
jns
and
xchg
mov
ffree
out
xchg
sti
xor
fdivrl
dec
cmp
hlt
cmpsb
gs
mov
addr16
aas
mov
das
daa
outsb
jae
sbb
pop
dec
add
pushf
add
icebp
pop
pop
mov
popa
and
cmpsl
mov
cmp
roll
fisttps
mov
sub
dec
daa
jnp
xlat
sbb
inc
repz
cwtl
inc
adc
sti
arpl
cmpsl
or
pusha
jo
cmc
ljmp
mov
xchg
call
aaa
push
xchg
aad
in
inc
mov
and
icebp
out
adc
inc
mov
inc
daa
mov
std
push
mov
adc
inc
out
loopne
std
rcrb
stc
stos
mov
testl
mov
es
inc
popf
mov
test
sbb
icebp
sbb
xchg
jb
xchg
xor
inc
cmc
aad
add
pusha
xor
and
jne
ss
repnz
push
pop
shll
mov
lahf
orb
mov
or
lret
in
or
in
sub
movsb
xchg
daa
clc
or
mov
movsl
inc
int
out
repnz
in
and
int3
cs
sub
ja
mov
rcll
xor
sub
clc
jnp
cld
push
pushl
mov
sub
cmp
adc
mov
loop
xor
pop
mov
jae
call
cmpsb
lcall
out
movb
pop
fistl
outsl
push
leave
jo
call
or
scas
cmc
sbb
inc
mov
pop
push
mov
adc
ret
pop
daa
fs
jp
in
dec
icebp
adc
stc
lret
mov
add
sbb
in
and
or
push
push
mov
adc
dec
sub
scas
loopne
dec
inc
mov
scas
sub
adc
mov
dec
inc
hlt
dec
xchg
inc
mov
cmp
mov
push
cmp
sub
out
mov
leave
outsl
add
fmul
xchg
jp
mov
int
fldt
jae
fidivrl
scas
inc
sbb
mov
outsb
fwait
int
mov
add
xchg
fmull
push
dec
jnp
rcl
mov
mov
gs
fidivrs
addb
movsl
pop
les
test
jno
rcl
and
shlb
enter
sbbl
inc
mov
dec
shrb
lods
pop
push
sarb
nop
xor
jno
mov
jne,pt
cmp
imul
pusha
enter
sbb
test
stos
mov
xor
jl
and
fbstp
in
adc
dec
mov
mov
jp
push
and
jg
fiaddl
jno
xchg
adc
dec
int
out
fsubrl
push
inc
nopl
xor
push
repnz
push
lods
and
mov
cmpxchg
or
jbe
lods
popa
stos
cmpl
push
and
sahf
mov
or
arpl
pop
popf
adc
add
add
cmp
aaa
mov
aam
js
add
adc
cmp
pop
outsb
pop
or
aad
jecxz
cmpsl
test
pop
daa
sbb
dec
mov
sbb
lahf
stos
scas
jae
mov
es
sub
scas
push
and
bound
mov
push
bound
pop
xor
pushl
sub
fistps
jmp
mov
outsl
sub
iret
pop
out
mov
mov
lds
sti
movsl
or
das
cli
pop
sbb
loope
iret
cmp
in
sti
insl
xchg
jnp
inc
movsb
adc
jp
push
test
repnz
stos
lods
and
push
cld
mov
rcrb
cmpsb
add
adcl
xchg
iret
cmp
das
push
std
mov
mov
adc
cmp
movsl
sbb
or
mov
pop
insl
mov
icebp
adc
push
jno
jecxz
sub
cmpsb
data16
dec
cmp
rol
mov
cld
inc
pop
aam
add
adc
and
jmp
mov
xlat
jl
sahf
inc
fistpl
push
arpl
stc
movsl
and
jl
sti
dec
sub
test
sub
getsec
dec
lds
cmp
sub
lret
stc
dec
mov
int3
repnz
mov
cmp
mov
mov
push
in
adc
mov
pop
dec
mov
xlat
sbb
xchg
jmp
pop
or
fwait
int
cwtl
iret
fnstenv
addr16
adc
pop
cmp
mov
jnp
xchg
mov
dec
xchg
rorl
and
jmp
pusha
clc
cmc
es
adc
push
pop
ret
and
xchg
pop
xor
pop
sahf
clc
dec
push
shrb
push
push
xor
jecxz
dec
gs
int3
sahf
inc
cmp
push
or
lods
enter
iret
dec
dec
dec
test
es
mov
sbbb
dec
mov
xor
dec
jmp
inc
dec
in
lret
into
jl
ds
fbld
ret
in
mov
xchg
mov
mov
adc
cmp
arpl
lock
cmc
cmp
sbb
pusha
add
imul
sbb
out
jmp
popf
xlat
sbb
sub
pop
repnz
and
cmp
xor
dec
lret
and
addb
mov
xor
ljmp
out
sbb
and
bound
push
jbe
aad
les
ss
call
push
fs
fdivr
xchg
aas
and
mov
je
mov
lcall
xor
gs
lods
cwtl
cmc
dec
out
cmpsb
movsb
and
out
mov
pop
out
jo
jl
xor
xchg
loopne
stos
mov
bound
adc
mov
add
xor
data16
das
cld
je
faddl
mov
pop
cmp
push
pop
popa
and
movsb
and
pop
sbb
add
icebp
lea
add
ja
xor
lods
aad
mov
mov
pop
add
mov
push
in
or
add
sbb
into
aam
sahf
andb
fisubrs
popf
pop
aam
adcl
mov
sarl
mov
pop
out
push
and
jbe
fsub
mov
mov
pop
jns
repz
sub
mov
lcall
jmp
test
xor
inc
jecxz
nop
lret
jae
jnp
mov
xorl
xor
cwtl
lods
test
xchg
clc
mov
scas
xor
mov
mov
add
test
lds
jb
jg
aam
adc
fsubl
sbb
inc
push
push
xorl
inc
cmc
mov
and
mov
sub
xor
addr16
andl
push
cmp
lock
stos
mov
mov
mov
stc
push
xchg
fisttpl
out
jo
lea
dec
stos
cli
dec
aam
cmp
fsub
mov
inc
push
iret
mov
mov
lret
popf
addr16
add
xor
xlat
mov
ret
mov
out
loopne
in
popf
stos
fwait
mov
cld
inc
pusha
outsl
and
sbb
or
mov
pop
push
jno
fnstenv
repz
int
mov
mov
adcb
arpl
call
inc
add
imul
or
pushf
sar
pop
add
sub
add
daa
lds
andb
fildll
lods
xchg
lods
xor
sbb
xchg
sub
and
push
orl
jge
in
or
xorl
rcll
stos
inc
daa
push
aaa
adc
in
imul
mov
jmp
jg
mov
out
mov
mov
ret
out
movsl
stos
and
lea
into
dec
cmp
gs
inc
dec
mov
shll
and
movsl
out
in
jp
and
mov
pop
outsl
sub
imul
lret
cmp
loopne
dec
inc
fsubs
repnz
cwtl
std
sbb
mov
sub
cs
subb
pop
pop
sub
inc
push
pop
jo
inc
push
xor
or
inc
pusha
arpl
scas
jecxz
test
ja
push
addr16
into
test
fiaddl
cmp
std
inc
shll
fisubl
outsb
lods
cmp
push
and
ficompl
insb
push
or
ljmp
xor
scas
pop
mov
jbe
push
jmp
push
cli
sub
fwait
rclb
xchg
pop
push
adc
push
inc
outsb
aam
mov
cmc
stos
mov
dec
xor
sub
sub
jg
pushf
jl
dec
add
cwtl
fiadds
mov
lods
xor
movsl
jmp
push
xchg
mov
popa
enter
js
jl
into
ds
and
mov
or
push
repnz
repz
jp
pop
mov
inc
sbb
enter
pushf
xchg
push
es
rclb
push
sbb
push
aam
and
or
popl
jnp
enter
shl
mov
mov
push
mov
xlat
mov
push
cli
sbb
pop
add
mov
pusha
jne
inc
mov
inc
add
sub
repz
inc
inc
cmp
pop
xchg
ret
mov
xchg
pop
inc
orb
cld
mov
out
cwtl
scas
cmp
inc
cmp
sbb
shll
dec
or
mov
je
pop
jle
adc
xchg
scas
mov
lea
sbb
aad
cld
call
pop
mov
xor
and
xchg
xlat
pop
popf
sbb
pushf
pop
dec
or
hlt
mov
mov
or
aam
lret
xlat
pop
or
jns
jmp
jbe
mov
in
popf
sub
xlat
sub
pop
inc
bound
add
sbb
add
push
cwtl
js
ret
adc
fxch
mov
push
pop
xor
add
stc
flds
fistl
cmpsb
inc
push
jo
js
and
ret
mov
fiaddl
cwtl
cltd
std
incl
ret
xor
stos
div
pop
add
rolb
or
adc
inc
outsl
add
cmp
ss
cmp
mov
inc
jecxz
pusha
andl
sbb
mov
aas
mov
pushf
sub
cmpsb
pop
mov
or
lret
mov
bound
jge
add
xor
bound
test
lods
and
pushf
cmpsb
movsl
pop
mov
cmpsl
or
cwtl
adc
push
cmp
inc
xchg
or
pop
aaa
xor
adc
jge
ss
mov
imul
int
loop
pop
jno
enter
cmp
dec
cmp
jo
pop
dec
add
adcb
ret
pop
popf
ret
arpl
cmp
addr16
mov
xor
pop
addr16
pop
add
fldcw
jecxz
jge
cmp
addb
aaa
xor
mov
and
lea
sub
sbb
loop
cmpsb
jmp
cmp
cmp
daa
jbe
inc
mov
loope
pop
es
and
scas
cs
mov
mov
aam
inc
mov
add
gs
and
mov
out
inc
push
fadds
dec
fdiv
mov
pop
mov
mov
sbb
fwait
out
divl
insb
loop
push
ret
roll
loop
adc
ds
mov
loop
mov
mov
outsb
or
mov
mov
data16
rolb
les
ret
jbe
sbb
xor
insl
adc
in
cli
mov
in
in
test
aaa
mov
xor
jecxz
mov
xchg
lcall
cli
and
sti
cwtl
ret
aas
xchg
and
xchg
int3
mov
jp
fcoms
daa
pop
jge
inc
cmpsb
fcoms
shll
push
fldenv
int
das
push
sahf
push
adc
or
test
and
mov
sub
mov
mov
scas
daa
cli
xchg
lds
cmpsb
add
stos
mov
dec
and
xlat
shl
push
or
popa
adc
sbb
xor
mov
ja
and
call
out
push
lcall
lds
push
jbe
test
stos
mov
mov
rclb
test
jnp
int3
push
and
fwait
cmp
xor
sub
add
adc
loopne
ja
jmp
add
lods
mov
das
mov
in
shll
shl
jmp
test
push
sbb
mov
dec
jmp
decl
pop
dec
in
cwtl
roll
pop
cmp
cmp
xchg
push
sub
and
cld
xchg
imul
inc
or
lahf
adc
ljmp
or
adc
jl
gs
dec
pop
pop
sbb
push
mov
cmp
mov
or
jecxz
or
dec
ret
dec
jbe
xchg
pop
outsl
xchg
mov
shrb
mov
aam
mov
lods
enter
jns
push
fldenv
xor
fists
add
sbb
sub
xchg
lea
outsb
lods
cmpsb
xchg
jge
add
or
ret
sbb
cmp
sub
nop
data16
cmpsl
sub
lcall
push
or
aad
pop
jae
mov
jns
cmp
mov
in
imul
jns
dec
add
xor
icebp
in
dec
or
xor
and
mov
xchg
sbb
mov
test
mov
or
dec
dec
add
xchg
push
and
xor
xchg
loopne
cld
inc
push
test
movsl
push
aas
pop
mov
xchg
dec
fs
jp
push
jmp
dec
sub
and
rcll
xor
ror
sub
mov
jg
mov
xchg
and
imul
insl
subb
dec
adc
cs
inc
dec
rcrl
enter
shr
and
mov
lds
fisubrl
shl
loop
loopne
mov
adc
fnstsw
aas
dec
push
cltd
adcb
scas
testb
push
push
fsub
rclb
dec
cmp
pop
dec
lods
ficoms
inc
pusha
add
inc
sub
lret
lock
jmp
mov
dec
aaa
ja
aas
rcrb
pop
movsb
shl
mov
enter
sub
adc
pop
icebp
adc
int3
je
int
xor
scas
negl
xchg
pop
sub
mov
pop
mov
jo
push
fnstsw
lds
or
mov
cwtl
sub
pop
sub
sbb
and
mov
mov
lods
imul
lds
xchg
dec
imul
push
or
or
out
jl
jnp
sbb
mov
test
mov
xchg
es
lods
mov
adc
fmuls
mov
jnp
pop
xchg
not
test
fdivs
aaa
adc
hlt
mov
int3
mov
dec
call
shr
pusha
scas
testl
xchg
lahf
sub
inc
add
ljmp
cmpsl
inc
push
jae
mov
mov
cmpsb
add
mov
scas
incb
pop
shlb
xchg
xchg
cmpsb
sub
sbb
adc
fsts
loop
test
outsb
and
jae
inc
xlat
das
js
fsubrs
pop
mov
rclb
cmpsb
mov
pop
pop
ficoml
stos
push
jbe
add
aad
ret
mov
jp
out
push
sub
repnz
icebp
mov
repz
pop
loop
sub
pop
lds
roll
sub
and
ret
cmpsl
jne
ret
fwait
sub
outsb
xchg
addr16
xchg
cmp
nop
cmp
push
or
push
and
pop
xlat
mov
mov
xchg
mov
mov
negb
jnp
in
rclb
test
mov
pop
mov
mov
stos
adc
push
std
fiadds
into
dec
fwait
aam
adcl
loopne
ret
dec
mov
pop
cwtl
mov
mov
xor
dec
ja
xchg
push
sbb
pop
jns
xor
sub
ds
or
inc
sbb
inc
loope
divl
gs
popf
out
xchg
pop
push
std
dec
add
adc
testl
dec
loopne
push
imul
xchg
inc
jae
jne
xor
mov
sbb
inc
mov
sub
movb
mov
sub
enter
pop
xchg
std
popf
int
jns
pop
pop
cmp
fwait
out
lods
movsb
dec
loope
lret
and
pop
or
adc
push
popa
lods
int3
test
mov
lods
xor
lret
jle
sbb
mov
jae
add
js
cmpsl
icebp
inc
xor
cmp
cld
das
jns
and
scas
ret
paddsb
pop
cmp
mov
out
cmp
lret
lahf
dec
ja
insb
pop
andb
fs
sbb
out
cmp
jge
and
push
inc
xchg
inc
cli
clc
lods
int
dec
or
cmp
push
stos
aaa
inc
mov
inc
dec
push
dec
aam
lds
and
dec
aas
pop
and
jno
mov
mov
sbb
nop
add
xchg
ja
sti
in
out
out
dec
aad
les
xchg
mov
mov
mov
cmp
loope
push
loop
sbb
sti
sub
fcomps
inc
int3
mov
lock
into
insl
cmpsb
lock
add
mov
pop
mov
inc
sbb
jecxz
fnstcw
scas
or
int3
jo
clc
and
sub
fsub
dec
add
and
xchg
lahf
adc
int3
std
inc
jae
pop
or
mov
mov
fwait
popf
push
mov
dec
fbld
fiadds
repnz
push
fwait
dec
std
out
pop
xrelease
cmp
test
daa
or
filds
int3
addl
out
rclb
push
fs
mov
in
dec
jo
rolb
stos
xor
pop
outsl
add
cmp
cmp
das
cs
sahf
push
filds
call
mov
sahf
ds
dec
and
adc
push
pop
xchg
or
sub
push
jp
fmuls
test
sub
push
push
xor
push
xchg
loopne
sbb
bound
loope
push
cmp
std
jp
test
add
sahf
in
jl
pop
sub
test
and
mov
dec
mov
cltd
mov
mov
jnp,pt
push
enter
pop
jnp
jo
adc
inc
arpl
lcall
outsl
add
mov
cmp
adc
adc
ret
movsl
pop
insb
popa
and
push
push
fldcw
rcr
sbb
lock
popa
clc
fdiv
mov
xor
into
xchg
icebp
in
mov
mov
push
adc
push
iret
shl
xchg
sarl
cltd
dec
sub
or
popa
test
lds
mov
sti
sar
lret
pop
push
mov
adc
fistpll
andl
xchg
pop
inc
cltd
or
push
dec
jae
jecxz
ja
icebp
popa
repnz
dec
cmp
inc
bound
xchg
mov
aas
sub
iret
cmp
or
xchg
jae
jne
jg
ficoml
adc
das
in
or
outsl
cmovbe
cmpb
mov
sub
jmp
jp
adc
cmp
jmp
push
add
lret
jae
insb
lods
in
pop
sub
pushf
and
jns
dec
jo
lahf
stc
jp
sbb
lret
mov
and
fnstcw
mov
aas
test
sbb
cltd
or
in
daa
mov
movsl
shrd
dec
jge
mov
xor
dec
mov
int3
cmc
push
adc
sbb
lods
pop
ljmp
jge
in
sbb
stc
jp
pushf
add
mov
sub
mov
jmp
sahf
or
sub
cwtl
adc
andl
int
xchg
jmp
stos
jp
outsl
jae
dec
sub
into
and
jo
bound
pop
and
outsl
jg
pop
inc
rorb
or
out
mov
dec
push
mov
add
adcl
or
lods
add
sqrtps
pop
push
fldcw
xor
adc
ljmp
xor
popa
pop
jns
push
adc
popa
push
pop
das
push
push
jb
push
mov
jmp
rcll
lds
cmp
inc
jp
jne
iret
clc
xchg
pop
imul
mov
nopl
sub
insb
pop
push
in
inc
mov
jl
subb
shrd
jno
mov
mov
pop
inc
lods
mov
dec
pop
repz
cli
shrb
dec
fwait
push
or
xchg
push
fstpl
out
lock
mov
enter
popa
cmp
mov
aas
inc
ds
popf
shlb
popf
popa
scas
dec
jp,pn
cmc
test
jne
adc
hlt
in
xchg
ficoml
in
mov
lret
bound
fnstcw
jge
or
mov
divb
sub
and
hlt
loopne
mov
ljmp
push
inc
jl
das
repnz
mov
pop
jle
jmp
aas
in
jo
dec
pusha
popa
add
popa
sbb
enter
xor
mov
out
shr
jae
out
add
add
and
mov
or
movsl
jo
fcomip
cmp
aas
mov
and
into
imul
or
movsl
sarb
les
push
xor
mov
cmc
cmc
mov
repz
into
mov
xchg
mov
outsl
mov
mov
or
mov
stos
pop
fistpll
mov
mov
mov
inc
sub
inc
int3
xchg
or
adc
and
or
xor
mov
in
bound
sub
mov
lods
jns
sbb
or
sub
push
sub
inc
mov
and
mov
xchg
andl
or
cmc
pop
cmp
adc
push
bound
push
xor
mov
dec
pop
ret
pop
xor
lea
ret
push
jl
into
jo
lea
in
adc
popf
cmp
scas
sub
fstp
sbb
out
sar
enter
mov
das
repz
int
in
cmp
adc
hlt
test
daa
je
add
inc
xchg
out
xchg
cmp
xchg
jae
mov
xchg
cmp
pop
pop
xchg
mov
cmp
mov
aam
xlat
cltd
leave
jg
in
outsl
pop
or
sbb
ret
push
pusha
js
mov
andl
fidivs
into
mov
or
scas
add
sbb
sbb
dec
xchg
lods
in
and
sub
xor
test
jp
add
fwait
xchg
cld
mov
aad
ret
les
int
fisubs
jmp
jnp
insl
xor
fimull
xchg
add
nop
pusha
in
aas
sub
mov
movsl
mov
add
pop
rorl
ficompl
leave
fimull
push
imul
mov
es
mov
pusha
int3
cmp
negb
fwait
push
iret
sbb
mov
mov
mov
in
ficomps
mov
push
or
push
add
xchg
inc
imul
mov
xor
mov
mov
fidivs
lret
insb
stos
jnp
pop
cld
or
mov
mov
cmp
mov
insb
add
stos
add
js
sub
pop
jne
js
pop
inc
sub
scas
pop
das
in
iret
arpl
sub
int3
add
mov
and
inc
xor
into
es
sbb
jno
sub
insl
dec
mov
es
mov
nop
in
test
sahf
mov
pop
mov
and
push
push
enter
adc
shlb
dec
cmp
jmp
mov
jo
mov
lods
xchg
loopne
push
outsl
je
mov
inc
roll
fsubr
xor
cmpsb
pop
clc
dec
push
add
adc
out
gs
pop
out
inc
js
loop
dec
andb
fisubs
adc
lcall
repz
dec
push
sbb
es
subl
repnz
mov
jg
sti
adcl
imul
lock
jmp
cmp
push
pop
es
mov
mov
outsb
mov
std
mov
nop
push
cmp
mov
cltd
lret
and
outsb
mov
mov
je
mov
out
mov
imul
xor
mov
faddl
in
das
jnp
add
aad
pop
add
bound
pop
imul
js
iret
leave
push
mov
lds
ds
mov
dec
daa
enter
stos
lods
sub
std
imul
pop
aas
std
xor
cld
scas
scas
repz
push
sub
add
mov
inc
sub
sbb
sbb
popa
cmp
mov
jo
mov
inc
in
movl
addr16
mov
test
popa
ss
pop
mov
in
push
mov
adc
mov
rcr
data16
fsubr
sbb
mov
dec
push
inc
pop
xchg
sub
dec
dec
sub
mov
outsb
test
ds
jl
aam
dec
mov
rorb
xchg
cmpsb
clc
xchg
cli
lahf
ret
cmp
inc
inc
xor
lea
aaa
insb
adc
test
aaa
pop
add
sbb
adc
fisubs
and
dec
or
add
cmp
dec
xlat
mov
xor
xor
jno
lods
jmp
lret
jno
pushf
out
outsl
insl
lods
ret
add
aad
or
adc
call
inc
xchg
lods
lea
xchg
xorl
divl
outsb
loope
dec
or
mov
mov
xchg
sbb
pop
dec
jnp
lea
push
orl
jno
jnp
or
mov
mov
pop
test
mov
stc
int3
push
xchg
push
jecxz
push
sub
inc
aaa
and
pop
cmpsl
mov
push
mov
nop
loop
jmp
dec
adc
pop
xor
rorb
ljmp
insb
jg
push
mov
inc
out
jle
push
xchg
lods
sub
in
push
cld
shll
scas
dec
adc
push
and
aaa
rorl
mov
add
adc
fs
lea
mov
xor
loopne
mov
hlt
push
pop
inc
pusha
xchg
sahf
sub
sub
sub
jns
mov
cmp
jns
js
dec
add
adcb
mov
sbb
fildl
cmp
js
data16
mov
push
xor
in
pop
bound
ljmp
fcoml
dec
jne
shr
and
out
inc
push
leave
addl
xchg
rorl
fsubrs
pop
push
stos
inc
xchg
sahf
insb
xchg
mov
insl
adc
jae
insb
add
js
enter
sbb
stc
stos
push
and
les
ret
out
push
push
dec
xchg
push
push
lods
test
out
ficompl
mov
cli
out
or
or
add
mov
int3
ret
pop
pop
cli
gs
mov
in
outsl
cmpsb
sbb
outsl
adc
int3
je
sub
orl
fistpl
fcmove
push
addl
add
enter
pop
int3
icebp
fsubrl
jl
mov
ss
popa
mov
ret
std
daa
xchg
loopne
js
jmp
jo
push
add
push
popf
sbb
push
adc
dec
loope
push
push
jp
jg
gs
cmp
cmp
add
decl
loop
js
data16
in
mov
pop
popa
pop
popf
jae
pop
xor
mov
mov
jo
and
mov
repnz
sbb
adc
cmp
add
in
js
xor
mov
cmpsb
aam
lret
in
cmp
xchg
in
in
add
mov
mov
std
fadds
aam
cltd
lea
or
imul
popa
cmp
popa
ret
iret
cmp
jg
adc
das
push
xlat
out
loop
pop
xchg
inc
or
stc
movsl
or
dec
adc
sti
xchg
add
xchg
adc
inc
add
ja
repz
clc
push
push
test
pop
aas
pop
gs
repnz
push
pop
cmp
aaa
push
push
dec
pop
mov
loopne
xor
or
cmpsb
sarl
cmpsb
xchg
jp
push
js
jecxz
sbb
dec
stos
mov
sub
es
dec
mov
mov
fadd
mov
push
push
pop
stc
and
out
sahf
mov
scas
sahf
or
insl
sub
cmp
xor
inc
mov
insb
jle
fldenv
clc
dec
xor
fadds
add
jmp
cltd
rorb
or
mov
movsb
or
pop
xchg
scas
aas
les
cmp
insb
addr16
hlt
outsl
jp
adc
push
cmpl
test
stc
cwtl
sub
loope
call
repz
divb
stc
pop
push
je
movb
pop
cmp
dec
inc
aad
sbb
aam
dec
popa
cmp
pusha
cmc
push
fstpt
and
push
and
cltd
fimuls
jne
int3
mov
jae
iret
pop
cmc
jp
ds
push
push
cmpl
mov
sub
in
and
cmp
push
and
fildll
mov
mov
fistpll
in
inc
sbb
jg
insl
pop
mov
sbb
jmp
in
inc
dec
or
push
test
outsb
push
scas
inc
jmp
adc
inc
enter
outsl
push
and
mov
inc
mov
mov
ja
pop
dec
xorb
xchg
enter
and
push
xchg
fisttpll
sbbl
imulb
std
nop
sbb
and
dec
sarl
add
sub
mov
mov
push
pop
pop
das
mov
sbb
clc
fdivs
lods
mov
nop
xchg
sub
adc
fadds
add
hlt
mov
iret
sbb
push
sub
push
frstor
out
std
and
orb
pop
and
pop
pop
mov
adc
inc
shll
mov
pop
push
std
dec
xor
sti
test
or
lock
aaa
imul
pop
or
fcomps
js
cmp
jmp
iret
dec
add
adc
cmp
popf
push
outsl
ljmp
ja
sub
not
fcompl
adc
ja
mov
imul
xchg
iret
std
mov
push
mov
xchg
call
movsl
fdivs
mov
mov
sarl
inc
ja
bound
push
flds
ljmp
insl
or
add
mov
shrl
into
jecxz
jns
enter
into
xchg
stc
mov
fdivrl
into
xchg
jmp
dec
loopne
cltd
stos
shlb
sahf
mov
lret
push
xchg
xlat
xor
ds
adcb
aaa
xor
movsl
jns
fmull
dec
xchg
lods
xchg
pop
jmp
sbb
sub
fstl
and
fld
push
sbb
imul
push
or
pop
outsl
cmpsl
je
aam
sbb
add
xchg
data16
inc
sbb
inc
aaa
pop
push
shrb
movsl
mov
cmp
mov
fsubl
jp
sub
adc
xchg
out
mov
jb
and
jb
inc
popa
and
popa
mov
mov
sub
mov
stc
and
xchg
daa
lea
add
push
outsb
sub
jno
ja
lret
les
jbe
in
mulb
out
cli
and
iret
pop
lods
nop
jns
mov
fdivrs
dec
mov
sbb
push
mov
push
mov
orl
xchg
stos
push
cmp
inc
fs
inc
test
cmp
inc
mov
jle
and
cmp
cmp
rcrl
js
mov
cmp
lcall
pop
subl
push
lret
leave
mov
sbb
stos
mov
jmp
js
jno
lea
enter
and
fldenv
pop
movsb
xchg
ja
test
sbb
iret
dec
add
sbb
push
or
sbb
lahf
mov
dec
cmp
das
call
dec
push
mov
jnp
bound
pop
mov
mov
fistpl
push
sbb
lea
pop
pop
and
cwtl
lahf
xor
and
ds
subb
aad
or
pusha
mulb
mov
ja
and
xor
rolb
pop
inc
xor
sub
movsb
xor
xor
mov
mov
inc
out
cmpl
and
clc
mov
or
jg
scas
pop
js
test
xorl
je
push
fucomi
mov
ret
ja
cmp
leave
inc
test
cmp
scas
lcall
cmp
daa
out
repnz
stos
pop
adc
adc
xchg
xor
in
xor
cltd
xchg
or
jp
push
sub
dec
jle
push
xor
ja
sub
xchg
test
in
add
movsl
inc
jl
pushf
cli
inc
inc
sbb
mov
lock
pop
dec
mov
leave
sub
ljmp
sahf
popa
dec
test
out
dec
imul
xchg
mov
enter
lods
repz
xchg
cmc
inc
jbe
subl
push
mov
daa
in
aad
sbb
popf
jmp
sub
in
imul
loop
mov
add
leave
cmp
movsl
sbb
div
mov
ljmp
fcoml
mov
aaa
das
add
mov
test
pop
jns
out
push
push
lods
test
jb
mov
lea
adc
dec
adc
out
mov
out
push
pop
inc
lret
aaa
js
lea
pop
gs
push
leave
add
lret
lods
jns
add
jo
or
subl
cwtl
add
mov
jnp
xchg
adc
fldcw
and
jle
xchg
aam
ret
inc
push
js
push
pushf
fs
in
scas
incb
vandpd
push
dec
movsb
js
sbb
ljmp
dec
or
data16
hlt
scas
xchg
ror
js
out
cmp
add
cmpb
push
shl
jb
mov
or
jle
in
xchg
and
adc
add
sahf
shll
bound
jo
pop
xchg
pop
mov
sbb
fdivrp
hlt
or
divb
dec
aad
das
movsl
ficomps
xor
mov
stc
push
rorb
test
stc
cld
push
pop
sub
ljmp
cmp
ret
arpl
jmp
lock
sbb
std
fwait
push
jb
imul
lods
push
xchg
int3
or
fadd
outsb
xchg
mov
in
imull
or
jae
std
xor
loop
lea
cmp
or
dec
or
movl
push
jl
notl
bound
leave
sbb
lret
xchg
push
out
jo
jp
out
mov
jo
adc
jp
or
sarl
pop
ret
push
push
push
gs
cmp
sub
push
fadd
imul
lret
sbb
popa
or
das
jecxz
inc
mov
mov
sub
fsubrl
out
daa
imul
xlat
cmp
insb
lods
roll
out
add
mov
mov
ja
ljmp
sti
inc
ret
fldt
xchg
and
pop
xor
arpl
sbb
adc
sysret
divl
popf
mov
push
cli
mov
sbb
sbb
cmpsb
jae
pop
inc
dec
imul
jp
or
and
loope
xor
dec
xchg
adc
xchg
xor
mov
scas
clc
clc
or
leave
js
inc
lock
std
in
sub
adc
jge
mov
ret
inc
adc
or
mov
jno
mov
sbb
push
jge
test
sbb
repnz
sbb
push
cmp
int
push
xchg
xchg
mov
pop
roll
sbb
push
jae
jo
movsl
jae
sub
sbb
mov
mov
fcoml
xor
mov
mov
faddl
inc
sbb
and
xabort
push
fldl
mov
clc
mov
pop
scas
ds
xchg
out
in
jp
fldl
pusha
dec
ret
dec
fcomps
aad
cltd
mov
xor
aad
mov
insb
stos
pop
sub
push
push
stc
push
jmp
jae
jge
shl
std
out
pop
outsl
in
push
call
sbb
scas
lar
mov
jo
loop
jecxz
scas
sti
adc
pop
cmpsb
cmpsb
dec
mov
clc
xorl
jmp
mov
mov
ljmp
int
das
push
xchg
pop
cmp
sub
hlt
xchg
leave
fdivl
loop
pop
ds
cld
cmp
mov
out
insb
dec
push
in
mov
mov
push
std
out
or
pop
movsb
xchg
xchg
pop
and
add
cmp
icebp
jns
dec
in
stos
jbe
pushf
cld
loopne
inc
xor
mov
mov
stos
mov
xchg
les
mov
cwtl
sbb
out
or
and
or
sub
sub
adc
pop
adc
pop
aaa
lahf
fmuls
pop
inc
pop
xchg
popf
in
dec
push
movb
inc
jg
pop
mov
inc
sarb
mov
mov
xchg
lods
fisttps
xor
xor
sbb
or
ror
fdiv
cs
aam
decl
dec
add
fs
push
sar
out
or
aas
test
mov
imul
inc
mov
pop
popf
sub
loope
in
jle
cwtl
dec
xchg
or
bswap
loopne
ljmp
xor
fisubrl
pop
movsb
sbbl
cmpl
pop
push
dec
out
mov
arpl
xchg
xchg
roll
jb
jno
mov
push
cmp
shlb
shl
insl
pushl
add
cmpb
jnp
lcall
inc
pop
cmp
xor
mov
push
test
cmpsl
cs
mov
mov
loopne
mov
and
push
cmp
mov
sub
movsl
push
jge
cmpsl
in
out
xchg
ret
jmp
pop
mov
sbb
mov
sbb
mov
jb
inc
jmp
loope
inc
pop
cmp
xchg
mov
fwait
sub
mov
or
ret
push
movsb
das
inc
ss
fisubs
push
push
jecxz
xor
lods
arpl
dec
jae
ret
cmc
mov
pop
sub
pop
jo
dec
xchg
dec
xchg
in
cmp
arpl
cmp
aad
sbb
sti
xor
pop
inc
test
jl
push
insb
xchg
inc
mov
adc
jge
shl
pop
dec
add
loope
cmp
leave
jge
inc
mov
daa
inc
rcrb
jbe
push
shll
jb
lret
xchg
test
std
repnz
xchg
dec
fisubrs
fdivs
inc
jecxz
aad
stc
pop
in
aam
xor
scas
and
sbb
movsb
add
push
push
outsl
fbstp
test
mov
jmp
jmp
daa
in
int
mov
mov
repz
into
push
lock
outsl
mov
push
test
out
adc
in
std
aam
iret
test
bound
out
es
notb
xor
in
xchg
inc
inc
push
leave
mov
fdiv
cli
mov
add
mov
fistpll
xchg
adc
and
xchg
cwtl
out
lods
ljmp
shlb
mov
mov
addr16
movsb
stos
mov
pop
push
cmc
je
test
mov
clc
xchg
mov
cmpsb
mov
cmp
mov
xchg
leave
xchg
rolb
outsl
push
push
add
xchg
xor
ljmp
rcl
dec
sbb
cmp
pop
add
aam
iret
dec
and
xlat
roll
js
jno
testb
pop
dec
cmpsl
mov
or
mov
inc
fdivl
pushf
sub
sbb
sub
lods
sahf
dec
inc
test
xor
xchg
xchg
sarb
push
pop
jns
loope
inc
sbb
push
pop
pusha
leave
rcpps
sub
and
lock
cmp
orb
jecxz
fwait
add
pop
xchg
xchg
add
lret
dec
xor
loopne
adc
jbe
push
loopne
push
mov
scas
int3
repnz
int3
push
dec
jno
cmp
outsb
jbe
movsb
mov
xchg
pushf
ds
xchg
hlt
ja
icebp
rcr
xchg
xchg
inc
push
icebp
cmpsb
mov
rcr
pop
dec
rcll
xor
push
mov
inc
pop
push
popa
out
push
jg
xor
fimuls
ret
sub
or
xchg
xchg
sbbb
xchg
inc
fisttpll
nop
nop
pop
dec
pop
dec
jl
mov
stos
adc
jns
adcb
pop
push
ss
cwtl
cmp
je
add
filds
add
jns
test
adc
insb
repz
sub
push
inc
sub
push
jo
dec
outsb
nop
add
xchg
stos
imul
dec
or
xor
inc
aad
aam
ret
xor
adc
cmp
notl
inc
loopne
incb
sahf
lds
jmp
push
and
sub
gs
mov
jbe
cltd
dec
popa
cmpsb
fists
dec
sbb
mov
sahf
jb
or
adc
popf
cmp
outsb
push
cli
xor
cmp
adc
ljmp
les
stc
pop
aas
gs
rclb
jge
int
jns
rcr
fsub
mov
aad
dec
ss
or
out
rorb
inc
xlat
lods
lock
push
arpl
xchg
pop
push
aaa
pop
push
sahf
fcmove
mov
sarb
sbb
sub
xchg
push
cmc
sbb
std
fcoms
add
push
sbb
imul
fsts
or
inc
push
adc
fabs
mov
ficomps
pop
in
aas
cltd
inc
mov
fstp
add
data16
dec
jnp
cmp
xor
xor
push
jg
inc
pop
pop
bound
add
aas
aaa
ret
dec
in
mov
sti
add
mov
pop
adc
lods
mov
jae
pop
bnd
adc
fdivrs
lock
sahf
pop
cmp
cmp
mov
movl
inc
lds
or
mov
gs
cmp
shrb
inc
hlt
fwait
repz
hlt
mov
aas
jo
cmp
outsl
and
xor
push
int
lods
jb
add
sub
sub
add
addl
and
adc
dec
and
xlat
ret
and
adc
ja
jmp
orb
fcoml
into
inc
fyl2xp1
stos
nop
adc
mov
jle
fiadds
add
inc
sarl
push
or
addr16
inc
push
add
data16
js
jmp
fcompl
mov
lods
xchg
xor
movsb
cmp
cs
add
int
add
mov
loop
sar
mov
cmp
jl
arpl
aam
out
jmp
aad
arpl
mov
adc
test
scas
std
adc
mov
ljmp
shrd
xorl
sbb
inc
jbe
inc
jno
popa
roll
adc
movsb
incb
movsb
lahf
jbe
dec
dec
pusha
test
dec
add
lods
inc
inc
clc
xor
fcos
lods
movsl
push
inc
ja
icebp
sub
inc
shll
xchg
and
jnp
push
push
roll
adc
stos
lods
pop
mov
mov
fnstcw
fsubrs
insl
es
loope
jns
rol
movsl
movsb
mov
repz
push
stc
cmp
stc
mov
test
clc
mov
xchg
loop
out
or
pop
es
shlb
cmp
mov
movl
js
push
rcr
int
shlb
dec
loope
and
aas
inc
push
lahf
aas
inc
sarb
movsb
loop
sbbl
cltd
sub
daa
rcl
xchg
or
adc
aas
sbb
sbb
push
divb
pushf
lcall
jmp
fistpll
in
adc
test
jecxz
cli
imul
hlt
or
clc
lcall
cmp
push
sub
andb
pop
mov
leave
ret
filds
dec
fldt
jno
pushf
int3
enter
adc
mov
cmc
mov
mov
lret
cmpsl
mov
mov
pushf
loop
mov
mov
cmc
adc
arpl
and
cli
jp
xor
iret
cmpl
adc
inc
or
incb
inc
imul
xlat
push
mov
mov
stos
int3
xchg
hlt
rorl
js
jge
push
es
mov
push
sub
push
mov
or
add
xor
adc
cld
std
dec
pop
inc
add
stc
lds
mov
push
or
mov
mov
lahf
mov
dec
out
inc
bnd
cmp
lods
xchg
mov
ds
cmp
lods
lret
decb
mov
jo
test
pop
jns
fbstp
pop
lahf
ret
inc
mov
imul
bound
mov
jmp
cs
aad
cmp
outsb
add
pop
lds
fimull
mov
fadd
cmp
test
push
mov
xor
mov
loopne
sbb
scas
add
ja
pop
neg
push
gs
inc
dec
adc
adc
xchg
xchg
mov
cmp
std
out
repnz
test
or
lret
mov
loopne
sub
lcall
push
inc
aad
jae
xor
pop
jbe
push
sbb
out
sub
push
std
mov
dec
mov
mov
imul
leave
push
pop
dec
es
add
jno
imul
mov
inc
or
or
xchg
jb
xchg
repnz
sbb
fbstp
dec
dec
mov
and
mov
enter
enter
cld
sarb
mov
int
jns
lds
jnp
lods
mov
outsl
mov
push
cmp
in
sbb
scas
shlb
push
inc
dec
cmp
mov
adc
sbbb
mov
dec
movsb
and
mov
push
fstps
iret
jp
sti
sarl
xor
insb
pop
cmpl
mov
dec
insb
sbb
inc
jae
xor
fadds
pop
sub
data16
cmpsl
mov
dec
mov
and
insl
mov
inc
shll
test
push
cwtl
jge
sub
inc
popa
call
gs
push
jae
repnz
jae
add
push
pop
loopne
into
pop
dec
lahf
cmp
inc
neg
cmp
dec
jl
ljmp
mov
pop
adc
cmp
or
sub
stos
adc
jge
fcmovnbe
mov
insl
or
pop
dec
notb
dec
repnz
call
inc
pop
jmp
xor
sub
mov
ja
stc
ljmp
cmpsb
sahf
lods
lods
imul
cmp
xchg
loopne
pop
mov
add
orb
push
sub
rorb
jbe
out
pop
jnp
notb
mov
insl
rcll
xchg
jmp
jnp
shl
out
cli
or
push
sbb
sub
mov
lea
cs
jae
and
fisttps
fimull
movsl
ds
cmp
jg
xchg
mov
xchg
sub
adc
xor
int3
mov
scas
shl
test
movsl
mov
inc
sub
fistps
fs
jmp
inc
stos
test
mov
xchg
das
cmp
pop
inc
fisubrs
xchg
loopne
fwait
inc
mov
sbb
inc
inc
mov
jo
xor
mov
and
jno
mov
cmpsl
sub
loopne
xor
fwait
and
lret
pop
fnstsw
xchg
sbbb
ljmp
sub
popa
pop
fisttpl
sub
pop
rol
cs
mov
js
nop
out
in
mov
int
xchg
lret
mov
inc
dec
adc
inc
es
movups
stos
xchg
dec
stos
ja
lret
call
loop
repz
cmp
vfrczpd
xchg
dec
inc
fldt
les
iret
mov
adc
insb
shrl
pop
lret
lret
jne
cli
fwait
adc
das
movsl
add
push
mov
rclb
lcall
inc
or
inc
rcrb
pop
mov
mov
les
mov
imul
jmp
pop
jecxz
jl
jnp
mov
sub
jne
popf
mov
xchg
inc
xor
das
add
push
mov
jp
sub
clc
rcrl
jno
aas
xchg
inc
cmpsb
gs
addr16
mov
push
movsl
jmp
add
pop
imul
icebp
or
scas
mov
jnp
lods
fisubrl
mov
dec
shrb
fidivrl
pusha
xchg
inc
add
dec
aam
xchg
push
and
mov
xchg
xor
in
push
mov
sahf
mov
movsb
pop
lds
lock
cs
sahf
movsl
test
pushf
pop
mov
mov
ss
jmp
xchg
addr16
inc
aaa
stos
jbe
mov
ljmp
jl
out
aas
out
mov
push
sbb
int
divb
cltd
xchg
in
inc
pusha
mov
movsl
adc
push
mov
ror
xchg
hlt
lods
outsb
push
cmc
fildl
in
pushf
iret
or
sbb
pop
cmp
fisttpl
sub
push
xor
sub
sub
subl
push
sbbb
xchg
jns
ljmp
fstp
xchg
cmpsl
pop
mull
inc
cld
test
mov
les
loop
xor
xor
cmp
xor
push
inc
lock
out
popa
ds
nop
test
jnp
sub
mov
pop
push
in
jle
cmp
add
inc
mov
shll
insb
shrl
sbb
std
cmp
mov
outsb
outsb
das
adc
jmp
cmp
enter
bound
hlt
mov
jmp
or
push
adc
and
adc
sub
push
testb
std
lock
mov
adc
addr16
sbb
mov
outsl
in
lods
xchg
scas
pop
rorb
mov
jge
mov
fldenv
xchg
faddl
les
add
or
pop
js
popa
cmp
mov
sub
jmp
cmp
mov
fs
ret
adc
push
int3
inc
or
mov
lds
jg
es
scas
sub
sti
lahf
mov
pop
jno
inc
clc
mov
xchg
mov
cmpsl
gs
or
inc
xor
jae
insb
xchg
adc
int
pop
cmp
xchg
inc
mov
add
cld
sub
mov
pop
push
cmpsl
fbld
clc
dec
xchg
inc
add
add
xchg
and
lret
incb
imul
int3
sub
into
jbe
and
jp
xchg
scas
js
mov
sbb
push
pop
inc
imull
cld
mov
dec
outsb
mov
xchg
lcall
push
push
and
and
jae
mov
out
notl
call
testb
ret
push
and
jne
outsb
push
popa
jbe
rcrl
jnp
std
mov
mov
nop
mov
sbb
xchg
push
xchg
loop
jae
je
pusha
dec
xor
sub
arpl
aad
call
mov
mov
mov
inc
cmpsl
mov
nop
shll
mov
xchg
lods
mov
ficoms
dec
or
add
fisubl
test
lds
dec
loop
jnp
cmp
das
out
stc
push
jno
mov
inc
decb
es
into
xchg
scas
dec
pop
add
mov
push
int
cmp
popf
jge
mov
subb
adc
pusha
push
aam
cmp
scas
insb
enter
mov
sub
cmp
and
xchg
movsb
jle
nop
stos
cld
out
push
inc
adc
std
enter
mov
push
cmpsb
xor
test
loop
cmpsl
out
iret
and
int3
sbbl
mov
jns
fcompl
pop
mov
in
inc
pop
cltd
outsb
imul
push
les
loope
jg
xchg
inc
movsb
pop
cli
in
sbb
hlt
pop
cmpsl
shrl
je
push
xchg
lret
stc
xor
outsb
ret
insb
inc
popf
ret
dec
pop
repz
pusha
mov
dec
or
or
and
in
fisttps
cmp
or
mov
in
int
ljmp
mov
xchg
roll
mov
loope
movsb
loop
xchg
int
push
push
add
into
and
ja
mov
fldl
mov
call
dec
aas
adc
rcrl
adc
and
inc
push
lahf
xor
jbe
mov
xchg
cmpb
cmpsl
push
mov
pop
mov
mov
notl
sbb
sbb
jecxz
js
pop
dec
sti
iret
loopne
mov
sub
jnp
mov
mov
inc
mov
xor
popa
hlt
mov
mov
scas
adc
mov
out
adcb
dec
or
fsubrl
in
mov
lock
xor
fbld
or
mov
xchg
lods
mov
fnsave
cmp
lahf
xchg
mov
enter
sub
and
push
push
scas
cmp
mov
fisubrl
inc
xor
xor
lods
sbb
fcompl
mov
movsl
mov
add
push
sub
aam
dec
rcr
cmp
into
rclb
fbld
push
or
mov
leave
or
pop
bound
pop
mov
mov
ret
data16
xchg
push
pop
pop
fiaddl
push
out
insl
fbstp
xchg
out
lock
stc
push
dec
push
pop
cmp
push
outsb
xchg
and
leave
mov
out
insb
loope
repnz
je
push
repnz
mov
addr16
in
xor
sub
pusha
out
adcb
rcrb
out
test
in
dec
fldt
scas
push
sub
cmp
ljmp
int3
imul
and
pop
adc
int
cmpb
mov
adcl
add
out
push
jmp
into
arpl
fadds
jne
cmp
inc
fcmovbe
jge
loope
push
jnp
lods
pop
xchg
or
fs
int3
loopne
xorl
fstpl
mov
aad
sbb
push
gs
idivl
aam
mov
add
sub
shlb
loopne
jne
or
mov
icebp
mov
pop
dec
scas
jle
or
push
cmp
xchg
dec
insl
shlb
fdivrl
sbb
sbb
aam
jbe
and
mov
ss
push
in
mov
or
test
add
push
dec
and
ljmp
cmp
test
xchg
push
cmp
insl
sub
pop
inc
jb
int
rep
mov
xor
mov
movsb
leave
lds
ljmp
popa
sub
dec
cmp
pop
pop
test
insl
xor
xorb
xlat
hlt
shrb
mov
mov
ret
add
mov
cmp
mov
in
lods
sub
loope
test
mov
add
mov
test
cmp
mov
imul
outsl
mov
pop
lea
push
nop
xor
sbbb
fnstsw
test
mov
outsb
and
outsb
xlat
sub
iret
pusha
fs
or
push
xchg
mov
sti
loope
popf
sahf
mov
hlt
jae
je
movsl
es
rcrb
sbb
and
jno
icebp
push
xchg
jns
lods
rcll
mov
outsl
push
insb
test
outsb
cmp
jl
xor
cmp
inc
push
or
add
pusha
jbe
push
xchg
jno
out
mov
es
into
cmp
jmp
in
push
add
add
cwtl
mov
dec
stos
jbe
mov
lods
faddp
adc
arpl
ljmp
push
dec
push
addr16
icebp
mov
cmp
mov
xchg
imul
jnp
outsb
mov
xchg
imul
repnz
arpl
pop
sub
loopne
mov
rorb
pop
bound
pop
std
push
imulb
ret
mov
jp
je
bound
movl
bnd
dec
mov
mov
loope
push
in
push
or
adc
call
and
xor
cmp
test
jmp
sub
les
loope
int3
pushf
mov
sub
stos
mov
outsb
inc
in
and
and
jg
stos
test
jecxz
pop
outsb
out
ss
inc
sti
or
pop
xor
sub
mov
sti
repz
call
imulb
mov
out
xchg
fmull
or
mov
aas
adc
in
out
cli
jns
das
repz
aam
jo
xchg
jmp
add
push
iret
xchg
fildl
imul
add
jl
xor
test
cmpsb
repnz
mov
and
push
pop
or
sub
pushf
ljmp
rcrb
pop
pop
mov
test
push
outsb
and
push
add
fs
mov
in
xor
cmp
aad
shlb
pop
push
push
sbb
xchg
imul
lcall
mov
push
xchg
mov
loope
or
push
adcb
mov
add
push
jb
dec
jg
stos
jmp
fnstsw
inc
lahf
lock
aaa
mov
fwait
aas
sub
mov
or
js
mov
mov
notb
sub
bound
add
push
push
fisttpll
fdivrl
mov
mov
sbbl
fnstcw
push
dec
lret
das
jb
mov
sub
dec
sub
cwtl
cmpsl
push
dec
and
in
lahf
mov
push
mov
lds
push
inc
ljmp
fs
and
jl
pop
and
mov
lret
inc
out
lods
jl
sbb
push
sarl
cld
pop
or
dec
inc
push
dec
push
inc
pop
sbb
adc
ret
sub
push
cmpsl
mov
subl
push
out
lds
push
jns
mov
std
arpl
mov
cmp
pop
adc
add
out
les
fstpl
std
sahf
out
aam
and
mov
jno
cs
sub
jo
mov
ja
pop
cmp
or
sbb
xor
mov
clc
add
or
stc
test
notb
xchg
daa
xor
call
sub
lods
adcl
push
and
loope
inc
mov
inc
adc
cmpsb
shlb
addr16
cmpb
sub
dec
jno
mov
sub
cmp
pushf
xchg
sbb
stos
pop
sbb
cwtl
mov
mov
dec
sub
stos
dec
cmc
pushf
shll
adc
cmp
xchg
clc
jne
andb
mov
dec
inc
push
push
add
rol
aad
jle
test
fs
mov
ret
inc
ret
mov
shlb
or
fisttps
rcll
addr16
fdivrl
out
ret
inc
mov
test
jno
dec
movsb
xchg
clc
test
mov
mov
imul
xor
inc
jge
inc
insb
xchg
dec
cmp
nop
sbb
mov
movsb
jmp
push
loop
inc
orl
daa
out
mov
dec
pop
pop
xor
push
iret
adc
cli
lea
mov
lods
and
inc
arpl
lea
inc
fistpl
int
lods
test
xchg
pushf
xchg
pop
mov
stos
mov
rcr
imul
pop
add
test
ficompl
mov
aad
cmpb
decb
je
and
pop
xor
xchg
dec
imul
pushf
mov
push
jl
cmp
imul
insb
cltd
shll
and
stos
int3
clc
xchg
jge
xchg
ljmp
sbb
and
cwtl
lea
addr16
mov
jns
in
pop
data16
lcall
add
mov
rorl
stc
idiv
fidivl
xchg
fcmovbe
cmp
sub
cmpl
mov
sbb
or
mov
pop
adc
mov
push
mov
sub
inc
xchg
dec
mov
inc
mov
adc
xor
lcall
cld
mov
icebp
dec
cmp
dec
subb
cld
addl
inc
jecxz
decb
lea
stos
mov
mov
cbtw
je
stos
or
dec
es
push
inc
test
das
ret
mov
and
aam
xor
mov
and
lods
sbb
pop
out
mov
mov
xor
push
adc
xchg
daa
mov
sub
mov
mov
je
mov
fwait
jge
std
mov
inc
pop
std
pushf
movsb
cli
mov
fsts
ss
lds
mov
repz
stos
outsb
pop
mov
sub
inc
data16
in
xchg
outsl
push
jle
ret
mov
cmpl
jg
lret
fs
insl
dec
jne
inc
push
xchg
push
shl
js
pop
lcall
mov
mov
xor
rorb
iret
jle
iret
sarb
and
dec
sbb
mov
inc
sbb
test
repnz
into
ss
imul
and
sbbb
sarb
push
cli
add
cmp
enter
shll
or
leave
mov
sbb
cmc
xchg
iret
pop
add
in
sbb
add
jne
adc
mov
negl
pop
sbb
xor
inc
push
data16
xor
mov
mov
fsubrs
les
decl
add
mov
push
mov
lahf
sub
das
test
sub
xchg
in
movsb
punpckhbw
adc
in
insb
mov
sbb
int
jne
or
popf
ficoml
iret
ljmp
mov
dec
ficoms
jb
cmp
repnz
pop
stos
inc
jmp
jecxz
iret
cmc
aas
xchg
shrl
nop
mov
xor
pushf
mov
popa
test
and
int
stos
mov
dec
cmp
cmp
mov
push
sub
lahf
mov
jnp
push
jno
outsb
mov
push
xorl
sub
adc
icebp
repnz
sub
scas
adc
xchg
fstl
stos
insb
and
jmp
or
pop
aam
out
mov
jle
mov
cmp
add
or
add
stos
jae
jno
adc
xchg
pop
dec
lock
xchg
xor
mov
popf
ret
jp
in
cmpsl
mull
mov
mov
sub
faddl
sbb
js
fstps
imul
movsl
dec
iret
jno
scas
insb
clc
mov
shll
in
adcl
pop
mov
mov
mov
out
sbbb
enter
sbb
out
sbb
add
xchg
cli
add
gs
fwait
cmpsb
gs
leave
lods
jle
and
test
and
jp
inc
adc
push
les
js
cmovl
push
add
insl
pop
push
fwait
in
mov
iret
mov
inc
mov
fisubs
mov
adc
mov
ss
xchg
jecxz
arpl
push
xchg
adc
jo
lods
pop
repnz
les
xor
cmpsb
xchg
imul
movsb
sbb
jmp
hlt
mov
inc
out
sbb
sbb
loop
add
xor
add
gs
sub
out
mov
cmp
repz
inc
into
call
inc
or
or
dec
leave
daa
adc
arpl
pop
mov
je
insl
dec
cmc
dec
decb
inc
cmc
xlat
sbb
push
leave
in
jp
sub
aas
rolb
imulb
cmp
push
std
call
cmc
mov
mov
bound
inc
add
sti
and
mov
sub
popf
outsl
and
pop
jecxz
sbb
or
cltd
lds
sti
pop
gs
pushf
shrb
push
pop
subl
mov
cwtl
sbb
in
xor
test
cmp
lahf
loop
repz
mov
pop
movsl
jmp
xchg
mov
cs
inc
pushf
and
jle
xor
mov
mov
push
push
scas
inc
dec
shll
lret
aam
andl
mov
ret
enter
test
daa
gs
adc
bound
mov
dec
aam
cltd
cli
add
out
aam
push
loop
aad
xchg
pusha
out
sbb
xchg
mov
inc
aad
and
notb
js
aad
repz
jp
or
stc
push
orb
aas
push
sbb
cmc
cld
jne
pop
stos
daa
ret
scas
mov
lret
cli
cmp
addr16
push
mov
lret
ficoml
mov
fnstcw
lock
mov
dec
aad
xchg
fwait
dec
dec
add
imul
inc
repz
cmp
inc
sub
cmp
dec
add
jg
das
jnp
or
ds
addr16
es
insb
hlt
dec
mov
push
sbbl
xor
mov
mov
push
cmp
dec
stos
mov
and
push
push
pop
insb
iret
add
inc
psraw
mov
ret
data16
sub
jnp
test
lahf
sub
add
jecxz
mov
jge
pop
add
push
lods
dec
push
loope
ret
dec
cltd
pop
inc
fbld
xor
adc
mov
xor
xchg
xor
inc
rolb
push
xor
xchg
into
jbe
sbb
pop
test
bound
add
dec
xchg
inc
daa
cmpsb
cmp
ljmp
fs
add
push
shlb
cli
dec
fsts
xchg
roll
sti
cmpsl
mov
xchg
out
ljmp
es
adc
push
sbb
and
fdivr
in
icebp
cld
subl
push
mov
and
test
or
and
addr16
movl
vcmpsd
pop
xchg
dec
arpl
stos
out
ficoml
mov
aaa
pop
lahf
call
out
mov
sub
jle
push
inc
fcom
fcoml
mov
cli
mov
mov
shlb
fsubrp
aaa
inc
jb
test
cmp
adc
sbb
sub
push
add
mov
idivl
inc
test
xor
test
popf
lahf
push
xor
push
add
lods
into
xchg
xor
mov
in
cmp
dec
sbb
xlat
mul
es
les
mov
leave
inc
fstpt
enter
xchg
xchg
ja
add
and
cmpsb
dec
into
in
sbb
iret
inc
leave
test
cmp
inc
out
imul
test
pop
les
icebp
aaa
stos
mov
xchg
dec
sahf
xchg
int
jl
repnz
cwtl
test
test
cmp
push
adc
js
inc
scas
rcr
adc
fdivl
pop
je
mov
hlt
lret
loopne
sub
mov
cmp
cmp
mov
out
popa
mov
ljmp
and
jne
jecxz
sahf
sysexit
out
shlb
pop
mov
incb
stos
sub
enter
cmp
adc
hlt
pop
loop
cmp
fs
xchg
mov
inc
xor
jno
adc
xchg
xchg
iret
out
faddl
and
mov
mov
int3
dec
das
test
jecxz
and
lock
pop
repz
jg
dec
fs
in
loop
dec
test
mov
popl
rcll
xor
orl
or
inc
leave
lds
sbb
leave
xor
outsl
and
xchg
jnp
sarl
mov
rclb
adc
xchg
adc
mov
pop
hlt
mov
stos
fs
dec
add
les
loope
insb
loope
adc
jecxz
dec
dec
testl
dec
in
sbb
outsl
insb
stos
sub
sub
gs
ret
lret
subb
lods
or
jge
or
add
lret
mov
data16
push
imull
fimull
pop
lock
nopl
mov
jp
sti
mov
adc
sarl
dec
std
sbb
mov
adc
decb
dec
cld
mov
test
mov
cli
push
inc
mov
or
lcall
out
stos
iret
inc
test
shrl
xchg
pop
and
pushf
repz
push
mov
xchg
daa
mov
scas
and
insb
lods
xor
jp
mov
shll
sub
mov
push
scas
adc
pop
shrl
insl
out
in
mov
test
dec
ret
jno
lcall
xchg
push
in
xchg
jmp
sbb
leave
out
pop
push
aad
out
std
adc
add
addr16
std
ljmp
dec
cmp
ds
shl
add
and
icebp
dec
pop
aas
jb
clc
mov
xchg
gs
and
xchg
dec
outsb
jbe
fdivrl
aaa
and
mul
jno
xor
in
push
lds
and
sbb
fs
int
loopne
xchg
pop
jmp
int3
lock
mov
mov
stc
ja
mov
lahf
lcall
fdivs
ss
test
jne
loope
pop
xchg
in
and
inc
xor
test
test
jb
push
shrl
dec
aam
cmp
stos
inc
dec
cmc
pop
or
xor
adc
adcl
mov
mov
mulb
repnz
mov
stc
cmp
inc
inc
mov
lcall
rorl
rolb
fwait
cmpsl
hlt
int3
call
outsl
and
mov
fwait
jmp
push
push
mov
insb
jae
es
inc
inc
in
fdivr
adc
addr16
mov
mov
pop
adc
mov
lret
dec
inc
hlt
sub
fistpll
divl
mov
fsubr
mov
out
cmp
lods
cltd
mov
movb
mov
mov
cmp
jmp
lret
aas
movsb
mov
or
sbb
outsb
jae
std
es
fdivl
aas
dec
out
lret
and
push
xor
enter
adc
push
outsl
mov
jp
mov
cli
data16
pop
cmp
das
push
xchg
fbstp
or
xor
mov
jno
inc
imul
xor
icebp
cmc
mov
sbb
jle
stos
jnp
dec
test
das
push
and
outsl
inc
testl
add
jmp
popl
adc
pop
or
add
loopne
adc
sub
cmp
pusha
mov
xor
stc
jnp
stos
xchg
sbb
dec
pop
adc
push
push
aas
in
cltd
test
jp
xchg
mov
lds
sbb
in
push
lds
mov
fs
cmc
mov
inc
out
gs
inc
jl
dec
leave
fsubs
push
sbb
insb
inc
xchg
fldcw
and
or
pop
mov
jecxz
lret
push
cmp
gs
stc
jg
pop
pop
inc
subl
imul
imulb
mov
inc
xor
cmpsl
mov
insb
movsl
aam
and
loopne
xchg
mov
jl
int
iret
lret
xchg
push
scas
cmp
dec
ja
push
cmpb
xlat
sysexit
js
sbb
dec
dec
push
das
xchg
stos
mov
fdivs
popa
mov
and
lahf
or
add
je
sti
push
mov
xchg
mov
push
imul
movsb
cld
push
ljmp
roll
ror
xor
lock
push
sbb
stos
add
mov
mov
fsubl
mov
test
xchg
pushf
imul
mov
stos
jecxz
cwtl
jge
cmpsb
les
mov
or
xchg
icebp
pop
xchg
lret
pusha
sti
mov
push
fldcw
cmpsb
stos
in
cwtl
in
jg
mov
aad
rclb
push
cmpl
shl
popf
testb
aaa
xor
sub
out
outsb
adc
push
mov
mov
dec
hlt
loope
enter
xchg
out
jp
ret
jl
lock
xor
lock
adc
ja
mov
lret
cltd
sarl
inc
jp
enter
or
sbb
mov
test
nop
pop
jno
dec
sub
rcll
jmp
dec
mov
cs
imul
adc
cli
int
sbb
push
mov
pop
fstl
add
jmp
add
imul
les
cmp
inc
inc
push
pop
shl
cltd
lock
imulb
pop
inc
push
dec
cmp
das
les
lret
sbb
test
xor
mov
pop
pop
lret
das
mov
rclb
or
cli
push
jge
das
jp
gs
dec
inc
test
sbb
fists
inc
loope
jnp
int3
cmp
insb
sbb
test
xchg
mov
fwait
shrl
adc
sbb
cmp
add
mov
dec
jg
mov
lcall
push
scas
inc
pop
adc
add
xchg
rorb
arpl
pushf
cmpsl
pop
test
insb
and
cld
sbb
movsl
stos
inc
mov
pop
lds
add
leave
fcoms
je
and
and
incb
inc
or
mov
dec
pop
addr16
xor
in
inc
or
xchg
push
leave
jg
add
js
out
stos
loope
outsb
sub
dec
lods
stos
lds
les
push
mov
cmpsb
loope
fldl
add
sub
repnz
lret
mov
inc
mov
ds
xlat
scas
jmp
xor
adcb
or
enter
fnstcw
sub
push
and
xchg
scas
push
int
push
push
es
mov
sub
mov
arpl
xchg
dec
cmp
sahf
test
insl
or
mov
mov
test
shr
call
fsubrs
add
mov
xlat
scas
int
dec
ret
cmp
rorl
xchg
mov
lods
sub
addr16
pusha
xlat
int
lcall
pop
xor
outsl
cmp
push
mov
addl
mov
cmc
add
or
fildl
mov
int3
decl
adc
mov
outsb
and
jnp
add
inc
adc
cmpb
rolb
stc
mov
not
lods
addr16
in
push
cltd
rcll
insb
cmp
into
arpl
xor
cmpsl
test
mov
xlat
mov
pop
in
mov
idivb
add
daa
mov
stos
sbb
xchg
test
sbb
and
fidivs
jns
lahf
dec
mov
pop
movsl
push
mov
jns
cmp
cmp
sub
daa
fsubp
test
push
iret
and
idivl
pop
add
push
stos
into
sub
lods
sub
out
sbb
xor
popa
cmp
je
lahf
cmp
sti
push
mov
xchg
imull
push
cmp
stos
xor
into
call
and
jo
inc
push
lret
add
gs
loopne
sub
je
jno
std
cmp
jno
and
cmp
mov
das
push
jo
roll
jns
je
in
pushf
cmp
mov
mov
int
mov
shlb
addl
lret
sarb
jle
mov
mov
sti
test
mov
mov
mov
daa
jl
jne
test
xor
rcrl
jle
call
lahf
cmp
fdivrl
xchg
ss
pop
mov
sub
sets
roll
sahf
popf
inc
xor
out
or
imul
cmp
cmp
out
mov
inc
xchg
jo
pushw
xchg
data16
lods
xchg
pop
xor
roll
xor
add
cmp
xchg
lods
loopne
push
mov
mov
shr
fidivrl
out
mov
xlat
iret
out
cmp
mov
dec
lahf
sub
mov
sbb
testl
mov
add
push
in
mov
push
sbb
shrb
outsb
insl
out
mov
hlt
or
iret
jl
push
jbe
daa
das
sub
fwait
jae
xorb
clc
cmp
cmp
repnz
adc
sub
cmp
cmp
lahf
cmp
push
xchg
sbb
push
pushf
test
add
push
movsl
jmp
lcallw
jbe
pop
mov
mov
scas
fcoml
je
ja
xchg
sbb
mov
aad
xor
aam
loop
testl
push
arpl
mov
sub
mov
inc
fwait
in
dec
pop
xchg
out
sbb
jecxz
mov
cmp
lods
xor
jns
es
in
add
rclb
pop
cmp
cwtl
in
inc
push
je
and
jge
lock
in
movsb
decl
push
dec
sbb
mov
or
mov
adc
mov
insl
sbb
sbb
cmp
fistpl
loope
push
push
pop
loopne
cmp
xchg
adc
sbb
loop
or
ds
aad
mov
mov
scas
sbb
mov
in
psadbw
insb
xchg
adc
pop
out
adc
xchg
inc
dec
jnp
lods
add
push
scas
outsb
call
fs
push
dec
mov
pop
mov
int
push
cmp
mov
cltd
push
int3
push
imul
sub
xchg
adc
push
push
mov
xor
flds
movsl
jno
imul
jp
dec
xchg
loopne
popa
inc
mov
cmp
xchg
sub
cltd
sar
test
mov
push
stc
mov
or
or
jnp
loop
xor
lock
lods
je
lret
jl
hlt
decb
cmp
js
cmc
cld
adc
mov
pop
mov
xlat
sub
xchg
xor
adc
cmpsb
xchg
das
ss
mov
mov
nop
push
sub
loop
push
movsl
pop
rolb
mov
lods
xor
add
outsl
cwtl
cmp
push
std
mov
test
xchg
mov
push
fidivrl
mov
gs
data16
dec
adc
or
mov
fbstp
ret
mov
test
mov
jae
imul
or
scas
adc
pusha
sbb
outsb
cmpsb
xchg
jne
int
cmp
mov
les
and
pusha
aaa
mov
mov
or
xchg
and
inc
push
dec
push
cmpsl
sbb
xchg
and
scas
sbb
adc
repz
scas
fdiv
pop
push
ret
repnz
sbb
adc
xor
add
movsb
imul
cmpsb
clc
or
push
or
fs
orl
idivl
jecxz
add
push
pusha
ror
add
popa
insl
jo
cli
out
add
jnp
add
cmp
or
adc
sub
adc
pop
xorl
cs
xchg
or
sbb
xchg
leave
sarl
cmp
insb
repnz
scas
fwait
inc
jg
inc
jae
daa
out
rcll
fnstsw
sub
xchg
push
cltd
and
jne
int
dec
ss
mov
pop
movsl
mov
out
mov
xor
xchg
mov
xchg
add
xor
das
push
sub
add
out
fdivs
je
cmp
sbb
out
mov
je
xlat
ljmp
aas
push
shll
xchg
fisubl
sarb
lret
jmp
cmc
loop
ja
mov
mov
shll
sbb
fcmove
mov
inc
cmpsb
out
or
push
mov
mov
xchg
shr
dec
and
outsl
mov
jecxz
dec
das
mov
push
mov
fwait
sbb
shrl
movb
mov
nop
mov
mov
pop
into
push
int3
mov
push
mov
xor
xor
cmpl
int
xchg
rcrl
sbb
fdivr
pop
xor
and
mov
xchg
mov
or
movsb
and
inc
dec
jge
mov
mov
scas
mov
dec
add
aas
add
iret
jb
cli
aam
aaa
jmp
push
dec
jecxz
xor
outsl
sbb
iret
cmpsb
jne
int
repz
add
jle
out
mov
mov
out
inc
mov
pop
push
xchg
push
movb
pop
pop
cmp
clc
xchg
sub
iret
pop
mov
jl
add
xor
push
fwait
push
fidivs
loopne
gs
mov
bound
clc
lcall
sub
mov
mov
push
shlb
pop
ss
pop
insb
mov
in
fldt
mov
mov
sub
leave
test
push
insb
fstl
sbb
mov
xchg
push
xchg
cmc
jne
lcall
sbb
jge
or
mov
fidivrl
xor
inc
sub
add
jne
mov
cs
cltd
dec
mov
enter
push
cmp
ss
loope
out
xor
sti
and
cmp
out
sub
cmc
sbbb
fldcw
les
fisttpll
lcall
and
mov
cmpsb
mov
sub
push
movsl
in
jle
lds
mov
aas
mov
push
pop
cmc
mov
adc
dec
mov
add
adcb
test
sub
cli
mov
imul
jnp
bound
in
imul
mov
inc
push
enter
mov
sbb
in
repnz
mov
xchg
dec
ret
loope
sub
cmpsl
das
push
outsb
and
inc
cmp
dec
push
cmp
mov
rol
mov
xor
xchg
decl
scas
sub
push
lds
add
sub
std
lea
sub
in
outsl
lea
rcl
push
mov
js
and
arpl
into
sub
scas
ljmp
div
fnstsw
jno
xor
dec
mov
xlat
out
inc
xor
adc
fildll
inc
push
xor
popf
xor
les
ljmp
mov
jp
daa
mov
sarb
dec
mov
and
ljmp
dec
rorl
xor
roll
inc
and
enter
movsb
inc
push
mov
int3
ljmp
outsb
mov
pop
in
cmp
pop
xor
xor
mov
fs
pop
inc
cs
push
fstpt
insb
out
int3
dec
pop
sbb
add
sbb
out
push
add
and
add
push
fst
scas
pop
add
mov
iret
aad
loope
imul
sbb
xlat
push
clc
or
cmp
ret
pop
icebp
pop
imul
mov
test
fcoms
xchg
jg
adc
sti
leave
mov
add
dec
sub
cmp
mov
or
xchg
xchg
dec
or
push
push
add
push
loope
gs
adc
xchg
add
jle
repnz
xor
rorb
je
inc
push
dec
shll
out
pop
sbb
outsb
xor
cltd
out
test
div
test
popa
dec
inc
mov
xorb
ljmp
mov
dec
ljmp
lcall
inc
jo
jmp
mov
sbb
cmp
dec
xchg
ret
fisttpl
mov
and
daa
inc
loop
mov
sub
xor
test
loop
notb
clc
cmpl
mov
jne
adc
mov
sbbb
push
popf
outsb
stc
add
cmp
test
lods
or
repz
jle
cmp
pop
ljmp
mov
or
pushf
andl
or
cmc
ret
icebp
aad
out
stc
movsb
leave
in
lods
or
test
jecxz
mov
test
pop
insl
push
pop
cmpsl
aas
enter
lcall
cwtl
xchg
cmp
sbb
or
xlat
scas
dec
sub
subl
or
inc
inc
cmp
mov
int
jb
call
mov
pop
jmp
iret
inc
mov
out
jae
inc
pop
push
add
add
cmp
xor
icebp
dec
int3
mov
dec
mov
xor
push
in
ret
dec
ficoms
pop
dec
fcom
cmpsl
in
sbb
adc
jne
sti
cli
jnp
data16
int
push
stc
mov
mov
lret
xchg
adcb
pop
dec
movsb
or
sti
mov
sti
cmpsl
fisubl
mov
mov
aam
mov
inc
adc
stos
xchg
or
int3
pop
adc
dec
xor
scas
lcall
cs
sbb
imul
pop
loop
mov
jbe
push
test
xlat
mov
inc
roll
dec
gs
stos
jge
sub
mov
mov
mov
jmp
mov
fisttpll
les
xchg
mov
pop
push
cmp
mov
mov
mov
or
movsb
sub
pop
cmp
fsubs
ds
mov
inc
inc
lret
ds
mov
fimull
xchg
sbb
xor
fisubrs
test
movsb
out
jbe
fcomi
push
js
sub
lds
dec
incb
int
pop
push
sti
gs
call
jp
in
or
arpl
pusha
push
xchg
push
jbe
popl
push
inc
push
in
mov
hlt
jmp
shr
lcall
add
xor
fcompl
jl
popa
inc
mov
push
out
fnstcw
jp
ret
xchg
ja
or
inc
add
imulb
mov
je
test
movsb
jae
fistpl
lea
xchg
sub
ret
add
mov
pop
add
insb
xchg
fiadds
jmp
xchg
hlt
loop
push
sbb
jb
add
adc
mov
push
test
mov
mov
xor
dec
mov
sub
aas
das
notb
push
mov
fistpll
xor
pop
popf
jnp
push
xor
adcl
loopne
lea
push
cmc
mov
je
lahf
dec
mov
xor
outsl
xchg
pushf
movsl
sub
inc
adc
jmp
push
inc
repz
loope
sbb
test
push
push
add
hlt
popa
add
popa
test
std
jl
cs
ds
daa
xor
sbb
mov
aad
in
jnp
les
or
insl
inc
aad
lock
and
outsl
push
sub
xor
jp
addr16
cmc
je
pusha
and
or
mov
into
ja
pop
cmpb
and
jo
dec
aad
cmp
add
aam
stos
imul
jl
rcl
cltd
add
push
repnz
in
ja
mov
sub
test
jp
jne
pop
shlb
ret
pop
push
sub
hlt
pop
rcll
sub
mov
mov
sbb
ja
xlat
imul
mov
dec
xor
lods
inc
mov
push
mov
or
movb
repnz
sbb
or
inc
dec
and
dec
or
adc
cltd
inc
dec
mov
das
in
dec
mov
inc
sub
mov
dec
aaa
sbb
pusha
inc
dec
inc
cmpb
inc
sub
mov
rcll
add
jae,pn
mov
mov
xor
add
in
xchg
std
xchg
cmpsb
dec
xchg
mov
push
ret
loopne
mov
or
push
pop
dec
iret
aam
sahf
push
add
inc
mov
mov
and
pop
mov
into
mov
cmc
ret
mov
or
outsl
testb
roll
dec
insb
mov
roll
idivb
imul
dec
mov
mov
pop
mov
and
das
pop
push
push
mov
sbb
mov
test
pop
aas
push
sub
jb
xchg
sub
mov
aad
loope
in
mov
add
stos
popa
cmpsl
inc
add
cmpsb
outsb
imul
aad
test
dec
sbb
movsl
lods
or
pop
loopne
loope
cmp
sbb
mov
scas
xchg
dec
mov
sbb
jno
outsl
inc
js
in
lea
bnd
jnp
mov
andl
jno
xchg
aam
or
jno
add
mov
popa
icebp
loopne
jp
pop
popa
test
add
cmp
std
rorb
pop
push
lret
out
imul
cmp
xor
push
adc
sub
movsb
rorl
rcrb
add
jecxz
aaa
aaa
in
lcall
andl
fsubp
rcl
imul
mov
adc
lds
lret
dec
adc
inc
and
adc
fdivrs
scas
lret
ss
inc
or
cmpsb
lods
cmp
popl
and
andl
push
rcrb
aad
jecxz
test
adc
fiaddl
mov
cmp
arpl
mov
addr16
popf
cmpsb
push
push
fwait
jbe
seto
and
sbb
pop
pop
inc
and
sahf
movsb
sar
test
xor
jp
adc
lea
xchg
xchg
sub
nop
test
mov
cmp
sub
dec
or
add
adc
aas
lret
sub
divb
cmp
es
adcb
xchg
push
cmpl
sti
enter
pushf
lret
aam
ja
sub
jno
inc
jbe
mov
inc
adc
mov
int3
jnp
mov
mov
dec
xlat
mov
or
cld
gs
fcmovbe
adc
pop
call
cmp
add
sub
lcall
cld
mov
mov
inc
jno
or
jg
in
xchg
pop
jnp
lods
fs
mov
sub
add
mov
sahf
lods
test
std
ljmp
push
out
xchg
mov
add
lret
imul
addr16
xor
sbb
or
cmp
pop
aas
aam
cs
ljmp
test
or
push
out
ret
imul
mov
push
lods
loopne
dec
insl
pop
mov
add
loope
or
jle
adc
xchg
push
or
pop
int3
cmp
fdivrs
xlat
int3
ficoms
loopne
push
in
lea
or
shld
scas
out
call
int
daa
icebp
pop
mov
and
lret
mov
inc
cmp
scas
lds
push
clc
jb
fcompl
fistps
in
ja
xchg
inc
fnstenv
orb
arpl
mov
dec
sbb
data16
aad
insl
mov
mov
fldl
jp
push
mov
rorl
push
repz
mov
repnz
into
lock
lds
push
jo
mov
and
xor
stos
jnp
ljmp
cwtl
rcrb
scas
jae
mov
or
pusha
shr
in
mov
std
and
inc
call
pop
loope
imul
mov
xchg
mov
xchg
jae
sti
adc
out
and
test
in
loop
bound
fiaddl
mov
fcmovnb
andb
iret
call
jmp
inc
xrelease
dec
push
xorl
mov
aam
mov
jl
mov
cs
fnstcw
mov
add
xchg
nop
sub
insb
adc
dec
or
mov
test
add
or
stos
lods
aad
fmul
mov
adc
ret
xchg
cltd
rcrb
or
inc
hlt
popa
andb
xchg
jae
arpl
mov
sahf
dec
fisubrs
mov
mov
in
xchg
std
xlat
dec
pushl
add
mov
mul
and
movsb
jle
clc
fs
mov
inc
cmpsb
into
dec
xchg
lods
add
cltd
and
pop
outsl
test
jns
shl
in
iret
sti
or
ljmp
repnz
outsb
jne
rcll
das
addr16
push
cltd
mov
push
fdivl
mov
shll
xchg
mov
and
out
adc
popa
dec
sub
adc
cmp
adc
jne
shll
pusha
test
jmp
xor
pop
mov
outsl
sub
icebp
and
mov
inc
outsb
out
inc
jae
push
cmp
ss
inc
xor
ret
mov
outsb
pop
mov
lea
xchg
pop
xchg
xchg
add
mov
dec
aas
frstor
imul
ds
xchg
pop
iret
sbb
popa
fdiv
xchg
lret
adc
lahf
push
pop
inc
adc
addr16
mov
xchg
jp
mov
ret
gs
jecxz
notl
push
inc
and
outsl
xchg
add
stos
sbb
sti
ljmp
add
push
or
daa
push
mov
lcall
sbb
pop
lahf
xor
loopne
xor
pop
cmp
or
shll
pop
popa
test
lcall
jge
fsubp
loopne
jecxz
out
movsb
iret
hlt
or
sub
dec
pusha
push
or
mov
inc
lea
test
cld
test
sbb
popa
stc
movsl
jno
adc
push
push
insl
mov
addr16
pusha
cmp
loop
sbb
add
lock
sbb
adc
scas
lret
fadds
mov
ss
cmp
in
ss
and
xchg
push
inc
xchg
push
and
jb
daa
lds
xchg
cmp
pop
cmc
mov
pushf
or
pusha
popl
testl
fucomp
pop
sbb
pop
push
jbe
aas
js
aaa
push
daa
sbb
adc
dec
lahf
insl
inc
sbb
int
adc
out
jno
dec
add
les
jnp
and
add
jmp
fcmove
xchg
ds
cmp
inc
xlat
push
jle
call
dec
outsl
sub
mov
gs
lds
jno
mov
call
je
pushf
xorb
sub
jp
andb
mov
jl
jae
test
shl
ror
mov
push
jo
es
xor
xchg
cltd
and
les
daa
mov
cmp
lods
or
dec
repz
std
daa
movsb
jae
int
in
xor
push
mov
fdivrl
sbb
mov
shlb
lret
push
popf
or
add
cmp
mov
mov
aam
lahf
sub
xchg
jae
dec
sbb
sahf
xchg
fwait
pop
mov
cmp
mov
xchg
cli
orb
adc
jmp
out
push
mov
sub
out
les
sar
rolb
scas
movsb
clc
into
pop
dec
inc
sub
ja
add
std
xchg
xchg
dec
cmp
imul
add
mov
sbb
xor
adc
inc
inc
or
jg
loope
add
aad
pop
mov
outsl
mov
stc
out
shl
dec
inc
and
sub
mov
hlt
arpl
xor
inc
mov
dec
or
or
dec
jnp
xchg
imul
push
jge
test
mov
js
mov
add
pop
les
push
sub
pop
cmpb
cwtl
movsl
pop
pop
bound
push
outsl
cmpl
icebp
mov
push
xor
mov
push
and
gs
adc
aaa
xchg
dec
icebp
loop
jnp
dec
lock
out
outsb
imul
stos
std
sub
fldcw
add
pop
push
popf
lret
icebp
icebp
mov
and
fsubr
jo
adc
mov
stc
ret
push
pop
mov
sub
out
push
dec
fistl
in
icebp
push
mov
adc
gs
fcoml
popa
dec
mov
fwait
test
push
xchg
aad
mov
into
push
out
ret
mov
cmc
pushf
dec
fisubl
sbb
out
push
mov
adc
repnz
inc
mov
xor
push
push
add
lods
dec
fucom
mov
roll
add
push
adc
mov
popf
sub
mov
loope
divb
inc
shlb
scas
les
lods
jo
jg
inc
lret
nop
pop
cmc
xor
js
iret
in
int
push
int3
jg
cmpsb
mov
add
sub
into
cwtl
mov
sbb
into
mov
in
enter
loopne
adcb
fdivrl
test
mov
lods
bound
dec
inc
xor
mov
mov
dec
ljmp
or
push
push
loope
pusha
ret
sti
ror
js
fcmovnbe
adc
push
push
xor
fwait
mov
push
push
adc
dec
arpl
jge
ja
ljmp
ljmp
cmp
les
lods
pop
or
jmp
pop
mov
and
or
cmp
popf
mov
cmc
imul
imull
adc
out
or
jns
repz
mov
mov
inc
bound
ja
mov
push
stc
adc
or
inc
insb
jbe
cld
test
rolb
xchg
xchg
cld
pop
push
pop
xchg
push
aas
pop
mov
pop
cs
dec
lret
stc
icebp
jb
into
stos
mov
popw
in
in
add
lret
js
sbb
dec
push
out
jnp
xor
adc
cld
push
mov
xchg
add
xchg
mov
sub
xchg
dec
test
add
cmp
xor
pop
sub
lds
mov
arpl
cltd
cs
scas
and
fistpl
sub
or
lret
adc
add
cmpsb
add
imul
mov
pushf
or
xchg
cwtl
jae
or
add
pop
and
xchg
sarb
xrelease
enterw
xchg
sti
notl
data16
cltd
outsb
dec
jp
push
mov
fdivr
rcrl
mov
inc
fadd
push
mov
xchg
lret
gs
adc
test
rcrb
xchg
mov
lahf
aaa
mov
pop
lods
xorb
es
xchg
adc
fdivs
scas
or
sbb
or
push
ja
int
sub
sbb
jle
xchg
pusha
inc
mov
rcrb
pusha
pop
stos
out
jnp
push
fadds
ds
aas
mov
sub
mov
shr
cmp
test
fiaddl
cltd
xor
aas
fdivr
push
xchg
data16
pop
xor
scas
sbb
jecxz
lea
or
xor
bound
dec
pop
inc
mov
dec
inc
leave
imul
iret
jno
xchg
lods
add
sbb
add
mov
jnp
mov
lods
add
sbb
xchg
scas
out
mov
test
push
fs
mov
stos
sbb
mov
call
repz
fs
sbb
ss
mov
jnp
add
xchg
mov
hlt
loopne
lods
or
insb
aad
in
cmp
push
dec
inc
mov
push
out
fisttpll
stos
xor
data16
out
jo
ljmp
push
mov
mov
hlt
mov
dec
out
cmp
imul
icebp
jecxz
and
push
adc
addl
mov
dec
adc
clc
cmp
xchg
scas
xchg
jecxz
lock
lods
fwait
cmpsb
push
jnp
push
adc
ljmp
pop
jne
mov
pop
loop
movsb
cmc
xor
lods
pop
jmp
das
cmpsb
push
out
push
cmp
dec
mov
jp
add
cmp
insl
daa
hlt
adc
xor
xchg
sbbb
pop
mov
out
imul
jl
mov
or
sub
pop
cltd
push
sbb
sub
jl
sahf
ret
sahf
inc
es
xchg
loopne
mov
aas
in
mov
lea
jnp
mov
ja
rorl
adc
xchg
fstpl
xchg
pop
jge
add
jno
jne
push
cmp
sub
aad
xor
loope
push
sbb
les
test
cmp
mov
mov
pop
shrb
push
aad
je
adc
pop
jecxz
or
pop
cld
mov
add
xlat
add
push
insl
cmp
stc
lret
xor
lea
add
jb
jbe
jno
aas
mov
jmp
in
add
xchg
out
pop
test
and
lods
push
test
pop
mov
push
push
rcl
pop
add
daa
dec
pop
inc
mov
lea
pop
int
ljmp
jge
in
js
inc
xchg
or
jp
insb
fildl
jns
jns
add
call
in
mov
je
adc
stos
stos
jle
jae
movsb
pop
jb
cmc
mov
movsb
xor
sub
cmp
cmpsb
sbb
jle
jo
int
ret
mov
mov
pop
cmp
mov
aam
mov
mov
iret
jp
iret
std
pop
movsb
jmp
inc
loopne
and
xlat
rcrb
stos
imul
xor
pop
cmc
fmul
movsb
and
ss
push
mov
push
popa
or
mov
call
jnp
jnp
push
in
lcall
or
or
cmp
or
gs
das
test
mov
add
pop
popf
pop
jno
popf
outsl
xor
mov
arpl
dec
jge
idivl
xlat
mov
mov
dec
mov
cmpsl
dec
mov
add
adc
test
jecxz
inc
push
jno
inc
dec
pushf
stc
sbb
icebp
push
aad
lea
xchg
int3
mov
push
fcmovb
mov
lret
and
xchg
imulb
inc
pusha
rolb
clc
cmp
test
stc
push
mov
outsb
xchg
and
mov
mov
mov
fistps
sbb
aas
cmp
outsb
add
inc
sbb
add
xor
sub
addr16
sub
mov
aas
fidivs
pop
scas
ljmp
cli
test
push
xchg
xchg
pop
sahf
scas
mov
pop
mov
ja
negb
vaddsubpd
mov
insl
add
xor
mov
jno
jns
int
icebp
pop
sbb
xchg
insl
leave
fnstsw
enter
notb
std
scas
repnz
fnstcw
push
mov
dec
jl
push
rcr
imul
push
call
or
xor
popf
loopne
outsl
inc
ljmp
mov
ret
movb
aas
sbb
or
jne
icebp
sti
and
psadbw
lods
inc
imul
cmpsl
sub
jno
rorl
xlat
fcoml
mov
insb
jns
imul
pushf
ss
inc
jecxz
dec
lods
rolb
daa
faddp
fwait
movsb
jno
push
mov
inc
dec
cmp
push
or
and
sarl
xchg
jg
fisttps
test
dec
xlat
jle
mov
jg
vcmpss
mov
imul
mov
imul
sbb
push
xorl
aas
mov
stc
dec
int3
fmull
jl
cwtl
pusha
scas
pop
sub
adc
arpl
mov
mov
sbb
jnp
adc
leave
add
imul
add
test
xchg
addb
popa
outsl
adc
mov
das
adcl
test
lea
push
mov
xor
sbb
adc
sub
sti
imulb
xor
jecxz
cmc
test
dec
insl
xor
lods
gs
hlt
push
leave
cmp
mov
xor
insb
dec
jne
cli
push
enter
push
lcall
divl
aad
mov
inc
xor
out
movsl
cmp
imul
xchg
pop
and
imul
scas
lret
mov
push
mov
loop
xchg
out
aas
jbe
mov
push
loop
test
inc
sbb
pop
in
enter
aaa
and
fdivrs
fbld
sub
or
fs
jecxz
dec
loopne
cmp
lock
xchg
fistpll
clc
cmp
pusha
push
mov
add
cwtl
mov
push
inc
xor
cld
adc
pop
icebp
and
xor
imul
rcrl
jno
jp
jb
mov
cwtl
mov
inc
je
std
jecxz
lods
xlat
enter
mov
mov
push
fnstsw
push
push
jmp
enter
cmp
in
out
pop
mov
mov
mov
push
xchg
pop
mov
scas
or
jo
or
push
push
mov
aaa
sbb
out
dec
lret
js
add
jge
or
int
xchg
adc
arpl
adc
pusha
xchg
cmp
xor
shrb
push
fidivrs
pop
cmpsb
push
lahf
add
fisttpl
call
call
aas
push
adc
add
push
out
xor
or
scas
hlt
lea
cli
hlt
insl
xor
lret
imul
push
rcll
test
sub
lods
pushf
xor
sarl
mov
cmp
call
push
cmpsb
pop
sahf
cmp
cli
negb
imul
out
jo
ljmp
cli
aam
mov
pop
cmpsl
addl
leave
cmpsb
movsl
insb
movb
xor
push
sub
cmp
movsl
push
cmc
push
xor
test
fs
enter
outsb
push
ljmp
cmp
std
or
push
arpl
pop
mov
xor
call
and
movb
mov
cmp
xadd
nop
cmc
sbb
test
adc
mov
fmulp
push
filds
test
sbb
fimull
jl
scas
icebp
lea
xchg
and
jo
and
or
inc
mov
lods
imul
gs
push
mov
notb
lahf
fstps
jl
mov
xor
push
and
les
mov
leave
xabort
push
and
or
pop
ja
sub
push
mov
cli
imul
jecxz
out
scas
mov
sahf
call
jg
rcll
push
add
pop
pop
repnz
and
test
push
adc
cmp
add
cmc
shll
xchg
jno
mov
ret
xor
xchg
out
xchg
insl
jmp
fidivrl
mov
fdiv
adc
shl
xchg
xchg
ficoml
adc
mov
add
stos
jne
xor
cmp
ud1
xor
loopne
imulb
or
cmpsb
cmp
jo
or
mov
in
repz
daa
jl
fisubs
iret
mov
insl
push
stos
sbb
dec
inc
and
out
shlb
mov
cltd
call
sub
std
push
add
add
push
ret
subb
and
cmp
mov
out
cltd
pop
jo
jge
iret
std
das
fistps
adc
cmp
sub
aaa
movsl
pop
dec
adc
outsl
jb
fldenv
shl
test
ljmp
movb
dec
pop
jno
push
lods
fldl
cmp
lds
push
jle
int3
mov
pop
pop
ljmp
clc
imul
movsl
testb
lcall
int
faddl
push
dec
sbb
mov
and
negl
mov
sbb
xchg
xlat
push
push
cli
jmp
mov
adcl
add
repz
jns
lock
shll
inc
fimuls
fidivs
jmp
stos
stos
mov
cmp
mov
fwait
sub
fimull
sar
lods
outsl
sub
ret
cmp
or
jl
ljmp
loopne
pop
and
lods
cli
sbb
in
in
das
test
repnz
movsb
jmp
push
aad
and
pop
inc
shl
sub
mov
pop
cmpsl
adc
add
lcall
adc
jmp
dec
add
mov
jg
icebp
leave
enter
fimull
icebp
addr16
dec
arpl
int3
ret
push
jmp
or
jle
aad
pop
cmc
out
out
xchg
popf
ljmp
add
out
dec
xchg
sbb
xor
aam
pop
jmp
fstpt
imul
pop
repz
stc
add
mov
jmp
adc
iret
dec
sbb
mov
sub
std
ljmp
jns
lcall
pop
insl
mov
cmp
shlb
loope
and
rorl
sub
test
and
and
xchg
jnp
push
adc
imul
inc
push
inc
pop
addb
xchg
xor
push
dec
fdivrl
gs
mov
add
jnp
jl
test
repz
outsl
cmp
mov
repz
and
cmp
and
stc
mov
mov
cmp
std
mov
adc
subb
loop
jmp
cmp
fs
inc
push
cmp
loopne
cmc
addl
or
jne
mov
sahf
pop
lds
add
add
adcl
ljmp
cmp
outsl
lahf
xor
dec
mov
decb
xor
cmp
mov
push
std
xchg
add
mov
das
push
call
enter
push
dec
dec
mov
shlb
push
jmp
dec
clc
and
lods
rclb
idivl
jl
push
mov
aam
daa
ja
aad
xchg
fnstenv
nop
jg
fsub
push
cltd
popa
dec
inc
arpl
cltd
mov
fldpi
mov
sub
into
and
jnp
pop
outsl
mov
inc
push
lahf
data16
outsb
cmpsl
nop
mov
xchg
mov
bound
popa
loop
xor
jbe
cli
push
not
push
adc
aad
cmp
loop
das
cltd
and
push
add
jb
or
mov
lea
push
inc
jne
roll
push
out
movsb
loope
jl
popf
or
sbb
add
cli
shlb
sub
out
loopne
insl
sub
jns
jl
int3
push
xor
pusha
push
lcall
add
xchg
int
pop
repz
xchg
pop
ficoml
loop
inc
sbb
and
les
pop
cli
mov
push
lret
inc
xor
pop
cmp
add
leave
mov
sbb
jae
test
jmp
daa
sub
movsl
and
and
sbb
cmp
leave
mov
jp,pn
mov
jecxz
cvtdq2ps
mov
jg
cmpsl
jmp
mov
jp
xchg
lcall
sarl
mov
clc
divl
add
ljmp
and
mov
cmp
out
movl
jns
fsubl
je
fidivl
std
mov
insl
xlat
push
push
cld
jne
sub
scas
cli
mov
adc
push
pushf
dec
mov
pop
mov
daa
lods
ljmp
push
push
fs
call
test
insb
mov
ret
dec
test
sbb
das
clc
inc
call
add
and
mov
mov
inc
jb
sti
inc
out
or
and
jns
xor
push
sbb
add
sbb
mov
xchg
sbb
test
and
xchg
lea
fcomps
push
mov
push
jp
inc
adcl
dec
cltd
mov
xchg
ja
jl
pop
fwait
sbb
add
mov
xchg
pusha
mov
sbb
push
cmp
cmpl
scas
cmc
adc
mov
adc
daa
dec
test
dec
enter
mov
mov
push
jbe
jno
cmpb
popf
mov
and
jl
call
sbb
mov
add
adc
leave
pop
sub
nop
xor
shlb
jb
mov
dec
outsb
mov
cltd
xchg
call
pop
jg
out
mov
lods
mov
ja
inc
out
lock
jecxz
pop
shlb
and
stc
push
sahf
lahf
lret
jecxz
lahf
inc
push
insb
mov
mov
mov
aad
das
fdivl
mov
imul
mov
sbb
es
in
xchg
inc
inc
sub
mov
fld
push
popa
xchg
jo
in
jge
inc
and
loopne
test
out
arpl
xchg
pop
cmp
pop
idiv
jno
andl
lea
iret
push
aam
shrb
jnp
clc
data16
dec
sbb
and
cld
adc
dec
jb
scas
stc
loop
pop
cld
inc
fcomps
lock
stos
int3
jno,pt
dec
xor
imul
push
inc
xchg
imul
fidivs
sub
xchg
scas
stos
push
cmpsl
mov
dec
sbbl
cld
push
cld
push
cmp
std
add
shl
add
mov
gs
fdivl
in
cmp
push
enter
fisubrl
mov
dec
rclb
aad
rep
insl
movb
shr
xchg
pop
insb
dec
jle
mul
lds
sub
xor
push
pop
outsb
lahf
orl
cli
adc
push
push
sarb
push
pushf
lods
mov
cmp
ss
pusha
mov
outsl
push
rcrl
stc
idivb
sub
lahf
adc
test
call
and
rorl
in
mov
out
sarb
js
pop
jae
call
xchg
push
lcall
mov
idivb
jo
negl
int3
dec
jae
cltd
or
mov
cwtl
inc
inc
call
mov
mov
adc
adc
jecxz
xchg
stos
in
xlat
mov
mov
fs
test
mov
xchg
jmp
lods
jge
outsl
mov
inc
sbb
les
cmpsl
adc
jmp
adc
jne
mov
daa
adc
dec
adc
lret
scas
dec
fmuls
mov
add
xchg
xchg
mov
data16
shrl
push
je
mov
aas
mov
das
mov
pop
ds
daa
xchg
pop
cmp
rorl
mov
cmp
cwtl
nop
add
cmp
loopne
addr16
cmp
stos
cmp
inc
mov
adc
flds
jae
adc
pop
loope
das
icebp
lds
lret
sub
push
lds
cli
int
sar
sub
push
outsb
xorb
ljmp
movsl
xor
test
xor
std
cmp
sbb
jg
stos
leave
orl
xor
fisubs
dec
bound
or
mov
push
mov
test
imul
adc
sub
and
xor
notb
sub
repnz
clc
ret
add
ret
lods
xchg
icebp
repz
jecxz,pn
imul
rolb
pop
scas
mov
mov
push
pop
xor
push
xor
loope
rcll
icebp
fs
orb
jo
inc
out
pop
jns
inc
cltd
repz
mul
mov
and
add
add
lcall
inc
push
adc
mov
imul
ja
es
sbb
push
insb
mov
adc
adc
sub
dec
inc
rclb
dec
push
arpl
nop
xor
cmc
repz
in
stc
dec
jbe
mov
xchg
xor
in
js
mov
mov
mov
test
adc
sub
add
dec
cwtl
popa
cli
adc
push
sub
jl
and
rcll
je
imul
push
icebp
dec
popa
push
in
mov
test
push
js
jnp
dec
test
sbb
jecxz
cmp
int
lods
pop
jle
ds
mov
jmp
and
daa
or
sbb
leave
jne
dec
mov
loope
cmp
sbb
or
daa
mov
call
mov
pop
inc
inc
lods
out
popf
stc
addr16
add
pusha
mov
movsl
mov
and
ror
cmp
push
cmp
mov
test
mov
or
ja
mov
mov
cmp
ret
sarb
cmpsl
cmp
cwtl
pusha
inc
mov
add
lods
mov
std
fbld
mov
sub
push
dec
or
or
aad
shr
cmp
shlb
dec
push
dec
mov
cmp
pop
mov
add
rcrl
subl
ljmp
sub
dec
les
mov
pop
das
popf
mov
test
ss
sbb
jns
fs
pusha
fildl
xchg
and
shl
scas
xchg
aaa
je
sahf
mov
ss
fldt
in
dec
or
sarl
jbe
add
or
jge
ja
jmp
shlb
fucomi
inc
dec
jp
stos
pop
cmpsl
and
fisubl
mov
sahf
adc
aad
fldlg2
test
xchg
insl
mov
xor
inc
aas
cld
mov
lock
aaa
jle
sub
lcall
les
add
push
stc
adc
xlat
sbb
iret
inc
es
pop
fdivl
adc
outsb
and
mov
insb
mov
daa
mov
int3
rolb
arpl
mov
mov
loopne
sarb
cmp
mov
adc
enter
ror
jnp
ret
and
xchg
cmp
inc
cmp
cmp
clc
mov
fs
dec
idivb
imul
mov
pop
add
sti
sbb
movsb
xchg
nop
sub
xorb
shlb
sbbb
adcb
lea
mov
jecxz
push
shl
cltd
test
enter
mov
or
pop
mov
inc
out
shrl
xor
or
sub
pop
scas
cwtl
adc
cmpsb
cmp
andl
cs
cmp
sub
or
in
in
out
popf
add
mov
dec
fnstsw
and
pop
daa
leave
or
sbb
sahf
dec
push
ja
mov
pop
rolb
cmp
push
sti
loope
outsl
and
dec
ret
bound
dec
shl
hlt
sub
fimull
push
test
jp
mov
insb
cmp
dec
popa
jno
push
sbb
lea
adc
or
or
ss
lahf
push
and
add
cmc
or
andb
lds
fs
sub
hlt
dec
test
cmp
fisubrs
les
int3
pop
lcall
andb
sti
inc
out
cmp
arpl
je
ljmp
out
nop
outsb
mov
or
cmpl
imul
stc
xchg
cwtl
add
pop
push
adc
cmp
ret
or
mov
mov
loop
aaa
adc
pop
mov
mov
mov
pop
imul
xchg
enter
mov
and
adc
xor
and
std
or
and
xor
outsb
dec
jb
sbb
push
loop
fsubs
inc
add
rcl
sbb
push
mov
mov
fwait
movsl
rcrb
sbb
pop
popa
dec
insb
ds
jo
and
lods
mov
sbb
or
jg
xchg
mov
jmp
fwait
jmp
cmp
or
gs
dec
and
scas
subl
aad
xchg
and
imul
stc
xor
cld
int
jb
cmp
cmp
fistpll
pop
aaa
clc
test
mov
int3
pop
scas
insl
add
mov
jecxz
or
push
cmp
push
mov
fwait
push
ja
pusha
sbb
jb
imul
push
jge
clc
adc
cmp
sub
push
in
lock
pop
addl
dec
jle
imul
in
movsb
xor
ds
mov
mov
test
cmpsb
xchg
test
xor
xchg
pop
push
or
aas
daa
fdivl
add
adc
adc
xchg
or
stos
movsb
push
jp
adc
insl
test
cmp
cs
xchg
cltd
xorb
je
pop
jb
xor
ficoml
cld
xchg
sbb
call
mov
sbb
or
xchg
xchg
cmp
lret
inc
fidivrl
cmp
push
cmc
mov
inc
and
and
pop
sbb
lret
mov
sub
mov
shl
jmp
and
and
fcompl
mov
xchg
mov
data16
mov
movsl
in
mov
les
scas
fwait
je
lods
dec
xor
cmp
lret
outsl
nop
gs
ret
and
sbb
sub
nop
sub
faddp
das
or
pop
sub
cmp
jno
dec
rclb
ljmp
cltd
arpl
cmc
aam
outsl
lcall
sbb
sarb
lods
sbb
cmp
push
mov
adc
push
iret
pop
pop
xor
aas
loopne
add
mov
pop
int3
pushf
popf
push
sbb
mov
xchg
jecxz
mulb
pop
adc
int
aam
fsubrp
notl
pushf
add
jnp
xor
jge
cmc
and
xor
push
xchg
enter
loopne
addl
cwtl
jmp
lods
mov
insl
mov
push
jmp
ss
mov
jge
mov
and
cs
mov
add
xchg
push
push
and
inc
add
mov
xchg
cltd
aam
in
mov
xor
sbb
pop
inc
jmp
aaa
ss
test
into
xor
fwait
aam
mov
cmp
popa
mov
lahf
xlat
mov
adc
push
ret
clc
leave
sub
lods
jge
mov
add
mov
leave
in
sub
test
mov
xor
in
add
push
jecxz
dec
not
pushf
mov
leave
push
mull
push
leave
mov
cmp
cmp
pop
ljmp
bound
scas
pop
in
mov
adc
jo
mov
lcall
loop
aad
fucomp
and
and
ljmp
add
sbb
add
dec
in
dec
jbe
inc
add
and
push
jge
sub
fcmovne
fimull
xchg
mov
rorl
xchg
sub
stc
ficoml
outsl
mov
jns
stos
mov
sbb
or
sbb
out
test
rorl
cwtl
dec
xchg
jge,pn
xchg
xchg
or
sarb
dec
cld
adc
mov
iret
xchg
insl
clc
enter
in
mov
icebp
pushf
pusha
ss
outsb
xor
cwtl
jecxz
pop
push
jns
mov
adc
lock
mov
xchg
andb
repz
xlat
dec
jle
sbb
stos
sarb
pop
add
mov
ljmp
ret
push
dec
pop
or
repnz
loopne
mov
shrl
add
call
adc
sub
pop
push
xchg
outsb
bound
add
pop
add
ja
inc
xchg
lods
mov
enter
sbb
jg
shll
sbb
push
mov
cld
repnz
scas
andl
outsb
pop
imul
rcrl
mov
ds
rcll
mov
notb
arpl
lret
pop
in
jmp
xchg
pop
das
aaa
outsb
pop
mov
addl
cmp
or
sub
push
xchg
cmpl
jnp
dec
aas
pop
inc
jne
jno
xor
and
je
sbb
mov
dec
cmp
mov
outsb
add
adc
mov
pop
aad
jno
fcoms
cld
mov
imul
js
fdivr
fcompl
sbb
out
sbb
rclb
pusha
outsl
fimuls
imul
sbbl
in
rclb
xchg
and
loopne
cmp
lahf
inc
add
cmp
daa
cmpsb
push
outsl
or
mov
or
divb
push
out
sbb
test
frstor
mulps
mov
xchg
lods
adc
testb
in
sbb
subb
or
add
jb
dec
adc
or
and
sbb
and
out
pop
adc
add
frstor
inc
pop
add
mov
mov
aad
mov
or
xchg
or
mov
jae
in
jne
icebp
and
into
fwait
ljmp
mov
dec
shll
out
or
sbb
ja
test
sbb
or
cli
bound
ja
mov
ud2
orl
inc
and
repz
pop
adc
cmpsl
sbb
adc
lea
ss
test
ja
clc
movsb
in
inc
jno
jo
jle
push
cmp
and
xchg
sbb
inc
adc
iret
inc
inc
xor
imul
adc
jns
mov
insb
mov
lahf
jmp
ret
cltd
shl
jecxz
fwait
out
fidivrl
and
jg
nop
xchg
test
nop
fcoml
and
das
js
xchg
xor
sbb
shl
mov
xchg
fmuls
push
mov
dec
test
ljmp
xchg
rdmsr
pushf
jl
xor
into
jge
inc
cwtl
pop
jnp
sbb
sub
cmpl
inc
pop
mov
pop
and
mov
out
mov
aam
jmp
or
gs
xchg
cmp
cltd
nop
subl
out
nop
daa
lds
in
notb
adc
imul
cmp
call
sbb
xlat
mov
adc
mov
jl
out
add
mov
mov
push
and
fnstsw
and
xlat
push
fbstp
add
shll
and
xadd
iret
repnz
fldl
cltd
mov
lret
and
gs
adc
or
orb
cmp
and
adc
xchg
aas
enter
xor
jp
movsl
jmp
dec
clc
sbb
jbe
mov
stos
and
pop
pushf
cmpl
mov
inc
lret
pushf
inc
pop
int3
add
fcoms
and
sub
mov
jg
mov
push
cmp
jg
sub
inc
push
dec
and
mov
add
dec
xor
jne
icebp
pop
dec
sub
scas
icebp
scas
pop
cmpsb
movsl
dec
out
and
mov
xor
lock
sahf
xchg
xchg
xchg
mov
inc
shlb
and
imulb
adc
sbb
mov
xor
pop
add
test
pop
inc
pushf
call
call
in
ret
in
jge
dec
jg
std
adcl
movsl
push
or
mov
rcrb
fs
arpl
hlt
sarl
jo
js
scas
sub
xchg
movsb
xorl
adc
mov
add
cmp
cmp
iret
push
cmc
lds
cmp
loopne
push
and
jbe
xor
das
fwait
pop
mov
or
insb
cs
fs
sahf
push
or
hlt
push
xchg
xor
mov
xorl
outsl
adc
pop
daa
pushf
imulb
or
sbb
push
pusha
xchg
push
pop
push
push
lret
ljmp
inc
mov
shl
fistpll
ss
jnp
push
jno
or
mov
or
cs
adc
dec
int
repz
aaa
push
rclb
dec
out
xchg
clc
cwtl
jp
adc
xchg
cmpsb
sahf
inc
in
inc
in
mov
adc
push
repnz
xor
xorl
fisubs
jecxz
push
mov
dec
mov
mov
mov
sbb
adc
rol
mov
shll
jecxz
add
or
js
in
pop
add
xor
arpl
popa
add
out
outsb
jae
pusha
jl
inc
pop
fistpl
push
inc
adc
push
incb
push
adc
push
adc
gs
out
push
getsec
pop
xor
mov
add
push
lahf
push
rorl
sbbb
cmp
ds
repnz
in
outsl
add
dec
and
out
mov
mov
jge
int3
jg
outsl
adc
mov
or
mov
ret
adc
jg
inc
add
arpl
popf
fnsave
lea
mov
adc
in
cli
pop
lds
cmp
and
cmp
test
pop
push
cld
orb
orl
popf
xchg
pop
dec
fmuls
cmp
push
enter
insl
pop
push
inc
jo
in
sbb
xchg
mov
pop
jmp
mov
dec
mov
cmp
mov
and
fsubr
scas
jecxz
lahf
repnz
push
ficomps
dec
shl
mov
insb
jle
mov
sbb
or
lds
lret
pop
pop
inc
pop
test
lcall
adc
rolb
inc
inc
xor
mov
inc
sub
dec
mov
lahf
jg
cmpsb
stos
pop
xchg
mov
cmc
or
add
sub
sub
jmp
or
mov
xor
adc
dec
gs
enter
call
outsl
mov
pop
push
fwait
stos
mov
out
pop
imul
xlat
sub
fisubrl
xor
les
sub
fstl
inc
sub
push
add
or
cmp
and
mov
in
je
sahf
dec
sbb
push
sub
movsl
mov
push
test
roll
ja
imul
dec
inc
mov
dec
mov
movsb
dec
mov
cld
enter
xchg
insl
into
dec
aam
enter
sub
out
pushf
rclb
jmp
cmp
sub
or
ficompl
hlt
xchg
dec
xor
enter
xchg
mov
add
sub
cltd
sbb
xchg
or
mov
sub
lcall
lock
aad
adc
jecxz
pop
mov
dec
lret
xchg
ljmp
js
and
cmp
scas
mov
pop
repnz
aam
and
jno
sti
test
data16
out
mov
jae
int3
aad
and
outsb
hlt
in
mov
rcll
stos
mov
loope
push
pop
idivb
sbb
insb
cmp
loop
mov
nop
dec
stc
mov
xchg
push
ljmp
fdivs
push
push
add
inc
daa
repz
in
pusha
daa
sub
shrl
hlt
push
les
jg
xorb
xchg
fsubrl
jb
in
mul
stos
mov
sti
xchg
popf
adc
cmp
and
addr16
sub
and
push
cmpb
dec
add
lods
jecxz
sub
jl
pop
xchg
xor
dec
dec
dec
mov
out
inc
test
add
mov
leave
nop
push
sbbb
jmp
xchg
pop
add
mov
jnp
mov
stc
jle
jp
cmp
mov
cmp
sbb
punpcklbw
push
dec
adc
mov
hlt
out
mov
data16
imul
jecxz
xchg
fld
or
lea
ret
scas
dec
xor
xchg
in
xor
and
enter
jns
les
cli
pop
das
xchg
pop
push
stc
loop
mov
lods
pop
enter
lret
test
sbb
lds
fimuls
mov
xchg
inc
scas
mov
xchg
sbb
jo
jae
loope
scas
in
adc
mov
movsb
cld
adc
sahf
inc
out
call
cs
xor
add
test
pop
jne
pop
dec
and
ss
mov
leave
ljmp
fs
inc
push
scas
add
xchg
jb
pop
push
pop
add
repnz
sbb
mov
or
imul
movsl
or
mov
aam
jbe
mov
aam
cmp
push
mov
repnz
mov
ds
dec
jbe
test
int3
bound
iret
push
test
scas
xchg
xchg
fadd
xchg
iret
insl
ret
and
insb
pop
je
fstpt
cwtl
lcall
jle
and
mov
xchg
adc
mov
gs
xchg
xchg
loope
mov
std
lock
xor
pop
xor
test
in
inc
inc
xor
jno
push
dec
lcall
inc
and
ret
in
fildll
or
repnz
adc
push
test
lods
xchg
scas
nop
cmc
mov
gs
xchg
pop
mov
popa
add
aam
mov
gs
dec
cwtd
fiaddl
fstps
sbb
insb
lods
mov
lahf
ret
mov
fwait
xchg
mov
imul
cmp
imul
xchg
icebp
mov
stc
inc
cld
aas
hlt
mov
shrb
xor
mov
popf
xor
cmp
mov
into
aaa
xor
dec
sub
xchg
jbe
sbb
dec
test
ret
shlb
jne
xchg
mul
shlb
and
enter
mov
clc
jnp
jne
mov
mov
cmp
hlt
in
lahf
xchg
mov
xor
push
jne
lcall
add
push
out
in
movsl
push
arpl
push
mov
dec
stos
sbb
sbb
pop
gs
mov
les
jge
cld
xchg
std
inc
rol
into
xchg
mov
xlat
shlb
push
pop
jo
ffreep
cli
adc
pop
push
outsl
sahf
push
mov
out
jbe
add
outsl
xor
imul
xlat
mov
jl
dec
insb
fcomps
adc
and
in
push
push
inc
lods
in
mov
xchg
add
jmp
in
ljmp
cwtl
ja
test
sub
push
stos
xor
shr
cmp
mov
in
fisubs
sbb
jg
into
jno
jle
inc
shlb
clc
xor
clc
add
add
test
test
filds
mov
jp
ja
loop
daa
dec
je
sahf
ret
xor
les
test
jae
out
cwtl
adc
movsb
scas
jne
push
push
in
sbb
fcomip
jno
frstor
cli
and
jno
loop
xchg
xor
aad
bound
fldl
in
test
addr16
jo
loopne
or
rorl
push
lcall
xor
xor
dec
or
andb
mov
and
cmpsl
cwtl
or
mov
fld1
sbb
push
mov
pop
cs
push
imul
push
xchg
sub
push
cmp
rolb
or
in
hlt
pushf
out
hlt
mov
xor
int3
xchg
jno
mov
xchg
jb
cld
add
pushf
jge
mov
mov
loopne
jnp
sub
or
repz
outsb
hlt
jnp
cmp
mov
sysenter
jbe
aad
cltd
cmp
sbb
not
or
ljmp
cmp
ret
in
add
leave
ja
dec
pop
insb
pop
movsb
or
std
xor
inc
sub
fdivr
push
cmp
inc
jb
jecxz
or
adc
add
inc
testb
push
ja
xlat
add
push
ret
ss
sarl
mov
adc
jae
jl
lcall
ds
mov
add
pushf
mov
mov
sahf
xchg
xchg
push
mov
jle
dec
adc
cmpsl
inc
sbb
add
pop
push
pop
into
xchg
scas
xchg
out
rclb
ss
sub
pop
mov
ret
out
push
andl
pop
and
add
xorl
clc
loop
int
sbb
add
adc
push
and
mov
ret
aas
mov
sbb
ret
jno
push
mov
cmp
lcall
test
mov
jp
cmp
mov
xor
xor
lret
jl
sbb
sbbb
jl
jo
pusha
sbb
and
stc
pushaw
push
test
data16
xchg
icebp
cmp
inc
sub
mov
pop
cli
xchg
insl
cld
or
gs
shll
push
enter
cmp
stc
aad
sbb
cli
and
sub
call
push
in
mov
mov
mov
xchg
sub
mov
popa
mov
rclb
xchg
adc
inc
inc
int
cmc
mov
popa
pop
xorb
mov
xor
not
push
mov
cld
dec
jmp
fwait
push
hlt
jge
call
pusha
pop
sub
aad
push
mov
cltd
mov
mov
mov
das
aas
adc
cmp
push
outsb
stos
pop
mov
sbb
ja
insl
scas
fmuls
ss
and
mov
mov
imul
mov
lcall
cld
mov
mov
xchg
xchg
pop
mov
mov
xor
in
shll
aas
push
test
sbb
stos
push
xchg
mov
mov
sub
push
sbb
mov
jns
je
push
pop
and
add
decb
rcll
adc
sub
mov
mov
pushf
mov
push
enter
sub
cmc
add
inc
iret
sbb
pop
aam
repz
loop
lahf
dec
sti
dec
in
fcmovb
mov
pusha
je
or
leave
scas
cwtl
mov
dec
imull
shlb
adc
sbb
push
lcall
in
ffree
adc
push
sbbl
or
mov
mov
popf
mov
add
push
sbb
adc
inc
mov
mov
xor
sub
arpl
push
es
jp
loop
inc
xor
mov
rcrb
frstor
repz
leave
xchg
andl
pushf
cwtl
or
xor
scas
lods
mov
addr16
gs
addr16
shrb
mov
test
inc
daa
jns
push
push
dec
adc
jecxz
mov
add
mov
cmp
fwait
cmpsb
insb
idiv
xor
adc
fwait
add
pop
push
cmp
xchg
fidivl
or
fwait
push
gs
mov
loope
jns
iret
aad
and
pop
outsb
mov
insl
sbb
jno
xor
jb
in
xchg
ljmp
js
push
and
push
inc
lahf
imull
mov
dec
adc
ret
fmul
sub
add
add
xchg
addl
xchg
jmp
mov
and
les
sub
icebp
lcall
xchg
lods
stos
mov
ja
jp,pn
inc
xor
push
cmp
es
sbb
sarb
movsb
bound
test
mov
inc
mov
jp
pop
pop
push
dec
xchg
ret
jg
push
push
sahf
aaa
aaa
xchg
adc
push
xor
mov
fstpl
int3
xor
add
jecxz
ficomps
jb
mov
pushaw
mov
adc
call
stos
lret
mov
pop
adc
xor
arpl
out
pop
and
lret
lea
jnp
bnd
pop
test
xchg
fidivrl
outsl
movb
imul
push
outsb
in
stos
out
adc
dec
ja
jae
movsb
out
pop
cmpsl
sbb
repz
fstl
mov
dec
cld
in
or
sbb
aam
mov
cmpsb
test
sub
popa
popf
sub
or
pop
add
push
adc
cmp
push
cli
aaa
popa
mov
adc
jmp
pop
dec
test
call
loope
shrb
push
test
fcomps
ret
imul
xchg
mov
push
aaa
mov
mov
jge
add
mov
pop
cwtl
loop
sbb
lock
call
pop
cltd
aad
cltd
pop
lahf
xor
pop
lret
mov
test
mov
xchg
loop
test
mov
cli
in
mov
and
je
sar
test
or
push
add
adc
pop
mov
lock
cmp
mov
stc
scas
push
mov
xchg
test
mov
clc
sub
push
imul
or
jns
shr
jb
mov
and
add
jns
xchg
push
call
pushf
test
fidivrs
in
das
rclb
push
shrl
inc
jecxz
enter
orb
mov
push
or
fdiv
lret
xchg
cmp
insl
add
fcom
mov
cmc
leave
pusha
or
outsb
xor
mov
scas
xchg
repnz
xchg
mov
dec
sbb
cs
lahf
lcall
cwtl
inc
loop
jne
out
lea
pop
dec
add
out
jp
pop
push
jl
jmp
cmpb
aam
fnstsw
sbb
pop
cmp
std
pusha
ja
pushf
add
mov
imul
xchg
xor
jb
cmpsb
jecxz
scas
pop
jo
or
dec
lds
stos
push
jg
cli
mov
test
dec
cmpsl
jno
jecxz
repz
dec
xchg
mov
fcmovnb
adc
int3
cmp
cmpl
inc
clc
clc
add
lret
mov
mov
push
sbb
or
pop
lds
pop
and
mov
scas
and
mov
in
jmp
sub
mov
mov
jae
icebp
sub
negb
sbb
inc
or
outsb
or
pop
fidivs
popa
iret
xchg
outsb
mov
cmp
adc
jg
clc
mov
cmpsl
sub
aam
aas
call
xchg
out
adc
popf
lea
fistpl
aaa
mov
std
inc
mov
aaa
cmp
call
outsb
sub
dec
add
or
jb
notl
push
ss
jmp
sbb
and
push
pop
adc
push
cmpsl
out
fwait
loop
jg
xchg
shr
ja
test
cmp
mov
shll
mov
xor
mov
and
sub
mov
jecxz
pop
lret
into
sub
mov
out
add
dec
adc
and
push
movsl
jae
shlb
in
loopne
movsb
and
pop
push
add
inc
lahf
into
mov
fistpll
add
sbb
pop
xchg
clc
xor
sbb
stos
mov
sub
lds
loope
loop
and
int3
adc
sarb
pop
shl
add
push
arpl
or
and
pop
mov
xor
xchg
xor
xor
cs
push
js
xchg
roll
dec
je
test
sbb
add
jg
inc
add
jns
push
dec
mov
mov
lcall
sub
jb,pn
insb
pop
stos
dec
int
or
jecxz
sti
xchg
inc
xorb
cwtl
loope
test
xchg
idiv
outsb
lret
dec
xchg
dec
cmp
rcl
xchg
lea
int
sbb
jns
xchg
pop
icebp
cmp
js
mov
dec
cltd
es
addr16
jnp
mov
xchg
and
fists
pusha
push
not
pop
into
repnz
mov
int
pop
add
xlat
dec
adc
add
mov
out
pop
lds
popa
clc
stc
mov
inc
xchg
pop
cld
jl
lea
xchg
repz
push
gs
push
decb
and
push
jae
push
out
cld
adc
or
sub
adc
inc
jp
mov
mov
xchg
out
xchg
hlt
mov
and
sub
jo
stos
and
xor
es
jmp
cltd
or
push
int3
addb
lock
dec
push
jno
das
dec
push
popf
subl
imul
mov
aaa
dec
lds
push
test
pop
mov
out
sub
aaa
mov
out
sbb
flds
add
jl
clc
mov
pop
push
dec
xlat
mov
jle
nop
arpl
test
test
stc
xchg
pusha
ljmp
nop
adc
mov
out
sub
dec
pop
sub
cmpsb
push
jl
cmp
xor
jns
pop
das
outsl
dec
and
out
and
ljmp
sub
add
xor
adc
lcall
orl
mov
lcall
dec
inc
inc
ret
cmc
test
push
cld
cld
das
cmp
dec
pop
mov
cltd
jne
mov
sarl
sbb
mov
pop
stos
lods
pusha
aas
inc
xchg
sbb
jge
into
push
rclb
inc
test
pop
imul
mov
shlb
enter
add
lds
daa
cmpsb
mov
jg
or
es
fidivl
dec
sbb
aam
jae
push
jne
push
xchg
sub
sub
mov
inc
int3
ficomps
cld
push
icebp
les
mov
mov
je
fmulp
icebp
and
cmp
out
out
stos
pop
dec
xchg
add
sub
stos
xor
push
mov
repz
pop
add
out
jg
out
and
xor
pop
adc
or
mov
rclb
imul
std
mov
das
lock
dec
pop
mov
or
dec
test
push
test
addr16
xchg
pop
out
xchg
pop
push
cwtl
pop
je
fcomps
data16
add
cmpb
rclb
test
xchg
fsubrp
mov
sbb
jbe
pushf
xor
sub
mov
stos
mov
push
mov
imul
shll
add
nop
fstl
xchg
leave
cmp
insl
push
sahf
push
or
inc
pop
inc
stos
mov
xchg
int3
pushf
adc
lods
ljmp
push
mov
push
mov
and
int3
stos
or
jne
mov
cmp
add
push
iret
mov
cmp
cmp
in
push
call
and
mov
cmc
fildl
pop
arpl
and
xor
adc
adc
add
rorb
divb
dec
insl
enter
rolb
push
push
data16
mov
xor
sub
imull
cld
cmpsl
popa
popa
adc
gs
jb
sbb
in
or
pop
pop
pop
mov
popl
jmp
pop
rclb
sbb
mov
xor
dec
rclb
test
jle
mov
mov
dec
mov
daa
add
int3
fwait
orb
sbb
sub
test
nop
push
packsswb
sahf
mov
fnstsw
or
das
add
mov
lcall
pushf
jno
enter
dec
imul
or
xchg
add
push
es
out
mov
push
sub
lods
xchg
xor
pop
adc
lods
shrl
mov
aad
or
outsb
jp
lods
mov
xor
push
rcr
daa
add
push
dec
push
inc
xchg
cmpsl
xor
jae
jno
cltd
fs
jecxz
jge
jle
sbb
lods
repz
push
add
jne
lahf
sbb
add
push
inc
ret
rorb
cmp
fisttpl
insl
gs
xchg
hlt
push
dec
mov
imul
sbb
in
xor
pusha
add
test
or
inc
clc
xchg
lcall
sbb
fstl
xlat
push
rcl
repnz
gs
xchg
stos
roll
sub
adcl
or
inc
scas
imull
mov
lock
add
lea
fistpll
push
mov
stc
dec
adc
test
push
mov
fldt
or
mov
jle
scas
dec
or
dec
in
inc
movsl
sub
int3
mov
or
push
int3
movsb
pop
jge
jae
add
insb
adc
mov
loope
mov
test
mov
xchg
dec
fsubrl
xor
std
adc
xor
sbb
shl
outsb
sbbl
add
setge
sbb
ja
subl
and
mov
clc
lahf
push
std
ret
inc
dec
mov
mov
xchg
int
xor
mov
jle
xchg
cmp
add
cmp
xchg
insl
pop
negb
outsl
push
imul
ss
test
jb
cmp
jb
mov
repz
jle
dec
jp
and
cmpsl
stos
insb
and
add
adc
insb
fstp
and
push
lret
repz
or
into
cmp
repnz
add
xchg
and
jl
dec
xor
mov
inc
jge
mov
jno
mov
add
adc
arpl
lret
xor
sbb
xchg
int
push
out
mov
dec
cmpb
fstps
mov
push
xchg
push
shl
icebp
sbb
sti
sub
fldpi
int
loop
mov
test
out
push
dec
add
sbb
sti
xor
sbb
inc
sub
dec
jle
or
std
cltd
xor
je
imul
into
imul
flds
push
das
sar
inc
int
fstl
dec
orb
std
sub
pop
xchg
nop
dec
pop
int
mov
cmp
rorl
stos
xchg
cwtl
sar
out
inc
and
cmp
int
jb
insb
dec
add
cmp
adc
push
adc
xchg
mov
jge
mov
outsl
inc
incb
push
adc
fsubrs
call
bound
ret
nop
sub
into
sti
cmp
divl
icebp
push
or
fwait
mov
dec
inc
pop
cltd
sub
and
xchg
fnstsw
cmpsb
pushf
adc
cmp
inc
xchg
cmpsl
mov
movsl
xchg
fs
adc
xor
mov
addr16
add
pop
mov
jle
inc
inc
scas
aad
jnp
jbe
xchg
push
gs
push
cli
or
sbb
lret
push
test
jo
lret
out
imul
cmp
push
or
dec
jae
mov
loop
inc
roll
push
cwtl
mov
loop
fcompl
push
push
xchg
test
lahf
pusha
mov
and
xor
mov
mov
xor
pushf
add
mov
push
pusha
orb
gs
pop
mov
push
add
cmc
test
outsl
xor
mov
shrl
adc
dec
pop
popf
adc
in
mov
and
cmp
add
pop
jmp
and
or
xlat
dec
and
inc
xchg
mov
icebp
or
inc
mov
inc
inc
data16
sub
jnp
cli
imul
addb
imul
mov
test
mov
mov
or
aad
or
dec
pop
mov
mov
jne
mov
outsb
xor
rcrb
loope
cmp
cmpsb
jns
mov
mov
fs
cwtl
mov
inc
mov
xchg
push
pop
mov
in
mov
fwait
aas
jb
subb
add
test
scas
jns
test
stos
dec
scas
daa
mov
mov
fsts
sbb
arpl
mov
rcrb
xor
sbb
pop
mov
lock
jb
add
mov
jge
push
pop
lcall
lcall
sub
into
cli
dec
xor
mov
inc
push
ss
mov
mov
loopne
sub
dec
jae
cmp
ja
jns
sbbl
push
xor
aad
cmp
rol
mov
testl
and
lret
movsb
mov
hlt
xchg
adc
mov
mov
outsl
out
inc
and
popf
aaa
in
frstor
fcomps
xchg
fdivs
and
push
sti
sbb
test
mov
or
jle
fbld
pop
cld
jg
jb
addb
fnstenv
mov
in
movsb
mov
mov
cmp
sbb
push
out
jb
adc
and
inc
sbb
adc
sbb
test
out
aas
insb
and
stos
push
lods
jne
adc
jle
repnz
cmp
jmp
addb
jle
int
test
xchg
stos
icebp
arpl
lcall
or
dec
test
into
push
fimuls
int3
lahf
mov
sbbb
jo
outsl
movsb
dec
repz
mov
fistpll
iret
xchg
add
pop
mov
pop
out
fidivrs
popf
lods
mov
lods
mov
add
out
mov
stos
mov
out
mov
xor
test
push
sbbb
mov
dec
xchg
push
jno
leave
les
popf
pop
rorb
int3
sub
sbb
loopne
push
addr16
add
jl
test
push
jge
and
iret
mov
test
dec
inc
mov
sbb
xchg
push
lret
xchg
aas
cmpb
rclb
inc
sub
lock
stc
and
or
mov
inc
int3
xorb
in
pop
jne
push
mov
jecxz
and
scas
sub
ljmp
jmp
lea
mov
jge
inc
icebp
or
pop
sbb
pop
xchg
adc
shlb
movsb
sti
test
cs
pop
into
mov
cld
mov
xorl
int3
mov
xchg
jb
stc
pop
mov
lahf
mov
sub
add
xchg
insb
push
or
inc
add
aaa
pusha
mov
xchg
push
ret
mov
pushf
bound
pop
and
pop
inc
lea
fdivs
sbb
repz
dec
fwait
push
rcrb
inc
leave
imul
je
sbb
or
dec
fistps
and
fs
std
or
mov
cmpsb
sbb
aaa
icebp
aaa
sbb
mov
cmpb
fmuls
lcall
scas
notb
lret
dec
jb
push
mov
and
fwait
xchg
jbe
push
mov
in
out
shr
cmp
inc
rorl
add
adc
mov
stc
mov
push
pop
sar
jno
dec
adcb
mov
movsb
xchg
fwait
cmpsl
ficoms
push
cli
lahf
or
adc
int3
repz
test
cmp
dec
aam
adc
mov
in
jne
mov
sub
js
ljmp
out
jmp
mov
sub
mov
mov
notb
daa
data16
clc
ret
dec
dec
lods
adc
out
cmpsb
cmp
pop
sbb
enter
xor
mov
sahf
nop
lcall
sti
inc
and
in
sbb
test
mov
popa
iret
arpl
and
dec
std
mov
mov
in
sarl
stc
cmpsl
push
lret
dec
sub
xor
mov
orb
and
jmp
mov
mov
xor
shlb
add
nop
mov
xchg
sti
je
mov
aas
inc
call
mov
addb
rcr
mov
jne
jge
jno
mov
pop
adc
imul
out
or
push
pop
sahf
pop
imul
inc
adc
xchg
inc
jmp
mov
mov
pop
jge
rorl
sbb
in
test
subb
andps
cltd
lock
xor
dec
outsl
jb
fdivl
mov
push
cmp
rcll
adc
pop
subb
sub
in
push
push
xor
aas
cld
xor
cwtl
and
adc
ret
lea
data16
xchg
jecxz
and
jecxz
ret
lods
inc
ror
jecxz
mov
ror
lret
mov
add
aaa
mov
test
inc
in
sub
imul
mov
pusha
in
sbb
pop
imul
mov
fistpll
add
adc
cmp
stc
nop
sub
leave
aaa
pusha
cmp
and
adc
pop
and
imul
pusha
imul
sub
sbb
mov
lahf
xchg
cltd
out
add
and
xchg
incl
negb
rcll
in
mov
test
pop
es
xchg
jns
pop
add
push
in
fimull
pop
data16
jle,pt
push
aas
and
cmp
pop
lahf
imul
push
shll
add
leave
pusha
test
jp
cmc
pop
in
rcr
xchg
les
ljmp
cmp
push
jg
sub
enter
ffree
test
aam
nop
push
dec
sbb
jbe
mov
mov
pop
cmp
push
addb
xor
loop
rorl
dec
rcll
pop
imul
push
shrb
xchg
fs
jle
cmc
ss
jl
inc
mov
je
mov
mov
outsb
daa
inc
pop
mov
out
test
fsubp
and
lret
jo
cmp
pop
rclb
ss
aam
fwait
enter
or
je
cmc
les
sub
lock
jmp
dec
mov
stc
sbb
push
dec
or
mov
cmp
std
outsb
jmp
xchg
xorl
lea
das
mov
add
add
mov
imul
inc
fstpt
and
sbb
ret
push
inc
cmpsl
addr16
lock
mov
loop
js
fnsave
mov
sbb
dec
jne
loopne
cmp
icebp
and
pop
push
jecxz
aas
xor
jl
jp
sahf
inc
in
je
dec
adc
out
das
js
shrb
sar
mov
mov
imul
js
movsl
fsubr
mov
cli
push
or
push
cmp
sub
inc
test
jns
ret
inc
into
clc
imul
fstps
push
aas
mov
idiv
jns
or
add
mov
sbbb
pop
inc
cmp
nop
insl
test
sbb
stc
mov
pop
insb
jge
pop
movsl
inc
rorb
lret
xor
test
int3
insb
jb
in
mov
sub
das
pop
cli
mov
mov
pop
insl
sarl
fisubl
subb
leave
push
push
stos
das
movsl
stos
inc
adc
push
mov
dec
fdivl
cmp
add
iret
dec
sbb
in
ljmp
addl
jg
out
or
sbb
rolb
out
xchg
imul
jge
push
sub
and
add
xor
inc
jecxz
pop
cmpsb
xchg
ret
add
xchg
in
cmp
dec
mov
mov
stc
adc
ss
iret
pusha
mov
imul
cmpb
fs
ret
sbb
add
fcmovbe
fwait
js
inc
jmp
into
repnz
rorb
out
push
divl
mov
jg
inc
mov
popa
sub
cld
pop
xchg
dec
mov
idiv
ja
andl
lret
lods
movsl
orb
or
inc
and
pop
xlat
pop
icebp
lods
inc
lcall
data16
xchg
xlat
jecxz
inc
imul
enter
arpl
lret
pop
lea
stc
cmpsb
mov
stos
loope
leave
or
push
lcall
mov
xor
xchg
mov
aam
scas
cmpsb
xchg
sahf
mov
lea
pop
xchg
xchg
outsb
mov
add
xchg
adc
sarb
int
mov
jbe
or
mov
test
push
arpl
sti
jmp
mov
pop
stos
xorb
sub
or
ja
iret
mov
js
jbe
xchg
cmp
or
pop
adc
pop
mov
xlat
push
test
adc
stos
addr16
adc
inc
cltd
sbb
xchg
lahf
aaa
pushl
ja
test
xchg
cwtl
mov
arpl
out
dec
insb
cli
inc
push
imul
fiadds
push
rorb
lods
test
pop
sub
push
mov
mov
fs
jmp
ljmp
dec
loopne
cmp
ja
lcall
inc
int3
mov
inc
sti
mov
pslld
push
fcomps
mov
pop
idivb
movsl
hlt
jecxz
test
imul
mov
in
inc
xchg
clc
mov
icebp
xchg
ds
add
in
hlt
aas
andl
out
xor
ret
cs
sub
xchg
push
add
out
xor
push
shrb
push
fs
leave
cli
addr16
and
out
std
sarb
mov
lods
pop
add
test
push
inc
sbb
inc
test
or
daa
push
sub
cmp
dec
iret
repnz
or
sub
cmp
push
nop
lcall
add
mov
aas
leave
pusha
pop
arpl
rorl
mov
insl
mov
imul
fs
or
hlt
adc
in
addr16
or
sbb
popf
es
mov
cmp
pop
mov
jge
dec
fwait
jl
jno
mov
dec
fsubs
sti
xchg
repnz
call
sbb
iret
mov
cltd
mov
or
inc
xor
lock
test
adc
sbb
or
popf
mov
sti
push
lcall
sub
test
jae
roll
lods
adc
aas
clc
mov
pop
hlt
fidivs
mov
dec
and
cmp
mov
pop
inc
inc
js
ja
push
mov
add
push
movsl
scas
cmpsb
aad
or
shl
mov
call
sub
mov
inc
jmp
pop
xchg
and
cwtl
dec
xor
lods
fadd
sub
mov
sub
rol
popa
push
jb
jmp
xchg
xchg
xor
out
lods
xchg
je
mov
mov
pop
jnp
sbb
js
sub
out
das
xchg
loop
notl
mov
sbb
imul
stos
xchg
adc
stc
push
lock
loop
and
mov
inc
mov
mov
mov
sub
mov
loopne
xchg
and
mov
bound
xor
push
sub
idivb
nop
cld
xor
pop
or
cmp
xlat
xchg
xorl
mov
jnp
dec
jmp
lock
push
lods
ficomps
outsb
and
cmp
js
bound
cli
or
mov
shrb
mov
shrb
orl
ret
push
outsl
nop
mov
cmpsb
scas
inc
fldl
ret
push
lds
ret
push
jns
int3
jg
in
pop
jno
aaa
jno
out
out
sub
and
inc
jge
shrl
adc
mov
cmp
cwtl
ja
xchg
mov
movsl
std
insl
repnz
inc
sub
loope
out
dec
dec
xchg
add
test
mov
lds
xor
jle
sbb
loopne
movsb
xchg
pop
adc
xlat
out
cli
and
inc
aad
and
xchg
sub
movsl
push
nop
pop
mov
subl
push
pop
icebp
lods
and
jnp
enter
xchg
xor
mov
in
add
cmp
ja
mov
test
inc
sub
lds
dec
sahf
mov
bound
add
or
lret
loope
fucomp
add
push
xchg
ljmp
jmp
or
sarl
pop
adc
stos
fs
je
leave
hlt
cli
cmp
cmp
jecxz
add
jp
iret
mov
test
outsl
jecxz
push
mov
ds
mov
jno
sub
outsl
test
pushl
out
sub
insl
out
incb
sbb
pop
pusha
aam
add
sub
mov
add
jnp
insl
xor
sti
mov
xor
sub
push
mov
add
fildl
fstp
mov
sahf
mov
in
test
ret
scas
sub
dec
test
loope
mov
add
sbb
xchg
mov
cmp
adc
add
arpl
dec
add
mov
inc
addb
adc
mov
mov
jl
pop
xor
push
dec
mov
inc
ljmp
xor
mov
adc
mov
add
test
or
je
sbb
fmull
dec
inc
inc
lods
push
push
nop
in
and
jo
mov
mov
adc
jl
enter
push
jge,pt
in
sub
inc
pop
test
loop
js
daa
dec
lret
jns
ljmp
xchg
leave
fsubl
andb
daa
xor
pop
lcall
dec
dec
xchg
fsubr
pop
mov
ret
cmovg
adc
push
sbb
sub
and
pop
sahf
jmp
mov
sub
in
popa
push
fnsetpm(287
inc
rclb
aam
mov
xor
cmp
cmpsb
jecxz
test
xchg
adc
nop
jmp
or
cmp
push
mov
and
cwtl
inc
scas
lock
sub
push
imul
mulb
sbb
xor
pop
fimull
mov
mov
jns
inc
push
sahf
lcall
lret
outsl
in
dec
push
loope
cli
iret
xchg
pushf
negl
movsl
pop
jnp
jecxz
test
push
xchg
jle
jne
mov
cmpsb
addr16
push
scas
xchg
nop
lods
pop
adc
or
mulb
pop
cmpsb
mov
ljmp
scas
fistps
sbb
cmp
cmp
or
sub
fidivs
xchg
insb
xor
mov
xor
test
and
push
test
mov
lret
or
jl
dec
cmp
cmpsb
inc
lods
enter
and
movsl
and
mov
xor
cmp
dec
pop
ljmp
cs
cmp
add
and
add
mov
frstor
negb
mov
adc
mov
ret
daa
xchg
mov
adc
cmp
in
adc
stos
adc
movsb
mov
loopne
fsubrs
cmp
in
xchg
popf
leave
push
push
dec
fdivs
inc
xchg
mov
add
sti
out
mov
jecxz
bound
add
mov
out
jns
iret
andb
jecxz
idivb
cltd
push
nop
mov
out
xor
mov
lret
jp
jo
xor
sti
mov
stos
lret
adc
sbb
mov
arpl
xor
add
cmp
mov
outsb
int3
dec
inc
cmp
inc
xor
inc
lcall
cmp
jp
dec
inc
sub
jne
jmp
iret
lock
jecxz
aad
test
or
pusha
or
mov
cli
out
jmp
dec
adc
mulb
cmp
jae
cmp
push
cmp
inc
sub
inc
test
mov
xor
fildll
stos
outsb
cltd
inc
dec
into
sub
cld
ja
sahf
push
scas
stos
cmp
inc
popa
shrb
out
arpl
jg
cltd
cmp
out
fucom
stc
std
insl
ljmp
xor
mov
insb
xchg
xchg
test
or
dec
daa
movsl
les
ljmp
repnz
jae
cli
adc
add
mov
cmc
testb
jbe
pop
cmp
mov
stos
das
test
inc
scas
jae
rcll
ja
sar
leave
in
lahf
jg
scas
dec
mov
jbe
mov
clc
and
xor
movsl
jnp
sbb
push
xor
rcrl
fstpt
mov
push
inc
outsb
mov
jl
repz
push
loop
sahf
xchg
mov
or
add
jecxz
inc
cmp
adc
or
sbb
and
pop
mov
push
or
push
inc
sbb
mov
mov
add
sti
hlt
adc
sub
clc
aas
sbb
gs
and
cmp
std
add
lret
lahf
push
das
lock
dec
inc
cmp
in
arpl
in
jne
xor
pop
mov
fsubrl
xor
pop
push
sub
mov
mov
call
jg
outsb
jmp
std
das
leave
xor
and
mov
out
out
dec
xor
dec
pop
rorb
inc
adc
sbb
mov
sbb
lahf
jecxz
pushf
mov
shl
push
jp
aas
imul
sahf
jmp
inc
movb
syscall
rol
into
jl
out
rorl
leave
inc
test
shll
inc
aad
pop
loop
lods
dec
mov
jge
pop
add
inc
pop
mov
adc
jp
sbb
or
jbe
bound
push
inc
sub
enter
jnp
cmc
or
xor
rorl
mov
ret
aad
shll
pop
aam
mov
push
fistpll
sbb
or
pop
xor
push
call
packuswb
loope
xor
adc
test
repnz
sbb
cld
add
pushf
je
lret
fidivl
mov
fcoms
mov
aas
into
and
mov
mov
pop
in
sbbl
push
pslld
insb
subl
mov
ljmp
mov
jmp
cmc
arpl
out
xor
sub
xchg
jnp
rcr
inc
pop
fcoml
dec
loopne
add
xchg
jle
lea
or
jo
push
hlt
xor
sbb
data16
neg
mov
call
int
xchg
fcompl
xchg
out
cmpsl
mov
jno
inc
cmp
add
cmp
mov
xlat
or
jl
and
shll
in
push
or
mov
in
aam
repz
sbb
adc
jp
scas
rcrb
jl
and
push
dec
adc
and
mov
inc
outsb
lcall
pop
call
xchg
add
pop
inc
sub
incl
cmp
leave
les
test
or
movsl
mov
insb
pop
mov
mov
es
popf
jg
insl
scas
push
dec
shrl
or
ss
in
mov
and
or
data16
xchg
lods
stos
dec
cmp
adc
mov
pop
xchg
sbb
xchg
ret
fldcw
nop
mov
pop
or
lods
insb
scas
std
push
dec
mov
ss
in
mov
dec
adc
jg
bound
mov
and
xor
inc
lds
and
jmp
call
add
cmpsb
out
mov
mov
dec
test
cli
or
pop
mov
scas
loop
add
aaa
rol
clc
dec
jns
insb
fld
xor
sbb
or
movsl
cwtl
cli
in
adc
push
xchg
int
daa
lock
inc
adc
imul
ja
jnp
cs
fnstcw
mov
out
bound
fcomps
outsb
xchg
push
and
adc
movsb
pushf
inc
into
pop
mov
cmpsl
idiv
mov
mov
lret
pop
jge
js
cmp
mov
std
aaa
scas
fs
fmul
leave
inc
mulb
adc
mov
jg
push
pop
lods
insb
mov
gs
inc
add
and
cmp
lcall
push
mov
jmp
nop
mov
cmp
push
call
orl
inc
cmpsl
shrb
mov
fbld
inc
dec
data16
sub
into
shlb
lods
aam
data16
or
aaa
leave
outsb
xchg
push
in
sub
xlat
aad
pop
in
in
push
push
repz
loopnew
icebp
sti
fmull
jge
jnp
xchg
jle
outsl
mov
js
addl
repnz
imul
outsl
cs
in
cmp
addr16
xlat
cltd
mov
out
xorb
push
sbb
test
in
popa
ljmp
mov
dec
les
sbb
xchg
les
xlat
jge
inc
or
mov
nop
inc
repz
jno
jbe
xor
pop
dec
or
xorl
inc
jne
pushf
adc
jg
or
mov
jnp
loop
mov
out
push
idiv
push
loopne
je
mov
dec
mov
mov
insb
dec
push
pusha
cmp
push
iret
cmpsb
inc
dec
pushf
decb
push
cmp
negb
sub
lea
divl
xor
test
sub
stc
loop
std
add
lods
imul
cmp
adc
shrl
imull
mov
jge
pop
imul
mov
imul
in
sbb
and
negb
pop
test
out
mov
cli
dec
adc
loope
sub
insb
push
mov
fwait
rorb
js
test
inc
xor
fstps
movsb
sub
sub
pushf
add
adc
jns
addr16
or
iret
imul
loope
mov
xchg
pop
lcall
sbb
test
int3
fbld
pop
xchg
imul
mov
paddusw
loopne
xchg
loop
aam
rol
lock
pop
jl
out
sbb
mov
in
mov
frstor
cs
dec
push
mov
adc
xchg
inc
xchg
adc
jg
gs
xor
js
sbb
aas
adc
fisttps
xchg
dec
adc
sub
sub
arpl
shrb
stos
insb
cli
xorl
push
pop
adc
mov
and
push
pop
jb
mov
aad
xchg
rcll
sub
push
cs
rclb
sbb
dec
fwait
push
dec
sub
xchg
mov
daa
fildll
cld
lds
inc
pop
cwtl
addb
pop
mov
imul
or
sarl
in
subl
rcll
cld
jns
mov
loop
cmpsb
jmp
enter
mov
movsb
ret
sbb
movnti
xor
daa
imul
push
test
aad
or
je
add
mov
pushl
fists
push
cmpsb
in
dec
imul
inc
mov
fnstsw
popf
mov
rorl
xchg
mov
aaa
add
ds
ljmp
stc
mov
pop
imul
lea
pop
fisubs
aas
add
add
and
aaa
dec
add
rcl
inc
cmp
mov
rcr
out
ror
pop
dec
pop
ss
jge
repz
mov
sbb
shl
imul
and
test
jle
dec
mov
pop
test
shrl
mov
cs
and
arpl
sub
fidivs
xchg
cld
mov
aam
lret
push
pop
sti
and
mov
rep
ljmp
jmp
sub
inc
insl
inc
lcall
pop
xlat
push
fdivrl
cmpsb
and
bound
pop
popf
mov
push
cmp
jb
push
fnstsw
or
sub
daa
cld
jle
arpl
xor
stos
fiadds
cmp
jns
lods
decb
push
sub
cmc
dec
and
arpl
daa
push
sbb
shlb
mov
jge
or
mov
fldln2
in
sub
mov
sub
scas
inc
or
or
mov
mov
popa
xchg
mov
mov
cmp
orb
mov
faddl
push
test
cmpb
jp
cmp
xchg
dec
add
lret
rol
mov
mov
cld
xchg
add
enter
mov
mov
sti
xlat
fdivrs
push
shr
testl
out
ljmp
call
imul
adc
movsw
mov
cmp
xchg
popf
adc
add
movsb
rorl
xor
cmpl
or
sub
xor
xor
clc
push
test
ja
or
dec
or
pop
ljmp
lret
insl
or
sub
xchg
xchg
sub
or
xchg
arpl
icebp
lret
fiadds
mov
out
mov
mov
sbb
sbb
enter
nop
mov
pcmpgtd
popf
je
cs
xor
add
outsb
xchg
test
int
and
or
subl
lods
sbb
stos
fldl2t
mov
or
xchg
js
test
jne
std
fdivrl
cmp
imul
xchg
mov
sbb
fcmovnb
ja
fcoml
xchg
push
or
mov
mov
jne
iret
loop
cmpsl
cltd
or
cmpsl
jecxz
cmp
xorb
mov
mov
dec
adc
dec
or
pop
or
mov
ret
andl
or
add
push
ljmp
inc
mov
inc
cmp
mov
movsb
or
aad
jns
notl
jae
sbb
icebp
movsl
dec
ss
shl
movsb
jmp
pop
addl
adc
scas
push
push
dec
push
movsl
movsb
addr16
sbb
jno
int
adc
je
mov
idivl
xchg
xchg
dec
pop
inc
iret
gs
stos
sbb
cmp
jb
cwtl
icebp
ret
int3
push
adc
xlat
jnp
outsl
and
pusha
insl
pop
std
pushf
xor
mov
aas
ret
std
out
cwtl
mov
negb
stos
xchg
add
add
daa
cmp
xchg
cli
dec
mov
and
cmp
into
inc
jns
inc
push
push
mov
push
inc
mov
es
dec
js
pop
dec
xchg
fimull
add
cmp
fiadds
call
push
pusha
mov
sbb
add
pop
add
rcrl
xchg
pop
cld
bound
in
fcmovnu
cwtl
fldenv
push
mov
js
xchg
lahf
push
ret
adc
sbb
divl
sbb
fiadds
jns
call
imul
in
stc
lahf
pop
daa
push
xchg
mov
pop
inc
jp
dec
into
push
inc
cli
imul
rorb
pop
inc
scas
jbe
cmpsl
adc
out
sub
jns
jnp
mov
sub
mov
aaa
arpl
popl
sti
inc
inc
cld
mov
sub
popf
insb
mov
ds
pop
push
dec
lea
xchg
jge
xchg
cwtl
sub
das
jb
xchg
sub
daa
clc
scas
cmpl
pusha
adc
test
pop
mov
mov
inc
add
sbb
push
stc
ret
stc
xchg
lret
mov
shll
lea
das
jns
mov
nop
int
shl
jge
in
push
mov
bound
add
xlat
test
jmp
mov
iret
add
jl
pop
adc
lock
xchg
xchg
dec
sbb
sbb
inc
cwtl
xor
sbb
pop
xorb
dec
jo
adc
ljmp
or
add
out
push
and
push
or
notl
push
data16
and
imulb
ds
dec
pop
fnstcw
push
pop
mov
adc
pop
fs
sub
ret
xor
inc
outsl
pop
mov
pop
cmc
iret
fisttps
aas
dec
repnz
xlat
xchg
mov
adc
ljmp
xchg
xlat
inc
and
sub
neg
repnz
xchg
pusha
sub
sbb
pop
jp
bound
sbb
xor
add
jp
in
or
add
or
pop
cmpsb
les
xchg
out
lods
xchg
fcom
ja
xchg
stc
mov
sbb
and
dec
test
sbb
sub
push
pop
scas
les
sbb
mov
or
pop
fimull
sub
mov
inc
test
jbe
mov
rcrl
lods
jp
add
dec
es
mov
lcall
adc
or
fadds
out
aaa
leave
mov
movsb
cmpsb
pop
fcmovb
sub
mov
pop
repnz
sub
fwait
mov
test
xor
sub
and
push
and
inc
loope
fdivr
xor
xor
xlat
fstpt
ja
cmp
insl
jbe
sahf
xchg
ljmp
jbe
sub
cmpsl
add
mov
in
mul
inc
pop
jo
mov
es
out
icebp
int
adc
lods
add
dec
fdivl
loope
pop
xchg
push
or
ss
and
rcr
fucomip
cld
sub
add
and
pop
dec
dec
ficompl
ss
jno
jnp
popf
xor
mov
cmp
jmp
xchg
mov
imul
add
sbb
or
cli
mov
dec
cs
push
mov
stc
test
add
addr16
out
pop
xchg
and
imul
mov
insb
and
jl
sub
in
in
cmp
mov
aaa
cs
push
imul
xchg
repnz
xchg
jbe
lea
in
lcall
xchg
gs
loope
in
cmp
pop
mov
addr16
pop
xchg
jne
mov
sub
es
stos
mov
lods
jns
cmp
adc
xchg
pop
nop
push
bound
out
out
sbb
sbb
int3
push
sub
mov
ds
js
and
fsub
xchg
mov
mov
dec
subb
inc
jne
mov
ljmp
sti
das
lsl
repnz
divl
sbb
cmp
mul
test
rcll
outsl
fstps
sub
sub
shrl
and
in
xchg
add
xchg
xor
nop
pop
testl
sbb
mov
xchg
test
xchg
in
test
lcall
sub
inc
lret
cmp
gs
sbb
sub
mov
das
and
xor
push
popf
sub
or
jbe
xchg
push
push
mov
data16
mov
das
inc
cmpsl
or
push
ljmp
jp
outsl
je
sbb
or
mov
ffreep
fabs
mov
cmp
pop
and
test
out
adc
or
dec
mov
inc
inc
push
inc
dec
mov
jge
jg
jb
sub
faddl
ret
cmpsl
jno
jecxz
or
or
inc
lods
popa
dec
adc
test
pop
lret
adc
cltd
sub
sbb
mov
and
mov
xchg
push
lret
fistl
cltd
sbb
icebp
dec
lds
jno
pop
icebp
loopne
les
sub
inc
pop
mov
add
dec
cmp
push
pop
fmuls
jbe
and
pusha
mov
adc
mov
popa
or
shlb
in
idivb
hlt
push
hlt
stos
test
pop
xorl
mov
pop
sbb
mov
push
imul
cld
or
std
sbb
mov
imul
stc
mov
fildl
stos
sbb
out
test
sub
pop
je
insl
xor
fnstcw
add
or
subb
cld
jne
or
hlt
ret
sub
insl
call
test
mov
pop
inc
filds
dec
mov
in
sbb
pop
pop
sbb
test
cld
out
pop
dec
iret
mov
fs
or
test
lods
lds
adc
adc
jecxz
repnz
stos
push
xchg
adc
or
add
pop
push
adc
mov
and
mov
mov
add
fdivr
incl
nop
jl
xor
out
xor
ja
cmp
add
mov
push
fs
or
and
and
jbe
fldenv
popf
jl
add
or
add
pop
and
pop
fisttpl
jmp
push
test
sub
les
jne
mov
add
sbb
fistl
or
addr16
sbb
and
jns
pop
mov
inc
out
xchg
xor
inc
cmpsl
and
addb
lcall
adc
dec
cld
out
and
and
cmp
bound
mov
mov
add
repnz
adc
adc
ja
test
data16
outsb
fs
aam
ss
and
mov
jbe
push
int
repnz
pop
pushf
enter
jle
test
sbb
rorl
push
lahf
jge
ret
data16
jecxz
enter
cli
add
in
add
xchg
xlat
or
mov
push
mov
push
ret
mov
adc
je
mov
mov
jl
mov
adc
movsb
and
push
push
xor
data16
mov
inc
inc
and
push
jne
xorb
mov
stos
and
xor
inc
imul
mov
dec
add
fxch
popa
arpl
or
test
mov
inc
push
add
bnd
mov
outsb
shlb
xchg
mov
pushf
pop
jno
rcrl
movsl
setg
xchg
dec
les
jmp
lods
jg
out
fldenv
push
mov
or
push
loopne
sbb
mov
bound
ss
in
subb
sub
pop
test
insl
jns
jbe
and
mov
out
pop
sub
cmp
pop
and
pop
cmp
sub
mov
sbb
inc
inc
aaa
repnz
pop
jns
repnz
aas
movsl
mov
std
mov
adc
jmp
mov
xchg
push
dec
data16
mov
repnz
icebp
or
inc
sub
lods
fsubrs
xor
mov
stc
inc
mov
fs
push
mov
inc
stc
outsb
mov
in
push
daa
xchg
out
mov
pop
std
out
outsb
add
jmp
push
gs
inc
adc
sbb
xor
ret
cld
push
pop
jae
add
cli
push
dec
nop
cmpb
aas
add
andl
test
dec
mov
ret
imul
push
xor
in
loop
sahf
cmpb
adc
cmp
and
lret
sti
or
movsl
jge
or
xchg
push
push
mov
jo
shlb
lret
lret
cmp
daa
mov
or
mov
in
mov
jo
ljmp
aam
scas
jbe
into
cmp
inc
cmp
ret
mov
sbb
outsb
adc
test
mov
lret
mov
mov
bound
cmp
pop
jge
push
dec
es
xchg
dec
jle
mov
movsl
cmp
out
loopne
lock
test
mov
imul
adc
sbb
mov
sub
dec
in
push
lahf
cmp
pop
xchg
cltd
jnp
jae
out
in
mov
aad
lret
xor
pushf
adc
mov
pop
negl
push
iret
shrl
imul
mov
dec
mov
mov
pop
iret
adc
stos
adc
loopne
cmpsb
inc
pop
mov
aad
sub
sahf
out
in
ja
lahf
inc
stos
scas
xchg
sub
jl
dec
xor
sti
aaa
lcall
jmp
daa
inc
fstps
in
pop
sub
and
push
stc
cmp
in
in
fstl
inc
push
add
js
lods
hlt
xor
fs
fisubs
pop
xchg
pop
lods
mov
aas
scas
cmpsb
out
sarl
call
hlt
mov
rcrb
call
stos
mov
in
pusha
in
scas
imull
xchg
xor
imul
test
mov
jg
ljmp
cmpsb
cmp
loopne
aam
mov
dec
out
jg
aas
test
jg
pop
pop
xchg
test
loope
adc
orb
rcr
pushf
out
xor
outsb
xchg
cmpxchg
loopne
pusha
inc
mov
rcrb
cltd
cwtl
mov
push
xor
aaa
aaa
ret
pop
or
adc
pushf
rclb
ds
push
rcll
aad
aas
xor
int
scas
pop
jg
popf
cmc
ret
cmp
into
cmp
jmp
jmp
sbb
js
es
loope
sub
popa
or
cwtl
mov
and
push
inc
mov
push
dec
stos
inc
push
cmpsl
inc
add
enter
dec
frstor
mov
iret
fwait
ret
xchg
add
push
xchg
push
sbbb
lods
shrl
in
inc
nop
pop
mull
fisubrl
cmp
inc
push
dec
sub
jno
loop
mov
ret
faddl
xor
pop
jb
jae
push
mov
mov
shll
jnp
dec
sub
jo
jp
lret
loope
in
mov
enter
repnz
pop
adc
test
fwait
sub
mov
dec
repz
mov
jmp
scas
add
std
dec
negb
loop
add
lea
inc
imul
adc
stos
fwait
popa
test
dec
sbb
cltd
pop
or
mov
fisubs
xchg
or
push
orb
inc
and
mov
mov
mov
bound
cltd
aam
and
fs
fdivrl
mov
pop
xor
pushl
push
ret
xchg
sub
lods
subl
jno
sbb
cmp
add
xor
and
pop
mov
scas
jo
cmp
mov
mov
sbb
fisubs
jp
inc
repz
test
and
push
popf
or
sub
es
sbb
outsl
cmc
inc
and
movsb
mov
mov
fisttpl
flds
adc
clc
sub
xchg
test
inc
or
imul
sti
inc
jp
int3
xchg
inc
add
pop
xlat
pop
mov
jbe
cmpsb
sbb
lock
rcrl
stos
pop
dec
aad
push
jp
mov
mov
dec
mov
scas
cmpsb
ss
adc
es
or
mull
pop
jecxz
jne
sar
insl
in
mov
xchg
lret
into
adc
fs
add
movsl
test
cmpsb
cmpsl
cmp
and
fwait
lahf
adc
sub
xchg
cmp
daa
pslld
insl
in
mov
iret
shrl
in
mov
lret
das
pop
cmp
push
push
daa
adc
push
xchg
bound
or
mov
es
out
jl
cmp
push
and
and
js
and
xor
inc
and
or
lods
imul
dec
and
dec
lods
shl
movsb
mov
push
icebp
dec
dec
pop
sbb
inc
adc
mov
pushf
sub
std
or
mov
fcompl
dec
pushf
in
or
cli
pop
in
add
xor
lods
mov
mov
sarl
mov
jecxz
or
hlt
bound
loop
xchg
orl
cmp
test
js
fdivs
push
cli
stos
rcrb
cltd
mov
mov
data16
add
adc
pushf
pusha
sti
jecxz
out
jp
into
pop
jnp
ret
push
push
or
pop
push
test
aad
jecxz
and
in
ficompl
inc
int
pop
jge
cmp
into
sub
push
int
jnp
fiadds
out
sub
test
mov
popl
inc
ds
bswap
cli
imul
sarl
out
out
lods
mov
jb
test
pusha
jmp
cmp
scas
je
fs
nop
imul
mov
rcrb
xchg
xchg
mov
add
mov
sbb
dec
ret
inc
pop
mov
pop
stc
pop
leave
cmp
mov
jae
sbb
outsl
and
jb
popf
jne
cmp
mov
rolb
mov
cmp
dec
std
loop
imul
test
movsb
sub
mov
cli
dec
fs
adc
mov
fnstsw
cmc
fwait
leave
jl
arpl
sbbb
js
lods
filds
pop
into
mov
insl
add
mov
movsb
add
call
fidivs
xchg
fldenv
xlat
dec
je
sub
lret
rolb
addl
hlt
rclb
fs
fstps
mov
jg
loop
dec
jp
js
fcmove
lea
in
cs
enter
repnz
aam
mov
mov
jae
adc
or
inc
das
mov
inc
cmp
mov
fs
outsl
mov
dec
rorl
test
jge
pop
cmp
or
inc
divb
add
js
or
or
inc
into
leave
fists
and
lds
xchg
aaa
movsb
and
data16
inc
mov
pop
push
push
mov
sub
jno
jo
push
call
test
and
add
adc
repnz
ds
pusha
sbb
and
insl
stc
cmpsb
orl
jne
push
push
inc
adc
popf
out
aaa
dec
add
pusha
aad
dec
xorb
lock
dec
orl
adc
iret
sub
jle
sbb
adc
dec
push
push
xor
xchg
mov
mov
xchg
int
mov
mov
movsb
push
rolb
leave
cmpsb
cmpsb
xchg
cmovo
jg
mov
sbb
sub
mov
cltd
or
jno
scas
mov
movsl
sbb
pushf
into
xchg
repnz
bound
fistpll
adc
sub
push
testb
sbb
jae
sbb
int3
sub
dec
cmp
xor
xor
cmpl
mov
dec
rclb
xorl
mov
imul
imul
cmc
mov
iret
sub
mov
dec
mov
call
in
sub
sbb
and
dec
mov
jl
sbb
pushf
pop
mov
sbb
in
push
and
dec
sub
jmp
fwait
mov
jp
xchg
add
jnp
xchg
sbb
mov
cmc
sub
add
notl
es
and
push
push
xchg
fs
fisubrs
dec
inc
sbb
jmp
xor
outsl
bnd
pop
call
add
orb
push
and
xchg
add
or
test
fxch
adc
adc
lret
mov
inc
push
jae
cmpsb
test
push
lcall
mov
jecxz
cmpsb
ds
xchg
push
xor
jl
in
push
jns
push
shrl
sub
push
jl
mov
push
cmp
mov
add
push
int3
je
lds
cli
cltd
lea
in
bound
jp
sbb
jecxz
xchg
fwait
xlat
test
mov
pop
or
push
les
and
ljmp
lahf
bound
jo
jbe
cmpsb
or
dec
ret
insl
mov
push
mov
mov
out
addb
pop
hlt
fsubrp
adc
fdivr
cmp
and
inc
in
loop
lret
ret
lods
testl
minps
shll
incl
in
cmp
je
xchg
and
cmp
xor
inc
lea
fcoms
scas
push
popf
jge
js
mov
cmpsb
in
mov
je
jge
fldt
mov
push
inc
sbb
je
out
popa
les
jp
cmc
adc
jp
push
xor
das
push
jge
or
add
sub
jp
es
pop
pop
pop
scas
inc
cld
movsb
ja
mov
push
adc
scas
push
or
sub
mov
sub
and
jl
cmp
cmp
pop
add
rorl
jle
mov
add
mov
fisttpl
mov
call
dec
rclb
pusha
or
mov
push
cmp
inc
sbb
xchg
mov
fsubrl
aad
shlb
pop
cmp
loope
aas
scas
sub
cmp
cmp
dec
repz
cli
pop
out
adc
pop
dec
loop
xor
xchg
movsl
jp
xchg
push
pop
mov
loope
lret
jno
orb
add
out
jo
cli
fwait
push
call
mov
aas
dec
negb
rsqrtps
push
lea
or
mov
int
dec
sbb
in
pop
rcl
leave
jo
xlat
mov
xchg
and
outsl
add
fisttpl
add
and
push
lods
jg
lds
pop
rorl
rol
jnp
ret
dec
push
or
jmp
sub
addr16
pushf
sbb
testl
adc
jl
push
ljmp
imul
or
cld
mov
shll
std
mov
xchg
mov
in
gs
adc
jb
shrl
fistpl
dec
sub
sbb
call
shlb
adc
sbb
imul
les
call
or
test
push
fisubrl
mov
push
ret
out
xchg
pop
jmp
notl
in
xchg
pop
and
jno
or
mov
and
xchg
movsl
mov
sbbb
data16
cltd
lds
dec
xchg
push
repnz
in
sbb
jbe
ret
push
test
adc
xchg
lret
sub
sub
sub
push
das
rol
adc
repnz
outsl
fwait
mov
hlt
cmp
mov
incl
ss
cmp
and
sbb
lahf
lds
popa
pop
flds
pop
lods
sarl
sbb
cld
pop
fistps
xchg
cmp
fs
fsts
inc
sub
pop
xchg
sub
xchg
adc
xor
pusha
dec
lcall
push
cmpsl
mov
xchg
mov
push
stos
lods
mov
jo
inc
mov
mov
push
add
sbb
test
hlt
cltd
sbb
lret
adc
dec
shrl
pop
xchg
mov
mov
mov
lea
iret
xchg
fwait
shrl
int
std
and
mov
sti
nopl
push
mov
jno
jnp
add
cmp
ds
or
sbb
rorl
mov
jp
int
cli
imul
pushf
fbld
pusha
xchg
mov
mov
mov
adc
sub
push
jb
pop
sarl
loop
cmpsl
xor
adc
mov
xchg
or
or
fisubl
cli
loop
jle
or
jne
jge
sahf
mov
mov
mov
imul
or
jns
jmp
mov
mov
sub
icebp
scas
lods
and
cmp
inc
jo
xchg
sub
sti
in
sbb
cmp
mov
sub
mov
scas
add
pop
dec
pop
jmp
mov
xor
jae
daa
push
inc
xchg
cmc
ds
lret
cmp
sub
sub
lret
aam
mov
data16
ret
out
lock
addr16
aad
mov
shlb
sbb
cmpsb
cmp
mov
fiadds
aad
jo
mov
xchg
fs
fucom
ss
fnstcw
pop
xchg
adc
iret
fs
add
test
adc
lea
inc
rcrb
idivl
aam
push
test
subb
push
cmp
and
pop
movsl
mov
mov
les
out
fs
enter
inc
addb
test
mov
mov
inc
cltd
mov
sarb
xchg
fsubr
and
jno
mov
ja
xchg
mov
xchg
negl
mov
xor
int
pop
cltd
xor
nop
pop
das
jno
pop
test
lea
sbb
std
fidivrs
mov
jne
jmp
int3
cmp
popf
loopne
jne
push
pop
test
push
add
jp
mov
inc
mov
icebp
add
push
lods
mov
stos
inc
jns
loop
fs
fucomip
mov
xchg
jae
addr16
int
cmc
arpl
mov
cmpsb
dec
cmovp
and
mov
daa
push
scas
dec
push
add
or
fcomi
int
pop
in
mov
popa
mov
ja
push
xchg
jne
fs
bound
dec
cmp
in
lds
or
mov
lock
inc
add
lods
loope
push
inc
aaa
in
cmpsl
rorb
jmp
test
pusha
test
jns
or
mov
lods
scas
xor
jmp
arpl
lret
lahf
mov
sbb
xchg
mov
inc
sahf
adc
or
sahf
push
ja
lds
or
add
ret
pushf
pop
pushf
mov
pop
mov
rcrl
xor
repz
stos
call
js
xchg
adc
mov
popf
fwait
adc
jmp
jp
out
fildll
xchg
dec
jp
xchg
push
cvtps2pi
mov
mov
push
cmp
push
inc
mov
stos
fldcw
jmp
cmpsl
mov
test
stos
cmpsb
cmpsl
xchg
xor
test
lds
sub
jbe
push
into
and
xor
sub
popf
ljmp
fucomip
test
stos
jb
sub
xor
mov
orb
das
pop
cmp
das
xor
pop
gs
mov
fstpt
nop
inc
push
fldz
test
jbe
arpl
cmp
sbb
and
sub
jns
mov
mov
sub
xchg
or
aas
aad
rorl
insl
cmp
adc
imul
mov
mov
lret
pop
cmp
mov
cld
test
rorl
cli
movsb
jbe
xchg
stos
add
pop
ret
shl
ss
leave
mov
clc
popa
inc
call
rcrb
loopne
fistpl
leave
fnsave
mov
in
jle
mov
fisubs
xchg
dec
ss
jno
bound
stos
mov
test
decl
push
pop
mov
aaa
mov
xorl
test
pusha
and
mov
xor
mov
fstl
ja
adc
pop
repz
lret
cmp
mov
lods
mov
cmpsb
mov
xor
push
mov
inc
sub
xor
mov
adc
jp
jmp
lahf
inc
arpl
cmpsl
mov
push
cmpsb
test
push
mov
xor
sbb
inc
mov
adc
stc
pop
adc
flds
iret
fcomps
daa
popa
movsb
dec
adc
xor
data16
aaa
jg
jmp
pop
or
inc
xchg
stc
add
hlt
sub
or
jnp
xor
insl
mov
jae
add
mov
mov
xchg
adc
mov
mov
aas
xor
push
sbb
cmp
int
cs
mov
es
jp
fiaddl
and
cmp
jb
adc
loope
inc
stos
cmp
sub
dec
scas
sub
test
xor
inc
in
fistpll
fnstenv
mov
fcompl
and
arpl
and
jnp
push
popa
insl
fistps
aaa
lret
mov
ds
mov
ja
mov
addb
pop
and
and
sbb
xor
sbb
and
jg
mov
into
pop
mov
mov
cltd
inc
lds
mov
push
insl
mov
popf
jb
push
fidivs
dec
repz
fnstsw
xchg
stos
call
sbb
mov
cmp
mov
stc
mov
fsubl
or
repnz
mov
movsl
pushf
jmp
or
shl
mov
mov
xor
xor
pop
fnstenv
daa
out
aam
xor
jne
inc
int3
outsl
popa
je
add
lahf
adc
pusha
stc
xchg
stos
dec
push
sub
and
and
pop
into
ds
push
je
mov
sar
shlb
push
cltd
sti
pop
js
cmpb
add
cltd
pop
mov
inc
xor
pop
mov
pop
pop
push
arpl
mov
dec
test
and
dec
cmp
cmpsb
icebp
lds
popa
fucomi
mov
enter
jb
add
inc
cmp
jge
repz
out
call
rcrb
inc
imul
loop
mov
bnd
push
sahf
lcall
dec
popf
xlat
mov
aaa
add
int
aaa
push
sub
push
xor
xor
aaa
int3
add
lods
shrl
cmc
enter
pop
jg
add
pop
xchg
mov
inc
mov
inc
mov
inc
clc
test
push
sub
lret
and
sub
sbb
push
cld
outsl
cmp
es
fnstenv
sub
imul
and
rcl
mov
icebp
cmpsb
aad
xchg
int
psllw
sub
lods
das
sbb
int3
lods
outsl
insl
fisubrs
jecxz
in
sbb
test
loopne
jecxz
mov
xchg
pop
jnp
repz
add
mov
ror
ret
sub
ja
mov
add
sarl
pop
gs
and
scas
jecxz
out
jae
fsub
pop
adc
js
mov
mov
fucomi
xor
adc
in
jp
aad
xlat
in
cmp
add
mov
pop
adc
imul
sub
sub
rcrl
aas
mov
shrb
and
xchg
xor
leave
xor
das
fcompl
sub
inc
rorb
cwtl
callw
mov
inc
add
jge
mov
xor
insb
xchg
push
lods
cmc
mov
popa
jb
dec
hlt
std
add
inc
push
sub
pop
ds
pop
pop
test
mov
xor
adc
hlt
fstps
dec
jge
test
test
inc
sbb
inc
xchg
xchg
fimuls
shl
add
cmpsl
inc
cwtl
pop
sub
xchg
fcomip
xchg
stc
add
es
inc
push
in
scas
sub
mov
mov
decl
add
sub
xor
insb
outsb
mov
sbb
orl
dec
das
cmpl
jg
fists
cmpsl
testl
and
js
add
jae
sbb
pop
xchg
mov
xchg
fstpl
fsub
inc
mov
sub
xchg
pop
scas
xor
sbb
push
dec
imul
scas
xchg
shlb
dec
out
aaa
jmp
lds
iret
int
inc
fidivs
fstps
into
cld
jecxz
fabs
mov
sub
rclb
arpl
or
mov
lds
push
fisubs
push
cwtl
pmaxsw
mov
xor
cmp
xor
aas
adc
push
pop
sbb
inc
dec
ss
xlat
sbb
call
add
and
or
xor
jge
mov
mov
loop
sbb
add
insb
mov
xchg
push
add
inc
xlat
arpl
mov
mov
mov
stc
mov
xor
add
loop
les
xchg
pop
sub
sub
xchg
bound
mov
decl
sarb
jp
stos
sahf
fimull
pushf
mov
mov
mov
xor
xor
pop
int
jb
icebp
jae
repz
outsb
jnp
sub
daa
dec
xchg
fadds
outsb
xchg
or
aad
popf
xor
pusha
rclb
jp
pop
std
ret
xchg
ds
xchg
cltd
adc
loope
pop
neg
jmp
xor
insb
lods
add
imul
xlat
xchg
dec
adc
jbe
dec
or
ret
or
sbb
mov
mov
nop
push
push
jae
sti
xchg
stos
sub
pop
ljmp
nop
std
xchg
scas
into
idiv
sub
js
push
cs
inc
mov
rorl
jge
mov
mov
add
and
and
daa
dec
repz
les
sbb
rcrb
mov
nop
push
pop
out
frstor
and
pop
inc
iret
call
enter
sahf
sub
push
popa
xchg
stc
repnz
inc
rclb
cli
cmp
test
scas
out
and
in
push
movsl
sub
shlb
adc
decl
mov
pop
inc
mov
mov
imul
sbb
or
enterw
mov
arpl
mov
hlt
leave
sbb
cmp
xor
in
shll
lcall
testl
in
bound
outsl
insl
testl
idivb
popf
sti
pop
ss
jnp
mov
or
and
pop
add
shrb
xchg
stc
pop
jmp
xchg
out
je
add
loop
cmp
mov
int
dec
das
adc
imul
dec
fcmovne
movsl
adc
jp
cmp
outsl
js
cmp
btr
fs
and
imul
and
mov
mov
sti
and
shll
jmp
and
cmpsl
je
push
cmc
xchg
sbb
and
mov
pusha
add
jns,pn
ja
pop
orl
out
icebp
aas
and
mov
add
rclb
jmp
xor
ud1
repnz
sti
mov
jnp
push
dec
imul
negl
sti
popf
xor
test
fwait
mov
mov
and
add
imul
in
test
loop
orb
fs
or
mov
add
jge
or
repz
jge
mul
adc
push
imul
stc
push
aas
jge
ror
sbb
jne
in
add
sub
inc
jmp
outsl
js
jge
pop
daa
iret
test
int
test
add
and
inc
ds
lcall
shl
aam
shrb
push
and
jae
stos
add
ret
outsl
adc
pop
or
adc
addr16
inc
xchg
addr16
daa
lahf
mov
cld
jecxz
mov
std
adc
negl
dec
lret
cmp
in
out
cli
inc
loopne
inc
xchg
leave
repnz
test
inc
shll
mov
sbb
cmp
push
test
cmpsl
inc
sbb
repnz
jno
add
or
stc
jl
leave
stc
mov
dec
or
sbb
push
push
mov
inc
adc
pushf
dec
mov
mov
lret
dec
lods
test
mov
mov
dec
insl
add
mov
jecxz
das
adc
mov
jmp
notb
mov
arpl
out
inc
mov
add
push
cmp
sti
scas
mov
push
push
testb
cmpsl
movsb
in
outsl
and
aas
pop
sbb
cmp
in
sbb
mov
add
subb
mov
push
mov
and
sbb
jge
adc
lret
mov
cli
adc
xchg
pop
pop
es
addr16
mov
out
mov
dec
testb
test
enter
nop
cmpsl
jb
mov
repnz
lods
popf
xor
mov
lods
jmp
add
iret
scas
iret
pop
adc
int
lea
sbb
fsubs
cmp
out
repnz
and
lret
repz
data16
dec
movsb
xor
inc
pop
and
mov
push
andl
lahf
cmp
xlat
sti
and
xchg
push
outsb
jno
incl
dec
cs
pusha
cmp
add
fisubrl
and
push
nop
push
pop
arpl
rcll
adc
outsl
dec
into
int
adc
adc
addr16
dec
pop
mov
xchg
add
push
mov
sbb
repnz
cwtl
pop
xor
js
leave
out
imul
aam
inc
rcrl
hlt
push
loop
insb
pop
pop
jp
cli
sbb
jbe
out
mov
jle
ret
pop
or
fistpl
push
inc
test
xchg
add
arpl
or
inc
mov
enter
pop
lods
sub
lret
mov
ss
je
aas
add
scas
xor
fistl
or
stos
add
pop
fidivrl
sbb
mov
into
fwait
dec
shll
cwtl
call
popa
jle
ret
stos
sbb
lods
xchg
mov
xor
call
fcom
xchg
mov
loop
jns
pop
mov
push
or
xor
mov
jb
cwtl
fisttpll
mov
or
xchg
adc
or
push
stos
or
aad
in
inc
sarl
pushf
pop
mov
das
in
andl
cmp
push
xchg
lea
jecxz
stos
outsb
add
jbe
lcall
loope
mov
lret
jmp
gs
pushf
push
xchg
mov
inc
jp
lods
jo
cmp
push
jb
lret
gs
jne
cmpsb
in
add
call
jo
movsl
daa
push
jo
scas
xor
mov
inc
nop
or
push
call
jge
push
sbb
aad
andl
add
cmp
cld
push
push
adc
xchg
xchg
rcrb
jecxz
adc
xor
scas
sbb
addl
mov
jecxz
push
daa
mov
ret
jmp
push
fistl
cmpsb
shl
xchg
mov
fstpt
xchg
push
xor
push
mov
jmp
rsm
lods
sub
pop
movsb
sti
dec
pop
and
call
hlt
xchg
and
ja
movsb
out
pinsrw
xrelease
sub
pop
pushf
arpl
jmp
mov
lods
xchg
out
jg
mov
imul
imul
sbb
jne
xor
jle
pop
mov
incl
pushl
push
mov
mov
or
cmpsb
cli
js
mov
jl
sbb
jne
add
or
pop
mov
test
mov
push
inc
lea
sar
inc
push
sbb
xorb
mov
in
xchg
pushf
push
out
dec
data16
sti
push
mov
dec
in
xor
rclb
stc
in
pop
push
loop
jnp
loope
and
add
sti
loope
add
out
pop
mov
lods
mov
adc
cmp
dec
jg
pop
push
aas
mov
mov
shr
jmp
jns
ret
sbb
and
sahf
xor
je
ds
icebp
mov
icebp
lods
cmp
lds
push
dec
pop
mov
jnp
rcll
sbb
notb
outsb
mov
add
fwait
and
dec
adc
xchg
mov
shl
sahf
jmp
cmp
xor
mov
jge
mov
add
pop
xor
lahf
cmp
fs
fisttps
and
jae
sbb
outsb
push
jl
mov
mov
sbb
add
or
inc
or
jae
push
cmp
xlat
leave
push
bound
addb
sbbl
mov
lret
mov
push
mov
sbb
dec
push
hlt
movsl
pop
push
fmuls
hlt
stos
lods
sbb
mov
adc
add
pop
ss
and
in
cs
test
xor
js
xlat
daa
sbb
mov
arpl
xlat
sub
sbb
or
stos
jge
test
iret
jbe
sub
mov
enter
or
cwtl
lahf
icebp
nop
dec
pop
das
lock
mov
test
and
cmp
lods
push
jns
adc
fiaddl
or
mov
popf
shl
xor
imul
mov
add
jmp
lods
add
jb
sbb
mov
dec
enter
fdivl
jge
pop
mov
popf
push
pop
scas
jl
xchg
cs
pop
cmp
aaa
mov
notl
xor
push
popa
push
jnp
fiaddl
mov
cmp
idiv
lds
pusha
movhps
mov
pop
push
aad
xchg
adc
sub
pop
dec
sarl
jbe
cmpsb
ljmp
push
imul
dec
and
icebp
cld
cmp
popa
insb
xchg
xor
hlt
pop
aam
popf
hlt
xchg
iret
pushl
insl
push
sbb
clc
iret
in
mov
jge
add
and
xor
mov
in
pop
sub
mov
shr
loope
xlat
add
rcrl
sahf
scas
or
push
xchg
movsl
fcmovnbe
test
dec
adc
out
mov
bound
jbe
out
push
stc
in
loope
xlat
dec
add
inc
and
mov
jae
pop
jne
leave
xor
call
cmp
dec
jmp
or
arpl
inc
sub
and
popa
in
jp
lods
and
cmpsb
out
arpl
dec
arpl
or
stos
cmp
xor
and
cli
repnz
sbb
out
or
sbb
dec
sahf
xorb
rclb
inc
icebp
inc
push
adc
lods
insl
aas
popf
out
les
ret
jle
fldenv
jns
stos
jne
or
or
movl
jbe
xlat
addl
or
dec
fwait
xchg
dec
and
mov
sbb
rcrb
jl
lcall
inc
xor
sub
push
adc
mov
or
mov
mov
sub
dec
add
outsl
xor
das
mov
std
out
sub
xchg
push
jg
sbb
int3
inc
adc
pushf
cs
mov
nop
fwait
in
cwtl
push
movsl
adc
mov
shlb
pop
push
imul
sbb
push
cmpsb
cli
insl
mov
data16
mov
stos
das
popa
sub
shl
dec
xchg
push
sarb
mov
sbb
or
out
rcl
je
fisttpl
push
movsl
fucomp
jge
adc
xchg
push
mov
lret
rorb
cmp
cmp
jo
mov
mov
jns
adcl
cwtl
pop
loope
mov
sub
fstl
sub
push
scas
cwtl
sarb
xchg
inc
testb
jmp
xor
syscall
mov
push
jbe
ljmp
dec
pop
jnp
pusha
ljmp
or
lcall
jg
mov
mov
mov
cmp
xor
add
ljmp
aam
sbb
mov
dec
sub
jle
test
add
test
shl
adc
jg
pop
iret
push
mov
scas
data16
mov
mov
push
jmp
pop
xchg
std
movsl
ret
sub
scas
inc
xor
rcr
jno
mov
cltd
push
and
mov
mov
dec
cmp
or
add
sbb
cmc
roll
std
cmp
sbb
lds
in
mov
sub
es
pop
jns
into
adc
cmp
xor
mov
cmpsb
mov
cmc
sbb
sbb
ds
pop
pop
imul
sub
out
xor
mov
mov
hlt
push
shl
xor
inc
sub
mov
mov
lods
sbb
dec
jle
ds
adc
daa
mov
and
xchg
inc
inc
in
movsb
inc
leave
mov
es
setbe
aaa
dec
sbb
fimuls
or
jb
sti
stc
mov
cmp
and
insb
pop
popf
icebp
nop
nop
repz
mov
jno,pn
jg,pt
jnp
into
cmp
cmp
ss
leave
jnp
jl
push
mov
mov
jp
test
jl
push
lods
stos
push
mov
ja
dec
outsb
xor
jmp
ds
ret
lds
and
mov
clc
or
rcll
mov
inc
jmp
loope
pop
dec
cmp
shlb
mov
fs
sbb
sub
jae
jp
cli
lea
cli
sarl
clc
pop
jmp
cmp
mov
mov
and
adc
imulb
stos
shr
xchg
fimull
and
idivl
pop
jne
fwait
leave
jo
hlt
int
jbe
scas
gs
insb
adc
sub
mov
xchg
or
test
ret
popf
mov
sbb
cld
mov
jbe
out
inc
or
sub
ror
scas
xchg
repnz
jmp
mov
jns
ljmp
mov
pop
jno
popa
and
push
push
sbb
aam
add
dec
mov
lock
sub
out
in
or
sbb
xor
inc
xchg
inc
sbb
jne
sub
dec
pop
add
inc
mov
test
movsl
popf
out
xor
mov
popf
insl
push
xchg
fsts
das
out
push
sbb
jbe
pop
xlat
pop
int3
mov
in
pop
mov
movsb
pusha
xchg
aaa
pop
cmc
inc
int
pushf
call
sbb
cmpsb
dec
pop
outsb
ja
das
jnp
sbb
inc
adc
outsb
repz
or
sarb
aad
xorl
xor
and
subb
rcr
jmp
arpl
mov
call
or
ret
mov
or
cli
out
sbb
or
cld
pop
sub
inc
loop
aaa
mov
roll
mov
xchg
mulb
push
js
orl
cmp
dec
inc
call
xchg
sub
fldl
pop
pshufw
cwtl
loop
jnp
out
jg
cmpsl
push
or
fidivl
sbb
scas
dec
mov
sbb
or
xor
or
and
ljmp
jno
out
inc
pusha
dec
in
dec
cmp
mov
movsl
outsl
cmp
push
lods
das
scas
sbb
cmp
popa
inc
jge
jns
mov
or
int
je
mov
pop
lea
fdivrl
pop
outsl
js
inc
inc
cmp
and
adc
test
pop
inc
ficomps
mov
sbb
mov
mov
nop
push
test
data16
sbb
xor
adc
testl
loop
jmp
jbe
inc
fwait
mov
cmp
rol
inc
push
lods
add
clc
xchg
pop
xchg
adc
xchg
jge
or
mov
xlat
fs
xchg
or
pop
mov
sbbb
adc
adcl
daa
movsb
pop
mov
jmp
test
push
xchg
outsl
imul
test
sub
pushf
decb
addl
push
movl
aam
popa
mov
jnp
je
and
xor
outsl
in
sbb
jmp
clc
mov
insl
or
add
push
xor
inc
mov
movsl
xor
stc
mov
xor
jno
xchg
pop
lret
outsb
cmp
or
adc
cs
lds
mov
jne
fidivs
xchg
insl
mov
jbe
or
pop
xor
jge
inc
loope
jge
jae
shll
inc
lds
test
sub
out
pop
push
jno
fdivl
push
lret
mov
stos
add
aaa
mov
fs
xchg
or
shlb
pushf
inc
pop
ss
xchg
repz
jge
outsb
mov
dec
test
jns
testb
fwait
lahf
jns
add
push
push
scas
mov
mov
mov
mov
rcll
imul
dec
aas
push
pop
lock
fidivs
sbb
jg
xor
mov
daa
cmpsl
lret
outsl
xlat
loopne
int
xchg
xor
jns
in
insb
addr16
mov
xor
inc
and
rorb
inc
push
negl
daa
sarl
and
dec
xchg
xchg
iret
ljmp
sbb
out
andl
cmp
mov
mov
test
cmp
stc
fimuls
push
sbb
iret
ljmp
fisttps
dec
sbb
sub
mov
pushf
fiadds
sbb
addr16
mov
shrl
mov
push
mov
je
dec
imul
cwtl
dec
aam
sub
lahf
xor
jmp
sahf
or
inc
pop
cmp
inc
arpl
or
inc
mov
lcall
repnz
mov
sub
pop
arpl
scas
push
lahf
inc
mov
inc
sbb
ret
repnz
cltd
xor
insb
xchg
insl
mov
sbb
mov
xchg
ja
ret
ret
and
jle,pn
cmpsb
adc
cltd
cwtl
out
loope
adc
xchg
ja
stos
push
push
subl
outsl
aad
aad
xchg
jnp
in
lock
cwtl
int
adc
pop
cmpsb
mov
xor
inc
out
jmp
dec
jecxz
fpatan
bound
push
sub
mov
std
pop
clc
or
pushf
mov
jns
cmpsl
jb
in
or
dec
mov
imul
testb
stos
out
clc
cmp
leave
out
fnstcw
fidivrl
cmc
sub
mov
cmpsb
push
mov
paddsb
ljmp
sbb
or
inc
adc
mov
fs
cltd
sbb
ret
int3
push
lcall
or
xor
insb
gs
or
push
inc
pop
lods
loopne
into
pop
lods
xchg
divl
paddusw
in
sub
cmp
pusha
jae
mov
jo
ja
xor
je
ja
mov
stos
cmp
fiaddl
lea
arpl
dec
iret
rcrl
std
movsl
outsb
adc
push
jb
stos
pop
nop
inc
jne
fcompl
mov
je
outsl
xor
fstl
add
cmp
pop
sbb
das
data16
inc
or
fcomip
inc
fdivrl
add
cmc
pushf
scas
sbb
adc
push
xchg
jg
sbb
push
repnz
lret
and
inc
inc
add
cmp
pop
rclb
mov
mov
jmp
imul
fbstp
out
push
mov
fs
dec
xchg
push
dec
pop
mov
sub
outsb
sub
inc
xchg
dec
dec
int3
xchg
in
popa
movb
pusha
jmp
test
push
mov
movsb
pop
cmp
xchg
add
outsl
enter
lods
out
shlb
into
xchg
adc
jb
inc
in
xchg
push
lds
cmp
movsb
das
add
rolb
int3
fs
pop
stc
dec
mov
lcall
lock
adc
shrl
stos
sub
cltd
lret
mov
mov
adc
shll
cmc
sbb
shll
out
xchg
stc
in
or
xor
sub
rcl
cmpb
scas
cmp
or
clc
lods
iret
dec
notl
mov
xchg
scas
push
xor
jb
adc
loope
js
mov
xor
test
pop
xchg
or
fcmovne
fcmovb
fsubrl
loopne
and
mov
dec
lcall
ret
pop
mov
and
pop
add
dec
add
adc
jp
push
lods
mov
in
mov
rcr
stos
xchg
js
out
imull
dec
fdivr
pop
cmp
dec
push
mov
xchg
mov
cltd
mov
aam
test
cmp
out
add
cmp
mov
cltd
or
ror
jg
add
or
lret
dec
scas
sbb
xor
dec
outsb
or
xor
xchg
movsl
cmp
sbb
jno
and
js
dec
dec
stos
or
call
mov
ret
or
sarb
dec
adc
mov
lock
call
sbb
mov
ds
xlat
in
aas
add
push
aas
dec
adc
jp
xlat
lods
xor
dec
bnd
dec
in
cmp
jl
xchg
dec
insb
je
sbb
xchg
cmp
fsubs
pop
mov
in
pop
lods
cmp
clc
ljmp
leave
xchg
sub
add
leave
and
pop
jmp
mov
mov
mov
cmp
cmp
idiv
sbb
inc
dec
in
por
adc
sbb
cs
pushf
adc
pusha
cmp
push
pop
dec
xor
push
inc
mov
xor
mov
jnp
mov
add
cmp
jo
mov
subl
das
or
cmp
mov
vandnps
leave
xor
test
mov
dec
mov
xor
inc
dec
aas
repnz
or
int3
push
add
mov
pop
sub
pusha
push
mov
enter
mov
jno
mov
xor
nop
jo
jmp
insl
pop
adc
scas
fisttps
xchg
fs
mov
xchg
in
and
jnp
fbld
dec
enter
push
dec
mov
sub
xor
sub
jo
in
daa
dec
push
xchg
loop
jnp
pop
sbb
jbe
comiss
sahf
mov
dec
sub
loopne
in
dec
lret
pop
jmp
push
fs
and
xor
push
int
test
loopne
cli
xor
jno
fmuls
pop
inc
inc
sub
push
xchg
jae
test
ficomps
mov
jno
into
adc
gs
sub
inc
mov
std
add
shll
fisubrs
push
jle
lret
mov
sub
cmpsl
mov
orb
add
or
aad
jns
cmp
sub
shlb
mov
xchg
sub
shlb
fwait
nop
mov
inc
pop
in
loopne
loope
or
xchg
and
xor
mov
lahf
jbe
mov
sub
jae
rclb
test
inc
xchg
insl
ret
js
in
inc
fildll
or
icebp
and
xor
out
call
xchg
in
shrb
push
sub
mov
daa
call
filds
xchg
or
mov
xchg
je
or
dec
into
sub
sti
dec
pushf
int3
jmp
xchg
lock
leave
je
dec
out
fcmove
les
push
sbb
fnsave
adc
fimuls
mov
sti
xor
jecxz
inc
push
out
add
hlt
bound
lock
pop
cs
sub
jle
dec
mov
aas
or
rcrl
xchg
jp
test
xor
outsl
repnz
mov
push
inc
leave
lahf
fs
popa
ret
mov
int
jle
sub
dec
fwait
push
dec
int3
jae
jge
pushf
jecxz
pop
aas
negl
mov
sbb
cltd
incl
sbb
test
adc
sbb
xchg
inc
rcrl
sbb
or
push
or
mov
orl
nop
arpl
push
mov
and
jmp
lret
add
fisttpl
inc
shlb
jae
adc
idivb
icebp
sub
leave
mov
cld
inc
cmp
mov
cmp
pop
dec
in
cmpsl
or
test
out
cmp
dec
fisttps
mov
jb
out
lods
test
xchg
xchg
inc
mov
mov
rorl
or
xchg
daa
ret
jg
adc
push
xor
or
scas
xor
pop
or
push
ja
inc
popf
jl
xchg
inc
pop
and
inc
push
lea
jg
lret
sub
jmp
add
incl
incb
xor
pop
xchg
xchg
cmpsb
repnz
stos
cld
mov
les
ja
repnz
push
sbb
repz
inc
inc
jne
or
cld
xchg
jmp
rcll
sbb
imul
hlt
mov
dec
dec
and
call
rcl
push
jnp
adc
test
xor
daa
adc
jle
loop
jb
add
iret
mov
xchg
es
movsl
dec
xor
xor
cs
xchg
movsb
sub
cs
pop
setb
pop
mov
je
in
stos
jmp
loop
push
fdecstp
and
mov
sahf
popf
pop
xorb
adc
jbe
subl
nop
mov
lret
push
sbb
pop
lea
lods
ja
mov
mov
xchg
ja
mov
popa
add
aas
jmp
fsubrs
and
cwtl
or
xorl
ret
cmp
inc
or
sub
loop
in
fnstenv
bound
inc
jbe
outsb
jnp
enter
lea
xchg
push
dec
cmp
add
inc
pop
pop
outsb
push
pop
sbb
push
and
mov
add
push
or
sbb
jnp
inc
mov
xchg
mov
movsb
pop
push
sub
pushl
into
sbb
icebp
adc
into
push
mov
dec
mov
ficoml
enter
aas
cmc
rclb
ret
push
pop
mov
adc
sbb
adc
dec
mov
imul
iret
inc
fdivl
addr16
sbb
loop
mov
mov
addr16
or
test
push
fwait
cmpsb
addr16
aad
jo
adc
sub
mov
out
into
ds
pop
stc
sbb
insb
clc
sbb
add
lods
imul
jmp
icebp
cmc
sub
pusha
in
and
mov
popf
out
out
hlt
out
ret
pop
clc
imul
xchg
or
xor
lds
into
js
adc
sub
mov
out
lds
stc
popf
ret
dec
ret
fxch
das
dec
jbe
nop
roll
inc
cltd
push
inc
sub
inc
insl
mov
xor
xchg
shll
jb
and
iret
fwait
repz
jb
sub
je
outsb
sub
push
or
clc
jmp
out
or
out
xchg
xor
adc
lds
fcoms
push
and
out
adc
or
sahf
sub
pop
xor
bound
mov
pop
cmp
repz
push
out
mov
aaa
jae
insb
lcall
cmp
ret
icebp
push
dec
mov
push
push
jno
add
loopne
imul
enter
sub
jbe
shrl
add
imul
subb
push
push
mov
test
jp
push
ljmp
test
dec
xchg
clc
push
call
mov
xchg
mov
jp
mov
mov
dec
adc
pop
and
mov
jge
sti
xchg
sub
mov
push
movsb
inc
pop
rcl
mov
or
mov
rorl
inc
addr16
dec
jno
ret
adc
inc
lea
push
jmp
push
ljmp
enter
scas
mov
and
sbb
and
ret
jns
inc
xlat
ljmp
std
iret
cmpsl
insb
es
jns
xchg
dec
int3
out
jp
xor
sbbl
incb
mov
xorl
pop
adc
mov
cmp
test
call
cltd
ja
adc
lods
push
stos
cmp
mov
xor
jbe
dec
inc
lret
pop
pop
lahf
aaa
sub
popf
bound
jns
dec
mov
and
push
gs
fsubs
movsl
movsb
es
addl
int3
retw
in
mov
lea
movb
inc
or
inc
xlat
cs
pop
add
mov
add
scas
hlt
add
stos
jmp
sbb
shrl
sub
push
ds
dec
je
push
movsb
ss
cli
aam
mov
jo
pop
cmp
ss
inc
mov
in
push
fs
jnp
fiaddl
mov
cmovne
or
push
test
stc
sbb
and
data16
addl
neg
sbb
outsl
push
mov
int
pop
aad
lcall
push
lret
bound
xchg
ss
mov
push
push
out
or
out
fbstp
xlat
jge
rclb
aad
inc
cmp
into
icebp
dec
mov
pop
call
ds
ret
mov
outsb
pop
inc
jg
push
out
sbb
add
cmp
sub
gs
inc
sub
fdiv
frstor
stos
mov
rcll
push
scas
sub
and
or
popa
mov
roll
jmp
lods
mov
dec
out
mov
inc
push
jae
clc
es
push
ja
cmpsl
pop
lcall
imul
jnp
cmp
xchg
sub
shll
ret
push
mov
leave
jns
xor
sub
add
add
ljmp
flds
sbb
mov
js
adc
pop
sub
mov
pop
mov
in
dec
dec
add
jae
fnsave
ret
add
hlt
fstps
test
movsb
lcall
cmp
outsb
xchg
jae
lock
xorb
xchg
push
fcoms
push
cli
test
add
push
scas
inc
and
mov
mov
or
shrb
dec
sbb
sub
gs
dec
push
jae
clc
mov
repz
adc
mov
sahf
mov
clc
into
inc
addb
lret
xchg
int3
cwtl
test
cwtl
stos
push
ljmp
cmpsb
xchg
ljmp
lods
or
push
loopne
xchg
shlb
movsb
leave
lods
sbb
outsb
sub
jl
sbb
enter
cmp
cli
arpl
jp
sub
ja
mov
fmuls
or
movsb
je
mov
xchg
and
dec
es
mov
push
sahf
push
xor
cmc
leave
add
movsl
push
xchg
lds
cwtl
pushw
lcall
mov
xchg
stos
xor
push
pushf
ret
jne
inc
ljmp
dec
sbb
pop
add
mov
lds
mov
adc
jns
sbb
shll
mov
imul
test
repz
lahf
add
sub
sub
jbe
call
cmp
test
mov
hlt
cwtl
pop
bound
sub
lods
je
cwtl
in
add
sarl
jg
popa
sbb
or
dec
sahf
popa
mov
movsl
lahf
std
or
ret
xor
mov
push
das
loopne
mov
fdivrl
cmc
pop
lret
jns
sti
das
repnz
aas
push
cmc
push
mov
aaa
pop
movsb
aaa
inc
cltd
add
sahf
out
add
push
fcomp
mov
int
xlat
lret
adc
mov
leave
aaa
sbb
and
int3
movsl
fwait
jmp
add
fs
inc
jo
xor
mov
orb
repnz
mov
rcrl
cld
add
sub
aam
iret
bound
add
xchg
sub
sub
pop
lret
cld
rcrl
push
push
sbb
xor
xchg
mov
sub
jns
icebp
cld
xor
dec
imul
add
pusha
loop
outsl
in
push
lea
pop
and
lock
fwait
bound
or
mov
arpl
negb
mov
mov
adc
jg
xor
int3
cmc
and
dec
and
jae
xor
push
arpl
cmp
rcll
mov
dec
cmpsl
stos
push
imul
sbb
pushf
lods
ret
and
arpl
mov
mov
fldln2
adc
cmp
dec
xorl
xorl
into
mov
adc
adc
mov
inc
mov
shrb
push
seto
jmp
xchg
ja
aaa
jp
cwtl
pop
dec
ret
pop
pushf
lods
das
loope
scas
pop
mov
sti
add
jb
fucomip
pop
push
test
insl
and
insl
fsub
push
aad
cmp
add
fldt
iret
les
pop
lock
push
sbb
aaa
outsb
sbb
std
mov
outsl
stc
xchg
incl
ss
mov
das
sbb
sub
movsl
pop
stc
cltd
movsl
scas
inc
std
xor
popl
adc
and
test
dec
dec
add
sti
sbb
or
or
sub
loope
aad
mov
int3
insl
push
mov
xorb
fucomip
frstpm(287
cltd
pushf
push
incl
lods
cmpsl
insb
adc
pop
shrl
mov
aam
pop
dec
add
dec
mov
jp
cwtl
adc
mov
js
and
ljmp
mov
jno
and
xchg
insl
or
ja
add
dec
push
or
icebp
or
int
out
jmp
and
clc
pop
test
and
cli
sarl
cmp
insb
cltd
xlat
mov
repnz
jne
pop
shl
xor
add
sti
push
sbb
xlat
popa
pop
mov
es
or
dec
arpl
test
mov
inc
xor
js
mov
sbb
fs
cs
nop
call
xor
mov
xchg
mov
sbb
cmp
nop
cld
in
bound
inc
lds
addr16
mov
xor
mov
mov
fwait
inc
insl
jnp
mov
rcrb
out
jae
into
push
mov
out
mov
add
cmpsl
and
xchg
lds
xor
sbb
shl
jecxz
inc
push
and
xchg
lret
mov
test
pop
fnsave
push
adc
aam
pop
test
mov
inc
ss
aaa
push
xlat
or
std
test
stc
movsl
rcrb
sbb
and
aam
push
sbb
aam
loop
notl
inc
adc
and
inc
fisubrl
cli
jge
aas
pop
inc
out
dec
mov
and
inc
ss
movsb
data16
decl
push
sub
int3
inc
xchg
jmp
cltd
or
mov
or
sahf
clc
and
add
scas
jg
jge
jnp
out
fists
jl
push
in
and
mov
mov
xchg
gs
sbb
arpl
cld
sub
out
sti
icebp
xchg
adc
and
sti
pop
ja
mov
enter
pop
mov
jmp
mov
push
mov
sub
mov
mov
fwait
pop
pop
in
pop
jne
pop
mov
jnp
repz
mov
cmp
arpl
jl
int3
inc
xor
in
mov
push
fdiv
push
cmp
dec
enter
sbb
mov
push
inc
mov
cltd
jnp
inc
dec
cmpsb
in
inc
imul
sarl
dec
xor
mov
and
adc
imul
inc
jecxz
dec
push
int3
or
xchg
push
daa
inc
clc
mov
shll
movsl
shrl
int3
ja
in
jno
or
out
push
jmp
push
xchg
sub
movsb
mov
and
jmp
adc
pop
pop
clc
push
lods
stos
imul
xor
gs
ds
sub
adc
add
xchg
rcll
lahf
stc
cmp
or
dec
or
mov
adc
cvtdq2ps
rorl
les
xchg
dec
add
negl
pop
xor
out
pop
lcall
or
xchg
mov
out
lods
mov
lahf
push
lods
pop
mov
clc
cmp
jne
or
add
std
dec
pop
mov
jp
push
sar
lret
mov
sub
xchg
adc
xor
mov
adc
jge
push
mov
push
inc
dec
xor
xchg
pop
xchg
sbbb
mov
arpl
scas
fstl
lcall
popa
adc
dec
cmovns
xchg
scas
lods
loop
fisttpll
decb
scas
ljmp
inc
imulb
stos
imulb
test
adc
test
insl
lret
jmp
dec
test
xchg
adc
xchg
in
std
js,pn
or
in
mov
mov
or
loopne
inc
clc
or
outsb
test
push
test
and
jge
adc
xor
cmp
aam
imul
xchg
test
inc
lods
mov
popf
stos
cltd
jbe
arpl
testl
aam
flds
gs
sbb
mov
jb
xor
mov
adc
daa
rol
in
push
jae
das
mov
test
sbb
aaa
push
push
pop
push
ret
cmp
or
incb
cs
dec
imul
jo
lahf
or
in
cmc
lret
push
movsb
outsl
mov
cmpsb
loopne
and
inc
pop
movsl
mov
sbb
xor
mov
lahf
dec
sbb
es
or
clc
push
adc
or
dec
jae
ljmp
aaa
mov
sub
xchg
sub
xchg
fwait
xchg
sbb
aam
mov
or
jg
aas
lock
or
cltd
mov
inc
pop
mov
dec
cmp
popl
jbe
xchg
push
xor
lods
mov
dec
ret
xor
lea
push
add
jae
xchg
xchg
xchg
adc
jno
mov
mov
and
pop
fs
cmp
xor
cwtl
xor
xchg
jl
xor
sbb
mov
dec
pminub
cmpsb
clc
xor
add
cmp
fcomps
aam
pop
aaa
ja
adc
sbbb
addl
dec
fidivrl
mov
jmp
add
inc
gs
mov
pusha
lods
mov
jo
fdiv
jb
pop
in
mov
enter
je
dec
stos
pop
xor
es
btr
push
pop
xchg
inc
push
insb
jg
pop
xchg
cli
and
cwtl
or
hlt
cld
sub
movsl
jecxz
fdivrp
das
dec
outsl
sbb
push
pop
clc
dec
rol
ret
pop
mov
pushf
pop
mov
pop
push
ss
and
mov
pusha
stos
test
push
cmpsl
shr
pop
pop
popf
ja
mov
adc
insl
test
imul
rclb
add
repnz
fistpll
cmp
jp
and
or
and
test
jo
adc
jmp
sbb
xchg
arpl
push
test
sahf
inc
fidivrs
test
into
insl
mov
push
mov
and
roll
inc
or
sub
cmpsb
mov
daa
pushf
fwait
rcrl
pop
cli
jb
and
dec
push
push
pop
push
sarb
push
jmp
pop
push
inc
aad
mov
mov
xor
cmp
or
ret
dec
xchg
jmp
inc
inc
scas
dec
lock
mov
push
mov
icebp
mov
mov
in
std
stos
rol
xlat
js
and
pop
push
pop
fsubl
int3
jecxz
adc
mov
loop
scas
sub
outsl
fstl
addr16
enter
mov
fcoms
inc
stc
jecxz
jg
push
bound
test
sub
sahf
add
dec
mov
lret
mov
or
sub
and
lock
out
cmpsb
dec
mov
jne
std
pop
loope
sbb
leave
push
inc
arpl
movsb
xor
das
sbb
je
in
and
aad
lret
bound
in
mov
ljmp
and
outsb
iret
jbe
lods
andb
lcall
mov
push
xchg
fsts
jne
mov
shrl
pop
enter
dec
xchg
sbb
ljmp
jo
pop
dec
xor
cmpsb
inc
jns
or
sbb
jns
shrl
test
jg
add
lock
sbbb
and
test
jl
sahf
and
cld
aam
fmuls
popa
iret
test
rol
dec
push
jne
xor
sbbl
jno
lods
test
cmp
sub
fwait
sbb
arpl
stc
enter
je
test
sub
psubusw
je
adc
inc
pop
outsb
mov
ja
test
pop
cmp
movsl
adc
sbb
xchg
push
notl
aad
cmp
xorb
adc
mov
inc
fimuls
sahf
mov
cwtl
rclb
pop
mov
mov
jns
iret
lea
dec
jecxz
ss
inc
jl
out
ret
jne
xchg
inc
lods
jae
ss
in
out
sbb
inc
lret
pop
cmove
aaa
dec
jl
add
dec
push
frstor
fmull
sub
xor
mov
bound
enter
pushf
jno
mov
mov
test
mov
fwait
jmp
push
ljmp
add
jae
loop
mov
mov
aaa
mov
movsb
and
stc
jne
nop
adc
insl
add
in
adc
lods
imul
rorl
xor
test
test
pop
cli
mov
jnp
gs
jns
negb
bnd
dec
test
cwtl
pushf
lret
outsl
test
mov
or
in
jecxz
inc
push
insb
insb
add
nop
sbb
rorl
rcrl
cmp
pop
inc
pop
repz
and
add
test
jl
push
and
imull
js
jmp
adc
negl
cmp
pop
mov
push
iret
sub
test
push
xchg
xlat
lods
inc
push
sbb
in
icebp
push
mov
shlb
std
and
fbld
test
fdivr
mov
jecxz
loop
mov
testl
cs
lods
sub
rolb
inc
aaa
lods
loope
mov
push
push
outsl
jno
rcl
and
cmp
xchg
push
xchg
das
cmp
js
shlb
or
jg
js
jns
dec
jb
push
mov
dec
cmpsb
mov
call
xchg
push
decl
jne
outsl
inc
stos
cmp
mov
daa
dec
jns
rolb
inc
mov
lods
jnp
out
xchg
lret
sbb
les
test
mov
nop
cmp
aam
in
loopne
adc
mov
pusha
sub
scas
or
mov
mov
inc
xchg
adc
jb
gs
dec
jb
inc
dec
aaa
jge
pusha
lock
cld
scas
mov
mov
xchg
add
jo
imul
clc
mov
jns
addr16
scas
lods
dec
cld
pop
jae
mulb
ss
mov
sub
in
pop
cmp
mov
lret
sbb
lds
push
and
sbb
cmp
mov
xchg
lret
inc
mov
js
nop
jmp
jno
cmp
mov
push
mov
add
cs
mov
idiv
mov
inc
test
inc
push
stos
push
shll
push
inc
lret
call
or
sbb
out
mov
mov
add
sub
fisubl
dec
das
xchg
inc
int
add
insb
and
orl
inc
test
jmp
xor
stos
out
out
add
mov
and
inc
dec
xor
sbb
popf
jg
ret
cltd
mov
jle
pop
pop
jecxz
sub
out
jg
xchg
in
nop
mov
mov
push
repnz
addr16
fmuls
fisubrs
and
lcall
inc
shll
mov
or
jns
xor
ds
jnp
dec
jge
popf
adc
add
cmp
cmp
adc
repnz
outsl
pop
addr16
sarb
data16
lret
mov
mov
cmp
or
insb
loop
das
inc
xchg
jmp
adcl
dec
roll
xchg
mov
in
pop
or
sbb
in
ds
mov
mov
cmpsl
cltd
and
mov
inc
loopne
test
repz
pop
cmp
addl
inc
adc
xor
pusha
dec
pop
aam
fnstenv
movsl
mov
mov
xor
cmp
xchg
insb
xchg
sub
out
mov
inc
xchg
pop
push
icebp
xchg
dec
rcll
inc
bndldx
mull
cwtl
mov
add
std
hlt
add
jns
ss
outsl
xor
xor
aad
in
mov
xor
decl
clc
fisttpll
or
aaa
xchg
inc
lods
lods
cmp
pcmpeqd
add
pop
ror
mov
mov
inc
jecxz
popf
mov
jle
cli
xor
fcoms
pop
xlat
rorl
adc
in
push
mov
aad
mov
mov
inc
outsl
clc
pop
aas
xchg
adc
and
push
pusha
cmpsl
xor
into
hlt
sbb
jp
cli
or
lods
movlhps
cmp
leave
adc
arpl
mov
pop
test
xchg
out
repz
call
xchg
gs
push
clc
push
jl
orb
lea
in
aam
or
fcoml
dec
arpl
imul
insl
cmpl
les
and
fwait
addr16
xor
fnstcw
push
jg
mov
cld
scas
les
sbb
pop
lods
sub
sbb
push
fadds
cmpsl
les
sbb
mov
mov
jmp
gs
push
pushf
out
test
mov
cmc
inc
and
and
xlat
out
xchg
das
xor
movsl
or
cmpsl
push
pop
xchg
scas
test
fiadds
popf
popa
outsb
test
pop
mov
dec
adc
fisttpll
mov
mov
rolb
or
sub
int3
fmul
adc
scas
adc
push
mov
test
les
add
mov
rcrl
imul
sub
jb
add
cmpl
sbb
fsub
xchg
push
comiss
inc
into
nop
dec
mov
lods
inc
fidivl
stc
pushf
movsl
ds
cmp
jae
mov
jmp
inc
scas
sub
test
xchg
jmp
adc
mov
xor
xchg
push
out
mov
mov
pop
nop
je
pop
sbb
test
iret
shlb
cmpl
lock
xchg
adc
rol
push
jbe
dec
push
pop
mov
push
push
test
pop
and
inc
cwtl
pop
or
xchg
push
lods
xor
push
inc
mov
and
mov
mov
das
into
daa
cmp
adc
cmp
or
mov
pushf
fdivp
push
repnz
imul
xor
xchg
mov
clc
ret
leave
or
popl
call
sub
inc
rorl
movsl
hlt
pop
or
jo
inc
xor
popa
outsb
mov
out
mov
inc
mov
mov
pop
stc
dec
push
xor
clc
pop
jbe
pop
dec
jecxz
jnp
sub
fidivrs
jns
clc
dec
and
pop
jbe
xor
pop
push
pop
jmp
push
jmp
inc
dec
push
push
lret
pop
and
or
lods
fldt
push
cwtl
aas
and
mov
add
cmp
fstl
imul
cs
xchg
popa
push
mov
loop
fdivrs
fisttpl
shr
xchg
and
fwait
enter
jecxz
mov
ja
push
out
loop
xor
mov
loopne
adc
clc
inc
shr
rolb
dec
int3
mov
mov
and
in
lock
dec
bound
shlb
lds
fnstcw
pop
adc
cmp
cmp
mov
add
fisttps
test
lcall
int3
repz
inc
or
inc
and
test
mov
add
sub
bnd
mov
push
push
mov
cli
dec
fisubrs
adc
xchg
pusha
scas
aam
les
scas
pop
sub
loop
shll
dec
arpl
out
cmpl
fcoml
jg
leave
xchg
icebp
fs
test
imul
loopne
movsb
add
jle
push
cltd
dec
push
pop
test
shrl
pop
or
or
mov
mov
cmp
lea
das
xchg
pop
sub
dec
mov
inc
mov
xchg
mov
jo
cwtl
sub
jne
inc
xor
jmp
pop
sub
mov
xchg
inc
lahf
push
mov
lahf
into
out
mov
repz
push
xor
scas
les
xchg
push
andl
ds
ficoml
and
add
pop
pop
out
jb
mov
lods
std
add
jecxz
iret
pop
dec
xchg
and
dec
jge
lret
push
jmp
js
inc
or
mov
xor
scas
sbb
inc
cltd
mov
pop
jle
lods
jmp
out
lret
hlt
xor
stc
or
lea
fistpll
xor
imul
imul
jmp
jb
push
int
jns
icebp
xor
push
imul
sbb
inc
dec
sti
inc
inc
jmp
jg
mov
testl
idiv
rcl
andb
sub
sbb
xchg
sub
call
xlat
gs
sbb
rcll
lods
in
xchg
cmp
jge
dec
ljmp
and
test
cmpsb
and
or
and
dec
mov
out
or
gs
pop
ljmp
ja
sbb
sbb
scas
shl
adc
jl
nop
xlat
pop
stos
shlb
frstor
xlat
mov
dec
push
xlat
cmp
lods
jae
xor
call
in
aaa
sbb
outsl
mov
sbb
push
int3
and
out
xlat
push
mov
jle
fsubrl
push
icebp
dec
cli
imul
mov
inc
cmp
cmp
dec
inc
cs
mov
test
insl
jmp
jne
xchg
inc
sub
mov
and
aam
xlat
mov
fisttpll
xor
addb
mov
pop
ss
xchg
xor
push
and
loope
pop
ss
mov
lret
mov
push
sbb
nop
arpl
dec
movsb
pop
aas
leave
fucomp
loope
iret
test
xor
xchg
pop
sbb
popf
lods
pop
mov
inc
sbb
mov
push
clc
jb
jns
mulb
cld
negl
fldl
or
pop
in
mov
cmpsb
das
stos
mov
call
inc
out
aad
sbb
aad
pop
mov
addr16
cli
mov
test
xor
sub
filds
sbb
and
negl
cmp
inc
cmp
nop
icebp
minps
mov
clc
cmpsl
shll
decb
push
sbb
xlat
add
imul
shrl
mov
imul
into
shrl
gs
and
repz
xchg
jns
pop
sub
lods
cmp
add
stc
out
lock
movsb
mov
mov
loopne
dec
mov
popf
sbb
testl
mov
test
clts
xor
jno
loope
rol
sarb
xor
pushf
or
and
or
iret
ret
ss
call
inc
daa
sar
push
push
mov
cmp
or
xchg
nop
mov
mov
outsb
call
mov
inc
mov
pop
fwait
ja
jbe
inc
rol
cmc
inc
lret
mov
cld
cmc
mov
adc
int
insl
test
mov
add
mov
int3
add
mov
dec
loopne
test
cltd
mov
shrl
fbld
faddp
and
int3
push
push
fwait
sbb
dec
cmp
pop
mov
and
mov
cmc
mov
and
mov
int
stos
test
cmp
jmp
inc
cmp
pusha
or
out
inc
xor
add
call
sub
xchg
movsb
cmpsl
xor
adc
sbb
jnp
lcall
or
jns
insl
ret
out
lea
mov
cli
jbe
pop
lds
rol
cmp
popf
mov
xor
nop
pop
jmp
xchg
out
sub
ljmp
out
mov
outsb
je
xor
jle
fldt
jge
cmpsl
lods
mov
dec
jns
xchg
out
imul
push
xor
popa
push
aas
sbb
cld
ja
out
outsb
outsb
xchg
decb
fsubs
loope
hlt
aas
pop
pop
and
xchg
nop
cli
cmpsl
sub
inc
lcall
and
or
outsb
movsb
data16
cmpsb
mov
xchg
and
cmc
mov
aad
xchg
inc
fcmovnb
sarl
inc
mov
jl
pop
cmc
test
daa
mov
rorl
leave
das
fcmovbe
andl
lods
fwait
and
push
int
lret
pop
jbe
data16
xchg
mov
cmp
imul
ja
or
cmpsb
mov
in
add
clc
stos
leave
aaa
push
xchg
gs
cmp
mov
bound
popa
std
cmp
aad
cs
fdivr
or
push
or
mov
imul
hlt
mov
add
push
jge
lea
jnp
sbb
cmp
jl
rcrl
orl
shll
in
fiaddl
shrb
sbb
adc
add
test
xchg
jge
mov
or
push
lods
orb
cld
add
sub
cmpsb
or
sbb
icebp
pop
clc
into
inc
iret
mulb
daa
outsl
adc
or
dec
lea
bnd
wbinvd
dec
mov
mov
adc
and
xor
xchg
adc
loop
out
out
cmp
mov
xor
inc
dec
pop
push
test
aaa
fidivs
xchg
hlt
lret
lret
sarl
sbbl
int
add
mov
mov
inc
cmp
cmp
inc
mov
sbb
mov
pop
js
mov
lods
push
mov
push
or
inc
rcr
lcall
sti
add
mov
inc
clc
or
aas
jmp
push
pop
dec
mov
xor
insl
clc
outsl
testb
pop
and
sbb
cmp
cld
testl
sbb
push
dec
int3
gs
xchg
std
cli
lock
aas
mov
xor
loope
ss
or
adc
and
jbe
fstpt
and
int3
add
jae
pop
ret
dec
sbb
loopne
sub
add
or
paddb
lret
push
mov
inc
mov
dec
pop
or
jbe
jge
push
rorl
mov
cs
xchg
les
sub
sbb
lahf
lods
das
insb
mov
cwtl
mov
iret
pop
mov
movb
fsubp
aaa
xor
sbb
sbbl
outsl
jg
add
in
les
xor
or
push
mov
notb
dec
sarb
and
ss
cmp
mov
pop
cltd
inc
ret
pop
lods
xlat
into
xchg
jp
lods
pop
sub
add
std
aam
testb
jnp
push
adc
add
popf
or
jmp
or
testl
inc
xchg
repnz
jge
in
icebp
sub
jmp
cmp
jno
fsubrl
cs
cmp
pop
push
stos
cmc
outsl
int3
rclb
push
sub
mov
mov
sbb
pop
icebp
outsl
sarl
into
mov
adc
dec
loopne
add
mov
test
sub
or
cmpsb
mov
in
mov
adc
mov
fs
shll
push
jg
fbld
mov
iret
mov
call
ret
je
cld
pop
jns
jo
pusha
inc
mov
out
sbb
inc
insl
jbe
rcrb
pop
or
clc
jb
fld
icebp
cwtl
jmp
and
rcrb
insb
out
sbb
in
mov
push
inc
loop
andb
jno
ja
jo
fmull
cmp
mov
jl
std
mov
test
shlb
and
mov
cmp
pop
mov
or
pop
ret
mov
sbb
lret
dec
lock
xchg
jecxz
mov
and
mov
mov
gs
jle
xchg
add
jae
div
mov
fcoms
push
stc
loop
sub
shl
bound
jns
gs
xchg
cmp
cmc
xchg
push
xchg
pusha
xchg
add
dec
es
push
xchg
jl
std
sbb
cmp
xchg
test
sub
push
test
pop
push
inc
pop
iret
dec
mov
lcall
xor
jne
outsl
mov
iret
mov
adc
push
cmp
xchg
jno
cmp
mov
stc
lock
xorl
push
jno
out
jg
dec
rcl
sbb
rcrb
mov
aam
pop
xchg
cmp
scas
xor
imul
dec
mov
cmp
insb
sub
pop
in
jno
nop
push
flds
je
lret
fs
mov
in
pop
pop
cmpsb
mov
mov
cmpsl
das
lahf
fildl
add
dec
stos
fstpl
or
mov
mov
cs
and
lret
sbb
int3
mov
aad
in
push
dec
push
dec
mov
fisttpll
enter
aad
je
icebp
mov
ret
jl
shrl
pop
xchg
insb
inc
inc
out
lock
imul
mov
push
adc
test
mov
mov
inc
mov
daa
sub
cmp
int
fwait
stc
sbbl
jmp
mov
push
and
or
movsb
into
xchg
data16
jo
mov
aas
xchg
push
cltd
push
mov
mov
mov
mov
cmp
sbb
push
dec
mov
jmp
movsl
add
ja
and
in
mov
pop
dec
adc
mov
push
into
daa
xchg
pop
mov
xchg
sbb
push
clc
dec
repz
and
std
scas
xchg
call
repz
cs
aaa
xor
xor
int3
int3
sbb
cs
aad
mov
dec
daa
mov
jge
and
and
push
mov
outsb
jl
mov
sub
gs
in
mov
loop
into
ret
cmp
sarl
bound
inc
lahf
ret
in
lahf
mov
xchg
and
adc
lds
ss
gs
enter
jecxz
nop
mov
cmc
dec
lods
xchg
fsubr
lcall
mov
sub
xchg
and
out
jmp
jge
movsb
mov
and
lcall
xor
jno
stos
lcall
cmp
mov
ja
je
mov
inc
gs
daa
sub
push
jl
pop
pop
arpl
in
sti
mov
orl
ret
or
shlb
mov
movsl
dec
mov
mov
xor
dec
mov
loope
xchg
mov
cmp
cmc
arpl
ud2
int
xchg
cmp
jl
jae
jb
sub
mov
jmp
mov
and
jle
sti
jecxz
jecxz
and
cmp
outsl
xor
inc
jl
xchg
sbb
or
ljmp
mov
and
push
jle
leave
and
mov
dec
stos
scas
push
lret
adc
or
loope
cmp
fildll
jno
cwtl
cltd
sub
or
adc
xor
aaa
out
inc
jmp
negb
stos
loop
mov
or
mov
jg
jnp
loope
mov
jno
jl
das
arpl
xor
xchg
xor
push
stos
ljmp
or
scas
testl
fisubl
xchg
loope
in
rcll
stos
push
cmc
ds
mov
or
sbb
mov
sbb
cltd
fwait
repnz
stc
xchg
notb
incb
idiv
dec
add
std
test
and
pop
jp
sahf
push
pop
sub
test
sub
xorb
inc
cmp
jne
stos
sti
dec
clc
int3
mov
sbb
or
and
rclb
inc
lcall
aam
repz
lret
cmc
sbb
fldenv
mov
js
fdivrs
jmp
scas
adc
add
push
icebp
jne
mov
jns
inc
mov
insl
xor
mov
imulb
push
popa
xchg
arpl
fdivl
cmp
or
cmpb
test
aaa
test
mov
cmpsb
mov
xor
nop
push
mov
adc
cltd
adc
dec
pusha
out
xchg
popa
pusha
inc
and
xchg
repnz
mov
push
mov
lret
mov
fisubs
add
adc
rcrb
xor
jno
or
push
sbb
movsl
add
lods
jnp
xor
std
dec
inc
xorl
xor
aad
shrl
mov
xchg
xchg
arpl
adc
ljmp
push
sub
lock
test
xor
pop
inc
cs
popa
fcoms
pop
sbb
push
insl
fnsave
rcrl
ja
out
ds
or
fnstenv
inc
movsb
scas
outsl
in
hlt
loope
mov
aas
or
dec
sti
ljmp
vpmacsdqh
xlat
lods
popa
mov
hlt
ja
ret
jge
jp
int3
sti
xor
dec
add
sub
test
jb
and
sbbl
cmp
inc
cwtl
pop
push
je
test
and
mov
arpl
mov
lods
push
jne
mov
faddl
lock
lcall
or
and
sub
movsb
add
add
data16
jle
loop
jo
inc
cltd
or
xlat
mov
mov
lods
push
scas
jbe
inc
push
int3
bnd
and
repnz
or
pop
ds
sub
add
xchg
pop
mov
mov
adc
movsb
sbbb
js
jmp
mov
mov
add
mov
pushf
jbe
adc
jne
cmp
jns
xor
add
mov
lret
or
divl
push
loopne
popa
aas
enter
into
fdivrs
cmp
nop
push
inc
jge
pop
jecxz
cmp
mov
adc
xorl
js
xor
rep
xor
std
xor
pop
mov
fwait
cltd
dec
test
cmp
std
les
adc
mov
mov
xor
adc
mov
insb
cltd
cmpsl
xor
scas
data16
fstpt
dec
and
mov
pop
out
mov
cwtl
pop
jmp
dec
out
cmp
or
xchg
sub
pop
xchg
insl
cmp
mov
xor
jnp
shrb
adc
icebp
xor
mov
ret
das
mov
jecxz
push
in
daa
push
push
xor
test
mov
and
cmpsb
mov
std
add
in
hlt
dec
in
add
stos
pushl
ljmp
jp
stos
jo
int
int
xor
lds
and
and
loop
adc
xchg
aas
rcll
fwait
ss
sbb
jg
xchg
xchg
ss
arpl
iret
mov
sbbb
test
hlt
mov
loop
gs
or
cltd
jge
mov
dec
adc
jecxz
call
icebp
jns
bound
mov
sbb
inc
push
lea
pop
scas
and
and
xchg
ja
push
daa
stos
movsl
lret
pusha
mov
inc
lret
pusha
jo
adc
mov
or
or
cmpsl
add
xorb
lea
addb
cmp
jo
cld
inc
inc
xchg
push
test
xor
aam
lds
jno
jmp
xor
xor
sub
int
stos
aaa
cmp
dec
sub
sbb
inc
jne
add
sbb
mov
ja
jbe
jns
lods
inc
jns
mov
fstp
clc
in
push
test
fwait
jecxz
popa
jb
dec
push
je
rclb
inc
fnsave
pop
pop
mov
or
push
fstl
scas
mov
push
aam
mov
push
or
and
inc
xchg
lods
addr16
jmp
inc
out
in
push
add
xor
lds
mov
jne
xchg
lahf
cmp
aam
dec
dec
and
dec
sbb
out
sbb
mov
loopne
ss
mov
jge
pop
sub
cmp
mov
movsb
imul
inc
iret
mov
gs
das
jbe
jns
push
repz
ror
scas
pop
lahf
jb
sub
lret
leave
leave
daa
lea
jnp
cli
cld
pusha
rclb
les
fs
inc
icebp
in
mov
and
pop
scas
xchg
xor
and
les
lods
into
lds
cmp
pop
daa
imul
out
inc
daa
push
pusha
push
push
cltd
mov
les
push
fwait
mul
aam
push
dec
lret
cmp
push
jne
mov
xor
addr16
sahf
sub
push
adc
pop
xchg
sub
mov
fs
aam
stc
mov
daa
movsb
push
sub
addr16
add
mov
scas
scas
int3
out
ljmp
mov
or
pop
mov
mov
push
add
and
add
jmp
push
mov
mov
cltd
pop
icebp
mov
jg
inc
dec
xorb
mov
in
mov
scas
popa
sbb
sti
int
add
mov
xchg
inc
pop
or
bound
rorb
mov
in
and
fs
push
and
gs
and
gs
ret
pop
in
out
std
dec
add
fs
mov
data16
mov
out
and
dec
cli
mov
jmp
jg
out
ja
pop
xor
outsl
icebp
sub
cld
mov
pop
adcb
daa
mov
or
loope
cmp
jae
jge
xchg
out
cmpsb
data16
xor
jo
gs
xor
push
and
mov
outsl
outsl
ret
add
mov
stc
cld
pop
or
jnp
push
and
gs
vorps
mov
cmpsb
mov
hlt
mov
mov
mov
mov
sahf
cmp
lahf
lods
xchg
divl
out
or
mov
ljmp
xchg
dec
push
xor
jnp
mov
mov
add
lods
xchg
iret
ss
mov
mov
fisubl
test
sbb
xor
nop
and
lahf
imull
cmp
mov
jb
in
or
les
out
dec
icebp
inc
cmp
or
arpl
mov
popl
pop
fwait
imul
mov
js
sti
cmc
inc
loope
dec
das
dec
test
les
call
es
mov
rol
pop
shlb
addr16
sub
pop
in
ret
loope
sbb
xchg
ficomps
pop
and
sbb
mov
lock
mov
mov
sbbb
xchg
int3
repnz
jle
rolb
roll
lea
ss
xchg
idivb
pop
xchg
mov
hlt
cmp
inc
les
loope
mov
pop
lret
xchg
rcrl
loope
jmp
pop
jne
insl
subb
mov
out
ret
cmp
push
fdiv
aad
push
hlt
jmp
lock
shll
dec
outsb
out
popf
idivl
js
adc
imul
or
test
cltd
lret
add
dec
add
and
xor
xchg
jmp
cld
pop
in
xor
aad
nop
outsl
fbld
fsubs
cs
dec
pop
adc
test
imul
lret
popl
xchg
and
sub
aaa
aam
mov
push
sub
mov
scas
aam
xchg
push
test
pop
rorl
filds
mov
cmpb
sub
lods
fisubl
call
push
loopne
aas
jo
mov
aas
inc
movsb
jg
das
aas
sbb
movsl
out
leave
mov
dec
jp
mov
pop
rclb
pop
aad
adc
sub
fcomps
in
test
and
fwait
mov
test
adc
repnz
decb
mov
addr16
push
sub
cld
or
sub
push
sub
dec
push
insl
pop
jns
sub
arpl
fcoms
cmp
imul
sti
add
roll
inc
mov
pop
imul
pop
pop
sub
mov
insb
inc
subl
push
pop
xchg
cwtl
mov
loop
mov
sbb
inc
jmp
and
jmp
gs
jge
mov
dec
jmp
lock
scas
fucompp
mov
jg
outsb
sbb
test
jg
mov
or
enter
lods
out
sbb
lahf
mov
xchg
into
pop
dec
add
inc
cmp
or
insl
pusha
mov
stc
imul
adc
mov
out
or
or
mov
push
sti
xlat
push
mov
adc
sahf
dec
adc
push
stc
cmc
lods
inc
and
dec
mov
adc
adc
rorb
add
and
bound
push
pop
cltd
adc
in
jle
xchg
mov
sub
sbb
jns
inc
enter
lods
leave
mov
add
mov
push
lock
mov
call
inc
fstpt
or
in
sbb
ss
repnz
add
jo
adc
xchg
inc
cmp
sbb
inc
sti
scas
gs
jecxz
jg
sahf
cli
test
out
or
nop
mov
or
jno
out
js
dec
mov
out
sub
fiadds
loopne
movsb
cmp
addr16
data16
mov
inc
ret
jae
clc
loopne
sbb
push
xchg
clc
dec
adc
mov
cmpsb
negl
loope
int
jno
movsb
adc
dec
and
out
jge
xchg
cmp
mov
pop
jno
inc
daa
jb
xor
mov
aas
ret
xchg
cmpsb
inc
clc
pushf
loope
pushf
and
inc
adc
ds
and
and
mov
dec
nop
xor
aas
add
jp
hlt
leave
and
mov
dec
inc
inc
dec
sbb
imul
int3
xlat
sti
pop
jno
enter
cmpl
rolb
sahf
aam
popf
add
filds
nop
adcl
aas
mov
add
test
inc
push
push
mov
inc
scas
mov
push
add
and
xchg
or
inc
push
in
cmpsl
pop
std
jmp
xchg
pop
mov
push
call
inc
pop
popf
lock
mov
cbtw
stc
push
jecxz
jl
push
inc
outsl
xor
sub
iret
fisubs
mov
cmp
loop
lahf
dec
inc
pop
pushf
ret
jp
push
push
mov
and
jle
les
mov
jns
xor
js
test
fadd
xchg
pop
jl
and
adc
or
cmp
mov
aad
fisubrs
push
fsts
mov
and
dec
or
push
into
ss
push
dec
mov
adc
jno
sbb
lcall
pushf
jae
add
dec
push
test
ret
lret
aad
xchg
mov
fucom
popa
push
icebp
cwtl
hlt
test
push
clc
out
jnp
out
mov
ja
xor
mov
cmc
jecxz
insl
nop
jnp
in
cwtl
in
jne
pop
inc
mov
loop
testl
dec
sbb
push
sbb
cmp
mov
enter
movsb
xor
jg
cs
push
bound
fsubrl
insl
cli
push
mov
popf
mov
push
pop
sub
in
xchg
stos
mov
imul
add
lret
jbe
dec
in
pop
and
mov
int
ret
and
loope
testl
rcll
rclb
int3
adc
das
jae
test
lods
jmp
jg
dec
cmp
fmulp
jecxz
aam
in
ds
out
sbb
mov
inc
jmp
cld
mov
es
fsubs
xor
les
aas
mov
in
icebp
fwait
mov
sti
jge
mov
jbe
dec
int
pop
arpl
and
outsb
add
jle
cmpsb
xor
stc
mov
adc
imul
mov
and
std
inc
sub
push
xor
push
jb
int3
mov
push
js
xchg
add
sub
scas
dec
ds
int3
add
xchg
sahf
adc
or
jp
xchg
jno
pop
jae
mov
adc
les
mov
sbb
and
jno
pop
add
jnp
adc
xchg
push
mov
sub
test
lds
repz
gs
mov
pop
andl
mov
shll
and
adc
cmp
fidivrl
ret
cmp
sti
ret
lods
xchg
mov
popf
xor
push
cmpb
inc
pusha
shlb
test
scas
jecxz
rcrb
cmp
mov
sbb
push
cltd
ljmp
mov
andl
sub
push
lock
icebp
jle
scas
inc
fucom
data16
sbb
psubusw
mov
movsl
test
xchg
enter
in
mov
sub
loop
dec
lods
sub
es
and
sbb
mov
inc
bound
cmpsl
in
mov
cmc
lds
adc
imul
int
lock
mov
lods
sbb
pop
frstor
mov
adc
cld
es
jb
and
iret
shlb
mov
or
lcall
dec
mov
jnp
sti
inc
xor
pop
fs
sub
and
sub
sub
pop
dec
pop
inc
orl
dec
rcll
jne
lret
push
inc
adc
rolb
and
xor
pop
dec
out
out
and
fmuls
cmp
mov
jmp
insl
push
inc
repnz
sbb
push
mov
repnz
push
std
xchg
push
sub
movsb
pop
cmp
add
shrl
lcall
vpsubb
or
or
shll
cmp
mov
pop
lret
idivb
aaa
and
dec
inc
mov
loope
jnp
lds
je
fs
jecxz
push
lret
test
rcl
out
in
cmpb
aaa
ret
lods
xchg
inc
pop
addl
cwtl
cmp
jb
jl
ljmp
rorb
outsb
mov
or
and
jg
and
iret
mov
sub
call
loope
cmc
dec
test
enter
mov
popf
iret
sbb
das
dec
ret
outsl
adc
pop
imul
jae
into
jo
inc
fdivs
xchg
jnp
jo
ljmp
cmp
inc
cld
xchg
ror
xchg
imul
inc
out
lods
xchg
sub
push
cld
add
push
imul
shrl
ror
fcoml
push
add
mov
inc
jnp
in
and
sub
out
mov
push
dec
push
sahf
dec
data16
or
ret
ja
in
mov
jmp
jge
je
push
cmp
dec
or
ljmp
jle
mov
in
jmp
iret
in
daa
pop
es
add
iret
or
dec
and
pop
ret
jne
repz
or
jns
xchg
push
shll
sarl
mov
add
add
test
lock
sub
icebp
iret
mov
sbb
cli
aad
jle
pusha
mull
call
inc
dec
mov
outsb
les
test
pop
bound
es
mov
fcmovnb
and
mov
cmp
test
into
nop
ret
cmpsl
and
scas
adc
dec
lods
dec
outsb
cmp
pusha
sub
jg
and
cmpsb
outsl
push
jo
scas
daa
xor
inc
dec
pop
and
in
scas
sbb
ficoml
push
sub
cwtl
rcl
dec
fsubl
stos
xor
push
adc
adc
pop
sub
cmc
fs
imul
cmovle
dec
movsl
jl
divl
js
push
xor
pop
sahf
xor
pop
leave
scas
push
call
xor
fcmovb
mov
jo
les
push
fisubrl
push
mov
das
xor
xchg
int
xchg
je
mov
in
je
mov
in
loopne
or
mov
in
arpl
shl
int3
dec
enter
push
add
sbb
mov
adc
ljmp
xchg
nop
dec
xor
mov
adc
jp
mov
ljmp
or
mov
mov
dec
and
and
in
mov
sbb
loop
out
mov
adc
fimull
pop
mov
fwait
imul
sbb
mov
and
pop
push
clc
imul
stos
jns
out
sub
cmp
mov
aaa
adc
mov
add
insl
xchg
push
loopne
test
xchg
incl
mov
mov
sub
mov
inc
in
sub
cs
inc
xor
adc
or
in
mov
lock
sub
lods
lret
mov
jle
scas
dec
call
jecxz
lds
lods
out
arpl
mov
push
sarb
ss
inc
ljmp
pushf
adc
das
cs
lahf
mov
imul
sub
mov
stos
mov
aad
cmp
and
lret
add
test
mov
ljmp
cmp
sub
movsb
pop
mov
xchg
aam
movsb
push
dec
arpl
push
pop
clc
out
dec
ficoms
pop
fidivs
cmc
push
push
fstpt
sti
or
jae
xchg
jne
sbb
cmp
mov
push
cwtl
pop
orl
mov
icebp
scas
push
lock
adc
add
xor
xchg
outsb
out
mov
mov
jne
popa
xlat
sub
les
sub
rolb
into
push
dec
jnp
push
out
fwait
sbb
sub
and
enter
jns
test
push
adc
or
add
dec
mov
pmullw
sub
fadds
or
jp
sub
test
in
adc
out
incl
sub
sub
or
ret
stos
adc
dec
jne
mov
push
jnp
jle
lahf
sbb
arpl
jne
pop
int
out
inc
ljmp
enter
mov
pop
xchg
lret
enter
insb
add
sub
icebp
lock
jns
shll
jno
xchg
js
xor
filds
stc
mov
insl
and
cltd
in
sti
mov
xor
adc
pop
stos
iret
shrl
dec
pop
ss
test
dec
inc
andb
or
mov
mov
fs
movsl
dec
xor
jle
xchg
push
sbb
dec
mov
sbb
add
and
xor
int
pop
mov
movsl
cmp
ljmp
mov
add
ds
cltd
addr16
pop
js
jecxz
mov
pushf
dec
push
mov
pop
sub
inc
xchg
ret
sub
mov
push
and
adc
repz
push
test
fs
call
xor
insb
and
out
dec
jmp
or
xchg
jp
out
pop
popa
jg
fstps
pop
andl
mov
mov
bound
jns
jo
add
mov
jne
mov
insb
xchg
scas
cwtl
ret
test
es
xor
mov
jg
jo
cwtl
insb
cmp
lcall
ja
mov
rcrb
mov
dec
fisttpll
mov
jle
mov
pop
movsl
stc
rorb
xchg
popf
cmpsb
mov
call
adc
inc
idiv
ds
mov
cs
es
ret
ucomiss
jmp
xor
adc
test
fsub
push
xchg
popf
fstps
sbb
mov
out
test
pop
pop
je
scas
scas
jmp
pusha
call
and
add
sti
push
cmpsl
imul
mov
pop
mov
or
xor
push
cmp
or
xor
push
int3
cmp
imul
stos
push
jecxz
jb
ja
pop
orb
mov
mov
lock
add
xor
cmp
ljmp
leave
jle
out
pop
cmp
pusha
icebp
std
xor
lcall
dec
out
loope
sub
xchg
lods
pop
jo
adc
mov
sbb
push
cld
insb
into
aad
push
adc
stos
xor
loopne
dec
sbb
xchg
sbb
in
testl
adc
xchg
jle
cmp
push
imul
sub
sub
outsb
fsubs
bound
and
push
cmp
sub
loope
fistps
mov
push
les
push
sbb
jo
jnp
mov
pushf
mov
data16
add
mov
mov
add
mov
inc
jmp
iret
inc
or
pop
add
pop
inc
push
orl
sub
ret
xchg
adc
adc
loope
out
add
lock
mov
roll
mov
xor
mov
call
subb
sbb
ss
jno
push
das
fstpl
jl
dec
flds
mov
test
add
xchg
xor
out
jge
xchg
jge
clc
or
icebp
xchg
fadds
movsl
cld
xor
shr
sub
inc
negb
push
cmpsl
sbb
mov
jns
sti
jo
lret
push
add
cmpsl
push
ds
pop
loop
lahf
mov
fcoms
pop
xor
fisttps
or
dec
mov
fimuls
movsl
jle
push
jl
int
dec
enter
negl
scas
lock
hlt
pop
jno
push
xchg
adc
adc
or
xor
cltd
cld
test
dec
push
and
movsl
cmp
movsb
loope
inc
xor
mov
jns
inc
fnstsw
les
lods
shll
xor
outsb
jg
xchg
cld
test
mov
insl
in
cmpl
icebp
add
pop
mov
mov
pop
outsl
sbb
lret
out
mov
fxch
xchg
lods
lods
pop
jo
int
adc
mov
movsb
adc
push
mov
jbe
dec
push
xchg
shrb
int
dec
jl
push
fisubl
and
out
sub
inc
adc
add
ja
xor
inc
imul
bound
es
das
rolb
push
psrlq
es
cmc
cltd
push
jae
sub
inc
add
inc
pop
std
insb
and
push
hlt
cmc
sbb
repnz
cwtl
out
jne
roll
xchg
mov
cwtl
rcll
and
test
in
lcall
adc
js
xor
lret
mov
and
inc
mov
jp
loop
movsl
lock
jb
mov
sub
cmp
xchg
in
xor
sbb
outsl
jbe
xor
pop
dec
sahf
aam
xchg
inc
jle
xchg
pop
shlb
imul
stos
cmpb
aad
adcl
mov
loope
mov
leave
cwtl
mov
fs
sub
cmc
aas
sub
push
insb
daa
sarl
adc
cmp
pop
jmp
xorl
or
adc
sbb
push
sbbb
lret
movsb
lds
mov
cmc
mov
xchg
cmp
adc
pop
add
cwtl
pusha
add
cmp
mov
fidivrl
ljmp
fimuls
scas
int3
jmp
jno
lods
mov
mov
add
push
mov
mov
push
insl
loopne
int3
mov
jb
add
mov
xor
mov
mov
inc
std
add
mov
lods
pop
jb
or
stos
lret
xor
std
inc
and
adc
add
mov
rclb
test
repz
mov
xchg
mov
jge
push
mov
ljmp
cmc
sub
sub
mov
ret
pop
sub
dec
add
xor
int3
sub
mov
int
push
cmpsb
mov
push
xchg
ja
hlt
inc
addr16
sub
inc
lock
out
std
or
pop
decl
mov
push
popa
pop
cwtl
mov
adc
add
mov
pushf
mov
mov
frndint
fistl
loope
dec
in
leave
popa
or
inc
or
dec
mov
loop
or
imul
and
inc
sar
data16
mov
and
xchg
aas
sbb
cmp
xchg
inc
jo
imul
add
cwtl
xlat
subl
mov
pop
out
aaa
xchg
mov
negl
fs
sub
inc
pusha
lea
and
mov
out
dec
xchg
and
mov
iret
mov
repnz
sti
popf
cmc
outsb
loope
jae
je
and
lret
out
enter
adc
js
std
leave
jb
mov
or
xor
cmp
scas
ja
movl
cmp
popa
xor
cwtl
fmull
das
xchg
test
mov
shl
and
push
cwtl
xchg
les
xor
jne
popa
pop
sub
clc
mov
jp
jg
test
es
mov
enter
lds
inc
or
das
in
mov
lret
jl
popa
sub
stc
cmp
les
addr16
in
in
fistpl
lahf
popa
cmpsb
or
cld
pushf
outsb
ja
xor
ja
mov
fisubrs
arpl
repnz
xor
ds
mov
test
les
inc
sub
mov
push
inc
shlb
jne
arpl
or
xchg
mov
sub
les
jo
fstpt
xchg
lds
lods
cmp
out
push
lcall
cli
xlat
inc
jge
xor
xchg
sti
aaa
jge
sti
inc
nop
dec
loop
test
cmp
cmc
scas
push
jecxz
xor
jae
scas
mov
lds
xchg
mov
cmp
inc
insl
mov
adc
loopne
dec
loopne
aam
jecxz
in
adc
mov
mov
and
test
mov
pop
dec
jle
and
mov
scas
int
dec
lret
or
mov
push
mov
adc
cmp
stos
mov
outsb
xor
rcrl
into
push
inc
push
lahf
pushf
std
push
aaa
movsl
sub
mov
or
stc
push
test
sbb
je
ret
lret
mov
mov
fldl
int3
mov
cmpsb
jl
hlt
lret
ret
mov
mov
sbb
iret
mov
jo
aas
je
xchg
lret
sbb
loop
push
inc
or
cmp
mov
pop
mov
jns
sbb
loope
stc
je
int3
ljmp
mov
dec
test
jne
movsb
xor
fs
imul
popf
ret
and
dec
movsl
leave
jecxz
add
in
push
sub
in
sbb
sbb
pop
and
pop
push
sbb
movsl
inc
mov
pop
outsb
out
cld
inc
out
xor
cli
xchg
mov
dec
add
das
and
ret
and
mov
pushf
ror
push
inc
inc
push
jno
fldlg2
push
out
lret
aam
ds
fwait
mov
aas
ret
test
inc
mov
cmp
ja
sub
loope
arpl
in
xchg
data16
push
inc
repz
test
adc
pushf
fcmovnb
mov
cli
fcoml
or
sub
or
mov
mov
push
cmp
lods
ja
popa
repnz
and
pop
xor
imul
lds
inc
jl
inc
cmp
dec
arpl
stos
rolb
frstor
mov
mov
test
pop
xchg
imul
ficoml
push
bound
jl
shlb
daa
imul
orl
mov
hlt
xor
cmp
push
jl
stos
adc
dec
mov
jno
add
inc
jge
push
sti
mov
xchg
push
dec
cli
adc
iret
cmp
jg
imul
sbb
inc
rorl
fsubrs
mov
cli
cmpsb
sbb
cmp
cltd
push
jp
inc
loopne
ss
pusha
fsubr
pop
loopne
mov
sub
fisubrs
icebp
test
add
and
jmp
outsl
pop
clc
in
xchg
adc
sbb
push
mov
shrb
je
test
xor
movsb
cmp
fists
mov
testl
push
mov
or
inc
or
xlat
sub
mov
jae
pop
shrl
fisubl
mov
push
cld
loope
incl
enter
movsl
and
out
loop
arpl
mov
cmc
sub
aas
inc
ficoms
pop
movsl
dec
jg
dec
daa
aam
pop
jmp
bound
dec
int
jae
divl
jg
ja
mov
sahf
xor
cs
dec
lods
addr16
pop
faddl
lea
repz
test
dec
scas
loop
pop
loope
add
push
enter
mov
ret
fiadds
test
sub
jle
inc
out
in
mov
nop
pushf
imul
imulb
mov
test
adc
mov
in
repz
adcl
out
insl
shlb
xchg
fnstenv
inc
and
stc
or
movsl
scas
out
push
pop
daa
in
sbb
and
stos
movsl
mov
inc
mov
add
push
sbb
in
pop
outsl
and
push
sub
mov
test
leave
inc
aam
lahf
fldcw
into
jle
jmp
test
mov
test
enter
mov
adc
rclb
cmp
je
dec
xor
pushf
idiv
sbb
std
xchg
lcall
jb
pop
sbb
stos
test
fmul
add
fsub
lret
shl
cmpsb
int
dec
inc
sarb
adc
and
hlt
imul
mov
mov
pusha
mov
xchg
mov
add
sub
andb
jmp
es
dec
and
sub
std
scas
pop
fmull
pushf
cmpsb
xor
dec
into
loope
fucomi
adc
repz
mov
lcall
cltd
test
push
leave
sub
xorl
adc
jb
inc
insb
mov
and
adc
push
es
jne
loope
orl
and
and
das
mov
scas
and
hlt
mov
jb
push
int3
push
cli
cmp
pop
addr16
jmp
popa
push
cmp
inc
xor
test
adc
lret
cmp
mov
sbbb
enter
loop
popa
test
mov
push
xor
mov
inc
mov
push
add
jb
xchg
das
mov
jp
mov
pop
das
push
push
adc
stc
jl
out
mov
cwtl
adc
xchg
mov
mov
and
or
div
push
leave
xchg
jmp
sbb
cmc
xchg
dec
xchg
pop
inc
outsl
or
scas
test
jle
adc
cld
mov
mov
cmpsl
sub
jge
test
in
jp
hlt
cli
push
adc
pop
mov
add
out
push
popa
jp
inc
outsb
les
testb
push
jae
sbb
adc
push
arpl
sbb
sbb
fidivrl
xchg
insb
stos
push
mov
add
in
mov
sbb
jmp
out
or
pop
dec
or
mov
loope
fldt
rorl
roll
divl
adc
xchg
out
inc
xchg
stc
inc
fucom
adcb
imul
mov
test
add
xlat
dec
arpl
pop
mov
in
xor
dec
test
mov
inc
addl
or
sub
movl
push
in
add
aam
dec
or
jnp
or
mov
pop
inc
stos
and
mov
int
insb
mov
inc
push
cmpl
mov
fsubl
xchg
scas
sti
mov
and
in
outsl
mov
dec
shll
fbld
sub
pop
xlat
into
xor
push
and
push
fnstsw
jl
mov
dec
repnz
push
pop
out
jo
cmp
mov
sbb
cltd
pop
push
xabort
mov
sub
sub
fisubl
imul
lock
mov
movsl
rol
sahf
test
stc
cld
cmpsl
sbb
pusha
je
inc
mov
flds
mov
imul
sti
flds
lahf
xchg
pop
filds
pop
sub
and
push
out
aas
sarl
pop
add
ret
enter
fcom
jbe
stos
inc
inc
adc
iret
xor
shl
jmp
push
xchg
cwtl
adc
push
nop
xchg
cs
nop
sub
or
cli
or
inc
add
and
push
cwtl
inc
add
inc
adc
sub
lea
sub
dec
insb
jg
jo
out
pusha
mov
and
mov
imul
mov
dec
test
xchg
mov
mov
cmp
pop
cltd
gs
push
sbb
call
in
into
enter
mov
mov
pop
iret
ror
inc
pop
and
popw
push
mov
addr16
jg
xlat
lods
mov
imul
push
jmp
push
push
notl
sub
mov
lsl
ss
test
jo
in
ja
mov
xor
xor
xchg
jmp
popf
mov
mov
sbb
adc
jmp
repz
xor
fidivrs
shlb
mov
mov
fcomps
inc
cwtl
cmp
inc
dec
sahf
js
pop
or
push
mov
push
je
adc
sbb
sub
push
mov
repnz
push
and
dec
cmp
add
scas
adc
repnz
push
mov
fidivl
mov
lods
dec
xor
xor
adc
xor
mov
dec
hlt
daa
adc
xchg
scas
aas
or
cmp
shll
adc
les
inc
test
roll
js
mov
pop
fs
inc
mov
mov
imul
ss
sbb
mov
leave
enter
dec
movsl
jo
sbb
dec
mov
mov
xchg
sbb
test
loope
xchg
inc
sbb
mov
addr16
insb
pop
lcall
movsb
sar
out
pop
sbb
adc
or
jne
mov
imul
add
cmc
push
mov
aas
inc
jb
inc
fisubrs
xor
fsubp
daa
xor
int3
xor
or
cld
ljmp
inc
adc
fadd
fmulp
fptan
cmp
mov
sahf
cmp
shrb
ret
imulb
popf
pop
adc
jmp
xor
imul
aaa
ja
int3
ret
lahf
inc
stos
mov
pop
psraw
adc
lds
mov
xchg
inc
push
fsubs
or
stos
add
pusha
mov
int
dec
xchg
xchg
dec
pop
inc
jmp
cs
jnp
pop
test
jl
js
push
sub
add
add
nop
lret
add
add
sub
xor
shr
xchg
rcl
lret
dec
inc
jecxz
and
cmp
fdivp
jmp
sbbl
cmpsl
shlb
adc
cld
loop
jg
push
sbb
fistps
aaa
xchg
mov
push
clc
cmp
dec
ja
mov
pop
loope
cmp
bsf
roll
shr
mov
push
and
mov
sub
test
sub
cmp
mov
sti
push
pop
xor
insb
mov
sbb
jns
cltd
sbb
sbb
mov
ja
mov
shll
xor
inc
jno
sbb
jp
in
mov
mov
mov
mov
je
dec
jo
mov
cmp
dec
mov
pop
adc
andl
sbb
std
sub
push
jo
pop
es
push
daa
push
mov
mov
jb
mov
push
pop
dec
test
add
mov
shll
filds
imul
cmp
iret
dec
testl
inc
cwtl
in
cmpb
adc
sub
notb
push
pop
into
mov
lahf
aaa
mov
add
sbb
fimull
mov
das
dec
sub
add
movsl
sbb
mov
and
xor
push
insb
jp
int3
mov
stc
test
xorb
testl
cltd
insb
push
mov
dec
adc
stc
cltd
jno
dec
cmp
sbb
push
aad
inc
jp
pop
cmp
xchg
cli
outsl
cmpsb
mov
xchg
cmp
mov
jb
mov
sub
mov
push
mov
clc
mov
bound
push
addr16
imulb
adc
and
cmp
cmp
ja
dec
fistl
insl
fsubs
clc
xchg
inc
mov
sbb
cmp
fs
scas
mov
inc
sbb
sahf
jnp
xchg
fistpl
outsl
movsl
and
loope
mov
push
push
call
or
loopne
cltd
xchg
ss
std
and
arpl
xor
popl
sub
jge
or
sbb
and
cmp
push
jg
orb
sub
sub
mov
std
movsl
cmpsb
sahf
xchg
ret
std
inc
lds
mov
enter
push
jg
xchg
jae
cmp
and
pushf
and
hlt
hlt
dec
enter
xlat
inc
bswap
dec
fs
xor
cmp
push
test
lock
cli
pop
inc
xor
xor
les
in
mov
pushf
mov
std
lret
bound
pop
and
cld
hlt
je
popa
add
sub
cmpb
fucomip
cli
fistpll
imul
popf
cld
imul
pushw
sahf
outsb
daa
int
xchg
mov
pop
add
jo
pushl
mov
dec
push
aas
es
leave
notl
popa
outsb
jo
sarb
xor
xor
shr
mov
or
pusha
ja
mov
cs
lcall
pop
and
push
xchg
lock
je
fwait
dec
clc
pushfw
into
loope
xor
push
adc
dec
in
cmp
fistpl
inc
stc
jl
ljmp
sbb
jmp
cmp
push
int3
cmpsb
sbb
xlat
mov
mov
jecxz
sub
pusha
mov
pop
mov
repz
jns
xchg
shlb
repnz
ljmp
fs
add
shl
dec
fsts
sub
mov
inc
mov
mov
gs
adc
cs
pop
and
pusha
jecxz
push
popa
jns
mov
lea
sbb
cmpsb
mov
pop
pop
sbb
cmpsb
adc
inc
xchg
inc
or
push
and
ja
xor
dec
push
or
lods
imul
jne
mov
ss
test
daa
inc
pop
cmp
cmpsl
ret
inc
add
and
mov
push
inc
sbb
push
test
adc
stc
or
les
fwait
movsl
cwtl
aas
fsubs
aad
in
pop
movsb
xor
lods
cld
adc
imul
cmp
push
jno
push
test
jbe
push
stos
add
sbb
aas
addr16
sub
jbe
std
sub
sti
repz
lds
xchg
sbb
out
int
das
std
in
fists
mov
into
xchg
sti
imul
ljmp
xchg
jbe
jg
shlb
cmpb
filds
shl
push
loopne
sub
fstp
and
sub
sub
sub
or
xor
inc
xchg
sub
lahf
cs
push
jmp
pop
jno
or
push
mov
arpl
mov
push
rolb
jno
or
pushf
loopne
mov
sti
or
cmp
rorl
jno
and
rorb
sub
dec
sbb
lods
test
xchg
aas
xorb
sub
xor
add
cmp
rcll
mov
xor
fisubl
cmpsb
mov
xchg
pop
add
xchg
lahf
jecxz
xor
sub
inc
xchg
int
sub
push
push
push
jne
cmp
pop
dec
fcom
mov
popa
int
or
andl
push
inc
push
pop
jmp
inc
mov
jecxz
push
jnp
aad
xchg
xchg
adc
int3
push
lods
ja
aas
inc
sub
xchg
adc
push
mov
lock
mov
adc
and
or
push
dec
pusha
popf
push
fdiv
scas
push
xchg
push
lock
in
out
add
movsb
int3
subl
cmp
ja
int3
mov
push
andl
flds
cld
push
dec
cli
or
dec
sub
mov
pop
inc
clc
xor
mov
dec
xchg
pop
sar
push
pop
adc
shll
cmp
pop
mov
shlb
dec
icebp
aaa
sti
mov
add
inc
pop
mov
pop
ss
mov
xlat
or
lods
jnp
fcomp
std
stos
dec
push
les
adc
adc
out
mov
hlt
mov
xor
mov
test
push
or
iret
xchg
mov
repnz
mov
pop
and
pop
mov
sbb
jns
cwtl
orl
insb
fiaddl
add
push
insl
sbb
sbb
test
jb
mov
inc
gs
stos
ror
sbb
mov
push
arpl
sbb
mov
lds
add
mov
enter
push
mov
mov
sbb
in
leave
adc
jnp
xchg
jb
mov
fwait
cmp
xor
or
jne
out
push
hlt
push
dec
xchg
adc
in
ljmp
sub
pmaddwd
aam
push
test
mov
adc
mov
stc
je
fxch
mov
xor
and
sbb
rcll
sbb
imull
ds
mov
xchg
adc
sbb
dec
negl
jb
dec
pop
or
fdivr
dec
sub
inc
repnz
mov
mov
dec
std
and
jbe
dec
push
and
or
js
mov
pop
jl
jmp
outsb
stos
in
xor
stos
movsb
sub
and
repz
mov
jecxz
add
test
and
fisubrl
xor
mov
pop
add
xor
xchg
clc
pop
mov
mov
scas
test
sbb
leave
mov
cmp
push
ss
xchg
mov
inc
insb
push
das
sub
sbb
aam
pop
inc
enter
cmpsb
call
mov
lods
mov
sahf
mov
test
repz
pop
inc
jb
out
sub
loopne
out
sub
xchg
das
adc
in
sahf
in
rorb
mov
repz
fs
lahf
adc
lret
xor
inc
inc
push
in
jb
out
ljmp
add
sub
ljmp
push
outsl
dec
ds
xlat
xchg
shll
mov
mov
add
in
rolb
repnz
jne
xlat
pushf
fmuls
dec
loop
xchg
pop
push
cmp
fsts
idivl
cs
movl
jno
mov
call
jl
jbe
pop
aaa
mov
xchg
adc
pop
sub
xchg
mov
rcrl
xor
movsl
and
jnp
and
adc
dec
rcl
das
jecxz
in
pop
push
push
and
fbld
ret
hlt
scas
into
decl
sbb
jge
fcompl
mov
andl
js
cmpsb
mov
push
push
mov
mov
addr16
std
jno
cmpsb
xchg
out
mov
ret
mov
sbb
out
mov
cmpsb
js
jl
dec
pop
cmp
mov
imull
pop
leave
rorl
xchg
cmp
jne
pop
test
inc
dec
shr
sti
or
daa
xchg
fwait
pop
addr16
cli
or
rolb
scas
arpl
lret
push
push
jg
jne
jae
arpl
pop
jge
pop
das
in
pop
cmc
sti
imul
fistpll
stos
jp
pop
fdivrs
sbb
mov
mov
dec
inc
ret
pop
cmp
cld
pop
in
xor
adc
lahf
or
lds
movsb
dec
jno
and
mov
push
add
push
jns
xor
jge
stos
cmp
sub
push
adc
and
icebp
icebp
mov
mov
test
sbb
jno
lock
push
cmc
cld
or
fwait
mov
das
push
pusha
popf
mov
cmp
scas
notb
out
lahf
test
push
push
fcmovb
pop
ret
add
lock
inc
loopne
shlb
mov
pop
push
pop
jbe
ss
addr16
test
in
adc
decl
xorb
js
mov
dec
dec
pop
jo
and
push
sbb
sub
mov
mov
cmp
inc
or
ret
lods
adc
push
jl
rcrl
lds
repnz
cmp
int
fldenv
adc
xchg
jmp
pop
mov
repz
out
das
inc
or
mov
mul
mov
cwtl
popf
mov
cltd
lret
and
cmp
dec
or
daa
in
dec
inc
cmpb
xor
jb
pusha
dec
les
adc
and
mov
cmp
out
dec
imul
clc
cmc
dec
pusha
fildl
dec
das
and
icebp
stos
xchg
hlt
lcall
imul
rcll
push
jle
push
stos
mov
fsubs
out
lods
or
push
cmp
sub
inc
mov
pop
sub
out
and
cmp
ss
ficomps
jb
jl
lret
sbb
sbb
lea
push
in
jno
mov
sub
push
in
shrl
mov
xchg
cmpsl
dec
sbb
out
gs
or
lds
daa
test
pushf
inc
push
xchg
adc
iret
xor
add
xor
dec
adc
mov
shrl
xor
sarb
es
bound
mov
out
adc
pop
vmwrite
in
nop
rolb
rcl
sarl
js
mov
mov
and
cmpsl
mov
imul
adc
sub
and
aad
adc
mov
aam
mov
outsb
pop
mov
mov
rolb
mov
dec
mov
inc
or
adcb
hlt
adc
inc
rorb
stc
inc
leave
mov
push
mov
pop
packsswb
add
cmp
mov
pop
mov
mov
xor
adc
push
inc
push
inc
pop
psadbw
cld
jp
mov
mov
out
and
bound
mov
test
rolb
in
scas
or
lahf
xchg
sub
scas
push
and
cmp
xchg
mov
jl
cmpsl
sahf
push
stos
es
xor
mov
inc
xor
inc
rol
daa
mov
jl
dec
push
fcmove
bound
xchg
insl
into
aam
mov
mov
adc
sbb
mov
dec
data16
push
mov
mov
std
and
mov
into
cmp
adc
dec
fldcw
test
xor
fnsave
push
outsl
fwait
ljmp
mov
lods
in
lret
sub
in
stos
xor
fcoml
sahf
fistl
mov
mov
dec
sub
add
mov
dec
scas
adc
fldl
fisttpl
dec
fidivrs
subb
push
sub
xor
push
cmc
xor
sub
sub
sub
mov
cmpsb
popf
out
push
jmp
es
aam
cmp
fisttpl
jbe
add
dec
xlat
aas
loope
mov
sbb
leave
outsl
movsb
inc
push
cmp
add
mov
push
push
jno
scas
push
les
negl
sub
enter
mov
xchg
cltd
je
jge
xchg
lret
repz
xor
rolb
inc
push
cmpsl
test
fsubl
adc
xlat
cmp
jge
cld
stos
xchg
add
mov
jge
cmp
add
in
add
stos
fsts
xchg
lret
cli
insl
jbe
fisttpl
scas
in
sub
sbb
push
mov
enter
mov
roll
or
sbb
sbb
cs
cmp
lret
out
dec
cmpsb
mov
popa
adc
fistps
pop
pop
xor
enter
sti
mov
outsl
out
push
call
out
mov
jge
mov
xor
mov
xor
rol
lahf
outsb
sub
and
sbb
pop
mov
or
mov
sub
testb
push
and
movsb
xorb
push
or
mov
cmpsl
jp
xchg
cli
ljmp
jo
enter
cmp
inc
mov
jg
lret
popa
add
cmpsl
ds
jp
loope
fadd
out
xor
or
into
js
sbb
lds
push
and
sub
mov
pusha
jo
cmc
test
cmp
mov
mov
mov
or
pop
jmp
addb
andl
push
rcrb
sbb
push
shl
int
xor
sub
sub
or
out
das
sbb
cmp
lcall
outsl
sbb
add
or
daa
bnd
stc
cmpsl
fnsave
cli
and
inc
lods
push
jl
jecxz
jnp
push
arpl
xchg
xchg
sbb
push
jns
push
orl
or
jbe
jbe
cmc
cli
inc
test
jbe
popf
jae
pop
arpl
lcall
mulb
cltd
sub
mov
jae
shll
hlt
out
sbb
bound
cmc
stos
addr16
pushf
addl
pop
lds
scas
sti
pop
sbb
lret
repz
aad
mov
sahf
mov
loop
ret
xor
aaa
mov
add
adc
fwait
mov
mov
push
xchg
cmp
insl
xchg
xor
jle
inc
push
or
ret
mov
mov
xchg
push
inc
cmp
movsb
sti
xor
ficompl
add
mov
push
leave
int
push
and
mov
sbb
jecxz
jnp
pushf
lods
ljmp
cmpsb
dec
outsl
sub
jl
fwait
mov
xlat
es
mov
pop
inc
sbb
mov
cld
adc
imul
cwtl
mov
mov
pop
mov
lret
imul
xchg
cmp
push
insl
or
adc
popf
dec
loopne
dec
int
mov
inc
stos
lods
in
cmpsb
dec
addl
rep
adc
inc
fstpl
cli
dec
cmp
push
js
push
aam
jbe
aam
cmp
xor
sti
dec
push
sub
xchg
cmp
pop
aas
push
pop
and
sub
ret
adc
and
sub
jmp
cmc
mov
jo
stos
jecxz
sbbb
lret
insl
sub
xchg
lods
arpl
xor
mov
fisubs
out
and
lods
xor
jmp
cmp
jmp
mov
sbb
or
mov
jg
popf
mov
insl
mov
leave
jp
xor
fcom
push
xor
and
imul
mov
cmpsb
jbe
xor
jecxz
lahf
inc
mov
jp
and
sbb
dec
loop
mov
jecxz
out
pop
jnp
push
jge
xor
adc
aas
sbb
out
and
mov
dec
hlt
arpl
mov
rorl
test
jae
add
fisubl
call
fstl
repz
xor
pop
lcall
dec
mov
inc
fs
fstpl
shlb
leave
or
mov
push
test
sbb
fcomps
mov
push
cmp
iret
sbb
mov
fcoml
hlt
mov
push
xor
loopne
or
xor
xchg
push
les
fsubrs
and
shrb
jnp
jl
and
testl
mov
xchg
addl
cli
das
orb
outsl
pop
icebp
fcompl
mov
xor
stos
adc
sub
xor
and
push
pop
add
lret
js
out
outsb
out
adc
push
mov
pusha
add
data16
test
cmp
and
addr16
in
add
mov
mov
out
aad
sbb
push
xchg
xchg
add
and
fwait
mov
mov
loop
test
jae
jne
in
testb
ds
push
xchg
mov
fs
mov
cmpsl
shrl
push
ja
jecxz
dec
sub
popa
loope
aam
sahf
int3
mov
inc
dec
mov
arpl
scas
mov
inc
cwtl
xor
mov
mov
and
or
xor
sub
out
fimuls
movsl
or
subl
gs
push
mov
aas
xchg
mov
insb
mov
pop
and
jecxz
mov
push
stos
orb
mov
pop
cli
lret
roll
xchg
mov
jae
ret
or
popf
les
rol
pusha
add
mov
mov
xchg
fistps
test
adc
push
add
testl
pop
std
jmp
push
jns
adc
cli
mov
cwtl
fcoml
jae
mov
xchg
adc
cmp
lds
daa
add
scas
outsb
in
or
or
adc
pop
cmp
lods
mov
pop
shr
lods
xchg
cmp
aam
xchg
fisttpl
push
ficoms
inc
inc
jmp
rcl
negl
push
rcl
faddl
nop
mov
rcl
sbb
sub
dec
and
or
push
ja
mov
pop
mov
icebp
lods
sbbb
arpl
sbb
mov
stc
push
jbe
mov
cmp
flds
mov
lret
cs
ds
mov
out
inc
or
je
sub
xchg
notl
jmp
cmp
lret
xchg
mov
fimull
hlt
push
stos
xchg
mov
int3
shrl
mov
add
pusha
or
pop
mov
xor
cmc
adc
and
mov
cmp
push
jb
insl
and
mov
push
xor
lods
arpl
repz
test
sub
push
dec
or
lea
sbb
lds
das
dec
mov
cmp
nop
stos
adc
mov
test
pushf
xorl
ljmp
inc
cmp
adc
jns
gs
mov
lahf
mov
inc
xor
lret
xor
ficomps
in
fwait
or
push
jg
push
fsubs
rcrl
mov
jns
repnz
shll
imul
xchg
orl
mov
sbb
rcll
rcll
jne,pt
or
xchg
pop
pop
cmp
fwait
cmc
jne
loope
sbb
repz
aad
pusha
jecxz
xor
les
xor
addr16
sti
pop
xlat
idivl
hlt
add
je
dec
fistpl
sbb
cmp
push
in
pop
dec
dec
add
jmp
cmc
icebp
mov
imul
divl
filds
mov
cld
in
outsb
dec
dec
nop
stos
mov
xchg
bound
ljmp
mov
aam
add
cwtl
xchg
fcmovu
sbbl
xor
js
mov
lods
xchg
aam
dec
gs
mov
push
sbb
push
ja
or
sbb
mov
pop
xchg
enter
test
mov
ss
pop
clc
xchg
insb
mov
sub
cmpsb
insl
mov
imul
and
sahf
ljmp
push
inc
cld
xchg
and
jle
in
cltd
bound
in
imull
push
jno
xor
ljmp
das
dec
and
pop
push
pop
ret
fwait
jnp
adc
jecxz
fwait
jno
mov
lret
aad
cmp
movsb
push
and
pop
jno
jle
popf
int3
in
or
bound
imul
loope
or
lcall
cmp
mov
pop
xchg
mov
inc
cmp
and
imul
adc
push
popa
jle
outsb
sbb
mov
aad
add
jge
add
lds
dec
add
add
icebp
adc
xlat
lock
mov
xchg
aas
jmp
ror
scas
mov
push
add
nop
in
mov
xor
xor
sub
inc
add
inc
jl
adc
out
xor
es
aas
aad
cmp
mov
in
or
shll
push
mov
fwait
out
inc
or
inc
dec
adc
or
js
shlb
or
popa
mov
add
sbb
fildll
cmc
rorl
mov
pop
imul
out
ret
aad
int
xor
sub
shrb
cmp
movsl
adc
mov
jne
xchg
lds
mov
push
xor
scas
fistl
fisttpll
dec
sahf
inc
push
sti
inc
lock
jl
push
push
fs
dec
int3
insb
push
sbb
push
inc
dec
jne
inc
pop
aad
sub
xor
xor
adc
sbbl
mov
jb
sar
or
add
es
movsl
leave
test
lock
xchg
pop
dec
popa
arpl
sti
ds
iret
cmpsb
test
mov
add
movsl
lret
shrb
int
fiaddl
in
xor
xchg
hlt
out
jp
rclb
and
gs
stc
or
arpl
cwtl
in
push
fwait
inc
push
repz
inc
mov
pop
pop
pop
pop
jp
sub
stos
cli
xchg
fwait
and
mov
or
sbb
jo
cmpsb
jbe
sahf
imul
sti
loop
adc
pop
jb
mov
or
xchg
jno
fstl
sbb
pop
pop
idivl
and
xchg
mov
push
pop
std
xchg
push
data16
sarb
hlt
mov
dec
aaa
leave
add
cmpsl
sub
nop
loope
xor
loopne
and
rcl
ret
repnz
push
pop
push
repnz
or
and
jb
dec
or
xlat
pop
pop
out
sub
and
jecxz
inc
pop
std
notl
xchg
or
popa
xor
addb
stos
push
std
lods
aad
popf
test
stos
jge
push
fcmove
movb
xchg
mov
and
inc
shr
mov
pop
xor
mov
ss
dec
xchg
push
push
mov
sub
mov
and
pop
xlat
dec
or
dec
aas
icebp
hlt
adc
jae
xchg
sti
insl
ret
push
and
jecxz
jo
add
cwtl
cmp
push
xchg
dec
sub
inc
in
lods
push
push
jae
xor
mov
push
stos
fdivrp
mul
xchg
nop
hlt
aad
vmread
popf
call
les
in
jno
xchg
arpl
aam
pushf
out
xor
adc
sbb
test
fucomi
movsb
mov
mov
pop
pushf
push
add
mov
ss
xchg
cmp
fcomps
jne
inc
cmp
enter
and
lock
jmp
cmpsl
add
lods
int
insl
mov
xor
cld
mov
jle
cmc
fwait
jnp
pop
dec
aaa
cmpsb
mov
sti
push
popf
lret
xchg
nop
inc
sbb
mov
add
roll
adc
xlat
clc
les
lahf
popf
pop
mov
pop
mov
call
out
and
int
or
inc
mov
sub
push
mov
popa
push
xchg
stos
into
dec
inc
cmpl
hlt
scas
les
mov
dec
mov
sub
cmpb
arpl
mov
fcomi
test
clc
test
aad
mov
insl
decl
sbb
sbb
sti
jle
mov
xor
xchg
sbb
mov
aaa
incl
data16
adcl
in
jnp
test
test
dec
xor
inc
pop
push
xor
pop
jbe
jno
jnp
sub
int
fistpll
inc
notb
pushf
repz
xor
pop
orl
test
dec
lods
push
jnp
ds
cmp
cld
dec
push
xchg
sub
inc
jg
ljmp
test
pop
inc
je
stc
jo
lret
jnp
ss
jo
pop
jecxz
sarb
fcmovu
fiadds
in
fimuls
shl
pop
push
out
test
and
sbb
xchg
lret
pop
lock
sbb
mov
and
sahf
push
inc
and
pusha
cwtl
cli
fiaddl
outsb
inc
test
das
jecxz
mov
lea
dec
sub
mov
sarl
xchg
data16
in
push
mov
lcall
out
dec
std
sbbb
int
add
and
sbb
or
sub
outsb
aaa
jle
lcall
ficomps
outsb
cmp
dec
mov
repnz
xchg
lods
scas
xchg
cltd
test
icebp
push
inc
clc
ret
scas
add
std
push
sub
cmp
test
mov
mov
andl
dec
andb
in
pusha
sub
in
push
dec
insb
movsb
cmp
rorb
inc
imul
pop
mov
xor
cwtl
mov
adc
cmp
mov
jg
fmuls
in
das
xchg
test
mov
lret
sub
subb
insl
dec
jecxz
and
mov
in
arpl
mov
imul
dec
dec
push
arpl
mov
xchg
or
pop
mov
test
stos
or
mov
roll
adc
mov
enter
add
or
pop
hlt
jbe
loope
dec
fsubrl
movsl
cmc
js
dec
stos
inc
aam
jo
pusha
rcrb
fidivrl
cmp
loope
mov
mov
and
in
dec
and
mov
leave
repnz
xchg
jb
ss
int
out
sub
aaa
inc
xchg
out
mov
mov
adcl
sub
dec
loope
cld
into
fdivl
aaa
inc
lock
movsl
pop
mov
ja
repz
inc
push
insb
pop
out
cmp
les
addr16
or
push
xor
pop
xchg
rcl
mov
rol
push
push
ret
adc
loopne
out
pop
pop
stc
xchg
int3
int
cld
or
sbb
mov
inc
dec
xchg
shlb
bound
test
xchg
daa
mov
push
jp
inc
xor
loop
dec
hlt
in
xor
xorb
fisttps
sub
sahf
xchg
pusha
pop
adc
xor
push
dec
aam
xchg
mov
cli
test
dec
mov
pop
mov
int3
xchg
ss
shrl
test
add
pop
sub
push
lods
sub
inc
jne
sarl
inc
xchg
jge
dec
push
movsl
div
and
mov
out
push
ljmp
adc
dec
sub
fwait
push
jo
push
mov
fnstsw
xlat
call
test
fisubrs
push
mov
mov
rcrl
add
and
in
inc
fwait
or
dec
cmp
jns
popf
pop
dec
push
push
jecxz
mov
xor
int
mov
dec
cmp
fsubrp
push
arpl
gs
or
test
inc
stos
sarl
pop
xor
xchg
jne
mov
or
sarl
xchg
out
leave
or
mov
cli
jo
rorb
nop
xor
hlt
inc
aad
push
loopne
and
movsl
sbb
ret
inc
xor
out
sbb
insl
data16
sbb
daa
lahf
inc
inc
cs
jnp
cli
fs
lods
push
imul
out
ret
mov
out
imul
test
loopne
insl
lock
lock
nop
jg
pop
mov
jae
sub
xchg
sti
sub
shlb
pop
jl
or
mov
mov
sahf
inc
mov
adc
fidivl
dec
cmp
mov
and
push
in
xchg
sbb
out
lahf
shlb
jp
jge
mov
repnz
lea
iret
sti
and
xchg
mov
cs
pop
jns
pop
ret
and
in
add
enter
inc
push
mov
popa
inc
jmp
enter
outsb
ja
enter
ljmp
inc
xor
push
shrb
stos
sahf
sahf
pop
mov
mov
push
cmpl
push
add
lock
test
xor
adc
lret
divb
movsl
cmp
push
dec
jmp
out
mov
enter
dec
xor
dec
into
sarl
jl
cmpsl
or
fldt
lcall
sub
push
imull
pushf
fldenv
dec
std
scas
in
mov
or
lret
mov
out
aas
sbb
jmp
pop
jmp
insb
mov
fnstenv
jbe
dec
sub
call
inc
inc
cmova
pop
pop
dec
lret
push
std
stos
pop
adc
sub
cld
arpl
sbb
push
pop
frstor
dec
pushf
lds
pop
pop
fucomi
rcrl
cmp
or
movsl
mov
mov
jge
jecxz
pop
push
xchg
or
or
adc
jno
hlt
shlb
out
sbb
loopne
sbb
adc
mov
mov
rol
jbe
inc
sbb
test
enter
addr16
imul
repnz
cli
or
cmc
push
sub
mov
daa
loope
dec
in
pop
pop
jmp
cmp
shrl
adc
cmp
imul
push
push
popf
pop
scas
scas
test
sarb
sbb
fistpl
inc
adc
sub
stc
jae
outsb
push
iret
mov
or
andl
lcall
adc
rcrb
les
dec
jp
xor
leave
stc
mov
gs
pop
dec
in
mov
sahf
neg
xor
dec
mov
insb
movsb
pushf
push
and
jbe
pop
hlt
mov
and
jecxz
loop
rcl
movsb
arpl
pcmpeqw
fcmovne
fs
pop
mov
mov
lcall
sub
je
cs
push
inc
cli
jge
fwait
inc
fdivrs
xorl
inc
notb
adc
sbb
push
and
ja
aaa
adc
test
pop
push
mov
orl
fs
aas
push
push
ret
iret
push
mov
or
jo
or
sbb
sti
sub
jae
sbbl
pop
dec
mov
mov
or
bound
stc
jo
sbb
and
adc
out
xor
sti
lods
in
in
cmp
mov
fdivl
mov
in
push
inc
mov
xor
xor
adc
addr16
xchg
test
mov
and
xchg
fistl
cmp
mov
into
sub
push
xchg
adc
imull
xor
insl
mov
mov
jb
lea
add
add
lahf
scas
and
cltd
loop
addb
lret
hlt
mov
lahf
in
nop
subb
mov
cmp
and
mov
pop
xchg
sub
bound
cmpsb
pop
jns
add
mov
jae
mov
mov
neg
clc
pop
cmpsl
adc
clc
lcall
or
jecxz
insb
sub
stc
stc
fldcw
mov
movsl
jne
add
jbe
addr16
int
das
or
cltd
lds
repz
pop
leave
push
out
inc
jecxz
mov
or
adc
sarb
rcll
push
pop
movsl
push
js
aam
mov
aas
rep
mov
stos
inc
sbb
outsb
push
cmp
and
mov
sbb
jecxz
fidivs
rorb
jg
movsl
lcall
outsl
cmp
bts
adc
or
incl
cmp
mov
sbb
pop
loop
test
stos
push
mov
into
ficoml
ljmp
push
es
pop
pop
loop
repz
cmp
lock
push
cmp
mov
inc
push
inc
xchg
or
xor
mov
sub
stos
lods
or
pop
sub
adc
and
jbe
push
mov
aad
add
inc
mov
adc
inc
xor
arpl
call
xor
dec
adc
cmp
add
xchg
pop
rorl
jecxz
pop
adc
mov
push
add
and
cmpsb
scas
xchg
idivb
int3
mov
outsl
xor
fnstsw
data16
push
into
mov
add
rcl
push
sbb
jecxz
neg
mov
jbe
or
bound
lret
and
pop
scas
fwait
call
in
cmp
addr16
andl
ret
add
and
sbb
leave
cli
popf
lods
xor
iret
dec
sbb
sbb
cmp
xchg
loop
or
push
adc
dec
clc
mov
add
outsl
insb
repnz
sbb
push
mov
cltd
les
pop
imul
psubusb
pop
cmc
adc
rcrb
jle
add
mov
out
inc
xchg
dec
aad
popa
sbb
in
sti
dec
mov
cmpl
dec
mov
jmp
dec
shlb
jbe
xor
adc
adc
shll
add
cmp
mov
hlt
mov
mov
mov
mov
xor
loop
or
dec
pushf
out
push
adc
adc
outsb
adc
lods
repnz
cmp
mov
dec
mov
and
sahf
mov
data16
lret
pop
sbb
repnz
leave
sbb
mov
lret
scas
add
clc
int
push
out
pop
sub
and
cmpsl
int3
mov
jbe
outsb
mov
jecxz
cs
out
sti
idiv
push
cmp
adc
loop
push
inc
jle
movl
lock
pop
test
sbb
movsl
dec
push
repz
push
je
dec
adc
test
jecxz
call
cli
daa
ror
xchg
and
test
sub
dec
arpl
sbb
cmp
repz
insb
scas
push
mov
stc
cltd
aas
cmp
cmpsb
cmpb
mov
inc
aam
xor
sbb
push
mov
jl
or
mov
mov
pushf
inc
fwait
js
popa
cld
inc
std
xor
push
jge
and
imul
jbe
sbb
pop
jp
leave
in
dec
leave
test
mov
mov
jp
or
push
arpl
mov
mov
arpl
mov
aam
xor
jae
movsb
jle
das
mov
ja
xor
add
es
inc
inc
fisubl
cli
lcall
lods
cmp
inc
inc
ret
xor
mov
push
addl
pop
aas
or
sti
fisttpll
inc
daa
test
pusha
push
out
call
cltd
lcall
leave
test
sbb
clc
mov
mov
and
pop
adc
jno
es
and
sbb
iret
lock
jne
aam
add
call
sahf
xorl
in
jl
jl
and
roll
shll
arpl
cmp
sub
repz
push
outsb
ja
cmpsb
push
out
and
add
pop
xchg
jb
aas
fnstsw
enter
or
mov
scas
jp
stos
aam
push
mul
inc
push
mov
lods
cs
xor
les
jo
jl
cmp
lahf
xchg
push
repz
push
std
pop
out
cmpsb
pop
dec
sahf
subl
sub
jnp
arpl
daa
xor
jle
and
jne
adc
sbb
mov
mov
jmp
mov
adc
mov
mov
mov
shl
mov
sbb
imul
sub
aad
xchg
mov
mov
push
xchg
out
in
cmp
jnp
enter
pop
dec
fimull
dec
out
dec
cld
dec
jmp
cld
repz
dec
outsb
out
push
ljmp
cmpsb
pop
mov
add
xchg
repz
push
mov
daa
rorb
jmp
mov
sbb
adc
outsl
dec
loop
test
jg
outsb
mov
mov
and
das
sbb
and
dec
sti
ss
inc
imul
jmp
mov
addr16
and
mov
scas
movsl
scas
xor
popf
xchg
xchg
sub
cmpsl
mov
pusha
add
cmp
cmp
and
cmpsl
sahf
adc
mov
jle
cmp
sarl
mov
xor
push
std
aam
mov
mov
pop
mov
fwait
push
xchg
scas
cmp
lret
shrl
xor
andb
fimuls
outsl
sub
xor
cltd
dec
outsl
cmp
xor
mull
xchg
push
push
bound
fldcw
add
cmpsb
xchg
fmul
cmp
mov
pop
sub
in
push
inc
fdivrl
imul
adc
pop
ret
cmp
jg
xor
jg
mov
movsb
imul
push
inc
fadd
dec
jl
inc
add
xchg
cwtl
icebp
repz
movsl
enter
jo
and
adc
push
dec
mov
jmp
test
push
data16
xchg
mov
mov
add
faddp
orb
adc
stos
popa
add
mov
js
mov
xchg
mov
aas
mov
xchg
push
push
lahf
test
xor
sbb
ret
pop
fcoms
sahf
cli
add
sbb
pop
andl
aaa
dec
sub
cmc
or
sub
dec
xchg
cld
in
sbb
data16
inc
rcrb
push
pop
add
mov
add
shlb
jg
xor
ret
pushf
push
adc
outsb
test
adc
loop
sbb
pop
dec
xor
stos
mov
mov
aas
inc
int3
pop
repz
lock
adcl
mov
mov
mov
mov
lods
jecxz
dec
les
add
inc
lods
jbe
scas
fwait
shll
in
mov
mov
popf
ret
jmp
arpl
pop
mov
je
je
imul
jno
repnz
mov
add
pop
in
cmp
decb
in
loope
and
dec
movsl
cld
or
sbb
fldenv
sub
push
mov
jne
fwait
fwait
mov
fstl
mov
ljmp
mov
sbb
sbb
loop
push
ret
and
divl
cmpsb
subps
cmp
inc
pop
ret
push
mov
scas
mov
push
test
push
mov
xchg
push
imul
in
mov
imul
arpl
icebp
cmpl
imul
and
decb
adc
fwait
adc
sahf
or
adc
jl
std
sub
outsl
lods
xchg
xchg
cmp
hlt
mov
cmpsl
push
sti
stc
jg
fcoml
fs
lret
lods
cli
imul
test
adc
inc
add
mov
adc
in
jmp
jnp
fimuls
scas
mov
add
fdivrp
imulb
dec
test
xor
sub
mov
imulb
in
test
push
mov
cld
arpl
movsl
push
or
mov
popf
in
lcall
fmuls
clc
fmulp
push
dec
out
sub
or
add
dec
sbb
pushl
outsl
lahf
icebp
movsb
aam
cltd
jmp
add
push
mov
into
adc
inc
sbb
bound
mov
and
repz
ss
sub
in
add
pushf
lret
pushw
xchg
pop
mov
out
repnz
cs
cmc
cmpsl
sbb
data16
movsl
push
mov
mov
nop
int
add
out
psubsw
xor
xchg
pop
pop
inc
test
gs
popa
cmp
jp
jmp
jo
ds
mov
jle
mov
pushf
sti
pop
inc
xor
jo
sbb
cmpsb
push
add
inc
xchg
mov
clc
mov
push
sub
inc
movsl
shlb
aad
mov
cmc
out
ret
std
ret
mov
push
jnp
pop
fistpl
adc
inc
xor
mov
push
in
ret
mov
sub
mov
out
mov
push
imul
mov
xchg
cs
inc
mov
pop
and
push
out
subl
cmp
ljmp
pop
hlt
mov
gs
stos
jno
pop
addb
loop
mov
je
pause
add
popa
mov
sarl
mov
bnd
xor
in
out
scas
push
push
cmc
clc
push
out
mov
cmp
fisttpll
rcrb
mov
testl
cwtl
fstl
push
mov
jle
outsl
mov
pop
pop
add
inc
cltd
pop
xorb
or
and
cmp
int3
stos
mov
sub
or
in
and
shlb
shl
xchg
xor
jbe
adc
fimuls
loop
ret
cmp
inc
lret
pop
mul
mov
idivl
jge
stc
mov
out
dec
movsl
les
mov
fldl2e
push
hlt
pop
xor
jmp
outsl
cmp
dec
mov
push
ret
bound
or
fimull
sub
or
aas
dec
imul
or
gs
mov
decb
outsl
icebp
push
inc
inc
nop
lcall
pop
jne
imul
xchg
mov
pusha
sti
mov
shrl
sub
into
cmp
inc
mov
sahf
lahf
sub
lret
inc
fs
xor
sub
ficoms
pushf
pop
push
pop
out
add
cmp
outsl
add
ss
fldt
mov
xor
lea
int
js
stc
add
adc
icebp
cwtl
out
adc
daa
scas
dec
push
add
daa
inc
lret
orb
lea
pop
in
and
pushf
jmp
mov
add
jecxz
sahf
mov
out
aas
jp
scas
adc
sbb
adc
mov
fcomps
scas
cmp
sbb
mov
cmp
push
inc
ficoms
inc
xchg
into
into
adc
stos
out
out
outsb
ds
gs
mov
or
mov
dec
jno
lahf
adc
ds
cmp
vpcmpgtb
fadd
lock
test
pop
packuswb
ret
pop
or
daa
sbb
pop
fiaddl
aad
sti
jmp
or
mov
push
les
rcrb
mov
out
inc
push
jae
mov
pop
hlt
scas
leave
scas
mov
fs
fsubrl
fwait
push
push
dec
xchg
test
insb
add
sub
fdivrs
cmp
pop
jo
shlb
call
add
out
dec
cld
inc
sbb
cmp
loopne
aas
xor
pop
push
jbe
gs
outsb
push
loop
out
imul
dec
mov
pop
ret
aad
fadd
cwtl
repnz
dec
movl
cmpsb
test
and
push
call
call
dec
lahf
cmp
loop
add
sub
jae
popa
stos
jg
xor
mov
out
cwtl
or
cmp
mov
xor
dec
shll
cmpsl
xor
mov
rol
push
add
stos
mov
cmpsl
aas
or
push
mov
and
or
gs
adc
xchg
xchg
pop
out
pop
rcrl
loope
sti
loope
lahf
inc
inc
pop
ds
xchg
movsb
mov
out
pushf
sub
mov
dec
jl
cli
sbb
xchg
jg
fbld
cmp
fs
xor
mov
ja
mov
out
dec
add
cmpsb
sub
outsb
addb
mov
fidivrl
lahf
xor
insl
dec
leave
mov
pop
xor
scas
enter
jo
test
and
dec
lock
mov
lret
xor
and
lds
cmpsb
sbb
mov
sub
add
rcr
mov
jns
add
mov
scas
enter
int3
iret
jge
daa
mov
mov
repnz
xchg
jne
stos
jg
rcrl
add
in
das
xchg
in
cmpsb
adc
ja
adc
cmp
insb
jmp
lcall
add
movsl
add
jae
jg
out
jl
mov
adc
dec
pop
mov
jl
mov
or
inc
pop
negb
clc
sbb
or
out
aaa
andb
fmull
and
fstpl
mov
add
sub
out
popa
push
jge
scas
mov
jne
xor
les
xor
jo
mov
adc
pop
orb
fisttpl
daa
sub
clc
inc
pop
inc
mov
push
pop
js
in
mov
insl
sbb
lods
pop
into
ljmp
mov
jbe
test
mov
aas
jp
mov
mov
inc
out
je
fcmove
push
jp
cmpsb
push
jg
sbb
fstpt
push
call
dec
mov
inc
sub
in
fdiv
xrelease
xor
pop
loop
popa
xchg
pop
mov
jae
and
andl
mov
push
les
mov
je
xor
cmpl
jo
mov
pop
or
outsb
and
dec
es
fdivr
adc
or
imul
push
push
pop
mov
dec
xchg
mov
sbb
outsl
jbe
push
enter
cmp
lds
lret
push
int
imul
cmpsl
jo
jns
icebp
lods
add
rol
sub
outsb
push
aad
mov
out
mov
push
movsl
pop
ror
out
loop
inc
in
into
fdivs
xlat
stc
fs
imul
jl
push
sbb
xchg
daa
movsl
push
mov
aam
mov
cmp
les
push
andl
sub
xchg
lahf
cltd
cmc
mov
sub
fmul
repz
js
bound
js
cmpsl
into
mov
outsl
push
movsb
jae
mov
ficompl
or
pop
gs
mov
shlb
jb
push
es
lods
in
pop
or
inc
mov
loop
push
push
fs
fs
xlat
fldcw
js
dec
cmpsb
mov
sbbl
mov
inc
cmp
lea
mov
fs
movsl
ds
sbb
das
cli
add
sbb
xchg
cmp
sub
cmp
cs
popf
xor
jnp
inc
jo
dec
cld
push
sub
nop
xchg
add
mov
adc
mov
mov
pop
jge
mov
push
pop
sub
es
loope
jb
xchg
xchg
xchg
adc
loopne
mov
fs
nop
jns
shrb
je
push
mov
push
icebp
int3
les
sbb
insb
xor
inc
or
into
pop
ret
shlb
es
out
xchg
jns
jns
xor
ret
ret
and
push
inc
icebp
mov
dec
add
and
xor
mov
push
das
dec
mov
in
jmp
rorl
out
or
dec
lds
cltd
pusha
sbb
negl
int
loopne
in
adc
jmp
or
dec
adc
cmpl
mov
shrb
pop
sbb
mov
jo
fnstenv
mov
or
shrb
mov
ficoms
pop
rorb
pop
rolb
push
jae
pop
movl
sub
mov
cmpsb
repnz
std
xchg
scas
push
jno
add
cli
push
sbb
jecxz
ds
push
notb
in
mov
add
bound
scas
pop
loop
std
clc
aad
mov
dec
ja
movsb
jmp
dec
adc
xchg
pop
cmpsl
loop
sbb
mov
mov
adc
inc
ror
dec
jne
mov
mov
ds
xor
push
inc
outsb
popf
sti
xchg
jmp
orl
push
pushf
incl
ljmp
cld
adc
push
jge
sti
pusha
out
int
mov
push
jbe
xorb
push
pusha
xor
and
popa
adc
fnsave
das
stc
pop
cwtl
dec
xor
sub
in
in
push
ja
ljmp
shr
lret
sbb
les
imul
cs
and
ret
sub
jne
lret
pop
push
popa
std
adc
mov
lods
jp
add
mov
jo
test
movsl
or
jo
ret
mov
call
aad
ds
subl
pop
into
mov
push
jnp
mov
mov
test
cmp
cmc
or
stos
loope
add
aaa
fwait
pop
lea
jecxz
loope
push
xor
inc
imul
xchg
mov
cld
mov
mov
push
cli
pusha
add
push
or
mov
push
mov
stos
mov
in
test
sbb
insl
dec
jne
cmc
shlb
adc
insl
fs
bound
cmp
rcr
loope
ss
cmpsb
ss
pop
push
sub
loopne
sub
sbb
cmp
fcmovu
cmc
sarb
xor
sbb
es
push
pop
dec
jmp
icebp
repnz
enter
scas
xlat
xchg
or
aad
pop
fists
xchg
pop
outsb
pusha
dec
push
cmpsb
pushl
lods
cltd
divl
and
inc
roll
arpl
arpl
xorw
lahf
aad
mov
rolb
outsw
int
lods
jg
mov
cmpl
orb
enter
adc
mov
push
lods
xchg
add
mov
xor
sub
inc
xchg
or
stos
vmovdqa
in
xchg
mov
sbb
jle
cmp
cwtl
jbe
sbb
sarl
lea
xchg
mov
sti
sub
mov
loope
mov
fsubl
pusha
lods
jmp
leave
push
dec
hlt
xchg
mov
mov
arpl
adc
push
mov
lcall
mov
inc
std
roll
repz
adc
fdivl
leave
shll
aaa
pop
xchg
out
mov
rcrb
sbb
fadds
mov
adcb
cmp
pushf
inc
cmp
mov
mov
and
repnz
push
sbb
ja
arpl
stos
mov
push
inc
cmp
aad
in
je
cmpsl
mov
hlt
mov
test
or
pop
ds
and
push
out
jbe
mov
loop
cmpsb
pop
call
xchg
test
jg
push
addr16
pop
xor
lods
inc
or
lret
pmulhw
jns
push
stos
push
fadd
les
imul
lret
xor
dec
pop
pop
pop
loop
sbb
and
ret
mov
xor
out
mov
insb
call
aaa
call
sub
xchg
pop
daa
xchg
mov
insl
pop
fistps
cwtl
push
imul
or
stos
orb
mov
in
nop
clc
xchg
sub
xlat
push
call
popa
es
jo
push
jge
cmp
fbstp
lods
cli
mov
lods
pop
cmpsb
mov
pop
sbb
xchg
sarb
xor
int3
loopne
jae
cmp
into
out
data16
ret
pop
and
pop
xchg
xchg
cmp
nop
mov
or
xor
jno
in
test
push
sbb
dec
cmp
repz
xor
lods
imulb
add
push
mov
scas
or
jmp
adc
imulb
xchg
clc
cmpsb
insl
rorl
jb
inc
jne
fcompl
insl
icebp
xchg
pop
lcall
lods
lods
jg
lcall
call
ret
out
daa
sbb
popa
xor
fldenv
sbb
pop
notl
inc
jne
mov
and
movsb
pop
push
xlat
js
sbb
in
push
loopne
sbb
dec
mov
xlat
mov
mov
testl
lods
ja
aam
js
dec
je
add
aas
inc
jl
lds
push
jo
sbb
xor
dec
and
out
jns
mov
sbb
push
push
and
xchg
cmp
fdivrl
xchg
dec
fs
icebp
stos
jle
inc
out
xchg
mov
xchg
mov
adc
in
pop
gs
and
iret
xchg
ja
mov
lods
or
jge
or
mov
fbstp
jae
hlt
fmuls
shl
inc
push
add
or
fsubs
inc
out
xor
hlt
pop
mov
inc
cmp
and
pop
dec
adcl
das
mov
xlat
shrl
or
dec
xchg
in
hlt
in
or
jmp
jnp
jmp
lea
es
shll
sub
mov
loopne
mov
or
or
or
lret
cli
jae
jmp
mov
in
push
mov
lret
inc
mov
jle
cltd
jecxz
loop
outsb
jmp
ss
rcl
out
mov
jmp
repnz
pop
jb
xor
or
cmpl
xor
arpl
scas
hlt
mov
mov
sbb
leave
cmp
movsl
bound
jg
imulb
mov
ss
cs
outsl
movsl
je
push
sbb
cli
xchg
cmp
daa
stos
dec
popf
mov
mov
cld
dec
inc
or
out
xchg
xchg
cmp
xchg
push
int
and
mov
fdiv
pushf
pusha
cwtl
cmp
or
mov
je
mov
lahf
lret
pop
outsb
mov
call
es
test
dec
mov
inc
jne
xchg
out
inc
rcrb
xchg
sbb
or
in
dec
ficoms
in
andl
jp
in
lcall
and
aas
ret
dec
xorb
pop
in
add
into
inc
xchg
inc
pop
insl
and
push
scas
sbb
and
and
movsb
sub
aaa
sti
dec
jmp
rol
push
mov
clc
xchg
aaa
and
fwait
or
js
inc
push
pop
add
pushf
xchg
ficompl
insl
mov
cltd
pop
mov
rcl
mov
lahf
or
lea
xchg
jmp
mov
push
add
shrb
jle
jno
sti
push
iret
or
push
aas
or
scas
add
xor
scas
ljmp
dec
pusha
ficoml
dec
lock
das
loopne
fisubrs
and
mov
xchg
scas
sahf
add
xchg
fdivl
dec
sub
xchg
ds
sub
or
stos
pop
mov
add
fsubrl
subps
movsb
ret
ret
xchg
je
add
in
insl
mov
push
or
mov
cwtl
cmp
in
fimull
lods
stos
sahf
jbe
incl
or
lods
scas
pusha
adc
leave
aaa
sti
gs
inc
xchg
idivl
addl
sbb
dec
mov
dec
jne
push
xchg
pop
jmp
push
pop
dec
inc
test
mov
enter
loop
adc
test
xchg
add
ret
insb
pop
rclb
push
clc
dec
cli
mov
lahf
repz
jp
ja
add
test
adc
xor
pop
loopne
mov
cltd
lret
mov
lret
mov
or
lcall
mov
mov
push
xor
push
cmp
mov
into
push
test
add
adc
dec
pop
mov
sub
push
pop
out
jl
dec
push
in
adc
xchg
icebp
lods
out
sarl
push
sub
inc
push
aas
adc
mov
scas
sub
jle
jmp
cmc
xor
dec
imul
add
dec
mov
movsl
add
dec
mov
sub
fwait
inc
cltd
push
inc
xchg
vmptrst
mov
movsb
jl
mov
loop
hlt
cmp
sub
cmp
mov
sub
inc
fcomip
xchg
mov
adc
inc
mov
jb
mov
jnp
movsb
ljmp
repnz
scas
scas
add
icebp
ret
test
enter
mov
or
rcrb
in
xor
imul
push
sub
dec
fildll
decb
cld
bound
mov
jbe,pn
inc
dec
fists
cwtl
fstpt
mov
fs
add
adc
xchg
or
xor
rcrb
aaa
aaa
xor
xlat
xchg
or
cmpsb
scas
mov
inc
popl
and
pop
jecxz
js
cs
lahf
and
xor
arpl
push
pop
adcl
ret
lods
movsb
mov
fcomip
mov
dec
insl
js
faddp
sub
sti
mov
push
js
arpl
or
fdivl
clc
sti
movsb
adc
out
adc
scas
pop
mov
jo
mov
lea
nop
jmp
inc
or
ja
daa
sbb
test
inc
sbb
cmp
or
into
pop
jecxz
aas
jne
xchg
mov
xchg
mov
push
cmp
and
push
icebp
cltd
cltd
push
dec
mov
inc
xlat
cmpsl
mov
mov
jmp
in
add
mov
sbb
xchg
or
sub
test
jle
push
loop
cmpsb
test
dec
cs
mov
mov
and
lds
and
lcall
push
adc
cvtdq2ps
xor
lods
shrb
int
ret
mov
scas
fiadds
mov
pop
pop
push
dec
push
arpl
scas
xor
repnz
pushf
pop
loop
pusha
rcll
test
into
ds
inc
lahf
andl
enter
push
xor
shlb
jp
add
arpl
outsb
movsb
fisubrl
xchg
mov
cmpsb
jo
pop
xchg
jnp
push
pop
push
popa
cmp
dec
cli
cmp
into
loopne
jp
add
mov
dec
dec
mov
add
scas
pop
or
popf
mov
pop
icebp
cli
inc
repnz
mov
lret
scas
nop
fistpl
push
xchg
repnz
lods
leave
push
xchg
inc
call
fcmovnb
cmpl
sahf
ss
and
call
addl
or
jo
mov
gs
les
ss
cmpsb
inc
xor
inc
stos
lods
inc
cmp
iret
sbb
cmp
cmp
mov
mov
imul
sub
xor
cli
gs
push
orl
fnstcw
loopne
and
sbb
push
xchg
fs
jne
jno
xchg
mov
mov
adc
ret
inc
and
fwait
add
addr16
add
fldt
cwtl
cmp
sub
fidivrl
iret
fnstsw
jmp
rclb
in
lods
lods
in
mov
mov
mov
mov
sbbb
and
push
sub
fisubl
ljmp
outsb
mov
jg
in
lds
addr16
jbe
fs
push
andl
mov
fimull
push
ret
sarb
rorb
minps
and
pop
mov
mov
or
popf
std
pop
lds
jb,pt
icebp
in
das
ja
popl
clc
gs
fs
jg
push
stos
xchg
setle
or
jmp
movsl
idiv
mov
xchg
icebp
pop
push
ss
loopne
daa
fwait
repz
xor
data16
sub
fdivs
out
and
stc
in
adc
in
pop
daa
adc
xchg
enter
push
adc
dec
and
dec
iret
pop
dec
and
sbb
dec
or
test
mov
out
shlb
mov
push
inc
inc
not
cmpsl
out
add
push
loopne
ljmp
sbbl
push
pushf
sbb
inc
ljmp
into
ja
sti
into
movups
xor
fiaddl
dec
add
pop
cmp
push
inc
add
gs
mull
dec
rcr
add
push
stos
arpl
jb
jmp
aas
pop
lds
roll
or
xchg
insb
cmpsb
stos
subl
out
daa
mov
pop
in
aas
fwait
push
sahf
pop
icebp
inc
iret
testl
lahf
repz
jl
add
or
adc
and
aaa
inc
lcall
and
lods
aaa
lea
movsb
sub
arpl
rcrb
ljmp
imul
lret
sarl
dec
stos
sbb
inc
cwtl
mov
pushw
cli
bound
push
mov
into
mov
test
jmp
call
int3
add
pop
mov
mov
sti
loop
lcall
adc
rcrl
insb
sub
aad
movsl
popf
clc
shlb
or
push
fadds
hlt
call
test
out
vmovq
mov
leave
aas
pop
mov
movsl
push
ss
movsb
jg
in
pop
mov
scas
mov
xor
mov
notl
imul
cmp
inc
ljmp
sbb
adc
xchg
dec
pop
aaa
mov
jmp
ja
jb
push
rcrb
cmp
test
cltd
cli
sbb
popa
in
jge
cmc
push
or
dec
popl
mov
dec
insb
push
inc
repnz
or
mov
xchg
xchg
in
movsb
ljmp
jg
incb
pusha
mov
sbb
xchg
dec
pshufw
rcrb
js
lcall
shl
int3
dec
mov
mov
pushf
and
push
add
js
inc
sbb
mov
daa
fcomps
les
dec
fs
inc
sbb
jnp,pt
dec
aad
sub
dec
mov
push
out
mov
adc
mov
pop
js
stos
push
pop
xchg
push
fimull
repz
fnsave
lods
test
push
clc
push
jge
jge
cmp
dec
xor
aam
lret
popf
pop
out
mov
les
lea
xchg
pop
fs
jae
loop
enter
or
sub
lea
mov
cmp
lods
fs
fs
mov
add
push
cmp
leave
push
popf
sub
inc
jo
cmp
cs
jns
push
push
cmp
dec
mov
or
insb
enter
push
fdiv
sbb
aas
shrl
call
jae
out
xchg
stos
scas
fsts
jecxz
les
xchg
xchg
cmp
cmp
imul
xor
or
and
shll
fsubrl
dec
iret
pop
stc
mov
popf
fdiv
mov
dec
xchg
lock
testb
mov
sbb
in
andl
rolb
clc
inc
dec
adc
xchg
mov
sbb
pop
cmp
mov
mov
fistpll
xor
aas
or
sarl
std
repnz
dec
xchg
mov
and
mov
data16
cmp
dec
and
sub
aam
pop
in
mov
and
xchg
bound
cwtl
insb
shl
inc
push
or
arpl
lods
leave
rcrb
sub
mov
xchg
imulb
lcall
mov
arpl
cmp
loope
out
stc
arpl
gs
lods
dec
in
daa
lahf
fdivl
xlat
int
in
mov
mov
test
sahf
jo
cltd
xor
sbb
or
lcall
mov
lds
pop
mov
fucom
ja
or
sti
xchg
or
loope
in
push
cmc
cmp
sbbb
lds
test
xchg
jmp
adc
data16
cmp
or
dec
mov
adc
ret
lods
mov
ret
pushf
lret
mov
notl
add
out
xor
pusha
lea
in
js
push
sbb
enter
push
xchg
pop
movsl
mov
aam
cld
aad
mov
in
push
adc
nop
dec
fldcw
in
jl
jae
lock
mov
imul
daa
mov
mov
or
add
cmpsb
out
movsb
and
push
cmp
cmp
mov
mov
dec
cmp
mov
sub
test
lock
dec
rolb
mov
add
pop
jecxz
push
cmpsl
popa
mov
nop
pop
adc
sbb
test
push
lahf
mov
sub
inc
and
xchg
cltd
and
cmpsb
ljmp
or
movsl
mov
pop
jo
test
aad
xor
inc
pop
add
xchg
orl
inc
ja
dec
xchg
pusha
data16
sub
jbe
push
mov
subl
stos
jge
and
test
inc
in
lock
lock
aam
xlat
inc
gs
rcrl
sub
inc
out
push
sbb
cli
ja,pt
sarb
sub
repnz
stos
rep
popf
dec
arpl
das
push
push
insl
ja
mov
fistpll
leave
shrb
mov
inc
lds
dec
cltd
pop
inc
jae,pt
mov
lret
lds
pop
sarb
popa
popa
or
cmp
cmc
mov
ss
jp
jno
sub
call
push
aam
inc
je
cmp
mov
lods
inc
xchg
inc
push
lods
cmp
add
inc
adc
adc
orb
nop
and
or
pop
aam
xchg
mov
mov
les
mov
data16
movsl
test
cmp
push
xor
loope
pusha
push
scas
lret
test
jb
xlat
mov
ds
fwait
imul
xchg
mov
push
inc
test
mov
mov
pop
mov
add
cld
xor
sti
push
jg
iret
adc
mov
push
adc
outsb
mov
or
enter
adc
fnsave
push
jae
xchg
fidivrs
jno
add
or
sbb
sbb
add
jp
push
daa
push
cmp
std
out
stos
fcmovnu
or
xor
jl
rcll
sbb
and
jae
sahf
popa
push
mov
xchg
mov
xchg
mov
rorl
fbld
cmpsl
or
push
mov
push
xor
mov
dec
dec
mov
scas
pop
loopne
fcoml
xchg
mov
mov
incb
hlt
insl
sub
rcll
test
mov
inc
pop
jnp
hlt
xchg
stos
xchg
mov
add
out
inc
repnz
jno
cmc
cld
cmp
test
add
rol
mov
push
lret
ds
push
cs
jecxz
lods
xchg
aaa
imul
push
ljmp
add
inc
inc
ds
into
inc
stc
out
movsb
sar
push
outsb
add
sbb
sarl
pop
sbb
testl
sahf
inc
push
or
push
fisttpll
stc
mov
mov
iret
add
adc
jb
cmpsl
test
lods
sbb
xchg
les
and
rcll
lcall
enter
popf
repz
xor
mov
leave
push
sti
push
adc
push
sub
int
cmp
push
cmp
jo
pop
cmp
movsl
cli
repz
sbb
add
ret
dec
outsb
jmp
push
lods
call
stos
movsl
sbb
mov
adc
add
dec
or
dec
aas
mov
adc
lret
inc
xchg
or
iret
mov
pop
xor
pop
sbb
hlt
cmpsb
xchg
xchg
lea
adc
xor
lret
add
addr16
cs
mov
test
mov
lcall
inc
and
push
xchg
cmp
fcmovnb
jns
lahf
arpl
out
sbb
outsl
inc
lret
fbstp
inc
jge
and
stc
ljmp
jge
adc
ja
lret
sti
fisubs
xor
nop
jp
inc
loopne
imul
insb
cmp
lret
out
mov
xor
je
and
mov
fistl
xor
dec
insl
cwtl
stos
xchg
int3
call
jge
in
jecxz
nop
cmpsb
mov
mov
gs
gs
or
movsl
push
fisttpl
ja
mov
call
dec
mov
sahf
cmpsl
nop
mov
mov
add
f2xm1
jnp
daa
scas
je
xchg
int3
fnsave
xor
es
enter
scas
lahf
mov
rorb
loopne
ds
and
loopne
in
sub
sbb
out
or
lock
adc
test
and
pop
and
mov
xchg
fists
ljmp
repnz
out
iret
push
sbbl
icebp
xor
lahf
lret
adc
jmp
push
push
dec
gs
dec
or
pushf
out
mov
imul
popa
shrb
pop
xchg
out
shl
loope
fldt
sub
es
xchg
daa
push
sub
rolb
add
inc
test
aaa
cmpsl
xor
mov
inc
jo
lahf
mov
or
les
inc
cmp
imul
mov
ficoms
xchg
das
add
nop
ss
clc
nop
cmp
nop
xchg
pop
not
loopne
insl
int
sbb
inc
loope
sub
mov
insb
jnp
mov
adc
pop
xchg
in
adc
mov
ffree
dec
pusha
mov
inc
jg
add
dec
xor
xor
push
push
xlat
mov
cmc
lahf
xchg
jo
loop
jp,pn
mov
insb
fwait
or
test
adc
pop
shlb
push
and
cmp
cmpsl
divb
jae
xchg
dec
add
push
jge
das
shll
pop
mov
xchg
pop
std
sbb
sbb
leave
xchg
cmpsb
xorb
cmpsl
xor
bnd
and
push
in
std
push
mov
push
jp
icebp
sbb
push
cmp
lods
ss
imul
cmc
repz
fcompl
sbb
cmp
mov
shl
cli
xor
repnz
js
add
xchg
roll
pushf
insb
dec
mov
ljmp
sub
sti
xor
das
sahf
xor
test
jno
jge
cmp
xchg
idivb
adc
ud0
test
aaa
daa
dec
and
dec
icebp
or
mov
lds
mov
or
pop
push
cli
iret
adc
jp
mov
repz
scas
jmp
push
mov
fistpll
sub
rcl
neg
mov
mov
add
sbb
pop
and
leave
jecxz
in
das
add
xchg
mov
das
jg
add
push
mov
adc
cltd
adcb
dec
sub
int
sub
xchg
dec
jns
mov
les
lret
jo
mov
roll
lea
or
icebp
fwait
movsl
das
pop
fcomps
xor
popl
sbb
pop
pop
scas
inc
or
push
jne
add
js
cmp
adc
mov
ja
cmpsl
cmc
lods
aas
push
cmp
pop
jge
push
push
cmp
mov
push
gs
and
jnp
mov
add
mov
lcall
insb
mov
xor
imul
push
dec
repz
test
loopne
fdivrs
ret
mov
shll
and
inc
sbb
std
bound
xchg
mov
pushf
cwtl
stos
je
push
loope
cmp
pop
dec
enter
inc
push
or
push
mov
into
xchg
arpl
jnp
fisubs
or
popa
xchg
adc
mov
adc
shll
mov
mov
mov
enter
mov
jecxz
not
fsubs
jmp
and
fidivrs
lods
push
in
push
aas
pop
xchg
jnp
imul
add
mov
push
outsb
or
xlat
insl
xor
xchg
and
rolb
mov
cmp
cmp
cmc
fidivl
jle
cmp
mov
cmpsb
fwait
pop
or
pop
inc
jno
fs
rorb
xor
adc
sahf
test
jle
daa
insl
in
add
std
mov
or
cmp
dec
int
cmp
and
lcall
mov
clc
mov
dec
cmpsl
dec
cmp
cwtl
add
push
movsb
ret
clc
sti
lock
notl
mov
cli
dec
jg
mov
mov
push
add
adc
ficomps
cmp
imul
scas
push
cli
pop
lea
and
stc
inc
test
arpl
rol
pop
xchg
imul
icebp
push
xor
test
jne
mov
loope
lcall
pop
xchg
xchg
xchg
lds
push
out
mov
icebp
cld
push
insb
add
shll
push
inc
or
addr16
mov
inc
jnp
shr
ja
dec
dec
sbb
dec
fsubrs
in
call
imul
fwait
sbb
into
and
outsl
ja
cltd
xor
out
mov
nop
fnstcw
add
pop
frstor
mov
test
enter
pop
and
mov
bound
movsb
push
add
lock
jno
ret
dec
rclb
aam
icebp
rcl
int3
mov
jno
fisttps
xchg
mov
dec
test
inc
pop
dec
xchg
pop
push
pop
test
xlat
mov
pop
sbb
nop
test
aas
adc
fiadds
dec
popa
cmp
xor
jne
inc
aaa
mov
repz
mov
mov
and
ss
pop
enter
ret
push
xchg
inc
cmpsl
sbb
ljmp
push
pop
shll
in
cmp
aaa
jo
adc
and
mov
jae
inc
data16
mov
mov
jbe
push
mov
pop
roll
repz
cmpsb
shr
sbb
dec
xchg
mov
and
add
adc
mov
sub
fsub
bound
fiaddl
lods
mov
dec
ret
pop
or
adc
nop
and
sbb
cmp
je
xchg
jmp
inc
fcompl
sbb
lret
mov
mov
jmp
sbb
test
dec
call
aam
and
or
je
pop
inc
fstl
push
mov
aas
pusha
xor
pop
das
and
fcomip
inc
insb
xchg
inc
icebp
cmp
pusha
int3
sub
std
pop
dec
or
mov
mov
xor
loop
push
pop
pop
fildll
arpl
out
icebp
mov
pop
cltd
pusha
jns
push
adcb
and
jb
mov
and
clc
repnz
mov
xor
inc
ret
es
xor
aad
lahf
sbb
push
mov
mov
push
fdivrs
mov
xor
xlat
inc
and
xor
xchg
leave
sub
repnz
push
jp
and
test
stos
mov
in
insb
add
sti
pop
mov
addr16
xchg
pop
in
and
and
push
mov
dec
sub
jp
cmpsl
xor
cmp
sub
imul
pop
das
mov
push
enter
jecxz
jnp
jmp
les
jl
dec
shll
mov
sub
call
xlat
and
lcall
jge
jmp
std
mov
dec
push
jbe
loop
sub
pop
cmc
stos
lds
cs
jge
sub
clc
bound
mov
insb
mov
into
inc
pop
cmpsb
mov
sbb
mov
decl
and
movsb
pop
movsl
push
lahf
xchg
lret
cltd
jecxz
and
in
jbe
ja
mov
fcmovnb
mov
sub
and
insb
aad
cs
out
mov
dec
shll
dec
sub
ficompl
ss
jmp
outsl
and
andb
pop
push
in
test
sub
xor
imul
cs
mov
sbb
xchg
loope
je
movsb
mov
dec
cmpsl
adc
adc
scas
adc
xor
test
stos
mov
cmc
mov
push
out
xorb
cwtl
in
sahf
xchg
jo
out
push
sbb
in
and
xchg
dec
dec
fwait
push
jns
imul
xchg
roll
test
xchg
insb
iret
adc
mov
dec
aaa
mov
xchg
mov
or
into
jge
mov
mov
inc
int
sub
inc
push
lea
mov
aaa
in
adc
adc
sub
test
inc
add
dec
inc
shlb
std
ljmp
sub
shll
loope
xor
in
lods
mov
add
fiadds
add
or
insb
sbb
jne
arpl
nop
gs
dec
addr16
pop
dec
lock
add
sahf
fmull
cmpsl
ds
and
pop
imul
cmp
clc
jmp
dec
and
addr16
test
push
mov
idiv
jae
int
in
add
jecxz
jae
jns
sahf
jecxz
jle
aam
rcll
push
movsl
dec
mov
popa
mov
xlat
xlat
pop
cmp
dec
bound
enter
out
iret
xchg
mov
int
mov
mov
pop
sbb
or
andl
cmp
cwtl
mov
sub
xchg
sub
mov
iret
inc
push
jmp
es
scas
dec
mov
xlat
es
clc
addb
or
fiadds
xchg
idivb
test
pushf
cwtl
cltd
mov
or
cmp
les
loopne
pop
mov
mov
push
ret
sti
cmp
mov
xor
bswap
mov
jecxz
addr16
add
push
movsb
push
mov
sti
outsl
mov
xlat
cwtl
xchg
add
dec
loope
mov
lods
dec
cmp
jnp
pop
dec
icebp
jg
icebp
stc
ja
xor
fisubs
dec
add
mov
sbb
mov
mov
lcall
int3
loopne
sub
mov
inc
call
adc
or
iret
mov
mov
mov
call
add
in
pop
and
movsb
cwtl
movsb
jo
pop
andb
or
js
adc
xchg
divl
mov
pusha
in
movsb
shr
sbb
and
ret
mov
jmp
fwait
inc
aaa
and
inc
jo
lret
cmpsb
mov
arpl
cmp
fwait
dec
test
hlt
xchg
sub
or
and
xchg
mov
pop
and
fwait
pop
push
push
inc
pop
ljmp
bswap
jne
pop
push
push
imul
lea
sbb
push
adc
fdivrs
jge
icebp
mov
lods
clc
mov
push
push
or
sti
fistpl
leave
orl
cmp
pusha
dec
jge
mov
cli
outsl
mov
sbb
jae,pt
pop
lret
outsl
loop
mov
lahf
push
cs
add
add
mov
xchg
aad
sbb
cltd
cmp
dec
stos
iret
das
imul
enter
inc
ja
aad
jge
fcmovu
movsb
xchg
add
inc
xlat
push
inc
or
sub
mov
movsl
push
in
inc
push
jb
jae
lret
arpl
inc
inc
xor
mov
outsb
lds
dec
imul
pop
scas
add
repnz
xor
aam
out
mov
lock
jae
mov
add
adc
movsb
cmp
fdiv
inc
les
sbb
lret
mov
or
xlat
dec
sahf
cmc
pop
int3
loope
lret
push
pop
jmp
xchg
dec
xchg
in
loop
icebp
leave
jnp
sub
ljmp
sbb
mov
data16
or
jb
add
mov
xor
ja
xchg
jmp
addr16
enter
test
inc
mov
ficoms
mov
push
imul
adc
pop
stc
fldl
sbb
imul
out
roll
mov
dec
stc
mov
rol
xchg
sbb
dec
les
into
pop
sub
mov
sub
ss
iret
sarb
cmp
cmp
xor
and
push
push
and
ret
call
mov
arpl
sub
mov
ss
mov
xchg
lock
cmc
jnp
dec
data16
enter
jo
scas
shll
hlt
xor
daa
and
jmp
mov
sahf
imul
cmp
data16
mov
pop
and
nop
ja
popa
addr16
fdivl
xor
inc
add
mov
movsb
xor
adc
push
inc
mov
sti
shrl
repnz
pop
inc
mov
ds
lods
popf
lock
cmp
sub
mov
int3
jmp
lahf
pop
or
rorl
xchg
loope
pop
jo
cmp
ret
push
rcll
mov
movq
aad
mov
mov
cmc
push
pop
lds
int3
cmp
jnp
int3
in
adcl
rcr
add
sbb
dec
ds
repnz
add
jg
pop
push
and
or
fwait
or
pop
rcll
jbe
pusha
mov
shr
pop
cltd
push
mov
enter
test
dec
testb
sbb
and
fcoml
sbbl
insb
inc
fucomip
jg
pop
mov
pop
xchg
dec
mov
jbe
mov
scas
add
lds
jl
out
sbb
mov
inc
clc
add
push
fcoml
cmc
mov
lods
adc
scas
pop
lock
sub
or
jnp
cmpsl
js
call
fcoml
pop
or
aas
scas
data16
lods
outsl
push
push
bt
dec
sub
out
rclb
xchg
sub
lret
icebp
in
ja
scas
pop
test
lods
inc
jecxz
fmuls
in
dec
pop
out
sbb
dec
dec
loopne
ret
lcall
mov
addr16
push
rolb
popf
cs
mov
out
dec
test
aas
or
cwtl
cmp
jne
jo
scas
dec
jbe
cs
das
inc
adc
repz
inc
bound
pushf
dec
inc
pusha
lods
sub
xchg
popa
lods
inc
add
rclb
adc
je
xor
imul
cwtl
lds
dec
mov
lahf
pop
shr
shr
cmp
arpl
cmpsb
test
cmp
scas
jno
aam
xor
add
aas
aas
outsl
pushf
push
repz
add
jbe
das
cmp
aad
sub
loopne
sbb
jne
jg
clc
addr16
insb
sahf
and
dec
call
ret
xchg
push
or
mov
rorb
je
or
mov
mov
into
push
lea
inc
or
cwtl
ret
adc
ret
jno
in
test
mov
outsb
mov
or
and
and
mov
js
lea
movsb
shlb
jecxz
inc
pop
fsts
push
pusha
aad
in
push
mov
out
js
xchg
and
jb
sti
pop
sub
sbb
test
clc
ljmp
and
iret
mov
int
aad
push
push
jne
scas
add
mov
pop
mov
mov
jno
loope
pop
sub
fcompl
xchg
cmp
cmp
outsb
lret
jbe
imul
jle
cmp
lret
jecxz
adc
lret
xor
mov
mov
pop
and
xchg
push
adc
mov
inc
leave
imull
mov
mov
enter
lahf
add
or
ljmp
inc
adc
and
xor
lret
xor
mov
dec
jno
jmp
adc
jmp
sub
int3
daa
push
js
mov
jbe
mov
jl
mov
add
insl
cmp
xchg
lea
add
xchg
das
je
and
in
loopne
jmp
jle
aaa
call
xchg
sub
add
pop
mov
repnz
jbe
dec
xor
mov
sub
cs
bound
push
jae
iret
mov
dec
sub
imul
xor
lock
pop
hlt
es
and
stos
push
pop
rcrb
push
push
les
jne
inc
rcll
out
gs
popf
je
push
ret
inc
stos
jbe
aad
xchg
test
mov
sbb
dec
push
adc
sbb
inc
xchg
jb
push
das
call
js
lock
lea
test
cmp
nop
inc
jmp
mov
xchg
ss
aaa
fimull
jecxz
jne
jb
push
into
sbb
clc
push
xchg
add
std
divb
xor
fisubrs
lcall
and
push
cmp
in
shlb
fnstenv
add
adc
dec
test
loop
jo
and
push
imul
sbb
inc
inc
and
iret
and
arpl
jbe
pop
and
in
push
lcall
mov
dec
jp
cltd
hlt
add
push
add
and
test
das
dec
stc
jle
aad
lahf
push
mov
push
repnz
or
mov
pop
fcompl
cmp
mov
jne
add
loopne
or
push
cmp
fidivl
push
loopne
je
xor
pop
sbbl
adc
xchg
adc
cmp
inc
push
sub
cmp
dec
test
or
mov
sahf
mov
xchg
dec
pop
daa
adc
xchg
repnz
mov
in
stc
and
or
cmp
daa
jbe
inc
ja
mov
pusha
mov
jg
rcr
loope,pt
fldenv
lea
or
dec
fisubs
xchg
pop
jle
push
mov
or
repnz
scas
mov
cld
mov
xor
sbb
lret
dec
mov
push
mov
bound
lea
xlat
mov
and
xor
pusha
sub
sub
sbb
es
inc
push
jae
loopne
xchg
adc
loop
sahf
test
adc
test
fsubr
mov
test
pop
mov
mov
jl
jne
and
pop
data16
dec
cmp
stc
cmp
sub
push
and
repnz
cmpl
or
out
je
pop
cmpsl
call
jne
jns
mov
nop
out
jne
outsl
jle
mov
repz
pop
cwtl
das
jl
imul
out
adc
out
cli
dec
jns
imul
adc
xchg
or
test
out
adc
jbe
jg
fucomip
xor
dec
sahf
jl
mov
inc
enter
cwtl
mov
mov
mov
idivl
out
fsubl
idivl
sahf
fsubrp
push
and
popf
sbb
adc
xchg
add
nop
fists
and
mov
dec
repz
or
jl
push
sbbb
notb
repz
imul
ret
daa
adc
jle
xchg
pop
jns
movsl
test
addl
xchg
adc
xor
loop
jle
rcrl
mov
clc
mov
mov
loopne
aas
insb
adcl
aaa
sbb
and
mov
fmull
pusha
mov
fists
pop
ljmp
mov
adc
pop
jae
mov
ret
mov
jecxz
mov
xor
sub
pushf
lcall
sub
aad
xchg
sbb
adc
add
xor
mov
aad
clc
inc
jle
cmp
std
rorl
mov
insl
mov
inc
sbb
jg
dec
xor
enter
sarl
pop
xchg
add
orl
and
negb
std
out
pop
arpl
ja
rcrl
aam
fidivl
pop
imul
stc
fcompl
mov
lcall
push
dec
or
ret
jecxz
or
cmp
stc
pop
fs
cmp
xor
xor
ss
out
jg
mov
add
out
mov
jle,pn
mov
jg
push
out
push
add
mov
add
sub
push
lea
jne
iret
dec
cmp
pop
fldl
sarl
sub
in
xchg
lds
and
inc
xorl
test
jle
je
push
and
addr16
dec
dec
stos
xchg
je
push
sbb
ljmp
imul
mov
ja
jecxz
or
xchg
lcall
subb
jmp
mov
mov
or
arpl
rorl
std
lods
aaa
xchg
and
and
mov
dec
sub
xor
lret
cmp
xchg
stos
mov
rclb
mov
mov
sub
dec
cmpsb
insb
push
lret
call
dec
mov
mov
int3
ds
dec
and
push
fs
out
cmc
subb
sbb
and
mov
sub
pushf
pop
addb
xor
in
xor
add
jle
test
jge
mov
or
pop
push
xor
lock
jb
adc
jle
enter
inc
xor
sahf
arpl
ds
nop
pop
sub
outsb
orb
lret
in
in
pop
fistpll
addr16
and
imul
cmp
push
das
xor
scas
arpl
int3
mov
inc
jo
jae
inc
jne
push
jmp
es
mov
or
add
xchg
pop
cmp
movsb
mov
lods
dec
xor
loope
fdiv
add
bound
test
inc
mov
movsl
lcall
call
in
outsl
inc
push
mov
repnz
push
scas
xor
mov
jbe
loope
jo
or
dec
inc
outsl
sbb
shl
sbb
sub
daa
xchg
cmp
or
and
dec
cmpsb
cld
pop
ja
ja
cwtl
sub
mov
scas
daa
mov
sbb
xor
popa
xchg
loop
lea
push
ja
pushf
neg
pushaw
rcrb
pop
icebp
loope
fwait
mov
mov
fmul
fists
out
inc
cltd
stc
push
xchg
push
fnstenv
mov
push
dec
adc
jo
movsb
mov
roll
pop
ja
test
lods
fadds
aaa
adc
rolb
testb
sbbb
fs
jecxz
pop
popf
sub
rcrl
sti
test
imul
jno
mov
dec
mov
gs
push
mov
mov
cmc
outsb
xor
ljmp
pushl
rclb
sahf
cmp
cmc
test
inc
cwtl
push
jle
insb
in
je
rcll
repz
and
into
ds
shlb
mov
mov
je
loop
pop
filds
inc
psllq
add
inc
leave
imul
jbe
orl
fisttps
mov
cld
mov
jo
fnstsw
mov
scas
imul
xor
mov
and
add
sub
stos
jb
cmp
push
movsl
bound
js
xchg
out
out
sub
int3
fldt
mov
pusha
dec
cli
test
dec
jl
cmpsb
cmp
xchg
cli
push
lods
ret
aad
fwait
pushf
lods
ret
fs
push
push
inc
ljmp
dec
outsl
push
test
fdivl
mov
xor
cmpsl
cmpsb
jae
push
jnp
cmp
int3
nop
cmp
dec
push
jb
fldt
xor
sbb
jecxz
fcompl
test
das
pop
pop
imul
out
sti
insl
lock
pop
or
push
xor
cli
push
int
jle
repz
fidivrl
mov
pop
cwtl
xchg
xchg
out
push
jmp
mov
sahf
sbb
mov
cmp
cli
xchg
popf
jbe
mov
dec
mov
adc
mov
pushf
mov
in
mov
imul
inc
and
movsb
cmpb
stc
ds
dec
and
push
aad
insb
jnp
fcoms
test
cmp
cmc
adc
std
jnp
pop
xchg
into
jmp
mov
or
and
lret
dec
sahf
pop
rcrb
test
or
fstpl
lcall
shll
aas
mov
imul
imul
pop
cmpsb
mov
leave
adc
sbb
pop
push
test
rep
jle
jno
icebp
in
or
pushf
jbe
xchg
aaa
mov
push
jns
xor
xchg
mov
fcompl
push
subl
aam
push
fdivl
test
pop
cmpsl
int
fistpll
ja
jb
nop
stos
addr16
pop
pop
xchg
ds
addr16
add
outsl
mov
mov
scas
xchg
inc
sti
pop
mov
fdivrp
sti
and
std
mov
adc
mov
push
inc
mov
sbb
push
jmp
es
jb
jl
push
aad
rol
sbb
icebp
imul
scas
xchg
sahf
mov
sub
sub
lock
and
and
mov
sub
push
rorb
int3
push
mov
mov
sub
jge
inc
std
ja
jne
mov
scas
jae
push
test
fsubr
add
cmp
cmp
jge
mov
mov
out
mov
jo
pusha
sbb
sbb
mov
or
mov
inc
fimull
pop
adc
mov
cld
insl
mov
cmpl
sub
fdivrl
mov
fldenv
fwait
mov
xchg
fcmovbe
jae
pop
js
mov
dec
or
adc
vgf2p8mulb
mov
stos
sbb
ds
stos
shll
nop
xlat
shll
fadds
xchg
sbb
mov
mov
or
mov
and
sub
js
jmp
push
popa
out
sub
mov
call
ss
pusha
cmp
lea
jne
cmp
adc
in
xchg
push
shrb
inc
dec
jns
inc
sub
ja
push
mov
daa
adc
je
int3
and
inc
push
stos
lret
mov
inc
int
in
dec
sbb
repnz
inc
jo
mov
adc
adc
out
add
pop
adcl
jl
lock
inc
rcll
std
faddp
js
sub
mov
ficoml
xchg
orl
mov
pushf
sti
cwtl
or
rcrb
fwait
loopne
cmpsl
and
out
sbb
pop
mov
dec
adc
and
sub
rorb
mov
int
mov
mov
ss
jnp
pop
inc
mov
jns
or
xchg
inc
lock
int3
mov
adc
cmp
aad
mov
adc
in
int
sahf
pop
fs
lods
sub
out
or
cmp
pop
pop
outsl
repz
cmp
cmpb
cld
dec
push
push
pop
or
sub
ja
xor
clc
mov
add
loopne
lret
test
lock
sub
aad
es
fidivl
sti
ret
cld
in
stos
outsl
movsb
aam
jecxz
xchg
into
ficoms
jle
popa
adc
push
adc
jp
cmp
lahf
and
int3
lds
rcrb
mov
add
xor
mov
inc
xor
sub
and
sub
insb
push
test
loop
xor
mov
jne
movl
mov
cld
dec
adc
inc
fptan
lock
in
jp
cld
dec
orw
push
ret
push
xlat
pop
fsubs
sub
iret
push
popf
push
aam
in
es
push
fistpl
sub
and
xlat
das
mov
mov
mov
gs
dec
sbb
scas
shlb
cli
push
mov
jns
and
xchg
fcoms
lcall
xchg
scas
pop
mov
imul
nop
mov
sbb
jno
addr16
cli
in
pop
test
push
inc
cmc
add
adc
mov
daa
xlat
repnz
and
jae
adc
fwait
repz
pushf
fdivrs
outsb
out
cli
mov
add
mov
loope
sub
jo
xor
pop
adc
nop
scas
cld
and
imul
jl
pop
in
movsb
ret
mov
cld
sbb
cmp
aaa
movsb
sahf
fmuls
xor
aam
pop
iret
js
push
jge
test
bound
mov
pop
inc
jecxz
add
enter
mov
mov
cld
push
jno
inc
add
stos
fs
add
addr16
lret
mov
ja
xor
leave
sbbl
mov
mov
sub
fwait
xchg
dec
push
hlt
push
cmp
pop
in
test
insl
jge
dec
push
pop
xor
dec
mov
sub
sbb
stos
xlat
aad
sbb
jle
in
push
int3
dec
pop
ljmp
gs
leave
pop
push
inc
xchg
cltd
into
adc
clc
popf
loope
mov
cmp
sub
push
scas
dec
out
mov
add
sbb
cmpsl
xchg
roll
mov
inc
in
dec
mov
or
test
daa
test
fstl
sub
ret
or
lcall
add
pusha
sahf
add
pop
mov
lods
cmp
imul
lahf
push
sub
xchg
jno
jae
inc
sbb
out
adc
mov
cmpb
in
jecxz
pop
push
mov
adc
xchg
xor
push
mov
fldenv
mov
test
xchg
or
push
out
out
pop
sub
xor
cli
nop
jnp
dec
mov
mov
lahf
bound
jo
dec
pop
push
shr
add
test
cmp
mov
and
idivb
xchg
lods
jb
lds
es
aas
jle
dec
inc
pop
xlat
cmp
push
dec
sti
push
sbb
cmp
jo
sbb
nop
jbe
mov
cld
mov
xchg
jno
out
loop
mov
aas
aas
mov
lahf
mov
sbbl
push
mov
xchg
mov
push
dec
repnz
jecxz
push
jbe
mov
sub
push
subb
sub
xor
push
ret
and
lea
lock
dec
or
pushf
cmp
xchg
lret
xchg
cmc
cmpsb
dec
xchg
stos
scas
cmpsb
hlt
ret
mov
stc
xor
xor
ja
hlt
aad
js
ret
dec
repnz
push
fcmovbe
sub
pop
pop
lahf
cmp
into
shlb
lods
in
add
cmp
stc
shr
fcomi
xlat
mov
ret
sarl
int
imul
cmc
mov
stos
idivb
movsl
add
enter
sbb
lds
mov
xor
sub
loope
pop
roll
std
or
iret
ss
leave
mov
mov
vandpd
ss
pop
mov
scas
cli
popa
iret
pop
outsl
inc
clc
sahf
sub
cltd
insl
jbe
ja
mov
inc
std
mov
lcall
das
mov
cmc
movhps
sbb
pop
cli
push
cmp
mov
int
into
outsb
out
sub
movb
loopne
mov
imulb
fsubrs
push
cli
std
addr16
test
xlat
mov
stc
adc
out
or
rcrl
nop
stc
or
xor
test
fs
jp
add
add
fdivrl
xchg
icebp
jnp
lahf
rclb
xchg
test
mov
sub
cmp
sub
xchg
xchg
dec
adc
mov
push
pop
bound
sbb
or
repnz
out
jns
inc
and
fnstsw
fiaddl
out
mov
sbb
adc
repnz
mov
pop
das
jae
mov
fnsetpm(287
cs
xchg
jmp
mov
xor
ja
cmp
jno
call
ret
and
popf
fnsave
mov
mov
sbb
pop
and
pop
mov
and
fdivr
adc
stos
icebp
pop
adc
mov
addr16
in
pop
out
cmpsb
add
fxch
cmpsb
push
push
inc
in
mov
in
inc
je
adc
repz
inc
orb
jno
cmp
std
inc
sbb
mov
pop
pop
mov
mov
lods
arpl
mov
mov
mov
das
sbb
faddl
push
aad
sbb
or
stos
xchg
sbb
inc
jnp
mov
in
push
bound
and
cmp
mov
insb
cmpsb
push
push
daa
lods
ja
xchg
sbb
sbb
jns
pop
fsubr
cmp
jp
or
dec
mov
adc
push
jle
mov
dec
lcall
insl
mov
aad
jle
loop
in
repz
push
sub
xchg
repnz
loope
mov
cli
push
adcl
or
fcomps
mov
cmp
fstpl
sub
lcall
push
cwtl
jo
rclb
fildl
aam
div
std
xchg
movsl
out
xor
mov
add
shl
pop
out
or
loopne
je
adc
push
mov
ficoml
sbb
cwtl
adc
jl
push
mov
adc
in
push
fsubrs
push
insb
pop
dec
loopne
push
inc
pop
pop
sti
insb
outsl
int
icebp
ljmp
insb
shrb
sbb
add
push
inc
sub
inc
pusha
repz
jno
xchg
dec
push
in
imul
xchg
cmp
int
jno
dec
mov
ret
dec
test
mov
mov
dec
push
sub
jle
mov
mov
scas
inc
nop
inc
aam
vpunpcklwd
in
push
fnstcw
ss
enter
push
int3
mov
aaa
shlb
jbe
adc
xchg
mov
mov
push
shll
mov
jp
fs
adc
push
mov
mov
hlt
stc
mov
mov
mov
mov
sub
int3
push
sub
cmp
pop
sbb
add
sbb
lahf
push
and
adc
nop
loope
sti
aam
jge
xor
fiaddl
mov
mov
loop
cmpsl
add
jbe
sahf
inc
push
xor
and
push
ljmp
imul
test
pushf
pop
cmp
xchg
add
xchg
lret
mov
fildll
ljmp
sti
stos
add
insb
punpckhdq
mov
imul
movsb
xchg
sub
aad
stos
sbb
loopne
in
int
mov
imul
outsb
add
in
push
dec
pop
add
adc
push
std
pop
repz
repnz
xorl
or
pop
inc
mov
data16
jle
add
pushf
es
lret
out
test
cmpsl
stc
xchg
cmp
push
aas
and
mov
push
xlat
mov
fs
ret
out
int3
jmp
mov
mov
sbb
insl
cs
hlt
insl
rcl
sub
and
fsubl
dec
gs
cmp
and
jb
daa
stc
fsub
adc
mov
push
add
jl
and
ss
or
ficomps
inc
jmp
adc
dec
fdivl
xchg
pop
push
lods
gs
loopne
cltd
ret
lcall
insl
xchg
xor
fistpl
cmp
or
lds
sti
cmpsl
sbb
xor
je
pop
pop
ret
std
insl
fstps
cmpsl
out
cmp
dec
xchg
dec
movsl
xor
mov
xchg
jp
aas
push
repz
or
push
fucomip
inc
push
ret
mov
push
cmpsl
js
shlb
push
call
enter
outsb
jb
daa
cwtl
dec
icebp
inc
js
mov
lahf
and
sub
imul
movsl
test
sar
inc
xchg
incb
movsb
xor
xlat
sub
dec
mov
movsb
push
jecxz
mul
sub
adc
clc
mov
loop
loope
repz
and
lock
out
ss
mov
andb
andb
mov
mov
mov
mov
inc
cmp
out
mov
inc
sti
int3
add
pop
repnz
cld
gs
nop
mov
xchg
inc
or
xchg
xchg
mov
nop
rolb
stos
xor
push
mov
nop
roll
std
lahf
inc
jbe
dec
leave
mov
xor
or
and
lock
xchg
ljmp
adc
cwtl
pop
divw
aam
mov
in
aaa
std
jmp
shll
cltd
and
mov
or
ljmp
test
in
sbb
cs
repz
dec
ret
je
xchg
lds
inc
cmp
mov
jecxz
mov
popf
jne
sbb
sti
and
imul
inc
inc
addr16
mov
outsl
mov
ret
pop
jnp
push
lock
add
push
adc
pusha
jno
pop
dec
xchg
adc
loop
scas
pop
cmp
sub
test
pop
fidivrl
push
mov
xor
std
push
mov
push
stos
popa
push
movb
mov
dec
and
loopne
sub
inc
les
adc
sbb
daa
int
pop
int3
add
inc
lcall
in
mov
dec
jbe
mov
and
xor
xchg
ljmp
jecxz
subl
out
fbld
xor
pmaddwd
pop
pop
jo
sbbl
test
in
push
mov
jge
push
out
add
dec
sub
inc
xor
xlat
lods
scas
ffreep
dec
fst
daa
repnz
cmp
mov
lea
mov
and
mov
movswl
movsw
ss
loopne
ret
movsb
imul
rcrb
push
push
jne
jo
jns
cltd
cmc
mov
gs
cld
repnz
lds
dec
xchg
adc
test
fistpl
xor
shr
inc
gs
xchg
lret
mov
out
jmp
push
mov
jle
push
xor
je
and
dec
and
fdivl
xchg
sbb
psllq
inc
in
dec
add
cmpb
dec
xchg
xor
addl
orl
sbb
push
mov
cmp
cs
lret
jle
divl
lock
test
int3
mov
lcall
mov
mov
xchg
push
push
push
xchg
sub
sub
daa
pop
orb
rorb
call
fsubrs
jns
mov
fwait
cmp
daa
mov
es
pop
xor
xor
sti
ret
rcrb
rcr
lds
jge
pop
fwait
lret
cmpsl
cmp
sbb
shll
int
xchg
or
sub
cmp
outsb
mov
data16
in
inc
inc
stc
hlt
in
xchg
movsl
ljmp
lds
add
mov
imul
mov
mov
lcall
outsl
jl
js
mov
loopne
lcall
rol
cs
adc
cwtl
sub
and
or
add
aam
mov
loope
dec
ret
ss
push
das
mov
clc
push
aam
test
js
jnp
dec
add
fldenv
inc
movsl
and
das
mov
int
xor
mov
push
or
bound
push
jno
push
push
fistpl
jle
fcomps
lcall
bound
add
es
mov
and
cwtl
je
mov
mov
ljmp
ds
nop
jnp
loopne
push
mov
mov
vmovdqu16
cmpb
iret
mov
dec
cmpsl
icebp
fwait
ss
das
mov
repnz
mov
mov
mov
adc
aas
mov
fdivs
adc
icebp
mov
cmp
mov
adc
adc
outsl
in
stos
fcomps
mov
outsl
sub
lock
lods
mov
xchg
mov
xchg
dec
cmp
or
leave
push
das
cmpsl
rcrb
pop
nop
movhps
minps
inc
cltd
fcoml
shlb
adc
imul
mov
lahf
aam
sub
stc
lret
out
and
push
pop
lahf
imul
cmp
ret
mov
hlt
int3
test
sbb
fadds
inc
mov
pushf
add
fsubr
mov
jne
aad
loope
int3
pop
xor
mov
repnz
sub
es
inc
inc
arpl
scas
fmuls
xor
sbb
jp
add
movsl
cs
pop
push
pop
fyl2xp1
std
mov
mov
cmp
mov
jp
push
lret
imul
arpl
jmp
loope
fwait
sbb
sub
mov
pop
push
in
xor
ret
mov
jns
or
sti
push
jno
in
xchg
inc
pop
fisubrs
bound
jecxz
insb
adc
shlb
enter
mov
fstp
pop
ds
and
push
sub
aam
fldl
or
inc
shll
enter
leave
mul
mov
stos
movsl
fnsave
dec
mov
hlt
mov
adc
call
add
dec
cmp
leave
inc
push
cmc
inc
jns
jno
shr
pop
lea
aas
xchg
inc
adc
mov
inc
in
mov
loopne
inc
imul
test
rorl
push
pop
into
sahf
fidivs
in
cmpsl
add
test
hlt
jns
sub
dec
dec
out
xchg
inc
and
sarl
out
jno
rorb
les
push
popa
mov
pop
xor
jmp
xchg
dec
push
inc
test
jns
xchg
cmpsb
es
insl
sahf
and
cmp
pop
enter
pushf
popf
xchg
xor
sbb
mov
scas
jne
loop
push
xchg
or
pop
fimuls
mov
call
lea
cmp
lahf
fisubl
daa
pop
add
int
or
cmp
sarb
neg
js
insb
pop
adc
cmc
cmpsl
pop
test
mov
xchg
and
pop
test
jl
pop
popa
sbb
xchg
adc
lret
fwait
es
xlat
push
mov
shl
dec
shll
sbb
adc
sub
fcmovnb
popl
push
mov
add
xchg
repnz
push
mov
ja
adc
or
pusha
inc
mov
mov
xorb
mull
cvtps2pi
mov
and
scas
sahf
insb
imul
mov
aas
out
testb
ss
faddl
push
pop
pop
popa
mov
jg
xchg
inc
mov
fcomps
xor
add
mov
push
adc
ret
adcl
mov
leave
notl
or
adc
insl
add
fs
pop
pop
popa
mov
ja
and
inc
rcrl
lahf
icebp
jge
and
add
pop
push
fistpl
and
fs
or
mov
jno
repnz
jo
popl
and
pusha
insl
push
outsb
pop
mov
xor
mov
pop
mov
mov
sub
inc
adc
stos
popf
cs
popa
fildl
dec
pop
sbb
inc
mov
mov
push
jae
out
jnp
jmp
lcall
stc
out
movsb
mov
sti
rcl
out
iret
adc
lods
hlt
sahf
fsubl
inc
mov
das
mov
and
int3
jl
xchg
and
jbe
cld
add
lcall
shr
pop
mov
add
aaa
imul
push
scas
cmp
xor
sub
add
lock
iret
sbbb
jo
mov
cwtl
mov
jne
cmpsl
or
decl
fildll
mov
jnp
js
popf
inc
pop
jae
xchg
loop
dec
cmc
imul
jo
pop
js
outsb
push
inc
cmpsl
lret
xchg
cwtl
pop
mov
cmp
movsb
repnz
or
lods
or
cmp
push
cmp
dec
mov
inc
cmp
testb
gs
aaa
in
jno
dec
cmpsl
xor
dec
push
pop
mov
stos
dec
mov
rorl
shrl
repnz
imul
rorb
xor
add
sub
scas
jbe
dec
jl
adc
rcr
ljmp
mov
shrb
and
movsl
xchg
lock
and
mov
xor
out
mov
inc
fcoml
and
fstps
and
arpl
filds
cltd
insl
mov
xor
xchg
sahf
in
inc
xor
pushf
dec
cs
dec
inc
pusha
repnz
imul
sbb
xchg
lods
jno
mov
in
sarb
xchg
and
pop
enter
test
int
mov
repz
ja
or
sub
in
sub
xchg
sbbb
imul
add
sti
cmp
pop
mov
add
and
fbld
pushf
or
pop
sub
subl
dec
pop
cltd
pop
daa
ret
ret
sbb
xor
jp
xor
xor
sarb
enter
je
push
int3
loope
add
dec
mov
mov
mov
mov
pop
push
stc
fstl
push
and
mul
jecxz
rclb
fmull
js
sbb
out
inc
mov
push
hlt
inc
shrb
mov
js
packssdw
adcb
aas
sahf
test
push
pop
and
xlat
mov
adc
enter
jg
sbb
dec
les
lcall
loop
adc
dec
push
xchg
inc
dec
push
pop
inc
xchg
cmpsl
push
das
cmc
mov
lock
dec
jb
mov
lahf
jbe
test
pusha
pop
pop
imul
pop
ret
jmp
adc
jbe
cs
xchg
mov
jne
rcrb
push
rcrl
or
imul
mov
scas
nop
mov
jmp
lret
jp
ja
pop
jo
mov
adc
cmp
mov
xor
jecxz
jo
sbb
std
out
cmp
add
mov
ret
call
push
cmp
push
cmp
push
cltd
test
leave
testb
mov
mov
lods
aaa
aad
fistl
fisubs
xchg
rolb
movsl
cmp
inc
sbb
xchg
in
and
cwtl
jbe
je
or
xchg
xchg
pop
out
adcb
add
mov
aad
push
pop
ret
mov
sub
jbe
push
push
cmp
jbe
stos
dec
cmp
cs
xchg
mov
js
fs
cmc
pop
fidivrl
test
mov
lock
dec
scas
pop
ja
and
das
mov
cmp
jae,pt
ss
and
jle
xor
mov
xor
pushf
or
stos
sub
repz
jge
dec
xchg
fistps
data16
cltd
xchg
push
jns
push
in
and
mov
rolb
push
fdivr
lret
rorl
andl
les
push
cmp
aam
pop
inc
lret
inc
loopne
mulb
dec
out
jbe
xchg
push
and
sub
push
les
fnstsw
bound
imul
aas
jmp
in
nop
daa
jo
movsb
test
roll
int3
cmc
loopne
imul
or
dec
dec
pushl
and
pop
clc
movsb
push
push
sbb
jne
out
lea
cltd
mov
cmp
aas
shl
cld
mov
sub
adc
loopne
cmp
mov
jae
add
in
inc
xor
dec
out
xchg
lds
lfs
fsubr
ja
mov
das
je
xor
nop
inc
fwait
xchg
and
dec
adc
pushf
flds
or
jb
pop
sub
mov
js
or
pop
sahf
das
push
mov
mov
aad
jnp
in
add
lcall
int
leave
inc
test
cmpl
loop
sub
xchg
inc
jle
sub
jo
inc
insl
sub
out
dec
jmp
dec
xor
inc
or
sub
mov
mov
inc
and
add
clc
pop
and
ret
loop
jg
js
dec
jmp
mov
dec
stc
js
mov
mov
test
xor
mov
mov
pop
pop
cmpsl
dec
or
stos
jno
jne
adc
inc
faddp
subl
clc
out
and
mov
clc
aaa
sbb
scas
fidivrl
cmp
push
mov
into
pop
call
push
iret
mov
sub
or
pop
jge
push
push
cmp
inc
xchg
fidivl
mov
movsl
aad
cmpsl
sarl
das
jnp
shl
scas
push
pop
adc
repz
je
rclb
imul
cmpsl
fnstenv
insl
leave
pop
inc
push
inc
in
test
pop
or
inc
xchg
ja
mov
push
test
push
jns
dec
in
mov
cmp
pop
imull
mov
adc
movsb
sub
mov
or
scas
inc
xchg
int3
cmpsb
jl
pusha
lock
imul
hlt
stos
loope
mov
aaa
decb
fadd
shll
sarl
repnz
mov
dec
xchg
mov
aad
lret
hlt
mov
in
ds
cltd
mov
push
push
roll
ljmp
cmp
dec
jl
aad
push
das
push
ljmp
in
push
out
xor
mov
jmp
rorb
mov
cmp
ja
add
std
arpl
xor
sub
fs
dec
inc
mov
and
add
dec
dec
xor
pop
sti
sub
lret
inc
dec
cmp
dec
scas
mov
es
mov
shlb
fucomip
inc
mov
ja
xor
mov
cs
inc
mov
loope
gs
mov
xchg
dec
icebp
push
pop
lahf
inc
or
fistl
js
in
sbb
notl
cmpsl
int
negl
sbb
test
ret
and
mov
outsb
jp
stos
cmp
leave
imull
stos
adc
sbb
cmp
nop
mov
jecxz
mov
ja
inc
lret
cs
xchg
sbb
negl
les
push
xchg
push
push
insl
lret
cwtl
pop
push
scas
shrl
negl
mov
pop
jae
mov
faddl
mov
in
sbb
xchg
lock
mov
jge
into
jg
mov
mov
push
sbb
fcoml
lods
sbb
icebp
xor
enter
mov
not
pusha
sub
lds
aad
pop
mov
std
insb
xor
rclb
mov
mov
call
cmp
or
push
inc
aad
and
xor
jno
xchg
sbb
mov
imul
pop
repz
lock
dec
jne
add
or
insl
dec
dec
dec
and
je
cmp
cmp
lcall
xor
pop
and
int
inc
push
xchg
aad
jg
jecxz
or
sbb
ss
or
pop
dec
fcompl
sarb
sub
fdivl
sub
pushf
jecxz
cmc
cmp
xchg
cmp
lea
xchg
movsl
push
leave
sub
test
jns
cwtl
cmp
push
jnp
adc
popa
popa
test
lret
imul
movsl
fistl
rorl
xchg
fdiv
es
inc
hlt
mov
mov
adc
push
into
and
aaa
inc
adc
inc
xor
sub
sub
adc
mov
outsb
addr16
jne
jl
and
orb
inc
das
loopne
fucomip
lcall
add
xor
sub
push
jl
lea
mov
pop
lods
cli
xchg
lods
sbb
add
gs
ljmp
pusha
pop
loope
in
pushl
nop
sbb
pop
jp
in
xor
mov
imul
jl
xchg
je
push
or
adc
rol
mov
ret
outsb
sub
add
mov
adc
dec
movl
sub
sbb
jae
xchg
call
xchg
js
call
add
mov
stc
fisttps
imul
push
loope
data16
push
fdivrs
xor
mov
mov
mov
sbb
mov
xchg
int
mov
dec
pop
test
mov
mov
js
rcrl
mov
fdiv
dec
jecxz
push
pop
out
in
mov
push
cmpsl
xchg
pusha
mull
sub
outsb
cmp
in
push
pop
adc
or
pushf
lcall
std
pusha
cmpsl
mov
mov
push
aad
inc
sub
xchg
es
iret
inc
jg
dec
push
movsl
cmp
adc
ljmp
push
loop
push
and
cltd
dec
aad
sbb
test
fstpt
jae
aam
jmp
fidivrs
dec
imul
push
scas
iret
xor
lret
and
inc
test
in
ss
pop
push
push
pop
xlat
inc
repz
popf
and
sub
fwait
mov
jb
lea
dec
xchg
adc
jle
shlb
aaa
pop
mov
xorb
fs
mov
xor
iret
lfs
pop
push
xor
dec
adc
pusha
in
mov
mov
cld
sub
mov
adc
jbe
jle
and
add
mov
cmpsb
jle
das
bswap
into
lock
movsb
dec
and
loope
movsb
sbb
mov
jbe
adc
insl
xor
or
push
adc
and
inc
xchg
add
cli
cmp
xor
pop
xchg
cmp
jnp
sti
lds
sub
inc
xor
sbb
int
inc
sbb
sub
push
and
popf
imul
dec
jmp
xchg
dec
scas
adc
jb
lcall
addr16
arpl
push
pushf
cmp
mov
jp
sbb
push
repz
lcall
ss
dec
push
mov
xor
out
stos
js
add
cmp
ds
lods
cmpsb
call
lea
sahf
xchg
inc
adc
sub
push
call
mov
popf
adc
movsl
sahf
push
jmp
shrl
in
fmull
sbb
stos
pushaw
rorb
ret
out
jecxz
jmp
faddl
adcb
and
and
mov
xor
insb
ret
clc
xor
fsubl
push
movsl
fstps
in
pop
mov
push
clc
leave
jl
jmp
aas
xchg
movsl
jbe
stc
push
lods
rcr
xchg
mov
dec
test
int
cmp
inc
ret
push
mov
mov
xlat
push
add
pop
pop
loope
dec
arpl
cmp
iret
inc
jle
nop
xchg
cmpsl
out
js
movsl
inc
scas
ja
fsubrs
push
add
icebp
or
mov
insb
push
cmp
scas
mov
enter
in
jle
push
fistps
cmp
sti
push
push
gs
and
rolb
arpl
enter
fcoms
test
cmp
jecxz
jp
sub
es
jno
jmp
dec
icebp
mov
movsb
or
stc
out
pand
std
iret
cmovg
aam
sub
cld
mov
mov
sarl
mov
jge
xor
jle
stc
imul
sub
push
jmp
lds
inc
call
fs
mov
sub
ljmp
mov
ret
add
pop
fst
or
rep
push
mov
scas
xor
cld
xchg
or
sbb
mov
or
or
sbb
pop
pop
push
leave
cmp
adc
mov
mov
xchg
sbb
leave
popf
aas
cld
mov
lcall
xchg
fwait
push
fldcw
mov
rorl
je
add
push
cmp
loop
xchg
sub
add
pushf
ljmp
cld
and
fistpll
fmuls
cmpsb
add
mov
and
ja
inc
push
adc
cmp
movsb
ja
jmp
xlat
pop
ja
lock
test
aam
inc
arpl
pushl
adc
xchg
sub
outsl
inc
frstor
dec
mov
cltd
jns
out
add
sbb
lahf
iret
insb
mov
jp
or
pop
popa
mov
cmpsb
filds
loopne
loop
dec
cmp
in
fldt
jnp
jmp
mov
mov
mov
mov
in
xor
add
mov
roll
push
cmpsb
pop
sbb
int
lret
dec
and
xor
js
sahf
jbe
or
lea
pop
stc
and
fwait
sbb
mov
loopne
mov
sbb
push
sbb
mov
je
mov
push
fwait
pop
jl
les
mov
mov
pop
dec
movb
lret
aad
mov
call
lcall
leave
mov
cmp
ret
repz
loopne
cltd
lea
or
dec
lea
outsl
mov
test
add
ret
and
jmp
fucomip
dec
pop
divb
lret
nop
data16
mov
insl
call
sbbb
js
fsubp
loopne
lods
adc
pop
repnz
cmp
addr16
mov
lret
in
aad
adc
or
cmpsb
jmp
and
xlat
sub
aam
push
adc
pop
scas
cli
lret
fbld
scas
enter
clc
inc
and
xchg
sbb
and
and
fwait
cmp
test
mov
jge
jle
sub
dec
cltd
inc
in
dec
mov
jl
pop
push
lret
repnz
cmp
popf
in
push
mov
popf
test
stos
jno
fabs
popf
repnz
or
nop
addr16
cld
cltd
adc
mov
mov
push
test
push
bound
decb
jns
sub
repz
cmp
xchg
mov
in
pop
mov
adcb
pop
out
in
ja
cmpsl
enter
dec
ret
hlt
jle
dec
or
das
and
sub
in
xor
insb
movsl
mov
mov
pop
xor
addr16
jmp
mov
push
and
lods
call
cs
add
jnp
and
jmp
ja
lds
int3
jnp
cmp
add
cmpsb
int3
jle
xchg
cmpsl
fbld
popa
sbbl
les
and
sete
je
mov
imul
mov
rolb
mov
push
imul
dec
pop
dec
negl
mov
lods
mov
sbbb
out
hlt
mov
sbb
jle
sahf
push
icebp
pop
das
stos
cmp
cltd
sbb
inc
and
pop
pop
fidivrl
dec
pop
push
bound
xlat
add
jns
int
mov
scas
ret
jg
inc
mov
ret
adc
ja
sub
popf
push
adc
adc
gs
nop
test
dec
mov
pusha
sti
dec
icebp
pushf
es
and
adc
adc
in
sbbl
fcoms
imul
xor
inc
cmp
icebp
addb
rcl
cmp
mov
in
nop
cmpsl
frstor
out
push
enter
adcl
cmp
xchg
xchg
xchg
adc
push
cmpsl
xor
out
insb
inc
rol
testb
add
cmp
out
pop
pop
push
ja
add
push
push
or
and
mov
enter
push
xchg
mov
pop
test
movsl
fiaddl
iret
jge
add
inc
mov
js
test
gs
std
jmp
scas
dec
rsqrtps
hlt
mov
jmp
aam
dec
pop
js
testb
push
xor
insl
dec
cmpb
jl
push
sub
in
lods
dec
push
push
mov
mov
lret
sbb
int3
mov
xchg
insb
ficomps
push
or
js
imul
scas
mov
mov
mov
aaa
jl
hlt
adc
imul
sbb
stos
add
add
hlt
sub
or
sbb
dec
push
xchg
add
mov
orl
arpl
cltd
lea
jmp
out
inc
aam
jo
mov
mov
or
ja
fstpt
or
fnsave
pop
adc
ja
lock
ss
dec
les
and
sbb
adc
cwtl
jb
sbb
mov
or
das
push
mov
insb
or
pop
scas
cmp
jl
xchg
xor
leave
mov
fldenv
jbe
inc
mov
pop
scas
mov
mov
clc
push
cmpsl
movsl
pop
mov
sub
gs
mov
call
push
ret
push
add
mov
dec
mov
mov
pop
enter
xchg
mov
lods
daa
mov
xchg
xchg
push
adc
test
test
adc
jg
fists
dec
jns
aad
stos
clc
bnd
sti
outsb
gs
jo
xchg
icebp
mov
pop
sbb
in
mov
pop
sbb
cmp
sahf
push
shrl
lcall
movsb
repnz
call
sbb
mov
push
or
sbb
js
std
sbb
movsb
pop
sub
jmp
stos
inc
insb
mov
out
jmp
fstl
cwtl
bound
fld
xchg
std
jae
mov
cwtl
push
mov
ds
jno
cmp
cmp
mov
ljmp
mov
cmp
xchg
fcompl
pusha
inc
mov
clc
pop
rolb
mov
cmc
xchg
inc
stc
fidivrl
loope
mov
flds
xor
sbb
cs
or
lods
js
das
inc
cld
mov
jne,pt
in
and
mov
push
sbb
stos
popa
in
pop
out
outsb
cwtl
jecxz
pop
out
or
xchg
xchg
dec
imul
jge
jb
add
adc
testl
adc
pop
shll
scas
out
jo
movsb
cmp
xchg
sub
movsb
pop
cld
mov
dec
cmp
and
aas
push
jge
jmp
cmp
cmp
cmpsl
loop
dec
dec
lret
xor
add
mov
add
stc
cltd
cmc
jno
cmpsl
cmp
cmpsl
push
adc
xor
mov
aaa
mov
in
push
pop
mov
inc
adc
jmp
in
adc
mov
hlt
nop
stos
out
in
je
filds
std
adc
pop
mov
lea
test
add
out
cmpl
aas
mov
out
insl
dec
out
aaa
fcoms
mov
ljmp
inc
fadds
icebp
cli
sbb
int3
xor
negb
leave
insl
jb
jmp
dec
ffree
or
sbb
es
mov
sub
out
mov
or
pop
stc
xor
iret
popa
ds
push
neg
repnz
add
dec
xchg
jne
call
mov
scas
xor
jmp
and
mov
enter
fnsave
inc
js
cld
inc
inc
imul
mov
push
jnp
ret
test
mov
jg
ret
outsb
push
ja
je
xchg
out
int3
xor
jle
and
or
aam
lods
fimull
cmpsl
test
div
out
out
jae
or
mov
lods
add
push
fistps
nop
cs
mov
inc
or
sub
ja
cltd
or
scas
lods
mov
or
mov
std
mov
pop
push
les
cmp
lea
mov
sarl
sub
out
pusha
andb
loop
scas
pop
push
pushf
test
imul
in
push
lock
mov
ds
movsl
mov
sbb
mov
fdivrl
mulb
or
dec
push
mov
das
push
loope
in
data16
orl
int3
daa
je
or
jp
lret
mov
xchg
and
jmp
sub
push
pop
rcl
out
mov
mov
lea
push
cs
push
cmp
test
int
std
push
xor
nop
jecxz
xchg
jbe
xchg
sbb
not
or
imul
sub
inc
movsl
int3
iret
and
jmp
jo
and
lds
adc
mov
add
inc
xor
fwait
inc
les
repnz
pop
aas
std
subb
push
cmp
and
and
out
jmp
push
pop
push
cmpb
push
inc
loop
mov
rcll
xorl
push
mov
add
add
pushf
std
mov
lahf
jmp
js
add
divb
aam
jbe
sbb
jg
mov
ret
shll
decb
sbb
sub
inc
sub
pop
test
jno
movl
sbb
and
clc
pushaw
fimuls
or
stos
out
jle
xchg
add
push
xchg
les
out
mov
lret
aaa
push
test
sub
adc
xchg
or
jno
push
and
xlat
ja
adc
cmc
ret
inc
mov
jns
aad
lods
or
push
lods
ja
and
ss
in
sbb
cmc
mull
mov
adc
sbb
sub
jae
sti
andb
cmp
mov
adc
outsl
data16
adc
push
adc
mov
lret
daa
iret
or
or
sarb
sbbb
sti
sub
or
outsb
rdmsr
mov
fldl
in
jmp
dec
push
xchg
movsl
fisttps
lret
fucomp
push
jecxz
ret
gs
cli
or
es
and
mov
push
mov
xlat
pop
sub
movsb
cmp
mov
push
mov
mov
or
mov
pop
sub
xlat
mov
inc
push
iret
sbb
sub
into
int3
mov
iret
out
jg
jo
in
lahf
inc
add
pushf
pop
test
test
out
xchg
lcall
jno
adc
dec
lret
add
xchg
pusha
lock
fsubrp
lahf
movsl
nop
fmulp
mov
sub
cltd
pop
and
adc
popf
push
mov
add
ret
test
adc
repnz
xor
pop
popf
outsl
pop
xor
cld
sbbl
stos
xor
stc
sbb
dec
jecxz
lea
push
mov
lods
adc
xor
and
loope
shlb
xchg
out
xchg
aad
mov
xchg
xor
in
out
mov
ss
fcomps
aas
arpl
jmp
push
sbb
and
stc
lret
dec
sahf
pop
and
data16
xchg
adc
out
pushf
sarl
mov
push
stc
xor
fnstcw
test
loope,pn
notrack
cmp
push
ret
or
dec
les
aad
ja
lcall
push
jbe
jo
enter
jne
sbb
movsl
xor
push
cmp
add
div
repnz
lcall
sub
stos
add
cmp
inc
xchg
dec
adc
cwtl
push
icebp
push
lret
sub
test
add
popa
insl
btr
mov
ret
jne
ja
sbb
sub
inc
inc
push
movsl
cmpsb
out
mov
daa
mov
xlat
adcl
loop
movsb
inc
dec
push
sub
bound
stos
js
fidivrl
push
call
inc
push
cmc
add
loope
mov
or
adc
leave
insb
outsl
push
mov
add
in
inc
sub
repz
fsub
outsl
fidivl
add
xor
sbb
popl
aam
aaa
daa
push
fcoml
inc
xchg
insl
ja
mov
or
filds
rcll
shrl
push
loope
adc
loop
and
clc
add
rcl
loope
sub
sub
mov
clc
jl
ss
dec
push
push
mov
pop
sahf
mov
xor
cmp
jge
out
or
mov
loope
rorl
jnp
jo
pushf
or
sub
mov
xor
xchg
aam
or
out
jb
pop
leave
shrd
xchg
inc
ja
push
outsb
out
mov
mov
cltd
loope
divl
adc
sbb
cwtl
dec
push
out
mov
jae
sbb
stos
jb
or
push
inc
das
je
inc
lret
mov
push
xorb
lahf
scas
mov
xor
sbb
inc
sub
sub
xchg
push
mov
stc
movsb
mov
dec
jns
fcmovnb
jne
mov
or
addr16
jg
in
mov
insb
repnz
mov
aaa
aas
pop
jnp
sub
les
loop
stos
and
repnz
lods
add
sub
aam
ds
and
popa
xchg
incl
add
mov
cli
sbb
sbb
sub
daa
movsl
and
or
jp
xchg
pop
jmp
pop
sub
das
pop
jg
xchg
out
jb
mov
mov
int
mov
popa
and
imul
or
ret
std
inc
inc
mov
push
pop
int
cli
sahf
sub
or
notl
insb
mov
repz
ffree
ss
push
je
clc
icebp
int3
dec
mov
pop
loop
lods
xchg
pop
sub
movsl
lahf
les
adc
pop
rol
jmp
add
leave
xorb
mov
push
push
pop
mov
icebp
rcrl
pop
add
inc
jmp
push
inc
popf
pusha
or
xchg
cmpsb
lret
addr16
and
fs
out
cmp
cld
or
push
out
add
mov
lock
adc
popf
sti
loopne
pop
sahf
jecxz
cmp
call
insl
ss
ljmp
mov
dec
and
iret
jge
divb
inc
xorb
test
iret
xchg
sbb
xor
push
dec
push
adc
icebp
lret
mov
push
or
inc
dec
mov
scas
addl
lods
inc
mov
fimuls
loope
pop
add
inc
sbb
out
cmpsl
in
inc
pop
sbb
ret
notl
jne
fstpt
aas
mov
mov
push
mov
shrd
shll
push
das
mov
mov
push
insl
ret
pop
inc
cmp
mov
movsl
mov
test
xlat
nop
inc
popa
daa
pop
push
mov
pop
gs
test
dec
imul
mov
push
sub
std
loope
jmp
push
sbb
inc
mov
sahf
iret
pop
cmpsl
daa
lret
dec
jae
pop
scas
std
inc
jle
push
ret
lds
and
and
jno
lods
arpl
jno
aad
mov
adc
arpl
sbb
and
jne
adc
xor
fcomps
leave
xchg
mov
sarl
mov
adc
icebp
inc
or
lods
push
mov
lea
dec
adc
inc
push
pop
xlat
mov
push
cmpsl
push
les
pop
mov
mov
mov
inc
lret
cld
push
out
jo
imul
int
push
ret
rcrb
and
sub
test
adc
mov
cmp
push
xor
fsubs
out
shll
iret
faddp
fistl
push
jns
cwtl
cmp
or
xchg
mov
jno
pop
pop
int
pop
fcoml
jnp
insl
cltd
mov
int3
xchg
mov
add
pop
fldt
pushf
fcomps
sbb
add
or
test
das
xchg
out
cmp
in
jnp
popf
xlat
cmpsl
jge
shr
xor
mov
push
sub
jb
imul
and
shr
sub
inc
inc
adc
test
cltd
cmp
fdivrs
popf
leave
lcall
mov
mov
inc
je
jmp
data16
loopne
push
sbb
push
mov
js
ja
pop
out
xchg
jmp
add
or
imul
movsb
test
daa
push
jne
ljmp
outsl
mov
xor
pop
adc
add
lea
aas
jae
cmp
rcrl
jmp
or
push
cmp
les
cmpsb
lds
sahf
loopne
loopne
lds
js
pop
push
push
xchg
out
jns
jmp
subl
cld
mov
sahf
jmp
cs
mov
cmc
out
imul
lcall
ret
icebp
xlat
fisubrs
js
enter
adc
ret
mov
test
mov
repnz
leave
pop
les
and
mov
mov
inc
lods
adc
mov
add
sub
jl
ficoml
outsl
push
jmp
mov
mov
lar
lcall
test
sub
das
or
mov
push
sbbl
ffreep
nop
pushf
jg
cmp
mov
sbb
mov
cmpsb
dec
aad
enter
xchg
insb
xchg
jge
dec
push
negl
mov
jne
cmp
sbb
adc
adc
add
fnstcw
pop
sbb
push
es
jbe
mov
pop
les
dec
lret
cmp
test
adc
jbe
push
cwtl
mov
inc
add
dec
cs
insb
and
and
popf
mov
pop
cmc
mov
sub
xchg
xor
sub
cmc
nop
jb
js
sti
jg
mov
dec
hlt
fdivrl
push
xor
push
ds
sub
push
fwait
pop
js
lea
cli
icebp
imul
lahf
fistl
sbb
fmull
pop
pop
cli
xor
mov
mov
insb
fisubrs
dec
fidivrl
gs
ud1
xchg
lcall
enter
arpl
clc
push
xor
pusha
enter
dec
and
xor
xorl
and
insb
nop
daa
and
add
pop
mov
aam
cmp
dec
sbb
js
fisttpl
and
xor
dec
mov
xor
std
mov
mov
gs
in
cmp
xchg
mov
rclb
jle
push
mov
mov
jge
ret
adc
movsb
xchg
mov
ljmp
sarb
or
aas
faddl
cwtl
adcb
test
add
inc
and
jle
jg
ret
imul
xabort
jl
loope
bound
jecxz
rorl
outsl
fildl
stos
lcall
lret
sti
inc
leave
mov
sti
std
jae
popa
add
sbb
pop
push
cs
sub
and
orl
lahf
insb
pop
xor
mov
push
jb
aas
and
repz
cmc
cmpsl
xlat
test
sbb
sbb
sub
fld
xchg
or
push
mov
and
jnp
mov
add
scas
push
arpl
sbb
or
imul
add
mov
jl
pusha
sahf
xchg
repnz
cmp
xor
data16
mov
xchg
cld
lds
xchg
mov
xor
push
dec
cmp
mov
mov
xor
testl
loope
inc
orb
cmp
pop
adc
jle
mov
inc
aad
aaa
shrb
roll
sbb
fdivrl
pop
xchg
aas
dec
jbe
xor
pop
and
fs
lret
mov
mov
pop
in
int
mov
lcall
cmp
xor
mov
mov
scas
je
mov
jo
imul
mov
jl
jge
add
push
sbb
lock
arpl
sub
shrl
nop
cmp
aad
repz
dec
rclb
add
xor
adc
ret
sar
cmc
jns
sub
aas
std
filds
cli
add
mov
jae
out
out
shrl
mov
xchg
addb
and
jae
inc
negb
ljmp
adc
sub
fcom
scas
fcoms
lods
inc
iret
rclb
xor
dec
xor
mov
int3
xor
gs
dec
ret
rcll
adc
addr16
mov
xchg
mov
pop
fwait
repz
push
int3
mov
in
mov
xor
inc
sti
data16
nop
jb
jp
mov
arpl
std
and
cld
sbb
inc
call
imul
xor
jmp
push
and
xor
shrb
rcrb
jl
dec
fdivr
addb
pop
lock
iret
ss
xor
sbb
pop
hlt
enter
sub
or
and
pop
js
data16
adc
cmc
cmpl
ret
pop
adc
jecxz
jle
push
ja
mov
dec
rcrl
ret
xchg
daa
xchg
jl
push
gs
cmc
inc
or
std
push
mov
cmp
clc
loop
aas
mov
rcrl
and
sbb
jns
je
shll
or
or
cmp
inc
adc
rcrb
pop
call
add
push
jp
pop
dec
sti
sbb
insl
int3
xchg
mov
out
adc
icebp
imull
push
repnz
jp
das
or
popa
dec
daa
cmp
ja
mov
pop
das
lcall
sub
mov
jecxz
and
add
and
int
cmpsb
push
les
fwait
clc
push
adc
lret
sbb
cmp
loope
sarb
scas
mov
out
pop
xchg
scas
imul
jb
xor
loope
mov
xchg
push
pop
shl
push
or
jns
fdivp
xchg
loopne
xlat
shr
inc
arpl
sub
data16
movsl
lea
lcall
insb
sbb
jecxz
add
dec
rcl
mov
sub
mov
nop
xchg
lahf
mov
xor
dec
xchg
mov
fsubs
mov
mov
idivb
popf
sti
fldcw
cmp
mov
sub
mov
fisubrs
mov
fiadds
mov
js
mov
lods
xchg
jmp
imul
fdivp
mov
cmc
adc
jp
fistpl
dec
push
pop
popf
gs
adc
pop
dec
add
dec
hlt
sti
loop
add
mov
jb
dec
and
pop
addl
int3
cs
inc
rorl
xchg
pop
leave
xor
cld
fs
xchg
inc
lahf
insb
dec
lret
adc
in
testb
mov
sub
pushf
adc
mov
xlat
xor
lahf
sbb
mov
jnp
xchg
int
fsubrs
repnz
in
int3
jno
sti
addr16
imul
imul
or
mov
pop
leave
pop
mov
cltd
call
insl
push
nop
lahf
push
orb
sub
xor
dec
cwtl
mov
cmpsl
jmp
push
lods
cwtl
pop
sub
shll
jbe
inc
add
dec
roll
xor
dec
mov
fiaddl
xchg
xchg
aas
pop
in
mov
cmp
scas
sbb
jno
xor
xchg
lods
adc
push
add
push
imul
mov
jbe
mov
fstl
gs
pushl
les
pop
adc
outsl
rorl
push
inc
xor
das
mov
cmpsb
movsb
call
imul
pop
or
jp
pop
and
or
mov
cltd
arpl
jecxz
cmp
roll
mov
repz
rcr
sub
icebp
mov
push
out
das
inc
fwait
outsb
sub
movsl
push
jmp
mov
scas
xchg
mov
mov
loope
movsl
mov
ret
fcmovnu
ja
mov
popf
aaa
into
into
mov
fdivrs
or
xlat
stc
jnp
mov
scas
sarl
add
mov
cmp
jge
ftst
out
test
mov
fs
fisttps
lods
adc
xchg
enter
lods
or
xor
jnp
cmpsl
sub
pop
xor
fmulp
mov
mov
lods
jae
insl
aad
into
adc
loope
jl
dec
push
adc
sub
jl
inc
xchg
or
cmp
sub
mov
jge
lock
xor
xchg
ja
into
daa
push
sti
pop
inc
sti
jns
jae
icebp
lret
pop
int
inc
pop
inc
xlat
leave
mov
push
push
and
adc
sbb
xor
aaa
jae
out
fcoml
inc
mov
lcall
and
jecxz
adc
push
or
and
into
mov
adc
and
and
mov
cli
xchg
lds
push
push
int3
out
push
stos
es
out
aam
push
jmp
notl
shll
cmp
mov
enter
push
dec
inc
sub
push
sub
gs
or
sbbl
aas
fnstcw
sarl
lods
in
mov
loopne
inc
push
in
addb
pushf
int3
outsl
jmp
int
or
cmp
add
mov
icebp
or
orb
dec
xor
js
push
mov
gs
mov
mov
xchg
sbb
xchg
push
sub
cs
push
mov
or
pop
or
les
mov
leave
notl
pop
pop
lahf
sbb
or
mov
adc
xor
push
lea
icebp
in
mov
sbb
or
xor
repnz
xor
in
and
das
insl
rol
cli
jnp
ds
sbb
xlat
jbe
aam
shrb
push
cmp
sub
out
jb
mov
sub
inc
mov
cmp
jns
jbe
in
jb
sub
shlb
xor
cmp
std
clc
xchg
push
dec
xor
mov
mov
jne
inc
popf
or
insb
jne
fcomps
push
ja
pop
call
push
and
cld
add
fldl
das
xchg
sub
insb
sub
mov
xchg
inc
and
rcrb
out
push
pop
lret
jo
gs
call
js
jns
dec
out
test
sbb
dec
xchg
rcrb
cmp
cmp
push
mov
mov
rol
xchg
out
scas
and
cli
inc
pop
pop
xchg
jp
push
push
cmp
mov
hlt
cmp
mov
sbbb
lods
add
movsl
dec
mov
jbe
mov
rorb
aaa
cmp
lock
pop
clc
xorb
jg
das
push
in
xor
repz
inc
pop
adc
test
jnp
cltd
dec
data16
scas
popf
sbb
out
test
sbb
orl
test
std
cld
imul
pop
lds
imul
xchg
xchg
adc
in
out
xchg
push
pusha
pop
frstor
mov
aam
popf
adc
pop
mov
in
dec
fcoms
adcl
mov
lret
call
loopne
pop
or
popf
and
dec
adc
daa
ss
xchg
aad
addr16
cmp
and
xchg
leave
push
in
sub
and
test
nop
je
jle
imul
inc
jp
ret
inc
lret
mov
fldcw
jl
inc
lret
mov
xor
push
pop
pop
jge
adc
js
mov
stos
in
and
call
into
inc
call
lcall
inc
movsb
data16
cmpsb
pop
cwtl
cmpsb
repz
out
push
ret
inc
outsb
cltd
cmp
in
xchg
pop
xor
mov
adc
test
sbb
imul
enter
cmc
xorl
gs
dec
inc
clc
cmp
call
ja
std
mov
push
and
push
pop
icebp
pop
sbb
das
dec
sbb
fisttpll
dec
fsubrl
sub
stos
xor
ds
or
sub
pop
bnd
out
dec
sub
pop
outsl
xor
dec
and
pop
xor
sarb
xchg
call
aaa
pop
push
test
inc
imul
mov
mov
mov
in
cmp
add
ja
orl
xlat
imul
push
test
in
popa
arpl
inc
jmp
push
adc
or
mov
idivl
out
lahf
imul
int3
xchg
mov
inc
sbb
gs
idivl
ret
fchs
adc
ret
sbb
and
imul
push
iret
and
inc
and
insb
jle
pusha
aad
cmp
cmp
pop
pop
aaa
fcmovnbe
or
cmp
pop
roll
adc
mov
sub
ss
jns
pop
ja
clc
mov
scas
scas
add
fnsave
fisubs
fsubrl
push
pop
inc
insl
movsl
movsl
outsl
push
sub
xor
or
test
call
shll
push
mov
popf
push
sbb
push
jmp
aad
in
ret
inc
and
pushf
mov
in
add
scas
fdivp
push
adc
push
push
out
test
jnp
imul
adc
push
aas
and
jg
jge
xchg
mov
je
aad
leave
cmpsb
push
loop
mov
adc
lods
stc
pop
lret
sar
out
mov
icebp
mov
add
int
aaa
xchg
xchg
xlat
add
sti
hlt
test
je
in
xchg
popa
lea
movsb
and
lea
adc
push
inc
dec
ret
push
repnz
jmp
mov
jge
mov
fwait
aam
push
rcll
pop
or
in
xchg
cmpsl
ret
mov
loope
lds
pop
pop
and
push
and
mov
stc
fwait
mov
scas
add
sarb
mov
cltd
into
inc
cmp
outsl
mov
mov
popf
clc
popf
pop
imull
add
sub
pushf
out
push
add
stc
out
hlt
dec
lock
lock
lods
fstpl
cmpsl
outsb
repz
dec
jp
inc
pop
or
add
xchg
jb
pop
add
push
or
ja
mov
in
jbe
mov
sbb
fisubl
xor
ret
or
cmpsb
add
js
mov
sub
iret
ficoml
cmp
push
sbb
cltd
adc
push
sub
hlt
in
cmp
mov
lahf
out
and
data16
test
mov
jp
bound
pop
dec
push
cmpl
mov
adc
jnp
inc
fildll
cmp
mov
sahf
pusha
jns
sti
push
fldl
mov
nop
pushf
subb
add
jge
jmp
mov
imull
pop
adcb
add
rorb
mov
fbld
sahf
and
stos
pop
dec
inc
push
cmovl
popa
mov
fwait
push
adc
xor
call
arpl
sub
sahf
and
add
add
mov
sbb
mov
mov
clc
in
test
mov
mov
fadds
pop
int3
and
movl
mull
mov
gs
mov
mov
push
push
push
xor
dec
paddusw
jmp
shrl
test
push
and
inc
inc
es
cmpsb
in
and
sbb
push
ret
dec
mov
jl
hlt
push
dec
enter
lcall
adc
sti
cwtl
xchg
adc
xor
gs
scas
jmp
popa
dec
pop
or
int3
js
mov
cmpsb
and
jp
jo
add
adc
pop
testb
jle
shr
jo
mov
mov
lods
test
arpl
push
jnp
add
dec
outsb
mov
cmp
push
ret
jbe
xlat
mov
mov
jmp
imul
lahf
pop
sbb
sub
sub
aam
ss
test
and
orb
nop
xchg
cmc
sub
mov
filds
cmp
jmp
fstps
popf
leave
mov
sub
fdivr
mov
pusha
fsin
jg
add
pop
stc
xor
push
test
lock
or
ljmp
mov
fnstsw
xchg
dec
push
out
jmp
jno
mov
lea
sbb
mov
dec
mov
push
clc
ljmp
fcoms
pop
mov
ja
cmc
mov
jle
je
lahf
fmull
jmp
gs
push
mov
mov
mov
xchg
test
gs
hlt
inc
movsl
icebp
sbbl
cmp
adc
jnp
xchg
cmp
pop
and
pop
loopne
dec
fdivrs
pop
xchg
movsl
jo
stos
or
cwtl
rcrb
or
decl
or
jmp
int
mov
fcompl
sub
icebp
out
aad
xchg
jmp
dec
test
push
or
cmc
push
cmp
adc
addr16
sti
aad
lcall
and
mov
mov
xchg
dec
pop
xchg
add
subb
push
pop
adc
rclb
iret
movsl
scas
mov
repnz
jae
arpl
jp
out
sbb
and
inc
adc
xor
or
jle
dec
and
push
xor
insl
or
sarb
cmp
mov
pop
add
add
stos
cmpsl
in
sub
aaa
cmc
mov
cli
dec
push
ucomiss
mov
pop
xchg
pop
ret
push
mov
hlt
mov
rclb
fisubrl
push
out
mov
cld
fs
lea
es
sbb
mov
adc
in
daa
pop
push
mov
pop
mov
mov
in
leave
scas
jecxz
repnz
or
pop
sbb
mov
icebp
mov
lock
hlt
inc
mov
stos
enter
sub
in
jg
lahf
ss
mov
lcall
dec
cmp
fucomi
cld
mov
cmp
add
jno
push
stos
daa
lret
sbb
mov
in
xchg
and
js
inc
pop
adcl
into
out
lret
jle
loope
pop
push
jg
mov
or
decb
outsl
ficoms
ds
push
mov
mov
das
ret
cmp
in
in
pop
pop
jae
mov
jmp
jmp
xchg
xor
sub
xor
xchg
mov
sar
cwtl
sub
jge
jp
int
cmp
test
xor
repnz
test
xchg
movsb
lds
and
xchg
je
mov
push
ds
es
or
retw
lock
jnp
aam
scas
mov
jbe
outsb
xor
dec
push
lods
lods
out
xor
aad
jge
aas
int3
jb
jp
iret
cmc
mov
aam
test
inc
cwtl
test
xor
subl
js
stos
mov
popa
adc
shll
ds
sti
mov
lret
adcl
test
stos
or
and
xchg
sti
xchg
std
sbb
push
mov
orl
shrb
int
sahf
cltd
sub
insl
insl
aas
add
imul
cltd
fsubs
in
outsb
out
jbe
jg,pn
jg
jge
ffree
jbe
movl
push
sbb
lcall
stos
icebp
lds
scas
xor
mov
sub
push
push
insb
test
movsb
out
enter
imul
mov
xchg
leave
xor
cli
push
loopne
push
mov
fistpll
adc
push
shll
shlb
jo
inc
and
mov
jg
lret
fldenv
sub
add
push
mov
cmp
mov
ljmp
insl
int3
inc
into
lahf
xchg
stc
roll
stos
sub
mov
inc
in
int
xor
cmc
pop
aas
imul
lea
pop
movsb
inc
add
loop
dec
out
movsb
les
gs
adc
imul
lods
jl
add
movsb
push
fsubp
or
sbbb
aad
jb
repnz
insl
iret
mov
cld
jne
frstor
push
out
mov
test
dec
rcl
inc
xchg
data16
fcoml
outsb
fs
addl
xchg
fdivr
lcall
cltd
jae
inc
movsl
xchg
sti
repz
imul
and
test
fdivs
mov
aam
insl
loope
bsf
shr
sbb
or
push
or
mov
push
adcb
mov
and
dec
out
shrl
pop
push
aad
mov
pop
and
ja
cmp
cmp
push
and
sbb
bnd
jo
push
cltd
loopne
call
sub
rolb
test
jle
and
mov
xor
cs
push
inc
push
sbb
stc
cmp
icebp
jnp
xor
pop
or
loopne
xor
dec
jl
lock
adc
cmc
cli
xor
and
out
fcomps
loope
sub
jl
clc
xor
frstor
aad
into
icebp
lahf
jnp
stos
push
push
push
pusha
xor
lret
push
gs
dec
pop
cmpsb
pop
popf
std
daa
and
xlat
sahf
dec
movsl
dec
test
dec
aam
cmpsb
pop
movsl
sub
cli
cmpsl
jae
test
out
aas
jbe
inc
ja
and
lret
dec
xor
xchg
and
pop
inc
fstl
pop
stos
fsubrs
stc
cmp
push
sahf
mov
lahf
adc
test
pop
lods
cmp
fwait
in
je
cmp
xchg
adc
add
push
call
pop
sub
orb
bound
test
dec
inc
test
in
or
loop
xlat
imull
mov
test
xor
ret
ljmp
or
iret
insb
outsb
sti
fsubs
rcrl
sub
add
and
sbb
jmp
pop
movsb
fcoml
imul
test
fwait
jno
addb
pop
rcrl
mov
mov
adc
add
push
xor
lahf
aad
loop
push
xchg
jns
scas
jge
or
imul
es
insb
push
push
shl
or
rcll
mov
xchg
push
cli
mov
sub
mov
icebp
pusha
aas
sbb
into
cmpsl
jg
mov
test
mov
outsl
movsb
cmp
cld
test
aam
addr16
fidivrs
cmp
dec
std
cmp
cld
inc
insb
mov
lock
enter
mov
sahf
shrl
insl
adc
lea
repnz
cli
xchg
arpl
hlt
jbe
xor
adc
cwtl
je
fs
jmp
mov
outsl
inc
lds
sarl
aas
sub
stc
or
imul
stos
mov
mov
stos
sbb
mov
aaa
scas
cmp
inc
add
mov
sub
pop
xor
rcrl
test
movsl
jo
into
or
cs
pop
jle
xor
lds
cmpsl
loop
in
call
sub
xchg
add
hlt
xor
push
popf
adc
mov
mov
call
add
mov
lret
cmpsl
add
nop
inc
pushf
loopne
mov
jmp
lods
add
fs
orl
lods
xor
imul
or
flds
arpl
add
mov
cli
pop
lahf
fnsave
imul
mov
or
xchg
loopne
pusha
or
mov
pop
neg
ds
xor
or
sub
jmp
or
icebp
or
hlt
and
sbb
fadd
nop
dec
outsl
dec
jp
xor
pop
scas
jno
stos
mov
and
mov
inc
imul
lods
jns
adc
lcall
shr
fisubrl
push
or
dec
in
add
lea
stos
mov
in
lods
cmc
dec
jb
xchg
test
cmc
xchg
cmp
mov
mov
xchg
loop
push
jnp
lret
push
fildll
jbe
subl
scas
sbb
or
int3
mov
mov
sbb
stc
into
pop
mov
insb
stos
or
lahf
seto
in
pop
out
and
cmpsl
push
loope
int
sbb
arpl
cmpsl
xchg
push
cmp
add
divl
mov
jmp
add
lcall
and
push
pushf
or
repnz
push
mov
mov
int
sub
out
dec
lods
aam
loop
adcb
cmp
call
fs
roll
mov
cmp
sbb
jmp
js
fbstp
sbb
fstpl
cmc
xchg
ficompl
inc
test
inc
cmpsl
xor
cmp
dec
mov
sbb
fwait
outsb
mov
mov
in
rorl
jne
dec
nop
push
inc
sub
mov
xchg
pusha
sahf
loop
into
in
jb
repz
add
repz
mov
dec
xchg
fcoms
sbb
aaa
and
fwait
xor
int
jecxz
enter
testl
out
fldcw
aad
inc
add
push
aas
inc
lahf
xor
jnp
dec
lret
popl
xchg
pop
sub
pop
or
inc
sbb
and
aam
sbb
je
imul
cwtl
ficomps
xchg
mov
jo
inc
fs
mov
lret
add
sub
dec
ss
mov
repz
inc
pop
dec
addl
xchg
imul
xchg
sub
mov
push
mov
int
in
mov
sarl
into
xorb
je
cli
xchg
insb
stc
dec
je
pop
or
aaa
dec
inc
and
call
call
js
data16
clc
adc
test
dec
dec
ret
out
adc
xchg
lods
lods
pop
aas
sbb
inc
sub
mov
mov
test
cmpsb
push
test
sbb
dec
pop
in
outsl
les
cmc
sub
cmpsl
fmulp
mov
inc
mov
stos
xor
aaa
pop
jae
jns
mov
aad
shr
std
xor
call
sub
xchg
sbb
jbe
inc
jae
xchg
in
out
pusha
dec
and
adc
push
sub
imul
loope
popf
fsub
cli
or
int
push
jge
jae
shr
pusha
sub
test
xchg
xchg
in
jns
int
xor
pop
mov
aaa
in
mov
mov
mov
push
and
mov
leave
fiaddl
mov
gs
aad
xor
dec
mov
scas
fmull
mov
outsl
movsb
xchg
dec
loopne
aad
cld
pop
fnstcw
fs
push
out
add
stos
outsb
inc
xor
xor
fcoms
pop
arpl
cmp
ss
jmp
push
shlb
mov
jns
sahf
fdivrl
sbb
mov
push
js
inc
pop
add
std
push
sub
mov
out
push
sbb
pop
cmp
in
jne
je
adc
fldt
fwait
cwtl
fisubrl
ljmp
push
cwtl
pop
mov
cmc
or
push
xchg
push
sub
shlb
and
lahf
sub
jbe
push
add
jae
in
pop
xchg
xor
add
inc
push
or
sbb
addb
jo
cltd
inc
or
jmp
loopne
xorb
lcall
inc
pusha
jne
lods
fstps
pushf
cmp
ss
in
fiaddl
icebp
inc
cmc
xchg
aaa
add
push
mov
aam
jle
adc
lret
pushf
xchg
out
std
dec
add
sbb
sbb
in
mov
scas
jno
jne
into
pop
dec
inc
inc
aad
je
sub
ds
icebp
loop
bswap
fwait
loope
lods
pop
scas
mov
lret
dec
inc
dec
mov
out
xchg
fnstcw
movsb
sbb
fnstenv
fcomip
scas
movsl
fidivl
adc
pop
pop
loopne
lcall
fcmovu
in
mov
fs
mov
ja
sub
adc
popa
jne
aas
pop
mov
mov
push
pop
aaa
mov
mov
fptan
fsubs
test
lock
mov
jge
xor
leave
les
lock
and
out
lret
stos
sbb
mov
xchg
xlat
adc
sub
xchg
cmp
orb
jecxz
inc
mov
or
sub
pop
mov
arpl
fnstcw
sub
aad
push
cmc
and
in
mov
add
test
cmpsl
lret
shll
jg
dec
and
inc
popa
inc
sbb
outsl
leave
movsb
push
ret
popf
jle
and
ja
pop
xsaves
mov
loope
xchg
loop
add
sub
lods
pop
shlb
test
in
scas
inc
insb
rcrb
adc
sub
inc
push
jns
ret
fcomp
test
pop
cmp
sbb
ret
add
lods
xor
sub
sti
out
clc
adcl
sahf
stos
mov
cmpsl
mov
jle
rorb
dec
mov
mov
mov
push
pop
add
cmp
hlt
xchg
icebp
inc
pop
adc
test
dec
jmp
inc
pop
sbb
lds
sbb
xor
xchg
mov
pop
in
scas
jbe
push
fs
or
in
call
mov
jecxz
mov
inc
into
pop
xchg
dec
lds
lret
pop
add
jb
push
sub
dec
sub
or
popa
out
jne
int3
shl
push
test
adc
popf
pop
lods
xor
lahf
stc
xchg
jne
fs
sub
js
stos
pmullw
pop
mov
xchg
dec
or
movsl
add
mov
inc
jl
mov
lods
pop
pop
jmp
aam
mov
sub
jmp
dec
out
dec
jns
xor
xor
out
push
xor
lods
rolb
xchg
insb
lret
aas
add
insl
loopne
loopne
push
pop
pop
mov
mov
jno
cmp
rcll
sarb
push
leave
dec
push
rorl
fistps
sbbl
in
inc
adc
add
mov
inc
sti
das
jl
hlt
clc
arpl
scas
lock
outsb
xchg
push
es
lods
inc
dec
and
out
sti
and
nop
add
out
data16
stos
lret
ret
std
aam
fcoml
mov
dec
jns
xor
stos
daa
mov
xchg
jne
imul
mov
mov
out
fmull
pop
daa
bound
jne
cmpsb
xlat
aad
test
in
shll
lret
pop
cmp
bound
pop
xchg
mov
jmp
pusha
sub
mov
dec
xor
jns
popf
jb
pop
pop
test
add
test
push
mov
scas
js
xor
popa
jno
and
inc
shll
lds
pop
inc
lds
pop
pop
cmp
test
or
xor
and
scas
iret
cmpsl
mov
out
stc
sahf
fistpl
aam
gs
mov
cwtl
and
icebp
ja
jle
daa
mov
pop
sub
loop
jmp
push
sbb
and
loope
inc
mov
cmp
fwait
jmp
aad
imul
pop
cmpsb
and
sub
cmovne
jno
xor
insb
and
dec
lret
inc
lods
daa
xlat
lea
inc
mov
repz
mov
dec
and
imul
cwtl
push
hlt
mov
fidivrs
pusha
mov
inc
pop
cmp
mov
lea
pusha
dec
and
ret
lahf
dec
push
outsb
xchg
dec
fucomip
and
and
pushf
cmp
into
lret
sub
es
lods
sti
mov
or
jno
movsl
mov
or
imul
pusha
jge
xchg
ss
daa
inc
insl
ss
push
xchg
and
inc
cmpsb
clc
int3
fcmovbe
test
sub
xchg
pusha
addr16
xor
mov
xchg
dec
add
rcrb
aas
push
sti
mov
es
sub
in
and
test
sbb
daa
fs
lret
fcomp
ss
out
and
sbb
sub
sti
cmp
mov
lahf
adc
cmp
loopne
aad
dec
into
outsl
mov
xor
pop
dec
sti
xchg
xchg
pop
cvtps2pi
aas
test
push
repz
xor
mov
adc
mov
xchg
out
push
mov
mov
aad
dec
jl
and
or
mov
cmp
jae
and
dec
xchg
mov
mov
aas
dec
mov
icebp
jmp
xchg
xlat
dec
test
mov
push
fwait
dec
ret
icebp
leave
mov
fdivrp
xchg
lds
push
not
add
addb
xchg
in
daa
out
sbb
movsl
data16
pop
push
cmpsb
stos
mov
aad
mov
pop
add
inc
aad
add
hlt
push
enter
mov
fcos
mov
mov
dec
sub
pop
adc
int3
mov
lea
pop
push
lock
or
fiaddl
es
pop
scas
cmp
lret
jg
das
stos
iret
pushf
loop
jno
jecxz
int3
mov
jg
cld
xor
push
or
sahf
imulb
xor
push
repnz
outsl
dec
add
js
ffreep
leave
hlt
xchg
leave
mov
mov
fmuls
jb
enter
mov
in
add
push
inc
mov
adc
adc
jb
push
popf
idiv
sub
and
mov
cmpb
push
push
lods
fidivrl
add
je
jge
out
dec
cld
dec
daa
xchg
pop
loope
clc
inc
cmp
fwait
shlb
outsl
mov
cmc
mov
mov
xchg
adc
add
dec
push
sub
fldl
fnsave
test
sub
mov
movsb
pop
scas
lea
push
and
adc
sub
jns
clc
sbb
lock
cmp
movsl
shll
shl
xchg
mov
mov
ds
in
stos
movsl
push
fnstenv
shl
fdivr
out
mov
loopne
sbb
cmp
fildll
stos
inc
and
adc
repz
inc
cltd
adc
cmp
cmp
dec
std
hlt
fnop
sbb
or
add
stos
fsqrt
inc
iret
cmp
xchg
and
fnstcw
roll
fldcw
pop
xor
or
mov
xor
loopne
stos
and
inc
and
xor
cmp
sbb
xchg
xchg
jno
mov
outsb
sub
cmp
jno
adc
imul
inc
sub
dec
xchg
lahf
and
cli
xorl
movsb
jmp
add
pusha
push
clc
lret
loopne
lret
decb
mov
imul
rcrl
nop
test
cmp
dec
fs
push
mov
imul
lods
mov
sarb
jge
mull
cmp
bswap
enter
fwait
into
popf
cli
ret
push
das
andl
xor
dec
bound
sahf
dec
or
xchg
lods
int3
fcomi
cmp
cmc
adcb
pusha
int
inc
out
push
xor
outsl
jnp
hlt
pop
lods
ja
rolb
lods
or
aaa
ror
fdivl
mov
nop
jge
mov
dec
testl
dec
fs
pop
push
in
sbb
clc
out
aaa
mov
jge
inc
jnp
xchg
xchg
into
dec
lea
loop
aaa
push
xchg
arpl
push
mov
push
inc
push
sarb
or
inc
mov
and
sub
xor
mov
xor
jbe
pop
daa
divl
xor
call
adc
jne
loopne
mov
mov
fstpt
imul
xor
or
in
lea
cmc
sub
pop
pop
addl
mov
dec
mov
or
sar
sbb
aam
jo
movsl
or
loope
inc
mov
shlb
insb
adc
outsb
loopne
into
or
cli
mov
lret
sub
mov
lcall
in
and
pop
outsb
shl
addr16
insl
xchg
out
mov
adc
adc
repnz
into
add
popf
jb
xchg
mov
xor
iret
add
cmpsl
repnz
mov
push
imul
mov
bound
lea
mov
mov
cmp
jle
xchg
fs
jl
in
pop
inc
mov
sahf
ds
push
loop
stos
loope
leave
add
cmp
lea
das
pop
cmp
push
sub
lds
sbb
add
mov
jns
fstl
aam
mov
test
out
cmpsb
add
into
xor
pusha
mov
out
pushf
push
ja
cmpsl
cltd
or
or
dec
cmc
push
cmp
mov
pusha
pop
adc
sbb
pusha
lret
inc
dec
fisubrl
dec
test
mov
cmp
jp
jg
pop
in
push
mov
xchg
push
rcrb
mov
adc
test
mov
or
xor
clc
inc
outsl
lea
popf
fwait
inc
outsl
pop
adc
add
cmpsl
sbb
cmpsl
adc
dec
lods
sahf
popa
int3
push
mov
repz
add
in
adc
faddl
sub
adcb
xchg
popf
mov
jns
and
mov
add
inc
pop
cs
jno
fidivrl
and
add
jmp
imul
jmp
dec
ss
xchg
inc
xlat
jge
dec
into
hlt
push
dec
ret
daa
loope
aad
xor
andl
cmp
mov
aaa
xor
or
pop
and
mov
inc
in
jmp
cwtl
jne
in
cmc
ret
cwtl
nop
imul
mov
mov
adc
call
insl
xchg
int3
cmp
in
dec
jns
out
push
lea
mov
push
or
aam
seto
and
mov
mov
sahf
scas
xlat
push
push
hlt
ror
enter
movsb
lods
sbb
xchg
out
adc
bound
add
outsb
std
mov
xchg
ja
outsl
fdivl
out
push
loope
leave
pop
rclb
or
stos
imul
pcmpgtd
xor
fwait
lea
ljmp
cmpsl
push
adcl
dec
lods
cmp
dec
sub
lods
xor
incb
shrb
mov
mov
lock
add
lret
lret
mov
and
or
in
jns
cltd
enter
fucomp
mov
inc
cwtl
in
std
xor
mov
mov
push
aam
mov
and
inc
xor
icebp
push
sub
filds
pop
pop
mov
jnp
dec
popf
mov
jae
ds
jns
pop
lock
daa
cwtl
orl
shll
mov
add
adcl
xchg
cmp
aaa
adc
jbe
xchg
mov
mov
inc
mov
xchg
dec
aam
test
sbb
jo
ds
jne
sub
test
mov
inc
outsl
das
bound
aas
sbb
into
mov
adc
adc
lret
nop
pop
cmp
fisttpll
fidivrl
int
and
movsb
mov
hlt
arpl
test
sub
mov
or
lea
xor
pop
xchg
lock
fldcw
inc
fsubrl
cmp
dec
out
lock
jecxz
aas
inc
adc
xchg
popf
pop
movsb
leave
add
inc
movswl
movsl
add
and
sub
std
and
xor
dec
test
shrb
inc
insl
push
sbb
inc
jae
push
dec
movsb
movsl
cmp
pop
pop
jge
ja
outsb
mov
push
mov
xchg
sbbl
dec
cmpsl
push
add
jbe
jle
jbe
sbb
icebp
add
fwait
enter
aam
adc
sub
inc
cmp
popa
and
cmp
shrl
lahf
dec
mov
and
fwait
sub
push
lahf
imul
add
cmp
call
scas
or
cmp
es
test
jl
sub
jb
xchg
or
sbb
jg
jb
push
cld
sbbl
sbb
shlb
int3
push
push
test
jb
mov
out
fdiv
lock
xchg
repz
sbbl
sub
jb
sbb
mov
xchg
fwait
xchg
loope
scas
xchg
into
add
lea
mov
cmp
xchg
in
xor
outsb
dec
cmp
inc
lock
add
test
stc
fs
and
inc
inc
pmuludq
mov
std
mov
cmp
lods
rcr
add
mov
adc
sbb
xor
dec
sbb
xchg
clc
ret
jp
push
xlat
add
add
cld
testl
popa
add
fwait
aad
clc
daa
sub
sti
adc
cmpsl
ja
outsb
jl
pop
aam
inc
int3
or
inc
daa
mov
lret
fnsave
adc
orl
push
jne
lds
insl
xchg
mov
lock
mov
cmpsl
push
xlat
fildll
lea
adc
movsl
ret
loopne
pop
xlat
rcrb
jnp
jecxz
jbe
icebp
test
hlt
int3
sbb
sahf
xchg
xor
mov
cmc
imul
xchg
popa
jmp
cmp
hlt
or
leave
test
add
jo
nop
fldenv
test
xor
popl
sbb
jne
or
out
loope
pop
pop
sub
negl
movsl
jae
inc
lahf
sub
cmpsl
adc
add
inc
xchg
fcomps
or
imul
fnstcw
sarb
xchg
pop
popa
out
xchg
add
jge
push
ror
leave
and
pop
cmp
insb
call
aad
jae
and
sti
sub
and
add
xor
rep
jg
outsb
sbb
xor
push
jg
loope
cmp
scas
dec
popa
cmpsl
rcrb
mov
inc
xlat
sbb
popl
movsl
pop
stos
mov
sarb
add
inc
test
pop
lds
sub
icebp
aad
and
pushf
shrl
xchg
insb
ds
jbe
out
lods
sbb
pop
cld
mov
jl
jp
jne
pusha
mov
sub
mov
cmp
inc
in
adc
jb
ljmp
shll
sbb
andb
mov
xchg
push
daa
adc
add
and
mov
js
in
scas
mov
push
jecxz
jo
negl
repnz
push
adc
fsub
fcomp
xor
in
test
dec
ja
movb
add
data16
fwait
lcall
fldcw
push
data16
xor
stc
jae
adc
pushf
mov
lahf
mov
jo
inc
ds
push
sbb
es
lock
or
lahf
arpl
fildll
sub
scas
mov
add
mov
lea
shrl
dec
sub
popa
icebp
sub
cltd
out
mov
jg
in
cmpsl
int
push
pop
pushf
jp
js
outsl
mov
xor
lods
add
add
mov
loope,pt
push
pop
pop
out
shlb
jge
out
or
pop
dec
sbb
push
out
push
mov
sbb
out
jno
push
xor
cmp
iret
clc
fsubrl
cmp
cld
stos
mov
cmc
bnd
or
mov
mov
mov
insl
push
xchg
xchg
or
jno
jl
xor
jno
icebp
in
jne
psrld
lahf
ret
fidivl
cld
pop
test
push
adc
jnp
xlat
sub
mov
mov
repz
mov
aaa
dec
outsb
shlb
mov
cltd
mov
mov
xchg
incb
in
mov
mov
iret
xor
outsb
in
mov
sub
or
fidivrl
mov
sub
xor
or
pop
xchg
sub
xor
iret
daa
fcomps
push
shll
or
popa
out
adcl
std
lods
cwtl
scas
mov
gs
dec
pop
inc
test
cmc
dec
pop
mov
or
cmpl
orb
out
out
add
iret
mov
and
mov
push
push
push
dec
dec
pop
lret
or
cpuid
inc
lods
sbb
fs
xlat
mov
cs
xor
dec
insb
or
inc
insb
lcall
xchg
cld
mov
das
setl
mov
mov
add
sbb
in
stos
jle,pn
shll
roll
shrl
lods
xchg
int3
cli
call
shl
andl
pop
das
dec
mov
nop
mov
call
orps
xchg
dec
neg
lahf
fildl
xchg
ja
inc
sbb
movsb
and
enter
mov
shll
loope
cwtl
fisubrl
jno
pop
or
rcll
xor
fmul
repnz
dec
orb
push
or
out
adc
std
out
sub
mov
push
xchg
rcrl
pop
jo
scas
sahf
add
xchg
pusha
adc
and
lock
xchg
daa
andl
mov
add
pop
push
and
subb
bound
fimuls
or
jp
mov
testb
xchg
int3
jb
push
dec
mov
popf
fnstsw
data16
lahf
addl
xchg
enter
movsb
mov
inc
pop
xchg
pop
enter
mov
es
in
sbb
dec
pushf
mov
cli
ret
mov
cmp
xlat
sarl
sahf
iret
das
xchg
pusha
xchg
inc
add
cltd
mov
xchg
loope
fistps
mov
sub
xchg
fwait
cld
nop
ja
out
push
test
in
jbe
add
cmpsl
in
faddp
icebp
cmp
ja
add
mov
dec
loopne
jo
or
insb
pop
push
cmp
test
ret
cld
mov
push
out
mov
cmp
std
fimuls
jne
ficomps
mov
jecxz
jecxz
dec
or
xchg
inc
inc
xor
push
add
dec
and
aas
test
pop
jb
jne
xchg
in
scas
mov
in
call
add
cmp
cmp
lahf
mov
in
gs
push
push
push
rol
xchg
inc
lahf
sbb
je
or
xor
loope
dec
dec
data16
popa
jb
xchg
hlt
into
repz
stc
or
push
shl
xchg
pop
mov
jae
xor
or
sbb
cmp
movsb
mov
push
push
push
fsubl
mov
call
ja
cmp
push
dec
push
aam
test
cmp
add
mov
fs
movsl
insl
sbb
or
mov
stc
rcrl
stos
mov
leave
adc
addr16
sbb
push
int
stc
sbb
or
insb
cmc
data16
pusha
inc
xor
mov
sbbl
jecxz
mov
loop
mov
insb
mov
and
enter
cmc
or
jno
pop
pop
das
xchg
mov
das
push
sbb
xor
cmc
mov
dec
mov
mov
and
cltd
xchg
ja
jbe
sub
cmp
repnz
or
gs
repz
adc
mov
imul
mov
out
negb
push
xor
lcall
xor
push
repz
push
sub
xchg
lds
pop
xchg
outsb
pushf
sub
fldenv
push
sbb
mov
fdecstp
push
dec
jmp
jg
dec
cmp
inc
inc
jb
fcmovne
in
mov
stc
adc
inc
mov
mov
repz
add
push
sub
sub
inc
xchg
xchg
mov
pop
sar
scas
mov
mov
andb
cli
mov
sub
adc
imul
cltd
shlb
mov
mov
xor
inc
stos
inc
xchg
jae
cmc
push
push
stc
jl
iret
pushf
ja
inc
insb
in
daa
mov
sbbb
xor
stos
dec
jns
push
jb
xor
cwtl
fsub
sbb
jmp
sub
rcll
popf
xorb
sub
sbb
or
into
filds
mov
mov
jg
pop
cmp
dec
roll
insb
shll
xchg
adc
mov
enter
sbb
push
cld
push
sbb
xlat
mov
mov
jmp
adc
jecxz
mov
mov
xor
fisubrs
push
scas
cmp
push
mov
or
aaa
lods
dec
lret
or
into
mov
sbb
cmp
push
xchg
mov
lret
mov
xacquire
in
xchg
xchg
mov
int3
popa
cmp
pop
addb
xchg
iret
addr16
xlat
or
push
lcall
call
add
in
xchg
mov
mov
jge
mov
aas
out
pop
jmp
jbe
push
or
jp
int
push
and
outsl
dec
mov
or
dec
jnp
fdivrs
cwtl
xchg
cli
rclb
ret
addr16
jl
sbb
lret
xchg
xchg
sbb
cli
push
sub
ss
pusha
in
inc
lret
les
jecxz
lock
test
popa
and
ret
cmp
shlb
sti
fldcw
das
ss
adc
jns
push
fisubs
push
arpl
fcomip
mov
in
sbb
mov
mov
icebp
xlat
add
push
fdivs
enter
lea
jecxz
jp
out
lahf
test
icebp
stos
fdivrl
sahf
maxps
call
inc
scas
pop
push
pop
lret
xchg
pushf
cwtl
les
into
mov
mov
dec
lds
push
xchg
pop
adc
ret
or
jmp
inc
inc
sbb
xor
negb
inc
push
es
ret
lcall
ljmp
pop
xchg
xchg
adc
inc
fildl
leave
sbb
das
push
inc
sti
dec
lret
pushf
dec
psrlq
out
mov
lcall
cltd
mov
subl
pop
or
sbb
test
loop
jmp
push
inc
xchg
push
mov
dec
sti
into
leave
jo
outsl
std
negl
dec
sti
mov
sahf
aam
arpl
in
dec
dec
mov
iret
sub
aam
push
test
pop
stos
mov
cli
out
ljmp
rolb
stos
adc
inc
daa
pushf
add
pop
test
jg
mov
push
fildll
iret
leave
jmp
jg
jo
push
and
adc
test
int
lods
frstor
push
jb
fnstenv
xchg
cmp
and
push
pop
pusha
pop
std
testl
aad
mov
mov
mov
ror
les
nop
xchg
das
cwtl
clc
push
push
jno
mov
mov
dec
inc
loope
mov
inc
test
adc
pop
out
out
mov
into
jge
js
insb
mov
xchg
push
rorb
pop
or
out
movsb
add
dec
int3
push
cmp
lock
sub
xchg
pop
adc
fists
cmpsl
cmpsl
add
mov
ret
inc
cmp
sbb
or
lods
lahf
or
or
icebp
push
in
leave
lds
lret
neg
push
pop
ffree
fidivl
jnp
in
loopne
mov
cmp
out
pop
or
pop
or
aam
test
test
clc
sub
cmp
hlt
icebp
insb
cmp
arpl
mov
pop
add
ljmp
jge
ljmp
pushf
xor
mov
movsb
lahf
mov
mov
mov
ror
mov
lods
gs
jns
orl
inc
icebp
ror
push
cmp
addr16
iret
pop
push
sub
repnz
cmp
sti
mov
xchg
rol
gs
pop
js
xchg
mov
jp
mov
dec
lret
stc
add
sbb
ss
adc
adc
stc
call
jl
mov
jo
sarb
aas
outsb
dec
aad
xorb
scas
lods
cs
imull
fisttpl
inc
lea
enter
jns
inc
pop
cmpsb
pop
dec
adc
mov
pop
scas
inc
mov
xchg
sbb
dec
icebp
fsubrl
pop
loopne
and
lds
add
push
out
aas
call
or
cld
std
shll
inc
daa
xchg
mov
out
mov
xorb
lds
fldl
xor
xor
push
mov
mov
cmovno
xor
fcomi
sub
std
push
dec
mov
roll
mov
cmp
dec
mov
cmp
cmpl
imul
loopne
sahf
cmpsl
or
jle
inc
lds
jl
cmpsb
adc
notb
dec
daa
std
and
or
jp
sti
push
es
insb
std
shll
push
pop
cmp
jns
clc
or
fstpl
in
mov
mov
cmp
and
adc
mov
xor
add
xchg
into
shlb
pop
mov
push
test
ret
dec
out
insl
jl
pop
dec
jb
cmpsl
pop
push
and
sarl
int
aas
test
xchg
ljmp
mov
xor
jp
arpl
inc
xchg
aam
dec
sti
aam
stos
ret
std
pop
lret
dec
push
adc
and
sub
dec
cld
es
int
xchg
fdivl
mov
movsb
popa
fdivrl
mov
mov
fstpt
cmpsb
and
pop
mov
and
outsb
ss
pop
pop
insl
mov
push
fwait
daa
int
aas
pop
lock
xchg
push
push
in
and
mov
test
xchg
pusha
cmp
pop
dec
inc
and
dec
or
lret
pop
xor
pop
ret
rclb
cltd
cmp
sbb
cmc
je
jae
lret
fisubrl
cs
dec
aas
xor
cmc
xchg
stos
aaa
js
lret
mov
xor
or
popa
or
lahf
dec
push
pop
adc
or
frstor
mov
ss
movsl
mov
stc
add
out
mov
jp
xchg
xor
aam
push
shl
sbb
mov
out
fisttps
mov
sub
outsl
lret
adc
inc
xchg
ja
stc
and
pop
outsl
adc
jmp
mov
fsub
cmp
pushl
cmp
pop
pop
sti
arpl
outsl
jne
lcall
sub
sbb
aad
clc
loope
mov
xchg
ret
cld
test
add
mov
mov
lock
mov
add
in
movsl
pop
jp
lods
sbb
adc
push
dec
mov
dec
or
jmp
inc
or
test
pop
outsl
cmp
xor
sahf
cmp
sub
mov
mov
add
je
out
imul
ss
imul
cmpl
mov
imul
gs
lods
icebp
dec
cmp
in
add
in
push
sub
int3
sub
push
sbb
jne
jmp
fistl
lock
shrb
ja
mov
das
cmc
pushf
stos
test
mov
fdivrl
add
enter
outsb
mov
mov
pop
xchg
pop
insb
xchg
jge
mov
iret
sti
lret
aaa
sbb
into
xlat
mov
ss
testl
push
mov
lds
cmpsb
xor
or
cmp
orl
mov
push
daa
and
popa
int3
outsb
test
xchg
jp
clc
cltd
mov
or
mov
aad
loope
shll
fs
jb
push
mov
leave
jmp
sbb
push
xlat
and
adc
or
sbb
add
xchg
jmp
push
and
push
dec
shrb
adc
daa
push
into
mov
xchg
push
sub
fld
cmp
cmpsb
fstl
mov
sbb
or
fldcw
mov
lahf
dec
mov
mov
pop
sub
movsb
cmpsb
xchg
repnz
cli
adc
pop
mov
push
pop
fnstsw
mov
or
dec
sbb
ret
xchg
or
int
insb
and
popa
fsubr
in
mov
push
dec
test
frstor
lock
lret
inc
idivl
ret
sbb
push
mov
data16
je
es
jg
and
mov
fnsave
jbe
adc
jns
out
lods
pushf
cwtl
jmp
lret
jb
and
sbb
and
rcrb
add
and
and
jecxz
add
inc
call
fwait
mov
jne
imul
outsl
rcrb
push
test
jnp
xchg
jb
fidivrl
pushl
pushf
mov
aas
cmpsb
fldenv
jmp
fwait
test
add
repz
in
loope
sti
adc
popf
aas
dec
mov
lcall
dec
jno
or
pop
lock
in
in
insl
xor
test
js
mov
fcompl
mov
mov
dec
inc
fildl
jae
jecxz
pop
sbb
push
sbb
sub
lret
jecxz
and
std
arpl
inc
push
mov
inc
test
mov
sbb
inc
cmpb
or
lret
sti
dec
shrb
pushf
les
xchg
dec
ret
sbb
out
cmpsb
inc
test
movsl
xchg
xchg
cwtl
pop
les
and
push
pop
dec
jbe
ret
xor
dec
sbb
into
mov
cmp
adc
pop
aas
pop
popa
add
dec
loope
cltd
arpl
and
shrl
cmp
lock
clc
inc
cmc
pusha
jae
aas
jle
and
or
dec
xchg
fdivs
mov
xchg
xorb
fmull
and
and
aas
cmp
xor
loop
jp
into
shlb
mov
and
nop
cwtl
sbbb
push
fildll
and
in
sti
orps
adc
cmpsl
pop
hlt
out
pop
and
mov
jnp
xor
mov
fisubrl
in
movsb
add
ja
cmp
aas
test
fistpll
jno
sbb
adcb
and
mov
jmp
fwait
sbb
dec
das
lahf
mov
out
jg
jmp
fwait
loopne
or
pop
insb
stos
and
in
mov
mov
push
jl
ret
and
enter
mov
adc
inc
inc
addr16
jb
xor
xchg
jno
scas
sbb
sub
clc
add
mov
lods
mov
repz
jbe
cld
in
decb
out
sub
insb
or
repz
cmp
sub
in
test
push
add
lods
xchg
adc
insl
dec
pop
rcrl
add
xchg
jae
xchg
adc
out
call
leave
cmpl
cld
mov
nop
clc
push
pop
dec
push
insl
mov
pop
pop
cmpsl
jb
aam
scas
in
movsb
push
popf
jmp
movsb
and
rcrb
lret
sahf
scas
mov
lcall
dec
repz
leave
and
dec
lret
sbb
add
jo
jle
ja
sbb
push
mov
mov
xor
inc
sub
xchg
call
push
xchg
xor
jecxz
mov
sbbl
aas
add
adc
jl
enter
xor
xchg
movsb
mov
leave
inc
cs
ljmp
outsb
mov
xor
mov
in
jnp
rorl
popf
popf
lds
push
sub
jmp
mov
ror
pop
sbbl
cmp
mov
jnp
je
mov
dec
jmp
sub
pop
fnsave
es
add
mov
rcrl
hlt
movsb
sub
and
scas
sbb
int
adc
mov
andl
or
movsl
mov
fiaddl
fs
cli
pop
mov
fld
int3
inc
xor
shl
out
and
mov
xchg
push
les
push
xchg
dec
rcr
dec
fdivrp
pop
xchg
test
fdivrl
add
adc
mov
lahf
adc
rcrb
adc
sub
bound
cmpsb
add
or
adc
dec
cmpsl
outsl
aas
testl
aad
mov
add
xchg
filds
imul
inc
leave
loop
xchg
lea
mov
pop
jb
sahf
clc
sti
pop
inc
push
pop
out
into
outsb
fcomps
pop
mov
lods
or
sub
inc
push
pusha
enter
ja
nop
mov
mov
jnp,pn
test
loope
sub
out
test
xchg
mov
push
xor
sbb
dec
mov
stc
push
aaa
lods
mov
loope
div
add
xchg
rcrb
push
inc
out
out
mov
aas
adc
mov
mov
in
cmpsb
add
push
sbb
data16
xorl
sub
push
adcl
addr16
xchg
loopne
mov
mov
xchg
xchg
jge
pop
dec
in
popa
aad
es
xor
lods
subl
push
and
outsb
pop
push
sub
ret
jo
dec
stos
aad
std
xchg
rclb
pop
loopne
add
cld
cmpsl
int
fists
out
mov
fs
in
pop
divl
daa
sbb
mov
sti
jmp
or
sahf
mov
jmp
adc
fiaddl
inc
pop
mov
jge
cmpsb
jecxz
ret
lret
fimuls
aas
mov
cmpsb
pop
mov
inc
sbb
pop
out
lds
sarl
jmp
sub
mov
jb
cmp
add
mov
and
fwait
jp
scas
loop
out
test
jmp
popf
fdivr
movsb
mov
jmp
js
pop
sbb
xor
sub
aaa
fidivs
mov
popa
test
pop
add
movsl
insb
ja
shl
push
pop
or
cmp
mov
sub
xlat
sbb
es
sbbl
pushf
inc
lock
in
rcrl
xor
cmpsl
call
into
mov
or
popa
imul
adc
mov
cmp
sbb
xchg
jmp
jns
sub
fsub
enter
nop
int3
clc
icebp
std
dec
cmpsl
jae
adc
or
insl
pushf
mov
fdivrs
js
int3
sbb
add
xchg
xor
mov
call
sahf
int
test
and
sbb
mov
inc
cmp
bound
pusha
lcall
imul
jecxz,pn
ljmp
adc
jae
in
sbb
repz
dec
jmp
add
cwtl
push
pop
mov
leave
cmp
xchg
inc
daa
sbbl
pop
and
jge
jg
in
das
int3
mov
fisttpll
test
jp
mov
lds
lea
and
and
stos
inc
inc
push
stos
fs
and
stc
or
jecxz
push
cs
lods
int
sub
shlb
mov
jae
lods
popa
ret
imul
cs
adc
inc
insl
cmp
mov
int3
popa
js
cs
lret
pop
movsl
ret
call
pusha
mov
inc
inc
mov
lret
xor
and
clc
push
mov
sbb
movsl
mov
fnstcw
repnz
push
aas
rcll
lods
fdivrs
int3
in
xor
cmp
and
push
mov
sbb
inc
adc
fadd
das
lds
fists
cmpb
push
jns
mov
fistps
cmp
stos
add
pop
lcall
rcrb
jp
sub
lods
adc
push
lcall
lcall
js
rorl
add
insb
xchg
pop
pop
out
roll
scas
in
inc
stos
mov
mov
push
repz
in
mov
out
xchg
in
fnsave
das
pop
notl
push
std
imul
jecxz
add
cli
pop
fs
sbb
das
test
les
ret
aad
cld
mov
shrb
cmc
add
add
leave
dec
xor
iret
add
push
loopne
aam
push
rcrb
dec
add
insl
outsl
push
sti
sub
mov
sbb
cmp
and
pop
jle
push
fwait
and
dec
sbb
xchg
cmpb
mov
cmp
shl
int3
mov
push
mov
std
xchg
xlat
ret
ret
adc
test
or
cmpsl
in
bound
dec
xor
stos
sub
inc
lret
out
mov
ja
jno
daa
test
mov
jmp
push
repnz
imul
into
and
pop
mov
xor
movsb
push
cs
sub
mov
jae
sbbl
popf
test
push
lock
dec
cmp
and
fdivl
inc
inc
fldl
mov
out
inc
mov
add
dec
jecxz
dec
lahf
and
in
add
and
data16
pop
and
cwtl
dec
jle
xchg
adc
add
std
not
inc
cmp
mov
in
inc
or
sarl
shrl
mov
and
lock
imull
fcmovu
fisttps
sbb
cli
std
pushf
and
jecxz
add
out
fwait
dec
stos
dec
dec
ret
mov
inc
dec
andb
dec
out
inc
sahf
fidivrl
ja
fsubl
inc
loop
fnstcw
fsubs
xchg
mov
mov
add
adcl
aad
loope
mov
or
scas
ret
into
jle
xor
lods
int
sub
sti
push
cld
mov
outsb
inc
cmpsb
clc
mov
cmp
xchg
testb
jae
insl
stos
mov
mov
shlb
nop
lds
pop
clc
repz
mov
mov
sbb
imul
bound
inc
dec
cmp
sbb
sub
loopne
push
add
xchg
stos
pop
scas
into
jns
sti
sbb
cmp
in
jp
sahf
es
jns
jbe
jbe
jp
in
push
mov
add
ret
jnp
dec
mov
ficomps
cmpsb
mov
sbb
cmp
out
cli
rol
insb
scas
mov
ljmp
test
lods
jno
cmp
sub
ret
fbstp
pop
pop
cwtl
subl
in
cmpsl
mov
mov
or
cmp
push
sbb
inc
pop
fistps
lea
add
mov
movsb
mov
adc
daa
cmc
xor
push
addr16
imul
xor
inc
out
je
cmp
or
lea
fs
loope
je
cmp
jp
sub
or
popa
rorb
mov
sti
dec
cmc
add
cli
ret
insl
lcall
mov
das
mov
outsb
mov
xlat
mov
push
dec
aad
push
adc
dec
xchg
cmp
pop
cli
pop
test
stos
dec
leave
and
fcoms
stc
adc
or
push
neg
dec
cwtl
loop
popf
push
aad
mov
enter
mov
and
or
or
andl
xchg
les
xor
dec
imul
iret
inc
pop
mov
pop
xchg
add
mov
cltd
mov
mulb
inc
push
cmp
cltd
mov
push
or
xchg
mov
and
mov
lret
imul
jecxz
imul
in
push
cmp
loope
fs
lds
inc
add
fs
push
push
inc
mov
jge
xor
xor
mov
mov
test
fisubl
ja
push
inc
jecxz
mov
je
jnp
cwtl
mov
ss
xor
pop
mov
dec
xor
fdivs
shlb
push
jno
cmpsl
sub
mov
test
pusha
leave
cmpsl
inc
xorl
hlt
dec
sub
and
out
mov
stos
cli
ds
adc
jns
jne
dec
bound
in
cs
cld
and
les
xchg
movups
and
iret
je
popa
jnp
and
add
xchg
addr16
sbb
push
pop
push
lea
cmp
stos
mov
mov
movsl
cmpsl
gs
lret
sets
cmp
jg
jae
clc
push
add
out
xchg
nop
jecxz
iret
loopne
dec
testb
pop
mov
fs
jmp
xchg
inc
movsb
jg
hlt
xchg
mov
ss
out
shld
adc
stos
and
mov
fs
jo
push
jmp
js
vcvtps2pd
pop
in
adc
lods
jb
mov
scas
stc
push
sub
lret
btc
jecxz
push
fs
mov
push
jns
leave
push
fildl
lods
push
rcrl
sub
insl
lea
pop
pop
rorl
xchg
jmp
repz
xchg
push
leave
xchg
and
ja
xor
push
fwait
aam
gs
aaa
jnp
inc
mov
mov
sub
cmp
flds
push
jl
movsl
je
push
xchg
push
loope
nop
xor
lcall
or
stos
popa
lahf
sbb
inc
ds
js
jns
out
inc
and
mov
add
movsb
test
cmp
push
inc
sub
rorl
dec
popf
jl
mov
outsb
repnz
outsb
scas
pop
sbb
inc
pop
inc
out
inc
lret
popa
mov
in
out
push
sbb
loope
pop
imul
add
mov
je
outsb
stos
mov
test
inc
xchg
xchg
pop
mov
call
dec
out
bnd
sar
cmpl
call
adc
and
testb
repnz
test
dec
cmp
addr16
xchg
jecxz
adc
adc
idivb
adc
mov
popa
out
arpl
xchg
jno
in
mov
adc
pop
mov
in
int
mov
adc
in
add
outsb
enter
insb
je
pop
call
mov
cmp
lret
jp
mov
xchg
jecxz
sbb
aad
imul
lea
pusha
std
pushf
in
push
sahf
jns
inc
jle
mov
cmp
and
sub
movl
test
scas
add
sbb
push
xchg
jp
jns
in
out
mov
push
scas
pop
xor
xchg
sbb
lock
push
or
fisubrl
dec
testb
jno
arpl
push
mov
fstps
data16
dec
sub
and
cmp
into
sub
test
flds
push
mov
imul
icebp
fwait
gs
sbb
add
adc
and
mov
aaa
fsubr
pop
sbb
out
sub
sahf
rcll
sbb
cmp
push
adc
dec
ret
sbb
stos
leave
into
inc
test
scas
ja
repnz
lods
pop
jmp
xor
dec
es
in
sub
in
lods
dec
mov
sti
pushf
inc
and
out
fwait
or
aaa
mov
push
mulb
mov
das
in
mov
or
cmp
pop
or
sbb
jecxz
fiadds
sbb
daa
inc
das
std
inc
push
adc
jbe
mov
inc
movsl
cmpsb
sub
pop
adc
xor
out
add
inc
fstl
inc
pop
pop
cmp
icebp
sbb
or
wrmsr
sti
popa
mov
test
rcr
jns
in
pop
arpl
subl
xor
leave
jne
std
outsb
insb
add
jae
pop
ss
and
cwtl
mov
leave
bound
mov
inc
xlat
aaa
push
mov
sbb
lds
sub
inc
adc
xchg
push
jp
aad
jecxz
adcl
std
adc
stos
dec
mov
sbb
in
sbb
lret
fildl
fs
rcl
arpl
jo
inc
pause
gs
mov
xchg
mov
cli
pop
xlat
mov
fadds
pop
repnz
jns
imul
lods
lods
sub
sbb
inc
lahf
inc
dec
cmp
push
call
jne
mov
mov
xchg
sbb
mov
bound
pop
xchg
sub
sbb
adc
outsl
int
clc
cs
xchg
add
add
mov
jb
pop
mov
mov
aas
jg
jle
aas
mov
xor
fcompl
xor
mov
add
popf
stos
pushf
rcrl
fnstsw
addr16
stc
and
and
fsubrs
lods
insb
push
lods
xchg
shr
ss
push
lock
pushf
hlt
mov
jbe
dec
jmp
imul
fadds
inc
pop
cld
loope
ret
std
stos
sahf
mov
add
xchg
fiadds
loop
in
test
ja
jb
mov
in
mov
mov
and
div
xor
rcll
jle
lret
xchg
ret
push
xor
push
repz
push
fiaddl
fcoms
xor
ret
push
sbb
outsb
mov
sub
or
cmpsl
stos
pop
push
and
enter
xchg
cmp
sti
and
ja
dec
test
leave
sub
movd
lret
mov
icebp
push
lcall
rcr
and
or
popf
push
push
std
popf
add
and
aas
arpl
cwtl
pusha
addr16
mov
cmc
xchg
dec
cld
lods
mov
lahf
cmp
shll
or
mov
xchg
enter
cltd
lods
lods
icebp
test
sub
xlat
lcall
xchg
jne
test
mov
add
jl
dec
jmp
or
sub
lahf
lds
repz
loope
bound
iret
push
mov
outsb
sahf
pop
popa
aam
push
insl
ja
call
push
jmp
adc
inc
pusha
jg
cmp
stos
popa
xor
testl
sub
pop
jns
fildll
rcl
push
lcall
lahf
shlb
lret
arpl
dec
hlt
xchg
in
cmp
jmp
push
nopl
mov
dec
mov
jnp
cmc
cli
loopne,pt
cmp
dec
jo
cwtl
jno
gs
xlat
js
cwtl
cmpsl
push
xchg
pop
inc
add
add
sti
ret
pop
dec
repz
dec
aas
or
mov
das
sbb
pop
add
adc
idivb
leave
repz
ficompl
int
arpl
outsl
jbe
mov
pop
add
lock
lret
sub
inc
in
mov
adc
add
jl
psubq
mov
ljmp
and
adc
push
out
push
or
pop
call
aam
jmp
mov
sbb
push
sub
int
and
mulb
mov
xchg
mov
cmp
loopne
mov
push
stos
test
in
pop
lret
cltd
sub
mov
push
test
push
xchg
or
dec
js
lods
xor
lock
add
cmpl
inc
or
jg
lods
cld
ja
mov
add
jnp
movsl
xor
jno
mov
cs
jp
sub
add
jns
xchg
aam
add
adc
and
clc
jbe
cmp
jae
xchg
mov
mov
push
repz
es
testb
sub
jl
push
ret
nop
rorl
or
loop
decl
test
test
and
aaa
aas
push
test
jb
pusha
loope
mov
es
pusha
inc
sub
test
lahf
dec
sbb
xlat
jo
jge
in
xchg
mov
push
and
popa
shlb
adc
mov
lahf
adcb
into
rcr
daa
rclb
jnp
sub
movb
lods
pop
cmp
repnz
add
pop
and
mov
jl
fldl
insl
test
daa
pop
mov
or
cmp
or
jae
xchg
cmp
leave
lods
pop
xor
int3
in
jg
push
test
pop
adc
fxch
lea
lcall
xchg
shl
add
push
imul
sarl
push
aaa
pop
inc
mov
inc
fdivp
cli
inc
sbb
popa
mov
xor
into
mov
jo
je
hlt
xorl
clc
ljmp
outsl
and
xchg
jle
sub
mov
jmp
push
mov
jnp
xor
dec
icebp
or
fcompl
ret
ds
je
out
mov
shlb
push
and
mov
cmc
push
ss
shrb
repz
xor
cli
nop
ss
outsb
push
repz
popl
and
mov
into
inc
test
inc
sbb
in
outsl
xchg
cmpsb
test
ror
mov
shrl
and
mov
cmp
sub
sbb
lea
and
pop
cmpsb
je
test
push
and
dec
ja
adcb
cwtl
lcall
fs
scas
xchg
adc
mov
iret
pusha
push
cmpsb
dec
push
dec
movsl
dec
subb
jge
out
out
xchg
test
fidivl
out
push
jecxz
popf
lea
adc
daa
clc
fisubrl
test
inc
pop
mov
rcrb
stc
dec
les
imul
repz
decl
pop
mov
fldenv
mov
mov
stos
adc
ret
add
jo
push
push
xchg
out
pop
xchg
idivl
jbe
mov
movsl
cmp
aas
addl
jg
mov
xchg
hlt
loopne
and
div
dec
icebp
mov
jo
stc
int
jae
andb
xor
pusha
or
in
mov
out
mov
adc
sbb
in
sahf
add
bnd
arpl
sub
jb
lock
xchg
sbb
pop
out
shlb
inc
push
das
cmp
pop
adc
mov
add
xlat
repz
pop
xchg
decl
jo
add
xchg
sti
imul
out
call
xchg
bnd
push
fldcw
out
xchg
popa
push
jno
cwtl
add
cmp
scas
mov
adc
out
push
xchg
or
repz
or
adc
mov
jno
sahf
out
sub
sahf
js
xor
rolb
fs
rcll
mov
ficoms
xchg
aas
icebp
push
loope
pop
aaa
popl
je
lahf
ret
test
out
notl
daa
cld
jns
jb
pushf
addr16
push
pop
sahf
lahf
pop
adc
js
or
or
or
add
es
xor
jmp
ljmp
arpl
out
dec
test
mov
pusha
stos
jle
fcompl
push
xor
cmpsb
sbb
add
inc
sub
sub
fld
push
mov
xchg
pop
pusha
iret
push
in
add
out
and
mov
clc
dec
mov
sub
insb
call
jle
rcrb
jo
iret
pop
mov
pop
movsl
outsb
fwait
dec
adc
mov
cli
enter
jmp
ret
es
push
neg
mov
shrl
mov
inc
fimull
jns
inc
push
mov
stos
testl
cmpb
jnp
bound
addr16
cmp
insl
push
in
inc
out
ret
jmp
fisttpl
add
out
arpl
pop
arpl
cld
adc
test
enter
pushf
aas
dec
pop
out
add
cmpsl
jge
in
in
jns
shrb
scas
leave
push
mov
test
ja
ss
cs
test
xchg
xchg
inc
aad
shll
jae
repnz
stos
pop
jle
push
mov
xchg
fcmovb
scas
push
jecxz
push
fbld
xorb
mov
sahf
repnz
dec
mov
and
aas
loop
fidivs
pusha
and
mov
cmpb
rol
mov
in
repnz
mov
mov
pop
pop
cmp
push
adc
pop
xor
rcrl
ja
cmpb
and
add
inc
icebp
scas
or
ficompl
xlat
shlb
mov
rorb
or
inc
push
and
movsl
lds
sub
mov
inc
scas
sub
push
loop
sub
addb
inc
jecxz
popa
mov
xchg
jl
dec
outsb
mov
repz
cwtl
shlb
add
pop
test
mov
pop
mov
add
popf
push
and
push
jg
roll
movsl
mov
imul
lahf
mov
orl
xchg
pop
movsb
test
pop
xor
outsb
les
sub
cli
cld
icebp
fisttps
lods
jnp
pushf
test
dec
stc
mov
insl
leave
scas
repz
add
xchg
addr16
dec
mov
das
popf
dec
pushl
add
call
fiaddl
mov
xchg
repnz
popf
xchg
rcrl
repnz
mov
adcb
mov
rcrl
sub
dec
push
cmp
cmc
scas
test
pop
dec
imul
mov
mov
xor
sub
xor
ds
xadd
and
sahf
aaa
out
nop
mov
inc
outsl
push
adc
int
inc
testl
stc
sbb
jle
out
pusha
add
or
xchg
rclb
arpl
cli
jnp
pop
xorb
adc
pop
out
loope
dec
push
jle
pop
mov
adc
into
enter
int3
pop
mov
nop
push
rcr
lret
aam
mov
sarl
dec
or
fcmovb
or
lret
mov
out
clc
add
clc
mov
push
rcll
or
gs
pop
jns
fimuls
push
adc
or
fwait
cmp
fwait
cmp
fisttps
sbb
xchg
js
pushf
ficompl
lea
push
cmp
push
js
add
mov
hlt
xor
fdivl
jle
dec
mov
jb
outsl
sbb
cs
subb
arpl
dec
je
out
pushf
pop
adc
fisubs
shr
loop
sahf
sbb
popa
adc
push
sti
loop
xchg
push
test
das
mov
xchg
ja
into
cmc
mov
dec
mov
rorb
test
add
fwait
cmp
mov
data16
or
jmp
test
aad
jmp
repnz
scas
xchg
enter
clc
jl
fucomip
iret
arpl
test
lods
fs
jno
call
fwait
aas
sbb
outsl
cltd
dec
loope
dec
dec
movsb
lahf
jnp
les
xchg
mov
mov
push
dec
xor
mov
fs
sbb
jae
cltd
mov
inc
repz
stc
popa
push
sub
xchg
sti
cmp
pushf
inc
push
aas
sub
loopne
rcrb
into
mov
testb
pushf
xchg
stos
jge
ljmp
pushf
das
leave
jae
mov
push
jbe
fldt
pop
and
lea
out
or
cmp
mov
iret
ficoml
daa
pop
mov
push
hlt
orl
mov
pop
jg
push
pop
cwtl
push
push
mov
lcall
fnstsw
xchg
insb
pop
pop
lds
dec
push
les
mov
call
mov
pusha
stos
cmp
ficomps
pop
sbb
or
addr16
pop
fsubl
xor
push
cmpl
inc
pop
fsubr
cs
inc
nop
popf
push
repz
cmpsl
stc
repz
jno
or
pop
adc
je
ret
test
pushf
mov
and
hlt
jns
jns
dec
mov
jbe
xor
pusha
and
xorl
fmuls
inc
lds
enter
cld
out
mov
mov
gs
test
cwtl
jae
loopne
or
push
sbb
mov
xchg
stos
popa
jg
js
cld
or
std
imul
nop
out
enter
adc
adc
cmc
dec
mov
xchg
fisttps
xor
scas
mov
xchg
stos
into
mov
push
mov
xorl
inc
popf
cmp
repz
sahf
cmp
mov
sub
mov
sti
outsb
in
pop
push
lea
push
xor
aaa
cltd
dec
stc
cs
push
sti
cmp
into
movsb
cwtl
pop
cmc
inc
mov
dec
cwtl
push
xchg
inc
add
insl
dec
and
and
mov
dec
adc
cmp
or
sti
mov
lret
adc
test
mov
in
jg
faddl
cmp
out
xchg
cmpsl
and
mov
jns
sbb
es
mov
or
iret
dec
ljmp
movsl
dec
add
cld
lcall
mov
or
push
and
cmp
movsl
out
xchg
addb
push
xor
ja
cmpb
pop
testl
inc
loope
fwait
dec
test
sbb
add
loop
mov
jnp
test
fistpl
xchg
cltd
sbb
cmp
repz
fidivrl
add
jae
push
push
push
cpuid
xor
call
mov
lock
cli
inc
fistpl
mov
push
adc
and
jge
pop
jmp
gs
jge
and
mov
orl
out
decl
dec
adc
nop
int
stos
cmpsb
cld
jmp
adc
adc
or
ja
sti
adc
mov
add
ficompl
jno
mov
inc
into
clc
push
es
pushf
gs
pushl
inc
movzbl
push
pusha
xor
cmpsl
int
jmp
sub
mov
out
jmp
pop
mov
data16
adc
in
dec
jmp
fnstenv
lds
or
xchg
jbe
bound
aad
push
cmpsl
mov
xchg
test
outsl
stos
sub
sbb
inc
mov
xor
jne
adc
fnstenv
push
xor
fdivrl
jno
cmp
enter
enter
fcmove
ds
cmpsl
sbb
leave
push
jle
cs
jne
xrelease
sub
jge
movsl
repnz
repnz
push
mov
sub
inc
push
pxor
iret
cwtl
sub
int3
bound
in
out
popa
adc
movl
jns
in
inc
mov
push
sub
vmread
sbb
xchg
pop
mov
cmc
add
push
xchg
jae
inc
add
shll
shr
add
enter
or
add
adc
mov
xchg
pop
and
jge
xchg
push
arpl
adc
pop
xor
inc
mov
dec
dec
or
repnz
and
daa
lods
xchg
hlt
dec
fwait
ja
nop
cmpsb
xchg
adc
adc
pop
lock
scas
and
mov
das
ret
loope
ljmp
scas
unpckhps
ja
adc
push
int3
mov
pop
outsl
jb
mov
sub
lcall
jle
adc
sub
xlat
adc
dec
pop
sbb
jp
sahf
mov
dec
jno
iret
mov
fidivs
mov
sbb
pop
gs
sbb
call
xor
lcall
pop
in
sbb
xor
sarb
pushf
mov
add
andl
xchg
mov
xor
dec
imul
adc
dec
mov
popf
arpl
jge
std
mov
adc
inc
sti
jecxz
out
fnsave
dec
ret
loopne
sub
rolb
inc
pop
xchg
jb
jp
sub
call
fwait
jb
inc
adc
push
push
cwtl
out
loopne
es
add
mov
jbe
ljmp
push
sub
jle
adc
out
sbb
lea
xchg
les
xchg
and
xchg
dec
mov
mov
add
rol
out
les
bound
xlat
stos
out
adc
js
dec
roll
movsl
imul
dec
les
lret
and
lret
sbb
mov
lods
in
lret
cmp
das
mov
test
and
incb
push
push
xchg
jge
imulb
rcrl
adc
pusha
jbe
sbb
aas
sahf
cmp
add
lea
add
fsubr
icebp
test
jmp
push
leave
mov
fmuls
mov
ret
xor
ret
aad
lods
mov
pop
adc
inc
fld
or
push
fldenv
cmp
hlt
mov
xchg
icebp
out
leave
je
cmc
popa
daa
push
imul
cmp
fnstcw
jns
pop
out
xchg
fs
cwtl
pop
pusha
xlat
or
fsubl
jmp
fistpl
scas
test
pop
ljmp
and
mov
mov
bound
aam
in
mov
cmp
dec
frstor
fadd
push
inc
sub
adc
aam
iret
clc
or
pop
data16
cmpsb
nop
inc
mov
push
inc
pop
jns
and
pop
adc
pop
cmp
in
insl
push
inc
xchg
mov
mov
push
xchg
jp
cmpsb
sub
push
add
or
mov
lret
push
mov
ret
jne
addr16
add
pop
cmp
dec
jecxz
push
std
icebp
and
in
xor
xchg
sahf
push
inc
lods
dec
stos
out
test
mov
or
clc
jecxz
jo
cmc
mov
inc
xlat
rcrl
lcall
jb
sahf
mov
jo
fiadds
divl
pop
inc
pop
dec
call
test
jp
pusha
in
fs
imul
add
mov
pop
mov
ret
jne
shlb
cmp
mov
xchg
cmp
xchg
pop
lahf
mov
sub
xlat
adc
inc
mov
cli
push
pusha
mov
out
or
ljmp
ja
jae
mov
sub
adc
sub
icebp
mov
xor
sub
mov
dec
in
dec
sbb
iret
mov
cmpsb
clc
xchg
repnz
outsl
sbb
or
mov
and
gs
jbe
into
adc
adc
pop
aaa
mov
sub
and
inc
hlt
in
xorl
mov
adc
mov
icebp
or
sarb
sahf
in
jge
jl
add
and
shlb
lea
loop
jl
pusha
mov
or
aas
jnp
pop
repz
scas
sub
cli
aaa
test
xchg
jno
repnz
int3
xorb
xor
pop
mov
div
dec
test
aaa
rcl
out
rcrb
vcvtdq2ps
mov
in
mov
mov
inc
ljmp
inc
in
mov
xchg
xor
lods
out
xchg
ja
outsl
into
xchg
pop
imul
hlt
daa
aaa
loopne
daa
and
iret
adc
mov
mov
jle
out
xor
insb
rorl
adc
mov
jge
sar
cmp
push
sub
push
pop
fsts
pop
jo
add
push
pop
sbb
mov
fisubrs
dec
jg
adc
sub
addr16
xor
cmp
pop
es
les
loope
ret
andl
xchg
mov
sbb
push
push
cld
or
cmp
out
mov
scas
lea
rolb
push
mov
xchg
push
orl
mov
xor
mov
lret
mov
scas
cmp
push
xlat
scas
push
adc
mov
and
je
data16
and
js
scas
sub
mov
mov
mov
sti
jle
pop
ss
jecxz
pop
xchg
fninit
stc
sub
mov
xchg
pushf
xchg
xchg
shll
mov
cli
pop
cmpsl
mov
daa
jb
push
push
pop
sbb
jne
lret
fldt
sbb
xor
dec
lods
ficompl
add
sbb
jge
xorl
jp
lcall
mov
xchg
jo
mov
or
les
jle
jle
mov
mov
std
movsb
repz
jmp
sahf
and
stc
or
and
xsavec
pop
mov
add
add
int
movsl
mov
mov
jle
add
sub
fnstsw
inc
scas
mov
movsl
cltd
sti
cmpsl
sbb
movsb
fistpl
test
mov
cmp
mov
jno
shrl
movsb
je
and
not
std
in
push
mov
dec
cmp
xor
inc
repz
mov
add
int
int3
jg
xor
mov
insl
shll
test
xor
mov
testl
add
ret
int3
cmpsl
mov
popa
pusha
mov
ss
test
rcrl
cmp
sbb
adc
inc
mov
adc
and
xor
adc
in
mov
adc
hlt
fstps
loop
push
push
test
sbb
sub
push
aaa
jp
pop
or
or
pop
dec
adc
cmp
xchg
sub
cld
sub
daa
push
ljmp
fcom
inc
xchg
test
lret
scas
movsl
push
mov
gs
cmp
and
daa
lahf
pop
mov
lea
pop
aaa
loop
xchg
cmp
add
adc
mov
out
lcall
fs
sti
jg
test
or
mov
push
mov
jl
cmp
xor
aaa
or
outsb
xchg
mov
int
aaa
sbb
scas
xor
loopne
sub
cmpsl
pop
push
xchg
jbe
sub
sti
push
int3
imul
aas
adc
mov
inc
xor
outsb
cmp
lahf
stc
add
mov
adc
cmp
pop
imul
test
push
gs
or
arpl
scas
mov
dec
add
jmp
dec
jnp
lock
out
pop
mov
sbb
aas
push
sbb
in
int3
push
cmovg
inc
inc
mov
mov
scas
mov
cs
rcrl
ret
xchg
cmpsb
push
dec
nop
inc
enter
ds
push
enter
xchg
sbb
or
loop
mov
mov
mov
pop
fldt
mov
add
mov
lds
mov
inc
sub
jl
xchg
or
in
jge
sahf
jnp
dec
push
jns
cld
xchg
loop
rcll
jge
pop
adc
cmp
hlt
sbb
mov
int3
loopne
push
xor
sub
dec
fcmovne
xor
jge
mov
push
cmp
add
in
add
push
xor
jnp
mov
mov
cld
lret
or
xor
enter
incl
roll
dec
mov
daa
dec
inc
cmp
and
stc
and
repnz
and
insb
push
loop
pop
push
cmp
es
popf
xor
enter
dec
sub
or
jns
lahf
jno
out
gs
inc
stc
test
roll
and
shll
data16
fdivrl
mov
jg
lods
xor
xchg
cld
lcall
xchg
mov
mov
dec
mov
js
cmpl
mov
inc
mov
cmp
shrl
mov
jge
and
xor
or
xchg
stos
and
cmp
leave
jmp
fidivs
in
xlat
mov
dec
jmp
rcrl
pop
cmpsb
push
mov
adc
mov
push
xlat
add
inc
push
ds
loope
pop
xor
insb
sbb
mov
jmp
aaa
bnd
lock
inc
dec
aaa
xchg
sbb
xor
into
pop
fistl
outsb
jmp
loop
jge
mov
push
mov
jmp
pushf
sti
xor
arpl
in
dec
loop
div
aad
jae
add
fstpt
dec
lahf
filds
dec
nop
dec
lea
jle
push
ss
out
pop
lret
mov
lock
or
xor
sbb
mov
loope
inc
es
cmp
inc
pop
sub
sub
adc
xchg
sahf
sbb
jecxz
lods
xchg
mov
iret
fldl
push
nop
adc
xor
mov
and
fcmovnb
dec
cmc
je
lods
adc
mov
iret
xor
and
mov
movsb
add
shll
or
pop
adc
cmc
pop
xor
xchg
mov
xor
arpl
icebp
pop
sub
jne
addr16
cld
dec
and
icebp
rolb
bnd
xor
lds
shll
sbb
adc
out
out
fwait
shll
loop
push
push
and
incl
push
cmp
pushf
outsl
or
sahf
xchg
dec
stos
imul
in
xchg
push
das
loope
pop
add
cmp
int3
popa
cmp
dec
sub
add
xchg
inc
orb
mov
jne
out
in
or
incl
and
shll
fimull
int3
fstpl
push
sbb
sbb
push
jmp
stos
and
ja
loopne
addb
xlat
in
aad
dec
popf
jb
mov
add
loop
inc
push
repnz
ret
and
enter
inc
repz
scas
cli
ljmp
adc
jo
inc
jbe
mov
clc
repz
inc
std
call
in
add
sti
push
push
lods
xchg
xchg
fnstsw
lret
aaa
repz
jno
sub
fwait
hlt
pop
sbb
shlb
mov
mov
push
mov
dec
cld
mov
xor
jo
fistl
mov
clc
jmp
lods
xlat
sbb
or
xchg
sub
jne
inc
or
xchg
ret
sub
subb
sbbl
das
mov
insb
ljmp
push
cwtl
rorl
enter
xchg
mov
adc
pop
adcl
enter
mov
imul
rolb
jmp
mov
jo
pop
lcall
jl
out
and
js
icebp
addl
fisubs
cmp
pop
je
sub
and
or
pop
sarl
xor
leave
pop
xchg
lods
sarb
cmp
sbb
inc
sbb
mov
dec
lea
adc
aas
add
push
xor
add
pop
into
pushf
sbb
shll
dec
fisubl
pop
xor
xor
add
pusha
andb
mov
jmp
cmp
or
xchg
lcall
loopne
stc
or
mov
aam
out
inc
jle
adc
neg
cli
pop
push
bound
ss
call
daa
into
repz
jle
repnz
cmp
ja
push
jbe
jb
aad
xchg
dec
test
nop
mov
jmp
aam
xor
enter
or
lock
outsl
sub
or
dec
jbe
and
dec
call
insl
cmpsb
and
roll
sub
add
scas
sti
aaa
adc
jb
adc
aaa
dec
cmp
push
ret
arpl
or
sbb
loope
insl
arpl
mov
and
sbb
js
sbb
sar
mov
adc
popf
roll
dec
stos
jg
cmp
or
dec
fucomp
xchg
add
rcll
mov
jl
sti
mov
fs
fsubrs
push
adcb
xchg
sbb
pop
mov
popf
jl
add
clc
ud0
sbb
xchg
rorb
mov
mov
push
mov
sub
sub
mov
lret
decb
or
ror
jnp
lods
xchg
cmp
fldcw
xor
cli
jae
and
data16
dec
xor
stos
fwait
and
js
or
push
mov
cmp
imul
add
insb
and
fisubl
xor
cld
push
adc
lcall
mov
lcall
xchg
ret
push
leave
inc
inc
sub
cmp
xchg
mov
lds
ret
and
mov
push
loop
clc
insb
push
and
jb
imul
test
call
repnz
rcr
rorl
mov
ret
dec
cmpsb
ds
mov
inc
mov
dec
lods
mov
xorl
imul
out
push
mov
andb
adc
mov
and
mov
pop
test
pop
and
or
xchg
dec
pop
incb
inc
aad
xor
pop
js
mov
lret
into
rcrb
adcl
sub
pop
fwait
cli
jbe
cmp
inc
jecxz
cld
sub
sbb
adc
gs
mov
xlat
movsb
stos
mov
stos
es
outsl
or
mov
out
sub
mov
imul
nop
test
lahf
or
jne
sub
or
cmp
repnz
aas
mov
inc
outsl
aas
lock
push
adc
stos
xor
pop
pop
out
outsl
mov
push
or
mov
jnp
dec
cltd
aam
shll
aad
pushf
adcl
fcomp
xchg
decb
stc
mov
xchg
fisubl
cmp
pop
inc
mov
dec
adc
stos
loopne
repnz
push
pusha
test
mov
dec
xchg
repz
push
das
mov
sbb
inc
inc
push
into
aad
mov
shr
pop
jge
adc
jmp
mov
stos
mov
testb
jle
inc
lock
iret
jo
jl
stos
jg
subb
test
cli
loope
jg
insb
rcl
xchg
jnp
mov
xchg
or
xchg
ret
inc
adc
out
clc
pop
lock
in
fwait
bound
sub
xchg
arpl
add
rcrb
adc
pop
mov
ja
pusha
push
ret
jb
sub
pusha
in
inc
xor
jmp
add
dec
lods
pop
cs
test
mov
in
repnz
jb
addr16
int
inc
lock
jae
jmp
stos
jl
adc
aaa
test
dec
xabort
jb
cs
cmpsb
mov
pop
dec
mov
and
in
js
dec
cmpl
test
es
iret
sub
pushl
testb
ret
push
not
loope
addr16
lods
jl
data16
mov
jle
xchg
cmc
leave
mov
sub
sbb
adcl
clc
jo
dec
cli
call
cld
inc
fwait
mov
cmp
pop
fiaddl
pop
popf
es
orl
and
lods
xlat
push
insl
xchg
push
mov
push
sahf
movsl
dec
int3
add
adcl
inc
cmc
add
adc
subb
or
push
cmpsl
lods
inc
and
mov
dec
pop
in
fucomp
xchg
lret
fbstp
sub
sub
pop
popa
sbb
sub
mov
mov
push
sub
xor
jae
rcl
sub
insb
out
je
enter
mov
push
cmpsl
jl
mov
out
mov
and
out
sbb
fwait
mov
imul
in
xchg
mov
sub
pop
enter
inc
fimuls
inc
xor
sub
das
test
push
jg
loopne
andl
pop
loopne
shll
inc
or
loop
jecxz
fadds
insb
fldz
lret
sbb
push
sbb
dec
mov
xor
dec
mov
ffree
sbb
pop
shrb
aad
aas
pop
add
jnp
mov
aad
cmp
mov
jbe
pop
mov
shlb
fldenv
repz
sub
push
lea
jnp
lea
ljmp
and
in
stc
xor
xlat
lret
shrw
and
cwtl
dec
or
shl
xor
in
jo
test
imul
sbb
lods
push
ja
test
scas
outsb
jnp
cmp
inc
adc
inc
btc
sub
sbb
adc
mov
mov
das
cmc
rcr
lret
stos
xor
out
jno
popa
cmp
dec
dec
adcb
mov
jae
mov
lret
fimull
xchg
addr16
mov
jmp
leave
jg
mov
es
lcall
scas
sub
pop
lret
sahf
es
pop
repz
inc
jb
or
jns
xor
sub
fimull
mov
sar
icebp
popf
test
xchg
enter
notb
cmp
ja
leave
je
and
jo
sbb
xchg
cmpsb
mov
sub
pushl
and
clc
inc
pop
jbe
loope
sbb
iret
mov
stos
out
cmp
and
es
or
ljmp
fcmovbe
mov
add
aam
das
cld
mov
into
lods
or
xlat
cmpsb
stc
mov
popa
jecxz
xchg
mov
imul
arpl
and
sti
fcoms
ss
enter
mov
push
push
jbe
int
int3
ljmp
push
mov
jge
ficoml
outsl
inc
xchg
int
xor
cmp
mov
mov
cli
data16
push
inc
mov
cmpsl
xchg
pop
dec
stos
in
mov
mov
xchg
fidivs
push
jns
jno
pop
xchg
push
push
and
inc
push
loope
cmp
call
incb
out
cmp
inc
mov
inc
push
lret
rcr
or
adc
repnz
dec
insl
test
add
mov
push
daa
testb
inc
out
in
and
jb
test
jbe
pop
push
movsl
xchg
cmpsb
in
lods
decb
pushf
sbb
pushf
mov
pop
or
add
inc
cmp
mov
enter
xchg
mov
cmp
test
xor
mov
jno
lds
jne
sub
int3
and
enter
cltd
mov
sahf
lret
mov
imul
sub
adc
xor
lcall
pop
adc
ljmp
mov
mov
cmpsl
jmp
pop
sub
fsqrt
jmp
testl
fdivr
pop
pop
xor
mov
mov
add
ss
xchg
adc
mov
rorb
jecxz
int
jg
mov
inc
ficompl
popf
dec
cli
push
inc
cld
adc
sbb
xchg
mov
lcall
add
sbb
cmp
in
test
daa
adc
ret
pop
pop
mov
mov
cli
cmp
int
adc
mov
or
je
sbb
sub
aam
sub
adc
pop
jmp
pusha
ret
mov
pop
cld
mov
and
sub
dec
insl
fcoms
sub
cmp
pop
imul
popa
add
push
sbb
lahf
clc
add
push
test
fwait
mov
push
movsl
push
mov
pushf
sub
xchg
mov
push
and
pop
dec
push
bnd
push
xchg
adc
es
ljmp
js
sbb
lret
movsl
dec
add
lahf
xlat
jg
dec
sub
sub
sbbb
push
jmp
add
insb
mov
fsts
sub
test
lret
out
mov
mov
lret
aad
cltd
ljmp
in
adc
or
pop
sub
mov
or
daa
dec
pop
or
in
jecxz
fisttps
cmpsb
pop
fldl
shrl
sbb
in
lea
mov
lcall
loop
xor
cmpsb
mov
rcll
and
pop
pop
pop
fcompl
cltd
inc
add
xchg
jns
loope
in
dec
mov
int
push
pop
pop
and
mov
cmp
xor
add
push
mov
lret
pop
mov
pop
fcoml
enter
xor
xchg
in
inc
shlb
sub
movnti
sub
pop
enter
dec
movsl
cmp
and
add
push
mov
inc
xor
dec
push
adc
adc
lss
fwait
sbb
stos
subl
pusha
fstl
jecxz
rclb
xor
xchg
imul
ret
pusha
std
movsb
mov
xor
bound
lock
mov
xor
aas
xor
dec
add
popf
sbb
and
cmp
jno
ss
aam
repz
out
push
movsb
arpl
fildll
movsl
mov
fsubs
adc
dec
mov
dec
xchg
stc
jns
lret
out
and
loopne
dec
cli
pop
mov
pop
jg
cmp
adc
clc
cmp
push
rolb
add
call
sbb
jge
xchg
insl
test
shlb
ds
push
je
push
xchg
xchg
les
inc
jmp
dec
mov
and
cmovns
mov
sub
and
jp
adc
ds
cs
xchg
add
outsb
push
xor
shlb
mov
xor
in
das
cmp
dec
cmp
jbe
sub
sub
les
addr16
inc
pop
test
add
pop
push
jle
mov
fbstp
stc
sahf
xchg
cmp
push
xor
mov
pop
shlb
sahf
fwait
mov
repz
outsb
stos
jmp
cwtl
cmp
ss
popf
je
shrb
inc
mov
sub
sub
inc
sub
adcb
pop
dec
mov
scas
gs
testl
jl
add
xor
in
daa
sub
add
aas
lahf
push
sub
cmc
in
outsb
sub
out
sbb
push
pop
data16
xchg
cmp
sti
ficomps
push
fbstp
lret
fs
decl
add
popf
ljmp
shlb
fwait
ds
test
sti
or
mov
cmp
jge
and
cmp
xor
test
push
das
sub
mov
bswap
out
push
call
aas
repnz
pop
shll
mov
mov
cmpsb
and
dec
xor
pop
sbb
repnz
adc
jl
inc
dec
jge
or
dec
lods
int
xor
popa
add
dec
adc
stos
movsl
mov
xchg
scas
inc
test
sub
jge
mov
rolb
pop
pop
adc
lods
lret
fisttpll
lock
sub
decl
aam
and
xchg
cs
dec
imul
push
leave
sub
add
hlt
arpl
mov
xor
push
push
mov
cmp
pop
jecxz
xchg
lea
mov
dec
or
push
leave
inc
cmpsb
mov
aad
or
scas
mov
lahf
adc
inc
test
addr16
loopne
jl
sub
inc
cmp
dec
daa
mov
leave
xor
sub
cmp
and
arpl
or
inc
dec
and
lods
leave
or
xor
mov
adc
ret
lret
cmp
lret
push
dec
sub
and
jb
adc
xor
fwait
mov
mov
daa
lods
decl
push
inc
xor
lcall
push
push
and
insb
mov
add
into
fisubrl
or
jno
pop
orb
mov
repz
cmpsl
mov
mov
cli
sub
push
std
and
ds
mov
lret
subl
lret
push
fidivrl
sub
fimull
dec
ret
fwait
ret
icebp
sbb
je
inc
pushf
and
hlt
nop
xor
mov
aas
mov
js
push
mov
inc
xor
mov
mov
jb
lahf
dec
dec
call
imul
push
xor
push
adc
jo
fwait
dec
sbb
dec
lret
inc
or
add
lcall
fistps
adc
cmpsb
mov
aam
in
dec
pop
adc
and
sbb
in
dec
popa
lock
imul
in
jmp
push
and
dec
stos
out
sub
mov
cmpsb
xchg
ficoms
add
lock
stos
push
xchg
jp
loopne
mov
fistpl
movsb
mov
std
push
xor
push
or
fcompl
dec
add
pop
cmp
popa
xor
pop
scas
fs
in
std
movsl
rorl
std
xchg
lret
sub
pusha
ds
mov
out
mov
mov
xchg
into
jbe
scas
std
add
fbstp
inc
add
jge
push
mov
testb
mov
pop
or
insb
mov
ss
int
ret
loopne
pop
and
lds
jle
sahf
ds
repnz
fstps
sti
jp
jnp
mov
pop
popf
jnp
adc
flds
pop
enter
nop
mov
in
mov
mov
jbe
dec
and
add
movsb
add
fistpl
cs
call
and
pop
gs
fscale
xor
mov
pop
neg
cmp
push
xor
addl
cld
dec
shrb
das
pop
inc
fildl
xchg
mov
shlb
inc
or
test
and
push
test
push
loope
sbb
mov
pop
mov
push
push
sub
jge
pop
pop
adc
shrl
pop
fs
dec
xchg
pop
jle
pusha
jae
mov
mov
shrl
push
pusha
test
test
add
push
and
shrb
ret
test
push
cmp
or
mov
lea
sub
imul
pop
fldl
lcall
fildll
add
xchg
movb
popa
leave
cltd
loop
sahf
lods
stos
sbb
filds
out
push
lret
push
sbb
sbb
push
rolb
jmp
pop
adc
mov
cmpsl
insb
jae
inc
into
cmpsl
insb
pop
mov
stos
pusha
cmpsl
jl
xor
test
xchg
outsl
test
arpl
les
fucomip
jp
or
popa
jecxz
add
fimuls
lahf
outsl
or
enter
sbb
test
lock
test
mov
xor
test
scas
js
add
mov
xchg
jg
fcoms
test
out
fcomps
into
mov
mov
pop
outsl
mov
ret
sbb
test
xor
fyl2x
push
sbb
ss
aad
shl
pop
loopne
sbb
shll
loopne
int
in
gs
jb
mov
adc
loop
cs
clc
fwait
cmc
leave
fwait
jae
add
xlat
popf
mul
add
inc
test
std
jp
xlat
cmp
mov
nop
loop
cmp
stos
les
adc
xor
pop
scas
mov
adc
push
outsb
lea
or
ss
and
adc
pop
popfw
inc
mov
push
mov
lods
pop
mov
add
adcb
sbb
xor
pop
movsb
loopne
push
out
mov
negb
add
push
mov
hlt
mov
and
and
aad
dec
xor
dec
push
dec
sbb
pop
scas
or
gs
inc
out
ret
lea
xor
gs
sub
das
in
mov
out
test
loope
ret
pop
mov
stos
inc
cltd
bound
lods
dec
xchg
pop
cs
dec
push
inc
roll
and
adc
mov
jb
jp
out
shrb
ret
xor
add
daa
aam
insb
ret
aas
popa
dec
dec
dec
inc
and
push
mov
cmovb
in
jle
or
lahf
fnsave
xchg
rorl
fdivrs
mov
mov
stc
mov
aaa
mov
fmuls
dec
adc
pop
or
mov
adc
fld
pop
sbb
add
ja
ss
repz
dec
mov
push
insb
cmp
aad
dec
and
inc
or
and
push
pop
push
push
cld
imul
add
push
out
pop
and
xor
out
fistpll
in
pop
fistps
mov
repz
jge
dec
filds
jae
inc
mov
and
pop
fcomps
cmp
push
mov
dec
jmp
call
movsl
js
test
cmpsl
cld
add
push
lods
mov
xor
jnp
js
movsl
test
lods
fidivl
inc
push
push
pop
xchg
jns
cmp
cltd
sub
daa
fldt
sbbl
mov
insl
dec
bound
test
or
push
int3
adc
ljmp
or
cld
inc
xlat
cmc
push
jo
shrb
ljmp
push
mov
xor
ror
dec
mov
movsb
push
and
out
scas
or
push
cmp
add
outsb
ss
cmp
pop
sahf
lahf
mov
mov
pushf
fdivl
mov
call
sub
cmovae
subl
clc
mov
mov
das
insb
call
inc
push
xchg
xchg
cli
push
cmpsb
mov
aas
lods
scas
add
adc
lahf
cmp
stos
mov
in
icebp
cmpsl
inc
push
inc
mov
mov
cs
pop
mov
jg
aad
xchg
dec
shrb
mov
decl
iret
jle
adc
mov
in
fisttpl
pop
in
and
cmpl
gs
inc
and
shrl
out
leave
dec
stos
xlat
push
pop
add
les
daa
loope
jne
loop
sbbb
cmp
xchg
aaa
xor
imul
xlat
rcll
or
xchg
data16
jl
xchg
lea
pop
in
enter
cmp
or
xor
shll
jae
xchg
mov
sub
mov
ficoms
xor
aas
scas
push
dec
jae
lods
jp
in
fldcw
cmp
out
xor
aam
sub
push
in
roll
adc
lds
xchg
lcall
mov
adc
sbb
aas
lods
in
xor
lret
mov
repnz
mov
cmp
arpl
or
adc
movsl
xchg
mov
inc
xchg
sbb
add
mov
sub
fwait
jno
jmp
lock
int
push
roll
jg
dec
cld
jge
cmp
xor
mov
or
adc
sbbb
lods
lock
insl
outsl
scas
insb
ficoms
push
jne
pop
test
and
dec
mov
out
rep
int3
in
in
lock
repnz
cmp
test
fidivl
mov
push
mov
mov
mov
stos
jns
or
out
cwtl
lret
dec
jle
popf
and
pushf
test
mov
je
call
cmpsb
js
pusha
insl
jmp
dec
mov
loop
mov
xor
mov
jge
outsl
rep
add
sbb
cmpsl
or
fdiv
pusha
and
jbe
or
mov
pop
push
leave
sbb
in
mov
xlat
pop
int
sub
movsb
es
mov
dec
popa
inc
or
sbb
mov
and
addr16
adc
leave
das
out
sbb
adcl
fs
and
int3
cli
popf
pop
add
arpl
sbb
icebp
fnsave
mov
add
mov
dec
pop
mov
pop
lds
iret
mov
jecxz
mov
mov
adc
jge
jne
nop
js
in
jb
in
pushf
add
adc
pop
jo
jo
fdivrs
push
adc
pop
xor
bound
js
dec
loopne
cli
fdivl
adc
fwait
push
cmp
test
out
test
sbb
lea
nop
cmp
movsb
push
mov
pop
pop
cmp
ret
out
das
mov
stos
mov
sbb
inc
mov
in
jb
jnp
mov
mov
push
cmc
mov
cs
push
arpl
push
mov
fs
in
dec
mov
adc
push
loop
es
in
gs
repnz
push
add
xor
mov
test
sbb
cmpsb
and
jae
add
popa
xchg
dec
mov
rcrl
fst
add
aad
insb
push
adc
filds
stos
aaa
dec
mov
outsb
cld
stos
cltd
add
pop
mov
mov
ss
decb
cltd
push
xchg
mov
out
xor
add
ljmp
cmpb
cmc
pop
imul
pop
stc
add
mov
in
cld
test
mov
mov
in
pop
divl
cmp
push
aam
loope
outsl
adc
jne
mov
or
xor
sub
scas
mov
stc
jnp
mov
rolb
fldpi
mov
add
cmp
in
mov
xor
add
notb
mov
test
xchg
jp
cmc
mov
xor
push
jne
ret
ret
imul
les
mov
xchg
fsubl
popf
jbe
loopne
adc
pushf
mov
and
cmp
fists
jnp
stos
outsw
mov
sarl
iret
adc
xor
xchg
and
push
fisttps
cmp
pop
push
cmp
iret
sahf
cmp
popf
fsubr
push
xor
int
lock
andl
test
cmp
mov
mov
stos
cld
shlb
dec
cs
push
push
ja
xchg
mov
jl
push
dec
xor
jb
or
lcall
roll
das
sub
cld
roll
hlt
inc
xchg
dec
lock
out
push
push
lea
cmp
dec
in
push
adc
jne
sbb
sbb
pop
je
add
shlb
pop
pop
bound
mov
test
cmp
inc
cmp
mov
sbb
jb
xchg
test
cmp
mov
or
ja
data16
mov
add
ljmp
xchg
xchg
add
js
push
into
push
mov
lret
mov
fistpll
cmpsl
jns
jle
xchg
cmpsl
cmp
cmpsb
cwtl
sub
and
xchg
push
or
sti
adc
fisttps
pop
out
arpl
push
push
cmpsb
cmpsl
pop
or
pop
dec
dec
popa
rcrl
jle
push
jb
loope
bound
jecxz
or
xchg
lcall
fdivrs
addb
movsb
ret
rcr
mov
test
fbld
icebp
push
push
or
mov
push
insl
jge
pop
sbb
push
imul
ljmp
xlat
lret
dec
mov
loopne
mov
jbe
sub
fadds
xchg
mov
in
mov
or
xor
icebp
sub
mov
mov
subb
mov
ret
mov
fdivs
dec
mov
sti
lods
sub
or
arpl
cld
adc
sbb
jge
add
enter
loop
test
rep
lock
mov
and
jge
repnz
cmpb
inc
mov
sbb
scas
sbb
hlt
nop
or
mov
mov
aaa
movsl
sbb
mov
popf
xchg
xchg
jnp
fnstsw
fnstenv
push
push
mov
pop
mov
cmp
sbb
out
test
pop
lods
jno
sub
fisubs
dec
and
movsl
in
imul
xchg
outsb
lds
decl
js
xor
push
xor
in
cmp
fcoml
jae
mov
or
pop
or
inc
inc
andb
in
cli
pop
mov
lods
xor
imul
scas
imul
cmc
fisubs
testb
push
aaa
or
inc
cmp
jo
lret
sbb
jmp
fidivl
test
mov
in
cmp
test
mov
pop
repnz
jg
xchg
mov
test
push
scas
mov
out
pushf
and
sub
cli
aaa
jbe
repnz
gs
outsb
in
jmp
in
sub
jo
int
xor
sti
aaa
loopne
add
cmp
xlat
dec
fimull
push
mov
ficoms
hlt
test
lret
leave
sbb
xor
sub
outsb
shl
xchg
pop
test
int3
lds
out
sub
and
shll
jge
dec
mov
push
jge
sub
mov
cltd
sarl
jg
sub
cmp
pop
dec
sti
jmp
dec
mov
sub
repz
in
les
dec
fimull
push
push
jo
test
sbb
jp
mov
jmp
sub
mov
loop
push
jns
es
and
add
or
adc
jo
push
jnp
arpl
push
in
mov
sbb
mov
icebp
sub
jnp
cmp
pop
fildll
leave
enter
sbb
mov
lods
jmp
stc
scas
hlt
rclb
pushf
leave
xchg
push
lock
lods
add
inc
out
cmp
sahf
xchg
jnp
sbb
loopne
scas
or
xor
scas
push
pop
adc
scas
pop
nop
pop
std
pop
cltd
je
leave
clc
pop
mov
cmp
in
sbb
xchg
jecxz
mov
xor
inc
insl
xchg
mov
xor
fcompl
outsl
add
mov
jo
push
jmp
and
xchg
test
xchg
mov
movsl
mov
sub
cld
push
daa
aas
fs
mov
stos
mov
popf
push
fstps
sub
xchg
xchg
sahf
mulb
lea
mov
cli
dec
inc
das
sub
data16
and
mov
ljmp
incb
ljmp
pop
inc
in
adc
mov
cmpsb
jno
scas
push
cli
dec
add
adc
push
or
insb
in
subb
or
stos
fsubrp
scas
mov
sbb
cltd
xchg
cltd
jns
jp
lcall
cld
dec
icebp
adc
add
xor
les
sub
in
add
push
mov
sub
outsl
arpl
xchg
aaa
addr16
cld
jg
cmp
sbb
sbb
clc
ret
pop
filds
adcb
shlb
in
xlat
mov
mov
push
orb
cltd
xor
add
fdiv
fwait
cmp
jae
lea
sbb
movsb
loope
shr
jno
dec
jg
sbb
pop
cltd
pop
add
jp
cld
shll
imul
loope
pop
cld
scas
andl
fwait
daa
fdivr
and
fwait
popa
out
add
xchg
stos
stc
fs
cmp
pushf
out
js
dec
sti
daa
or
push
imul
popf
test
lret
dec
add
add
pop
jno
leave
in
out
xchg
das
xchg
pop
cmpsl
adc
inc
push
inc
dec
mov
xorl
cmp
clc
jmp
popa
jno
push
cmp
jno
daa
inc
xor
and
call
daa
jge
mov
cmc
dec
popf
in
imul
push
mov
fucompp
jb
aad
mov
pusha
cld
scas
push
jno
loopne
out
pop
aaa
lea
ljmp
xchg
cwtl
daa
jmp
test
mov
xchg
xchg
fiaddl
jns
mov
mov
ret
stos
mov
inc
nop
adc
inc
xor
push
xor
imul
dec
push
in
pop
rcr
add
je
mov
mov
movsb
lcall
lods
outsl
into
testb
lods
cltd
pusha
clc
pop
cmp
add
dec
stos
popf
lods
add
sbbb
push
and
outsb
sbb
vaddsubps
add
cmpsb
loope
call
xchg
sub
enter
repnz
add
push
fisubs
or
mov
int3
dec
out
daa
out
jns
test
flds
mov
sbb
and
mov
orl
jbe
ja
mov
loop
cmc
jle
pop
sahf
inc
rorb
xchg
pop
cmp
popa
lods
inc
cwtl
insl
stos
not
sbb
xor
sbb
xlat
data16
xchg
xor
cmp
je
fcoms
mov
mov
scas
lods
hlt
inc
ffree
aas
mov
add
insl
jge
adc
mov
jnp
mov
mov
mov
dec
cli
pushf
cmc
adc
fcmove
mov
inc
stos
insb
stos
adc
cmp
rcll
loope
fildl
aad
pop
test
in
jo
out
iret
insb
adc
push
fcompl
jne
aas
xor
mov
sar
flds
dec
inc
cltd
inc
fadds
cmp
enter
in
loope
andl
jecxz
pop
adc
mov
std
cmc
pop
mov
in
in
lcall
pop
add
push
lcall
xchg
push
add
inc
aam
jae
imul
inc
out
nop
add
add
dec
ret
stc
pop
or
sub
cmp
push
test
outsb
subb
mov
call
imul
pusha
xchg
mov
push
dec
insb
fdivs
add
pusha
xchg
sbb
push
sbbl
mov
mov
ds
add
repz
adc
dec
lret
clc
dec
sbb
pop
in
xchg
push
mov
xor
sub
lret
and
int
sti
fsubr
pop
push
mov
and
imul
fistl
subl
mov
cld
and
inc
add
xlat
add
adc
pop
push
ds
xchg
dec
sarb
inc
jl
and
mov
hlt
pop
addr16
clc
cmp
push
les
lret
fsubrp
or
xor
dec
nop
sub
je
mov
push
xorl
test
jecxz
test
arpl
cmp
mov
jl
ja
dec
repnz
sub
stos
xor
loopne
jnp
mov
lret
mov
stos
and
lea
test
xlat
or
jmp
and
hlt
cmp
les
lahf
inc
push
rorl
fwait
push
ja
inc
add
cmpb
or
aas
popf
stos
frstor
xchg
mov
decl
cltd
or
pushf
xor
in
pop
dec
add
add
lcall
jge
or
xor
pop
inc
cmp
sub
jne
fdivl
push
repnz
repnz
or
jnp
mov
pushf
imul
cmp
and
fidivl
loope
cmpsb
jle
roll
jb
scas
jno
shl
flds
xor
fcoms
xchg
xchg
repz
sarl
jo
dec
loope
orl
ljmp
in
xchg
push
inc
test
mov
jae
inc
jne
dec
mov
push
jns
ja
popa
jne
jae
and
cmp
lahf
cmp
push
adc
jle
mov
mov
test
mov
sbb
mov
iret
and
sbb
dec
pop
push
cltd
sbb
and
ds
lock
mov
pop
out
push
push
pop
and
in
fcmovne
fucomip
xchg
mov
adc
mov
add
push
mov
jge
push
inc
rcl
pop
pusha
cmp
dec
sbb
lds
fnstcw
mov
mov
push
dec
mov
cvtps2pi
ss
in
aaa
sti
and
pop
daa
inc
sti
loopne
cmp
fadd
push
mov
push
icebp
pop
cmp
pushf
cmp
in
mov
scas
mov
movsl
add
cld
popa
inc
sbb
sbb
fdivrs
or
clc
cs
inc
sub
sub
fnstenv
pop
add
dec
pop
rcrb
pop
inc
je
aam
nop
and
mov
adc
imul
clc
add
call
cmpsl
divb
mov
pop
repnz
fmul
test
sbb
mov
daa
out
jns
adc
fisubrs
sarb
dec
mov
mov
xchg
mov
cwtl
mov
cmpb
imul
stc
mov
outsl
js
push
sub
ret
shlb
loope
jle
ret
call
xchg
sub
scas
repnz
jne
stc
push
or
push
and
outsl
dec
mulps
ret
clc
lock
bound
mov
popf
xlat
shlb
js
fnclex
add
cmp
push
xor
nop
ds
jmp
inc
adc
or
adc
aam
test
mov
iret
mov
jns
and
mov
mov
mov
jmp
nop
rorl
pop
and
push
and
cmp
pusha
jle
jno
sarl
loope
xor
mov
movsl
std
arpl
aad
fnstsw
mov
in
jbe,pn
jmp
and
adc
inc
cli
dec
adc
mov
mov
dec
fldcw
mov
leave
bound
pop
inc
jb
add
ss
stos
or
rcll
inc
jbe
mov
das
icebp
aaa
dec
pop
mov
inc
inc
out
pop
ret
leave
jecxz
daa
push
adc
rcl
add
rcll
cli
pushf
into
test
mov
movsb
call
lock
xchg
jns
sbb
pop
and
xor
je
mov
or
xchg
arpl
outsb
cmp
jl
dec
ficoms
repnz
dec
loop
js
push
sahf
sbb
in
fldl
add
aaa
mov
gs
xor
or
cli
xlat
rorl
loope
es
and
push
cli
dec
inc
push
repnz
cmp
in
mov
push
loopne
lahf
addr16
sti
mov
gs
xlat
sub
mov
test
adc
cltd
out
popf
repz
jno
cmp
jl
mov
lock
cmpsl
push
imul
adc
jb
data16
cmpsl
xor
mov
add
pop
and
mov
test
sub
mov
mov
int3
lods
sbb
fcmovnb
inc
push
cmp
iret
lock
jmp
jb
add
test
nop
aaa
push
dec
push
sub
pop
out
fsts
fwait
or
push
addl
mov
enter
mov
mov
outsl
push
jmp
lret
or
or
test
cmpsl
xchg
sbb
aaa
fists
adc
pop
lock
add
call
add
add
dec
iret
mov
mov
pavgw
rorb
jmp
imul
mov
leave
data16
add
mov
jg
loope
push
lea
les
mov
ds
mov
mov
mulb
shr
xor
add
inc
rolb
out
jmp
fdivrs
jecxz
add
adc
das
jge
cmp
scas
xor
mov
in
shl
lret
push
push
inc
addb
imul
mov
inc
lds
cmp
aam
pop
inc
cmp
int
sbb
cli
in
push
call
xchg
jae
leave
push
test
jno
fnstenv
cmp
cmpsb
dec
pop
mov
sbb
aaa
int3
cwtl
test
mov
sub
insl
andb
pusha
inc
rcrl
sub
or
push
and
sub
stos
mov
xor
or
orl
gs
orb
out
aaa
loop
sbbl
and
in
insb
test
push
mov
pushf
xor
fs
js
jmp
fs
mov
stos
cltd
sbb
outsl
lods
push
loop
call
adc
add
pop
and
adc
push
mov
fs
lods
pop
push
aas
push
mov
inc
and
mov
sbb
addb
or
lods
data16
nop
add
mov
mov
xchg
movsb
jmp
inc
jae
insb
shll
add
cmp
jns
cmp
cmp
inc
in
ljmp
xlat
or
rcrl
xchg
scas
sub
xor
jl
icebp
push
cmp
jge
fists
int
popf
mov
or
sti
or
outsb
stos
jge
outsw
rorb
cmpsl
ja
cmp
pop
mov
push
std
jae
mov
inc
orb
es
xchg
pop
test
cltd
pop
sbb
jbe
mov
xor
insb
cld
fdivr
in
dec
bt
push
sahf
inc
push
test
jl
call
and
cmpsb
cmp
mov
in
out
adc
mov
push
fwait
mov
adc
sbb
in
push
push
pop
int3
icebp
cli
lret
ret
in
pop
movsb
push
pushf
cmp
je
sub
jmp
add
cld
mov
je
xchg
mov
cmp
mov
lock
sub
cmp
adc
test
je
das
int3
imul
aad
lods
mov
dec
loopne
mov
dec
int3
add
mov
add
call
in
xlat
mov
add
cli
jle
clc
inc
mov
mov
xlat
fiadds
popf
dec
jns
jae
fiadds
pop
test
lods
mov
mov
push
inc
insb
mov
mov
pushf
push
dec
mov
push
jl,pn
subl
adcl
mov
mov
sahf
dec
xor
mov
int
push
pop
lds
adc
pop
xchg
mov
pop
xlat
or
std
lds
pop
addr16
mov
jle
inc
inc
sub
jge
js
cmc
push
dec
sbb
pusha
scas
sbb
pop
jbe
pop
ss
inc
mov
dec
arpl
lahf
arpl
lea
cmp
pop
or
loop
pop
repz
stos
insb
inc
xchg
inc
in
daa
push
pop
dec
sub
mov
mov
call
mov
packssdw
mov
cmp
mov
push
mov
ja
mov
dec
pop
call
int
lea
adc
loop
jmp
add
fidivrl
popa
push
xchg
adc
and
and
test
icebp
dec
sub
lea
pop
mov
push
mov
jae
rorl
loopne
xchg
test
inc
decl
and
inc
ljmp
in
pop
ljmp
mov
test
inc
inc
xchg
and
add
add
pop
xchg
lods
jle
pop
mov
mov
cmpsb
push
mov
cltd
or
cmp
cmc
ds
mov
sub
in
mov
popa
adcl
and
ds
sbb
lcall
push
adc
sti
xor
lds
jle
adc
stos
push
test
xchg
mov
out
xchg
sub
fstpl
xchg
pop
lods
sub
and
add
and
arpl
stc
pop
in
push
and
adc
push
iret
push
push
and
add
or
aas
mov
data16
jl
or
xchg
add
xor
pushf
ret
aaa
mov
loopne
dec
adc
sub
lods
ret
or
xchg
nop
dec
aas
sub
adc
and
fs
insl
mov
or
inc
test
test
jo
cmp
test
inc
je
ja
enter
or
fcomps
and
dec
nop
mov
or
leave
push
sti
fs
pop
pop
pop
mov
add
lcall
dec
mov
call
pop
xchg
clc
scas
movlhps
mov
int
dec
filds
cmp
lods
lahf
cmp
cld
stc
cmp
sub
sbbl
sub
xchg
loopne
sbbl
jns
sub
in
call
pop
cs
lret
lret
jne
or
movsb
or
sbb
sub
gs
adc
imul
push
aam
aaa
xchg
sbb
sub
lahf
adc
inc
fs
loop
pop
ja
dec
xchg
inc
aas
jae
cmp
pop
sub
and
arpl
cmp
mov
imull
mov
call
out
popa
pop
cmpsb
pop
inc
mov
cmp
or
cmp
fmul
fwait
add
int
call
arpl
jb
adcb
lock
or
fldenv
dec
stos
jbe
mov
inc
pop
scas
inc
out
hlt
xchg
shll
xor
and
mov
arpl
xor
sarl
in
adc
enter
lret
mov
hlt
jge
lahf
int3
dec
jl
ljmp
pop
xchg
and
pop
nop
push
lret
mov
ja
pushf
es
cmp
mov
adc
aaa
or
sbb
leave
mov
jb
xchg
aam
or
mov
inc
out
mov
cmp
lds
insb
fisubrl
lret
jae
jbe
sub
aas
rcrb
out
es
xchg
das
pop
jno
cmc
inc
int
pop
pop
mov
mov
cli
aas
mov
mov
sub
stc
jne
sbb
jb
inc
ss
dec
daa
cs
and
imul
jecxz
push
inc
test
in
incb
lret
xchg
push
outsb
push
sub
ds
mov
mov
jb
aaa
and
mov
sub
cli
mov
push
test
loop
fdivl
mov
imul
daa
sbb
pushf
xor
scas
push
std
jo
dec
clc
xchg
cli
push
push
pmaxsw
mov
ljmp
addr16
jns
dec
aas
imul
icebp
shl
push
jae
movsb
jnp
repnz
pop
insl
js
push
cwtl
pusha
lods
xorb
jb
push
out
xchg
sbb
add
or
or
nop
sbb
sub
pop
das
shll
lods
jp
xchg
jmp
iret
or
arpl
stc
scas
cmp
or
pop
rcr
xorl
xor
mov
push
flds
xor
ja
cmp
stc
in
test
or
mov
pop
add
mov
inc
sbb
mov
inc
int
test
add
inc
lcall
pop
out
xlat
movsb
push
cwtl
sub
cmp
mov
jb
in
jns
jb
xchg
jge
inc
pop
inc
mov
pop
jmp
ljmp
int
lahf
dec
scas
cmp
inc
insb
in
cld
roll
shrb
mov
and
inc
ss
xchg
hlt
sar
in
jle
cs
sub
stos
out
jg
sbb
mov
push
lret
lock
sbb
inc
lods
pop
or
es
mov
jno
inc
pop
push
imul
lds
inc
mov
out
jl
push
jne
data16
outsl
fwait
clc
loop
mov
and
bound
push
adc
cwtl
jo
addr16
rclb
mov
movsb
lds
das
cwtl
lahf
rolb
or
iret
mov
mov
subb
or
mov
cwtl
push
or
cmp
fldcw
pop
cli
mov
lcall
xchg
xor
dec
out
fistpl
add
mov
lea
lods
or
and
sub
shrl
fstp
and
sub
clc
ret
push
mov
push
cmp
xor
cli
mov
sub
ret
pop
adc
pusha
inc
cmc
outsb
in
push
fsts
adc
pusha
sbb
cmp
fdivl
in
push
xchg
imul
mov
in
icebp
pop
or
loope
mov
aam
add
xor
int3
mov
call
sub
andb
imul
push
add
add
pop
cmp
dec
xchg
fdivrl
ret
outsl
jmp
stc
jmp
jo
add
mov
xchg
mov
fwait
mov
cltd
pop
pop
inc
mov
or
pop
inc
inc
lock
imul
jae
sti
mov
lea
pop
fildl
jp
inc
inc
adc
ret
push
scas
push
ficomps
lock
add
std
lcall
loopne
or
push
roll
mov
mov
add
das
xlat
pop
jge
fidivs
pop
adc
cwtl
cltd
mov
movsb
lea
xchg
cmp
lret
pop
xchg
outsl
mov
into
jl
cmp
lret
mov
xchg
bnd
pop
or
imul
lds
jnp
push
sbb
dec
add
mov
clc
cwtl
cmp
in
subb
imul
xor
xchg
cmc
inc
and
inc
mov
xor
movsl
pop
mov
jmp
push
lds
fdivrs
push
xchg
mov
adc
jno
int3
cmp
add
outsl
push
hlt
adc
cltd
sub
fdivrp
adc
mov
subl
in
push
call
add
in
xor
cmp
mull
push
xchg
in
ret
cmp
popa
pushf
pop
cmpsl
insb
sub
mov
lahf
sbb
xchg
jnp
dec
lret
mov
and
inc
mov
or
inc
popf
jle
inc
aas
outsl
xchg
jb
mov
shll
xchg
jmp
and
mov
xchg
test
cltd
fnsetpm(287
movsb
pushf
scas
sub
loopne
jecxz
mov
cmp
xchg
push
div
dec
cmpsb
movsl
loope
repz
cmpb
nop
xor
mov
mov
fiaddl
mov
fs
and
pop
fsubp
cmpl
incb
fimuls
mov
roll
mov
es
xor
jo
cltd
pop
js
cltd
xchg
pop
xchg
fwait
sbb
sarl
push
lcall
mov
cltd
jmp
jmp
mov
sbb
aam
mov
pop
xchg
dec
fwait
pop
shrl
mov
test
notb
cwtl
out
sbb
in
jle
add
add
jg
mov
repnz
ret
mov
sub
in
add
loope
sub
je
xchg
push
xchg
in
xchg
out
mov
sub
pop
sub
mov
cmc
fildl
xorl
mov
scas
cwtl
or
mov
sub
aas
push
or
cwtl
lods
enter
mov
andb
jo
fnstcw
lods
es
ss
jbe
scas
fsubr
stos
fmul
mov
adc
xchg
int3
out
decb
push
scas
aaa
mov
adc
fwait
hlt
icebp
or
mov
clc
loope
in
je
test
shll
inc
out
cmp
subb
lea
sbb
ljmp
shrb
cmp
dec
mov
xchg
insb
push
inc
lock
cld
out
dec
mov
pop
inc
popf
sub
in
gs
mov
pop
loopne
push
dec
cli
test
xor
pop
ljmp
fndisi(8087
add
sub
xchg
mov
hlt
je
jg
cmp
pop
push
ljmp
sub
jnp
mov
mov
push
xchg
sub
mov
inc
mov
rcll
movzwl
push
sbb
mov
out
lds
inc
testb
test
pop
jmp
sub
outsl
mov
int3
and
and
dec
ljmp
imul
dec
int
sub
out
sbb
mov
or
fstps
sub
movsb
xchg
jnp
add
mov
and
filds
mov
inc
test
fst
into
adc
dec
ret
push
repnz
xchg
loop
fwait
cmpsl
ror
mov
jns
mov
sbb
mov
popf
pop
fdivs
ja
ret
aaa
sub
call
inc
inc
sub
gs
mov
lret
popf
inc
xor
mov
inc
sarb
inc
mov
adc
mov
dec
loop
or
lods
cmpsb
jbe
sbb
cli
mov
mov
inc
imull
adc
cmp
jbe
jge
mov
test
push
fstps
pop
not
addl
cltd
test
pop
add
lods
in
jns
mov
hlt
lds
cmp
jl
daa
cwtl
xor
push
or
jne
lahf
mov
imul
sub
nop
sub
xchg
sahf
mov
and
test
mov
mov
daa
addr16
mov
jecxz
out
loope
cs
aaa
cmp
orb
fldenv
sbb
add
push
mov
add
ret
xchg
pop
pusha
push
es
dec
mov
inc
xchg
repz
add
inc
fnsave
mov
enter
add
pop
popf
rclb
cmc
rclb
dec
cmp
mov
loope
test
std
jo
out
xchg
mov
scas
jnp
shlb
jmp
push
or
loop
mov
inc
loop
push
adc
scas
test
jle
in
sbb
xlat
mov
cltd
loop
adc
sti
stc
ss
mov
push
adcb
cmp
xchg
push
inc
pop
mov
push
jecxz
mov
inc
clc
and
lds
icebp
js
faddl
pushf
call
dec
fmuls
jmp
pop
mov
lods
push
mull
ljmp
js
adc
movsl
jno
out
mov
mov
sub
jmp
inc
dec
xchg
add
clc
mov
mov
mov
stos
fwait
pop
js
mov
mov
cmp
mov
in
popa
and
mov
jb
ja
popa
shll
loop
xor
mov
daa
push
jg
repnz
xchg
pop
sahf
jae
pop
arpl
dec
jecxz
inc
or
push
mov
mov
pop
lret
in
shlb
in
ret
cmp
push
inc
es
add
lds
sub
cmpsb
outsl
je
mov
ss
cltd
mov
insb
jno
xchg
xor
outsl
inc
and
push
enter
sub
lahf
and
jo,pn
in
out
pop
mov
test
inc
inc
add
push
xor
lret
mov
mov
fistps
rcrl
mov
shlb
sarl
adc
push
lret
adc
insl
mov
leave
and
xchg
or
jne
in
or
and
push
cs
mov
adc
sbbl
lret
sub
push
push
dec
adcl
shll
mov
push
cmp
pop
out
jbe
ljmp
rdtsc
mov
in
outsl
test
ja
mov
mov
mov
repz
ret
rorl
mov
and
mov
lods
mov
cmc
and
add
xor
dec
into
or
gs
push
mov
mov
dec
stos
cmp
jb
mulb
mov
push
mov
pop
jle
shrb
sti
xchg
xchg
inc
mov
cmpsl
mov
add
cs
add
or
sub
jae
outsb
lods
push
mov
jp,pt
inc
mov
stos
add
push
sub
sub
addr16
pop
int3
aaa
aaa
cmp
loopne
mov
sbb
xor
inc
dec
icebp
sub
or
cmp
adc
adcb
fstpt
cmp
jle
aas
insb
repnz
lods
sbb
insb
arpl
inc
mov
cmpsl
lock
iret
in
gs
decl
ret
cltd
lock
xor
cmp
sbb
sub
scas
hlt
fcoml
sbb
inc
sub
enter
cmp
or
fisttpll
andl
lcall
jecxz
mov
stos
mov
aad
jne
mov
mov
dec
fistl
rorl
mov
cmp
loop
std
and
adc
arpl
ss
outsb
mov
or
fnsave
xchg
int
mov
pop
add
daa
ror
adc
add
mov
xlat
or
jg
sbbb
scas
je
adc
repnz
daa
out
sbb
dec
and
jae
je
add
andb
mov
mov
add
test
jb
inc
xchg
sub
and
and
push
scas
and
lret
jbe
and
mov
pop
mov
lahf
lds
into
ret
fdivrs
rcl
stos
ss
subb
inc
in
out
int
push
scas
sbb
xchg
push
std
inc
bound
xorb
data16
sbb
push
xor
and
xchg
outsl
xor
push
stc
pop
out
sbb
mov
fbld
dec
out
adc
push
mov
mov
adc
or
stos
ja
mov
or
or
push
lret
inc
int3
rorb
stos
nop
jl
lcall
bound
cmp
and
inc
pusha
jg
insb
pop
mov
xlat
lret
imul
jb
sbb
cmpl
in
mov
outsb
mov
js
test
mov
mov
pop
add
popa
mov
repnz
divl
adc
and
dec
dec
out
int
push
mov
popf
mov
mov
je
xchg
pushf
and
popf
jge
in
cli
clc
mov
mov
xchg
xor
aad
sbb
test
test
jmp
push
add
stos
rcrl
dec
mov
sbb
pop
dec
movsl
mov
shrb
les
jg
fiadds
and
idivl
pop
cmp
ss
sbb
stos
push
ss
out
mov
mov
imul
shlb
fnstcw
push
xor
fidivl
mov
pop
pop
jle
or
dec
or
das
dec
add
lods
daa
sub
inc
cli
mov
mov
int3
sbb
fcomip
mov
std
movsl
sti
mov
icebp
cli
xchg
lds
popa
in
cmc
push
out
ljmp
aam
xlat
sub
mov
ja
fsubrp
inc
frstor
jne
add
lahf
ficoms
sub
sahf
jne
fnsave
push
jp
adc
or
movsb
adc
loop
xor
aas
pushaw
or
das
icebp
inc
les
in
mov
dec
push
sub
repnz
sbb
add
popf
mov
les
pusha
loopne
mov
jns
push
push
jne
dec
push
pop
mov
push
xchg
sbb
dec
inc
popfw
adcl
or
clc
cli
loop
push
mov
shrb
bound
xchg
jecxz
push
cmpsl
sub
faddp
xor
xorb
data16
sub
out
jo
xchg
fs
mov
or
das
adc
mov
inc
pushf
mov
dec
or
jecxz
ret
jl
lods
ret
cmp
mov
daa
pushf
xor
movsb
jnp
fs
push
andb
je
inc
sub
push
inc
inc
mov
xor
inc
mov
mov
jg
sbbb
dec
and
jns
push
mov
push
loopne
cltd
mov
lods
insb
dec
aam
jns
mov
xor
pop
into
das
mov
test
and
mov
add
cmp
lea
sbb
fisttps
jno
xorb
enter
and
sbb
jno
pop
and
pop
lods
xlat
and
iret
sbb
lcall
dec
jns
pop
loop
stos
es
rcrb
xchg
cmp
xor
std
jmp
mov
bound
jbe
gs
mov
jg
sahf
mov
fadd
gs
cmp
xor
fwait
repz
jno
mov
rclb
xchg
je
pusha
leave
mov
js
addb
insl
or
fcmovbe
mov
mov
dec
ds
pop
dec
dec
stos
cmp
add
mov
aad
mov
ret
jno
das
cmpsb
xorb
adc
dec
cmp
and
scas
lahf
and
add
xor
jo
pop
cld
daa
adc
mov
mov
loope
lods
cmp
xor
mov
inc
ficoms
outsb
daa
xor
mov
push
cmp
popa
out
pushl
mov
pop
dec
or
push
xor
cmp
sbb
fdecstp
xchg
adc
add
and
shll
ja,pt
mov
push
in
xchg
mov
xorb
push
push
xchg
or
cmp
or
mov
out
outsl
test
movsl
inc
jmp
adc
mov
adc
rol
bound
js
push
cs
cld
jle
out
xor
cmp
cmp
add
jns
xor
mov
and
call
in
push
xorb
std
cmp
divl
mov
and
stos
aaa
push
or
sbb
and
sbb
lods
mov
aad
fs
sub
roll
and
cmp
mov
sbb
push
jnp
stos
jnp
rcrl
out
mov
lea
es
fistl
jecxz
outsl
or
in
insb
push
and
push
test
js
xchg
pop
adc
ficompl
adc
std
sbb
das
repnz
cmc
aaa
sbb
int
fadd
sbb
lret
cmp
lahf
out
sub
and
out
cmp
fidivrl
xor
jmp
xor
int
or
pop
inc
mov
push
lret
fildll
fisubrl
jae
inc
outsb
add
sub
rolb
js
cmp
faddl
loope
cld
je
subl
or
cmc
xchg
aam
fwait
nop
mov
mov
add
or
sub
cmp
mov
fsubrs
mov
cmp
push
xchg
movsl
cmpsb
out
loop
push
or
into
add
cli
repnz
stc
add
aad
push
or
fldenv
inc
pop
fcoms
ret
sbb
mov
mov
bound
xchg
dec
scas
fstpt
pop
xor
sbb
stos
repz
jmp
sub
leave
scas
mov
adc
mov
dec
test
push
inc
test
addr16
out
xor
shr
jecxz
adc
and
iret
mov
cltd
pop
loope
xor
pop
arpl
es
stc
inc
lret
push
shl
adc
cmp
aad
outsl
add
mov
mov
ja
ret
mov
sbb
jl
out
arpl
stos
inc
fldl
out
push
fmuls
push
sahf
pop
mov
bnd
xchg
out
jae
f2xm1
fcoms
pop
fstps
inc
jg
inc
movsl
sub
adc
sbb
inc
loopne
daa
dec
pop
mov
sub
fdivrs
fnstenv
xor
dec
or
xor
mov
insb
pop
sahf
or
cli
int
push
test
loope
rolb
mov
jne
push
pop
decl
lods
mov
xor
imul
xchg
and
sbb
pop
cltd
mov
sub
inc
adc
divps
cmpsb
mov
loopne
jb
inc
fistps
test
jecxz
mov
cmp
sub
cwtl
cmp
mov
test
shrd
cmp
xchg
call
xchg
pop
cmp
into
nop
clc
xorl
jmp
push
out
add
mov
xchg
ja
lds
xor
mov
mov
sub
fs
negl
and
aam
push
cmp
scas
ja
ljmp
mov
push
mov
jmp
icebp
mov
sbb
jae
add
sahf
jns
enter
or
int
out
dec
loopne
jo
jecxz
sbb
repnz
xor
xchg
mov
pop
int
call
add
enter
cmp
dec
call
imul
add
in
sub
jns
daa
and
or
int3
push
dec
mov
dec
sti
jecxz
sbb
sbb
jnp
scas
adc
push
cmp
and
jne
frstor
addr16
outsl
push
mov
mov
push
adc
pusha
mov
pop
push
sbb
insb
stos
xorl
push
add
negb
xlat
frstor
popf
mov
scas
push
pop
add
enter
imul
sub
jnp
mov
cmp
sbb
push
in
xchg
mov
aad
mov
sbb
jb
jp
daa
pop
push
pop
xor
rorb
dec
pop
xor
test
inc
daa
jg
leave
dec
scas
notb
mov
cmpsb
push
arpl
mov
add
pushf
aam
push
scas
je
sub
inc
mov
inc
ds
push
orb
lahf
filds
insb
pop
pop
addr16
stos
sahf
jbe
jge
insb
adc
jbe
mov
enter
add
sub
or
push
inc
dec
fisubs
fisttpll
xchg
lds
outsb
ss
je
sbb
mov
pop
pop
cs
mov
enter
adc
mov
sub
aad
lcall
mov
lret
out
rolb
xchg
les
and
ss
dec
leave
int3
or
sbb
neg
loop
xor
ficoml
out
cmp
lock
shl
inc
je
ja
mov
jecxz
subb
sub
loop
ja
and
int3
jno
xchg
sbb
in
lods
add
adc
inc
aas
xor
xor
mov
js
dec
jnp
add
test
and
inc
jo
mov
xor
mov
adc
jp
inc
test
mov
mov
rorb
push
mov
push
into
shll
lahf
mov
pushf
dec
ret
dec
dec
das
sbb
add
shrb
push
adc
pop
xor
lahf
shll
mov
lret
adc
sub
inc
adc
sti
cli
js
or
cmpl
pop
sbb
push
xchg
xor
push
stos
inc
aaa
mov
aad
test
andl
jmp
insb
xor
mov
hlt
jp
fdivr
cmp
sbb
aas
dec
leave
jle
or
mull
xchg
fdecstp
mull
inc
ds
mov
adc
pop
push
xchg
xchg
or
mov
mov
sti
pop
shrl
sub
cli
ss
mov
mov
in
pop
xchg
test
daa
xchg
repz
fidivs
xchg
xchg
push
cmp
fidivl
nop
gs
fimull
xor
or
stos
jge
push
xor
cmp
outsl
je
mov
inc
mov
jb
lea
xor
in
xchg
mov
rcll
mov
jo
mov
lods
and
cmp
in
sbb
mov
jne
scas
inc
sbb
repz
mov
fs
dec
sub
movsl
rcll
imul
lahf
cld
inc
inc
push
popf
mov
xchg
pop
loopne
out
hlt
fisubrs
jne
test
cmp
mov
nop
mov
xor
lds
push
mov
add
pop
in
cmp
je
mov
std
mov
mov
sar
adcb
roll
sbb
es
sub
mov
mov
je
jns
imul
xchg
jo
fisubs
push
into
adc
add
xchg
pop
and
lret
mov
dec
xchg
pop
add
outsb
jecxz
mov
lods
hlt
clc
inc
push
lock
loopne
xchg
or
fldt
arpl
push
icebp
add
mov
jbe
cmp
add
fadds
xor
pop
adc
aas
xchg
or
jge
sub
push
pop
ljmp
int3
add
sbb
lods
jbe
jnp
sahf
jle
aas
fldl2e
sbb
shrl
mov
inc
add
idivb
dec
jmp
adc
and
and
sbb
mov
mov
and
fsubrs
lea
hlt
stc
outsl
push
sub
mov
fmuls
in
push
sub
lret
mov
adc
cmp
push
rcr
les
in
das
adc
shll
xor
insl
adc
mov
out
test
je
mov
xchg
inc
jge
pop
test
lret
cmp
jnp
mov
mov
fistl
jne
push
and
nop
push
enter
and
cmp
bound
mov
lods
sbb
ret
push
subb
adc
lret
repnz
mov
or
xchg
lcall
push
sti
jge
or
ljmp
ficomps
pop
jg
sub
ljmp
sub
test
jmp
jmp
testl
cmp
sar
sarb
call
in
add
dec
cwtl
pop
mov
mov
push
inc
shll
jb
incb
div
xchg
mov
mov
adc
movsb
push
addl
outsl
shrb
ljmp
popf
cmc
lock
adc
stc
pop
clc
stc
jecxz
sbb
inc
jae
rclb
mov
cmpsl
repnz
movsb
inc
and
dec
aaa
loope
ss
push
lock
mov
aad
push
mov
in
push
push
sub
xchg
sbb
out
xchg
pop
shl
imul
push
sbb
sbb
das
inc
mov
mov
arpl
mov
hlt
inc
mov
lret
cld
cltd
movsw
popl
jb
xor
mov
adc
or
push
or
in
push
or
cmp
jae
mov
mov
out
cld
pop
rolb
mov
push
cmpsb
mov
xor
jo
adc
sbbb
mov
xor
ret
fisttpll
inc
mov
adc
xchg
cmp
in
jp
bound
push
add
sbb
testb
jns
adc
cmpb
out
pop
shll
sbb
dec
popf
jp
dec
out
xchg
push
jle
bound
jb
dec
inc
cmp
fldt
sub
es
shrb
cmp
bound
faddl
mov
imul
dec
cltd
or
inc
pop
add
ret
in
lcall
cmp
sbb
lods
pop
cmpsl
mov
jo
and
insl
fmull
into
xchg
mov
and
cmc
loopne
mov
les
fsubs
push
and
push
nop
les
adc
add
stc
cmp
notl
cltd
fidivrs
cmp
cmc
sub
test
push
mov
int3
fsubr
pop
lret
popa
mov
xchg
lcall
pop
mov
add
arpl
je
lret
mov
insl
mov
sub
xor
stos
dec
sbb
fidivrs
sub
testl
fmul
sbb
add
insb
ja
stos
mov
mov
sti
jle
jne
cmp
adcl
lock
fistpll
adc
xor
roll
cli
cmc
and
in
and
test
arpl
fneni(8087
mov
add
xchg
testl
jecxz
aad
add
or
sahf
stc
movsl
mov
pop
push
out
or
fidivrs
jle
sub
cs
inc
std
and
dec
push
addr16
push
lods
sub
pop
data16
into
dec
ja
jg
mov
stos
or
jl
incb
bound
incl
push
ss
imul
push
test
inc
in
das
or
dec
int
jl
jnp
ror
adc
dec
lods
cmp
mov
cmp
xor
inc
xor
sbb
mov
aaa
pop
add
bound
xor
ret
sub
push
sti
leave
rcrb
or
incb
xor
fists
sti
mov
cmp
fs
jne
jbe
fisttpl
out
xchg
imul
rcr
mov
rcr
mov
pushf
add
mov
dec
sbb
insb
jp
frstor
daa
popaw
jb
push
mov
insl
xchg
pushw
popf
xchg
loope
jle
repz
sbb
scas
push
jbe
mov
insl
push
es
in
add
enter
jb
addl
or
or
xchg
or
xor
xchg
mov
ret
hlt
loop
dec
jnp
cltd
adc
xchg
aad
adc
cmp
mov
popf
aam
push
xchg
ljmp
clc
shr
mov
sbb
push
lods
sub
jecxz
add
jae
loop
aaa
mov
cltd
popf
dec
mov
xchg
push
adc
cmpsb
mov
nop
js
jnp
fs
sub
mov
mov
cld
enter
mov
sub
jge
push
int3
xor
cs
rorl
xor
mov
or
cmp
gs
jne
jb
leave
lea
call
and
test
xlat
out
mov
push
xchg
cmp
pop
enter
pushf
shrb
mov
xchg
pop
repz
mov
mov
cmp
test
and
loop
jmp
inc
xor
and
mov
mov
push
divl
fcoml
add
popa
mov
cs
jns
aaa
xor
repnz
push
nop
enter
cmp
push
lea
idivl
sbb
inc
mov
xor
mov
mov
cmpsl
test
jne
xor
enter
lds
pop
mov
pusha
and
nop
shll
daa
cmp
push
fmull
jmp
mov
xor
lcall
in
lock
test
or
in
adc
mov
loopne
xlat
inc
add
cs
push
add
sub
xor
xchg
sub
sete
add
ret
shll
pop
mov
pop
dec
sub
push
pop
sbb
mov
dec
lock
test
mov
sub
ret
sbb
out
add
mov
scas
int3
mov
sub
jle
and
pop
mov
int
push
push
pop
imul
and
pop
dec
in
add
mov
cmc
fisttpll
adc
icebp
push
mov
or
je
sbb
mov
iret
inc
test
push
test
add
fsubs
test
pop
mov
shlb
lea
push
lds
imul
mov
mov
insl
out
mov
enter
pop
xchg
jecxz
rep
dec
adc
or
jle
mov
cli
sbb
repz
enter
out
into
divb
stc
jl
ret
add
hlt
dec
cmp
jge
addr16
addr16
sub
mov
lock
mov
inc
dec
loopne
sarb
ss
jmp
push
add
sbb
pop
aas
add
into
mov
add
xchg
push
ds
cmp
lods
in
mov
add
or
push
stc
xor
aas
fisubrs
aad
dec
pusha
fstpl
pop
out
in
pop
push
adc
lcall
les
inc
inc
adc
cmp
jae
cld
mov
sub
scas
stos
in
add
push
lea
ret
in
fnstcw
movsl
out
dec
sub
nop
mov
cmpsb
cmc
dec
stos
mov
xor
in
movsb
sar
cmc
fmuls
xchg
in
sarb
fwait
pop
cmc
sahf
das
shll
in
movsl
jns
xlat
dec
xchg
and
or
inc
pop
mov
adc
pop
dec
lret
mov
adc
stc
mulb
insl
cmp
xchg
sbb
mov
ja
subl
push
push
int
punpckldq
adc
mov
adc
les
mov
cmpsb
pop
xchg
call
rorl
mov
push
add
pop
mov
xchg
nop
sub
sbb
lret
test
jo
mov
adc
sub
and
push
jo
mov
mov
inc
dec
iret
mov
fnsave
sahf
xchg
xchg
jecxz
xchg
call
sahf
in
lret
mov
movsb
mov
lahf
push
and
sub
dec
testl
sbb
xchg
aaa
addr16
sti
int3
xchg
push
xchg
imul
or
shrl
jae
insb
mov
flds
jb
cs
into
pop
push
xchg
hlt
pop
je
mov
mov
mov
repz
je
nop
stc
dec
aad
stos
dec
dec
insl
sbb
push
mov
mov
test
mov
fsubl
add
jb
lcall
xlat
xchg
out
mov
push
pop
pop
dec
call
cwtl
adc
push
adc
sbb
push
xchg
push
dec
jns
mov
and
xchg
dec
and
jo
aam
lods
out
push
in
test
ret
aaa
mov
inc
movsb
adc
mov
jns
jb
adc
inc
add
xor
pop
sbb
mov
out
or
filds
addr16
adc
mov
jae
jecxz
xor
insl
frstor
or
inc
call
xchg
leave
adc
inc
imul
cmp
mov
mov
xor
sti
pop
int
stos
out
push
popf
js
cmove
pop
cli
insl
cmp
js
mov
push
mov
in
out
add
in
dec
scas
mov
push
or
xchg
sbb
out
push
and
int3
xor
xchg
mov
out
sub
sub
xor
inc
cmp
push
js
xor
cltd
mov
xchg
pop
pop
inc
or
pop
adc
dec
rorl
push
out
xor
xor
imulb
insl
mov
pop
je
idivb
in
pusha
xchg
or
or
mov
arpl
aad
daa
mov
mov
mov
push
cld
test
inc
cmp
rorb
into
pop
das
mov
nop
aaa
cli
mov
and
inc
adc
adc
jbe
sub
mov
mov
lcall
xchg
push
gs
inc
xchg
xchg
dec
pop
popa
mov
fstpl
cmp
push
negb
fidivrs
leave
jecxz
sbb
cmp
and
jp
lahf
inc
cli
and
sbb
mov
sub
enter
aaa
cltd
xor
lock
notl
dec
mov
scas
xor
pushl
es
inc
imul
pop
aam
mov
add
les
jmp
fldl
fnstsw
rolb
push
shl
push
lods
aam
imul
jmp
push
shrb
pop
fs
xchg
sub
orl
add
mov
stc
jno
sub
push
in
push
cmpsl
rolb
pop
jmp
lds
jne
or
loop
inc
sub
loope
adc
stos
adc
lock
adc
mov
jb
les
inc
in
lods
stos
xlat
icebp
daa
into
cld
int3
mov
adc
test
repz
or
cmp
ss
adc
or
sbb
les
jbe
xchg
mov
mov
imul
adcl
add
repnz
cld
inc
pop
stos
outsl
push
ja
push
nop
repnz
ja
repz
adc
aam
jb
sbb
ret
cmc
jecxz
and
fstps
pop
negl
pop
lods
andl
adc
or
arpl
jle
daa
nop
push
sbb
fs
dec
inc
xchg
add
fwait
cmp
sbb
dec
in
adc
push
jge
pop
inc
scas
aad
pop
dec
popa
call
mov
push
mov
and
repz
or
mov
sub
cmc
sbb
cmp
jp
pop
xchg
stc
mov
add
dec
add
ret
pusha
push
cmpsl
and
xchg
adc
xchg
cmp
push
std
cmp
sbb
adc
mov
in
in
mov
pop
pop
jne
es
xor
push
lods
cmp
or
xor
ljmp
jl
fwait
pop
lods
aas
jp
mov
lret
add
or
jmp
lock
jecxz
lret
rolb
lods
je
and
jmp
add
sub
outsb
pushf
jns
int
adc
sub
in
jns
push
dec
push
jns
jmp
mov
int
push
popf
mov
in
insb
jg
or
mul
or
loopne
and
inc
hlt
add
ljmp
sub
jecxz
filds
xchg
mull
and
adc
adc
pop
fidivrs
ss
dec
fmuls
in
xor
sti
adcl
test
aaa
adc
sub
rcrl
jo
mov
test
mov
pop
cmp
mov
int
fnstenv
xchg
out
and
popf
arpl
jl
pop
filds
xor
lods
dec
wbinvd
xor
decl
cmpsl
mov
jle
sub
rolb
arpl
inc
inc
cmp
sub
pop
cwtl
dec
pop
xchg
arpl
add
inc
ds
push
sub
andb
daa
test
push
stos
pop
dec
or
or
cmp
leave
lock
sbb
test
dec
dec
push
pop
aas
mov
ss
sahf
mov
sub
cmc
xchg
outsl
inc
in
or
roll
scas
int
fwait
imul
mov
pop
dec
ucomiss
push
lcall
push
lock
outsb
adc
movsb
or
data16
adc
mov
mov
ret
pop
cld
out
xor
outsl
jmp
fdivp
lcall
cmp
loopne
stos
fadd
std
jno
sub
inc
test
push
push
fbstp
vorps
das
cli
out
leave
mov
hlt
and
cmp
mov
mov
repz
adc
and
nop
xchg
push
fcmovnb
aad
mov
outsb
roll
sub
sub
ret
pop
inc
daa
jmp
pop
mov
out
js
jg
out
lahf
negb
dec
jno
test
outsl
mov
push
xchg
lret
cmp
out
pop
add
imul
jo
out
cmp
mov
adc
mov
rclb
mov
shrb
je
xorb
pop
jbe
js
push
jl
out
adc
push
and
push
fcompl
xchg
cmp
movsl
mov
neg
lds
scas
pop
jp
je
mov
and
lret
jae
mov
xor
mov
xchg
fistpl
gs
or
daa
loop
mov
aad
or
pop
xchg
jns
push
mov
mov
je
adc
jmp
js
in
cmp
sti
jg
xor
push
or
dec
or
outsb
sub
sahf
xorl
jle
inc
cmpsb
add
cmp
sbb
sbb
or
push
cltd
or
lock
and
sub
sbb
enter
aad
sbb
push
daa
mov
testb
mov
bound
mov
arpl
cmp
je
sbb
test
arpl
or
sub
xchg
or
shll
inc
lret
dec
outsl
push
cli
mov
jo
inc
sub
push
jns
data16
cmp
sub
aad
test
popa
lahf
cmc
xlat
pop
dec
sbb
dec
das
inc
filds
pop
jae
mov
jl
or
mov
jmp
jge
pusha
addr16
lret
and
je
jno
loopne
and
je
das
enter
lods
sub
arpl
mov
jno
push
gs
xchg
pushf
jg
sbb
dec
cwtl
sar
xchg
push
mov
lock
jle
inc
test
mov
inc
push
lret
ljmp
mov
fsubl
and
cmp
insb
or
jle
rclb
fnsave
sub
pop
mov
jecxz
pushf
adc
arpl
sbb
xorl
sbb
nopl
or
rclb
scas
adc
call
fnstsw
inc
hlt
and
and
rolb
push
aaa
test
fadds
nop
out
pop
adc
jge
test
insl
jnp
shrl
enter
mov
insl
hlt
cmc
in
fldt
pop
inc
shlb
sahf
mov
sub
aas
test
xor
cmp
cmp
jo
pop
out
stos
enter
sbbl
in
or
daa
xchg
ror
add
jbe
nop
cmp
call
sbb
cmp
lea
das
mov
repz
push
push
jb
aas
out
push
into
stos
pop
aaa
rol
adc
mov
icebp
mov
lret
cmp
mov
xchg
dec
jnp
xchg
stos
mov
sub
js
and
aaa
xchg
pop
dec
nop
sub
dec
and
aam
ss
cwtl
push
jno
and
pop
mov
and
mull
add
sbb
mov
sahf
daa
movsl
add
jo
jno
dec
push
lcall
jnp
push
mov
fistpll
aas
push
adc
insl
insb
jmp
mov
jg
les
mov
shlb
mov
scas
push
call
inc
pop
xchg
push
movl
push
sti
pop
ljmp
rcr
mov
es
int3
rorb
cmp
or
inc
daa
mov
bound
xchg
or
inc
push
cwtl
mov
xchg
sub
sbb
dec
std
dec
aam
sub
sbb
out
xor
push
push
pop
mov
and
mov
jp
mov
mov
mov
add
mov
cs
pop
adc
rcrl
and
mov
pop
lret
pop
fdivl
adc
aaa
int3
mov
jno
xor
filds
push
cwtl
push
sub
test
mov
push
sbb
mov
mov
fldenv
out
int
xor
mov
sbb
mov
xor
gs
mov
addr16
dec
test
cmovl
xchg
imul
inc
adc
push
dec
dec
outsb
movsb
lock
push
movsb
movsl
out
popa
push
sub
in
addl
jnp
pop
cltd
push
out
add
aam
jns
aam
dec
cmp
jae
pop
lret
lock
jl
add
aas
clc
mov
dec
out
jmp
dec
xchg
imul
aaa
pop
inc
pop
sub
rcrl
fdivr
bnd
shrl
xchg
push
ficomps
jge
cmc
jb
mov
fldt
dec
mov
add
pushl
lahf
mov
nop
jl
mov
nop
stc
or
add
fsubrs
ljmp
push
xor
xor
jle
imul
cmp
xchg
push
int
adcb
stc
popa
inc
dec
push
into
mov
xchg
in
fadds
ljmp
pop
dec
movsl
add
dec
sbb
fists
or
cld
test
or
nop
lret
or
outsl
add
mov
sbb
push
xor
repnz
outsb
vmovupd
jb
out
cld
jb
push
shl
xchg
loopne
aad
sub
cmp
test
mov
mov
fcmovb
jge
jg
xor
mov
fldcw
into
cmp
pop
out
sub
mov
pop
mov
mov
in
sbb
mov
iret
xor
mov
lods
sub
or
pop
jmp
shrl
notb
sbb
mov
xchg
jecxz
outsb
sti
and
cltd
mov
xchg
dec
sarl
jmp
sub
repz
scas
mov
sti
fistl
sbb
lret
sti
or
cs
loopne
lahf
sub
pcmpeqb
cmpsb
rcrl
test
mov
pop
dec
mov
dec
outsw
test
call
addr16
std
adc
ret
int
xor
cwtl
xchg
out
rcr
fwait
test
enter
and
jbe
cmp
loope
dec
lea
dec
ret
mov
mov
into
sti
int
movsl
jne
xchg
pop
ss
pop
dec
push
mov
add
sbb
pop
out
push
les
push
iret
out
xorl
int3
jmp
fsub
insl
add
fwait
in
cwtl
sub
cmp
outsl
pop
repz
dec
push
push
adc
xor
repz
test
add
shl
pop
jo
mov
in
bswap
or
test
lock
jg
movsb
jp
dec
stos
xor
movsl
outsb
xchg
add
xor
inc
sub
lods
or
outsb
stos
fcompl
dec
pop
and
pop
mov
dec
add
push
mov
push
jo
jl
ljmp
cs
push
pushf
leave
ds
hlt
fsub
push
and
add
sub
movsb
aad
cwtl
fbstp
push
insl
outsb
pusha
mov
pop
xor
punpcklwd
test
xchg
frstor
pop
ljmp
dec
das
pushf
xchg
mov
sub
ret
push
mov
and
sub
cmp
push
push
push
jle
fcmovbe
xor
insl
mov
data16
push
call
push
addb
mov
test
inc
sub
addr16
loop
hlt
pop
lock
stc
sti
cmpsb
or
mov
and
scas
test
jno
mov
sub
inc
test
xor
push
xor
fs
dec
mov
inc
or
jmp
stos
sub
fisttps
xrelease
ret
test
fwait
cmp
jb
and
enter
mov
pop
orb
inc
xchg
dec
adc
enter
repz
dec
and
sub
outsb
aaa
sahf
xchg
sub
or
addl
loope
and
cmp
bound
xchg
loope
lock
inc
lock
push
dec
mov
sub
xchg
sbb
sahf
mov
cwtl
add
cmp
and
jnp
bound
int
or
mov
push
inc
mov
nop
nop
xchg
test
push
sbb
repnz
and
loope
int3
fisubs
insl
inc
inc
int
ja
hlt
or
jbe
sbb
out
in
mov
sub
pop
sbb
dec
aaa
cs
sub
mov
sub
loopne
pop
dec
or
test
popw
das
jecxz
mov
push
addb
test
jmp
pop
ljmp
push
lret
xor
mov
lods
rorb
mov
daa
popf
or
aaa
fucomip
xor
xchg
mov
pop
in
imul
dec
sti
pop
mov
das
movsb
ja
jge
cmc
pop
sub
jle
mov
imull
subl
gs
ja
scas
inc
or
movsb
insb
or
js
cmp
mov
mov
push
add
jnp
dec
ret
xlat
mov
mov
cmp
dec
push
das
or
or
cmp
lods
inc
je
cmc
jae
out
daa
test
mov
vmovaps
sbb
pop
adc
rclb
adc
out
or
xchg
sbb
ret
fsubs
call
pop
imul
lods
jo
add
fs
std
and
fdivp
rep
inc
pop
out
loopne
mov
sbb
xchg
push
jno
add
out
fimuls
aaa
and
pushf
gs
xor
mov
jge
pop
mov
loope
cmp
cmp
mov
xchg
lods
xchg
rep
dec
mov
cltd
pop
shlb
insb
aas
fcmovbe
mov
push
cmp
clc
cmc
dec
lea
mov
pop
xchg
pop
andl
shlb
xorb
inc
or
pop
xor
jne
insl
fcoml
cltd
pusha
cmpsl
push
add
mov
push
inc
aam
jge
mov
jb
lods
aaa
cmp
movsl
insb
sbb
test
leave
sbb
inc
fnsave
lcall
les
rcll
jp
cmpsb
mov
sahf
push
cmp
xor
das
imul
imull
lcall
aad
adc
mov
sar
bnd
aaa
pop
cld
pop
mov
rcr
popf
mov
pop
insl
jmp
in
ja
ret
xlat
clc
dec
mov
pop
test
or
sbb
test
rolb
in
or
dec
jle
push
pop
xor
das
in
jecxz
test
sub
dec
loope
idivl
or
jecxz
out
inc
push
fbld
push
dec
stos
inc
mov
dec
je
aam
pop
and
jge
push
insl
stos
push
adc
or
xor
add
rcrl
cmpsb
lcall
stos
mov
mov
jnp
xchg
mov
in
not
in
jecxz
ss
push
loopne
div
xchg
test
lret
cwtl
and
mov
inc
inc
lods
pushf
cmp
pop
clc
push
ret
push
push
and
adc
movb
or
das
hlt
mov
ret
push
add
cmp
mov
push
sbb
loopne
testb
or
lcall
jmp
add
mov
clc
shl
pop
lds
scas
sbb
lea
rorl
sbb
nop
xor
out
shrb
cmp
rclb
rorb
inc
cmp
imul
movsb
jl
fwait
mov
fs
sbb
std
cmpsb
aam
imul
and
loopne
push
outsl
xchg
jb
push
test
dec
jecxz
or
pop
or
pop
xchg
scas
adc
cmp
inc
mov
iret
push
pop
mov
js
sub
and
dec
pop
and
cwtl
out
fcmovu
inc
mov
sahf
cmp
push
sarl
pop
jge
sbb
sbb
pop
mov
inc
imul
and
jle
dec
out
jmp
sbb
leave
nop
and
xchg
negl
xor
jge
and
call
or
mov
lods
mov
cmp
or
sti
adcl
outsb
in
roll
push
cmc
pop
sub
sahf
dec
push
fstpt
xorl
cmpsl
mov
stc
xchg
mov
lea
add
push
pop
les
outsl
push
mov
daa
xchg
pop
mov
xor
dec
xchg
or
xchg
fcmove
push
pusha
sahf
mov
in
push
dec
shll
std
mov
add
stos
push
cltd
mov
sub
fldcw
lods
mov
jle
push
push
cs
xchg
push
das
cmp
enter
out
shrl
roll
jl
dec
xchg
jne
adc
mov
in
out
xchg
int3
or
lds
inc
jmp
lods
mov
roll
push
cmp
jp
popa
pushl
push
insl
mov
jge
push
dec
inc
fnsave
sub
shlb
ds
fisubrl
ficompl
repz
xchg
push
pop
in
lahf
std
lea
push
dec
mov
cmp
and
ret
jno
mov
imul
das
push
jmp
into
fucomi
jo
gs
arpl
gs
sbb
mov
inc
inc
adc
fucomi
cmovno
sbb
orl
imul
call
push
push
jbe
cmp
jne
orl
mov
sbb
jo
sub
fcompl
pop
sbb
fldl
in
xor
test
sti
or
xor
outsl
jne
in
sbb
xor
mov
stos
test
mov
inc
mov
out
test
inc
mov
popf
adc
movsb
sti
dec
cmp
cmpsl
push
sbb
scas
pop
xchg
cli
lret
pop
push
insl
sahf
js
sub
xchg
into
insl
loop
push
push
mov
push
xchg
inc
lea
cmp
cld
and
pop
decb
dec
lret
pushf
xchg
inc
inc
pop
mov
cmp
jne
lds
lahf
xchg
popf
pop
push
cld
loopne
sub
push
xor
enter
mov
and
aad
cmc
add
rcrb
ret
mov
xchg
cmp
push
pop
sub
jg
filds
ljmp
aad
or
or
cltd
or
subl
cmp
fdivs
adc
inc
pop
xchg
stc
test
jge
push
dec
jmp
sub
aad
movsb
popa
xchg
leave
push
fdivp
jmp
test
adc
push
subl
pop
aas
xor
add
mov
mov
jmp
insb
jno,pn
mov
test
popf
mov
rcrl
push
into
push
out
and
xor
inc
mov
outsb
addl
hlt
lock
sub
int3
push
adc
mov
xchg
aaa
sbb
loop
adc
mov
out
dec
add
mov
push
xchg
scas
ror
sub
sub
jb
jle
dec
pop
imul
in
pop
in
lods
add
xchg
sbbb
or
enter
pop
inc
mov
sub
pop
pushf
inc
fcmovnu
sarl
cmpsl
cmp
sbb
mov
and
push
jns
pop
or
push
and
addr16
leave
in
cmpsb
aaa
bnd
mov
fldt
xor
cmp
popf
bswap
pusha
sahf
mov
mov
pop
rolb
cld
int
mov
push
sbb
adc
repz
jl
sbb
gs
lods
jns
fwait
or
add
push
push
add
sub
fnstcw
sbb
pop
aam
or
push
mov
pop
int
jle
mov
cmp
pop
jbe
loope
add
mov
or
and
pushf
stos
xchg
push
fidivl
sbbl
imul
xlat
sbb
out
add
std
mov
rcll
inc
sbb
xlat
lahf
lea
sbb
sbb
negl
add
xlat
sub
pop
lahf
adc
mov
rclb
roll
or
inc
ret
pop
lret
pop
adc
repnz
push
lea
pop
shlb
pop
insl
mov
jmp
dec
fistps
push
insb
in
or
xchg
mov
adc
aad
mov
pop
out
inc
dec
mov
push
mov
jp
xchg
xchg
dec
or
out
cmp
shll
les
ja
repnz
inc
adc
and
adc
push
cmp
fildl
adc
lahf
enter
fs
ds
xchg
xchg
xchg
xchg
xchg
xchg
pop
pop
addr16
jb
ret
ja
fstl
push
je
pop
xchg
aad
lcall
add
cli
jmp
mov
lds
inc
pop
hlt
cmp
les
stc
fbstp
stc
dec
cltd
pop
insb
jle
jb
xor
iret
sub
and
jmp
xchg
cmpsl
sarb
xor
pop
jne
insb
cmp
adc
test
loopne
lahf
mov
loop
xchg
mov
sbb
sbb
sub
push
in
xorl
movsb
xchg
add
xchg
sbb
inc
adcl
mov
inc
mov
xchg
popf
call
ja
mov
mov
cmpsl
fidivl
xor
loop
sbb
or
addr16
pop
int3
cmpl
shl
or
xor
fs
pop
mov
add
pusha
stc
dec
pop
xor
subb
out
mov
add
ss
rcrl
add
scas
or
movsb
push
inc
hlt
add
and
and
ret
sub
cltd
mov
cmp
add
push
adc
xchg
ficoms
imul
popf
mov
mov
or
mov
adc
push
in
push
xor
into
inc
shrl
sti
adc
dec
or
shll
imul
ljmp
sub
lods
xchg
pop
or
sti
ja
mov
mov
or
push
jb
pop
dec
cmp
inc
aas
ficoms
pop
sbb
pushf
mov
xlat
scas
and
xorb
in
jbe
dec
daa
pusha
call
hlt
fcomp
and
aaa
adc
test
mov
fs
loopne
dec
sbb
pop
jno
inc
jo
jne
rorb
push
mov
pop
jmp
lea
adc
lret
fisubrs
jle
dec
jne,pn
fstpt
jns
inc
xor
andb
rorb
mov
mov
notb
stc
lret
and
add
sti
scas
jmp
fwait
xor
push
fwait
fs
and
mov
jmp
adc
es
sbbl
sub
outsl
cli
sbb
xchg
outsb
mov
aam
leave
lahf
in
scas
lock
dec
mov
pop
mov
mov
lock
es
outsb
xchg
dec
clc
jmp
jns
add
push
xor
pop
add
add
inc
lock
les
and
loope
lds
dec
fisttpll
test
push
cmpsl
xor
sbb
xor
in
in
cmp
or
xchg
cli
and
mov
cmp
lods
filds
jno
push
sbb
cmc
sub
and
andb
loopne,pn
xchg
ret
out
and
xor
inc
pop
and
test
loop
mulb
nop
cltd
mov
push
xchg
sub
aam
add
movq
gs
arpl
inc
sahf
push
push
pop
in
in
cld
mov
add
pop
mov
gs
xchg
push
sub
sbb
loop
sbb
lret
mov
cltd
and
xchg
xor
test
jp
leave
outsb
cmp
add
sbb
out
mov
pop
adc
scas
pop
adc
mov
xor
scas
push
cld
into
cltd
add
movsl
cmp
cmpsb
aam
xor
imul
jge
mov
jbe
mov
mov
stos
ds
mov
jb
lods
dec
mov
shlb
adc
pop
mov
add
outsb
xchg
jb
and
sbb
push
outsb
cltd
inc
mov
xor
sahf
sub
xor
insl
aam
cmp
lock
daa
add
cmc
loop
cmp
cltd
pop
xlat
in
fnsave
stos
and
lods
outsb
sbb
cmp
or
lock
and
enter
push
test
pop
int3
pop
xchg
cmp
out
sub
ficomps
or
dec
mov
and
push
in
mov
cmpb
push
jecxz
ror
ja
cmp
bound
repnz
sbb
push
xchg
in
into
hlt
popf
mov
shrb
lock
nop
push
in
xor
clc
mov
inc
je
sysret
inc
push
or
out
sbb
jle
or
cld
jge
fdivrp
pop
arpl
les
push
jg
test
mov
jl
xchg
mov
inc
mov
loope
xchg
cli
js
jmp
sbbl
jl
mov
pop
andl
inc
pop
shl
std
mov
add
daa
fildll
stc
mov
dec
notb
frstor
enter
dec
adc
leave
sub
aad
mul
push
jecxz
xor
mov
sub
iret
jnp
fnstsw
push
or
lds
ret
out
sbb
sbb
jmp
repz
cmpsl
or
loope
and
mov
lods
mov
mov
fstps
push
dec
sub
mov
fucom
adc
xchg
popl
mov
inc
fsub
push
jns
imul
lahf
inc
outsl
adc
jns
insl
dec
xor
cld
ja,pt
dec
mov
sub
pop
cltd
jb
adc
jb
outsb
faddl
rcll
push
jle
pop
dec
cmpsb
out
adc
out
sub
icebp
pop
jp
int
push
push
inc
mov
or
dec
test
lret
adc
sub
loopne
popa
mov
cwtl
aaa
inc
insl
test
mov
mov
mov
mov
icebp
mov
icebp
fwait
sub
dec
mov
push
xchg
and
mov
jmp
inc
sbb
dec
add
cmp
push
sub
xor
cmp
dec
mov
mov
jmp
inc
adcl
iret
or
mov
movsb
adc
mov
dec
jle
mov
mov
fwait
mov
ret
pop
ffree
sub
jae
push
das
inc
cli
mov
cltd
cmpl
test
icebp
std
or
push
add
loop
subl
aam
pop
nop
mov
cld
push
xchg
cmp
int3
cld
out
cmp
sbb
mov
pop
pop
addr16
add
inc
clc
jne
xor
push
pop
js
mov
jns
fstpl
jo
mov
sub
fwait
or
out
inc
std
rclb
mov
and
sub
adc
sti
movsl
rcrw
pop
je
mov
mov
mov
out
sbb
and
inc
lods
out
lock
lods
push
repz
jno
mov
jae
adc
add
inc
jae
std
and
loope
push
rorl
adc
xchg
jmp
adc
scas
mov
pop
testl
push
sub
dec
jp
mov
push
mov
xchg
dec
or
jp
mov
pop
inc
cmpsb
je
push
push
push
pop
or
xor
pop
push
lods
or
stos
dec
xor
jne
out
clc
lods
dec
xchg
test
imul
fldl2t
push
or
mov
ds
ljmp
and
add
mov
sbb
ja
cmp
cmp
shr
xlat
push
dec
mov
xor
andnps
mov
testb
and
mov
inc
jl
pmullw
xor
and
inc
inc
aad
dec
sbb
lods
sub
lods
repnz
dec
inc
mov
loopne
cmc
and
std
imul
and
dec
fnsave
mov
inc
mov
adcb
mov
sbb
xchg
inc
popfw
push
aas
mov
adc
mov
add
stc
rcrl
adc
sahf
andl
cmc
ja
dec
cmp
xor
pop
aas
lret
stos
sub
push
decl
iret
in
xlat
sbb
jbe
jno
nop
push
dec
push
orb
jno
cmp
mov
mov
ljmp
aad
fmull
jge
imul
add
add
add
adc
sti
aad
add
xchg
xor
jmp
lcall
or
jae
jg
sub
insb
scas
dec
cmp
and
sub
sbb
xchg
pop
in
stos
xchg
xchg
adc
add
sub
aam
cmpsb
xchg
push
ret
and
out
and
inc
ret
iret
jne
jns
sbb
cltd
sbb
test
lods
jecxz
add
pop
pop
sbb
pop
and
adc
popf
shrl
sub
jbe
lret
ret
pop
adc
cmc
flds
sbb
or
mov
ljmp
out
cmpsl
pop
xchg
mov
mov
and
cs
pushf
lods
mov
cmp
popa
mov
push
mov
stos
fs
inc
pop
jae
xchg
fwait
outsb
ss
push
fnsave
add
inc
pop
fnstenv
enter
cwtl
pop
jnp
sbb
scas
inc
jb
pop
pushf
in
addr16
push
dec
pop
xor
pop
fs
arpl
ja
inc
xchg
dec
add
js
cmp
popa
icebp
add
sbb
inc
clc
xchg
test
pop
sti
lds
rorl
add
push
aas
mov
jp
ficompl
popf
jbe
mov
mov
sti
iret
inc
addr16
in
sbb
and
sub
sub
sahf
ret
mov
sbb
outsl
cmc
mov
aaa
inc
mov
lret
push
pop
repz
adc
push
test
inc
xchg
fucomp
xor
aaa
or
dec
les
push
jbe
out
sub
outsl
sbb
leave
mov
int3
mov
sub
ficompl
test
sahf
push
inc
mov
std
and
or
mov
jb
jl
lret
xor
in
cmp
test
loope
sahf
mov
data16
mov
or
vaddss
pop
push
and
sub
hlt
xor
mov
das
adc
jne
loopne
push
loope
sub
imul
mov
inc
repz
dec
add
fstl
jp
push
pop
dec
pop
push
mov
inc
sbb
js
mov
in
xor
loope
push
sti
xchg
pop
xlat
add
pop
cs
jecxz
fucom
bound
out
int3
icebp
out
lahf
xlat
out
pop
lcall
pop
movsl
cmp
and
adc
xor
push
dec
dec
js
pusha
add
sub
mov
pop
mov
mov
push
cmp
lea
imulb
in
jp
in
adc
push
cld
mov
mov
mov
popa
popa
shll
sub
mov
js
ljmp
add
push
push
test
sbb
xchg
inc
sahf
xchg
add
scas
xchg
mov
sbb
cmpsl
mov
mov
xchg
adc
mov
mov
clc
adc
sarl
jp
pop
cmpsb
add
test
sar
adc
popf
xor
lret
mov
fmul
add
jns
daa
repz
pop
lods
cmp
mov
push
loopne
test
mov
dec
hlt
push
mov
pop
sub
adc
inc
ds
scas
add
in
inc
ret
scas
js
xchg
sbb
jae
inc
jl
clc
lret
sarl
mov
cs
mov
inc
jp
and
test
lock
hlt
pop
jo
xchg
dec
cld
test
xchg
sbb
sarb
rcrb
dec
fisubrl
xlat
cs
adc
ret
cmpsl
out
cmp
inc
gs
out
lret
sub
add
testl
sub
sbb
xchg
shll
mov
sbb
push
adc
sbb
push
xchg
sbb
sbb
icebp
mov
jecxz
xchg
mov
in
push
dec
fs
fstpt
xchg
sbb
dec
pushf
mov
jmp
xor
into
add
rcll
cmpb
xchg
xor
push
add
rcrl
xor
sub
fldenv
lahf
sub
xchg
ficoml
sub
or
out
test
mov
into
js
mov
jmp
bound
imul
sbb
add
mov
xchg
por
lds
aad
xor
and
mov
mov
stos
je
stc
jge
aaa
les
mov
jnp
cwtl
xchg
xor
sti
dec
js
mov
xor
and
inc
cli
cmp
inc
aaa
pop
mov
lods
pop
rorl
dec
mov
adc
out
inc
jecxz
mov
push
inc
add
sbb
dec
dec
loopne
mov
daa
mov
scas
or
or
out
cmp
repz
and
add
ds
mov
insl
pop
sahf
mov
in
jg
fbld
movsl
push
movsl
fldcw
dec
mov
mov
cmpsl
enter
ljmp
add
xor
xchg
sbb
jp
repnz
jmp
in
pop
lret
xor
push
arpl
push
or
loopne
jbe
sahf
pop
mov
insl
pop
jbe
jg
xor
inc
ret
pusha
into
add
and
jae
icebp
scas
in
mov
nop
repnz
out
sahf
fstl
scas
lock
mov
repnz
fcmovne
aas
xlat
bound
add
les
imul
call
mov
xor
cwtl
pop
add
and
loope
shll
mov
enter
cmp
inc
je
inc
sti
mov
jbe
int3
test
fucomip
cltd
xor
addr16
popa
adc
sahf
ds
ss
push
and
in
mov
push
pop
mov
clc
cwtl
rcl
fisttps
dec
xorl
div
mov
sbb
arpl
int
dec
adc
xchg
cmpsl
xor
fildl
enter
or
iret
push
sbb
sahf
mov
mov
clc
lahf
xor
loop
mov
int
cwtl
sub
sub
movsb
aas
mov
sbb
stos
and
in
cmp
cmp
test
jae
pop
adc
inc
je
popa
ljmp
das
push
sub
cmp
fnsave
jno
lds
mov
scas
pop
push
mov
xor
sub
xchg
push
pop
pop
clc
push
xor
lds
repz
adc
jge
gs
arpl
mov
jmp
add
inc
xor
sub
xchg
and
or
roll
inc
push
jge
and
inc
xor
pop
xchg
lret
iret
pop
push
les
push
stos
in
sub
out
std
cmc
cmp
je
mov
adc
gs
inc
fwait
push
mov
imul
dec
rclb
inc
lcall
mov
notb
out
fidivs
inc
lahf
bound
movsb
in
mov
inc
cmpb
shl
lret
xorb
fst
mov
in
dec
mov
adc
sub
dec
jmp
jo
ja
nop
ss
sub
pop
shrl
aaa
imull
int3
push
inc
dec
insb
add
outsb
mov
adc
idivb
mov
mov
ja
xlat
orb
pop
dec
imul
and
mov
sub
daa
lahf
push
dec
or
mov
mov
test
jbe,pn
mov
push
dec
ret
shll
imul
xchg
cmpsb
out
aaa
xchg
and
insb
aad
outsl
icebp
mov
lods
cmpsl
xchg
insb
mov
fcos
mov
js
adc
add
inc
inc
test
jge
inc
sbb
sbb
lods
mov
aad
popa
idivb
pop
repnz
jne
xchg
rorb
shl
xchg
push
imul
fidivrl
repnz
pop
imul
sbb
sub
ljmp
jnp
add
add
lahf
xchg
dec
xor
test
mov
sbb
std
or
pop
out
out
fstpl
adc
xlat
outsb
push
and
jns
inc
test
ret
xchg
and
loopne
nop
xlat
push
stc
fcoml
arpl
aad
sub
gs
inc
iret
xchg
popf
test
ror
popf
shlb
cmp
popa
imul
movsl
sub
pop
inc
mov
js
mov
hlt
xchg
arpl
inc
incl
loop
cmp
or
cltd
xor
pop
pushf
popa
sbb
divl
sub
stos
adc
xchg
pop
or
daa
test
rol
mull
cmp
lcall
inc
push
mov
dec
pop
pop
data16
dec
repnz
mov
xchg
fs
adc
mov
cmc
jl
in
mov
dec
and
xchg
fwait
push
neg
in
mov
sub
xor
das
fnstcw
fucom
mov
mov
push
jge
mov
in
icebp
and
and
int3
inc
fisubs
inc
loop
sub
pop
xor
nop
push
dec
jge
jmp
mov
add
popa
push
push
popa
sbb
xchg
adc
xorb
push
jmp
icebp
jg
bound
push
sbb
fsubrs
mov
lock
lcall
mov
nop
not
add
imul
xor
rol
push
stos
mov
mov
sahf
popa
cmp
jg
and
cmp
xor
dec
mov
pop
aam
sbb
pop
daa
pushf
sub
ja
outsl
xchg
or
jl
xor
jb
xor
out
dec
imul
fstpl
push
xchg
out
jg
rol
ds
in
and
push
mov
es
dec
nop
lcall
lcall
ret
das
shll
and
bound
sbb
inc
stc
stos
inc
dec
insl
sarl
jge
fucomip
clc
mov
ficompl
sub
leave
imul
flds
push
sbb
pop
je
mov
mov
lds
push
adc
jnp
es
inc
popa
push
loop
outsl
sub
jo
push
inc
std
cmc
push
cwtl
mov
sbb
mov
je
inc
push
fwait
pop
popa
xchg
inc
imul
out
push
and
pushf
or
mov
cli
ja
jecxz
sbb
ficoms
mov
aad
push
shll
test
movsb
daa
cmp
mov
iret
aam
sub
push
mov
imul
jle
xchg
idivb
dec
and
sub
dec
sbb
mov
mov
xor
pop
jae
repnz
mov
sub
dec
sahf
aas
cmp
jmp
int3
push
add
mov
ds
xor
call
sbb
dec
pop
xchg
sub
mov
mov
push
mov
jmp
push
enter
subb
or
jne
push
mov
out
jmp
add
lret
mov
cmp
and
aad
scas
mov
std
jmp
test
dec
inc
dec
arpl
dec
std
mov
movsl
pushf
xor
mov
cwtl
sub
mov
incl
ret
jno
sarb
cli
cmp
jns
not
dec
pop
lret
cwtl
dec
hlt
mov
cmp
hlt
or
jmp
xchg
negb
arpl
adc
push
test
nop
shll
loopne
jbe
xlat
cmpsb
fstpl
push
leave
fwait
stos
cltd
inc
jmp
test
dec
adc
or
and
lock
scas
pop
cmp
outsb
adc
lret
cmp
enter
or
xor
cmp
and
add
cmp
negl
dec
adc
dec
and
ljmp
int3
mov
pop
jae
loope
movd
lahf
test
push
mov
mov
fisttps
andb
mov
mov
sarb
psubq
mov
das
adc
xchg
jl
xor
mov
add
mov
hlt
lahf
fucomp
xchg
or
sahf
sbb
or
fs
iret
cmp
sbb
mov
std
pop
push
jmp
sub
push
rcll
sbb
inc
mov
adc
out
mov
jns
shll
movsb
fisttpll
mov
mov
lea
sbb
popa
test
dec
jo
mov
sub
fildl
sbb
mov
xor
fldt
sbbb
sub
inc
xchg
bound
mov
push
ret
jo
mov
hlt
pop
dec
xchg
dec
jae
pop
shrl
lret
addr16
xor
in
dec
inc
int
push
add
arpl
sub
inc
dec
inc
mov
dec
call
je
aas
cbtw
std
push
jnp
pusha
lds
adc
push
and
pop
sbb
lret
mov
pop
cmp
aam
jnp
xor
movl
xchg
adc
insl
adc
sub
pop
dec
pop
jmp
xorl
imul
pop
in
loop
ja
push
sbb
inc
mov
lea
stc
dec
fimuls
addb
mov
out
fisubs
mov
dec
cmpsl
pop
sarl
clc
mov
sub
jle
mov
xorl
aam
leave
repz
test
out
popf
stos
add
lcall
push
in
inc
dec
fwait
ds
mov
mov
push
imul
xchg
push
fstpl
mov
add
add
lods
out
pusha
push
push
rcll
leave
xchg
push
mov
mov
hlt
repnz
dec
xor
or
adc
stos
sub
sub
or
lahf
flds
testb
push
or
sbb
xchg
movsl
add
or
scas
shr
sbb
add
add
notl
xor
es
negl
sub
xchg
pusha
mov
fcomps
ja
push
test
pop
sub
repz
cltd
xor
dec
and
andb
repnz
mov
and
push
int
daa
loope
and
data16
mov
sahf
shlb
mov
push
mov
scas
insb
arpl
or
ret
lds
lock
fwait
sti
xchg
ret
push
or
mov
or
xor
testl
sbb
xchg
xor
xlat
dec
aam
add
push
jae
imulb
mov
shl
inc
aas
cmpl
add
bound
cmpsl
fistpl
lods
cmp
dec
sub
sarb
daa
xor
loope
loopne
mov
jecxz
push
inc
iret
mov
out
inc
scas
mov
pop
mov
fwait
push
push
and
sbb
jo
xchg
stos
fs
dec
and
mov
lret
cltd
mov
rolb
add
jg
outsb
add
mov
inc
subb
stos
mov
lahf
ja
xorb
scas
lret
fisubs
test
lret
into
xor
sbb
dec
pop
push
out
mov
mov
pop
movsb
push
mov
std
out
test
test
out
mov
testl
dec
sbb
aas
dec
mov
pop
repz
sub
adc
sub
sbb
popf
subl
push
test
lahf
shrl
addr16
cwtl
xchg
icebp
ror
jecxz
jae
faddl
leave
repnz
push
es
popf
sahf
insb
hlt
jb
call
pop
dec
jbe
mov
push
dec
int3
test
imul
scas
pop
xchg
inc
cmpsl
mov
cwtl
xchg
lock
call
int3
mov
mov
lods
mov
cltd
adc
out
std
repz
pop
add
xchg
fbstp
mov
mov
xlat
stos
icebp
ret
aad
push
lcall
adc
loop
xlat
mov
pusha
mov
dec
les
mov
fisubl
mov
stos
sbb
test
mov
fadds
out
push
std
mov
test
mov
add
repnz
inc
or
scas
jmp
or
ss
pop
jl
shrw
mov
jo
int
fbstp
and
jge
roll
movsb
aaa
or
or
inc
rcrl
mov
ret
push
mov
push
and
pop
movsl
and
es
fs
lock
sbb
out
xchg
or
rorb
pop
xchg
xor
push
loopne
pop
dec
mov
mov
push
jae
mov
out
stc
mov
and
sbb
and
mov
addb
push
loopne
mov
aaa
adc
mov
dec
outsb
mov
lods
rcrb
jecxz
sbbl
and
cs
mov
and
bound
xchg
hlt
adc
pop
sub
es
lret
sub
sbb
pop
cmp
xor
pop
test
adc
push
je
or
push
jl
in
das
or
dec
add
stc
rcrl
sbb
sbb
pop
inc
ficompl
dec
push
and
cmp
dec
test
mov
pop
test
loop
push
dec
fucomp
jbe
add
xchg
adc
xchg
js
push
jg
adc
mov
cmp
sbb
iret
popa
mov
lock
dec
mov
xor
mov
outsl
push
dec
in
xorb
andl
leave
xlat
adcb
pop
pop
push
inc
inc
insb
jecxz
fcompl
cmp
sbb
add
push
mov
jbe
sub
jbe
iret
loop
es
mov
sub
lock
mov
mov
dec
adc
negl
and
lods
rcll
pop
xor
xlat
vmovhps
daa
push
push
mov
cs
cwtl
hlt
mov
xlat
push
or
aaa
sti
push
out
popf
hlt
lea
sbb
fsubrs
sbb
xor
lret
loopne
sbb
addr16
mov
lcall
mov
mov
mov
dec
xchg
aas
mov
popa
push
ljmp
int
lret
fwait
lods
cmp
hlt
jge
mov
sub
test
lahf
mov
jle
xchg
sub
ja
xor
in
inc
clc
in
jg
xlat
add
cmc
inc
mov
mov
inc
frstor
sbb
scas
sti
cld
inc
insb
sbb
xor
popa
fstpt
pmulhw
jo
in
jns
cs
and
jg
dec
gs
xor
xor
das
cmc
xchg
xor
adc
aad
sub
add
xlat
sbb
jae
lea
push
jl
dec
sbb
cltd
jmp
psrlq
xchg
cmp
push
mov
lea
xor
add
mov
xor
orl
and
clc
ja
or
xor
cmp
mov
dec
adc
and
jns
add
fldcw
or
outsb
ds
in
pop
arpl
lock
popf
pop
out
dec
mov
xchg
jne
aas
shll
push
sub
fnstcw
xor
adc
mov
aas
pushf
sub
fwait
or
mov
or
lds
ss
movsl
cld
xorl
stos
xchg
dec
jge
sbb
das
sarl
dec
push
enter
jecxz
stos
inc
add
mov
sub
mov
sub
mov
mov
jb
jge
adc
xchg
or
outsl
xor
mov
sahf
sub
adc
hlt
mov
ljmp
add
and
fwait
les
cmp
push
mov
cmp
imul
aam
xchg
lds
push
push
push
xchg
popa
jae
xchg
inc
inc
loope
ret
xchg
or
add
daa
push
xor
and
sbb
out
or
xor
rolb
bound
loope
iret
xchg
cmpl
lret
xchg
into
fidivl
sbb
cli
jb
cmp
cmp
pop
xchg
lds
repnz
cmp
scas
shrl
pop
dec
cld
inc
inc
pop
sahf
adc
mov
in
cwtl
xor
cmp
cmp
or
inc
arpl
cmc
sarb
add
mov
push
push
stos
cmc
adcl
dec
popf
mov
pop
pop
ss
pushf
adc
inc
push
or
push
inc
orb
xor
or
mov
in
or
popa
adc
nop
loop
pushf
inc
and
dec
insb
push
lock
test
mov
test
push
dec
iret
rep
sbbb
mov
fimull
mov
sbb
decb
sub
adc
dec
nop
sub
filds
xchg
and
clc
sahf
sub
xchg
lds
and
mov
movsb
loopne
sub
mov
addl
xlat
sahf
push
cld
pop
xchg
enter
mov
xor
mov
test
sbb
loopne
add
sub
jecxz
push
sbb
rclb
adc
mov
sahf
sub
sbb
shrb
and
lock
or
repnz
cli
ss
cli
int3
aaa
adc
xor
jne
mov
mov
lods
movsl
nop
xchg
loope
pop
iret
cmc
jbe
jns
mov
inc
shr
ret
or
dec
imul
xchg
lret
addr16
icebp
push
cmp
xchg
sahf
jne
and
out
pop
cmpl
and
clc
clc
or
in
adc
and
daa
and
fbld
cmc
stc
xchg
mov
mov
fdivs
jns
dec
jnp
fs
repz
lcall
push
pop
or
add
or
jmp
inc
rcpps
adc
pop
mov
xor
xlat
mov
jecxz
dec
push
xchg
inc
adc
sahf
fdiv
clc
add
sbb
mov
add
mov
adc
mov
or
dec
adc
sbb
xchg
das
xor
xchg
dec
clc
xchg
insl
testl
push
pop
xchg
in
push
push
fs
sahf
ss
push
cmpb
sarb
imul
cmpsb
mov
push
adc
mov
sbb
add
xlat
xchg
inc
inc
cmp
sahf
pop
stos
push
icebp
lret
mov
stos
stc
jae
adc
test
mov
mov
sub
pop
jg
pop
adc
jo
dec
test
jmp
lea
leave
fcompl
sbb
or
pop
xchg
fs
testb
das
call
shr
sbb
and
mov
xchg
insb
aam
fcoml
test
aad
pop
and
xchg
in
xchg
xor
je
neg
scas
enter
sbb
dec
fcoms
dec
gs
repz
imul
cmp
or
into
pop
push
or
nop
shll
mov
call
push
dec
mov
jne
xor
push
xlat
or
mulb
or
scas
ds
mov
jp
push
stos
or
mov
mov
lret
imull
fs
add
push
in
mov
adc
push
clc
sahf
xchg
int
icebp
xor
xchg
fiadds
fldt
std
ret
inc
insb
pop
xchg
cmp
add
jnp
lret
aad
jmp
pop
xchg
imul
cltd
inc
and
mov
fimull
out
ljmp
jne
or
es
pop
push
xor
push
jb
hlt
imul
mov
sbb
scas
lcall
hlt
daa
mov
xchg
dec
dec
clc
inc
xchg
pop
sbb
sbb
mov
cmpsb
cmp
int3
mov
push
inc
cli
icebp
dec
inc
pop
inc
lods
mov
dec
idivb
daa
incl
jecxz
mov
mov
mov
or
ljmp
mov
fld
mov
adc
jg
or
pushl
insl
cld
mov
push
xlat
es
shr
jb
bound
loopne,pt
mov
xor
cmpsb
xchg
push
jae
jb
subb
jae
push
jbe
mov
mov
imul
inc
cmc
inc
push
lahf
popf
loope
ret
sbb
mov
rorl
ret
je
dec
sti
in
jle
test
sub
sbb
je
mov
pop
popf
test
pop
sti
cmpb
outsb
xchg
gs
xchg
cwtl
and
inc
or
fnstcw
xlat
in
xlat
pop
test
mov
add
cmpsl
mov
mov
shll
pop
dec
mov
mov
test
aas
cli
cmp
fnstsw
adc
push
adc
cld
jle
into
aam
fstps
xchg
repz
les
jno
push
sub
inc
cmpl
sub
and
dec
pop
stos
enter
sbb
inc
push
ja
fwait
stos
fnstenv
pop
xchg
ja
js
dec
outsb
ret
mov
mov
mov
repnz
mov
nop
nop
or
jo
push
cmpsl
bound
pshufw
adc
out
push
sub
or
xchg
fiadds
out
mov
imul
rorl
lcall
push
mov
ja
das
stc
mov
and
sahf
mov
xchg
dec
test
ret
sbb
sbb
std
and
test
xor
inc
push
mov
add
mov
and
mov
cld
scas
out
jl
sub
andb
sub
ja
add
ds
adc
inc
loope
andl
inc
lcall
xor
push
mov
sub
jg
inc
pop
inc
clc
push
sbb
mov
mov
hlt
shrl
inc
out
inc
aam
mov
add
stc
jmp
mov
das
imul
out
and
fildl
inc
lret
pop
stos
rcll
pop
cmp
dec
enter
ss
dec
jns
lock
cvttps2pi
cmpsl
sub
mov
sbb
dec
xlat
shlb
push
jecxz
inc
andl
sahf
pop
cmp
mov
loope
sbb
in
xchg
cmpsb
or
xchg
sub
push
push
jmp
cmc
dec
in
or
shll
xlat
xchg
test
loopne
stc
paddusw
andb
pop
inc
cmpsb
cmp
xchg
cmp
xchg
arpl
push
cwtl
adc
cmp
sbb
sub
push
stos
cmp
and
test
add
cmc
inc
add
mov
arpl
or
testl
and
addr16
inc
inc
dec
lods
add
movsl
shl
and
roll
pusha
je
cwtl
pop
sbb
scas
lea
mov
repz
push
cmp
jne
pop
add
lret
or
mov
inc
sbb
sub
jo
adc
add
mov
jo
or
lock
stos
cmpsb
inc
push
int
xchg
mov
roll
out
stos
mov
sub
xor
mov
sbb
icebp
jnp
and
xchg
popf
pushf
mov
xor
lret
jb
mov
jae
dec
xlat
jb
das
sub
xlat
lods
pop
lock
push
lea
dec
pusha
test
dec
mov
ds
std
test
pop
jg
jl
xor
les
xchg
adc
mov
adc
mov
sbb
mov
in
std
sbb
jecxz
fsts
fidivl
rolb
push
inc
ret
cwtl
sbb
out
add
xor
sub
dec
sbb
push
je
jl
ret
sbb
fucomi
repz
jbe
mov
dec
fldenv
ret
aam
mov
insb
push
cltd
sbb
test
scas
pop
mov
lock
adc
add
mov
fiaddl
outsb
negb
bound
daa
mov
inc
and
jo
cmpb
dec
dec
andl
mov
jg
pop
xchg
mov
lds
pop
fs
scas
popa
sub
int
adc
add
test
out
in
nop
lret
sub
movsb
loop
test
mov
mov
jb
fs
xchg
pusha
mov
fidivs
sbb
inc
lret
push
mov
dec
aas
int
call
mov
mov
bound
movsl
inc
jle
pop
sub
and
sbb
mov
add
rcrb
cmp
adc
scas
shll
sub
xor
enter
ret
in
cmp
xor
cmp
shlb
arpl
movsl
mov
cld
cmp
mov
int
mov
or
clc
jno
cld
test
mov
je
roll
cld
jmp
pop
stc
scas
fldenvs
and
cmp
push
ret
flds
mov
int
mov
push
jecxz
push
imul
adc
mov
stc
mov
pop
shll
je
mov
dec
sbb
ret
cmp
xchg
js
mov
cmp
nop
out
mov
adc
xor
mov
mov
push
aaa
hlt
insb
and
pop
mov
xchg
adc
pop
lods
ror
jae
push
adc
mov
mov
pop
insl
scas
sbb
pop
iret
xor
inc
in
lret
dec
shll
leave
push
xor
das
or
shrl
pop
mov
xor
jae
sbb
xchg
push
rol
daa
cmp
add
sbb
and
inc
adc
fcmovnbe
popf
orl
sub
xor
js
dec
pusha
pusha
test
jo
outsb
orl
daa
bound
negl
pop
jl
in
test
jge
test
mov
inc
jae
jl
xor
or
push
lock
mov
js
jnp
cmp
xchg
mov
insb
inc
pop
and
mov
mov
mov
mov
pop
movsl
and
repz
and
mov
sbb
js
sub
push
data16
inc
movsl
push
add
cmpl
dec
popa
pop
out
stos
cmp
or
pop
cmp
xchg
adc
xor
notb
adc
jne
les
fdivr
jle
inc
lea
out
lahf
adc
pop
enter
daa
out
popf
out
cmp
push
stc
push
pop
ljmp
sub
add
std
insb
lds
das
xchg
aad
adc
iret
cltd
pop
testl
and
addr16
shl
sub
inc
cli
roll
mov
ljmp
fisttpll
and
mov
xlat
test
mov
sbb
into
mov
dec
rcrl
mov
push
lret
subl
pop
daa
pop
push
in
scas
jbe
inc
fwait
dec
jb
in
or
jnp
shlb
sbb
jno
test
sbb
adcb
es
xor
rorb
add
loopne
mov
popa
xor
inc
jecxz
mov
inc
test
cli
inc
fnstenv
add
sbb
lods
jmp
rorb
adc
lahf
mov
add
or
lds
push
mov
jb
push
push
stc
inc
fstp
in
xchg
fisubs
push
ja
flds
mov
inc
cmpl
sub
cmp
mov
out
aaa
add
inc
push
pushf
mov
scas
sub
sub
xor
mov
pop
adc
iret
push
cmpsl
cli
push
outsl
loope
and
xor
in
push
adc
je
jns
jns
rolb
xor
insl
sub
mov
icebp
neg
ret
mov
xor
mov
mov
aad
cmpsb
add
lcall
rcrb
dec
paddw
push
fcompl
jne
sbb
jns
mov
fcomi
rcll
xchg
aaa
stc
out
or
cwtl
xor
push
jecxz
push
push
inc
push
pop
sub
jp
xchg
test
lret
dec
and
inc
inc
jae
pop
add
cmp
mov
int
leave
shlb
aam
fiadds
fsubrs
cmpsb
out
mov
sbb
cmp
aad
bound
adc
into
adc
int
xchg
mov
xchg
jge
cli
ss
mov
push
mov
sarl
push
rcll
push
mov
cltd
icebp
xchg
in
cs
je
pop
pop
jg
inc
jecxz
jecxz
ljmp
or
cmp
or
xchg
call
stc
mov
xor
jae
sarb
xor
jb
lret
jne
push
mov
cs
ljmp
addr16
into
or
inc
push
gs
sub
pop
mov
or
xor
mov
ja
lcall
outsb
aas
jg
adc
std
mov
fwait
mov
push
mov
mov
sbb
dec
test
xchg
repnz
mov
stc
adc
lret
lret
inc
push
imul
push
pop
xchg
inc
pushf
inc
call
cmpsb
mov
cmp
mov
jae
cmp
jecxz
dec
es
leave
mov
pmulhw
call
and
ja
sub
dec
insb
sub
or
addb
test
bound
jecxz
push
push
sarl
cmpsb
adc
pop
loop
insl
lods
xchg
sbb
jo
xor
psubb
ljmp
and
iret
sahf
dec
adc
test
cwtl
jl
and
ljmp
jl
out
push
scas
lock
adc
je
stos
in
imul
mov
mov
jnp
dec
das
scas
mov
xor
in
aad
lock
loope
pop
push
sub
inc
addr16
ljmp
push
push
loope
sbbl
or
or
xchg
mov
jg
cmp
scas
mov
and
xchg
pusha
dec
loopne
jge
push
and
out
mov
push
adc
loope
dec
or
mov
lock
push
fnstsw
lret
push
scas
and
out
popa
and
sub
xchg
mov
and
push
int
stc
xorb
push
inc
ljmp
jb
jns
inc
jge
fwait
ret
scas
stc
mov
push
or
mov
mov
int
imulb
fisubs
jecxz
scas
gs
pushf
pop
and
test
sbb
xchg
decl
and
inc
add
roll
shlb
cmpl
gs
imul
sub
outsl
push
adc
sti
andb
fsubl
sub
adc
call
push
xor
xorl
push
sbb
out
push
add
gs
pop
popa
jmp
das
testb
and
out
pop
mov
pushf
loop
pop
imul
add
cmp
movsb
mov
lea
mov
jo
xor
mov
rolb
or
popf
aaa
inc
imul
lods
inc
cmpsl
arpl
fdivr
mov
mov
loop
icebp
sbb
stc
cwtl
rcrl
test
fadds
mov
cwtl
push
mov
push
jo
mov
loop
lret
shll
int
iret
mov
mov
add
push
push
inc
idiv
pop
inc
xchg
sbb
js
int
mov
push
add
stos
shrl
bound
mov
xchg
out
xor
in
lret
cltd
pop
push
mov
and
adc
inc
lret
mov
mov
insb
es
inc
xchg
sub
xchg
mov
std
pop
pextrw
mov
ljmp
daa
inc
lcall
es
inc
jl
mov
pop
cmp
fnsave
adc
test
dec
lock
inc
and
cmp
bound
inc
repnz
jne
das
and
divb
push
dec
fadds
shrl
jno
sbb
mov
mov
scas
inc
xchg
xor
je
mov
jne
adc
clc
nop
pop
push
cld
dec
lret
xor
add
fdivp
out
sub
cli
loope
popf
cmpsl
cmp
push
aam
adc
jmp
jbe
dec
out
inc
mov
lret
pusha
ja
sub
xchg
adc
xchg
setb
or
add
mov
js
push
je
mov
aas
cs
repz
mov
sti
pop
in
mov
adc
popa
out
lret
lods
jmp
pop
into
scas
fisubrl
sbb
mov
rcl
sub
jge
jb
ss
inc
xchg
test
sbb
mov
aas
add
and
mov
lret
pop
xor
jnp,pn
dec
mov
push
cmp
je
jl
push
xor
xchg
inc
repz
mov
fisubrs
mov
shlb
or
pop
pop
cli
in
dec
in
stos
fsub
or
mov
mov
dec
xchg
loopne
outsl
sub
mov
movsb
popf
or
cld
lds
and
rclb
stos
in
bound
popa
out
stos
and
test
mov
imul
cld
dec
jb
push
dec
and
arpl
or
je
and
mov
lods
fs
outsb
xchg
or
scas
int
mov
inc
cld
push
xor
or
popa
lcall
hlt
int3
bound
int3
inc
push
xchg
aaa
inc
adc
sbb
push
in
mov
cmpb
jecxz
in
inc
jmp
mov
cltd
fdivs
insb
xor
add
dec
popf
and
std
jg
mov
loop
ffreep
js
mov
imul
xchg
xor
in
adc
lahf
sbb
shrl
into
sub
push
jne
and
jp
dec
shrl
and
jo
in
in
jo
mov
add
push
jo
test
xchg
xchg
xchg
pop
and
in
mov
lret
lds
adc
sbb
jp
xchg
ja
hlt
addl
xor
xchg
outsb
mov
add
sbb
mov
je
add
dec
and
push
psllq
pop
sbb
cmp
mov
or
or
nop
sub
pop
jl
and
push
pop
leave
sbb
cmp
jns
nop
loop
in
push
lret
aaa
mov
jl
sub
hlt
pop
das
jl
mov
mov
out
xor
push
nop
popf
and
dec
sub
aaa
aaa
pop
mov
push
xor
inc
iret
xchg
in
test
adc
mov
pop
jbe
je
mov
je
pusha
mov
cmpsl
pusha
push
mov
into
inc
int
cmp
repz
insl
inc
leave
hlt
int3
jp
mov
rclb
loopne
js
insl
cmpsl
push
inc
cld
dec
xchg
inc
sbb
hlt
ret
jp
mov
fiadds
insb
inc
jnp
sub
stos
testb
xchg
push
fwait
xor
popf
les
scas
push
inc
push
mov
xor
dec
dec
xor
jmp
outsb
insb
or
inc
push
aam
adc
mov
out
mov
rol
mov
adc
and
pop
dec
out
addr16
sbb
push
adc
outsl
and
subl
mov
gs
int
mov
imulb
lea
mov
imul
xchg
scas
imul
sti
cli
or
mov
jle
loope
adc
mov
pop
popa
mov
lret
pop
pop
leave
and
add
jae
rorl
xor
jge
sub
bound
cmp
out
xchg
ret
sub
fchs
and
or
leave
jle
mov
push
dec
xor
and
fnstsw
das
fidivs
xor
scas
mov
mov
ror
std
push
cli
inc
pop
lret
or
outsb
cmpsb
pop
aas
cmpsl
push
lret
test
mov
adc
adc
clc
outsl
and
cmpsb
pop
sub
insb
cltd
push
jle
pop
cs
and
mov
call
ret
xchg
inc
jnp
js
cmpsl
inc
out
xchg
outsb
xchg
loope
pop
pop
inc
pusha
mov
je
inc
cmp
shl
xorb
dec
pop
xchg
inc
cli
out
pop
fisttpl
dec
out
imul
cmpsl
jg
push
ret
ret
lahf
and
scas
loopne
es
xor
clc
lds
or
pop
cltd
xor
je
lods
cmp
lock
fstpt
add
sub
dec
out
mov
xor
loop
pop
jb
leave
mov
lahf
fs
rcll
test
xchg
inc
insl
ficoms
mov
int3
jae
rorb
cmc
cmp
add
shlb
rorb
jle
pop
add
mov
mov
xchg
addb
pop
sarl
pop
inc
lcall
cmp
add
and
sub
addr16
push
pop
ljmp
cltd
mov
mov
inc
inc
les
jae
xchg
inc
repz
dec
lods
jae
pop
addr16
and
inc
mov
and
pushf
jnp
repz
push
sub
mov
mov
ret
sahf
ss
pop
movsl
mov
into
fdivrs
cltd
ds
xlat
shlb
rorb
mov
xchg
push
inc
or
inc
xchg
hlt
and
imul
mov
fcmovne
loop
mov
mov
inc
xor
idivb
xor
xor
mov
shlb
sub
loop
push
adc
mov
sub
push
pop
sub
stos
mov
adc
out
lock
pop
and
push
pusha
cwtl
mov
pop
popa
call
xchg
fimuls
popa
movsl
nop
imul
idivb
sti
pop
ret
dec
inc
mov
dec
xchg
sbb
pop
je
pop
fdivr
push
fwait
cmpsb
lock
mov
xchg
shll
sub
or
repnz
mov
cltd
cltd
test
outsl
inc
sub
popf
mov
test
nop
sbb
pop
or
icebp
or
lods
xchg
mov
cmp
test
daa
insl
ljmp
aas
pop
jns
lret
call
ret
test
pop
int
arpl
or
popf
pop
testl
jl
sbb
divl
shrb
fwait
dec
ss
iret
mov
inc
dec
push
outsl
jns
repz
push
aas
sbb
lea
fldt
pop
add
rcrb
xchg
push
daa
adc
ljmp
mov
or
xchg
xchg
in
ja
cs
in
nop
lods
cmc
ljmp
sbbb
gs
test
mov
ja
sub
xor
std
sbb
push
jns
or
pop
inc
insb
and
xor
std
push
test
inc
add
sbb
mov
jg
lcall
fsubrl
leave
clc
and
sub
stos
fwait
mov
or
jae
jmp
lret
push
mov
aaa
movsl
mov
mov
nop
jecxz
xor
mov
and
xor
cmpsl
adcl
and
call
jno
cltd
aas
mov
jg
stos
outsl
stos
fs
mov
xor
xlat
mul
adc
insl
popf
das
pushf
cmp
fs
clc
test
scas
mov
iret
pop
out
dec
js
inc
sbb
das
and
xchg
mov
daa
arpl
xor
pop
rclb
fiadds
cld
lret
sub
xor
movsl
subb
scas
mov
out
adc
pop
add
stos
push
fnstsw
sbb
mov
loope
lds
rol
xor
int3
sub
add
xchg
insl
adc
lock
lods
lcall
mov
mov
out
jns
out
mov
fdivr
fisttps
mov
fsts
ret
push
mov
hlt
inc
or
push
xchg
adc
cmpsb
mov
xor
shlb
sahf
inc
cs
lods
into
insl
loop
out
movsl
add
ss
sti
mov
mov
push
shr
fstpt
push
jecxz
push
faddl
imul
call
jecxz
popw
enter
xchg
mov
fsubrp
adc
lret
push
pop
mov
and
pop
je
pop
out
pusha
jne
add
cld
sbb
sbb
pop
imulb
push
jl
and
or
lds
cmp
pusha
mov
outsl
scas
or
pop
int3
aas
jg
repnz
ret
leave
pop
rorl
cmp
jp
or
insb
cltd
ss
or
add
dec
and
inc
repz
out
gs
loope
pop
cs
repz
cmp
xor
movsl
fstl
loope
imul
out
roll
lea
add
inc
cmc
popl
out
inc
xchg
rorb
mov
adc
push
pop
mov
mov
cmp
pop
sbb
or
sub
cmp
cmp
in
adc
lahf
mov
adcb
mov
push
mov
daa
addb
adc
insl
jmp
addb
imul
fs
in
mov
sbb
mov
fstp
nop
pop
movsb
into
data16
mov
in
xchg
fs
mov
js
icebp
inc
aam
scas
push
into
clc
aas
jns
lods
fs
lods
mov
inc
push
inc
xor
xlat
insb
sbb
cmp
jle
out
ds
mov
push
lods
out
and
mov
inc
adc
jg
jb
and
sti
cmp
lods
jb
mov
add
dec
cli
push
test
cbtw
inc
sub
faddl
xor
jg
scas
mov
movsb
cmp
adc
je
jmp
add
repz
mov
pop
mov
ds
out
and
dec
mov
test
jnp
add
nop
sbb
mov
and
jae
xchg
cmc
fsts
add
std
inc
pop
loopne
sub
stc
pop
or
or
inc
jmp
scas
loope
fcos
sub
sub
mov
lret
push
into
pop
test
adc
push
test
pop
in
push
inc
dec
or
cmp
movsl
lods
pushf
xor
adc
jns
dec
mov
hlt
lahf
dec
and
ljmp
xchg
xor
lock
jno
pop
fisttpl
pop
cmpsl
adc
jge
or
adc
mov
arpl
loop
pop
sub
jl
sub
lahf
sub
mov
jp
ret
adc
mov
xor
pop
call
sbb
imul
mov
mov
mov
popa
das
dec
arpl
mov
jnp
fistps
shll
mov
test
pusha
outsb
mov
lcall
addl
imul
pop
ret
xchg
leave
pushf
leave
dec
jmp
jle
mov
or
aam
xlat
orl
or
mov
jb
adc
push
sbb
fidivrl
push
jb
imul
movsb
jns
js
out
std
sbb
mov
cli
cmc
lahf
out
xor
enter
data16
ret
jecxz
repnz
cld
popa
insl
scas
leave
push
mov
mov
loope
sti
push
cmp
lock
push
int
or
in
inc
fildll
xchg
shlb
scas
scas
mov
daa
sbb
pop
in
ss
xor
in
cmpb
adc
movhps
addr16
add
rol
jmp
push
cmpsl
stos
popf
xor
xor
mov
xor
mov
out
int
mov
out
aaa
xchg
push
or
in
sbb
lds
xorb
push
and
shr
mov
push
push
adc
sub
ret
popf
jno
je
fwait
mov
setp
fmul
or
jg
dec
insb
or
sub
pop
call
inc
lods
out
push
mov
dec
mov
mov
mov
dec
aaa
adc
stos
cltd
cmp
subb
pusha
and
sbb
gs
je
push
mov
xor
aas
jae
in
jmp
pushw
loopne
mov
pop
mov
fs
or
push
xchg
jp
xor
mov
jne
iret
aam
xlat
jmp
jo
test
sub
xor
loop
lods
dec
push
cmp
cmp
repz
mov
dec
mov
jne
cwtl
push
repz
mov
mov
push
arpl
push
jmp
mov
js
ss
pop
adcb
insl
push
fcmovnb
add
mov
mov
dec
mov
les
mov
xor
mov
jnp
mov
cmp
dec
adc
jle
std
mov
pop
aas
in
iret
inc
dec
imull
cmp
xor
xchg
and
push
sbb
push
insb
enter
add
inc
leave
repz
andb
arpl
sbb
loopne
mov
cmp
loopne
pop
inc
in
imul
jb
adc
xlat
xchg
idivl
or
jbe
repz
stos
jl
mov
mov
mov
mov
test
jl
insb
popf
hlt
jmp
jnp
out
mov
pop
sbb
adc
sub
jno
stc
pop
je
addb
and
adc
dec
enter
movsb
cmp
lock
cmpsl
mov
mov
inc
ja
loopne
movsb
dec
pop
xchg
push
stos
ljmp
adc
fucomp
sub
mov
inc
mov
pop
xlat
adc
dec
aaa
and
or
bound
mov
jb
lret
testl
adc
cmp
test
dec
xchg
jnp
clc
pop
xor
cmc
fwait
or
dec
dec
xor
jmp
je
popa
add
test
les
xor
shrl
or
data16
pop
cmp
stc
shl
xor
pop
movsb
xchg
jmp
pop
mov
and
ds
pushf
pop
cli
jbe
lock
scas
arpl
cld
mov
pop
pushf
xchg
test
out
pushl
mov
divl
xor
pop
push
xchg
sub
inc
bound
or
mov
lret
loop
lods
fstps
shlb
mov
lds
movsl
loope
shll
lock
inc
xor
cmp
xchg
sub
push
inc
movsl
in
rorl
mov
inc
sbb
inc
rcl
pushf
repnz
sbb
out
cmp
mov
push
shll
inc
pushf
jo
lahf
inc
mov
cmp
adc
clc
push
fnop
mov
out
pop
sbb
imul
ror
xor
in
push
inc
mov
aas
sub
adc
insl
and
repz
imul
adc
jae
jb
sub
xor
aaa
pop
lcall
into
sub
xor
jp
test
lret
push
jb
pop
adc
jl
sahf
push
fldt
jg
jb
pop
pop
mov
std
push
sub
adc
sbb
sti
add
shl
pop
rol
subl
scas
xor
push
stos
bound
and
xchg
mov
rcl
and
mov
loope
test
xchg
inc
ret
notl
lcall
jge
stc
dec
xchg
imul
dec
outsl
shll
or
mov
or
xchg
shrl
jbe
shrb
inc
pop
data16
imul
pop
add
or
lcall
mulb
inc
sbb
inc
and
jbe
cmpsb
dec
push
jg
cltd
andl
popf
int3
push
xchg
jl
test
rcrl
dec
inc
aaa
sbb
das
cltd
dec
sub
inc
xchg
mov
imul
adc
push
ljmp
cld
fsubrs
add
addb
xchg
xchg
adc
inc
mov
outsl
push
in
add
stos
add
cmc
pop
lret
imul
jmp
add
fxtract
fstl
test
les
and
cwtl
xchg
sbb
stos
scas
or
lods
cli
je
sbb
imul
cmc
shll
lcall
popf
xor
loope
lods
vmovd
enter
inc
fsubr
and
imul
loope
add
push
out
in
inc
inc
dec
stos
dec
arpl
push
loopne
jno
mov
xchg
negb
insl
fmuls
repnz
sub
lret
jecxz
cld
mov
jmp
jmp
arpl
push
punpcklbw
jne
mov
leave
aas
dec
mov
adc
push
call
add
xor
add
xchg
jns
mov
sub
add
xor
jnp
mov
jp
aas
sbb
and
sbb
fisubs
adc
xor
push
mov
ss
sti
jp
push
in
xchg
comiss
sbb
xchg
and
xchg
sahf
loope
xor
stos
dec
scas
jnp
sbb
shl
loopne
add
lahf
or
mov
mov
or
xor
lock
loop
iret
inc
fistps
mov
les
cmp
es
clc
dec
enter
jecxz
int3
in
cmpsl
xchg
lcall
notb
sbb
sub
jo
adc
mov
push
sub
popf
stos
adc
sbb
movsb
dec
cmp
cmpsb
ljmp
stc
jo
push
mov
jne
sarl
mov
inc
hlt
mov
pop
and
pushf
les
or
mov
ret
adc
std
ret
insb
gs
sub
fnstcw
sbb
insb
xor
mov
divl
mov
mov
imul
adc
data16
orl
ret
gs
aas
push
movsl
xchg
test
and
mov
jo
add
dec
xchg
inc
pop
dec
iret
add
ror
pop
cmc
pop
xorb
xchg
int3
mov
or
xchg
mov
jl
pop
push
xchg
pop
in
rorb
jb
popa
cmp
push
xchg
xchg
mov
inc
adc
in
adc
in
insl
mov
in
jecxz
int
rcl
or
ret
into
cmp
jle
es
lock
arpl
jae
js
jo
dec
scas
mov
mov
mov
pop
jae
push
int3
mov
pop
imul
or
add
fwait
outsb
sbb
mull
fadd
sbb
rolb
mov
push
mov
inc
call
mov
imulb
push
jg
inc
lret
add
lods
inc
insl
or
inc
or
jno
add
jnp
xor
sbb
xor
push
jne
cmp
inc
push
nop
add
outsb
sub
inc
and
ret
adc
das
lret
fsubrs
jle
bound
jae
outsb
std
and
lcall
and
mov
gs
cmp
hlt
scas
jecxz
xchg
dec
dec
jno
test
and
gs
add
mov
idivl
adc
push
outsb
xor
es
out
aad
int
pop
sub
icebp
mov
push
pop
mov
sbb
xchg
call
inc
inc
pop
sub
popa
push
xor
dec
and
cmp
sarl
cmpb
mov
push
fidivrl
setge
jnp
push
movsb
rclb
out
daa
sbb
gs
lods
sub
call
sub
lock
jb
lds
sahf
or
jb
jl
orl
jecxz
mov
push
jo
push
ror
sub
mov
sbb
fs
mov
mov
stos
or
scas
lock
dec
dec
int
out
pop
imul
movsl
fmuls
inc
out
add
push
or
repnz
pusha
test
in
and
lret
test
into
push
sahf
mov
mov
mov
xor
popf
ja
fisubl
jmp
cli
push
cwtl
wrmsr
lods
outsl
ret
pop
xchg
mov
jbe
jg
add
jbe
and
adc
mov
mov
jnp
sbb
enter
scas
mov
inc
mov
sbb
loopne
out
jl
insb
aam
xchg
movsl
out
pop
sub
sbb
sub
xor
stc
cli
mov
sub
lds
xchg
ret
sahf
arpl
pop
inc
pop
pop
test
rcrb
push
add
and
xchg
adc
jns
mulb
sbb
hlt
dec
mov
xchg
repnz
add
fs
xor
in
rolb
adcb
adc
pop
in
sub
shl
sbb
leave
ljmp
dec
jo
cmp
dec
and
push
add
push
fidivrl
push
cmpsl
mov
dec
push
pop
lret
mov
jge
popf
mov
movb
cmp
add
out
dec
fisttpl
out
jbe
mov
das
and
in
mov
adc
dec
cli
mov
call
push
fcoms
movsw
pop
mov
sub
bound
pop
inc
jbe
jae
dec
lods
clc
jne
iret
push
mov
sub
sub
fs
loopne
add
and
imulb
cld
shll
rol
mov
mov
and
inc
fdivrl
jl
ret
ror
cmp
shrl
ret
aas
cmp
push
cwtl
jmp
cmp
mov
jnp
testl
dec
hlt
in
add
sub
inc
in
sbb
sub
xchg
aad
int3
sbb
add
cmp
or
dec
fstpl
enter
int
add
mov
fnstcw
in
cmp
mov
mov
popa
sub
std
add
lods
cmp
push
mov
les
cmp
push
xor
in
stc
xchg
inc
movsb
or
jnp
inc
out
mov
mov
mov
fildll
movsb
idiv
dec
in
or
arpl
mov
mov
xchg
adc
pusha
sti
mov
ficoml
push
call
sahf
jmp
cli
xor
inc
fld
push
xlat
insb
or
aas
cwtl
mov
aad
aam
lods
add
addb
adc
jbe
rcl
adc
cmp
dec
and
les
fcmovb
or
xor
dec
call
cli
fdivs
mov
add
icebp
mov
mov
mov
lcall
movsl
lds
fldt
or
aam
lock
std
loop
sub
pop
sbb
add
adc
pusha
call
cwtl
movsb
add
stos
shlb
in
sbb
xor
aam
xchg
out
inc
outsl
lret
sub
push
mov
notl
jmp
icebp
or
adc
pushf
stc
stos
out
inc
loop
cmp
iret
cwtl
inc
out
mov
push
mov
daa
and
mov
dec
test
xchg
int3
aad
iret
rcll
sub
fwait
dec
sub
rcll
push
test
cli
aam
inc
js
fdivp
sub
jg
pop
shll
outsl
mov
cmp
xor
lock
cmp
frndint
adc
push
in
mov
push
div
cld
sbb
lods
xor
imul
jle
lahf
pop
out
cmp
pop
cmp
fwait
out
int3
scas
sub
jg
bound
mov
cmp
mov
imul
or
ret
mov
sarb
sbb
add
sbb
jns
int3
popa
xchg
inc
lahf
mov
adc
jne
push
add
scas
xor
dec
xchg
jno
jo
inc
cmp
pop
aas
adc
and
fldcw
inc
xchg
sbb
ss
pusha
popf
mov
cmp
add
fwait
and
sub
repnz
fnstsw
jne
xchg
jp
add
add
push
mov
insb
adc
xor
sbb
leave
add
mov
mov
ret
dec
test
add
xchg
push
psubusw
and
mov
ja
stos
shll
in
sbb
push
inc
pop
lcall
sbb
push
es
ljmp
popf
xor
cltd
pop
jle
dec
xchg
push
dec
sbb
je
ja
dec
ror
adc
shlb
je
cmp
mov
push
adc
in
adc
cld
imul
inc
stc
nop
push
mov
int3
and
push
push
mov
and
cs
push
cmp
mov
mov
xor
cli
cltd
in
mov
push
fidivrs
mov
xorl
inc
pop
dec
and
movsb
mov
incb
andl
mov
in
bound
push
push
push
sbb
fcomps
push
mov
sub
xor
jne
jl
in
sub
cmpsb
lds
cmp
xlat
or
sti
rcr
fbld
out
mov
and
pop
stos
jl
mov
cli
jb
mov
int3
cmp
rcrb
daa
dec
nop
sti
xchg
outsb
cwtl
fimuls
xor
lock
mov
data16
stc
sbb
movsl
xor
xor
fistpll
sti
jbe
cmpsb
xor
ret
add
sarb
in
into
mov
lret
sahf
and
xchg
loopne
sbb
ljmp
cwtl
jae
into
lahf
mov
cmp
int3
in
loope
sbb
mov
insl
dec
addr16
aas
ja
dec
jo
adc
mov
pop
lret
lahf
dec
mov
jecxz
jb
sub
jb
bound
jns
movsl
pop
ljmp
or
sar
stc
lds
push
xchg
jb
pop
mov
das
jnp
jmp
cltd
mov
xchg
mov
sbb
mov
stos
aad
and
pop
cmp
mov
divl
daa
orps
cwtl
inc
fsubs
mov
mov
pop
pop
or
mov
fisubs
nop
out
and
and
and
or
popa
int3
mov
push
add
jne
imul
mov
adc
dec
jmp
dec
test
add
scas
repz
jnp
test
add
cld
imul
test
mov
insb
inc
xor
fisttpll
mov
sbb
ja
cmp
pop
imul
fmuls
dec
inc
cmp
call
inc
stc
pop
sub
les
aas
insb
xor
add
rcrl
adc
pusha
push
fldenv
shl
imul
inc
mov
cmp
push
mov
jmp
mov
mov
sub
pop
cmp
loopne
sbb
or
mov
pop
xchg
sbb
dec
cmpsl
xor
shlb
inc
mov
shrl
add
fwait
push
jno
popf
mov
es
lea
or
jnp
push
loopne
push
jo
dec
sub
cmp
in
dec
and
push
movsb
out
pop
outsb
out
pop
test
mov
mov
cmp
fstl
cs
xlat
mov
gs
mov
stos
imul
push
jecxz
xchg
mov
xor
cli
adc
xchg
jae
adc
dec
jnp
leave
add
in
xor
adc
mov
jns
or
add
xchg
push
sub
add
cmp
repnz
adc
mov
repnz
lcall
xchg
sahf
xchg
inc
test
push
int3
repz
adc
cmpsb
xor
stos
out
mov
dec
xchg
pop
mov
jge
lret
jo
xor
mov
xchg
aam
adc
jp
into
nop
clc
mov
nop
adc
repz
jmp
lcall
loop,pt
ret
mov
xor
jmp
into
pop
add
jmp
jbe
cli
inc
push
mov
cwtl
ljmp
or
rorl
repz
fiaddl
xchg
cwtl
mov
in
loope
push
xchg
push
cs
xor
mov
sub
sub
inc
push
adc
adc
addr16
loopne
dec
fstl
mov
mov
addr16
push
bound
bound
fstpl
mov
std
push
cmpsb
mov
dec
testl
cli
xchg
xorl
xchg
lods
incl
jg
sbb
out
jp
lods
subb
adc
sahf
push
add
leave
push
mov
shl
lcall
sub
std
ljmp
lods
roll
int
mov
jb
pop
ret
inc
mov
dec
mov
xor
outsl
mov
mov
fsubl
adc
fdivr
cmp
cmp
pop
aaa
dec
in
push
in
arpl
jne
repz
cmp
lret
xchg
dec
pop
dec
inc
xor
xchg
adc
imul
cmp
adc
inc
or
sub
adc
dec
pop
push
mov
es
mov
mov
in
mov
shll
push
imul
push
mov
or
sub
mov
rcl
aaa
popa
scas
push
jbe
repnz
repz
addr16
inc
popa
sub
sub
clc
filds
inc
stos
mov
cmc
sbb
dec
stos
mov
out
sbb
pop
dec
je
sahf
push
pop
sub
jg
rcll
mov
icebp
mov
test
stos
aad
jb
push
mov
mov
leave
ds
lock
jnp
fisubrs
ljmp
sar
xlat
xchg
lods
pushf
cmp
xchg
cld
lock
jae
gs
xchg
mov
or
inc
cmp
ss
jno
jae
mov
push
xor
jge
sub
xor
orb
cmpsb
stos
push
jle
push
pop
aad
pusha
test
mov
lock
mov
jbe
sub
lcall
insb
ss
mov
cmp
mov
fbstp
mov
pushf
ret
ret
pop
or
cwtl
mov
and
rcrl
iret
cmp
out
fiaddl
inc
roll
jo
xchg
jo
xchg
ljmp
push
mov
arpl
mov
popf
cmpb
mov
sbb
sbb
dec
shll
mov
xchg
pop
sub
adc
pop
imul
mov
add
cmp
jnp
pop
repnz
outsb
bound
sbb
imull
mov
outsb
xchg
ja
xchg
mov
xor
mov
pop
repz
ss
mov
or
faddl
mov
in
in
mov
std
rolb
movups
add
cmpb
inc
ds
call
push
adc
push
cwtl
jno
push
cmp
push
clc
inc
rclb
pop
sbb
das
outsb
cmp
jp
arpl
outsb
cmp
sub
mov
es
dec
push
clc
fwait
int3
cmp
xor
fdivs
mov
inc
loop
mov
stos
push
mov
into
int3
push
stos
pop
push
fstl
cs
add
mov
and
pushf
int3
das
xchg
jge
lcall
adc
dec
add
into
push
fiaddl
es
sti
insb
and
or
mov
daa
test
push
andl
ja
jbe
or
mov
adc
mov
bound
pop
xor
and
ljmp
mov
imul
mov
push
adc
mov
out
add
pop
stos
xchg
data16
pop
pop
out
cmp
jns
lods
push
addl
mov
js
pop
bound
or
and
insl
btr
xor
cs
les
test
pop
cmp
push
fsubs
ret
mov
mov
pop
out
cmp
and
mov
fiadds
scas
cmp
or
inc
jbe
pop
jnp
xchg
lds
xchg
add
inc
push
fdiv
mov
inc
or
mov
and
jle
jg
out
in
scas
test
cs
inc
es
in
jmp
leave
push
mov
add
mov
rcll
inc
add
xchg
jmp
lods
xchg
mov
adc
cmpb
aam
outsl
pop
pop
out
pop
out
repnz
sub
fs
cwtl
ret
lret
cltd
jns
inc
mov
gs
nop
adc
xor
mov
test
xchg
iret
pushf
outsl
or
add
xchg
sahf
loopne
movsb
or
jns
xor
std
sub
xchg
dec
add
jmp
sub
cwtl
fidivs
cmpl
xchg
lret
ds
fldenv
dec
test
dec
sub
mov
sbbb
pop
enter
test
mov
je
jg
out
shl
lret
xchg
ds
pop
xlat
push
add
addr16
scas
pusha
subl
push
jg
sub
test
sbb
mov
adc
out
bound
or
lahf
xchg
dec
xor
loop
je
xchg
jecxz
ret
mov
or
aaa
into
pop
gs
or
xor
scas
cmp
hlt
pop
cmp
aaa
aam
push
xor
loop
nop
fldt
flds
lret
loopne
roll
mov
sbb
hlt
and
sti
out
push
lea
dec
push
xchg
out
mov
cld
stos
aam
pop
jns
cmp
in
xor
pop
inc
pushf
scas
movsl
mov
les
sbb
pop
fistpll
push
sbbl
in
mov
mov
xchg
mov
xchg
adc
in
and
iret
mov
add
and
idivl
repz
cmp
bound
mov
dec
into
jg
scas
sarl
iret
loope
xorb
lods
or
cmp
fs
out
lar
or
ret
int3
stos
inc
pusha
xor
dec
fs
sbb
out
xchg
jnp
push
test
mov
adc
xlat
or
mov
addr16
lods
push
shl
and
enter
push
int3
movsb
stos
out
cmpsb
mov
loopne
jne
aaa
iret
and
push
das
lds
dec
arpl
xor
addr16
and
add
pop
sti
int3
mov
dec
pop
icebp
sar
mov
rolb
sub
xchg
jo
in
dec
adc
fistpl
sub
jns
das
negl
add
cmp
test
repz
mov
push
ljmp
pop
xchg
popa
je
iret
jge
test
sbb
lahf
mov
ja
cmp
lret
and
std
pop
xchg
mov
mov
cs
stos
popf
pop
imulb
filds
out
cli
hlt
sub
mov
inc
push
or
hlt
jns
ja
xor
aam
repz
pusha
pop
stc
sbbb
lcall
inc
ja
repnz
mov
ljmp
ds
popl
addr16
dec
push
push
movsl
jo
lods
dec
mov
stos
cmp
jbe
clc
mov
cwtl
and
jg
sub
xor
lea
outsb
roll
shrl
adc
inc
fwait
test
hlt
cmp
jecxz
les
icebp
popf
mov
clc
aam
dec
aaa
rorl
jge
sub
pop
ret
ja
jb
fadd
pop
fwait
dec
clc
mov
test
jl
lret
aam
jns
int
aam
pop
cmc
cwtl
jo
out
xchg
jnp
nop
lods
movsl
out
cmc
xor
rol
or
rclb
xchg
sbb
arpl
mov
subb
sbb
xchg
popf
movsb
mov
ror
push
test
xor
pop
mov
dec
mov
jno
xor
out
jnp
pop
xchg
ds
mov
testl
insb
stos
jb
or
pop
sahf
lods
cmp
out
shlb
xor
push
mov
mov
xchg
jmp
imul
pushf
les
mov
add
sub
pop
xlat
cmpb
call
pop
or
or
clc
and
fwait
dec
push
or
ret
sarl
in
and
mov
sti
je
sbb
sbb
fsubs
cmp
mov
sbb
loope
mov
cmpsb
out
bound
fstps
push
sub
nop
nop
arpl
ret
int
into
lahf
imul
out
outsl
xchg
add
inc
mov
shl
pop
sbb
ret
jp
icebp
mov
ds
sbb
leave
xchg
push
out
inc
mov
mov
mov
or
repz
ret
mov
xor
cmp
loopne
and
out
cmp
mov
lds
xor
xor
sub
mov
mov
lret
mov
adc
lcall
and
lret
pop
sbb
aam
cltd
loop
pop
cmp
mov
xchg
cmp
xor
test
data16
fwait
jnp
outsb
inc
xlat
xchg
add
movsb
adc
add
leave
dec
bound
orb
and
inc
outsb
cli
fwait
adcl
push
and
fadd
cld
cwtl
lret
pcmpeqw
aas
adc
xor
cmp
jnp
faddl
scas
mov
add
stc
fmuls
push
test
jnp
jmp
push
xlat
addb
sub
or
cmc
pusha
fptan
das
fidivl
mov
cmp
hlt
jl
xor
cmpsl
pop
dec
jg
push
pop
adc
fcompl
movsb
test
adc
inc
outsb
leave
pop
add
jbe
push
loope
test
or
mov
add
mov
dec
mov
clc
imull
cwtl
aas
stc
push
mov
imul
mov
add
fs
mov
mov
dec
mov
jle
push
mov
push
mov
lock
out
fwait
pop
lds
test
mov
xchg
mov
rorb
shl
sbb
fistpl
pop
sti
adc
pop
sbb
testl
mov
iret
mov
push
inc
jge
jg
push
and
mov
xchg
xorl
movsl
lock
aad
ret
xchg
xchg
xchg
adc
jns
into
lods
lock
sbb
inc
bound
scas
adc
jnp
pop
xchg
pop
mov
call
cmpsb
addr16
test
or
in
stos
xlat
pop
mov
cli
loope
lods
pop
mov
mov
fldl
loop
outsb
push
dec
xchg
cmc
xor
pop
dec
jmp
push
cmp
jmp
int3
dec
roll
xor
adc
leave
call
popf
push
int
shlb
out
pop
lock
ret
mov
jne
sub
mov
outsb
iret
pop
inc
popa
fs
test
sub
iret
jae
loope
push
dec
and
dec
pop
fisubrl
fsubrs
mov
cmpsl
inc
adc
add
cmp
stos
fldt
aaa
rcrl
pushl
roll
or
lret
test
clc
or
pop
pop
dec
adc
fadd
fwait
int3
pop
xlat
repz
xlat
xchg
and
enter
and
cmp
push
xchg
push
enter
pop
rcrb
cmp
std
int
or
notl
pop
jp
xor
fcmovbe
add
outsb
xchg
test
cmc
into
jne
xor
scas
push
or
sub
adc
les
test
add
cld
sbb
add
popf
sub
ficoms
mov
out
aas
adc
inc
ljmp
mov
fincstp
push
and
iret
inc
push
xor
dec
sub
sbb
stc
jbe
sub
push
adc
clc
xor
mov
iret
sar
enter
or
int3
sbb
sahf
mov
stc
inc
ret
xchg
sbb
inc
push
sub
xor
into
mov
adc
scas
cmpsb
jns
jecxz
xchg
cmp
push
pop
fwait
push
lods
shrl
fcmovu
xchg
shrl
or
popf
jne,pt
mov
xchg
adc
repnz
add
add
bound
xor
mov
cmp
inc
movsl
mov
mov
and
lcall
popa
mov
hlt
push
jecxz
dec
lods
rorb
push
or
sub
pop
cvtpi2ps
xor
popf
push
push
movsl
imulb
add
data16
push
cwtl
int3
xchg
fildl
xor
rorl
cli
adc
out
xcrypt-ctr
cmpsl
pop
pop
imul
icebp
pop
inc
ds
and
into
cmpsl
shl
sbb
test
push
push
sub
push
lock
inc
pushl
pop
pushf
mov
pushf
pushf
add
out
inc
mov
mov
decl
js
cmpsl
cmp
mov
xchg
cltd
push
xchg
push
dec
push
cmpsl
mov
lock
std
fcompl
xchg
popf
test
pop
mov
ret
dec
dec
aas
or
jae
je
jge
clc
call
ret
in
mov
xor
pop
adc
push
addr16
push
push
xorl
xor
mov
js
fs
loope
push
fisubrs
or
xor
or
stc
push
pop
push
push
dec
jbe
push
cmp
cmp
int
dec
lret
lods
clc
sbb
rolb
std
add
das
popf
mov
nop
and
shrl
int
jle
or
mov
xchg
std
daa
dec
lods
sbb
ja
inc
sbb
lods
clc
lods
dec
rol
mov
mul
inc
pop
lahf
sbb
xor
mov
jmp
push
andnps
and
pop
aam
pop
test
fxtract
jmp
cld
push
das
push
push
call
inc
mov
dec
js
scas
inc
loop
cwtl
mov
imul
push
jne
fsubs
adc
cmpsl
xor
in
dec
loop
inc
mov
pop
or
dec
sub
orb
cmp
pop
lret
pand
scas
inc
inc
sbb
lods
fucomi
dec
xchg
add
cmp
in
call
fwait
xor
out
imul
pop
push
pop
jo
pop
and
es
mov
orb
scas
das
cmp
mov
or
jmp
xchg
ds
test
mov
xlat
mov
iret
mov
sbb
push
and
in
pop
jge
repz
je
mov
scas
or
jne
stos
dec
xor
inc
shlb
mov
cmp
fstl
leave
pop
push
inc
push
mov
add
scas
adc
add
icebp
punpckldq
push
mov
scas
rcrl
mov
mov
mov
int3
out
not
mov
lcall
adc
or
push
imul
cltd
sub
inc
xorl
and
adc
xchg
outsl
loope
xchg
xchg
jmp
mov
test
mov
xor
js
test
test
dec
or
or
inc
iret
mov
cwtl
adc
leave
mov
push
lock
jg
xchg
push
dec
popf
stos
or
mov
xchg
or
sbb
outsl
adc
pop
adc
jae
pop
xchg
lea
xor
mov
out
push
xor
movsb
mov
and
sti
outsb
xor
stos
mov
push
sbb
add
inc
pop
testl
lods
iret
sarb
jb
shl
sub
add
add
sub
mov
sub
pusha
ljmp
lcall
mov
int
imul
adc
rcl
sub
jno
jp
push
into
add
outsl
sub
jecxz
pop
notb
dec
mov
pop
aaa
jl
bound
cmp
mov
xor
sahf
mov
mov
push
test
jle
jns
xchg
adc
xchg
jne
filds
cmp
mov
lahf
leave
ret
shll
sbb
jbe
ficoml
out
insl
add
iret
mov
or
push
mov
jb
dec
aaa
or
pop
sbb
cmc
lock
xchg
push
adc
insb
sbb
mov
out
add
jle
int3
dec
std
sub
sub
fucomip
jl
lret
inc
sub
or
add
stc
jns
adc
xchg
fstps
js
sbb
int
dec
clc
mov
and
mov
pop
or
mov
scas
add
sbb
fisubrs
dec
lahf
pusha
aaa
scas
cmpsl
jle
lock
loope
sarl
cld
iret
popf
out
mov
xor
and
in
sub
out
daa
push
cld
js
clc
ss
lods
push
jbe
xor
lret
cmpsb
mov
push
push
mov
pop
push
lods
jecxz
outsb
mov
mov
adcl
xlat
icebp
cwtl
mov
and
lods
hlt
cs
mov
icebp
test
push
pusha
jno
out
add
inc
xchg
mov
out
ds
jne
push
and
lret
out
out
cmp
jnp
inc
add
xchg
sub
rol
adc
sbb
mov
mov
lods
lcall
loopne
jo
cmp
jae
lahf
jne
xor
ss
icebp
and
inc
and
repnz
lahf
jmp
stos
and
cmp
xlat
adc
pop
out
push
jecxz
xor
push
and
xchg
dec
mov
add
mov
push
gs
dec
cs
dec
mov
fcoml
lock
pop
pop
fiaddl
lds
leave
les
imul
addb
adc
jno
ljmp
xchg
cmp
test
cmp
mov
sbb
arpl
adc
jle
cli
ja
loop
lea
insb
pop
das
out
sahf
dec
pop
andl
mov
lcall
out
mov
adc
mov
leave
inc
dec
faddl
out
data16
scas
insl
rcr
fidivs
mov
mov
std
mov
pop
jb
imul
aaa
cmp
hlt
insb
add
cli
lock
orb
mov
mov
sahf
mov
das
test
jbe
mov
inc
decl
cmpsl
sub
inc
movsl
fs
movsl
je
popf
pop
fcmovnu
shlb
pop
sub
test
xor
into
mov
or
scas
les
enter
or
dec
dec
pushf
or
pop
repz
in
stc
mov
push
nop
mov
xchg
hlt
mov
add
xor
adc
sub
arpl
out
adc
and
test
sub
movsl
adcb
or
mov
lods
cli
int
int3
shll
lcall
ss
mov
nop
scas
pusha
fcom
cs
push
cmc
js
aam
pop
loope
push
add
cmp
int3
std
cmp
add
outsb
or
dec
test
cmp
gs
in
jge
jnp
outsb
pop
iret
or
jmp
xchg
pop
outsl
cmpsl
mov
adc
test
mov
mov
mov
mov
lcall
sub
xlat
sub
daa
popf
inc
pop
mull
loope
adcl
push
stos
aad
xchg
inc
outsl
jecxz
cmp
inc
xchg
xor
cwtl
loop
popa
es
pushf
pop
mov
adc
sahf
or
and
or
sub
add
push
cmp
shlb
icebp
clc
inc
aaa
negb
xor
xor
cmp
sar
xor
dec
in
and
xlat
adc
mov
mov
and
repz
xchg
in
push
adc
test
add
inc
popf
stos
mulb
sub
outsl
mov
and
jno
mov
mov
push
mov
mov
loope
xor
fwait
push
push
sahf
or
test
push
loop
lock
pop
pmullw
mov
xchg
gs
and
push
roll
pop
aad
sti
add
pop
lahf
mov
mov
adc
hlt
cld
not
cltd
test
enter
lahf
jmp
movsl
pop
dec
cmc
xor
cs
jns
add
fdivrl
mov
inc
imul
mov
mov
ror
loop
and
mov
push
adc
sahf
divb
nop
sar
inc
mov
pop
pop
push
jbe
ss
test
aas
lret
and
mov
jle
push
mov
xchg
dec
cmp
xchg
repnz
nop
mov
ss
addr16
insl
pop
jns
push
stc
es
jmp
push
movsl
inc
aaa
or
push
mov
cs
ja
sub
cmp
or
js
sub
nop
out
repz
jns
aam
roll
imul
insb
sbb
test
pop
xor
sbb
push
xor
rorb
and
pushf
stos
sub
lods
cltd
xchg
leave
pusha
cmp
and
sub
dec
mov
jg
int
and
lcall
xor
push
out
ret
mov
bound
pop
stos
push
dec
pop
movl
xor
icebp
dec
out
or
sbb
push
gs
filds
lret
sub
pop
notl
mov
or
mov
sub
ds
sarl
aas
stos
in
sbb
in
das
jecxz
or
adc
stc
lock
or
cmp
ds
lcall
sar
or
movsl
gs
xorl
pop
xor
xor
push
push
xor
and
mov
xor
and
dec
pop
xor
out
loop
add
pop
popa
fistl
repz
jb
inc
lret
xor
add
sti
lcall
xchg
data16
ss
sti
ss
and
xchg
jnp
dec
mov
dec
and
sbb
jb
movb
das
aad
add
int
js
jmp
int3
jae
push
aaa
popf
jno
testl
sub
je
movsl
shll
cld
xor
mov
push
xlat
in
or
sub
xor
add
pop
mov
xchg
adc
xchg
mov
mov
cmp
mov
mov
repz
xlat
scas
stos
or
nop
inc
pop
cmp
sbb
or
leave
dec
cs
shll
sub
mov
xor
push
jle
ljmp
call
aam
scas
movq
push
xchg
mov
int
cmp
sarb
jnp
nop
cmp
fwait
mov
out
mov
sbb
cmp
xlat
lret
dec
push
ret
out
mov
sbb
sbb
stos
mov
mov
xchg
fistl
ja
lods
xor
imull
mov
mov
das
cmp
shrl
mov
adc
js
outsl
test
mov
and
fsubs
mov
xor
mov
inc
psubw
scas
add
aaa
dec
or
fimull
test
xchg
jg
cmp
cmpsb
lahf
or
ret
outsb
popf
push
aas
sarb
pop
cld
out
inc
push
mov
inc
mov
jle
rcll
xchg
dec
inc
inc
xor
cs
push
outsl
out
sahf
das
cmp
add
stos
mov
mov
push
in
test
xor
fs
sti
repnz
xchg
jno
mov
sub
enter
pop
pusha
xchg
xchg
adc
dec
add
cmpsb
xchg
in
jle
clc
rcrl
ss
or
clc
stos
inc
es
icebp
dec
test
lret
rcr
sbb
int
mov
rcl
or
std
orb
jns
jo
inc
out
popf
mov
pushf
mov
sbbl
jp
xor
std
mov
jge
adc
dec
out
mov
movsl
mov
popf
lods
pop
and
xlat
out
adc
lret
jae
icebp
mov
out
jg
es
jge
adc
jns
sti
pop
pmullw
adc
pop
mov
add
add
fdivs
jae
lock
cwtl
inc
and
insl
add
outsl
pop
test
test
out
mov
repz
inc
lods
push
arpl
out
jg
cmpsl
dec
loopne
fstp
jl
mov
push
movsl
out
les
in
mov
xchg
gs
out
jl
hlt
xchg
sbbb
enter
cmp
mov
pushf
stc
stos
pop
sahf
in
aas
pop
adc
mov
aas
mov
or
cmc
lds
push
rclb
sub
or
divl
idivl
cli
shlb
test
std
decl
lahf
lock
sub
data16
cmc
jo
gs
ja
jo
cmp
daa
and
jge
imul
pop
cwtl
aas
ret
clc
cmpsl
or
pop
inc
sbb
jmp
mov
pop
jg
leave
sbb
inc
nop
adc
fldcw
jbe
pop
insl
adc
aad
add
inc
repz
and
fs
mov
outsl
sub
xor
movsl
mov
orb
lcall
leave
mov
lret
lahf
jnp
add
rcl
outsl
jle
and
adc
fidivrs
inc
xor
ljmp
sub
movsb
xor
and
bound
pop
and
push
inc
imul
cmp
jmp
jo
jge
dec
sbb
movsl
mov
inc
stc
jge
es
cli
push
out
cmc
pushf
push
stos
lret
mov
bound
and
leave
inc
rorl
ljmp
scas
sbb
aaa
fldenv
imul
xlat
jno
and
lods
adc
in
stc
scas
jp
movsl
push
mov
add
inc
lret
stc
iret
jb
sbb
xor
fistps
ljmp
cmp
and
mov
movsl
hlt
hlt
cmpsl
ljmp
mov
xor
arpl
mov
dec
in
push
dec
inc
ret
adc
orl
or
and
sbb
xchg
in
inc
sbb
pop
xchg
lret
pushf
pop
xchg
das
xor
les
xor
push
pop
int3
lock
sub
jb
xchg
pusha
cmpsb
mov
sbbb
push
push
fs
dec
xor
out
icebp
push
jnp
dec
or
mov
lret
and
jb
mov
and
cmp
push
mov
movsl
leave
jecxz
adc
repnz
lret
xchg
out
movsl
arpl
mov
lcall
cmp
fistps
push
push
enter
push
inc
pop
aaa
movsl
leave
sahf
out
mov
lahf
mov
ret
add
adc
fsub
fwait
ja
pusha
fsubl
shlb
dec
gs
nop
jle
ret
rolb
jbe
sti
loopne
adc
fidivrl
push
sar
xchg
dec
adc
push
pop
jno
push
stos
dec
dec
aad
jge
mull
adc
mov
test
clc
lock
or
pop
ss
mov
xor
inc
push
mov
mov
mov
je
or
shrb
aad
add
into
test
lahf
popf
mov
mov
cmp
pusha
xlat
or
add
test
jo
mov
cmp
or
aas
leave
test
push
les
lods
pop
mov
push
mov
mov
push
xchg
jbe
hlt
icebp
mov
sub
int3
in
pop
lds
fisubs
adc
mov
cmp
sub
jecxz
loopne
jle
inc
dec
aaa
push
mov
inc
shll
movb
aam
in
dec
bound
out
adc
test
or
nop
out
pop
ret
negb
xlat
bound
std
outsl
cmp
in
jp
push
mov
sub
cmpsl
sbb
push
jno
push
jmp
out
test
imul
push
enter
or
jp
or
ror
cwtl
lcall
jecxz
ja
shll
pop
push
mov
or
imul
push
xchg
icebp
pusha
adc
xor
loope
repz
pop
lds
mov
rcll
pop
test
or
adc
push
and
mov
fstpt
add
add
push
push
arpl
mov
xorl
stos
js
pusha
xor
or
add
push
loop
xchg
lods
pop
or
sbb
ficoms
mov
xlat
inc
mov
dec
or
lret
clc
mov
sbb
cmpsl
mov
cs
testl
loope
xchg
das
ret
in
stos
mov
fisubrs
sbb
js
jns
mov
pusha
dec
sbb
jmp
imul
lods
lods
sbb
inc
cmp
fisttpll
popf
sbb
addr16
cmp
pop
xor
xchg
sub
outsl
sbb
xchg
pushf
and
repz
pop
xchg
xlat
and
out
mov
inc
add
ss
dec
in
add
or
sbb
repnz
lock
sbb
dec
subl
repnz
les
lea
popl
je
aaa
fucomi
in
cli
in
pop
sub
test
push
out
rolb
pop
std
imul
insb
adc
mov
or
mov
push
mov
sbb
jae
pushf
adc
inc
xchg
push
push
inc
pusha
cmp
and
ss
pushf
sub
lock
notb
test
cltd
add
ja
popf
in
fsubrp
mov
xor
sbb
and
andl
ret
add
xor
jne
clc
dec
xchg
sub
sub
push
dec
js
enter
test
add
push
adc
cmp
test
call
adc
inc
sub
icebp
and
xor
mov
sbb
xchg
lcall
and
inc
jp
and
enter
and
out
add
pop
pop
inc
cmpsl
repz
jae
pop
inc
push
rcrb
cmp
xchg
xchg
xor
push
cmp
xchg
stc
insb
jmp
mov
adcb
lds
mov
xchg
aas
lahf
popf
insl
sub
ret
addr16
ret
mov
les
or
mov
sarb
push
adc
cli
mov
ret
cmp
jg
xchg
xor
jle
lahf
add
out
jecxz
mov
in
sbb
dec
clc
mov
add
std
rcl
scas
rcrb
push
pop
out
push
adcb
pop
pop
pop
stc
addl
xchg
jne
rcl
fcoms
in
xor
gs
or
movsb
lds
rol
loope
ror
loopne
and
mov
clc
shll
or
adc
xchg
mov
push
cmp
xchg
push
mov
call
inc
or
sti
iret
bound
jnp
mov
int3
sub
adc
mov
imul
les
js
testb
lcall
insb
fstl
or
jecxz
xchg
adc
mov
jecxz
cmp
sbb
dec
inc
and
sahf
jno
mov
jo
mov
xlat
in
pushf
jae
dec
push
jp
aas
xchg
cmpb
push
mov
mov
fidivs
mov
mov
xchg
mov
mov
shrb
lahf
sbb
inc
movsl
sbb
gs
push
das
push
xchg
cmp
lods
in
jle
xchg
daa
dec
xor
das
sub
or
jo
shrb
dec
js
je
mov
inc
repnz
and
xor
xor
in
jp
je
mov
jbe
cli
test
cld
jl
imul
xor
push
inc
mov
mov
cmp
data16
pop
cwtl
mov
adc
sbb
clc
rorl
test
jecxz
out
pop
sub
sahf
push
icebp
or
sub
bound
clc
sahf
mov
mov
adc
insb
lea
add
mov
fldenv
jo
mov
push
lods
jle
sub
int
outsb
pop
movsl
scas
cwtl
cmp
mov
xchg
push
aaa
ds
inc
xor
mov
out
xor
fistl
push
cwtl
and
cmovge
xor
adc
loopne
lock
lock
lods
sbb
roll
das
fistps
fsub
inc
sub
xlat
adc
in
imul
mov
pop
and
ds
or
push
das
pop
cmp
push
push
push
push
shrb
push
sbb
mov
out
mov
ljmp
inc
out
push
xor
jecxz
sbb
inc
push
adc
or
jo
shrb
shll
mov
outsb
rcll
adc
inc
or
cmp
lods
aas
xor
xchg
pushf
cltd
sbb
jbe
lcall
inc
fisubl
push
xor
or
popf
sarl
mov
jne
mov
fistpll
lahf
mov
mov
inc
mov
sahf
lret
xor
xchg
shll
cmpsl
pop
mov
lret
and
pop
xchg
jp
in
push
adc
outsl
out
sahf
icebp
adc
and
stc
sahf
sbb
adc
imul
data16
in
shl
mov
rclb
ret
outsb
ja
and
outsl
pop
std
jmp
sub
lds
xchg
in
movsl
lahf
sti
sbb
sub
iret
xchg
jle
mov
adc
sub
xchg
cmpsb
lea
push
sarl
xorb
sbb
pop
cmp
fnstcw
sbb
push
mov
sbb
push
dec
aad
xchg
mov
or
or
and
insb
test
sti
jae
fsubs
repnz
fstps
pop
les
imul
insl
jb
and
dec
shlb
lock
popf
jle
aaa
rclb
rcrl
jo
roll
loope
sbb
stc
inc
dec
sti
shll
sub
js
stos
lcall
add
dec
test
mov
fndisi(8087
hlt
and
test
xor
xchg
pop
push
pop
iret
rol
mov
outsb
mov
push
adc
dec
mov
dec
xchg
mov
jns
hlt
dec
mov
xchg
dec
cmpsl
mov
mov
or
push
mov
ds
sub
sbb
lahf
jecxz
sbb
or
jg
in
rcl
cltd
rcrl
enter
movsl
sub
xor
lods
mov
loop
xchg
xchg
cmp
fs
je
psubsb
xor
and
push
jno
out
push
cli
pushf
mov
scas
pop
out
mov
mov
jmp
aam
jns
mov
not
mov
inc
mov
pop
dec
add
insl
daa
jne
repz
lds
lret
dec
dec
lods
test
add
mov
push
jmp
mov
jno
push
push
adc
jb
in
add
mov
cmc
inc
pop
sbb
dec
into
inc
outsl
xchg
daa
cmp
adc
lcall
gs
mov
pop
repz
aaa
sbb
jmp
cs
movsl
lods
ja
into
std
pop
sarl
pop
gs
mov
mov
popf
sub
test
test
stos
das
mov
xor
ljmp
stos
pop
outsb
and
sahf
jmp
into
push
xchg
cmp
or
mov
mov
xchg
out
lds
fwait
sti
es
mov
lahf
mov
mov
inc
and
push
fldl
movb
ret
cmp
mov
jne
or
jmp
arpl
jl
in
in
scas
ljmp
pop
add
mov
inc
clc
xor
push
adc
cltd
mov
add
imul
arpl
mov
push
lahf
popa
pop
jns
out
in
inc
sbb
imul
adc
sub
out
mov
insl
cmpsb
jno
std
in
fxch
repz
adc
aad
sub
lahf
inc
fcmovnu
mov
xor
out
aaa
dec
push
xchg
cmp
les
in
sub
cmp
adc
add
jb
mov
cwtl
dec
sbb
jo
pop
ret
pop
mov
mov
imul
sbb
mov
cmc
pop
jle
sbb
nop
sbb
dec
mov
fs
dec
push
xor
xchg
dec
push
iret
inc
imul
repz
adc
in
mov
push
mov
clc
and
pusha
lcall
leave
sar
mov
jo
xchg
lock
mov
addb
jbe
dec
popf
cmp
movsb
mov
pop
mov
push
adc
aam
xchg
add
stos
ja
mov
test
pop
ficompl
mov
cmp
fwait
or
pop
and
fisubl
lea
pop
loop
jle
jmp
and
jae
pop
clc
push
and
cmpsb
adc
je
cmpb
shlb
mov
setb
fs
pop
incl
push
mov
pop
pop
cmp
imul
cmp
jnp
lret
popf
push
mov
int3
mov
inc
faddp
cli
inc
mov
ficompl
stc
xchg
imul
jne
pop
jo
movsb
xchg
push
ss
rol
sub
xlat
inc
mov
mov
adc
pusha
and
mov
lea
mov
dec
lret
add
insl
inc
cmp
inc
mov
pop
out
in
out
mov
int3
push
ror
test
mov
orl
clc
add
test
mov
ss
inc
repnz
loope
dec
mov
sub
pop
cmp
push
adc
mov
repnz
lea
leave
and
pop
push
ljmp
loope
adcl
mov
fs
test
lock
sbb
test
std
jmp
and
mov
nop
hlt
shll
mov
das
jo
imul
inc
or
cmp
pop
leave
cmp
outsb
incl
cmp
lock
cmpb
shll
or
push
adc
scas
pop
xchg
addl
dec
stc
ja
mov
push
ss
adc
mov
cmp
fwait
shl
pop
cmp
jb
outsl
push
pop
pop
mov
jecxz
popa
push
lcall
mov
inc
cli
outsl
sub
decb
andb
push
mov
or
ja
mov
pop
rclb
scas
cltd
rol
jo
inc
jge
pop
out
dec
xchg
ss
jg,pn
fldpi
ret
pushf
mov
and
lcall
inc
jmp
sbb
inc
add
shlb
jmp
xor
ss
xchg
sub
out
imul
pop
inc
je
jo
cmp
mov
test
push
popa
mov
sub
sbb
test
pushf
inc
sbb
pop
cwtl
xchg
pop
shrb
fwait
in
pusha
lds
test
inc
inc
mov
and
inc
and
in
insb
test
pushf
cs
sbb
cwtl
iret
push
mov
dec
mov
icebp
lahf
xchg
frstor
add
fisttps
mov
js
mov
ss
stos
xchg
cltd
aad
push
sbb
pop
pop
xchg
jo
inc
lods
mov
xchg
push
in
pop
sbb
jg
pop
xchg
sub
subb
pop
and
and
jmp
sar
push
fmuls
pop
out
shrb
push
dec
loop
les
lea
adc
in
add
jnp
xor
out
cmp
xchg
mov
xchg
flds
mov
test
adc
add
test
dec
dec
push
inc
test
in
xchg
femms
inc
loopne
push
cmp
aad
pop
push
outsl
inc
in
sar
loopne
pop
adc
loopne
hlt
sub
xor
rcll
std
inc
sub
inc
fisubl
dec
inc
test
cmp
lock
into
mov
cmp
mov
dec
lahf
in
lcall
jp
gs
nop
gs
xor
std
inc
inc
xchg
inc
xchg
cmp
or
mov
dec
flds
push
jmp
mov
push
movsb
dec
xchg
mov
jge
sbb
ret
into
xchg
adc
cli
arpl
mov
lcall
inc
jne
sbb
or
icebp
dec
lea
rorb
pop
cs
sub
sub
dec
and
and
mov
push
test
outsl
rcl
cmpb
adc
adc
adc
repz
sar
hlt
dec
int
dec
in
dec
pop
inc
test
repnz
push
xor
jnp
cmp
arpl
sahf
jns
jle
xchg
jl
xor
push
pop
add
fsub
sbb
or
mov
dec
test
pushf
mov
mov
aad
fidivl
iret
adc
andb
mov
mov
push
push
cmpsb
mov
add
cmpl
lret
inc
stos
shlw
int
out
lock
test
xlat
int3
stos
ds
or
repnz
outsb
mov
xchg
sti
js
cld
out
das
test
roll
pop
imul
jne
popf
outsb
jae
or
les
pusha
push
xor
cmp
jp
popf
rorl
je
iret
push
pop
inc
sbb
stos
and
or
ffreep
rclb
push
scas
xchg
in
cli
scas
mov
and
inc
mov
adc
lea
xchg
addb
cwtl
and
adcl
mov
inc
or
sbbb
push
mov
imul
sarb
dec
imul
das
dec
dec
shll
inc
out
in
fxch
addl
test
insb
xor
lret
leave
push
add
std
dec
stc
fsts
test
fs
inc
add
mov
inc
cmpsb
in
xor
fimuls
subl
aas
ljmp
fcmovnbe
ljmp
sub
push
nop
inc
mov
jno
push
loopne
adc
and
mov
nop
xchg
or
cmp
push
ljmp
es
sti
xchg
out
or
inc
mov
sbb
or
mov
xor
mov
inc
cmc
jne
out
pop
sbb
leave
in
pop
jmp
negl
mov
pushf
dec
mov
mov
or
pop
je
jl
push
daa
bound
inc
push
jle
mov
outsb
add
pop
imul
inc
inc
sti
xor
pop
mov
daa
jp
pushl
cmp
mov
lds
xchg
xchg
popa
jp
and
sbb
into
or
fs
sub
aam
xor
les
cmc
mov
fistpll
shr
outsb
lcall
pop
idiv
in
inc
enter
movsl
xchg
ljmp
xchg
cmp
gs
mov
sbb
cmp
push
std
jae
aas
jp
enter
loop
jg
fsubs
mov
push
cltd
out
xor
gs
pusha
cld
cltd
lock
or
test
out
jp
mov
adc
mov
and
nop
jge
mov
bnd
inc
int
imul
inc
push
in
or
dec
push
ret
cmp
dec
das
arpl
xchg
lret
inc
xor
movsl
fs
adc
inc
fnstsw
iret
mov
cmp
loopne
jmp
xchg
pop
aam
fwait
aas
test
xchg
mov
dec
mov
push
int
jle
jb
in
mov
mov
push
sub
dec
sbb
mov
pop
push
ror
push
push
inc
pop
cmc
cmp
fwait
pushf
and
mov
adc
stos
rolb
mov
cmc
aas
jl
pop
repz
lods
decl
fmuls
int
fcomps
push
jge
aas
pop
cmp
icebp
xor
mov
lea
into
pop
jb
or
fldt
sti
xchg
clc
mov
call
add
call
stc
ljmp
or
sbb
mov
cmp
fsubr
lea
xor
inc
hlt
sbb
cs
popa
rorl
bound
dec
and
test
sub
lcall
mov
adc
shrb
and
movsl
adc
and
mov
sahf
cmp
jecxz
inc
aaa
scas
and
cltd
sbb
cmp
xchg
jns
dec
subb
xchg
jg
aaa
aaa
sub
mov
cs
mov
loopne
ficoms
inc
cmp
and
imul
movsb
aaa
fwait
loopne
stc
test
aam
mov
xor
enter
cmp
pop
nop
mov
xor
sbb
or
mov
or
fucomi
js
cmp
out
or
movsb
xchg
mov
dec
cmpsb
dec
cmp
jle
popaw
jmp
mov
stos
fiaddl
mov
xchg
pop
mov
arpl
jmp
shll
inc
mov
std
iret
jnp
mov
xchg
inc
jp
dec
dec
je
shlb
test
add
xor
popf
test
xchg
sbb
cmp
add
lea
into
ljmp
out
xor
movsl
or
inc
rcll
add
fldt
ret
or
cmpb
in
xchg
inc
cmp
mov
bound
out
movsl
pop
mov
inc
jbe
nop
cmp
sbb
pop
pusha
dec
jb
pop
dec
int
and
imul
cmp
inc
mov
cli
or
outsb
sbb
insb
add
adc
mulb
sbb
sbb
pusha
jp
sbb
mov
in
jnp
cmpsl
jecxz
daa
dec
jne
adc
in
pop
sbb
outsb
aam
jno
mov
sbb
cli
and
aaa
xchg
pop
pop
dec
cmpsl
or
push
sub
out
push
out
mov
insb
push
addr16
jle
loope
jge
outsl
and
or
clc
dec
mov
xor
sbb
push
pop
cltd
push
xchg
pop
incb
call
mov
pusha
inc
sub
sub
popa
or
insb
insb
jp
pop
test
mov
in
mov
jge
inc
fstl
jmp
out
ficoml
in
mov
and
push
inc
lea
mov
add
iret
inc
out
sbb
push
jbe
push
movsl
push
xchg
mov
lods
daa
xchg
adc
test
sahf
and
jle
cwtl
dec
mov
in
icebp
jge
xor
dec
cmpsb
inc
mov
rcll
adc
hlt
mov
xor
xor
jp
xor
inc
stc
cltd
push
sahf
jmp
mov
xchg
enter
sub
lcall
out
and
ret
and
mov
mov
loop
lock
and
or
int3
push
rcll
mov
outsl
push
enter
shl
in
mov
popa
scas
cs
xchg
lods
icebp
test
aam
mov
nop
sub
add
outsb
add
cld
xchg
xor
cmc
sbb
sbb
orb
ret
outsb
sbb
leave
cmp
out
jae
cmp
jbe
adc
jbe
aas
repz
sub
dec
jp
ficomps
mov
fistpl
jmp
ss
gs
ds
dec
or
sub
lea
les
fisttpl
leave
mov
jno
test
js
shlb
pusha
mov
iret
in
les
inc
jge
add
hlt
push
scas
push
scas
mov
sbb
add
xor
sbb
sub
dec
cmp
arpl
cmpsb
xchg
icebp
les
iret
lock
mov
and
sbb
adc
es
jl
test
or
mov
out
leave
or
cld
add
aaa
pop
scas
xchg
rcr
mov
sbb
arpl
pop
imulb
dec
mov
andb
add
xchg
push
add
push
mov
adc
loop
test
pop
inc
xor
cs
imul
add
shrl
fisttps
xor
push
outsl
cmp
fnsave
dec
inc
mov
xlat
inc
push
adc
lods
pop
and
addr16
sub
mov
cmp
leave
mov
mov
sbb
pop
sub
dec
js
pushf
push
jmp
outsl
xchg
fidivrl
adc
adc
pop
jno
dec
pop
rcrl
add
nop
mov
ja
sbb
sbbb
adc
bound
call
fidivrl
shl
icebp
mov
add
add
mov
stos
repz
xor
ja
cmp
jnp
out
push
in
cmp
jae
ret
xchg
and
cltd
or
mov
aam
and
sbb
xchg
lea
sub
int
mov
aaa
push
insb
push
xor
je
mov
loop
inc
js
push
adc
push
push
pop
jg
jg
or
sub
add
scas
scas
nop
icebp
mov
and
jl
mov
sub
xchg
lods
es
cmpsl
xchg
push
inc
push
repnz
call
sub
outsb
mov
inc
rorb
sarl
push
dec
jg
dec
movsl
jns
mov
shl
pop
insl
sub
popf
fs
sahf
les
add
in
or
mov
add
ljmp
mov
push
loopne
push
jmp
dec
and
jmp
dec
clc
ret
ss
mov
sub
inc
addr16
pop
dec
or
lock
mov
cwtl
mov
push
gs
pop
out
enter
pop
fld
adc
loope
mov
test
push
or
lcall
cwtl
lret
sub
std
sbb
sahf
lahf
push
mov
add
out
stc
mov
es
cmpb
and
inc
adc
mov
inc
inc
sub
lods
lret
call
popa
andl
push
mov
mov
imul
mov
leave
mov
bound
xlat
add
cmp
push
mov
or
fisttpll
sub
fucom
mov
add
adc
xchg
inc
pop
or
aaa
jnp
inc
xchg
in
out
add
jmp
idivb
mov
arpl
lock
sbb
sbb
push
lcall
mov
jnp
add
mov
inc
jo
sub
in
sahf
mov
lods
movsb
cmc
ja
cmpsb
xor
dec
adc
adc
repz
pop
and
jmp
inc
jb
leave
push
sarl
xchg
pop
adc
sbb
cwtl
mov
hlt
int3
scas
jp
mov
outsb
stos
pop
pop
sub
ret
jmp
subl
and
in
scas
loop
xchg
or
mov
pop
mov
pusha
out
push
inc
data16
out
jge
scas
popa
out
mov
outsl
push
and
in
xchg
jmp
imulb
cwtl
loop
mov
rclb
xchg
std
fiaddl
cwtl
les
dec
int
or
dec
js
arpl
rclb
xor
popl
and
insb
cmp
pop
sbb
pop
push
pop
and
mov
sub
sub
cmp
imul
movsb
pusha
adc
xor
mov
jb
jle
inc
jae
jne
pop
shrb
jge
lock
sarl
sub
or
cmp
nop
enter
imul
mov
scas
jnp
loope
pop
push
mov
pop
and
aaa
pop
xor
xchg
xchg
dec
enter
mov
pop
fstpt
jb
jbe
cmpsl
stos
jmp
jmp
pop
jp
mov
jecxz
inc
cmpsb
repnz
das
call
dec
lock
xchg
mov
cmpsb
movsb
sub
jo
inc
mov
subb
push
mov
lods
adc
mov
insb
inc
aas
int
jl
push
pop
int3
and
pusha
and
push
pusha
rcrb
loop
cmp
shlb
inc
pusha
mov
sub
in
and
sub
jl
mov
sub
leave
out
adc
int
cs
mov
add
aam
rclb
icebp
mov
fcmove
in
push
lret
pop
push
lods
out
cld
adc
imul
cmp
gs
lahf
and
pushw
or
sbb
cmpsb
jge
sbb
xchg
inc
int
and
punpckldq
sub
add
dec
add
into
stos
inc
mov
jo
push
daa
inc
sbb
cmpsb
stos
mov
loopne
loopne
fsts
inc
ljmp
sub
mov
xor
icebp
jno
ja
stos
nop
xchg
xor
xchg
fcomi
xor
popf
pop
jne
dec
inc
pop
movsl
pop
pop
shll
sub
fimull
rcll
adc
test
ljmp
adcl
inc
jl
push
lock
loop
sbb
dec
jecxz
or
scas
add
aad
es
push
dec
pop
testl
and
mov
repnz
mov
push
fs
and
out
mov
inc
cli
loop
inc
cli
pop
xor
sbb
adc
test
movsl
xchg
aas
sbb
or
jecxz,pt
sub
insb
mov
ficoml
aaa
stc
dec
loop
push
das
mov
pop
in
fmull
cmp
adcb
dec
pushf
or
cs
jae
xchg
mov
out
cmp
rclb
sub
push
daa
mov
mov
lock
mov
popf
mov
mov
clc
and
sahf
add
jbe
jecxz
test
or
xchg
sub
sahf
xchg
mov
divl
jno
cmp
call
or
jno
popa
scas
es
sub
adc
xchg
mov
sbb
jno
outsl
sub
mov
movsl
les
dec
mov
cmp
jmp
and
lods
adc
subb
iret
aad
cmpsl
lret
pop
xchg
movsb
push
gs
add
mov
cmp
data16
xor
mov
arpl
stos
push
js
out
dec
pusha
iret
in
repz
es
ds
adc
dec
dec
pop
mov
or
test
xchg
mov
and
lahf
jne
cltd
cltd
pmaddwd
push
movsl
loop
and
sub
inc
rcl
adcl
mov
out
xchg
sub
out
out
jne
in
lods
or
push
cmp
mov
bsf
nop
jns
scas
push
js
inc
jnp
pop
inc
mov
pop
cmp
sub
inc
jo
adc
iret
adc
push
ss
sbbb
xchg
movsb
int3
push
inc
sub
mov
lret
lods
outsl
push
sub
adc
shl
or
pop
and
xor
je
pop
push
mov
and
dec
dec
adc
daa
subb
mov
adc
lock
push
clc
ror
mov
gs
sbb
xchg
or
adc
or
inc
sub
jg
lcall
push
icebp
sub
popf
cmp
and
enter
xor
fnstcw
insl
jecxz
xchg
mov
mov
mov
pop
push
lods
jge
push
dec
out
subl
mov
js
es
mov
push
vpsubb
xchg
or
int
ret
dec
jbe
dec
sub
stc
inc
into
lcall
jmp
xchg
mov
dec
jo
dec
jbe
dec
sti
push
pop
dec
ja
test
repnz
mov
loopne
pop
jecxz
xchg
fcomps
cmpsl
pop
push
xchg
out
cmp
fsub
push
dec
mov
jbe,pn
cs
and
out
fidivrs
call
push
daa
and
retw
call
mov
nop
sbb
jg
jge
jne
mov
pop
std
xor
mov
jnp
fldl
out
out
dec
lcall
cmp
mov
mov
hlt
push
jo
fsubrs
mov
mov
outsl
xchg
rcl
stos
inc
imul
mov
add
lods
or
mov
lea
mov
adc
fldl
leave
insl
stc
cs
repnz
sti
cmp
cmp
pop
call
out
imul
push
mov
lods
mov
cmc
out
adc
add
pushf
in
call
add
rorl
mov
mov
cmpb
call
jo
push
cwtl
lret
jne
pushl
movsl
addl
jbe
cmpsl
inc
popa
sbb
mov
xor
jb
fwait
cmpsb
data16
sub
les
pop
test
lahf
cmp
pop
and
dec
incl
xchg
and
test
dec
in
mov
inc
add
pop
incl
xchg
ljmp
sub
stc
in
shll
aam
dec
lret
stc
mov
test
in
cmpsb
js
add
addb
ljmp
add
subl
mov
ret
imul
fs
in
rcl
add
dec
jo
push
das
out
add
aas
or
add
dec
sub
testb
sbb
test
hlt
cli
test
cmp
add
nop
hlt
sub
cmovbe
or
sub
mov
dec
cmp
rcll
mov
js
mov
lahf
adc
push
negl
xchg
xor
xor
pushf
ret
jne
jl
fcoml
sbb
out
ret
loop,pn
pop
inc
lahf
out
adc
sub
cmp
dec
dec
stc
push
xchg
testl
movsb
or
mov
xchg
lods
push
pushl
enter
lods
lods
xchg
mov
lods
inc
rorl
mov
lods
lret
xor
bound
cltd
clc
pop
mov
call
test
push
popf
inc
sbb
ret
lcall
imul
loope
gs
adc
popf
inc
and
ljmp
or
movsb
lds
inc
insb
add
das
popf
stc
adc
lret
data16
dec
pop
pop
jbe
pushf
fistps
sti
dec
or
dec
repnz
mov
cmp
hlt
orb
movsl
inc
lods
xor
mov
sub
pop
mov
inc
mull
sub
sbb
mov
rclb
fidivl
out
sub
inc
lods
push
mov
mov
add
cmp
pop
cmpsl
adcl
lea
test
push
inc
int3
aad
cmpsl
sahf
inc
add
testl
int3
add
jp
imul
mov
popf
pop
call
adc
incl
adc
sbb
lock
nop
jp
xchg
xor
push
inc
xchg
cmc
jle
stc
inc
adc
fs
cmp
sbb
arpl
dec
pop
push
jae
rorb
mov
ret
jp
or
addr16
sub
insl
or
pusha
cmp
push
mov
xor
mov
mov
rolb
into
enter
call
push
sub
pop
rcll
stc
pop
aas
es
cmp
sbb
cmc
pop
repz
les
mov
mov
mov
in
rcr
lods
das
xchg
fs
or
addb
sub
sbb
sbb
push
pop
jno
push
mov
enter
pop
iret
pop
popa
push
sahf
cltd
ret
fcoms
xor
lock
call
inc
mov
pop
into
std
jmp
movsl
jecxz
adc
mov
xor
cmp
not
adc
je
mov
sti
mov
inc
pop
add
push
sub
xchg
sub
xor
imul
sbb
shll
addr16
repnz
popf
ret
out
out
fstpl
movsl
inc
push
insl
and
mov
orb
pop
mov
sbb
or
mov
aam
pushf
cmc
repz
dec
repz
jbe
std
pop
mov
fmul
roll
divl
cmc
pushf
lds
mov
pop
shlb
lods
and
outsb
shrb
push
adc
mov
add
ret
mov
rcrb
jmp
sbb
mov
sub
dec
pop
inc
mov
sub
rcrl
call
dec
xor
repz
sub
testl
sarb
xchg
ret
lea
mov
and
and
leave
mov
push
sbb
repnz
push
out
sbb
nop
notb
dec
add
mov
mov
lret
xchg
adc
sbb
clc
xchg
call
jp
inc
stos
in
adc
cmpsb
adc
jecxz
xchg
mov
xor
mov
lds
mov
sarb
and
xchg
fadds
dec
and
lods
neg
cmp
loope
cmp
movsl
arpl
fwait
dec
mov
test
and
push
aad
loope
insb
add
add
das
sbb
mov
mov
ret
outsl
lea
adc
jb
sahf
ret
fcmovnb
daa
dec
sahf
jge
push
ficompl
fwait
jmp
pop
shr
pushf
adc
jns
jecxz
inc
xchg
fidivrl
dec
xlat
jmp
mov
jns
mov
clc
or
insl
pop
pushf
data16
jbe
inc
pop
data16
iret
cwtl
mov
fimull
or
ljmp
aaa
leave
jge
add
push
or
inc
into
xor
fcompl
insb
lock
push
scas
pop
popa
mov
call
pop
fs
push
outsl
ficoml
aad
test
shll
or
cmpsb
out
or
adc
shlb
mov
or
rcrl
adc
xchg
mov
fidivrl
cmp
out
fisttpll
and
xor
ss
icebp
in
cmp
xchg
call
addr16
inc
loopne
adc
das
or
push
test
mov
xor
push
loopne
mov
or
fs
clc
ljmp
call
xor
lods
fbstp
and
pop
into
jo
icebp
shrb
lea
ja
xchg
xchg
les
gs
in
add
pop
dec
out
cmc
or
fwait
ret
rorb
pop
push
orl
dec
pushf
sub
enter
ficoml
out
or
or
lea
push
int3
mov
mov
and
or
movsl
mov
divl
xor
xor
sub
enter
dec
in
cli
or
dec
fucomip
cltd
cmp
lds
and
popf
dec
andl
jecxz
inc
push
das
lods
or
push
and
ljmp
bound
imull
mov
fimull
cmc
jae
lahf
nop
std
test
sub
ret
cmp
fiadds
and
dec
iret
movsl
rcl
adc
addr16
rol
inc
ret
pop
xorl
jl
sub
push
and
ret
or
push
mov
clc
mov
add
mov
add
imul
dec
fucomip
std
xor
imul
testb
fbld
push
in
add
push
cs
aam
mov
jnp
mov
add
movsb
test
ja
mov
cmc
mov
mov
pop
and
enter
pushf
adc
sbb
and
int
cltd
sub
scas
add
pop
mov
ds
pop
mov
mov
aas
movsl
nop
sub
lahf
movsl
insb
push
dec
outsl
nop
add
sti
adc
icebp
repnz
mov
lds
dec
movsb
dec
shl
arpl
inc
in
addr16
jle
sub
out
push
mov
cmc
pop
inc
out
loopne
roll
jbe
cmp
dec
loopne
mov
aam
inc
and
jp
pop
insl
jg
or
inc
fidivrl
ja
enter
insl
movsl
mov
cmc
fwait
int
aam
inc
sahf
mov
pop
repz
outsl
scas
xchg
inc
bound
xchg
sti
insl
jae
dec
inc
sbb
xlat
pop
xorl
mov
dec
lret
lods
aas
lret
jbe
rorb
in
and
xor
js
repz
lock
rcl
out
sbb
cmp
out
sbb
mov
dec
aam
sti
or
mov
loope
mov
pop
mov
cwtl
push
mov
dec
jle
cmp
cvtps2pd
sub
callw
enter
call
mov
in
mov
adc
in
inc
cmp
jno
in
rcl
push
idivb
mov
sbb
lods
mov
push
clc
test
bswap
inc
xor
jp
inc
insl
add
sahf
push
out
int
lahf
mov
cli
shll
adc
xor
mov
mov
cwtl
div
pop
cmpsb
mov
fcomi
push
inc
es
jge
popf
sbb
in
jae
adc
inc
push
scas
xor
mov
adc
pop
lds
out
mov
dec
mov
push
push
test
mov
and
bound
push
jle
test
lahf
jns
pop
mov
loope
lods
xor
jno
push
xchg
mov
jae
out
sub
mov
xor
imul
sahf
and
lret
inc
sbb
or
mov
outsl
test
cmp
pop
cld
cmp
lods
cmp
mov
jno
mov
test
lods
push
jp
lret
nop
das
mov
jo
pop
push
incl
dec
xchg
dec
lcall
add
xor
jg
xor
fnstsw
gs
xchg
ret
fst
cmp
inc
add
sub
sub
outsb
dec
shlb
addr16
cmp
in
xchg
xlat
mov
pushf
pop
addr16
dec
repz
movsb
scas
ss
sbb
xor
fistl
andb
mov
add
jae
or
xor
mov
into
out
push
add
adc
pop
cmc
dec
fisttpl
fsubrs
sub
mov
cmp
jae
mov
scas
test
fnsave
pop
pop
je
dec
push
jns,pt
lods
push
adc
idiv
sub
add
rcll
mov
arpl
mov
into
or
pop
out
inc
sarb
push
xchg
sbb
out
ss
stos
add
mov
sahf
mov
mov
inc
clc
mov
pop
cli
outsl
sbb
test
vorpd
lcall
mov
fmull
and
or
push
clc
xchg
sub
loope
xlat
test
fs
fucom
cmp
rcrl
xchg
cmp
jl
inc
iret
stos
aad
stos
inc
mov
inc
jecxz
addr16
sahf
push
xchg
push
int3
jae
pusha
sbb
fbld
pop
inc
xor
stos
push
xor
lahf
int3
dec
mov
sahf
jp
int3
in
mov
movsb
fidivrs
aam
sahf
or
pop
nop
std
xchg
fwait
pop
divb
sub
js
movsb
fnstenv
mov
ds
mov
pop
in
and
inc
xchg
out
leave
insl
add
mov
arpl
push
inc
adc
mov
inc
out
orl
loope
mov
lahf
shrb
imul
sub
jp
test
cld
mov
or
pop
cmp
daa
enter
mov
dec
push
jle
pop
outsb
sbb
pusha
divl
aam
sbb
flds
subl
lcall
rolb
jae
icebp
dec
push
push
sub
xor
push
sub
inc
sbb
test
add
lcall
mov
xor
sti
rcrl
repz
hlt
xor
add
test
addr16
int3
pop
push
icebp
outsl
out
stos
xchg
sbb
mov
add
fwait
sbb
push
in
jbe
ret
jecxz
xchg
mov
mov
adc
pop
mov
enter
mov
add
sti
mov
inc
cmc
test
xorl
dec
or
stc
imul
xor
lds
rcrb
mov
or
fcoml
popf
hlt
rorl
std
repnz
pop
shrb
lods
mov
cmpb
sbb
mov
xlat
cmp
sbb
into
dec
hlt
and
xchg
sub
testb
xor
and
jp
add
sub
jb
add
jg
jg
add
cli
push
cli
loop
repz
jno
pop
imul
movsl
out
mov
mov
pop
dec
push
outsl
cli
lock
arpl
mov
or
push
sti
popa
or
push
push
mov
mov
mov
push
cltd
repnz
out
inc
lret
mov
loopne
jno
fsubs
inc
outsb
adc
lahf
ffree
loop
add
pop
nop
fwait
sub
subb
dec
xchg
adc
pushf
cwtl
jb
adc
xchg
insl
sbb
cld
xorl
std
xchg
in
iret
jl
sub
pop
pop
mov
jp
mov
mov
insl
outsl
or
int3
pop
lods
inc
cld
push
xchg
xchg
cmp
xchg
ljmp
movsl
pop
jae
sbb
js
add
fisttps
cmp
pop
sub
and
xor
lcall
jg
xchg
mov
or
dec
ss
roll
inc
or
cwtl
imul
dec
xlat
in
xlat
std
sub
sbb
xor
xchg
loopne
jg
jmp
shlb
ret
lods
add
pop
and
shr
scas
pop
ss
mov
mov
fsubl
shr
xor
in
adc
ja
or
pusha
and
xor
movsl
loop
repz
sti
lock
inc
loopne
adc
mov
inc
cwtl
mov
sbb
mov
mov
dec
outsb
shlb
and
or
outsb
add
rolb
pop
repz
inc
mov
dec
fwait
cmp
pop
in
adc
xchg
test
jle
jae
shlb
or
rcrb
xchg
dec
pushf
ret
ret
ds
lahf
pop
pop
inc
mov
pop
test
sub
push
pop
repz
ljmp
rclb
xor
vcvtss2si
outsb
mov
stos
mov
out
mov
xchg
adc
push
and
inc
lea
in
add
mov
into
push
pop
pop
sbb
push
stos
pop
mulb
loope
cmpsl
sbbl
mov
sar
sbb
dec
jl
cmp
pop
test
int
imul
adc
cmp
out
cld
fs
pop
dec
cmc
int3
lcall
push
inc
adc
imul
shlb
fcomps
movsb
xor
aas
lock
fwait
out
sub
ljmp
leave
mov
ret
fbld
pushf
sub
repnz
sbb
dec
mov
add
cmpsb
lods
sbb
into
push
pop
push
push
scas
stos
xchg
or
das
xchg
jl
sub
stc
data16
dec
xchg
lods
out
cmp
xchg
int3
and
int3
lea
jg
repz
xchg
scas
popa
das
and
insl
ss
inc
jg
push
std
std
movsb
mov
fs
xchg
push
mov
dec
lret
xchg
xor
xrelease
xor
inc
pop
xlat
mov
jns
addb
popa
cmpsl
pop
imull
fcmovnu
cs
mov
sub
pop
sub
or
or
xchg
imul
pop
mulb
imul
fwait
jnp
cld
jne
jmp
pop
imul
sbbl
push
adc
and
std
lods
pop
cmc
out
inc
bound
fwait
cmp
pop
sub
sub
scas
cwtl
adc
add
aad
mov
sbb
aad
or
push
add
or
ret
adc
pop
shl
inc
mov
inc
dec
adc
andb
rclb
push
fidivl
jnp
dec
or
add
add
pop
es
mov
or
or
pop
dec
jbe
xchg
or
mov
and
fdivl
enter
or
or
das
adc
inc
push
int3
lods
xlat
ljmp
push
and
out
int3
jno
fdivs
cld
pop
mov
mov
pop
cmp
pop
test
pusha
test
push
out
addr16
lret
lret
mov
outsb
and
clc
loop
rorl
jge
lods
insb
inc
cmpsl
mov
imul
ljmp
push
jne
cli
enter
inc
std
push
cmp
dec
outsl
arpl
int
aad
insl
xor
mov
stc
addr16
mov
sub
or
lods
jmp
push
outsb
pop
clc
loop
gs
mov
push
jg
dec
sbbb
and
std
sub
lock
sbb
jl
mov
fcompl
gs
data16
cmpsl
idivl
inc
adc
mov
enter
mov
shrb
xor
rcrl
sbb
cwtl
adc
scas
jle
ss
icebp
bound
lock
fldt
inc
mov
xchg
bound
imul
addr16
sbb
popa
dec
push
sbb
mov
jnp
ret
sti
and
dec
xchg
pop
dec
jo
xchg
shll
pop
push
lahf
mov
mov
les
and
imul
pop
out
scas
aas
bound
outsl
fsub
dec
insb
push
hlt
lret
add
ljmp
push
out
cmp
sbb
test
ficoms
push
mov
pop
adc
aam
call
dec
pop
dec
pusha
call
push
inc
insb
hlt
cli
dec
mov
es
inc
mov
pop
pop
ret
jp
pop
shlb
xchg
mov
sar
cli
xor
ja
les
iret
in
rcrb
cmp
dec
adc
lret
adc
test
mov
gs
mov
sbbl
and
test
inc
in
xchg
xchg
push
xchg
daa
jp
pop
out
repnz
jecxz
jle
outsb
mov
icebp
std
or
or
notb
adc
sub
imul
push
xchg
nop
jecxz
mov
aad
shll
push
jg
sbb
or
ja
inc
mov
cld
cmpsb
xchg
push
js
ja
idivb
adc
and
push
test
loopne
mov
xchg
sti
push
aad
dec
insb
adc
inc
pop
mov
cmpsl
cmp
mov
repz
dec
push
cmc
xlat
int
int
mov
sbb
fwait
mov
fwait
roll
add
sub
aas
fucom
nop
mov
lahf
dec
lcall
ja
jnp
cmp
mov
xchg
call
xor
jne
lock
jg
or
out
push
dec
je
insb
mov
daa
and
xchg
sub
int3
inc
adc
push
insl
rorl
je
pop
lds
sbb
fidivl
jl
cmp
xor
fnstsw
jl
pop
cmp
inc
arpl
dec
jbe
lret
mov
dec
rcll
lahf
push
movsb
fwait
int3
shl
xor
aaa
pop
call
sub
arpl
loope
cmpsl
jl
jmp
enter
inc
push
cwtl
lds
ja
push
push
dec
jg
in
cli
xor
mov
popa
xor
cmp
xchg
jg
pop
into
and
sbb
or
sbb
cmp
aam
aaa
xor
ja
jle
cmpsl
nop
fsubp
adc
sarb
lahf
insb
shlb
imul
cmp
sub
cmp
cmp
jne
xor
outsl
fisttpll
out
mov
sbb
loope
add
pop
add
mov
sbb
add
mov
xor
xchg
push
inc
call
fs
jmp
pop
mov
mov
shl
or
dec
dec
and
push
push
push
decl
dec
pusha
dec
bound
loope
fwait
push
sahf
movl
aaa
mov
dec
scas
push
push
and
icebp
inc
out
inc
negl
std
cmpsl
jmp
xchg
cmp
adc
pop
mov
and
mov
rcl
add
fsubs
ret
xorl
mov
jmp
mov
pop
icebp
sti
xor
fcoms
mov
mov
and
and
out
or
clc
sbb
je
loope
pop
and
xor
xchg
mov
rorl
and
push
mov
out
lods
dec
xchg
scas
sbb
mov
cmc
aam
movsl
mov
iret
dec
lock
fisubrl
sbb
pop
mov
mov
jge
outsb
xorl
inc
imul
mov
add
and
pop
jne
mov
and
jge
pop
addr16
sti
int
pop
sbb
mov
dec
cmp
enter
sbb
loope
repz
mov
add
mov
loope
cmp
sarb
roll
out
or
out
push
repz
pop
xor
sbb
xor
and
xchg
sbb
in
popf
sbb
cmp
ljmp
add
add
out
std
cmp
mov
int
push
xchg
or
adc
cli
adc
jbe
cmpsl
lds
mov
jge
xor
mov
or
xor
cmpsl
cltd
mov
xor
xchg
mov
mov
mov
dec
dec
jmp
stos
repz
lahf
push
inc
sbb
xchg
test
mov
xchg
dec
push
jno
cs
aad
aad
mov
lahf
cli
pop
jmp
mov
sbb
loop
inc
daa
xchg
and
ds
and
jmp
mov
aaa
je
push
add
fildll
push
pop
adc
sahf
mull
pop
pop
adc
loop
dec
adc
sbb
mov
clc
xor
cmpl
xor
jno
jb
enter
popf
int3
je
jle
mov
icebp
iret
xchg
jmp
xor
add
add
mov
incl
stc
cli
aas
mov
push
pop
mov
inc
adc
cmp
sbb
inc
push
sub
push
rorb
popa
arpl
xor
or
cmp
pop
sbb
faddp
or
cmpsb
in
inc
mov
jbe
push
pop
or
and
mov
lret
xchg
scas
lods
push
sbb
js
es
mov
lret
or
xchg
xor
xor
or
xchg
jge
ret
fmulp
sbb
mov
mov
ljmp
add
fldl
and
sbb
jl
test
sub
and
or
in
incb
sbbb
imul
adc
insl
fstp
daa
cmp
lods
mov
push
daa
inc
mov
cmp
popf
sbb
out
movsb
ljmp
sub
sub
mov
cmp
sub
fiaddl
ss
cli
hlt
in
adc
push
cmp
or
and
and
sahf
rorb
push
lcall
lods
sbb
jb
stos
iret
movsl
dec
imul
scas
es
clc
cmp
mov
jns
iret
roll
movsb
mov
adc
loop
or
pushf
mov
cmc
add
xchg
js
xchg
push
and
sbb
jmp
call
lods
in
and
data16
lret
out
mov
int
and
pop
cli
iret
jmp
rol
in
les
sahf
das
mov
fucomip
test
sub
mov
push
cmp
je
adc
xor
jae
outsb
mov
inc
push
popa
lret
sbb
cmp
inc
inc
sbb
add
push
cld
jns
jne
lea
or
std
cmp
xchg
ret
mov
xchg
fisubrl
push
add
xchg
add
push
lret
jl
dec
pushf
call
es
push
inc
ds
or
and
imul
rorb
pshufw
fwait
out
cmpsb
imul
rcr
loope
mul
xchg
ret
adc
mov
lods
jne
pop
adc
cmc
jle
inc
cmpb
push
icebp
push
cwtl
sub
ret
stos
push
pop
mov
in
jg
jecxz
pop
dec
xchg
dec
iret
rolb
je
xor
popa
inc
inc
adc
pop
stos
mov
jo
outsl
mov
mov
jl
fs
stos
call
push
lea
mov
clc
in
xchg
and
mov
in
ljmp
std
xor
xchg
push
out
divb
cmpsl
mov
jecxz
stos
stc
aas
loop
rcll
mov
ss
jmp
cmp
pushf
jnp
inc
pop
fs
mov
xchg
mov
push
mov
cld
adc
push
cmc
addb
pop
in
and
xlat
xchg
out
mov
dec
xor
push
enter
sub
loope
dec
aad
das
jge
dec
jl
sbb
pop
dec
mov
pop
mov
pop
or
or
sub
and
test
sbb
xor
push
stos
mov
arpl
xchg
cwtl
stc
in
pop
sbb
xchg
adc
mov
inc
fisubs
sub
repz
xchg
xchg
hlt
scas
mov
push
xor
jle
jmp
in
stos
cmpsl
test
pop
push
daa
arpl
out
mov
cmpl
adcb
jl
xchg
das
sub
push
mov
jb
sub
les
ljmp
std
fadd
sti
ret
mov
add
cmp
xchg
enter
cmp
ud1
sti
mov
cli
dec
sahf
loop
mov
mov
xor
mov
in
mov
mov
sub
push
loope
fsubr
orb
xchg
pop
adc
xor
pop
add
and
sti
push
es
push
sbb
rclb
ljmp
mov
leave
dec
cmp
mov
paddsw
aad
loope
mov
push
mov
jno
lret
dec
stc
add
xchg
xchg
aaa
clc
movq
loopne
inc
adc
mov
test
hlt
add
jmp
subb
cmp
mov
mov
js
xchg
outsb
ret
and
addr16
sahf
or
dec
movsb
cs
push
sahf
lds
add
add
stc
or
inc
push
jnp
jbe
inc
repz
ljmp
xchg
lock
cmp
or
inc
cmpsl
pop
add
negb
fwait
outsb
lea
loop
outsl
cs
jo
xchg
lret
or
pushf
insb
out
jo
loopne
lods
xchg
cwtl
and
loop
jb
xor
rcr
mov
mov
lret
mov
aas
cli
sbb
movsl
insl
push
nop
dec
push
and
or
out
push
inc
jp
sub
adc
in
lods
call
cmp
sub
mov
inc
cmpsb
aam
sbbb
sbb
mov
stos
fdivrl
shll
mov
pop
int
sbb
jmp
fcmovb
call
mov
dec
push
fadd
xor
dec
push
gs
inc
add
mov
adc
fcomps
or
cld
mov
sbb
sti
adc
or
in
sub
and
xchg
aad
pop
lds
cmp
sahf
push
pop
lods
pop
push
out
push
lahf
push
and
comiss
das
mov
jb
mov
jg
rcl
pop
dec
inc
dec
pop
mov
out
xor
sub
xor
cmc
and
mov
cmpsl
insl
ret
cmc
ret
mov
pop
fsubrl
jge
dec
push
ds
mov
dec
ss
test
lock
adc
jno
jge
push
mov
or
sub
out
test
cmp
popa
push
std
mov
cmp
dec
mov
jecxz
loopne
and
jmp
mov
push
es
cld
and
imul
cs
out
stc
sub
ret
incb
mov
popa
sub
aaa
imul
arpl
insb
jae
inc
push
pop
xlat
je
xchg
jmp
mov
fcoms
rorl
add
scas
sbb
fwait
movhps
enter
or
lods
imul
add
cli
test
nop
sahf
jge
enter
pop
inc
mov
aad
push
xor
negb
sbb
sarl
push
jp
pop
aam
xor
outsb
dec
mov
and
push
imul
pop
or
les
pusha
mov
jmp
aad
xor
psubw
push
subb
cli
cmp
pusha
sub
ret
fidivrl
adc
pusha
jnp
sub
sub
sbb
sub
xor
jle
hlt
clc
das
addl
add
adc
xlat
aaa
mov
mov
in
shlb
rol
pop
sbb
int3
outsb
out
xor
call
stos
enter
adc
dec
mov
cmp
sahf
push
cld
mov
lahf
adc
or
mov
or
imul
sahf
fistps
mov
xchg
mov
fstpl
mov
sub
adc
loop
mov
jno
mov
xchg
jno
imul
out
iret
pushf
push
jnp
mov
xor
jge
push
loop
mov
test
mov
sub
xchg
mov
shrl
sar
add
and
mov
loop
out
inc
cld
cmpsl
cli
popa
adc
sbb
clc
out
bound
lds
cmp
movsb
xchg
das
aam
loope
adc
ja
in
xor
xchg
or
ja
push
pop
sbb
pop
add
insb
dec
xor
or
lods
dec
cwtl
movsl
pusha
and
mov
lds
adc
xor
mov
out
inc
es
and
std
icebp
cmp
movsl
inc
int3
fs
addr16
aas
push
fs
sbb
test
mov
je
mov
inc
adc
lock
cmp
or
xchg
jae
aaa
sub
jno
inc
xlat
xchg
pop
fstps
inc
push
fists
testb
sbb
outsb
arpl
out
in
dec
mov
mov
out
jl
decl
out
push
insw
insl
fmull
and
cs
das
push
cli
jne
outsb
aam
push
movsl
jns
sbb
loope,pt
inc
aaa
and
lret
clc
jmp
cmc
ljmp
ja
leave
mov
adc
jmp
cltd
ret
dec
mov
repnz
cld
sub
xchg
test
xchg
in
xor
fucom
es
push
and
sarb
loopne
iret
aas
pop
bsr
out
addl
jae
push
out
or
mov
nop
sbb
imul
xor
mov
aad
dec
pop
xchg
pop
adc
adc
inc
lods
mov
fmuls
out
adc
sbb
mov
sbb
lcall
fnstcw
mov
xchg
pop
pusha
out
dec
sub
xchg
loopne
jae
leave
out
notl
pop
outsb
stc
fldenv
sbb
mov
stc
xchg
test
xchg
popf
adc
sub
mov
and
popf
pop
fsubrl
cld
dec
sahf
inc
mulb
jmp
jg
inc
in
cmp
jp
shlb
ficompl
or
sbb
sub
jmp
add
aam
sbb
lds
xchg
cwtl
push
push
testb
xor
sub
jbe
sbbb
iret
push
fstpt
mov
lods
int3
js
pusha
xchg
pop
in
aas
sbb
fs
in
loopne
inc
loopne
movsl
icebp
mov
adc
mov
cmp
push
scas
rcl
lock
and
inc
sti
inc
sti
mov
ss
jp
cmovae
dec
movsl
and
aad
push
mov
arpl
imul
xchg
fs
dec
icebp
aas
mov
mov
mov
adc
xorl
pop
or
dec
aam
in
imul
or
repz
push
out
add
popa
push
adc
aaa
xor
adc
mov
mov
jbe
jbe
ljmp
in
stos
test
mov
shrl
and
fmul
pop
int3
mov
loop
or
repz
repz
jb
mov
shll
mov
mov
dec
and
xor
fstpl
imul
dec
idiv
ja
xor
testb
and
leave
dec
adc
cmp
ja
movsb
cmpb
mov
xlat
mov
mov
or
mov
push
mov
jbe
add
imul
test
pop
andps
mov
outsl
scas
sti
jle
jno
js
sahf
pop
lock
cwtd
sbb
loope
dec
jns
lret
pop
das
xchg
fsubl
lret
mov
sub
fwait
addr16
jo
mov
sahf
mov
inc
add
test
pop
add
cmpsl
lcall
sub
mov
adc
rclb
xor
mov
add
push
rcpps
in
inc
push
and
lea
out
lock
jmp
dec
push
mov
imul
push
inc
outsl
fdivrs
cmpsb
dec
arpl
jle
dec
loope
in
sbb
mov
xor
sarl
add
push
notb
decl
mov
out
in
jl
cmp
inc
iret
xchg
pop
popf
pop
adc
jno
cmpsb
push
adc
push
sbb
cwtl
imul
es
mov
dec
and
repnz
ja
adcb
push
xor
fstl
repz
pop
in
cli
inc
push
push
scas
sbb
pop
sub
push
jbe
dec
xchg
xchg
lods
sar
das
mov
fsubrs
aaa
push
jge
xlat
push
add
and
push
fsubrs
std
clc
sub
cli
sub
icebp
add
add
xor
xlat
dec
inc
in
idivl
insb
xchg
dec
xchg
sbb
or
test
adc
jge
mov
pop
or
push
adc
inc
loope
divb
cld
mov
mov
aas
out
dec
pop
mov
cmp
ja
mov
xorb
xor
in
stos
push
sbb
jle
xchg
inc
notl
sbb
ss
in
dec
adc
pop
lock
jl
test
sbb
aad
mov
jne
adc
repnz
sbb
inc
int3
test
mov
loope
fistpl
jae
push
lods
popa
loopne
lret
adc
sub
loope
lods
pop
jp
jno
shrl
dec
aaa
or
pop
pop
cwtl
out
mov
push
call
mov
xchg
je
stc
incb
dec
xor
fnstenv
loop
insl
pop
popf
daa
and
div
out
mov
lret
cmc
movl
adc
stos
cmpsb
into
jecxz
fsubrs
jecxz
jo
repz
mov
pop
mov
push
inc
insb
cmp
and
addr16
lret
jl
jecxz
enter
dec
movsl
mov
mov
fs
sub
jp
in
xor
xchg
pop
fwait
xchg
aas
cltd
sub
setae
aas
ljmp
daa
fs
ret
adc
jne
sti
ja
sahf
mov
jb
mov
xchg
test
aas
mov
rorb
jae
or
sbb
test
pop
adc
inc
std
jmp
adc
fidivrl
testl
adc
dec
cmp
mov
xor
pop
push
push
mov
lret
dec
mov
mov
jl
and
sub
push
test
sub
fnsave
outsl
inc
dec
mov
dec
inc
loope
xchg
sub
jl
jae
test
mov
imul
incl
xor
sahf
or
xchg
fsubrl
jmp
dec
sahf
mov
popf
mov
data16
movsb
imul
push
je
fidivrl
xchg
or
dec
mov
adc
jne
sub
dec
mov
fisubrl
lds
test
push
stc
dec
incb
out
cmpsl
add
dec
scas
pop
je
mov
pop
and
rclb
idivl
inc
cld
cmpsl
pusha
inc
std
cmp
mov
cli
mov
shlb
mov
loop
mov
sar
jns
sub
push
cmpsb
pop
movsl
stc
stos
bound
mov
addr16
xchg
call
pop
js
xchg
fsub
xchg
and
xchg
xor
cmpsl
and
or
aaa
jns
lret
jecxz
add
jge
push
cmpb
xchg
cmp
ja
mov
inc
jb
in
cmp
pop
sarl
add
mov
loop
inc
cmp
dec
sub
or
mov
mov
std
push
inc
sub
jge
hlt
cltd
hlt
push
outsl
enter
mov
data16
mov
add
fs
or
sarl
pop
enter
stc
mov
mov
dec
gs
hlt
mov
or
dec
stc
lea
cmp
adc
icebp
scas
mov
outsl
out
rolb
jmp
mov
daa
int
in
mov
pop
movsl
jo
xor
jb
dec
in
sbb
jo,pn
lods
inc
push
lea
mov
xor
lea
cmp
mov
fwait
lods
xchg
dec
inc
add
loop
scas
xchg
nopl
jnp
hlt
mov
sbb
ds
push
jns
aad
outsl
mov
or
xor
fwait
jmp
sahf
jmp
test
insb
or
je
imul
sbb
pop
lock
loope
push
pushf
pop
push
push
lret
fldenv
xor
fwait
js
mov
xor
hlt
mov
js
sbb
and
cltd
repnz
push
scas
push
push
lods
add
inc
jmp
sbb
movsb
and
xor
xor
test
outsl
jle
mov
ret
jecxz
push
jno
push
fstps
cmpsl
call
sub
add
xchg
cmpsb
add
ret
lods
jecxz
in
jmp
mov
ret
push
arpl
adc
jnp
adc
imull
or
xchg
bound
adc
xor
lcall
xor
imul
pop
push
test
sub
dec
es
adc
fistps
stc
sub
mov
mov
in
ret
adc
cmpsl
mov
jle
or
pop
rcr
add
jp
mov
mov
dec
pop
cs
dec
push
push
adc
test
dec
xor
int3
inc
mov
nop
gs
add
aas
mov
sub
sbb
cwtl
pop
movsb
adc
mov
sub
cli
cmpsl
sub
jo
fsubl
leave
xchg
cltd
xor
in
inc
sarb
jle
inc
mov
adc
fiadds
les
cmc
js
xchg
repz
mov
sbb
out
leave
test
repz
ja
imul
jle
pop
and
or
cltd
inc
mov
pushf
xchg
dec
mov
dec
das
std
push
add
repnz
mov
add
push
inc
call
aad
fwait
mov
xlat
int3
pop
in
dec
imul
pop
test
sub
test
fsubrl
fists
pop
xorl
adc
mov
or
dec
cmp
lods
arpl
sbb
xor
dec
cmpb
sbb
ret
nop
jge
cmp
dec
out
stos
xchg
adc
jp
mov
push
xor
divl
fucomi
in
and
out
incb
cpuid
aad
xor
add
mov
lods
push
push
repz
leave
jb
rcr
mov
sub
pop
pop
vpaddsw
add
sub
push
in
mov
ret
push
xor
lods
ds
jo
sbb
call
sub
in
scas
sbb
mov
xor
add
and
or
testb
cmp
xor
std
add
lods
mov
mov
adc
xchg
js
nop
andl
jecxz
mov
inc
sub
xchg
cmpsb
cmp
hlt
rol
loop
xchg
inc
ja
test
mov
mov
and
pop
outsl
sbbl
arpl
mov
cmp
add
xchg
lock
pop
adcb
inc
mov
dec
sbb
or
loope
scas
in
push
into
xor
mov
iret
add
les
mov
and
cmpsl
cltd
pop
add
popa
mov
mov
sub
mov
pushl
stos
adc
je
xor
ret
xor
das
insb
rcrb
or
xlat
loop
outsl
in
in
shr
popa
or
jae
int
icebp
insl
pop
or
xor
xor
pop
push
xchg
pusha
dec
or
dec
dec
out
jne
daa
xchg
out
inc
out
cmpsl
pop
and
cltd
mov
sub
inc
pop
mov
sub
lods
inc
ds
lods
inc
addb
or
jno
fistl
mov
mov
jae
mov
pop
ljmp
addr16
push
cld
inc
int
pushf
scas
xchg
push
mov
fdivs
add
push
cmp
push
mov
cmc
aad
leave
mov
jbe
jae
divb
add
mov
push
xchg
mov
cmp
push
mov
stos
xchg
xor
movsl
cmpsb
xor
negl
cmp
dec
xlat
std
cmp
ss
mov
movsb
movsl
mov
je
movsb
int3
sbb
mov
dec
sbb
dec
sbb
outsl
ljmp
xchg
dec
xlat
mov
sbb
out
jge
dec
call
scas
icebp
jl
shll
or
mov
test
pop
test
adc
mov
sub
imul
out
cs
jmp
imul
pusha
pop
mov
sub
xchg
add
imul
dec
iret
mov
pop
or
sahf
xor
loopne
in
or
aam
dec
popa
lock
leave
daa
add
stos
sub
ret
and
or
xlat
mov
arpl
jle
fcoms
flds
imul
pushf
jmp
pop
xchg
add
std
mov
push
cwtl
cmp
add
bound
cld
notb
shrb
pop
sub
out
inc
test
out
cmpsb
jp
repz
aam
lods
xlat
jb,pt
paddsw
mov
mov
in
push
sbb
or
out
xor
pop
pop
xchg
lock
add
dec
inc
mov
lods
xchg
adc
xchg
mov
xor
lods
sbb
push
mov
das
add
cli
xor
xchg
out
loopne
adc
je
or
jno
scas
scas
in
sub
sub
and
mov
test
adc
jb
jecxz
mov
fs
bound
jno
and
pop
xlat
mov
sbb
jae
or
mov
lea
or
inc
dec
xor
stos
push
test
loop
pop
mov
out
mov
and
arpl
cmpsb
and
into
push
dec
cmp
repnz
add
test
cs
sub
test
addr16
mov
or
jmp
daa
xchg
sub
and
dec
inc
or
in
inc
repz
out
xchg
jg
pop
ret
lret
ss
mov
loopne
pop
lock
mov
jp
data16
fcmovu
fwait
push
scas
pop
lods
and
pop
sti
pop
sub
mov
out
mov
inc
arpl
xchg
mov
sahf
and
jl
lret
xlat
cmc
js
dec
data16
lcall
xchg
jg
gs
flds
push
cmpl
call
sbb
cmp
out
addl
inc
imul
mov
sbb
sub
outsl
movsb
fs
push
jb
nop
jecxz
adc
insb
leave
cpuid
in
push
outsb
fcoml
add
inc
pop
inc
mov
mov
cmovbe
xchg
jmp
nop
in
shl
imul
adc
les
lret
xchg
gs
bound
dec
je
ret
jmp
enter
ret
mov
xchg
scas
push
push
das
push
cmpl
and
push
outsb
js
xor
lods
xor
or
mov
outsl
sub
sub
xor
sbb
or
outsl
outsb
mov
mov
push
cltd
xacquire
xchg
roll
lods
cmc
adc
cmp
push
inc
add
jb
aaa
sbb
mov
rorl
pop
jl
and
jnp
dec
mov
cvtpi2ps
inc
and
and
dec
mov
mov
jecxz
or
clc
push
jne
jo
mov
repz
sub
jb
jbe
xor
aas
mov
lds
mov
rcr
adc
ret
andl
add
push
lcall
andl
dec
pop
and
jno
xorl
or
cmpl
lods
std
js
lret
cmp
cmp
dec
insl
ret
out
xchg
inc
imul
mov
lret
or
mov
inc
mov
arpl
out
clc
cmp
je
jo
push
loop
addr16
stos
mov
jb
aam
inc
push
loop
sub
ja
dec
jb
jb
cmp
mov
loopne
in
cmp
lret
xchg
and
lods
jo
push
and
and
popf
insl
mov
rorl
test
lahf
ss
mov
ficoml
cltd
jb
stos
lahf
mov
scas
es
push
adc
into
ds
nop
incb
jbe
cmp
stc
ss
mov
cs
imul
cwtl
arpl
jns
fstps
js
aad
mov
xor
mov
mov
inc
jnp
cmp
cltd
push
xchg
popa
dec
mov
mov
imul
xor
add
fcmove
fabs
js
and
cmp
clc
test
push
or
jbe
mov
sub
ret
in
icebp
in
es
pop
cmpb
mov
ja
mov
shrl
aam
push
faddp
aaa
jbe
inc
inc
xchg
cmp
xchg
jne
mov
jo
pop
inc
mov
push
enter
sahf
xor
cmp
push
or
inc
mov
push
xlat
add
mov
loopne
cmp
or
aaa
aad
stos
lock
mov
scas
and
dec
aas
adc
cmc
dec
shlb
adc
push
mov
jle
loopne
pusha
mov
mov
loopne
xlat
pushl
add
push
pop
out
mov
push
mov
jbe
mov
mov
mov
pop
xchg
imul
pop
push
add
fldt
aad
jge
xor
addr16
mov
add
int3
adc
xchg
push
inc
xchg
mov
mov
xor
mov
mov
cltd
sbb
jecxz
insb
pop
sbb
and
sbbl
les
test
repz
sarb
sub
in
lods
mov
push
push
cmp
jbe
sub
test
xlat
and
popf
lcall
cmp
pop
jne
add
addr16
add
sbb
in
push
daa
or
jl
rclb
and
jae
mov
jl
sbb
mov
sti
sbb
cmp
loopne
cli
mov
push
cmp
and
std
ficoms
popa
push
adc
cmp
pop
sbb
das
xchg
mov
pusha
jae
lahf
shlb
loope
inc
and
ret
push
loop
iret
int
add
ret
mov
fprem1
in
adc
or
imul
dec
or
rcrb
mov
sti
adc
fcoml
xor
or
add
xchg
push
jmpw
mov
cmp
push
mov
jl
xchg
stc
fs
ret
inc
faddp
pop
shll
in
adc
and
or
hlt
cmp
pop
inc
and
adc
mov
xor
bound
loope
loope
cmp
call
pop
ds
pop
in
pop
jnp
lods
into
jno
test
outsb
mov
fsts
xor
inc
pop
pop
jge
sub
ret
mov
or
or
popa
idivb
mov
mov
sti
sbb
push
stos
dec
dec
andb
jno
dec
ret
pop
cmp
push
inc
jg
lcall
dec
dec
sub
push
das
test
loope
rclb
sub
inc
pop
stos
pushf
test
lret
dec
hlt
jmp
imul
inc
jge
push
xor
in
jnp
mov
mov
jmp
pop
mov
cmp
icebp
mov
insl
decb
inc
dec
or
xlat
insl
lahf
pop
mov
or
in
mov
push
xor
mov
mov
orl
xor
jb
jecxz
insb
sbb
lds
push
in
xlat
sbbb
arpl
inc
cmp
loopne
and
insb
mov
xlat
aaa
das
int3
dec
cwtl
sub
xor
in
fs
mov
adc
rorl
xor
mov
dec
xchg
pop
shll
fs
jns
mov
jmp
int
movsb
out
and
shrb
arpl
mov
mov
mov
fadds
sub
mov
imul
inc
or
outsb
mov
mov
lcall
mov
fidivrs
pop
sbb
sub
pop
fstpt
cmp
stos
jp
les
or
dec
pushf
inc
xchg
xor
and
inc
mov
mov
fimull
movsl
neg
test
jno
inc
xor
add
imul
sti
scas
mov
pop
mov
xor
cmc
mov
xchg
and
push
outsl
jmp
stc
inc
bound
popf
adc
push
cmp
sub
dec
call
push
stc
iret
mov
push
lret
popa
or
adc
xor
and
adc
mov
lods
xchg
adc
loopne
add
mov
xor
xchg
test
es
jmp
ljmp
leave
xchg
stos
push
or
insb
mov
jle
addr16
xor
adc
rol
cmpsb
pop
loop
shlb
bound
notl
mov
pop
or
xlat
xchg
shll
mov
cmc
or
xor
and
fwait
cs
jmp
sub
cmc
sbb
lcall
cmpsb
lds
mov
fs
jb
data16
scas
sub
gs
ficompl
add
arpl
mov
test
shll
cmp
adc
scas
or
inc
xor
push
inc
lahf
jg
je
out
pop
mov
test
les
cmp
pushf
mov
nop
add
int3
popa
mov
mov
pusha
jb
lods
push
mov
hlt
inc
or
lods
sub
xchg
add
pusha
cli
xchg
pop
scas
fcoms
push
mov
dec
jbe
mov
insl
outsb
rcll
sub
mov
cmpsb
mov
mov
cli
mov
xorb
jnp
add
or
jnp
inc
mov
pusha
clc
test
ljmp
add
lret
scas
arpl
pop
or
in
or
clc
dec
arpl
mov
and
xchg
adc
out
fistpl
pop
sub
mov
stos
nop
jmp
fdivrp
int
inc
pop
cmpsl
xlat
xchg
inc
int
fldenv
push
mov
dec
jmp
pop
fmull
lahf
js
loopne
rcrl
shrb
xor
mov
sbb
xchg
fildl
pusha
cmc
xor
mov
mov
xlat
xlat
xchg
imul
inc
mov
add
mov
jo
cmp
stos
mov
mov
pop
loopne
movsb
popf
ljmp
cmp
das
push
dec
sahf
mov
mov
clc
pop
sub
cmpb
hlt
add
outsb
jge
jecxz
inc
inc
or
add
das
mov
add
mov
icebp
sub
cli
f2xm1
mov
test
aad
outsb
jl
lods
xchg
cltd
into
mov
icebp
addr16
jl
test
cltd
arpl
jg
and
push
xchg
fs
pop
mov
and
cltd
jae
push
mov
and
or
mov
daa
sub
xor
xchg
jge
jge
push
mov
adc
mov
mov
out
stc
out
fwait
enter
stc
xor
xchg
ret
mov
xchg
popa
adc
push
sbb
test
dec
imul
push
adc
mov
das
movsb
add
or
test
and
testl
arpl
cmpl
cmpsl
sub
bound
sbb
out
mov
dec
push
pop
mov
pop
rcl
jb
mov
or
dec
jbe
add
mov
rolb
call
jmp
in
mov
int3
xchg
pop
call
popa
and
enter
cmc
push
and
movl
jmp
fwait
arpl
cmpsl
loop
jnp
loopne
inc
adc
xchg
int
popa
sbb
push
clc
pop
outsb
jb
ds
lret
xor
mov
and
int3
repz
aam
arpl
mov
mov
xchg
outsb
and
push
mov
mov
fcoml
repnz
cmp
loope
xchg
movsl
mull
stos
jns
sbb
jmpw
inc
mov
adc
jmp
mov
cmp
push
and
out
jmp
movsb
ret
les
cmp
ja
fnstsw
hlt
mov
lret
xchg
lret
cmp
popa
arpl
js
push
stos
lds
or
pushf
js
iret
shlb
sbb
mov
subl
inc
loopne
popf
out
mov
or
inc
pop
movsb
ret
loop
sbb
add
mov
or
fs
inc
cmpsl
sarl
movsb
lret
jge
push
sub
add
jae
mov
out
xchg
cmpl
ljmp
ror
mov
aad
fbstp
cmp
mov
and
gs
aad
movsl
pushf
dec
idivb
mov
int3
repnz
outsb
ss
sbb
in
dec
fsts
push
cmp
or
pushf
mov
add
loopne
sub
call
mov
pop
aad
outsb
test
enter
sbb
mov
adc
dec
xchg
xor
insl
and
ds
lcall
or
xor
xchg
pop
mov
jno
pusha
xchg
lahf
jne
sti
gs
enter
mov
loopne
sti
movsl
dec
jle
jle
subl
imulb
xor
cmpsb
clc
mov
jl
pop
clc
rcrl
jp
and
mov
sahf
adc
mov
pop
fldt
xor
imul
rclb
and
sbb
movsl
sbb
jno
cltd
pusha
dec
or
push
adc
xor
mov
dec
inc
push
mov
push
cmp
dec
xchg
ljmp
or
imul
push
fs
adc
or
xor
cmpsl
loop
or
rcl
sub
jg
jl
push
xchg
rcr
sub
push
xor
jl
jb
mov
mov
push
mov
xchg
aas
filds
push
or
cmp
dec
adc
xor
adc
push
icebp
ss
popa
insl
xchg
lret
xorl
fs
xor
into
cmp
aaa
cmp
cmpsb
dec
jg
bound
loop
nop
ret
dec
loopne
rclb
pop
dec
adcb
scas
shlb
mov
std
push
push
jmp
adc
arpl
sbb
call
adc
jnp
mov
or
xchg
mov
fcmovbe
mov
inc
addb
test
daa
scas
pop
push
pop
pushf
jg
adc
jb
testb
fdiv
xor
popa
push
xlat
inc
cmpl
mov
xor
dec
cld
adc
in
in
or
push
jnp
adc
inc
mov
loope
xor
lret
into
and
sti
divl
push
divb
mov
push
icebp
fwait
dec
mov
xor
rorl
daa
cli
or
cmp
lock
stos
addl
inc
popa
jns
in
pop
jmp
mov
stos
and
outsl
push
and
and
lods
mov
or
testl
stc
sub
ds
sub
ret
mov
das
cmp
hlt
sbb
inc
mov
add
sub
mov
xor
adcl
jb
dec
rclb
push
aam
pop
xor
jo
sarl
adc
xor
adc
mov
fdivs
pop
sbb
data16
sbb
je
dec
sub
sarb
jnp
push
filds
and
bound
fstpl
xlat
inc
mov
pop
cmc
lcall
cmp
mov
movsl
fstpt
inc
jnp
scas
xchg
aam
jb
les
cmp
pop
xor
loope
movsl
dec
inc
mov
nop
scas
pop
xlat
les
lret
push
test
dec
mov
test
pop
cmp
push
add
xchg
inc
mov
mov
mov
lods
mov
xchg
out
shlb
mov
mov
aad
dec
pop
out
fstpl
adc
mov
insb
sahf
add
pop
mov
insb
inc
sbb
adc
xor
cmp
xor
test
hlt
xchg
xchg
repnz
add
repz
mov
xchg
push
mov
xchg
popa
in
jae,pn
jbe
xor
in
pop
sbb
or
lds
ds
jbe
outsl
xlat
add
mov
inc
or
add
jne
lret
inc
dec
leave
jmp
int
pop
mov
pusha
gs
std
cmp
mov
enter
fstpt
icebp
arpl
xchg
add
push
mov
push
add
cmpl
iret
shll
repnz
nop
pop
jae
fucomip
call
fstpl
mov
loop
aas
push
rcrb
mov
push
dec
subl
lret
js
movsl
and
mov
pop
mov
movsb
cmp
push
xor
je
scas
mov
dec
daa
add
push
mov
sahf
or
xchg
sbb
add
pop
into
adc
adc
lret
in
xchg
xlat
aad
lds
fbld
mov
stos
repnz
in
pop
sbb
jo
xchg
aas
sub
adcb
jmp
cmp
cmpsl
loop
fdivrs
inc
repnz
dec
sub
cmp
movsb
xchg
inc
jno
push
rorl
dec
cmc
fists
sahf
movsl
das
cmpsb
mov
je
jo
cmovo
push
jo
jae
dec
xor
dec
insb
xchg
dec
lret
mov
push
fsubs
push
rcl
inc
movsb
push
xor
add
cmp
push
mov
jmp
mov
std
mov
jle
into
arpl
sti
lds
cmc
and
lods
pop
nop
orb
mov
out
cmp
mov
xor
and
jg
jb
adc
add
popf
daa
roll
push
shr
jecxz
rorb
adc
xor
jp
sahf
lea
inc
jno
add
lods
push
dec
dec
ret
outsl
int
lock
mov
aaa
inc
in
lcall
inc
push
loope
divl
les
jmp
jo
sub
add
fsubrl
adc
je
xor
sub
stos
dec
fdivrs
stc
icebp
jbe
lcall
and
aaa
test
insb
dec
rcrl
rcr
xor
fisttps
cmp
jbe
leave
adc
inc
and
cld
cli
add
imul
sbb
enter
and
jnp
out
scas
mov
xchg
sub
lea
enter
jne
mov
push
sub
push
xchg
and
jle
ss
inc
pop
fimull
int3
mov
fiadds
shr
mov
mov
stos
daa
fildl
idiv
cli
ss
fsts
sbb
and
rcll
cltd
mov
jp
loope
pop
add
mov
ror
orb
pop
stc
inc
adc
bound
mov
jmp
test
nop
js
in
fidivrs
test
lds
mov
stos
out
dec
popf
cmp
test
fs
outsb
out
addr16
cmpsb
push
stc
sbb
push
cmp
sbb
loop
faddl
and
pop
push
fdivr
ffree
and
xchg
stos
fidivl
cvtpi2ps
and
push
push
add
mov
iret
lret
outsl
bound
mov
add
roll
pop
adc
test
int3
push
push
pusha
pop
add
push
mov
xor
hlt
repz
divb
pop
int3
jbe
test
xorb
imul
xchg
mov
pop
and
movsb
sbb
frstor
icebp
out
out
loope
jg
push
cmc
int3
dec
xor
enter
jmp
mov
subl
mov
shll
movsb
push
dec
movsl
xor
jae
bound
push
addb
jmp
or
sub
aam
xor
inc
push
les
clc
shrl
out
adc
scas
lock
mov
cmp
xchg
mov
fldenv
sbb
xchg
and
dec
es
sbb
aam
stos
dec
mov
sbb
pushf
adc
data16
cmp
pop
std
fwait
cmp
cli
push
cmpsb
in
fxtract
les
push
cmp
sti
lret
push
inc
jge
pusha
sbb
sarl
xor
lcall
xchg
in
les
lods
or
das
movsb
out
addl
jns
cmpsb
int3
cld
imulb
or
mov
imul
xchg
cmp
aaa
or
stos
jl
cwtl
jnp
adc
xor
daa
jmp
fs
sub
sbb
pop
xor
pop
sbb
repz
mov
shlb
stos
dec
jne
test
dec
push
mov
xchg
sbb
xchg
adc
mov
dec
dec
aad
push
lret
push
mov
inc
cli
addps
test
test
dec
cmpsl
dec
mov
dec
cmp
icebp
std
cmp
out
test
xor
cmp
aad
xor
or
lret
xor
scas
push
and
notb
pop
in
add
adc
and
ljmp
sub
iret
sbb
mov
pop
mov
leave
xor
jne
cmc
pop
cmp
cmp
jns
dec
add
lods
lahf
fs
pop
mov
aad
popa
fwait
push
lea
sub
or
xlat
stos
jo
and
aaa
xchg
out
mov
test
pushf
popf
mov
mov
sarl
loopne
pop
add
inc
repnz
pop
xlat
out
es
dec
mov
iret
xor
adc
int
and
movsb
xchg
xchg
xchg
movsb
data16
movsb
pop
stc
gs
add
hlt
and
add
mov
jp
clc
mov
jo
push
sub
xor
in
push
cmp
mov
sub
xchg
xor
cwtl
dec
sub
out
xchg
into
cmpsl
add
add
loopne
jno
lret
xorl
xchg
loopne
pop
cs
xchg
xchg
inc
adc
pop
aad
jns
dec
int
and
jge
mov
add
ljmp
xchg
sbb
cld
sbb
cmp
xchg
jb
pop
ret
iret
push
xchg
rcl
mov
mov
outsb
std
dec
insl
cmc
out
stos
inc
fistps
mov
jnp
mov
dec
inc
jecxz
xchg
sbb
cmp
sbb
jecxz
sahf
and
rclb
leave
mov
shlb
xchg
adc
mov
jbe
orl
in
cli
mov
adc
add
xchg
jnp
adc
and
sub
sti
sub
mov
sbb
adc
std
cmp
adc
push
repz
repz
and
adc
jp
ficompl
xchg
mov
pop
add
inc
decb
add
push
mov
cmc
xchg
jns
ficoms
mul
std
movsb
lret
add
int
cltd
fstp
push
stos
call
adc
js
sbb
add
add
sub
lock
cs
xchg
jle
pushf
jmp
das
adc
or
mov
adc
mov
dec
xchg
push
sahf
mov
ds
repz
xchg
xchg
adc
mov
mov
outsb
arpl
add
inc
jo
clc
into
xor
xchg
xor
imul
ljmp
repnz
movb
in
dec
cltd
fadds
mov
inc
jo
mov
inc
or
push
sub
xchg
pop
and
jbe
repz
cmp
lret
push
mov
inc
fcomps
fildll
lret
daa
outsl
lcall
mov
cwtl
pop
push
add
dec
in
pop
or
cld
mov
dec
inc
jns
and
dec
insb
pop
push
mov
adc
rcrb
pop
mov
inc
push
mov
jle
pop
xor
mov
aas
mov
dec
out
xchg
and
xor
movsl
mov
jp
mov
imul
mov
cmpsb
dec
jge
ljmp
mov
loope
shl
jmp
sbb
cwtl
add
ljmp
stos
push
sub
es
addr16
imul
insl
push
imul
inc
fidivs
addr16
out
movsb
lods
ret
sub
int
jle
fcmovnb
fildl
aas
adc
insl
mov
sub
mov
pop
stc
addb
or
add
sbbb
out
pop
xor
mov
je
cmp
push
xor
inc
dec
add
add
and
push
xor
out
cli
pop
or
lahf
mov
sbb
cmpsl
dec
mov
xchg
orl
add
insl
shl
into
mov
mov
scas
mov
jae
xlat
and
jmp
in
jns
push
sbbl
dec
jae
jb
in
or
or
movsb
adc
mov
xchg
ret
dec
sbb
dec
pop
fidivrs
xchg
popa
call
fcmovne
dec
jg
xchg
or
or
lahf
adc
jns
ret
shll
xchg
pop
hlt
nop
shrb
test
push
push
lds
push
mov
sbb
mov
dec
sbb
jge
jbe
ljmp
pop
icebp
mov
shrb
loopne
fwait
xchg
jno
add
push
or
xchg
pop
xchg
mov
adc
cld
inc
stos
test
pop
sbb
push
loope
or
testl
popa
je
cmp
pusha
inc
das
and
adc
fs
das
xchg
mov
dec
sub
add
mov
and
mov
pop
sub
test
xchg
roll
jns
lcall
jecxz
divl
pop
sub
add
test
ret
aam
in
add
in
ljmp
cmp
sub
loop
inc
aad
lret
xlat
mov
or
cmpsb
xor
adc
lods
sbb
pop
xor
xorb
in
add
lods
ja
shl
xor
xorl
mov
xchg
out
or
sub
and
popa
mov
sbb
pop
aad
cmpsb
int
pop
es
xor
and
lds
xchg
in
sub
inc
cmp
imul
jp
adc
shrl
scas
cmp
out
mov
rcrl
lret
xor
mov
aaa
dec
mov
push
fdivp
fsubr
std
xor
insb
fistpl
mov
cwtl
jb
cmpb
gs
mov
aas
in
mov
sbb
pop
cmp
or
mov
pop
xchg
aad
and
sub
outsb
inc
mov
sub
outsb
ret
add
xchg
in
or
dec
dec
std
daa
not
pop
or
and
shll
movsb
decb
outsl
lcall
jns
inc
repnz
sahf
pcmpeqb
add
pop
or
in
xchg
js
je
scas
jecxz
pop
mov
clc
lcall
jnp
mov
mov
fwait
cltd
push
out
inc
push
mov
outsb
fistl
and
mov
lock
xchg
out
aam
mov
aaa
shr
and
rcrb
in
and
das
lcall
inc
add
inc
sub
aad
xor
inc
aas
outsl
dec
pop
cwtl
push
loope
sbb
lods
stc
and
push
ljmp
imul
xchg
pop
dec
int
mov
or
adcb
subb
dec
ret
andb
cmp
sti
mov
pop
ds
inc
arpl
push
ja
leave
push
rcrb
adc
stos
std
inc
jae
mov
movsb
pushf
testb
mov
jns
js
inc
lods
xchg
shl
cs
push
ja
scas
mov
dec
or
outsb
jb
arpl
lock
popf
stos
fildll
int3
data16
xor
pop
fstps
mov
int
jl
mov
test
jge
xor
outsl
add
dec
mov
mov
sbb
cwtl
or
pusha
xor
in
popf
push
lcall
les
insl
pop
lahf
aad
mov
add
mov
or
outsb
mov
stos
lret
imul
mov
ret
das
push
or
mov
pop
xchg
xchg
dec
and
inc
std
es
adc
xor
sub
mov
adc
or
movsb
add
dec
add
inc
pop
adc
out
es
subb
mov
fimull
iret
sahf
shlb
out
loopne
xor
inc
xor
mov
fiaddl
push
jbe
adc
push
adc
cmp
jo
lret
jecxz
sarb
test
mov
aas
repnz
aaa
addb
sub
dec
xchg
xchg
std
xchg
stos
add
stos
data16
out
pop
jo
jbe
dec
mov
ret
les
xchg
jecxz
dec
sub
fwait
xchg
pusha
mov
in
mov
aaa
jle
dec
mov
jecxz
inc
adc
sub
pop
inc
cltd
pushf
xchg
jbe
pusha
out
dec
divb
sub
test
inc
iret
fcomi
xor
imul
dec
icebp
into
cmp
cmp
fwait
js
fdivs
dec
push
mov
mov
sbb
je
mov
push
and
mov
fidivrl
outsb
lock
lea
clc
pop
inc
mov
adc
mov
hlt
pop
sti
cmpsl
adc
loope
daa
pop
cmpb
mov
xchg
in
aaa
xchg
cld
pop
fimull
xor
popl
cmpsl
add
and
arpl
inc
xchg
insb
push
and
jno
pop
ret
shrb
fs
mov
pop
inc
pop
cmp
nop
pushf
xchg
xlat
push
ret
fstpl
rcrb
add
pop
rorb
add
adc
adc
fsubp
mov
mov
pusha
data16
jl
add
push
mov
test
clc
fs
daa
push
jne
js
fidivrs
dec
lret
inc
xchg
xchg
fmull
and
cltd
inc
gs
push
add
mov
shr
mov
push
jle
push
adc
popa
cmp
movsb
addr16
outsb
pop
inc
and
aaa
or
jle
push
xor
iret
fcomps
stc
mov
add
xlat
jne
addr16
div
daa
pop
sbb
mov
ficoms
mov
fistl
imul
dec
aas
jge
test
jl
in
and
notb
jnp
jge
cmp
es
mov
fnstcw
mov
lahf
or
or
jbe
bswap
mov
fsub
lcall
insl
sti
xchg
flds
xchg
mov
add
push
xor
in
adc
cld
push
popf
and
jl
mov
jbe
movsl
in
inc
into
jnp
rcll
test
cwtl
sbb
xchg
aas
jp
shlb
rcll
push
popf
mov
clc
imul
pop
and
inc
inc
or
subb
push
ja
lcall
rclb
mov
out
xchg
in
adc
lea
inc
xchg
push
push
jb
inc
test
cld
adc
sub
and
xchg
mov
out
pop
mov
xchg
in
mov
pushl
adc
ja
subl
pop
or
fwait
repz
add
rolb
dec
lods
aaa
and
js
mov
and
push
ficoml
imul
pop
lret
outsl
xchg
push
inc
push
out
loope
and
js
ficomps
inc
and
ret
xor
mov
subb
xor
jno
xchg
es
in
adc
rcr
and
ljmp
dec
ret
int3
xor
addr16
repnz
mov
subb
xchg
shlb
sbb
inc
jnp
test
or
inc
push
das
adc
cmp
adcl
dec
fmull
or
inc
mov
mov
cmp
test
sub
xor
mov
inc
std
mov
push
or
inc
filds
push
sbb
mov
outsb
cmp
push
lcall
jbe
aaa
push
jnp
rolb
xchg
push
loope
pop
ds
icebp
mov
lea
mov
test
sbbb
lods
loope
pop
xor
dec
lods
or
and
repz
sbb
int3
scas
inc
jg
add
in
mov
jle
sub
idivb
jnp
out
and
push
or
sub
arpl
add
jae
aam
sti
push
out
sub
cmp
dec
test
xchg
xchg
and
and
int
fists
inc
in
inc
iret
aad
sbb
xchg
rcl
inc
imul
xor
xor
mov
sbbl
fiaddl
notb
loop
adc
pop
fiaddl
jne
jmp
cld
push
das
xor
les
or
jns
ljmp
mov
pop
jo
sub
mov
adcb
mov
test
sbb
mov
into
add
mov
clc
movq
mov
fwait
enter
loop
and
xchg
in
bound
cmpsb
imul
movsb
fstp
sahf
pop
setg
jmp
aas
and
lods
cltd
cmpsl
mov
lea
pusha
js
rorb
jecxz
add
loopne
jno
mov
pop
rorl
and
mov
mov
cli
xor
push
cwtl
or
aas
jmp
rcrl
add
nop
or
icebp
mov
cmp
rcrl
test
sub
popf
and
xchg
and
ja
mov
out
mov
or
add
andb
adc
jno
lcall
mov
das
push
js
lods
fiadds
in
pop
add
int3
into
mov
fwait
mov
gs
hlt
add
scas
sub
push
pusha
pushl
into
loop
xchg
fsubrl
cmp
pop
adc
jmp
out
inc
pop
or
in
push
jo
in
push
iret
insl
cwtl
push
mov
test
mov
sbb
sbb
push
xor
xor
ljmp
lret
imul
in
scas
xchg
fistps
push
bound
sbb
cld
adc
jne
lea
cmp
add
xor
fistl
stos
mov
aas
out
fidivs
popa
ljmp
movsl
xor
pop
jecxz
popl
and
into
sbb
clc
test
fldl
popf
xchg
xlat
jg
das
or
test
adc
lret
out
fildl
inc
outsb
in
xchg
cmp
lcall
je
mov
add
inc
dec
cmp
and
popa
jge
call
shlb
mov
mov
add
and
in
test
cmpb
fldl
inc
sbb
dec
or
mov
flds
leave
xchg
jge
es
out
push
test
int3
sub
ljmp
and
lods
stos
xor
or
stos
lods
test
jl
call
fidivl
push
sub
cmp
sbb
or
adc
sbb
push
sub
xchg
ljmp
xor
aam
call
mov
gs
pop
negb
outsl
loop
or
mov
xor
dec
push
mov
sbb
xchg
jp
sbb
inc
pop
mov
xchg
push
icebp
jge
xor
addr16
test
fsubrp
data16
mov
sub
icebp
xchg
repnz
fwait
daa
fcmovb
xchg
popf
jle
ficoms
jp
pop
jg
cmpsl
test
sbb
std
cltd
xor
inc
movsl
sub
das
mov
sub
scas
int
clc
iret
in
pushf
aam
jle
shrb
rorb
xorb
dec
or
inc
inc
rclb
mov
mov
cltd
sarl
insb
pop
dec
xor
adc
jb
xchg
mov
jp
sahf
and
jl
ret
nop
push
jae
jp
xchg
lock
pop
and
dec
xchg
cmp
xchg
std
je
sub
scas
inc
ss
repnz
test
mov
lods
lods
aas
int
add
xchg
push
cltd
push
outsb
imul
ljmp
sahf
sub
adc
insl
or
add
cld
negl
cmp
lret
out
jbe
mov
rorl
push
push
cld
loop
mov
das
gs
fcomps
mov
idivb
aam
or
adc
sbb
mov
and
jecxz
cli
xor
std
lea
les
test
bound
dec
push
pop
fcmovu
sub
mov
shlb
xor
mov
lock
notl
mov
movsb
data16
ja
add
loope
mov
xchg
push
js
push
cli
lds
xchg
lret
and
cmpsl
cs
ret
mov
rorl
out
jle
and
mov
aaa
cmp
mov
xor
stos
jecxz
mov
test
adc
xchg
add
dec
shlb
and
push
pushf
cmpsb
icebp
mov
sbb
dec
in
mov
mov
jmp
fucomp
iret
repz
jge
push
outsb
push
push
pop
repnz
mov
sub
ja
jnp
cltd
add
addl
xchg
call
lock
and
jge
cltd
jns
fwait
test
mull
insl
cmp
or
outsb
inc
jl
stos
push
jbe
call
lds
sahf
xor
sbb
les
dec
mov
sub
rorl
adcb
lret
sti
data16
ja
sbb
mov
scas
out
xchg
popf
loope
cmp
dec
mov
in
and
xchg
aad
arpl
and
cmp
or
inc
addl
xchg
mov
lds
dec
sahf
fwait
sbbl
inc
lahf
mov
push
loop
jne
rcr
test
xor
xor
out
adc
into
les
push
les
push
cmp
scas
cmp
ja
push
daa
mov
sub
lret
sub
stc
mov
bound
cld
pusha
xor
push
cmp
sahf
push
je
clc
xchg
sti
clc
inc
imul
or
es
insb
mov
lahf
push
xor
xchg
mov
das
adc
lret
pop
test
mov
aas
push
fdivs
orb
jle
mov
mov
cwtl
dec
mov
inc
aas
mov
mov
repz
ss
jns
pop
inc
mov
lret
add
xchg
xor
xchg
mov
jo
pop
imul
adc
dec
scas
icebp
xchg
aad
test
push
push
dec
jge
lret
sbb
cmp
inc
xchg
cmpsb
icebp
mov
xor
subb
jl
jbe
and
pusha
adc
mov
mov
rcrb
rol
add
sbb
lods
outsl
bound
xchg
ficoms
fprem
mov
ss
push
mov
aad
test
testb
xchg
mov
jae
in
fisttps
jb
mov
lock
insb
adc
mov
rcl
jbe
loop
dec
ljmp
aam
jnp
mov
aam
pop
scas
lahf
movsb
sahf
xchg
mov
js
pop
das
ss
subb
in
or
lret
mov
jmp
fimull
xor
shl
push
icebp
scas
mov
pushf
outsl
cld
pop
or
sbb
or
into
cmp
or
xchg
adc
iret
push
aas
lahf
xor
adc
cmp
repnz
test
bswap
fstps
js
int3
xorl
ljmp
lods
inc
xchg
xchg
call
inc
dec
mov
fidivs
xchg
les
cmp
shufps
insb
cs
cmp
cli
or
cli
lret
or
inc
loop
int3
jb
btc
mov
out
in
jge
xchg
loope
or
mov
je
stos
mov
lret
lods
jo
push
cmp
sti
mov
cmp
shr
push
xchg
int3
pop
ret
push
out
pop
mov
push
xchg
add
aas
icebp
in
mov
ja
lock
pop
cmpsb
lcall
movsb
push
sub
adc
ss
sub
sbb
cld
xor
fmull
or
xor
xor
inc
bound
inc
inc
mov
mov
jg
shrl
mov
rcll
add
sub
jecxz
jle
dec
loope
sub
mov
inc
sub
fwait
add
adc
jno
mov
int3
out
mov
inc
adc
lret
mov
cmp
xor
dec
rcrl
loope
mov
add
ja
shrb
adc
daa
dec
pop
xor
lea
inc
mov
ljmp
and
fdivrl
movl
and
cmp
and
sub
clc
in
addr16
sbb
dec
lcall
and
cmp
add
mov
test
mov
faddl
mov
loope
mov
movsb
lret
test
outsb
sbb
out
pop
je
outsl
outsb
lahf
sub
popa
jns
std
or
addr16
push
pop
mov
dec
inc
movsb
add
xchg
sub
stos
cmpsl
dec
cmpsb
pop
lret
rcrb
popa
sbb
rcr
daa
fbstp
mov
scas
mov
repnz
xchg
adc
je
inc
jo
push
push
aas
popf
mov
mov
repnz
cmp
add
lret
cli
fistpl
mov
daa
jge
sub
popf
std
mov
dec
mov
add
das
cmpsl
cmpsb
push
into
enter
mov
adc
adcl
jecxz
inc
or
test
bnd
addr16
push
fs
mov
jbe
adc
rcr
add
test
or
mov
inc
lcall
popf
xchg
sub
repz
add
sbb
push
push
push
and
mov
adc
add
int3
in
and
lahf
mov
inc
rorl
mov
adc
sub
aas
leave
cmp
lods
aam
dec
mov
xor
in
or
mov
clc
jno
int
lods
iret
mov
sub
cmp
pop
xchg
sbb
ja
icebp
lea
dec
fldt
mov
inc
js
cs
mov
push
cmc
jl
fistpll
and
xlat
inc
imulb
pop
mov
fwait
je
cmp
lahf
sub
jne
data16
vpor
jno
xchg
bound
shrl
jl
mov
nop
test
icebp
mov
push
call
nop
mov
add
nop
mov
xchg
xchg
imul
mov
cli
cmp
pop
nop
mov
in
mov
subb
mov
movb
fldcw
adc
add
imul
ja
hlt
shlb
aad
cltd
mov
xchg
aam
dec
xchg
stos
imul
fnstsw
mov
mov
inc
inc
lret
sbb
adc
loop
pop
pusha
inc
mov
iret
mov
call
int
sbb
xor
ds
shr
outsl
mov
xor
mov
lret
add
mov
cmp
hlt
mov
stc
adc
mov
stc
xor
scas
cwtl
adc
lret
pop
iret
cmp
ja
xchg
cmpsb
or
icebp
or
xor
call
inc
lods
test
ret
dec
imul
lahf
adc
pop
xor
stc
aad
int3
push
adc
rorl
or
inc
push
daa
xor
stc
cmp
lcall
test
push
jmp
push
mov
aad
mov
inc
testl
pusha
jo
test
fwait
out
leave
lcall
gs
mov
xchg
negl
aaa
sub
xchg
bound
fildl
pop
inc
mov
out
mov
nop
outsl
push
jp
in
and
cmp
fbld
xor
stos
pop
mov
nop
jo
pushf
fstps
cs
or
bound
jo
orl
mov
sbb
out
test
ja
imull
push
xchg
adc
arpl
sub
lea
std
data16
adc
sti
jns
push
mov
add
js
cli
ret
fiadds
add
or
outsl
jns
pop
inc
lods
int3
jbe
ja
mov
adc
xor
out
ljmp
mov
mov
test
mov
mov
ss
cli
fdivl
popl
sahf
cwtl
jg
fiaddl
lret
add
mov
insl
rolb
mov
stos
fidivrl
shll
jp
inc
movsl
and
jmp
pop
sbb
adc
cmp
lds
and
lods
hlt
divl
stos
cmp
push
dec
mov
insb
ret
push
inc
cmp
xchg
stos
mov
popa
mov
dec
cli
mov
xor
lret
dec
push
bound
aas
sbb
jge
scas
rol
xchg
cmc
adc
adc
dec
adc
mov
xor
inc
sbb
sbb
loop
push
and
js
and
jl
jno
insl
jbe
dec
ret
pop
adcl
stos
ss
mov
sub
mov
sbbl
jb
stos
mov
dec
jge
xor
movsb
cmp
repnz
into
leave
dec
movsl
xor
jno
jmp
xchg
rcll
fcoms
out
inc
je
ja
dec
lret
movsb
filds
inc
stos
bound
jp
sub
fmull
test
cmpsb
dec
sbb
addr16
cmp
mov
jmp
in
sub
push
xor
ds
daa
cli
sbb
adc
lods
push
mov
ljmp
xchg
xchg
shl
sbb
mov
or
mov
sub
inc
pop
bound
adc
in
leave
out
xor
push
addr16
incb
xor
sbb
rcrb
inc
and
scas
loop
xor
fnstenv
mov
push
dec
jns
sbb
add
and
mov
mov
mov
sbb
cmp
nop
cmp
inc
in
in
stos
jge
pop
adc
loopne
xor
sbb
sti
add
ljmp
mov
pop
ds
cmp
fmuls
mov
push
sahf
fidivs
mov
adc
sbb
dec
movsl
push
cmp
or
or
sti
cmpsb
in
sub
fisubs
arpl
mov
in
xor
scas
jo
pop
pop
push
dec
sbb
sarl
sarb
leave
push
outsl
dec
cmc
xchg
ja
das
cwtl
or
data16
shrb
jg
fcoml
inc
jbe
test
xchg
fistl
sub
hlt
cmp
mov
xor
loopne
int3
shll
adc
jl
jns
pop
rcr
push
les
hlt
xor
cltd
mov
jo
mov
xchg
shrl
rcl
dec
xlat
jl
test
cmp
jmp
shll
roll
xor
cld
adcb
xlat
negb
in
cli
out
push
xor
incb
aam
in
insb
sarl
xchg
cli
mov
cmp
int
xor
lock
adc
xor
sub
mov
jbe
or
aad
push
adc
test
stos
fistpll
lods
mov
mov
or
daa
and
push
sbb
adc
push
adc
js
xchg
test
shlb
mov
mov
pop
dec
cmpl
iret
rcrl
sti
enter
mov
inc
push
lods
sbb
mov
rcll
movsl
lods
pop
adc
inc
loope
les
xchg
and
into
mov
out
arpl
jg
scas
mov
mov
loope
mov
mov
or
aaa
cs
mov
push
enter
mov
in
stc
mov
and
mov
pop
jl
out
and
sbb
nop
pop
or
std
dec
or
dec
scas
cmp
jo
aas
cmc
mov
xchg
ret
and
mov
xchg
jbe
test
fldt
sub
cmp
jg
lret
pop
or
jg
sub
dec
inc
pusha
push
test
xor
clc
les
xchg
mov
or
mov
jo
test
inc
add
enter
ss
adc
or
stos
cmc
inc
mov
test
stos
add
or
rcr
jnp
mov
or
ret
and
push
lods
not
xlat
clc
hlt
cmp
inc
mov
fistl
jg
mov
or
add
inc
ss
sarb
fbstp
jmp
cmpsb
call
lea
in
mov
imul
ja
into
xchg
lods
cmp
imull
xor
imul
mov
fdivrl
jg
push
out
mov
sub
xchg
icebp
arpl
lea
xor
mov
dec
mov
pop
cmp
sahf
imul
je
mov
sti
call
and
inc
mov
int3
xor
rolb
int
hlt
test
or
inc
in
stos
mov
movsb
mov
and
jb
mov
add
jl
xchg
jg
aas
aad
and
lds
cmp
in
cmp
push
dec
dec
add
sub
dec
insl
mulb
loope
push
test
or
push
and
test
jg
add
cmpsl
add
or
push
push
ljmp
or
popf
inc
pop
loope
imul
push
dec
testb
sbb
xor
test
xlat
cli
adc
into
insl
pusha
das
lret
and
addb
addb
shlb
xchg
push
sarb
mov
test
cld
sbb
jl
xchg
jmp
pop
pop
popa
lret
inc
pop
xchg
lret
adc
cmp
insl
xchg
push
dec
enter
scas
inc
mov
add
fwait
lods
inc
xor
leave
push
jmp
jg
jl
mov
jo
repz
and
jle
xchg
inc
pop
jle
mov
ret
mov
test
mov
sbb
js
mov
jge
pop
outsl
push
psubusw
xchg
fmul
mov
inc
push
loope
mov
inc
clc
sahf
jbe
xchg
movb
js
std
xor
push
scas
repnz
jge
pop
hlt
insb
cmpsb
movsl
cmp
adc
lcall
test
and
rcr
dec
lcall
loop
xor
xchg
aam
and
mov
clc
lret
push
mov
push
fwait
mov
mov
adc
scas
mov
dec
and
cwtl
je
shlb
xor
sub
sbb
mov
or
js
push
mov
push
scas
out
pop
mov
psubusw
imul
or
std
adc
sbb
je
mov
mov
jo
or
or
nop
fs
gs
mov
mov
pop
fstp
mov
mov
aad
sbb
fwait
ret
test
in
add
pop
call
push
pop
test
movsl
mov
sbb
test
jnp
imul
and
push
lods
daa
xchg
loop
inc
in
out
xorb
inc
or
jecxz
adc
sbb
push
inc
xor
stos
mov
popf
out
mov
xchg
hlt
adc
fisubl
nop
repnz
lds
pop
andb
scas
filds
jno
popa
pop
push
aad
bound
aam
pop
jecxz
int
dec
and
lret
sbb
aas
xor
cmpsb
mov
into
call
push
cmp
test
push
mov
jge
out
push
jg
decl
imul
out
pop
mov
adc
jnp
xchg
jbe
cmpsl
jecxz
push
gs
sbb
add
ja
and
sbb
adc
aas
idivb
hlt
arpl
push
and
sbb
dec
add
jb
sbb
nop
mov
repz
xor
xchg
rcrb
and
dec
fistl
in
add
es
mov
xor
cwtl
adc
xchg
das
sbb
dec
inc
pop
lret
js
icebp
sub
lods
dec
lock
imul
sbb
and
jns
jle
ja
push
push
add
sti
aam
and
inc
mov
inc
sbb
out
xor
mov
iret
insl
in
lds
negl
arpl
std
lea
ja
and
pop
push
test
mov
xor
ss
js
xchg
xchg
rorb
xchg
fnstenvs
dec
jl
xlat
and
mov
lods
mov
ljmp
jne
mov
fs
and
je
cmp
ljmp
fidivs
fcompl
mov
inc
jecxz
mov
int
lcall
repnz
sarb
mov
xchg
repnz
test
pop
xor
iret
sti
add
and
and
inc
adc
data16
push
das
ss
ret
andl
ljmp
xchg
or
ljmp
add
iret
outsl
xor
stos
lods
lret
movsl
jp
cwtl
fstl
lret
pop
push
pop
inc
and
sub
leave
movsl
ljmp
or
and
into
mov
mov
je
cmovnp
aam
arpl
mov
pop
aam
test
lea
add
push
xchg
scas
pop
cmp
cmp
aam
sub
arpl
jecxz
std
fwait
sbb
ret
or
jl
addr16
outsb
jns
pop
lahf
mov
mov
mov
dec
cmc
xchg
push
add
mov
pop
push
push
call
pop
leave
adc
sti
mov
lock
repnz
repz
push
and
test
jle
adc
call
add
int3
call
or
and
push
push
cld
mov
decb
and
lea
jb
sbb
jo
insb
inc
xchg
inc
gs
popf
sub
icebp
les
mov
js
clc
sbb
or
sar
sub
jmp
xchg
inc
cmp
cmp
addl
int3
add
inc
dec
stc
inc
sbb
cmpsb
cmp
dec
shrb
mov
gs
or
push
leave
into
lods
mov
pop
mov
jno
pop
cmpl
pop
and
mov
test
clc
in
pop
aam
lret
lret
std
dec
fnstsw
push
bound
inc
mov
sbb
jno
shll
stos
fadd
mov
enter
imul
loope
mov
xchg
fs
fisubrl
out
lods
mov
stc
sti
std
sbb
dec
and
xchg
fdivs
sub
dec
jo
stos
push
shll
enter
inc
ss
or
jg
mov
fisubrl
in
pop
aas
cli
push
jp
mov
lods
pusha
push
aam
and
jns
add
mov
pushf
jge
xchg
mov
pop
imul
push
xchg
int
mov
into
out
into
fisttpl
mov
cs
sbb
cmp
repnz
ds
xchg
cmpsb
into
rolb
mov
data16
and
cs
mov
cmp
repnz
out
out
outsl
lahf
and
repnz
aaa
mov
mov
pop
fiaddl
and
repz
sbb
clc
je
into
in
cli
mov
and
jge
sbb
push
mov
aad
sti
testb
std
lret
mov
outsl
out
iret
shl
xchg
jle
shl
mov
inc
shlb
dec
pop
xor
cli
inc
pop
sbb
mov
sbb
cld
les
xchg
and
add
xchg
in
jne
les
inc
bound
lcall
cmp
fcmovb
mov
rolb
or
push
mov
or
pop
jns
shrl
mov
push
shl
mov
cmp
daa
xchg
xlat
xor
icebp
fstpt
es
sti
xlat
jmp
repnz
xor
out
cwtl
aad
imul
sub
out
insl
adc
pop
nop
add
and
mov
push
dec
or
cmp
les
push
cmp
pop
imul
fstpt
or
jg
jb
out
clc
decl
pop
inc
pop
pslld
pop
jmp
xorl
mov
fists
test
cmc
lock
jns
jle
mov
lds
stc
mov
shrl
imul
loope
sub
mov
cmpsb
jl
jnp
xor
aas
dec
or
or
dec
test
leave
pop
lea
pop
or
xor
pusha
mov
push
push
mov
cld
rolb
add
rolb
jno
enter
dec
popa
shr
cli
int3
cmp
loopne
jo
mov
xor
gs
adc
xor
daa
add
out
out
pop
subl
imul
imulb
das
fcmovnbe
fcmovnb
or
dec
push
jp
push
cmpsl
push
xor
adc
lret
cmp
xchg
jae
inc
cmp
add
push
pop
std
rorb
xor
push
stc
rclb
mov
sub
inc
mov
xchg
jecxz
sti
pusha
test
push
or
mov
cmp
push
int
icebp
inc
pop
fidivs
xor
jg
lea
sbb
imul
aam
or
int3
mov
inc
jle
inc
cmp
pop
out
shll
mov
lods
jns
dec
aas
in
cmp
loopne
push
sub
jns
mov
push
jp
sti
out
lea
cmpl
mov
shlb
dec
js
leave
push
pop
std
arpl
push
inc
stc
mov
shlb
xor
out
cmp
pusha
lcall
jle
in
sahf
test
mov
test
dec
outsl
call
lods
or
loopne
dec
add
fwait
mov
add
or
pop
xor
adc
mov
imul
call
mov
inc
sbb
outsb
add
xor
push
fld
add
test
stos
lahf
testb
je
xchg
andb
push
inc
pop
aam
xchg
adc
in
inc
adc
jp
add
mov
or
outsl
xchg
shll
cmpsl
fwait
es
mov
movsb
imul
movsb
inc
fs
repnz
pop
cmpsl
cs
sub
jno
imul
rcl
and
hlt
loop
sbb
mov
mov
adc
jmp
pop
aaa
pop
cld
loopne
sbb
arpl
cmpsb
and
stc
mov
lea
add
pop
jle
xorl
clc
popf
and
into
cmp
push
pop
pop
sti
pop
add
lret
ja
out
je
mov
adc
mov
add
iret
aaa
push
cmc
inc
addb
dec
xchg
lds
scas
cmp
push
cmp
fbld
divb
pop
loopne
cmp
push
ds
shlb
lret
or
jbe
cmpsb
in
pop
add
xchg
pusha
xchg
inc
popa
pop
jns
jbe
push
pop
fsubp
into
rorl
data16
add
push
pop
fsubrp
ja
add
fmull
dec
clc
add
call
sahf
ret
xchg
cmpsl
ret
jae
or
cmp
jns
pop
dec
add
xor
or
fstp
arpl
scas
repnz
xchg
or
rorl
ss
xorb
adc
repnz
dec
pop
cltd
shll
dec
inc
xor
sub
push
mov
mov
push
mov
test
loopne
mov
push
mov
aam
push
cs
fimull
stc
mov
jns
adc
mov
cli
idiv
mov
in
std
sbb
fsub
pextrw
push
add
imul
mov
test
pop
xorb
call
xor
mov
jmp
in
push
add
les
push
fs
sarl
out
xlat
ret
dec
in
hlt
stos
ja
xchg
cmp
xor
push
inc
fxch
or
push
arpl
sahf
push
repnz
repnz
and
cmc
cmp
lods
dec
or
lret
lock
in
movsb
and
test
jo
mov
out
imul
stos
adc
loop
or
fcoml
shll
pop
and
or
fwait
stc
data16
mov
out
sub
enter
xchg
les
pop
push
mov
pushf
mov
mov
sub
mov
test
in
xchg
rol
test
test
lret
movsl
mov
pusha
mov
iret
xchg
pop
sbbb
imul
out
inc
pop
pop
ljmp
xchg
mov
cmp
and
sbb
add
test
gs
fwait
push
add
inc
mov
jge
fisttps
or
lea
andb
cmpsb
cmc
push
into
test
xchg
jecxz
sub
rcrl
xlat
stos
jl
inc
sti
push
cmpsb
jmp
sti
mov
push
fiadds
cmc
enter
mov
and
and
dec
sbb
ljmp
xchg
cld
lods
into
mov
xchg
and
xor
aaa
pop
cmpsb
mov
or
mov
sub
xor
ja
xchg
movsl
stos
inc
iret
dec
mov
and
and
add
fldcw
fisttpl
stc
lret
jne
andb
inc
dec
ds
jp
mov
add
jecxz
sub
mov
mov
fchs
lock
xor
mov
leave
mov
cs
les
cmpb
adc
jecxz
pop
cli
loope
popf
in
cmp
mov
js
into
cmp
repnz
sub
mov
mov
ret
aad
mov
pop
push
sbb
xchg
repnz
add
mov
cltd
adc
out
or
mov
popa
arpl
gs
cltd
rcr
iret
xor
mov
shr
movhps
rcll
sub
std
adc
xor
mov
cwtl
jg
dec
mov
out
sbb
mov
jbe
inc
or
lea
int
arpl
and
jg
inc
outsl
repnz
xchg
pop
sbb
jg
mov
das
and
adc
mov
adcb
dec
repnz
inc
add
lahf
in
hlt
inc
pushf
dec
aam
nop
dec
pushf
adc
enter
es
adc
lcall
push
cld
inc
data16
js
in
dec
xchg
jo
pop
xor
stos
adc
push
loope
out
dec
push
push
push
add
push
add
das
fnsave
addr16
pop
adc
dec
mov
gs
lcall
flds
lods
testl
xor
inc
jg
out
mov
rol
js
or
sbb
test
pop
cmp
adc
xchg
or
lds
adc
adc
cmc
les
adc
push
mov
push
mov
aad
jnp
cmp
add
addl
jg
xchg
cmp
popf
mov
xor
outsl
sub
pop
jnp
fdivr
cmpsl
loop
inc
idivl
jp
ds
or
jmp
xchg
push
xor
add
ljmp
sarl
inc
mov
cmp
xchg
ret
les
mov
lret
ljmp
dec
mov
ljmp
fnstsw
fs
mov
lcall
and
les
popa
ljmp
cs
xchg
cwtl
out
mov
cmpl
aam
repnz
push
jb
jmp
dec
outsl
mov
pusha
inc
sbb
shll
out
fbstp
movsb
sbb
mov
push
pop
cmp
imul
cmpsl
loope
lds
dec
cld
jecxz
push
int
shl
les
fcmovnbe
dec
fstl
lea
or
cmpsl
sbb
jno
je
idivl
insb
ret
sbb
cltd
or
stos
out
jnp
inc
ret
sbb
inc
cmp
dec
xchg
xchg
pushf
add
sub
loopne
inc
test
ret
mov
pop
stc
jne
mov
loop
mov
inc
shlb
dec
in
dec
rorb
mov
xchg
mov
sbb
dec
push
faddl
mov
aad
ds
out
clc
test
movsb
cs
pop
push
loopne
jl
mov
mov
add
add
cmp
sbb
xorps
ds
sub
push
sub
jne
xor
pop
loop
inc
inc
or
sbb
sbb
and
jp
cmp
in
ret
mov
movsl
test
inc
aad
gs
adc
or
jg
mov
and
mov
dec
xchg
jo
ret
test
das
cmpsb
aad
cmp
inc
aam
pop
jge
adc
xor
dec
lock
pop
inc
cmp
mov
stc
insb
mov
and
xor
enter
and
jb
ror
out
or
or
lds
sub
orw
and
data16
sarl
scas
outsl
shll
cmpb
add
xor
cwtl
scas
xchg
mov
lahf
sub
inc
arpl
sar
lods
loop
cmp
and
movsb
in
je
push
add
mov
roll
inc
jp
lods
js
rorl
test
aam
adc
lahf
pop
cwtl
mov
repz
imul
fldt
dec
cmpsb
mov
nop
cwtl
xor
push
push
xchg
test
sbb
or
addr16
arpl
mov
cwtl
push
pop
mov
fsubrs
fwait
push
mov
popa
mov
sbb
dec
jne
scas
mov
and
mov
mov
leave
lds
dec
adc
mov
mov
mov
mov
sub
outsb
sti
jecxz
sbbl
push
jecxz
aad
nop
cmpsb
add
mov
sub
dec
dec
jp
iret
pop
nop
push
jmp
mov
xor
mov
mov
xor
test
xchg
sub
xchg
fs
loop
jl
push
cwtl
loope
mov
or
das
daa
xor
dec
lods
adc
mov
jns
insl
or
mov
add
hlt
popf
popf
cmp
and
mov
pushf
sbb
dec
adc
andl
mov
xor
jge
lcall
fbld
xchg
adc
cmp
inc
adc
aam
inc
push
cmpsl
jnp
pop
cs
cmpb
scas
push
or
pushf
mov
xor
push
and
cmp
add
jae
loop
xchg
or
xchg
push
sbb
rcrl
test
lahf
inc
xor
fwait
mov
xchg
lret
dec
jns
mov
int3
and
sbb
sub
add
repnz
pushf
lahf
leave
xchg
clc
repz
and
mov
ficomps
imul
dec
sbb
loopne
mov
push
scas
mov
jno
add
mov
mov
movsb
ds
clc
lret
cli
xor
mov
into
add
arpl
cmp
sti
jne
dec
jp
pop
and
rcrl
pop
mov
in
mov
add
mov
push
inc
or
rorl
aas
dec
xor
or
xchg
xchg
dec
mov
xor
jmp
or
loopne
pextrw
mov
aaa
arpl
or
pop
jne
inc
xchg
push
jnp
ja
mov
push
outsl
jne
sti
add
mov
shrl
test
sbb
push
dec
sbb
mov
adc
dec
sbb
add
adc
pop
fs
xchg
inc
jmp
call
outsb
test
dec
xchg
out
mov
ja
in
bnd
clc
fdivs
lods
icebp
subb
pop
sub
decb
and
dec
pusha
pushf
rorl
add
mov
xchg
or
mov
cmpl
mov
imul
or
fists
std
xor
movsb
inc
std
fwait
notl
push
dec
adc
ds
adc
jmp
sbb
dec
pop
aas
scas
sbb
int
inc
roll
aam
sub
insb
sub
outsl
xor
push
sarb
test
das
jge
sub
iret
jecxz
or
cs
sbb
jbe
sub
stc
adc
icebp
je
and
fs
loopne
sub
xor
cmc
mov
in
iret
aam
add
fs
shlb
jmp
in
and
jb
cmc
adc
ja
add
pop
cmp
cwtl
push
mov
aaa
mov
cs
push
lea
pop
and
lods
cli
ja
jecxz
test
mov
ja
adc
int3
data16
inc
xor
sbb
mov
xchg
push
mull
mov
stos
fs
push
outsb
inc
sbb
jmp
mov
dec
cli
jg
jne
mov
pop
push
in
les
sahf
sub
mov
adc
loope
ss
ss
dec
das
add
gs
push
or
dec
nop
stc
dec
jne
aas
call
daa
mov
cmp
sub
pop
cmp
jp
aas
pop
push
rcl
inc
fistpll
and
sbb
lret
outsb
mov
es
push
sub
in
mov
fmuls
cmp
push
sbb
aas
mov
inc
add
jbe
add
add
cwtl
adc
das
xchg
add
out
dec
rorb
push
mov
xor
sbbl
jbe
mov
xchg
cli
hlt
mov
push
nop
adc
cmp
sub
push
cmp
xor
leave
gs
out
int
decb
add
lahf
push
pop
cwtl
xor
mov
call
pusha
and
arpl
ret
popf
hlt
outsb
add
mov
sbb
fcoms
mov
sub
ljmp
test
insb
fisttpll
dec
sub
ss
pop
or
jle
mov
mov
dec
mov
lret
and
mov
mov
xchg
int
inc
pop
shrl
fcmovnb
arpl
pop
imul
int3
or
filds
dec
and
dec
outsl
je
jg
ja
add
xor
push
test
pusha
int3
ds
jecxz
jecxz
xor
lcall
pop
or
pop
jbe
loopne
scas
loop
lahf
loope
dec
popa
inc
jl
lods
lds
test
and
or
push
cmp
pusha
lods
out
lods
xor
adc
mov
shll
mov
adc
mov
or
pop
popa
push
jmp
cmp
pop
stos
jne
push
fiaddl
mov
jle
fs
cmp
js
push
out
aam
push
or
dec
roll
loope
nop
jnp
sti
sbb
aaa
push
jl
fimull
adc
sbb
sub
aas
sub
xchg
rorl
andl
xchg
xor
xor
push
push
mov
adc
push
mov
adc
cmp
and
lahf
pop
push
or
adc
int3
repnz
data16
sbb
jnp
mov
ret
sub
imul
in
ljmp
adc
xor
movl
xchg
cmpsb
lock
lds
in
cmpb
pusha
sahf
jo
sbb
popf
scas
mov
pop
gs
push
clc
mov
std
cmpl
dec
pop
jle
pop
push
mov
in
mov
js
nop
cmc
invd
adc
ja
xor
push
mov
jge
jbe
cwtl
in
pop
sahf
cmc
xchg
movsl
sub
xor
mov
add
lock
imul
dec
jp
cmp
jecxz
test
clc
and
and
scas
rclb
stos
or
lcall
mov
hlt
clc
cltd
mov
into
rol
sub
adc
outsb
and
arpl
stc
popa
or
pop
jmp
outsl
sub
jo
icebp
scas
xchg
mov
jge
dec
popa
cld
inc
push
add
lods
test
ret
adc
popf
fdivrl
jo
roll
or
xchg
fsts
sub
and
mov
mov
add
insl
sti
cmp
cmp
cmpsb
adc
insb
jp
mov
xchg
jp
and
cmp
push
push
jmp
mov
xchg
nop
pop
mov
shll
cmp
xchg
lods
add
in
subl
cmp
push
or
mov
arpl
sar
mov
mov
std
or
out
push
xchg
add
xchg
xchg
ret
adc
sbb
xchg
lods
adc
std
pop
sarb
push
call
or
xchg
iret
sahf
imul
movsl
loop
psadbw
push
aad
test
cmp
popa
sbb
add
clc
int3
sub
push
mov
xchg
ret
mov
and
mov
dec
addr16
jns
hlt
repnz
popa
pop
shl
ss
pop
in
cmp
add
push
sbb
push
cltd
mov
sub
movsb
std
testb
sahf
daa
xorl
dec
push
inc
mov
xlat
cmp
roll
pop
jo
int3
push
loop
dec
dec
jbe
mov
pop
cmp
in
pop
lahf
loop
lret
mov
ret
movsl
and
lret
and
xor
rol
xor
test
movsb
jg
and
dec
dec
ja
push
and
ljmp
ret
and
ljmp
pop
add
add
ret
dec
mov
int3
xchg
div
mov
dec
ss
dec
pushf
jb
mov
mov
pop
or
mov
dec
pop
add
dec
std
and
cs
in
lods
jg
mov
jae
cs
lock
and
xchg
outsl
test
push
stos
dec
aaa
arpl
imul
repnz
adc
inc
nop
adc
lcall
in
push
sub
jmp
fadds
in
aad
int3
aad
mov
adc
add
inc
jbe
addr16
test
aas
in
cmp
push
into
mov
push
aas
stos
pop
mov
mov
jbe
arpl
inc
and
dec
sub
insl
mov
movsb
lret
lock
pop
lds
fldl
and
scas
or
stos
add
repz
iret
test
sub
sbb
mov
adc
outsl
xchg
sbb
xchg
xlat
jnp
push
inc
lea
fisubrs
inc
into
jb
out
mov
adc
pop
cmpsl
add
mov
test
jo
cmp
inc
or
xchg
aaa
sahf
out
test
arpl
xchg
dec
mov
cs
pop
add
jb
mov
jne
mov
jp
dec
cld
loop
adc
pop
or
bound
cmp
and
js
add
adc
pop
cld
aas
pop
arpl
or
sub
inc
arpl
inc
das
cmc
pop
outsb
push
xchg
xchg
push
jmp
test
cltd
inc
mov
xchg
test
mov
inc
lds
out
ss
fsubr
fwait
and
sbb
leave
stos
movsl
sub
leave
jae
out
mov
aam
add
in
lret
xchg
aam
or
push
popf
pop
shl
jge
adc
push
pusha
xlat
xchg
lods
jl
cmpsl
pop
adc
sub
daa
mov
mov
arpl
in
test
icebp
sub
jbe
mov
lds
mov
mov
dec
mov
mov
aaa
movsb
sbb
ljmp
sbb
fcmovne
mov
xor
cmp
cmpsl
push
pop
shl
mov
daa
fdivrl
daa
cld
mov
loopne
mov
shl
mov
pop
sub
stos
sub
and
rolb
mov
add
cmovl
insb
icebp
jns
sub
sub
adc
test
enter
jne
pusha
add
xlat
xor
mov
mov
lahf
sbb
or
int
out
aaa
push
mov
xchg
jl
push
lret
repz
adc
mov
aam
jmp
out
nop
adcb
jp
inc
imull
dec
out
adc
fiaddl
stos
mov
and
sub
push
dec
into
adc
jmp
adc
jmp
jl
add
jne
xchg
fwait
pop
mov
mov
adc
pop
loope
mov
test
inc
arpl
xor
jge
and
cld
loopne
shlb
es
mov
imul
gs
jmp
fadds
out
jmp
xor
lcall
pushf
mov
scas
jns
mov
mov
inc
outsl
push
ficompl
out
scas
enter
and
sbb
mov
nop
das
icebp
pop
jp
aaa
aaa
xchg
ror
es
pushf
in
rorl
jge,pn
aad
push
cmc
pop
jle
fdivs
cltd
mov
fs
mov
and
or
nop
jecxz
aam
mov
xchg
loop
cmp
inc
inc
add
mov
mov
or
in
ja
out
or
in
mov
stc
fcmovne
xchg
xchg
cmpsb
xchg
or
addr16
fwait
enter
lret
xorb
std
filds
jecxz
mov
and
add
sub
mov
push
mov
adc
and
push
pop
xchg
out
imul
push
fs
adc
out
ja
loop
adc
mov
jne
sti
mov
xor
cmpb
and
nop
insl
lods
jnp
lret
push
fcompl
ds
adc
std
jmp
inc
pop
sub
popf
imull
jo
add
dec
xor
jns
mov
flds
int3
dec
push
pop
lods
cmp
int
fwait
idivl
out
clc
stos
nop
in
mov
pusha
shrb
sbb
push
jmp
rcrl
out
push
clc
sahf
cmpsl
mov
push
xor
jecxz
mov
movsb
cs
and
test
sub
adc
inc
cmpsb
inc
cmp
jne
cmp
add
jo
daa
sub
xor
rorl
adc
dec
dec
jne
inc
repz
mov
outsl
pushl
aas
sub
fidivl
adcb
sti
dec
fimull
shll
inc
jmp
out
xchg
cli
jbe
mov
xchg
pop
ss
stos
adc
jmp
push
jl
dec
push
push
out
frstor
mov
xchg
mov
adc
mov
pop
ret
jge
into
imul
aam
xor
push
clc
lods
cmp
mov
aas
mov
mov
jns
sub
andl
jne
inc
out
adcb
adc
mov
mov
setne
push
inc
fisubs
and
loope
xchg
inc
cld
rcrl
lret
mov
push
daa
or
arpl
in
leave
pop
sub
fincstp
loopne
js
mov
mov
test
je
popf
inc
jo
lret
in
jb
outsl
clc
fsub
lcall
daa
inc
lock
sbb
mov
or
mov
cmp
xor
dec
mov
in
add
jno
fucomip
sub
fisttpl
pop
sub
cld
in
pop
jno
fdivrl
pop
std
inc
das
push
scas
mov
mov
fldt
cmc
inc
imul
sahf
dec
ret
stos
mov
sbb
push
stos
adc
inc
jp
jns
inc
call
repz
xchg
mov
pop
inc
push
movsb
cli
fs
mov
sub
pusha
test
shlb
jge
ret
mov
cmc
ja
bnd
aam
cmpsl
adc
sub
push
inc
sub
aad
mov
imul
mov
dec
insl
mov
pop
aad
in
jae
xchg
repz
aas
ljmp
or
rcll
movsl
adc
pop
mov
xchg
test
fdivrl
sbb
xchg
cs
xchg
push
lods
jns
hlt
aad
pop
mov
cvtpi2ps
das
xchg
popf
mov
cld
or
pop
sbbb
mov
data16
fnstenv
dec
data16
xchg
imul
xor
inc
cmp
in
add
cwtl
out
ffree
insl
test
loopne
sbb
stos
outsb
sub
mov
pop
lret
dec
cmc
lock
sarb
mov
add
nop
int
out
fcmovbe
out
and
movsl
jp
adc
int
aad
pusha
mov
xchg
jge
or
js
push
test
test
std
aad
lret
aas
aam
cmp
dec
push
sub
pusha
jb
mov
jnp
push
pop
xor
jo,pn
loopne
pop
lods
xchg
sti
mov
divl
push
mov
xor
stc
add
xchg
in
aaa
rorl
or
fdivrp
lea
clc
iret
pop
adc
mov
pop
inc
lock
int
jb
inc
cld
mov
icebp
and
imul
sub
cmp
shlb
lods
xchg
sub
mov
push
cltd
mov
or
test
xlat
rcll
scas
push
mov
mov
imulb
es
sub
outsb
cmpsl
outsl
mov
cmp
lahf
out
push
iret
icebp
fs
cmp
mov
lods
inc
or
lods
cmp
dec
mov
das
add
and
mov
clc
repnz
shl
jl
imul
int3
sbb
mov
lcall
scas
jnp
pop
mov
push
aas
jg
loop
je
xchg
adc
lock
stos
add
sub
lret
out
in
push
xchg
push
clc
or
in
or
jge
incb
lea
iret
and
xor
in
popa
mov
and
xchg
es
xor
xor
mov
cmpsl
fimull
rcll
ret
mov
sub
bound
mov
and
shlb
test
and
testb
inc
mov
sub
adc
inc
push
inc
repnz
sub
mov
repz
xor
daa
mov
stos
in
push
stos
dec
scas
push
jmp
xor
mov
movsb
mull
and
xor
mov
sub
dec
xchg
enter
es
mov
dec
sbbb
gs
or
jb
lods
mov
out
or
push
sti
jae
sti
mov
jbe
outsl
jae
rclb
xor
pop
out
mov
mov
loopne
ljmp
or
pop
cltd
sbb
popa
addr16
mov
invd
xchg
lods
mov
cmpl
and
test
repnz
aad
jne
fidivrs
or
mov
cli
lret
and
push
vminss
dec
insl
clc
sub
adc
jp,pt
call
add
movsb
jp
jb
pop
sub
cmp
lods
orl
imul
idivb
mov
jae
ss
xor
lea
xchg
adc
imul
xchg
leave
fnstenv
cmpsb
sar
dec
into
cli
inc
jmp
and
push
mov
lahf
adc
cmp
cmp
push
ret
rcrb
inc
ljmp
mov
cmp
add
leave
es
xor
cli
test
sub
test
mov
xor
inc
jo
fdivl
add
lds
imulb
inc
jl
xor
and
jb
nop
mov
aam
inc
lcall
insl
pop
std
rep
add
call
test
or
or
cmp
sbb
aad
jb
insl
test
imul
ficompl
mov
aas
clc
jmp
mov
cmpsl
sbb
imul
es
add
aaa
mov
dec
bound
dec
fcomps
cmp
ret
imul
lods
pop
icebp
xor
sub
push
sahf
sbb
stc
popa
or
repz
loopne
or
or
sub
lods
das
mov
adc
push
fimuls
enter
jb
cli
rcrb
stos
sub
clc
adc
mov
xchg
cmp
pushf
call
or
fwait
scas
inc
call
pop
sub
add
lahf
mov
xor
out
xchg
pop
push
aad
clc
ret
movsb
bound
jge
cmp
out
dec
sub
jae
outsl
lahf
add
push
and
fmul
xor
test
sub
ret
out
cwtl
insl
loopne
jbe
bound
sti
cmp
and
fs
sbb
adc
into
ja
and
pop
lods
xor
lea
pop
xor
mov
or
arpl
out
aam
dec
popf
mov
or
adcl
xchg
mov
hlt
push
rcl
ror
push
sub
jb
xor
pop
rolb
pop
enter
push
mov
aad
shrb
or
bound
xor
ret
popl
and
imul
andl
inc
pop
xor
incb
in
or
mov
mov
dec
jge
stos
pop
add
pop
push
rolb
cmp
je
or
sub
cwtl
popa
popf
sbbl
test
jb
ret
xchg
pop
cmp
lds
iret
les
outsb
jecxz
xchg
ljmp
or
subb
out
mov
out
dec
fsubrs
jle
add
ds
in
add
inc
push
iret
es
xchg
push
xor
sbb
aad
lcall
lods
jg
jns
sahf
push
roll
jnp
popf
out
cld
or
dec
rcrl
add
arpl
das
pusha
push
outsl
sarl
mov
insl
jne
fildll
cmc
fdivrl
test
lcall
fidivs
cmpsb
push
cwtl
dec
push
mov
xchg
scas
dec
sti
andl
xor
pop
and
sub
lea
xor
inc
push
mov
jae
and
xchg
leave
dec
cmp
inc
xchg
pop
or
add
mov
int
inc
jle
mov
jbe
leave
jp
xlat
fisubrs
sub
lods
xor
or
push
imul
sbb
std
pusha
or
lret
icebp
jae
xor
pushf
dec
addr16
in
cmpsl
mov
pop
cmp
jns
push
loope
mov
pop
mov
push
and
icebp
dec
mov
cwtl
iret
dec
aad
lods
and
xchg
ja
pushf
cwtl
aam
lods
shll
stos
mov
push
divl
imul
mov
ret
inc
adc
push
loop
and
inc
jg
loopne
sbb
test
leave
popf
jns
insb
fdiv
xchg
adc
test
imulb
push
mov
mov
push
fsubrs
sub
fdivrp
faddl
shlb
lcall
mov
cmp
pop
movsl
enter
out
mov
lods
inc
adc
add
mov
out
lods
mov
mov
ds
dec
mov
lea
mov
fildl
or
lret
dec
and
push
es
cmp
incb
jo
scas
push
imul
xor
outsl
arpl
inc
ss
mov
pmullw
in
mov
ret
ss
dec
or
xchg
imulb
sbbb
pop
insb
add
add
pushf
or
add
imul
xor
jp
adc
mov
dec
addr16
lret
xchg
push
stos
push
mov
sar
inc
loopne
stos
enter
cmp
mov
inc
cmp
jbe
adc
add
xchg
push
cmp
pop
insb
jae
jae
sbb
in
lods
iret
nop
mov
dec
xchg
or
aad
pushf
fs
aas
mov
cwtl
shrb
push
in
jle
xchg
mov
pop
scas
xchg
xchg
jmp
mov
pusha
dec
ss
loop
lret
icebp
test
scas
mov
sub
push
scas
cwtl
cwtl
loope
inc
mov
cmp
ja
push
cmpsl
inc
divb
push
adc
push
or
mov
inc
lock
inc
outsl
inc
call
push
pop
nop
scas
mov
jo
or
in
mov
jge
sub
es
cli
enter
popf
mov
enter
pop
pop
rolb
shr
mov
pop
mov
aam
je
jns
shrb
and
mov
or
aas
cli
cli
lods
movsl
fs
jmp
add
sahf
mov
cmp
mov
iret
add
lock
push
call
sub
std
lods
sub
popa
rcl
scas
cmp
test
test
cmpsb
divl
pushl
jbe
hlt
dec
addb
adc
push
popa
dec
mov
ds
pop
cmp
pop
mov
dec
subl
stos
xor
loopne
sbb
or
inc
adc
dec
cmpsl
pop
adcl
in
fcmovu
sub
jbe
dec
ljmp
cmpl
ja
lret
lcall
or
into
aaa
dec
mov
loop
jg
push
xor
sbb
mov
mov
jg
test
push
mov
pop
insb
sbb
lods
push
pop
push
inc
clc
in
mov
fcmovne
and
mov
sbb
test
pop
mov
fildll
ss
ja
daa
jne
sbb
in
add
loopne
imul
pusha
sbb
lock
push
adc
or
not
pop
std
lock
out
add
xorl
add
rcll
aam
sbb
mov
xchg
jl
xchg
push
ret
pusha
popf
inc
into
adc
ret
je
stos
or
scas
jmp
das
mov
xor
adc
mov
push
fdivrl
nop
push
dec
or
xchg
mov
popa
ljmp
push
imul
mov
sub
loop
jg
pusha
mov
mov
dec
mov
out
shlb
mov
out
mov
je
push
pop
ds
mov
jb
or
jbe
sub
dec
popf
pop
gs
xchg
or
inc
inc
stc
in
pop
test
icebp
into
or
jbe
xchg
aad
jge
loop
xchg
or
push
je
psrad
repz
fisttpll
mov
pop
shrl
dec
repnz
je
xchg
pop
clc
fwait
or
mov
icebp
cmp
ljmp
and
or
gs
addr16
cld
mov
push
pop
pusha
push
loopne
iret
aad
jge
sbb
jl
cwtl
xor
xchg
call
loopne
push
lods
pop
inc
mov
cmpsb
dec
xchg
sti
and
jmp
cmpsb
out
repnz
xchg
adc
mov
in
scas
and
ret
addr16
mov
incb
movsl
test
inc
add
ret
repz
pop
hlt
push
stos
ret
and
movsb
sbb
sbb
lods
call
in
sub
mov
inc
test
inc
pusha
mov
mov
mov
data16
mov
call
rol
mov
insl
leave
out
and
in
dec
add
shlb
stc
sub
ja
xlat
js
mov
xor
mov
push
mov
bound
dec
mov
pop
das
pop
ds
imul
xchg
je
push
xchg
and
push
xor
aas
pop
sub
out
xchg
iret
test
fstl
hlt
mov
andl
aaa
lcall
xchg
stos
adc
add
inc
jns
call
hlt
ret
xor
aaa
ret
mov
jns
sbb
jp
xchg
or
xchg
mov
jno
sub
cli
sub
mov
daa
fcmovnb
inc
dec
add
jecxz
jnp
sbb
scas
mov
mov
cld
xor
or
ds
cmp
add
mov
insl
subl
icebp
adc
pushf
jp
rcrb
stc
mov
adc
push
sbb
test
pop
xchg
and
outsb
or
dec
daa
xor
daa
adc
iret
enter
mov
sti
sbb
xor
sbb
es
lock
fisttpl
cmc
imull
test
jmp
je
or
mov
int3
jle
cmp
scas
xor
fiadds
stc
adc
push
xchg
sub
sbb
jmp
mov
lret
ficompl
sbb
adc
add
sub
ss
xchg
test
out
cmp
test
lret
cmp
inc
mov
js
sbbb
out
pop
and
jae
ret
pop
sbb
sbb
and
push
out
hlt
movsl
push
pop
inc
jp
push
and
das
sbb
les
xor
ret
jg
repnz
arpl
rcrb
and
jbe
sahf
orl
loopne
pop
jbe
loop
loopne
stc
jge
test
out
sub
clc
lret
lods
les
inc
js
jge
orl
pushf
mov
enter
and
push
xor
in
rcrl
sub
adc
test
inc
add
insl
and
adc
add
pushf
add
mov
cwtl
pop
sbb
pop
dec
ds
outsl
cmp
mov
cmc
mov
push
xor
scas
jnp
sbb
mov
inc
mov
cwtl
imul
xor
dec
in
sub
incl
into
sub
mov
xchg
hlt
loope
pop
and
cltd
jne
out
shl
div
push
and
iret
stc
xor
push
xchg
and
ret
insl
sbbl
add
and
shlb
push
lods
mov
adc
pop
or
int
pop
mov
jecxz
add
sub
pop
lock
xchg
repnz
data16
pop
sub
cwtl
inc
les
flds
dec
cwtl
push
mov
mov
fsubrs
cltd
fwait
cmp
pop
jmp
adc
cltd
sub
cmp
idiv
xchg
sub
sub
es
cmp
mov
jo
shrb
mov
cmpb
fimuls
fstps
call
mov
insb
cmp
jns
inc
adc
pop
sub
inc
inc
mov
jo
add
lods
pop
mov
sbbb
pop
enter
hlt
shr
in
add
ss
xor
jne
int3
fs
cmp
add
inc
fwait
mov
mov
sbb
cmp
dec
sahf
add
repz
xchg
mov
loop
lock
pop
jnp
mov
lret
insb
sahf
or
or
cmp
gs
mov
jge
into
adc
jnp
push
leave
mov
cmp
push
cmp
clc
out
jne
repnz
ljmp
pop
pop
iret
mov
out
dec
adc
adc
nop
ja
lret
in
xchg
int
mov
dec
cmp
rcll
cs
add
addr16
imul
movsb
in
outsb
xchg
roll
dec
push
cld
movsb
lcall
pop
mov
jmp
push
inc
imul
setp
in
pop
and
call
arpl
imul
push
sub
mov
pop
push
jp
mov
xchg
in
popl
pop
cmp
int
fcmovnbe
addl
dec
mov
push
jno
cmp
stos
cmp
mov
rcr
loop
dec
rcll
enter
pop
lret
xchg
push
repz
mov
mov
sti
cmpsl
cmp
and
sbb
xchg
cld
cmp
imul
enter
aad
mulb
into
jbe
cwtl
in
xchg
mov
jno
dec
repz
mov
jg
std
shll
pop
std
push
sbb
jns
jp
jae
loop
int3
clc
insl
push
aaa
rolb
test
stc
dec
lcall
add
in
psubsw
dec
add
xor
sbb
fucomip
out
jns
xor
ret
je
loop
xchg
repz
nop
sub
and
sub
fs
imul
stos
pop
xorb
add
and
inc
cmp
lcall
shl
call
mov
jno
shlb
mov
adc
and
mov
scas
popl
lahf
sbbl
cmp
sarb
ret
dec
xchg
in
js
add
push
xlat
cli
enter
xchg
jb
in
repnz
dec
dec
movsl
xor
insl
xor
je
and
mov
mov
js
movsb
roll
imul
std
or
xor
das
dec
pop
sti
or
into
jnp
aaa
jmp
inc
inc
pop
stos
test
shr
outsl
cmc
movsb
es
cmpxchg8b
lret
shrb
mov
imul
std
sbb
into
ret
repz
pop
lahf
adc
sub
or
jge
push
aas
sub
lret
mov
mov
xchg
imul
mov
enter
adc
fs
push
cli
cmpsl
inc
xchg
adc
test
cmpsb
in
xlat
in
stos
mov
or
jmp
adc
sbb
mov
loop
jb
sub
or
cli
stos
and
fstps
xlat
add
or
mov
pop
iret
arpl
cmpsb
jmp
sbb
std
xor
inc
dec
ds
incb
jle
fcompl
cmp
add
fs
push
shl
sub
or
in
es
mov
mov
sub
das
clc
pop
adc
sbb
bswap
mov
negb
pop
add
insl
push
and
repz
jecxz
xchg
xorl
mov
scas
mov
cmp
pusha
sar
sbb
shrb
notl
cmp
mov
mov
dec
mov
add
add
dec
inc
dec
and
shl
arpl
and
loopne
adc
sbb
mov
cmc
imul
jge
jmp
sbb
imul
dec
cli
dec
jno
dec
mov
or
mov
fstl
jno
or
pop
call
mov
and
mov
push
je
jb
test
addr16
add
repz
mov
aam
mov
idivl
movsl
movsb
sub
fildll
jno
xor
jns
pop
jbe
jle,pt
fsubrs
mov
cmp
mov
xchg
or
cmp
pop
stos
mov
cli
sub
lods
adc
movsl
les
fistpl
mov
aas
test
pop
xchg
imul
pop
loope
scas
jnp
stos
jnp
ror
mov
inc
aam
jl
adc
xchg
std
aad
fidivrs
dec
incb
jmp
mov
cld
lods
aaa
add
lods
popa
data16
xchg
add
sub
lret
cli
jp
push
mov
pop
imul
jb
addl
testl
out
pop
push
pop
push
dec
into
jp
xlat
ss
sbbb
mov
cmp
rolb
push
or
xor
ss
pop
or
add
cmp
imull
or
shrb
adc
movl
sub
test
pop
cld
push
lret
and
push
movsb
js
adc
push
mov
ljmp
popl
lock
pop
add
jl
stos
je
add
out
fstps
movsb
std
cmpsb
movsl
stc
inc
jno
pop
mov
lret
ljmp
xchg
pop
fwait
mov
lock
test
xor
popa
push
jle
jle
adc
dec
sbb
ds
jl
in
jp
outsb
jp
pop
sarb
adc
adc
dec
mov
inc
push
mov
pushf
sahf
xor
dec
subl
fldl
dec
or
stc
and
cltd
sti
lret
xchg
clc
jb
in
bound
frstpm(287
dec
les
cli
jae
daa
mov
xchg
or
xchg
jecxz
pop
cld
jo
xlat
js
shll
sbb
out
clc
stos
jno
fs
mov
dec
and
jns
imul
cmc
xchg
add
test
cli
lock
cmpsl
cld
lods
cmpl
pop
pushf
xchg
mov
adc
cltd
popa
jmp
bound
fldenv
jne
mull
xor
xchg
and
in
push
mov
push
outsl
test
push
es
lods
aas
outsb
sbb
sti
push
aas
fisttps
data16
in
mov
mov
faddp
lods
inc
notb
sbb
mul
or
mov
in
arpl
subb
dec
or
and
xchg
cmp
loop
repz
and
fmul
mov
rcll
loope
inc
add
adc
in
int
push
mov
lea
mov
inc
dec
jo
fcmovnb
cld
jns
les
adc
pop
add
rcll
test
hlt
xchg
sub
pop
xlat
xchg
mov
mov
repnz
push
jmp
out
and
mov
pop
stos
cmp
fsubr
xchg
repz
jnp
xchg
clc
inc
aaa
ja
ljmp
scas
jmp
pop
mov
and
roll
je
pop
xchg
fldenv
aam
push
imul
push
xchg
rcl
xor
hlt
jno
mov
mov
cmpsl
fdivl
pop
pushf
test
xor
mov
mov
ljmp
inc
std
data16
xlat
ret
in
pop
sahf
add
std
stc
cltd
cmp
sub
das
sarl
pusha
enter
mov
sahf
mov
sti
lret
add
jno
sbb
push
jecxz
in
testb
mov
mov
dec
or
movsb
aad
xchg
jno
xor
jbe
outsl
or
add
mov
push
mov
and
xor
sub
or
insl
test
out
mov
add
mov
mov
loop
ljmp
not
push
out
in
imulb
popf
hlt
data16
inc
leave
mov
and
xchg
ret
mov
inc
popf
xor
sbb
lcall
cli
movsl
jae
xchg
lock
pop
imul
lock
cs
or
push
std
inc
ds
or
jp
fsubrs
je
push
or
pop
cmp
and
inc
push
or
xchg
add
jne
fdivrl
enter
inc
adc
and
hlt
dec
stc
sbb
fwait
gs
pop
lds
push
add
adc
ljmp
mov
std
mov
test
push
add
in
push
xor
push
scas
adc
xor
lcall
outsb
loop
addr16
jle
mov
clc
and
out
xchg
shlb
sbb
or
aam
lods
ljmp
pusha
sbb
je
adc
js
inc
push
lods
add
pop
int3
ret
or
repz
xchg
sub
adc
mov
mov
aad
les
push
ret
sbb
stos
sub
jge
adc
add
mov
and
xchg
xchg
pop
xchg
sbb
in
ds
pop
sub
ret
xchg
icebp
fstps
imul
cmpsb
push
push
xchg
aas
xchg
je
xorl
dec
or
cmpsb
jmp
jb
lds
xor
mov
in
mov
fadds
cmp
icebp
stc
sub
jecxz
cli
aam
fdivr
mov
fsubr
fnstcw
mov
pop
nop
adc
ljmp
sub
xchg
test
sub
movsb
jo
cmp
adc
int
enter
and
fs
aad
inc
ret
xor
jl
in
add
sub
stc
fdivrs
mov
add
or
xor
ret
mov
ds
mov
iret
fs
cmpsb
and
lods
int
push
jle
mov
clc
or
sub
fiadds
mov
lahf
lcall
or
pushf
add
enter
xlat
out
shrl
ret
jae
sub
repz
adc
aad
pop
popf
add
add
xor
xor
into
xor
rcrb
shl
lahf
sub
jbe
pop
jle
sbb
inc
cld
sbb
sub
adcl
mov
sbb
mov
mov
js
movsl
lahf
or
loopne
stos
mov
ficoms
mov
leave
xlat
arpl
dec
incb
push
cmp
test
and
mov
rol
movsb
or
bound
pop
mov
aaa
mov
leave
and
mov
js
inc
push
jl
sub
adc
les
mov
or
push
daa
xchg
arpl
xchg
sbb
xorb
inc
shrb
jne
lds
aam
add
fwait
shlb
sub
int
pop
pop
rep
dec
iret
mov
aaa
xchg
add
in
dec
test
add
dec
pop
xchg
fisttpl
dec
and
mov
stos
and
sub
xchg
and
add
add
popf
mov
inc
dec
inc
mov
push
and
es
lock
push
adc
aam
je
sbbb
nop
add
cmpsl
xchg
test
cmp
repz
push
hlt
in
cwtl
xor
pop
ljmp
shrl
scas
xchg
sti
fdivrp
mov
std
push
cld
adc
repz
stc
pop
test
push
mov
lods
mulb
sub
stos
jp
int3
add
fidivl
js
jnp
jo
loopne
stos
ret
out
pop
push
daa
mov
adc
mov
iret
jno
ljmp
ds
adc
ss
pop
mov
or
jle
mov
movsl
lods
es
js
sahf
loop
stos
pop
or
add
mov
sarl
outsb
fstl
movsb
sub
cmp
and
aas
dec
pop
fucomp
mov
sbb
mov
sub
push
cld
pop
xor
lods
xchg
es
sbb
sbb
push
cmp
mov
push
push
cltd
or
fmull
test
dec
out
add
lahf
dec
hlt
out
sub
cs
mov
into
les
movsl
and
in
notl
xchg
jne
aad
ret
add
mov
jg
jo
dec
shll
stos
dec
push
repz
or
das
add
in
mov
cmp
sti
sub
mov
cmpl
and
sub
add
sbb
lock
sub
push
je
sbb
push
jl
lods
fnstenv
psubsw
adc
push
clc
mov
mov
mov
push
and
mov
aaa
mov
dec
cmp
gs
sub
dec
dec
lea
adc
inc
mov
jmp
fsubl
scas
and
cmpsb
sub
jne
adc
les
outsl
push
or
add
jle
fisttps
pop
vmread
pop
adc
lods
xchg
cmp
popa
cltd
mov
cmp
popf
pushf
int
adc
dec
mov
adc
sbbl
add
mov
sub
push
stc
jge
mov
sahf
push
inc
decb
ja
xchg
sbb
addr16
mov
cmp
es
mov
push
stos
pop
lcall
lock
xchg
stos
shlb
or
leave
daa
rorb
jge
dec
pop
add
imul
push
ret
pop
mov
mov
fidivrs
int
pop
sub
fldl
pop
add
popa
sbb
ffreep
push
xchg
add
ds
mov
xchg
dec
bound
mov
pop
js,pn
aaa
push
mov
enter
jle
xor
test
push
pop
mov
pop
addr16
insl
cmp
add
xor
dec
push
in
mov
push
pushf
jmp
sub
fldcw
fsubr
stos
add
pop
cltd
dec
xor
pop
add
mov
or
xchg
and
xchg
movsb
inc
cmp
add
out
stc
lahf
mov
sub
addl
add
adc
push
lods
dec
mov
xchg
mov
sub
mov
push
adc
loop
mov
cltd
stos
mov
lret
das
nop
loop
push
stc
and
clc
xor
jns
loop
jmp
mov
inc
cwtl
xor
dec
aam
push
ja
rcl
or
mov
xchg
lea
flds
notb
jns
ds
xor
aaa
sbb
icebp
imul
aaa
cmp
outsl
leave
jmp
xor
pop
movsl
cs
mov
or
mov
or
jp
clc
inc
add
xchg
insl
mov
pop
cltd
aaa
ss
lcall
push
mov
xor
lea
xor
or
push
pop
sub
imul
cmp
xchg
shrl
xor
xchg
pop
pop
pusha
call
mov
out
das
lock
sti
hlt
adc
sahf
xor
inc
pop
mov
push
cmp
jo
lcall
pop
inc
popf
es
mov
lret
and
out
test
xchg
mov
cld
and
pop
xor
xchg
xchg
lcall
test
adc
in
cmc
adc
mov
insl
jmp
mov
lods
mov
decb
push
mov
lods
lods
test
jg
pop
mov
cltd
cltd
sub
push
cmpsb
lods
sbb
lret
lods
xchg
and
inc
or
pushf
insl
loop
cltd
inc
in
adc
or
mov
mov
xchg
and
add
rcl
inc
xor
pop
inc
dec
loop
notb
mov
xchg
aas
inc
adc
sbb
mov
ret
and
xchg
add
mov
mov
addr16
mov
scas
fdiv
pusha
xchg
mov
adc
xor
push
mov
and
inc
lods
mov
nop
inc
add
pop
dec
or
rcl
cmp
lods
fnstcw
jno
cmp
test
inc
stos
adc
testb
dec
mov
xor
cmp
xchg
mov
mov
and
xorl
cs
movsb
add
and
cld
ja
adc
cmp
xchg
shrb
add
add
xchg
aaa
or
test
add
rep
cmp
lahf
pusha
jb
pop
call
ljmp
jecxz
lods
bound
sub
bound
mov
sub
decb
fldl
pop
arpl
and
repnz
sub
cmpsl
xorb
repz
pop
pusha
mov
pop
jecxz
xchg
shrl
data16
dec
push
or
mov
jns
call
pop
aam
jns
stos
sbb
and
stos
ja
sbb
fcmovnb
mov
scas
push
mov
inc
xor
fmull
dec
test
or
mov
sbb
in
loope
and
fstl
mov
cwtl
dec
pop
xchg
les
jbe
push
sbb
out
and
mov
cmp
mov
lods
jge
xchg
adc
jp
pop
mov
push
cmpsb
lcall
xor
inc
xlat
and
icebp
mov
mov
cmp
add
imul
mov
lods
insl
sbb
stos
xor
pop
shlb
call
cmp
push
adc
mov
test
in
in
dec
addr16
ja
mov
loopne
movl
into
sbb
cmp
pop
int
mov
xor
outsl
xor
cmpsb
js
jnp
dec
mov
fisubs
adc
sti
inc
mov
and
inc
arpl
cmpsl
mov
inc
imul
rol
imul
lahf
call
mov
out
imul
fs
inc
adc
lahf
jb
cmp
or
mov
mov
mov
std
jl
cmp
xor
shlb
pop
insb
inc
movsl
into
mov
std
mov
push
je
fidivrs
mov
in
ljmp
add
pop
out
aam
icebp
or
andl
xchg
add
out
adc
pushf
outsb
cld
lock
jns
dec
and
mov
xorb
pop
scas
xor
fsubrl
adc
mov
pusha
sbbb
sbb
push
mov
mov
sbb
ja
push
sahf
notb
clc
dec
dec
adc
xor
cwtl
lods
je
jae
add
and
lods
in
inc
lret
pop
and
mov
scas
fisubrs
nop
int3
mov
cmp
jle
scas
fisubrl
cmpsb
ds
lods
dec
rolb
jns
cmp
jg
mov
inc
loope
pusha
xor
jg
xchg
in
sbb
stos
jecxz
xchg
loop
lret
enter
int3
insl
inc
sbb
testb
inc
test
dec
icebp
test
cltd
and
aam
aad
lods
sbb
aam
cmp
fdiv
inc
cmp
lock
xchg
cld
fmull
shrb
cs
and
push
clc
loopne
dec
and
pop
rol
xchg
shr
sbb
dec
add
movsl
pusha
lods
sub
loopne
cmp
jge
insb
jns
cmp
js
mov
cmc
loopne
xchg
jge
stc
adc
push
or
push
mov
fists
aad
iret
xor
dec
testl
data16
sub
std
ds
jae
push
jo
outsl
jne
in
filds
stos
xor
dec
in
insl
pusha
xchg
inc
dec
mov
repnz
orl
arpl
push
xor
insl
pushf
cmc
mov
inc
adc
out
loopne
inc
and
inc
cmp
stc
shl
or
adc
and
mov
pop
pop
dec
sub
stos
lds
jg
push
test
add
or
lahf
ss
cmp
pop
adc
add
icebp
out
imul
mov
in
rolb
pop
test
mov
arpl
pop
jb
and
pop
cmp
inc
push
inc
push
leave
or
cmpsl
add
inc
mov
sahf
pop
fwait
sub
cld
fwait
mov
xchg
rcrb
and
pop
jg
shr
lock
add
add
add
aad
push
xchg
iret
into
enter
daa
rcrl
pop
xor
xchg
mov
inc
out
into
adc
push
loope
enter
out
sub
aas
pusha
jge
pop
push
and
sahf
int
in
push
test
push
sbb
push
rorb
test
lcall
sub
mov
pop
fs
inc
int3
add
or
aad
cmp
xor
push
imul
ds
or
dec
add
leave
sti
cmp
lods
test
inc
out
stc
outsb
dec
fs
insb
cmp
repz
lret
outsb
int
sarb
dec
pusha
and
pushw
dec
jo
insl
sbb
in
aaa
xor
push
leave
xlat
imul
or
inc
scas
popf
roll
xchg
add
push
mov
adc
mov
mov
push
mov
jo
lds
add
adc
sbb
ss
inc
les
aas
lock
fbld
mov
pop
and
xlat
mov
xchg
enter
mov
fnstsw
jle
jle
iret
push
mov
aaa
je
and
dec
scas
pusha
xor
xor
lret
push
outsb
jb
mov
jge
lods
sbbl
xchg
pop
xchg
cwtl
push
adc
mov
jnp
dec
push
pushf
int3
sbb
ret
mov
in
mov
sbb
push
push
in
adc
and
jmp
fcmovb
inc
or
outsl
jl
enter
ret
lods
sbb
pop
push
mov
jbe
push
test
cmp
sbb
pop
xor
jne
xchg
push
js
jmp
sbb
or
lock
test
test
negl
xor
xchg
cmpb
xor
std
fwait
mov
jnp
mov
add
gs
out
pandn
inc
imul
sti
ret
out
cmp
outsl
push
pop
aas
movsl
cmp
addr16
mov
icebp
pushf
add
movsl
dec
adc
arpl
movsb
inc
loopne
dec
sbb
jae
xor
sahf
stc
sub
xor
xor
rorb
loope
jp
lahf
add
cwtl
lahf
push
add
out
add
clc
dec
call
pop
faddl
inc
add
in
pop
cmp
add
push
adc
adc
cmc
notb
mov
pop
xchg
pop
call
pop
adc
xchg
push
adc
ljmp
enter
push
lea
jmp
fdivrl
scas
inc
inc
mov
mov
push
mov
mov
push
stos
movsl
add
mov
cmp
cli
sbb
add
fimuls
je
push
movsl
jle
sub
fcoml
pop
jno
dec
or
xchg
mov
dec
sub
adc
jb
adc
pushf
push
cmp
mov
arpl
and
ljmp
cld
mov
inc
pop
out
fcompl
pop
dec
into
mov
sbb
mov
scas
pop
call
fisubl
xor
pop
xlat
and
mov
xchg
ror
jne
mov
test
pop
mov
in
mov
into
dec
loope
or
rcll
out
cli
push
jbe
in
call
pusha
mov
popa
dec
lock
push
addr16
fnsave
jg
scas
mov
or
mov
setle
xor
aaa
jb
or
push
mov
push
jg
ret
adc
mov
sbb
addb
or
and
xor
adc
and
cbtw
adc
cmp
fisubs
or
call
addr16
lcall
mov
clc
ja
cmp
push
xchg
cmp
sbb
cmp
cmp
dec
test
pusha
or
and
mov
int
out
mov
xor
add
mov
mov
int3
lds
pop
and
add
insb
pop
notl
add
dec
push
std
lcall
aad
rcl
add
mov
add
shrb
mov
call
aad
lahf
in
pop
fidivs
sub
pop
call
xchg
stc
sub
fsubl
inc
daa
xor
mov
arpl
push
rorl
out
hlt
subb
inc
push
ds
bound
inc
incb
jp
scas
push
sub
imul
and
movsl
mov
lods
jle
mov
pop
fcmovnb
ret
dec
sahf
cmp
add
xchg
jle
mov
or
jecxz
dec
jns
jne
shll
dec
mov
inc
jb
ds
jecxz
loop
pusha
aaa
xor
mov
neg
jecxz
faddl
jl
sysexit
inc
rcrl
and
adc
xchg
sbb
fsubl
mov
inc
mov
sbb
xchg
mov
hlt
scas
sbb
xchg
jae
jl
jae
bswap
rorb
inc
aam
sub
ss
sub
cmp
pop
cld
or
in
in
rcl
cmp
test
ds
cld
lret
call
jo
mov
imul
fcoms
dec
ret
sarb
mov
add
insb
dec
in
mov
stos
stos
or
dec
mov
xchg
and
inc
imul
dec
mov
repnz
mov
mov
int
std
gs
insl
cmp
popa
sub
push
mov
ret
xchg
adc
stos
ss
cmp
xchg
ja
lods
lea
icebp
hlt
push
sbb
dec
orb
dec
sbb
sub
xchg
rorb
jg
lock
jmp
xchg
cmpsb
inc
in
add
push
fwait
mov
jg
loope
lods
sbb
test
iret
imul
cld
sub
jbe
jo
or
inc
test
jl
outsl
pop
xchg
inc
push
inc
decl
mov
jecxz
and
push
sbb
pop
inc
call
faddp
adc
fidivs
xor
adc
aas
xchg
pop
scas
pop
pop
adc
push
add
cmp
out
or
cld
in
or
outsb
and
mov
daa
rcr
insb
sub
xchg
gs
adc
sub
sbb
xchg
mov
cmp
hlt
mov
cmp
jns
mov
mul
jmp
fnstenv
xor
int3
pop
stos
imul
xor
test
mov
jb
aam
dec
ljmp
stc
or
dec
loopne
push
test
filds
mov
pop
xlat
loop
mov
sub
ret
push
mov
dec
mov
cltd
push
inc
aaa
mov
push
lahf
imul
sti
inc
sbb
push
inc
div
movsb
nop
sub
ss
xchg
fimuls
mov
mov
into
sbb
sahf
mov
aam
or
movsl
adc
cmpsb
sbb
dec
mov
fisttps
imul
mov
cli
cltd
cmp
cs
sub
fcoml
mov
mov
dec
and
aam
and
mov
int
mov
inc
gs
addr16
xchg
or
ja
pushw
adc
gs
jnp
push
in
cld
push
out
mov
dec
xor
pushf
adc
mov
xchg
jno
rcrb
test
inc
jp
dec
scas
fmuls
mov
push
ret
repnz
mov
imul
xor
cmp
inc
pop
xor
xorl
clc
data16
inc
xlat
ret
mov
jp
call
imul
cmp
dec
push
jbe
dec
jne
jl
insb
filds
daa
sbb
inc
xor
xor
aam
cmc
pop
stos
jl
fmull
cmp
sub
stos
adc
scas
jns
enter
pop
clc
and
sub
cld
xchg
xchg
push
pushf
mov
push
push
adc
adc
push
loop
mov
data16
mov
add
sbb
addr16
sub
mov
cmp
jnp
out
scas
jecxz
out
add
les
lods
mul
stos
mov
bound
repnz
lahf
outsb
xor
mov
test
push
lret
test
faddl
loopne
jno
cmp
in
insb
stos
adc
ja
icebp
sub
ljmp
push
jg
pushf
adc
aas
aam
inc
mov
sti
jl
jmp
pop
scas
mov
pusha
aad
jp
jne
xor
es
sub
inc
add
mov
dec
mov
ret
push
push
test
jl
pop
loopne
mov
and
inc
mov
dec
ret
cs
test
int3
jbe
mov
lds
rorb
and
mov
and
ror
mov
add
or
into
in
ret
mov
xor
ljmp
fsubrl
in
or
je
or
testl
cltd
push
repz
xchg
outsl
test
js
jae
pop
fs
inc
addr16
ja
sub
jae
lcall
pop
push
stos
and
push
and
nop
nop
adc
stos
push
mov
add
and
daa
loope
xor
xchg
add
xlat
cwtl
push
cmp
hlt
cmp
std
sbb
cmp
jae
in
fs
decb
sub
or
in
ret
inc
push
outsl
xchg
popf
int
jle
mov
es
sbb
lahf
mov
ljmp
mov
insl
pop
sub
pop
outsb
xchg
bound
jge
mov
dec
add
dec
call
sbb
lret
mov
xor
or
mov
mov
cmp
jae
and
addl
mov
int3
out
es
rcrb
jp
loop
popf
icebp
dec
xchg
lods
ljmp
pop
out
outsl
lret
ds
sbb
in
or
and
aaa
sbb
into
adc
sarb
aas
and
mov
test
pop
inc
jnp
fisttpll
mov
xchg
inc
clc
cmc
dec
mov
test
fdivrl
shlb
shll
ja
cltd
fmulp
cmpsl
mov
xchg
pop
xchg
aad
pop
push
mov
push
repz
loop
shl
fwait
sbb
xchg
mov
xchg
stos
push
jo
idivl
addl
popf
lea
ljmp
lods
sub
mov
sub
scas
das
jmp
fcmovb
cmp
nop
xchg
hlt
out
fisubrl
sub
sbb
aam
push
or
and
adcl
dec
jo
faddp
xchg
mov
mov
pop
mov
push
fsubs
mov
out
gs
addr16
mov
js
mov
sub
adc
icebp
push
flds
loopne
popa
xlat
xchg
sbb
adc
subb
ret
dec
clc
sar
push
std
int
inc
cmp
dec
lret
cmp
out
bound
push
subl
add
and
adc
in
add
aaa
hlt
lds
outsb
andb
aad
push
mov
push
jmp
sti
mov
push
rorb
loope
inc
loop
dec
adc
sti
jne
or
sbb
xchg
pusha
inc
rcll
dec
fsubrs
mov
cmpl
scas
push
lds
les
std
dec
bound
lret
lgs
mov
clc
inc
jo
cs
push
insl
mov
push
jb
inc
pop
mov
mov
ret
mov
daa
int3
rsqrtps
pop
jge
push
xor
stos
test
adc
mov
push
mov
push
jne
dec
mov
mov
cmpsl
xchg
adc
and
arpl
xchg
add
hlt
lahf
test
mov
jo
push
aas
lods
fs
loope
outsb
popf
out
je
in
cmp
repz
mov
cmp
clc
adcl
inc
fsubr
xlat
sahf
push
jp
xor
leave
ja
stos
into
bound
sub
xor
xchg
and
mov
nop
push
mov
sub
xor
hlt
lret
loop
leave
fwait
nop
push
mov
subb
ret
jge
enter
fadds
mov
lock
jne
xchg
in
lds
hlt
leave
cwtl
loope
push
aad
and
jp
out
xchg
cmp
sub
dec
leave
adc
inc
subl
ret
mov
adc
outsb
rcl
inc
outsl
cmp
push
jmp
sub
pop
mov
clc
gs
mov
lahf
mov
inc
add
sub
mov
in
dec
mov
and
pop
xor
ficomps
cmove
cvtps2pd
xor
and
mov
rorl
out
jecxz
repnz
or
dec
and
decb
shrl
xchg
pop
pop
imul
fcompl
mov
jae
sbb
repnz
and
pop
fucompp
xchg
mov
add
pop
jns
inc
inc
mov
and
xlat
out
loope
cld
call
dec
cmpsl
sbb
ja
and
imul
aad
repnz
jmp
and
inc
in
mov
int3
mov
add
nop
push
add
incb
and
daa
pop
adc
js
cld
cs
loope
add
fidivs
popa
cmp
ljmp
inc
fistpll
mov
xchg
cmp
adc
sbb
adc
scas
das
in
je
mov
xchg
aad
sbb
dec
mov
jge
adc
cli
pop
rclb
pop
or
dec
ret
repnz
out
mov
bound
inc
fcmovu
aas
lea
jp
and
mov
dec
imul
lcall
cmpsl
mov
inc
xchg
cwtl
shlb
call
and
fiaddl
jnp
push
jmp
shlb
mov
dec
push
mov
mov
pop
cmpsl
lea
xchg
sarl
loopne
out
and
lahf
dec
out
outsb
push
push
xor
lcall
popa
mov
mov
jo
orl
cmp
mov
rol
leave
sub
jns,pt
shr
outsb
push
push
adc
mov
mov
inc
out
dec
adc
ffree
jp
mov
call
jae
loopne
cmpsb
cwtl
bnd
pop
lcall
mov
push
cmp
cmp
fldenv
xchg
sub
fcmovu
push
data16
mov
call
out
adc
inc
pop
lahf
xor
push
ljmp
aaa
int
adc
xchg
sub
push
std
or
repz
aaa
add
psrlw
mov
add
xchg
xchg
cli
sbb
push
ror
out
lret
test
scas
sub
pop
xor
xlat
dec
add
xchg
outsl
sti
jo
jnp
test
add
imul
sbb
pop
rorl
scas
es
adc
push
mov
cmp
push
and
xorb
loope
add
pop
test
and
xor
xor
stos
cmpsl
mov
and
fimull
xchg
cld
cwtl
inc
pop
dec
icebp
rcl
call
lods
pop
xchg
xor
ret
and
clc
sahf
and
dec
loopne
sub
pop
mov
dec
aaa
das
xchg
sub
jnp
mov
or
mov
bound
add
xor
adc
mov
cmp
cwtl
lahf
dec
movsl
testb
fistpll
nop
pop
enter
jp
add
inc
jnp
mov
jnp
icebp
aaa
nop
cs
sbb
lock
jl
stos
inc
xor
cli
pop
xchg
cltd
add
dec
push
pusha
in
jmp
stos
cmp
xor
xchg
mov
add
add
jne
inc
add
jnp
push
fwait
push
repnz
mov
shr
leave
addb
sbb
push
sbb
pop
push
das
cmp
out
shll
cli
jl
xor
lds
adc
inc
lods
mov
xor
out
inc
ficoms
mov
cli
imul
cmp
push
fsts
dec
out
mov
fcomps
iret
push
sub
cmp
mov
das
mov
imull
push
fdiv
cmpsb
and
fldl
imul
lods
cli
das
out
out
adc
add
sub
fldl
icebp
loop
int3
in
ss
outsl
call
jg
repnz
jl
lahf
fwait
es
scas
ljmp
and
orb
mov
pop
mov
in
movsb
pop
jbe
push
fisubl
int
mov
pop
jns
imul
add
leave
dec
inc
cmp
and
outsb
dec
push
icebp
int
push
iret
out
repz
mov
call
sub
sbb
mov
iret
xor
xor
mov
push
sub
je
push
or
stc
sbb
pop
mov
xchg
push
sub
dec
pop
ficomps
or
sub
cmp
inc
or
rcll
in
cmp
bound
nop
movsb
jecxz
xchg
lret
jle
dec
nop
jbe
stos
dec
sbb
scas
addb
xlat
mov
mov
out
cmp
add
dec
inc
popf
mov
sbb
icebp
xchg
adc
test
adcb
sbb
call
aas
mov
mov
andb
hlt
and
ret
in
popf
test
xor
lods
push
mov
pop
xor
push
push
popf
push
jle
mov
bound
pshufw
mov
xor
das
xchg
adc
outsb
fsubrp
jg
inc
sahf
mov
xor
xchg
lods
jmp
hlt
mov
push
rcrl
and
pop
rorl
add
adc
testl
outsl
xor
outsb
sbb
mov
fs
push
popf
mov
or
arpl
xor
mov
nopl
aaa
or
xchg
call
into
pop
in
int3
mov
mov
push
dec
and
in
nop
shll
out
mov
jns
andl
mov
dec
push
cmp
ja
adc
test
xor
lea
jno
add
xchg
pop
dec
jl
or
inc
js
sub
int3
cmp
fs
inc
testl
dec
enter
push
adc
pop
pop
rcrl
xor
cli
in
imul
insl
add
mov
mov
fisubrl
lea
insl
repnz
data16
push
inc
js
cs
and
sub
pop
ljmp
add
bound
push
ficomps
xor
xchg
fdivrl
add
rorb
cmpsl
mov
dec
mov
or
lcall
popf
iret
fyl2xp1
push
sti
add
idivb
cltd
mov
push
jl
lods
fisubrl
repz
loop
movsb
xchg
mov
int3
dec
jge
or
ret
sbb
inc
lods
repnz
mov
enter
mov
divb
rep
sub
data16
insl
mov
dec
mov
subl
xchg
adc
cmp
dec
mov
or
xchg
je
aad
movsl
jge
xchg
scas
imul
push
aas
inc
jns
mov
pop
adc
inc
or
je
icebp
sbb
lds
dec
outsb
test
lcall
insb
in
fsubrl
dec
xlat
mov
sahf
jmp
sub
sub
jle
cmp
ja
jmp
cmpsl
lock
adc
mov
aam
pop
fsubrs
jae
sub
pop
dec
lahf
fistpl
adc
and
cmp
fcomip
fsubrl
pop
lock
lret
outsb
int
or
xor
aad
xchg
dec
mov
push
out
ja
add
mov
rcrl
popf
mov
outsb
mov
xor
aaa
push
test
cwtl
jno
xor
jg
lods
cmc
xchg
sub
pusha
cmp
pop
sahf
sarl
xchg
fstp
ja
cmp
jbe
dec
jbe
in
jo
sub
push
scas
push
int3
add
pop
das
fsts
and
lods
fnstcw
movsb
mov
jne
pop
push
mov
sbb
xchg
leave
jp
stos
lret
mov
mov
adc
push
mov
pop
pop
imul
xor
dec
cmp
fs
mov
daa
ret
push
imul
int3
xor
cmpsb
and
in
xor
mov
enter
dec
jg
pop
dec
xchg
dec
cmp
rclb
jnp
pop
fisttpl
xchg
les
ja
xor
jl
sahf
movsl
ljmp
dec
popa
hlt
pop
sub
or
clc
xorl
punpcklwd
test
pop
jmp
fs
cmp
pop
out
mov
xchg
cs
or
cmp
roll
xor
fnstcw
pop
in
sahf
adc
mov
sbb
push
setge
out
cmpsl
sub
aas
mov
jb
and
xchg
dec
xor
mov
sbb
push
sbb
dec
mov
cmp
or
test
lea
dec
adc
fdivs
push
jg
ljmp
int3
pop
pop
mov
push
sub
inc
sbb
ret
rcl
mov
frstor
sti
pop
insb
lahf
dec
shrl
stos
test
clc
mov
inc
push
dec
mov
ret
shlb
cmpsb
icebp
pop
sub
dec
push
mov
pop
pop
adc
lahf
cmp
jmp
mov
inc
test
cmp
inc
js
mov
data16
ds
cmc
adc
popf
mov
lret
loope
mov
mov
jg
adc
dec
and
cmp
pop
shrl
lds
dec
jnp
stc
cmp
data16
popf
and
cld
in
push
sti
repz
fstpt
xor
cmp
pop
and
in
les
stc
cmp
int3
scas
inc
xor
jbe
fs
shrl
jle
pop
addb
push
sbb
mov
in
adc
dec
adc
in
dec
mov
sarl
gs
mov
or
lret
dec
js
push
mov
ss
push
loope
sub
pushl
and
sub
testl
push
mov
std
xor
mov
ret
fnstcw
outsb
xchg
jb
adc
fadd
cmp
pop
cmp
ss
mov
xor
subb
insb
mov
mov
push
mov
gs
mov
xchg
notb
and
cmp
sbb
out
sbb
xor
mov
mov
push
aam
pop
dec
push
ret
add
outsl
icebp
sub
lahf
sbbb
inc
jno
loop
xchg
pop
pop
cmp
cltd
imul
cmpl
cli
test
cmp
test
inc
xchg
add
inc
pusha
addr16
xor
fnstenv
mov
pop
rolb
inc
add
lods
xchg
mov
mov
ljmp
add
mov
movsb
inc
xor
push
mov
test
jb
jns
cmc
cmp
mov
out
jg
jo
or
les
cmpsb
out
push
sarl
aas
fnstcw
leave
xchg
sub
dec
test
in
adc
jg
inc
arpl
fsubs
sub
stos
ds
fbld
test
jnp
cli
xchg
mov
adc
mov
aas
sub
imul
mov
cmpsl
loope
in
pop
pop
mov
adc
rorb
push
fchs
cmp
imul
add
and
das
push
adc
pop
jp
push
inc
cmc
int3
sbb
stc
test
dec
xor
lea
ja
clc
movsb
pusha
sbb
daa
adc
fcoms
dec
mov
jmp
cli
mov
push
jbe
push
cmpsl
adc
push
cmp
or
rorb
pop
pop
cmc
aaa
testb
and
iret
xor
cltd
xchg
out
mov
xchg
pop
push
insb
inc
mov
jae
cmp
xchg
push
stc
ss
bound
popa
in
cmp
lea
pop
and
lods
adc
mov
or
mov
add
icebp
dec
mov
xor
jle
mov
int
or
fdivrs
hlt
cmpsb
test
enter
push
push
cmpsb
mov
inc
push
lock
dec
mov
stc
cltd
mov
xchg
sarb
mov
push
repnz
loope
jnp
fsubs
inc
mov
ret
jle
mov
call
js
push
pop
imul
push
and
xor
sbb
cmpsl
int
not
cli
leave
xor
pop
cmp
mov
loope
adc
lret
mov
sbb
loop
in
outsl
inc
rolb
sbb
shll
std
fdivp
inc
das
adc
adc
mov
ror
dec
shl
xrelease
xchg
cmp
adcl
cwtl
dec
fsubrs
stc
pop
fisubs
jo
mov
adc
jp
into
cs
ja
inc
mov
inc
icebp
sub
jno
stos
ret
popf
movsb
xchg
or
inc
dec
sbb
xchg
push
mov
fwait
mov
sti
in
and
testb
adc
inc
fs
aas
cmp
or
mov
les
fidivrs
mov
sbb
and
push
nop
push
jmp
mov
adc
and
inc
push
ja
testb
push
fldenv
adc
test
jnp
fisubl
call
insb
mov
push
xchg
iret
imulb
xchg
scas
js
push
inc
or
insb
stos
outsb
mov
adc
stos
jns
jo
aam
add
pop
hlt
and
gs
shlb
mov
loopne
jl
fwait
out
mov
xor
jl
jecxz
mov
adc
mov
sbb
mov
adc
push
mov
fnstcw
dec
negl
push
lea
fwait
add
call
pop
cwtl
mov
adc
jp
popf
adc
pop
adcl
xchg
ljmp
push
mov
sub
or
and
or
dec
dec
mov
xor
xorb
dec
dec
xchg
jns
adc
idivb
imul
sub
cmp
mov
jmp
cmp
sub
sahf
xlat
xchg
dec
fs
or
mov
mov
inc
into
xchg
lds
hlt
xchg
icebp
xchg
jno
sbb
rcr
popa
scas
adc
jae
lahf
ret
insb
xchg
fwait
cmpsb
mov
adc
and
push
leave
idivb
js
inc
inc
inc
sbb
lods
mov
sub
shl
or
lds
push
lods
add
mov
fdivs
adc
mov
int
mov
movsb
mov
and
add
in
and
int3
cmpl
std
lahf
bound
xor
inc
jne
inc
adc
adc
adc
mov
mov
sub
lret
xchg
loopne
cmpsl
push
jns
mov
outsb
mov
fldt
sub
mov
xchg
rcrl
push
in
push
lret
repz
lods
lods
mov
imul
inc
inc
mov
iret
into
or
adc
lds
mov
or
mov
sub
sbb
xor
out
cld
sarb
adc
lock
clc
jo
test
jbe
pushw
pop
testb
sbb
insb
inc
sbb
jge
adc
mov
test
push
pop
inc
and
mov
fstps
sbb
xchg
icebp
cmpl
inc
mov
dec
lea
insb
xor
sub
sub
pop
es
js
sbb
pop
jmp
dec
xchg
in
sub
adc
mov
mov
mov
dec
into
orl
mov
and
jl
mov
mov
pop
lea
cmp
dec
push
movsb
ficompl
das
movsb
push
xchg
or
lea
fstl
cltd
mov
and
mov
call
iret
cmp
cmc
hlt
cwtl
imul
add
and
push
das
daa
fnsave
xor
into
sub
lods
pop
mov
add
lock
jp
add
pop
sbb
mov
xor
aad
mov
fs
push
ret
stos
lods
jns
jmp
jb
lods
push
ret
fwait
mov
jb
aas
xlat
push
out
dec
xchg
dec
test
ficompl
ret
push
pusha
insl
xchg
cmp
addr16
or
imul
add
ljmp
mov
cmp
in
push
clc
ret
lret
inc
xor
clc
adc
adc
insl
gs
dec
hlt
pop
or
mov
adcb
bound
sbb
test
or
or
outsl
stos
arpl
movl
scas
xchg
push
push
lret
and
into
jl
pushf
call
inc
inc
mov
int
fstpt
out
pop
xchg
fnstcw
mov
lahf
lock
cmp
or
jbe
jbe
xchg
arpl
inc
jno
inc
nop
testb
xchg
int
int
and
test
shlb
aas
dec
push
jns
rcrb
enter
cmp
adc
ja
push
cmpsb
test
lret
xchg
jnp
outsb
mov
mov
mov
aad
pop
int3
xlat
xor
adc
js
sbb
mov
mov
js
push
adc
pop
xchg
outsb
mov
sub
ja
push
push
sbb
cmpsb
xlat
pop
xchg
imull
mov
xlat
icebp
mov
arpl
mov
test
push
dec
xor
cmp
cmp
jbe
xchg
stos
mov
push
mov
mov
pop
les
cmp
fisttpl
movsb
popf
jae
stos
loop
cmp
cmpl
mov
dec
js
dec
lcall
cmc
xchg
clc
mov
lret
pop
out
cltd
fildl
pop
jl
fcmovne
sbbl
mov
push
adc
push
push
xchg
jbe
pop
xor
loope
shll
inc
addr16
mov
mov
add
subl
dec
ss
scas
sbb
sti
mov
in
add
out
in
mov
xor
outsl
adc
xor
stc
jmp
xor
pop
adc
mov
faddp
fdiv
push
not
scas
xchg
jle
sub
cmp
clc
lds
jge
lcall
popa
orl
pop
xchg
pop
sbb
into
lret
imul
out
dec
mov
add
div
push
add
adc
sbbb
push
sub
dec
xlat
xor
out
add
cmp
movb
imul
and
adc
sub
jle
addr16
adc
jg
int3
inc
sbb
add
cltd
repz
stos
mov
pusha
inc
fsts
hlt
sahf
push
popa
insl
test
mov
cmc
dec
adc
add
or
in
or
test
cli
out
mov
lods
in
ja
lock
dec
mov
push
out
mov
stos
imul
dec
shl
mov
daa
test
sub
dec
xchg
adc
addr16
xor
adc
push
mov
test
xor
pop
sbb
sarl
or
mov
jae
mov
push
or
imul
loop
sub
mov
fsin
push
jle
pop
mov
add
cs
scas
stc
cmp
push
nop
adc
test
pop
mov
mov
imul
hlt
stc
xor
mov
out
mov
stos
cmp
jae
jle
add
repz
adc
mov
jae
bound
mov
and
rcl
and
jl
xor
inc
das
loop
pop
cmpb
or
adc
xchg
push
jp
mov
sub
mov
adc
dec
stos
inc
jg
dec
sbb
mov
adc
test
dec
aaa
mov
xchg
sti
push
jo
mov
cmpsb
ffree
mov
jno
aaa
jns
push
mov
int3
ja
mov
js
sub
pop
in
pop
repnz
mov
push
adc
sub
mov
inc
jg
pusha
pop
adc
xor
and
loope
insl
mov
add
or
add
or
enter
xor
xchg
pop
xchg
mov
ljmp
inc
add
push
shlb
lods
ja
jmp
test
inc
fstpt
xor
arpl
mov
hlt
imull
shlb
inc
xlat
cli
xlat
subl
aaa
jmp
push
addr16
idivb
or
out
push
iret
scas
and
dec
data16
icebp
dec
cmp
cmp
ljmp
mov
sti
pop
xor
xchg
daa
mov
in
fwait
pop
imull
xor
xor
push
or
dec
loope
daa
mov
cltd
ret
push
icebp
cmp
pop
push
addr16
scas
scas
mov
push
divb
rolb
mov
mov
xor
decl
out
mov
ljmp
xor
xchg
add
in
popf
int
and
lea
add
add
jno
sbbb
stos
psraw
aad
dec
lds
add
imul
xchg
rcrl
test
sbb
xor
cwtl
into
cmp
or
ja
stos
aas
mov
sub
cmp
pop
pop
fnstenv
bound
jmp
fildl
sub
test
and
das
lds
outsl
andb
inc
das
xor
loope
or
jnp
fisttps
add
xor
arpl
lcall
mov
and
mov
std
pop
mov
in
push
lds
pop
dec
je
mov
xor
jb
and
test
pop
add
jge
mov
sub
mov
xor
add
xchg
jmp
pop
pop
mov
test
flds
shll
jbe
pop
or
xchg
mov
inc
sub
xchg
push
mov
jno
sahf
ljmp
movntps
popa
mov
mov
dec
das
scas
jecxz
fdiv
push
and
and
cmpsb
and
movsb
mov
cmp
jne
mov
out
mov
data16
mov
and
fs
jnp
adc
stc
or
mov
mov
dec
nop
pop
ds
lcall
pusha
mov
mov
dec
jle
mov
cli
pop
xchg
adc
xor
loopne
sbb
divb
lods
add
stos
sarl
xor
xchg
scas
mov
out
mov
rcpps
aad
adc
sub
add
jg
fcoml
pop
xchg
xchg
adc
loop
dec
adc
icebp
pop
add
cs
pop
lds
jbe
sub
cwtl
fcoms
jmp
add
fs
mov
imul
add
mov
jp
fbld
ljmp
push
outsb
out
cmp
out
inc
movaps
fisttpl
lea
and
xchg
push
pop
cld
xchg
cmpsl
adc
es
movsl
mov
mov
shll
jl
test
fcom
mov
push
jo
xchg
mov
aaa
in
xchg
out
fldt
push
addr16
mov
fstps
les
cmp
rorl
repz
xchg
fnstsw
sahf
mov
jno
push
add
bndldx
xchg
inc
xor
es
nop
lods
fs
jbe
xorl
push
mov
push
das
and
mov
jecxz
jmp
inc
mov
push
mov
ds
mov
aas
mov
ss
test
jmp
mov
cmp
testl
push
adc
and
push
mov
push
aaa
and
mov
mov
mov
push
jbe
xor
repz
mov
dec
std
dec
cli
xchg
leave
inc
fbstp
inc
cmp
ret
or
mov
jae
fisttps
xchg
adc
add
xor
jge
and
je
push
mov
push
jecxz
les
jo
mov
fucomip
mov
sbbl
dec
aam
bound
shr
cmp
jl
add
sbbl
and
fistl
push
dec
daa
cmp
jne
int
jne
lret
cmp
jge
sbb
mov
insb
sbb
movsl
movsl
push
es
ljmp
fmuls
and
mov
mov
fptan
into
cmp
inc
pop
dec
xor
nop
lods
movsb
insb
out
out
aas
outsb
pop
mov
out
add
push
jne
stos
jl
adc
fldenv
mov
rolb
inc
inc
shll
or
jnp
xchg
jg
push
ret
pop
pop
add
sbb
js
push
jns
mov
inc
dec
mov
int3
pop
jno
je
pop
dec
fsubs
data16
std
sub
jecxz
sahf
sti
dec
out
jo
insl
insb
push
insb
arpl
jmp
stc
je
lods
add
push
addr16
add
sbbb
add
stc
and
add
push
gs
incl
sti
xchg
and
in
xchg
mov
xchg
inc
pop
or
scas
xchg
test
mov
pop
int
dec
dec
in
xor
mov
outsl
sahf
mov
mov
js
cmp
adc
aam
jmp
push
loop
xchg
ja
loopne
push
leave
jne
xchg
pop
jnp
pushf
pop
out
jnp
fdivrs
addr16
mov
orl
test
push
cs
insb
adc
into
xchg
inc
jle
and
cwtl
fwait
repnz
xor
lods
pop
es
mov
arpl
dec
xchg
mov
mov
hlt
and
mov
jo
arpl
pop
mov
aam
ss
jecxz
add
xlat
call
jge
insb
pop
inc
hlt
jp
push
enter
mov
and
xchg
pop
sahf
je
jb
int
sbbb
sub
and
mov
das
or
cmp
shll
test
xchg
push
jmp
es
cmpsb
sub
add
neg
fs
xchg
pop
dec
pusha
sbb
mov
notl
stc
pop
pop
jp
imul
out
xchg
lcall
data16
clc
pop
lods
sbb
mov
pop
scas
xor
dec
loope
cmp
xor
cmp
mov
pop
and
dec
mov
mov
insb
repnz
jbe
mov
cli
pop
ss
in
xlat
inc
jecxz
push
adc
pop
es
mov
xchg
add
push
clc
data16
fisubrl
mov
test
stos
cmp
dec
mov
hlt
cltd
jge
rcl
fwait
jno
rcrb
add
bound
pop
mov
es
pusha
push
lods
mov
cmp
mov
loop
mov
sub
mov
cld
cmp
shlb
hlt
push
cmpsb
ret
inc
mov
xor
mov
hlt
cmpsb
lret
sbb
fists
adc
xchg
fcomp
adc
mov
fwait
add
jl
aam
ret
testl
mov
push
test
lea
fcmovne
nop
adc
imul
pop
lcall
icebp
ret
jne
enter
pop
pop
mov
and
fcoml
es
jle
inc
sahf
add
ja
or
jmp
sbb
add
mov
cmp
lahf
pop
xchg
sbb
push
mov
imul
into
dec
sbb
pop
sbb
cmp
jecxz
xchg
mov
pop
ja
jb
mov
mov
ret
xchg
mov
imul
out
dec
add
ficoml
mov
pop
cwtl
loopne
mov
cs
hlt
lret
imul
enter
pop
loop
bnd
lcall
fdivr
mov
into
shr
in
push
add
into
lods
fmull
pop
scas
inc
sub
movsl
mov
popf
mov
dec
and
lahf
sti
shlb
inc
xor
push
mov
lods
cmpsl
jb
inc
sub
pop
insl
testl
push
adc
lods
adc
mov
arpl
cmc
ss
push
les
and
mov
mov
fldl
dec
and
or
push
lds
nop
ret
mov
sti
push
popa
push
iret
add
ret
or
shlb
jmp
in
call
je
popf
mov
push
movsb
lret
add
adc
int3
add
adc
sbbb
inc
pop
or
les
mov
stc
adc
test
push
lds
insb
icebp
mov
jnp
fsubs
adc
xchg
xchg
sub
js
icebp
fiadds
in
add
imul
ret
cmp
pop
mov
bnd
xor
shlb
dec
outsb
les
testl
stos
xchg
test
js
xchg
xchg
dec
inc
fidivrs
dec
sub
in
aas
mov
add
lds
xor
orb
push
dec
ret
xchg
aam
insl
lret
pop
and
fwait
mov
ret
dec
les
push
das
lret
add
filds
adc
push
lret
fadds
xor
dec
push
adc
imul
and
push
rcrl
mov
dec
pushf
int
push
lahf
rcll
jmp
in
rorb
mov
jp
inc
mov
adc
lcall
pusha
stos
dec
fcoml
mov
xchg
or
ret
pusha
inc
cmpsb
jo
call
inc
into
mov
out
loope
popf
xor
xor
rorb
or
leave
dec
pop
cmp
push
aas
push
dec
or
dec
es
mov
push
dec
xor
mov
les
popf
ficoml
sub
xchg
and
jl
notb
sbb
mov
mov
sbb
push
es
mov
inc
insl
jg
or
xchg
mov
fists
leave
jg
dec
shlb
sbb
inc
leave
popa
xchg
push
push
cmpsb
mov
ljmp
pop
cs
add
bound
add
jmp
mov
jmp
in
pop
dec
lea
push
mov
dec
mov
lcall
mov
das
das
or
popf
mov
lcall
sbb
roll
xchg
cwtl
push
icebp
shl
xchg
popf
cmp
inc
aad
out
xchg
xor
out
mov
cmpsb
in
adc
into
rorl
cmp
mov
xchg
pop
dec
mov
sbb
mov
movl
xchg
fwait
xlat
movsb
sbb
inc
xchg
repz
lods
inc
mov
ljmp
std
jne
shl
cmpsl
add
or
fs
mul
inc
xchg
jne
test
jmp
push
mov
pop
inc
inc
push
rcr
sbb
mov
adc
mov
xchg
call
mov
imul
sub
and
jmpw
hlt
pop
mov
stc
test
adc
inc
push
ljmp
sub
sarb
add
inc
inc
lret
or
jle
or
mov
nop
test
test
lock
rcll
lock
out
negb
add
pop
adc
mov
outsl
gs
inc
lcall
mov
lea
aad
jecxz
push
aaa
aas
mov
mov
enter
push
sbb
ja
lret
push
cmp
or
les
or
adc
sbbb
clc
arpl
or
cmpsb
push
dec
insb
sub
outsl
stos
aaa
outsb
bswap
sbb
cwtl
rorl
mov
cmc
sub
cmp
arpl
ret
add
inc
push
dec
test
xlat
adc
jmp
test
fstpl
cwtl
mov
cmpsl
sbb
xchg
rol
jmp
popa
rol
das
fsubrl
mov
mov
mov
mov
push
loopne
testb
dec
popa
or
jmp
sti
dec
sub
ja
int3
cmpsl
and
jecxz
sbb
shlb
mov
add
adc
or
cmpsb
cmp
ret
mov
dec
xabort
inc
jno
jge
xchg
insb
lods
adc
or
fisttps
pop
dec
enter
sbb
xor
mov
lcall
mov
imul
nop
xor
mov
loope
sub
mov
scas
cmp
cmp
or
jno
clc
rcl
sub
xor
xchg
sahf
incb
adc
cmpsb
addr16
xlat
push
in
mov
shl
add
dec
mov
adc
sub
jno
lret
xchg
addr16
xchg
dec
mov
idiv
inc
dec
push
mov
out
ret
popf
sub
in
cmpsl
cmp
mov
out
inc
cli
dec
data16
jp
cmp
pop
and
clc
lret
aas
inc
and
mov
out
jo
jns
aam
js
pop
and
dec
push
js
xor
lods
cwtl
mov
fnstcw
cmc
loope
push
pushf
push
int
xchg
adc
push
arpl
fcmovbe
ret
jle
outsb
adc
or
push
cli
sahf
and
push
jmp
cmpsl
xchg
xor
ljmp
scas
cmp
sahf
xor
inc
gs
jmp
xor
notb
push
dec
lock
push
into
mov
push
fisubl
dec
pop
in
push
push
cli
pop
stc
ds
lcall
pusha
pop
jp
adc
pop
js
adc
in
ljmp
add
test
cli
rcr
loope
or
cmp
fstpl
jne
xchg
jnp
dec
int
push
daa
sarl
imul
std
es
xlat
mov
repnz
adcl
shl
or
lea
dec
iret
adc
int3
test
and
int
xorb
lea
testl
cwtl
dec
sub
and
jl,pn
ja
mov
xchg
jns
sbb
je
shrb
lods
push
leave
lcall
in
imul
inc
aam
inc
test
fs
mov
sub
lods
es
jp
or
mov
notb
inc
fs
stc
ja
push
lock
scas
adc
mov
jl
shlb
pop
out
clc
and
adc
or
insb
dec
jl
add
inc
cli
mov
mov
mov
test
mov
mov
cmp
xor
incl
lahf
mov
jp
daa
lods
adc
and
cmpsb
test
in
adc
ds
ds
fwait
adc
pop
sbb
push
lds
mov
jo
adc
testl
and
out
clc
cs
lea
inc
lock
push
out
xor
cmp
test
xchg
pop
aas
fidivrl
pop
xorl
int
cltd
out
inc
pusha
in
xor
dec
arpl
fadds
sub
push
stos
mov
mov
test
jge
daa
xor
xchg
sti
mov
dec
jb
stos
sbb
xchg
in
cwtl
xchg
stc
add
xchg
push
scas
sbb
movsb
pusha
xor
test
aas
xor
sub
lds
shll
lock
xor
inc
pop
lods
sarb
xchg
mov
or
xor
cli
cwtl
ljmp
in
enter
and
int
pop
pusha
mov
xchg
loop
adc
pop
sbb
insb
in
lret
inc
sarl
je
mov
xchg
sbb
jmp
ror
sbb
test
pushf
xchg
adc
out
test
sbbb
push
jecxz
in
dec
xchg
js
inc
jl
mov
jg
lgs
or
pop
push
imul
ficomps
stos
mov
pop
cmp
push
mov
arpl
or
mov
stc
push
call
dec
test
jno
out
push
addl
popa
push
fucomp
add
mov
jge
sub
push
push
pop
mov
push
mov
push
mov
imul
addr16
cmp
pop
xchg
sub
or
inc
daa
xlat
xor
or
xchg
push
fdivr
lods
xchg
icebp
aad
les
or
sahf
xor
popa
aaa
adc
push
mov
or
fstpt
cwtl
insb
pop
add
xchg
mull
xchg
or
ds
sub
in
movsb
cmp
cltd
in
pop
loope
ret
cwtl
out
std
aad
mov
mov
shlb
push
fcompl
testl
cld
jns
adc
or
cmp
ljmp
cmpl
xchg
cwtl
aad
push
dec
xor
sbb
out
cwtl
je
call
xchg
fsubrp
add
lds
insl
inc
and
push
repnz
xchg
jecxz
jl
dec
cmp
cmpsl
push
mov
cmp
cmc
cli
push
idivb
pop
pop
lods
lahf
sbb
mov
xor
and
adc
lret
xchg
sub
adc
adc
inc
xor
lahf
mov
xchg
ljmp
movsl
movsb
jbe
add
sbb
xchg
cld
push
aas
sub
mov
sbb
aam
xchg
idiv
hlt
nop
cli
xchg
cmp
iret
mov
sti
xchg
ljmp
mov
js
out
scas
mov
dec
pushf
push
lret
jg
xchg
dec
cwtl
fs
jne
add
xor
movhps
rolb
push
scas
mov
mov
subl
daa
pop
mov
sub
adc
inc
shll
stos
push
add
and
jbe
xor
clc
push
stos
out
loop
ret
dec
xor
adc
inc
loope
pop
inc
add
fcomip
xor
hlt
jns
loope
mov
mov
mov
push
and
dec
pop
cs
lcall
inc
mov
push
rcr
in
pop
jno
inc
xchg
enter
xor
push
ret
push
push
dec
mov
outsb
pop
dec
xchg
sbb
fxch
xor
leave
sub
out
cmp
xadd
dec
lahf
jnp
xorb
loope
ljmp
push
cltd
pop
arpl
push
daa
dec
dec
in
out
add
dec
in
in
mov
inc
pop
mov
mov
rorb
cmpl
and
stc
gs
cs
add
shll
int3
adc
mov
cmp
popa
mov
out
pavgw
fdivrs
inc
xchg
mov
cli
hlt
xchg
xchg
sbb
popa
jmp
ds
jo
mov
or
dec
aam
xchg
add
sbb
loopne
loop
xchg
aaa
lret
xor
xor
in
xor
pop
lea
and
add
imul
and
adc
icebp
addr16
and
sbb
rol
loopne
test
popf
in
outsl
inc
jb
jg
imul
sar
mov
add
mov
mov
jge
dec
inc
xorb
dec
lahf
dec
rolb
mov
fisttps
push
mov
mov
dec
fldl
jle
loopne
call
sbb
pop
fsubrl
push
icebp
dec
stos
ds
or
jbe
fs
xorl
mov
inc
or
pop
or
or
scas
dec
xor
arpl
pop
push
adc
int
pop
jecxz
add
ljmp
fistps
loopne
xor
xlat
es
shll
orl
jae
fs
jne
fnstcw
les
sub
mov
cmp
push
insb
dec
xchg
hlt
and
bound
fisubrs
repnz
mov
and
ret
push
arpl
test
and
testl
mov
scas
push
hlt
leave
inc
out
or
sub
sbbb
lock
add
repnz
jbe
ret
adc
sbb
std
push
mov
jp
imul
hlt
lods
test
fsubr
mov
in
sbb
inc
jnp
das
pushf
add
cmovbe
int3
ljmp
or
cs
adc
mov
dec
or
or
adc
pop
in
std
pop
lock
add
movsl
mov
sbb
out
fisttpl
push
int3
xchg
inc
ret
insb
mov
adc
ja
aas
mov
cmpsl
xor
test
imul
sub
jmp
jo
mov
xchg
push
mov
int3
and
insb
cmp
imul
mov
outsl
inc
sub
out
mov
push
mov
sbb
mov
mov
f2xm1
jns
in
dec
lea
cmp
fs
das
jl
shlb
scas
je
lods
xchg
mov
xor
movsl
enter
push
lds
pushf
fildl
cld
sub
inc
data16
push
leave
inc
je
repnz
negb
sub
ja
mov
cmpsl
fildll
sub
imul
or
in
hlt
aad
leave
aad
test
jle
lea
dec
enter
mov
xchg
mov
pop
sub
loopne
sarl
aam
addr16
out
mov
add
push
xor
js
icebp
shr
sbb
ret
mov
and
loope
add
xchg
lods
xor
js
mov
push
popa
xor
adc
push
sub
stos
inc
pop
pop
xor
pop
mov
add
sbb
pop
lock
repnz
aas
add
in
mov
outsl
jmp
test
dec
sub
mov
cld
bnd
outsl
rorl
aad
pop
cwtl
add
sbb
fs
lea
addr16
popf
leave
aaa
cmp
stc
aas
pop
imul
loop
cmp
push
out
mov
mov
gs
jmp
call
ret
std
adc
cs
push
cmp
add
inc
imul
aad
jnp
cmpsb
test
cmp
push
int
xchg
mov
inc
das
scas
push
mov
push
push
mov
push
pushf
sub
dec
push
fldenv
pop
jp
xchg
push
push
and
or
fcomps
lret
mov
adc
lret
adc
das
push
fwait
inc
adc
xchg
insl
loope
jle
fsubrs
add
movsb
pop
lds
xor
xor
popf
sub
adc
ret
rol
push
aam
adc
add
pop
sbb
jp,pn
lods
sbb
mov
inc
add
dec
pop
pop
xor
adc
add
pop
fs
imul
rorb
xor
lods
lds
test
xchg
and
dec
lods
jmp
mov
out
aas
ja
cmpsl
jno
enter
mov
lahf
scas
pop
jo
movsb
add
sub
daa
shl
dec
mov
loopne
push
xchg
test
push
stc
mov
pop
lods
mov
inc
cwtl
ljmp
bound
imul
cmp
scas
mov
push
ja
inc
xchg
sbb
inc
fdivs
push
test
inc
mov
mov
xchg
mov
loop
pop
sbb
cmp
xor
mov
repnz
inc
aad
in
add
lcall
movsl
add
or
add
or
loope
ror
xor
sub
roll
mov
sub
rorb
fwait
mov
xor
jp
icebp
cmp
jno
bound
pop
nop
push
fisttpll
stc
test
or
call
or
popa
sub
push
mov
incl
pop
cmpsb
push
gs
pop
adcl
push
xchg
nop
bound
iret
adc
sbb
scas
add
loop
sbb
in
adc
test
push
mov
add
mov
and
sbb
inc
mov
stos
mov
inc
push
fcom
fwait
add
movsl
in
push
in
cwtl
xorb
mov
xchg
pop
cli
fldt
sahf
push
inc
out
dec
jns
xor
mov
ja
mov
push
repnz
pop
cmc
sub
fcmovnbe
sub
icebp
test
jae
rcll
sahf
adc
xchg
bound
popf
cmc
pop
or
xchg
pop
mov
mov
cmp
dec
dec
daa
jg
test
ret
orb
ja
sbb
or
andb
xchg
ret
stos
mov
popf
add
arpl
push
lret
ja
push
mov
fldcw
imul
push
inc
pusha
imul
mov
mov
popa
je
ja
fxch
and
sub
mov
jg
cmp
cs
out
sbb
push
imul
div
lret
xchg
inc
mov
call
shlb
andb
jb
rorb
ret
aam
xor
push
aad
out
sbb
cmpsl
xor
mov
mov
adc
inc
imul
pop
fcoml
int
call
movsl
enter
sub
subb
fwait
cmpsb
mov
aad
enter
fisttps
scas
mov
add
sub
pop
inc
cmpsb
jg
daa
and
clc
in
lods
rcl
jmp
out
enter
mov
xor
adc
mov
lods
adc
imul
addl
shrl
std
mov
pop
push
fiadds
pushf
xor
ja
xor
fmull
fstpt
mov
push
inc
adc
jo,pn
loopne
ljmp
push
lahf
in
push
lcall
repz
pop
movsl
lods
push
add
inc
and
lret
pop
push
adc
sbb
inc
fnstenv
xchg
cli
xlat
sbb
lret
lret
and
xor
xor
xchg
in
mov
aas
mov
fimuls
jle
in
sub
iret
adc
sti
sub
faddl
lret
fcmove
outsb
subb
jmp
orl
popf
out
es
fldenv
shll
mov
stos
jg
scas
add
mov
or
clc
cltd
cmpsl
in
jl
sub
pop
xorb
adc
jl
sbb
jb
loop
push
hlt
add
jmp
jae
mov
insb
stos
cs
std
gs
jg
pop
repnz
roll
daa
divb
fimull
repz
push
dec
push
sub
ss
daa
mov
xchg
pop
shl
iret
xchg
mov
mov
cmp
jno
lahf
bound
xchg
dec
jmp
filds
ljmp
mov
push
add
test
test
sub
push
push
in
xor
jne
and
icebp
scas
rclb
push
sbb
mov
std
mov
mov
ret
loop
dec
pop
jnp
jno
add
cmp
cltd
fs
mov
leave
inc
pcmpgtd
cli
mov
sub
outsb
push
push
dec
cmp
int
cltd
xchg
cs
jno
pop
lods
mov
outsb
testb
push
popa
mov
lock
inc
cld
push
dec
test
push
inc
aas
sti
xchg
or
push
test
je
and
sub
sub
dec
jl
aaa
push
imulb
sub
mov
push
and
inc
in
mov
mov
dec
mov
stc
rep
pop
pop
push
mov
js
xchg
cmp
adc
test
movsl
mov
jbe
das
pop
dec
sbb
cmpsb
or
pop
repnz
add
mov
dec
lods
jb
sub
mov
mov
fcomps
xchg
js
bnd
mov
adc
pusha
mov
pop
scas
dec
shrb
push
shll
test
jp
fisubrl
ret
imulb
pop
cmp
into
xor
xor
sbb
add
xor
mov
mov
cmp
sub
xor
fistpl
adc
add
sahf
cmp
or
into
pushf
fcoml
or
pop
cmp
into
add
xor
or
insb
fbld
test
scas
add
int3
xchg
sbb
push
lret
ja
mov
cmp
jg
add
sbb
ror
sub
imul
ljmp
cmp
xor
mov
ljmp
mov
adc
pop
loop
pop
lret
dec
push
push
sub
dec
je
iret
lret
dec
cmp
cmp
inc
or
movsl
jl
or
bound
bound
sub
fistps
and
xlat
push
adc
lcall
cmpsl
xor
xor
negb
jecxz
fs
adc
or
inc
sub
push
aas
lcall
push
pmaxub
jno
xor
ja
movsl
iret
outsb
into
ja
cmpsb
aas
adc
ss
mov
push
pushf
push
mov
mov
aaa
mov
jecxz
cmc
sbb
jo
icebp
addr16
cmpsb
fists
cmp
movsl
dec
mov
and
gs
std
cmc
sbb
jmp
mov
lock
push
jmp
push
sub
push
pop
cmp
xchg
jo
out
das
in
sbb
xchg
dec
cli
push
iret
cmc
sbb
xor
adc
sbb
mov
inc
iret
cmp
jl
lcall
inc
mov
shlb
std
pop
in
xchg
mov
loopne
cmc
pop
jecxz
sub
dec
repz
xchg
adc
dec
xor
pop
je
add
or
jle
shlb
bound
ja
out
cmpsb
and
aam
pop
ja
inc
xchg
xchg
repz
jle
push
enter
sarb
pop
inc
pop
cmp
xor
mov
xor
and
pop
mov
insb
leave
inc
inc
out
lods
ret
jne
fisubl
fimull
mov
dec
jmp
repnz
jbe
jae
rcrl
imul
dec
loop
jno
cmp
mov
or
pop
adc
xor
ja
push
stos
push
jmp
xlat
dec
mov
test
lret
push
add
xchg
adc
or
inc
loope
in
sbb
out
sub
rorl
jns
fldl
dec
jmp
dec
add
pop
stos
xchg
adc
addb
std
xchg
icebp
int3
dec
lret
xchg
xor
movb
aad
sbb
orb
cmp
out
ljmp
mov
sbb
jge
cmp
dec
pushl
xchg
cwtl
std
mov
repnz
sub
mov
mov
or
ljmp
out
pop
mov
sub
push
mov
jb
jp
pop
or
xchg
pop
in
outsl
push
je
xor
lods
sbb
fdivs
jmp
outsb
pop
cli
mov
jb
rcrl
pusha
test
scas
pusha
sbb
cmpsb
in
push
mov
lock
popa
mov
das
arpl
or
dec
movsb
stc
jne
dec
shrl
inc
movsl
and
jb
or
cmp
imul
jge
mov
ja
pusha
and
xor
fiaddl
sbb
pop
lds
mov
or
stos
jg
xor
or
in
sbb
pop
pop
jle
test
and
inc
sub
repnz
jg
imul
fimuls
idivb
dec
push
jecxz
in
je
pop
cmp
dec
in
dec
arpl
mov
dec
adc
cli
js
mov
xchg
enter
adc
xchg
fimull
sub
mov
les
jmp
sub
inc
inc
xchg
mov
adc
inc
xor
push
les
mov
sti
jb
and
pop
fcoml
shr
jb
rcll
and
leave
pushf
adc
xor
call
repz
repnz
ds
sbb
fstpt
cmp
xchg
clc
lahf
mov
cmpsl
jmp
pop
adcl
in
lcall
mov
clc
xor
sbb
push
scas
xor
insl
sub
push
jl
mov
lods
int
ror
lea
mov
or
call
je
mov
jnp
pop
gs
iret
outsb
pushf
push
aad
sbb
mov
dec
inc
loop
arpl
dec
xadd
push
test
jae
rorb
scas
cwtl
mov
cwtl
stos
leave
add
hlt
push
pusha
mov
jb
mov
cmpsl
mov
xor
inc
mov
daa
cmp
rcrl
icebp
test
js
mov
jecxz
mov
fs
fildll
mov
cmc
sbb
cmp
hlt
push
stos
xchg
out
dec
pop
push
insl
cwtl
pop
or
movb
jle
dec
jle
cmpsb
xchg
bound
or
xor
icebp
dec
mov
imul
xlat
imul
rcrb
push
movsb
lahf
xor
mov
and
popf
cmp
add
xor
pop
push
jmp
mov
loop
fisubrs
stos
in
fisubrs
dec
jecxz
jae
inc
decb
inc
or
xor
cmpsl
jae
xchg
cld
mov
aas
jns
sti
lods
out
xor
push
decb
aam
stos
jns
imul
das
fld
shlb
cmp
mov
mov
or
dec
pusha
or
out
inc
cmpsb
inc
jle
out
jg
pop
leave
shrb
xorb
lods
fidivs
mov
pop
add
xor
mov
dec
aaa
mov
stos
int3
bound
leave
sbb
mov
mov
push
push
movsl
adc
sub
and
test
sbb
inc
jo
mov
out
out
jae
pop
inc
sbb
shrl
leave
jl
ss
clc
repnz
xchg
dec
sbb
adc
negb
das
lcall
loope
test
loop
push
cwtl
fwait
push
fists
add
icebp
sub
jmp
loop
xorl
sub
mov
pop
push
inc
popf
imul
push
pop
mov
adc
jmp
mov
push
imul
call
mov
sbb
jge
movsl
ret
sbb
push
pop
xchg
sub
pop
je
mov
pop
clc
inc
inc
jno
inc
sbb
add
sub
insb
sti
mov
ret
stos
aas
xchg
lcall
cmpsl
sub
jne
lods
xor
xchg
xor
jnp
roll
xor
pop
in
arpl
xchg
or
and
dec
bound
in
push
stc
dec
xchg
lret
jne
add
fimuls
add
mov
sbb
insl
inc
mov
data16
insl
adc
push
xor
cmpsl
aaa
sub
push
scas
xor
in
shr
mov
outsl
outsb
lds
adc
cmp
or
push
cltd
pop
pop
aas
mov
adc
and
adc
cli
in
ss
call
mov
mov
adc
inc
aad
inc
repnz
dec
mov
outsb
daa
cld
jl
cmpsl
stos
mov
lret
mov
fsubrl
xchg
adc
loopne
test
daa
mov
mov
iret
or
jg
fldt
xorb
sbb
iret
pop
stc
sub
push
push
mov
js
scas
rcr
stos
adc
popf
shrb
push
push
loopne
movsb
in
and
pop
pop
mov
pop
in
movsl
inc
inc
xor
cmc
aaa
mov
inc
call
fwait
lret
and
inc
lds
inc
mov
sarl
daa
push
push
adc
ret
test
mov
aaa
mov
lods
fdivs
ss
loope
sub
insl
pop
sub
dec
push
pop
xor
movsb
pop
aad
sahf
jb
inc
adc
mov
cmpb
xchg
dec
mov
ss
cmp
cmpsl
pop
nop
and
pop
jo
xchg
mov
mov
xchg
idiv
popa
mov
sub
je
mov
lods
adc
test
ss
mov
add
mov
lods
sub
pop
xchg
jnp
fs
cmp
mov
xchg
fsubs
push
adc
mov
mov
pop
dec
lds
pop
cmp
and
push
out
or
xor
dec
xchg
repnz
in
xlat
fdivl
test
fldt
testl
xchg
adc
in
enter
push
xor
dec
or
fisubrl
out
add
cmp
cmpsb
aas
pop
loopne
ret
xor
ljmp
push
sahf
pop
in
cltd
ret
xchg
add
push
pushf
adcb
lds
inc
jecxz
cmpsl
sti
mov
jl
stos
loop
idivl
sub
popf
mov
push
or
in
movsb
xchg
sbb
aam
push
jo
out
or
clc
xor
mov
mov
add
mov
lods
out
mov
add
bound
loop
or
popf
or
popa
sub
loopne
sbb
inc
pop
sahf
and
inc
cmc
aam
pushf
data16
cmp
and
push
lock
inc
mov
pop
jmp
jp
sarb
cmp
das
and
jl
cmp
jg
add
push
sub
adc
mov
push
pop
and
or
insl
mov
or
xchg
lods
dec
add
jnp
mov
fsubs
xor
cmc
stos
ljmp
in
movsb
xlat
xorb
pusha
ds
xchg
pop
stc
aam
mov
mov
xchg
les
into
sti
cmc
fisttpll
cmp
inc
cltd
sub
push
int
xor
mov
loope
icebp
inc
mov
test
insl
sbb
xor
xorb
call
pop
lahf
fildll
fisttpll
movsb
rorb
ljmp
push
mov
jle
push
add
pushf
dec
aad
adc
dec
xchg
xor
jns
mov
jle
dec
mov
pop
insb
pusha
add
lods
adc
or
fistpll
js
mov
ret
mov
cmp
mov
jne
sbb
push
or
into
clc
out
mov
xor
jb
push
insl
adc
sbb
mov
dec
xchg
shr
in
negl
incb
mov
divb
cld
ljmp
mov
mov
push
sub
aam
dec
pop
andl
mov
or
pop
dec
pop
in
cmc
aad
pop
enter
lret
and
push
lahf
pop
adc
jns
stos
mov
ljmp
push
rcr
loope
fwait
add
and
stos
nop
jecxz
xchg
enter
xchg
cli
sub
xchg
push
mov
fistpll
sbb
and
in
cmp
inc
ss
add
cmp
std
pop
push
or
sub
jo
insl
clc
push
sub
imull
jo
insb
sub
stos
lahf
shr
xchg
mov
xchg
mov
pusha
jb
inc
sub
inc
rcl
rolb
aad
rcrb
daa
xchg
xchg
adc
icebp
aam
sar
enter
add
pop
adc
jmp
push
ja
mov
mov
loopne
jmp
aam
inc
repz
xchg
mov
push
mov
jge
and
and
adc
cmp
inc
sub
fwait
cwtl
mov
in
pop
mov
adc
stos
ret
sbb
sbb
inc
and
cld
jne
push
xor
jge
xchg
aad
and
sub
ds
mov
lret
fcomip
mov
xor
aam
mov
div
jp
test
cs
pop
sub
xchg
imul
arpl
xor
psubd
xchg
or
mov
cmp
xchg
scas
pop
or
mov
push
jb
sti
out
and
push
and
and
mov
movsb
cmp
inc
xchg
sub
fsubl
mov
jp
mov
push
pusha
rol
das
jno
mov
std
outsl
leave
lcall
push
jno
loopne
pop
sbb
rolb
dec
jg
sub
addl
movsb
jno
test
xchg
call
cmp
jns
xchg
lods
gs
cmpsb
jecxz
aad
pop
sub
sub
mov
sbb
sub
add
jb
cmpsl
dec
push
push
nop
dec
mov
fs
jp
dec
movsb
bound
cmp
out
sbb
aas
add
leave
in
clc
xor
xchg
roll
sti
mov
jmp
ret
mov
xor
xchg
sub
mov
scas
mov
jae
sub
pop
xchg
or
sti
jns
xchg
add
sbb
out
dec
xor
or
sub
sbb
sub
pop
addb
xor
jo
xchg
push
rolb
sub
mov
stc
xchg
or
sub
dec
and
call
nop
jbe
jo
sarl
mov
and
and
inc
jmp
add
jmp
fstps
sahf
pushf
jmp
mov
in
out
dec
and
push
fwait
cli
mov
jl
and
xchg
subb
mov
mov
add
repz
pop
std
imul
sub
jle
xor
mov
mov
jne
je
in
pusha
sub
mov
lods
sbb
pop
test
pop
inc
mov
aad
lea
mov
cwtl
hlt
cmp
jnp
in
xchg
stos
insb
sbb
in
fldcw
cmpsb
jnp
into
mov
fucomp
jecxz
mov
imul
dec
jg
insb
inc
gs
add
icebp
sarl
mov
fbld
jae
jne
jo
xchg
loope
push
jo
loop
andb
ret
jge
or
not
cltd
mov
scas
mov
mov
adc
cmp
push
mov
cmpsl
xor
fisttps
leave
pushw
mov
push
dec
ja
aas
push
pop
cli
divb
inc
or
dec
sub
sarb
gs
aam
mov
lods
mov
or
xchg
daa
mov
addb
xchg
stc
xor
lods
mov
int3
shll
or
and
sub
push
xor
mov
sbb
hlt
dec
xor
leave
call
stc
fs
out
pop
fmul
inc
lods
adc
mov
cmp
mov
inc
in
jge
and
inc
adc
xchg
cmp
sti
lcall
cmpsl
lret
lods
xchg
aad
addl
lret
mov
cs
xchg
jmp
loopne
pop
add
ljmp
scas
popf
lods
mov
dec
in
daa
inc
scas
popf
jecxz
adc
sub
rorb
out
push
pop
mov
icebp
xor
fnstsw
xchg
sbb
das
inc
xor
adc
pop
movsb
cmc
push
push
fisubl
xor
pop
cld
add
subb
mov
pusha
inc
adc
lcall
sub
push
push
into
inc
cmp
stc
dec
jne
add
mov
repnz
imul
xchg
xchg
cmc
insb
cmc
in
xchg
and
pop
lods
and
out
sbb
in
and
add
mov
test
pop
mov
aaa
iret
fs
pop
xor
fcoml
sub
dec
dec
repnz
cs
test
pusha
addb
inc
and
ret
cmp
pop
pop
jge
adc
dec
mov
add
mov
movsl
mov
xchg
in
mov
and
adc
mov
test
inc
mov
lds
hlt
inc
cwtl
xchg
fwait
cmp
lcall
arpl
mov
jge
push
fs
adc
xchg
aas
outsl
dec
sbb
mov
push
pusha
xchg
shl
xchg
add
in
sub
inc
push
cmp
pop
insb
add
das
sub
cmp
cli
cmp
adc
pop
fimull
jae
sbb
push
aaa
cmpxchg
inc
dec
in
push
jmp
aam
movsl
xchg
stc
or
nop
test
jbe
adc
adc
test
out
inc
push
push
fs
aam
icebp
adc
inc
mov
inc
dec
push
adc
mov
push
mov
in
loope
mov
and
imul
popa
arpl
ljmp
ficomps
sahf
sub
mov
clc
in
int
pop
jb
notb
cmc
stos
pop
cs
or
sbbb
popf
ret
inc
push
shlb
adc
xor
lret
iret
xchg
sub
arpl
andl
cwtl
hlt
push
cmp
sbb
pop
xlat
imul
mov
sahf
sbbb
mov
and
pusha
add
mov
mov
sub
inc
out
ret
push
add
xchg
in
xor
push
dec
dec
test
std
jge
or
into
and
jg
in
pop
mov
cmpsb
jge
flds
lods
mov
js
dec
es
inc
cmp
jbe
jno
sti
mov
gs
dec
inc
out
scas
pop
mov
sub
adc
les
outsl
sbbl
mov
insl
sub
or
push
movsb
or
shlb
enter
jae
sarl
loop
popf
lds
ja
sub
xchg
aad
inc
or
pushf
push
scas
mov
push
adc
cmp
bound
subb
arpl
sti
dec
lret
cmpxchg
and
pop
insb
xor
test
sub
fwait
inc
mov
sbb
aam
inc
mov
jae
rorb
ja
push
pop
lock
data16
mov
jl
popf
pop
fdivrl
std
dec
movzwl
xchg
aas
or
lahf
les
je
sub
push
mov
ds
mov
push
sarb
subb
sbb
int3
data16
stc
push
jne
sti
cmpsb
clc
rorb
push
imull
and
jp
add
push
loope
popa
adc
add
xchg
lret
dec
xchg
pop
lcall
or
jnp
std
ss
test
outsl
iret
pop
mov
repnz
pop
push
add
cmp
ss
mov
call
jp
push
push
inc
pop
aas
and
je
lods
or
sub
shlb
into
jo
pop
sub
xor
lods
push
cld
mov
xlat
enter
mov
mov
push
jl
sarb
xchg
ss
mov
jmp
cld
cmp
out
bound
and
adc
ret
xchg
and
jl
jl
shr
cmc
jp
mov
loope
popa
daa
and
inc
mov
pop
testl
ret
lods
mov
push
jp
mov
mov
lea
mov
jns
jo
jae
in
lds
xchg
inc
lea
cltd
dec
fwait
sbb
call
sbb
lret
add
je
mov
ret
mov
jmp
xor
data16
and
xchg
lahf
dec
cmp
or
push
xchg
cmpl
enter
jecxz
imul
call
loope
mov
and
cmpsb
mov
or
hlt
push
aad
fwait
mov
pop
dec
gs
pop
sbb
cmp
fimuls
cmp
jl
int
push
lahf
pop
dec
xchg
and
std
ja
stc
xchg
mov
arpl
mov
or
ss
mov
mov
test
inc
pop
rcll
push
sub
mov
jg
cmp
xorl
pop
dec
pop
add
or
push
or
clc
xor
and
cli
fsts
outsb
aas
repz
out
push
in
fistpll
out
fistps
stc
std
xchg
je
clc
sbb
scas
iret
jge
out
dec
nop
enter
stos
sbb
sub
int
andb
lods
ss
fistpll
das
sub
cwtl
add
sub
inc
ret
sbb
push
pop
jne
cmp
jno
fiaddl
dec
aaa
mov
add
mov
outsl
test
cli
pushf
pop
shll
sti
rcrl
shll
jl
imul
xor
sbbb
sbb
jge
das
arpl
xchg
sub
jb
push
neg
add
daa
ds
xchg
mov
push
xor
mov
js
das
lret
add
aam
xor
rolb
into
push
xchg
stc
test
pop
sub
cltd
xchg
push
mov
cmpsl
jb
xchg
mov
mov
nop
jbe
xchg
das
and
jmp
lods
add
js
cld
xlat
in
mov
test
repnz
sub
scas
rorb
xchg
jecxz
insl
sbb
addr16
pop
cmc
popl
repz
fcompl
pushf
pop
sbb
xor
cmp
stos
mov
sub
mov
mov
jnp
nop
adc
cli
insb
add
push
mov
lret
adc
sbb
push
js
fcoml
jnp
adc
scas
js
out
mov
in
pop
adc
notb
rorb
arpl
js
mov
mov
sbb
lahf
mov
jno
scas
ffreep
push
mov
movsl
pop
pop
add
mulb
mov
leave
and
push
test
test
dec
cwtl
sar
pop
aaa
jae
cmp
ljmp
jns
cmpsb
sub
adc
sub
sti
arpl
push
inc
pop
jae
test
fidivl
pop
dec
xchg
mov
lcall
lret
inc
scas
std
mov
adc
mov
fdivrs
xchg
out
insl
dec
pop
jb
mov
inc
in
dec
xchg
pop
adc
add
mov
jne
pop
stc
inc
int
push
das
cmpsl
ret
mov
xlat
pop
pop
push
mov
aas
test
out
es
inc
dec
cwtl
lahf
jbe
cmpsb
mov
xchg
mov
sub
stc
out
pop
int3
jnp
adc
dec
shll
cmp
fbld
jbe
push
imul
rcrb
mov
cmp
sti
sub
arpl
dec
xchg
loope
shrl
ret
pushf
lcall
sub
lds
in
inc
orb
lcall
popa
fnstsw
out
dec
add
pop
shlb
pop
push
and
mov
cld
aas
fwait
mov
add
jnp
jmp
cmp
out
add
xchg
out
adc
mov
addb
fiaddl
mov
and
dec
xchg
xchg
stc
std
pop
mov
outsb
cltd
fnstsw
movsb
shr
xchg
push
mull
outsb
dec
pusha
sbb
arpl
sub
das
jae
inc
push
jmp
adc
xchg
repnz
test
or
out
clc
mov
sbb
psubsw
mov
out
mov
or
daa
pop
repz
clc
mov
aaa
inc
mov
pop
add
adc
cs
pop
pop
mov
pop
mov
sub
icebp
push
ss
jmp
jo
xor
dec
pop
sub
push
jne
das
mov
cmp
mov
cmp
js
push
jae
out
aas
pop
sbb
fs
cld
in
mov
cmpl
mov
fistps
mov
mov
dec
fidivs
int
push
repnz
adc
ficoms
mov
test
dec
jns
out
xchg
je
aas
cwtl
xchg
push
mov
out
bound
in
inc
sub
mov
mov
or
out
ja
inc
jmp
mov
out
lds
ds
xlat
cmpsl
xor
mov
loopne
scas
sar
int
mov
in
jp
dec
xchg
cmpsl
aad
popa
fidivrl
mov
das
gs
pop
jle
scas
sub
jle
aas
lcall
test
and
popf
movsl
aas
iret
mov
lods
sbb
cld
inc
repz
pop
mov
daa
mov
scas
mov
dec
clc
sbb
jg
adc
fisubrl
cwtl
cli
je
jecxz
adc
dec
mov
sbb
js
and
jp
push
push
loope
inc
jmp
cli
mov
arpl
adc
sub
sub
cmpsl
lret
insb
cmpsl
fcom
pop
xchg
adc
push
push
mov
sub
sarl
lcall
inc
inc
xlat
repz
inc
sub
out
add
xor
mov
lock
insl
cli
push
add
aam
lods
mov
cltd
pusha
jo
xchg
test
dec
ljmp
or
subl
daa
push
stos
pop
into
adc
xor
jmp
mov
ret
shlb
sub
loop
mov
xor
dec
out
or
insl
test
push
movsl
cmc
mov
or
mov
popf
addr16
stc
jo
loope
adc
xor
imul
int
pop
xlat
nop
test
repnz
add
sub
outsb
jb
mov
and
add
fdivrs
lock
pop
aas
mov
push
in
lock
popf
mov
xchg
inc
lea
inc
cmp
or
mov
lods
fisttpll
adc
mov
scas
stc
loope
inc
data16
mov
add
lea
movsl
stos
in
ret
cld
out
cmp
mov
popf
out
jb
test
in
adc
jae
push
push
cmovge
inc
ret
cmp
int3
adc
mov
xchg
and
ds
arpl
mov
add
loope
jmp
add
notl
push
out
lods
shll
jae
jp
daa
inc
adc
cmp
int3
test
popa
fwait
jg,pt
filds
xor
mov
pop
xor
cmpl
mov
mov
test
negb
mov
out
sbb
cltd
adc
push
shll
call
ficoml
adc
pop
jl
imull
mov
test
mov
dec
xchg
leave
cmp
mov
aam
push
lds
mov
adc
mov
inc
xor
cmp
xchg
pop
sti
xor
out
gs
aam
cmp
push
fidivrl
loope
hlt
aam
test
gs
mov
jl
mov
jge
out
add
out
push
jb
xchg
inc
adc
jecxz
push
jae
jle
ret
lods
xor
daa
shlb
aas
adc
fcmovnbe
push
movsl
icebp
cwtl
cltd
inc
cmpb
mov
mov
sbb
cmpsl
cmp
std
jle
stos
negb
mov
leave
xchg
daa
sbb
adc
add
fwait
out
sti
mov
aaa
pop
xor
call
push
push
jo
pop
lock
push
rcr
sti
mov
fwait
ljmp
sar
ret
mov
add
mov
mov
inc
sti
cmpl
mov
cmp
pop
clc
adc
dec
insb
pop
test
inc
aas
shl
jl
xchg
adc
ljmp
xor
and
ja
add
jo
dec
leave
push
lret
outsb
jl
nop
outsl
mov
lock
mov
xchg
cmp
outsb
out
mov
cmp
and
xor
add
je
outsl
cmpb
and
jl
and
mov
jnp
cltd
packssdw
pop
daa
js
mov
aam
mov
and
add
gs
sbb
pushf
lock
push
xor
aam
in
mov
pop
or
jg
es
and
repnz
pop
inc
or
ja
push
dec
jmp
jne
loopne
aas
out
das
jmp
das
fsubrl
insb
lcall
add
cltd
pop
jns
xchg
ret
ljmp
cld
aam
bswap
outsb
ss
push
lods
lret
cmp
mov
out
jb
mov
dec
ds
jnp
push
clc
aaa
into
rorb
jnp
pop
or
in
or
mov
insl
std
jg
jae
fmuls
shl
mov
adc
mov
jne
mov
out
in
push
xlat
cmp
or
xor
pushaw
lcall
out
stos
xchg
enter
cmp
in
push
lret
gs
jg
jno
fisubs
mov
pop
sbb
pop
jno
cmpsb
mov
ja
push
std
scas
jns
pop
jl
std
add
adc
mov
loop
outsl
mov
jnp
rclb
subl
xchg
mov
lret
clc
aad
pop
ja
adc
mov
mov
test
ja
test
cmc
test
sub
mov
mov
rolb
dec
insl
xor
ljmp
mov
subb
sbb
in
rcrl
int3
or
mov
adc
add
cwtl
sub
mov
stos
int3
sub
or
pop
dec
pop
jg
mov
mov
mov
push
dec
mov
mov
mov
and
push
sbb
fstpt
push
add
fmull
popa
inc
jg
out
ljmp
ja
call
dec
push
popa
xchg
mov
lret
in
ss
dec
loopne
stos
mov
call
xchg
das
shll
mov
xlat
scas
lret
fsubrs
push
push
sbbl
pushf
cld
pop
xchg
sbb
mov
in
mov
mov
out
sub
imul
fdivr
sbb
cmp
pusha
cwtl
mov
dec
mov
aaa
jns
pop
in
cltd
lods
roll
jne
in
pop
cltd
cmp
mov
stc
in
lock
mov
scas
ds
mov
call
std
in
or
or
inc
rclb
fucomip
cli
in
xchg
mov
mov
dec
jge
jae
and
test
jp
dec
and
push
cmp
sbb
clc
rolb
mov
mov
test
gs
shlb
pop
and
and
mov
pushf
xchg
adc
in
lds
cltd
jl
pop
sbbl
incl
cltd
test
jp
xor
and
sbb
push
mov
inc
adc
popf
xor
rclb
movsb
jno
jne
cmc
push
mov
stos
repnz
sub
add
movsb
inc
jp
mov
loopne
call
adc
inc
push
inc
call
sub
test
outsl
cmc
push
rorl
ret
inc
and
int3
fs
les
iret
mov
inc
out
add
mov
aad
and
pop
mov
icebp
xor
stos
test
das
int3
dec
pushf
fidivrl
mov
pushf
fwait
test
inc
std
fldl
aam
xor
pop
inc
mov
fwait
test
push
call
loope
pop
ret
stos
xchg
leave
outsl
push
push
xchg
or
jmp
test
mov
cmpsb
jnp
xchg
mov
ret
or
mov
mov
fsubs
movsb
mov
add
in
push
lods
mov
mov
js
sbb
lock
mov
mov
adc
jle
in
cmp
insl
inc
mov
sub
dec
or
in
mov
cmp
js
jo
fwait
insl
out
fnstsw
aam
rdpmc
push
lahf
inc
hlt
std
imul
inc
decb
adc
push
pop
repz
sahf
int
push
add
lret
icebp
cmp
repz
xchg
cld
cltd
jecxz
daa
sbb
inc
cmp
jge
fnstcw
add
repz
or
test
sbb
inc
fs
adc
xor
stos
pop
call
pop
ljmp
rclb
movsl
add
jo
popa
js
mov
scas
xor
outsb
mov
shrb
and
pop
sub
lds
push
leave
lea
jmp
jbe
inc
lret
loopne
test
xchg
rclb
test
mov
dec
ja
lcall
mov
mov
jmp
jecxz
scas
ljmp
push
lea
or
dec
imul
add
rolb
or
insb
add
stc
xorb
mov
stc
out
mov
push
sub
scas
cmpsb
mov
mov
es
decb
mov
dec
clc
jmp
movsb
cmp
iret
add
mov
jno
inc
sar
pop
and
mov
mov
insl
adc
fst
or
dec
mov
add
add
fsubrs
and
pop
pop
sub
in
fdivs
adc
jg
inc
mov
sub
in
aad
dec
sbb
pop
inc
fimull
add
popa
rcrl
pop
and
addr16
sahf
insl
xorb
aaa
xchg
sub
in
cmp
mov
imul
mov
xchg
outsl
dec
dec
ss
iret
icebp
das
cmp
es
shrl
push
movsl
imulb
mov
xor
clc
and
idivl
cmpl
and
mov
popf
dec
lock
ljmp
mov
aam
jns
lret
data16
and
mov
mov
inc
not
idivb
pusha
nop
push
leave
ret
jo
cmp
rcrl
pop
jne
lock
push
push
mov
dec
out
pop
push
idivb
or
sbb
jae
xchg
rcrl
and
cmp
stc
push
cmpsb
aaa
inc
outsb
inc
xchg
int3
jb
mov
in
jmp
icebp
xlat
or
icebp
push
call
sbb
and
pop
inc
push
dec
outsl
pop
pushf
stos
push
out
or
outsl
lcall
jl
mov
sub
push
pop
mov
inc
loopne
xchg
mov
jecxz
lea
mov
or
int3
or
adc
loop
arpl
add
cmp
cwtl
jl
out
xor
bound
xchg
dec
mov
sbb
negl
test
mov
xor
xchg
cmpsl
fwait
adc
adc
lcall
das
xor
sub
xchg
push
xchg
xor
mov
lea
movsb
cmp
ljmp
lret
fmul
jb
adc
push
xchg
mov
lret
loopne
mov
add
hlt
in
mov
inc
enter
pusha
push
push
jae
jge
test
js
xchg
xchg
jo
nop
aaa
mov
pop
sub
insb
xchg
aas
xor
jle
and
stos
shl
push
mov
mov
adc
mov
cli
push
ds
ds
cmp
inc
jecxz
loop
daa
aad
insl
push
je,pt
jb
inc
cmp
pusha
insb
sarl
push
adc
dec
sub
and
pop
adc
dec
dec
into
imul
mov
sub
sbb
call
push
pop
enter
xchg
xlat
and
iret
adc
mov
fs
push
add
nop
dec
cs
cmpb
fwait
out
sbb
fwait
int
and
mov
mov
neg
stos
pop
dec
adc
inc
inc
mov
inc
and
sbb
cld
stos
cmp
dec
roll
adc
mov
adc
je
jo
sub
pop
mov
rorl
loope
inc
mov
mov
mov
repnz
push
jl
push
mov
leave
loop
pop
inc
mov
pop
or
in
or
xchg
filds
push
into
cltd
aam
sub
stos
addr16
lea
xor
aaa
lahf
and
cmp
shl
jle
sbb
xor
push
jl
lcall
dec
sarl
notl
in
adc
jne
idivb
nop
mov
push
sub
stc
jbe
ret
mov
jns
call
add
inc
movsl
ret
scas
fiaddl
pop
push
add
push
sti
fisttpll
popf
lods
int
std
mul
fdivr
jle
dec
mov
cmp
lret
sbbw
mov
mov
dec
out
dec
jae
add
xor
inc
inc
sub
mov
push
icebp
faddl
fdivrl
and
mov
popa
bound
std
movsl
cmc
aad
pop
aam
fistpl
xor
nop
arpl
pop
or
aaa
or
out
mov
outsb
sbb
in
popa
movsl
fistpll
xchg
out
sub
mov
pop
push
sub
jb
mov
insb
leave
sbbb
cli
adc
ret
jp
sub
or
outsb
daa
mov
cmpl
push
cli
lea
pop
xchg
enter
or
insl
xchg
outsb
jmp
ljmp
add
rorl
in
cmpsl
xchg
xlat
xchg
xchg
shll
filds
int3
data16
iret
cmp
leave
loope
jl
pushf
add
xchg
jmp
cmp
rolb
push
lock
fs
mov
push
and
cmp
pusha
hlt
orb
sub
clc
test
adc
adc
xchg
cmpsb
mov
add
xchg
cmpsb
pop
movsl
aas
sbb
inc
adc
outsb
mov
inc
cmpl
push
fsubs
int3
sbb
dec
data16
push
inc
test
icebp
out
adcb
aas
sarb
loop
pop
jne
and
aad
rclb
sub
add
fdivs
decb
jmp
ljmp
mov
and
iret
and
loope
gs
sub
dec
mov
ds
xchg
pop
iret
and
testl
popf
push
or
or
mov
icebp
cmp
arpl
popa
mov
dec
sarb
mov
mov
arpl
cld
push
sub
jmp
cmp
out
push
fsubs
addb
stos
int
call
in
sub
sti
std
and
push
in
cmp
jmp
xchg
pop
sbb
je
cmc
dec
pop
fisttpl
sbb
ljmp
mov
mov
stos
lock
aad
add
push
cld
mov
cmc
stc
sub
add
lea
je
xor
push
int
and
jb
xor
mov
xor
dec
sti
notl
or
dec
jne
out
stc
popa
pop
xor
xor
dec
fists
pop
xchg
iret
movsl
call
add
or
cmp
lods
fbld
cs
testl
xor
push
xchg
aad
or
insb
push
add
or
movsb
or
rcrl
sbb
mov
lret
xor
push
and
inc
imul
jecxz
inc
push
cmpsb
lret
or
das
pop
mov
push
pop
pop
fwait
lea
and
movsb
movsl
dec
bound
mov
xchg
andl
xchg
cmp
nop
fs
push
jp
mov
inc
pop
dec
mov
shrl
std
or
xor
sub
sbb
setne
push
push
mov
ss
xchg
imul
push
stc
mov
fwait
imul
cli
negl
and
imul
lcall
popf
lcall
xor
dec
cli
cs
popa
sub
or
inc
xchg
push
jmp
pop
xor
jge
xchg
xchg
mov
sub
or
cmp
sub
mov
das
sbb
adc
push
cltd
outsb
adc
popf
bound
dec
test
loope
aad
or
mov
cmpsb
or
hlt
mov
test
pop
es
pop
out
sahf
imul
fisubs
in
sbb
mov
movsl
lahf
or
jnp,pn
insb
cmpsl
inc
fcoms
ljmp
dec
es
or
in
mov
pop
pushf
rolb
test
dec
orl
int
and
cmp
out
loopne
lcall
loop
lds
lret
xchg
mov
rclb
mov
or
cmc
jb
or
stos
enter
loop
lcall
sbb
xchg
cltd
jmp
inc
shlb
jns
cwtl
ljmp
fisubrl
xchg
lret
mov
into
jl
mov
fildl
and
out
sub
xor
popf
push
fmuls
mov
fdivs
incb
je
and
sub
scas
rcll
and
push
in
scas
pop
in
sub
push
jb
dec
fidivs
aas
push
cltd
mov
test
cmp
push
loope
cmp
sahf
fistpl
in
pop
adc
mov
dec
mov
out
mov
cmpsb
cltd
pop
repnz
in
rcr
dec
cmc
push
sub
psubb
test
nopl
orb
dec
cmp
aas
dec
or
xlat
cmp
fwait
jg
insb
mov
insb
mov
cmpsb
aaa
xchg
push
jp
xchg
mov
sahf
imul
out
out
jle
ds
into
in
mov
push
jo
jb,pn
sub
adc
icebp
and
sub
xor
push
push
xchg
add
scas
sbb
sub
gs
sub
arpl
scas
xor
and
sub
cmc
push
stos
cmc
je
sbb
fisttpll
xchg
or
shl
sbb
les
and
cmc
cs
and
xorb
push
lret
outsb
xchg
xor
frstor
add
xchg
and
jae
xchg
xor
dec
or
lahf
imulb
popf
movsb
popa
into
xchg
dec
stos
sbb
and
imul
lcall
stos
sbb
lahf
pop
fnstenv
add
dec
dec
jns
dec
ja
or
xor
sbbl
xchg
addb
mov
aad
mov
mov
orb
dec
lret
js
and
and
mov
gs
and
stc
test
lcall
insl
xorl
repnz
repnz
add
mov
sbb
sub
lods
iret
lods
or
in
push
xor
pop
imul
outsl
dec
xor
push
mov
sub
push
ds
addl
hlt
inc
je
int
push
sub
xor
enter
lcall
mov
inc
out
aad
mov
pushl
rolb
aam
xchg
adc
jns
stos
xlat
sbb
fcmovbe
xchg
call
popa
addr16
adc
adc
lock
xlat
ret
lahf
test
jnp
cmpsl
repz
stos
test
imul
cmpsb
data16
shlb
sbb
arpl
sahf
ror
inc
mov
ficompl
mov
mov
push
and
in
pop
in
cmp
loope
mov
pop
jo
fistpll
push
scas
push
loopne
cwtl
insb
sbb
sub
push
xchg
movsb
push
rcrl
mov
adc
sbb
or
rcrl
loopne
shlb
mov
ret
mov
negb
mov
xor
jge
notb
add
inc
and
leave
jnp
inc
xchg
add
adc
sub
lcall
sub
jmp
cmp
jbe
testb
paddusw
pop
arpl
xor
mov
xchg
pusha
movsb
jno
cmp
jnp
mov
ljmp
loopne
add
aad
xor
rcll
mov
jmp
inc
cmp
cmc
data16
xlat
orl
jl
lahf
test
test
mov
rcrb
lret
xchg
movsl
and
pop
or
outsb
cmp
jns
jp
dec
sbb
out
jne
stos
pop
and
and
xlat
inc
adc
or
sub
mov
mov
mov
fcoml
je
bound
in
add
dec
pop
stc
outsl
arpl
adc
mov
push
fimuls
push
mov
fstps
xor
fsub
jae
jae
push
and
movsb
imul
pusha
add
hlt
rorb
pop
mov
fistps
aaa
push
xchg
push
add
pop
adc
ficomps
adc
out
xorl
js
cmp
popa
cmc
sbb
pop
push
pop
mov
cmp
ss
sbb
icebp
xor
hlt
add
sbb
jge
and
in
out
outsb
cwtl
stos
test
mov
or
mov
lcall
rorl
jb
scas
cltd
hlt
xor
xchg
shrl
stos
or
lods
adc
pusha
fisttpll
shll
sbbb
or
xchg
and
icebp
std
scas
inc
sbb
lret
cmp
xlat
mov
or
pop
cmpsb
fmul
lcall
push
mov
mov
movsl
rolb
adc
dec
rorb
imulb
popf
jp
loopne
fsubrs
mov
call
sub
mov
jle
mov
and
pop
mov
xchg
jmp
pushf
jecxz
je
mov
jg,pt
das
loope
pop
inc
xchg
mov
jb
xchg
jl
rclb
imul
pop
pop
jnp
jne
dec
cmp
out
ss
cli
jno
mov
mov
pop
or
lahf
pop
dec
xchg
xor
pop
aad
cmp
pop
scas
fidivrs
icebp
shlb
dec
sub
jecxz
loop
scas
int3
shrb
insl
xor
or
jmp
inc
mov
jo
jg
mov
xchg
orl
mov
mov
dec
jnp
inc
js
mov
out
cmp
dec
leave
push
bound
or
or
push
adc
movsl
repnz
mov
loop
sbb
mov
mov
mov
mov
nop
in
scas
mov
mov
cltd
test
ret
jp
mov
dec
xor
jne
scas
fistpl
lret
sbb
add
sbb
push
ljmp
out
or
xchg
lds
sti
push
xor
and
dec
pop
insl
leave
adc
mov
bound
das
add
sbb
ret
dec
mov
jecxz
inc
adc
insl
fldt
ljmp
data16
lret
push
mov
mov
es
lods
lret
cmpsl
mov
pop
jecxz
mov
jge
pop
outsl
xchg
lahf
and
mov
push
cmp
cmpsb
jecxz
pushf
jg
mov
push
sbb
cmp
mov
cmp
push
xlat
outsl
pop
and
enter
and
pop
dec
mov
mov
cmpsl
push
ftst
jl
sti
or
xchg
int
ret
adc
and
cs
inc
nop
or
icebp
stos
in
je
jbe
movsl
in
adc
or
pop
andb
or
popa
push
add
ds
les
cmc
mov
pop
add
sbb
loopne
fidivs
pop
or
mov
mov
cmp
mov
outsl
out
cmpsb
adc
jecxz
jp
inc
or
push
stc
mov
mov
inc
stc
in
jl
dec
sub
enter
clc
and
aad
push
lret
xor
jo
leave
dec
jbe
sub
loop
mov
xchg
addr16
mov
out
xchg
js
cmp
push
enter
lahf
pop
push
popa
mov
sub
lahf
rcl
lods
scas
mov
cmp
pop
push
sbb
cmp
and
or
pop
mov
in
js
out
jecxz
pop
ja
add
sbb
add
outsl
add
test
and
call
nop
js
rorb
jns,pt
icebp
movsb
mov
repz
push
dec
xlat
ret
push
fmull
loope
ret
dec
xor
or
mov
or
aas
push
push
cltd
nop
icebp
push
lea
mov
enter
dec
cmp
push
or
clc
lcall
loope
inc
ds
popl
jge
sub
sbb
cmp
xchg
cmc
pop
stos
mov
in
mov
movsl
push
mov
cltd
add
adc
rorl
shlb
add
lock
xor
test
or
push
stos
out
sbb
mov
das
push
mov
mov
or
call
and
jne
jecxz
mov
cmp
inc
fistpl
fwait
xchg
cld
jbe
mov
call
and
push
stos
js
or
lods
add
pop
push
mov
movsl
outsb
inc
cmp
jns
mov
std
cmp
mov
pop
add
sbb
aam
insb
adc
or
adc
lret
dec
push
add
xchg
adc
push
mov
in
mov
or
mov
repnz
cmp
xchg
push
add
fdivrl
jae
pop
lret
mov
or
clc
xor
push
add
int3
fwait
jle
adc
sti
imul
shrb
loopne
sbb
push
sub
loopne
fs
rcrl
mov
testb
filds
movsb
inc
cli
negl
adc
or
je
ret
cmpsb
xchg
nop
sub
mov
hlt
rorl
fisttpl
repnz
pop
pop
sbb
xor
push
sub
daa
call
cmp
lahf
adc
sbb
cmp
in
sub
pop
jg
sbb
sub
add
adc
xchg
out
lret
xor
sub
jb
bound
inc
adc
fisttps
lret
xchg
sbb
mov
or
fwait
mov
xchg
push
xchg
mov
fcoml
fwait
lret
cmp
lcall
mov
mov
jns
lret
fnsave
sub
fsubr
pop
mov
mov
bound
into
mov
movsl
sub
mov
and
aas
cmpsb
and
stc
mov
dec
xchg
dec
xor
pop
and
sbb
subb
cli
pop
pop
loope
fimuls
sub
dec
aad
pop
pop
xchg
shll
fwait
sub
pop
iret
xor
dec
stos
jbe
in
mov
jecxz
out
adc
scas
mov
lock
or
jmp
fnstenv
rcrl
shl
mov
adc
and
in
pop
or
xor
mov
and
push
xlat
hlt
repnz
aas
pusha
inc
xlat
mov
mov
sahf
ftst
dec
stos
push
iret
push
xchg
mov
les
adc
sbb
cs
ret
sub
aam
xchg
push
in
dec
stos
rcr
dec
fndisi(8087
lods
mov
lea
pop
sub
sbb
xor
pxor
cmp
xchg
add
inc
mov
cli
dec
sbb
sbb
inc
scas
mov
rcrb
xchg
dec
push
and
pop
sub
xchg
je
pop
imul
mov
inc
and
push
loope
add
roll
xchg
mov
mov
fst
push
test
repz
fistl
push
pop
loopne
add
mov
jns
sti
jmp
ftst
xor
mov
push
setne
out
cmp
enter
testb
rorb
cmp
sub
stc
cmpsb
inc
xchg
push
and
lods
add
push
scas
popa
adc
jp
out
inc
lret
xchg
mov
test
mov
jmp
aaa
or
es
jbe
adc
mov
sahf
fistpll
mov
lret
cmp
sbb
lea
aas
sub
jge
sbb
inc
leave
push
push
mov
fstl
js
sti
stos
ret
add
jecxz
cmc
push
mov
imul
and
test
aad
mov
test
loope
incl
ret
push
sbb
repz
inc
popa
fcmovb
ds
scas
clc
sub
push
mov
sub
lods
inc
and
mov
xorb
adc
push
adc
fs
jo
sub
xchg
xor
inc
or
push
stos
xor
popf
cmp
repnz
dec
mov
sbb
mov
xlat
pushf
daa
sbb
ja
xchg
mov
and
popa
adc
push
outsb
lret
lods
loopne
fsts
in
inc
aas
adc
stos
jnp
cs
mov
lods
dec
push
dec
dec
das
xor
ret
data16
cmp
aam
ss
jnp
repnz
subb
push
jle
call
jo
ret
mov
mov
andb
jne
lock
bound
outsl
cld
pop
or
aas
jecxz
push
adc
int3
shrl
inc
sbb
dec
outsb
icebp
jmp
mov
mov
or
sbb
icebp
add
aas
xchg
jle
jle
adc
cld
jle
jb
and
mov
push
cltd
outsb
out
loope
sbb
lahf
and
daa
add
lods
pushl
out
pop
mov
scas
xor
mov
sub
pop
sahf
jecxz,pt
punpcklbw
lea
movsl
pop
aas
mov
xor
pop
xchg
pushf
or
imull
sub
xchg
pop
fdiv
or
jbe
mov
jl
std
jae
adc
dec
gs
xchg
sub
add
into
leave
xchg
sub
loope
mov
jg
mov
dec
push
repz
lods
and
jb
push
aam
loop
mov
leave
testl
into
and
pop
push
xor
jb
or
or
dec
jp
mull
push
mov
lock
test
push
cmp
fs
mov
xlat
push
ds
mov
sarl
jge
jno
xchg
fsubr
add
mov
cltd
iret
fcomi
cli
and
mov
out
out
stc
int
mov
mov
ds
in
sub
push
mulb
popl
sarb
int3
movsl
adc
je
mov
stos
in
push
stc
std
fwait
jmp
mov
mov
lods
fstpt
pop
cmp
sbb
and
shlb
in
pop
push
out
stos
pop
xor
mov
mov
cmp
mov
push
sbb
and
add
fs
xor
test
mov
jae
or
lods
mov
jbe
notl
cmp
stos
jmp
movl
push
cmp
ficoml
sub
lea
in
push
inc
mov
shr
mov
aad
in
aam
scas
ljmp
or
insb
inc
std
sahf
sbb
dec
adc
push
sbb
inc
test
add
jne
lods
insl
pop
outsl
loopne
scas
xor
xchg
mov
mov
xor
mov
sti
ror
daa
rolb
fadds
sbb
xor
mov
je
scas
test
movsl
loope
ss
andl
shll
sub
lea
lods
loopne
dec
mov
pop
sub
mov
mov
popf
mov
scas
lcall
sbb
xor
xor
mov
and
mov
pop
inc
bound
out
stc
xchg
mov
sub
or
cwtl
test
pop
movsb
dec
je
xchg
insl
mov
sbb
arpl
jns
loope
adc
movsb
and
mov
cmc
jge
out
stos
jl
cld
xorb
scas
out
insl
outsb
cmp
bound
aas
stos
or
adc
cmc
pop
into
xor
dec
sbb
xor
xchg
dec
ljmp
add
popa
adc
push
hlt
test
std
test
add
cli
mov
data16
jle
out
jl
jne
jmp
int3
mov
mov
mov
popl
test
outsl
add
fimuls
cmp
arpl
xor
je
out
and
test
push
and
call
ret
popa
enter
sar
shll
add
xchg
les
je
lcall
mov
xchg
sbb
and
pop
xchg
xchg
into
out
jae
mov
sbb
out
nop
or
mov
and
test
shrb
sub
add
pop
mov
push
adc
sub
aaa
mov
ret
adcl
pop
ret
dec
scas
cmpsl
xor
ljmp
push
xor
fstp
or
stc
jmp
pop
and
add
nop
aaa
mov
adc
xchg
dec
insl
sbb
test
or
mov
cmc
cmp
test
mov
jae
clc
rclb
sbb
dec
mov
call
test
and
push
sub
xor
popf
and
out
cmpsl
jmp
inc
jp
lahf
jbe
pop
xor
lret
push
lds
je
int
cmp
stos
xor
popa
or
push
roll
push
pop
xor
xchg
shlb
rcrl
push
xor
gs
aad
xchg
pop
push
scas
or
imul
cwtl
sub
inc
sbbb
data16
pop
lods
push
xchg
pop
adc
movsl
mov
cmp
stc
orl
pop
int3
js
out
or
mov
push
and
movsb
mov
jle
adc
sub
into
stos
dec
ss
ss
aad
je
inc
sti
push
xchg
pop
xor
in
popa
gs
adc
push
mov
adcb
push
cmp
daa
out
mov
xchg
in
mov
scas
shlb
mov
cmp
sbb
aaa
shr
jne
mov
iret
enter
push
jne
jl
sti
es
in
and
pop
push
lods
cmp
xlat
movsl
push
test
ds
xchg
movsl
dec
cmp
in
out
cmp
inc
adc
mov
aaa
pop
hlt
lret
mov
testb
ficoml
push
jb
mov
ret
inc
andb
dec
and
cmc
xchg
mov
and
inc
sub
cmc
sbb
pop
xchg
inc
imul
andl
lret
xor
fisubl
daa
xlat
sarl
in
addr16
sub
mov
ret
lret
mov
sarl
sub
cmp
xor
xor
scas
ja
mov
and
adc
cmpsb
rclb
insl
mov
ret
mov
pop
roll
in
mov
push
mov
inc
prefetch
or
ds
lock
rcr
cmp
lock
outsl
jecxz
add
xchg
push
pop
mov
pop
addr16
test
jo
jmp
push
jg
mov
mov
pop
inc
movsl
gs
jb
sub
cmpsb
adcl
sbb
mov
popa
push
jg
iret
scas
dec
mov
test
mov
sti
das
mov
lea
sub
inc
test
rorb
in
cmc
dec
or
lret
fsts
mov
inc
sbb
test
push
es
popf
pop
jecxz
loop
dec
gs
das
je
xchg
jge
test
mov
mov
mov
add
mov
xor
rolb
out
cmc
addr16
xor
loope
repz
inc
mov
leave
ficomps
loopne
sub
xchg
cmpb
lods
outsb
cmp
cmpsb
movsb
pop
sub
orb
xchg
movsb
into
mov
shrl
xchg
dec
ss
out
rolb
nopl
push
adc
or
mov
sbb
fiadds
sub
imul
jns
mov
pop
xchg
jecxz
cmp
cmpsl
scas
gs
jo,pt
jge
push
cmp
stos
fs
or
xor
jl
fwait
jecxz
xchg
push
bound
cmp
push
jno
push
divb
and
push
cmp
std
sub
cli
cmc
add
and
out
cmp
pop
testl
test
xor
mov
rcrl
int3
add
sbb
adc
daa
ret
pop
mov
outsl
sbb
fidivs
dec
mov
jnp
sbb
jb
lret
es
outsb
push
push
pop
push
lret
pop
into
and
add
insb
popa
aam
pushf
jecxz
mov
jne
lods
xchg
dec
call
mov
cmp
decb
aam
cld
add
push
insb
mov
ljmp
sub
popf
repnz
sub
pop
in
lret
cmp
enter
scas
cmp
call
inc
mov
popf
dec
sbb
xchg
insb
gs
mov
sbb
push
xchg
lea
push
icebp
dec
in
jge
das
inc
jo
mov
int
mov
out
and
xchg
out
and
pop
out
pusha
fwait
lock
cmp
mov
sbb
xor
sub
adc
or
push
dec
adc
xchg
loope
das
outsl
in
pop
xor
xchg
pop
out
bound
push
fcom
adc
punpckhwd
out
push
xchg
mov
fcomp
aad
arpl
int
mov
rcll
scas
aad
repz
pop
sub
pop
pusha
pop
mov
aam
jnp
and
pop
mov
out
stos
faddp
in
bound
leave
push
test
test
or
push
mov
icebp
data16
ja
in
iret
pop
idivl
subb
lret
push
xor
loopne
cli
daa
stos
sub
sbb
dec
cwtl
mov
insb
xchg
pop
pushf
cmp
xchg
adc
cmpsb
jl
out
xchg
xchg
aam
test
movsl
jl
cmp
ja
into
daa
shl
repz
insb
sbb
add
arpl
call
mov
scas
cld
or
imul
daa
aam
lcall
or
sbb
lret
sbb
ss
popa
push
mov
adc
subl
stos
sbb
arpl
or
sub
popa
mov
sbb
outsb
dec
mov
stc
clc
cmpsl
xor
cmpsb
shll
jmp
mov
adc
pandn
push
inc
add
adc
or
enter
jbe
test
aas
bound
sub
cmp
ret
aas
into
xchg
jmp
sar
mov
xor
cmp
test
stc
and
jno
pop
out
push
mov
test
sarb
jae
sbb
imulb
jbe
sub
push
dec
daa
stos
push
add
and
or
test
mov
movups
scas
mov
lcall
xor
sub
cmp
popf
or
pop
jmp
test
jg
rcll
adc
aas
in
mov
pop
in
jmp
int
idivl
or
pop
sbb
scas
fstl
add
rol
adc
mov
stos
aad
jp
mov
add
shlb
jge
mov
mov
inc
daa
mov
xchg
out
sbb
push
add
jns
cmpsb
dec
repnz
lcall
and
push
ret
sti
nop
repnz
mov
pop
scas
jns
in
ret
decb
fistl
mov
xchg
lods
cltd
iret
xchg
shl
mov
xor
push
push
into
int
arpl
insl
ret
xchg
add
lret
and
arpl
in
loop
mov
push
ss
jge
pushf
dec
js
shrb
cmp
pop
xchg
adc
nop
mov
lret
push
xchg
xchg
mov
mov
push
movsb
jnp
pop
adc
pop
xchg
mov
aam
test
jbe
fisttpll
jns
mov
add
leave
jnp
mov
add
xchg
inc
sub
jnp
cmpsb
roll
mov
xchg
add
ljmp
js
test
sti
sbb
inc
shll
insl
mov
ss
pushf
xchg
fldcw
xchg
test
rorb
jbe
ret
xchg
dec
rol
test
pop
adc
test
push
daa
cltd
iret
in
int
outsb
push
jo
sbb
pop
pop
and
rep
into
sbb
inc
sub
js
gs
into
in
inc
jns
hlt
leave
rcll
sti
mul
mov
movsb
mov
lock
cmp
inc
sbb
hlt
aad
fs
jge
jno
je
out
lahf
add
stc
popf
xchg
pop
dec
sbb
inc
or
push
mov
or
adc
inc
adc
iret
bound
ljmp
push
arpl
and
jl
pop
adc
std
js
mov
stc
inc
lcall
push
shrl
int3
fs
dec
xchg
icebp
inc
and
jne
mov
je
cmpsb
dec
test
nop
gs
mov
jbe
sub
mov
push
push
ss
push
jmp
hlt
xor
fmuls
shrb
mov
scas
xchg
jae
ret
dec
push
test
test
repnz
dec
test
test
in
mov
dec
xchg
xor
jb
mov
repz
xor
imul
ret
xchg
jns
xchg
mov
les
push
dec
lods
push
ret
push
or
pushf
out
or
dec
sbbl
pop
xor
inc
jge
sbb
iret
outsb
sub
out
xchg
lea
xlat
pusha
sbb
lretw
int3
sbb
out
adc
cmpsl
cmp
rolb
inc
push
sub
jno
dec
and
stos
xlat
sbb
jnp
in
mull
or
pop
loope
stc
push
mov
movsl
jle
and
mov
xchg
fs
cmp
push
stos
icebp
jecxz
sti
je
ds
add
sbb
adc
aad
or
cmp
push
dec
pop
outsl
pop
movsb
add
jl
dec
xchg
pop
push
inc
mov
or
les
mov
mov
pop
push
filds
int
testb
leave
sub
lock
xchg
xor
orl
sub
inc
adc
roll
pop
je
clc
pop
rolb
cmpsl
mov
pop
push
mov
dec
xor
add
add
imul
shrb
cmp
mov
shll
sbb
adc
popa
inc
shr
mov
imul
cmp
stc
adc
pop
sbb
adc
movsl
pop
and
cwtl
test
cmpsl
popa
sbb
lods
test
pusha
data16
dec
ja
and
mov
out
lret
and
imul
imul
cli
sub
sbbb
lret
sub
ret
mov
fdivr
test
out
aad
sahf
hlt
lahf
xchg
sbb
pop
sbb
jnp
xchg
push
jge
mov
xchg
sbb
jae
mov
pop
test
fcomi
or
push
jmp
adcl
sub
scas
mov
popa
mov
mov
pop
mov
icebp
cli
insb
or
push
outsb
outsb
test
mov
test
ja
or
jl
shlb
cwtl
inc
dec
cld
mov
add
aas
pop
xor
stos
inc
fidivrl
jb
mov
ljmp
and
pop
push
addr16
popf
outsb
fadds
shl
in
test
fadds
outsb
mov
and
mov
leave
lcall
push
aas
fwait
cs
or
in
pop
xchg
xchg
mov
add
out
cmpsl
out
popf
mov
sub
jae
xchg
inc
mov
fcompl
inc
cwtl
rorl
mov
faddp
insl
xor
push
add
xchg
decb
sti
sub
jle
into
jmp
jge
leave
pop
mov
jo
mov
mov
in
push
fistps
sub
movsl
ret
shrl
sub
adc
gs
dec
xchg
lret
lahf
jle
clc
cli
call
inc
ret
inc
imul
pushf
mov
pop
shlb
andl
mov
rorb
popa
aaa
repz
std
rclb
dec
mov
imull
or
sahf
out
xor
push
push
sbb
push
rorl
lods
outsl
adc
xchg
push
add
and
mov
mov
in
mov
inc
shlb
movsl
dec
or
insb
fdivl
push
xor
pop
nop
mov
jbe
xor
pushl
out
and
mov
cwtl
in
js
sahf
push
aad
rol
js
sbb
gs
and
jp
sar
outsl
pop
loopne
jnp
mov
cmc
aas
pop
or
and
inc
xor
xchg
mov
cli
andb
mov
jge
call
imul
push
inc
filds
adc
dec
fstp
cld
repnz
inc
xor
pop
mov
dec
xor
lret
push
hlt
arpl
bound
ss
icebp
xchg
xor
ds
or
pop
inc
pop
jg
int3
shrb
fcoms
stos
jl
repz
rolb
add
push
leave
repz
fdivp
mov
jae
push
pop
inc
dec
adc
mov
ljmp
mov
fadds
fnsave
sarl
jnp
movsb
xchg
add
test
mov
cmp
xlat
and
lock
int
add
fiaddl
popf
cmp
out
jmp
stos
jmp
fistpll
enter
add
dec
mov
lds
mov
sti
lock
imul
xlat
fwait
jp
rcll
inc
lea
jo
fisttps
stc
ds
rcrl
inc
lods
mov
push
stos
push
out
mov
pop
inc
inc
hlt
cmp
inc
jge
clc
xor
out
jbe
int3
add
sub
test
nop
cmpsb
sub
fcomps
neg
lods
out
jg
lock
ss
mov
fcompl
outsl
mov
loope
andb
xor
out
mov
ja
repnz
das
lret
mov
pop
lahf
cmp
mov
leave
or
scas
inc
sub
fmuls
mov
and
outsl
dec
lcall
rcl
xchg
mov
popf
pop
xor
into
insl
into
mov
add
mov
mov
xchg
jne
stos
jle
mov
push
inc
incl
in
decb
inc
inc
ss
lock
and
dec
loop
je
aas
fyl2xp1
jg
pop
cmp
xorb
cld
jbe
addl
stos
and
bound
add
lea
aam
mov
or
cltd
push
jno
dec
and
xchg
sub
xor
sub
scas
sbb
adc
leave
pop
xchg
jmp
mov
aas
cmp
pop
lcall
stos
sub
ret
test
adc
inc
dec
fbld
lret
inc
sub
stc
jne
dec
push
je
inc
push
inc
cmp
ds
popa
popf
xlat
movsb
sbb
int3
xchg
loop
sbb
and
xorb
ret
add
call
clc
aas
inc
or
jno
loop
popf
ljmp
jle
sub
mov
sub
cmpsl
scas
or
push
lds
ret
mov
lahf
shlb
mov
mov
mov
shll
ss
in
sub
push
dec
push
lcall
push
jecxz
add
xorl
ret
stc
subb
dec
cmp
imul
int3
out
loopne
xor
out
xchg
cmp
xor
xor
lods
pop
push
adc
push
fadds
lcall
scas
jne
addr16
cwtl
test
sub
lods
and
ja
cltd
std
push
in
clc
xchg
nop
mov
adc
jp
sub
sbbb
cli
sti
xor
and
mov
sbb
jle
scas
insb
or
rcrb
add
loopne
or
cltd
in
add
pinsrw
and
in
and
xchg
mov
xchg
mulb
out
hlt
inc
pop
pop
push
fwait
mov
out
arpl
sub
movsb
nop
adc
dec
mov
and
jno
sbb
inc
and
hlt
mov
lock
sbb
push
push
jp,pt
lods
cwtl
push
shlb
mov
dec
enter
iret
outsb
repnz
mov
aaa
gs
aad
scas
jle,pt
jmp
cwtl
sahf
sahf
into
xchg
push
mov
ja
adc
aaa
mov
add
cmpsb
jmp
cltd
in
js
add
xchg
roll
stos
inc
jbe
xor
sbb
add
cmpl
pop
xor
push
insl
cs
dec
mov
xor
add
loop
mov
outsl
int
push
mov
pusha
loop
loopne
jg
dec
adc
inc
push
call
and
sahf
gs
outsb
out
pop
inc
cltd
fnstsw
jno
cmp
in
daa
movsb
or
mov
xor
outsb
movsb
mov
xchg
outsl
adcb
fbld
adc
sbbl
pop
jp
data16
loope
jle
int
bnd
sub
fisubl
xlat
jbe
jbe
aad
pop
sbb
addb
push
mov
xor
push
xchg
out
pop
add
out
rolb
dec
mov
mov
mov
or
push
movsb
in
bound
or
add
and
jbe
add
jp
xchg
pop
mov
cmpsb
and
sbb
lea
push
mov
jl
addr16
lahf
jae
or
push
subl
std
mov
xor
ret
xor
loopne
and
popf
pushf
mov
sbb
fimull
imull
lret
ja
bound
and
aaa
lcall
shlb
sbb
cmpsl
or
mov
popa
jecxz
mov
pop
xor
add
sarl
lods
or
jae
mov
xchg
mov
movaps
scas
fistl
sbb
push
add
out
test
mov
adc
insb
add
enter
outsl
push
inc
push
icebp
xor
cmp
cs
lods
dec
scas
sbb
jne
mov
jp
pop
lahf
int
mov
repnz
xor
xor
notl
clc
call
icebp
insb
out
push
sub
xor
fcmovnu
xlat
enter
out
sub
xabort
mov
push
fcmovbe
add
outsb
pop
ret
xor
pop
stos
scas
jge
movntps
cmpsl
cmp
mov
out
cmp
sub
imul
mov
xchg
mov
sub
adc
and
or
rorb
test
sahf
fs
adc
dec
das
and
sub
push
mov
lret
adc
mov
mov
subb
movsl
pop
imul
mov
mov
dec
fxch
rolb
jne
push
pop
mov
insb
mov
stc
inc
rcrl
pop
mov
loopne
mov
mov
mov
shr
into
cmc
ret
and
cmp
rolb
adc
out
and
fadds
popa
bound
ffree
stc
xchg
xchg
in
xor
loopne
fldcw
mov
fistl
pop
pop
inc
jnp
jb
aam
inc
loope
push
loopne
int3
add
fisttpll
adc
fsub
cmp
das
movsb
hlt
in
xor
data16
or
pop
int3
cmpsb
cmp
mov
jnp
xor
or
gs
xor
bound
cmp
lret
enter
jno
xchg
mov
lret
and
test
roll
subl
adc
add
ret
sbb
or
push
scas
movsl
push
ss
andl
and
lods
into
fisttps
push
jle
or
movsb
sarb
sub
and
add
mov
or
aaa
andl
scas
sbb
inc
sub
daa
cltd
push
leave
lds
ret
inc
icebp
xor
sub
xchg
aam
sbb
dec
fs
jmp
xchg
bsr
mov
push
fs
ljmp
sbb
add
imul
bound
dec
xchg
roll
std
push
jl
outsl
push
inc
mov
jae
test
scas
sbb
sbb
js
lea
out
lock
jge
das
inc
sub
inc
inc
test
mov
jge
aad
sub
adc
mov
pop
int3
sub
mov
cld
add
mov
fildll
adc
pop
les
in
mov
xchg
popf
ljmp
out
xchg
aam
lcall
loopne
cmp
inc
or
into
dec
inc
mov
out
aaa
mov
fistpll
push
hlt
out
imul
fdivl
cwtl
xor
cmp
pop
lods
or
xchg
sub
leave
jns
cmp
inc
sbb
push
popf
adc
out
decb
jb
or
or
lods
sub
fwait
imul
inc
mov
inc
addl
pop
lahf
dec
sub
sbbb
jbe
inc
leave
enter
scas
int
sub
scas
call
lret
add
divb
lret
mov
or
mov
or
in
jno
ds
or
fwait
add
adcl
cmp
iret
movsb
rol
pop
add
dec
lods
mov
pop
ficompl
out
dec
cmpsl
addr16
ds
sbb
in
xchg
xchg
adcl
fsts
mov
dec
xchg
jne
aaa
test
xchg
sbb
jbe
sub
hlt
sarl
cltd
push
sub
cmp
out
dec
rclb
add
cmpsl
xor
jmp
xor
cmpl
sbb
mov
shlb
mov
sbb
inc
and
es
mov
or
mov
sbb
jge
adc
out
lock
push
cmp
mov
push
fxtract
insl
and
mov
insb
in
adc
mov
lahf
aaa
or
pop
pusha
mov
add
aam
mov
mov
mov
xor
mov
mov
push
stc
add
or
xchg
div
leave
mov
data16
scas
mov
push
inc
push
sbb
add
and
rorb
nop
mov
xchg
and
into
inc
xchg
jl
testl
jbe
scas
addb
push
mov
cwtl
lock
rolb
insb
ljmp
in
xchg
loopne
jg
clc
inc
js
inc
mov
and
cltd
sahf
cmp
mov
mov
sti
addr16
or
mov
adc
jecxz
popf
das
sub
jns
mov
les
adc
lods
ret
and
mov
mov
rcrb
lods
adc
je
dec
outsl
dec
sub
dec
adc
push
or
inc
or
sbb
sbb
stos
adc
push
xor
add
push
xlat
sub
xchg
add
xor
insb
pop
mov
and
push
movswl
cmpsl
inc
ja
push
mov
wbinvd
test
movsb
mov
cmpsl
mov
cwtl
cmpsl
test
cmp
jb
out
ljmp
gs
rcll
cmp
ja
mov
out
push
mov
scas
add
and
push
aam
cmpsl
or
lods
cmp
adc
pop
out
push
shlb
lock
cmp
loope
daa
xor
inc
sub
ja
outsb
or
outsl
lret
mov
mov
xchg
lds
mov
aaa
lret
sbb
dec
nop
fists
pop
pop
inc
mov
lods
mov
add
inc
ljmp
repnz
and
pop
ret
and
push
stos
pop
fcom
loop
subb
cwtl
clc
xchg
and
lret
sbb
int3
jns
adcl
dec
pop
cltd
pop
fsub
ss
mov
jg
add
mov
adc
jl,pt
adc
movsb
push
fcomip
adc
fcomps
pushf
ds
sub
pushl
push
ja
xchg
test
cwtl
cld
inc
push
dec
and
mov
fdivl
jle
and
pushl
inc
inc
setno
adcl
xor
add
mov
les
adc
inc
mov
arpl
add
stos
aad
jl
jg
aaa
jg
push
scas
sub
test
hlt
jmp
jb
push
sub
test
xor
adc
mov
cmpsl
push
mull
mov
pop
push
insb
push
imul
mov
xchg
add
jns
xlat
ret
and
cmpsb
pop
test
icebp
sub
out
xor
and
push
js
je
or
pop
push
fistpl
dec
jbe
lret
mov
int
or
pop
xchg
inc
jl
lock
lcall
ljmp
lea
jno
mov
cwtl
leave
jae
popf
pop
xor
jle
lret
sti
fisubs
mov
pop
jecxz
ror
movsb
push
pop
fidivrl
jno
jo
or
sbb
cli
mov
insb
aas
jae
shrb
xor
mov
sbb
add
adc
add
mov
xor
jne
jecxz
adc
sub
cmp
mov
sub
jae
dec
dec
or
js
pusha
mov
into
data16
sbb
into
jg
test
lret
push
inc
mov
mov
pop
push
enter
leave
pop
clc
je
mov
imul
repnz
imul
fstl
clc
cmp
lds
sbbb
and
ljmp
dec
add
fsubrl
mov
or
test
sarl
cmp
xlat
mov
mov
dec
nop
sbb
lahf
test
and
popf
mov
adc
roll
shl
fcompl
sbb
gs
adc
xor
into
dec
cmp
adc
addl
sbb
test
mov
mov
pusha
inc
call
lock
lret
sbb
subl
call
inc
inc
pop
xchg
pushf
scas
sbb
pusha
adc
mov
nop
sbb
sbb
lret
or
push
clc
xchg
cli
dec
outsb
outsb
push
cmpsl
jl
push
cmpsl
mov
dec
inc
add
mov
sub
push
clc
movsb
mov
int
rcll
nop
aam
test
mov
add
in
mov
push
mov
mov
setnp
fsubrl
jbe
mov
outsl
insl
rolb
inc
jecxz
dec
loop
jb
js
push
jns
fiadds
pop
sahf
push
jp
daa
gs
in
mov
mov
xor
pop
je
mov
jbe
int3
inc
lcall
add
lret
jp
xchg
lock
call
push
xchg
mov
test
push
aaa
pusha
fistps
js
mov
sub
mov
arpl
add
in
mov
in
sub
jns
push
jbe
pop
cltd
lods
lahf
stos
subb
xor
mov
sbb
and
in
dec
inc
das
dec
pop
push
add
les
notl
jge
push
and
jo
mov
call
cli
jo
cltd
push
test
jnp
loope
shll
sbb
dec
jnp
push
cmp
add
call
jg
icebp
xchg
add
ret
push
cld
scas
xchg
xor
xchg
movsb
xorl
leave
lcall
test
fsub
xchg
ficomps
es
arpl
pop
mov
in
into
mov
mov
outsb
gs
lcall
pop
pop
int3
cmpsl
test
cmc
sub
mov
and
xchg
imul
sti
add
xor
js
fwait
add
sbb
out
repz
mov
das
lea
pop
pop
ljmp
fldl
imul
mov
jbe
or
adc
dec
inc
or
cmp
repz
push
xorl
dec
mov
or
push
mov
and
or
inc
lock
test
cld
ja
dec
cs
sub
push
fistpl
inc
lmsw
rdmsr
xor
aad
fcmovnb
shl
mov
cs
mov
mov
or
repz
pop
outsl
cs
test
stos
popl
loop
jg
in
clc
jo
fnstcw
lds
lods
lock
cmc
popa
rcrb
push
push
scas
mov
lret
push
arpl
sti
arpl
xor
jne
incl
cmpsb
lods
enter
cmp
jl
ds
or
jno
lcall
pop
jnp
xor
sub
jecxz
sub
ja
cmp
fdivp
js
xchg
data16
rcll
mov
dec
push
hlt
jge
xor
leave
mov
push
shlb
hlt
mov
cmpsl
ret
lods
mov
add
mov
push
ret
xchg
aaa
jl
sub
repz
roll
les
repz
es
mov
mov
push
adc
daa
push
xchg
xchg
fcoml
mov
das
sbb
gs
dec
adc
fdiv
mov
les
imul
dec
adc
cli
pop
push
mov
mov
lock
sahf
mov
mov
adc
jns
lret
int3
push
add
push
mov
inc
sti
add
push
mov
loope
scas
sub
push
lds
cmp
xchg
jp
push
or
out
mov
mov
in
in
mov
addr16
mov
pop
push
fs
in
add
xchg
fcoml
pop
xchg
sbb
jp
and
pop
jns
jns
jb
add
daa
jp
sub
sbb
jo
in
pop
dec
xor
pop
mov
cmc
jns
inc
add
in
nop
jle
adc
and
sbb
aad
dec
jmp
mov
mov
sub
sbb
into
mov
arpl
mov
test
xchg
int3
jo
jge
call
push
mov
repnz
outsb
xor
lahf
mov
cmp
out
add
and
mov
in
mov
add
frstor
xchg
cmc
dec
inc
dec
aaa
filds
inc
movsl
shrl
shl
pop
int
push
sub
movsl
sbb
insb
add
pusha
nop
mov
nop
pop
into
ljmp
cmp
adc
pop
insl
je
push
xor
or
push
call
ss
lock
rorl
out
xor
das
add
adc
addl
insl
setae
fimull
int
clc
mov
mov
jmp
add
stos
stos
ljmp
push
lods
sbb
xor
jnp
push
add
jb
pop
mov
movsl
cmpsb
pop
dec
sub
cmp
or
scas
sbb
xchg
and
iret
inc
sub
mov
nop
imul
stos
and
add
push
std
pop
outsb
loop
mov
ret
addr16
push
fbstp
pop
in
sub
shl
mov
xorl
int
aam
or
push
fmull
aad
cmpsb
mov
pop
mov
push
mov
push
mov
lea
loopne
pop
cmp
xchg
dec
cmp
mov
aad
ljmp
mov
out
adc
outsl
xchg
cs
decl
lret
mov
aaa
jno
mov
sub
rol
aas
push
mov
xchg
incw
or
pop
jmp
popf
dec
jbe
shr
ret
jo
iret
dec
xchg
pop
insb
mov
sub
mov
inc
add
and
xor
jle
lock
sbb
xchg
or
mov
out
pop
sbb
notb
cmpb
and
loop
mov
into
push
sbb
mov
jae
arpl
mov
jg
push
dec
nop
test
aad
sbb
and
cmc
or
filds
scas
inc
xor
dec
mov
xchg
xchg
cmc
cmc
mov
ljmpw
into
cmc
sti
xorb
nop
ficoms
jecxz
push
cs
movsl
enter
dec
sarl
js
loop
push
pop
jl
movsl
xchg
das
lcall
pop
cmp
scas
mov
ficoml
fsts
cli
add
dec
fcomip
testl
filds
inc
mov
cmp
lret
mov
pop
push
mov
inc
mov
mov
gs
xchg
pop
mov
mov
add
insl
mov
jle
inc
jecxz
ss
and
dec
idiv
sahf
cmpps
cmpsl
add
xchg
inc
test
js
pop
mov
push
lods
jnp
clc
adc
lret
icebp
divl
mov
dec
adc
es
lret
popa
inc
adc
xor
add
jne
cmp
push
mov
mov
push
mov
add
jb
mov
cli
mov
sbb
mov
hlt
insb
inc
cmpb
scas
lahf
insl
adc
xchg
inc
fistl
rclb
mov
jne
sub
call
clc
dec
push
in
xchg
mov
rcrl
mov
xchg
push
cmpsb
pop
stos
dec
mov
dec
pop
out
pop
cld
and
cmpsl
dec
stos
lea
jg
sub
mov
cmpsl
lods
divb
cmp
cmpsl
fisubl
iret
push
arpl
shl
popf
sub
stos
leave
jmp
imul
movsb
push
lea
mov
add
inc
pop
sub
rcr
jbe
fcoml
cld
mov
in
add
push
je
pop
xchg
sbb
jns,pn
mov
sarl
fs
sbb
lea
cmp
jecxz
pop
add
sub
out
push
jl
add
push
fildll
inc
sub
add
mov
fwait
jmp
and
fcoml
mov
shll
repz
mov
mov
add
out
adc
and
sbb
push
popf
shlb
gs
mov
mov
xor
dec
push
xor
pop
test
sahf
inc
pop
lods
daa
push
cmp
xchg
push
mov
and
aaa
loopne
cmpb
pop
inc
adc
lret
xor
and
cltd
dec
fldcw
sub
inc
push
sbb
lcall
cmp
sbb
jle
xor
xchg
push
movsb
repz
sub
test
mov
lods
jg
mov
push
xor
scas
jecxz
rorl
xchg
int3
lds
popf
sbb
in
push
insb
sbb
push
and
and
cmp
jae
inc
xchg
iret
adc
ljmp
out
lahf
lea
adc
pop
sub
xor
out
xlat
loop
test
push
inc
ret
mov
sbb
xor
mov
pop
add
rcl
jb
and
push
sti
cmp
sbb
rcr
scas
mov
jb
dec
jbe
cmp
std
adc
add
dec
fistps
jp
sbb
insb
pushf
fistpl
shl
repz
pop
pop
jae
scas
fsts
push
and
les
test
jo
cmp
aaa
inc
dec
mov
rol
cmp
jb
xor
adc
shr
out
mov
cmpsb
or
imul
addr16
dec
js
rcrb
outsb
cmp
jge
mov
jmp
scas
push
and
repz
ret
dec
in
int3
repz
lret
cmp
or
mov
sub
jge
loop
jnp
jb
popf
ret
nop
aam
enter
dec
push
add
pop
inc
pop
out
repz
loop
dec
mull
iret
outsl
popf
inc
mov
jecxz
movsl
divl
dec
cmpsl
gs
xor
mov
mov
ljmp
sbb
dec
xchg
pop
inc
and
dec
and
daa
push
ja
push
daa
sbb
popa
jle
cmp
push
repnz
imul
fsub
imul
in
cmpsl
xchg
cmpsl
xchg
leave
and
repz
xor
lret
sub
dec
out
addr16
aam
nop
push
fwait
cli
adc
popf
push
insb
and
in
jg
sbbb
cmp
movsb
in
scas
arpl
pop
cmp
jmp
mov
or
cmp
sbb
xor
or
xor
mov
in
jp
push
pop
pop
mov
and
dec
xor
jge
out
in
pusha
mov
out
sahf
dec
aas
push
pop
test
loope
push
jne
loopne
cmp
pop
sub
cmp
mov
xor
divb
sub
pop
jecxz
inc
dec
add
xchg
fsubp
int3
inc
add
sub
mov
inc
shl
test
dec
jns
pusha
je
ret
gs
pop
or
call
dec
mov
loope
cs
add
or
inc
scas
bound
repnz
and
data16
and
stos
xchg
add
std
adc
cmpsl
sbb
pop
jle
sahf
mov
push
push
movb
dec
iret
rcrl
inc
out
fwait
xor
mov
dec
push
mov
arpl
xlat
mov
cld
pop
into
or
mov
or
and
inc
push
cmc
fwait
ret
pop
pop
xor
sahf
push
call
pop
mov
sbb
insb
mov
sub
movsb
orb
cmpsl
sbb
fldcw
lods
shl
fimull
paddusb
xchg
lods
test
out
mov
mov
scas
jo
push
test
and
insl
lea
mov
test
push
add
hlt
cmpsl
outsb
out
cmp
mov
imul
mov
add
aaa
imul
pop
fsubrl
xchg
in
cmpsl
aaa
addr16
scas
rcl
aas
mov
push
and
mov
xchg
jbe
ja
mov
jecxz
outsl
cmpsl
shrl
add
xlat
jge
cmp
in
loop
mov
nop
and
or
mull
add
adc
stc
dec
fucom
outsb
test
aas
pop
or
pop
in
cmp
dec
ret
ret
testl
pop
subl
inc
enter
xlat
dec
lds
push
mov
sbb
icebp
mov
jne
rorb
popf
scas
sbb
std
add
or
dec
mov
mov
movsl
mov
ret
adc
gs
xor
or
popf
sbb
fs
ds
cmpsb
cmpsb
mov
sub
enter
test
xchg
mov
enter
and
xchg
and
mov
mov
sti
fdivrl
mov
cmp
je
sub
sahf
cmp
dec
push
stos
sub
fistpll
dec
movsb
test
cmpsb
imull
xchg
cmp
je
bound
mov
fiadds
pop
sub
mov
mov
adc
aad
fwait
push
out
scas
push
stc
pop
add
out
and
in
push
xor
adc
mov
lret
and
scas
mov
mov
dec
andb
mov
and
inc
xchg
and
cwtl
mov
roll
or
jmp
sar
call
ret
out
testb
mov
out
xor
ja
jo
xchg
mov
imul
js
pop
inc
test
orb
push
inc
out
loope
sti
mov
scas
gs
movsb
push
flds
shlb
xchg
jb
xchg
or
int3
out
aam
and
cmc
sbb
adc
test
adcb
inc
push
pop
sbb
mov
jne
push
push
adc
js
mov
cmp
iret
fwait
and
or
add
mov
adc
cmp
sbb
adc
ret
add
mov
xor
outsl
daa
inc
leave
cmc
xchg
adc
arpl
mov
pop
pop
sub
xor
push
sbb
cmp
mov
mov
xchg
mov
test
push
lds
push
xchg
cmp
xchg
inc
and
inc
cld
cmc
pop
or
es
pop
cmp
cltd
adc
push
cmp
mov
loopne
jmp
icebp
mov
mov
push
sbb
bound
rol
cs
xchg
std
mov
inc
xor
shlb
mov
das
iret
cmpsb
mov
adc
sub
sahf
aas
loop
stos
dec
xlat
sbb
dec
aas
out
cmp
fldcw
pop
lods
push
orl
xor
lahf
adc
adcb
mov
lret
and
fstpt
or
pop
xchg
arpl
mov
sub
add
pop
roll
int3
push
out
pusha
push
iret
in
fs
lcall
subb
sub
aas
outsb
rep
in
inc
xor
lret
push
test
and
test
dec
or
pop
lcall
xor
mov
mov
push
inc
icebp
push
js
inc
lcall
out
adc
inc
in
and
out
ficoml
bound
int
int
ret
add
jl
dec
xor
cmc
repnz
add
adc
lret
add
fcomps
cmp
adc
jle
jmp
inc
mov
pop
cmp
popf
fcoml
xorb
mov
inc
adc
inc
cmpsb
xchg
xchg
movsl
pop
sbb
and
rcl
idivl
in
inc
mov
adc
insl
and
cmp
rol
pop
sbb
in
out
test
add
mov
mov
or
faddl
or
inc
cmp
or
clc
movsb
add
sbb
std
xor
xchg
xor
inc
call
mov
jl
loopne
jb
cmc
ljmp
jmp
nop
insb
dec
mov
adc
nop
arpl
aas
ds
and
outsl
mov
and
push
mov
mov
add
pop
leave
insl
in
shlb
lea
push
les
test
xchg
jnp
adc
test
xorb
ja
push
flds
mov
adc
inc
out
adc
fs
call
fidivrs
imul
push
outsb
dec
xchg
sbb
daa
in
jmp
iret
dec
mov
and
popa
lods
into
aam
cltd
and
dec
or
push
int
test
into
mov
out
repz
inc
leave
pop
rolb
rcr
fistps
sti
inc
aad
push
imul
jae
push
call
xor
jb
inc
dec
inc
xchg
aas
rcll
scas
jnp
cmp
mov
sahf
sti
add
add
lds
add
adc
icebp
lods
or
adc
data16
adc
adc
aad
push
mov
sti
mov
outsl
aad
clc
mov
in
push
iret
sub
sub
jecxz
cwtl
pop
mov
nop
adcb
lahf
ret
xchg
fisttpll
test
outsb
jecxz
sub
mov
out
insl
lods
xor
and
hlt
out
cmpsb
pusha
je
enter
jmp
push
pop
out
adc
jg
push
xchg
cmpsb
xor
loop
outsl
and
insb
scas
inc
add
adc
in
cmp
push
dec
fcos
add
jp
ss
test
push
insb
mov
sbb
and
in
xchg
movsb
lcall
and
and
pop
repz
xor
cmc
mov
mul
es
icebp
jge
call
fwait
int
add
gs
and
into
adc
jg
push
sbb
inc
push
add
mov
lcall
les
repnz
push
xchg
xor
cwtl
push
pop
pop
arpl
imul
pop
dec
iret
inc
int
lret
daa
cwtl
cli
push
xchg
aaa
cld
cmp
mov
insl
pushf
stos
sti
movsb
mov
inc
cmp
movsb
sub
pop
and
add
lds
dec
fbstp
lahf
mov
and
out
add
addr16
mov
lea
mov
mov
fnstenv
lock
pop
repnz
push
mov
cmpsl
adc
mov
dec
rclb
nop
inc
xor
mov
imul
xchg
in
xchg
xchg
push
mov
cli
sub
push
xor
mov
adc
adc
or
pop
loop
or
aas
dec
shrl
std
movsb
sbb
jmp
inc
push
sahf
add
incb
stc
insb
inc
push
in
dec
xchg
pop
movsb
xor
aas
movsb
nop
jmp
xchg
icebp
movsl
and
data16
fdivr
popa
mov
mov
ljmp
inc
jae
push
mov
and
lods
pop
push
dec
mov
scas
inc
je
in
mov
jb
cmp
or
mov
xchg
test
sbb
pop
xlat
in
jle
dec
out
sbb
enter
mov
in
les
fdivl
cmp
and
ficomps
aas
aad
es
mov
ja
push
push
jp
leave
insl
fdivl
sbb
ja
jp
add
push
es
sti
jbe
or
sub
and
jmp
scas
mov
ds
or
stc
push
xor
sub
stc
mov
fwait
jo
sbbb
and
test
push
dec
sar
inc
sub
lret
les
shrb
das
mov
xchg
add
daa
popa
fsubrp
inc
cmpsb
xchg
jbe
out
adc
mov
std
jae
xchg
popf
xchg
popf
sub
hlt
aaa
mov
mov
jbe
jecxz
sbb
cltd
push
or
add
xor
sub
bound
xor
sub
push
ret
lret
and
inc
mov
dec
outsb
pop
sub
data16
jne
icebp
daa
cmp
daa
jno
stos
push
out
sub
rcrl
xor
adc
pop
jmp
nopl
ljmp
jo
dec
xchg
shr
mov
or
sahf
inc
sbb
outsl
cwtl
jb
test
insl
flds
test
iret
push
or
nop
ljmp
pusha
test
pushf
pop
and
xchg
pop
jbe
mov
mov
mov
gs
mov
daa
add
and
push
xchg
inc
pushfw
aaa
pushf
push
jae
in
or
out
rol
jno
mov
sub
clc
xchg
push
sbb
fldt
sub
leave
aaa
xor
addl
aam
mov
mov
lcall
mov
fmul
and
dec
icebp
dec
cld
push
pop
mul
shll
je
in
lret
push
and
imul
jae
add
test
mov
jp
out
add
pop
sub
repz
push
jno
pop
xchg
outsb
mov
testb
dec
xchg
jmp
outsl
cmpsb
pop
arpl
xor
mulb
in
in
clc
sub
dec
add
sar
inc
and
inc
mov
cwtl
mov
in
sbb
addr16
mov
mov
lods
mov
adc
and
xchg
gs
arpl
clc
iret
mov
repnz
jle
xor
xchg
dec
enter
loopne
mov
xor
into
adc
dec
incb
dec
jmp
dec
movsb
fwait
xrelease
xor
pop
das
push
dec
or
leave
push
mov
and
cmp
dec
inc
scas
cmp
inc
shll
sbb
pop
mov
and
sub
mov
sbb
push
sbb
dec
inc
leave
fs
ds
pushf
jnp
cmp
aad
and
xchg
mov
pop
lock
inc
pushl
dec
xor
jno
pop
icebp
hlt
sbb
jae
fsubrl
aas
in
leave
push
mov
inc
pushf
leave
xchg
sub
or
jl
jno
mov
jp
xchg
xlat
aaa
andl
jae
jmp
xchg
pop
xchg
clc
or
mov
sbb
or
mov
or
rclb
test
mov
inc
pop
xlat
inc
pop
mov
xchg
mov
fwait
daa
xor
xchg
xlat
xor
mov
das
test
cmp
mov
pop
xchg
inc
fld
pminsw
mov
mov
push
push
insl
ret
push
adc
ljmp
ja
popa
int
sub
ljmp
popf
icebp
jp
sub
test
jne
pop
lds
sti
adc
in
cmc
mov
mov
in
cmp
jmp
jae
rcrl
ja
mov
cmpb
push
sbb
and
sbb
adc
cli
subl
std
popf
cmpsb
adc
or
cltd
sbb
fstpt
push
fstpl
ret
lret
mov
movsl
push
inc
imul
mov
fsubrl
dec
adc
fcoml
add
mov
xor
stc
inc
and
adc
ret
ret
out
xlat
adc
stos
pop
push
sahf
stos
mov
xlat
pop
mov
arpl
sti
pop
sbb
fwait
hlt
dec
inc
sbb
cld
popa
test
or
mov
clc
xchg
negb
jne
push
pop
shll
shll
or
inc
dec
sbb
push
dec
pop
cmp
cmp
cmpb
mov
ja
cltd
or
adc
addb
stos
mov
scas
stos
cli
sub
pop
xor
dec
addr16
mov
cmp
pop
sbb
dec
sub
add
cwtl
sbb
repnz
adc
sahf
icebp
mov
and
xor
ja
fs
xchg
push
lea
mov
paddb
xchg
scas
pop
push
sbb
test
insb
and
add
aam
xchg
xchg
popa
aad
push
or
pop
and
mov
paddw
stos
push
je
adc
cwtl
pop
or
in
add
jb
daa
fnstcw
loopne
sub
jl
mov
outsl
xor
gs
out
imul
jo
stos
call
inc
jecxz
fidivs
and
in
in
mov
push
rcll
in
fs
jmp
orb
push
fptan
xchg
mov
push
mov
in
cmc
add
sbb
dec
js
into
repz
leave
imul
lods
cwtl
inc
push
inc
clc
jl
pop
cmpsb
lods
inc
or
ret
orb
popa
push
inc
call
ret
inc
cmp
cmpsb
mov
int
sbb
mov
jmp
movsl
outsl
test
js
push
lods
jge
mov
sub
fdivl
fdiv
inc
out
mov
fwait
mov
jne
and
sbb
cld
or
fdivl
ja
xor
inc
ljmp
fsubs
xchg
mov
and
ret
ret
in
pop
shl
push
ljmp
rorb
sti
test
fwait
jecxz
mov
repnz
push
add
cld
shr
cmp
scas
sub
dec
cmp
inc
inc
stos
pop
orl
jl
imul
push
subl
aaa
fisubrl
pop
xchg
add
xchg
pop
out
xchg
repnz
lods
incb
cmp
insl
popa
pop
iret
or
push
and
mov
fldcw
into
popf
add
or
xchg
jbe
cmp
gs
mov
rcr
mov
popa
mov
jmp
cmc
add
fdivr
subl
in
push
mov
add
mov
mov
sbb
lock
jbe
rolb
jmp
out
sbb
cs
mov
mov
mov
loop
iret
in
xor
std
add
in
push
xor
into
or
imul
loop
enter
sbb
pop
enter
lods
xchg
mov
xlat
jg
dec
stos
cmp
popl
mov
rcrb
inc
fxtract
mov
leave
mov
pop
aad
xchg
jbe
cmc
mov
aam
pop
pop
rorl
pop
jnp
cmp
cmp
sub
add
adc
mov
or
cmpsl
ja
incb
pop
mov
add
jne
sysret
adc
xor
popa
push
lock
shlb
cmpsl
loopne
cmp
ljmp
xlat
sahf
data16
fisubl
ljmp
test
js
pop
enter
adc
mov
push
daa
dec
dec
pushf
imul
sbb
sahf
pop
sub
pop
ljmp
int3
in
insb
xchg
in
mov
scas
insl
or
test
gs
lea
xor
aad
outsb
lock
icebp
adc
mov
adc
rcrb
test
loopne
lods
imul
repnz
pop
cmp
daa
les
outsl
cld
pop
add
push
xchg
add
jns
or
fnstsw
lret
mov
and
mov
imul
stc
or
loope
out
icebp
stos
add
xlat
push
mov
cmp
div
repz
data16
cmp
push
inc
lret
sti
dec
mov
mov
cmp
inc
cmpsb
fs
int
push
sub
fcoml
mov
adc
in
lock
push
movhps
xchg
xchg
xchg
push
push
fs
adc
mov
aam
xor
jns
jnp
je
push
pop
gs
pop
xor
inc
mov
jno
mov
fidivl
fldenv
cmpsl
sbb
sub
ret
jle
sbb
insl
das
mov
lcall
lahf
inc
xor
xorb
xchg
sub
call
repz
bound
lods
mov
mov
outsl
adc
pop
mov
push
lds
sub
fmuls
jae
xor
pop
int
repz
repnz
mov
clc
xor
xchg
and
adc
pop
xchg
jg
dec
mov
rolb
dec
add
sbbl
ret
xlat
sub
push
neg
mov
test
mov
mov
add
mov
push
mov
repz
stos
cmpsl
mov
dec
mov
adc
cld
sub
hlt
adc
xchg
xchg
clc
and
jmp
repz
jmp
push
mov
adc
cld
push
loop
pop
or
test
cli
sbb
push
mov
jmp
roll
xlat
pusha
movsl
movsl
nop
or
and
shlb
pop
clc
jno
mov
inc
mov
jne
outsb
js
inc
pop
scas
js
pop
and
pop
insl
xor
or
mov
inc
popa
test
scas
fmuls
pop
inc
cmp
xchg
xchg
scas
adc
xchg
fdivl
push
clc
ret
loopne
outsb
repz
leave
aaa
sub
std
mov
inc
adc
sbb
mov
loopne
sti
push
daa
imul
sbb
pop
pop
test
xchg
adc
int
xor
out
inc
nop
xchg
outsb
push
sbb
sub
mov
cs
sti
in
and
xchg
ds
pusha
jnp
sbb
pop
push
fiaddl
js
fmul
sahf
jl
popa
sbb
add
arpl
cmp
loopne
pop
insb
fs
lds
ret
adcb
cmp
lock
mov
adc
lret
lahf
insb
sti
push
xlat
dec
cmp
and
icebp
push
imul
notb
push
inc
outsl
push
mov
and
ss
sbb
add
sbb
jge
js
movsb
in
sub
stos
pop
push
push
push
cmp
out
lock
dec
cmp
loopne
pop
inc
lret
cmpsl
or
xlat
iret
jae
ret
lcall
bound
pop
pop
mov
stos
cs
aad
stos
cmc
repnz
jg
daa
fldenv
fidivs
repnz
testl
push
pop
in
cwtl
lock
cltd
pop
mov
je
sub
jne
popf
arpl
hlt
or
mov
push
mov
cli
pop
pop
sbb
mov
dec
je
int
push
sbb
and
mov
fldt
outsb
rclb
add
mov
movsl
xchg
sbb
std
in
adc
jmp
mov
jne
pop
mov
xlat
xchg
repz
in
scas
cmp
xchg
add
incl
pusha
cli
sbb
scas
jo
sbbb
or
roll
das
mov
gs
add
sbbl
clc
rorb
push
sbb
sahf
mov
test
cmc
gs
mov
shlb
out
arpl
xor
loope
mov
mov
out
cwtl
add
mov
xchg
jb
cmc
int
inc
rolb
lds
arpl
pop
sub
add
sahf
cwtl
xor
add
outsb
int3
arpl
adc
aam
xlat
add
pop
pop
in
rol
mov
mov
xor
mov
pop
popf
push
sbb
cwtl
xchg
ljmp
adc
or
mov
fstpt
xchg
cld
sbb
cltd
fcoms
adc
xchg
adc
push
in
pop
shll
fs
sbb
and
sub
pop
popf
mov
push
pop
mov
cli
imul
aas
cltd
xor
inc
push
sbb
repz
scas
loopne
movl
mov
arpl
leave
shl
sub
popf
daa
inc
sub
sar
xchg
jne
xchg
stos
jb
insl
stc
movsb
test
push
mov
out
imul
push
std
mov
scas
mov
cmpsl
nop
ds
in
int3
jg
das
movsl
notl
addr16
sarb
mov
bound
sub
push
in
pushf
andl
pusha
push
xchg
pop
cld
insl
rorl
pop
insb
push
int3
jge
cmp
pop
outsb
cmpsb
std
adc
sub
xor
pushf
cld
and
pop
cwtl
movsb
cmp
test
pop
popl
cmpsb
xchg
popf
dec
dec
dec
sub
inc
xor
cmp
add
les
xchg
mov
cmp
jnp
pushf
mov
andl
lcall
xchg
sbb
leave
sub
fldl2t
cmpsb
sub
pop
cwtl
mov
push
jp
sbb
insb
cld
fmuls
lret
cmp
sub
fxch
shl
fwait
inc
popf
out
test
or
fildll
insb
fs
mov
cwtl
xchg
pop
js
aaa
mov
mov
jmp
cmp
inc
adc
cmp
jae
lods
mov
sbb
xchg
jmp
add
daa
lret
mov
or
jnp
js
lds
dec
mov
mov
sahf
jb
or
test
mov
mov
arpl
aad
push
stos
cltd
pop
add
bound
paddq
inc
mov
xchg
idiv
lret
mov
lret
inc
in
mov
mov
jecxz
cmpl
mulb
lock
push
add
dec
dec
pop
mov
xchg
icebp
insb
lcall
ret
and
mov
xchg
add
addr16
into
push
test
loopne
daa
jae
int
rcrl
dec
jne
addl
lock
xchg
push
push
jae
sbb
adc
sbb
mov
imul
out
clc
and
arpl
push
dec
fsubr
cs
sbb
mov
xchg
clc
clc
add
out
test
mov
imul
scas
xchg
fcoms
leave
iret
jg
xor
sub
enter
addr16
dec
mov
sub
push
popa
js
or
std
xchg
pop
outsl
adc
pop
mov
add
xchg
mov
cmp
lods
add
arpl
inc
ret
imul
repnz
xchg
jg
nop
insb
popa
test
and
and
ret
or
xchg
pop
int
pop
jne
sbb
ja
das
ret
dec
push
or
imul
repnz
or
pop
in
pop
push
mov
add
xor
inc
clc
std
insb
sbb
rclb
nop
lahf
sbb
and
jb
js
imul
cli
cmp
pop
into
adc
aaa
fwait
sbb
jb
fdivs
xchg
fistl
repnz
jl
push
je
adc
fbld
inc
or
push
jns
clc
cmp
cmp
pop
or
mov
hlt
xlat
jbe
cmc
inc
mov
mov
xchg
jns
out
xor
stc
or
dec
mov
inc
mov
mov
outsb
aad
or
mov
ficoml
adc
test
out
aam
cltd
cmpsb
sti
push
xchg
fs
inc
inc
out
imul
jg
jne,pt
add
les
pusha
adc
adc
jb
push
lds
in
aaa
stos
or
pusha
je
push
xor
out
repnz
int3
movb
jns
arpl
imul
jns
pop
jg
jl
lds
stos
xchg
xlat
and
loop
les
inc
repz
popf
jbe
pusha
or
pop
adc
addb
aas
sub
bound
pop
in
in
in
adcl
xchg
pop
popf
or
and
movsb
mov
fst
cmovo
pop
cli
std
or
scas
das
mov
pop
pop
cs
jno
dec
adc
push
jg
out
add
out
dec
adc
xor
std
mov
add
fidivrl
push
mov
add
mov
mov
test
sub
and
fs
cwtl
sub
test
js
dec
ss
imul
mov
mov
dec
es
sbb
imul
jl
ja
cltd
leave
sbb
cmp
push
sbb
mov
pop
rcrb
mov
mov
mov
or
jl
hlt
xlat
jmp
adc
xchg
andb
mov
lcall
and
inc
shlb
adc
push
loope
pop
cmpsl
mov
daa
pop
dec
sbb
jmp
insl
out
daa
aad
add
shrb
test
inc
out
mov
push
xchg
dec
mov
mov
pushf
inc
rcrl
push
mov
xchg
stc
xor
lcall
stos
sahf
mov
jg
mov
lret
xchg
dec
sbb
jo
shlb
mov
adc
fs
sti
aas
push
test
mov
add
sti
mov
gs
cltd
push
incb
xor
imul
out
push
scas
xchg
addl
sub
xchg
mov
clc
je
pop
negl
pop
mov
xchg
les
ficompl
dec
lahf
pop
sbb
cltd
push
imul
out
pusha
or
mov
add
out
jp
mov
inc
cmp
sbb
enter
iret
sti
test
adcl
add
mov
mov
lods
and
dec
das
cwtl
sbb
mov
mov
sbb
cmp
test
push
adc
repnz
aaa
or
add
push
daa
outsb
out
insl
loope
push
mov
dec
mov
push
jo
in
mov
xlat
xor
daa
int3
xchg
jo
push
insb
fmuls
mov
sbb
jbe
mov
mov
adc
aaa
pop
inc
aaa
fst
daa
push
mov
inc
out
cmpl
push
sbb
into
in
iret
arpl
pusha
jae
mov
adc
mov
call
inc
dec
clc
out
push
je
push
jbe
and
jns
jmp
loop
mov
lds
addb
add
dec
mov
cs
sarb
pop
dec
pop
mov
sbb
push
popa
mov
push
fwait
or
dec
lea
add
sub
into
xor
loopne
or
jg
push
cmp
jnp
add
ja
testl
stc
pop
push
mov
out
popa
out
sub
lea
mov
xor
sahf
arpl
iret
xor
adc
addr16
and
cs
push
xor
sbb
pusha
insl
popa
xor
xor
fidivl
cltd
insl
shlb
ja
pop
pop
test
or
hlt
adc
test
cmp
movsl
ljmp
mov
mov
mov
ja
ja
nop
pop
push
cltd
mov
add
sarb
adc
sub
pushl
movsl
sub
addl
test
lea
jbe
subl
mov
fstpl
and
sub
push
movsl
sbb
cmp
and
pop
sub
scas
or
out
cmpb
sbb
aaa
mov
xor
es
or
mov
or
pop
sbb
dec
mov
sub
aam
xor
push
daa
roll
loopne
or
xor
adc
jge
xchg
int
call
nop
inc
ret
xchg
incb
mov
loopne
in
addr16
lcall
lea
int
jbe
aas
mov
or
cld
ret
adc
add
sbb
mov
push
scas
or
aaa
lahf
mov
or
sarb
frstor
gs
lock
pop
xor
mov
lret
mov
xor
in
pop
mov
or
push
fmul
jl
or
cmp
out
adc
es
cmp
movsl
ficompl
clc
cvttps2pi
cli
das
sbb
sbb
das
in
xchg
sbbl
push
add
and
mov
mov
cmp
repz
xor
lsl
pusha
std
bound
cmpsl
cmpsb
movsl
adc
xor
loopne
and
out
jmp
jge
popf
shlb
outsl
nop
sub
sarl
adc
xchg
mov
adc
int
add
fwait
pop
cwtl
jmp
adc
sbb
sahf
sub
dec
or
jno
jo
mov
es
pop
cmp
js
mov
in
or
repnz
mov
je
cmp
jo
mov
stos
xchg
scas
jecxz
pusha
adc
in
xchg
sub
xchg
scas
xchg
jo
pop
adc
mov
test
mov
arpl
lods
xor
pmaxub
stc
jnp
xchg
int
mov
and
and
jecxz
mov
cli
push
pop
xor
adc
cmp
popf
dec
mov
mov
ss
mov
adc
pop
je
xchg
ds
jl
test
and
sub
je
add
fstpt
xor
push
lahf
jmp
mov
sqrtps
test
aas
dec
jmp
lods
repz
pop
mov
pop
jbe
test
mov
andb
gs
cltd
inc
add
es
jg
mov
fwait
insb
mov
push
rcrl
jge
mov
jl
cmc
mov
and
sbb
and
jno
outsl
jge
push
add
mov
lods
xchg
cmp
mov
push
lcall
cmpsl
ret
mov
jmp
in
mov
jp
fs
or
push
sbb
ret
imul
mov
sbb
pop
lds
mov
push
outsb
mov
dec
mov
rorb
out
cmp
cmp
cmc
xchg
jmp
insl
cwtl
pop
adcb
mov
add
mov
push
iret
mov
pusha
jg
mov
pop
popf
aaa
mov
ret
loop
pop
cld
cmp
push
inc
les
push
data16
fbstp
or
hlt
iret
ret
xor
fidivrs
mov
ja
rorl
mov
xor
jns
dec
pop
ret
pop
inc
adc
cmp
notl
fcmove
sbb
rcr
push
test
scas
lock
mov
cs
popf
clc
incl
rcrl
or
jecxz
push
push
or
lock
push
insl
sub
sub
repnz
loopne
jl
lret
dec
and
lea
dec
pop
in
pop
fwait
mov
bound
stos
cmp
xchg
imul
sub
aas
sbb
mov
iret
adcl
jno
pop
dec
andl
test
push
cmp
sub
inc
push
gs
lock
or
sbbl
sbb
andb
subb
mov
mov
fnstsw
loopne
ret
add
dec
jmp
movsl
outsb
lcall
std
sbb
jnp
and
or
in
mov
insl
or
gs
hlt
stos
cmpl
sbb
push
pop
mov
mov
mov
jge
push
mov
leave
jno
and
cmpsb
mov
sti
add
xor
mov
and
dec
jp
xchg
sub
call
mov
xchg
dec
incl
pop
in
mov
add
push
mov
adc
push
and
adc
out
test
sbb
xchg
xor
inc
call
in
or
jmp
add
ja
pop
sbb
pushf
cmpl
xor
xchg
push
sbb
and
xchg
test
xor
sub
mov
repz
or
test
xchg
fldenv
daa
in
mov
test
hlt
das
inc
or
mov
rol
fnsave
inc
lea
pop
fs
and
xchg
arpl
in
dec
outsb
test
scas
sbb
mov
std
pusha
loope
pop
lret
fs
dec
adc
cmp
int3
rolb
sub
push
push
sub
nop
push
stc
sbb
mov
add
push
mov
mov
sbb
inc
sbb
into
adc
in
cmpsl
jecxz
mov
lcall
push
lods
jmp
rorl
jae
ljmp
fwait
or
and
push
xor
aam
in
pop
ret
xchg
adcl
mov
and
inc
mov
leave
and
fwait
ret
movl
mov
add
and
jle
add
scas
inc
jmp
xchg
inc
mov
jbe
adc
push
aam
mov
pushf
sub
push
test
and
jmp
push
sar
push
enter
sub
cmpsb
push
fucomi
xor
mov
push
rorb
cltd
pop
mov
imul
pop
imul
mov
jmp
add
dec
mov
fdivrl
or
adc
stos
cmp
push
sub
sbb
adc
cmc
mov
ret
mov
dec
int3
xor
inc
and
ds
adc
fimull
add
adc
leave
sub
xchg
rcr
jmp
ljmp
inc
mov
in
sbb
or
sbb
cmpl
push
inc
and
xchg
test
dec
sbb
sti
push
adc
aad
xorb
in
mov
in
xchg
int3
dec
cmp
pushf
fdivp
les
xchg
sbb
sub
mov
dec
lods
cmp
xchg
fiadds
aad
cli
xorb
jle
cmp
pop
cmp
fists
cli
cmp
pusha
adc
cmpl
mov
in
mov
dec
scas
push
and
jno
sbb
sub
inc
movsl
adc
adcb
inc
mov
popa
pmaddwd
jbe
ss
cli
outsl
dec
sarb
int
nop
ss
adc
nop
or
sbb
mov
mov
add
push
jle
sbb
pop
movsb
cs
push
jge
daa
xchg
xchg
inc
push
add
adc
or
cld
lahf
mov
cmp
cli
push
add
sub
sbb
cs
ret
lcall
jne
sar
out
bound
cmp
repnz
xchg
loope
fcomps
sbbl
pop
insl
scas
roll
aas
in
iret
in
adc
cmc
popa
icebp
jmp
mov
outsl
sbb
push
nop
lret
mov
inc
rorl
aad
push
clc
pop
repnz
imul
jl
les
jo
jmp
inc
jp
cmc
pop
negl
xor
cmpsl
shlb
sub
pop
add
cmp
das
aas
xor
aas
cmp
mov
sbb
in
icebp
or
mov
js
lods
xor
sbb
mov
xchg
sbb
jbe
mov
loope
insl
mov
xchg
pop
and
pusha
aad
daa
add
ffreep
stc
jnp
mov
in
clc
mov
hlt
out
push
xlat
jbe
sarb
repz
sub
mov
or
cmp
mov
cmp
int3
dec
push
mov
dec
faddl
adc
xchg
push
rcl
fs
test
push
adc
fs
fisubrl
adc
in
mov
and
cmp
xchg
inc
sbb
ss
out
sbb
sub
cli
mov
jle
and
fmuls
mov
mov
or
push
inc
jmp
mul
ss
inc
pop
inc
shll
xor
dec
dec
lret
cmp
mov
jmp
and
add
in
test
test
jnp
and
pop
call
mov
xchg
test
push
jbe
test
sbb
xchg
andb
std
jecxz
mov
or
xor
sbb
insb
push
sbb
push
es
mov
jnp
clc
insl
xor
lods
inc
fdivs
popl
in
push
adcl
cmpsb
dec
dec
stc
aas
out
or
add
lahf
sbb
lcall
outsl
xchg
or
add
ret
js
inc
std
cs
inc
adc
int
ss
fdivl
out
sbb
pop
xchg
add
or
xor
lods
adc
mov
sarb
mov
and
pop
std
lods
icebp
xchg
adc
xor
push
mov
mov
sbb
mov
and
test
xchg
cmpsl
fimuls
lret
pop
aas
pop
xor
arpl
imul
mov
cmp
sub
es
fdivrl
loopne
jg
push
fwait
paddq
mov
insb
inc
xchg
adc
int3
mov
cmp
popa
lret
or
loop
cwtl
xor
lret
aam
xchg
je
cmp
cmp
jmp
pop
insb
loopne
lds
bound
scas
inc
add
mov
je
jb
mov
stc
mov
movsb
push
iret
sbb
lcall
push
xor
push
cmp
cmovns
lcall
fs
hlt
mov
mov
stc
pop
jb
mov
pop
mov
sbb
rcll
push
sub
jns
shrl
or
mov
mov
scas
add
xchg
fdivrs
fldcw
int3
loope
jl
add
pop
gs
jae
xchg
cld
xchg
sarl
xchg
movsl
in
lods
mov
xchg
test
nop
loope
dec
fwait
push
sub
xchg
mov
xor
pop
push
pop
lret
lods
push
push
mov
das
fstl
mov
mov
aaa
js
mov
sub
ds
mov
loope
mov
fldcw
push
in
loope
cmp
clc
outsl
mov
dec
mov
sbb
pop
jecxz
mov
rolb
push
mov
add
stos
shr
rcr
gs
dec
xchg
sarb
repnz
cwtl
cltd
and
ljmp
pop
out
push
outsb
push
xorb
lods
or
aaa
dec
sub
mov
and
dec
pop
addl
xchg
aaa
sbb
pop
mov
mov
and
and
and
mov
mov
mov
add
push
mov
popa
xor
mov
out
fsubp
xor
dec
xor
ds
xchg
ss
cli
xor
jmp
dec
popf
dec
daa
rcrb
xor
or
je
stos
fisubrs
jg
and
jmp
dec
xchg
fcomi
rcrb
dec
xlat
js
cmp
loopne
cmp
push
movsl
pop
fnstsw
add
pushf
dec
pop
sbb
pinsrw
adc
push
jg
addb
lock
xlat
push
and
xor
push
sub
mov
loopne
add
arpl
cmp
mov
mov
lret
ficoml
je
fisubl
sub
or
jb
adc
cmpsb
push
or
push
stos
cltd
rcrl
mov
jl
rcrl
xor
mov
ret
push
andl
mov
mov
jge
popf
or
jo
jmp
lods
jb
pop
dec
lret
into
dec
lock
adc
xor
cmp
cmp
call
dec
sub
jle
lock
ljmp
mov
imul
adc
int
int
lods
dec
loop
inc
mull
jecxz
sbb
cmp
lods
cmp
nop
aaa
shl
in
mov
int
fcmovnb
adc
call
test
fcoms
call
ret
mov
shl
add
lcall
je
jnp
xlat
cmpsl
pusha
ja
sti
sub
sahf
add
in
mov
xorb
sbb
pop
and
sbb
xor
insl
or
jns
cld
dec
outsb
mov
jne
enter
scas
mov
adc
arpl
and
jp
jno
push
js
test
nop
jbe
cmc
pop
push
ja
inc
cmp
mov
mov
sub
ja
dec
mov
dec
xor
inc
add
fwait
sub
aas
mov
test
scas
jo
or
sbb
pop
cmp
pop
sbb
clc
pushf
stc
pop
movntq
fcomps
or
add
jg
push
subb
cmc
push
loopne
cmp
addr16
out
pop
fwait
jb
dec
xor
sub
sarb
stos
push
insb
stc
jle
andb
sbb
adcb
std
jno
nop
mov
scas
lea
inc
adc
mov
addr16
cld
xchg
cmp
ret
fistps
outsl
loop
movsb
cmpb
clc
sub
insb
sbb
jl
pusha
imul
popl
ja
popf
or
push
jp
stos
mov
std
ret
mov
cmc
flds
or
inc
ds
aam
dec
cltd
dec
sbb
cmp
lret
pop
popa
mov
cmpsb
dec
insl
cmp
mov
filds
iret
ror
dec
xor
daa
out
xchg
sbb
inc
sbb
dec
or
mov
sbb
jns
dec
rcrl
pop
mov
rolb
sbb
push
insl
cmp
ret
lcall
push
push
jmp
aam
inc
out
sbb
mov
into
mov
fbld
adc
ret
push
jo
push
dec
repnz
mov
enter
mov
stos
dec
adc
mov
mov
xor
gs
mov
mov
enter
loope
stos
push
movsb
fcmovne
mov
push
xchg
nop
rep
neg
or
flds
push
xor
jle
push
lock
aam
loopne
lea
mov
stos
and
je
fs
adcw
mov
jmp
or
icebp
es
jmp
inc
add
mov
jb
mov
cld
push
fisttps
mov
cmc
iret
lods
aas
and
mov
inc
sub
and
add
scas
xor
add
and
cmpsl
pop
lret
adc
stc
adcl
mov
pop
or
mov
jmp
decl
push
pop
push
inc
loopne
sub
xchg
sub
jmp
nop
jg
out
in
pop
xchg
ret
imul
and
jbe
xor
movsl
test
sahf
xchg
cmc
sti
or
push
cmp
shrl
test
outsl
in
jge
test
jg
jmp
je
lods
adc
jmp
popf
sbb
mov
lea
popf
sbbb
push
andl
mov
mov
fdivl
iret
nop
inc
andl
sbb
bound
jo
push
and
jnp
push
je
mov
cli
mov
in
mov
sti
addr16
xor
xor
push
xor
loope
mov
jae
and
push
lahf
cli
mov
pop
mov
lret
mov
xchg
test
mov
xor
jne
mov
in
xor
roll
mov
fldl
inc
jb
icebp
cmc
inc
jmp
fsubr
mov
sbb
mov
dec
jae
fiadds
mov
inc
mov
mov
add
jmp
movsb
mov
sbb
idivb
dec
cmp
mov
aad
clc
mov
jp
push
mov
jle
jle
int3
push
xchg
adcb
aad
xchg
or
mov
push
call
aas
jmp
int
loope
hlt
in
cmpsl
aam
or
mov
xor
mov
incl
or
mov
mov
lahf
nop
cmc
test
sbb
out
ficoms
dec
mov
jecxz
iret
mov
insb
loope
cld
pop
ret
cmp
adc
or
lahf
add
icebp
mov
pop
idivl
in
xchg
push
ret
dec
xchg
adc
and
xchg
inc
jne
push
aad
add
movsb
jle
in
shl
test
or
adc
mov
or
xor
mov
das
out
aaa
adc
fucom
dec
stos
add
dec
stos
arpl
xchg
das
cmc
push
aad
cmp
hlt
enter
pop
push
dec
jno
add
mov
ja
or
stc
lahf
scas
movb
cmc
xchg
mulb
sub
rorb
xlat
or
xorb
jbe
lock
add
nop
push
lcall
lea
in
sub
inc
aad
dec
pop
dec
in
pushf
fidivl
lcall
jnp
fcomi
inc
and
xor
push
lods
das
push
cmpsl
cmp
js
xchg
in
mov
jns
lret
mov
aaa
sbb
adc
aam
xchg
dec
adc
add
or
and
sub
stos
fwait
and
mov
ja
sub
lods
in
lea
sbbb
jp
repz
into
jbe
add
jb
pop
pop
adcb
xchg
or
lret
mov
fldcw
int3
rcrb
mov
test
test
mov
mov
in
fisubl
call
mov
or
xlat
push
or
addr16
push
rcrb
mov
arpl
setge
sbb
jbe
test
stos
shrl
out
imul
xchg
call
or
xchg
inc
sahf
out
mov
rcrb
fisubl
or
inc
outsl
jecxz
adc
iret
pop
jge
push
inc
sahf
repz
inc
mov
xchg
sahf
loope
dec
dec
mov
jle
out
imul
outsb
push
das
into
jno
mov
xchg
push
sbb
adc
sub
or
or
stc
jge
lret
xchg
sbb
addr16
jae
sarb
out
hlt
pop
gs
jns
mov
mov
jmp
mov
inc
aaa
fildll
scas
es
arpl
sub
or
js
prefetch
cmp
jecxz
movsl
xor
fstp
sub
into
and
icebp
rcrl
jbe
ljmp
jge
rorb
inc
jno
mov
ret
xchg
push
imul
addb
sub
mov
stc
dec
inc
or
xchg
push
stos
js
ljmp
xor
fldt
shrb
push
stc
aam
loopne
push
mov
rorl
fstpl
sub
and
cmpsb
aam
mov
cmp
sub
or
adc
sub
outsl
mov
lds
ficomps
add
ret
lock
outsb
imul
add
mov
enter
mov
pop
and
movsl
shlb
or
mov
jp
mov
xchg
jb
addb
int3
jmp
mov
mov
xchg
jmp
jecxz
aaa
mov
push
sub
xchg
xchg
mov
mov
mov
stos
repnz
jge
mov
fcoml
lock
inc
or
mov
ret
push
cmp
dec
xor
jp
or
mov
iret
and
xchg
inc
jb
leave
sti
mov
aas
inc
test
jg
push
cld
mov
cmpsb
outsb
jecxz
xchg
xchg
mov
mov
push
or
lods
lcall
ficompl
inc
cltd
leave
xchg
lods
and
dec
jg
out
cltd
mov
xchg
jecxz
push
cmp
and
fwait
push
mov
or
dec
dec
stc
sub
test
mov
inc
xor
fstpl
xchg
insb
mov
push
test
scas
mov
push
jp
push
repnz
pop
mov
inc
push
mov
mov
or
outsb
adc
inc
inc
xor
lea
insb
and
sub
scas
inc
sbb
mov
dec
je
xor
lahf
sbb
fisubl
repz
popf
cmp
mov
add
jb
push
mov
jp
shll
rorl
test
cld
mov
push
push
mov
dec
pop
icebp
mov
push
pop
and
sub
aam
lret
call
fnstenv
fildl
out
xchg
jns
repnz
test
shr
mov
pop
les
ds
ret
add
cmpl
push
jg
aas
pushf
jo
ficoml
out
cld
push
pushf
clc
sub
adc
xchg
pop
push
xchg
push
dec
push
mov
xor
lock
adc
adc
adc
int3
xlat
fsubs
cltd
outsl
fwait
shlb
xchg
xor
dec
dec
orb
bound
push
xor
dec
sbb
sub
xor
aad
xor
adc
rcll
call
jae
call
cli
push
mov
add
cmpsb
insl
aaa
adc
subl
gs
adc
sub
xor
call
cmpl
adcb
mov
xchg
jge
ss
or
xchg
mov
sub
xor
pop
cmp
nop
push
pusha
shr
jg
or
fucomp
cmp
pop
data16
pop
icebp
dec
mov
test
adc
ja
enter
jg
gs
cmpsb
movsl
lcall
xor
mov
lods
stc
xor
popa
sub
mov
enter
dec
gs
subb
clc
mov
sub
aaa
in
jo
mov
xchg
xchg
sti
mov
enter
xchg
and
inc
mov
xchg
or
int3
and
sbb
popa
cmp
mov
mov
in
cwtl
ds
lock
mov
xchg
and
notl
mov
dec
addl
mov
icebp
popa
mov
hlt
pop
pop
psllw
push
mov
int3
sbb
mov
ss
or
push
adc
icebp
int
xchg
mov
jecxz
mov
inc
in
outsl
pop
mov
mov
nop
pop
lock
movsl
sbb
lea
jno
lea
jo
stos
adc
cmp
jae
clc
or
inc
out
ss
es
xchg
aad
daa
push
fsubl
mov
rclb
test
xchg
movsb
test
inc
iret
adc
aad
loop
or
dec
roll
gs
cmp
hlt
stos
dec
jns
movsb
mov
out
js
rorb
jmp
jle
ret
push
movsb
lods
repnz
cmpsb
push
fsts
inc
or
loope
xchg
ret
or
push
cmpsl
js
into
jge
out
call
lods
jb
pop
mov
cmp
aam
jecxz
cmp
daa
push
dec
sub
mov
or
xchg
jb
jbe
lock
out
addl
lds
push
add
pop
pop
repz
xor
mov
daa
cli
cmc
aaa
fstl
sub
inc
cmc
bsr
jge
nop
jmp
pop
pop
mov
lcall
xor
in
push
xor
inc
aam
out
push
fdivrl
test
lahf
vpsrlq
lods
adc
add
mov
mov
jmp
movsb
or
inc
jecxz
push
cmp
cmp
orl
xchg
ret
in
sarl
loopne
bound
enter
inc
bound
jmp
adc
out
int
out
iret
lcall
add
cmp
inc
mov
das
js
push
push
outsb
push
or
stos
ret
das
nop
dec
mov
aaa
adc
lahf
cltd
sub
nop
lods
ret
push
inc
mov
mov
gs
out
sub
mov
jp
jg
cmpsb
add
push
aaa
ds
cmpb
mov
lods
fiadds
push
mov
std
data16
mov
mov
sub
xchg
adc
rorl
lods
xchg
testb
jle
xor
sub
lret
icebp
add
cmp
xor
xchg
sbbb
cld
mov
das
test
push
pop
sbb
jmp
unpcklps
gs
xchg
jb
sub
ja
mov
mov
ja
pusha
and
insb
ss
lcall
push
push
xchg
sub
xor
mov
jae
fnstcw
mov
jp
hlt
clc
dec
mov
aad
push
dec
shl
shlb
xor
mov
daa
push
inc
inc
inc
mov
fnstsw
ljmp
cmc
lods
arpl
adc
push
pop
adc
xchg
xlat
lea
inc
or
xor
out
das
je
jnp
cmp
int3
ret
xchg
movsl
lds
int3
inc
lds
adc
fildl
xor
mov
in
inc
push
push
and
fbld
lods
gs
ja
cmpb
xor
fistps
or
fdivrp
shlb
test
xor
jb
in
les
inc
fcom
repz
popl
dec
mov
cld
xchg
fwait
jo
add
xor
leave
test
jmp
nop
enter
out
mov
pcmpgtd
and
or
adcl
rorl
push
inc
add
mov
add
out
sub
push
and
mov
pop
dec
sbb
stos
mov
out
icebp
sbb
das
mov
xchg
cwtl
mov
mov
scas
js
sub
out
mov
and
inc
ljmp
mov
test
mov
in
inc
lock
and
push
negl
or
repz
cmp
pop
arpl
lret
cmc
pop
aaa
dec
sahf
mov
ljmp
push
jb
push
push
sarl
test
sbb
jmp
inc
lcall
xor
mov
pusha
rorl
jg
pop
pop
or
out
bound
leave
add
lds
imul
mov
lds
enter
test
jo
js
inc
mov
sub
mov
sbb
fstp
aaa
imul
pcmpgtw
sbb
xchg
mov
adc
jge
movsl
or
dec
fwait
add
repz
jg
out
mov
dec
inc
xchg
popf
pmulhw
test
scas
mov
inc
icebp
ljmp
push
insb
xchg
xor
gs
bound
pop
fldcw
inc
mov
pop
mov
pop
enter
jmp
and
sarl
xor
push
dec
jmp
dec
and
dec
mov
lret
in
in
gs
adcl
mov
sbb
cltd
and
out
jp
cmpb
bound
das
scas
je
shll
inc
sbb
add
jae
push
xor
movsl
pop
push
pop
mov
test
cmp
cmpsb
shl
fmull
sub
push
pop
outsb
jae
cmc
cld
test
popa
jb
pop
xor
jae
xor
cwtl
push
test
into
filds
xchg
dec
sbb
bound
sub
shll
pop
fwait
push
loope
mov
pop
adc
xchg
sub
dec
and
cld
xor
scas
loope
call
jmp
adcl
adc
int3
sub
mov
in
jge
loope
test
outsl
jp
fdivl
cmpsl
sub
out
xor
and
fwait
cmp
jmp
jbe
push
add
lods
pop
xchg
ljmp
jmp
xlat
dec
adc
pop
dec
xchg
lret
mov
dec
into
inc
inc
aam
pop
mov
out
mov
decb
test
repnz
icebp
mov
stos
push
mov
mov
dec
push
mov
xchg
idiv
push
add
std
aam
or
ljmp
imul
pop
jmp
test
cld
je
or
pop
daa
push
xchg
push
mov
stos
sub
pop
mov
mov
sbb
add
dec
lock
cs
jg
out
pop
sub
sbb
sti
int3
xchg
ds
xchg
mov
lods
cltd
sub
shrb
mov
sub
mov
nop
add
adc
lret
hlt
dec
or
mov
dec
addr16
testb
mov
push
arpl
out
push
pop
jne
xchg
jnp
jmp
or
cli
and
dec
cmp
jns
call
mov
movsb
ljmp
jns
int3
jecxz
push
inc
pop
arpl
jecxz
xor
out
lock
dec
add
pop
imul
cltd
ljmp
lahf
sti
jb
push
iret
dec
mulb
pop
scas
jp
scas
inc
sbb
add
and
les
jl
pop
cmc
scas
xchg
std
stos
add
mov
push
pop
call
inc
cmp
pushf
add
and
mov
inc
mov
sti
bound
jb
inc
and
outsb
pop
lds
sahf
sub
stos
fcmovbe
lret
mov
xchg
fcmovb
lods
inc
pop
outsl
jmp
lods
or
lret
enter
imul
and
fcomps
cmp
sub
push
xor
sahf
in
and
scas
sti
cmp
xor
push
sbb
dec
movsb
and
enter
pusha
mov
jge
mov
nop
xchg
inc
repz
nop
pop
std
pop
xchg
pop
and
scas
out
jo
dec
sub
mov
or
inc
pop
and
mov
aas
call
rcr
out
or
call
or
jg
pusha
adc
push
out
out
ret
jbe
push
push
and
cltd
fnsave
repz
int
cs
idivb
clc
in
adc
paddusb
pop
je
ja
push
roll
dec
shll
dec
loope
repnz
scas
mov
sbb
sub
sub
sbb
jge
lock
xor
lret
loop
mov
xor
mov
add
mulps
testb
pusha
push
fldl
push
or
mov
pop
sbb
sar
mov
push
iret
xchg
adcb
mov
push
outsb
mov
add
push
cmp
inc
das
sub
pop
jo
pop
sub
rcrl
xchg
jle
cmpsb
dec
add
ljmp
jbe
push
stos
decb
mov
test
cmpsl
sbb
xchg
orl
cmp
les
fcoms
jnp
xchg
call
arpl
fs
lods
cmp
adc
mov
fsubrp
pop
out
dec
fildl
sbb
jg
xor
xchg
mov
pop
in
sbb
repz
ljmp
repz
insl
jnp
mov
adc
outsl
jecxz
jecxz
pushf
or
sbb
dec
gs
int
out
pop
add
push
call
loope
jg
lds
and
or
fwait
mov
and
dec
inc
pop
mov
fisubrl
out
inc
cmp
fldcw
fsincos
sarl
aaa
mov
mov
lret
dec
mov
xchg
lret
ficompl
loope
jo
icebp
jo
pop
add
fs
push
movsb
push
xchg
jno
aad
pop
pop
mov
call
fcos
pop
sbb
add
cmp
ss
xchg
movsb
mov
divb
add
aad
aam
sbb
xor
fldcw
ret
lcall
rclb
sar
jb
pusha
mov
pop
inc
paddusw
push
jno
jg
outsb
ds
dec
push
add
ror
sbb
pusha
aam
xor
stos
dec
out
xchg
sahf
xor
add
dec
jl
enter
int
cmpb
bound
cmp
shll
and
fidivrs
adc
mov
shll
pusha
mov
pop
dec
nop
clc
mov
dec
xor
fcmovnbe
sub
sub
xchg
hlt
cwtl
dec
jae
xchg
lahf
sahf
ficomps
sarb
rcll
aaa
pushf
add
ljmp
push
loope
std
ret
or
pop
pop
dec
lahf
popf
rcrb
mov
mov
repz
and
and
lea
ss
test
sbb
fdivrs
test
inc
fdivr
rol
loopne
dec
sub
ljmp
jge
es
and
cld
cld
int3
pop
mov
aaa
sbb
jnp
and
jge
jns
dec
fmul
mov
inc
xor
shlb
out
inc
aaa
inc
cmp
jns
jae
repz
imul
dec
sbb
push
lret
out
rorb
je
test
sti
fwait
out
bound
mov
gs
lea
std
rol
pop
lock
das
inc
mov
cmp
pop
fadds
inc
sbb
cmp
mov
and
sbb
xchg
mov
adc
movsl
add
scas
ror
call
mov
in
push
sub
xchg
cli
mov
fwait
test
mov
subb
mov
mov
pop
push
loop
icebp
pusha
and
adc
lods
xchg
in
pop
inc
mov
dec
les
pop
jg
cld
stos
mov
pushf
aam
pusha
pop
or
mov
fcmovnu
pop
sub
mov
or
js
addr16
inc
scas
mov
test
sbb
arpl
dec
jg
test
mov
lods
jecxz
bound
cmp
jl
adc
fisubs
xlat
push
push
cmpsl
xchg
imull
movsb
xchg
sbb
iret
sbb
xor
push
cmp
cltd
add
sarl
push
xchg
and
or
push
icebp
lock
mov
js
outsb
in
xor
pop
push
leave
pusha
test
test
iret
or
testl
or
xchg
cmp
std
add
cmpb
ja
shll
ret
pop
add
ret
adc
shlb
push
push
fstpl
mov
cmp
cmp
daa
stc
push
popa
aas
pusha
cmp
fwait
mov
jg
cmp
fmuls
or
popf
mov
cmpsb
inc
out
jp
cmp
mov
es
loope
mov
cmp
sbb
roll
mov
adc
aad
leave
and
push
stos
test
movsl
xchg
mov
test
and
cmp
icebp
xor
xchg
repz
mov
ds
pop
inc
push
mov
sbb
xor
insl
push
xchg
ljmp
lds
or
mov
cmp
neg
mov
cmp
shlb
out
cmp
mov
inc
lock
test
push
cmp
push
out
inc
sub
mov
lods
mov
aas
shrb
xor
nop
ds
inc
cwtl
sub
xorl
fs
fs
lods
cmpsl
andb
repz
inc
xchg
adc
pop
mov
mov
lcall
jnp
dec
mov
pop
mov
jns
xchg
scas
inc
push
in
mov
xchg
xchg
jl
xlat
call
pop
cmp
cmpsl
inc
loopne
ja
lret
add
or
mov
loop
sbb
xchg
mov
cmp
pop
xor
cwtl
adc
bnd
pop
pop
popf
inc
push
icebp
xor
cli
pop
scas
insb
jmp
mov
cs
ficoms
lock
xor
mov
test
mov
out
jmp
cs
cmp
jo
jmp
mov
lods
mov
xchg
call
pop
out
js
mov
fnsave
xorb
lds
ret
enter
cmpsb
add
push
insb
ljmp
push
xor
mov
pop
test
dec
cmp
fldt
lret
fsubl
mov
adc
in
test
adc
mov
shl
in
push
mov
arpl
xchg
aam
push
push
outsb
or
outsl
fcomip
mov
flds
lahf
stc
incl
push
cmp
pushf
mov
fnstcw
faddp
jg
and
and
cmp
aad
and
sbb
cmp
loope
ljmp
dec
jae
fcoms
insb
push
inc
xchg
pusha
adc
xchg
popf
mov
inc
add
mov
pushf
clc
dec
mov
test
add
nop
test
push
dec
rcl
pop
jecxz
cmp
faddl
test
mov
add
pop
jo
inc
mov
xor
daa
cld
idivb
cwtl
inc
dec
xor
lcall
add
xchg
shrl
push
dec
jle
mov
daa
xchg
and
ret
cmp
incb
data16
jne
lods
scas
ljmp
hlt
or
jle
sub
in
push
mov
lret
aam
sbb
fs
aaa
mov
sbb
fs
fstp
push
jg
icebp
fwait
inc
pop
lock
lds
in
pop
add
xchg
inc
ljmp
addr16
sbb
imul
jl
cwtl
cmp
popl
out
cld
xchg
sbb
pop
adcl
fnsave
jecxz
jg
push
inc
inc
dec
pop
repnz
sbb
pop
jno
lcall
mov
pop
jb
lock
into
dec
add
pop
sbb
xlat
subb
mov
inc
mov
xor
or
fwait
cmp
pushf
xor
movsb
xchg
sub
std
repnz
xor
ss
scas
repz
jge
idivb
icebp
dec
rolb
sbb
andb
pop
leave
xchg
sbb
fstps
pop
or
lret
mov
inc
stos
push
dec
gs
mov
fmuls
xor
sub
aas
mov
mov
negb
sbb
cmpsl
mov
mov
inc
pop
or
jp
dec
push
arpl
lahf
js
or
movl
mov
mov
fcomps
insl
mov
mov
mov
shll
pop
loope
cmp
push
push
fisubrs
mov
mov
mov
stos
dec
imul
int3
movsb
cmp
push
xor
xchg
cltd
push
aam
aaa
pop
in
ret
into
and
mov
and
std
addr16
push
adc
inc
pop
mov
lock
cwtl
movsl
sbb
hlt
mov
adc
stos
cmp
addps
subb
cld
fisttps
mov
in
shrl
negl
mov
lods
out
jae
lret
xor
fsubl
and
dec
dec
xor
fsubs
adc
or
enter
fnstenv
lods
dec
test
shl
dec
imul
pop
test
xchg
dec
ret
repz
bnd
lods
pop
in
pop
jnp
in
cmpsb
das
dec
enter
in
rclb
loope
adc
subb
adc
mov
outsb
jnp
push
and
je
das
arpl
jg
xor
js
jmp
pop
cli
bound
pop
jge
adc
cmp
adc
aaa
movsl
adc
iret
pop
movsb
aas
add
jl
and
scas
dec
test
jg
pop
xchg
mov
into
fldenv
scas
jo
jbe
mov
js
adc
mov
jnp
push
adc
pop
fdivrs
xchg
lret
cwtl
jge
add
shrl
jbe
sbb
jge
mov
pop
or
fiaddl
loope
inc
cmp
enter
out
call
mov
sbb
test
cwtl
subb
aam
and
mov
in
sub
cld
sar
dec
std
cwtl
sub
fdivrs
jg
xor
xlat
sbb
xor
fnstcw
push
xchg
call
js
cmp
adc
sub
sbb
imulb
push
dec
out
xchg
scas
jnp
popf
xor
mov
cltd
fstpl
mov
jo
into
fs
sub
xor
loop
mov
xchg
cli
mov
add
or
pop
fnstenv
ja
filds
mov
push
insb
inc
push
mov
daa
mov
idivl
or
fldt
mov
push
inc
mov
scas
pushf
dec
mov
push
mov
cli
pusha
cmpl
pushf
cmc
xchg
or
inc
aam
mov
inc
shld
repnz
xor
xchg
loopne
jae
fldcw
xorl
adc
mov
cli
xchg
out
sbb
out
mov
jnp
mov
inc
adc
daa
jo
mov
addr16
push
dec
push
scas
push
mov
xor
sub
cmpsb
imul
ljmp
dec
xchg
test
cmp
cmp
or
adc
mov
sbb
fcompl
in
or
enter
lock
jle
pusha
in
pushf
icebp
fwait
out
lahf
loope
testl
dec
sub
adc
push
sub
cmpsl
jl
or
jnp
push
cld
lock
pusha
and
loope
scas
adc
jg
daa
popa
jno
sub
cmpsl
lods
mov
mov
dec
into
shlb
inc
aaa
or
or
sub
loopne
jb
fiaddl
fnsave
call
or
cltd
out
das
iret
mov
xor
dec
xchg
cmp
mov
or
xchg
int3
push
out
shl
inc
fistps
ljmp
aaa
cmp
cmp
pop
jmp
add
inc
psrad
into
out
sub
sbb
clc
pop
pop
mov
iret
inc
sbb
push
xchg
mov
jg
lcall
rclb
movsl
insb
stc
nop
mov
inc
adc
aaa
jle
xor
mulb
sub
shlb
mov
bound
inc
mov
dec
pop
mov
xor
xchg
insl
sbb
lods
arpl
icebp
std
sub
lahf
push
jne
lods
and
xchg
nop
pop
mov
andb
orb
push
sti
mov
push
in
jno
pop
rclb
out
inc
mov
pop
adc
mov
xor
outsb
fnsave
fs
pop
xchg
adc
add
rorl
int3
and
test
cmc
js
mov
xchg
cwtl
or
ficoms
ret
aas
subl
ret
dec
xor
outsb
and
inc
inc
adc
adc
adc
jmp
pop
scas
jnp
dec
and
sbb
mov
and
popa
popa
imul
mov
push
test
push
repz
xor
push
xor
imul
andb
push
xchg
or
or
stos
lock
cmc
hlt
jae
push
sub
push
outsb
js
movsb
lcall
andb
shl
rcll
and
push
lods
std
mov
sub
dec
test
lret
shlb
call
push
imul
sahf
stos
jl
ss
fwait
lret
inc
rorb
cs
cmc
jo
and
lds
loope
fnsave
cs
orl
stos
mov
enter
jmp
or
fisttpl
and
das
jmp
pop
sarl
or
lods
insb
or
jne
and
in
push
mov
dec
jb
jge
int
hlt
pop
fstl
dec
fadds
hlt
fdivrs
out
paddsw
cmp
inc
mov
popf
mov
adc
mov
mov
ljmp
outsl
fstpl
cs
addr16
fs
mov
mov
loop
fadds
js
dec
call
cmp
and
scas
test
pop
xchg
out
adc
xchg
sub
mov
enter
iret
sbb
in
cmp
adc
mov
cmp
neg
mov
sub
mov
sbb
push
mov
dec
les
outsb
jnp
xchg
dec
mov
daa
aas
in
dec
mov
push
inc
inc
inc
adc
inc
cmpsl
insb
cmp
mov
sub
mov
out
sub
out
adc
repnz
xchg
jae
jnp
cltd
sti
test
fsts
add
inc
lods
fstpt
jb
inc
push
inc
mov
cld
clc
mov
xchg
test
testl
xchg
add
sbb
jmp
fimuls
dec
pop
dec
inc
and
out
dec
sar
int3
mov
mov
fldenv
sbb
fstpt
repz
notl
movsb
lret
add
popf
push
push
int3
leave
adc
inc
arpl
dec
fwait
mov
in
xchg
and
mov
push
cwtl
push
adc
or
test
dec
add
push
mov
sbb
pop
xchg
test
imul
cmc
dec
scas
cmpl
jo
popf
sub
push
out
insb
sbb
mov
les
pop
inc
jnp
icebp
outsb
out
mov
add
inc
sbb
aas
lock
or
add
jo
test
rcll
mov
push
repz
xchg
lods
test
stc
pextrw
out
xchg
aad
inc
jg
jo
mov
dec
les
xchg
push
decb
push
adc
cmp
mov
or
mov
rcr
insb
dec
sti
mov
pop
clc
std
pop
push
cmp
jle
mov
mov
pop
or
add
xchg
test
lret
pop
dec
sahf
out
jbe
hlt
jmp
and
xchg
dec
popa
dec
mov
and
loopne
push
rclb
cwtl
mov
inc
push
xchg
andb
int3
movsl
jl
cmp
mov
mov
stos
mov
sbb
mov
lods
das
test
pusha
adcb
imul
mov
mov
xchg
adc
lret
and
or
arpl
mov
cmp
adc
jns
nop
mov
into
daa
sub
dec
adc
jp
pop
sub
inc
push
daa
jne
into
push
inc
fidivrl
jle
popa
in
je
in
xor
push
frstor
push
mov
repz
ret
pop
das
push
cmp
fistpl
div
insl
mov
pop
loope
add
xchg
push
jb
xchg
or
nop
cmp
push
sbb
or
repz
repnz
test
sub
leave
rcll
loope
mov
lcall
dec
sbb
popa
arpl
stos
mov
sbb
jb
lcall
orl
ds
add
cwtl
lds
mov
ja
dec
sar
inc
fsubl
or
dec
sbb
inc
test
mov
into
jmp
rcl
adc
jmp
decb
mov
cmpsb
repz
push
jb
push
cmpsl
or
and
into
mov
jns
scas
std
mov
pop
icebp
in
loopne
adc
mov
inc
roll
xchg
nop
ret
inc
mov
cmp
rorb
xor
daa
movsl
push
jp
lods
daa
xor
push
stc
lds
lds
movsl
outsl
add
and
and
call
pop
pop
push
into
or
scas
sbbb
aad
rcrl
sbb
arpl
stos
daa
mov
in
shll
sub
adc
aaa
sub
ja
add
aam
push
nop
adc
imul
mov
jne
xor
pop
inc
aam
jecxz
inc
stc
out
jg
xchg
add
in
mov
mov
sti
mov
jl
enter
daa
into
repnz
inc
lods
sub
inc
cli
lds
sti
mov
adc
es
in
into
and
push
sbb
sub
ret
outsb
insl
lds
xchg
mov
ror
cmp
dec
decb
ds
call
sbb
ret
out
repz
add
cmp
adc
ficomps
clc
outsl
push
shlb
js
test
adc
lods
cmp
movsl
repz
cwtl
jo
lcall
pop
sub
pop
and
adc
hlt
shlb
cmp
mov
lds
loope
xor
and
xchg
out
int
xchg
fdivl
mov
arpl
cmp
dec
mov
fs
pop
popf
mov
sbb
or
inc
nop
pop
xchg
jp
aas
shlb
xchg
jp
les
bound
in
in
sarb
cltd
sbb
xor
cmp
nop
jno
pop
dec
repnz
test
loopne
outsb
jns
mov
mov
jns
dec
daa
lret
adc
inc
jae
addr16
int
ret
adc
divb
dec
dec
mov
loope
int
cmp
in
jmp
jae
sbb
insb
and
mov
insl
adc
out
jbe
xchg
sub
rcll
insl
lret
lahf
dec
nop
dec
hlt
test
insl
roll
cwtl
cmp
pop
int
fisttps
adc
mov
fnstcw
stos
lahf
jmp
mov
mov
stos
lahf
pop
out
and
sbb
jge
xchg
sub
stc
incl
mov
int3
hlt
jp
cwtl
or
fmul
dec
inc
add
xchg
inc
xchg
push
cmp
sub
xchg
xor
andb
or
or
iret
xor
and
add
aaa
pop
or
ja
and
int
and
rcl
dec
ficoml
inc
and
fadds
lods
or
sahf
inc
leave
xor
push
in
pop
adcb
test
cmp
dec
loope
mov
popa
lret
test
dec
loope
and
push
in
add
cld
mov
insl
jp
or
jmp
loop
shlb
sbb
mov
test
mov
daa
mov
adc
ja
cmp
arpl
adc
and
mov
hlt
cmpsl
pusha
mov
mov
into
cmpsb
out
cmpsb
and
xchg
pop
decl
lds
lret
fistps
sbb
nop
push
rcrb
adc
jbe
mov
in
test
lahf
jl
fsts
pop
int
mov
loope
xor
outsb
mov
pop
gs
cmp
jmp
insl
sub
loope
inc
xor
bswap
stc
cmc
sub
jmp
call
call
xlat
inc
pop
out
shlb
lret
das
add
jb
sub
xchg
sub
lea
scas
test
push
pop
fnsave
dec
movsl
push
div
pop
pop
sub
pushf
lods
rolb
dec
out
bound
dec
mov
sahf
rcll
std
call
and
sub
sub
and
mov
out
inc
std
jno
fcoml
stc
jg
cmp
add
sbb
jne
mov
clc
push
sbb
and
mov
lcall
in
shrb
out
rcrl
or
sub
add
das
sbb
ss
xchg
xchg
outsl
xor
sbb
cli
mov
push
sbb
jge
mov
xor
lods
mov
xor
or
js
and
aad
fisttpl
jp
pop
sarl
adc
xlat
mov
subl
cli
mov
push
int3
cld
test
jmp
lret
inc
jno
push
jmp
push
clc
les
cmpsl
dec
and
cld
ret
lods
xchg
cwtl
and
sahf
sbb
rorb
fdivr
pop
push
outsb
sbb
hlt
addr16
lret
iret
dec
jno
cmp
cmp
fdivs
push
or
jg
imul
sbb
add
fs
seta
aam
insb
enter
and
pusha
mov
mov
popf
leave
cmp
ja
dec
icebp
adc
adc
ljmp
in
out
test
inc
push
push
loopne
xor
xchg
adc
aam
in
xor
add
test
aam
mov
inc
es
cmp
cmp
sub
stc
aaa
xor
fisttpll
jge
or
lret
xchg
lock
mov
stos
fsubrl
jnp
cld
lret
ret
addb
xchg
idivl
mov
imul
int
mov
cmp
or
in
mov
enter
mov
bnd
into
push
dec
cmp
cmpsb
in
and
and
int3
pop
mov
push
mov
mov
stc
test
and
out
cmc
add
lods
mov
mov
cld
mov
cmp
dec
xchg
test
pop
or
sbb
in
test
and
std
push
mov
test
push
push
rclb
or
pop
insl
mov
call
les
bnd
jne
xchg
lock
pusha
dec
sti
imul
leave
stos
les
inc
jmp
aad
mov
xlat
test
imul
mov
adc
cmpl
jmp
jb
mov
in
cmp
lock
fwait
nop
je
jl
fwait
pop
out
xor
mov
pusha
xor
lahf
cmp
sbb
sub
mov
lea
adc
fstp
dec
into
xchg
inc
icebp
repz
imul
jl
into
push
jmp
inc
mov
inc
and
inc
xor
iret
int
mov
out
fiadds
xchg
lahf
js
lret
nop
mov
push
mov
xor
dec
push
or
push
std
enter
dec
jno
xor
lret
test
dec
add
pop
out
sti
sub
leave
fwait
mov
es
outsl
xchg
adc
icebp
mov
sahf
cmp
repz
mov
movsl
mov
cwtl
and
pushf
or
push
adc
push
jmp
mov
or
mov
stc
test
and
mov
shl
and
push
pop
rcrb
loop
lock
pusha
nop
inc
insl
addr16
outsb
and
stc
cmp
inc
or
dec
jmp
sbbl
dec
pop
mov
jmp
incl
fisttpl
out
and
and
sti
sub
dec
pop
test
imul
jae
pop
push
fsts
dec
lods
stc
pop
loopne
loop
pop
cwtl
test
push
hlt
inc
xor
fs
lret
and
cmc
stos
cmp
adc
inc
jg
push
movsb
pop
or
adc
adc
inc
test
int3
xor
sub
xchg
jl
xor
or
jmp
xchg
jo
lock
pop
xor
add
rorb
clc
int
dec
or
mov
add
out
aaa
and
inc
les
dec
dec
push
inc
loope
pusha
sub
int3
dec
stos
jbe
adc
fmul
in
enter
icebp
shl
inc
xor
add
testl
mov
cli
insl
movsb
in
fstps
mov
in
sub
fwait
daa
add
jl
lea
add
jp
mov
rcr
and
leave
aad
lods
jno
sub
mov
in
shlb
mov
cwtl
push
pop
sbb
jne
rol
lods
jae
lret
aam
cmp
out
add
mov
add
and
test
cmpsl
push
fstp
movsl
ret
add
shl
mov
shrb
inc
jle
out
sub
inc
in
int3
jae
pop
add
mov
imul
add
out
mov
mov
cmp
sbb
shl
mov
lret
pop
jo
bound
gs
xchg
lock
jecxz
testb
ret
jns
mov
out
and
add
in
insl
bound
lret
push
popf
adc
mov
mov
and
repnz
adc
mov
dec
push
or
mov
loopne
adc
fdivrs
jne
push
inc
dec
cmp
lods
rdmsr
sub
bound
roll
mov
jno
ljmp
arpl
int3
or
and
or
in
les
cmp
insl
push
arpl
pminub
push
sti
or
xchg
daa
lods
pop
shll
loopne
sub
adc
dec
sub
jle
sti
lret
mov
ret
adc
push
mov
insb
ds
out
mov
and
xchg
daa
cmpsb
xchg
push
stos
sarl
mov
movsb
fidivl
adc
mov
pop
mov
imul
sbb
push
lock
xchg
stc
out
ss
movsb
adc
sub
mov
test
sub
and
dec
dec
mov
cmp
mov
and
fld
imul
cmp
pop
icebp
inc
jae
jne
popa
fwait
mulb
xor
dec
jnp
jl
pop
sub
int
popa
hlt
aad
dec
push
mov
xor
mov
arpl
and
ficomps
pop
pushf
sbb
not
stc
repz
cld
test
xor
popf
fsubs
lahf
ljmp
jbe
dec
mov
lret
mov
inc
mov
iret
push
call
repnz
cmp
and
mov
cmp
xor
in
xlat
decb
movsb
ss
ljmp
jnp
out
mov
jbe
sbb
inc
clc
jb
push
inc
out
pop
add
xchg
outsb
ds
pusha
pop
loope
mov
mov
loop
out
jg
fimull
bound
dec
ret
fisubrl
scas
add
iret
push
xlat
mov
aas
sbb
jl
popa
xchg
flds
push
cs
xor
and
xor
push
in
scas
inc
xchg
mov
cltd
xchg
pop
xchg
sub
pop
dec
ds
cmpsl
sbb
mov
iret
pop
sbb
enter
ss
push
imul
fidivrl
sbb
mov
mov
mov
stos
movsl
dec
ficoms
jns
add
add
sub
and
lahf
push
mov
jae
cmp
or
jno
jb
dec
mov
and
push
push
aas
pop
cld
rcl
pop
mov
sti
push
cmp
dec
fcom
mov
add
mov
adc
mov
push
mov
mov
sti
loope
bound
insb
push
out
test
stc
inc
push
stc
jg
mov
shrb
fstl
cmp
xchg
ret
mov
push
aad
and
xchg
xlat
xchg
into
and
sbb
xor
pop
dec
or
jmp
ret
cmpsl
test
mov
std
fcompl
jecxz
dec
or
repnz
mov
pop
je
fwait
sub
in
pop
mov
movsl
sbb
jns
ljmp
loop
cli
add
aaa
adc
stos
loop
push
ja
inc
sbb
xlat
sub
dec
push
es
repnz
ss
dec
xchg
outsb
jne
les
in
jns
aaa
int3
in
jbe
push
ret
push
fnstsw
dec
push
or
jg
ja
lret
mov
popf
gs
push
data16
cmpsl
movl
jae
jmp
iret
pop
cmpsl
jne
dec
dec
dec
push
shrl
lock
in
xor
insl
mov
dec
stos
jno
insl
and
adc
fucomi
push
repz
cs
add
pop
popf
lret
push
sub
fldenv
pop
pop
jbe
and
out
sub
jp
xchg
push
cmc
adc
adcb
sarl
js
movsl
inc
or
or
daa
cld
icebp
outsl
jge
push
ds
ret
xor
jae
add
inc
mul
das
gs
mov
xchg
lahf
jecxz
mov
ss
shll
loop
movsl
mov
mov
nop
leave
add
notb
lret
cmp
sbb
pusha
dec
and
pop
and
push
stc
add
hlt
loop
pop
cs
sbb
cmp
jle
mov
cli
push
mov
pop
dec
cs
lods
insl
push
mov
sub
sbb
inc
add
fidivrs
sbb
inc
inc
test
int
inc
xchg
push
jbe
sbbl
sub
mov
in
aad
inc
ljmp
pusha
mov
cmc
pusha
jle
push
addr16
adc
lds
jno
and
or
inc
inc
cmp
mov
pop
add
mov
sub
fdivr
cmc
xchg
ja
fwait
sub
mov
cmp
je
pusha
xchg
lock
push
dec
cmp
repnz
in
popf
aaa
loop
imul
pop
sub
lret
push
idivl
mov
mov
dec
leave
sbb
push
jne
mov
or
and
jbe
sbb
dec
mov
aas
ja
movsl
xchg
push
pop
cmpsb
std
xchg
bound
fs
and
xchg
orb
int
sahf
and
stos
cmp
or
cli
pop
arpl
push
xor
xchg
idivb
push
lea
mov
inc
orl
daa
pop
pop
movsb
or
lods
push
pop
inc
pop
into
push
and
in
push
or
pop
mov
add
xor
jmp
out
xchg
or
jnp
xchg
mov
and
call
out
sbb
jl
xchg
mov
dec
loopne
cs
addr16
out
lock
jbe
pop
mov
pop
xchg
aaa
rcrl
je,pt
jnp
nop
mov
jbe
aam
subl
xor
inc
inc
mov
mov
repz
outsl
loopne
movl
xor
cltd
jne
mov
mov
cmc
shrl
mov
inc
in
js
jae
or
or
dec
adc
imul
hlt
mov
scas
jge
aaa
es
ss
jecxz
jae
pop
imul
xchg
inc
xor
shrb
dec
or
xor
push
test
imull
sarb
mov
sbb
daa
outsb
in
add
ret
and
ds
mov
pop
bound
stc
fnsave
add
xchg
dec
sti
fists
jmp
xchg
cwtl
dec
sub
ds
enter
call
fucomi
push
test
add
inc
lret
push
hlt
dec
dec
outsl
or
jno
jo
in
or
sbb
sar
sbb
wbinvd
and
inc
jl
imul
cltd
adc
dec
mov
nop
jp
sbb
stc
je
in
cld
mov
inc
mov
mov
mov
aaa
sub
xchg
std
in
mov
mov
jne
sbb
add
leave
push
add
inc
enter
rcrl
inc
cmp
dec
ret
fdiv
test
or
dec
xor
pop
cmp
and
add
stos
fadds
and
inc
data16
cmpsb
data16
cmpsl
and
enter
adc
sahf
cmpsl
arpl
nop
rcrl
sub
fwait
cwtl
cmpsb
not
mov
jle
mov
jbe
lods
movsl
and
ljmp
xlat
sarl
ja
add
cmpsb
pop
hlt
dec
sub
inc
fld
or
jge
push
aas
addr16
clc
mov
test
imul
les
push
sub
stc
test
repz
mov
fildl
jecxz
int
mov
leave
nop
scas
mov
cmp
fcompl
xor
stos
fidivs
ds
out
push
into
jmp
in
cld
add
mov
ds
mov
mov
dec
cmp
je
cs
idivb
jbe
in
lret
push
adc
mov
lret
push
pusha
sbb
test
test
and
adc
mov
mov
dec
cmpb
dec
mov
mov
icebp
push
jg
scas
mov
cmc
xchg
mov
mov
push
jb
scas
sahf
mov
push
mov
inc
bound
inc
stos
and
cmp
dec
mov
dec
push
mov
scas
pop
jle
cmp
push
outsb
stos
out
add
cmpsl
push
push
xor
fsubrl
jmp
add
sub
push
cwtl
ficoml
jmp
xchg
imul
adc
std
jmp
int
sub
aam
mov
loope
pushf
and
lods
stc
xchg
out
sbb
es
inc
clc
or
mov
add
movsl
xchg
cltd
into
mov
mov
jp
sub
aaa
flds
xchg
iret
mulb
sahf
rolw
jb
in
cltd
out
mov
dec
sub
dec
iret
ds
inc
leave
sbb
enter
inc
cli
nop
inc
int3
jbe
popf
dec
sbb
push
imul
cld
shrl
push
sti
dec
add
call
test
mov
into
lret
in
sub
cmp
ret
pop
insl
fcmovbe
sbb
dec
pushf
cld
mov
dec
push
andl
xchg
cmp
sbb
cmp
sahf
aaa
mov
xchg
out
push
es
dec
stos
or
pusha
pop
jae
cwtl
sarb
inc
pop
int3
mov
stc
js
ss
repz
mov
fs
dec
xchg
ja
push
cmc
adc
jmp
lret
scas
mov
jp
xor
sbb
imulb
adc
push
movsb
call
scas
mov
cmpsb
or
test
je
imul
fs
add
sbb
js
sub
aaa
repz
lds
fnstsw
cmp
shlb
push
in
jb
add
sahf
lods
cwtl
pop
cmp
in
cmp
sbb
imul
cltd
fimull
cmpb
dec
lcall
mov
out
xchg
mov
test
fsubr
xchg
dec
push
cltd
dec
cmp
ret
pop
pop
and
jbe
mov
sbb
sbb
es
push
sub
pop
in
fwait
loope
add
pop
cmp
imul
ss
and
push
nop
dec
pop
fadd
das
andl
les
repnz
sub
outsl
xor
imulb
mov
cli
out
push
xor
inc
in
push
xor
sbb
and
cmp
sub
ret
nop
ja
mov
mov
push
in
dec
cmpsb
adc
je
or
add
sarb
int3
icebp
cmpsl
push
pop
hlt
pop
jnp
aaa
mov
add
sbb
cmpsl
hlt
adc
lods
je
rcll
jg
dec
cld
int3
lret
pop
jl
adc
pop
jp
and
and
loop
adc
jo
sbb
divl
cmp
ror
orb
mov
popf
lret
pop
cmp
sub
sar
cld
push
mov
in
jmp
pusha
push
push
lods
scas
lods
pop
int
push
testl
out
pop
in
jl
cmp
mov
dec
cmp
xchg
or
shll
add
mov
push
mov
inc
jne
arpl
mov
stos
lret
xchg
adc
stc
mov
imul
cli
push
xor
testl
push
pop
adc
out
test
lods
scas
test
sub
lret
adc
mov
pop
mov
scas
cmp
xchg
xor
leave
jno
aad
in
dec
roll
fs
mov
lret
pop
aas
add
jnp
jmp
jo
lds
dec
fstp
and
lds
sub
mov
in
jmp
jl
scas
jbe
hlt
pop
call
icebp
insb
jb
lea
dec
mov
xchg
cmpsb
pmullw
lods
jecxz
adc
stc
negb
lret
xchg
subl
test
xchg
rorl
cmc
ret
add
icebp
push
pop
xor
sahf
dec
adc
push
add
es
sub
js
sahf
ret
sbb
movsb
js
mov
add
or
pusha
or
sbb
mov
push
pop
int3
scas
dec
sub
xor
in
and
inc
repz
cmp
cltd
or
bound
sub
and
pop
popf
test
xchg
loop
test
jmp
jp
mov
in
sbbl
mov
adc
push
mov
fsubs
jo
aaa
jbe
jle
push
notl
fsub
jge
prefetch
or
dec
adc
fdivl
jae
out
push
test
xchg
std
cmp
push
imul
in
rolb
outsl
movsb
stc
xchg
mov
push
xor
leave
cltd
or
in
rorl
out
adcl
mov
sahf
rorl
sahf
push
jge
xchg
xchg
xor
je
and
popa
or
popa
aad
push
nop
arpl
dec
pop
imul
fsubrp
aaa
in
negl
int
xchg
add
imul
shlb
push
stos
in
out
scas
jnp
popa
mov
ss
jg
neg
int
sbb
ss
gs
xor
lret
sbb
mov
imul
mov
mov
adc
or
roll
fsts
mov
in
sbb
adc
sahf
add
inc
js
cmp
pushf
adc
js
push
push
jge
and
enter
mov
cltd
sub
shrb
sti
addr16
xchg
and
jnp
xor
fnstcw
jg
arpl
mov
inc
sub
pop
adc
jae
mov
leave
cld
fdivl
mov
xor
xchg
std
pop
loopne
jo
dec
lea
cmp
fwait
adcl
jge
mov
cmp
inc
push
addr16
pop
pop
push
mov
and
adc
jne
and
or
push
and
icebp
fstps
mov
mov
xchg
fwait
out
jnp
lods
mov
popf
pop
mov
fistpll
scas
or
clc
pop
push
add
les
in
fistps
psubd
and
xor
or
test
cmc
dec
dec
sub
lahf
mov
pop
pop
and
pop
rorl
repnz
and
mov
push
mov
pop
inc
stos
in
out
xor
popf
subb
in
and
add
xor
mov
adc
out
mov
stc
fsts
outsb
daa
shll
popa
jnp
inc
jb
push
mov
sub
repz
iret
ret
inc
leave
jne
fstpt
mov
push
call
cld
adcl
pop
lds
add
jp
jns
out
enter
loop
mov
lcall
sti
leave
jnp
sti
mov
cmp
stos
fwait
ss
push
add
mov
inc
sbb
cld
jp
pop
cli
mov
fdivs
mov
stos
adc
cwtl
xor
cmp
mov
sbb
adc
adc
mov
xchg
inc
xor
push
lret
jmp
stos
lret
inc
adc
or
pop
cmp
icebp
lds
xor
cmp
roll
mov
mov
hlt
fwait
inc
or
outsb
jo
sbb
loop
shlb
push
dec
jmp
xchg
test
cli
lods
and
cli
dec
ror
std
out
mov
sbb
mov
int3
faddl
stc
xlat
data16
addr16
dec
dec
call
adc
inc
int3
fs
cli
in
push
inc
and
sti
and
popf
dec
mov
nop
lds
jecxz
stos
adc
shr
and
cmp
ficoms
js
in
adc
sbb
mov
mov
and
into
mov
or
std
jae
inc
out
add
mov
lahf
sub
mov
add
into
mov
and
into
push
inc
mov
jmp
push
adc
es
loopne
jns
and
mov
add
sbb
jmp
cmpsb
jo
lds
daa
dec
and
mov
pusha
je
data16
fimull
lret
cmp
sbb
shrl
addr16
add
je
push
shlb
das
or
lret
cmpb
cs
lods
out
imul
adc
into
es
and
rcrl
lock
or
popa
mov
dec
jp
data16
push
xchg
jo
test
fldl
add
jp
orb
ljmp
idiv
lds
cmp
add
mov
or
jecxz
rclb
cmpsl
cltd
ret
test
dec
and
pushf
xchg
cld
sub
addb
inc
mov
inc
stos
das
and
jg
adc
imul
imul
lahf
mull
jmp
dec
sub
insl
fdivl
jl
xchg
shl
xchg
insl
xchg
cld
testl
stc
xlat
loop
and
test
and
sahf
sbb
rcll
or
push
dec
scas
gs
aas
stos
fcomi
adc
sahf
pop
jge
clc
fsts
aam
mov
xchg
in
xor
int
or
popl
and
pop
push
mov
movsb
sbb
jno
out
shll
inc
fndisi(8087
arpl
repz
fidivs
dec
dec
inc
mov
mov
fistpll
add
inc
iret
orl
loop
adc
sbb
lcall
stc
out
fwait
mov
mov
cli
mov
cli
inc
in
sti
stos
shrl
loope
adc
xor
xchg
clc
int
jb
scas
xchg
shrb
and
call
and
rorb
pop
daa
jb
add
sti
mov
scas
cltd
popl
xchg
push
stc
ja
push
cli
in
mov
jnp
push
dec
clc
gs
and
jmp
push
and
adc
pop
inc
mov
arpl
scas
push
lret
outsb
pop
sbb
sbb
xchg
sti
aas
out
aam
xchg
adc
push
fisubs
pop
adc
inc
sbb
dec
sub
data16
std
out
mov
dec
stc
mov
out
push
or
fildll
mov
fldt
mov
xchg
sbb
lret
dec
add
mov
push
clc
lcall
cli
dec
inc
faddl
sbb
rcr
ljmp
xchg
push
push
mov
ds
add
insb
lods
in
xlat
add
ret
rcrb
or
loopne
into
sub
mov
mov
inc
aas
mov
jp
or
add
mov
jno
or
push
xchg
out
xchg
test
icebp
sub
and
bound
imul
and
fidivrl
push
push
push
mov
inc
cmp
test
adc
pop
lcall
ffree
cmp
sti
pop
loop,pt
outsl
stos
xchg
outsl
scas
sub
mov
test
xor
cmp
push
xor
loop
cmc
stos
sbb
add
jno
arpl
repz
or
leave
xchg
lods
lahf
push
fadds
sub
xor
mov
lahf
ja
test
lea
bound
or
push
mulb
dec
and
jg
pushf
iret
pop
cmp
scas
xor
nop
and
inc
dec
js
mov
adc
shr
arpl
add
nop
xor
test
sbb
stc
xchg
outsb
cmp
sub
inc
in
jne
dec
enter
call
sub
cld
xchg
xchg
fstpt
data16
push
arpl
insl
fbstp
adc
pop
sarl
cmpb
aad
pop
mov
arpl
sbb
cs
jbe
jns
pushf
cmpsl
testb
test
call
dec
and
rcrb
sbb
outsl
push
imul
test
fdivr
push
adc
addl
into
push
cmp
push
shlb
jecxz
mov
loop
out
lods
out
js
movsb
lahf
push
je
and
rcrb
jbe
movsb
xchg
add
je
add
xchg
test
jno,pn
push
sbb
mov
sub
sbb
mov
std
stc
out
xor
or
xchg
je
xor
push
mov
or
cmovns
add
mov
das
fucomi
inc
fistps
add
xor
inc
xchg
scas
mov
mov
jo
imul
cmp
or
ljmp
push
std
push
lea
pop
sbb
daa
cld
int
pop
ret
gs
repnz
cmp
xor
mov
divb
dec
jge
mov
pop
lds
and
je
out
jae
sar
movsb
push
cmc
xchg
call
cmp
into
push
hlt
fldenv
or
adc
sbb
repz
add
mov
fists
cmp
add
mov
mov
lods
or
and
or
pop
inc
ljmp
lods
xchg
xchg
xlat
and
aaa
les
repnz
in
xor
pop
in
out
sbb
sub
push
fdivrl
sahf
inc
dec
pop
ljmp
inc
mov
sub
xor
stos
inc
test
fists
inc
aas
and
jmp
icebp
fstpl
mov
es
lret
cmc
in
add
lret
lahf
subb
push
inc
popf
in
cmpl
scas
jae
xlat
mov
lahf
xor
jp
lret
xchg
lcall
sbb
cmp
pop
mov
push
and
loop
fwait
hlt
test
mov
pop
into
in
cltd
pop
in
imul
cmp
dec
mov
fwait
mov
scas
push
push
inc
insb
inc
lods
inc
jecxz
js
xorb
adc
adc
shrl
mov
jne
push
push
mov
pop
std
xor
leave
shlb
add
ljmp
mov
add
sbb
cmpsb
add
test
add
or
sbb
mov
sbb
ret
inc
cmpsl
aaa
fwait
pushf
inc
aam
sub
sahf
test
clc
gs
lret
loope
and
popa
and
cmp
xchg
xlat
ficoml
cli
mov
sub
cmp
adc
hlt
shlb
push
notl
outsl
cmp
jb
pop
sub
jns
mov
popl
imul
dec
movsl
xchg
ja
push
popf
adcb
push
inc
inc
cmp
dec
ret
in
imul
mov
inc
sbb
dec
ret
push
add
push
xchg
rclb
mov
inc
and
push
sub
or
push
stos
dec
call
xchg
jle
test
fdivrp
out
xor
fldcw
and
or
lea
ret
or
fstp
rorb
cmp
fdivp
clc
repnz
adc
ret
daa
dec
sub
lods
mov
test
lahf
xor
mov
ret
mov
push
sub
std
jge
sub
int
js
imul
jb
in
loop
jg
loopne
cmp
jl
or
mov
add
out
pop
in
mov
mov
xchg
or
sbb
js
add
pop
ret
inc
mov
mov
mov
lods
rorb
and
pop
ljmp
mov
mov
and
cmp
ret
mov
and
inc
and
dec
jns
sbb
mov
xchg
xor
sti
imul
xchg
mov
and
out
loop
pusha
push
jecxz
pop
and
xor
lock
push
dec
sub
shr
jp
mov
dec
sbb
and
mov
je
int
dec
jnp
inc
daa
cmpl
cmp
xchg
ja
insl
pop
negb
adc
cwtl
inc
int3
lret
sbb
arpl
xchg
jne
dec
sub
repz
sub
fcmovnbe
gs
jae
pop
and
insb
ds
cmp
sub
cmpsb
mov
pop
mov
mov
cmc
das
jmp
mov
les
iret
xor
rcll
jae
inc
sbb
cmp
ja
aad
sbb
and
mov
subb
dec
mov
inc
xchg
dec
movsl
fld
xor
cmpsb
fnsave
jl
xchg
lahf
mov
lock
and
xlat
loop
mov
ds
push
xchg
xchg
ds
lcall
ficompl
jbe
stc
lea
fldenv
xchg
int3
jg
dec
popa
sti
sbb
stos
rolb
xor
mov
jae
pop
add
aas
mov
insb
pusha
jae
lock
out
inc
outsl
dec
sbb
dec
popf
jnp
ja
scas
inc
clc
cmp
insl
mov
dec
aaa
mov
imul
lcall
push
cltd
and
lea
dec
jnp
push
jbe
xchg
or
add
cmp
jns
aaa
jne
iret
sub
inc
out
and
inc
inc
shrb
mov
in
pop
int3
cmpsl
and
xorb
sub
stc
pop
jnp
pop
das
xchg
jge
push
and
ss
jbe
pop
dec
mov
mov
mov
and
sbbb
xlat
jmp
dec
bound
inc
int
inc
adc
adc
push
add
cs
jbe
popa
fsubs
adcl
call
dec
jbe
xchg
lea
jmp
sub
add
dec
ficompl
mov
push
add
enter
fs
push
and
pusha
sub
mov
imul
jge
sbb
push
lret
mov
jae
dec
sti
mov
dec
scas
jbe
mov
sahf
lds
or
sub
jne
dec
mov
pop
xor
or
sub
jp
lods
dec
jo
in
mov
cmp
xchg
jecxz
mov
jne
in
jl
sar
lcall
cmp
cmpb
lahf
stos
cmp
fildll
cmpsb
aas
inc
dec
repz
outsl
sbb
outsl
or
push
inc
lods
call
push
sub
movsb
mov
xchg
jge
ds
lock
icebp
out
xchg
pop
mov
xorb
int
lret
test
mov
or
jb
or
mul
cmpsl
mov
push
nop
mov
outsb
test
pusha
and
lock
pop
int
aas
fcoms
push
pop
ret
repnz
cmpsb
mov
cmpsb
xchg
mov
rol
outsl
jecxz
inc
outsl
mov
mov
xchg
ficoms
in
call
imul
or
test
enter
mov
xor
test
mov
adc
mov
imull
mov
inc
jnp
insl
mov
xchg
lret
fwait
ret
std
jo
test
push
push
int
test
add
outsb
pop
pushw
shrb
jne
push
pop
enter
sub
pop
insl
lcall
and
inc
jp
in
push
hlt
je
int3
xchg
inc
movsl
inc
dec
mov
push
or
test
adc
xchg
notb
data16
stos
inc
sub
iret
sahf
dec
fistps
iret
pop
xor
cmp
insl
aad
and
mov
add
daa
mov
ja
pop
cld
mov
mov
lock
ljmp
and
pop
leave
ja
mov
sub
aaa
pop
inc
test
clc
jns
inc
and
xor
test
rep
xor
inc
out
mov
lds
mov
sub
or
aas
and
cmc
inc
pop
repz
push
enter
jnp
pop
sub
iret
outsb
int3
out
and
mov
sub
pop
jb
orl
sbb
cld
iret
xchg
push
or
js
xchg
jbe
mov
adc
rcrl
lea
stos
push
xor
and
ss
sahf
movsb
sub
into
dec
out
nop
sub
sti
pop
mov
sahf
shll
push
xor
cmpsl
scas
cmc
add
outsl
rcr
leave
or
and
aad
xchg
dec
lahf
shll
repz
call
cmc
addl
mov
rorb
loopne
stos
jno
je
psraw
xchg
loop
pop
icebp
push
scas
outsl
aad
dec
sbb
iret
test
ud2
test
stc
testb
jae
popf
jns
adc
lods
mov
rorb
ror
dec
jmp
sub
cltd
and
and
icebp
shr
daa
push
in
inc
jb
mov
cmpsb
jle
cmpsb
sbb
fsubrl
fidivrs
and
in
mov
lahf
sahf
das
sub
mov
pop
outsb
pushf
int
loope
int
inc
in
push
pop
imul
and
cmp
loop
xor
jle
xchg
addl
or
xchg
repnz
push
mov
add
push
inc
push
stos
cmp
and
pushf
testl
jp
std
sbb
aaa
inc
mov
xchg
mov
xchg
les
enter
jbe
insl
inc
mov
adc
sub
mov
rorb
sub
iret
xchg
les
clc
pop
or
aad
add
push
fcompl
imul
test
movsl
cs
lcall
xor
mov
add
mov
into
push
push
pop
fsts
dec
imul
pop
mov
cmp
mov
aas
jg
jbe
sbb
or
mov
sub
negl
repz
jnp
mov
and
xchg
shrb
pop
popa
shr
daa
xchg
inc
inc
push
lahf
lahf
aam
ljmp
test
cmp
aam
jle
cmpsl
sahf
test
pop
shlb
inc
jbe
mov
iret
push
xchg
aam
pop
jmp
outsl
xor
inc
pop
cwtl
push
jg
fistpl
xchg
mov
mov
push
jo
into
cltd
fmuls
inc
leave
jbe
movl
sub
icebp
add
inc
pop
xor
sub
inc
pop
adc
repz
cmpb
adc
enter
sbb
sbb
mov
mov
and
push
mov
adc
inc
into
sub
popf
push
cmp
adcl
push
into
xor
rorl
lcall
sahf
dec
cmp
pop
stos
sub
stc
rorb
and
dec
cmp
fwait
mov
leave
fucom
dec
mov
gs
mov
test
cs
and
inc
mov
outsb
iret
jle
mov
out
clc
cmp
ds
cmp
popf
xor
pop
negb
or
popf
int3
ret
mov
mov
sub
or
ss
sbb
adc
inc
in
jnp
push
popf
sti
adc
adc
push
jg
xchg
movsl
sti
xchg
sbb
push
dec
mov
dec
dec
mov
lret
lock
test
out
jp
aas
out
insb
and
and
dec
xchg
cmp
xor
cmp
arpl
test
inc
popf
mov
mov
or
lret
xchg
jno
imul
out
xor
mov
jnp
clc
mov
ret
das
mov
sbb
sbb
in
push
rorb
xchg
mov
popa
cmpl
enter
push
movsb
xor
dec
pop
scas
test
jno
xor
cmp
call
cltd
icebp
mov
dec
cmp
and
and
jge
std
testb
sbb
cmp
add
ret
arpl
roll
sbb
and
pop
scas
sahf
out
push
repnz
xor
sub
scas
cmp
loop
lret
mov
jae
pop
inc
fidivl
dec
adc
sti
sahf
aaa
es
iret
inc
paddsb
andl
pop
cs
push
jno
aaa
testl
jecxz
out
inc
stos
in
and
pusha
jg
leave
frstor
rcr
insl
shr
sub
daa
lahf
and
mov
outsb
lock
add
cltd
mov
xor
mov
out
test
ret
test
xchg
testl
cmp
pop
push
pop
mov
shl
sub
push
repnz
fisubrl
push
push
xchg
cwtl
mov
jg
jl
fs
icebp
rcl
hlt
jl
adc
dec
js
sub
mov
mov
insl
jle
outsl
mov
xchg
jmp
mov
nop
dec
pop
adc
add
sub
testb
push
cmpb
aaa
jno
out
adc
pop
mov
add
arpl
cmp
les
fdivs
xor
mov
cmc
cmpsl
cmp
inc
mov
dec
mov
jmp
jnp
pusha
jmp
and
adc
shll
sub
fmulp
sub
sbb
loopne
inc
mull
shlb
mov
xchg
incl
cwtl
mov
loope
stos
mov
in
adc
into
insb
negb
flds
sbb
jno
loope
addr16
ret
les
mov
add
xchg
jb
sbb
aaa
lods
add
shl
dec
stos
jbe
sbb
sbb
pop
cmc
mov
aad
xchg
mov
scas
adc
fsubrl
fnop
pop
push
popf
jmp
in
fisubrl
push
cli
mov
out
pop
mov
xor
mov
stc
or
mov
icebp
insl
jnp
mov
jae
mov
mov
add
rorb
push
ja
mov
int3
bound
push
stos
iret
sbb
and
jne
insb
mov
or
cmp
movsl
cmpsl
or
mov
and
pop
sbb
mov
cmp
cmp
sahf
movsb
stos
lret
arpl
iret
jle
cld
push
lret
sahf
fcompl
sub
or
loop
push
les
pop
call
sub
call
jno
std
sti
jmp
pop
xor
test
or
mov
mov
sub
pop
jno
push
shrl
or
mov
xor
adc
push
leave
pop
add
int3
sub
fbld
stos
lock
mov
scas
stos
push
or
add
jge
imulb
pushf
xchg
popf
jmp
nop
out
jmp
sahf
cs
sbb
add
cmpsb
and
xchg
jmp
push
fstps
loope
fistps
sub
cmp
pop
sarl
xor
in
adc
xchg
inc
fwait
or
jl
adc
xor
cld
imul
shr
push
fidivs
xchg
es
xor
cmp
sbb
pop
mov
imul
add
ljmp
xchg
inc
inc
pop
jp
das
jecxz
adc
popf
sub
out
testb
and
pop
mov
testb
inc
lret
pop
das
mov
jno
rclb
aad
out
jge
dec
mov
loop
call
lahf
ss
sbb
dec
mov
mov
dec
push
stos
sub
lds
stc
cmpsb
cmc
adcb
adc
sub
ret
adc
fisubs
inc
push
mov
xchg
ljmp
lock
jb
cmp
cltd
xor
and
aas
sub
ret
pop
or
or
sbbb
lods
jbe
scas
aam
ss
fistps
and
fsts
mov
outsb
imul
in
push
movsl
push
imul
and
mov
sarb
dec
adcb
xchg
outsl
roll
cmp
mov
jbe
inc
inc
or
adc
out
ret
push
dec
dec
lock
rclb
jmp
mov
jl
mov
push
mov
jmp
addb
mov
repz
setg
fidivrs
imul
sub
out
mov
lds
in
pop
out
stos
xor
enter
loop
xorb
jae
or
mov
adc
enter
arpl
ja
adc
icebp
rolb
filds
aas
loopne
cwtl
push
gs
mov
insb
stos
addl
dec
fwait
jns
mov
cmp
aaa
icebp
push
stos
cmp
outsl
add
cmp
rcrb
fstpl
adc
leave
jg
test
adcl
std
rcrl
lods
jg
enter
mov
sbb
mov
enter
inc
dec
jnp
push
add
inc
sub
dec
and
out
sti
into
jne
and
int
outsb
lret
popa
jle
xor
and
sbb
dec
sbb
xor
aad
icebp
dec
xor
idivb
fs
lds
iret
pop
cltd
mov
stos
cmp
ficomps
mov
sbb
loopne
sub
xor
dec
lret
xchg
dec
loope
gs
arpl
or
cmp
jb
xor
push
sub
jbe
jg
ds
xchg
rolb
inc
add
ds
push
mov
mov
aam
add
mov
xchg
pushw
ljmp
adc
cmpsl
dec
loop
stos
sbb
mov
sbb
inc
in
roll
adc
jns
fistpl
das
lods
mov
lcall
dec
imul
ds
psrld
ret
xor
mov
shrl
push
or
testb
dec
dec
jo
repnz
mov
push
ja
leave
jae
or
add
lods
loop
sub
aaa
dec
sarb
adc
mov
mov
fsubl
js
sti
dec
in
cltd
out
mov
je
fdivrl
sbb
imul
clc
js
mov
fiadds
xor
inc
test
jl
dec
adc
daa
cmp
or
aas
and
imul
cmp
sbb
icebp
mov
movsb
movsb
cmp
jae
cmp
into
mov
fmul
push
loop
push
jp
into
sbb
call
xor
mov
test
icebp
fnstsw
jnp
cli
sub
aas
adc
es
test
test
ja
xchg
lods
xor
and
jne
xor
sub
and
push
cs
push
mov
lds
sbb
rorb
and
push
mov
sbb
out
sub
outsb
gs
push
and
pop
testl
movsb
lret
push
scas
or
repnz
sbb
fidivl
test
mov
insl
dec
ret
loopne
orb
loope
rol
lods
cmovge
sub
xor
sub
inc
xchg
inc
fisttpll
inc
xor
loope
pop
mov
pop
cli
test
lea
out
jmp
inc
xor
dec
sub
icebp
in
jp
sti
shll
or
cs
mov
add
sbb
xor
lahf
inc
ror
das
insb
and
cs
sub
dec
data16
pop
addb
es
jg
pop
stc
int
imul
jo
push
sbb
mov
push
fcomps
test
sti
je
hlt
rcl
int
or
fcmovne
pop
lret
movsb
xchg
or
dec
cmp
push
outsb
adc
push
test
mov
mov
call
cld
sbb
das
int3
pop
push
xlat
out
jno
cs
jmp
push
xchg
orb
add
jmp
jbe
add
xchg
pop
pop
in
xor
cmpsb
add
and
push
pop
outsl
push
mov
sbb
pop
pop
cltd
or
addr16
pop
pop
jecxz
rcr
les
subl
adc
push
mov
xchg
add
stos
xrelease
push
mov
lret
nop
lods
jmp
ja
aaa
jne
inc
and
addl
jae
sbb
ss
aaa
pusha
mov
loopne
aam
aam
inc
outsl
test
sub
es
sbb
xchg
dec
ret
in
jbe
jb
push
xor
and
mov
js
mov
cmpb
sbb
shll
mov
in
adc
imul
cld
dec
add
idivl
loopne
cmp
lret
inc
inc
push
cmpsb
loop
xchg
sub
or
xchg
addl
into
ss
mov
cmpb
cwtl
inc
in
mov
push
popf
ja
call
xchg
xchg
xchg
pop
mov
outsl
lret
outsl
xchg
js
push
fsubrs
inc
and
xchg
sbb
inc
jmp
push
mov
jl
rol
xchg
mov
into
dec
int
dec
out
mov
rcrb
adc
inc
sbb
lock
fwait
leave
mov
pop
ds
fwait
mov
mov
mov
and
mov
or
mov
dec
cmp
ljmp
jl
sub
scas
pushf
adc
jnp
shrb
push
pop
int
mov
sbb
jmp
daa
insl
mov
mov
ret
data16
xchg
add
jg
je
les
inc
mov
dec
hlt
mov
popf
mov
xor
adc
push
test
xor
mov
in
nop
push
jbe
sbb
or
mov
ret
sub
and
fwait
popf
jnp
mov
imul
cmp
xchg
sahf
call
adc
cmp
inc
add
inc
lods
xor
pop
shlb
sub
repz
mov
lds
aam
rcr
push
jno
add
mov
push
mov
adc
insl
cwtl
out
out
xor
dec
mov
and
mov
mov
xchg
push
out
call
mov
cmp
rcrb
pop
jno
push
arpl
arpl
and
icebp
xchg
push
rol
jne
push
lock
pop
aad
and
and
orb
inc
pushf
mov
mov
cmpb
cltd
jmp
push
mov
cmp
rcll
leave
insb
pusha
out
mov
sub
adc
inc
jns
mull
jnp
aam
mov
ss
sub
inc
push
test
lahf
adc
pop
jecxz
add
adc
out
out
xchg
roll
cmp
xchg
cmp
adc
dec
xchg
dec
iret
js
pop
push
pop
cmp
mov
ss
cmp
outsl
imul
rol
sbbb
mov
addr16
jl
icebp
test
fildl
gs
cmc
push
xor
rcr
push
xchg
les
or
imul
loope
adc
push
xchg
sbb
jns
mov
in
push
mov
std
fidivl
cld
inc
fidivs
sub
xlat
pushf
sub
mov
jle
sarb
mov
cmp
dec
hlt
mov
and
or
aas
xchg
inc
out
xor
dec
sbb
mov
xchg
stos
fdivl
cltd
mov
das
shr
mov
aas
arpl
xor
stos
jae
inc
dec
xchg
int3
mov
sub
mov
test
std
stc
pop
rol
xor
fucomp
pop
scas
out
mov
leave
or
mov
pop
mov
sub
mulb
sbbl
xorps
pop
add
loop
push
or
jns
sarl
daa
pusha
jbe
inc
cltd
jg
inc
mov
inc
into
mov
inc
neg
adc
dec
sbb
stos
jo
push
enter
inc
or
push
lock
pop
pop
mov
roll
cmp
addr16
fmulp
push
adc
leave
repnz
sbb
pop
mov
sub
mov
cmp
mov
fdivs
xchg
dec
sar
push
mulb
mov
xor
fwait
data16
fcomps
gs
rcrb
add
and
lret
mov
insb
adc
mov
mov
popf
bound
sbbl
jbe
sub
inc
inc
or
fstp
mov
stos
les
ret
cwtl
push
fwait
mov
pushf
xor
jle
sub
lahf
lahf
xlat
cmp
mov
pop
push
je
mov
fiadds
inc
and
or
sub
mov
data16
ficoms
ljmp
out
mov
popa
pop
and
pusha
das
fildl
cmpsb
mov
add
xchg
data16
cmpsl
pusha
mov
inc
push
in
into
adc
xchg
push
inc
xchg
xchg
daa
jnp
inc
sub
pop
repz
mov
es
mov
ret
jmp
pop
test
pop
mov
lock
aam
enter
fwait
pop
lret
xchg
or
mov
pop
push
lock
mov
push
fimull
lea
mov
lds
enter
sti
nop
lcall
mov
mov
xor
xchg
mov
xor
jae
sub
pop
mov
adc
push
cltd
mov
or
sub
in
mul
adc
js
cld
nop
lret
or
sti
jle
mov
xchg
iret
loopne
mov
pop
test
loop
hlt
ficoml
cmc
sbbb
ljmp
in
mov
adc
mov
xchg
mov
ljmp
sbb
jo
mov
dec
cld
insl
or
scas
ss
sbb
cmp
aad
xor
out
jno
jg
incb
faddl
jmp
fsubrs
mov
mov
push
addb
or
mov
mov
add
inc
jno
xor
cmp
lock
adc
push
xchg
cmp
frstor
dec
dec
and
sub
leave
in
jge
lea
test
jmp
loope
push
shlb
sti
sbb
cmpsl
lods
int3
ror
rcrb
and
clc
dec
push
xchg
inc
push
push
add
lods
and
sarb
push
sub
add
imul
inc
xchg
movsl
sub
push
in
adc
ret
test
popf
cmc
jno
mov
negl
lods
rclb
out
add
decl
pop
int3
stc
sub
stos
sub
rcrb
test
scas
sub
scas
jns
aaa
leave
dec
je
xchg
std
xchg
fwait
dec
mov
outsl
jns
ds
add
nop
in
mov
stc
mov
and
dec
push
add
mov
loope
test
adc
sbb
mov
mov
dec
dec
or
and
shll
loopne
jecxz
mov
je
and
cmpsl
mov
xor
adc
add
aam
test
aas
lret
mov
call
shr
jp
xchg
push
adc
push
ret
scas
jae
jmp
ret
jns
sub
xor
adcb
leave
into
es
jno
dec
mov
or
ds
sbb
and
sbb
or
sbb
pop
mov
mov
push
dec
ds
sbb
gs
in
mov
jg
sub
lds
jbe
add
xor
pop
orb
lcallw
popa
mov
ss
sub
push
pop
insb
lea
sub
in
popa
jecxz
lcall
mov
inc
xchg
scas
aaa
adc
loop
loopne
xchg
dec
ret
pushf
push
sbb
cwtl
push
push
movb
lods
fldl2t
push
jl
pop
sub
gs
sbb
fidivrs
addb
fidivl
popf
int3
dec
mov
aas
mov
je
push
cmpsb
xlat
das
push
dec
lahf
fwait
mov
notb
pop
in
nop
jb
push
out
cmpb
or
fsubrl
add
das
ja
xor
sahf
push
xorl
notb
fdivl
mov
loopne
push
inc
in
lods
inc
jae
pusha
andl
int3
loopne
jecxz
fs
push
or
movsl
les
pop
pop
xchg
jb
shrb
js
sbb
xor
cmpsb
into
mov
inc
out
xor
and
hlt
or
lock
aam
sbb
es
push
xor
arpl
cltd
mov
pop
fnstenv
test
into
mov
jmp
ret
sbb
into
add
or
pop
fnstsw
sub
jns
fimull
or
andb
ret
cltd
mov
les
out
mov
sub
stos
fs
popf
jge
dec
pop
movsl
mov
inc
repz
rorl
aad
test
sbb
shll
icebp
mov
jns
mov
bnd
lret
push
inc
imul
popa
mov
les
mov
into
push
out
pop
mov
mov
sti
pop
pop
push
mov
xchg
ret
sub
cmp
mov
fcmove
stos
and
lea
add
dec
mov
daa
adcl
jmp
inc
out
popa
imul
lods
ficomps
bound
inc
xor
std
lahf
mov
dec
jo
fdivrs
repz
mov
add
nop
mov
mov
xor
in
pop
xor
jp
xchg
dec
cmpsl
push
pop
add
std
test
shrl
dec
scas
push
ja
pusha
mov
fistpll
inc
jb
sahf
movsb
clc
int3
ret
cmpsl
dec
mov
cmp
xchg
icebp
jnp
popa
mov
aad
outsl
roll
mov
pop
lret
aas
test
loope
fs
push
pop
cmp
sar
iret
cmpsl
movsl
fcoml
sub
popa
ljmp
xchg
sbb
shlb
shrl
or
insl
lahf
xor
mov
and
ret
shrb
xchg
ja
lds
mov
xor
sbb
jnp
or
popf
sbb
out
korb
ja
inc
add
cmp
sub
pop
aas
daa
or
sbbb
aam
test
xchg
jns
stos
and
jl
mov
call
je
cmp
push
push
sti
sub
outsl
stc
mov
xor
sub
movsb
jmp
xchg
ljmp
subb
lahf
imul
je
bound
in
test
or
cmpl
xor
inc
sti
dec
lds
fidivl
jnp
jle
mov
in
ja
xchg
lods
scas
push
adc
add
jmp
xor
cmp
imul
xchg
clc
add
sahf
or
lret
sub
mov
or
ret
pop
aam
dec
pop
cmp
xor
dec
mov
fs
push
inc
sub
std
sbb
push
fsubl
fcoms
add
adc
push
ds
test
jns
push
inc
ficompl
inc
add
mov
sub
enter
ret
lcall
pop
sub
sbb
sub
mov
sub
pop
pop
fildl
scas
test
xchg
in
sbb
inc
test
pop
stos
jp
into
mov
add
movsl
in
adc
dec
cld
das
xchg
xor
data16
ljmp
adc
mov
test
inc
lods
test
sbb
and
mov
arpl
mov
scas
std
shrb
xchg
or
cmp
inc
loope
or
push
dec
fs
gs
loopne
pushl
mov
adc
cmp
icebp
sbb
push
testl
inc
mov
std
outsb
cmc
jae
movsl
adc
push
out
mov
lret
mov
fs
rolb
xchg
subb
sbb
sbb
jbe
lret
inc
ds
or
repz
icebp
fcompl
sti
push
dec
jge
ret
cmp
repz
les
xchg
mov
leave
pop
mov
scas
scas
mov
rol
loopne
stos
mov
xchg
pusha
outsl
ds
and
into
loope
push
inc
add
add
and
cld
push
xchg
test
out
dec
ret
cmp
in
fwait
js
je
sti
add
loopne
dec
inc
sarl
shll
sbb
mov
lods
gs
pop
and
aam
adc
xor
int3
pushf
pop
jecxz
xchg
and
arpl
sbb
jbe
sub
test
cld
cwtl
add
sti
xchg
sahf
mov
test
outsb
mov
sub
lods
push
fsub
xor
das
cmp
pop
sahf
imul
das
sub
inc
xor
std
lahf
or
jns
inc
xor
jp
cltd
dec
cltd
nop
scas
cwtl
jg
adc
xchg
aas
popf
inc
lret
cmp
dec
xchg
sub
pushf
into
or
inc
jmp
adc
add
insb
jle
sbb
xchg
lret
add
lea
and
subl
cltd
outsl
add
into
stos
or
into
loope
aam
lods
aad
and
addl
int3
sbb
mov
test
cli
cmpsb
sub
int3
inc
mov
xchg
add
cpuid
cli
or
push
je
es
cmp
ss
bound
inc
inc
repnz
and
testl
jmp
or
add
cmp
jecxz
popl
pop
or
enter
repz
jmp
mov
mov
bndldx
es
sub
cmpsb
icebp
fistl
loop
sbb
imulb
mov
pop
addr16
mov
rorb
add
nop
jle
cmp
aas
dec
mov
lahf
andb
shl
jmp
inc
jp
jle
shll
jle
or
xchg
push
nop
ds
out
cmpb
jns
mov
mov
xor
loope
iret
mov
xor
clc
cmp
or
int
xchg
jbe
lret
inc
loope
rcr
mov
push
sbb
jbe
insb
sub
adc
mov
gs
aaa
shll
push
and
call
addr16
inc
inc
pcmpgtd
adc
cld
add
xchg
dec
data16
outsb
dec
jge
mov
jb
inc
mov
insl
push
loop
push
xor
cmp
adc
and
sahf
outsb
push
mov
adc
cmp
out
mov
loop
pop
clc
push
mov
cmp
lret
jmp
push
xlat
adc
mov
inc
sbb
je
int3
push
or
dec
mov
imul
ja
add
sbb
in
add
mov
mov
add
repnz
or
orb
les
jge
scas
fistl
int
push
push
popa
or
rcrl
fisttps
loop
mov
mov
add
sbb
mov
mov
imul
test
mov
ficoml
cmp
sbb
add
xchg
sahf
and
fwait
je
or
cmp
mov
and
cmp
mov
jae
insb
aas
jae
jns
jg
test
inc
out
mov
adc
jmp
insb
adc
push
lret
in
pop
jae
stos
cld
dec
pop
xorl
or
jg
out
and
jmp
cltd
jno
out
dec
xchg
dec
inc
push
push
cld
scas
xchg
sarb
inc
gs
mov
aaa
pop
stc
cltd
outsl
jl
sahf
cmpsl
fcoml
mov
cmp
ror
mov
xchg
dec
inc
push
int
sbb
add
add
mov
add
xchg
shrl
inc
and
iret
adc
inc
fstpt
mov
or
cmp
xor
scas
xchg
push
mov
lods
sahf
repz
outsl
icebp
mov
push
push
jno
mov
pushf
loopne
push
out
ss
imul
add
jns
sub
xor
lret
jp
sbb
int
push
mov
jl
jmp
adc
dec
xor
mov
push
jno
sub
inc
es
sub
cmp
imul
mov
cltd
push
cld
mov
dec
cmp
je
push
enter
scas
mov
daa
cli
sub
xor
xor
aaa
cmc
mov
hlt
mov
rclb
or
addr16
mov
push
push
lock
notb
mov
mov
xchg
sub
mov
stos
iret
insl
imul
pop
add
push
xor
into
lods
mov
sbb
mov
hlt
mov
roll
je
icebp
sub
pop
mov
fdivrl
movsl
push
lret
xchg
insl
pop
pusha
pop
fs
int
cmpsl
mov
pusha
dec
mov
leave
movl
inc
inc
pop
lcall
or
inc
vmovd
push
mov
xor
mov
mov
cmp
arpl
outsb
or
xchg
scas
mov
sti
push
gs
xchg
dec
pop
mov
out
in
mov
push
fsubl
or
adc
out
push
mov
out
stos
ret
jmp
cmp
push
fucomi
add
mov
arpl
pop
popf
adc
xor
das
xchg
mov
or
push
cmc
out
dec
sub
das
or
jae
mov
adc
push
sub
cmp
scas
dec
flds
xorb
pop
pop
js
out
stos
inc
sub
mov
pushf
cmp
ss
leave
and
dec
mov
movsl
das
pop
int
add
test
sub
push
pop
fnstsw
push
pop
call
test
shll
push
imul
xor
or
mov
pushf
and
bound
data16
pop
dec
sbb
setb
sahf
notl
js
leave
sahf
sub
jo
daa
or
lock
mov
push
push
pop
inc
scas
lods
sbb
xchg
andb
add
push
dec
pushf
cmp
ja
jl
test
loop
cmp
push
mov
insb
mov
mov
jp
mov
lcall
push
loope
pop
jnp
push
fs
or
sbb
sarl
daa
shlb
adc
sub
out
iret
cmp
aaa
mov
fsubrl
lods
cmp
dec
ret
dec
xchg
pop
jecxz
lret
hlt
rcr
fadds
mov
xchg
inc
daa
lea
nop
pop
jmp
loopne
inc
push
pop
clc
add
das
and
sbb
daa
stc
dec
imul
mov
and
pop
cmp
or
das
loopne
sub
xchg
mov
push
pushf
lock
pop
xor
sahf
out
repz
loop
jno
aam
sbb
inc
dec
aam
std
mov
mov
pushf
or
dec
test
push
lcall
sbb
out
and
sti
mov
mov
cmpsl
add
jns
mov
mov
cmc
rcll
lods
push
mov
test
iret
mov
outsb
jp
pop
sbb
fldt
mov
fildll
mov
rcrb
and
movsl
jge
sarl
insb
outsl
sbb
cmpsb
mov
imul
add
mov
jo
dec
lahf
nop
add
int
xor
fwait
cmp
lea
add
mov
es
es
cld
jge
jbe
sbb
sbb
mov
and
mov
out
push
test
cmp
ffree
pop
icebp
inc
pop
jb
adc
jl
fsubrs
nop
jno
mov
mov
pop
arpl
cmp
lcall
cmpsl
arpl
and
inc
stc
jmp
scas
mov
mov
movsb
clc
xchg
push
add
testb
fsubp
jo
cli
adc
cmc
loop
adc
rcl
mov
psllq
jmp
lock
enter
testb
xchg
in
int3
and
out
push
in
jmp
adc
jbe
cmpsl
pop
mov
sub
jecxz
add
add
pop
das
cltd
aas
or
inc
loopne
xchg
and
lds
stos
gs
pop
ss
jae
out
in
push
aad
sub
scas
jbe
dec
mov
pop
cmp
mov
mov
cmp
cmp
pop
inc
out
paddb
cmpsb
jnp
xor
xor
xor
cltd
xor
sbb
lcall
clc
push
lcall
mov
mov
pop
fistl
inc
mov
into
jbe
fisttps
ja
dec
lcall
mov
inc
jle
or
sahf
stos
sahf
orl
pop
lock
xor
inc
xchg
xor
cmp
repz
adc
out
lcall
push
icebp
mov
jb
inc
pop
inc
push
inc
jp
push
or
mov
and
sub
mov
inc
xchg
ljmp
lcall
push
sbb
xor
arpl
test
cltd
add
lcall
add
dec
push
xor
xor
inc
mov
jp
or
xor
pushf
pop
test
sub
adc
ret
stos
adc
jmp
dec
lods
xor
shrb
int3
jns
imul
fisttps
sbb
add
aad
pop
mov
lret
sub
insb
pop
aam
push
mov
in
xchg
push
sbb
ret
ficoml
jb
lret
add
sbbl
xchg
aam
mov
dec
xor
add
jae
mov
fidivs
lea
add
pop
pop
mov
pop
pop
dec
pop
je
add
loope
push
je
aad
lds
imul
lret
clc
lret
loop
sbb
je
pop
mov
xchg
add
adc
and
sbb
sbb
mov
xchg
notb
mov
orb
mov
das
in
loope
cmp
int
jp
jae
cld
sub
ss
fwait
push
pusha
dec
inc
pop
scas
pop
into
and
cmp
rorl
cs
mov
fnstcw
sub
out
pop
ret
push
sub
sbb
mov
scas
in
inc
adcl
mov
ss
lds
lret
sub
adc
or
cmc
push
xchg
test
xchg
das
mov
fxam
mov
lea
push
mov
lock
lret
pop
ljmp
cmc
fcmovu
cmp
xchg
mov
outsb
mov
sar
cmp
js
leave
out
push
ret
fs
mov
xor
jmp
ds
jge
daa
mov
pushf
aad
xor
and
imul
cmp
in
mov
in
mov
jbe
arpl
jnp
xor
and
mov
jae
pop
shl
test
push
mov
jge
jecxz
cmp
and
sub
mov
loopne
add
outsb
sbb
fs
les
repnz
in
and
fiadds
dec
in
push
and
pusha
pop
mov
enter
mov
pop
jp
inc
gs
mov
repnz
dec
and
pop
and
aam
jle
cmpsb
mov
xchg
xchg
jb
imul
insl
icebp
jnp
loope
fsubl
cmpsl
fdivp
inc
cmpsl
pop
arpl
adc
es
xchg
mov
inc
pop
scas
fldl
insb
xchg
outsl
push
icebp
jnp
jle
push
cltd
add
rcll
pop
mov
mov
sbb
or
lret
es
addl
lret
outsl
sbb
cmpsl
test
pop
fisubl
mov
je
xchg
dec
add
jmp
cmpb
mov
movsl
lods
push
clc
xchg
nop
insb
push
out
inc
dec
int3
xchg
cmpsb
out
ret
mov
dec
loop
inc
ss
and
std
xor
sbb
push
push
or
mov
insl
cmp
sti
les
adc
mov
jbe
fbld
adc
loope
mov
push
fwait
loop
add
mov
xchg
xor
add
jg
mov
into
mov
test
test
test
jne
test
dec
repz
addl
call
stc
mov
enter
mov
sub
jecxz
cld
adc
jbe
push
inc
das
jge
or
cmp
popa
mov
not
out
xchg
insl
push
dec
stc
testb
inc
mov
enter
les
push
cmp
mov
subb
stos
lea
cmp
pcmpgtw
xchg
mov
fnstenv
fdivs
in
je,pt
aas
push
pop
ljmp
jecxz
ret
sbb
fsts
dec
divb
mov
das
push
lea
repnz
xchg
pop
xchg
jb
jne
mov
and
pop
std
ret
mov
bound
add
pop
lds
mov
andb
out
mov
adc
pop
fstpl
aad
push
ret
push
dec
aas
clc
mov
dec
dec
mov
dec
pop
sbb
and
arpl
pop
add
push
push
mov
mov
pop
dec
sbb
pop
or
mov
movsb
sbb
call
or
push
sub
cwtl
mov
mov
push
mov
add
pop
mov
aad
shl
aas
jns
push
outsl
push
mov
pushf
scas
mov
mov
sar
jmp
dec
out
jb
jb
mov
jmp
mov
add
je
aas
xor
push
cmpsb
lcall
mov
lods
inc
call
mov
mov
jno
jge
insl
insl
xor
loopne
and
daa
mov
scas
mov
mov
imul
or
push
cwtl
add
test
outsl
shrl
clc
cmc
addr16
mov
xor
in
sbb
fildl
in
sbb
dec
adc
dec
xor
sarl
pop
sub
push
dec
rcrb
js
mov
insb
and
test
jecxz
lret
add
cmp
lods
jl
mov
push
ror
in
push
movsb
lock
sub
mov
sbb
xchg
fs
pop
mov
inc
mulb
mov
dec
sbb
mov
cmc
adc
mov
in
add
cmp
inc
loop
and
jb
sub
ss
jne
ret
int
fcomps
nop
out
push
je
fisttpl
imul
test
adc
inc
jns
sub
es
movsb
inc
cmp
mov
add
insl
cmpsl
dec
sub
xor
out
test
add
xchg
imul
sbbb
add
mov
jbe
mov
mov
pop
addr16
or
scas
lcall
imul
mov
xchg
jnp
ret
aas
jecxz
xlat
jb
push
cwtl
mov
jg
fs
cld
mov
push
lock
sbb
jl
cmp
sbb
jg
fistpl
lahf
js
mov
jl
mov
sbb
push
inc
cld
vpaddusb
scas
mov
fmul
add
sbb
mov
in
inc
xchg
or
or
fisubrs
int
mov
out
jb
fists
pop
sbb
test
fwait
cmp
add
mov
stos
xor
push
lods
pop
mov
lcall
push
aam
or
dec
push
pusha
das
cld
sahf
fadds
je
xchg
mov
jg
arpl
sbb
js
cmc
fwait
push
mov
push
lods
inc
adcl
push
pop
xor
sub
rorl
mov
outsb
mov
push
dec
scas
cmc
clc
mov
inc
fdivr
cmp
aam
xchg
cmp
pushf
mov
push
inc
and
add
and
adc
ds
mov
mov
iret
mov
xchg
mov
lods
sahf
sbb
jne
sbbb
ja
push
pusha
in
fwait
or
andb
lds
cmpsb
mov
out
lret
adc
rol
sbb
adc
mov
test
call
adc
cmp
into
fldcw
mov
adc
inc
in
movsl
lods
jbe
xchg
test
mov
add
fs
cli
ds
xlat
loopne
jbe
push
out
fstpl
mov
push
int
pusha
popa
nop
adc
in
push
ds
ja
cmp
or
push
lods
ffree
jecxz
insb
pop
or
xor
imul
gs
push
popa
and
and
mov
cmovge
imul
xor
fists
lret
aas
mov
inc
repz
imul
loop
dec
repnz
in
lock
cltd
sub
mov
inc
jl
push
pusha
bound
mov
lret
iret
in
sub
lret
push
mov
mov
fdivrs
int3
sbb
dec
mov
adc
or
test
jl
dec
add
cmp
loopne
aas
cs
sub
scas
push
cmp
dec
mov
mov
repnz
lret
movsb
shr
test
push
sub
shll
sbb
mov
in
aam
aas
xor
mov
sub
push
in
test
subl
in
mov
lahf
pop
pop
sbb
call
jne
push
movsl
and
aad
xchg
pop
imul
mov
arpl
ljmp
xchg
xchg
add
pushf
cmp
mov
add
lea
arpl
mov
iret
out
enter
movsl
loope
xor
jne
loopne
pop
or
sbb
inc
loop
dec
push
into
pop
jl
lock
adc
sub
mov
aas
ss
outsl
loope
mov
fldcw
mov
push
je
insb
dec
aaa
fwait
xor
jmp
mov
mov
jae
mov
lods
xchg
pushf
insb
mov
je
pop
jg
insl
jae
shl
lods
je
rorb
js
xchg
jle
ret
pop
sbb
jmp
or
lods
xor
in
scas
loope
add
mov
add
repnz
pop
out
pop
imul
adc
popa
xorl
xor
imul
cmp
ret
in
mov
or
sbb
das
inc
loopne
subl
addr16
cmpsl
push
xchg
mov
outsb
cltd
ss
test
add
sub
xor
test
push
mov
lret
or
and
pusha
xor
jg
test
sub
xor
adc
xchg
or
xchg
sbb
mov
xlat
jmp
add
mov
in
mov
mov
add
jb
roll
negb
pop
add
shll
xchg
or
jecxz
cmc
push
scas
out
mov
adc
mov
mov
movsl
icebp
mov
sar
jb
sahf
jp
lret
insl
ret
push
addr16
xchg
ss
cmpsl
pop
mov
in
jnp
push
cmpsb
adc
imul
cmp
aaa
lds
pop
jo
mov
add
test
test
jns
into
dec
push
pop
shll
aad
mov
int3
das
sub
not
lcall
hlt
stos
jge
sbb
idiv
mov
aaa
inc
lea
cmp
adcl
adc
push
dec
xor
jge
pop
jecxz
in
lcall
mov
mov
dec
mov
jne
add
jmp
jg
clc
sub
xchg
movsl
mov
pusha
jle
dec
leave
in
and
lds
arpl
scas
leave
insb
cmp
adcb
or
out
ss
mov
mov
dec
sbb
sbb
bound
jae
add
test
scas
cmp
int3
mov
cmp
iret
iret
or
pop
rclb
das
movsl
mov
push
inc
loop
dec
cmc
cmp
pop
stos
xor
cmpb
filds
adc
xlat
fcomps
jmp
pop
pop
sbb
in
inc
in
mull
cwtl
jae
dec
add
mov
gs
xchg
icebp
dec
lods
test
loope
ret
div
test
ds
sub
fs
cmc
imul
xor
push
cmp
xchg
xor
inc
inc
lock
xor
xchg
lds
push
movsl
sbb
loopne
int3
inc
push
jne
stc
push
xchg
cs
xchg
notl
mov
mov
push
push
mov
adc
push
lret
mov
repz
inc
push
xorb
xchg
jge
dec
jp
push
mov
adc
jns
cvtdq2ps
xor
data16
aaa
push
cwtl
fld
jo
pop
or
adc
lods
sub
enter
xor
stos
and
pcmpgtb
adc
pop
sti
popl
negb
lock
xchg
push
lret
or
in
fwait
daa
push
lds
mov
xchg
xor
inc
imul
je
icebp
mov
jl
rcr
scas
repz
sti
test
pop
push
call
addr16
mov
add
pop
stos
xlat
ret
ss
rolb
sbb
repnz
in
int3
dec
scas
enter
push
mov
push
cmpsl
cmpsb
xor
call
push
fsts
adc
xchg
shrl
cmpsb
cmc
outsb
jle
inc
jl
fbld
fs
mov
in
sub
out
pop
aam
and
ret
lret
das
inc
cmp
mov
push
mov
add
in
leave
ret
inc
mov
outsl
out
imul
jbe
add
jno
sbb
mov
adc
cld
je
into
mov
mov
lret
cmp
sbb
ficompl
mov
push
inc
test
cli
into
and
add
or
or
gs
push
sub
aam
pop
inc
or
xchg
mov
pop
stos
sahf
cli
shl
stc
jle
fcmove
stos
jmp
adc
stos
or
daa
aad
sub
daa
xor
mov
push
xor
lcall
cmp
xchg
jle
push
mov
popa
lahf
and
lahf
movsl
lods
out
jecxz
sbb
dec
aam
mov
mov
dec
jle
push
cmpb
xor
pop
pop
sub
sub
scas
pushf
mov
jp
cltd
pop
xchg
ficoms
add
lds
fidivl
mov
rcll
fdivl
scas
push
dec
lds
sub
jecxz
inc
loope
int3
stos
faddl
or
xor
fsubl
adc
dec
mov
dec
dec
lock
adc
and
xchg
movsb
inc
arpl
fisubrs
stc
cmp
push
ja
lret
jb
add
xchg
cmpsb
bound
mov
ss
inc
mov
sub
mov
imul
loop
sub
and
xor
cmpsl
test
add
lea
fnstenv
pop
in
jle
sub
dec
gs
pop
push
inc
or
lods
push
or
ds
lea
push
inc
cltd
adc
test
add
and
push
and
push
lock
jp
nop
test
adc
inc
test
pusha
push
dec
enter
idivl
lcall
xlat
inc
ds
jmp
push
test
sub
sub
dec
jg
dec
xchg
push
mov
pop
push
fsubs
outsb
fdivr
xchg
jle
sub
or
mov
jo
sahf
repnz
mov
loop
cld
nop
shll
mov
and
pop
pop
or
jns
lods
dec
mov
mulb
xchg
inc
jb
xchg
or
push
jle
fxch
scas
inc
mov
sbb
inc
popf
inc
das
fcmovnu
pop
in
xchg
test
int3
push
lds
add
aas
ja
movsl
fmul
push
fs
sub
mov
cmp
and
rolb
jmp
xor
popf
cli
pusha
xchg
xor
das
dec
xlat
push
and
cmp
push
hlt
cmpl
xor
cwtl
lds
ss
push
idivb
mov
stos
cltd
lds
push
push
pop
lret
lret
sarb
jp
dec
push
pusha
or
pusha
pop
ja
sti
enter
sbb
shlb
fnstenv
jmp
shl
xchg
pushf
lods
dec
dec
ss
hlt
xor
mov
add
mov
or
sub
iret
mov
add
xchg
sub
dec
xchg
repnz
loopne
cwtl
mov
rolb
xchg
pop
sub
mov
test
mov
xor
movsb
pop
test
or
cmp
jnp
out
xchg
sbb
lods
and
add
mov
and
xor
jle
and
xor
incl
cmp
jns
repnz
or
push
add
cmp
pop
mov
aaa
insb
ret
push
mov
into
popa
push
inc
jne
stc
lock
jns
cmpsl
testl
inc
jmp
es
mov
cwtl
bound
outsb
sbb
dec
fwait
aad
lea
lret
push
stos
sahf
or
dec
clc
mov
xchg
dec
jp
or
dec
xor
push
inc
pop
add
inc
lods
movsb
aaa
les
nop
fucom
in
int
loope,pn
int
addb
xchg
pop
sbb
psrlw
ja
sub
dec
mov
addb
sbb
inc
mov
sub
int
mov
adc
incl
popa
dec
mov
sti
lret
je
dec
stos
sti
xchg
pusha
jae
imul
or
push
dec
jb
movsl
lea
insl
sahf
jno
daa
inc
js
out
jmp
dec
sub
and
mov
orl
or
xlat
movsl
cmpsb
cld
arpl
and
ja
xchg
int3
repnz
jg
mov
pop
je
mov
and
xchg
push
adc
jmp
jno
sbb
stos
push
scas
fldt
dec
adc
pop
aad
sbb
ficomps
notl
mov
sbb
mov
sbb
rcrl
arpl
jno
and
mov
insb
inc
adcl
sbb
repnz
cmp
addb
add
and
leave
sbb
mov
stos
loop
or
and
add
dec
jne
and
je
int
xchg
pop
and
adc
and
jge
mov
pop
adc
inc
mov
scas
sti
in
pop
addr16
cmp
push
pushf
fwait
js
out
pop
push
inc
adc
push
das
or
fists
add
mov
mov
jno
in
inc
dec
jne
xor
in
dec
cmova
sub
imulb
and
pop
push
outsl
stos
xlat
mov
cmp
test
cmp
mov
push
lods
dec
arpl
sti
repz
ja
dec
scas
in
dec
lahf
in
dec
ret
sub
popf
pop
xor
aas
les
fistps
insb
mov
fidivl
dec
pushf
daa
cs
outsb
mov
mov
xchg
mov
imul
inc
lock
jo
dec
iret
xchg
ljmp
mov
mov
push
insb
je
push
dec
shrl
ficoms
sarb
sub
inc
pop
or
je
jb
popa
cmp
rolb
mov
lea
sbbl
loopne
cld
mov
mov
arpl
in
mov
ljmp
dec
pop
push
inc
cmp
sub
and
ret
cmp
xchg
xchg
mulb
dec
hlt
xor
lock
into
adc
in
ds
fldenv
xchg
int3
aaa
mov
and
mov
repz
dec
sbb
sbb
dec
and
jae
sub
in
fisubrs
sar
scas
mov
jno
lds
outsb
xchg
rcll
ror
rcrb
idivl
test
test
addr16
and
mov
mov
dec
dec
nop
jae
xchg
cmp
jecxz
inc
leave
add
vxorps
ja
sbb
iret
fnstsw
inc
sbb
sub
push
inc
sbb
jae
jg
aam
paddw
mov
adc
rcrb
dec
mov
imul
push
adc
out
sub
inc
push
pop
ss
inc
test
fwait
sbb
orb
inc
popa
outsb
sbb
jg
jmp
or
popf
sbb
lock
pop
cli
mov
orl
xchg
cwtl
xchg
lcall
sub
call
jmp
add
xlat
cmpsb
mov
lar
push
mov
cmpsl
out
and
jecxz
mov
mull
xor
xchg
lcall
inc
xchg
inc
or
lea
push
and
cmc
mov
ficomps
clc
dec
pop
inc
push
xor
fs
and
inc
cs
add
imul
pusha
in
addl
frstor
mov
fcmovne
and
rcrl
ret
xchg
sbb
fisttps
inc
lea
loope
cmp
jp
in
arpl
loopne
sbb
aad
sub
shlb
aam
fdivrp
jns
pop
mov
dec
add
pop
inc
daa
pop
insl
xor
and
mov
mov
cmc
inc
and
adc
sbb
repz
fsub
or
lret
cmp
int3
mov
jl
aam
xchg
xchg
cmpsb
cs
inc
lds
insl
out
jo
xor
jne
pop
dec
aaa
mov
cli
and
xor
out
or
divl
out
sbb
xchg
imul
xor
int3
and
dec
fidivl
hlt
les
pop
iret
leave
jae
cli
inc
mov
sub
push
sub
hlt
fstps
stos
dec
sbb
lahf
lds
adcb
out
dec
lock
cwtl
push
scas
sbb
inc
repnz
ja
jnp
and
test
xchg
ret
nop
add
pop
sbbb
int3
push
bound
or
bound
outsl
dec
fdivrs
cmp
jmp
push
mov
pop
or
sbb
add
lahf
int3
add
cmp
scas
push
mov
jns
add
mov
fidivs
int
mov
stc
bound
lods
fists
shl
in
push
mov
xlat
loopne
aam
jne
mov
test
xchg
mov
imul
stc
add
cmc
jnp
mov
mov
test
mov
and
xor
xor
ret
or
aad
test
cmp
adc
sub
push
dec
out
stc
jl
xorl
loope
lds
ja
dec
mov
fnstenv
mov
push
inc
out
cmpsl
mov
imul
mov
and
push
out
and
jo
jnp
mov
push
stos
faddl
xchg
add
mov
test
sub
mov
sub
mov
test
shll
fucomp
mov
fnsave
mov
jl
pop
push
inc
arpl
in
fsts
xor
xor
mov
mov
out
push
gs
mov
xlat
fimull
xchg
push
sub
aad
stos
pop
mov
xlat
lret
cmpsb
jnp
jae
sub
lahf
push
mov
xchg
push
xchg
outsl
out
lret
jae
loope
jge
sub
jecxz
ljmp
and
cs
dec
addb
loope
test
addr16
insl
vcvtdq2ps
jae
fsubs
and
fcomps
and
xchg
mov
inc
ds
idivl
lret
adc
cmp
lods
mov
xor
js
aam
jnp
mov
insb
push
jp
and
adc
ror
cwtl
mov
xor
test
dec
sub
sub
fstps
sbb
xchg
sbb
inc
imul
pusha
pop
xor
sub
leave
add
and
adc
ljmp
xor
xor
scas
xor
mov
inc
lcall
call
pop
xor
mov
mov
loope
lcall
jle
movsb
rolb
lods
xchg
push
rorl
and
into
pop
scas
lock
mov
sub
mov
mov
push
jb
mov
aaa
cmp
lret
mov
les
repnz
addr16
loopne
and
fisttpl
mov
fldl
inc
decl
fs
loop
mov
arpl
jp
cmc
inc
or
insl
loope
sub
and
push
scas
xchg
sbb
push
add
cmc
mov
sbb
inc
je
push
lods
jge
jecxz
sbb
pusha
push
jg
and
mov
push
mov
daa
aas
jae
jg
ror
rorl
push
and
out
sub
push
fidivl
push
lahf
or
insb
orl
lds
outsb
fidivrl
mov
clc
mov
jae
pop
int
es
jne
mov
push
mov
cmpsb
sub
mov
jo
lea
stos
add
mov
push
pop
mov
add
sti
js
sbb
sub
mov
sub
xor
cmc
jnp
jle
mov
push
lret
sbb
jge
pop
je
jnp
ficompl
lock
in
pushf
mov
mov
loope
pop
inc
ja
cmpsb
cmp
shrb
stos
adc
call
inc
pusha
stos
sub
pop
dec
aas
out
cmp
mov
adc
cltd
lret
sbb
inc
test
mov
rcrl
leave
fidivs
pop
sub
xor
sbb
push
cmp
inc
or
je
inc
aam
mov
rcrb
jge
mov
dec
in
insb
mov
inc
repz
sub
outsl
mov
in
push
xchg
or
std
and
add
pop
sahf
inc
and
adc
stc
pushf
stos
shll
sub
sti
xchg
cld
repz
and
mov
jmp
cli
ja
dec
sub
cmp
sbb
push
dec
dec
pop
mov
adc
scas
popa
mov
ret
inc
dec
mov
popf
cmp
imul
cmp
xchg
pop
push
jno
lods
out
xchg
or
xchg
or
repz
pop
xchg
ljmp
pop
js
hlt
xor
xchg
pop
jns
jge
jb
clc
nop
mov
dec
test
sti
and
call
idiv
push
mov
xchg
mov
shl
popf
xchg
stos
and
sub
mov
add
testb
xor
mov
in
fsubp
mov
jecxz
loop
shll
push
sbb
fcmove
mov
inc
push
inc
rcr
ja
add
loop
incb
inc
sbb
dec
sahf
cmp
insb
jle
fimuls
xchg
push
mov
iret
out
dec
ja
sahf
jae
rcl
aad
out
test
fdivs
aas
push
xchg
test
sbb
push
xchg
add
mov
mov
mov
xchg
jge
push
nop
rcrl
sbb
sahf
add
xor
in
imul
mov
je
push
popf
insl
iret
iret
pop
les
sahf
push
into
pop
sti
addl
test
adc
mov
rolb
daa
xchg
adc
jp
int3
popf
jge
pop
pushf
negb
mov
add
lods
idivb
jno
insb
das
add
dec
mov
jg
iret
push
jnp
shll
insb
xchg
sbb
nop
addl
arpl
repnz
leave
test
adc
je
xor
sbb
popa
rcrl
icebp
fsubp
cwtl
jl
xchg
ficoml
add
and
daa
dec
ret
mov
adc
dec
mov
inc
or
cltd
aaa
inc
out
movsb
push
mov
xchg
fdivrs
push
add
inc
xchg
jp
push
mov
mov
push
add
call
ret
xchg
push
jb
push
push
sbb
mov
sbb
and
fs
push
into
insl
jb
enter
aad
sbb
mov
mov
sub
out
cmp
xchg
testl
imul
lcall
inc
mov
pop
sbb
mov
pop
pop
xchg
arpl
push
movsb
xchg
xor
cmpb
fwait
cltd
xor
xor
scas
ljmp
aam
test
xchg
into
pop
ret
lods
test
inc
and
loopne
inc
hlt
mov
je
fsubl
adc
adc
sbb
lcall
xchg
lret
daa
jmp
ror
in
mov
jnp
sub
sbb
icebp
push
sbb
dec
jmp
gs
add
mov
es
cmp
cwtl
mov
aad
pop
imul
setno
mov
or
dec
pop
inc
punpcklbw
stc
arpl
dec
aaa
pop
push
faddp
fstl
xor
cld
adc
mov
js
xchg
mov
dec
dec
pop
mov
mov
aad
pushf
popl
std
push
shr
push
lahf
add
pop
jge
and
mov
addr16
inc
in
int
mov
pop
jg
or
and
or
js
xor
jne
sub
cmp
in
mov
scas
insb
aas
lahf
sub
jmp
push
call
lea
inc
enter
aaa
sarb
lock
xor
mov
xchg
cmp
push
fcmovb
jb
clc
lods
and
mov
inc
mov
xlat
sbb
repz
imul
lock
or
or
push
sub
das
inc
add
xchg
cs
ja
cmpsb
fsubl
cmc
sbb
cltd
xchg
scas
lods
jbe
mov
movsl
stc
pop
cwtl
add
mov
lahf
push
dec
fnstcw
jns
jo
mov
dec
sbb
nop
inc
mov
fidivrl
sub
and
push
test
notb
repnz
test
pushf
xchg
stos
loop
jp
cmpsl
aad
adc
lret
punpckhbw
insl
rorl
filds
fs
pop
sahf
and
int
adc
dec
jae
xchg
sbb
cmpsl
mov
popf
push
cld
lea
sub
data16
xchg
add
out
push
pop
pop
adc
pop
add
adc
outsl
cmp
inc
lret
negb
outsb
lahf
loop
pop
or
pop
sub
xchg
xchg
repz
jecxz
xchg
icebp
test
push
mov
mov
inc
aam
cmp
push
or
inc
loop
push
mov
adc
into
mov
rclb
push
sahf
xor
out
or
cltd
jge
and
push
in
mov
cmc
jae
sbb
jle
lahf
mov
sahf
push
aaa
jmp
xor
xchg
push
push
es
in
pop
fmuls
loopne
sbbl
add
mov
push
lcall
pop
pushf
cmc
add
dec
xchg
pushf
jae
or
out
adc
mov
mov
popa
cmpsl
ljmp
and
sub
xchg
dec
cmp
mov
aas
ss
mov
lock
dec
call
es
mov
pushf
cs
ret
outsb
mov
jo
jl
sub
nop
xorl
enter
cmp
adc
cmp
sti
dec
sub
pop
orb
ja
data16
xor
fmuls
mov
repz
mov
xchg
cmp
push
mov
or
mov
aas
mov
pop
sbb
in
mov
xchg
cmp
fisubrs
push
xor
sbb
fists
mov
out
xchg
std
push
aad
aaa
add
pop
or
push
xchg
fwait
lock
lret
stos
pop
jge
fistl
loope
sub
stc
mov
imul
sar
addr16
cmp
out
push
pop
bnd
or
jecxz
fldt
mov
inc
lods
dec
add
je
or
fmuls
lret
testb
or
mov
dec
repz
stos
or
lahf
aam
in
je
fwait
push
out
mov
mov
lods
fimuls
popa
push
lahf
daa
sahf
test
ja
xchg
data16
int3
adc
sub
lcall
clc
lods
scas
jns
cmp
xchg
scas
out
and
add
out
pop
inc
adc
jg
clc
daa
sti
in
in
aad
ror
popf
stos
popa
xchg
mov
or
movsb
push
or
mov
sub
imul
aam
mov
lcall
push
mov
sti
pop
test
test
mov
ss
push
xor
sti
orl
aam
ja
jp
pop
push
scas
dec
cmpsl
lea
nop
lret
jnp
roll
xor
jg
push
push
sub
sub
insb
xor
cmp
and
imul
and
test
inc
cmp
sbb
lock
nop
mov
dec
sub
enter
jl
dec
mov
inc
hlt
jecxz
mov
adc
inc
orl
push
in
cmc
cmp
and
je
cld
mov
out
add
push
or
adc
or
mov
xchg
bound
fmul
in
fsts
insb
frstor
test
adc
icebp
lahf
stos
icebp
jno
pop
loopne
inc
jbe
xor
or
rclb
xorl
xchg
xor
fcmovnbe
pop
cmpsl
dec
mov
sbb
imul
mov
lret
xchg
pop
fildll
jo
mov
push
cwtl
gs
dec
fimuls
in
pusha
mov
mov
out
or
imul
mov
pop
and
push
mov
aad
movsb
pushf
in
dec
xchg
push
aad
test
xchg
adc
mov
std
aad
ret
outsl
das
adc
out
pusha
jl
call
in
mov
dec
sub
test
sub
fabs
cmp
addr16
jl
push
fs
jmp
push
jl
fsubrs
rcr
loopne
rol
sub
enter
sti
test
cmp
cmp
or
pushf
dec
dec
ret
inc
pop
out
sub
outsl
int3
cs
sub
cwtl
inc
push
and
outsb
sbb
cmc
das
mov
mov
fcmove
add
jle
ss
jmp
or
arpl
pop
pop
vfnmsub213sd
not
leave
shrb
or
jp
in
rorb
loop
movsl
in
xchg
insb
in
rolb
or
pop
in
add
ljmp
dec
sbb
jmp
mov
xor
outsl
pop
jne
inc
dec
div
das
testb
lea
dec
loop
jmp
add
cmp
push
xor
mov
fimull
idivl
fs
fstl
xor
loop
mov
jmp
loopne
mov
shll
ja
cmp
or
pushf
lods
pop
or
sbb
inc
mov
ds
pop
jl
fidivl
ljmp
movsl
mov
sbb
xchg
loopne
rcrb
dec
xchg
pop
idivl
cmp
and
and
cmp
xor
pop
xor
jb
and
iret
inc
loope
js
mov
inc
cmc
jl
lock
xlat
push
sbb
adc
and
cli
in
lret
mov
dec
insb
pop
jg
fdivrl
sbb
sbbb
sti
inc
or
pop
aad
or
xchg
ficoms
iret
sub
popf
repz
sar
fucomip
loope
mov
push
int
sbb
pushf
cmpsb
or
scas
idivb
adc
out
into
cli
pop
shll
shlb
adc
sub
shrb
clc
repnz
push
cwtl
das
scas
or
or
push
xor
sub
dec
sub
repz
outsl
insb
jae
jl
mov
std
insl
lods
stos
sti
mov
stos
push
mov
lds
xor
int
mov
loop
jge
repnz
rolb
lods
outsl
popl
aas
imul
pop
xlat
roll
sub
pop
add
jecxz
out
push
loop
or
mov
mov
sbb
and
xchg
inc
dec
fsubs
fstpl
cmc
mov
or
pop
movsl
mov
lods
lods
rcrb
sbb
xchg
into
cli
or
mov
aad
lods
inc
aam
ss
add
jmp
sti
leave
jbe
fwait
and
cmp
add
xchg
sar
and
xchg
cwtl
push
push
ret
and
and
pop
sub
test
stc
mov
testb
and
mov
test
cmp
or
cmp
movsb
inc
xchg
and
decb
sub
pop
mov
ss
adc
mov
fwait
inc
js
int3
xchg
inc
push
out
and
ret
jg
scas
xchg
add
out
sbb
mov
aaa
dec
mov
mov
cmc
xchg
sub
xchg
mov
repz
pop
or
out
mov
jecxz
xchg
pop
loopne
ror
lcall
ror
xor
jle
loop
push
std
adc
lret
roll
inc
mov
mov
test
push
ss
iret
add
adc
repnz
das
jl
adc
fs
pushl
and
in
lods
out
inc
insb
ret
test
sti
popf
mov
fimull
or
xchg
push
add
pop
stos
push
out
stos
xor
sti
mov
jne
xchg
mov
mov
jns
test
cmp
push
orl
push
fisttpll
mov
pop
daa
sbb
repnz
int3
and
pushf
and
and
jg
into
mov
push
stc
jne
clc
mov
inc
jno
adc
test
xchg
cmp
mov
mov
pop
lock
scas
push
push
mov
and
pop
stc
jae
aam
sub
sahf
test
cld
pop
adc
nop
sbbb
out
in
push
mov
and
dec
xor
movsl
aas
adc
out
das
insl
clc
mov
ja
xor
inc
add
xor
or
inc
push
out
loopne
add
lcall
inc
dec
jbe
xor
cltd
test
ds
inc
cmc
pop
or
stos
es
push
rep
and
add
aas
xor
inc
sbb
inc
push
mov
jmp
mov
cmp
dec
mov
imul
cld
rorl
dec
iret
mov
lret
adc
add
aad
cwtl
sti
shlb
add
scas
cltd
fisubl
push
add
mov
jmp
jge
mov
lret
mov
push
jle
mov
lahf
in
sub
pop
cmp
arpl
add
jno
outsb
mov
stos
sbb
jo
dec
sbb
in
inc
cmp
push
jnp
xchg
sub
or
xor
sub
outsb
in
dec
inc
xor
sbb
out
push
ret
ret
pop
mov
loope
or
fmul
push
stos
outsb
lods
leave
sbb
out
xor
cli
mov
scas
or
or
addl
test
lret
push
outsb
movsl
dec
movsb
cmp
mov
iret
lcall
push
jge
mov
rolb
sbb
push
adcl
mov
jns
mov
push
movaps
in
jne
cld
jp
pop
test
sub
gs
mov
insb
sub
aas
dec
mov
cmpsl
add
shlb
das
lahf
movsb
mov
jmp
sbb
add
sbb
nop
popf
add
ja
mov
aam
xchg
sbbb
cmpsl
sub
inc
mov
mov
mov
lahf
lea
test
xchg
jae
jmp
push
lea
pop
movsb
movsl
and
nop
pmovmskb
cmpsl
test
orl
add
test
data16
sahf
adc
sarb
in
push
fs
jl
dec
icebp
divb
cmp
fldt
jp
push
nop
adc
mov
sbb
push
inc
or
ja
lods
subl
test
jle
xchg
mov
xor
xchg
daa
mulb
adc
xor
mov
inc
fcomps
xlat
push
fldl
and
xor
and
scas
sarb
add
inc
cmp
test
jle
aaa
sbb
inc
push
fnsave
mov
add
out
aam
test
hlt
rcrb
mov
pusha
inc
fs
sbb
std
sbb
dec
sarb
dec
jmp
cmc
test
ljmp
sbb
mov
fimuls
mov
repnz
out
fistl
test
outsl
push
inc
add
aad
add
inc
push
pop
xchg
shl
iret
das
ljmp
xchg
loop
fidivs
cs
jae
inc
xor
loop
jp
dec
roll
jb
inc
mov
insl
inc
push
adc
call
ror
pusha
fsubl
mov
lahf
and
mov
ja
cwtl
mov
mov
and
cmp
imul
ljmp
aam
data16
imul
pop
xchg
cltd
inc
push
out
mov
push
and
cld
dec
les
in
scas
in
insl
push
or
out
outsl
mov
xchg
pop
sub
verw
mov
addl
dec
ds
xchg
cltd
push
aad
dec
dec
lds
cmpsl
sub
out
mov
mov
and
push
loope
dec
lcall
in
pop
push
mov
sbb
adc
out
and
jp
aas
jecxz
sub
arpl
jns
xor
or
leave
enter
xchg
fnstcw
ja
outsl
sahf
or
jg
shll
gs
mov
xchg
push
nop
jge
cmp
mov
mov
inc
mov
mov
adc
sbb
cltd
cltd
sar
pop
imul
push
add
and
popf
sarb
fdivrs
sub
dec
xchg
mul
enter
loope
inc
rcrl
inc
mov
mov
ja
xor
repnz
push
aam
lea
jbe
repnz
pop
test
xchg
jno
adc
dec
leave
sub
cmp
sub
mov
daa
adc
push
jb
hlt
mov
xor
mov
aas
sbb
mov
jmp
mov
loope
aaa
xchg
and
jmp
pop
mov
xor
lods
pop
mov
mov
movsb
rdmsr
dec
mov
mov
movsb
hlt
or
xchg
and
insl
cmpsl
pop
in
insl
rcrb
mov
popf
punpckhdq
inc
insb
fwait
ds
int3
cmpsl
data16
sub
fs
mov
fiadds
pop
mov
jo
inc
mov
inc
mov
loope
jmp
cmp
inc
jg
sub
daa
arpl
es
lods
js
sbb
nop
scas
ss
sahf
jnp
mov
ficoml
loop
into
cs
pop
dec
pushf
daa
dec
adc
mov
test
sub
cmpsl
mov
xor
jbe
outsl
pushf
lcall
outsl
add
sbb
or
outsl
inc
iret
xor
popa
xor
jge
cltd
outsl
mov
shrl
fmuls
sub
mov
cmp
xchg
cmp
fnstcw
pop
enter
xor
mov
pop
or
mov
cwtl
mov
mov
xchg
stos
lea
jl
cmpsl
push
insl
jecxz
in
sbb
pop
testl
or
stos
sarl
mov
mov
mull
stc
loope
dec
cmp
pop
stos
mov
fdivp
loope
repz
cmpsb
xchg
call
and
mov
sahf
scas
xchg
lret
xor
insl
pop
aad
pop
add
add
nop
mov
or
sub
popa
adc
push
std
loopne
mov
push
sahf
add
mov
popf
enter
add
xor
je
xchg
stos
pop
push
dec
movsb
pop
push
test
mov
inc
in
mov
or
ljmp
mov
iret
push
xchg
jle
data16
xchg
es
add
rorl
fstpt
das
and
lock
push
adc
pop
inc
test
or
jno
loope
ret
popf
sahf
aaa
push
lock
jge
ficompl
fldl
sbb
shlb
xor
daa
and
std
xchg
stos
and
and
xor
xchg
jno
pop
pop
mov
fstl
cwtl
mov
xchg
mov
jo
or
cmpsb
lods
loope
sar
jno
dec
iret
pop
jo
inc
das
xchg
call
mov
and
sarw
fldl
and
dec
imul
cwtl
popf
or
jp
xor
fmull
push
rolb
push
dec
sub
dec
pop
adc
sbb
outsb
adc
jne
pop
mov
jmp
fucomp
scas
dec
jno
stos
mov
enter
sub
repz
lods
in
jo
pop
and
loopne
and
ja
insb
or
int
fcmovnb
lods
sub
repnz
cmc
repnz
pop
int
mov
mov
test
ret
mov
or
and
ror
xor
dec
test
jecxz
pop
mov
cmp
push
push
aaa
push
aas
sbb
shlb
mov
or
pop
lcall
dec
or
xor
jmp
push
clc
push
jne
adc
adc
add
xor
add
cmpsb
lods
in
add
clc
in
fbstp
test
jg
scas
test
xchg
mov
inc
jae
sbb
dec
call
repnz
adc
addr16
push
cmp
shlb
insl
lea
loope
or
fcompl
flds
mov
jmp
nopl
mov
ficoml
cwtl
mov
adc
jb
pop
push
test
sbb
add
sarb
mov
popa
pop
loop
loop
rorl
loop
or
pusha
lds
cmp
enter
sbb
dec
jle
and
cli
stos
lods
add
out
ret
push
scas
mov
pop
and
push
inc
fdivs
mov
fs
adc
pushf
mov
push
inc
stos
stos
cld
popf
movsb
or
rcr
ss
into
and
dec
and
stc
in
out
xchg
aaa
mov
sub
push
outsb
daa
xchg
jo
inc
mov
sub
out
or
or
inc
addr16
mov
inc
jbe
pop
cmpsb
int
icebp
dec
mov
orl
mov
mov
sub
and
and
jle
cs
cltd
xchg
aad
stos
bound
test
jae
in
dec
nop
fsub
cmpsl
aas
or
lock
cmp
inc
pop
mov
cmc
mov
mov
inc
repnz
or
sub
aam
in
jle
mov
mov
mov
xchg
test
in
fsubrs
xor
pop
stc
les
inc
lcall
bts
push
push
sti
cmp
and
jne
out
push
mov
pop
inc
jo
cmp
test
mov
jmp
dec
xor
lock
daa
sub
xchg
jns
int
jg
pushf
loopne
dec
data16
sti
pop
mov
sub
inc
xor
or
adc
and
mov
cltd
pop
sbb
cmp
pop
popw
push
add
sbb
cmp
cwtl
push
or
int
addr16
sbb
push
ret
mov
mov
lret
popf
mov
mov
mov
hlt
sbb
xor
sbb
in
adc
cmc
jo
adc
jnp
icebp
sti
xor
fdiv
test
lret
loope
push
mov
xorb
push
dec
repnz
outsb
or
pop
insl
and
loope
int3
xchg
mov
or
test
jo
arpl
ror
daa
outsl
loopne
push
test
movsl
daa
das
xor
lea
pop
add
mov
mov
add
mov
jae
mov
movsb
lret
fcompl
rcr
popa
movsl
xor
fstp
mov
sub
cmpsb
and
scas
dec
push
pop
scas
or
test
mov
daa
ds
mov
dec
jle
mov
push
sub
les
imulb
nop
xchg
xchg
sub
cmpsl
inc
mov
out
jo
std
pop
inc
add
ss
mov
sub
mov
je
gs
movsb
inc
ret
push
xchg
cmp
pop
mov
jp
test
daa
enter
and
sar
loopne,pn
fwait
test
add
inc
lcall
fidivrs
shll
cmc
mov
sarl
xor
stos
insb
adc
sbb
aad
inc
pop
jo
testb
mov
lock
scas
mov
adc
push
xchg
adc
push
jno
push
repnz
sub
and
push
dec
ds
inc
fadds
jnp
stos
pop
xchg
and
push
jbe
jo
pusha
jp
roll
rol
std
aaa
and
and
mov
cmp
xor
lea
or
adc
ljmp
mov
cmp
loopne
jg
lret
pop
popa
jge
dec
sub
mov
daa
inc
dec
sbb
movsb
out
xor
lcall
nop
cmpsl
push
xchg
cmc
mov
mov
pop
sti
orl
xchg
fisubrl
aas
add
pop
mov
adc
sbb
arpl
stos
adc
or
outsb
hlt
insb
fiadds
push
push
lret
mov
pop
lahf
push
sbb
aas
in
stos
mov
notb
cmpsb
int
test
push
jp
jge,pt
dec
mov
and
inc
shrl
int3
in
orb
inc
insl
les
out
and
xchg
rcr
test
xchg
arpl
push
bound
movsb
into
pop
mov
adc
popf
jns
xchg
pop
lret
jb
leave
xor
push
push
mulb
inc
jns
mov
add
in
lahf
xorb
xor
lret
xchg
adc
pop
pop
pop
fs
sbb
icebp
hlt
repnz
sti
ljmp
push
test
mov
xor
shl
push
mov
xchg
les
lret
jno
push
test
arpl
or
jmp
inc
fidivrs
xchg
xorb
ss
and
and
dec
cmp
adc
sub
xchg
dec
pop
add
and
add
shlb
ficompl
push
cld
pop
mov
jl
cld
test
addb
adc
lods
lea
clc
jecxz
sbb
scas
sbb
lret
jmp
xor
sarb
fcmovnbe
push
adc
in
cmp
push
iret
cmp
test
fmulp
sbbl
out
fimull
repz
mov
and
hlt
jecxz
push
cld
movsb
jo
les
mov
sbb
xor
outsl
xchg
js
push
out
movsb
mov
cmp
in
jg
sbb
mov
push
mov
dec
insl
jne
push
insl
mov
lods
out
fs
lahf
push
adc
loop
es
out
push
mov
push
in
jmp
int
sub
sahf
xchg
aas
inc
sub
or
sub
add
xor
into
lret
push
mov
js
ret
mov
rolb
dec
popa
pop
insl
mov
xor
sbb
rcll
jle
jle
lds
mov
push
xor
mov
andb
or
jnp
pop
cli
and
pop
add
mov
pop
cmc
daa
js
cmp
roll
xlat
push
pop
pop
xchg
data16
mov
push
sub
pop
popa
cmp
mov
incl
cmpsl
nop
aaa
stos
stc
xlat
mov
add
ja
add
push
or
pop
jne
mov
sub
bound
outsb
inc
sub
add
cwtl
notb
jns
loop
sub
jl
loopne
incb
dec
in
jo
fmull
gs
inc
outsb
sbb
daa
das
jns
fprem
xchg
out
lods
mov
mov
lea
into
in
movsb
or
faddl
or
dec
out
jg
fildl
ret
out
lcall
pop
sahf
out
into
pop
xor
adc
arpl
inc
aam
or
test
scas
andb
loope
enter
daa
dec
xchg
rclb
pop
mov
xchg
addr16
cld
nop
aas
cmp
sarb
pop
popa
mov
popa
inc
xchg
test
jb
outsb
mov
stos
and
jbe
in
add
mov
or
sub
or
cmp
mov
and
call
and
inc
lods
loopne
lock
xor
or
and
outsb
fdivrs
repz
mov
adc
sub
sbb
outsl
xchg
cmp
mov
dec
cmp
adc
jl
aas
into
ja
lret
xor
mov
aas
fsts
in
pop
push
cmp
lea
xor
out
dec
std
divl
ljmp
mov
scas
lods
in
inc
arpl
sub
mov
aam
js
push
std
ja
adc
insw
jb
push
enter
outsl
out
mov
pop
leave
paddusw
dec
cmp
pop
and
jl
mov
dec
scas
push
aad
mov
mov
fstpl
dec
movl
dec
inc
pop
adc
ja
into
fadd
je
aad
push
shll
hlt
fs
aam
ss
jmp
or
cs
adc
pop
ja
ret
jmp
shrd
jae
mov
mov
out
mov
or
pop
cmpsb
jmp
call
roll
inc
fisttpl
cmpsl
mov
into
sbb
outsb
hlt
cmp
add
mov
sti
and
add
jmp
sbb
xchg
pop
mov
xchg
push
andb
xchg
ret
daa
pop
push
add
inc
ret
stos
rcl
cltd
das
add
cmpsl
inc
jl
jge
pop
sarl
movsb
in
mov
in
jecxz
add
adc
inc
imul
es
scas
jp
push
jp
mov
rcr
hlt
jo
in
stc
sub
cwtl
mov
repz
push
nop
imul
add
cmp
das
movsl
rcl
lcall
and
push
or
popa
mov
jae
out
inc
leave
cmp
jl
lea
xor
inc
cltd
or
sbb
inc
jne
inc
mov
xchg
and
mov
push
in
fwait
adc
mov
xchg
pop
xlat
sahf
xchg
cmp
add
push
mov
hlt
repz
test
adc
notb
inc
imul
push
sbb
das
pushf
sti
in
dec
or
mov
sub
pop
in
cmp
outsl
add
std
push
out
mov
lret
test
jnp
lods
mov
jle
xchg
mov
adc
sub
movsl
push
add
popf
push
pushf
push
and
stc
jnp
loope
xlat
jbe
xchg
fadd
enter
pop
inc
adcb
adc
push
imulb
push
imul
test
mov
das
or
xchg
sbb
gs
lret
cmc
mov
daa
push
lock
out
sub
out
enter
push
cwtl
add
xor
pop
pop
jle
and
push
addb
ss
into
test
sub
mov
sub
js
push
fnstenv
xor
das
cmc
out
mov
fld
arpl
add
inc
je
scas
push
or
je
fstps
dec
adc
stos
cmp
mov
xchg
leave
jmp
push
mov
test
xchg
mov
fs
rcrb
add
and
daa
inc
test
in
pop
mov
jecxz
loopne
lret
ret
sbb
nop
dec
inc
clc
js
or
push
mov
xchg
nop
repz
and
push
movsb
gs
or
dec
dec
add
mov
push
jle
dec
mov
shlb
aad
and
adc
push
sar
push
mov
push
push
pop
pop
xor
push
and
pop
scas
dec
dec
shrb
pop
push
xchg
jmp
aaa
clc
insl
fdivr
scas
insw
mov
sbb
mov
mov
and
inc
xchg
adc
pop
cs
fcoms
pop
gs
dec
icebp
push
addr16
subb
sub
or
mov
mov
outsb
push
call
fs
mov
inc
sbb
negb
xchg
jmp
xchg
iret
jmp
enter
pop
mov
xchg
push
push
shll
push
dec
mov
js
adc
movsl
test
bound
fadds
mov
jo
decb
mov
ret
xchg
mov
adc
push
mov
pop
xorb
sub
sub
xchg
mov
jne
mov
jmp
lods
les
mov
mov
testl
cmp
jnp
push
jne
adc
fwait
cmp
ss
mov
push
rcrl
scas
cmp
cmc
push
xor
inc
idivl
pop
sbb
fnstcw
call
adc
sbb
cltd
mov
lret
xchg
pop
lea
loop
pusha
aas
adc
cmp
push
stos
xor
leave
repnz
scas
lods
lods
or
in
psrad
ja
pop
fistps
add
xchg
push
xchg
icebp
inc
push
imul
roll
pop
int
mov
sbb
rolb
int
mov
mov
pop
insb
out
adc
or
push
add
push
adc
and
test
int3
jl
jle
adc
or
mov
scas
cltd
jl
out
sub
orb
int3
addr16
jb
fsubrs
cs
hlt
shlb
xor
icebp
add
mov
aam
mov
clc
jns
mov
pop
cmpsb
dec
out
cli
lods
js
pop
jmp
add
cmp
mov
outsl
out
stos
cmp
or
and
nop
xchg
cmp
shrl
mov
or
xchg
fwait
jecxz
xchg
or
in
int3
jbe
mov
orb
sbb
add
icebp
cmc
popa
pusha
sbb
jge
test
and
add
push
pop
insl
dec
loop
movsb
stc
sahf
fdivl
sub
mov
or
cltd
scas
sbb
jp
sbb
dec
jnp
xor
add
aas
push
inc
inc
fs
js
dec
imul
jle
add
out
ds
mov
imul
ds
pop
lahf
mov
enter
loop
xchg
cmpsl
aas
filds
xor
sti
cli
outsb
inc
std
xor
push
iret
enter
shll
ja
lods
mov
add
enter
jmp
cmp
mov
loope
and
xor
jmp
fsubrl
mov
in
andb
push
inc
add
jle
dec
shlb
arpl
sbb
jp
add
add
dec
cmpsb
push
lods
sarl
mov
lahf
jp
sti
xchg
inc
stos
test
orb
ret
mov
cltd
inc
fiadds
mov
xchg
push
cmpsb
fidivrl
xor
inc
cwtl
adc
ficoml
lods
pop
fbstp
insb
cmc
mov
test
les
andb
sub
js
dec
pop
sub
pop
insl
test
or
pop
cmc
or
shlb
loope
test
insl
pusha
or
xor
inc
divl
in
xlat
push
mov
and
aad
popf
xorl
pop
jge
ds
pop
push
jmp
sub
subb
mov
sub
cmc
dec
std
std
popf
in
xor
aaa
cmp
aad
addr16
xchg
or
pop
pop
test
loope
out
adc
pop
movsl
jae
fadds
or
lock
mov
jns
jnp
hlt
or
iret
mov
push
and
push
sbb
stc
fisttpll
cmp
and
mov
cmpsl
inc
jno
sub
cld
mulb
iret
mov
dec
and
or
jbe
roll
pushf
lea
icebp
pushf
sub
sub
mov
pop
xchg
sti
nop
and
stc
aas
pop
shll
jg
add
bound
jmp
push
cmpl
ljmp
das
xchg
dec
roll
cmp
pop
or
sub
mov
xlat
jae
jbe
sti
jbe
cmc
sahf
push
pop
xchg
pop
ljmp
rorb
push
push
pusha
xchg
data16
loopne
adc
loope
ret
adc
xchg
or
pop
lcall
pop
ds
mov
fwait
cs
cmpsl
jle
popl
mov
mov
mov
or
out
sarl
sub
pop
das
dec
test
loop
lahf
mov
cmp
pushf
aas
cmp
sub
mov
lcall
add
in
xor
jae
movsl
cmp
sub
cwtl
dec
xchg
lcall
fs
mov
cmpsl
cltd
out
lock
nop
pop
mov
mov
cmc
gs
inc
loope
cli
or
xchg
data16
cmpsl
fs
popl
mov
lahf
roll
scas
sarb
adc
ret
cmp
mov
jne
bound
push
sub
lahf
jbe
inc
movsl
pushf
sub
mov
mov
fimull
bound
lcall
push
cmp
jne
cmp
mov
pop
mov
es
push
add
orl
mov
sbb
inc
outsb
rol
stos
xor
popa
sbb
insl
dec
and
cwtl
lea
jnp
inc
out
inc
sarb
xchg
sub
ss
fisubl
std
addr16
iret
xchg
mov
add
int
arpl
and
sbb
and
in
test
inc
xor
xor
cmp
popa
dec
clc
shlb
jae
pop
call
pop
fstpt
pop
pop
jno
add
dec
lods
and
mov
icebp
shlb
rorb
fwait
das
pop
je
sub
subb
pmulhw
xchg
dec
outsl
sahf
jns
orb
add
sbb
nop
outsb
xchg
push
into
hlt
fldcw
outsb
imul
xchg
jmp
loopne
ss
mov
decb
cmp
aaa
loop
psubw
or
adc
inc
lds
scas
adc
addr16
jp
mov
std
js
dec
stc
aas
mov
sbb
and
in
and
xchg
out
cmp
call
out
pop
insl
frstor
out
in
xor
in
dec
out
xchg
dec
adc
mov
cmc
and
sub
stos
loopne
mov
mov
add
sbb
sub
icebp
es
loopne
xor
sub
ljmp
jnp
jbe
std
in
ficoml
dec
leave
push
scas
mov
xor
mov
int
adc
loope
xor
pop
push
scas
out
insb
push
bound
shlb
rorb
jl
les
pusha
popf
pop
dec
and
lods
outsb
xchg
inc
out
arpl
pushf
or
pop
fsubs
jns
sti
daa
sbb
pop
mov
mov
scas
add
mov
add
push
pusha
mov
cmp
aad
pop
push
adc
subb
ljmp
cmp
xor
mov
and
syscall
dec
and
iret
daa
push
js
jp
or
adc
popf
fdivs
hlt
dec
dec
sbb
sbb
jmp
fbld
and
push
xchg
enter
cmp
pop
je
jle
int3
push
xor
sbb
cmc
mov
fnstenv
repz
shll
xchg
and
shll
loop
mov
sbb
fwait
dec
lret
mov
fwait
ds
scas
xchg
aad
dec
cmpsl
mov
mov
xor
pop
xchg
pop
add
scas
out
sub
scas
std
cmp
sub
xchg
xor
jb
sbb
and
test
leave
cmp
sub
aad
mov
lock
imul
repz
ss
xor
ret
sahf
mov
out
lahf
push
jge
mov
pop
std
push
dec
mov
fs
mov
push
mov
sti
movsb
pop
lock
or
andl
jne
bound
call
or
inc
add
in
mov
icebp
inc
add
pop
xchg
pop
mov
sbb
and
ret
sti
test
push
xor
out
cltd
mov
lds
inc
js
xchg
mov
cs
and
xchg
ret
mov
mov
leave
lret
ret
sbb
or
mov
pop
sti
jle
jne
mov
cmp
adc
mov
push
pop
pop
mov
int3
jg
repnz
in
add
into
popa
sub
cmp
dec
push
add
fsubrs
ds
push
aad
sub
push
push
aam
rcll
int
mov
inc
imul
jl
inc
loop
lcall
inc
mov
jmp
inc
sbbb
xchg
pop
xchg
mov
ret
aad
movsb
dec
mov
andb
fdivl
mov
outsb
push
or
push
inc
jl
call
sarb
cmc
shl
shr
test
pushf
pop
lcall
rclb
int3
push
test
loop
sbb
aaa
cmpsb
iret
fdiv
movsl
clc
fldenv
jbe
fisubl
mov
jp
rcrb
insb
imul
add
stos
hlt
adc
clc
mov
mov
sbb
mov
loop
out
inc
mov
shll
push
movsl
jbe
int3
cwtl
fldcw
xor
das
ljmp
push
aam
jg
mov
add
xchg
mov
jb
js
ret
imul
mov
cmp
divb
outsb
out
jb
mov
sub
insb
mov
adc
out
add
mov
jbe
jns
or
div
push
add
and
xor
fadd
jns
sub
dec
aam
mov
sub
ja
inc
inc
mov
adc
sahf
jns
sti
sbb
and
sbb
inc
push
xchg
jb
mov
push
dec
insb
sub
pusha
xor
retw
push
mov
scas
movsb
std
fcompl
inc
mov
adc
pop
jo
scas
out
sub
push
or
imul
jb
dec
pop
dec
lret
cmpsl
andl
push
xchg
mov
lret
xlat
push
mov
sub
stos
aam
mov
insb
das
mov
pusha
pop
sarb
pushl
jnp
add
push
ss
bound
jp
dec
int3
mov
daa
movsb
add
outsl
mov
mov
dec
sahf
add
or
popa
movsl
inc
add
push
xchg
jle
mov
aas
xlat
les
shrb
call
dec
xor
cmp
cmc
cmp
andb
adc
movsl
mov
sub
bound
inc
insl
fwait
xorl
pop
or
icebp
adc
mov
imul
push
push
jge
mov
fstl
lcall
fstps
push
push
fistps
sbb
dec
sti
call
pop
lea
push
scas
sub
mov
xchg
pop
sub
sahf
push
jle
daa
lods
adc
add
shlb
mov
sub
paddw
dec
jg
pop
mov
ja
xchg
add
aaa
mov
out
rorl
mov
roll
clc
mov
xor
pop
mov
hlt
arpl
push
test
jno
out
arpl
or
push
push
sbb
mov
or
push
jne
adc
mov
in
mov
lahf
jne
jecxz
scas
cmp
mov
aad
dec
and
sub
leave
or
dec
and
pusha
push
inc
push
call
jbe
pushf
mov
push
cmpsb
or
or
push
mov
call
imul
dec
jne
call
cmp
ja
jb
mov
insl
lret
aas
cmpb
pusha
les
push
hlt
pop
jne
sbb
loope
popa
in
jl
orl
push
mov
aam
mov
mov
or
clc
or
data16
fildll
lcall
sti
imul
mov
cmp
mov
jbe,pn
or
cli
sbb
mov
fprem1
sub
dec
test
inc
or
fadds
cltd
adc
lcall
mov
fbld
daa
into
fidivrl
leave
fxch
ja
pop
jnp
mov
cli
or
pop
icebp
mov
mov
mov
xorl
in
inc
movsl
dec
mov
fwait
stos
int3
sub
mov
lahf
push
out
push
lods
sub
mov
adc
cmp
adc
xchg
xchg
cltd
loope
outsb
dec
sbb
idivl
jecxz
mov
adc
imul
shlb
or
mov
inc
gs
lret
dec
js
das
or
mov
lret
xchg
mov
pop
cltd
imul
fistl
mov
cwtl
bound
sub
push
negl
ss
frstor
js
mov
rorb
leave
fsts
sahf
sub
enter
add
pop
dec
cld
es
aaa
cmpsb
rcl
push
mov
jmp
push
nop
out
jg
xlat
shr
xlat
xchg
fildll
mov
cld
push
aas
not
std
pop
push
stc
gs
loope
xor
loop
mov
xor
into
mov
sub
xchg
mov
pop
scas
lcall
jo
cmp
xor
cmpsl
lock
ja
ja
or
push
out
cmpsb
jl
jo
pop
enter
mov
lcall
pop
ja
xor
jl
test
mov
inc
push
mov
aas
test
das
mov
jle
mov
cwtl
sbb
mov
mov
add
lods
xchg
jle
repz
push
mov
adc
pop
out
ja
jge
inc
push
clc
and
inc
jb
in
lock
sub
aaa
xchg
inc
mov
aam
test
adc
mov
push
pop
ror
pop
aaa
sarl
movsb
lret
jecxz
lea
sub
je
addr16
xor
mov
lret
sub
mov
scas
or
jl
cmp
or
pop
daa
outsl
or
les
cs
gs
shrl
int
in
xchg
lods
int
call
lcall
push
jg
or
or
je
cmc
sahf
in
mov
or
hlt
jle
pop
sub
inc
test
scas
loope
xorl
nop
sub
xor
or
mov
mov
pop
nop
mov
inc
cwtl
mov
out
mov
popf
fwait
mov
loope
aas
dec
and
sub
sub
inc
mov
xor
test
pop
pand
fcomps
addr16
mov
arpl
push
dec
insl
cmp
pop
std
jae
or
gs
cmp
jno
push
pop
mov
rcl
ficompl
pusha
std
lahf
orb
xchg
pop
repnz
inc
cltd
ret
enter
sub
pop
dec
popf
sbb
lods
sub
mov
xor
inc
cmp
nop
dec
push
xchg
push
sbb
jnp
push
stos
lret
stos
sbb
nop
xor
push
sub
out
mull
push
addr16
fstps
call
movsb
add
std
and
repz
add
movsb
scas
inc
add
outsb
fwait
adc
adc
dec
cmp
in
add
lea
es
inc
int3
lcall
pop
cmpsl
stos
cs
fs
cltd
jno
xor
daa
sahf
cmc
push
loop
scas
xor
or
mov
cmc
fildll
xor
jecxz
popa
push
pop
test
lods
push
pop
icebp
xchg
inc
and
xor
jne
jo
xchg
adc
mulb
insb
sbb
sub
jnp
mov
sbb
cmp
inc
pop
mov
jns
adc
adc
sub
aam
leave
lea
fdivl
jmp
aaa
arpl
lds
mov
mov
les
add
sub
pushf
fmuls
xlat
dec
xor
in
jmp
push
add
xabort
rol
and
pushf
loop
addl
cmp
imul
repnz
ds
sub
loope
lods
ret
sbb
push
outsb
push
jecxz
inc
xor
push
repz
xor
pusha
fcmovnbe
xchg
test
xchg
popa
stc
jo
shl
mov
pop
shlb
je
or
sbb
mov
adc
xlat
xor
mov
or
inc
xchg
cmp
sarl
mov
ja
push
and
rep
rcll
imul
jnp
rorl
rcrb
mov
subl
dec
in
or
xchg
jg
inc
aaa
lret
rorl
pop
sbb
sub
xchg
imul
add
sub
call
inc
pop
insb
push
inc
push
jp
mov
js
sbbb
inc
pusha
sbb
jbe
xor
push
adc
dec
xchg
sbbb
aas
mov
es
lret
jle
leave
mov
popf
add
fldenv
cmpsl
adc
cmp
jb
push
mov
mov
incb
aam
inc
dec
sub
icebp
dec
addb
xor
mov
stc
pop
jb
inc
inc
testl
cs
and
jae
pop
mov
inc
std
xor
mov
fisubl
xor
movsl
inc
scas
les
cmp
stc
call
xor
test
and
cltd
popa
popf
andl
pop
push
es
cmpb
pop
push
pop
out
cmp
add
inc
aam
repnz
xchg
sarb
dec
adcb
lret
jp
push
movb
xchg
loope
cld
pushf
popf
and
jne
and
or
push
xchg
ret
out
test
loop
or
adc
xor
out
imul
adc
repz
gs
inc
movsl
mov
sti
rolb
or
scas
jb
mov
arpl
xor
jp
out
movsl
lea
dec
sbb
sti
ja
add
mov
adc
push
sti
test
inc
jmp
jno
jne
push
lods
insb
aad
rorl
push
mov
fcompl
pop
test
imul
stos
sbb
xor
mov
inc
mov
mov
dec
scas
xor
mov
cmp
xchg
pop
cmp
sbb
mov
inc
cmp
ret
ljmp
out
icebp
jl
lret
cmp
sub
dec
pop
es
push
adc
fnstenv
cmp
adc
movsb
out
fninit
test
mov
arpl
int3
dec
sahf
lcall
push
rorl
clc
dec
imull
add
popa
dec
test
xor
push
cmp
dec
jnp
mov
sbb
dec
popf
lcall
das
das
add
sbb
or
xchg
stos
mov
movsl
popa
mov
pop
or
and
push
mov
into
xlat
adc
inc
sub
cmc
sti
and
into
movsb
ss
dec
int
jnp
std
arpl
mov
iret
out
insb
incl
andl
fadds
loopne
add
inc
bound
ljmp
push
jno
jns
lock
inc
lods
jmp
sti
push
and
push
lods
fucomi
xchg
pop
inc
popf
mov
push
lods
push
outsl
gs
and
sub
jp,pn
xor
add
adc
or
rorl
rcrb
pop
xor
mulb
cld
xchg
push
rol
loope
xchg
lahf
adc
and
sbb
int3
pop
sahf
sbb
ja
dec
loop
fistpll
and
adc
cmp
pop
stc
mov
je
pop
pop
inc
aaa
push
jae
sub
add
xchg
lcall
mov
jmp
mov
xorl
push
fsubs
mov
test
push
mov
lods
cmp
adc
sti
jmp
outsl
jecxz
aas
cld
es
addr16
testl
jmp
push
jl
or
cld
test
xchg
push
push
gs
inc
and
jge
mov
mov
mov
jno
mov
lahf
jle
sahf
mov
xabort
rorl
mov
out
cmp
mov
add
push
lods
add
stos
or
data16
pop
push
pop
jnp
stos
pop
stos
add
in
scas
add
cmp
popa
jle
sbb
loopne
shlb
xchg
dec
rolb
jns
inc
js
xchg
adc
lds
xchg
mov
clc
sub
push
pop
out
stos
jmp
or
pop
daa
fwait
xchg
or
cmp
lock
push
mov
js
jp
xor
loope
push
popf
dec
sbb
push
outsb
xor
xor
push
jo
iret
test
jg
inc
lgs
adc
inc
dec
call
clc
adc
and
es
xchg
xor
sti
outsl
sbb
test
cmp
les
sti
adc
mov
loope
mov
cld
testl
pop
dec
pop
and
int3
jmp
xchg
push
pop
cmp
xor
in
fs
push
and
cmp
mov
sub
iret
jns
and
testb
xor
insl
sbb
adc
push
xor
add
mov
sub
jo
cmp
dec
ret
xorb
mov
scas
iret
or
mov
sti
jl
cmpsl
mov
mov
mov
ss
dec
daa
dec
loope
lret
push
sub
js
mov
adc
or
pop
fwait
cmc
mov
adc
xchg
jmp
inc
dec
jecxz
hlt
add
jbe
lock
dec
int3
cli
jbe
adc
jmp
mov
je
cld
cld
sbb
sahf
or
lds
cmc
cmp
fsubrs
jp
xchg
int3
inc
enter
and
testl
cmp
pop
ljmp
cmpsb
push
mov
cmp
xchg
ret
jge
call
lds
stc
fdivrl
xchg
push
lock
rclb
pusha
imul
xor
gs
xor
jle
or
sub
xchg
jb
pop
jns
inc
test
push
pop
das
or
push
das
adc
add
jmp
jmp
pop
lret
data16
pusha
or
xchg
adc
test
aas
mov
insl
gs
or
cmp
push
adc
movdq2q
push
mov
std
into
lock
popf
lret
mov
enter
out
and
out
xchg
sub
ret
repnz
adc
mov
rorl
ja
and
sub
out
mov
dec
xor
movsl
add
add
pop
xchg
cli
subb
mov
aam
ja
mov
cmpb
xchg
xchg
movsl
pop
daa
pusha
test
mov
or
enter
mov
lock
lock
mov
mov
repnz
fwait
addr16
pop
dec
mov
pusha
xchg
mov
cmpsl
add
stos
push
mov
mov
popf
insl
into
testl
xchg
dec
pop
rcrl
inc
and
push
std
dec
inc
lds
and
pop
adc
jmp
into
into
xlat
fnstenv
add
arpl
mov
jns
inc
jecxz
xor
xor
pop
or
push
push
aad
sub
ljmp
mov
cmp
pushf
out
xor
lret
pop
push
icebp
int3
loop
ficoms
nop
in
stos
bound
mov
jae
lahf
push
push
mov
sbb
int
and
xor
pop
push
jbe
push
jb
adc
mov
pop
jmp
notl
into
jns
movsb
inc
shrl
add
mov
sahf
xchg
push
sbb
cli
fwait
or
sbb
inc
out
cmpsl
dec
xor
filds
sub
and
subl
cli
jl
push
mov
xlat
mov
leave
inc
movsl
sub
and
je
jns
movl
cltd
sahf
sbb
mov
pop
ss
cmpsl
shr
add
leave
add
scas
xorb
add
stos
loop
into
inc
cmc
or
imul
inc
in
pop
outsb
das
sub
mov
imul
jmp
mov
adc
cmpsl
sbb
dec
pop
mov
add
jo
and
cmpsl
and
or
sub
mov
pop
push
push
insb
loope
pop
fistpll
lret
sbb
rcrb
jno
aam
lea
shll
sbb
cltd
jmp
xor
outsl
les
xchg
hlt
in
push
mov
stc
lds
cli
xor
in
or
fstl
xor
push
es
jne
sub
jb
or
sub
sub
out
test
pusha
cmpl
lahf
adc
xor
sbb
or
sahf
xor
aam
push
es
fimull
hlt
insb
mov
rol
push
jns
sbb
call
push
jae
loop
dec
clc
sbb
xchg
mov
in
fdivs
add
xchg
popa
xorb
cmpsb
xchg
adc
iret
fstps
pop
dec
mov
adc
in
xchg
andb
gs
lods
pop
jg
jle
lods
jo
addr16
dec
sub
xchg
jae
jecxz
insb
cwtl
mov
cld
scas
xchg
fcoml
dec
into
imul
lret
mov
ljmp
jne
dec
int3
cmp
push
mov
mov
jbe
mov
xchg
push
push
nop
daa
bound
dec
and
pop
test
daa
iret
dec
adcb
outsl
mov
pop
or
mov
mov
mov
dec
dec
mov
xor
lea
dec
movsb
addb
xor
and
mov
filds
sub
push
push
inc
fcoms
in
and
mov
and
mov
test
scas
xlat
sub
vmovaps
or
insb
fisttpl
lock
or
mov
jle
dec
andb
lea
cwtl
sub
mov
adc
scas
outsl
lods
jns
mov
call
popf
or
sub
xchg
cli
mov
in
stos
icebp
sbb
sti
popa
jbe
jge
pop
add
daa
loop
mov
dec
outsl
in
arpl
dec
int
outsb
call
mov
and
in
and
or
loop
fstpt
inc
push
ret
out
cmpsl
jge
fs
out
enter
test
movl
jl
out
out
inc
mov
fldl
adc
subb
in
and
std
pop
stos
arpl
jl
jecxz
mov
in
pop
testb
pop
cmp
out
mov
in
jns
xchg
or
mov
pop
push
gs
mov
or
mov
sub
inc
iret
shll
inc
test
mov
enter
call
cmp
in
add
mov
sub
outsl
hlt
cmp
xor
imul
inc
fs
push
xor
adc
fiaddl
jmp
outsb
push
jp
or
mov
inc
push
aam
sti
xchg
adc
xlat
into
stos
mov
sbb
outsb
jno
std
fisubrl
test
and
sar
or
or
iret
cltd
pop
add
xlat
pop
push
mov
test
jae
or
movsl
cmc
cmp
push
jae
out
pop
mov
aas
jmp
jle
cmpsl
cmp
stos
mov
int3
cmp
loopne
les
xorl
mov
and
and
loop
sarb
add
jg
pop
push
and
jge
xlat
nop
gs
pop
sub
loope
outsl
pop
cltd
add
mov
mov
pop
jp
mov
xrelease
and
enter
test
inc
xchg
test
mov
xchg
movsl
cmpsl
pop
or
xor
aaa
cmp
out
data16
mov
into
sbb
mov
stc
push
mov
sub
mov
mov
or
aad
push
repz
lret
sub
jge
mov
and
test
mov
mov
shlb
stc
adc
aad
je
mov
decb
dec
ljmp
sbb
push
shlb
fs
cmp
mov
mov
rcrb
mov
pop
sbb
shlb
xlat
inc
cmp
or
movsl
lret
xchg
stos
loopne
inc
or
mov
jns
pusha
movsb
add
mov
jg
mov
add
adc
les
cltd
inc
mov
into
sub
nop
cmpsl
cmp
jecxz
dec
adc
inc
adc
daa
scas
cmp
out
cli
ret
adc
out
test
scas
mov
jne
mov
xchg
ss
jne
fsubl
and
jp
and
adc
arpl
aad
mov
loopne
neg
pop
adc
push
leave
loope
mov
imul
or
dec
lret
cwtl
std
popa
movsb
jno
sub
daa
movsl
mov
test
xor
mov
lcall
movsl
cmp
push
or
jge
push
xchg
cmpsl
xchg
cmc
aam
sub
xor
jecxz
adc
lock
mov
scas
loop
fs
cmpsl
jae
fwait
sbb
mov
into
mov
jnp
xor
test
inc
cmc
aam
mov
clc
or
sbb
mov
cmc
loope
in
mov
lods
ret
loop
ret
bound
lahf
xchg
mov
cmp
push
dec
and
dec
mov
stos
out
mov
insb
pusha
inc
adc
add
or
jmp
inc
add
insb
pop
add
pop
sub
sti
mov
hlt
add
sub
out
add
daa
shl
or
mov
int3
dec
xchg
iret
adc
inc
dec
add
ret
cs
lret
movsb
jecxz
pop
aas
lods
sub
sub
icebp
cmp
neg
add
push
jmp
aad
shlb
pop
mov
inc
cltd
stos
jl
pop
mov
and
dec
movsb
in
fldenv
pushf
dec
std
dec
mov
aaa
scas
xchg
jae
mov
data16
cmp
jo
adcb
dec
jne
dec
push
movb
fs
outsl
jae
lea
add
cmp
out
notb
inc
jae
out
mov
cli
dec
push
mov
rclb
fsub
js
mov
test
push
ret
not
stos
into
lods
cmp
mov
sub
jmp
outsl
mov
push
test
movsl
ljmp
or
into
adc
xlat
cld
push
sbb
lret
mov
adc
lea
ljmp
add
ds
daa
mov
hlt
inc
mov
fldl
mov
adc
sub
addr16
js
enter
ret
aas
xchg
dec
fsubl
mov
or
mov
xlat
test
adc
bound
jmp
cmp
pop
jbe
ret
div
mov
push
rorl
cwtl
jmp
faddl
cwtl
hlt
ret
mov
int
jp
mov
pop
inc
mov
and
ljmp
out
xchg
sub
xor
lods
mov
pop
rcll
aaa
into
pop
data16
mov
mov
jmp
dec
arpl
add
push
shll
or
icebp
dec
and
and
mov
imul
addr16
test
ret
ss
clc
mov
push
xor
dec
movsl
jae
pop
cmc
and
popa
outsl
xchg
idivb
and
dec
test
or
leave
je
loope
push
pushf
sub
sbb
sbb
xchg
iret
or
arpl
xor
hlt
pop
shll
lahf
pushf
jp
or
add
aaa
mov
dec
cwtl
test
decb
jae
mov
jp
adc
inc
mov
inc
test
pop
jl
cld
pop
cmp
sbb
jbe
test
dec
xor
ja
test
jb
adc
cmp
lcall
xchg
jmp
lret
push
jbe
mov
sbb
test
push
jns
mov
pusha
pop
sub
bound
pop
xor
push
in
cli
test
push
pop
cmpsl
aas
lret
addr16
jne
xchg
push
mov
mov
out
hlt
stos
int
ss
lret
mov
or
push
push
mov
mov
ds
ljmp
xor
outsb
xchg
sub
mov
mov
push
jne
mov
add
fistps
mov
inc
inc
je
mov
xchg
ret
aaa
shlb
lahf
jne
loop
dec
inc
pop
jl
dec
lcall
inc
jmp
stos
in
add
movsl
imul
xchg
cmp
enter
repz
scas
mov
adc
dec
aam
xor
je
pop
clc
mov
sbb
stos
shrd
or
pop
adc
xchg
mov
aad
sti
cmp
xor
movl
sbb
stos
adc
shll
gs
mov
xchg
arpl
pushw
lock
mov
dec
xor
arpl
into
inc
push
lea
push
lods
cli
inc
out
pop
repz
xchg
mov
repz
or
dec
dec
pop
es
or
dec
add
aam
cmpsb
lret
movsb
sbb
xchg
mov
insl
in
xor
push
ficomps
jge
enter
jge
mov
pop
into
mov
repnz
xchg
jnp
outsl
jg
fnsave
in
mov
ljmp
bound
mov
pop
int
dec
gs
jl
mov
popa
loop
stos
call
jne
jb
xchg
fst
test
or
addr16
insb
enter
rcrw
push
adc
popf
push
sbb
out
out
push
test
sti
jp
loopne
sti
xchg
jne
push
out
dec
insb
dec
out
sub
push
push
sub
movlps
mov
cmp
mov
out
data16
cld
mov
cwtl
push
mov
rcl
jmp
scas
stc
and
cmp
mov
jl
dec
roll
or
or
push
aaa
scas
out
cmp
push
cmpsl
adc
stos
inc
gs
xor
push
push
out
out
sub
inc
jecxz
in
sahf
fstps
flds
mov
cmp
mov
aad
fs
out
dec
aam
bound
and
fisubs
mov
sub
sub
mov
shlb
pop
mov
outsl
rolb
js
adcb
push
push
mov
pop
stos
imul
xor
das
decb
jp
cmp
xlat
inc
push
sub
xchg
xor
jbe
sub
adc
imul
xchg
and
sahf
dec
pop
iret
enter
lods
imul
push
out
icebp
repnz
lods
and
xchg
sbb
outsl
pop
stc
outsb
fdiv
push
es
mov
sub
test
dec
lahf
pop
mov
loope
imul
sbb
dec
adc
stos
sub
cmc
les
or
add
push
or
add
mov
mov
sti
lock
pop
stos
ret
ljmp
test
mov
add
mov
add
add
cmp
outsl
jo
nop
jg
repz
loop
sbb
je
fwait
aas
adc
inc
dec
cmpsl
movsb
out
sub
arpl
hlt
test
lret
push
mov
outsl
push
push
insl
add
call
or
push
xor
aam
adc
cmp
mull
inc
out
insl
xlat
inc
push
mov
in
or
addr16
outsl
shr
dec
ljmp
mov
inc
lock
ds
mov
mov
sub
test
cld
loop
xor
mov
pop
cmpl
sbb
pop
pop
rorb
ret
jno
in
stc
cmpsb
data16
lret
xchg
adc
fucomip
push
lcall
test
push
cmc
imul
int3
mov
jle
add
cs
xor
mov
cmp
scas
sti
fiadds
test
cmpsb
pusha
mov
int
sbb
test
outsl
pop
pop
push
jb
sbb
or
jns
pop
mov
push
jno
cmp
sub
cmp
sub
int3
inc
or
xchg
mov
xchg
in
and
fstl
inc
mov
xchg
lahf
adc
jl
mov
ljmp
lea
xchg
mov
push
xchg
inc
icebp
and
or
sub
xchg
sbb
aas
mov
fsubrs
call
cmp
push
aas
mov
push
cld
scas
push
jmp
xor
mov
pop
dec
push
pop
mov
xchg
gs
inc
cmp
or
into
cmp
and
movl
xchg
mov
adc
repz
loope
xchg
filds
add
sub
cmp
inc
sti
mov
in
sub
lods
sub
adc
cmpsl
enter
sub
fisttpl
mov
in
and
js
ret
cltd
cmc
repz
jns
rcrb
iret
add
arpl
mov
jl
mov
fdivl
jo
cwtl
dec
js
int3
leave
lock
test
dec
and
push
test
jl
je
mov
or
outsl
sbb
jecxz,pt
mov
sub
ret
and
and
pop
and
cld
push
cmp
push
repnz
mov
dec
push
lret
ds
cltd
dec
push
jno
fisttpll
cmpsb
push
and
mov
push
adc
into
mov
stos
sub
jbe
cmp
lea
lret
mov
cwtl
xchg
inc
adc
enter
adcb
jnp
fisubrl
pop
sbb
enter
xchg
push
add
mov
mov
xchg
push
das
cltd
arpl
imul
sub
mov
jle
xchg
pop
dec
push
mov
dec
icebp
xor
jnp
mov
mov
lock
push
or
or
int3
inc
push
xchg
aad
cmc
or
add
addr16
out
stos
adc
pop
xor
add
and
leave
xorl
into
mov
mov
dec
push
mov
mov
jg
test
aas
fdivs
cmpsl
lret
push
rorb
jg
mov
mov
ja
push
repnz
sub
test
pushl
das
xor
and
pop
out
imul
rcrb
push
xchg
leave
les
cmp
into
dec
imul
jb
or
pop
call
call
ljmp
pop
mov
aaa
lds
jg
dec
or
xlat
adc
faddl
out
and
jl
inc
sarb
jo
fisubrl
cli
and
bound
dec
outsl
jge
sub
cld
rcrb
xor
sbb
lret
push
add
add
xchg
cmp
xchg
rcll
btr
rclb
scas
mov
mov
xchg
mov
mov
stos
jmp
jne
xchg
push
cltd
rcll
les
sbbl
sub
dec
jns
adc
jno
js
adc
mov
mov
push
xchg
call
fs
movsl
mov
ss
shll
or
loop
sti
in
dec
mov
or
or
adc
popl
shll
and
jecxz
cwtl
or
ret
ficomps
lret
insb
sub
push
scas
cmp
push
xor
bound
je
push
lods
mov
push
fsubrs
pushl
and
lds
push
dec
add
aas
leave
add
mov
lds
and
mov
in
inc
imul
cmp
iret
pop
mov
adc
inc
pop
xchg
sbb
xor
out
sub
out
addb
jo
lds
sub
lods
shl
addb
dec
pop
adc
mov
push
mov
pushf
ljmp
push
jmp
xchg
mov
rcll
xchg
adc
enter
dec
fmuls
sti
les
out
jle
cmp
fdivrp
push
mov
aaa
mov
rolb
dec
mov
xchg
sub
repnz
xchg
dec
or
popa
cmp
stos
mov
daa
lcall
or
jmp
addr16
mov
das
adc
test
movsb
sub
ljmp
cmp
push
movl
fiaddl
fcmove
sbb
xchg
jbe
adc
dec
jle
repnz
pop
push
ficomps
or
outsl
mov
jle
push
mov
pop
push
sti
pop
add
dec
outsl
cmp
fidivrs
dec
push
clc
ficomps
adc
pop
fistps
push
pop
sub
jp
int3
jecxz
xchg
pop
stc
push
mov
scas
popf
push
fwait
loop
cld
imul
scas
sub
xchg
or
loopne
sar
sub
leave
sub
repz
pop
mov
movsb
mov
pusha
scas
in
dec
dec
in
dec
push
sti
loop
push
sahf
outsb
negl
mov
adc
out
mov
xor
dec
push
xchg
xor
inc
inc
push
sub
pop
shll
and
addr16
xor
sbb
scas
or
xchg
xlat
mov
inc
repnz
imul
mov
jge
out
insb
pop
cmp
mov
dec
ds
sahf
push
and
adc
cwtl
sbb
xchg
xchg
jno
pop
mov
dec
stc
lret
sar
lds
cwtl
xor
pop
insb
sub
xchg
or
lahf
push
pop
and
or
lcall
shld
je
mov
add
and
xchg
in
cwtl
arpl
rcrb
xor
dec
call
xchg
jl
jbe
addb
xor
jmp
jns
addl
xor
int3
call
lret
mov
push
aam
xor
dec
lods
dec
leave
jnp
xchg
xchg
aaa
jne
imul
sbb
es
out
adc
mov
lcall
aam
and
push
or
inc
cmp
insl
push
xchg
mov
sbb
ret
dec
inc
mov
aam
imul
arpl
sub
adc
fnstcw
jecxz
dec
addr16
cmp
repz
mov
call
hlt
mov
in
xor
mov
icebp
cs
mov
jle
je
call
xchg
inc
ds
jle
xlat
mov
xor
jb
mov
and
fwait
jns
mov
dec
jmp
push
out
push
out
int
inc
xchg
cmp
sbb
add
cmp
out
sbbb
jnp
mov
adc
mov
jp
inc
pusha
pusha
mov
push
jl
stc
xor
cmp
movlps
mov
pushf
jl
jp
mov
push
xor
ds
test
aam
cmp
push
and
jecxz
lock
xchg
leave
xchg
pop
push
insb
push
inc
lods
lcall
adc
fldcw
jmp
mov
mov
imul
inc
adc
add
shlb
sub
mov
mov
arpl
push
adc
sahf
sub
sub
rorb
mov
xor
add
and
xor
cmpb
pop
xchg
pop
mov
sub
test
xor
push
mov
fldlg2
cmpsb
in
pop
push
fcomp
jns
fisubl
fwait
inc
mov
adc
xor
inc
adc
int
sbbl
mov
into
adc
jb
add
pop
push
pushf
mov
add
sub
cld
mov
mov
pop
int3
movsl
hlt
pushf
inc
dec
cmp
sub
push
xorb
push
sub
and
or
cmp
mov
fistpll
jo
xchg
pop
push
adc
pop
imul
sbb
fsubl
jle
popf
cmp
push
mov
inc
adc
lcall
jno
aad
inc
jno
nop
dec
into
xchg
mov
push
sbb
repnz
inc
cli
repz
cmp
cmc
xchg
jecxz
jne
mov
es
cmpsb
shll
clc
jmp
fiadds
sub
mov
cmp
leave
das
imul
dec
mulb
out
leave
dec
loop
jne
jp
movsb
fstl
ret
jo
mov
mov
jmp
imul
mov
jns
xor
jg
mov
pop
cmp
testl
xchg
arpl
pop
and
lahf
aaa
jo
pop
or
push
shll
cmp
subl
mov
insb
adc
repz
stos
push
jmp
enter
mov
sub
imulb
push
jb
loope
ret
pop
jp
xor
addb
push
dec
sub
and
cltd
dec
idivb
int
xchg
jecxz
outsl
mov
enter
jg
iret
mov
adc
ficomps
push
int
shlb
fs
inc
pop
push
lret
test
mov
cs
jge
hlt
out
ret
outsb
into
outsb
mov
pop
sbb
xchg
inc
lahf
push
xlat
xchg
out
imul
jge
pop
lods
jno
mov
push
or
sub
push
cs
in
insb
getsec
push
cli
pusha
imul
pop
mov
int
mov
cmp
and
das
inc
repnz
pop
cmp
xchg
fsubrp
push
mov
or
pop
xor
sti
jle
scas
fstpl
imul
arpl
adc
or
test
mov
cmpl
xlat
rol
ret
jns
jnp
xchg
xchg
iret
outsb
mov
stos
cmpsb
fidivl
mov
jle
outsl
std
ds
call
lock
push
sti
out
jmp
inc
xor
or
xor
push
pop
mov
int3
mov
pop
inc
or
jne
inc
mov
dec
std
dec
mov
sbb
lock
add
jns
dec
adc
mov
mov
lcall
outsb
cld
dec
sub
mov
adc
mov
mov
into
ret
in
mov
out
lock
cmp
mov
inc
jno
int3
inc
add
mov
scas
daa
stc
daa
outsl
lock
imul
dec
scas
lahf
pop
adc
inc
das
push
inc
sbb
movsb
repz
mov
dec
ja
das
sbb
in
out
sbbl
adc
mov
out
sub
or
rol
cmp
stos
cmpsb
inc
xchg
rol
pop
sub
inc
push
pushf
orl
ss
sbb
jns
test
lcall
mov
in
add
jbe
jg
and
stc
movsb
fiaddl
pop
data16
stc
mov
cltd
adcb
sbb
insl
xchg
adc
inc
dec
mov
jno
cs
enter
and
leave
gs
or
sbb
xchg
test
and
adc
stos
lret
xor
stos
fiadds
mov
dec
out
mov
rcll
shr
lcall
rcll
dec
lcall
lods
jae
push
jmp
loop
jbe
sti
or
insl
add
mov
jnp,pt
ja
push
mov
outsl
cs
adc
in
inc
icebp
arpl
push
testl
mov
jecxz
arpl
add
push
ljmp
xchg
cld
in
shlb
push
pusha
aam
pop
inc
dec
shll
push
hlt
mov
mov
cltd
ljmp
xlat
pop
jnp
inc
mov
fsub
in
xchg
das
and
or
out
fbld
jge
dec
cmpsl
fld
dec
xor
pop
lret
out
rcrb
adc
imul
ret
push
jo
icebp
mov
adc
nop
push
inc
mov
subl
adc
push
dec
shl
mov
outsl
mov
bound
push
mov
fnstenv
jecxz
adc
inc
lods
xchg
fistpl
jns
ljmp
dec
lds
add
out
push
gs
fcom
mov
pop
ja
mov
mov
sub
push
scas
fwait
fs
sarl
mov
dec
data16
je
mov
bound
jnp
xchg
push
xor
sub
sbb
mull
push
incl
sub
les
insl
cmpsl
test
mov
jb
inc
or
hlt
pop
sbb
imul
xchg
xchg
popf
mov
mov
fists
and
xor
enter
pop
and
jnp
les
js
xchg
mov
or
xchg
std
sub
sar
fbld
bound
push
nop
push
ret
inc
inc
mov
adc
shll
xchg
repz
or
cmp
in
pop
dec
scas
pop
inc
pop
cmp
dec
or
push
dec
adc
dec
sub
push
sahf
push
into
sub
and
adc
push
icebp
dec
fwait
cmp
lock
fcomp
imul
cmp
adc
in
xor
cmp
xor
test
push
jecxz
movsl
mov
pop
stc
or
repz
cmp
movsl
test
imul
xor
das
sub
cltd
imul
out
popf
push
push
mov
jmp
cld
sub
add
cs
or
sbbb
sbb
sbb
xlat
cmp
mov
aas
adc
inc
aad
and
into
push
je
fwait
jmp
sti
flds
test
icebp
lea
loope
test
fistpl
inc
out
fxch
push
sub
cmpl
push
das
push
or
mov
push
pop
pop
fs
stos
jb
in
divl
cmpb
xor
jns
xor
aaa
mov
dec
or
jge
push
movsl
fidivl
inc
mov
fdiv
pop
adc
or
xor
sahf
push
pop
dec
jbe
cwtl
xchg
ja
and
sbb
test
pop
mov
pop
push
cmpsl
cmp
std
flds
cmc
fnstcw
lds
jmp
mov
mov
push
outsl
cmp
and
nop
leave
and
sub
test
inc
stc
inc
dec
cmc
mov
and
push
arpl
push
mov
add
nop
add
inc
es
push
insl
add
mov
shr
push
sahf
jns
or
pop
cmp
sbb
inc
push
add
fs
push
push
xor
push
les
xchg
mov
sti
dec
nop
inc
mov
daa
cmpsl
loopne
outsb
lret
pushf
jge
mov
jbe
push
inc
sahf
fstps
sub
aas
ret
insw
pushf
mov
cmc
sbb
sub
fsubl
in
push
dec
test
out
cwtl
add
cmp
int3
sub
pop
xchg
iret
mov
les
out
mov
testb
jl
and
xlat
jecxz
pop
clc
push
ret
daa
mov
icebp
inc
cmpsl
scas
daa
dec
arpl
inc
cltd
sub
idiv
outsl
sub
dec
mull
inc
shrl
mov
insb
adc
cmc
xlat
jns
cmpsl
testl
outsl
fsubrs
jo
sbb
inc
xor
leave
push
adc
sub
rcrl
push
mov
push
xchg
lcall
sbb
loope
sbb
cld
jp
cmp
jle
movsl
ds
std
sbb
sbb
fucomp
add
cmp
sub
out
push
pop
or
int
in
sub
lds
sbb
dec
in
lahf
sbb
sub
mov
sub
test
sub
or
add
cmpb
fsubrs
outsb
rolb
cs
pushf
incb
popf
pop
xorl
cmp
sbb
addr16
jnp
nop
fsubrs
xchg
out
cs
aas
fs
aaa
pushf
cltd
and
lock
mov
or
ficompl
xchg
pusha
push
inc
jb
loopne
pop
jne
cmp
clc
cmp
loop
int
ds
jl
dec
rorl
cmpsl
inc
les
mov
xlat
pop
inc
lret
mov
fisubrl
repnz
cs
outsb
daa
in
pop
or
sub
adc
adc
setnp
ds
iret
lock
xchg
std
dec
dec
jbe
popf
test
sub
int3
sti
dec
mov
fxch
in
dec
or
sbb
mov
mov
imul
adc
scas
mov
pop
cmp
mov
adc
andl
stos
outsb
push
dec
pop
inc
mov
push
xchg
sub
mov
insb
fadd
sbb
lds
repz
cmp
jne
xorb
cmp
call
push
adc
dec
roll
xor
stos
aam
xor
cltd
jmp
std
pushf
outsl
notb
enter
jp
inc
mov
cltd
mov
out
popf
pop
mov
lret
xchg
cmp
bound
mov
cmp
test
pop
sbb
movsl
inc
cmp
testb
imul
xor
mov
hlt
jle
neg
mov
inc
adc
sbb
rorl
je
mov
xchg
jno
jbe
inc
pop
inc
mov
jne
cmc
push
mov
fcom
js
pop
sti
or
lret
jb
xor
cld
adc
xchg
and
sti
push
mov
mov
test
lods
insb
addr16
cs
mov
les
fs
les
inc
cmpb
arpl
xchg
mov
loopne
loope
les
mov
jle
add
dec
popf
nop
sub
outsl
sub
push
add
cmp
sub
dec
test
push
sahf
push
lret
cmp
xor
clc
mov
in
inc
addr16
xor
cpuid
mov
daa
stc
mov
shr
int3
mov
cmp
in
lahf
cwtl
ret
mov
ss
jae
pop
mov
bound
mov
dec
sub
lcall
cs
enter
insl
fsubr
nop
pop
inc
push
push
mov
and
mov
outsl
and
pop
outsb
cwtl
push
jmp
add
repnz
ret
adc
jl
cmp
andb
adc
mov
xchg
pop
cmp
and
pop
shll
arpl
sbb
sbb
mov
in
out
addl
mov
test
or
hlt
push
imulb
fnsave
or
shl
arpl
fldenv
divl
jge
mov
push
pop
aad
push
pop
sub
mov
push
and
jae
lods
dec
cmc
pop
push
sbb
push
add
pop
mov
mov
loop
aam
pop
call
jno
loopne
jne
leave
adc
enter
daa
hlt
inc
xchg
nop
bswap
ret
in
cmp
or
push
sbb
xchg
xchg
push
sbb
mov
fsubl
mov
shrb
jbe
sbb
sub
aad
pop
das
push
out
enter
xchg
jg
or
cmp
fldz
popf
les
lods
pusha
push
pushf
shrl
xchg
cmpsb
sub
jge
icebp
cmpsb
jg
scas
frstor
xchg
add
xchg
inc
mov
inc
das
push
sbb
add
mov
adc
loopne
fldcw
cmp
icebp
add
sar
repnz
xlat
addr16
lea
inc
cmp
push
or
adc
mov
xor
out
repz
out
push
sbb
rclb
adc
lcall
fcompl
insl
pop
mov
lret
cs
and
lahf
mov
call
in
test
pop
aas
cmc
fnsave
int
mov
pop
fwait
sub
cmp
test
pop
loopne
std
shlb
jle
xor
push
jb
or
repnz
jecxz
repnz
test
cmp
xchg
fs
ffreep
dec
outsl
mov
fstps
cmpsb
xor
pop
mov
es
stc
cmpsl
push
jo
sahf
movsl
test
jp
mov
loopne
xchg
lds
insl
sub
rcl
jbe
xchg
test
and
pop
das
negb
sub
je
jmp
fiadds
aaa
push
lret
and
mov
sahf
push
je
cmp
jae
xlat
movsl
jbe
inc
and
mov
dec
pop
sub
xor
scas
ficoml
into
imul
and
jns
loop
cmp
pop
cmc
adc
or
dec
pusha
pop
push
fcoms
fidivrs
aad
adc
mov
movsl
in
andl
popa
mov
sarl
pop
lret
aas
sbb
dec
out
test
push
cmp
adc
adc
sbb
out
inc
sti
xchg
push
lock
imul
jns
arpl
push
scas
shrb
lret
xchg
cwtl
xor
or
or
test
in
cld
in
push
data16
mov
mov
and
in
int3
scas
popa
inc
cmpsb
xor
sbb
adc
mov
in
xchg
inc
inc
and
mov
mov
call
adc
shll
mov
sahf
roll
loope
out
xchg
in
insl
inc
sbb
cmp
push
add
adc
cltd
sub
je
mov
icebp
aaa
insl
xchg
lds
movsl
sub
loopne
rsqrtps
inc
shr
sub
in
adc
dec
mov
push
add
std
push
xor
adc
call
mov
mov
repz
add
xchg
in
movsb
mov
push
inc
or
lods
lcall
dec
sbb
insb
inc
in
or
stos
pop
and
mov
mov
icebp
es
jns
insl
imul
int3
dec
fdivrl
divb
dec
jo
add
mov
add
add
xchg
cmp
adc
and
jmp
ja
bound
sub
mov
stos
push
add
xor
call
arpl
cmp
and
push
push
mov
cmpb
aad
adc
inc
jg
movsb
js
out
ja
out
and
sub
mov
push
in
ljmp
fsubs
and
jl
adc
clc
dec
fnstsw
jns
in
rcrb
ds
mov
mov
dec
cld
cmp
fsubp
mov
jle
sub
inc
jl
push
add
pop
and
cltd
out
repnz
mov
push
test
mov
sbb
hlt
in
sub
add
xchg
ret
xchg
mov
hlt
dec
dec
cmc
or
es
add
fisubrl
movsb
push
xchg
sub
hlt
xchg
in
fistpl
sub
and
lret
xchg
lret
ret
pop
adc
jl
aaa
pop
in
lock
sbb
dec
cs
jb
scas
mov
lret
das
or
mov
xor
test
jns
inc
outsl
flds
or
mov
add
xor
insb
or
jns
push
scas
in
push
dec
sbb
mov
stos
push
push
sarb
lods
and
dec
add
das
xchg
mov
aad
insb
out
shlb
ss
dec
pusha
xorl
mov
xchg
aaa
adc
arpl
out
cld
cmp
iret
aad
iret
arpl
cwtl
inc
mov
pop
mov
mov
or
pop
ja
mov
iret
pusha
lock
out
cli
sbb
sbb
adc
clc
in
cmp
xor
orl
push
leave
lds
popa
mov
jl
fstp
xchg
jl
femms
pop
ds
jmp
lods
clc
sbb
inc
ja
xchg
fucomi
xor
dec
mov
and
bts
pop
sub
popf
jo
loope
push
dec
lock
movsl
xlat
addb
test
sbb
int3
dec
insb
xchg
xchg
adcb
ret
jmp
jmp
ficomps
sbb
xor
xchg
pusha
adc
cmc
out
ret
scas
stos
popf
mov
sbb
and
adc
icebp
mov
test
ret
mov
sbb
mov
mov
jnp,pn
dec
arpl
cmp
loope
inc
mov
movsb
mov
rcl
push
cmp
xor
pop
pusha
outsl
dec
cs
or
ds
mov
sahf
inc
loopne
pop
int3
jl
imul
xor
lds
jb
xchg
sti
hlt
addb
and
xchg
fdivl
push
adc
std
add
cmp
inc
mov
or
pop
daa
jmp
lret
sahf
pop
cmpsb
pop
mov
xchg
lret
gs
and
hlt
push
dec
js
inc
adc
mov
jp
repz
jno
ljmp
test
add
mov
popl
or
jmp
scas
inc
adc
and
xchg
mov
addr16
inc
push
fnstcw
not
fisttps
imul
push
out
arpl
adc
mov
int3
lds
mov
sbbb
sbb
cld
adc
fdivr
push
push
cmp
cmp
test
rorl
inc
dec
mov
jl
out
in
dec
sbb
mov
mov
jns
mov
rcrb
mov
cmp
ficompl
int3
test
outsl
loope
dec
sub
sub
and
add
loop
mov
xchg
and
push
jle
fcomi
add
ret
push
call
pop
mov
mov
call
push
sbb
je
xchg
repz
push
push
or
dec
rorl
cmp
sub
or
popa
push
inc
setge
scas
pop
ret
insl
out
xchg
aad
lds
xor
add
mov
xor
or
xchg
jle
and
dec
push
sarl
jp
push
out
jo
aaa
pushf
push
push
mov
outsl
insb
andl
mov
cmc
popf
stos
cmp
adc
mov
xchg
sahf
ljmp
inc
out
pusha
sub
ret
xchg
lahf
and
push
cwtl
push
mov
loopne
arpl
mov
ss
pop
lds
adc
sbb
sbb
cld
push
push
cwtl
mov
aad
push
fstps
mov
dec
cs
xchg
scas
xchg
sbb
mov
daa
xor
add
inc
push
add
lret
js
out
add
pushf
jl
lret
loop
xchg
mov
jle
pop
cmpsl
inc
fs
xor
add
andb
lea
adc
inc
dec
jg
int
aam
pop
in
pop
out
pop
enter
push
xchg
notl
fistps
jae
sahf
lds
pop
in
add
and
shr
jl
loop
pop
scas
repz
add
cmpsl
mov
xor
mov
aam
lcall
icebp
rcll
mov
push
inc
pop
mov
xor
and
mov
pop
inc
cmpsb
dec
sub
dec
jmp
sbb
das
out
imul
mov
fbstp
loope
mov
mov
lcall
mov
mov
push
addr16
lods
inc
lods
mov
mov
adc
lods
shrb
scas
sbb
bound
or
call
fwait
xchg
popl
call
mov
xchg
add
xchg
cmpsl
stos
dec
add
test
outsb
xor
pop
and
dec
mov
aaa
jo
push
outsl
pop
push
sbb
adc
sahf
in
pusha
aas
scas
xor
pop
dec
mov
push
inc
cmp
xchg
cmp
fstpl
ret
push
into
pop
rcll
out
data16
mov
sbb
sub
test
in
out
mov
fstpt
out
push
xor
lea
cli
add
mov
push
push
fiaddl
jns
fiaddl
inc
xor
test
test
xchg
mov
imul
ljmp
test
xor
fwait
rolb
inc
rcll
cmpsl
ror
fsts
jo
jle
sub
pop
add
sub
inc
lea
push
popa
push
ljmp
pushf
xor
or
lret
sbb
loopne
jge
push
jle
mov
testl
jmp
imul
pop
adc
test
mov
xor
add
xchg
jnp
jecxz
and
int
push
dec
inc
mov
stc
in
pop
mov
mov
xor
out
iret
in
js
xor
jg
push
mov
pushf
xor
lret
mov
xchg
repz
test
inc
xchg
cli
jg
mov
or
inc
mov
popf
sbb
inc
and
stc
es
lret
lret
adc
mull
mul
mov
movsl
jne
push
stos
and
push
xchg
xchg
or
or
fsub
or
out
mov
icebp
es
xacquire
mov
movl
adc
jno
and
lods
mov
aas
das
cltd
or
pop
ret
push
popa
orb
mov
add
push
jae
fisttps
jo
icebp
mov
sbb
mov
out
fwait
mov
push
lds
and
add
xor
and
fst
add
fmul
cmc
xchg
or
sahf
mov
rol
loopne
cld
ret
int
pop
dec
bound
shll
sub
push
pop
std
xchg
push
data16
dec
cmc
sarl
cltd
subl
or
lods
adc
xchg
mov
xchg
ret
cmp
and
add
jne
loop
into
push
iret
mov
js
out
and
and
cmp
loopne
and
mov
xchg
rorl
mov
shlb
jbe
sbb
int
and
sbb
add
cmpb
loop
add
sbb
fcmovu
cmp
test
mov
outsl
lcall
cmp
insl
ja
jmp
mov
fwait
pop
mov
xorl
mov
fnstcw
jmp
aam
scas
ffree
inc
out
stos
mov
jmp
orl
mov
xor
or
test
pop
mov
xor
add
hlt
push
shll
or
mov
mov
sbb
test
out
cmpsl
and
mov
xchg
mov
stos
mulb
pop
xlat
inc
or
repz
loop
xchg
jnp
or
test
jo
fst
ljmp
pop
push
fwait
sub
sarl
push
jp
push
mov
xchg
xchg
fnstsw
mov
test
inc
fcoms
cmp
mov
pop
mov
shl
scas
jg
inc
push
mov
outsl
aam
mov
int3
out
gs
aad
mov
mov
xchg
imul
stos
inc
xor
adc
and
xchg
fs
xor
int3
dec
inc
addb
dec
pusha
push
call
mov
xchg
xchg
mov
je
xchg
sbb
enter
rcrb
or
jne
lods
aaa
mov
fdivl
adcb
mov
test
push
push
adc
mov
push
fldl
or
pop
xor
lods
mov
ds
lods
pop
or
jnp
sub
fidivl
pop
sub
arpl
sbb
jg
ja,pn
cmc
mov
loop
or
rorl
sbb
pop
fwait
popa
sbbl
cmp
out
cld
push
adcb
inc
jns
gs
xor
fucomp
js
mov
xor
pushf
jp
push
mov
loop
or
adc
cmp
inc
ja
rcll
fisttpll
movsb
xchg
scas
inc
clc
pop
xor
mov
rcrl
into
jne
cmp
fs
dec
out
movsl
sub
cmp
lods
daa
loopne
movl
loop
cmp
jmp
mov
repz
mov
lds
std
mov
stos
insb
inc
inc
mov
push
lahf
push
jbe
mov
sysret
sub
dec
and
mov
sbb
inc
adc
inc
mov
or
or
cmp
jp
mov
test
aaa
dec
rcrb
imul
jle
fimuls
sbb
xor
sub
push
imul
mov
xchg
mov
jl
dec
xor
push
dec
pop
adc
mov
jae
ljmp
mov
repnz
sub
xchg
or
shrb
std
es
mov
testb
subl
imul
pop
sbb
cli
and
push
ficoml
loopne
loopne
js
pop
push
push
shl
mov
sbb
mov
mov
ss
add
cli
loope
fdivl
shlb
roll
fbld
or
rcrl
fucomp
jb
aas
jle
sub
push
pop
imul
add
cwtl
das
push
pop
lret
dec
in
xor
push
mov
push
fcom
mov
lret
and
int
int3
xor
mov
add
jb
mov
loopne
jbe
pop
outsl
fidivrl
mov
mov
mov
bound
stos
mov
lock
jg
pop
fidivl
dec
xor
test
dec
fsubrp
mov
shlb
push
loopne
insl
mov
scas
cmp
add
inc
sbb
lock
or
lock
rorl
mov
jmp
and
inc
xchg
iret
fdivr
movsb
xchg
xchg
fildll
mov
lret
loope
sbb
sbb
dec
sub
cld
stos
cmpb
mov
loope
sti
adcb
aad
stc
dec
hlt
test
lods
inc
test
or
jne
push
loope
mov
add
cmpsb
lods
sub
and
test
mov
les
pushl
pop
jg
mov
cmp
pusha
xor
inc
mov
sbb
jmp
int
cmp
jb
and
jmp
cmpsb
cltd
cli
sarb
mov
push
fcmovne
fsubl
sahf
mov
js
pop
mov
push
jecxz
mov
daa
mov
testb
loope
rorl
insb
int3
mov
mull
mov
push
mov
test
sub
push
dec
push
ss
jo
adc
xor
fisubrs
fsts
add
scas
mov
push
push
cmpsl
fldcw
pop
sub
dec
call
or
subl
shll
push
imul
xchg
stc
adc
xorl
mov
and
lcall
addl
sbb
loop
add
jp
in
lcall
jne
cltd
out
cltd
xor
out
fs
dec
imul
mov
jmp
enter
data16
or
adc
fstpt
lods
stc
in
sarl
xor
dec
and
sbb
lock
inc
loopne
arpl
mov
test
push
mov
xchg
and
or
cltd
enter
hlt
cltd
int3
pop
mov
ljmp
xchg
jae
shrb
out
neg
shll
fucomip
movsl
out
movsb
mov
jne
pop
cwtl
aam
daa
ds
in
jo
es
sub
inc
in
call
push
out
sarl
fildl
ljmp
leave
and
adc
xor
leave
dec
bound
sbbb
scas
inc
std
push
xor
jbe
pop
in
push
movsb
or
jmp
and
cmp
icebp
fidivrl
negb
xor
dec
clc
test
mov
or
or
fiadds
mov
inc
jge
sbb
mov
add
jle
repz
loop
push
notl
movsl
push
shll
xchg
cmpl
push
stos
ss
int3
jecxz
mov
push
pop
sbb
hlt
mov
sub
push
aam
std
jg
sbbb
mov
adc
das
pop
hlt
mov
daa
cmp
rorl
test
push
hlt
pop
add
in
push
lcall
inc
bound
or
jl
lcall
ljmp
mov
jne
pop
ror
or
push
mov
adc
loop
and
pusha
mov
mov
mov
cwtl
mov
dec
nop
mov
sti
roll
add
push
xchg
mov
pushf
xchg
xor
adc
or
xchg
test
mov
fs
aas
dec
pushf
mov
inc
scas
cmpsb
test
mov
mov
add
pushf
scas
cmp
inc
sbb
rsm
xor
inc
adc
faddl
inc
dec
lcall
cmpsb
inc
arpl
jmp
push
dec
pop
cmp
rol
or
aaa
mov
xorb
xchg
dec
pop
cld
ret
inc
lret
inc
mov
loopne
cmc
cwtl
dec
aad
fsubr
out
mov
testl
outsb
add
repnz
adc
mov
shll
mov
ret
mov
inc
adc
jns
frstor
repnz
jge
push
inc
or
cltd
mov
cmpl
jbe
lds
inc
fidivrl
movsl
loopne
mov
lahf
add
xchg
test
or
jbe
jnp
push
popa
insl
lcall
push
mov
push
lcall
insl
cmc
mov
dec
mov
push
dec
mov
xchg
mov
fstps
mov
mov
sub
std
dec
ret
xlat
xorb
out
cmc
les
pushf
pop
cwtl
sbb
pop
and
cmp
or
add
fstpl
inc
xor
das
inc
xor
jmp
pusha
sub
mov
iret
sti
mov
push
sar
out
lcall
fstpt
rcr
xlat
xchg
jno
cltd
mov
jle
mov
jmp
sbb
lret
enter
dec
add
push
lcall
int3
sub
aam
inc
imul
aam
js
mov
mov
pusha
or
rcrl
fistps
arpl
cmp
pop
xchg
loop,pt
shll
outsl
daa
dec
sbb
or
inc
dec
push
push
aaa
ja
rcl
lods
xlat
aam
bound
inc
pop
clc
lea
jmp
add
iret
mov
mov
xor
addr16
jae
out
cs
std
add
fisttpll
int
sub
mov
add
xor
push
adc
clc
in
add
xchg
jecxz
fsubrs
sti
fucomip
mov
or
adc
jo
imul
fmuls
leave
inc
iret
aad
andl
cmp
sub
ss
mov
testb
into
in
int3
inc
shlb
ret
lods
mov
xor
ror
or
dec
sbb
mov
or
pop
subl
lods
xchg
stc
adc
int
pop
cmp
movsb
jg
jb
push
xor
out
cld
mov
aad
lcall
xchg
scas
xor
test
sbb
je
mov
test
mov
add
push
in
scas
loopne
repz
or
dec
mov
lods
mov
cmpsl
movl
fsubl
addr16
push
mov
sbb
loopne
sti
cmc
dec
std
xchg
out
data16
and
bnd
iret
jge
cltd
xor
pop
push
cmp
in
push
fimuls
xchg
gs
fidivl
cmp
jae
cmc
xchg
push
xchg
imul
xlat
jb
stos
push
imul
push
fldenv
rorl
cmp
xor
xor
add
ja
out
ret
push
repz
sub
xor
jp
popw
data16
jns
pushf
cli
mov
jmp
adc
xchg
and
in
aas
mov
ds
mov
add
mov
sub
inc
pop
jbe
dec
mov
dec
sarl
cmpsl
ret
jne
sbb
sahf
push
out
ljmp
and
pop
and
hlt
mov
inc
jg
bound
pop
pop
xor
loope
insb
cmp
lods
push
jno
xchg
ffree
inc
int3
inc
push
pusha
and
jns
jmp
out
and
push
lret
clc
sub
bound
ret
repz
aam
xchg
sub
gs
daa
das
subb
add
pop
jno
inc
fs
xchg
add
rol
addr16
ret
mov
or
daa
xchg
sahf
xchg
sub
out
xchg
loop
pop
sub
mov
shlb
or
popf
lods
andb
sub
jg
mov
ret
xchg
mov
jne
xchg
faddp
jne
test
sub
push
es
repz
inc
adc
pop
sbb
shrl
gs
shlb
lods
bound
movsl
add
hlt
lds
loop
pop
adc
outsb
fs
and
xchg
xchg
cmc
movsb
mov
hlt
mov
movsb
mov
and
lcall
loop,pn
nop
cmp
call
rcll
xchg
pop
int
jns
rcr
mov
dec
and
jbe
inc
xchg
fadds
pop
push
mov
filds
addr16
and
dec
pop
call
ja
jo
add
sub
repz
jge
jns
push
and
pop
xlat
sbb
cmp
imulb
inc
in
or
sub
pop
mov
xor
ret
in
out
test
mov
jecxz
mov
mov
mov
or
sub
fistpl
sbb
movl
and
pop
mov
adc
ffree
lea
out
adc
mov
push
repz
ss
mov
mov
sub
fists
or
iret
dec
adc
rorb
loop
stos
popa
orl
jmp
push
inc
push
or
cmpl
pop
xchg
add
push
adc
lds
je
loop
mov
xchg
fdivrl
cmpsb
cs
or
orl
xor
cmp
pop
fndisi(8087
xlat
bound
es
mov
adc
sub
fs
js
mov
jmp
push
nop
fiaddl
inc
and
icebp
add
or
mov
jmp
or
jns
sahf
mov
mov
xchg
mov
sahf
int3
out
insb
fprem1
pop
push
ja
leave
call
lahf
inc
les
int
xor
cld
inc
loopne
in
out
gs
jge
cli
jo
push
inc
cmp
mov
sti
inc
adc
mov
in
mov
stos
cmp
xor
sbb
add
and
mov
pop
movsl
dec
mov
bound
mov
pop
inc
movsb
lock
out
cmp
das
hlt
cmpsb
sbb
in
in
and
sub
lock
ficoms
adc
mov
clc
mov
sbb
xor
mov
out
sub
lock
pop
pop
mov
je
xor
and
loop
jg
insl
sbb
sbb
cld
sahf
mov
xor
jne
push
push
mov
loop
cwtl
push
adc
pop
cmp
mov
xor
movsb
into
data16
lods
and
sarl
and
lods
sbb
rolb
lock
jb
cmp
or
pop
cmc
loope
dec
xchg
insb
addr16
icebp
test
jg
lret
sbb
rolb
subb
icebp
add
push
jmp
or
xchg
push
pop
pop
jb
and
sahf
fldenv
dec
mov
push
ja
cltd
pop
lds
stos
mov
cld
clc
fidivrl
add
add
imul
std
jp
bound
daa
or
popa
insb
mov
mov
jmp
add
pushf
and
jns
mov
out
jns
ds
push
inc
push
mov
or
aad
add
js
adc
imul
mov
dec
gs
or
lret
addr16
adc
out
ret
mov
dec
loopne
lea
dec
nop
les
xor
sub
bound
bound
bound
jp
sbb
sbb
or
pushf
mov
pop
pop
ja
popa
test
leave
outsl
xchg
std
bound
pop
inc
pop
ss
imul
dec
inc
ds
sahf
add
mov
xor
cmp
xchg
bound
fsubl
lret
push
mov
shll
mov
cmp
dec
inc
sbb
sbb
inc
cmc
add
movsl
fsts
lret
pop
into
pop
xor
xchg
xchg
mov
out
sbb
cmc
insl
adc
jb
lahf
xor
cmp
lods
xor
mov
sbb
sub
or
and
cld
out
push
outsb
add
push
push
mov
nop
movsb
pop
sbb
scas
gs
mov
icebp
push
fs
pop
and
sarl
or
sbb
mov
push
mov
test
pusha
and
push
test
cmp
jmp
stc
jge
out
loop
pusha
lods
not
pop
push
adc
mov
mov
jmp
push
pop
jmp
push
fcmovne
js
ss
xor
jb
inc
sub
clc
pop
mov
or
test
pop
cmpsl
mov
hlt
loope
cwtl
push
xchg
outsb
push
mov
xchg
movsb
xchg
out
xchg
xchg
data16
xchg
out
test
jbe
or
sub
cltd
and
icebp
jb
ror
dec
cmp
loop
mov
ljmp
dec
cs
sbb
insb
add
scas
testb
int
in
and
mov
out
and
inc
iret
int
adc
sbb
ficoms
out
and
mov
jmpw
faddl
cwtl
lods
xchg
cwtl
aaa
push
xchg
pop
aad
punpckhbw
mov
push
mov
js
imul
leave
in
aas
lock
stc
jl
pop
pop
mov
lea
inc
and
inc
cltd
popa
inc
es
mov
add
mov
inc
sbb
cmp
and
das
lods
lret
mov
cli
dec
pop
pop
pop
sbb
movsb
push
inc
or
arpl
icebp
inc
jmp
pop
rcrl
cwtl
push
jg
xor
jnp
mov
pop
stos
rorb
iret
or
push
fsubr
cmp
xchg
leave
sub
pop
movsb
and
into
xlat
or
mov
xchg
mov
lret
orb
ficomps
in
outsl
and
cmpl
sahf
cmp
adc
pop
mov
xchg
andb
xchg
jmp
dec
add
and
out
mov
inc
mov
js
mulb
hlt
adc
mov
pushf
cmc
sahf
fiaddl
pushf
jo
or
adc
test
xchg
pop
or
or
jns
push
cmp
mov
mov
xchg
inc
fldcw
add
push
pop
adc
jnp
adc
cmp
loope
xchg
xlat
jae
fldt
jg
add
fcoms
push
iret
sbb
je
iret
fsubrs
add
mov
lret
inc
addl
out
cmp
mov
outsb
arpl
mov
fwait
dec
shll
push
and
mov
jb
stc
int
xchg
push
push
out
xchg
mov
sbb
and
je
cmp
pop
cmc
test
mov
insl
sub
push
push
fiaddl
dec
in
fwait
push
stc
popa
add
push
mov
jb
ja
pop
call
xchg
push
jge
fcompl
xchg
inc
xchg
out
jmp
rcr
shr
ljmp
mov
mov
test
fists
pop
push
popf
mov
adc
xchg
pusha
outsl
add
aad
sbb
xor
mov
loope
push
pop
pop
lret
sbb
pop
mov
out
mov
push
aas
and
push
mov
in
mov
mov
das
stos
cmc
stos
enter
imul
imul
aad
push
xchg
in
movsl
dec
push
mov
mov
sub
in
xor
xor
rorl
gs
add
out
fs
jmp
sahf
push
jnp
sbb
add
dec
inc
sub
data16
jns
pushf
movzbl
lcall
mov
mov
inc
sar
test
xchg
pop
lods
rol
fs
mov
aam
dec
mov
adc
loopne
insb
jmp
les
in
jne
sub
test
out
push
jb
cli
xor
mull
mov
mov
ret
pushf
pop
repnz
push
adc
aaa
mov
sub
and
lods
in
mov
mov
inc
push
xor
dec
add
mov
mov
movsb
cmp
push
pop
and
leave
cltd
mov
neg
mov
and
xchg
cmpb
mov
mov
xchg
inc
adc
jb
jo
and
test
push
dec
xor
jmp
int
mov
xlat
and
aaa
imul
dec
or
test
pop
and
cli
cmpsb
and
jle
sbb
dec
mov
mov
add
mov
jns
mov
dec
dec
mov
mov
loopne
out
int
decl
cmpsl
or
jecxz
mov
mov
bts
jno,pn
xor
insl
dec
cmp
inc
mov
push
sub
sub
xor
loop
ret
orl
push
lcall
cmp
dec
sbb
mov
sub
rcrl
cmp
add
mov
adc
sbb
lds
jp
test
arpl
xchg
cltd
add
inc
sbb
movsb
xchg
into
cmp
gs
sbb
pop
inc
loope
dec
dec
jge
enter
stc
inc
pop
cmpsl
sti
fsubl
clc
add
mov
lret
adc
pop
imul
mov
mov
add
sbb
add
ds
fsubl
pop
mov
mov
cwtl
cmp
mov
xchg
add
cmp
jbe
mov
mov
push
sbb
aam
push
in
mov
cld
fcomps
push
rcll
jl
pop
mov
jbe
jne
shll
fst
test
mul
rorb
mov
testl
dec
popf
or
fs
xchg
sub
mov
jae
ret
arpl
xor
orb
inc
sub
cld
cmpsl
roll
pop
jl
pop
cs
out
sub
push
sbb
lcall
mov
out
and
filds
mov
or
lds
inc
dec
outsb
mov
mov
xchg
mov
imul
mov
inc
shll
sbb
jle
out
and
mov
pop
pushf
add
das
add
rcrl
sub
dec
cmpsb
push
inc
rcrb
jle
incb
int
mov
jecxz
sbb
pushf
lea
out
mov
and
rorb
aaa
xchg
mov
push
inc
movsl
jg
cmp
std
add
icebp
inc
ss
jle
fistps
icebp
jae
ret
pushf
mov
ret
in
in
push
repnz
xchg
movl
pop
cmp
outsl
ljmp
or
xchg
xchg
lods
ret
ja
xor
inc
xlat
insl
aas
idivb
pop
xor
sarb
sbb
add
pop
stos
xchg
stos
xor
gs
mov
pop
cs
pop
adc
add
mov
popa
jnp
push
jnp
mov
out
adc
push
lock
ret
rclb
add
pop
aas
pop
inc
xchg
adc
orl
ljmp
jo
and
sbb
lea
push
mov
daa
mov
fldt
inc
or
dec
insl
aad
mov
and
loope
movsl
jnp
cmc
mov
mov
mull
cltd
sbb
mov
addl
and
and
mov
lret
mov
xor
es
cltd
jg
mov
lcall
clc
fsts
or
shr
je
adc
cmc
mov
dec
push
sub
jo
and
mov
ret
inc
outsl
jge
adcl
test
pop
jo
popa
test
in
hlt
insl
in
cli
dec
mov
jo
mov
es
inc
xchg
fisubrs
mov
cwtl
arpl
ljmp
mov
mov
mov
ljmp
xchg
insb
mov
add
add
jns
xchg
in
mov
fs
mov
xchg
dec
push
daa
in
pop
cli
cmp
adc
test
mov
sahf
ljmp
imulb
test
stc
jmp
adc
sbb
loop
xorb
dec
xor
dec
inc
or
mov
mov
nop
insl
movsl
movsb
or
xor
and
sar
and
xor
insl
fists
imul
cmp
mov
ficoml
das
ret
fucomip
mov
ja
jle
cs
or
es
js
xchg
mov
cmpsl
add
or
jge
cld
inc
jno
into
icebp
lea
pushf
in
inc
dec
lods
lods
test
icebp
iret
iret
ljmp
lock
pop
shll
jge
cmp
jne
mov
xchg
sbb
imul
les
or
rol
adc
orb
movsl
xacquire
mov
or
or
scas
sbb
pop
add
jnp
xchg
or
mov
jb
sub
or
pop
xorb
mov
fdivl
out
sti
hlt
and
ret
insb
es
repnz
shll
cmp
add
stos
or
jae
pop
sbb
iret
ficompl
and
mov
out
enter
push
nop
data16
arpl
fidivrs
lcall
push
push
repnz
cmpsl
pop
or
cs
repz
lods
dec
rclb
mov
push
ffreep
add
fs
xchg
cwtl
mov
jbe
sbb
xor
lock
adc
test
mov
add
adc
jl
xor
sbb
pusha
cmc
scas
pushf
pusha
pop
rcr
repz
es
int3
fstl
fdiv
movsl
push
inc
hlt
insl
aaa
xorl
test
repz
fildll
inc
add
add
fsubs
aaa
xor
xor
xor
dec
data16
and
in
mov
rcll
mov
jp
or
sbbl
xchg
fnstcw
or
add
test
sbb
out
idivb
sbb
pop
stc
fists
jbe
mov
add
pop
mov
ror
int
inc
inc
arpl
and
or
ja
mov
lock
mov
das
js
xchg
in
clc
mov
test
mov
daa
adc
les
pop
sub
pop
in
inc
and
ljmp
jmp
sbb
sub
push
lea
or
in
insl
insb
push
aas
sbbb
fsub
loopne
jnp
dec
in
jp
sbb
adc
xor
orb
mov
jp
cmp
dec
sub
movsl
dec
push
sub
pop
out
pop
movb
in
adc
lret
mov
sbb
data16
mov
fiadds
push
dec
test
or
cli
adc
cmp
rcll
inc
push
fwait
xchg
incl
loope
scas
rorb
movl
cmp
push
adc
icebp
ss
jge
mull
fcmovnu
xor
push
scas
push
push
ficoms
dec
inc
pop
sbb
jg
xor
in
add
mov
sub
in
xchg
mov
test
xchg
gs
inc
rcrl
leave
jge
mov
pop
icebp
insl
icebp
leave
mov
and
push
leave
gs
or
mov
lods
int3
pop
shrl
loop
lcall
inc
ljmp
rorl
jnp
pop
mov
aad
jbe
add
in
lods
pusha
pop
fdivrs
mov
and
push
dec
cs
push
lods
repz
paddusw
xchg
pusha
dec
xchg
dec
jl
cmpsl
dec
jecxz
daa
xor
xchg
jp
lret
out
cli
aaa
gs
jmp
xchg
andb
daa
test
push
and
repnz
dec
jp
push
popa
mov
and
dec
push
mov
loopne
or
inc
repnz
movsl
push
movq
ret
leave
xchg
in
or
jno
dec
inc
dec
fiadds
lods
and
xchg
mov
shlw
push
lret
jmp
jno
in
sti
inc
cmp
dec
les
jle
mov
dec
add
push
jno
fsubrs
mov
int
shll
cmp
insl
fs
xor
or
test
dec
xchg
aaa
popa
add
jnp
mov
or
dec
ds
stos
or
or
mov
dec
lcall
lea
idiv
pop
aaa
sub
shl
pop
lret
imul
inc
nop
fsubrl
outsl
bound
sub
or
insb
add
aas
clc
pop
adc
frstor
cwtl
imul
test
jp
jmp
fs
dec
mov
es
push
fxch
cmp
push
iret
mov
and
and
jmp
sbb
mov
in
movsl
popf
or
or
lea
pop
inc
mov
xor
imul
and
mov
xor
popa
lea
xchg
push
insl
xor
bound
sub
sbb
inc
adc
leave
sbb
leave
testb
jge
adc
ss
hlt
push
fcomp
mov
push
in
pop
push
aaa
pop
repz
lods
push
xchg
shl
shl
stos
daa
push
sub
scas
andb
scas
test
cmp
jns
testl
cmc
or
ret
outsl
jge
add
mov
pop
add
mov
xchg
divb
xchg
lock
pop
adc
jmp
push
ljmp
add
mov
ret
stos
insb
icebp
sub
pop
sub
dec
fcmovnu
clc
push
dec
push
lcall
adc
into
cltd
lods
xchg
adc
push
push
out
fs
outsl
out
jno
jmp
int3
adc
xor
adc
cwtl
cmp
clc
pop
movsb
stos
cmpsl
jecxz
xchg
outsb
pushf
test
test
hlt
xchg
out
jle
jne
xor
mov
outsl
dec
aas
out
repnz
mov
cmpsl
stos
and
clc
mov
mov
fdiv
mov
push
mov
fsubrs
pop
pusha
add
push
pop
aam
sahf
cmp
push
xchg
cmp
add
lods
mov
push
lods
adc
in
cmc
movsb
out
pushf
mov
mov
sub
js
popa
orl
inc
push
sub
adc
add
insb
pusha
inc
and
xchg
leave
fsubr
std
lock
sbb
daa
repz
shl
cltd
adc
pop
aad
jmp
add
cmpsb
bound
add
xor
jnp
xchg
insb
cmp
xor
aas
dec
std
pusha
pop
cmp
out
inc
xor
xchg
xorl
cmpsl
leave
repnz
adc
push
adc
lcall
cmpsl
dec
sbb
fildl
aad
mov
roll
aam
jmp
mov
in
jl
ret
add
jg
push
jns
push
push
sub
loop
sub
test
add
aaa
lods
mov
jbe
xchg
fnstcw
add
xor
jp
ja
lock
inc
stos
or
dec
andb
out
testl
xor
xor
mov
and
mov
aam
fistpl
mov
icebp
mov
in
xor
int
and
ret
mov
jbe
xor
ret
mov
scas
push
push
popf
daa
or
mov
sub
es
sbb
mov
aas
call
test
cltd
xorb
push
test
negb
mov
mov
insb
fisttpl
xchg
pusha
cld
cmp
scas
sub
rorb
sub
fisttpl
shl
addl
rcll
call
cmpsl
pop
hlt
je
cld
cmc
ret
and
sub
push
clc
inc
jmp
adc
jecxz
pusha
xor
xchg
cmp
fs
daa
pusha
dec
add
hlt
icebp
cmp
lods
outsl
jge
mov
sbb
cld
gs
dec
push
cmc
push
pop
pop
hlt
lock
shlb
mov
mov
enter
pushf
test
in
cmp
inc
ds
sbb
or
sahf
outsb
push
adc
push
cmp
mov
push
ret
jp
dec
fisubl
sahf
fcmovnbe
sti
push
or
ror
jb
xchg
push
pop
dec
out
in
mov
xchg
mov
and
and
insb
jne
lea
rcrl
addr16
pushf
arpl
stos
lods
aam
es
sub
mov
xchg
mov
pusha
gs
xchg
lcall
sbb
repz
subb
repz
jl
xlat
xor
add
jne
das
mov
mov
dec
and
js
lea
faddl
mov
mov
imull
sbb
mov
mov
in
ss
jecxz
cli
std
pop
outsb
add
jl
pop
mov
xchg
test
push
inc
cltd
inc
fisubrs
pop
loopne
pop
addb
adc
jg,pn
xchg
xchg
insl
jns
popf
insl
pop
mov
mov
push
mov
ss
int3
mov
sub
pusha
out
jmp
in
shll
adc
mov
fwait
cs
fdivs
in
and
lock
mov
and
push
push
psllw
test
out
mov
push
xor
in
dec
cmp
out
pop
or
pop
repnz
popf
xchg
jbe
sub
jmp
stc
sar
andb
jmp
push
popf
out
mov
loop
xlat
icebp
sti
test
xchg
mov
pop
out
sub
inc
cli
xor
sti
fldenv
mov
sub
sbb
mov
out
push
mov
xchg
add
jecxz
pushf
mov
aaa
out
mov
xchg
push
adc
jbe
sbb
mov
push
add
not
scas
pop
inc
lds
mov
xor
testl
lods
ja
sbb
and
inc
jbe
fwait
aad
es
jmp
aaa
push
or
xchg
pop
lds
aaa
adc
or
push
cmp
inc
jp
cmp
out
sub
pop
mov
aam
and
xchg
aaa
in
add
mov
sahf
into
cmp
lods
mov
into
and
cmp
push
push
ljmp
lods
inc
ss
adc
sahf
fldpi
mov
mov
aaa
adc
outsb
repnz
mov
insl
shlb
push
jnp
cmp
fxch
cs
or
and
mov
mov
mov
je
cmp
cmp
fs
jne
in
in
adc
pop
lret
loopne
xchg
jae
sub
mov
dec
repnz
fs
adc
mov
orl
in
sbb
imul
xchg
dec
inc
push
inc
jecxz
mov
pop
les
jecxz
pop
in
lods
inc
mov
out
in
cld
add
subb
add
ror
jg
adc
into
repz
jle
ret
mov
aam
cwtl
mov
inc
call
mov
jae
xchg
adc
adc
in
adc
leave
aam
aas
gs
add
xchg
and
stos
push
addr16
adc
stc
mov
inc
jo
mov
push
jp
mov
jns
std
out
mov
ljmp
int
mov
add
aad
cmp
out
adc
push
mov
icebp
inc
push
fildl
scas
es
inc
dec
or
xchg
jp
icebp
add
dec
cmp
inc
outsl
push
pop
in
test
ficompl
fs
push
subl
adcb
jge
fistpll
jle
ds
mov
jle
ret
mov
nop
cs
pop
les
sbb
in
cmp
xchg
cltd
pusha
aam
mov
rcrl
js
mov
cli
or
outsb
inc
shll
ret
mov
test
and
sub
pusha
jb
aam
xchg
dec
cwtl
ror
je
xchg
mov
push
orl
shrl
je
insb
enter
sbb
xchg
cmp
out
xor
jl
in
jmp
jb
into
test
dec
popf
xchg
ds
repnz
or
lock
inc
jmp
adcl
pop
out
rcl
inc
xorl
sahf
sub
idivb
lods
xchg
mov
cmp
sub
data16
jge
idiv
repnz
mov
xchg
push
lret
je
test
cld
std
std
in
test
and
xchg
sbb
sub
je
push
inc
out
mov
das
or
pop
cmp
cmp
adc
outsl
jp
mov
mov
in
in
clc
pop
int
pop
ss
mov
pop
adc
fst
dec
rcll
add
cmp
add
add
dec
pop
mov
out
sub
pop
jecxz
aad
and
and
test
cltd
pop
xor
cs
movsl
pop
insl
and
pop
sub
fwait
pop
mov
pop
jmp
mov
and
scas
or
lds
push
xor
mov
or
stos
icebp
rorl
push
or
push
inc
loopne
push
or
mov
imul
pop
sbb
pop
jne
jb
lods
xor
insb
repnz
in
dec
mov
and
inc
or
inc
div
ret
add
pop
push
mov
jg
fwait
les
sub
mov
or
std
xlat
cmp
sub
testb
jl
imul
xchg
adc
push
jne
pop
xor
in
scas
or
xor
sbb
aam
xor
jns
and
test
lea
adc
movsb
daa
mull
xor
data16
mov
subb
mov
ret
pop
insl
sbb
sbb
lock
cmpsl
fucom
sbb
push
lahf
mov
and
cld
sbbb
dec
lods
loope
xor
out
mov
ret
negl
ss
imul
or
jmp
out
call
fadd
repnz
pop
add
and
filds
rclb
push
or
iret
add
jb
push
lretw
inc
bound
test
mov
scas
addr16
push
mov
into
jg
sbb
call
xor
aad
lahf
pop
xchg
test
mov
sub
popaw
push
aam
in
push
dec
pop
ficoml
xchg
es
or
sub
aas
jmp
mov
or
mov
mov
ss
or
rcl
inc
mov
ret
xchg
test
test
sbb
pop
stos
and
loop
fisubrl
adc
ret
data16
bound
mov
dec
in
cmp
cmp
mov
jae
sub
lea
call
or
test
pop
stc
sub
cmpsl
jge
xchg
inc
push
fidivrl
lea
imul
out
mov
dec
pop
sub
pop
xchg
pop
sbb
and
push
std
pop
pop
fidivl
and
ja
fsts
jns
cmp
cltd
ret
rcrl
fsubs
mov
lods
outsb
shll
mov
fsts
cld
out
cmpsl
xor
fiaddl
xchg
icebp
push
mov
scas
cmp
cmp
fnstcw
dec
data16
fisubrl
xor
idiv
mov
mov
cmpsb
mov
sub
in
data16
rorb
pop
mov
cs
lods
and
pop
push
sbb
fwait
adc
hlt
fists
ljmpw
mov
or
gs
jb
mov
add
scas
cmp
jnp
cld
or
adc
and
pop
add
neg
and
xchg
ss
adc
or
pusha
xchg
mov
in
fsubrl
and
mov
addr16
cmp
cli
jmp
fldl
adcl
pop
int
in
imul
and
aam
cmc
add
mov
call
pop
pop
xchg
xchg
fmul
and
push
and
inc
mov
mov
leave
scas
bound
call
inc
iret
or
clc
mov
jg
mov
ja,pt
push
cmpsb
or
ret
out
push
or
lahf
push
filds
mov
sub
jo
out
xor
xchg
mov
insl
cmp
jl
mov
mov
or
nop
notb
mov
rcl
int3
push
insl
jge
sbb
cli
imul
lcall
aaa
sub
scas
mov
decl
inc
insb
mov
outsb
pop
js
fdivrs
dec
data16
mov
nop
inc
stc
sbb
fchs
loope
sahf
push
adc
xor
jnp
lock
adc
lea
mov
in
sti
inc
sti
mov
loopne
xchg
rclb
dec
jae
ja
inc
mov
ficoms
pop
iret
pop
mov
and
sbb
dec
cmpsl
fistpl
xor
bound
adc
xchg
lea
push
addb
mov
push
aad
js
mov
test
insb
orl
pop
in
pop
xor
lods
sbb
xchg
leave
fistpl
push
loope
out
movsl
pop
decl
xor
fwait
mov
jbe
aaa
pop
jmp
lods
std
push
je
cltd
aad
hlt
pop
aaa
imul
frstor
out
and
lret
pusha
fcoml
pop
jmp
lods
xchg
lret
lods
pop
popa
hlt
and
movsb
mov
incb
mov
shll
xchg
inc
cltd
jns
dec
adc
jns
mov
lods
test
pushfw
nop
or
test
or
or
ret
in
push
xor
fmull
add
nop/reserved
cmp
push
sub
pop
xchg
lret
push
stc
cmp
clc
sub
jnp
rolb
cmp
inc
add
stc
sub
push
push
test
sbb
push
mov
adc
mov
inc
in
test
mov
and
leave
cmp
add
testb
js
rcl
jb
pop
imul
dec
pop
fistl
mov
mov
mov
and
test
and
adc
test
xor
maskmovq
idivl
fwait
mov
add
imul
aaa
jecxz
xchg
or
addr16
ja
rolb
pop
icebp
mov
test
jb
push
je
ficoms
popf
jge
imul
xchg
enter
ficompl
pop
dec
mov
mov
push
dec
mov
mov
outsl
add
ds
stos
fs
imul
loope
lea
xchg
cmp
adc
cld
jp
inc
cli
mov
mov
fimull
aas
push
ret
push
cmp
fwait
aas
and
cmpsb
jecxz
cmp
sub
ds
aaa
cmpsb
test
hlt
sti
mov
cs
movsl
sti
add
rol
popf
daa
xchg
arpl
adc
cmp
arpl
scas
or
and
fsubl
loope
inc
pushf
mov
xor
jmp
cltd
add
test
lea
xlat
loop
ja
adc
mov
xchg
mov
daa
xor
push
xchg
dec
pop
pop
xchg
sub
mov
lea
rep
sub
or
pop
out
inc
rcll
mov
lock
adc
jp
movsb
stos
icebp
xchg
xchg
push
rorb
mov
xchg
rcrb
xchg
push
inc
adc
in
sub
clc
push
aaa
and
sub
mov
test
icebp
sub
sbb
add
or
lahf
lods
lea
ds
and
pop
rorl
jae
test
gs
sub
sub
and
fs
sbb
movsb
dec
test
or
push
mov
jmp
mov
daa
aam
roll
pop
xchg
addl
arpl
or
cmp
scas
jmp
pop
into
aad
dec
push
rorb
call
sahf
mov
jbe
ja
cmp
pop
or
negb
push
mov
nop
cmpb
fists
test
dec
mov
mov
insl
ficompl
mov
sbb
or
mov
jno
xchg
sti
fs
sbb
lret
push
mov
lea
ja
ret
pop
xchg
in
or
push
cmp
sub
cld
adc
pop
jle
fldl
das
mov
sbb
jae
inc
xlat
xchg
test
ds
repnz
data16
push
enter
fcoms
stos
mov
sub
mov
in
pop
jecxz
sub
or
push
lods
es
inc
pop
arpl
sub
popa
xor
cs
test
jle
pop
mov
addr16
int3
aam
lock
jnp
imul
movsb
jo
push
jbe
pushf
imulb
std
fistpl
pop
mov
pop
pop
adc
dec
push
xor
mov
adcl
lret
pop
in
movsb
mov
cmp
icebp
mov
cmpsl
jl
and
pop
xchg
shll
pusha
xorb
sbb
faddl
mov
inc
cmp
outsb
es
mov
jg
mov
ss
sbb
repnz
mov
xor
jo
rcll
sbb
dec
lea
lea
mov
mov
dec
adc
mov
xor
mov
ss
aad
in
mov
and
divl
mov
mov
push
fsubrl
sub
jecxz
loope
cmp
lea
or
fwait
xor
aad
mov
push
adc
fyl2xp1
xor
inc
dec
mov
outsb
add
lods
mov
es
mov
and
adc
jno
xchg
mov
sbb
lret
xor
mov
fwait
mov
pop
adc
notl
mov
pop
cmp
adc
push
and
pushf
pop
lcall
inc
pop
xor
out
fnstcw
mov
pushf
aas
bound
xchg
jp
cmpsl
xor
dec
xorb
rcl
fnstsw
sbb
push
jl
roll
cmp
fsubl
push
fmul
cbtw
sbb
dec
pop
dec
rclb
jbe
jo
nop
xor
es
sub
sbb
leave
enter
dec
xlat
sbb
sbb
xchg
xchg
cmp
int3
ret
mulb
pop
insl
ljmp
pop
xchg
cmpl
lock
adc
ret
cmc
push
mov
lds
jnp
mov
inc
es
cmp
dec
cmpl
hlt
add
add
nop
mov
testb
aaa
clc
ret
fwait
jne
push
xor
imul
mov
and
jecxz
xor
mov
popa
add
inc
xchg
mov
ret
sub
push
arpl
cmpb
sbb
xchg
cwtl
lods
data16
mov
jbe
adc
divl
bnd
jns
dec
push
repnz
push
and
stc
pop
and
sub
sub
jg
stos
scas
pop
lahf
in
dec
xchg
xor
xor
pop
xchg
in
aam
jbe
pushl
mov
push
sahf
sub
imul
sbb
into
dec
sbbl
loop
dec
inc
xchg
cmp
fs
das
ret
mov
in
push
jl
sbb
inc
clc
fsubl
loopne
push
repz
mov
ret
cmpsb
sub
jne
adc
pop
dec
sub
mov
inc
test
pop
xchg
mov
mov
leave
or
add
add
lods
jb
faddp
mov
sbb
test
adc
out
mov
sub
mov
dec
mov
xor
lcall
jns
cli
outsl
lret
xor
and
add
insl
test
outsl
pop
dec
mov
pop
mov
cmp
adc
in
mov
test
sbb
stos
shll
fwait
jbe
pushf
sub
cmc
sub
pop
lock
cmp
mov
adc
pop
mov
or
decb
gs
jl
mov
push
cli
mov
xchg
inc
lea
aaa
inc
dec
in
orl
cltd
pusha
fiadds
mov
mov
call
fwait
sub
stos
imul
cwtl
inc
sub
push
xor
insl
gs
push
js
adc
and
adc
cwtl
and
scas
mov
stos
xchg
in
push
hlt
into
into
fwait
icebp
sbb
cli
mov
inc
add
xchg
and
ljmp
jne
ljmp
or
enter
sarl
pop
test
and
push
add
es
cmp
mov
int
mov
fidivl
faddl
xor
sbb
mov
or
cli
lcall
mov
cmp
sub
mov
call
rcll
add
movsl
mov
movb
sbb
imul
mov
pushf
jmp
add
dec
iret
aad
mov
leave
pop
xor
in
cmp
push
push
cmp
push
and
outsl
aas
aad
mov
or
and
cmovge
pop
and
xor
nop
cmpsb
sbb
fldl
imul
sub
adc
mov
adc
or
popa
icebp
jg
test
loopne
xor
rol
dec
xchg
add
lret
add
jb
mov
clc
mov
popf
flds
xchg
data16
dec
daa
je
xor
mov
cmpsl
xchg
jp
stos
fucomip
jo
clc
cs
push
mov
push
push
cmpsb
fucom
gs
scas
mov
lret
lahf
jecxz
ret
repz
or
push
les
imul
xor
push
cmp
inc
inc
roll
sub
adc
or
dec
mov
pushf
add
mov
pushf
mov
jns
lea
mov
pop
sbb
in
pop
test
mov
call
jp
push
jp
repz
adc
pop
add
pop
jg
lret
addr16
arpl
addr16
arpl
or
movsb
or
mov
pop
cmp
adc
dec
jno
iret
in
mov
lret
daa
adc
sbb
xchg
jns
mov
in
dec
push
ds
rclb
shlb
mov
xchg
test
xchg
imul
scas
movsl
imul
into
ja
jo
bound
ja
insl
pop
inc
xor
std
leave
and
cmp
getsec
mov
insb
mov
jg
jo
mov
pop
inc
iret
jl
clc
xchg
decb
sbb
sti
xchg
int3
sti
pop
mov
repz
das
add
sbb
adc
out
mov
mov
or
cmp
add
ret
adc
and
ret
sub
mov
iret
addr16
lahf
sub
imul
jmp
ds
gs
sub
xor
int3
lods
pop
or
xchg
test
lgs
outsb
or
aas
or
add
xchg
in
mov
pushf
pop
daa
into
faddp
push
imul
mov
inc
cli
out
jo
xchg
pop
bound
aad
jle
mov
pop
add
loop
add
sub
xor
aam
cmp
xchg
lock
inc
adc
adc
mov
incb
cli
mov
sub
xor
mov
xchg
xchg
adc
pop
ficoms
sarb
mov
adc
addb
aas
mov
out
mov
ljmp
xchg
or
lret
xor
iret
cmp
mov
inc
push
fsubr
xor
dec
fcompl
fimuls
lret
sar
cmc
jmp
ret
xor
inc
add
add
rcl
popf
mov
sbb
shll
cmp
push
negb
inc
adc
mov
push
in
fldcw
cmp
daa
adc
into
sub
push
pop
loop
rolb
push
dec
push
xchg
je
add
jl
inc
xor
mov
jmp
inc
mov
jo
les
xor
inc
xlat
mov
repnz
and
adc
movsl
sub
and
push
sub
fldt
divb
aaa
ljmp
fidivrs
cmp
xor
sbb
ja
adc
mov
jmp
push
lds
lahf
xchg
call
adc
mov
and
dec
out
sub
adc
shrb
repnz
mov
cmp
lods
push
sbb
sahf
pop
inc
sbb
push
loop
les
scas
cld
pushf
js
scas
scas
lcall
mov
jp
cmp
adc
test
cli
adc
popa
mov
ss
xchg
repnz
aaa
mov
ja
jb
stos
jp
shrl
lahf
jne
lcall
jl
arpl
ljmp
adc
ret
outsb
pop
js
jp
mov
and
jmp
add
mov
mov
push
xchg
cmp
int
fcmovnb
add
incl
movsl
or
jnp
int3
xor
sub
pop
mov
cmp
bound
jns
jmp
inc
in
imul
inc
mov
add
fdivr
cmp
fcmovb
push
mov
mov
lcall
push
sbb
adc
inc
and
mov
ds
dec
push
cltd
inc
push
xor
and
in
imul
sub
fs
mov
out
das
or
cs
pop
sub
rclb
mov
notb
in
mov
lret
push
pause
enter
jns
gs
push
jge
iret
test
jecxz
pop
movsl
gs
bound
movsl
or
adc
mov
jns
dec
enter
add
mov
lret
stos
pop
dec
mov
xchg
and
sub
test
imul
push
std
popa
push
cmp
mov
xchg
add
push
inc
add
ja
xchg
push
test
test
inc
push
xchg
mov
sar
loopne
sbb
cmp
inc
cltd
inc
ds
shrb
or
cmp
bound
lds
xor
cmp
add
jne
or
xchg
pushf
lods
push
inc
rclb
sub
shlb
or
xchg
lcall
daa
out
lcall
and
xchg
cs
push
jnp
das
inc
out
js
mov
das
dec
das
mov
test
xor
mov
mov
pop
fsubrl
dec
pop
push
xor
out
ss
out
xor
repnz
dec
insb
sub
ljmp
inc
pop
mov
in
cmpsl
sbb
xor
movsl
mov
insb
outsb
out
and
stos
in
and
mov
mov
dec
mov
or
cmpsb
mov
mov
push
add
jno
loop
stos
leave
mov
lret
test
out
inc
add
and
or
xor
pop
fsubl
arpl
mov
popf
and
pop
cmpsb
sub
add
cmp
mov
leave
sub
test
mov
cmp
adcl
leave
dec
arpl
test
jmp
shll
cld
iret
mov
inc
jecxz
xchg
adc
push
mov
jp
and
in
mov
inc
add
mov
jo
call
xchg
add
stos
or
jae
add
or
mov
push
das
ja
xchg
inc
mov
adc
mov
pusha
jno
pop
bound
jge
sub
xchg
add
out
fisttpll
pop
ja
clc
inc
ret
scas
lahf
cmp
cs
mov
and
jnp
jns
jp
push
and
leave
push
dec
add
andl
push
xor
cmp
repz
jb
inc
adcl
in
cmc
call
jle
or
gs
stc
stc
jo
jp
mov
adc
inc
ljmp
xchg
loop
stc
add
clc
in
and
mov
mov
mov
aad
fs
loopne
lds
sbb
orb
fiaddl
jns
outsb
pop
mov
mov
rcrl
sub
jb
outsl
roll
das
xor
and
gs
inc
and
cmp
push
fisubrs
cmp
or
aas
jnp
and
into
js
or
fistps
and
test
clc
ret
lea
mov
and
and
cmp
xchg
mov
and
xor
into
repz
cmpsl
push
fistpl
push
lods
inc
pushf
pop
ret
dec
shrl
enter
cmp
mov
xor
push
sarb
pop
icebp
push
ficoml
sarl
push
fmul
cli
or
lret
and
mov
jb
inc
loop
sub
data16
cmp
je
push
cld
popf
jne
adc
pushl
xorl
push
push
insb
scas
mov
popa
stos
lds
cmp
dec
ljmp
fldl
rcrb
std
repz
adc
xor
out
pop
enter
mov
out
andb
mov
leave
push
jge
push
mov
out
lock
jne
in
cmp
and
pusha
fnsave
dec
push
inc
cltd
add
fxch
sub
push
mov
or
lock
addr16
addb
test
cld
fbstp
in
xlat
mov
aam
notl
sub
add
jbe
push
imul
shlb
add
fbld
ret
jle
lea
pop
inc
and
scas
mov
cmpsb
scas
inc
lods
pop
dec
aas
adc
fwait
xchg
cltd
stc
fisubs
or
cmp
pop
rcr
insb
pop
xlat
aam
pop
pop
loop
xchg
arpl
pushf
dec
test
movsl
scas
imul
stos
ja
mov
lcall
mov
popf
jecxz
mov
xor
and
lds
insb
dec
mov
adc
dec
into
pop
loope
push
in
mov
push
mov
add
ja
and
pop
cmp
fidivrl
mov
fiadds
sbb
mov
xor
jae
les
dec
mov
outsb
fcmovnb
mov
jo
mov
push
dec
enter
jbe
int3
aad
pop
fldenv
int3
mov
inc
pop
loop
out
jo
xchg
cmp
stos
xchg
xor
jae
push
enter
sbb
sbb
jno
divb
mov
inc
addr16
add
sub
pop
jg
mov
test
flds
outsb
jne
xor
adc
push
cmp
sbb
test
jle
dec
sub
pop
xchg
adc
adc
incl
xchg
dec
aam
mov
inc
jb
roll
and
push
fwait
arpl
jae
cmovs
and
lds
in
add
sub
pop
dec
cmp
add
pusha
add
shlb
lret
les
xor
cmp
pop
dec
cwtl
insl
subl
pop
inc
mov
jg
or
scas
inc
clc
jmp
push
jae
sbbb
or
jge
inc
in
rclb
stos
imul
xchg
fistpll
pop
jns
xor
sbb
lds
sbb
jg
ret
cmc
stos
sbbb
xchg
jne
movsb
mov
mov
ds
jge
jnp
mov
adc
jnp
test
lcall
sarl
cmp
mov
add
sub
cmp
out
xchg
icebp
pop
jmp
scas
mov
mov
stos
inc
sub
js
in
push
or
ror
arpl
adc
inc
or
and
inc
xchg
sub
lods
and
sub
and
arpl
push
lcall
mov
sahf
fst
sbb
sbb
fiadds
mov
fidivs
mov
outsb
mov
shll
inc
hlt
jnp
roll
xor
popf
adc
sub
cltd
dec
jl
lds
addr16
inc
scas
int
icebp
xchg
bound
pusha
shlb
int3
ret
add
sbb
imul
sub
int
cmovle
in
adc
dec
xor
cmp
dec
mov
into
xchg
clc
cmc
repnz
popa
test
sbb
xor
pop
repz
xor
mov
ret
adc
scas
push
cs
sub
jo
movswl
cld
incb
add
int3
or
arpl
test
gs
loope
sahf
ja
adc
push
xchg
push
mov
call
decl
scas
pop
adc
xchg
dec
idivb
cmp
sub
popf
xchg
shll
mov
xchg
call
daa
mov
mov
es
dec
pop
or
jbe
enter
movsb
dec
inc
or
call
in
addr16
fdivrs
je
push
push
call
pop
out
or
inc
xchg
sti
add
and
iret
bsf
fsubl
push
lret
cmp
arpl
jle
xor
cmp
mov
shlb
sbb
cmp
push
adc
and
mov
cwtl
pop
mov
je
jo
in
inc
mov
aaa
and
gs
aaa
or
and
and
xchg
imul
ss
sahf
sti
xchg
gs
in
stos
shl
adc
mov
loopne
mov
out
jns
or
push
lock
ret
call
call
cmpb
add
dec
rcl
and
adc
arpl
dec
mov
xor
lar
or
pop
jb
flds
les
xchg
push
inc
jb
mov
inc
inc
clc
lahf
xchg
jmp
inc
xchg
adc
shlb
sub
dec
cmp
clc
lea
lods
sbb
lods
mov
stos
lods
jg
test
pop
sbb
popa
xor
jmp
movq
cmpsl
pop
cmp
insl
jle
leave
inc
jg
call
stos
push
fs
pushf
loopne
cli
aaa
in
dec
xchg
sbb
push
fiadds
pop
test
pop
outsb
ss
loop
adc
ds
repz
inc
push
add
mov
dec
jae
sub
call
or
cli
loopne
pop
mov
mov
out
ljmp
mov
lock
jg
adc
push
inc
ret
cmp
jecxz
lods
sub
and
xor
test
push
mov
out
mov
nop
test
mov
lock
or
xchg
cld
scas
sbb
mov
jb
adc
sbb
mov
push
in
mov
xchg
imul
out
shr
neg
out
pop
inc
dec
adc
or
fadds
mov
cs
outsl
lock
sub
and
in
xchg
lds
and
xor
mov
pcmpgtw
lods
mov
inc
sbb
fdivs
hlt
adc
inc
call
lods
lds
push
push
fwait
int3
and
loop
push
scas
fwait
mov
in
jg
xor
nop
dec
push
mov
push
jge
cli
jp
push
ds
xorb
cmp
iret
pop
mov
iret
pop
mov
dec
test
sti
mov
pop
sbb
popf
mov
mov
dec
out
mov
mov
jle
testl
adc
mov
push
or
mov
push
out
or
out
fcoml
push
icebp
jnp
decl
movsb
mov
lods
lret
scas
ret
lcall
ljmp
imul
loope
imul
dec
andb
push
or
clts
mov
and
arpl
gs
push
pop
icebp
xor
and
inc
adc
aaa
roll
or
aam
xor
dec
in
jae
clc
push
rclb
scas
lret
pop
sbb
pop
mov
in
daa
jmp
or
dec
fbld
fcomi
ficoml
rolb
stos
ret
shlb
out
leave
in
mov
add
sub
stc
mov
pop
insl
shrb
sbb
or
dec
adc
imul
dec
pop
or
push
repz
dec
imul
xchg
rclb
xor
mov
push
cmp
cmpsb
dec
push
mov
mov
notl
push
repz
loopne
mov
ljmp
dec
jle
in
jmp
ja
sub
xchg
xor
js
mov
jmp
sub
pop
je
aad
xor
sub
cmp
lea
xchg
sbb
out
mov
jnp
es
mov
sub
mov
dec
xchg
jns
push
and
test
and
mov
sbb
std
jae
mov
divb
or
jb
popf
lcall
scas
push
imulb
call
es
jle
popf
mov
fs
test
add
xchg
adc
out
lcall
fsubs
xchg
int3
sbb
mov
push
pop
stc
jl
ret
aas
sarb
rcrb
push
cmpsb
mov
testl
test
xor
fwait
je
mov
jb
dec
dec
jmp
inc
rorb
adc
sub
mov
sahf
sub
cmp
push
push
jmp
ret
mov
add
nop
cmc
cmp
add
and
sub
pop
arpl
mov
cmp
js
mov
jno
cmp
js
jl
fnstcw
clc
imul
fs
fstpt
mov
pusha
xchg
push
sub
in
rcrb
jne
ds
or
repnz
cmp
mov
aaa
mov
xor
mov
orl
cwtl
clc
mov
jae
mov
gs
add
iret
js
paddw
adc
pop
lods
inc
imul
sahf
std
jne
outsb
fcmovnb
pusha
inc
sub
adc
test
sub
test
sub
hlt
mov
sbb
or
clc
and
int3
or
ror
repz
jno
fistpll
outsb
sti
mov
pop
mov
push
sbb
out
inc
inc
sub
mov
test
call
xor
mov
and
lods
inc
lds
data16
xor
xchg
or
sbb
xor
sub
test
mov
hlt
out
dec
dec
mov
mov
outsb
call
loopne
movsb
js
in
pop
into
and
ljmp
shlb
mov
or
clc
add
cmc
xchg
push
inc
xor
lods
and
push
dec
xchg
jne
pushl
pop
sbb
cs
repnz
in
mov
inc
sub
jge
movsl
in
daa
cli
jb
push
dec
nop
cmpsl
scas
aam
mov
lret
lcall
jl
and
mov
fsts
dec
mov
test
jbe
test
out
stos
add
adc
mov
cwtl
lods
cmc
mov
cmpl
push
lds
lds
mov
push
popa
fwait
mov
dec
lea
outsb
incl
cmp
shr
jb
adc
cmc
loop
popf
cld
jne
push
cli
outsb
loopne
daa
xor
jg
adc
mov
inc
xor
shrl
test
jbe
fldenv
lock
popa
in
push
jg
out
cli
mov
int3
push
iret
jp
add
sbb
lcall
dec
mov
scas
pop
hlt
xchg
imul
rcr
add
fisubl
pop
jbe
mov
arpl
dec
popf
dec
stos
out
es
fdivr
sbb
sbb
aaa
xchg
arpl
sub
add
into
les
xchg
jecxz
testb
popf
xorl
shll
sub
ret
or
inc
pop
push
icebp
out
mov
jl
adc
fs
mov
or
jg
in
test
inc
movsb
dec
xchg
je
leave
sahf
and
shrb
add
adc
sbb
sub
xor
sti
insb
arpl
lods
gs
jbe
sub
pop
mov
dec
jns
jne
xorb
hlt
lods
jge
push
ljmp
and
adc
mov
cmp
mov
das
jae
xchg
mov
mov
sahf
dec
lret
test
daa
sub
xchg
fistps
das
push
out
into
cmp
pushf
icebp
push
into
dec
and
or
adc
or
jecxz
xor
loopne
adc
jne
hlt
rcll
cltd
ret
sbb
arpl
pop
out
mul
jnp
add
push
mov
jns
lahf
test
cmp
cmpb
and
js
fdivrl
cmp
inc
adc
cs
cmpsb
ja
mov
daa
sbb
and
xor
rclb
push
add
mov
scas
add
fwait
add
cli
jnp
cwtl
and
movsl
xchg
push
xchg
mov
fadd
cmp
fstps
ficoml
fisttpl
mov
xlat
mov
xor
inc
mov
sbb
inc
sub
mov
gs
cmc
pop
mov
mov
shll
sarl
mov
in
adc
dec
xchg
dec
cmpsl
fisubs
lahf
lods
jne
cmp
push
inc
inc
ret
pop
jns
push
sbb
and
or
mov
sbb
xchg
or
js
scas
into
jno
sahf
or
mov
pushf
jno,pt
and
imul
test
flds
fisttpll
cwtl
adc
jg
daa
mov
push
jnp
or
int
pop
outsl
fcmovne
push
mov
mov
mov
lds
jge
jecxz
pushl
add
push
mov
stos
je
xchg
push
sbb
mov
jp
dec
ret
imulb
push
cmc
push
jne
adc
sti
push
cs
adc
jnp
das
and
fidivs
in
pop
cwtl
inc
insb
xchg
stos
sub
jecxz
testb
cltd
icebp
aam
mov
mov
aas
xchg
movsb
xchg
and
jae
and
enter
das
ss
sti
pusha
pop
fldt
dec
inc
add
insb
mov
push
and
lret
addl
mulb
rorb
xchg
or
pusha
fdivs
mov
mov
test
jns
mov
push
adcb
aad
movsb
popa
jle
adc
push
push
jbe
lret
mov
movsl
mov
inc
inc
cltd
es
add
cmp
add
test
in
xor
dec
mov
xchg
adc
inc
inc
aam
mov
nop
and
jecxz
jae
xchg
push
sub
sbb
mov
icebp
jb
jne
push
fucomi
dec
cmpsb
rcll
xlat
loopne
insb
mov
jnp
out
lea
cmpsb
xchg
inc
std
cli
outsb
push
cmpsl
repnz
xchg
imul
cs
xchg
inc
repz
insl
inc
jno
mov
in
lods
daa
or
pop
and
sub
bound
dec
out
pop
jmp
leave
lahf
push
test
mov
push
leave
addr16
jnp
sbb
int3
xor
jmp
test
loopne
iret
aam
jno
insb
enter
mov
in
jb
in
int
mov
out
pusha
mov
sub
cmpsl
mov
mov
aam
sub
lret
cmp
in
sub
xor
and
out
cmp
pop
sbb
in
push
addl
cmc
mov
arpl
sbb
shl
dec
fwait
adc
scas
sub
out
fimuls
stc
fwait
lea
mov
orl
nop
inc
cwtl
fdivrs
sub
xchg
mov
lock
add
sbb
jle
cs
ret
imul
jmp
ss
outsl
jge
scas
fldcw
mov
adc
in
fisttpll
imul
out
aam
inc
jbe
pop
shrb
loop
lods
jge
mov
xor
pushf
aam
xor
lret
mov
icebp
sub
sahf
sbb
or
sbb
in
ficompl
aam
fwait
mov
inc
into
jns
xchg
ljmp
jno
test
scas
xlat
arpl
gs
mov
cmp
ret
movl
pop
test
pop
out
sub
aas
in
into
and
jg
lahf
outsl
jno
inc
mov
push
push
cmpsb
addr16
ret
imul
mov
or
xchg
ret
ds
cwtl
or
popf
add
movsl
addr16
adc
lahf
jb
daa
sbb
dec
jo
sub
cmp
frstor
push
repz
jae
nop
dec
dec
mov
loope
push
loope
shlb
dec
cmp
pop
repz
cmp
pop
movsb
shll
loopne
fisubl
jae
jb
inc
sti
inc
xor
dec
sub
sub
shr
pop
orl
and
push
popa
pop
xchg
popf
sub
je
pop
lock
pop
out
mov
ficoms
sub
sbb
push
gs
scas
pushf
clc
dec
mov
nop
and
push
stc
fwait
sbb
xchg
push
aaa
or
ret
shlb
xchg
enter
repnz
mov
jecxz
mov
inc
sub
dec
fldenv
mov
icebp
mov
cli
scas
outsl
subl
dec
add
mov
sub
push
int
add
push
lock
cmp
jecxz
jl
es
jle
mov
cmp
dec
or
stc
andb
ret
mov
add
popf
push
and
add
jnp
xchg
pop
push
decb
loop
cltd
and
add
add
scas
mov
fisttpl
das
shrb
jp
dec
lahf
ljmp
dec
cmp
movsb
les
sarl
loope
adc
movsl
push
ds
int3
fcoms
mov
push
xor
fwait
push
jno
xchg
dec
pop
mov
and
sbb
lahf
shll
jp
ret
push
in
sbb
pop
in
xor
xor
repz
out
inc
jno
push
or
aad
jp
add
loope
jbe
adc
aas
push
movsl
inc
jno
and
in
lcall
add
ja
call
mov
adc
xor
mov
shll
sub
test
and
in
inc
sti
aad
nop
out
adc
cmpsb
test
sti
jmp
dec
push
mov
cmp
inc
in
loopne
mov
xor
data16
or
shl
aas
aam
pop
or
xchg
repnz
sbb
enter
cmp
shll
roll
fcomps
mov
xor
addl
out
pusha
inc
mov
lret
cmp
fbstp
pushf
inc
cld
lcall
xlat
int
loopne
mov
xchg
sbbl
dec
push
xlat
addb
pop
dec
and
movsb
in
pushf
xacquire
lahf
lods
and
mov
add
out
insb
sbb
adc
cmpsb
cmpsb
or
into
aam
jae
call
lods
test
fbld
mov
sarb
clc
inc
push
mov
dec
or
test
or
mov
movsl
pop
push
mov
xor
jo
shr
sbb
addb
gs
inc
inc
daa
out
das
mov
addr16
pusha
je
hlt
and
push
inc
inc
xor
mov
aad
push
bound
inc
dec
fisttps
mov
add
adcb
push
push
xchg
movsb
sub
in
outsl
outsl
mov
xchg
sub
rolb
imul
sahf
mov
xchg
lret
popf
ja
mov
out
imul
pop
int
dec
addr16
inc
sub
lahf
xchg
xchg
faddp
xchg
mov
fimull
ficoms
pushf
fwait
js
sub
pop
cmp
sub
shrb
push
add
lods
rcrl
sarb
popf
inc
out
pop
and
cmp
push
jmp
outsl
lahf
jl
mov
scas
and
dec
aam
nop
add
push
movsl
pop
jg
xchg
xchg
or
popf
adc
test
test
in
shlb
lahf
mov
pop
stos
mov
jg
inc
addl
aad
or
cmp
adc
scas
jl
xlat
xchg
in
nop
test
xchg
xchg
call
and
sub
sub
xchg
aas
jmp
imul
dec
fnsetpm(287
add
push
addr16
clc
adc
subl
fdivl
mov
mov
jmp
aam
nop
lret
add
leave
fsubr
dec
add
pop
rclb
faddl
add
jl
lea
test
push
push
daa
xor
into
push
fidivs
cmpsb
push
mov
inc
and
ret
push
aas
mov
mov
pushw
and
rcrb
xchg
fwait
lds
push
ds
or
test
loop
sub
fstp
pop
std
jl
dec
test
jle
fldt
mov
mov
mov
fsubs
add
inc
xor
cmp
pop
fldenv
int3
arpl
push
pop
add
push
scas
iret
and
mov
push
adc
or
xchg
jg
js
cmp
cmp
mov
jae
push
fs
int3
jmp
mov
sarl
outsb
out
sbb
add
dec
aam
jo
dec
jbe
pop
and
jmp
xchg
pusha
and
pop
mov
mov
and
push
ret
add
jp
insb
mov
int3
in
idiv
adc
cmp
ljmp
jbe
mov
dec
lock
addr16
mov
es
sahf
mov
outsl
gs
push
neg
mov
push
pop
mov
dec
cmp
lahf
add
jmp
data16
ja
push
loopne
ret
aad
imul
mov
cmp
jecxz
push
mov
pop
inc
in
lret
cmp
lahf
xrelease
inc
sub
and
pop
inc
pop
popa
cwtl
jmp
xor
imul
cmpsl
or
push
hlt
add
std
dec
xchg
sub
inc
jb
divb
sbb
adc
adc
jg
xor
add
adc
scas
add
gs
mov
fwait
nop
dec
jne
inc
fucomi
pushf
xchg
daa
push
sub
test
lea
int
mov
cmp
mov
fs
mov
mov
sbb
sub
pop
pop
or
not
repnz
test
lahf
mov
push
inc
imul
dec
fnsave
and
out
mov
inc
hlt
in
adc
pop
out
push
xchg
mov
in
mov
inc
jb
clc
insb
mov
inc
fst
mov
mov
inc
mov
sbbb
sub
cmp
lods
dec
xor
sti
push
sub
dec
dec
adc
push
clc
sub
popl
and
jo
push
ljmp
pop
cld
jmp
mov
or
mov
push
inc
pop
neg
sub
lret
scas
cs
dec
mov
mov
jnp
mov
xor
lods
mov
xchg
pop
jecxz
add
sub
in
and
or
mov
jle
fildl
dec
mov
xor
dec
jno
adc
rcrb
and
push
xchg
cmp
lea
adc
fisubl
fwait
mov
loop
clc
or
imul
scas
and
mov
addr16
lods
dec
pop
mov
addr16
fmulp
jno
cld
mov
inc
out
les
cld
lods
dec
ljmp
and
daa
jno
and
push
cmp
std
inc
mov
test
mov
or
shr
add
sbb
push
clc
addr16
or
dec
push
test
cs
mov
mov
in
pushf
mov
je
fldcw
fidivs
push
xchg
movsb
sbb
std
les
push
xchg
repz
add
pop
xor
mov
bound
mov
gs
cmp
iret
insl
test
mov
int
lret
mov
inc
jl
lds
xor
cmpsb
pop
cwtl
sbb
jg
js
negb
notl
cmpsl
es
iret
sahf
push
popa
loop
adc
cs
add
cmp
mov
mov
stos
mov
ljmp
push
push
jg
or
dec
push
sbb
push
lods
fnstenv
dec
add
sub
push
repnz
and
stc
outsl
cltd
jnp
sbb
adc
cmc
sarb
loop
fmuls
popa
mov
aad
pop
testl
mov
stos
out
pop
inc
bound
jae
loop
icebp
fmuls
mov
xor
filds
mov
pop
mov
negb
out
mov
clc
push
loope
or
in
mov
cmp
data16
push
aad
test
adc
je
mov
push
jp
mov
pop
sbb
sar
shl
aad
mov
or
out
nop
mov
mov
je
insb
addb
cmp
xor
addr16
sub
or
mov
add
adc
xchg
rcl
stc
loopne
xchg
cmp
fbstp
cs
sub
xchg
popa
sbbb
sub
outsl
push
repnz
je
mov
dec
and
jne
int3
sbbb
cmpsl
xchg
mov
mov
inc
pop
sub
arpl
jo
test
neg
lods
mov
aas
dec
je
loop
mov
rol
pushf
push
cmc
cmp
sub
lods
js
jp
arpl
xchg
sbb
fildll
jle
clc
cwtl
testb
cmp
bnd
pop
sbb
or
cmp
mov
sbb
call
xor
dec
pop
and
loop
rcrl
xchg
mov
push
jns
hlt
inc
fmuls
in
xchg
lods
jno
div
dec
mov
mov
shr
insl
pop
cli
das
gs
sub
fsubr
mov
mov
test
mov
xor
xchg
adc
int
stos
mov
dec
outsl
pop
sbb
mov
enter
mov
insb
loope
and
ret
adc
loope
mov
add
bound
hlt
repz
dec
xchg
sbb
push
push
imul
mov
lret
inc
fsub
mov
xorl
movsb
rcrb
jl
cmp
push
cmp
mov
jae
pop
or
push
sbb
fistpll
dec
xchg
mov
iret
dec
adc
je
in
pop
xor
cltd
mov
dec
pop
pop
or
and
lret
jae
testb
daa
mov
inc
inc
mov
push
xchg
push
out
clc
mov
cmpsb
loope
push
mov
and
lea
inc
adc
in
mov
dec
into
xor
orb
fsub
push
inc
lret
call
les
shl
sbb
xchg
or
shlb
push
fnsave
add
in
jo
mov
dec
dec
das
arpl
ljmp
decb
inc
das
sarl
imull
outsl
mull
push
stc
mov
add
loopne
sub
add
into
outsb
psubusb
in
test
cmp
je
fcoml
lcall
mull
call
lods
sbb
daa
and
lcall
mov
cwtl
call
xchg
mov
outsl
lds
add
nop
jg
dec
es
rcrl
outsb
mov
cmp
aad
rol
fucom
out
mov
pop
cmpsl
sahf
stos
xchg
xor
fldt
icebp
lcall
xchg
cmp
leave
je
xor
pmulhuw
inc
mov
mov
mov
push
adc
mov
arpl
mov
stos
jns
popf
cmp
imul
cs
repnz
or
cld
pop
jmp
xor
sbb
cld
push
loop
imul
xor
popf
xchg
adc
fsubl
outsl
mov
push
popa
stos
jmp
sbb
scas
mov
mov
cmp
imul
sti
jns
stc
push
push
mov
js
push
jb
out
fdivp
rcr
push
push
movsw
aad
adc
pop
js
lds
ds
fistpl
fsubrs
xlat
stos
or
lods
lea
outsl
mov
mov
sahf
mov
mov
sbb
ret
mov
negb
loop
mov
and
lret
nop
cmp
es
aas
clc
mov
adc
out
aam
das
mov
insb
jne
xor
cmp
sahf
xchg
cmc
mov
or
add
outsl
fnstenvs
and
pop
xchg
adc
mov
dec
xor
in
cltd
je
fnstenv
popa
push
scas
out
inc
enter
push
aaa
ja
adc
adc
pop
add
sahf
cmpsb
and
sahf
test
idivb
pusha
xor
and
leave
ret
pop
mov
mov
mov
imul
push
test
mov
and
arpl
and
fwait
stc
push
cmp
rclb
mov
dec
add
lret
imulb
mov
call
cmpsb
loopne
std
test
pusha
clc
fwait
inc
mov
xor
xor
stos
andl
cmpsb
arpl
cli
inc
inc
and
mov
clc
fimuls
sarl
arpl
pop
jae
lret
inc
and
lahf
adc
lahf
push
mov
sbb
mov
in
push
repnz
fld
jmp
mov
in
adc
dec
clc
mov
jns
imul
xchg
push
movsl
xchg
or
jmp
cmp
js
gs
jecxz
push
fwait
cmp
jns
loopne
call
rcrb
mov
dec
dec
xchg
dec
mov
nop
imul
das
cmpsb
into
pop
mov
xor
std
inc
sub
sbb
cmc
inc
adc
insb
outsb
mov
push
mov
lcall
mov
pushf
movsl
aad
into
dec
pop
stos
pop
dec
movsb
clc
and
or
addr16
xor
imul
je
sub
cmp
dec
dec
call
jge
hlt
loopne
jp
push
insl
mov
xor
fwait
sub
rcll
dec
aas
das
stc
insl
mov
stc
fldenv
pushf
adc
add
insl
push
test
psubsw
movsl
jl
sbb
sub
adc
sbb
fstpt
push
and
insl
xchg
sarl
mov
pop
add
into
subl
jge
ret
out
push
cmp
fmulp
sahf
or
mov
call
mov
test
adc
push
jbe
sysexit
aaa
aaa
repz
into
dec
xor
shll
xor
aaa
xor
and
fdivs
fwait
out
xchg
jmp
and
hlt
inc
jmp
jbe
xor
ja
pcmpgtw
xor
dec
ficoms
test
sub
mov
pushf
out
mov
or
mov
xchg
mov
xchg
test
jl
and
dec
dec
pop
xchg
scas
mov
loope
jae
mov
js
shll
push
pop
add
mov
in
lods
jbe
mov
xor
int3
jbe
push
mov
clc
rcrl
insb
xor
pop
sti
mov
movsb
dec
push
subl
jbe
mov
pop
gs
mov
cli
push
lahf
cwtl
setae
fdivl
filds
xchg
xor
cmp
mov
jg
into
stos
cld
in
popl
xchg
and
lock
shrb
push
sbb
pop
xchg
dec
or
or
or
std
ljmp
std
mov
inc
xchg
dec
in
fmuls
mov
idivl
xchg
jne
loopne
xchg
lahf
test
ss
imul
fs
mov
repz
iret
mov
cmp
inc
and
in
fwait
shl
pop
pop
pop
scas
dec
scas
mov
test
jne
xor
lret
fidivs
lahf
jae
inc
inc
sub
mov
fildl
js
daa
and
adc
dec
inc
lret
xor
ds
mov
divb
popf
movsb
pop
push
ficompl
push
gs
or
mov
pop
inc
andl
clc
cmpsl
mov
mov
ror
stos
cmp
cmp
dec
jge
pusha
leave
mov
out
rolb
inc
fimull
mov
mov
adc
and
les
mov
es
xor
imul
pop
jo
inc
adc
push
jmp
fmull
or
call
mov
movsb
lods
jp
cld
sbb
jp
add
mov
mov
aam
pop
mov
mov
mov
shr
push
adc
inc
dec
mov
dec
leave
mov
cs
mov
enter
xchg
or
dec
dec
jp
iret
into
aad
jecxz
fiaddl
repz
imul
add
or
pop
lret
inc
adc
xor
jecxz
xlat
xchg
push
mov
sahf
jnp,pt
add
js
jne
mov
sub
lret
icebp
xor
outsb
mov
mov
jno
shr
int3
xchg
inc
cwtl
lea
add
in
jbe
lret
jp
imul
popa
mov
stc
je
lret
push
jecxz
push
shll
inc
sbbb
mov
fwait
push
fildl
mov
out
in
mov
cwtl
test
into
xchg
dec
jecxz
jnp
xchg
inc
nop
push
add
mov
dec
xchg
add
insb
incb
xchg
mov
nop
adc
xlat
andl
xorps
icebp
scas
punpckldq
stos
loope
dec
lahf
fisttps
sti
xchg
frstor
int3
dec
lods
lret
mov
jno
xchg
adc
mov
dec
or
insl
ss
xchg
cmpsl
inc
ficoms
lea
inc
mov
mov
mov
fildl
rolb
xor
push
inc
adc
xlat
sbb
push
nop
cmp
rorb
xchg
push
push
pop
sub
aam
mov
xor
xchg
les
shrb
pop
xchg
fidivs
lahf
mov
adc
in
out
mov
mov
out
jae
mov
dec
inc
jnp
lods
xchg
sub
add
pop
push
xlat
fistpl
idivb
jg
mov
jnp
sub
cmp
bound
dec
fiadds
adc
cmpsb
mov
mov
std
add
xlat
das
add
shll
in
sub
movsb
dec
sub
lods
and
mov
xchg
jp
cmp
push
jl
mov
mov
add
and
int
hlt
in
into
push
jo
int
inc
ljmp
inc
scas
ss
mov
frstor
jo
cmp
fwait
add
out
or
div
inc
mov
mov
mov
data16
faddl
sub
int
mov
pop
sub
loopne
movsb
lahf
push
insb
mov
pop
daa
mov
sarl
mov
call
push
push
push
cld
aad
js
jae
pop
add
loope
mov
inc
popf
dec
stos
xchg
cltd
mov
loopne
inc
add
add
insb
mov
imul
movsl
pop
lcall
iret
and
xchg
js
and
sub
into
push
lods
fisttpll
arpl
pop
lret
pop
sbb
mov
hlt
push
mov
dec
add
dec
push
out
sbb
xchg
inc
std
push
lahf
icebp
xchg
xchg
push
mov
sbb
jno
ljmp
push
adc
into
inc
jb
stc
sahf
cmp
xor
jno
sub
xorb
pop
stos
movsl
insl
jb
inc
adc
push
adcb
enter
xchg
in
jb
int3
das
mov
ljmp
loop
mov
mov
lods
fcomps
sub
xchg
push
mov
mov
mov
push
xchg
xchg
setbe
cmp
movsb
adc
popa
faddl
cltd
in
outsb
mov
into
xchg
ds
int
xchg
bound
bound
mov
pop
std
sub
sub
out
cmp
jle
leave
xchg
add
push
pop
pushf
jae
pop
lret
lock
xchg
mov
loope
sub
rorl
or
es
or
jle
fsubr
cmp
adc
jbe
fucomp
nop
cld
push
xorb
xor
adc
clc
call
inc
std
xchg
imul
inc
sub
mov
sbb
add
adc
cmc
mov
cld
cmp
mov
mov
aam
pushf
adc
test
mov
adc
test
daa
add
fists
dec
into
scas
cltd
push
ss
repz
and
outsb
jnp
lret
cmp
dec
inc
mov
lds
sbb
xchg
pop
js
test
rcl
mov
clc
jmp
inc
inc
popf
xchg
xchg
lahf
xchg
testb
pop
inc
test
jae
cmp
xor
sti
mov
rclb
leave
jns
ljmp
pop
jecxz
mov
or
push
int
pop
inc
js
jae
inc
inc
mov
mov
sbb
cmpsl
clc
push
ret
rol
lahf
clc
fdivrl
test
mov
dec
mov
gs
or
inc
popa
nop
inc
sti
loop
sub
mov
pop
dec
jae
and
fadd
leave
ljmp
aad
testl
stos
inc
mov
xor
icebp
xchg
test
jns
or
hlt
popa
sbb
fcoml
arpl
in
out
push
pop
push
push
dec
js
movsl
scas
xor
pop
lret
lods
jecxz
sub
pop
dec
imul
or
mov
or
ds
cmp
push
shll
jnp
dec
jmp
mov
dec
insb
shr
sbb
jge
and
xor
icebp
test
ljmp
mov
lahf
xchg
pop
orl
dec
sub
mov
cltd
aaa
fdivs
inc
rcrl
xchg
sahf
adc
cmp
scas
scas
lcall
add
jle
mov
js
lcall
js,pn
mov
stos
jo
push
invd
add
sub
mov
pop
mov
out
daa
xor
lods
jg
pop
mov
xor
ljmp
shrl
push
mov
movsb
inc
lods
fwait
sbb
es
jae
mov
hlt
loop
clc
test
test
jno
xchg
push
jb
into
out
jl
fs
test
mov
out
sbb
xchg
pusha
push
iret
push
or
insl
enter
xchg
cmp
nop
mov
jbe
xchg
test
dec
sub
sbb
loop
adc
iret
mov
jne
sbb
jl
mov
mull
push
idivb
or
xor
ds
nop
sub
lahf
pop
xlat
popa
sbb
mov
ljmp
mov
fnsave
loopne
in
pop
xchg
cmp
into
fwait
cwtl
repz
push
cmpsl
les
in
mov
sti
inc
sub
js
pop
daa
pop
call
jnp
into
lret
pop
das
adc
cmpsl
dec
pop
pop
call
mov
jge
pop
lret
enter
add
cld
lahf
or
andb
push
std
dec
je
je
mov
fucomip
mov
mov
mov
repz
mov
pop
push
js
adc
add
inc
pop
cmp
movsl
or
or
ret
ljmp
inc
push
lods
fwait
in
mov
xchg
ror
or
mov
mov
popf
and
dec
cmc
addl
outsl
mov
pop
test
pop
dec
push
sti
or
aaa
out
dec
dec
out
pop
sub
mov
mul
mov
xchg
pop
pop
fdivrs
push
insb
cmp
mov
popa
ljmp
test
mov
push
add
mov
adc
xor
cltd
pop
xchg
imull
mov
add
shll
jbe
jecxz
lods
mov
sbb
inc
orl
dec
push
js
jae
dec
and
pop
in
ss
mov
aaa
fnstsw
lods
cmc
dec
loopne
icebp
sbb
stos
fimuls
mov
mov
jb
out
cld
sub
into
loop
push
adc
sbb
std
cmp
lock
lods
jne
cmp
sbb
jb
and
ja
ret
sbb
mov
or
push
fstl
popa
xchg
popa
pop
orl
loop
stos
in
xchg
stos
test
ljmp
lret
ljmp
mov
mov
das
inc
push
mov
xor
pop
in
ret
cmp
mov
in
mov
andl
mov
push
rclb
fsubr
cmp
sbb
lock
nop
or
hlt
pop
shll
pop
pop
repnz
cmp
daa
add
data16
es
aaa
adc
clc
mov
mov
push
add
or
dec
out
sub
xchg
push
or
ljmp
mov
pop
inc
jne
jno
addl
loopne
xor
cmp
cmp
cmp
xchg
sbb
pop
insl
sbb
je
mov
lret
sbb
xor
andl
adc
aas
mov
scas
mov
lds
mov
and
bound
ja
push
inc
xor
ss
cmpsl
ret
sub
test
xchg
inc
arpl
fsts
and
in
jo
mov
fsts
push
out
fwait
push
inc
sbb
add
scas
sbb
adc
addb
iret
pop
xchg
int
mov
jb
scas
lods
int3
xlat
rol
ja
fmull
push
rep
and
loop
cmpsl
arpl
insb
adc
and
push
jbe
lods
test
lods
clc
sbb
jo
pop
mov
inc
inc
sub
scas
cli
sub
aam
mov
push
repz
popf
xor
ss
mov
outsl
cmc
fmull
cmp
ficompl
jo
inc
loopne
xchg
imul
test
inc
xchg
cmp
push
repnz
cmp
inc
add
dec
imul
dec
subb
out
lods
test
inc
push
jb
pop
outsl
push
jmp
cmp
dec
shl
push
cmp
push
mov
bswap
into
repz
mov
mov
repz
cld
mov
xor
mov
enter
mov
add
outsl
roll
sbb
mov
mul
sarl
test
divl
dec
cli
or
fwait
popf
int3
jb
mov
inc
aam
inc
or
lea
mov
adc
adcb
xchg
insl
pop
subl
pop
inc
inc
inc
dec
test
xor
mov
adc
fisubrl
sti
lret
mov
dec
push
mov
adc
movsl
loop
sti
mov
fsubs
das
mov
decb
int
loop
dec
dec
mov
imul
cwtl
into
insl
lods
and
dec
jae
dec
pop
outsb
mov
jmp
fiaddl
adc
test
sub
addr16
push
fs
add
ja
add
fs
mov
in
lret
jecxz
negl
jmp
imul
lahf
rcl
in
jbe
scas
xchg
call
pop
sub
mov
enter
fsubs
mov
fisubrl
sbb
loop
loop
fcmovb
insb
dec
mov
add
gs
push
cmpsb
push
out
std
push
adc
push
lcall
sub
or
lret
dec
inc
mov
pop
loopne
sarb
sbb
aas
cmp
movsb
mov
mov
fldt
mov
cmpsb
xchg
divb
jecxz
xchg
push
mov
or
xchg
or
lods
lret
aaa
jbe
fldenv
sbb
xor
cmp
push
lahf
jl
es
fmull
fwait
jnp
adc
jb
cmp
pop
stos
xchg
std
fildll
mov
jne
ja
push
sub
push
imul
cmp
arpl
pusha
ljmp
jbe
add
mov
xor
xchg
pop
jb
popf
fsubrl
div
outsl
push
pop
fwait
loopne
mov
movsb
mov
add
and
jbe
adc
add
insl
adc
sub
cli
sub
lds
sahf
aas
in
jno
push
daa
xor
lahf
mov
jle
inc
lahf
in
push
sbbb
imul
pop
into
je
or
push
cmpsb
sbb
lret
insb
xchg
fcomps
push
xchg
xchg
push
add
lods
daa
es
pusha
mov
push
mov
outsl
lock
dec
xchg
jl
push
scas
pushf
mov
jb
aas
dec
jne
out
or
mov
cltd
jno
addl
dec
jns
pushl
jne
je
mov
or
sub
lcall
and
push
pushl
stc
cmp
popf
aad
pop
test
adc
aad
data16
pop
fidivs
push
pop
xor
pop
jnp
fildll
inc
das
std
imul
sarb
jmp
js
lcall
xor
xor
add
stos
aaa
test
jns
add
jmp
push
cmp
jecxz
orb
mov
aad
rorb
xor
add
and
push
stos
pop
xchg
mov
leave
shll
inc
lea
int
mov
pop
xor
test
pop
out
mov
lods
mov
pop
mov
sub
mov
mov
sub
lods
out
and
push
daa
fsts
inc
repnz
jno
pop
sbb
shlb
testl
stos
shrl
dec
cmp
and
mov
adcb
lret
daa
sbb
and
mov
fnsave
leave
and
call
dec
jle
sbb
xor
mov
loopne
cwtl
pop
and
lret
sub
and
sbb
cwtl
into
mov
repnz
mov
sbbl
cwtl
cmpsl
in
stc
loope
xor
cmp
nop
inc
xchg
cmp
xlat
and
orl
repnz
adc
xchg
insb
bound
dec
jae
sbbb
push
pop
sbb
mov
xor
jl
jb
xchg
sub
not
dec
es
xor
jnp
cld
xor
rcl
or
sub
or
ja
pushf
scas
mov
lcall
mov
movsl
xchg
adc
dec
clc
gs
rcrb
mov
es
xor
insl
in
aad
shlb
popf
sbb
mov
dec
fcmovnbe
pusha
hlt
shr
mov
loop
inc
push
je
pusha
cmp
lea
outsb
std
mov
rcll
lock
pop
dec
adc
sbb
into
jmp
fisubrl
aaa
mov
sbb
shrb
test
popa
clc
enter
rcll
pop
lds
dec
xchg
adc
xor
lret
add
push
xor
mov
repz
and
popf
add
rcrb
fs
jae
jae
jno
dec
data16
jecxz
popf
mov
test
or
or
mov
ss
stc
stc
cwtl
inc
xchg
cli
lock
test
inc
cmp
mov
aam
cwtl
sarb
jmp
inc
cmpsl
dec
adc
mov
adc
inc
or
mov
shll
mov
jnp
ja
dec
pop
lret
pop
lock
push
test
stos
data16
xchg
cli
xchg
xor
into
adcb
jg
out
insl
or
pushf
fwait
out
mov
testb
sbb
sub
pop
lds
icebp
and
clc
mov
xchg
ret
mov
mov
pop
cs
lea
inc
andb
jmp
xchg
mov
mov
mov
mov
insb
cmc
cmp
xorb
shll
cmpsl
mov
xlat
or
fs
test
sub
decb
inc
mov
mov
daa
mov
movsb
aam
cld
cli
in
pop
sti
lds
push
divb
lods
lods
adc
leave
adc
jle
xchg
pop
add
cmp
jo
sbb
fwait
pop
push
fistpll
add
andb
pop
jmp
add
les
dec
testl
les
out
pop
dec
jp
xchg
les
popa
aam
bound
cmpb
jecxz
sub
repz
dec
fnstcw
and
addl
and
pop
inc
int
add
bound
outsb
scas
sbb
mov
jo
fdivrs
mov
in
out
push
out
mov
test
je
mov
inc
subb
or
pop
inc
push
mov
or
movsl
loopne
mov
xor
mov
inc
sub
test
cmp
sbb
add
mov
loopne
or
insl
shl
stc
inc
inc
or
mov
xchg
lret
jae
xchg
out
xchg
adc
mov
push
or
test
dec
mov
xor
jno
dec
pop
mov
sub
je
cs
inc
outsl
ljmp
shl
sub
pushf
ret
pop
hlt
test
cwtl
insl
sbb
lea
leave
outsl
add
sahf
dec
cmp
cmp
mov
es
pop
mov
call
add
push
ljmp
dec
lods
repz
dec
out
cld
rcrl
mov
sbb
sbbb
cli
fdiv
mov
repnz
cmp
mov
data16
ss
scas
mov
test
dec
loop
jne
cmp
outsb
mov
out
fidivs
xchg
lcall
cmpsl
mov
mov
sahf
shl
fcompl
ss
gs
call
jbe
adc
push
or
aas
loope
jp
sbb
adc
cmpsb
in
and
es
xor
xor
rcrb
xchg
dec
jnp
pop
aas
mov
stos
pop
or
lods
outsb
mov
xchg
jecxz
push
add
mov
fimuls
lods
jg
jbe
enter
adc
cmc
mov
mov
leave
push
mov
xor
push
sahf
mov
roll
and
mov
sti
dec
mov
imul
push
cltd
rolb
outsb
dec
cmpsl
mov
pusha
mov
imul
push
push
mov
icebp
ljmp
mov
xor
ret
add
in
inc
sub
dec
push
ret
pop
ficomps
fmuls
mov
int3
pop
ficoms
sub
pop
mov
test
push
aas
aad
ret
or
mov
cmpsl
mov
dec
notl
push
scas
test
andb
or
and
xchg
cltd
repz
call
fisubs
mov
lds
jns
popf
ja
sbb
les
fdivs
inc
rol
jle
aaa
xchg
sub
xorb
pop
push
insl
add
js
cli
xor
mov
out
fsts
cmp
and
push
jp
add
cmp
inc
loop
add
dec
mov
xchg
mov
in
clc
mov
test
jg
test
jecxz
dec
ljmp
fidivrl
hlt
out
cmpsl
add
ljmp
test
fdivrs
xchg
inc
and
push
sub
stos
pop
and
jecxz
aas
lds
cltd
push
add
mov
aas
cmp
cld
das
xor
lahf
dec
sahf
iret
stos
xchg
add
cmp
inc
test
fldt
and
data16
xor
push
ds
aad
jnp
fmul
sahf
fs
pop
xlat
hlt
or
mov
std
add
in
aas
fildl
xchg
bound
dec
popa
mov
scas
pop
jns
das
lods
dec
add
and
sub
loop
push
popa
pop
sbb
cmc
push
mov
into
sahf
mov
cwtl
sub
ljmp
lea
out
addr16
testb
popf
lea
ret
adc
addr16
inc
mov
mov
jmp
adc
ja
mov
sbb
jo
bnd
in
repnz
out
les
push
sar
jg
dec
sub
shlb
sbb
push
incb
xor
mov
sbb
mov
aaa
negb
fbld
rcll
jl
mov
insl
and
pop
jbe
push
adc
scas
push
cmp
and
das
cs
and
inc
mov
leave
push
sbb
fmull
jp
or
push
cmpb
lods
imul
lock
repz
inc
sub
sub
hlt
ud1
outsb
add
mov
pop
aad
cmp
sub
jge
cmpsl
cld
adcl
inc
lods
mov
jmp
sti
mov
popa
mov
int3
mov
sbb
jge
mov
xchg
xchg
fsts
adc
aad
or
sbb
adc
inc
adc
pop
and
xorb
jne
adc
inc
repz
xchg
int3
dec
pop
testb
iret
adc
jne
xchg
dec
aad
sub
sbb
gs
pusha
lds
in
pop
mov
cwtl
sbb
stos
lcall
shrl
enter
add
ds
bound
outsl
add
and
dec
jg
pop
cmp
adc
icebp
mov
ljmp
mov
xor
add
mov
inc
jecxz
test
or
ja
lods
xchg
lcall
cld
lds
pop
mov
xor
imul
adc
xor
mov
pop
add
adc
sub
loopne
roll
cltd
pop
rcrl
xor
pop
sub
jl
sub
loope
sbb
ljmp
or
dec
inc
scas
or
mov
mov
ds
movsl
cmp
sub
jmp
sub
mov
sub
push
insl
jp
js
sub
loop
mov
pop
test
push
or
imulb
xchg
or
in
add
pusha
lds
mov
cltd
xor
loopne
das
sbb
jp
jno
xor
fistl
int3
xor
aad
int3
fldenv
inc
pop
cli
xor
cmp
cmc
mov
popa
jg
jo
mov
icebp
jne
mov
lcall
and
and
xchg
vfrczss
push
xchg
add
cmp
inc
mov
mov
bound
mov
out
repz
or
cwtl
daa
pop
hlt
add
mov
lgs
jo
negb
dec
cmc
test
sbbl
notb
idiv
push
sbb
xchg
test
ror
test
int3
mov
jo
pop
clc
loop
fwait
inc
test
lods
dec
lods
sub
dec
sbb
sub
mov
outsl
inc
ds
roll
bswap
dec
in
push
inc
mov
sub
jp
jecxz
fcmovu
xlat
das
mov
xor
adc
sub
dec
dec
sbb
pinsrw
push
das
add
pushf
jle
inc
enter
fisubrl
pop
jecxz
enter
inc
les
pop
nop
scas
icebp
test
out
sbb
and
or
cmpsl
pop
mov
dec
test
push
push
xchg
pop
adc
sahf
sub
dec
hlt
nop
push
pop
in
andb
int3
fists
sub
aad
inc
fisttpl
xchg
dec
cli
out
push
pop
or
dec
rorb
pop
xor
scas
lods
push
aad
mov
dec
popa
push
push
outsb
lea
jle
stc
outsl
push
js
adc
mov
lea
pusha
inc
fldcw
pop
mov
mov
pop
adc
dec
test
inc
push
outsb
into
mov
push
sbb
xchg
sahf
and
cmp
mov
xadd
xlat
mov
sbb
arpl
inc
mov
jg
mov
or
adc
pop
test
and
adc
xchg
xchg
into
push
push
pop
add
lret
icebp
pop
int
or
imull
push
es
cmp
jmp
aaa
imul
popa
push
jns
or
aas
movsl
outsb
popf
enter
push
inc
jnp
jae
push
push
add
sbb
pop
int
add
dec
push
xlat
inc
mov
out
pop
jae
xchg
cmp
repz
and
push
xchg
push
xchg
lea
movsb
adc
mov
adc
dec
je
or
xchg
outsl
mov
and
and
andl
push
and
pop
jae
popa
shl
cmp
out
xlat
cld
and
lcall
or
inc
jno
cmp
jo
add
xchg
mov
div
movl
test
or
fisubs
xor
scas
bound
aas
pushf
pop
add
mov
cmp
xchg
push
movsb
lret
xchg
xor
and
pop
leave
inc
inc
xchg
mov
bsr
pop
add
xor
test
cmpsl
adc
dec
adc
xchg
pop
enter
mov
push
cmp
inc
push
mov
mov
std
sub
aaa
add
cmpsb
inc
pop
div
jbe
icebp
gs
push
mov
in
mov
cmp
and
in
jo
pusha
xchg
sbb
jns
fldt
sbb
sbb
jle
xchg
scas
adc
cli
or
and
push
mov
and
cmc
insl
aam
lret
mov
imulb
mov
in
xor
mov
xor
stc
addr16
mov
push
pop
push
or
lods
fdivrl
fisttpll
dec
pop
and
addr16
cwtl
mov
outsl
push
xlat
push
mov
cmpsl
xor
ds
pusha
mov
lcall
and
int3
out
hlt
xchg
pop
pop
adc
clc
adc
and
sbb
xchg
loopne
mov
gs
sub
popf
sarb
repz
lea
mov
inc
stos
popf
test
xchg
pop
push
into
cmp
aad
jae
add
in
add
in
cmp
jb
lahf
push
divb
ljmp
sub
inc
mov
js
nop
hlt
lahf
jmp
jmp
stos
div
lods
aaa
mov
pop
sub
fisttps
incl
vpminsw
ljmp
dec
lret
xchg
fists
and
in
pop
mov
arpl
inc
push
movsb
xor
pop
loop
test
sbb
jl
mov
mov
sahf
xchg
cltd
sub
xor
out
test
scas
sub
mov
add
mov
ret
push
nop
and
sub
daa
faddl
dec
sub
inc
pushf
fs
mov
hlt
outsl
call
jl,pt
push
icebp
sub
into
dec
xchg
jno
test
imul
and
jge
sbbb
insl
inc
andl
sbb
daa
mov
sub
mov
jp
and
mov
mov
fsub
jecxz
ss
push
or
repz
negb
decl
add
mov
sbb
or
sbb
sbb
sub
or
cmp
mov
fldl
jg
out
es
dec
cmp
mov
jmp
push
jmp
icebp
add
xlat
dec
xchg
push
mov
jbe
push
stos
das
lea
movsb
aad
mov
push
int3
mov
pop
out
sbbl
dec
sub
lods
shrl
stc
sbb
xorl
lods
fists
and
dec
inc
pop
dec
movsl
mov
xor
mov
mov
std
jmp
std
lods
insl
in
fsubl
in
or
in
sub
fstp
mov
pop
xlat
lret
cmp
lret
je
sbb
mov
adc
pop
xchg
xchg
jbe
inc
jb
sahf
and
addr16
js
gs
cmp
in
lahf
das
push
pop
scas
cs
mov
push
mov
xor
push
rcrb
xchg
fs
stos
sub
sbb
jecxz
cwtl
sbb
cmc
mov
pop
or
or
xorl
das
in
insl
rcll
inc
dec
out
pushl
popa
push
nop
jl
mov
sub
push
mov
mov
dec
mov
mov
loopne
inc
adc
mov
roll
mov
push
push
or
mov
sbb
pop
mov
cmp
fldt
sub
nop
jno
mov
sub
lock
xlat
xor
mov
mov
stos
dec
sub
mov
movsl
cmpsb
mov
cltd
adc
mov
mov
mov
mov
scas
adc
insb
jecxz
ret
pop
icebp
cmp
dec
push
mov
fwait
lahf
test
std
outsl
jl
arpl
push
jl
inc
fsubrl
dec
push
pop
sbb
and
bound
mov
daa
adc
pop
fsubs
pop
push
cmp
and
scas
pushf
pop
dec
jecxz
mov
mov
popf
mov
fiaddl
mov
int3
sub
xor
les
sbb
add
xlat
and
pop
push
lret
mov
out
cmp
mov
dec
fisttpl
dec
mov
cmpsl
xor
loope
inc
jp
push
daa
mov
dec
mov
push
cmpsl
jg
lahf
adc
rorb
mov
sub
stc
xor
sahf
dec
mov
pop
sbb
xchg
cltd
xor
ret
out
push
lahf
sbb
push
fstpt
mov
jae
mov
daa
dec
lods
arpl
popa
cmp
outsl
add
fcompl
mov
loop
popf
dec
rcrb
jae
lods
sbb
in
cltd
mov
pop
insl
mov
mov
sub
ljmp
in
imul
sub
fs
pop
pushf
pop
mov
pcmpeqb
jmp
and
lock
das
sbb
jne
adc
push
int3
xor
xchg
inc
jbe
cmc
sbb
loopne
xchg
shl
jo
add
cltd
cmp
jg
push
stos
fisubrl
jp
lret
enter
mov
jbe
mov
mov
pop
xchg
pusha
jp
jo
out
test
test
push
mov
insl
in
popa
rorb
lea
loop
add
mov
movsl
insb
mov
xchg
cmc
sti
jns
inc
xchg
in
xchg
inc
mov
cmc
mov
nopl
mov
loop
mov
mov
sub
and
or
subl
mov
fwait
cmpsb
ljmp
js
jae
jns
sub
movsl
fwait
sbb
adc
pop
mov
jg
test
lcall
andb
aas
fwait
xchg
or
dec
pop
inc
test
aam
mulb
packssdw
shr
push
mov
xor
pop
ret
pop
jl
shll
pop
pop
sar
mov
pop
inc
and
dec
out
aam
and
lods
dec
xor
sub
dec
inc
pop
ffreep
lea
loope
xlat
or
inc
or
cmp
inc
cld
imul
in
push
or
push
or
jne
fwait
cmp
xchg
outsb
sub
ljmp
xor
outsl
mov
cmp
jge
push
mov
pop
and
push
or
rolb
or
xor
jns
push
aam
cli
mov
sub
jl
subl
add
pop
outsl
repz
jmp
mov
xchg
in
dec
cltd
in
push
ds
nop
push
push
push
pushf
xchg
dec
stos
dec
add
xor
sub
scas
or
cmp
sub
xor
push
movsb
inc
dec
insl
ja
stos
push
inc
sub
jbe
in
stos
movsl
xchg
rorb
cmp
mov
sbb
mov
lret
push
add
mov
mov
enter
mov
push
pop
int3
pop
cld
mov
sti
pop
mov
test
cmp
lcall
fcomps
jg
int
xor
ljmp
adc
sub
push
xchg
add
or
lret
pop
adc
xor
mov
push
test
repnz
sbbb
cmp
les
daa
push
repz
fadd
mov
inc
icebp
jge
mov
inc
add
shlb
leave
cwtl
or
inc
inc
adcb
add
lret
jmp
inc
out
insb
lcall
inc
pop
add
cmp
dec
cmpsl
inc
cmpsb
push
add
subw
jg
test
popa
push
sbb
xchg
cmpsb
mov
sub
outsb
js
pop
inc
xor
mov
repz
popa
out
lds
mov
push
jmp
je
enter
scas
std
pop
ret
pop
sahf
xor
aad
inc
loope
or
cs
ret
outsb
imul
stos
push
aad
ret
sbb
and
cmp
clc
mov
out
stc
sahf
outsl
fmuls
aam
xchg
xorb
inc
lods
ljmp
pop
add
inc
repz
in
dec
and
pop
mov
add
cmp
pop
andb
cld
sar
dec
add
xor
fistpl
es
dec
pop
ja
imul
xor
mov
cld
inc
or
lock
jae
xor
or
mov
push
mov
jg
add
sbb
push
sub
lret
pop
jmp
cmp
mov
and
cmp
insl
mov
cmp
mov
ljmp
outsl
add
out
sbb
jnp
sbb
shufps
xchg
into
mov
bound
or
je
mov
rcrl
sbb
jnp
hlt
inc
mov
add
and
mov
mov
imul
in
jmp
insl
add
data16
xor
lahf
decb
pop
adc
and
jle
jno
jl
int
and
aas
pop
outsb
movsb
jno
sub
lds
and
arpl
fidivrl
xchg
sbb
sub
sar
sbb
adc
aas
rcr
divl
jo
fs
mov
stos
push
loop
test
mov
fcomps
sub
and
mov
sub
and
inc
in
xor
push
loop
and
xor
mov
inc
mov
fcmovnb
push
aas
sbb
outsl
and
push
adc
xchg
xchg
xchg
jmp
mov
xchg
push
imull
pop
outsb
int3
inc
xor
mov
xchg
movsl
or
sub
imul
data16
mov
jecxz
jmp
test
adcl
push
cmpsl
or
xchg
xchg
adc
sti
and
fnsave
mov
loop
sbb
pop
or
loopne
cmp
gs
push
mov
inc
inc
mov
test
adc
dec
mov
nop
xchg
cmp
fstp
mov
mov
iret
jp
mov
mov
insb
ds
sbb
je
adc
or
jnp
jecxz
test
divl
cmp
out
movsb
scas
lds
hlt
or
pop
les
pop
aam
push
mov
leave
imul
mov
push
icebp
vandnpd
outsl
in
jbe
es
sub
xchg
or
clc
adc
inc
push
add
dec
lock
adc
add
jo
faddl
insb
push
lock
filds
aaa
push
loop,pn
xchg
fldt
push
jno
imul
inc
loopnew
inc
cmc
push
push
adc
dec
xchg
and
pushf
xchg
pop
adc
xchg
jns
fisttpll
data16
add
in
aad
mov
mov
sub
or
jbe
jne
enter
aam
addr16
pop
or
inc
jae
mov
cli
lods
cmp
and
ja
mov
arpl
mov
aam
jl
fdivrl
pop
loope
int3
pop
or
ljmp
xchg
mov
add
in
aas
in
or
and
stc
in
inc
lds
testb
scas
pusha
cmp
xchg
jns
pop
fiaddl
shll
js
pop
xlat
pushf
ja
dec
jge
pop
inc
imul
stos
aas
and
sbb
mov
lock
loopne
adc
test
pop
xor
mov
mov
push
pushf
repz
push
push
dec
negb
testb
cli
mov
sbb
ss
imul
sub
test
or
repnz
out
cmpsb
adc
es
push
pop
sbb
sbb
imul
or
inc
mov
jno
std
lret
test
jl
sarb
cmc
cmp
data16
and
dec
xchg
and
jl
mov
add
add
lret
test
sub
pop
jns
cmp
or
stos
call
adc
xor
push
shl
iret
orl
jl
pop
mov
and
loope
insb
fdivr
push
push
imul
cld
imul
fmuls
ja
out
mov
clc
sbb
cvtpi2ps
push
into
jb
xchg
and
fdivl
mov
dec
inc
outsb
scas
sbb
in
or
out
enter
jbe
icebp
insl
das
fnstcw
imul
aas
jbe
inc
mov
pop
dec
cli
cmpsl
out
inc
imul
xchg
sti
cltd
push
jne
pop
mov
cmp
in
mov
clc
mov
out
xchg
push
fs
test
lock
movsl
sti
pop
jnp
adc
fisttps
xor
out
jle
jnp
fs
lcall
sub
xchg
push
mov
clc
out
les
adc
loope
sbb
cld
fld
loope
aaa
dec
mov
pop
imul
js
adc
cmpsl
lret
adc
jae
mov
fcoml
dec
inc
aad
jecxz
pop
lods
fs
xchg
cmp
dec
mov
lret
gs
xchg
jae
movsl
js
inc
fimull
mov
add
mov
cmp
dec
push
mov
out
das
mov
sbb
pusha
mov
pop
adc
xor
push
insl
xchg
shll
imull
data16
ss
mov
jb
shlb
andb
bound
repz
push
and
dec
cmp
insl
cltd
or
push
movsb
mov
or
add
aad
test
fdivrl
cltd
push
aam
mov
out
dec
mov
jne
cltd
movsb
leave
or
sti
cmp
push
inc
js
bound
ret
insb
shlb
loop
mov
ss
lahf
aad
jb
adc
je
mov
add
shll
xchg
sahf
sbb
ret
cmpsl
dec
jno
cmpsl
pop
insb
push
jnp
fidivl
jg
out
add
movsl
jae
adc
sub
add
sti
push
aaa
jae
adc
xor
xchg
push
mov
jo
mov
or
sbb
rcrb
addr16
leave
lods
les
adc
dec
xchg
sti
inc
xor
mov
jmp
pop
adc
mov
push
push
jne
and
xor
pop
lods
ficomps
das
es
or
inc
xchg
sub
mov
aas
sub
rcll
sbb
negl
dec
out
push
cmp
cmp
fwait
mov
inc
cld
push
mov
jmp
adc
sub
sbb
sub
loope
or
out
xchg
jae
dec
iret
arpl
mov
and
push
adc
bound
rcl
cmp
icebp
insb
aam
pop
std
mov
hlt
jge
out
nop
or
dec
push
cmp
xchg
cmp
lret
mov
cwtl
sub
cmp
pop
and
inc
add
cmp
data16
add
dec
sahf
pop
int
add
sbb
mov
xchg
sub
rclb
cs
fucom
sub
jle
into
prefetchnta
pop
data16
and
jo
pushf
inc
inc
push
addl
notb
pop
dec
in
fldl
cmp
sbb
test
or
inc
cmp
lea
mov
rol
jmp
outsl
push
xor
sbb
mulb
daa
or
popf
rorb
jl
rcll
or
ret
sbb
sbb
ja
test
fimuls
inc
jge
jne
dec
xlat
rol
into
orl
add
adc
je
insb
push
xchg
mov
or
flds
lea
cmpsl
xor
cwtl
or
filds
inc
leave
mov
xor
mov
lock
out
or
push
pusha
jecxz
push
dec
mov
mov
stc
daa
xor
ljmp
lods
push
out
push
stos
jo
sbb
xor
bound
imul
js
xchg
popf
insb
xor
sub
sbb
stos
addl
push
sti
or
lret
cli
inc
mul
clc
xchg
fcomps
jp
lods
mov
in
repnz
subb
cmp
call
out
shr
jne
repz
xchg
lret
lea
ret
icebp
jmp
dec
inc
cmp
mov
lea
out
sub
mov
xchg
decb
mov
push
fmull
mov
mov
aas
call
mov
mov
mov
jne
sub
push
mov
clc
pop
divb
or
add
or
std
nop
jnp
stos
bound
sarl
subl
sub
mov
ja
cltd
test
lods
add
mov
push
in
rcr
mov
sub
mov
jns
test
lret
cmp
adc
adc
mov
fildl
sahf
adc
and
arpl
stc
aaa
out
mov
or
cltd
push
dec
cmp
les
clc
mov
in
add
xlat
xchg
test
jecxz
mov
ss
bound
jne
pop
sbb
iret
dec
dec
shll
stos
imul
outsl
in
mov
push
and
fs
inc
mov
call
mov
pop
vxorps
or
and
ficoml
or
xor
add
stos
movsl
inc
imul
adc
or
inc
in
mov
ljmp
lock
dec
faddl
xor
inc
pop
iret
push
jo
or
mov
jmp
fcomip
push
inc
mov
fdivs
ds
pop
aad
sarb
jle
mov
test
or
data16
lods
push
popf
pusha
icebp
adc
out
aaa
icebp
insb
push
int3
jp
sub
cld
nop
movsb
mov
adcb
lret
mov
push
outsl
aam
pop
add
insb
push
and
adc
cmpsb
fyl2xp1
xchg
inc
scas
jb
pop
add
push
dec
lods
gs
data16
xchg
enter
mov
cmp
mov
dec
inc
push
mov
mov
in
mov
pushf
test
fs
lret
ja
mov
imul
adc
mov
dec
xchg
mov
fildl
iret
dec
popa
roll
push
dec
cli
jne
jp
pop
inc
jp
sub
cmp
dec
xor
jbe
stc
push
inc
sub
push
sbb
outsl
sbb
sub
sub
push
sub
xor
sti
cwtl
clc
dec
fildl
jmp
fidivs
push
call
jmp
lret
fyl2xp1
ficoml
fidivrs
rclb
decl
xchg
lahf
ss
mov
lret
jp
add
pop
jbe
cs
mov
es
push
cmp
insb
pushf
stc
push
sub
or
add
mov
pop
loop
jne
mov
mov
repz
adc
push
daa
jb
sahf
inc
cli
test
inc
iret
inc
inc
lods
sub
das
push
inc
and
insb
or
jle
pop
shll
pop
jns
xchg
jbe
sahf
fisttpl
dec
addb
mov
das
leave
stc
mov
push
xchg
jle
dec
fisttps
jnp
mov
and
push
jno
xor
sub
test
mov
inc
sahf
mov
lret
int
imul
sbb
xchg
mov
mov
cmp
fwait
jae
xor
mov
xor
xchg
inc
and
rolb
bound
dec
cmp
add
clc
insl
jg
mov
cmpsl
mov
test
push
lret
mov
jmp
push
shlb
out
and
lds
push
lret
jp
mov
jecxz
addl
inc
aaa
adc
push
mov
add
sbb
cmc
lret
ljmp
pushf
addr16
mov
push
and
ja
dec
adc
das
add
inc
adc
dec
mov
lods
dec
adc
jp
incb
ftst
hlt
push
imul
push
data16
fcoms
es
es
pop
jg
sub
int
in
fwait
mov
inc
sbb
mov
mov
mov
mov
lret
cmp
sbb
push
mov
dec
mov
cmp
push
mov
mov
push
sub
lahf
fwait
popa
add
mov
jmp
out
add
xchg
stc
movntq
movsl
cmc
sahf
lret
dec
call
sub
les
shr
or
out
idivb
sbb
inc
test
js
cmp
addb
sbb
cmp
jae
pop
mov
jl
dec
rcll
jmp
in
cmc
shlb
push
mov
fldl
xchg
aas
mov
repnz
mov
fimull
clc
xor
aad
cmp
pop
in
insb
test
xor
das
jmp
fcoml
mov
popf
mulb
mov
lcall
mov
and
sar
sbb
mov
sub
mov
lahf
in
mov
fldenv
shlb
jae
lods
cmc
push
addr16
sub
jbe
pop
mov
fcompl
lret
or
rorb
loopne
cmc
cmc
sbb
test
dec
sbb
rorb
scas
cltd
push
xor
scas
xchg
mov
or
cld
lods
lcall
aaa
jl
hlt
xchg
loopne
pusha
fldenvs
xchg
dec
jne
cmpb
cmp
xchg
add
mov
push
xchg
push
rcl
in
in
lds
adc
ljmp
out
stos
pushf
aaa
lea
dec
imul
mov
pushf
inc
sub
or
rcr
add
aas
pop
jno
mov
inc
enter
orb
sbb
push
movsb
fwait
pusha
sahf
xchg
hlt
cmp
ficompl
inc
enter
sub
pushf
in
jecxz
pop
mov
mov
cmp
or
dec
and
pop
or
mov
mov
xchg
lds
adc
cli
stos
pop
jnp
out
xor
jmp
ret
mov
enter
mov
mov
sbb
add
add
adc
or
mov
stos
outsl
pusha
dec
pop
and
cs
cmp
fld
lods
pop
xchg
jnp
push
repz
fnstsw
mov
mov
mov
xchg
mov
into
xchg
jg
sbb
and
add
mov
mov
xchg
popf
insl
iret
lds
mov
lds
mov
in
mov
sbb
sub
call
and
enter
call
mov
cli
leave
fcoms
call
xchg
sbb
mov
dec
ljmp
dec
pop
mov
lret
mov
jns
cwtl
add
js
pop
icebp
popf
inc
std
or
adc
sbb
shl
push
cmp
or
adc
mov
aaa
pop
lods
fiaddl
pop
imul
sbb
and
notl
or
push
cltd
mov
fdiv
adc
push
jle
mov
pop
cmp
scas
movsl
inc
popa
dec
or
out
ja
orb
xor
push
xchg
xchg
xor
cli
inc
dec
in
ds
ss
lds
sbb
imul
cmp
loopne
push
into
ret
jnp
jg
pusha
xchg
sub
es
add
mov
sbb
cmovle
xchg
sbb
push
int
mov
lock
iret
in
mov
and
negl
int3
xadd
jns
xchg
mov
and
loop
or
push
mov
orl
sar
rcr
xchg
lods
fadd
jg
or
popf
mov
push
jno
rclb
cltd
ret
je
ds
lods
add
push
cltd
xor
mov
sarb
cmp
mov
hlt
push
pop
and
rolb
xor
xor
pop
out
das
push
mov
pshufw
cmp
or
out
sbb
iret
les
xchg
mov
push
sbb
int
push
cmpsl
in
testl
data16
sub
mov
mov
test
decb
inc
mov
xchg
in
pushf
mov
cmp
xor
cmp
pushf
add
add
push
push
das
repz
pop
int
leave
cmp
imul
mov
outsb
lcall
mov
mov
mov
xlat
iret
cld
push
imul
add
outsl
xchg
cmp
sysenter
call
add
inc
insb
aaa
jno
dec
arpl
stos
inc
inc
andl
fistpl
lods
dec
add
jne
fnsave
xchg
inc
or
and
sbb
push
or
daa
ret
decl
adc
dec
push
mov
cmpsb
pop
jbe
aas
pop
mov
pop
shll
xchg
mov
jb
xchg
pop
pop
sub
and
add
mov
sub
inc
sub
jecxz
add
xor
mov
sbb
cmp
sbb
popa
outsl
cltd
hlt
cmp
clc
enter
leave
adc
mov
pop
aam
xlat
addb
xchg
jg
inc
xchg
aad
mov
mov
inc
loop
fs
sub
sti
mov
and
mov
or
pop
xchg
mov
pop
and
xor
adc
stos
pop
pop
repnz
or
adc
adc
mov
adc
shrb
ret
inc
sbb
pop
fsub
imul
xor
push
mov
popa
xor
mov
push
std
into
stc
pop
lret
jl
das
fidivs
jae
pop
fidivrs
mov
xor
push
adc
and
popa
mov
enter
addr16
movsb
mov
add
or
sbb
pop
sub
add
xchg
mov
or
out
xchg
sub
rcl
adc
pop
insb
sbb
or
dec
push
imull
xchg
sahf
add
negl
fsubrl
pop
sub
pop
mov
jnp
jmp
insb
popa
inc
das
xchg
shlb
das
jae
jge
paddusb
loope
lds
pusha
cltd
mov
nop
aad
subl
push
fistpl
lock
movsb
sub
or
fcom
add
xor
pop
test
test
fstp
inc
aas
inc
mov
adc
shrl
dec
pop
xchg
mov
popf
ret
scas
mov
and
sub
mov
pop
lcall
jns
in
movsl
imul
addr16
push
test
rcl
in
and
popf
dec
mov
stc
ret
jb
es
icebp
sbb
popaw
aaa
mov
mov
dec
sub
jecxz
cmp
inc
cmp
fmull
lods
jmp
aas
jp
mov
loopne
push
shr
cmpsl
sbb
out
jmp
inc
scas
jns
mov
push
into
jg
rcrb
jnp
xor
adc
mov
inc
ret
mov
mov
test
sbb
pop
lret
in
jecxz
jp
fwait
cld
cmc
dec
dec
pop
xor
push
mov
inc
pop
add
ret
mov
push
inc
push
mov
mov
sbb
and
pop
inc
es
lahf
adc
test
insl
jb
not
ror
imul
xor
imul
mov
jnp
xchg
mov
push
push
sub
push
push
cmp
or
ror
loope
sbb
xor
xchg
je
xchg
pop
add
xchg
dec
das
jns
sub
popf
push
out
bnd
push
ja
jns
jns
mov
ja
add
enter
lds
test
cmpb
ljmp
xchg
dec
push
add
push
mov
outsl
xor
xchg
loop
xchg
sub
or
je
add
cmpsb
lahf
inc
cmp
shr
pop
call
arpl
fs
jae
cmpsl
xchg
lds
testb
cld
hlt
pop
stos
das
push
push
in
pop
mov
and
aam
fldt
adc
inc
push
mov
loope
ja
mov
shlb
ss
push
mov
pop
inc
bound
test
sub
push
mov
lds
fdivrl
xchg
dec
sbb
dec
push
sqrtps
inc
adc
ret
inc
in
cwtl
inc
jmp
push
mov
stos
dec
ljmp
mov
inc
jo
mul
in
out
pop
call
in
sub
fldenv
fwait
push
or
in
scas
mov
clc
add
inc
cltd
adc
lcall
leave
arpl
popa
add
ss
sbb
fistps
iret
dec
jae
sub
mov
out
or
out
cmp
push
aas
fstpl
mov
lret
inc
decb
jo
inc
in
jae
unpckhps
in
push
dec
pop
call
cmc
pusha
or
add
and
addr16
jnp
mov
es
das
daa
jle
outsl
inc
mov
pop
add
mov
inc
je
icebp
or
adcl
scas
into
mov
mov
jns
mov
mov
jle
or
or
pop
rcl
mov
shl
jbe
jmp
loopne
orb
push
clc
fisttpll
and
push
addr16
popf
test
enter
cmc
push
aad
testl
test
aas
cmp
lea
sbb
sbb
push
in
pusha
xor
adc
sbb
lods
push
les
icebp
das
inc
push
and
push
mov
mov
cs
or
cltd
mov
jns
cmpsb
xor
adc
jl
xor
shl
lret
jbe
insb
cli
dec
cmp
enter
leave
push
ljmp
jno
or
cld
outsl
sahf
jp
test
push
sahf
xchg
dec
inc
pop
stos
das
movsb
pop
sti
cmp
data16
xor
outsb
aad
vpunpcklwd
in
sbb
pop
xor
cwtl
lret
cmp
sbb
fldenv
dec
scas
shll
xchg
xchg
fcomps
outsl
inc
or
rorb
xchg
pop
in
shrl
push
fwait
xorl
dec
jns
jg
and
cmpsb
cmc
jp
cmp
loopnew
test
mov
lcall
rclb
and
inc
mov
inc
cs
mov
push
jecxz
loopne
lock
mov
push
pop
cmp
shl
pop
icebp
sub
adc
xchg
cmp
loope
hlt
xchg
es
fs
lret
add
fldcw
repz
ret
adc
out
mov
push
mov
sub
shll
or
mov
mov
jne
in
pushf
adc
mov
sbbb
cli
mov
inc
mov
and
pop
xchg
xchg
and
nop
sub
and
ljmp
stc
jae
adc
fcmovnb
sub
jle
andl
fs
popa
pop
imul
insb
xor
sbb
ret
out
xor
pop
movsb
xchg
mov
popl
test
mov
imul
repz
sbb
sub
je
cmc
andl
push
sbb
sbb
jge
inc
cmp
data16
into
mov
sbb
sti
daa
testb
pusha
movsb
xor
xchg
dec
leave
sahf
loop
fistps
insl
sahf
pop
mov
sti
xlat
or
ja
outsb
pushf
jge
mov
out
std
mov
mov
aad
or
bound
shrl
xlat
aad
arpl
movsb
jecxz
daa
mov
sbb
sbb
add
sahf
rorb
push
js
test
dec
xor
inc
jp,pn
lods
cs
loope
dec
imul
xor
sbb
jecxz
cmp
mov
add
in
mov
jno
lock
shll
div
mov
xor
and
pop
mov
lcall
dec
stos
and
mov
push
inc
jecxz
aas
mov
cwtl
xchg
jae
add
cmp
dec
xchg
test
into
xor
xor
cmc
and
aam
mov
mov
xor
cmc
test
test
mov
into
bound
or
mov
ret
xor
mov
dec
mov
leave
jecxz
xchg
cmpsl
lcall
mov
cmp
mov
cmp
mov
aad
push
sarl
mov
push
fcmovnu
mov
xor
jg
pusha
lods
insb
in
enter
or
dec
dec
sub
popa
cmp
sbbl
xor
arpl
or
popa
sbb
repnz
xchg
pusha
repnz
leave
or
xor
sub
ficomps
ret
mov
aad
jae
loope
out
je
and
xchg
leave
cmpsb
mov
push
lods
adc
dec
sub
cmp
jmp
js
js
push
sar
sahf
push
mov
add
lea
pop
rolb
lea
mov
sub
fsubrs
jge
out
fidivrl
rorb
add
popa
fiadds
mov
dec
outsl
clc
adc
pop
clc
stos
xchg
add
popa
adc
imul
loop
sub
or
mov
inc
dec
adc
roll
or
mov
add
jmp
aas
test
mov
jp
xor
push
xchg
cmpsw
xchg
arpl
loop
fisubl
inc
mov
sub
push
push
push
movsl
dec
dec
xor
and
xchg
ldmxcsr
popa
pop
rcrl
jle
insl
dec
push
inc
sbb
pop
mov
mov
mov
repnz
in
test
rolb
jmp
xlat
or
xorb
add
into
cmp
pop
mov
sbb
fs
xchg
cmpl
hlt
xor
push
call
out
sahf
adc
jge
jns
mov
dec
lock
mov
push
dec
addl
add
pop
xor
mov
movsl
or
and
ret
xchg
es
xchg
lods
movsw
test
mov
jp
add
xor
outsb
rcrl
xchg
into
nop
jecxz
pop
dec
lahf
movsl
inc
pop
test
into
mov
xor
sbb
notb
xor
sti
or
test
orb
lcall
dec
pushf
and
bound
aam
mov
mov
aad
add
addl
or
dec
or
arpl
repnz
daa
pusha
inc
xor
lods
imul
mov
lock
sbb
js
pop
mov
cwtl
push
jbe
xchg
call
mov
push
int
imul
mov
repz
test
repz
jns
mov
pop
icebp
pop
mov
jecxz
pop
jecxz
pop
push
jp
mov
movsb
mov
movsl
es
testl
cld
jmp
sub
data16
or
jo
add
je
lea
xor
mov
and
pop
mov
push
cld
bnd
inc
aaa
add
mov
or
ret
in
fcompl
fadds
jbe
in
notb
fwait
into
inc
mov
cwtl
les
orl
pop
lods
nop
cmpsl
xor
hlt
and
sbb
and
mov
push
cmp
ffreep
mov
fadds
jecxz
mov
mov
sbb
cwtl
fdivs
sbb
cmpsb
lahf
ret
lret
and
push
adc
push
push
out
imul
sub
loop,pn
jmp
stos
cmp
jmp
shll
mov
data16
data16
leave
mov
fistps
adc
flds
ret
orl
jp
inc
ljmp
pop
xor
mov
mov
inc
mov
testl
inc
mov
cli
add
sti
mov
in
mov
lret
xor
push
adc
mov
je
xor
out
mov
leave
out
insl
nop
insl
nop
mov
sbb
jb
aaa
in
je
xchg
jns
cltd
and
sti
sub
out
repnz
daa
fs
mov
adc
movsb
xchg
loopne
cs
cmp
in
cwtl
push
cld
push
xor
fcomps
data16
dec
jae
pop
insb
jno
push
scas
lcall
or
and
lds
addr16
loop
push
mov
ss
sub
push
sbb
or
cld
xchg
cmpsl
mov
bound
movsl
mov
mov
sbb
jecxz
pop
or
and
adc
xor
dec
jg
testb
mov
stos
out
dec
ds
fdivrs
add
or
stc
andnps
out
sbb
sub
loope
outsb
or
loope,pn
fbstp
aas
jg
aad
xchg
xor
call
mov
fsts
fildll
mov
mov
xor
rcr
jo
aaa
aam
popf
or
push
inc
mov
mov
push
aad
hlt
jl
sbb
mov
xchg
addr16
mov
push
push
int
mov
lret
lds
sarl
fsubr
pop
dec
jle
outsl
and
out
test
pop
dec
push
aaa
mov
cmpsb
push
fisubl
imul
sti
cmp
and
jmp
int
xchg
mov
scas
leave
and
jge
mov
or
push
adc
gs
bnd
ret
pop
cmp
stos
dec
or
add
leave
fisubrs
cmpsb
lcall
test
push
lcall
inc
fstps
jecxz
cmp
rcrb
add
jno
movsb
jb
jae
lods
scas
and
js
pop
jmp
xchg
mov
in
inc
repnz
in
jbe
xor
or
push
push
pop
push
pop
mov
pop
sbb
jno
fcoml
pop
loop
xchg
dec
shll
lret
in
ret
out
pop
in
pop
mov
pop
xchg
sub
cmp
sbb
rcrl
jbe
testb
mov
cltd
orb
sti
dec
dec
sbb
leave
mov
dec
add
icebp
xor
cmp
inc
xor
push
sub
add
pop
stos
imul
mov
jnp
mov
lret
mov
xlat
into
mov
cmpsb
xchg
cmpb
add
mov
gs
jecxz
mov
stos
xor
adc
xchg
getsec
fadds
jne
xchg
std
xchg
inc
test
int3
mov
dec
loop
aad
cmp
push
push
xor
rcrb
aas
shll
pop
add
sbb
mov
out
rol
outsb
jae
jecxz
shlb
mov
lcall
add
sbb
inc
outsb
rorb
pushf
add
mov
daa
movsb
subb
popf
jp
and
jb
inc
or
dec
repnz
leave
out
or
mov
xor
stc
jmp
rolb
scas
mov
sbb
pop
aas
sub
std
xchg
adc
scas
jp
sahf
cmp
dec
dec
jle
clc
jns
clc
jle
ja,pn
cs
adc
sar
scas
add
push
cli
sbb
aam
mov
shll
add
subl
jae
arpl
in
lahf
int
sub
mov
xor
inc
cmpl
inc
adc
repz
imul
xchg
xor
mov
add
and
ja
lret
cmp
dec
lea
aam
push
jne
imul
mov
adc
ds
pop
cmpsl
pop
jmp
pop
enter
repnz
out
xlat
pop
out
push
int
movaps
push
cmc
stos
fwait
and
xchg
shl
mov
data16
rcrb
rdtsc
mov
in
popa
scas
adc
or
ds
faddl
rolb
jmp
stos
dec
jmp
in
mov
fistpl
and
roll
rorb
fcomps
push
mov
and
insl
mov
dec
sbbb
jns
shl
xchg
sub
outsb
das
in
out
hlt
xchg
xlat
shll
sarb
rorl
mov
or
cmp
loopne
push
fiadds
sbb
imul
pop
and
stc
pushf
cmp
outsl
adc
arpl
mov
mov
lea
testl
pop
jns
out
sti
gs
xlat
mov
jbe
or
jl
sub
mov
stos
pop
fwait
mov
mov
int
data16
xorb
cmpsb
aam
mov
jne
cmp
outsb
sahf
jp
rorl
jno
sbbb
dec
mov
or
adc
adc
ret
icebp
les
sbb
mov
jge
sarl
dec
fcomps
push
mov
shll
cmp
repz
andl
test
sub
and
jl
pop
test
imul
and
scas
add
mov
push
nop
add
ret
mov
dec
gs
inc
inc
cli
sub
shlb
aam
data16
mov
xchg
adc
mov
dec
and
repz
out
fxam
in
fcomps
mov
sub
je
mov
fs
xchg
test
insb
sbb
lds
push
adc
mov
mov
mov
xorl
shlb
test
cmp
notl
sub
push
jno
jne
jmp
out
daa
push
pushf
push
pop
fildl
shl
inc
jmp
jae
pop
pop
jne
loope
jae
fdivrs
mov
add
aas
pop
mov
out
xchg
scas
ficoml
xor
push
lcall
loopne
in
fcomp
mov
test
movsl
popl
test
aaa
and
aad
in
mov
sbb
into
adc
lods
mov
roll
push
xchg
and
fs
mov
js
xor
fstl
xor
dec
loopne
pop
or
xchg
mov
xlat
and
sub
or
inc
ror
addl
into
pop
test
xchg
out
inc
repnz
inc
xchg
push
mov
mov
loope
dec
into
jne
cld
jne
arpl
sbb
add
out
push
fdivrl
pop
push
in
fs
lods
cmp
inc
insl
add
es
push
mov
jno
push
rolb
mov
sub
shll
clc
xor
mov
out
xor
mov
int
and
jo
ss
cmp
or
rcr
xchg
popf
xor
aas
sub
adc
lea
adc
lock
pop
mov
loop
shlb
add
and
inc
gs
fldt
aaa
cmp
push
inc
imul
bound
enter
out
sub
inc
test
imul
pop
push
or
mov
cwtl
adcl
jge
dec
pop
gs
jnp
mov
sti
fisttps
rcrb
xchg
faddl
xchg
icebp
xchg
jb
insl
mov
fildl
xor
adc
iret
push
lea
push
mov
in
stos
jmp
add
or
cmp
xchg
mov
push
xchg
pop
enter
push
fidivl
xlat
jno
dec
or
test
ret
cmp
fmul
addl
xor
ret
jne
in
add
inc
shrl
ja
ds
cmc
fisubl
mov
push
mov
mov
dec
sub
ficoms
pop
lcall
mov
cmp
mov
and
sbb
fs
adc
sti
insl
xchg
push
fdivl
push
int
scas
mov
rcrl
inc
pushf
out
bound
sub
sub
test
mul
test
push
ja
roll
jo
jae
insb
jmp
mov
jbe
push
sub
into
sbb
jmp
jnp
aaa
ljmp
mov
jge
cmpsb
inc
pmuludq
cmp
mov
push
popa
into
cmp
cmp
addr16
adc
das
cmp
test
and
leave
stos
fdivrp
popf
cmpxchg
lret
es
fs
mov
inc
mov
and
jno
or
add
add
leave
adc
into
mov
subl
int3
jae
je
dec
test
sbb
in
les
lds
insb
faddl
int
lcall
pop
popl
lock
pop
insb
sbb
test
jb
pop
xchg
fs
out
imul
and
xchg
clc
out
mov
jne
mulb
pop
mov
mov
icebp
adc
cltd
les
popa
pushl
mov
rolb
and
and
mov
aaa
addr16
addl
enter
dec
test
xchg
cmp
pop
or
in
enter
in
lahf
adc
xchg
dec
addb
in
notl
iret
inc
test
adc
adc
jp
pop
sbb
sub
push
or
jbe
inc
movsb
ljmp
movsb
sub
iret
imul
pop
jmp
xor
dec
xchg
pop
imul
sbb
pop
popf
movsb
push
je
out
ds
dec
mov
cmpsl
add
push
mov
loopne
fsub
sbb
fnstsw
shll
arpl
dec
push
mov
xchg
jecxz
outsl
jae
add
and
sbb
out
jp
test
xor
mov
divb
ljmp
loop
je
enter
std
mov
mov
mulb
xlat
sub
mov
sub
aaa
lea
pop
push
inc
hlt
cmp
xor
jb
mov
sbb
cltd
xchg
dec
mov
dec
lea
push
shl
sub
test
xor
roll
xchg
adc
mov
stos
inc
fsubr
fs
pop
roll
mov
nop
incb
jne
push
ljmp
adc
push
adc
out
or
filds
dec
xchg
lock
and
xor
mov
insl
loop
pop
jne
test
inc
xchg
and
xor
shrb
adc
cs
pop
test
adc
add
push
das
adc
xor
hlt
es
enter
cmp
lret
cmpsb
cmp
lret
mov
xchg
fwait
jmp
sub
lods
aad
xchg
lahf
iret
mov
loop
lods
inc
xor
sub
xor
filds
xchg
int3
sub
fimuls
lret
ds
fwait
mov
cli
aad
mov
icebp
sub
out
gs
rcrb
arpl
repnz
or
rcll
fildll
xor
push
movsl
push
inc
ja
add
sbb
cmpsb
push
aad
clc
in
jge
fcompl
push
jbe
xor
pop
mov
push
cmp
sbb
mov
cmp
and
faddp
mov
adc
stos
sub
inc
aam
jecxz
pusha
pop
jmp
adc
jo
imul
test
scas
inc
mov
cmp
aam
mov
or
xchg
xchg
scas
mov
push
pop
fsubrs
pop
lret
and
dec
nop
mov
mov
nop
iret
pop
cmp
xlat
and
mov
mov
xchg
dec
stos
sarl
loopne
fs
cmp
testl
clc
and
jb
and
int
mov
mov
inc
push
out
xchg
mov
sub
inc
ret
adc
lret
add
mov
inc
dec
sahf
dec
add
jae
pop
aad
and
lock
sbb
mov
fstl
mov
outsb
sahf
xor
cmp
pop
flds
aaa
and
sub
and
test
aam
pop
sbb
test
cmpsb
les
icebp
sub
roll
in
xchg
add
stc
shll
sbb
xlat
mov
aaa
or
xor
push
pop
dec
idivl
push
into
movsl
mov
mov
jecxz
cld
into
addl
cmc
and
test
pop
mov
push
xchg
lcall
xor
inc
into
int3
push
dec
mov
rolb
sbbl
ret
sub
in
add
pop
jnp
and
push
inc
pop
adc
je
bound
mov
sbb
cmp
jmp
cld
xchg
push
imulb
xchg
clc
aad
arpl
mov
enter
push
int3
sbb
sbb
repz
cltd
popf
cmpsl
mov
sbb
xor
xlat
rcrb
pop
mov
sub
dec
lcall
inc
jg
push
dec
lahf
xchg
xor
adcb
push
xor
cmp
jle
arpl
mov
aam
mov
rol
outsl
mov
mov
jo
pop
in
insl
shlb
add
les
mov
scas
lahf
jp
aas
and
popf
pop
mov
push
pop
sub
cmpsb
idiv
sbb
ret
sub
scas
ret
adc
sbb
div
stos
mov
xchg
sub
sub
ja
call
scas
dec
leave
out
sti
pop
mov
fs
and
pop
icebp
ror
push
xor
dec
dec
xor
nopl
jp
movsl
and
jb,pt
insb
push
inc
mov
pop
sahf
jg
lds
jge
sti
subb
jecxz
es
mov
std
cmpsl
push
push
insl
mov
mov
in
je
lds
sbb
cmc
sbb
or
lret
inc
pop
push
push
mov
pop
cmpsb
xchg
xchg
cmp
mov
pop
and
cmp
dec
lock
mov
outsb
jbe
push
lods
movsl
cmp
xor
xor
notl
pop
adc
gs
not
outsb
cmp
std
mov
shrl
test
adcl
cwtl
sbb
push
outsl
fildll
es
mov
push
add
test
fadds
shll
mov
lret
inc
fcom
mov
dec
std
fwait
mov
jmp
je
insb
lods
inc
iret
idivb
out
pop
bound
mov
rcr
push
xchg
jbe
jp
cmp
jp
movsl
and
imul
aas
and
int3
push
scas
xor
add
inc
mov
cmpsb
mov
insb
adc
dec
int3
int
icebp
mov
sub
inc
fwait
in
jb
aaa
mov
nop
lcall
outsb
movb
or
cmpsb
pop
loopne
repnz
cmp
repz
pop
add
test
pop
mov
jne
xor
or
push
clc
out
cld
add
loope
movsl
fisubrs
xor
push
roll
jmp
pop
fstp
xchg
addr16
and
je
test
jp
int
gs
scas
out
lret
mov
mov
arpl
fildll
mov
or
adc
sbb
mov
insb
roll
pop
cli
movsl
jge
add
adc
out
into
ror
xchg
jg
movsl
mov
clc
jecxz
jmp
enter
jl
pop
mov
sbb
rcr
arpl
or
hlt
enter
xchg
push
jns
into
aas
call
pop
dec
mov
loop
add
jbe
orb
and
and
in
sub
sub
pop
nop
xchg
sub
sar
int
adcb
fisttpl
jbe
mov
imul
stc
and
insb
mov
mov
mov
cmp
inc
hlt
sub
sub
mov
cmp
out
inc
imul
cmpsl
pop
inc
adc
enter
das
add
add
sub
mov
push
setge
mov
jae
decb
and
jb
mov
pop
inc
rolb
cltd
test
or
jle
cmpsb
adc
mov
cmpsb
cltd
adc
fidivrs
or
jmp
pop
arpl
testb
xlat
cmpsl
adcb
loope
pop
add
aaa
add
sub
xchg
aam
cmpsb
jns
pop
jne
jbe
mov
dec
sub
cmp
stc
lds
cmp
repnz
and
adc
mov
and
cwtl
xor
push
mov
mov
jne
insl
push
addr16
sub
xor
pop
pop
jnp
addr16
jne,pn
pop
push
inc
ja
call
jbe
push
xchg
imul
das
jno
flds
add
jl
jmp
pop
mov
jp
divl
and
lds
mov
sub
ret
or
call
pop
repz
lret
pop
lock
push
pop
mov
pop
cs
inc
shlb
int
jmp
mov
xchg
xor
and
cmp
lret
sbb
sub
and
sti
jle
or
mov
cmpb
in
push
ds
orb
sbb
or
inc
jecxz
stos
ret
flds
inc
add
std
add
sub
call
ret
clc
mov
add
xlat
inc
sbb
lahf
mov
inc
push
pop
mov
push
inc
sub
lea
in
push
inc
mov
sbb
out
inc
mull
jnp
out
xor
lods
xchg
mov
and
inc
mov
mov
pop
xchg
std
mov
xchg
or
add
rclb
rclb
or
mov
in
dec
xchg
lock
repnz
mov
frstor
stc
daa
loop
adcl
mov
sub
dec
or
inc
int3
mov
sti
daa
inc
aam
dec
xor
mov
xchg
mov
icebp
or
div
mov
cmp
cld
dec
mov
lods
pop
repz
addr16
adc
movsb
cmp
xchg
mov
dec
dec
xlat
aaa
enter
dec
pushl
out
lcall
add
je
insb
sub
add
jbe
ror
repnz
xor
push
loope
imul
sub
add
mov
dec
js
ja
test
push
cltd
movsb
hlt
push
movl
mov
push
push
shl
aad
je
adc
jae
and
cld
cmc
push
loop
outsl
pop
cwtl
pop
inc
sti
push
mov
and
subl
pop
cmp
cmp
fcoms
repnz
add
and
arpl
call
sbb
sar
fst
xchg
xchg
je
cmpsb
into
sbb
cmp
pop
jno
sti
and
cltd
cmp
fwait
jg
orl
pop
mov
mov
movsb
aad
or
in
xchg
mov
ja
dec
ljmp
test
hlt
out
cli
mov
ljmp
mov
and
pop
or
mov
adc
sub
inc
mov
jmp
adc
repnz
and
sti
repz
adcb
pushl
or
sahf
out
or
sbbb
push
scas
scas
and
mov
push
sub
jl
inc
lahf
sub
jmp
or
pop
fs
cli
scas
sub
inc
das
add
out
js
jmp
mov
arpl
repz
inc
orb
and
push
fnstcw
loopne
dec
inc
pushf
popf
int
mov
cmovp
jg
cltd
out
lea
jo
sbb
imul
mov
imul
inc
and
adc
adc
sarl
push
mov
jecxz
and
jecxz
lods
cmp
inc
std
jo
stc
int3
sub
xchg
loope
roll
orb
xchg
push
aas
sub
sub
das
mov
and
fwait
and
ss
xlat
lods
pop
ja
inc
cmpsl
sbb
or
shl
jl
add
leave
pop
in
clc
jne
iret
jae
pop
mov
and
jo
loopne
add
cmp
inc
xchg
pop
xchg
popf
pusha
cs
arpl
adc
into
push
jno
cmc
pop
fwait
cmpl
ljmp
shrb
mov
aaa
int3
sbb
cmp
jbe
jg
jle
dec
and
repnz
mov
cmp
mov
jecxz
nop
rorl
outsl
push
sbb
lods
lret
imul
lea
xor
inc
pushf
dec
inc
push
xchg
push
imul
adc
sub
adc
lret
pop
xchg
and
xchg
rolb
mov
fcoml
or
cs
arpl
rol
xlat
stc
nop
sub
clc
sahf
add
sub
aas
dec
mov
imul
mov
dec
add
mov
scas
or
inc
cmp
cli
andb
mov
imul
push
dec
push
addr16
ret
adc
cmp
mov
xor
in
push
pop
lds
pop
insb
out
inc
rcll
mov
inc
pop
lea
pop
mov
fnstsw
loopne
gs
in
fmuls
daa
push
fstpt
lahf
roll
sbbb
inc
mov
cli
fisubrs
cwtl
repnz
push
push
aas
add
cmpsl
scas
pop
fisttpl
mov
xlat
xchg
fs
pop
movsl
or
clc
out
pop
dec
andb
int3
scas
xchg
aas
and
jae
adc
out
xchg
cs
cmpsl
fcoms
push
into
fnsave
sub
and
mov
pop
lods
imul
bnd
ja
test
jae
push
insb
cmpsb
movsl
or
cld
mov
stos
repz
adc
addr16
pushf
xchg
ret
xor
xlat
dec
pop
mov
mov
dec
jge
bound
cmp
push
mov
mov
testl
sbb
imul
sbb
jle
or
out
mov
pop
sbb
xor
mov
dec
cltd
lret
ret
inc
and
loop
inc
dec
loopne
leave
push
jnp
pop
out
add
adc
push
insb
movsl
rol
out
loop
mov
mov
orl
xchg
or
push
jb
popf
lahf
lea
mov
scas
rcll
fidivl
sub
mov
lock
fs
cmp
inc
and
ja
ficomps
lea
repnz
adc
scas
mov
pop
dec
mov
outsb
push
and
js
hlt
jne
inc
mov
sti
cltd
enter
in
push
xchg
sub
ljmp
out
xchg
dec
pop
dec
add
mov
ss
inc
push
cmova
or
add
xor
push
jne
xchg
add
lds
mov
jne
and
sahf
lcall
test
shr
fistps
xor
mov
jmp
pop
push
or
std
jnp
mov
pop
ds
push
adc
lea
cmp
enter
mov
lahf
mov
push
jecxz
stc
lods
enter
ja
jns
addr16
enter
add
cmp
insb
inc
ret
mov
dec
pop
out
or
out
outsl
rorb
or
sahf
aas
cmpsl
lods
cltd
dec
jno
sub
cmp
jmp
inc
addr16
mov
stos
outsb
stos
leave
imul
cmpsb
outsb
addr16
cli
lcall
fcomps
pop
leave
jecxz
cmc
adc
or
fldl
movsb
es
mov
adc
pushf
jle
addl
std
test
add
sbb
cld
sub
cmp
push
fidivrs
sbb
lret
repnz
push
mov
mov
xchg
sub
popa
repnz
cld
pushf
sti
adc
mov
mov
mov
inc
adc
mov
dec
nop
arpl
and
test
std
xchg
fimull
adc
test
dec
mov
insb
outsl
xchg
mov
sub
push
jg
rorb
adc
push
mov
ss
ljmp
cmp
sbb
in
std
pop
gs
fstl
jl
out
pop
lret
cmp
les
je
dec
sub
les
adc
hlt
pusha
xlat
call
dec
inc
adc
push
loop
jb
stos
jo
jge
cli
jbe
xor
push
add
jl
ss
roll
jbe
aam
mov
sub
xchg
sub
mov
push
stos
pop
fld
mov
outsb
cmpsb
push
push
popl
xchg
pop
lods
and
mov
lods
push
cmp
cmp
mov
insl
adc
stos
arpl
push
in
pop
int
fwait
sbb
push
mov
adc
sub
outsb
das
std
sub
mov
push
push
sub
mov
pop
bound
and
push
arpl
xchg
loopne
ljmp
xchg
push
inc
sbb
popf
lods
and
out
jmp
mov
add
sbb
push
and
mov
imul
xchg
into
or
dec
or
mov
push
lock
dec
jecxz
popf
cmp
inc
xchg
sbb
add
cmp
mov
inc
aaa
test
pop
stos
or
fxch
popa
sar
out
cwtl
mov
pop
insb
pusha
add
out
xchg
sub
cld
and
data16
pop
cmp
mov
movsb
ret
mov
add
and
xor
call
leave
fdivrs
out
and
xchg
sub
mov
aad
push
dec
push
pop
push
sub
xchg
jle
cli
pusha
inc
decl
dec
pop
cmpsl
cmp
add
cmpsl
push
lea
sbb
inc
adc
xchg
adc
push
dec
pop
jle
loopne
ljmp
mov
fidivrs
jp
and
xor
imul
dec
push
inc
ds
pop
aad
rclb
int
xor
and
lock
mov
push
lock
or
cmp
je
cmp
sar
ret
clc
sub
daa
xchg
sbb
repnz
jmp
adc
fidivrl
pop
dec
add
pop
sub
xchg
mov
adc
mov
out
and
lock
sbb
sub
xchg
inc
sub
lret
cltd
sarl
jge
pop
test
stc
sub
sbb
fdivs
int
sub
mov
clc
and
mov
push
push
stos
and
icebp
add
and
mov
sbb
out
test
inc
imul
jae
cmp
inc
pushf
js
das
xor
pop
ljmp
sbb
test
mov
lock
pop
scas
mov
add
ror
cmp
test
aam
ja
add
sub
push
leave
inc
pop
mov
add
jp
push
jo
out
or
fimuls
sub
mull
roll
pop
cmpsb
stc
sub
pushf
adc
jbe
int
icebp
fcompl
fbstp
popf
mov
aad
loop
ss
shl
mov
es
xor
cmp
rcrb
in
adc
leave
xor
cmpsb
aam
fcoms
sub
repnz
lcall
mov
mov
je
loope
push
js
xchg
or
pop
pop
push
call
iret
scas
xchg
movl
data16
adc
mov
mov
test
into
cwtl
pop
mov
push
fs
push
xchg
add
ret
jns
fdiv
into
scas
dec
cmp
adc
and
loop
ret
repnz
mov
movsb
xchg
cmc
negl
xor
in
inc
outsl
cwtl
and
mov
inc
xchg
aam
out
mov
xchg
call
or
xor
loope
pop
pop
out
data16
and
cmp
stos
lock
cmpsb
xchg
mov
sub
clc
movsl
pop
movsl
int3
loopne
dec
leave
mov
int3
sbb
and
test
je
ss
lods
sbb
push
cmp
sbb
or
and
xchg
inc
adc
lret
push
out
jg
inc
cltd
dec
fisttpll
dec
gs
mov
and
push
adcl
xor
call
push
stos
shll
sub
lea
addr16
dec
push
push
jl
loop
lret
popa
inc
retw
ja
mov
pop
jl
aas
outsl
int
push
inc
sbb
push
iret
sbb
push
lds
jnp
std
out
adc
movsb
dec
cs
pop
inc
fs
xor
inc
clc
movsb
insl
fwait
int
sbb
lret
sarb
fsubrl
pop
fdivrl
ret
dec
les
dec
and
shll
lahf
call
sbb
jbe
jae
sbb
push
xor
ja
fcomps
fiaddl
adc
filds
enter
lahf
mov
and
and
lea
cltd
mov
push
fstpl
xchg
mov
cmpsl
dec
js
stc
add
push
xchg
mov
mov
xchg
ret
fs
mov
pushf
push
sbb
cmp
in
mov
jecxz
inc
or
inc
or
and
insl
add
js
mov
lods
sbb
push
fsubl
testl
or
fists
sbb
dec
push
inc
mov
jp
mulb
std
add
sbb
pusha
mov
xor
jno
add
push
sahf
push
rcrb
cmpb
in
std
jp
mov
xor
outsb
cmp
adc
insl
xor
lock
adcb
cmp
pop
decl
aaa
pop
enter
cmp
mov
xchg
xor
repnz
pop
fiadds
test
pop
das
decb
data16
mov
lock
mov
sbb
pusha
push
out
in
jmp
pop
out
mov
push
xchg
loope
sbb
add
call
inc
ds
push
mov
not
imul
call
pop
jo
outsb
push
js
xor
add
inc
shl
mov
inc
hlt
das
adc
sub
lahf
ljmp
je
xchg
add
clts
fmul
iret
fldl
ret
cmp
jns
xchg
repz
mov
xor
and
push
ds
mov
in
pop
jmp
sub
movsl
and
mov
add
bound
hlt
cmpl
jge
in
movsb
test
adc
das
dec
fs
push
insb
shrl
jecxz
mov
xor
sbb
pushf
dec
ss
inc
and
xlat
push
test
pushf
jne
cmpsl
mov
addr16
test
fidivrs
lds
sbb
xchg
jp
cmovns
popa
add
sbb
xor
and
ret
mov
or
call
add
insl
mov
mov
test
or
xchg
jp
hlt
fsts
int3
js
iret
call
test
ljmp
nop
out
cmp
cmp
lcall
mov
test
imul
aad
xchg
xchg
test
stos
sub
out
fs
sbb
std
mov
shrl
sub
jp
stos
mov
mov
mov
test
out
dec
push
inc
scas
call
lods
sbb
xor
out
mov
push
push
or
pusha
sub
aam
xor
cli
dec
push
and
sub
xchg
nop
sub
pop
xchg
cltd
sbbl
adc
cmc
push
mov
mov
mov
cmp
aad
fs
sub
movsl
rcrl
mov
ficompl
xor
bound
aam
or
sbb
mov
ret
imul
ljmp
dec
std
xchg
movsl
in
pop
out
pop
and
into
xor
hlt
clc
rorb
daa
sbb
jb
pop
xchg
je
loopne
or
or
sbb
mov
shrl
sub
adc
rcrb
sbb
mov
xchg
push
imul
inc
pop
and
enter
in
dec
dec
cmc
stc
mov
idiv
add
inc
xchg
push
cmp
mov
cmp
subl
mov
jmp
push
xchg
cmp
aaa
enter
rcll
xchg
jp
adc
cvtdq2ps
sub
das
adcb
mov
outsb
mov
fwait
and
int3
push
jb
ficompl
mov
das
sbb
gs
std
mov
sbb
test
jmp
ret
cmp
lret
add
or
call
je
leave
sbb
fadds
ds
jmp
add
in
or
mov
rorl
or
mov
out
jno
cwtl
aaa
test
insb
mov
sub
ds
imul
neg
xchg
push
enter
lods
iret
sbb
ljmp
leave
je
push
sbb
adc
xlat
loop
dec
mov
ret
bswap
cs
dec
mov
test
bound
jl
adc
pop
test
and
movsb
repz
and
push
ja
fistps
loopne
pmaxub
pop
push
mov
dec
call
push
outsb
shl
dec
add
dec
sbb
repz
xor
push
mov
adc
mov
xchg
xchg
shll
out
int3
xchg
jbe
jp
push
pop
clc
xchg
jmp
xchg
ds
scas
sbb
jge
push
pop
testb
pusha
pop
mov
and
pusha
ljmp
mov
sub
cmp
orb
test
sbb
push
scas
mov
mov
pop
adc
subl
sbb
and
std
in
push
sbbb
inc
lret
mov
std
popf
jno
das
stos
mov
out
out
push
dec
aad
or
push
or
addb
jmp
push
dec
loopne
pop
repz
push
sbb
pop
test
aam
outsb
jle
mov
jp
hlt
xchg
lcall
push
dec
call
fiaddl
sub
dec
mov
pop
adc
pop
jmp
lret
pop
ret
data16
push
xchg
sbb
mov
addl
sub
push
sbb
ret
add
out
xchg
mov
cmc
and
dec
inc
xchg
xor
adc
push
subb
pop
call
push
mov
faddl
ja
loope
popf
fmul
sbb
mov
daa
mov
sub
pop
sub
xor
inc
insb
mov
inc
andl
ja
inc
es
cltd
fstpl
sub
out
adc
hlt
loopne
test
xchg
xor
into
pushf
cmp
push
mov
inc
scas
in
mov
mov
xchg
xchg
add
js
fldt
add
pop
inc
fwait
stos
or
adc
sbb
inc
fimull
mov
outsb
jae
dec
pushf
jp
mov
repz
xor
clc
mov
shr
xchg
mov
jae
je
push
sti
in
dec
jbe
outsb
dec
cmpsb
dec
add
push
leave
dec
insl
and
fdivs
out
xchg
insb
xchg
add
cmp
inc
sbb
scas
fsts
movhps
int
fs
fildll
addl
push
dec
inc
add
xlat
es
jle
push
and
jb
inc
loop
mov
lods
jg
cmp
xor
cmp
jbe
fstps
jbe
cwtl
mov
imul
mulb
adc
popf
add
add
pop
icebp
mov
mov
sbb
scas
jmp
jnp
imul
mulb
dec
scas
xchg
pusha
inc
es
ret
out
adc
daa
stos
pusha
jle
in
fsts
lcall
push
fisubrl
iret
mov
shrl
cmpsb
mov
fdivrs
test
aas
jg
gs
sub
nop
pop
sahf
push
nop
or
push
rolb
jmp
ret
repnz
jg
into
lods
in
stos
mov
add
call
loop
adcb
imul
xlat
icebp
cmp
mov
xor
shrb
cltd
das
adc
mov
jns
ja
push
xlat
sbbl
fnstcw
in
xorb
and
cmp
mov
in
nop
rcrb
ret
jae
inc
addr16
cltd
add
xchg
scas
sub
sub
jno
fbld
scas
push
mov
cmp
fildll
fisubs
lahf
fisubrs
mov
inc
inc
xor
in
int3
dec
test
pusha
jge
mov
daa
leave
ja
je
pop
out
pop
inc
lret
icebp
orl
pop
out
ret
movsl
sahf
clc
ja
dec
and
std
xchg
push
outsb
mov
and
cwtl
loop
mov
lds
hlt
cli
cwtl
push
adc
lcall
stos
movsb
call
or
std
cmp
lock
and
int
xlat
out
cs
mov
mov
lret
xor
jae
das
mov
sub
dec
sub
stos
push
fsubs
mov
cld
cmpsl
insl
dec
mov
adc
lds
fwait
pop
nop
xchg
loop
add
mov
lcall
dec
or
std
pop
dec
dec
inc
mov
lods
mov
push
pop
push
cli
stos
mov
lds
sub
sbb
mov
incb
sub
push
popf
movsb
rcrb
fidivl
out
ret
add
aad
mov
out
leave
mov
aaa
xchg
or
inc
and
mov
pop
sub
les
aad
push
repz
pop
scas
cld
push
mov
into
push
pop
rclb
insl
cmpsl
push
adc
je
push
xchg
and
inc
pop
lods
dec
jecxz
in
subb
and
subl
test
fiadds
jns
add
rcll
mov
xor
icebp
jbe
adc
sub
mov
xchg
nop
pop
je
loope
jo
rcll
pop
mov
dec
js
mov
lret
push
cmp
sbb
lahf
cmc
aas
fwait
sub
push
mov
rolb
cld
jmp
leave
xchg
fnstsw
cmp
sub
push
xchg
add
fstpt
push
int
out
out
popf
imul
jmp
pop
test
jne
and
mov
pop
mov
jp
inc
das
mov
mov
fmull
aas
xlat
repz
stos
push
cld
push
orl
or
xorb
pop
and
ja
pop
gs
and
jmp
xor
xchg
push
pop
pop
pop
in
decb
scas
scas
inc
jns
fisubrs
gs
frstor
aam
xchg
aam
dec
scas
cld
mov
inc
sub
dec
xchg
add
cld
in
xor
jne
test
rcr
mov
scas
stc
jg
push
out
loop
jno
rcrl
ficoms
fwait
mov
or
add
movsl
or
mov
mov
repnz
ret
jp
sub
enter
adc
lahf
adc
adc
addr16
lcall
nop
fnstsw
pop
pop
mov
stos
xchg
lea
push
clc
add
mov
mov
in
or
sub
pop
adcb
cs
mov
or
insl
add
mov
dec
sub
jbe
int
nop
stos
in
mov
int3
push
mov
add
imul
xor
mov
icebp
je
mov
jno
dec
add
es
jae
xor
ret
xchg
mov
ja
cmp
inc
sbbl
pop
mov
xor
inc
push
xlat
pusha
and
jecxz
fnsave
adc
into
sahf
or
and
iret
dec
out
mov
fdivs
insb
shll
xor
and
out
or
neg
int
sbbl
mov
loope
fisubl
aad
cltd
fwait
jp
cmp
scas
adc
jl
xchg
sbb
adc
cmp
push
xlat
jne
or
lock
sbb
fs
cld
shll
inc
xchg
daa
cmp
shrl
imul
shrl
test
popf
iret
sti
add
add
out
push
addr16
stc
and
adc
sbb
rcl
fdivrs
pop
nop
out
and
insl
dec
test
cld
sar
mov
fildll
lock
mov
bound
cmp
or
and
sbb
cmp
inc
cs
mov
pushf
cmp
aaa
xor
fistps
inc
xchg
cmpsl
pushl
ret
in
out
adc
jecxz
jg,pn
sub
pop
dec
lock
out
lahf
mov
fcmovnu
fwait
dec
subl
bound
mov
ja
and
xchg
fcomi
outsb
sbb
dec
inc
inc
pop
scas
scas
sbb
jb
scas
jbe
sahf
jecxz
dec
mov
and
adc
or
dec
mov
es
add
test
subb
test
ss
dec
lods
add
adc
xchg
imul
xchg
adc
aam
mov
movsl
dec
pushf
and
stc
sub
xchg
leave
jae
lret
xor
mov
out
mov
ss
mov
dec
repnz
cmp
xchg
test
fadds
inc
push
std
pop
int
xchg
jp
sbb
fs
int
incb
insl
incl
fidivrs
outsb
jo
sahf
popa
fwait
cmp
xchg
mov
inc
dec
test
push
mov
js
fcmovnu
lret
mov
mov
adcb
in
lock
movsl
adc
ret
mov
push
insb
sti
push
or
adc
jbe
mov
into
in
mov
ret
hlt
iret
pop
dec
fstpt
sbbb
mov
push
push
mov
in
aam
mov
pusha
mov
cmp
xchg
addr16
add
push
add
sbb
inc
or
xor
sub
ljmp
jae
xor
ss
int
xor
cs
rcll
mov
icebp
nop
out
test
xor
dec
js
push
cmp
dec
inc
mov
xchg
mov
add
sbb
pop
test
stc
dec
fs
sbb
xor
dec
add
or
bound
mov
cmpsl
jae
push
inc
fisttpll
lret
mov
incl
lds
xor
cmc
adc
push
inc
mov
xchg
scas
pop
sbb
cmp
or
bound
int3
enter
lret
mov
jbe
mov
inc
jb
jnp
arpl
jmp
cmpsb
cmc
pop
aam
cmp
repnz
cmpl
xlat
jns
inc
call
jecxz
in
jle
adc
loop
mov
mov
scas
int3
lods
loopne
lcall
out
iret
dec
lret
dec
cmpsb
fcoms
mov
stos
out
lea
orl
icebp
out
std
or
mov
into
add
setae
mov
mov
xchg
aam
jne
xchg
mov
inc
imul
imulb
jp
repnz
xor
pop
in
cmp
nop
mov
dec
sbb
add
jno
mov
dec
lock
mov
cltd
mov
shrb
xorb
inc
or
mov
add
and
inc
jge
dec
xlat
xor
in
das
scas
cmp
daa
rcll
xor
loope
lahf
jp
test
pop
lcall
xor
rcll
std
inc
mov
inc
jmp
aam
adc
sbb
js
das
insb
fwait
mov
sarl
jmp
aad
and
xor
bound
xor
sahf
cmp
jne
sub
sub
fsubl
daa
mov
push
cmp
sbb
orl
fistl
xor
out
xlat
out
rol
adc
push
mov
movsb
sub
stos
movsb
jns
in
sub
pop
scas
stos
or
mov
outsl
cs
decb
pop
in
ret
imul
lods
ret
xchg
jl
js
inc
movzwl
das
and
sub
push
lret
lret
cmpsb
jb
cmpsb
xor
dec
push
push
mov
shrb
test
mov
cmp
lds
out
mov
inc
dec
js
or
pop
mov
leave
cmp
cs
sub
fwait
fs
cmp
adc
sub
cmc
mov
cmc
notb
popa
xor
clc
aad
jb
push
cmp
loopne
mov
pusha
fs
into
inc
push
pop
fwait
dec
jp
sub
ret
or
repz
or
loope
and
mov
lea
inc
adc
xchg
inc
out
push
sti
mov
mov
ret
andl
jb
xor
iret
lret
mov
sbb
push
cld
ret
sahf
and
or
mov
les
icebp
or
jle
lods
test
jle
lcall
xchg
movsbl
popa
loope
sbb
push
stos
jecxz
xchg
loope
sarb
test
jmp
stos
xor
mov
push
ss
in
stos
arpl
sub
cli
lret
cli
inc
pusha
scas
int3
inc
daa
dec
nop
repz
push
sbb
xor
push
out
cmp
sbb
mov
cld
scas
aaa
xor
fs
pop
jns
cmpsb
mov
test
sub
jg
pop
inc
ret
xchg
in
mov
mov
scas
mov
aaa
loope
and
outsb
mov
lods
lods
xchg
push
push
xchg
int3
and
fiaddl
jge
addr16
bound
jp
jp
jbe
xor
ja
jp
loop
addl
divb
jbe
jnp
sub
mov
push
popf
push
js
lock
adc
sub
lea
dec
push
jo
test
js
cs
xchg
ja
xbegin
xor
in
push
sbbb
jno
and
pop
jmp
shlb
mov
jmp
incb
sbb
fucomp
mov
pop
icebp
pop
mov
add
sbb
jns
imul
lcall
inc
mov
aad
rcrb
xor
shrb
loop
adc
and
xor
dec
mov
aad
std
outsb
dec
cs
ja
push
loopne
movsl
sub
mov
pop
add
mov
in
in
lahf
faddl
sti
dec
fmuls
xchg
jae
add
add
fbld
test
shlb
out
jno
andb
or
adc
mov
sti
dec
sub
inc
mov
insl
outsl
das
sarb
or
pop
popf
popf
out
push
adc
out
pop
push
in
rep
mov
mov
push
inc
outsb
jne
xor
sbb
inc
test
jmp
sti
mov
or
cmc
or
out
mov
or
shlb
es
pop
or
enter
in
mov
loope
lret
fnstcw
lret
sub
sahf
bound
fwait
jecxz
jle
subps
mov
sub
imul
stos
mov
add
push
dec
xchg
ficoml
add
int
stos
push
mov
pop
jp
lcall
nop
cmp
sub
mov
adcl
lret
adc
or
stos
xor
xor
pop
push
mov
loop
jne
test
add
mov
xchg
mov
mov
and
ja
cmp
shlb
cmc
dec
jmp
push
loope
outsl
mov
out
sbb
jb
sub
leave
in
adc
test
and
scas
lods
or
imul
push
test
lret
adc
inc
xchg
in
xor
je
jl
roll
fwait
adcl
ret
es
mov
mov
or
int
add
bound
bound
xor
mov
push
nop
rolb
and
pop
mov
mov
lock
push
sarb
xor
jl
push
jmp
mov
push
inc
fdivrs
jne
ljmp
jmp
loopne
lods
pop
imul
push
and
insl
out
je
out
data16
and
mov
icebp
add
mov
orb
dec
xorb
js
and
in
xchg
aad
and
mov
jl
pop
xchg
cli
stc
in
imulb
mov
rcrl
pushf
jmp
sbb
adc
outsl
adc
xor
js
mov
pop
in
in
mov
push
cs
sbb
pop
inc
cwtl
jp
loope
mov
rorl
cmp
jmp
push
adc
lds
dec
fisttpl
sub
in
in
push
add
push
jns
ss
push
push
add
xchg
xor
adc
push
xlat
in
fdivp
jnp
rolb
stc
in
je
aaa
ret
nop
cmpsl
push
aas
fcoms
clc
adc
adc
dec
faddl
or
pop
test
mov
lock
mov
stos
bound
aad
idivb
xchg
jb
jae
sbb
jns
or
mov
leave
jg
dec
dec
pop
or
jnp
add
sti
inc
in
add
stos
adc
aad
inc
cwtl
lret
mov
lods
mov
sbbl
xchg
test
jp
push
out
cwtl
test
lret
adc
xchg
ljmp
and
popf
imulb
test
push
cwtl
inc
das
adc
ret
inc
push
daa
and
in
xchg
mov
icebp
mov
cli
jno
push
outsb
push
sbb
popf
pusha
inc
in
add
jbe
lret
lds
ficompl
xlat
jne
mov
subb
or
lret
adc
mov
orl
loopne
sub
int
inc
shr
and
mov
ljmp
push
into
or
insl
cld
pop
dec
xor
scas
fnsave
adc
xchg
rcrl
loopne
outsl
sbb
lods
xor
mov
xor
mov
fwait
inc
and
lock
lcall
jne
ja
mov
pop
xchg
and
hlt
sub
sub
push
inc
pop
mov
fiadds
xor
jbe
jp
test
faddl
fs
es
out
lret
sub
and
push
pop
mov
movsl
jo
mov
cmp
or
jg
mov
test
mov
cmp
in
cltd
adc
jecxz
pop
push
pop
mov
aam
push
gs
int
and
sbb
pop
or
insl
aaa
bound
es
push
imul
sbb
dec
int
pushf
xor
mov
pop
lcall
ret
jmp
jbe
daa
rcrb
and
mov
dec
mov
aas
insb
test
out
xchg
mov
cmp
int3
std
add
xor
sti
rcl
xchg
into
cmpsb
xor
dec
nop
rcr
movsl
fs
cli
imul
movsl
in
lock
lods
out
int
leave
cld
int
sbb
cmp
out
fnstsw
in
add
push
push
sub
shrb
lods
sbb
and
ljmp
mov
leave
aas
sbb
fdivrs
mov
ljmp
into
fsubrs
mov
add
xchg
pop
sbb
out
sahf
inc
mov
cmpsl
out
repz
sub
jbe
dec
jmp
test
js
pop
sbb
repz
in
inc
les
aad
std
enter
ds
xor
fstpt
dec
sarb
lds
mov
sub
jae
lods
repz
shlb
into
xchg
out
jg
aam
jno
cmp
inc
lock
or
sbb
push
data16
pop
aad
mov
popa
in
mov
and
shlb
mov
sbb
mov
pop
loope
iret
rcl
inc
jbe
jg
enter
fimull
outsl
cld
mov
call
sub
or
rcll
and
mov
cltd
pop
lret
stc
scas
fcmovnu
test
xchg
fdivrs
mov
pop
outsl
inc
or
hlt
sbb
imul
push
gs
sbb
fs
xor
outsb
fistpl
add
and
je
je
lock
push
jae
inc
or
sbb
call
dec
xchg
adc
inc
pop
shrl
test
sbb
jle
add
mov
mov
bnd
iret
hlt
cmp
out
inc
out
mov
sbb
dec
ds
pop
mov
lcall
push
loop
pop
push
adcl
xor
lods
dec
cmp
push
sbb
sub
sbb
out
test
jecxz
jne
loope
in
sub
push
fsub
jnp
mov
jge
lret
icebp
and
push
mov
mov
xchg
sbb
mov
push
inc
sub
push
dec
loope
dec
pop
mov
sbb
roll
iret
or
insl
stos
outsb
shlb
gs
out
sub
scas
test
add
cltd
clc
or
inc
and
test
test
scas
int3
mov
xor
int3
pop
cli
inc
enter
or
mov
sarb
push
neg
in
cli
add
push
pusha
mov
add
mov
adc
je
dec
je
stc
sti
addl
mov
add
fs
aaa
dec
xchg
hlt
scas
dec
rorl
mov
mov
negb
test
inc
fwait
int3
push
adc
cmp
mov
in
push
into
scas
push
fstpt
mov
adc
push
mov
cmpl
mov
mov
fcompl
lret
lret
push
xor
adc
push
xchg
clc
push
mov
add
mov
sti
scas
test
xchg
push
ret
push
lret
sbb
test
push
cmpsl
out
jge
nop
xor
mov
xor
cwtl
and
adc
push
out
mov
mov
or
scas
inc
testb
mov
cmpsb
inc
movsl
inc
xor
ljmp
mov
pusha
addr16
dec
daa
lods
aaa
jnp
push
mov
xchg
pop
push
add
cmpsb
loope
sub
je
mov
aad
stos
adc
aas
mov
cld
add
fcomps
cmp
xchg
out
inc
outsb
xchg
fldl
mov
sbbl
icebp
mov
js
add
cld
arpl
or
add
lock
push
adc
loop
xor
push
shrl
js
xor
or
out
std
mov
cmp
out
mov
adc
out
jg
xor
pop
scas
in
jne
xchg
aaa
test
vcmpsd
xchg
xchg
lock
push
push
inc
jns
je
push
sbb
push
or
out
inc
bound
adc
ss
push
bound
adc
lds
and
fbstp
pop
pop
jl
and
inc
sbb
mov
ret
scas
cmp
adc
jne
das
push
ds
pusha
mov
mov
push
xor
cwtl
in
dec
adc
gs
pop
bound
cltd
push
ja
and
rcrb
push
movsl
pop
popa
mov
test
pop
xor
or
call
sbb
cmc
cwtl
popf
lea
push
lahf
rclb
inc
fdivrs
shr
aas
mov
es
jne
xchg
cvtps2pd
iret
cmp
add
mov
ss
stos
pop
xchg
ja
jle
mov
imul
adc
fiaddl
imul
mov
mov
fsubrl
cld
mov
out
inc
xchg
icebp
sbb
rcll
or
jl
outsb
push
stos
mov
fs
int3
rorb
sahf
jmp
loop
mov
mov
in
repnz
rolb
cmp
jnp
inc
inc
out
fidivs
stc
lods
outsl
xor
test
pop
dec
icebp
pop
sbb
lret
dec
in
xchg
and
mov
cmp
push
das
sub
out
daa
pop
xchg
jo
rcr
in
iret
out
js
fucom
test
aaa
repz
lcall
sub
sub
dec
mov
pushf
and
mov
int
std
movsl
jp
mov
adc
xchg
mov
mulb
mov
dec
push
push
sti
sbb
mov
dec
sbb
jecxz
mov
fs
pushf
insb
pop
dec
lahf
std
movsb
inc
push
inc
and
int3
outsl
jp
das
bound
push
stos
pop
pushf
jmp
movsb
inc
cs
xor
mov
add
add
into
jle
sti
loope
adc
sub
repz
or
mov
fdivl
enter
cmc
sarl
xchg
push
imul
and
test
mov
mov
mov
pushf
push
cmp
add
test
data16
mov
mov
pop
jb
mov
ror
repnz
mov
xor
pop
aad
mov
pop
dec
cmpsl
hlt
mov
mov
mov
mov
cwtl
js
in
out
ja
cli
add
mov
cmp
inc
xchg
mov
adc
jmp
sbb
jge
rcll
push
mov
rcr
dec
mov
pop
aas
ret
scas
fbld
lods
jmp
jge
and
cld
fisubl
call
shll
push
fwait
sub
scas
sbb
fwait
or
ja
mov
xor
rcrl
push
outsl
mov
dec
cs
rolb
imul
mov
roll
repz
mov
lock
ficoml
sub
pusha
mov
mov
les
xchg
xchg
outsl
cmp
mov
push
fisubrs
fdivrs
or
pusha
mov
jb
ret
fcoml
or
je
lcall
xchg
subl
push
sub
and
int
mov
or
mov
fmuls
adc
inc
xchg
cli
jl
out
movsb
lods
cmpsl
adcb
out
int3
icebp
stos
and
sub
ret
xchg
adc
add
repnz
imul
adc
addl
adc
sti
rcll
xor
ret
or
lea
je
inc
cmp
inc
pop
movsl
dec
movsl
fbstp
fcmovnu
test
xor
mov
sbb
loope
call
data16
push
hlt
mov
xchg
add
push
inc
pop
xor
aad
pop
pushf
bswap
dec
pop
lds
xor
push
data16
dec
xor
and
int
movb
loop
jmp
adc
mov
or
bound
mov
lret
mov
mov
xchg
pop
stos
das
scas
gs
lods
cmp
les
mov
arpl
xchg
pop
lahf
cmp
pop
dec
test
or
pusha
inc
sub
test
imulb
cmp
out
dec
insl
adc
lcall
pop
or
dec
shrb
movsb
xchg
lock
mov
mov
sbb
lret
and
cmp
lods
add
xchg
add
push
jne
add
push
adc
xor
pop
pop
test
call
enter
adc
dec
mov
xchg
iret
xor
insb
xor
jae
lahf
mov
xor
xchg
dec
pushf
dec
std
cmp
test
enter
call
mov
sub
in
or
insl
pop
jbe
movsb
pop
inc
mov
aaa
push
add
mov
pop
int3
jo
scas
jp
mov
test
fmull
lcall
mov
cmp
xchg
enter
sub
call
pop
pop
jnp
dec
adc
ret
adc
push
cs
into
xor
jl
push
jp
sbb
fsubs
stc
sub
lahf
in
sbb
xchg
mov
adc
sbb
in
popa
push
inc
inc
xchg
add
cmp
cmpsl
fwait
push
in
xor
or
pop
loopne
popf
push
cwtl
mov
movsb
fs
push
rcrl
data16
mov
push
shlb
mov
xchg
add
jp
inc
xor
add
andb
inc
jne
outsb
sarl
push
mov
stc
fsubrp
nop
mov
pop
add
stos
cmpsb
popa
mov
hlt
je
mov
pusha
adc
frstor
cmpsl
dec
jno
mov
xchg
in
leave
insb
lret
fcmovu
adc
das
mov
jne
ret
dec
inc
popf
pushf
fwait
mov
add
pop
lret
adc
imul
sub
sbb
add
pop
daa
lock
sbb
ret
movsl
inc
inc
adc
fs
dec
loope
js
hlt
lock
inc
sub
mov
mulb
das
mov
shll
xchg
ds
xlat
lock
cs
fdivl
test
dec
ja
add
fs
dec
xor
sbb
out
movb
stos
xchg
mov
xchg
cmpsb
fdiv
stos
sub
fdivl
sub
cs
popa
mov
mov
cld
repz
pusha
push
xchg
hlt
cs
xor
xchg
jmp
xchg
les
pop
jl
sbbl
addr16
lods
in
shrb
xchg
stc
data16
sbb
cmp
nop
mov
or
cwtl
pop
daa
inc
mov
dec
xchg
jns
cmp
xchg
mov
pop
ret
test
roll
clc
adc
sub
push
dec
dec
gs
xchg
jo
dec
imul
addb
enter
es
mov
cmp
sub
fisubs
or
das
xor
cmp
sti
mov
stc
xlat
pop
inc
mov
or
outsl
into
std
xlat
das
mov
and
adc
lcall
xlat
jb
adc
dec
aam
das
sub
shll
test
push
scas
or
ret
or
imull
or
repz
push
cmp
cltd
and
xor
push
mov
sub
shrl
mov
addr16
pop
jb
outsl
mov
je
mov
addb
shll
add
adc
int
bound
loopne
movsl
sbb
xor
imul
loope
xchg
xchg
adc
mov
or
mov
or
add
or
andb
cltd
aad
out
mov
cmpsl
cmp
xchg
xchg
jp
mov
push
push
pop
push
add
jne
sbb
xchg
sbb
pop
test
sahf
dec
fwait
les
in
jmp
pop
xchg
js
aas
sub
or
lods
mov
mov
sbbl
cmp
add
add
sub
decb
pop
mov
mov
jge
dec
stos
jl
popf
jmp
scas
push
or
shrb
lahf
imul
repz
mov
comiss
fucom
dec
and
add
pop
jb
movsl
xchg
rcr
add
insb
ljmp
xchg
mov
xchg
pop
jae
mov
or
lods
rep
sub
mov
out
jecxz
inc
test
inc
push
loopne
stc
push
stos
jns
jnp
push
pushf
outsb
sbb
es
dec
mov
popl
loopne
dec
dec
arpl
or
rcll
jnp
sbb
aad
test
rorl
dec
push
and
loop
cmp
shlb
and
repnz
test
push
rcrl
mov
cmpb
push
fnstsw
adc
push
push
xor
add
imul
loope
mov
xor
inc
popf
loopne
aad
aad
sbb
movsb
mov
stc
xlat
mov
pop
xor
fwait
loop
ja
adc
mov
insl
shrl
stc
cmpsb
dec
gs
outsb
mov
adc
je
sbb
out
cmp
jg
iret
fwait
xchg
cmpsb
inc
or
in
or
cmp
nop
cmc
add
pop
jb
rcrl
jge
nop
mov
mov
pop
jae
mov
aam
out
shl
sub
pop
cs
mov
cmp
int
int3
lcall
push
lcall
movsb
jecxz
xlat
mov
push
xchg
lock
ja
add
fsubrp
movl
gs
dec
sbb
dec
add
out
ret
add
push
test
mov
ljmp
mov
pop
pop
cmp
pop
sub
dec
out
ja
jae
sub
cwtl
jb
pop
and
inc
dec
xor
in
es
in
sub
adc
aam
adc
testb
lea
hlt
repz
shl
insl
xor
lods
adc
push
and
jne,pn
inc
dec
dec
or
outsb
and
push
push
mov
sub
bound
roll
cmp
rcrl
jnp
insl
es
cs
mov
xchg
movsb
insl
dec
sub
or
cmpsl
sbb
and
lcall
pushf
mov
push
xchg
rorb
dec
mov
add
lea
stos
cli
mov
cmp
ja
addr16
inc
jne
data16
sbb
pop
sbb
outsb
fs
sbb
xor
mov
and
pop
mov
rorl
out
leave
sahf
nop
sub
cmpb
xchg
sbb
je
test
mov
jl
test
int
outsb
jge
in
mov
dec
dec
insl
dec
lret
call
loope
xor
mov
sbb
mov
in
adc
push
jl
outsb
cwtd
inc
je
mov
pop
cmpsb
push
xchg
xor
push
mov
mov
loope
sbb
and
pop
sbb
sbb
sbb
jb
xchg
iret
in
push
xchg
scas
iret
pop
sbb
leave
xlat
in
enter
das
cli
push
je
mov
mov
repnz
notl
aad
add
aad
mov
sahf
ret
andl
aas
les
sarl
insb
adc
rcrl
adc
sbb
ret
or
cs
insl
inc
mov
test
outsl
aaa
hlt
test
popa
ret
push
cs
insb
jnp
and
loope
dec
mov
mov
fs
mov
pop
jmp
cmp
test
test
or
sub
push
bound
xorb
dec
fisubrl
repz
sub
xor
jle
or
dec
push
push
int3
sahf
stos
adc
mov
test
fs
inc
sub
push
aad
mov
fnstcw
or
aam
insl
mov
push
fcmove
arpl
cmp
cmc
inc
imul
add
loope
adc
fs
rolb
inc
mov
pop
push
mov
adc
cs
loopne
fcompl
inc
xor
ret
jbe
iret
inc
dec
jle
scas
xchg
dec
movl
test
sub
cs
mov
jno
iret
dec
jne
lods
mov
pushf
pop
test
jb
xchg
lret
in
imul
jg
xor
data16
sub
test
mov
arpl
in
inc
dec
fstp
pop
nop
cmp
test
add
fsubl
mov
hlt
imul
test
or
dec
in
mov
pusha
push
pop
add
mov
ljmp
repz
or
mov
rorl
lods
faddl
in
sbbl
sub
or
or
enter
scas
pop
or
insl
mov
add
test
and
fdivs
aaa
cmc
jge
out
lret
adc
lock
into
mov
xchg
ss
mov
push
sar
and
cmp
cmp
jns
and
fs
repnz
sahf
and
jp
xlat
cld
mov
insl
xchg
add
stos
xchg
push
xchg
mov
rolb
in
dec
pop
clc
outsb
sub
mov
jnp
testl
mov
pusha
adc
inc
out
shrl
mov
and
lcall
shrb
and
xorl
xchg
push
movsl
mov
je
sbb
mov
or
xchg
into
mov
push
cmp
fstpt
mov
mov
int
in
jns
push
int3
fs
cmp
push
adc
xchg
sbb
ficoml
mov
ds
lods
sub
scas
fsubrl
pop
mov
mov
mov
aaa
sub
push
jle
fs
adc
dec
dec
cmc
and
mov
shlb
jl
mov
xchg
adc
or
cmc
pop
arpl
addr16
ret
daa
pop
in
cmp
cli
fcomi
cmpsl
mov
inc
mov
pop
in
insl
inc
pop
out
jae
out
lods
mov
imull
and
lock
cld
insl
inc
add
icebp
mov
xchg
ret
dec
adc
bound
mov
ja
clc
rcll
xchg
gs
mov
push
int3
sbb
jg
sub
stos
cmp
je
inc
mov
adc
cltd
xchg
xor
mov
adc
sub
test
or
hlt
mov
mov
bound
cld
fldl
push
jb
lods
jno
loopne
and
dec
dec
mov
loope
sub
pushf
sti
and
int
ficoml
fcmovnu
inc
xor
inc
ret
add
dec
or
jmp
lcall
push
mov
cltd
mov
outsb
mov
aas
in
ja
movsl
push
adc
inc
out
mov
sub
sub
jmp
lods
sub
sbb
add
push
outsb
cmp
cmpsb
sub
sti
sub
mov
mov
sbbb
int
cld
cltd
in
and
cmpl
in
adc
sbb
mov
sbb
mov
xor
mov
jmp
iret
aas
xor
outsl
pop
popf
cltd
clc
adc
outsl
jne
inc
or
jle
cmc
fiadds
js
mov
out
mov
pop
push
dec
ljmp
add
adc
lmsw
cmp
cmp
cwtl
ljmp
mov
mov
movsb
push
pop
les
aam
xor
xchg
mov
leave
or
mov
call
popl
fcmovu
ret
dec
sub
mov
stc
popf
jge
incl
shl
sub
shll
push
xchg
out
jbe
iret
punpckhbw
fwait
push
inc
or
clc
cli
fisubl
inc
aaa
inc
fstpl
xor
inc
jb
daa
lea
cmp
in
push
pop
scas
adc
out
imul
xchg
aam
jae
pusha
dec
leave
jl
adc
or
pop
and
mov
testb
push
xor
mov
jg
push
out
shl
mov
add
xchg
cmp
jmp
out
xchg
sbb
sti
push
loop
and
in
or
mov
stos
ja
dec
adc
pop
popl
insb
lds
jmp
arpl
mov
dec
add
ficoms
icebp
paddb
xor
mov
imul
inc
rolb
sub
inc
insl
sti
repnz
jl
insl
add
xor
xchg
jne
push
push
loopne
les
add
push
imull
sahf
fstpl
mov
mov
jns
ja
ds
jnp
xor
add
rcr
mov
adc
pushf
cld
fsubl
les
test
or
andl
add
mov
lods
xor
insl
lock
cmp
rcll
add
or
call
pop
sub
out
stc
fdivrp
pop
cltd
dec
js
fmuls
mov
into
and
aaa
mov
push
adc
push
lea
addr16
dec
lret
mov
xchg
mov
out
dec
push
inc
mov
icebp
cmp
dec
add
sbb
mov
mov
notb
ljmp
shll
call
jmp
push
cmp
mov
lods
fidivrs
fildll
call
mov
jg
insb
dec
rclb
ljmp
mov
stos
xlat
int3
pop
sbb
shlb
and
pop
push
movb
jp
aam
dec
daa
add
jge
jecxz
xor
push
addr16
jle
test
es
adc
rcrl
das
subb
fwait
mov
lret
push
cli
push
data16
in
or
pushf
outsb
jmp
inc
clc
je
mov
mov
and
adc
push
xor
dec
fdivrl
push
or
pop
cmp
add
mov
jecxz
mov
lret
movsb
cli
cmc
jp
lock
mov
pop
daa
or
loop
aaa
arpl
push
stos
push
repnz
cmp
xchg
xor
adc
fidivl
inc
sbb
fs
imul
out
or
mov
and
stos
jae
pop
dec
cmp
inc
push
sub
push
xor
sahf
push
xchg
push
rcrb
inc
adc
je
sub
mov
out
mov
stos
aas
push
jmp
mov
es
notl
cmc
jg
sbb
or
shl
lahf
sub
fs
xlat
pop
loope
movsb
in
ljmp
out
xchg
jnp
ret
mov
sub
mov
test
cmpsb
mov
loop
add
pushf
pusha
daa
sbb
adc
jmp
ljmp
jne
stos
fstpl
lds
fldt
cltd
jo
shrl
mov
stos
in
shrl
xor
lret
ret
shrb
arpl
lds
push
je
addr16
outsb
nop
add
ret
subl
clc
sub
add
ss
insl
cmpl
shrl
fildl
pop
mov
dec
pop
movsl
or
pop
stc
xchg
fistpll
outsl
es
cmpl
mov
ljmp
test
cmpb
mov
xchg
divb
push
push
sub
cmp
dec
dec
stc
sti
data16
push
pop
gs
cmpsl
shlb
sub
ss
push
pop
cmp
and
sbb
rorb
mov
add
mov
jnp
popf
into
push
mov
xor
cmpsb
cmp
scas
mov
ss
xchg
sub
mov
jp
mov
ss
lods
sti
push
and
pop
test
adc
push
pop
dec
mov
push
jl
jecxz
dec
pop
jp
pop
jne
mov
insb
andl
daa
sarl
test
inc
sub
mov
jmp
lret
mov
mov
gs
push
adc
adc
and
aad
dec
pop
xor
sti
jle
cmpsb
inc
sahf
mov
jns
xor
lods
push
inc
imul
push
cmp
in
push
jl,pn
xor
cld
pop
shrd
sbb
aas
decl
lahf
add
stos
jns
cmp
or
rolb
xchg
rol
popf
mov
cmp
jge
or
push
mov
faddl
popf
push
xor
mov
mov
rcrb
stos
or
punpckhdq
cmp
ja
hlt
mov
xchg
pop
jle
inc
cmpsl
lahf
int3
stos
jo
and
mov
enter
sarl
popf
or
mov
fisttpll
pop
mov
repz
bound
push
mov
and
mov
mov
aas
push
cmc
mov
mov
fsubrs
das
lods
ds
int3
clc
stc
icebp
aad
repnz
dec
jge
stos
mov
out
add
cmp
lods
xchg
outsb
pop
inc
and
lahf
lds
loopne
cmc
cmpsb
jecxz
jmp
xor
jo
inc
in
mov
es
xchg
push
pop
pop
iret
fs
test
jecxz
hlt
adc
stc
add
push
sbb
cld
fidivl
les
pop
rol
rorl
lahf
jl
pop
sbb
mov
out
pop
int
call
lcall
sbb
test
loop
cmpsl
jno
pop
loopne
roll
out
xlat
jb
sbb
mov
adc
jecxz
push
xchg
call
cmp
mov
push
cmp
pop
jge
fwait
je
movsl
push
les
jns
ja
es
scas
or
scas
xchg
xchg
xchg
or
lret
sbb
insb
dec
nop
sub
imul
out
gs
pop
mov
or
std
hlt
cwtl
push
stos
inc
mov
shll
add
pop
daa
in
cwtl
xor
decb
fsts
xchg
test
jo
mov
adc
out
fs
inc
ret
loopne
loop
sbb
bnd
mov
xor
pusha
lock
nop
sarl
imul
push
xchg
xor
scas
inc
sbb
push
call
inc
mov
mov
cmp
cwtl
pop
ret
in
pop
sbb
out
mov
fucomip
fs
jnp
popf
xor
pop
in
xchg
fldt
xchg
dec
adc
or
dec
out
xchg
sbb
push
inc
enter
sti
xchg
adc
fimull
hlt
in
mov
addl
idivl
jne
test
bnd
xchg
testl
dec
ljmp
sbb
inc
shl
aam
xchg
in
jmp
repz
mov
jns
ja
add
xor
mov
bound
xchg
rcrl
pop
lods
sub
mov
push
inc
outsb
es
dec
push
xor
adc
pop
pusha
popf
mov
push
add
lds
enter
mov
mov
scas
arpl
in
es
iret
fisttpl
jae
lods
cmp
mov
push
sbb
fsts
iret
xor
gs
aam
stos
sbbb
push
inc
adc
xchg
xchg
inc
xlat
and
xchg
je
add
jp
lea
repnz
ret
jnp
push
jle
in
sub
ss
mov
dec
adc
jl
jl
cmc
adc
mov
sub
pop
xor
add
lods
insb
pop
jp
out
pop
cmp
outsb
inc
ret
fisubrs
and
jns
fldl
inc
test
jnp
shrb
inc
jb
inc
xchg
ficompl
in
jecxz
xchg
movl
neg
sub
in
stos
data16
mov
mov
xor
arpl
xchg
adc
iret
lret
out
and
sarl
repz
shr
push
dec
sbb
sbb
lret
cltd
xlat
mov
lret
jbe
fidivs
mov
test
ljmp
pushf
cmc
adc
dec
and
insb
sahf
movsb
out
insb
ljmp
push
pop
add
arpl
sub
dec
out
enter
inc
sub
or
mov
cmp
inc
push
int
mov
mov
pop
sub
lahf
adc
sub
sbb
movsl
test
or
fstl
mov
sti
jb
jmp
or
movb
iret
mov
clc
and
and
leave
jmp
cld
add
fidivrs
push
adc
mov
jns
xchg
adc
jg
push
jae
xchg
xlat
in
aas
xchg
gs
aaa
mov
bound
mov
test
jg
xchg
ljmp
add
cmp
stos
xchg
rorb
cli
pop
xchg
or
pop
xchg
pop
rclb
jg
pop
jecxz
pop
inc
pop
jp
scas
loope
popa
or
aaa
and
mov
fmul
xchg
xchg
lods
aam
ljmp
xor
sbb
inc
hlt
iret
mov
pop
notl
clc
div
push
fbstp
outsl
mov
stos
lcall
and
aad
imul
sbb
loopne
mov
push
ljmp
lods
nop
ss
push
mov
arpl
jns
jb
dec
loopne
out
data16
xor
clc
fs
sub
movsb
xor
mov
rcrl
je
jge
mov
sbb
loop
cmpl
cmp
dec
and
mulb
dec
cmp
add
mov
popa
nop
leave
repz
cmp
push
pop
xchg
insb
lahf
repnz
popa
shl
loope
jno
cmpsb
pusha
test
and
sti
scas
out
push
lret
imul
pop
or
cs
les
pop
shrl
negl
movsb
stc
je
and
ret
shl
lahf
aad
dec
cs
shlb
call
clc
cwtl
mov
sahf
dec
inc
jns
mov
mov
mov
mov
push
sahf
inc
aad
lret
lock
scas
cs
adc
jge
mov
and
mov
add
xor
add
mov
fldl
mov
or
in
and
sti
test
adcl
ror
pop
aad
out
mov
mov
inc
sub
push
iret
rep
int3
mov
rolb
lock
xor
andl
xchg
inc
pop
xchg
test
int
int3
js
imul
sbb
test
cs
inc
mov
xor
push
push
enter
ljmp
jle
orb
jnp
cmp
mov
scas
cmc
and
jo
sub
push
clc
adc
aas
stc
mov
shlb
mov
inc
aam
push
sub
mov
fstpt
repz
movsb
cmpsl
pop
je
lret
mov
gs
mov
fwait
sbb
sbb
idiv
in
rorl
mov
out
dec
adc
and
das
jnp
out
cmpsl
lret
pop
jl
xchg
push
ds
and
sti
jae
lea
outsl
fsubr
pop
push
pop
mov
scas
jnp
cltd
stos
adc
xchg
sub
inc
xchg
pop
das
in
les
addb
push
push
jmp
adc
push
popf
lcall
xlat
cmp
testl
add
test
adc
push
pushf
lahf
sub
jae
pop
mov
and
mov
cli
into
dec
adc
ljmp
out
mov
lea
sahf
sub
push
pusha
ss
hlt
jecxz
xlat
cs
pop
and
ret
cmp
cmc
enter
sbb
xchg
test
xor
xchg
pop
and
insb
fwait
aad
fbstp
jbe
mov
shrl
dec
xchg
xor
lea
cs
mov
jecxz
pop
mov
test
out
xchg
lods
push
fdivs
outsl
repnz
sub
mov
jae
hlt
mov
lret
sbb
out
add
add
dec
adc
push
inc
jmp
add
les
sbb
mov
jge
pop
fistl
je
call
call
or
sub
addr16
add
pushw
adc
and
cld
xchg
loopne
push
or
xor
xchg
push
add
adc
scas
lock
dec
insl
xchg
xor
xorl
pop
pop
les
mov
push
cmpb
mov
outsb
leave
push
aaa
mov
ds
pop
fnstcw
shrl
add
xor
mov
add
ret
orl
jb
clc
cmp
xor
and
or
jp
filds
xchg
inc
insl
out
out
cmp
push
sub
in
int3
in
add
mov
mov
scas
adc
mov
mov
jbe
mov
inc
push
clc
push
fistpll
xor
pop
mov
fidivl
jl
and
jl
insl
aam
test
pop
add
and
fs
sub
xor
stc
lahf
xchg
das
enter
aad
movsl
cmp
add
mov
clc
inc
lds
ret
daa
or
add
mov
sub
mov
jge
pop
xchg
rclb
pop
mov
fdivrs
ljmp
xor
push
or
int
bound
adc
or
mul
pop
lds
shlb
cmpb
mov
jle
inc
mov
pop
lret
daa
mov
scas
lods
je
jmp
xchg
insb
and
pop
shrb
stos
mov
out
jmp
mov
imul
or
sar
mov
loope
push
hlt
push
inc
rcll
leave
inc
scas
outsb
std
adc
enter
into
push
xor
fcoml
pusha
push
sbb
xor
xlat
rcr
jp
mov
movb
testb
xor
orl
adc
push
das
testl
arpl
repnz
lods
mov
stos
fmull
insl
test
arpl
dec
jnp
push
fistps
js
mov
fcmovu
mov
mov
mov
fs
pop
add
push
mov
leave
stos
das
hlt
cli
sub
mov
insb
pop
push
sub
or
lcall
jl
fldcw
cs
in
ja
sub
leave
jns
xchg
adc
pushf
cmpsb
sub
push
ljmp
js
fs
fstpl
mov
sahf
jp
xchg
xchg
shrb
and
adc
cmpsl
mov
xor
cmp
leave
int3
pop
rclb
xchg
or
inc
mov
sahf
add
inc
push
and
roll
or
adc
mov
insl
inc
shlb
cmp
sbb
xchg
mov
popa
ret
xchg
cltd
or
dec
dec
lods
outsb
xor
aas
das
arpl
shll
aam
int
out
push
fistps
arpl
and
cmpsb
cmp
mov
xor
cmp
movsb
push
dec
xchg
ss
mov
test
lods
nop
jg
add
subl
adc
lret
movsl
jecxz
fbstp
imul
sub
lea
js
and
loopne
adc
cmc
pop
push
jmp
xor
gs
pusha
lods
scas
sbb
shlb
jmp
insb
lret
add
dec
aad
mov
insl
push
or
rcl
popa
xchg
icebp
imul
xor
adc
lcall
ljmp
sub
sbb
mov
aaa
imul
jno
stc
mov
jle
cmp
leave
call
add
addr16
loope
pop
repz
mov
mov
adc
sbb
arpl
mov
mov
jo
data16
data16
push
jo
push
cwtl
dec
xchg
mov
imul
mov
imul
repz
xchg
pop
mov
xchg
fwait
test
cmp
xchg
sti
lahf
inc
repnz
or
ja
lahf
rol
out
push
inc
mov
lds
sub
or
xlat
jno
mov
int3
and
lock
mov
call
xor
add
add
or
jno
cmpsb
fldt
xchg
xchg
pop
and
shl
cmp
add
mov
jne
sub
adc
in
int3
pop
xchg
fisubs
jp
addr16
rcl
or
xor
sub
mov
mov
int3
aaa
lods
pop
mov
out
mov
pop
scas
repz
push
int
add
cli
pinsrw
aaa
xchg
fcom
pop
stos
adc
in
loope
ret
arpl
scas
fwait
pop
adc
int3
ret
sbb
in
mov
scas
xchg
cmc
jecxz
push
addps
pop
add
add
fistps
scas
add
dec
mov
aad
jb
hlt
sub
push
or
jp
test
fucomp
adc
xchg
push
and
xor
test
mov
sbb
add
add
loop
jbe
add
decb
or
popa
sub
add
cmp
in
jnp
mov
push
std
cmp
pop
mov
xchg
xor
add
call
sub
insl
clc
mov
push
and
inc
stos
fstpl
imul
mov
cld
push
push
js
jl
iret
pop
in
mov
fsubrs
es
rcrb
stos
enter
push
cs
data16
xor
ja
push
mov
pop
xor
loopne
pop
jp
cmp
rcrb
pop
push
iret
stos
decl
movsb
js
xor
test
je
jecxz
test
mov
jge
dec
sub
jp
loope
or
push
clc
push
pmulhuw
stos
xchg
mov
or
cmp
xor
movsl
sbb
rcrl
testl
into
je
int3
iret
inc
and
push
in
mov
popf
or
sbb
xor
mov
testl
xor
pop
lret
lret
lds
pusha
lds
dec
hlt
sub
shr
cli
dec
int3
pop
fisubrl
dec
push
stos
dec
jo
dec
sahf
jl
push
push
popa
cmc
xchg
mov
mov
inc
jnp
or
xor
push
in
cmp
xchg
out
loopne
cmp
xor
pop
int
stos
das
sbbl
in
inc
in
push
cmp
cmp
xchg
add
cld
movsb
pop
jns
mov
xchg
cmp
psrlw
xchg
push
mov
push
and
pop
pusha
mov
jb
or
or
imull
add
pop
pop
cmp
xor
subb
and
xor
out
jecxz
outsl
mov
dec
or
mov
xchg
cmp
mov
lret
xor
xor
rorb
pop
neg
roll
repz
adc
or
add
dec
push
pop
sbb
add
or
add
nop
mov
cld
sti
adcb
fldlg2
push
dec
fldt
lds
addb
mulb
dec
int
movsb
rcrb
sbb
mov
stc
cmp
adc
xcrypt-ctr
cmpsl
fistl
inc
cmp
adcl
test
xchg
lahf
push
mov
shll
lret
jne
lock
xchg
stos
xor
and
test
rorb
out
rclb
inc
pop
jnp
test
jl
lret
xor
into
fiadds
jl
call
add
xor
stos
insb
push
push
rcrl
dec
mov
dec
jns
loop
jl
cmpsl
mov
das
dec
jo
mov
rolb
inc
cld
out
sub
lea
out
aas
inc
add
fadds
lods
ss
cmp
mov
jne
icebp
cwtl
leave
xchg
fstps
imull
imul
mov
ds
cltd
daa
mov
xor
xor
rorl
mov
cs
ret
cmp
sub
xor
stos
cld
data16
sub
mov
test
sub
jecxz
fildl
mov
movb
push
les
test
adc
dec
in
rol
jge
sbb
xor
leave
pop
cwtl
adc
jp
test
jns
popa
push
jns
push
enter
lcall
cmp
push
jae
jmp
sub
nop
mov
cmp
in
add
jp
jne
xchg
jp
cld
add
mov
sbb
xchg
or
loop
lods
test
in
jbe
adc
out
idivl
rorl
lea
push
fiaddl
jno
ficompl
dec
add
add
into
imul
aad
cmpsl
sti
out
and
mov
inc
out
jge
pop
dec
jp
lea
mov
sbb
add
mov
icebp
scas
mov
pop
lea
sbb
sbb
add
pop
sub
cld
ja
xchg
pop
or
push
adc
and
aas
dec
push
pushf
dec
push
jge
push
pop
xchg
push
std
data16
cltd
adc
or
insl
cs
add
imul
xor
xor
into
jmp
and
repz
mov
sub
fwait
or
mov
loopne
mov
dec
lods
xor
lcall
mov
repz
mov
sbb
xlat
dec
adcb
icebp
xchg
push
mov
sbb
pushf
cli
fwait
nop
nop
pop
pop
cmp
sub
xor
out
or
cmpsl
or
jne
push
xorb
out
roll
testl
ret
fstpt
pop
ret
movsb
mov
bound
lods
movq
shrb
lret
jp
outsb
outsb
push
scas
sbb
sub
mov
cmp
lret
outsb
inc
js
pop
loope
sbb
mov
aad
aad
pop
push
sub
and
xchg
les
rcrl
aas
stos
bound
shrb
nop
popf
adcl
js
dec
push
fsubrp
lret
xchg
outsl
sub
imul
mov
mov
out
add
xor
inc
test
xlat
dec
cld
mov
mov
sarl
in
jo
divl
inc
dec
sbb
lahf
dec
and
fisttpll
mov
std
pop
pusha
pop
jb
sbbb
sbb
das
int3
jmp
hlt
mov
lcall
divb
data16
add
insb
inc
dec
mov
xchg
xchg
pop
push
addr16
bound
loope
jno
stos
xor
pop
les
and
arpl
cli
cwtl
mov
pop
rcrl
out
pop
and
mov
jne
and
scas
jl
fwait
jle
jge
ja
and
xor
push
faddl
int
fidivrl
out
push
int
mov
mov
lret
movsl
fnstenv
in
jle
xorb
add
adc
movsl
cmp
mov
or
nop
out
cmp
ret
imul
inc
and
pop
add
fs
fdivrl
test
popf
sbb
push
mov
sbbl
test
jecxz
stos
andb
mov
adc
fcompl
mov
int
dec
push
add
adc
bound
lds
add
movsb
xchg
inc
dec
dec
lock
fdivrl
pop
inc
loope
rcl
test
and
xlat
inc
mov
or
loop
add
fildll
fidivrl
sub
arpl
lock
adc
or
push
pop
loop
test
pop
repnz
insl
pusha
lods
xor
cmpsb
test
and
jle
cmc
js
lret
xchg
sbb
frstor
fbld
imul
test
push
sbb
ret
push
jns
mov
aas
fimuls
add
mov
cmp
std
pop
jle
ljmp
adc
mov
js
jmp
mov
in
fsubl
in
sti
movsb
sbb
push
mov
mov
insb
mov
or
xor
mov
gs
jle
lcall
inc
add
xchg
shll
jle
loope
dec
pop
cmp
xor
inc
xor
pop
mov
lea
in
adc
and
add
xor
mov
mov
idivl
dec
cmp
sub
testl
add
fcoml
data16
or
push
jecxz
fldcw
clc
test
mov
popf
and
adc
mov
cmc
ds
cmp
xchg
adc
mov
in
lods
scas
mov
aaa
icebp
sub
and
push
sub
out
push
mov
and
test
test
adc
ret
popa
sbb
decb
sbb
inc
ss
dec
jnp
push
enter
mull
or
mov
daa
mov
out
pop
mov
sbb
jl
cmp
push
pushf
push
sbb
test
jns
inc
data16
adc
popa
es
xor
aad
jae
int3
into
mov
test
jno
orb
push
je
inc
cli
mov
adcl
sub
ss
sbb
sbb
call
xchg
cli
loop
andl
in
adc
icebp
mov
dec
mov
xchg
sub
sub
fldenv
iret
fstp
shll
mov
adc
mov
adc
and
lds
and
imul
into
ret
jl
cmpsl
and
lds
decl
cwtl
out
add
shll
loope
pop
inc
cmpsb
test
rorl
sub
xor
cmpsb
push
xchg
xchg
adc
inc
pop
mov
ror
fsubr
inc
xchg
sub
out
fnstcw
pop
mov
or
sbb
push
data16
jb
seta
sub
jo
sti
mov
adc
dec
sbb
jno
xchg
jecxz
lcall
je
test
push
in
push
pop
pop
test
and
xor
outsl
jo
jle
cmp
dec
ljmp
xor
pushf
pop
lret
cmp
mov
sub
xlat
add
add
fcoml
inc
fs
push
jl
jae
cmpsl
stos
clc
fs
call
mov
loope
mov
dec
push
xchg
cmp
add
shrb
pop
hlt
xor
xchg
mulb
adc
push
mov
shlb
cmp
push
dec
mov
lea
nop
cmc
jg
lea
nop
sarl
pop
dec
lds
int
inc
sbb
loopne
push
dec
cmp
imul
inc
pop
ret
adc
push
xchg
in
cltd
cmp
jmp
fistl
in
jne
jb
jbe
and
add
cmp
gs
mov
and
push
push
in
addb
pop
pop
daa
ljmp
jg
push
call
sub
out
and
mov
fisubrl
lret
push
mov
lods
mov
aaa
jo
dec
sub
popf
jns
dec
inc
push
adc
leave
scas
jcxz
sub
xchg
lods
mov
out
push
and
pop
xchg
fidivrs
jge
inc
or
inc
pop
xor
jae
mov
push
or
xchg
xor
jge
scas
dec
push
ret
daa
pop
aam
in
out
and
rclb
jbe
dec
jnp
sub
fwait
shl
add
out
shrl
inc
push
mov
xchg
and
popa
lret
js
lahf
mov
add
ret
or
fnsave
enter
aam
xor
int
jmp
mov
mov
lods
cs
sbb
out
xor
cmp
and
sbb
es
fstps
test
and
cs
movl
aam
xchg
test
stos
or
fs
lret
and
xchg
inc
pop
mov
xor
adc
es
fstpl
cs
sub
xor
cmp
and
inc
std
inc
mov
cs
ffree
push
sbb
daa
and
out
mov
sub
and
pop
pop
dec
dec
adcb
aas
imul
lahf
addr16
les
xchg
testl
cmpsb
jg
pop
icebp
leave
in
lret
lret
xchg
inc
xchg
sbb
clc
dec
cltd
xchg
shlb
inc
pop
dec
add
or
cmp
cmp
adc
testl
imul
test
and
xor
or
std
das
push
mov
fsub
mov
repz
repnz
jle
mov
jbe
push
test
push
mov
stos
cmc
stc
adc
xor
jne
in
inc
lcall
jg
std
and
jmp
in
or
lods
adc
xor
add
das
test
pop
fs
jns
mov
and
mov
sub
add
movsl
je
outsl
sbb
fs
popa
call
cltd
or
stos
cmp
test
fcompl
stos
dec
inc
in
push
js
stos
dec
lahf
fcompl
pop
fcmove
fmuls
pop
aaa
dec
push
sbb
pusha
loopne
gs
and
test
mov
test
cli
bswap
adc
jbe
xchg
fisubl
jnp
mov
mov
movsb
lahf
adc
mov
adc
adc
push
or
bound
shll
in
frstor
jmp
add
push
popa
mov
cmpsb
and
cli
movsl
pop
jp
arpl
movsb
lret
jmp
lret
ficomps
aaa
mov
mov
mov
adc
psubq
fs
add
push
jg
fs
jmp
push
pop
arpl
xorb
movsl
jns
mov
in
adc
test
sbb
pop
enter
insl
std
sbb
lahf
jle
fcmovne
leave
ret
in
and
adc
repnz
aas
xchg
stos
push
xchg
and
mov
enter
test
ds
mov
out
int
popa
test
sahf
jb
inc
imul
or
hlt
xchg
mov
jnp
insl
or
fists
shlb
and
jns
scas
imulb
inc
xor
test
pushf
pop
mov
cld
jmp
sar
js
shlb
in
lret
mov
pop
stos
scas
push
cmp
out
es
push
addr16
inc
ret
leave
rolb
xchg
pop
gs
xlat
fstps
adc
adc
mov
aad
insb
xor
mov
cs
xor
xlat
or
jnp
shll
loope
int
jns
clc
loop
pop
stos
das
cmp
loopne
xor
nop
repz
mov
pop
mov
in
nop
adc
cmp
divl
mov
add
aaa
mov
adc
roll
mov
cmp
or
sbb
lahf
pop
sbb
inc
data16
push
and
jbe
clc
pop
aad
cmp
sbb
jle
inc
sub
imul
imul
push
add
lret
shlb
shrl
or
mov
jo
stos
idivb
das
popa
fstpt
add
push
gs
popa
stc
dec
xchg
ss
fucom
sahf
or
mov
pop
test
push
push
mov
in
in
orb
push
pop
les
cli
pop
inc
shrl
stos
sbb
aas
je
imul
js
pusha
test
bound
call
mov
push
sahf
movsl
loope
rclb
sbb
sub
inc
roll
mov
test
dec
pop
push
add
inc
lret
leave
in
pop
in
sbb
mov
xor
xchg
xor
and
pop
enter
fisubrl
shrb
ficomps
mov
lahf
inc
into
fidivs
leave
test
mov
cmp
mov
cs
imul
push
sbb
aaa
push
jge
in
push
icebp
or
int3
sbb
shlb
xor
popf
loop
ljmp
mov
out
js
data16
jae
lret
push
ret
rcrl
outsb
fidivl
pop
movsb
adc
mov
push
pusha
cwtl
movsb
aaa
fcmovbe
test
pop
and
stos
sbb
and
orl
popa
or
pop
sbb
loopne
scas
lret
or
and
cmp
fisubrs
lcall
jp
pop
les
push
sbb
stos
dec
popa
out
popa
or
mov
subl
add
jge
scas
or
xor
xchg
jmp
and
mov
testl
jo
sbb
push
notl
scas
stc
dec
jecxz
pop
jle
mov
ret
sbb
cwtl
pop
mov
mov
and
lahf
push
js
ret
adc
add
xchg
fimuls
or
sbb
lret
loop
xchg
cmp
frstor
push
clc
sbb
mov
cwtl
xor
mov
in
in
cmp
jnp
clc
xlat
cmpsl
data16
ja
dec
shll
mov
push
je
xchg
or
lahf
cwtl
mov
push
pop
push
push
shlb
or
jb
movsb
ret
xchg
in
xchg
call
adc
in
mov
push
mov
jle
pmullw
loope
jge
popf
ret
mov
into
sub
xor
sub
loop
sub
pop
add
data16
inc
js
or
jge
repz
pop
dec
push
cmpsb
mov
imul
cmpsb
jae
into
inc
inc
mov
daa
in
out
loop
mov
sbb
dec
jl
xchg
and
sar
or
inc
add
in
out
pop
ret
pop
and
ficomps
adc
mov
out
insl
xchg
push
cmp
cmc
int3
dec
inc
ljmp
jp
xor
xor
mov
xor
and
sbb
sub
lret
inc
pop
rorb
dec
jne
jns
mov
fdivrs
iret
mov
insl
sub
push
testl
cmp
fstps
ljmp
out
mov
jb
adcl
int3
jmp
movsl
adc
xchg
push
cmpsl
lds
adc
das
int3
xlat
or
aas
cmc
fdivrl
sub
lahf
cs
add
rclb
pop
loope
pop
fwait
dec
fisttpll
push
xchg
cmp
mov
movsb
out
fldl
jae
jns
jno
inc
leave
mov
mov
cmp
in
leave
xor
sub
cmc
daa
les
push
out
test
mov
fisubl
mov
test
neg
sbb
fbld
psubsw
add
sub
popa
insl
std
loop
notl
mov
mov
je
les
mov
adc
scas
dec
jb
mov
cwtl
pushl
sub
cwtl
mov
arpl
xchg
inc
je
mov
shrl
sbb
int
inc
fldt
and
mov
mov
sti
dec
or
cld
cmp
bound
jge
cmpsl
inc
les
outsb
pop
pusha
mov
fcomps
lea
out
mov
lea
mov
jae
stos
negl
stos
rorl
rorb
int
add
sti
lock
lret
mov
mov
cwtl
add
lcall
pop
ret
jae
iret
push
xor
pop
hlt
xchg
pop
mov
cmpb
push
ret
xor
test
push
out
mov
or
or
lock
fistpl
pop
pop
inc
pop
mov
push
sbb
rclb
dec
mov
int3
in
icebp
imul
test
add
dec
lods
icebp
loope
mov
movl
gs
pop
pop
add
dec
outsb
jecxz
in
pushf
cmp
test
lods
ljmp
testb
flds
cmpsb
das
in
loop
lods
sbb
sub
scas
push
inc
sarb
sub
jecxz
xor
push
fisubs
jp
dec
jp
pusha
ret
cli
dec
adc
scas
dec
push
adc
push
xchg
sub
sahf
sbb
adcb
rcl
mov
mov
sahf
ljmp
push
sub
mov
inc
and
insl
and
pop
daa
add
jecxz
jp
push
add
pop
int3
test
mov
stos
imul
lret
adc
and
push
jge
cmc
cmp
lds
mov
in
or
mov
testb
mov
addr16
mov
repnz
xor
hlt
imul
popf
xchg
add
fwait
in
xchg
out
int
rorb
jno
sbb
push
xor
enter
in
xchg
sub
add
and
adc
adc
call
mov
pop
bound
dec
mov
cmc
loope
sbb
fisubs
bound
test
arpl
dec
push
pop
jns
xor
sbb
aas
idivb
adc
icebp
push
dec
stc
pop
mov
orl
iret
xor
test
cltd
mov
jecxz
or
sub
and
lgs
mov
movsb
add
cs
mov
xchg
xchg
mov
jne
and
cs
mov
jp
ret
or
mov
push
negb
push
popa
gs
xlat
ret
mov
aad
cwtl
icebp
cli
or
insb
ljmp
and
cmpsb
outsb
xchg
mov
sub
notl
ds
lods
iret
imul
ljmp
jo
jmp
lahf
inc
sahf
dec
push
ret
popf
dec
adc
cmp
lds
inc
mov
mov
add
imulb
out
mov
xchg
adc
xor
fbstp
or
adc
xor
adc
mov
pop
jmp
mov
mov
pop
stc
out
push
jecxz
sbb
dec
std
cmc
add
adc
insb
pushf
ss
cmpsl
adc
lds
or
jnp
in
jg
jle
cmc
sub
sbb
fistpl
movsl
push
and
dec
cli
les
popa
movsl
adc
arpl
add
jae
fs
push
inc
negl
in
sbb
adc
adc
lods
pop
dec
dec
insl
cmp
sub
scas
popf
lock
shl
ja
stos
das
sub
push
jbe
cld
lock
mov
dec
jns
movsb
inc
in
xchg
pop
in
or
adc
imul
jno
iret
jnp
out
roll
rol
fisttpl
sub
mov
orl
sbb
push
add
iret
sbb
adc
rcr
in
repz
xlat
dec
hlt
or
cmp
inc
xor
push
dec
repnz
idivl
fwait
cli
xor
and
push
aas
jp
add
inc
push
adc
fdivrl
push
push
sub
jp
mov
negb
push
adc
daa
loop
and
cmp
dec
adc
stos
mov
jae
mov
je
jno
popa
gs
mov
int
dec
sub
jmp
xor
pop
negl
test
dec
sub
movl
fiadds
dec
adc
mov
dec
dec
xchg
sahf
les
inc
mov
or
mov
xchg
scas
outsb
pop
xchg
push
in
popl
push
push
cmp
insl
or
xchg
fmull
ret
or
pop
pop
push
add
hlt
lods
add
div
cmpsb
iret
inc
nop
and
and
inc
into
mov
pop
sub
jns
jae
pop
adc
pop
dec
clc
mov
subb
dec
mov
cmpsl
out
aas
movsb
repz
or
das
mov
addr16
mov
pop
out
pop
insl
push
cld
mov
dec
notl
cltd
jno
cmp
repnz
xchg
js
add
xrelease
sbb
iret
scas
lret
pusha
pop
bswap
xchg
lods
imul
sbb
pop
mov
imul
aad
lcall
pop
fistpl
add
test
mov
dec
test
incl
mov
dec
lret
push
out
and
je
add
pop
add
adc
inc
push
xor
inc
jo
addb
jo,pt
or
enter
out
adc
sahf
dec
fs
xchg
cld
mov
mov
das
popa
push
cmpsb
mov
or
xchg
stc
xchg
jmp
xchg
out
std
test
sbbl
pop
nop
jns
test
fsubs
inc
cli
pop
sub
decb
push
int
mov
pop
mov
adc
cltd
dec
lds
mov
jno
dec
push
xor
and
pop
std
ljmp
jp
xor
sbb
add
daa
mov
fwait
negb
cmpsb
cli
ljmp
pop
decb
jb
mov
jns
and
mov
inc
push
rorb
repz
jae
add
jecxz,pn
jae
sahf
insb
pop
lret
aad
pop
cs
lods
insl
sbb
add
fsubrs
lods
jmp
fiadds
rcll
call
adc
sti
jg
mov
pop
loope
and
push
sbb
adc
push
pop
xor
bound
jle
mov
mov
adc
or
sbb
fidivs
into
cmc
xchg
mov
call
pusha
mov
cltd
mov
inc
icebp
add
xchg
lret
pop
lods
sbb
adc
outsb
push
sahf
push
pop
ror
popl
andl
andb
cmp
out
out
xchg
add
scas
sahf
jge
out
ret
jo
stc
cmpsb
scas
add
cltd
add
arpl
pop
jl
add
sub
sbb
jmp
push
jl
ljmp
cmpl
push
call
adc
adc
outsl
fstpt
sbb
daa
into
xchg
hlt
lahf
scas
jle
sub
mov
arpl
inc
xor
sbb
es
popf
pop
outsb
xlat
adc
lods
stc
adc
mov
mov
addb
call
sub
lahf
or
aaa
and
loop
outsb
pop
inc
cmpsb
cld
stc
imul
xchg
es
scas
hlt
jb
jb
aaa
es
adc
jge
or
sbb
sti
aad
lret
ss
fldenv
mov
pop
into
popf
scas
fistps
mov
mov
jbe
movsb
sub
in
das
adc
or
mov
push
leave
std
imul
adc
std
mov
xchg
call
xchg
jne
push
cmpsl
push
sbb
scas
mov
scas
out
mov
mov
push
sahf
inc
mov
aaa
cmp
loope
popa
sbb
jno
add
mov
insl
pop
ljmp
pusha
push
push
push
add
testl
jmp
test
stc
dec
inc
mov
aad
mov
dec
sti
cwtl
xor
inc
add
lret
out
data16
xor
pop
dec
jl
sbbb
rclb
in
or
rcr
leave
iret
push
fsubrl
push
dec
xor
in
jns
test
dec
cld
scas
clc
jp
add
iret
add
fsubl
pop
mov
or
scas
je
inc
pop
jl
xchg
aaa
call
das
sti
xor
out
mov
dec
je
shl
sub
fstl
and
pusha
dec
insl
adc
add
repz
js
test
dec
loope
iret
psadbw
aad
jle
insb
mov
int
mov
adc
push
sbbl
add
sbb
mov
sub
int
jae
push
cmp
sbb
push
cmp
frndint
jne
jmp
sbb
mov
imul
stos
sub
je
mov
and
lods
aam
inc
xor
dec
mov
push
add
push
mov
shll
dec
cmpsb
movsl
inc
pop
mov
push
fsts
adc
add
popa
or
jl
jg
cmpsb
sbb
dec
jge
mov
add
cmc
inc
push
pop
adc
movl
and
mov
pop
jl
fidivs
inc
cmp
mov
mov
fistpll
loopne
arpl
shlb
pop
lds
mov
mov
xchg
repnz
and
sub
push
jnp
stc
stos
jmp
pop
outsl
dec
cmp
mov
testb
mov
stc
loop
mov
loop
mov
add
ja
jnp
imul
xchg
loope
inc
dec
bound
mov
test
nop
push
sbb
test
inc
lods
mov
js
fcmovnbe
inc
and
pop
mov
dec
xchg
pop
insl
sbb
cld
mov
inc
sbbl
imul
pop
sub
pop
cmp
and
xchg
sarb
imul
xchg
mov
std
dec
jmp
das
add
gs
lock
xchg
jns
lea
jae
jmp
in
out
cmp
cltd
je
xor
mov
mov
add
push
out
or
push
jle
popa
pop
adc
lds
ss
cmp
mov
in
out
adc
nop
add
cld
jne
mov
dec
mov
pop
sar
mov
arpl
outsb
push
test
ds
cmc
or
pop
push
xor
je
leave
or
mov
or
or
xchg
movsb
rcrl
adc
push
out
inc
ja
pop
sbb
jnp
xchg
repnz
push
mov
jb
clc
int3
jbe
ficomps
pop
int3
mov
mov
iret
xor
adc
mov
ss
sub
in
lods
mov
mov
mov
roll
and
aad
sbb
cmp
cmp
frstor
sub
mov
xor
pop
test
sub
dec
mov
push
jmp
fwait
ret
das
jge
xlat
lea
and
mov
addb
imul
daa
xchg
js
push
dec
movsl
aam
push
dec
xor
mov
out
cmpsl
ret
pushf
xor
mov
pop
add
repz
test
xor
push
mov
jg
jmp
xor
or
imul
inc
mov
gs
mov
sub
jmp
mov
push
or
mov
xor
mov
inc
jae
push
test
mov
out
dec
movsb
in
aaa
pop
fistpll
icebp
mov
pop
mov
jp
sub
cltd
aaa
aam
out
push
mov
pop
bound
jecxz
sti
adc
sub
push
in
cltd
gs
imul
push
adcb
push
and
mov
mov
xchg
and
cmp
push
add
and
shrb
push
add
push
neg
fabs
xchg
adc
sti
cld
jne
dec
fucom
mov
rolb
adc
repnz
stos
pop
int
scas
lods
rolb
out
inc
dec
int
xlat
pop
hlt
mov
int3
xor
loopne
mov
ja
push
rcl
hlt
jnp
mov
pop
call
cmp
xchg
inc
cmc
mov
inc
call
or
imul
dec
and
in
dec
and
movsb
adcb
xchg
loop
shll
out
push
inc
lea
xor
data16
movq
aaa
cmp
mov
mov
jne
xchg
sub
dec
lahf
push
pop
jbe
sub
pop
leave
push
cs
dec
xchg
imul
loope
xor
mov
loope
gs
arpl
jnp
mov
fcomip
mov
mov
dec
leave
leave
stos
push
mov
inc
mov
ja
xchg
hlt
cwtl
fmuls
mov
xchg
lods
insb
jnp
movsl
mov
mov
sub
pop
mov
cmc
mov
das
int
sbb
cli
cmc
orb
add
inc
aam
xchg
int
pop
xchg
out
in
frstor
cmc
xchg
cmp
orl
add
xor
repnz
xor
daa
and
stc
aaa
stos
jbe
outsl
inc
mov
addr16
scas
push
movsl
inc
pop
rorl
mov
add
movsl
mov
cmpsl
push
xor
inc
adc
mov
cmp
pop
xor
rcll
enter
sub
add
xchg
adc
in
or
mov
test
jae
shrl
sahf
mov
dec
sbb
js
xlat
mov
repnz
scas
leave
stc
stos
in
lret
dec
pop
cmp
xchg
sbb
adcb
add
mov
cmp
fucomi
adcb
rclb
test
adc
pop
push
inc
pop
push
mov
mov
and
ljmp
jnp
leave
cltd
push
mov
movsb
xchg
mov
push
xlat
out
dec
push
enter
cmpsl
inc
lret
pop
mov
es
popa
jmp
add
sbb
cltd
repz
pusha
cmp
push
sub
stc
lcall
mov
je
inc
fwait
shlb
sbb
mov
stc
sub
js
imul
and
in
shlb
aad
and
data16
and
xor
stos
jle
jle
xor
xchg
mov
inc
cltd
xor
dec
jmp
fadd
jmp
aam
add
shlb
insl
jnp
mov
test
fsubs
leave
out
int3
in
lea
clc
add
ss
mov
aad
loope
mov
jp
outsb
and
add
sbb
sbb
enter
ja
pop
fnstsw
inc
cltd
pop
add
cmp
dec
test
sbb
cmpl
lds
cmp
xlat
imul
or
into
mov
dec
testb
dec
push
rcl
and
push
xchg
cs
lret
frstor
hlt
and
push
adc
push
or
nop
mov
add
adc
mov
rclb
inc
scas
es
pop
dec
xchg
dec
imul
in
aas
sbb
mov
adc
mov
out
jg
pop
mov
sub
icebp
fwait
aad
loopne
add
cld
mov
jp
icebp
int3
pop
popa
lea
les
sbb
push
es
pop
mov
inc
mov
xor
mov
lods
mov
adc
into
inc
jo
add
dec
jae
scas
push
scas
scas
movb
lahf
mov
sub
dec
pop
or
jo
adc
icebp
mov
popf
lcall
subb
pusha
sbb
pop
sarb
clc
or
or
leave
roll
es
inc
jno
adc
int
jmp
lret
or
lahf
mov
int
sbb
aam
inc
js
pop
aaa
cmp
iret
iret
or
adc
fcompl
loopne
and
and
dec
add
push
xchg
arpl
testl
and
xor
xchg
jmp
pop
pop
addr16
sarl
jno
fisubs
addr16
or
jae
xchg
xchg
ret
sbb
sbb
xor
in
cmp
push
cld
das
ret
xchg
cmp
cmp
inc
xor
negb
cmpsb
int
xchg
pop
push
add
les
out
aaa
inc
mov
sub
stos
dec
or
mov
sahf
iret
cmp
roll
addr16
jb
inc
mov
inc
lea
loop
call
loop
push
mov
mov
mov
les
ja
testl
xchg
lock
icebp
test
sbb
scas
lcall
gs
loope
int
push
jmp
mov
sub
cwtl
pop
lahf
cmc
or
pop
push
jbe
cmp
adc
dec
in
shll
enter
push
mov
cmp
xor
or
sub
and
xchg
data16
pop
lret
jmp
mov
pop
inc
imul
sbb
push
pop
mov
aas
into
and
pop
jnp
xchg
xor
mov
subb
fsub
push
sbb
nop
pop
xor
stos
mov
rorl
rcr
xchg
out
push
repz
add
mov
cmp
and
dec
lret
aaa
adc
out
popw
jae
std
mov
js
push
dec
xlat
cmp
mov
cltd
lcall
xor
mov
out
clc
mov
xchg
pop
and
sahf
lds
in
sbb
jb
adc
lahf
fisubl
fdivrl
cmp
int3
bound
sub
rclb
xchg
xchg
aam
mov
test
dec
sbb
popf
push
ret
pop
push
jnp
enter
or
or
jae
lcall
add
aas
inc
cltd
sub
push
pop
mov
movsb
or
inc
popa
mov
adc
aas
fwait
xchg
in
mov
fldenv
push
pop
mov
mov
or
xchg
sub
popa
inc
out
dec
pop
and
mov
push
sub
push
shr
popf
ret
mov
dec
cmpsl
mov
cmp
jno
or
iret
xchg
leave
jb
pop
jb
loopne
fisttpll
jle,pn
and
icebp
stc
push
daa
cli
lret
int3
mov
pop
loop
ror
jo
jbe
mov
rcrl
jb
pop
jns
imul
mov
pop
jae
mov
cwtl
in
push
cmp
add
movsb
pop
adc
inc
es
inc
lods
sbb
stos
or
lret
inc
mov
jp
adc
ja
cmpl
cmp
mov
js
fnclex
pop
rcll
lods
lock
push
adc
fbld
lock
xorb
lods
xchg
lods
add
mov
xchg
xchg
in
xor
push
ret
mov
call
lret
cmpsl
adc
je
fldenv
fs
cmpsl
fildll
lock
xor
outsb
ret
cmp
insl
les
sarb
xchg
ds
ffreep
mov
mov
call
sbbb
movsl
push
inc
lcall
ljmp
bound
lods
insb
lret
mov
push
mov
xor
out
scas
imul
push
pop
mov
xchg
cmp
or
popa
fists
ret
aas
jnp
rcr
sub
fbld
cmpsl
cld
xor
pusha
push
mov
and
push
mov
mov
scas
fnstenv
sbb
sub
je
xor
and
jne
jo
in
dec
inc
mov
daa
mov
and
xchg
xchg
addr16
and
test
out
lods
lods
shlb
lret
dec
mov
and
sbb
cwtl
jl
inc
inc
and
push
pop
js
outsb
leave
dec
mov
test
clc
clc
mov
pop
sti
inc
xchg
mov
subb
clc
sbb
rorb
push
leave
call
punpckldq
sbb
cs
jb
maskmovq
testl
xor
test
cli
addl
jge
xchg
addr16
inc
popa
in
stos
mov
pop
ret
pushf
or
loopne
cli
mov
jg
jle
lret
cs
nop
inc
pop
jmp
push
dec
add
xchg
data16
adc
pop
popa
es
sbb
rcrl
int3
ljmp
or
push
add
and
fstpl
outsb
lret
ja
pop
sbb
dec
sub
repz
or
mov
sahf
jge
rdtsc
cmp
out
out
push
mov
nop
lods
push
ret
int3
test
sub
ja
rclb
mov
aam
and
mov
lods
xlat
add
xchg
jg
out
repz
movl
je
lods
xor
xchg
pop
jle
xor
cwtl
cli
inc
imul
cmpsl
in
aad
inc
pop
loopne,pt
dec
fldl
cmpsl
movsb
out
in
mov
and
pusha
test
incb
jb
lods
imul
dec
scas
rcrb
mov
movsl
ss
fsubr
cwtl
push
jo
rcll
nop
mov
lods
mov
fnstenv
pop
mov
sahf
adc
cmc
cmp
add
stc
addb
adc
add
mov
in
mov
iret
scas
cwtl
repnz
mov
sti
cmp
mov
pop
shrl
fldenv
shll
stc
or
cmp
mov
shrb
push
inc
aas
fs
mov
pop
pop
xor
pop
sti
outsb
pop
push
test
mov
ljmp
pushf
inc
out
sti
roll
inc
and
sub
and
and
mov
mov
mov
lret
repnz
or
mov
jl
in
lds
pop
jns
push
gs
aaa
test
pop
dec
dec
vcvtsi2sd
lcall
push
pop
mov
repnz
lods
lret
adc
cwtl
push
pushf
adc
into
mov
adc
xor
in
roll
stos
and
in
push
or
jecxz
xchg
jo
pop
or
aad
lock
rol
cmp
gs
ljmp
add
xchg
cmp
add
dec
fstpl
into
ret
das
pop
call
bound
dec
loop
jns
dec
or
add
leave
cmp
pop
lods
inc
cmp
and
insb
mov
add
push
cltd
pusha
insl
push
xor
mov
dec
jle
cmp
rcrl
lds
icebp
sub
jbe
es
lds
fld
lahf
pop
pushf
mov
and
jp
ljmp
add
sbb
sbb
stos
in
push
cmpsb
xor
daa
dec
mov
dec
outsl
pop
popa
in
notb
ficoml
inc
loop
pop
call
shlb
xchg
push
cmp
fists
jg
popf
cmp
out
les
jge
push
add
cmp
xor
sti
mov
aas
mov
mov
mov
insl
jb
lods
xchg
icebp
mov
push
sub
sub
or
push
subl
or
in
int3
stos
stos
sarb
xchg
mov
pop
or
adc
mov
mov
jp
and
sbb
cmp
pop
hlt
jne
imul
xchg
aad
mov
ret
arpl
into
xlat
lcall
pop
scas
loop
pop
xchg
dec
sub
pop
and
inc
adc
test
jp
mov
adc
inc
dec
push
in
ret
dec
sbb
pop
div
dec
sbb
das
dec
push
jmp
mov
xor
rclb
loop
sbb
enter
in
inc
inc
xor
inc
mov
or
dec
jmp
cmpsl
inc
ret
lret
sbb
test
push
pop
adc
lds
inc
sarb
dec
xchg
loope
cmpl
cmp
and
sub
dec
sbb
jmp
addl
pop
fcomp
and
in
fidivs
notb
cmc
xor
rcr
cmp
pop
push
lahf
cmp
sti
jae
and
in
sub
ljmp
dec
and
sbb
mov
xchg
ret
daa
and
movsl
xor
inc
sub
mov
jp
aaa
and
insl
stc
out
imul
mov
push
xor
sbb
and
adc
pop
mov
push
arpl
pop
out
jmp
dec
and
push
sbb
mov
out
imul
fistpl
mov
out
iret
cmpb
cmp
cmpsb
mov
cmpb
aaa
mov
das
cmpsl
mov
rclb
jo
sbbb
sti
fld
dec
cmp
movsl
lea
pushf
xor
mov
cmp
cs
cmp
jne
imul
cld
gs
sbb
pusha
xchg
or
imul
jl
int3
or
fcoms
rorb
cmp
push
clc
jb
aas
daa
repnz
test
int
aaa
test
mov
adc
cmpsl
pop
fcompl
nop
jbe
xor
leave
mov
or
mov
in
in
ja
and
in
xchg
ret
bound
ret
mov
cmp
cld
and
cmp
mov
adcl
xor
or
pop
dec
cmc
pop
gs
ret
stos
jmp
xchg
lea
pushf
or
aaa
pushf
mov
pop
mov
ds
sub
pop
xor
into
adc
movsl
loope
mov
stc
bound
test
movsb
fiaddl
addr16
rcll
cmc
sahf
jecxz
cltd
or
push
xor
stc
movsb
cmp
nop
adc
jge
sahf
dec
enter
or
inc
arpl
inc
outsb
les
rolb
dec
mov
fld
shl
and
push
fdivs
push
xchg
sbb
push
mov
jecxz
orl
insl
lea
inc
inc
das
inc
sti
adc
fdivp
and
sbb
mov
cmp
adc
mov
inc
push
cmp
rcl
into
sub
adc
mov
jle
inc
mov
cwtl
popl
dec
jge
notl
pop
out
call
inc
imull
inc
xor
push
cmp
xchg
aas
and
rcrb
sub
movb
aas
arpl
mov
mov
jl
int
pushf
xchg
daa
fs
mov
les
lret
fmull
adc
scas
or
jmp
push
and
fidivs
mov
int
jmp
lods
movsl
pop
sbb
arpl
and
fwait
out
dec
loopne
stos
testb
and
outsl
xor
mov
inc
scas
pusha
cmp
shr
out
lahf
mov
dec
cs
pop
mov
pop
sbb
xchg
mov
sub
or
divb
jne
adc
popa
mov
jne
and
pop
inc
sbb
push
in
js
sahf
scas
int
dec
jo
jecxz
push
aam
pushf
pop
add
popf
mov
push
cmp
mov
rorb
dec
rcll
gs
dec
pusha
sbb
jge
cs
orb
cmp
iret
sti
inc
lods
cmpsb
dec
push
fidivs
loope
cmp
in
stc
push
stc
fs
ret
jns
mov
cmpsl
nop
test
ljmp
loopne
aaa
mov
in
arpl
pop
lods
vmovupd
lret
rol
mov
int3
jl
bound
repnz
jnp
dec
and
mov
mov
mov
jns
mov
je
or
out
pop
or
sub
out
lods
push
stc
incb
lcall
daa
xor
iret
mov
or
loope
mov
clc
dec
inc
repnz
test
dec
ds
sub
pop
movsb
repnz
dec
sahf
cmp
pop
mov
xor
aas
cmc
popa
repnz
cmc
push
pop
sbb
xchg
jecxz
outsb
stos
xor
jecxz
jge
or
cmp
mov
cwtd
fildll
mov
lcall
gs
pop
icebp
xchg
xchg
pop
pop
mov
dec
stos
fildl
lods
pop
sbb
shrb
push
xor
xchg
scas
clc
fnsave
pop
test
repnz
mov
in
adcb
rorl
xor
ja
mov
test
ret
mov
mov
cwtl
push
sub
dec
test
adc
cmp
popf
pop
adc
mov
ret
inc
aad
or
das
sbb
sti
scas
sub
jbe
dec
mov
das
rclb
lea
adc
popl
shr
sub
mov
and
inc
int
and
push
cltd
fdivrl
dec
test
outsl
jb
aad
sub
ja
mov
pusha
dec
jge
scas
aam
add
fisubrl
mov
xor
push
jb
test
mov
or
dec
dec
rcll
xchg
clc
pusha
mov
ljmp
cmp
jl
sti
notb
je
and
bound
cs
ret
ljmp
outsl
js
minps
mov
imul
or
xchg
sub
mov
xor
cmp
sbb
xlat
pusha
jno
lahf
xchg
clc
std
mov
cmp
nop
and
fadds
test
lret
ret
mov
xlat
sub
lahf
ret
xchg
sbb
dec
pop
fptan
pop
rcrl
xor
push
inc
lods
xor
or
out
cli
mov
cld
add
mov
leave
mov
pop
xchg
sub
imul
inc
mov
mov
aam
cmp
dec
outsb
stc
xor
push
ret
dec
pop
mov
stc
andl
xor
pop
ret
cmp
lcall
pop
in
int
pop
shll
inc
mov
fsubrs
cmpsl
cmp
insb
mov
fwait
pop
mov
add
and
and
xchg
iret
sub
repnz
cmpsl
lods
bound
mov
repz
aas
push
in
cmpsb
jp
mov
das
cmp
jecxz
decb
mov
dec
aad
xchg
fdivl
orl
cmp
inc
mov
and
dec
add
mov
mov
cmpsl
add
dec
mov
mov
pop
sub
sbb
repnz
mov
fcmovbe
shll
jmp
test
xchg
inc
cltd
cmpsl
fs
mov
xchg
or
mov
test
and
ss
testb
jge
cmpsl
out
stos
inc
push
loope
es
popa
mov
fimuls
xor
fs
jecxz
dec
popa
mov
jae
add
mov
jae
sbb
daa
dec
or
mov
xchg
lds
and
and
enter
movsb
cmp
xchg
mov
or
cmp
shrb
jns
ror
cld
shlb
mov
sub
es
imul
push
shlb
fidivrl
pop
dec
cmpsl
les
jp
leave
mov
or
xchg
jnp
dec
mov
lcall
add
adc
stc
lret
push
ja
mov
rcrl
ljmp
into
pop
xchg
jmp
dec
mov
inc
lods
subb
orb
int3
adc
std
rorl
fbld
lcall
pop
mov
cmp
stos
pop
dec
inc
pop
jmp
sbb
int3
fdiv
enter
mov
scas
inc
mov
cmp
adc
lahf
jmp
aad
lcall
daa
jl
inc
stos
inc
sbb
push
insb
out
dec
mov
test
xlat
mov
lock
push
jns
inc
add
jl
and
cmpsl
insl
or
adc
outsl
cmp
jnp
sbb
mov
jmp
inc
inc
jb
popa
into
mov
into
mov
sub
dec
xchg
mov
and
rcrb
rorb
or
insl
cmp
in
cmpsl
mov
sub
adc
sbb
adc
push
rorl
loope
xlat
mov
out
sub
nop
cld
imull
sub
jo
je
imul
adc
mov
aaa
mov
inc
clc
pusha
fcoms
mov
call
rorl
test
mov
xor
mov
adc
fstl
mov
sub
lods
insl
sahf
inc
lret
fstl
movsl
cmpsb
xor
sub
adc
aas
mov
pop
mov
idivl
mov
mov
repz
mov
jecxz
dec
jmp
push
mov
push
xor
jbe
adc
sbb
and
icebp
rorb
xchg
xor
scas
and
jb
lock
push
insl
xlat
dec
es
and
insl
and
scas
lods
stc
in
xchg
sbb
fcmovbe
push
and
pop
fists
leave
mov
std
pop
ret
push
mov
cmp
dec
mov
mov
test
jbe
in
lahf
xchg
ljmp
jne
adc
sbb
fs
jbe
adc
push
mov
adc
mov
jne
cmp
call
xchg
stc
dec
outsl
and
iret
mov
cmp
mov
scas
dec
mul
addr16
push
mov
fistps
js
xchg
dec
jnp
add
or
sbb
rorl
or
dec
and
push
dec
jbe
addr16
add
and
sti
mov
shl
fmul
subl
push
jae
sbb
dec
sub
fdivs
cltd
std
mov
xchg
into
sub
pop
mov
sarb
aad
jp
jp
popa
inc
clc
aaa
mov
sarb
test
test
mov
adc
cmp
mov
js
movsb
iret
cmp
jg
mov
or
jo
mov
inc
out
xchg
data16
sbbl
test
mov
xor
sbbl
movb
leave
lret
inc
insb
sahf
clc
dec
jmp
out
sub
pop
xor
cmp
jg
inc
adc
sub
mov
test
mov
cwtl
popa
jnp
popa
cmp
xor
gs
pop
decl
xor
out
shr
and
xchg
pop
stc
and
inc
mov
xor
lock
scas
push
jne
pop
clc
inc
pop
jbe
out
lock
enter
pop
push
inc
cwtl
cmp
pop
or
fsubrs
mov
fimuls
addr16
dec
sub
aas
std
jae
data16
sbb
or
lcall
rol
cmp
mov
mov
imul
jmp
ss
shll
dec
mov
sti
mov
jb
push
mov
add
adc
mulb
data16
aaa
stos
aad
inc
push
jecxz
mov
loope
stc
pop
repnz
jns
mov
out
mov
push
adc
lahf
pop
movsb
add
jbe
jns
mov
hlt
mov
mov
adc
sbbb
and
cld
mov
fneni(8087
loop
cli
dec
cmp
mov
sbb
fcoml
pop
push
movsb
push
jmp
shll
sbbb
inc
mov
sti
aaa
cmc
psllq
fnstsw
popf
cmpb
jb
lret
adc
pop
and
mov
xor
jle
test
pop
jecxz
cmp
pushf
mov
and
lock
sti
jmp
cmp
call
je
dec
pcmpgtw
inc
lea
rcr
pop
dec
jp
lret
sub
loop
arpl
sti
lods
mov
orl
dec
lock
mov
lahf
loop
or
jae
jnp
popf
cmc
out
test
mov
outsb
sbb
subl
add
dec
call
inc
jecxz
xorb
popa
cmp
out
sbb
and
xchg
cld
popf
testb
test
js
mov
and
sbb
xor
in
inc
ss
fmul
adc
mov
xchg
xlat
ss
int3
push
movsl
xor
ds
inc
les
and
sbb
mov
das
test
fldenv
mov
or
push
jnp
sbb
adc
mov
rcr
cmp
adc
jo
inc
push
hlt
int3
sbb
hlt
imul
xchg
jne
ljmp
mov
mov
xchg
rcll
insl
jmp
pop
or
and
add
sahf
dec
jne
mov
xchg
push
cmp
lahf
ds
push
stos
pop
cmc
sbb
inc
aaa
push
ja
out
lods
dec
cmpsl
pusha
decb
lods
adc
loopne
pushf
in
push
xchg
sbb
or
test
std
in
push
std
push
inc
movsb
sbb
push
out
and
call
lock
in
out
or
mov
xchg
inc
lds
push
gs
adc
push
push
push
sub
sbb
mov
cmp
push
xchg
ds
sti
push
push
jmp
sub
lods
ss
or
pop
inc
pop
aam
aam
outsb
jg
xorl
stos
inc
cmp
lret
dec
xor
popa
lods
jne
movsl
add
adc
jno
bound
cmp
pop
js
sti
or
adcb
sbbl
clc
insb
push
xlat
or
jecxz
loopne
sti
xchg
insb
stc
aaa
out
sub
rcrl
ja
into
fs
out
insl
insl
imul
and
cmpsb
aas
pop
push
clc
adc
aam
add
in
xchg
cld
lock
stc
ficompl
jecxz
dec
loopne
lret
aas
mov
lods
dec
int
lret
in
or
mov
in
jecxz
xlat
sbb
push
adc
out
mov
jb
icebp
or
dec
testb
xchg
mov
mov
sbb
mov
pop
in
sub
adc
sub
xlat
ret
divl
fisubs
mov
xchg
inc
cmpsb
std
push
dec
sub
adc
rclb
fdivrp
mov
push
das
loopne
or
push
pop
add
in
pop
out
negb
ljmp
mov
lahf
out
movsb
jmp
or
fisubs
mov
push
jne
adc
mov
or
out
mov
pop
orb
fcomp
sub
fucom
cld
roll
imul
sbb
idivb
push
mov
sbbb
adc
std
inc
out
mov
cltd
dec
loop,pt
jno
push
and
test
cmpsb
push
pop
jae
mov
inc
mov
mov
xor
scas
mov
cmp
xchg
pop
test
inc
or
xchg
dec
test
fsubs
mov
mov
mov
lret
jmp
loopne
push
imul
sti
xchg
sub
test
into
dec
sti
aad
xor
sub
das
adc
lods
pop
icebp
adc
sarl
fcmovu
mov
mov
fildll
jle
lds
mov
dec
jle
push
push
jne
push
push
dec
sub
add
or
mov
xchg
xlat
mov
xchg
mov
aaa
dec
sarl
test
xchg
xchg
jg
cltd
add
sub
ret
ret
xor
mov
jmpw
sbbb
or
lret
xor
repz
pushf
dec
fmul
adc
sbb
ret
mov
imul
cli
pop
sub
push
dec
das
outsl
inc
jns
sub
push
inc
xlat
sub
fistps
test
or
aam
movsl
jns
mov
cltd
test
popf
shll
jg
sub
dec
jno
enter
add
fdivrl
repnz
fmuls
fildl
sbb
inc
or
fadds
fadd
jns
call
fwait
and
lahf
add
sub
jae
movsl
adc
loopne
jg
test
scas
pop
pop
add
cwtl
sub
shlb
cmpsb
push
roll
loope,pt
test
mov
fdivr
sub
and
mov
test
repz
loope
xchg
cltd
xchg
dec
push
cmc
sti
cmp
lods
je
int
das
jg
enter
popa
arpl
je
xchg
stos
mov
mov
and
xor
sbbl
mov
mov
mov
std
jmp
loop
push
in
and
push
ror
aad
int
adc
pop
ret
mulb
sub
ljmp
lds
and
lock
into
mov
inc
mull
pop
sub
or
fldenv
add
cmc
or
xor
jb
jle
test
ljmp
mov
ss
mov
xchg
sti
and
das
loope
add
push
andb
das
aam
fdivrl
push
cmpsb
stos
jb
mov
adc
mov
xor
xchg
outsl
adc
fistpl
movsb
lock
stos
pop
cmp
leave
sbb
adc
mov
xor
out
inc
xchg
pushf
cltd
enter
leave
mov
xor
fwait
and
js
mov
adc
jae
and
ja
push
jecxz
xchg
add
cli
movsb
test
cmpsb
sub
jno
sub
outsl
or
sub
icebp
sbb
mov
mov
dec
icebp
push
lahf
dec
mov
mov
sbb
dec
mov
ret
aad
icebp
shrl
xor
push
shll
and
dec
pushf
jno
cmpl
jp
lcall
loope
test
repnz
mov
daa
jnp
divb
pand
in
jae
jo
inc
jb
xorb
push
inc
int
inc
xchg
lahf
fiadds
jle
fistpl
xchg
in
sub
jge
repnz
sbb
out
out
mov
mov
in
mov
out
cmpsb
mov
gs
bound
inc
lahf
cli
xchg
mov
dec
fldcw
daa
ret
pop
push
out
xchg
lahf
cmp
jle
xlat
mov
imul
aaa
into
cmp
push
cmp
ljmp
icebp
cmp
push
aaa
push
shr
fldenv
jmp
push
repz
mov
dec
mov
adc
lret
mov
mov
je
xlat
and
ljmp
mov
loopne
xchg
bound
subb
subl
add
stc
aas
shll
or
jmp
push
addr16
pop
scas
dec
dec
call
sbb
fsubl
stc
push
fisubrl
test
rcr
pop
lods
pop
cmp
loope
test
flds
out
mov
jno
movsb
mov
ret
xor
xor
inc
cmpsl
add
xor
mov
std
aaa
dec
lea
pop
or
xchg
rorl
idivb
stos
cmp
or
sub
dec
iret
pop
int
and
enter
mov
les
sbb
loopne
xor
rcrb
dec
adcl
jne
lcall
jge
push
lods
mov
adc
scas
push
dec
or
dec
pop
mov
ss
lcall
or
shlb
adc
jb
add
loopne
out
sbb
adc
push
fistl
sbb
and
fs
mov
xchg
lds
inc
ds
fcoms
js
mov
sub
int
xchg
and
out
dec
lds
jae
das
sbb
aad
mov
adc
testb
mov
shlb
xchg
loope
inc
dec
lock
fs
clc
xchg
movsb
pop
stos
or
inc
jae
inc
mov
push
or
cmpl
push
dec
sahf
jge
icebp
pop
je
sbb
xchg
fimuls
jp,pn
inc
in
push
nop
inc
pushf
clc
dec
negl
scas
cmp
icebp
pop
pop
push
cmp
xor
push
popa
fistl
int
ret
addr16
mov
mov
xchg
lret
dec
movsb
into
ficompl
add
jnp
icebp
shll
xchg
and
push
mov
dec
sub
jp
xor
xchg
lods
xchg
push
xchg
cmc
lock
lea
fcomps
mov
std
stc
xchg
adc
in
pop
push
lock
xor
pop
sahf
rcll
ss
pop
add
insb
fwait
shll
std
lret
and
nop
mov
pushf
std
rcrl
test
xor
xchg
pop
push
mov
mov
rorl
mov
mov
mov
rorl
icebp
pop
pop
mov
lret
dec
jge
out
mov
sub
and
lods
add
pop
mov
push
mov
outsb
or
ja
xchg
mov
xlat
scas
daa
dec
pop
ss
add
ja
jmp
cmp
movsl
popf
aaa
or
or
es
sub
iret
in
pop
in
out
dec
fildl
inc
mov
ss
mov
scas
jecxz
jge
stos
cmp
sbb
sub
jecxz
fs
sahf
add
out
adcl
xchg
or
imul
iret
shll
ret
adc
dec
dec
imul
je
cltd
daa
xor
call
cmpb
rorb
rcl
or
xchg
fwait
and
or
inc
jae
xor
dec
mov
pavgw
mov
inc
cwtl
push
out
sub
xchg
push
or
mov
xor
shl
push
fiadds
aas
shll
sbb
out
cs
xorl
xor
xchg
cmp
adc
jns
jbe
pushf
jns
jbe
jae
rcrl
inc
or
ljmp
xor
test
xchg
jno
xchg
bound
cmp
sti
pop
lahf
add
aad
pushf
popa
test
dec
repnz
testb
stc
sub
sbb
dec
pop
addl
int
xor
sub
test
cmpsl
xchg
ss
ret
lds
dec
jp
mov
push
pop
jne
adcb
test
lock
cmp
cmpsb
rcl
aaa
mov
pop
stc
and
pushf
xor
jge
je
adc
fistpl
subl
stc
mov
pushf
cmp
popa
mov
sbb
push
fdivl
clc
mov
pop
cmpsb
popa
push
test
lods
sbb
jmp
out
add
stc
lcall
push
xchg
dec
fildll
xchg
mov
inc
enter
push
mov
ss
sub
out
popa
ss
lret
cmpsl
jge
mov
push
popa
ficomps
mov
mov
jne
arpl
or
es
pop
adc
push
stos
lret
lea
in
aas
and
test
mov
fcomps
mov
cmc
enter
add
mov
roll
iret
lret
das
rcrb
pop
ljmp
adc
and
rorl
fs
jle
enter
add
pop
push
push
into
call
and
loopne
mov
jne
inc
sbb
xchg
cmc
adc
in
hlt
lcall
insb
pop
arpl
mov
std
sti
xchg
cmc
inc
add
or
pop
push
xor
dec
jbe
out
imul
push
inc
jecxz
sub
sarl
dec
cld
test
fnsave
enter
jle
push
test
inc
cmpsl
lock
and
sub
add
and
mov
nop
xchg
mov
cmc
loop
mov
jecxz
push
out
xchg
sub
mov
jo
and
lret
ljmp
jle
push
pop
inc
cmp
fidivrl
dec
mov
sarb
out
push
cmp
cmp
filds
mov
ret
xchg
outsl
rcrl
jb
popl
mov
test
lock
bound
pop
and
movl
les
loopne
push
xor
in
xor
imul
and
aad
and
lock
repz
lods
mov
popf
cmp
out
sbb
lret
add
mov
cmp
popf
fwait
jmp
mov
mov
dec
out
int
push
jb
cs
arpl
push
shll
inc
jle
aas
adc
into
cmp
xchg
push
and
fcoml
dec
or
loope
ds
fnsave
mov
add
cmp
jecxz
mov
dec
pop
cs
stc
xchg
repnz
cld
jmp
roll
movsb
data16
xor
loopne
bound
lret
mov
sub
jle
rolb
add
rorb
sub
jno
fsubrl
imul
jle
adc
mov
cltd
push
andb
and
aas
inc
dec
cli
inc
cmpsl
mov
mov
sbb
scas
jb
xchg
jp
cmp
fwait
test
not
lock
test
dec
test
fidivs
jo
cmpsb
jb
jo
scas
into
out
div
nop
xchg
mov
or
flds
push
sub
push
fdivrl
fstps
mov
push
mov
or
jne
jge
lock
andb
out
lret
in
decb
insl
mov
mov
popf
adc
and
lods
cmp
sahf
jmp
xor
mov
notl
daa
ljmp
pop
out
outsb
cmpsb
fs
mov
sub
xchg
inc
fwait
pop
enter
jo
iret
ds
sbb
test
je
dec
movsb
sub
dec
in
push
xor
add
cmp
mov
in
and
xor
test
sti
iret
movsb
out
jno
mov
in
push
iret
mov
out
jmp
pop
and
repz
mov
imul
push
xchg
xor
mov
clc
call
repz
rorl
inc
gs
jae
popa
xor
dec
pop
lret
pop
mov
pop
sbb
leave
xchg
add
in
pop
into
push
fisubrs
into
or
mov
cmp
mov
movsl
sub
addb
insl
mov
mov
xchg
dec
sti
dec
outsb
inc
test
jne
movsl
pop
imul
dec
adc
dec
mov
push
push
xor
add
sarl
mov
mov
add
adc
adc
add
mov
xor
lret
arpl
lods
call
mov
pushf
mov
inc
movsl
testl
cmp
lcall
fwait
sub
dec
lea
mov
out
adc
jl
pop
mov
xor
xlat
decl
lds
mov
aad
jnp
jecxz
add
mov
js
push
rcll
push
imul
popa
inc
jb
xchg
cli
push
adc
dec
nop
roll
pop
cmpsl
lcall
sti
sub
adc
xchg
dec
dec
sbb
rcl
call
jle
je
push
xchg
movsb
addr16
dec
repz
fisubrs
add
cli
sub
in
mov
pop
mull
outsl
sub
push
cli
adc
mov
fdivl
sahf
mov
mov
fld
movsb
psubq
fcompl
xor
mov
xchg
cltd
cltd
lock
mov
clc
adc
inc
loope
out
mov
je
hlt
outsl
nop
mov
xchg
push
jns
stos
bnd
pushl
and
add
call
push
aad
out
push
xlat
daa
pop
notl
les
jp
inc
jl
fwait
lods
popf
mov
add
jnp
fs
rcrl
test
loopne
xlat
sbbb
jns
es
sti
es
aaa
inc
dec
popf
cmc
push
pop
push
add
pop
sub
bound
lcall
mov
dec
inc
and
mov
hlt
cmp
aad
jb
and
adc
pslld
movsl
rorb
popa
mov
xchg
xchg
iret
jno
fwait
orb
push
inc
mov
fwait
or
pop
out
mov
pop
repz
lock
jnp
fcmove
in
loope
add
dec
loop
int
xor
cmpsb
aad
leave
adc
inc
mov
mov
lds
mov
gs
div
xor
imul
sbb
xchg
aaa
and
jnp
mov
cmp
push
sub
lea
push
shll
adc
push
xor
cs
in
inc
push
sahf
les
rep
xchg
stc
pop
popa
adc
mov
and
pop
mov
test
mov
lcall
out
fmuls
fstps
push
push
or
pop
test
in
mov
cmp
dec
mov
lods
sbb
push
sbb
fistpl
pop
andl
pop
fs
sub
inc
pop
outsb
pop
cld
stos
in
adc
xor
sbb
jo
popa
stos
repnz
xchg
mov
jo
inc
adc
sub
mov
lock
fstpl
cmp
inc
sbb
jae
inc
and
outsb
push
ds
push
sbb
notb
cmp
mov
test
test
jecxz
fadds
pmulhuw
or
mov
pusha
adc
ret
lret
mov
dec
in
sub
out
in
lret
or
sub
jbe
out
subb
ss
repz
dec
cmpsl
sbb
cltd
push
mov
repnz
ret
mov
les
call
insl
mov
idivb
xchg
jnp
jo
xor
jge
test
jae
sbbl
fidivrl
inc
mov
nop
repnz
cmpsl
mov
rolb
repnz
loopne
inc
dec
add
in
jb
push
notb
repz
outsl
daa
mov
lods
sbb
xchg
ret
mov
xor
xor
pop
idivb
jmp
pop
mov
call
xchg
pop
jle
ret
loope
int
fcomps
in
popl
mov
xor
jmp
push
adc
mov
clc
mov
sub
sbb
jnp
dec
insl
int
sti
mov
enter
inc
cmp
mov
mov
sbb
and
cmp
lods
shrb
sbb
jl
or
in
push
popf
stc
xchg
jp
addr16
dec
pop
int3
scas
mov
test
pop
xor
fidivs
mov
loopne
pop
jmp
sarl
mov
fildll
sub
js
push
iret
push
or
jp
adc
xchg
sahf
xchg
push
dec
mov
icebp
adc
push
adc
sbb
cli
rorb
std
pop
add
aam
pop
ret
jnp
test
in
in
pop
js
jb
lods
mov
into
pop
xor
int
cwtl
jecxz
int3
jbe
imulb
ja
pusha
imul
pminub
xor
test
fisttpl
sbb
xchg
pusha
sbb
add
add
dec
mov
sub
add
sub
or
mov
add
xchg
or
xchg
xchg
xor
xchg
out
pop
add
out
sbbb
aas
cmpsl
ror
cmp
mov
or
test
js
notl
jne
sbb
addr16
mov
fsin
daa
push
sbb
ds
or
in
add
push
or
mov
push
lcall
ss
or
cli
jmp
cmp
loopne
mov
adc
adc
orl
or
js
in
jge
dec
adcb
pop
xor
ss
sbb
xor
test
in
in
adc
data16
jno
jecxz
cmpsl
movsl
xor
loope
jne
aam
xchg
nop
popf
movsl
add
mov
mov
lret
xchg
out
popa
ret
jne
adcl
dec
aad
push
pop
gs
clc
sub
insl
cmpl
jl
lds
lahf
add
sbb
xchg
cmpsb
adc
jmp
sbb
rcrl
out
or
cmp
jecxz
mov
push
mov
lods
cmp
pop
mov
xchg
in
imul
xor
lcall
adc
jecxz
in
test
out
fld
and
mov
or
pop
push
inc
ds
bound
and
jno
mov
sub
and
dec
jp
jns
arpl
loope
mov
mov
mov
mov
cltd
test
mov
mov
mov
mov
mov
sahf
cmp
mov
js
sub
xor
js
shlb
pop
pop
xor
mov
arpl
sbb
mov
js
and
pop
inc
into
mov
loopne
cwtl
adc
xlat
pop
sbb
popa
jae
jmp
xor
cmpsl
adc
jecxz
dec
rclb
or
push
lods
stos
cmp
mov
add
and
hlt
xor
in
add
cmp
sbb
ds
gs
shl
shr
pushf
inc
sbb
divb
movb
or
mov
cmp
test
in
ret
jns
push
bound
stc
and
pop
mov
rclb
adc
out
adc
fwait
stc
imul
mov
jnp
pop
jb
loop
cmpsb
xchg
test
mov
iret
lock
mov
mov
or
loop
inc
mov
out
add
les
imul
pusha
lock
push
adc
cltd
or
mov
push
outsl
xchg
push
lds
pop
push
add
icebp
xchg
mov
sbb
dec
push
ret
test
pop
loopne
dec
dec
loopne
jg
push
add
out
mov
mov
lcall
lock
aaa
lods
nop
jae
xchg
ds
sbb
aaa
cmpsl
aas
adc
idivl
fildll
scas
jne
in
cmp
bound
ljmp
cmp
pusha
repz
xchg
pusha
mov
mov
imul
dec
out
and
call
mov
push
and
sti
out
movsl
lret
lods
xchg
insl
faddl
fucomi
mov
mov
inc
stos
lcall
shrl
outsl
pop
mov
dec
ret
scas
fneni(8087
jno
or
mov
outsb
je
cmpsl
mov
jo
into
int
jge
mov
add
aam
lret
jo
xchg
ja
jb
inc
mov
outsl
cmp
out
in
mov
mov
jmp
mov
and
scas
cmp
test
jbe
mov
sub
js
dec
cmp
cmp
sbb
das
and
in
pop
sarl
jmp
test
cmc
dec
sarl
punpckldq
les
inc
mov
mov
nop
mov
pop
sbb
insl
or
mov
mov
push
add
push
outsl
sbb
mov
inc
iret
jg
cmp
add
mov
xchg
sub
push
insb
push
mov
mov
pop
pop
rorb
jne
jae
out
pusha
js
push
sub
sub
repnz
js
ror
cwtl
in
push
jecxz
cld
pop
cmp
imull
nop
dec
sub
addr16
std
sbb
andb
pushf
cmc
mov
pop
cwtl
ficoms
xchg
rcll
sti
jle
or
addr16
test
dec
jnp
pop
test
push
pop
cltd
lahf
filds
dec
or
push
insb
pminsw
insl
cmpsl
imul
repz
repz
fmul
repnz
es
sbb
es
in
scas
pop
push
and
fnstsw
aaa
rcr
mov
push
mov
inc
xor
sub
adc
mov
arpl
add
sbb
fcoms
addl
es
pop
mov
mov
inc
dec
or
and
or
and
adc
iret
negl
packuswb
pop
xchg
pop
add
and
ret
cmpsb
push
cmpsb
call
les
sub
jo
leave
movsb
popf
and
out
dec
xor
add
stos
mov
push
sbb
addr16
jo
test
aad
dec
fcmovnb
xchg
es
mov
lock
or
je
aam
ret
pop
rorb
fstl
mov
fxsave
jnp
sti
cmp
push
sbb
mov
loop
lods
mov
popa
jbe
call
xchg
xchg
daa
fistpl
xor
push
lods
out
xchg
je
xlat
ljmp
das
gs
sbb
jns
test
inc
js
fidivrs
rcrl
mov
fwait
jnp
lahf
iret
repnz
xor
cmpsb
cmp
jo
or
xchg
fwait
ja
sti
mov
sub
push
pop
pop
lahf
pushf
push
add
punpcklwd
jnp
inc
pop
test
lcall
movsl
sbb
lcall
lds
leave
dec
pop
je
adc
or
xchg
inc
das
cltd
je
xor
add
es
or
lahf
in
ds
pop
stos
xor
or
cmp
jb
inc
inc
xchg
addr16
mov
adc
jp
out
pusha
test
nop
and
xlat
xorps
iret
cmpb
sbb
loope
inc
mov
movsb
in
push
push
cmp
cs
mov
lret
sbb
mov
xor
xor
xchg
and
add
mov
jge
push
jno
jp
adc
enter
bound
stc
jae
mov
mov
add
push
in
int
mov
adc
jns,pt
jno
es
inc
xor
pop
enter
sbb
negl
cmp
inc
cmp
or
jne
in
jnp
lret
cmc
push
jae
lods
js
js
add
mov
icebp
pop
xor
mov
dec
adc
aas
test
cmp
sub
pop
fsubr
enter
or
popf
cmc
jge
fidivl
cmp
jbe
push
or
ljmp
push
aad
outsb
fadds
int3
rorb
addl
xchg
mov
push
loopne
push
inc
iret
ret
mov
cli
push
pop
mov
gs
insl
aaa
and
and
and
add
dec
push
cmp
test
push
pop
scas
lods
stos
cltd
jnp
das
ret
lahf
outsl
data16
out
push
clc
and
inc
nop
jmp
sbb
mov
pop
xchg
mov
pusha
out
or
fildl
ja
jl
push
pop
push
dec
mov
hlt
xchg
cmpl
mov
and
dec
in
cmp
in
push
das
sub
mov
ret
mov
int
push
xchg
dec
fsubrl
adcl
rclb
jne
aaa
sbb
dec
int
push
leave
dec
inc
push
adcl
mov
mov
adc
fstpt
push
jnp
inc
sub
mov
dec
jne
cltd
in
inc
add
cmpl
pushf
fbld
iret
push
add
sbb
pop
mov
mov
mov
jo
jb
fistpl
mov
fnstcw
pop
aad
lea
and
bound
xor
cwtl
bnd
mov
js
mov
lods
cmp
stos
add
dec
jmp
mov
cwtl
and
ss
rcr
adc
loopnew
test
inc
aam
xchg
pop
mov
cmpl
in
cmpsl
insb
jne
jns
testl
mov
in
mov
push
inc
cld
pop
xchg
add
repnz
insl
mov
insb
xchg
pusha
mov
push
sbb
inc
jmp
aam
filds
jne
xchg
stc
jbe
push
xchg
cltd
dec
or
xor
daa
xchg
aas
andl
hlt
sbb
lahf
push
push
xor
adc
cwtl
ror
cmp
call
test
imul
std
iret
and
into
xorl
in
int3
mov
add
jne
in
lock
pushf
mov
notb
mov
pushf
mov
xchg
or
in
jge
shll
into
rolb
mov
push
popa
popa
je
sbb
jae
xor
jne
pushf
dec
xchg
xchg
test
and
insb
jno
aaa
clc
dec
loopne
push
gs
jns
add
jne
movsl
sarl
xor
xchg
and
jge
pop
xchg
cmc
je
mov
loope
cmp
adc
add
mov
add
fs
add
adc
inc
cmp
in
shlb
rcll
mov
push
div
pop
out
fsubs
pop
and
out
shl
and
dec
lret
stos
inc
lods
push
rorl
or
pop
outsl
jmp
pop
pop
lods
loop
and
sbb
xchg
push
xchg
or
repz
or
lcall
pop
in
call
jbe
cmovns
jg
out
pop
decb
mov
sti
popf
loope
cli
daa
ret
pusha
divl
in
mov
and
sbb
inc
push
and
jecxz
xchg
ljmp
mov
jo
sub
mov
add
sti
or
sub
rcll
jecxz
jl
mov
cmpsl
mov
leave
xchg
cmpl
xorb
repz
loope
and
xorb
adc
movsl
stos
hlt
sub
mov
push
adc
ret
sbb
stc
jne
adc
xlat
aam
push
daa
aad
scas
aad
and
push
shrb
js
stos
lods
or
add
jmp
sub
mov
mov
push
mov
pop
jbe
jge
in
mov
mov
fsubl
hlt
mov
int3
dec
out
mov
xadd
iret
lods
lcall
push
stc
add
int3
movsb
mov
mov
pushl
inc
loope
insl
bound
push
jo
scas
cmp
xchg
xor
jecxz
jp
mov
mov
rorl
fcompp
pop
out
aam
xchg
aas
mov
in
inc
lcall
pop
xor
push
lock
add
inc
pop
mov
insb
sahf
pop
inc
adcb
mov
imul
pop
lods
mov
adc
dec
and
cli
mov
shl
mov
fisttpll
cmp
mov
pop
jg
std
fs
cltd
shr
inc
popa
ret
ret
jmp
out
fisubrl
lea
pop
or
pop
push
inc
and
and
outsl
sbb
push
test
cltd
leave
sbb
cmp
aas
xchg
cmp
mov
jbe
ja
xor
fwait
insb
sub
test
mov
xchg
push
sbb
xor
iret
sbb
stos
fildll
mov
mov
xor
sarl
inc
xchg
popa
xor
mov
ficomps
add
and
xchg
fucomi
sub
push
icebp
cmp
xchg
mov
out
es
push
icebp
fs
mov
mov
fsubl
jb
fs
push
loopne
js
or
mov
push
loopne
mov
xchg
gs
adc
lea
scas
fwait
dec
adc
daa
out
repnz
testl
pop
pop
shlb
jne
fistps
dec
fwait
mov
orb
shl
pop
sub
lret
js
scas
add
shrb
ss
out
lock
mov
arpl
pop
bound
std
lret
test
leave
addr16
xlat
lret
ss
or
movl
push
in
data16
fs
push
sbb
call
mov
sbbl
mov
push
movsl
mov
cmp
inc
mov
sub
cmp
into
xchg
mov
jp
or
loope
test
popf
xchg
les
xchg
add
dec
ljmp
outsb
out
and
and
imul
pop
xorl
jne
ja
cltd
mov
sahf
shlb
js
xchg
mov
mov
mov
popa
insb
mov
js
pop
push
mov
inc
jp
daa
movsb
int3
sbb
xchg
movsb
fisubrl
or
mov
inc
sbb
ret
jmp
fdivs
fmul
inc
fidivrs
cmp
mov
andl
xor
cmp
pop
xor
jae
int
jnp
fdivrl
insb
lcall
push
call
sbb
dec
jbe
mov
xor
inc
jle
jmp
and
mov
mov
xchg
add
in
mov
inc
in
xchg
imul
xor
jns
xchg
dec
lds
mov
or
sbb
add
cmp
lcall
xchg
pop
cmp
imul
addl
jecxz
adc
jmp
imul
jnp
jmp
popf
outsl
flds
sub
push
repnz
xchg
xchg
mov
cwtl
pop
pusha
xchg
int
or
into
xchg
and
loop
loope
nop
xchg
sbb
lods
cmp
jmp
mov
or
int
push
out
aad
xchg
cmp
out
inc
test
jg
in
jge
push
dec
mov
mov
sahf
mov
aas
mov
dec
movsl
rclb
sub
mov
push
adc
mov
adc
xchg
in
nop
leave
or
pop
dec
adc
add
sub
cwtl
dec
jp
xlat
sbb
push
dec
sti
in
loop
js
aas
jae
jmp
inc
pop
out
int3
jecxz
out
cwtl
lock
mov
xadd
cs
xchg
push
mov
pop
icebp
out
out
mov
les
or
mov
nop
aam
pop
iret
stos
xor
jb
repnz
lret
and
mov
mov
jecxz
push
sbb
cmpsb
xchg
sub
dec
das
cmp
pop
ja
or
or
bound
shr
or
push
inc
out
adc
or
fnstcw
sub
xchg
or
outsb
or
mov
cwtl
sub
add
fwait
bound
mov
lock
js
imul
out
out
clc
adc
lret
or
cwtl
fisttpl
loopne
addr16
daa
test
cmp
xor
xchg
pop
in
test
sub
push
mov
sub
les
sub
pop
loop
jg
lahf
aaa
pop
mov
mov
mov
jne
push
or
clc
mov
sbb
in
mov
push
push
adc
push
mov
cmp
jl
push
pop
push
shl
jo
movsl
adc
in
sub
fsubp
sub
dec
jmp
jg
jmp
xchg
int
ja
mov
ficoms
sbbl
jp
ret
adc
jmp
notb
sbb
mov
xchg
stos
sub
imul
mov
pop
jno
add
xlat
arpl
mov
adc
dec
dec
xchg
shll
dec
mov
inc
fdivrl
jbe
jo
and
xchg
ret
mov
fbld
sbb
jbe
push
repz
in
pop
loop
das
loope
cltd
mov
push
pop
xor
addl
lret
pop
sub
cmpsl
jmp
adc
loopne
aas
jecxz
int3
mov
out
leave
idivl
sub
cmp
repz
cltd
cltd
mov
mov
sub
insb
fwait
hlt
add
pusha
adc
movsb
test
fs
mov
xor
scas
inc
jecxz
in
adc
push
jle
inc
daa
jle
or
out
jg
stos
rolb
enter
addr16
inc
stc
or
jne
add
test
mov
jae
in
popa
lret
mov
pop
mov
sti
cltd
std
fisubl
dec
push
out
cmp
loopne
jg
jge
xor
adc
inc
scas
push
aad
and
fiaddl
lods
movsl
in
lods
cli
jp
loopne
in
mov
push
pop
add
push
sbbb
push
xor
decl
dec
adc
int3
push
shl
test
xor
cld
insb
cmpsb
adc
mov
aad
xor
pop
jmp
cmc
in
mov
pop
stos
fisttps
sbb
xchg
xchg
or
pop
or
add
adc
cmpsl
jecxz
arpl
xchg
shrl
lock
in
fldcw
mov
xchg
adc
rolb
imul
shr
pop
push
mov
push
push
nop
cmp
mov
idiv
ror
push
pop
mov
xor
or
xorl
inc
popl
ss
aaa
add
and
popf
call
int3
cmp
add
sbb
shl
dec
or
fwait
mov
jno
sahf
or
sub
ss
adc
test
popa
mov
out
or
xchg
fimuls
pusha
adc
test
sbb
dec
xor
pop
mov
pop
shrb
iret
je
stos
insb
or
cmc
lcall
jmp
dec
push
pushf
pop
outsl
cmpsb
push
xchg
stc
sub
outsl
mov
data16
dec
xchg
mov
mov
adc
xor
jne
push
jns
arpl
jb
in
repnz
movsb
add
cmpsb
out
loop
dec
jno
into
dec
scas
dec
leave
jg
cwtl
jno
push
aam
test
shrb
out
in
mov
nop
popa
sub
pop
in
in
xchg
dec
aas
in
sbb
xor
pop
fimull
cwtl
or
outsl
xchg
add
jecxz
xchg
sbb
push
adc
dec
sbb
fcoms
cmc
std
repz
fmul
dec
test
nop
cs
gs
mov
mov
ja
frndint
sbb
pusha
out
cs
push
or
mov
ret
iret
pop
fs
daa
add
rcrl
xchg
adc
dec
sbb
add
int3
or
mov
pop
mov
out
mov
cmpsb
dec
in
xor
mov
movl
fcom
mov
add
in
cmpsl
add
push
movsl
mov
mov
jb
jno
push
orl
mov
or
imul
mov
mov
pop
cltd
jns
imull
out
sbb
rclb
mov
loope
lods
push
les
hlt
xor
lahf
cmpsb
dec
call
jae
test
pusha
add
int
adc
add
or
outsl
sbb
scas
lret
pop
stos
sbbb
icebp
mov
xchg
das
fwait
mov
mov
push
dec
cmp
gs
prefetchw
je
rorb
mov
pop
push
int
jno
jbe
adc
adc
dec
ret
adc
hlt
jno
lahf
stos
push
out
lock
dec
negl
push
xchg
arpl
mov
add
imul
adc
xor
imul
adc
xor
scas
sbb
into
ljmp
dec
mov
mov
stc
push
inc
xor
enter
jge
mov
or
sub
pop
stos
mov
mov
or
mov
sbb
pusha
test
ret
push
xchg
iret
inc
fnsave
or
push
imul
lahf
stc
loopne
fisubs
push
je
pop
add
int
nop
cmp
arpl
stc
shll
icebp
in
add
sbb
push
dec
pop
dec
and
aam
out
lahf
mov
xchg
add
lcall
mov
cmp
mov
pop
insl
sbb
lret
sbb
test
jbe
testl
add
stos
addr16
lret
ret
sbb
fwait
jge
pusha
pop
mov
xchg
mov
fsubrl
xor
jmp
popa
jecxz
daa
adc
cmp
pop
cmp
jecxz
dec
fsubl
and
mov
ds
mov
ja
jb
pop
mov
out
pop
push
dec
adc
shl
jo
xchg
add
adc
and
add
cmp
xor
jo
dec
loop
push
jmp
in
fadd
dec
fwait
decb
jo
ret
adc
loop
add
xor
popa
sarb
dec
xchg
push
das
popa
aas
dec
fistps
push
xchg
test
loop
pop
jmp
mov
ja
sbb
test
adc
inc
subl
out
pop
daa
xchg
xor
out
jns
jns
cmp
dec
inc
je
mov
inc
fildll
mov
xlat
sub
shrb
sbb
dec
in
xor
repnz
cs
int
movsl
les
or
out
xlat
xor
and
test
cmp
xor
cmp
lock
dec
or
inc
inc
sbb
cmp
inc
loope
pslld
mov
int
cmp
flds
sahf
sub
pop
cmc
push
mov
push
jo
push
inc
pop
movsb
into
pop
je
jo
sbb
out
or
mov
ficomps
xchg
xchg
stos
sbb
popf
sub
sub
mov
dec
push
out
loopne
sub
out
xlat
xor
mov
outsb
cmpsb
adc
ljmp
cs
jg
ret
mov
pop
in
movsl
dec
mov
mov
and
sbb
pop
sub
push
mov
daa
push
add
inc
xor
pop
sub
xor
int3
adc
stc
xor
ljmp
lock
mov
les
pop
sub
xor
pop
aaa
ret
ds
mov
dec
inc
loopne
or
jnp
xchg
ja
add
popf
int3
arpl
sub
jne
pop
daa
dec
push
mov
lock
pop
xorb
add
jns
nop
jmp
push
mov
call
test
roll
pusha
arpl
rorb
sub
lahf
mov
loope
adc
sbb
jno
popf
sbb
imul
xor
cltd
test
push
les
cbtw
mov
cmp
lods
ret
pusha
cmp
push
enter
sti
stos
xchg
mov
fwait
dec
mov
jno
mov
inc
cmp
inc
or
xor
cli
dec
jo
mov
sub
xchg
lods
stc
notl
out
mov
xlat
cmp
call
test
pusha
jo
aad
mov
adc
cld
adc
bound
xchg
adc
inc
sbb
add
call
push
pop
xlat
lods
inc
popa
mov
and
std
dec
addr16
adc
bound
lds
cmc
mov
cmpsl
fsubs
movsl
fstpt
inc
das
dec
mov
rorb
cltd
bound
jbe
mov
les
and
stc
orl
mov
mov
ss
xchg
fwait
mov
inc
scas
int3
inc
add
sbb
daa
jns
cmp
dec
push
nop
mov
test
hlt
mov
jecxz
out
sti
mov
dec
add
add
and
xchg
adc
dec
xor
int3
leave
fbld
xor
mulb
mov
or
xchg
or
xor
sub
lret
ret
xorl
xor
and
lods
xchg
adc
aam
or
dec
das
adc
push
add
ds
cmp
daa
and
xchg
jmp
sbb
sbb
sub
push
testb
mov
in
repnz
mov
in
loop
add
xchg
lods
incl
cmp
or
stos
pop
and
insl
jno
lea
shr
stos
jo
pop
dec
repnz
mov
mov
inc
push
std
fcompl
push
lahf
cmp
cmp
sub
addb
adc
int3
scas
dec
incb
adc
int3
lahf
mov
xchg
fbstp
push
pop
sub
and
or
mov
cmp
in
adc
pop
push
push
sbb
sbb
lods
stos
mov
out
rcrl
jge,pt
test
sbb
fucomip
popa
mov
in
js
in
mov
push
push
jno
jne
cltd
jge
es
and
mov
cmpl
repnz
dec
and
call
std
sbb
add
out
push
or
rolb
cld
roll
out
mov
mov
add
test
scas
fcoml
rorl
cmpsl
sbbl
out
mov
loopne
mov
aaa
xor
lea
je
sub
xor
fdivrs
mov
mov
js
gs
xchg
mov
incl
adcb
jge
out
mov
testb
arpl
push
lret
push
jg
sub
or
imul
fsubrs
test
es
cld
add
push
aas
dec
sub
fnstsw
pop
pop
mov
test
pop
cmp
mov
fstpl
mov
ds
dec
sbb
or
xlat
cltd
aaa
dec
dec
sti
push
fldcw
fucom
pusha
xlat
outsb
cmc
sbb
pop
mov
mov
mov
xchg
rorl
testb
inc
repz
stc
icebp
dec
add
dec
repz
sar
sbb
nop
jp
sbb
clc
dec
add
adc
icebp
push
bound
mov
cmp
sub
aas
into
xchg
in
xchg
cltd
loop
mov
lds
and
inc
stc
in
fsubrl
and
cmc
pop
test
aam
add
and
ficoms
inc
push
mov
xchg
subb
test
in
sub
inc
movsb
popf
push
adc
aas
adc
inc
clc
fstps
outsl
jne
sub
addr16
add
out
inc
jbe
xchg
fiaddl
ja
push
jp
xchg
cmpsb
mov
push
sbb
mov
cltd
jnp
pushf
hlt
cmpsl
mov
mov
inc
lods
cmp
xor
mov
stos
adc
inc
cs
sub
sahf
in
lds
push
imul
pop
divl
adc
mov
mov
mov
add
loop
xorb
xchg
stos
dec
rolb
xchg
xchg
mov
hlt
fwait
mov
or
adc
jmp
lcall
jbe
mov
sub
mulb
aad
fdivs
js
sti
and
repnz
mov
cmp
jb
jno
rorl
out
pop
sub
pusha
push
idiv
into
iret
sub
jl
jb
ss
jnp
push
jecxz
filds
jne
iret
jo
inc
fdivl
adc
cs
dec
jb
inc
xchg
mov
hlt
pop
mov
scas
jg
adc
pop
rcrb
mov
aas
js
lahf
inc
sub
pushf
into
pop
mov
popa
add
les
inc
addl
xor
leave
je
leave
adc
aaa
xchg
lret
mov
xor
sbb
xlat
into
cmp
mov
cs
mov
push
cld
sbb
xor
lret
ljmp
les
test
stos
cmc
jecxz
xor
popf
push
cmp
popf
xor
bound
mov
add
fldt
mov
rorl
jae
sbb
inc
test
flds
imul
mov
adc
test
mov
xor
adc
sar
sbb
clc
popa
mov
inc
pop
iret
cs
stc
in
mov
pop
je
add
and
ja
in
outsb
pop
sbb
or
stos
mov
pusha
cld
dec
mov
fadds
mov
and
dec
inc
in
or
lock
add
inc
push
int3
aad
and
and
mov
cmovno
pop
shll
jns
sub
into
pop
cmp
dec
or
adc
jnp
jp
fcomps
push
mov
repz
dec
ficompl
lock
and
cmp
repz
pop
ret
ljmp
push
shrb
push
adc
loopne
cmc
xor
ret
sub
ljmp
jle
xor
xor
mov
ret
sbb
cmp
lret
insl
xchg
fcmovnu
out
cmp
push
das
sarb
mov
outsl
pop
pop
adc
outsb
cmc
add
push
jecxz
mov
or
push
adc
dec
and
xchg
andb
and
jnp
shlb
jnp
dec
in
add
mov
jno
lret
lret
dec
insl
sbb
clc
inc
jnp
mov
repnz
rcll
sub
sub
subb
lcall
sub
xchg
pop
daa
push
xor
xor
mov
xchg
and
fimuls
inc
push
inc
jno
adc
add
sub
mov
lret
fistl
adc
fxam
add
jmp
rcll
adc
cltd
pop
lds
and
and
daa
gs
jno
jno
jmp
jae
xor
inc
cmp
xor
xchg
es
adc
pushf
loope
ds
push
mov
jnp
add
cmp
cmp
lock
das
push
imul
orl
ds
sbb
in
cmpsb
lahf
sti
gs
mov
add
pop
dec
mull
enter
shrl
cmp
pushf
repnz
and
sbb
cmp
aaa
iret
xor
jge
jmp
subl
mov
sbb
lds
xor
stos
je
nop
xor
inc
or
dec
jl
loop
adc
std
dec
push
movsl
mov
inc
xchg
xor
loop
in
cmpsl
enter
mov
sbb
mov
hlt
fnstsw
mov
xor
test
or
or
mov
int3
es
outsl
jne
out
lods
int
push
cmp
rcrl
jns
dec
ljmp
out
lds
xchg
lea
pop
fdivl
push
cmpsb
daa
pop
mov
push
call
add
inc
jne
adc
mov
mov
or
std
fdiv
cmpl
loopne
push
push
pop
lods
and
imull
lea
sbb
addl
cmp
js
imull
pop
xchg
and
jb
lods
fdivrl
int3
xchg
jno
push
push
mov
pop
repnz
ss
insl
cmpsl
fucom
arpl
jnp
cmp
mov
aam
or
outsb
cmpsl
test
pop
or
add
or
cmp
cli
cmp
scas
dec
xchg
pop
fdivl
mov
pushw
inc
push
jle
fs
out
jne
push
pop
push
add
push
mov
xadd
add
mov
or
sub
arpl
mov
push
daa
sti
mov
bound
sbb
fwait
enter
inc
xchg
clc
cs
pop
movmskps
fwait
lcall
out
pop
frstor
dec
ja
adc
sarl
in
xchg
call
das
push
hlt
clc
pop
cmp
xor
cmp
cld
int
xchg
shll
scas
in
cmc
cli
cs
adc
push
push
sbb
adc
xchg
sahf
ja
sbb
jmp
call
test
std
shll
test
push
lods
push
inc
pop
ds
xor
aad
pop
sub
or
lahf
xchg
dec
dec
add
pop
and
jecxz
inc
int
sub
push
aam
ss
cltd
mov
jns
or
pop
loope
pop
aas
xor
xchg
pop
add
sti
pop
nop
inc
cld
mov
mov
cmpsb
mov
bound
inc
mov
js
js
jmp
pop
dec
daa
adc
test
jp
jmp
xlat
or
cwtl
bound
fisubrs
cmp
add
mov
sub
shl
in
mov
push
daa
aam
imul
add
in
test
lret
cli
nop
pop
adc
inc
fcmovu
data16
stos
repz
mov
inc
sbb
fcmovnbe
fmull
cmp
lea
ficomps
dec
outsl
mov
dec
dec
int3
jmp
sbb
jmp
and
sbb
and
or
fsts
xchg
mov
aad
ljmp
sbb
mov
lret
fucomp
mov
jo
call
pop
imul
cmpsl
inc
mov
and
and
jae
clc
mov
adcl
iret
mov
jns
push
aaa
lods
in
mov
dec
jns
push
popa
and
cltd
int
mov
sbb
xchg
or
jecxz
fwait
test
inc
data16
mov
das
stc
jge
lahf
ds
jno
cmovno
mov
lods
jnp
cmp
fldt
xor
or
daa
push
and
xchg
nop
mov
fwait
push
jmp
test
idivb
mov
nop
pop
jno
mov
repnz
cmp
lods
mov
dec
pushf
xorb
lret
outsl
dec
clc
or
sub
loopne
es
je
cmpsl
loopne
adc
test
mov
sbb
push
dec
dec
andb
and
pop
repnz
shll
dec
in
push
je
mov
bound
loopne
imul
ja
aas
cmpb
repz
popf
bound
fs
cmpsb
icebp
fmul
and
cmc
sti
shl
push
sub
imul
roll
rclb
inc
mov
adc
into
leave
push
cli
pop
bound
xlat
stc
jbe
leave
lods
je
or
andb
sbb
aas
out
rorl
push
ljmp
xchg
xor
das
in
stc
jecxz
jno
into
xchg
dec
sarl
jecxz
stc
sti
fisubs
sbb
dec
push
xchg
or
adc
dec
dec
jle
lret
cmp
mov
pop
xor
imul
nop
xlat
enter
aad
iret
inc
stc
fsubs
xor
sub
test
mov
mov
or
and
cld
int
xor
imul
std
mov
xor
xor
xlat
push
push
inc
sub
and
jno
mov
and
xlat
jl
or
stos
daa
fiadds
sbb
cwtl
mov
mov
popa
addr16
jmp
add
int
fimuls
add
dec
push
push
adcl
jle
xchg
lcall
sbb
adc
xchg
jp
cs
les
fs
inc
mov
dec
pop
push
add
and
xchg
adc
sbb
push
push
nop
or
jge
adc
xchg
sub
int
push
mov
fcmovnbe
adc
xor
je
jmp
push
cmp
pop
outsl
ffree
adc
pop
lahf
lods
mov
idivl
call
cltd
dec
mov
push
adc
inc
sti
int3
xchg
dec
jbe
adc
fisubrs
push
add
outsl
add
mov
jmp
mov
push
xchg
adc
cltd
loopne
xchg
repz
inc
jne
repnz
pusha
movsl
xor
jno
add
mov
adc
dec
je
fxam
rcr
les
call
push
xchg
and
pop
pop
repz
mov
xlat
adc
mul
pop
pop
insb
sbb
movsb
pop
inc
inc
sbb
daa
out
test
cmp
repnz
jecxz
fcmovu
dec
pushf
sub
rclb
data16
lea
cli
outsb
mov
and
fisubs
out
inc
adc
adc
xor
jb
fildl
scas
and
mov
dec
lcall
pop
inc
in
mov
xor
sbb
mov
pop
imul
mov
cld
sbb
pop
push
xorl
cmp
sbb
mov
in
in
cli
jge
jo
movsl
or
test
cmpb
push
push
push
lds
out
cmpsl
xchg
mov
xlat
add
jns
orb
shrl
fildll
xchg
repnz
jne
movsb
push
mov
sbbl
xor
mov
adc
inc
ret
dec
jo
push
mov
mov
adc
and
repnz
push
push
mov
pop
cld
addl
popf
loopne
cmp
lret
pop
fstps
dec
jne
jg
clc
mov
mov
es
test
addr16
and
iret
jb
cs
mov
add
xchg
mov
jl
out
inc
pop
adc
fcoml
je
aam
clc
or
xor
dec
out
leave
and
rclb
cmp
cwtl
add
sbb
loope
mov
pop
add
jcxz
pop
js
cmc
sub
loope
sbb
sar
nop
sub
and
das
js
sub
aam
dec
icebp
stos
out
pushf
jge
out
adc
out
add
mov
jecxz
outsl
push
lock
jno
pop
mov
imul
jbe
mov
jae
push
movsb
movsl
dec
xor
add
push
push
mov
ss
mov
cmp
notb
pop
je
in
xor
dec
hlt
xor
sub
sub
in
push
mov
cld
pushf
repnz
dec
push
xor
xor
scas
xor
addr16
ljmp
push
add
sahf
mov
xor
jmp
or
cmpb
xchg
and
jmp
mov
pop
lcall
lea
out
test
mov
or
pop
rclb
stc
jns
orb
fsubp
outsb
pop
lods
nop
lods
inc
shrb
clc
dec
push
xchg
inc
sub
xchg
std
lahf
xchg
or
sub
popf
fyl2xp1
cmp
ds
mov
mov
es
dec
xchg
aas
mov
dec
and
cmp
push
imul
out
loop
pop
xchg
xchg
ret
orl
loopne
ja
mov
jg
lret
mov
lods
clc
inc
addb
shl
xor
jno
loope
add
cmpsb
jl
xchg
jl
out
cmpsl
aas
imul
xor
insb
fiaddl
mov
leave
scas
insb
dec
ljmp
push
mov
cli
out
pop
push
je
push
jae
aad
out
movsl
arpl
pop
in
sbb
cmpb
jmp
iret
scas
adc
repz
mov
mov
enter
pop
stc
ljmp
mov
les
je
prefetch
ja
jbe
sub
xchg
pop
idivl
xchg
jne
xor
inc
sbb
out
lock
sub
jg
jo
js
hlt
push
stc
sarb
scas
inc
xchg
push
adc
cltd
data16
add
or
movsl
leave
dec
jne
jb
xor
and
jp
stos
xor
xchg
xor
in
pop
or
or
inc
in
sub
ja
fwait
push
aad
enter
add
shlb
aaa
xor
add
gs
pushf
push
movsl
adc
popf
adc
and
hlt
add
inc
data16
daa
cmc
leave
pushf
in
xor
notl
stos
cltd
pop
daa
xchg
xchg
add
push
fisttpll
in
add
pop
sarb
pop
mov
int3
pop
mov
sbb
jge
inc
jnp
and
aam
jo
insl
aam
clc
cmc
aas
push
xchg
mov
or
push
hlt
loop
jg
das
and
xchg
mov
xor
stos
aaa
xor
pop
enter
push
popf
cld
scas
and
sub
dec
sub
ljmp
adc
add
push
adc
fstp
popf
and
and
in
add
lcall
cmp
cmp
xor
mov
pop
ficoml
imul
dec
notb
iret
pop
sarb
jbe
pop
inc
add
addl
popa
rcrl
push
jmp
das
scas
or
inc
dec
push
or
mov
dec
jnp
sub
hlt
lock
test
sub
dec
xor
pushf
mov
clc
test
pop
das
and
sub
int3
sub
test
jne
ja
sahf
mov
lea
push
cmpsb
cmpsl
xchg
pushf
sub
aaa
or
es
jo
mov
jne
repz
hlt
push
les
jecxz
xchg
bndldx
adc
adc
int3
mov
call
ret
mov
xor
inc
into
cmp
arpl
xchg
jge
out
cmpsb
inc
mov
cmp
mov
ljmp
clc
ret
pushf
ss
dec
ror
jne
sbb
jp
fsubrp
push
pusha
inc
clc
jb
cli
stos
push
lcall
and
inc
in
popf
push
popf
loopne
or
cmp
mov
inc
ret
ret
or
push
mov
ffreep
repz
xor
fldcw
mov
add
sub
aad
adcb
insl
aam
xchg
pushf
faddp
loop
push
and
incl
ja
ret
jge
sub
mov
sahf
aas
mov
call
push
adc
dec
cmp
outsb
setae
icebp
ret
scas
mov
and
mov
mov
sub
mov
andl
push
lods
push
lds
lods
aam
add
mov
or
xor
arpl
jae
test
roll
dec
mov
cli
stos
lock
lods
clc
push
incb
shl
inc
mov
pop
stos
push
mov
sbb
xchg
cltd
outsl
xor
popf
xchg
outsb
add
cmp
jmp
fdivr
lcall
mov
cltd
mov
and
js
inc
push
add
sbb
and
dec
and
pop
mov
dec
insb
daa
push
and
lahf
push
sub
es
mov
and
dec
adc
pop
movsl
pushf
roll
js
jo
arpl
jge,pt
inc
mov
sti
mov
mov
and
call
or
out
dec
pushf
and
and
dec
mov
xchg
leave
fwait
hlt
sbb
xchg
out
adc
hlt
roll
pop
nop
or
mov
inc
adc
and
shlb
pop
jnp
pop
cmp
xor
int3
pminub
lcall
mov
jae
scas
and
icebp
popf
fsubrs
repz
addr16
mov
inc
shr
ss
and
pop
xchg
mov
cmpsl
loope
in
or
dec
mov
mov
pop
scas
sub
cld
jnp
rclb
xchg
lret
stos
xor
ss
xlat
imul
add
push
or
daa
push
cwtl
inc
and
jle
adc
jg
int3
loopne
mov
inc
insb
adc
fdivl
push
ds
sub
fcomi
push
test
psubusw
xchg
imul
int
into
or
into
mov
xor
xchg
xchg
cmp
dec
or
dec
mov
addl
rorb
rcrb
jns
push
loopne
xchg
icebp
icebp
fsubp
pop
mov
mov
dec
cs
lret
ret
lea
addr16
ds
jns
mov
iret
stc
pop
dec
ret
add
and
or
in
iret
or
shll
mov
stc
lods
mov
add
enter
lahf
cs
fwait
xchg
inc
pop
pop
cli
cmp
add
sbb
fists
scas
push
shrl
jb
xchg
lods
imul
mov
push
cmp
sub
lea
cmp
lods
es
aad
lea
xchg
sub
nop
xor
adc
xchg
pop
inc
and
int
jmp
cmp
clc
xchg
nop
cmp
adc
dec
jecxz
fldt
push
hlt
sbb
not
pop
inc
test
cmp
pop
into
push
fwait
mov
xchg
call
mov
fistl
arpl
bound
lret
fs
adc
inc
inc
push
cmp
pop
xor
cmp
adc
or
outsb
sbb
mov
jnp
push
leave
test
rcrb
or
les
push
and
test
lods
dec
fcomi
pop
push
shll
aam
mov
xchg
movsb
jle
cli
fimull
push
inc
pop
out
out
add
dec
cs
xor
lea
cmp
xor
dec
nop
sbbl
enter
and
mov
mov
repnz
das
and
mov
js
jb
or
push
test
lea
dec
insb
mov
or
sarl
adc
push
aam
test
cmpsb
imul
mov
adc
cmp
mov
push
aas
leave
jae
cmp
pop
imul
push
adc
xchg
lret
cmp
mov
sub
sahf
sub
into
ja
scas
stos
movsb
mov
addl
mov
mov
ss
hlt
in
xchg
in
adc
ret
aas
mov
inc
dec
lods
jo
sahf
push
bound
sub
sub
in
inc
jae
cmp
xor
movsl
pop
in
ret
cmp
cli
aam
and
adc
icebp
or
lock
fcmovne
sub
xchg
xchg
or
pushf
lcall
je
idiv
xchg
in
mov
cmp
mov
int3
jle
int3
in
jge
add
gs
and
xor
dec
je
inc
push
xchg
push
xchg
in
push
aas
sbb
xchg
lcall
push
add
adc
imul
pop
cmp
jl
sbb
lds
popf
stos
sub
push
lods
add
ja
jge
imulb
hlt
or
int3
cmpsb
fistpl
gs
stos
push
or
hlt
jns
decl
inc
lret
dec
xor
and
dec
or
sbb
shrl
mov
adc
jbe
adc
mov
iret
cmp
clc
imulb
mov
add
mov
cmpsb
xor
mov
in
clc
mov
xor
insl
sub
xchg
mov
and
fnstenv
add
xor
cmpsb
insb
jno
jno
rorl
aaa
pop
es
or
int
call
mov
or
sbb
or
sub
pop
pop
cmp
sbb
xchg
inc
fs
into
jmp
add
pop
sti
fcomi
call
daa
mov
cmp
xlat
sub
mov
add
je
dec
jle
xchg
xor
xchg
push
je
mov
cmpsb
lret
mov
fs
fisubrs
xchg
add
ret
sub
dec
and
or
pop
repz
fiaddl
repnz
testb
sub
jmp
dec
cmp
add
xor
add
and
jl
test
sub
dec
jbe
sbb
lock
add
shll
sbb
sti
pop
push
mov
ror
push
mov
fnstsw
adc
lret
iret
sti
cmc
in
outsl
xorl
xchg
imul
lret
lea
mov
mov
mov
orb
push
mov
subb
gs
out
sbbb
cld
daa
sbb
pop
pop
mov
pop
ror
push
shrb
or
jge
pop
movswl
jno
mov
je
dec
cld
cs
loopne
out
adc
inc
xchg
loopne
cmpsb
xor
push
lret
outsl
jp
pop
jo
sub
cmp
paddusb
push
jle
add
std
nop
jmp
gs
outsb
sbb
outsb
mov
test
ret
xchg
repnz
std
out
enter
insl
pop
add
push
stos
inc
iret
sbb
sbb
or
cs
push
jb
lretw
loope
xchg
subb
loope
daa
ret
mov
lods
inc
das
cld
add
add
inc
cmp
jp
cs
cmpsb
movsl
sub
xchg
mov
in
mov
push
data16
ljmp
sbb
daa
mov
add
add
mov
loopne
lea
imul
mov
sbb
xor
aam
jp
mov
pop
stos
shlb
mov
iret
push
pop
sub
aaa
jae
arpl
or
and
dec
xchg
dec
test
push
lret
ds
gs
sub
bound
scas
jg
fcom
cmpsb
xlat
sbb
xchg
in
xor
jp
pop
mov
push
imul
mov
loopne
cmp
icebp
mov
mov
mov
loope
mov
sub
cs
mov
mov
jnp
divb
fdivs
and
inc
xorb
fdivrl
push
xchg
addr16
cmp
and
pop
xchg
into
mov
mull
setne
daa
and
iret
cwtl
ja
imul
pop
sahf
sub
mov
inc
mov
les
push
cmpsb
dec
inc
pop
xchg
popf
ret
or
mov
in
sbb
dec
std
sub
xlat
es
imul
call
incl
mov
or
into
push
cwtl
dec
pusha
push
jecxz
push
imul
rep
and
fcomps
or
add
mov
xchg
mov
popw
je
lea
cmc
lea
aas
xchg
loop
sbb
or
fbstp
mov
stos
outsb
and
mov
sbb
shll
rorl
xchg
sbb
movsl
sub
dec
adc
xor
adc
stos
test
sbb
dec
adc
add
in
scas
jl
xchg
mov
add
enter
fs
sub
in
pusha
pop
adc
pop
sbb
ret
pop
dec
nop
xorb
mov
cmp
mov
pop
sub
mov
mov
jb
sarl
jecxz
lock
js
ficoms
das
insl
testb
push
xor
cmpsb
adc
aas
in
add
int3
clc
shlb
addr16
and
dec
jns
xchg
sbb
mov
push
sub
out
mov
rol
adc
popf
rolb
decb
jl
mov
sub
rolb
enter
scas
mov
fstpl
pusha
shlb
icebp
outsl
xacquire
mov
ret
cmpsl
loopne
xchg
mov
mov
je
cld
cmp
cli
rcr
mov
pop
add
or
ror
xor
pop
cmc
loopne
hlt
inc
fcompl
jns
cli
ja
xlat
and
jge
push
pop
popf
jp
loope
push
mov
rorb
pop
mov
nop
enter
xor
push
jb
in
in
test
mov
stc
addb
fsubl
jmp
fs
inc
pop
popa
in
cmp
adcb
sub
jo
and
lds
inc
sub
pusha
xchg
sar
repnz
sub
and
les
cmp
add
loope
mov
pop
push
mov
into
mov
mull
lret
sbb
fisubs
cmpsl
movsb
lea
add
fstl
dec
cmp
sbb
imul
or
jmp
call
xor
xchg
add
cld
ljmp
sarb
adcl
inc
rclb
jg
mov
ljmp
repnz
inc
lods
fcomi
cmpsb
lods
je
add
adcb
cwtl
rcll
sarb
sub
lcall
jno
dec
out
test
mov
fstpl
shr
jg
loopne
add
pcmpeqb
out
mov
push
mov
mov
mov
sti
mov
cwtl
inc
and
and
ja
call
cwtl
mov
jae
jae
sub
pop
inc
xlat
push
cmpsb
icebp
loopne
xor
dec
xchg
xor
popf
movsl
stos
inc
lock
inc
xchg
inc
orb
clc
scas
movsl
push
xchg
xor
or
enter
mov
outsl
cmpsb
mov
jmp
mov
push
jno
adc
sub
push
add
ret
daa
fdivs
mov
sti
fimull
ljmp
shlb
das
sti
or
add
dec
mov
aam
sub
insb
outsl
jle
add
in
mov
clc
pop
mov
adc
and
push
mov
lahf
sub
xor
mov
fs
dec
popl
pop
daa
push
jb
xchg
mov
jmp
cmp
jge
sbb
dec
adc
fcoml
loopne
fildl
jge,pt
sub
mov
xor
pop
cmp
mov
mov
push
xlat
xor
test
or
nop
test
clc
adc
push
lds
jmp
push
mov
fcomi
cmp
inc
lock
push
jle
pusha
sub
mov
lcall
cmp
sbb
inc
mov
mov
push
stos
fildll
inc
fldt
sarl
test
add
xor
jle
std
mov
sahf
xchg
jecxz
cmpsl
add
xchg
out
sub
adcb
test
shlb
ret
sbb
loopne
mov
sbb
cmc
aas
or
jb
outsb
or
js
fmuls
mov
mov
pop
add
repnz
ljmp
ret
gs
pop
nop
cmp
addl
and
stc
inc
jbe
pushf
or
ret
jg
mov
insb
mov
push
pop
xchg
fnstenv
push
adc
or
stos
dec
xor
lret
cmp
mov
test
daa
lcall
sbb
dec
inc
sarl
std
addl
js
cmpsl
call
icebp
pop
mov
pop
add
push
movsl
jge
push
stos
das
jge
or
jbe
push
push
xorl
pushf
rorb
cs
mov
aam
and
repnz
int
and
xchg
cmc
inc
stos
test
orb
out
out
imul
dec
jmp
mov
inc
divl
js
bound
loope
add
repnz
xor
idiv
scas
jmp
or
dec
lods
addr16
add
and
jns
push
jmp
push
hlt
sub
fldenv
add
lds
xchg
pop
das
push
insl
jo
or
out
sbb
sbb
test
xchg
xor
loopne
sub
movsl
lret
push
sbb
sub
or
cmp
sbb
dec
repz
sub
push
scas
pop
mov
add
dec
mov
dec
popf
cmp
andl
or
mov
enter
dec
jge
insb
leave
pop
inc
les
lock
dec
fdivl
lods
scas
ror
cs
daa
inc
mov
ss
dec
das
mov
push
jecxz,pn
fwait
jp
sub
and
mov
pop
pop
jle
pop
mov
pop
movsb
jg
add
clc
test
mov
ja
nop
dec
testb
insb
adc
scas
mov
insb
cld
lret
mov
add
mov
lock
nop
repnz
enter
cmp
lahf
xchg
push
inc
push
mov
icebp
xchg
push
inc
fs
adc
scas
loopne
imull
leave
inc
lock
dec
inc
das
push
or
jmp
mov
lcall
fsubr
sub
adc
sti
push
aad
insl
or
push
jne
aad
test
cmpsl
in
push
mov
test
dec
repnz
ljmp
inc
jecxz
or
lea
scas
jg
add
cwtl
outsl
xor
insl
daa
mov
shr
nop
inc
icebp
ret
and
mov
aad
xor
scas
lahf
ret
sbb
xchg
mov
imul
mov
push
mov
das
gs
sar
das
pop
cmp
out
xlat
push
sti
lea
cld
pusha
imul
es
cmp
insl
jl
mov
lahf
or
cwtl
sub
cld
andl
adc
stc
jo
jmp
dec
jmp
outsl
cmp
pop
push
leave
push
ret
ret
lock
pop
out
cli
pop
outsl
add
push
adc
mov
mov
in
repz
in
dec
js
inc
jb
iret
and
fucomip
fiaddl
jmp
ja
jle
xlat
sbb
pop
test
fcmovu
sahf
jns
dec
xor
xchg
jo
mov
jl
movsb
inc
insl
fs
inc
scas
inc
jne
sbb
jae
lahf
or
inc
jb
mov
push
icebp
or
out
in
adc
int
add
xor
movsl
inc
aad
sub
sbb
inc
xchg
and
sbb
sbb
mov
loope
das
ds
pushf
mov
jb
mov
sbb
imul
cltd
and
adc
or
inc
xchg
push
lds
out
and
pop
fnstcw
lret
push
lods
dec
nop
or
cmp
xor
cmc
xchg
clc
pop
hlt
cmp
stc
dec
add
mov
adc
sub
and
push
arpl
out
pop
lock
xor
or
mov
cmpsl
jb
into
cmp
pop
icebp
inc
inc
or
jp
jo
mov
shlb
int3
rcll
mov
push
fwait
adcl
xchg
adc
das
mov
sahf
xchg
icebp
shrb
sahf
fildl
sahf
add
in
int3
cmp
pop
xor
and
pop
mov
hlt
cmpsb
dec
in
dec
cmpsb
imul
jg
addl
push
pop
push
mov
dec
mov
inc
aam
ja
popf
in
cs
rcrb
xchg
fcmovnu
cmp
outsb
sbb
stos
mov
fsubs
iret
lcall
jmp
cwtl
movsl
sub
cs
ficoms
cmp
ja
out
add
xchg
and
test
jle
push
sahf
test
aaa
test
inc
mov
mov
test
fiaddl
adc
lock
out
xlat
sub
test
mov
gs
mov
sti
or
jns
mov
push
aam
jge
cmpsb
addb
push
aam
xchg
icebp
jp,pn
mov
mov
mov
or
int
fidivrs
sub
inc
jb
int
mov
fistpll
and
icebp
lock
stos
es
xchg
fisttps
or
jl
cs
jnp
mov
inc
xor
jl
notl
dec
repz
jbe
or
push
movsb
jg
add
mov
inc
sub
stos
xlat
arpl
mov
outsb
mov
clc
cld
pop
push
add
cld
outsb
fs
xchg
or
lods
push
mul
icebp
cmc
mov
sbbb
cmpsl
mov
testl
cwtl
sahf
test
in
sub
mov
into
mov
inc
and
add
cmp
jg
into
popa
sbb
lahf
inc
sarb
movsb
ret
das
outsb
cmp
cmp
mov
mov
push
int3
subb
aam
push
fucomi
dec
shrl
in
cmpsb
add
fcoml
adc
loope
mov
xchg
aas
lods
popf
iret
popf
xor
sub
sbb
jmp
cmp
shrb
scas
shrb
fmuls
lods
jnp
stc
mov
addr16
push
loop
fadd
lahf
xor
scas
fs
and
lds
aaa
stos
sub
frstor
cmp
inc
jns
loope
test
sub
leave
xchg
adc
insl
sti
fstpt
ficoms
sbb
ds
and
xchg
int3
aam
nop
lcall
ljmp
ja
repz
aam
subl
dec
filds
add
mov
inc
jecxz
add
push
dec
push
adc
addb
or
mov
dec
out
and
out
out
fnsave
fwait
sub
sbb
shr
lret
inc
ss
popa
gs
insl
pop
lea
mov
inc
jns
sahf
dec
dec
gs
mov
movsl
jg
pushf
das
filds
fisubrs
lret
mov
xlat
call
mov
mov
popf
lea
out
xor
sub
insb
mov
sub
lcall
out
jg
mov
aam
sbb
pop
aaa
pushf
push
fstl
addr16
mov
cmp
shlb
lods
inc
xor
jb
mov
cmp
add
cltd
xor
shll
and
insb
mov
lds
mov
jnp
repnz
or
jge
aad
inc
testb
imul
inc
mov
and
aam
filds
sbb
stos
ljmp
and
dec
sbb
ja
lcall
or
mov
xchg
es
cmp
test
testl
pop
aad
fcmovne
sti
rorb
sahf
xor
hlt
fsqrt
scas
std
inc
mov
lahf
sarl
cmp
push
daa
push
testl
dec
mov
stc
mov
jmp
cmp
imul
cmc
lods
adc
out
fildll
mov
xlat
and
xchg
mov
jg
jb
lret
adc
ja
mov
in
je
dec
inc
outsb
sbb
lods
sub
sbb
and
inc
sbb
jae
cmp
ss
test
sarl
aas
mov
adc
aaa
dec
adc
and
dec
or
dec
call
push
pusha
xor
push
popf
cmp
cs
mov
pop
loopne
inc
scas
mov
dec
decl
lcall
xor
pop
imul
iret
movsb
adc
cld
adc
out
insb
enter
mov
lcall
and
insb
ja
ljmp
je
dec
dec
xlat
lret
lcall
and
aad
dec
test
jg
and
repnz
aaa
out
clc
dec
clc
xchg
fistl
repnz
jne
lock
jnp
ret
gs
jnp
in
push
xor
bound
ret
mov
xorl
ror
xlat
fs
mov
cwtl
loope
fidivrl
imul
pop
push
lret
mov
dec
sahf
lea
jecxz
push
dec
cmp
cmpsl
mov
in
cs
bound
and
lret
or
fistps
ljmp
cmp
into
xor
mov
cmp
js
push
rcrl
sbb
add
xchg
xor
inc
xorl
movsb
add
pop
push
pop
mov
xor
inc
xchg
cmp
sbb
jge
jo
scas
lods
or
add
cmpsb
not
movsl
fbstp
int3
jecxz
dec
mov
je
jp
xchg
cld
xchg
stc
mov
mov
adc
push
into
fstps
les
sti
or
push
push
shrl
and
adc
repz
jae
lods
sub
movb
shrb
es
fstl
add
inc
hlt
gs
sub
mov
mov
movsl
mov
leave
cltd
cmpsb
in
inc
pushf
mov
cmc
push
lret
push
xchg
add
xchg
xchg
in
sbb
add
push
icebp
xchg
enter
add
pop
inc
cmp
push
cmp
jge
xchg
inc
cmp
pop
cmp
daa
xor
ret
or
add
xchg
popa
mov
mov
sub
xor
mov
testb
pop
orl
adc
cmp
push
ja
repz
sub
push
pop
jae
mov
push
stos
cmp
out
cltd
cltd
inc
or
xor
loopne
mov
popa
adc
adc
fld
and
push
leave
sub
add
aaa
loopne
repnz
mov
inc
aaa
push
fistpll
cmpsl
mov
cmp
stc
adc
jecxz
leave
pop
test
or
cmp
adc
jns
inc
cmp
add
arpl
xadd
xchg
jecxz
pop
aas
test
xchg
push
push
in
pop
lods
test
push
and
dec
leavew
in
aaa
push
gs
jp
mov
cwtl
stos
jp
sbb
ds
mov
js
mov
sbb
js
out
outsl
pop
jno
pop
mov
sbb
push
push
jg
jae
das
or
sbb
and
jo
sbb
addr16
outsb
jl
cwtl
mov
jecxz
pop
push
daa
sub
stc
stc
mov
insl
sub
push
iret
mov
inc
sub
movsl
mull
das
mov
mulb
adc
mov
aaa
mov
orb
sub
nop
cld
jmp
dec
jmp
dec
leave
cmp
shll
scas
jae
and
sub
mov
cmp
outsb
mov
mov
mov
jp
sahf
pushf
xor
or
scas
and
xor
addr16
jge
mov
cwtl
scas
mov
stc
cmp
or
roll
fadds
dec
push
in
jbe
sbb
lods
jge
sub
push
mov
bound
or
packsswb
sub
pop
rclb
adc
jle
cmp
loope
mov
or
add
mov
pop
bound
clc
add
in
loope
stc
scas
clc
mov
shrb
fisttps
add
aam
roll
cs
test
dec
fcomps
addr16
pop
out
fadd
xchg
xchg
cmp
xchg
xor
loop
mov
js
stos
dec
mov
xchg
filds
js
cmpsl
mov
jo
ljmp
adc
and
lcall
adc
adc
stos
jle
std
inc
test
stc
out
push
inc
insl
imul
xor
xchg
fcomi
dec
fdivrs
adc
outsl
out
push
or
add
aad
mov
mov
in
fstp
push
ljmp
cmp
dec
pop
inc
rol
jp
cmpsl
mov
hlt
pop
mov
push
dec
mov
leave
cmp
jns
xor
xor
mov
mov
std
gs
sub
mov
sbb
mov
das
arpl
xor
and
jecxz
mov
mov
insb
push
cmc
inc
mov
int
cmp
push
pop
mov
into
push
in
sbb
xor
lock
dec
imul
cmp
mov
js
imul
js
incb
jecxz
jb
or
and
dec
sub
dec
scas
lods
loop
jb
pop
mov
jl
jae
push
sbb
mov
std
in
arpl
cs
leave
inc
and
or
mov
hlt
xchg
cmpl
out
pop
cli
xchg
and
sbb
inc
pop
frstor
and
mov
pop
xor
lods
jle
scas
mov
stc
dec
cs
mov
jne
dec
mov
leave
jb
imul
inc
or
inc
leave
aaa
pop
xchg
rolb
and
pop
out
stc
inc
mov
push
inc
jge,pt
movsb
into
loop
js
or
hlt
push
nop
jge
sbb
out
test
push
gs
loope
add
arpl
and
dec
in
cmpsb
push
mulb
jg
popa
dec
popf
sbb
popf
dec
push
call
ljmp
sub
cli
push
insb
aam
add
out
cmp
aas
in
loop
add
stos
lret
rcll
mov
mov
gs
add
inc
mov
shrl
and
imul
cs
add
mov
cmp
jae
or
loop
jle
aad
addr16
xor
cmp
lock
add
mov
xchg
xchg
mov
jge
mov
mov
lret
sub
das
pop
push
mov
test
or
or
into
or
xor
pop
shll
inc
inc
xor
into
rorb
fwait
cmpsb
clc
sahf
aam
sti
sub
cmpsb
push
and
jge
add
jo
cmp
push
pushf
or
push
repnz
sbb
iret
imul
lret
cltd
jg
ret
mov
shll
adcb
jne
pop
orb
in
ja
jnp
aaa
mov
arpl
call
stos
mov
jmp
xorl
fcos
mov
aaa
push
movq
add
shll
push
inc
out
lds
mov
mov
movsb
inc
xor
sub
lret
mov
jp
or
icebp
sbb
cltd
cmp
cmp
pop
mov
dec
out
push
pop
mov
adc
sub
add
jnp
iret
push
pushf
and
push
mov
mov
dec
pushf
pop
nop
scas
in
je
mov
push
ss
xchg
push
stos
in
dec
ret
inc
inc
push
les
or
ret
jmp
push
cmpsl
cwtl
push
scas
xchg
and
pop
fldenv
mov
xlat
add
call
mov
adc
lea
xor
mov
cmp
sub
les
mov
jl
ja
out
mov
push
sbb
pusha
addl
mov
scas
int3
leave
cltd
jns,pn
scas
lahf
repz
cmpsl
cmp
mov
dec
mov
pop
mov
testb
mov
xchg
call
pop
push
popf
inc
aam
push
leave
xorl
and
out
clc
add
cmp
aaa
inc
and
mov
mov
repz
pop
lcall
ret
sbb
rorl
or
pop
stos
lods
orl
push
sbb
mov
jmp
jo
rcl
shll
outsl
lds
mov
ret
dec
pop
mov
sbb
mov
daa
jns
lret
divl
cs
clc
dec
dec
mov
mov
mov
pop
jl
out
jp
adc
iret
gs
pop
ja
std
or
add
aad
mov
and
mov
dec
inc
push
mov
std
and
popf
movsb
fsubr
dec
pop
mov
mov
hlt
mov
push
in
test
pushl
shlb
sahf
int3
cmpsb
inc
pop
lea
mov
xlat
int
and
push
dec
daa
pavgw
cmc
dec
pop
ret
mov
not
push
xchg
and
mov
test
or
adc
pop
out
daa
call
loop
scas
cmpsb
jle
ljmp
push
cwtl
leave
rorb
sbb
sbb
movq
es
cmp
push
adc
xor
jno
in
lahf
xchg
lret
cmpl
gs
pop
xchg
sar
pop
inc
add
cwtl
jg
push
lret
aad
mov
aaa
and
fldl
ret
mov
outsl
xor
daa
dec
outsb
cmc
pushf
push
lcall
insb
stos
push
fidivl
shrb
mov
xor
hlt
pop
lret
scas
pop
jmp
int3
scas
or
mov
push
dec
ja
cli
nop
lahf
aaa
cmp
push
insl
mov
push
in
push
jl
or
mov
mov
xchg
dec
xor
out
rcrb
icebp
aam
movsb
xchg
inc
mov
sbb
and
mov
daa
shr
adc
fcomps
push
dec
inc
xchg
mov
sub
dec
loop
adc
imul
mov
add
push
push
insl
cs
add
int
or
xchg
imul
and
ss
push
daa
movsb
push
cmc
jmp
jbe
sbb
std
sarb
dec
cltd
mov
fucomip
mov
cmpsl
mov
ljmp
add
and
push
inc
add
jle,pn
jp
fcompl
lods
mov
shrb
jae
bound
xchg
and
xor
mov
mov
push
std
sub
or
aaa
cmp
pop
pop
scas
or
sbb
push
lods
lods
pop
push
lock
ds
out
hlt
incb
rorl
loop
stc
adc
mov
jl
imul
test
test
clc
sbb
scas
xor
pusha
push
cwtl
or
cli
jo
fdivr
xchg
jnp
fldl
leave
iret
xchg
sarl
imul
ret
cs
adc
loope
sahf
xor
movl
xchg
add
jg
or
pavgw
stos
lds
psadbw
inc
jb
je
scas
sub
jp
pop
xlat
and
andl
cld
mov
mov
repnz
jg
mov
out
add
scas
loopne
call
xchg
ja
or
int3
ljmp
add
pop
xlat
ret
stc
jge
scas
lods
pop
mov
fisttpll
iret
xor
andl
out
push
lcall
sub
adc
and
fnstsw
jo
stos
incb
js
jns
into
lahf
jb
sar
xor
pop
nop
cmp
out
test
iret
inc
push
popf
cld
xor
in
jmp
daa
sub
push
lret
dec
rcll
push
cmc
pushf
enter
mov
outsb
in
inc
in
inc
mov
iret
movsl
std
out
cmp
adc
jns
popa
inc
flds
mov
repz
test
jns
shl
lret
out
cmp
mov
add
outsb
fsubrl
inc
mov
aas
scas
decl
leave
fisttpl
jns
out
enter
sbbb
inc
cmp
pop
shl
xchg
push
push
pop
stos
addr16
loop
adc
pop
je
out
into
or
push
sbb
cmp
bound
mov
notb
pop
mov
icebp
clc
add
mov
mov
and
int3
sbb
rorl
sbb
sbb
pop
xchg
mov
mul
ds
adc
dec
cli
mov
mov
sub
mov
mov
sbb
pop
in
stos
outsb
adc
int
add
mov
xorb
ret
xchg
divl
repnz
pop
sti
mov
xchg
sub
pop
pop
fs
das
mov
cmp
std
mov
push
jns
bound
mov
push
iret
bound
das
in
or
js
pusha
movsl
das
jb
jbe
sub
xchg
jl
leave
push
mov
aaa
xor
mov
popf
les
mov
xlat
xlat
jmp
inc
or
xchg
ficoml
repnz
mov
filds
push
iret
jmp
addr16
int
outsl
imul
mov
movsb
lods
sbb
and
or
xchg
fbstp
sub
and
jl
sbb
xor
push
outsb
xor
popl
lret
push
sbb
popf
in
in
mov
mov
mov
xchg
lds
jge
ja
push
in
pop
lock
stos
and
mov
adc
adc
xlat
xlat
adc
js
cs
adc
xor
pop
and
xor
dec
ret
je
loopne
xlat
mov
jae
bound
dec
rdpmc
enter
int
push
add
push
mov
popf
inc
pop
cmpsb
popf
cmp
out
xor
add
add
sub
xchg
inc
pop
cli
lcall
cmp
or
mov
test
inc
insb
jb
or
aaa
jg
cmp
xor
xor
push
in
into
ret
mov
pop
test
or
testb
lret
arpl
sbb
or
sub
mov
out
popa
ficoms
add
push
mov
pop
movsl
sbb
clc
comiss
pop
testl
xor
int
push
push
insb
mov
add
cmp
pop
or
hlt
repnz
jnp
jle
movsb
pcmpgtw
mov
jb
jg
pop
jne
sub
mov
mov
inc
mov
call
popa
jb
pop
dec
and
xor
jl
pop
aas
adc
in
loopne
cmp
mov
fldt
jae
jmp
test
xor
inc
jmp
mov
sbb
xchg
push
mov
add
shrl
push
sbb
xor
inc
jg
loopne
sahf
out
push
movsl
push
or
insl
xchg
mov
imul
mov
dec
mov
cmc
xchg
out
push
ljmp
movsl
push
inc
not
loopne
jno
adc
sub
or
fmulp
inc
inc
ss
popf
mov
loopne
push
xor
in
adc
loopne
mov
arpl
mov
pop
addr16
push
cmp
cmp
stc
mov
sub
dec
mov
or
sub
or
inc
lock
test
mov
rol
lahf
add
cli
xchg
out
out
sub
and
ret
std
or
enter
fdivr
xlat
fisttpll
or
loope
mov
dec
repz
sub
inc
xchg
test
pusha
pusha
out
cmc
mov
stos
mov
sub
lock
or
ja
sbbl
jl
clc
sbb
imulb
push
hlt
lods
push
repz
sbb
jne
and
xor
repz
pusha
jmp
ljmp
mov
je
pop
aaa
cwtl
cmpsb
push
inc
or
aas
addr16
dec
ret
dec
mov
dec
add
jl
sti
rcrl
movsb
inc
icebp
push
mov
xchg
adc
sub
mov
popa
outsl
js
or
sbb
repz
add
leave
adc
dec
shrb
lods
dec
cmp
adc
jge
or
xor
sub
std
xor
mov
ret
lods
push
mov
cmpsb
pop
test
lahf
or
das
bnd
dec
outsb
and
xchg
inc
mov
xor
pop
rolb
mov
xchg
xor
dec
cmc
jbe
aaa
fsubrs
shlb
cmp
xlat
pop
mov
inc
mov
pop
xchg
into
pop
adc
cltd
push
mov
or
jne
fistpl
shlb
pop
test
leave
in
pop
cmp
add
pop
ficompl
pop
ficomps
sbb
sbb
push
mov
andl
xor
pop
ret
and
mov
cmp
inc
cmpsb
xchg
outsl
cld
rorl
cmp
test
mov
das
pusha
ret
lret
jmp
ds
sub
inc
xor
mov
mov
arpl
rcrb
adc
add
test
int3
es
test
mov
sbb
add
mov
comiss
pop
jl
js
and
insl
scas
js
push
cltd
push
pop
add
repz
scas
cmp
sti
dec
ret
ret
imull
sahf
decl
test
sub
enter
repz
out
cmc
mov
sub
call
sti
stc
addr16
jmp
xchg
xor
les
sub
or
loope
in
mov
test
sahf
fstps
fisubrl
cmp
jbe
movsl
popa
popa
int3
or
xchg
or
mov
cmpsl
lahf
stos
outsl
push
leave
mov
push
aas
mov
dec
orl
mov
sarl
pop
push
mov
push
dec
std
das
ficoml
push
sub
out
idivl
jp
into
add
jle
sub
cmp
push
and
pop
mov
test
rcr
fildll
pop
jns
and
dec
dec
lods
pop
ja
cmp
into
and
and
xor
cld
sahf
cmpl
push
and
fiadds
rclb
jnp
adc
push
push
fadds
arpl
or
das
push
xchg
mov
push
insl
and
push
mov
sbb
mov
ja
mov
inc
cmpl
jge
jbe
mov
mov
jl
cmp
and
insb
or
shll
lcall
jg
test
fs
jle
popa
lret
sbb
mov
iret
dec
pop
testb
push
call
dec
mov
cli
hlt
rol
mov
pop
test
sarb
cwtl
add
rcll
imul
loopne
or
fisubrs
mov
insb
insl
hlt
add
push
es
mov
or
mov
fxch
dec
lods
es
dec
popf
lods
in
push
sahf
ss
arpl
mov
bound
mov
cmpsb
mov
cmpsb
and
sbb
jo
popf
aas
pop
add
in
movsb
bound
pushf
rcl
push
lock
ret
test
mov
jb
imul
inc
sbb
test
sahf
push
inc
inc
adc
xchg
dec
enter
mov
shl
shrl
push
sbb
xchg
repz
imul
in
push
inc
jne
push
in
cli
jl
pop
cld
mov
or
ljmp
int3
popa
movsb
aaa
adc
outsl
jl
push
aas
ds
mov
cmpsb
aaa
fbld
cwtl
popa
imul
mov
add
jb
cs
push
ret
xor
call
push
jae
popf
mov
stos
stc
arpl
cmp
pop
mov
jg
and
pusha
cwtl
daa
repnz
add
mov
aaa
scas
in
rcr
inc
inc
mov
mov
clc
lahf
jmp
or
bound
lcall
sbb
or
in
js
cmp
jp
push
inc
popa
inc
mov
shl
or
cmp
xlat
adc
rolb
fucom
sub
fdivrs
fnstcw
or
iret
imul
jge
movsb
movsb
mov
fisubrl
movsb
bound
mov
mov
stos
mov
or
lea
decb
ret
xchg
arpl
push
aas
xor
fwait
std
stc
rcll
jno
jge
insb
xor
mov
inc
dec
dec
sub
push
xchg
stos
daa
ljmp
jmp
lods
cmpl
mov
xor
xorl
dec
xlat
and
lds
mov
and
jmp
daa
cmp
inc
insb
sbb
jge
add
data16
sbb
mov
cmp
fdivl
or
or
xchg
add
jo
ja
clc
mov
ljmp
dec
lods
addb
add
mov
jge
mov
or
gs
xchg
add
mov
mull
enter
sub
outsl
xchg
ja
xchg
jp
fadd
orl
pop
or
shrl
dec
mov
push
das
loop
xchg
or
jle
adc
das
je
out
out
add
xorb
push
push
shlb
mov
popa
jmp
leave
ret
js
xchg
xchg
call
push
sub
ja
movsb
out
sub
and
fcomip
sub
xor
dec
xor
shll
enter
int
sbbb
pop
insb
je
push
pop
call
dec
sub
enter
push
ds
in
or
mov
xchg
bound
or
and
movsb
insb
xor
addr16
mov
adc
pop
mov
mov
inc
cmp
jge
add
rclb
jg
inc
je
cmp
jb
insb
cld
jae
test
cli
scas
xor
jbe
push
jne
pop
or
ret
ljmp
push
push
fnstcw
iret
insb
ret
insl
mov
mov
fcompl
outsb
push
cmp
pop
sbb
int3
or
and
gs
test
cmp
adc
push
or
cmp
push
sub
push
and
mov
xchg
sub
in
es
mov
lea
adc
mov
int3
dec
jp
push
in
cmp
pop
cmp
aad
and
mov
sarb
and
test
cmp
sub
xor
mov
push
outsl
mov
dec
dec
imul
xchg
cmp
movsb
pop
scas
mov
xor
fstps
mov
cli
add
sar
push
jns
push
js
jb
mov
push
jbe
out
pop
pop
enter
es
push
mov
out
jmp
sub
into
lock
add
scas
sub
pushf
clc
lods
push
push
xchg
cmp
inc
test
sub
aas
test
pop
xlat
mov
test
mov
out
nop
pusha
jnp
in
mov
dec
sbb
mov
lret
mov
loop
dec
clc
hlt
pushw
iret
xor
mov
or
push
lcall
sub
jecxz
adc
lods
in
mov
loope
ss
xor
cmp
pop
pop
jae
inc
call
or
add
lods
and
popf
adc
mov
dec
jb
mov
xchg
jp
sahf
or
pop
imul
std
lea
sbb
loope
mov
into
jmp
add
dec
mov
adc
inc
jp
dec
mov
gs
jmp
adc
jb
out
jbe
sub
push
nop
cli
cltd
sarl
stos
mov
lret
xorl
das
mov
test
sbb
fistpll
int3
dec
leave
or
inc
imul
sahf
cmp
mov
dec
cwtl
aas
mov
xor
dec
jb
fsubrs
mov
inc
loope,pt
xchg
rcrl
xlat
sbb
inc
ds
adc
mov
mov
and
ja
bt
out
das
ret
movsb
fildll
xor
stos
sti
insl
cmp
cld
cmp
cmpsl
sub
ljmp
mov
xor
pushf
cmp
cmp
es
mov
sbbb
clc
les
inc
hlt
arpl
std
inc
jno
clc
sub
dec
push
and
pushf
cld
mov
or
fiaddl
pop
sbb
icebp
push
cmpl
mov
mov
pop
test
mov
jns
jmp
ljmp
pop
dec
pop
cmpsl
ja
fldl
sub
out
mov
lods
int3
push
std
lahf
daa
scas
add
pop
shl
outsb
movsl
xor
fists
mov
aam
enter
sti
push
lea
mov
icebp
in
add
cld
and
inc
mov
inc
sub
xchg
inc
jbe
xchg
shll
add
adc
mov
mov
sub
jb
cmp
xrelease
out
mov
sub
push
neg
aad
mov
inc
les
clc
fwait
mov
jle
inc
enter
rolb
callw
js
mov
cmpsb
push
sbb
and
or
xchg
stos
popa
mov
subb
push
adc
mov
xorb
adc
or
test
es
movsl
in
lods
ret
std
pusha
cmc
or
jo
outsb
stos
xor
push
jb
int
dec
pusha
mov
xlat
jle
cmc
pop
or
jb
dec
out
test
mov
jno
xchg
rcrb
cmp
sub
loopne
call
xchg
enter
jecxz
jnp
inc
sti
into
sub
stos
cmc
lret
mov
imul
jo
pop
adc
scas
repz
stos
in
subb
lahf
jb
pop
inc
mov
das
fisubrs
sti
popf
sub
pusha
imul
push
lret
test
push
xchg
cmpsl
xchg
fidivl
jmp
inc
xor
decb
das
cmp
cmp
push
and
repz
or
in
and
mov
adc
dec
pushf
add
inc
andl
pusha
test
ljmp
fidivrl
std
adc
push
dec
add
dec
adc
ja
push
fiadds
pop
ss
pop
cld
adc
repz
sbb
or
lcall
mov
sbb
xor
sub
mov
fstps
mov
mov
xor
es
jb
cmp
cmp
cld
pushf
add
add
ret
ss
jne
push
fst
push
sahf
xchg
fwait
lods
in
and
data16
xor
pop
sbb
fbstp
sub
outsb
adc
mov
and
sarb
mov
dec
stc
and
int
push
and
jbe
push
scas
cmpsl
mov
inc
sub
adc
pop
aam
fmul
pop
outsb
clc
jb
jle
jno
xchg
in
mov
xor
aas
xor
or
dec
cwtl
andnps
fwait
mov
mov
cltd
xorl
inc
xchg
in
push
mov
xor
push
cli
imul
mov
nop
pop
cmp
push
xchg
pop
push
mov
jle
xchg
jo
rorb
stos
int
adc
add
mov
push
fistpl
add
fwait
and
arpl
lret
mov
dec
cmp
inc
mov
jno
loop
sahf
int
arpl
dec
mov
ja
jl
add
mov
sbb
ret
and
and
dec
insb
and
mov
out
call
push
push
inc
lock
hlt
sbbb
add
jns
inc
inc
les
pop
mov
int
mov
decb
xchg
xor
sti
movsb
js
jl
adcl
inc
mov
sarb
lods
sub
dec
imul
lcall
inc
cmp
push
jbe
les
push
bound
and
mov
sahf
lea
push
repz
push
push
fstl
test
lcall
mov
ljmp
scas
adc
fs
or
xchg
mov
leave
inc
fcoms
jle
add
xchg
cmp
test
std
mov
insb
fbstp
fistps
xlat
int3
fs
sub
or
inc
ss
es
or
pop
pop
repz
push
jp
stos
leave
jae
fstps
pop
xor
push
call
cld
jns
hlt
andl
dec
test
xchg
std
xor
xor
and
jno
sbb
jnp
adc
mulb
fcmovnu
mov
popf
cltd
shll
movsb
xchg
andps
push
pop
and
jo
sub
in
dec
outsl
xor
pop
adc
mov
mov
stos
fstl
adc
xchg
sub
inc
loop
shl
inc
jno
cli
mul
mull
fcomps
mov
lods
jns
jne
xchg
sbb
mov
lds
sbb
mov
and
popf
mov
push
jnp
push
aas
jecxz
out
sub
xchg
sub
push
jle
fiaddl
out
or
xchg
shll
jno
scas
xorl
rolb
sbb
aad
call
xor
pop
mov
repz
or
sub
mov
push
rclb
mov
out
lea
inc
imul
xchg
das
repnz
in
sbb
inc
mov
jnp
jl
sub
add
sbbl
pop
cmp
xchg
pushf
iret
xchg
xorl
xchg
pop
xor
and
jnp
int3
mov
ss
and
fwait
push
or
push
sub
dec
xor
mov
cld
pusha
imul
adc
aas
lds
vpmacsdql
rorl
dec
fdivl
mov
xchg
fsubrl
sbb
les
arpl
fwait
pshufw
gs
fs
push
mov
cltd
add
test
pop
jle
fldcw
jmp
popf
jp
add
loope
xchg
add
fildll
leave
fwait
dec
sahf
adc
or
icebp
ljmp
jle
adc
test
cli
add
or
aam
daa
pusha
dec
incl
fcomps
and
int3
cltd
adc
movsb
call
cmp
jns
fiaddl
xlat
xchg
xlat
mov
mov
mov
mov
icebp
mov
sysexit
test
repnz
subb
test
dec
dec
outsb
jle
ret
sub
hlt
out
in
push
lret
daa
sub
fsubr
pop
enter
and
repz
or
adc
rorb
xchg
out
and
or
push
fmuls
xorb
lcall
out
mov
fldenv
pop
outsb
jne
jns
idivl
es
mov
cmpsl
test
or
out
not
shl
cli
push
pop
lcall
into
lret
mov
lods
xchg
add
adc
sub
push
mov
loop
add
fiadds
and
mov
cmpsl
movsb
jle
xor
out
pop
jne
mov
fisubl
cmp
adc
sbb
mov
fwait
scas
mov
scas
mov
mov
jle
inc
loopne
sar
dec
jne
clc
movsb
cmp
xchg
inc
loope
cld
mov
shrb
pop
sbb
andb
jge
test
loopne
dec
cmpsb
mov
pushl
call
or
fsubrl
jns
data16
add
dec
inc
dec
inc
lahf
int3
or
sti
inc
lret
jle
jl
mov
ds
in
mov
fisubl
mov
fsts
mov
xor
imul
and
ljmp
pop
sub
ds
sub
sbb
fisttpl
push
pop
and
addr16
or
sahf
xchg
mov
or
stos
cmp
decb
shl
rorl
test
push
aam
lock
scas
gs
aas
xrelease
xorl
pushl
mov
fistpll
aad
pop
push
pop
lret
fcoms
stos
jp
add
jmp
je
rorb
pop
xorl
cmp
mov
in
rcrl
push
push
shll
js
push
lock
pop
std
rorb
leave
shrb
mov
mov
adc
xchg
mov
or
mov
outsb
fs
adc
orl
jns
movsb
add
daa
xor
pop
les
lcall
mov
pushf
shl
dec
std
cmp
mov
cmp
mov
sub
cld
addr16
les
or
inc
mov
mov
inc
cmp
add
cs
add
hlt
pop
repz
cmpl
loope
push
or
cmp
and
mov
incb
in
push
nop
mov
sub
jne
repnz
loop
stos
or
adc
push
mov
add
push
rcl
inc
pop
test
sbb
mov
gs
les
lret
push
xchg
jmp
xor
or
hlt
popa
nop
sub
test
dec
in
xor
jge
or
lods
pop
jae
stos
sbb
mov
pop
dec
xchg
and
lret
in
jmp
sub
fnstsw
sbb
loopne
cmp
shlb
ss
dec
pushf
cmp
rorb
pop
pushf
stos
sub
icebp
add
cmp
xchg
mov
and
stos
sahf
mov
sub
cmp
repz
adcl
rcrb
test
sbb
in
loopne
xchg
push
and
out
sub
ss
cmp
dec
aas
test
rcl
mov
in
mov
pop
js
sbbl
popa
cmp
in
pop
mov
nop
push
fisttpl
mov
add
add
adc
sar
push
loopne
popa
and
ljmp
adc
je
sbb
les
dec
jne
cmp
push
icebp
aas
jo
sbb
dec
mov
mov
notb
outsb
test
push
andb
in
xor
and
sbb
mov
mov
int
dec
dec
or
mov
push
pop
inc
mov
or
in
push
sbb
mov
jo
int
lock
aaa
mov
sub
or
dec
enter
addl
sti
sbb
cld
loope
pop
adc
pusha
std
dec
sub
pop
inc
test
loope
out
leave
int3
adc
sub
outsb
pop
stos
enter
sahf
cmp
ror
jg
test
shll
sbb
lret
ret
mov
or
jg
out
in
dec
mov
mov
int
lcall
hlt
mov
push
and
test
dec
daa
jno
inc
push
loop
or
lds
insl
es
pop
lods
adc
loopne
cltd
outsb
xchg
push
arpl
mov
jno
pushf
mov
jge
aam
adc
pop
push
je
jae
sub
add
mov
aaa
lds
cltd
xor
cmp
inc
mull
out
mov
mov
mov
pop
xlat
sub
mov
fmuls
dec
out
sti
popa
and
cmc
dec
push
repnz
mov
push
dec
enter
js
push
pop
adcb
lods
jp
in
cs
inc
xchg
mov
push
mov
icebp
mov
aaa
insb
adc
add
repz
mov
sub
popf
movsl
xchg
xchg
add
popf
xor
xor
push
pop
int3
js
dec
fldl
sbb
test
aam
shl
push
mov
dec
xchg
fldcw
lock
inc
push
sub
mov
push
addr16
fbstp
dec
cmp
mov
movlps
das
mov
mov
lcall
mov
ljmp
jge
jl
sbb
jge
adc
mov
inc
sbb
mov
xor
xorb
pop
add
fnstenv
call
jo
shlb
test
sahf
inc
mov
adc
jmp
push
dec
pop
nop
ljmp
pop
in
pushf
pop
fs
mov
sahf
xchg
sbb
repnz
hlt
cmpsl
ss
out
xor
adcl
cld
aaa
sub
xchg
sub
add
lret
push
movsb
pop
or
dec
aaa
loopne
or
xor
call
dec
push
fdivs
mov
sub
add
mov
ljmp
insl
rolb
cmpsb
xor
dec
cmpsb
fsubr
fs
push
orb
in
lods
pop
in
and
adc
mov
lret
lret
xor
adc
ret
loop
inc
dec
mov
inc
insb
ljmp
rolb
inc
and
or
outsl
mov
aaa
clc
imul
pusha
cld
pusha
ret
call
sub
xchg
and
push
cwtl
ds
clc
repz
cli
hlt
popf
insl
in
nop
inc
cmp
imulb
int3
pop
push
clc
pop
push
adc
cmp
jmp
push
xchg
push
and
daa
sti
scas
xorb
dec
mov
mov
sub
andl
andb
sub
sub
ret
scas
cwtl
mov
lret
mov
mov
test
sahf
fistl
inc
mov
out
je
sub
mov
jle
lret
insb
xor
pop
add
inc
pop
lock
rclb
daa
jle
aad
sub
mov
cmpsl
sbb
or
mov
mov
fdiv
push
and
add
push
enter
inc
je
ret
cmpsl
lcall
bound
jmp
outsb
jbe
add
xchg
in
mov
cs
mov
add
sbb
sti
repz
dec
loop
cld
xchg
dec
mov
lcall
and
mov
into
mov
mov
repnz
dec
push
mov
out
jp
mov
xlat
lods
cltd
cmp
mov
pop
rolb
int3
insb
push
movsl
adc
xchg
cmp
jecxz
int
lock
int
sub
cwtl
shrl
jge
cmp
add
xchg
lret
and
int
xchg
pop
in
push
enter
jo
daa
xchg
js
cwtl
sub
pop
gs
hlt
jne
push
inc
fisttpll
sbb
inc
push
xor
mov
pusha
subb
fstps
sub
ss
test
and
leave
fcoml
jae
lcall
aaa
fisttps
fidivrl
fcomp
lods
ret
popa
cmp
mov
push
sub
dec
lds
mov
test
jne
pop
jb
mov
testl
cmp
add
je
push
ja
mov
xor
mov
lods
sahf
out
push
pop
dec
mov
xchg
mov
pop
in
jp
addl
inc
mov
push
jne
decl
cmc
dec
xchg
pop
aas
mov
push
push
jp
fists
aaa
nop
rcrb
mov
int
out
dec
hlt
inc
pmullw
mov
push
pop
mov
sahf
inc
daa
fcmovbe
daa
arpl
pop
and
loope
das
dec
xchg
inc
scas
hlt
cmp
jmp
push
xchg
mov
adc
clc
cli
lret
adc
iret
jne
test
dec
or
mov
cltd
loope
stos
test
jns
cs
bound
popf
cmp
adc
xor
rorb
imul
xchg
sarl
xor
fs
sub
or
mov
mov
rcl
xchg
xorb
dec
or
sub
mov
shlb
mov
loop
aad
mov
dec
mov
movsb
fwait
int3
dec
cmpsb
push
pop
jmp
mov
andl
arpl
js
lods
shrl
and
jle
cmp
addr16
out
add
cmp
jne
in
jg
out
call
in
cmp
sbb
lcall
inc
je
bound
nop
ljmp
jge
add
push
aaa
stos
mov
loope
lahf
pop
addr16
inc
imul
sub
stos
bound
repz
cmc
jb
jmp
dec
inc
test
jmp
push
rorb
je
sbb
xor
call
outsb
fsubrl
xchg
inc
inc
mov
and
mov
in
mov
lret
dec
mov
cmp
fucomip
sbb
cmp
add
add
sbb
js
pop
dec
dec
repz
fcom
dec
adc
mov
loope
dec
insl
mov
out
stc
lahf
mov
cmc
push
or
cmp
adc
push
xchg
sbb
insl
mov
pushf
mov
pusha
or
cmpsb
je
fldt
cmp
imul
out
cmpsb
aaa
mov
data16
arpl
pop
int3
xchg
mov
call
sbb
aam
jbe
pop
into
inc
xchg
lret
or
and
inc
rorl
xchg
mov
jnp
xchg
loopne
push
call
pushf
mov
sbb
add
dec
mov
into
pop
jle
cmc
push
xor
push
lcall
jl
xchg
js
popa
inc
push
lret
outsl
add
das
ss
repnz
pop
loop
inc
cmp
daa
push
lods
test
sub
pop
and
add
dec
int3
push
or
shll
das
mov
mov
adc
loop
fisubrl
sub
jmp
pushf
cmpsl
dec
mov
lret
dec
push
push
push
fcomp
xlat
jl
push
inc
aam
cs
nop
insl
int
stos
add
lahf
lcall
add
test
and
lcall
cmp
or
decl
fidivs
mov
jecxz
sbb
mov
push
pop
mov
out
jge
pop
stos
add
test
add
in
imul
mov
leave
sarl
pop
sbb
push
pop
dec
mov
xchg
sets
cltd
test
xor
rcrl
add
shlb
lcall
mov
jb
mov
xlat
popa
pusha
pushf
punpckhdq
sub
adc
xchg
scas
sti
test
mov
into
add
sub
das
xchg
bound
add
mov
dec
cmp
mov
and
ja
dec
testb
fstpt
mov
cmp
filds
fidivl
xor
int3
xchg
adc
sbb
push
stos
adc
sub
mov
pop
inc
mov
les
and
roll
rcrl
sub
mov
imul
ja
mov
xor
call
xor
inc
mulb
add
das
push
pushf
jbe
out
repnz
addr16
cwtl
dec
push
dec
hlt
and
in
mov
and
scas
shrb
push
mov
ds
add
push
sbb
pusha
sub
inc
scas
popa
mov
adc
dec
popf
ret
cmpsb
popf
test
or
inc
jg
lcall
hlt
pusha
jbe
mov
arpl
add
aam
icebp
cltd
push
xchg
aas
shll
sbb
scas
cwtl
adcb
ja
in
enter
scas
dec
ror
fstps
mov
push
loop
adcl
fisubrs
sbbb
mov
leave
dec
pop
xchg
jmp
popa
cmpl
pop
pop
jb
mov
je
cmp
pushf
jno
sub
rcrb
rclb
and
fwait
mov
stc
loop
call
jl
sub
dec
xchg
mov
jnp
mul
jmp
mov
js
xlat
cmp
sbb
pop
into
xchg
jle
xor
sub
fistl
adc
ficoml
jns
push
push
sbb
mov
gs
cmp
push
dec
sub
aam
insl
aad
dec
adc
shlb
out
add
jle
out
insl
test
int
lahf
dec
cld
jecxz
ret
in
jne
mov
cmp
mov
jno
pop
popl
xchg
fmuls
cmp
inc
js
pop
add
xchg
movsb
cmpl
aas
push
out
jle
pop
int3
lock
cmp
jmp
icebp
int
aas
and
in
pop
fsubs
sbb
adc
shl
repz
pop
lods
mov
jb
and
jmp
pop
arpl
jge
jnp
mov
xor
ljmp
inc
js
xchg
nop
add
roll
and
or
xor
mov
sbbb
imul
out
mov
lcall
rorl
lcall
pop
cmp
push
das
mov
lods
pop
inc
stos
int3
and
jno
mov
sti
xor
inc
push
fnstsw
cmp
jno
and
mov
lods
in
adc
mov
std
test
lods
rcrl
pushf
aad
xchg
fstpt
shll
nop
in
sbb
pushf
mov
mov
xchg
add
daa
cmp
lock
cmp
scas
add
stos
and
aas
mov
xchg
sbbl
test
cld
xor
add
mov
inc
cmc
mov
mov
cld
ds
leave
jl
fmul
adc
sub
inc
or
jmp
mov
aaa
js
adc
mov
sahf
shl
xchg
add
adc
ficompl
xor
xchg
ljmp
dec
idivl
lock
mov
jno
add
or
popf
cmp
or
dec
shl
cmp
popf
lods
adc
sub
insl
cmc
or
frstor
lea
lods
push
sub
in
pop
mov
dec
daa
xchg
jno
imul
lea
pop
xlat
inc
cltd
imul
mov
sub
ret
adc
dec
fidivrs
push
stc
jp
jle
fcomip
push
jne
xor
and
sub
mov
ds
xchg
and
pop
fs
jo
dec
inc
out
addr16
fmull
das
repz
dec
push
push
mov
test
or
add
js
mov
mov
pop
sbb
setg
dec
and
fiaddl
cli
xlat
push
jle
hlt
stos
cmp
orb
ja
fistpll
dec
loope
inc
aas
sbb
test
aas
add
xor
outsl
insl
repnz
lods
scas
push
jo
outsl
test
dec
out
aad
inc
out
xor
cmp
jns
dec
outsl
popf
es
dec
aam
outsl
mov
cmc
xor
in
adc
adc
mov
rorb
in
ja
popa
dec
int3
xchg
sti
inc
daa
mov
cmp
movsb
in
mov
fcmovbe
push
lret
add
dec
scas
test
nop
cmp
sub
insl
lcall
inc
loopne
leave
and
mov
rcrl
rclb
out
hlt
stos
add
outsb
and
les
aad
loope
pop
inc
mov
nop
test
repnz
je
aad
ds
pop
lods
into
stc
sbb
test
sar
mov
dec
jo
add
jmp
pop
mov
mov
lret
aas
lods
sbb
pusha
dec
mov
add
call
lahf
ds
push
fisttpl
out
lea
xchg
dec
mov
shll
mov
jp
idiv
and
clc
orb
cmpsl
loope
or
xchg
xchg
outsb
in
sub
mov
das
jecxz
sub
insb
sub
fmull
xor
xor
ret
ss
mov
jae
sarl
aam
notb
and
push
test
mov
jae
mov
xchg
cwtl
add
mov
push
in
mov
inc
fmulp
insl
mov
xchg
pop
cmp
mov
cmp
dec
mov
es
stos
lods
adc
sub
xchg
mov
or
and
in
subl
lods
pop
pop
xchg
sub
loope
pushf
mov
sub
mov
push
mov
jo
jbe
cld
enter
lret
ds
rcrb
or
xchg
scas
aam
test
mov
addl
add
jmp
cltd
mov
test
add
sbb
add
icebp
loop
enter
sbb
nop
mov
mov
insl
mov
mov
jp
mov
xchg
push
pop
xorb
pop
ljmp
xchg
cs
sub
add
lock
mov
dec
pushf
aas
mov
sub
cmpl
or
jnp
popa
cld
in
imul
rcll
pushf
outsl
out
repnz
sub
in
insb
bound
stos
sbb
test
mov
lret
mov
mov
and
mov
in
fdivl
xchg
es
or
add
sbb
xlat
and
pushf
push
test
dec
or
fstpt
sbb
fldcw
mov
pop
jae
push
test
cmp
cmc
and
mov
movsb
xchg
mov
push
aaa
sahf
data16
fisubs
test
inc
and
lds
leave
ljmp
rorl
clc
aaa
lods
popa
push
mov
fs
outsl
pop
push
mov
je
jne
xchg
jne
dec
push
enter
and
mov
mov
fsubrl
push
loope
call
cld
dec
movsl
add
out
int3
xchg
sbb
add
pop
addr16
xchg
mov
xlat
adc
push
into
mov
pop
jne
sahf
cmp
cld
jb
push
add
mulb
xor
and
xor
mov
inc
test
jns
or
or
inc
cmp
adc
arpl
mov
mov
aas
iret
test
clc
ret
adc
mov
aam
imul
pop
int3
add
sahf
andl
gs
mov
push
dec
add
iret
ret
and
fsub
shl
dec
pop
je
adc
inc
popf
cmp
scas
xor
jb
mov
xor
enter
mov
imul
leave
popa
stos
and
lock
jno
cli
dec
jmp
fidivs
sub
orl
and
insb
icebp
push
xchg
je
repnz
mov
shlb
insb
vandnps
fdivs
call
les
movsl
mov
lahf
fstps
lods
push
sbb
inc
cli
mov
into
or
push
in
loope
dec
pop
fsubr
push
jo
mov
in
outsl
cwtl
and
mov
xor
dec
sarl
fmull
shll
hlt
int
jne
mov
inc
and
aas
mov
leave
ret
mov
add
xor
outsl
pop
adc
fwait
push
pop
not
lods
cmpsl
add
dec
cmc
cs
and
mov
push
jmp
jmp
or
in
imul
xchg
scas
fwait
sub
enter
lods
out
xchg
xor
or
push
push
mov
inc
cmp
mov
jp
adc
rcll
push
or
fdivs
jne
movb
adc
ret
cmp
fdivrp
add
pop
rcrl
arpl
dec
and
scas
and
mov
cltd
pop
vmovntps
ljmp
inc
push
cmp
daa
xor
sub
add
enter
sbb
or
mov
insb
cmp
fldl
icebp
add
les
xchg
int
adc
cmp
test
xchg
inc
mov
test
mov
or
push
pop
jg
inc
mov
lods
or
dec
int
cmpb
inc
dec
fsubr
mov
xchg
loope
pop
shl
stos
pop
mov
addr16
pop
xchg
sub
fldl
pop
es
sub
imul
sub
and
inc
negb
fs
xchg
xchg
mov
jmp
cmpsl
idiv
in
out
rolb
and
sub
dec
int3
mov
and
adc
daa
aaa
push
pushf
xor
dec
mov
or
pop
cs
xchg
push
inc
in
bound
daa
insl
push
adc
adc
aam
inc
loopne
xchg
ja
fadds
sbbb
js
arpl
test
int3
xchg
mov
ds
mull
mov
lods
popa
mov
jmp
popl
cmp
sub
outsb
adc
mov
push
enter
mov
mov
out
scas
cmp
cld
inc
push
jnp
mov
add
pop
mov
cli
shlb
in
clc
aaa
ljmp
fnsave
ljmp
pop
aaa
rcl
outsb
hlt
out
fsubs
dec
push
cmp
cmp
lds
mov
ret
inc
mov
jo
data16
daa
out
mov
insl
cmp
dec
jo
xchg
adc
addr16
mov
out
and
mov
ds
pushf
lahf
push
js
int
sbb
adc
or
xor
push
rclb
pop
leave
inc
mov
cli
mov
nop
outsb
fs
xchg
adc
shrl
jbe
mov
sbb
nop
cwtl
jecxz
ja
and
or
inc
push
push
jg
sub
adcb
test
out
arpl
insb
dec
jg
jg
ss
loope
das
or
mov
into
repnz
lods
sbb
nop
scas
jb
mov
ss
popa
test
mov
aaa
mov
imul
movsb
inc
imul
call
sbb
jns
imulb
mov
mov
mov
inc
imul
push
push
or
push
mov
rcr
shrl
push
mov
rclb
xor
repz
pusha
mov
add
push
jne
in
xchg
int3
repnz
push
in
push
test
mov
pop
adc
cmp
dec
outsl
xor
lret
mov
dec
add
jecxz
repnz
cmp
jns
or
cwtl
jecxz
mov
addr16
outsb
add
shll
push
cs
xchg
in
sub
pop
out
out
cmpsb
mov
insl
sahf
out
sbb
in
mov
dec
into
mov
mov
xchg
mov
add
inc
lahf
pop
cld
popw
in
pop
xor
pop
adc
jae
pushf
push
fdivs
add
pop
adc
mov
xor
sahf
in
xchg
push
push
push
inc
xchg
jle
push
shl
dec
sub
loope
add
jmp
xchg
ds
addr16
pop
sub
cmp
rcrb
xor
sub
cmpsb
repz
adc
jne
enter
in
push
jmp
sub
inc
pop
mov
cmpsb
push
aaa
movsb
cmpsb
lcall
arpl
sahf
mov
pop
sbb
pop
xor
enter
inc
fwait
dec
es
roll
mov
inc
dec
ja
add
insl
call
xor
scas
and
adc
jmp
jg
inc
and
loopne
data16
mov
pushf
out
push
ficoms
sbb
dec
in
sub
adc
cmp
xchg
xor
rcrb
inc
dec
jmp
loop
jns
fdivl
call
jmp
xor
push
cmpsb
push
into
jmp
fstps
cmp
shrb
fldcw
bound
lret
outsl
inc
inc
xchg
js
outsl
mov
ja
shlb
das
scas
insl
jb
jbe
pop
mov
sahf
push
ret
cmpb
sbb
xchg
aad
mov
jmp
inc
shl
dec
inc
push
mov
add
addr16
rolb
mov
repnz
les
sbb
not
xor
ror
and
xor
cmc
jb
ds
mov
xor
adc
cmc
sbb
mov
lret
sbb
xchg
xorl
xor
inc
cmp
xorb
or
push
pop
mov
or
and
icebp
cmpsb
xlat
lahf
iret
sub
mov
xor
push
mov
popa
jecxz
mov
mov
cli
and
push
or
mov
into
repnz
insb
jno
cmp
mov
dec
adc
std
lods
pop
mov
out
cmp
mov
sub
add
adc
daa
jg
call
cmp
sbb
mov
mov
or
enter
shll
btc
iret
xlat
jmp
mov
fldenv
sahf
or
xchg
repz
out
cmpb
fisubrl
fnsave
lods
aad
gs
xchg
pop
cli
xchg
jg
testl
test
or
adc
scas
clc
xchg
int3
ret
mov
out
mov
subl
popa
lret
rcl
xchg
lcall
aaa
negb
dec
mov
ja
or
adc
mov
lock
adc
sbb
mov
das
inc
test
repnz
std
jbe
testl
jbe
jo
dec
xchg
pushf
push
dec
inc
je
mov
lcall
icebp
loope
imul
mov
push
std
je
xor
mov
outsl
test
xchg
mov
popa
dec
cli
mov
sbb
push
sbb
ret
xlat
rclb
test
mov
add
stos
jns
fadds
xchg
or
jmp
addb
cmpb
push
inc
mov
cltd
adc
rcr
dec
dec
adc
pop
pop
mov
test
aas
pop
add
push
pop
mov
test
push
aaa
ljmp
in
sub
cmpsl
test
jmp
ret
cwtl
pop
push
in
add
pop
inc
enter
jae
jnp
insl
ret
fcomps
push
int
dec
dec
jae
adc
mov
adc
cltd
mov
mov
popf
push
cmp
sbb
aaa
dec
int
sahf
fsubs
jno
pop
popf
rol
inc
pop
hlt
sarb
jl
test
mov
loopne
push
sbbl
imulb
mov
add
test
dec
jno
inc
and
cmp
lds
jnp
fwait
std
mov
lods
stos
pop
inc
inc
jl
jl
cmpsb
xchg
inc
add
and
push
fdivl
lock
adc
mov
adc
repnz
ret
push
pop
repnz
mov
dec
insl
push
xor
sbb
mov
testl
fists
fidivrl
fstpl
sub
fs
mov
jge
jecxz
addr16
mov
sub
arpl
out
pop
aaa
sbb
mov
jmp
and
rcll
push
ror
icebp
and
lcall
xlat
mov
jbe
orb
pop
movsb
mov
into
lret
cmc
scas
mov
movsb
add
adc
sub
cs
xor
int3
rclb
out
in
scas
call
outsl
mov
sub
adc
mov
insb
push
gs
js
jns
call
cltd
mov
and
pop
sbb
jg
cmp
sti
pusha
xchg
pusha
in
mov
mov
inc
inc
in
xchg
daa
adc
adc
mov
out
mov
ja
inc
test
and
mov
aad
fwait
add
test
popa
lods
outsl
mov
ds
mov
xor
xor
cmpsl
inc
cli
jnp
xor
repnz
cli
imul
ret
mov
orb
mov
fdivr
or
scas
incl
nop
iret
je
dec
adc
pop
jmp
sbb
stos
or
mov
clc
jbe
adc
mov
notl
outsl
push
iret
je
sub
shrb
rolb
into
adc
adc
jl
adcl
repnz
popa
inc
adc
sbb
dec
repz
out
mov
clc
mov
inc
xor
es
repnz
push
fcomi
fwait
and
dec
ds
out
and
loopne
pushf
push
adc
jge
inc
loopne
mov
or
jl
mov
push
mov
sbb
imul
ja
adc
inc
jmp
push
or
jo
std
loopne
and
out
jp
mov
mov
inc
subb
les
add
mov
mov
xor
icebp
outsl
das
int
into
xor
or
mov
sbb
stos
nop
mov
inc
or
lret
cmp
cld
add
xor
popa
test
imul
je
sarb
or
inc
movsb
dec
or
in
pop
mov
fisubrs
push
insl
mov
sbb
jl
enter
call
and
xchg
jmp
dec
es
pusha
int3
jecxz
dec
lret
xor
cmp
in
sbb
test
addr16
shll
and
mov
or
int
leave
add
in
scas
sarb
add
sarb
pushf
cmp
cmp
rcr
xchg
cmp
push
outsb
movsb
ljmp
cmp
clc
shl
lock
cmp
cmpsb
xchg
adc
lds
push
mov
push
cltd
adc
or
pop
inc
in
cmp
cmp
pop
std
inc
mov
lcall
jge
cmp
lea
aad
clc
sahf
in
mov
shl
jmp
js
call
std
ret
push
cmc
sub
ss
fdivs
inc
out
add
mov
push
gs
push
cmp
mov
cli
fdivrl
cmp
jo
jl
push
adc
fsubs
in
insb
xchg
ja
xor
inc
xlat
push
enter
pop
push
loopne
imul
push
cmp
stos
jbe
loopne
fdivrs
xorb
inc
gs
mov
in
je
movsl
inc
xchg
es
mov
mov
xchg
int3
adc
out
and
in
lea
dec
jge
ja
leave
sub
or
mov
testb
les
push
lods
andl
mov
cld
lods
mov
test
sbb
mov
leave
dec
sbb
and
cmp
and
gs
sub
xchg
sub
fisttpl
and
push
adc
rorb
pushf
push
pop
dec
mov
aas
push
sub
pushf
pop
mov
add
mov
jl
adc
xlat
hlt
jge
dec
push
add
add
mov
in
add
add
lods
xchg
xchg
sbb
adc
push
xor
fimull
xchg
bound
sbb
out
xchg
pop
rolb
xor
outsl
jg
xchg
ljmp
dec
lods
push
andb
lods
cmpsl
cwtl
andb
in
sbb
insb
sub
xchg
inc
icebp
adc
add
fdivrs
inc
dec
das
mov
inc
ss
outsb
outsb
mov
call
sbb
mov
xchg
lock
shrb
out
insb
cmp
fcomps
add
cmp
jmp
inc
sar
decb
jbe
out
sbb
adc
call
cwtl
std
dec
adc
jle
jne
ds
or
mov
adc
data16
popf
ljmp
jo
sub
push
cld
cmc
mov
out
or
call
mov
mov
fbstp
nop
sub
fcoms
push
fwait
mov
xor
testl
mov
iret
xchg
jmp
mov
and
dec
sub
pop
adc
mov
shlb
jle
addr16
pop
cmp
lahf
pop
mov
mov
push
mov
js
repz
fisttpll
mov
loope
mov
pop
push
scas
dec
and
lahf
sub
mov
mov
mov
mov
fstps
xchg
ret
or
pop
sbbl
fmuls
loope
cmp
bound
mov
xchg
mov
mov
in
mov
cli
insl
xchg
mov
jge
into
idivb
stos
lcall
std
adc
outsl
sub
cmpsb
push
push
xchg
std
push
add
sbb
adc
je
xchg
push
popf
in
add
dec
pushf
add
lds
dec
enter
jns
andl
mov
adc
jp
xor
xchg
inc
mul
out
je
fs
int3
imulb
jp
cwtl
addr16
mov
movsl
inc
inc
inc
jge
inc
cld
sbb
daa
lods
pop
aam
jge
mov
pop
cmp
mov
fnsave
fmuls
add
or
stc
aaa
mov
test
out
pop
jg
jecxz
je
outsl
popa
fsubrl
xor
pushf
pop
adcl
mov
and
mov
arpl
xlat
and
clc
aam
mov
pop
dec
mov
adc
and
jmp
mov
jne
pop
jg
mov
cmpsb
mov
fsubrp
jno
mov
int
cltd
inc
jne
jmp
adc
jnp
loop
pop
std
lea
in
movsl
mov
mov
outsl
xchg
repz
aaa
rolb
push
sbb
cmp
adc
lahf
mov
jnp
cltd
mov
punpcklbw
pop
hlt
xchg
pusha
bnd
push
mov
xchg
fwait
orb
and
aas
shlb
and
or
jecxz
xchg
push
pop
mov
popa
mov
and
mov
loopne
js
sub
repnz
inc
cmpsl
sub
sub
cmp
mov
and
out
sbb
push
or
xor
push
dec
loop
push
push
pop
loopne
movsl
push
shll
mov
mov
addb
bound
pop
and
clc
cltd
and
adc
gs
inc
fildl
ljmp
mov
mov
adc
loop
leave
and
sub
popf
and
xchg
mov
push
lods
rcl
dec
pop
cmpsl
movsb
dec
lods
outsl
pushf
jns
out
mov
repz
andb
jnp
mov
push
mov
cld
lock
in
jg
mov
jno
mov
aaa
xor
sahf
pop
cmpsl
jno
inc
aas
adc
add
jnp
cltd
aas
leave
inc
test
pop
mov
jbe
addr16
iret
mov
cmpsl
inc
andb
pop
sbb
sbb
mov
ljmp
mov
in
rolb
pop
xchg
and
mov
cmp
repz
inc
into
pop
cli
sbb
icebp
std
in
jge
cmp
out
add
xlat
xor
loop
cmp
jae
mov
fldl
das
mov
sub
scas
dec
mov
test
arpl
popa
jmp
aas
jmp
mov
xor
test
scas
ror
mov
lret
test
repnz
insb
jmp
pop
xchg
ljmp
cmp
mov
mov
ret
and
xchg
mov
push
mov
dec
subb
adc
mov
or
inc
sbb
lcall
fnstcw
loope
js
outsb
dec
arpl
xchg
ljmp
ss
inc
imul
int
sti
jecxz
lods
daa
or
lcall
movsl
mov
jecxz
dec
xchg
xlat
outsb
repnz
int3
inc
or
popf
inc
out
dec
push
dec
xor
cmpl
pushf
cmp
jno
xchg
xor
xor
adc
inc
and
pop
and
inc
inc
std
or
xchg
pop
and
lret
sti
into
mull
pop
out
xor
or
repnz
in
addr16
clc
cmp
jmp
mov
mov
mov
lds
imulb
mov
jbe
lret
clc
lock
pop
jecxz
notl
fsts
push
movsl
orl
stos
dec
mov
adc
add
punpckhbw
lcall
lock
pop
sarl
ret
sub
sbb
pop
mov
fidivrl
fs
mov
outsl
popa
dec
test
loop
aas
push
insb
mov
mov
lods
or
stos
sahf
outsb
push
daa
inc
ret
ds
jge
fs
jmp
mov
out
xchg
test
into
jmp
imul
dec
lds
ret
cmpl
imul
or
mov
add
cld
or
pop
icebp
insl
push
dec
xor
test
add
jb
lahf
std
add
mov
loop
lret
dec
or
iret
test
aas
scas
and
in
push
pop
or
fs
decb
jnp
dec
or
dec
loop
imul
adc
das
push
mov
ret
sub
sub
lcall
jbe
popf
xchg
dec
dec
insl
test
adc
mov
testb
or
in
push
rol
ljmp
push
jne
scas
mov
xchg
mov
out
outsl
add
pop
ja
gs
add
dec
xor
sahf
rcll
cli
xor
jbe
mov
mov
mov
fistpll
in
mov
mov
jae
xor
outsl
xor
and
dec
mov
test
jns
xor
lods
jp
push
sbb
mov
xchg
mov
and
push
add
loope
shrl
cmp
je
sub
in
sub
rclb
ds
daa
bound
fcmovnu
add
pop
xchg
mov
xor
mov
stos
inc
call
and
inc
jge
iret
ret
jecxz
or
cwtl
outsb
push
jecxz
loop
divl
push
int
pop
xor
mov
test
inc
mov
mov
or
cmp
push
adc
out
add
mov
int3
das
pop
stos
mov
jbe
xchg
jge
sub
adc
dec
inc
ljmp
xchg
pop
aam
jg
xchg
xor
dec
gs
xlat
mov
mov
xchg
iret
cmp
add
loopne
inc
mov
mov
into
imul
aaa
dec
xchg
pushf
cmp
pop
mov
ljmp
mov
rorb
addl
push
arpl
dec
jg
enter
ss
sarl
jae
int
or
xorl
lods
aas
push
mov
xor
out
shll
into
sbb
or
outsb
cmc
push
repnz
cmc
cmp
fstpl
lret
pop
inc
mov
jb
loope
cmc
ljmp
push
scas
stc
imul
test
mov
lds
fstp
jmp
outsl
push
xor
dec
out
shr
xor
fisttps
jl
mov
pushf
and
mov
imul
cmp
std
or
mov
jnp
shl
push
xchg
out
lea
lock
shlb
fistps
push
xchg
fdivrp
fwait
and
stos
shlb
jae
adc
cld
adc
cld
lret
mov
sub
jae
mov
jge
jge
not
fcmovu
stos
xlat
das
scas
pop
iret
repnz
jne
ljmp
ljmp
repz
mov
nop
cmpb
jle
mov
push
jmp
mov
push
sbb
scas
push
ret
xchg
shl
jecxz
pcmpeqd
push
sbb
inc
xorl
mov
add
in
fimuls
std
aaa
xchg
mov
add
pop
sbb
add
add
ds
xor
leave
repz
lcall
fdivs
shlb
stos
xchg
jae
push
loop
jl
sbb
repnz
in
cltd
in
repz
fmul
jl
pop
jg
es
dec
inc
sub
sub
aaa
lds
aaa
ret
jg
pop
xchg
mov
xor
inc
leave
imull
xchg
mov
inc
loope
lret
mov
imul
fs
pop
mov
loopne,pn
jmp
outsl
mov
xchg
lods
stos
mov
inc
mov
mov
lahf
cmpl
or
cmp
mov
xchg
pop
sub
mov
pop
dec
fs
xor
jo
sub
xchg
js
es
mov
or
mov
movb
push
xor
push
jge
inc
iret
test
loopne
ficomps
repz
xor
or
pusha
xchg
add
incl
mov
loopne
xchg
lock
mov
and
jmp
mov
or
xchg
pop
xorb
dec
xchg
sub
mov
out
pop
rolb
cltd
dec
ss
jo
push
sub
dec
rol
xchg
insl
repz
hlt
mov
fdivr
push
or
or
in
dec
jnp
add
pop
mov
ficoms
jmp
into
bnd
loop
addr16
idiv
jmp
jp
stos
and
stos
pop
jl
ss
or
testb
hlt
mov
jmp
nop
inc
mov
xchg
pop
push
fwait
inc
inc
xor
clc
fmul
test
fs
stos
rol
dec
imul
adc
jno
mov
xchg
mov
mov
ss
loop
pop
and
cmp
pop
sub
mov
sbb
imul
andb
sbb
cmp
test
stc
stos
xchg
stos
add
aam
gs
jb
nop
cmp
xchg
lods
or
rorb
out
mov
lds
and
ja
inc
ret
shll
out
lock
in
movsb
js
mov
mov
adc
dec
test
out
popa
xchg
cmp
jne
mov
adc
sbb
cmp
push
xchg
int3
imul
arpl
or
push
xor
jmp
mov
das
hlt
sbb
data16
adcb
xchg
movsl
xor
xchg
sub
sti
cmpl
les
or
jle
sub
mov
int
adc
jg
addb
lods
rcrb
imul
dec
enter
sub
lea
jp
fdivrl
sub
sti
or
cld
jmp
mov
cmpb
sbb
fsubs
inc
inc
push
xchg
stos
inc
xor
sbb
push
sbb
in
xor
ret
test
mov
aam
mov
dec
add
mov
in
inc
sarb
dec
sub
cmp
jns
push
xchg
aaa
jo
int
and
movsl
inc
out
scas
inc
adc
jp
jl
into
shlb
xchg
sti
xchg
rcrl
sub
push
push
jp
bound
sub
jecxz
sahf
das
and
fsubs
adc
test
cmp
ds
jns
mov
mov
inc
mov
loopne
int
js
test
pusha
das
push
pop
or
inc
test
in
les
dec
fidivrl
aas
xchg
dec
test
aad
xor
mov
mov
cmp
jbe
test
pop
push
sub
mov
mov
and
call
cmp
lret
cmp
jl
push
js
pop
fsts
lock
das
xchg
xchg
jbe
fsubrl
das
stos
mov
push
repz
jnp
xchg
adc
es
ja
mov
mov
inc
scas
movb
and
or
fwait
mov
pop
cmp
pusha
jnp
xor
xor
mov
inc
lea
movsl
aaa
pop
mov
stos
add
insl
out
out
fcomip
pop
dec
in
stos
aas
nop
cld
xchg
add
xchg
lahf
sbb
ljmp
rolb
pop
lea
inc
xor
push
paddq
comiss
dec
fsincos
push
xor
test
mov
hlt
or
push
jle
daa
and
dec
scas
push
cmp
jp
push
or
fcomps
call
test
add
icebp
dec
sarl
repnz
cld
inc
test
movsb
test
sbb
and
dec
cmp
xchg
xchg
negb
outsl
jg
mov
dec
sbb
cmpsb
shrb
mov
push
inc
lahf
rcrb
jl
push
fs
ficoml
pop
sbb
fisttpll
sbb
ret
push
daa
mov
xchg
xor
mov
test
jp
xor
and
cmpsb
push
sti
xor
mov
outsb
dec
pusha
mov
xchg
jmp
imull
mov
push
out
mov
add
fistl
pop
dec
jle
dec
adc
aam
cltd
adc
xchg
outsl
shrb
int
fmull
mov
lret
inc
sbb
pop
xchg
jl
cltd
in
cmp
jne
lock
dec
ljmp
imul
jecxz
inc
cmpsw
call
in
sub
das
scas
sti
inc
add
je
pop
ljmp
sub
mov
sarl
imul
pushf
dec
dec
and
fst
sahf
cmpsl
or
push
rorb
fs
stos
mov
hlt
popf
clc
sub
pop
adc
test
pop
or
inc
popa
sbb
mov
ss
inc
loope
cmp
ja
or
pusha
mov
mov
sub
imul
dec
aad
sbb
sub
imul
xchg
and
or
aam
mov
sarb
and
out
repz
sbb
imul
insb
mov
push
xchg
push
cmp
jl
adc
mov
rep
and
fs
mov
subb
fstp
mov
insb
icebp
mov
or
mov
add
pop
ds
int3
or
sub
fnstsw
and
es
daa
inc
sbb
jl
addb
mov
pushf
outsb
in
adc
call
jnp
push
imul
outsl
js
mov
call
outsl
push
xchg
add
mov
xor
push
mov
push
mov
mov
sbb
clc
mov
data16
mull
push
mov
mov
adc
not
imul
adc
jo
cld
aas
add
test
mov
push
xchg
xorl
cmp
idivb
jbe
sub
aad
or
xchg
aas
into
sub
inc
and
add
add
rcll
rcr
or
pushf
popa
xchg
sub
sahf
push
rorb
dec
or
add
sub
stos
hlt
push
lods
loop
pop
add
fistpll
imul
mov
push
and
ja
loopne
call
cmpsb
and
mov
inc
in
divb
add
data16
cli
sub
jns
out
xchg
xchg
mov
sbb
gs
data16
popf
xchg
fdivrs
loope
les
test
jae
nop
cmp
push
mov
mov
sbb
fwait
xchg
push
add
sub
je
pop
pop
icebp
bswap
fimull
push
jne
ds
stos
jae
aaa
aad
pushf
jl
and
cmp
popf
add
xchg
xchg
in
aaa
jbe
lods
leave
in
jmp
je
test
mov
mov
inc
pop
jnp
push
add
clc
lock
loope
arpl
insl
push
xchg
movsb
xchg
sarl
pusha
jle
addb
call
jno
or
and
push
ja
loop
add
and
inc
sti
push
ret
xchg
imul
out
mov
xor
jle
jnp
dec
sub
push
dec
bound
fidivrs
out
mov
and
cmp
pop
cltd
sub
outsl
inc
push
popf
mov
ret
xchg
mov
movb
aam
jmp
ds
push
testb
shl
cmpsb
push
xor
mov
xchg
pop
and
cmp
sahf
inc
dec
orb
xchg
fnstsw
js
test
push
pop
push
push
mov
sub
push
jae
cld
clc
cmp
dec
lds
jg
dec
or
test
imul
cli
mov
push
sbb
mov
test
fdivs
repz
cmp
dec
mov
popa
inc
fdivrs
test
test
inc
mov
xchg
pop
dec
das
bound
xchg
lods
push
test
and
sbb
and
outsl
aas
xor
out
cmpl
mov
push
mov
ja
lea
xchg
push
mov
jno
aad
inc
pop
fnstenv
mov
lods
jo
mov
adc
add
cmp
ja
pop
jmp
ds
push
pop
insl
hlt
fsubrl
cmp
scas
adc
fs
lods
call
leave
push
sbb
mov
xchg
cmp
test
and
or
push
lret
cmp
mov
in
ja
pop
cwtl
arpl
jl
ja
sbb
ljmp
test
cltd
inc
fsubrs
dec
push
cli
loop
sbbb
cli
mov
adc
jo
pop
push
mov
mov
pop
fstpl
cmpsl
je
and
dec
adc
ljmp
cmp
daa
adc
cli
mov
and
mov
shrl
mov
stos
pop
fisubl
jae
enter
clc
loope
cli
add
add
mov
dec
dec
in
jnp
in
push
pushf
push
push
testb
ljmp
fidivrs
cwtl
push
popf
xchg
loope
adc
and
push
shrb
std
testb
or
inc
ret
jnp
lret
shll
cwtl
sbb
mov
cld
adc
mov
pop
jle
pop
pushl
push
dec
jo
and
mov
aas
js
loop
push
arpl
push
inc
cmp
adc
dec
ret
xchg
jl
rcrl
lods
mov
cmc
push
rcr
test
clc
inc
lahf
cmp
pop
ja
repnz
sub
sub
in
test
fsubrl
lcall
mov
data16
sub
stc
shll
mov
aad
pop
push
xor
daa
pop
das
push
popf
or
mov
jg
fistpl
adc
sbb
push
mov
imull
jnp
cltd
jnp
fnstcw
dec
sub
fisttpl
sub
jle
add
adc
ret
out
pusha
jbe
push
out
addr16
inc
xor
cmp
cmc
int
mov
mov
pop
mov
sub
adc
ret
inc
jnp
inc
fmul
cmc
stc
jmp
pop
out
mov
fwait
or
cmp
sar
adc
cmpsl
pextrw
test
hlt
filds
das
mov
dec
or
xchg
xchg
je
and
push
push
jnp
fnstcw
mov
fnstsw
jb
in
in
hlt
push
jns
scas
mov
add
jmp
pop
add
sbb
xchg
or
mov
fadd
xchg
outsb
jle
fcomps
xchg
iret
inc
sub
out
add
arpl
in
movsl
mov
push
test
xorb
fildll
sub
mulb
popf
push
shlb
mov
add
mov
xor
inc
push
daa
adc
sbb
mov
or
sub
in
lds
pop
jmp
sbb
ficoms
lcall
popf
repnz
mov
fstpt
clts
leave
push
leave
into
adc
adc
mov
xchg
mov
call
mov
xchg
clc
ret
lahf
xor
cmp
fcoms
add
ss
mov
je
add
cs
jns
jl
cmp
out
nop
cld
sub
js
cltd
pop
mov
xchg
mov
push
xchg
scas
in
ja
dec
hlt
mov
inc
xchg
mov
jne
pusha
mov
mov
lcall
cmc
pop
into
dec
mov
pop
movb
iret
xchg
fwait
imul
inc
and
xor
ss
inc
popa
fs
push
xchg
pop
jecxz
jne
pop
xchg
mov
lods
and
and
push
cmp
xlat
gs
cmpsb
rcrl
sbb
cld
push
pop
push
sub
mov
cwtl
into
or
int
inc
mov
rorl
les
imul
or
push
jg
xchg
mov
mov
insb
or
mov
ret
arpl
ljmp
aaa
add
dec
cmp
mov
sbb
cs
test
inc
push
inc
add
pop
testl
lcall
cmp
nop
xor
mov
xchg
xchg
add
mov
cmp
sub
loope
mov
mov
add
pop
pop
mov
jo
gs
pop
add
adcl
addl
fbld
aam
sbb
in
js
addr16
test
xor
shlb
mov
mov
call
sub
lret
fistl
mov
push
decb
outsb
add
loope
shrb
or
mov
sahf
add
pop
sahf
nop
pop
iret
fiadds
mov
ljmp
mov
dec
adc
sbb
sub
jge
add
lods
fnstsw
dec
outsb
cmpsb
push
jbe
lahf
adc
loop
sbb
ljmp
std
test
sub
les
scas
repz
sahf
or
adc
mov
mov
or
test
dec
popf
mov
add
ss
aaa
xchg
dec
or
adc
in
out
je
out
dec
nop
pop
dec
sub
int
aad
push
xchg
mov
lock
or
add
scas
sbb
mov
mov
dec
out
inc
xor
insb
inc
sub
sbb
ja
sub
and
stos
or
loope
push
jecxz
ljmp
add
add
sbb
or
and
mov
cmpsl
push
jne
testl
xor
int
push
push
aam
ret
lcall
jl
xchg
es
adc
and
fstpl
bound
dec
out
mov
pop
xor
call
push
jb
scas
push
add
dec
pop
push
push
icebp
shll
cmp
push
jmp
mov
adc
xor
jp
ficomps
ret
orl
mov
pushf
jmp
push
xchg
subb
add
mov
push
lcall
movsl
mov
inc
lret
loope
outsb
aas
aaa
jecxz
shl
arpl
mov
sbb
xchg
jp,pt
repnz
std
mov
push
cmp
or
comiss
mov
adc
cs
or
xor
push
stos
dec
fidivrs
mov
dec
pop
sub
std
test
into
popa
push
fiaddl
shll
sub
in
inc
sbb
dec
jbe
out
push
inc
in
jle
inc
mov
xchg
lock
jecxz
pop
and
xor
inc
xor
je
mov
movsb
jmp
xor
jmp
add
jns
pop
stos
sub
cs
jle
test
xchg
fdecstp
int3
fmull
call
and
mov
and
adc
mov
das
push
loopne
daa
scas
mov
sar
in
stos
push
push
mov
sub
out
imul
inc
jno
sti
dec
inc
xor
es
sub
jb
mov
jecxz
or
xchg
add
orb
push
jbe
sub
andl
mov
lods
jne
jg
call
in
add
cmp
mov
and
jno
lret
or
cmp
test
lret
shr
inc
add
jo
repz
pop
pop
lahf
insl
xor
fadds
dec
and
push
jge
push
mov
mov
xchg
and
mov
pusha
pop
xchg
jecxz
out
dec
mov
inc
addr16
cmpsl
xchg
sub
xor
repnz
push
addr16
iret
arpl
mov
sbb
bound
sub
mov
int
fldt
mov
adc
xchg
mov
mov
xchg
adc
lds
orb
addr16
je
ds
repz
scas
add
lahf
pusha
int3
adcb
mov
pause
dec
mov
jb
out
fcmovnbe
push
mov
xor
push
inc
sub
pop
adc
cli
mov
xchg
cltd
enter
push
aam
xchg
jg
mov
leave
mov
dec
jo
add
mov
and
daa
cmc
fildl
das
mov
and
cs
popa
mov
push
push
shlb
int
call
cmp
mov
push
or
loopne
push
cmpsl
pop
test
pop
mov
insl
out
std
xchg
stc
js
jl
inc
xlat
aam
jle
lret
add
push
gs
movsl
mov
pop
ffreep
xlat
pop
xor
stos
lea
xchg
rep
cmp
sbb
sbb
mov
cli
shufps
mov
pop
dec
cmc
lcall
xchg
add
int
imul
loope
lock
mov
lods
mov
mov
dec
mov
mov
sbb
loop
push
push
aad
push
ja
adc
enter
inc
leave
mov
pushf
mov
cmpsb
lcall
inc
add
jle
mov
jae
pop
jg
jbe
arpl
popa
sub
or
jne
sarl
push
or
out
sbb
mov
or
push
mov
or
ret
push
aam
es
cmpsl
sbb
push
push
push
lods
into
dec
push
ljmp
in
shr
or
lods
jbe
rclb
call
push
cmp
inc
gs
push
test
cld
dec
iret
ljmp
out
pop
pop
and
or
pop
inc
arpl
leave
and
pop
mov
or
js
call
out
lods
and
xor
jno
mov
or
in
loopne
mov
cmc
aad
inc
mull
pop
lds
int3
repnz
jmp
jge
fimull
jge
mov
test
nop
push
xor
addb
jae
sub
repnz
mov
mov
mov
mov
push
xor
mov
lcall
sar
mov
sub
mull
add
inc
aas
pop
arpl
push
leave
dec
cmp
mov
testl
mov
scas
mov
aam
mov
mov
hlt
inc
mov
sbb
dec
scas
pop
out
out
mov
lea
mov
enter
lds
sub
sub
out
cmp
ja
xor
and
daa
push
cmp
add
ds
inc
xchg
xchg
lods
sbb
add
mov
sub
addr16
aaa
mov
icebp
test
pop
xchg
adc
addr16
pop
lret
test
imul
lods
jae
push
and
sahf
cmp
pop
in
loope
fldt
jmp
mov
push
sbb
pop
jge
xor
add
adc
or
jmp
hlt
ror
mov
inc
xchg
adc
mov
xchg
add
adc
push
mov
xchg
loop
jecxz
ret
sbb
fldt
insb
pop
das
sub
jns
push
dec
jmp
add
into
sahf
cmp
mov
add
in
adc
loope
mov
lret
xor
out
jnp
pop
pushf
inc
loop
out
fwait
imul
shll
mov
adc
and
push
fisubs
xchg
mov
push
sbb
fs
and
xor
xlat
sbb
or
test
clc
jne
cmp
jg
and
mov
repz
inc
lods
jecxz
and
lods
pop
xor
jp
les
lahf
jbe
sbb
xchg
ficomps
cmp
or
or
pop
jp
add
testb
ss
fistpll
sub
mov
mov
call
jns
xlat
test
sbb
inc
rcrb
sahf
jae
jne
sbb
inc
imul
lcall
ljmp
andl
push
js
pop
insl
inc
pop
movsb
mov
fcmovne
ret
mov
and
ret
or
mov
or
cmp
imul
sub
or
mov
sub
mov
push
pop
add
cmp
sub
mov
and
ds
adc
adc
mov
scas
repz
daa
mov
mov
jg
mov
cmpsl
inc
int3
leave
ljmp
and
movsb
mov
shrl
cmpsl
sbb
int
clc
and
lcall
popf
ret
dec
icebp
mov
and
xor
jecxz
xchg
insb
push
cli
outsl
shl
imul
sti
sub
fwait
in
and
xchg
mov
mov
insb
movlps
icebp
xchg
sub
pop
xchg
fiaddl
and
adc
ret
xchg
jb
data16
std
fisttps
mov
xchg
mov
sbb
lcall
sub
push
xchg
out
pop
xchg
decl
mov
inc
andl
lea
aad
faddl
lea
jbe
dec
les
ret
test
sub
in
cld
jnp
push
negl
test
cmp
push
mov
inc
inc
addb
movsb
ljmp
add
sbb
lods
sub
xchg
movsl
mov
xorb
sub
repnz
sub
xchg
cmpsl
loope
sbb
push
mov
xchg
mov
inc
out
popf
sbb
xchg
cltd
sahf
fidivs
cmpsl
pusha
add
in
loop
sbb
popa
pop
mov
scas
data16
das
and
add
adc
call
inc
adc
or
nop
and
test
iret
es
push
lock
cwtl
xchg
adc
jbe
addr16
repz
mov
iret
xchg
test
adc
or
cmpsl
popa
xchg
dec
add
out
dec
lea
insb
out
fdiv
lcall
and
clc
jno
inc
inc
mov
cmp
add
mov
jle
rcrb
mov
mov
mov
subb
ret
shrb
cmpsb
or
xor
mov
push
subb
add
xchg
sub
outsb
pushl
gs
scas
mov
xchg
je
xor
mov
sbb
pop
mov
addr16
add
dec
sub
bts
sub
inc
cmpsb
insl
insb
outsb
mov
cld
pusha
xor
test
push
addr16
dec
mov
jbe
jge
and
ss
rol
adc
cmp
dec
arpl
jno
aam
adc
js
movsb
or
push
pop
fiaddl
subl
loop
sbb
mov
insl
mov
dec
push
inc
mov
push
les
push
sub
dec
dec
mov
nop
fstpl
andb
dec
and
pusha
cmp
push
xchg
push
movsb
pusha
xor
push
or
outsl
and
mov
push
push
iret
sbb
xchg
addb
adc
pop
lods
in
lahf
jle
daa
out
outsl
push
daa
xor
xchg
or
ljmp
adcb
scas
ja
imul
out
xor
adc
adc
sbb
nop
in
ret
movsl
js
aas
ret
and
xor
jp
inc
mov
cltd
pop
pop
jb
pop
push
imulb
sub
out
dec
aas
scas
jmp
mov
sub
pop
call
icebp
jmp
rolb
out
sub
movsb
or
in
dec
xchg
inc
insl
lods
sarl
and
xlat
ret
xchg
cwtl
xor
les
call
enter
pop
inc
and
cmp
shrd
cld
xchg
adc
mov
push
push
inc
les
sub
movsl
pop
or
pop
xchg
dec
cmpsb
aad
test
cmpsb
add
sub
lret
scas
push
scas
xor
cmp
sub
in
sbb
leave
lcall
push
lods
lret
out
mull
popa
cmp
and
mov
sbb
sub
popa
rolb
push
lds
dec
cmp
mov
jl
add
sub
add
je
in
push
sub
and
mov
or
arpl
cli
or
mov
mov
cmp
mov
dec
jge
jnp
cmp
push
test
inc
mov
or
add
iret
test
pop
xchg
rolb
or
ret
mov
mov
jb
lea
cltd
or
or
scas
out
inc
xor
push
in
fimull
mov
lods
pop
sbb
psubsw
aaa
leave
and
stos
and
pop
daa
sbb
cmp
xchg
gs
punpcklbw
push
jecxz
sbbl
nop
sbb
xchg
jg
loope
cmp
insb
call
jae
sub
std
jmp
in
adc
mov
outsb
data16
cmp
fisubl
sbb
sub
lret
lret
pop
aas
pushf
mov
inc
lret
loopne
mov
out
call
pop
sbb
inc
int3
inc
gs
test
adc
jle
das
andb
out
and
inc
in
jns
jbe
in
pop
cmp
jns
mov
sub
dec
ljmp
flds
pop
fnstsw
or
cmpsl
jecxz
mov
dec
mov
addr16
ljmp
sti
xor
lods
bound
pushf
mov
mov
xorb
nop
jle
test
inc
or
cmp
imul
jmp
pop
pushf
out
push
addl
pushf
sbb
sbb
mov
adc
mov
loopne
push
adc
inc
sub
shl
adc
inc
out
filds
push
push
in
iret
jae
inc
xor
adc
test
dec
dec
lods
lock
pop
jno
ljmp
ret
and
push
add
cmp
pop
out
mov
iret
lcall
push
faddl
jb
ljmp
out
movsb
ja
lret
sbb
mov
and
cltd
jbe
jg
mov
cmpb
add
test
cli
xor
dec
jp
daa
adc
lea
stos
in
cmp
clc
add
mov
mov
add
xchg
push
pusha
jl
sub
mov
push
push
lods
mov
inc
jb
shll
push
outsl
jo
mov
loope
movsl
dec
mov
stc
aas
incl
int3
hlt
ret
sub
cltd
fisubrl
or
out
sub
shrl
fwait
std
xchg
aad
frstor
xor
dec
add
jae
mov
mov
stos
jl
sahf
adc
mov
inc
push
rorl
js
pop
push
sub
aas
loop
pop
jno
dec
sub
mov
mov
cmp
inc
and
and
dec
mov
push
cs
add
or
decl
pop
cmpsl
sbb
imull
xchg
cmp
loopne
mov
mov
lret
xchg
pop
test
inc
pop
pop
addb
int
enter
addr16
out
add
sub
cs
in
sti
xchg
mov
jecxz
xor
pusha
out
xchg
lock
add
shll
loop
ljmp
pushf
rcl
fbstp
icebp
mov
xor
adc
xchg
lds
mov
mov
push
fsubs
test
jle
lods
fnstenv
push
xchg
hlt
dec
adc
mov
sbb
xchg
lea
jecxz
mov
inc
dec
sub
push
mov
and
jle
cmp
aam
push
add
push
mov
sbb
jo
aas
xchg
xor
mov
inc
mov
rcrl
call
pop
int
je
loop
or
jae
or
add
sbbl
mov
lahf
scas
repz
cli
pusha
movsl
mov
ds
loope
inc
mov
adc
test
mov
push
cmp
std
int3
xor
jg
inc
pop
mov
sub
sub
lock
sub
into
repz
ret
sub
mov
push
push
mov
das
ljmp
and
mov
stc
popa
sub
cmpsl
int
xchg
inc
icebp
dec
fdivl
fld
lods
bound
test
jno,pt
scas
cmp
ljmp
dec
call
push
mov
jns
fcmovb
aad
xchg
pop
pop
pop
iret
dec
jae
cmpsl
push
jge
push
mov
cmp
jbe
mov
loopne
ret
xchg
add
or
mov
stc
or
lahf
adc
mov
mov
call
into
addr16
jb
push
lahf
jecxz
lea
and
pop
jl
dec
jae
loopne
xchg
or
loopne
jae
xor
cmpsb
sbb
xchg
mov
gs
stos
and
mov
add
repz
notl
add
int
cmp
mov
out
xchg
jns
aad
add
or
lock
add
push
push
adc
inc
add
inc
xlat
stos
xor
fwait
pop
stos
in
dec
js
mov
pop
xor
sub
inc
ss
lods
mov
es
ss
jge
clc
int
nop
fdiv
adcb
xor
enter
adc
fxch
out
lods
enter
push
xchg
movb
jbe
ja
xor
push
test
mov
cli
ljmp
daa
lock
testl
push
jbe
test
call
addr16
test
jno
js
mov
loopne
sbb
pop
jo
insl
and
jmp
xor
adcl
pop
stos
or
push
xlat
fnsave
or
lods
pop
jne
inc
pop
mov
push
inc
xor
xor
fbld
popa
addr16
popa
ret
dec
adc
loop
push
fst
adc
test
inc
sbb
outsl
xor
dec
mov
sub
xchg
pop
fcompl
xor
int
add
pop
push
mov
sub
into
and
xchg
je
adc
mov
je
adc
data16
jg
or
psubusb
in
mov
xlat
mul
nop
movsb
lret
pop
push
dec
add
push
jl
sub
ja,pt
inc
pop
lods
and
dec
nop
inc
sarl
sbb
jp
cmp
jne
jb
iret
dec
xor
mov
add
leave
lret
mov
adc
insl
dec
push
jns
in
pop
xchg
leave
insl
sbb
mov
xlat
cmpsl
rclb
sahf
dec
ljmp
cltd
mov
mov
aad
adc
sti
xchg
push
or
sub
mov
jno
mov
dec
jnp
int
in
das
pop
gs
xorps
xchg
lret
jno
punpckhdq
xor
adc
sahf
dec
mov
lcall
mov
jns,pn
mov
cli
inc
mov
push
push
push
mov
cmp
loop
jno
or
bound
outsl
in
mov
mov
jno
sbb
add
in
ss
lea
adc
lea
out
nop
pop
loope
outsl
xor
xor
mov
inc
out
mov
shrl
aas
mov
movsl
sbb
jp
roll
inc
push
aas
es
lahf
inc
aaa
sub
mov
cs
and
pop
lahf
ss
popf
add
sbbl
sub
jnp
shll
je
xorl
sbb
mov
outsl
jmp
gs
es
ret
ret
movsl
push
and
inc
aas
rcrl
push
dec
shlb
push
xchg
out
mov
add
cmp
and
in
push
arpl
mov
and
jae
mov
shrb
popa
fidivl
mov
jo
lds
xchg
in
gs
dec
cmpsl
sub
cli
cli
rclb
xor
jnp
mov
aas
hlt
sti
loop
push
mov
xchg
xor
das
out
mov
loop
dec
jbe
fldt
ret
je,pt
fmull
cmp
adc
sbb
inc
add
arpl
shl
in
dec
pushf
aas
mov
pusha
pop
pop
lods
das
push
call
mov
or
mov
add
xchg
stos
out
push
int
dec
divl
mov
cmp
sub
call
push
outsl
gs
and
jns
icebp
lds
ds
arpl
loopne
add
cmpsl
xchg
xchg
scas
push
popa
sub
lcall
and
dec
fidivrl
sub
repz
out
or
cmp
push
dec
dec
mov
hlt
xor
and
sub
push
sbb
mov
lods
pop
sbb
inc
in
psllw
lret
arpl
xchg
out
data16
cltd
fimull
popa
dec
mov
fsubrs
pop
outsl
lods
inc
cmpsl
scas
or
pop
adc
xor
iret
jp
out
dec
or
mov
cmp
xor
pop
mov
sbb
jae
repz
scas
cld
iret
jns
mov
ret
jge
xchg
rcll
shll
lcall
sbb
idivl
out
or
and
xor
in
push
jmp
xor
or
ds
loop
sti
xor
ja
ss
out
mov
enter
fcomps
loope
xor
mov
sbb
imul
fdivrs
mov
enter
mov
sub
jnp
xor
addr16
inc
jb
push
jge
pusha
or
mov
lahf
lds
iret
aas
mov
xor
les
push
std
pop
addb
outsl
cwtl
aas
pushf
scas
fistps
mov
dec
test
add
mov
xchg
xchg
mov
push
cmp
xchg
dec
orl
mov
pop
or
stos
popf
aad
push
adc
cmpsl
cmc
sbb
popf
ret
rcrb
and
mov
mov
push
push
adc
int3
mov
mov
pushf
and
lahf
and
fs
in
aam
repz
mov
js
add
cmp
adc
or
adc
adc
lret
inc
pop
sbb
xchg
pop
ret
loope
inc
adc
sub
sbb
jg
loope
arpl
mov
dec
mov
pusha
inc
in
and
inc
jmp
fisttpl
lret
pop
scas
sbb
popa
cmpsl
or
mov
mov
sub
popa
sub
hlt
sahf
cmp
aas
out
push
push
mov
icebp
mov
loopne
adcl
ffree
stos
cmp
adc
xor
lahf
testb
mov
ret
fwait
xchg
cmp
mov
jmp
stos
cmp
adc
mov
mov
or
out
incl
jne
mov
xor
das
or
repz
inc
scas
dec
shrl
push
lcall
mov
mov
mov
jmp
arpl
or
outsl
inc
cmp
test
clc
add
mov
push
xchg
fildll
push
sbb
pop
outsb
call
shl
pop
and
jge
int
inc
mov
enter
inc
lods
sub
jns
scas
push
cmp
pop
inc
sarb
les
jns
cmp
xor
arpl
ljmp
mov
mov
mov
mov
stos
pop
jmp
push
push
aam
dec
daa
adc
mov
mov
pop
sub
push
dec
jno
mov
enter
lods
cmpsb
cli
mov
and
insb
push
pushf
movsl
sub
ljmp
scas
jnp
lea
cmp
mov
iret
sysexit
jp
push
jae
pushl
mov
into
mov
cltd
fiadds
enter
icebp
mov
inc
inc
jmp
sti
pop
adcl
pop
lds
movl
std
sahf
decl
add
mov
sub
and
fstps
jo
rolb
push
lds
ret
jmp
in
lock
shrb
pop
dec
pop
sub
inc
adc
ret
jmp
add
sub
push
out
je
push
push
insl
cmpsb
pop
cmova
inc
xchg
fbld
jmp
aaa
fdiv
test
fsub
enter
addr16
test
xchg
or
cwtl
notl
iret
dec
imul
jns
subl
ds
sbbl
pop
gs
repz
daa
sub
cmp
inc
loopne
aaa
lahf
xor
ds
pop
inc
add
nop
loopne
lret
dec
int
ja
xor
imul
inc
enter
add
xchg
sarl
mov
and
mov
call
int3
call
out
sub
adc
cmp
pop
push
jmp
xchg
fst
stc
loop
pop
add
adc
roll
pop
call
or
lret
rorl
cmp
lcall
int3
mov
repz
push
pop
popa
jno
xor
mov
enter
and
jmp
dec
dec
jmp
or
inc
jb
fstpl
or
add
stos
cli
aas
arpl
pushf
sbb
lods
inc
jns
mov
es
fcomip
or
repnz
sub
xor
or
aas
cmp
lods
xor
js
push
xchg
push
sti
and
sbb
fiaddl
sbb
and
out
xor
imul
enter
stos
stc
add
lcall
loope
ret
mov
sbb
inc
mov
leave
lds
stos
aas
filds
sbb
jecxz
inc
enter
mov
pop
movl
pop
fbld
jae
into
inc
lds
ds
fnstcw
sarb
sbb
sbb
jle
aaa
aad
mov
xor
pop
jne
dec
xchg
sahf
pop
in
adc
in
cli
sbb
jl
test
mov
clc
dec
ljmp
fcoms
sub
xchg
dec
xchg
imul
mov
xchg
xchg
movsl
xchg
sbb
stc
mov
add
sbb
scas
sbb
rorb
sbb
outsl
xchg
inc
sub
loopne
test
mov
scas
mov
xor
enter
xchg
mov
call
sbb
jbe
inc
nop
out
cmpl
and
and
mov
sbb
xchg
sub
orl
xor
jp
and
push
pushf
mov
xor
negb
loopne
aas
jge
dec
sbb
leave
enter
xchg
insb
jno
mov
add
pop
cmpsb
dec
sbb
sbb
aas
xchg
jo
cmp
repnz
out
lea
lods
test
jnp
into
fdivr
jns
sub
enter
lret
insb
arpl
cmp
enter
fnstcw
call
cmp
cltd
popa
mov
jge
scas
or
jl
gs
lock
mov
sub
mov
dec
pop
dec
pop
sbb
push
pop
push
xchg
call
into
sbb
sahf
lock
roll
in
jns
or
and
add
adc
popl
dec
push
pop
xor
adc
arpl
scas
dec
int3
xor
or
movsl
pop
lret
pop
xor
cltd
stc
and
adc
sbb
xchg
add
repz
sub
mov
stos
sub
xlat
mov
and
xchg
repnz
popa
add
push
mov
icebp
fdivs
movsl
and
pop
gs
stc
sbb
aam
adc
pusha
or
add
cld
ja
stos
dec
ficomps
es
dec
aam
insl
shl
fbld
xor
pusha
mov
mov
mov
jl
jecxz
push
out
inc
jb
aas
loope
mov
pop
pop
dec
outsl
adc
imul
imul
in
mov
jp
and
aad
outsl
ja
mov
les
sub
fdivrp
cmpsl
jge
repz
and
dec
fcmovne
cmp
loop
imul
loop
cmpsl
testl
push
ror
hlt
mov
push
jge
ds
xchg
xchg
xor
andb
inc
test
in
sahf
loopne
jp
fs
add
adc
jg
leave
mov
cs
std
mov
cmpsl
lods
rcll
or
sbb
jo
inc
in
adc
in
adc
inc
jecxz
cmp
shlb
xchg
mov
xor
jnp
in
out
or
xlat
shr
sub
mov
ds
ret
rcrl
mov
pushf
lahf
mov
fcomi
inc
pop
ret
cwtl
in
cs
setp
fmul
mov
insb
scas
mov
inc
loop
loop
cmp
inc
xchg
xchg
das
test
scas
repnz
imul
js
std
add
add
add
push
mov
jl
inc
cmovs
repz
adc
xor
ss
push
iret
fcmovnb
mov
cltd
fld1
pop
sahf
mov
scas
lods
mov
cmp
adc
add
data16
pop
push
or
outsl
ja
dec
js
into
inc
and
shrb
inc
push
adc
adc
and
xchg
xchg
mov
mov
jmp
sarb
and
xchg
and
notb
sbbb
or
inc
jae
xchg
out
sub
sub
loop
inc
mov
sub
xchg
xlat
xchg
rcrb
and
mov
movsb
xchg
ds
bound
adc
test
mov
in
aam
dec
or
mov
and
stc
ror
xor
mov
je
fldl
and
push
loope
pop
ret
cmpb
add
and
lds
add
lods
xchg
pop
pushl
aam
ficomps
inc
shrl
sbb
popa
test
movsl
gs
cmp
scas
mov
lds
leave
cmpsl
push
push
mov
mov
ds
adc
cmp
pop
jae
cmp
fwait
hlt
test
jnp
in
popl
cmpsl
rcl
icebp
inc
pop
jl
mov
mul
pop
and
dec
mov
mov
leave
jle
es
fbld
aam
push
xchg
cmpsl
xchg
lds
cmp
in
std
daa
mov
xor
xchg
add
out
mov
movsb
cmpsb
ss
push
subb
adc
imul
mov
cmp
adc
test
sbb
adc
shrl
jbe
outsb
mov
popl
adc
xchg
pop
testl
pop
aad
addr16
in
data16
adc
je
adc
fwait
imul
jb
stc
test
push
nop
shll
and
cli
add
adc
stc
les
les
stos
xor
and
jg
or
sbb
jno
outsl
xchg
mov
inc
rcr
and
adc
adc
cmp
push
movsb
mov
rcr
lds
movsl
test
notb
je
pslld
sub
jne
add
pop
mov
sub
enter
xchg
dec
or
lds
imul
repnz
cmp
out
fadd
inc
fs
jno
mov
pop
bound
pop
pop
ret
int
jl
repz
mov
sub
mov
and
icebp
cmp
add
lcall
ss
mov
fcom
test
outsb
es
add
or
and
shlb
aam
out
enter
cwtl
xchg
shr
add
repnz
mov
dec
ret
roll
loope
stos
mov
popf
jnp
sbb
cmp
imul
push
mov
sbb
mov
cs
js
flds
test
bound
adc
cmpsb
mov
int
ljmp
jns
jbe,pt
test
fwait
xlat
push
inc
or
ja
push
xor
fmuls
mov
enter
iret
test
test
and
adc
or
xor
in
sub
mov
ss
inc
sbbl
cmpsb
lret
gs
out
sahf
aas
pop
adc
insl
pop
xchg
mov
dec
cmp
add
sbb
and
cmpsb
movsl
sbb
xchg
jge
fucom
loopne
xchg
push
adc
cltd
rol
cmpsl
mov
add
mov
aam
jl
jge
lods
push
push
stc
mov
mov
ucomiss
cld
ds
clc
enter
test
xchg
cmp
jge
jle
mov
or
mov
into
stc
xor
mov
add
rolb
sbb
aad
cli
mov
sub
mov
jno
jg
mov
add
add
ror
cmp
jnp
lea
lods
inc
jno
enter
xor
testb
cmp
mov
and
mov
add
movsl
inc
lahf
push
outsb
fucom
and
out
test
enter
sbb
push
sahf
rcrl
rcr
es
xchg
cmc
ds
mov
out
dec
lods
fsubrl
roll
pop
mov
push
mov
bound
stos
cmc
icebp
outsb
imul
sub
cmpsb
dec
lods
pop
or
sub
mov
add
lods
test
bound
xor
icebp
pavgw
xor
movsb
fstpt
pop
shl
addr16
scas
jo
cmpsb
xchg
push
aaa
dec
push
lahf
fwait
adc
xchg
mov
mov
sbb
in
out
mov
scas
outsb
pop
mov
cmovnp
pop
ss
jne
imulb
or
pop
xchg
mov
dec
fdivs
faddl
add
adc
icebp
lods
sbb
mov
xor
xlat
pop
movl
mull
mov
push
mov
insb
or
sub
mov
dec
cmp
adc
xor
dec
jge
daa
sbb
jb
cmp
cmp
mov
add
pop
into
mov
push
daa
cmp
adc
das
shll
out
fnstcw
xor
fdivl
jb
and
movsl
les
incl
stc
dec
mov
cmp
scas
mov
daa
mov
cld
and
xchg
mov
movhps
lret
in
xchg
mov
mov
mov
sub
aad
jns
inc
add
nop
lret
sub
insb
dec
mov
pusha
je
test
testl
mov
cwtl
addr16
sahf
repnz
lods
lret
push
ss
mov
mov
movsl
dec
cs
mov
lods
test
enter
cmpsl
and
lock
decb
pop
push
and
mov
xchg
les
sub
enter
cmp
and
push
mov
shrl
test
add
aas
lods
xchg
aas
push
mov
in
out
jmp
inc
mov
js
adc
and
or
fneni(8087
xchg
push
sub
test
and
dec
pushf
push
push
fcmovnbe
repnz
xor
xor
or
gs
repz
xor
imul
pop
repz
push
testl
dec
popa
xor
andl
dec
dec
stos
pop
push
lods
jno
ja
pop
fmull
xchg
and
out
add
mov
cmp
mov
popf
xchg
jl
jns
or
cli
aam
sub
rcl
xor
clc
repz
mov
push
push
int3
or
adcb
imul
mov
or
pop
test
ds
mov
sarb
dec
or
sbb
les
cmpsb
lahf
xchg
cmp
sub
or
push
jle
aas
inc
mov
push
scas
pop
xchg
lods
stos
pop
dec
ds
xor
sti
mov
inc
inc
js
cld
bound
sbb
mov
std
lds
push
or
mov
and
roll
lret
push
mov
aam
imul
sbb
inc
pop
test
mov
push
mov
mov
pop
jbe
mov
adc
jle
testl
cmpsb
push
pop
testl
jb
jae
jg
ljmp
jb
dec
cmp
lds
sbb
arpl
cwtl
mov
jae
call
insb
ss
leave
fwait
xor
lock
out
shlb
cmp
pushf
jle
stos
lret
sub
or
sub
out
xor
ss
std
aas
add
xchg
mov
mov
push
into
inc
jp
cmp
scas
ret
aas
and
int3
mov
lds
idivl
mov
leave
stos
mov
lods
out
mov
fcomip
jns
inc
adc
stc
aam
or
mov
mov
jle
popf
movsb
jp
rcr
sbb
fnstcw
out
in
push
hlt
addr16
push
rorl
cmp
pop
outsl
mov
shll
clc
pop
js
popl
stos
das
jecxz
adc
sbb
xor
adc
cmp
mov
jnp
pop
clc
push
add
es
hlt
mov
pusha
icebp
adc
or
loope
sub
movsl
fwait
shrb
stos
mov
or
xchg
push
aam
loope
test
lret
movsb
sbb
push
test
add
fwait
out
fs
inc
or
mov
dec
or
sub
push
test
jge
test
hlt
sub
xchg
xchg
mov
fwait
repnz
jecxz
add
loope
fbstp
dec
es
stos
mov
arpl
sahf
dec
jmp
inc
popa
mov
sub
jg
outsb
push
ret
ljmp
xor
stc
popf
add
pop
scas
lock
subb
pop
pop
cmpb
outsl
inc
imul
push
xchg
inc
and
iret
push
add
inc
cmpsb
int
and
jp
jo
and
push
push
jnp
push
fisttpll
leave
vrsqrtps
in
mov
roll
add
jne
mov
xchg
ja
or
add
fnstsw
dec
imul
ds
fwait
cs
sub
sub
adc
mov
dec
pop
sti
aaa
mov
lcall
andb
jmp
movsb
jbe
sarl
cmp
cld
jle
inc
xor
dec
addr16
pop
and
ss
mov
mov
jge
jne
fs
clc
mov
push
lret
jmp
mov
dec
cs
mov
cwtl
push
dec
and
xchg
mov
pushf
mov
test
xor
cmp
push
outsl
inc
int
mov
shlb
mov
fildl
inc
xchg
add
push
xorl
dec
pop
lahf
leave
sub
pop
push
clc
cmp
push
cmp
popa
mov
jae
cmp
addr16
stos
add
fcmovne
xor
call
in
std
cmc
mov
stc
or
ret
test
dec
insb
sbb
jns
rcr
in
pop
mov
adc
lods
popa
push
mov
jg
pop
sub
std
dec
in
mov
hlt
les
xchg
pop
pop
pop
mov
sbb
aaa
push
lcall
sbb
mov
bnd
fsubr
stc
idivl
xchg
iret
loopne
aaa
gs
clc
cmp
cmp
mov
fnstsw
mov
movsb
dec
pop
pushf
repz
jmp
or
add
pop
ficomps
jmp
cmpl
cmp
stos
adc
stc
ret
movsl
outsl
decb
xchg
loope
xchg
push
xlat
lea
lock
or
dec
fs
push
mov
test
xchg
into
cmpsb
insl
cs
stc
or
mov
imul
xor
mov
add
mov
push
sbb
and
dec
rorl
pusha
pusha
add
add
outsl
or
fstpl
or
loop
push
xchg
decl
aad
inc
lret
jp
call
jecxz
sbb
dec
adc
mov
lods
mov
test
ret
jecxz
mov
jbe
xchg
fadds
outsl
jg
mov
mov
out
push
andl
adc
adc
and
js
shrb
push
sbb
inc
popf
stos
lahf
pop
dec
fisubl
out
fldl
jecxz
xchg
inc
mov
aam
mov
out
cli
pop
fs
push
popf
push
add
mov
mov
ja
mov
stc
mov
pusha
outsl
mov
mov
sarl
lret
add
sbb
data16
mov
or
fnop
push
dec
std
and
in
or
jb
jge
adc
dec
ljmp
jp
adc
xchg
dec
cmpb
push
cld
xlat
cmp
stos
xchg
and
xchg
jp
std
inc
sub
xchg
push
pop
push
mov
mov
faddl
mov
push
add
int3
inc
cltd
sub
add
xchg
inc
push
out
pop
shl
sbb
outsb
in
push
jo
lods
fiadds
push
pop
loopne
arpl
mov
sub
xchg
mov
xor
mov
mov
popf
or
repnz
push
ja
jnp
addl
mov
arpl
cmpsl
dec
fwait
xlat
lcall
mov
mov
stc
inc
scas
jp
fcompl
repnz
call
in
xor
pminub
sahf
mov
pop
pop
loope
push
fcmovne
movsb
or
stos
mov
stc
xchg
mull
pop
lea
into
or
loop
dec
push
imul
fcomip
or
movsl
outsb
gs
jg
mov
xor
inc
adc
mov
shlb
adc
shl
pop
mov
out
sub
imul
dec
in
push
push
mov
and
cmp
pop
js
add
and
imul
jae
cmp
sbb
cmc
cltd
imul
xchg
pop
mov
adc
loopne
push
aam
cmp
adc
sahf
cmp
test
aad
nop
in
fildll
inc
xor
jp
test
daa
ficompl
jmp
cmc
or
aaa
sub
lds
aaa
fiadds
push
jge
loop
xor
lds
in
ja
push
test
inc
or
pop
sarl
dec
or
outsl
aaa
xchg
dec
dec
mov
insb
xchg
mov
stc
mov
inc
ljmp
aas
pop
add
mov
sahf
sub
repz
mov
xchg
pop
icebp
xor
xchg
stos
ret
outsl
fldcw
xor
popa
mov
je
inc
xchg
xor
mov
mov
cwtl
fnstenv
into
imul
pushf
sbb
test
pop
xchg
dec
test
fsubrl
callw
in
cmp
mov
psubsb
jns
xor
cwtl
adc
lahf
cmpxchg
lcall
icebp
adc
mov
inc
dec
rcr
mov
mov
lret
xor
out
add
inc
dec
cli
mov
mov
jo
xor
dec
std
filds
cmp
inc
loopne
fstl
cmc
dec
clc
std
xlat
cmp
mov
mov
filds
jmp
xor
movsl
cmpl
xchg
outsb
lcall
shll
mov
pop
push
sbb
outsl
and
in
popa
xor
lret
sbb
or
pop
pop
ret
push
sub
insl
mov
fisubl
push
mov
mov
shlb
pop
xchg
xchg
dec
cmp
jecxz
mov
es
cld
testl
pop
inc
scas
stos
xor
sti
mov
insb
je
sub
fs
shll
and
xor
mov
mov
mov
loope
sub
outsb
testb
mov
lds
xor
jno
test
testl
pop
inc
and
scas
jmp
sti
jecxz
test
and
mov
std
insl
repnz
arpl
inc
andb
aas
dec
inc
sbb
dec
jge
lcall
jmp
daa
push
jmp
xchg
call
mov
inc
imul
lock
jp
js
shll
jo
lods
fidivrs
iret
insb
sbb
add
push
adc
lahf
cld
bound
lret
mov
lea
insb
repz
out
mov
adc
pushw
mov
cld
mov
inc
inc
in
movsb
loope
mov
cmp
mov
cli
cmp
adc
movhps
mov
es
movsb
shll
sarl
mov
enter
jle
mov
add
int3
aaa
mov
mov
incb
cli
push
sbb
jne
aaa
adc
mov
xchg
js
jge
mov
jnp
push
lock
inc
icebp
dec
lods
cmpsb
pop
xchg
jp
inc
nop
xchg
in
xchg
push
cmp
out
fstpt
jbe
loop
dec
movsb
mov
mov
cmpsb
inc
stos
mov
add
adc
mov
inc
fidivrs
lods
mov
add
mov
adc
les
cmpsb
mov
and
add
lret
jo
xchg
sahf
push
push
cltd
jbe
push
aad
clc
cmp
mov
imul
out
stos
pusha
fdivrl
rolb
push
ds
jmp
mov
in
inc
mov
cmp
sbb
push
addr16
push
sysenter
ss
push
inc
mov
cmp
out
fnstenv
adc
clc
cwtl
dec
dec
rcl
inc
popf
in
mov
orb
jbe
push
sbb
jecxz
pop
inc
int3
aad
pusha
loopne
xlat
jns
cmc
xchg
pop
fcomp
cs
adc
add
pop
sub
in
and
fwait
paddd
out
insb
icebp
movsb
pushf
pop
lahf
dec
jecxz
mov
adc
xor
jg
or
fistpl
mov
adc
pop
fisttps
nop
fdivrl
xor
in
nop
inc
mov
jne
leave
adc
xor
pushf
les
test
scas
lcall
push
mov
scas
js
push
in
arpl
push
cltd
push
jmp
popa
sub
cwtl
mov
orb
adc
aam
inc
loopw
xor
inc
in
push
test
xor
jecxz
sbb
call
icebp
roll
mov
lret
jbe
rclb
int
jecxz
jle
dec
or
jnp
push
or
arpl
insl
and
fwait
inc
and
jl
add
testl
insb
xor
sub
push
mov
push
cmp
fadds
mov
daa
lahf
cmpb
stc
cli
int
lret
mov
pop
pop
dec
sbb
sbb
adc
mov
loopne
std
or
xchg
insb
pop
aam
leave
mov
fdivl
sbb
pusha
loopne
in
mov
adc
sub
mov
mov
jae
ja
mov
or
lods
mov
and
push
mov
add
loopne
mov
pop
stc
out
aad
push
je
scas
nop
clc
inc
stos
aaa
inc
xor
mov
pop
lret
repz
dec
shlb
cltd
mov
add
fs
inc
inc
pop
add
xchg
cli
fdivrs
cwtl
mov
push
repnz
aas
scas
icebp
out
ret
out
cmp
add
insl
push
iret
mov
or
pop
mov
fwait
js
addb
cmp
and
jl
xor
adc
push
pushf
std
shll
mov
dec
cwtl
test
jmp
out
cmc
aad
or
mov
aam
pop
push
ret
iret
xor
push
in
cs
inc
sti
mov
pop
xchg
jle
mov
mov
cmp
sub
lods
jns
push
fldt
dec
push
mov
pop
lea
js
insl
cmc
dec
out
and
popf
idivb
test
repz
stc
stos
in
mov
clc
mov
and
loope
into
imul
out
or
mov
imul
shl
add
popf
out
push
ds
or
push
test
stos
mov
xor
gs
mov
push
mov
sar
add
pop
mov
lcall
fmuls
xchg
mov
fs
jae
sbb
call
arpl
enter
lods
es
shlb
fwait
loope
dec
inc
sbb
mov
xchg
call
cmp
pop
sub
cli
loope
push
pushf
loopne
xchg
dec
int
rorl
adc
je
mov
pusha
mov
ror
mov
cmp
rclb
fcoms
mov
orb
sbb
mov
cmp
loope
jbe
inc
shrb
inc
mov
cmpsl
lahf
dec
cmp
lock
aam
in
rcll
inc
testl
out
sti
push
cmp
mov
lret
jle
stc
shlb
aam
fisubl
xchg
das
adc
sub
lea
adcb
add
sbb
flds
dec
ss
mov
inc
xchg
pop
test
shrl
push
lods
or
add
js
inc
sbb
jno
push
mov
sti
dec
cmpsl
inc
fcomi
fists
xchg
std
inc
lahf
lret
cmc
movl
lret
mov
es
xchg
out
movsl
xchg
outsb
sar
pop
mov
lds
sti
jl
insl
div
xor
dec
jbe
aad
push
push
xor
push
lcall
pop
or
mov
pop
shrl
dec
push
dec
gs
pop
in
mov
adc
inc
in
mov
loope
pop
mov
jle
or
insl
dec
push
dec
cmp
fs
into
in
pop
mov
push
xchg
iret
fsubrl
add
sbb
add
sbb
subb
mov
addr16
inc
lods
sahf
pop
cmpsb
jae
and
addr16
repnz
aaa
mov
call
rcrb
cmp
mov
icebp
ljmp
addl
and
movb
mov
dec
rcll
outsb
push
popl
sub
xor
push
and
mov
mov
mov
enter
xor
aam
scas
cmp
sbb
mov
aas
or
add
bound
and
mov
and
loop
out
mov
inc
jb
mov
xor
hlt
into
fsubs
jno
cwtl
mov
insl
sbb
jne
int
lds
in
out
lcall
cwtl
addr16
push
in
into
mov
mov
bound
popf
pushf
outsb
cmp
mov
repnz
jg
ds
repnz
ljmp
adc
and
lods
stos
ljmp
lret
cmp
das
xchg
add
mov
out
xor
int3
xor
xor
mov
lock
and
or
lret
icebp
loop
mov
nop
lret
insl
inc
sbbl
sbb
inc
adc
cld
sub
mov
pop
add
inc
lods
sbb
sub
andb
ret
jno
in
dec
add
aaa
je
push
mov
popa
iret
xchg
sub
clc
in
dec
outsb
mov
js
xchg
cmp
movsb
adc
jb
mov
jbe
jl
and
push
addb
jp
dec
test
add
aam
mov
das
push
mov
jno
icebp
xchg
loope
dec
mov
sbb
mov
xor
sti
loope
stos
lods
mov
push
outsl
and
addr16
push
mov
daa
mov
jno
lret
out
mov
pop
pop
movsb
loopne
out
mov
lret
out
frstor
xor
cmpb
xor
pushf
xor
sahf
adcb
in
push
dec
leave
call
roll
cmp
aas
lret
repnz
popa
arpl
lret
jp
in
push
jae
nop
addr16
mov
movsb
enter
cmp
ss
inc
mov
inc
push
rcll
mov
sub
jbe
inc
sbb
pop
jb
daa
pop
or
ret
mov
mov
mov
adc
xchg
xchg
lods
inc
push
xor
xchg
push
loop
mov
or
push
pop
push
mov
push
xchg
inc
cmc
xchg
add
mov
addr16
mov
arpl
pop
sbb
das
and
ret
and
aam
mov
push
cmpsl
shr
dec
cmp
xchg
in
icebp
sub
push
lret
xlat
sbb
mov
orl
dec
inc
sbb
cld
jge
mov
loop
shll
icebp
pop
stos
pop
int
arpl
test
enter
inc
lods
mov
mov
cld
sub
rcll
lea
loope
pop
dec
cmp
ljmp
aas
ret
sub
inc
adc
lods
shl
mov
dec
mov
bswap
jnp
gs
sub
sub
fs
gs
lds
gs
dec
mov
loopne
and
sar
fstp
sub
es
lcall
xor
inc
call
ja
loope
sbb
mov
ljmp
into
adc
sbb
int
sub
mov
inc
daa
out
in
fucom
push
lds
and
pop
pusha
add
loop
fildl
push
enter
pop
pop
push
cmp
mov
pusha
pop
adc
movsl
hlt
mov
cmpsl
and
mov
fs
lods
inc
cs
scas
fldcw
mov
cmp
push
out
push
cs
xchg
add
or
push
scas
es
sti
lcall
push
jg
adc
cmp
pop
dec
inc
fidivs
and
jp
pop
mov
lds
hlt
and
mov
mov
out
pop
ds
lea
pop
dec
mov
or
jecxz
and
pop
push
mov
into
cs
popa
fdivs
or
pusha
in
inc
scas
imul
pop
int
sbb
pop
push
dec
mov
aas
add
imul
mov
mov
ljmp
arpl
jae
push
cwtl
sti
mov
rcrl
inc
cmpb
jnp
add
nop
xlat
fistpl
ljmp
dec
jmp
dec
push
and
cmp
cmp
outsb
mov
insb
jmp
jbe
stc
ret
mov
pop
cmp
xor
aad
pop
xchg
mov
ficompl
mov
sub
pop
xlat
dec
incb
dec
sub
js
movsb
cmc
rorb
out
clc
adc
cwtl
mov
mov
mov
cmp
jne
cltd
mov
lea
repz
testb
adc
aad
or
daa
lret
xor
ja
stos
jnp
adc
push
repz
test
cmp
and
andl
mov
inc
int
scas
fnstsw
sbb
xchg
cmc
jb
or
pop
sbb
xor
gs
adc
mov
shll
or
push
rcrl
add
lret
pop
cmpsl
push
push
and
mov
sub
stc
jo
xchg
mov
mov
dec
mov
jo
add
mov
ficomps
pop
cmp
nop
jle
clc
je
pop
jb
push
int
mov
jns
inc
data16
rcr
cmc
into
dec
lods
cmpsb
stos
mov
in
addb
adc
out
xor
pop
in
xchg
or
outsl
pop
dec
cmpsl
and
add
call
jl
add
movsl
popa
pop
fstpt
roll
sbb
pop
sub
cmp
inc
les
scas
mov
enter
ret
in
gs
pushf
popf
sub
pop
jl
jg
je
dec
test
popa
arpl
push
std
mov
test
filds
outsb
shr
je
adc
sbb
fwait
pop
notb
aam
mov
cmp
add
pop
daa
cld
icebp
jp
sub
test
shlb
inc
push
test
frstor
rclb
pop
cmpsb
mov
push
fildl
sbb
aas
or
mov
aaa
mov
imul
pop
imull
add
add
or
arpl
xchg
cmp
cmc
fdivrl
out
movsb
push
or
dec
lock
sub
lcall
mov
mov
and
cli
xlat
add
cmp
xor
inc
xchg
and
xor
rcl
mov
xorb
cmpsl
mov
and
push
push
xor
pop
add
test
mov
mov
inc
sub
pushf
sub
jo
cli
inc
mov
cmp
jecxz
jno
popf
mov
adc
adcl
test
jne
subb
adc
js
fnstcw
mov
test
pusha
xchg
fwait
push
insb
test
mov
fisubs
lds
xchg
pop
std
loope
mov
inc
dec
xor
sub
push
popl
pop
inc
mov
outsl
cmpsb
lock
repz
and
pop
out
lcall
xor
lcall
fsub
mov
fwait
daa
pusha
adc
jle
lea
hlt
pop
jl
xor
rcr
inc
ficomps
xor
fstpt
lock
mov
push
test
mov
imul
mov
mov
cmp
jns
and
aaa
andl
insb
xchg
push
add
call
sub
scas
das
ficompl
inc
adc
pusha
mov
push
push
dec
adcl
or
orl
aad
jb
out
loop
aas
cwtl
aaa
loop
int3
xor
adc
sbb
jae
adc
sub
jo
bound
push
push
mov
imul
repz
mov
push
adc
mov
mov
xor
dec
and
sbb
iret
out
sbb
push
fidivrs
sbb
out
add
xchg
adc
jecxz
test
mov
or
mov
addr16
es
hlt
push
and
inc
fisubrs
xor
mov
into
das
out
cmp
xchg
or
jb
xor
loopne
jno
hlt
mov
jp
push
xor
daa
push
xchg
sbb
sbb
sub
xchg
mov
sbb
scas
sbb
loopne
lods
and
int
test
and
stos
inc
inc
insb
jbe
cmp
and
cmc
mov
add
cmp
sahf
pop
iret
xor
aad
std
adc
mov
sub
mov
jne
sbb
pop
mov
ja
jg
inc
dec
and
leave
iret
je
jbe
cs
stos
shll
jecxz
loop
jno
mov
scas
adc
xchg
daa
lock
iret
inc
ret
jl
outsb
push
scas
sub
out
mov
sbb
add
sub
mov
test
pop
mov
data16
insl
fildll
loop
mov
test
sbbl
inc
lods
lea
imul
inc
sar
shl
popf
ret
repz
addr16
sub
or
xchg
and
stos
loope
jmp
shlb
aam
xchg
jge
mov
xor
adc
mov
inc
and
stc
sbb
mov
add
pop
fwait
lock
lahf
xor
arpl
jns
add
out
into
sbb
sbb
adc
stc
pop
stc
xor
fstpl
jb
dec
pop
sti
pusha
cmp
lahf
filds
mov
inc
cli
mov
mov
shrl
mov
rclb
out
je
cmp
push
pop
arpl
add
movsb
adc
loop
lret
pop
jnp
fwait
shll
dec
es
pop
pusha
movsl
pop
cld
inc
std
mov
imul
cmp
cmpl
jge
mov
icebp
out
dec
sub
cmpsb
pop
cmp
les
fdivl
daa
pop
addb
movl
jmp
shr
mov
loop
mov
inc
mov
fidivrl
cli
mov
and
sti
repnz
hlt
xchg
push
or
jae
rcrb
jo
divl
js
fisubl
dec
mov
imulb
das
fistps
fnstcw
je
mov
mov
fwait
jg
or
ret
ds
das
gs
xor
inc
adc
pop
mov
mov
push
dec
je
jno
mov
push
in
dec
movsb
ret
ljmp
rol
sbbl
repz
sub
imul
push
push
cmp
xor
mov
mov
sub
bound
sub
pop
es
cmpsl
inc
cmpsl
ss
mov
stos
jp
cs
xchg
sub
orb
cmp
pop
push
decb
int3
pop
or
pop
addl
nop
mov
jb
sub
mull
mov
lret
dec
into
daa
leave
dec
jl
mov
adc
rcrl
sub
adc
cmpsl
adc
inc
rorl
or
out
jae
popf
xchg
mov
sub
es
je
aad
cmp
lock
xor
jg
or
xor
xor
into
xchg
enter
mov
inc
sub
mov
pop
mov
mov
hlt
in
cmp
push
xor
jecxz
push
pop
dec
into
adc
jl
das
sbb
das
mov
xchg
test
lods
inc
or
xchg
adc
xchg
mov
add
jo
into
repz
subb
les
ret
outsl
add
in
lret
mov
loope
fcoms
int
pop
jne
arpl
std
mov
scas
or
decw
jle
cmp
push
cmp
adc
mov
rcll
loopne
js
jle,pn
inc
es
mov
dec
mov
bound
mov
sub
aad
mov
dec
andl
pop
packuswb
lea
mov
dec
pop
lods
pop
jecxz
cwtl
je
adc
cmc
mov
sub
ss
push
inc
aaa
roll
movsl
enter
adc
shlb
mulb
movsl
fnstenv
push
lock
shrl
fwait
mov
xor
stos
mov
mov
pop
lahf
jg
mov
push
loope
sub
mov
lods
das
lea
cmp
fsubl
inc
scas
xor
add
in
sbb
add
cmp
mov
movsl
mov
jno
mov
rorl
mov
cld
pop
pop
sbb
ror
out
vmwrite
cmp
add
ret
cmp
inc
orb
xchg
xchg
sti
outsl
movsl
xor
mov
test
mov
add
sbb
insl
push
cwtl
jecxz
movsl
lock
cmp
in
aaa
ret
out
out
mov
fs
test
cltd
je
add
or
mov
xchg
fs
fcmovbe
cld
std
sarb
mov
popf
mov
jecxz
hlt
cmpl
jmp
pop
cmp
push
orl
inc
repnz
out
mov
addr16
nop
cmpsl
in
test
scas
cmp
mov
cmp
out
pop
xor
inc
mov
dec
lret
push
loopne
insl
lods
daa
and
dec
cmp
push
fadd
pusha
pusha
add
mov
aam
aam
mov
jp
les
push
fnsave
and
jg
jmp
in
cld
add
inc
and
xor
dec
mov
xchg
xchg
push
insb
dec
lcall
inc
mov
and
mov
cmp
flds
push
cmp
jae
test
push
scas
mov
inc
inc
popa
and
pop
das
in
xchg
leave
aas
inc
sub
lods
mov
dec
fisubrl
mov
imul
sbb
fwait
movsl
repnz
movsb
dec
add
dec
push
stc
inc
xchg
jno
jae
outsl
push
gs
add
notl
out
lret
sub
call
ret
rol
popf
sarl
mov
subb
icebp
mov
mov
pop
idivb
enter
mov
arpl
or
pop
loopne
xchg
in
lods
daa
fsubrl
ja
rcrb
fwait
jnp
add
pushf
shl
fwait
xchg
ljmp
or
mov
fnstcw
stc
outsb
dec
jle
movsl
enter
jnp
loope
push
daa
cli
cmp
clc
outsb
sub
lds
pop
jnp
dec
loope
lea
sub
test
xor
mov
xor
sub
lea
subl
xor
mov
jp
lcall
wbinvd
inc
xchg
hlt
in
sbb
dec
push
popf
or
leave
push
jecxz
and
sub
jb
mov
add
and
fstp
add
mov
es
lods
cmp
daa
mov
xchg
xchg
xchg
in
fldcw
lcall
insb
lock
in
push
cmp
fbld
inc
adc
mov
xor
outsl
dec
xor
insl
out
jecxz
mov
push
jl
xor
inc
jmp
inc
sbbb
das
sub
pop
cltd
xchg
fisubrl
xchg
mov
jp
out
cltd
popf
loop
cmp
push
test
fldl
shlb
stos
cmp
ret
pop
jne
icebp
in
cmc
fimuls
insb
fisubrl
lock
xchg
push
push
dec
subl
jb
scas
sub
out
shll
rcll
ret
lret
adc
mov
mov
imul
repnz
pop
sub
sbb
sbb
in
pop
mov
imul
mov
and
or
mov
mov
movsb
adc
loopne
or
ds
aas
xchg
hlt
cmp
and
mov
stos
xchg
lret
icebp
push
or
out
test
in
adcb
es
mov
adc
das
sub
fptan
fadds
push
les
sub
les
ret
adc
inc
out
push
fbstp
xchg
add
into
fwait
or
mov
and
mov
push
push
or
jge
dec
jle
pop
lahf
add
sub
mull
test
or
cltd
test
negb
bound
popf
jb
jle
jmp
sub
xchg
imul
btc
xor
jg
aas
in
inc
or
and
shlb
xlat
cmpsl
mov
cmpsb
pop
push
daa
push
mov
pop
test
xchg
test
rcrl
add
xchg
subb
adc
mov
mov
and
xchg
test
xor
adc
or
push
mov
lds
bound
icebp
loope
insb
fistpll
mov
or
ret
xchg
shlb
in
dec
aaa
jg
cltd
mov
lahf
xchg
add
cmpsl
sahf
jg
sbb
mov
cmp
div
inc
mov
cltd
xchg
adc
or
push
cmc
setno
mov
shrl
js
fildll
jmp
sub
cmp
cltd
pop
sti
leave
jecxz
adc
sub
in
pop
xchg
push
cli
daa
leave
push
aad
iret
or
sarb
and
push
push
jecxz
int
cmc
mov
dec
mov
adc
push
lret
sar
pop
into
shl
fcoml
movl
jmp
jmp
nopl
sbb
jns
les
ret
inc
ror
push
pop
mov
dec
cld
mov
movsb
or
daa
cltd
aam
sub
inc
xchg
out
jmp
cmp
ret
fisubrs
mov
insl
push
cmp
int3
clc
xchg
push
push
push
xor
fildl
iret
in
ret
and
in
push
loope
sub
and
jo
jp
inc
aam
loope
dec
push
push
dec
outsl
repnz
or
sub
testb
aaa
in
sti
xchg
and
test
lds
jne
into
in
outsb
xchg
dec
sti
mov
enter
sub
and
adc
test
imulb
out
sbb
ljmp
and
jge
mov
jg
out
add
dec
inc
and
pop
add
in
push
movsl
clc
out
test
call
leave
pop
xor
clc
inc
paddusw
mov
in
mov
test
sub
inc
add
out
je
andb
pop
nop
hlt
sub
mov
inc
and
das
lock
sbb
cmp
js
push
adc
mul
mov
xlat
aaa
sti
inc
std
movsl
aad
inc
adc
and
dec
add
iret
mov
jno
sti
in
aaa
test
clc
xchg
insb
push
pop
pop
mov
jae
movsb
bound
mov
and
pop
js
shll
aad
add
fildll
out
jp
pusha
sub
cmp
in
cmc
sbb
shrl
jae
ja
sti
popf
or
addr16
roll
pop
fistpll
rcr
pusha
shll
xlat
push
cwtl
mov
mov
shlb
popa
pop
test
mov
push
cwtl
sti
xor
pop
adc
cmp
xor
movsb
gs
popf
jbe
int
mov
ja
mov
lock
push
xchg
cmpsl
pop
xchg
test
adc
inc
loope
enter
fcompl
subb
shrb
push
out
push
int
or
inc
jmp
out
fimull
fldl
addr16
cltd
pop
pop
arpl
push
jmp
imul
cmp
sbbl
pop
mov
mov
fdivrs
lea
sbb
cwtl
addr16
push
or
or
push
popa
mull
add
cltd
popa
sub
repz
scas
sar
movsl
dec
mov
jbe
inc
pop
stos
cld
cmpsb
scas
enter
sub
stos
cld
sbb
pop
fisubrs
pop
aaa
sub
adc
movsb
sbb
xchg
push
in
outsl
jle
mov
imul
sub
shrl
imul
or
push
dec
nop
adc
push
adc
cmc
jl
sahf
leave
cmp
adc
sti
mov
frstor
xchg
sub
in
in
cmp
sbb
sub
cld
movb
pop
cwtl
shll
push
cwtl
push
push
out
adc
loopne
mov
into
mov
dec
stos
cltd
jbe
lret
sbb
push
sbb
insb
xchg
push
adc
or
call
mov
mov
add
js
pop
stos
rcll
call
int3
sub
sti
subl
fbld
push
push
xor
stos
repz
mov
add
movsl
inc
fidivrl
push
in
or
add
push
in
jbe
fnstcw
cmpsb
mov
jle
ljmp
push
out
pushf
lea
incb
sub
cmc
repnz
jp
shrb
cmp
push
xchg
pushf
repnz
fistps
fwait
xor
add
xchg
leave
push
cmp
enter
loopne
imul
lock
add
imul
xor
push
call
into
xchg
test
fistps
mov
inc
sbb
inc
pop
adc
add
dec
cmc
or
fwait
pop
xchg
shlb
add
fmuls
sub
mov
aas
cli
dec
out
and
inc
cltd
jge
xchg
imul
leave
fwait
mov
repz
adc
imul
out
push
les
jae
test
sbb
fidivl
jmp
mov
btr
idivl
insb
fdivrs
jg
repz
inc
add
repnz
pop
fistps
test
pop
jl
dec
lret
lods
sbb
cltd
inc
sbb
dec
inc
outsl
sub
dec
inc
and
cwtl
and
jb
test
aas
push
add
les
push
ret
xchg
mov
cmp
sti
mov
mov
imul
test
fdivl
dec
cmpsb
enter
lods
leave
mov
dec
mov
jo
xchg
andl
inc
sahf
stos
push
pop
sub
push
jl
xchg
in
dec
aaa
and
or
lret
lret
xchg
add
aad
ret
or
mov
out
sub
jg
aaa
mov
out
xchg
pop
outsb
in
and
call
fwait
mov
inc
aam
pop
sbb
mov
and
int
jge
pop
lret
lret
sbb
lahf
push
add
lahf
mov
jp
jae
jo
insl
adc
popa
jmp
scas
inc
jg
aaa
sbb
sub
adc
daa
pop
pop
jp
popl
testb
mov
cltd
lahf
xchg
bound
and
adc
lahf
mov
dec
or
add
pop
xchg
les
push
sar
xor
mov
lods
jo
jge
es
pop
rorb
push
stos
mov
push
xor
in
sbb
sahf
inc
or
mov
jne
jge
add
sbbb
add
inc
cmp
nop
mov
adc
mov
dec
add
mov
mov
in
or
or
xchg
push
sahf
in
cmp
or
mov
into
decb
ljmp
pop
push
iret
rcrl
test
mulb
fsubp
repnz
cmp
xchg
repnz
mov
cmc
mov
aaa
xlat
mov
xor
clc
mov
pop
jge
shlb
gs
jae
sbb
inc
hlt
xor
rcrb
clc
fists
pop
imul
xchg
pop
pop
cmp
fadds
cmpsb
mov
incb
add
add
in
cwtl
sarl
mov
jl
push
push
fcmove
push
or
loope
std
mov
lods
hlt
or
push
push
adc
shrb
fwait
lret
outsl
push
or
fisttpll
adc
cs
fcoms
sub
adcl
dec
and
or
call
mov
sbb
push
aaa
pusha
dec
dec
outsl
adc
lods
ret
into
gs
lret
std
sub
xor
sbb
cwtl
in
movsb
jno
adc
scas
or
addr16
aad
dec
aam
sti
push
cmpsl
mov
daa
and
adc
jmp
xor
rcr
or
leave
scas
rcrb
loope
xchg
movsb
mov
adc
dec
std
sbb
pop
jne
call
add
pop
arpl
mov
push
and
ds
xor
push
int
das
insl
into
fcoml
out
xchg
mov
nop
push
mov
mov
ljmp
in
xchg
xchg
in
outsl
mov
jne
daa
pop
aam
add
mov
int
mov
inc
iret
mov
jge
lods
or
repz
aam
cld
movsb
push
and
pop
sbb
xchg
add
fldcw
xchg
adc
ret
bound
sbb
test
in
sub
enter
sub
imul
xorl
popa
das
xor
lret
mov
mov
xchg
cmp
mov
jae
dec
stos
add
sub
push
mov
pop
cmp
cmovb
jae
std
repz
mov
jle
add
adc
add
jne
ret
pop
inc
test
add
addb
mov
icebp
roll
push
nop
in
call
leave
xchg
cmpsb
sbb
shr
and
test
fistpll
lds
or
jmp
inc
push
push
xchg
or
xchg
lea
lods
popa
xor
ja
lods
mov
sahf
into
fs
jl
outsb
lcall
mov
jno
cwtl
or
xor
inc
dec
add
push
mov
jmp
xor
jg
fimull
fwait
scas
add
sbb
xor
mov
push
test
inc
sub
adc
dec
xor
jp
push
pop
add
jge
cmpsb
xchg
mov
adc
lcall
inc
insl
jb
xor
push
daa
shl
push
pop
xchg
mov
and
orb
cmp
negl
testl
cli
xchg
xchg
inc
pop
xor
sub
jl
sub
jecxz
dec
pop
je
mov
jnp
jle
hlt
jmp
aaa
push
pop
out
fisubrs
loopne
mov
xor
sbb
xor
pop
mov
add
mov
mov
mov
dec
fstp
adc
movsb
pop
add
or
stos
out
cmpb
inc
int3
push
inc
push
frstor
and
test
lret
fwait
mov
jne
outsb
add
mov
imulb
sbb
lahf
fsubrs
push
cmp
xchg
dec
add
mov
add
daa
imul
jecxz
jge
outsb
adc
adc
dec
in
push
rcr
xor
sbb
and
pop
outsl
dec
or
test
xor
shrl
or
mov
nop
mov
push
out
out
or
imul
aad
jb
mov
fwait
ret
in
pop
inc
out
or
inc
jb
test
add
adc
cmp
jecxz
xor
rep
loopne
mov
jb
cli
outsb
icebp
jecxz
aas
or
enter
pop
test
mov
push
cmc
shll
xchg
jns
xlat
mov
add
xchg
out
fs
mov
pop
adc
fldl
fsubl
fisttpl
fisttps
mov
aam
das
shrl
int3
xor
sbb
cmpsl
mov
push
push
fwait
insb
mov
jno
lcall
outsb
sti
mov
jb
jp
mov
inc
rcrb
or
xchg
out
add
clc
data16
mov
mov
or
mov
bound
mov
sbb
ljmp
push
lcall
and
pop
or
popf
imul
test
pop
inc
scas
add
in
inc
js
mov
mov
adc
stos
cmpb
lahf
add
fidivs
cmp
inc
leave
repz
fadds
xchg
cli
cld
sahf
dec
pop
adc
ljmp
or
mov
xchg
or
mov
mov
push
mov
mov
sbb
cmp
adc
movsl
and
je
xchg
xor
and
inc
add
dec
push
jmp
iret
js
aad
xlat
sbb
cltd
add
mov
lret
stos
mov
imull
dec
int
movsb
inc
es
xchg
cmc
cs
lret
push
pop
pusha
dec
sbb
cltd
stos
mov
mov
cmp
aad
iret
add
scas
pushf
xor
sbb
pop
sub
xchg
les
jns
mov
imul
loop
push
out
nop
pop
ja
test
mov
push
cld
xor
mov
pop
shll
je
popf
and
mov
mov
fs
inc
hlt
dec
add
cmpsb
cs
and
insl
mov
sub
in
sahf
shlb
adc
sub
push
push
addr16
push
gs
int3
mov
mov
sbb
jp
cmpsl
icebp
inc
mov
loop
push
loope
pop
xor
xchg
mov
mov
pop
mov
mov
rcrl
jl
inc
movaps
daa
mov
das
sahf
mov
les
and
sti
nop
pop
or
ret
out
and
sahf
pop
jnp
xchg
movsb
sub
mov
dec
cmp
fidivl
dec
inc
jecxz
mov
jmp
xchg
mov
outsl
stos
movsl
lock
push
push
add
mov
andl
ljmp
cmp
sahf
aaa
sub
lret
jge
add
mov
adc
outsl
mov
in
adc
scas
adc
out
lds
les
adc
pop
ret
mov
mov
jg
push
inc
mov
cmp
and
arpl
xor
loop
jecxz
inc
jne
push
pop
push
pusha
jo
repnz
pop
sbb
mov
or
adc
mov
push
into
add
pop
add
and
cmpl
pop
mov
jo
or
mov
dec
outsb
leave
adc
sbb
js
inc
subps
call
popf
cli
imulb
mov
xchg
pop
mov
dec
mov
clc
pop
mov
push
jp
mov
xor
movsl
popa
mov
cmp
es
push
nop
pop
pop
mov
jecxz
cmpsl
std
pop
push
mov
ja
xor
mov
cmpsb
lahf
pop
cs
mov
pusha
and
inc
daa
jle
test
xchg
cmc
inc
mov
pop
jl
pusha
lock
addr16
pop
pop
jno
lock
push
push
inc
shr
push
loopne
sbb
scas
jb
cwtl
lahf
lahf
test
rorl
and
mov
inc
and
pop
jmp
or
shl
or
jge
sbb
iret
loopne
in
mov
mov
ds
sbb
lods
mov
ret
sub
xor
jecxz
dec
pop
test
mov
jo
mov
fdivl
dec
add
pusha
dec
xchg
inc
enter
shl
addr16
push
fisttpll
sbb
mov
sub
testb
lods
scas
inc
jle
pusha
mov
fcmovnbe
dec
cmp
movsl
and
mov
sub
cmp
jno
fildll
ss
lock
div
xor
adc
addb
cli
sub
mov
pop
pop
pshufw
cmp
mov
aam
and
das
adc
fimull
xor
jmp
inc
add
xor
inc
jmp
test
imul
mov
outsb
fst
fisubrs
xor
inc
insb
popf
fcomps
das
adc
rcrl
test
mov
scas
ds
xor
nop
mov
repnz
cmp
std
in
jecxz
ljmp
add
inc
leave
lahf
clc
sub
stc
f2xm1
out
jae
dec
push
pop
cmp
js
imul
cwtl
imul
test
jno
xor
mov
in
cmp
in
adc
xlat
and
fwait
sbb
cmpsl
add
add
cld
dec
mov
inc
mov
mov
xchg
es
es
adc
xor
jle
push
mov
xorb
imul
arpl
cmp
lock
jb
insl
mov
inc
mov
adc
shlb
cmp
inc
int
into
data16
xor
sarb
adc
imul
mov
adc
adc
je
or
shll
js
jo
cmc
mov
sub
xchg
mov
inc
jae
xor
in
ja
test
inc
rclb
add
loopne
pop
inc
xor
and
fwait
leave
sahf
xchg
sti
push
lea
fistpll
pop
xchg
jl
fsubrs
leave
pop
jmp
push
stos
pop
fcmovu
loopne
das
rcrb
stos
test
or
add
mov
clc
pop
fcmovnu
mov
inc
movsl
mov
xor
mov
or
rclb
sbb
in
dec
rcr
sub
cmovp
jp
sub
in
lods
mov
sbb
push
mov
jb
mov
or
sub
inc
aaa
xchg
stos
and
and
ret
mov
sbb
xor
mov
imul
push
arpl
add
stc
scas
mov
mov
sub
dec
mov
out
lds
mov
movsl
xor
mov
push
sbb
jns
xchg
daa
ss
mov
jg
stc
in
stos
pop
int
rcr
pop
pop
aaa
gs
lods
movsl
fistps
rolb
shl
add
in
cs
xchg
pop
cs
in
mov
arpl
and
or
and
jne
rcrb
aaa
out
movsl
test
cmc
shrd
xchg
jno
insl
cwtl
jge
ds
or
rorl
xchg
xor
inc
mov
pop
push
xor
dec
mov
and
fsubs
pop
ror
rcr
cmp
or
into
or
dec
stc
inc
ds
aam
add
cltd
arpl
mov
xchg
lds
dec
icebp
xor
and
sbb
pop
or
push
mov
jmp
cmp
outsb
movsl
push
test
inc
xchg
add
mov
pop
std
mov
lods
add
pop
sub
filds
fwait
ljmp
lds
ss
es
data16
adc
mov
aaa
inc
mov
mov
pop
std
insl
push
mov
mov
fisubrs
sahf
push
mov
shlb
loope
cs
mov
lods
shll
cli
test
and
mov
outsl
jg
pop
cmp
ficoms
arpl
xor
xor
jae
cs
mov
push
push
mov
mov
push
repz
dec
adc
decb
std
stos
jo
or
loopne
ja
mov
mov
bound
or
and
add
arpl
lds
or
bound
lods
pop
lret
pop
mov
dec
cmpsb
repnz
push
push
dec
sbbb
jne
mov
or
jbe
bound
push
lahf
std
popw
fwait
mov
icebp
ret
inc
xor
mov
sub
push
ret
and
rcl
mov
mov
mov
loope
loope
mov
cli
mov
icebp
inc
pop
push
xchg
xchg
sbb
sub
das
and
aad
mov
ds
sub
and
add
mov
sub
inc
add
inc
test
pop
fcoms
into
outsb
int
les
pop
inc
xor
mov
sbb
mov
jecxz
cmp
cli
fldl
fisttpl
scas
imul
push
loope
in
cmpsl
lahf
push
push
rcll
stc
or
repz
or
sbb
push
jne
rcrl
xchg
jg
hlt
mov
mov
movsb
sbb
lret
xchg
xchg
push
js
cltd
adc
test
cmp
loopne
mov
pop
dec
jb
fisubl
adc
fistpll
sbb
aam
or
inc
stos
pop
xor
jp
cwtl
jb
divb
mov
daa
mov
faddl
mov
jnp
inc
and
iret
pop
cld
mov
mov
mov
fisubl
mov
mov
cmpsl
mov
sub
scas
sub
xor
push
iret
orb
sbb
in
mov
jp
mov
mov
xchg
je
int3
cmc
dec
sbb
sbb
rorl
xor
sahf
mov
adc
pop
cmpl
loopne
loopne
pop
adcl
bound
dec
push
lods
push
dec
mov
js
sub
fwait
cmp
inc
in
pop
ret
push
iret
in
sub
ret
mov
test
hlt
push
fdivl
sbb
test
scas
test
mov
jecxz
fistps
push
mov
scas
mov
loop
aad
mov
mov
out
paddsw
xor
mov
cmpsb
das
jmp
or
mov
mov
and
add
jmp
push
pop
mov
cmpsb
scas
pop
sbb
cmp
int3
cmpsb
pop
jmp
sub
dec
dec
dec
andl
or
xor
pop
movsl
push
add
sub
roll
mov
stos
test
add
sub
add
jno
sbb
cmpsb
jmp
orb
ret
pop
inc
inc
fcompl
sarl
adc
mov
inc
inc
test
add
in
les
arpl
aaa
loopne
mov
bswap
lcall
xor
and
inc
test
jne
fdivrl
imul
repnz
mov
sbb
lock
xorl
push
pop
daa
lock
dec
jae
mov
sbb
insl
adc
mov
repz
xchg
push
clc
in
lea
nop
xor
lret
push
or
xchg
enter
xchg
inc
pop
arpl
aas
cwtl
cld
cmp
and
inc
stos
in
jo
pop
shlb
adc
inc
cmp
inc
push
bound
dec
xchg
inc
or
mov
pop
insl
int3
mov
iret
push
imul
mov
xchg
and
out
test
mov
mov
mov
aaa
lock
xor
cwtl
test
into
loope
add
bound
pop
jl
sbb
cmovno
adc
push
aam
movsb
cmp
mov
shr
fdivr
mov
mov
out
insb
cmc
aas
push
iret
cmpsl
cmpl
into
or
add
jl
xchg
push
out
aad
pop
jnp
sbb
pop
popa
mov
or
std
aas
out
stos
iret
mov
out
bnd
push
mov
sub
jge
loopne
gs
andb
enter
jnp
into
insb
pop
jmp
cs
mov
lcall
xchg
sahf
loopne
das
mov
sub
sbb
push
adc
leave
push
add
out
aam
in
jge
fimull
into
mov
xor
into
dec
jl
lods
outsl
outsb
sub
lahf
inc
or
xor
rorb
call
leave
repnz
xchg
mov
and
aad
pop
sbb
icebp
sahf
dec
popa
call
lret
mov
pop
sbb
push
jb
mov
mov
mov
gs
nop
jge
push
push
cltd
out
lock
xchg
dec
or
xor
mov
lcall
movsb
insb
sbb
and
cmp
xor
jmp
cli
jp
push
lahf
adc
ljmp
add
test
xchg
jb
mov
daa
dec
int3
test
adc
xchg
cld
loop
stos
mov
dec
mov
add
inc
inc
cs
adc
fs
xchg
ret
jge
dec
test
test
shr
divl
cmp
mov
push
jns
sub
loop
jge
jp
adcb
jg
mov
jp
sti
out
aas
cwtl
sub
pop
push
add
std
mov
push
cmp
sbb
out
mov
adc
call
addl
mov
sub
scas
repnz
lods
pop
xchg
sbb
leave
and
fsub
adc
jecxz
push
jnp
mov
jbe
addr16
adc
dec
lods
ret
hlt
rorl
ret
push
int
cmpsl
mov
divl
xchg
mov
mov
pop
xor
jno
jnp
pop
sub
mov
and
in
popa
jo
popa
xchg
movsb
mov
ss
sub
ret
repz
stos
out
and
fidivrs
or
inc
comiss
lds
cmpsl
bound
adc
lret
pop
xchg
pop
orl
jbe
push
nop
cltd
pop
aam
data16
stos
adc
ds
sub
gs
pop
lock
cmpsb
pop
jae
imul
jnp
and
xchg
sub
jecxz
call
movsl
lahf
call
push
iret
inc
test
adc
cmp
stos
rcll
sahf
lss
int
fsubrl
add
sbb
cld
jmp
pop
push
pop
cwtl
cld
dec
ja
hlt
mov
pop
shl
xor
hlt
add
jp
std
jns
mov
int3
sub
call
mov
push
push
data16
jae
push
mov
dec
stos
adc
test
lret
js
stos
ljmp
fnstsw
xor
stos
dec
push
mov
push
insl
jmp
out
inc
ror
outsb
cmp
jne
jno
hlt
enter
test
iret
xchg
unpckhps
pusha
sbb
data16
stos
inc
ror
mov
or
pop
icebp
adc
cmp
mov
xor
repnz
mov
aaa
ljmp
xchg
mov
jl
loope
ret
adc
fcom
jmp
push
imul
lret
lods
push
pop
ss
pop
imul
rolb
aas
test
push
andl
sarl
imul
pop
mov
sbb
lcall
mov
mov
lcall
mov
jae
adc
inc
arpl
xchg
mov
add
popf
lret
lock
xchg
aaa
jg
cmp
jp
jle
nop
pop
cmc
popa
or
add
cmp
lret
das
fnstsw
pusha
andl
sbb
rclb
add
mov
leave
mov
jp
and
fs
mov
pusha
sbb
sbbb
popf
sahf
cld
cli
sbb
stc
fcompl
adc
scas
and
outsl
lea
fnstsw
mov
ret
clc
jno
sbb
icebp
je
inc
cmpsb
lret
stos
xor
sbb
fcom
xchg
in
sub
mov
push
xor
popa
xchg
jne
pop
movsb
pop
pop
lret
inc
in
mov
ljmp
cmp
out
sbb
push
fcomps
pop
fs
movsl
call
push
dec
push
mov
xchg
xchg
fmuls
xor
cmp
add
hlt
push
loope
and
mov
xor
add
push
jecxz
push
cli
or
pop
out
popa
adc
jo
jmp
mov
popa
push
test
inc
push
or
iret
jecxz
dec
sbb
xor
lahf
cmp
lds
sbb
cli
mov
pop
int
jmp
jp
or
pusha
adc
rorb
cmpsl
inc
push
cmp
daa
out
ret
pop
push
out
in
cmp
jns
test
cltd
mov
daa
mov
cmp
sub
cmp
and
mov
push
arpl
push
dec
pop
mov
xchg
jnp
in
repz
aad
ja
jae
leave
mov
cmp
lea
lret
lea
adc
aas
in
outsl
sbb
rorb
sbb
inc
push
nop
dec
loope
push
push
out
adc
and
lods
cmp
mov
cld
push
mov
mov
imul
jae
xchg
fcmovnu
idivl
sarb
xchg
stos
inc
mov
rcrl
xchg
or
inc
lcall
xor
int
cmpsb
cmp
push
add
xor
xor
lcall
scas
mov
xor
push
cwtl
inc
dec
and
pop
rcr
mov
pop
adc
stos
push
into
adc
xchg
mov
in
mov
push
mov
movsl
ds
lcall
imul
and
gs
pusha
inc
lods
and
hlt
sbb
jecxz
sbb
and
enter
xchg
pop
cld
test
decl
loopne
stos
nop
pop
cs
sbb
jp
fs
xchg
inc
ljmp
out
cwtl
repnz
jle
mov
inc
or
and
test
lahf
push
std
add
adc
inc
std
sub
loop
je
or
nop
sbb
js
mov
inc
push
xchg
or
mov
icebp
cmp
mov
jle
stos
dec
jle
fsubrs
int
push
jb
pop
imul
xchg
xchg
xchg
sub
mov
out
cltd
dec
xor
jg
fisubrs
lods
arpl
push
pop
push
add
mov
pop
mov
gs
inc
sbb
cmp
inc
ret
adc
adc
cmpsb
cmp
sbb
aaa
fnsave
jge
divl
adc
aaa
sahf
aas
cmpsb
mov
idiv
or
sbb
daa
pop
stc
mov
add
gs
mov
mov
mov
pop
lea
loope
into
lret
inc
dec
xchg
adc
push
test
push
dec
sbb
xor
inc
xchg
mov
jbe
mov
adc
xlat
inc
inc
or
pop
cmc
mov
aas
mov
xchg
outsb
mov
ljmp
jo
push
ljmp
jmp
scas
es
mov
jl
push
mov
dec
test
dec
mov
cmp
das
dec
push
aaa
lods
lret
stos
pop
sub
clc
shl
js
or
mov
add
out
gs
push
mov
cli
or
repnz
rorb
inc
xchg
mov
in
dec
sub
add
mov
scas
dec
and
cli
cmp
mov
push
mov
aas
adc
xor
or
xchg
movsl
sub
xor
sarb
and
jno
or
orl
xor
xor
cltd
enter
sub
and
pop
add
xchg
jno
out
cmp
insl
push
int3
push
adc
xchg
sbb
xor
sbb
in
stc
arpl
adc
inc
jns
mov
ror
cmpb
idiv
punpcklbw
push
das
adc
aam
lcall
and
fistl
mov
dec
popa
bound
int3
or
into
sub
lret
xor
scas
and
push
push
fs
orl
mov
stos
shll
mov
ljmp
div
mov
push
in
add
int3
loopne
mov
imul
push
add
dec
xchg
or
mov
mov
push
add
sub
leave
es
push
shrd
inc
or
mov
push
test
arpl
std
mov
mov
push
test
or
loopne
push
out
fnsave
inc
cld
sbb
shlb
out
icebp
in
mov
rclb
or
loop
fadds
stos
xor
push
cmp
or
and
mov
mov
push
test
and
push
test
dec
stc
adc
int
arpl
add
mov
ds
call
aam
mov
xchg
ficoml
insl
dec
bound
je
pusha
test
inc
jae
pushf
aas
aam
inc
pop
push
mov
cli
or
cmp
psllq
test
inc
imull
mov
lea
mov
icebp
imul
in
add
push
rcl
add
enter
xor
sbb
pop
inc
in
addr16
shlb
stos
and
stc
mov
inc
pop
add
adc
xchg
jecxz
adc
inc
fwait
add
dec
xchg
testl
mov
mov
mov
enter
int3
or
add
in
loop
pop
test
and
sub
in
push
adc
adc
out
xchg
pop
or
lea
pop
pushf
sub
add
mov
nop
sub
nop
cld
repz
fildll
imul
add
mov
popf
stos
push
cmpl
daa
mov
fadds
rol
xchg
scas
add
mov
pop
xor
mov
inc
sbb
mov
add
dec
and
fwait
insl
leave
xchg
or
aad
or
xor
push
push
fadds
cmp
pop
pop
cmp
push
jge
pop
daa
sub
mov
inc
subl
adc
sbb
mov
ds
mov
loope
push
push
ss
cmp
cli
andl
icebp
cs
frstor
test
scas
popf
sarl
aaa
fidivs
sbb
jno
aam
imul
loopne
xor
dec
push
inc
mov
or
enter
jno
xchg
sbb
xor
mov
pop
fsts
pop
js
xchg
js
dec
pop
cwtl
orb
jb
dec
fsubrl
mov
and
xchg
mov
xchg
sbb
adc
cmp
cmp
push
fsin
fisubrl
sub
or
add
xor
xchg
push
sub
rorl
sub
mov
push
hlt
push
jmp
add
jge
fisttps
lea
adc
lret
ficomps
pop
pop
jecxz
aaa
inc
cld
push
js
mov
movsb
lods
out
lahf
cmp
js
rcll
shl
inc
cmp
stc
aas
jne
and
pop
and
aaa
jo
sbb
in
dec
mov
sti
mov
mov
sub
mov
push
js
cmp
jle
or
jb
cwtl
jp
lods
aas
mov
dec
lcall
ja
add
or
or
loop
outsb
sbb
pop
sahf
andl
mov
scas
insl
add
cmp
xor
mov
adcb
les
repz
sarb
test
sbb
shlb
movsb
or
ds
sahf
lock
add
mov
xchg
clc
subb
jb
jle
scas
push
outsl
dec
test
sahf
scas
lods
test
movsl
push
pop
cmp
and
scas
popa
pusha
popa
push
sub
imul
stos
fnstcw
bound
push
ret
test
test
lret
mov
cmc
pusha
sub
aam
lock
pop
lret
imul
pop
jle
inc
and
insl
das
gs
jnp
leave
lds
js
sti
lds
scas
aas
jnp
sbb
mov
nop
outsl
bnd
adc
pop
mov
out
lods
dec
lcall
subb
and
fld
lcall
daa
aas
xlat
mov
fsubs
insb
es
fidivs
pop
jb
dec
xor
sub
jge
dec
js
sub
fdivs
sahf
in
enter
add
lahf
ljmp
pop
inc
shll
pop
imul
adc
lahf
jnp
jnp
pop
or
fbld
enter
push
cmp
ud2
mov
pop
imul
xchg
mov
sub
fldenv
jg
push
dec
int3
xor
sti
jne
mov
fidivl
jns
or
inc
inc
call
pop
dec
cmpsl
inc
iret
out
es
setle
pop
lods
ljmp
dec
lds
enter
adc
imul
jle
hlt
sub
dec
sbb
mov
jb
mov
insl
das
jnp
ljmp
xchg
push
clc
lahf
stos
mov
hlt
out
inc
mov
fldenv
add
test
cwtl
sbb
sarb
cmp
repnz
fistps
faddl
cmp
cmpsb
ss
cmpsl
cmp
cmp
rcl
xorb
push
jmp
mov
pop
mov
push
pop
rorb
push
or
push
push
shrl
fldcw
push
jns
xchg
mov
in
sbb
hlt
aas
sub
out
dec
test
sub
shlb
pusha
ljmp
xchg
or
imul
jle
sbb
cmp
jmp
pop
mov
push
aaa
mov
test
or
sahf
and
pop
jecxz
adc
xchg
sbb
loopne
sbb
and
pushf
rcrb
bound
out
dec
cmp
mov
aam
rol
sub
sarb
fsts
jnp
aaa
jl
dec
fwait
adc
int
ljmp
push
sbb
jno
lock
adc
insl
and
xor
cmp
sbb
mov
and
int3
out
pop
cmp
push
and
sbb
inc
vpsubw
and
mov
xor
lret
dec
jmp
sti
jg
nopl
mov
in
xor
mov
pop
daa
push
mov
fnstsw
push
sub
jbe
outsl
repnz
enter
int
xchg
cmp
shll
outsb
mov
cmpsb
xchg
add
push
aam
movsl
inc
lret
adc
leave
addr16
jae
repz
inc
les
sbb
int3
sbb
hlt
jns
lcall
cmp
and
fs
loope
fnstcw
inc
je
stos
in
lret
sbbb
pop
js
aas
and
icebp
aaa
aas
movb
push
call
pop
cmc
shrb
inc
push
push
imul
jmp
push
lods
aam
push
lret
fst
neg
cmp
mov
ds
fstpt
test
jle
push
sub
adcb
das
sbb
cmp
lret
push
cmc
cli
js
push
add
add
into
sbb
test
xor
mov
fstl
lahf
repz
jne
daa
and
push
outsl
mov
arpl
les
or
inc
dec
aaa
xor
out
jne
cld
ret
push
dec
pushl
mov
inc
sbb
rclb
fst
dec
pop
jmp
sub
xchg
leave
xchg
cli
and
clc
sub
rol
inc
sbb
push
pop
mov
pop
and
iret
sbb
mov
es
lods
mov
mov
adc
les
push
adc
ja
mov
data16
jmp
mov
xlat
dec
pop
or
lcall
fimuls
cli
stos
xlat
daa
pop
cmp
pop
inc
cmc
push
fdivr
sub
inc
iret
cmp
xor
lock
rorl
popa
sub
or
mov
or
cmp
pushf
xchg
sub
xor
and
movsl
pop
pop
cmp
dec
outsl
push
clc
data16
jns
sub
mov
sbb
dec
in
and
mov
mov
call
push
pushf
sub
jnp
xor
enter
jae
fnstenv
xchg
push
pop
and
inc
mov
adc
movswl
xchg
pop
mov
dec
aam
push
sbb
dec
sub
add
mov
inc
sti
movsb
cltd
scas
jl
popf
int
jb
subl
cwtl
es
add
pop
out
repz
jo
mov
mov
je
in
fisttpl
int
mov
insl
jecxz
push
ds
cwtl
mov
xor
in
sahf
pop
xchg
cmovp
fdivrs
mov
push
push
out
dec
cmc
push
jmp
mov
mov
iret
add
js
mov
dec
xchg
das
testl
mov
shll
out
bound
cmc
rorb
push
xor
adc
xchg
sbb
jo
add
cmp
mov
jne
adc
sbb
push
sti
xchg
addr16
lods
mov
mov
jo
bound
enter
and
pushf
dec
aas
jno
xchg
add
or
sbb
dec
xchg
mov
rclb
aaa
gs
inc
or
jnp
out
pop
insb
xchg
push
stos
aad
fidivs
push
outsl
nop
or
mov
out
xchg
lea
or
pop
pop
jnp
cltd
jp
shlb
inc
fisttpl
xor
sbb
in
lahf
popf
ds
cmp
dec
adc
rorl
dec
cmpsb
jle
push
sbb
shlb
addr16
push
or
enter
push
aad
or
out
pop
stos
push
or
out
cmp
pop
sub
leave
mov
outsb
js,pt
daa
sbb
hlt
aas
inc
ss
push
sti
mov
pop
inc
push
gs
clc
sub
xor
or
orl
xor
aaa
inc
xchg
pop
dec
outsb
stos
dec
adc
add
imul
je
test
pop
xor
sub
pushf
jmp
mov
inc
add
and
imul
jg
scas
out
jp
roll
shlb
mov
test
pop
cmpsb
cmova
push
repnz
repnz
jns
push
and
sar
jmp
int
je
mov
sbb
pop
add
jp
jnp
in
xchg
pop
stos
lret
cmpb
cwtl
out
out
mov
es
adc
and
xor
xchg
and
imul
cmp
sbb
pop
ja
push
cwtl
aas
inc
cli
and
lods
mov
psrlw
ret
rcl
mov
sub
jecxz
pop
scas
push
inc
dec
cmp
frstor
jb
cmpsb
dec
addb
and
or
bound
stc
test
mov
fdivrl
sub
stc
dec
pop
mov
or
sub
or
movsl
ja
sbb
outsb
mov
subb
cmp
xor
fbstp
push
divb
dec
enter
mov
das
lea
or
mov
cmp
lea
inc
subb
test
cmp
in
jnp
mov
cmp
pop
bound
sbb
or
pushf
mov
ljmp
jmp
int3
lods
out
in
cmpsb
movsl
add
and
repnz
sar
add
ljmp
cmc
mov
and
jbe
fisttpl
into
mov
testb
cmp
and
idivl
ljmp
pop
inc
xlat
ficoms
adc
aas
daa
xchg
push
inc
repz
xor
cmp
sub
mov
out
push
jb
jo
inc
andb
adc
xchg
jmp
jl
loop
stc
mov
xor
dec
jae
loopne
clc
subb
cmpsl
push
roll
mov
repnz
xor
iret
pop
inc
and
xchg
push
jle
cmp
clc
and
iret
cmpsl
shrb
fldt
dec
lret
in
das
or
push
push
xor
mov
mov
ret
pop
sub
repz
fldl
subl
ja
push
add
jbe
or
popl
inc
cmc
push
sbb
jo
and
or
adc
loop
mov
mov
inc
scas
test
adc
iret
aam
lcall
and
notb
cmpsl
ret
repz
out
test
aad
insb
dec
xor
mov
xor
push
sub
iret
mov
sti
daa
mov
fcompl
jecxz
sub
jae
outsb
mov
fnstcw
xor
rcr
pop
addl
test
add
jl
nop
push
aam
lds
or
movsl
sbb
cwtl
imul
jp
ljmp
dec
xchg
xchg
jge
adc
lock
jns
test
cmpsl
xor
cmp
sub
cmp
mov
jb
dec
pop
jge
add
lret
fsubrl
xchg
xchg
pop
pusha
ret
mov
xchg
pop
iret
mov
rcl
dec
stos
lahf
dec
and
std
rclb
push
dec
outsb
add
test
mov
scas
mov
or
push
incb
cs
ret
cli
inc
clc
daa
cmp
jmp
int3
test
pop
imulb
pushf
mov
adc
incb
push
data16
or
int3
aam
pop
cs
jae
rol
imulb
mov
jo
les
popf
fimuls
and
cltd
xorb
stos
loopne
ret
and
dec
int3
pop
lahf
rcr
add
jl
aaa
or
mov
mulb
jp
cmp
imul
test
mulb
sub
movsb
sub
stos
in
arpl
push
in
sub
mov
xchg
dec
loope
aad
jge
out
pushf
arpl
xor
cli
stos
iret
addl
mov
push
fsubs
sbbl
pop
dec
cmp
data16
cmp
mov
lock
or
pop
mov
dec
jecxz
out
pop
jbe
into
rcrl
jno
push
inc
jb
aaa
xor
out
xchg
mov
xor
mov
adc
dec
and
sub
mov
rolb
inc
lcall
pop
push
addl
je
dec
add
mov
xchg
jns
inc
or
adc
cmp
enter
push
movsl
stc
adc
ja
pop
enter
sbb
mov
out
jl
ret
daa
jmp
push
inc
mov
mov
mov
aas
xor
cmpsl
cltd
jp
add
sub
mov
cmp
xchg
addr16
dec
and
dec
pop
mov
add
cwtl
ds
push
leave
push
fs
call
mov
inc
push
cmp
hlt
mov
ss
mov
sti
cld
or
mov
and
sahf
fisttpl
lea
add
sahf
repz
dec
cmpsl
stos
ja
roll
and
ja
xchg
shll
push
je
dec
iret
pop
jp
rcrl
cmp
scas
pop
notl
push
mov
cld
jb
fld
jb
pop
xor
cmc
test
sbb
ror
and
jl
iret
sti
test
test
xchg
ljmpw
ror
jo
inc
cmp
mov
or
sub
pop
call
cwtl
sbb
cmp
dec
jg
pop
sbb
enter
adc
stos
mov
xor
push
xor
out
loopne
pop
mov
fistpl
xor
mov
cmpsb
int3
mov
cmp
dec
int
mov
mov
sub
push
aam
push
pop
pop
push
test
sbb
cmp
lock
stos
pop
sbb
sub
pop
push
ss
mov
jns
out
adc
mov
sub
pop
fsubrl
test
fdivs
lock
fldl
out
mov
iret
adcb
test
flds
inc
sbb
add
sbb
xchg
mov
movsl
pop
mov
inc
test
jle
int
popf
std
xchg
ret
jge
mov
iret
pop
lds
aas
jnp
jg
adc
test
and
mov
rorl
dec
xor
dec
outsb
sbb
imul
sub
mov
pop
imul
mov
pop
or
jg
xchg
inc
mov
loop
pop
inc
pop
mov
divps
lods
cmpsl
insb
sbb
cwtl
mov
jne
mov
in
imul
mov
jne
lahf
cwtl
fisttps
call
aad
cmp
repnz
or
movsb
mov
sbb
cmp
and
daa
mov
in
fidivrl
cld
xchg
stos
cmpsl
xchg
xor
lods
cs
daa
xchg
test
inc
lods
mov
enter
add
ljmp
or
add
cmp
pop
inc
pusha
xchg
add
nop
xchg
sub
data16
adc
mov
test
jnp
push
pop
and
ficompl
pushf
inc
pop
cmp
test
xchg
fidivrl
dec
repz
fcompl
inc
outsl
shll
mov
mov
xchg
gs
jg
pusha
xor
pusha
lods
orb
int3
xor
stc
dec
inc
mov
mov
jmp
push
jo
sub
cmp
jns
loop
mov
icebp
dec
enter
sub
mov
xor
clc
mov
cmpsl
jno
into
cmp
and
pop
pop
dec
pop
scas
mov
aaa
lods
loop
sbb
fucomi
sub
and
test
xchg
nop
sahf
jecxz
addb
cmp
pop
mov
subl
pop
cvtdq2ps
fadds
cmpsb
cltd
iret
ljmp
xchg
subb
arpl
inc
test
test
sub
jae
jbe
stos
cmp
repz
sub
pop
xchg
dec
clc
mov
fmul
jb
aam
jbe
inc
in
dec
nop
les
orl
jno
sub
cwtl
jnp
push
ret
mov
clc
xchg
push
in
mov
mov
aas
mov
adc
pop
out
mov
jp,pt
pop
adcl
xchg
dec
aaa
sub
sti
inc
ja
xchg
shrl
jne
ficomps
xchg
add
xor
jle
nop
test
inc
fnstcw
xchg
sbb
out
imul
lahf
mov
daa
inc
aas
cmp
loopne
dec
and
inc
testl
xorb
push
mov
scas
in
jne
fldl2e
lock
ljmp
cmpsb
in
mov
aaa
ja
mov
xor
loop
mov
insb
jg
inc
mov
mov
pop
push
aas
lret
or
push
lods
mov
std
adc
shrb
mov
push
mov
dec
push
cli
xor
scas
test
stos
in
pop
dec
ds
adc
das
sahf
sbb
xchg
inc
call
jmp
data16
test
pop
test
or
fists
sub
jecxz
fdivrs
setg
or
push
add
ficompl
xchg
lret
xor
pop
aad
pop
lret
ja
call
push
sub
pop
push
sbb
ljmp
pop
loopne
xor
ss
enter
push
fistl
mov
and
sbb
push
mov
cmc
jmp
add
jns
fcmovne
fistpl
mov
scas
ret
inc
fisubrs
xchg
pop
jp
adc
jp
pop
or
cs
lea
inc
inc
das
repz
repz
enter
je
movsb
push
xchg
mov
push
outsb
sub
movb
push
dec
push
bound
jne
xchg
cmp
loop
adc
cmpsb
and
in
aas
push
dec
xor
shr
or
leave
aam
test
cmp
sbb
adc
clc
xor
adcb
js
xlat
push
sahf
dec
mov
fwait
or
nop
ret
inc
mov
mov
aaa
sub
or
mov
inc
mov
sub
stc
dec
push
test
movsb
jns
jns
xchg
xchg
adc
xor
flds
imul
mov
cmc
fwait
fwait
scas
in
aad
cmpsb
mov
adc
push
xchg
outsb
cmp
nop
jmp
shl
jle
dec
push
aad
out
clc
and
dec
wbinvd
or
roll
dec
outsl
rolb
sbb
jmp
cld
in
cmc
xor
jl
push
fcoml
pop
aam
ljmp
cmp
and
sbb
fisttpl
out
pop
pop
or
iret
inc
dec
cmp
mov
mov
sbb
addr16
aad
test
imul
inc
int3
push
lcall
or
mov
add
xor
fdivl
sub
mov
icebp
in
stos
stc
sbb
xor
xchg
icebp
mov
sahf
pop
js
movsl
imull
popf
push
push
mov
xor
cmpsb
cltd
clc
xchg
push
adc
popf
jns
jbe
pop
lret
fldt
stc
scas
out
testl
mov
fsubrs
mov
jecxz
cwtl
adc
adc
push
xchg
sbb
inc
push
xchg
jo
cmp
fst
out
dec
data16
stos
addr16
andl
das
jne
aaa
pop
cwtl
pop
mov
data16
jp
ret
mov
push
fiaddl
inc
ret
faddl
mov
repz
andl
lret
pop
fnstcw
das
jno
fisttps
sub
test
mov
aad
adc
pop
push
out
dec
lods
roll
pop
icebp
push
lret
mov
push
jmp
push
pop
mov
es
xchg
les
hlt
xor
dec
imul
xor
xchg
cli
push
ret
sbb
out
add
pop
bound
sub
mov
or
cmp
pop
dec
inc
dec
outsb
sub
sub
jge
cmp
outsl
or
inc
jecxz
xchg
cmpsb
add
xor
mov
xor
scas
outsb
adc
sub
inc
add
dec
rcrb
loope
xchg
sahf
jo
test
sti
adc
or
rorb
popf
mov
jo
mov
jl
addr16
dec
in
pop
aas
jno
iret
out
pop
push
jge
stos
jns
xor
fdivs
out
adcb
outsl
push
cmp
ss
lret
jg
add
clc
lahf
stos
fsts
dec
sbb
dec
cmpsb
sti
scas
inc
push
repz
xchg
outsl
loopne
fwait
stos
pop
out
int3
push
movsl
xchg
stos
outsl
mov
cld
jg
adc
std
ret
gs
notl
loop
sub
hlt
dec
or
imul
xor
mov
add
xor
incl
gs
icebp
pusha
mov
pop
insb
fdivrs
mov
pop
in
stc
insb
out
out
push
xchg
je
cmp
pop
std
jl
stos
xchg
cs
inc
mov
out
jp
sub
sarl
xchg
outsl
add
imul
div
pop
in
das
sbb
sub
mov
add
scas
scas
or
mov
xor
push
add
cmp
push
adc
mov
rclb
call
inc
pop
jmp
insl
jb
popf
or
bound
xor
pop
adc
std
xor
cmpsb
mov
pop
mov
movsb
inc
jns
fimuls
scas
hlt
repnz
adc
and
pop
fstpt
add
aas
xlat
mov
push
mov
push
jge
hlt
and
xchg
cmp
mov
jge
push
cltd
jo
lret
lock
sbb
aas
sub
pop
xchg
ds
jge
fbstp
jo
push
sub
xchg
push
fcompl
int3
dec
sbb
or
and
mov
xor
push
push
push
pop
pop
and
dec
dec
mov
mov
outsl
stc
ljmp
xchg
add
ljmp
aad
orl
divb
mov
or
mov
fbstp
in
sub
mov
fwait
cld
out
push
popa
xor
or
xor
out
shl
ds
outsl
rclb
test
push
lahf
and
pusha
mov
stos
out
sub
push
sbb
aas
sbbl
mov
int
dec
push
mov
cmp
test
clc
iret
fcompl
add
xor
in
sub
xchg
push
and
out
arpl
mov
mov
jp
add
addr16
and
nop
scas
mov
jge
inc
push
movsb
inc
fwait
cmp
xor
inc
jo
mov
push
pop
adc
enter
int
nop
pop
jecxz
jo
push
sbbl
hlt
outsb
and
scas
loop
sub
int3
loope
xchg
push
adc
movsb
sub
sub
mov
sbb
add
xor
fldl
pop
jb
jp
cmp
jbe
insl
dec
jecxz
negl
sbb
fwait
jnp
adc
xor
addr16
sub
add
mov
and
lds
xchg
pop
dec
lock
jecxz
cmpsl
add
shrl
push
movntps
xchg
cmpsb
shr
xchg
sub
jecxz
out
call
inc
insl
loop
jge
inc
js
movsl
cmp
clc
dec
insl
iret
or
and
daa
dec
call
daa
jnp
repz
pop
jns
fldt
push
repnz
inc
neg
enter
mov
cmpsl
stos
push
fiaddl
sahf
or
addl
cmp
in
sti
call
mov
and
pusha
fwait
or
mov
xor
xchg
loope
loope
and
pushl
in
out
push
inc
pushaw
outsb
pop
inc
push
add
and
hlt
jmp
inc
and
mov
or
jp
dec
or
xor
add
cmp
jp
push
inc
or
das
jne
inc
mov
xor
leave
push
or
lcall
fs
mov
mov
mov
popa
jne
fsubrl
sbb
cmp
mov
mov
sahf
inc
std
ljmp
cltd
cmp
push
or
jae
shlb
mov
stos
dec
cld
cmp
sti
cmc
pop
add
test
fstl
scas
mov
xor
xchg
mov
ss
xor
out
leave
and
and
cmp
push
lret
inc
jecxz
iret
stos
adc
gs
lcall
ljmp
bound
popf
cmp
push
in
ljmp
sub
cld
outsb
mov
xor
cmp
out
mov
and
pop
jge
cmc
out
push
sbb
xchg
xor
add
fdivrl
push
pop
jnp
sbb
leave
and
jne
push
push
int
fstpt
mov
testb
test
mov
imul
cmpsb
xorl
mov
mov
push
jg
loopne
dec
sbb
pop
cld
popf
inc
push
pop
mov
mov
and
push
sti
push
xor
xor
jbe
stos
arpl
inc
js
lds
push
inc
loopne
mov
pusha
popf
xchg
cmp
adc
fldcw
fidivrs
in
pop
or
dec
pop
mov
scas
mov
sbb
cmp
insl
push
nop
push
xchg
jb
and
pusha
in
sub
xchg
or
es
mov
cli
sbb
and
pop
xor
dec
sub
imul
bound
call
sub
push
dec
sbb
stos
or
mov
jle
sarb
adcl
vpslld
adc
lds
loope
mov
or
mov
sbb
add
adc
pop
inc
jae
cmp
sbb
mov
fistpll
push
movsl
mov
repnz
xchg
rcll
aas
loope
leave
cmpsb
int
clc
idivb
mov
xchg
leave
pushf
jae
movsb
ss
out
dec
add
nop
lret
lahf
mov
cld
or
push
adc
cmpl
or
in
mov
dec
ja
sbb
pop
cmpl
add
xchg
xor
mov
and
jno
cmpsl
fsub
lret
cmpsb
hlt
out
mov
mov
mov
cltd
xor
pusha
nop
movsb
jb
test
filds
or
sarl
rcll
mov
lods
push
cmp
mov
mov
loop
inc
js
in
jl
movsb
insl
outsl
inc
in
sub
push
xor
jns
jmp
ret
mov
out
movsl
std
sbb
ror
pop
into
push
das
mov
cmpsl
enter
roll
js
arpl
xchg
sbb
fucomp
clc
fbld
inc
or
mov
nop
mov
pop
lcall
cmp
cs
leave
out
jmp
xlat
insb
notb
pop
mov
jnp
pop
dec
mov
jg
rorb
cltd
mov
dec
or
bound
fidivl
in
mov
adc
jge
popa
inc
movsb
mov
fstps
jg
int3
mov
std
adc
lret
cmpsb
dec
jo
add
mov
push
pop
dec
push
out
jle
and
shlb
call
push
popf
push
cmpsl
fnstcw
idivb
push
js
mov
sbb
mov
roll
shlb
loop
inc
mov
sbb
lods
adc
outsb
adc
insl
int
aaa
je
test
ss
fwait
imul
clc
cli
push
sub
in
scas
dec
xchg
out
loop
jnp
fs
sbb
xor
mov
or
subl
lock
mov
mov
inc
sub
iret
mov
adc
test
insb
es
xchg
int
daa
imul
sbb
dec
outsl
jge
fldenv
dec
pop
push
addr16
imul
repz
cmp
imul
cmc
pop
call
xrelease
cmp
lret
sti
insb
outsb
jle
outsl
int3
mov
adc
popa
adc
dec
lods
push
mov
add
push
rcr
enter
mov
addr16
out
xchg
sub
xor
ret
mov
and
fists
call
es
push
inc
repnz
jo
cwtd
xor
push
out
jne
sbbb
icebp
mov
sub
notl
mov
mov
fidivl
cmp
cwtl
mov
mov
sahf
xor
pop
scas
mov
test
pop
insl
lcall
scas
rcr
adc
sbb
add
sbb
and
mov
pop
inc
push
out
inc
xchg
mov
dec
dec
int
adc
mov
sub
aas
jecxz
cmp
mov
cltd
lea
sbbl
dec
dec
enter
mov
xor
pushf
push
mov
inc
xchg
xchg
in
int
and
rcrl
jnp
aas
and
push
or
insl
or
lahf
jns
lea
mov
jle
mov
push
inc
inc
sbb
and
mov
mov
jo
inc
xchg
push
pop
mov
and
rcrb
jmp
testb
cmp
lret
mov
mov
pop
jo
out
test
sahf
mov
jo
xor
xor
pop
cs
cmp
loop
push
dec
int
aad
bound
mov
inc
sbb
sahf
pop
call
shl
mov
jb
subl
xor
mov
stc
loopne
xor
mov
imul
out
adc
and
or
mov
test
lahf
mov
jbe
lret
adc
lock
inc
shrl
ss
add
xor
into
push
adc
gs
sub
int
pop
sbb
dec
push
pop
sbb
lods
jmp
adc
test
cmpsb
cmp
out
loop
sub
test
dec
int
jle
in
sub
push
divb
idiv
xchg
xlat
in
inc
mov
xor
aaa
jmp
in
push
jle
js
pop
fdivl
and
adc
pop
aas
pop
dec
outsl
jb
or
jns
fs
mov
mov
loope
aas
add
and
mov
loope
lret
ds
stos
mov
cld
adc
loop
mov
add
fdivs
sti
inc
fimull
sarb
lret
lret
popa
stos
ss
add
push
sub
repnz
sti
mov
idivl
adc
imul
pop
enter
mov
push
outsl
cltd
xchg
mov
ficomps
inc
inc
push
hlt
or
sbb
dec
mov
mov
dec
les
xlat
imul
mov
xchg
push
inc
pop
mov
into
and
add
shll
mov
adc
lods
push
int
and
dec
imulb
adc
test
jnp
ljmp
dec
adc
lret
cmp
cmp
mov
cwtl
pop
jnp
mov
into
stc
xchg
imul
sub
lods
dec
loope
sarb
sarb
mov
sbb
fwait
mov
outsl
jge
mov
and
ret
in
mov
fistl
jge
mov
sub
enter
icebp
fstpl
sub
iret
icebp
pop
fwait
xorb
xor
dec
adc
gs
insb
jle
cmpsb
dec
fildl
mov
sub
scas
lret
inc
movsl
rcll
in
push
xchg
mov
mov
sti
enter
out
xchg
and
into
cltd
test
xchg
scas
outsb
std
pop
or
gs
xchg
sub
jg
sub
cmpsb
xchg
stos
ja
sbb
out
mov
test
pop
push
pop
outsb
inc
mov
mov
or
mov
inc
mov
inc
mov
adc
insb
dec
mov
pusha
out
push
adc
pop
mov
in
shll
sbbb
lods
notl
stos
jmp
xchg
cmpb
shlb
mov
fadds
test
mov
int
test
test
nop
int
pop
cmp
push
das
test
push
and
sbb
mov
cltd
add
and
sub
negb
arpl
cmp
mov
fsubr
mov
jmp
mov
push
jae
and
inc
sbb
adc
xchg
test
mov
mov
pop
gs
sahf
aaa
sub
insb
in
jbe
out
ljmp
jbe
mov
ja
lods
fs
cmp
mov
cli
sbb
push
dec
mov
jbe
xchg
pop
aaa
jb
mov
or
xor
imul
test
dec
push
dec
mov
mov
ret
add
jmp
gs
jecxz
jnp
and
lods
outsl
xchg
mov
push
int
pop
add
dec
gs
sub
jge
sub
fs
mov
push
outsb
pop
push
aaa
jb
nop
or
xor
stc
mov
movsl
push
pop
mov
and
adc
dec
popf
dec
popa
mov
pop
mov
shlb
ret
xor
aaa
push
jmp
sbbl
stc
mov
push
popa
jne
add
mov
xor
add
and
sbb
inc
ret
push
pop
adc
sahf
lock
dec
rol
push
jle
push
sbb
rolb
js
mov
mov
daa
pusha
mov
mov
mov
jg
or
add
cld
push
insl
nop
imul
imul
mov
sbb
jmp
or
frndint
fwait
push
roll
sub
jecxz
sti
xchg
dec
test
mov
cmp
pop
push
cmp
repz
sub
fisubs
mov
fistpll
jbe
sti
adc
lret
test
leave
insl
jno
xor
and
cmc
lock
lds
jne
jnp
xor
mov
push
notb
loop
sub
xor
cmpb
pop
movsl
mov
jg,pn
js
sub
enter
lea
dec
push
scas
in
cmp
insb
fisttpll
std
pop
xchg
xchg
sub
mov
incl
sub
pop
fimuls
xor
sbb
stos
jmp
js
or
lock
and
cmp
mov
add
or
fsubrp
nop
sub
mov
sub
push
sbb
mov
pushf
mov
cmpsb
ficoml
stos
imul
cmp
jns
sti
jle
dec
cmpsb
inc
daa
mov
jle
adc
push
sarb
jnp
mov
jmp
je
rol
fwait
outsb
mov
les
push
loopne
and
rcll
xorb
in
mov
sub
push
jbe
cmp
pop
xor
add
daa
cmp
std
test
lret
mov
cmp
add
xor
lds
mov
lret
les
lahf
mov
sub
add
ja
divb
add
popl
mov
hlt
repnz
dec
shrb
cld
push
xchg
sub
fistl
xchg
and
jmp
mov
out
movsl
xor
and
cmp
scas
mov
mov
cmp
clc
xor
stc
sbb
pop
lea
jnp
or
fld
testb
inc
rcrl
rcrl
enter
add
and
lds
mulb
dec
cmp
lods
sbb
mov
repnz
adc
cmp
sub
cmpl
sub
lcall
sub
addr16
adc
aam
and
fmuls
pop
xchg
popf
mov
xchg
push
inc
in
xor
pop
pop
imull
test
mov
fldl
sbb
int3
arpl
cmpsb
adcl
mov
sbb
cltd
pop
mov
daa
and
xchg
mov
arpl
sub
xor
aam
fdivrs
mov
rolb
jo
push
out
stos
mov
and
dec
jecxz
cli
xor
outsl
sbbb
adc
shll
sbb
fcmovnb
dec
sub
or
pop
mov
cmp
fwait
sti
xorb
jl
mov
pop
arpl
cltd
xchg
subl
div
pop
inc
mov
inc
andb
mov
icebp
push
xchg
jmp
gs
sti
pop
notb
es
pop
inc
test
xchg
mov
jbe
lahf
out
aaa
pop
repz
loope
adc
jo
cmp
mov
js
dec
adcb
scas
xchg
sbb
mov
cmp
shlb
fisubs
and
insb
hlt
sahf
or
out
xchg
mov
xor
fcmove
cmp
fisubrs
dec
jne
lret
xchg
decb
jl
or
sbbl
adc
cs
testb
sbb
cmp
xchg
popf
jns
jl
sbb
lods
pushf
pop
cmc
shrl
sub
popa
push
pop
xchg
mov
scas
test
xchg
js
cmc
push
jmp
push
stos
cwtl
iret
lret
or
mov
nop
in
pop
icebp
mov
mov
cmp
or
js
jle
pop
cwtl
pop
jg
rol
das
cli
fistpl
jns
jmp
leave
xchg
pusha
inc
dec
fisubrs
arpl
mov
xchg
repnz
icebp
arpl
ss
into
push
xor
imul
sahf
mov
push
and
pop
in
leave
sub
xchg
enter
xchg
push
xchg
xlat
dec
subl
push
or
sahf
pushf
push
lock
inc
cmc
mov
lcall
mov
ja
andb
pusha
mov
mov
sbb
std
stos
cmpsl
xchg
ficoms
sbb
push
sub
mov
out
pop
fistl
test
mov
les
inc
stos
pop
mov
enter
inc
pop
xchg
les
jne
mov
jl
clc
xchg
lahf
cmc
cmp
pop
rcll
inc
inc
jne
dec
sbb
mov
insl
shrl
lea
push
xor
xor
push
cmp
dec
in
aas
sub
aad
mov
pop
hlt
scas
jecxz
movsb
mov
push
xchg
bound
loop
ror
scas
push
adc
mov
xor
sub
mov
adc
dec
pop
mov
loope
daa
or
icebp
andb
jns
popf
mov
ljmp
mov
xchg
sbb
data16
les
mov
cmpsl
sarb
pushf
lods
test
fnsave
jge
in
call
mov
lods
xchg
int
cld
into
sbb
js
lock
inc
stos
int3
or
jl
pushf
mov
daa
pop
jnp
xchg
dec
insl
jnp
test
push
mov
in
inc
dec
es
test
cmp
dec
mov
popf
mov
inc
sub
lea
cmp
sbb
xor
jle
xor
outsl
mov
pop
negl
push
popa
push
cwtl
insb
notl
and
faddl
scas
clc
in
xchg
cli
shrb
cltd
jo
pop
cld
aaa
jg
xchg
out
push
lret
je
and
mov
jbe
imul
lods
dec
int
jae
aam
xor
and
mov
jo
movsl
lahf
xchg
es
push
out
scas
ds
dec
add
lock
pop
mov
adc
mov
push
ret
out
in
cli
sbb
les
mov
out
imul
aad
push
je
push
jnp
xchg
in
xor
mov
es
and
andl
adc
and
sbb
pop
imulb
test
push
dec
rorb
push
jp
and
or
lods
addr16
popf
pop
pusha
lods
dec
hlt
push
adc
out
fadds
sahf
xchg
idivl
nop
sbb
xchg
hlt
nop
rclb
adc
lods
stos
in
or
mov
jo
es
push
call
dec
adc
pop
mov
or
mov
sbb
js
and
js
push
xchg
pop
shrb
mov
jno
jnp
or
lahf
test
out
aad
pop
cltd
es
pop
rclb
adc
xchg
push
into
or
jae
ljmp
adc
jp
mov
notb
pop
in
sbb
xor
cli
lahf
sbb
loope
clc
arpl
sahf
inc
xor
mov
cmp
dec
push
stos
pop
jbe
pop
jmp
and
dec
xchg
lret
sbb
push
mov
aad
adc
outsb
pop
sbb
test
push
mov
je
dec
jnp
sub
ret
leave
cli
sub
int
push
lahf
js
sahf
inc
leave
jae
jge
loopne
adc
cmp
push
and
pop
int
popa
fidivrs
xchg
dec
popf
mov
jb
aam
into
je
cli
out
data16
pop
jmp
call
pop
push
in
enter
in
call
mov
daa
cltd
ret
iret
js
lods
inc
push
push
xchg
popf
push
xor
xchg
repz
gs
pop
mov
cmp
popl
jbe
push
in
jl
shrb
les
dec
and
out
inc
test
dec
in
jmp
ficomps
sub
lret
or
sarl
cmp
or
sub
push
sar
lds
jne
push
sti
fs
xor
jae
leave
mov
sub
mov
enter
mov
and
movsl
pusha
je
push
lahf
test
gs
sub
shll
pop
pop
jne
pop
fs
add
xlat
mov
outsl
cld
test
push
mov
shlb
and
data16
js
cmp
push
jne
clc
xchg
shll
stos
adc
push
repz
dec
test
xchg
jbe
cli
je
and
aad
in
inc
adc
mov
mov
jae
xchg
in
jl
lods
clc
sub
jo
in
mov
sub
lods
cmp
pusha
sbb
push
mov
enter
mov
shlb
sbb
mov
call
mov
mov
xchg
push
fwait
loopne
fldcw
add
jle
or
jmp
stos
fsubrl
ret
insb
or
mov
inc
mov
dec
or
sbb
out
mov
adc
sub
sub
dec
or
clc
add
push
scas
sub
push
pop
shlb
popf
lahf
push
mov
shll
daa
cmp
fstpl
jecxz
cwtl
push
enter
add
xor
jp
js
push
stc
ret
pop
push
fdivrl
push
fstpt
push
pop
xchg
sahf
sahf
sahf
cltd
xchg
stc
in
xlat
inc
fsubrs
push
test
popa
imul
jae
mov
out
in
shl
push
sarb
xor
mov
clc
subb
push
sahf
cmpl
leave
das
lahf
cmp
shlb
push
mov
mov
fimull
popa
loop
inc
daa
repz
shrl
adc
test
sub
movsb
xor
push
push
pop
mov
scas
fsubrs
and
pop
jbe
inc
sbb
stc
aam
addr16
jo
ret
pop
inc
pop
sub
lods
pop
push
mov
lret
inc
mov
mov
mov
stos
sbb
jb
mov
in
dec
lahf
pusha
repnz
lret
sbb
xchg
stc
dec
mov
dec
push
cmpsl
iret
iret
inc
jns
cmp
adc
mov
lret
arpl
sbb
xchg
mov
daa
das
push
sahf
sti
loop
push
jnp
pop
inc
xchg
test
mov
imul
push
push
shl
lahf
push
inc
jae
add
and
inc
mov
and
arpl
pop
add
lds
and
cmp
out
in
nop
rclb
adc
ret
mov
in
add
pushf
lea
negl
xor
das
pop
scas
pop
push
mov
loop
hlt
loopne
setbe
pusha
add
push
mov
fs
and
mov
lea
icebp
push
pop
adc
cmp
fcomps
in
mov
dec
out
movsl
inc
or
jecxz
inc
jne
lods
fwait
iret
xchg
ret
and
inc
fcoml
les
das
sti
add
mov
xor
or
mov
repnz
in
daa
jae
sub
pop
enter
pop
mov
adc
repnz
xchg
or
jnp
cmp
and
subb
jle
imul
lods
sub
cmp
fstpl
loope
lds
stc
dec
out
adc
test
jo
imul
leave
loop
inc
or
xchg
lea
sbb
inc
stos
out
push
in
int
xchg
xchg
lock
push
daa
outsb
dec
cmc
enter
or
lcall
push
repz
hlt
insl
movsb
add
out
adc
addr16
and
mov
and
ficomps
adc
ret
mov
ret
sbb
push
xor
fisubs
fwait
mov
fucomip
inc
daa
fucomp
mov
addr16
pop
push
mov
leave
fistps
rcrb
mov
mov
xlat
fisttpl
fcmovnb
je
xorl
rcl
push
aad
test
pusha
cmp
mov
push
out
dec
jle
cmc
push
jmp
aaa
adc
jp
into
popf
cmp
out
shrl
xlat
pop
repz
push
icebp
mov
fstpl
pop
loope
xor
adc
in
sbb
mov
adc
inc
inc
popa
xchg
add
mov
xlat
loopne
inc
xchg
daa
pop
push
std
shrb
dec
sub
pushl
push
jbe
sbb
scas
push
jg
dec
mov
cli
and
cmc
rcrb
sub
sub
dec
xchg
out
clc
movl
fistpl
inc
xchg
pop
test
sub
fsubrs
pop
xlat
into
and
shrb
out
jle
mov
and
pop
stc
int
in
jmp
stos
pop
jge
xchg
or
pop
test
mov
push
and
int3
mov
and
lahf
jge
adc
xor
or
inc
pop
inc
inc
and
scas
lock
cmp
pop
stc
add
mov
out
das
mov
sub
inc
mov
fadds
xorb
push
dec
jmp
out
push
sahf
sbb
movsb
lret
adc
pop
jl
je
xchg
adc
enter
sub
jl
jae
jg
lcall
mov
dec
pop
jne
mov
and
jb
pop
scas
andl
mov
loop
or
loopne
dec
mov
mov
inc
pop
lcall
jle
out
inc
dec
into
call
xorl
push
int3
ret
nop
div
lret
jl
out
dec
xchg
lcall
inc
jle
cmp
cli
popa
outsl
test
pop
jb
sub
std
mov
mov
mov
addb
ret
aaa
loope
inc
iret
fisubl
dec
out
test
sub
sub
mov
cmc
or
xchg
lods
adc
pop
stos
adc
mov
rolb
rorb
xor
mov
xor
pop
xchg
mov
std
dec
mov
hlt
inc
mov
notb
insb
sub
pop
jb
xlat
inc
dec
lar
aam
inc
setnp
leave
cmpsb
pop
lea
fsubr
or
dec
out
in
lret
and
sti
adc
dec
mov
imul
or
int3
sub
cwtl
mov
mov
cmp
push
or
jno
or
mov
mov
pushf
jns
addr16
xor
fsubl
dec
mov
sbb
fs
nop
pushf
dec
cld
xchg
or
addr16
shlb
xor
xor
cmp
ja
sub
subl
shrb
mov
xchg
std
pop
inc
out
pop
mov
push
addr16
or
sar
lock
popa
xchg
add
addr16
xchg
les
inc
mull
sub
or
xchg
ret
loope
jge
jg
cmp
in
push
aad
pop
xor
push
or
pop
sub
inc
shrb
pop
sub
mov
jmp
js
outsb
adc
lahf
cld
pop
bound
imul
loop
stos
xor
add
lahf
out
shlb
add
dec
jmp
in
jno
adc
and
sahf
xchg
and
sarl
and
sub
insb
adcl
cld
ror
jne
fwait
pop
iret
icebp
cltd
inc
mov
ret
sti
lret
push
push
test
xor
xchg
xchg
cmp
lds
pop
lods
and
xchg
cld
adc
outsb
cmp
fcoml
mov
testl
out
mov
push
push
xor
out
dec
push
pop
js
push
push
mov
xchg
push
adc
xor
cld
mull
sub
cld
jbe
sbbl
aas
xchg
fwait
dec
cmpsl
add
and
pop
movsb
loop
mov
aaa
fwait
push
add
sbbb
adc
mov
fcomps
pop
jl
dec
lods
insb
int
dec
inc
test
stos
add
pushf
leave
inc
xchg
dec
dec
adc
sbb
push
imul
loopne
stos
rcrl
xchg
jno
sub
inc
mov
mov
and
imul
add
inc
dec
lahf
in
xor
xor
push
inc
xor
xchg
imul
addr16
scas
mov
aad
pop
cmpsl
pop
lock
add
adc
loope
stos
mov
push
aaa
in
int3
mov
xor
sahf
inc
jno
cmp
xchg
pop
jl
push
jge
incl
pop
daa
popf
jb
pop
jae
outsl
ds
outsl
adc
in
xchg
xor
mov
push
in
pop
push
ja
cwtl
cmpsb
inc
or
mov
xchg
xchg
lret
sarl
inc
pop
pop
lahf
jecxz
push
xchg
inc
or
add
xchg
fnstsw
or
fcom
scas
sub
xlat
adc
in
pop
xchg
test
movsb
fstps
pop
in
sub
fisttpll
repz
rorl
adc
fmull
in
add
pop
cmp
in
adc
adc
pushf
fnstenv
divl
scas
mov
push
dec
jb
ja
dec
ljmp
xor
es
adc
pushf
cmp
int3
icebp
cmp
std
les
cltd
out
nop
mov
loop
or
sahf
and
lock
in
ljmp
mov
lfs
mov
icebp
sub
jns
out
lahf
popf
fadd
sti
popf
push
jnp
subb
cmp
pop
xchg
mov
hlt
shll
xlat
in
sahf
out
mov
adc
inc
dec
sbb
pusha
inc
jnp
rclb
cltd
mov
inc
inc
sub
jnp
lock
dec
cs
ret
fcmovnbe
or
xchg
jmp
jmp
mov
sbb
scas
and
mov
push
inc
cmp
mov
xchg
movhps
sbbb
or
inc
shl
and
adc
jo
loopne
push
adc
in
lods
jp
pushf
xchg
and
imul
repnz
inc
cmp
adc
adc
add
jae
and
mov
jmp
and
in
movsl
mov
out
mov
sti
testl
jle
xchg
outsl
pop
xchg
mov
test
add
fwait
loope
subl
jb
inc
xchg
iret
ja
les
adc
mov
imul
outsl
or
jns
inc
jp
pop
pop
insl
pop
pop
test
sbb
jb
in
fdivl
outsb
mov
adc
std
rcr
inc
in
fimull
test
xchg
mov
out
ror
and
inc
pop
jns
out
fisubl
leave
aas
dec
jecxz
push
mov
fimull
loope
xor
mov
sbb
jmp
ss
mov
pop
jno
add
sub
xchg
pop
jno
pop
jbe
sub
cmp
xor
int3
push
sti
mov
gs
jg
pop
cmpsl
add
lret
ljmp
sbb
cs
dec
lret
cmp
jecxz
imul
xchg
popa
cmp
lret
mov
fldpi
in
mov
add
mov
mov
adc
flds
xlat
jl
mov
stc
jge
jp
int
icebp
jbe
pop
fmul
mov
lret
jp
call
test
mov
dec
int
adc
inc
dec
movsb
loope
inc
insb
inc
test
pop
ja
or
jo
xor
leave
sti
jno
jmp
xchg
repnz
enter
lcall
xchg
or
jno
outsb
insb
movsl
das
sub
sbbb
xor
imul
sti
push
nop
add
test
adc
xchg
xor
adc
gs
push
push
insb
adc
xchg
add
cmp
xchg
clc
or
and
cmpsb
add
aaa
shufps
jb
push
mov
cltd
arpl
ror
pop
jbe
jno
jle
rorb
rorb
jge
jb
or
in
retw
push
and
fsubl
movsl
js
jp
xor
push
sub
ds
xchg
mov
push
sbb
push
or
rorb
int
inc
sub
mov
pop
dec
iret
pop
xchg
xchg
lods
and
and
adc
xchg
mov
mov
mov
addb
inc
jmp
sbb
or
and
xor
mov
cltd
ljmp
enter
jmp
icebp
sbb
add
insl
mov
outsl
push
gs
sahf
icebp
xchg
mov
push
sub
mov
imul
sti
sarb
pop
mov
push
in
mov
push
mov
stos
mov
cmp
ficoml
or
adc
jae
das
cwtl
pop
mov
mov
sbb
fisttps
xor
adc
mov
pusha
hlt
cmp
or
dec
cmc
add
mov
sub
inc
divb
addb
mov
mov
and
sub
call
ljmp
imul
xchg
sarb
in
sbb
pop
das
repnz
imul
rcrl
pop
push
and
pushf
mov
icebp
mov
mov
pop
cmovge
mov
orb
or
pop
lret
xor
mov
and
ss
sbb
scas
cmp
repnz
pop
mov
out
scas
push
xor
sbb
push
idiv
push
push
icebp
cmpl
sub
jmp
pop
ja
test
aam
rcll
aam
dec
je
mov
pop
adc
fsubrs
scas
lcall
out
or
fists
imul
popl
test
cwtl
incl
mov
out
xchg
dec
xchg
aam
add
out
aam
inc
push
fwait
xchg
cld
cltd
ret
imull
dec
inc
xlat
test
xchg
pusha
pop
or
stos
clc
pop
adc
xchg
fidivrl
add
nop
inc
lods
dec
and
popa
cmpsb
add
aas
xchg
outsl
popf
pop
xchg
scas
es
sub
fldt
leave
nop
rcrb
bound
sbb
cmp
jecxz
push
mov
dec
in
sarb
xchg
stos
pop
pop
add
push
mov
xor
inc
mov
sub
lea
neg
xor
sbb
roll
cwtl
dec
call
mov
xchg
sbb
repnz
fcomi
aaa
or
outsb
xchg
xor
lods
sbb
loope
out
testb
repnz
dec
mov
outsl
lock
and
or
int
test
stc
dec
xchg
fdivrs
lock
inc
cltd
aaa
pop
add
sar
lar
test
sbb
mov
mov
dec
mov
inc
pop
loopne
stc
lods
push
lods
xchg
sbb
outsb
lahf
aas
sbb
outsb
jno
adc
sbb
test
or
or
repnz
jmp
cli
js
scas
loope
dec
wrmsr
push
ljmp
adc
dec
fwait
repz
xchg
iret
jg
movsl
or
loop
sbb
inc
cmc
ja
popf
cs
mov
mov
lods
jmp
mov
sarb
cmp
mov
imul
inc
and
cmp
xor
ljmp
cltd
pop
sti
push
data16
in
lods
sbb
outsl
mov
ret
test
push
test
pop
scas
jp
push
mov
ds
mov
lds
cmpl
push
adc
pop
sub
mov
mov
hlt
lock
inc
rol
cmp
jmp
lods
insl
adcl
cld
and
dec
in
push
mov
pop
push
xchg
xor
mov
sahf
mov
mov
in
inc
add
inc
jg
rclb
ret
popf
sub
xchg
cmp
je
lcall
and
cmc
pop
lret
test
cli
sbb
imul
and
xchg
adc
add
push
arpl
call
fadds
and
out
stos
in
cli
cmp
shrl
sahf
xchg
ljmp
outsb
sbb
out
js
mov
xor
mov
les
repz
cmp
dec
stos
in
imul
pusha
shl
or
xorl
out
push
clc
int3
stos
ljmp
cltd
insb
xor
or
popa
test
xchg
push
xor
in
pop
mov
jno
mov
adc
jno
cmp
xchg
fdivrs
inc
jmp
movsb
dec
mov
pop
fsubl
jle
sub
orl
jae
stos
add
clc
mov
cmp
xchg
adc
imul
mov
and
std
add
scas
mov
sbb
xor
jo
or
ja
sbb
scas
lcall
das
sbb
stc
lods
and
or
gs
decb
mov
mov
dec
dec
rcr
lcall
test
or
inc
push
xlat
loop
mov
addr16
cmp
xchg
popa
xchg
adc
xchg
inc
out
jl
sbb
stos
stos
jle
inc
repnz
push
push
notb
adc
mov
mov
cld
and
cli
orw
test
scas
in
add
jb
xchg
xor
push
pop
jae
repnz
idivl
xor
or
push
ja
xor
popaw
call
jg
dec
aam
fldcw
rcl
loop
in
les
bound
repz
dec
outsl
out
ret
and
sti
das
pop
mov
das
je
insb
or
test
fstpl
movb
push
cwtl
cmovg
enter
test
cwtl
lret
dec
or
or
adc
pop
pop
mov
push
mov
jl
int
and
jecxz
test
cmp
loopne
dec
pop
outsl
fildl
adc
shlb
das
les
cli
lret
aad
push
int
sbb
icebp
mov
loop
mov
inc
or
inc
mov
add
fimull
jecxz
mov
jae
push
loop
popl
sbb
mov
xchg
push
aad
cmp
daa
sbb
iret
daa
add
pop
xor
mov
inc
aad
cmpsb
fidivs
mov
mov
push
bound
int
mov
test
out
cmp
push
xor
test
push
movsl
in
nop
loop
add
arpl
outsb
add
add
loopne
mov
aad
ds
push
adc
inc
scas
pop
mov
pop
cmp
les
mov
enter
dec
dec
mov
fwait
es
or
xchg
dec
mov
jae
out
lds
jg
mov
pop
sti
mov
dec
sbb
mov
test
aaa
lods
stos
mov
lock
in
cmp
shrb
mov
or
es
ja
iret
xchg
test
sbb
fs
out
les
push
inc
fsubs
mov
scas
push
dec
mov
push
pop
out
out
add
sub
fsubrs
ljmp
cmp
xchg
insb
lock
imul
add
js
cmp
dec
adcb
push
cmp
cmp
sahf
stc
insl
repz
fistps
inc
push
jle
jmp
push
in
or
mov
popa
dec
mov
scas
pop
xchg
mov
push
leave
lcall
jb
sub
sub
jbe
mov
pop
dec
lcall
pop
mov
ljmp
lret
pop
loope
je
fisttpll
mov
sub
xor
xchg
clc
or
lock
ror
movsb
std
pop
cmp
icebp
adc
sbb
mov
mov
xchg
lods
pop
cli
mov
inc
or
stc
cmc
ljmp
lods
jecxz
loopne
sub
jmp
out
mov
movsb
test
or
add
scas
pop
aaa
mov
adc
adc
xchg
test
pop
fildl
add
das
dec
jb
popf
xchg
push
daa
xchg
stos
out
mov
les
lret
mov
jb
inc
sarb
add
inc
inc
sub
cmp
push
pop
fistpll
sbb
jo
jb
daa
jne
aas
mov
cwtl
cmpsl
stos
jge
push
push
out
dec
cld
inc
dec
xchg
rorb
lds
mov
and
lret
jmp
mov
scas
jne
pop
and
cmp
je
mov
pop
aaa
add
jecxz
lds
out
jo
rcrl
mov
add
mov
iret
out
add
insl
ja
dec
sbb
fdivr
ljmp
cmp
xchg
xchg
or
sub
fsubl
pusha
insb
and
push
push
inc
loop
or
dec
inc
cmp
lds
insl
mov
adc
data16
scas
pusha
jge
out
xchg
hlt
add
mov
inc
sbb
pusha
out
insl
flds
jae
push
cli
push
pop
jae
or
adc
push
cmpb
std
inc
insl
cmpl
push
insb
cmpl
mov
adc
int3
flds
shlb
cmovnp
adcl
outsl
leave
jo
loop
inc
xor
mov
sarb
adc
jecxz
shl
faddl
pushf
ja
jge
out
rolb
adc
add
jmp
inc
inc
mov
pop
add
les
ljmp
in
xchg
fistpl
test
xchg
in
js
sbb
pop
daa
outsl
std
adc
push
cmp
std
sub
cmp
mov
in
insb
mov
jbe
push
fsubr
add
jmp
aad
or
fcmove
xor
sbb
in
pop
mov
add
pop
jmp
shl
aam
repnz
push
popl
mov
fs
outsb
mov
cmpb
hlt
sub
xor
lods
stc
repnz
insb
es
mov
stos
and
pop
add
fstpt
repnz
test
imul
aaa
fcomp
or
movsb
sbb
js
ss
push
xchg
sub
push
nop
lods
jmp
stos
jbe
mov
add
divb
mov
aaa
push
xchg
lahf
or
sahf
stos
call
les
out
jle
cmpb
std
rclb
mov
fstl
aam
test
and
or
and
jo
dec
outsb
push
sub
das
mov
xlat
cmp
xchg
in
and
das
int3
addr16
xchg
cmp
sub
fdivl
test
into
xor
in
inc
mov
jp
pop
jecxz
out
mov
xor
inc
jbe
enter
adc
data16
scas
pop
pushf
or
insl
or
xor
pop
push
jle
cmp
jae
mov
mov
int
cmp
repnz
cmp
out
xor
or
adcl
xor
scas
or
pop
shlb
mov
push
movsl
push
test
jae
jnp
jne
fwait
mov
int
scas
popfw
dec
mov
jl
xchg
divb
ficompl
pop
xchg
negl
sub
dec
cmp
int
cs
fs
or
xchg
adc
nopl
pop
or
jb
clc
sbb
int
lods
mov
sub
scas
xorb
and
ss
xor
or
and
andl
loopne
cld
scas
pushf
push
jne
push
test
dec
and
cltd
les
insl
xor
mov
pop
push
sub
mov
das
sub
in
lret
or
rcrb
xchg
faddl
or
xchg
stc
mov
lods
and
std
sbb
nop
jp
cmp
add
sahf
cmpsb
call
pop
pushf
pop
je
icebp
popa
in
cmp
cmc
std
fsubrl
push
decl
jnp
xchg
jne
sub
add
cmp
sub
lret
lahf
inc
push
push
mov
stos
mov
lods
and
push
ret
shr
push
pop
push
adc
pop
mov
outsl
or
jl
adc
nop
addr16
mov
testb
scas
fwait
daa
fsub
rclb
jge
cwtl
stos
mov
jno
jg
mov
pop
jbe
lock
movsb
cmpsb
xchg
nop
cli
dec
sbb
daa
fldt
xor
jle
loop
imull
into
push
stos
loop
xor
insl
and
imul
mov
adc
ret
data16
xor
mov
lock
push
adc
xchg
mov
pop
les
lahf
adc
stos
cmp
test
ret
dec
cs
push
popf
fdivr
jae
in
repnz
imulb
fs
sahf
int
test
jb
testb
bound
shll
xor
fisubrs
mov
mov
cmp
test
fnstenv
add
rclb
mov
movl
cmp
mov
pushf
pusha
push
es
cld
or
cmpsb
fistl
mov
aaa
xchg
in
in
pop
push
mov
dec
rclb
ror
sbb
mov
push
or
roll
and
dec
jns
ret
or
test
jns
test
and
loopne
jb
das
push
adc
sub
mov
sub
pop
std
popa
es
in
sbb
cli
adc
insb
sub
ljmp
mov
inc
rcrl
lods
cmp
sbb
out
sahf
je
mov
jge
xchg
jmp
xchg
mov
outsb
into
xchg
rolb
outsl
mov
jp
aaa
sbb
lret
fdivs
test
xor
imul
cmp
fisubrs
aas
test
imul
xchg
adc
xchg
inc
les
jl
loop
push
inc
or
iret
push
xor
rorb
rolb
inc
scas
loope
push
sbb
sahf
mov
push
add
adc
enter
or
add
das
adc
xchg
mov
fisttpl
out
push
jmp
dec
out
mov
pusha
jb
add
sub
lret
jmp
inc
fwait
lret
enter
sbb
xchg
pop
int
loopne
int
xchg
and
pop
pop
imul
std
das
dec
rolb
adc
out
mov
mulb
fs
xchg
adc
mov
cwtl
lahf
bound
cs
push
movsl
nop
mov
enter
loope
cmp
inc
inc
sbb
inc
sub
shll
cmp
mov
xor
cmp
lds
test
dec
cmp
hlt
in
mov
loopne
or
mov
inc
mov
adc
hlt
xchg
call
inc
mov
or
ja
clc
sub
jge
in
or
jmp
hlt
in
inc
int
ficomps
and
xor
push
cmpsl
mov
daa
xor
sub
ja
dec
or
imul
sbb
out
mov
mov
fldenv
adc
xchg
loop
rcr
out
outsl
jno
dec
push
addl
hlt
ds
sbb
outsl
push
and
or
insl
stc
sbb
js
repz
lea
test
jne
cmc
inc
adc
sbb
ds
pop
mov
pusha
scas
adcb
or
xor
jbe
call
xchg
stc
jmp
jae
nop
std
jnp
scas
mov
or
nop
pop
aad
imul
add
pop
jb
test
push
rol
jo
jne
fiaddl
cmp
push
adc
sbb
add
mov
xchg
mov
shll
mov
jne
str
lods
or
popf
iret
daa
insb
inc
out
std
sbb
push
jae
mov
jmp
xchg
push
pop
push
loopne
in
and
sbb
xchg
or
jl
test
add
or
jl
out
push
jmp
mov
jl
push
scas
xor
or
xor
hlt
sbb
or
arpl
lods
xlat
add
jp
dec
imul
adc
xchg
xor
call
idivl
jns
js
int
push
adc
and
cmp
add
xor
ja
mov
icebp
mov
scas
or
in
cmp
nop
push
repz
cmp
ficoml
cmc
repz
inc
out
adc
sbb
inc
mov
adc
out
ret
pop
imul
push
les
scas
dec
cmp
incl
adc
xor
or
divl
and
sbb
test
inc
push
jo
repz
xor
dec
cmpsb
out
lahf
sbb
mov
ret
dec
jns
bound
and
divb
mov
cmpsl
lods
cmpl
aam
mov
or
mov
mov
popa
jmp
or
lcall
loopne
jl
xchg
shlb
and
shll
negl
cmpsb
xchg
sbb
jns
mov
pop
and
fucomp
xchg
test
stos
xor
xor
cli
push
xchg
pop
or
in
push
jo
sbb
mov
out
pop
sbb
daa
xor
aad
jmp
in
aad
and
shlb
sbb
test
push
jnp
das
dec
int
push
test
in
incl
mov
lahf
sbb
out
pop
and
movsb
sub
dec
dec
add
lock
jb
dec
pusha
imul
push
inc
mov
aaa
aam
aas
int
mov
ss
sahf
mov
mov
push
or
lods
lcall
lock
es
je
add
lcall
and
add
mov
cmp
lret
sar
sbbb
and
mov
mov
aas
cmp
adc
adc
pop
jmp
push
sbb
movsl
push
loope
cwtl
add
mov
inc
inc
sub
mov
adc
test
int
cmp
pop
sbbb
sub
fists
xor
stos
mov
mov
sbb
xchg
int3
aad
lods
loopne
aaa
push
xor
push
sub
pop
xor
xchg
dec
adc
jge
aam
popa
cld
popf
sub
cwtl
rcrb
push
xchg
nop
adc
push
ds
push
loopne
test
xor
cmpsb
std
mov
inc
das
cmp
pop
mov
sub
cli
outsb
xor
flds
mov
jg
xlat
pushf
add
and
sub
out
call
dec
int
inc
scas
leave
cmp
dec
loope
and
fwait
pop
aad
out
xorl
movsb
xor
cld
ja
sbb
xchg
xor
movsl
aam
sub
cmp
mov
in
pop
mov
push
popfw
or
ficoml
mov
pop
cmp
dec
or
and
out
sbb
mov
mov
nop
sub
cltd
iret
cwtl
ret
cmpsl
fs
ror
xor
rcr
jle
cmc
xor
cmpsb
xlat
clc
dec
cmpsb
jo
jecxz
mov
mov
xor
fcomps
xor
or
and
pop
or
push
ret
pop
addr16
pop
dec
push
push
loop
pop
sbb
pop
cs
and
push
int3
xor
clc
out
nop
mov
push
mov
push
add
lahf
out
out
mov
out
jecxz
xor
fdivs
inc
ljmp
add
addl
xor
xor
inc
lods
lret
lret
push
leave
hlt
mov
xor
je
mov
sbb
dec
add
lods
sub
dec
mov
icebp
mov
sahf
fnstenv
aas
and
pop
cmp
mov
push
pop
repz
ret
cwtl
pop
and
in
mov
scas
cmp
sub
xor
dec
xchg
cld
mov
add
cld
test
mov
call
int3
rcrb
dec
hlt
mov
fidivl
and
push
std
add
es
cmpsl
aad
dec
dec
xor
pop
lahf
cli
mov
sub
mov
jo
inc
inc
cmp
lods
andl
mov
fstpl
cmp
pusha
mov
cmc
push
daa
ljmp
out
incb
cld
in
addr16
rolb
cld
imul
fidivrl
or
or
icebp
mov
ljmp
ret
gs
jmp
int
in
xor
addb
xor
mov
push
out
mov
cmpb
xchg
roll
test
inc
dec
shrb
dec
and
push
xor
inc
mov
cmp
outsl
mull
adcl
test
in
lahf
cmp
mov
sbb
jmp
cmp
negl
in
lcallw
in
jl
add
xchg
fcompl
div
xchg
dec
jnp
out
lods
fildl
das
inc
js
lcall
xor
clc
stos
loopne
mov
dec
arpl
fistps
add
leave
cmc
test
cmp
je
ss
jle
cwtl
nopl
dec
inc
adc
jns
shll
lahf
cmp
addr16
outsl
inc
and
jle
jecxz
test
clc
divl
test
test
cmpsl
movsl
rcl
addr16
mov
inc
aaa
ja,pn
ds
inc
or
enter
jl
subb
push
lcall
pop
push
inc
aaa
sahf
sub
in
rcl
pop
outsl
push
inc
sub
fdivrs
mov
add
or
rclb
adc
mov
xchg
ficomps
inc
bound
xor
mov
ds
les
mov
xor
lret
xchg
pop
cmp
push
xor
iret
cmpb
xlat
cmp
adc
stos
adcb
mov
sbb
jne
insl
lods
push
xor
xor
aam
xchg
inc
jl
in
pop
add
push
out
push
dec
fucomi
nop
movsl
aad
fmull
daa
pop
repz
mov
xchg
push
xchg
lret
orl
inc
add
imul
cltd
dec
int
sub
imul
rorb
cmpsl
cli
in
ljmp
or
cmp
jp
mov
test
mov
adc
sbb
mov
pop
pop
insb
or
sbb
and
jae
push
inc
inc
xor
fidivrs
inc
xchg
mov
loope
in
jmp
push
push
std
push
ret
push
mov
or
cmpb
or
adc
movsb
pop
pop
xor
sub
addr16
adc
push
dec
or
insl
dec
jp
pop
pop
cltd
js
adc
sub
and
mov
inc
test
cmp
stc
mov
in
xchg
pop
loopne
mov
in
int3
jbe
add
jnp
inc
outsb
in
sbb
andl
adc
nop
shr
repnz
lock
daa
sub
adc
pop
sahf
mov
cwtl
jnp
sarl
ret
cmp
mov
jbe
daa
out
push
add
mull
cmpsb
outsb
dec
add
test
and
and
dec
push
fdiv
push
out
or
test
test
js
cmc
bound
add
aad
cmp
out
and
push
adc
movsb
nop
mov
popa
mov
scas
xchg
ret
cmp
mov
mov
mov
loop
and
cltd
sub
add
jge
test
jmp
scas
xor
dec
inc
fsubl
sub
dec
into
sbbl
sbb
test
and
adc
out
mov
mov
pop
test
jmp
ljmp
adc
jnp
aam
jp
aam
mov
xorl
shlb
lret
add
test
aam
pop
adc
test
scas
sarb
jmp
cwtl
mov
jnp
stos
mov
popa
sarb
lret
and
xor
out
mov
mov
fs
and
popf
inc
fmuls
addr16
and
cwtl
scas
iret
cmpsl
mov
insl
xor
inc
std
xor
loopne
cmpsb
push
xor
adc
xlat
push
jg
sub
lds
xchg
add
rcl
lea
mov
je
inc
daa
cmc
in
push
shlb
and
insb
stc
and
inc
xchg
cmp
call
out
cmpsl
jns
les
pop
loope
jae
lcall
outsb
adc
stos
lock
pop
inc
add
xchg
xor
fwait
jmp
mov
sub
mov
mov
cmp
clc
sbb
mov
mov
pop
sub
dec
jl
call
nop
cld
arpl
and
out
cmp
cld
icebp
pop
lds
jp
xchg
adc
in
pop
xor
cmp
into
inc
out
gs
dec
testb
and
sbb
xlat
jmp
icebp
int
pop
lods
iret
jbe
sub
xor
cmp
flds
pop
adc
test
jg
cmp
mov
cmp
out
push
inc
xor
jne
test
sbb
pop
jge
mov
push
cmp
mov
popf
xchg
mov
push
sahf
add
adcl
adc
jnp
push
sub
push
fcomp
cltd
outsl
aas
popa
popa
or
inc
cmp
js
mov
lds
fildl
adc
lods
inc
mov
mov
jge
xchg
cltd
lret
ljmp
mov
jae
or
xor
addl
xor
jno
arpl
rcrb
sub
call
cmpb
dec
insb
xchg
xchg
pop
dec
add
repz
lcall
fwait
and
jne
daa
pop
testb
daa
sub
repz
int
out
pop
and
stos
test
mov
hlt
push
psllq
stc
jge
xor
test
xchg
and
push
add
inc
into
pusha
xchg
stc
leave
xchg
sbb
cld
mov
xor
dec
aam
mov
and
lods
pop
push
rcl
pop
clc
ljmp
jge
push
xor
idivl
and
jbe
cld
mov
jge,pt
ss
xchg
jmp
mov
ret
pushf
inc
jge
sbb
mov
mov
lahf
push
xchg
shl
xlat
stos
dec
inc
pop
repz
cmp
mov
mov
add
inc
and
fxch
pop
inc
jnp
and
add
dec
mov
bound
fldl
hlt
adc
pop
sbb
adc
push
imul
push
cltd
mov
into
pop
das
aaa
sub
lods
lods
outsl
out
push
fs
push
movsb
popa
in
push
icebp
dec
xchg
xchg
int3
xchg
push
jae
jmp
ret
cmpsl
in
fsubrs
xchg
xor
movsb
jnp
push
movsb
cld
xchg
clc
adc
insb
fildl
out
lahf
sti
xor
jo
dec
je
cmp
mov
pop
fstps
incb
or
mov
dec
fbstp
inc
push
fwait
jnp
xchg
lods
xor
or
mov
int3
mov
jg
sti
das
sub
jmp
push
sbb
xchg
pop
into
adc
pop
cmp
mov
jne
loop
jno
xchg
sarl
xor
lea
aaa
sti
popf
sbb
mov
push
mov
lahf
push
and
push
pop
push
push
xchg
mov
psubd
shr
fildl
lret
mov
push
fwait
loopne
sbb
adc
push
mov
cwtl
xchg
push
lret
filds
mov
xor
sbb
out
cmpsl
cli
pop
roll
sub
or
jl
pop
pop
cmpl
pop
pop
outsl
add
repz
fisubrl
mov
imul
add
cmp
inc
push
dec
inc
shrb
insl
pop
or
xchg
cmpsl
mov
mov
dec
mov
testb
push
outsl
gs
ds
xchg
pop
ljmp
mov
mov
insb
push
pop
sbb
in
int
sub
cmp
nop
test
std
js
and
jnp
cmp
sub
adc
push
in
int3
clc
loope
jns
nop
push
das
daa
stc
test
xchg
out
xchg
aad
mov
xchg
mov
or
rorl
jno
lahf
adc
xchg
cmp
fidivrl
ja
xorb
fcoms
sbbl
cmpsb
cmc
mov
xchg
cmp
push
lcall
fistps
repz
cmpsb
insb
pop
and
or
sti
mov
jecxz
enter
sub
outsl
push
ret
cmpsb
popa
adc
daa
cld
xor
fbld
jnp
sbb
dec
pop
mov
jne
stos
and
mov
xor
sbb
mov
movsl
pusha
mov
loop
adc
or
jle
dec
push
cmp
in
push
mov
insl
mov
sub
cld
and
ret
sub
xchg
insb
ret
addr16
adc
ret
cmc
sub
imul
enter
sbb
and
push
mov
pop
jg
or
ror
insl
cmp
movsl
icebp
pop
inc
bound
pop
xor
inc
xchg
mov
sub
jp
jle
dec
fdiv
popa
fdivs
inc
cmpsb
dec
fisubs
dec
insl
xchg
inc
or
sub
stc
pop
mov
dec
pop
inc
push
mov
daa
mov
ret
das
xchg
arpl
add
and
add
insb
xchg
cmpsb
shrl
xor
dec
jo
cmpsl
dec
dec
in
and
cld
out
add
mov
xchg
pop
mov
push
pop
popa
out
inc
push
mov
inc
jbe
xor
enter
addr16
clc
cmpl
mulb
mov
dec
lcall
sbb
mov
mov
cwtl
repnz
sbb
mov
and
or
add
mov
jge
mov
inc
lahf
xorl
mov
adc
movsb
sub
xchg
insb
push
or
inc
xchg
xor
das
fwait
into
cmpsb
mov
xor
lods
inc
daa
imul
xchg
loope
inc
sbb
je
push
aad
jno
in
or
ds
dec
int
or
mov
sbb
mov
negb
or
xor
push
jnp
test
mov
lds
adc
cmc
icebp
test
inc
popa
jne
and
loop
movsl
stc
xchg
into
sbb
cmp
and
cmpsl
sbbl
ss
test
mov
mov
out
xlat
mov
jg
push
xchg
mov
aad
jp
call
or
add
pushf
push
loopne
xor
push
mov
push
test
ds
stos
jmp
xchg
nop
ret
inc
cld
sti
sahf
scas
les
pop
pop
leave
sbb
push
fs
or
stos
fidivl
sub
or
xor
cmp
sub
in
dec
in
sti
addr16
test
je
inc
xchg
popa
xor
add
pop
icebp
jne
pop
sbb
mov
outsb
push
loope
push
sahf
add
add
jg
ja
leave
xchg
rcrb
mov
inc
dec
inc
lds
sbbl
mov
or
scas
jno
dec
rorb
mov
inc
out
bound
ljmp
jmp
ret
xchg
dec
adc
add
stc
outsl
and
in
mov
inc
aas
notl
rcrb
xchg
imul
cli
mov
xor
hlt
or
adc
imul
ja
cmp
xlat
sub
add
lcall
call
sbb
fabs
xor
push
stc
or
aam
lea
cltd
xor
bound
jmp
into
adc
ss
jecxz
pusha
cmpsb
rolb
rolb
je
stos
and
jbe
out
pop
mov
ja
test
xor
das
insb
dec
mov
stos
data16
sbb
test
cmp
pop
dec
or
mov
sub
jl
lahf
int
scas
push
jnp
fucom
jl
and
inc
pop
sub
sub
mov
sub
pop
push
fsts
and
ja
enter
xchg
dec
ja
es
arpl
fnstenv
cltd
mov
mov
ss
cmpsl
ret
adc
outsb
and
jl
pop
mov
loop
and
es
sbb
je
cmp
cmpsb
mov
adcb
xor
mov
cmp
pop
pop
outsl
mov
or
inc
mov
adc
mov
out
xchg
cmp
outsl
jg
lds
mov
xchg
ja
mov
scas
pop
aaa
ret
adc
clc
inc
negb
jae
mov
jno
sbbl
xorl
stc
mov
setp
lret
in
fisubl
push
jge
mov
mov
jg
pop
ret
loope
pop
dec
clc
js
into
dec
stos
sarl
fs
repz
imul
jle
cld
lock
mov
pop
repnz
push
xchg
sbb
push
sbb
enter
xor
scas
xor
mov
jae
jecxz
fistl
jp
stos
cmpsb
push
mov
mov
jb
xor
and
jg
and
mov
adc
jne
shr
push
bound
and
or
pop
mov
pushf
stc
push
jnp
je
ss
mov
add
or
out
mull
insb
xchg
bound
decl
lea
mov
idivb
and
jmp
dec
xchg
mov
xchg
lcall
ja
push
mov
jns
rorl
in
mov
daa
mov
fldenv
arpl
jecxz
lret
xchg
arpl
or
in
xchg
xchg
nop
cld
jnp
mov
adc
mov
loopne
xor
adc
mov
mov
push
cltd
fcoml
pop
imul
sbb
jle
lea
xorl
arpl
or
fldt
hlt
pop
add
mov
mov
in
fcmovnu
ljmp
push
pusha
cmp
lahf
dec
adc
dec
sub
xchg
testl
sbb
sbb
add
es
sbb
mov
cmpsl
and
dec
adc
outsl
shr
outsb
movsl
jle
int3
cmc
mov
int
jns
and
roll
ret
lods
movsl
pop
and
cs
xor
mov
scas
mov
mov
jnp
xchg
iret
mov
aas
dec
jo
dec
sub
call
and
fiaddl
cwtl
xchg
outsb
movsb
int
fcoml
pop
xor
fcmovnu
out
xor
mul
xor
pop
mov
xor
das
fmuls
cltd
sbb
adc
roll
arpl
pop
adc
jp
in
sti
dec
mov
clc
sub
in
cmp
mov
and
mov
lret
inc
xor
xchg
mov
xchg
inc
out
mov
and
test
cli
or
dec
and
out
mov
test
cmc
clc
add
cmpsb
clc
mov
js
xchg
jle
out
sahf
adc
cmp
xor
ret
push
movsl
test
push
scas
fs
xchg
push
icebp
sub
push
and
lahf
sub
jno
leave
pop
movsl
sub
xchg
mov
loope
mov
scas
es
inc
loop
in
repz
insl
sub
xor
out
xchg
lock
add
push
sub
test
pop
test
mov
push
leave
xchg
fsubl
and
inc
hlt
xchg
pop
hlt
ret
xchg
push
cs
and
cmp
or
dec
push
mov
call
mov
outsb
std
cli
rorb
je
lea
and
and
movsl
data16
xor
pop
pushf
leave
add
mov
ss
fcmove
js
xor
gs
sub
int
aam
pusha
stc
sbb
jle
lods
mov
in
inc
add
enter
jecxz
cmc
mov
inc
aad
int
dec
pop
or
ja
ret
dec
mov
xchg
dec
dec
pushf
inc
pop
leave
push
outsl
sbb
imul
push
mov
push
in
test
repz
lret
xor
out
jl
jp
mov
ss
and
xchg
and
jno
fisubrl
xchg
add
es
xor
pusha
test
pop
rep
shrl
push
mov
push
stos
sub
js
cmp
aad
xchg
jp
lahf
jp
loop
sbb
mov
scas
jp
xorl
pop
pop
pusha
jne
cli
cmp
push
sar
jb
fs
stos
out
aaa
or
mov
inc
mov
dec
and
sub
adc
sub
pop
mov
imul
ja
dec
xchg
push
cmpsb
popf
or
jb
jo
sub
jg
adc
mov
pop
in
or
test
push
pop
in
xor
sbb
push
inc
repz
mov
call
dec
add
stos
sarl
fcmovu
fistps
lock
mov
clc
daa
cmp
aaa
dec
push
sbb
pop
add
add
movsb
sub
sarb
out
sub
dec
pop
sbb
mov
subb
fsubrs
pop
daa
mov
sti
dec
test
daa
xchg
movsb
in
push
pop
jbe
sub
loope
in
out
inc
mov
pop
shlb
xor
loopne
sub
out
stos
outsl
lds
aad
pop
inc
orb
outsl
pop
sbb
test
ds
inc
sahf
pop
cmova
cmpsl
add
mov
mov
mov
cmpsb
adc
xchg
fists
jp
add
jmp
repnz
scas
cli
cmpsl
xchg
aad
out
lcall
push
gs
add
popa
scas
xor
add
pop
into
mov
rol
and
jmp
inc
adc
inc
inc
and
mov
xchg
or
cmp
lcall
sbb
out
xchg
test
fadd
jns
xchg
jnp
data16
clc
lock
mov
hlt
sbb
add
push
xor
dec
stos
jge
jnp
daa
dec
jg
fnstcw
sub
or
jns
int
cwtl
mov
das
out
lods
cmpsl
pop
jnp
dec
in
mov
test
sbb
sub
icebp
sub
test
rorl
es
icebp
cmp
xlat
jg
in
sbb
xchg
mov
xchg
inc
loope
or
rcr
sub
loope
cli
hlt
out
inc
movsw
sbb
xchg
addr16
xor
mov
sbb
jnp
ss
jge
and
add
enter
movsl
add
int
addl
out
mov
aad
sar
cs
data16
popf
push
addr16
fs
fs
aas
add
aad
adc
or
inc
sbb
xchg
in
out
loop
jp
dec
and
jmp
sub
test
sti
and
jg
iret
ja
decb
sbb
pop
jo
cmp
xchg
nop
ds
dec
imul
adc
xchg
inc
outsl
movsl
cmpsb
arpl
aaa
mov
shlb
mov
xor
jl
lret
fsubs
mov
xlat
lret
or
sub
fs
push
sub
and
pop
pop
cmpsl
xchg
or
sub
testl
and
cmpsl
jmp
push
cmp
fdivs
jecxz
enter
dec
pop
lret
mov
insl
repz
add
push
xchg
shrl
test
xchg
xchg
mov
clc
cmp
rolb
loope
mov
enter
mov
test
lret
mov
pop
add
push
lock
vpslld
mov
subl
mov
ja
mov
insl
cmp
mov
add
sbb
cli
or
cld
and
imul
adc
xchg
lcall
mov
cmc
add
stc
mov
push
xor
outsl
push
int3
mov
xor
xchg
xor
mov
xchg
push
sub
push
fnsave
test
inc
xchg
hlt
jp
lret
sub
shl
lea
pop
fs
adc
xchg
xchg
dec
fimuls
add
inc
notl
xchg
scas
fadds
stc
mov
mov
push
call
icebp
xchg
and
pop
mov
adc
mov
adc
sbb
and
fdivs
adc
pop
push
std
loop
cmp
mov
mov
jmp
jbe
xchg
test
add
das
popf
pop
ljmp
out
xchg
repz
xchg
insb
dec
pop
mov
mov
int3
mov
in
xchg
data16
jge
push
ljmp
sub
shll
pop
mov
int
ljmp
dec
inc
cmp
mov
iret
pop
movsl
dec
pop
pop
movsl
push
fcoms
or
jne
inc
int3
cmp
mov
adc
test
loopne
in
nop
mov
xchg
push
popf
rcrb
das
jb
mov
scas
xchg
xchg
and
outsl
pop
cmp
push
sbb
mov
call
inc
jnp
sub
sub
stos
or
into
lret
ljmp
aam
and
mov
push
leave
ljmp
shlb
test
sbb
loopne
xchg
fcmovne
mov
shlb
pop
jo
jno
and
mov
jb
std
add
or
insl
mov
pop
jl
and
cmc
inc
lret
xchg
sbb
sti
outsb
cli
or
popf
lea
fs
or
push
mov
test
xor
jl,pt
mov
rcll
mov
ficoml
xor
xor
adc
jge
popa
sbb
out
lods
adc
mov
dec
pop
push
inc
push
adc
mov
sub
jno
filds
jl
jg
fcompl
mov
test
movsl
fwait
sbb
jecxz
mov
out
push
les
fadds
xchg
sub
xchg
dec
pop
mov
pop
ret
test
fcomps
adc
inc
jmp
inc
ja
mov
sbb
push
clc
lret
mov
inc
pop
out
or
jo
imul
adcl
dec
cmp
aam
jno
outsb
add
jno
lock
cli
adc
stc
jmp
loopne
inc
push
les
mov
insw
dec
shll
sahf
sub
movsb
daa
fs
popa
ljmp
xor
popf
pushf
subb
mov
or
sarl
inc
dec
icebp
push
mov
mov
or
cmpsb
pop
movsb
movsl
inc
rclb
rclb
sub
inc
sub
add
pusha
xlat
xchg
mov
scas
aam
lea
pop
or
std
cmp
push
pop
push
pop
or
jo
scas
cli
mov
sub
add
dec
int3
pop
and
repnz
pop
mov
ljmp
dec
ficompl
cld
cmp
push
rep
pop
cmc
xor
cmp
enter
lahf
and
adc
jl
test
dec
int
inc
adcb
sbb
fisttpll
adc
fwait
lock
popf
out
leave
rclb
or
fsubrp
sbb
sbb
arpl
popa
decb
pushf
int
add
rolb
enter
mov
addl
jno
and
and
cmpsb
jp
push
mov
push
add
mov
cwtl
inc
pop
pop
movsb
test
push
lcall
and
pop
xchg
fmuls
loopne
das
adc
add
fisttpll
js
in
mov
push
pop
mov
xorl
sbb
shlb
dec
shrb
stc
insl
mov
fistps
in
insb
mov
inc
jl
rol
dec
insl
in
pop
sbb
cld
lcall
and
sub
sub
push
pop
fstl
sahf
and
arpl
jmp
repz
es
pop
and
mov
xchg
hlt
sbb
pop
pop
loop
popa
dec
lods
bound
or
sbb
dec
xchg
subb
jmp
add
mov
jmp
jo
push
inc
add
adc
pop
jmp
pop
addr16
sarl
and
into
inc
and
pop
jno
in
pop
mov
mov
push
add
pop
in
pop
mov
xor
sti
add
lret
adcl
sub
iret
sarb
loopne
xor
add
push
lods
pop
jmp
push
repz
mov
push
inc
iret
jnp
daa
or
in
jnp
mov
cltd
orl
outsb
nop
adc
pusha
xor
xlat
mov
push
or
push
jbe
orl
cmp
add
adc
mov
jmp
daa
idivb
cmp
mov
idivb
test
cmp
mov
sub
mov
xchg
aad
inc
xchg
push
mov
into
adc
sbb
sbb
adc
pop
jo
mov
roll
cmp
hlt
mov
pop
out
lret
call
xlat
movsb
mull
mov
add
test
sti
in
ficomps
cld
sbb
inc
xlat
test
jne
pop
cmpsb
cltd
sbb
imul
cld
jb
das
sar
xchg
mov
rcrb
cmp
cmp
inc
test
imul
mov
mov
insl
cmp
std
or
add
xor
fabs
mov
pop
push
movsl
and
push
cmp
cmpsl
adc
sub
inc
xchg
shlb
inc
jae
lods
cli
jl
inc
sub
inc
cwtl
rorb
mov
and
test
aam
lret
adc
push
or
ja
subl
mov
test
jno
xchg
pop
shlb
testl
dec
jno
loopne
test
loop
jnp
call
dec
int3
clc
in
in
lock
dec
mov
push
xorb
xchg
and
das
ror
dec
ja
pop
rol
cwtl
xchg
dec
negb
and
loop
rolb
inc
in
fsts
push
dec
mov
push
jns
sbb
jns
jo
enter
mov
or
movsl
aas
out
out
jne
pop
push
enter
out
pop
and
ljmp
jbe
xor
dec
pop
adc
mov
mov
lret
adc
inc
push
jle
in
sub
mov
or
popa
call
pop
mov
imul
hlt
js
push
jle
add
pop
xchg
mov
mov
jecxz
pop
pop
mov
sbb
loop
mov
add
and
inc
lods
sbbb
test
mov
lock
add
inc
inc
jne,pn
mov
jp
dec
jns
cmpsb
fisttpll
ret
testb
pop
movsb
cmp
sbb
ja
adc
inc
adc
mov
std
push
in
stc
cmpsb
push
sahf
and
hlt
stos
mov
ficoms
loopne
mov
jecxz
popf
ja
push
add
sahf
cli
mov
outsb
hlt
xor
sub
dec
call
and
cltd
mov
shlb
ss
add
ficomps
mov
sub
ret
fadds
xor
dec
inc
cmpsl
popa
sbb
js
and
mov
dec
sti
adc
mov
cs
in
jne
adc
cmp
cmp
jmp
scas
sbb
clc
sbb
and
out
cli
call
mov
pop
data16
sub
push
shlb
stc
push
jle
into
sub
lahf
in
push
dec
test
adc
sbb
int3
sbb
in
dec
notl
dec
cmp
into
pop
pop
mov
cmpsb
aas
push
pop
inc
lods
push
or
pushf
fs
mov
inc
pop
mov
in
rcll
iret
cmpsl
in
jne
enter
ret
loopne
repz
jp
or
mov
lock
xchg
shll
add
jae
xchg
pop
das
movsb
push
fdivrs
or
rorb
les
inc
loope
push
push
xchg
movsl
in
out
outsl
out
mov
out
pop
mov
shrl
test
sbbb
sub
cmp
sti
pop
add
jmp
cmpsl
subb
dec
bound
rolb
mov
dec
xor
mov
inc
lds
call
test
push
add
cs
add
ret
scas
jnp
popa
xor
outsb
jae
push
imulb
gs
adc
or
dec
jnp
rorb
popa
mov
test
scas
call
mov
xchg
mov
sarb
orl
jno
push
sbb
orb
pop
add
loopne
xor
sbb
lret
fadd
pop
ret
sub
fidivrs
imul
out
or
adcl
sub
xor
pop
or
jmp
sti
pusha
mov
add
test
popa
inc
sub
icebp
xchg
jo
insb
loope
push
lock
jb
scas
iret
shl
or
arpl
jb
pop
jb
mov
jb
callw
jae
call
mov
and
push
mov
xchg
mov
repz
ljmp
sbb
out
mov
mov
int3
das
addr16
rcrl
rcrl
arpl
push
movsb
add
divb
insb
inc
out
iret
xor
push
iret
sub
pop
inc
inc
gs
test
pusha
scas
test
sti
mov
jge
loope
mov
xchg
aas
xor
pop
and
cmp
outsl
xor
xlat
lods
pop
sub
addr16
popf
or
cmp
rolb
xor
pop
lock
stos
push
cltd
xchg
dec
jle
outsl
lret
pop
imul
inc
jg
dec
sub
push
mov
and
ds
inc
xchg
xor
in
mov
mov
xlat
adc
xor
fs
jecxz
sbb
insb
shrb
add
push
or
cli
push
lret
pop
test
xchg
mov
mov
inc
ret
dec
pop
adc
outsb
push
push
lcall
or
xchg
cmp
sbbb
repnz
mov
loope
imul
push
pop
pop
fucom
ja
mov
ret
jge
cmc
sbb
aaa
dec
xchg
jo
xor
ljmp
clc
dec
bound
push
fwait
push
cmp
pop
dec
imul
sbb
or
fwait
pusha
adc
aad
mov
mov
mov
scas
cmp
daa
ja
cmp
xchg
pop
add
mov
pop
adc
test
and
arpl
jb
dec
xchg
std
mov
lods
add
not
and
lret
movsl
fimuls
push
ret
in
insb
imul
sub
jp
mov
pop
bound
cltd
jno
insb
push
insb
xchg
cwtl
test
adc
jecxz
adc
add
jo
daa
mov
minps
jno
dec
xchg
stos
imul
lea
sbb
aad
sub
xadd
sbb
rcr
push
and
rclb
push
mov
dec
aam
cmp
ja
sti
jne
pop
les
ffreep
aam
in
subl
lods
andb
pop
rolb
xlat
jecxz
push
sub
dec
cmc
hlt
xor
sets
mov
dec
sbb
mov
stos
lds
pop
add
fistpll
adc
xor
inc
and
lds
sbbb
scas
sbb
xlat
mov
pop
xor
push
mov
xor
mov
mov
stos
xor
faddl
mov
aad
xor
mov
in
jbe
add
mov
lret
aam
push
mov
add
fcmovu
xchg
stos
lahf
enter
enter
je
fiaddl
lret
inc
pop
add
xor
xchg
add
jle
push
mov
mov
repz
add
xchg
fcomps
negl
mov
add
xchg
push
mov
int3
pop
xchg
cmp
clc
mov
add
ljmp
movsb
testl
cmp
lock
out
loope
and
outsb
add
pop
cs
pop
das
inc
les
pop
fdivl
mov
mov
fistps
jmp
mov
divb
pop
dec
or
jno
mov
xchg
add
xchg
mov
lret
popf
shrb
les
and
mov
push
test
cli
mov
loope
lea
sub
mov
in
or
stos
les
pop
imul
jg,pn
test
push
mov
loope
sbb
je
jae
push
imul
sbb
xor
add
pusha
inc
jnp
daa
xchg
negb
bound
lods
inc
pop
imul
iret
dec
roll
push
mov
ret
out
cmp
inc
je
cs
mov
shlb
rcrb
lret
adc
fidivs
jl
arpl
add
popa
jle
pop
push
cmc
xor
xor
mov
enter
lahf
add
push
push
jl
xchg
push
sti
mov
sbbb
sahf
mov
add
mov
into
adc
bound
movsb
lods
mov
sbb
mov
jae
mov
das
jmp
mov
pop
test
xor
mov
push
aas
jns
jns
daa
add
cmpsl
stos
fucomip
push
sub
jp
xchg
pop
push
fcmovu
sub
mov
inc
cwtl
pop
std
popa
or
jecxz
andl
jg
sbb
xchg
or
jo
outsb
fcoml
lods
push
xchg
lret
lock
sbb
jecxz
push
inc
or
xchg
adc
push
add
jecxz
dec
jecxz
pushf
or
int3
bound
aas
cmpsb
push
pop
mov
cmpb
enter
inc
adc
sub
cmpsb
test
movsl
inc
in
icebp
jno
gs
mov
stos
mov
icebp
mov
mov
xchg
cmp
into
push
sbb
mov
add
dec
push
mov
in
js
and
arpl
addb
daa
jl
inc
dec
mov
ds
mov
xchg
xor
cld
ret
mov
call
mov
and
add
mov
hlt
out
ja
xor
lds
scas
int3
xchg
daa
rcr
and
push
insl
mov
imul
pop
hlt
xchg
jle
cld
add
inc
ret
repnz
or
and
push
pop
mov
cmp
test
push
push
jp
cli
dec
mov
xor
loop
or
sub
mov
aad
outsl
cmp
push
mov
mov
ja
jmp
and
add
add
pop
push
shl
inc
push
fs
push
jecxz
xor
into
sbb
push
xor
cmp
and
test
lcall
and
jnp
clc
inc
mov
pop
xor
xchg
xor
xchg
dec
popf
mov
sbb
mov
pop
mov
jno
xchg
push
shrl
call
or
ljmp
inc
pop
push
js
sub
je
mov
ljmp
mov
jle
adc
lcall
stos
add
mov
leave
aaa
xlat
cltd
sub
lds
cmp
mov
inc
je
std
sahf
mov
aaa
fiaddl
xchg
xor
test
pushf
jo
mov
insl
andb
xor
sub
in
cmp
sbb
jb
dec
sbb
jmp
rorl
and
movsl
inc
stos
cmp
or
movsb
add
or
popa
pusha
orb
xor
push
data16
jne
lds
xchg
push
cltd
je
or
push
add
dec
in
in
jl
jp
icebp
inc
cmp
ljmp
nop
push
fwait
mov
add
cmpsl
enter
jge
dec
add
sbb
test
mov
into
push
std
adc
inc
pcmpgtb
cmc
inc
or
xor
and
orb
add
mov
cwtl
mov
push
xchg
mov
mov
shll
cld
data16
movsb
aad
dec
or
xchg
outsl
xor
fnsave
mov
jl
xlat
push
je
inc
enter
or
push
insl
in
jge
pop
xor
mov
mov
inc
dec
and
mov
hlt
adcb
pop
repnz
sub
fucomip
and
sub
mov
aas
pop
test
push
pusha
dec
jo
loope
data16
mov
cmp
rolb
cmp
xor
add
push
ret
jo
testl
fs
pop
in
out
mov
arpl
out
scas
push
aaa
nop
out
jle
repz
call
mov
ss
outsl
sub
lahf
es
ss
inc
sbb
sarb
mov
in
fs
repz
and
js
jecxz
inc
xchg
push
fdivl
lcall
pop
mov
mov
fisubrs
cs
popf
daa
outsl
test
jle
pop
jl
or
push
lcall
xor
ja
mov
push
scas
sbb
push
jecxz
in
lods
mov
popa
cmc
sbb
sti
and
imul
mov
popa
or
mov
xchg
inc
aas
push
test
ljmp
pop
mov
jp
stos
mov
movsl
rcl
leave
and
jmp
xchg
xchg
mov
sahf
lret
out
inc
pop
mov
push
std
repz
fcmovne
lock
sub
xor
xchg
adc
call
add
or
dec
fisubl
call
mov
les
dec
aam
es
div
dec
and
roll
mov
sub
or
and
outsb
daa
sub
cltd
rcrl
mov
cmp
adc
testb
adc
fldenv
pop
push
aaa
daa
add
dec
subl
pop
loope
cmp
jg
test
sub
dec
loop
push
sbb
jle
push
cmpsl
push
mov
xchg
sahf
adc
movsb
cld
and
movsl
mov
adc
call
pop
arpl
and
pop
mov
jne
mov
ljmp
push
loopne
mov
push
icebp
adc
dec
and
popf
xlat
and
mov
cmpsl
jnp
popf
notb
sbb
push
or
mov
xor
jo
adcl
sub
push
clc
push
cmp
cmc
fsubl
xchg
mov
push
fnsave
fstpl
in
movsl
jae
dec
jmp
icebp
out
push
xchg
cltd
and
xchg
loope
jecxz
movsb
fwait
aas
push
pop
sbb
fprem1
scas
lret
mov
pushf
cmp
dec
pop
mov
inc
cltd
inc
mov
push
and
fdivrl
pop
nop
jbe
mov
stos
out
jnp
ljmp
xchg
fistl
lahf
mov
or
cmp
test
arpl
clc
gs
aaa
lret
xchg
push
jp
xor
popf
inc
lds
fcom
cmc
fwait
mov
sub
add
enter
xor
ficomps
shll
jnp
lea
mov
sub
imulb
xchg
pop
push
repnz
aas
xchg
and
in
stc
push
xchg
sbb
mov
xchg
cmp
dec
pop
lods
sbb
mov
or
or
cmpsb
aas
cwtl
rorb
adc
jge
in
cmp
mov
push
cwtl
loop
jne
repz
cli
stos
insb
and
pop
mov
call
mov
jae
scas
hlt
mov
mov
xor
mov
rcll
lahf
stc
cli
outsl
cmpsb
adc
xor
popf
lods
xchg
cmp
iret
roll
and
test
xor
inc
cmp
fcoml
lea
pop
ss
in
cmc
pushl
push
jo
pop
loop
push
ret
sahf
jmp
bound
sub
lea
lock
dec
arpl
rorl
popa
jne
es
out
mov
cmpsl
mov
aas
loopne
stos
and
pop
pop
mov
or
imul
pop
arpl
arpl
rolb
stos
and
movsb
stc
in
lahf
dec
in
jbe
jns
test
mov
jg
push
pusha
inc
and
hlt
pop
jbe
fdivl
mov
in
xchg
mov
jmp
and
es
fmulp
cmpsb
aad
and
testb
jbe
cld
mov
imul
movsl
lahf
gs
adc
add
cmpsl
aam
dec
addr16
stos
arpl
xchg
sbb
inc
flds
iret
sti
mov
pop
jb
pop
repz
dec
adc
xor
adc
stc
jbe
mov
fnstenv
out
mov
sbb
and
xchg
insb
aaa
in
sbb
lret
in
cmp
and
push
imul
add
nop
push
xchg
sbb
stos
mov
xchg
cwtl
movsl
mov
ror
pop
jl
pop
cwtl
movsl
mov
popa
cmp
pop
je
and
out
inc
and
cmp
add
jnp
dec
dec
mov
ret
loope
cmp
adc
mov
jecxz
sar
mov
divb
movb
into
cmp
inc
popa
sub
cmp
add
inc
popa
pop
shl
sti
lods
pop
enter
jbe
adc
mov
dec
fldcw
and
lock
jge
dec
dec
xor
jmp
push
fucomp
int3
es
cmp
mov
adc
adc
and
dec
hlt
gs
jmp
sbbl
push
loopne
aad
push
insl
into
fwait
addb
insb
and
cli
shr
std
inc
sbb
mov
dec
sub
xor
add
out
or
loopne
push
xor
dec
hlt
loop
mov
sbb
push
pop
mov
inc
testb
and
mov
cs
insb
into
cli
xor
or
js
xlat
mov
xor
ret
add
inc
gs
push
and
aam
add
loop
repnz
fwait
mov
add
or
sub
cwtl
movsl
lods
xchg
inc
xchg
test
fcoml
dec
pop
sub
push
mov
push
or
sahf
add
das
popf
ja
mov
out
mov
or
int3
pushf
lret
into
or
and
cli
mov
int
inc
fisubl
push
fiaddl
add
mov
enter
sti
push
mov
orb
fdivr
xchg
cmp
sub
cld
jl
inc
pop
jmp
lahf
cmp
pop
arpl
xchg
jbe
mov
xlat
insb
fidivrs
jnp
pop
mov
ret
cs
loopne
stos
fs
scas
insl
orl
icebp
in
lcall
and
out
mov
jmp
jmp
orl
je
pusha
out
mov
push
int3
xor
or
out
mov
int3
jg
movsl
mov
jae
adc
fcmovu
and
ljmp
sti
stos
loopne
sbb
jecxz
insb
hlt
mov
insb
and
addr16
mov
add
mov
inc
ficompl
jb
adc
sub
cmp
dec
jp
icebp
mov
movsl
mov
test
inc
jge,pn
jo
pop
ret
cmp
mov
and
adc
ja
cs
adc
es
xchg
cmc
lds
xchg
insb
enter
pop
outsb
push
in
adc
les
mov
xor
jnp
lds
cld
cmp
pusha
fxch
pop
lahf
rcr
mov
lea
mov
sub
shll
in
outsl
test
fs
out
cmpsl
jno
mov
xchg
sbb
dec
sahf
inc
xchg
jle
push
enter
outsl
popf
jnp,pt
lea
mov
push
fcoms
movl
int
mov
in
repz
add
scas
notb
out
or
xchg
pop
cs
call
jae
pop
xchg
and
js
sbb
scas
mov
mov
ja
or
mov
xchg
pop
stos
mov
pop
sbb
xchg
sbb
mov
rol
movsl
filds
xor
dec
dec
push
iret
sub
mov
jmp
pop
pop
xor
lcall
rcl
repz
sub
mov
jecxz
mov
cltd
jbe
lods
mov
lods
sbb
cmpb
enter
and
mov
fmulp
lods
icebp
inc
pop
adc
daa
pop
jle
adc
ss
aas
mov
stc
inc
xchg
adc
push
xor
or
push
cvtpi2ps
jl
lret
xchg
inc
add
stc
adc
sbb
outsb
push
jb
push
ds
mov
sub
push
es
cli
sub
aas
int
lds
and
orl
inc
pop
mov
push
mov
pushl
scas
xor
in
arpl
cld
int3
push
and
adc
mov
jno
fisubl
cmpsl
cld
orb
sarl
inc
mov
cltd
and
cmc
pop
sbb
sbb
mov
push
jecxz
mov
lods
inc
dec
adc
movsl
push
test
xchg
add
lret
xchg
or
int3
pop
outsb
pusha
insl
mov
dec
add
mov
jns
push
jge
stc
xor
pop
test
add
jb
inc
fs
scas
test
adc
divl
adc
mov
inc
testb
pop
flds
dec
call
sbb
in
fsubs
mov
ljmp
cli
jmp
cld
mov
notl
lret
pusha
pop
repz
inc
lcall
push
in
xchg
mov
pop
add
cltd
pop
mov
xchg
shr
cmpsb
fldenv
insl
addb
dec
xchg
or
push
leave
adcb
sbb
and
mov
aad
mov
es
sbb
inc
xor
aad
gs
dec
stc
add
cltd
pop
rcr
pop
xor
mov
in
fiaddl
test
cmp
je
dec
mov
in
lcall
mov
ret
xor
push
mov
outsl
adc
or
xchg
inc
inc
xor
jl
mov
cmp
jmp
push
cltd
js
lcall
xlat
test
jbe
jno
adc
movq
insl
fwait
ds
ror
cmp
or
jmp
xorb
das
mov
add
dec
mov
inc
dec
dec
mov
repnz
dec
push
stos
adc
iret
mov
into
and
inc
xor
sbb
popa
jo
or
pop
stos
repz
and
ja
test
adc
xor
and
ficompl
js
pop
add
std
movsl
jno
pop
xchg
mov
in
into
cmp
loop
push
nop
add
mov
and
jecxz
inc
popa
andb
testb
pop
lods
imul
ljmp
mov
fdivp
push
mov
cmpsb
mov
outsl
test
movsl
out
int3
sbb
add
mov
insb
je
jnp
loop,pn
push
dec
out
das
sbb
sub
inc
pusha
cmp
xchg
push
shr
jge
test
mov
adc
and
popf
inc
add
and
pop
pop
cmpsl
mov
sbb
lods
and
aad
inc
pusha
pop
mov
jne
jmp
orb
daa
pusha
test
mov
bound
or
and
xor
add
loopne
fnstcw
adcl
dec
cs
fsqrt
lock
les
imul
repnz
push
push
mov
popf
scas
add
mov
and
fsubl
ret
or
xor
and
mov
mov
xor
loopne
int3
sub
test
jmp
addr16
imul
sub
jg
lret
in
test
or
or
jmp
pop
or
dec
test
jge
and
cmp
mov
push
and
sub
insb
jo
leave
mov
mov
sarb
dec
adc
paddw
push
dec
arpl
dec
imul
or
mov
push
sub
adc
and
jae
sbb
inc
nop
xchg
fisubrl
shl
mov
push
mov
xchg
ret
mov
inc
fadd
sub
mov
in
lods
divl
dec
pop
push
ret
aad
out
fwait
jne
rclb
mov
sub
xlat
icebp
sahf
mov
jns
orb
sub
shlb
xchg
sbb
push
jno
andb
data16
cmp
or
out
push
xor
inc
dec
mov
cli
add
faddl
pop
sbb
sub
lods
addb
xor
pop
fs
int3
daa
inc
and
push
pop
or
mov
loope
nop
daa
popa
mov
pushf
mov
test
jne
push
mov
in
fwait
sbb
xchg
outsb
in
jecxz
adc
or
adc
jb
ret
in
out
mov
jae
adc
mov
mov
scas
dec
jne
je
mov
mov
cmpb
punpckhwd
or
mov
jmp
cmp
mov
js
mov
mov
leave
jo
sbb
push
mov
pop
add
sub
push
pop
mov
jle
lcall
jns
sahf
imul
int3
push
mov
repnz
push
dec
nop
stos
out
lock
les
inc
imul
in
ret
repnz
sbb
xchg
jns
xor
or
aaa
shll
in
xor
hlt
sub
repnz
push
cmp
xchg
cwtl
adc
jo
mov
jns
mov
push
mov
jnp
fwait
or
sbbl
icebp
fdivrp
test
add
cmp
jns
or
mov
in
lret
pop
xor
inc
lcall
je
and
int
mov
test
int
stos
scas
into
leave
mov
xchg
dec
les
inc
dec
test
fsincos
mov
adc
into
xchg
fadds
mov
divl
xor
push
cmp
and
add
and
cwtl
sub
popa
mov
mov
xor
mov
xlat
sbb
adc
sub
cmp
pushf
jmp
orl
cld
jno
out
or
push
repnz
inc
push
xor
lods
jns
xor
mov
xchg
inc
out
je
mov
mov
mov
mov
or
pop
and
sahf
adc
outsl
pop
out
xchg
pop
adc
push
mov
xor
imul
lahf
stos
sarb
lret
dec
repz
pop
inc
stos
sti
idiv
es
push
mov
xchg
lock
fistpl
int3
imul
and
adc
mov
ret
fisttpll
stc
out
movsl
rolb
inc
cmc
lds
jo
stos
and
adc
loopne
stos
lcall
aaa
jne
test
mov
pop
nop
test
xchg
ss
outsl
jmp
mov
into
ljmp
push
push
movb
dec
lods
aaa
sti
ljmp
bound
ljmp
outsb
loopne
lock
clc
aam
int3
xchg
xchg
or
clc
std
jecxz
cltd
and
fidivl
cld
aaa
mov
dec
mov
test
movsl
pop
fildll
adc
aad
stos
sub
leave
mov
popf
push
jg
cmpb
pop
jno
sub
cmc
lods
cltd
int
adc
adc
inc
dec
mov
mov
cwtl
shlb
pop
xchg
movsl
sbb
sub
decb
mov
xchg
stc
add
popa
dec
and
push
cmp
mov
rcrl
xor
jb
in
cmpsl
mov
adc
adc
cmp
int3
jmp
nop
sbb
sbb
jae
dec
lods
call
in
mov
and
or
and
clc
jge
nop
cmp
ret
loop
dec
mov
and
into
shl
xchg
cmp
enter
fadd
sti
aad
out
sbb
in
mov
popa
imull
mov
lret
dec
or
mov
addl
cmpsb
das
add
dec
push
cltd
mov
mov
push
lahf
mov
add
push
inc
cmp
movsb
jo
repnz
or
sbb
ror
imul
pop
push
flds
sbb
jle
mov
fwait
xor
mov
mov
lods
scas
cmp
adc
test
addr16
test
pop
cmp
fs
cmp
push
std
lods
jno
xor
in
pop
leave
pop
xor
movsb
in
push
leave
push
inc
int3
mov
push
lcall
and
adc
xchg
fcmovne
push
je
orl
fs
ret
xor
inc
jl
in
adcb
add
mov
ret
sub
dec
xlat
fsubp
xchg
roll
xchg
hlt
lea
in
mov
js
xchg
stc
ret
loopne
cltd
in
insl
pop
dec
lret
int3
push
fs
les
push
je
scas
sub
push
xor
xchg
mov
xor
testl
dec
icebp
in
sbb
xor
sub
inc
xchg
or
in
jmp
xchg
sbb
xchg
pushf
or
arpl
mov
inc
jl
push
std
inc
loope
mov
fst
stos
jmp
mov
mov
push
jle
dec
xchg
sbb
pminub
adc
jp
pop
loope
add
fs
stos
dec
pop
dec
xchg
sub
test
rolb
setno
push
xchg
sub
int3
rolb
mov
inc
dec
aad
mov
lea
xchg
fld
out
ss
in
mov
sub
xor
scas
out
pop
push
popa
in
ja
mov
dec
ds
pop
mov
push
push
xchg
imul
xchg
cmp
and
sub
in
mov
movl
sub
push
mov
mov
outsl
sub
dec
lahf
sti
jno
test
cmp
je
nop
mov
outsl
jl
out
adc
mov
sub
mov
int3
stos
cwtl
inc
or
jmp
iret
sbb
cmp
push
cmp
mov
push
mov
rcll
inc
imul
inc
adc
xchg
pop
imul
sarb
fs
jp
push
pop
lods
xchg
les
hlt
push
push
or
add
pop
push
xchg
aam
pop
mov
jecxz
lds
aas
out
rcrb
mov
std
pop
loop
cmp
sbb
adc
into
push
pop
ret
push
mov
jp
lcall
sbb
mov
jns
jbe
jbe
out
popa
ret
dec
or
xchg
shr
fs
adc
and
call
sahf
adc
fucomip
xchg
scas
ljmp
into
aam
dec
pushf
clc
repz
dec
fcmovbe
cs
cmp
testl
ret
aam
and
xchg
push
inc
push
push
jge
mov
mov
inc
inc
or
std
sbb
push
movsl
into
inc
cmpl
jge
pop
mov
pop
mov
add
sbb
xchg
add
pop
sbb
int
js
out
pusha
dec
dec
es
inc
dec
lret
sub
test
iret
xchg
jae
iret
sub
ret
mov
in
dec
add
test
sbb
jne
mov
out
mov
sbb
jp
js
add
dec
sahf
scas
leave
sar
mov
je
shr
fcmovne
jecxz
xchg
insl
cmp
jb
mov
jno
mov
xchg
push
stos
cmpsb
or
ljmp
pop
int3
push
andb
call
dec
cmpsl
inc
out
repz
jae
xlat
cmpb
jmp
into
xchg
pop
pop
dec
repz
movsb
int3
mov
hlt
jge
jae
inc
aam
ret
loope
fistps
ffreep
xor
adc
pop
push
lock
popf
push
lcall
out
cld
xchg
ljmp
xchg
stos
cmp
mov
push
loopne
inc
jl
notb
nop
mov
xchg
sti
push
addb
cmp
fisubrl
repnz
xchg
sbb
outsb
jge
lret
subb
jmp
pop
out
mov
jns
and
mov
sbb
dec
loopne
adc
pop
lock
sub
aad
imull
lods
sarb
andb
fmul
out
cmc
jns
shlb
aaa
sbb
in
mov
or
dec
mov
repnz
ret
push
sub
or
or
stos
xchg
sbb
scas
ds
mov
xor
pop
dec
xchg
pop
jo
dec
sub
cmp
insb
pop
mov
pop
stos
sub
mov
rcrl
inc
mov
inc
mov
ljmp
xor
push
lret
addl
arpl
ljmp
out
pop
clc
dec
outsb
xor
add
sub
xchg
mov
rclb
mov
mov
sbb
inc
ja
pop
xor
add
inc
inc
mov
ss
dec
mov
out
out
insl
idivb
les
inc
roll
mov
loop
cmp
pop
mov
jno
movsb
mov
ss
xor
and
adc
sbb
clc
push
clc
mov
cwtl
sub
lahf
xor
ret
inc
adc
jmp
pop
movsb
cmp
stc
mov
and
ret
out
mov
inc
cmp
test
les
jno
adc
je
ljmp
mov
mov
or
stos
xor
pushf
daa
iret
cmp
jmp
adc
lcall
test
shlb
push
push
push
mov
jb
lods
pop
inc
pop
adcb
in
pusha
xlat
sub
add
gs
pop
jns
cltd
pop
mov
cmp
xor
popf
out
rolb
test
pop
pop
dec
jmp
jmp
mov
mov
leave
and
ret
sub
jns
jnp
aad
dec
sarl
pop
imul
or
scas
insl
push
mov
daa
xchg
outsb
sub
xchg
dec
lcall
pushf
insl
orl
loop
jle
cmp
fildl
sbb
mov
ficoms
out
dec
jmp
inc
pop
sub
bound
in
cmpb
xchg
xchg
xchg
and
fsubrl
scas
std
loop
clc
mov
xchg
shrl
xchg
sbb
add
jle,pn
pop
call
pop
add
nop
daa
mov
out
adc
xor
test
lods
test
mov
pusha
jl
mov
sub
cmp
xor
out
and
cmp
scas
aam
data16
mov
pop
std
jl
adc
cmp
pop
aam
fisubl
mov
js,pt
push
int
fsubs
insl
mov
add
xchg
gs
mov
and
mov
out
push
and
arpl
shr
pop
outsb
jbe
lea
add
int3
jbe
adcl
pop
dec
into
lds
loopne
outsb
jnp
push
xor
pop
in
loope
insb
jecxz
aaa
iret
cwtl
out
addb
mov
pop
jp
jno
mov
aam
inc
jbe
jg
ds
pop
fs
pop
xchg
mov
add
mov
mov
lcall
outsb
and
mov
xor
lret
add
lret
mov
into
outsl
in
sbb
lods
shll
inc
inc
shlb
dec
pop
pop
cmpsb
inc
cwtl
test
in
ja
jo
pop
sarl
sbb
mov
jge
fists
cmc
adc
adc
or
ss
push
add
cld
call
inc
sbb
cld
pushf
mov
mov
inc
sarl
inc
out
push
stc
dec
in
xchg
sub
filds
les
into
shlb
lods
mov
adc
das
sahf
xchg
xchg
or
jns
push
push
mov
cld
out
pop
into
mov
xor
pop
cmp
xlat
inc
adc
xor
aam
sub
sbb
popa
in
jno
dec
popf
pop
insb
ja
int
or
pop
outsl
outsb
adc
cmpsb
cmp
sar
and
xlat
push
les
popf
nop
adc
dec
sbb
add
mov
and
mov
and
dec
lea
add
mov
dec
jb
jno
movsb
mov
movsb
mov
sub
push
and
pop
sahf
or
testb
in
ja
inc
or
ret
pusha
jne
loop
mov
or
lcall
dec
les
or
mov
sub
pusha
mov
sbb
pop
inc
cmp
lods
or
xchg
push
cmp
jae
enter
es
jg
mov
cmp
mov
or
nop
daa
pop
xchg
shlb
fucom
pop
fxch
pushf
dec
aam
push
add
inc
sbb
je
add
sub
imul
pop
jne
out
jb
je
cltd
pusha
xor
mov
stc
dec
mov
call
sbb
das
jae
mov
lea
loopne
ljmp
cmp
jle
dec
adc
ds
fiaddl
aam
add
xchg
mov
pop
jbe
cmp
pop
aad
push
repnz
repnz
cmp
dec
fsubr
and
sar
push
andb
pop
imul
pushf
push
push
imulb
cmpsl
popf
scas
pop
gs
add
mov
push
mov
test
or
xor
mov
jnp
gs
or
xchg
mov
mov
jp
lea
mov
arpl
out
shll
das
pop
insb
xchg
in
dec
sbb
jl
stc
lods
fwait
hlt
xorl
xchg
lret
ss
ss
mov
xchg
sbb
iret
rcrl
sub
xor
pop
and
push
jmp
xchg
and
xor
addr16
mov
mov
dec
aaa
sbb
test
push
jmp
cmp
inc
cmp
outsl
adc
xlat
popf
inc
loop,pt
in
into
ja
xor
fcoms
hlt
cmp
or
loopne
push
movsl
sbb
adc
outsb
push
mov
jne
int
inc
jne
jle
xchg
push
out
jl
sarl
sahf
dec
push
adc
pop
ja
xchg
cmp
xchg
in
lret
sbb
fisubs
test
scas
mov
xor
pop
sbb
insb
inc
mov
or
ret
icebp
test
aas
pop
fbld
mov
jle
aas
int
pop
in
fnstsw
push
popa
add
pop
bound
or
sub
aad
test
setne
push
jno
xchg
sub
outsb
jp
mov
xor
int
push
movsl
test
and
or
fdiv
insb
xor
in
or
xlat
inc
jae
push
ret
fstpt
xchg
jnp
out
sub
adc
cs
icebp
and
push
out
shrb
pop
push
sbb
sahf
test
add
movsl
jne
xchg
into
mov
mov
popf
aad
inc
gs
es
test
jecxz
inc
add
xchg
mov
ret
and
mov
test
mov
xchg
jb
jp
sti
xchg
adc
out
ret
push
dec
test
or
dec
rcrl
inc
loop
gs
jg
stc
loop
xor
sub
xchg
arpl
add
fmul
lea
pushf
cmpsl
mov
test
call
inc
imul
test
iret
cli
mov
push
sub
pop
inc
loope
negb
or
sbb
mov
or
push
loope
loopne
cmp
ficoml
in
rcrl
add
mov
stos
fwait
sub
mov
ljmp
fmuls
test
inc
out
cmp
xchg
xchg
enter
cmc
test
addr16
sub
cli
int3
adc
mov
mov
xlat
clc
fmuls
das
xchg
add
inc
jmp
ror
cmp
push
loopne
ret
push
sub
insl
cmp
jb
jge
mov
add
push
sahf
pop
subl
lret
mov
clc
adc
inc
add
mov
cmp
adc
out
dec
add
mov
or
sub
inc
ret
xor
in
inc
repnz
mov
movsb
xchg
out
shrl
xlat
in
ret
push
lret
push
sub
sub
push
xchg
outsb
cmp
push
mov
xor
in
scas
jo
shlb
enter
dec
or
mov
stc
in
stc
lahf
and
fsubs
ljmp
dec
sbb
fwait
or
adc
pop
out
xchg
je
fwait
jge
nop
pop
mov
ret
xlat
jnp
add
and
mov
jne
cmpsl
movsl
stc
or
orb
xchg
stos
sbb
insb
pop
ret
add
mov
sbb
cld
insb
jp
and
adc
ds
add
mov
repnz
outsb
mov
dec
stos
scas
and
repz
fldcw
cwtl
sti
push
mov
xchg
and
roll
sahf
pusha
sub
shll
pop
or
cmp
leave
dec
js
push
pop
mov
and
inc
fists
xchg
cmp
sbb
mov
std
mov
ret
jnp
ds
push
rcrb
lods
jns
push
xchg
inc
in
push
sbb
nop
adc
sbb
enter
pop
roll
push
arpl
icebp
sub
and
into
fadds
inc
and
jno
cmpsl
mov
and
mov
jbe
add
test
xchg
pop
xchg
cmp
pop
pop
jg
lret
jge
mov
dec
std
fistps
popa
push
icebp
xor
adc
add
mov
lret
mov
add
decb
add
cmc
jl
int
adc
mov
pop
adc
push
loopne
mov
or
ljmp
icebp
dec
mov
aaa
xor
aas
push
sbb
adc
mov
mov
jge
mov
mov
mov
push
jbe
cmp
outsb
push
mov
cmp
test
cmp
in
sbb
cli
cld
mov
dec
je
pop
lea
or
push
sub
add
push
pop
pop
fildl
stos
dec
les
mov
lock
loopne
neg
mov
in
cwtl
scas
dec
xchg
mov
ficoml
adc
pop
aas
out
scas
jl
xchg
lods
inc
movsl
dec
or
push
sbb
jbe
mov
popf
fs
pop
add
dec
xlat
mov
loopne
inc
push
jae
stc
jle
cld
mov
push
cmp
or
sub
sub
jae
cmp
push
cmp
fnsave
pop
push
mov
js
out
gs
cmc
push
test
mov
inc
adc
shl
adc
mov
push
push
push
addl
loop
mov
mov
icebp
or
mov
cmpsl
pushf
lret
jae
aam
icebp
mov
cld
xchg
and
dec
or
lods
inc
jne
xchg
std
stos
arpl
mov
and
je
cmp
mov
call
push
mov
mov
dec
jae
xor
test
orl
subl
rcrl
xchg
dec
rcrl
mov
ss
in
stos
push
cltd
and
pop
dec
inc
inc
push
scas
mov
or
aam
sub
mov
xorb
sbb
js
hlt
mov
push
xor
fldenv
scas
pop
rcrl
insb
test
sub
push
test
loop
sbb
scas
pop
movsl
sub
sbb
les
cli
lods
neg
jbe
push
cmp
mov
loopne
mov
fcoml
rcrl
out
bsf
repnz
inc
push
sbb
out
mov
inc
lds
mov
pop
shlb
jle
adc
cmp
fnstcw
sub
sub
push
cmpb
mov
xchg
cwtl
dec
dec
inc
cltd
mov
pop
cmp
int3
dec
mov
icebp
lds
add
jp
pop
mov
daa
jmp
ljmp
mov
pop
repz
lock
aam
adc
pop
lahf
adc
jle
test
mov
dec
sub
adc
test
dec
imull
insb
scas
in
xor
inc
mov
fadd
add
xchg
pop
add
sub
sub
cmp
out
add
pop
insb
ljmp
cmp
dec
or
xchg
cmc
mov
shufps
or
jmp
push
ljmp
ja
mov
loope
aad
xchg
test
adc
sub
bound
test
aas
adc
or
inc
jmp
outsl
inc
pop
sub
inc
and
pop
imul
inc
loop
aas
mov
push
cmpsb
mov
xchg
aam
leave
inc
and
and
imul
xchg
pop
in
dec
push
outsl
mov
xchg
xchg
pop
cmp
ret
addr16
add
pop
mov
mov
pushf
jnp
and
cmp
scas
push
lret
jp
shll
xchg
cld
push
lods
insb
and
rorl
pop
jnp
aaa
mov
fadds
imul
rol
jecxz
rorl
in
arpl
stc
jnp
xor
arpl
cmp
lea
ret
aaa
mov
jbe
arpl
xchg
inc
pop
ja
stos
cli
shrb
jae
push
addr16
insb
ja
mov
sbb
mov
mov
vshufps
scas
xchg
adc
aad
outsl
adc
xor
lods
push
ret
pop
mov
jb
hlt
adc
loop
jae
loope
cwtl
adc
xchg
inc
sub
aam
add
jnp
mov
sbb
ds
push
scas
adc
dec
mov
add
lock
enter
fldl
jno
xchg
dec
adc
sub
xchg
or
sub
mov
mov
dec
jge
jmp
dec
ljmp
popf
jecxz
lods
xor
and
pop
push
push
pop
mov
inc
in
stc
jb
fwait
pop
rol
movsb
gs
dec
shrl
dec
inc
repz
shlb
dec
out
mov
ret
jl
inc
in
sub
sub
adc
add
icebp
pop
inc
in
lret
or
xchg
add
movsb
pop
sbb
and
mov
pop
push
or
xchg
std
gs
sbb
test
jle
clc
fldenv
xor
push
adcl
mov
mov
fs
jnp
ret
mov
cltd
clc
iret
mov
inc
stos
idivb
lods
or
lds
into
pop
in
add
mov
jecxz
and
jne
ja
sbb
push
mov
mov
test
mov
pushf
mov
xchg
mov
mov
or
movsl
repnz
out
jg
xchg
les
lret
leave
cli
jb
adc
pop
xor
sbb
ja
mov
mov
adc
xor
mov
in
or
dec
dec
test
outsl
mov
jl
roll
push
or
mov
lods
js
es
sbb
shll
clc
loopne
sahf
sbb
inc
fidivrl
xchg
sbb
mov
mov
push
repz
loope
add
int3
das
mov
ficoml
sub
int
stc
jecxz
pop
inc
insb
push
adc
dec
cwtl
adc
in
imul
outsb
sbb
ja
lret
dec
hlt
or
sub
lret
rcrl
push
sub
push
push
or
clc
std
loop
xchg
out
pop
loop
inc
ucomiss
or
cli
dec
cmc
movl
int3
cmp
sti
ds
lods
push
popa
lods
push
cmp
imul
jp
sbb
mov
sbb
je
xchg
mov
fwait
xchg
dec
jno
sbbl
sbb
rep
cmp
cmp
repnz
inc
sti
lock
mov
jb
cmp
shll
out
outsb
scas
mov
std
pop
and
dec
ret
sbb
test
or
mov
insb
lods
push
adc
adc
inc
iret
cmp
sahf
pop
ljmp
xor
icebp
or
dec
sub
xchg
pop
sahf
mov
xor
je
xor
mov
dec
mov
push
mov
jb
or
ret
into
outsb
xchg
pop
adc
dec
imul
dec
lret
insb
adc
movsb
lea
fdivr
jp
call
inc
arpl
cli
and
fcmovu
movsb
mov
jle
mov
mov
mov
rorl
ja
cli
pop
loope
les
jno
rol
push
or
jbe
add
pusha
cmp
sbb
inc
push
es
lods
shll
iret
sub
pop
ss
adc
jg
adc
notl
sti
push
mulb
sar
popa
outsb
ja
or
xchg
jmp
push
sbb
int3
icebp
xor
jg
sbb
ss
inc
cmovno
in
mov
jnp
into
push
or
ljmp
rorb
ds
addr16
lea
sbb
shll
xor
or
mov
sub
xchg
xchg
shll
inc
es
aam
fcomp
data16
push
adc
or
inc
pop
arpl
sarb
pop
xor
jns
cmp
ficompl
and
addb
in
lcall
xchg
inc
xor
adc
jns
imul
jmp
cmp
add
xor
dec
out
mov
cltd
mov
out
mov
rcrb
fcomip
mov
fistl
mov
and
and
mov
jne
inc
mov
inc
ret
push
fdivr
ficompl
lock
je
test
push
or
jb
loope
xchg
jle
or
push
stc
mov
jmp
popa
jnp
cmpsl
add
xchg
push
or
shll
xor
dec
jl
xor
pop
xchg
and
lcall
outsb
sbb
insl
or
std
inc
mov
sub
adc
xor
push
mov
in
sub
mov
sbb
es
cmp
jns
and
or
push
sub
sbb
loop
or
ret
outsb
and
add
inc
cmp
dec
pop
lods
inc
mov
dec
xlat
shrb
push
lods
sbb
shr
and
jmp
movsb
add
gs
mov
jbe
shll
popa
stos
inc
dec
insb
jae
sbb
std
fcoml
inc
adc
sub
test
pop
mov
cmp
bound
sbb
xchg
aad
cs
pop
xorl
scas
jle
mov
cmp
jl
outsl
fcmovnu
js
cmp
fs
inc
inc
pop
mov
scas
mov
hlt
call
adcb
push
lods
jne
stc
inc
adc
mov
loope
adc
or
pop
xor
pop
or
xchg
fnstsw
xor
loope
cmp
test
pushl
iret
xorb
add
adc
fists
adc
mov
daa
sbb
repz
shlb
in
aaa
mov
mov
sbb
shl
dec
lcall
stos
xor
into
jmp
shrb
xlat
inc
js
adc
test
outsb
insb
xchg
xor
add
daa
stos
in
sbb
pop
enter
mov
insb
cld
xchg
and
adc
aas
mov
mov
add
cmp
mov
add
mov
rcr
xchg
lret
fldlg2
inc
js
mov
xor
lods
dec
in
sahf
popf
pop
sbb
push
outsl
outsl
pusha
xor
ja
mov
adcb
arpl
imul
loop
mov
push
data16
push
mov
bnd
icebp
aad
sbb
jp
and
adc
xchg
add
dec
popl
out
xor
das
pop
pop
ljmp
mov
xor
xchg
xor
test
push
enter
xchg
xchg
mov
out
mov
mov
pop
xorb
mov
inc
lea
mov
xorb
xchg
daa
push
out
lock
cmc
fistpll
ficoms
push
sbb
xchg
pop
cmp
aam
mov
inc
jb
popa
xor
repnz
sbb
mov
mov
mov
jb
pop
mov
mov
rclb
arpl
xor
dec
movsb
xchg
std
xchg
bnd
push
inc
and
sbb
nop
insl
fmulp
push
and
add
xor
ja
je
outsb
sub
int3
test
mov
std
lods
addr16
dec
les
push
dec
lock
fsts
test
fstps
and
mov
push
ljmp
icebp
pop
mov
mov
sbb
stos
add
mov
sub
imul
push
je
and
push
sub
mov
cltd
adc
ds
add
pop
mov
xor
xor
cmpsl
push
pop
jae
pop
inc
ss
jp
push
and
or
pop
cmp
cmpsl
lcall
inc
test
pop
js
ret
jns
rorl
int3
clc
inc
gs
loop
divb
mov
or
pop
ror
sbb
jp
jb
xchg
pop
test
adc
cmpb
inc
xchg
xchg
loop
js
push
push
addr16
lret
adc
scas
cwtl
inc
dec
adc
push
or
push
push
insb
inc
xor
pop
fs
and
std
movsb
aaa
fdivrs
push
jno
les
rorl
ss
aas
and
or
push
or
adc
xorl
dec
jle
mov
and
mov
int3
mov
js
xor
push
pop
out
mov
xchg
lahf
pop
mov
mov
push
loopne
or
addl
test
aad
bound
sbb
repz
xor
lret
sti
outsl
xchg
jns
dec
insl
test
ja
movsl
push
push
dec
push
xchg
jl
xchg
xchg
jns
insl
cmpsl
rol
outsl
ret
cmp
sbb
int
ss
out
test
cmp
mov
ds
pop
inc
pushf
idiv
mov
lahf
cmpsl
push
dec
movsl
or
mov
stc
push
push
icebp
jno
cmp
aaa
and
mov
sbb
stos
sbb
add
mov
adc
call
push
add
loope
int
out
mov
rclb
inc
fimuls
lods
mov
mov
mov
nop
add
or
add
jo
sub
imul
dec
pop
push
out
sbb
and
lock
dec
jecxz
sahf
jb
pop
rcl
fpatan
arpl
pop
mov
add
jl
aas
dec
daa
outsl
cmp
push
lahf
inc
push
mov
cmpsl
psadbw
pop
push
dec
inc
pop
insl
das
ds
in
ret
adc
mov
and
sti
jne
or
dec
xorb
sub
inc
inc
jl
push
roll
stc
and
cwtl
ret
les
lcall
adc
mov
mov
or
rcll
xchg
mov
mov
mov
jb
int3
jae
jae
adc
data16
or
sarl
add
cmp
das
adc
sbb
cld
mov
mov
cs
mov
mov
enter
jae
andb
mov
xorl
fldenv
jae
xchg
pop
cli
test
and
xchg
clc
adc
mov
dec
pushf
cmpsl
sarl
test
mov
pop
lcall
daa
xchg
jl
loope
mov
into
and
int
inc
icebp
je
ret
jne
push
out
fdivl
std
sbb
adc
cmpsl
add
div
icebp
inc
je
mov
dec
or
cmp
fistl
push
into
lret
fldcw
outsb
mov
outsb
or
fsubrl
dec
push
or
or
or
cli
xstore-rng
cmpsl
ret
jmp
cmpsb
subb
push
inc
cmp
lock
lea
jnp
mov
mov
shll
push
xchg
insl
push
je
inc
nop
mov
scas
push
push
mov
mov
mov
popf
hlt
scas
mov
popa
push
call
mov
sub
pop
add
pavgw
mov
cs
daa
inc
outsl
loopne
movsb
dec
es
popl
fistps
xchg
xor
push
push
push
filds
lds
xchg
lret
xor
mov
jno
loopnew
out
xor
inc
iret
shl
jne
imul
sti
sub
or
inc
jl
clc
stc
xor
jg
lret
lods
and
out
aaa
mov
and
pop
faddl
xlat
push
push
push
xchg
mov
in
sub
mov
je
push
imul
sbb
xchg
cmp
incb
movsl
aas
cmp
iret
int3
into
addb
scas
mov
stc
data16
dec
pusha
inc
bnd
fistpll
loope
inc
inc
dec
mov
rcl
push
adc
dec
dec
fistl
aaa
in
pop
push
loopne
cltd
jo
xlat
pop
mov
js
sbb
popf
ret
sbb
outsb
in
test
cmc
sub
shll
lods
mov
add
out
test
out
movsb
je
xchg
out
xchg
mov
insl
adc
out
jo
pop
popa
xchg
stos
and
rorl
and
xor
stos
mov
je
add
xchg
aas
xchg
sub
jg
push
test
pop
xchg
je
jp
xor
iret
and
imul
dec
add
or
lahf
add
das
jmp
push
fisttpl
cmp
mov
mov
fcoml
popf
jne
adc
mov
jno
aam
bnd
xor
pop
iret
dec
incb
dec
arpl
push
movb
subl
and
dec
sub
sbb
pop
popf
inc
loopne
xor
dec
pushf
stos
sub
inc
pop
lea
sbbl
mov
or
or
mov
sub
and
sub
or
in
orl
aad
push
das
push
xor
xlat
idivb
daa
lods
rcll
push
lods
lods
add
ret
cmp
int
or
imul
enter
daa
lret
shlb
cmp
jecxz
pop
mov
mov
or
xlat
imul
push
cmpl
jns
dec
dec
subl
int3
inc
dec
push
mov
mov
out
adc
movl
scas
gs
ret
jae
and
leave
dec
sbb
push
xor
jle
mov
rclb
mov
popf
cmp
dec
add
out
stc
sbb
dec
gs
fcomps
icebp
shrl
xchg
cltd
lds
out
push
mov
jbe
stos
cmc
mov
adc
fs
sub
mov
sti
pop
lcall
and
mov
cmp
dec
push
pop
sbb
cmp
sub
xor
insl
aas
cltd
or
jno
add
dec
loope
sti
in
cmp
and
push
hlt
popa
repz
cs
bound
sub
push
bound
sub
scas
fmuls
sbbl
sub
sbb
inc
push
jns
lock
aas
sub
lock
mov
inc
and
pop
hlt
data16
push
lock
sbb
subb
dec
add
or
vmovlps
daa
sub
cwtl
inc
in
xchg
push
scas
sahf
inc
adc
and
xor
cwtl
fstps
pop
in
cs
add
and
cld
add
mov
ret
xchg
ret
and
dec
mov
testb
mov
cs
sti
and
sbb
lods
xor
mov
mov
enter
jle
aaa
dec
dec
imul
sub
call
cmp
movsb
fs
mov
inc
push
jo
decl
loop
test
add
outsb
outsb
push
lds
popf
xorb
inc
movsb
rcr
mov
dec
pop
add
aaa
or
sbb
mov
add
scas
int3
into
fdivrp
inc
add
add
cmpsl
xchg
cwtl
fisubrl
nop
cmp
pop
add
inc
or
in
inc
enter
lahf
push
dec
shl
rep
pop
inc
out
sti
lds
jp
leave
or
shl
sahf
and
jle
push
aas
add
mov
ret
mov
repnz
repnz
mov
out
cmp
jne
pop
dec
mov
inc
clc
ss
sbb
jnp
mov
jnp
mov
xor
packssdw
lcall
sbb
cld
mov
imul
fs
push
das
int
mov
mov
in
sbb
mov
cld
data16
sbb
sti
ret
lcall
insl
pop
adc
je
xchg
lcall
fdivrs
outsb
mov
insl
xor
mov
push
add
inc
unpcklps
cmpsl
add
loopne
sub
int3
dec
sub
and
jnp
in
stc
call
fs
imul
iret
mov
lahf
xchg
pusha
faddl
stos
cmp
dec
sub
dec
mov
arpl
adc
nop
cmp
sti
aas
adc
cmp
mov
cmp
clc
add
mov
stc
mov
mov
leave
das
gs
or
hlt
daa
xchg
or
jo
mov
fsubrl
mov
das
adc
and
jmp
testl
dec
into
aam
les
adc
push
add
jmp
sahf
inc
jge
xchg
or
cmpsl
pop
aas
push
mov
sub
push
mov
sbb
ds
lods
fadd
jge
xchg
adc
outsb
xor
je
adc
mov
inc
outsl
or
jo
pop
add
arpl
lods
insb
fstl
dec
xchg
dec
lock
sub
rcrb
mov
iret
push
das
jmp
dec
add
mov
and
out
push
and
movsb
jp
fcom
inc
ret
xor
push
test
push
push
fisttpll
mov
jl
sbb
mov
fldcw
rcrl
mov
outsb
xor
xorb
out
jo
bound
test
mov
data16
pop
push
mov
mov
sub
imul
dec
insl
lahf
xchg
push
pop
adc
test
movsb
pushf
xchg
cwtl
out
add
xor
aad
xchg
repz
addr16
inc
bound
sbb
and
jp
popa
rorl
sahf
loopne
in
dec
cmp
sarb
orl
pop
andb
bound
fldenv
iret
sbb
enter
mov
mov
bound
adc
les
push
outsb
lret
inc
in
push
in
push
test
out
sub
fwait
int3
insl
out
lea
je
insb
outsb
add
cwtl
pop
insl
clc
jne
sub
pop
test
cmc
jge
iret
sub
mov
sbb
push
jg
and
cwtl
sti
push
dec
or
pop
pop
pop
fdivrl
jecxz
xchg
fisttpll
cli
out
mov
pop
mov
pop
outsb
das
insl
scas
lret
lahf
or
popa
pop
pop
mov
inc
push
loopne
pop
jae
adc
cltd
mov
jmp
sbb
les
pop
sbb
xchg
add
in
js
jnp
sub
xor
xchg
adc
imul
movsl
test
mov
adcl
inc
xchg
jae
lret
cli
add
daa
fs
xchg
add
ja
popf
daa
xchg
in
jnp
jbe
sub
pop
pushf
pop
int3
mov
aad
lds
adc
lahf
popf
jp
lcall
aas
fstps
add
dec
pushf
ficomps
into
outsl
dec
scas
mov
insl
call
cld
or
daa
mov
jmp
insl
push
imul
pop
out
push
pop
adc
lds
aam
jg
sbb
aas
sub
adcl
cmpsl
jae
jmp
cmp
push
cmp
inc
push
add
sarl
mov
pop
test
pop
and
out
pop
lods
and
xor
mov
aaa
xor
add
jl
and
aas
jbe
fcompl
fisttps
adc
fdivrs
fsubrl
sub
insb
filds
fildl
or
bound
lahf
sub
adc
cmpsb
roll
cwtl
push
repz
loopne
pop
leave
in
fwait
adc
mov
mov
mov
repnz
xchg
mov
push
scas
mov
xchg
iret
mov
sbb
jle
mov
pushf
idiv
cmpsl
mov
pusha
inc
scas
add
sarl
xor
call
cmp
jle
and
adc
insb
out
mov
jbe
lds
add
mov
sahf
pusha
xchg
xor
mov
fldl
je
mov
add
mov
loop
xchg
rcrb
mov
push
sarl
leave
idivb
aaa
addl
fdivs
jg
xchg
push
shlb
pusha
loope
inc
push
and
lcall
push
and
test
loope
xchg
stos
out
cmp
cmpb
xor
cmpsl
pop
test
push
std
fs
scas
jle
in
dec
xchg
add
scas
lods
pop
push
mov
add
xchg
jo
ds
clc
dec
insl
inc
js
test
mov
xor
xchg
shll
push
out
movsb
mov
fwait
xchg
cmp
std
adc
jae
cltd
jle
fisubs
mov
movsl
jns
sub
fs
outsb
scas
sub
xchg
push
jae
fiaddl
inc
add
ljmp
cld
lret
push
push
ljmp
dec
or
add
lcall
cwtl
mov
movw
add
add
fsubl
cmp
add
scas
pop
pop
movsl
rep
mov
inc
pop
dec
out
pop
jmp
mov
or
bound
pop
sub
jmp
jo
jecxz
jmp
out
out
packuswb
lds
push
cltd
xchg
sbb
in
sti
fcmovnb
inc
ret
mov
shll
xchg
testb
enter
mov
jp
mov
lods
sub
mov
dec
rorb
loope
lods
das
lret
add
mov
aam
xor
cmpl
nop
in
sbb
xchg
cmc
jecxz
rcr
or
sub
xlat
add
and
xor
mov
mov
or
fcmovnu
and
pop
lahf
sub
sbb
movsl
js
cmp
or
dec
std
fs
dec
mov
jns
aaa
imul
fidivl
push
dec
mov
ret
dec
push
sahf
out
jb
mov
dec
cli
rcll
imul
std
xor
rcrl
shr
out
mov
dec
mov
out
mov
add
xor
adc
outsb
pop
sbb
mov
stos
or
clc
adc
jl
pop
xchg
scas
shl
add
lea
mov
int
xchg
inc
leave
pop
push
aas
jns
leave
xchg
mov
jae
inc
out
xchg
dec
rcrl
mulb
jo
repz
xchg
stc
mov
stos
testl
test
cmpb
test
jg
cmp
cmc
mov
mov
nop
sub
andl
fsubs
movb
fwait
mov
xor
xchg
pusha
sbb
jae
jmp
mov
xchg
or
dec
lcall
xor
mov
pop
addr16
push
and
movhps
xor
pop
inc
inc
sbb
xchg
push
cmpsb
es
movsl
sbb
stos
or
lahf
lods
xchg
mov
sar
cmp
cs
mov
mov
sub
clc
add
movsb
mov
cmc
fsubs
jae
inc
in
lods
dec
mov
sbbl
sbb
repz
pop
jae
push
nop
xchg
jp
out
sub
mov
jg
out
push
mov
xor
push
push
ret
movsb
jnp,pn
rcrb
aas
div
xchg
aaa
add
repnz
sbbb
jmp
xchg
mov
and
sub
cli
push
popa
lods
cmpsb
sbb
sub
xlat
mov
daa
insb
pop
sar
sbb
pop
popa
outsl
stos
sub
jae
or
lcall
jg
or
ja
std
sbb
dec
mov
test
fidivs
pop
fildll
ds
sbb
scas
test
clc
loope
testl
jp
sti
stos
pop
xchg
aad
lea
icebp
dec
into
push
ret
cmp
add
jo
ds
inc
mov
mov
cmp
fwait
xor
and
adc
sub
cmc
test
cwtl
insl
lock
mov
shl
xchg
xchg
jecxz
pop
lcall
cmp
stc
push
xchg
mov
xchg
das
inc
or
aas
mov
cmc
sti
repz
jnp
icebp
arpl
iret
nop
inc
jmp
xchg
or
into
sub
jge
cmc
or
add
adc
sbbl
pusha
mov
out
jo
icebp
bnd
adc
mov
loop
jmp
or
mov
and
loop
shlb
push
sbb
push
in
or
cmp
lahf
xchg
cmp
adc
pushl
xchg
and
or
lret
pop
jle
mov
int3
ret
cmovne
mov
stc
inc
sub
or
mov
jnp
xor
adc
movsb
xchg
add
std
in
cld
lods
sbb
add
sti
dec
fwait
jne
out
test
mov
or
ja
jbe
loop
inc
mov
fldl
cmp
dec
in
push
pop
pop
or
pop
xlat
hlt
lea
sbb
adc
push
lcall
add
lcall
dec
adc
dec
xchg
dec
fistpl
leave
out
and
jnp
adcb
xor
shll
jb
mov
cld
imul
notl
xchg
xchg
pop
mov
loope
fnstsw
push
jns
cmpsl
imul
iret
mov
jg
cltd
scas
mov
cs
jno
xor
push
arpl
ficoms
shll
inc
jmp
cmp
pop
adcb
dec
mov
jle
outsb
push
jg
sbb
mov
lret
pop
sub
adc
mov
out
sarl
movsb
bnd
test
repz
pop
pop
lret
call
aas
sarb
adc
loope
jne
cli
sbb
push
out
mov
fisttpll
sti
test
or
add
sti
pop
lret
push
cmpb
scas
lock
cmpsl
add
mov
jb
movsb
rcll
pop
adc
bound
imul
lods
sub
inc
push
ss
pop
ljmp
xchg
in
movsl
xor
outsb
aad
jb
push
xlat
cli
int
ffreep
dec
push
icebp
sti
nop
loop
fnsave
inc
or
das
int3
cmc
jle
pushf
repnz
inc
cli
cld
cmp
out
jno
mov
sub
ret
mov
lcall
jne
inc
xor
std
cmp
les
cld
xchg
divl
push
pusha
in
les
xchg
addr16
lret
jg
fistpll
jge
inc
into
mov
js
test
ret
test
clc
or
mov
add
xchg
mov
ja
dec
add
in
repz
mov
inc
mov
mov
in
cwtl
aad
jmp
pop
addr16
mov
and
lret
shll
call
mov
adc
adc
dec
add
fnstenv
add
shlb
lea
sub
inc
xchg
cltd
sbb
jae
test
jae
inc
mov
test
shll
testl
std
jmp
xor
pop
add
mov
ds
test
and
mov
mov
push
sbb
push
and
in
jp
xor
sbb
dec
pop
nop
gs
adc
lahf
lds
push
pop
push
aas
int3
ja
jl
add
cmp
mov
and
mov
imul
cmp
les
mov
movsb
xchg
sar
jp
outsl
and
scas
aas
mov
arpl
push
insb
iret
outsl
adc
addr16
in
aas
mov
adc
loope
dec
stos
inc
xor
push
lods
and
clc
xor
dec
sbb
fsubl
ficoml
and
sub
enter
pop
sub
jmp
xrelease
in
cwtl
call
fnsave
inc
cmp
lock
testb
push
add
lea
lds
cwtl
dec
jmp
push
xchg
arpl
push
test
xchg
je
dec
lret
sub
mov
scas
inc
mov
xlat
push
mov
jnp
inc
and
dec
inc
cltd
sbb
xor
push
aam
xor
int
cmpsb
and
mov
test
scas
aad
imul
loopne
outsl
sub
pop
jp
lcall
mov
cmpsb
cwtl
inc
scas
ror
adc
sub
xlat
dec
fdiv
inc
je
stc
leave
xor
es
xchg
movsl
xchg
cmp
in
adc
xchg
xor
push
add
fmull
stos
pop
fstps
out
stos
sbbl
pusha
pop
sbb
outsl
or
sub
subl
popa
stc
mov
mov
out
push
negb
dec
push
inc
pop
inc
inc
sahf
das
movsl
sub
xor
test
loop
movsl
pop
out
xor
mov
testl
shll
push
adc
ljmp
orb
dec
and
inc
dec
and
add
jmp
push
fnstenv
pop
adcl
sub
rol
sar
inc
jb
jns
repnz
mov
leave
or
pop
test
or
lock
mov
xchg
cmp
push
sti
and
lods
push
add
mov
and
ficompl
lods
add
cli
xor
je
mov
adc
push
sub
or
loope
daa
dec
pop
arpl
cmp
daa
and
or
fmull
cmpsb
stos
imul
mov
fwait
jg
cltd
dec
popa
loop
stc
out
mov
xor
mov
mov
add
add
jle
jno
ret
mov
popf
dec
inc
xchg
es
clc
or
push
pop
leave
mov
mov
mov
scas
popf
aam
or
add
mov
repz
in
vorps
push
out
inc
enter
clc
js
push
mov
sbb
loopne
icebp
bound
loope
pop
jno
ss
addr16
push
dec
in
pushf
xor
popa
mov
xor
shl
mov
cld
dec
stos
mov
aam
test
movsb
dec
scas
and
iret
in
and
in
cli
imul
sbb
lea
add
pop
cmc
cmp
jle
jmp
cmp
and
jae
outsb
lret
cmp
mov
outsb
inc
and
adc
fldcw
stc
testb
testl
xchg
test
mov
ja
fistps
fs
imul
mov
dec
jl
jo
icebp
xchg
push
mov
cmpsb
add
sti
xchg
mov
int3
lods
add
inc
les
js
jnp
sub
adc
loop
mov
push
xchg
outsb
pushf
sti
or
popf
mov
xor
scas
xchg
orb
cmc
clc
daa
idivb
jns
fstpt
outsb
mov
lcall
inc
cmpsl
lds
inc
mov
xchg
mov
jo
wrmsr
clc
inc
call
jbe
loop
repz
lock
mov
in
inc
or
mov
push
leave
cli
jmp
fldl
in
mov
sbb
adc
out
mov
shr
jp
loope
and
aaa
and
imul
in
scas
jns
pop
push
mov
sbb
pop
push
mov
dec
sub
push
push
or
arpl
nop
xorb
test
cmp
mov
mov
movsb
call
mov
test
and
cs
fisttpll
ljmp
xor
in
sbb
cltd
add
pop
pmaxsw
jae
add
mov
add
jg
repz
push
stc
jp
cmc
std
adcl
inc
xchg
ret
loopne
cli
pop
dec
call
xchg
jge
orb
adc
add
loop
and
out
push
jp
test
mov
cwtl
pop
cmp
cmp
pop
mov
dec
push
aam
lods
ljmp
mov
pop
pop
adc
inc
fists
push
sbb
dec
dec
bound
adc
nop
jb
pop
nop
or
xchg
fisubs
jl
addr16
and
jno
loopne
ja
adc
not
mov
loop
push
ret
push
iret
mov
fcomi
dec
cmpsl
and
incl
adc
shrl
shrb
cmp
hlt
fisubs
test
sub
shr
or
je
sub
lock
cmpsl
pop
flds
cli
or
fwait
mov
mov
pop
paddusb
out
pop
adc
ds
in
ret
insb
call
mov
arpl
bnd
adc
bound
mov
ret
xor
or
xor
jp
ja
or
inc
aad
sahf
jne
xchg
sub
inc
sbb
mov
lret
lds
mov
out
pop
mov
sbb
stc
cmp
loopne
adc
sbb
scas
lahf
sbb
push
test
add
mov
fdivs
inc
addr16
jnp
pop
pop
mov
and
cli
divl
cmp
das
adc
mov
and
repz
sahf
aaa
dec
scas
iret
or
jmp
mov
scas
je
pop
stos
fcmovu
jno
inc
nop
negl
inc
je
xor
sub
push
xor
ror
jge
inc
xchg
subl
in
lods
xor
sub
test
sub
jecxz
test
movsl
and
rcrb
scas
rol
dec
pusha
ja
push
sub
test
in
jl
scas
mov
lds
inc
cltd
add
mov
cli
xor
pop
pop
jecxz
inc
stos
cmpsb
sub
xor
addr16
je
ds
scas
sbb
push
xchg
es
sub
jle
ja
inc
adcl
mov
shll
mov
push
jbe
ds
aas
dec
lcall
dec
pop
pop
add
add
dec
mov
icebp
ffreep
mov
mov
xchg
or
dec
stc
gs
pop
in
mov
in
in
into
push
and
out
xor
outsl
mov
or
xchg
mov
inc
mov
bound
ss
aaa
sbbb
out
pop
int3
adc
stos
and
sbb
jb
pop
inc
fistpll
jbe
and
imul
dec
xchg
inc
les
sbb
rorb
sarl
fs
mov
lods
jb
xor
pop
jno
inc
insl
jno
xor
mov
scas
add
inc
or
pop
sti
daa
or
dec
imul
cmc
popl
xchg
les
or
lds
arpl
xchg
push
ss
sbb
aad
sub
repnz
jp
out
push
mov
xor
push
int3
adc
aas
jb
push
stc
push
int
push
rorb
popf
test
aad
loope
fwait
adc
iret
cmpsl
jge
mov
aaa
cmp
movsl
mov
sub
push
movsb
mov
imul
cwtl
stos
sbb
jecxz
dec
dec
out
jle
mov
cli
cmp
sub
inc
repz
data16
jge
or
add
adc
lahf
ljmp
iret
push
iret
mov
fxch
push
nop
xor
jle
mov
rcrl
aas
rcrb
jae
push
outsl
iret
jo
lock
push
or
aam
and
lods
sub
pop
push
pop
je
dec
pushf
or
push
aad
dec
sub
imul
cmpsb
iret
iret
adc
push
ret
out
dec
add
test
das
jb
pop
lahf
inc
xchg
das
ret
sti
or
sbb
std
cltd
adc
sub
jmp
pop
imulb
and
fidivrs
ror
lock
sub
push
xlat
xchg
push
hlt
pop
jne
xor
and
fninit
arpl
jge
jnp
shlb
rclb
fmuls
dec
std
notl
lock
xor
ss
ss
mov
mov
lds
lock
pop
mov
adc
aam
jns
or
out
mov
xor
in
mov
pop
out
lret
xchg
pusha
jne
out
cmpsb
xor
test
cmc
pusha
loopne
jmp
and
inc
loopne
and
jnp
xchg
in
xor
jg
es
lahf
push
mov
mov
jg
arpl
mov
dec
cmp
xor
popa
cmp
add
subb
pop
ja
or
pop
xor
loop
pushf
pop
cs
adc
lock
lret
jo
xchg
mov
scas
xchg
jnp
insl
or
lods
mov
sti
in
xchg
mov
imul
or
xchg
dec
pop
dec
dec
or
and
out
imul
leave
cmp
out
xchg
cltd
or
mov
rcr
xchg
pop
es
cmp
and
adc
jo
in
movsb
dec
xlat
push
push
or
aaa
in
jne
sub
es
pusha
cmpsl
movsb
adc
lcall
mov
cmp
dec
pusha
xchg
dec
fstps
stc
pop
ja
adc
inc
div
out
popa
add
mov
add
in
int
leave
push
sbb
sub
iret
mov
fidivrl
sub
or
data16
adc
nop
call
push
test
push
shrl
push
sbb
mov
mov
jne
divl
adc
xchg
xor
lds
loopne
inc
pop
adc
scas
pop
int3
fists
xor
jmp
and
sahf
push
gs
inc
insb
outsb
mov
mov
popa
shl
xor
jno
cmp
out
fdivl
pop
in
cwtl
jns
jne
inc
loopne
inc
mov
nop
cli
push
lea
xor
adc
in
mov
and
cmp
push
jl
aas
movsl
add
cmpsb
xchg
shlb
lahf
mov
adc
sub
bound
ljmp
out
stos
fs
push
dec
pop
clc
cmp
push
cli
or
lods
xchg
test
cmovne
jns
xor
out
stos
push
inc
and
gs
adc
sub
hlt
pop
xor
inc
xchg
cmp
movsl
xor
or
cmp
repz
sbb
sbb
mov
mov
or
jne
jno
xlat
pop
imul
movsl
jle
push
xchg
decl
jg
ret
mov
mov
stc
and
xchg
lret
je
add
imulb
ja
jmp
push
or
fnstcw
add
dec
add
sti
jecxz
cltd
lret
nop
xlat
mov
repnz
dec
ret
mov
iret
cmp
jge
mov
or
pop
pusha
mov
xchg
xchg
push
cmp
in
fsub
lahf
jl
mov
jnp
stos
jge
pop
pop
mov
roll
lret
jae
xchg
mov
leave
jbe
xchg
into
sbb
add
sti
lret
cmp
dec
xchg
je
mov
mov
dec
pop
xorl
ret
mov
mov
dec
movsb
cmc
pusha
xchg
xchg
jb
dec
inc
jp
popa
in
cwtl
push
or
xchg
in
mov
negl
jl
les
mov
cld
addl
inc
adc
jge
mov
pop
movsb
mov
out
in
sub
data16
data16
add
hlt
mov
jno
outsb
clc
outsl
fidivs
insb
jno
int3
mov
pop
add
inc
fdivs
push
dec
jbe
je
lea
pop
cld
stc
rcrl
cmpsb
add
lock
xchg
cmpsb
inc
mov
mov
mov
je
push
sbb
sub
add
andl
mov
test
jecxz
add
cltd
pop
andb
and
dec
mov
ret
in
xor
das
dec
clc
jnp
je
in
sub
pop
std
push
or
push
outsb
add
cmp
icebp
dec
xchg
cli
xorb
pop
into
mov
push
or
lods
dec
in
xchg
cmpsb
push
jbe
jae
inc
lret
lods
daa
adc
in
lcall
idivb
in
popa
mov
dec
rcr
rorb
xchg
mov
imul
pushf
lahf
cmp
cmp
sub
pop
lds
lahf
pop
mov
pop
fisttpl
mov
cmpsb
jns
mov
cli
xor
repz
and
push
fs
hlt
and
mov
loopne
cmp
or
fs
pop
mov
xchg
jb
fldenv
repz
mov
mov
jnp
pop
sti
jmp
fstpl
mov
shlb
pusha
mov
or
jb
mov
dec
cmc
cmp
pushf
pop
mov
pop
jg
roll
cmp
add
dec
push
call
xchg
out
pop
pop
xor
fsub
lcall
andb
movsb
or
xchg
scas
inc
fistpll
das
out
clc
lahf
les
cltd
add
sahf
dec
push
adc
sub
das
cmp
scas
push
cltd
xor
sbb
jle
out
pop
jmp
and
imul
jp
dec
pop
dec
jnp
test
xor
lret
subl
das
ret
or
dec
add
aas
xchg
sti
mov
in
xchg
sub
into
out
pop
sub
inc
je
xor
lods
pop
movsb
or
popf
and
pop
mov
mov
es
lcall
or
xchg
cmp
ja
lock
or
mov
dec
je
mov
mov
or
out
lea
mov
hlt
fcomps
loope
mov
adc
into
push
dec
enter
incb
inc
rcr
sbb
mov
jge
lds
aas
rorl
push
es
lret
mov
xor
aaa
mov
and
pop
xor
insl
test
aaa
adc
testl
int3
movsb
pop
data16
add
in
add
add
mov
or
mov
lds
xchg
or
addr16
sub
xchg
loop
xor
les
xor
xor
stos
push
inc
nop
in
enter
dec
call
gs
sub
in
and
push
pop
jns
sahf
sbb
sbb
pop
repnz
xor
or
aaa
add
xchg
rorb
and
add
or
movsb
loop
jne
dec
mov
cmpsb
xchg
mov
xlat
mov
jo
adc
lahf
inc
sbb
insb
add
mov
fs
lods
and
cli
ret
lahf
cmp
or
testb
xchg
outsl
jp
lock
sbb
sbb
movsb
pusha
pop
es
mov
ljmp
push
mov
xor
dec
mov
inc
cli
icebp
dec
cmp
lahf
mov
fcmovnb
fs
rclb
aaa
repz
push
idiv
sti
je
jno
and
popf
inc
push
ljmp
stc
gs
and
push
mov
insb
jne
scas
cmpsb
xchg
lret
lret
sbb
sub
bound
or
int3
mov
xchg
jne
int
rcl
stos
xchg
std
add
push
je
loopne,pn
cwtl
sbb
lods
jo
add
stos
fiaddl
push
aam
xchg
jl
push
std
xor
cmp
fcoms
std
loopne
mov
addr16
pushf
sbb
pop
adc
mov
lret
in
jg
out
loop
add
xor
divl
shr
popa
es
mov
rcll
inc
add
roll
add
roll
int3
cmp
xchg
adc
mov
rorl
push
and
mov
jns
cmp
add
cmp
rcrb
js
fcmovnb
or
nop
ret
adc
pop
dec
xor
shr
das
add
jns
fimull
jns
xchg
outsb
cli
lret
push
inc
popa
dec
push
add
lods
jns
sub
mov
into
inc
adc
pushf
mov
test
mov
xor
leave
loop
push
push
in
jno
lret
mov
push
pop
and
mov
cmp
lret
dec
cmp
cmp
decl
jmp
imul
ja
inc
mov
xchg
scas
das
xchg
mov
rorb
faddl
call
xor
je
push
outsl
and
cs
xor
pop
dec
mov
pop
push
mov
cmp
add
mov
pop
push
ret
nop
dec
jns
mov
loopne
jbe
or
loope
fildl
call
fucomi
xor
scas
xchg
cmp
clc
or
fs
les
and
and
push
adc
dec
and
mov
push
add
aam
sbb
outsb
mov
pop
dec
es
push
insl
int3
pop
and
rorb
add
adc
in
and
adcb
lcall
js
push
and
mov
and
sbb
mov
stos
sbb
jae
ficomps
pop
ljmp
jecxz
mov
pop
push
jge
xlat
add
pop
div
ds
mov
jg
sahf
mov
sub
inc
std
pop
lret
mov
pop
mov
popf
mov
sbb
mov
inc
sub
sbb
cmpsb
xor
and
imul
jmp
out
jmp
lret
adc
adc
jne
push
jle
mov
adc
das
insb
and
inc
leave
iret
mov
inc
in
hlt
in
push
test
dec
xchg
pop
push
out
sub
jg
and
aad
add
pop
mov
xor
aad
jae
pop
cmc
jecxz
movlhps
mov
jp
pop
fimull
adc
mov
mov
into
mov
mov
jns
sbb
mov
pop
sti
cmpsl
shrb
inc
aaa
mov
mov
jne
and
scas
insl
les
notl
jp
mov
push
add
lret
xor
sub
push
sub
inc
aam
fnsave
imul
push
xchg
orb
push
mov
sar
inc
hlt
push
and
fadd
cld
leave
enter
in
clc
mov
shl
fdivrl
in
in
jecxz
sbb
mov
outsl
add
clc
sahf
fcomps
enter
mov
pop
jp
gs
out
jecxz
mov
adc
mov
mov
mov
clc
xchg
push
adc
adc
cmpsb
rcll
in
xchg
cli
xor
iret
stc
push
dec
jne
enter
sub
lret
mov
mov
popf
push
push
cmpsl
dec
lahf
sti
in
push
divb
xor
cld
or
cmp
repnz
filds
imul
fsts
add
out
adc
push
nop
dec
mov
pop
aas
and
or
lds
stc
xchg
pop
ret
mov
jno
jl
iret
sbb
cmp
push
stos
mov
out
add
xchg
jge
shl
gs
clc
adc
int3
punpckldq
fsubr
lret
ficomps
fistpl
jnp
adc
push
sub
push
mov
stc
fdiv
sub
movsb
mov
adc
arpl
ljmp
fldcw
popf
movsb
push
xchg
inc
jg
subl
xor
jne
es
or
xchg
or
sbb
sahf
mov
mov
shlb
imul
push
jg
mov
xchg
push
int
xchg
push
add
movsl
jecxz
mov
push
xor
pop
jns
cwtl
xchg
sub
inc
movsl
pop
sub
mov
jns
or
incl
sbb
xchg
mov
mov
iret
push
adc
shlb
jge
or
call
xor
jne
add
orb
adc
pop
bswap
xor
inc
adc
xchg
scas
dec
inc
sbbb
xor
pop
rorl
pop
arpl
popf
pop
cmp
xor
mov
rclb
and
add
subb
cmp
jg
mov
push
xor
add
jp
ret
stc
es
push
aas
sub
cmp
jg
push
fisttpl
or
jmpw
xchg
jns
cs
rcr
or
shll
xorl
ds
test
lret
adc
dec
mov
enter
sub
pop
scas
je
out
fistps
repz
je
sub
mov
dec
sbb
sarl
addr16
iret
cmpsb
push
out
bound
mov
mov
enter
cmp
sbb
lea
ss
jbe
fildl
cltd
dec
leave
ljmp
adc
inc
sbb
xchg
xorl
lret
push
dec
cmpsl
adc
cmpsl
bswap
mov
into
sete
rcll
cld
push
call
mov
test
add
cli
je
push
or
cltd
mov
outsb
xor
fstpt
xchg
out
lock
and
sar
scas
andl
out
lcall
insl
jae
shl
test
dec
sbb
movsb
aas
jmp
xchg
jno
add
xchg
dec
pop
aas
sahf
push
mov
stos
lods
inc
or
icebp
inc
bound
cltd
jb
fs
shrl
xchg
fcomps
push
mov
mov
and
aam
lds
daa
jo
or
les
cld
pop
and
xchg
fsubs
mov
adc
rep
ja
jmp
mov
test
outsl
setge
jnp
mov
push
push
cmp
jno
je
mov
inc
push
cwtl
cmc
inc
fists
pop
pop
roll
es
mov
das
out
aam
cli
xor
nop
shll
or
imul
push
jnp
clc
lods
popa
inc
jns
xchg
pop
inc
loop
dec
std
mov
test
xor
movsb
or
stos
mov
shrb
or
cmp
cmp
adcb
mov
pop
out
lock
cmpsl
sub
mov
dec
shll
dec
mov
insl
xchg
in
scas
es
xor
sahf
push
insl
mov
lcall
scas
in
movsl
andb
adc
push
cwtl
push
loop
lock
jbe
mov
and
pop
jno
dec
or
int3
adc
dec
jae
mov
sbb
adc
shrl
sbb
lret
cld
mov
inc
divb
int3
pop
mov
cmp
clc
jae
cs
mov
je
sar
jb
lahf
sarb
adc
mov
sbb
into
ret
pop
xor
or
mov
cs
cld
cwtl
add
repnz
loop
xor
mov
lods
repz
xchg
insl
push
lea
inc
sub
sub
call
or
fnstenv
push
leave
inc
and
fidivrs
out
in
push
jle
add
xchg
jns
arpl
rcrb
dec
mov
and
aas
in
sahf
mov
jnp
sbb
sub
shl
jo
nop
cld
xchg
shl
jae
cld
cmpsb
clc
jmp
stc
cmc
ja
in
dec
sub
dec
js
cmp
stc
arpl
ja
in
xchg
or
cmp
inc
movsb
sbb
lds
cmp
je
dec
cltd
jg
cmc
push
lods
xchg
lea
in
jns
rcr
jle
xchg
mov
and
sbb
or
xchg
pusha
mov
and
popf
sbb
xor
shlb
aaa
jecxz
push
rcrb
mov
dec
out
outsl
jge
call
dec
ret
mov
pop
fcmovbe
decb
dec
mov
int
adc
sub
adc
jnp,pt
jmp
jle
cmp
push
fsub
mov
sahf
imul
stc
orl
sbb
jle
sarl
inc
xchg
stos
addr16
adc
cmpsb
or
hlt
test
cmp
mov
inc
xor
push
stos
add
cmp
repz
imulb
int
jmp
and
test
and
movsl
mov
cmp
ljmp
sub
clc
pop
shrb
push
rorb
nop
fmull
rorb
mov
xor
pushf
cmp
dec
imul
or
test
add
jg
sbb
cmpsl
enter
pop
je
cld
and
rcrb
and
sbb
mov
xchg
ss
push
repz
dec
xor
push
cmp
pop
in
jo
sbb
out
sbb
or
cmp
adc
pop
adc
addr16
je
xchg
sbb
in
cmp
jecxz
cmp
cmp
pop
xor
aad
mov
scas
mov
xor
lahf
scas
lods
in
sub
pop
mov
out
cmp
rep
pop
orl
in
repnz
lock
jmp
or
mov
sarb
jl
call
js
or
mov
mov
aaa
adc
push
pop
lds
jb
sub
rcr
shl
shl
lods
mov
sub
pop
in
pop
movsb
ss
jecxz
push
dec
dec
and
jnp
jg
loopne
dec
cmpsb
push
fcoml
lock
pop
insb
icebp
movsl
cmovo
into
sbb
or
popa
popf
repnz
loop
stc
ret
adc
scas
inc
rolb
mov
or
stos
jge
insl
in
mov
popf
adc
jecxz
mov
icebp
sbb
inc
fistpl
in
sti
rol
scas
cwtl
xchg
pop
xor
pushf
push
insb
popf
xor
ss
sbb
adcb
aam
push
shrb
push
lods
ret
xchg
dec
aas
arpl
sbb
ret
daa
adc
stos
mov
push
lret
and
sub
rol
inc
push
cmpsl
inc
dec
dec
and
jecxz
arpl
int
mov
or
add
pop
push
bound
sub
testl
push
xchg
pop
lea
in
add
in
or
jnp
iret
into
cmc
mov
mov
int
ljmp
push
dec
mov
dec
clc
fs
push
and
imul
inc
into
int
adc
cmp
aam
mov
lods
mov
mov
cmpsb
xlat
out
xchg
ds
jp
dec
mov
in
fisubs
push
jnp
out
pop
xor
dec
ja
inc
and
add
subb
aaa
movsl
add
dec
mov
sbb
bound
hlt
ret
jnp
jno
testb
pop
hlt
faddp
ss
inc
test
add
rorl
test
ja
inc
sub
cmp
loopne
add
negb
js
insl
cmp
clc
adc
pop
add
cmp
popa
pop
subl
scas
jo
subb
movsb
outsl
xor
add
lods
sahf
int3
imul
push
mov
into
cli
cwtl
push
or
xor
or
or
fwait
test
pop
das
jno
outsb
fwait
dec
pop
lock
inc
adc
xchg
or
movsl
add
dec
ds
dec
adc
push
cmpsl
dec
inc
addr16
cmp
mov
das
sub
inc
pop
mov
adc
call
inc
jg
jl
dec
pop
dec
mov
clc
and
bnd
mov
mov
es
loope
and
enter
add
cmpsl
mov
in
stos
dec
call
les
insb
push
adc
push
dec
dec
mov
pushf
out
and
dec
loope
xchg
dec
repz
pop
lcall
jmp
je
jnp
imul
mov
inc
aaa
jnp
je
cmp
pop
mov
push
dec
xchg
popf
pop
and
jb
daa
scas
es
cs
fsubrl
cmp
out
cmp
sahf
and
dec
test
xchg
fwait
shrl
sbb
outsb
xchg
jl
les
mov
daa
ds
adc
dec
pop
jle
inc
shll
lret
rclb
mov
push
mov
mov
mov
lcall
pusha
scas
roll
pusha
adc
arpl
or
add
lods
inc
je
fcomi
cmp
jnp
jno
push
add
sbb
mov
pop
mov
dec
fdivs
jne
lock
mov
pmuludq
call
lea
xchg
dec
or
jg
pop
cltd
rcrb
aad
pop
scas
cmp
mov
movsl
aam
or
lahf
fwait
lods
rcll
repz
sbb
aas
and
push
and
mov
stc
fcomps
arpl
mov
test
push
push
mov
loop
sbb
sub
loopne
sbb
rclb
sub
adc
push
dec
lds
rclb
cmp
pop
jo
test
inc
mov
lret
in
popf
mov
lods
ret
jo
jecxz
and
cmp
addr16
pusha
in
ljmp
cmc
push
out
dec
sub
pop
mov
pop
aam
jmp
inc
aam
dec
shll
sbb
psubd
mov
xchg
or
cs
lret
sub
movsb
mov
push
sub
push
icebp
out
push
pushf
shrb
std
jo
pop
fldl
mov
mov
rcll
dec
stos
inc
push
mov
lret
lret
cli
push
jne
testb
pusha
and
inc
enter
or
cmp
daa
pop
mov
push
push
ljmp
lcall
ja
ret
aam
imul
in
push
outsl
cltd
mov
jp
sub
ds
fnstenv
add
mov
inc
sbb
xchg
je
fistpl
mov
mov
shll
sub
push
loope
decl
rorl
mov
push
inc
sub
hlt
out
add
sbb
xchg
push
xchg
add
aas
push
xchg
push
js
dec
inc
pop
fstpl
lahf
and
mov
and
out
negl
int
popf
mov
adc
dec
jo
mov
shr
scas
cmc
mov
xchg
push
xor
loope
mov
fs
sbb
xor
sti
inc
push
in
and
adc
fs
hlt
dec
xor
push
popf
mov
leave
int
dec
pop
bound
outsb
dec
movsb
mov
icebp
jl
stos
je
jbe
inc
mov
mov
add
mov
mov
in
outsb
inc
cmp
inc
cmp
push
fwait
andl
punpckhbw
sbb
jb
ficoms
dec
arpl
dec
adc
mov
nop
push
fcompl
stc
daa
mov
sbb
enter
mov
notb
lea
popf
dec
mov
jns
jg
lods
push
out
icebp
imul
mov
or
cmpsb
mov
lods
xor
stos
mov
fs
fcompl
aaa
popf
dec
pop
add
and
pop
adc
mov
jle
loopne
scas
adc
dec
fadds
and
xor
ja
mov
sbb
pop
aam
aaa
push
pop
outsl
mov
adc
lods
push
or
or
testb
mov
mul
mulb
jnp
jp
pop
inc
leave
mov
push
sbb
mov
cmp
pop
sub
cli
add
pop
xor
fstpt
cmp
push
add
cs
xor
loope
std
pop
cmp
xchg
mov
pop
repz
mov
and
jl
mov
js
scas
das
add
call
xchg
mov
jns
gs
test
jb
pop
pop
shrb
sub
pop
dec
pop
rorl
pusha
hlt
xchg
mov
mov
mov
jae
shll
adcb
xchg
es
mov
xor
lods
cmp
xorl
pushf
push
dec
inc
sarb
sub
mov
imul
lahf
mov
jmp
insl
mov
push
pop
mov
inc
adc
and
xor
dec
je
adc
dec
lcall
sti
push
dec
xchg
pop
das
insb
dec
pop
lods
dec
outsl
lods
sbb
xlat
mov
imul
dec
test
inc
mov
cmpsl
sbb
jo
dec
pop
addl
lods
pop
and
fstl
pop
push
mov
mov
pop
movsb
xchg
movsb
lock
fisttpl
lcall
xor
lds
sti
inc
xchg
add
ljmp
sbb
add
inc
lods
xor
dec
fnstsw
pop
mov
sub
mov
dec
rorl
jns
lock
xor
cwtl
adc
shll
fistl
xchg
dec
xchg
push
mov
out
mov
xchg
nop
in
ja
js
mov
or
cwtl
sub
es
add
and
in
imul
dec
lods
into
or
jnp
mov
jns
mov
sbb
or
push
faddl
xorb
bound
or
push
push
aas
rclb
xor
jp
pop
inc
cmp
mov
push
in
push
mov
xchg
adc
adc
jnp
pop
dec
inc
out
jmp
in
mov
xor
xor
and
scas
out
int
pushl
test
nop
sub
movsl
sbb
scas
aas
mov
fisubl
or
bound
mov
stos
mov
jnp
lea
or
push
dec
mov
call
sub
jb
jge
dec
mov
adc
and
add
cmp
lods
and
mov
nop
lret
imul
or
dec
mov
xchg
in
pop
enter
push
inc
pop
mov
leave
arpl
ss
adc
mov
dec
jle
adc
and
push
inc
pushl
push
addr16
outsb
mov
mov
mov
mov
and
std
mov
jae
lcall
call
cli
sub
xor
cmpsb
adc
mov
or
and
scas
sbb
test
stc
add
inc
xchg
loopne
mov
leave
cwtl
mov
push
mov
xchg
jo
pop
mov
fldenv
add
in
push
xor
ljmp
into
cmp
mov
inc
mulb
cmp
jns
lds
mov
cmp
int
insl
sbb
lods
sbb
ljmp
adc
push
fsts
int3
mov
jg
scas
mov
mov
xchg
roll
test
xchg
std
stos
pop
pop
xor
push
pop
incb
jno
sahf
ret
dec
dec
xor
mov
test
xor
mov
push
jns
test
bound
mov
jg
mov
gs
jne
lods
sti
in
sbb
push
ret
ret
ds
adc
std
jp
mov
jne
ja
scas
mov
aam
ret
xchg
inc
js
xchg
jne
dec
loopne
xorb
sub
xchg
into
sub
push
sub
jecxz
gs
call
or
or
mov
fisubrl
rcl
mov
push
lods
jecxz
pop
cmpl
sahf
xor
roll
cmp
cmp
sbb
shlb
mov
push
xor
push
xchg
mov
xchg
pop
jecxz
xchg
jnp
add
stc
cmp
dec
mov
pop
andb
test
xchg
in
xchg
mov
inc
jbe
cltd
and
out
lods
ret
pusha
lock
nop
mov
gs
mov
lods
pop
sub
mov
in
sub
xchg
in
cwtl
push
inc
out
jg
add
lock
pop
jae
insb
stos
enter
pop
dec
mov
pop
xchg
scas
sub
cmc
push
cld
ret
jecxz
cmp
bound
loope
jnp
mov
pop
mov
xor
mov
test
jno
sub
push
insb
and
jb
mov
mov
dec
arpl
shll
and
jbe
fwait
cmp
dec
inc
push
fiadds
aaa
out
fwait
test
add
mov
out
mov
and
add
and
mov
sub
xlat
pushf
fsub
adc
xchg
js
mov
add
addr16
mov
dec
sbb
mov
mov
pusha
inc
push
dec
sahf
das
or
sub
jecxz
hlt
mov
pop
sbb
cmpsl
xchg
sahf
bound
jmp
lods
int3
mov
sbb
mov
push
mov
aas
pop
out
xchg
mov
adc
in
xor
cmc
sbb
xor
sub
mov
test
push
cld
sub
jo
xchg
fcoml
outsl
lret
aaa
lcall
pop
jne
rcrb
add
popa
xchg
inc
imul
mov
push
xchg
xchg
mov
pop
dec
fimull
gs
stc
gs
pop
cmp
dec
dec
mov
adc
jbe
je
stos
ficompl
nop
out
loope
dec
xor
movsb
sar
scas
xchg
dec
mov
leave
rcl
cmpxchg
push
add
mov
xchg
add
aad
idiv
lahf
or
and
inc
test
jo
pop
add
jge
lea
push
jmp
pop
jnp
in
xchg
movsb
fdivr
pusha
xchg
aam
repnz
lcall
or
aaa
sub
sbb
stos
cmpsb
imulb
inc
adc
cmpl
ljmp
inc
test
xchg
cmpsl
in
sti
adc
lahf
sbb
push
aad
data16
data16
in
adc
js
negb
ljmp
or
mov
scas
fs
mov
mov
mov
jge
leave
jmp
movsb
fcmovbe
xchg
cmp
mov
lock
and
adc
sub
out
xchg
lods
imul
cmp
pop
xlat
xchg
out
mov
aam
xchg
fsubs
mov
scas
pop
in
lds
cmp
xchg
push
loopne
xchg
pop
xchg
push
pop
shrb
jl
jl
aam
jno
and
test
flds
jae
lods
and
xor
push
cltd
sub
jle
cmc
push
sub
js
xor
adc
jbe
into
in
dec
mov
jle
xchg
ljmp
push
icebp
outsl
mov
mov
add
ret
add
adc
adc
jp
sub
aad
gs
test
dec
or
cmpb
pop
pushf
xor
or
inc
stc
addr16
movl
sbb
cld
mov
imul
ljmp
jo
xchg
inc
shrl
add
mov
stos
movb
gs
test
sbb
or
push
push
in
ja
fidivrl
add
addr16
ffree
gs
mulb
and
push
sbb
aaa
and
test
outsl
add
jo
iret
hlt
sbb
fldenv
dec
jne
inc
xchg
imul
fwait
xchg
pop
ret
movsb
jb
xlat
cmp
cmp
mov
inc
xchg
and
pop
push
cwtl
inc
lea
jge
mov
mov
iret
xor
jne
adc
adc
in
std
rol
adc
push
scas
les
mov
fdivl
enter
orl
test
dec
cmp
adcb
pop
pop
sub
add
dec
mov
pop
cmp
lret
push
das
push
xor
lea
mov
or
inc
roll
sbb
xor
aad
repnz
stos
roll
mov
cmp
sbb
cmpsl
pop
loope
es
test
jb
rolb
lret
mov
push
js
xchg
push
gs
call
cmpb
adc
cmp
xchg
push
fistpll
jge
pop
in
je
inc
jnp
xchg
push
pop
mov
repz
stc
pop
sbb
cmp
sahf
ljmp
fisttps
xorl
jns
sti
jmp
xchg
mov
and
xlat
jnp
fwait
jae
xor
mov
es
popl
push
mov
cltd
sbb
and
aas
out
mov
popa
dec
mov
popa
xor
sbb
jmp
pop
and
mov
lahf
es
out
ret
push
mov
testb
mov
imul
stos
push
lods
sub
and
int
out
das
jbe
mov
movsb
dec
stc
lods
pop
comiss
fisttps
jge
cwtl
lea
add
dec
pop
lea
enter
dec
insb
loope
inc
cld
rorl
jne
sub
push
and
fldl
jo
push
mov
sub
inc
pop
jae
dec
popl
dec
ret
popf
sub
push
je
in
adc
not
push
and
cli
xorb
sub
adc
popf
push
mov
jl
shlb
test
out
repz
add
pop
sbb
sahf
or
jne
das
push
out
pop
out
sub
or
les
test
mov
fidivrs
xchg
lods
aas
pop
cmc
popf
inc
je
out
adc
dec
mov
es
outsb
dec
pop
in
pushf
lret
out
or
and
shrl
sbb
pushf
cvtpi2ps
add
jecxz
cmp
add
je
mov
or
mov
test
sub
fwait
aas
cmp
loop
test
mov
je
sub
cltd
js
in
inc
pop
push
mov
push
sbb
inc
lcall
mov
inc
mov
sub
push
scas
pop
divl
loop
mov
or
iret
mov
jle
nop
mov
mov
lea
imul
inc
lock
mov
mov
or
sbb
jg
and
scas
mov
and
in
cmp
sti
cmpl
adc
sti
loop
pop
popaw
xchg
xor
jbe
in
xchg
push
xchg
push
inc
mov
add
adcb
add
aaa
jmp
cmp
data16
loopne
add
push
adc
push
leave
mov
loopne
cmp
sbb
xor
in
pop
and
insl
mov
es
add
test
ljmp
sub
pop
push
arpl
inc
pushf
pushf
leave
test
xchg
cmp
and
ja
inc
inc
lret
adc
add
xchg
mov
inc
pop
inc
add
push
add
cmp
out
mov
insl
dec
push
jne
inc
dec
cmp
jl
inc
insb
sub
adc
data16
cmp
mov
mov
xchg
scas
lods
test
push
icebp
mov
stc
in
inc
arpl
and
jmp
out
daa
push
push
imul
into
lahf
insl
inc
mov
ds
mov
dec
stos
jl
xchg
mov
push
mov
jp
sbb
ss
inc
add
mov
pop
or
xor
cmp
rcl
loopne
scas
pop
xchg
sub
mov
mov
pop
push
rorw
adc
jae
ljmp
cmp
aam
aam
sub
loope
cmp
or
mov
inc
out
ficompl
rorl
sbb
stos
xchg
repz
outsb
call
adc
test
scas
jae
push
add
ret
or
adc
mov
sbbb
sub
std
cmp
push
lods
fdivr
push
add
cmp
mov
inc
aaa
mov
in
pop
sub
push
push
sub
xchg
insl
les
les
cmp
add
loop
rclb
iret
insb
ds
aas
mov
push
adc
xchg
push
add
cld
lods
cli
pop
xchg
scas
push
sub
xchg
xor
or
push
xor
jge
pop
xchg
ficomps
arpl
fsin
outsl
xchg
decl
repz
mov
call
fidivrl
or
adc
mov
lock
test
roll
cld
add
lea
das
gs
icebp
inc
lods
adc
dec
loope
in
cmp
cli
jb
push
int
push
mov
or
in
aad
pop
outsb
or
lcall
xor
jns
push
dec
cltd
adc
or
and
xor
or
mov
pushf
and
mov
inc
pop
cltd
aad
shrl
dec
ljmp
jb
fistl
inc
addr16
dec
gs
outsl
xlat
je
mov
sub
pusha
inc
and
jecxz
out
mov
andl
call
mov
arpl
xchg
jg
or
test
jo
adc
or
cmove
jmp
xchg
fisttpll
pop
xchg
inc
nop
mov
jge
repz
add
mov
or
inc
jb
lahf
xchg
or
out
arpl
and
movsl
mov
mov
insb
in
inc
ja
inc
jge
cmpsl
sbb
out
stos
add
jb
fdiv
jecxz
jns
je
fldl
test
mov
adc
inc
add
push
repnz
lret
or
outsb
and
insb
jmp
sar
jp
and
dec
xor
sub
pop
sbb
lods
test
imul
mov
je
inc
stos
mov
call
sub
std
inc
xchg
pop
clc
rcl
in
xchg
inc
dec
inc
mov
jne
mov
aad
test
das
xlat
insb
mov
adc
sti
fbstp
dec
loop
sbb
repnz
mov
es
sub
mov
dec
pusha
cwtl
mov
outsl
adc
dec
cmp
push
adc
and
xchg
mov
out
or
fstl
jno
sub
add
mov
es
call
sbb
cmp
push
pop
dec
dec
lods
cld
jns
add
jg
sbb
dec
xchg
inc
dec
lock
aad
and
xlat
push
loop
insb
push
pop
test
cmpsb
out
aas
lds
mov
aas
roll
dec
scas
push
dec
test
arpl
in
lods
cmp
mov
test
push
cmp
dec
push
int3
sahf
xchg
add
inc
mov
push
out
adc
inc
cmp
sahf
cmp
repz
aaa
dec
dec
cmp
sahf
pop
aas
add
js
lahf
dec
jecxz
iret
sbb
fiadds
mov
pushf
cmp
cmpsb
js
dec
out
cmc
in
sub
mov
je
add
xchg
movsl
and
cmp
gs
lods
mov
adc
mov
outsl
lock
inc
jg
daa
xor
nop
lret
sub
sar
inc
lcall
push
sub
or
mov
pop
xor
in
mov
rcrb
clc
lret
pusha
mov
pop
push
dec
push
adc
int
cmp
push
push
sbbl
add
gs
mov
sub
cmpsb
dec
leave
arpl
das
outsl
dec
test
dec
in
mov
dec
and
cmp
enter
mov
dec
mov
sbb
and
sbb
inc
xor
add
arpl
mov
sbb
cmp
sahf
inc
mov
xor
loope
fwait
jle
mov
xor
gs
stos
inc
mov
fucomi
sahf
push
shrb
xor
out
imul
push
mov
or
outsl
es
ret
pop
les
cwtl
addr16
in
ja
mov
ljmp
icebp
lds
xor
sub
sti
imul
pop
mov
sbb
jecxz
pusha
call
fdiv
movsb
mov
jmp
xor
repnz
inc
dec
fxch
cmpsb
cmp
cmpsb
mov
sbb
xchg
adc
sbb
ss
pop
scas
ss
outsl
nop
or
ja
push
xchg
jl
xchg
dec
imul
mov
fists
push
loop
xchg
jecxz
aas
out
mov
or
jl
jg
pop
nop
sahf
std
in
cmp
ja
test
out
push
and
pop
sbb
mov
xor
out
imul
rorb
aad
je
daa
mov
repnz
xchg
jns
inc
incb
add
mov
fwait
cli
fimull
out
lcall
dec
jle
imul
data16
cmpsb
popa
mov
cs
pusha
xor
mov
push
inc
mov
gs
fwait
jae
adc
mov
jge
test
lret
mov
dec
xorb
adc
cmp
pushf
loope
jmp
movsl
push
cmpsl
scas
dec
xchg
push
mov
mov
arpl
mov
cltd
loopne
jmp
fs
pop
inc
mov
dec
sbb
push
push
cmp
out
pop
test
cld
stc
jmp
movsb
jnp
adc
dec
mov
or
out
popa
movsb
mov
pop
sahf
outsb
out
imul
mov
mov
cmp
repz
or
cmp
pop
iret
push
movntps
das
xchg
add
cwtl
sbb
std
pop
hlt
push
fiadds
cltd
jge
es
and
jg
sbb
fs
jnp
jno
mov
fs
xlat
fcomip
lret
sbbb
jl
cmp
jmp
das
outsb
jbe
sbb
test
rcl
jne
xlat
xor
daa
fsubrl
mov
scas
orl
sbb
inc
mov
movsl
mov
dec
pop
mov
fwait
sub
cwtl
push
add
test
inc
into
repnz
xchg
push
push
cmp
mov
sbb
xchg
repnz
inc
cmp
fidivrl
insb
movsl
xor
movsb
popf
mov
lods
shlb
leave
fsubrs
sbb
cmp
mov
popf
cvtpi2ps
dec
xchg
arpl
fdivl
inc
das
lods
and
rcrb
xchg
testb
out
out
aam
pop
int3
and
add
rclb
dec
dec
aas
jl
lret
xchg
sahf
or
stc
dec
scas
das
xchg
mov
mov
fdivr
sub
sub
mov
sub
das
cmpsb
outsl
xchg
cwtl
cmc
sub
mov
sub
cmpb
ret
mov
icebp
or
test
int
out
jg
stos
stc
pop
or
jge
in
and
xor
dec
cmp
mov
int
adc
loopne
mov
insl
aas
and
stos
arpl
mov
mov
pop
out
add
adc
in
sbb
jae
xchg
mov
lret
xor
outsb
mov
xchg
xchg
in
repnz
repnz
popa
dec
cmp
stos
push
jno
cmp
mov
pop
mov
inc
and
cld
rcll
dec
push
jno
loopne
xchg
or
mov
sub
aaa
xchg
add
jo
mov
push
in
xor
popa
sbb
inc
dec
addb
pop
xor
fists
idivl
les
adc
dec
shrl
call
cmc
jo
sub
push
sub
mov
mov
loop
lds
fnsave
sub
scas
xor
cltd
in
sbb
imul
xlat
clc
pop
dec
daa
mov
mov
fcmovnb
test
lods
sbbl
push
lds
jg
mov
pop
je
aam
test
sbb
sbb
ljmp
sar
ss
mov
sub
push
cmp
sbb
pusha
push
mov
jmp
xor
or
or
add
popa
mov
icebp
mov
lea
add
push
js
sbb
in
push
cmp
xor
insl
inc
fwait
push
mov
sub
jb
push
sti
add
lods
js
orl
mov
mov
mov
data16
repnz
bound
dec
test
jns
fmul
outsb
ds
jmp
sbb
sbb
dec
mov
stc
add
into
pop
cmc
push
imul
ss
into
sbbb
pop
out
ret
pop
icebp
jp
ss
inc
lret
jg
ja
jae
sbbb
stos
mov
test
insb
push
inc
add
pop
and
jo
jl
fsubrl
add
dec
jp
outsb
xor
stos
jno
fldcw
in
jno
add
jp
in
nop
into
mov
test
lods
inc
test
popa
mov
aaa
out
mov
adc
aad
pand
mov
sub
lahf
mov
ja
mov
mov
dec
pop
jo
jl
loopne
call
add
xchg
pop
ja
pop
je
xor
add
nop
and
adc
pusha
cmp
outsb
sbbb
cli
pop
cs
jno
mov
lods
push
dec
pop
push
cmp
sbb
adc
iret
out
sub
insl
and
mov
mov
jne
xor
arpl
or
iret
sub
mov
stc
and
bound
add
xor
out
divl
add
lea
push
ss
cmpb
aaa
fnstsw
fcmovnbe
addr16
scas
ja
stos
sub
mov
lods
pushf
mov
movsl
aam
test
pop
inc
sub
sar
sub
mov
mov
mov
jb
and
jbe
loop
or
imul
loopne
test
xor
insb
scas
rcll
imul
dec
mov
mov
push
jg
jbe
lods
int
fcompl
sbb
movsl
scas
sub
inc
mov
dec
in
in
dec
fs
std
pop
adc
sub
shll
loope
imul
sub
inc
push
xor
cs
cld
fucomi
std
in
jae
pushf
xor
js
jmp
jno
arpl
cmp
inc
jg
scas
jmp
mov
imul
xor
jno
dec
mov
xchg
out
faddp
push
in
dec
jbe
lret
pusha
jbe
adc
pop
jae
pop
mov
or
add
mulb
movsl
or
add
dec
repnz
xorb
iret
lods
lcall
lods
sub
out
pop
arpl
jns
jl
stos
cmp
lock
jns
aas
popf
sub
adc
add
mov
inc
and
clc
daa
aam
sti
jp
test
cmpsb
pop
and
outsl
mov
mov
push
out
fmull
and
and
lock
jmp
fstl
lods
sar
pop
inc
xor
mov
dec
pop
cmc
mov
pop
cmp
not
sub
hlt
in
xor
dec
xor
add
xor
mov
xor
test
dec
sub
sbb
js
fdivrl
stc
js
pop
scas
out
pop
sti
dec
lds
shl
arpl
test
jp
ret
mov
jbe
sbb
dec
mov
sahf
xchg
add
stos
scas
das
jb
pop
mov
jecxz
mov
loop
es
stc
cmp
scas
cli
inc
call
hlt
mov
mov
mov
shrl
lar
repz
dec
sahf
ljmp
add
cmpl
xor
add
mul
iret
fidivl
in
mov
mov
xchg
notl
inc
add
mov
js
xor
pop
jmp
scas
popa
sbb
mov
mov
sub
inc
mov
out
loope
test
pop
dec
sbb
fcom
das
mov
out
cmp
lock
cmc
outsl
mov
mov
rclb
push
inc
sbb
aam
idiv
mov
mov
icebp
clc
scas
dec
in
xchg
adc
mov
outsl
push
push
dec
push
sub
inc
push
or
test
decb
hlt
cmp
and
push
into
loopne
dec
push
dec
pop
cmp
add
inc
dec
adc
data16
movsl
out
popf
xchg
out
push
xor
cmpsb
insl
pop
jle
dec
xchg
jb
sahf
out
daa
mov
jecxz
mov
int3
popl
dec
rol
shlb
xor
push
fs
mov
mov
mov
mov
pop
imul
xor
mov
cmp
fsts
aas
bound
icebp
fcmovnu
xchg
loop
mov
cmpsl
mov
sbb
dec
cmpb
xchg
pop
inc
in
or
mov
xchg
sti
cltd
subl
push
pop
or
lds
mov
fsubl
dec
popa
shll
adc
cmpsb
es
in
movsl
push
jno
rcrb
xchg
jp
push
lcall
mov
jb
aad
inc
mov
stos
cwtl
sub
test
xor
cld
pop
loope
xchg
or
mov
dec
ljmp
out
dec
rorl
repnz
dec
jge
pushf
lret
decb
sahf
push
mov
push
cmp
xchg
jmp
rolb
adc
lock
popa
mov
in
dec
adc
idivl
fsubs
or
mov
push
sbb
push
xor
sbb
dec
cmp
addr16
sbb
pop
popa
sub
mov
jecxz
push
adc
mov
cmp
sub
mov
add
adc
stc
mov
in
iret
jno
dec
jle
in
push
xor
adc
aad
iret
les
cmpsl
stos
push
ljmp
dec
loope
fnsave
int3
iret
push
jge
cmp
or
ss
push
pop
or
cld
fcompl
ja
and
mov
sbb
lds
notb
aad
push
cmp
pop
pop
roll
aas
lret
into
mov
imul
or
cmpsl
into
pop
out
xchg
pop
pop
icebp
mov
leave
test
pop
or
in
out
cmc
jl
inc
pop
pop
mov
lcall
popa
cmpsb
pop
lret
push
pushf
adc
mov
lret
xorl
sar
xchg
xchg
sub
add
stos
push
frstor
out
dec
fstl
push
jo
cmpsl
fs
popf
xchg
lock
xchg
test
or
stos
in
xor
dec
inc
jo
repz
dec
aas
insl
xchg
sub
ds
call
cli
sbb
inc
insb
call
xchg
inc
not
insl
mov
mov
mov
jecxz
loope
push
sub
xchg
data16
add
sbb
or
pushf
push
test
add
xchg
push
xchg
fstl
mov
push
adc
add
in
sbb
into
mov
stos
repz
mov
dec
pop
jle
stos
jne
xor
sti
pop
fmull
notl
cmp
cli
movsb
stc
movsb
add
push
xchg
adc
dec
xchg
stc
jmp
xchg
cmpb
iret
sub
leave
jecxz
int3
push
sbb
cmp
rcr
fisttps
adc
xchg
lea
int
es
inc
aaa
stos
stos
subb
cltd
shlb
popa
pop
mov
mov
rorl
jno
cld
cmp
call
mov
pushf
imul
mov
lahf
adc
fcomps
adc
add
jns
or
loop
sbb
and
fsts
movsl
pop
stos
test
mov
pop
pushf
mov
repnz
lret
inc
in
je
cmp
push
mov
into
dec
dec
add
dec
pop
adc
cmp
enter
pusha
gs
adc
push
outsb
dec
push
rcrb
or
pop
pop
and
cmc
loop
iret
fisubrs
push
jnp
sub
inc
inc
cmp
adc
xchg
cmc
out
mov
cmp
jg
lods
pop
push
fiadds
fdivs
cmp
or
lods
jno
addb
pop
ljmp
and
dec
adc
in
ret
xor
loop
dec
pop
roll
push
pop
call
xchg
dec
cwtl
adc
insb
xchg
mov
push
and
inc
icebp
pop
int
repz
and
mov
aad
jns
xchg
jno
push
jg
jb
pop
inc
mov
xor
and
xlat
mov
jg
mov
dec
fistps
stc
push
nop
stos
js
pop
dec
int3
lock
in
leave
cwtl
pop
or
ret
push
icebp
js
and
mov
cmp
test
mov
or
cmp
xor
fldenv
mov
int3
xor
jle
iret
dec
pop
mov
cmpb
push
mov
mov
push
in
mov
bound
adc
inc
stc
fmull
mov
cltd
mov
leave
subl
or
sbb
or
data16
xor
popa
imul
lret
movsl
loopne
lea
shlb
jb
cmp
movsl
and
push
fstl
dec
fildl
inc
cmpsb
mov
push
push
mov
mov
enter
jp
pop
xchg
mov
pop
ret
push
outsb
cmp
add
rcrl
lock
pop
fidivs
lcall
mov
js
xchg
jnp
iret
es
mov
add
fldl
mov
lea
add
addr16
int3
xor
cmc
leave
loope
loope
push
xor
xchg
fbstp
mov
jmp
movsl
jmp
cmpsb
push
repnz
repnz
mov
std
in
aam
xchg
push
mov
or
ret
dec
add
and
loope
push
mov
or
rcl
sbb
outsb
inc
jo
or
cwtl
mov
idivb
xchg
mov
sti
das
push
jo
pop
dec
hlt
in
add
mov
xorb
pop
mov
aad
cmc
std
mov
xchg
mov
sarb
pop
sub
movsb
ds
or
ljmp
clc
cwtl
loopne
or
imul
comiss
cmpsl
aam
inc
dec
adc
mov
sub
lds
imul
hlt
data16
cld
add
aam
or
inc
sbbl
inc
movsb
rcl
cmp
pop
add
ret
xchg
icebp
add
jle
fdivs
fcoms
jo
in
add
test
loopne
jp
pop
mov
cwtl
imul
add
or
ret
rcl
pop
in
shl
dec
inc
bound
mov
mov
nop
mov
add
mov
lods
pop
mov
push
sti
adc
or
push
push
fnstcw
jns
dec
and
std
push
clc
bnd
loop
mov
add
xor
push
jne,pt
leave
jb
fsubs
lds
mov
or
pop
inc
xchg
movsl
fldl
adc
stos
leave
push
adcb
call
pop
mov
cmp
aas
fidivs
popf
arpl
and
inc
roll
imul
in
out
xor
iret
scas
daa
sub
dec
lret
notb
mov
mov
push
xchg
movsb
inc
enter
rep
mov
push
and
add
mov
data16
dec
sbb
sub
imul
inc
int
mov
cmpsb
mov
dec
push
and
mov
and
pop
inc
xor
jge
xchg
icebp
inc
scas
dec
call
adc
popf
jae
jae
cmp
std
pushf
sbb
loopne
xor
shl
shll
mov
mov
mov
xlat
std
mov
dec
das
addr16
xchg
or
cld
dec
lock
and
lret
pop
pushf
lds
jle
xor
inc
stc
jnp
outsl
aad
scas
imul
cs
testb
nop
cwtl
mulb
cmp
outsl
sbb
xor
dec
subb
aad
add
inc
ss
cltd
hlt
out
and
and
sti
jl
sbb
and
or
imul
lcall
mov
push
das
add
sub
inc
outsb
adc
mov
jmp
imul
in
xor
push
add
jnp
and
fs
pop
add
pusha
cmc
lds
mov
pop
jp,pt
cmp
mov
test
ficoml
xor
fcmovnu
jg
cmp
imul
push
outsb
and
out
mov
in
lds
divl
jmp
inc
out
push
fs
jno
repnz
stc
inc
aas
jmp
cmp
and
xchg
or
out
mov
pop
ret
inc
in
addr16
dec
jge
xor
adc
cmpl
xchg
lock
popf
xchg
cmp
stc
out
fsub
gs
cld
inc
add
jb
dec
cld
mov
sbb
jae
cmc
cmp
push
or
jp
in
jmp
scas
sbbl
scas
dec
xor
push
pop
sub
pushf
jmp
repz
hlt
es
cmp
test
jae
scas
mov
es
jae
icebp
out
test
fwait
jns
imul
out
ret
ljmp
mov
ljmp
adcl
mov
imul
sub
sti
mov
in
mov
test
ja
xchg
mov
mov
push
xorl
mov
mov
pushf
fcomip
pop
add
fstl
mov
jo
mov
or
push
push
lret
xchg
push
xor
nop
pop
mov
xchg
inc
jo
jmp
mov
decl
or
mov
mov
push
add
mov
jge
scas
xchg
inc
xor
cs
loop
add
data16
stc
sbb
ds
xchg
pop
in
adc
push
decb
mov
pop
push
sarl
add
das
rcrb
push
rorl
rcrl
jmp
rol
insl
jmp
push
bound
mov
jae
aam
imul
out
outsb
jmp
sbb
and
dec
inc
jecxz
iret
push
and
orb
fsubs
push
dec
rclb
inc
jmp
sbb
ljmp
je
inc
mov
ret
push
sub
rcll
xor
mov
jmp
addl
loope
fwait
mov
loop
and
adc
insb
arpl
outsl
movsb
and
ljmp
xor
lock
pop
xchg
mov
sahf
sti
lods
in
fwait
pop
loopne
aad
jne
mov
loop
nop
push
popa
aam
popf
cmpsb
jns
jmp
test
les
jo
cmpb
adc
mov
aas
sbb
add
or
dec
jnp
pop
push
daa
cld
mov
adcl
or
into
jge
arpl
and
js
jge
xchg
lret
add
repnz
xor
push
jno
mov
fldcw
or
rorb
mov
sub
xchg
popa
mov
jne
dec
jns
or
divl
xor
mov
xchg
aas
inc
mov
jge
add
pop
pop
sbb
inc
sbb
mov
pop
xchg
push
xor
xlat
pop
sbb
mov
push
pop
jcxz
adc
lea
xchg
jge
cltd
jl
lret
cmpsl
jnp
inc
int
lock
arpl
out
mov
bound
cld
mov
add
push
data16
cmpl
xlat
jle
mov
nop
mov
mov
insl
fisttpll
js
jle
mov
insl
pcmpgtd
jns
aas
jbe
cmp
popa
cli
mov
mov
or
popa
ret
jb
and
mov
jg
pop
or
inc
nop
or
mov
pop
mov
push
mov
sub
les
pop
fistpll
push
jne
testb
jmp
mov
clc
mov
push
call
push
mov
clc
xchg
add
stos
xchg
mov
jae
imul
or
out
jle
in
movsb
test
xchg
sub
frstor
jae
mov
out
push
leave
xchg
mov
pop
ret
add
mov
jl
mov
lret
mov
xor
lahf
xchg
xor
adc
jns
test
cmc
insb
lds
or
jmp
sbb
je
inc
std
ljmp
mov
jne
jg
jg
test
dec
mulb
aaa
or
movsb
mov
sarl
xchg
inc
inc
jmp
mov
test
mov
cmc
fldl
xchg
mov
lcall
sub
jl
adc
mov
jl
pop
pop
jecxz
add
cmc
out
pop
sbb
xchg
into
mov
outsb
bound
mov
out
and
movsb
adc
mov
lods
les
gs
ret
push
lock
sub
inc
sbb
les
ss
sar
dec
jecxz
rol
icebp
cmpsb
jnp
or
xchg
je
je
cmc
push
dec
rcr
les
pop
mov
sub
xor
add
fisubs
sub
call
in
mov
daa
xor
jbe
sbb
adc
rorb
setle
stos
call
cs
adc
fimuls
adc
sub
test
inc
inc
jle
mov
push
xor
push
mov
sub
mov
mov
sbbb
out
outsl
pusha
xchg
push
pushf
ss
inc
dec
into
dec
addr16
testb
rcr
xchg
addb
sbb
or
shrb
shll
cmp
mov
loop
or
and
or
pop
outsb
jp
push
clc
nop
loopne
or
in
das
add
add
xor
test
ret
or
or
aad
lret
cltd
rclb
xchg
xchg
inc
jmp
mov
test
cmpl
ljmp
mov
xchg
push
adc
push
je
inc
fdivrs
mov
movsb
cmp
clc
mov
mov
dec
cmpsl
jecxz
addr16
lcall
mov
hlt
std
aad
mov
push
dec
movsb
ja
mov
or
rorl
or
mov
xor
shll
add
call
data16
jmp
pop
popa
jno
pop
movsl
push
ficoms
pop
and
add
div
std
sub
mov
push
idivl
cmpsb
fidivrs
cmpsl
lahf
aaa
push
inc
scas
push
add
adc
and
xchg
pop
clc
hlt
inc
repz
outsb
aas
mov
in
sub
push
outsl
cmp
cmp
add
cmpl
mov
mov
push
mov
dec
fsqrt
insb
sbb
loopne
call
push
ljmp
mov
mov
mov
dec
push
dec
aas
add
pop
mov
or
jl
push
sti
test
icebp
add
inc
int3
add
movsb
lods
repnz
mov
xchg
dec
mov
and
pop
mov
add
loopne
jo
dec
push
aas
lds
sahf
mov
xchg
fs
daa
dec
mov
cwtl
pusha
aaa
add
jmp
cmp
ja
stos
cmp
pop
or
jp
push
jl
cmp
dec
insl
popa
imull
mov
je
cmpsl
and
mov
dec
test
pushf
scas
inc
cs
aaa
ret
or
in
pop
adc
in
jl
cltd
sti
cltd
jge
mov
bound
xor
jbe
ds
in
or
sub
inc
pushf
in
jno
xchg
inc
icebp
pop
pushf
lock
enter
xchg
es
popf
pop
inc
xchg
iret
xchg
push
movsb
lods
mov
aas
loope
or
mov
pop
sbb
je
or
add
adc
fcoms
add
inc
xorl
jg
and
xchg
mov
lcall
xor
repnz
fldl
lcall
shr
nop
movl
je
daa
and
rorb
shr
adc
movsl
or
push
fdivr
push
xor
jecxz
cmpsl
inc
in
push
push
imul
sub
cmp
pop
xchg
rol
es
mov
cmp
dec
dec
repnz
jl
or
jb
sub
xor
cld
ja
mov
dec
cmp
adc
sbb
lock
fsubrp
arpl
sarb
sbb
jl
in
stc
sbb
mov
ror
mov
pop
xor
dec
pop
inc
loope
test
jmp
inc
fstpt
cs
push
mov
fcoms
pop
imulb
pop
fildll
aas
sbb
mov
fs
cli
int
int
push
mov
or
das
mov
pop
pop
loopne
scas
sbb
out
mov
leave
inc
cmp
push
popf
std
fdivs
dec
push
and
aas
nop
mov
sub
enter
cmp
repz
loop
jne
fs
cmp
ror
outsb
mov
cmc
imul
push
leave
mov
xor
fldcw
lds
repnz
mov
jae
xchg
lret
outsl
lods
out
incl
sti
xchg
iret
push
sarb
mov
push
mov
cmp
ret
push
and
notl
push
jecxz
scas
jle
inc
cld
jg
add
mov
pop
inc
push
and
xchg
cmp
sbb
xchg
jmp
push
insb
xchg
roll
mov
shl
pop
push
stos
mov
std
mov
or
outsl
std
sbb
xor
cmpsb
push
xchg
out
jnp
popf
xor
stos
aad
pop
xor
jle
and
pop
in
mov
enter
out
lahf
sbb
mov
mov
sub
jge
adc
cmp
mov
mull
flds
xchg
ret
cmpb
pop
iret
dec
fldcw
pushf
test
stos
out
sbb
into
inc
add
and
testb
mov
xor
push
out
and
mov
repz
xor
ljmp
sub
mov
jl
pop
pop
xor
mov
adc
lods
arpl
jp
xchg
frstor
rorl
lret
mov
cmpsl
nop
rorb
or
lcall
or
imul
add
adc
bound
loopne
xchg
mov
add
out
mov
mov
imul
ja
inc
jns
adc
jmp
cld
or
pop
andb
cmpsl
adc
add
dec
dec
data16
nop
icebp
add
ret
mov
cmpsb
mov
mov
je
js
in
xchg
repnz
mov
mov
mov
out
fisubrs
cld
loopne
cmp
jmp
adc
add
jo
mov
xchg
pop
je
ret
pop
stc
or
imul
mov
test
push
or
aaa
mov
jge
cmp
test
icebp
mov
mov
mov
out
in
xorl
test
sub
int
mov
cmp
mov
add
dec
es
bound
out
dec
imull
sbb
mov
lds
and
call
test
push
lcall
inc
pushf
mov
inc
add
repnz
outsl
leave
popf
movsl
lret
iret
sub
mov
xor
lods
sub
xchg
mov
popf
addr16
sbb
inc
push
hlt
scas
movb
push
jle
dec
repz
fstps
xor
push
add
test
or
aam
fiaddl
data16
movsb
cmp
xchg
mov
pop
js
out
inc
adc
push
shrb
inc
mov
hlt
cld
mov
sub
scas
xchg
call
test
decl
inc
pop
xchg
push
cmp
je
mov
cmpsl
gs
sarl
pop
imul
xor
movsl
dec
jp
push
lahf
jne
add
imul
pop
jle
add
push
sub
jecxz
mov
or
lret
push
push
fmuls
fcmovnbe
lahf
lds
nop
mov
adc
subl
vunpcklps
mov
shll
pusha
or
inc
xor
test
in
outsb
mul
xchg
fdivl
mov
sbb
test
ret
cmp
sti
pop
adc
in
test
pop
popf
scas
adc
jae
lods
inc
mov
loope
add
test
pusha
pushf
jnp
push
stc
testb
adc
ret
add
mov
loop
ja
shll
xchg
and
mov
lds
cwtl
cmp
testl
sbb
pop
xlat
cmpsl
stc
mov
pop
pop
inc
xor
hlt
adcb
das
mov
pop
xor
icebp
jno
mov
jge
xchg
gs
xchg
push
jnp
push
cmp
sbb
push
sub
pop
pusha
mov
or
add
cwtl
iret
and
and
leave
imul
jno
sbb
xchg
shrb
cmp
dec
mov
outsb
out
neg
cld
and
mov
lret
insl
cmc
adc
shrl
out
les
or
bound
mov
flds
addr16
sahf
xorl
push
pop
testl
aas
mov
in
inc
jbe
filds
sahf
cmp
les
pop
leave
xor
imul
or
fidivrs
fldcw
hlt
xor
lcall
cmc
jecxz
cmp
hlt
je
jecxz
cltd
dec
jle
cs
es
stc
push
sbb
push
in
mov
push
add
add
in
mov
cmp
fucomp
neg
jb
cld
aas
inc
out
push
sub
stc
xchg
dec
cmpsb
dec
add
testl
aam
inc
in
and
sbb
mov
aam
xchg
aas
daa
dec
stos
sub
imul
loope
dec
mov
aaa
inc
fldcw
js
insl
cld
in
std
mov
movsl
cmc
insb
jnp
mov
inc
mov
and
mov
jno
fnsave
cmp
lods
add
notb
pop
fwait
dec
ret
xor
mov
stos
dec
stc
xchg
into
push
push
pop
jbe
sbb
cmp
bound
mov
mov
filds
in
xor
jb
mov
jo
pop
push
sbb
push
and
sbb
loop
ljmp
cmovb
shrb
jge
cmp
add
js
dec
dec
arpl
das
ja
test
vmread
cmc
mov
mov
mov
sarl
pusha
inc
pusha
inc
mov
and
ljmp
loop
inc
loopne
movsb
fdivrl
pushf
repnz
mov
sbb
in
js
xor
into
add
ds
inc
or
frstor
mov
mov
pop
ja
mov
lret
cmp
je
jl
mov
out
aad
xor
pop
mov
pushl
inc
xlat
dec
inc
or
adc
outsb
lahf
std
adc
adc
imul
lods
adc
insb
add
cld
cmp
xor
in
add
test
subl
cmp
cmp
sbb
clc
leave
push
pop
mov
fmuls
fsubrp
icebp
loop
dec
insl
out
out
xor
push
into
inc
out
dec
mov
out
andb
ja
hlt
xor
cmp
lret
lock
pop
scas
mov
ja
in
lods
ds
divps
sti
push
fbstp
push
into
shrb
push
push
jl
mov
pop
jmp
cmp
jg
xor
test
out
sbb
cmc
push
pop
push
out
add
imul
roll
cmp
icebp
and
movsl
loopne
lret
ljmp
out
jo
cmp
push
xchg
jge
adc
xchg
adc
popf
out
jnp
mov
out
mov
sti
pop
cmc
sbb
mov
arpl
pushf
test
add
aaa
das
test
dec
mov
and
or
pop
pop
cmpsb
push
sub
cmpsb
pusha
adc
jo
xchg
mov
sti
in
stc
xchg
push
ffreep
and
cmp
in
mov
out
and
sub
std
dec
xchg
add
loopne
pop
sti
push
cmp
xchg
idivl
mov
cmp
inc
leave
jle
jb
xor
movaps
fistps
mull
pop
push
ret
les
ret
xchg
jae
aaa
jmp
adc
xor
cld
lret
addr16
cmp
xor
or
dec
mov
mov
or
xlat
and
insb
in
icebp
fs
lret
mov
push
add
adc
repz
arpl
test
or
and
xchg
pushf
call
mov
aam
jge
push
xchg
or
jno
scas
jg
mov
bound
sbb
std
inc
pushf
push
mov
mov
push
in
mov
cmp
dec
dec
pop
fs
sahf
roll
in
xchg
dec
scas
aas
dec
out
jg
mov
mov
jno
adc
mov
fcoms
mov
mov
inc
popa
cld
addl
add
xchg
mov
fwait
push
mov
hlt
mov
aam
pop
add
push
push
or
lcall
cmp
mov
and
adc
inc
arpl
inc
dec
clc
loopne
mov
imul
pop
mov
xchg
or
fdiv
outsb
cs
inc
in
ja
jg
mov
adc
sti
pop
jp
leave
and
jnp
mov
xlat
inc
pop
cli
loop
in
lock
mov
inc
mov
inc
cmc
leave
add
decb
xor
int
push
cmpl
xchg
jbe
cli
test
arpl
adc
cltd
repnz
mov
rolb
into
leave
jne
push
call
jbe
pop
enter
push
imul
push
pop
lret
adc
mov
pop
inc
stos
mov
dec
mov
mov
or
ret
jne
fst
movsl
add
dec
pop
shr
inc
mov
mov
out
or
cwtl
sub
pusha
or
inc
push
pop
adc
xchg
pop
ds
pop
test
sbb
jb
or
mov
test
pop
jne
cmpsb
cmpsb
and
mov
out
mov
sbb
dec
inc
je
mov
leave
lock
loopne
cmpsb
or
test
arpl
adc
dec
out
push
dec
lcall
scas
dec
pop
pop
mov
cmp
xor
or
insb
lods
mov
pop
test
in
and
adc
mov
sbbb
ds
adc
enter
out
pop
pop
aas
adc
mov
mov
sti
xorl
dec
int3
iret
fwait
aaa
out
stc
dec
or
insl
inc
mov
jb
or
cltd
jnp
pop
mov
sub
adc
inc
lret
jle
fcomps
inc
dec
outsl
mov
dec
aas
cs
and
sbb
ds
fxch
xchg
push
sub
jo
ret
mov
mov
xchg
mov
mov
adc
imul
daa
xchg
cli
mov
xlat
jecxz
xor
pop
dec
mov
in
jno
js
cld
push
arpl
sub
push
add
shrb
int
xchg
je
repnz
int3
jne
push
mov
xchg
addr16
adc
pop
lea
pop
mov
fistpl
mov
mov
push
lds
popf
sub
push
xchg
inc
popf
xchg
pop
xchg
leave
hlt
data16
aas
iret
sbb
inc
jmp
ss
popf
jmp
cmpsb
mov
and
js
popf
test
xchg
sub
icebp
mov
imul
add
mov
rorb
stc
mov
jae
lcall
xchg
int
out
or
cld
enter
xor
cmp
in
ljmp
xorl
mul
movb
aas
sbb
call
add
repnz
clc
jne
stc
push
add
and
xor
mov
repnz
push
and
out
outsl
inc
or
je
lret
lods
cmp
insl
scas
inc
fbld
add
sub
movsb
sub
cmpsl
dec
sub
js
js
scas
scas
test
jns
or
cmc
xchg
andl
dec
movsb
in
scas
into
inc
push
out
cs
ffree
int3
cmpsl
dec
movsb
out
add
cwtl
pushf
jp
test
push
dec
mov
add
jns
xchg
mov
pop
push
xchg
and
inc
adc
xchg
adc
outsl
add
ja
jecxz
daa
pop
movsb
pop
cltd
les
xor
in
lret
clc
out
pop
and
cmp
sbb
sahf
or
cwtl
imul
addb
and
xor
jmp
addr16
lea
out
lea
xor
xor
mov
in
xlat
lahf
mov
mov
rorl
mov
rclb
add
mov
jp
rclb
outsl
adc
stos
jecxz
fildl
cmp
adc
cltd
enter
mov
or
movsb
test
push
out
jnp
lret
jp
dec
add
adc
push
mov
inc
push
or
lods
out
aad
outsb
fwait
jp
clc
xchg
mov
mov
pop
mov
dec
fst
adc
cmp
movsb
lods
lods
xchg
mov
syscall
test
sahf
movsl
and
ss
enter
xchg
jle
and
popf
aaa
ret
mov
cmpsl
lods
push
leave
ljmp
sbb
lods
add
in
mov
push
mov
mov
sub
inc
inc
dec
test
pop
mov
push
into
clc
pop
cmc
out
sub
sti
cmpsb
sub
and
cmp
xor
lahf
stc
aas
or
xchg
lods
movsb
fstp
sbb
xchg
push
lcall
aad
dec
push
fsubl
jns
adc
aam
cld
test
push
jle
add
and
xlat
repz
adc
pop
cld
add
jecxz
sbb
jl
mov
mov
stos
clc
stos
push
scas
adc
xchg
xor
or
push
inc
push
jno
jl
push
sub
pop
push
rclb
push
aas
test
paddw
mov
je
xor
in
scas
sub
push
add
fists
ret
xor
push
jl
push
repz
dec
into
push
adc
enter
pop
movsl
mov
stc
int3
sub
and
cmpl
lret
loop
in
cli
out
insl
jno
out
or
push
pop
and
cmc
pusha
scas
je
aam
icebp
mov
xchg
adc
adc
inc
dec
scas
test
mov
aas
pop
flds
mov
push
xlat
pop
xor
sarb
dec
xchg
or
inc
jo
xchg
pop
jle
pop
jecxz
in
jo
cmc
pop
ja
xor
lods
mov
orb
clc
push
ret
mov
cmp
push
mov
pop
fsubrl
add
or
xor
das
mov
cltd
pop
mov
jge
push
sub
push
rcl
inc
pop
or
lcall
mov
xlat
rcrl
xchg
repz
stc
out
repnz
cmpsl
xor
add
fistl
sti
dec
pop
pushf
push
jbe
pop
shlb
dec
in
shr
push
mov
xchg
jae
or
movsl
xor
xchg
inc
jae
adc
xor
mov
pop
dec
add
push
mov
mov
push
jo
daa
dec
ret
mov
xor
repz
xchg
dec
fdivp
lcall
mov
imul
dec
outsl
out
pushf
stos
push
aas
dec
mov
add
daa
mov
cwtl
orb
divl
ret
lock
lret
aad
or
cmp
stc
adc
add
jb
pop
or
dec
cmp
jae
aas
sub
cmpsb
fwait
cmp
iret
or
daa
or
rcrl
std
stos
push
dec
bnd
pop
rolb
pop
subl
icebp
lea
cmp
pop
xchg
shll
gs
jo
lock
mov
xchg
push
mov
and
sub
sub
ret
ret
sub
mov
lea
lock
pop
or
inc
ficomps
pop
and
jae
pop
fiaddl
jns
add
inc
xchg
jns
mov
mov
pop
inc
icebp
jne
add
cmc
out
inc
out
and
ja
mov
stc
fstl
lock
push
arpl
push
mov
icebp
repnz
lods
test
jb
xchg
dec
repnz
mov
add
jae
pop
lea
addr16
cwtl
sub
fnsave
xlat
xor
or
jl
out
andl
mov
xchg
ljmp
lret
mov
movsl
ret
pop
cmpsb
fsubs
add
scas
sbb
cmpsb
xchg
jl
bswap
push
int
lret
test
add
jo
int
ret
cs
push
mov
movsl
pop
cmp
sbb
es
scas
sub
cmp
setge
mov
xchg
out
lret
lcall
mov
aas
sbb
xor
add
cmp
push
pusha
stc
scas
mov
arpl
sub
dec
cltd
dec
add
fidivrs
or
and
lds
test
in
test
stc
pop
jecxz
or
push
push
aam
popa
fwait
xchg
xor
loopne
jp
loop
add
mov
bound
mov
pusha
lahf
lock
in
pop
push
xchg
addl
mov
int
inc
movsl
hlt
xchg
inc
cmp
dec
and
faddl
pop
dec
rorl
xchg
fimuls
sub
loope
ret
xor
or
xchg
pop
es
lahf
push
js
inc
push
mov
das
or
dec
push
push
mov
mov
xchg
sbb
out
mov
add
lcall
scas
lods
pop
lods
or
lret
lret
mov
into
push
mov
and
nop
das
or
ja
push
mov
pop
mov
je
mov
add
push
pop
rcl
rorl
and
or
mov
inc
cmp
inc
mov
stos
fs
gs
mov
cmp
inc
sub
push
jecxz
cmp
jp
add
push
mov
repnz
push
push
ss
fnstcw
mov
jp
lret
ret
out
loop
inc
lds
cmp
cltd
xor
and
daa
test
pushf
mov
cli
mov
ja
inc
outsb
adcl
mov
lea
js
dec
popa
sbb
jae
jno
xor
lods
push
jbe
mov
adc
in
inc
dec
xchg
mov
call
xchg
mov
lock
push
mov
hlt
xchg
mov
imul
push
addb
out
int3
mov
sub
pusha
or
test
pushl
pop
inc
iret
mov
decl
shlb
std
or
jns
add
xor
jae
mov
mov
mov
and
mov
cld
xchg
and
sbb
dec
lock
rorb
and
inc
inc
lret
and
fidivs
aaa
loop
inc
pop
inc
popf
add
jge
out
cmp
stc
push
nop
cltd
adcb
push
cli
rcl
dec
ret
adc
push
jp
arpl
aaa
push
add
mov
test
stos
sub
popf
pop
and
ret
mov
das
mov
scas
aam
scas
jl
jb
scas
js
add
push
lods
mov
and
sub
lcall
call
in
adcb
push
data16
push
gs
movsb
cmp
pop
xlat
cli
ss
lock
fdivrs
push
or
cmp
aad
pop
and
add
repz
inc
mov
hlt
shrb
clc
ja
mov
and
inc
adc
pop
mov
lahf
int3
repnz
pop
mov
sub
dec
jge
push
sub
jmp
jmp
in
loop
jno
xor
sub
mov
jae
aad
int3
es
mov
or
mov
jo
mov
push
ss
rcrb
dec
sub
push
fcmovnu
xchg
js
aaa
or
fisubs
mov
inc
xorb
xor
iret
int3
in
jge
xor
mov
lcall
xorb
push
out
testl
jg
xor
outsl
and
add
or
fisubl
inc
push
inc
orb
popf
jg
aas
xor
sub
fstps
rorl
ret
jp
dec
and
nop
fistps
cmp
sti
movzbl
push
sbb
dec
test
push
or
icebp
dec
xor
cwtl
lahf
lahf
inc
jecxz
jb
fisubl
push
xor
and
aam
mov
data16
dec
or
cmpsl
dec
mov
mov
cmp
push
and
cmp
push
mov
mov
mov
hlt
adc
or
decl
repnz
fs
ret
cmp
jae
roll
mov
dec
jmp
jnp
jo
mov
jb
push
insl
mov
call
jne
mov
insl
ret
scas
inc
mov
loop
or
inc
setno
xor
xor
jg
outsb
push
aas
lret
mov
fucomip
xchg
mov
lcall
and
or
notl
mov
in
std
add
dec
movsl
hlt
lcall
popa
xchg
xchg
out
and
pop
or
pushf
pop
adc
adc
scas
loop
xchg
lds
push
sbb
fistps
jmp
xor
push
fnsave
push
fwait
cmp
mov
fucom
loop
xorl
xchg
outsb
xor
push
sti
sub
fldt
pop
inc
sbb
lods
cmpsb
mov
inc
ret
mov
mov
dec
outsb
dec
lds
movsl
mov
mov
mov
shll
pop
pusha
test
mov
pop
das
xor
push
andl
inc
in
das
loope
arpl
xor
das
outsb
sub
clc
or
test
ds
call
outsb
sbb
jo
ja
push
test
out
out
pop
mov
movsb
or
out
ljmp
sbb
cltd
movsl
sbb
add
out
xor
jg
test
insl
mov
or
shr
orl
push
mull
lret
dec
imul
das
mov
cwtl
lock
stos
pop
ret
dec
mov
jne
test
testb
les
jl
ljmp
cmpsl
ret
js
mov
es
jl
mov
stos
sahf
out
ds
jp
mov
bound
and
fldt
loopne,pn
xlat
dec
scas
imul
xchg
xchg
dec
popa
push
mov
add
fdivrs
sbb
ret
cmp
adc
mov
mov
sbb
fucomp
xor
jg
or
gs
pusha
and
sub
jbe
dec
push
cmp
jb
out
and
lahf
cmpb
sub
xchg
xchg
leave
jecxz
xchg
dec
pop
mov
cltd
cmp
push
sub
mov
stos
lock
jb
jmp
popa
stos
push
sub
loopne
mov
popa
in
bound
push
fdivrs
pusha
inc
inc
push
data16
mov
loopne
cmp
lcall
dec
mov
adc
sti
fisubs
fwait
pop
fistl
mov
insb
dec
js
jns
mov
sbb
stos
out
arpl
out
sbb
jmp
mov
xor
xlat
push
xchg
js
mul
imul
push
cli
pop
leave
lret
mull
fs
enter
clc
dec
adc
add
push
jle
mov
push
adcb
data16
lahf
pop
pop
jge
insb
xchg
mov
dec
imul
sbb
push
loopne
pop
fidivrl
es
xor
add
scas
inc
mov
sbb
xchg
dec
adc
dec
pop
or
jns
push
sbb
scas
sub
or
xchg
mov
dec
fstpl
lock
mov
fistpl
inc
cltd
sub
shlb
mov
clc
inc
sar
aas
int3
lahf
cmp
jle
arpl
mov
push
inc
in
jge
outsb
jne
filds
into
jns
xchg
mov
dec
sti
push
adc
and
out
cltd
clc
mov
or
xchg
add
mov
test
inc
pop
and
movsb
imul
loopne
pusha
outsb
add
mov
loope
push
loope
xchg
aas
and
das
aas
or
mov
add
push
lods
mov
gs
movsb
jno
test
arpl
lret
mov
scas
pop
push
mov
push
lahf
jo
add
pop
add
loopne
aad
pop
or
popf
jnp
test
loop
add
addb
adc
xchg
xchg
cmp
mov
cmp
fstpt
mov
aad
inc
fmull
outsl
dec
sub
int3
jl
cmc
pop
icebp
adc
adc
jbe
mov
daa
int
out
faddl
repz
icebp
nop
bound
mov
pop
out
stos
pop
and
fs
xchg
das
mov
and
mov
outsb
push
ret
push
push
lods
xchg
xor
mov
insb
push
xchg
sahf
das
icebp
jl
inc
dec
sbb
add
testl
ja
lahf
leave
movsl
inc
dec
adc
ss
in
adc
call
xor
aas
pop
cmp
mov
ss
push
sbb
cs
xchg
adc
jb
icebp
ja
daa
pop
cmp
inc
loopne
add
lea
in
pop
into
pusha
jae
xchg
mov
es
xchg
push
sahf
sarb
inc
lea
sub
lods
dec
dec
imul
out
sub
lret
inc
leave
and
pusha
mov
inc
notl
testl
ret
loop
pop
test
xlat
imul
xor
push
mov
ret
fisubrs
jbe
and
xor
xchg
fadd
pop
pop
xchg
inc
pop
dec
repz
xchg
push
mov
rcrb
push
mov
dec
pop
decb
fimull
and
xor
sbb
repz
call
lds
pop
push
out
inc
mov
addl
dec
dec
dec
ror
mov
int3
insb
repnz
pushf
sub
lret
xchg
leave
mov
push
outsl
mov
cmpsb
mov
movsb
and
cmpsb
ljmp
sub
cltd
mov
xor
jae
out
hlt
pop
loope
les
mov
mov
outsb
loopne
xchg
aaa
mov
pop
xlat
add
inc
aam
enter
je
sub
and
xchg
inc
pop
testb
out
pop
push
add
ficomps
ss
lret
mov
cmc
sub
sub
cmp
test
cmp
repz
mov
adc
xlat
adc
and
sub
cs
jmp
mov
add
repz
mov
pop
mov
das
sub
jb
push
idiv
and
xor
jbe
mov
cmpsl
mov
jl
jle
rcll
lret
pop
lock
jmp
jle
popa
insb
lahf
movsl
xor
mov
addb
add
and
pop
add
lret
dec
push
adc
jne
stc
pop
adc
mov
pop
pop
xlat
mov
hlt
sti
push
xor
cwtl
lock
add
imul
add
mov
xorb
sub
ljmp
mov
push
mov
cld
mov
push
dec
pop
add
sbb
fwait
sub
jle
mov
out
test
cwtl
cmpsl
cmpsl
cwtl
pop
pop
stos
cmp
dec
xor
daa
adc
adc
or
push
sub
icebp
or
jbe
or
mov
dec
push
push
mov
lods
jg
lock
push
jns
into
arpl
push
cmp
divl
add
sbb
or
push
popa
daa
or
lret
in
leave
cmp
pop
xchg
es
enter
and
out
add
in
add
ret
push
les
daa
dec
stos
lods
cmc
mov
jp
and
mov
xor
roll
pop
out
add
cmc
in
xlat
popa
fidivl
out
xlat
dec
idivl
add
push
mov
mov
pushf
pop
rorb
adc
xchg
inc
inc
out
mov
call
cmpsl
add
mov
lock
sahf
jae
jbe
xor
jmp
faddl
cmp
or
insb
or
mov
lcall
xor
pop
dec
sbb
out
fsubr
int
jns
jnp
test
fnstsw
and
adc
pop
sbb
or
lret
inc
mov
cmpsl
ss
inc
jno
or
test
mov
mov
icebp
mov
jmp
or
mov
data16
cmp
fprem
cmp
sub
rcrb
xchg
into
cmp
movsl
cmpsl
xor
xchg
in
inc
pop
je
fs
fmulp
and
mov
jmp
add
pop
nop
aam
jl
lret
aad
stc
push
adc
leave
mov
push
iret
jmp
out
jl
pop
or
xchg
bound
sbb
sub
mov
into
dec
ljmp
lret
dec
push
pop
jb
xor
push
jle
mov
inc
out
std
sbb
or
dec
repz
add
call
scas
mov
stos
sub
iret
sbb
xchg
nop
sbb
jo
pop
daa
pop
cmp
mov
add
sbb
sub
add
fwait
sub
mov
outsl
push
add
rcrb
fidivrl
inc
nop
push
out
add
out
mov
test
jo
jbe
sub
js
movsl
jmp
inc
adc
add
mov
mov
fnstcw
fldl
rcr
push
pop
jg
leave
test
out
outsl
xorb
repnz
mov
es
and
mov
pop
sbb
sub
xchg
scas
or
lds
inc
pop
push
stc
vpmacsww
ds
cmpsl
lods
std
jle
ret
xor
in
pop
mov
inc
mov
fiaddl
int
scas
adc
or
sub
push
decb
jno
bound
adc
sbb
clc
js
jmp
dec
fiadds
shl
rorl
call
cmpsl
push
daa
push
sbb
push
inc
nop
fxch
mov
into
pop
repnz
idiv
push
xor
mull
mov
adc
adcb
mov
fcoms
pop
inc
out
stos
repnz
mov
out
jo
mov
jno
test
push
pop
movsb
aaa
in
cmp
xchg
pop
popa
push
ret
aaa
adc
or
xlat
fsubrp
xor
sahf
add
add
aam
std
iret
mov
xchg
arpl
jne
sbb
roll
mov
imul
and
sub
icebp
into
aad
movsb
mov
mov
mov
push
jg
xchg
or
lds
lahf
out
aaa
stos
out
lea
or
rcrl
cmpb
incb
pop
jmp
mov
les
jne
mov
pop
imul
fidivs
shrb
or
xor
inc
adc
cmpl
mov
lods
std
pop
loope
roll
aam
call
aaa
xor
mov
mov
mov
cmp
jmp
mov
jl
mov
cltd
pop
push
mov
xchg
inc
jle
push
out
enter
add
or
mov
push
into
dec
imul
sbb
ja
xor
ljmp
mov
sbb
dec
or
sub
icebp
pushf
mov
into
and
xchg
add
stos
cmpsb
dec
push
cs
into
push
sub
arpl
fisubs
jl
shlb
push
imul
in
iret
cmc
stos
mov
xchg
push
cltd
loop
adc
outsl
gs
jbe
cmp
and
or
fcoml
cmp
out
pusha
and
pop
add
or
jmp
push
dec
fimuls
jae
inc
rcll
fwait
je
pop
sbb
bound
push
ljmp
rol
dec
jmp
stc
push
xchg
ret
jo
push
sbb
loop
incb
out
popa
mov
or
or
cmc
roll
and
mov
call
mov
jae
jbe
push
test
ja
pop
and
cmp
jle
in
mov
cmp
mov
fdivl
imul
cmpsb
and
ficomps
shlb
aam
lret
cmp
lahf
cmp
rcl
pop
ret
dec
or
jle
xor
loop
cmpsb
das
add
push
cmp
sub
push
sub
sub
sbb
adc
loopne
push
push
pushf
dec
loope
jge
loopne
push
mov
decb
xchg
sbbl
xor
xchg
shll
inc
out
sahf
xchg
jns
push
push
push
mov
pop
pop
cs
mov
pop
mov
sbb
cmp
fsubrl
frstor
mov
sub
nop
mov
sbb
ljmp
out
dec
iret
add
inc
push
mov
sbb
adc
aas
jp
popa
pop
jl
push
addl
loopne
repz
mov
pop
gs
std
push
stc
mov
loope
pop
sub
ret
dec
inc
gs
jno
add
mov
in
fldenv
in
add
push
jmp
mov
or
mov
mov
lea
jae
call
xor
sbb
ficompl
sub
push
xchg
test
or
add
mov
jp
outsl
ret
sbb
and
mov
sub
mov
stc
daa
stos
cs
xor
mov
cli
push
jbe
inc
xchg
arpl
xchg
jl
adc
cltd
xor
insl
xor
mov
in
push
scas
cmpb
inc
jle
gs
sahf
outsb
and
add
push
std
dec
mov
mov
aaa
add
inc
cmp
sahf
and
sub
jne
push
orb
mov
sub
sti
sti
add
mov
dec
fcomi
movsl
icebp
mov
mov
jns
or
cli
mov
cmp
cmova
es
mov
adc
das
fstps
testb
adc
pop
push
in
inc
aam
mov
push
scas
in
insb
faddl
mov
jae
push
jmp
pusha
adc
mov
mov
pop
and
pop
mov
xlat
mov
or
and
mov
lds
sub
mov
pop
pop
mov
cmpsl
test
repnz
cmp
fdivrl
in
jg
push
divl
sbb
lret
lahf
sub
cld
ficoms
add
in
neg
es
inc
inc
dec
mov
pushf
pop
xchg
mov
xor
adcb
insb
xor
sub
sti
fsubrs
mov
dec
movl
movsl
js
add
push
inc
in
cld
mov
push
mov
push
xor
roll
aam
dec
cld
call
mov
sbb
loop
stos
ret
add
xchg
movsl
push
in
in
pop
pop
cmp
in
push
es
mov
dec
idiv
pop
push
repz
adc
enter
pop
movsb
xchg
inc
enter
dec
sbb
mov
insb
add
dec
mov
sub
xchg
pop
insb
inc
xor
into
fadds
sub
jp
cmc
loopne
mov
push
xor
xchg
sub
popa
xor
ja
push
std
mov
fmuls
daa
sub
jno
out
cmp
jge
iret
or
call
stc
inc
popf
xor
dec
jg
add
mov
repnz
loop
xchg
adc
inc
aaa
out
jl
neg
into
jg
jae
adc
xor
arpl
subb
cmp
into
arpl
add
pusha
cmp
xor
popf
dec
ds
test
xor
lret
out
push
dec
jp
aaa
inc
push
fdiv
adc
add
fcoms
sub
mov
push
jns
imul
inc
sub
fisubl
loop
xlat
lret
ljmp
pusha
std
jg
mov
mov
inc
cltd
cmp
test
stos
jb
in
sub
sub
jae
stos
imul
cltd
xchg
push
mov
insl
out
js
icebp
xchg
adc
xor
aam
es
or
sub
out
mov
and
push
mov
pop
mov
inc
mov
jae
push
add
ja
adc
orb
and
inc
jg
sarl
cmp
insl
divl
into
push
pusha
ret
enter
arpl
out
xchg
xchg
movsb
mov
xchg
jg
out
das
in
dec
std
lret
pop
mov
pushf
cmp
iret
mov
scas
imull
das
mov
in
mov
inc
insl
jns
gs
addr16
int
fsts
ljmp
pop
push
inc
mov
mov
push
insl
scas
add
cmp
mov
cmp
inc
enter
mov
mov
jb
jecxz
mov
stos
push
push
addb
cltd
in
lret
xchg
push
in
int
out
pop
push
rcr
les
xchg
imul
arpl
pop
enter
popf
mov
dec
inc
and
mov
push
sti
mov
mov
out
sbb
cmp
sub
and
cmp
pop
and
mov
lock
icebp
jno
inc
mov
push
ja
inc
push
mov
hlt
and
lock
out
div
adc
leave
loopne
hlt
inc
add
cmp
sti
jo
orl
xchg
or
inc
xlat
out
push
mulb
ret
sub
lock
orb
pop
xlat
push
movsb
fs
add
imul
cmc
notl
pop
jg
jmp
ror
in
and
cmp
mov
mov
xchg
popf
aad
lcall
push
cmpl
push
sub
sub
xchg
jns
jns
pusha
imul
xor
push
add
sahf
jg
jmp
push
sub
cmp
xchg
jge
ret
rorl
in
js
jp
das
pop
dec
inc
leave
and
mov
jg
and
int
int
fidivl
int
adc
inc
sar
mov
imul
mov
pop
in
js
lods
adc
and
fisttpll
or
push
inc
inc
xchg
add
push
inc
xchg
mov
js
into
lds
adc
mov
loope
or
negl
adc
push
adc
repnz
push
and
sub
dec
adc
pop
sbb
xchg
inc
js
jns
dec
aad
inc
leave
ss
hlt
pusha
outsb
outsb
push
mov
notb
loop
sbbb
jns
xor
fistpll
ja
into
cltd
in
xor
push
pop
loope
or
arpl
fldenv
hlt
int3
sbb
test
or
test
nop
mov
push
pop
addr16
lds
shlb
outsl
sbb
or
mov
mov
mov
clc
mov
adc
les
rolb
adc
mov
jns
ret
sbb
mov
and
dec
into
std
out
sahf
jl
js
imulb
or
xor
push
or
scas
jb
test
ss
inc
xor
pop
add
cwtl
punpckhwd
icebp
and
pop
popl
mov
jl
jmp
je
dec
cs
test
sti
lds
aad
sub
adc
fwait
ret
sbb
loop
xlat
push
jl
mov
movsl
mov
into
cs
mov
adc
iret
lds
cmp
dec
xor
test
call
inc
mov
or
and
call
dec
cltd
mov
sahf
pop
xor
adc
adc
mov
adc
jae
adc
xor
setnp
mov
xor
je
xor
fiaddl
lods
sub
scas
pop
lret
or
mov
jb
jbe
cmp
adc
jge
inc
incl
enter
mov
and
mov
jbe
dec
inc
sub
test
push
popa
add
test
insb
lds
clc
aad
xchg
inc
push
pop
pop
gs
call
push
test
mov
adc
data16
dec
xor
lods
sbb
je
mov
popa
sub
jge
jb
es
add
dec
pop
clc
xchg
cs
pop
loop
call
xchg
push
pop
loope
sar
cmpsl
and
push
dec
jno
cmp
in
popf
popa
jb
out
jae
mov
in
daa
sbb
add
loopne
test
pop
mov
movsl
add
xchg
sahf
inc
xchg
sbbl
mov
in
orl
jge
mov
out
movsl
mov
mov
and
nop
aad
or
xchg
shl
pusha
stc
inc
mul
jge
jle
xchg
add
pop
or
aad
jno
adc
xor
mov
insl
popa
mov
out
fs
lea
cmp
fcoms
sub
xor
subl
sbb
pop
mov
test
jae
cmpsb
cmp
pusha
mov
sti
mov
outsb
imul
addr16
pop
add
lahf
insl
pop
stos
sub
bnd
aaa
fcomip
mov
push
mov
add
sbb
mov
cmp
aad
jns
jno
inc
mov
push
mov
test
pushf
fcomps
jl
cmovae
mov
or
xchg
mov
cltd
movsl
fisttpl
sahf
xchg
pop
lret
add
add
adc
inc
pop
and
and
mov
lods
mov
dec
addr16
in
clc
movsb
pop
pop
mov
and
cmp
dec
sbb
scas
ja
aad
repnz
xchg
sbb
xchg
cmp
jl
pop
cmp
inc
mov
bound
lock
lcall
dec
aad
and
lahf
jnp
das
sub
xchg
sahf
and
adc
pop
ret
js
jle
int
dec
incl
sbb
fldcw
push
fwait
test
jo
ds
cmp
daa
mov
icebp
dec
sub
pop
cmp
repnz
jg
stos
push
xor
or
lret
xor
fsubr
out
pop
xor
loopne
ret
pushf
adcl
adc
or
sbb
inc
or
movsl
sarb
popa
data16
adc
fs
xchg
dec
movsb
scas
jnp
inc
cwtl
adc
push
or
das
bound
dec
xor
push
loope
das
jge
not
fisubrl
stos
shlb
inc
lods
sarb
stc
cmp
jns
in
jmp
cmpb
fs
push
add
jnp
adc
cs
sbb
adc
repz
stos
sbb
sbbb
sahf
js
dec
or
loopne
int
lods
pop
push
lea
aaa
fidivs
push
mov
mov
clc
inc
mov
push
imul
mov
gs
mov
dec
dec
test
ljmp
xor
mov
mov
sub
mov
mov
jl
lret
icebp
movaps
nop
fmul
and
aad
psubd
cmp
gs
jmp
and
lea
mov
sarb
inc
pop
test
sub
xor
orl
push
clc
nop
rcrb
jg
lahf
inc
stos
ret
test
das
mov
or
mov
hlt
and
sbb
xor
cmpsb
cltd
xchg
inc
add
repz
cltd
dec
dec
add
sbb
mov
xor
dec
jno
lds
jne
enter
or
jns
les
xor
cmp
mov
dec
dec
stc
mov
std
in
mov
fwait
xchg
xchg
mov
aad
mov
and
hlt
sbb
test
pop
push
sbb
push
lock
cmp
push
or
call
sahf
cwtl
adc
sbb
les
ljmp
leave
xchg
aam
imul
dec
adc
add
ret
mov
xor
xor
cld
add
jecxz
mov
sub
je
cmpsl
adc
nop
decb
inc
cwtl
mov
mov
fistl
in
shlb
xor
mov
mov
inc
cmp
outsb
sahf
call
mov
or
jmp
dec
ret
jecxz
popf
push
out
loop
fcmovnb
and
fiadds
sbb
adc
ret
mov
stc
ljmp
pop
lahf
cmp
pop
xlat
cmp
aas
lea
ficoml
aad
dec
dec
loope
push
xchg
pmaddwd
roll
lods
scas
mov
cmc
cs
nop
test
or
in
inc
rcl
xchg
add
test
aam
xor
sub
sub
mov
mov
sub
loopne
ss
cmp
mov
mov
popf
mov
xor
mov
push
sbb
lcall
mov
sub
cmp
push
mov
jno
adc
lcall
lock
lods
sarb
jmp
push
pop
inc
adc
and
mov
xor
in
aas
cmpsb
xor
add
push
jecxz
pop
push
and
aad
test
int
fs
fmull
ss
loopne
xchg
adc
push
call
ds
mov
or
loope
sbb
scas
mov
in
and
fucomi
xchg
and
outsb
jmp
rdpmc
pop
test
lcall
inc
add
mov
jae
test
push
repnz
subl
pop
pop
mov
fsts
lcall
push
je
ljmp
fwait
sbb
mov
mov
inc
jg
jne
sahf
scas
and
loope
sub
fstpt
mov
in
std
mov
aam
mov
xor
pop
cmpsl
lret
pushf
cs
int
addl
jp
in
inc
mov
mov
imull
imul
jecxz
push
dec
aas
nop
push
test
mov
xor
scas
sbb
xchg
inc
fst
loop
cld
mov
inc
push
test
stos
or
in
push
cltd
fs
insl
fildl
test
lret
xor
or
fs
push
pop
mov
ja
mov
jne
jns
push
mov
adc
push
xor
lods
mov
xlat
mov
push
sbb
xlat
test
push
out
cmc
fwait
sub
and
lods
mov
xchg
std
jns
cltd
sub
push
js
dec
xorl
and
and
movsl
ja
lahf
es
sbb
jmp
cwtl
rolb
pop
das
sub
pop
orl
out
push
mov
pop
test
mov
bnd
pop
mov
inc
arpl
inc
ss
std
cmpsl
in
xor
std
sub
outsl
lret
mov
cmp
insl
leave
cltd
or
mov
mov
mov
pop
mov
adc
pop
loop
cli
lock
loopne
jno
pop
inc
mov
popa
inc
inc
jne
xchg
and
jbe
cmc
adc
mov
dec
lods
mov
mov
xchg
push
xlat
sbb
pusha
movsb
sbb
pop
shlb
mov
and
inc
test
aas
mov
das
push
sub
lock
lret
cli
add
movsb
dec
xchg
inc
and
loopne
cld
adc
and
lcall
test
jae
and
adc
push
mov
jnp
daa
pop
sub
daa
xacquire
loopne
sbb
mov
out
jl
pushf
orb
xchg
and
out
lcall
aad
mov
ret
daa
cmp
jo
cld
loope
sbb
cmp
outsb
repz
push
push
roll
cmp
inc
out
sahf
and
push
xor
dec
jmp
jg
sub
adc
adcl
leave
push
daa
jmp
jp
aad
inc
pop
aam
cs
xchg
mov
pop
rolb
jmp
xchg
sbb
sbb
inc
fcoml
xchg
sbb
xor
and
mov
inc
and
xchg
cmovle
repnz
jb
mov
js
push
or
inc
into
pop
inc
je
scas
xor
fidivrl
adc
int
and
shr
es
stos
jmp
xor
cwtl
leave
stc
cmpl
xor
xchg
cmpsb
pop
xchg
cmp
in
pusha
jne
idivl
cmp
inc
push
pop
jp
mov
gs
outsl
loope
divb
mov
or
cmp
dec
jno
insb
mov
ror
or
mov
sarl
mov
mov
shll
cmp
gs
push
mov
pop
es
adc
int
dec
dec
add
mov
or
lahf
icebp
into
inc
add
or
inc
add
jp
outsb
test
in
xchg
arpl
fstl
jnp
mov
xchg
cmc
xor
xchg
inc
dec
lcall
inc
aaa
xchg
fldl
cwtl
aas
inc
rolb
scas
fucom
pop
out
xchg
xchg
insb
mov
dec
inc
fcmovnu
pop
cmpsb
stos
mov
rcll
arpl
sbbl
in
adc
in
push
adc
mov
push
push
adc
scas
cmp
dec
xlat
loopne
dec
or
pop
gs
aam
cmpsb
push
jnp
mov
pop
inc
xor
jne
pop
xchg
lret
mov
andl
pop
push
dec
add
push
jge
stos
fs
xchg
dec
inc
mov
repnz
xchg
into
negb
push
jbe
sub
sbb
leave
dec
add
stc
xchg
mov
adc
sbb
mov
fucomip
ror
sub
fsubl
sarl
cmp
subl
out
js
lods
jecxz
xchg
mov
notl
aaa
aaa
jp
xchg
xchg
data16
adc
jecxz
out
xchg
mov
jnp
pop
sysexit
cs
adc
aas
push
mov
pop
add
push
or
or
adc
mov
fucompp
jp
lcall
js
in
mov
mov
ljmp
dec
sbb
ja
int3
jne
sub
dec
add
stos
ja
mov
out
xchg
or
dec
jmp
hlt
or
add
std
ja
lea
hlt
cld
stc
dec
rorl
test
loopne
mov
or
pop
adc
xchg
mov
mov
fidivrs
xchg
inc
dec
std
dec
jp
nop
sub
dec
push
adc
cmp
push
cmc
inc
sbb
jge
in
xchg
movsl
mov
mov
imul
push
mov
pop
lret
icebp
add
dec
or
lds
in
sub
in
aas
push
cmp
cs
dec
rcrl
lcall
loope
aaa
cmp
icebp
in
addl
addr16
fnstenv
mov
adc
fdiv
sbb
push
imul
pop
aam
and
fldenv
cmp
imulb
or
ds
orb
xchg
inc
hlt
jns
adc
test
in
xor
insb
mov
or
mov
add
sub
mov
xchg
mov
mov
test
sbb
aaa
int3
pop
mov
fnstcw
mov
and
xchg
movsb
in
lock
insl
das
imul
jp
adc
jecxz
fbld
pop
xor
jbe
out
rorb
and
leave
nop
push
xchg
aas
ljmp
xchg
pop
out
stos
mov
ljmpw
clc
ss
scas
xchg
cmpsb
aaa
mov
dec
test
pop
push
mov
push
jle
jge
pop
mov
les
movsb
mov
xchg
stos
pop
in
mov
xor
loope
push
repz
jne
cltd
pop
or
inc
out
jae
xchg
std
imul
sarb
sahf
inc
fistpl
sbb
in
fadd
or
or
clc
popa
pop
cli
test
outsb
sbb
fcmovnb
sub
iret
loope
or
cwtl
inc
loope
pop
jp
adc
adc
and
cmp
add
lock
lcall
stos
and
rorb
add
cld
fcoml
jp
push
in
lret
mov
test
sub
adc
mov
jne
movsl
adc
cmc
add
and
dec
push
in
les
or
repnz
sbb
xor
lea
and
cmpl
sub
mov
lahf
out
lcall
inc
subl
xor
xor
add
xchg
jo
jge
out
fwait
in
pop
push
shrb
ja
sahf
mov
testl
imul
cmp
js
mov
push
or
jmp
mov
stc
sub
sub
rorl
rorb
sbb
or
mov
pop
jns
stc
scas
push
push
jno
xchg
cltd
mov
push
mov
cld
sub
lods
stos
sbb
xchg
pushf
jno
adc
and
stos
add
jl
adc
ljmp
mov
scas
pop
movsl
ret
mov
dec
pop
mov
ljmp
push
cmp
lahf
iret
imul
js
fiaddl
ret
adc
fs
pop
test
enter
das
mov
or
and
xchg
inc
bnd
push
rcl
data16
stos
xchg
leave
mov
pop
dec
movsb
decl
pop
lret
aas
enter
adc
shlb
addr16
les
fidivl
rcl
das
ja
pop
pop
dec
cmp
imul
fdivp
imul
mov
pusha
mov
int3
inc
loop
hlt
mov
jne
aam
fidivl
fisubrl
cmp
mov
pop
add
cmpb
mov
test
add
sbb
adc
js
dec
sub
int
rcrb
push
int3
jne
mov
or
aad
gs
mov
or
mov
xlat
enter
ds
imul
adc
push
jge
mov
jecxz
lods
test
rep
cmc
xchg
dec
mov
out
dec
scas
mov
add
cltd
inc
in
cltd
inc
bound
sahf
int3
push
scas
dec
jmp
dec
fmuls
stos
mov
popf
mov
scas
mov
sbb
daa
lea
mov
jmp
lods
cwtl
es
push
xor
pusha
notl
jg
or
mov
loop
pop
xchg
mov
cmp
add
imul
test
pop
out
push
push
sti
xchg
sbb
pop
cmc
pop
insl
shrb
pshufw
je
xor
cmc
movsl
xchg
pop
std
jmp
mov
lcall
sarb
negl
pop
loopne
cmp
ss
inc
push
int
inc
sub
int3
push
push
in
mov
cmp
or
ret
mov
and
xor
mov
add
into
cli
loopne
jl
pop
jnp
mov
mov
fcom
js
fiadds
xor
arpl
mov
mov
push
inc
jns
xchg
dec
push
push
jnp
add
sub
test
add
push
add
push
in
movsb
lds
es
add
cs
sbb
cmp
fistl
pop
ss
fwait
fs
dec
and
mov
mov
divb
jecxz
pop
sahf
xchg
dec
andl
cmp
xor
inc
addr16
loope
push
jg
pusha
pop
enter
or
push
rorl
fnstcw
jbe
add
jl
pop
scas
sbb
push
arpl
push
xchg
out
sub
ret
pop
imull
fcmove
mov
fs
lock
loope
sbb
icebp
std
jb
gs
scas
mov
push
cmpsb
out
fistps
les
mov
mov
pop
imul
push
shrb
mov
clc
cmpb
into
sub
cmp
push
fcomps
pop
cmpsb
scas
lods
out
fldt
mov
jge
pusha
add
arpl
mov
cltd
loopne
pop
or
ljmp
pop
imul
pop
loop
enter
in
adc
aad
cs
cmp
dec
xrelease
pop
cmpsb
cs
sub
pop
jnp
insb
ret
or
dec
adc
adc
jo
in
cmp
xor
inc
imul
sub
jne
stos
pushf
mov
popf
sbb
mov
push
addl
rorl
lahf
in
jge
rcrl
xchg
dec
or
adc
outsl
arpl
fdivl
dec
insb
leave
add
dec
scas
inc
fwait
cmc
jo
sub
mov
arpl
stos
std
and
push
push
lret
mov
xchg
mov
mov
lds
mov
inc
jmp
imul
push
cmp
sub
mov
mov
sub
clc
call
jne
cmc
int3
leave
xchg
xchg
test
mov
dec
repnz
sub
pop
mov
inc
lahf
push
orl
stc
xor
data16
mov
pop
test
sub
mov
push
mov
jge
dec
add
cli
jle
in
dec
in
push
lods
enter
inc
call
pop
mov
inc
sub
shlb
sar
out
mov
xchg
rcrb
addr16
xor
inc
dec
jl
add
mov
mov
mov
das
or
cld
sti
ja
push
jbe
add
jne
mov
sbb
and
mov
and
and
ja
mov
cwtl
hlt
push
pop
sti
add
xor
imul
rcll
push
mov
jnp
imul
jb
mov
sub
addb
in
insl
nop
cmp
pop
test
push
xchg
xchg
and
xchg
mov
scas
stos
or
leave
push
and
adc
mov
xchg
mov
inc
repnz
inc
ds
cmpsl
push
aaa
orb
or
or
inc
mov
aam
fcompl
iret
daa
sub
add
mov
or
cmp
rclb
inc
mov
xor
aas
xlat
int3
cld
aam
xchg
push
roll
jl
loop
jns
jle,pt
cmp
aaa
xor
xor
pop
in
xchg
shl
cmpb
cmp
pop
rcrl
jnp
arpl
shlb
in
and
and
add
or
imul
test
sbb
std
incl
fucomp
ret
push
mov
shr
or
sub
lea
dec
movaps
das
jbe
jae
movsl
cltd
push
mov
ss
ds
mov
cmp
ja
rolb
shr
push
adc
testb
popf
int3
cwtl
add
cli
repnz
jmp
mov
xchg
pop
aad
aas
divl
push
push
inc
inc
dec
daa
pushf
daa
jmp
notb
mov
push
into
call
pop
push
adc
mov
sbb
jg
mov
bound
and
ret
sub
out
pop
icebp
inc
or
fst
lds
dec
or
rolb
cmpsb
das
or
mov
divb
shl
sub
int3
jge
shl
sub
dec
lcall
out
and
mov
movsl
mov
stos
imul
lea
dec
das
jl
ss
jle
test
lea
cs
sub
ljmp
pop
rcrb
or
mov
and
xchg
sub
mov
lods
lcall
jb
jbe
or
xor
ret
daa
dec
outsl
aas
nop
xchg
mov
cmp
ret
lds
push
aaa
push
xchg
pop
movsl
mov
xor
pushf
mov
add
aas
sub
xlat
in
ja
bound
sti
add
push
mov
inc
movsl
loopne
push
test
leave
test
mov
push
pop
cmp
fcmovbe
cmp
mov
push
or
cltd
xchg
shlb
mov
xchg
xor
call
mov
adc
pop
in
fchs
nop
lahf
insl
sub
pop
sbb
das
out
loope
or
mov
mov
mov
test
shrb
je
clc
add
mov
and
lcall
and
pop
test
fs
mov
out
insl
stc
sbb
data16
cmp
push
sub
dec
clc
lcall
sbb
mov
rorl
cmp
movsl
mov
dec
jb
cmc
xchg
xor
cmp
cltd
mov
scas
outsl
cwtl
add
sbb
jl
jge
jnp
add
imul
adc
hlt
mov
test
out
je
xor
arpl
fs
sub
int3
movsb
sub
dec
dec
xchg
and
xchg
call
cmpsb
jl
imul
inc
ljmp
dec
out
rclb
mov
shl
sbb
cs
shll
xchg
js
jecxz
shlb
xchg
push
je
imul
inc
mov
cmp
sbb
lret
mov
push
add
lods
cmpsl
push
cld
test
mulb
out
lret
inc
aaa
xchg
test
xor
loope
imulb
into
mov
adcl
xor
sub
add
mov
clc
mov
mov
int
pushf
inc
sar
dec
add
jno
xchg
fwait
daa
ds
inc
clc
mov
jo
xchg
mov
sub
adc
sbbb
fidivs
mov
mov
es
outsb
or
iret
jmp
dec
loop
adc
push
lock
call
push
jb,pt
ret
or
loope
adc
pusha
fists
stos
add
aas
pop
sbbl
pusha
mov
jge
cmp
mov
push
or
cwtl
mov
scas
and
repnz
pop
in
movsb
jmp
push
sbb
loop
push
adc
and
fisubrs
cmp
repz
daa
dec
pop
cmp
cmp
stc
nop
popa
sbb
jge
jmp
dec
adc
mov
inc
pop
imul
sarb
psraw
lret
jb
mov
test
ds
sbbb
mov
sub
test
sbb
rcrb
cmpsl
xor
test
cmpsl
adc
mulb
stos
mov
fnstsw
add
adc
leave
sti
aaa
sub
mov
or
adcb
clc
test
push
mov
popf
fmul
mov
enter
imul
stos
rcrb
enter
rolb
cmp
inc
add
cltd
mov
cmp
mov
sub
pop
aam
and
cwtl
outsl
or
lret
adc
in
shlb
arpl
adc
inc
icebp
icebp
lods
aad
mov
popf
ljmp
test
fwait
int3
jge
inc
outsl
outsl
aam
add
shr
lret
sarl
outsb
movsl
out
addr16
jae
shlb
cmc
xor
repz
inc
lahf
mov
push
mov
in
les
sub
ja
mov
sub
push
cld
dec
sbb
mov
dec
clc
cmp
mov
mov
ds
loope
lcall
lret
mov
insl
ret
mov
lods
lds
lea
xlat
sbb
mov
sbb
xchg
jp
sbb
sarb
push
gs
mov
clc
jle
push
arpl
jge
cltd
add
pop
out
imul
or
jle
push
and
push
and
jle
cltd
and
fwait
outsl
cmpsb
pop
jge
addb
loop
cmp
ljmp
test
testl
in
popl
insl
xchg
aam
dec
push
int3
fildll
into
push
sbb
mov
shll
cmp
push
testb
sub
adc
leave
xchg
xor
imul
pop
ds
std
mov
fmuls
sbb
data16
out
xor
sbb
mov
mov
dec
and
lahf
and
inc
cs
dec
insl
add
bound
fcompl
jge
pop
lods
rcrb
repnz
xor
test
cmpsl
sar
inc
xlat
out
insl
inc
fcompl
stc
cmp
pop
sub
xchg
sub
cmp
and
loope
call
pop
clc
fnstcw
scas
fisubrs
sub
gs
or
call
sub
les
dec
adc
mov
jecxz
rol
xlat
imul
cmpsl
fbstp
pop
xchg
js
cli
std
xorb
dec
push
push
xlat
mov
enter
arpl
xchg
mov
mov
mov
pop
adc
sub
stos
roll
cmc
roll
xor
nop
mov
mov
in
and
scas
mov
mov
inc
push
mov
shll
sbb
lods
incl
sub
shll
inc
sbb
adc
inc
or
cmpsb
and
call
lret
xchg
ja
and
push
jne
mov
clc
inc
mov
adc
leave
nop
jo
inc
pop
bound
in
ret
and
daa
jb
mov
push
push
pop
in
daa
sub
cmp
xchg
test
das
ret
xor
lds
repz
ds
or
in
imul
lods
cmp
mov
jecxz
push
xchg
imul
cmpsl
repnz
das
daa
add
subb
imul
xchg
popf
dec
pop
pop
test
jp
cli
leave
cli
roll
inc
xor
mov
pop
aam
movsl
xchg
jmp
sub
xor
jb
jno
mov
aaa
cltd
pusha
push
xor
insl
stc
aam
or
out
sub
mov
adcl
xchg
test
sbb
aas
sbb
das
jns
imul
scas
into
stos
notl
cmpb
cmc
jns
cmp
mov
test
out
movsl
scas
mov
push
xor
ss
jns
xchg
dec
rolb
fwait
insb
sbb
mov
scas
negl
push
add
popf
mov
cli
pop
pop
imul
xchg
adc
and
insb
xchg
inc
ljmp
xchg
mov
lret
hlt
jbe
mull
cmp
in
add
push
dec
mov
sub
xor
stos
aas
sbb
mov
test
jb
aam
subb
mov
mov
jl
push
les
sahf
arpl
sbb
mov
in
pop
cmpsb
mov
sub
adc
loop
xchg
cmp
mov
mov
mov
clc
jne
dec
add
sbb
adc
and
insl
inc
mov
pushf
in
in
sti
sbb
lods
jmp
stos
cltd
and
fdivrs
mov
fsubr
loop
rclb
scas
xchg
push
jle
push
xlat
stc
xlat
xor
or
stc
call
adc
leave
xor
lds
mov
xchg
add
cmp
dec
cmp
dec
sub
test
xchg
jl,pt
mov
jmp
pop
dec
xchg
push
xor
xor
dec
push
out
dec
pop
test
jmp
jae
mov
xchg
faddp
out
dec
inc
rcr
jle
cmp
pushl
int3
or
jmp
je
in
sub
test
mov
lods
repz
bound
dec
fisubs
popf
nop
cmpsb
dec
mov
lret
push
push
mov
cmp
jo
xchg
sti
pop
subl
jns
imul
scas
ja
loope
fstpt
and
sahf
loope
jbe
sbb
pop
inc
out
ja
pop
sub
es
iret
inc
adc
dec
lret
mov
push
cld
sub
cmp
enter
insl
xor
call
testb
or
adc
sahf
jecxz
sti
and
jg
mov
ficoms
mov
imul
into
xchg
fisubrl
push
cmp
jp
adc
lcall
fnstenv
push
in
and
loope
jg
lea
cmpsl
pushf
push
jns
or
ja
aaa
mov
adc
push
dec
ljmp
pop
mov
sbb
dec
js
lea
pop
mov
es
fwait
push
jns
jb
or
fmulp
daa
pop
sahf
jle
and
mov
sbb
and
mov
cmp
dec
xchg
dec
movsl
out
xchg
push
dec
test
mov
cltd
sbb
mov
jne
mov
xor
dec
inc
push
xchg
sub
fucomp
cli
mov
sub
or
aaa
cltd
daa
jns
sbb
in
add
push
jbe
cltd
jns
mov
inc
add
in
dec
lcall
push
fldl
movsl
dec
fidivl
mov
xchg
add
into
sbb
pop
ret
nop
aam
and
push
test
mov
inc
xorl
pop
mov
movsl
addr16
ljmp
xchg
inc
and
pushw
in
push
jmp
call
rcrb
add
sub
inc
push
push
ret
or
mov
ficomps
mov
jg
cmc
cmpsb
pop
xlat
fwait
sbb
rcrl
adc
lods
in
push
in
mov
ds
jnp
mov
or
mov
js
jge
lock
add
int3
lret
loope
lods
std
arpl
stc
sbb
ss
add
jge
dec
jnp
xchg
cmp
pop
sub
insb
rcrl
jmp
and
sub
push
ret
inc
test
hlt
fadds
mov
pushf
cwtl
idivb
pop
test
mov
cs
xor
hlt
mov
push
pop
pop
punpckldq
jg
jne
enter
mov
les
jae
jne
mov
jp
pushf
inc
mov
adc
add
mov
das
lock
push
js
sbb
xchg
sbb
insb
mov
insb
inc
fistl
mov
mov
or
lret
enter
or
shlb
sbb
sbb
test
inc
and
out
pop
sub
push
repz
sub
lret
stc
jae
sub
ret
test
or
icebp
inc
dec
xchg
pop
mov
sti
sbb
mov
pop
or
push
or
sbb
inc
dec
fdivrs
push
aad
pushl
jecxz
pop
inc
jg
clts
ss
jmp
clc
cmp
imul
call
bound
adc
add
cwtl
mov
call
ret
mov
cmp
cmpsb
fistl
xor
movsl
shlb
jl
mov
das
xchg
loop
loope
pop
fidivrs
jecxz
je
movsl
xor
lcall
sarb
pop
sti
add
lfs
or
inc
lods
fistps
push
gs
xchg
inc
or
dec
pop
lcall
cmp
bound
mov
pop
mov
les
add
xor
outsb
test
scas
xlat
lcall
sbb
inc
mov
cmp
sbb
adc
lcall
cmp
dec
loope
sbb
mov
ret
dec
insl
and
outsb
dec
cld
movsb
push
in
sub
or
or
scas
mov
xlat
cmp
pop
jmp
mov
fwait
arpl
jae
arpl
inc
addr16
movsl
or
insb
in
aas
and
or
adc
sub
cmp
icebp
lock
daa
call
jecxz
xor
ljmp
rorl
dec
pushf
dec
add
sbb
dec
dec
xchg
std
add
out
cs
rcrb
and
xchg
xor
and
xlat
adc
stc
outsb
test
shrl
push
dec
test
dec
and
lds
push
or
aam
mov
push
imul
adc
jl
push
mov
mov
cmp
ljmp
push
cli
add
mov
mov
leave
pop
jg
shll
icebp
adc
jp
mov
in
pop
je
push
pusha
cs
outsl
add
add
fcomps
mov
add
jmp
lods
adc
jo
or
mov
sbb
push
and
sub
push
pusha
jp
add
mov
jno
cmp
scas
mov
cltd
pusha
lret
leave
fstpt
out
jo
pop
pop
in
add
inc
jge
sbb
lahf
lret
daa
jae
mov
xor
push
aam
dec
inc
imull
pop
je
insl
pop
inc
repz
lea
inc
popf
and
xchg
decl
mov
sbb
addr16
and
lret
cli
inc
es
and
cmp
cmp
aaa
push
aad
jns
mov
arpl
inc
into
fbld
xor
add
jns
into
cmp
or
decl
mov
pop
iret
pop
push
xchg
mov
cld
out
popf
pop
add
loop
pop
jns
pop
insl
push
lret
or
divl
add
and
cmp
cmpsb
xor
or
xchg
repz
sahf
cmc
add
popa
or
ljmp
mov
dec
or
neg
add
arpl
lods
scas
in
nop
outsl
sbb
mov
mov
sub
leave
leave
cmp
repnz
sbb
ljmp
mov
mov
out
cwtl
fildll
mov
add
les
mov
stc
cltd
xor
sbb
push
test
push
cmpsb
out
jns
bound
int
lock
push
pop
stc
push
adc
mov
mov
jg
or
popa
nop
push
ljmp
div
roll
lea
sub
daa
stos
icebp
je
add
mov
jmp
fstps
stos
ja
scas
xchg
pop
sub
or
ds
jle
sub
call
movsb
dec
int
dec
hlt
add
ror
cmp
addr16
ret
mov
cmc
sbb
mov
pop
stc
cli
sbb
lods
fs
fld
jns
jae
dec
xchg
adc
arpl
mov
xor
inc
dec
mov
imul
xor
fildll
push
mov
inc
sbb
js
stc
mov
lock
and
and
hlt
lahf
in
mov
xorl
mov
cmpsl
outsb
loopne,pn
repnz
adc
ds
outsl
pop
loop
das
push
arpl
popa
xchg
jbe
shlb
mov
and
cmp
dec
lahf
loopne
fwait
sti
pop
mov
xor
sbb
rcrl
pop
pushf
pop
mov
addr16
mov
or
cmp
in
pop
fwait
cltd
pop
xchg
cmp
pop
mov
sbb
dec
dec
mov
mov
and
je
jbe
cmp
mov
xchg
outsl
outsb
shrb
decl
add
test
pop
push
mov
stc
loopne
inc
addr16
in
adc
aad
jmp
sbb
fnsave
xor
aas
inc
sbb
sub
push
pop
adc
iret
loop
xchg
mov
pop
xchg
xor
push
and
fdivrl
sbb
lods
add
cltd
dec
fnstenv
movsb
mov
jae
mov
mov
push
rcrb
sbb
insw
data16
cmp
mov
jge
ja
or
and
push
xchg
and
fsubrs
clc
dec
cmpsl
fyl2x
pushl
das
xchg
insl
mov
jle
and
ret
mov
lock
ret
lods
mov
sbb
jp
pusha
inc
ret
in
outsb
fdivrs
mov
rclb
repz
in
leave
add
sbbb
sti
sar
pop
fsubs
fisttpl
cmc
xchg
xor
and
repz
loop
sub
lea
xor
mov
mov
lock
pop
pop
push
xchg
mov
aaa
sahf
or
inc
ja
stc
cwtl
lcall
jno
fadds
pop
ret
push
push
add
cmp
bound
jne
mov
inc
stc
mov
jnp
loopne
push
mov
sbb
cmpb
jmp
mov
mov
sub
aam
popa
aaa
push
sub
lods
stc
jg
dec
shlb
aas
dec
insb
xchg
leave
jmp
inc
or
stc
dec
mov
mov
push
lds
shrl
mov
outsl
mov
jbe
enter
jae
dec
push
mov
in
jb
sbb
push
dec
xor
mov
es
scas
cmp
mov
add
pop
idivl
or
inc
xor
add
mov
sbb
push
imul
sbb
inc
adc
lret
mov
cmpsb
test
jg
and
inc
jp
clc
aas
cwtl
dec
jns
lods
sub
cmp
push
out
pop
xlat
xchg
inc
fstps
cmpsl
rcll
xchg
pop
mov
mov
in
mov
or
mov
dec
pop
lock
or
cmp
pop
jg
loop
cmp
cmp
jbe
add
movsl
les
fsubl
shlb
or
pop
aas
and
jo
mov
sbb
aad
sub
shl
sti
pop
sti
mov
js
ror
rcr
sbb
push
push
shll
fstpl
int
dec
pop
jl
xor
dec
push
push
leave
lahf
pop
xchg
push
sti
and
insl
fidivl
pop
sbb
add
push
mov
dec
sbb
lods
mov
jl
push
cmc
sub
push
mov
sarb
xchg
fstl
div
scas
out
rorl
jns
or
mov
pop
aam
inc
nop
xor
psubsw
jmp
dec
lock
xor
jbe
dec
adc
jle
sub
adc
cld
add
cmpsb
cltd
ss
and
ret
pop
mov
cmp
das
adc
fwait
pop
xor
dec
inc
sub
dec
repz
inc
fs
stos
jns
sub
sbb
push
xchg
outsl
mov
in
mov
xor
sub
sbb
or
fnstsw
or
test
jne
pop
cs
jle
add
stos
dec
orb
add
xchg
dec
fldz
adc
jl
and
add
ljmp
std
int3
lds
push
imul
sahf
cmpsl
or
test
test
addr16
sub
pop
std
jmp
icebp
xor
push
out
inc
mov
push
out
xorb
push
and
xor
add
inc
pop
sub
ljmp
ret
out
test
xchg
adc
xchg
mov
addr16
int
xchg
sbb
mov
mov
mov
push
out
xchg
cmp
pop
inc
scas
movsl
push
into
sahf
insb
or
mov
hlt
mov
lods
cmp
test
mull
cmp
sbb
mov
frstor
pop
nop
pop
add
mov
idivl
jne
jl
add
push
sbbl
and
add
fstpt
ljmp
jg
adc
ljmp
outsl
mov
cltd
das
add
mov
imul
inc
cmpsl
enter
cmp
cld
enter
push
stos
lods
das
ss
inc
popf
dec
cmp
sbb
mov
adc
mov
mov
jno
sub
imul
ljmp
cli
push
cmc
loope
lods
jns
jne
hlt
divl
test
xchg
mov
aaa
out
xor
insb
pushf
xchg
pop
jns
or
fdivr
jecxz
out
sbb
mov
add
pop
aas
icebp
sbb
pop
dec
rolb
lea
sbb
int
add
mov
cmp
sar
pop
call
insb
les
sbb
mov
sbb
notb
xor
iret
xlat
orl
mov
lahf
or
lock
xlat
insb
xchg
sarb
stc
jecxz
shlb
jno
addr16
mov
xor
mov
jl
xor
scas
fcoms
mov
lea
xchg
in
pop
subl
jl
les
add
out
and
out
inc
xchg
push
cli
in
nop
pop
iret
lret
leave
fucomp
loopne
mov
es
cmp
xchg
fadd
ficompl
imul
call
stos
les
inc
mov
outsl
sub
xlat
shr
pop
lahf
sahf
and
mov
jge
nop
inc
dec
add
pop
mov
bound
iret
xchg
push
push
xchg
push
lods
adc
outsb
inc
out
cmp
ret
adc
mov
pop
and
lcall
cmp
mov
lock
add
test
imul
mov
jo
ja
dec
jmp
push
xchg
xor
xor
adc
fwait
adc
mov
inc
imul
xchg
out
loopne
xlat
fdiv
inc
dec
lret
push
dec
inc
mov
ja
out
xchg
or
inc
lret
cmp
jg
imul
imul
push
movsb
cltd
jp
out
cmp
add
adc
mov
sub
movsb
dec
dec
xlat
insl
dec
jg
xor
fldcw
out
xchg
rorb
and
and
mov
mov
iret
fcompl
out
fadd
mov
push
cmc
lret
jp
cli
dec
add
lea
mov
pop
insb
jp
mov
push
sbb
sbb
xchg
pop
dec
sbb
xchg
pop
dec
dec
mov
sub
jp,pt
cli
negl
addr16
out
cmp
mov
push
xor
repz
fstps
dec
daa
icebp
lock
aam
daa
insl
dec
int3
ret
and
mov
xchg
push
and
aaa
dec
into
lcall
iret
xlat
push
insb
jp
jmp
adc
data16
mov
push
mov
lock
movsb
xchg
push
inc
push
mov
push
test
cmp
jae
pop
int
sbb
cmpsb
rolb
cmpsb
push
push
mov
push
add
sbb
cmc
in
push
inc
mov
pop
jb
loope
jge
repnz
idivl
daa
mov
jecxz
ret
cwtl
enter
pop
icebp
inc
xchg
sub
mov
adc
mov
lcall
cmpb
inc
add
daa
rorb
sbb
nop
sbb
shl
xchg
mov
sarl
mov
in
arpl
out
push
or
inc
in
pop
mov
sub
cmp
subl
push
dec
arpl
and
shll
dec
loope
add
push
cltd
cli
mov
popl
out
sti
or
test
daa
shlb
push
loop
sbb
sti
add
iret
roll
aam
std
inc
xchg
ret
les
sahf
sub
mov
call
add
push
adc
sarb
fs
cmpsb
dec
iret
arpl
jg
pop
bound
lods
lock
je
loop
jb
dec
xor
mov
cmc
xor
add
xchg
mov
pushf
push
pop
imul
lcall
mov
cltd
icebp
mov
sbb
cmp
js
cmp
imul
stos
or
dec
orb
test
mov
sub
int3
movsl
adc
sbbl
mov
adc
inc
push
fucomp
mov
sub
test
jne
and
dec
imul
mov
sbb
sbb
enter
sbb
rclb
fwait
lock
sbb
notl
mov
sbb
mov
in
jecxz
lds
add
adc
sub
push
dec
pop
je
xor
mov
aas
xchg
push
cmp
cmp
imul
ficompl
imul
pop
popa
sbb
lea
cmc
jl
sub
xchg
pop
jb
fmull
mov
imul
cmp
inc
aad
and
cmpsl
inc
dec
dec
inc
ficoml
cmc
push
aaa
test
jb
in
mov
inc
xchg
adc
cmp
out
mov
fldl
xorb
aad
push
jnp
mov
lahf
shlb
test
movsb
pop
and
sbb
push
sbb
mov
imul
adc
pop
xor
invd
decb
insb
pop
and
fiaddl
into
inc
add
fsub
clc
xor
iret
arpl
push
sub
sub
sub
out
inc
mov
fisttps
lock
shl
aaa
daa
jnp
jge
cld
rclb
cmc
rcrl
iret
mov
push
movsl
aam
adc
pop
das
ret
insb
jae
lret
xchg
ss
xchg
leave
add
adc
sbb
pop
push
and
xchg
repnz
outsb
not
pop
mov
mov
mov
dec
xor
dec
lahf
bound
inc
rolb
xchg
jge
pusha
aam
xor
push
test
jle
adc
mov
mov
add
rcrl
les
mov
fidivrs
xor
adc
ja
add
js
mov
outsb
inc
jne
push
setg
icebp
push
es
mov
jne
fbstp
mov
xchg
insl
inc
scas
lods
xor
fs
lock
dec
mov
call
push
jo
in
in
or
test
outsl
ret
or
mov
adc
imul
pusha
movsb
mov
add
shl
mov
mov
out
adc
mov
push
push
outsl
xchg
and
cmpsl
mov
pop
inc
xor
aam
mov
fwait
add
cltd
sbb
push
pop
test
outsl
lcall
xor
pop
imul
push
shll
add
scas
es
pop
mov
sbb
in
push
int3
or
pop
push
addl
jb
ds
je
testl
cmpsl
mov
and
xchg
push
test
sub
adc
adc
into
xchg
imul
and
jl
pop
call
jle
mov
push
inc
sub
out
adc
jbe
insb
adc
dec
or
mov
adc
jne
pop
insb
mov
outsb
jge
dec
rorb
mov
arpl
scas
push
outsb
push
pusha
addr16
jnp
inc
or
nop
and
mov
ret
jge
int
cmp
ss
inc
imul
pop
cwtl
dec
in
les
lods
push
and
das
rcll
or
sub
and
cli
pop
pop
or
in
and
outsl
ror
flds
inc
enter
subb
lods
add
lock
push
scas
sub
jae
mov
sbb
imul
sub
aad
xchg
mov
out
xor
fnstcw
pop
mov
in
inc
daa
push
int3
xor
push
mov
cmc
lods
mov
and
mov
ljmp
add
icebp
or
push
stos
dec
lea
xor
pushf
and
sbb
and
int
pop
cwtl
xor
in
shll
scas
adc
fiaddl
pop
roll
mov
cwtl
push
clc
push
mov
lods
and
adc
xor
call
mov
push
aaa
cmpsb
shl
fs
cmp
or
push
xchg
dec
inc
ret
das
xchg
push
mov
fisubrs
sub
or
sbbl
add
lods
push
mull
mov
mov
cmp
and
or
enter
cmp
or
int3
popf
popf
mov
dec
stos
loope
jo
ficoms
shll
push
std
movb
inc
cmp
pop
or
and
inc
dec
mov
mov
cmp
mov
mov
adc
jb
aam
out
xchg
or
in
jle
mov
jmp
sbb
call
jne
test
inc
gs
out
jle
pop
cwtl
popf
cmpsl
pop
js
int3
cmp
sarl
and
and
add
bnd
test
xchg
push
adc
inc
inc
sahf
mov
sub
mov
mov
adc
lea
subl
adc
lods
syscall
aas
mov
pop
mov
fucomp
pop
adc
sub
adc
adc
mov
stc
or
adc
cmp
in
sub
test
sbb
inc
outsl
inc
sarb
and
or
push
xor
inc
mov
in
aad
cmpsb
inc
cmp
xchg
test
loope
fnstenv
clc
push
hlt
mov
mov
sbb
insb
shll
add
mov
mov
sub
xchg
jp
and
fimuls
data16
adc
ret
clc
dec
mov
out
subb
pop
xlat
roll
sti
dec
mov
cmp
loop
dec
test
pushf
stos
inc
mov
stos
xor
pop
daa
das
stos
or
fistps
adc
mov
cmpb
insl
push
and
fisttpl
iret
loope
cmp
mov
and
dec
jmp
sti
mov
nop
pop
in
and
movsb
cltd
dec
rcrb
call
loopne
mov
mov
dec
xchg
jns
push
mov
adc
clc
insl
test
xor
pop
and
mov
mov
notl
add
call
pop
flds
or
adc
hlt
aas
adc
popf
lods
int3
fmuls
push
dec
leave
fimuls
shll
xor
test
imul
mov
jae
pushf
fbstp
js
xor
scas
scas
mov
mov
cltd
pop
les
and
in
fmull
push
or
into
xor
pop
cmp
sub
imul
iret
sbbl
lcall
push
pop
cwtl
cld
daa
sub
cmpsl
inc
jge
sbb
lea
push
push
insb
add
adc
in
int
aam
jo
cmpxchg
adc
popf
out
add
aam
int
or
repz
lea
mov
inc
popf
cli
into
pop
test
xchg
int3
inc
mov
stc
push
push
daa
push
add
cmp
xchg
ja
stos
inc
ret
sbb
push
sub
xchg
mov
cltd
fs
mov
xchg
jecxz
xorb
xor
push
fwait
adc
pop
popa
jg
nop
jle
inc
xor
and
jno
mov
out
push
adc
mov
mov
add
xor
aaa
call
cmp
add
inc
lcall
cmpsl
lds
xchg
and
hlt
rclb
push
mov
mov
gs
or
aad
sahf
cltd
xor
sbb
xchg
shlb
pop
in
pop
fisttpll
out
sub
push
xor
push
adc
incl
push
out
mov
hlt
cmp
nop
pusha
int
jae
jb
or
es
pop
lods
call
test
and
fnstsw
test
ja
or
xchg
iret
pop
jge
push
js
cmc
push
jo
and
cmpsl
or
pop
and
cmp
cmpsb
ja
inc
mov
cwtl
inc
and
fcomp
mov
xchg
fcoml
mov
mov
sub
repz
repz
mov
flds
xor
aas
xchg
xchg
pop
mov
and
sbb
jnp
inc
out
lods
inc
push
fnstcw
lods
mov
mov
cmp
or
sbbb
imul
lock
outsb
xor
aas
and
out
icebp
and
jge
loop
lea
fisubrs
dec
out
pushf
add
pushf
adcb
in
sti
test
dec
shlb
cmc
dec
adc
or
cmp
and
push
xchg
mov
rorb
xlat
ficomps
divl
loop
movsb
into
aad
jecxz
adc
int3
fwait
sbb
pusha
gs
xchg
mov
xor
dec
inc
daa
mov
sbb
mov
sarl
pop
mov
out
imul
mov
ja
dec
fs
scas
ret
int3
ja
dec
mov
stc
mov
fmull
lret
movsb
or
popa
jns
into
std
dec
xor
xchg
int3
sahf
jns
icebp
adc
test
std
stc
and
or
insl
mov
stos
rcrb
orb
pop
sub
mov
sub
mov
andb
shlb
dec
dec
cli
push
inc
xchg
ljmpw
js
mov
push
cmp
pushf
cwtl
pop
fstl
pop
mov
dec
or
mov
mov
stos
sub
jns
repnz
mov
inc
pop
jl
pop
inc
out
xchg
add
adc
pusha
imul
fimuls
call
int3
lret
pop
out
loope
in
sub
das
cs
cmc
cli
adc
mov
sub
repnz
mov
cmp
repz
cmp
sti
xchg
push
xchg
push
xchg
xchg
and
fimuls
ljmp
into
inc
mov
nop
xchg
or
cmpsb
rorb
fs
imul
or
ss
jge,pn
push
jns
pushf
mov
add
inc
dec
jb
add
fucomp
pop
sbbl
int3
stos
jl
test
push
mov
and
push
inc
orb
add
mov
outsl
or
xchg
and
push
lds
jmp
mov
loopne
cli
lock
jbe
add
repnz
cwtl
inc
shlb
stos
in
je
xchg
xchg
pusha
stos
scas
fyl2xp1
mov
repz
sub
mov
in
in
in
scas
sbb
push
fdivrs
add
stos
inc
push
lcall
xor
mov
xor
dec
ret
push
jg
rclb
xor
insb
and
sbb
mov
ror
dec
fsin
jp
stc
cmpsl
push
ret
sbb
cwtl
hlt
cmp
mov
pusha
xchg
jo
cmc
pop
pusha
fs
movsb
cmp
movsb
mov
ljmp
mov
dec
mov
pop
in
lock
std
or
cmpsl
or
ss
les
sub
mov
shll
lahf
cltd
and
sbb
adc
pop
sbb
out
leave
aaa
das
mov
jae
imul
shlb
jb
mov
xchg
pop
xchg
ds
push
jmp
test
pop
lea
scas
out
cltd
mov
repz
pop
jmp
data16
aas
andl
mov
fcmovnbe
dec
ss
mov
and
mov
outsl
incb
lret
pop
sbb
xchg
mov
jmp
loopne
adc
jne
jg
mov
orl
movsl
mov
mov
adc
dec
fs
add
mov
inc
mov
sbb
xor
push
jae
pop
out
cmpsb
sbb
mov
fldl
jne
sub
into
decb
jne
xlat
or
push
ds
mov
cwtl
gs
mov
ret
gs
mov
cmp
push
and
ja
push
out
xor
push
fisttpll
cmp
vmovdqu
dec
add
xchg
sahf
or
out
mov
jbe
rorl
imul
jmp
pop
xlat
mov
jo,pt
test
pop
aaa
inc
dec
pop
push
dec
cmc
icebp
add
cpuid
mov
adc
into
cmp
dec
insl
std
nop
push
fdivp
mov
out
fstpl
mov
out
sahf
fsubs
mov
ljmp
push
sahf
cli
in
jl
in
out
test
push
pop
mov
ja
add
cmpsl
fsubl
insb
dec
xor
cmpsb
pop
fildl
insl
cld
xchg
pop
jmp
testb
jmp
flds
mov
add
movsb
jno,pn
movsl
add
cwtl
cmp
or
mov
mov
faddl
lcall
mov
mov
xchg
mov
cmp
cli
fisttpl
es
push
or
outsb
repz
cmc
loop
pop
test
test
pop
and
fidivrl
shll
notb
out
cmp
lahf
out
fcom
aad
dec
pop
xchg
shl
mov
xchg
sbbl
pushf
push
push
push
ss
repz
and
shlb
fisttpll
daa
cmp
daa
mov
xor
cs
mov
shrb
out
or
push
sbb
lret
imul
mov
dec
mov
dec
cld
add
inc
repnz
jl
fwait
stos
dec
xchg
and
pop
jecxz
scas
xor
lahf
ficoml
xlat
lret
cmpl
sbb
pop
repz
out
inc
stc
es
icebp
test
mov
jae
imul
push
popf
pop
sub
inc
loopne
inc
mov
sub
adc
fcompp
xchg
push
in
mov
add
push
mov
daa
mov
or
loop
xor
pusha
sub
fadds
dec
ja
testl
lods
ret
leave
inc
mov
xorl
xor
pop
pop
lahf
xchg
adc
adc
push
loope
sub
xlat
sbb
push
inc
mov
push
xor
or
add
dec
imul
add
push
outsl
dec
pop
fucomp
dec
out
daa
ss
imul
mov
cmp
pop
std
shrb
loopne
mov
in
add
pop
jle
mov
adc
out
scas
repz
xchg
aam
out
pop
mov
and
repnz
shr
sbb
call
jl
jg
bound
fldl
addr16
xchg
imul
mov
and
inc
lret
test
dec
mov
pushf
fbstp
inc
pop
mov
push
movsb
pop
jge
out
insb
xor
or
cmp
mov
pop
adc
int3
test
das
mov
fisubrs
dec
adc
gs
mov
mov
loope
cmp
inc
xchg
shll
divb
adc
dec
iret
leave
fmuls
movsl
mov
adc
addl
jnp
mov
nop
mov
pop
xor
push
int
pop
cs
push
in
shlb
aas
xor
bound
pop
mov
jle
js
popa
outsl
enter
jns
mov
inc
adc
es
mov
sub
cmp
and
xchg
xor
mov
sub
hlt
adc
push
test
push
sti
jne
jp
mov
sub
mov
lock
leave
jne
mov
jns
ficomps
xchg
flds
jns
jmp
rcr
pop
loopne
inc
sbbb
mulb
loopne
xchg
xor
pop
mov
fldcw
lret
addr16
pinsrw
das
test
insb
push
scas
movsl
sbb
and
or
push
call
pop
aad
inc
adc
or
js
out
mov
and
and
mov
movsb
fwait
pop
cmpsb
loope
push
shlb
test
in
aad
mov
out
cmpsl
cmpsb
inc
rol
inc
sbb
adc
add
sub
cli
mov
daa
in
inc
xchg
lods
stos
rclb
les
outsl
nop
lods
inc
push
loopne
andnps
jmp
mov
cmp
outsl
xor
mov
call
mov
jg
aad
ja
or
inc
mull
out
add
pop
gs
in
bound
sbb
mov
pushf
stc
insb
cmp
test
mov
pop
das
mov
fnstsw
xor
mov
fmul
loope
insb
cmpsl
push
std
outsl
push
cs
js
mov
aad
or
sub
sub
arpl
loope
jne
call
mov
xchg
gs
mov
mov
xchg
nop
loopne
ficompl
xchg
mov
jle
mov
sbb
mov
inc
adc
sub
cmpl
pop
mov
fbstp
xchg
xor
adc
movsl
dec
mov
sub
pop
or
cmp
mov
vmread
incb
or
mov
rcrb
ret
push
jbe
addl
and
mov
jl
cltd
clc
clc
ja
imul
mov
mov
jg
test
in
sarl
pop
xchg
sub
fucomip
test
lcall
cwtl
xchg
mov
mull
nop
clc
test
xchg
insb
jno
test
cwtl
xor
and
arpl
jmp
push
data16
inc
lea
push
jno
and
mov
xchg
std
xorl
mov
jl
data16
dec
sub
pop
adc
ss
push
push
lcall
outsl
mov
movsl
mov
and
popf
in
sti
test
cmc
lret
loopne
outsb
add
sti
jnp
pop
rorb
mov
mov
push
sub
lods
fs
or
in
push
lds
clc
mov
aaa
cmpsb
cld
adc
sub
mov
clc
loope
inc
jb
and
insb
inc
mov
repz
mov
ss
fdivr
dec
jo
ljmp
flds
arpl
scas
insl
call
insb
cmp
push
aas
pop
mov
cmp
in
push
aad
mov
jo
add
pop
cmc
bnd
fcomps
xchg
dec
ret
inc
add
cmp
inc
lea
testb
bound
add
divl
popl
adc
and
loope
push
mov
push
cmpsb
aaa
enter
repz
jne
mov
bound
jge
inc
mov
in
mov
iret
mov
sub
movsb
xchg
or
mov
inc
fimull
lods
xchg
mov
std
push
ss
and
je
mov
add
das
dec
arpl
sbb
repz
fnsave
shl
or
xor
das
push
dec
addl
leave
and
inc
int
cli
bound
add
shll
fcompl
out
cld
jae
hlt
push
and
in
fisttpll
call
orl
jno
decb
mov
xchg
lock
ljmp
gs
mov
xlat
mov
mov
jbe
je
xor
pop
adc
inc
or
jmp
pushf
es
into
mov
mov
or
les
cmp
sub
cli
mov
je
and
or
cli
not
les
flds
fdivrp
stos
out
leave
pop
sti
dec
add
or
adc
jmp
add
and
or
out
lds
mov
movsl
test
dec
popa
lds
jecxz
xchg
jo
out
bound
mov
and
cmpsb
int
fmul
sbb
mov
and
adc
push
mov
sahf
sub
ret
cli
ds
cmp
cmp
add
lcall
and
and
loopne
cmp
lods
movsb
mov
push
jp
shrb
push
shl
push
push
sub
fwait
cmp
push
add
jmp
mov
xor
stos
clc
ja
les
mov
cmp
fldpi
sbb
mov
xor
sub
push
dec
sbb
or
stc
cmp
imul
jns
jbe
int3
addr16
scas
cmp
stos
push
pop
in
inc
fwait
lds
mov
rorb
adc
mov
sti
mov
or
cmpsl
outsl
dec
loope
mov
icebp
ss
dec
jb
cmp
mov
ret
jmp
jmp
bound
test
or
cwtl
mov
lock
mov
mov
sbb
int3
cmp
cmp
inc
popf
repnz
ljmp
lock
inc
andl
pop
loope
dec
sub
mov
sti
hlt
in
cli
mov
shrb
pop
rcrb
inc
and
stos
sbb
sbb
mov
divl
and
arpl
sbb
scas
into
lods
adc
dec
inc
dec
stos
shrb
fsubrs
in
call
gs
mov
inc
jmp
insb
sti
sbb
loopne
mov
mov
or
sbb
in
stos
scas
jbe
mov
fildl
mov
popf
add
imul
mov
lods
je
and
fmull
shr
mov
jecxz
jle
push
rcll
rclb
leave
loope
mov
adc
mov
lahf
aaa
xor
mov
lds
test
pop
pushf
dec
inc
mov
push
cmc
xor
fwait
scas
fcmovbe
sub
mov
mov
pop
in
inc
aad
mov
pop
push
dec
hlt
cmc
je
lods
dec
or
test
cmp
xor
leave
or
fcoms
mov
loop
push
sbb
outsb
insl
outsb
mov
cltd
jb
and
sbb
ss
les
repz
cmpsb
lret
pop
xor
imul
sbb
and
xor
xor
jp
inc
mov
cmpsb
ret
mov
sbb
loopne
add
into
test
cmpsl
jge
mov
xor
xchg
sarl
mov
mov
jbe
popa
shrb
xor
cli
mov
and
mov
jne
loope
sbb
jo
nop
ret
stc
es
push
fistpl
outsl
rcrb
std
jne
add
mov
pop
out
adc
flds
sbb
mov
cmp
das
mov
sbb
loope
out
or
inc
mov
pop
ds
das
sahf
xor
push
or
rclb
cli
add
xchg
push
ss
mov
cli
mov
loop
test
dec
jecxz
pop
pop
cmp
nop
push
jo
pushf
aad
and
or
daa
pop
mov
xor
mov
in
ds
stc
iret
ret
jno
push
mov
lods
xchg
cli
mov
out
jo
mov
repz
jmp
xchg
adc
jle
jg
and
ja
mov
or
pop
add
int3
cmpsb
clc
hlt
sub
inc
imul
fld
cmp
sti
clc
jo
push
aas
ret
xor
arpl
pop
repz
test
insl
jno
sub
sbb
dec
xchg
je
push
popa
cltd
or
pop
adc
test
aaa
pop
adc
adc
ja
roll
sbb
xchg
out
ljmp
mov
adc
sub
inc
outsb
mov
sub
sub
clc
fldcw
icebp
sti
and
pop
aad
lock
in
sbb
cwtl
rcll
adc
inc
jae
inc
out
aad
cmp
inc
outsb
or
mov
mov
push
in
mov
mov
and
jno
pop
mov
lods
insl
dec
dec
adc
push
xlat
mov
pop
mov
ja
mov
mov
into
aas
add
cmc
mul
or
mov
popf
sbb
mov
jno
pusha
xor
lcall
shlb
jno
inc
ret
xchg
adc
pop
sub
sbb
stos
xor
aad
fidivrl
outsl
sbb
mov
and
out
inc
push
enter
outsl
push
out
fdivl
push
in
jle
mov
outsl
xor
pop
mov
aaa
icebp
mov
jno
sub
mov
mov
call
rcl
flds
loope
pop
mov
ret
push
jecxz
xchg
adc
pusha
add
pop
imul
fwait
sub
leave
adc
cmp
push
imul
and
pop
stos
rorl
stc
push
xor
push
inc
jb
cmp
loopne
pop
dec
mov
gs
push
das
pusha
fcoml
movb
inc
or
cmpsl
inc
icebp
movsl
neg
dec
jge
daa
dec
movsl
jmp
xor
jo
das
xchg
clc
testl
fnstsw
or
lods
rolb
push
sar
fcoml
dec
pop
repnz
mov
xchg
rcrl
shlb
inc
sbb
loop
sbbl
lcall
repnz
sub
push
loope
pusha
pop
cld
icebp
jbe
sub
mov
pop
jmp
outsb
push
pop
mov
lret
lods
mov
mov
inc
pop
sub
fcomp
divl
mov
xlat
lds
cmp
and
pop
push
inc
sbb
outsb
addr16
sub
lcall
vpshad
sub
add
inc
mov
push
cmp
nop
in
adc
icebp
push
pop
insb
nop
xor
push
cli
mov
xchg
mov
fcoml
jp
lcall
mov
or
xchg
inc
pop
pop
movsb
or
scas
stos
scas
enter
out
xor
mov
or
lds
daa
push
jbe
jg
es
sbb
stos
xor
push
pop
lcall
movsl
fcmovne
jo
outsl
mov
mov
ja
jg
nop
aas
xchg
cwtl
outsl
popl
push
popf
das
and
push
mov
popa
in
and
jl
xor
je
sub
das
sti
mov
cmp
xor
div
gs
sbb
mov
fmull
adc
mov
call
test
movsl
dec
sub
xchg
dec
inc
outsl
cmp
inc
inc
inc
mov
insb
push
pop
pop
fndisi(8087
xor
inc
clts
rorb
dec
xchg
dec
aad
add
cmc
fisttps
lret
sub
jle
test
dec
mov
jmp
in
stos
push
pop
jo
insb
push
into
xor
push
cmp
mov
add
cmpsb
xchg
push
xor
loop
jae
sbb
and
jae
add
adc
mov
mov
sub
pop
negb
jo
fsubr
stc
imul
scas
and
cmp
inc
lret
pop
jae
pushf
pop
jo
scas
clc
shrl
xor
fistpll
adc
loopne
aas
jbe
jg
mov
cwtl
std
adc
mov
outsb
or
outsb
imul
addb
fldcw
xchg
sbb
sahf
popa
daa
in
or
adc
mov
cmp
and
add
sbb
cmp
rcr
inc
push
sbb
jl
fchs
and
sbb
in
jae
mov
movsl
daa
inc
cmpsb
stc
enter
cs
inc
push
lock
insl
repnz
add
clc
adc
jae
xchg
mov
inc
mov
shll
clc
addr16
leave
enter
cmovg
cmp
fucom
adc
xor
mov
iret
push
dec
pop
adc
insl
loope
inc
outsl
iret
rep
or
movsl
or
lret
push
sub
push
sbb
push
dec
mov
lcall
and
idivb
cmp
cmp
ja
stos
jnp
mov
lcall
popa
std
pop
xor
add
andb
push
fabs
add
repnz
fbld
xchg
aas
xchg
mov
mov
pushf
daa
in
repz
jge
mov
out
shlb
outsl
idivl
int
adc
leave
xor
pop
xchg
mov
xor
mov
push
out
mov
idiv
lock
lcall
sbb
pusha
repnz
fidivrs
test
add
or
sbb
les
inc
mov
add
lret
and
xlat
xchg
test
push
scas
idiv
xor
movsl
and
xchg
jle
sbb
xchg
fwait
mov
xchg
dec
pop
push
bound
leave
jl
mov
mov
frstor
das
fwait
and
xor
stos
out
dec
xchg
mov
cmp
leave
pop
lret
dec
gs
data16
arpl
push
cmp
aam
mov
jmp
sbb
pusha
mov
int3
pop
cmpb
ficomps
push
sbb
push
sbb
stc
mull
xchg
xlat
stc
sbb
icebp
out
out
inc
xchg
lret
sbbl
js
rcr
inc
inc
ja
fiadds
loop
jbe
sub
fcmovb
in
and
ret
test
mov
xor
or
arpl
inc
cmp
mov
mov
adc
xchg
mov
scas
add
scas
clc
sti
or
sbb
test
test
mov
repnz
mov
cmpsb
xchg
ss
ja
lahf
mov
mov
frstor
jbe
jns
dec
std
rorl
pop
shrb
sub
cmp
push
inc
imul
push
jg
sbb
mov
outsb
or
out
out
pop
dec
dec
xchg
lock
adc
sbb
sbb
into
bound
leave
divb
movsl
cmp
jecxz
mov
and
sub
stos
or
xor
pop
push
test
sbbb
fnop
iret
inc
pushf
imul
inc
shlb
mov
call
int
les
push
mov
stos
lods
out
inc
xlat
lods
jp
adc
xchg
daa
daa
adc
aas
mov
dec
imul
rcrb
test
jecxz
mov
mov
je
cmp
ds
outsb
push
inc
lock
push
cmp
lcall
mov
xchg
lcall
jno
sbb
pop
loope
dec
aas
movsb
test
jb
fldenv
scas
xchg
into
mov
fs
mov
rep
ret
and
pop
xor
movl
insb
clc
stos
rcll
jne
repz
ljmp
adc
mov
push
fidivrs
add
fwait
pop
fcoml
rcr
nop
pop
jle
push
mov
fmull
cltd
mov
andb
jmp
xlat
pop
popa
jbe
mov
dec
xor
out
xor
mov
insl
addl
pop
and
xchg
repz
ljmp
pop
add
es
xchg
fdivr
sbbl
aas
and
add
fdivl
sarl
mov
inc
dec
cmp
push
pop
pop
mov
insb
adc
rcrb
scas
rorl
rcr
es
mov
mov
repz
sbb
les
testl
push
push
jb
lahf
rcl
and
pusha
ret
cli
or
andb
sub
sarl
stos
jp
jae
add
scas
add
nop
std
lods
popf
and
sbb
pop
test
mov
jae
mov
add
pop
gs
fcoml
iret
jp
out
sub
xor
cmp
or
inc
cltd
icebp
inc
outsl
xor
inc
pop
xor
cmp
lahf
dec
pop
push
xchg
aad
mov
cvtps2pi
ljmp
sbb
shlb
bound
lret
test
cmp
and
jg
rorl
mov
cmp
test
jno
add
cmp
ret
pusha
repz
nop
mov
cwtl
mov
lods
loope
mov
pop
in
test
iret
xchg
jp
or
in
add
inc
lea
arpl
pop
xchg
orb
mov
push
xchg
aaa
sub
or
mov
push
testl
les
inc
cmpb
scas
push
jmp
dec
mov
mov
jnp
enter
inc
loopne
mov
push
mov
push
fstpt
lahf
sub
movsb
dec
shrl
les
push
aas
test
mov
bound
push
and
test
enter
fdivl
dec
scas
dec
in
mov
scas
jae
aam
imul
add
les
pushf
shll
jp
divb
or
pop
sub
cmpsl
or
cltd
xlat
push
push
shr
cmpsl
std
test
dec
push
frstor
fdivp
imul
icebp
mov
sub
mov
repnz
outsl
xorl
lahf
loopne
xchg
push
notb
jecxz
sub
adc
test
lock
dec
out
fistps
in
in
std
scas
lahf
inc
dec
push
or
and
jb
mov
jb
jbe
pop
xlat
mov
or
aaa
mov
out
push
dec
sub
push
push
hlt
mov
sbb
outsb
out
mov
cld
fistl
adc
ljmp
aad
lcall
jl
sbb
shl
std
int
shl
pop
adc
sub
sbb
movsb
sahf
mov
aam
pop
insb
inc
cld
enter
push
sub
out
lret
inc
bound
mov
aam
or
repnz
xlat
outsb
fsubrs
xchg
push
pusha
jae
sahf
aad
pop
push
push
out
mov
push
jg
ljmp
cmp
add
in
movnti
call
ljmp
push
mov
and
jo
sub
and
push
or
hlt
mov
scas
xor
push
popl
fisttpll
sbbb
jo
cwtl
fisubs
mov
es
js
loopne,pn
jns
fimull
in
iret
jle
in
clc
out
and
mov
sar
pop
mov
pop
jl
inc
add
iret
jmp
mov
inc
and
mov
sbb
iret
les
das
mov
clc
xchg
inc
xor
and
nop
and
add
rcrb
pop
cmp
outsl
cmp
lea
lods
cmp
subps
arpl
sub
push
popf
push
push
movsl
ja
insb
inc
sbb
inc
mov
repnz
bound
add
inc
repz
sbb
in
or
or
dec
mov
cmp
test
aaa
push
out
pushf
lahf
push
dec
nop
gs
pop
inc
sub
ss
dec
push
out
jb
out
mov
push
push
adc
pushw
mov
xor
xor
fnstcw
ret
inc
inc
push
xor
movsl
xor
mov
aad
enter
fcmove
daa
push
out
adc
enter
mov
mov
cmpsl
push
xchg
pop
sub
sub
add
into
push
or
sub
repz
add
and
addr16
scas
xor
popf
adc
jns
xor
add
jp
fidivrl
imul
xchg
and
lret
rcl
outsb
lock
add
out
jae
aad
and
cmp
imul
mov
mov
arpl
xor
push
jge
adc
sbb
stos
or
jmp
call
movsb
das
rcl
add
mov
add
xor
add
cmp
sbb
enter
jo
repnz
add
ret
jbe
mull
fdivrl
scas
xchg
aaa
fiadds
mov
lods
dec
rcll
test
pop
mov
push
and
dec
mov
out
shlb
lea
push
pop
les
jae
xor
or
les
dec
stos
pop
int
lret
dec
sub
orb
pusha
mov
pop
pusha
mov
fildll
repz
enter
je
ljmp
mov
stos
repnz
and
xchg
mov
inc
or
out
in
push
dec
std
mov
jno
inc
das
nop
daa
sbb
stc
fwait
das
call
or
sbb
xor
shrb
mov
and
cmp
sub
inc
adc
mov
int3
insb
jno
jp
rolb
dec
into
lret
sbb
and
fsubrl
movsl
ss
inc
rcll
push
adc
mov
xorb
add
adc
dec
inc
and
and
lea
movsb
loop
daa
add
or
inc
xchg
inc
enter
pop
or
enter
dec
xor
dec
mov
bound
outsb
add
dec
sbb
sbb
push
call
xor
sbb
fldt
popl
mov
movb
inc
popa
mov
adc
aas
leave
roll
ljmp
sub
sbb
mov
div
bswap
fistps
pushf
cmp
test
adcb
movb
mov
ret
jp
outsb
sahf
mov
mov
iret
loope
or
lret
pop
adc
mov
xor
test
fcompl
das
adc
mov
xlat
xor
cmp
push
or
sbb
pop
cmp
mov
add
addb
xchg
iret
les
or
stos
mov
adc
sti
out
pop
jne
cwtl
rcr
outsb
ds
push
fdivs
cs
push
repnz
dec
pop
outsl
adcb
out
push
fsts
mov
inc
cmp
pop
imul
flds
movsl
sub
adc
popf
ret
dec
xor
push
dec
inc
scas
je
lret
cmp
sbb
enter
ror
into
mov
sub
jge
mov
mov
gs
mov
insl
cmc
xlat
pop
cs
and
mov
enter
push
ds
lcall
addb
mov
mov
hlt
mov
les
arpl
mov
sbb
pop
in
jecxz
fs
icebp
or
or
sbb
push
mov
sbb
or
lahf
call
arpl
out
and
sbbl
cltd
movsl
imul
pop
subb
jb
mov
mov
fldl
call
int3
lds
sub
xchg
inc
xchg
aam
jle
and
fistpll
jnp
push
mov
adc
dec
or
int3
push
repz
pop
dec
out
sysret
inc
push
aad
imul
pop
sahf
mov
addb
mov
mov
rcrl
add
dec
cltd
arpl
adc
mov
mov
sub
pop
lods
sbb
sti
arpl
fdivp
and
jmp
bound
xchg
loopne
andl
add
pop
jl
fnstsw
enter
out
jo
ss
and
test
mov
jbe
xor
stos
out
sahf
enter
xchg
xlat
arpl
cmp
mov
mov
icebp
fcomp
les
jmp
cmpsl
push
das
push
outsl
xor
pop
out
cwtl
inc
mov
test
shr
popa
ret
push
out
mov
and
mov
sub
mov
cmp
sbb
test
jb
lret
pushf
ret
and
popf
mov
xor
movsl
pushf
shll
mov
sub
mov
cmpsb
and
xchg
filds
mov
pop
fldenv
pop
dec
mov
push
int3
sbb
ss
mov
sti
xchg
inc
popf
dec
jmp
mov
mov
dec
inc
movsb
push
loopne
shlb
imul
fldl
leave
adc
jp
movsl
cmp
or
test
dec
pop
in
iret
lods
and
xchg
push
mov
rcl
lret
cmp
mov
mov
push
xlat
sti
jno,pt
repz
es
jbe
or
lret
lcall
jp
movsb
dec
int
add
jns
jae
pop
je
sub
or
fbstp
adc
rdpmc
push
testb
push
sahf
in
pop
inc
jno
ja
push
jb
push
push
test
mov
and
jns
dec
das
cld
push
popf
cmp
inc
adc
je
inc
and
lcall
clc
mov
fistpll
shlb
lcall
repnz
out
cwtl
add
and
insb
stos
add
lahf
loope
add
xor
or
xchg
pop
rorl
push
sahf
dec
repz
cmp
xor
ja
pushf
fldl
sti
lret
fistpl
enter
inc
add
dec
jmp
pop
push
and
inc
cmp
push
cs
ljmp
or
inc
call
mov
xchg
sub
adc
and
test
mov
cmpsb
and
xor
notb
out
mov
cmp
dec
movsb
add
mov
jbe
cwtl
jg
inc
cmp
imul
push
jmp
jecxz
jmp
pop
out
and
cmpb
ja
sub
fcmovne
in
rol
lret
jne
movsb
sbb
xchg
mov
arpl
insb
adc
pushw
sbb
push
cmpsb
lret
scas
pushf
xor
lds
sbb
dec
fisubrl
sub
inc
xor
mov
leave
lret
xor
push
mov
lret
inc
cld
dec
rcl
test
pop
loope
aaa
push
add
push
out
mov
into
pusha
shlb
xchg
stos
test
lods
cmpsl
call
sbb
mov
xor
aas
and
andnps
pop
push
clc
or
mov
dec
adc
mov
push
int
jg
or
loop
and
lcall
inc
imulb
mov
fs
mov
cltd
jne
and
inc
js
xlat
inc
pop
pop
push
jb
or
outsb
aaa
into
push
int3
pop
mov
adc
xchg
aas
mov
add
test
inc
sahf
jb
jae
pop
test
jne
mov
daa
adc
pop
inc
iret
mov
mov
in
and
fdivrl
es
jmp
cmpsb
push
movsb
and
or
gs
jae
mov
vmovaps
mov
bound
pop
mov
mov
sub
cld
inc
int
lods
js
jge
cmpsb
ljmp
mov
xchg
fsubl
imul
ds
and
andl
mov
adc
frstor
cmp
jmp
or
inc
add
inc
mov
cmp
not
inc
cli
scas
lahf
mov
sbb
fcompl
sti
xor
pop
clc
xor
lods
sbb
test
jo
icebp
lock
add
fimull
inc
out
pop
pop
adc
mov
testl
jns
mov
adc
mov
in
xchg
push
or
in
lods
fcmovnu
pop
adc
mov
fwait
jg
pushf
addr16
adc
lahf
sub
xchg
fldl
sbb
add
sahf
jb
push
push
cli
or
rclb
lret
xchg
and
dec
jbe
dec
cltd
imul
jbe
mov
push
into
jl
xor
and
pop
loope
icebp
das
notb
adc
xchg
sub
lret
rorl
push
push
daa
xor
out
clc
sub
lret
mov
lods
jge
jae
mov
int3
aam
adc
cli
push
leave
cltd
push
enter
push
pop
mov
fsubl
add
testl
push
lock
pop
jmp
adc
and
mov
es
dec
aaa
cmp
mov
and
pop
mov
add
sahf
mov
stos
out
xchg
sbb
jle
mov
pmulhuw
mov
mov
and
inc
popa
sub
dec
dec
lret
mov
ficoms
out
int
rcrb
test
push
paddsb
mov
adc
sub
jmp
aas
and
xor
in
pop
inc
divb
out
jg
cwtl
cmp
cmp
das
out
adc
xchg
mov
out
jns
loopne
and
xchg
jo
push
xor
data16
mov
lahf
xchg
inc
jae
lods
jmp
mov
clc
fimull
sbb
les
sar
sysexit
insl
inc
subb
cwtl
pop
pop
adc
ret
sub
data16
or
lahf
js
std
pop
loope
xor
sbb
out
ret
pop
daa
loope
mov
jae
into
xchg
xchg
call
cmp
or
jb
mov
shrl
pop
int3
pop
jae
sub
clc
jmp
pop
jnp
ret
add
hlt
dec
jp
shl
adc
mov
je
sub
cltd
mov
dec
out
fwait
xor
cmp
dec
scas
cmp
or
jge
nop
jmp
xor
add
pop
cwtl
inc
add
lods
dec
mov
int
sbb
sub
fptan
mov
push
jo
push
test
xchg
inc
inc
mov
les
insb
and
inc
cmc
or
inc
bound
jb
in
std
ljmp
mov
ret
stos
mov
push
push
ficompl
dec
mov
mov
filds
jle
pop
test
cs
mov
push
shll
pop
mov
xor
add
pop
sbb
jae
and
jl
jns
cmpsb
lahf
push
mov
mov
jns
xchg
sbb
fiadds
inc
push
lcall
loopne
outsl
rcrb
lcall
mov
into
cmp
jle
jae
iret
bnd
xchg
xor
dec
xor
sbb
pop
xor
ret
rcll
sbb
test
mov
cwtl
scas
jmp
sub
jmp
dec
cmp
loop
xchg
mov
xchg
push
xor
outsl
test
pop
clc
shl
ljmp
push
jns
std
sti
push
ljmp
xchg
sbb
adcl
enter
add
mov
or
xor
push
sbb
jns
stc
adc
sub
rcr
ds
and
test
int3
notl
push
dec
inc
adcb
addr16
imulb
mov
inc
xor
push
push
push
push
cvttps2pi
popf
mov
dec
lock
psadbw
mov
or
aad
mov
xor
dec
adc
push
inc
xchg
daa
cli
data16
pop
xchg
lock
mov
mov
pop
mov
jg
push
pop
sti
add
pop
xchg
push
idiv
sub
test
xchg
cmp
ret
xor
fisubl
loop
in
dec
sub
movsl
outsb
test
sarl
in
iret
fidivrs
jno
pop
fcmovu
ljmp
fwait
repz
pop
jecxz
cmc
mov
jmp
fistpl
ficoms
pusha
mov
out
lahf
mov
ret
pop
outsb
lcall
lret
out
cmp
imul
xchg
add
imull
or
cmp
stos
adc
mov
pop
jno
pop
mov
cltd
lods
xchg
xchg
push
mov
mov
xor
divl
adc
es
push
mov
inc
lock
cmpsb
call
dec
negb
xorl
lret
push
test
rcr
inc
or
int
add
test
jge
shll
dec
fiaddl
sub
xchg
ffreep
pusha
rcrb
dec
stc
xor
push
andl
sahf
hlt
push
mov
lret
in
js
add
inc
cmovo
or
push
movsl
jbe
outsl
sbb
pop
sub
xlat
out
rol
movsb
mov
enter
inc
cli
xor
test
and
jle
repz
xor
imul
jmp
pop
sarl
push
scas
mov
lret
sub
xchg
add
jl
jg
outsl
aaa
iret
loop
rorl
xchg
and
idivl
cmp
repz
dec
adc
inc
outsb
xlat
sub
and
and
fcomps
mov
test
mov
push
bound
push
mov
test
cmp
popf
icebp
dec
adc
insb
pop
pop
fnstenv
or
ss
movzbl
mov
sar
insb
xchg
stos
jge
adc
in
addb
int
in
jg
sub
les
popa
cmp
inc
leave
vmread
xchg
xchg
aaa
imul
lods
push
push
fwait
enter
int3
arpl
testb
sarb
or
je
fwait
js
mov
test
mov
mov
mov
push
push
stos
xchg
xchg
popl
das
scas
sbb
outsl
or
mov
mov
ret
lock
shlb
sub
std
push
aam
xor
add
lods
in
mov
mov
ja
mov
mov
out
ljmp
push
cli
mov
scas
mov
and
xor
cltd
push
in
add
push
push
loope
mov
notb
iret
insl
xchg
inc
mov
or
and
out
push
add
int
ffree
es
shr
iret
pushl
sbb
sahf
fildll
lret
adc
dec
ds
data16
cmp
sub
adc
repz
jb
fnstcw
je
pop
test
outsl
jecxz
cltd
jge
mov
mov
rorl
fwait
cmpsl
adc
xlat
add
hlt
cmp
ljmp
addr16
and
cmpl
lods
sbb
jmp
sub
mov
ss
mov
aaa
iret
lock
popa
xchg
pop
sbb
mov
jb
jne
into
leave
jp
aaa
jo
std
push
mov
out
jbe
fwait
dec
int
cmp
into
shll
push
mov
fdivrs
mov
nop
ret
inc
and
dec
hlt
push
push
pop
mov
std
cmp
roll
repz
xchg
mov
jae
dec
mov
cmp
or
clc
sbb
or
sbb
mov
dec
pushf
jne
sahf
pusha
sub
pop
shll
fcmovnb
push
jmp
sbb
and
add
xor
jp
sbb
scas
repz
pusha
jecxz
mov
and
divb
pop
sub
xor
pop
xchg
adc
test
lret
cmp
aaa
pop
jge
mov
add
mov
mov
cmpsb
push
stc
mov
or
aam
push
push
adc
sub
stos
or
sarl
bound
lea
hlt
in
fadd
adcl
sub
adc
xchg
daa
pop
sub
test
hlt
mov
lahf
popf
mov
jl
stos
xor
outsb
sbb
or
jbe
push
add
addl
pop
jnp
adc
push
rcrb
repz
int3
repz
push
call
hlt
lcall
loopne
jecxz
add
and
stos
mov
and
add
cltd
cmp
mov
cmp
das
imul
scas
or
push
cmc
or
or
cmp
xlat
pop
les
mov
imul
cltd
cwtl
mov
mov
lcall
loopne
add
pop
jns
stc
and
jns
imul
das
stos
sbb
mov
in
fstpt
add
mov
sub
inc
and
repz
in
xor
inc
xchg
cmp
mov
mov
in
idiv
dec
int3
pop
loop
hlt
push
cmp
lods
dec
add
pop
loop
mov
pop
sub
sahf
in
xchg
adc
mov
pop
xchg
mov
push
sub
push
loope
or
or
inc
andl
int3
movsl
fldenv
mov
mov
inc
test
insl
pop
je
movsl
call
pop
add
sbb
xchg
sub
xchg
pop
jo
test
xor
test
jmp
rorl
push
enter
pop
stos
add
mov
push
lea
fiaddl
outsb
push
pusha
xchg
inc
pop
jns
xchg
mov
adc
cmpb
sbb
sub
fwait
out
inc
jl
push
sbb
sbb
ds
jp
jns
dec
in
in
outsb
addb
loope
or
fs
cmp
mov
add
mov
mov
shrl
int3
fdivs
aam
jecxz
and
mov
dec
test
lea
sahf
xchg
sub
stc
rorb
imull
push
xchg
cmpsl
das
jle
add
adc
push
dec
and
loopne
outsb
aas
cld
scas
aad
hlt
mov
lret
jge
insl
fdivrl
mov
sbb
jb
add
addr16
test
mov
hlt
push
sub
lea
fnstcw
dec
mov
mov
and
test
arpl
xor
mov
fisttpll
sbb
and
pmaddwd
pop
mov
bound
cmp
shll
lret
inc
lods
mov
stc
fidivrs
ljmp
aaa
fstp
xchg
inc
inc
jo
sub
jo
jmp
mov
adc
sub
jl
and
cmp
gs
pop
adc
shll
lods
insb
mov
int3
mov
and
insl
jns
mov
repnz
xlat
lahf
mov
gs
hlt
fmull
cltd
shrb
jb
pop
jecxz
movsb
push
pop
jno
jb
jp
jp
inc
and
inc
sahf
push
xor
push
arpl
loopne
cmp
icebp
icebp
pop
jge
cmp
inc
sbb
in
lret
mov
pop
mov
or
jecxz
inc
in
sbb
rcrl
pop
into
rcrb
pop
in
loopne
xchg
push
pop
xchg
or
xchg
stos
ret
inc
sub
sub
cmc
push
xchg
jp
xor
jbe
or
sti
dec
push
dec
inc
jl
mov
mov
aad
cwtl
or
lret
outsl
rorb
sahf
out
push
jecxz
push
pop
sbb
jno
pop
fwait
out
push
imul
adc
push
xor
rcll
out
stos
push
movsl
jge
jo
mov
movsl
mov
incl
adc
push
in
pop
test
dec
popa
sbb
sub
ljmp
divb
or
insb
out
and
mov
and
sbb
ljmp
aam
cmp
test
inc
rorb
in
filds
push
push
addr16
jae
insl
outsl
sub
mov
into
sub
mov
cwtl
add
push
pusha
das
inc
jg
xchg
gs
mov
push
cmpsb
xchg
call
addl
dec
adc
outsb
push
ja
neg
loop
arpl
daa
cmp
jb
sbb
mov
mov
push
cmp
pop
mov
dec
cmc
push
jnp
mov
lock
xor
clc
jg
test
js
test
push
into
or
dec
cmp
push
add
shl
inc
xlat
ficoms
jb
lods
cmp
sarb
mov
mov
push
mov
aaa
ja
sub
mov
in
adcb
mov
fadd
pop
push
ficoms
jge
dec
fildll
inc
dec
int3
dec
lahf
mov
add
sub
xchg
ds
mov
lret
mov
cmp
fists
inc
sub
xor
or
mov
sti
push
inc
hlt
in
aad
ss
mov
outsb
lea
mov
mov
sub
push
push
pop
pop
pushf
test
cmc
je
out
pop
lock
into
into
jno
add
subb
sbb
jo
cmp
mov
jl
stos
decl
hlt
insl
push
in
push
adc
repz
mov
cmp
sub
cwtl
out
add
pushw
mov
mov
movsl
jno
jnp
pop
pop
pop
std
in
xor
add
int
or
scas
andl
sub
lahf
push
cld
inc
ja
pop
scas
pop
imul
sub
jecxz
pop
outsb
mov
jp
xor
mov
adc
loop
jns
lods
pop
and
int
arpl
xchg
out
mov
scas
sbb
dec
jb
add
sahf
xor
sti
or
lds
cmp
filds
jle
in
outsl
push
subb
mov
inc
adc
fiaddl
add
ret
int3
mov
push
xlat
mov
or
or
mov
gs
aas
inc
inc
push
mov
imul
lods
push
pop
idivl
pop
dec
cmpsl
xor
imul
daa
subb
xchg
dec
dec
add
xor
fldenv
mov
push
iret
subb
fisttps
and
mov
jp
jg
enter
mov
adc
stos
addr16
xchg
mov
faddl
int3
xor
push
sub
mov
push
bound
in
add
inc
out
push
mov
push
mov
sbb
shll
adc
cmpsl
out
movsl
cmp
push
push
out
cmpl
loop
mov
mov
mov
push
andl
sarb
sub
and
push
call
sti
mov
add
xchg
dec
lahf
test
push
test
jecxz
lods
and
imull
cli
mov
mov
mov
add
or
mov
xor
rep
sbb
sub
nop
add
lea
add
push
ret
insb
and
xchg
sahf
jmp
xchg
pop
sbb
in
out
push
mov
push
mov
stos
int
add
mov
sti
and
das
jge
pop
xchg
dec
scas
pop
mov
orl
test
cs
insl
sub
rsqrtps
jo
lahf
shll
fs
call
ret
or
hlt
movsb
int
mov
inc
ljmp
sahf
mov
sub
jg
dec
add
inc
lret
sbb
in
xchg
dec
push
scas
mov
add
mov
pop
mov
lods
push
xchg
aad
sbb
stos
push
rorb
jecxz
imul
xor
sti
loop
lods
lret
jp
pop
or
inc
add
add
int
dec
inc
sbb
insl
sub
mov
pop
mov
sub
repz
cld
cld
adc
xchg
int
cmp
push
or
jge
mov
mov
mov
inc
adc
pop
cmp
loope
mov
fnstenv
mov
pop
repz
flds
push
je
adc
imul
cmp
mov
cwtl
lds
mov
and
fnstsw
ret
push
dec
push
out
jb
aaa
cmp
stc
sub
dec
js
pop
pop
sbb
mov
scas
or
sbb
push
loope
cmp
lahf
and
cmp
das
xchg
js
outsb
jp
push
and
sbb
mov
test
test
push
cmp
sbb
push
push
or
xchg
and
and
cmpsl
mov
jae
adc
mov
fistl
into
fiaddl
icebp
flds
jmp
sub
pop
inc
pusha
fistpll
or
pop
xor
mov
dec
sub
push
mov
mov
mov
testl
add
es
hlt
mov
in
addr16
pop
fcmovne
psllw
push
popa
push
adc
jo
out
jae
daa
lods
mov
mov
xor
xor
dec
fstpl
andl
orl
andb
xchg
xchg
mov
scas
test
or
lods
popf
pop
mov
ds
das
sbb
es
xor
sbb
daa
sbb
repnz
and
mov
pop
ss
xor
push
fnstenv
push
jg
movb
sub
add
pusha
aaa
add
xchg
aas
cmp
and
push
jle
dec
xor
jae
cmp
jb
ljmp
shlb
in
push
arpl
dec
cld
ja
rolb
pusha
shlb
addl
inc
mov
dec
mov
sbb
xchg
test
xchg
push
in
jl
scas
cmpl
push
and
xor
or
mov
ds
pop
pop
testb
fmull
jb
outsb
sbb
xchg
in
mov
scas
lods
jge
jmp
mov
xchg
xchg
or
mov
adc
aad
lods
or
jne
pusha
or
inc
mov
iret
add
pop
adc
fstps
out
arpl
add
fwait
imul
fstps
cli
xchg
jecxz
in
mov
jle
imul
outsl
sub
pusha
adc
cmp
lds
dec
mov
lret
push
ret
pop
jb
mov
push
and
mov
je
add
xchg
aaa
or
imull
mov
aas
push
push
cwtl
cmp
pop
or
mov
xchg
lahf
fisttpl
into
adc
insl
into
js
sub
dec
out
inc
aaa
jle
fs
loop
mov
push
mov
xchg
adc
or
inc
add
test
inc
rcr
mov
jns
or
xorb
jns
xor
xor
bnd
mov
movsl
shll
cmc
xchg
jnp
gs
and
xor
fistpl
mov
dec
and
cld
fmull
cld
xor
mov
mull
fdivl
lds
fldcw
not
scas
mov
add
das
dec
xor
outsb
call
push
iret
ret
sbb
popa
cmc
popa
sbb
stos
xor
pushl
rcrb
ja
and
jecxz
push
insb
mov
and
cmpl
in
test
sahf
addr16
fwait
inc
sub
frstor
pop
fs
mov
hlt
enter
insb
cmc
insl
mov
jbe
stc
fcoml
push
shll
pop
cmp
add
cld
es
popf
sbb
scas
ret
repz
lret
push
sub
xchg
jle
imul
xor
inc
push
push
or
mov
out
data16
repz
and
push
ss
mov
or
cmp
testb
mov
icebp
imul
push
sbb
mov
and
cmp
popa
and
cli
dec
in
repnz
jmp
add
inc
ret
mov
fisttpl
xchg
sub
loope
call
fwait
les
mov
leave
mov
xchg
mov
xchg
ss
int3
mov
jo
std
cmpsl
js
shrb
inc
mov
and
in
xchg
jne
fisubrs
dec
lret
out
lea
sahf
inc
xchg
jge
out
inc
sub
fiaddl
imul
push
lcall
out
clc
loop
gs
and
mov
add
xor
sub
or
mov
test
cmp
pop
shr
hlt
in
aaa
bound
sti
addr16
test
inc
int
xor
inc
sub
int3
jge
cld
dec
jg
cmp
aaa
das
fucomip
jle
xor
repnz
cli
add
xchg
add
test
dec
pushf
and
push
pop
push
outsl
cmp
bound
ss
adc
iret
test
leave
iret
jle
lea
push
popa
in
lods
cmpb
out
jbe
iret
pushl
sbb
inc
jnp
pop
iret
sub
dec
fmul
xchg
jno
bound
jno
sahf
stos
and
sbb
mov
dec
popf
sbb
mov
cltd
xchg
push
xchg
stc
fs
jno
xchg
mov
cltd
cmp
jmp
leave
jmp
adc
call
lock
xor
out
sub
xchg
xchg
outsb
cmp
daa
notb
pushf
push
or
dec
ret
lahf
rorb
sbbb
pushf
psadbw
leave
orl
and
in
idiv
fwait
ret
ret
and
pop
push
cmc
dec
dec
lds
push
cmp
jl
pop
arpl
push
xchg
ret
repz
sbb
jp
mov
and
mov
mov
and
xlat
mov
and
lahf
cwtl
pop
dec
das
push
outsl
add
jo
nop
mov
add
jb
cli
aas
in
fsubrs
cmp
xor
imul
sub
and
lahf
mov
idiv
rcll
sbb
movsb
icebp
push
dec
dec
stos
adc
jmp
ret
mov
mov
rolb
out
push
or
xchg
pop
cmp
xchg
inc
cmp
jns
cmp
and
push
lret
cmp
int3
lahf
and
jnp
adc
push
adc
bound
int
jne
jecxz
cld
inc
cwtl
inc
cmp
adc
sub
cltd
in
pusha
rol
sarb
cld
jl
in
lret
aas
adc
stos
into
or
lahf
rcrb
push
sahf
jmp
mov
repnz
test
aam
mov
mov
outsl
jl
sahf
adc
test
dec
pop
shl
pushl
mov
out
inc
jecxz
and
jl
jns
ljmp
lahf
jb
dec
mov
fwait
sub
jge
outsb
push
call
js
sbb
sbb
fisttps
mov
mov
inc
cld
test
inc
pusha
aaa
jmp
inc
and
roll
imul
cmp
cmpb
sbb
dec
addb
mov
out
xchg
jg
incb
mov
cmp
int3
hlt
std
in
loope
jg
loopne
mov
addl
mov
sahf
scas
in
out
cmpsl
subb
ss
cli
cld
dec
sub
out
adc
test
inc
and
adc
add
push
add
pushf
push
ret
jge
inc
add
jno
fbstp
mov
mov
cmp
mov
gs
sbb
xor
jmp
dec
jle
bnd
cld
fimull
add
mov
test
pop
cli
or
imul
push
push
mov
lock
add
jmp
sti
and
push
jmp
pop
mov
imul
mov
xor
jecxz
and
sub
nop
cmp
xlat
repz
xchg
mov
gs
scas
arpl
std
test
lods
cs
test
jmp
jmp
inc
sub
and
stos
lahf
rorl
test
or
daa
pop
mov
mov
sub
fs
mov
mov
add
loope
ja
pop
dec
adc
push
jmp
clc
faddl
push
fcmovne
call
ja
adc
cmc
xchg
insb
mov
lahf
movsl
orl
cs
mov
add
cwtl
push
and
fildl
pop
lahf
jo
imul
fdiv
in
add
pop
inc
sub
outsb
loop
mov
stc
cltd
cld
pop
lret
push
mov
dec
out
out
cmp
mov
xchg
bound
fistps
loope
das
test
enter
xor
cltd
andl
rclb
lret
adc
adcb
push
movsl
mov
scas
add
pushf
shl
sub
add
in
cld
movsb
es
push
push
movsl
lods
in
adc
mov
lods
es
cli
rdmsr
push
mov
or
in
and
lods
mov
push
jge
in
fimuls
dec
push
add
jnp
cmpsb
and
push
out
xchg
sbbl
add
xor
mov
add
popa
inc
rorb
aaa
sarb
scas
shrl
jns
std
add
scas
jne
insb
add
cli
shll
es
leave
ss
dec
xlat
pop
push
nop
mov
cs
insb
lods
stos
int3
sub
sub
lcall
xchg
in
xchg
pop
adc
lods
push
mov
or
mov
fimull
inc
mov
rclb
mov
add
cpuid
dec
js
pushf
jae
daa
jns
xor
scas
ss
orl
adcb
loopne
sub
int
fcomi
push
push
jb
icebp
add
lret
fildl
jne
jno
lods
int3
push
and
orl
js
add
dec
push
cmp
nop
scas
fstps
cmp
adc
mov
std
test
cmc
loop
xchg
mov
sbb
jecxz
or
push
pop
insl
test
sbb
xorl
sahf
lret
mov
mov
or
jl
daa
stc
cmp
ss
fisubrl
mov
lods
cli
sbb
insb
cmp
jmp
push
lods
test
insl
mov
sti
fnstenv
mov
ljmp
call
int
rolb
loop
jae
xchg
xchg
rcrl
push
shlb
adc
sub
leave
pushf
xchg
out
shll
aas
shll
cmpsl
sbb
shlb
lret
fisttpl
dec
in
or
leave
fisubrs
mov
pop
jne
aas
in
addb
mov
icebp
gs
jo
iret
test
mov
mov
cmp
push
js
notb
mov
mov
orb
sbb
xchg
stos
inc
mov
mov
xchg
sub
decb
xchg
or
idivb
in
add
clc
pop
and
std
movsb
aad
xor
pop
xchg
pop
cmp
mov
add
gs
sar
arpl
xchg
gs
popa
sbb
repz
push
leave
sbb
or
mov
mov
rcrl
dec
jae
stos
or
cmp
jno
and
push
subb
jo
jge
mov
negb
outsb
es
sti
or
and
movsl
xchg
cmp
mov
scas
push
sarb
jecxz
jl
adc
mov
and
mov
mov
into
xorl
clc
loope
inc
push
adc
shlb
repz
sbb
ja
in
aad
jae
pushf
xor
push
test
iret
xor
sub
pop
cmp
filds
out
adc
lods
outsl
in
jb
adc
out
or
out
xor
mov
mov
cmovg
inc
repnz
dec
mov
fstl
jne
fstps
das
rcr
xor
aas
ja
xchg
call
scas
mov
lock
push
filds
shl
sub
fstpt
push
pusha
ret
arpl
std
stos
loop
or
into
int
sahf
mov
pop
xorb
fnstcw
pop
mov
lock
lret
loope
xor
push
insb
ds
incb
popf
jns
divb
rcl
arpl
or
xor
mov
aaa
rclb
loopne
xchg
cmp
xchg
and
xchg
testl
pop
subl
jno
dec
dec
aad
adc
cmp
loop
movsb
test
inc
adc
pop
stos
xchg
jg
out
lret
jge
mov
xor
iret
lods
cmp
movsl
mov
in
lods
lock
cmp
and
jno
or
fcompl
pop
aaa
repz
xor
xchg
sub
cmp
iret
mov
mov
push
imul
nop
ret
shlb
add
das
psllw
repz
mov
popa
push
gs
lock
sub
pusha
push
mov
add
xchg
jno
orb
dec
out
shlb
xor
outsl
push
aam
cmp
dec
mov
testl
aaa
fadd
xor
jmp
lret
xchg
jp
adc
mov
jg
ja
jo
insl
push
test
mov
mov
cmp
or
rsqrtps
xor
add
mov
fs
jle
mov
mov
jne
jbe
call
sub
or
and
add
ffree
repnz
add
push
clc
testb
mov
push
shll
xchg
addl
adcb
jno
lds
mov
add
mov
cmc
mov
stos
jb
scas
ljmp
icebp
pop
mov
push
lahf
mov
lret
clc
adc
lea
mov
test
mov
adc
int
push
add
fcmovu
mov
test
scas
mov
lods
call
jle
mov
aaa
loope
or
sbb
enter
nop
test
in
or
cmp
jne
ja
push
mov
in
sub
gs
inc
push
jg
mov
sbb
jecxz
jno
cmp
dec
inc
mov
inc
or
pop
aas
xor
inc
and
jo
xor
insb
mov
filds
cmp
fwait
outsb
int3
sub
pop
insb
ficomps
fadds
sahf
jnp
ret
verr
mov
and
ret
xchg
mov
mov
jl
in
inc
inc
pop
fdivrs
xor
pop
stos
mov
pusha
mov
dec
jae
jo
lds
mov
jne
cwtl
inc
arpl
aaa
sbb
and
movsl
in
mov
push
xorl
or
ret
movsl
movsl
xor
and
enter
ret
stos
jae
dec
xchg
mov
fs
mov
and
scas
loop
xchg
adc
loopne
pop
decl
repnz
movsl
sti
jle
sbb
enter
sub
mov
sbb
inc
lods
mov
sub
cmp
jb
test
xchg
push
mov
lcall
popa
pop
lahf
fxch
ss
into
cmp
jecxz
outsl
push
repz
add
jmp
cli
mov
int3
fmul
dec
mov
cli
mov
jae
sbb
sub
xchg
cmpsl
or
enter
popf
mov
jmp
xor
psrad
movsw
fimuls
inc
push
mov
lods
xchg
jp
or
out
and
rcr
pop
mov
je
jb
dec
adc
pusha
mov
lret
cmp
adc
stos
mov
or
and
aad
je
cmp
ds
cmp
pushl
cli
dec
cwtl
lret
int3
test
gs
cmp
cmp
xlat
stos
test
sbb
out
push
pop
aam
pandn
test
les
lods
xchg
repnz
or
addr16
bound
or
jo
imul
and
in
sbb
test
sarb
mov
pop
cld
pop
jno
pop
and
bound
or
mov
pop
into
popa
hlt
or
test
in
adc
pop
fcmove
xor
je
lret
add
dec
xchg
mov
negb
cmpsb
dec
mov
lds
dec
xchg
test
leave
inc
mov
sbb
in
xchg
cmp
lock
cld
mov
rorb
mov
jg
add
icebp
or
add
insl
lods
outsl
xchg
sbb
cmp
adcb
jbe
mov
movsl
mov
inc
push
jg
popf
mov
int3
xchg
xor
pop
icebp
les
cmpsl
and
repnz
mov
popf
int3
out
iret
pop
add
mov
pushf
cmp
rcrl
jae
xchg
or
les
jle
or
push
popa
jns
in
js
xchg
add
ret
sub
jne
xchg
aam
sub
mov
scas
dec
movsb
in
pop
xlat
add
sbb
mov
repnz
je
rcl
mov
cmp
ret
shlb
dec
loopne
dec
xor
lcall
push
sti
test
pop
sbb
push
push
add
add
rcr
pop
dec
call
xor
xor
inc
mov
mov
icebp
xor
sbb
push
loop
mov
mov
sbb
rolb
mov
lods
inc
pusha
sbb
lret
mov
add
mov
rol
push
cmp
inc
jl
sbb
ds
mov
mov
xchg
shlb
inc
mov
sub
and
fcoml
add
jle
repz
mov
enter
mov
jo
dec
insl
fwait
js
jp
notb
out
mov
inc
add
mov
cmp
and
shr
std
xor
xor
pop
imulb
jns
cmpsb
add
jb
mov
dec
pop
les
add
stos
or
stos
adc
pop
sbb
mov
or
leave
jns
outsl
lahf
adc
push
add
mov
or
jo
mov
jbe
shrb
xlat
out
mov
mov
scas
cli
adc
sbb
jmp
sub
pop
aaa
xchg
pop
pushf
xchg
repz
add
notl
mov
out
inc
jno
test
outsl
adc
mov
fcomps
std
xchg
int3
cmc
mov
push
cld
pop
xchg
cwtl
dec
jbe
inc
adc
insb
dec
pusha
frstor
icebp
fwait
push
leave
mov
das
out
addr16
mov
push
div
and
xchg
pop
add
mov
mov
cmpsb
pushf
pop
stos
dec
adc
dec
push
xlat
inc
pop
push
inc
aam
inc
call
aam
sahf
loope
adc
fidivrl
or
loop
test
xchg
in
pop
pusha
push
mov
rorl
inc
enter
xchg
mov
aaa
daa
pop
xlat
inc
hlt
add
push
jmp
ja
jmp
addl
lods
dec
cmp
movsb
test
jecxz
add
mov
ss
sub
mov
inc
or
test
into
mov
cmp
lret
sbb
sub
mov
cmp
sub
cmp
fwait
jb
mov
icebp
pop
enter
je
leave
push
in
sbb
sub
push
cmpsl
mov
jmp
mov
out
xchg
inc
jae
rol
shll
das
mov
jge
and
pop
rcrb
mov
and
add
bound
test
sub
in
adc
jns
out
push
add
adc
mov
push
mov
sub
outsl
test
xlat
stos
mov
int3
jns
lret
sbb
jne
into
imul
in
popf
outsl
mov
push
into
pop
popf
inc
pop
lds
arpl
cmp
decb
insb
shl
mov
pop
fldl
cmc
pop
insb
incl
fiadds
and
pop
iret
jge
in
fnstsw
jle
mov
cmpsb
out
shlb
pop
fcmove
lods
mov
sub
popa
leave
mov
push
adc
pop
lcall
pushf
xlat
int
rorb
mov
out
inc
sysexit
push
add
rcrl
adcb
jo
imul
add
popf
xor
data16
pop
lahf
test
loope
nop
push
mov
mov
insb
inc
loope
or
xor
sbb
fcmove
arpl
in
pusha
call
call
xchg
aaa
sahf
or
sbbl
lea
xor
or
ret
mov
mov
lcall
popf
dec
jge
sti
mov
add
inc
xchg
ja
inc
sub
xchg
stos
dec
adc
and
sbb
inc
shll
push
jns
imul
test
add
lods
jne
pop
ja
movsl
mov
sbb
enter
xor
or
inc
stc
lds
add
jle
aas
inc
call
lret
fwait
cmp
jmp
dec
sbb
jbe
dec
pop
in
push
mov
stos
enter
push
mov
pop
int
cwtd
cmp
fistl
test
fmulp
add
push
divl
cmp
jmp
idivl
inc
xor
jge
jp
jl
addl
test
add
jno
inc
mov
popf
mov
cmc
leave
lcall
push
push
adc
sbb
and
sar
fstps
fmull
jmp
and
fimull
call
bnd
fmul
mov
fwait
jl
decb
jb
push
cmpsl
cltd
add
add
clc
jbe
jle
es
jge
xchg
loopne
dec
repz
adc
adcb
mov
movsb
mov
push
jbe
mov
je
ja
sub
outsb
scas
daa
push
cs
sahf
xor
add
mov
cmp
inc
ja
clc
cmp
sarl
imul
xor
cmp
push
cli
jnp
and
xchg
mov
gs
loope
loop
test
mov
cmpsl
insl
push
and
pushf
outsl
and
add
gs
sti
inc
lock
push
jle
mov
dec
imul
jo
cli
dec
xor
sahf
mov
sti
mov
arpl
int
xchg
mov
divl
pushf
jae
fstpl
mov
pop
adc
push
pop
out
xor
std
mov
pop
idivl
push
xor
xor
mov
or
pushf
lret
or
push
add
stc
es
jb
sub
loopne
mov
scas
inc
push
sub
loop
mov
push
out
test
jge
and
lods
mov
mov
movsb
pop
add
filds
iret
mov
cmpsb
or
pusha
pop
lcall
mov
fbstp
out
stc
repz
mov
mov
js
xlat
jb
mov
cmp
cmp
dec
stos
imulb
mov
sbb
jecxz
fimull
inc
je
cmp
mov
int
or
mov
jno
lods
orl
xor
shl
sub
aas
and
and
mov
mov
fadds
and
pop
outsl
and
adc
sbb
lods
mov
mov
inc
jns
mov
call
push
lahf
add
enter
push
mov
ror
adc
repnz
push
pop
adc
jp
int3
xchg
scas
incl
mov
mov
lods
aad
inc
sub
nop
daa
std
jnp
rcll
adc
aam
fidivs
add
stos
scas
sti
cmp
mov
out
pop
adc
cmp
data16
xor
psubb
mov
add
ja
dec
in
pop
mov
mov
adc
ret
bound
icebp
xchg
cs
push
cld
cmp
adc
out
cwtl
outsb
xchg
lds
test
icebp
imul
mov
insl
ja
js
out
adc
shll
xchg
inc
jo
mov
out
enter
add
lea
mov
pop
ret
dec
push
cmp
shr
mov
inc
sub
cmp
jl
bound
in
jg
das
lret
lods
test
aas
mov
in
aad
push
mul
repz
in
adc
sbb
sbbl
add
ret
mov
cmc
lahf
and
push
mov
dec
xor
adc
mov
adc
shr
das
mov
add
and
dec
iret
insb
pusha
out
lret
pop
cmp
add
mov
lret
outsl
lret
test
add
adc
push
push
ret
mov
insb
push
mov
push
mov
rolb
add
cmp
jg
push
pop
pop
cwtd
mov
in
test
jl
pusha
outsl
inc
mov
lahf
dec
inc
shll
push
loopne
cs
lods
fdivrp
mov
and
pop
mov
push
jnp
mov
lock
mov
sub
and
xchg
jl
adcb
loopne
cmpsl
loopne
icebp
mov
xchg
mov
add
xchg
push
lods
jecxz
lcall
jl
sub
push
push
push
int
mov
adc
push
shrl
push
movsb
idivl
jae
fistps
lret
mov
adc
icebp
cltd
inc
pop
fildl
mov
dec
mov
inc
xchg
fbld
aad
dec
aad
scas
sub
mov
xchg
int
cmp
arpl
mov
movsb
xor
xchg
mov
popf
mov
dec
cmp
push
add
jp
clc
mov
clc
fwait
addr16
lahf
sub
adc
mov
xchg
adc
push
pop
mov
clc
push
adc
mov
out
out
cld
insl
fs
jp
mov
or
cmp
and
sbbb
jae
xchg
xchg
lcall
test
sbb
pop
dec
mov
js
cmp
out
je
jns
rcll
push
in
jl
lret
rcrb
inc
in
fs
rcrl
mov
popa
sbb
push
cmp
insb
les
pop
push
mov
arpl
xchg
push
mov
daa
push
loopne
cmp
subl
pop
fildll
and
xchg
inc
or
js
leave
mov
xor
xchg
popf
lds
inc
stc
jl
leave
loope
push
dec
xchg
insb
sbb
and
sahf
leave
push
pop
cltd
push
cmp
xchg
pop
sbb
xchg
push
pop
or
push
add
rcrb
sahf
lea
cli
pushf
push
lret
outsl
in
cmp
imul
add
popf
pop
fstpt
xchg
sub
mov
inc
push
fimuls
loopne
add
sub
push
pop
mov
mov
mov
sbb
cmpsb
adc
imul
push
pop
dec
inc
test
lcall
jae
jae
ret
adc
fldcw
jmp
inc
adc
jbe
sbb
lods
jg
shr
mov
jge
data16
rcrb
aad
test
or
inc
or
lds
jo
aad
jns
inc
and
cmp
fucomip
add
enter
pop
or
je
pop
cmc
lds
pop
xchg
push
pop
insb
xor
or
lea
jb
clc
xchg
nop
js
pop
loop
push
icebp
xchg
xorl
aam
cmp
xchg
xchg
xchg
add
dec
xor
xor
sti
jae
jl
int
movsb
mov
push
jbe
and
repnz
je
outsw
push
rcrb
jp
insl
inc
aad
jno
cmpsl
mov
test
sub
add
movsb
lahf
es
and
dec
pusha
std
mov
mov
adc
adc
aam
insb
xchg
es
call
orb
dec
xchg
adc
mov
add
jmp
imul
shrb
sub
das
movsb
daa
mov
adc
jnp
mov
inc
ja
repnz
xor
test
push
push
push
outsl
mov
into
sub
jg
jl
sub
xchg
jb
and
lods
hlt
imul
les
jmp
jmp
sbb
push
addr16
sarb
adcl
int3
sbb
mov
jp
in
mov
or
fwait
cwtl
mov
sub
fdivr
adcl
outsl
mov
int
jmp
lfs
xchg
ret
and
or
imul
pop
xor
fldcw
ljmp
mov
fisttps
jle
stos
adc
gs
or
fdivs
sub
xchg
les
in
sub
test
clc
add
push
push
cmp
push
pop
repnz
jmp
sahf
xchg
pop
sti
jo
jmp
pop
mul
dec
sub
out
inc
xor
sbb
push
mov
add
xchg
sbb
sub
xor
jp
push
cs
jg
mov
or
mov
loopne
rcrb
daa
movsb
rolb
jle
repz
loop
xchg
jae
popa
adc
movsl
jp
out
stos
sbb
push
jg
jg
push
aad
pop
testl
push
mov
sub
and
mov
test
test
aad
inc
adc
mov
xchg
pop
les
lcall
mov
inc
fwait
ss
inc
cmpsl
popa
icebp
nop
cmp
into
repz
push
test
sbb
gs
imull
push
cli
mov
mov
je
xlat
je
lea
sbb
mov
pop
rcl
ror
idivl
add
fisttpl
push
cmp
cmp
cltd
jecxz
inc
cmpsb
dec
stos
jg
aad
pop
mov
inc
cltd
in
add
dec
xchg
lret
xor
int
int3
pop
mov
cwtl
push
aad
subl
mov
jno
incl
mov
cli
push
insl
xlat
not
daa
dec
push
cmp
test
shl
mov
mov
dec
into
mov
das
sub
jge
xor
pop
pop
aad
mov
push
jbe
scas
addr16
add
or
ret
jno
lret
sbb
adc
sbb
or
and
in
outsb
mov
ja
ds
add
repnz
shrb
test
add
jg
inc
push
stos
sbb
push
or
jnp
jne
mov
jo
imul
adc
lea
aad
mov
push
inc
xlat
out
cld
mov
inc
clc
js
into
xor
jbe
arpl
push
sub
sbb
lock
rcr
push
dec
mov
and
into
sbb
jg
sub
leave
das
sub
pop
and
and
sti
cmpsb
in
inc
repz
sahf
mov
fxch
dec
outsl
mov
add
dec
aam
imul
mov
pop
in
and
mov
lds
mov
lock
jno
scas
sbb
shl
int3
out
jbe
mov
xchg
out
cmpsb
and
aaa
imul
mov
inc
add
push
lahf
mov
xchg
inc
sub
mov
xchg
loopne
xchg
xor
mov
fld1
mov
and
or
jb
pop
mov
outsb
sub
push
mov
lea
repz
out
repz
xor
mov
mov
addr16
or
scas
xor
setge
addr16
negb
out
cmc
push
add
jo
inc
ja
cmpsl
in
mov
jle
inc
xor
orb
push
cmp
and
int
xchg
int3
int3
dec
add
adc
nop
ja
mov
ret
adc
push
test
jae
lret
dec
pop
dec
mov
or
pop
jmp
fs
call
popa
mov
jbe
jne
mov
jns
inc
cmp
test
lahf
sbb
mov
xchg
jmp
mov
fimuls
fmulp
sbbb
mov
repz
sub
test
inc
ljmp
repz
aad
and
orl
pop
test
mov
jmp
cmc
adc
xchg
or
and
sahf
andl
fists
les
sarl
and
jnp
stc
incl
dec
cwtl
mov
push
je
mov
rolb
popf
loope
inc
and
loop
sbb
ds
movsl
mov
xchg
data16
xor
jecxz
mov
dec
adc
outsl
jmp
aaa
mov
xchg
xchg
adc
mov
loop
inc
adc
adc
test
lcall
cmovs
inc
mov
add
cmp
mov
xor
imul
imul
mov
aas
inc
xor
scas
ficoms
imul
jge
cmp
les
push
test
repnz
mov
repz
repz
mov
mov
inc
push
push
or
cmp
out
movsb
cmp
adc
mov
leave
je
fistpll
cld
xor
jle
lds
sbb
lahf
adc
cmp
incl
xchg
add
mov
or
pop
sub
mov
jmp
std
sahf
mov
xor
mov
fs
xchg
imul
push
jmp
shlb
or
sbb
hlt
cmp
in
sbb
daa
fsubl
dec
add
add
repz
lods
inc
out
jbe
mov
mov
mov
pop
cli
xchg
sub
add
push
popf
sbb
xchg
sbb
sbb
xchg
xchg
adc
popf
xchg
mov
scas
mov
pop
add
inc
jo
jo
stc
dec
sub
mov
mov
cmp
xor
add
outsl
sub
mov
clc
outsl
das
push
xorl
fnstcw
xchg
and
cmp
pop
fldcw
sti
out
or
mov
filds
ss
lcall
mov
repnz
dec
push
push
pop
pusha
sbb
and
fidivl
and
xchg
arpl
out
and
push
dec
outsl
or
sub
int3
cmp
xor
fisubrl
push
mov
push
xchg
call
adc
test
push
ja
push
push
mov
fwait
cmc
loope
mov
xchg
xlat
fcompl
inc
jbe
movsl
xor
dec
std
lahf
xlat
mov
push
ret
arpl
xorl
xlat
dec
addb
sbb
lock
test
aad
mov
test
push
testb
stos
incl
addl
rol
cmp
push
insb
loopne
mov
pushf
lahf
mov
push
sbb
int3
jo
mov
inc
jae
mov
in
jne
pop
je
lods
mov
aas
sub
and
cwtl
fnstsw
pusha
jl
int3
cmp
mov
add
pop
imul
mov
jge
and
xor
mov
jb
imul
outsb
mov
cmp
and
iret
es
sbb
sbb
xchg
dec
es
push
pop
popf
mov
lds
jmp
cmp
jno
in
add
mov
in
lea
jne
out
ds
sbb
popa
mov
inc
sarl
icebp
aas
mov
jg
in
out
shlb
out
imul
cmp
stc
adc
mov
mov
loope
je
add
pop
fs
rclb
hlt
push
cmp
das
aaa
xor
cmp
dec
pop
jo
pop
dec
lock
outsl
dec
mov
or
push
or
js
cli
pop
adc
outsb
pusha
push
shl
jp
and
xchg
je
call
sbb
adc
mov
jns
into
lea
and
sub
js
ret
lcall
sub
sub
sarb
lea
push
xchg
xchg
aaa
outsb
mov
push
pop
lods
repz
push
adc
fstpl
push
mov
stc
hlt
sbb
pop
fldenv
xor
add
movsb
jmp
adc
push
mov
cmpsl
dec
mov
jecxz
subb
push
xor
jge
xor
cmp
lret
add
xchg
mov
push
mov
insl
ja
mov
dec
mov
push
fs
cltd
mov
inc
push
fcomi
mov
pop
sbb
rorw
fidivrs
push
in
shrb
dec
hlt
sub
aas
xchg
inc
pop
lcall
arpl
dec
popf
mov
daa
xchg
mov
sti
mov
or
daa
mov
js
sub
into
imul
ret
pop
lea
inc
cmp
cltd
ss
cmp
popf
push
movsl
je
xor
pop
inc
add
xlat
push
or
mov
push
sbb
cmp
xchg
mov
xchg
int3
out
sbb
jge
into
push
lods
cmp
pusha
mov
mov
inc
sub
lcall
jae
push
jge
pop
push
sbb
nop
mov
mov
das
adc
loop
sti
pop
in
push
adc
push
mov
cs
mov
fldl
xchg
push
dec
int3
push
test
rcr
jge
aas
lock
fsubs
lret
pminsw
push
andb
int3
add
push
mov
dec
cmp
movsb
mov
cmpsl
ret
inc
or
mov
into
cmp
out
push
sahf
pop
xor
fistl
loop,pn
das
and
dec
jmp
inc
adc
ret
lret
call
xor
insb
lret
movsl
sub
pop
ds
dec
mov
cmc
fsubl
lods
clc
lock
sub
fcoms
cmpsl
sbbb
fwait
and
mov
hlt
hlt
popa
insl
loop
fnstcw
sbb
mov
cmp
pop
jp
decb
push
jbe
insb
sbb
mov
arpl
push
pop
repnz
test
int
xor
xchg
jge
out
scas
out
pushf
jmp
rolb
sub
push
sub
dec
scas
push
pop
jno
js
or
add
dec
mov
cmc
lret
xchg
stos
adc
int3
fsubrl
xchg
lahf
mov
scas
aas
sarl
hlt
jle
jg
push
cmp
cwtl
dec
xor
cmc
xorb
sbb
repnz
adc
outsl
xchg
fimuls
add
push
test
adc
dec
and
icebp
cltd
pop
in
test
test
push
lods
cltd
and
test
es
outsb
xchg
mov
test
cmp
ret
adc
add
add
imul
ds
cmc
lcall
fisubrl
push
cld
or
jns
mov
push
insl
es
sahf
mov
adc
sti
inc
sub
jg
xchg
cmpsb
dec
lahf
pop
add
insl
push
scas
lods
es
lcall
push
push
jns
insl
dec
mull
cmp
pop
pop
sbb
pop
mov
das
fisttps
pop
inc
jp
in
and
dec
icebp
and
mov
js
mov
pop
lea
adc
cmp
imul
mov
ret
in
pop
test
test
shrb
gs
cmp
xchg
mov
dec
ret
xchg
cmp
push
lock
pop
push
fistps
dec
cmpsb
xor
iret
jg
add
addr16
push
jg
push
dec
in
or
mov
popa
xrelease
xor
divb
and
jb
and
jle
pushw
sbb
pop
rcrb
cwtl
jle
pusha
iret
daa
mov
icebp
and
push
call
mov
jne
mov
lea
or
daa
pop
aad
lods
mov
lahf
cs
mov
fnstenv
mov
xchg
out
aam
inc
mov
add
daa
sbbb
push
adc
je
repz
fdivrl
add
mov
into
lods
in
mov
outsl
aaa
sti
mov
cmp
jnp
mov
adc
xor
mov
sub
jne
pop
adc
mov
fnstenv
test
mov
or
ja
loope
or
jg
xchg
iret
or
pop
sub
mov
pop
cld
and
icebp
xchg
fadds
sti
popa
ret
out
cmp
mov
xor
push
pop
sti
cmp
add
xchg
add
inc
cld
pushf
push
rclb
cs
inc
sub
fwait
mov
xchg
sbb
sbb
aam
addr16
push
inc
inc
aad
mov
sub
adc
rcl
dec
fisubs
push
push
leave
fwait
sbb
inc
add
xorl
sbb
loopne
rclb
jnp
add
xchg
mov
enter
cmp
and
jae
shl
mov
in
pop
movsl
shll
inc
push
add
and
mov
arpl
pop
xor
pop
call
push
stos
negb
pop
mov
dec
cmp
pop
inc
pop
jo
cmp
sub
xor
dec
add
cs
xchg
pop
sahf
popa
push
lret
adc
mov
mov
add
into
mov
lods
sbb
testb
mov
iret
fs
jbe
cmpsl
xchg
in
cmp
ljmp
imul
mov
cmpl
xchg
pop
pcmpeqd
mov
dec
cmp
jecxz
lods
push
sbb
mov
unpckhps
sub
aad
into
mov
jno
adc
mov
pop
and
xchg
mov
inc
cli
rcrb
inc
fs
adc
ficompl
jae
or
and
dec
lods
mov
pushf
jnp
mov
icebp
in
dec
gs
and
aad
pop
stc
shrl
push
inc
nop
jg
ljmp
icebp
mov
mov
xor
daa
pop
xchg
std
bound
call
mov
and
pop
mov
push
les
add
stc
add
push
mov
xor
ret
jle
push
sbb
ficoml
mov
lock
fs
pop
sub
test
xchg
lahf
imul
adc
fdivrs
aam
mov
sub
ja
mov
mov
push
add
jb
les
adc
aam
jg
cmp
stc
push
mov
push
add
pop
push
sbb
mov
daa
fildll
push
push
pop
outsb
mov
leave
adc
cmp
jle
mov
inc
jl
xlat
mov
pushf
xor
lcall
sar
scas
jno
inc
mov
cmp
fisttpl
pop
in
xchg
or
xor
push
push
rcl
loop
std
lahf
outsb
or
dec
mov
adc
xlat
mov
fidivrs
xchg
icebp
push
or
sub
in
rcll
add
mov
mov
push
fdivrs
xor
pop
mov
inc
pop
out
movsl
test
add
in
mov
out
jmp
adc
scas
or
test
aad
push
lahf
lds
dec
sbb
cmpl
loopne
cmp
fdivl
cmp
pop
lds
xlat
mov
mov
aaa
dec
sbb
subl
in
icebp
fisttpl
out
les
rorb
mov
dec
fwait
insl
pusha
xor
inc
mov
mov
lods
adc
fs
mov
imul
cmpsl
loop
mov
cld
das
pop
pop
jg
xchg
fbld
je
das
cmc
ja
dec
xor
rcll
push
cmc
and
out
jno
es
ret
test
dec
in
sbbl
movsb
add
lahf
in
push
cmp
out
fcmovnb
cmp
lcall
jle
js
lcall
fimuls
out
and
cltd
or
repz
jmp
negl
mov
je
out
sbb
into
gs
jb
fcmovne
jecxz
push
xor
sar
xor
repnz
insl
mov
popf
cmp
aam
cmp
ss
xlat
adc
gs
pop
xchg
roll
std
fsubrl
mov
jo
scas
mov
fcomp
jecxz
test
or
pusha
push
les
sti
xchg
cltd
push
aad
cmp
mov
loopne
mov
or
call
subl
mov
adc
or
pop
dec
out
lret
les
push
dec
xor
and
cmpsl
pop
ja
dec
stos
jecxz
mov
imul
aaa
sar
in
test
xlat
jae
or
lods
mov
sub
fwait
loopne
adc
mov
inc
aam
xchg
movsl
in
mov
push
into
sbb
pop
xor
mov
fwait
xchg
sub
shll
mov
push
mov
and
inc
hlt
int3
lea
inc
xor
xchg
loope
push
mov
repz
fcmovnu
jmp
dec
daa
das
jmp
xchg
cmovge
inc
iret
xorl
fucomip
dec
scas
mov
call
in
cmp
or
pop
sbb
mov
cmp
inc
mov
test
jns
loop
decb
and
jns
stos
arpl
mov
and
push
mov
push
outsl
movsl
das
inc
mov
or
popa
xchg
pop
lods
int3
stos
js
inc
enter
popa
push
adc
out
push
mov
repz
lret
sahf
stos
ret
in
cmpsl
lret
addl
stos
jns
cwtl
dec
cmp
mov
jo
popf
jl
out
jecxz
push
sbb
adc
das
out
cld
pop
movsl
test
addr16
adc
cmp
adc
push
dec
mov
cmc
into
xchg
aam
jg
jbe
je
and
mov
mov
mov
xchg
movb
scas
aas
xor
mov
pop
mov
add
mov
dec
lcall
gs
fistl
dec
dec
pop
jge
add
icebp
repnz
mov
lods
aad
jne
pusha
rcr
iret
sahf
mov
sub
mov
pop
idiv
push
add
pop
xlat
jl
cmp
pusha
imul
mov
cmp
aas
cmp
sbb
pop
push
push
cmpsb
push
sub
dec
rolb
xchg
outsb
in
push
xor
jg
inc
push
xor
dec
adc
adc
xlat
js
in
push
cmp
in
test
push
aad
mov
loope
mov
fsubr
inc
sub
ss
repz
mov
inc
stos
xor
jae
pop
mov
hlt
pop
xchg
rclb
mov
or
pop
or
or
insb
outsb
and
out
push
mov
jno
imul
lahf
mov
or
xlat
je
push
cmp
push
jmp
cwtl
jmp
push
fwait
xchg
inc
in
mov
in
push
and
cmp
sarb
imul
xor
std
mov
jno
in
push
dec
mov
pop
add
arpl
push
jmp
lea
loopne
xor
loop
lods
sbb
add
sbb
push
fnstsw
jnp
push
cmp
xor
pop
test
cli
or
test
jo
xchg
lds
push
stos
rcll
add
xor
push
test
jo
mov
inc
push
or
pop
sub
adc
adc
mov
xor
and
push
push
pmaddwd
cmp
mov
mov
stc
mov
xchg
sbb
pop
pop
xor
arpl
dec
sub
xchg
push
stc
jle
and
shll
cld
xorb
std
sbbl
int3
shll
mov
ss
mov
lcall
dec
xor
mov
xchg
scas
bound
or
out
aad
outsl
pop
xor
mov
cmpsl
repz
jle
test
leave
popf
xchg
dec
lock
jecxz
and
in
fdivrs
dec
test
call
loope
scas
mov
push
out
mov
push
std
outsl
pop
dec
lret
mov
or
push
push
pop
add
repnz
movsl
or
negl
call
mov
cmpsl
dec
xchg
mov
jnp
pop
xchg
shl
mov
dec
jbe
mov
inc
dec
sub
aas
lret
iret
and
pop
outsl
xor
insl
mov
or
popa
outsb
stos
gs
mov
add
adc
pusha
jg
push
cwtl
cltd
sbb
push
movsl
add
sti
add
jo
xchg
fcomp
ds
push
mov
mov
push
dec
int3
inc
popf
pop
adcl
fwait
push
addr16
cmpsl
mov
push
rol
aad
sti
pop
aad
stos
ja
lods
fistps
mov
out
inc
jns
or
mov
pop
mov
jecxz
pop
mov
dec
gs
stos
rcrl
fcmovb
adc
mov
fildl
inc
les
call
addl
shll
popa
test
jb
ja
sti
aad
stc
popa
xchg
or
sub
lds
imul
xorb
mov
out
outsb
jb
ds
pop
fcmovu
pop
insb
loope
mov
xor
adc
or
mov
and
sbbb
les
sub
and
mov
mov
cmp
adc
jns
ficompl
test
mov
xchg
jmp
repz
inc
xchg
pop
inc
repz
arpl
shll
push
xchg
nop
fbstp
or
jl
mov
arpl
adc
dec
jle
jg
rcrl
xchg
stc
test
xlat
push
movl
and
bound
loop
lods
xchg
pop
cmp
sbb
lret
cli
jbe
fucomi
adc
decb
lcall
fs
mov
pusha
ds
xor
xchg
popa
push
xchg
shlb
push
lods
xchg
pop
loope
jecxz
push
fsubr
roll
stc
adc
dec
or
movaps
sbb
cmp
mov
or
inc
jo
sti
cld
es
xor
pop
mov
add
jmp
xchg
repz
aam
aaa
lods
sbb
lea
add
mov
jbe
flds
cmp
in
bnd
test
jae
sbb
mov
test
mov
cltd
dec
hlt
push
add
je
sbb
add
lret
cli
sbb
repz
sbb
xor
pop
cmp
dec
inc
xor
out
test
push
in
mov
je
mov
aam
mov
popf
jecxz
test
xor
inc
jle
xor
bound
inc
and
sti
in
mov
int
fdivrl
sub
jb
mov
inc
repnz
outsl
push
mov
push
in
dec
mov
into
sbb
fadd
mov
stc
sub
xor
out
shlb
fs
jnp
adc
xchg
clc
fidivrs
loopne
out
pop
sbb
inc
xchg
mov
pop
add
fucomip
imul
xchg
das
sbbb
sti
leave
int
jb
fmul
jae
xor
inc
mov
cmp
adc
int3
xchg
xchg
mov
mov
rcrb
and
je,pt
sti
dec
pop
lods
or
mov
lods
push
daa
pop
inc
aaa
clc
movsb
cmp
push
sub
jo
sti
pusha
fadd
sbb
roll
pop
jb
cltd
les
jo
fst
jne
jns
nop
pop
sub
mov
hlt
push
incb
cmpsb
mov
push
mov
cmp
mov
push
int3
cmp
and
rolb
sbb
into
flds
xor
icebp
ret
movsb
arpl
rorb
sbb
and
mov
sahf
sbb
xchg
sahf
addr16
addb
push
inc
jle
xchg
paddb
jns
gs
fmuls
pop
xor
mov
rcrb
xchg
jmp
mov
mov
sub
pop
lea
fistps
mov
or
mov
mov
push
inc
xchg
movsb
and
push
sahf
sbb
mov
inc
pop
jle
jno
stos
lods
and
cmp
dec
cli
xchg
lea
jle
call
popa
push
mov
adc
in
insb
fs
lret
loop
lods
pusha
mov
jl
push
pop
mov
push
inc
fwait
ja
inc
push
sti
inc
in
jmp
mov
leave
pop
iret
subb
js
jns
inc
ja
mov
xor
dec
xchg
jo
lret
mov
shrb
das
add
lock
fcoml
iret
pop
stos
decl
cltd
lret
add
fisttpl
jo
sub
addr16
jns
xlat
sub
cli
dec
sbb
push
jnp
pop
ds
je
pop
std
aad
xchg
aaa
mov
mov
xor
sbb
cs
js
pop
test
dec
cmp
lock
clc
jbe
notl
and
xchg
insb
or
add
sahf
mov
outsl
insl
mov
repz
jecxz
insl
hlt
cltd
add
inc
pop
repnz
daa
or
jne
ret
and
push
add
fsin
sub
aas
xchg
mov
push
push
ret
xchg
aad
std
mov
fdiv
out
lods
inc
inc
push
shll
jp
enter
mov
cli
push
mov
mov
hlt
jnp
mov
js
adc
add
xor
int
push
out
insb
jmp
jmp
xlat
arpl
cli
lret
lret
out
mov
outsl
push
mov
mov
adc
jno
pop
adc
lods
sarb
loop
jmp
add
mov
pavgb
arpl
dec
push
stc
sub
imul
push
stos
mov
test
add
sub
je
jnp
scas
stos
addr16
cmpsl
sub
jge
stos
scas
add
data16
jmp
repz
mov
add
and
add
popaw
sbb
jmp
mov
xchg
mov
outsl
push
xchg
xchg
mov
fisttps
pop
dec
dec
call
pop
pop
jl
dec
ret
jmp
hlt
outsb
leavew
daa
je
cmc
rcrb
ds
cmp
imull
pop
clc
ret
lahf
mov
sub
mov
mov
repz
xchg
cmp
xor
fnstenv
shll
movsb
jp
bound
pop
aad
int3
out
stc
outsb
mov
mov
lret
das
cmp
cmp
inc
int
xlat
orb
sub
loop
in
ffreep
int
stc
mov
mov
mov
fiadds
lahf
fistl
fwait
and
ror
cld
or
cmc
cmp
in
xor
movsb
add
jnp
stc
pop
jmp
scas
inc
out
shll
fisubrl
mov
pop
loope
jp
lock
inc
jb
cmp
rcll
pop
inc
outsb
data16
es
stos
mov
cwtl
lret
add
inc
push
scas
pushf
jge
shll
pop
lods
adc
adc
xlat
mov
loope
ficomps
leave
mov
mov
xor
addb
dec
pop
dec
loop
push
outsl
and
in
sub
mov
sub
jle
dec
ds
cld
jmp
in
cmp
loope
fisubrl
int3
mov
sahf
dec
push
repnz
loop
inc
cli
push
sbb
sbb
pop
sub
add
push
mov
pop
mov
xchg
push
jl
push
fs
pushl
or
movsl
fmul
insl
pop
or
call
cmpsl
andb
sbb
push
jo
dec
sti
dec
add
aaa
push
jno
jno
mov
and
jecxz
pop
pop
xchg
rol
or
jno
das
clc
repz
push
out
divb
cmpsb
aaa
je
jne
arpl
inc
mov
loopne
test
imul
push
inc
es
and
or
add
xor
jmp
pushf
mov
push
and
jo
inc
dec
fimull
adc
out
xchg
sub
clc
xor
or
rorl
incb
cmp
lods
or
xor
sub
inc
jbe
dec
int
stc
mov
sbb
cwtl
push
lahf
hlt
adc
sahf
aad
enter
adc
int3
in
mov
imul
mov
loop
mov
push
loope
fwait
shrl
jg
es
out
fcmovb
lea
jmp
imul
ret
lret
or
call
loop
scas
adc
insl
lock
call
lret
and
dec
loope
dec
in
iret
andb
push
pushf
inc
cmp
imul
xchg
xor
dec
xor
nop
es
mov
mov
mov
or
into
push
aam
mov
lock
out
mov
loope
jge
cmp
pop
dec
push
sub
jge
inc
orb
push
sub
mov
mov
clc
movsb
icebp
movsl
cmc
jmp
inc
gs
test
push
push
fisubl
test
add
jmp
sti
push
jl
sub
pop
scas
enter
sbb
sub
push
test
push
dec
add
movsb
rcr
stos
test
add
jbe
pop
out
or
jno
jae,pt
je
inc
movsb
lea
push
xchg
and
cwtl
jae
insl
ljmp
pop
and
fwait
stos
cwtl
cmpsl
ret
fdivrs
iret
pop
dec
add
fisttpl
mov
xchg
mov
lahf
jmp
xchg
aam
xchg
xchg
xchg
fisubrl
and
aaa
lret
and
mov
dec
stos
aad
inc
jbe
repnz
push
mov
int3
adc
cmpsb
scas
or
push
out
xor
pop
cltd
xchg
or
sbb
cs
rcr
inc
cmp
sbb
mov
out
or
sub
arpl
incb
xlat
xchg
push
push
enter
arpl
push
or
jo
mov
pop
js
sub
xchg
xor
scas
cld
iret
pslld
adc
into
push
sbb
mov
jecxz
mov
mov
fbstp
lahf
and
pushf
scas
jbe
out
test
mov
mov
aam
into
add
jle
dec
mov
jno
and
cmp
sti
pusha
fwait
xchg
pushfw
lods
lcall
mov
out
jge
testl
fwait
dec
sbb
xor
sub
jp
stos
mov
ljmp
xor
jb
add
aas
mov
pop
jnp
mov
inc
sub
loope
icebp
jg
rolb
or
leave
jae
aam
mov
shlb
and
repnz
into
jno
int
int3
add
mov
movsb
pop
or
stos
fndisi(8087
popf
pop
mov
inc
addr16
inc
inc
cmp
cmp
sti
sti
jp,pt
mov
ljmp
inc
ss
scas
push
cmpsb
dec
pop
xor
jmp
pop
xchg
sbb
stos
notl
iret
sbb
iret
lahf
repnz
mov
lea
inc
cmp
outsl
and
push
push
push
loop
inc
jle
mov
sahf
leave
lret
jge
mov
add
in
jp
icebp
ljmp
sbb
mov
add
push
adc
jnp
xchg
popf
and
aaa
fistl
out
clc
xchg
arpl
mov
xchg
jl
add
sub
jle
outsl
mov
ja
mov
mov
test
pop
mov
mov
aas
mov
jecxz
xchg
daa
pop
loope
mov
sbb
sub
jl
stos
bound
and
sbb
and
mov
push
xchg
lods
cmp
or
and
addr16
cmp
imul
repz
sahf
aam
sbb
cmpsb
jle
ljmp
xchg
fiadds
sbb
xor
negb
sbb
sbb
cmp
cli
addl
dec
adc
ss
insb
and
arpl
aad
cmp
inc
cwtl
ret
fsubp
outsb
sbb
and
mov
mov
push
cs
and
fs
aam
repnz
ret
jo
insb
sbb
push
aad
cli
dec
jg
xchg
cmc
not
push
add
cmp
push
push
jne
faddl
jge
out
sbb
adc
movsb
cmpl
and
andnps
add
mov
insb
stos
insl
inc
dec
xor
out
sub
pusha
jo
movl
jbe
stc
rcrl
loop
pop
in
addr16
fstpl
loope
dec
jge
clc
and
adc
push
fwait
cmpl
mov
sub
pop
movsl
ljmp
xchg
mov
mov
lcall
gs
fcoml
shlb
xchg
adc
lds
pop
hlt
or
pushf
pop
clc
in
jb
xchg
sahf
cli
test
shl
aam
mov
add
daa
movsl
dec
fcoml
add
cld
scas
push
dec
out
ret
inc
test
mov
mov
xchg
hlt
scas
test
ficompl
in
movsb
mov
inc
test
repnz
mov
and
notl
lret
gs
stos
xchg
inc
mov
adc
jo
mov
cltd
outsl
lret
fists
push
out
push
push
lods
xlat
dec
stos
in
dec
insl
push
ret
dec
dec
pushf
cmc
pop
out
rorl
xchg
pop
pslld
push
ret
sub
cmp
mov
inc
lea
xchg
push
fistl
jnp
pop
push
ret
mov
addr16
jmp
punpcklwd
sbb
lret
call
das
or
jae
xorb
fldcw
sub
xchg
insl
dec
mov
mov
xor
mov
or
test
lea
mov
xor
push
or
rolb
add
int
popf
adc
add
mov
pop
mov
pop
xchg
cmp
ficompl
mov
data16
outsb
fstp
or
mov
out
pop
es
fwait
jbe
dec
mov
cmp
add
push
das
jge
scas
xchg
push
insb
data16
bound
sarb
jle
mov
lods
inc
xchg
push
mov
push
or
rcll
push
push
rol
cmp
push
lret
cmp
pushf
movsb
or
rcl
cmp
popa
cmc
imul
add
xchg
pop
xchg
push
pop
cmp
sub
push
mov
outsb
in
lcall
leave
stos
fstpt
jl
jecxz
mov
lods
mov
lret
cmpsb
shrl
cwtl
pop
clc
in
inc
lcall
xchg
in
sbbl
ss
adc
adc
outsl
loopne
fsubrs
push
outsb
or
pop
cmpsl
stos
dec
mov
and
push
xor
push
push
hlt
loop
add
sbb
je
jp
stos
and
insb
inc
arpl
in
in
mov
pop
repz
mov
in
loope
jnp
popa
cmp
mov
push
cmp
jo
cmp
pop
mov
push
adc
repnz
cmc
pop
fildll
xchg
shlb
lcall
lds
cmp
pop
push
sub
or
into
jns
mov
mov
lfs
loopne
daa
lock
aas
push
mov
xchg
mov
adc
ss
mov
cmpsb
stos
or
lcall
daa
mov
es
fisttpll
and
push
mov
pop
loopne
jae
stc
push
aas
push
rep
fdivrl
sub
or
xchg
pop
sbb
pop
aam
imul
mov
enter
popf
dec
xor
dec
mov
dec
cmpb
out
stc
cs
call
out
mov
ds
pop
adc
testl
sub
mov
cmp
sti
nop
cmpl
idivb
andl
xchg
hlt
scas
jp
jbe
out
mov
mov
inc
int
inc
pusha
ds
rclb
int3
jnp
xchg
pop
icebp
push
out
insl
fnstenv
push
dec
aad
or
cs
jne
mov
imul
out
add
pop
cmpsl
jl
aam
out
and
pop
adc
loope
std
notb
test
les
xchg
dec
das
mov
ret
pop
inc
fstpt
jbe
fdiv
mov
in
testl
pop
inc
ss
jmp
xchg
stc
mov
mov
stos
bound
lret
dec
mov
mov
fwait
mov
movsb
mov
mov
and
cmc
mov
fsub
xor
jae
dec
push
arpl
bound
cmpsb
dec
clc
hlt
orb
sbb
fcmovbe
add
ret
xchg
cwtl
in
sbb
dec
push
popa
adc
shll
fstl
outsb
and
jp
frstor
jge
push
cli
in
in
jnp
lods
in
xor
sub
sbb
mov
xor
lods
fists
adc
mov
les
push
add
iret
mov
sti
or
mov
lds
lahf
mov
xchg
adc
sbb
mov
mov
mov
xor
lret
lahf
hlt
pop
loope
sarl
xor
jo
inc
and
or
sub
cli
insl
mov
sub
inc
pop
xchg
lahf
lea
pop
and
cmpsb
and
std
jg
mov
or
jb
jle
mov
outsb
xlat
and
add
adc
neg
push
ja
fiadds
sbb
mov
insb
cltd
cs
or
adc
mov
and
lahf
mov
addr16
test
dec
insb
push
ss
and
cmp
cmp
pop
push
xor
stc
and
rol
sub
mov
movb
sti
push
adc
push
aad
push
pop
out
lea
xchg
ficoms
mov
sub
lds
scas
cmpsb
dec
cltd
sbb
mov
repz
xor
or
pop
je
adc
sarl
or
inc
sbb
xlat
xchg
fldl
and
lods
divl
xchg
mov
pop
xlat
lret
sbb
je
and
mov
inc
lcall
push
or
and
xorl
mov
and
push
pop
jns
negl
lock
andb
je
aaa
jno
mov
mov
push
jmp
in
test
lods
sub
rcrb
mov
xchg
aam
mov
mulb
adc
imul
movsl
mov
or
jb
andl
xorb
xchg
sbb
cmpsb
pusha
je
sbb
dec
loop
ljmp
test
fucom
in
inc
pop
ss
add
cli
lods
inc
add
cs
xlat
cwtl
xor
jle
into
adc
fimuls
fld
ret
and
mov
xor
stos
aas
mov
out
pop
cmp
xor
pop
dec
mov
or
pop
mov
cmp
mov
push
lahf
imul
and
pop
push
pop
pop
in
xchg
xchg
push
shll
sahf
les
andb
call
inc
sub
xor
clc
add
out
mov
ret
jle
mov
movsl
mov
mov
mov
repz
mov
es
arpl
xor
lods
test
pop
aaa
dec
push
pop
ficompl
add
inc
pop
js
push
mov
inc
and
sbbl
add
cmp
lea
call
sub
inc
mov
push
out
loope
aas
jg
adc
pop
setl
cld
fidivrl
imul
loopne
outsl
es
cltd
mov
xchg
lcall
mov
loope
mov
mov
cwtl
mov
arpl
mov
xlat
jmp
add
daa
movsl
jbe
push
mov
cwtl
pop
lret
push
addb
stc
xchg
mov
test
push
mov
or
mov
incl
mov
loope
pop
js
shrb
xor
xchg
in
inc
test
pushf
jne
pop
mov
inc
xor
aam
mov
mov
or
cli
dec
cmp
lods
mov
lea
mov
mov
movsl
nop
pop
mov
push
mov
int3
aam
pop
inc
push
xor
and
popf
pop
popa
cmp
mov
popf
add
divl
and
pushf
adc
ja
and
inc
adc
fsts
and
test
pop
test
je
sub
cwtl
adc
xchg
out
xor
fisttps
pop
sub
cmc
xorb
lds
adc
mov
enter
enter
jmp
inc
orb
adc
imul
sbb
xchg
ljmp
into
test
xor
dec
inc
rcr
adc
fbstp
add
enter
push
pop
cld
pushl
imul
jl
mov
push
push
adcb
inc
imull
out
nop
sub
adc
push
push
cmp
or
mov
orl
mov
lds
pop
or
xchg
sbb
sbb
sbbb
or
xchg
insb
in
js
sub
leave
jp
andl
mov
sub
or
jecxz
loop
jge
and
inc
jns
cmpsb
icebp
clc
jb
daa
inc
pop
sub
jg
mov
fldt
sub
push
std
test
xor
push
je
mov
stc
aam
add
in
mov
or
fiaddl
cmpsl
push
outsl
rclb
icebp
icebp
cwtl
idivb
cmp
repz
ds
insb
sbb
adc
movsl
push
fs
fadds
inc
outsl
dec
pushf
and
cmpsl
shr
dec
movsl
stos
ret
bound
nop
fs
in
ds
jns
mov
mov
jae
sub
add
iret
pop
add
mov
movsl
xor
xor
test
dec
fistps
dec
cs
dec
sbb
stos
sbb
pop
nopw
in
das
stc
movsb
pop
scas
sbb
mov
mov
mov
add
mov
xlat
cmpsl
xchg
or
jne
cs
mov
cs
insb
or
enter
in
shlb
stos
xchg
inc
mov
hlt
orl
out
push
push
ret
or
inc
jbe
lea
popa
jns
test
adc
pop
sarb
jp
cld
lock
inc
xor
popf
scas
jp
test
push
test
movsl
pop
testb
mov
std
add
push
negl
ret
jae
rorb
push
jl
faddl
fld
cmp
sub
push
xchg
cmp
xchg
add
jl
adc
loop
pusha
lods
out
fwait
popf
dec
out
aaa
xor
outsb
mov
xchg
push
jne
int
push
mov
int
mov
je
or
sub
xor
or
adc
iret
cli
iret
loopne
jo
cmp
cltd
pop
bnd
jle
sub
push
mov
sub
shufps
pop
sbb
out
cmp
popa
jl
mov
push
test
jg
xchg
jb
lods
ss
xor
jl
push
mov
push
std
adc
aaa
outsb
mov
pop
lcall
and
mov
xchg
cwtl
inc
cmpsl
lcall
orb
mov
mov
aam
jmp
addr16
or
hlt
pop
imul
mov
inc
inc
cmpsl
or
movsl
fdivr
mov
cmp
insl
sbb
mov
lcall
rcrb
loope
out
mov
test
hlt
pop
ret
sar
ret
stos
or
cmp
xchg
fcmovu
loop
cmp
das
xor
incl
add
sbb
xchg
sarl
nop
cmpsl
push
pop
lds
dec
pop
xchg
push
in
pop
arpl
or
enter
fstps
call
sub
inc
add
xlat
sbb
cmp
arpl
or
sbb
adc
gs
sti
jne
mov
add
insb
add
mov
mov
xchg
cmovne
push
mov
lahf
out
inc
mov
lea
insb
negl
or
mov
mov
jo
jno
inc
shll
xor
and
and
cwtl
fistpll
sub
iret
cwtl
sbb
mov
mov
adc
sub
mov
or
add
icebp
je
jp
or
mov
in
test
push
ss
pop
out
mov
cmpsl
xor
dec
lret
jae
inc
xchg
sub
outsl
add
insb
ret
sub
ss
mov
pop
jg
xor
lock
sbb
dec
shrl
pop
and
fisubrl
andb
or
mov
icebp
mov
jbe
testb
mov
sbb
pusha
ret
popa
lods
fidivs
jne
pop
push
aad
mov
stos
call
add
pop
inc
inc
pop
ss
mov
popa
leave
ja
mov
hlt
mov
mov
out
shll
stos
loop
aas
lahf
jne
or
pop
pop
call
mov
scas
fadds
test
pop
sti
jbe
dec
xchg
cmp
movsl
loope
mov
call
out
daa
xorps
mov
enter
addr16
test
nop
imul
bound
mov
sub
cmp
fldt
mov
adc
add
rorl
loop
scas
cmpsb
inc
clc
cwtl
inc
xchg
int
mov
jnp
xchg
cltd
testb
push
test
sarb
fsubs
pop
out
dec
xchg
ja
enter
pop
cmp
imul
xor
cmp
xchg
or
ds
xchg
ja
fcmovbe
dec
or
bound
pop
xchg
aaa
cmc
xchg
cmp
in
leave
mov
add
rcrb
push
and
or
fucom
jnp
sti
loopne
dec
mov
xchg
negl
aad
and
add
xchg
rcll
icebp
jmp
fwait
lea
push
xchg
sub
out
mov
push
mov
and
pop
pop
lcall
popf
xchg
scas
lods
sbb
stos
or
icebp
inc
xchg
push
test
xchg
xchg
sub
addr16
xor
mov
fsubs
xor
insb
push
xchg
xchg
movsl
lahf
pop
pop
adc
imul
int
xor
pop
dec
lods
insb
cli
subb
mov
cld
es
outsl
in
movsl
outsb
inc
dec
lret
mov
sub
pusha
out
lock
movsb
test
cld
into
pop
or
scas
testl
push
rclb
push
insb
mov
sub
nopl
out
xchg
pop
cmp
rorb
out
mov
in
lds
mov
call
int3
lods
jmp
jb
test
pop
ret
adc
icebp
xor
dec
dec
xchg
push
test
and
xor
mov
clc
fisubrl
mov
dec
sbb
and
mov
ja
sbb
ja
icebp
push
xchg
fidivs
or
pop
add
inc
fwait
test
imul
inc
cmp
dec
out
lahf
cmpsl
movsb
in
jbe,pn
pop
test
mov
pusha
pop
icebp
xorb
push
iret
xor
or
push
jo
pop
lods
adc
lea
push
in
loope
stc
std
addr16
fisubrs
jecxz
lret
sub
and
jecxz
mov
hlt
inc
mov
sub
sbb
sbb
sbb
jp
fs
in
insb
lea
test
mov
cmp
xor
in
add
clc
js
outsl
imul
call
jp
fst
notl
push
xor
or
sbb
bound
push
mov
mov
ficoms
ficomps
dec
fldl
sbb
outsl
lods
pop
pop
mov
xchg
pop
hlt
xor
shll
cmpsl
lahf
ss
inc
gs
adc
and
mov
cwtl
sbb
ja
hlt
mov
cmc
pop
jecxz
xchg
lcall
and
pop
idivl
or
dec
cmp
jle
push
cmp
push
sub
mov
mov
dec
es
out
dec
subb
add
dec
xchg
dec
leave
xor
xchg
mov
cmpsl
mov
js
pop
hlt
xchg
cmp
pop
pop
or
pop
ljmp
shl
cwtl
lret
lods
iret
inc
jp
int
pop
nop
loope
fisubrs
xlat
mov
ror
lods
cmpsb
xchg
aas
mov
push
pop
cld
cmpsl
in
stos
mov
jns
cmp
dec
mov
popa
inc
insb
int3
testb
test
add
leave
push
push
mov
sbb
inc
push
sahf
cld
fwait
cmc
fsubrl
inc
jmp
loop
js
or
push
cmpsl
ljmp
push
sbb
xchg
or
outsl
mov
lock
jl
dec
js
out
lret
sub
scas
mov
xchg
jecxz
aad
test
flds
dec
xor
cmc
into
nop
and
adc
pop
sub
insb
pop
out
pop
fisttpll
xor
inc
jmp
inc
jmp
movsl
sarb
insb
sbb
or
loopne,pn
inc
xor
or
das
xor
jne
xchg
int3
pop
sbb
inc
sub
sub
movsb
out
pop
add
push
sub
orb
push
sub
fldt
iret
sbb
ds
insb
pop
icebp
ds
sub
movsl
and
fdivp
out
xchg
inc
xchg
sub
pop
mov
movsl
jg
xor
aaa
inc
hlt
test
cwtl
pop
pushf
mov
xor
repnz
xor
mov
jno
shl
out
and
jno
xchg
repnz
dec
sbb
jg
dec
xlat
decl
out
xor
cmc
inc
push
dec
je
dec
push
jg
mov
lret
iret
pop
les
lret
loope
add
dec
cmpsl
mov
and
push
jne
lcall
mov
insb
rcrl
jno
sbb
jns
mov
adc
push
in
mov
jne
mov
imul
add
fistpl
push
imul
addb
push
fs
addl
outsb
imull
xchg
sbb
or
cmp
aaa
cld
stc
popf
jno
push
scas
cmp
jl
hlt
testl
loopne
xchg
xlat
xchg
loopne
inc
insb
adc
loope
and
jo
test
addr16
and
stc
movsb
add
sahf
dec
lea
push
lea
int
iret
psllw
sub
xchg
out
xor
in
lahf
insl
ljmp
inc
jmp
xor
sbb
adc
add
jmp
test
mov
push
sbb
gs
fnstsw
mov
sub
in
sub
popa
and
je
jnp
cmc
mov
push
cmpsb
dec
xchg
rorl
dec
cmp
or
pop
gs
mov
rcll
pop
xchg
roll
ret
sub
rorb
lods
and
bound
mov
sbb
js
cs
sti
push
imul
ja
shl
lods
adc
mov
ss
ss
jle
push
push
mov
pop
cs
push
xor
mov
dec
nop
pop
pushf
mov
push
aaa
cmp
int3
ja
insb
dec
rcr
and
pop
daa
cmc
add
jecxz
shl
mov
fs
imull
sub
jecxz
pop
or
es
mov
outsb
call
inc
icebp
lods
dec
test
out
fwait
jmp
testb
inc
pop
or
mov
fdivrl
loopne
or
adc
mov
inc
mov
push
and
cmc
fwait
push
movsb
js
pushw
sbb
je
push
push
in
mov
inc
adc
cmpsl
sahf
in
inc
mov
pop
lret
mov
add
pop
aaa
movsb
cmpsl
xchg
lock
stc
inc
sbb
xor
cld
dec
cmp
jo
xchg
popa
push
pop
ret
sbb
inc
fistl
insb
cmpb
fwait
sbb
hlt
rcll
cmpsl
stos
in
stos
pop
lods
and
sbb
xlat
mov
sbb
sarl
fs
xor
dec
jbe
mov
stc
adc
orl
aas
outsl
mov
push
xor
mov
pop
test
xchg
jmp
mov
cmpsb
pushf
lret
repz
sub
lock
fwait
in
pop
mov
jg
jge
out
dec
shlb
cs
and
inc
cmpsb
mov
sub
lret
fmull
ja
scas
sub
ljmp
aad
or
cli
jo
out
loopne
mov
mov
cmp
dec
xor
lods
add
mov
dec
xchg
movsl
pop
int3
aas
mov
xchg
jns
mov
mov
insl
in
in
jnp
fisttpll
dec
jo
cmp
sub
aad
pop
mov
sbb
insb
add
gs
sahf
test
in
repnz
rcr
js
aas
xchg
mov
inc
cmp
out
leave
bnd
jns
iret
sub
lret
stc
sub
je
shlb
sbb
cmp
int
jge
mov
dec
pop
jne
mov
mov
xchg
adc
xchg
aam
push
mov
or
mov
sbb
adc
or
leave
pop
or
jp
stos
js
sbbl
mov
cmpsb
fimull
nop
mov
fcoms
fsts
leave
fldcw
test
push
pop
pop
xor
out
adc
fsubl
and
cmp
xor
xor
fnstcw
out
mov
adc
push
push
mov
movsl
fwait
leave
test
jle
and
or
xor
mov
mov
mov
push
fimuls
loopne
sbb
mov
or
sub
popf
pop
xor
arpl
inc
pop
mov
xorb
orb
xchg
dec
jecxz
data16
mov
cwtl
into
out
jno
push
add
lret
pusha
jae
movl
loopne
psubusb
gs
and
mov
inc
movsl
or
mov
pushf
mov
adc
dec
or
sub
in
xchg
push
push
mov
pop
add
xchg
inc
test
cld
pop
nop
sbb
pop
push
shr
xchg
mov
loopne
mov
daa
or
shll
lods
adc
xor
scas
stos
sub
shrl
cmpsl
jecxz
sub
jecxz
shrl
mov
icebp
aad
mov
mov
out
pop
cmc
fisttps
dec
cltd
repz
or
icebp
inc
sbb
xor
push
shlb
sub
mov
hlt
clc
mulb
xor
repz
jb
es
xor
sbb
insl
cmp
sub
push
mov
mov
arpl
add
mov
mov
dec
pop
or
push
mov
mov
sbb
sarb
into
mov
xor
sub
xchg
ret
jmp
sub
fiaddl
cmpsb
loopne
scas
inc
sub
insl
adc
pushf
lods
cltd
bound
cmc
jbe
inc
pop
adc
mov
faddp
aas
xchg
xchg
imul
dec
push
out
fidivrl
sti
ds
jp
in
jle
mov
arpl
mov
pop
in
dec
sbb
push
inc
subl
insl
cs
add
xchg
adc
int
test
pop
mov
xchg
insl
fidivs
sti
xor
cmp
adc
inc
push
cld
xchg
sbb
mov
inc
imulb
pop
daa
jo
arpl
mov
inc
or
cmp
mov
dec
pop
jnp
and
jge
gs
and
pop
punpckhbw
and
cmp
mov
xlat
lock
jp
and
into
sbb
jne
sbb
lds
mov
sarb
das
test
insl
push
xor
les
aad
mov
imul
pop
sarl
fcomps
mov
pop
hlt
adc
bound
ds
in
sub
pop
sbb
loopne
and
dec
data16
clc
negl
out
pop
jnp
fnstsw
scas
or
inc
nop
mov
cltd
aam
sti
push
push
xor
data16
test
insl
stos
sub
out
es
jne
fiaddl
test
jge
xchg
xchg
ficompl
mov
repz
pop
jge
in
movsl
mov
dec
repnz
cmp
mov
mov
test
std
cmpsl
and
cmc
jecxz
sub
movsb
addr16
movsl
ret
add
loopne
cltd
or
or
xchg
lcall
mov
mov
pusha
cmp
ja
shlb
lret
cwtl
ss
mov
sub
adc
or
push
movl
or
inc
fimull
in
inc
cld
xchg
cmp
test
ret
jge
call
jnp
add
or
imul
negb
loope
aaa
adc
and
xor
insb
adc
sbb
mov
shlb
aas
movsb
fs
xchg
movsb
out
int3
sti
adcl
push
adc
aaa
cmp
mov
rorb
notl
out
in
mov
cmp
xchg
push
mov
cmp
in
and
repz
cmp
push
in
jge
frndint
mov
lahf
js
js
dec
xchg
push
test
icebp
ja
cmp
xchg
sub
adc
ret
shrl
adc
push
xchg
pop
stos
and
sbb
iret
loope
clc
pushf
fmulp
xor
add
inc
loop
inc
sub
pop
jg
daa
cmp
lods
out
rolb
outsl
test
cli
push
mov
mov
mov
dec
bound
push
les
mov
xor
dec
jl
rcr
loope
xor
mov
jg
jl
mov
icebp
fimull
add
iret
or
popa
lea
sbb
and
mov
cs
add
xchg
sub
pop
hlt
xchg
xchg
pop
inc
adc
cld
fisubrs
shlb
js
add
test
ja
push
in
repz
jmp
int
lods
pop
add
int
rorl
and
outsb
aad
out
in
adc
pop
mov
repnz
idivb
jbe
cmpsb
and
mov
inc
cmp
jl
add
in
sbbb
or
jmp
pop
es
mul
pop
aam
adc
loope,pt
std
mov
adc
adc
test
cmp
xor
mov
negb
imul
jmp
adc
sarb
sbb
inc
adc
out
dec
push
jns
or
andl
xchg
frstor
mov
sbb
jp
pop
add
mov
dec
int
ficompl
mov
add
pop
popf
sarb
cmp
mov
lods
stos
mov
sub
dec
push
lods
call
movsl
dec
dec
enter
lahf
cmpsl
push
lret
sub
mov
jne
ret
test
sbb
es
ljmp
jns
out
lea
cmp
sub
add
cltd
xchg
dec
add
cmp
mov
jecxz
or
mov
lret
jmp
jmp
imull
outsl
add
ja
sub
cld
rorb
repz
hlt
pop
lods
jo
pop
daa
pop
adc
xor
mov
lods
lods
jae
pop
dec
mulb
repz
pop
pop
js
test
cmp
pop
roll
sti
mov
add
es
jnp
imul
add
push
pop
mov
enter
mov
xchg
push
mov
mov
cs
mov
add
cmp
call
mov
stos
sbb
add
lret
dec
xor
push
stos
in
enter
movb
je
adc
lret
fs
mov
sbb
cmpsb
add
pop
add
sbb
push
sub
jecxz
mov
jg
add
mov
jae
and
mov
adc
loop
loop
inc
test
pushf
xor
push
dec
ljmp
test
cmp
add
xchg
sete
cld
jbe
xchg
add
psraw
sbb
leave
adc
jecxz
xchg
lds
pop
xchg
jbe
lods
unpcklps
dec
mov
out
ret
nop
mov
and
adc
mov
xor
in
or
pusha
jne
dec
leave
cltd
fs
mov
shr
mov
inc
xchg
push
clc
inc
xchg
scas
sahf
fwait
popf
fstps
jno
into
xchg
pop
test
push
fnstcw
jg
sahf
into
and
hlt
cmpsb
mov
loopne
loopne
adc
sbb
jle
add
test
popa
leave
popf
jmp
test
xchg
mov
jp
imul
mov
nop
mov
sub
scas
mov
pop
sub
movsl
stc
sub
cmpsl
pop
lahf
sbb
and
arpl
xorb
xchg
sarl
jmp
daa
js
xchg
pop
imul
mov
dec
in
or
js
mov
cmp
ss
sarl
test
idivb
pusha
mov
out
mov
sahf
pushf
sahf
cmpsl
mov
xchg
je
shll
pop
test
xchg
sbb
xlat
cmp
xchg
push
shll
cli
push
pop
rcl
mov
mov
pop
jmp
xlat
inc
sti
in
push
cmp
incb
mov
mov
jp
loop
xchg
sbb
or
mov
push
mov
mov
mov
mov
pop
lahf
sub
inc
lds
push
jno
lea
cs
xchg
cmp
inc
pop
mov
lahf
sbb
cmp
xchg
mov
cmp
jns
add
shll
movsl
sahf
xor
add
mov
hlt
sbb
jbe
clc
lcall
test
cmp
stc
and
fdiv
cltd
mov
sbb
sti
pop
xor
js
ljmp
pushf
sti
clc
cmp
loopne
or
cli
push
xchg
mov
mov
roll
sbb
lods
jbe
sbb
mov
xor
ret
outsl
sub
jg
inc
icebp
insl
insb
jae
insl
xsave
and
ret
xorb
push
in
out
add
pop
sbb
mov
jle
push
std
dec
cmpl
js
sbb
mov
xchg
out
pop
pop
mov
lcall
ret
or
fcomps
fs
mov
decl
repnz
lods
loope
jg
out
je
cmp
stos
cltd
add
add
pop
loope
mov
in
ljmp
gs
sbb
nop
xchg
dec
outsb
inc
pop
imul
dec
pop
aam
lock
imul
xchg
mov
test
cmp
and
div
aaa
cmp
push
js
outsl
xchg
lock
xor
xchg
add
mov
lcall
fs
repz
es
add
cmp
dec
aaa
imul
or
fisubs
push
sub
push
cmp
sbb
ja
jle
dec
rorb
mov
mov
add
pusha
fidivrs
mov
xchg
add
cs
inc
in
push
xchg
jmp
pop
sbb
insl
sub
sbb
push
sbb
xor
sbb
jp
fnstsw
into
vmwrite
orb
sbb
jo
inc
mov
adc
add
hlt
mov
sahf
push
in
test
pop
add
xchg
aam
push
movsl
movsl
fnstenv
push
push
shl
mov
and
and
fstpl
rorb
cmp
aad
cmovb
aam
daa
dec
adc
xor
int3
cltd
ss
test
data16
and
lahf
push
xchg
sbb
sbb
pop
sbb
push
sbb
popf
popf
sub
fcmovb
xor
insl
add
and
cmp
jp
fsubl
sub
sbb
scas
arpl
sub
clc
test
xchg
movsl
push
ds
aaa
cmp
test
test
mov
pop
insl
mov
xchg
xor
in
insl
or
pushaw
dec
test
pop
xor
dec
imul
lds
add
xor
lahf
lret
mov
mov
lods
mov
dec
in
inc
out
xlat
out
pop
cli
dec
mov
das
nop
out
orb
pop
push
jne
aam
or
xchg
cmp
cmp
xchg
jne
sub
pop
sbb
and
jne
out
xchg
jge
adc
aam
sub
mov
lock
insb
in
pushf
test
test
push
or
or
mov
hlt
aaa
insl
jg
ljmp
mov
pop
mov
mov
adc
inc
xchg
sti
pop
lret
rcrb
jge
mov
aaa
push
mov
testb
mov
pop
jbe
fistps
aad
rcrl
sbb
sbb
cmpsl
xor
lods
movsl
inc
scas
icebp
add
sahf
lds
lds
jno
popf
fwait
cld
cmp
xchg
out
popa
mov
xor
mov
mov
in
mov
int
je
add
loopne
jg
xor
or
xor
push
into
in
push
test
jmp
mov
loope
inc
enterw
movsl
cmp
aad
int3
inc
aas
mov
push
pop
fidivl
addb
mov
jge
xchg
out
adc
mov
pop
push
in
js
add
decb
notl
test
pop
sub
mov
fiadds
xchg
out
dec
out
push
sbb
pop
push
das
arpl
cld
outsl
mov
xor
pop
pop
and
cmc
loop
in
iret
and
push
mov
push
lea
lret
in
aas
cltd
mov
xor
dec
insb
fucomi
inc
mov
lcall
adc
imul
sub
xchg
cmpsl
jo
mov
sti
out
shlb
sarb
adc
cltd
fwait
push
or
jp
jp
sub
out
push
jge
inc
jne
mov
sub
cmpsl
xchg
ljmp
ljmp
jb
ja
push
pusha
aad
sub
js
sub
subb
out
mov
lock
ljmp
or
rep
xor
or
xor
jmpw
rorl
jbe
cs
fldenv
mov
pop
orl
faddl
pusha
and
lods
arpl
shlb
sub
cmp
psrlw
cmp
and
test
push
mov
mov
test
dec
test
or
jb
out
fbstp
mov
std
cmp
sbb
lret
jge
and
fs
sub
xchg
mull
ret
test
test
mov
insb
mov
cld
inc
dec
sbb
cld
sbb
mov
dec
cld
sub
cli
hlt
ss
jno
inc
mov
cmp
mov
aam
pop
lret
test
imul
push
jns
and
sarb
movb
scas
push
cltd
call
pop
fwait
vunpcklps
inc
lds
fsubrl
mov
sahf
lods
in
jl
pushf
mov
out
push
and
pop
mov
xchg
and
ret
xchg
and
xchg
ret
data16
jecxz
jl
and
push
or
bound
mov
in
ja
xlat
ja
jae
mov
xchg
test
shl
pop
insl
pop
addr16
dec
jle
lret
inc
push
leave
dec
cmp
fcmovnbe
fsubl
xlat
mov
jmp
xchg
and
xchg
jge
inc
int
adc
jno
icebp
xchg
cwtl
stc
jbe
movsl
jp
xor
jo
and
lcallw
dec
xor
push
in
cmp
test
dec
mov
jbe
xlat
loope
or
mov
add
jp,pt
inc
andl
outsb
fstpl
mov
mov
test
pop
scas
adc
repnz
pop
or
push
pop
gs
ror
adc
cmp
push
lods
mov
int
bound
jb
mov
ficoml
sbb
lret
jecxz
pop
inc
out
or
call
and
adc
mov
add
pusha
gs
repz
jbe
leavew
mov
ja
cmpl
hlt
push
imul
out
mov
fisttps
mov
popa
xor
and
cli
jge
cmp
xor
les
arpl
jle
or
add
out
aad
pop
cmp
pop
test
insl
mov
mov
adc
aam
mov
jne
dec
in
inc
imul
inc
out
into
mov
cmp
sbb
mov
sbb
sbb
mov
aam
and
mov
jg
dec
jnp
cmpsb
add
mov
jmp
in
aaa
pop
adc
jbe
mov
mov
mov
push
add
add
or
cmp
dec
add
ss
inc
rep
gs
jecxz
pop
adc
adc
inc
lea
jp
call
mov
fimull
jb
sbb
push
bnd
cmp
je
dec
add
or
push
xor
or
add
mov
movsl
mov
js
inc
rolb
mov
mov
pop
lret
movsl
bound
aaa
mov
pop
mov
pop
xchg
or
cmp
in
sbbl
outsl
call
leave
jo
jbe
stc
cwtl
int3
sub
lods
sbbb
push
push
cld
out
mov
xchg
loop
mov
lret
lahf
in
xchg
mov
loopne
mov
jecxz
push
dec
cmp
sub
mov
push
cltd
out
sub
rcrl
mov
push
aas
jmp
mov
sahf
inc
pusha
jae
lcall
mov
mov
loopne
push
jg
cli
dec
inc
enter
pop
mov
call
push
clc
jnp
lahf
mov
sbb
pushf
test
lahf
or
mov
jns
dec
ds
int
sbb
pop
nop
mov
and
sub
pop
gs
jmp
out
scas
cmp
sbb
addr16
sub
cmp
fs
dec
and
rcr
sub
idivl
adc
or
pop
hlt
ret
pusha
mov
xchg
mov
and
rcll
jle
rol
add
test
jns
jne
sub
cmc
pop
mov
jo
das
mov
sbb
in
adc
aaa
push
xor
aaa
cltd
sbb
lods
xor
jl
dec
inc
pushf
cltd
jl
xlat
jbe
mov
hlt
in
push
ret
fsubr
and
mov
in
aad
mov
scas
insl
pushf
adc
into
fst
xor
adcl
sbb
repnz
or
lret
jae
push
ljmp
xor
jne
push
or
rorl
daa
inc
lret
popf
mov
cmp
stos
jb
and
cwtl
imul
inc
test
daa
jae
test
inc
cld
int3
dec
mov
push
nop
add
incl
imul
mov
add
pop
out
leave
rorb
adc
addb
out
jmp
cmp
cli
dec
inc
scas
in
add
cmp
jecxz
mov
jns
fbld
dec
adc
add
xor
rcrb
sub
mov
popa
in
jae
pop
clc
push
ret
jb
aas
lock
jle
test
call
push
popa
aad
push
xor
mov
scas
sub
dec
jl
popa
aaa
or
mov
xchg
fimull
rcrb
flds
pop
mov
jno
push
and
xchg
and
cmp
adc
pop
pop
sbb
fdivrp
lahf
adcb
cmp
in
call
cmp
push
pop
das
decb
repnz
sti
enter
jp
mov
jge
cmp
pop
sub
mov
xchg
data16
jl
jg
xchg
mov
dec
into
shlb
mov
cli
clc
aaa
sbb
popa
fwait
sub
adc
mov
xor
jecxz
stos
sbb
inc
mov
sbb
sub
push
sti
lcall
fdivrl
sbb
lock
sahf
je
dec
sbb
shll
pop
cmp
pop
or
xor
xchg
insb
lds
ficoml
cmpxchg
stos
xchg
mov
jns
lret
std
aad
jnp
mov
sbb
fistpll
sub
rorl
movsl
and
or
pop
or
jle
xchg
add
shrl
mov
or
sahf
lret
sub
lods
data16
jp
je
push
adc
push
mov
out
sub
scas
sub
lock
xchg
out
fxch
push
push
pmuludq
icebp
ljmp
sbb
and
shlb
fildl
jg
adc
push
lds
jne
jge
mov
insb
aas
mov
icebp
xchg
jbe
cmp
cmp
inc
cwtl
fs
insl
into
pop
rorl
jbe
push
push
sarl
cld
lds
cmpsl
mov
in
or
popf
cld
iret
xchg
adc
lcall
hlt
inc
pop
lahf
in
insl
mov
adc
xor
inc
sbb
rorl
test
insl
insl
pop
jmp
imul
sub
divb
pop
insl
cli
frndint
rclb
hlt
and
mov
sbb
enter
filds
cmp
fs
sti
fistpl
sbb
sbb
cmc
pop
fadd
mov
xchg
push
pop
cmp
mov
cmp
dec
add
sub
imulb
push
insb
xor
pop
nop
ljmp
addr16
sub
push
mov
jns
sbb
add
inc
inc
pop
cmp
push
repnz
movsb
push
mov
xchg
pushf
sbb
mov
inc
sub
mov
jecxz
jg
adc
pop
into
push
ss
cmp
js
in
data16
fstps
jp
call
sbb
inc
add
inc
rcrb
outsl
ret
es
ljmp
cwtl
sbb
pusha
negb
inc
fwait
push
andb
mov
or
fstpt
imul
xchg
stos
mov
mov
inc
flds
movsl
push
pop
cmpsl
into
fs
mov
pop
movsb
add
and
mov
push
ret
dec
xchg
shlb
or
cld
jmp
and
enter
pusha
popf
scas
jae
scas
jge
inc
scas
out
mov
fcomp
bound
pop
mov
sub
rclb
mov
insl
xor
in
adc
xor
stc
fists
sbb
loope
adc
mov
lahf
int3
jmp
cmp
and
or
mov
sub
adcl
push
mov
push
add
mov
dec
xlat
and
subb
inc
lret
iret
push
ljmp
push
add
or
xor
jo
pusha
mov
cmp
xlat
or
jmp
in
lea
cltd
daa
mov
jl
mov
cmp
lds
xorl
adc
cmpsl
jne
adcb
or
and
lock
lods
icebp
add
negb
xchg
lock
xor
xchg
mov
sub
sub
imul
mov
mov
ret
dec
xor
jl
xor
pop
int
lcall
repz
push
stos
subb
js
adc
lret
mov
icebp
mov
nop
ss
lahf
out
and
adc
fistpl
dec
xchg
loope
xchg
repnz
adc
sbb
mov
cmp
es
sbb
lock
test
jbe
xchg
pusha
dec
push
sti
sbb
cli
mov
push
xor
lods
cld
inc
std
das
or
mov
cmp
jbe
sub
arpl
fisubrs
pusha
pop
addr16
and
inc
dec
cld
inc
add
xor
add
mov
shlb
mov
rorl
jnp
xchg
or
mov
sub
popf
in
jb
xor
xchg
pop
sub
test
push
out
jecxz
into
adc
adc
orl
or
in
cmc
pusha
sub
in
mov
dec
mov
popa
jmp
dec
adc
ret
pushf
mov
test
adc
mov
push
inc
inc
cli
aam
shll
xor
mov
cltd
iret
pop
adc
push
test
enter
or
fsub
inc
ja
xchg
mov
mov
jp
cmp
cmpsl
jo
xchg
pop
dec
push
lock
xor
sbb
movsl
mov
sbb
push
add
lret
lea
lcall
cmp
mov
push
adc
jo
bound
shll
and
jmp
jns
pop
ret
and
inc
fadd
jp
and
jp
xor
pushf
sbb
insb
or
push
or
mov
sbb
adc
dec
cmc
pop
xchg
xorl
cmpsl
dec
cli
arpl
jo
daa
mov
dec
xchg
cmp
je
xchg
cli
ficoms
sub
stos
fcmovnb
push
in
aaa
movsb
cmc
test
ja
jg
cmp
pusha
jb
cwtl
and
pop
sbbb
xchg
mov
fldcw
sbb
cmp
jp
add
cmp
push
mov
mov
notl
jecxz
dec
inc
sbb
mov
fstps
repz
xlat
mov
mov
je
xchg
cli
jp
imulb
fwait
test
mov
scas
push
push
mov
insb
loope
pop
fdivr
or
and
repnz
pop
push
rcrb
xlat
xor
push
xchg
in
scas
incl
mov
pop
sbb
jbe
xorb
vpshlb
cmpsl
popa
jge
jo
fstl
sub
cmpsw
in
repz
add
scas
sti
das
cmc
sbb
dec
sub
xchg
mov
rclb
leave
and
mov
mov
movsb
cwtl
arpl
pop
sarb
mov
inc
and
pop
mov
js
sbb
cld
repz
idiv
jbe
adc
cmpsb
js
dec
into
dec
popf
jo
fcmovb
adc
mov
push
mov
andb
fiadds
test
and
rcr
cmp
movsl
add
ss
roll
inc
ja
inc
add
push
xor
jne
and
fldcw
dec
and
jae
lfs
cmp
lock
test
in
jmp
push
scas
cmp
mov
mov
inc
cmpsl
cmpsl
mov
pop
fwait
xor
test
rcll
stc
sub
jle
call
inc
iret
movsl
dec
adc
mov
stc
or
and
mull
cld
fisttps
repz
sbb
loopne
sub
test
lods
add
fstpt
lds
inc
arpl
jg
mov
sub
rolb
stos
scas
add
pushf
push
fldenv
cli
mov
mov
adc
imul
push
imul
sub
adc
cmp
xchg
add
pop
jecxz
lret
rolb
adc
mov
push
ss
ror
mov
shl
jmp
je
cwtl
pop
fdivs
pop
push
mov
into
jecxz
xor
scas
ret
xchg
leave
xor
mov
cmp
popa
cmpsb
out
enter
lret
movsl
jne
and
sub
push
dec
cmp
mov
cmpl
jo
cltd
xor
inc
sbb
dec
sbb
pop
loopne
pushf
jl
add
mov
mov
xchg
lds
clc
fldl
adc
jl
lods
sub
ds
jp
xor
aam
fcoms
sbb
jp
idiv
xor
arpl
cs
sub
fstpt
cli
jns
rol
aad
rolb
sub
test
push
add
rolb
or
mov
stos
jb
popa
adc
jns
gs
fists
stos
scas
or
pop
out
push
push
pop
loope
das
lcall
adc
js
xor
pushf
fbld
inc
or
push
adc
std
in
pop
fstps
icebp
mov
inc
imul
dec
fdivrp
jmp
add
xchg
sbb
jp
loopne
sbb
insl
mov
stos
inc
fldcw
fcmovne
pusha
adc
rcrl
xchg
lcall
mov
fadd
sbb
pop
mov
aam
popa
inc
cwtl
mov
cli
xchg
lea
cmp
das
out
cmp
or
jae
dec
arpl
arpl
adc
inc
dec
lret
mov
ret
push
jne
cmp
sbb
cmpsl
add
push
cld
pop
xchg
dec
dec
cld
test
push
sub
out
andl
fnstcw
dec
aam
lcall
ret
mov
sub
add
dec
movnti
jo
inc
cmp
std
aam
aaa
sahf
xor
cmp
cmpsb
xor
or
mov
push
popf
stos
lret
stos
push
xchg
jle
into
mov
imul
test
inc
and
push
or
lcall
getsec
lret
aas
mov
je
mov
inc
xor
adc
pop
mov
sub
movsl
lods
lea
and
bound
jns
ror
lcall
scas
enter
xor
sub
add
jp
push
mov
cmpb
pop
and
sbb
sub
sub
shlb
dec
in
or
stos
into
mov
mov
movsb
aam
cmpsl
jg
or
in
adc
fnstsw
add
lds
adc
gs
shl
mov
sub
dec
sbb
bound
sbb
pop
adc
test
das
sbb
push
loop
fwait
adc
movsb
sub
dec
mov
mov
movsb
xchg
fcom
outsl
mov
bound
xor
and
mov
call
sub
lahf
mov
testl
mov
push
movsl
adc
mov
test
push
addb
xchg
mov
mov
push
daa
mov
les
mov
es
lea
or
cmp
fldt
adc
adc
adc
and
fwait
sbb
adc
icebp
sbb
xor
movsl
ret
adcb
cmp
out
pop
repz
out
sti
js
mov
sub
cli
fwait
enter
fadd
jmp
sbb
rorb
jbe
dec
push
shrb
sbb
pop
insl
pop
xchg
fiaddl
pop
es
mov
repnz
xlat
push
lea
jl
out
xchg
and
das
sahf
clc
arpl
cld
les
sub
push
jns
fbstp
lret
or
sarl
imul
pop
repnz
das
add
sti
pop
jns
mov
adc
or
xor
mov
mov
add
pop
push
sahf
jp
cmp
fimull
inc
dec
inc
mov
adc
addl
dec
in
mov
dec
add
xchg
int
lods
and
xchg
jnp
push
push
lcall
jl
cmp
pop
cmpsb
mov
jne
fdivl
jmp
inc
xchg
pop
cmp
stos
scas
frstor
lock
pusha
test
popf
dec
sti
repnz
rcl
and
in
jbe
add
roll
ljmp
mov
or
mov
dec
xchg
add
stos
push
push
cltd
in
shlb
repz
lods
and
test
addr16
flds
bound
lods
stos
sub
stc
bound
fdivs
push
pop
js
iret
dec
xchg
mov
ret
sub
inc
cs
sti
and
lcall
pop
rol
inc
add
cmpsb
jge
icebp
jp
jno
and
mov
sub
add
pop
fsubs
dec
scas
adc
mov
ret
lods
out
popf
lock
cltd
cmp
iret
mov
gs
mov
adc
xor
adc
xchg
jmp
cltd
lods
jno
aaa
lock
bound
jno
fldcw
and
shlb
pop
cmp
mov
pop
xchg
mov
cwtl
add
sbb
push
add
add
jnp
fcompl
divb
sahf
repz
xor
mov
insl
mov
fsubr
mov
sub
and
adc
jbe
xchg
pushf
notb
pop
mov
fisttpll
sbb
mov
inc
lcall
rolb
dec
dec
mov
scas
mov
inc
dec
into
out
fisubrl
out
cmp
cmpsb
mov
fistpll
flds
xchg
sub
push
jge
popa
sub
popa
mov
pop
mov
push
lcall
in
sub
inc
in
xchg
movl
ds
push
outsb
push
enter
inc
cmp
out
mov
cmp
xchg
and
movsl
outsl
iret
pusha
movsl
pop
mov
dec
cmp
and
jl
fwait
xchg
and
pop
jns
ret
test
jmp
pop
mov
aam
lret
jne
pusha
mov
test
cltd
dec
sahf
inc
hlt
push
out
mov
push
insb
xchg
popa
sbb
xor
or
mov
sahf
mov
mov
mov
aaa
xor
outsl
ds
add
lock
orb
push
stc
push
data16
xor
fdivl
cli
pusha
lods
loope
mov
and
rcll
sti
cld
dec
imul
cltd
stos
push
xor
mov
sub
imul
pushf
js
mov
jp
enter
adc
inc
xor
es
out
ja
test
daa
fs
jge
int3
mov
shll
fsubl
push
sti
fstpt
mov
pop
mov
jnp
test
mov
fistl
xchg
iret
fidivs
push
push
nopl
enter
mov
mov
mov
jno
dec
or
popf
cmp
jl
sbb
sub
inc
adc
xor
in
aas
popa
lret
jns
sub
cmp
mov
pop
mov
ret
xor
pop
pop
lods
or
int3
ss
sbb
mov
notl
mov
repz
dec
pop
ret
std
push
cmp
push
mov
das
push
idivl
mov
pusha
lret
sub
rorl
pop
push
sbb
fwait
aad
insl
adc
inc
xchg
pop
fisttps
dec
test
mov
ret
data16
pop
movsl
shll
cmp
loopne
mov
test
in
push
stos
pop
jno
push
sbb
xchg
loope
mov
mov
sub
and
in
dec
in
pop
dec
jns
add
sub
lock
ror
push
out
into
mov
sbb
or
xchg
hlt
sbb
loope
repz
fimull
std
jge
in
cmp
dec
aad
jne
pushf
cmp
push
jmp
ret
pushf
mov
adc
add
sub
repnz
pop
movsb
mov
outsl
or
inc
es
xor
cltd
js
mov
add
mov
mov
inc
das
iret
cmp
or
and
mov
shl
xchg
repz
gs
xchg
lcall
test
andl
xor
cmp
lret
and
jmp
out
mov
fsubrs
cmp
popa
jmp
xchg
mov
pop
int
pop
inc
into
jle
pop
adc
and
mov
xor
mov
arpl
add
push
fcoms
decb
stc
iret
rol
xor
imul
jmp
inc
shl
or
mov
sbb
dec
inc
inc
ljmp
push
hlt
jle
sbb
cld
add
setle
dec
lods
aam
mov
sbb
pop
lods
fsubrl
mov
icebp
adc
out
aam
push
or
jno
cmp
and
addr16
jno
imul
pusha
imul
or
sbb
and
sbb
sbb
dec
sub
fs
push
and
adc
inc
clc
and
dec
mov
stos
enter
shlb
loop
dec
or
pop
leave
repnz
repz
dec
imul
add
xor
cmc
test
xor
repz
loop
cmpsl
lret
jns
sub
inc
pop
lcall
xchg
aas
push
jo
adc
mov
loope
xchg
lret
pop
xor
dec
dec
xorb
sub
pop
sub
daa
xchg
fwait
push
lahf
xchg
mov
or
pop
pop
or
ret
push
aaa
arpl
mov
sti
mov
ss
test
sub
jae
fisubs
insb
shr
inc
sbb
in
bound
xchg
scas
add
cmp
sbb
pushl
popa
loop
jae
inc
sahf
js
xor
push
ret
inc
cs
fstps
cmp
scas
mov
push
xor
jae
enter
pop
in
inc
sub
testb
add
push
test
mov
pop
xchg
jp
popf
imul
sbb
mov
mov
xchg
inc
inc
shlb
mov
arpl
out
ja
xchg
inc
loope
cs
ds
shll
add
std
push
dec
sub
jp
push
sbb
jnp
and
pusha
xchg
xor
jge
decl
xchg
push
and
mov
mov
fstps
pop
or
mov
adc
out
sbb
inc
ljmp
leave
adc
mov
lcall
ror
outsb
jl
mov
movsb
scas
aad
inc
leave
test
mov
lods
xchg
daa
lds
cmc
pop
mov
add
xchg
cltd
jle
movsl
stos
jmp
loop
dec
mov
leave
fstl
push
mov
mov
js
cwtl
dec
out
pop
leave
cmpsb
orb
jl
xor
arpl
dec
orb
inc
and
jecxz
inc
mov
sbb
xchg
mov
inc
and
jne
fsubrl
and
fstl
mov
ss
out
fcoml
stos
ret
inc
int
jp
adcb
jb
pop
push
xchg
nop
pop
pop
fs
lcall
sbb
xor
pop
cwtl
popa
test
lret
sub
push
ds
clc
lret
mov
jbe
mov
sub
rorl
inc
cmpsl
pop
cmp
or
xor
pop
bnd
repz
jb
pusha
in
scas
xchg
adc
xor
das
xchg
mov
sti
aas
adc
sbb
jg
inc
push
subb
mov
mov
aam
lock
xor
jne
push
stos
jmp
jns
int3
adc
icebp
fsubl
xor
or
sbb
pushf
cmp
mov
pop
dec
jg
dec
push
sbb
sub
lea
cmp
jb
push
test
jge
push
bound
inc
andb
arpl
mull
sub
les
xchg
imul
mov
mov
jge
pop
ss
add
and
dec
push
mov
lret
leave
mov
push
dec
add
aaa
icebp
mov
mov
inc
xchg
and
jecxz
sbb
mov
push
mov
jecxz
test
aas
lea
std
adc
xchg
sub
pop
aaa
mov
out
mov
int3
add
fisubl
sub
in
es
inc
outsb
enter
push
movsl
test
divb
xor
addr16
push
jge
ffree
outsl
mov
scas
into
aas
pop
jp
jg
add
mov
pushf
inc
mov
in
dec
imul
fldenv
xor
jl
and
outsb
rcrb
mov
ss
xor
add
push
mov
lock
lea
sbb
jg
popf
ficompl
std
sbb
jp
sbbl
clc
jl
rol
dec
inc
imul
and
cmp
sbb
jl
mov
dec
rorl
xchg
mov
es
mov
push
out
daa
out
pop
or
cmp
jb
lds
push
jle
out
fisubl
mov
pop
pop
scas
gs
add
push
push
cmp
lea
imul
mov
add
cmpsl
mov
push
hlt
rcrb
dec
js
clc
sub
mov
es
sbb
pop
aam
push
mov
xor
xchg
movl
stc
std
arpl
dec
lcall
jg
inc
lret
push
dec
inc
std
sahf
xchg
scas
jb
cld
out
xor
and
out
xor
stc
sub
xchg
mov
outsb
dec
sub
mov
cwtl
jne
std
mov
inc
pop
dec
add
mov
jno
sbb
lahf
movlps
shrl
mov
repnz
lds
outsl
push
xchg
xor
fdivl
inc
mov
decb
lcall
popf
cld
je
sahf
dec
out
fwait
push
mov
xchg
shlb
rcrb
pop
pop
inc
test
mov
sbb
cmpsb
or
xchg
jbe
adc
mov
leave
mov
xor
std
aam
dec
fistpl
jae
mov
mov
adc
lock
cmp
dec
ficoml
testl
std
lea
jbe
jmp
ljmp
dec
mov
rep
stc
mov
add
aad
and
or
cmp
in
js
sub
insb
push
xor
icebp
mov
sbb
inc
imul
pushl
rcll
mov
sti
mov
cmp
int
jo
jae
xor
dec
inc
dec
mov
hlt
pop
push
mov
jb
add
dec
mov
mov
xchg
mov
push
rcrb
pop
sbb
mov
repnz
jecxz
aaa
sub
inc
orb
push
outsb
mov
xchg
adc
in
vshufps
test
push
and
jb
fs
mov
mov
cmp
xor
sub
shlb
inc
xchg
enter
jnp
mov
sahf
mov
push
insb
stos
fldt
popf
sbb
pop
ret
dec
orb
mov
jecxz
pop
inc
xor
inc
add
jne
scas
cmp
ret
fildll
push
fimull
popf
push
jns
cs
ror
cmpsl
and
lea
pop
andl
popf
lret
popa
push
add
int3
cs
es
popa
push
ja
lods
aad
push
adc
adc
fistps
inc
sbb
call
sub
pop
in
xchg
mov
ds
mov
in
dec
pop
cmp
lcall
call
mov
mov
outsl
dec
push
sbb
push
xor
cli
xor
push
inc
insb
bound
mov
dec
test
in
sub
sbb
sub
inc
pop
or
cmp
push
jle
lods
and
popf
add
mov
sbbl
and
movsl
out
adc
dec
pop
xor
xchg
mov
in
popa
sar
xlat
dec
push
push
filds
loopne
jl
push
out
adc
adc
and
adcb
mov
and
adc
scas
pusha
aam
push
pop
pusha
lods
je
mov
mov
rcl
sub
jmp
xchg
imul
lea
xchg
push
and
xchg
movsl
mov
sub
js
lock
or
div
jne
daa
stc
cld
dec
jo
shll
dec
sbb
dec
or
add
inc
adc
mov
mov
cmp
add
adc
cmp
sarb
cmpl
mov
out
cmpsb
adc
jno
fistps
mov
pop
in
and
ud0
cmp
push
xor
cmp
dec
inc
or
dec
daa
repnz
xchg
jbe
pusha
mov
pop
popf
negb
scas
cli
andb
jecxz
dec
out
cmc
or
pushf
paddb
cmp
sbb
add
mov
cmp
jl
xchg
cmp
adc
js
adc
xchg
ds
push
and
in
data16
aas
movsl
testl
mov
and
test
sbb
in
mov
pop
bound
mov
outsb
xor
nop
mov
xchg
xor
addr16
xor
shr
mov
pop
hlt
mov
into
nop
lahf
or
loop
fistpll
int3
outsl
push
int
ss
push
or
aaa
dec
lret
mov
rol
mov
loopne
and
ret
ret
push
xor
xor
fcomps
inc
lock
sbb
and
mov
mov
mov
xchg
xor
or
push
add
jle
cmc
fidivl
fs
adc
jb
pop
movsl
aad
fildl
xor
addr16
lret
sbbb
sarb
mov
sbb
sbb
cmp
sar
sub
repz
lret
clc
pop
hlt
mov
jecxz
scas
lahf
xor
pop
rcrl
cmpsb
pop
loopne
jecxz
sub
adc
cltd
jp
flds
mov
cmp
cmpsl
mov
leave
and
fbld
adc
clc
movsb
loopne
lods
cmpsb
xchg
mov
std
inc
jnp
xor
mov
fs
loop
xchg
mov
loope
push
xchg
xor
add
enter
rorb
add
push
out
outsb
ret
mov
popf
and
adc
adc
scas
push
pop
sbb
sbb
shrl
add
lcall
push
fst
mov
fs
sub
lcall
ljmp
mov
fsubrp
push
cmc
and
sub
scas
mov
es
popf
mov
iret
dec
and
jmp
push
clc
pop
js
fwait
scas
mov
pop
jge
sub
xchg
jmp
dec
mov
imul
jecxz
sbb
test
jg
xchg
lock
mov
or
mov
push
jns
loope
cltd
shlb
cmp
add
and
mov
ljmp
sub
cmp
lret
jl
push
mov
jns
hlt
mov
add
lahf
out
mull
mov
xchg
lret
lret
jmp
repz
jne
loop
rcrb
xchg
push
bound
mov
jae
pop
cmp
ds
notb
add
in
xchg
fldl
pop
jb
adc
push
and
rclb
dec
push
pop
ds
lea
inc
ja
push
aam
cli
dec
cmp
fdivr
cmc
adc
in
dec
cmp
pushf
jecxz
lret
ljmp
mov
pop
and
fstp
or
movsl
cwtl
inc
add
dec
andb
lcall
insl
dec
mov
in
cmp
mov
xchg
aas
ret
mov
bound
aad
ret
sub
pusha
mov
cmp
push
aaa
fcoms
inc
mov
xchg
mov
adc
mov
js
cmpsl
mov
pop
mov
add
mov
adc
insl
pop
filds
call
lss
lret
flds
sbb
dec
jo
push
cmp
dec
out
xchg
loopne
inc
ror
and
fmul
push
adc
andb
jno
inc
mov
ljmp
rclb
mov
pusha
sbb
mov
sarl
fnstcw
add
mov
leave
call
adc
xor
ret
jbe
xchg
nop
jno
out
mov
lcall
cmp
xchg
push
ss
jecxz
and
leave
push
movsl
call
xor
das
ds
pop
dec
lcall
orl
dec
mov
dec
jle
push
stos
jns
in
je
xor
sub
sub
and
push
add
sbb
add
idivl
lahf
repz
mov
xchg
sub
mov
bound
daa
pop
popa
push
movsb
jmp
out
inc
fwait
ret
and
sub
or
test
mov
repz
pop
mov
inc
scas
mov
vprotq
outsb
ret
out
int
inc
sub
mov
jmp
xchg
stos
inc
sbb
pop
jg
gs
mov
das
and
mov
jmp
xchg
mov
pop
mov
movsb
std
testb
dec
push
mov
inc
cmpsb
cli
mov
cmc
lea
push
sti
and
leave
call
testb
sarb
cmp
fcomps
mov
insb
test
jp
std
stc
xchg
sti
inc
sbb
pop
pop
or
push
mov
and
push
lock
jbe
mov
in
jo
pop
add
dec
jo
leave
push
mov
adc
xchg
std
sbb
mov
and
ret
ss
xchg
shll
add
sbb
ret
adc
fidivrl
jns
in
mov
sub
test
outsb
push
inc
std
mov
pushf
sbb
sub
sub
dec
jne
je
out
insl
push
fistl
aaa
jmp
daa
pop
adc
add
cmpsl
jae
or
popa
or
std
adc
aas
fsts
mov
notb
xchg
sub
cmp
sbb
jb
lret
pop
xchg
and
jge
fnstsw
push
in
std
rcrl
push
or
jge
jae
js
mov
pop
popa
ffree
test
jae
mov
sub
decl
cmp
test
jle
ds
aam
out
scas
fsin
adc
outsb
pop
icebp
mov
dec
push
arpl
cwtl
enter
pop
and
in
push
jge
pop
inc
add
lods
in
or
dec
inc
mov
dec
je
loopne
jo
mov
rcll
sub
stos
shll
insl
bound
pop
inc
scas
sub
xchg
or
loop
inc
push
pop
lret
mov
or
cwtl
cwtl
mov
xchg
xchg
adc
rorl
pusha
mov
mov
test
outsl
into
loop
jecxz
push
mov
stc
mov
int3
cmp
out
fcomps
fwait
das
fnstenv
jae
aam
icebp
push
xchg
dec
sahf
mov
sub
xor
pop
pop
push
dec
jbe
out
mov
and
jge
xchg
test
addl
cmp
or
xor
mov
jp
mov
and
pusha
call
push
popa
or
ret
xor
repnz
lret
pushf
and
jmp
mov
shrl
xchg
inc
imul
add
shll
cmc
xchg
shll
xchg
adc
ret
lods
dec
dec
add
pop
mov
pop
sbb
mov
imul
mov
and
push
outsl
repnz
cmp
test
inc
pop
shl
stos
jg
sub
mov
cmpsb
negb
sbb
adc
aad
mov
lods
jnp
bound
jmp
and
out
cmp
test
repz
fisttpll
adc
pop
pop
mov
lods
enter
vpsllw
pop
xchg
cli
movsb
in
lock
iret
popa
sar
subb
andb
xor
sbb
clc
das
pop
xchg
stc
adc
inc
mov
inc
inc
dec
stc
cli
test
daa
sbb
call
daa
mov
jnp
pop
sahf
sahf
out
dec
push
in
xor
jne
popf
dec
inc
sbb
cli
sbb
cmpsb
inc
push
push
jb
mov
pop
jno
cmp
sub
xlat
divb
xchg
fadd
xchg
int
inc
hlt
pop
sarb
fldcw
std
ds
jb
call
sub
aad
lahf
add
jl
cwtl
out
adc
int3
imul
mov
in
cltd
add
lcall
xchg
jo
xchg
jo
sub
packuswb
into
lret
stos
dec
pop
cmpsl
fnsave
lock
inc
shr
dec
sub
movsl
jo
mov
and
fistpl
movsl
sub
push
rol
and
push
and
fidivl
jae
in
mov
sub
jns
lods
add
adc
cmp
aas
jno
movsl
push
xor
push
test
out
loop
mov
pop
pop
popf
out
movsl
lock
int3
push
bound
cld
popa
fs
push
inc
aas
push
hlt
mov
sub
cmpsl
imul
pop
pop
sarb
int3
aam
push
aas
ljmp
data16
xorb
inc
cmpb
scas
mov
cwtl
push
lcall
ds
ljmp
sub
inc
adc
xchg
loope
out
and
adc
in
or
lahf
leave
push
adc
mov
int3
dec
inc
ja
aam
ret
jnp
or
cmc
sbb
pop
jno
pop
mov
sbb
scas
pop
xor
shrl
out
fbstp
ds
mov
push
xor
shll
xor
int
pop
enter
adc
js
fldenv
adc
pop
jecxz
add
and
mov
fwait
mov
daa
mov
mov
jnp
inc
push
shll
loop
cwtl
call
inc
inc
adc
jmp
sbbl
inc
mov
out
mov
or
jnp
or
fmull
addl
pop
pusha
std
fs
jle
jne
mov
nop
xor
je
xor
lock
mov
jge
cmpsb
shll
adc
fdivrl
push
fwait
les
lds
inc
mov
sbb
cltd
mov
add
xor
jg
pop
inc
stc
or
sub
and
sbb
repz
sub
ja
and
add
imul
outsb
in
arpl
or
lcall
jno
dec
enter
aad
cmc
dec
mov
outsb
fwait
xchg
in
add
cmp
rorl
push
sub
add
mov
fldenv
and
add
sub
xor
pop
hlt
hlt
pop
jno
jp
and
xchg
cmp
aaa
scas
fidivrs
lret
push
leave
xchg
jns
pop
jmp
popf
movsl
mov
inc
xor
add
sti
pop
sbb
inc
cmp
movsb
cwtl
mov
adcb
mov
lds
sub
ljmp
cltd
clc
testb
jns
sub
cmpsb
and
push
jb
into
jle
adc
pop
subb
dec
jp
xchg
sub
lods
aas
and
add
rorl
sbb
cs
adc
pop
mov
push
dec
dec
enter
cltd
lahf
add
das
mov
jle
andl
inc
mov
insb
jne
out
push
jno
sbb
enter
sub
pop
sbb
pop
neg
inc
addr16
adc
bound
jmp
push
dec
fs
push
sub
popf
add
fidivs
test
loopne
jg
popa
dec
fnstsw
data16
jecxz
xlat
mov
nopl
addr16
in
push
repnz
mov
xchg
cmp
je
and
ds
and
ds
shrl
inc
pop
lods
push
std
ja
fs
mov
testb
add
jg
jmp
lock
mov
inc
or
ficomps
fidivrs
sti
test
and
repnz
adc
mov
cmp
bound
fwait
add
les
sbb
sbbl
ja
setl
lods
aaa
push
pop
add
int
cmp
movsb
mov
cmp
sbb
roll
mov
scas
push
add
and
mov
repz
dec
xor
pop
mov
cld
movsb
mov
cmp
dec
lahf
ss
mov
js
clc
adcb
test
cmpsb
and
ljmp
mov
test
mov
jnp
out
and
pop
jp
out
jl
adc
fs
push
shrl
shrb
lcall
lahf
mov
out
stos
adc
adc
inc
add
pusha
inc
fnstsw
push
jo
jl
pop
sbb
int3
fisubs
mov
jne
add
lods
aaa
or
dec
xor
cmp
xchg
pop
imul
mov
sbb
insl
mov
std
adc
int3
sub
jno
sub
push
test
mov
jmp
sub
fbld
movsb
dec
orl
les
xchg
cmp
rorl
pop
and
out
pop
sbb
es
test
ret
jbe
or
rcrl
adc
xor
notl
mov
push
xchg
mov
gs
mov
sbb
in
mov
stos
cwtl
mov
roll
test
cmpsl
dec
fcoml
xchg
and
push
pop
mov
dec
movl
cmp
sbb
scas
jmp
inc
into
xlat
inc
cli
push
ficoms
dec
das
je
or
ja
mov
sub
pop
mov
jb
cmp
je
sbb
cmp
fistl
jg
hlt
xchg
fs
xchg
jns
popl
jmp
call
xlat
sahf
dec
gs
sub
xchg
les
and
mov
jge
mov
pop
mov
xchg
das
add
inc
movnti
mov
ret
cwtl
in
adc
dec
aas
sub
push
jmp
cltd
out
mov
call
and
shrl
or
pop
mov
shll
scas
enter
popa
jl
push
lock
dec
mov
xor
mov
popf
sahf
arpl
iret
int3
xchg
push
push
leave
cmp
cwtl
ss
lahf
inc
lahf
pusha
mov
cmp
ljmp
lcall
sub
sub
pop
mov
pop
sbb
pop
add
aas
xor
rcrl
mov
xchg
jmp
or
mov
in
stc
aas
fndisi(8087
insl
imul
mov
or
xor
ror
mov
mov
mov
xchg
sahf
call
mov
repz
nop
scas
push
inc
je
cltd
fs
sub
lock
mov
das
hlt
out
jbe
lods
loope
sti
sub
xchg
lret
jns
test
rcrb
mov
xor
cmpsb
stos
jnp
js
ja
dec
idivb
add
mov
sbb
push
mov
pop
push
pop
f2xm1
les
stos
push
xchg
jle
mov
xor
and
push
pop
sahf
push
cmc
stc
mov
or
jmp
mov
inc
lods
pushf
adc
sbb
ja
out
std
mov
jle
or
shl
push
incl
adc
push
mov
push
mov
push
mov
rclb
jb
jp
push
xor
cld
fists
push
mov
xchg
sub
xchg
mov
xchg
jnp
dec
cltd
sbb
mov
xor
sub
dec
mov
and
aam
test
cmpsl
loop
hlt
xchg
adc
jg
xchg
sbb
imul
std
loope
mov
insl
ss
xchg
test
dec
movsb
or
cmp
fistps
jne
and
fimuls
mov
xchg
or
nop
fcom
mov
pop
xor
subb
test
pop
addl
mov
les
imul
fdiv
dec
in
xchg
mov
js
jl
sbb
cld
jle
insl
xchg
sti
xor
shll
mov
dec
xchg
push
les
imul
stos
sahf
data16
mov
popl
mov
cmp
mov
fwait
pop
ljmp
xchg
mov
daa
and
stos
notl
or
pushw
and
filds
or
fisttpll
sbb
mov
jmp
mov
and
jp
lds
imul
sbb
xor
adc
jne
shll
and
jp
jl
adc
bound
mov
test
xor
leave
movq
adc
lods
mov
push
fidivs
or
mov
dec
mov
xlat
sub
adc
dec
jmp
sti
adc
es
mov
add
clc
or
xchg
pop
inc
mov
lods
cld
divl
fcomps
jp
mov
sbb
js
fnstenv
fwait
push
jae
inc
xor
sub
xchg
hlt
xchg
jne
sub
test
nop
cmp
imull
ljmp
adc
das
clc
xchg
add
and
daa
je
cs
in
push
test
ret
mov
ret
fsubr
sbb
ds
sbb
lret
int3
pop
push
inc
imul
daa
adc
cmp
jl,pn
push
jo
jae
out
fsts
push
xor
jp
mov
test
nop
out
push
push
mov
inc
loope
mov
js
sub
and
insl
inc
call
jbe
add
shrb
loop
in
test
pop
push
dec
sub
or
mov
test
shr
mov
aam
sbb
outsb
sub
push
pop
es
mov
out
xchg
lcall
std
jae
adc
mov
nop
mov
and
xcrypt-ofb
cmpsl
in
or
and
mov
dec
mov
pop
aaa
lret
xor
mov
dec
xor
and
jo
scas
pop
loope
jp
sub
dec
mov
sub
xor
ret
dec
sbb
cmp
lock
xchg
rolb
pop
ds
push
cmp
xor
dec
movsb
jnp
sub
lock
movsl
test
movsl
jmp
jnp
pop
in
ret
aas
lret
xchg
pop
fdivrs
repnz
into
pop
adc
xor
push
clc
movsl
stc
xor
cli
lahf
sub
popa
aaa
loope
mov
mov
mov
xchg
xor
mov
and
adc
rcrb
dec
pushf
bound
jle
fcompl
in
fiaddl
push
jae
popw
int
xchg
ss
in
rorb
fcompl
inc
rclb
mov
or
cltd
add
hlt
pusha
push
cmp
stos
cwtl
push
cmpsl
jp
pop
and
in
frstor
sbb
jbe
sub
ja
fwait
sbb
fdivp
js
mov
cmp
dec
push
or
xchg
push
mov
lahf
add
pop
repnz
xchg
jg
or
lret
mov
cmpsb
sbb
cmp
lds
or
mov
adc
push
fcom
push
mov
push
dec
add
shrb
andb
fildll
cmpsl
pop
xor
movsl
sub
xchg
mov
cmc
jecxz
rclb
cmc
jo
sarb
mov
add
jecxz
xchg
or
lock
cmp
repz
mov
adc
jmp
lock
pushw
in
jae
arpl
popf
push
sub
testl
fcoms
pop
mov
mov
jmp
nop
mov
add
cli
rcrl
shrb
flds
sub
into
in
divl
jp
cwtl
adc
cmpsb
lock
cmp
jo
sarb
mov
cmp
fcomps
fbstp
int3
mov
push
shll
adc
cmpb
rcrb
hlt
lods
mov
dec
push
xchg
jae
test
sbb
bound
ljmp
cltd
sbb
adc
xchg
push
sti
xchg
sub
pop
aam
nop
push
inc
push
lcall
dec
clc
aas
in
lahf
pop
push
mov
iret
fildl
xchg
inc
and
xchg
cmp
repnz
out
pop
fdivrl
scas
or
roll
or
inc
cmc
insl
mov
ds
pop
das
mov
push
pop
lahf
cwtl
cli
jbe
hlt
fwait
call
sub
jo
in
mov
lock
xlat
xorb
es
movsb
and
cld
adc
pop
loopne
jns
dec
sub
pop
imull
or
mov
outsb
mov
pop
add
sbb
data16
jae
scas
or
cs
addl
pop
negl
push
sub
push
ds
int
xchg
dec
rclb
test
push
pop
jl
dec
pop
jmp
mov
or
pop
out
ret
call
jno
aaa
and
ds
std
mov
in
or
into
push
scas
aaa
sub
cli
outsb
push
inc
fsubrl
jecxz
lds
push
popf
xor
sbb
testl
inc
dec
jmp
sahf
movsb
mov
jmp
cs
add
xor
leave
mov
xlat
pop
jb
mov
inc
mov
pop
mov
stos
add
insb
int3
xchg
mov
or
loopne
cvtps2pd
sub
les
and
fcmovnu
cld
leave
add
jp
add
pop
inc
std
jns
inc
xor
push
insl
vcmpps
push
iret
je
sbb
pop
pop
cs
sub
pop
ret
loopne
in
lea
and
sbb
inc
jnp
mov
out
fs
ficompl
push
sahf
enter
movsb
xchg
jnp
and
int
sbb
sub
push
sbb
pushf
mov
or
push
sbb
cmpsb
iret
stos
sti
mov
cs
lds
ljmp
sbb
pop
mov
ret
push
inc
push
or
arpl
add
pop
out
cmpsl
xor
pop
add
and
add
xchg
mov
out
dec
fidivrl
mov
lcall
insb
outsl
inc
mov
std
mov
cmpsl
xchg
mov
fwait
test
ljmp
in
lcall
sbb
sub
adc
sub
mov
or
cmpsb
into
sub
mov
pop
fwait
or
fdivr
mov
mov
mov
xor
push
push
adcb
sub
ja
aas
mov
push
cmp
aad
xor
adc
js
in
jmp
add
add
mov
jae
sbb
jecxz
sub
xor
icebp
xor
insl
sub
negb
std
out
mov
sti
pop
outsl
jo
sahf
and
loope
jl
out
inc
ret
lods
fcmovnb
popf
sub
rcrl
pushw
and
leave
out
outsb
jo
mov
mov
emms
dec
stc
jb
aam
in
sub
out
and
fsubrl
test
adc
mov
daa
stos
icebp
add
and
jl
cli
and
sar
sub
ret
and
mov
dec
ret
pop
push
add
repz
push
mov
imul
xor
fldl
aam
jae
push
lds
pop
popf
js
ficoml
dec
rorl
es
loope
cltd
sub
outsl
xchg
mul
dec
notb
idivl
movsl
lock
dec
inc
std
push
xchg
pop
mov
sbb
jle
push
pop
dec
mov
les
xchg
mov
fwait
pop
pop
fdiv
cmpsb
fs
adc
mov
xor
idivl
iret
movsl
ds
xlat
xchg
mov
sub
sub
xor
mov
sub
xor
and
mov
iret
xchg
repz
in
repnz
lcall
js
outsl
int
jg
dec
lahf
lahf
enter
jge
mov
lcall
loope
pop
sti
fstl
mov
inc
cmc
iret
daa
loop
inc
imul
ss
jmp
mov
nop
push
xor
mov
cwtl
sbb
jg
nop
inc
cmp
popa
jbe
popa
stc
jne
aas
cmp
shrb
shrb
test
push
lahf
in
stos
outsb
in
add
movsb
lcall
mov
mov
mov
sbb
pop
jl
lock
cld
cmp
daa
cs
aaa
stc
dec
hlt
in
lods
or
xor
dec
xor
add
mov
adc
int
jmp
cmpsb
sub
idivb
lahf
insl
and
inc
xchg
push
aaa
mov
sarb
add
shrb
xchg
lcall
adc
pop
sub
jg
das
inc
orl
movsl
xor
pop
test
shlb
xchg
sub
enter
imul
mov
fisttpll
arpl
mov
in
iret
push
loop
and
dec
fwait
sbb
aam
nop
call
shlb
inc
push
ret
jb
sub
aad
cltd
pop
cmp
sbbb
inc
flds
add
cli
mov
mov
out
std
mov
aaa
mov
test
repnz
mov
rcrb
xchg
inc
jae
clc
rorb
and
xchg
xchg
add
push
mov
iret
push
addb
adc
imul
fs
dec
js
cmp
inc
popw
andb
sti
leave
call
out
call
mov
lods
jg
sub
cmc
mov
arpl
shll
lea
loopne
out
loopne
insl
fiadds
cli
icebp
inc
leave
cwtl
mov
sub
sarb
mov
mov
jge
pop
lret
mov
add
fnstcw
scas
std
push
fisttpll
mov
imul
pop
jecxz
in
mov
hlt
ret
xlat
icebp
sub
test
mov
lods
jl
mov
out
hlt
in
jbe
into
ret
mov
and
and
push
xchg
cs
testb
fbld
push
jo
cltd
or
je
pushl
lret
in
movsl
mov
inc
cmp
jle
lods
sbb
imull
pop
mov
loope
aas
cmc
mov
xlat
mov
mov
sti
pop
rclb
aaa
mov
sub
jne
divl
movsb
in
sbb
lcall
clc
in
pop
mov
cmpsb
add
test
mov
xchg
out
sub
out
cmpsl
sbb
loop
in
mov
sub
insb
cmpsb
fs
dec
in
adc
mov
in
subb
arpl
mov
cmc
adc
scas
xchg
and
xor
dec
mov
fisubl
in
fisubl
iret
jg
inc
pushf
shr
ja
jle
cli
dec
mov
hlt
pop
inc
jns
imul
mov
pop
repnz
pop
scas
mov
adc
leave
and
or
lret
xor
orl
lret
mov
jno
jle
ret
push
testl
bsr
lods
xor
rorb
sub
xchg
cli
mov
xor
xor
push
jg
push
shrl
adc
rol
cld
out
icebp
test
mov
or
mov
cmp
scas
loopne
adc
push
jo
out
xor
or
xchg
or
out
fisubl
in
shll
add
push
mov
mov
test
out
js
adc
push
dec
sbb
jmp
adc
jl
pop
mov
and
fcoml
mov
mov
mov
push
xor
rclb
push
pop
cmp
mov
mov
xor
inc
inc
and
in
sbb
xchg
fstpt
imul
mov
mov
outsl
xchg
mov
insb
mov
and
addr16
push
add
bound
push
ficoms
sbb
adc
mov
loop
push
ljmp
in
xchg
sub
aaa
sti
fcoms
cmpsl
adc
cmp
xor
sub
mov
mov
arpl
testl
arpl
jae
push
pop
in
and
fists
out
inc
ret
test
fisttpl
mov
or
cmc
out
pop
mov
fdiv
in
faddp
sbb
sbb
jle
addr16
orl
ret
mov
pop
aad
sub
xor
repnz
inc
pusha
mov
push
jo
call
fsubr
xchg
pop
lds
in
sub
dec
xchg
adc
lods
push
fstps
insl
adc
dec
add
cli
pop
sbb
xchg
call
aas
or
jo
push
emms
xchg
jmp
jmp
add
cmp
cli
pop
sub
arpl
fidivl
sbb
inc
xlat
mov
lock
cmp
push
aas
addr16
xchg
inc
stos
sub
call
ja
sbb
in
xchg
repz
cmpl
aaa
mov
popf
cwtl
cmpsl
inc
insb
push
dec
enter
cmc
inc
test
lret
or
push
cmp
lret
add
adc
dec
and
ds
rcrb
sti
xchg
sub
ja
fidivl
lcall
sti
mov
lods
mov
jmp
dec
int
rorl
stos
jge
call
adc
mov
mov
mov
pop
lcall
scas
sar
ss
adc
nop
enter
dec
mov
xor
sbb
scas
faddp
jge
mov
mov
arpl
js
aam
test
xor
adc
in
sub
das
insl
sub
insl
mov
std
mov
add
test
dec
and
cld
or
ss
add
aas
mov
mov
mov
mov
ds
cmp
xor
popf
fists
std
insb
jbe
mov
std
xchg
cs
sarl
mov
sbb
or
push
leave
pop
ficoml
push
xchg
jmp
and
call
mov
push
jmp
bound
cmp
adc
inc
and
aam
fincstp
pop
cld
dec
int3
add
and
jnp
das
dec
popf
sti
inc
or
jg
dec
push
ss
ds
rcrb
mov
jo
test
popa
lock
mov
mov
inc
sahf
lret
xchg
xor
or
movsl
mov
xchg
jno
aad
inc
out
or
lret
sbb
mov
int3
mov
mov
jp
jg
and
or
cmp
pop
xor
pop
shl
rcrb
xlat
lea
jp
push
into
jge
adc
lret
repnz
xor
mov
mov
shlb
add
arpl
jl
ret
sbb
cmp
add
ret
cmp
jmp
xchg
repz
cmp
data16
sub
fisubrs
in
subb
and
notl
lcall
rol
push
stc
xchg
xor
inc
cmp
out
sub
mov
popa
cli
out
ljmp
mov
mov
mov
cld
mov
inc
sub
lea
call
repnz
xor
add
cmp
adc
repnz
mov
rol
loopne
mov
ljmp
sahf
out
jae
sbb
ds
test
adc
icebp
ret
or
ffreep
mov
adc
sbb
add
push
out
and
in
mov
cmp
test
out
imul
dec
sub
push
rolb
shrl
adc
movsl
mov
ficoms
pop
ficoml
mov
stos
mov
subl
loope
xor
shll
pop
cmpsb
nopl
sti
push
es
loop
jl
fbld
mov
cmpsb
fimull
cmp
pop
lock
shrl
imul
adc
xlat
lret
int
leave
shrb
inc
adc
xchg
xchg
repz
and
sub
or
cmp
or
je
fs
out
jl
sbb
mov
fcomi
arpl
xchg
icebp
mov
or
je
lea
mov
mov
cmp
sub
sub
ljmp
mov
test
loope
jge
pop
mov
cli
add
popf
lcall
push
je
inc
and
dec
mov
cld
adc
mov
in
cmp
sub
repz
jmp
xor
lea
add
movsb
aam
dec
dec
mov
fiadds
add
lea
sub
rolb
jnp
hlt
stc
mov
or
shlb
shll
aas
sub
add
test
mov
ds
inc
inc
mov
jl
popa
and
pusha
popf
cltd
xor
push
out
adc
jae
pusha
arpl
inc
xchg
inc
cmp
jl
test
imul
lahf
pop
pop
fnstenv
pop
ljmp
arpl
push
int
jb
pop
shrb
mov
lret
mov
adc
addl
jge
sub
add
pop
test
adc
pop
fsubs
mov
loop
push
test
mov
leave
fisubl
test
cmp
dec
ret
push
ljmp
aam
mov
pushf
mov
xor
push
jns
or
or
mov
xor
out
sub
mov
hlt
pop
int3
std
mov
or
push
dec
adc
shlb
jle
clc
int
adc
repz
fcoms
adc
pop
shll
lret
jbe
out
inc
daa
mov
int
mov
inc
cltd
scas
inc
sbb
xchg
icebp
mov
divb
adc
repz
mov
push
ja
sub
xchg
aad
shll
jl
inc
xor
cmpl
ds
cmp
cmp
add
jecxz
xor
xchg
mov
xchg
xchg
jbe
cld
lret
adc
loope
xor
movb
or
xor
push
clc
ljmp
in
sbb
repz
jns
and
sbbb
pop
mov
fiaddl
cwtl
push
nop
push
pop
sub
adc
movsl
arpl
popa
pop
cmp
sub
repz
sub
bound
mov
dec
mov
mov
in
pushf
lods
lahf
outsb
aam
in
lods
sub
out
enter
out
fstpt
fistps
xchg
mov
fdivr
roll
lock
cmpsl
mov
stos
xchg
and
mov
cli
add
fisubrs
cs
fdiv
inc
mov
add
pushf
popa
push
or
xchg
ret
push
popa
pop
adc
fdivrs
shrb
adc
test
rcl
dec
outsl
mov
lea
jnp
insl
push
xlat
cli
ficoml
jo
cmp
mov
icebp
push
lods
lea
lock
mov
fcompl
mov
sbb
push
xchg
sub
pop
pop
mov
cmp
lret
fwait
dec
xor
jno
or
test
int
mov
mov
jne
fistl
test
faddl
out
add
fnstcw
pushf
mov
mov
xor
sahf
call
in
xchg
clc
xor
repnz
ja
sbb
mov
inc
addl
mov
int3
xchg
adc
mov
push
mov
daa
xchg
js
pop
mov
mov
sahf
aam
cmpl
xorb
shrl
cmp
cmpsl
bound
notl
xorl
call
outsb
sbb
popf
cmp
fs
test
jle
push
jbe
stos
lds
push
xor
sar
fs
cmp
cmpb
ficoml
pop
popa
push
sbb
adc
clc
sbb
push
sub
mov
pushf
xchg
popa
cmp
ret
imul
mov
jmp
sub
in
jnp
arpl
outsl
add
jmp
mov
clc
add
jb
scas
mov
les
int3
jb
pop
mov
xor
pand
jg
and
sbbl
xchg
pop
insb
jmp
aaa
gs
stc
or
cwtl
and
enter
test
jg
inc
mul
inc
mov
xchg
pop
fucom
and
xor
in
cli
and
daa
adc
shll
or
insl
pop
gs
nop
pop
pop
pop
ss
sbb
addps
ja
cmp
stos
lock
cmpl
mov
mov
sub
repz
push
mov
mov
jecxz
outsl
push
mov
iret
nop
lds
shrb
or
popa
push
shll
addr16
jns
mov
cs
add
icebp
cmp
mov
outsl
jp
fbstp
fs
outsl
jbe
and
xchg
inc
push
xchg
popa
add
cmpsb
sub
aad
pop
and
mov
ds
cmp
pop
ss
dec
test
jae
aad
mov
loopne
faddl
je
inc
and
movsl
add
sbb
xchg
jmp
stc
mov
enter
outsb
aaa
sub
xchg
add
lock
mov
cmp
xor
and
stos
icebp
mov
xor
arpl
mov
ds
jp
dec
mov
jg,pt
mov
movsb
aas
sub
sub
xchg
push
push
out
inc
or
leave
adc
test
inc
jmp
adc
data16
shrl
outsb
pop
in
outsl
out
shrl
dec
imul
jo
sar
sti
das
nop
add
xchg
inc
ret
data16
mov
mov
sbb
aas
aaa
daa
xor
mov
xor
jecxz
pop
xor
mov
mov
dec
mov
xor
add
cs
psubd
xor
and
xor
scas
fs
testb
stc
pop
movsl
dec
stc
popf
sub
push
push
out
notb
and
leave
aam
cmp
out
shrl
je
sub
cmp
scas
orl
push
daa
sbb
vpackuswb
mov
cld
jmp
shll
push
adc
test
cmp
inc
mov
or
dec
stc
and
ret
push
imul
mov
jne
or
fiaddl
pop
mov
sbb
gs
and
mov
or
mov
jnp
mov
lock
fisttps
and
rcll
adc
add
cmpsb
xchg
cmp
cmp
xlat
cwtl
sahf
mov
and
test
aad
cmp
xchg
int
mov
mov
adc
dec
outsl
int3
fs
call
mov
add
mov
inc
xchg
pop
sbb
cltd
mov
jno
jnp
cmc
sahf
mov
aad
mov
iret
mov
ljmp
adc
rorb
out
cmp
les
pop
xor
sub
dec
stc
imul
iret
icebp
arpl
xchg
xchg
inc
dec
popf
jge
fcomps
sub
les
mov
mov
jbe
pop
fcomi
imul
insl
pop
mov
jmp
scas
cwtl
push
test
or
scas
test
or
jae
mov
and
je
jne
lds
or
test
lahf
xchg
and
sub
mov
fists
or
cmpsb
dec
lods
cs
outsb
pop
adc
and
inc
jp
fistpl
jl
mov
or
xchg
mov
loop
mov
loop
icebp
icebp
pop
adc
adc
fidivrs
aas
adc
and
sbb
adc
pop
jno
cli
ret
int
cltd
cmp
and
pop
lods
movsl
rorb
dec
add
push
add
aas
mov
fidivrs
pop
aas
stos
sbb
xorl
sbb
jno
jecxz
dec
sub
popf
jge
cmp
fstpt
popf
lock
mov
shrb
adc
mov
inc
sbb
divb
sub
pop
pop
stos
push
dec
int3
loop
test
loop
inc
in
data16
jmp
lahf
mov
popf
jns
aam
insl
adc
cmp
jo
outsl
lea
cwtl
mov
ds
out
pop
hlt
cmpsl
jge
outsb
insl
pop
aad
sbb
int
dec
jp
int3
pop
dec
aad
jecxz
out
fcmove
in
ljmp
pop
mull
cmc
in
sub
adc
mov
out
adc
jmp
rcrl
mov
ficompl
sbb
jmp
jecxz
rclb
int
mov
ljmp
add
adc
xchg
adc
lea
div
movsl
cmp
jg
xorb
pop
stos
push
push
rcr
out
pop
push
adc
add
cmp
lods
inc
push
rcll
pop
out
jl
pop
sub
jl
pop
mov
jl
sbb
xchg
fmulp
lods
movb
jne
test
add
cmpsb
lods
iret
scas
mov
mov
mov
sar
repz
mov
jne
adc
adc
jp
push
mov
inc
push
or
lret
cmp
mov
and
inc
sbb
push
or
dec
pop
movsb
fwait
jge
xchg
enter
xchg
mov
mov
pop
jecxz
xchg
mov
or
movsl
push
lret
jbe
jns
mov
hlt
and
fistl
in
push
aaa
mov
wbinvd
and
add
orb
fsts
jae
xor
xor
jg
mov
adc
jl
mov
add
pusha
cmp
mov
inc
test
neg
pusha
sbb
stos
call
dec
cmpb
mov
mov
dec
shll
fiaddl
nop
icebp
push
das
lods
and
adc
push
jp
xchg
data16
and
mov
pop
int3
xchg
sub
xchg
cmp
test
in
lahf
in
ljmp
hlt
insb
push
ja
dec
add
pushw
adc
and
push
cwtl
dec
jns
lea
mov
in
cld
xchg
sbb
out
dec
mov
loopne
mov
out
mov
adc
xor
pop
or
xchg
jae
into
inc
xchg
jle
or
add
xchg
jns
and
fldenv
repnz
mov
loope
jno
push
inc
jmp
fldenv
dec
sub
test
shrl
shlw
faddp
mov
bound
cmp
fdivrs
adc
fistps
jno
popf
sub
das
sub
inc
add
and
movsl
sbb
jb,pn
insb
aad
shrl
inc
push
fcmovne
scas
fnsave
pop
sti
lea
inc
insl
pop
jno
sub
or
mov
shlb
in
mov
ss
jecxz
cmp
cmp
jo
mov
mov
xchg
cmp
clc
pop
sbb
xchg
std
mov
dec
in
jbe
sub
mov
mov
scas
pop
fstp
adc
lock
sbbl
mov
mov
icebp
and
jne
scas
pop
mov
xchg
add
jae
cmc
imul
mov
jg
adc
cmp
iret
jge
mov
subl
cmc
bound
ljmp
inc
in
cmp
flds
pop
pop
pop
pushf
add
fs
push
sub
jmp
pop
jecxz
sub
filds
dec
test
mov
enter
and
sbb
xchg
mov
lret
cmp
jne
jge
jae
shrl
loop
hlt
xlat
jo
lods
cmc
lahf
daa
adc
xchg
xor
lret
aaa
fs
mov
outsb
xor
movsl
shrl
cmp
addr16
pushf
movsb
loopne
xchg
dec
push
outsb
adc
or
ror
add
jno
push
insb
aas
enter
in
pop
xchg
movsb
and
sub
in
lods
mov
imul
popf
inc
xchg
clc
loope
xchg
xchg
test
cmp
mov
jecxz
mov
out
stos
fimuls
jno
fistpl
inc
je
pushf
lds
pop
sbb
loope
pop
push
and
push
push
mov
ret
repz
jb
mov
cmp
cld
data16
in
rorl
clc
fildl
ss
xchg
mov
out
and
aaa
inc
incb
add
rorb
jbe
insl
jmp
mov
aaa
xchg
push
push
daa
into
mov
jns
add
aaa
jns
out
xchg
dec
sahf
arpl
sbb
es
fs
lahf
xor
inc
push
cmc
jp
mov
xlat
out
cmp
mov
inc
pop
subl
in
xchg
mov
movsl
xlat
lds
mov
lods
cli
call
lret
lods
ret
mov
out
or
add
dec
enter
xor
adc
inc
insb
xchg
mov
loop
into
dec
fiadds
add
lcall
xor
iret
ja
test
cmp
push
xchg
andb
pop
ret
pop
std
xor
and
ret
xchg
imul
mov
mov
push
and
pop
addb
pinsrw
pop
sub
data16
mov
gs
outsb
adc
mov
faddp
add
loop
push
add
and
cmp
xor
loope
lcall
cmp
push
sbbl
add
lods
push
xor
test
add
mov
rolb
das
add
mov
cltd
lds
loop
cmp
pop
mov
push
jne
jmp
mov
ret
mov
mov
mov
dec
sub
cmp
push
cmp
push
push
jmp
xchg
dec
push
loop
dec
out
adc
jnp
sarl
cmpsb
cwtl
push
jmp
mov
pop
adc
in
jnp
push
lret
mov
jg
sbb
xchg
cwtl
push
xor
mov
dec
mov
iret
test
icebp
adc
call
xchg
and
cs
xchg
xchg
stos
add
fucomip
mov
adc
xchg
lret
psrlw
ds
jmp
fisttps
push
push
in
in
push
push
mov
cs
or
movsb
cwtl
jno
or
push
pushf
sub
mov
mov
popf
sub
jg
add
xor
leave
cltd
mov
jecxz
adc
cmp
fisubrs
dec
mov
add
xchg
pop
cmp
pop
adc
sbb
cmp
or
inc
jle
pop
loopne
push
or
cmpsl
lret
icebp
sbb
mov
aad
loop
xor
sbb
in
add
rolb
dec
mov
test
sub
decl
xchg
pop
xchg
sbb
out
icebp
or
cmpsb
in
daa
pop
js
or
or
subb
mov
add
insb
ja
sbb
or
xchg
stos
lret
or
popf
ja
int3
cmpl
sub
fnstcw
test
inc
mov
push
adc
sbb
aad
fisttpl
mov
ret
call
push
jp
add
mov
mov
jg
dec
mov
mov
decb
stos
dec
fsub
outsb
inc
loope
push
pop
in
addr16
inc
inc
js
fcoms
lea
rcrb
popa
imul
jbe
insb
jb
mov
fidivs
sarl
out
mov
clc
or
dec
rcll
hlt
adc
inc
mov
mul
mov
setl
adc
mov
std
and
xor
mov
push
jge
pusha
sahf
scas
sbb
xorl
mov
nop
mov
adc
aad
andb
lcall
call
sub
push
dec
xchg
or
add
mov
ja
jmp
and
in
push
cli
pop
aam
dec
imul
and
inc
ror
lahf
ret
dec
popa
clc
jbe
push
in
xor
ficompl
mov
cmp
mov
cltd
pop
mov
clc
xchg
sbb
jb
mov
and
lcall
xlat
faddl
roll
popa
outsb
mov
jmp
fs
sbb
lcall
cmp
loope
xorl
aam
sub
test
icebp
outsb
mov
add
mov
push
jbe
mov
sub
lret
xchg
sub
mov
jmp
pop
stc
in
in
push
repnz
push
mov
mov
rol
clc
jge
adc
js
test
dec
xor
pop
xor
mov
mov
inc
data16
xchg
mov
push
aas
jg
enter
and
or
adc
imul
dec
leave
or
sub
leave
addb
add
inc
xor
adc
mov
xchg
iret
xlat
jno
sub
cwtd
adc
insb
push
pop
mov
divb
in
in
out
cmp
popa
inc
bound
les
dec
xorb
or
jg
lret
lds
add
mov
dec
mov
outsb
loopne
pop
movsl
sbb
jecxz
aas
jno
xchg
mov
mov
lea
dec
pop
ret
pop
lds
cmp
mov
sbb
add
mov
ja
adc
ficoml
aaa
push
jl
lea
jns
inc
lock
pop
aam
xchg
das
stos
pop
cwtl
xor
xchg
insb
loope
and
add
ljmp
or
out
sub
call
mov
clc
adc
push
aaa
and
sbb
mov
mov
cld
hlt
inc
inc
mov
xlat
fisttpll
mov
pop
fisubrl
sahf
mov
cmp
sbb
mov
out
in
icebp
loopne
sbb
shlb
push
mov
ds
ret
jb
movsl
in
popa
in
cmpb
test
out
cmpsl
pop
jae
push
movsb
mov
cmp
push
push
aaa
push
je
aaa
ljmp
stos
sti
mov
add
cmp
cmp
adc
xchg
pusha
mov
les
fwait
xchg
icebp
sarb
xchg
jnp
aam
sub
mov
pop
cmp
adc
jl
mov
cmp
add
icebp
in
outsb
dec
in
dec
lea
aaa
mov
cld
mov
inc
pop
insl
roll
repnz
xor
inc
mov
xor
push
fdivrp
daa
and
aas
pop
inc
jb
stc
xchg
cmc
or
mov
jae
bound
ljmp
sti
xor
mov
mov
popa
jne
push
fsubrl
ret
xchg
and
cmc
pop
sub
push
xchg
mov
add
testb
adc
pusha
mov
ljmp
popa
icebp
shlb
or
jge
icebp
xor
mov
cmp
or
adc
adc
ret
mov
cmpsb
addr16
push
cmp
scas
mov
pusha
cld
push
shll
int3
popa
xchg
cli
dec
or
scas
xchg
jo
lods
jnp
es
mov
cwtl
inc
popl
cwtl
dec
addr16
push
scas
mov
lret
cltd
shlb
xor
lcall
and
leave
stc
out
cmpsb
add
lret
gs
fsubrs
imul
mov
cwtl
xorl
jl
inc
xor
cltd
es
mov
add
je
push
mov
sub
jns
popf
xchg
jno
mov
lret
push
sarl
mov
loope
sub
or
pop
or
sbb
pop
popa
loope
outsl
pop
cltd
fsubrl
in
push
lea
cld
in
xlat
lods
pop
push
push
inc
pushf
in
lock
add
push
bound
jmp
cld
xchg
add
out
aaa
mov
test
cmp
in
xchg
mov
cmp
xlat
bound
daa
ljmp
xchg
in
jbe
pop
jae
fwait
and
and
xchg
dec
stos
cmc
aas
shrl
xlat
pusha
pop
lds
scas
inc
lea
cwtl
push
jb
jle
ljmp
bound
jecxz
dec
mov
cmp
inc
cmp
lcall
mov
add
shll
leave
out
cmpsb
mov
outsl
and
push
scas
movsb
dec
fistl
add
loop
xchg
sub
sub
in
ljmp
xor
pop
adc
aas
and
or
lcall
out
adc
push
mov
push
mov
ror
mov
iret
cli
rcrl
xchg
jmp
dec
shl
and
dec
push
ds
call
clc
int3
in
cltd
fcoml
icebp
sahf
mov
jno
xchg
fisubl
xchg
jo
in
jb
xchg
call
call
popl
lret
or
adcl
adc
adc
mov
and
aas
sti
mov
mov
mov
sub
cmpb
push
fiadds
clc
lods
jl
pop
lods
lcall
bound
push
sub
push
popa
cmp
jno
out
add
and
push
mov
cs
sub
mov
int3
jb
and
cmp
vhsubpd
add
popw
fdivrp
cmp
rcl
push
mov
jae
loope
pop
and
insl
cli
sub
xor
jg
mov
add
aas
jl
cmp
xor
clc
bound
inc
xchg
pop
add
movsl
adc
rcrb
mov
ljmp
shl
jne
sub
dec
inc
ss
inc
xchg
add
sub
enter
dec
cmpsb
sub
sub
outsb
xchg
jns
imull
mov
lcall
pop
pusha
pop
testb
cld
rcl
or
mov
mov
unpcklps
push
aas
cld
lds
and
xchg
out
dec
ficomps
push
fildll
imulb
dec
imul
inc
shrl
cmpl
pop
std
dec
inc
pop
pop
ss
lret
xchg
jae
outsb
inc
cmpsb
das
push
inc
inc
ret
or
xor
lock
leave
mov
in
js
scas
in
jno
cld
hlt
fiadds
push
data16
lret
aaa
sbb
adc
stos
mov
cmpl
andl
cs
clc
cmp
es
frstor
adc
dec
dec
jecxz
lds
addr16
lret
sbb
add
jmp
dec
xchg
movsl
inc
cmp
arpl
cltd
in
imul
in
pop
ljmp
xchg
sbb
mov
sbb
mov
lahf
push
push
movsb
enter
push
pop
cmp
add
std
push
mov
movsb
mov
lahf
lods
xor
clc
sbb
pop
loop
sub
mov
bound
negb
loop
into
jae
shl
push
xor
outsl
inc
mov
leave
das
and
cmp
xchg
xchg
adc
and
dec
hlt
dec
inc
mov
cmp
sub
sbb
mov
fs
imull
pushf
dec
repnz
cmp
sub
bound
pop
scas
xchg
rorb
jmp
ds
sarl
dec
ret
sbb
mov
sti
cmpl
jnp
xchg
pushf
mov
xor
jo
iret
aaa
leave
idivb
rcll
popl
xchg
add
imull
cwtl
add
or
insl
jnp
adc
in
and
and
test
es
fisubrs
dec
mov
xchg
cmp
jno
mov
or
jl
pop
add
mov
outsb
xchg
clc
mov
popa
mov
sub
outsb
int
mov
repnz
jno
out
jae
mov
jo
jg
pop
jp
out
hlt
fdivs
je
cld
jns
xchg
dec
leave
mov
imul
addr16
inc
mov
cld
mov
into
or
add
pop
or
call
add
push
xchg
xchg
mov
push
aaa
ljmp
shll
gs
iret
jo
or
xchg
repnz
sbb
inc
fsubrl
or
cs
je
mov
push
in
mov
mov
les
mov
jbe
push
lock
notl
bound
filds
repnz
push
loop
test
sar
xor
add
xchg
mov
pop
leave
mov
ret
orb
sahf
mov
scas
testl
shlb
or
dec
popa
mov
rorb
out
shlb
sti
jne
push
mov
orl
in
shll
ss
mov
jbe
xchg
lods
mov
out
cltd
or
add
test
scas
and
movsb
inc
mov
insb
fnstcw
xchg
mov
movsl
in
xor
xchg
push
and
lea
pop
add
xlat
es
aad
dec
loopne
dec
test
dec
outsb
aad
mov
andl
cmp
lcall
xchg
adc
les
lods
cltd
rcl
cmp
mov
rclb
daa
adc
mov
jl
popf
stos
stos
sbb
subb
xchg
repnz
test
sbb
push
dec
mov
mov
idivb
sub
in
inc
push
xchg
pop
lods
mov
addl
add
icebp
xchg
sbb
leave
stc
jns
push
call
xor
mov
mov
sub
popa
mov
jae
pushf
es
pop
push
rorl
sbb
dec
aam
mov
adc
sub
mov
add
fdivrl
bound
xor
push
jg
hlt
xchg
adc
mov
jg
dec
push
pop
and
push
push
scas
cmp
jo
pusha
add
scas
xchg
in
lods
jmp
jle
xor
fmull
imul
sub
hlt
push
rcl
aas
mov
aaa
lret
xchg
jns
mov
aam
push
jl
push
mov
out
sub
sbb
adc
pop
push
lret
out
pop
mull
aas
xchg
aaa
pushf
cmpxchg
mov
push
loope
popf
out
rorb
mov
rclb
inc
adc
pop
mov
lret
das
test
jmp
jg
pop
mov
mov
das
xor
xchg
stos
lret
inc
ficompl
dec
dec
iret
cmp
add
dec
nop
mov
and
inc
xchg
add
add
sbb
xor
cmpsb
xorl
test
add
and
mov
ja
jae
fdivl
add
lods
push
mov
mov
push
stos
out
es
hlt
std
loop
dec
mov
pop
adc
jecxz
sub
adc
mov
into
xor
movsl
sub
push
cmpl
cli
ret
xchg
sbb
popf
movsb
fidivrl
mov
sbb
mov
fsubr
arpl
and
bound
ja
scas
mov
xor
in
and
and
jne
pusha
or
cmpl
lods
data16
loop
ljmp
fwait
cld
mov
dec
adc
pop
mov
and
loop
rcll
test
stos
in
mov
inc
scas
incb
adc
gs
add
sbbl
pushf
cmc
jmp
into
sbb
or
jg
inc
outsb
pop
out
jl
or
sub
jge
movsl
ficoms
cli
mov
pop
jecxz
lods
rol
cmc
inc
movsl
insl
xchg
pop
add
push
jno
loopne
add
and
adc
in
jae
jl
bound
lret
push
dec
enter
and
hlt
fadd
fsubl
inc
dec
sbb
aad
mov
sti
popf
add
out
jbe
sahf
adc
sahf
loopne
or
mov
rcrl
pop
fcomps
add
insb
lahf
xor
pop
orb
lea
out
rol
push
dec
mov
pop
push
or
adc
fldcw
push
scas
and
xor
outsb
idivb
nop
inc
hlt
enter
pop
ret
add
lret
fs
fildll
iret
inc
mov
xor
decb
lcall
mov
imul
mov
push
inc
adc
scas
add
popa
cmp
sahf
inc
insb
pop
in
mov
mov
and
push
scas
lcall
sub
or
lds
mov
xor
insl
dec
test
jbe
iret
mov
scas
ficoms
subb
mov
add
popf
sub
int
inc
push
test
daa
shll
das
fisubrs
pop
pop
in
cmp
xchg
xor
xchg
inc
pop
xor
inc
scas
mov
mov
iret
aam
subb
xor
enter
mov
inc
clc
and
push
or
xor
pushf
xchg
lea
stos
in
das
mov
lahf
jo
cld
test
add
inc
sub
push
shl
mov
cmp
cltd
fisubrl
fstpl
repz
andb
scas
mov
push
pop
mov
movsl
rcll
jo
cs
sbb
jp
push
pusha
test
or
jge
adcl
add
scas
loope
xchg
push
fsubp
push
cld
sub
and
movsl
movsl
jnp
mov
dec
sbb
and
lock
or
popa
mov
and
sub
pop
push
cmp
jnp
cmpsb
fcmovnb
pop
negl
inc
and
push
ret
inc
loopne
daa
test
lea
outsl
mov
inc
repz
sti
cli
fsubr
lods
repnz
aaa
aad
push
and
cmc
loop
rorb
sbb
test
pop
loope
mov
adc
pop
mov
mov
inc
push
es
push
jl
push
leave
add
sbb
jb
mov
jne
out
mov
fidivrs
mov
push
xchg
fwait
lret
mov
or
mov
cmp
int3
adc
mov
fistpll
clc
pop
adc
pushf
inc
inc
mov
cltd
xlat
push
aad
mov
push
push
stc
add
icebp
cli
imul
xchg
or
jge
pop
aam
fnstsw
or
int
stos
mov
lret
mov
mov
jg
nop
mov
stos
push
jbe
cmp
dec
movsb
loop
fcomp
mov
add
les
in
adc
and
cmp
lea
lock
mov
pop
int
notb
pop
jp
mov
not
fwait
je
hlt
mov
cld
ret
xchg
insb
mov
dec
push
bound
jp
dec
mov
movl
cmp
out
adc
lock
add
and
cwtl
mov
mov
aaa
mov
and
jecxz
adc
in
mov
dec
sbb
adc
and
mov
icebp
cmpsb
into
loop
nop
bound
jo
mov
add
or
dec
xchg
sbb
mov
test
inc
ffree
cmp
xorb
mov
test
scas
mov
stc
or
daa
jp
dec
mov
cli
lret
idivb
loope
adc
sarb
out
mov
cwtl
and
xor
mov
out
cmc
push
test
and
js
add
mov
int
cmp
push
xor
hlt
mov
mov
lods
xchg
lds
cmp
idiv
mov
mov
dec
mov
orb
subb
mov
xchg
out
add
lods
repz
ljmp
aam
adc
test
cs
xchg
icebp
or
jno
les
add
divl
xchg
inc
sbb
cmp
stc
pop
or
das
es
out
stos
pop
fisubrl
leave
arpl
mov
cmp
pusha
xlat
in
pop
outsb
clc
mov
and
out
sub
adc
cmpsl
lcall
fistpll
cld
push
push
mov
enter
cltd
sbb
stc
popl
xchg
pop
into
jno
sbb
xlat
mov
fdivs
sbb
cmpl
mov
xchg
aam
fisttpl
push
sub
rcr
sbb
mov
jne
loopne
and
inc
xchg
call
mov
cmpsl
mov
push
xor
mov
xor
dec
pop
popa
int
sti
fwait
ret
orb
dec
jg
jp
and
stos
cmp
aaa
mov
push
stos
lret
lret
loope
inc
or
or
ja
inc
mov
mov
jbe
imul
fbld
cmp
daa
jp
cmp
shrl
aam
cmpsb
mov
je
cmp
push
mov
out
test
aam
data16
push
ja
lock
pop
repz
mov
in
hlt
sbb
frstor
outsb
aaa
cld
or
add
push
xchg
repz
push
cmp
and
cs
pop
jle
das
push
push
cld
decl
ret
imul
mov
into
jno
sar
pop
xlat
and
scas
lods
xor
inc
jmp
jb
push
mov
mov
std
fistps
mov
lds
hlt
je
repz
mov
jbe
pop
add
pop
jge
cmovno
ljmp
and
clc
and
or
into
subl
jge
jecxz
enter
or
jbe
push
adc
xor
add
jp
sub
pop
mov
pop
loope
fsubrs
outsl
imul
pop
sub
pop
cmp
das
repnz
call
shll
push
aad
aaa
fcom
mov
mov
push
cmpsl
sahf
dec
jmp
mov
pop
int
add
adc
lock
movsb
sbb
hlt
outsl
bound
call
cmp
mov
imul
or
dec
scas
xor
movb
xchg
scas
push
shrl
ss
dec
test
add
lahf
or
into
es
dec
in
push
mov
int3
add
inc
lods
test
in
lret
outsl
pop
outsl
mov
adc
xchg
xchg
loope
xlat
cld
lea
ret
fistpl
push
test
push
xchg
xchg
mov
lcall
xor
xchg
les
xchg
jge
and
lea
sub
lcall
lea
pushf
test
pop
or
pop
shufps
add
int3
sahf
call
push
in
or
inc
push
js
jle
movsb
inc
and
mov
dec
xchg
sahf
mov
test
mov
ret
or
jmp
sub
les
ja
mov
push
xchg
xchg
fidivrl
dec
fstps
enter
sbb
out
sti
adc
jp
sub
xor
mov
dec
xchg
scas
leave
xchg
out
jb
icebp
xorb
dec
out
pusha
out
btr
pop
sub
addr16
xor
push
jnp
sub
adc
xchg
cmpsl
out
mov
mov
mov
pop
pop
fstpl
sub
sbb
push
dec
or
in
pop
stc
clc
pop
lahf
xor
cmpsb
mov
pop
xlat
mov
add
sbb
add
jmp
mov
lock
mov
mov
lret
leave
push
stos
mov
add
cwtl
adc
lcall
movsl
popf
mov
add
aas
jl
std
aaa
cltd
pushf
es
jecxz
je
cwtl
xor
pop
or
adc
sub
cwtl
in
xchg
jne
push
test
gs
add
stc
sub
addr16
pop
mov
les
mov
adc
mov
fwait
sub
xor
popa
adc
adc
ficomps
mov
ret
stos
lods
cmp
adc
and
adc
shl
hlt
add
lods
outsb
fidivs
mov
repnz
repnz
loopne
movsl
push
mov
cmpsl
sarl
js
adc
in
xchg
mov
shll
dec
test
repz
cmp
fists
xchg
addb
pop
out
or
or
fcomps
ljmp
xchg
adc
out
mov
fisttpl
jo
aad
or
inc
jl
push
push
ss
fdiv
js
dec
push
shrb
xor
sub
xor
sbb
sbb
add
add
xor
adc
inc
xchg
push
jge
cmp
fistpl
ja
cmp
mov
mov
dec
and
ja
lahf
sar
jge
aaa
mov
aaa
xchg
lds
jae
dec
jmp
lods
imul
imul
add
notb
adc
cmpsb
xchg
inc
imul
addr16
sahf
fsubrs
xchg
lcall
push
test
inc
mov
lret
mov
daa
or
push
push
fs
pop
pop
jg
fisubs
pusha
push
mov
adc
fsubrs
lods
int3
xchg
xor
mov
xor
mov
cs
push
sti
ds
cmp
push
jmp
and
xchg
lret
movsl
test
popa
mov
inc
push
xor
or
ja
aas
or
bound
ljmp
xor
fs
adc
sarl
cld
fwait
xorb
aas
movsl
ljmp
sbb
aas
add
scas
jge
jge
mov
std
out
test
adc
subl
ret
jne
inc
loop
aaa
iret
pop
sarl
sbb
sti
arpl
ss
cld
push
push
scas
shll
xor
push
inc
mov
enter
ds
lock
loopne
mov
mov
ja
mov
stos
int3
ds
outsl
enter
and
ja
test
mov
cmc
xchg
sbb
dec
add
sbb
sti
cmpsl
mov
lahf
aaa
xorb
xchg
or
jmp
cltd
lahf
xor
pop
negl
lcall
xor
jl
jmp
xchg
call
xlat
xchg
shrl
inc
jg
test
aad
mov
sub
fidivrl
fdivr
or
or
in
pop
or
jecxz
push
iret
mov
mov
add
popa
outsb
push
je
mov
pop
pop
cmp
mov
insb
popf
mov
jge
xor
outsb
push
xchg
cmp
mov
rcrb
jle
fldl
push
in
push
les
dec
fcmovnu
out
icebp
sub
std
xchg
or
mov
xchg
xchg
cmp
xchg
push
cwtl
push
test
mov
sub
sbb
jns
xchg
fsubrl
shrb
dec
test
ljmp
dec
adc
adcl
inc
test
cmpsl
out
add
push
mov
xor
pop
jb
aam
cltd
push
xchg
adc
aad
fcom
and
mov
push
notl
shll
xor
iret
mov
jns
cmp
scas
push
mov
xor
adc
jle
hlt
sti
orb
shlb
jno
sub
mov
pop
xor
int
mov
std
xor
clc
xchg
sti
orb
sbb
push
mov
pop
jns
cmpsl
dec
mov
sub
xor
orl
xor
in
dec
cld
push
mov
xor
scas
loop
pop
movsb
test
sbb
pop
into
out
stc
adc
stos
mov
jmp
dec
enter
ja
sti
nop
pop
aad
cmpsb
rorb
mov
jae
jg
mov
nop
inc
gs
scas
lcall
nop
addr16
dec
mov
imul
aam
rcrb
and
add
push
in
sub
ljmp
add
imul
lock
test
std
mov
arpl
xchg
rcl
mov
rep
pmaddwd
ret
sbbl
ss
fisubrl
mov
gs
cmp
xlat
clc
js
addl
sahf
imul
mull
lods
bound
jnp
test
jle
add
adc
xchg
cmp
xor
loope
je
rcrl
ja
mov
cmpsl
pop
push
add
sbb
ja
inc
mov
mov
sub
lahf
dec
push
stc
cld
cmp
gs
faddp
fs
lock
lods
fstps
ja
ja
dec
jp
push
mov
dec
es
push
inc
mov
mov
inc
sub
cltd
sbb
or
mov
ret
dec
adc
mov
xchg
add
fucom
sbb
xor
call
mov
add
les
push
shll
pop
jbe
sub
mov
iret
mov
cli
xor
daa
dec
push
jae
aaa
ss
and
cmp
shlb
repz
mov
mov
pop
pop
movsl
mov
xchg
fiadds
jecxz
cwtl
aam
or
roll
sub
adc
jns
es
in
push
es
and
psraw
inc
clc
hlt
or
xlat
push
mov
mov
mov
imul
ficomps
pop
popf
push
pop
int3
jb
movsb
xor
add
cli
popf
bound
pop
bound
and
jmp
cwtl
jl
sbbl
fsubs
test
fdivrs
adc
insb
push
xchg
cwtl
and
add
mov
leave
xor
addr16
std
adc
enter
pop
inc
jo
leave
pop
inc
or
mov
test
pop
push
mov
inc
mov
scas
and
lods
mov
lods
nop
lds
dec
scas
es
vprotq
fimuls
pop
icebp
jnp
sar
push
cltd
adc
adc
shlb
jno
lret
sbb
mov
sbb
bound
insb
mov
movsb
inc
mov
mov
bound
inc
mov
push
jle
in
test
xor
mov
sub
adc
and
cmp
test
imul
mov
lcall
xchg
loop
inc
lret
xchg
adcl
test
sbb
negl
fucom
gs
pop
ja
cmc
movsb
repnz
ficoms
das
stos
pop
cs
ret
test
cli
inc
rclb
pop
test
aad
fsubl
adc
jno
mov
cltd
mov
add
add
ds
dec
and
popa
mov
pop
lcall
mov
add
xor
mov
push
jecxz
mov
dec
pop
cltd
lea
pop
add
dec
mov
adcb
rcr
mov
mov
leave
and
pop
inc
in
cmp
sbb
ret
popa
and
mov
pop
test
push
mov
push
or
shl
inc
mov
out
sbb
pop
shll
movsb
pusha
sarb
outsl
fisttpll
testb
in
stos
popa
inc
sahf
pop
loopne
ja
in
pusha
push
test
pop
jle
fdivrl
jbe
aas
xchg
lock
jae
repz
adc
xchg
add
out
addr16
fwait
adc
sub
adc
and
or
stos
sbb
pusha
jno
roll
roll
js
cwtl
fs
repz
test
popa
shll
movsl
mov
int
es
leave
sub
es
jg
and
cwtl
rcrl
push
bound
fcmove
wbinvd
sub
lods
adc
scas
dec
mov
aad
loop
sub
sbb
stos
push
pop
xlat
pop
push
cmp
mov
iret
or
cli
test
addr16
cmc
mov
pop
adc
fisubl
and
loope
or
popf
test
push
xchg
pop
xlat
arpl
pop
and
ss
mov
in
fcoms
cmpsl
sbb
imul
add
mov
sbb
std
push
mov
mov
movsb
inc
movsb
insb
push
sbb
mov
imul
aad
cwtl
push
sbbb
mov
xor
or
cs
scas
jno
pop
xlat
out
pusha
and
mov
or
jae
pop
jl
mov
xchg
jl
sbb
mov
aam
mov
xchg
fsubrl
insb
lods
or
jp
xor
leave
cltd
dec
push
loope
push
addr16
leave
loop
loope
cmpl
xor
cmp
addl
xlat
xchg
leave
je
inc
stos
adc
xor
pop
lahf
stos
sbb
xchg
addr16
jno
fucomip
fstp
sarl
push
dec
jp
and
xor
cli
iret
lea
mov
mov
pop
pop
jmp
dec
jl
or
lahf
pop
mov
test
mov
in
push
add
xor
mull
mov
mov
int3
dec
test
inc
test
pop
xor
es
ret
mov
mov
loope
xchg
aas
cmovp
mov
or
pop
lds
lret
mov
pushf
push
lea
aas
fistps
in
add
mov
xchg
lahf
fwait
js
inc
cmp
xchg
cmp
inc
scas
sbb
negb
popa
ljmp
inc
add
push
enter
mov
call
mulb
jno
je
in
hlt
adc
cmpsl
mov
movsb
xchg
iret
cltd
fistps
arpl
loope
mov
cltd
and
lret
adc
jl
dec
imul
rcrl
arpl
mov
scas
mov
xorl
push
outsl
jae
stc
jnp
ret
mov
dec
popa
adc
in
mov
outsl
adc
movsb
adc
scas
inc
sub
enter
push
add
rorb
repnz
dec
lock
jbe
out
push
xor
mov
cmp
xchg
mull
pop
mov
lock
jne
icebp
imul
cmp
data16
std
movsl
dec
adc
xchg
inc
cmc
std
mov
or
dec
sbb
stc
mov
das
mov
faddp
mov
pop
nop
pop
lea
dec
popa
call
popa
gs
xor
pop
push
lcall
test
lods
fnstsw
cmp
mov
int3
stc
setb
ror
or
sbb
mov
jbe
sbb
inc
mov
movsl
cwtl
lret
lcall
cli
imul
pop
into
adc
dec
lahf
cltd
adc
stc
dec
xchg
sti
xor
leave
xor
ret
in
inc
pop
push
or
shrl
jae
jp
cmp
lods
in
ja
mov
enter
loop
inc
cmp
jl
loope
mov
or
dec
fwait
jle
cltd
adcb
xchg
mov
aad
inc
stos
in
mov
sub
jbe
fucomip
sbb
clc
movsl
mov
sub
dec
fs
add
lret
xchg
scas
addr16
push
pop
xor
out
and
or
pop
out
inc
scas
ds
dec
rcll
out
xor
mulb
in
mov
enter
adc
das
stos
add
pop
pop
cmpsl
pop
rcll
movsb
icebp
or
scas
mov
add
imul
adc
mov
cmp
xor
mov
cmp
jp
cmc
fucomp
int
xor
gs
or
std
hlt
inc
inc
aam
cmpl
jecxz
xchg
jge
or
bnd
cld
lods
cmp
clc
mov
loope
xor
jge
pop
cmp
mov
scas
les
add
pushl
jecxz
rcrb
jg
mov
ret
adc
mov
fildll
or
mov
push
addl
mov
jae
subb
call
or
ds
fstps
push
inc
cmp
ljmp
xor
inc
xchg
sub
imul
ss
adc
ret
outsl
cmp
push
jp
xor
jmp
mov
mov
inc
in
cltd
sar
shrb
fcoms
ss
std
sti
movaps
shr
xor
dec
mov
fsubrl
pop
dec
fwait
out
test
push
mov
adc
rcl
loop
movsb
lock
sbb
dec
sahf
cmpsb
fldenv
push
and
in
leave
bound
dec
mov
je
jp
aas
aam
inc
lcall
cltd
fldl
les
insb
lea
int
mov
imulb
mov
jg
pop
fstps
fstp
xchg
inc
repnz
xor
adc
addb
push
cwtl
mull
adc
sub
repnz
movsb
cmp
cmp
orl
or
test
mov
es
jecxz
mov
cmp
scas
dec
push
mov
sbb
jle
push
or
mov
pop
jge
and
in
pop
add
push
cmpb
test
and
cmp
in
out
mov
aad
jmp
dec
test
mov
xlat
ret
adc
lcall
sarl
sbb
mov
sub
sahf
movsl
imull
push
adc
cmpsl
xchg
ret
jb
out
lock
enter
pop
cltd
ret
cmc
mov
sub
adc
repz
adcb
test
dec
xor
xchg
mov
dec
pop
xor
xchg
addr16
test
fcmovu
sbb
mov
xchg
or
sub
push
sarb
loop
fs
jnp
popa
pop
test
and
hlt
insl
mov
out
call
sub
or
ja
dec
lods
es
pushf
dec
fincstp
shrl
mov
lods
push
jb
mov
mov
aam
adc
push
mov
cmp
lea
ret
insl
xor
cmp
scas
mov
mov
iret
lods
imul
ljmp
mov
fchs
inc
out
repnz
sbb
repz
push
mov
pop
add
jmp
or
sbb
and
sub
nop
lds
sbb
fs
test
outsb
inc
nop
xchg
imul
stos
sbb
stc
dec
in
outsl
mov
lret
sub
dec
mov
xor
lcall
pop
cmpsl
lock
mov
xor
xor
outsb
jl
sub
aaa
sbb
loop
dec
das
or
std
xchg
or
clc
sub
mov
dec
fsts
push
paddusb
fcmovbe
mov
sbb
into
xor
sbbl
jge
xor
or
fbstp
sbb
scas
fwait
pop
inc
or
xchg
cli
or
scas
fisttps
adc
gs
adc
rcrb
mov
mov
or
mov
pop
jp
mov
push
mov
pop
shl
insl
mov
clc
ljmp
cltd
lods
scas
shll
push
iret
mov
cwtl
out
lret
scas
in
fcmovnb
mov
scas
cmp
enter
pusha
popa
xor
int3
mov
mov
shrl
dec
sti
dec
arpl
ja
popf
jge
aad
andb
popa
xchg
adc
cmp
es
add
xchg
ret
jp
jl
jbe
jmp
hlt
xlat
mov
xlat
leave
cltd
mov
xchg
inc
outsb
je
int
or
pop
mov
cli
cmp
cmp
xchg
sbb
aam
adc
sahf
jge
pop
sub
mov
les
lcall
adc
sbb
xchg
jmp
stc
dec
fcoml
or
test
prefetchw
leave
push
jecxz
inc
sbb
stos
pop
or
pinsrw
xchg
int
push
je
sbb
xchg
inc
das
fisubs
xchg
aam
inc
fiadds
add
idiv
adc
pop
movsl
mov
js
jno
insl
arpl
adc
ja
mov
loopne
fs
clc
sbb
movsb
movsb
or
or
scas
aaa
das
and
imul
jecxz
es
data16
adc
sub
adc
popa
fdiv
lods
ja
push
rorb
ret
aas
out
push
jl
jle
dec
xlat
popa
push
push
push
xlat
clc
in
or
dec
xchg
pop
test
dec
xor
lret
and
testb
data16
mov
in
cmp
mov
dec
jecxz
jmp
mov
leave
pushf
sahf
cwtl
jle
add
inc
out
sub
sub
lods
les
test
add
dec
loope
cmc
scas
andl
adc
jl
shlb
mov
inc
cmp
add
pop
icebp
xchg
int
fists
mov
mov
jge
dec
ljmp
rorb
lret
lock
jo
lds
pusha
push
or
data16
or
inc
xor
out
hlt
push
mov
cmp
add
add
sub
dec
mov
rorb
xchg
mov
mov
outsl
mov
adc
sub
pop
sbb
xchg
cmpsb
jge
pop
out
aam
xchg
cmpsl
adc
and
jns
ds
jno
nop
into
cltd
push
sbb
or
jecxz
add
pop
mov
testl
pusha
pop
xchg
xchg
xchg
xor
add
shr
mov
popf
inc
and
pushl
call
jge
dec
cmp
inc
sub
mov
shr
daa
test
int
cmp
fistpl
adc
pop
test
popa
scas
out
mov
fsubr
dec
dec
pop
cmp
pop
push
add
or
push
in
popa
and
cmc
jne
in
xchg
mov
push
daa
mov
out
dec
movsl
adc
imul
das
out
movsb
jg
jbe
or
add
mov
pusha
out
sub
cmc
cmpsb
movsb
out
jae
std
push
ficompl
arpl
enter
sarl
divl
decl
sarb
inc
xor
cwtl
xchg
cmc
dec
pop
sbb
mov
cli
loopne
xor
loopne
adc
add
int
cwtl
sbb
mov
xchg
add
hlt
sbb
aam
addr16
sbb
inc
gs
jnp
cmp
fldl
add
inc
add
pop
decb
and
inc
and
mov
rol
std
sub
inc
popf
cmpsb
adc
mov
cmc
push
addb
jo
test
adc
lret
jnp
mov
xor
mov
cmp
popf
in
mov
add
filds
insl
lret
popf
ss
shlb
dec
call
jmp
clc
push
add
shlb
mov
cs
nop
push
dec
jae
pop
cmpb
scas
dec
adc
xlat
lods
xor
fcomi
in
sbb
push
xchg
push
div
mov
rcrb
and
idiv
and
shll
cmp
cmpb
jnp
fucomp
sbb
xchg
mov
jae
test
mov
fmuls
and
mov
aas
mov
xchg
fisttpll
lret
int3
adc
and
je
imul
push
shl
mov
pushf
xchg
loop
xor
mov
dec
lods
imul
outsb
mov
push
dec
jb
mov
enter
pop
ja
sbbb
lahf
mov
mov
xchg
ljmp
movsb
enter
push
fnstcw
mov
mov
jnp,pn
mov
into
sub
mov
mov
xadd
orl
shrb
xor
mov
jae
or
cmpl
aad
cmpl
daa
push
mov
push
scas
iret
push
sbb
mov
pusha
jmp
gs
mov
mov
pop
push
ffree
and
rcll
test
dec
ja
loop
inc
cmc
test
aad
add
or
cmpsb
cmpsb
pop
call
mov
add
pop
shll
add
fadds
stos
and
test
je
xor
mov
xor
mov
mov
daa
in
scas
pop
xchg
mov
xor
xchg
lock
imul
push
ss
sbb
or
movsb
inc
fists
pop
dec
and
adcl
adc
subl
pop
mov
cmpsb
enter
popl
inc
dec
or
addr16
xchg
fists
mov
testl
pop
push
sub
jge
ja
push
mov
ja
jo
fsubrl
hlt
xor
sbb
into
stos
jl
sahf
scas
add
push
inc
pusha
push
xor
loope
sub
mov
in
inc
jnp
jmp
sti
mov
pop
xor
loopne
movsb
sub
enter
xchg
jb
testw
pop
out
test
imul
aaa
inc
push
stos
inc
cld
clc
in
pop
cmp
adc
stos
mov
push
lods
aad
int3
push
jecxz
scas
pop
adc
cmc
sub
movsb
shll
repz
setb
lret
xchg
in
mov
cwtl
mov
lahf
rorl
pop
jmp
out
addb
mov
fs
push
outsb
cs
movb
mov
rcl
or
mov
pop
ret
xchg
lcall
jo
xchg
sbb
decb
inc
lods
jno
xor
dec
xor
fs
lea
or
loop
cs
shll
aaa
das
negb
push
enter
cmp
mov
dec
lret
jl
push
jae
out
fcmovb
jecxz
fwait
pop
xchg
or
add
rsqrtps
push
mov
add
in
mov
jbe
xchg
push
in
push
daa
and
xchg
or
fs
fwait
mov
cmp
jbe
xchg
cmp
scas
mov
fcom
aad
push
cwtl
in
sbb
pushf
push
mov
mov
push
mov
mov
push
outsb
or
adc
sub
mov
mov
push
insl
pop
jnp
ret
push
in
pop
pop
jns
inc
fwait
mov
stos
js
pop
xor
out
dec
jbe
inc
mov
int3
loop
insb
lock
dec
je
add
sbb
imul
pop
push
movsl
mov
insl
jno
pop
mov
xchg
inc
andnps
and
pop
aam
sti
mov
lcall
sub
pop
xchg
scas
ret
mov
test
daa
aam
sti
jno
push
outsl
adc
sti
daa
push
popa
movsb
loop
xchg
push
mov
lahf
sub
xor
jo
sahf
shrl
cltd
dec
clc
sub
cs
repz
push
scas
ffree
push
fisubrl
outsl
testl
dec
je
jb
add
cmp
sub
out
popa
mov
add
ja
es
push
mov
jne
bound
jb
mov
repz
mov
sbb
mov
leave
je
sti
jle
sbb
pop
adc
in
sbb
pop
test
clc
shll
aas
and
lock
xchg
loop
cltd
movsb
frstor
adc
daa
pushl
test
mov
int
lock
push
sbb
pop
inc
mov
sub
iret
lret
inc
int3
repnz
lods
shlb
pop
push
jae
add
cltd
pop
pop
rclb
cltd
scas
ret
and
inc
int3
cld
jo
dec
dec
into
jno
xchg
and
jle
mov
test
enter
xchg
aaa
cmc
out
xchg
hlt
pop
ja
aas
adc
repnz
rorl
cmpsb
lods
push
and
xchg
data16
icebp
clc
in
pop
and
ss
and
arpl
mov
mov
push
outsl
and
mov
jb
mov
cmc
aad
popf
aas
pop
adc
xchg
pushl
mov
mov
test
ss
dec
sti
mov
les
jbe
decb
xchg
outsl
das
add
sti
or
or
pop
xor
aam
movb
into
dec
pop
out
adc
in
cmpsl
push
pop
push
rcr
dec
sub
andl
mov
pushfw
xchg
xchg
push
mov
fwait
std
test
loopne
into
mov
movsl
fistl
dec
hlt
data16
test
fs
xor
xor
mov
inc
fimuls
stc
push
das
inc
xchg
mov
add
into
leave
repnz
mov
insl
insb
sub
or
stc
repz
add
popf
cmp
mov
cli
sbb
sarb
insl
mov
or
movsl
in
aad
jecxz
aam
sub
dec
push
in
fisttps
loopne
mov
lret
mov
pop
aas
ds
jl
inc
fndisi(8087
mov
sub
lahf
mov
repz
int3
mov
jge
cmc
sbbb
mov
rorl
stos
popf
dec
fistpl
jp
adc
int3
nop
aad
shl
inc
mov
sub
dec
stc
mov
ja
inc
out
out
inc
sub
mov
fiaddl
into
add
arpl
jmp
fnstsw
cmpsl
scas
aam
add
fdivrl
test
or
or
imul
in
rorl
xor
in
nop
rol
and
and
js
imul
repnz
sub
sub
enter
dec
mov
mov
outsl
push
popa
insb
insb
sbb
adc
inc
out
sub
sub
or
lods
push
mov
jo
inc
sbb
cmc
add
xorl
cmc
jg
xchg
insl
pop
rorb
inc
ja
js
xchg
push
push
sbb
inc
inc
in
ret
stos
sbb
aam
mov
pop
jbe
and
push
xor
loop
aam
lret
push
ret
dec
sahf
xor
jle
test
scas
mov
xchg
loopne
lret
inc
mov
xchg
iret
cmpsl
sub
push
repnz
mov
xlat
lret
hlt
xchg
cmp
jge
mov
inc
pop
stos
loop
inc
leave
aam
mov
inc
xor
cltd
shl
pop
ja
and
daa
sar
and
shr
cmp
out
cmp
arpl
pop
mov
cld
adc
cmpsl
inc
testl
gs
fsubs
jae
test
xchg
jnp
outsl
sub
push
test
sarl
inc
jge
dec
mov
xchg
mov
xchg
leave
adc
call
push
int3
pop
jl
jbe
jge
in
rolb
test
inc
sbb
jle
pusha
outsl
test
cmp
jmp
dec
cli
scas
or
xor
int3
das
psrad
and
test
outsl
mov
cli
in
cmp
repz
mov
sbb
test
xor
mov
roll
xor
lret
add
not
data16
mulb
lods
out
mov
mov
fnstcw
xchg
dec
push
sbb
int3
iret
pop
test
das
movsl
orb
sar
xor
push
scas
arpl
push
mov
adc
popa
or
ret
lret
sbb
lods
sub
leave
shll
test
sbb
pop
pop
test
dec
xor
dec
xor
mov
add
insb
dec
pop
jmp
jg
jo
icebp
pop
nop
mov
fs
loopne
stos
inc
sbbb
sbbl
or
and
cli
lods
push
add
scas
fsubrs
popa
arpl
and
jns
sbb
cltd
test
cmp
es
xorb
repnz
inc
arpl
stc
mov
jae
jae
dec
inc
call
ret
pop
inc
fcoms
fsubrs
loope
cmpsl
imul
in
push
enter
adc
sub
pop
sbb
xchg
xchg
and
adcb
ds
dec
shlb
jns
iret
push
jmp
addl
sbb
mov
movl
dec
cmp
jg
out
clc
into
and
jge
rolb
cmpb
sub
pop
aas
test
imul
test
xchg
fistps
in
clc
subb
mov
add
push
outsb
enter
xor
mov
addb
movsl
push
mov
popa
xlat
scas
sbb
daa
fimuls
and
xchg
loope
addr16
popf
bound
lret
aas
das
les
mov
ljmp
ret
mov
nop
adc
and
dec
xlat
movsb
sub
andl
pop
scas
sbbl
push
shlb
pop
dec
test
dec
adc
push
std
xor
lahf
dec
jnp
inc
enter
sbb
pop
push
imul
lods
ja
lret
dec
out
sar
pop
push
loop
ss
out
dec
popf
add
mov
das
sub
aaa
ror
or
pop
fs
ret
fmull
in
cli
in
dec
sbb
ret
sbbb
mov
jp
pop
jb
and
dec
cmpsl
std
dec
ljmp
xor
mov
xchg
sub
add
loop
push
scas
jmp
fdivrl
bound
xor
lods
jno
loop
test
pop
dec
test
aad
xchg
test
jmp
jae
xchg
jo
and
cmp
or
jo
sbb
stc
out
xchg
lcall
loop
and
jae
push
test
icebp
mov
stc
push
dec
divps
lods
or
mov
lcall
push
push
test
subl
push
aad
adc
mov
lods
push
ljmp
sbb
in
jle
cmp
inc
icebp
cmp
nop
adc
roll
push
xor
lret
subl
dec
arpl
into
shlb
cld
add
xor
rcpps
fsts
pushf
aaa
orb
push
loopne
xchg
pop
jmp
push
cld
or
adc
fistpl
jp
insb
jle
xor
dec
dec
add
add
sbb
mov
mov
mov
pop
pusha
jns
scas
dec
dec
adc
sbb
loop
sbb
lds
lods
jnp
fwait
out
mov
pop
cmpsl
cltd
jns
mov
sub
mov
or
shl
imul
fildl
mov
mov
mov
enter
xchg
sbb
fisttpll
ret
sbb
imul
push
sarl
jae
in
adc
add
int3
aaa
mov
aad
mov
ret
cmp
push
mov
call
jbe
int3
xor
lret
and
arpl
gs
aam
cmp
xchg
xchg
xor
or
stos
mov
lahf
inc
fdivrl
testb
sahf
and
mov
jle
jae
ljmp
es
jp
lahf
repnz
xchg
or
jae
cwtl
loop
inc
dec
cld
or
shlb
fdivrl
xchg
pop
lea
xchg
mov
das
movsl
int3
aad
hlt
xorb
sbbb
xchg
fidivrl
dec
add
push
data16
cmp
push
jl
mov
mov
fsts
jp
mov
mov
das
or
or
mov
into
popf
lcall
adcl
adc
mov
jge
dec
add
cmp
aam
dec
sub
dec
mov
in
pop
cmp
and
cwtl
dec
xchg
mov
dec
and
add
popf
out
movsb
adc
push
add
cmp
js
enter
or
xchg
roll
leave
dec
inc
inc
mov
test
inc
cmp
or
outsb
insl
shrb
and
adc
bound
lods
jl
imul
icebp
ds
lret
test
dec
lret
repnz
mov
fwait
ja
cltd
fsubrs
jo
aad
mov
dec
jp
xor
repz
pop
data16
popa
xlat
roll
jmp
mov
cwtl
clc
cmp
imulb
sub
cmp
mov
mov
or
and
fs
in
mov
scas
or
cmc
jns
cmp
mov
push
adc
shlb
imul
mov
cmc
in
lret
jns
ret
cltd
cmp
xor
mov
adc
les
fisubs
mov
mov
xchg
dec
mov
cmpsl
stos
xor
shlb
xchg
mov
and
push
inc
jns
sub
popf
xchg
and
inc
fistpl
into
fs
cmp
shrl
pusha
push
mov
or
mov
lahf
or
dec
mov
jne
lds
xchg
pop
loopne
ds
loop
sbb
aas
inc
pushl
fimull
dec
movsb
mov
pushf
xor
daa
mov
rol
cltd
mov
inc
push
stos
imul
or
sub
pop
push
mov
mov
sahf
jp
pop
lock
test
push
sti
and
push
aad
lods
movsl
aas
or
call
adcl
fwait
push
or
cmc
sub
leave
movsb
mov
orb
rol
xor
push
pushf
enter
enter
mov
xchg
mov
jg
add
jo
mov
push
lods
test
aas
fsubl
imul
xor
jo
push
rorb
insb
pusha
orb
test
xchg
mov
aas
jb
mov
pop
shrb
push
jl
bound
inc
inc
pop
sub
pusha
xchg
jmp
and
int3
aaa
stos
daa
fmuls
out
inc
int
repnz
fdivrl
dec
lea
scas
sbb
loope
clc
push
wbinvd
mov
std
lcall
call
repz
lea
int
mov
arpl
popf
xchg
inc
or
add
jno
xchg
je
and
loop
imul
xchg
popf
iret
fwait
rolb
lock
dec
xchg
int3
xchg
arpl
test
xlat
pop
sahf
inc
int
int
test
movsb
mov
or
pop
inc
sbb
xor
jb
mov
cwtl
jle
sub
in
mov
or
aaa
fdivs
dec
push
ljmp
int
mov
or
stc
cs
jne
jno
aam
popf
loopne
repz
scas
stos
movsb
stc
scas
enter
fwait
and
test
loopne
jg
inc
ret
add
mov
test
lahf
add
push
jp
mov
jle
inc
cmp
inc
jecxz
int3
push
xchg
pusha
psllw
ret
xchg
loope
add
clc
push
push
rclb
das
jns
insl
hlt
and
mov
in
cmp
push
cmp
jbe
mov
xchg
add
xchg
cmp
dec
in
mov
pop
add
nop
mov
xchg
xor
pushf
xor
je
jecxz
incl
jecxz
sti
cs
int
lock
ljmp
fsts
outsb
sbb
xchg
fstpl
popa
adc
pop
jp
mov
jmp
cmp
lods
ror
inc
pop
adc
inc
bnd
cmp
inc
cmp
jmp
or
mov
mov
das
nop
in
pop
jg
sub
add
xchg
popf
jg
or
add
dec
stos
ret
aad
sub
insl
inc
addr16
mov
loope
mov
cmp
setl
or
xor
pop
lock
sbb
rcrl
lods
into
loop
sub
dec
sbb
push
mov
es
jp
scas
loopne
mov
mov
sbb
adc
lret
push
fs
cmp
shll
sti
je
mov
roll
out
fwait
sbb
rcr
arpl
and
jbe
push
xor
xchg
push
mov
testb
push
push
mov
sub
xchg
mov
jge
and
das
ret
mov
repz
adc
sahf
add
jmp
leave
inc
jecxz
insb
dec
shrb
sub
shll
in
or
jbe
ret
arpl
sbb
and
lods
in
inc
mov
add
sbb
xlat
repnz
cmc
test
aam
cmp
rolb
push
adc
int3
mov
popa
ret
stc
xor
or
and
fdivrl
jo
call
out
jmp
cli
outsb
or
inc
stc
daa
lret
clc
xor
mov
notb
add
inc
ret
ss
daa
std
xor
loop
fiaddl
mov
shrb
adc
sub
sub
mov
inc
decl
dec
mov
scas
or
stos
loopne
test
jecxz
js
sub
cmpsl
add
jns
sub
xlat
dec
or
push
or
push
pop
mov
mov
sub
in
cmpsl
cmp
push
in
test
out
movaps
out
mov
push
xor
and
push
cmp
cmp
or
pop
aas
sahf
jecxz
pop
xor
mov
adc
stos
inc
cmpsl
add
sub
inc
pop
mov
ja
gs
adc
jmp
mov
mov
cmpsl
jb
dec
data16
or
mov
sub
in
mov
mov
mov
leave
inc
mov
fcoml
ljmp
cmpsb
or
inc
add
shl
inc
jecxz
mov
repnz
repz
ss
je
pop
stos
or
fs
sbb
mov
mov
shr
dec
in
or
mov
mov
cmpsb
xchg
lds
pop
push
mov
inc
test
in
out
xchg
stos
gs
sarl
and
sub
push
sbb
inc
inc
cltd
xlat
push
lret
sar
add
daa
je
pop
scas
xchg
adc
mov
loopne
sbb
pushf
fsubrl
pushf
or
stos
cmpsb
mov
dec
js,pt
jle
jbe
add
and
in
adc
das
imul
int
dec
cmp
pushf
mov
shll
out
and
adc
mov
stc
mov
pop
rcrb
je
clc
repz
int
clc
andb
jo
push
mov
loopne
rcll
and
mov
test
jle
stc
and
inc
clc
lods
mov
add
mov
shl
push
inc
xchg
scas
inc
popf
pop
orl
sbb
mov
int
sbb
stos
iret
jb
mov
cmp
dec
sarl
outsl
dec
sub
sub
add
fcoml
jne
out
add
mov
jne
xchg
lods
and
jnp
mov
iret
jb
js
mov
movsl
pop
rorl
in
lcall
mov
or
fs
push
cs
imul
pop
mov
sbb
sbb
aad
arpl
faddl
lcall
in
mov
inc
cmp
sbb
test
adc
test
loope
mov
lods
mulb
jmp
roll
adc
stos
orb
mov
push
push
loopne
shl
fsubs
cmp
sbb
subl
add
inc
scas
mov
cltd
dec
enter
xchg
sub
add
daa
repz
mov
pop
mov
fidivrs
jnp
call
lock
lods
int
jge
xchg
pop
mov
lret
jg
mov
loopne
mov
pop
imull
stos
aam
or
add
or
push
push
sbb
movsb
or
fildll
inc
xchg
sti
dec
cmp
and
bound
dec
sbb
cld
push
push
push
orb
scas
add
cmp
or
mov
push
xchg
icebp
push
iret
test
call
pop
fiadds
in
lods
cmp
xor
stos
leave
ja
fmull
movsl
mov
cmc
loope
sub
and
repz
and
nop
xchg
sub
inc
js
add
pop
leave
das
insl
invlpg
push
sub
pop
aaa
push
flds
icebp
je
mov
cwtl
fdivs
push
or
outsl
adc
cwtl
xchg
sahf
out
mov
pop
nop
jge
push
mov
sbb
and
iret
mov
xchg
xor
jge
ljmp
sbb
push
jns
sbbb
cmc
sarb
ljmp
cmp
add
int3
fwait
aaa
xchg
sub
cltd
add
adc
in
pop
dec
repz
cmp
jo
lret
loope
bnd
cli
mov
inc
inc
aam
adc
loop
xchg
cmp
mov
jbe
addr16
xor
fisubrl
pop
or
push
loope
jne
mov
inc
mov
hlt
push
and
add
js
movsb
js
and
out
test
sti
and
insl
icebp
mov
test
les
xchg
aam
jp
idiv
inc
push
orl
xchg
out
adc
cmp
xchg
loopne
in
call
hlt
fstpt
test
mov
mov
push
or
mov
jl
cld
aam
into
pop
push
push
movsl
cli
mov
xor
sub
cli
mov
sbb
xor
sbb
mov
les
pop
lds
mov
je
mov
inc
xchg
cmp
test
cld
xchg
cmp
push
jp
adc
xchg
cmpsb
inc
ds
ja
cmp
sbb
pop
xchg
dec
mov
mov
lret
push
repz
andl
mov
dec
adc
push
repz
cmp
in
and
push
fstps
xchg
cli
xlat
repz
dec
lcall
dec
in
cltd
loop
lea
jle
pop
push
adc
xchg
cmpsl
mov
pop
xlat
js
adc
shlb
xlat
sarl
mov
iret
cli
ret
cmp
loope
out
pop
push
stc
mov
cmp
jae
jnp
fsubs
mov
imul
xchg
in
mov
add
and
adc
ljmp
pushf
dec
ja
shll
mov
adc
call
call
test
sub
mov
push
mov
stc
pop
add
incl
out
push
je
je
mov
jg
jae
or
push
mov
scas
push
data16
lea
shrl
aam
movsl
sub
sub
movsb
pusha
fstl
test
int
adc
mov
mov
xchg
filds
loopne
sub
test
pop
mov
test
addr16
aad
cwtl
or
icebp
mov
cli
xchg
sbb
out
jle
pop
repz
es
dec
xchg
cwtl
cli
mov
xchg
mov
in
pop
mov
jbe
jle
pushf
mov
dec
pop
xchg
inc
es
and
aas
jg
lahf
mov
pusha
sbbb
xchg
mov
pop
push
xlat
pop
popa
lock
push
inc
push
lock
cs
xchg
adc
cld
movsb
test
test
stos
scas
insb
xchg
out
lret
adc
stos
xorb
stos
test
dec
psubd
rorb
inc
mov
sbb
fs
push
push
outsl
sti
mov
sub
xchg
lahf
jp
scas
or
mov
adc
and
inc
mov
int3
repnz
cli
and
repz
frstor
sbb
shl
cmp
es
mov
movsl
ret
add
lods
movsb
pop
mov
cmp
into
or
sti
pop
jl
std
sbb
outsb
inc
test
xor
mov
mov
push
gs
sub
jae
xor
pop
jecxz
std
movsb
sub
inc
add
or
push
test
aas
test
cmp
test
insl
fcompl
and
xlat
sbb
adc
mov
xchg
test
xor
cmpsl
xchg
push
cmp
fstpl
je
push
cmp
cmc
push
out
sub
jo
insb
jge
add
loope
fisubrs
into
push
lods
add
js
add
bnd
pop
sahf
icebp
lock
sti
cmp
out
mov
lahf
pop
mov
hlt
lea
popa
outsl
xor
push
hlt
mov
xlat
pop
xor
adc
outsb
sbb
mov
add
lahf
jmp
cmp
add
cli
mov
stc
je
fisubs
lahf
pusha
std
dec
xlat
imul
pop
lock
mov
stos
adc
les
xor
and
xor
loope
pop
dec
pushf
mov
movsb
jp
out
nop
sub
movsb
and
push
shrb
mov
insl
cli
push
sub
lret
aas
cmp
bound
sbb
test
repnz
inc
scas
sub
pop
fstp
inc
scas
std
int
hlt
mov
dec
mov
jno
mov
add
test
insb
std
popa
sub
int
fmuls
in
inc
inc
into
and
scas
fcoms
in
lock
cwtl
xchg
pusha
xlat
mov
xchg
mov
rorb
mov
test
fucomip
jne
fcmovnu
push
mov
sbb
and
inc
dec
es
jns
and
pop
lret
jo
xchg
aad
push
enter
adc
hlt
sub
pop
push
or
push
mov
pusha
add
enter
lret
lret
pushf
adc
sbb
pop
jnp
aaa
mov
repnz
sti
movsb
outsb
pop
negl
xor
cld
and
daa
mov
daa
mov
lds
jle
or
xchg
fwait
es
jnp
pop
mov
outsl
or
sbb
inc
push
jecxz
aad
popf
fucomp
cmp
add
cltd
test
nop
sbb
in
inc
dec
cltd
inc
mov
or
and
mov
ret
cmp
cmpsb
gs
push
xchg
mov
icebp
pusha
in
scas
arpl
mov
ss
mov
lret
mov
fidivs
jecxz
or
xchg
sub
sub
jae
scas
into
mov
les
stos
pop
inc
shll
ss
js
push
push
fildl
outsl
movsl
xchg
inc
imul
addb
shll
mov
or
mov
mov
idivb
notl
cmc
jne
fiadds
inc
repz
repz
loope
jno
movsl
sbb
cmc
xchg
sub
add
dec
mov
mov
sbb
sub
or
push
lahf
sbb
add
mov
js
icebp
enter
sbb
pop
sub
sub
mov
pop
icebp
insl
popa
mov
in
addr16
imul
cmp
scas
xchg
cltd
insb
xor
add
mov
add
fwait
cmp
aam
xor
cld
add
mov
cmp
out
add
cmp
scas
addb
cmp
lods
fsubrs
sti
xchg
mov
enter
dec
mov
ja
inc
orps
jnp
sub
mov
stos
jp
mov
jecxz
negb
mov
insb
jge
push
dec
mov
fidivl
cmpsb
or
mov
into
cmp
rolb
xchg
mull
lds
shll
cld
lea
mov
jnp
xchg
or
pop
icebp
adc
cmpsb
adc
sahf
push
imul
pop
dec
ja
inc
mov
jmp
div
xchg
and
outsl
inc
push
popf
lahf
cmp
push
cli
fsubrl
mov
sahf
sbb
push
cmp
nop
mov
sar
dec
pop
and
insb
mov
fidivl
loopne
add
popf
add
jb
jno
mov
mov
scas
lock
dec
cli
les
add
repnz
adc
or
lahf
repz
repz
roll
scas
cmp
cmpsl
pusha
es
icebp
mov
jae
push
insb
xchg
mov
lahf
std
fwait
adc
sub
in
std
xchg
or
out
jnp
inc
fimuls
pusha
mov
push
adc
push
inc
fwait
and
sub
sbb
ret
push
out
or
sarl
mov
test
fmull
xchg
mov
sub
push
sbb
in
add
jno
and
std
xor
mov
jmp
mov
mov
lods
jo
push
or
repz
hlt
push
lcall
jo
mov
movsl
sti
mov
into
jg
xor
sti
ja,pn
cltd
push
cmpsl
or
xchg
pushf
add
inc
pop
dec
dec
push
scas
rol
mov
lcall
subl
push
aaa
mov
ljmp
push
sbb
addr16
dec
dec
jle
push
inc
add
sub
lock
aad
cwtl
add
testb
loope
movsl
jge
push
loopne
push
or
cwtl
popf
std
pusha
sahf
mov
aad
aas
push
pusha
xchg
cmpsl
mov
xlat
sub
int3
xchg
sahf
js
adc
mov
pusha
in
insl
insl
dec
mov
mov
dec
jle
xor
aas
mov
push
push
test
or
insb
jne
sub
pop
pop
or
cli
xchg
pxor
sahf
cmp
mov
pop
xchg
jmp
sahf
dec
dec
cmp
in
stc
fwait
lods
mov
add
lahf
inc
mov
or
gs
and
jp
or
cmp
or
jne
mov
jbe
adc
inc
pop
pop
or
jns
mov
xor
jns
adc
xor
add
cltd
sbb
loopne
or
lret
ret
push
ss
cltd
sub
inc
decb
push
loop
mov
inc
outsb
lock
inc
push
jle
mov
imul
test
or
mov
sbb
adc
enter
cmp
sbb
xchg
dec
aad
out
repz
loopne
mov
xchg
scas
sarl
and
add
push
ret
add
cmp
mov
pop
xchg
sbb
in
mov
sahf
add
sub
inc
stc
xor
fisttpl
int
movsl
xor
push
sbb
sbb
mov
and
xor
xchg
frstor
inc
mov
ja
jo
or
mov
lea
js
cmpsl
mov
or
add
lds
in
andl
int
jg
push
fsts
jle
jl
adc
and
loop
xlat
frstor
push
iret
add
xchg
faddp
mov
sub
xor
loopne
lods
mov
cltd
sti
ljmp
push
xchg
pop
adc
dec
aam
int3
hlt
sub
push
add
jne
mov
jge
jns
adc
dec
cmpsl
leave
inc
mov
adc
mov
jb
call
fstps
lea
xchg
mov
lcall
btr
icebp
mov
leave
les
data16
and
aad
rclb
insl
xor
test
vcvtss2sd
pop
inc
and
popa
adc
and
xor
outsl
cld
dec
xchg
rcr
stc
or
push
movsl
loope
ljmp
imul
in
mov
out
test
enter
mov
xchg
mov
out
lcall
mov
data16
push
mov
mov
and
icebp
and
mov
loopne
inc
adc
mov
lret
cmpsb
xchg
lea
fwait
lcall
and
fs
mov
sub
sub
jno
jl
lods
pop
cmp
je
sbb
add
and
stos
cmpsl
xchg
push
jbe
stc
pushf
dec
inc
cmp
add
cmp
xchg
xor
scas
push
push
push
jg
adc
sbb
pop
das
aas
imulb
aaa
sub
cmc
pop
sbb
lret
jne
mov
mov
icebp
das
adc
inc
loop
push
sbb
leave
push
aam
cmpsl
sub
fisubrs
loope
fsts
mov
mov
loopne
icebp
pop
mov
cmp
xor
bswap
xor
mov
fcompl
sahf
jnp
sub
or
xchg
test
in
add
push
pop
arpl
sub
pop
pushf
loopne
push
fidivrl
xchg
imul
lods
jge
cmpsl
and
loop
pop
cltd
lock
xlat
clc
cmpsb
pop
das
mov
adc
insl
imul
arpl
fdiv
or
out
mov
adc
scas
aam
bound
dec
rclb
jmp
das
ljmp
mov
pushf
inc
pop
sbb
pusha
js
es
or
sub
cmp
icebp
push
setb
dec
enter
dec
sbb
mov
jg
in
call
inc
mov
sub
and
sti
and
add
jns
loope
or
pop
mov
das
or
sbb
ljmp
and
outsl
xor
sub
jbe
sub
or
mov
ret
push
mov
ffreep
xchg
sar
mov
cmpsb
leave
rcrb
inc
fdiv
cmp
cmp
jg
inc
jne
loope
sub
sbb
pop
sub
mov
notl
or
push
arpl
xchg
xchg
repz
loop
xlat
mov
pushl
mov
or
sub
push
repz
and
push
push
push
add
and
es
cltd
enter
pop
lahf
insb
cld
adc
into
shll
cmp
jne
inc
dec
rclb
incl
sub
jmp
push
pop
push
leave
cld
lcall
pop
and
sub
jns
aam
cmpsb
mov
pop
rcrl
int
adc
cmp
out
shrl
aam
jmp
lret
xchg
sbb
repz
fucomp
sbb
xchg
fwait
adc
or
and
jmp
mov
sbbl
pop
jno
ja
sbb
jnp
fsubrs
lea
add
or
jno
xchg
imul
int
stos
push
cmpsl
push
xchg
jno
aaa
into
imul
bound
dec
mov
sarb
cli
mov
shll
mov
sub
dec
mov
outsl
cmpsl
or
push
out
sub
int
stc
repz
add
pop
loope
inc
add
jae
sub
addl
jne
lods
xorl
mov
jge
adc
stos
cld
js
pop
into
mov
mov
push
sub
push
dec
popf
lds
jb
out
ret
aad
loopne
mull
outsb
sbb
ret
pop
sarl
mov
mov
mov
adc
or
adc
push
sahf
es
add
mov
cmp
cwtl
xchg
jns
jmp
test
mov
adc
adc
shlb
and
xor
ret
incb
adc
mov
out
mov
mov
cltd
xchg
jecxz
xor
cmpb
or
and
mov
mull
lcall
and
jo
sub
sub
push
stc
xor
push
imul
xor
xchg
rol
push
incl
js
inc
hlt
pop
ret
mov
mov
push
stos
push
jecxz
mov
jl
and
rcrl
add
scas
clc
pop
lret
les
jmp
hlt
push
test
js
push
out
adc
jle
movsb
xor
cli
inc
scas
mov
sub
dec
pushf
or
in
push
pop
inc
push
mov
cmc
inc
pop
iret
cmpb
aas
int3
or
cmp
adc
sbb
mov
pop
adc
mov
pop
cmp
and
pop
pop
inc
inc
pop
std
push
mov
popa
into
out
ja
shll
repz
rclb
popf
es
push
shll
je
stos
popa
mov
shl
clc
sub
orb
adc
dec
mov
leave
cmp
mov
cmpsl
jg
call
clc
mov
inc
adc
fcomi
loopne
xorl
out
es
lahf
mov
xchg
addr16
mull
jp
sub
imul
inc
jns
ljmp
dec
mov
clc
out
inc
test
out
xor
aas
mov
mov
lahf
fisttps
psraw
xlat
stc
sahf
lds
mov
inc
or
xor
sub
jo
add
ljmp
mov
push
insl
shl
inc
fisubl
popa
imul
xor
jecxz
jns
cli
in
leave
pop
mov
pusha
mov
adcl
inc
cwtl
outsl
repz
in
push
mov
pop
jb
cmpsl
int3
fidivrs
lret
pop
in
and
push
dec
push
xchg
out
das
test
adcl
add
jb
insb
fwait
adc
adc
imul
xor
call
in
aaa
cmpb
dec
adc
sarb
mov
push
dec
filds
in
lahf
and
mov
mov
pop
sub
sbb
leave
cmc
sub
add
add
pop
subl
mov
jns
in
inc
aas
adc
leave
call
aas
adc
mov
inc
enter
scas
outsl
jno
out
xchg
push
xor
int
shll
sbb
or
jbe
loopne
sub
decl
pop
mov
popf
into
inc
loope
popf
push
imul
addr16
inc
mov
mov
ror
xchg
push
ret
adc
xchg
pop
xchg
mov
fildl
pusha
fisttpll
sub
cmp
push
or
arpl
fildl
cmp
jne
out
pop
or
mov
inc
pop
adc
adc
pushf
scas
out
in
rcrl
push
cmpsl
cmp
aam
jno
add
pop
pop
or
dec
push
jp
dec
lds
sbb
mov
in
sahf
jmp
push
dec
xchg
int3
pop
inc
or
pop
clc
and
loope
stos
scas
dec
mov
mov
inc
cmpsl
push
mov
and
push
sbbb
push
push
push
daa
xchg
xchg
push
or
jl
or
mov
sub
xchg
movsb
inc
fnsave
pop
loopne
jmp
xchg
pop
orl
mov
cmc
jp
clc
xor
or
push
fldlg2
ret
add
aaa
lahf
je
loope
mov
in
adcb
lret
dec
dec
insl
inc
repz
stos
cs
out
das
hlt
jb
inc
push
test
enter
dec
cwtl
mov
leave
xchg
daa
cld
adcb
mov
push
rorl
add
fisubs
and
xchg
in
out
ret
mov
test
sub
enterw
test
adc
adc
out
test
jmp
jnp
push
mov
cmp
pop
jae
pop
leave
push
aas
pop
sbbl
out
shrb
aam
adc
add
hlt
dec
xchg
mov
ret
and
lret
rclb
mov
mov
call
mov
loopne
mov
mov
out
jns
je
cld
jg
jecxz
xchg
xor
std
jb
xor
pop
lea
popl
bound
sahf
mov
imul
pop
fisttps
aaa
je
mov
daa
pusha
add
cmpsb
mov
cmp
jns
fidivrs
pusha
nop
jbe
dec
aam
stos
sub
push
push
xlat
ljmp
sbb
ss
sub
jns
sbb
mov
and
jbe
jbe
push
cmp
imul
cmp
in
inc
cmp
mov
jp
sub
adc
xchg
lcall
mov
mov
cmp
xchg
lods
imul
lcall
fdivl
push
adc
sub
scas
lret
popf
and
mov
mov
out
stos
or
inc
push
xchg
jns
iret
cmpsb
and
mov
dec
xor
ljmp
fdivrp
out
sbb
sbbb
dec
outsl
xlat
lods
xchg
rcrb
pushf
cmpl
xor
adc
idivl
add
xchg
orb
sarb
add
and
enter
mov
dec
icebp
pop
shlb
mov
inc
movsb
out
push
popa
dec
and
mov
ds
pop
sbb
popf
xor
lret
pop
jmp
test
test
jnp
imul
pop
sub
pop
mov
fs
adc
rolb
addr16
xchg
dec
inc
fwait
negb
lcall
jp
std
push
stos
sti
pop
leave
add
test
xchg
dec
mov
out
out
xor
jp
repnz
push
js
push
push
call
stc
add
movsb
int3
fmul
mov
pusha
dec
outsb
sub
xor
aam
and
es
imul
dec
test
pop
push
shlb
in
insb
test
cmp
add
add
out
or
jg
mov
rcrl
cmp
adc
test
inc
dec
inc
pop
iret
inc
in
repz
outsl
sub
cmp
bound
sub
imul
jne
iret
xor
adc
aad
shll
push
aam
add
pop
cmpsl
clc
cs
call
pop
sub
push
jle
shll
outsl
push
test
jge
rcrl
sbb
shl
stos
mov
push
xchg
ds
cld
das
or
enter
dec
jae
outsb
repnz
popa
rcrl
sbb
data16
mov
push
aas
push
pop
xchg
add
pop
movsl
into
lahf
insl
xchg
dec
xchg
cmc
in
inc
mov
aas
hlt
jae
lcall
add
fwait
xchg
push
mov
mov
fucom
inc
mov
ret
push
imul
xchg
push
pop
in
jne
icebp
mov
insb
fistpll
add
clc
xchg
scas
cmc
jl
fstpt
and
test
nop
addl
insl
cmp
mov
insw
pop
xor
popf
inc
or
sub
test
in
sbbb
call
sub
pop
cmp
out
cmp
stos
push
hlt
push
push
push
data16
ljmp
js
push
iret
loopne
fbld
das
sbb
popa
sbb
sbbl
xchg
push
sub
mov
cmp
inc
xor
push
aam
mov
stc
add
in
nop
cld
ljmp
sub
add
mov
xchg
clc
test
dec
cwtl
push
negl
or
call
fnstenv
lea
inc
scas
dec
icebp
jns
rcll
lcall
and
jno
sarl
dec
ret
or
xor
fcmovbe
pop
mov
sarb
int3
lea
adc
push
pop
rol
mov
das
out
aaa
jae
and
lcall
out
mov
cs
push
in
test
test
test
mov
sahf
xchg
fcom
fcomps
in
pop
and
xor
das
lock
daa
mov
inc
xchg
dec
insl
push
mull
mov
adc
ffreep
dec
outsb
xor
cmpsl
loope
mov
lahf
cmp
sub
ror
jge
xlat
mov
orl
inc
outsl
addr16
cmc
rcll
pop
ds
jno
rcll
fisubs
scas
pop
sbb
xchg
scas
lods
push
cmp
sbb
sub
es
dec
and
xchg
rclb
xor
push
mov
leave
mov
lret
pop
pop
dec
jns
pop
jae
mov
popa
push
add
push
scas
int
lods
test
xor
sub
shr
dec
jnp
repnz
cmp
push
dec
lds
std
fisttpl
insb
push
push
or
nop
fwait
iret
inc
rorl
repnz
add
pusha
ficoml
pop
push
add
pop
stos
je
pop
cmpsl
adc
cld
jge
addr16
push
cltd
dec
test
mov
repz
jns
push
push
jmp
fldl2e
cli
leave
gs
mov
cmp
jae
add
mov
aaa
mov
orb
rol
dec
outsl
bnd
rorb
ret
repz
fsub
or
je
jge
in
mov
add
push
test
inc
pop
stc
js
call
sub
dec
pop
rolb
ljmp
jmp
imul
jl
mov
mov
das
nop
add
popf
aas
clc
leave
pusha
inc
jle
js
rcr
flds
loopne
loop
push
dec
lds
rclb
xor
xor
and
les
dec
cwtl
es
mov
clc
fldl
mov
imul
xchg
mov
daa
repz
pop
pop
cmpsb
xchg
pop
mov
fdivl
inc
test
fucompp
into
pop
pop
jg
adc
mov
insl
mov
mov
shld
out
dec
mov
scas
les
cltd
cmp
sahf
fwait
repnz
mov
add
rol
outsl
mov
mov
push
sahf
push
xchg
jl
andb
mov
stos
mov
les
adc
jmp
adc
mov
movsl
jle
push
sbb
in
pop
add
imul
and
xchg
mov
add
inc
int3
insb
inc
inc
push
adc
aam
push
call
stos
mov
or
dec
mov
jo
cld
mov
dec
out
les
in
push
add
mov
cmp
repnz
lods
arpl
ret
push
lret
sbb
sub
mov
je
pop
xor
stos
push
xchg
test
fwait
mov
test
imull
lcall
or
stos
movsb
imul
add
out
pop
pop
ljmp
mov
aaa
cs
and
push
pop
insb
fldenv
mov
mov
outsb
addl
or
insb
add
inc
in
mov
nop
stos
mov
std
push
clc
stos
sub
lret
xor
aaa
ja
lock
addr16
mov
sub
mov
inc
adc
incb
dec
popf
xchg
sub
in
cmp
push
mov
jmp
fidivrs
sub
adc
sub
or
ret
xchg
sti
mov
xchg
sub
xchg
sbb
and
jns
repz
addr16
push
adc
fstl
call
enter
mov
xchg
inc
out
dec
jae
push
xchg
sbb
sbb
aad
sbb
mov
lods
icebp
out
jno
or
std
dec
xor
ja
sub
lcall
fsubs
or
mov
sbb
test
jnp
shlb
int
test
hlt
xchg
sbb
out
leave
aad
iretw
cltd
push
popa
in
das
mov
into
das
movsb
arpl
ljmp
mov
xlat
mov
and
int3
adc
or
xor
add
das
jne
xchg
shll
std
inc
leavew
imul
jmp
jo
loope
push
lds
mov
scas
aas
xor
inc
adc
insl
aas
xchg
xorl
js
clc
out
lcall
pop
jne
je
shll
int
sbb
aam
lds
jo
lcall
imul
movl
nop
lret
jmp
popl
jb
mov
dec
out
loope
arpl
and
ffree
out
cmp
fiadds
sub
sbb
pop
pop
pop
pop
js
add
pop
sahf
mov
adc
or
lret
cmpsb
inc
xchg
pop
lret
stos
fwait
mov
cs
inc
dec
sbb
or
pop
and
rolb
mov
aas
add
sbb
and
mov
testl
jns
pop
or
std
aam
fisubrl
sbb
add
mov
movsl
push
hlt
xchg
std
nop
inc
jg
insb
push
cmp
mov
leave
jb
gs
inc
inc
xchg
in
mov
shlb
movsb
inc
stos
push
shlb
pop
aam
test
lahf
lods
xchg
test
ljmp
jns
cmp
push
jb
dec
xor
leave
sarb
sub
inc
jmp
cmp
inc
aas
lret
inc
push
mov
pop
or
pop
lcall
stos
adc
in
lcall
pop
mov
bound
sub
cmp
jns
in
mov
cli
mov
adc
mov
sbb
fwait
sbb
vshufpd
ret
jb
sub
fst
mov
xchg
daa
dec
sar
lret
outsl
test
xchg
mov
xor
test
adc
xchg
or
inc
jnp
in
inc
nop
pop
mov
je
test
xchg
sbb
popa
lret
mov
dec
loopne
pop
mov
pop
test
cmp
enter
aad
inc
pop
or
pop
sbb
and
movsb
xor
stos
int3
xchg
push
repnz
xor
fnstenv
adcb
xor
lea
mov
pusha
sbbb
gs
imul
sbb
mov
icebp
repnz
decb
mov
psubusw
inc
sbb
jl
test
lods
xchg
and
sbb
push
lock
fidivrl
sub
lds
insl
or
push
dec
out
das
pop
sbb
movsl
pop
mov
push
arpl
loop
xor
test
mov
dec
and
lret
inc
or
or
fsubrs
push
xchg
adc
dec
pusha
sub
add
loopne
adc
dec
fmull
shrb
mov
lahf
ror
imulb
sahf
mov
int
jecxz
and
jmp
mov
mov
dec
sub
ds
xor
cs
clc
rolb
xor
jmp
imul
push
push
cmp
call
adc
xor
mov
aam
in
or
js
std
outsl
and
lds
adc
sub
sub
or
mov
pop
or
shll
pop
mov
outsl
je
xor
jle
fs
pop
pushf
mov
adc
lds
sub
ja
loopne
push
xchg
inc
mov
jno
loop
scas
add
aaa
and
push
sti
imulb
flds
cmp
add
daa
into
xor
xchg
adc
pop
hlt
or
fcomi
or
xchg
jb
push
imul
lret
jmp
lock
jp
add
mov
rclb
mov
ret
ljmp
les
jb
add
sub
adc
adc
mov
aas
test
and
ljmp
adc
lea
stc
in
mov
push
fdivrp
mov
jne
dec
inc
hlt
test
sbb
ret
add
aam
mov
adc
into
negb
cli
and
nop
mov
cmp
xor
xchg
out
jbe
cli
dec
mov
xchg
push
test
pop
ja
cltd
mov
inc
add
dec
int
push
int
cmp
mov
push
lret
add
stos
repnz
cmpsb
jl
push
push
pop
mov
mov
xorl
repz
add
sbb
sub
sbb
jae
bound
sarw
repnz
add
cmc
popa
xlat
hlt
mov
mov
pop
pop
mov
or
pop
mov
adcb
stos
hlt
lcall
push
push
arpl
xor
jb
pop
scas
stc
jno
xchg
push
cmc
pop
popa
int3
pop
in
mov
int
mov
pop
mov
sbb
xor
add
inc
stos
jge
into
ds
fwait
xlat
push
out
ja
test
fldcw
dec
bound
or
dec
sub
pop
or
mov
mov
add
cwtl
mov
pop
pop
xor
mov
outsb
lret
notl
mov
xor
mov
pop
scas
stos
aaa
pop
aaa
jecxz
and
xchg
enter
sub
inc
add
iret
out
xor
push
or
test
enter
ffree
test
jnp
dec
imull
push
dec
pop
sti
cwtl
jmp
xor
lret
loope
out
test
xchg
in
and
inc
fisubrl
shlb
or
sarl
adc
adc
mov
add
pop
xor
notrack
dec
in
neg
rcl
outsl
scas
lret
es
ja
repnz
xchg
shrb
sub
movsl
std
pushl
xchg
pop
jbe
arpl
xchg
xchg
sbb
mov
mov
sbb
mov
pop
lods
call
xchg
or
leave
jmp
jnp
movl
adc
push
adc
mov
icebp
push
dec
mov
lods
adc
hlt
clc
sub
incb
iret
subl
and
mov
mov
or
push
roll
lods
lods
adc
or
jl
jmp
push
jnp
pusha
push
out
cltd
sub
cwtl
add
icebp
into
js
mov
or
dec
or
cmp
xor
dec
stos
jae
xchg
lds
movb
add
pop
scas
test
testl
lock
xchg
mov
loop
jne
adc
js
pusha
pop
lret
jge
sbb
inc
out
and
sbb
pop
xlat
call
mov
je
xor
sarb
or
bound
fldcw
mov
dec
dec
push
mov
jno
add
sbb
mov
sahf
sub
rorb
jo
aad
scas
outsb
test
xor
cmpsl
mov
dec
cld
stos
mov
cmpsb
sbb
mov
adc
mov
scas
adc
xor
mov
jmp
orb
pop
sbb
push
shrb
into
aaa
in
iret
in
sub
aad
mov
pusha
or
cs
lods
sbb
sbb
movsl
pop
xor
mov
andb
push
mov
sahf
jle
dec
cmp
in
orl
mov
add
jne
mov
call
sti
in
jns
pop
pxor
mov
iret
mov
fiaddl
inc
fsubl
inc
push
dec
int
into
mov
push
lods
enter
sub
shll
insb
arpl
fs
adc
adc
cmp
lcall
push
xchg
or
fwait
shrl
in
cwtl
mov
dec
xchg
outsb
sbb
pop
mov
andl
add
sbb
rolb
push
or
xlat
or
pop
or
popa
nop
pushf
and
stc
jl
fsubrl
adc
pushf
and
test
ret
sub
mov
or
shr
outsl
decb
adc
mov
inc
cmp
push
mov
mov
int
cwtl
inc
xchg
dec
or
or
movsl
sbb
mov
out
lret
mov
call
leave
inc
pop
pop
test
jae
gs
xchg
push
das
xor
out
into
add
mov
mov
inc
cld
les
push
adc
mov
xchg
inc
scas
pop
push
mov
repz
lret
aam
mov
ss
insl
repz
outsb
or
inc
jns
mov
push
rcll
pop
dec
rcrl
jns
fsubp
or
jbe
and
jg
xchg
cmc
jle
into
and
mov
pop
pop
mov
mov
xchg
jl
inc
inc
ror
and
aad
pop
push
jne
fstpt
dec
decl
fldl
inc
or
rorb
imul
xor
ja
cmp
mov
push
or
push
adc
cmp
cmp
push
mov
inc
aam
lds
icebp
mov
adc
add
daa
mov
hlt
jo
push
nop
sbb
add
test
inc
inc
fs
call
popf
call
push
jp
lods
sahf
iret
and
hlt
mov
pop
inc
inc
cmp
mov
mov
cmp
push
xchg
fstps
pop
mov
mov
dec
push
lds
sub
pushl
aas
push
or
jne
inc
out
mov
fwait
lods
hlt
pop
rclb
push
pop
pop
rcrl
loopne
mov
sarl
push
in
cmp
cmp
jle
mov
cs
adc
ret
sub
sbb
fcompl
arpl
cltd
xchg
out
mov
nop
lret
jl
cmpsb
out
sar
inc
rorb
or
enter
sbb
in
fs
push
or
out
push
dec
and
stc
out
add
xchg
adc
add
sbb
test
mov
cwtl
lahf
ret
sub
mov
push
cmp
sbb
ja
fldenv
cmp
mov
out
repnz
hlt
mov
movsl
xor
loopne
xor
lret
xchg
mov
xor
psubusb
pop
lea
or
fs
fld
lock
aaa
add
sbb
cld
push
jl
cltd
add
mov
jl
lea
std
jp
popa
mov
in
xor
outsb
cmp
lret
pop
lea
jnp
imul
jge
pop
sbb
fmuls
clc
cmp
das
int
adc
jp
ds
stos
add
xlat
jge
sub
adc
jo
jl
jle
mov
or
mov
jae
mov
test
mov
cmp
mov
rol
test
rcrb
push
je
add
ljmp
jecxz
sub
sub
hlt
or
push
mov
jns
pop
test
jmp
loope
hlt
cmp
pop
sub
inc
fildl
fstpl
nop
loopne
push
mov
repnz
pop
rorl
bound
pushf
movsb
imul
jb
lods
sahf
xchg
outsb
xor
mov
inc
mov
add
pop
fyl2x
xor
ret
jae
xchg
sub
sbb
mov
pop
int3
cwtl
sbb
lahf
cmpsb
aad
xchg
addr16
adc
fcompl
mov
sbb
stos
mov
outsb
out
jl
and
popa
jne
mov
push
dec
adc
jl
decb
int
mov
shlb
gs
movsl
xor
outsl
jnp
inc
cltd
pop
push
mov
daa
lcall
inc
mov
aam
mov
fsubs
shll
push
sarl
xor
testl
stos
pop
js
rcl
sahf
push
insb
mov
pushf
gs
lods
int
mov
jnp
jge
popf
mov
jp
xchg
mov
jo
jno
add
loop
out
inc
fsts
shll
push
fs
jbe
xchg
push
shr
popf
add
cmp
int3
mov
ss
cmp
add
pop
cltd
add
mov
rcrb
inc
cltd
mov
sbb
add
in
divb
adc
test
xchg
dec
mov
cltd
shl
add
outsl
bound
shrb
mov
enter
jbe
and
clc
jle
mov
pop
outsb
aam
inc
outsb
jnp
jnp
mov
jl
sbb
mov
mov
repnz
jg
scas
data16
scas
stos
daa
popa
lret
cli
loop
je
repnz
fldenv
or
jne
push
in
dec
ret
mov
daa
jne
inc
js
sbb
repnz
enter
sub
sbb
mov
test
adc
xor
jmp
imul
sbb
mov
mov
pop
mov
bound
movsb
dec
ds
mov
adc
popf
xchg
push
add
out
xchg
aad
ret
push
repnz
fcompl
push
out
cwtl
int
pop
andb
mov
mov
fisubrl
jl
fdivr
mov
xchg
xchg
xor
sub
push
scas
dec
ffree
push
cmp
xlat
rcr
cmpsl
loopne
hlt
and
daa
mov
dec
in
shl
jbe
imul
mov
sub
inc
test
mov
and
aas
mov
fsubl
sarl
movsl
mov
adc
push
sbb
adc
enter
test
inc
movsb
imul
es
rolb
pop
sbb
cld
cmp
inc
adc
and
stos
push
ret
push
leave
pop
fiaddl
jle
sbb
mov
cmpsb
sarb
jne
mov
pop
cmpsb
and
mov
lds
movsb
xor
xor
call
addr16
or
into
mov
push
cmp
xchg
cmc
scas
sbb
es
enter
or
inc
and
mov
lret
fmull
jl
mov
mov
out
dec
cwtl
insl
loope
je
inc
out
cmp
aas
inc
filds
negl
enter
push
js
addr16
inc
jecxz
ret
cmpsl
xchg
stos
cld
push
test
repnz
sbb
xchg
cmpsb
pushf
arpl
jne
sub
sub
jg
pop
in
xlat
mov
push
add
sbb
inc
mov
out
sbb
dec
mov
jb
out
dec
jl
ret
icebp
sub
dec
out
or
test
lock
cli
lods
pop
addr16
pop
outsb
and
mov
xchg
sub
inc
fdivs
add
pop
dec
mov
das
xlat
and
lds
push
cs
ljmp
out
insb
aam
jno
xchg
pop
pop
cli
sti
xchg
inc
stos
cli
lret
jns
jmp
jae
lock
fwait
push
mov
imul
lret
mov
sub
inc
aam
loopne
pop
movsb
mov
punpckhwd
jnp
and
jbe
mov
lret
popl
xor
jbe
std
sub
xchg
adc
mov
mov
mov
test
loope
add
lret
jle
mov
push
mov
inc
jns
cltd
push
dec
mov
inc
push
fs
pop
nop
cmp
push
lock
mov
push
push
jmp
add
lods
insl
cmp
imul
xchg
xchg
repz
jle
daa
movsl
jl
and
movsb
dec
sbb
push
fs
repz
mov
insb
jmp
je
or
out
fbld
dec
cmp
push
lods
jge
outsl
leave
wbinvd
out
push
cmp
cmp
mov
lret
add
or
sub
insb
pop
cltd
sub
mov
pop
pop
outsl
loop
inc
and
sub
dec
xchg
xchg
push
cwtl
orl
xor
sbb
ret
fisubrs
xor
jmp
lods
cltd
xchg
and
test
and
ljmp
dec
adcb
xchg
dec
rcl
or
stos
fwait
add
or
pmaxub
sub
dec
icebp
pop
outsl
xchg
cs
and
and
fdiv
repz
or
outsl
cmp
or
stos
push
iret
jnp
xchg
dec
sar
and
add
push
or
test
test
add
add
lds
dec
int3
mov
mov
dec
cmp
outsl
ret
nop
inc
dec
stos
lods
cs
or
inc
adc
pop
mov
int
xchg
dec
dec
pop
add
loop
sbb
das
or
pop
jbe
sub
cmp
in
mov
lods
repz
out
mov
imul
fs
pop
fwait
sub
add
xor
push
fadds
mov
loop
or
aas
mov
xchg
jp
ret
or
shl
cltd
and
fwait
bound
sub
test
mov
jnp
jo
jne
leave
jae
test
mov
movsb
ret
in
dec
mov
stc
lods
outsl
lea
xor
add
push
repnz
xchg
orl
cwtl
lret
pop
mov
push
dec
aam
popf
std
iret
add
xchg
mov
mov
jle
cmpsl
mov
add
mov
mov
and
dec
mov
add
push
sbb
jb
jp
lock
lahf
pop
dec
gs
inc
ljmp
nop
add
stos
jg
ret
or
dec
and
loope
push
mov
mov
add
xchg
mov
cmp
test
xchg
add
inc
cmp
xchg
jo
in
and
in
ja
pop
addl
push
adc
push
mov
in
aas
mov
js
add
int3
xor
pop
mov
jno
mov
lcall
cmpb
test
and
popa
jbe
push
adc
cld
pop
mov
movsl
and
mov
out
push
jo
cwtl
cltd
in
mov
rol
mov
sbb
sbb
in
jnp
or
arpl
hlt
jg
daa
jg
xlat
and
mov
cmpl
int3
fwait
xor
ret
ja
mov
fs
xor
pop
add
ljmp
pop
es
rolb
scas
dec
lock
stc
lds
or
cmp
pusha
pop
pusha
je
jle
cltd
imull
fildl
push
sbb
cli
pop
mov
and
sub
dec
dec
ja
fisubrl
adc
mov
movq
shlb
cmp
jg
imul
or
or
bound
cmp
bound
adc
inc
jmp
push
dec
cmc
add
test
push
shrl
maxps
cmp
mov
sbb
out
mov
fsubs
ret
popl
sbb
and
outsl
out
into
cmp
add
adc
loopne
dec
insb
sub
sbb
or
sbb
test
jno
xor
push
push
sarl
push
sbb
sub
aam
xchg
add
push
dec
jg
fcom
outsl
test
mov
push
pop
lock
mov
mov
push
inc
mov
lcall
dec
inc
pop
scas
es
sub
or
jp
loopne
imul
in
and
rclb
je
nop
mov
jbe
inc
sarl
rcrb
fisubrs
xchg
aas
and
inc
into
mov
movsb
fwait
test
lret
push
mov
xchg
fs
movsl
lds
mov
popf
pushf
xorl
cmpsb
jle
leave
cmp
lcall
hlt
inc
das
aam
out
shl
jl
iret
iret
fwait
xor
sub
arpl
push
jl
dec
jne
sub
aaa
and
sub
cmp
ret
mov
and
sbb
inc
cwtl
fwait
mov
dec
xchg
add
or
add
data16
xchg
mov
mov
test
into
push
test
ss
fcmovnb
xchg
popf
fsubrs
inc
cmpsl
inc
sub
and
or
mov
push
dec
sub
jl
xchg
add
xor
xchg
pop
sarb
decl
xlat
cwtl
int
mov
inc
jp
mov
iret
sbb
jns
lret
pop
adc
mov
fdivrs
mov
int
shrl
fs
jb
orl
jg
icebp
cmp
lods
jb
mov
jle
js
mov
gs
push
addb
fisubl
shll
aas
push
mov
fsubl
pop
test
ds
out
sbb
pushf
daa
jg
into
sbb
lods
add
cwtl
imul
stos
fstps
xor
or
xchg
dec
stos
loopne
in
sbb
mov
lea
jl
xor
popa
test
xlat
rol
out
divb
jbe
mov
sbb
cs
jecxz
inc
push
sub
outsl
imul
add
popa
dec
cmp
inc
xchg
popf
mov
lods
push
pop
pop
cmp
gs
cs
jp
push
pop
fs
int3
cmp
outsb
stos
sub
sti
xchg
xchg
dec
lcall
stos
cmpsl
pop
jnp
andl
enter
fs
loop
leave
xor
adc
add
cltd
inc
push
fcmovnu
pop
push
cmpsb
xchg
mov
xchg
cmp
dec
cmp
sahf
insl
push
adc
addl
clc
aam
hlt
std
cmp
stos
ret
jnp
sbb
xchg
mov
xchg
divb
imul
movsb
aam
xlat
xchg
cmp
mov
inc
in
inc
imul
lcall
jl
ja
stos
aaa
hlt
jae
fwait
or
paddusb
lret
lea
pandn
sbb
popa
mov
fisubrl
dec
adc
repz
aaa
in
das
cwtl
pop
fucomip
pop
xchg
orl
pop
popl
jle
inc
sbb
leave
mov
sbb
sub
sahf
shlb
sbb
mov
in
inc
pushf
jl
adc
cmp
and
mov
loope
jne
adc
xchg
mov
lds
xor
mov
popa
xchg
movsl
sub
pop
xchg
sub
imul
push
insl
jecxz
imul
pop
test
jge
out
test
xchg
sti
xchg
pop
xor
mov
in
sub
fistpl
fbstp
cmp
lahf
xchg
pop
mov
xor
push
xor
xchg
mov
scas
movsb
je
push
push
and
insb
push
pop
mov
inc
pop
mov
hlt
int
mov
or
lock
inc
adc
adc
je,pn
rcrl
aam
adc
jno
ret
dec
movsb
sbb
std
sub
loopne,pn
xlat
xchg
filds
ror
pop
fsts
adc
xlat
mov
push
dec
arpl
add
pop
push
insl
mov
faddl
add
push
gs
inc
test
mov
shr
xchg
xchg
and
pop
jmp
mov
sbb
sbb
adc
fbld
mov
sarl
test
cmp
xor
in
enter
loop
mov
sbb
pop
or
or
inc
jg
mov
cmp
rcr
lret
mov
mov
mov
fs
fwait
out
or
sbb
rorb
lds
jmp
stc
sub
aas
dec
jg
sbb
cmpl
popa
stos
insl
inc
rorl
std
das
repz
popa
je
lock
push
clc
int3
ds
lcall
mov
mov
jmp
scas
into
lods
insb
mov
xchg
mov
mov
outsl
fwait
rol
sti
mov
add
lea
mov
sub
jle
add
or
testl
lahf
loope
inc
ljmp
mov
sbb
push
xlat
sub
fstps
or
call
aad
shrl
outsb
pop
xchg
dec
push
add
out
rorl
cltd
mov
inc
xlat
cltd
pop
sbb
mov
pop
lock
fwait
push
int
sbb
xlat
ljmp
mov
push
sahf
push
imul
xor
pop
mov
inc
movl
adc
pop
imull
push
push
or
outsl
outsl
xor
ret
test
or
jl
mov
push
sbb
jo
xchg
ja
mov
imul
mov
inc
inc
popa
jp
adc
sbb
mov
mov
dec
mov
xchg
or
pop
int
jb
jns
xor
add
mov
push
nop
fildl
push
xlat
ja
shrb
fisubs
fucomip
or
adc
mov
jg
ret
mov
inc
xor
icebp
hlt
fdivrl
cmpsb
add
out
pop
inc
pop
aad
inc
bound
testb
in
ljmp
or
dec
stos
sbb
cmp
push
lods
lret
pop
aaa
inc
sahf
cmpsb
xchg
movsb
or
les
jno
jns
push
popa
fldcw
add
lods
xchg
sbb
insb
xlat
mov
das
scas
aad
idivb
pop
fs
xor
mov
sub
dec
mov
pushf
arpl
lahf
or
dec
loop
movsl
mov
or
push
push
je
fstl
outsb
rclb
sub
sarb
fimull
and
shll
adc
je
push
jnp
mov
mov
dec
pushf
insl
arpl
mov
lahf
mov
or
dec
insl
pushf
mov
jge
mov
loop
psrad
mov
into
jg
aas
and
scas
push
add
andl
push
mov
cmp
fs
lea
mov
idivb
jg
andb
cmpsl
mov
fisttpll
mov
or
jb
inc
xchg
jno
mov
pop
push
mov
frstor
dec
push
xlat
pop
lods
or
jbe,pt
jae
pushf
jg
fwait
aas
add
notl
popf
dec
popa
out
dec
cmp
sub
inc
int3
jnp
and
stos
lahf
ret
xchg
jns
xchg
push
sub
pop
test
lods
xchg
mov
sbb
imul
lods
dec
pop
and
mov
lcall
jnp
jecxz
jne
shl
dec
xchg
mov
rclb
adc
fnop
mov
stos
std
subl
sbb
and
int
test
mov
nop
push
int3
jle
inc
add
add
lea
into
or
in
xor
xchg
dec
cld
add
push
dec
aas
rorl
loop
pushf
push
push
mov
and
inc
adc
rcr
cmpsb
cmp
shr
sarb
fsubs
and
dec
test
fscale
int
mov
push
jo
addr16
xchg
jecxz
inc
dec
add
mov
push
mov
xchg
addr16
fsubrl
mov
push
lds
out
loopne
push
enter
cmp
push
and
pop
mov
xchg
mov
fadds
cmpsl
or
clc
sbb
xchg
cmpsl
jbe
mov
faddl
movsl
rcl
test
shll
xchg
sbb
fcmovne
sti
add
jae
cmp
lock
outsl
push
add
ljmp
xchg
pop
xor
int3
sub
push
sbb
mov
fnstsw
dec
in
and
sahf
inc
test
in
dec
sti
cmpsl
call
sub
ss
icebp
test
std
test
das
pop
or
mov
xchg
xchg
rcr
scas
das
mov
or
jmp
xchg
jle
fimuls
or
xchg
call
jmp
inc
pop
jmp
or
icebp
jbe
jle
dec
sbb
xor
dec
sub
push
iret
test
sti
sbb
jge
daa
mov
mov
fimull
push
push
insb
xor
je
mov
sbbl
sbb
mull
call
mov
mov
xchg
inc
inc
pop
cmp
in
dec
mov
rorl
stos
add
push
iret
add
push
add
push
mov
in
insb
pop
and
sbb
lret
xchg
movsb
dec
xchg
push
enter
mov
inc
add
mov
rolb
les
pop
and
pop
sbb
fstp
call
gs
addb
repnz
ret
cmp
xchg
adc
lock
mov
mov
inc
pushf
div
adc
add
mov
cmp
mov
mov
add
lods
xchg
insb
adc
lret
pop
push
orl
add
ds
jge
cmp
inc
cmp
add
cmp
cld
adc
pop
cmp
in
xchg
fcoml
fnstenv
sub
test
sub
inc
outsb
and
les
enter
mov
dec
in
push
xor
jbe
fistpl
hlt
push
lea
mov
or
aam
stc
adc
mov
jno
xlat
adc
lea
mov
arpl
rorl
fmull
aad
aas
sub
mov
jo
mov
sarl
aaa
inc
xor
lcall
push
negb
xchg
ja
and
pop
sbb
xor
xor
push
into
lock
mov
dec
fstps
lcall
dec
repz
sub
xor
es
cwtl
and
mov
push
sub
or
add
cs
enter
stos
addr16
sbb
loop
sub
xchg
clc
adc
mov
test
sub
fmul
in
aad
mov
rcl
jge
jns
jecxz
add
inc
hlt
sbb
add
mov
aad
nop
je
sub
mov
inc
int3
mov
popf
shrl
inc
rol
inc
ljmp
xor
lods
jnp
adc
xor
es
sbb
cli
ficoms
jae
pusha
js
cwtl
and
andb
mov
pop
mov
iret
rclw
pop
xorl
sarb
call
dec
shr
clc
mov
je
push
mov
repz
or
fisttpll
mov
xor
cltd
jnp
cld
jg
sub
ja
mov
jge
fimull
and
push
aaa
adc
xchg
mov
add
jle
mov
push
out
lods
lret
sti
push
pop
pop
dec
xchg
div
cs
cmp
sbb
jns,pn
cmp
pop
inc
xchg
jmp
ret
inc
mov
xor
add
xchg
inc
je
push
pop
out
xor
repz
pop
sub
aam
fstl
in
ret
dec
jmp
mov
mov
push
loop
inc
inc
jns
cmpsb
jmp
jno
mov
lret
mov
subb
push
xchg
insl
std
int
dec
ficoml
into
inc
jge
mov
mov
sbb
js
gs
jp
jno
daa
clc
and
adc
stos
not
sub
push
pop
xchg
adc
test
dec
xchg
xchg
inc
adcl
push
fsubs
pop
ret
dec
push
xchg
inc
sahf
xchg
sbb
cmp
xor
fmull
push
xor
pop
adc
cmpsl
mov
mov
sbb
data16
push
loopne
lds
ficompl
xchg
in
mov
clc
mov
pop
scas
stos
jl
shl
shlb
insl
mov
xor
sub
inc
out
ja
xor
dec
lcall
in
xchg
cmp
sub
jmp
cltd
sbb
pop
call
mov
and
jae
sarb
leave
sbb
mov
les
or
mov
in
ljmp
ds
inc
out
out
adc
xorl
xor
jecxz
mov
arpl
imul
xchg
add
push
cld
push
jecxz
pushf
in
dec
inc
testb
push
shrb
mov
clts
mov
cmp
fstpl
jl
test
mov
jmp
xor
and
adc
out
mov
inc
adc
es
and
and
ret
pop
test
pop
cmpsb
ret
leave
inc
mov
dec
or
inc
iret
mov
push
test
insb
mov
and
je
xchg
push
cmp
push
shlb
push
lret
cli
adcb
dec
movsb
mov
in
enter
jnp
jle
xor
fs
mov
jo
daa
out
sbb
xor
xchg
and
ret
rorl
add
and
clc
icebp
inc
cld
dec
sbbl
int3
enter
and
sub
pop
cmp
adcb
push
subb
out
ljmp
lcall
mov
loop
lret
sub
mov
in
dec
xlat
adc
dec
imul
or
inc
aam
dec
push
lret
iret
xlat
lret
js
fsubl
sti
shl
xchg
jmp
sbb
add
rcl
mov
icebp
or
aam
push
loope,pn
mov
push
iret
mov
xchg
out
lret
out
aas
or
fistpl
repz
xchg
outsl
pushf
stos
mov
xchg
push
and
add
test
imul
jg
ds
or
pop
int3
sub
jle
pop
call
cli
sub
dec
pop
lahf
movb
and
divl
sti
pop
jmp
ret
and
mov
sub
sti
dec
push
fldcw
pop
or
ja
js
insl
cltd
add
cmp
test
jecxz
je
jp
dec
or
xor
jno
inc
sub
push
inc
sarb
ljmp
jge
sbb
test
psubd
lret
pop
sub
mov
dec
dec
rcr
mov
in
leave
lea
aas
in
jp
dec
jbe
jp
dec
jg
mov
lods
orb
sbb
and
mov
ss
xchg
popf
test
test
inc
xchg
mov
cwtl
cmp
pop
cmpl
sbb
push
out
call
das
pop
sub
data16
test
ja,pn
dec
sti
stos
in
jo
iret
mov
mov
pcmpgtw
bound
inc
addr16
sti
mov
fsub
cmp
stos
rcll
jo
inc
sbb
adc
lahf
or
mov
sub
add
push
jae
jecxz
cmpsb
lods
sub
mov
cwtl
cltd
out
subl
inc
mov
mov
je
pop
loopne
sub
lcall
addl
mov
adc
adc
fisubrl
insl
cmp
or
mov
idivl
push
or
in
fstps
dec
xchg
add
pusha
mov
cmp
mov
out
dec
dec
jg
sub
push
push
bound
jnp
lahf
aam
mov
sub
dec
inc
mov
pop
and
mov
add
in
cmpb
sbb
mov
sub
cmp
inc
movsl
mov
arpl
into
daa
insb
stos
ds
movsb
shlb
jg
mov
fdivrp
int
add
pop
je
fwait
dec
push
jne
or
add
push
cmpsl
lods
daa
jmp
mov
sub
test
mov
adc
mov
mov
cmpsl
xlat
inc
dec
xchg
mov
in
xlat
imul
hlt
je
pop
mov
or
lahf
push
ljmp
sub
insb
inc
or
pop
lcall
jmp
pop
imul
push
sub
or
jno
sbb
jns
push
enter
jp
push
imul
bound
mov
sbb
add
movsb
aas
jbe
in
enter
or
mov
out
push
sub
push
mov
enter
out
inc
push
popf
daa
outsl
cmp
xor
cmc
mov
jecxz
mov
nop
out
adc
js
and
daa
mov
jg
adcb
iret
sarl
pop
mov
inc
or
je
add
and
inc
xlat
clc
pop
inc
gs
jecxz
mov
outsb
leave
je
je
aam
sbb
sbb
loope
sbb
mov
mov
mov
inc
sarl
push
and
mov
adc
iret
movsl
dec
xlat
mov
rcll
xchg
movsl
mov
mov
push
sahf
dec
xchg
in
out
jne
xor
pop
mov
mov
inc
cltd
pop
xchg
fsubrp
shrl
sub
imul
test
jae
test
adc
fimuls
or
fs
lock
aad
inc
std
ss
cmpsb
lahf
imul
mov
fidivs
jecxz
movsb
in
nop
xor
pop
mov
add
mov
lock
insb
mov
jb
sbb
clc
lea
fucomi
jbe
mov
cmpsl
mov
mov
push
inc
cli
out
pop
fs
faddp
lds
and
xchg
imul
fwait
jo
and
dec
nop
jns
pop
cwtl
repnz
push
insb
fwait
mov
jno
or
dec
fs
bound
cwtl
jnp
sub
test
dec
add
insl
inc
hlt
das
inc
push
push
jne
push
sub
mov
addr16
pop
popf
sub
addr16
loope
leave
mov
sbb
loope
sbb
mov
pop
xchg
popa
repnz
pop
cwtl
cltd
sub
aam
mov
inc
inc
cli
test
aas
push
jge
pusha
jbe
xor
mov
es
add
das
xor
stos
es
xchg
dec
insb
inc
jp
sbb
cmpsb
xchg
inc
mov
push
js
sti
inc
cli
das
cmpsb
and
mov
jns
hlt
mov
cmp
pop
fstp
mov
outsl
shll
lods
addr16
lods
dec
dec
out
inc
push
cmp
mov
lds
mov
dec
mov
xor
pop
add
push
loope
je
xor
push
lret
cmp
jo
sub
jle
je
js
popf
fisubrl
pop
in
adc
inc
stos
mov
nop
and
sbbl
orl
test
push
repz
fcmovnb
gs
int
or
cmp
pop
mov
iret
div
mov
dec
idivb
ret
stc
iret
arpl
cmp
mov
jnp
inc
hlt
insl
jp
cmpsb
sahf
adc
push
jge
jo
das
mov
and
lret
pop
sub
jmp
lock
add
dec
test
jmp
jb
fisubrl
mulb
sbbl
xchg
outsl
fldl
inc
mov
bound
pop
pop
fsubs
movl
mov
cld
adc
stos
push
lret
mov
fs
int
xlat
or
mov
xchg
ror
add
faddl
inc
cli
pop
mov
and
and
daa
scas
ds
lock
fwait
jno
pop
movsb
pushf
pop
push
mov
or
js
jb
inc
cmp
sar
imul
inc
punpcklwd
arpl
jl
dec
push
inc
cli
lret
lahf
xor
daa
push
sub
sahf
jp
in
data16
dec
jb
xchg
pop
mov
and
rorb
call
rcrl
pop
addr16
pushf
jns
jl
inc
and
xor
sbb
mov
sbb
fs
adc
rcr
pop
in
repz
inc
adc
movsb
xchg
xor
push
das
stc
mov
adc
stc
adc
movsl
pop
lcall
call
and
sahf
inc
mov
lea
dec
cmp
add
enter
or
rorl
push
lea
test
mov
dec
dec
lret
out
dec
rolb
inc
fisubrl
mov
out
sub
cs
lods
btc
fnstcw
ret
and
sub
shlb
rcrb
pop
adc
shll
add
and
je
jmp
add
xchg
cmp
mov
push
out
pop
insl
aam
lock
fnstsw
mov
mov
daa
adc
dec
or
mov
imul
ljmp
push
dec
mov
push
in
iret
negl
xchg
mov
lock
sub
ja
and
mov
cli
cmp
lcall
and
mov
aam
out
ss
push
stc
inc
aad
jle
mov
pop
mov
aad
vmovapd
out
adc
in
push
aad
inc
outsl
cmp
fwait
dec
lea
int3
pop
test
sub
out
and
je
sbb
inc
pop
imul
out
outsb
stos
stc
add
dec
inc
sti
adc
mov
fs
pop
xlat
mov
out
or
lret
dec
leave
cmp
ret
in
push
mov
daa
sarl
sti
adc
jbe
inc
insb
mov
jl
jne
mov
ret
fwait
xor
jl
mov
lods
mov
mov
xchg
sub
fstpt
pop
rcrl
pop
ss
mov
scas
iret
imul
mov
jbe
paddq
add
push
dec
push
add
rolb
les
movsl
mov
pop
adc
mov
fsubrl
fwait
mov
push
jle
ljmp
xchg
inc
es
into
adc
or
xchg
xorl
jno
lret
leave
shll
cmpsl
sbb
enter
mov
out
into
shufps
nop
fisttps
xchg
and
and
ss
stc
out
es
sub
shrl
pop
ret
ss
push
jbe
cmp
mov
sti
daa
push
cwtl
leave
decb
cmp
fs
jb
cmp
xchg
xchg
jp
outsb
leave
loopne
pop
inc
shl
and
nop
fsubrs
jl
shll
push
stc
push
jg
and
jnp
xchg
adc
mov
jp
xor
xchg
mov
push
xchg
nop
cli
sbbl
into
movsl
xor
and
sarb
xchg
adc
stos
je
adc
outsb
jb
pop
dec
out
test
sarl
dec
xchg
cmpsb
loop
adc
pop
jge
orb
xor
sub
add
push
movsb
loopne
push
add
mov
mov
xchg
xchg
ja
pop
clc
sbb
xor
jmp
adc
mov
stos
xorb
xchg
pushf
sub
rorb
mov
sarb
les
add
icebp
lret
imul
mov
push
in
rcll
cmp
xchg
ss
mov
fidivl
or
xchg
arpl
push
add
mov
xchg
repz
mov
outsl
nop
std
int3
ret
scas
out
add
pop
jnp
ja
xor
pop
mov
nop
push
gs
test
cmp
pop
int
jae
stos
push
loop
shl
repnz
and
sbb
and
sbb
mov
cmpsb
popf
xor
mov
pop
dec
inc
xchg
out
test
scas
mov
cwtl
mov
cli
fwait
mov
inc
adc
mov
shrl
jle
insl
mov
pop
or
fdivrl
out
and
and
ss
and
aad
adc
inc
push
or
stos
call
dec
fidivs
dec
pop
mov
xlat
xchg
sub
inc
hlt
stc
jge
ficompl
sub
fs
test
lret
adcb
sub
lret
push
aam
jecxz
gs
mov
scas
lret
inc
hlt
sub
cmpsb
sub
dec
adc
and
mov
push
mov
jno
cmp
add
fs
dec
sahf
adc
add
push
outsb
dec
loope
je
ret
lret
mov
jno
dec
mov
pop
mov
sub
push
cmpsb
int
clc
push
test
and
xor
xchg
je
mov
inc
xchg
int3
addr16
fstl
scas
xor
test
ret
adc
pop
xchg
movsl
pop
jge
dec
push
lds
xchg
xchg
loope
aam
adc
mov
or
pusha
jp
ss
cmp
fsubrl
dec
outsb
mov
adc
adc
insb
mov
scas
jno
mov
inc
movsb
repnz
cld
jnp
mov
into
jecxz
adc
xor
xchg
in
adc
cmpsb
xchg
inc
mov
lock
loopne
mov
fwait
or
cmp
insb
dec
jb
icebp
negl
or
xlat
jge
into
repnz
sub
mov
xlat
mov
mov
je
testl
jecxz
xchg
cmp
std
imull
add
int3
fs
adc
adc
mov
jecxz
and
loop
popf
xorl
cmp
outsl
movsb
sub
xchg
xor
cmp
pop
in
cwtl
cmp
pop
test
js
jmp
in
dec
cs
cli
mov
lret
push
lahf
pop
rorb
lret
cli
rolb
and
pop
xchg
inc
js
sbb
stos
lea
out
jmp
mov
sbb
xlat
jbe
in
mov
insl
mov
loopne
jge
jecxz
fdivrp
sti
insb
lcall
imul
mov
inc
std
and
inc
addb
int3
mov
xchg
adc
add
mov
or
push
push
or
or
pop
or
inc
push
int3
aas
loopne
xlat
add
dec
shll
repnz
divl
arpl
imul
xchg
loopne
sti
sbb
dec
jge
or
jp
mov
stos
adc
inc
sbb
loop
scas
mov
mov
push
out
insb
cmc
cs
mov
cmpb
xchg
jl
mov
adc
fsubp
mov
sti
aaa
jecxz
pop
int
sbb
mov
sub
cmp
mov
ja
mov
jb
jl
sub
push
mov
stc
sub
aam
fadd
pushf
orl
push
push
jo
mov
das
lds
mov
adc
rclb
lcall
movsl
std
jno
pusha
mov
cmpsl
cmp
js
int3
or
sahf
dec
mov
xorb
adc
cmp
scas
hlt
xor
dec
mov
das
test
mov
xor
mov
lret
cs
inc
adc
aam
mov
in
sbb
test
mov
jmp
pusha
clc
insl
sub
cmpsl
test
nop
jl
cmpsb
repz
pop
or
add
imul
mov
push
xchg
ret
pop
or
adc
ds
push
out
ss
filds
adc
mov
dec
xor
daa
das
mov
mov
loop
xchg
pop
insl
mov
rcrb
jo
out
mov
gs
sahf
or
sub
mov
imul
jmp
and
jbe
push
add
stos
in
sbbl
rcll
xor
dec
scas
jo
dec
add
nop
jb
push
fidivrs
data16
js
mov
adc
push
js
cmc
lahf
cmpsb
imul
adc
pop
jns
adc
arpl
lea
mov
out
xor
cmp
add
or
aam
mov
sbb
xchg
in
xchg
cli
mov
push
adc
xchg
xchg
jmp
adc
adc
mov
jmp
xlat
jmp
ja
repnz
or
or
arpl
insb
pop
lock
in
xor
scas
sbb
adc
mov
ficoms
add
push
addr16
mov
clc
xchg
dec
xor
sbb
sub
push
lds
ds
sub
out
inc
jge
inc
js
outsb
lret
inc
cs
xchg
push
fdivrl
jbe
pushf
lock
mov
inc
cmp
fiadds
shll
out
push
pop
xchg
enter
sub
call
int3
and
xchg
lock
mov
dec
arpl
jl
or
aam
sbb
das
or
idivl
adc
push
rolb
xor
mov
jns
ret
pop
orl
dec
shr
mov
adcb
pop
push
and
out
pop
or
es
push
stc
xchg
test
xlat
cmovs
pop
push
dec
inc
cmp
xchg
movsb
push
lcall
mov
jp
sub
mov
mov
cltd
clc
cmp
mov
int
addr16
fldt
dec
mov
movntps
in
pusha
inc
push
loop
pop
sub
inc
or
add
sbb
testb
cmpsb
rol
push
leave
xchg
lahf
popa
mov
and
das
jecxz
ret
add
sub
or
seta
out
push
insl
daa
les
cmp
popf
dec
pop
xor
movsl
xor
mov
cmp
movsb
sub
and
mov
aas
jecxz
pop
mov
xchg
fistpl
jnp
nop
pop
cmp
push
enter
mov
jmp
sbb
fcom
in
clc
sbbb
rol
xor
or
xor
jns
push
pop
sbb
adc
sbb
fsubrs
pop
push
lret
pop
mov
dec
push
orl
cld
das
repnz
push
ret
mov
je
into
call
pop
test
and
lea
out
and
shrb
rcl
adc
jnp
loop
cwtl
xor
add
or
mov
clc
cmpsl
lods
mov
push
lods
xchg
inc
xchg
cltd
cmp
push
clc
cmpsl
out
enter
sbb
jns
dec
cmpsb
xor
mov
adc
dec
loope
sub
repnz
push
sahf
loop
pop
aaa
aaa
xor
popf
mov
jb
jp
xchg
fnstcw
inc
dec
lcall
jle
or
sub
push
sub
mov
mov
aas
mov
cwtl
dec
and
jp
xor
dec
es
or
cmp
push
pusha
xchg
out
add
pop
xchg
cli
shlb
popf
jge
push
xchg
mov
fwait
pop
es
bound
jbe
push
call
push
dec
xchg
pop
sbb
dec
repz
jmp
mov
mov
mov
leave
mov
popf
std
jne
mov
outsl
in
and
dec
mov
and
add
test
loop
out
push
adc
in
mov
data16
es
pop
pop
aaa
gs
jecxz
cmp
movsl
in
sbb
jbe
mov
add
and
fldcw
cmp
mov
bound
pushf
adc
cli
stc
xchg
cmp
xchg
inc
sbb
sub
push
sahf
pop
pop
repz
or
sbb
roll
push
jo
jno
pop
inc
cmp
push
outsb
loopne
inc
ss
jnp
pusha
iret
mov
jb
loope
jg
imull
xchg
cltd
jl
cld
das
push
lret
xor
aas
pop
mov
mov
sub
imul
add
nopl
lds
pop
loope
js
sbb
pop
fs
pushf
xor
jno
das
sahf
in
push
inc
add
jns
add
mov
xorl
cmpsb
enter
or
jl
shlb
sbb
mov
cmp
mov
rorb
iret
cmc
movsb
lea
mov
iret
mov
pop
push
sbb
sub
sub
sub
mov
shlb
adc
push
cltd
hlt
and
jmp
lahf
add
insl
mov
inc
fiadds
mov
lock
fcmovb
daa
xchg
popl
mov
or
mov
adc
xchg
loope
test
mov
je
adc
repnz
ljmp
add
int
int3
sbb
xchg
es
add
add
pop
das
add
insb
push
jle
fwait
clc
xor
mov
ficoms
or
cmc
push
in
jbe
and
lods
and
mov
pop
test
repnz
cmpsl
pop
jnp
jae
loop
test
jbe
mov
mov
jns
stc
hlt
popf
in
xor
sbb
xor
add
stos
cmc
or
jle
inc
jns
fisubrl
lds
lds
cmp
push
bound
cld
sub
into
add
pushf
jle
push
imul
lret
scas
jns
xor
pop
sbb
dec
push
popa
jg
or
push
jmp
mov
mov
aad
test
in
stos
movsb
xchg
cld
push
fisttpl
xchg
push
out
and
pop
fnstenv
and
imul
rep
outsl
cwtl
ficompl
and
scas
jne
and
xchg
clc
cmp
pop
loope
inc
lods
ss
xor
leave
and
imul
mov
mov
or
and
gs
push
inc
xor
push
mov
cmp
rcrb
sub
dec
stos
jno
mov
fwait
aas
xchg
add
in
and
daa
adc
xchg
xchg
dec
test
ret
loop
add
sbb
ret
cltd
mov
mov
jl
dec
inc
in
lods
jo
rol
inc
ficomps
push
push
outsb
aaa
jp
shrl
imul
mov
fstpt
loopne
push
mov
cmp
scas
test
popf
push
jmp
clc
aaa
jp
cwtl
and
adc
stc
inc
shl
jl
cmpsl
out
push
jg
jg
add
aad
movsb
dec
dec
cmp
mov
cli
idivl
fsubrl
add
cld
xlat
out
inc
jo
pusha
popa
push
fwait
or
mov
mov
add
lcall
ror
ss
test
and
in
mov
fsubr
dec
xor
out
push
mov
xor
and
mov
je
mov
mov
out
pop
cmp
xor
fs
sub
lahf
loopne
out
pushaw
xchg
outsb
pop
bound
xchg
inc
jns
pop
dec
adc
and
lcall
out
sti
xchg
pop
in
mov
dec
subb
xchg
push
cmp
dec
and
and
scas
mov
addr16
pop
fnstcw
lret
mov
es
mov
mov
cwtl
outsb
mov
pusha
ss
cmp
pop
pop
outsb
test
jmp
and
pop
mov
cmp
test
inc
stos
out
inc
movsl
mov
jns
pop
lea
adc
popf
xchg
sub
jg
call
sbb
lahf
dec
adc
lret
in
mov
dec
cs
cltd
sbb
and
mov
sbb
sahf
xchg
pop
nop
lcall
cmp
scas
jne
pop
ret
push
pop
mov
add
sub
mov
jo
aam
push
inc
roll
loope
pop
mov
mov
or
mov
sbb
sahf
mov
sub
in
or
cmpsl
adc
xor
cmp
xchg
xor
jl
pop
lock
scas
fidivrs
cltd
pop
xchg
pop
mov
insl
jns
dec
or
fwait
push
scas
cmpsl
jmp
jno
or
jno
sub
cld
and
adc
outsl
out
inc
loope
clc
sahf
je
and
cmpsl
and
rcl
push
adc
lcall
cmp
leave
xchg
clc
push
inc
pushl
outsb
in
scas
sub
add
adc
or
add
dec
in
mov
in
dec
jno
subl
pcmpeqb
adc
inc
in
call
loopne
xor
hlt
movsl
and
jbe
mov
sbb
xor
cld
xchg
dec
inc
leave
add
sbb
inc
sbb
loop
fwait
pop
jle
push
scas
inc
cmp
or
jge
add
pushf
sbb
fdivl
xchg
popfw
repnz
jg
xlat
out
cwtl
pushf
jns
cli
push
cltd
sti
sbb
les
and
mov
push
testl
inc
dec
cmpl
add
push
mov
cmp
mov
mov
push
stos
ljmp
dec
pusha
adc
loopne
faddl
push
mov
jle
pop
dec
subl
xchg
int
pop
decl
push
or
out
cmp
jmp
lock
jg
clc
mov
sbb
sbb
dec
rcrb
repnz
inc
dec
and
sub
sub
call
jge
cld
push
pusha
or
repnz
dec
mov
rol
jmp
xlat
inc
fistl
ficoml
int3
mov
xor
gs
xchg
xchg
loopne
dec
dec
orb
popf
fcoml
push
iret
in
lods
mov
movsb
mov
out
das
dec
mov
lret
addr16
xchg
jg
mov
addr16
ljmp
popf
push
cs
pop
ret
add
pop
xchg
imul
xor
dec
xchg
dec
jae
mov
and
lds
xlat
or
fdivp
and
imul
inc
lret
shl
dec
cli
jl
arpl
repz
sbb
jnp
decb
mov
mov
pop
xor
inc
push
xor
sarb
rorb
test
es
out
ret
pop
mov
lds
pop
fstpl
and
cmp
mull
pop
ffreep
pop
and
shll
repnz
add
sbb
dec
pop
imul
adc
mulb
dec
outsb
jno
xchg
insb
add
cmc
cwtl
jae
stos
int3
dec
pop
sub
es
jmpw
xor
in
dec
push
pop
fxch
mov
mov
ja
mov
jae
inc
addr16
ljmp
push
push
int
add
fdivs
push
cmp
je
insb
push
arpl
dec
lcall
sub
xchg
jae
inc
xchg
xchg
pop
sbb
mov
mov
and
inc
push
lret
jmp
adc
cwtl
imul
fimuls
inc
adc
inc
add
push
push
test
add
loop
stos
and
aam
nop
js
stc
pop
pop
push
or
fisubl
jne
pushf
out
in
or
mov
scas
pop
das
jmp
mov
out
aas
lcall
popa
xor
popf
adc
pop
inc
jle
push
ljmp
sbb
jns
pop
add
ret
xchg
ss
iret
pop
jp
pop
ret
or
dec
int3
in
les
add
sbb
fildl
pop
lret
pop
arpl
fstps
push
rcr
and
test
outsl
gs
pop
sahf
lock
fists
push
sbb
cmovnp
dec
aam
fadd
in
push
sti
add
xor
bnd
int
pop
xchg
pushf
jae
test
adc
iret
cli
in
mov
and
or
ds
shlb
sub
movsl
xchg
lea
loope
dec
fst
jge
push
and
sbb
xchg
popf
push
aad
push
sub
repz
push
xchg
int3
imul
add
cmp
xchg
lret
cltd
scas
or
push
jne
sbb
or
std
mov
xor
mov
repz
or
into
fisubrs
sub
xor
add
mov
inc
cmp
roll
out
sbb
or
adc
jecxz
and
and
jo
iret
movsl
dec
adc
lret
jns
mov
adc
sub
ds
jp
adc
cmp
arpl
mov
je
imul
pop
sbb
push
pop
mov
cli
push
pop
cld
dec
mov
sub
shll
test
inc
test
movsb
aaa
sub
pop
int3
inc
ljmp
lds
into
test
pop
push
add
push
lods
test
into
push
cmpsl
stos
fisubs
loopne
jle
loope
nop
pusha
xor
sub
push
stos
cmp
out
jp
je
xor
sub
push
aas
push
inc
les
out
mov
jo
cmpsb
pop
sahf
mov
mov
mov
jne
imul
cmp
jg
push
in
aad
adc
jg
adc
xor
daa
mull
adc
mov
sbb
mov
test
and
lahf
ja
and
add
out
das
addr16
lds
in
jg
mov
scas
lret
je
fs
mov
or
jmp
mov
push
popl
test
jl
mov
mov
inc
fs
sub
or
push
adc
cli
das
inc
and
int
inc
outsb
mov
dec
sbb
test
inc
and
and
inc
mov
xor
fs
push
xchg
inc
es
test
shlb
imul
aas
adc
sub
inc
and
inc
leave
mov
jns
test
mov
ficoml
movsb
xchg
mov
repnz
ret
lcall
stos
inc
int
les
mov
push
jmp
inc
dec
fwait
hlt
lret
jae
les
popf
mov
sbb
outsl
pop
add
scas
pushf
cltd
aas
push
imul
adc
inc
outsb
ror
lahf
stos
or
movb
and
or
inc
sub
pop
dec
jbe
sub
sbb
add
lcall
push
clc
sbb
popf
lock
push
xor
mov
sbb
pop
out
mov
lcall
jbe
aam
dec
adcb
xchg
push
cmp
imul
fcmovb
dec
fyl2x
jno
popf
jno
jb
jbe
popf
cmc
sbbb
dec
ucomiss
loop
in
adc
mov
popa
loop
push
test
in
xchg
gs
cmc
leave
push
stc
push
sub
sub
dec
or
xchg
cmp
or
mov
stos
nop
jnp
pop
in
das
jmp
in
pop
dec
ja
or
popa
and
dec
fdivs
lods
fdivs
pop
pop
popa
pop
adc
mov
xchg
jne
pusha
ss
icebp
scas
shll
dec
mov
xchg
add
cli
enter
sub
ss
xchg
out
std
push
stos
or
jg
xor
push
pop
rolb
inc
into
mov
shll
push
and
pushf
or
jno
out
push
add
push
cmp
mov
ja
xchg
in
push
sbb
or
xchg
es
out
dec
xor
mov
push
fidivrs
sbb
dec
inc
xchg
push
pop
jg
xlat
scas
aam
cmp
push
pop
jle
cmpl
and
mov
leave
and
adc
daa
mov
lahf
in
repnz
inc
sbb
xchg
lds
push
xchg
push
lret
push
adc
jl
pop
push
pop
push
roll
aaa
add
cmpsb
rcl
gs
inc
scas
sti
mov
ret
in
outsb
lcall
or
xchg
jnp
pop
arpl
dec
loopne
rorb
push
popf
stc
stos
fsub
ds
mov
sbbb
enter
mov
stc
xchg
fisubrl
add
jno
mov
push
add
leave
fidivrl
cld
jmp
mov
lea
rcrb
clc
lret
cs
push
jo
cmpsb
jg
inc
mov
stos
and
jne
aam
xlat
int
ret
and
jno
gs
fldcw
fwait
xor
and
outsb
dec
pop
jecxz
jo
inc
stos
fimuls
add
dec
adc
sbb
sbb
fwait
int3
dec
fucompp
insl
dec
push
adc
sarb
lods
mov
jg
mov
pop
sarb
xchg
fnstsw
jg
loop
inc
fwait
cmp
pop
jae
sub
adc
sti
loopne
stos
mov
push
filds
mov
loop
pop
stos
int
dec
cmp
xchg
stos
in
pop
mov
and
or
jge
ds
and
ds
xor
xchg
fsubrl
sti
in
fimuls
fiaddl
lret
lcall
dec
cmp
lahf
in
inc
lods
leave
aad
fistl
and
pushf
add
xchg
xor
cmpsl
mov
icebp
sub
or
sbb
pop
mov
mov
pop
xor
cmpl
imul
jecxz
in
or
orb
or
cmp
test
cmc
dec
jp
xchg
xor
push
mov
fwait
lea
mov
fcmovb
ljmp
stos
push
adc
std
cmp
popf
adcl
shll
call
movsl
jns
loop
enter
insb
and
pop
xchg
push
xchg
lcall
inc
xor
lret
shlw
inc
jge
sahf
jb
and
dec
sar
movsb
cmovns
imul
pop
aas
mov
cwtl
loope
pop
mov
sub
idiv
sub
movsl
lahf
scas
dec
outsl
fbstp
mov
push
mov
sarl
jmp
in
dec
cld
xchg
cmp
icebp
sub
dec
mov
fildl
pop
jmp
cmp
push
fdivr
lret
pop
mov
out
or
hlt
sbb
cwtl
add
fistps
out
aad
es
mov
int3
jecxz
cmp
cmp
shll
jno
call
or
test
push
inc
cmp
adc
mov
inc
pop
jmp
xchg
pop
push
mov
xchg
pop
mov
cmp
repz
andl
in
push
scas
pop
dec
hlt
cltd
sbb
mov
mov
test
pop
jecxz
xorb
and
push
xchg
nop
sub
sbb
ljmp
xor
fidivrl
popa
mov
mov
mov
call
inc
jae
pop
hlt
pop
fisttpl
push
out
inc
pop
arpl
mov
ret
push
xor
jb
int
pusha
cmp
dec
push
repz
lock
cmpsl
into
dec
adc
cmp
push
faddl
jge
aad
fisttpl
xchg
gs
push
sub
test
mov
inc
add
jo
jg
outsb
sub
or
mov
mov
mov
add
cmp
mov
pushf
hlt
and
jnp
aas
mov
pop
test
jmp
sbb
fdivrs
rcrl
in
mov
inc
sbb
add
lcall
jno
sub
xor
add
adc
adc
dec
push
enter
repnz
dec
push
inc
rcll
jg
pop
inc
sub
mov
xchg
das
push
dec
bound
test
mov
icebp
dec
dec
dec
jns
rolb
loopne
add
mov
jge
xor
insl
sbb
inc
mov
scas
jl
sub
jp
mov
dec
out
cmpsl
sbb
jne
mov
inc
rcrl
and
xchg
push
adc
das
xchg
or
add
movsl
gs
mov
mov
xorl
std
xchg
shrb
ja
sti
pushf
cli
fisubrl
xchg
sub
add
and
push
or
cmc
jge
pop
stos
add
pop
jns
lea
jnp
cmpsb
xor
cmp
pop
movsl
stc
sub
mov
outsl
je
cmp
aam
adcb
popf
jmp
dec
fwait
push
daa
xor
sub
cltd
lods
ds
pop
ss
jnp
std
jae
es
fcoms
ljmp
add
push
shrl
adcb
jno
test
scas
hlt
mov
or
or
mov
mov
sub
and
aad
roll
insb
jno
xchg
push
int
jno
test
or
loop
push
add
frstor
mov
dec
mov
bound
mov
dec
xchg
popf
rclb
adc
cwtl
mov
and
rcrb
push
inc
jno
jl
ret
int3
stos
inc
xchg
popf
out
in
rolb
sbb
push
inc
push
mov
cmpsl
loope
sub
sub
adcl
scas
pushf
mov
mov
jp
stos
les
scas
cmp
fidivs
xchg
sarl
ficoml
aam
push
mov
push
std
push
loopne
cmc
pop
or
loop
ret
add
jo
callw
fs
push
xor
sbb
and
and
sarb
cmp
dec
lock
cmc
mov
mov
push
adcb
inc
jns
inc
lock
mov
xchg
and
pop
in
shlb
sub
ss
or
cmpsl
inc
into
xor
nop
lds
dec
movsb
push
adc
sbb
adc
imul
mov
int
push
cs
xor
stc
ja
push
lock
or
and
mov
dec
mov
xlat
divb
out
xor
dec
cltd
out
repz
sub
mov
inc
cmp
fadd
xor
iret
nop
xor
ret
faddl
rorl
addl
xor
or
sbb
dec
pop
jmp
jae
insl
ljmp
shrl
mov
arpl
sbb
mov
jne
rolb
arpl
into
mov
pusha
inc
les
push
lods
sbb
sub
insb
mov
pop
or
adc
or
cmp
jne
fidivs
shlb
mov
xchg
in
movsl
aas
pop
and
and
push
jecxz
and
hlt
mov
repz
mov
lock
jno
pop
fidivrl
pop
push
dec
call
rcll
lcall
push
lock
movsl
push
cmp
fs
int
xlat
ja
sub
pop
xor
fdivrl
sbb
sbb
jecxz
inc
ret
aad
sbb
lods
or
cmp
outsl
mov
pushf
or
call
push
jle
mov
pop
sbb
outsb
les
test
fistps
ret
and
sub
cli
fldenv
mov
stos
outsl
nop
pop
xchg
int
push
jmp
hlt
popf
xor
jb
mov
push
xchg
xchg
inc
ret
sbb
mov
mov
shl
jg
test
inc
sbb
movsb
cltd
sub
jo
jmp
inc
cmp
ret
jnp
hlt
mov
pop
test
sub
repnz
and
mov
sbb
test
int
add
divl
or
xor
mov
xchg
jns
stos
ret
cs
push
pop
dec
fildl
pop
test
xchg
cmpsl
inc
je
cmc
add
mov
cmp
and
ret
pop
cs
fildl
push
sub
jnp
mov
pop
jns
inc
mov
jg
mov
fsubs
and
lds
cmp
das
into
jl
aad
insl
data16
push
mov
loopne
aam
inc
pop
and
nop
add
xor
jg
aam
xlat
dec
add
jmp
pop
jne
jnp
sub
leave
roll
add
mov
xchg
push
ja
xchg
aad
lret
jae
jmp
dec
roll
es
lds
push
push
pop
sbb
lret
dec
shll
cli
push
mov
imul
dec
lret
sub
sub
push
shrl
cltd
lock
push
aas
sbb
cmpsb
xor
repz
dec
push
cmp
mov
loopne
pushf
das
dec
movsb
aad
cmp
lahf
js
hlt
rcrb
pop
fwait
mov
loopne
dec
stos
es
clc
loope
into
call
xor
inc
lock
push
sub
rorl
pop
je
xchg
clc
inc
mov
jnp
in
ds
out
or
stos
adc
shrb
lahf
add
addr16
mov
enter
jecxz
and
adc
stc
fimull
in
xchg
cmp
dec
xorb
enter
stos
xor
lret
dec
insl
test
dec
mov
stos
icebp
imul
roll
add
fs
andb
jg
push
inc
test
rolb
pop
xchg
push
or
sbb
mov
sbb
in
int3
xchg
jg
rcrb
aas
lcall
cmp
std
je
xchg
pop
fimull
js
out
xchg
sub
jge
or
xchg
mov
mov
scas
mov
jmp
mov
repz
fs
loop
mov
mov
xlat
ja
sti
jo
inc
mov
jne
push
out
popa
pop
push
out
testb
xchg
add
jbe
inc
adc
adc
sbb
mov
hlt
call
cmpsl
add
ds
push
hlt
int
dec
outsl
mov
lahf
xlat
sub
inc
arpl
inc
aaa
jg
shl
mov
dec
aas
movsl
jge
mov
aas
or
xchg
pop
add
or
jge
sbb
mov
fdivrl
jecxz
adc
or
xor
rol
cli
cmc
in
bound
aaa
sbb
sub
out
sbb
imul
int3
int
or
jecxz
and
aam
addb
adc
pusha
scas
push
testl
adc
stos
push
std
ljmp
pop
icebp
xor
aad
and
inc
sbb
aad
popf
jae
pop
xor
jns
mov
sahf
xor
scas
mov
add
cld
out
aaa
jnp
push
cmp
mov
mov
dec
pop
scas
dec
inc
sti
mov
test
loopne
std
lea
jae
lods
ljmp
mov
lea
aaa
add
sub
fimull
add
call
push
jne
rcll
popa
mov
or
mov
jl
imul
imul
mov
out
xchg
int3
mov
or
push
inc
out
sub
mov
and
mov
sub
mov
jns
mov
clc
xchg
and
add
cwtl
test
imul
test
sub
movsl
loopne
xor
mov
aaa
pop
daa
xchg
lret
jg
sub
shl
sub
mov
push
or
cmc
push
mov
sub
aas
push
clc
loope
pushf
cltd
or
cli
pop
je
jne
inc
cmp
cmp
scas
mov
pop
test
call
xor
clc
add
into
imul
aam
jbe
add
jae
arpl
das
mov
xchg
adc
insl
ds
sbb
movsl
jae
imul
sarl
xor
icebp
push
dec
inc
cld
cmpsb
or
stos
outsb
mov
cwtl
shlb
stos
mov
or
pop
mov
pop
ficoms
repz
lret
out
cmp
out
push
in
push
dec
or
inc
cmp
jno
jle
movsl
fs
notl
and
adc
adc
popf
cltd
xchg
in
sbb
imul
push
das
or
cmp
lret
xchg
fists
xlat
xor
mov
clc
stc
inc
or
mov
leave
jp
lcall
and
sbb
mov
jnp
out
sbb
fdivrp
mov
insl
pop
repnz
jne
pop
pusha
fs
ljmp
aas
mov
pop
out
jbe
dec
clc
or
add
aad
in
imul
in
sti
or
ja
add
icebp
inc
pop
and
or
sub
mov
rorl
xor
fwait
adc
repz
je
insl
fcomip
rorl
rcl
out
cmp
mov
mov
jne
and
fmull
or
mov
cltd
pop
cmc
gs
ja
inc
repnz
ds
popf
movsl
adc
test
sbb
js
outsl
and
push
loopne
adc
mov
test
je
bound
mov
rcrl
adc
adc
and
xlat
jg
insl
and
mov
dec
inc
xchg
push
push
mov
xchg
mov
bound
xor
insl
bound
and
shll
mov
push
and
ret
outsl
out
das
popa
nop
ret
leave
push
flds
mov
sti
jmp
mov
push
pop
scas
out
inc
fs
push
cmc
rolb
sub
outsb
ljmp
js
add
repnz
and
mov
in
bound
out
movsb
xchg
insl
fwait
pop
push
dec
fwait
ss
push
mov
test
stos
jae
adc
aad
fadd
push
test
sbb
mov
sbb
xor
adc
jg
test
mov
pop
and
sbb
push
push
pop
sahf
mov
cmc
dec
cmpsl
mov
aad
mov
fbstp
jecxz
loope
jmp
xchg
mov
mov
cmpsl
scas
jmp
jecxz
sahf
movsl
inc
jo
mov
sbb
stos
dec
push
cltd
xchg
inc
int
subl
push
sbbb
xchg
shrb
sahf
fstpt
loopne
ja
adcl
push
jmp
std
push
aaa
cmp
mov
aad
pop
mov
jae
repnz
jmp
push
mov
outsb
add
pusha
test
cmp
xchg
sbb
loop
dec
jno
loope
addr16
std
inc
cmp
shl
scas
cmp
test
xchg
jno
lahf
ss
mov
pop
xchg
jl
mov
cmp
rolb
pop
xor
lods
mov
lret
call
dec
subl
xorb
jnp
test
jnp
xchg
call
int
adc
sbb
dec
cmp
daa
adc
xchg
xor
negb
jo
scas
add
add
mov
jmp
mov
outsb
xor
and
mov
cmp
imul
lret
jmp
inc
mov
test
sahf
mov
push
outsb
add
jle
sub
loope
xchg
inc
push
dec
leave
inc
sbb
mov
movsl
dec
push
sar
push
aad
mov
shll
sahf
es
sub
icebp
inc
and
fcmovu
outsl
clc
mov
dec
clc
stos
nop
jae
add
shlb
jae
xchg
addr16
int3
push
add
pop
cmc
pop
jae
cmpsl
std
jbe
xor
lods
mov
fildl
xchg
dec
icebp
pop
or
mov
inc
jno
stos
int3
jmp
add
cltd
jge
mov
dec
testl
mov
loopne
stc
jns
ja
aam
popa
push
cs
push
ficompl
addr16
inc
inc
roll
jecxz
dec
lret
cld
lcall
mov
js
push
arpl
in
push
out
je
or
xchg
js
xor
scas
fimull
jae
mov
push
mov
xor
adc
loopne
loopne
ja
fmull
daa
gs
adc
mov
cmp
dec
dec
cmc
sbb
and
and
shr
aas
sub
and
xchg
leave
inc
and
test
push
sbb
mov
dec
mov
int
xchg
jo
mov
jb
aam
lret
mov
insb
pop
movsb
dec
mov
jp
xchg
xlat
pop
push
ficoms
js
cmpsl
mov
inc
and
repz
sti
mov
jmp
mov
out
inc
lcall
push
loop
or
mov
mov
sbb
jl
push
bnd
cmc
insb
dec
mov
mov
dec
sti
mov
lea
xchg
jecxz
sub
push
xor
dec
lea
dec
aad
dec
scas
in
jp
out
loope
xchg
nop
sar
in
cmp
in
mov
mov
lock
loope
scas
std
sub
sub
dec
xchg
lahf
sbbl
cmp
in
mov
push
imul
and
ds
jno
sub
aam
sbb
jbe
leave
scas
fsubs
pop
cmpsl
cmp
xchg
jbe
nop
add
jmp
out
and
rorb
push
pop
add
arpl
aas
outsb
inc
add
ljmp
pusha
xchg
dec
xor
jecxz
jp
mov
jg
pop
inc
ljmp
mov
outsb
pushw
mov
data16
push
pop
jg
sahf
cld
insl
insl
xlat
pop
movsl
je
test
jmp
icebp
sub
jecxz
push
xchg
xor
cmc
clc
mov
out
adcb
arpl
mov
popf
inc
mov
cmp
cltd
clc
int
or
mov
fldcw
in
out
jne
lock
xchg
push
stc
sub
andb
add
lret
shlb
es
gs
or
pop
in
jecxz
cmp
inc
adc
push
push
xor
ss
sub
fldl
push
dec
out
div
inc
popa
sbb
jae
js
loope
sarb
jnp
stc
test
push
add
sbb
jge
out
jmp
push
mov
pop
push
lods
add
aaa
add
ss
dec
stos
dec
pop
bound
orl
adc
fcompl
arpl
imulb
pop
imul
add
push
mov
aaa
cmc
hlt
pusha
jmp
sbb
mov
jmp
aas
rorl
add
or
adc
mov
mov
hlt
mov
sahf
push
inc
aaa
int
sub
test
jb
push
gs
dec
push
push
and
subl
push
stc
xor
out
addr16
int3
adc
testb
mov
xor
mov
int3
adc
adc
sub
push
push
leave
mov
jl
outsb
xor
jo
stos
shl
mov
dec
ds
adc
sbb
cli
mov
jne
popf
and
push
outsb
mov
fdivl
imul
outsl
xchg
je
lahf
popf
dec
xchg
aaa
sub
es
sub
jecxz
add
fidivrs
and
pop
mov
out
gs
inc
sahf
icebp
push
ljmp
lods
add
cltd
test
cs
push
sti
mov
aad
mov
lds
outsb
jge
mov
mov
aas
or
and
pop
mov
not
sarl
sbb
adc
icebp
lea
cmpsb
les
push
mov
repnz
mov
cltd
ds
push
fistl
mov
mov
pop
aad
clc
and
mov
idiv
inc
gs
push
fiadds
stc
xor
addr16
js
mov
mov
pop
ret
push
insl
lret
sub
mov
hlt
bound
add
cmp
icebp
pushf
xor
movsb
mov
mov
nop
rcll
push
ja
inc
or
adc
and
mov
shl
jnp
jns
mov
insb
ja
shl
jb
clc
movsb
dec
sub
shll
ror
sbb
filds
jl
cmpb
pop
mov
insl
bound
sub
sbb
jo
xchg
inc
cld
lahf
mov
fbstp
out
fidivl
enter
pop
lcall
mov
fldt
stc
pop
cs
jne
or
call
jmp
xchg
inc
inc
das
loope
mov
lods
jmp
pop
xor
js
popf
xchg
sub
out
pop
out
xchg
mov
mov
pusha
dec
fdivp
arpl
add
test
adc
and
add
data16
cmp
int
fsubrl
inc
adc
sub
xor
mov
cmp
js
fs
add
jae
cmp
fwait
pop
ret
dec
xchg
mov
mov
loope
add
out
mov
mov
xchg
mov
stos
xchg
adc
jno
std
fldcw
push
push
xchg
nop
mov
data16
clc
or
in
cmp
outsl
add
icebp
mov
jmp
fdivr
test
cmp
dec
mov
and
test
pop
cs
loope
jecxz
xchg
push
test
out
inc
and
loopne
mov
movsl
pusha
cmpsb
mov
xor
jle
add
push
js
adc
add
outsl
mov
orl
fs
xor
mov
push
rcl
or
test
mov
push
leave
or
pop
push
out
push
pop
xlat
aaa
mov
pop
ljmp
sbb
sbb
ficoms
loop
in
add
sbbl
cmp
cmp
fstl
test
cwtl
nop
xor
xchg
dec
cltd
or
cmp
push
and
loop
out
stos
cmp
lock
and
sbb
inc
lea
fisubl
rorl
xchg
in
cwtl
imul
arpl
les
into
dec
mov
sub
jb
testl
call
adc
das
xchg
hlt
aas
xchg
aaa
scas
xor
sti
scas
mov
sub
xor
sub
push
add
sub
stos
call
or
dec
sbb
mov
push
adc
out
sbbl
xchg
push
mov
pop
mov
imul
out
xchg
ret
xor
mov
pop
mov
dec
dec
cli
jb
and
gs
int
pusha
pop
fistpl
or
pop
out
imul
dec
mov
test
jle
cmpsb
jnp
cmp
add
sub
repnz
adc
daa
pop
pop
sahf
xor
or
lahf
inc
cmp
pop
cmp
cmpsl
addr16
fidivs
add
pop
fst
jmp
sub
adc
xor
dec
outsl
xchg
xor
arpl
sbb
pop
sub
repnz
or
push
test
gs
lret
stos
scas
xor
push
jp
jl
stos
jg
and
movsl
popf
inc
and
push
cmc
xchg
cmc
sarb
out
fdiv
cli
sahf
testb
mov
pop
mov
imulb
mulb
xor
jmp
movsl
inc
pop
mov
pop
pusha
mov
enter
push
ficoml
adc
das
out
lahf
into
mov
es
mull
pop
ja
add
or
xchg
mov
and
arpl
sbb
hlt
dec
xchg
das
inc
subl
mov
xchg
cmc
int
data16
out
mov
out
adc
in
pop
push
xlat
mov
xchg
dec
cmp
inc
mov
fs
mov
js
and
gs
xchg
push
mov
mov
sbb
adc
push
push
sbb
fisubl
lret
cmp
cmp
pop
divl
ja
sbb
inc
aad
xor
mov
ret
or
aas
xchg
int
movsb
sub
das
je
lret
pushf
rol
call
push
mov
or
ja
xchg
xchg
stos
mov
push
lock
inc
loopne
movsl
es
sbb
jbe
mov
mov
cmp
cmp
stos
mov
bound
jnp
sbb
or
imul
push
pop
les
adc
cmp
push
in
dec
fistpl
push
adc
jae
lds
and
cmp
cmp
data16
clc
testb
dec
jae
xchg
movsb
inc
dec
pop
push
mov
adc
push
int
aaa
sahf
ret
repnz
lock
ret
daa
jbe
mov
xchg
push
test
push
rcl
sub
add
pop
lods
ret
mov
aaa
xor
fisttpl
pushf
lahf
push
or
fbstp
push
push
lret
aas
test
push
out
imul
push
mov
loopne
sub
repnz
fcoms
and
outsl
xchg
popf
daa
iret
mov
mov
lea
push
loopne
dec
or
xchg
push
stos
pop
loop
dec
test
add
in
mov
xchg
fstps
mov
icebp
add
inc
cmc
adc
sbb
cmpsl
xor
mov
sub
sbb
mov
aas
iret
xchg
push
aad
pop
pop
xor
mov
mov
stos
jno
mov
lods
in
pop
nop
xchg
or
mov
fsts
xor
in
adc
inc
mov
dec
xchg
jne
popl
pop
xchg
sbb
ss
xor
test
in
ds
mov
inc
testl
lcall
mov
inc
dec
xor
mov
std
fwait
push
pop
xor
cli
sahf
adc
xchg
mov
fwait
jecxz
jmp
cmp
or
lret
fstps
int3
lret
sbb
frstor
sub
dec
and
add
lret
ds
push
arpl
xor
lea
inc
lods
or
fcomps
loop
shrb
imul
insl
insl
sarb
fsubrs
jecxz
mov
push
jae
out
jnp
mov
andb
movsb
ret
dec
inc
lods
xor
mov
xor
jae
mov
out
je
mov
ds
cmp
call
dec
out
sbb
jecxz
pmaddwd
loopne
shl
inc
add
sub
mov
je
push
lahf
cmp
fisubrs
mov
and
ds
test
push
cmp
mov
clc
outsl
inc
xchg
inc
mov
or
jl
inc
inc
pop
call
data16
push
fs
push
jecxz
imul
jg
testb
jge
push
mov
fnsave
popf
mov
dec
dec
cmp
lods
fcmove
dec
mov
xor
mov
repz
mov
insl
popf
daa
xorl
adc
aas
stc
negb
jnp
adc
mov
scas
bound
xor
inc
adc
dec
mov
icebp
aam
fmull
cld
inc
pop
mov
rcll
xchg
jo
jp
stc
repz
jo
adc
push
daa
mov
aad
mov
sbb
popf
push
push
fildll
pop
sbb
lret
add
or
cmpsb
adc
ret
push
jo
xchg
push
adc
mov
pushf
sahf
adc
outsb
and
lods
jp
ret
mov
and
cmp
xor
call
sbb
mov
push
jle
sbb
add
inc
cmpsl
ds
pop
roll
or
mov
movsl
test
clc
cwtl
stos
lods
sbb
ds
lea
and
and
out
sti
aas
push
test
stos
sbb
fcmovnb
rorl
pop
add
in
xor
xor
xchg
pushf
mov
sbb
jns
inc
or
or
mov
mov
dec
cli
pop
stc
in
pop
push
sbb
out
jb
inc
add
xor
pop
cmpsb
inc
pop
jl
and
mov
in
mov
push
inc
sub
and
adc
popa
fsubrs
aad
sub
gs
push
mov
aam
jle
push
mov
inc
add
aaa
cmc
pop
ficompl
mov
ds
jne
test
push
jae
loop
adc
jae
jnp
or
push
or
push
xor
and
fwait
movsb
mov
push
jmp
aaa
cli
bound
mov
mov
jge
cwtl
call
int3
dec
dec
bound
stos
cmc
dec
cmp
stos
jp
call
mov
repnz
mov
lods
divl
rorb
cmpb
out
or
mov
dec
xchg
stos
pop
shl
push
ret
or
or
jns
push
leave
ja
pop
sbb
mov
mov
pop
push
cltd
cmp
mov
fildll
test
and
jbe
scas
outsb
push
aam
mov
mov
sarb
xchg
stc
pop
scas
push
xchg
repnz
test
scas
pop
mov
idiv
stos
and
je
push
jns
pop
iret
mov
adc
and
mov
lock
mov
and
outsl
dec
lock
pop
in
lret
xchg
sbb
enter
int3
fisttps
aas
pop
cmp
aad
lret
dec
lret
jnp
and
out
mov
jp
fwait
xchg
dec
xor
das
jbe
sbb
je
fcomip
aas
lds
xchg
mov
or
scas
je
mov
push
movsl
mov
mov
pop
popf
loopne
inc
cmpb
and
jne
movsl
and
mov
scas
xchg
mov
pop
imul
cmp
mov
aas
scas
push
and
inc
cltd
mov
mov
pop
sbb
mov
out
xor
mov
mov
cmc
or
insl
iret
sub
push
mov
sub
outsl
arpl
add
or
pop
insb
adc
mov
insb
enter
stc
mov
xchg
jo
std
add
cmp
sbb
jmp
lcall
jge
sahf
scas
pushf
mov
push
push
xchg
and
push
jmp
or
or
dec
mov
mov
push
and
push
gs
mov
cmp
pop
ss
mov
clc
cmp
lds
add
fstpl
out
dec
aaa
mov
add
jnp
jbe
and
fcomp
jecxz
iret
icebp
jmp
or
stos
mov
cltd
leave
cmp
mov
jl
adc
or
pop
lret
out
call
inc
xor
and
lock
enter
mov
inc
mov
xchg
adc
push
mov
aad
imul
adc
addb
xlat
mov
jmp
mov
push
inc
shrb
mov
sub
es
xor
dec
add
ds
xchg
es
jae
xchg
dec
jns
scas
dec
repz
nop
mov
inc
out
cmpsl
sti
pusha
xchg
mov
scas
mov
stos
mov
notl
push
cmpsb
test
adc
vpmulhw
aas
sbb
cs
sub
sub
lcall
mov
in
fdivs
mov
mov
rcll
xlat
push
mov
sub
mov
jbe
ljmp
ret
out
cld
pop
aam
mov
jg
pop
and
add
repz
into
or
scas
mov
jno
mov
je
stos
sarl
fsubs
pop
or
jo
mov
stos
pop
in
out
mov
xchg
outsl
clc
pop
enter
ljmp
aaa
mov
shll
bound
sbb
cltd
sub
inc
jae
shl
addl
add
dec
aad
mov
add
adc
dec
jl
push
cmp
push
inc
test
loopne
shll
cmc
cwtl
mov
sti
dec
je
clc
dec
aaa
xchg
cld
shll
adc
pop
ss
cltd
ret
ss
rorb
inc
repnz
pop
dec
pop
divb
daa
fcompl
push
ljmp
add
and
iret
popf
jecxz
scas
enter
das
dec
test
mov
out
push
jns
and
stos
lods
or
mov
pop
cmpl
add
or
cmp
pop
inc
jmp
fisttpll
cltd
inc
jbe
bound
xor
cld
and
push
mov
ljmp
cli
cmc
xchg
mov
popf
out
or
je
xchg
jg
dec
mov
mov
js
mov
cli
dec
inc
or
pop
jmp
pop
push
mov
sbb
bound
sbb
adc
je
cs
andb
enter
cmp
dec
int3
jge
mov
sbb
ja
push
call
adc
mov
movsb
test
mov
sbb
fimuls
push
mov
push
jo
lea
sar
icebp
mov
jmp
jg
pop
pop
xchg
inc
xrelease
mov
mov
push
movsb
xor
mov
clc
gs
cmpb
ret
jae
adc
pop
cmpsb
addb
rorb
or
push
push
les
clc
mov
cltd
inc
inc
test
jl
aaa
cmp
jno
lods
sub
std
inc
inc
pop
xchg
sub
fisubrl
add
adc
push
popa
jns
mov
lcall
dec
pop
pop
lret
ds
inc
sub
push
and
sbb
loopne
imul
mov
sub
rclb
in
imul
mov
in
dec
out
mov
fwait
lock
aam
mov
pusha
adc
addb
ret
sbb
or
insl
push
add
rcl
rorl
lret
aad
xchg
pop
mov
fcmovu
mov
aas
mov
inc
int3
ficompl
es
jecxz
cmc
divl
ret
pop
mov
in
sub
jnp
cs
in
jns
shr
out
mov
sahf
fbld
in
fldt
shll
fidivl
push
aam
rclb
sub
xchg
test
es
mov
das
scas
js
pop
xlat
mov
add
adc
and
cli
inc
jae
dec
notb
and
xlat
inc
mov
pop
or
xor
clc
stos
divb
mov
sti
mov
mov
add
insl
mov
mov
cmp
mov
push
stc
daa
sub
mov
scas
aaa
insb
and
adc
addr16
neg
pop
cld
add
inc
pop
cmc
push
push
sbbb
test
push
and
jnp
sub
inc
jg,pn
out
pop
add
js
jo
lret
stos
outsb
addr16
test
loope
or
mov
fiaddl
xor
and
adc
push
push
inc
pop
xor
lahf
rcrb
cld
dec
mov
and
or
or
ret
mov
jle
dec
fcomps
imul
sbbb
les
pop
sub
movsb
jne
add
shrb
sub
pop
fstps
jl
push
dec
xor
fnstenv
inc
jno
lahf
jo
push
adc
add
xlat
jecxz
addl
mov
push
int3
cmp
cld
test
jns
ficomps
fbstp
adc
scas
sub
or
insl
aad
mov
mov
insl
lods
mov
xchg
or
jmp
xor
fbld
aad
imul
pop
push
outsl
sbb
cli
movaps
into
roll
iret
mov
xor
add
push
in
popa
sbb
test
jg
cwtl
addr16
shr
lds
mov
sbb
add
enter
iret
insl
fisubrs
arpl
lods
jmp
ljmp
xchg
lds
subl
pop
push
push
add
xlat
mov
inc
shll
fstps
bound
mov
push
shr
sti
cmc
push
ficomps
outsb
clc
or
lods
arpl
lods
int3
jne
sti
ljmp
aas
push
out
inc
test
shll
outsb
fisubrl
push
mov
adc
rcll
out
int3
mov
mov
add
sbb
cmp
clc
dec
xor
xor
mov
lea
sub
pop
bound
jb
lret
dec
jg
lds
fistpll
enter
outsl
iret
lret
jmp
rolb
jns
iret
aaa
pop
addb
xchg
and
call
and
sub
inc
mov
inc
sub
in
test
imul
fsubl
in
xlat
push
ret
movsl
daa
push
in
pop
mov
pop
jae
test
test
in
fisttpl
les
out
mov
dec
inc
shll
jmp
aas
arpl
mov
cmp
xchg
sbb
push
push
icebp
int
or
or
aad
movsb
js
push
sarl
and
jg
mov
xor
pusha
int3
and
adc
inc
mov
sbb
rolb
cmpsb
mov
xchg
pushf
shlb
int3
mov
js
es
hlt
mov
imul
adc
rorb
ret
fdivrl
xchg
call
lea
fcomps
ds
mov
xlat
rcl
or
fptan
iret
add
add
idiv
mov
sbb
mov
jle
inc
jno
jl
xor
and
dec
mov
clc
xchg
ss
mov
fwait
mov
push
daa
sti
adc
dec
mov
cmp
add
js
int
sub
ret
and
shll
mov
scas
mov
dec
sbb
in
in
sbb
or
sbb
and
adc
or
mov
lods
xorb
movsb
iret
push
inc
mov
lret
xchg
jmp
sbb
jno
enter
ret
sub
pop
movsb
xchg
pop
stos
mov
repnz
xchg
repz
mov
ds
mov
sbb
or
int3
xorl
in
ret
aad
cli
fistps
dec
aad
cmpsl
inc
push
imul
int3
loope
aad
lods
dec
xchg
shlb
mov
dec
mov
andl
jo
mov
pop
fdivl
xlat
lcall
sbb
jnp
dec
pop
sbb
rcl
and
fdivp
mov
pop
std
sub
add
xchg
ret
sti
mov
xchg
fdivr
xchg
sbb
pop
lret
jecxz
mov
arpl
or
stos
inc
add
jmp
enter
cmc
shll
mov
sbb
fisttpll
iret
stos
and
dec
imul
and
cmpsl
cli
push
mov
xchg
jo
out
jmp
ja
mov
rcrb
fdivs
lods
or
xor
xlat
iret
mov
popa
mov
dec
mov
xchg
adc
lock
dec
cmpsl
aam
inc
lock
out
sbb
rcrb
jmp
enter
lods
mov
or
add
xor
flds
arpl
subl
sbb
gs
push
je
cmc
sarb
cmp
ret
pop
shlb
repz
jae
mov
pop
test
jae
sbb
stc
xor
xor
dec
jecxz
cmp
cld
push
dec
cmc
add
ss
dec
mov
jbe
xchg
sbb
xchg
rolb
hlt
sub
mov
arpl
decl
repnz
push
out
xor
rcll
cmp
sbb
dec
add
sahf
mov
cmp
xor
loop
aad
test
adc
push
scas
lock
pop
pop
mov
gs
and
adc
and
sub
jae
inc
out
movsl
fldenv
shll
lds
sbb
jge
test
jg
and
inc
jb
insl
mov
sub
insb
jne
shrb
cwtl
int
lret
mov
lea
xchg
cmp
and
adc
in
inc
fisttpl
push
fcomip
imul
mov
negb
sbb
ss
rep
mov
cmp
add
xorl
mov
mov
and
cmpsb
sbb
pop
fisubrl
or
xchg
ret
les
outsb
mov
pop
or
sbbb
mov
sti
add
aam
mov
pop
pusha
mov
dec
cmp
cmp
hlt
scas
inc
arpl
scas
ret
js
outsl
out
mov
loop
xchg
or
ljmp
xchg
push
popa
ljmp
int3
imul
dec
adc
inc
jmp
scas
ljmp
xchg
shl
adc
xor
in
mov
mov
pop
mov
push
dec
pop
xchg
loopne
push
push
subb
lods
xchg
out
jmp
aad
lcall
scas
jno
into
pop
add
sub
int3
xchg
xchg
lods
rcrl
lcall
jns
mov
sbbl
adc
jmp
test
sbb
xor
aas
insl
cld
pop
inc
jb
dec
pop
push
adc
je
sarb
cmc
mov
stc
cmp
cmp
mov
shlb
and
stc
cmp
sub
mov
loopne
in
test
xchg
outsl
jb
clc
cli
sbbl
cmp
je
and
pop
loope,pt
cmp
xchg
lcall
pop
xchg
mov
sub
jge
xchg
and
xchg
cwtl
fcoms
jmp
inc
lahf
add
into
out
xchg
stc
xchg
cs
or
push
adc
adc
je
scas
outsb
xchg
movsl
xchg
jle
test
sub
dec
xchg
and
in
enter
inc
and
mov
add
sub
sub
pop
inc
out
mov
frstor
stc
xchg
out
pop
ljmp
mov
cwtl
xchg
mull
jg
sub
iret
js
push
cmp
fnstenv
sti
and
leave
aad
or
std
popf
movsl
pop
sbb
xchg
pop
xchg
pop
ja
pusha
cmpsb
sbb
jl
sub
dec
mov
sbb
fidivs
lea
mov
outsb
test
ret
fadd
imul
rolb
push
add
shll
nop
jo
sub
and
xchg
jns
arpl
dec
loope
fwait
sub
push
pop
insl
leave
sub
aas
std
jecxz
ror
sbb
mov
or
loope
lea
push
movsl
cmp
ja
fisttps
adc
inc
or
out
movsb
cmpsl
jo
pushf
pop
mov
rolb
int3
roll
mov
mov
sub
sub
push
mov
jns
call
sar
movsb
cmc
add
mov
or
mov
cmp
lahf
rcl
push
jmp
jecxz
rcr
cmpb
jno
lods
push
cmp
xor
fwait
inc
sub
adc
iret
mov
or
dec
dec
sbb
int
lahf
push
cmp
pop
mov
sbb
jmp
pushf
mov
mov
mov
or
cld
lahf
xor
jae
jns,pt
sbb
call
pusha
sbb
mov
push
push
mov
lock
fwait
fwait
sub
not
jb
xchg
jae
in
xchg
fldt
mov
ljmp
je
mov
in
scas
fistpl
xchg
fadds
jp
add
and
mov
inc
mov
or
mov
sbb
jg
sar
push
ror
pushf
out
in
fdivrl
mov
in
popa
inc
sahf
mov
test
dec
xchg
push
rorb
sub
data16
das
ret
mov
iret
jl
add
xchg
mov
dec
push
mov
pop
or
and
and
pop
dec
rcr
rcrl
cmp
addr16
mov
and
or
stc
loopne
jno
sbb
cltd
or
or
xchg
adc
cltd
sub
xor
mov
in
fdivl
pop
pushl
xchg
pop
push
xchg
test
roll
push
popl
ret
out
and
jb
push
mov
popa
or
loop
dec
fdivs
aaa
pop
stos
sub
jle
sbb
jl
lods
fsts
test
les
lea
sub
in
mov
cmpsb
sub
cmp
std
sub
ficompl
lret
pop
clc
outsl
lods
rolb
mov
arpl
fisubrl
lahf
fists
mov
je
xchg
pop
or
mov
ds
cmp
jbe
pop
adc
push
mov
pop
aad
fwait
dec
ljmp
inc
mull
fimull
adc
add
or
pop
addl
mov
mov
lret
shlb
js
jle
lahf
pushf
add
scas
xchg
cld
ljmp
fcoml
int3
arpl
in
pushf
in
in
data16
mov
andl
pop
mov
xor
jne
xor
scas
jo
hlt
repnz
pop
sub
fldcw
movb
push
mov
inc
pop
jp
das
cs
sbb
pop
in
sbb
pop
rorb
add
cmp
xor
and
lds
ficoms
ja
jecxz
fists
popa
popa
xor
sti
sbb
daa
mov
jecxz
inc
add
sbb
jns
xor
pop
movsb
movsb
inc
inc
outsb
gs
bound
and
pusha
pop
lock
movsl
in
lret
dec
mov
push
mov
dec
leave
lret
or
xor
outsb
divl
sbb
mov
dec
insb
nop
mov
fnsave
pushf
jecxz
icebp
aaa
mov
fs
aas
push
lea
shrb
mov
jae
arpl
pushf
out
push
fst
es
add
mov
mov
leave
sti
outsb
mov
lods
mov
push
and
pusha
gs
shlb
dec
pop
sub
pop
push
mov
popa
hlt
mov
xchg
das
adc
out
jae
xor
sub
mov
out
pop
cmp
in
sbb
outsb
jns
nop
cmp
int3
cwtl
jle
dec
cmp
repnz
and
into
or
push
pop
jbe
jbe
lahf
mov
mov
jb
and
xlat
outsb
test
popf
push
scas
mov
push
out
int3
xchg
insb
xchg
mov
or
fisubs
inc
fisttps
lret
mov
pop
roll
dec
fists
enter
rclb
jle
fcoml
rcr
gs
push
push
jl
or
in
xchg
cs
or
or
push
sbb
ds
cmpsl
mov
jb
xchg
pop
hlt
mov
out
ljmp
rcl
sub
cmp
mov
cmp
mov
xor
adc
jge
xchg
les
push
lret
cmp
out
cmp
cmp
pop
jge
jno
jge
mov
arpl
inc
push
fldcw
lret
pop
adc
ret
outsl
xchg
sbb
data16
outsl
fsubrs
fildll
push
add
insb
gs
hlt
scas
cmp
cld
or
sbb
repnz
add
or
cmp
gs
sub
xchg
pop
ret
fsts
sub
rcrb
fs
cmp
lds
inc
jmp
fwait
sbb
or
bound
push
in
jo
je
in
sbb
xchg
nop
jns
std
sbb
fldl
jl
clc
pusha
lea
dec
cmp
shll
mov
cmp
orb
adcl
sar
aad
icebp
dec
inc
dec
sbb
cmpl
add
mov
jg
nop
les
scas
es
scas
test
mov
jg
movsb
fcmovbe
lods
xor
lea
xlat
aad
mov
cmp
inc
push
push
out
mov
pop
notb
cmp
or
jno
xchg
sub
outsb
jp
sbb
mov
lret
and
cld
dec
popa
gs
cmpsb
arpl
sbb
adc
sti
fstl
adc
scas
cs
xorl
loop
std
int3
dec
in
movsl
sbb
mov
sbb
into
enter
push
out
into
push
jmp
and
xchg
and
dec
push
dec
cmpsb
pop
sarb
xorl
aad
aad
pop
jp
jne
and
inc
pop
hlt
repz
bound
pop
cmpsb
into
sbb
int3
movsl
inc
sbb
int
sbb
xchg
xlat
ret
pop
stos
lret
xchg
or
std
pop
scas
gs
loope
mov
inc
jnp
fmuls
lock
in
mov
mov
and
xchg
push
pop
arpl
ljmp
jb
std
lds
xlat
xorl
sbb
dec
data16
fcompl
add
pop
inc
sub
jmp
scas
or
xchg
je
std
pop
nop
mov
fildll
jecxz
loopne
mul
adc
xchg
xchg
int3
mov
xchg
xchg
cli
ror
xchg
aad
bound
add
mov
out
gs
popa
rcr
loopne
pop
leave
sarb
cmp
shlb
stos
call
jge
sbb
push
sub
int
divb
aas
insl
mov
test
dec
pop
pop
mov
gs
test
shl
mov
stos
jg
stc
mov
mov
mov
shll
imul
push
sahf
cmp
dec
dec
lea
xchg
push
rol
add
and
xor
mov
sub
sub
ss
push
imul
movsl
and
and
mov
hlt
out
lock
mov
pop
mov
xchg
push
push
inc
test
xchg
je
adc
dec
mov
jae
mov
addl
jne
adc
adcl
jge
jle
cltd
jle
xor
inc
dec
out
add
xchg
inc
adc
je
fwait
jg
mov
inc
mov
mov
lds
adcb
jl
cmp
cmp
aam
faddp
mov
fmuls
jne
loopne
mov
sbb
fists
inc
loopne
mov
jmp
aam
ret
dec
aad
popa
negl
xor
sub
sahf
or
decl
jle
add
movsb
xchg
mov
aad
adc
lods
fldt
pop
xchg
mov
in
loop
xchg
jp
aaa
xchg
xor
js
adc
lret
and
jb
pop
jb
imul
mov
hlt
adc
loopne
jge
sub
push
in
add
jle
mov
and
cmp
mov
int
je
adc
inc
pop
dec
xchg
mov
out
inc
andb
mov
mov
test
xchg
mov
and
xchg
add
mov
sarl
or
xchg
ljmp
push
mov
jmp
inc
imul
cli
jne
xor
insl
jge
lcall
dec
inc
or
push
out
cmp
ds
pop
popa
pop
cmp
lahf
pop
sub
fwait
rcl
inc
pusha
popa
cwtl
je
ds
xor
mov
xor
aam
dec
cmp
icebp
loopne
imul
outsl
adc
outsl
cltd
and
pop
push
imull
mov
and
inc
addr16
imul
loop
adc
mov
pop
push
xor
push
jmp
inc
test
nop
test
jnp
mov
sub
jecxz
cmp
and
loop
pop
andb
imul
xchg
hlt
ror
inc
clc
cmp
xchg
jg
inc
loope
mov
dec
jmp
lods
mov
jns
les
fidivrs
xor
pop
push
cmp
cmc
pop
xor
stos
xchg
mov
dec
jne
or
ret
pop
je
mov
xor
mov
jno
adc
cmp
js
mov
push
mov
mov
sbb
pop
pop
out
frstor
inc
xchg
xor
dec
jo
push
fists
jp
push
fwait
enter
imul
pop
cld
repz
psraw
mov
ljmp
jae
mov
out
xlat
bound
jmp
and
lret
mov
fs
cmp
and
xchg
dec
jae
mov
pop
sub
ret
sbb
mov
aam
or
cmp
fcompl
jle
xchg
cmp
mov
test
shlb
or
push
xor
mov
cmpb
lods
pop
mov
fisubrl
popf
nop
fucomp
mov
inc
dec
cmp
pop
xchg
ja
setl
adc
xchg
in
and
popf
aas
out
adc
push
dec
sbb
push
cmp
pushf
rclb
notb
clc
shlb
fisttpll
sbb
inc
inc
xor
shrb
movsb
rcr
pusha
inc
rorl
pop
aad
pop
mov
jecxz
adc
adc
xchg
mov
cmp
js
mov
lcall
loop
dec
pop
push
pop
out
cmp
icebp
adc
pop
jae
addb
inc
xchg
push
inc
jge
sbb
mov
cmp
pop
add
pop
jle
fsubs
inc
or
inc
lret
pop
inc
xor
xor
addb
sbb
mov
aad
scas
in
push
das
xor
dec
dec
xor
mov
sub
mov
mov
pop
in
xor
or
out
sbb
dec
mov
jecxz
xchg
iret
adc
push
inc
bound
cmp
shr
xchg
cmc
sub
cli
into
inc
test
mov
insl
jmp
addr16
sahf
cli
lods
movsl
jge
cwtl
in
sbb
cmp
cwtl
lcall
leave
jmp
cmp
iret
push
sbb
xor
testb
mov
mov
sbb
push
pop
and
movsb
nop
vmwrite
lcall
cmp
pop
mov
ret
mov
fldl
cwtl
je
mov
mov
mov
sub
subl
xor
xchg
inc
shlb
mov
xchg
xchg
xchg
inc
add
loope
mov
mov
cmpsl
mov
sahf
sbb
in
aad
xor
leave
pop
mov
sbb
push
push
rcll
push
ss
add
xor
pop
adc
sub
out
xor
enter
mov
aam
mov
inc
aas
adc
movsl
test
push
mov
xor
mov
cld
xchg
jge
dec
aad
jb
fidivrl
inc
aam
mov
jge
dec
loop
aam
dec
arpl
sbb
test
outsb
mov
sarb
jne
adcl
icebp
leave
push
imul
xor
pop
xor
push
inc
out
jge
push
mov
lcall
mov
pop
mov
lds
inc
pop
ss
loope
sbb
mov
popf
stc
daa
mov
loopne
dec
and
mov
pusha
test
hlt
adc
aas
push
lret
cld
pop
add
lods
xchg
mov
sbb
sub
adc
fimull
or
adc
lods
enter
ja
dec
subb
push
xor
add
jb
jg
jl
cmp
shrl
in
divb
add
push
aad
lcall
mov
xchg
xchg
pop
jbe
sub
daa
mov
adc
lret
xchg
fs
fisttpll
hlt
cmp
dec
aas
cltd
and
subl
jmp
sarl
iret
fadds
or
sbb
adc
sti
cmp
sbb
cwtl
pop
sub
scas
xchg
mov
adc
dec
jecxz
ficomps
jp
jp
mov
cld
inc
and
imul
cmp
aam
push
insb
das
mov
popa
aas
icebp
jge
ja
push
mov
add
dec
lret
pop
push
and
and
popa
xchg
xor
rcrb
lds
lahf
lcall
inc
or
mov
xchg
cmc
mov
cs
mov
mov
fsubs
xchg
clc
mov
mov
imul
add
lock
fcomip
leave
addr16
xchg
xchg
mov
cwtl
push
daa
cmpsb
inc
and
mov
dec
pushf
rcll
subl
mov
int3
fistpl
push
mov
jmp
arpl
int
push
fwait
mov
in
xor
jmp
sub
scas
add
fs
ds
js
mov
jns
pop
rol
push
jmp
bound
aam
nop
repz
sbb
cmp
push
inc
fistl
adc
das
pop
out
iret
outsl
push
dec
mov
push
std
jo
lret
xlat
repnz
sbbb
pushf
jmp
inc
adc
jg
test
aam
sub
cmp
in
cmc
push
fwait
lds
mov
adc
jae
xchg
push
ja
mov
mov
mov
add
xor
sub
and
mov
dec
pop
pop
and
jne
or
jno
lods
mov
xor
inc
inc
add
pop
xchg
cwtl
insl
jno
adc
std
sti
pop
stc
jns
int3
dec
mov
sbb
jae
shrl
and
inc
dec
lret
sbb
mull
ret
neg
sbb
xor
fwait
jmp
pop
dec
sub
outsl
mov
add
xchg
out
add
push
adc
dec
popa
sub
adc
sbb
imul
das
xlat
jmp
out
jge
jge
stos
addl
repz
jne
sbb
jge
xor
inc
stos
popa
inc
sbb
xchg
mov
and
sbb
mov
add
lret
sbb
cmpsl
pop
es
mov
mov
sub
push
inc
add
nop
outsl
out
sbb
add
add
mov
fucom
jns
fstpl
jg
roll
dec
pop
jnp
pushf
shll
popf
out
mov
add
shrl
sbb
subl
mov
and
shll
test
sbb
fwait
xchg
enter
push
mov
out
or
mov
cs
fwait
test
aad
mov
xchg
repnz
xor
scas
jns
sbb
aaa
rcrb
cmpsl
cmp
adc
outsb
fmuls
shlb
aad
or
aas
mov
adc
push
ds
into
cmpb
sbb
ja
leave
xchg
inc
or
popa
inc
int
push
push
fwait
mov
ds
or
movsb
lret
flds
enter
add
in
add
jne
push
sbb
fwait
sbb
js
mov
push
es
inc
pop
push
sahf
insb
mov
mov
repnz
add
sub
test
xchg
ljmp
adc
ffreep
mov
fcmovne
mov
jp
and
xchg
dec
sbb
enter
js
mov
xchg
xchg
jne
scas
mov
jno
jmp
sbb
aaa
pop
xor
fcoml
add
rcll
push
daa
inc
inc
xchg
cli
inc
mov
js
mov
add
xor
jl
push
ficoml
mov
fmull
js
or
cld
lods
out
loop
and
sahf
jo
mov
rcrl
mov
pop
fdivrs
imul
sbb
or
pop
in
mov
stc
and
aad
fistps
idiv
lock
jg
stos
cld
xchg
lds
pusha
pop
test
inc
or
pop
dec
cmp
enter
push
data16
jp
icebp
ljmp
clc
push
imul
jno
pop
xchg
mov
rclb
adc
jb
jne
je
mov
stos
cli
push
ja
xor
movsb
mov
pusha
jge
inc
xor
bound
adc
mov
clc
lds
mov
inc
movsl
xadd
inc
and
jecxz
jle
mov
jno
mov
mov
sbb
xor
mov
das
jmp
stc
int3
rdtsc
xchg
rorl
sahf
loopne
xchg
mov
mov
jmp
jne
mov
arpl
cmp
or
mov
xlat
pop
lret
jp
jle
dec
popa
xor
xchg
cwtl
jp
jp
lahf
nop
repnz
cli
cltd
leave
inc
pop
fcomps
xchg
mov
add
aas
pop
cmpsl
and
imull
add
leave
inc
mov
outsl
jl
xorl
fisttpl
popa
in
scas
or
data16
mov
in
jp
and
adc
scas
xor
enter
sbb
cmp
add
fwait
add
cs
shrl
cli
pop
cmp
popa
pop
insl
mov
sbb
sbb
ja
cs
faddl
in
hlt
lds
loope
iret
leave
dec
sbb
and
and
jbe
arpl
inc
fs
and
push
mov
cmp
push
jae
lret
sub
daa
and
xchg
es
xchg
pop
fs
sbb
clc
adcb
cmp
mov
lea
call
pop
cs
insb
or
adc
shlb
sub
pop
ljmp
sbbl
push
andb
jo
and
push
push
jecxz
nop
sub
jae
aas
pop
test
imul
add
jle
mov
dec
out
sbb
or
frstor
mov
inc
xor
icebp
mov
pop
dec
lret
dec
pop
mov
leave
data16
sbbl
fdivrs
mov
lock
fldl
movsb
into
xchg
loopne
cmp
inc
push
lcall
fwait
loop
xlat
pop
jo
jbe
shll
inc
pusha
outsl
mov
lret
xor
cs
arpl
and
push
outsl
sub
les
sub
adc
mov
xor
pop
lret
mov
scas
test
imul
or
sbb
jl
idiv
mov
stc
cmpsl
push
shl
test
rcl
lret
jne
or
jae
or
mov
lahf
add
stc
das
pop
cmp
push
bound
test
xchg
pop
pop
lds
or
sbb
int3
shll
cmp
jae
scas
xor
stos
aam
sbb
push
mov
push
jae
lods
shll
fisubs
xor
pushf
jae
int3
mov
test
ljmp
mov
add
cmp
int
ljmp
and
jo
jge
and
push
xchg
lock
mov
jle
std
jp
test
mov
enter
orb
mov
jecxz
mov
cmpsb
push
jbe
mov
mov
sub
daa
push
mov
push
shlb
push
pusha
movsb
push
push
mov
cmpsl
fstpl
popf
icebp
cwtl
mov
jmp
lds
daa
mov
push
imul
pop
mov
movsb
pop
test
loope
and
adc
sbb
pop
hlt
xor
push
pusha
and
in
jecxz
out
mov
inc
jo
repz
xor
jbe
adc
mov
rcll
xchg
insl
test
sub
adc
or
push
insb
add
pop
int
push
add
jge
stos
not
arpl
xchg
sub
push
sarl
add
popf
push
fsubs
mov
xlat
xor
xchg
test
jecxz
fidivrs
push
or
inc
mov
mov
dec
lods
xchg
cld
push
xor
outsb
sub
pop
xor
mov
dec
add
jnp
dec
cmp
nop
xor
adc
sub
adc
xchg
pop
js
idivl
ret
adc
scas
imul
mov
fimull
xor
jb
xchg
or
sbb
xor
call
xchg
mov
pop
hlt
dec
mov
adc
stc
sarb
repnz
pop
jl
not
mov
or
aad
dec
inc
jecxz
and
xorl
sbbb
imul
push
or
jbe
gs
mov
xchg
sub
jecxz
add
stos
mov
rclb
xchg
movsb
movsl
add
jo
xchg
test
cli
mov
cmp
sysenter
sahf
out
push
fs
inc
inc
xor
ss
mov
pop
mov
adc
inc
repz
xchg
cmp
stos
fcoms
stos
cli
addr16
popl
lds
subl
add
inc
clc
pop
xor
add
hlt
daa
cld
sbb
sub
pop
add
cmp
add
and
sbb
sub
cli
mov
lea
push
pop
filds
std
mov
xchg
push
xchg
pop
fs
mov
mov
cmp
roll
scas
xchg
ftst
loop
sub
clc
or
push
mov
idivb
cmc
pop
mov
push
mov
inc
cmp
or
sub
add
out
fcompl
insl
mov
fistpll
ss
mov
lock
xor
dec
cmovns
movsl
call
sahf
inc
cmp
or
ret
mov
cvtps2pd
dec
fisttpll
push
out
mov
mov
outsl
popa
loope
hlt
gs
push
gs
jge
push
push
and
insl
insb
les
scas
jge
pop
add
sahf
test
pop
lret
fstl
xor
sbb
jne
nop
sub
aam
sub
pop
xor
mov
ret
adc
les
push
mov
sbb
adc
jae
xor
gs
subl
mov
stc
iret
mov
sbb
sbb
adc
fdivr
mov
pop
imul
aas
sub
sahf
inc
aam
ret
cs
les
adc
sub
push
int3
jp
fcoml
cmp
mov
in
enter
loopne
lods
lcall
dec
clc
lods
loope
jl
in
adc
test
outsl
dec
rorb
inc
cs
sub
add
xchg
and
xchg
mov
roll
es
pop
inc
jb
push
mov
xchg
jns
xchg
pushf
jmp
mov
push
mov
pop
clc
xor
or
pop
imul
cmp
mov
rorl
test
rolb
push
fxch
jns
sarl
loope
test
pop
push
mov
int
cmp
mov
loope
filds
in
add
hlt
add
jae
jg
movsb
ja
pusha
mov
xor
lahf
movsl
fmuls
mov
je
cmp
movsl
inc
fs
cmpsl
out
leave
test
xchg
adc
fs
fimull
sbb
shlb
fldenv
cmp
cmp
pushf
mov
adc
movsb
sbb
sbb
xor
xchg
mov
dec
add
rcrb
dec
dec
fxam
loopne
xor
lret
xchg
mov
pop
pop
jmp
sub
xchg
aad
fwait
ret
sbb
inc
ficomps
inc
fimull
lock
leave
or
pop
push
add
shll
push
xor
test
cld
sub
icebp
cmp
xor
iret
push
ret
cmc
xchg
pop
in
jecxz
pop
lock
lcall
js
lret
ds
insl
loope
test
sub
cli
ret
inc
mov
inc
fisubrs
stc
pop
or
icebp
pop
pop
ss
sti
mov
inc
inc
sti
or
mov
sub
in
lods
jmp
outsl
sahf
xchg
out
jo
dec
int
mov
insb
xor
popf
insl
cmp
mov
and
lcall
aaa
inc
repz
sub
sub
add
pop
sub
sbb
inc
xchg
adc
add
mov
xor
sbb
cmp
popf
dec
cmp
xchg
es
xor
bound
pop
or
loopne
jle
arpl
dec
lds
pop
jge
imull
xor
jbe
push
jg
and
or
mov
dec
push
sub
jp
cmp
jmp
mov
adc
movsl
jle
testl
jb
pop
xchg
pop
mov
cmp
test
aas
iret
cmp
popf
and
outsb
jge
push
es
jb
jecxz
sub
repz
jo
mov
push
test
xchg
or
dec
test
call
stc
mov
jmp
stc
adc
movsb
stos
sub
movsb
pop
hlt
inc
mov
push
push
xor
push
xlat
mov
cmp
mov
xchg
lret
push
adc
rorl
mov
jbe
das
ljmp
push
push
repnz
repz
cmpsb
pop
aaa
int
data16
lods
popa
ss
xor
clc
mov
push
xchg
jne
rcll
mov
cmp
sub
or
cmpsb
mov
fsub
mov
in
jle
lea
fsts
cmp
xor
or
cmp
push
outsb
ret
popf
adc
jp
mov
xchg
pop
repz
jg
pop
xor
int
mul
enter
xor
shlb
fmuls
js
mov
testb
mov
push
in
push
xor
into
outsb
mov
lods
adc
gs
call
jecxz
and
push
popf
xchg
adc
jno
mov
sub
andb
push
xor
add
test
jno
stc
aas
cmpsb
in
mov
xchg
push
aad
pop
add
inc
mov
and
cmp
fnstenv
ja
inc
mov
xor
ja
push
mov
test
inc
push
enter
int3
cld
fsts
mov
jo
mov
outsb
outsl
jle
cmp
ja
dec
xorl
mov
in
jl
pop
dec
mov
adc
rcll
xchg
fsubrs
arpl
call
call
mov
mov
jae
xchg
shll
insl
adc
test
mov
xor
les
leave
or
cli
shr
ss
xchg
xchg
inc
aad
adcb
sub
adc
leave
cmc
mov
es
jno
inc
mov
loope
push
rolb
hlt
dec
cmpsb
outsb
sub
xchg
cli
cmc
xchg
sarb
jg
loop
cmp
or
fdivr
je
fistl
push
mov
dec
mov
jno
pop
rcll
enter
sbb
add
mov
sbb
mov
fiaddl
loop
aam
add
add
and
rorl
push
sub
loope
inc
mov
pop
mov
cmp
mov
push
or
pop
mov
stos
xchg
or
jbe
dec
les
inc
xchg
xlat
dec
mov
icebp
test
fst
mov
movsl
pop
dec
mov
mov
add
ljmp
or
mov
adc
les
jne
inc
dec
sub
int
hlt
xchg
testl
gs
ljmp
cmpl
call
mov
xor
pop
out
add
lea
andb
lods
shrl
push
rcrb
arpl
jnp
popa
mov
bound
ja
sbb
aam
push
shl
cmc
add
js
divl
stos
incl
iret
sub
sub
xchg
sbb
sbb
movsl
push
or
cmp
jae
inc
adc
sub
arpl
rol
xchg
clc
xchg
in
and
repnz
enter
sbb
add
inc
mov
lahf
inc
lods
cwtl
xchg
fstl
adc
push
rcrb
popf
jne
test
out
mov
adc
aas
imul
mov
add
jo
lods
dec
adc
in
daa
and
add
sbb
xor
xchg
aaa
sbb
add
jb
data16
mov
sti
inc
sub
fwait
lock
xor
cmpsb
test
adcl
int
xor
dec
sub
push
sub
aam
hlt
cs
inc
xor
scas
sbb
push
loope
jl
pusha
jp
mov
mov
pop
adc
xorb
dec
dec
dec
xlat
and
push
jae
insl
push
push
cmp
sbb
or
clc
mov
aas
xor
fidivrs
mov
insb
push
jb
xor
lret
mov
sub
nop
mov
adc
popf
sahf
xor
arpl
frstor
das
sbb
lahf
inc
fsubrl
pop
cli
push
mov
insl
insb
popa
popa
ds
test
cmp
push
mov
mov
sbb
das
adc
adc
movsb
mov
dec
mov
push
call
out
icebp
mov
mov
and
jp
sub
jns
xchg
into
xor
mov
sub
push
or
ljmp
adc
mov
pop
and
sbbl
fsubl
dec
pop
add
cmpsb
xor
mov
cli
sub
cmpsb
stos
addr16
adc
das
sbb
fcomps
dec
pop
enter
xchg
mov
dec
repz
scas
jbe
xchg
sbbb
jno
jo
mov
ljmp
mov
adcl
test
or
and
out
arpl
je
das
pushf
insb
in
fwait
mov
lods
nop
and
xchg
cmp
jbe
or
test
out
dec
clc
add
adc
jp
mov
addb
dec
outsl
sub
mov
jb
jecxz
nop
xchg
or
out
js
mov
iret
daa
movsb
push
xchg
and
outsl
mov
scas
outsb
sti
and
clc
inc
out
mov
inc
bswap
pop
add
mov
or
and
fsubl
fstpt
mov
inc
add
add
sbb
cmpsb
cmp
mov
repnz
cmpsb
scas
mov
aaa
and
inc
xchg
subl
insb
push
das
ret
cmp
xchg
fwait
xchg
sub
push
sahf
add
insb
or
xchg
and
push
push
pop
ja
xchg
fmul
dec
or
jl
int
inc
insl
cmpsb
xor
enter
cmp
or
xor
or
mov
pop
sub
add
inc
popa
rcll
lahf
movsl
push
ss
inc
das
shl
lock
andb
arpl
jecxz
call
xor
aaa
movq
scas
mov
test
addb
addr16
in
out
sub
lock
and
cli
lods
xlat
mov
test
mov
mov
push
in
lahf
jecxz
movsl
insl
jmp
arpl
inc
ret
pop
enter
rcll
xor
and
jmp
hlt
xchg
mov
mov
jmp
xchg
sub
sbb
test
mov
out
jae
sbb
ljmp
mov
int3
imul
pop
repz
cmp
gs
xchg
cmp
jae
xor
sub
pop
int
add
add
adc
or
and
inc
les
pop
sub
sub
cmpsl
mov
lret
nop
cli
into
movsb
gs
mov
sub
pop
scas
add
adc
cmp
cmc
ljmp
dec
cmpsl
mov
pop
mov
mov
cli
iret
push
inc
pushl
subb
es
outsb
inc
popa
shrb
mov
inc
pop
inc
jb
mov
mov
add
scas
insb
fstps
jo
rcl
pop
out
mov
rorl
mov
xchg
mov
xor
cmp
es
push
test
nop
aas
push
adc
outsb
inc
pushf
dec
sub
inc
mov
and
icebp
sbb
test
push
adc
push
or
inc
cmp
sbb
pop
mov
adc
pop
int3
push
clc
enter
mov
shl
add
aam
push
stos
gs
dec
sub
cwtl
mov
dec
mov
add
js
insb
mov
xor
cld
push
jmp
lcall
movl
sub
rcll
mov
ljmp
push
pop
sub
dec
cwtl
movsl
in
xchg
test
lods
cwtl
pushf
pop
and
xchg
xor
jbe
cmp
add
sbb
add
add
mov
xchg
loopne
outsb
sub
jb
rcr
pop
xor
inc
lea
lods
pop
je
adc
add
push
jns
in
aaa
inc
dec
and
aam
sub
sti
call
jo
xchg
pop
mov
sub
pop
cwtl
testb
stos
ja
jmp
jg
mov
mov
mov
adc
fs
andl
icebp
call
sbb
das
arpl
cmc
push
jbe
adc
cmp
pop
xchg
ss
xchg
mov
ret
xchg
in
not
popf
pop
xchg
in
ja
cmpsl
sbb
or
pop
out
or
test
repz
push
into
jle
mov
mov
push
fldenv
jecxz
test
inc
icebp
repnz
xchg
push
test
xchg
push
xchg
ss
cmp
cwtl
xchg
sub
mov
jp
add
push
imul
ja
jbe
movsb
stos
xor
cmp
fsubl
mov
rcr
adc
push
push
lret
jmp
sbbl
and
mov
outsb
fistl
and
scas
mov
shrb
loope,pn
xchg
mov
xchg
ret
lock
ficoml
out
jg
mov
mov
mov
lock
out
lods
out
enter
inc
xor
fwait
cmp
inc
pop
sub
add
xchg
or
fs
xchg
les
dec
push
sub
outsl
jp
pop
sub
xchg
aad
int3
jl
push
add
inc
insl
pop
jle
jle
out
fucomip
mov
stos
mov
add
iret
icebp
setge
in
or
lock
jno
xchg
pop
push
xor
iret
popa
dec
pop
sbbb
jp
and
pop
sbb
int
cmp
inc
pop
sub
fcomps
push
xor
push
pop
lret
sub
jbe
jno
fsubrs
stc
sbb
jbe
cmp
jbe
dec
lahf
sti
shlb
dec
daa
mov
pop
jbe
mov
js
push
in
mov
xor
sub
scas
adcb
and
sbbl
sub
xchg
enter
dec
popa
xchg
adc
cmp
cmp
insb
pop
inc
aad
sbb
jb
mov
xor
lock
push
and
pop
stos
jb
xor
sbb
je
sbb
sbb
sub
fwait
and
es
cli
push
loopne
test
repz
pushf
aas
loop
fcmovbe
jb
pop
f2xm1
xchg
fisubs
enter
mov
leave
xchg
inc
lods
mov
xchg
and
inc
push
pop
inc
cltd
daa
cmp
mov
and
daa
jecxz
adc
imul
sbb
out
or
adc
jb
adc
xchg
xor
and
mov
jnp
cmp
cmpsb
dec
gs
add
pop
lahf
and
ds
iret
das
lret
xor
shlb
sub
sbb
jp
sub
mov
sbb
loop
pusha
or
dec
fcmovbe
inc
xchg
lcall
mov
icebp
mov
rcr
cmpl
mov
xchg
jne
pop
inc
popl
shlb
cmp
pop
inc
arpl
negl
inc
mov
xchg
mov
lods
sub
aaa
jmp
das
fdivl
or
xlat
lret
popf
xor
jmp
sbb
or
into
or
and
jnp
cwtl
xor
cmp
add
jae
stc
stc
sub
frstor
xchg
movsb
arpl
mov
sahf
jo
cmp
cld
mov
mov
adc
jb
icebp
pop
xchg
jmp
fmull
rcrl
daa
repnz
nop
xor
int
push
sbb
loopne
xor
add
dec
ss
or
push
cwtl
xor
sbb
out
cwtl
insl
test
dec
mov
pop
insb
das
andb
ljmp
aam
push
les
shlb
jnp
sarl
popa
mov
dec
in
pop
mov
sub
mov
sub
imul
dec
push
jle
mulb
into
je
push
or
aaa
cld
pop
sub
jbe
push
mov
loopne
push
jns
in
cmp
mov
lahf
shl
enter
jecxz
outsb
inc
popf
test
cmp
arpl
mov
jl
add
pop
iret
xor
aaa
pop
rcrb
sbb
fmull
and
test
inc
pop
imul
es
notl
cmp
pop
int3
sbb
lock
test
xchg
mov
xchg
mov
out
mov
jne
and
or
sbb
sbb
mov
jmp
sbb
int
sbb
sub
sarb
fsubr
and
or
jbe
out
pop
dec
jecxz
in
jmp
cwtl
cwtl
lods
jb
add
dec
stos
cmpsb
mov
dec
mov
mov
sub
incl
sub
cmp
add
pop
mov
push
pop
aad
mov
ja
mov
fwait
pop
mov
fiaddl
cmpsl
insb
in
lods
and
jmp
sbb
cs
or
std
les
mov
xchg
rolb
jg
or
fcmovne
imul
fsts
mov
subl
add
cwtl
orb
sbb
lahf
lds
lock
sbb
in
mov
inc
pop
stc
negl
fldl
test
or
pop
xor
jns
es
sbb
cs
mov
cs
or
xlat
pushf
pop
scas
sti
xchg
or
cs
jmp
je
jl
adc
pop
xchg
xchg
lcall
rcll
xor
movsb
xchg
outsl
mov
jecxz
adc
in
pushf
adc
sub
sub
cmp
xchg
sbb
std
fdivs
mov
sub
repnz
xor
stos
mov
xlat
je
xchg
dec
mov
ret
cmpsl
fimuls
push
sub
leave
sbb
mov
jl
nop
incb
popa
push
sub
dec
dec
mov
jb
lret
std
outsl
add
sbb
shll
call
sub
bound
xchg
push
imul
inc
lahf
fs
arpl
cmpsl
sarl
mov
enter
cmp
and
jmp
add
sub
xchg
sti
icebp
loopne
cmpl
dec
clc
call
lods
adc
sbb
insb
insb
mov
out
jmp
xchg
cmpsb
mov
rcrl
dec
inc
stos
insl
out
jae
push
pushf
fsubrs
aad
adc
jne
add
andb
dec
sbb
imul
or
mov
mov
pop
imul
pushf
and
imul
pop
mov
dec
lods
pop
xor
iret
iret
aam
test
dec
dec
fdivp
jo
pop
hlt
out
mov
fimuls
lcall
cmc
aaa
sbb
sahf
xchg
insl
mov
xor
jmp
ret
stc
push
jno
adc
in
lahf
adcb
or
inc
lds
add
cwtl
adc
push
add
xorb
xchg
jge
cmp
jo
test
lds
out
loopne
mov
jmp
clc
lahf
test
adc
xchg
xbegin
aas
je,pt
hlt
xchg
std
pop
dec
out
enter
pusha
sahf
loop
les
xchg
mov
mov
mov
jnp
adc
pop
and
adc
xchg
sub
cli
bnd
sbb
add
adc
pop
ret
lock
pop
cmp
ret
mov
and
and
mov
dec
add
xor
push
xadd
adc
addl
lcall
sbb
shll
hlt
movsl
sbb
sub
cwtl
cwtl
lahf
in
pop
fidivl
and
test
cmp
dec
sub
xchg
or
leave
xor
outsl
or
xor
pop
cmc
push
or
pop
dec
dec
bound
cmp
mov
rolb
push
inc
or
andl
pusha
in
inc
jb
fistps
test
stos
rcrb
push
pop
inc
sti
arpl
imul
mov
mov
adc
aam
xorl
call
push
inc
scas
push
addb
scas
xchg
mov
mov
gs
and
mov
pop
cs
jno
std
xor
mov
out
incb
leave
jno
jecxz
lret
sub
adc
incl
cmp
inc
push
test
test
xor
lret
mov
xchg
jl
xor
push
out
jmp
stos
fisubrs
lock
mov
add
adc
das
and
pop
mov
adc
sti
notl
mov
or
cld
setp
shl
pusha
test
or
inc
jno
push
and
dec
js
cmp
xor
sub
and
xor
inc
inc
sbb
stc
pop
bound
cli
xchg
gs
sbb
stc
pop
pop
jbe
cmp
jno
jnp
mov
add
adc
and
sbb
cltd
std
cli
cmpsl
rcr
ss
cmp
stos
int3
subb
xchg
add
lods
mov
lds
outsb
test
icebp
jae
adc
push
cmpsl
mov
cmp
gs
jb
data16
out
je
outsb
pop
adc
outsl
je
lods
add
mov
or
pop
xchg
mov
arpl
or
dec
aaa
pop
fisttpl
pop
xor
mov
ljmp
test
out
push
fcoms
not
mov
inc
orb
mov
shrb
xor
frstpm(287
cli
icebp
mov
jbe
xchg
adc
xchg
cs
lcall
mov
in
cmc
push
je
test
jae
rol
lret
out
rcl
inc
dec
jnp
icebp
cs
nop
xchg
int
arpl
inc
add
mov
insl
add
pop
jg
mov
mov
and
clc
inc
xchg
daa
mov
jbe
pop
push
mov
rcrb
sub
mov
cmp
fcoml
in
fldt
jno
pushf
cmp
or
les
xchg
pop
inc
or
jmp
cmp
sbb
repnz
mov
push
mov
loopne
xchg
outsb
bound
cmp
aas
int3
pop
jle
into
add
push
mov
or
dec
pop
mov
xor
jmp
ffreep
sub
mov
fcompl
pusha
in
fiaddl
addr16
mov
hlt
ds
xchg
sbb
and
pop
inc
loop
dec
xchg
cli
jo
outsb
addb
cmp
jb
test
inc
jmp
es
cmp
in
adc
icebp
icebp
xlat
sbbl
sbb
rcrl
inc
loopne
cmp
push
pop
outsl
jnp
cmp
lods
sbb
xchg
int3
mov
andb
jge
stos
loop
xchg
nop
pop
adc
inc
sub
test
bound
les
push
mov
das
and
shl
sub
sbb
mov
test
sub
shl
aas
or
je
xchg
fisttpll
idivb
xchg
pop
adc
jecxz
scas
mov
inc
jnp
leave
xor
push
adc
mov
scas
xchg
fabs
inc
test
lret
les
js
lock
cmc
push
rol
push
mov
push
rcl
ss
fcmovbe
lods
xchg
jnp
mov
pushf
mov
insl
or
scas
out
sub
rcr
xchg
sbb
lods
sahf
sub
addr16
in
xor
mov
xor
dec
repnz
lahf
jl
mov
xchg
mov
ds
stc
mov
xor
sbb
mov
cmp
out
in
pushf
outsl
arpl
mov
mov
pop
push
and
adcb
pop
popa
cli
lret
lret
nop
push
enter
sub
iret
insl
jp
mov
mov
adc
repz
andl
test
dec
mov
mov
and
or
daa
mov
pop
or
inc
xchg
sub
std
mov
fistpl
lcall
in
cmp
pusha
jmp
rclb
imul
scas
push
xor
jmp
cmp
xchg
or
pusha
add
cmp
sub
cmp
sbb
pushf
stos
add
lock
pop
dec
mov
mov
jno
or
push
sbb
push
fldt
adc
mov
sbb
pop
std
mull
jne
sbb
fstpt
add
pop
nop
xor
mov
or
mov
dec
mov
dec
shrb
push
sub
sub
xchg
in
mov
into
push
dec
pop
xchg
push
js
pop
adc
push
daa
jns
stos
inc
cs
je
lock
pop
xchg
mov
out
pop
cwtl
shl
loop
jo
adc
inc
mov
loope
adc
das
pushf
imulb
pop
popf
push
pop
in
mov
cs
cmpsl
cmp
mov
jae
sub
pop
jo
loope
jp
bound
rorl
stc
lahf
iret
push
popf
cmp
test
daa
aaa
hlt
mov
nop
ret
clc
fs
push
rorl
sub
or
push
or
cli
xor
mov
fistl
in
xchg
insl
sahf
jecxz
sahf
loopne
pushf
int3
jae
mov
xchg
repz
mov
inc
jecxz
xor
sub
pop
mov
mov
movsb
andb
mov
adc
test
xor
adc
insb
clc
sub
lds
push
add
out
mov
and
in
outsl
and
fsubp
xchg
inc
jmp
push
cmp
push
pusha
add
push
pop
test
int
add
mov
jmp
push
jns
loope
lock
in
push
cmp
jne
pop
in
imul
add
push
add
dec
and
xchg
mov
and
inc
ret
mov
aas
stos
sbb
std
repz
data16
out
test
inc
push
shll
dec
les
xchg
xor
cmpsl
mov
mov
adc
jno
cmpsl
inc
xchg
shr
xchg
outsl
call
enter
xchg
cmp
xchg
fcmovne
movsl
mov
sbb
sub
fmul
jnp
cmc
inc
scas
adc
add
lods
loopne
push
sub
mov
negl
jbe
jmp
pop
fisttps
push
adc
cmp
cmpsl
jl
mov
jns
inc
pop
xorl
pop
jnp
mov
xchg
xchg
cmc
jge
aad
popf
daa
out
fisttps
inc
ret
scas
aad
orb
push
cmp
loop
rcll
cli
ljmp
mov
lret
lar
jge
and
popa
fnstsw
and
rolb
rorb
fdivs
sbb
lret
notb
sub
dec
add
and
fucomi
scas
fimull
clc
adc
xchg
or
sbb
inc
pushf
loop
movsb
cmp
sbbb
cld
loopne
lods
mov
fistl
clc
ljmp
mov
push
mov
jno
jo
arpl
mov
jge
cmc
xor
jmp
out
ret
out
stos
popf
mov
scas
cmpsl
popa
or
mov
cmp
daa
dec
xorb
aad
mov
mov
shrl
popf
imul
fsubrl
jb
xor
sbb
adc
or
inc
bound
sbb
or
test
mov
xchg
lcall
sub
ret
pop
mov
cmp
add
sbb
jae
icebp
ret
or
stc
xor
push
hlt
mov
pop
aas
adc
cmp
out
jbe
or
out
lcall
sbb
mov
or
test
repnz
push
fldcw
out
shl
mov
push
mov
leave
outsl
jg
xchg
mov
call
adc
mov
in
cmp
jns
jne
sub
jo
pop
jle
cmp
dec
mov
fcompl
pop
push
arpl
xchg
mov
xchg
jmp
push
fldl
repz
aas
jg
xchg
xor
xor
out
xchg
xor
fdivl
js
mov
mov
movsb
cli
hlt
pop
push
icebp
test
movsl
daa
inc
ss
dec
xor
cmp
sbb
mov
or
xor
adc
loopne
stos
xchg
jbe
mov
ret
adc
sub
and
and
sub
cmp
xor
test
orb
mov
mov
mov
sbb
fists
pushf
xor
jno
iret
inc
xchg
in
scas
shll
add
inc
xchg
xchg
adc
cmp
pop
adcl
add
idiv
sbb
jl
mov
iret
and
mov
popa
jb
or
punpcklbw
jge
sbb
inc
jmp
fildl
mov
aas
jg
decl
mov
cmp
push
push
inc
rcrb
mov
fsubrs
sahf
cltd
cwtl
loope
pop
xor
xor
mov
andl
bound
pop
push
cmp
mov
sub
mov
lods
lea
sub
fmulp
jmp
add
mov
ja
or
test
sub
nop
jmp
lcall
je
pop
divl
adc
pop
sub
inc
iret
cmp
aam
sarb
sub
jae
icebp
hlt
mov
movsb
sub
sahf
cld
scas
scas
andl
dec
fstps
xchg
fsubrl
xchg
xchg
push
mov
shrb
jnp
pop
mov
push
out
fldenv
xchg
adc
scas
gs
push
mov
sub
xor
sub
imul
cmp
xchg
test
inc
jp
pop
jae
sbb
stos
push
fidivl
inc
loopne
xor
and
pop
lock
mov
mov
pop
mov
xchg
pop
popf
push
fs
and
mov
test
adc
push
lods
push
mov
push
and
inc
xor
mov
dec
fisubrs
jmp
call
push
psubq
in
add
test
cltd
outsb
inc
adc
xchg
ret
mov
cmp
inc
addr16
sbb
mov
sbb
lret
fistpll
sarb
shl
fsubp
sbb
inc
rclb
xlat
and
add
pop
mov
or
mov
pop
aam
push
cld
push
xor
jl
lock
movsb
cmp
push
push
fs
mov
mov
in
add
sub
stos
out
repz
cwtl
mov
ret
div
int3
cmp
push
cld
push
lahf
xchg
addr16
mov
xchg
loope
and
imul
mov
fbstp
fisubrl
idiv
add
mov
out
in
stos
sbb
cmpsl
outsb
push
pop
or
leave
mov
dec
rcrl
loop
and
sbb
jp
dec
movsl
and
mov
popa
movsb
cmp
xchg
or
xor
add
push
orb
cmp
outsb
and
roll
mov
lock
xchg
add
mov
xchg
rcr
or
push
ret
movsl
push
and
cmpsl
mov
cmc
pushf
mov
pop
mov
and
xchg
and
loop
rcrl
xor
xchg
andl
xor
test
or
repz
sub
lock
cmpsl
xor
test
pop
insb
addr16
repz
sbb
fcoml
push
hlt
jbe
or
inc
inc
dec
outsl
cwtl
in
jo
pop
and
fnstsw
fcomi
popf
dec
rclb
lds
repnz
in
adcb
pop
push
rorl
mov
lea
std
repz
adc
out
push
pusha
insl
push
test
mov
cmp
leave
cltd
sub
sub
cmpsl
pop
mov
sti
add
xchg
add
xorb
lods
mov
cmpb
mov
xlat
sub
mov
inc
or
push
cmp
fnstsw
fmuls
sbb
cmc
cmpsl
icebp
std
cs
mov
shlb
or
shll
xor
xlat
and
gs
jo
lret
shll
addb
hlt
dec
push
and
mov
cmpsl
movsl
shrb
outsl
inc
insb
leave
fnstenv
js
mov
add
outsl
imul
scas
lahf
call
lret
xor
and
push
movsb
ret
mov
pop
cmp
dec
jbe
jbe
inc
mov
pop
push
jb
xlat
pop
mov
cmp
ret
push
scas
dec
jns
dec
jg
sbb
mov
inc
das
jecxz
mov
mov
xor
mov
mov
sub
lds
mov
lds
jo
and
mov
fsubs
popl
lret
gs
mov
js
push
and
nop
cmp
xchg
cwtl
orl
stc
stos
inc
adc
into
dec
jb
adc
stos
bound
dec
dec
sbb
inc
push
mov
gs
fsubrp
fwait
pop
or
sbb
test
out
adc
leave
popf
jo
sbb
cs
rcrl
inc
mov
rol
popa
or
ljmp
mov
fidivrs
mov
ret
ficomps
xchg
sub
xlat
enter
mov
imul
mulps
ljmp
cs
outsb
push
inc
jo
cmpsl
and
scas
jb
add
pop
inc
fnstcw
cmpsl
mov
jb
div
hlt
mov
int3
es
sub
data16
adc
int3
jae
pushf
inc
flds
adc
int
or
sti
adc
mov
addr16
push
daa
rcrl
cmc
pop
adc
or
add
popa
cmp
mov
xchg
inc
cwtl
stos
xchg
insl
popa
scas
or
push
fstpl
in
in
ss
int3
out
adc
and
aad
loop
xchg
fdivrl
sbb
jno
adc
jle
int
push
pop
dec
mov
cmpsl
dec
scas
sub
mov
sub
pusha
sahf
leave
jnp
std
jbe
dec
fcomps
incb
pop
dec
ds
lahf
out
andl
xlat
mov
cmpsl
lcall
shl
imul
fwait
xor
mulb
sbb
and
fwait
addl
daa
dec
aaa
rolb
pop
xor
jecxz
jno
add
pop
add
jge
mov
push
or
jmp
arpl
clc
pop
pop
push
cltd
inc
inc
cmp
fbld
mov
fcoms
adc
ret
mov
sub
adc
stc
mov
sub
fwait
sahf
shll
mov
sbbl
or
ja
ja
xor
rolb
fwait
pop
xchg
sbb
xor
test
cmp
inc
mov
push
test
scas
lods
fisubs
rcl
aam
mov
arpl
lods
dec
jmp
enter
fidivs
movsb
rclb
test
sahf
jne
fisttpll
xchg
dec
push
pop
lods
sahf
or
mov
scas
mov
aad
mov
mov
mov
lods
cmc
shlb
xor
mov
clc
sbbl
aas
fisubl
pop
mov
adc
lods
in
mov
cmp
icebp
hlt
stos
pop
lods
out
in
push
and
loope
sub
xchg
popa
add
lahf
bswap
orl
xor
jae
out
ljmp
insb
scas
inc
inc
cmpsb
push
adcb
push
jecxz
cltd
lcall
inc
lods
jmp
push
xchg
dec
jo
mov
adc
and
cltd
test
cmc
jl
pusha
shr
mov
jge
mov
mov
insb
sub
xchg
out
jmp
jmp
push
xlat
cmp
jns
adc
decb
hlt
or
lods
xchg
sbb
and
or
sub
int3
jne
lds
cld
loop
addr16
push
test
inc
pop
add
inc
or
ljmp
add
add
sub
xchg
sub
cmp
mov
mov
imul
or
mov
sbb
loopne
gs
popl
jno
inc
inc
and
xor
jmp
cltd
xchg
xchg
xor
sbb
dec
adc
dec
and
jp
xchg
sub
pop
dec
mov
adc
out
jmp
push
inc
mov
mov
mov
jns
arpl
fcomps
sub
jo
or
andb
imul
mov
mov
inc
push
rorb
adc
rcl
dec
xchg
mov
inc
push
add
xchg
iret
movsb
loopne
ficomps
add
dec
adc
mov
and
adc
mov
or
mov
sub
rcll
mov
lret
leave
push
add
iret
xchg
lds
in
dec
outsb
and
cmc
push
aaa
inc
push
or
jp
pop
sbb
lods
push
lea
sbb
lahf
clc
fmulp
ljmp
out
xor
repz
das
and
cltd
xor
cld
int
inc
int
lds
push
in
or
aam
roll
pop
mov
push
sbb
stos
outsb
loop
scas
stos
pop
stos
mov
addr16
cmp
dec
pop
push
roll
jo
sarl
push
insb
arpl
push
lods
js
mov
outsl
cmpsb
test
popf
xor
push
add
mov
call
lods
or
sahf
mov
mov
pop
xchg
cmpsb
jbe
nop
dec
in
imul
iret
mov
ja
ret
dec
cmpsl
iret
mov
mov
inc
mov
xor
lods
daa
sbb
loope
pop
mov
stos
cmp
cmp
jge
sbb
mov
push
cmpsb
lock
leave
dec
das
mov
in
out
xor
scas
into
jb
jecxz
sbb
adc
addb
inc
lods
insb
dec
jbe
mov
lahf
aad
mov
xchg
mov
inc
mov
mov
gs
xchg
test
push
lods
pop
dec
inc
jp
mov
mov
ja
sub
movsl
dec
dec
ja
xchg
addb
stos
and
cltd
lcall
ret
add
daa
pop
dec
enter
in
iret
dec
std
jno
jno
cmp
adc
push
lds
lret
lods
cwtl
clc
aad
mov
jno
push
xor
hlt
aas
cmp
push
scas
data16
lock
jo
div
cmp
add
fisubs
mov
sbb
xrelease
lods
mov
sub
stos
sub
test
fwait
fsubrp
lock
mov
mov
pusha
xchg
jmp
sub
sbb
cmpsl
mov
scas
lds
xchg
mov
hlt
orb
movsl
aam
test
test
shrl
aam
arpl
sti
sar
pop
push
cltd
pop
sbb
mov
in
xor
push
ljmp
cmpsl
aaa
and
xchg
mov
imul
cs
push
pushf
jno
adc
push
cs
sbb
cmp
pop
sub
arpl
inc
loope
mov
lock
lods
pusha
pop
inc
fsub
cmc
xchg
xchg
xchg
pushf
fstpl
xrelease
add
mov
roll
data16
xchg
push
idivb
xor
bound
jp
lahf
inc
or
and
in
jg
mov
sbb
adc
dec
fcmovne
sarb
ljmp
rorl
xchg
and
or
popa
mov
mov
adc
sbb
sti
orl
mov
jmp
mov
push
push
adc
in
push
jae
fsts
sub
testl
dec
mov
dec
xchg
sub
loope
add
push
push
scas
mov
xor
leave
and
add
shlb
mov
shrb
decb
rcrl
mov
jmp
mov
push
mov
mov
mov
pop
dec
je
mov
mov
popa
or
fwait
mov
xchg
ss
test
jecxz
movsl
nop
in
xor
lock
ja
js
movsl
inc
jge
xchg
add
mov
rolb
pusha
sbb
aad
inc
sti
aam
repz
mov
popa
out
xorb
jae
add
jns
gs
std
inc
push
call
pop
pushf
lds
cmp
pushf
les
rcrl
jp
xchg
sub
sbb
mov
leave
pop
mov
loop
sbb
jg
jmp
jnp
pop
lret
push
jbe
dec
imul
add
test
iret
xor
pop
cmp
mov
jmp
aam
lahf
adcb
test
xor
sub
movsb
bound
ss
fs
push
dec
arpl
mov
jle
add
sub
cltd
into
insb
xchg
mov
add
lods
cli
inc
mov
pop
jmp
call
mov
rolb
cmpsb
lods
outsl
sub
push
and
lock
sub
mov
xchg
jns
pusha
out
or
mov
push
sbb
inc
xchg
jl
push
push
dec
or
push
shrb
mov
aas
scas
scas
das
pop
push
ds
dec
in
pusha
fbld
mov
xchg
mov
sub
fldl
das
mov
insb
cmp
jbe
iret
int3
cmp
inc
and
loope
push
dec
cmp
mov
out
leave
idivb
out
sbb
enter
imul
push
mul
push
hlt
out
out
mov
jbe
sbb
adc
xchg
aad
cmp
cld
loope
movsb
mov
push
cli
mov
cmp
imulb
jp
xchg
mov
imul
clc
les
xchg
pop
out
xor
xchg
lock
pop
js
popf
inc
cmp
mov
push
push
scas
hlt
mov
xchg
sti
sub
lret
add
add
mov
test
push
push
ljmp
lock
stos
xlat
loopne
test
clc
push
ficoml
lahf
loop
cld
and
sub
pop
aas
xor
push
xor
je
xlat
cmp
bound
inc
cmpl
adc
insb
into
test
enter
sti
mov
or
loopne
ret
cmp
sbb
xor
inc
mov
inc
movsb
in
test
mov
cld
inc
push
stos
xor
mov
popl
fadd
sahf
test
outsb
mov
test
scas
lret
and
ljmp
sbb
loop
pop
cmp
xchg
lods
aas
ret
xchg
es
sub
mov
dec
shlb
dec
xchg
ss
test
sub
push
lcall
jp
sbb
call
sub
mov
pop
mov
punpckhbw
jae
lret
xchg
arpl
jae
arpl
and
ljmp
insl
pop
pop
pop
mov
popa
int
sbb
clc
stos
inc
out
mov
test
mov
jae
adc
sbb
rorl
mov
add
push
cmp
mov
pop
xlat
outsl
xor
fistpl
xlat
xor
lods
sub
popa
lret
cmp
add
xor
mov
pop
xchg
hlt
fs
repnz
sbb
scas
pop
mov
pop
jl
lea
add
pop
lcall
sub
inc
xchg
and
bound
out
testb
cs
cmp
stc
in
dec
pop
sbb
mov
subb
je
enter
dec
je
and
cs
ror
xlat
push
add
push
cmp
sub
lds
nop
mov
popa
shrl
jbe
or
and
jg
push
jge
mov
shl
push
mov
jo
in
mov
sbb
test
cwtl
push
std
insb
outsl
xor
aaa
les
in
pop
or
imul
pop
test
sub
push
lcall
jae
mov
mov
pop
repnz
lock
cmp
movsl
and
sub
mov
lds
ljmp
ret
hlt
mov
sbb
cli
popa
mov
rorb
popfw
xchg
mov
jns
jmp
mov
jecxz
pop
adc
cltd
mov
shrb
test
mov
int3
push
outsl
addr16
jl
imul
mov
sbb
ljmp
xor
mov
xchg
push
out
loop
fcoml
pop
push
dec
jnp
inc
ror
sub
orl
rclb
sub
adc
fcoml
inc
mov
add
sbb
les
sbb
xchg
push
movsl
fistl
lds
insl
add
cmp
negb
ret
mov
xor
sub
mov
imul
aas
jns
inc
orl
mov
movsb
pop
sbb
out
mov
loopne
ja
lock
mov
jmp
cmp
lret
jno
mov
push
mov
sti
imul
jbe
into
jo
and
jo
icebp
mov
popa
negb
leave
cmpl
push
into
dec
mov
test
fidivrl
pop
adc
movsb
loopne
arpl
jbe
stos
lret
hlt
lahf
cltd
inc
addl
jg
jae
movb
repnz
outsl
or
aaa
jg
repz
js
mov
movsb
adc
in
cli
ret
mov
xchg
inc
scas
fstpt
fbld
enter
mov
push
daa
jb
aaa
jmp
push
sahf
inc
clc
xor
call
mov
add
mov
aam
movsl
stc
and
fldt
jmp
jp
mov
adc
sbb
loope
and
fs
fs
popfw
or
out
dec
dec
dec
enter
push
dec
out
jle
mov
lea
popa
sti
es
roll
sbb
xchg
inc
rclb
adc
aad
jle
imul
sti
add
sub
jl
xchg
sub
mov
iret
push
jmp
inc
mov
sub
in
cmpsl
mov
nop
ja
insb
adc
sub
in
je
push
pop
dec
push
pop
cmpsl
int3
stos
or
fiadds
pushf
dec
jbe
pushf
pusha
add
addr16
xchg
push
sahf
sub
pop
mov
xchg
dec
sub
push
xlat
ds
fcmovb
cmp
push
mov
into
cmc
test
mov
pop
int
lcall
in
lcall
pop
pusha
mov
mov
or
lret
dec
cmp
test
pop
stc
test
xchg
pushf
testl
and
jnp
out
mov
aaa
ret
test
arpl
repnz
push
cwtl
stc
dec
xchg
mov
push
dec
or
clc
rolb
push
aas
inc
xor
test
mov
cmp
or
cmp
cmpsb
daa
popa
imul
or
mov
shlb
pop
mov
cmp
in
inc
stos
xchg
and
daa
popa
sahf
and
jnp
mov
jbe
pop
lock
cwtl
mov
lods
sbbl
aaa
mov
cmc
add
les
call
leave
push
sbb
js
push
shll
inc
push
test
repz
push
dec
mov
lods
aaa
inc
pcmpgtb
dec
adc
mov
fwait
cmc
mov
add
xchg
adc
mov
mov
push
xchg
cld
sub
xor
push
cltd
xor
pop
test
or
repz
call
push
xor
loopne
lcall
cmpsb
and
mov
loopne
push
or
ret
ss
mov
shlb
stos
add
imul
shr
and
lret
cmp
inc
dec
pop
adc
loopne
dec
cmpsl
es
inc
jg
lret
hlt
dec
mov
out
popf
mov
adc
ficoms
das
pop
adc
xchg
loope
pushaw
nop
adc
out
pop
stos
sub
loopne
imul
cmpsl
dec
jno,pn
sti
xchg
leave
inc
dec
dec
rolb
xchg
icebp
xchg
dec
and
and
pop
push
test
jnp
pop
idivl
ja
test
jmp
sti
repnz
push
push
inc
sub
movb
fwait
scas
adc
lret
xchg
out
bnd
adcl
jbe
ds
inc
push
mov
stc
sti
shll
nop
jae
stos
jg
addl
bound
cmc
setg
add
pop
negb
in
xchg
cmp
dec
shrb
stos
or
inc
shll
jno
mov
xor
pop
inc
add
add
insl
test
xchg
fbld
lret
push
lcall
hlt
xorb
pop
adcl
cmp
inc
loop
or
or
sbb
movl
lcall
int3
jnp
adc
xorb
idivl
bnd
loopne
push
fdivr
mov
xchg
jp
lcall
xchg
or
sub
add
inc
and
scas
pusha
iret
dec
jmp
jle
cwtl
fdivrs
jo
movsb
and
add
mov
xor
jo
out
iret
rorl
enter
pop
in
sbb
repz
pop
mov
xor
xor
pop
cmpsb
loope
fimull
pop
ja
fdivrs
mov
mov
jge
loop
jmp
lds
aas
jne
sbb
xchg
andb
test
inc
pushl
push
imul
scas
or
es
sbb
sbb
lea
cmpsl
sbb
imull
mov
cmp
mov
add
mov
jae
dec
jecxz
inc
jmp
push
in
fcompl
cmp
xor
inc
sub
pop
sub
dec
imul
adc
inc
pop
sbb
push
jbe
lods
sub
sub
mov
jg
das
mov
les
inc
jnp
into
cld
aad
sarb
imul
lcall
xchg
or
jl
je
popa
andl
arpl
sub
xchg
dec
loop
shlb
in
add
dec
inc
dec
sub
lock
out
or
testb
subb
inc
mov
push
xor
push
or
inc
pop
cmp
mov
xchg
cmp
ret
clc
rclb
mov
out
call
mov
js
int3
shll
mov
aad
aas
mov
movsl
cld
xchg
add
test
ss
push
or
mov
pop
add
repnz
arpl
test
xor
pop
inc
inc
cld
clc
stos
cltd
clc
mov
imul
pop
fs
hlt
rcrb
je
lods
mov
lock
add
and
imul
sbb
in
rcrl
dec
dec
aad
aas
lret
sti
outsl
xchg
or
lahf
or
outsb
ds
xchg
addb
xchg
lea
ss
sub
jne
mov
add
movnti
jbe
adc
mov
nop
sbbl
aam
adc
inc
mov
sbb
ss
pop
adcl
enter
mov
or
mov
int3
xchg
pop
cwtl
test
nop
push
push
std
lea
lret
addl
mov
adc
cwtl
xchg
cmp
imul
or
mov
push
mov
js
dec
out
sub
sbb
das
mov
cmp
call
mov
and
fwait
and
xchg
fidivl
push
add
xchg
hlt
xchg
and
je
int
jno
enter
or
mov
xor
sub
sub
scas
and
cli
idivb
cmp
push
pushf
shll
fs
jne
les
xchg
mov
dec
icebp
out
jbe
push
repz
fistpll
scas
fisubs
subl
rol
mov
sbbl
adc
inc
adc
cmp
inc
or
test
push
inc
push
jnp
push
jg
test
daa
in
mov
or
mov
insb
call
mov
adc
adc
mov
inc
test
cmp
sarl
cmp
xchg
addb
dec
in
sbb
rcr
inc
mov
xor
negb
mov
mov
pop
jg
outsb
outsl
adc
loop
mov
daa
cli
adc
repnz
shlb
ja
cmp
adc
jnp
test
dec
inc
shlb
cmp
scas
mov
enter
xor
fidivrl
or
ljmp
daa
adc
arpl
cmpsb
jae
ja
add
stc
call
sub
pop
or
mov
mov
lock
int
out
scas
enter
xor
dec
hlt
and
outsl
stos
pop
movsw
rcrl
sbb
hlt
lods
xor
stc
cmp
or
push
push
sub
outsl
aad
mov
in
mov
scas
add
ficomps
push
lods
leave
loopne
jne
cmpb
push
pop
jg
cmp
mov
and
cld
stos
cmp
xchg
xor
jo
jnp
adc
pop
sbb
xlat
loopne
dec
and
aaa
mov
mov
or
jge
xorl
nop
stos
subl
jg
mov
mov
and
shlb
lock
or
mov
fnstenv
mov
mov
std
mov
pop
movsl
or
ja
add
dec
imul
rol
jp
int3
and
iret
sbb
cld
inc
hlt
testb
mov
cmpl
shlb
into
xlat
rolb
add
xchg
ror
xchg
ds
mov
divb
ret
movups
xchg
add
sub
repnz
cltd
xlat
cmpsb
fstpl
lds
push
dec
in
lea
cwtl
scas
pop
and
jne
pop
jecxz
movb
mov
push
pusha
add
and
add
and
pop
xor
dec
push
lods
pusha
push
xchg
sbb
sub
lea
cmp
cmp
lods
sahf
dec
int
mov
ss
mov
flds
mov
push
std
jge
dec
lahf
jns
xchg
pop
mov
or
fimuls
fwait
pop
inc
in
push
xor
aaa
in
xchg
and
loop
loope
mov
in
ss
out
popf
imul
gs
cli
push
jb
mov
cmp
push
ret
icebp
mov
loop
jnp
ds
sub
dec
mov
push
bound
jge
stos
hlt
dec
ss
jmp
into
mov
rcrb
mov
sbb
subl
and
jecxz
sub
out
pop
push
into
mov
les
inc
orl
add
mov
loope
fisttps
ret
push
cmpsb
dec
adc
cli
add
leave
movsb
imul
roll
mov
sti
fdiv
icebp
insl
jae
adc
pusha
push
mov
repz
aas
lret
stc
sub
inc
idiv
movsl
mov
jl
fdivrs
and
insb
jnp
cs
arpl
or
pop
dec
mov
inc
add
sbbb
cmp
out
daa
cmc
xchg
cmc
in
xor
cmp
les
sub
lgdtl
leave
repnz
dec
lret
scas
pop
pushf
fisubl
inc
dec
fldt
mov
dec
js
cmc
mov
iret
adc
xlat
mov
cld
pusha
test
cmp
adc
mov
mov
xchg
xor
push
cmpsb
xor
pop
jecxz
mov
sub
aaa
test
pop
sti
std
xchg
into
into
pop
mov
mov
cmp
push
fdivrs
xchg
pop
test
fildl
into
les
mov
push
mov
inc
int3
mov
loope
or
push
ljmp
inc
dec
rolb
push
inc
push
mov
dec
sbb
mov
add
xor
and
dec
xlat
and
mov
iret
test
sar
dec
idivl
pop
jae
in
jne
in
xchg
pushf
push
dec
add
fistpll
call
cld
lock
or
lahf
mov
dec
push
shrb
inc
aas
mov
or
cmpsl
cltd
fisttps
hlt
sbb
add
out
sbb
pop
sbb
int3
cmp
fisubrs
adc
xchg
xor
negb
xor
or
jbe
daa
std
sbb
jp
mov
out
sub
mov
or
scas
mov
push
in
pop
out
push
mov
mov
xor
push
xor
enter
lea
sahf
movsl
sarl
push
mov
jne
cmc
movsl
ja
dec
adc
and
mov
hlt
pop
push
lret
subb
push
xor
outsl
aas
mov
xchg
mov
xchg
addl
mov
lock
xchg
addr16
inc
jns,pt
pop
je
scas
in
pop
sbb
aaa
lret
sub
jnp
mov
popa
arpl
cmp
rcl
fldcw
pop
sbb
pop
pusha
bound
mov
jmp
sub
shlb
cmp
sub
mov
dec
sbb
push
or
sbb
loope
push
mov
fwait
jne
sbb
clc
loopne
cmp
cmp
inc
iret
or
cmp
xor
and
insb
inc
push
movl
bound
int
cmc
mov
xlat
ja
mov
jl
fwait
pop
mov
pop
cli
or
mov
push
jne
in
jno,pt
lcall
mov
mov
js
rep
dec
and
mov
jnp
jne
cltd
lock
and
push
insl
stos
xor
mov
test
shrl
lods
outsb
mov
push
mov
or
mov
xchg
push
call
fstpl
xor
and
add
fwait
mov
pop
push
jo
sbb
xorl
call
rclb
ret
aad
leave
sti
popa
xor
stos
mov
xchg
dec
and
shlb
sub
shlb
inc
mov
jecxz
dec
lret
jno
cwtl
jo
inc
jecxz
cmp
aaa
test
int
mov
ja
xchg
mov
outsl
xor
pushf
lods
or
cmp
mov
loop
xor
std
mov
shll
insb
pop
pop
add
or
ficoms
xchg
int3
xchg
rorb
cld
inc
in
cmp
pop
fdiv
push
outsb
cmpsb
inc
mov
mov
push
jno
push
add
mov
mov
sbb
sub
xchg
or
fdivl
mov
shll
out
enter
movsb
hlt
jae
andb
fnstcw
sub
mov
inc
push
addr16
mov
pop
add
ja
ret
push
iret
mov
dec
je
jno
sbb
mov
push
or
cmp
xchg
negl
into
or
pop
jno
int3
mov
mov
mov
and
xor
sbbl
jbe
inc
push
pop
and
dec
pusha
xchg
lea
push
iret
mov
mov
gs
nop
mov
outsb
dec
mov
adc
jp
arpl
stos
fwait
mov
filds
sbb
fisubrl
imulb
mov
fsts
fisttpll
jl
push
dec
adc
stos
cmp
mov
out
js
lret
xor
dec
inc
jg
push
imul
and
mov
sarl
push
mov
call
xor
stc
jno
push
outsl
fmuls
fldt
push
push
sub
add
jecxz
sub
nop
inc
jb
mov
mulb
push
mov
inc
sbb
mov
stc
loop
pop
mov
or
enter
fadd
inc
xlat
mov
mov
inc
sub
test
pop
mov
sub
lret
push
leave
add
insb
xor
add
push
scas
into
add
sti
popa
adc
xchg
into
test
or
loop
cmp
sbb
imul
data16
out
inc
inc
xchg
mov
pop
sub
pop
push
xor
mov
ds
xchg
pop
std
out
cltd
cmp
push
jns
das
push
and
xor
addr16
jmp
mov
mov
xchg
pop
adc
outsb
inc
sbb
and
cmp
adc
pop
mov
pop
jbe
xlat
push
and
pop
push
mov
stos
push
test
fisubrl
sub
push
mov
xlat
push
pop
cwtl
js
in
mov
ret
xlat
adc
pop
mov
mov
or
jg
arpl
add
and
inc
fiaddl
mov
ljmp
mov
popa
jge
fldl
pop
insb
or
mov
testb
xor
outsl
pop
clc
scas
lahf
push
xchg
jno
insl
lods
hlt
cmc
jno
mov
pop
dec
nop
orl
cmc
arpl
push
push
lret
mov
fisubrs
sbb
sub
mov
outsl
fwait
push
fisubrl
xor
add
test
cmpsl
pop
leave
cwtl
in
inc
test
pop
add
xor
add
cmpsl
cltd
sarl
popa
inc
ss
push
or
xchg
mov
cwtl
std
js
aas
xchg
outsb
lods
xchg
mov
xchg
inc
fs
outsb
jl
repnz
jne
adc
std
or
jl
fimuls
out
xor
pop
or
sbb
insl
adc
push
aam
xchg
repnz
sub
addr16
mov
xchg
jp
inc
bound
imul
sbb
enter
lock
call
mov
decl
sahf
mov
jle
push
mov
push
sub
ljmp
leave
push
lahf
xchg
sbb
js
jecxz
add
push
mov
push
test
rorb
sbbl
lock
cmc
data16
and
sbb
scas
xchg
gs
xor
or
dec
mov
or
mov
sahf
jne
sub
inc
cwtl
mov
xchg
add
pop
xchg
push
sub
in
push
addl
add
cwtl
pusha
xchg
lret
popa
sbb
dec
pop
scas
and
mov
and
pushf
or
jle
mov
or
pop
es
jbe
push
xor
push
sahf
cmc
and
je
scas
call
lcall
nop
repnz
and
add
sbb
icebp
jnp
mov
xlat
add
repnz
xchg
mov
dec
leave
push
dec
in
int3
jg
imul
in
iret
lcall
ss
jmp
xchg
popa
xor
repnz
test
push
push
icebp
jg
inc
js
outsb
out
jge
icebp
inc
mov
mov
cmp
mov
call
cltd
push
sub
jmp
fistps
push
leave
cmc
xchg
out
and
dec
mov
dec
xor
stc
cmpsl
jo
rorl
je
and
sbb
daa
or
adc
iret
std
std
cmp
stos
pop
std
push
aad
jo
add
setnp
outsl
ss
jns
repz
xchg
mov
sbb
sbb
divl
dec
jne
fisubrs
sbb
les
sahf
lds
add
int3
ret
jmp
push
push
pop
stc
addl
sbb
or
pop
mov
fbstp
cltd
fcmovbe
dec
imul
or
mov
cld
inc
inc
cli
or
fstps
int
jmp
xor
mov
xor
out
jae
dec
ds
inc
mov
xchg
jo
push
mov
sub
jge
and
lahf
lock
sbbl
aam
xlat
xor
movsb
lods
popf
push
pop
mov
lahf
xor
mov
mov
mov
and
jmp
addr16
or
xor
stos
xchg
outsb
push
shll
fwait
pop
pusha
cmp
loope
xchg
xlat
dec
xchg
loope
daa
popf
xchg
cmpsb
and
iret
dec
jo
cwtl
insb
xor
mov
dec
imul
scas
popa
sub
mov
and
ljmp
cmp
or
sets
cmp
sbb
stc
les
fdivrp
loope
xor
push
adc
enter
dec
in
add
rcll
insb
or
roll
mov
dec
imul
and
into
cmc
adc
fldt
cld
push
xchg
outsb
ss
jno
inc
and
inc
popa
into
fwait
insl
xchg
insl
movsl
sbb
lock
imul
shrb
sbb
cmpsb
pop
mov
mov
inc
or
lret
and
dec
inc
add
cmpsb
out
xchg
les
dec
imul
and
aaa
xlat
fisttpl
aas
dec
cmpsb
xchg
js
rcll
dec
incb
dec
imulb
pop
cmp
imul
jge
mov
lods
sub
enter
ret
cwtl
lahf
sub
inc
pop
adc
mov
pop
sub
bnd
cwtl
jns
push
push
test
insl
adcl
and
notb
test
dec
inc
lret
adcl
loope
dec
dec
test
iret
sbb
lods
fcoms
inc
neg
sbb
pop
and
icebp
imul
test
ret
popf
mov
pop
je
aaa
mov
cmp
push
dec
leave
and
dec
pop
mov
in
shlb
das
sbb
int
into
push
add
pushf
mov
sub
cmp
imul
out
pop
pop
imul
jno
pop
mov
push
out
arpl
cltd
insl
into
fistl
pop
fbstp
out
loope
mov
push
cwtl
out
ror
dec
out
pop
inc
test
fsub
dec
sbbb
negb
or
out
out
repz
ljmp
ja
fcomps
or
fs
mov
in
add
sbb
adc
jecxz
or
push
mov
xlat
in
sahf
enter
rcr
and
out
mov
popa
sbb
iret
js
cmp
jo
mov
jge
faddl
enter
mov
or
movsl
in
pop
js
push
cs
cmpsb
sbb
testl
push
push
out
jno
imul
cltd
stos
cmp
mov
pop
int
cmpsb
cli
insl
test
push
inc
aaa
sti
inc
inc
pop
stc
xlat
inc
xchg
mov
mov
or
ds
mov
mov
xchg
loopne
lds
sub
jns
push
dec
lahf
daa
mov
jne
incb
xchg
xor
loop
les
imul
push
popa
clc
pop
pusha
push
jp
sub
lds
adcb
push
das
add
mov
mov
dec
loop
pop
in
jmp
mov
xchg
je
rcrb
out
sbb
rolb
scas
outsl
bound
sti
cmpsl
lret
sbb
negl
rorb
lret
arpl
mov
sbb
pop
aam
add
ficoms
xchg
sahf
push
xor
popl
std
sub
or
cs
subb
pop
pop
test
js
cmp
insb
xchg
xchg
dec
dec
jmp
push
jne
cmc
int
mov
or
push
push
jbe
sbb
ljmp
lahf
and
push
addl
lcall
les
or
inc
repz
push
add
xor
outsl
or
insb
in
std
add
into
les
or
and
jmp
cld
xchg
jle
sbb
fucom
inc
sbb
sahf
sub
or
and
jl
push
testb
lods
ljmp
call
jl
mov
jmp
cmp
aam
xlat
mov
sub
test
flds
sbb
mov
xchg
fisttpl
sbb
inc
rorb
cli
in
loop
dec
pop
inc
sub
outsl
repnz
test
add
jns
lds
test
xor
ficoml
xchg
icebp
add
fdiv
inc
lds
out
pop
hlt
in
mov
adc
movl
aad
sbb
lods
int3
outsl
mov
ficoml
dec
in
dec
imul
jae
xorl
jmp
sbb
pushf
cmpsl
push
pop
cwtl
lds
fcomps
pop
movsl
and
loopne
pop
inc
push
mov
xchg
xchg
or
sub
scas
into
sub
dec
mov
or
loope
jb
add
xchg
xor
mov
push
xchg
in
out
pop
xor
shll
dec
loopne
call
dec
and
jne
push
js
push
sub
hlt
or
xchg
pop
cmc
pushf
call
jl
and
js
loop
pop
test
adc
xor
mov
mov
mov
jno
int
add
or
xlat
inc
shll
pop
xchg
out
das
repz
rcrb
push
movsb
aaa
divl
adc
nopl
xchg
push
fadds
insb
dec
loope
out
or
mov
push
and
dec
sbb
sti
pop
jne
movsl
cs
mov
cld
jno
movsb
cli
lods
xchg
sub
mov
adc
out
cmp
xor
mov
popa
lock
push
sahf
clc
sbb
pop
mov
mov
add
cmp
mov
jge
push
cmp
ss
mov
mov
inc
and
jmp
and
in
mov
mov
pushl
xchg
xchg
dec
cmp
mov
dec
cmp
cmp
incb
cmp
test
mov
jp
popa
push
lock
pop
fmull
fmul
xor
dec
cltd
mov
stos
mov
jl
scas
or
loope
xchg
mov
sbb
xor
jg
inc
in
sbb
movsb
cmpl
addr16
adc
add
mov
jbe
aaa
mov
and
inc
pop
and
jp
and
adc
inc
and
ss
and
jo
dec
and
add
dec
in
inc
mov
test
test
insb
push
jae
cmp
sub
xor
add
pop
dec
push
dec
inc
mov
dec
ljmp
push
loope
rcl
fwait
lcall
jge
in
jge
mov
push
in
xor
lret
xchg
in
xchg
daa
mov
sti
jl
mov
sbb
scas
xor
ficomps
push
dec
dec
jb
int3
cmpsl
outsb
dec
or
adc
pop
mov
stc
icebp
pusha
cmp
sbb
adc
mov
add
push
push
into
jg
xchg
xor
dec
jecxz
sbb
sub
push
mov
clc
popa
aam
jns
mov
outsl
pop
lcall
add
dec
jns
and
rorb
xor
adc
pop
xchg
add
and
fmuls
xchg
or
jge
inc
cltd
pusha
fbstp
hlt
sbb
push
aas
mov
adc
aad
pushl
adc
inc
neg
out
sahf
or
mov
pushf
mov
test
mov
mov
push
int3
pop
inc
pop
inc
mov
and
sbb
repnz
lcall
popa
push
in
jmp
add
insl
xchg
adc
movsl
cmp
ss
lret
in
daa
loope
out
push
inc
daa
dec
dec
push
call
icebp
jecxz
inc
lea
jmp
sub
pusha
aam
daa
xlat
stos
js
fcmovnbe
pop
fcoms
bound
out
pushf
mov
add
loope
aad
inc
ljmp
aam
or
jbe
negl
sub
adc
dec
mov
mov
and
cmp
aas
pop
daa
xchg
fmulp
or
mov
xor
nop
sbb
in
lahf
xor
call
sub
jbe
clc
pop
push
dec
xor
inc
adc
ja
gs
add
inc
ret
dec
cmc
xchg
popa
pop
insb
cli
jo
inc
sbb
icebp
loop
insb
sbb
pop
repnz
fiaddl
jl
or
inc
jae
ljmp
sbb
addr16
mov
fcomps
pop
mov
mov
pop
addr16
push
and
lods
xor
repnz
inc
int
sub
lret
xchg
sbb
outsl
punpckhbw
adc
xchg
lds
lahf
les
pop
std
or
bound
mov
int3
std
lahf
fisttpll
pushf
insb
mov
dec
pushf
add
popa
mov
dec
sbb
aam
fdivl
mov
lahf
mov
sbb
mov
jmp
insl
push
cli
jmp
push
test
add
scas
push
mov
in
lcall
test
mov
cmp
aam
and
test
out
inc
aam
shrb
or
scas
fmull
mov
aas
test
jmp
xlat
adc
xor
divb
jmp
pushf
sbb
pop
in
xchg
popf
daa
cmp
ret
xchg
shlb
clc
cld
test
out
xchg
fidivs
les
mov
imul
stos
cmpl
std
mov
or
mov
jg
icebp
and
xor
push
xchg
jl
gs
mov
mov
xchg
ds
jne
mov
mov
out
xchg
mov
lret
ror
mov
cli
inc
lock
scas
pop
repz
or
test
lret
repz
scas
nop
mov
mov
or
adc
rcrb
jl
cwtl
xchg
adc
icebp
jae
cwtl
sub
mov
dec
nop
push
inc
add
ja
insb
and
cmp
inc
dec
dec
adc
clc
lock
push
mov
jecxz
mov
mov
pop
xlat
cltd
lret
cmpsl
xorb
int
push
xchg
lea
rol
or
std
or
add
ficoml
loop
shrl
les
sub
fs
sahf
adc
pop
les
enter
xorl
out
sahf
imul
fucomp
pop
stc
fidivl
clc
lahf
push
std
into
cmp
dec
cmp
adcb
sbb
xchg
mov
cltd
or
mov
inc
push
leave
add
stc
mov
cmp
pop
orb
xchg
adcb
lods
add
stos
pusha
cmpsl
mov
daa
in
bound
aaa
sbb
test
out
das
aad
ror
stc
pushf
xchg
enter
test
mov
addl
sub
out
push
push
ja
or
inc
xchg
adc
mov
sahf
into
popf
dec
jne
lcall
lcall
jl
test
mov
jp
push
push
jecxz
mov
addr16
movsb
stos
inc
sub
jns
jecxz
clc
mov
repnz
or
or
mov
into
outsb
sbb
lcall
adc
xchg
loope
push
jno
fistpl
cwtl
fbstp
shll
xchg
jbe
and
mov
mov
nop
and
ficoml
inc
lcall
adc
stos
insl
push
adc
mov
in
push
xor
decb
and
push
push
dec
out
sub
lahf
ja
xor
sbb
inc
dec
fs
inc
shr
dec
sbb
or
xor
mov
push
enter
lods
movsl
call
pop
les
adc
jbe
call
stos
movsb
testl
push
arpl
enter
jbe
lds
lcall
repnz
inc
inc
mov
movsl
pop
mov
xor
enter
cli
movsl
pop
push
push
ficompl
add
inc
dec
sbb
shll
jg
and
sbb
in
outsb
mov
adc
addl
push
cmp
mov
mov
outsl
dec
dec
hlt
jp
lods
cltd
pop
out
xchg
adc
xor
roll
xchg
push
mov
imul
pop
xor
lret
push
rol
sub
push
rep
inc
mov
mov
jecxz
jp
and
incl
dec
sti
inc
dec
mov
mov
cmpsb
sub
test
stc
adc
popf
mov
lret
in
pusha
cld
push
rol
sbb
flds
adc
ja
mov
adc
mov
inc
cmp
mov
xchg
add
pop
inc
outsl
dec
int3
adc
hlt
pop
sub
lea
push
sub
lea
ljmp
dec
test
jne
mov
insl
lea
loope
inc
xchg
push
xchg
xchg
mov
adc
jmpw
inc
movsb
xchg
mov
out
jne
call
xchg
sahf
jnp
pop
jns
insb
jo
push
lock
fists
fstps
pushf
hlt
outsb
sarl
mov
mov
jbe
sbb
adc
into
nop
pushf
out
pop
insb
xchg
cmpsb
iret
nop
xchg
hlt
jl
xor
jecxz
lds
rep
sbb
aad
push
xchg
std
and
hlt
insb
jno
aas
sbb
mov
ljmp
jle
sbb
sbb
addr16
fadds
add
into
cmpsb
test
popa
and
lcall
add
push
xchg
ret
scas
jmp
sbb
lds
pop
mov
push
inc
stc
push
pop
xchg
stos
aas
mov
cld
dec
rol
aad
and
das
mov
pop
fnsave
pop
mov
push
mov
adc
aaa
jbe
fsubrs
mov
sbb
gs
stos
inc
mov
xchg
in
add
xor
xor
pop
add
and
cmc
inc
push
scas
sbb
in
in
ret
xor
enter
cld
cmp
xchg
jmp
scas
sbb
ret
insb
ret
push
jbe
push
or
dec
dec
dec
mov
cltd
mov
fmull
or
ljmp
xor
gs
pop
aam
jae
xchg
xchg
jp
push
ds
ljmp
in
jo
out
push
push
imul
scas
fldt
out
lret
push
push
lods
lea
xchg
test
insl
shl
push
addr16
add
sub
mov
and
daa
jae
sbb
and
jg
mov
fsubrs
popf
cwtl
data16
loope
cmpb
add
rorb
sub
push
jecxz
push
cmp
idivb
mov
sbbl
in
sti
notb
add
sbb
jo
mov
jns
xchg
aas
cmpl
inc
or
lret
lods
dec
inc
int3
add
stc
dec
inc
mov
pushf
fbstp
outsb
inc
mov
push
adc
stos
out
pop
sbb
aas
or
dec
icebp
in
cmp
cmpsb
ret
leave
inc
mov
cmc
pop
fdiv
clc
arpl
mov
adc
test
cmp
cmc
bound
lcall
jle
sub
int
shll
rcl
sub
arpl
pop
and
cmp
sahf
mov
sbb
in
out
xchg
inc
sbb
stos
add
mov
fiaddl
xchg
aas
in
cs
jl
mov
and
inc
and
sbb
cmp
xor
shrb
cli
std
movsl
inc
push
xchg
add
iret
out
pop
jl
jns
js
push
xchg
dec
inc
or
inc
fmul
add
xchg
scas
sub
pand
mov
in
loop
pop
jbe
out
cmc
mov
sbb
push
xchg
push
das
mov
pop
inc
inc
sti
test
cmp
rcll
pop
inc
rep
dec
push
mov
lcall
mov
lahf
add
xorl
add
add
sbb
inc
adc
ret
rorb
fnstcw
push
xor
pop
mov
mov
cmp
xor
into
inc
xchg
fcom
push
sub
divb
mov
testl
fdivs
scas
push
xchg
mov
sbb
inc
dec
nop
push
ret
or
xchg
aam
arpl
inc
sub
dec
sbb
xor
jmp
jp
iret
push
sbb
and
pusha
je
mov
jb
pop
push
dec
and
mov
loope
or
mov
lods
cwtl
add
mov
imul
pop
out
jle
mov
ds
repz
addr16
inc
scas
cmp
xchg
nop
adc
push
push
aas
mov
xor
test
sbb
es
inc
cmpsb
out
dec
dec
jl
push
in
lds
fcmove
nop
pop
mov
inc
jge
rcrl
cmp
mov
in
loope
aam
jp
scas
pushf
sahf
test
fsts
adc
cmp
mov
stos
movsl
xchg
mov
jecxz
push
ret
push
xor
and
push
icebp
push
imul
pop
inc
je
repnz
sub
mov
sub
mov
jbe
sub
pop
cld
add
xchg
fimull
sets
fsub
mov
aam
sbb
inc
xlat
sbb
lds
mov
jne
xchg
sbb
push
movsl
pop
sbb
dec
jb
inc
popa
pop
push
inc
pop
mov
aam
or
cli
xchg
sbb
js
push
jae
mov
mov
imul
pop
into
cmp
ja
pop
lock
cltd
mov
pop
pop
movsb
jno
shr
aaa
sub
fadds
es
mov
adc
jle
loop
cld
lahf
jl
and
imul
add
and
push
push
sub
stos
fucomp
es
sub
call
sbb
jae
pop
pusha
dec
mov
stc
adc
ret
sbb
adc
pop
aaa
mov
jecxz
pusha
aas
jge
mov
mov
sahf
xchg
ds
stos
scas
or
adcl
dec
mov
add
adc
fmuls
sub
push
jnp
push
out
sbb
faddl
inc
dec
insl
fistl
repz
ljmp
add
loope
pushf
inc
fstl
and
xor
jb
sbb
jns
out
pushf
xor
pop
fistpl
adc
in
movsb
in
xchg
inc
jl
inc
cmp
sub
hlt
inc
dec
out
std
adc
data16
gs
cwtl
sarl
pop
mov
enter
mov
scas
repnz
icebp
or
inc
pop
dec
repnz
jmp
popa
test
cmpsb
xchg
jcxz
mov
mov
mov
mov
sti
adc
xor
inc
scas
push
cmpsb
push
sti
mov
test
imul
mov
jmp
or
lods
ret
in
fcompl
cmp
stos
mov
jnp
dec
mov
sub
mov
or
jb
or
frstpm(287
mov
xor
repnz
stos
xor
mov
je
pusha
lea
xchg
pop
stos
cmp
clc
lods
jo
daa
inc
arpl
cltd
sub
mov
rcrl
fildl
pop
ror
clc
sarl
dec
jbe
inc
cwtl
loopne
aas
adc
cli
inc
out
stos
cmc
cmp
or
cmp
bound
daa
in
clc
stos
sbb
pop
sbb
jge
sub
insb
sbb
aas
cmp
popl
out
dec
fs
idiv
mov
ljmp
rclb
xchg
dec
mov
shrl
rorl
xor
test
mov
cmp
addr16
pop
stos
inc
xor
loop
dec
dec
fsts
cmp
inc
cmc
fists
sahf
dec
movsb
sbb
mov
ficompl
mov
repz
jne
jmp
and
adc
lahf
stos
or
lds
daa
aas
inc
or
mov
cmp
inc
fnstenv
ret
jo
sbb
inc
rcrl
popa
dec
dec
jecxz
loope
daa
lods
out
and
adc
mov
sub
and
sbb
inc
sub
or
nop
cmp
icebp
test
and
sub
fldenv
cmpsl
movsb
push
scas
inc
add
mov
dec
add
cmp
dec
movsb
cmp
and
jl
test
cld
dec
sbb
mov
mov
and
cmp
sub
cmp
sub
xchg
mov
xchg
int
xchg
cs
xlat
addr16
popf
rol
cmc
lret
sbb
jns
jbe
xchg
mov
stos
out
jecxz
push
cmp
test
inc
pop
fs
mov
mov
jne
mov
jae
mov
xor
mov
sub
cmc
pop
in
loope
mov
cmp
add
cmp
inc
outsb
mov
xor
gs
push
sbb
adc
scas
inc
lds
inc
cltd
mov
xchg
test
movb
cli
fnstcw
push
mov
push
jle
sub
adc
jno
pop
pop
testl
inc
insb
push
jnp
inc
adcl
cmp
mov
or
adc
sbb
add
arpl
ror
scas
push
add
ljmp
mov
in
je
mov
add
cmp
jbe
push
jg
sbb
loop
js
jecxz
aaa
push
dec
adc
dec
adc
xor
pop
mov
jmp
cmp
sub
loopne
push
cmp
xchg
sbb
imul
mov
and
xchg
sbb
sub
cmp
or
fldl
ljmp
movsl
mov
push
pop
das
imul
cmp
not
popf
jo
jns
mov
and
jge
jmp
inc
adc
es
sub
mov
mov
into
addr16
mov
jecxz
sbb
inc
es
mov
dec
dec
pop
xchg
stos
mov
dec
jge
fdivrl
sbb
sbb
xchg
fldl
test
add
bound
mov
imulb
popf
fnstenv
mov
mov
lcall
inc
dec
sub
add
mov
xor
cmpsl
cmpsb
dec
std
imul
call
loop
nop
int3
inc
adc
jb
outsb
in
and
xorb
cmovg
add
cmp
ljmp
push
mov
addr16
popa
insb
dec
add
xchg
push
ja
movsl
stos
jbe
nop
mov
gs
add
cmc
or
testl
sbb
push
and
pop
es
mov
jo
or
fdivs
mov
es
cli
pop
jns
xchg
jno
mov
sbb
sbb
sbbb
xchg
scas
and
lods
jg
pop
mul
mov
movsb
mov
pop
pop
sahf
insb
pushf
cmp
iret
ret
cmp
or
pop
sbb
xlat
mov
lods
push
insb
xchg
shlb
mov
cmp
jecxz
clc
fsin
fisubrl
cltd
cmc
ss
sbb
inc
iret
jg
test
outsl
shl
outsb
punpcklwd
or
loop,pn
add
in
pop
rcl
lcall
cli
pop
sbb
inc
jle
std
mov
mov
imul
addr16
mov
fsubs
dec
xchg
mov
shl
inc
scas
int3
pop
pop
popf
mov
lock
in
inc
push
xchg
out
pushf
iret
xchg
sbb
int
out
test
or
mov
jmp
pop
popa
push
pop
cmpsb
push
push
mov
fldcw
scas
jecxz
pop
bound
or
mov
cli
mov
pop
test
jno
inc
or
jge
sbb
adcl
out
fildll
mov
xchg
ret
or
sub
rol
cmp
mov
xchg
pop
inc
xchg
cmp
daa
ds
cwtl
and
shll
lcall
ljmp
sub
xchg
sbb
add
mov
or
mov
and
dec
xchg
in
shll
mov
pop
mov
mov
addb
mov
movsb
dec
mov
cmp
xor
ds
mov
jns
data16
mov
fsubl
and
faddl
movsl
mov
ret
fistps
add
pop
sub
aaa
ret
sub
push
insb
or
lretw
in
test
mov
jo
jg
pop
movsb
jle
divb
int3
fucomp
stc
bound
fbstp
adc
jge
and
aas
mov
mov
sub
or
xchg
pop
push
sahf
out
loope
mov
int
gs
mov
aam
xor
aaa
sub
sbb
subb
les
aaa
mov
mov
mov
lods
dec
enter
ljmp
ja
sbb
adc
cs
std
leave
daa
pop
xchg
fistps
mov
xchg
shlb
and
cmp
popa
cmp
xor
mov
and
cli
pop
lods
adc
mov
xchg
and
rol
test
and
popa
movsl
movsl
pop
xlat
xor
gs
push
mov
addl
imul
jb
cmp
cmp
jge
adc
sar
xchg
rcll
add
int3
cmp
mov
icebp
lods
scas
call
out
pop
push
push
mov
into
arpl
mov
fsubl
aas
shr
pop
mov
ja
xor
xchg
xor
or
fsub
imul
push
sti
lret
fwait
adc
in
cmp
std
adc
daa
xor
sarl
xchg
daa
sar
mov
pop
lret
pop
jne
add
leave
or
add
lret
imul
ret
fnstsw
dec
cltd
je
imul
popa
mov
jns
jnp
sub
out
addr16
fisubs
in
in
cmp
inc
fs
pop
scas
cmp
dec
cmp
int
daa
pop
adc
pop
inc
jno
lcall
mov
inc
adc
ss
insl
jp
xor
mov
stos
inc
aam
rclb
and
or
jnp
xor
cmp
pop
movsb
xchg
jo
adc
xchg
loop
or
cmc
mov
mov
shl
adc
clc
sbb
fs
xor
sbb
test
shrl
addr16
jae
mov
dec
aaa
cmp
frstor
lret
nop
cli
aas
or
fs
inc
lods
stos
and
popf
inc
pop
xor
pop
and
imulb
sbb
dec
cmp
subb
mov
mov
mov
bound
movsb
mov
pop
lcall
adc
pop
sbb
icebp
mov
and
inc
lcall
xchg
adc
push
jge
jbe
dec
lahf
jge
mov
dec
jne
and
cmp
xor
add
fildll
add
sub
mov
xor
sub
mov
cmp
shll
add
cmp
inc
adc
adcb
inc
jle
ja
mov
push
jl
aas
ljmp
pop
mov
xor
push
xchg
popa
fsubrp
inc
es
dec
loop
daa
pop
push
dec
test
lret
jmp
lret
push
lods
inc
mov
packuswb
mov
jo
pop
push
sub
xor
push
bound
sub
iret
mov
sbb
xor
and
xorb
push
das
ds
insb
adc
daa
sub
inc
gs
add
cmp
lcall
and
adcl
ret
push
and
or
xlat
xchg
sbb
lock
insl
jp
ja
add
adc
lahf
add
ficompl
add
xchg
adc
rcrl
call
mov
movsb
lock
call
add
pop
fldl
pop
mov
inc
int
mov
mov
push
add
sub
insb
jl
add
mov
iret
dec
cmc
push
outsl
xchg
and
push
pop
pop
in
lahf
pop
imul
sti
movsb
mov
jae
mov
push
cli
mov
mov
out
mov
mov
push
lret
xchg
sub
xor
pop
push
int3
push
push
ret
dec
jge
add
movsl
mov
clc
loopne
in
mov
inc
ret
xchg
inc
mov
sbb
lods
cs
mov
aaa
gs
pop
loope
mov
pushf
ret
ret
sarb
adc
clc
into
jle
add
xchg
scas
xchg
sbb
lcall
mov
and
in
jecxz
push
outsb
cs
dec
mov
leave
andl
jmp
mov
cltd
pushf
dec
push
and
xlat
adc
mov
mov
pop
outsl
popf
cmp
test
push
sbb
and
cmp
push
and
subl
mov
dec
jo
sub
aaa
hlt
adc
lea
push
nop
test
xor
daa
cwtl
mov
imul
shlb
fwait
test
sti
fcmove
fsubrs
pop
aad
lret
cmp
lcall
and
or
inc
dec
sub
jp
dec
out
mov
push
test
mov
scas
out
ljmp
adc
es
jae
add
insl
cwtl
ljmp
out
xor
mov
jnp
call
mov
pop
lods
push
outsl
and
nop
and
lcall
movsl
sbb
push
jle
mov
and
sub
mov
jp
sbb
xchg
mov
adc
mov
movsb
in
bound
push
rcrl
in
sbb
cmpsl
mov
xchg
test
enter
pop
inc
mov
pop
lods
sub
shlb
xor
adc
ret
mov
in
jge
inc
add
cmp
out
mov
shlb
test
insb
inc
nop
dec
popa
xchg
adc
or
push
loop
lcall
mov
mov
add
and
dec
sbb
int
sub
push
cmp
xchg
push
inc
dec
stos
mov
test
fadds
lock
adc
fwait
lret
fimull
out
cmp
in
xor
push
mov
push
adc
out
xorb
push
call
jl
arpl
leave
or
xchg
add
test
in
push
fcompl
xor
sbb
call
adc
cwtl
cs
das
mov
sub
jge
jns
inc
sub
mov
sar
mov
pop
popf
test
adc
xor
loopne
test
aas
das
aam
fstps
jg
or
push
iretw
pushw
xchg
es
sarb
inc
xor
xchg
mov
add
sbbl
inc
sub
add
inc
ljmp
aad
add
inc
cmp
popf
lea
fwait
pop
inc
aaa
out
lea
je
imul
popf
ja
xor
sub
lea
or
jae
hlt
sbb
in
test
or
fistl
lcall
inc
les
lea
lahf
test
sbb
scas
ljmp
sbbl
outsb
stos
repnz
es
enter
pop
incb
add
jne
jmp
aam
ds
xchg
out
xchg
mov
addr16
mov
cmp
enter
pushf
mov
sub
outsb
std
mov
dec
sbb
data16
dec
in
or
stos
js
push
sbb
inc
popf
sub
push
test
pop
cs
mov
icebp
sbb
insl
and
pop
das
ss
out
xchg
dec
inc
sub
daa
or
ja
push
es
js
jmp
js
andl
adc
repz
aam
je,pn
repz
mov
push
add
jb
cmp
push
iret
repz
shll
ret
andl
add
push
jbe
es
inc
out
mov
repnz
data16
int3
ss
sbb
mov
add
and
hlt
sbb
push
out
mov
cmp
das
test
push
fsubs
ss
push
cli
mov
scas
mov
pop
jle
jb
lods
and
ds
dec
jmp
cmp
fmuls
cmpsl
and
lahf
sbb
adcl
daa
mov
push
xor
mov
push
out
shll
jl
pop
adc
negb
test
and
jle
rclb
movsb
and
pop
sbb
mov
adc
outsl
lds
dec
sarl
mov
movsl
cmp
xor
mov
sahf
mov
test
loopne
ret
jp
cli
xor
sub
add
sbb
cltd
jnp
push
test
pop
popa
add
jbe
test
mov
int
push
mov
pop
cs
lock
out
test
sbb
cmpb
lret
xchg
xlat
out
sub
jae
mov
out
pop
or
dec
jb
sub
aad
cmp
cs
aaa
stc
in
inc
testl
fists
jno
and
add
sahf
cli
fsubrs
inc
push
pusha
adc
nop
jmp
mov
pop
icebp
pop
cwtl
ja
out
repz
mov
pusha
xchg
mov
mov
mov
daa
es
pop
sbb
push
sti
rcrb
shl
and
fs
call
lods
repz
in
popa
cmpsl
push
cmp
aad
mov
pushf
inc
jp
xchg
mov
cmp
cmp
imul
lods
push
dec
dec
int
sub
dec
aas
push
mov
int3
mov
loopne
cltd
xchg
and
xor
test
addr16
in
shrl
ds
add
mov
xor
sub
ret
fisubrs
inc
mov
lea
cltd
dec
push
mov
pop
sbb
insl
or
push
push
stos
rol
ret
fcom
out
int
sub
in
insl
mov
mov
jne
ds
jg
ret
jle
movb
cld
movsl
ret
dec
sub
push
jne
movsb
das
sub
mov
rol
shlb
aas
mov
leave
inc
sahf
cmp
flds
jno
out
mov
jnp
dec
xchg
les
insl
pusha
scas
loop
cmpsl
mov
inc
sub
inc
pop
movsb
out
sbb
xchg
or
jle
rorb
push
paddw
mov
pop
mov
lret
rcrl
cltd
lea
mov
popl
hlt
adc
out
pop
cmp
xchg
pop
out
in
gs
and
fwait
add
or
orl
cmp
stc
idivl
xchg
push
push
arpl
add
inc
lea
dec
mov
cmp
cmp
add
push
mov
js
or
mov
xor
and
xchg
adc
in
stos
ror
insb
insb
mov
and
nop
sbb
add
stc
and
jecxz
xchg
mov
popa
pop
add
jno
iret
out
push
cmp
jecxz
outsl
stos
jae
inc
mov
popf
test
jl
sar
loope
cmp
mov
mov
popf
cmovnp
add
or
je
ljmp
addr16
xchg
jno
lds
int
cli
arpl
js
mov
and
jl
inc
in
push
xlat
add
stos
fsts
mov
jo
shrb
and
push
pop
dec
push
sti
push
movsl
ret
ds
push
bound
push
push
mov
insb
aaa
sub
mov
or
fmulp
mov
out
sbb
mov
loop
xchg
mov
cmp
aas
fcmovnb
fcmove
and
dec
cmpb
stos
ss
stc
cvtps2pd
mov
jbe
adc
fisttpl
outsb
pop
and
xor
fwait
bound
mov
jbe
leave
and
mov
int3
cmpsl
icebp
aam
insb
inc
xchg
adc
popl
inc
sub
shrl
xchg
push
iret
leave
mov
into
or
dec
mov
fbld
xor
loopne
sub
repz
ret
jmp
mov
stc
je
outsl
iret
push
sub
loope
mov
fisttpll
int3
inc
sti
fwait
cs
jg
jmp
clc
clc
xchg
in
add
inc
push
cmp
scas
adc
pop
fdivrl
loope
mov
jecxz
pop
call
repnz
push
popa
cld
push
pop
stos
stos
loope
sub
pop
je
sbb
aas
popf
rsm
rorl
mov
fwait
cltd
cltd
aam
pushf
cmc
xor
aaa
add
pop
pop
shrb
xor
test
push
jmp
cltd
dec
in
xor
sbb
shl
sbb
ficompl
mov
mov
lods
leave
fdivr
in
or
xlat
fsubrs
cltd
es
cld
xchg
push
xchg
ljmp
ds
and
rorl
add
adc
sbb
xor
adc
pusha
dec
push
xor
lret
fnsave
pop
cmpsb
shr
sub
adc
mov
movsb
xchg
ljmp
push
nop
inc
lods
cs
mov
sub
lcall
cmp
iret
lods
cmp
push
and
mov
mov
les
xlat
dec
jae
lock
shrl
add
popa
inc
cmp
dec
rorl
push
inc
into
lret
cld
xchg
add
jbe
ret
stc
xor
nop
push
ja
outsb
test
adc
inc
dec
jmp
lds
enter
jne
out
inc
mov
mov
cmpsl
es
out
pop
cmp
jns
fcomps
mov
decb
xchg
xchg
cs
mov
hlt
sub
pop
lret
jo
and
xchg
jne
sar
xor
lea
stc
imul
sbb
repz
push
sbb
xor
pop
scas
xor
sub
sub
xchg
lahf
push
inc
pusha
push
pop
lea
jecxz
in
sahf
stc
jnp
jmp
clc
cmp
mov
mov
mov
pcmpeqb
inc
lock
ljmp
popf
pop
arpl
out
test
mov
mov
jmp
out
in
inc
dec
adc
jo
mov
rol
lods
jecxz
jb
mov
shll
das
fwait
lods
xor
outsb
sub
mov
or
orl
mov
mov
bound
push
jmp
repnz
lods
cmp
aad
fisubrl
or
pop
movsl
mov
clc
push
or
cmp
mov
std
xchg
sub
xor
insl
loope
or
mov
and
and
adc
jecxz
or
sbb
mov
mov
std
cmpsb
mov
and
xchg
xorl
sub
outsl
test
and
insb
sub
pop
jmp
cmp
dec
insl
pop
xchg
clc
cmp
mov
cmpsl
je
sbb
jmp
sahf
jmp
scas
test
int
test
ret
aaa
xchg
mov
aas
adc
loopne
lret
movsb
inc
mov
mov
mov
ficomps
mov
inc
insl
repz
in
adc
out
mov
aam
cmp
in
fwait
popa
mov
sub
push
mov
rcr
ljmp
xor
outsb
jb
in
inc
xchg
xor
cs
inc
jns
cmp
stc
sub
out
lods
jge
pushf
dec
inc
lds
mov
sub
incl
mov
bound
pop
push
xor
xchg
hlt
out
mov
hlt
cmp
jns
mov
xor
push
push
cmp
xchg
fcos
ror
test
movsl
sahf
jg
sbb
fwait
mov
pop
or
mov
sub
xor
add
das
loopne
jns
push
xchg
sahf
push
pop
lock
sbb
pop
ficoms
mov
imul
int3
mov
fiaddl
mov
pop
mov
mov
push
pop
pusha
jle
ret
mov
xor
xchg
push
mov
loope
movsl
mov
and
mov
lods
sahf
stc
xchg
pop
sub
sub
xor
inc
cmpsl
lret
repz
add
pop
rorl
and
mov
out
mov
imul
mov
inc
inc
loopne
andb
xor
push
fdivl
outsb
pop
pop
cwtl
inc
dec
jb
push
test
cltd
mov
jno
daa
xchg
sbb
inc
ret
jmp
negl
ss
les
push
lahf
xchg
sub
test
mov
lret
lods
adc
jecxz
add
add
pop
iret
aas
add
pop
dec
cwtd
daa
cli
sti
test
sahf
cmovo
dec
jnp
scas
mov
insl
cmp
repnz
call
jbe
cmp
push
lret
mov
mov
jecxz
inc
mov
std
mov
cmp
xchg
mov
xchg
mov
nop
pop
ss
js
addr16
xor
adc
fdiv
testb
bound
je
outsb
fimuls
sbb
push
or
xchg
aad
jle
pop
fsubs
pop
lock
inc
aam
shlb
loope
sub
xchg
outsl
incb
mov
ficoml
mov
div
ds
pop
sub
in
jmp
xor
xchg
xor
mov
cltd
std
adc
in
mov
mov
mov
xchg
xchg
mov
mov
std
call
jle
push
inc
in
cmpsb
fsubrs
xor
xchg
mov
shrl
lcall
mov
pop
rcrl
fdivl
adc
lret
xchg
insb
mov
iret
xor
bound
daa
mov
push
fimull
loope
shlb
xchg
cmp
movsb
les
adc
into
repz
lods
xchg
enter
and
jmp
and
and
fdivs
push
or
ja
fbstp
fistpl
xchg
inc
ja
icebp
adc
int
sbb
inc
cli
cmp
push
cmp
stc
popf
mov
in
mull
pop
xchg
scas
and
leave
pop
stos
adc
and
xor
adc
loope
sti
add
cmp
mov
cmp
dec
call
enter
inc
or
mov
adc
les
les
fsubr
push
push
in
add
mov
mov
add
popa
mov
push
mov
push
xor
pop
inc
mov
loopne
jne
bound
inc
xchg
adc
mov
in
fstps
in
xor
or
ljmp
orl
scas
dec
outsl
jge
jg
xorb
loop
jmp
out
int3
pop
out
adc
pop
jo
insb
jb
sbb
addr16
scas
jg
pop
pop
xor
jl
xchg
and
ret
ds
or
iret
fdivrp
mov
ret
xor
cmp
add
fucomp
notl
repz
lock
sub
mov
adc
jae
mov
mov
xor
test
xchg
fisttpl
mov
sti
loope
adc
lds
cmpsl
sub
cwtl
jle
shrl
jp
lahf
inc
in
cwtl
ret
js
mov
jns
ds
popf
sbb
mov
iret
inc
or
fwait
ret
dec
fsubrl
aaa
jge
out
sti
stc
into
addl
movsb
push
js
inc
cmp
mov
add
rorl
inc
lock
cmc
std
fildll
cmpsl
pop
ds
or
pop
pushf
push
out
into
mov
or
sarl
fwait
sub
or
and
pusha
pop
sahf
xlat
out
cltd
outsl
out
adc
push
xor
lcall
mov
mov
outsb
flds
mov
xchg
int3
or
lods
pop
enter
mov
dec
jbe
cmp
rolb
enter
js
mov
fcom
pop
and
dec
fadd
jns
push
inc
jo
pusha
repnz
pop
out
stc
popf
clc
mov
ret
insl
mov
add
jp
or
pop
push
cmc
sbb
jo
sub
ja
enter
xlat
out
sub
andb
cld
pop
call
or
dec
lcall
inc
cli
in
pusha
jno
mov
dec
js
mov
icebp
aas
pop
ds
jb
scas
or
stos
les
daa
cmp
pop
cmpsb
sbb
out
push
mov
fcomip
loopne
adcl
pop
pop
dec
popf
push
rclb
testl
mov
out
mov
aam
xor
or
push
sar
push
xor
movsl
notl
repnz
aam
shrl
mov
push
xchg
adc
in
outsl
fs
cmp
xor
pop
cmp
lcall
pop
loopne
fdivrs
test
mov
icebp
xchg
inc
push
rcr
adc
repnz
data16
sbb
clc
jge
jae
xchg
aas
sbb
ret
pop
gs
sub
cltd
dec
dec
outsb
mov
adc
adc
sbb
movsl
cld
out
pop
gs
mov
bound
fdivrl
xchg
pop
or
ljmp
mov
mov
ja
push
adc
mov
lret
shl
inc
iret
push
xor
imul
pop
pushf
push
dec
enter
stc
mov
cmc
or
inc
pop
jne
dec
int3
dec
incb
mov
pop
mov
lahf
fbld
repz
scas
test
pop
shl
int3
aam
aad
fwait
rcr
aad
test
stos
into
mov
adc
xor
ret
sub
sarb
andl
daa
mov
add
fdivrl
xchg
das
cmp
or
fsubrl
xchg
std
aas
lds
stos
pop
xchg
divb
test
xchg
mov
add
data16
pop
daa
cmp
push
mov
adc
jg
out
ja
push
adc
lea
in
xchg
push
xor
or
ds
mov
or
xor
pop
mov
mov
ror
outsb
dec
dec
and
loopne
cmp
testb
and
out
pop
lods
push
je
mov
dec
imul
dec
jmp
and
ret
push
xor
stos
mov
aam
loopne
gs
out
sti
mov
mov
mulb
mov
hlt
test
cmp
inc
xchg
jno
xor
mov
stc
jge
shll
std
ja
jl
xchg
cmp
movsb
sbb
inc
fildl
pop
repnz
dec
cmpsl
sbb
fmull
dec
and
pop
out
jge
pop
in
leave
mov
popf
add
lock
or
outsl
pop
cmp
inc
jmp
loop
rorb
jle
pop
enter
fwait
movsl
fldl
shll
lock
xchg
mov
inc
adc
or
fsubrs
pop
sbb
jno
sub
lcall
inc
addl
imul
jnp
pop
fadd
cmp
repnz
mov
pop
jecxz
jg
imul
adc
icebp
mov
jno
push
mov
aaa
jle
xchg
scas
fwait
in
cltd
enter
fdivrl
jae
mov
stos
fisttps
dec
lcall
pop
lret
out
xchg
pop
bound
jle
dec
mov
cmp
jno
xchg
mov
je
or
inc
stos
dec
xor
inc
pushf
pop
jnp
scas
cmpb
cltd
sub
cmp
repz
ret
ds
rcr
sbb
cmpl
sbb
push
stos
mov
jno
dec
push
repnz
jmp
ja
jo
clc
adc
repnz
or
incb
xchg
mov
fidivrl
inc
sbb
cs
cmpb
mov
loop
in
mov
jmp
loope
lock
push
cmpsl
mov
pop
pop
cwtl
sub
std
mov
inc
dec
lret
lret
xlat
shrb
scas
jecxz
dec
into
in
and
sub
sub
dec
cli
setb
add
out
mov
or
mov
aaa
push
jns
out
inc
outsb
je
cmp
or
cwtl
jecxz
or
unpcklps
aaa
int3
add
xor
jecxz
sbb
jge
push
cmpsb
jg
cmc
mul
xchg
sbb
test
ss
push
push
fwait
or
scas
xchg
into
leave
mov
jbe
push
mov
mov
push
xadd
fdivrl
popf
cwtl
pushl
dec
push
mov
or
inc
enter
sbb
mov
aad
les
xlat
adc
push
pop
das
imul
push
es
scas
jns
pop
push
dec
jp
nop
std
dec
jbe
push
jl
dec
or
mov
repnz
ja
lret
lods
mov
mov
fisttps
pushw
js
gs
nop
ja
dec
and
jns
adc
fiaddl
fisttps
xor
dec
inc
out
or
popa
mov
out
jbe
cli
test
mov
in
outsl
iret
pusha
pusha
ja
popa
mov
jl
sub
adc
cmp
imul
mov
mov
cmp
pop
mov
fwait
mov
sbb
mov
inc
cwtl
in
or
insl
aas
aam
shll
out
add
je
jle
or
dec
bound
fildll
mov
pop
mov
insl
aad
cmp
sub
lret
xor
mov
sarb
mov
push
and
mov
test
imul
movsl
jnp
jo
push
jne
mov
push
mov
imul
sub
inc
inc
cmp
clc
dec
xchg
mov
outsl
pop
pushf
xchg
push
stos
into
subb
int
push
int3
adc
sub
mov
repnz
fisubl
insl
pop
xorl
jns
arpl
pop
mov
push
mov
andb
lcall
cmp
inc
ret
fcoms
xchg
cltd
fimull
into
lock
in
cs
ffreep
cs
xor
shrl
add
test
inc
in
jle
mov
mov
sub
clc
xchg
xchg
and
loope
test
aas
jp
push
popa
jmp
pop
stos
pusha
mov
or
push
loop
repz
pop
cwtl
pop
cs
sbb
and
popa
mov
xchg
inc
ljmp
pop
es
nop
xchg
inc
xor
fsubrs
jb
mov
mov
xchg
test
in
loopne
insl
or
cmp
jmp
subl
cmp
dec
dec
gs
jmp
inc
mov
loop
mov
fsubs
les
jae
lret
nop
inc
scas
jle
xchg
das
jl
idivb
frstor
xchg
add
and
jecxz
dec
dec
ret
jns,pt
push
loop
lea
stc
or
xor
shr
mov
sbb
pop
xor
jp
cli
adc
push
popa
ja
lret
fcomi
mov
mov
xchg
lock
arpl
paddd
mov
fs
js
lret
shrl
jb
jge
mov
push
jnp
xchg
mov
xlat
imul
mov
stos
and
pop
in
aad
xchg
arpl
jnp
push
jmp
or
sbb
mov
xchg
inc
rorb
dec
aad
xchg
sbb
xchg
or
mov
push
or
mov
mov
movsb
mov
pop
loope
cmpsl
inc
lods
inc
inc
and
sbb
or
inc
jno
adc
sbb
add
adc
out
cld
sbb
xchg
shrl
jo
pop
sbb
jecxz
gs
stos
lahf
std
loop
gs
lret
xor
les
es
hlt
shl
fcmovnbe
idiv
out
fistpll
nop
mov
push
mov
and
in
pop
cmp
imul
mov
mov
or
adc
xor
in
int
inc
inc
leave
cmpsl
aad
ds
cmp
adc
scas
insb
in
adc
xchg
or
xchg
incb
dec
cld
fstpt
xchg
shll
in
push
hlt
stos
pusha
sub
xor
divl
dec
sti
stos
or
adc
or
icebp
or
and
mov
push
fmulp
push
int
iret
mov
lock
cmpsb
add
cmpsl
mov
mov
mov
cli
loop
jbe
lea
xchg
fdivs
dec
push
or
jmp
sub
jae
sub
ss
adc
aam
repnz
das
pop
dec
jle
push
mov
mov
data16
sub
mov
jmp
in
sbb
mov
inc
add
lods
std
or
imul
add
dec
out
insl
int3
and
and
and
add
jge
in
addr16
mov
pop
jns
data16
adc
ljmp
inc
adc
mov
mov
mov
inc
aad
imul
mov
dec
sti
push
sti
jge
mov
sub
mov
shlb
mov
js
aaa
adc
add
cmpsl
fmull
shr
scas
cltd
mov
jl
cmp
mov
das
mov
popa
pusha
jne
sub
mov
add
jl
pop
sub
stos
pop
push
push
iret
outsb
enter
movsl
add
testl
rcl
sbb
pop
pusha
pop
jbe
adc
mov
jecxz
xor
lea
int3
xor
push
sahf
cmp
inc
lods
xchg
xchg
sbbb
mov
sbbb
roll
add
pusha
addb
mov
xor
sbb
and
xor
sti
out
cmp
sahf
adc
out
dec
mov
lods
stc
inc
push
push
jae
fdivrs
inc
dec
dec
mov
cld
leave
cmp
mov
adc
je
mov
add
lcall
push
push
loopne
xchg
mov
jae
insl
dec
test
insb
rorl
sub
js
cs
stc
mov
sahf
xchg
xchg
inc
mov
loop
sbb
jo
fld
out
and
sbb
or
pusha
and
popa
sbb
cmpb
mov
jbe
orl
sub
jecxz
mov
push
mov
hlt
pop
mov
xchg
negl
jae
jne
into
fdivrs
push
popf
pushf
adc
xor
ficomps
negl
popf
sbb
pop
sahf
dec
hlt
mov
repz
jno
setge
hlt
test
out
jg
sbb
lock
sub
insl
sbb
cmp
xchg
rcll
dec
pop
icebp
hlt
imul
mov
ss
insl
mov
xchg
mov
pop
mov
inc
enter
divl
adcb
test
nop
add
or
cltd
popa
es
cwtl
xchg
sti
cmp
mov
mov
jecxz
mov
sub
add
add
daa
and
std
daa
loopne
cmpsb
cmp
or
sahf
xor
adc
aad
in
mov
cltd
mov
ret
cmp
lahf
inc
dec
clc
pop
push
xchg
aaa
mov
pop
and
xor
jp
sbb
movsb
xchg
pop
add
fs
add
mull
pop
lret
push
imul
test
cld
scas
loopne
mov
lahf
inc
adc
add
testb
sbb
push
cmp
mull
dec
mov
cmp
xor
and
das
ljmp
sahf
jge
jns
or
idivb
test
xor
adc
push
mov
cmpps
cmp
jge
push
ret
mov
add
aas
repz
jns
dec
out
clc
jns
test
adc
xchg
hlt
xor
shr
pop
jecxz
pop
lock
andl
add
jg
arpl
xchg
add
sbb
lock
or
mov
sbb
push
mov
cmp
aam
xchg
ss
scas
sub
xchg
insl
leave
les
ret
test
mov
inc
push
call
jbe
adc
mov
jmp
lods
xor
in
out
mov
inc
rcrb
xlat
xchg
enter
xchg
loop
and
call
mov
xorb
pop
push
sarl
test
fidivs
push
inc
test
shll
aaa
wbinvd
jns
outsb
fldl
inc
jbe
mov
inc
repz
out
ja
fiadds
or
add
pop
sub
jge
lcall
pop
xor
insl
jmp
jns
push
inc
xchg
push
in
cmc
cwtl
add
dec
outsl
std
outsb
mov
mov
lock
jo
std
mov
dec
enter
jl
out
hlt
cmpsl
add
cmpsb
call
cmp
adc
mov
mov
fidivrs
adc
or
lahf
lods
push
ljmp
mov
and
push
daa
xor
jne
mov
mov
xor
decl
mov
push
out
pop
ret
push
ret
mov
pop
pop
jns
xor
scas
fsubrl
sub
cld
mov
repz
out
push
mov
dec
sbb
iret
mov
aaa
mov
fadds
inc
popf
mov
mov
inc
lods
pop
lcall
int3
jmp
dec
ret
add
sub
jmp
xchg
dec
mov
mov
push
mov
adcl
pop
add
jbe
jae
xlat
or
sbb
sub
mov
mov
insl
repnz
inc
inc
mov
orb
push
sbbb
dec
jmp
pop
psraw
pop
mov
dec
push
inc
andl
js
adc
mov
into
sub
jmp
inc
xor
xor
dec
ds
mov
cmpsl
repz
jo
and
gs
jno
fwait
add
or
test
dec
mov
dec
fiaddl
bound
ljmp
out
leave
aaa
cli
add
jns
jnp
pop
pushf
jecxz
or
mov
divps
and
adc
clc
jnp
push
call
mov
xor
mov
jge
push
or
lea
cltd
adcb
adc
xchg
out
pop
pop
aam
push
cmpsb
xchg
icebp
sub
cmp
mov
sar
mov
xchg
cmc
imul
out
mov
aaa
mov
pop
ljmp
movsl
push
sub
jo
pop
inc
jle
insb
icebp
xchg
adc
mov
rcll
fwait
push
fisubrl
push
lcall
dec
mov
int3
fmulp
push
insb
ja
jl
popf
inc
call
shl
loop
lcall
dec
scas
aas
cmp
mov
mov
pop
adc
adc
pushf
xchg
repnz
xchg
fildll
je
xchg
inc
push
sbb
jae
iret
pop
rorb
pop
push
in
xor
push
stos
push
push
xchg
and
lret
and
jl
add
dec
ret
aad
mov
imul
jo
aas
repnz
xchg
pop
pusha
pop
adc
lods
cmp
lcall
ficoml
sar
sub
cmp
sub
xchg
dec
sar
or
mov
sbb
xor
in
or
fdivs
sbb
mov
mov
fisttps
xchg
add
hlt
and
or
jno
ss
loopne
cltd
movsb
fistpll
xor
mov
pushf
pop
sub
loope
sbb
fildl
shr
pop
xchg
enter
push
xor
jmp
xchg
in
push
mov
sub
test
jns
jle
lret
outsb
loopne
jns
pop
sbb
push
pop
cwtl
inc
std
loop
test
cmp
loope
adc
xor
xlat
rcrl
adcb
jbe
roll
xor
rolb
cmp
push
mov
cmp
test
sub
jmp
cmpsb
dec
jge
push
xor
clc
pop
xchg
sbb
cmp
lock
sub
jo
setns
repz
or
in
jno
sub
decb
fimuls
in
xchg
cmp
js
mov
adc
jle
shlb
int3
gs
into
ss
test
mov
adc
mov
fisttps
adc
mov
xchg
ret
and
push
aas
xor
dec
lock
or
xchg
pop
movsb
fadds
inc
test
xlat
pusha
jns
mov
stos
mov
addl
cmp
nop
push
jae
inc
inc
out
push
pop
int
or
xchg
xchg
leave
fs
jecxz
and
imul
movsb
enter
into
std
hlt
fiadds
leave
in
push
sub
push
mov
nop
loop
xor
je
mov
stos
xchg
loopne
cmp
push
in
pop
xchg
or
mov
push
loopne
jg
in
mov
bound
outsb
mov
cmp
cmc
xtest
sbbl
jg
xchg
xchg
xchg
pop
push
arpl
je
mov
repz
test
and
cmp
xchg
xor
pop
fidivl
add
adc
pop
movsb
add
and
movsl
stos
cmp
or
push
lods
cli
dec
xchg
mov
test
sub
dec
cmpl
popa
fcompl
dec
jp
mov
xchg
enter
xchg
pop
pop
push
xor
push
mov
jle
out
idivl
sbb
ss
sub
outsb
fsubl
xchg
inc
pop
test
pop
scas
sub
sbb
lret
or
mov
pop
imul
pop
hlt
scas
jnp
add
lahf
mov
cmp
test
out
ficomps
pop
jmp
pushf
scas
cmp
das
test
sbb
neg
cmp
pushf
cli
aas
shll
das
movsl
fistps
lods
inc
sarb
pop
jae
jbe
jp
mov
add
push
cmc
gs
fbld
fwait
xchg
aam
sub
loope
fidivl
mov
iret
sub
pop
xchg
pusha
xchg
mov
push
adc
pop
mov
adc
sbb
pop
out
loope
aad
js
stos
loopne
out
and
insb
pop
stos
paddw
loop
popa
aad
lret
xchg
mov
jb
addr16
imul
nop
sub
pop
stos
jp
lods
sbb
lea
inc
or
dec
inc
lea
mov
cld
mov
std
leave
fimuls
sub
les
test
adc
call
cmp
adcb
lret
pop
les
sub
and
mov
xchg
cli
mov
sub
jmp
inc
and
sarl
not
push
and
xorl
and
lea
dec
movsb
cmp
lahf
outsb
cmp
inc
sbb
sub
lock
shrl
or
arpl
mov
test
jno
sti
lret
sub
and
xchg
ret
cmp
adc
movsl
pop
lea
cwtl
daa
inc
inc
addb
adc
outsb
inc
icebp
xchg
aaa
out
jg
shrl
jns
xorb
cltd
fidivl
inc
push
outsb
jnp
call
mov
or
push
jp
push
jg
je
mov
rcrb
add
mov
fistpll
dec
or
jle
popf
insb
in
push
adc
lods
jle
pop
sbb
push
mov
fs
mov
xlat
sbb
mov
lea
test
clc
cmp
sub
cwtl
pop
mov
mov
mov
jp
inc
add
jno
xchg
mov
mov
cmc
add
jecxz
push
mov
cmp
inc
repz
mov
gs
pop
cmp
jmp
testl
fchs
in
xchg
jle
loop
mov
xor
pop
pop
mov
daa
pop
adc
in
in
dec
in
daa
inc
lahf
testb
pop
adc
out
inc
cmc
jnp
cmp
js
push
adc
sbb
dec
fstp
and
xchg
jo
stos
or
push
mov
leave
in
mov
push
mov
cmp
int3
aaa
mov
mov
mov
stos
mov
jmp
xor
pop
inc
aad
popa
movsl
mov
adc
mov
mov
stos
sbb
mov
cmp
das
sti
ja
cli
jg
sbb
int3
push
movsl
stc
adc
xchg
dec
xchg
mov
xor
iret
mov
loopne
std
sbb
mov
push
ret
fidivrs
fwait
insb
outsb
add
add
push
hlt
in
inc
jns
push
cmc
jb
arpl
push
xor
sub
sarb
mov
inc
jle
ds
movsl
push
ljmp
inc
mov
add
push
cld
cmp
mov
ficomps
bound
scas
hlt
mov
stc
jl
insb
mov
and
scas
cmp
in
in
pushf
fnstsw
insb
sbb
sbb
mov
insl
xorl
scas
pop
pop
cmp
test
rcll
cmpsl
push
sbb
pop
or
jmp
loop
lods
popa
inc
adc
xchg
outsb
in
in
cld
in
sbbl
int3
lods
stc
pop
xchg
xlat
mov
int
call
adc
shrl
rcl
ljmp
inc
adc
adc
fs
ficomps
cwtl
js
dec
xor
adc
std
std
sub
inc
pop
cmp
lock
mov
adc
jecxz
and
ja
dec
sbb
imul
inc
sbb
mov
push
jle
dec
mov
loope
scas
mov
outsb
ret
stc
fcoml
leave
shlb
jge
push
mov
decb
out
sbbb
or
mov
nop
jp
into
and
fdivrs
inc
xchg
out
mov
cltd
sub
and
ljmp
in
aam
pop
test
cmc
test
jo
fwait
sub
mov
cld
enter
ret
dec
out
sub
push
cmpsb
and
xchg
pop
in
cmpsb
jns
aas
push
xor
mov
and
ret
sbb
mov
hlt
lods
cwtl
xor
lods
add
ficompl
in
sbb
jbe
push
into
bound
pop
lock
pop
xlat
pushl
pop
mov
data16
hlt
fsts
out
sbb
jg
push
and
add
lahf
inc
imul
jns
adc
xchg
sarl
test
or
dec
dec
cltd
or
insl
stc
outsb
jns
jle
sub
mov
cmp
sahf
xchg
cmpb
pop
inc
sub
jno
es
in
jmp
pusha
fadds
inc
mov
enter
inc
arpl
into
adc
mov
or
or
enter
pop
mov
pusha
pop
cmp
clc
xchg
movsb
iret
push
daa
add
pop
fdiv
mov
test
pop
adc
sbb
mov
les
cwtl
hlt
imul
lahf
andb
dec
dec
lods
les
fsubrs
enter
push
jmp
mov
rol
and
sbb
push
subl
scas
or
mov
nop
mov
add
jne
push
xchg
loope
mov
nop
sub
jmp
lock
ficoms
dec
adcl
popa
mov
stc
xchg
loopne
mov
cmp
mov
fiaddl
shll
inc
push
sub
out
push
inc
push
pushf
rol
sbb
mov
mov
and
jg
in
cmp
addr16
cmp
adc
lock
int
gs
cmp
inc
and
fwait
pop
or
aaa
fcom
rdtsc
cld
mov
pop
scas
cmp
outsl
push
ja
or
add
xlat
imul
mov
xchg
cld
shll
xor
pop
pop
or
movsl
jp
dec
pop
lret
jnp
mov
aam
stc
adc
mov
push
ret
cmp
adc
movsb
ds
inc
pop
and
dec
sbb
adc
sbb
out
add
push
fstp
add
jns
cmp
add
push
sahf
xchg
xor
cmp
ds
xchg
sub
rcl
call
loope
test
out
or
ret
test
xor
xchg
jg
xor
ljmp
test
pusha
or
sbb
out
jle
fwait
xchg
shll
mul
sub
lcall
jecxz
and
testb
xchg
mov
arpl
movsl
aam
jb
lock
cmpsl
seta
mov
and
std
jno
xchg
inc
pushf
jmp
pop
loop
lahf
xor
out
clc
loopne
and
xchg
jecxz
outsl
mov
add
std
mov
pusha
xor
aas
mov
loope
inc
ds
mov
cmp
inc
dec
daa
lods
jp
stos
cmp
rorb
adc
jp
arpl
jl
insl
add
fbld
loopne
or
mov
jno
imull
movsb
repnz
adc
jb
jo
stos
lds
lock
loope
lret
pop
mov
enter
push
jne
xchg
fsubs
out
mov
dec
jns
stos
pop
lods
movsb
mov
in
push
dec
bnd
cmp
or
and
xchg
xchg
in
xchg
ss
push
lock
popa
xor
leave
inc
mov
pop
mov
ret
aaa
or
add
ja
outsb
sbb
aad
xchg
iret
inc
out
cmp
shrl
and
xor
mov
sub
mov
std
out
dec
mov
insb
xchg
dec
iret
imul
je
popa
adc
sahf
mov
push
mov
push
pop
ljmp
adc
gs
std
jp
mov
mov
cwtl
add
in
and
aas
jmp
data16
xor
repz
dec
xchg
inc
repz
add
mov
or
dec
cmp
mov
push
mov
movsb
add
jnp
push
jle
pop
loop
inc
sbb
repz
jecxz
xchg
fs
cmpsl
fsubrp
test
pop
fists
mov
sub
mov
je
and
je
shlb
nop
shl
cmp
in
or
push
mov
xchg
xor
daa
dec
cmc
mov
xor
mov
pop
inc
mov
pop
bound
xchg
mov
popa
jae
pop
cmpsb
repz
out
jne
mov
repnz
jecxz
into
jns
loop
fdivrl
add
int
insb
pop
ds
jle
mov
xorb
and
fcomps
pop
sbb
sub
cmp
out
xor
nop
cltd
xchg
dec
push
and
xor
mov
sbbb
and
xchg
mov
mov
pop
mov
testl
enter
mov
inc
shlb
cli
in
push
sub
hlt
les
js
mov
add
xchg
rclb
and
or
dec
je
orb
stos
xlat
scas
xchg
mov
add
aam
add
outsl
inc
mov
sahf
adc
mov
xchg
cld
mov
jae
fisubrs
mov
cld
inc
adc
jae
es
std
jae
and
outsb
mov
inc
adc
xlat
push
stc
pop
shll
repz
inc
jp
ja
dec
pop
push
pop
inc
dec
mov
fidivrl
adc
push
lret
cmp
pusha
pmaxsw
lahf
xchg
mov
movsb
pop
test
cmc
pop
or
bound
mov
sub
adc
add
ffree
lods
or
orl
roll
test
push
es
mov
fimull
push
ljmp
sbb
cmp
stos
std
adc
push
stos
cmp
test
gs
fcomps
stos
je
mov
pop
and
addr16
cmpl
inc
fs
adc
je
mov
jmp
jecxz
leave
aas
mov
dec
or
mov
sahf
clc
add
xchg
xlat
mov
xchg
sbb
sbb
or
pop
mov
xor
or
xchg
mov
pop
mov
hlt
mov
lcall
loopne
loopne
mov
jmp
xor
stc
gs
test
pop
mov
subl
sub
aam
inc
dec
or
mov
mov
sbb
ret
add
ljmp
popl
mov
jbe
pushf
in
cld
push
push
jl
inc
ja
xchg
push
dec
stos
or
sub
outsb
push
push
adc
jno
enter
movb
or
jecxz
pop
pop
fucom
mov
scas
fstps
or
mov
mov
jmp
jecxz
pop
adc
loop
lret
jmp
add
in
push
inc
xchg
lahf
push
mov
jnp
cwtl
xchg
sahf
punpckhdq
in
push
pop
add
movsb
imul
sbb
sbb
insb
les
inc
iret
dec
mov
fistps
cs
or
adcb
and
mov
fmulp
or
mov
aam
mov
xor
je
mov
lods
popl
outsl
push
imul
arpl
pop
idivb
push
and
pusha
les
inc
and
inc
insb
in
adc
jne
int
jp
fwait
ds
repnz
insb
mov
clc
out
dec
scas
movsl
push
je
js,pn
aad
jns
test
inc
dec
xor
mov
cmpl
dec
out
loope
hlt
xorl
ljmp
movsl
xlat
mov
adc
jle
and
mov
out
movsl
aas
fisttpll
push
xchg
sahf
aas
sbb
xor
fs
rcll
rorl
arpl
jne
cmp
mov
std
fimuls
xor
loopne
mov
aas
cmp
shll
xor
add
leave
dec
roll
fwait
or
fwait
or
lock
mov
sti
fwait
int3
jle
outsl
std
addr16
push
shl
mov
mov
sbb
stc
jp
xchg
lret
pop
andl
lret
mov
hlt
dec
nop
jne
clc
shl
outsl
scas
push
and
ss
fldl
int
and
daa
sti
pinsrw
fwait
cmp
repnz
cmp
jmp
lods
mov
stos
or
scas
out
je
jb
sbbl
mov
lods
fwait
adc
pop
les
mov
sbb
test
mov
addr16
nop
mov
mov
or
adc
push
repz
push
and
adc
setge
jb
mov
push
jbe
fsubl
lcall
mov
add
or
dec
sbb
mov
faddp
cmp
leave
and
dec
push
inc
decl
test
push
and
cs
xor
cmpl
push
pop
shlb
push
dec
sub
notl
loope
lods
and
mov
ret
cld
ljmp
subb
or
pusha
inc
adc
pusha
lcall
fstl
hlt
add
leave
push
and
push
pop
arpl
lods
das
adcl
cli
dec
mov
and
pop
and
cmp
cmpsb
xchg
xchg
fldt
mov
in
mov
mov
js
nop
and
mov
xchg
pop
mov
mov
push
sbb
aas
dec
inc
std
mov
pop
data16
bound
mov
loopne
jge
mov
push
cltd
movsb
nop
ljmp
mov
shr
std
jns
inc
fistpll
sqrtps
out
pop
pop
xchg
stos
mov
and
adc
dec
shrl
mov
xor
cmp
std
scas
push
cmpsl
mov
cmp
adc
xchg
mov
insl
fimuls
and
mov
xor
rcrl
repnz
mov
adc
pop
xor
sub
shll
lahf
mov
add
dec
mov
adc
push
paddw
inc
mov
daa
mov
and
sub
arpl
mov
aas
sbbb
adc
cs
pop
add
jb
call
pusha
mov
rorb
roll
sub
cs
aaa
dec
popf
push
adc
andb
jbe
pop
pop
shlb
out
xchg
out
adc
loope
lcall
xor
and
ljmp
in
jle
iret
lret
ret
out
out
jnp
push
into
out
fs
fdivs
mov
cltd
pop
mov
fdivs
xchg
pop
xor
mov
pop
jns
push
add
xchg
jo
test
inc
inc
inc
movsl
push
jo,pt
add
rol
pop
outsb
fbstp
xor
jp
sbb
xchg
lahf
sahf
stos
mov
sub
pop
leave
and
pusha
xor
dec
or
push
inc
sbb
jbe
daa
rcr
push
ds
inc
popa
imul
push
pop
push
loop
mov
les
mov
out
rclb
sbbl
filds
mov
hlt
mov
mov
out
lret
jmp
xchg
push
lret
shlb
jl
and
push
xlat
lods
cmc
push
shr
mov
cs
ret
lods
cmp
and
scas
andb
mov
daa
lcall
call
jmp
and
push
arpl
mov
loopne
inc
setl
xchg
std
add
in
pop
and
pop
sbb
shlb
faddl
push
mov
out
xchg
pop
lahf
mov
imul
cmp
stos
and
nop
sahf
xlat
testb
fdivl
and
scas
insl
pushf
outsb
cwtl
js
add
adc
sbb
dec
fsts
mov
aaa
mov
push
xlat
jge
stc
movb
sbb
sbb
arpl
shl
lahf
push
cli
call
pop
push
fcmove
cmp
hlt
int3
jecxz
shl
outsb
pusha
lcall
dec
daa
insb
add
fwait
add
jns
stos
ds
sbb
cmp
pop
arpl
jp
sub
push
test
andl
mov
insb
call
mov
push
cmp
cmc
cmp
pop
inc
push
adcl
cmp
mov
jle
push
aam
push
pop
out
adc
nop
out
das
jns
lcall
stc
push
jns
mov
adc
dec
push
dec
out
xchg
jp
mov
es
sbb
sahf
push
sahf
ret
inc
je
movsl
inc
jbe
in
pop
sbb
in
cmpsl
pushf
mov
lcall
mov
adc
paddusw
ret
inc
sbb
push
pop
push
dec
gs
mov
shrb
fcmovnb
pushf
push
and
orb
xor
repz
and
dec
call
rorb
push
lds
aad
out
mov
inc
arpl
inc
inc
dec
stc
fldt
dec
xchg
shll
sbbl
xchg
mov
xor
dec
push
adc
push
aad
jecxz
xchg
jge
test
shrb
mov
inc
icebp
xchg
pusha
inc
pop
jmp
push
in
sbb
lahf
jbe
loopne
push
xchg
test
mov
cmp
push
push
xor
dec
or
jo
stos
cmp
dec
enter
hlt
push
lds
repz
pop
outsl
pop
adc
add
or
lea
fildll
addr16
jnp
mull
lret
orl
pop
loop
mov
sbb
sub
jbe
test
sahf
sub
and
add
xchg
cmp
or
das
mov
cmc
xor
mov
popf
lret
mov
inc
out
lea
popa
aam
xor
mov
scas
xchg
int3
addr16
rorb
and
shll
mov
ret
adc
enter
fstpt
mov
sub
cmp
rcrl
push
mov
mov
adc
cmp
sti
leave
pop
inc
hlt
push
sahf
les
ss
in
push
dec
fsubrp
nop
les
clc
fwait
aas
subb
hlt
daa
xchg
pop
or
je
jns
jg
psubb
adc
in
pop
data16
dec
repnz
jne
and
jb
jp
out
test
std
or
ja
imul
mov
aam
divb
push
dec
pop
pop
xor
xchg
adc
jne
cmp
pop
push
in
xchg
mov
in
test
sub
inc
pop
mov
cs
mov
mov
dec
jne
inc
mov
out
sarl
dec
and
inc
test
push
adc
mov
sub
repz
mov
lret
lret
mov
aas
fdivs
mov
xchg
shll
inc
cld
mov
cmp
xchg
orb
dec
xchg
addr16
mov
das
jmp
sub
adc
test
jns
shrl
mov
pusha
bound
test
aam
pop
add
mov
mov
gs
mov
pop
inc
movsb
push
imul
dec
data16
inc
jo
int
xchg
mov
or
sbb
push
in
fdivs
push
addr16
dec
test
sbb
into
ret
out
sub
test
xor
and
fwait
xor
shll
loopne
pusha
insb
lcall
loopne
pop
adc
lds
rorl
fmull
cmpl
rcll
cltd
fcmove
fisubrl
mov
pop
sbb
push
test
push
imul
leave
aas
mov
repnz
mov
stc
fldt
aas
add
stc
fstpl
mov
adc
inc
dec
adc
mov
cmp
mov
sbb
inc
cmpsb
scas
adc
jne
out
inc
dec
pop
adcb
bswap
popf
dec
lcall
jo
mov
fs
addr16
pop
push
movsl
sub
push
pop
add
mov
or
fdiv
sti
fwait
sbb
or
fidivs
mov
jmp
or
add
xchg
rcrl
mov
inc
loop
sub
sub
dec
stos
add
mov
adc
inc
pushf
arpl
cmp
cld
jns
push
sbb
mov
leave
mov
daa
or
xor
arpl
dec
lahf
sbb
push
nop
mov
mov
mov
lods
sbb
in
dec
divb
enter
out
sbb
mov
mov
pop
or
sub
sub
or
je
or
lea
jl
cs
xlat
adc
out
fsts
lods
movsb
xor
xor
push
jmp
jmp
repnz
push
mov
adc
pop
dec
sub
leave
xchg
mov
ret
into
sahf
mov
push
or
daa
lock
shrb
shlb
frstor
hlt
push
imul
or
movsl
sbb
sub
in
pushf
mov
sbb
mov
push
insb
jns
sarl
dec
inc
push
mov
cmc
or
adc
aaa
lds
ljmp
mov
lods
and
push
call
cmp
aas
ljmp
mov
iret
adc
cmpb
andl
jl
sbb
mov
js
insb
mov
cmp
or
stc
testb
in
movsb
aad
loopne
sub
test
repz
pushf
mov
inc
arpl
add
repz
push
vpackuswb
int3
in
rcl
gs
call
jg
push
mov
repnz
cmpsb
or
add
aas
dec
sbb
out
dec
mov
jecxz
jae
xor
mov
adc
xlat
xchg
cmp
sbb
into
mov
or
sub
adc
mov
jne
mov
mov
repz
sub
push
push
adc
out
clc
sbb
mov
dec
les
push
in
add
sbb
push
stos
push
insb
add
pop
pushl
outsl
pcmpeqw
add
imul
xor
sbb
push
enter
das
lea
ror
push
xchg
mov
xchg
add
loope
mov
xor
dec
ljmp
mov
fmul
cmp
outsb
test
es
leave
and
hlt
roll
jmp
sub
call
shrl
loop
sbb
push
add
pop
xchg
mov
jne
pand
mov
aam
mov
popf
repnz
or
bound
jle
dec
cmp
call
mov
sub
mov
lea
mov
lret
xchg
xchg
sarb
shl
fistpl
dec
and
pop
xor
insl
inc
icebp
jl
subl
sbb
jo
orl
sub
lods
mov
xor
dec
test
stc
hlt
cld
mov
dec
adc
faddl
xchg
lahf
sbb
push
fwait
bound
int
sbb
loope
into
fdivrs
addr16
mov
int3
jecxz
add
adc
movb
scas
inc
dec
popa
das
xlat
and
scas
inc
add
mov
push
fwait
in
cld
jg
xor
or
into
jmp
push
in
mov
clc
xchg
out
aam
push
aad
adc
lahf
mov
push
ljmp
cmp
shrb
push
hlt
leave
lock
xor
push
pushw
mov
ret
jbe
mov
adc
shlb
stos
or
mov
sbbb
mov
iret
fwait
cwtl
fcompl
iret
lds
sbb
das
lret
sub
in
pop
inc
sbb
sub
mov
or
call
pop
xor
int3
rol
jl
out
jecxz
inc
in
cmp
push
cmc
and
enter
fwait
cmp
adc
mov
movsb
push
out
fsubrs
bound
sbb
inc
xor
ret
subl
cmp
xchg
loopne
dec
in
std
pop
arpl
shrb
out
int
arpl
adc
jge
int
add
xchg
outsl
pushf
add
inc
xchg
ficompl
or
dec
lods
fwait
jns
jp
in
xor
scas
xor
inc
inc
cli
sbb
popl
jns
insl
sub
in
cmp
xchg
pop
jg
roll
inc
and
push
mov
adc
xchg
ds
and
fcompl
mov
push
and
mov
fdivrl
sbb
xchg
cmpsl
add
lds
dec
int3
andb
mov
pushf
hlt
scas
cmp
push
js
push
cmc
push
mov
aas
push
dec
push
fildll
inc
repnz
mov
ja
insl
inc
cmp
aaa
cmpsl
inc
ljmp
rclb
std
xchg
mov
rcll
xchg
mov
xor
and
in
push
nop
lahf
add
rcrb
dec
mov
sbb
pop
fildll
sbb
xchg
sbb
cwtl
test
imul
notb
xchg
pop
push
stos
sbb
add
xor
loop
jle
lahf
mov
fwait
and
iret
ljmp
add
lods
lds
cmc
push
dec
scas
sub
dec
mov
out
inc
ja
idivb
decb
shrb
or
les
std
mov
addr16
inc
mov
fidivrs
sbb
mov
pop
out
and
fnstcw
mov
sbb
les
jns
push
out
mov
jns
inc
jo
cmp
cmp
mov
mov
addr16
data16
pop
mov
sub
add
dec
loopne
mov
js
sub
lret
cmpsb
lcall
pop
repz
stc
dec
in
mov
rcl
adc
mov
out
cmpsb
dec
xchg
add
mov
cmp
jp
lds
sub
push
xchg
test
mov
imull
xchg
mov
xchg
add
xchg
cwtl
loop
cmpsl
push
fwait
addr16
sub
out
add
mov
jb
adc
aam
sub
ret
pop
mov
fmuls
pop
adc
push
roll
adcl
inc
sbb
sub
add
fnstsw
cmp
inc
hlt
enter
mov
fs
or
mov
xor
es
sub
in
push
ljmp
push
xchg
fwait
inc
inc
xchg
sbb
pop
sbb
pop
imul
pop
inc
jo
push
ss
lds
lock
sahf
lret
pop
ja
jecxz
insl
push
fdivp
push
pop
dec
xorb
out
pop
inc
mov
push
sahf
inc
add
mov
dec
mov
inc
aaa
cmp
lds
shrl
popa
sbbb
rcll
push
dec
mov
stos
std
test
mov
mov
out
xchg
fbstp
xor
xchg
out
cmpsb
and
ja
mov
mov
mov
xchg
add
mov
and
jmp
imul
sbb
lds
out
fsubrl
mov
mov
lea
aad
in
aaa
xchg
cmpsb
repz
pop
aaa
aam
cmpsb
outsb
cltd
nop
xor
xor
insb
lods
lret
jb
arpl
mov
xor
rorl
lods
mov
repz
dec
pop
adc
sbb
outsl
aad
sbb
pop
mov
sysenter
pop
mov
dec
jecxz
int
vaddsubpd
test
pop
or
je
mov
nop
adc
fidivrl
leave
push
and
cmpsl
rclb
dec
ret
and
dec
mov
lods
out
or
sub
mov
xor
sub
iret
loop
ffreep
and
inc
lods
pinsrw
ja
sbb
xchg
or
xchg
pop
pop
push
push
cmc
jne
icebp
test
jmp
aaa
and
stc
xchg
into
decb
nop
mov
adc
mov
imul
xchg
test
shrl
or
stos
pop
xchg
sbb
mov
pusha
cmc
pushf
scas
cmp
pop
fsubr
mov
fstps
mov
xchg
mov
cmp
pop
add
hlt
and
sti
cmp
in
jmp
sti
mov
cwtl
test
imul
leave
pop
mov
sbb
cmp
push
fld
and
xchg
inc
mov
insb
xor
pop
or
decb
leave
in
inc
dec
adc
add
adc
dec
imul
fcomip
es
mov
das
jns
aaa
mov
inc
sahf
push
adc
mov
cmp
jg
cmp
int3
adc
popf
negl
add
mov
popa
and
insl
adc
cmp
clc
fs
cld
out
out
imulb
push
int3
rol
nop
cmp
ret
sub
test
sub
dec
out
push
pop
addr16
lds
add
cwtl
stos
xchg
inc
add
jmp
add
lods
rorl
cmp
rcll
outsb
or
inc
xor
sbb
dec
mov
stos
sbb
mov
ror
nop
mov
int3
loopne
and
pop
jb
jno
enter
or
out
in
jecxz
mov
ds
mov
jne
dec
cwtl
clc
pop
inc
jmp
sahf
sahf
or
add
adc
mov
lods
jnp
adc
lock
cmpb
sub
cld
adc
sub
push
inc
pop
ret
cmpsb
insb
orb
pop
xchg
push
outsl
push
aam
pusha
scas
xchg
mov
sahf
dec
incb
dec
pop
into
and
sbb
rcrl
sub
fldenv
or
mov
jae
cwtl
das
push
inc
push
dec
or
inc
add
sbb
int3
cwtl
or
dec
cmp
jno
test
icebp
push
lods
inc
xor
mov
or
mov
add
and
leave
add
out
push
xlat
mov
shll
nop
imul
orl
mov
xchg
push
sahf
inc
jns
xor
pop
iret
add
cmp
jmp
jecxz
cmpsl
test
jmp
jge
xor
arpl
xor
mov
jb
dec
jne
push
adc
dec
shll
dec
inc
jp
push
sbb
test
sti
fbld
cmp
ljmp
mov
popf
int
scas
roll
sub
and
dec
inc
add
clc
cltd
pop
push
imul
push
outsl
mov
and
loopne
cmpsb
test
bound
mov
inc
arpl
std
push
pop
cmp
hlt
adcb
sub
test
cmp
jns
mov
dec
push
in
dec
movsl
inc
inc
pop
imul
les
mov
repz
aad
or
loop
inc
sub
sub
aas
sarl
push
mov
aaa
movsl
sarb
mov
xchg
and
lret
push
mov
fildll
not
dec
stos
or
ja
push
inc
lods
xor
mov
pop
mov
ret
inc
add
jecxz
xor
xchg
dec
cwtl
dec
je
lret
jbe
sub
add
jg
popf
and
jno
xor
push
mov
stc
jb
gs
mov
cmp
add
add
sbb
pop
fdivl
mov
fidivl
xchg
mov
mov
mov
addr16
test
lcall
jge
fwait
cld
adc
test
push
push
inc
lods
mov
pop
rcrb
jg
lret
call
xlat
js
sti
jnp
es
dec
jne
out
push
test
mov
int
leave
out
push
dec
sub
jecxz
or
ds
sbbl
add
lret
pusha
adc
xor
je
or
ret
dec
aas
in
nop
dec
les
sbb
mov
cmpsb
adc
jl
pop
adc
xchg
test
dec
xchg
xchg
sub
mov
cmp
rolb
scas
aas
lret
cmp
out
add
ja
mov
fs
iret
sbb
jne
aas
mov
lahf
xor
popf
int
inc
test
das
das
mov
sub
imulb
xchg
inc
insb
sub
cs
movsb
pop
sbb
leave
mov
loope
std
dec
sub
notb
cmpsl
pop
add
sub
mov
mov
clc
xor
jecxz
lcall
das
test
lret
ds
inc
movsl
and
mov
addb
lock
sub
outsl
nop
mov
leave
xor
ja
dec
pop
divl
mov
xor
nop
lcall
das
movsl
and
cltd
mov
push
and
es
test
lock
loopne
adc
ret
or
pop
aas
out
lret
fs
mov
imul
xor
or
fildll
mov
mov
popw
or
jp
repnz
cmp
mov
mov
out
je
sahf
cmp
xor
push
popa
and
xlat
adc
scas
push
movd
fldenv
inc
mov
lea
add
mov
das
jnp
pop
push
inc
leave
jge
inc
xchg
icebp
or
shl
imul
fists
je
test
aad
testb
test
cmp
mov
ljmp
dec
int
or
push
aas
es
cmp
jl
aad
adc
and
daa
jg
mov
sbb
outsb
in
lock
fistps
dec
cmp
mov
pop
cmpsb
rolb
jae
or
xor
mov
mov
aaa
xchg
pusha
repz
pop
push
pop
xor
sub
cmp
mov
sbb
int3
jns
negl
fisubrl
inc
lods
cmc
lret
push
jne
sti
or
mov
lods
shr
popa
adc
or
mov
mov
sbb
push
cmpsb
sub
bound
rol
call
mov
sub
pop
push
sub
cwtl
and
mov
stos
xor
aaa
lock
out
ret
cmp
leave
je
les
mov
mov
enter
negb
sbb
and
repnz
shr
push
dec
xor
repnz
test
pop
lods
pop
loop
add
leave
mov
repnz
pop
test
cmp
lods
mov
icebp
out
mov
cwtl
insl
jo
lock
dec
pop
inc
cmc
pop
jg
jo
inc
rclb
sub
andb
sbb
popa
cmp
jge
imul
xchg
lods
es
mov
sub
rorb
inc
clc
cmp
andb
sub
loope
icebp
js
jecxz
xor
fnstenv
aad
add
jmp
cwtl
outsl
jg
cltd
sti
sub
fistps
mov
pop
mov
or
sbb
test
outsl
inc
mov
insb
addl
jl
fcompl
hlt
popa
mov
or
pushf
movl
xchg
iret
or
jne
shlb
pop
push
push
pushf
in
pop
cmc
mov
mov
stos
push
cltd
out
push
mov
dec
sbb
push
pop
or
je
jmpw
addr16
fcmove
mov
xchg
or
xchg
in
ljmp
rcrb
pop
loope
test
pop
mov
in
movsb
sub
pushf
push
xor
jno
iret
je
jo
cmc
jne
and
inc
pop
jno
daa
cwtl
cmp
popa
je
xchg
mov
imul
jp
sbbb
jg
sarb
faddp
stos
lock
stos
pop
sbb
cmpsl
adc
dec
xor
sbb
ds
into
rcll
imul
sti
mov
loope
mov
cmp
mov
adc
jns
cmpsl
fstpt
or
pop
pop
cld
dec
cmp
fwait
mov
mov
in
pop
mov
mov
push
adc
pop
cli
dec
xchg
fisubs
repnz
pushf
pop
pop
nop
cwtl
sub
mov
popa
or
outsl
inc
ret
imulb
jp
loope
fcompl
popf
je
loop
add
and
es
inc
dec
dec
out
pop
not
das
pop
addr16
sub
addb
insb
ret
add
xchg
inc
int3
and
jne
jae
lret
cmpsl
dec
sub
xor
sbb
ds
adc
push
sub
adc
pusha
data16
xchg
mov
xchg
jp
mov
insb
mov
or
inc
mov
dec
pop
mov
push
call
aam
aad
mov
pop
cld
jecxz
sub
xchg
out
in
hlt
cmp
lret
sbb
orb
push
sub
inc
dec
or
mov
push
xor
fistl
ret
andb
shlb
subb
push
xlat
sub
lock
jb
mov
ss
dec
push
aam
push
sti
mov
mov
icebp
jl
mov
hlt
inc
xor
std
je
adc
fcmovbe
cmp
sub
mov
lret
js
cmp
cwtl
and
mov
movsl
das
cmpb
adc
add
test
mov
stos
repnz
pop
out
push
loop
jle
movb
clc
les
dec
mov
push
repnz
cmp
xor
cmp
pop
lock
mov
inc
xchg
arpl
mov
and
sbb
repz
adc
adc
pop
popa
adc
mov
inc
call
scas
mov
data16
imulb
xchg
xchg
testb
jp
dec
push
ficoml
push
adc
cwtl
push
push
movsl
fmull
imul
ja
xchg
xchg
aad
cli
mov
xor
jae
mov
mov
std
cwtl
pop
mov
sbb
sbb
dec
fwait
inc
aas
lods
fistpl
mulb
sub
loope
mov
ljmp
adc
mov
ret
inc
fisttpl
cmp
xchg
data16
sub
iret
mov
push
jp
add
shlb
mov
in
in
popf
fwait
daa
adc
icebp
push
push
mov
mov
rorl
cwtl
jg
xlat
sub
fcmovu
xchg
xor
mov
fwait
mov
add
stc
mov
xchg
pop
rorb
in
loopne
sub
xor
fdivrl
testb
ret
loopne
pop
dec
jg
and
popf
pop
mov
mov
sub
loopne
outsb
dec
outsl
sbb
fstl
into
aaa
notb
jbe
test
and
mov
daa
pop
out
or
insl
in
jb
gs
cmp
mov
mov
sub
stc
iret
arpl
movb
fldl
imul
sahf
jbe
push
push
js
or
stos
fcomi
xor
add
lock
sub
or
push
mov
mov
sbb
aam
dec
cmp
mov
les
enter
jae
je
arpl
adcl
mov
xchg
mov
push
int
jmp
negl
inc
cwtl
jp
repnz
insb
fisubl
and
in
repnz
in
xlat
js
out
xor
outsb
imul
pop
inc
mulb
pushf
cmpsl
mov
xchg
aad
stos
or
mov
iret
jne
repnz
nop
mov
shlb
mov
cltd
call
repnz
gs
pop
cld
inc
mov
mov
add
fisttpll
or
pusha
add
cmc
std
sub
stc
xor
loope
mov
cli
imul
add
mov
pop
sub
jne
inc
data16
sti
test
int3
jp
adc
lods
push
inc
add
inc
push
pushf
push
xchg
out
mov
ljmp
fstps
in
ds
push
andl
fisttpl
xor
cmp
mov
daa
jg
int3
jo
popf
mov
sbb
mov
pop
aad
cmpsb
cmp
nop
xor
jmp
ret
jbe
testl
test
jle
dec
adc
mov
scas
pop
mov
adc
push
sahf
push
popa
mov
nop
in
adc
jecxz
xor
pop
xchg
in
mov
arpl
icebp
jbe
xchg
sub
repz
add
out
mov
dec
das
dec
lret
mov
jge
inc
aad
inc
add
mov
add
push
insl
xchg
mov
hlt
push
or
xchg
shll
push
leave
mov
enter
and
movsl
cltd
xchg
jmp
repnz
push
cld
pop
cmc
leave
pop
cwtl
mov
and
enter
fadd
pop
daa
jmp
call
pop
nop
cli
and
outsb
add
and
pop
adc
pinsrw
push
aaa
lret
mov
ficompl
repz
fldt
mulb
call
std
push
pop
cwtl
mov
adc
mov
cltd
shl
cmp
push
jae
fcoml
inc
pop
jp
clc
push
mov
pop
dec
add
push
ja
fnstsw
inc
fidivl
and
aam
lock
push
inc
xchg
jmp
popf
loope
cmp
dec
xor
jns
lea
pop
aas
sahf
int
bound
lret
sarb
in
jno
push
lock
shrb
in
cmpsl
sarl
add
sbb
imul
xchg
ljmp
cwtl
ret
mov
pop
sbb
xchg
dec
push
adc
sbb
nop
mov
std
and
and
or
cltd
mov
lea
cmp
roll
cmpb
ds
imul
sti
push
mov
in
pusha
xchg
cmp
test
addr16
jne
rolb
jg
test
adc
cmpsb
sub
in
cmp
jl
shll
dec
push
not
jbe
repz
ficoml
sbb
subl
clc
inc
and
push
xchg
or
inc
stos
xchg
jnp
cs
imul
hlt
dec
mov
sbb
push
pop
je
adcl
inc
into
mov
je
jl
jl
icebp
out
push
imul
fwait
mov
sti
inc
sbb
aad
xchg
mov
xchg
mov
rolb
jo
lret
mov
mov
gs
outsb
lret
das
sbb
les
outsl
sbb
dec
xchg
pop
xchg
add
aaa
mul
fucomp
cmp
ficompl
add
pop
in
wrmsr
sub
jl
jns
fldl
push
pop
jmp
je
cmp
sbb
scas
adc
mov
jecxz
fnstsw
cmp
iret
jp
jl
xchg
out
je
pop
jg
cmpsb
aas
push
sbb
push
lea
scas
gs
adc
mov
cmp
scas
sysexit
hlt
sarl
outsl
and
lahf
xchg
adc
fstpt
cmpsb
push
orl
lods
add
dec
arpl
mov
mov
lcall
jno
push
inc
jmp
out
pop
stos
std
repnz
in
and
jp
xchg
imul
iret
push
jmp
mov
test
mov
lahf
jno
imul
fnsave
scas
fsubrl
outsl
cs
or
adc
ds
push
ja
push
dec
and
xor
and
cmp
imul
xchg
mov
and
pop
pop
es
test
std
dec
orl
fcomp
push
xor
inc
insb
cmc
pop
inc
subb
es
pop
cmp
and
loope
in
das
xor
cli
mov
clc
jns
jp
out
dec
jns
hlt
mov
jle
lcall
aaa
imul
adc
fidivs
jns
lret
fdiv
outsl
or
push
outsb
mov
xchg
in
pop
xchg
cmc
adc
dec
nop
enter
in
ds
mov
pop
pop
das
test
dec
jmp
in
das
mov
out
inc
bound
xchg
outsb
push
in
cmc
inc
sti
xchg
xchg
movsl
sahf
sub
dec
dec
dec
mov
mov
jl
outsb
incb
in
cs
loope
popf
pop
fcoms
mov
jb
repz
xchg
sbbl
add
mov
xlat
and
rorb
dec
adc
aam
fs
sbb
inc
jb
in
xor
repnz
movsl
in
add
add
sbb
nop
xor
jne
ss
sub
cmp
test
push
dec
loope
inc
dec
or
ret
incl
imul
mov
mov
push
cli
cmp
jae
mov
adc
dec
mov
out
sbb
inc
fwait
push
fwait
call
icebp
sub
test
push
dec
mov
add
mov
xorb
xchg
daa
jl
loop
punpcklwd
fstp
test
xor
je
inc
pop
in
cmpsl
jb
jns
dec
fimull
push
stos
mov
inc
mov
xor
adc
sbb
movsb
notb
push
repz
cwtl
fs
lds
pop
xchg
mov
pop
jmp
lds
es
pop
jae
sti
notb
int
cmp
push
stc
add
sub
stos
popf
dec
ss
test
in
bound
mull
push
mov
xchg
popf
mov
dec
add
leave
rorl
push
imul
je
bound
adc
push
in
in
aad
push
leave
adc
sbb
cltd
addr16
jno
insb
out
stos
out
sbb
pusha
lods
out
rolb
jmp
mov
fmuls
push
out
hlt
push
scas
pop
cmp
jl
outsl
loopne
jne
fistps
pop
sbb
adc
sbb
std
push
push
pop
cmp
pop
mov
mov
sbb
inc
jbe
mov
icebp
or
xchg
and
xor
aam
daa
adc
push
push
ret
xor
mov
add
enter
sahf
adc
mov
mov
sbb
push
jecxz
jns
add
xor
daa
cmpsl
sbb
push
inc
das
dec
or
nop
xor
xchg
jecxz
push
xchg
dec
or
movsl
mov
je
mov
add
cld
mov
pop
jo
sub
xor
aam
in
call
loope
adc
inc
pop
dec
lahf
dec
popf
mov
inc
pushf
xor
lcall
xchg
je
shll
ljmp
pop
repnz
roll
decl
push
xchg
mov
pop
imul
add
add
sub
imul
ds
cs
xchg
lret
push
aad
in
jae
push
pop
jp
fimull
fwait
daa
sbb
sahf
fisubs
pop
imul
cmp
dec
push
cltd
jmp
imul
or
push
pushf
mov
push
jno
jb
test
inc
mov
cmp
fidivrs
aas
fdivrs
ljmp
pop
frstor
in
xchg
xchg
rcll
sbb
gs
push
push
jp
fstpl
xchg
xchg
ficoms
jns
mov
inc
cs
ret
add
adc
nop
in
inc
jge
push
outsl
add
ljmp
out
cmp
stos
mov
lret
loopne
aaa
push
xchg
or
mov
and
dec
mov
stc
lahf
icebp
mov
arpl
add
inc
jo
add
fsubl
pop
jae
mov
js
inc
xchg
leave
pop
sub
xor
les
dec
es
push
lds
les
jg
rcll
andb
xchg
jno
adc
movsb
mov
mov
cmpsb
sarl
mov
xchg
mov
ss
inc
jle
insl
rcll
cmp
loope
lret
jno
xchg
les
iret
cmpsb
leave
cmp
inc
loopne
xor
ljmp
movb
inc
mov
fisubrl
sub
std
add
mov
add
jnp
shrl
jne
lret
mov
jl
imul
test
pop
and
imul
add
int
ljmp
lea
push
arpl
sub
mov
stc
pop
sbb
fmull
add
imul
push
xor
or
fnstcw
repz
dec
sbb
ljmp
sub
ret
out
xchg
push
pop
push
in
mov
hlt
addr16
cwtl
jp
push
mov
push
daa
xor
iret
decb
xchg
xor
mov
lret
int
inc
xor
cmp
movb
cld
gs
std
or
mov
jge
scas
fs
in
arpl
jecxz
aas
repz
pop
xchg
mov
out
arpl
sbb
int
add
jg
sti
sub
and
rcll
or
les
stos
push
dec
xchg
jbe
in
rcrl
sti
mov
dec
movsb
xlat
stos
scas
lret
inc
rorb
pop
shll
ja
subl
mov
pop
clc
test
pop
cltd
popf
dec
push
mulb
pusha
mov
out
push
dec
add
adc
add
mov
shl
mov
rcrl
add
jo
cmp
testl
sub
cmp
add
adc
pop
jmp
fisttps
into
xor
ret
cmp
fisttps
dec
aaa
cmp
rolb
push
adc
mov
gs
or
adc
sub
cmpsb
hlt
aam
xchg
jae
and
cli
jecxz
and
mov
and
pop
sub
lret
lcall
cs
jo
loopne
or
sti
out
pop
cmp
fcoml
mov
jecxz
lahf
inc
push
scas
sti
sub
leave
iret
or
movsb
and
inc
push
mov
out
call
xchg
xor
ret
mov
add
cs
mov
in
fsubr
imul
cmp
leave
orps
and
dec
push
mov
loopne
cmp
leave
rorb
jnp
and
scas
lods
xor
push
insb
and
adc
fcomp
push
pmaxub
jae
xor
cmpsl
movsb
dec
push
repz
mov
std
jo
xor
add
mov
inc
fdivrl
div
mov
fs
js
subl
xchg
push
hlt
dec
or
add
hlt
xor
jns
push
and
add
notl
xchg
and
insb
inc
sbbb
jns
jnp
dec
dec
lcall
packssdw
icebp
pop
sbb
popf
out
jbe
and
stos
add
cwtl
xchg
enter
in
push
int
pop
fistpl
arpl
dec
loop
les
xor
and
add
and
add
cmp
mov
dec
dec
repnz
das
jb
dec
in
xor
push
and
lahf
mov
cmpsl
pushf
sbbb
enterw
jno
cmp
xor
inc
sbb
sti
cmp
cld
imul
add
adc
andl
loopne
lock
and
inc
adc
lcall
aaa
aaa
mov
enter
sbb
push
aam
sub
stc
xchg
cmp
adc
lcall
and
stc
cmpsl
pop
jmp
adc
add
inc
inc
pop
xchg
jne
mov
int
call
mov
push
mov
popf
mov
and
sti
xor
repz
lret
adc
mov
jo
cmpsb
push
pop
cmp
mov
stos
push
sahf
push
leave
and
sub
cmpsb
push
add
xor
xchg
lcall
dec
fadd
mov
cwtl
icebp
sbb
shrl
rorl
negl
pop
clc
sbb
sbb
sbb
jecxz
aaa
mov
sub
fisttpl
ret
test
pop
ret
add
or
stc
jbe
or
out
in
imull
and
inc
subb
inc
sub
mov
repnz
mov
outsl
cmp
dec
je
add
loop
dec
js
fisttps
sti
jae
mov
mov
gs
in
fisubl
mov
push
in
jecxz
mov
sub
or
fdivrs
pushf
fnstenv
jne
pop
cmp
lret
cmp
out
and
xchg
imul
leave
cwtl
adc
sub
sbb
ss
outsl
jb
pop
pusha
sub
add
push
ret
mov
cltd
push
fnsave
movsl
ret
clc
aam
adc
lret
xchg
mov
cmp
push
sub
popf
sbb
inc
jne
std
push
outsl
aaa
and
pop
stos
iret
cmpsb
fnsave
jle
add
jecxz
mov
lahf
sub
jmp
dec
push
mov
rol
inc
fisubs
mov
test
sbb
lret
pop
jecxz
or
sti
pop
test
insb
sub
sub
inc
jp
jecxz
sbb
sub
cmpsl
lret
mov
jle
in
sub
inc
adc
xchg
adc
jge
shll
movsb
xchg
jmp
mov
dec
or
mov
xchg
add
sahf
and
lret
mov
lea
sbb
mov
ret
adc
push
mov
jnp
jbe
jg
mov
icebp
cmp
jae
dec
popf
add
lcall
stos
inc
insl
mov
mov
cmpsb
cmpsl
outsl
push
jo
sbb
push
iret
call
pop
rcrl
js
jne
cmpsl
into
sub
dec
test
adc
xor
rorb
test
dec
pop
pop
jb
mov
rolb
add
pushf
sbb
sti
xchg
rclb
sub
push
divl
pop
loopne
fildl
push
dec
adc
in
rcll
call
dec
in
dec
push
add
add
push
jmp
les
les
jecxz
cmp
or
cmc
push
sub
ljmp
xchg
push
int3
dec
movsl
fmul
add
or
adc
lcall
adc
std
mov
or
xchg
mov
addr16
cmc
xchg
add
pop
mov
mov
or
es
sub
jl
push
jl
lds
inc
inc
dec
dec
mov
arpl
fwait
call
jne
out
jle
clc
in
pop
xor
add
leave
jne
popf
jle
stc
push
ss
repz
push
mov
push
cmpsl
hlt
jmp
fdivp
or
jg
loope
cwtl
push
rorb
xchg
aad
scas
pop
xor
push
sbb
push
cmp
loopne
cmp
inc
mov
xor
rclb
mov
xchg
mov
xor
mov
pop
mov
es
and
and
sbb
lea
inc
inc
cwtl
xor
or
cmp
mov
adc
sub
pop
or
adc
mov
andb
pop
in
add
inc
jmp
xor
cmpl
jae
sti
fcmovb
pop
pushf
cli
mov
movsl
dec
inc
jo
loop
negb
push
jge
iret
ret
popa
xchg
lret
mov
inc
rorb
push
ljmp
repnz
dec
faddl
das
hlt
test
popa
hlt
or
jle
out
mov
mov
mov
pop
mov
sub
cmc
dec
rcll
inc
mov
jne
and
mov
in
sub
mov
xchg
push
inc
in
jg
pusha
das
jnp
pushf
lret
mov
dec
rorl
xchg
and
fdivl
int3
mov
repnz
gs
xchg
outsl
aaa
mov
scas
push
test
sbb
test
cmpsb
push
ret
dec
into
iret
mov
jns
aam
jg
cmpsb
sbb
jb
outsl
cld
jge
std
mov
sbb
ret
in
push
dec
and
and
jg
pop
add
push
mov
imul
inc
mov
push
clc
data16
out
cld
xor
jnp
pop
sub
in
jp
dec
mov
or
pop
ljmp
cmc
mov
out
add
mov
dec
popf
sbb
add
pop
frndint
call
pop
test
xor
inc
or
push
xor
test
push
xchg
xchg
xchg
fimull
test
out
push
pop
pushw
xchg
add
outsl
sarb
push
ffree
adc
nop
cltd
xchg
push
push
std
ret
faddl
and
dec
loope
sub
or
mov
fwait
out
xchg
push
xor
xlat
lods
xchg
pop
sbb
and
sbb
xor
sbbb
pop
fs
fldl
addl
shl
sbb
mov
adc
mov
mov
ret
fs
inc
mov
xor
add
dec
fidivs
into
mov
dec
jno
sahf
sub
and
mov
sbb
and
jns
fstps
xor
and
sbb
push
pop
mov
adc
inc
dec
or
ret
bound
push
push
outsb
sub
enter
mov
xorps
notb
int3
idivl
xor
popa
sub
cmc
lret
scas
mov
rcll
jecxz
ret
mov
and
lock
xor
jns
push
inc
sti
xor
stos
insl
push
sbb
andl
inc
inc
adc
sti
sbb
roll
xlat
adc
dec
xchg
sbb
call
pop
rcl
push
data16
sti
jge
mov
ljmp
sbb
mov
aaa
or
and
jne
scas
dec
xchg
int3
pop
push
mov
jp
sub
stc
add
gs
movsl
adc
pop
dec
rclb
xchg
mov
repz
pushf
pop
pop
movsl
lds
jno
repnz
and
lods
inc
push
test
loopne
and
push
rcl
sub
mov
mov
push
fs
xchg
push
cmc
mov
cltd
cli
and
ja
data16
dec
iret
inc
jle
fcomps
nop
cmp
xor
mov
cmp
arpl
rol
sti
testl
lods
mov
xor
aam
cmpsb
sbb
mov
xchg
or
jg
jmp
xorl
sbb
push
pop
mov
dec
aad
sahf
adc
hlt
aas
popf
flds
test
lods
shlb
dec
inc
xchg
rcrb
mov
addr16
sbb
mov
fucomi
jmp
push
or
into
and
xor
or
jecxz
pop
or
mov
push
jp
ja
mov
in
push
bound
xchg
xor
sub
sbb
add
push
lret
pop
insl
mov
iret
lret
test
mov
mov
inc
or
scas
cmp
loope
test
fwait
call
mov
ljmp
sbb
dec
sub
in
fcos
jae
mov
pop
ss
adc
pusha
jg
push
daa
cld
jp
push
xchg
inc
fldenv
or
mov
std
xor
lods
xchg
or
fs
adc
mov
int3
mov
pushf
in
cmp
out
or
push
insb
xchg
sub
out
repnz
imul
add
sbb
das
enter
aad
sti
in
adc
cmpsl
test
cmp
clc
xor
fbld
cwtl
loopne
adc
pop
and
ficomps
lds
in
rcll
xor
dec
leave
xor
cs
ja
or
mov
and
inc
aad
mov
push
fnstcw
cmp
dec
cld
or
adcl
fwait
pop
movsw
iret
inc
push
shl
test
pop
jecxz
inc
and
and
mov
fidivrl
les
push
jns
int
add
add
nop
mov
sub
cmc
int
mov
jb
cmpl
push
fisttpl
and
dec
pop
loopne
mov
cs
insl
push
inc
aam
jl
sub
stc
icebp
cmpsl
test
stc
shrl
scas
imul
adc
fisttps
iret
daa
cltd
scas
fidivrl
pop
mov
mov
lock
gs
popl
outsl
cltd
add
pop
sti
mov
add
pop
mov
pop
or
mov
lock
push
dec
mov
push
js
push
cmpb
test
pop
sub
adc
and
xchg
push
sbb
loope
lea
xchg
dec
dec
cli
in
rorb
mul
js
push
outsb
test
mov
xchg
jns
sbb
mov
call
adc
imul
xor
add
outsl
fildll
movsb
cld
je
jg
xor
fisubs
pushf
pop
ret
push
cltd
cltd
jne
int
fdivs
cmpsl
pushf
mov
sbbb
enter
std
lods
mov
inc
mov
mov
fstpt
pop
inc
dec
stc
leave
sbb
movsb
dec
scas
or
push
xchg
and
fadds
sub
sbb
insb
xor
jecxz
xchg
xchg
std
and
pop
inc
sti
xor
mov
out
dec
ret
ss
push
jno
pop
loopne
cmp
jnp
paddusb
in
inc
mov
dec
or
insb
jne
andl
out
daa
push
or
cmpsb
in
enter
adc
mov
push
add
push
xlat
std
jb
and
push
and
xchg
loopne
and
xchg
jge
fdivrs
mov
and
sub
or
push
dec
stos
daa
push
mov
dec
arpl
jecxz
sub
push
pop
adc
add
test
pop
cmpsb
dec
aam
or
xor
dec
xor
and
inc
cmp
aaa
outsl
enter
sbb
repnz
fdivp
out
jae
mov
adc
int3
clc
and
shl
cwtl
sbb
cs
aas
mov
int3
xor
jns
lret
popa
inc
mov
ja
push
sub
xchg
iret
addr16
mov
xor
xor
xor
jne
mov
mov
jp
inc
and
mov
mov
mov
inc
sub
imul
cmp
push
loopne
inc
xchg
xor
mov
popa
adc
repz
mov
push
dec
int3
ret
inc
out
cmpsb
ss
adc
dec
in
mov
pop
mov
fucompp
push
aam
xor
xlat
lods
inc
adc
or
stos
pop
adc
rorl
dec
jge
xor
outsb
xchg
rorl
push
popf
loopne
mov
jmp
fxch
sbb
jo
scas
mov
cmc
mov
pop
xlat
int
cld
shll
jmp
addr16
mov
iret
lcall
jnp
lret
pop
icebp
push
rcrb
cmpsb
fistpll
lcall
movsl
push
test
lret
inc
inc
xchg
push
jg
and
inc
idivb
pop
das
pop
adc
and
adc
push
mov
aam
mov
imul
test
out
add
hlt
add
jnp
shll
clc
push
push
or
nop
push
dec
cmpsb
mov
jl
bound
xchg
aaa
lock
sub
into
mov
sbb
ja
repnz
dec
jbe
clc
rcl
push
stos
lcall
jne
ret
aas
lret
movsb
xor
jle
add
inc
mov
jmp
pop
push
sahf
stos
jb
in
xlat
bound
mov
mov
or
mov
push
pushl
sahf
or
cmp
ficompl
ja
lods
movsl
or
iret
js
jae
int3
enter
add
into
ja
test
push
adc
push
xor
pop
pop
jnp
dec
adc
test
mov
ds
inc
mov
fcmove
pop
fdivs
adc
dec
dec
iret
test
adc
add
mov
cmpsb
cmp
jo
pushf
xlat
insb
pop
shld
jo
aad
xor
adc
mov
addr16
ja
mov
cmp
call
inc
andb
lods
popf
jo
mov
addl
nop
push
cli
ret
mov
sbb
into
adc
or
sbb
cld
test
dec
xor
adc
inc
lods
mov
and
fwait
or
shlb
loop
call
aam
cli
inc
cmp
mov
aas
call
sbb
mov
xlat
push
adc
inc
scas
jae
pop
cwtl
addb
cltd
cmpsl
scas
xor
pop
mov
xor
orb
dec
shlb
dec
sbb
push
and
adc
outsb
inc
xchg
dec
xor
into
jecxz
sub
mov
stc
repz
movsl
das
into
adc
lahf
stos
sti
outsb
xlat
cmpsl
pop
pusha
icebp
call
mov
cmc
mov
hlt
rorl
in
outsb
lret
and
jl
jns
inc
mov
jae
adc
cs
enter
jecxz
test
test
int
fs
mov
test
push
lods
mov
inc
sbb
cli
cmp
jg
or
lcall
in
adc
ret
sti
movsl
xchg
jne
jne
loope
sub
cmovle
inc
cs
in
dec
stos
adc
mov
shl
mov
add
mov
pop
xchg
jns
ljmp
mov
or
jmp
fdivs
fnstcw
test
fs
out
arpl
add
jg
jp
dec
lahf
mov
xor
push
pop
jns
add
dec
xchg
dec
pop
aad
adc
rcll
push
dec
xor
jmp
and
addb
and
pop
cmp
mov
inc
stc
popa
jno
fists
or
ja
aad
mov
fsubs
addl
out
mov
push
xor
stos
and
or
inc
daa
fnstsw
jae
mov
push
lahf
imul
jnp
dec
jg
push
push
shlb
add
lds
xchg
rcll
jb
sbb
push
jle
leave
mov
fists
push
and
out
push
or
or
rcrb
pop
add
ss
inc
and
fcomip
mov
leave
iret
fiaddl
scas
and
sub
add
sbb
sub
xor
push
out
jne
jl
or
adc
cmpsl
cs
negb
addb
in
and
or
push
xchg
std
push
int
ret
lock
stos
mov
adc
jle
dec
int
mov
and
insl
xchg
and
jp
mov
ss
cmp
pushf
pop
xchg
jnp
sbb
xchg
insl
add
int3
stos
es
popa
fsubrs
scas
or
repnz
xor
jne
jecxz
cld
xor
push
leave
loope
into
scas
cli
ss
aam
and
xchg
jp
pop
sbb
ret
sub
int3
sbb
lret
movsl
xchg
push
shll
test
lock
mov
push
ljmp
push
inc
inc
pop
mov
stos
cld
mov
and
mov
fnstcw
add
push
stos
fs
stos
push
mov
cmpl
shlb
pop
lret
andl
test
out
incl
xchg
pop
shrl
dec
xor
mov
inc
lock
ss
mov
jge
ficoms
lock
sarl
xchg
jae
int
imul
fsubs
mov
or
push
pop
mov
gs
movsl
xor
adc
stc
mov
loope
ds
mov
ds
test
ljmp
aam
sub
fisttpll
sbb
jae
cmp
mov
jbe
popa
push
or
out
loop
mov
jno
dec
push
repnz
inc
xchg
sbb
mov
test
lods
inc
xor
and
imul
jg
jb
in
dec
mov
xor
add
jne
fstp
pop
xor
inc
mov
mov
cmp
aam
mov
mov
jmp
inc
lcall
lods
adc
mov
mov
into
xchg
pop
in
iret
stos
sbb
call
dec
jae
out
sbb
mov
aad
mov
loopne
nop
sti
mov
arpl
push
imul
cmp
loopne
daa
mov
cld
mov
cmp
fists
shrl
cmp
cmpsb
push
cmpsl
bound
jae
test
xchg
cld
fcomi
xor
push
fmulp
in
lahf
movsl
cmpsb
jbe
enter
mov
jecxz
sub
lret
jp
push
imul
in
fsubrl
cmpsb
jecxz
xchg
inc
mov
es
callw
fs
lds
fsubrl
lods
jns
rcrb
sahf
test
and
push
int3
or
jbe
pop
les
mov
and
mov
mov
sub
bound
sbb
cld
bound
fisttpll
js
pop
mov
pop
ret
mov
repz
imul
pop
jae
mov
xchg
call
mov
xor
cltd
addr16
push
sti
scas
dec
jne
and
jnp
add
xchg
or
neg
xchg
cmpsl
int3
fisttps
sbb
rcll
ljmp
sbb
mov
fisubs
and
in
ds
inc
stc
mov
pop
mov
test
push
int3
hlt
push
imul
and
es
imul
mov
xchg
xchg
leave
pop
movsl
xchg
xor
imul
and
mov
lcall
les
mov
std
in
xchg
lahf
mov
pop
push
sbb
imul
movsl
adc
mov
js
lcall
adc
adc
mov
jb
jo
xchg
icebp
push
shl
add
orl
mov
pop
aam
xchg
xchg
cmpsb
aaa
aam
mov
int3
ja
push
rcrl
cld
dec
cmp
mov
cld
dec
sarb
mov
push
add
pop
pop
rol
ds
ret
mov
add
mov
add
mov
xchg
dec
rorb
mov
lds
dec
fs
outsl
push
lock
dec
mov
mov
enter
aam
sti
leave
outsb
lods
test
sbb
mov
pop
mov
sarb
and
in
mov
adc
js
xor
mov
push
ss
xchg
push
repnz
inc
cld
dec
mov
lret
js
lcall
je
leave
adc
aad
xchg
jle
or
mov
popa
and
loop
loop
xor
or
push
jne
mov
adcb
fists
adc
mov
icebp
jp
push
iret
fdivrl
cmp
scas
loopne
daa
lock
lret
xor
icebp
aaa
sarb
fsubl
mov
aam
or
add
cmpsb
xchg
lea
pusha
fistpl
fcompl
out
sti
cmc
data16
add
jge
pop
stc
cld
sub
out
add
xor
in
fnsave
mov
aam
xchg
icebp
xchg
out
lea
xchg
push
mov
test
outsb
or
orl
dec
and
jl
cld
pop
push
inc
sti
sti
cmp
rorb
mov
cmp
mov
or
xlat
data16
lds
mov
setns
outsb
popl
lods
cmc
push
pop
mov
cmp
inc
aaa
cmpsb
push
fwait
pusha
imul
push
pop
test
lahf
ljmp
test
mov
mov
lahf
outsb
push
outsl
mov
js
rolb
jne
in
mov
xchg
xchg
mov
pop
jmp
mov
pmulhuw
jmp
adc
jecxz
mov
dec
mov
adc
fidivl
mov
inc
lret
out
add
fiadds
mov
cmp
xchg
mov
push
pop
adc
mov
les
sub
pusha
rorb
jecxz
xor
popf
add
ja
cwtl
or
loope
inc
arpl
lods
push
arpl
insb
pusha
ja
prefetchnta
aam
fisubrl
fwait
outsl
adc
sbb
cmp
aas
adc
lahf
xor
xchg
lock
or
push
shrl
jbe
mov
out
insl
cltd
xchg
push
js
xchg
dec
lcall
into
inc
jle
mov
in
jmp
mov
jmp
enter
or
mov
outsl
fcompl
adc
adc
add
fxch
xchg
adc
inc
inc
cmp
gs
pop
mov
sbb
pusha
pop
add
add
lds
in
jecxz
icebp
push
cltd
clc
push
xchg
sti
mov
out
mov
push
and
aad
out
mov
add
movsb
mov
fildll
je
loope
repz
js
push
ja
xor
movsb
inc
stos
pop
cli
mov
ljmp
ds
addl
jae
int
and
push
sbb
sub
test
sbb
dec
data16
ja
ljmp
xor
cli
ret
fimuls
or
lret
sbb
add
mov
cmc
add
sarl
push
adc
mov
ficompl
leave
popf
jl
in
sbbb
inc
inc
inc
andb
xchg
shl
notl
xlat
cmp
fdivrl
jae
mov
not
sub
test
scas
xor
cmpsl
mov
sbb
lret
cli
pop
subb
jb
outsl
adc
clc
mov
add
mov
cmp
pop
jecxz
test
xchg
loop
lret
xor
sbb
push
adc
xor
pusha
mov
xor
pop
mov
cmp
fstpt
or
mov
mov
lret
pop
xchg
sub
jl
push
push
inc
fiaddl
hlt
pop
fistpll
stos
fs
stos
inc
enter
data16
adc
or
jp
fs
insl
das
xor
sbb
cmpsl
xchg
add
mov
xchg
and
das
mov
clc
push
les
fcmovu
movsb
jge
in
fisttps
imul
fisubrs
addl
cmp
repz
addl
add
sahf
loopne
and
push
and
jg
cld
in
pop
and
mov
jp
test
dec
push
jl
mov
add
jno
xchg
xor
ds
testl
inc
dec
test
push
jne
and
call
sub
jo
aad
cmp
int
xchg
jns
fidivl
sub
sahf
ds
das
leave
cld
sub
flds
xor
sbb
inc
dec
and
mov
xchg
nop
jns
fdivrl
sbb
jo
push
jle
loope
mov
ljmp
out
mov
xchg
xor
add
xor
lds
mov
test
xor
bound
data16
jae
push
xchg
pop
pop
and
fdivrs
jle
imul
mov
in
mov
mov
push
push
cmp
adc
pop
loope
and
sbb
ja
cwtl
outsb
xor
push
sub
jle
dec
xchg
adc
sub
cmp
push
mov
inc
push
jbe
stc
adc
fcmovnu
xlat
sbb
jbe
mov
inc
push
stos
cld
les
adc
mov
test
je
clc
mov
add
sbb
lret
jne
fidivrs
mov
mull
push
dec
pop
cmp
mov
mov
mov
arpl
outsb
dec
movsl
out
stos
cmp
push
pop
dec
rorl
dec
pop
call
ds
inc
ds
in
sub
sub
sub
push
pop
xchg
nop
or
scas
mov
jmp
arpl
lds
test
clc
cmp
sub
adc
ds
and
stc
inc
test
pop
sti
pop
sbb
rcl
xor
dec
dec
adc
sbb
or
jge
and
sbb
push
mov
aad
mov
loopne
test
lahf
js
pushf
in
bnd
addr16
mov
lods
stc
xor
stc
dec
adc
xchg
pusha
inc
add
add
push
push
mov
cmc
inc
data16
xor
mov
mov
popa
pop
jbe
jp
pop
jmp
xchg
or
and
mov
lahf
sbbl
jne
mov
fidivs
and
push
lods
xchg
out
inc
adc
or
fidivrs
xchg
xchg
out
ja
push
ja
int
mov
add
mov
xor
shll
ret
hlt
pop
frstor
push
std
jb
call
lret
sub
sar
scas
pop
dec
fcmovu
adc
mov
sbb
insb
shr
xor
add
mov
movsl
xor
mov
adc
cmp
adc
or
or
mov
xor
popf
lods
or
mov
gs
lret
jl
jno
into
clc
sub
in
or
mov
subl
lods
bound
mov
les
push
sbb
fwait
push
inc
addl
sub
add
and
cmp
jb
jo
sbb
sub
lcall
sub
pop
repz
jo
add
inc
arpl
sbb
dec
sub
test
mov
fiadds
push
mov
adc
mov
mov
pop
int3
rcrb
out
mov
stos
sahf
mov
mov
lock
test
pop
mov
and
idivl
or
sub
cmp
lock
stos
push
sub
pop
adc
mov
aam
pushf
out
dec
jge
sbb
and
fwait
xor
jae
dec
pop
subb
or
xchg
push
movsb
or
cmp
aaa
daa
jne
repnz
in
sub
imulb
inc
jmp
cmp
lods
mov
cmp
mov
mov
ret
in
cmc
push
aaa
std
cmp
ja
mov
and
sub
in
jbe
push
lock
jo
inc
add
or
cmp
xlat
xchg
aas
cmp
leave
mov
jg
pop
call
xor
pop
pusha
lahf
leave
ds
mov
out
push
cld
mov
xchg
rcrb
push
daa
ret
xchg
in
or
int3
arpl
pop
sahf
imul
rclb
jl
adc
addb
addb
repnz
fisubs
mov
cmp
ljmp
xchg
mov
mov
mov
outsb
in
clc
std
xchg
and
jb
popw
xchg
pop
and
adc
in
enter
movsl
aam
adc
ret
les
xchg
push
cmp
xor
ret
negb
inc
xchg
adcb
repnz
sbb
fs
test
fistpll
push
js
push
je
adc
loopne
pusha
jp
bound
mov
xchg
lods
stos
and
mov
ret
mov
mov
jl
xchg
mov
lds
adc
sub
sub
stc
jb
lahf
inc
mov
xorl
aas
cltd
inc
dec
ja
fsts
jecxz
fadd
loop
xchg
in
adc
xlat
fiadds
and
dec
sbb
and
jns
mov
mov
jge
lods
push
mov
mov
das
mov
cmp
and
jb
lcall
dec
mov
adc
jl
cmpsl
jmp
lahf
jecxz
mov
add
aam
jb
ljmp
inc
fisubrs
int
lea
fisubs
xor
mov
rcr
push
xchg
das
sar
call
jp
repnz
mov
xlat
out
cmp
xchg
insl
sti
xchg
ret
add
into
mov
sub
mov
cmp
gs
mov
pop
pop
jge
out
jl
inc
pop
jo
xchg
jg
int
stos
cld
arpl
lods
dec
dec
xor
cwtl
int3
stos
test
jnp
daa
in
mov
mov
cmp
push
scas
mov
inc
pop
pushl
ja
jo
ficoml
or
outsl
in
movsb
pop
je
mov
cmpsl
sbb
leave
adc
cli
or
aaa
jg
mov
xchg
mov
pop
inc
xchg
cmp
or
mov
mov
push
movsb
nop
int3
lahf
enter
add
mov
dec
ljmp
ss
sbb
push
pusha
test
cs
or
push
push
push
pop
push
andl
mov
push
push
or
addr16
mov
adc
lahf
js
cmp
adc
xchg
cli
inc
dec
shr
mov
in
jae
xchg
fs
sbb
mov
or
call
sub
lock
out
jg
cmp
mov
bound
setle
sub
jge
les
mov
jae
or
pop
dec
stos
xor
jp
sti
fstpl
dec
cli
and
les
gs
push
gs
add
sub
dec
mov
jmp
mov
shlb
dec
xor
adc
pop
int
dec
decl
lahf
add
aam
adcl
sbb
mov
test
adc
xor
jp
std
mov
jns
lahf
ss
sbb
push
jb
pmaddwd
jge
js
push
stos
dec
shll
rcll
data16
cli
lret
roll
scas
cmpsb
sub
mov
out
and
pop
movsb
xchg
rcr
cmpsb
clc
das
add
push
add
test
or
xlat
inc
jne
fcmovb
stc
xor
sti
outsl
mov
jno
jb
push
fs
cmpsb
shr
adc
xchg
test
cmc
fcoms
push
pop
mov
jo
jl
mov
jecxz
fwait
and
in
movsl
mov
or
lahf
sarb
into
stos
and
mov
mov
icebp
cmp
leave
mov
jns
dec
adc
jne,pt
out
lahf
orl
dec
add
popf
je
xor
inc
push
inc
sbb
inc
push
in
or
mov
pusha
addr16
outsl
sbb
in
test
test
push
add
movsl
mov
mov
insl
lret
mov
sbb
and
rorb
jecxz
enter
sbb
ljmp
stos
mov
push
push
jne
and
add
je
lahf
dec
in
ds
add
ds
and
outsl
push
fisubl
mov
push
jge
xchg
cmp
xchg
pop
fs
jg
outsb
xchg
lret
cmp
adcl
adcl
cmp
xchg
out
cmp
pop
movsl
or
faddl
clc
hlt
dec
fcoml
push
mov
out
add
lock
xchg
or
jle
cmp
je
dec
mov
loop
out
int
movsl
loopne
xchg
xchg
call
rorb
xor
testl
xchg
push
in
jmp
or
add
cmp
mov
je
icebp
inc
cmp
and
lea
rclb
outsb
divl
mov
push
add
stos
out
push
mov
test
xchg
pop
xchg
dec
fs
call
inc
add
add
mov
enter
sub
sbb
daa
fiaddl
shlb
int
mov
cmp
pop
push
push
xlat
int
xchg
dec
jae
stos
faddl
hlt
std
mov
cmp
cs
cmc
repnz
lods
pop
ret
mov
sub
sub
dec
mov
push
cs
jmp
scas
mov
and
aas
jp
imul
inc
int3
mov
ss
lcall
push
jmp
cmp
dec
cmc
clc
ja
ja
aas
test
cmp
out
aas
mov
ret
mov
mov
aaa
sbb
xor
mov
dec
out
test
ds
stos
addr16
sbb
loopne
and
cmp
scas
subl
pop
int3
mov
or
mov
sti
mov
cmp
out
lock
sbb
xor
push
jp
dec
adc
mov
add
sub
in
pop
xlat
mov
in
pop
int3
into
pop
lea
xlat
jp
leave
dec
nop
mov
test
dec
cmc
xchg
int
jno
mov
sbb
mov
sti
mov
std
cmp
and
push
mov
sub
fwait
xchg
xchg
jno
jo
outsl
pop
pop
add
and
inc
sub
mov
sub
insb
dec
aad
fdiv
imul
add
jg
imul
rorb
clc
hlt
cld
fbld
test
test
test
pushf
test
push
adc
pusha
push
mov
sub
and
js
inc
push
mov
inc
adc
imul
mov
popa
mov
lahf
push
test
gs
insb
sbb
aad
push
ljmp
mov
sarb
bound
pusha
fsubrl
testb
fidivs
push
aas
dec
daa
adc
lea
push
add
into
mov
cmp
inc
dec
xor
dec
xchg
cmp
rclb
mov
sub
add
pop
mov
mov
fstps
mov
mov
push
fstpl
in
push
cmpb
es
imul
add
mov
lret
sub
and
mov
jne
cmc
ss
add
jne
mov
or
call
push
cmpsl
mov
js
imul
adc
adc
or
mov
imul
jmp
adc
lahf
out
adc
loopne
jae
lods
xlat
pop
dec
jbe
imul
test
popf
adc
mov
dec
xchg
bound
out
or
push
jo
jmp
aaa
xor
adcl
aad
push
xorl
ret
stc
and
push
xchg
pushf
mov
xor
or
inc
adc
lock
dec
xchg
inc
sbb
gs
data16
lret
cmp
lds
inc
push
iret
mov
mov
adc
sub
stos
cmpsb
in
fistl
dec
xchg
je,pn
sbb
push
adc
in
sub
pop
sahf
xchg
push
movsb
cmp
jno
inc
xchg
adc
das
adc
xchg
loope
mov
and
sub
stc
xchg
test
cli
cld
cmp
loop
jg
jo
mov
fstps
jno
test
out
imul
sbbl
sti
leave
push
scas
mov
pop
daa
inc
repz
inc
out
push
addl
ret
in
fimuls
mov
daa
xchg
pop
imul
push
outsl
jecxz
ret
and
xlat
jp
dec
add
rcl
pop
adc
jle
jp
xor
loopne
mov
int
mov
mov
imul
jb
stc
popa
es
dec
int
mov
out
mov
lea
push
add
lcall
push
mov
lret
fdivs
mov
int
gs
or
cli
ret
xchg
jb
in
bound
arpl
push
pop
ret
inc
mov
fidivrl
imul
data16
loope
rol
fistpll
pop
xchg
test
aad
push
push
stc
and
push
out
orb
sub
test
inc
neg
cmp
hlt
in
stos
sahf
call
xor
fsubs
add
fimull
cltd
dec
mov
sahf
addl
jmp
add
sbb
jl
cs
inc
jo
mov
xchg
jno
cmc
leave
test
lcall
and
xlat
dec
adc
stos
test
cmpsb
xchg
sub
js
xor
and
ror
mov
and
mov
dec
shlb
int3
xor
mov
jg
mov
test
push
das
push
insb
shll
and
int
arpl
or
jecxz
idivl
cmp
jo
popa
outsb
mov
mov
nop
ret
sub
push
fwait
imul
pop
sbbb
pause
add
sub
sbb
out
mov
nop
scas
out
dec
push
lret
or
ds
mov
or
sub
mov
inc
jmp
out
xchg
jl
mov
fbstp
and
xchg
scas
jge
insl
in
jnp
lcall
loopne
jno
mov
mov
add
sbb
iret
pop
mov
repnz
mov
adc
push
mov
xor
and
mov
fisubl
dec
stc
subb
jle
inc
insb
ja
adc
cld
movsl
cmp
add
lods
pop
mov
cmpsl
scas
or
inc
int3
rol
and
xlat
sbbb
divb
cltd
je
add
sub
ja
fistpll
xchg
pop
shrl
rcrl
xchg
lcall
ds
lock
xor
lcall
lds
stc
sbb
hlt
stos
cli
pop
jno
loopne
inc
or
test
test
jle
test
popf
test
ret
repnz
or
outsl
jg
test
addl
enter
lcall
stos
rcr
sbb
aam
std
inc
inc
dec
ret
filds
test
adc
cs
addl
lea
pop
test
inc
cmp
jmp
push
movsl
jp
outsb
lods
jne
pop
pop
mov
push
mov
push
jmp
frstor
xchg
loop
or
stos
movsb
fwait
jns
adc
inc
sub
rorl
mov
jbe
sbbb
outsb
xchg
jae
notl
pop
fnstenv
out
stc
lods
push
stc
faddp
jae
jg
mov
lds
cmpsl
xor
js
sbb
dec
fs
mov
test
inc
fwait
mov
in
push
fnop
inc
add
iret
or
ja
movsb
int3
push
xchg
mov
movsb
xor
mov
sbb
mov
repz
int
push
add
or
addr16
and
rcrb
scas
fwait
mov
jge
test
out
aam
push
call
jge
sub
jmp
ljmp
dec
repnz
push
cmp
subl
sar
out
aas
inc
fwait
jnp
rsqrtps
shll
cmp
test
xor
jo
inc
orl
ja
xchg
in
jns
stos
mov
xchg
xor
into
and
data16
xor
insl
inc
repz
mov
loope
in
cmp
pop
pop
pushf
shll
jns
dec
addr16
movsl
int3
loope
loop
pushf
sahf
test
sbb
stos
adcl
adc
xchg
movb
mov
neg
psrlw
jp
es
cmp
cmc
nop
add
aam
lret
or
pop
and
hlt
or
daa
mov
mov
cmp
fs
mov
lds
sub
jp
gs
push
jmp
lcall
lock
sbb
test
les
ja
das
mov
nop
daa
movsl
mov
mov
inc
fldcw
sbb
mov
push
push
popf
pop
cltd
add
dec
adc
or
notl
scas
dec
fst
insl
clc
out
cltd
mov
shrl
ss
addr16
fdivl
sub
xor
stos
lods
push
std
xor
cld
pop
push
mov
xor
mov
and
rcrl
dec
outsb
mov
in
stos
xorb
and
inc
jp
xchg
sub
pop
stos
adc
push
pop
sub
mov
fisubs
pop
fnstcw
or
les
popl
inc
int3
in
pop
popf
jmp
les
pusha
and
jp
lods
popf
lock
clc
jb
outsb
mov
pop
mov
mov
out
jbe
adc
ss
inc
sub
xchg
cltd
push
mov
stos
and
mov
js
lret
mov
adc
push
das
inc
xor
lods
xor
lds
cmp
inc
jmp
sbb
rorb
int3
inc
out
xchg
or
push
insl
lods
mov
mov
jl
push
sub
hlt
mov
adc
mov
sarb
dec
adc
bnd
mov
scas
sbb
mov
test
cmp
sbb
arpl
outsl
mov
repnz
xor
cs
jno
dec
cs
sbb
mov
xchg
cmp
lret
cmpsb
lret
iret
mov
push
pusha
sub
das
int
xchg
insb
push
dec
ss
nop
jle
jno
add
mov
mov
lea
mov
lds
pop
mov
daa
mov
repz
popa
fidivl
jge
mov
mov
nop
lcall
test
mov
loopne
xchg
cwtl
mov
add
mov
hlt
push
push
icebp
push
xchg
das
xchg
lret
repnz
popa
mov
lods
outsl
fcoml
stc
scas
mov
add
ljmp
int
push
add
insl
xor
dec
pop
push
push
add
mov
xchg
push
push
loope
aaa
sarl
xchg
push
addl
mov
popf
and
jb
dec
roll
movsb
sub
mov
push
xchg
push
and
mov
jb
outsl
clc
pop
inc
fcomps
push
clc
insb
cwtl
mov
mov
out
xchg
pop
test
in
sbb
adc
jp
hlt
sti
push
xchg
and
int
sbb
cmp
jno
jae
sbb
pop
xchg
pop
mov
pop
inc
js
dec
jns
fnstsw
mov
dec
loopne
ret
pop
pop
or
or
pop
arpl
push
test
dec
bound
mov
outsl
sbb
jno
leave
xchg
rcl
xchg
out
dec
adc
jae
push
jge
xor
nop
sub
jbe
adc
adc
ds
jle
pop
es
cwtl
dec
cmp
sub
or
ja
mov
cmp
aaa
dec
jle
cmc
mov
ja
je
mov
cmp
ret
fists
test
insb
icebp
mov
ret
add
and
imul
mov
mov
mov
jg
pop
xor
cmpsl
ret
xor
or
jns
or
xor
mov
inc
sbb
jne
cmpl
int
in
push
jo
into
and
test
pop
stos
add
inc
mov
dec
pop
imul
icebp
icebp
or
enter
stos
call
jo
shll
mov
cli
jmp
dec
cmp
cmp
xchg
mov
in
jmp
leave
cmpb
pop
je
stos
cli
inc
lock
mov
mov
mov
scas
cmp
sbb
cmp
adc
sarb
lahf
jg
fmull
cmp
mov
in
mov
bswap
sub
pop
icebp
fsubrp
push
je
test
int
lods
mov
bound
xor
js
push
je
dec
push
sub
pop
and
sbb
inc
aaa
ret
into
cs
sbb
pop
inc
or
inc
xor
adc
das
daa
in
sub
mov
pop
daa
popf
mov
pop
mov
pop
xchg
rcl
roll
outsb
cmp
mov
test
mov
mov
cmc
shl
pop
insb
mov
xchg
cmp
mov
int
push
pop
js
es
jno
nop
push
mov
lahf
inc
jmp
mov
add
test
insb
adc
enter
loope
in
mov
aam
and
pop
push
or
loope
push
movsl
inc
jl
es
pop
scas
or
daa
mov
sbb
leave
jg
xchg
out
dec
outsb
or
or
out
out
mov
push
xchg
call
jo
cltd
push
xchg
clc
fwait
cld
dec
jge
in
push
and
inc
outsb
insl
movsl
inc
aaa
xchg
imul
mov
cmpsl
hlt
cld
in
jmp
mov
sub
sti
lock
sarb
aad
iret
in
mov
outsl
aas
cmc
ror
lea
lahf
push
sub
ja
popf
pop
or
shrl
bound
je
insl
pop
sbb
ja
xchg
outsb
dec
or
xchg
push
in
faddp
mov
fisubrl
xorb
popa
inc
adc
mov
cltd
orl
jge
mov
add
jmp
and
out
and
mov
dec
mov
test
dec
fidivl
js
and
shlb
lahf
imul
cld
fnstenv
bnd
push
adc
loop
pop
xchg
sarl
lock
inc
pop
mov
sub
pop
adc
mov
iret
pusha
inc
sub
fbld
popa
int
jmp
popf
and
or
lret
or
movsb
lds
mov
xchg
into
out
xchg
jne
adc
or
jg
xor
and
leave
pop
fisttpll
push
inc
pop
test
test
cmpsb
pop
jecxz
mov
cld
dec
call
int
mov
lea
loop
test
dec
mov
jmp
add
rorb
xchg
mov
xor
sub
dec
cltd
aam
xchg
daa
loope
push
sbb
ret
nop
dec
pusha
in
fistl
mov
je
hlt
scas
cmp
pop
add
dec
mov
dec
hlt
call
fisttpl
pop
arpl
inc
fdivp
xor
data16
mov
mov
fdivrs
dec
mov
jb
rclb
in
lret
out
sahf
mov
pop
add
pop
ret
inc
arpl
std
push
rol
jns
pushf
push
data16
cwtl
in
insl
xchg
clc
sub
loope
sbbl
cmp
arpl
or
push
xor
lret
xchg
jmp
mov
cmpsl
pop
and
add
fstpl
imull
cltd
stc
or
lods
dec
test
imul
jmp
in
lret
or
add
lock
push
daa
pop
in
pusha
les
cmp
inc
jbe
pop
sub
mov
jno
xor
xchg
out
pusha
sub
pop
sti
or
add
cmpsb
cmp
arpl
arpl
imul
mov
fsts
lods
pop
call
or
pop
sbb
push
cmp
sub
stos
lds
lahf
mov
mov
insb
mov
xor
pop
aas
sbb
mov
inc
scas
in
aas
mov
movsl
push
jle
mov
icebp
shl
push
insb
fisttpll
call
test
pop
or
cli
testb
sbb
shll
in
or
jbe
js
xor
pop
lret
mov
imul
aam
push
cli
cmp
bound
mov
repnz
in
sbb
hlt
in
xchg
mov
outsb
dec
add
jmp
shl
leave
sbb
into
clc
loope
stc
not
pop
int3
iret
add
fdivr
movsl
xchg
xchg
pop
dec
icebp
pop
out
mov
mov
dec
mov
xor
es
inc
dec
roll
insb
adc
sbb
fchs
mov
sub
xchg
out
cmpl
jl
lods
shlb
push
xchg
jns
xchg
clc
inc
cmpsb
mov
insl
add
jno
xor
inc
lods
rcll
jb
or
xchg
sub
scas
loop
inc
cmc
mov
or
ja
jne
xchg
mov
add
xor
icebp
dec
inc
push
lock
insb
mov
jbe
mov
enter
mov
or
and
ds
cs
movsb
push
scas
mov
push
mov
ljmp
cmp
cli
aas
pushf
inc
inc
ror
pop
mov
cmpsb
int
adc
mov
jmp
lods
mov
popf
in
sub
out
imul
mov
jge
mov
repnz
negb
in
cmc
sbb
dec
inc
dec
add
dec
adc
outsb
push
xchg
mov
cmp
shll
jo
mov
mov
xchg
popa
lahf
fstpl
add
fwait
rcll
jmp
test
adcl
rorl
rcrb
pop
inc
mov
inc
gs
shrb
fisttpl
cmc
pusha
lahf
addr16
int
pop
add
repz
adc
pop
in
xlat
mov
repz
cmp
xchg
je
into
inc
aam
adcb
lock
xchg
packuswb
mov
dec
andl
daa
jmp
push
es
mov
mov
mov
sub
pushf
dec
in
push
push
loop
divb
mov
cmp
mov
jl
cmc
push
and
sub
pop
lea
jge
and
adc
push
jge
pop
enter
mov
insl
shll
sub
es
dec
pop
mul
jno
mov
sub
repnz
out
cmp
mov
push
testb
xlat
mov
sub
cmp
clc
xor
emms
in
pop
mov
mov
les
add
movsb
and
xor
mov
adc
insl
xchg
lret
xchg
inc
sub
jmp
mov
xor
dec
loop
cmp
inc
inc
push
dec
pop
mov
pop
fsubr
jg
pop
ljmp
add
mov
push
sub
ljmp
xor
or
xchg
sbbb
pushf
wrmsr
js
mov
or
addl
enter
pop
lret
push
pusha
movsl
cld
push
test
loop
mov
cmp
pop
ljmp
and
cmpsb
out
add
adc
fnsave
rol
or
cmp
in
aad
cmp
fsubrp
or
decl
lock
push
call
test
jns
imul
imul
mov
sbb
adc
xor
mov
cli
sbb
inc
fsubr
inc
imull
push
mov
popf
leave
pop
push
jmp
arpl
fbstp
ret
mov
sub
dec
mov
xchg
arpl
inc
xor
sub
rorl
dec
aam
dec
cs
or
mov
bound
xchg
or
das
movsl
xorb
clc
std
xlat
fdivrs
test
aam
fs
sbbl
les
add
rcl
and
mov
mov
es
call
push
aam
in
jp
inc
loopne
add
mov
fs
mov
fdivrs
inc
sub
shrl
stos
ds
movsb
mov
push
inc
pushf
and
popa
xchg
clc
clc
shll
pop
mov
adc
pop
inc
or
pop
xchg
les
test
ret
fistpll
xchg
sbb
add
shlb
mov
addr16
orl
stc
popf
add
mov
roll
pusha
lret
out
dec
dec
hlt
push
ret
int3
mov
xor
xacquire
inc
cmp
and
push
xchg
and
sub
ret
mov
xchg
sahf
popf
xchg
mov
mov
inc
mov
push
push
das
xchg
or
mov
movsb
inc
scas
ror
fistpl
add
sbb
mov
xchg
adc
aaa
xchg
add
fldcw
push
cmp
jg
sub
sbb
test
or
jbe
in
test
rorb
dec
mov
pop
push
add
cs
outsb
imul
push
addl
or
js
stos
cmp
mov
loope
shlb
jbe
int3
jb
loopne
aad
jae
inc
jle
jecxz
rorb
mov
pop
mov
into
pop
mov
jg
insl
cmp
test
adc
jno
lret
aaa
aas
push
addr16
enter
ja
cmp
lods
xor
or
mov
in
cwtl
or
loop
pop
mov
jl
push
imul
xor
inc
dec
push
lret
cmp
push
cmc
dec
cmp
sbb
out
call
fnstenv
mov
jmp
xchg
out
mov
lahf
jae
mov
ss
das
int
jbe
ss
aad
xor
pop
xlat
imul
bound
mov
cmpsb
inc
xchg
popl
xchg
and
js
scas
mov
mov
in
mov
loop
cltd
mov
js
aad
jnp
movsl
cli
xchg
pop
aad
add
ss
mov
shlb
out
xchg
lcall
mov
or
jne
add
fwait
mov
ss
shl
mov
lret
add
xor
enter
test
cmpsb
inc
test
adc
arpl
adc
rcl
idivl
pushf
hlt
mov
aas
imul
loope
jp
movsl
sti
dec
jne
cmc
scas
add
ret
addr16
inc
mov
cmpsl
sub
or
cmpb
push
rolb
pop
or
xor
mov
or
das
and
repz
aaa
push
or
xchg
fcomp
jge
jle
cltd
loope
and
daa
jg
sub
push
push
dec
mov
cwtl
in
lahf
sbb
shr
insl
fs
lahf
sbb
sub
push
push
pop
daa
mov
ds
popw
addl
ja
mov
fwait
lods
jmp
addl
cwtl
pop
es
ret
pop
sbb
add
scas
jb
adc
mov
push
bound
sarb
scas
adc
jmp
je
pop
mov
mov
push
loope
fildl
popf
dec
nop
pop
xor
arpl
mov
fidivl
jne
fistpl
inc
shlb
int3
and
lods
inc
mov
daa
xchg
int
jns
adc
dec
or
sub
pop
int3
ljmp
mov
pop
mov
outsb
test
scas
mov
mov
enter
lock
add
stos
data16
jl
enter
leave
adc
mov
popf
fwait
sub
arpl
hlt
mov
mov
jne
or
outsl
xor
sbb
shl
fimuls
or
jns
stos
stos
addl
and
jae
scas
out
push
push
outsb
movsl
scas
cltd
movsb
adc
pop
scas
mov
lods
std
push
lret
roll
push
dec
jp
add
mov
mov
sarb
pop
mov
xchg
inc
pop
xchg
mov
ret
push
js
dec
dec
push
cmp
test
repz
and
mov
incb
dec
imul
test
enter
mov
ljmp
into
jnp
mov
fldcw
js
xchg
sub
and
sbb
imul
mov
movsb
das
xchg
cmp
dec
adc
push
jecxz
sahf
nop
push
outsb
jmp
fstl
bound
add
or
lods
mov
lea
sarl
jnp
dec
cmp
scas
pop
pushf
and
mov
inc
stc
cs
mov
test
push
int
cwtl
add
sarl
daa
jmp
fldl
xor
in
cmp
fistpll
xchg
or
mov
xchg
sbb
out
out
or
aad
or
push
fdiv
pop
setne
inc
rol
xchg
jns
pop
mov
cltd
icebp
dec
xor
inc
jno
sbb
enter
outsl
mov
push
jno
xchg
aaa
mov
outsl
adc
ja
mov
pusha
lret
push
out
inc
fwait
sbb
outsl
mov
pushf
dec
dec
adc
mov
or
mov
sub
stc
sahf
mul
fistpll
sub
cltd
mov
mov
sbbl
js
fstps
fsts
sbb
inc
mov
repnz
pushf
dec
out
lcall
adc
popa
xchg
adc
fimuls
adc
testl
shll
pop
ficoms
dec
loopne
cmp
cmp
in
dec
daa
jg
ret
push
clc
mov
mov
sub
lret
stos
inc
aam
and
cmc
in
scas
aam
loop
dec
jns
xchg
lret
mov
push
push
cwtl
insl
xchg
lods
jp
cli
ror
idivl
or
push
fs
in
pop
dec
cmp
das
xor
mov
fwait
pop
add
jge
mov
aaa
imul
pop
fmulp
inc
sbb
pushl
lahf
jns
sbb
ljmpw
mov
testb
sbb
push
cmp
subl
dec
icebp
mov
sbb
js
daa
inc
mov
clc
std
ret
fcoms
cmc
mov
push
les
and
ret
cld
lods
int3
mov
ret
pusha
int
adc
dec
pop
test
jecxz
jns
mov
pushf
push
mov
fdivs
xchg
lea
inc
inc
dec
movsl
or
push
xchg
xor
push
sbbb
push
sub
subb
mov
aad
lret
mov
ss
sar
je
cli
mov
test
or
mull
stos
jno
pop
pop
ror
cltd
push
lods
stos
dec
mov
imul
aaa
pop
xchg
ds
das
sahf
push
mov
cmp
and
imul
push
aas
mov
adc
pop
push
inc
adc
outsb
xor
pop
insb
and
pushf
add
sbb
xchg
sub
mov
pushf
cmp
popl
xchg
inc
std
mov
and
loop
movl
std
dec
pusha
in
int
jnp
in
repnz
aaa
movsl
mov
cmp
ss
lret
ret
dec
mov
popa
cmp
test
mov
bound
push
cwtl
aam
dec
or
dec
mov
insl
sbb
pop
and
bound
sti
pusha
jno
sti
enter
insb
inc
xchg
cmp
mov
lahf
or
dec
mov
push
call
mov
ljmp
fwait
pop
inc
mov
lcall
cld
lods
or
pop
scas
pop
jb
ja
inc
bound
pop
lcall
movsl
ret
out
mov
jae
scas
in
inc
lcall
leave
mov
mov
dec
jb
std
pop
nop
mov
adc
jb
repnz
stos
shlb
push
inc
push
imul
sti
test
mov
movsb
mov
jo
xchg
cmp
imul
jecxz
cmp
imul
les
mov
dec
pop
das
jmp
sbb
neg
adc
inc
inc
cmp
xor
bound
adc
pop
dec
aas
je
aaa
sbb
lds
pop
xchg
bound
mov
inc
cmp
or
cwtl
xor
jnp
push
pop
adc
mov
enter
loope
cmp
xchg
cmp
jne
jnp
lcall
les
rcrl
scas
bound
cmp
test
or
jecxz
loopne
out
fisubrl
cmp
push
mov
xchg
pop
call
mov
mov
fs
andl
in
pop
fstps
dec
icebp
inc
cld
sub
pushf
mov
sahf
cltd
idiv
xor
sub
xchg
push
sub
jnp
lods
pop
mov
jns
cmp
shll
cmpsl
outsb
insl
gs
xchg
out
add
shll
out
aas
pop
sahf
lahf
ror
andl
out
aas
lret
aas
sahf
add
out
pop
sub
jbe
mov
mov
xor
inc
sub
mov
cltd
mov
movsb
pop
rolb
cmp
push
arpl
dec
lahf
and
sub
pop
aaa
push
test
jecxz
adc
call
aam
jg
leave
and
aam
adc
cmp
mov
cld
cmp
loop
test
push
or
push
jmp
pop
jae,pn
xchg
push
outsb
je
lock
arpl
jns
mov
shrl
dec
jb
lahf
popf
xchg
popf
imul
and
ret
insl
and
inc
add
jae
fcompl
sarb
inc
leave
icebp
inc
addr16
iret
mov
bound
js
out
lods
dec
and
fisubrl
sbb
popf
lea
test
nop
pop
add
pop
xor
ja
dec
or
mov
xchg
sub
xchg
mov
int
xlat
push
push
loop
mov
jbe
cltd
add
pop
xchg
push
scas
stos
dec
or
cmc
lahf
addr16
out
and
sbbb
push
jle
icebp
test
pop
sahf
inc
or
test
fs
mov
pusha
mov
xor
shlb
loop
out
cmpsb
loope
and
pop
xchg
insb
icebp
mov
call
dec
enter
pop
dec
lret
cs
repnz
pushf
inc
pop
sub
jo
add
nop
lods
jle
cs
sahf
lahf
sbbb
cltd
push
and
inc
add
push
iret
out
lods
outsl
sahf
mov
mov
test
hlt
xchg
and
xchg
mulb
sbb
data16
cmp
rorb
fdivs
jae
je
lods
jo
cmp
pop
icebp
dec
dec
ret
xor
lcall
out
and
xchg
add
arpl
cmc
outsl
xchg
mov
mov
jp
mov
test
pop
icebp
inc
xor
mov
jmp
dec
xchg
stos
pop
test
sub
xchg
lds
pop
scas
out
jo
scas
sahf
loope
sbb
nop
into
dec
jbe
push
dec
bound
data16
xchg
adc
pushf
pop
sarb
scas
xor
shll
ljmp
mov
push
sbb
push
lret
leave
dec
in
outsb
xor
mov
movsb
jle
pop
adc
push
adc
setl
pop
sub
inc
sbbl
clc
and
push
es
xchg
cmc
lock
iret
xor
stc
xor
sub
dec
jne
xor
dec
movsl
les
bound
in
or
mov
xlat
ds
and
inc
mov
lods
hlt
jmp
mov
lods
out
dec
sub
repz
hlt
imulb
outsl
xchg
jo
xlat
test
popa
push
imul
xchg
add
inc
cmp
cmpsb
repz
pop
push
push
cmc
ljmp
adc
xchg
dec
push
cmp
xor
cmc
xchg
movsl
cmp
shrb
add
sbb
jbe
xchg
inc
out
jbe
test
dec
pushf
pop
in
add
dec
pop
enter
sbb
sub
adc
pop
int3
add
and
push
movsb
loopne
adc
data16
aas
and
nop
add
dec
rorl
rorb
adc
mov
push
idiv
add
int
testl
pusha
mov
ret
addr16
lret
aam
jae
insl
gs
and
mov
xor
enter
add
sbb
sub
dec
andl
jbe
shl
inc
cli
or
adc
rol
pop
xchg
adc
mov
test
pop
test
push
mov
das
cli
test
inc
fucomip
loopne
fs
mov
xchg
sub
jo
add
int3
xchg
jae
dec
and
and
and
inc
xlat
clc
loope
pop
pop
stc
stos
sahf
mov
aam
mov
retw
rcll
sub
xlat
mov
jo
gs
sbb
shr
pop
das
pop
dec
mov
sub
aam
mov
add
xchg
or
lock
mov
das
and
xor
jo
in
xchg
cmpsl
iret
aad
ljmp
fdivrl
int3
mov
xlat
ja
jge
cmpsb
test
aad
push
and
dec
rcrl
mov
aas
ss
out
xchg
pop
stos
or
es
sbb
lods
cmp
sbb
icebp
adc
add
stos
gs
mov
pop
xchg
pop
jg
xor
fdivl
pop
adc
mov
aad
push
xlat
outsb
rorb
sub
adc
iret
imul
sub
stos
adc
push
xor
fimull
movsl
mov
jmp
add
mov
fstpl
loope
sbb
or
imulb
cmp
out
adc
fbld
clc
pop
xor
ljmp
add
push
daa
adc
adc
add
insl
mov
mov
adc
call
add
mov
pop
fisttps
imul
test
mov
jecxz
push
add
mov
cmp
pop
push
pop
mov
ficompl
iret
repz
dec
int3
xchg
and
jp
pop
aas
push
call
imul
fisubl
cli
scas
sbb
mov
outsl
dec
mov
outsl
mov
push
bound
cmp
icebp
loope
fldenv
add
inc
lock
inc
iret
out
sarb
lahf
ja
push
js
and
and
testb
addr16
aam
loopne
je
cmpb
cmc
xchg
enter
ja
xchg
in
jmp
jne
mov
sti
fisttpll
repnz
sahf
jg
add
cmpb
call
sbb
push
imul
imul
inc
inc
sub
test
rorb
sub
bound
ljmp
popl
lds
sub
lds
mov
or
add
in
lods
cmp
and
mov
add
dec
xchg
shl
mov
movsb
mov
pushf
mov
negb
mov
lea
hlt
jmp
pop
cmc
das
xchg
mov
icebp
mov
imul
in
divl
mov
sti
mov
mov
push
or
dec
iret
xchg
js
dec
mov
xor
imul
leave
lahf
ficoms
stos
cmp
mov
push
fiadds
subl
insb
adc
dec
and
nop
dec
dec
xchg
cmp
ja
das
mov
pop
jne
xchg
icebp
sarl
xlat
pop
sarb
jno
mov
dec
jns
dec
imul
mov
aaa
int
ljmp
rorb
jo
mov
xorl
rorb
fisttpll
push
test
mov
lea
insb
outsl
fistpl
dec
in
cld
and
or
mov
clc
pop
pushf
push
add
dec
ss
mov
addr16
push
and
test
ja
mov
cmp
sub
jnp
cmpsb
dec
pushf
out
or
stc
fcoms
stc
sti
enter
inc
into
and
inc
xchg
stos
add
shll
or
loope
cmp
mov
sbb
ret
pop
aam
mov
xor
lcall
imul
push
das
push
inc
fsubl
and
mov
dec
push
mov
popf
test
cmpsl
push
xchg
sub
loope
ja
sahf
dec
xchg
arpl
ljmp
leave
cld
test
xorl
dec
clc
sbb
jle
enter
dec
in
jo
test
sub
jg
mov
lea
movsl
ja
fadds
iret
xchg
pop
cmp
xor
rorl
pop
mov
inc
mov
idivl
jmp
int
or
or
mov
test
lahf
test
sub
sti
inc
mov
sbbl
leave
enter
aam
adc
xchg
mov
int3
mov
adc
mov
js
mov
test
xchg
repnz
lahf
mov
cmp
stos
push
mov
pop
int3
lea
mov
and
repnz
in
xchg
dec
jmp
pusha
add
pushf
sti
repz
lods
orb
lods
mov
daa
addr16
push
xchg
fwait
add
mov
repnz
insl
adc
bound
pop
xchg
push
popf
ja
cli
inc
jno
mov
lock
shrl
out
cmpsb
int
cwtl
fstpl
dec
stc
cmp
int
jg
fistpl
out
pushf
push
test
out
mov
pop
jno
mov
js
mov
sbb
add
icebp
xor
sbb
sub
mov
stc
scas
jb
mov
jae
adc
ud2
shll
popa
dec
xlat
mov
push
dec
lods
mov
les
lods
jno
fdivs
or
inc
xchg
scas
push
mov
add
pop
loopne,pn
gs
jge
gs
mov
push
inc
xchg
mov
je
xchg
xchg
int
sarl
int3
xor
sub
and
cltd
cmp
ljmp
mov
and
jbe
sbb
rcll
xor
jo
imul
push
xchg
xchg
adc
adc
stos
inc
push
leave
jge
cli
test
stc
mov
sti
mov
xor
mov
push
mov
imul
bound
inc
andl
stc
add
and
popf
fcmovnb
push
jbe
xchg
push
add
daa
or
lock
or
stos
mov
xchg
out
clc
decb
xlat
jo
jl
das
sbb
insl
jbe
jbe
dec
sbb
push
mov
nop
call
ror
lea
mov
mov
subl
jle
mov
outsb
pop
xchg
dec
xor
in
jne
adc
push
jno
mov
loope
sahf
nop
mulb
push
pop
std
fstpt
jns
jno
fdivl
pop
xor
pop
roll
cs
int
out
sahf
filds
pop
sub
dec
lods
xchg
lret
xchg
jbe
sbb
dec
les
mov
lock
push
loope
in
mov
sub
dec
int3
lods
jle
movb
sub
cltd
or
cs
or
scas
cmp
jp
push
mov
loopne
into
push
sbb
icebp
xchg
cmpsb
adc
pop
jns
andl
mov
enter
cmp
cwtl
cmp
gs
xchg
cmpsl
cmp
sahf
adc
bound
data16
jo
add
imul
dec
test
ficoms
and
shlb
sbb
pop
cmp
jg
rcl
insl
add
xchg
sbb
imul
in
push
mov
mov
mov
adc
mov
in
xchg
aam
cs
mov
in
add
adc
pop
adc
cmp
mov
xor
data16
roll
cmp
cmp
popf
mov
adc
call
xchg
pop
jnp
adc
ss
pop
fwait
stc
and
push
popf
shlb
movsb
lods
insl
in
adc
nop
adc
push
xchg
ret
xor
cld
cmc
je
scas
ss
pop
jo
mov
push
fwait
xor
daa
filds
das
ret
xchg
insb
jmp
xchg
popf
loop
mov
call
inc
add
test
push
sbb
push
addr16
xchg
shrl
stos
pop
inc
lret
xorb
or
ret
mov
cltd
add
jge
inc
mov
imul
sti
stos
shrb
nop
push
loop
out
sbb
leave
pop
push
fs
cmp
push
or
lret
pop
add
mov
mov
out
adc
fcmovnbe
xchg
gs
addr16
or
sbb
push
inc
xor
imul
mov
jmp
dec
sub
orb
hlt
lods
bnd
popl
add
push
sahf
stos
dec
movsb
repz
and
clc
sarb
inc
xchg
ffreep
or
jno
outsb
inc
out
outsb
in
shrl
cld
rcr
mov
push
jg
lock
jnp
stos
fstpt
je
add
sub
mov
sub
pop
fcom
xchg
fstl
popf
stos
movsb
inc
sub
sub
add
movsl
pop
fnstsw
add
popf
leave
lret
dec
xchg
hlt
pop
adc
xchg
jg
lea
cld
dec
push
dec
stos
repz
inc
adc
int
mov
jp
faddp
inc
cmp
mov
bound
aad
jmp
bound
ljmp
mov
wrmsr
inc
shll
lcall
cli
mov
ss
and
pop
cmp
callw
popf
arpl
mov
jno
xchg
jl
and
xor
popf
xchg
sbb
add
mov
add
mov
pop
loopne
mov
int
and
dec
add
mov
ja
sbb
sti
andb
dec
and
incb
bound
or
mov
into
pop
mov
cli
jge
aaa
dec
sbb
add
ja
imul
adc
cwtl
mov
xchg
aam
pop
add
adc
sub
sbb
punpckhwd
mov
jge
shlb
xor
ja
mov
sbb
inc
std
mov
shl
lcall
pop
fs
cmp
jge
fistps
pop
pop
decl
push
popf
std
lock
cld
test
aas
inc
fidivrl
dec
movsl
jge
pushf
ds
je
imul
xchg
stos
push
mov
add
sbb
out
jle
xchg
pop
dec
lods
mov
lret
adc
mov
rcrb
jmp
mov
sbb
and
in
mov
sbb
xchg
sbb
jg
lahf
mov
xorb
push
sarl
jno
add
outsb
jb
test
out
and
fisttpl
loope
jl
bound
pushf
pop
mov
loopne
das
add
cmp
addr16
cmp
cmpsl
fldt
xchg
mov
jl
movsl
adc
sub
icebp
sub
xchg
enter
pop
jl
call
jb
sub
sahf
leave
dec
into
push
jno
nop
mov
int
lahf
dec
dec
das
sub
mov
sahf
sub
mov
aas
ret
mov
and
js
mov
int3
pop
test
test
cmpsb
inc
cltd
jl
das
and
leave
outsl
add
jecxz
sub
std
and
push
xchg
ret
mov
cmp
insl
popa
mov
ds
ljmp
scas
mov
in
insb
pop
leave
fnstenv
mov
xorl
lea
and
mov
sub
xlat
xor
inc
clc
sbbl
jae
repz
pop
ds
pushf
mov
lcall
dec
dec
xchg
lcall
lea
xchg
repnz
lods
pop
loope
icebp
mov
mov
jg
pop
xchg
cmp
xchg
cwtl
cmpb
mov
mov
fdivr
mov
xlat
sub
xchg
adc
pop
adc
or
leave
pop
xchg
cs
aas
push
push
inc
inc
cli
jmp
xchg
out
xchg
test
cmpsb
jmp
shrd
or
add
out
sub
cmpsb
sahf
imul
mov
sarl
outsb
mov
inc
mov
xchg
pop
outsl
das
mov
push
dec
icebp
mov
inc
dec
inc
sub
sahf
xchg
icebp
subl
out
scas
jle
fcmovnu
push
addr16
add
cmp
outsb
jb
in
push
jo
cmp
fwait
mov
dec
or
adc
aad
fnstcw
mov
jmp
xchg
cmc
scas
bnd
sbb
cwtl
jp
popf
xchg
add
lea
mov
rcrl
ss
int
shrl
dec
ret
inc
sahf
aas
sahf
or
mov
add
push
rolb
mov
cmpsl
pop
xchg
xor
rol
adc
add
xor
ficomps
outsl
sub
mov
imul
loop
test
pop
inc
xor
int
loopnew
mov
rorl
mov
dec
cmp
push
sub
in
pop
jmp
push
in
fisubrs
pop
cmpsl
fistps
movsb
pop
fmull
insl
dec
andb
cmp
ss
and
xor
jmp
sbb
in
push
xchg
iret
aam
pop
mov
repnz
cmp
xlat
lock
xor
lret
repz
lahf
and
add
jb
xor
std
or
pop
push
int3
xchg
jb
push
sub
out
cmp
sub
in
lods
xor
das
inc
cwtl
or
add
call
cmp
stc
dec
ljmp
dec
fisubl
ficoml
addb
lods
imul
xchg
jp
enter
mov
pop
inc
push
pop
das
mov
or
shll
sbb
jmp
and
jmp
incl
sbb
pop
repnz
dec
lcall
pusha
pop
pop
push
jmp
popa
fldl
xchg
push
movsl
xor
xchg
arpl
test
je
mov
pop
scas
jle
jae
lods
sub
or
jmp
sbb
jo
mov
rol
push
mov
sarb
les
das
bound
jbe
idivb
icebp
fwait
pop
cld
test
adc
push
cmc
lods
push
push
and
add
fdivrs
popa
or
test
pop
push
and
stos
int3
mov
cmp
and
pop
jo
in
enter
push
cwtl
mov
movl
jae
movsb
popa
test
mov
sbb
pop
movq
shrb
adc
dec
push
adc
xorl
mov
fnstcw
je
leave
arpl
jp
jmp
xchg
fisubrs
icebp
lahf
add
popa
insl
xor
sbb
js
test
cmpsb
jbe
xchg
dec
mov
stos
les
sub
sub
lock
cmp
or
pop
adc
stos
mov
popf
idivl
daa
fistpl
jmp
lahf
lods
and
mov
cltd
push
push
arpl
out
rolb
cmp
push
loope
in
mov
outsb
cmpsl
inc
jb
vpshab
out
aas
mov
xchg
into
jmp
mov
xchg
xor
lock
imull
pop
stc
push
out
or
fwait
test
in
jmp
add
cmp
inc
push
push
jle
and
push
xchg
mov
jl
pushf
insb
mov
jmp
xchg
jle
std
es
addb
cpuid
push
mov
stos
scas
inc
push
mov
sub
in
test
sbb
mov
adc
push
push
addl
in
stos
pop
adc
mov
js
adc
ljmp
inc
insb
push
cmpsb
mov
pop
add
sbb
in
mov
jo
ja
xorl
push
push
pop
mov
sbb
lock
fadds
dec
pop
stc
xor
pop
loop
dec
mov
cmpsb
pusha
outsl
dec
fldenv
or
lret
mov
testb
xlat
stos
dec
adc
dec
mov
dec
cltd
inc
or
repnz
clc
sbb
lods
pushf
or
out
mov
mov
lea
fldenv
cmp
aaa
jl
xchg
in
sbb
push
add
and
fstps
mov
push
mov
mov
xchg
aam
pop
mov
xor
dec
iret
aaa
sbb
push
mov
and
mov
das
lods
mov
std
pop
icebp
adc
dec
mov
adc
outsb
aam
xor
sbb
adc
push
pop
push
repz
and
add
out
jo
xchg
in
push
sub
xchg
dec
xor
repz
push
xorl
pop
mov
loope
push
adc
ficoml
std
mov
pop
xor
mov
fwait
ds
movsb
mov
rcr
sbb
jl
sbb
into
cmpsl
mov
sti
ds
push
lods
mov
pusha
and
in
in
lock
aam
push
loope
add
push
sbb
xchg
sti
iret
xchg
outsb
loop
inc
sbb
aaa
pop
icebp
inc
test
mov
or
and
mov
cmp
or
nop
or
or
jnp
in
add
pop
push
adc
clc
aam
sbb
or
in
stos
xchg
jnp
or
xor
pop
jge
push
xchg
je
sbb
fdivrl
mov
mov
test
int3
mov
and
lock
jmp
inc
shll
push
jle
sbb
ja
adc
push
inc
test
pusha
iret
aad
movsl
xor
iret
jnp
mov
sub
pop
arpl
inc
cs
daa
sbb
adcl
imul
ss
xchg
jge
js
mov
pop
add
loop
div
jle
shl
fisttpl
test
imul
cmc
imul
dec
mov
xor
add
or
stc
push
dec
rcl
out
out
subl
sub
jae
sbb
sub
jb
cmp
scas
xor
sbb
pop
adc
clc
dec
fcmovb
xor
sbbb
xor
mov
rol
sbb
addr16
and
js
fcom
xor
int
xchg
cld
pop
cmp
push
lods
test
test
mov
fisubs
inc
xor
into
mov
sub
aaa
push
jns
push
adc
xor
xor
add
divl
xchg
cmp
bound
jg
inc
scas
dec
jp
dec
inc
dec
xor
push
test
mov
mov
ja
cltd
adc
or
inc
lods
fs
lea
shll
pop
mov
sarb
movsl
loope
int
jo
and
cmp
mov
xchg
lds
mov
mov
push
and
fldcw
push
dec
xchg
ss
je
pop
aaa
out
lcall
movsb
push
adcl
mov
int3
push
in
sahf
push
mov
push
rcl
or
pop
xchg
in
xor
lret
fcmovnbe
push
fucom
jmp
das
mov
pop
xor
xor
add
fildll
test
pushw
sub
lret
push
cld
add
inc
jl
push
or
or
in
lods
pop
jne
mov
pop
xchg
stos
stos
mov
lret
aaa
cmc
push
push
sti
aas
les
sbb
in
dec
push
push
dec
sub
jl
adc
andb
xor
pop
and
xchg
scas
test
xchg
in
shlb
or
sub
inc
aam
add
push
cmpsb
xchg
xor
and
stc
adc
or
push
ja
jae
xchg
loopne
test
mov
fldcw
push
out
seta
inc
subb
cmovg
xchg
repnz
cmpsb
addr16
and
sbb
xchg
aam
push
sti
mov
xor
stos
mov
jge
push
test
daa
loope
das
cmpsb
pop
mov
lds
sub
mov
mov
dec
mov
rclb
mov
dec
adc
mov
xor
or
mov
sub
popf
adc
iret
das
lret
add
push
and
mov
pop
in
sub
in
inc
repz
push
dec
aad
sbb
pop
mov
inc
sbb
inc
mov
lret
pop
sar
sbb
bound
xchg
xor
jecxz
push
dec
jns
enter
or
mov
das
sbb
movsb
cmpsl
sub
pop
sbb
std
movsb
ja
lock
mov
insl
fmuls
or
cmc
dec
mov
aam
jge
jl
dec
lods
inc
xor
inc
icebp
cmc
pop
or
or
fdivl
mov
imul
cs
add
insb
mov
mov
shl
test
movsb
out
add
push
and
mov
lret
mov
mov
dec
or
into
and
pop
insb
filds
adcl
jae
and
sub
jecxz
pop
add
stos
pop
js
ficoml
or
lods
jne
aas
cs
mov
xchg
xlat
jb
ficompl
dec
sarb
cwtl
sub
daa
fwait
lods
mov
jecxz
sarb
cmp
in
mov
int3
push
imul
push
in
pop
repnz
adc
push
dec
rorb
and
es
fsqrt
das
sub
out
sahf
fsubrl
into
test
jg
in
push
dec
sbb
cmp
jnp
in
mov
ret
jnp
cld
repnz
das
xlat
jne
in
mov
mov
fsubrs
lret
movsb
xor
mov
mov
andl
rcrl
arpl
test
adc
rcrl
arpl
pop
push
inc
push
inc
or
pop
lods
adc
lret
inc
mull
cmpsb
sub
sarb
aad
dec
push
add
push
fsubr
push
xchg
icebp
xor
lret
xor
das
push
add
fs
push
scas
clc
fs
push
fwait
mov
test
ljmp
or
and
andb
xchg
imul
ds
mov
add
shr
jns
lahf
xchg
adc
sti
test
dec
and
mov
mov
cmp
pop
adc
out
ffree
pushf
adc
mov
jp
insl
in
cs
out
and
jl
add
xchg
outsb
mov
sti
or
mov
lock
inc
mov
loop
and
scas
dec
sub
out
add
inc
cwtl
cmp
std
xchg
cld
jecxz
cmc
movsb
adc
xor
and
scas
adc
lods
imul
test
daa
mull
xchg
add
lea
mov
into
popa
cmp
sbb
xchg
int3
mov
dec
dec
dec
pop
dec
push
and
xchg
and
jp
mov
mov
fisubl
push
test
enter
adcb
mov
mov
loope
jle
jg
loope
and
in
int
lret
sbb
cmp
inc
cmp
jae
fstpl
fs
fwait
mov
cmp
push
data16
outsb
lret
out
shll
sbb
add
lahf
sbb
lock
fildll
mov
mov
arpl
pop
sub
and
js
jg
sub
sti
jg
adc
clc
push
pop
mov
sar
pusha
loope
cmp
xchg
sbb
ret
mov
and
mov
inc
shrl
hlt
jo
or
jo
jp
jbe
js
xchg
clc
ljmp
pusha
cwtl
fsub
dec
mov
inc
cmpsb
rcl
int3
je
movsl
sbb
sbb
popa
sbb
imul
pop
lods
in
xchg
fcmove
sarl
mov
mov
div
add
sbb
or
mov
gs
lret
xchg
data16
lods
mov
or
push
cmp
mov
or
mov
pop
or
rclb
mov
ja
jo
test
addb
push
out
popf
es
add
test
adc
mov
ds
nop
lret
mov
jo
sbb
mov
mov
jno
pop
lods
push
or
leave
mov
das
repz
add
jle
add
cmp
cli
cld
jmp
push
sbb
jmp
mov
pop
shrb
pop
dec
fnsave
dec
xchg
mov
mov
adc
jno
hlt
jp
or
pop
addr16
sahf
fisubl
push
xchg
sbb
and
pop
scas
push
jb
cmpsl
sbb
jle
loop
or
cmp
xorb
ror
jns
fwait
xchg
fwait
and
and
lahf
lret
test
jl
mov
in
int
mov
and
neg
ds
fiadds
add
data16
test
cs
pusha
loope
pop
movsb
jne
lret
fisubrs
and
fiadds
frstor
cwtl
mov
sub
rclb
mov
cmp
mov
scas
addr16
popa
jge
xor
lahf
lods
pushf
xchg
movsb
icebp
mov
adcl
fmull
mov
andl
add
imul
test
loop
pop
mov
popf
xor
shll
xchg
aaa
push
in
fsubs
jo
addl
pop
push
lods
inc
orl
scas
out
and
cmp
test
clc
fistpl
xchg
sub
pop
dec
jmp
lods
xchg
scas
xchg
dec
sbb
sub
xor
and
xchg
out
stos
dec
out
lock
fdivs
push
pop
mov
cs
jae
and
cwtl
insb
jb
push
pop
mov
mov
movsb
or
rcrb
xchg
mov
ds
cld
xchg
mov
mov
lahf
call
stos
sub
aam
mov
fimuls
mov
ret
cmc
lret
sub
sub
stos
push
rcrb
dec
sbb
pop
mov
lds
mov
scas
adc
ret
lcall
mov
push
mov
jae
jg
incl
mov
jmp
je
andb
cmp
sub
push
mov
mov
lcall
add
popa
fildll
scas
sbb
mov
adc
xchg
sub
push
mov
dec
sub
mov
mov
mov
hlt
stos
jmp
mov
push
and
pop
icebp
pop
and
sub
push
adc
out
sbb
mov
xchg
shl
or
out
inc
jp
inc
add
or
adc
sbb
add
pop
pop
mov
add
jae
popf
roll
in
mov
or
xchg
sub
out
jnp
push
insb
daa
lret
pop
sub
fs
loop
jp
xchg
push
add
stos
and
jbe
mov
lock
add
pop
sarl
sbb
out
adc
mov
lods
outsl
fs
aad
sahf
cmp
imull
and
sub
stc
push
adc
adc
out
adc
and
popa
xor
xor
cmp
or
xchg
fisttps
out
cmpsb
xorl
adc
add
mov
and
xlat
daa
xor
fnstsw
push
push
jle
pop
fwait
mov
mov
mov
jnp
and
mov
dec
cli
rcrb
pop
data16
inc
idivb
bnd
gs
xor
xor
sub
outsb
push
push
sbb
stos
shlb
ds
jl
pop
xor
sahf
xor
inc
gs
adc
dec
pop
and
mov
pop
and
push
cld
pop
xchg
imul
jecxz
xor
xor
and
outsl
icebp
ljmp
jge
call
mov
shrb
test
mov
push
in
es
sti
pop
lods
add
decl
jbe
push
pop
out
pop
lahf
addb
icebp
mov
push
fldenv
sbb
rclb
sub
mov
cmp
push
jge
xor
adc
jae
dec
sub
push
and
je
loope
mov
daa
dec
adc
out
xchg
inc
int
stos
jge
dec
inc
into
repz
cmp
pop
push
sub
cmc
mul
pop
cltd
mov
add
std
stos
ljmp
adc
stos
or
mov
lcall
clc
fdivp
inc
rcrl
int
lock
mov
aam
leave
adc
pop
fisubl
and
xor
adc
mov
cmp
sbb
addr16
lcall
mov
push
and
js
adc
add
sbb
lock
cmp
adc
popl
aam
jecxz
inc
cs
jnp
out
inc
dec
mov
or
cmpsl
sub
fucom
sbb
rolb
xlat
mov
imul
xor
mov
mov
out
addl
push
sub
cmpsl
in
aaa
mov
ret
pop
sbb
inc
enter
add
jge
js
push
add
aaa
arpl
cmp
xchg
jp
jae
ret
and
push
in
adc
xlat
ss
lret
cmc
or
loopne
jae
sahf
add
loopne
repz
sbb
cmpl
adc
sbbb
and
and
pop
jmp
aam
ret
sbb
add
shlb
ss
test
adc
lods
push
mov
sbb
or
jmp
jmp
lods
add
jle
imul
xor
push
mov
pushf
pop
mov
sub
sahf
bound
clc
icebp
cmp
cmpb
stos
mov
lret
adc
ss
inc
mov
enter
icebp
and
movsb
xor
fisubl
es
imul
das
les
icebp
shr
movaps
xchg
mov
loopne
cmpb
add
loope
clc
call
and
cmpsl
jp
stos
js
loopne
xor
out
sbbl
in
mov
push
movsl
jmp
cld
out
cmpxchg
imul
jmp
adcl
sbb
stos
lahf
cmpsb
stos
push
xor
movhps
or
pop
jl
xchg
test
rclb
jns
push
int3
shll
or
movsb
sub
leave
rorb
fstl
push
mov
and
mov
enter
sarb
fcompl
adc
mov
push
dec
int3
add
add
dec
cld
rorl
xchg
xor
fists
push
pop
sbb
jb
lret
mov
jne
mov
dec
and
cmpsb
jl
pop
hlt
mov
mov
and
inc
decl
sub
xor
jb
in
jg
repz
lds
test
add
pusha
je
fnsave
lret
clc
or
mov
jb
mov
aam
jg
int
mov
popf
leave
ficoml
jnp
adc
negl
subl
movsb
sbb
pop
sbb
mov
cltd
xchg
sub
or
jecxz
add
sbb
leave
std
or
dec
mov
outsb
out
pop
pop
xchg
stos
xchg
xchg
lods
in
fbstp
adc
test
sub
or
popf
fisubs
and
fisttpll
cmp
mov
inc
int
lds
sub
hlt
cli
lahf
scas
inc
mov
push
iret
lea
push
movsl
pushf
push
dec
mov
ror
jbe
adc
flds
scas
inc
outsl
jno
inc
add
movsl
mov
out
shll
inc
loopne
pop
ljmp
mov
mov
adc
stos
push
pushf
sbb
pop
les
push
jnp
add
jae
insb
pop
pop
inc
jp
xchg
gs
ss
add
dec
outsb
push
add
ljmp
outsl
jg
xor
mov
and
fs
sub
ret
movsb
or
add
adc
pop
ss
mov
test
mov
sub
mov
xor
stos
ret
dec
movsl
insb
popf
daa
pop
xor
pushf
mov
jmp
fsubr
dec
jne
idiv
mov
ja
aad
popw
je
lahf
jmp
inc
xor
lds
dec
loopne
push
adc
aaa
std
cmp
inc
mov
jns
mov
cmp
inc
or
test
outsl
orb
add
add
and
rcrl
or
mov
loop
xor
jg
inc
push
mov
insl
xlat
adc
mov
repz
pop
mov
lahf
add
adc
lahf
fs
mov
fistps
mov
sbb
push
and
push
pusha
loop
daa
and
mov
pop
xchg
sub
adc
adc
je
sub
push
rclb
sbb
push
lahf
mov
mov
pop
cs
daa
xchg
cmpsl
mul
shlb
fists
loop
inc
les
mov
ss
mov
bound
mov
out
ljmp
pop
cmpsl
mov
mov
adc
push
in
insb
test
pop
or
movsl
lret
sbb
insl
push
jb
out
rorb
mov
dec
cmpl
xor
add
jae
fisubrs
fsubl
push
fwait
mov
arpl
ja
fwait
mov
stos
jae
jecxz
mov
lods
in
mov
xchg
or
mov
push
xor
push
ret
push
adc
jecxz
loopne
cmpsl
jmp
lods
std
mov
xor
push
adc
mov
pop
mov
and
pop
outsl
and
add
pop
int3
add
mov
fimull
adc
cmpsb
pop
lea
dec
je
rolb
js
scas
pusha
jl
mov
pop
inc
fadds
or
movsb
mov
add
adc
adc
mov
or
js
pop
outsl
out
xlat
xor
aad
mov
cmpsl
xchg
ds
dec
mov
hlt
fwait
dec
shl
fucomi
mov
shl
int
fcmove
pop
jp
jle
jb,pn
scas
sub
in
push
push
repz
mov
ss
push
lcall
cmp
pop
xchg
xor
cmc
inc
outsb
xchg
rcr
sbb
pop
aaa
imul
sbb
outsb
out
inc
in
sarl
cmp
das
push
lods
mov
xor
pop
dec
incb
es
negb
jbe
sub
inc
and
and
loopne
outsl
pop
ljmp
jl
fcoml
mov
adc
stos
mov
sub
xlat
push
rcrb
frstor
movsb
lock
xchg
out
dec
xchg
mov
std
sbb
loope
xchg
lock
inc
or
xlat
sbb
scas
addr16
jo
rcrl
daa
ss
push
lods
xor
push
and
sbb
push
mov
sbb
xor
jo
jmp
mov
stos
fucom
mov
lahf
inc
aam
or
les
insl
xor
and
lea
nop
out
popf
cld
push
aaa
mov
cwtl
jp
lock
mov
pop
cwtl
mov
pop
xchg
in
mov
mov
stc
jno
outsb
sub
jg
xchg
gs
add
xchg
out
divb
sbb
enter
push
lcall
dec
xor
sub
fistl
jge
xchg
add
mov
xchg
in
stos
lret
movsb
sbb
mov
adc
js
mov
push
rsm
adc
enter
or
pop
dec
pop
movsl
mov
pop
jmp
jl
mov
xor
cmpsb
cmp
icebp
gs
inc
frstor
push
test
loop
loop
push
sub
mov
pop
inc
ds
mov
aad
lock
xchg
in
or
std
cmp
out
add
sub
push
push
xchg
add
outsb
fimuls
mov
pop
lods
dec
push
xchg
je
mov
ss
cli
ja
jnp
mov
xor
ljmp
shlb
sub
inc
insl
cs
test
or
pop
jecxz
les
xchg
out
enter
xchg
outsb
scas
jns
push
jg
std
dec
pop
inc
lods
or
pop
cmpsb
ss
mov
jg
pop
pop
insb
loopne
cli
stc
push
push
fnsave
cmp
and
sub
mov
ljmp
aas
push
dec
adc
in
fisubrl
bound
jne
clc
cmc
or
inc
mov
mov
mov
or
jnp
fdivp
sbb
pop
js
pop
daa
call
movsb
xor
pop
movsl
fisubl
test
mov
pushf
pushf
test
mov
sbbb
pop
push
insl
mov
ljmp
scas
dec
sahf
dec
aas
mov
xorb
mov
fdivrs
dec
mov
xor
and
gs
inc
dec
scas
es
leave
in
js
dec
mov
cmp
repz
gs
insb
bound
int3
xchg
pop
cs
add
inc
and
or
es
aam
lods
xchg
sbb
pop
xchg
imul
mov
and
cmc
dec
idivb
xchg
std
stc
pop
repnz
imul
aas
sti
dec
sub
lret
std
fisubrs
data16
pop
das
or
push
test
shl
ret
sti
clc
mov
shlb
pop
test
jp
xor
es
mov
jne
mov
jo
sbb
arpl
in
pop
inc
sub
aam
mov
cltd
lret
xor
add
xor
and
dec
jmp
mov
loopne
enter
inc
or
pop
test
aad
mov
sbb
enter
ficoml
cli
cwtl
vsubps
filds
loope
dec
mov
sti
in
jbe
leave
je
daa
or
popa
aad
cmpsb
cltd
aam
or
mov
pop
cmpsl
jnp
movsl
aas
stos
cwtl
sbb
sub
add
in
pop
jp
jl
scas
es
sbb
dec
lret
xor
jecxz
scas
test
jl
xchg
sbb
movsl
inc
xor
dec
inc
pop
cmc
dec
ds
adc
imul
xor
ret
in
or
pusha
pop
lcall
mov
jg
xchg
aas
mov
mov
add
stos
cmp
fdivl
test
mov
push
cwtl
std
add
aas
jbe
shlb
shrb
mov
sbbb
shrl
cmc
dec
jge
ja
imul
scas
xchg
xor
dec
jecxz
mov
pxor
iret
test
in
lret
push
mov
xor
in
cmp
and
scas
into
mov
lahf
mov
fs
jns
push
stos
sbb
inc
xor
jo
sbb
js
push
mov
sub
insb
push
out
dec
jp
jg
nop
mov
shr
push
push
jb
dec
insb
push
movsb
xchg
ret
stos
push
dec
inc
push
orl
mov
inc
mov
mov
ror
pop
mov
loopne
fdivl
mov
cmp
push
jl
subb
mov
xchg
add
jne
push
jl
ja
mov
mov
xchg
push
inc
shr
jnp
cmp
xchg
icebp
scas
lea
pushf
fimull
and
add
sbb
das
sbb
sbbb
cs
sbb
sub
bound
xchg
in
cmc
ds
rcrl
test
shlb
mov
cmpsb
sti
xor
cmp
push
jae
adc
add
inc
jns
dec
push
jg
imul
scas
mov
lret
mov
insl
dec
jne
lock
jp
mov
or
jb
xor
cmp
and
pop
dec
xchg
imul
les
inc
stc
adc
fwait
pop
inc
jae
pop
cs
sbb
mov
cmp
push
popf
pusha
imul
repz
arpl
scas
scas
insb
das
pop
mov
dec
mov
es
cmp
ret
add
inc
shrl
mov
stc
movsb
shrl
ret
push
xchg
sarl
jge
popa
and
cli
inc
rcll
dec
gs
mov
call
repnz
fsts
dec
repnz
pusha
cmp
push
jo
push
sbb
rcll
adc
ljmp
sub
int
mov
or
push
mov
push
xchg
dec
icebp
cld
clc
or
and
rcll
daa
outsl
shlb
jge
stos
cld
xchg
fs
mov
dec
mov
push
lahf
pusha
mov
push
sbb
loope
pushf
jne
sti
or
mov
xor
pusha
popf
sbb
lcall
insl
nop
shrb
aaa
sbbl
push
push
test
jecxz
push
lret
cmc
dec
sub
push
mov
test
call
int
add
mov
mov
imul
fistps
les
pop
icebp
test
pop
add
push
enter
xchg
icebp
add
cwtl
adc
rcrl
push
add
test
aaa
pop
lods
sub
lahf
jle
cmp
ret
mov
je
pop
dec
push
sub
lret
ds
mov
add
not
pop
sbb
xor
dec
mov
mov
ret
scas
ret
xchg
sbb
adc
adc
jo
sbb
bound
int3
test
inc
and
insb
push
inc
lods
int
mov
je
fidivrs
addr16
fwait
aam
pop
adc
es
inc
les
jb
out
jp
jmp
inc
jmp
xchg
mov
enter
sti
repz
jo
mov
mov
pop
pop
fimull
lods
sub
cmp
inc
sub
iret
fistpl
mov
jnp
fucomip
push
call
add
ret
test
nop
lret
inc
cmp
sbb
jae
andb
adc
push
pop
mov
pop
data16
inc
lds
push
inc
into
inc
call
mov
dec
add
inc
and
fwait
and
inc
sub
mov
dec
inc
xor
mov
sarl
mov
inc
aas
rorl
cmp
lods
mov
mov
pop
addr16
sub
dec
shlb
test
fxch
clc
inc
sbb
data16
cmp
or
aad
out
setns
pop
adc
jo
shl
loope
movsl
push
push
xlat
dec
sub
cmpsb
mov
aam
subl
add
jnp
cmpsb
loopne
mov
stos
pop
rclb
inc
xor
rclb
movsb
nop
subb
fimuls
aam
sahf
push
cmp
sub
dec
dec
ja
ficoml
daa
lds
push
xor
dec
shr
inc
in
outsl
subl
notb
cmp
fnstsw
daa
cmp
ret
negl
je
xchg
popf
jecxz
aas
cmpb
xor
cltd
imul
std
test
inc
addb
cwtl
icebp
call
dec
and
jbe
jns
dec
push
lods
out
jno
sub
xlat
out
mov
inc
stc
jecxz
jle
lods
pop
cld
mov
push
xchg
pusha
push
into
push
je
sbbl
shlb
pushf
dec
add
jl
jae
mov
rorb
lret
stc
shrl
xchg
mov
lret
iret
pop
mov
out
cwtl
dec
mov
das
xchg
cmpsb
rcr
mov
out
xchg
jle
sub
loope
jno
rcll
cli
addr16
inc
scas
lahf
mov
es
pfsub
lahf
dec
clc
push
add
movsl
xchg
jno
cmp
xchg
inc
xor
mov
inc
rcll
lock
inc
gs
gs
fiadds
daa
leave
inc
inc
ss
dec
mov
loopne
int3
push
fidivs
cmp
mov
pop
sub
shrb
imul
testb
pop
pop
lret
cmp
in
inc
cmp
push
xchg
hlt
adc
les
movsb
jl
in
xchg
xchg
mov
shll
stos
sub
mul
mov
test
les
rcrl
ja
flds
dec
mov
std
xor
fmuls
mov
mov
fs
and
ljmp
push
lds
jmp
mov
jl
mov
mov
testl
test
mov
lret
xchg
xchg
scas
dec
xchg
lock
cmpsb
xchg
xor
shlb
pop
call
call
ret
lret
sbb
test
imul
notb
jmp
out
faddl
add
movsl
sbbb
lahf
loop
sbb
mov
cmp
lods
push
and
es
into
xchg
movsl
mov
lret
sahf
adc
jecxz
dec
adc
add
mov
mov
cltd
mov
push
cli
rcll
ds
sar
mov
adc
ljmp
loope
pop
int
sub
add
add
push
clc
aad
rolb
xor
jp
std
pop
jmp
sahf
or
rorb
outsb
jecxz
rcrl
mov
outsl
jge
mov
scas
jmp
mov
bound
sub
out
aas
cmp
sti
icebp
lret
leave
mov
mov
add
arpl
mov
cmp
cltd
sub
pop
test
jp
lds
xor
mov
xor
std
aam
sbb
roll
hlt
mov
and
loopne
pop
cmp
and
aam
push
popf
mov
inc
dec
mov
sti
or
cmp
xor
pminsw
subl
adc
push
sahf
push
jecxz
subb
popf
in
xor
test
adc
adc
xor
negl
add
sbb
xor
incl
mov
pop
dec
xor
leave
aam
cli
pop
jns
adc
in
jp
or
xchg
int3
jno
jg
push
mov
repz
dec
js
int
aas
cmp
iret
sbb
popa
outsb
jmp
ffreep
das
jbe
cmpsl
cmc
enter
ljmp
push
icebp
imul
inc
cmpsl
sarb
sahf
stc
icebp
pop
sbb
sarb
inc
jp
outsl
hlt
dec
fcmovb
jns
adc
add
sub
xchg
xchg
out
bound
inc
xchg
sbb
cmp
xlat
xchg
dec
and
mov
push
dec
loopne
sbb
dec
jmp
jle
sbb
mov
sub
lods
push
imul
sub
loope
pop
imulb
lahf
mov
insb
add
fldl
int
jb
dec
inc
inc
lret
stc
xor
leave
pusha
jns
shrl
aam
mov
jne
out
pop
fidivs
ja
or
sarl
das
or
sub
cmpsl
pop
dec
iret
push
adc
mov
xchg
test
or
fucom
push
pop
sbb
sets
jo
test
dec
insb
imul
jnp
aad
push
mov
daa
out
mov
out
out
inc
mov
push
mov
je
and
xchg
js
cs
mov
mov
xchg
mov
mov
pop
inc
repnz
les
sub
jnp
pop
lock
sbb
loope
pop
stos
pop
sahf
icebp
int
outsl
lods
filds
fbstp
xchg
cmc
push
push
cmp
jno
fwait
repz
loope
ss
inc
enter
dec
cmp
pop
stos
addr16
jnp
jl
cmp
jp
mov
mov
jge
pushf
pushl
aam
ss
dec
aam
sbb
mov
fwait
sbb
add
xlat
in
jg
jp
xchg
mull
lcall
stc
testl
mov
pushf
pushf
add
sarl
mov
mov
sbb
push
fisttpll
jecxz
sar
pop
push
sbb
mov
out
arpl
push
mov
daa
push
int3
cmp
fldenv
inc
push
jne
sub
nop
cmova
andl
pop
and
mov
lret
leave
mov
insl
aam
mov
jbe
mov
jl
mov
and
mov
ds
inc
aas
imul
mov
frstor
mov
cmp
das
ljmp
nop
mov
scas
fwait
sbb
sub
dec
inc
sbb
mov
lcall
in
sub
into
push
dec
mov
mov
movsb
ds
dec
jae
sub
add
sub
nop
cmp
movq
int3
repnz
nop
or
push
lock
pop
mov
inc
mov
inc
sub
jge
pop
ss
xor
pop
push
mov
icebp
shr
push
push
mov
adc
and
sub
loopne
sahf
jmp
rcll
and
mov
mov
and
mov
aas
mov
adc
mov
pop
movsl
push
out
in
sbb
push
mov
int3
mov
adc
adc
int
xlat
xor
jle
sub
mov
mov
mov
cmpsl
movsl
adc
push
dec
ret
lahf
mov
xchg
xchg
test
mov
inc
aam
cwtl
or
cmp
repnz
hlt
cmp
call
and
jge
sbb
test
out
movsl
lock
push
dec
pop
insl
cmp
cltd
cli
in
das
rcrb
ss
test
repz
inc
repnz
pop
jle
xor
mov
and
mov
jg
mov
push
jno
sbb
pop
xor
mov
xchg
mov
repnz
jae
dec
cmp
cltd
adc
adc
sub
inc
addr16
aad
push
adc
inc
enter
and
ljmp
das
or
mov
mov
xor
mov
in
sub
adc
pusha
imul
jns
hlt
movsl
adc
clc
dec
inc
fistpl
fcompl
mov
adc
mov
or
push
xchg
loop
inc
test
and
jmp
xchg
or
or
jp
cmp
imul
js
or
fbstp
daa
xor
out
and
lret
adc
xchg
or
mov
push
xor
sub
and
mov
or
dec
push
push
and
in
adc
shlb
mov
mov
xor
cwtl
lahf
fdivrp
jge
lcall
mov
ret
xchg
and
js
inc
in
in
cmp
mov
or
and
and
in
sbb
call
jno
data16
lods
mov
cs
in
sahf
xchg
xor
inc
and
cli
xor
pop
mov
lds
jbe
stc
into
insl
push
je
pop
cwtl
fidivrl
or
cmpsl
pop
cld
in
add
xor
pop
xor
xor
ljmp
mov
data16
push
xchg
fs
scas
pop
mov
daa
dec
push
mov
sub
mov
rolb
in
xchg
push
mov
popf
je
mov
jge
scas
sbb
and
adcl
cmp
loope
lret
xchg
pop
sub
paddusw
movsb
int3
mov
pop
iret
xor
add
cmp
ja
insb
fstl
and
mov
dec
cmp
push
shrl
into
fdivrp
xor
int3
cmp
fldpi
and
ret
xchg
dec
repnz
imul
aam
sub
add
mov
and
sbb
jne
std
mov
push
pushf
sub
sub
cmp
xor
test
lds
das
inc
push
xchg
sarl
lcall
or
inc
jbe
sarb
fsubrl
sbb
push
push
ret
ss
mov
les
lods
pushl
adc
sbb
call
imul
adc
push
dec
and
aas
xlat
scas
cmpsb
iret
mov
mov
push
stos
test
arpl
notl
mov
in
dec
sub
dec
mov
in
xchg
or
cmpsb
mov
jo
xor
ja
movsl
fnstsw
andb
int
push
test
les
int
mov
xor
popa
popa
repnz
sub
sbb
in
adc
imul
cmpsl
aaa
and
lret
xchg
adc
call
add
insb
cwtl
js
sub
ja
push
mov
daa
lcall
mov
push
add
fptan
ljmp
adc
adc
icebp
test
add
lcall
xchg
or
pop
jge
lock
jnp
pop
leave
popf
std
jl
fadds
sbb
fxch
inc
fcompl
inc
int3
aad
sbb
mov
xor
out
mov
inc
andb
lods
xor
inc
cmp
xor
imul
hlt
imul
outsl
add
inc
xor
gs
in
mov
lods
sarl
movsb
dec
mov
add
cmp
jge
mov
and
sub
sarb
mov
enter
sbb
iret
outsl
and
mov
push
imul
push
xor
outsl
imul
mov
and
cs
inc
add
mov
sub
push
aas
repnz
mov
push
cmpsb
pop
xor
xor
insb
sub
das
lahf
mull
xor
xor
add
mov
stos
push
and
out
sti
xchg
mov
sti
pop
lods
in
cmp
push
daa
jo
xor
and
push
mov
repnz
dec
adc
pop
inc
fwait
lods
mov
loope
xor
roll
jo
orb
shll
dec
xor
xor
fidivs
loope
les
and
sbb
dec
js
push
outsb
jge
mov
xchg
insl
movsl
dec
cmp
xchg
cmp
sbb
daa
shlb
xchg
push
inc
xor
imul
or
or
pop
pop
push
orl
sti
mov
iret
mov
stc
aaa
dec
cmpb
pop
popa
insb
stos
fbld
lods
mov
jno
and
inc
lahf
add
push
sub
jg
dec
mov
mov
test
cltd
loopne
and
add
ss
sbb
mov
es
sar
ljmp
jne
test
jns
inc
mov
adc
jp
in
iret
fimull
mov
push
cmpsl
mov
lahf
unpcklps
lcall
or
fcomps
popf
int3
or
xchg
js
test
ror
inc
xor
pop
loopne
add
cmp
std
inc
push
lock
add
popf
cmp
das
adc
mov
dec
leave
ss
inc
pop
imul
daa
in
test
xchg
divb
mov
int
std
jmp
shrl
stc
jae
outsl
imul
aad
dec
adc
sub
ljmp
sbb
icebp
fs
pop
out
dec
sbb
inc
pusha
test
cwtl
adcb
cmp
cltd
xor
jle
sub
aam
out
jnp
stc
in
loop
pop
cmp
popf
or
repz
jge
leave
xchg
cmpsb
xchg
repnz
cmpsl
add
mov
das
cmp
enter
shlb
pop
andl
rcrl
inc
adc
scas
out
pop
xchg
lahf
cmpsb
cli
sub
mov
test
cmpsb
ljmp
sub
fs
cmp
daa
pop
fimuls
xlat
loope
cmc
in
out
lcall
jecxz
mov
mov
push
pop
sbb
mov
scas
xor
cld
sub
mov
inc
pop
pop
mov
pop
hlt
jae
xchg
cmp
icebp
lea
mov
mov
icebp
insl
push
cwtl
sbb
cmpsl
sarb
call
test
test
ret
sbb
push
imulb
mov
ss
dec
mov
cmc
add
add
cs
jecxz
jl
mov
lock
inc
xchg
xchg
push
or
out
lea
add
cmpl
iret
lcall
aad
mov
jl
in
lcall
lods
or
jge
iret
dec
enter
xor
inc
test
addr16
mov
cmp
mov
enter
jbe
pop
in
fsub
mov
mov
dec
jle
lock
into
adc
mov
xchg
jo
mov
cwtl
dec
push
inc
aad
adc
jne
daa
ljmp
add
mov
js
push
or
enter
jbe
dec
pop
jne
push
lahf
cwtl
pop
mov
lcall
fbstp
popa
daa
out
push
push
addb
xor
xchg
fidivrl
push
cmp
inc
sub
jg
imul
add
je
add
pop
idivl
hlt
cld
stos
mov
mov
lods
inc
sbb
add
imul
push
fildl
push
ljmp
or
pop
jb
jb
push
xchg
lea
aad
push
jne
mov
push
pop
mov
push
push
cmp
cwtl
dec
adcb
add
sbb
mov
xchg
fnstsw
movsl
clc
repnz
inc
mov
mov
pop
mov
pop
lods
inc
xlat
call
mov
dec
jle
ret
sbb
push
insl
xchg
and
pop
add
inc
test
sbb
nop
loope
sti
xchg
sarb
rorl
dec
mov
cmpsl
sbb
repnz
add
mov
and
out
dec
or
push
rcll
jmp
add
mov
jae
pop
push
xchg
notb
cmp
das
outsl
sar
cmp
sbb
mov
mov
sbb
outsb
cmp
xchg
test
cmp
pop
jg
jge
fdivs
jne
inc
cmp
mov
jl
mov
in
cmp
orl
repz
and
jb
pusha
jns
icebp
or
fld
lock
sbb
pop
mov
xor
cmc
add
loop
js
sub
dec
setne
hlt
out
mull
cld
xor
xchg
sbb
int
inc
mov
loop
cmp
aaa
test
inc
jb
cltd
cwtl
add
iret
sub
push
lret
fucomi
in
adc
mov
sub
adc
xor
cmp
lea
stos
lahf
xor
dec
in
dec
into
adc
jge
out
out
movsl
mov
in
movsl
xor
lahf
xchg
fsubl
js
and
dec
push
adc
movsb
lods
cmp
jnp
mov
inc
divl
mov
xor
mov
mov
rcrb
dec
out
add
bound
fsubrp
ja
pop
xor
adc
std
pop
or
stc
xorb
sub
mov
or
fbstp
and
push
insl
out
setno
outsb
jle
mov
insb
cmpsl
and
cld
inc
mov
pop
std
sti
les
enter
jb
xchg
cli
xor
cmp
push
jp
mov
imul
popf
mov
xchg
dec
stc
cmpsb
imul
cmp
jne
xchg
xor
orl
fs
gs
cwtl
sti
jl
call
add
andl
movsl
push
cld
sub
sub
jmp
nop
loop
cmp
cltd
insb
call
je
pop
xor
dec
aam
popf
mov
orl
jmp
cli
pushf
xlat
sahf
mov
mov
xchg
or
out
jmp
sbb
pop
es
xor
push
add
ss
rclb
in
mov
xchg
sarb
ret
push
mov
std
imul
bswap
call
lock
sub
mov
call
ds
sti
inc
pop
cltd
push
aad
test
lret
or
popf
lds
addl
push
xchg
mov
mov
negb
pop
movsl
fs
popa
int3
cmpsl
sub
scas
loope
cli
adc
subl
cmp
out
ja
rsm
dec
sbb
lcall
stos
mov
xlat
hlt
cltd
xchg
test
test
insb
sub
xor
in
or
pop
std
xchg
sbb
push
shrb
lret
inc
dec
cmp
arpl
in
pop
lcall
pushf
mov
aam
cmp
push
je
xchg
xor
mov
sub
fs
sub
pop
stos
enter
mov
ss
cmp
sbb
push
daa
xlat
sbb
xor
int3
out
ficomps
aam
arpl
pop
mov
leave
ret
ljmp
out
call
fsubl
xor
cmpsl
jg
lods
lcall
adc
cmp
gs
in
scas
cmp
out
adc
inc
push
pusha
and
lock
sub
inc
or
mov
repnz
mov
scas
pop
or
xlat
inc
cmp
inc
stos
xchg
call
rol
cltd
leave
cmp
cs
shrl
stos
test
sub
add
stc
cmp
add
stos
ljmp
outsl
int3
repz
in
cltd
pop
sbb
mov
jl
dec
xlat
std
or
test
xchg
lcall
push
inc
jno
sahf
les
scas
dec
adc
scas
mov
in
ljmp
sahf
loopne
mov
outsb
dec
xor
push
and
aas
jo
popf
and
cld
out
cmp
sarb
cmp
adc
pop
ljmp
push
andl
mov
cmc
fidivrs
leave
pop
lgs
cmpsb
dec
cltd
sti
sub
xor
pop
xchg
and
in
or
insl
sahf
ret
scas
cmpsb
aad
hlt
out
mov
mov
loop
push
or
xchg
add
mov
sbb
mov
test
jns
lcall
or
lret
lea
adc
xchg
scas
pop
stos
popf
jae
pop
and
popf
pop
rorb
into
or
sbb
jmp
xlat
xchg
cmp
shlb
adc
xchg
insl
mov
ret
mov
jno
lret
shll
imul
or
lods
stc
xchg
pop
stos
dec
mov
loopne
out
ret
mov
mov
pop
jmp
scas
xchg
fstp
add
mov
or
in
loopne
mov
icebp
in
ss
aas
mov
adc
orl
lret
enter
ss
movsl
adc
add
jp
push
fmuls
pushf
loope
scas
or
mov
imul
ficoms
jns
inc
sub
jl
mov
xchg
idivl
xchg
test
or
xor
std
incb
jbe
ja
icebp
lret
idivb
dec
inc
and
movsl
xor
inc
lods
jmp
aad
inc
loope
mov
mov
ficoms
xchg
inc
test
xchg
jmp
inc
inc
xor
add
mov
arpl
lds
outsb
mov
mov
fisttpl
imulb
leave
push
cmp
or
sbb
loope
test
mov
flds
adc
and
sbb
add
pop
or
mov
rol
inc
imul
sub
scas
aad
cltd
sub
adc
cmp
cmp
push
into
sbb
inc
sti
pop
jp
lock
ja
xor
sar
push
in
push
pop
inc
fmull
out
lds
fists
add
push
mov
mov
mov
jg
lret
cwtl
outsl
pushf
mov
xchg
and
sarl
cli
pop
dec
mov
leave
int3
bswap
push
rcrb
shl
popa
sub
pop
mov
cmp
xchg
mov
jno
jle
rcll
test
adc
loope
inc
push
cmpsl
lahf
dec
mov
jl
addr16
mov
fst
fidivs
sarb
fxch
enter
leave
lock
lcall
and
imul
mov
js
add
add
push
add
imul
hlt
out
int3
scas
xor
pop
scas
and
inc
popf
fwait
imull
sbb
in
cs
ret
jb
jne
stos
mulb
add
pop
inc
inc
inc
mov
test
cli
add
shl
out
cltd
and
jge
jp
das
addr16
pop
and
push
xchg
xchg
cmp
inc
dec
xlat
das
test
mov
sbb
in
push
xchg
mov
ret
sub
daa
and
mov
sub
mov
and
nop
and
aad
ljmp
mov
sub
cmpsl
jae
jo
push
pop
je
pop
xor
rolb
sti
xchg
in
int3
push
sbb
dec
enter
push
mov
or
jno
dec
inc
repnz
test
movsb
xchg
push
lcall
xorl
les
xlat
test
pop
adc
push
sahf
addr16
xor
dec
mov
pop
dec
xchg
sahf
and
mov
rep
ficompl
repnz
jbe
mov
lret
test
mov
frstor
and
gs
cmpsl
shlb
pushf
inc
cmp
int
cmpsl
lret
lret
push
lret
mov
cmc
push
add
jb
or
popf
inc
inc
sbb
aas
add
or
loopne
cmpsb
stos
das
xchg
mov
cmp
insb
dec
fwait
jl
aam
cmp
push
fistpll
sub
sub
rcl
mov
call
popa
mov
cmpxchg
ja
pop
leave
lock
inc
and
nop
cltd
pop
les
cmpsl
add
cmc
and
mov
push
mov
out
sub
and
adc
push
in
scas
inc
or
mull
jo
mov
push
mov
vpand
jmp
jg
movsl
cld
hlt
test
fdivs
dec
out
sbb
outsb
ficompl
hlt
neg
adc
lock
xchg
lret
inc
jb
lret
xchg
clc
addr16
push
xor
call
pop
sbb
dec
xchg
xor
fdivrs
sub
adc
xchg
stos
pushf
push
cmp
jno
call
fbld
xor
cld
outsl
cmp
test
mov
lret
cwtl
pop
in
xchg
cmp
nop
jle
lods
inc
fadd
lcall
lods
in
push
add
repz
adc
mov
fstpl
fcomps
xchg
and
je
sahf
xchg
dec
in
add
decl
push
adc
sbb
lods
dec
mov
xor
mov
adcl
cmpl
adcb
mov
in
inc
mov
mov
jl
and
mov
cs
adc
out
loopne
arpl
loopne
jecxz
mov
pop
pop
mov
incl
int3
cmp
fldcw
iret
push
xchg
loop
push
dec
mov
xchg
fs
mov
js
add
scas
xchg
push
in
test
mov
nop
aad
stos
xor
adc
dec
fildl
je
pop
aam
daa
int
push
push
fsubp
fdivrp
jle
sbb
popf
pop
or
pop
mov
mov
mov
or
pop
lds
mov
sub
sti
add
imul
xor
stc
adc
roll
outsb
mov
mov
decb
cmp
jne
lret
out
add
dec
xchg
sti
cwtl
push
stos
sub
shll
or
idivl
ret
dec
sub
jo
fwait
sbb
inc
in
push
insl
jge
icebp
mov
lods
sbb
sahf
and
mov
dec
fldenv
cld
push
movntq
enter
pop
pop
adc
jns
jbe
mov
imul
enter
mov
ret
test
fwait
rol
cmp
jecxz
push
test
cmp
jne
push
or
mov
inc
xor
cmc
mov
in
and
push
and
dec
xchg
dec
sub
addr16
sub
pop
aas
imul
pandn
sub
sub
data16
dec
xchg
push
xchg
adc
sub
gs
bswap
pop
jle
popf
mov
ljmp
mov
xchg
pop
mov
js
and
sub
loopne
dec
mov
pop
xlat
lret
push
cmp
es
andl
in
int3
subl
enter
push
in
jae
out
add
dec
inc
push
pop
adc
sarl
push
and
push
xor
mov
popf
sbb
pop
test
mov
sbb
sub
xlat
enter
lea
movl
addr16
push
addr16
aam
rcrb
ds
ret
fldl
divb
mov
and
cmc
pop
adc
in
jl
roll
popa
pop
push
mov
rcll
cmp
inc
adc
shrl
cmpb
pop
roll
es
sbb
xchg
mov
jle
pushf
push
dec
jbe
rep
inc
insl
cld
jno
inc
dec
and
or
xchg
int
sub
push
cmpl
cmp
lret
mov
rclb
pop
insb
mov
xor
mov
scas
jmp
dec
fdivl
cmp
leave
test
shl
test
jae
aas
std
jns
xchg
aad
sbb
xor
les
xchg
popf
mov
fmull
ret
sbb
dec
jecxz
imul
inc
les
adc
mov
cmp
movups
inc
push
shr
inc
lahf
inc
xchg
push
xor
fs
ds
enter
movsl
add
in
imul
mov
add
xor
test
in
out
stos
xchg
cmc
sbb
sahf
bnd
xchg
inc
cmpsb
adc
dec
enter
lods
xchg
push
and
and
outsl
dec
ja
inc
scas
push
out
push
pop
jecxz
fsubs
or
sbb
add
test
push
or
js
inc
cld
es
inc
dec
xchg
rclb
icebp
inc
push
cmp
adc
mov
mull
aas
movsb
stos
push
fnstcw
nop
sub
inc
lcall
repz
pop
fsubrs
out
shrb
imul
sbb
stos
adc
mov
xor
rcrl
inc
jg
sub
clc
sub
addb
