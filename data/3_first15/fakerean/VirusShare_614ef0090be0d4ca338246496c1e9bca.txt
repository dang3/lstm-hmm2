jne
mov
cmp
jne
and
mov
lea
push
lea
call
mov
test
pop
jne
mov
mov
call
xor
push
mov
lea
mov
call
cmp
je
mov
cmp
jne
mov
inc
push
push
lea
call
cmpl
pop
pop
jne
mov
lea
call
lea
call
lea
call
lea
call
lea
call
pop
mov
pop
pop
leave
ret
pushl
call
test
pop
je
mov
mov
push
pushl
push
call
mov
jmp
mov
mov
push
call
xor
ret
mov
pushl
mov
pushl
mov
push
call
movsbl
add
and
ret
push
mov
push
push
push
push
push
xor
push
lea
mov
call
mov
mov
lea
push
push
call
mov
cmp
mov
jne
push
lea
mov
call
mov
lea
push
push
mov
mov
call
mov
test
jne
testl
mov
lea
push
push
jne
call
mov
test
jne
mov
mov
push
pushl
push
call
mov
lea
call
lea
call
pop
mov
pop
pop
leave
ret
mov
push
push
push
call
cmp
je
xor
jmp
call
jmp
mov
ret
int3
int3
cmpl
push
push
mov
jne
add
add
add
test
sbb
adc
add
test
je
push
push
xor
mov
lret
test
or
mov
mov
mov
push
mov
call
pop
pop
mov
call
test
je
mov
mov
push
push
push
call
test
js
mov
cmp
je
test
jne
test
je
mov
mov
push
call
mov
test
mov
jne
test
je
mov
mov
push
call
pop
pop
ret
orb
jmp
mov
jmp
push
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmpl
jne
cmpl
jne
cmpb
jne
xor
pop
ret
mov
mov
mov
call
xor
pop
ret
sub
push
mov
push
push
mov
mov
push
mov
mov
test
movl
movl
mov
je
mov
mov
mov
mov
mov
lea
push
push
lea
call
mov
mov
add
test
jne
test
jne
test
jne
mov
mov
mov
push
call
mov
test
mov
jne
mov
push
call
add
push
mov
call
mov
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
cmpl
jbe
xor
mov
movl
lea
mov
push
push
call
push
mov
call
mov
add
mov
mov
push
add
push
push
call
test
je
mov
mov
lea
lea
lea
cmp
je
lea
mov
jmp
lea
test
je
push
movl
movl
movl
call
mov
add
add
cmp
jne
mov
addl
mov
add
cmp
mov
jb
xor
pop
pop
pop
pop
add
ret
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
cmp
je
mov
test
push
je
mov
lea
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
je
mov
lea
push
push
push
movl
call
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
add
mov
cmp
jne
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
movl
pop
xor
pop
ret
cmp
je
cmp
je
xor
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
mov
add
call
ret
int3
push
mov
push
mov
imul
xor
cmp
mov
jg
sub
js
push
mov
cmp
jge
movzwl
add
cmp
ja
cmp
jb
add
movzwl
shl
add
sub
jns
pop
pop
pop
ret
cmp
jb
cmp
ja
and
shl
lea
jmp
lea
cmp
jbe
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
cmp
push
mov
jne
test
jle
xor
jmp
lea
movzwl
cmp
ja
cmp
jb
add
cmp
jl
push
xor
cmp
setne
push
push
xor
add
mov
call
mov
push
mov
mov
call
mov
push
mov
mov
call
add
cmp
je
mov
or
shl
or
mov
shl
or
pop
pop
pop
mov
mov
pop
pop
ret
cmp
jb
cmp
jbe
add
cmp
jbe
pop
xor
pop
pop
ret
cmp
je
pop
xor
pop
pop
ret
mov
shl
or
mov
mov
shl
or
mov
shl
or
jmp
push
mov
and
mov
sub
push
xor
cmp
push
push
je
mov
push
lea
mov
call
mov
mov
mov
mov
lea
orl
testl
jne
mov
mov
mov
mov
mov
call
add
mov
mov
mov
test
je
mov
lea
push
push
pushl
push
push
call
mov
test
je
mov
test
mov
je
mov
mov
push
call
mov
mov
call
mov
lea
call
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
cmpl
jne
mov
push
mov
push
mov
testb
push
je
mov
sub
je
push
call
add
add
mov
xor
pop
pop
pop
ret
mov
lea
lea
push
call
add
test
je
mov
movl
mov
push
lea
push
push
call
add
movb
mov
pop
pop
xor
pop
ret
mov
push
lea
mov
push
lea
jmp
push
call
pop
add
cmp
jne
pop
pop
ret
pushl
call
ret
mov
call
mov
ret
push
mov
push
push
decl
cmpl
jne
push
movl
lea
mov
push
mov
mov
add
shl
add
cmp
je
mov
jmp
mov
lea
call
mov
call
addl
cmp
jne
mov
push
push
push
push
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
lea
call
mov
call
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
mov
xor
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
push
mov
push
andl
push
push
lea
call
mov
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
mov
pushl
push
call
lea
mov
call
mov
pop
leave
ret
mov
cmp
mov
je
cmp
je
sub
neg
sbb
not
and
mov
ret
mov
add
jmp
push
mov
cmpl
jne
pop
ret
mov
call
lea
cmp
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
andl
andl
lea
call
lea
call
lea
call
lea
call
push
lea
push
push
call
push
lea
push
push
call
add
mov
ret
int3
int3
sub
mov
push
push
xor
push
lea
lea
mov
movl
mov
mov
mov
call
mov
cmp
je
mov
lea
push
push
mov
call
cmp
je
mov
mov
lea
push
push
push
mov
call
cmp
jne
mov
cmp
je
mov
lea
push
push
push
mov
call
test
js
cmp
jne
push
lea
push
push
call
mov
add
cmp
je
testb
jne
mov
lea
push
lea
push
lea
push
push
push
call
mov
or
shl
or
add
shl
or
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmp
je
testb
jne
mov
lea
push
lea
push
lea
push
push
push
call
mov
or
shl
or
add
shl
or
mov
mov
test
pop
jne
test
je
mov
push
call
add
mov
push
push
call
add
cmp
mov
jne
mov
mov
shr
and
cmp
je
mov
lea
push
push
push
mov
call
test
js
mov
cmp
je
mov
lea
xor
and
xor
lea
call
pop
pop
add
ret
mov
lea
push
movl
lea
movl
mov
mov
push
push
call
mov
mov
mov
push
push
push
call
jmp
mov
jmp
push
cmpl
jne
cmpl
je
mov
pop
ret
push
call
test
pop
je
call
mov
push
mov
call
call
test
jns
xor
pop
ret
xor
jmp
push
mov
sub
push
xor
cmp
push
push
jne
call
test
je
push
push
push
call
add
test
js
push
mov
mov
mov
call
cmp
pop
je
movl
mov
lea
call
cmp
je
push
lea
call
mov
mov
lea
push
pushl
push
push
call
lea
mov
push
lea
push
lea
movl
mov
call
test
jne
mov
mov
push
mov
add
lea
mov
push
lea
push
lea
movl
mov
call
test
jne
mov
lea
push
mov
mov
push
call
test
mov
jne
call
or
test
movl
mov
movl
je
or
or
movl
mov
movl
add
cmp
mov
leave
adc
add
je
lret
adc
mov
add
cmp
test
movl
mov
movl
jne
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
push
mov
mov
pop
push
mov
and
or
pop
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
or
pusha
loopne
adc
add
shr
adc
add
clc
xchg
mov
loopne
adc
add
enter
movl
mov
movl
mov
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
and
or
or
or
or
or
or
add
mov
add
and
adc
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
inc
add
leave
adc
add
add
add
sbb
lret
adc
add
lock
jecxz
adc
add
and
lret
adc
add
sbb
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
or
or
or
or
or
or
or
or
or
or
or
and
add
or
or
or
or
or
or
or
mov
mov
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
sub
lret
adc
add
adc
mov
leave
adc
add
push
icebp
lret
adc
add
xor
out
adc
add
je
lret
adc
add
js
mov
leave
adc
add
cwtl
icebp
lret
adc
add
fs
adc
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
in
lret
adc
add
adc
mov
leave
adc
cmp
or
or
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
leave
adc
add
enter
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
jmp
jmp
lret
adc
add
push
mov
adc
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
or
or
or
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
and
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
movl
add
add
cmp
lret
adc
add
add
jmp
adc
add
pusha
test
jmp
adc
mov
leave
adc
add
test
lret
adc
add
cmp
in
leave
adc
add
test
lret
adc
add
sub
in
leave
adc
add
int3
test
in
leave
adc
xchg
mov
leave
adc
add
lock
in
leave
adc
xchg
mov
leave
adc
add
adc
lret
adc
add
pop
or
leave
adc
add
cmp
lret
adc
add
adc
in
leave
adc
add
add
lret
adc
add
je
mov
leave
adc
add
test
lret
adc
adc
movl
movl
mov
movl
movl
or
or
or
or
add
or
and
or
or
or
or
and
and
or
and
and
or
or
or
or
mov
push
mov
mov
mov
inc
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
add
and
lret
adc
adc
adc
add
xor
lret
adc
add
jl
mov
out
leave
adc
add
cmp
lret
adc
add
clc
cld
mov
icebp
leave
adc
add
inc
stc
lret
adc
add
enter
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
add
or
and
or
or
or
or
or
and
and
or
and
or
or
or
or
or
or
push
pop
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
sbb
lret
adc
add
and
mov
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
mov
movl
movl
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
add
add
add
movl
movl
movl
movl
add
test
mov
hlt
leave
adc
add
mov
lret
adc
add
cwtl
mov
hlt
leave
adc
add
cwtl
cld
lret
adc
add
mov
jl
leave
adc
add
cld
lret
adc
add
push
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
add
add
movl
movl
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
add
add
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
add
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
add
add
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
add
test
mov
cld
leave
adc
add
jo
int3
adc
add
cwtl
mov
cld
leave
adc
add
js
int3
adc
add
mov
in
cld
leave
adc
add
addb
std
leave
adc
mov
std
leave
adc
add
mov
sub
leave
adc
roll
sbb
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
pushf
push
int3
adc
add
enter
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
adc
int3
adc
add
mov
mov
lret
add
sub
int3
adc
add
int3
in
mov
add
adc
add
dec
pop
int3
adc
add
pushf
in
mov
add
adc
add
push
pop
int3
adc
add
lods
in
mov
add
adc
add
pop
pop
int3
adc
add
mov
sbb
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
and
and
or
and
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
cwtl
mov
push
lret
add
js
int3
adc
add
nop
cltd
mov
add
in
lret
or
adc
add
sbbb
push
lret
add
nop
or
adc
add
add
mov
push
lret
add
cwtl
or
adc
add
mov
mov
pop
lret
cmp
or
or
or
or
and
or
or
or
or
or
or
or
add
and
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
inc
add
lret
add
insb
or
adc
add
mov
mov
lret
add
je
int3
adc
add
dec
mov
lret
add
cwtl
or
adc
add
call
sbb
movl
movl
mov
movl
movl
mov
add
call
cmp
or
or
or
add
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
mov
mov
movl
mov
mov
movl
movl
mov
add
les
int3
adc
add
insb
out
adc
adc
add
rorb
int3
adc
add
pop
out
adc
adc
add
fmuls
int3
adc
add
jl
mov
or
adc
add
loopne
int3
adc
add
mov
mov
or
adc
add
call
add
pushf
out
adc
adc
add
lock
adc
add
lods
out
adc
adc
add
clc
or
adc
add
int3
out
adc
adc
add
add
int3
adc
add
mov
sbb
movl
movl
mov
movl
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
sbb
int3
or
les
int3
adc
add
or
lock
call
or
adc
add
jo
mov
push
lret
add
orb
adc
add
nop
cmpl
add
nop
or
adc
add
clc
xchg
push
lret
add
mov
add
call
sbb
movl
movl
mov
movl
add
enter
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
or
or
mov
mov
movl
movl
mov
movl
call
xor
mov
add
ret
je
mov
lea
push
pushl
mov
push
call
add
inc
cmp
jl
xor
push
call
inc
cmp
pop
jl
call
push
push
call
movzbl
push
push
mov
call
movzbl
add
mov
movl
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
mov
push
mov
je
mov
js
mov
add
test
jne
lea
push
push
mov
movl
movl
movl
mov
movw
mov
call
lea
push
lea
mov
movl
call
add
push
lea
mov
call
test
je
test
je
mov
mov
lea
mov
test
jne
test
jne
test
je
mov
cmp
je
cmp
je
mov
mov
add
push
add
add
add
rcrb
and
add
add
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
call
test
je
mov
mov
cmp
jne
mov
test
je
mov
mov
mov
lea
cmp
je
lea
movzwl
lea
cmp
movzwl
jbe
mov
add
add
cmp
jne
pop
pop
pop
pop
ret
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
jne
lea
push
lea
push
push
push
push
mov
movl
call
add
xor
test
pop
js
mov
mov
push
mov
push
mov
push
mov
push
mov
push
push
push
call
mov
add
test
js
mov
pop
ret
int3
push
mov
mov
push
push
mov
mov
mov
xor
test
je
mov
add
test
jne
sub
je
mov
mov
mov
mov
mov
mov
push
call
test
je
mov
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
mov
and
or
mov
mov
mov
mov
mov
mov
mov
mov
sub
push
call
mov
push
call
lea
call
mov
mov
test
jne
test
jne
mov
push
push
call
add
test
je
mov
mov
push
push
call
add
test
je
pop
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
xor
movl
mov
movl
mov
cmp
push
push
je
lea
push
mov
mov
mov
mov
push
push
mov
call
mov
test
mov
je
mov
mov
lea
mov
mov
test
jne
test
jne
push
call
mov
mov
mov
and
add
or
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
call
test
je
movl
orl
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
mov
test
push
mov
je
mov
lea
push
push
push
mov
call
test
jns
mov
mov
test
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
call
mov
mov
shr
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
movzbl
shl
xor
and
xor
mov
mov
shr
and
test
je
mov
mov
lea
push
push
push
call
test
js
mov
movzbl
shl
xor
push
lea
and
xor
push
push
call
add
cmpl
mov
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
mov
mov
shr
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
movzbl
mov
shl
xor
push
and
xor
lea
push
mov
mov
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
mov
test
movzbl
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
shr
mov
mov
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
movzbl
shl
xor
and
xor
mov
mov
shr
and
test
je
mov
mov
lea
push
push
push
call
test
js
mov
shl
xor
and
xor
mov
test
je
mov
lea
push
push
push
mov
call
test
js
cmpl
je
mov
lea
xor
and
xor
mov
test
je
mov
mov
lea
push
push
push
call
test
js
mov
movzbl
shl
xor
and
xor
mov
test
je
mov
lea
push
push
push
mov
call
test
js
mov
shl
xor
mov
and
xor
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
xor
mov
and
xor
test
je
mov
mov
lea
push
push
push
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
mov
js
mov
shl
xor
and
xor
test
je
push
push
call
mov
add
nop
fists
add
mov
stos
add
add
movb
loope
push
lods
add
add
push
pop
roll
aad
add
cwtl
fldl
pushf
push
add
out
jbe
mov
add
out
stos
std
pusha
add
int
xchg
int3
hlt
popa
add
add
add
je
add
add
add
call
push
stc
pop
rclb
mov
mov
add
add
rcrb
cmpsb
add
push
add
clc
ja
jae
jnp
orb
stos
fwait
push
add
add
add
add
mov
add
add
mov
jns
rol
rorb
rcll
add
push
push
push
call
add
add
stos
add
add
add
imul
mov
testb
add
add
add
cld
add
addr16
pop
add
out
sub
add
mov
fcoms
fwait
in
add
jbe
pop
xchg
xchg
add
add
andb
decb
add
adcl
lea
pop
movl
popl
push
push
push
call
add
mov
pop
push
arpl
add
imul
add
jns
mov
insb
push
add
push
xchg
pop
mov
xchg
add
and
add
add
cltd
add
add
add
cmpsb
add
add
mov
jmp
add
lods
add
rolb
add
in
lods
add
pop
push
push
push
push
push
push
push
push
lea
push
call
push
add
add
test
add
add
fsubs
push
add
lcall
lods
outsl
add
fwait
add
addb
mov
jnp
movsb
mov
lods
add
lea
popf
add
mov
add
mov
mov
rolb
add
push
lret
popf
mov
lea
pop
push
call
push
lea
push
push
push
call
add
add
mov
mov
mov
mov
test
addl
mov
pop
push
pushf
add
add
out
int3
jmp
imul
add
pop
push
testb
mov
xlat
add
add
out
add
add
add
pop
repnz
pop
pop
add
mov
lea
pop
call
push
push
push
push
call
add
fiadds
jmp
add
cltd
into
mov
fldenv
add
cmpsl
aam
ret
mov
xchg
call
stos
add
sti
jae
jp
test
add
pop
jmp
mov
add
cltd
xchg
repnz
hlt
pop
mov
add
jo
popa
push
mov
mov
stos
add
mov
nop
sti
lea
mov
pop
push
push
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
bound
rol
cltd
loop
cmpl
mov
add
xchg
fidivs
pop
add
add
add
clc
mov
pop
movsl
imul
add
add
add
enter
mov
add
add
out
add
add
into
add
cltd
pop
fs
xchg
lods
add
jo
add
add
add
cltd
add
iret
data16
add
int
hlt
loop
sti
test
mov
lea
pop
call
push
push
push
push
call
add
xchg
testb
add
fdivrs
add
jb
add
add
add
pusha
jbe
add
add
add
test
jge
sti
add
add
scas
push
add
in
in
test
jo
data16
gs
cwtl
mov
add
add
lea
pop
jmp
ret
mov
push
push
push
push
push
lea
push
push
push
call
in
add
movl
lcall
push
mov
fdivrl
add
add
out
jp
ja
pop
cwtl
add
add
add
jecxz
cwtl
xchg
add
jns
stos
clc
enter
add
mov
add
pop
add
mov
add
mov
add
mov
lea
pop
mov
add
push
push
push
call
add
call
js
popa
add
into
stos
push
jmp
cmc
test
add
jnp
add
gs
push
mov
mov
add
add
insb
mov
pop
mov
shlb
stc
add
xchg
mul
rolb
movsl
add
outsl
js
add
add
add
push
add
add
fdivrp
ljmp
add
push
push
lea
push
call
stos
mov
in
popa
mov
mov
add
add
mov
test
add
add
lock
add
add
lock
push
xchg
add
add
movb
push
add
insb
add
ret
repnz
mov
lret
jno
push
mov
mov
add
add
add
add
int
xchg
add
js
push
add
into
lods
xchg
js
add
mov
data16
add
push
push
push
push
push
lea
push
push
push
push
push
call
addb
clc
imul
test
add
mov
add
popa
add
add
test
outsl
add
rorb
add
popa
add
stc
pop
mov
ljmp
nop
add
mov
add
hlt
sub
add
add
outsl
scas
xchg
add
mov
add
bound
ja
test
pop
mov
push
push
push
push
call
fwait
add
add
cltd
add
add
lret
ja
test
arpl
addl
lcall
mov
mov
jne
add
enter
add
add
rolb
popf
jb
mov
add
push
pop
std
add
imul
shll
lea
pop
xor
push
push
lea
push
push
push
push
call
int3
add
add
add
add
in
add
add
push
repnz
jnp
loope
add
add
adcb
jb
xchg
rorl
cmp
add
mov
loop
test
outsl
add
cmpsl
ja
add
mov
mov
jno
in
add
lahf
loopne
std
test
add
sahf
jb
add
cmpsl
ljmp
pusha
mov
add
stos
mov
lea
pop
add
add
push
push
call
jge
mov
add
outsl
add
gs
add
add
test
add
mov
add
mov
test
add
push
add
pop
add
clc
add
add
add
leave
add
lods
fldl
add
in
std
pop
cli
enter
add
addl
add
stc
ljmp
add
data16
adc
add
aam
lahf
dec
call
mov
addl
in
into
add
xchg
add
add
add
lea
xchg
imul
lcall
add
int
xchg
mov
add
pop
lahf
add
add
lods
rolb
fs
jbe
add
addb
add
jnp
mov
add
add
rcrb
lock
add
add
js
hlt
add
aad
fadds
add
ficomps
mov
lea
pop
mov
push
push
push
push
call
add
push
add
js
xchg
add
add
add
add
in
mov
push
adc
add
aad
add
scas
nop
add
add
mov
clc
fsubr
add
jne
xor
add
add
cwtl
jae
mov
loope
test
add
lcall
add
repnz
add
rorb
add
add
add
testb
add
int3
lea
pop
xor
push
push
push
push
call
int
cltd
lret
add
add
add
add
mov
add
push
std
je
jns
add
jp
loopne
xlat
jae
jge
repnz
scas
mov
shl
add
je
push
add
add
testl
mov
mov
clc
mov
movsl
je
std
mov
push
add
add
pop
add
push
push
rol
push
or
inc
add
add
sub
lea
pop
shl
pop
push
push
push
push
push
push
lea
push
push
call
vpshuflw
mov
add
add
xchg
add
add
add
insb
test
aam
add
add
popl
in
stos
add
fldl
les
add
fdivs
mov
add
lahf
flds
mov
lods
add
add
add
lods
out
add
fldt
add
push
add
add
hlt
lretw
add
mov
aam
bound
pop
pushl
push
push
push
push
push
push
push
push
push
call
roll
loop
add
add
add
outsl
mov
jns
mov
add
add
add
xor
add
scas
lcall
mov
add
add
xchg
enter
mov
movsl
mov
addb
add
add
lret
ficoms
loop
add
fwait
popa
add
add
pop
call
mov
movl
push
push
lea
push
push
lea
push
lea
push
push
push
push
call
add
mov
fsubl
stos
hlt
add
add
pop
add
pop
call
add
xchg
int
add
mov
add
add
jmp
add
fisttps
rorl
call
cltd
addb
loop
shlb
add
add
pop
add
add
mov
add
add
out
fwait
jmp
imul
mov
lea
pop
lea
push
pushl
push
lea
push
push
call
mov
add
push
sti
stc
leave
clc
ret
fdivrs
addb
add
flds
mov
add
std
call
in
add
sahf
add
jl
mov
cld
lock
add
fwait
ja
xchg
add
add
pop
lcall
rcrb
add
movsl
out
lret
mov
incb
cli
mov
movsl
add
add
push
mov
mov
lea
pop
pushl
push
push
push
lea
push
lea
push
push
push
push
call
mov
loope
add
add
add
add
pop
add
mov
push
in
pop
add
add
pop
cmc
mov
mov
shl
rolb
jne
add
in
fadds
add
stc
add
fst
push
nop
mov
add
add
movsb
filds
cltd
lock
in
nop
xchg
popl
mov
cld
mov
lea
pop
call
pushl
pushl
push
push
push
push
push
push
lea
push
call
pop
movsl
test
int3
ljmp
add
into
add
insb
mov
cwtl
lret
add
popf
jbe
test
fldt
add
add
add
add
aam
pop
int
add
icebp
in
push
mov
add
add
testb
add
push
add
xchg
add
popf
xchg
add
in
add
xchg
add
add
in
aad
iret
add
pop
into
pop
imul
int3
lea
pop
call
push
push
add
shr
sub
push
sub
add
sub
sub
sub
not
pop
xor
pop
push
push
push
lea
push
push
push
push
push
call
add
iret
in
xchg
add
add
jmp
mov
add
add
incb
mov
insb
lahf
mov
mov
push
add
add
mov
xchg
pop
lea
loope
roll
add
jne
lahf
add
add
add
scas
enter
cmc
add
mov
add
out
roll
imulb
les
jne
push
lea
push
push
lea
push
lea
push
push
push
call
loop
add
ja
add
clc
mov
add
ljmp
out
sahf
add
add
test
hlt
jne
add
add
cmpsb
push
mov
cmc
outsl
mov
add
cli
popl
add
jb
js
push
xchg
jns
std
add
add
mov
popf
mov
les
push
add
lahf
scas
in
aam
add
leave
mov
shrl
aad
add
icebp
stos
int3
enter
cld
lea
pop
call
push
lea
push
lea
push
push
lea
push
lea
push
call
cmpsl
push
insb
cli
add
mov
push
add
movsb
je
std
add
add
add
pop
jmp
jmp
test
add
add
add
mov
add
fiadds
test
add
jne
in
jae
add
imul
mov
sahf
fidivrl
add
jno
add
xlat
mov
mov
add
arpl
mov
lea
pop
push
push
push
shl
push
xor
add
sub
shl
pop
shl
dec
add
dec
pop
push
push
push
lea
push
lea
push
push
push
call
add
add
in
add
gs
xchg
cmpsl
add
test
add
add
imul
filds
notl
push
data16
enter
lds
add
in
add
lock
stos
pushf
add
loop
sahf
lods
mov
add
pushf
add
sarb
add
add
bnd
je
jns
into
aad
add
sbb
push
push
push
push
lea
push
push
lea
push
push
push
call
insb
add
outsl
add
in
xchg
bound
add
int3
cltd
mov
lock
jne
insb
pop
add
push
jecxz
aam
fsubr
or
in
clc
add
int3
add
js
jecxz
js
add
sar
cld
pusha
add
pop
mov
mov
add
andb
pusha
mov
add
add
mov
add
out
add
add
pop
call
mov
push
push
push
lea
push
lea
push
push
push
call
outsl
add
movsb
add
add
icebp
imul
add
mov
lock
push
enter
add
sti
mov
data16
shll
mov
jl
mov
add
add
add
xchg
add
stos
ret
arpl
int3
scas
enter
add
js
les
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
arpl
jo
push
add
lcall
cmc
loopne
lret
scas
jnp
flds
pushf
fsubs
mov
xchg
push
mov
lret
add
mov
cld
mov
iret
mov
cli
scas
mov
loope
movb
fmul
add
je
aad
add
add
mov
out
fldenv
in
mov
lea
pop
push
push
push
push
lea
push
call
jnp
jae
add
out
nop
add
push
add
add
mov
repnz
cwtl
add
testb
add
pop
xchg
add
jns
lds
add
imul
pushf
add
add
xlat
mov
add
mov
add
in
add
andl
add
push
addb
add
jb
mov
add
addl
jecxz
out
int3
lea
pop
mov
push
lea
push
lea
push
push
lea
push
call
add
add
mov
add
movsl
add
aad
add
mov
scas
loope
ljmp
loope
push
jp
mov
test
fiaddl
add
clc
cltd
push
mov
add
lods
mov
shrl
add
xchg
cmpsl
add
loopne
add
lock
mov
bound
add
add
add
push
push
lea
push
call
xchg
add
add
xchg
mov
add
jb
add
add
popa
faddl
cld
cmpsl
add
cld
add
fadd
test
add
add
outsl
aam
add
add
add
add
add
addb
xchg
fs
repnz
xchg
shll
add
lret
jnp
add
faddl
ljmp
mov
xor
push
lea
push
push
push
push
push
push
push
call
add
mov
std
add
pop
rclb
mov
add
add
pop
int3
into
xchg
mov
add
add
add
hlt
ljmp
cld
pop
xchg
movsb
mov
fnstcw
add
add
lahf
add
test
xchg
pop
add
push
mov
push
push
lea
push
push
push
push
push
push
push
call
push
cmc
cmc
scas
push
add
add
jo
add
add
add
push
lret
pop
fadds
fildl
test
xlat
in
xlat
cltd
filds
pushf
mov
mov
ljmp
test
add
lods
add
add
xchg
lret
push
mov
add
push
mov
add
out
add
roll
loope
lret
std
add
add
stos
lret
outsl
jne
add
xchg
mov
lea
pop
xor
push
lea
push
push
lea
push
push
lea
push
push
call
mov
add
mov
add
cltd
lods
mull
add
call
bound
mov
add
shl
add
add
add
add
popa
add
sti
add
pushf
add
imul
test
into
xchg
rolb
xchg
mov
add
add
pop
mov
add
mov
movb
add
pop
add
push
push
push
lea
push
push
push
push
push
call
mov
add
add
xchg
mov
add
arpl
rcll
add
add
std
add
jne
lret
add
data16
jle
leave
aam
add
fwait
mov
shr
ret
add
movsl
add
fcmovbe
fwait
mov
ljmp
xchg
out
add
cltd
ljmp
add
pop
add
cltd
mov
iret
out
add
add
add
xchg
add
mov
lea
pop
add
push
push
push
lea
push
push
call
call
pushf
imul
add
cld
mov
xchg
add
add
add
add
shr
stos
add
subl
ret
test
mov
nop
jnp
add
add
push
add
add
add
mov
add
add
lret
add
add
add
hlt
incb
add
add
hlt
lea
pop
pop
mov
push
push
push
push
push
push
push
lea
push
lea
push
push
push
call
add
icebp
mov
jecxz
add
xchg
jbe
add
imul
add
add
stos
movl
add
insb
push
stc
add
xchg
pushf
push
insb
stos
add
mov
add
cmc
sahf
push
stos
push
jl
add
pop
lret
mov
jecxz
push
lea
cmc
pop
add
movsb
test
jmp
add
fldcw
xchg
mov
sub
or
push
lea
push
push
push
push
push
lea
push
call
test
mov
jb
add
add
add
push
add
add
add
add
repnz
out
add
enter
add
cltd
aad
add
mov
mov
into
in
into
add
xchg
mov
pop
add
add
cmpsb
push
push
add
add
lcall
iret
enter
popa
cli
add
cmpsb
jbe
movsb
push
out
filds
add
fiadds
mov
lea
pop
add
push
push
push
lea
push
call
add
cli
pushf
add
cmpsb
fldt
lahf
cmpsl
les
loopne
fiaddl
incb
push
add
outsl
xchg
add
xlat
jns
add
rclb
stc
sahf
xchg
add
add
cmc
push
mov
loopne
push
jmp
test
data16
add
negl
pusha
fprem
add
js
add
add
jbe
hlt
lea
pop
push
mov
xor
push
lea
push
push
lea
push
push
push
push
call
add
xchg
add
pushf
add
push
add
push
jns
test
test
add
mov
loopne
mov
add
push
mov
mov
add
fcomip
arpl
andl
out
loop
add
add
pop
add
mov
movsb
add
movsb
icebp
add
add
in
add
add
pop
sub
push
push
push
push
lea
push
push
call
mov
aam
add
popl
cmpsl
mov
add
icebp
add
add
call
mov
imul
sbbl
add
jl
pop
add
sahf
add
xchg
add
add
add
pop
shrl
push
add
pop
data16
lock
add
add
in
jb
xchg
add
xorl
jnp
cmc
test
jl
insb
stos
scas
xchg
add
test
lea
pop
pop
rep
pop
push
lea
push
push
push
push
push
push
call
test
imul
add
xchg
out
popa
movsl
add
mov
in
add
lret
flds
add
push
lods
add
roll
flds
add
add
popf
add
add
loop
pop
les
add
clc
test
loope
mov
xorb
xlat
andl
movsl
imul
add
add
mov
add
add
mov
sbb
mov
push
push
call
mov
jp
add
jae
filds
mov
add
fwait
andb
push
jnp
into
add
pop
fwait
rol
mov
add
test
add
mov
fmul
imul
mov
xchg
imul
add
outsl
hlt
push
mov
enter
shrb
hlt
mov
xlat
add
mov
lea
pop
add
add
push
lea
push
call
std
pop
mov
js
mov
fsub
add
add
ljmp
shlb
stos
lods
push
fdivrl
add
add
add
xchg
add
jecxz
not
scas
add
in
add
xorb
add
add
add
fwait
xchg
ljmp
add
add
popa
lds
pusha
les
pop
add
push
push
push
push
lea
push
push
push
call
mov
mov
shrb
add
add
add
add
mov
in
add
movb
add
xchg
add
add
add
out
add
mov
loope
add
push
mov
add
pop
std
pop
add
mov
add
add
mov
out
ljmp
add
lahf
add
repnz
add
aam
bound
mov
push
push
lea
push
push
push
lea
push
lea
push
push
push
push
call
lahf
add
jecxz
add
add
add
push
add
add
shll
add
sahf
jne
mov
mov
mov
lea
test
fiadds
cltd
sarl
sti
xchg
jge
add
jge
in
loop
mov
pop
fxch
in
add
jns
jecxz
add
mov
lea
pop
xor
push
push
push
call
addr16
push
lods
push
add
add
add
xchg
add
xchg
lahf
loop
int
test
in
cltd
lret
sahf
repnz
fadds
jp
fdivrl
add
leave
add
cmc
push
in
push
add
add
add
add
add
jmp
lods
add
stc
ljmp
add
out
lret
add
add
jp
push
add
pop
add
mov
xor
push
push
lea
push
call
ret
jge
arpl
addl
aad
cwtl
sbb
add
mov
add
xchg
add
push
je
xchg
add
add
popf
popf
fwait
add
testl
pop
fsts
mov
test
add
mov
enter
xlat
nop
add
add
testl
cltd
cld
movsl
movl
add
movsl
jb
je
mov
bound
pop
mov
xor
push
push
call
movsl
in
add
cltd
mov
mov
add
add
mov
add
add
pop
add
push
add
fs
add
mov
pop
add
test
add
add
add
mov
add
addl
mov
flds
insb
aad
add
mov
add
movsl
add
pop
add
push
push
call
arpl
test
in
xchg
add
mov
icebp
sahf
add
add
imul
add
movsl
ficoml
in
int
jmp
jno
add
pop
mov
xchg
add
arpl
mov
jl
add
sar
rcll
add
add
add
test
add
push
add
fstl
add
add
mov
popa
pop
in
test
pop
add
push
push
push
push
push
call
add
addb
add
add
cmpsb
add
add
jbe
aad
rclb
add
push
push
lahf
fadds
lea
popl
les
add
in
push
js
add
pop
push
cmc
lea
add
sti
add
mov
lret
data16
add
add
add
fs
pop
loopne
mov
push
add
int
xchg
push
add
shll
pop
mov
push
push
add
shr
push
or
not
add
ror
shr
sub
add
sub
rol
pop
sub
pop
push
lea
push
push
push
push
lea
push
push
call
jmp
in
pop
jp
outsl
loop
add
mov
popf
test
stc
mov
add
add
add
add
loope
add
filds
add
add
add
js
add
add
addr16
les
out
hlt
cmpsl
sub
cmpsb
push
add
ret
fsts
add
add
add
iret
jns
add
bound
gs
lea
pop
pushl
call
push
push
lea
push
push
push
push
push
push
push
call
jl
jae
add
rolb
mov
mov
fwait
icebp
fs
ja
xchg
cmpsb
jle
lcall
mov
add
rcrb
add
iret
xchg
movsl
pop
add
in
lahf
enter
add
add
jnp
add
add
add
clc
hlt
insb
xchg
mov
mov
movb
loop
lods
mov
lea
pop
push
push
push
dec
dec
push
push
pop
add
sub
rol
sub
add
pop
add
add
pop
push
push
push
push
push
push
lea
push
push
push
push
call
lcall
mov
xchg
add
loopne
leave
fwait
addb
mov
addb
add
cld
test
cld
neg
add
mov
add
jne
test
testb
mov
add
add
push
mov
lods
add
mov
into
icebp
add
add
add
xchg
test
add
add
add
add
mov
lea
pop
push
push
push
push
push
lea
push
call
mov
add
mov
add
xchg
add
fldt
add
pop
mov
imulb
leave
add
in
add
mov
lods
push
add
fistpl
mov
outsl
mov
cli
stos
add
push
negb
xorl
in
pop
jns
pusha
push
pop
lods
imul
pop
call
push
push
call
add
in
xchg
add
nop
pop
lahf
add
add
add
rolb
push
add
leavew
nop
lods
add
add
arpl
add
pushf
mov
arpl
scas
sti
pop
roll
cmpsl
mov
fwait
add
idiv
pop
add
add
add
or
add
mov
lea
pop
mov
push
push
push
push
push
push
push
lea
push
push
push
lea
push
call
mov
stos
pop
js
push
jnp
jnp
add
pop
rcrl
add
add
ret
in
lret
mov
add
jb
testb
jbe
repnz
mov
add
stc
add
mov
outsl
add
fadds
add
in
mov
add
jno
mov
lea
add
xchg
int3
lea
pop
mov
push
lea
push
push
lea
push
push
push
push
push
push
lea
push
call
add
add
pusha
in
les
filds
mov
mov
pop
jno
pop
add
test
pop
mov
add
add
mov
add
add
add
rolb
aam
lods
pop
jmp
lods
add
add
test
add
lds
filds
mov
add
mov
xchg
add
add
add
mov
add
push
jge
add
fimull
pop
add
push
push
lea
push
push
push
push
lea
push
lea
push
call
xchg
shrl
add
popf
add
xchg
lcall
rcrb
add
lods
add
cld
jp
add
add
cli
add
lock
std
jmp
jl
cwtl
data16
add
xchg
add
add
mov
insb
arpl
cltd
push
imul
shlb
add
lret
add
mov
lea
pop
add
add
push
push
push
push
lea
push
lea
push
push
call
std
pop
scas
add
cmc
adcl
push
add
pop
add
mov
add
add
jle
in
add
add
xlat
xlat
add
ljmp
xchg
add
add
stos
sti
into
add
arpl
test
jmp
jb
add
ljmp
jae
add
hlt
add
mov
lea
pop
mov
xor
push
push
push
push
push
lea
push
push
call
add
jo
add
movsl
pop
push
add
add
aad
add
int
add
add
hlt
add
jo
int3
jno
out
add
clc
add
pop
xlat
std
xchg
add
push
push
stos
pop
movsb
shrb
call
movl
add
mov
roll
jp
fwait
add
stos
lret
add
add
lock
add
push
call
testl
add
pop
add
push
dec
rol
ror
pop
push
push
sub
pop
mov
xor
push
lea
push
call
arpl
add
movsl
clc
scas
fwait
add
repnz
add
shlb
mov
int
add
test
push
arpl
js
scas
sahf
xlat
pop
clc
add
subb
push
rolb
lahf
in
popf
arpl
test
add
add
nop
iret
add
add
add
add
add
add
add
addr16
les
cwtl
add
out
mov
add
xchg
jb
insb
mov
lea
pop
add
push
xor
inc
add
not
pop
pop
mov
push
push
lea
push
call
nop
test
mov
nop
clc
rcrl
add
pop
add
mov
mov
add
add
mov
jb
faddl
add
out
mov
xchg
mov
add
lcall
mov
pop
add
add
jnp
add
lods
add
lock
loopne
std
jns
outsl
add
push
imul
out
fadds
popa
add
cld
lea
pop
xor
push
push
push
lea
push
push
push
lea
push
lea
push
call
popf
in
add
mov
push
jnp
cltd
addb
pop
addl
add
jae
add
add
lods
js
add
mov
add
imul
mov
xchg
shrl
out
add
fstps
mov
mov
loop
loopne
movsb
add
in
mov
lea
pop
add
push
push
call
ja
aam
testl
xchg
push
rolb
jle
add
mov
adcb
popl
sahf
fiadds
add
fiaddl
flds
jecxz
js
add
cld
xchg
add
ljmp
mov
add
mov
mov
sti
add
rolb
mov
add
ja
int3
lea
pop
rep
push
sub
dec
lea
pop
mov
push
push
push
push
lea
push
lea
push
push
push
call
pop
mov
xchg
add
add
add
jge
add
jb
test
lods
mov
fadds
popa
pushf
repnz
xchg
mov
pusha
xchg
push
outsl
mov
add
leave
push
jmp
add
mov
lahf
fldt
jle
aad
add
mov
mov
test
fsubs
jmp
jno
add
add
xchg
add
ljmp
jne
aam
bound
xor
push
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
add
add
fldl
add
add
out
add
jl
mov
add
add
jl
add
fwait
xchg
add
pop
outsl
mov
add
add
add
movsl
rcrb
add
loopne
scas
mov
add
pusha
add
add
jle
xchg
test
add
mov
test
cmpsl
add
leave
sti
gs
add
pop
add
push
sub
xor
rol
pop
or
je
mov
xor
push
push
push
push
push
push
push
lea
push
push
call
mov
jnp
add
lret
mov
add
neg
add
data16
add
xchg
popf
add
add
cwtl
add
push
mov
jae
loope
std
mov
fwait
pop
push
jae
add
add
push
jp
add
movsl
add
add
add
add
fucomi
out
add
xchg
fcom
add
les
pop
mov
push
push
push
lea
push
lea
push
lea
push
lea
push
push
push
call
testl
add
add
stc
add
gs
add
mov
imulb
popl
sub
scas
add
jo
out
add
mov
lret
lods
mov
add
loopne
fidivrs
add
lea
pop
mov
pop
pushf
add
in
add
sahf
sbbl
add
aad
fmull
adc
push
push
lea
push
lea
push
call
test
add
mov
add
test
mov
xchg
add
lock
cmc
jecxz
jge
pop
movl
fsts
icebp
aam
in
std
add
add
mov
add
cmpsl
push
add
xchg
jo
add
cmpsb
xchg
jno
test
add
xchg
cmpsb
rol
jge
add
arpl
iret
popl
pop
add
les
les
add
push
add
shl
pop
add
push
push
push
call
add
mov
aad
loope
leave
add
add
add
lcall
add
lret
push
ret
jne
ja
add
add
mov
add
add
add
mov
mov
jne
fsubr
add
js
add
add
add
add
div
add
push
ljmp
data16
add
jae
add
sarb
pop
call
lea
pop
add
push
push
add
ror
pop
mov
push
push
push
push
lea
push
call
outsl
add
push
add
orb
roll
insb
pop
add
add
shlb
movb
test
add
stos
add
add
add
arpl
xchg
add
cld
add
add
add
fists
enter
add
add
add
add
shrl
xchg
add
jns
push
add
add
mov
fstps
popa
mov
pop
xor
push
push
lea
push
call
movsb
add
gs
add
jb
mov
stc
push
add
mov
mov
arpl
ja
stos
fwait
add
add
add
add
jo
cmpsl
xchg
mov
call
add
add
add
mov
add
add
add
add
add
imul
arpl
cmc
jmp
pusha
or
add
push
push
push
push
push
lea
push
call
add
je
add
pusha
flds
movsb
add
add
push
add
add
push
push
lock
add
loope
lds
mov
sahf
sar
add
int3
add
lock
add
mov
push
xchg
movl
mov
fwait
xchg
xorl
add
mov
sbb
lock
push
push
push
lea
push
push
push
push
call
add
in
std
add
add
insb
int
into
int3
mov
ljmp
lods
cmc
add
push
vcvtpd2psx
aad
roll
add
pushf
les
mov
add
jns
xlat
pop
xchg
pushf
xchg
mov
add
popf
jno
add
add
push
add
add
pop
add
add
insb
add
cli
pusha
test
mov
lea
pop
pop
push
sub
shr
shl
pop
rep
push
shr
not
sub
pop
mov
push
push
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
mov
lods
cmpsl
jb
pop
add
shrb
popf
push
add
roll
movsl
xchg
add
push
add
add
add
iret
add
add
lea
add
stos
stc
sahf
test
add
add
iret
mov
mov
cwtl
fwait
add
add
int3
add
add
add
pop
add
mov
lea
pop
xor
push
lea
push
push
push
push
push
push
push
push
call
add
add
add
mov
shl
add
subb
add
fildl
int3
add
je
test
mov
xchg
ja
cld
pop
add
jge
push
rol
in
insb
jns
out
add
test
jo
jecxz
add
add
test
cmpsb
add
jmp
fldl
aad
imul
addb
xchg
in
pop
add
lea
pop
add
push
lea
push
call
pusha
add
add
lcall
add
fldcw
stc
add
add
out
mov
mov
int3
cld
add
add
add
add
jge
popf
out
add
add
fldl
jge
add
cmpl
push
add
in
add
add
push
mov
jecxz
mov
lea
pop
or
je
mov
push
add
pop
add
push
push
lea
push
push
push
push
push
push
push
push
call
testb
clc
mov
add
stc
cltd
add
add
jle
push
jne
add
pop
pop
add
add
add
cmpsl
add
xchg
xchg
pop
add
popa
add
mov
add
sti
rolb
lock
add
mov
scas
add
push
roll
add
add
cld
stos
iret
add
cld
cltd
lret
clc
rcrl
andb
add
add
stos
add
xchg
add
pop
add
push
push
push
push
push
call
icebp
add
mov
add
movsb
add
mov
cmpsl
fisubrs
add
outsl
movsl
int
in
out
add
cwtl
jle
lcall
js
lahf
leave
jns
add
cmpb
add
mov
add
popa
mov
mov
cmc
add
mov
add
add
add
addb
test
pop
rep
pop
push
push
inc
ror
push
or
not
add
not
not
sub
sub
not
pop
shr
lea
pop
push
push
call
add
fsts
add
add
add
aad
andl
jl
add
jp
add
test
imul
popf
bound
gs
popf
bound
jae
xchg
addb
ljmp
mov
mov
add
add
sahf
add
loope
mov
mov
add
add
aad
je
mov
bound
pop
pop
push
lea
push
push
push
push
lea
push
push
call
fcmovne
add
mov
jmp
add
add
movl
add
xchg
push
flds
out
clc
ljmp
add
add
mov
lds
add
scas
xchg
sahf
mov
stos
mov
mov
add
jmp
add
add
pop
add
stos
mov
mov
sbbl
add
hlt
lea
pop
mov
mov
push
push
push
call
xor
pop
popa
lods
add
cmpb
roll
mov
jl
add
mov
mov
jmp
add
pop
xchg
gs
add
iret
jle
sahf
mov
mov
add
add
jne
add
add
mov
ja
mov
lret
hlt
add
add
add
add
out
mov
ljmp
out
out
loop
mov
lea
pop
mov
push
lea
push
lea
push
push
push
push
push
call
cli
add
add
add
ja
lahf
add
pop
xchg
mov
add
add
add
add
ja
test
add
jecxz
lret
add
popa
add
xchg
xchg
add
push
aam
out
flds
add
add
add
fists
xchg
loopne
ja
cwtl
add
pop
jmp
push
push
push
push
push
push
push
push
push
push
call
fstps
js
loopne
pop
loope
add
push
add
add
add
lahf
iret
cltd
jo
icebp
mov
jo
pusha
add
mov
fbstp
mov
mov
add
add
mov
jns
testb
scas
add
add
arpl
xchg
add
mov
jmp
push
add
push
push
add
hlt
lea
pop
mov
push
push
push
push
push
lea
push
lea
push
call
add
jl
int3
outsl
add
add
xchg
mov
add
mov
mov
jmp
adcb
add
add
insb
fwait
rolb
lock
add
arpl
mul
jp
xchg
movsl
lods
add
lds
add
jbe
add
insb
scas
stos
add
movsb
add
scas
scas
add
leave
iret
add
add
add
mov
jge
add
push
shll
add
pusha
xchg
rcrb
pop
pop
add
push
xor
pop
push
push
dec
ror
pop
push
push
push
push
push
lea
push
call
add
add
add
int
lahf
add
call
in
fiaddl
add
ja
lcall
mov
icebp
add
popf
lds
ffreep
add
add
add
add
add
mov
push
cwtl
pop
mov
fldl
mov
add
addr16
push
or
mov
push
push
push
lea
push
push
lea
push
push
push
push
call
movb
add
add
add
add
jne
roll
lahf
movsb
xlat
mov
mov
outsl
shl
divl
fst
fisttpl
add
add
jae
add
add
call
mov
addb
fsubr
add
imul
jmp
shll
sahf
push
add
jns
stos
push
xchg
mov
lea
pop
pop
pop
pop
push
push
push
lea
push
lea
push
push
push
call
push
hlt
add
add
add
mov
lea
pop
mov
mov
add
add
add
add
mov
sub
add
jns
add
add
mov
stos
notb
hlt
mov
mov
add
mov
mov
jl
add
add
mov
mov
add
pop
pop
push
lea
push
push
lea
push
push
lea
push
push
call
popa
lods
pushf
fdivrp
pop
test
andl
add
mov
jge
add
add
aam
mov
push
in
cld
rolb
in
push
stc
jae
add
int3
push
add
add
jle
pop
cld
cld
rcll
lock
jne
jl
iret
jo
scas
add
aad
add
add
out
mov
add
mov
lea
pop
leave
ret
push
push
not
sub
pop
mov
add
push
push
pop
push
push
not
sub
inc
dec
pop
push
push
push
push
push
lea
push
push
call
mov
pop
add
add
rolb
iret
push
test
mov
into
imul
pop
pop
add
add
in
aad
lcall
add
jl
jbe
add
fadds
fidivs
test
push
xchg
push
add
xchg
add
mov
xlat
add
movsl
add
add
fldcw
add
fiadds
repnz
subb
mov
xchg
mov
lea
pop
movl
push
lea
push
push
push
push
push
push
push
lea
push
push
call
xchg
add
mov
xchg
loop
mov
add
gs
pop
xchg
add
repnz
jne
xchg
push
cld
lea
add
add
add
jnp
rcl
add
add
mov
push
rcr
jbe
xchg
scas
add
add
je
scas
add
xlat
add
add
mov
add
add
test
cmc
add
add
add
add
add
mov
nop
push
mov
lea
pop
addl
test
je
mov
push
xor
pop
pop
pop
push
sub
pop
pop
pop
leave
push
push
push
push
push
push
push
lea
push
push
call
lods
add
mov
mov
cwtl
xchg
lahf
imul
add
nop
in
add
lret
add
add
fldl
add
hlt
aad
stos
add
mov
rolb
xchg
mov
add
mov
add
lahf
push
add
jp
add
add
jo
add
shlb
outsl
add
fmull
add
push
push
call
add
add
jbe
add
add
jbe
add
add
push
xchg
lcall
add
xchg
add
add
add
popl
mov
xchg
pop
aam
add
insb
mov
nop
insb
xchg
lcall
fldenv
add
in
fadds
add
out
pop
mov
movsb
in
xchg
cld
add
in
add
fisttps
pop
push
mov
push
push
push
lea
push
lea
push
call
shll
pushf
testb
cld
jl
test
test
jp
add
add
xchg
rorb
out
add
add
pop
add
stos
into
add
repnz
pushf
add
mov
add
mov
add
jne
jmp
xchg
xchg
lret
add
out
cli
push
mov
lods
add
add
add
scas
add
ja
data16
pop
add
fiaddl
mov
lea
pop
add
push
shl
shl
not
pop
push
push
push
push
lea
push
lea
push
push
call
add
push
push
add
add
enter
jmp
shrl
ja
jl
lret
stc
mov
mul
addb
fnstsw
mov
add
ficoml
rol
mov
add
add
ffreep
add
add
mov
cmc
add
add
add
fadds
add
add
add
add
loopne
and
aad
pop
mov
arpl
push
push
push
push
lea
push
push
lea
push
push
push
push
push
call
fsin
loop
in
std
pop
push
add
pushf
add
cmpsl
add
std
data16
movsl
xchg
add
mov
fsubrs
add
jne
test
imul
cmpsl
fisubl
mov
xchg
hlt
push
arpl
jae
jle
add
loopne
mov
call
add
fwait
add
pop
push
push
push
lea
push
push
push
lea
push
call
aad
pop
in
add
add
push
js
fmulp
jo
add
add
add
std
add
xchg
mov
and
add
add
add
fcmovnu
cli
sahf
add
add
pop
xchg
jnp
clc
pop
push
test
add
stc
lret
add
jnp
add
popa
add
add
nop
xchg
add
out
push
mov
add
add
bound
pop
testl
addl
push
push
sub
pop
call
push
push
push
push
call
add
mov
add
add
call
mov
pop
jmp
add
fadds
add
xchg
fistpl
push
pop
add
cmc
add
add
aam
add
movsl
add
push
gs
add
iret
hlt
add
cltd
xchg
loope
mov
leave
push
mov
icebp
aam
add
cmpsb
xabort
xchg
mov
lea
pop
mov
pushl
push
push
push
lea
push
push
call
out
addl
fcomi
mov
roll
lds
add
lods
mov
add
test
add
add
out
mov
add
pop
leave
add
add
add
les
iret
leave
test
mov
add
rolb
add
in
out
iret
add
lock
lods
adcb
into
testl
stos
mov
lea
pop
push
push
lea
push
lea
push
call
add
jle
add
test
add
test
add
into
mov
int3
stos
add
push
icebp
jmp
nop
outsl
mov
mov
lret
fstp
push
xchg
in
add
cwtl
repnz
add
add
push
add
mov
add
mov
mov
add
add
cwtl
clc
test
rclw
push
add
add
add
xchg
add
fildl
add
movsb
xor
hlt
lea
pop
call
cmpl
jne
pop
push
sub
pop
pop
pop
pop
push
push
push
push
push
lea
push
lea
push
call
lods
jnp
add
add
cld
lret
popa
add
push
ljmp
mov
add
add
xlat
add
add
mov
add
xchg
mov
add
stos
icebp
jmp
add
cltd
pusha
add
out
mov
stos
add
addr16
fistpl
add
add
movl
into
add
add
mov
pushf
jb
neg
add
mov
jns
aam
bound
leave
push
xor
not
add
pop
ret
push
push
push
lea
push
lea
push
call
add
std
mov
add
add
push
mov
ja
add
add
mov
add
add
xchg
jl
xlat
jp
xchg
fwait
add
scas
xchg
lods
mov
test
add
add
negb
pop
aam
push
mov
add
addb
lock
fnstcw
into
cltd
add
movsb
ljmp
add
jge
out
mov
test
add
add
fmull
mov
push
lea
pop
add
push
push
push
push
call
push
lock
add
add
les
xchg
stos
andl
push
jecxz
add
lock
cmpsb
push
mov
add
add
add
les
push
je
jnp
jge
add
jo
add
mov
add
lret
jo
add
stc
notb
test
fidivrl
pop
mov
pop
push
push
push
push
push
push
push
lea
push
push
push
call
popf
repnz
add
add
in
add
mov
add
mov
add
xchg
push
cmc
add
add
add
adcl
clc
jp
in
mov
add
je
add
add
pusha
jmp
jp
pusha
add
add
testl
add
add
add
add
in
add
clc
add
pop
add
pop
push
push
push
lea
push
push
lea
push
call
push
aam
add
shr
add
rcl
add
add
mov
add
xchg
xchg
add
add
push
lcall
jbe
testb
rol
add
out
xchg
add
add
andb
mov
ret
add
pop
add
popa
jmp
loop
add
add
add
pushf
lea
out
add
lea
pop
push
push
push
push
call
lret
add
sahf
add
xchg
imul
add
add
add
add
rorl
add
lcall
add
repnz
jge
jecxz
mov
add
push
mov
push
xchg
add
fsubs
imul
test
add
stc
mov
lea
pop
movl
push
push
push
push
push
push
push
call
add
add
in
rol
cli
xchg
out
add
lret
enter
lcall
jae
sahf
add
mov
lods
fisubl
add
fldl
lods
test
mov
ja
xchg
jbe
filds
add
mov
pop
jbe
add
jno
add
test
add
incb
aad
add
mov
addb
add
ljmp
push
push
push
lea
push
lea
push
push
push
call
jmp
subb
add
enter
stc
mov
mov
cli
outsl
add
xchg
mov
mov
add
xchg
add
cwtl
ja
add
nop
add
add
les
add
imul
xchg
xchg
add
xchg
add
add
jle
add
jo
mov
mov
aam
lcall
jns
rorb
pop
call
push
sub
shr
ror
pop
push
call
subl
push
push
push
lea
push
lea
push
lea
push
call
add
add
pusha
add
jns
movsb
add
mov
jns
add
shl
iret
add
aam
add
jge
enter
call
add
add
add
lahf
mov
nop
mov
pop
add
pop
fistps
lods
mov
roll
scas
cmc
mov
add
add
cltd
mov
add
add
fcompl
mov
add
add
pop
add
add
add
pop
cmpl
jne
pop
push
push
push
lea
push
push
push
push
lea
push
push
call
rolb
add
mov
hlt
sti
add
jno
jne
fstl
lret
jne
add
rolb
add
ficompl
fsubr
add
add
add
nop
in
add
mul
clc
add
imul
add
add
mov
add
cwtl
mov
lea
pop
pop
push
shr
add
pop
pop
push
push
push
lea
push
push
push
push
call
mov
lret
out
add
in
cld
add
push
push
add
add
js
mov
pop
add
hlt
add
loope
xchg
add
add
add
xchg
add
add
lahf
in
int
lcall
jmp
bound
pop
add
jle
add
mov
out
add
push
mov
pop
add
add
add
add
lods
add
stos
mov
add
in
jmp
push
add
fiadds
add
mov
lea
pop
pop
leave
ret
push
push
call
pop
add
add
js
add
scas
out
pop
add
xchg
add
stos
ljmp
push
in
mov
push
add
add
mov
mov
add
pop
add
enter
loop
jns
cmpsl
add
add
add
bound
mov
push
add
add
add
or
push
add
shl
pop
mov
add
push
push
ror
pop
push
push
shl
pop
push
push
push
lea
push
lea
push
lea
push
push
push
push
lea
push
call
test
fdivrs
add
add
xchg
add
fisubl
xchg
popf
add
movsb
xlat
fwait
add
pop
push
mov
mov
add
test
xchg
jp
add
cwtl
add
add
add
add
add
cmpsb
push
add
leave
mov
enter
mov
aam
bound
push
push
push
push
push
lea
push
call
faddp
add
add
add
add
jmp
popa
int3
add
cltd
js
xchg
into
cmpsb
into
add
add
add
mov
mov
add
add
insb
add
push
add
add
add
roll
pop
cmc
scas
fadds
incb
mov
pop
shlb
add
aam
test
lds
add
leave
add
mov
add
add
mov
ficoms
lea
pop
mov
lea
push
lea
push
call
in
je
mov
xor
mov
ja
fadds
mov
in
out
insb
jmp
jbe
add
add
mov
popf
add
ror
add
jnp
outsl
add
testl
clc
mov
add
add
hlt
add
add
pop
add
sahf
movl
add
repnz
add
cmpsl
add
lea
pop
sub
mov
shr
push
shl
add
lea
pop
add
push
rol
dec
not
pop
mov
mov
push
lea
push
call
add
jge
jae
add
add
cmpsl
add
add
mov
leave
lea
xabort
add
add
movsl
pop
popf
cli
shl
pushf
ja
pusha
int
xchg
xlat
mov
mov
cmpsb
loopne
int3
mov
xchg
mov
add
mov
add
sahf
add
into
add
cli
pusha
add
add
add
add
add
add
pop
add
add
push
shr
pop
mov
mov
push
push
push
lea
push
push
push
push
push
push
call
add
add
add
scas
popf
add
hlt
jae
add
out
fists
push
add
flds
rolb
out
popa
add
add
pop
add
add
add
add
lock
add
fstpt
mov
lcall
jno
arpl
add
jne
add
add
add
cwtl
xchg
add
add
iret
add
add
xchg
bound
aam
bound
cmp
jne
cmp
jne
mov
push
rol
sub
pop
movl
push
push
call
add
add
jp
call
andb
lds
lcall
add
shl
add
add
add
orb
nop
add
stos
lahf
xchg
add
jo
mov
out
rcrl
add
jge
aam
arpl
add
add
ret
mov
aam
bound
pop
jmp
push
sub
pop
mov
mov
push
lea
push
push
push
call
add
pop
add
mov
shlb
add
add
add
cld
xchg
xchg
add
lods
add
std
add
fstps
add
fildll
jb
push
repnz
xlat
jne
add
lea
loope
cmpl
add
mov
out
imul
lods
movsb
add
jo
add
add
add
xchg
js
out
add
rolb
pop
xchg
sti
mov
lea
pop
sub
jne
push
dec
not
dec
pop
mov
movl
jmp
push
not
pop
mov
mov
push
lea
push
push
call
add
cmc
out
mov
call
out
mov
pop
add
imul
in
ror
pop
fwait
jbe
push
lods
add
in
add
lret
cli
call
xchg
add
add
add
cwtl
xchg
mov
xor
cld
imul
add
mov
add
jno
lods
mov
js
repnz
mov
lea
pop
cmp
jne
mov
movl
push
push
push
push
lea
push
push
push
call
mov
mov
add
add
in
jae
add
fbld
add
add
loop
mov
call
movl
add
in
add
in
stos
add
jl
mov
lock
std
out
mov
jmp
push
add
add
rolb
pop
jns
pop
add
roll
pop
ror
add
add
mov
xchg
add
push
mov
lea
pop
jmp
push
shr
not
pop
mov
push
push
push
push
push
push
lea
push
call
add
xchg
insb
add
mov
add
add
mov
add
add
mov
mov
rolb
mov
popa
push
add
sti
lds
lcall
addl
add
insb
add
popa
add
popl
add
js
stos
push
jns
cld
lea
pop
cmpw
jne
push
shr
pop
mov
push
lea
push
push
push
push
push
push
push
push
lea
push
call
mov
add
add
add
out
add
add
out
add
mov
jl
mov
jae
lret
add
out
add
ja
fwait
push
add
jnp
mov
mov
add
add
add
jo
les
rol
add
jb
add
add
arpl
mov
jecxz
mov
scas
stos
lods
add
add
mov
lea
pop
movl
push
rol
inc
add
pop
jmp
push
pop
pushl
push
inc
shr
rol
pop
pop
push
xor
rol
inc
pop
mov
push
sub
pop
mov
mov
push
push
sub
push
or
not
add
shr
shr
lea
sub
ror
sub
not
rol
pop
sub
pop
push
sub
pop
push
push
add
pop
call
cmpl
je
push
push
rol
xor
dec
not
push
push
pop
add
sub
sub
sub
add
pop
inc
shl
pop
push
push
push
call
add
add
mov
iret
xchg
add
pop
mov
filds
cmpsl
into
xchg
add
mov
add
subl
andb
jp
mov
add
imul
int
insb
add
add
xchg
add
stos
add
ret
fstpl
pop
add
mov
add
loopne
cmp
mov
lea
pop
push
call
cmpl
je
push
push
ror
sub
rol
push
and
add
sub
sub
shl
sub
rol
pop
shl
add
pop
push
shr
pop
push
call
push
push
push
lea
push
lea
push
push
push
push
call
add
add
loope
jo
mov
add
movl
aad
cmpsb
xlat
cld
mov
jecxz
add
add
add
jbe
jae
in
add
add
test
test
mov
mov
stos
add
ja
add
add
push
fistpl
add
add
scas
add
ljmp
icebp
add
add
xchg
add
mov
lea
pop
cmpl
je
push
push
add
add
push
push
pop
add
add
sub
rol
pop
inc
pop
push
xor
inc
not
pop
push
push
shr
pop
call
cmpl
je
push
push
shr
push
sub
add
lea
sub
sub
pop
not
ror
not
shr
pop
push
push
lea
push
push
lea
push
push
lea
push
lea
push
call
add
add
ja
shll
push
add
add
add
add
jae
add
add
fdivr
add
add
gs
mov
add
filds
aad
aad
arpl
add
arpl
pusha
push
int
add
add
popa
add
hlt
mov
add
add
into
add
stos
imul
std
push
add
pop
push
push
push
push
push
push
push
push
push
lea
push
call
mov
add
ja
xorl
iret
add
sarb
rclb
aad
lcall
jp
ja
jl
add
push
add
rcr
rol
add
mov
aam
jns
lret
fistpll
test
add
mov
add
add
add
add
add
icebp
add
adcb
pusha
and
call
cmpl
je
push
push
dec
sub
push
and
add
not
sub
sub
shl
inc
pop
add
xor
xor
pop
push
add
add
dec
shl
pop
push
push
lea
push
lea
push
push
call
cli
add
add
add
xchg
lods
stc
xchg
xchg
jae
test
add
pop
jle
std
jno
cltd
xchg
repnz
mov
mov
cwtl
add
addr16
test
outsl
add
fsubr
xchg
mov
add
push
add
xchg
insb
scas
add
add
imul
mov
mov
add
pushf
xchg
add
jbe
add
add
shrl
aam
bound
pop
call
push
push
lea
push
lea
push
push
lea
push
push
call
int
call
jne
imul
lcall
lds
add
jb
lret
lods
roll
fcomps
jnp
mov
fisubrs
addr16
in
add
mov
arpl
mov
jnp
mov
add
add
xchg
jno
lods
add
add
jb
mov
lea
pop
cmpl
je
push
push
sub
lea
push
or
not
add
add
add
sub
dec
sub
add
pop
not
rol
pop
push
push
lea
push
push
lea
push
push
push
push
call
add
add
stos
scas
fwait
popa
movsb
add
add
repnz
cmc
jnp
sti
add
add
add
add
mulb
add
add
add
xchg
add
add
mov
add
jne
add
mov
add
loop
add
int3
mov
leave
shll
pop
add
mov
lea
pop
push
call
cmpl
je
push
push
lea
push
sub
add
sub
sub
rol
shr
pop
xor
pop
push
push
push
push
lea
push
push
push
call
andb
test
mov
icebp
pop
notl
mov
bound
add
xchg
add
int3
mov
ret
cmpsl
add
add
xchg
repnz
add
testb
mov
mov
add
pusha
movsl
add
data16
jae
add
add
std
jnp
out
add
loope
lret
pop
add
push
mov
add
xchg
add
mov
test
out
add
mov
sarl
les
push
push
push
call
xchg
out
rorb
add
add
mov
add
add
mov
push
add
fimull
scas
shr
in
mov
mov
stos
add
mov
add
popl
icebp
add
cmc
add
imul
bound
into
mov
fs
flds
subl
add
adc
add
bound
pop
call
cmpl
je
push
push
xor
rol
not
add
push
and
add
lea
sub
xor
pop
shr
sub
pop
push
lea
push
push
push
push
push
call
imul
outsl
mov
in
out
out
add
iret
lock
add
stc
mov
scas
jo
push
imul
xchg
pop
cmpsl
xchg
add
enter
test
cmpsl
add
add
add
add
add
add
out
lahf
add
fildl
mov
add
jecxz
aad
mov
add
add
int3
pop
add
add
mov
aam
bound
pop
push
call
cmpl
je
push
push
rol
push
xor
add
rol
inc
sub
sub
sub
ror
not
not
pop
sub
lea
not
pop
push
push
lea
push
push
push
call
cmpsl
mov
add
add
scas
add
stos
out
mov
push
out
xchg
add
jecxz
mov
call
mov
cld
add
add
add
faddl
add
out
std
mov
lods
hlt
add
add
xchg
test
cwtl
push
out
movsl
mov
xchg
add
stc
add
add
out
jle
out
add
add
mov
hlt
lea
pop
push
call
cmpl
je
push
push
sub
rol
ror
push
or
inc
add
shr
add
add
sub
rol
shl
dec
pop
add
add
ror
pop
push
lea
pop
push
call
push
lea
push
push
push
lea
push
push
push
push
push
call
shll
leave
jb
insb
add
les
movsl
nop
mov
add
jnp
add
add
push
in
out
xchg
add
jns
in
ljmp
add
mov
xchg
add
test
push
add
icebp
cmc
je
std
add
ljmp
movsb
mov
add
clc
lods
mov
test
hlt
add
push
mov
lea
pop
cmpl
je
push
push
sub
push
or
not
add
add
sub
xor
add
dec
pop
rol
inc
pop
push
push
push
push
push
push
push
push
push
push
lea
push
call
push
add
pop
cld
add
add
mov
mov
mul
test
ror
stos
test
imul
stos
add
addl
add
fisubl
add
add
into
into
add
add
pop
mov
mov
add
out
add
add
mov
cld
lea
pop
call
push
push
push
push
call
loop
add
add
push
addl
add
xchg
insb
mov
incb
lds
jmp
sahf
add
add
data16
lods
add
cmc
mov
ja
aam
add
add
add
mov
jae
cmpl
pop
add
xlat
jne
mov
add
add
add
add
js
add
add
add
mov
lea
pop
cmpl
je
push
push
lea
not
xor
add
push
or
not
add
sub
sub
sub
shl
add
pop
shr
dec
add
pop
push
rol
rol
not
pop
push
call
cmpl
jne
push
add
add
not
sub
pop
mov
movl
jmp
push
push
call
add
sti
lret
add
add
add
popa
jno
add
lret
add
add
imul
sti
lods
test
mov
mov
mov
add
flds
lods
add
add
fisubrl
add
mov
in
loop
jle
nop
mov
mov
jl
mov
add
jno
fwait
add
leave
add
add
add
add
mov
lea
pop
xor
push
push
push
push
push
push
push
call
add
pushf
add
scas
add
add
xchg
std
add
add
in
push
imul
jne
pop
pop
mov
add
push
cmpsl
pop
add
cld
jno
jge
jb
movb
xchg
clc
mov
test
out
add
std
enter
into
lahf
add
mov
loope
add
lret
popf
jb
adc
pop
push
add
add
jo
aam
bound
pop
push
dec
shr
pop
pop
push
push
push
push
push
push
lea
push
push
push
call
aad
mov
jb
push
ljmp
add
loope
add
mov
in
jnp
add
add
mov
add
add
pop
test
push
add
add
scas
into
pushf
xchg
add
movsb
push
jne
movsl
adcb
loopne
add
je
push
add
cmpsb
mov
add
add
mov
rolb
mov
shr
out
add
mov
lea
pop
pop
pop
push
inc
sub
pop
leave
push
pop
ret
push
push
push
push
push
push
push
push
push
call
push
repnz
mov
sbbb
ljmp
add
imul
add
xchg
mov
fsubl
jbe
data16
add
add
les
xchg
add
add
enter
stos
bound
mov
mov
push
cltd
add
idivb
je
add
mov
lea
pop
push
mov
add
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
add
je
mov
hlt
cli
pop
bound
in
add
out
nop
movb
add
mov
mov
iret
loope
std
lock
add
jne
add
add
pop
rcrb
out
add
xchg
mov
stos
aam
in
sti
popf
mov
pop
jb
push
add
add
stos
add
leave
scas
stc
add
in
mov
add
jmp
mov
les
jge
add
test
add
add
dec
or
push
xor
push
and
add
sub
not
sub
ror
not
sub
pop
shl
ror
shr
pop
push
push
lea
push
lea
push
push
lea
push
push
push
push
push
call
rcrl
loop
add
loopne
pop
add
test
add
addb
les
add
addr16
add
lahf
add
add
mov
add
jno
add
into
mov
add
lcall
pop
push
stos
push
add
add
mov
add
add
cmc
mov
lea
pop
pushl
push
push
lea
push
push
push
push
lea
push
call
loop
notl
out
mov
add
add
mov
pushf
add
cltd
pushf
add
add
add
add
jnp
int3
add
mov
mov
in
add
stc
add
jno
add
push
call
add
xchg
add
add
pop
add
sahf
imul
stos
cmc
mov
lea
pop
call
push
push
push
push
push
call
pop
mov
add
lods
add
popf
loop
xchg
push
fucomp
pop
mov
subl
leave
pop
add
out
jle
into
add
push
add
add
add
nop
in
mov
mov
cwtl
add
add
add
pop
scas
stos
xlat
add
jbe
rolb
testl
les
mov
add
add
pop
push
call
jmp
push
dec
add
pop
cmpl
je
push
push
lea
push
push
call
cli
add
cmpsb
add
addb
jge
push
mov
add
iret
push
loop
add
add
testl
add
stos
mov
out
pusha
add
rorl
add
add
outsl
add
repnz
aam
add
out
add
xchg
data16
add
cltd
pop
call
add
je
jmp
lea
pop
cmpl
jne
push
push
lea
push
push
lea
push
push
push
push
push
call
lea
add
add
add
out
add
fldt
test
add
fucomp
add
xlat
leave
add
add
push
add
pop
add
add
mov
add
xchg
fsubr
mov
add
movsl
in
cmpl
out
scas
mov
add
add
in
out
shll
lea
pop
leave
add
push
inc
lea
pop
pop
pop
pop
push
sub
dec
pop
pop
leave
push
push
lea
push
push
lea
push
push
call
push
mov
sahf
add
pop
add
add
jge
out
push
sarb
flds
add
mov
add
add
add
add
fadds
pusha
mov
test
add
add
je
lds
add
addl
enter
mov
add
add
add
mov
lea
pop
add
ret
jmp
push
push
push
push
push
push
push
call
shll
outsl
add
std
cld
add
icebp
add
loopne
add
add
mov
mov
mov
add
test
xchg
cmpsb
popl
add
jp
pop
je
pushf
add
imul
add
filds
mov
fnstcw
xchg
add
pusha
add
mov
add
loop
fisubrs
add
jno
les
jge
add
test
add
push
push
lea
push
xor
add
add
ror
sub
rol
shr
lea
pop
xor
xor
not
pop
push
push
push
push
push
push
lea
push
call
add
outsl
add
mov
lds
push
iret
mov
add
int
add
xchg
out
aam
xchg
add
enter
iret
add
testl
fists
add
pushf
add
loope
add
lea
bnd
stos
scas
add
outsl
cwtl
push
mov
lea
pop
pushl
call
push
ror
sub
pop
push
push
shl
dec
pop
call
push
inc
sub
dec
pop
jmp
push
push
push
push
push
push
push
push
push
call
mov
fcmovu
add
add
add
loop
iret
add
arpl
fucom
mov
insb
xchg
pop
cwtl
mov
aad
stos
call
cli
push
bound
add
add
jo
testl
popl
xchg
shll
push
mov
lcall
mov
cli
add
test
jne
add
add
pushf
lock
lea
pop
cmpl
jne
push
lea
push
push
push
push
lea
push
call
mov
test
xchg
add
stos
out
scas
add
mov
movb
stos
add
ret
push
rol
jns
loop
add
xlat
push
mov
push
mov
leave
jae
mov
in
xchg
leave
add
add
mov
js
insb
add
mov
imul
add
je
roll
add
sbb
add
add
mov
push
not
pop
jmp
push
push
dec
pop
pop
dec
jne
push
push
push
lea
push
lea
push
call
add
jl
add
add
lock
mov
mov
clc
rclb
add
jbe
fdivl
add
mov
add
add
xchg
ret
xchg
jmp
add
xchg
test
leave
add
movsl
cltd
add
imul
add
add
movsb
aam
bnd
shl
cmpl
shl
mov
lea
pop
call
jmp
push
push
push
push
push
push
push
call
add
push
add
xchg
insb
mov
hlt
incb
pop
aad
xchg
add
add
je
add
mov
mov
ja
add
xlat
popl
add
xchg
add
add
idiv
ja
out
enter
add
jle
test
mov
movsl
data16
lods
cltd
add
int3
xchg
mov
lea
pop
call
push
push
shr
shl
push
sub
add
rol
shr
sub
xor
inc
pop
shl
pop
push
not
sub
shr
pop
pushl
call
push
add
add
not
pop
push
call
push
add
pop
mov
push
shl
dec
sub
sub
pop
lea
push
push
not
add
add
push
push
pop
add
sub
sub
add
pop
shl
dec
shl
rol
pop
push
push
push
push
push
push
lea
push
lea
push
push
call
popa
add
mov
add
mov
mov
add
pop
pop
add
clc
enter
add
add
or
add
pusha
out
mov
add
add
add
imul
add
add
add
jge
add
add
rolb
ret
add
lock
test
les
lock
lea
pop
pushl
call
push
push
ror
add
shl
pop
call
push
push
add
rol
dec
lea
push
or
not
add
sub
sub
add
not
rol
pop
sub
sub
sub
pop
push
push
push
push
push
push
push
push
push
call
imul
aad
xchg
arpl
add
pop
add
add
xchg
add
pop
add
filds
testb
out
add
filds
push
pop
jne
sti
imul
test
lret
add
mov
mov
push
test
add
add
int
mov
scas
out
enter
add
cmc
mov
mov
and
pushl
push
add
rol
pop
call
call
mov
push
push
push
push
push
lea
push
push
push
push
push
call
add
push
add
out
add
add
add
add
popf
mov
mov
xchg
add
imul
ficompl
add
pusha
fstpl
add
adcb
addl
faddl
jno
roll
insb
jp
xor
popf
add
rcr
jne
flds
lret
cmc
add
add
add
stos
add
mov
xchg
add
sub
pushf
and
ljmp
mov
loop
push
or
inc
add
lea
rol
sub
pop
add
pop
pushl
push
shl
add
shl
pop
call
lea
push
push
push
push
push
push
push
push
push
lea
push
call
add
add
mov
movsw
add
aad
push
add
mov
add
add
add
add
add
call
mov
mov
push
stc
hlt
sarb
add
faddl
push
add
enter
add
add
fisubrs
in
nop
int3
clc
xchg
movsb
add
loope
arpl
add
out
add
add
add
add
add
mov
lea
pop
push
push
push
add
pop
pushl
push
push
sub
add
push
or
not
add
shl
sub
sub
sub
pop
ror
inc
pop
push
lea
rol
lea
pop
push
call
push
push
inc
push
and
add
ror
sub
shl
ror
pop
add
sub
pop
push
sub
not
pop
pushl
call
push
add
inc
pop
push
push
sub
inc
rol
pop
call
push
push
xor
push
and
add
sub
sub
inc
sub
inc
pop
add
inc
sub
pop
push
lea
push
push
push
push
push
push
push
push
call
fidivl
add
rclb
add
add
add
push
lods
add
lea
out
insb
add
popf
add
lret
add
pop
mov
add
fcmovne
add
mov
add
mov
add
add
test
pop
outsl
fbld
cli
hlt
mov
stc
add
popf
mov
test
mov
shll
iret
add
add
addr16
pushl
push
lea
push
push
push
push
push
call
add
lea
lret
test
add
loope
add
add
mov
roll
mov
push
iret
sti
add
add
lods
add
loopne
add
add
scas
add
add
movsl
rclb
shll
mov
pop
add
add
in
add
je
add
popf
add
pop
mov
mov
mov
in
add
std
scas
cmc
cmpsl
enter
add
pop
call
call
push
push
push
push
push
push
push
push
call
add
add
add
mov
xchg
pop
lret
mov
shrb
jns
fsubrl
add
je
add
xlat
add
add
insb
shrb
add
pop
cli
add
add
scas
add
std
divb
bound
fildl
jp
push
add
enter
add
xchg
in
pusha
loop
add
ror
push
shrl
in
add
int3
lea
pop
jmp
pushl
mov
push
add
sub
pop
jmp
push
push
not
add
ror
push
push
pop
add
xor
ror
sub
sub
lea
not
not
pop
rol
sub
sub
pop
pushl
push
lea
xor
pop
call
push
shr
shr
ror
shr
pop
push
push
push
push
lea
push
lea
push
push
push
push
call
add
in
jo
add
add
pop
jb
clc
jbe
add
stc
fcoms
lcall
add
add
add
lahf
add
mov
jge
andb
add
add
add
mov
add
into
jbe
add
in
xchg
lock
add
loop
movsb
cld
mov
jmp
stos
jns
xchg
add
add
and
shrb
add
call
repnz
sub
push
push
pop
add
lea
sub
lea
add
pop
pop
push
push
push
push
lea
push
call
xchg
jecxz
mov
xlat
add
mov
add
add
hlt
push
add
pop
stos
into
pop
xchg
add
xchg
add
add
fmul
je
sahf
add
mov
mov
push
add
fdivs
clc
add
in
xchg
loope
mov
add
test
xchg
scas
xchg
add
mov
shrb
add
imul
lea
pop
pushl
call
push
push
not
lea
shr
pop
call
push
lea
push
lea
push
push
push
push
push
push
push
push
call
cmpsl
add
add
fcoms
jne
add
add
add
add
push
add
add
lock
add
add
ja
add
add
sub
add
add
test
add
push
sahf
add
addl
iret
jo
lock
test
add
filds
add
add
xchg
add
sub
push
shl
not
pop
add
pop
push
push
push
push
push
call
mov
mov
add
xchg
add
add
jbe
ja
push
divl
mov
jne
cld
gs
cwtl
add
xchg
stos
testl
jp
add
add
add
jmp
mov
addl
loopne
add
pop
add
mov
add
enter
iret
nop
add
add
add
cld
add
hlt
lea
pop
pop
push
not
add
sub
pop
pop
push
push
push
push
call
mov
icebp
add
enter
push
add
mov
add
xchg
scas
add
xchg
rolb
arpl
add
add
call
nop
in
jp
mov
aad
pop
add
fsubr
gs
add
mov
in
add
add
outsl
add
mov
fiaddl
add
add
xchg
pop
jmp
add
jnp
fisttps
adc
leave
push
add
lea
pop
add
push
push
push
push
push
push
call
mov
jae
add
add
add
bound
pusha
jns
jnp
loopne
add
add
pop
ljmp
jae
loop
div
mov
add
add
cmc
pop
adc
out
xchg
lds
add
add
add
addr16
add
add
add
pop
mov
add
pop
push
add
fs
cld
lea
pop
ret
leave
ret
push
push
push
push
call
scas
loop
sti
add
in
loopne
add
lods
add
push
jb
fsub
imul
mov
leave
jmp
add
mov
add
lods
fwait
sahf
mov
add
mov
mov
nop
add
mov
add
jb
push
mov
add
bnd
aad
add
add
add
pop
add
rcl
add
js
add
push
loop
fldl
add
mov
lea
pop
push
push
push
push
lea
push
call
stos
jbe
jno
in
test
stos
add
xlat
pop
add
mov
add
jmp
add
push
movsl
add
scas
mov
stc
rcrb
add
sti
push
mov
add
add
add
add
arpl
negb
push
add
add
xchg
pop
mov
cmc
add
add
jl
je
pop
mov
jp
add
cmpsb
add
pop
mov
push
ror
pop
cmpl
jne
mov
push
lea
push
lea
push
push
push
push
push
lea
push
push
call
add
rolb
stos
jp
push
add
add
add
popa
imulb
enter
add
fildl
pop
add
jle
add
xchg
jl
fs
mov
aam
push
add
add
add
add
add
add
in
jp
mov
testb
popa
stc
add
stos
movsb
xchg
add
neg
mov
cld
lea
pop
jmp
mov
push
pop
and
push
shr
add
pop
xor
push
lea
pop
xor
push
sub
inc
pop
add
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
add
add
enter
pop
add
jmp
fwait
add
int
mov
ficoms
xchg
mov
mov
jne
jle
push
call
faddl
adcb
add
popa
add
hlt
add
popf
add
mov
xchg
mov
mov
add
out
outsl
jbe
add
leave
add
iret
lods
add
add
int3
add
pop
add
hlt
lea
pop
xor
dec
sub
push
ror
ror
ror
add
pop
jmp
sub
pushl
push
ror
pop
pop
push
shl
pop
sub
push
rol
add
pop
cmp
jne
mov
lea
push
lea
push
lea
push
push
push
push
push
push
call
cmpsb
jmp
out
arpl
xorl
stc
add
add
add
scas
leave
imul
add
cmc
imul
add
sti
add
add
jns
add
mov
roll
add
push
add
imul
movl
add
add
mov
jne
lea
add
lock
int3
lea
pop
sub
push
ror
pop
mov
push
dec
shr
xor
pop
shr
push
lea
sub
pop
add
push
push
call
jl
ljmp
stc
imul
push
gs
add
push
lcall
push
add
outsl
jne
add
mov
xchg
clc
aad
add
outsl
add
fwait
jle
jno
add
addl
push
mov
mov
fldenv
out
mov
add
jnp
pop
rcll
add
mov
lea
pop
sub
pushl
push
dec
add
shr
lea
pop
pop
push
push
push
lea
push
lea
push
call
aad
add
bound
cwtl
mov
add
push
mov
xchg
mov
cmpsl
mov
xchg
add
iret
rolb
jle
xchg
mov
push
lods
cmpsb
arpl
add
add
fadds
add
xchg
add
out
add
xchg
xchg
add
add
add
scas
add
add
movsb
ret
add
add
popa
add
mov
add
add
add
cmpsl
scas
in
mov
lea
pop
shr
push
push
push
push
push
push
push
push
push
push
call
push
mov
add
loopne
iret
add
test
add
cld
sar
add
add
add
add
shll
scas
add
out
out
out
outsl
add
fwait
movl
jbe
add
push
add
aad
push
lcall
imull
pusha
jae
add
mov
lea
pop
and
push
lea
push
push
push
push
push
push
push
push
push
call
push
push
add
lret
pushf
hlt
mov
xlat
js
cld
jge
add
add
je
pop
mov
fs
add
add
std
out
add
cmpsb
icebp
add
mov
xchg
jmp
xchg
add
add
add
ljmp
add
cmpsb
fbld
test
add
mov
push
fs
push
add
std
std
mov
lea
pop
sub
push
sub
pop
cmp
jne
leave
push
lea
push
push
lea
push
push
call
add
aam
jmp
aad
pop
add
jo
cmpsb
shl
movl
xchg
cwtl
mov
jno
add
jge
loope
loopne
add
push
add
add
add
leave
ficompl
add
add
cwtl
je
cmpsb
add
pop
push
mov
push
hlt
add
stos
add
mov
add
pop
ret
push
lea
push
lea
push
lea
push
push
call
clc
add
add
fisubrs
xchg
cld
movsl
imul
add
add
in
add
push
sarl
add
add
arpl
add
loope
jp
mov
add
sarb
jae
in
add
add
push
jb
add
add
add
add
stos
ror
add
in
outsl
mov
lea
pop
push
mov
push
xor
xor
pop
add
push
push
push
ror
pop
push
push
push
add
pop
push
mov
push
push
push
lea
push
push
call
pop
jns
push
cltd
mov
mov
mov
pusha
std
add
push
mov
add
pushf
movsb
rcrb
add
mov
nop
add
push
ljmp
into
add
addr16
out
sbbb
rcrl
lods
add
mov
roll
mov
fwait
lds
aam
lret
mov
lea
pop
lea
sub
mov
push
push
call
add
out
scas
push
cmpsb
add
add
add
push
add
lret
cltd
scas
cmpsb
add
lods
mov
xchg
add
mov
insb
push
subl
jne
add
add
add
add
cmpsb
mov
loope
add
roll
lret
int3
add
data16
fldl
push
popf
lock
nop
add
outsl
mov
add
lahf
addr16
mov
insb
add
jno
cld
lea
pop
shr
push
push
push
lea
push
push
call
add
fwait
lods
add
add
fiaddl
add
push
lock
cmpsl
stc
add
add
mov
mov
add
add
pop
fcmovne
lods
add
mov
add
add
jecxz
clc
push
add
push
add
in
pop
int3
into
add
cmpsl
add
add
test
add
add
pop
add
jbe
in
std
add
jle
add
pusha
adc
add
mov
push
sub
ror
pop
add
push
push
call
out
pop
in
imul
add
call
data16
into
add
fidivrl
out
add
out
iret
add
add
add
push
xlat
stos
add
popa
fisubs
push
add
imul
add
add
add
outsl
cwtl
fs
shlb
jae
mov
add
xchg
add
add
cld
lea
pop
mov
add
push
sub
pop
xor
mov
push
shl
pop
and
push
push
push
lea
push
lea
push
push
lea
push
push
call
shr
mov
jae
mov
add
out
jmp
scas
iret
fldenv
jge
push
scas
add
add
add
fwait
add
pop
push
add
add
add
mov
jge
add
jne
test
ror
add
add
jbe
push
in
sahf
mov
mov
add
add
mov
cld
add
add
add
test
mov
lea
pop
call
add
cmp
je
push
push
push
push
lea
push
push
push
push
call
mov
add
mov
push
movsl
add
mull
add
cmpsl
mov
add
out
lahf
movsl
pop
pushf
rolb
pop
add
loopne
addb
add
add
mov
jne
pop
add
lock
enter
add
loope
add
lcall
jo
add
lcall
mov
scas
add
add
add
mov
mov
cmc
add
add
add
scas
mov
lea
pop
add
push
add
pop
cmpl
jne
xor
pop
push
lea
push
call
pop
in
int3
add
pop
mov
clc
ljmp
arpl
sti
xchg
add
add
pop
imulb
push
movsb
push
rcl
mov
jne
in
fwait
test
add
pushf
add
out
add
test
stos
rcr
repnz
push
outsl
std
add
add
nop
pusha
add
lcall
add
add
imul
push
sub
rol
rol
pop
pop
push
dec
sub
pop
leave
ret
push
push
call
jl
cli
add
add
test
lea
ficomps
jno
add
add
mov
mov
cwtl
add
rolb
ja
mov
jge
std
add
add
add
data16
mov
jmp
add
stos
push
add
add
movsb
lods
add
cld
add
fsubs
mov
mov
add
push
cmpsb
xchg
add
mov
lea
pop
mov
add
push
ror
dec
pop
push
push
push
push
lea
push
push
push
push
lea
push
lea
push
lea
push
call
push
loopne
add
add
icebp
gs
movsl
mov
add
fadds
xorl
mov
add
add
enter
pushf
mov
stc
jle
jbe
jnp
mov
add
std
mov
cli
jo
popl
add
add
jne
ja
mov
mov
add
mov
add
add
arpl
pop
push
pop
pop
push
dec
add
pop
mov
push
call
push
shr
ror
pop
xor
push
push
lea
push
lea
push
push
push
push
push
call
add
jbe
mov
mov
in
add
add
xchg
add
jbe
add
push
jle
add
scas
add
jns
xchg
add
mov
mov
add
lock
js
jp
mov
in
push
add
mov
add
pop
mov
add
add
add
add
mov
cld
lea
pop
pop
push
lea
push
lea
push
push
push
push
push
push
call
popf
add
add
shrl
testb
add
fdivl
sahf
fcomi
pusha
xchg
add
add
add
mov
add
mov
les
fs
pop
mov
jecxz
clc
add
mov
test
out
roll
mov
sti
mov
jns
add
add
add
add
add
mov
push
into
add
jge
xchg
scas
test
add
fisttpl
pop
pop
pop
push
lea
push
push
push
push
push
push
push
push
push
call
imulb
fcompl
add
xchg
add
ja
jmp
int3
pop
fnstcw
out
xchg
lret
cmpsb
out
mov
pop
popl
jo
leave
fmul
add
outsl
in
push
arpl
add
xchg
lret
aad
add
insb
add
int
mov
add
je
int3
mov
add
add
pop
pop
pop
push
ror
sub
pop
leave
push
push
push
push
push
push
lea
push
push
push
push
call
fistpl
add
add
add
hlt
movsb
divl
add
add
fisubl
leave
clc
jne
jp
scas
pop
stos
add
add
add
loope
xchg
out
int3
add
add
adcb
fidivs
add
add
add
add
in
jne
in
call
add
faddl
add
scas
jmp
aam
bound
pop
ret
push
push
sub
sub
sub
pop
mov
push
ror
sub
lea
pop
add
push
push
not
shr
xor
pop
push
push
inc
add
rol
pop
push
push
mov
push
push
push
push
push
push
push
call
add
add
gs
test
cld
aam
add
add
add
pop
jo
push
data16
add
pusha
jp
lahf
ja
mov
js
add
add
int3
add
xchg
rolb
movl
les
lds
add
add
lds
add
test
out
negb
ljmp
pop
cmpsb
add
aad
add
mov
add
roll
pop
mov
lea
pop
push
pop
push
push
lea
push
lea
push
push
push
lea
push
push
call
add
cmc
xchg
add
rolb
add
call
add
add
roll
mov
pop
mov
push
add
add
arpl
push
xchg
mov
mov
add
add
add
lea
in
loop
mov
mov
mov
jl
lds
mov
lea
pop
lea
push
ror
add
lea
pop
sub
push
lea
push
push
push
call
stos
add
push
cmc
add
add
fs
xchg
push
js
leave
add
jno
add
arpl
add
mov
jns
add
add
add
add
add
add
test
sti
mov
add
add
add
add
add
enter
mov
lea
pop
mov
shr
add
push
push
lea
push
push
call
cltd
xchg
stos
add
add
mov
mov
jle
mov
add
mov
std
mov
add
cmpl
add
add
add
cmp
add
sti
sti
add
add
add
add
push
in
pop
popl
add
rcrl
data16
out
add
pop
imul
cli
add
lea
pop
mov
push
lea
push
push
push
push
push
push
push
push
lea
push
call
add
add
cli
movsl
lods
addb
xchg
mul
sti
cli
add
pop
add
pop
mov
mov
jno
add
add
push
mov
add
enter
test
mov
fwait
loop
add
add
mov
add
fs
test
mov
cwtl
js
add
in
addb
bound
pop
add
push
sub
sub
rol
pop
pushl
push
push
push
push
lea
push
push
lea
push
push
push
push
call
add
add
popf
pop
out
in
out
mov
add
repnz
lods
stos
pushf
cmc
imul
add
leave
int
cltd
add
pop
mov
mov
add
fiadds
add
lahf
lods
mov
lret
sub
add
in
mov
rcrl
pop
gs
mov
test
shl
mov
add
pusha
mov
lea
pop
popl
mov
push
push
push
push
call
add
mov
add
push
mov
popa
lea
shr
xchg
movsl
add
add
pop
ret
mov
add
je
xchg
mull
loopne
nop
add
add
imul
mov
add
fldl
pop
add
pusha
in
add
add
int
arpl
add
repnz
add
add
pop
add
xor
lea
push
push
push
push
push
call
hlt
xchg
jle
idiv
scas
stos
add
add
add
pusha
push
cmpsb
push
add
fnsave
add
movsb
testb
iret
lods
add
add
add
loop
idivb
add
add
add
shl
add
insb
in
lcall
jo
add
push
xchg
add
lahf
push
push
enter
data16
divb
xchg
mov
lea
pop
mov
add
push
add
pop
xor
call
add
push
sub
dec
shl
pop
nop
push
inc
ror
ror
pop
nop
push
push
push
push
push
lea
push
call
ja
mov
add
in
add
add
je
lods
mov
add
add
xchg
add
jmp
mov
mov
xchg
gs
add
fisubl
arpl
out
add
add
mov
add
addl
movsl
std
add
add
add
add
fldt
pop
cmp
je
push
add
ror
dec
xor
pop
nop
push
not
sub
pop
nop
push
push
push
push
push
lea
push
lea
push
lea
push
push
call
movsb
add
test
jle
add
add
jb
add
add
stos
jp
cltd
addl
mov
add
out
jecxz
add
add
pop
cli
xchg
add
push
push
mov
mov
jge
mov
test
mov
add
add
mov
add
mov
lea
pop
inc
nop
push
push
call
jo
xchg
cmpsb
bound
lahf
xchg
add
mov
xchg
mov
loop
add
lea
in
mov
jae
iret
mov
push
addl
add
loopne
add
add
pop
add
jle
add
add
mull
mov
add
xlat
loopne
mov
lea
pop
nop
push
push
lea
push
push
push
push
push
push
push
call
scas
add
add
push
add
jmp
mov
ror
shll
outsl
jp
outsl
pop
testl
jb
fildl
scas
pusha
loope
mov
pop
add
pop
mov
add
add
cltd
fs
mov
testb
add
fadd
je
add
popa
add
add
movsb
popl
add
lock
enter
lods
repnz
add
add
popf
add
mov
ljmp
cmp
jb
push
lea
add
dec
pop
xor
jmp
mov
push
lea
push
lea
push
push
push
push
push
call
cmc
add
not
stos
push
add
mov
add
xchg
mov
push
rorl
jne
jb
addl
mov
dec
fwait
add
cmpsl
xchg
pop
pop
jecxz
ret
add
shll
in
add
cld
call
jp
out
add
add
add
pusha
loop
cmc
jb
add
stc
int3
repnz
pop
jnp
in
addl
rcrb
xchg
add
pop
add
movzwl
push
add
ror
pop
mov
add
mov
push
push
call
xchg
add
add
mov
test
call
test
add
incb
gs
pop
jo
in
rorb
les
scas
add
add
mov
jmp
mov
mov
add
add
add
add
lret
cltd
add
cmpsl
add
out
pop
xchg
add
mov
lea
pop
xor
xor
push
push
push
push
lea
push
push
push
call
fsubr
nop
in
leave
test
add
xchg
roll
mov
add
add
add
add
negb
add
mov
add
lahf
pop
add
add
pop
stc
add
int3
hlt
xchg
push
lret
add
fmuls
pop
add
arpl
add
out
in
leave
xchg
movsl
stc
sti
lods
push
add
pop
add
testb
shl
push
pop
xor
shl
push
push
push
push
lea
push
push
lea
push
push
call
add
lock
add
in
in
add
pop
add
pop
out
add
add
add
mov
add
std
add
add
add
add
mov
insb
add
mov
add
add
mov
insb
add
add
test
lcall
mov
add
mov
jbe
add
rcl
int3
lea
pop
xor
shl
push
shl
sub
add
sub
pop
xor
mov
push
push
push
push
push
lea
push
push
push
push
call
lahf
add
add
imul
mov
stos
in
xchg
add
mov
add
loop
arpl
cwtl
mov
lea
int3
icebp
lock
mov
fwait
add
add
pop
add
mov
xchg
add
rolb
add
out
add
mov
push
lcall
push
add
stos
jne
add
bound
add
mov
lea
pop
add
push
push
push
push
push
push
lea
push
push
push
push
call
mov
add
mov
mov
xchg
mov
mov
add
add
mov
add
push
jp
add
add
pop
add
fadds
ja
pop
loope
in
xchg
add
cmc
mov
movsl
add
test
shr
mov
scas
icebp
pop
out
shlb
pop
pop
push
push
call
jns
fisttpl
mov
add
add
add
xchg
lock
mov
add
fsin
add
test
jb
add
push
add
add
xchg
lret
negl
push
add
insb
add
lcall
add
sarl
add
mov
lea
pop
pop
pop
push
push
push
push
lea
push
call
shll
xchg
mov
add
in
add
out
loopne
cwtl
jo
filds
arpl
add
movsb
add
jge
adc
test
test
jae
mov
push
lret
add
push
shrb
add
jns
cmc
lods
add
xchg
xchg
add
jp
add
add
mov
add
add
jmp
lds
mov
add
aad
notl
les
push
push
push
push
lea
push
push
call
add
mov
movsb
out
add
mov
jnp
jecxz
les
pop
add
add
in
add
cmpsb
add
mov
add
fldl
mov
mov
add
xchg
testl
mov
fcompl
fildl
imulb
add
sbb
ret
push
push
push
push
call
in
add
push
je
imull
cmc
js
negb
add
push
add
add
icebp
fwait
add
jmp
pop
pop
xlat
mov
popf
add
add
add
shrb
add
xlat
add
add
xchg
jge
lcall
int
mov
add
add
add
icebp
sti
push
into
push
add
mov
lea
pop
mov
push
push
push
push
push
call
scas
test
fiaddl
cltd
add
testl
add
cwtl
out
testb
clc
cmpsb
pop
jnp
add
std
repnz
test
xchg
iret
xchg
add
add
testl
add
add
out
add
jbe
orb
flds
mov
add
mov
add
add
add
add
add
add
add
add
add
add
cld
jmp
or
push
push
mov
push
add
sub
pop
mov
mov
test
je
push
sub
pop
mov
test
je
push
push
push
push
push
push
push
push
call
shl
add
mov
movsl
add
roll
push
add
jl
add
lret
mov
push
fiaddl
push
sbb
scas
aad
sahf
add
add
movsl
add
icebp
add
add
add
mov
add
add
xchg
ret
add
mov
lea
pop
mov
mov
mov
push
lea
push
lea
push
lea
push
lea
push
push
push
push
call
in
jle
add
add
add
sahf
add
add
mov
stc
imul
add
xchg
jecxz
clc
test
mov
fadds
mov
call
xchg
lahf
add
add
movsb
incb
add
imull
add
cmpsb
mov
lods
add
imul
add
popa
and
cmp
je
push
sub
pop
test
je
push
push
call
add
out
add
jne
add
popa
insb
add
stos
xchg
int3
in
mov
and
hlt
scas
shll
add
add
add
add
add
jbe
loope
mov
mov
enter
addl
ficoms
enter
add
subb
test
test
mov
push
in
cltd
add
scas
add
pop
mov
push
lea
push
lea
push
push
push
push
push
call
add
faddl
add
add
ret
add
ja
mov
pop
add
add
add
add
lds
add
xchg
scas
fcmovnb
add
jl
jl
push
out
cltd
mov
bound
fsts
add
data16
add
add
bound
ret
add
nop
sbb
scas
add
xchg
mov
jb
stos
jecxz
push
mov
xlat
fcoml
mov
popf
fimuls
pop
inc
push
xor
rol
add
pop
cmp
je
push
push
call
xlat
add
add
add
cltd
add
jmp
add
add
pop
popf
add
add
add
outsl
loope
test
in
fmul
pop
add
sahf
add
mov
test
add
add
loopne
add
movb
add
lods
pop
jp
mov
test
cltd
mov
lea
pop
test
jne
push
push
call
nop
mov
test
lds
mov
jbe
repnz
fwait
add
add
xchg
add
add
in
mov
add
cmpsb
imul
pushf
mov
nop
add
int3
lds
add
mov
mov
fwait
aam
add
sbbl
add
outsl
push
pop
mov
mov
fsubrs
add
add
add
cmpsl
int3
add
xlat
mov
lea
pop
xor
pop
pop
push
push
push
push
lea
push
call
push
icebp
add
pop
push
mov
add
add
pop
rcrb
add
add
les
mov
add
push
cmpsb
cmpsl
add
xchg
add
add
add
clc
movsl
bnd
mov
add
jbe
add
add
roll
add
add
sti
mov
add
add
jae
add
add
add
mov
into
add
add
imul
adc
pop
pop
push
push
push
push
push
push
push
push
push
call
ja
std
lahf
shlb
add
add
add
ja
add
add
add
add
pop
lods
icebp
popf
pop
add
mov
add
insb
mul
aam
int
add
mov
stos
add
add
add
insb
push
mov
mov
int3
mov
add
add
hlt
lea
pop
leave
push
push
push
call
fdivs
je
add
scas
xchg
add
ja
push
mov
add
test
movsb
add
xchg
xchg
add
out
arpl
into
mov
in
jo
jo
xchg
fsubrs
add
add
add
add
roll
iret
xlat
add
add
arpl
add
add
mov
mov
popa
mov
cli
mov
lea
pop
ret
push
push
push
push
push
push
push
push
push
call
xchg
faddl
add
shlb
add
add
scas
mov
add
test
add
add
mov
cwtl
xchg
xchg
loope
xchg
add
sahf
imull
mov
mov
push
scas
add
add
add
fists
scas
rcrb
mov
leave
mov
pop
push
jo
add
mov
addb
add
and
mov
inc
cmp
jne
push
add
add
pop
lea
mov
push
lea
push
lea
push
push
call
addl
jle
out
add
cmpsl
add
add
loope
gs
cmpsb
add
icebp
add
add
mov
add
addl
test
lret
jbe
fadds
mov
push
mov
add
call
pop
mov
add
std
add
lea
pop
test
je
push
lea
push
push
push
push
push
push
lea
push
call
fdivl
loope
jle
mov
add
ja
mov
jnp
add
mov
fst
lods
add
add
xchg
call
imul
gs
pop
add
hlt
negl
add
xchg
stos
add
jbe
fucomi
pop
jbe
pop
push
outsl
mov
add
add
add
fwait
add
push
add
add
add
pop
mov
add
cmp
jne
push
pop
mov
test
je
mov
push
add
pop
add
push
push
push
lea
push
call
mov
mov
cmc
pop
fdivs
add
movsb
nop
cli
add
add
int
pop
in
add
movsl
popa
add
lods
mov
fwait
ret
cmpb
add
rcll
movsl
add
jnp
cmpsb
call
add
sahf
mov
add
jo
jb
roll
cli
mov
les
add
mov
lea
pop
cmp
je
push
xor
pop
jmp
push
sub
add
add
pop
xor
pop
push
ror
sub
pop
pop
push
push
lea
push
push
push
call
add
add
add
lret
xchg
add
add
add
pop
leave
insb
enter
scas
jmp
mov
jb
add
mov
sti
add
stos
add
hlt
mov
orb
enter
mov
mov
std
add
add
add
add
pop
test
in
aam
je
mov
add
add
bound
xchg
jbe
jae
add
mov
lea
pop
pop
pop
push
add
sub
not
pop
leave
ret
push
push
push
push
push
push
call
add
nop
mov
add
add
add
iret
add
add
test
fwait
xchg
add
jbe
icebp
add
filds
push
mov
cld
cltd
add
add
add
add
add
mov
mov
mov
add
mov
add
mov
add
add
outsl
addb
add
out
cmc
pop
add
outsl
shl
add
testl
add
fmull
inc
call
rolb
add
pop
push
lea
push
push
call
outsl
mov
test
jp
push
add
jns
add
pusha
mov
jmp
fmull
mov
add
repnz
add
add
add
fldl
add
mov
add
iret
xlat
push
repnz
add
lret
add
add
add
add
pop
cld
xchg
add
add
test
xlat
andl
cwtl
add
add
lea
pop
pop
pop
pop
push
lea
push
push
push
push
push
lea
push
push
push
push
call
jnp
scas
pop
movsl
mov
xchg
icebp
add
pop
pop
add
add
xlat
iret
out
cli
mov
std
add
stc
test
add
add
clc
mov
int
jae
clc
jae
mov
testl
add
stc
mov
add
cmc
mov
scas
add
add
fyl2xp1
int3
clc
mov
add
add
jbe
add
out
add
stos
stc
sti
repnz
add
mov
mov
lea
pop
leave
push
push
push
push
call
into
lret
fwait
test
add
xchg
mov
add
clc
mov
cwtl
roll
add
add
xchg
add
add
call
jae
mov
out
add
add
add
mov
testb
jb
mov
ljmp
int
std
movsl
add
push
mov
add
add
add
jle
mov
mov
lea
pop
ret
mov
pop
push
shl
shl
sub
pop
pop
pop
pop
push
push
lea
push
push
call
add
testl
add
jecxz
fmull
add
fldcw
xchg
imul
pop
mov
mov
pusha
mov
out
scas
add
clc
add
add
cli
push
mov
pop
jnp
push
rol
fucomp
add
add
fadd
insb
mov
add
testb
les
push
add
pop
ret
push
push
lea
push
lea
push
push
lea
push
lea
push
push
call
jb
add
add
loopne
mov
pop
fcmovnbe
subb
mov
add
add
sti
add
stos
add
add
cltd
cwtl
mov
sahf
add
add
clc
add
in
mov
add
xchg
in
jl
push
mov
add
fst
movsl
add
add
flds
push
icebp
pop
pop
js
mov
test
filds
std
test
add
scas
lret
mov
add
pop
rol
rol
push
xor
pop
xor
inc
cmpb
jne
push
push
push
push
push
push
push
call
add
add
add
add
icebp
add
add
add
mov
add
enter
loopne
add
add
add
xchg
scas
popl
add
cltd
xlat
add
add
lret
add
add
add
test
add
out
add
add
mov
add
pop
add
add
jle
add
jne
fmull
hlt
nop
mov
sti
movsb
shll
sti
movsb
shll
sti
movsb
inc
mov
sti
js
mov
sti
movsb
xchg
mov
sti
inc
scas
mov
sti
movsb
sub
sti
fcoml
sti
imulb
cltd
push
sbbl
mov
push
push
aas
dec
popa
in
fnsave
cmpsl
cmpsl
push
repz
shrl
aam
adc
mov
pop
lret
test
jno
repnz
mov
pop
mov
test
sbb
jle
adc
lods
xchg
shll
pop
pop
popf
test
mov
or
or
dec
mov
cld
mov
shlb
mov
push
rclb
cli
ret
mov
jb
stos
lret
inc
pop
or
and
pop
aam
cmp
insl
rorb
xchg
sbb
mov
fsubs
jmp
loope
pop
mov
aaa
and
jne
dec
pop
sbb
mov
cmp
mul
and
sub
push
sub
add
sbb
cmp
mov
and
ret
or
imul
cmc
inc
xorl
mov
pusha
mov
xor
pop
xchg
outsl
out
push
stos
andl
push
adc
jmp
dec
negl
mov
add
and
xor
inc
mov
jg
repnz
mov
ret
sub
sub
sbb
idiv
jnp,pn
insb
mov
popa
jne
dec
and
or
or
xchg
xchg
lea
gs
pop
adc
cmp
pop
jge
les
std
in
lods
imul
mov
inc
fmuls
out
mov
cmp
xchg
bound
arpl
add
ja
sub
add
or
push
leave
les
mul
sub
rcll
scas
fistpl
outsb
adc
sub
ret
scas
int3
push
cld
clc
cmpsb
ljmp
push
dec
mov
push
push
repz
cld
xchg
out
scas
push
xchg
in
testb
scas
scas
xchg
scas
lret
ja
hlt
mov
pop
dec
push
cmpsl
cmp
pop
push
outsl
jp
jns
out
cmp
fcoms
mov
push
jmp
jns
inc
cmp
ljmp
jae
bound
push
mov
aad
dec
out
add
jae
xchg
push
das
or
cli
pop
repz
into
scas
pop
pop
adcb
mov
les
push
test
xchg
mov
test
cmp
fwait
aad
sub
or
outsb
stos
movl
pop
mov
call
icebp
add
repz
pop
lret
sti
aaa
rcr
loopne
and
dec
pop
lods
pop
pop
call
leave
inc
pushf
add
setle
adc
cmp
jp
nop
pop
push
insl
daa
iret
xlat
test
push
xlat
ret
js
add
sbb
orb
fildl
jnp
sbb
xchg
clc
adcl
or
cmp
out
shll
push
inc
fs
sti
add
mov
mov
sbb
mov
add
imul
pop
push
mov
mov
ret
test
mov
lods
popa
xchg
mov
sarb
movsl
jle
scas
dec
pop
pop
mov
ss
cmp
out
enter
int3
ret
xchg
stos
adc
les
repz
dec
adc
in
jmp
out
cld
pop
rcl
mov
repnz
mov
mov
xor
inc
push
leave
mov
sti
jg
and
cmp
in
addr16
jmp
push
cmp
mov
rcrl
scas
rol
push
jo
lret
sbb
shrb
jnp
xchg
daa
inc
imulb
sub
sub
mov
inc
rcr
sub
adc
xchg
shll
push
sbb
sbb
cli
in
ret
movsb
je
aaa
mov
in
adc
pop
pop
addl
sub
out
out
dec
push
xchg
push
mov
inc
jnp
fstps
inc
dec
imul
ja
jbe
and
cmp
mov
ret
dec
shll
stc
dec
and
push
ljmp
fwait
enter
pop
jno
or
pop
scas
inc
xor
dec
fbld
xorb
ret
jmp
mov
mov
pop
insl
fidivl
mov
dec
imul
xor
scas
pop
ljmp
rol
mov
jge
push
lcall
in
ret
mov
lock
cmp
cmp
mov
stc
inc
sbb
add
mov
stc
xchg
ds
push
push
inc
pop
push
mov
rcl
cmpsl
and
test
mov
mov
mov
sahf
mov
push
push
dec
add
and
sub
stos
inc
js
mov
push
data16
xchg
lea
jb
fistps
into
pop
test
insb
and
cld
clc
cmp
jne
lods
iret
xor
stc
inc
sbb
and
push
mov
sub
jo
xchg
outsb
popa
jnp
dec
xor
sahf
add
xor
or
mov
cs
sbbl
fcmovne
cmp
or
sub
orw
jp
lret
negl
or
mov
inc
in
loop
pop
adc
cs
or
shl
aam
repz
jl
decl
or
xchg
jge
sub
mov
aas
pop
nop
dec
andl
jge
mov
fisubs
mov
xlat
inc
jae
add
xchg
into
cmp
stc
cmp
insb
addr16
fiadds
mov
scas
dec
cwtl
push
roll
daa
xchg
insl
mov
inc
fdiv
add
ficoms
xchg
lcall
pop
mov
jbe
push
mov
cmpsb
xor
mov
sub
fisttps
mov
repz
out
int3
jae
cmpsl
outsb
pop
inc
mov
cwtl
sub
lahf
or
cmpsl
pop
das
scas
inc
cli
pop
sti
push
mov
js
mov
sti
sub
inc
cmp
xchg
fisubs
dec
out
jmp
or
push
icebp
imul
loopne
aaa
mov
push
push
sti
dec
inc
xor
xor
cltd
or
sti
aad
flds
invd
dec
cmp
sub
inc
ficoml
out
frstpm(287
cmp
cmpsl
icebp
push
adc
cmp
push
sbb
aad
and
int
fs
mov
jg
fdivrl
sub
cmpl
push
int
dec
sahf
mov
add
and
movzwl
dec
adc
xchg
gs
stos
xor
adc
jle
add
loopne
fs
xor
mull
cmp
mov
inc
fs
cmp
movsl
ja
fildl
fs
mov
cmp
add
pop
xchg
sub
outsb
jb
movsl
aas
jp
gs
aaa
fdiv
cmp
in
xor
adc
rcl
std
cmp
adc
jecxz
aaa
xchg
andb
push
out
ds
aaa
mov
mov
or
popf
or
push
out
or
fisttps
pop
and
test
rorb
repz
cwtl
out
insb
mov
mov
and
frstor
das
fnstcw
and
mov
bound
push
int3
jle
cld
mov
mov
push
adcb
bound
arpl
into
inc
enter
out
xor
gs
adc
fadds
jecxz
push
ret
mov
sub
inc
icebp
subb
sbb
cmp
movsb
dec
mov
lret
lods
adc
xor
add
js
cmp
std
xchg
push
fcomi
int
or
mov
xchg
icebp
dec
or
lret
adc
insb
mov
aam
xchg
int3
add
dec
clc
push
xchg
adc
dec
stc
jae
in
repz
add
cmpl
and
mov
mov
out
jb
mov
mov
mov
mov
hlt
orb
negb
push
or
test
or
add
test
push
inc
mov
xchg
nopl
inc
test
lret
cmp
hlt
sub
cmp
xlat
adc
xchg
push
clc
and
cmc
sarb
cmp
inc
ss
popa
pop
rcrl
flds
int
fisubs
in
leave
lea
nop
mov
lret
adc
sbb
push
hlt
mov
push
iret
loop
push
mov
test
fcmovnb
in
mov
lods
push
cs
cli
test
cmp
stc
push
inc
stc
mov
enter
sub
pop
repnz
adc
mov
adc
xor
inc
push
shl
pop
call
idiv
jb
sub
fildll
fwait
sbb
js
cmp
aas
jo
mov
mov
pop
jb
xor
pop
sbb
in
stos
inc
movsb
outsl
call
scas
inc
rcrb
lret
sub
aaa
sbb
mov
mov
ljmp
loopne
rcll
enter
add
das
sub
or
cmc
insb
xchg
orb
ja
xchg
mov
repnz
test
aam
daa
dec
xchg
dec
sub
xor
mov
js
pop
add
out
in
jno
mov
push
js
mov
push
sub
jb
insb
xchg
mov
and
orb
push
cmp
or
dec
std
jmp
repz
insl
out
in
sub
imul
mov
addl
dec
out
adc
fcom
push
mov
push
cwtl
push
sbb
lahf
push
xlat
inc
cli
sbb
lret
and
xchg
dec
bound
cld
push
lret
out
out
test
add
in
pop
mov
jmp
test
pop
sbb
cmp
js
ljmp
ss
jmp
jmp
push
jnp
and
and
jno
test
sbb
mov
shr
fmulp
inc
push
sub
xchg
sbb
pop
out
xchg
xchg
cwtl
fnsave
dec
push
cltd
lea
sbb
mul
repz
jb
lods
sbb
jp
dec
dec
push
out
or
jle
dec
aas
mov
inc
pop
pop
rcll
sbb
repz
fs
pop
push
repnz
sbb
jecxz
mov
call
dec
out
repnz
push
cs
mov
push
inc
jbe
into
aad
mov
clc
dec
pop
stos
lcall
inc
fcmovu
aam
sbb
jo
mov
inc
cmp
pop
bound
stos
call
push
lahf
scas
movsb
xor
ss
xchg
mov
into
xor
loopne
icebp
xchg
sub
idivb
cmc
mov
pop
pop
cmpb
mov
cwtl
insb
push
push
repz
aam
pop
lds
cmp
stc
push
lds
leave
adc
mov
jp
xchg
jo
adc
pop
out
mov
icebp
sub
push
xchg
xchg
fmul
imul
sti
xor
push
dec
ret
lahf
mov
icebp
stos
pop
and
pushf
xor
or
xchg
fs
aam
add
xchg
gs
sbb
inc
fidivrs
add
aad
xlat
packsswb
mov
shl
xchg
nop
or
sub
pop
push
jmp
pushf
xchg
push
or
xor
shl
push
mov
mov
packuswb
mov
or
push
push
rcrl
xor
jle
sub
aad
dec
cmp
pop
addl
inc
test
jns
dec
pop
fnstenv
xchg
and
ret
xchg
lahf
push
bound
pop
xchg
push
fdiv
mov
adc
pop
xor
aaa
sarl
mov
lock
stos
fildll
jp
push
frstor
cmpsl
ret
push
adc
dec
jmp
pop
push
test
daa
test
ja
inc
stos
inc
shlb
lock
mov
sbb
mov
xor
fsubrl
sbb
mov
lods
sub
lahf
mov
and
fsubr
pushf
mov
pop
xor
fildll
cli
or
pop
arpl
pop
ss
xchg
sub
xor
jmp
jg
mov
lods
jmp
sbb
add
mov
jbe
mov
dec
pop
shll
push
jle
xchg
divl
in
xor
mov
push
lock
stc
mov
daa
mov
shll
lcall
mov
adc
inc
sbb
push
sub
outsl
lods
xchg
mov
incl
js
mov
push
add
pmulhw
mov
jmp
in
bndldx
inc
scas
xchg
in
call
rcrl
into
mov
xor
cltd
xchg
sbb
arpl
add
lret
pop
mov
mov
scas
imul
mov
mov
lahf
cld
shlb
sub
inc
and
mov
movsb
dec
pop
scas
pop
sbb
fcomp
push
sahf
pop
dec
jbe
fidivrs
imul
inc
sub
cmpsb
push
and
cmc
pop
xchg
push
mov
or
je
imul
add
rorb
loop
mov
jg
sarl
mov
lods
pop
xlat
inc
cli
aas
in
pop
jmp
outsl
add
jmp
aad
iret
mov
scas
loope
sbb
out
rolb
jnp
add
decl
cmp
enter
sbb
push
mov
adc
pop
sbb
and
or
pop
insl
jmp
sbb
sbb
cmp
decb
lea
repnz
inc
adc
and
xor
and
add
lds
popf
and
adc
xor
repnz
mov
out
pop
cltd
lcall
jo
push
dec
push
adc
inc
lret
lret
outsb
rcl
mov
dec
repnz
cld
xchg
pop
dec
outsb
int3
mov
or
mov
ds
test
mov
repz
cmpsl
fisubs
imul
inc
dec
insb
in
and
push
lret
into
hlt
lahf
scas
sub
in
push
pop
dec
dec
loopne
bound
mov
dec
lahf
jno
mov
xchg
ds
adc
test
shlb
in
adc
fistl
movsl
adc
dec
sbb
add
mov
mov
fwait
dec
adc
std
mov
lret
outsb
loope
xor
inc
push
push
shll
mov
bound
push
push
bound
data16
mov
aaa
test
inc
push
lcall
fstpt
repz
sbb
ljmp
push
mov
int3
aaa
sub
shlb
mov
out
cmp
enter
cmpl
mov
lods
ret
dec
fstl
cs
inc
mov
es
idivb
or
mov
repnz
xchg
cs
push
insl
pop
and
fsubs
mov
adc
jle
jge
jo
test
mov
insl
subb
jo
jl
jecxz
mov
sub
test
add
popa
outsb
stc
popf
jmp
and
pop
ja
loop
in
pop
rcrb
xorb
es
dec
dec
mov
xchg
int3
pop
movsb
mov
imul
repnz
test
dec
ror
push
icebp
mov
mov
mov
pop
push
cld
je
and
pop
xchg
sbb
fs
lcall
jp
ja
insl
addr16
add
push
pop
dec
or
xorb
and
xchg
push
sub
jae
push
sbb
subb
sub
shrb
push
lds
lods
movsb
scas
fmuls
mov
je
pop
xchg
in
les
xor
sub
scas
adc
mov
push
mov
clc
out
aas
icebp
push
stos
xor
sti
lea
sbb
out
shlb
mov
icebp
or
fldt
push
mov
in
mov
js
adc
mov
or
sub
adc
xlat
sbb
dec
cmp
js
adc
sbb
jmp
fistpll
xor
out
jecxz
test
sbb
jecxz
imul
inc
in
arpl
lock
les
mov
fisttps
xlat
xor
and
push
adc
mov
inc
jbe
jae
add
sbb
imul
mov
push
imul
rolb
dec
jecxz
cmp
subb
xchg
add
cmc
pop
loope
mov
and
mov
jbe
lock
adc
clc
lsl
dec
inc
decl
repz
in
dec
and
or
cmp
cmp
arpl
leave
popa
and
pop
mov
xchg
push
inc
sub
rorl
imul
xchg
and
out
xor
lret
cmpsb
inc
inc
lods
and
pop
mov
out
sarb
ss
es
dec
mov
leave
mov
lret
stos
inc
imul
sub
cmpsl
mov
mov
mov
mov
imul
mov
xchg
or
cmp
xor
inc
stos
lcall
imul
testl
test
jle
mov
aam
movsl
push
xor
lea
rcll
gs
jae
xorb
ret
in
push
pop
mov
sahf
adc
fwait
lods
sub
js
mov
or
dec
pop
ja
inc
sti
pop
into
mov
ret
das
movsl
push
and
or
addr16
test
cmp
mov
mov
dec
dec
adc
or
ffreep
pop
xor
adc
je
dec
inc
xchg
pop
insb
enter
lahf
fidivs
mov
dec
jb
fwait
pop
cmp
fistps
aad
adc
leave
mov
ss
je
adcb
aaa
inc
std
mov
aaa
fisubrs
or
adc
outsl
cmpsb
inc
cmp
jbe
std
repz
call
adc
fidivl
loop
shlb
sti
arpl
pushf
push
push
cmpsb
mov
pop
imul
stos
jbe
sub
add
push
or
mov
mov
scas
icebp
xchg
sub
test
mov
sti
mov
inc
push
rorl
xchg
ret
cmc
jno
push
or
or
jmp
aaa
popf
mov
sti
iret
pop
sbb
xchg
sbb
inc
mov
lret
and
pop
sbb
repnz
xor
in
adc
mov
stos
xor
mov
outsb
or
test
jbe
inc
and
sti
jl
inc
divb
rol
push
lahf
inc
outsb
add
daa
test
jmp
mov
test
test
add
idivb
js
jmp
fcomp
ficoms
inc
cli
sub
dec
enter
fs
fwait
insl
adc
fwait
sarw
roll
push
ror
test
pop
es
sbb
test
xorb
jecxz
cmp
lds
fnstenv
xchg
icebp
xor
and
inc
js
xchg
daa
movsl
dec
fstps
jae
repnz
or
pop
sbb
movd
adc
mov
out
popa
in
xchg
lods
or
ficoms
mov
hlt
outsb
andl
push
pop
negb
dec
xor
push
mov
sbb
in
xor
xorl
stos
mov
leave
aad
daa
dec
aad
dec
fldcw
jl
daa
insl
sub
inc
mov
ja
arpl
lods
cmp
rcrl
push
push
nop
add
outsl
fcoml
jle
in
imul
cld
aad
js
lret
add
mov
jge
ja
fstl
fsts
js
mov
add
call
mov
sahf
xor
xchg
or
out
in
aaa
xorl
testl
in
mov
push
loope
mov
adc
stos
in
cltd
sub
testl
xchg
shll
out
sub
add
lds
jns
jle
fistpll
in
das
mov
fcompl
and
jno
sbb
and
sub
mov
mov
sti
lds
pop
inc
push
jge
sar
xor
aaa
dec
jmp
sbb
adc
xchg
cmp
pop
outsb
cmpsb
jb
iret
out
sbb
sbb
mov
push
inc
xlat
cli
nop
scas
xor
bound
fs
leave
clc
jne
xchg
aam
dec
addr16
clc
mov
adcl
cltd
adc
mov
inc
cmp
fs
xchg
add
addl
repz
xchg
pop
rclb
xorl
xchg
pop
push
add
cmp
push
mov
or
pop
mov
jbe
fsubrp
fstps
pop
cs
rol
lahf
pop
mov
outsl
sub
in
mov
or
push
sub
pop
ja
test
rclb
pushf
clc
stc
test
cmp
xor
cmpsb
mov
dec
mov
pop
cwtl
xchg
movsl
aaa
cld
sahf
popa
mov
gs
dec
aam
lock
or
add
icebp
data16
ficompl
mov
popa
movb
mov
dec
pop
mov
int3
inc
insl
cmp
inc
mov
jb
push
cmp
lods
andb
shlb
mov
xor
inc
cltd
lea
xor
adc
dec
jl
jl
stos
adc
ljmp
stc
cmc
leave
and
dec
aas
mov
inc
dec
test
push
das
cli
ret
jle
repz
out
bound
fdivrp
rep
lret
sub
jae
fstps
pop
js
nop
xor
xor
adc
cmpsl
out
push
inc
imul
and
js
insb
lahf
mov
pop
push
fsubp
and
pop
xor
pop
jecxz
dec
movsb
inc
and
clc
dec
xor
lret
insb
fmul
lods
inc
clc
mov
lret
add
mov
cmp
scas
jecxz
jg
mov
xor
fistps
ljmp
mov
xor
outsb
js
leave
mov
jbe
push
cmp
les
pop
dec
hlt
fmull
jb
insb
fistps
xor
xchg
or
and
mov
mov
dec
repz
mov
clc
lahf
dec
xor
pop
in
pop
cmpb
lcall
loop
mov
pop
ss
sahf
repnz
shrl
jecxz
mov
jo
add
jmp
sbbl
push
xchg
jmp
sub
jge
sbb
jbe
cmp
cmp
or
pushf
int3
shlb
xor
sub
jae
inc
ret
lahf
ljmp
aam
cmp
shlb
jmp
rolb
jae
jge
jb
aaa
insb
fisubl
push
or
mov
xchg
xor
push
or
mov
dec
sub
outsl
dec
push
out
psubusb
insb
fdivs
jge
dec
movsl
sbb
sub
xlat
nop
mov
push
fnstenv
lret
sub
push
adc
cli
adc
push
push
push
push
je
mov
fldenv
and
out
sbb
mov
mov
cmp
lret
pop
jge
and
jmp
add
pop
and
mov
fidivs
xor
add
leave
sub
xchg
push
jp
or
mov
cmp
cltd
popa
ret
mov
or
mov
jnp
das
mov
jns
cmp
pushf
push
in
lret
inc
scas
leave
int
inc
roll
lret
mov
adc
mov
idivl
xchg
push
cmp
inc
ficoml
bound
out
int
in
pop
fisubl
pusha
test
dec
imul
das
out
cltd
mov
jbe
lret
popf
jl
das
jns
mov
sub
sarb
push
icebp
push
xchg
push
outsb
subb
les
push
push
les
xchg
xchg
mov
daa
in
sarl
movsl
fisttpll
mov
mulb
sub
jge
popa
cmpl
repz
fmulp
xor
add
insb
jno
cld
enter
adc
mov
xchg
cmp
call
add
pop
cmpsl
jo
and
aad
pushf
mov
push
cltd
sub
dec
jb
add
adc
push
xchg
daa
data16
ja
dec
cmpb
xchg
and
lret
mov
mov
hlt
push
add
sub
add
sti
hlt
ja
call
movsb
outsb
cmp
push
mov
mov
mov
sub
arpl
rolb
test
ret
repz
mov
xor
mulb
mov
cmp
ja
add
pushf
cld
xor
fldl
mov
hlt
movsb
push
xor
xchg
addb
aam
stc
pushf
push
popa
jne
repnz
sarl
fwait
xorps
ds
mov
shrl
stc
inc
repnz
xchg
xor
stc
mov
scas
hlt
mov
out
fidivs
push
sub
pop
mov
jns
ret
cmpsb
ds
daa
cltd
mov
in
iret
mull
mov
test
dec
sbb
pop
hlt
jns
pop
and
popf
in
test
outsl
jle
std
inc
bound
jmp
ret
mov
arpl
pop
xchg
and
mov
add
and
mov
je
lods
add
mov
push
push
push
push
repnz
outsb
test
mov
les
fidivs
add
and
aas
adc
or
out
pop
push
roll
sub
fdivr
mov
call
aam
fcomp
sbb
dec
icebp
jl
mov
sarb
enter
cs
in
xchg
jl
icebp
stos
jbe
test
test
jge
jmp
mov
cld
push
mov
jge
push
xchg
fs
das
in
ja
int3
mov
mov
sbb
out
push
mov
push
mov
mov
repz
out
scas
mov
or
push
mov
cli
call
cltd
int
push
fstps
mov
jl
icebp
mov
cli
movsb
test
xchg
mov
test
pop
and
leave
push
add
or
loope
cmpsb
in
jle
aas
xor
je
jnp
mov
or
mov
ja
insl
push
cmp
xchg
ficomps
pop
addr16
sub
stos
dec
sub
add
daa
lock
jmp
es
sahf
push
dec
mov
dec
ljmp
or
cltd
popf
lcall
rol
daa
imul
jb
mov
arpl
sbb
or
and
xor
mov
popa
inc
scas
mov
ja
pop
notb
fcmove
push
mov
leave
adc
shrl
or
rcrl
or
jmp
push
nop
mov
aas
subb
mov
xchg
movsl
mov
aam
shrb
cli
mov
movsb
mov
loope
adc
jnp
xchg
cmpsb
icebp
pop
xor
mov
pop
jp
add
loope
mov
js
add
cs
inc
xor
inc
mov
add
insb
clc
jo
dec
inc
dec
je
pop
dec
xor
add
lcall
in
pop
adc
push
bound
jae
xchg
mov
jg
xor
int
sbb
push
adc
sbb
out
xchg
cmp
std
decb
out
imul
test
test
add
lods
insb
add
imul
dec
dec
mov
add
shll
pop
inc
loope
ja
and
fnsave
xchg
pop
jbe
or
jl
jae
push
mov
mov
out
push
hlt
jbe
sub
cltd
xchg
out
inc
xor
dec
in
adc
addl
mov
iret
cmc
mov
cli
and
ret
inc
push
outsl
dec
imul
inc
sbb
mov
add
mov
mov
in
sbb
cmp
pop
add
aam
pop
aam
push
dec
sbb
sub
cmp
mov
mov
fs
mov
mov
fistps
in
mov
lock
cmpsl
dec
cmp
jbe
aad
xor
test
aas
xor
xchg
adc
jb
es
ret
mov
sahf
lahf
adc
lods
lret
sub
xor
cmpb
cmp
iret
pusha
sahf
aas
jns
sbb
lcall
add
adc
fucom
sbb
ds
test
xor
and
xchg
push
lock
mov
xchg
pusha
xchg
mov
clc
cmp
orb
mov
jo
hlt
mov
xor
mov
and
imul
mov
dec
daa
outsl
or
mov
daa
adc
or
xor
arpl
dec
leave
rcr
mov
pop
icebp
enter
and
cmpsl
test
roll
and
mov
mov
jmp
enter
imul
mul
add
outsb
outsl
es
shl
sbb
in
fsubrl
loopne
or
dec
mov
insl
popa
jb
push
xor
add
scas
test
ret
cmp
gs
incl
mov
shrl
push
pop
mov
or
mov
mov
es
sub
je
or
cmpsb
cli
add
xor
mov
pop
je
mov
pop
enter
xchg
mov
fbstp
push
inc
push
jo
mov
imul
xchg
popaw
mov
xor
je
jle
mov
cmp
fcomps
sbb
int
fcmovnb
push
inc
mov
jbe
push
popa
cmp
push
pop
leave
mov
fidivs
sub
xchg
push
popa
xchg
sbb
push
jns
sub
dec
push
fdecstp
je
lods
cmp
nop
in
push
aam
pop
jbe
push
in
rolb
into
lods
sub
shrl
cmp
xor
dec
and
cmp
sarl
mov
inc
xor
stos
add
adc
adc
jl
pushf
jo
xor
jno
adc
into
inc
test
cmp
or
fwait
negl
jo
jl
pop
xchg
fnstenv
ss
aas
mov
fisubs
mov
mov
test
loopne
mov
scas
pop
ret
test
int3
jle
mov
testl
sbb
add
adc
or
cmp
cs
add
mov
stc
or
nop
pop
mull
xor
cmp
adcl
cmp
adc
dec
int3
push
cli
cmp
subb
jl
push
and
pop
out
mov
add
cmc
cmc
subl
scas
mov
mov
mov
jno
lret
dec
repz
sub
xchg
in
or
lret
cmp
aad
mov
jecxz
shl
icebp
bnd
sub
mov
ret
ja
fnstenv
out
dec
dec
lcall
in
daa
mov
mov
addr16
dec
jae
outsl
push
das
pop
ret
arpl
inc
ljmp
andb
int
or
push
lcall
stos
xchg
or
jae
lods
icebp
scas
pop
mov
testb
push
in
addr16
mov
add
roll
inc
out
int
mov
test
xchg
fld
jl
jno
aam
lods
fxtract
scas
testb
loopne
and
add
mov
sti
sbb
push
sbb
repz
add
push
ja
outsl
and
cwtl
xor
pop
ja
mov
je
popf
outsl
clc
movsl
jecxz
add
lea
orb
and
xchg
pop
jb
push
jmp
mov
jno
jnp
pushf
into
or
je
int3
lret
dec
les
inc
in
cmp
mov
sbb
mov
daa
and
adc
jge
sbb
and
mov
es
hlt
repnz
out
pusha
mov
push
adc
sub
push
lock
nop
adc
or
outsb
movsl
jl
lock
mov
das
dec
je
push
mov
nop
jmp
mov
inc
sbb
pop
jnp
jnp,pn
jne
stos
lea
cwtl
notl
lock
mov
mov
mov
sub
cmp
sahf
xor
cwtl
enter
sarl
repnz
pop
push
xorl
sub
sahf
xor
pusha
push
jb
push
sbb
std
fildll
or
sti
mov
test
jl
push
push
xor
sbb
push
mov
cmpsl
cmp
aad
int
xor
lret
xor
outsb
fwait
mov
ljmp
shrl
sub
fcoms
xor
cmp
pop
lcall
mov
out
jl
arpl
fadd
aam
mov
aam
mov
jle
mov
iret
jne
cli
xchg
adc
rcrb
or
popa
sbb
notb
mov
xchg
aad
and
outsb
bound
je
sbb
in
push
mov
xor
fstps
setns
adc
pop
or
int
in
cmp
push
enter
cmp
in
nop
clc
sub
dec
scas
push
mov
lds
jg
popf
call
hlt
out
and
xor
js
jbe
pop
scas
subl
pop
mov
mov
in
push
mov
mov
adc
push
rolb
ljmp
ret
mov
fdivrl
out
dec
push
fadd
pop
push
adc
fisttpl
mov
ds
mov
pushf
icebp
jle
icebp
add
aas
inc
cmp
sbb
and
stc
mov
lock
cmp
pop
jecxz,pt
fidivl
and
pop
cmp
add
sahf
cld
enter
mov
sbb
mov
adc
push
out
jbe
add
xchg
jnp
pop
ds
jg
cmpsb
std
test
jb
xchg
enter
fmul
mov
mov
rolb
fnsave
ljmp
cwtl
or
decl
adc
mov
popa
je
pop
in
push
roll
aam
insl
sub
pop
sbb
iret
nop
cli
pushf
mov
sahf
or
push
cmpsl
sarb
pop
scas
int
push
dec
xchg
stc
scas
inc
bound
mov
movsl
out
cwtl
and
sbb
dec
push
adc
ret
in
and
cmp
and
push
xchg
jecxz
lahf
or
pop
ja
jp
hlt
fistpl
xor
push
fwait
and
imul
xchg
iret
or
xchg
xlat
in
or
das
ret
cmp
inc
and
and
adc
jle
add
inc
xchg
mov
out
add
dec
inc
addr16
pushf
pop
outsl
mov
pop
adc
mov
mov
aaa
stos
dec
or
mov
dec
jns
mov
in
xor
sbb
stos
jbe
sub
pop
push
cmc
fiaddl
cmpsl
fists
test
arpl
jg
out
xchg
movsl
jbe
push
rorb
aaa
pop
xrelease
in
add
leave
data16
jl
pusha
sbbl
hlt
and
mov
fcmovnbe
adcb
inc
dec
inc
pop
jb
sub
pop
js
jae
dec
xchg
data16
xor
outsl
mov
or
xor
cmp
sarl
int3
adc
jmp
add
ret
lods
ja
adc
cmp
int
imul
lea
mov
in
mov
loop
lods
mov
push
ljmp
fstpl
dec
xorb
orb
imul
mov
jecxz
mov
or
and
xchg
popf
insl
add
sub
cmc
fnstsw
dec
shl
jne
and
jp
setb
mov
xor
mov
dec
scas
sbb
jmp
lea
and
es
adc
inc
cmp
stos
push
pop
sub
mov
repz
sarl
xchg
and
lods
mov
sub
repz
subb
dec
test
or
jle
ret
dec
pop
imul
dec
sub
add
es
sahf
call
pop
or
lods
mov
jl
jbe
add
inc
jbe
xchg
sti
sub
and
mov
jne
or
mov
dec
jle
sbb
adc
xor
xchg
mov
js
dec
enter
cli
lods
dec
fldt
adc
sbb
dec
mov
repnz
mov
loope
and
test
jb
outsb
or
incl
jge
adc
jne
out
popa
mov
lret
add
out
mov
sub
hlt
out
ret
mov
fmulp
jmp
or
push
ds
fdivp
loopne
dec
push
insl
lahf
addr16
push
cld
pusha
gs
mov
cmp
jp
push
dec
mov
xchg
mov
adc
ljmp
jecxz
and
cmc
mov
icebp
movsl
lahf
jne
push
int
cltd
lret
movsl
jnp
sbb
or
and
pop
sub
add
and
cmp
lcall
push
loopne
xchg
movsb
dec
inc
push
adc
dec
mov
ret
add
jnp
sbb
xor
cmpsb
inc
xchg
mov
or
inc
and
adc
dec
dec
xchg
mov
xchg
subb
cmc
pushf
in
fsubl
sbb
pushf
sahf
jmp
pop
mov
pop
add
and
loope
aas
addl
push
mov
sub
pop
pop
nop
icebp
popa
out
test
adc
daa
and
fs
and
xor
xchg
adcl
xchg
jb
push
inc
or
std
xor
adc
mov
mov
fnstenv
or
std
ficompl
pop
jp
sbb
out
dec
mov
xor
es
fmul
mov
add
das
lret
jp
mov
shrb
cmc
push
xchg
outsl
test
lods
and
fsubp
or
jb
push
gs
rcrl
jbe
cmc
jbe
adc
push
jp
xor
sti
cld
ljmp
xchg
pop
xor
push
cmpsb
mov
std
cld
hlt
xorb
fsubp
mov
mov
hlt
imul
mov
call
ja
outsb
jmp
testl
in
nop
test
push
mov
adc
scas
cli
dec
lret
cmp
mov
aad
and
ja
pop
imul
jae
inc
aaa
cli
ret
stos
dec
pop
push
mov
pop
lret
movsl
ret
and
nop
stos
sub
inc
pop
xchg
mov
pop
lods
jg
cmp
adcl
cwtl
sbb
cmpsb
push
out
cmp
fs
or
repnz
cmp
jno
js
dec
pop
xchg
adc
int
test
mov
inc
jbe
cli
mov
data16
xchg
cmc
ret
icebp
sahf
push
in
cmp
fdivrl
pop
xchg
mov
insl
sar
fiaddl
mov
lock
or
outsl
mov
aaa
filds
mov
push
movsb
cltd
sbb
addr16
dec
hlt
aam
add
jg
lock
jae
into
push
ss
push
inc
jle
out
jb
movsb
mulb
outsl
mov
mov
and
ljmp
lods
fimuls
adc
inc
pop
cld
mov
rorb
mov
xor
sbb
je
fisubrs
cmp
inc
pop
in
push
and
lods
or
iret
pop
pop
sbb
lret
icebp
add
or
jle
mov
popa
clc
orb
testl
addr16
out
mov
push
add
sbb
sub
pop
icebp
ror
jmp
push
aas
or
nop
mov
nop
sub
movsl
dec
outsb
dec
es
test
pop
or
out
imul
fnsave
push
ret
mov
int
xor
in
pop
outsb
mov
mov
in
or
sbb
add
push
das
push
cltd
lds
sti
mov
gs
cmpsl
pop
fcoms
sti
sub
mov
and
add
fdivl
cmpsl
sub
call
fcoml
xor
std
push
call
pop
dec
std
fdivr
xchg
push
mov
in
xor
xor
add
push
subb
mov
das
mov
movsb
sahf
mov
into
mov
std
je
in
movsb
jmp
fbld
add
mov
xchg
push
call
add
sub
jo
xor
test
rcrb
inc
hlt
fsubp
adc
mov
nop
mov
mov
test
nop
dec
nop
clc
sbb
pop
push
bound
jecxz
outsb
sti
mov
in
ljmp
mov
cs
pop
lret
div
loopne
arpl
pminsw
call
and
sbb
dec
mov
push
mov
test
xchg
lret
mov
arpl
mov
push
hlt
push
xor
mov
mov
pop
push
aad
loop
aad
adc
cmc
push
mov
xor
inc
mov
test
pop
mov
lods
sbbl
sbb
clc
movsb
add
cmpsl
lret
out
fdivp
cmp
int3
mov
xchg
lea
inc
out
in
ljmp
inc
ja
jge
lret
stc
or
out
inc
sub
jmp
iret
adc
lods
or
mov
movsl
inc
loopne
cld
sbb
pusha
jne
fstp
pusha
das
lods
sbb
mov
nop
lahf
push
cltd
jle
popf
fdiv
and
int3
repz
lods
call
in
jecxz
cmp
push
mov
mov
inc
jl
push
jle
adc
mov
pop
in
rcll
pushf
lea
repz
fidivrl
sbb
cmp
test
mov
jo
std
push
jg
sbb
and
out
repnz
out
gs
xchg
std
andl
pop
or
aas
stos
imul
out
ds
lds
cwtl
push
push
xchg
add
in
mov
pop
stos
adc
mov
test
adc
cli
add
mov
movsb
shr
loop
push
mov
jmp
aam
jg
stos
dec
cmpsl
mov
fs
jae
xchg
das
cmp
test
cli
pop
in
pusha
fcomp
movsl
inc
sub
popf
pop
inc
in
inc
pop
addr16
in
cmc
mov
insl
orl
lret
adc
mov
pop
inc
popa
out
mov
ret
mov
push
out
dec
les
int
mov
adc
xchg
xchg
fbstp
push
mov
pushf
out
lcall
push
pusha
jo
push
sub
repz
fwait
pop
cmp
sti
mov
ljmp
lret
adc
jae
out
shlb
xchg
mov
cmp
xchg
in
xchg
loop
pop
mov
data16
mov
cmp
std
add
fdivl
rcll
cli
xor
movsl
jo
clc
jg
add
dec
inc
cld
lea
lods
sbb
shrl
das
mov
int3
fisttpll
mov
add
nop
mov
mov
inc
test
or
mov
dec
daa
rorb
insl
cli
xor
xor
adc
fiaddl
sub
iret
jo
xchg
testb
movsl
pop
push
push
ljmp
insl
sti
adc
outsb
sbb
pop
mov
stc
sahf
push
inc
int
insb
test
xchg
sub
push
lret
xchg
lret
sahf
cmp
imul
or
inc
xor
dec
jb
push
push
repnz
sub
xchg
sbb
inc
mov
ffree
enter
pop
inc
cmp
jnp
mov
aad
aad
shl
push
inc
push
xchg
inc
adc
jbe
je
test
mov
pop
xor
sub
xor
or
mov
mov
rclb
push
sti
mov
andb
mov
xor
xor
shlb
adc
cmpsl
cmp
ja
mov
mov
fwait
int
cmpsl
sarl
jae
rcrl
sti
cltd
cmpsl
cmp
adc
das
mov
sub
jmp
add
inc
dec
lret
inc
adc
jb
ss
outsb
or
fistps
pop
outsb
inc
pop
fs
out
dec
sti
adc
orl
lret
pop
ds
aam
jo
xchg
push
cmp
push
push
and
push
stc
aam
int
xchg
and
push
iret
push
add
pop
cmc
sub
add
or
out
ficoms
sti
push
mov
rcll
jp
gs
cs
stc
outsl
ss
mov
xor
je
in
inc
jo
enter
sub
test
sbb
outsb
xchg
stos
xor
ret
test
ja
js
lods
push
cmpsl
sbb
das
lods
mov
ja
stos
xchg
push
flds
push
paddw
sbb
cltd
xor
daa
or
dec
mov
push
pop
fs
xchg
ret
hlt
cld
packuswb
push
nop
mov
mov
xchg
aam
imul
mov
adcb
imul
movsl
mov
xchg
cmpsl
stos
push
jae
xchg
mov
test
loopne
or
add
testb
int3
das
call
jle
push
jbe
das
push
lcall
inc
cs
xor
xchg
mov
icebp
icebp
iret
add
sub
dec
jle
cmp
dec
mov
mov
inc
or
popa
xor
xchg
lcall
dec
add
inc
insl
cmp
mov
and
xor
and
mov
test
pop
fdivs
cmp
xlat
xchg
outsl
sub
cmpb
hlt
inc
jle
xor
push
mov
add
out
push
push
cmp
ss
ljmp
icebp
fwait
cmp
popa
pop
movsl
lea
cmp
push
mov
mov
and
fadds
pop
lock
divl
lea
std
stos
iret
iret
jae
out
movsl
pop
xchg
pop
push
sbb
mov
popf
scas
mov
stos
mov
dec
xbegin
mov
and
mov
add
cmpsb
rcrl
mov
mov
rorl
stc
push
faddl
aaa
xchg
push
roll
movsl
dec
sbb
test
lret
sub
or
filds
dec
jmp
stos
dec
jge
loope
ds
mov
outsb
lock
mov
shlb
xlat
push
int
adc
xchg
sbb
add
mov
cli
jo
sub
dec
mov
xor
cmp
lret
dec
xor
out
jge
addb
das
jg
adc
cmp
mov
je
inc
xchg
sbb
scas
ss
cli
fidivrl
mov
into
loop
cmpsb
inc
je
in
sti
and
cmp
mov
fnsave
cld
or
adc
mov
push
sub
fdivrl
fwait
ss
shlb
push
int3
fprem
in
lods
push
adc
pop
jge
xchg
inc
jne
jl
loopne
add
out
scas
inc
loopne
push
dec
cmp
pushf
cld
aad
or
pop
rolb
fsub
out
fmul
pushf
sbb
pop
das
stos
adc
mov
mov
sbb
add
adcb
shlb
enter
jns
lods
and
pushf
fstpl
nop
in
fldl
xor
popf
jle
adcb
std
and
ret
pop
mov
clc
push
shl
add
add
out
popa
mov
aam
stos
fwait
lea
scas
cmp
inc
dec
test
sbb
rcr
stos
xchg
leave
pop
cmpl
sahf
and
sbb
leave
xchg
jae
inc
jge
adc
lods
sbb
sub
dec
xlat
bound
mov
stos
inc
adc
add
jo
mov
mov
and
leave
sar
push
adc
aam
out
shrl
sub
sub
mov
ja
jno
lret
mov
das
flds
add
and
sub
das
push
xchg
jle
xor
lahf
inc
push
dec
mov
mov
daa
add
int3
lods
xor
iret
or
fwait
mov
sub
test
push
popa
mov
mov
stos
daa
shlb
mov
test
mov
int3
inc
mov
in
aam
fistpl
out
mov
rcrl
pop
jb
sbb
xor
ret
adc
ret
pop
push
lods
jecxz
xchg
lock
add
lock
mov
test
cli
vcmppd
gs
lcall
dec
ja
pusha
xchg
test
fsubs
imul
and
xlat
adcl
inc
dec
sub
push
gs
jnp
xchg
cmp
add
pop
add
ret
daa
cwtl
add
jp
das
mov
arpl
jo
jle
cmp
subl
push
adc
in
adc
divb
mov
lods
inc
push
or
push
inc
cmp
orl
mov
jo
lds
and
or
pop
ret
imul
mov
pusha
leave
or
mov
test
mov
int
push
mov
cltd
fs
xchg
aam
mov
push
add
les
mov
sub
push
jno
xchg
mov
popf
stos
mov
mov
add
je
adc
sbb
sarl
pop
sahf
aam
cmpsb
les
das
inc
jp
popf
or
sbb
aaa
stos
mov
pop
and
sub
push
fbld
add
mov
call
sbb
and
es
inc
mov
paddusw
mov
ljmp
cmp
imul
popa
aam
adc
mov
push
negl
jnp
dec
sub
or
shlb
xor
imul
sub
xor
andb
pop
dec
popa
sub
or
arpl
lret
les
mov
and
bound
mov
mov
push
add
dec
mov
xor
cmpsb
sbb
jae
cmpsl
int
or
or
in
xor
pop
out
mov
fldcw
cltd
pop
sbb
fmuls
xor
pop
jmp
imul
aam
and
push
ret
xchg
ja
push
inc
ss
ret
add
cmp
cmc
or
xchg
inc
sbb
mulb
test
movsb
testb
and
mov
mov
cmp
add
in
sub
fldl
aad
adc
data16
mov
pushl
sub
cmp
mov
sarb
sub
or
mov
imul
push
push
incb
dec
sub
or
cmp
jno
aaa
and
push
jnp
push
lods
movsl
inc
icebp
mov
cmp
outsl
rorb
jne
repnz
negl
es
push
sbb
add
xor
pop
jmp
mov
fs
lret
jecxz
ljmp
addr16
lods
push
dec
cmp
rcrb
pop
insl
hlt
inc
pop
mov
lahf
or
lea
dec
cmp
jp
lcall
mov
outsb
lods
mov
xor
sub
mov
into
scas
notl
outsb
inc
cld
jno
stos
jbe
push
xchg
mov
xor
test
jl
int3
pop
dec
add
pop
jb
test
push
pop
fiadds
jnp
enter
inc
iret
sbb
cs
gs
push
dec
popf
packuswb
lods
jbe
jne
fmull
stc
test
je
adc
roll
pop
lahf
mov
movsb
or
push
pop
imul
cld
cmp
push
and
mov
jmp
mov
int
outsb
lods
fidivl
mov
add
mov
push
rcrl
mov
mov
das
or
ljmp
adc
xor
add
in
pop
adc
dec
sbbb
inc
add
fldcw
sbb
adc
insl
xor
es
call
loopne
push
lods
gs
mov
popa
or
repnz
loopne
loopne
mov
das
popf
mov
xchg
int3
notl
or
fs
dec
out
sub
into
or
in
push
jl
das
or
cmp
mov
lds
ljmp
adc
stos
test
mov
mov
cmp
nop
in
outsb
mov
lea
movsl
stos
stos
aas
pop
arpl
and
lds
mov
jns
jmp
adc
inc
cwtl
dec
pop
xchg
jle
sbb
scas
icebp
sbb
and
inc
pop
xor
push
subb
inc
lret
xrelease
or
pop
xor
inc
inc
cmp
iret
test
pushf
cltd
mov
and
pusha
jle
and
adc
lret
push
mov
aad
fistl
std
and
lahf
and
cmp
imul
not
lods
sbb
adc
pushf
sbb
adc
mov
mov
or
pop
movsl
pop
xchg
xlat
mov
dec
sbb
or
das
adc
and
mov
outsb
rcrl
enter
imul
cwtl
enter
mov
adcl
fmull
mov
js
pop
push
cmpsl
xor
sbb
or
xchg
jno
lret
clc
hlt
adc
xor
mov
int3
xchg
push
leave
filds
aam
pop
repz
fucom
dec
lahf
cmp
dec
in
cmp
test
push
lea
push
fdivrs
mov
mov
lods
int
pop
ficoml
cs
push
jecxz
cmc
mov
jecxz
and
and
cltd
fildll
mov
pop
xchg
xchg
test
push
cmp
stos
inc
lret
out
testb
cmp
dec
out
popa
mov
fs
mov
sub
aam
ss
int
lret
rolb
pcmpeqw
fs
in
and
ja
ror
jne
outsb
pop
fiaddl
dec
pop
fs
xor
loop
sub
into
ja
mov
cmpsb
testl
hlt
imul
cmc
js
add
test
lock
lods
push
popa
fcmovu
sub
iret
dec
dec
xor
dec
push
and
stc
fcoms
inc
push
jbe
in
loopne
adc
aas
xchg
add
ljmp
iret
imul
test
lods
sti
loope
jb
gs
fimull
negl
in
testl
mov
sub
aas
sbb
push
pop
loope
ret
mov
mov
fwait
pop
test
aad
div
fsts
lock
les
stc
inc
pushf
call
mov
push
insb
shl
jae
clc
cmp
sbb
adc
dec
dec
repz
and
rcll
arpl
out
mov
mov
xchg
mov
sub
lds
push
loopne,pn
xchg
cmc
test
enter
jbe
adc
call
pop
sbb
mov
movzbl
and
sbb
add
push
xor
pop
xchg
mov
mov
pop
out
and
sahf
xchg
pop
fnstsw
jb
lock
sti
xlat
sub
cli
adc
sub
pop
cmp
in
andl
push
pop
xorb
xchg
sarb
nop
aam
jo
rcll
mov
sbb
pop
out
xchg
rcrb
das
xorb
out
lods
jns
jp
or
sbb
rorb
push
gs
mov
lahf
call
jbe
shr
mov
adc
lock
test
and
popa
mov
cmp
roll
mov
lahf
arpl
mov
jle
xchg
or
dec
xor
cmp
mov
mov
mov
jp
nop
cmp
jae
mov
or
xchg
js
lcall
mov
xchg
adc
repz
int3
jp
mov
xor
push
das
test
rclb
iret
aas
jecxz
sub
pusha
fucomip
cmp
sub
jmp
mov
mov
or
cmp
adc
push
push
dec
push
mov
sahf
mov
call
test
lea
ss
ret
aad
sub
mov
stc
or
test
ficoms
pop
jecxz
inc
jns
ja
sbb
out
dec
sub
roll
test
sbb
xor
sbb
sbb
dec
or
fmull
out
and
xchg
in
push
mov
dec
mov
mov
add
sub
mov
push
aaa
xchg
xchg
xorb
xor
jno
xchg
xlat
jl
aad
pminsw
jp
int
sbb
cltd
lds
call
push
jmp
dec
sub
faddl
int3
add
das
mov
push
push
sbb
dec
out
xlat
scas
xchg
movsb
or
ja
testl
inc
xchg
testl
fnstcw
pop
add
mov
mov
cmp
mov
dec
testl
adc
xchg
nop
insb
lret
rcll
repz
test
xor
cli
push
repnz
outsl
fbld
jge
xor
xchg
arpl
dec
xchg
shrl
out
push
mov
dec
ret
sti
outsb
orl
pop
sbb
insl
daa
cld
icebp
nop
add
or
xchg
int3
stc
inc
mov
addr16
std
or
pusha
fidivs
rcll
dec
test
xor
jno
xor
shl
sbb
subb
fstps
lret
jne
mov
sbbl
push
jecxz,pn
add
aas
lods
lea
movsl
mov
popf
ljmp
repz
aas
loopne
jbe
jl
sti
push
sbb
aad
popa
fimuls
pop
test
mov
pop
pop
into
sub
lock
sbb
mov
mov
cwtl
dec
insb
ljmp
incb
and
pusha
lahf
out
or
lods
mov
and
and
lcall
pop
fsubrs
mov
mov
dec
mov
out
mov
inc
ja
mov
push
lea
push
data16
lock
push
movsl
inc
pushf
inc
popa
mov
jg
movl
pop
xor
xchg
sub
lods
add
fsts
jmp
ret
xchg
mov
xchg
ret
in
lods
push
out
mov
leave
jbe
push
in
mov
ss
loop
cmpsl
push
xchg
movsl
ds
jge
hlt
mov
lcall
adc
or
clc
iret
xlat
xor
xchg
negl
je
ds
adc
push
sbb
mov
xlat
popf
xor
inc
push
inc
adc
inc
fsubs
cmc
push
mov
iret
jmp
std
pop
push
mov
push
add
cmpl
imul
jge
or
dec
repz
sbb
mov
mov
ss
dec
ror
mov
das
jle
pop
add
ret
pop
cmpsl
int3
aaa
add
jp
pop
repz
fadds
jnp
push
popf
mov
mov
adc
in
push
andb
scas
sub
xor
jmp
inc
mov
push
pop
and
in
pop
jb
sub
and
mov
ret
aad
incb
pusha
xor
inc
xor
xchg
clc
dec
clc
ja
cld
ret
pop
mov
lea
cmpsb
push
pop
jo
imul
or
rclb
in
lods
sub
xor
sbb
mov
cmc
mov
cmp
push
jg
lret
dec
paddb
ficoml
mov
jae
push
loop
imul
adc
xchg
pop
jmp
ja
ss
or
les
lret
fbld
gs
stos
call
pop
pop
sub
mov
jg
pusha
repnz
lds
cltd
xchg
fst
jnp
in
testb
lods
out
ja
pop
sbb
pop
jmp
sbb
xor
ret
dec
cmp
xor
sub
xorl
ret
jbe
and
mov
mov
sbb
test
sahf
mov
sti
call
in
or
test
fldt
aas
fimull
lret
repz
adc
xor
lret
pop
gs
clc
into
aam
dec
dec
pop
push
or
das
iret
pushf
in
dec
mov
add
ret
pop
int
rol
fidivrl
mov
sub
rcrl
int3
lods
jnp
sub
sti
cli
inc
lods
orb
pusha
cmp
data16
push
xlat
xchg
jecxz
add
in
dec
adc
cmc
cli
sti
pop
aam
sbb
xchg
sbb
dec
or
es
or
test
sbb
in
mov
pop
adc
push
sti
hlt
add
pop
xor
cmove
faddp
jae
lea
mov
imul
cltd
jl
lds
fisubs
jecxz
jo
rolb
shlb
imul
aad
pop
mov
xchg
gs
sub
dec
inc
or
movsl
push
xor
icebp
bound
popf
add
nop
cmc
shrl
push
dec
cwtl
push
enter
clc
in
test
lock
ljmp
mov
fwait
push
jle
jp
xorb
mov
loopne
mov
xchg
pop
cli
pop
and
std
call
dec
scas
lahf
fbld
and
ds
pushl
fldcw
push
mov
pop
ret
fiadds
sbb
sbb
inc
push
inc
mov
dec
xchg
push
cmc
das
aad
xor
pop
cwtl
sbb
sbb
addl
lods
sti
aad
popa
cmp
sub
es
aad
xor
mov
not
xlat
leave
mov
adc
clc
sub
faddp
out
out
and
mov
sub
nop
outsl
imul
mov
sub
sbb
stos
jle
jg
pop
stc
mov
jo
imul
out
xchg
ljmp
in
xchg
sbb
loope
fdivp
push
cmpsb
fcompl
jns
stos
or
cmp
cs
or
inc
jnp
cmp
loop
lods
and
pushf
rorb
lret
and
lods
xor
aaa
fisubrs
mov
pushf
and
mov
gs
cmc
or
xchg
xor
sub
mov
jb
cmp
xor
int
add
or
arpl
dec
push
xchg
repnz
jmp
xor
shlb
fisubl
scas
sbb
imul
nop
cmp
lcall
add
ja
jnp
out
cmp
ja
scas
xchg
add
xorl
jo
xchg
fsubrp
aam
adc
dec
fists
cli
jmp
pop
in
pop
push
xchg
sub
js,pt
add
iret
enter
dec
in
mov
cs
dec
sti
icebp
into
sub
fdivl
nop
or
push
lds
aas
mov
out
push
add
leave
sub
jne
subl
pop
sub
pusha
lock
sbb
xor
enter
xchg
rcrb
cmp
push
mov
fidivl
fs
in
mov
lods
inc
shll
xor
cmp
jg
es
fiadds
hlt
outsb
rolb
lret
mov
mov
sbb
mov
or
add
movsb
cltd
push
lock
jp
clc
repnz
iret
cmp
jne
sbb
lret
das
out
loopne
xchg
mov
aas
fcoml
fisttpl
rcrl
cmpsb
inc
xchg
data16
enter
es
clc
add
mov
ds
adc
scas
lods
fbld
cmp
push
dec
or
lcall
dec
aam
xchg
lahf
mov
pop
repnz
subl
push
daa
rorb
mov
jb
in
mov
shl
call
sarl
pop
aaa
inc
sbb
or
pop
cmp
rolb
fs
add
in
test
adc
mov
inc
pusha
push
aaa
and
cmpsb
sbb
cmp
out
push
cld
or
add
xor
std
ja
dec
sbb
dec
xlat
sub
out
inc
adc
shlb
xor
jmp
out
sub
cli
ja
pop
lods
xor
fidivs
jp
jmp
int3
pop
inc
test
repnz
mov
pushf
pop
movl
lods
lret
aas
pop
dec
lcall
jb
repz
out
inc
in
pop
pop
rcl
into
sahf
frstor
and
scas
insb
mov
xchg
mov
add
andl
sub
cmp
fsts
mov
inc
mov
fcomip
negb
add
pop
lods
xor
xchg
sub
sti
dec
pop
jp
xchg
and
fucomip
fisubrl
inc
int3
movsb
push
iret
pop
clc
jno
lods
dec
cltd
lock
xchg
cmp
jae
inc
xor
inc
mov
mov
and
faddl
movsl
icebp
sub
push
mov
sbb
in
dec
lds
jo
xor
mov
movsl
mov
into
cld
inc
push
sbb
filds
push
cmc
xor
or
or
in
jnp
xor
mov
ljmp
cmp
mov
sub
fdivrp
movsb
xor
mov
test
insb
dec
lds
or
dec
lret
cmpl
jmp
in
add
jae
movsl
test
adc
mov
pop
sbb
cmp
pushf
adc
cmp
mov
xchg
lret
nop
xchg
pop
je
lock
lock
xchg
jbe
mov
cmp
or
mov
mov
dec
test
jo
jo
jge
fstpl
sbb
cmpsl
ror
lea
add
in
iret
pop
mov
pusha
and
pop
push
adc
cs
mov
mov
pop
fdivs
mov
pop
push
inc
cs
std
notb
fsubl
dec
xchg
jno
mov
test
rolb
cmp
iret
push
xchg
or
pop
cmp
pop
lret
insb
cld
arpl
stos
in
inc
mov
daa
iret
imul
adc
pop
jbe
sub
mov
jge
into
add
repnz
or
roll
mov
test
std
insb
movsb
lods
push
mov
test
sbb
xchg
inc
jne
add
ret
mov
repnz
lods
ljmp
cmp
or
pusha
mov
adc
and
pop
mov
pusha
sub
test
int3
mov
lret
out
jp
fs
mov
and
arpl
ret
lahf
lods
scas
out
xor
fdivr
outsb
xor
lods
aas
outsl
pop
mov
icebp
lcall
push
enter
xchg
lahf
insl
push
scas
cmp
jecxz
cmp
std
je
iret
pop
jb
cmp
or
fsubr
push
cli
cmp
push
movsb
jp
scas
imul
clc
pop
std
jne
imul
inc
test
push
popl
and
mov
ror
call
xchg
scas
add
xor
jge
mov
jo
lds
xchg
mov
jno
xchg
test
fisubl
jnp
aaa
test
xor
mov
mov
repnz
clc
jnp
jnp
out
or
jbe
clc
out
movsb
push
pop
xchg
dec
in
jg
fwait
sti
andb
jge
or
push
outsl
lahf
mov
lock
rcrl
fwait
add
inc
ret
push
ljmp
test
jle
xchg
out
xchg
mov
fsub
xchg
jne
sbb
cld
or
sub
dec
or
adc
jle
cmp
ds
sbb
cltd
out
popf
inc
push
inc
cmpsl
in
xchg
sti
cmpsl
pop
pop
scas
xchg
fbld
iret
sub
mov
in
and
xlat
lcall
xchg
dec
jp
cmp
sub
imulb
jno
js
fsubl
xchg
cld
sub
rol
adc
shr
pushf
mov
or
dec
sub
inc
mov
addb
push
xchg
gs
rorl
out
prefetcht0
aas
cmc
xchg
or
popf
jg
out
sbb
add
jmp
mov
movsl
outsl
aas
mov
sub
movsb
sub
pop
lret
mov
cmp
lock
mov
out
imul
js
popf
loope
dec
and
xchg
dec
push
adc
inc
xor
or
pop
les
adc
pop
push
xchg
enter
adc
repnz
popa
inc
sbb
pop
cmc
mov
xlat
ljmp
mov
pop
popa
in
sbb
icebp
out
repnz
inc
jo,pt
push
and
dec
orl
scas
mov
add
cmpl
out
mov
mov
and
xchg
mov
mov
push
stos
sbb
arpl
xor
loopne
mov
fcomip
fcomps
clc
pop
xor
aad
jo
mov
push
in
pop
fnstenv
cli
xor
xor
fcmovnu
test
dec
out
pop
sub
pop
sar
sahf
es
jbe
mov
bound
int
xor
out
mov
daa
or
mov
lret
jbe
test
mov
shll
out
lock
mov
xchg
inc
jl
scas
insl
andl
and
lar
mov
dec
mov
mov
sub
stos
mov
leave
jecxz
inc
mov
mov
out
js
scas
pop
push
push
imul
popa
or
std
mov
int
add
rcll
xlat
daa
je
xchg
or
fdivrl
and
pop
ja
and
mov
sbb
call
movsb
push
inc
mov
mov
shll
aas
ret
int3
insb
cmp
out
or
jecxz
push
pushf
mov
cmp
push
inc
jb
cmpsl
orb
pop
sti
inc
std
iret
subl
adc
imul
xchg
sbb
xchg
and
and
daa
xchg
cmc
mov
pop
and
jg
cmpsb
std
icebp
in
add
cltd
mov
shrl
test
daa
push
cmp
data16
out
inc
add
add
add
mov
rcll
shrl
xchg
and
sti
mov
pop
cmp
cwtl
dec
sbb
cmp
xchg
mov
xor
mov
inc
sbb
cmpsl
pusha
add
loopne
imull
sbb
dec
cli
lds
xchg
xchg
scas
je
mov
xlat
inc
scas
testl
mov
out
shrb
in
jecxz
pop
rorb
movsl
aas
adc
push
outsb
pop
pop
pushf
xor
hlt
adc
ret
mov
fwait
jl
lcall
stos
xor
and
adc
sub
add
bound
xor
inc
mov
xchg
push
push
stos
stos
in
mov
loopne
out
js
mov
jge
jo
in
outsl
mov
es
popa
addl
in
out
fcomi
push
and
subl
sahf
mov
cmpsb
inc
arpl
stos
sahf
shl
jge
lds
jbe
mov
lret
dec
mov
mov
pop
mov
jecxz
dec
stc
inc
fs
jne
lahf
insb
xchg
movsb
outsl
jp
cmpsb
xchg
popa
std
jp
dec
sub
cmp
dec
in
int3
xchg
lret
or
mov
loop
sub
or
aad
sbb
push
insl
popa
fsubl
imul
adc
or
loopne
cmp
jae
push
in
mov
repz
mov
add
mov
sub
out
popf
adc
push
aad
xor
daa
in
ds
hlt
icebp
loopne
mov
fsubr
sahf
nop
faddl
cmp
outsl
pop
popf
pop
test
xchg
mov
loopne
sarb
add
les
mov
mov
addr16
es
xor
jno
lret
sub
movsl
stos
into
das
lret
xchg
cmc
dec
jle
pop
cmpsb
ret
add
or
loopne
dec
fstpt
in
fbld
scas
popf
push
jge
lret
mov
hlt
xor
adc
xchg
mov
jmp
mov
pop
cmpsb
enter
adc
in
push
sub
xchg
sub
sbb
xchg
adc
pop
dec
test
sub
rorl
mov
ja
lcall
into
pop
xor
add
cltd
daa
aam
sub
lock
jae
ds
xchg
pop
stos
in
jnp
outsb
sub
cmpsb
enter
sahf
sti
mov
pusha
loope
pop
pushl
enter
jnp
mov
sbb
mov
cmp
movsb
add
pop
mov
nop
sub
insl
in
adc
rorl
adc
into
enter
mov
test
fisttps
fldl
pop
jl
xchg
call
ret
div
lods
pop
mov
js
fs
sub
enter
push
jge
xchg
insb
cmp
jb
sbb
sbbl
movsl
fwait
dec
cld
cmpsl
and
cmc
dec
pop
idivb
mov
mov
out
xchg
mov
and
in
jb
xchg
testb
mov
push
enter
cmp
cltd
sbbb
pop
pop
xchg
jmp
test
push
test
cmpl
lret
pop
sbb
jmp
testl
sub
lds
mov
iret
cld
in
lahf
mov
imul
movl
mov
mov
stos
add
in
mov
stos
out
pop
dec
and
mov
jge
sub
push
test
test
pop
add
pop
add
test
xor
daa
mov
inc
dec
add
add
inc
sub
mov
rol
pop
loopne
push
fcmovne
and
test
push
aas
in
adc
jmp
xor
js
popf
fdivs
xchg
sub
mov
jae
aam
lods
adc
xlat
add
pop
or
mov
inc
lock
or
gs
out
xchg
xchg
adc
int3
popw
inc
and
mov
shll
call
push
mov
test
push
mov
cmp
jmp
rcrl
mov
sbb
inc
repz
sti
or
outsl
fs
bound
es
mov
jne
aam
test
mov
jo
test
mov
push
push
push
shl
pop
pop
or
jb
int3
fsts
push
cltd
dec
das
mov
adc
cmp
sub
and
xchg
shll
lock
jl
hlt
cmpsb
test
mov
mov
mov
pop
iret
jmp
jmp
stc
test
out
cmp
lret
lods
xor
sub
repz
movsb
mov
dec
jno
leave
sbb
aas
jno
xchg
sbb
dec
mov
mov
cmp
loopne
xchg
inc
sarl
mov
fbstp
push
dec
stc
outsl
mov
das
sub
popa
cmp
xor
lret
sub
cwtl
push
push
sti
dec
data16
dec
mov
inc
sub
ss
imul
push
lods
fldt
imul
jp
pop
sbb
cld
sahf
out
mov
mov
out
lahf
out
jmp
mulb
push
dec
lds
jno
xchg
imul
iret
dec
push
push
lea
mov
pop
data16
dec
idivl
out
cmc
sub
mov
fldt
pop
jae
out
iret
out
rcll
and
push
das
sub
divl
lods
pop
mov
packsswb
sub
sbb
mov
push
lds
nop
popf
cmpsb
push
insb
out
dec
daa
xor
ss
test
popa
aad
push
mov
mov
or
mov
xchg
pop
hlt
mov
shl
sbb
xchg
push
pop
sub
add
lock
jp
icebp
rcll
pop
iret
test
stos
add
mov
inc
add
mov
add
mov
sbb
jecxz
stc
fcomp
pop
ret
or
in
sbb
and
jle
push
cwtl
mov
les
pop
jg
mov
loopne
pop
xchg
dec
dec
imul
sbb
jns
cli
stos
repnz
arpl
jne
fld
mov
leave
pop
push
cmp
or
dec
aam
ja
mov
mov
arpl
ror
lea
xor
jp
push
xor
lock
or
xlat
add
lcall
push
addr16
mov
in
lahf
xor
dec
push
xchg
cmp
and
sub
or
or
ror
add
sbb
addr16
test
gs
dec
lods
rorb
test
pop
gs
lock
inc
lock
sahf
jns
or
test
lret
daa
dec
fstps
scas
pop
or
jecxz
jle
xor
loopne
cmpsl
inc
scas
mov
adc
mov
jnp
orl
inc
nop
das
xor
mov
and
repnz
xchg
jge
dec
gs
or
cmp
push
into
cmpsl
dec
leave
cmpsb
sbb
faddl
icebp
add
sbb
push
xchg
xor
adc
cld
loope
shl
jp
test
mov
jbe
and
lds
sbb
sbbl
pop
inc
dec
sbb
push
jno
dec
jecxz
dec
dec
movsl
xchg
xor
mov
ds
jno
not
aam
xchg
insl
pop
arpl
out
mov
mov
mov
inc
pop
cltd
or
into
mov
cmpsl
sbb
scas
clc
roll
lock
in
movsl
jae
cli
inc
mov
mov
push
fs
movsb
jmp
mov
cmp
push
repz
sub
mov
fiadds
movsl
add
sbb
int3
mov
push
sub
test
and
add
push
dec
and
test
rolb
mov
loop
jg
sub
cld
cli
xchg
psrad
dec
bnd
pop
xor
dec
mov
cmp
xchg
mov
sub
mov
push
jle
cld
js
xlat
sahf
xor
addr16
sub
mov
jo
clc
dec
fiadds
cld
fiaddl
pop
push
out
test
lods
aaa
arpl
xchg
sub
movsb
jae
testl
cmpsb
fistpll
mov
in
sbb
xchg
xor
enter
daa
enter
pushf
fistl
cmp
push
imul
adc
mov
out
push
pop
push
ljmp
jmp
inc
mov
xchg
jbe
xor
inc
inc
movsl
fcomps
cmp
stc
adc
into
add
cmp
push
add
adc
or
std
add
loop
out
mov
loop
daa
shll
push
mov
imul
imul
mov
movsl
aad
pop
into
inc
push
mov
xchg
arpl
aaa
in
out
or
jno
pop
insl
stos
xchg
pop
jae
imul
sub
jmp
insl
jne
or
iret
pop
jmp
ret
sub
jbe
jb
cmp
xchg
dec
test
mov
mov
sti
iret
lret
in
push
pop
xchg
mov
xchg
lods
in
sbb
add
cmp
inc
sahf
and
jo
cmp
loope
notl
adc
push
cmp
lcall
dec
xchg
mov
mov
cs
cmpsl
mov
stos
lcall
pop
dec
lds
mov
or
sbbb
xor
lret
mov
jbe
xchg
or
insb
pop
pop
mov
out
jmp
adc
movsb
pop
sahf
pop
adc
sub
scas
and
popf
cmc
ds
in
out
addr16
adc
pop
imul
jmp
inc
xchg
sbb
lcall
and
movsl
fimull
jmp
sub
ds
cltd
ja
or
loopne
add
xchg
lret
cmc
shlb
jnp
lock
ja
jge
dec
mov
jge
stc
js
mov
xor
jge,pt
lahf
loope
pop
std
push
lahf
int3
xor
inc
shlb
mov
push
mov
int
push
jl
lcall
push
and
pop
mov
dec
dec
xchg
fcoms
test
and
add
ss
lahf
inc
xchg
divl
ja
lahf
cmc
in
adc
mov
push
cmc
push
adc
push
jne
lock
and
jns
adc
pop
bnd
lahf
lods
xchg
sbb
lret
or
sahf
gs
cld
mov
inc
mov
rorl
repnz
out
mov
xchg
add
sbb
popf
lahf
pushf
out
lds
je
pop
cmc
std
decb
cld
sbb
adc
popl
in
mov
cmp
je
push
into
hlt
cmp
out
faddl
aas
pop
jbe
fiaddl
cld
xchg
jge
scas
jl
xchg
mov
adc
cmp
in
cs
popa
add
dec
add
push
cmp
out
mov
sub
call
test
inc
out
xor
cmp
or
lcall
stos
orl
dec
cwtl
ds
mov
sbb
mov
xor
stc
xor
es
popa
dec
xchg
ret
pusha
out
mov
movsb
adc
sbb
clc
nop
fs
js
scas
cmp
pop
lods
jecxz
push
leave
mov
hlt
in
mov
and
add
outsb
ds
arpl
inc
sbb
fistpll
call
movsl
aam
sub
fwait
stc
add
out
ss
mov
mov
scas
cmp
repnz
xchg
pusha
roll
or
sbb
dec
jo
cs
sarl
movsb
movd
test
out
xchg
shrl
fisubrs
ljmp
push
xor
xor
dec
lret
imul
and
fisttpll
xchg
rorb
fs
mov
es
fs
movsl
test
mov
adc
scas
push
fnstenv
mov
xor
xchg
sti
test
add
movsl
fldt
mov
cmpsb
adc
arpl
fisubrl
cmp
and
xchg
push
imul
cmp
and
in
push
xchg
into
and
mov
rcrb
mov
scas
leave
ficoml
xchg
movsl
ror
icebp
cmp
jae
ret
ret
or
or
fstpt
leave
aam
lock
xor
in
shrb
jno
push
add
dec
mov
pushf
adc
or
cs
cmp
pop
or
sub
cmp
sbb
imul
mov
fadds
aad
popf
jge
mov
sub
ret
es
pop
ds
xchg
shl
sub
loope
fsub
je
shll
xchg
dec
and
dec
pop
push
loop
ss
call
imul
dec
xchg
outsb
mov
pushf
add
mov
stos
cmp
push
aad
ljmpw
movsl
fs
ret
fmul
lea
pop
icebp
inc
cmp
divb
xchg
or
lea
inc
cld
mov
cmpsb
insl
and
iret
push
fcompl
pop
mov
mov
daa
cltd
ret
pusha
mov
adc
jecxz
and
sbb
lods
pushf
add
das
or
ja
mov
incb
add
cmp
stos
sbb
xchg
in
cmpl
mov
lea
jp
cmp
and
push
in
test
lahf
adc
int
xlat
repz
and
loop
pop
lret
push
lret
cltd
arpl
mov
lods
lcall
mov
les
fstpl
std
xlat
das
xor
popf
es
test
shrb
les
xchg
cmp
daa
xor
sub
push
inc
xchg
mov
imul
xor
hlt
push
insl
xor
repnz
mov
dec
es
aam
cmp
lods
push
cmp
out
arpl
cmp
leave
loopne
cltd
in
jo
and
movsb
push
lea
cmp
jl
lods
dec
popl
in
pusha
das
push
inc
imul
adc
mov
dec
jne
xorb
xchg
addl
mov
mov
idivb
sbb
pop
pop
mov
ror
loope
mov
mov
test
or
cmp
out
test
mov
cli
xchg
and
stos
es
test
xor
cmc
and
jecxz
outsb
loop
fsubrs
sbb
sub
mov
aad
lods
inc
adc
cwtl
aad
pop
mov
mov
lret
scas
cs
shl
add
pop
andb
or
xor
push
xchg
pop
cld
xchg
sbb
or
jnp
sbbl
loopne
sub
pop
jmp
adc
cmp
sbb
test
jno
push
inc
pop
cmp
xor
xchg
mov
cli
sub
fs
cmp
xchg
sbb
xchg
inc
repz
add
popf
mov
lds
rcll
inc
jp
cld
dec
pop
mov
rcl
lods
and
cwtl
fmul
filds
sarl
movb
cld
lods
inc
sti
jne
cmp
or
repnz
sub
push
in
int3
ljmp
add
and
mov
cltd
xlat
or
mov
testb
mov
push
mov
jmp
pop
nop
jo
inc
xchg
mov
sub
inc
inc
fisttps
popf
mov
filds
test
int3
out
mov
mov
sbb
mov
adc
fmuls
orb
xor
pop
jecxz
and
mov
xchg
xchg
sub
pop
add
call
dec
sbb
push
fcompl
stc
sub
loope
inc
adc
xchg
lret
testl
push
pop
jl
mov
sub
popa
lcall
inc
fildll
test
mov
jns
jge
popa
imul
ret
imul
div
loopne
adc
xlat
sti
cmp
xchg
test
insb
and
xor
push
adc
xchg
jne
pop
mov
xor
imul
ficoms
add
mov
mov
in
mov
or
sub
popf
sub
dec
sbb
enter
les
adc
leave
jl
push
jg
loopne
mov
lds
xor
rcl
shrl
and
jne
push
test
and
lods
mov
adc
fs
mov
loope
sub
mov
pushf
xor
add
fwait
cmc
mov
iret
xchg
scas
cmpsl
mov
cmp
push
cs
jmp
add
sbb
dec
sbb
mov
mov
mov
pop
mov
sbb
push
lds
dec
pop
daa
daa
gs
inc
push
dec
cmpb
subl
cmpsb
dec
arpl
cmp
int
sub
in
ja
mov
xor
cmp
fs
int
jnp
adc
lock
add
lret
repz
dec
fcompl
popa
pop
into
jns
cli
xor
add
cmp
enter
fndisi(8087
lds
inc
aad
pop
push
xchg
or
cmpsl
test
clc
jne
test
or
cli
mov
inc
xchg
jb
cmp
mov
and
rcll
loopne
outsl
fdivr
out
movsb
push
mov
jg
pop
imul
cmpsl
insb
push
sub
addr16
rclb
lock
mov
xorl
mov
ss
call
repnz
pop
cmp
scas
mov
adc
xorl
sub
enter
je
push
or
and
iret
sti
xchg
mov
xor
jecxz
or
shl
inc
push
adc
in
fsubrp
cmp
test
sub
cmp
ret
or
mov
inc
stc
dec
xor
push
or
push
fwait
sub
inc
test
lods
bound
mov
outsl
loop
mov
out
gs
pop
je
inc
sub
mov
mov
aam
shl
mov
mov
icebp
fldenv
add
into
leave
jg
add
mov
add
mov
mov
jno
cld
ret
aam
cmp
fidivrl
ret
push
or
enter
xchg
cmp
ficomps
subl
or
faddp
jg
cmp
or
pop
mov
lret
cmp
into
aaa
data16
xor
lods
sbb
inc
out
rolb
sarb
mov
jb
xchg
xlat
and
jnp
lea
xchg
lret
leave
jo
out
xchg
mov
cli
pop
arpl
dec
stc
sbb
loopne
in
pop
rolb
inc
inc
cmpsl
imul
or
loope
adc
sbb
in
roll
imul
ljmp
or
mov
dec
test
xchg
add
adc
jno
jp
fcompl
mov
stos
loopne
push
sub
adc
sbb
cmc
fldl
loope
push
xchg
xor
xor
mov
outsb
inc
int
sti
lock
and
or
cmc
xchg
out
cmpb
jo
adc
xchg
mov
mov
jg
scas
out
aaa
and
pop
mov
fldt
xor
insl
aam
lret
cs
and
dec
lods
insl
cld
shrl
cmpl
push
sbb
push
and
push
fisttpl
sahf
sub
push
mov
outsb
out
add
jnp
push
cmp
test
push
adc
pop
pop
mov
cmpsl
mov
rcrb
aas
pop
push
pop
mov
and
jge
mov
jge
pop
mov
sbb
sbb
add
in
insl
jbe
pop
cltd
in
pop
push
test
cltd
cli
mov
pop
jno
icebp
and
fsubrp
cmp
add
jp
loop
scas
subl
int
fistl
pop
inc
cltd
arpl
jmp
pop
xchg
mov
pop
xchg
and
mov
sub
aas
mov
sbb
in
mov
lods
std
xor
inc
and
pop
fucomp
push
adc
les
push
or
and
stos
mov
jbe
loopne
sub
repz
jg
inc
xchg
mov
imul
pop
pop
mov
in
aam
inc
sub
push
pop
ret
xchg
es
cmp
sbb
dec
cwtl
pushf
xor
sub
mov
pop
add
pop
or
xor
mov
inc
mov
and
sub
fdivrs
loopne
cmpl
sub
loop
push
iret
bound
mov
xor
movsb
fistl
subb
mov
imul
jno
imul
ljmp
xchg
xor
cmp
xor
mov
mov
lret
push
jmp
gs
loopne
popf
and
or
xor
and
test
aaa
jo
cwtl
or
out
xor
and
lahf
hlt
inc
orl
xchg
cmpsl
mov
fstl
scas
or
xchg
lock
add
adc
sbbb
sbb
adc
pop
aad
mov
jge
pop
sub
adc
fisubrl
insb
xor
orb
dec
je
loopne
in
or
xor
pop
xchg
or
pop
sti
or
cmp
dec
lods
movsb
cmp
and
imul
test
dec
shrb
or
mov
rcr
sarb
add
stos
jle
or
sub
stc
stc
push
out
inc
mov
jmp
adc
cmp
cltd
sbb
fwait
dec
ret
and
lds
repnz
mov
cwtl
dec
sbb
adc
and
incb
cmpb
mov
pop
add
or
xor
pusha
or
lret
push
cmp
stc
add
jge
xchg
lret
jns
jp
add
les
mov
push
mov
outsb
cmpb
popa
loope
aam
sbb
sub
imul
adc
push
data16
dec
inc
adc
repnz
leave
test
push
fisttpl
int
add
fcomps
xchg
ja
popa
les
or
xor
sahf
mov
pop
xor
cltd
mov
and
mov
es
adc
mov
out
push
jno
arpl
clc
xchg
mov
or
sub
hlt
cmp
lahf
push
adc
ror
jne
pop
movsl
inc
push
clc
adc
xor
pop
adc
addl
lods
cmp
dec
jnp
fisttpll
sbb
sub
push
dec
xchg
pop
and
jg
pop
jp
out
out
es
mov
push
fisubs
xchg
cmp
push
xor
cld
stos
lds
push
inc
mov
int
addr16
lahf
inc
push
and
xchg
add
dec
cld
shrl
or
imul
sti
aam
loopne
int3
dec
andl
sub
cmpsb
fisubrs
inc
lret
adc
out
sub
loop
lea
leave
mov
jp
scas
mov
insb
cmpsl
dec
pushf
lods
mov
shll
mov
loope
and
cli
xchg
mov
cmc
cmp
test
adc
pop
call
push
and
jno
sub
sub
cmc
sti
push
test
fwait
lcall
jno
and
in
pop
inc
mov
fcomp
scas
cmp
outsb
mov
fisubl
dec
loopne
in
aam
mov
test
inc
pop
bound
push
mov
sbb
pop
les
aam
fisttps
push
ss
scas
mov
mov
std
jle
pop
push
mov
mov
es
push
insl
and
leave
das
inc
sbb
xor
sti
lcall
lods
insb
lea
iret
jp
jae
jns
mov
scas
and
and
movsb
fwait
xchg
mov
in
cmpsb
lcall
dec
leave
jb
adc
inc
stos
outsl
in
jnp
std
add
cmc
fiadds
out
ja
mov
cmp
scas
and
dec
cltd
sub
mov
orb
cltd
sub
and
sbb
mov
insl
lock
push
icebp
hlt
test
aas
add
repz
xchg
loope
fisttpl
mov
cld
ficoms
imul
rcl
call
pop
daa
mov
adc
and
mov
mov
dec
mov
call
inc
pop
dec
mov
or
add
outsb
setne
negb
in
lret
hlt
fwait
cmpsl
repz
dec
cmc
std
mov
inc
sbb
mov
jmp
rolb
push
jbe
sbb
pop
and
dec
jecxz
xor
js
push
inc
rorb
inc
cmp
cmp
ss
int3
sub
jl
mov
push
inc
add
out
stc
stos
rcll
lea
orl
insb
cltd
daa
cmpsb
cmp
fcoml
lcall
push
jecxz
inc
sub
jp
dec
je
mov
jmp
mov
and
lea
fisttps
in
in
jecxz
jmp
ja
and
add
dec
jns
inc
addr16
push
mov
jp
pop
mov
add
fnstsw
jecxz
jmp
inc
push
mov
cmp
icebp
inc
add
fstl
and
xchg
ret
test
cld
inc
xchg
test
clc
daa
pop
aas
adc
jecxz
xor
mov
xchg
pop
fildl
sar
in
inc
loope
out
mov
jle
jg
repz
stos
push
sub
test
stc
or
sub
lea
jno
or
add
fldl
jp
fimull
in
mov
mov
int3
push
pusha
cwtl
add
sbb
push
adc
jnp
jnp
xor
ret
enter
leave
shll
xor
movsb
and
push
out
mov
out
ja
adc
call
or
es
jnp
push
cltd
mov
or
insl
xor
inc
mov
cmp
mov
mov
hlt
movsl
cld
push
aas
clc
push
add
mov
add
jmp
arpl
aaa
cwtl
sbb
mov
stos
pop
imul
lahf
out
imul
ret
and
push
adc
cltd
ret
ret
mov
dec
in
add
rcll
add
xor
push
out
test
adc
mov
movsl
pushf
inc
xor
imul
mov
inc
jno
mov
dec
repz
lret
add
push
sbb
push
jecxz
mov
das
cmpl
push
pop
mov
pop
and
or
daa
in
xchg
sub
xor
into
sbb
jp
and
mov
stos
xchg
jne
cmpsl
jae,pn
out
sbb
xchg
cmpsb
imul
push
bound
mov
mov
dec
push
push
mov
and
daa
dec
adcb
dec
dec
jge
push
jae
fstpt
add
add
add
inc
cmp
mov
mov
popa
add
cs
cmp
xchg
cmp
xor
mov
sbb
cltd
or
or
leave
jp
jmp
adc
push
xchg
jno
pop
iretw
cwtl
sti
stos
cs
lahf
sbb
and
and
popf
dec
pop
jg
xorb
xor
or
xor
imul
les
loop
rol
sub
jo
lahf
xor
into
xor
loope
ficompl
mov
aad
xlat
out
js
pop
mov
pop
sub
add
sbb
cmp
repz
pop
xchg
mov
ds
lcall
pusha
mov
enter
testb
sbb
scas
aam
mov
mov
pop
icebp
dec
or
and
pushf
popa
jl
lea
cwtl
leave
mov
daa
subl
pushf
insb
xor
loope
add
into
hlt
push
xchg
or
or
lods
pop
aaa
pop
dec
jmp
jge
adcl
sub
push
xbegin
pop
jbe
test
test
lds
leave
faddl
adc
fs
cmp
int3
stc
push
ljmp
cmp
sub
lcall
cmp
dec
ret
fs
dec
repnz
lret
push
test
gs
push
rcll
shrb
sbb
fimuls
pop
push
jb
push
pop
jmp
fmuls
pushf
adc
ret
mov
add
xchg
notl
inc
mov
iret
shll
xchg
xor
dec
inc
scas
in
xchg
mov
mov
mov
mov
movsl
xor
fiadds
and
dec
stos
mov
iret
jmp
mov
mov
pop
mov
aad
jns
xchg
mov
cmp
dec
movsb
cwtl
mov
mov
jae
lahf
ds
fldcw
aad
ds
push
cld
loope
stc
or
mov
mov
adc
jnp
jo
push
cmpsb
mov
or
and
mov
mov
push
test
xchg
lahf
pop
jmp
es
inc
mov
mov
adc
in
fdivs
rolb
adc
lds
xchg
mov
stc
outsl
stos
push
sub
dec
pop
inc
adc
mov
in
or
adc
popf
xchg
sbb
lock
mov
sbb
xor
dec
js
mov
push
sub
xor
dec
jnp
jne
dec
fadds
popl
bswap
xlat
fadd
test
jo
test
push
sti
mov
jns
clc
stos
iret
es
add
pusha
cltd
jp
jp
mov
dec
jae
stos
in
mov
and
sub
lock
xor
mov
lcall
and
roll
shl
ret
add
int
mov
add
imul
iret
or
mov
inc
popf
mov
inc
push
dec
pop
jne
xlat
ja
icebp
rcll
jle
jmp
mov
pop
clc
clc
pop
insl
loop
in
lock
jbe
push
pop
fidivs
mov
cli
out
daa
jns
enter
int
inc
mov
shl
sbb
cmpsb
mov
lret
ds
dec
add
outsl
sti
cmc
cld
repnz
lea
pop
out
loope
mov
aad
mov
movsb
cmc
xor
lods
mov
push
sarl
adc
lea
sbb
dec
sbb
dec
xchg
sarl
dec
subl
dec
shlb
mov
loop
push
decb
mov
nop
jae
push
sbb
out
jns
dec
adc
cmpsb
arpl
cli
xchg
mov
ljmp
xchg
je
pop
pop
lahf
sbb
or
and
imull
lret
sbb
jbe
mov
rolb
xchg
cmpsl
jnp
inc
mov
jg
mov
and
adc
inc
mov
iret
push
lret
mov
push
mov
or
sbbl
in
jp
jg
shl
out
test
ficompl
dec
add
cmp
sub
insb
popa
sub
sbb
cmp
or
enter
orb
dec
dec
dec
sbb
sbbl
in
xlat
out
inc
push
imul
dec
mov
pop
xchg
stc
sarb
lods
rcl
repz
jb
inc
stos
dec
add
ficoms
cs
jg
out
sbb
aaa
fwait
sar
loop
add
adc
shll
leave
std
ja
push
es
dec
clc
push
adc
push
adc
jo
dec
jmp
stos
jb
push
fwait
das
push
push
bound
pop
rcr
cmp
cmp
test
inc
fimull
add
jnp
inc
cmp
leave
xchg
stos
mov
or
scas
jae
xorb
xchg
pop
or
jae
dec
orb
dec
dec
lret
rol
hlt
or
icebp
mov
mov
push
into
and
lret
xor
lret
xchg
or
cmp
mov
push
in
mov
or
sbb
sub
js
xchg
stos
sub
enter
sbb
jecxz
adc
out
inc
mov
push
sub
pusha
inc
pop
push
xlat
mov
iret
adc
aaa
lret
adc
iret
xor
lret
add
cmc
sahf
cmp
xchg
adc
cmp
push
ret
mov
ret
xchg
ljmp
lret
call
push
lock
mov
rcll
fstl
dec
cld
cs
lahf
dec
or
pop
repz
and
sub
insl
cmp
shlb
sbb
inc
mov
insl
dec
or
sahf
arpl
xchg
pop
lahf
dec
cmpsb
jnp
add
mov
fcmovnbe
bswap
jmp
jle
and
sub
pusha
bound
sbb
adc
outsl
addl
imul
dec
insl
fstps
xor
in
or
test
fcmovnu
cmp
and
add
fwait
std
orl
cmpsl
sahf
sbb
mul
jbe
fldl
lcall
sub
cwtl
sti
pushf
lret
lea
insb
push
mov
mov
aaa
adc
push
test
pushf
or
xor
test
lds
ja
push
xchg
sbb
add
aad
jo
mov
jnp
inc
lret
mov
push
cld
xor
mov
scas
mov
dec
sub
xchg
pop
adc
jns
fisubl
lods
sbb
cs
pop
insb
imul
leave
push
inc
xor
pop
mov
rclb
movsb
pop
les
mov
mov
push
adc
or
imul
rorl
push
out
push
mov
arpl
leave
in
push
xor
jle
stos
je
adc
sbbl
inc
pop
cmpsb
orl
push
fwait
hlt
jnp
or
das
add
pop
in
popf
js
aas
jle
sahf
xor
iret
in
lods
mov
sbb
mov
in
inc
sarl
lds
jb
pop
sub
add
into
out
mov
jns
movsl
addl
inc
pop
xor
adc
test
push
or
push
mov
lret
dec
mov
andl
fmuls
pop
add
mov
out
mov
mov
mov
dec
and
jp
test
sbb
loop
xorb
add
or
inc
addr16
dec
add
mov
add
das
mov
lret
xchg
fisttpll
clc
test
lea
aas
loopne
test
pusha
adc
jl
test
mov
ficoms
adc
mov
minps
cli
cmpsl
sbb
or
mov
aaa
mov
xor
push
lret
sub
dec
mov
sub
std
mulb
or
rcrl
idivl
pop
dec
jae
mov
data16
sub
jns
inc
and
jl
sbb
push
nop
popf
aas
into
cmp
add
pop
sub
cltd
add
lahf
add
aam
inc
stos
insl
pop
mov
adc
push
addr16
xchg
jnp
scas
jg
fsubrs
cmp
push
cwtl
jno
cmp
fldenv
or
cmp
dec
shrd
mov
xchg
mov
fisubs
adc
scas
sub
jmp
inc
mov
inc
mov
lock
or
cmc
xor
ss
or
or
jge
insl
out
ror
add
xor
ds
dec
adc
mov
dec
lret
push
fyl2xp1
fs
pop
push
andl
and
ss
push
sub
sbb
mov
xor
loope
andl
lahf
shll
adc
dec
arpl
jns
or
ds
jmp
and
dec
xchg
shrl
push
inc
xlat
or
ret
push
xor
xchg
adc
mov
ljmp
js
in
add
push
data16
test
mov
cltd
push
fmuls
xor
push
sbb
jge
dec
popf
xchg
jo
mov
mov
jp
enter
stc
and
enter
aam
dec
push
lahf
push
in
imul
mov
loope
nop
cmp
push
mov
cmpsb
jle
sbb
loopne
out
out
rclb
adc
dec
push
and
bound
test
jp
out
add
js
adcl
in
mov
jecxz
add
int3
fstl
inc
aad
sub
test
ret
popf
sub
xchg
fstpl
xor
mov
cmp
pop
in
or
mov
repz
scas
arpl
inc
sahf
mov
fstpt
cli
push
pop
leave
jnp
adc
mov
pop
sti
cli
adc
cmp
testb
test
jnp
inc
xchg
push
xchg
int
xchg
add
sbb
rclb
xor
sbb
dec
or
xchg
aaa
pusha
testl
dec
mov
sti
jbe
xchg
add
jbe
enter
adc
or
es
push
cmp
and
in
sbb
add
mov
sti
push
adc
imul
fldcw
dec
data16
repnz
cld
addl
sub
ret
pop
mov
pushf
nop
mov
or
xlat
fadd
jae
mov
ja
jne
jge
fstpl
push
xchg
xlat
cmpsb
sub
insb
inc
cmp
dec
xchg
inc
and
sub
mov
jns
jno
sub
js
xor
xchg
or
roll
std
inc
jno
add
cmp
outsl
lret
lcall
lahf
inc
or
add
nop
or
fsubl
add
pop
push
lea
pop
add
jnp
pop
lds
sbbl
rorb
and
push
mov
mov
das
movsb
sbbb
aam
loop
mov
inc
pop
jmp
arpl
std
aaa
mov
gs
xchg
stc
jg
es
push
inc
lret
cmpl
fwait
test
add
xchg
adc
pop
out
jo
sub
push
out
mov
repnz
or
or
in
adc
call
adc
adc
mov
pop
dec
rep
in
out
mov
jae
sarb
mov
push
cmc
pop
lret
or
pushf
icebp
and
pushf
sahf
jo
pop
cs
jnp
mov
cmp
ss
scas
xchg
push
popf
xchg
incl
mov
dec
pop
rorl
cmp
mov
jbe
add
adc
cmp
fwait
jb
pop
push
std
xchg
sbb
xlat
jb
and
pop
rclb
lea
sahf
lea
subl
lret
arpl
cmp
ljmp
push
lods
hlt
jmp
mov
cmpps
mov
push
or
fs
mov
push
scas
mov
xor
push
ljmp
mov
imul
pusha
and
add
push
mov
movsl
mov
cltd
leave
cmp
cmpsl
or
mov
call
jo
inc
pusha
mov
sbb
mov
addb
mov
lret
mov
xor
cmp
xchg
sbb
sahf
cmp
sub
test
sub
and
sub
imul
push
mov
jnp
jecxz
pop
xlat
and
stc
insb
inc
or
inc
push
fiaddl
or
mov
sqrtps
int3
mov
bound
int3
push
es
mov
jns
aaa
or
gs
push
adc
xorb
inc
lods
mov
dec
cmpsl
mov
out
ficoml
pushf
xor
fstp
add
and
xor
add
ss
pop
xchg
lret
out
jle
jp
test
bound
sbb
imul
movsl
call
add
clc
das
push
mov
mov
mov
or
mov
add
movsb
test
sbb
pop
mov
cmpb
mov
cmp
loope
jno
imul
dec
lahf
cli
in
jbe
or
fwait
mov
add
pop
jae
sar
hlt
add
push
call
stc
mov
adc
icebp
fdivs
cmpsb
push
in
jae
js
ja
loope
push
jl
dec
add
ja
imul
rolb
add
adc
in
mov
xchg
gs
sbbb
pop
mov
loopne
or
bound
imul
jp
das
mov
loop
std
dec
pop
cmpsb
clc
test
shll
nop
jp
sbb
aas
loopne
sub
inc
xchg
inc
push
enter
lret
push
cmpsb
std
pop
out
outsb
push
push
dec
push
inc
nop
in
pusha
push
fisttpll
mov
test
add
int3
mov
sub
lds
cs
fmuls
je
repnz
pop
call
fisubs
xor
adc
cmpsl
mov
cmp
cmp
test
sbb
jbe
test
sbb
lods
ljmp
popf
add
mov
add
inc
sbb
mov
imul
or
jbe
inc
or
jnp
mov
dec
mov
insb
enter
xchg
aas
loope
ljmp
and
and
mov
pusha
lret
mov
incl
add
shl
and
popf
aad
fstl
dec
out
cmp
inc
xchg
adc
fwait
push
jecxz
je
mov
fnsave
push
imul
ret
shlb
adc
jmp
push
stos
push
imul
lea
pop
cmp
jbe
je
imul
jle
jo
adc
insl
int3
sub
fsubl
adc
int
call
sahf
int
adcl
test
into
mov
push
and
cmp
adc
in
mov
std
sub
sbbb
mov
xchg
movsl
fdivrs
test
icebp
hlt
inc
fsts
imul
pop
xchg
xchg
test
push
dec
mov
mov
inc
daa
cmpsl
push
loope
cwtl
xchg
jecxz
cmp
push
shll
daa
pusha
aam
data16
loopne
or
iret
lahf
out
je
shll
mov
mov
or
jnp
movntq
out
adc
icebp
lret
out
movsb
fsts
jae
mov
adc
sub
negb
jo
pusha
negb
scas
push
pop
mov
data16
jb
mov
mov
xchg
das
inc
ss
inc
movsb
and
loopne
mov
xor
stos
xor
clc
les
mov
add
dec
fs
stos
ja
or
fucom
cmp
dec
jb
out
push
jg
cmpsl
jbe
fistpl
mov
cmc
mulb
lock
pop
mov
popf
pop
out
insb
sub
xor
imul
mov
xchg
push
sbb
in
push
mov
leave
jge
sbb
lret
xchg
mov
int
xor
out
and
xchg
sbb
aaa
orb
lods
mov
dec
xor
mov
arpl
sub
cwtl
ljmp
mov
push
cmp
add
mov
push
stos
lods
add
add
je
sbb
or
out
fcoml
push
adcl
mov
imul
inc
out
hlt
aas
inc
fldt
xchg
fcompl
dec
dec
fcomp
notl
and
movsb
ljmp
mov
sbb
ret
pop
xchg
insl
sbb
push
and
xor
data16
jmp
xchg
pminub
lahf
cmc
push
test
push
cmp
rolb
mov
add
dec
int3
dec
push
lds
mov
sub
lret
adc
ss
lods
add
dec
subb
pushf
cli
dec
mov
xchg
adc
ljmp
push
lock
popa
mov
loop
mov
jne
cmpsb
pop
int
imul
out
popl
hlt
aaa
lcall
cmp
and
pop
add
jno
mov
dec
jge
mov
add
cld
jbe
mov
movsl
mov
pusha
xorl
mov
aaa
xchg
and
cmovs
decl
xorb
repz
stos
rorb
push
in
mov
fs
arpl
aad
das
dec
cmp
sti
fistpl
push
dec
dec
pushf
popa
push
ret
inc
sar
iret
call
loopne
arpl
xchg
sti
test
xchg
aad
sub
xchg
rol
outsl
mov
and
mov
mov
or
in
jne
xor
lret
xor
pop
test
aas
dec
ss
sahf
divb
xchg
lds
pop
xchg
lret
jg
imul
cmp
inc
add
lea
pop
inc
mov
into
jecxz
and
xchg
push
les
ljmp
xor
add
ret
sub
shlb
mov
adc
xchg
add
scas
mov
jge
mov
mov
bound
or
push
adc
push
repnz
xor
adc
mov
and
arpl
dec
leave
jae
js
jae
adc
xor
push
jns
or
dec
cmp
pop
xor
aam
dec
or
scas
push
cwtl
cmc
dec
loopne
mov
clc
xchg
mov
mov
dec
test
mov
mov
data16
ja
xchg
shll
incl
xchg
push
sub
std
dec
sbb
jo
mov
or
mov
or
jne
das
les
sub
fcoml
or
dec
in
or
cmp
push
xchg
aaa
pop
push
stos
loop
std
ja
pop
movsl
jmp
sub
xchg
ret
pop
xchg
mov
cmpsb
imul
dec
adc
rolb
mov
mov
jl
lea
jmp
mov
add
add
mov
aad
push
sub
jl
adc
cmpsl
push
jl
jae
call
inc
ljmp
int3
in
dec
lock
push
and
pop
pushf
aas
push
or
jmp
xchg
push
test
push
fidivs
mov
dec
lods
xchg
aad
fistps
add
inc
test
stc
pop
and
dec
sbb
movsl
pusha
mov
jb
xchg
idiv
inc
ljmp
cmp
test
jg
fildl
xchg
sub
icebp
cmpsl
js
push
lcall
sahf
mov
mov
nop
in
ret
push
ret
aam
mov
pusha
movsl
xchg
push
cmp
sti
ss
mov
jmp
mov
hlt
add
sbb
in
xchg
adc
lret
repnz
pop
mov
icebp
inc
imul
cltd
ss
rolb
push
icebp
pop
bound
aas
mov
and
cmp
fstl
push
lret
shll
popa
hlt
out
push
sbb
fs
movsl
adc
jecxz
add
adc
mov
jl
dec
cltd
xchg
in
sahf
mov
stos
xchg
push
pushf
fs
inc
bswap
inc
popa
shl
push
jnp
xchg
movl
mov
pop
mov
lods
insb
rolb
out
and
test
cvtdq2ps
xor
xor
sub
lods
cmp
push
iret
lock
dec
xchg
sbb
fcmovnu
loope
push
xchg
stos
jle
or
or
sbb
out
jecxz
xchg
lcall
push
inc
xchg
out
fldt
lcall
mov
dec
lahf
in
call
sbb
mov
push
jp
cmp
lods
nop
lret
jle,pn
stc
xchg
mov
and
and
xor
dec
cld
push
cli
addr16
add
mov
or
mov
das
inc
lods
xor
mov
dec
add
enter
pop
sub
cmp
mov
inc
inc
inc
rcrl
lea
test
daa
sub
adc
jo
mov
dec
or
loopne
jge
pop
cltd
push
into
repz
aad
sar
enter
xchg
sub
sbb
mov
push
pop
or
stc
int
sub
jb
xorb
lahf
bound
leave
stos
inc
clc
adcl
mov
ja
imul
or
adc
push
cmp
nop
loopne
and
and
sbb
mov
adcl
add
pop
ret
mov
mov
idivb
pushf
aam
xchg
push
pop
mov
xorb
data16
cmp
and
es
xor
imul
ja
mov
push
push
or
cmc
and
xor
mov
sar
lods
add
mov
push
sbb
rclb
add
sbb
out
lcall
in
sbb
mov
jnp
or
mov
int3
cltd
xchg
mov
stos
cmpb
in
pusha
outsl
add
jns
mov
or
pop
mov
mov
fwait
mov
cltd
popa
gs
out
jne
shll
imul
sbb
push
lea
mov
mov
and
mov
outsl
subl
loop
and
shll
mov
mov
add
push
sbb
xchg
arpl
mov
mov
mov
test
stc
mov
adc
mov
and
das
ss
and
inc
xor
inc
cmovne
fs
imul
sub
xchg
push
mov
mov
cwtl
fiaddl
test
pop
call
dec
mov
cmp
xor
in
add
sub
into
ret
jp
fstpt
gs
mov
sub
jmp
movsl
or
ljmp
pop
in
outsl
inc
sarl
cmp
adc
aas
ds
mov
fs
fcoml
out
into
mov
rcrb
mov
inc
loop
mov
test
popf
push
mov
dec
hlt
and
loop
subb
inc
xchg
dec
stc
xchg
sub
lret
arpl
in
icebp
mov
movsb
fmull
testb
hlt
xlat
add
xor
adcl
into
mov
push
stos
stc
decb
ret
insl
adc
push
sbb
in
dec
push
mov
mov
adc
pop
subl
cmpsb
pop
inc
xchg
clc
mov
ss
inc
outsb
push
js
push
sbb
lock
ds
daa
cwtl
add
mov
push
jo
fsubl
mov
or
and
inc
sub
popf
lock
jb
xchg
lods
jno
sub
leave
aam
mov
jmp
dec
push
sti
push
push
cmp
cmp
popa
dec
and
repnz
lods
xor
xchg
add
xor
scas
push
mov
ds
call
xchg
or
lods
dec
xlat
ss
adc
xlat
push
jecxz
lret
jns
pop
icebp
out
ss
jg
jmp
or
fmul
leave
faddl
outsl
add
or
push
jl
push
fwait
add
mov
fwait
lods
std
aam
push
mov
insb
push
push
fwait
popa
sbb
or
mov
push
outsb
lcall
ds
cmpsb
xchg
rcrb
mov
dec
sbb
aam
sub
lret
mov
dec
or
xchg
mov
jl
enter
jae
dec
mov
out
subb
out
outsb
sbb
mov
mov
xor
or
mov
mov
icebp
pop
xor
and
and
icebp
mov
mov
out
sbb
adc
mov
insl
fdivrs
push
sbb
jne
mov
shlb
xchg
icebp
aaa
cld
or
mov
repz
push
in
mov
mov
inc
jl
iret
xchg
pop
xor
inc
dec
div
decl
pop
jl
push
pop
dec
adc
into
xor
lahf
xchg
and
sub
call
pop
cli
mov
sarl
lret
loopne
adc
lret
popl
sub
sub
xchg
aas
inc
mov
mov
inc
mov
cmpsl
push
push
or
imul
lcall
mov
inc
or
xchg
add
mov
les
cmovl
xchg
sbb
pop
jo
pop
and
xchg
cmp
fnsave
sbb
dec
sahf
sahf
or
xor
cmp
clc
jmp
adc
push
lods
mov
cmpsl
clc
sub
or
jp
aam
cltd
jp
imul
rol
mov
jl
adc
out
adc
loope
sbb
sti
fsub
adc
adc
jecxz
adc
sub
xchg
jae
mov
fnstenv
inc
xchg
jecxz
mov
cltd
clc
cmc
dec
dec
mov
sbb
pusha
call
js
dec
lea
mov
sbb
cwtl
aad
mov
xor
push
int
mov
pop
not
add
add
shrb
rcrl
lcall
jmp
xchg
mov
mov
mov
lods
or
test
push
sbb
adc
mov
dec
rcll
ret
lret
pop
daa
inc
xchg
dec
push
popf
push
xor
pop
xchg
dec
and
jl
xor
shr
idivl
dec
sbb
ss
jnp
shlb
or
pop
ljmp
fs
add
fistl
xchg
mov
and
push
pop
cli
stc
out
pop
pop
jb
mov
popa
sbb
xor
xchg
dec
add
sub
pop
js
xchg
adc
jns
sub
inc
jne
es
xor
mov
imul
out
outsb
lods
movsl
xchg
jnp
popf
adc
pop
mov
xor
cmp
int
stos
xlat
out
ss
rol
pop
jnp
adc
test
iret
sbb
pop
pop
sub
insb
leave
inc
jbe
movsl
testb
test
out
sbb
sub
in
scas
imulb
mov
cmp
jmp
inc
insl
bound
aam
cmp
adc
push
adc
sub
and
shl
cli
faddp
fsubrl
xchg
mov
sub
fs
int
jmp
xchg
xor
mov
fs
das
push
and
fwait
das
bound
adcl
iret
inc
xor
ljmp
in
addr16
push
cmp
ss
sub
stc
aad
xchg
jne
pushl
loope
sbb
in
push
in
inc
mov
sti
pop
push
repz
cltd
daa
jg
rorb
js
or
inc
inc
insl
mov
das
lea
or
xor
cwtl
mov
cltd
and
xchg
enter
imul
gs
sub
lds
jne
xchg
mov
cmp
push
mov
sbb
icebp
fnsave
popa
and
mov
sbb
add
int
loopne
loope
jp
fwait
add
in
movsl
ja
pop
dec
dec
and
int
push
cmp
arpl
push
push
imul
sub
jbe
loopne
popf
jae
xchg
call
in
in
push
dec
xchg
lock
xchg
mov
xor
jl
in
cmp
repz
dec
dec
sbb
shrl
cmp
xor
test
idivb
push
faddp
jb
inc
sub
faddl
dec
into
outsl
mov
push
out
inc
lret
cli
je
popf
xchg
cltd
or
aad
xor
lods
mov
adc
adc
jl
add
inc
int3
mov
push
ds
and
iret
sbbb
mov
fisubrl
inc
js
jg
lahf
push
add
cmp
sbb
add
sub
sbb
pushf
pop
and
aam
sbb
outsb
push
pop
sti
out
lea
mov
out
in
xor
sub
sbb
push
pop
adc
xchg
call
xchg
or
outsl
sbb
or
dec
mov
push
fidivrl
or
and
jo
push
mov
pop
ss
int3
adc
mov
sbb
push
jg
add
mov
in
mov
jle
ds
sub
jb
jg
cmpsl
ja
xchg
fmull
xchg
fcmovnu
movsl
dec
mov
sbb
iret
fcompl
lea
xor
xchg
pop
cmp
pushf
jmp
xchg
jae
mov
lods
mov
shl
or
cmpsl
jae
push
lods
popa
or
push
jns
mov
sti
dec
jecxz
aam
insb
iret
sub
negb
aaa
jns
imul
popf
jmp
xchg
int
add
fdivrs
pop
inc
adc
lea
js
lret
pop
pop
inc
pop
cli
xchg
xchg
and
mov
pop
and
test
ljmp
jae
dec
pop
out
mov
test
pop
push
or
mov
stos
sub
dec
dec
xchg
mov
xchg
mov
xor
out
ret
loopne
das
sarb
xchg
mov
xor
push
imul
cmp
push
xchg
xor
pop
cmp
fs
xor
shll
dec
pop
out
es
xor
xor
pop
sbb
sub
add
loop
cwtl
movq
jg
xchg
rcr
jmp
jns
popf
lahf
mov
daa
imul
out
inc
and
jne
and
and
inc
dec
jo
and
adc
bound
xor
lret
repnz
sub
inc
mov
aaa
fstpt
nop
mov
addl
fnstcw
xor
sbb
scas
mov
jnp
sub
mov
sbb
mov
pop
jns
scas
fmuls
pusha
jecxz
je
scas
fsts
adc
and
out
loopne
imul
lahf
push
lock
dec
ret
sbb
xor
xchg
mov
cmp
mov
imul
cmp
into
daa
pop
jns
mov
mov
adc
roll
loopne
neg
mov
push
pushf
mov
cmp
fwait
or
rclb
dec
notl
mov
mov
aas
dec
sbb
push
leave
mov
pop
jnp
mov
aaa
cmp
out
sub
dec
fcomps
ss
mov
jge
pop
inc
icebp
aas
cmp
mov
adc
adc
data16
mov
scas
xchg
lods
adc
insl
arpl
xor
push
int
shrb
sbb
push
int3
sbb
sub
and
jbe
mov
mov
lea
outsb
das
inc
test
mov
sahf
cmpsl
jb
movsl
push
fs
notl
shlb
lcall
adc
and
aam
mov
lret
shrl
ret
lret
dec
and
decl
aaa
outsb
sub
loop
fidivl
sub
mov
xlat
out
cld
sbb
clc
xor
mov
push
repz
pop
loopne
mov
or
out
push
mov
xchg
repz
jl
dec
fiadds
sbb
sarl
or
cmp
popa
xor
mov
imul
cltd
stos
mov
pop
rorb
imul
and
add
jl
ds
hlt
divl
xchg
in
sbb
daa
mov
inc
aas
jle
sub
bnd
out
or
ret
stos
cmpl
mov
std
adc
adc
ljmp
or
pop
xchg
and
or
sbb
shr
lock
in
cmpl
arpl
mov
push
out
sub
xchg
inc
jge
jmp
jns
pop
fwait
icebp
inc
jmp
inc
mull
lahf
cli
fimuls
add
loope
mov
mov
imull
sub
cld
gs
lret
sbb
jmp
and
lcall
sub
cwtl
lea
jl
mov
mov
out
daa
or
pop
ljmp
mov
pop
data16
cltd
mov
jb
sub
jo
push
add
xlat
fdivl
push
int3
and
xchg
jp
add
xlat
imulb
lret
mov
nop
lret
dec
mov
and
bound
jae
cmp
push
push
pusha
lcall
mov
outsb
lea
lret
cmpsl
or
out
pop
cmpsb
cmp
cli
jne
xor
das
stc
sbb
negl
dec
into
gs
mov
inc
insb
or
xlat
dec
push
popa
fsubs
scas
sahf
cmpsb
clc
cmp
mov
movsb
notl
push
sarb
sub
lds
adc
mov
addr16
mov
repnz
mov
call
add
dec
fstpt
inc
into
in
mov
int
fwait
daa
inc
or
pushf
aam
cmp
lea
clc
push
jo
dec
mov
jbe
popf
stos
leave
and
lcall
or
and
addr16
ja
into
nop
sub
dec
push
pop
test
mov
mov
and
mov
sbb
sub
cli
mov
pop
dec
add
dec
lds
add
repz
xor
movl
js
cmp
mov
mov
fnsave
leave
in
jae
xchg
incb
add
loope
inc
add
pop
repz
sub
addr16
cmp
cmc
aam
pop
sbb
jne
out
cmpb
es
mov
mov
imul
adc
lret
sahf
xchg
dec
sbb
shr
cld
popa
test
ja
das
adc
jbe
cs
push
pop
cmpsb
in
call
lret
push
fidivs
push
jns
pop
dec
and
mov
stos
stos
test
xchg
mov
xchg
inc
dec
or
ret
in
jo
push
pop
push
add
jl,pt
push
mov
cmp
or
cmp
sub
mov
dec
sbb
js
xor
out
inc
inc
xor
shrl
sarl
or
roll
pop
mov
xlat
popf
and
pop
mov
insb
popf
cmp
cltd
jnp
adc
test
pop
test
push
dec
xor
lods
xor
xchg
shll
xchg
adc
xor
cld
inc
test
out
or
adc
push
data16
mov
enter
push
hlt
jmp
xchg
and
stc
sbb
je
push
adc
and
pushf
dec
scas
mov
nop
rorb
rcll
sub
jbe
fstp
pusha
fwait
insb
adc
sbbl
and
push
or
xchg
js
dec
xchg
mov
rorl
roll
idivb
jno
dec
push
test
scas
cmp
scas
xchg
in
fcompl
pusha
dec
or
jl
mov
lods
ret
out
dec
push
leave
sub
push
iret
orl
inc
loopne
in
shlb
cld
pop
in
ds
fsubr
imul
dec
xchg
addl
mov
xchg
mov
pop
and
adc
or
push
daa
dec
jl
sub
sbb
push
in
xor
lods
xor
mov
inc
test
jne
mov
loop
inc
clc
dec
scas
outsb
repnz
cmpsl
int3
sti
inc
imul
aas
dec
popf
movsb
aas
pop
inc
jb
cmp
lods
ss
sti
divl
pop
mov
sbb
lds
ja
mov
loope
add
cmp
scas
mov
cwtl
int
sub
jp
sub
cli
dec
push
xchg
jnp
jbe,pn
mov
add
nop
stos
adc
push
xchg
inc
add
mov
add
add
aas
mov
shl
bound
in
mov
mov
ljmp
inc
xchg
mov
push
sub
sarl
jno
stos
mull
dec
filds
idiv
jbe
jbe
in
fsts
pop
dec
sbb
or
mov
lods
leave
cmp
scas
decl
dec
inc
xchg
pop
stos
pushf
xor
dec
and
les
lret
pop
in
xor
popa
inc
mov
enter
mov
sbb
mov
scas
std
fcom
mov
xor
divl
out
ret
in
sbb
add
cli
mov
jo
push
ja
lret
aas
mov
repnz
pop
dec
dec
add
movsl
pusha
pop
rcl
inc
sarl
gs
push
aam
inc
mov
hlt
xchg
xor
push
adc
mov
repz
data16
pushf
or
icebp
inc
call
xchg
repnz
inc
dec
popa
xor
fildll
in
sbb
mov
rcl
movsb
sbbb
fs
out
in
decb
aad
iret
adc
add
packuswb
or
stos
sbb
aad
test
xor
popa
xor
jmp
add
lods
rcrb
adc
repnz
xchg
rolb
sbb
lds
mov
xorb
je
sub
and
mov
pop
xor
inc
imul
push
jnp
popf
insb
ljmp
jae
test
sub
lret
stos
or
into
popf
mov
mov
rclb
xchg
shr
mov
je
xor
cld
push
cmpsl
mov
fcoms
xchg
shlb
adc
push
and
and
sub
lahf
mov
pop
pop
jg
sub
test
push
test
data16
mov
xchg
dec
in
lahf
xchg
mov
and
jae
insl
push
mov
dec
and
inc
mov
mov
sub
cmc
push
aaa
jmp
sub
mov
mov
dec
mov
rolb
add
mov
cmp
pop
push
outsl
lea
pop
dec
dec
ret
lods
pop
gs
sbb
int
lcall
aas
pop
mov
mov
xchg
rcrl
pop
add
in
jge
jno
mov
icebp
jge
xchg
mov
adc
aad
int3
lock
gs
sbb
scas
and
aas
mov
popf
out
fdivr
lahf
bound
pushf
aaa
adc
xchg
push
repnz
dec
cmpsl
sbb
clc
pop
pusha
popf
daa
lret
stos
shlb
sub
movb
rcrl
inc
in
mov
popf
jne
xor
scas
imul
mov
xor
xor
daa
ficompl
pop
push
int3
pusha
lea
cld
fstpl
push
jb
lea
pusha
ljmp
test
loop
mov
roll
negl
int3
insb
sbb
roll
and
pop
movsb
leave
pop
icebp
pushl
hlt
mov
out
and
adc
pop
push
call
mov
stos
sbb
cmpb
scas
xor
and
sbb
out
fsts
sbb
int
xchg
data16
xchg
sub
mov
sbb
xor
mov
push
cmpsl
cmc
adc
dec
scas
inc
sub
loopne
imul
ficompl
jmp
dec
pop
mov
sub
jg
jnp
inc
lret
pop
jg
out
inc
shll
jno
xchg
cli
out
mov
repz
and
je
imul
cmp
in
jns
mov
sti
inc
xor
fdivrp
push
hlt
pop
into
in
ds
in
lock
cmpsb
call
mov
cltd
fnstsw
jle
cmp
push
hlt
mov
mov
mov
jae
test
inc
js
lea
shlb
outsb
fistl
stos
out
xor
in
inc
and
xlat
jnp
sub
push
fistl
jne
mov
ret
and
adc
cmp
mov
clc
nop
rorb
mov
sbb
sbb
mov
mov
xchg
push
pushf
lret
aaa
out
mov
mov
mov
fbstp
fs
clc
adc
mov
pop
sbbb
movsb
les
mov
jns
pusha
in
mov
out
aam
add
enter
push
test
es
sbb
mov
mov
aas
xor
xlat
lret
xchg
jno
enter
inc
mov
xlat
adc
jbe
test
shl
push
enter
lret
ljmp
xchg
fsts
insl
in
out
stos
pop
inc
add
sub
inc
aaa
inc
dec
inc
inc
lds
adc
mov
xchg
bound
sbb
icebp
push
sbb
jge
movl
movsb
mov
mov
cmc
jmp
negl
leave
jb
ljmp
sub
pop
xchg
stos
ds
pop
mov
subb
iret
mov
imull
shlb
in
jne
jge
in
ljmp
jge
lret
and
inc
push
mov
nop
movl
stos
int
out
xchg
xor
call
adc
push
mov
fwait
enter
mov
inc
mov
mov
lret
orl
fimuls
cmp
sub
sub
mov
mov
jge
push
mov
cwtl
popf
dec
xchg
sbb
cwtl
mov
adc
inc
aad
push
push
and
adc
ja
div
cmc
subb
inc
fisttpll
das
in
xchg
inc
insl
fwait
add
test
cmc
test
into
out
jmp
out
sbb
adcb
addb
mov
in
sti
xor
jl
cmp
subl
mov
mov
into
out
xor
pop
mov
test
xchg
stc
rcll
and
jp
push
fcmovnb
out
aaa
cmp
lock
xor
inc
loopne
pop
sbb
and
lds
out
sub
int3
or
sub
push
scas
in
sub
xchg
sahf
xor
sbb
adc
adc
mov
push
sbb
dec
mov
rcr
sub
xor
jno
pushf
pushf
data16
mov
push
push
cmpsl
mov
mov
mov
xor
fadds
jle
sub
out
pushf
stos
push
loopne
stc
das
mov
ficoml
jge
imul
jp
scas
xlat
push
insb
adc
enter
jl
pop
imul
testb
ljmp
cmp
lea
push
cmp
loope
pop
xchg
std
xchg
repz
sub
xchg
shl
stos
mov
xorb
and
and
outsb
jbe
lea
lcall
sub
repnz
push
push
cs
push
mov
mov
add
sahf
lock
movl
loope
insl
push
insl
out
adc
push
ds
jb
fdivrl
popf
aam
orb
dec
mov
test
test
bound
bnd
push
jmp
cli
mov
xchg
test
xorl
cmpsl
lret
dec
subl
addr16
insb
lahf
stos
jnp
movsb
inc
mov
xchg
fisttpll
cld
stos
inc
mov
fs
pusha
inc
mov
and
scas
mov
pop
test
cmp
cmp
not
lods
aad
cld
call
inc
xchg
inc
dec
loope
cmpsl
mov
xor
mov
adc
mov
lahf
or
jne
popa
adc
sub
mov
xchg
cltd
je
pop
pusha
push
mov
push
jp
test
mov
mov
lds
lahf
push
sbb
jl
sbb
pop
push
pop
shrl
ror
dec
adc
cltd
insl
mov
lret
jecxz
sbb
testb
aaa
adc
push
dec
jae
cmp
jle
mov
nop
scas
push
ljmp
ret
addb
scas
cmp
stos
sbb
popf
jg
and
add
add
mov
cltd
mov
fs
cmp
mov
mov
cli
mov
addr16
mov
pusha
xor
mov
cmp
dec
mov
std
mov
fxam
sbb
icebp
addr16
mov
shrb
out
rorb
or
push
rcrb
incb
pop
int3
cmp
shl
test
mov
push
lods
aaa
push
insb
cmp
inc
dec
xor
sbb
outsl
push
rcrl
pop
xlat
sarb
xchg
or
bound
cmp
inc
sti
adc
mov
outsl
jp
jl
jns
lods
sbb
push
push
andl
push
insl
dec
ret
sbb
lret
push
or
movsl
enter
inc
sbb
in
sub
pop
pop
add
lret
add
mov
jno
jecxz
aas
sub
inc
add
pop
mov
xchg
add
outsb
mov
jecxz
add
xchg
fs
adcb
xchg
lds
test
inc
mov
lcall
cs
loope
and
push
push
and
or
mov
movsb
fbstp
xchg
mov
fsubrs
lcall
aam
add
int3
rclb
test
std
push
mov
dec
int3
push
outsb
cmp
inc
bswap
sub
mov
inc
dec
test
addr16
jmp
mov
fistps
mov
mov
int
call
adc
add
dec
inc
mov
lods
mov
or
iret
add
and
nop
ret
addr16
sbb
push
inc
pop
sbb
das
cmpsb
push
xor
out
fwait
dec
mov
adc
je
popa
fwait
scas
adc
xchg
je
loop
rclb
fstps
cld
andb
enter
nop
push
stos
dec
inc
inc
imul
push
loope
sbb
hlt
dec
adc
pop
f2xm1
divl
sub
pop
or
add
xchg
movl
data16
loop
inc
mov
in
ror
nop
cvttps2pi
inc
daa
rcll
aas
lcall
data16
push
sbb
lds
mov
fsubrs
add
faddl
pop
push
std
rolb
lcall
dec
jnp
daa
sbb
sub
jo
pop
dec
xchg
idivl
and
cmp
roll
imul
insb
mov
xchg
xor
andb
into
mov
js
fstpl
jns
insl
pop
xlat
jb
and
xor
cmpsl
inc
or
xchg
or
in
jns
es
icebp
mov
mov
roll
jo
repnz
push
add
pop
cwtl
mov
add
shll
dec
xchg
cwtl
lret
cltd
insl
xor
popf
je
jno
dec
and
push
and
pushf
in
inc
aaa
jl
and
subb
adc
outsb
lahf
aam
mul
push
jmp
jl
pop
cwtl
fildll
push
insb
ret
cs
das
sbb
into
icebp
mov
jl
dec
int3
inc
lea
mov
cmp
cmp
mov
xchg
faddl
mov
lods
push
mov
pop
mov
xchg
fsubp
and
mov
je
mov
loope
rcrl
cmc
jne
data16
and
and
mov
mov
in
jne
dec
repnz
subl
cs
hlt
push
pop
dec
fsubrl
cs
sbb
cld
jae
dec
addb
pop
mov
dec
adc
in
ljmp
or
sub
pop
mov
stc
lret
outsl
loope
outsl
pop
lods
or
pop
xchg
add
icebp
scas
jge
add
mov
arpl
int3
dec
lcall
aam
jge
mov
cld
jle
incl
test
cmp
xchg
ss
sub
jl
int
sbb
dec
push
jae
adc
lret
lahf
insl
push
add
in
mov
push
push
jp
cmpsl
push
pop
loopne
lret
jne
mov
call
int
pop
ret
out
sbb
shl
imul
sbb
imul
iret
pusha
cmp
add
loopne
cmpsl
repz
adc
mov
scas
mov
add
mov
into
mov
popf
imul
outsl
scas
out
add
ficoms
pop
jge
lret
add
cmp
pop
push
jns
mov
dec
jnp
in
mov
jg
adc
cmp
mov
sub
or
fistpll
dec
sub
iret
addr16
dec
mov
addr16
ret
xor
mov
jle
mov
leave
add
dec
fwait
lar
mov
mov
sahf
mov
dec
xor
and
inc
data16
sbb
pop
xor
xchg
icebp
shlb
jbe
push
jmp
sahf
push
and
mov
pop
xchg
out
pop
stos
push
dec
int3
outsl
sbb
xor
es
inc
fwait
mov
jnp
jl
lods
or
mov
ja
mov
ja,pn
mov
cmpsl
inc
lret
dec
pusha
in
jp
xchg
pop
in
jb
pop
xchg
pop
je
rorb
mov
es
lret
jge
sub
jecxz
adc
je
sti
rcll
pushf
inc
filds
lahf
sbb
imul
jns
jl
loope
pop
cmp
pop
daa
sbb
cmp
jo
pop
pop
data16
lock
scas
adc
aas
in
insb
xor
test
mov
popa
roll
call
out
js
gs
cmpsl
mov
and
push
jno
cmp
lea
ljmp
sub
or
sbb
jae
das
cs
mov
mov
sub
stos
mov
fs
sub
imul
or
mov
ret
mov
mov
loop
inc
jo
scas
xchg
outsb
jl
or
jae
repz
data16
adcb
xchg
mov
leave
pop
sahf
xor
sub
xchg
push
int
pop
aas
mov
dec
lds
jo
popf
out
push
mov
mov
sub
in
lock
fmuls
sub
and
mov
jmp
lea
jbe
mov
aas
icebp
push
decb
xor
xor
icebp
sub
int
test
xchg
pusha
inc
sar
call
jp
dec
add
mov
andl
adc
mov
lcall
sahf
mov
mov
add
fsubrp
push
lods
out
dec
fdiv
nop
cmp
repnz
enter
mov
jmp
roll
test
dec
push
fsubr
fs
shlb
sbb
push
test
pop
lahf
shlb
in
repz
lret
ljmp
int3
loopne
subb
cli
pop
jae
adc
les
sbbl
push
mov
jns
and
sub
aam
mov
ds
imul
mov
cmpsl
mov
hlt
and
dec
mov
sbb
sbb
push
and
jb
addr16
and
xchg
sub
xor
cmpsb
fiaddl
std
ficoms
cmp
pusha
xchg
push
fidivrl
lods
inc
stos
inc
je
cld
ficomps
dec
xor
gs
adc
lds
ljmp
testb
out
or
outsl
sbb
xchg
pop
add
loopne
mov
adc
mov
jecxz
bound
fsts
loopne
lods
movsb
out
pop
repnz
sub
jae
leave
add
sbb
cltd
lcall
xor
pop
jb
pop
out
mov
mov
imul
mov
jle
stc
or
in
setno
aaa
jne
or
stc
xor
adc
ljmp
or
jl
cmc
mov
mov
mov
push
mov
ja
adc
pop
dec
mov
push
and
iret
cmpsb
cs
inc
push
dec
jno
rcrb
stc
jl
icebp
sbbl
mov
push
lahf
and
movsb
or
xor
or
mov
cwtl
out
inc
xchg
mov
sub
rcr
out
insl
cmp
mov
jmp
mov
dec
pop
ret
rcll
add
jne
in
stos
shrb
stos
dec
adc
sbb
int3
jg
mov
or
ss
adc
or
repz
sbb
xor
cli
cmc
mov
mov
mov
adc
adc
and
or
pop
sarl
push
les
fisttps
push
movl
fmul
addr16
mov
testb
nop
sti
or
iret
decl
jg
cltd
xor
xchg
rcrb
xchg
cmpl
mov
mov
clc
inc
stos
adc
pop
push
and
mov
mov
loopne,pt
data16
push
scas
int3
add
rorl
inc
iret
fs
mov
sbb
movsb
cld
andb
jecxz
xchg
insl
pop
xor
dec
adcl
pop
sbb
sub
jne
das
iret
sub
cmpsb
je
jmp
and
in
lods
or
pop
pop
jge
test
out
xor
or
outsl
repz
and
das
js
lcall
dec
jg
movsb
sahf
jp
mov
cmp
xchg
test
pop
xchg
insb
test
cmp
push
dec
mov
fsubs
fcoms
andl
fists
xor
mov
dec
rcl
lret
aaa
arpl
push
out
bound
jbe
sbb
mov
ds
pop
xchg
lret
add
sub
or
pop
orb
fwait
fwait
dec
and
cmc
jnp
add
imul
imul
or
out
in
movl
pop
int3
push
lods
cli
add
out
cmp
jns
out
idivl
add
jns
call
icebp
cmpsl
ror
or
mov
xchg
jmp
lret
pop
imul
jmp
and
xor
adcl
add
add
xchg
pop
mov
cmpsl
arpl
movsb
loopne
imul
jg
xchg
jge
rcrb
jle
mov
jns
in
popf
push
or
adcl
imul
pop
ret
mov
mov
cwtl
cmp
ss
push
sbb
xor
cmp
jg
sub
cmp
es
and
mov
testb
stos
mov
ds
push
movups
ja
lea
out
pop
pop
jbe
js
pop
and
inc
lods
sbb
jmp
hlt
push
push
adc
push
xchg
dec
pop
out
hlt
les
and
out
or
and
xor
push
push
ret
addr16
jg
adc
jmp
mov
addb
or
and
push
xchg
push
shl
out
movsl
sarl
xorb
pop
pop
mov
pushf
ljmp
outsl
jbe
xor
inc
sub
jnp
mov
imul
pop
dec
sbb
sbb
add
icebp
and
or
pop
test
xor
xlat
fs
leave
scas
jmp
or
dec
push
movsb
insb
jecxz
fwait
add
mov
jmp
xchg
repz
cwtl
clc
jno
in
mov
push
arpl
sbb
shll
mov
adc
jmp
in
adc
jae
in
cs
aad
aad
cmpsl
arpl
jge
push
gs
xchg
imul
xchg
iret
mov
xlat
pop
cmpsl
jge
jle
stc
dec
in
xor
aam
in
adc
pop
xor
lcall
mov
je
out
aas
push
jb
pop
push
lret
std
stos
enter
push
sbb
testl
loopne
xor
mov
mov
out
cmpsl
or
and
test
andl
enter
sbb
xlat
mov
mov
shrb
addl
mov
or
lods
jns
cmpsl
fld
int
adc
in
fnstsw
inc
rol
leave
ljmp
test
in
aad
xchg
stos
ds
sbb
test
stos
and
jp
xchg
lret
xchg
sahf
xchg
xchg
xchg
clc
xchg
mov
push
popf
jmp
pop
mov
fnstsw
sbb
sahf
std
rolb
jg
mov
xor
aas
mov
das
fmuls
xor
ret
add
add
sub
jne
insl
sbb
fiaddl
addr16
flds
int
or
push
mov
inc
mov
leave
cmp
inc
jmp
cltd
pusha
jecxz
push
push
int3
sub
fdivrl
inc
filds
mov
leave
dec
ffree
jo
cmp
sub
jnp
pop
pop
aaa
rcll
nop
mov
out
lret
cs
loope
or
stc
addr16
sahf
js
rolb
in
popa
xor
movsb
inc
xor
fwait
cmovo
lods
lret
pusha
in
push
mov
data16
and
xlat
or
lret
push
inc
jp
out
inc
orl
shr
or
imulb
mov
cmp
add
cld
mov
in
cmc
rorb
inc
daa
loope
stos
mov
xlat
cltd
push
cld
cmpsl
and
cwtl
jg
fcmovnb
ljmp
cli
cmp
imul
nop
mov
sub
xchg
cmp
pusha
lods
sbb
pop
shll
jp
fwait
loopne
xchg
and
scas
fistpl
testl
mov
push
iret
jae
arpl
arpl
adc
sbb
jbe
inc
fdivr
dec
cmp
pop
mov
xor
adc
push
cmp
sub
imul
jp
add
push
xor
or
movsl
jle
fists
in
cmp
out
push
js
adc
in
lea
adc
mov
push
inc
es
pop
mov
ficoml
mov
xchg
stos
mull
call
or
mov
test
fistpl
pop
xchg
pop
lret
inc
jns
dec
repnz
jne
xchg
and
jns
jmp
es
aas
pop
sub
cmpsb
xor
enter
lahf
addr16
inc
into
stos
scas
jecxz
or
inc
mov
sbb
fiaddl
push
mov
sub
aad
cmp
lcall
dec
packsswb
ljmp
inc
push
lret
push
lods
jmp
mov
inc
test
mov
hlt
loope
push
dec
fisubs
jecxz
fldenv
or
int3
fidivrs
dec
test
jo
mov
mov
lret
out
dec
loop
mov
fsubr
inc
sti
add
sbb
repz
add
push
test
mov
mov
fwait
lret
movsl
outsb
loopne
sti
in
jmp
xchg
mov
xlat
or
lds
lock
mov
or
std
or
sbb
test
mov
sti
push
dec
sbb
inc
inc
push
sbb
lods
les
in
div
outsl
cld
idiv
orb
pop
outsb
jns
xchg
sbb
or
jmp
or
sbb
shlb
jo
daa
dec
or
test
iret
add
movsb
cld
cmp
pushf
and
pushw
mov
push
int
scas
push
dec
and
lcall
in
into
inc
mov
lcall
aas
sub
push
add
clc
test
mov
and
add
roll
mov
jecxz
ljmp
adc
addl
sub
cmc
aad
sub
add
mov
mov
cs
sbb
fcomps
stc
pop
jnp
orb
push
fnstsw
push
imul
inc
int3
xor
sbb
jge
pop
jge
mov
sbb
std
sub
into
scas
adc
xchg
mulb
addr16
push
and
mov
daa
mov
shrl
leave
cmp
jecxz,pt
into
insl
out
sbb
jno
sub
ret
ljmp
lret
inc
and
add
leave
lahf
ss
cmp
fdecstp
jp
ljmp
in
pop
les
mov
sti
adcb
leave
cmp
push
mov
inc
aad
adc
push
gs
pusha
cmp
imul
lcall
mov
insl
mov
mov
adc
rcrb
push
out
dec
add
ja
test
in
and
cmp
loopne
test
mov
xchg
fs
and
or
mov
aas
sub
push
pop
test
sbb
jmp
or
subl
or
mov
clc
in
sbb
push
int
push
mov
ds
push
mov
dec
test
sbb
ss
out
cmpb
jle
xor
lret
es
xchg
sub
jmp
xor
pop
mov
and
adc
addr16
adc
jo
or
fwait
xchg
mov
dec
es
lds
pop
arpl
xlat
dec
stos
adc
fcmovnbe
enter
dec
sub
push
fs
in
mov
dec
add
jno
adc
mov
lret
cli
call
rorb
outsb
pop
sub
and
pop
mov
cmp
jnp
je
push
clc
int
loop
jmp
repnz
out
in
xor
xor
push
adcl
out
mov
pop
clc
push
lock
and
cmp
mov
test
mov
mov
jns
sbb
cmp
pop
adc
sbb
or
arpl
dec
repnz
mov
jmp
shl
divb
pop
add
mov
adc
xor
and
sub
into
sbb
push
cmpsl
scas
xchg
les
out
ljmp
and
mov
out
test
jg
int3
fimull
testl
xchg
xchg
int3
jno
ret
cld
lock
lahf
movsb
std
mov
or
int3
div
popa
inc
das
inc
das
insb
xchg
fldl
mov
mov
mov
sub
pop
ds
mov
sarl
not
in
pop
out
jo
icebp
jns
ret
popa
fwait
push
aam
popf
testb
ss
sub
jl
jbe
xchg
xchg
mov
in
mov
jb
mov
or
nop
sub
out
stc
adc
fxch
mov
pop
test
mov
add
push
adc
adc
add
mov
inc
pop
aam
jns
pusha
stos
push
test
or
xchg
mov
mov
inc
loop
stos
aaa
iret
daa
inc
cmp
xchg
paddw
outsl
stc
push
xor
movsb
add
stos
test
popa
aam
mov
or
mov
pop
mov
push
jo,pt
fwait
xor
pushf
push
iret
or
push
ret
ja
adc
mov
scas
jle
push
and
aaa
js
adc
add
scas
mov
pop
push
cs
pop
shrl
test
leave
xchg
push
xchg
cld
cmc
mov
loop
out
adcb
mov
outsl
gs
xor
push
daa
loop,pt
in
dec
test
jp
mov
lea
es
or
les
ds
jp
fwait
cltd
ljmp
enter
addr16
push
aas
pop
inc
mov
in
mov
xchg
push
lds
clc
sbb
push
mov
icebp
xchg
cltd
adc
jo
pop
or
xor
fucomip
adc
sbb
mov
ret
jne
inc
and
fsubrl
cmpsb
xor
fwait
mov
mov
out
shll
out
ret
push
clc
sbb
mov
jnp
push
push
xor
push
push
xor
mov
stos
pop
cmp
icebp
push
insl
imul
rcrl
test
mov
mov
sbbb
xchg
sbb
shl
push
shl
mov
cwtl
stos
mov
inc
adc
sar
or
fists
jmp
cmpsb
xchg
jmp
mov
or
xchg
jns
ret
nop
shlb
xchg
jbe
imul
jne
ljmp
cmp
or
pusha
popf
movsl
aas
hlt
add
jmp
jle
movsb
orb
movsb
xor
gs
mov
scas
jae
xchg
cmp
mov
orl
pop
stos
ss
sbb
jno
sbb
jmp
xchg
mov
incb
iret
mov
mov
mov
out
data16
cmc
movsl
lods
lahf
dec
sbb
dec
out
icebp
lock
test
mov
popa
cmp
and
imul
fwait
add
mov
cmp
xor
push
insl
icebp
and
call
gs
movsb
outsl
shr
lds
int
repz
or
aad
movsl
mov
test
push
mov
fsubrp
cmpsb
loop
dec
rclb
mov
add
pop
dec
dec
pop
hlt
call
jl
dec
dec
xchg
movq
lds
jmp
xchg
sub
pop
inc
insb
inc
stos
dec
cmp
out
xchg
pop
jne
pop
mov
fwait
inc
and
pop
cmpsb
out
or
jmp
inc
sub
outsb
movsl
je
inc
cmpsl
test
inc
mov
and
test
mov
rorb
dec
icebp
push
imul
clc
xchg
test
dec
scas
arpl
std
hlt
dec
inc
inc
and
rcr
add
cli
lods
sub
sub
xor
push
jl
scas
jg
mov
sbb
adc
mov
sub
leave
mov
push
sub
sub
cs
push
inc
push
movl
mov
les
jae
dec
or
jb
hlt
dec
icebp
dec
mov
out
lret
scas
lds
dec
xchg
iret
fiaddl
lahf
popa
adc
cld
cmp
xor
xor
fs
ret
jns
pop
mov
push
mov
mov
and
inc
and
add
outsb
ljmp
push
and
dec
ja
loop
lds
std
xchg
or
call
iret
pop
inc
mov
jae
add
in
push
pop
jnp
addr16
cmc
repnz
test
clc
jmp
loope
jne
faddl
add
movsb
xchg
shll
fsts
test
shrl
jecxz
lea
xchg
and
xor
addb
add
mov
mov
mov
mov
popa
jg
clc
push
aam
push
dec
inc
fsub
add
jns
mov
or
jl
jl
pushf
cwtl
xchg
seta
dec
mull
cs
add
push
popf
sbb
dec
fistl
pushf
insb
dec
mov
cltd
inc
push
in
ficoml
rclb
jbe
dec
rclw
push
outsb
outsl
and
fcmovnu
push
jle
push
stos
movsl
and
mov
mull
and
fnsave
pop
out
lret
pop
mov
test
sbb
imull
loopne
daa
adc
jne
cmpsb
cmp
das
add
cmc
mov
bound
and
stc
sub
jle
jg
xor
jnp
jg
push
lahf
loop
xchg
xchg
sahf
outsb
repnz
cli
cmpsl
and
int
les
mov
add
fwait
mov
mov
cmc
jp
fcomps
loopne
mov
xlat
add
es
test
icebp
movsl
jge
ftst
lea
in
sbb
and
rsm
aad
jno
pusha
js
cmpsl
pop
loopne
ficoms
rolb
divl
pop
lock
and
mov
sub
mov
sbb
dec
push
jge
push
shrl
and
test
loop
sbb
or
pop
sbb
popf
jno
push
arpl
mov
daa
and
stos
dec
cli
pusha
push
movups
cmp
xchg
xor
fs
outsb
push
outsl
push
pop
js
scas
jb
lods
popa
xchg
aad
fsubr
out
pop
cmp
adc
xor
cmc
cmpsb
sbb
cmp
mov
lods
aad
test
xchg
mov
lods
adc
call
jns
aas
jo
cmp
orl
xor
fsubs
es
icebp
fwait
and
and
imul
cmp
enter
sbb
xor
lcall
stos
cmp
vpminsw
pop
frstor
inc
jl
adc
sbb
inc
test
mov
popf
loopne
add
jmp
loope
in
xchg
out
fdivs
jb
xor
push
cltd
lock
inc
popa
pop
hlt
xchg
push
test
out
into
fdivrl
adc
in
pop
inc
dec
push
iret
or
mov
mov
nop
call
push
sbb
loopne
mov
lea
cmpb
inc
dec
sub
xor
adc
add
mov
mov
jns
mov
and
enter
inc
clc
outsb
mov
ret
fs
jp
std
add
stos
dec
xor
mov
or
outsl
dec
mov
sub
fstpl
imul
xor
cmpsb
jecxz
stc
sarl
cmp
mul
mov
movsb
adc
aas
ds
call
xor
and
out
fildl
xor
fdivrs
or
shll
fcoml
fucomip
mov
icebp
das
cmp
sbb
nop
cld
and
push
es
mov
stos
mov
and
push
outsl
cmpb
call
mov
mov
mov
mov
test
or
or
push
add
fcomps
idivb
mov
fbld
insb
lds
push
lcall
and
loope,pn
inc
pop
mov
adc
stc
or
pop
add
mov
js
dec
sbb
xchg
jb
iret
xor
shll
cwtl
mov
jb
cmp
and
adc
adc
fisttps
cltd
setne
xlat
inc
lret
out
rcr
mov
mov
jl
jno
loopne
aam
test
mov
icebp
xchg
jmp
cmovne
std
cwtl
pushf
loopne
insl
popf
xor
xchg
arpl
or
xchg
inc
xorl
jnp
dec
jne
add
adc
push
push
inc
push
xchg
ljmp
mov
inc
inc
aad
loope
mov
sbbb
out
dec
pop
jbe
daa
test
loop
loop
lret
jg
inc
loope
push
add
pop
sbb
cmpsl
xor
sbb
sub
mov
cmpsl
mov
hlt
aaa
push
cs
test
xor
adc
cmpsl
xor
mov
sahf
push
adc
addr16
jno
push
push
xchg
out
je
sti
mov
addr16
lret
push
in
xor
data16
cwtl
push
or
pushw
inc
insb
dec
jg
add
and
inc
popa
cmpsl
xlat
shll
cli
mov
scas
repz
push
std
mov
sub
and
mov
fcmovu
data16
mov
pop
mov
xor
out
inc
or
lahf
addl
sbb
pop
lahf
lret
cwtl
out
call
stc
ljmp
roll
mov
ja
xlat
in
les
mov
shll
inc
add
adc
loopne
push
xchg
jle
ret
rolb
and
jne
and
mov
popf
adc
out
cmp
mov
mov
xor
test
mul
cmp
mov
jle
int3
orl
sbb
in
mov
adc
mov
or
scas
lret
stos
jnp
jne
mov
lret
fidivs
adc
andb
adc
xor
push
rcr
fs
rorb
inc
xchg
movsb
add
dec
repnz
mov
addr16
adc
add
or
lock
scas
mov
xlat
cwtl
daa
add
sub
mov
jge
and
mov
fs
push
dec
add
or
dec
adc
ss
outsb
sub
xor
push
push
mov
xor
dec
repnz
mov
push
sbb
lock
dec
inc
xchg
andb
inc
sbb
call
mov
pop
xor
mov
adc
loopne
lds
push
xor
sub
int3
add
psubw
cmp
in
push
mov
sub
fsubrl
ds
loop
xchg
and
mov
pop
es
popa
cmpsl
mov
lcall
mov
or
add
aas
dec
jl
fxch
mov
mov
nop
pop
inc
adc
fldl
sbb
sbb
sub
xchg
push
cmpsl
stc
xchg
mov
outsl
shl
pop
out
mov
inc
repnz
jns
add
repz
stos
jp
xchg
rorl
rcr
insb
jns
xor
enter
dec
dec
test
addb
into
push
popf
or
repz
imul
nop
adc
add
in
push
push
bound
and
hlt
cmpsb
idivb
rcrb
mov
cmp
cs
cmp
mov
inc
fistl
pop
cmp
sti
jecxz
scas
flds
aam
lahf
mov
jns
js
sar
lods
js
dec
pushf
ljmp
addr16
movsl
pop
jne
pop
lods
movsb
sbb
add
call
sbb
mov
mov
in
fcmovnbe
pop
das
adc
je
and
ja
xchg
mov
pop
lock
icebp
push
les
and
dec
movsb
mov
cmp
aam
test
mov
addb
push
jnp
fdivr
inc
sti
test
dec
out
jmp
xchg
dec
imul
mov
cwtl
lock
cs
and
pop
call
cltd
adc
dec
loopne
mov
inc
push
lret
adc
dec
inc
movsb
sub
adc
cmpsl
movaps
jp
or
sub
adc
inc
out
adc
sarb
mov
adc
and
repz
sbb
push
ret
push
jno
push
ret
xlat
and
rcl
sbb
push
fisubrl
mov
xchg
test
cmp
mov
cmpsl
inc
push
hlt
and
pop
push
es
mov
jl
mov
test
outsl
in
ljmp
cs
mov
pusha
faddl
mov
je
lods
out
imul
push
inc
xor
sub
cli
mov
insl
cltd
jle
imul
mov
sti
and
adcb
mov
ret
or
mov
xor
pop
fnstsw
scas
movsb
mov
mov
adc
sub
fsubrs
push
fcmove
and
mov
aad
sub
outsb
xor
sbb
xchg
jbe
adc
cs
jp
cmp
xchg
lret
and
xchg
push
mov
int3
icebp
pop
xor
pusha
jno
and
adc
sarb
rorb
dec
fdivrs
jl
and
adc
xabort
xchg
aas
js
movsl
mov
push
subb
jns
or
mov
push
lcall
pushw
fnstsw
sbb
inc
jno
mov
in
test
mov
xchg
daa
sbb
in
fdivl
and
jne
scas
add
xchg
lret
pop
pop
inc
sti
js
repz
sbbb
lock
shl
inc
mov
dec
dec
adc
adc
mov
adc
and
test
add
mov
js
push
sbb
leave
jo
xchg
pushf
or
mov
sub
push
clc
cltd
lret
xchg
lock
bound
sub
pop
or
inc
pop
and
pop
scas
jnp
mov
flds
das
jle
mov
popf
or
push
ret
mov
addr16
and
mov
out
sbb
js
sbb
mov
sbb
dec
push
daa
fidivl
fmull
mov
xchg
hlt
ret
ds
pop
xchg
stc
stc
pusha
out
data16
xchg
dec
aam
mov
into
stos
dec
mov
ror
xchg
mov
je
ret
xchg
daa
push
sub
shll
lahf
jge
sbb
arpl
inc
mov
pop
xchg
leave
xchg
sub
xor
aad
stc
lret
mov
sbbl
adc
sub
sub
cs
sub
pop
loope
dec
jbe
jae
ss
dec
sbbl
push
cs
outsb
lods
stc
movsb
testb
sub
sarl
cwtl
inc
incl
ss
pushf
push
fistpll
jae
mov
scas
and
jns
sub
jb
rcll
je
inc
xcrypt-cbc
cmpsl
push
sbb
xor
mov
ja
mov
pop
inc
std
stc
ss
cltd
and
mov
or
sbb
sub
push
int
inc
push
rcl
dec
js
cmp
popf
xchg
mov
ret
ret
pop
aad
je
cli
sahf
jo
cmpsb
adc
jae
add
mov
or
loope
adc
cmp
test
mov
mov
mov
push
xor
jnp
testb
shlb
pop
daa
sub
inc
jle
gs
ss
aad
or
data16
daa
addl
std
lcall
dec
add
cs
push
xorl
dec
cld
aad
xchg
nop
in
sub
cs
add
in
cwtl
pusha
or
inc
add
fsubrs
cmp
idivl
xchg
inc
pop
jb
jbe
mov
dec
enter
sbb
xor
rorl
out
outsl
popa
dec
es
xchg
pop
add
pop
ja
pop
lea
mov
mov
rcrl
arpl
jle
xchg
movsl
call
sub
push
inc
pop
lock
mov
clc
xchg
push
sti
xchg
mov
fldz
stos
out
gs
ror
add
pop
sub
inc
ja
adc
pop
sbb
jae
int
je
jp
push
sub
xchg
pop
into
pop
jb
call
jae
loope
mov
rclb
jbe
ret
je
test
jae
or
addr16
sub
loop
or
mov
popa
shll
push
inc
jp
or
inc
in
lods
aad
nop
mov
scas
pop
iret
adc
test
pop
sbb
add
test
int3
sub
cld
mov
je
sbb
icebp
popf
jne
imul
mov
ret
mov
jmp
jno
xor
inc
arpl
ljmp
and
cld
sbbl
lahf
jnp
adc
pop
pop
pop
xorb
ret
cld
cwtl
movsl
hlt
shr
leave
gs
fs
inc
xchg
pop
mov
shll
roll
aad
push
inc
je
mov
scas
push
popf
mov
or
mov
push
int3
or
filds
sub
xchg
add
mov
add
in
and
orb
sub
call
hlt
dec
test
shrd
push
xchg
mov
das
adc
jmp
cmp
dec
mov
mov
jb
lea
inc
adc
add
insl
push
mov
in
lret
rorb
xchg
mov
push
insb
xchg
mov
add
in
xchg
in
fidivl
lock
pusha
mov
or
imul
lahf
lods
push
sub
push
xor
shll
insb
ds
shl
test
lcall
lret
xor
ja
lret
dec
orb
js
pop
and
lods
out
out
pushf
xor
xchg
lcall
std
dec
sbb
bound
cmp
test
cltd
pop
inc
int3
imull
imull
aad
sub
aaa
jp
jb
lret
xor
lahf
addr16
call
xchg
ret
fists
ret
mov
test
sbb
cld
dec
cld
dec
mov
jle
xchg
popa
mov
mov
jns
lahf
adc
jb
cwtl
sbb
push
xchg
dec
push
dec
adc
fdivrs
jne
int
cmp
cmc
adc
stos
in
sbb
sarb
movsb
cmp
push
iret
jecxz
dec
in
sahf
push
std
cwtl
pop
or
pop
cmp
in
mov
shlb
lcall
pop
mov
pop
lock
lret
jb
and
sbb
lcall
mov
pusha
enter
daa
mov
mov
mov
jb
std
andl
xchg
xor
sbbl
push
push
fldcw
sub
xor
es
popf
sub
mov
mov
outsl
imul
add
xlat
int
pop
ja
mov
sub
lock
sbb
aad
ds
pop
rclb
rcl
lods
jno
mov
push
add
adc
sti
stc
push
add
cs
es
mov
xor
data16
test
sub
pop
loope
enter
xchg
dec
add
out
fcomps
test
cmp
xorb
lret
push
maskmovq
testl
cmp
inc
enter
xchg
inc
dec
pop
mov
and
mov
or
jle
sub
sub
adc
or
jl
in
sub
or
pushf
add
sub
shlb
and
or
jno
jge
lret
jns
in
mov
cmc
xor
out
ja
cmc
and
xchg
rorb
mov
sbb
dec
fs
mov
test
cmp
mov
add
add
out
pushf
lret
sti
jmp
push
xor
aaa
sahf
push
adc
test
arpl
fldt
xchg
pop
into
shrb
fs
push
add
dec
out
int3
loopne
jbe
daa
sti
push
cltd
ljmp
jl
sbb
xchg
das
inc
xchg
mov
adc
movsl
les
cmc
push
or
jge
jl
int
int3
push
push
shl
sbb
dec
dec
and
fcomps
inc
lods
xchg
arpl
push
shrl
pop
mov
xor
mov
xchg
shll
pop
xor
cmp
out
test
leave
adc
jnp
jnp
rcll
incb
cld
push
push
loope
mov
bnd
je
out
xor
rclb
xor
je
sub
cli
and
iret
or
adc
ret
push
pop
mov
out
jg
nop
mov
cwtl
jecxz
pop
punpckhwd
adc
imul
mov
test
cmpsb
cmp
or
adc
or
inc
ljmp
pop
jb
in
cmp
aad
push
inc
or
movsl
and
addr16
cli
mov
inc
mov
test
addb
outsl
insl
cli
ficompl
mov
sub
imul
jp
int
jp
adc
mov
mov
xor
movsl
push
sbb
test
ficoml
mov
fmulp
mov
fnstenv
shll
mov
add
out
loopne
into
vpinsrw
jne
mov
mov
fnstcw
cmp
jb
adc
fwait
clc
lds
push
test
mov
test
int3
cltd
leave
mov
jecxz
mov
add
cli
imul
jb
mov
jnp
addb
push
pop
xorb
gs
mulb
imul
cmp
push
js
pop
adc
popa
add
aas
pop
std
lods
xor
jno
and
sbb
and
std
lcall
testl
aad
sub
mov
out
das
outsb
push
cmp
mov
fisubrl
scas
push
pop
imul
xchg
outsb
xor
inc
sub
icebp
scas
adc
inc
ljmp
adc
sbb
mov
push
pusha
xlat
out
mov
cmpsl
arpl
and
inc
sbb
ss
sub
in
scas
xchg
pop
and
mov
lea
dec
mov
dec
cmp
pop
dec
pop
cmp
test
jbe
negb
sub
dec
mov
into
mov
ficoml
int
push
pop
fnsave
push
push
xlat
int
jge
out
repz
scas
sub
adcl
cmpsb
lea
ret
mov
insb
lock
xchg
loope
cmp
mov
xchg
out
jge
mov
test
add
fbld
es
mov
incl
push
xchg
sub
fisubrs
int3
add
les
push
xor
pop
and
std
nop
xor
mov
cmc
or
xchg
pop
cmp
and
cmp
push
xor
mov
xchg
cmp
mov
outsl
dec
mov
xchg
add
cmpsb
fxch
out
cld
jle
pop
xchg
int3
or
sub
lahf
adc
jae
and
data16
adc
rolb
std
mov
jg
dec
idivb
jno
push
mov
inc
sub
loop
xchg
mov
andb
lock
sbb
aam
fstpt
cli
mov
mov
sbb
popf
push
push
ss
cmpsl
loopne
lea
mov
mov
int
push
lcall
fs
call
xchg
andb
stos
popf
sbb
inc
outsb
mov
or
pusha
cmpsl
add
mov
hlt
hlt
xchg
cmp
or
xchg
neg
mov
sahf
in
cmpsl
call
mov
add
or
mov
add
ror
fadd
in
shll
add
es
leave
rep
fldcw
sbb
xorb
gs
arpl
cmp
dec
daa
loope
iret
sahf
push
push
cs
lret
add
pop
sub
clc
rclb
lret
mov
out
push
dec
les
jno
xlat
int3
popa
mov
mov
loopne
jecxz
lock
mov
mov
and
sahf
mov
in
jp
fsubs
out
push
pop
out
lret
inc
out
cmp
lods
stos
mov
insb
jp
into
dec
dec
push
xchg
xchg
das
out
sbb
adc
push
pop
roll
test
dec
ror
push
mov
fsubs
mov
pop
inc
push
sub
int
xorl
ljmp
insl
mov
jle
rclb
sub
call
mov
add
sahf
cmp
fwait
cmp
das
mov
imul
xchg
outsb
mov
mov
pusha
sub
int
fstpt
add
inc
fadd
scas
sub
push
out
xchg
imulb
mov
mov
pop
ss
loopne
adc
cmp
loopne
and
movsb
pop
pop
mov
jae
pop
xchg
fsubl
insl
ficompl
mov
insl
js
mov
mov
cwtl
pop
into
rclb
add
inc
out
enter
jp
fimull
cmp
arpl
push
sub
sti
call
fimull
ds
fadds
push
stc
sbb
jnp
arpl
adc
cwtl
xchg
jb
out
xchg
cmp
test
scas
push
xor
xor
xchg
std
ss
mov
and
imul
cli
pop
sub
shrb
popa
mov
rorb
std
inc
subb
add
jbe
pushl
sbb
mov
rclb
je
pop
sub
ret
inc
and
cmc
stos
pushf
mov
shlb
outsb
es
or
cmp
out
out
and
testl
inc
sbb
jne
in
jb
lret
dec
pop
jo
js
arpl
dec
cmp
pop
jno
mov
aad
pop
dec
inc
xchg
add
das
xchg
and
popf
mov
imul
clc
imul
mov
pop
cmp
jb
inc
pop
push
lret
cmpsb
sbb
dec
xor
xchg
mov
pop
imul
or
pop
push
ljmp
jmp
pushl
lods
inc
mov
pop
ds
mov
jle
jne
loopne
dec
adc
pushf
sti
push
xchg
sbb
sbb
das
test
into
inc
cmp
adc
dec
push
jno
loopne
or
scas
repnz
dec
arpl
or
bound
mov
unpckhps
or
jne
loop
insb
xchg
orl
jg
cmpsl
rcll
adc
dec
inc
xor
arpl
sub
in
pop
sbb
shll
popf
mov
mov
add
dec
dec
stc
pop
jle
stc
shll
in
daa
testl
std
xchg
js
movl
push
adc
pop
and
jecxz
jns
test
stos
ljmp
sbb
or
cmp
xchg
xchg
mov
dec
and
cli
inc
stos
cmp
bound
add
inc
into
jns
xchg
adc
fsts
adcb
add
xor
mov
jo
movsl
xchg
pop
adc
js
pop
fdivs
xorl
xlat
pusha
push
pusha
test
jle
and
inc
jge
push
mov
pop
mov
jle
cltd
lret
push
out
jecxz
jecxz
aad
movsl
mov
fnstcw
je
add
cs
in
loopne
inc
mov
pop
mov
mov
xchg
aas
aad
pop
shll
outsb
pusha
rolb
cltd
ja
lret
outsb
sar
jbe
enter
adc
mov
mov
fstl
int
cld
lahf
not
jne
das
dec
xchg
fldcw
mov
out
lahf
shrl
cmpsl
mov
mov
cs
rcll
add
inc
mov
cmp
cld
shl
sub
es
push
sub
inc
pop
push
out
out
push
inc
pop
lret
les
xchg
sub
xchg
imul
stos
int3
sbb
lods
hlt
inc
mov
inc
jae
lods
stos
cli
cs
xor
push
xchg
lret
movsl
xchg
push
jle
cld
nop
and
out
xor
add
mov
add
push
pop
add
adc
xchg
mov
push
mov
shl
or
jae
push
loope
cmp
xchg
popa
sub
mov
aas
sbb
add
push
adc
mov
inc
in
mov
clc
cs
test
sub
push
daa
adc
jmp
sbb
data16
push
scas
in
xchg
push
pop
mov
xor
xor
out
bound
imul
fstps
or
add
pop
andl
xor
pop
sbb
jbe
and
aas
push
je
lds
jnp
in
xchg
mov
int
ret
out
push
ljmp
sbb
pop
adc
or
notb
mov
jb,pt
push
mov
in
push
cwtl
add
mov
es
ficoms
mov
addr16
addr16
jmp
ja
sbb
sti
mov
cmpsl
ss
jnp
clc
clc
sbb
mov
push
lahf
adc
mov
adc
jmp
call
stc
outsb
cmp
lock
and
lahf
mov
push
mov
jns
jnp
lods
cmp
in
leave
mov
mov
dec
mov
out
adc
xor
cmp
mov
mov
cmp
xor
mov
push
jno
jne
push
in
jne
sub
pop
fmuls
aas
scas
mov
pop
daa
cmpsb
jp
filds
xor
cmp
imul
inc
scas
imul
testl
mov
xchg
pusha
fidivl
lock
daa
movsl
imul
sbb
or
xor
inc
loope
in
adc
sub
les
jae
pop
daa
in
lods
addr16
int3
or
mov
push
jno
sbb
jp
pop
insl
in
jge
ret
call
add
cmpsl
inc
push
movsl
lods
sub
stc
leave
das
xchg
inc
mov
das
mov
cmp
cwtl
sbb
jecxz
fcmovb
jbe
mov
scas
into
les
scas
jnp
shll
mov
pop
aas
sahf
mov
pop
inc
push
repnz
mov
adc
xchg
test
push
dec
and
test
addr16
roll
and
sub
dec
or
push
xchg
adc
in
fsubs
jmp
xchg
imul
inc
mov
sbb
es
mov
mov
dec
cmpsl
pop
jl
inc
loopne
jbe
pop
enter
lret
dec
in
xlat
scas
fstps
in
cmp
inc
popa
test
xlat
adc
inc
dec
loope
adcl
xor
mov
and
cmp
aaa
and
loopne
dec
gs
daa
pop
leave
lods
mov
jle
pop
mov
xchg
stos
pop
mov
outsb
out
inc
lret
mov
add
dec
xchg
push
jmp
rclb
addb
scas
add
sahf
clc
or
lock
mov
aaa
sub
mov
in
inc
jp
dec
pop
lret
jne
add
divl
add
and
and
bound
aam
mul
in
jo
stc
xor
xor
stc
jnp
lock
jle
js
push
sub
in
lock
xor
pop
push
mov
loope
iret
sub
xchg
cmpsb
es
lea
pop
push
push
add
jl
test
jne
bound
add
mov
rcll
inc
lret
mov
pushf
add
xchg
xchg
call
jo
sub
sbb
ret
pusha
mov
add
lret
jp
mov
leave
xchg
push
notb
mov
xor
cwtl
and
in
mov
mov
adc
mov
jo
negl
aaa
lods
out
mov
mov
mov
adc
add
adc
add
xchg
frstor
jnp
cmp
jg
jmp
in
ficomps
fucompp
sub
inc
out
mov
ljmp
mov
push
in
cmp
and
mov
fcoms
xlat
push
lea
cs
sbb
and
xchg
in
xor
icebp
jle
stos
cmp
sahf
aam
add
push
sub
stos
mov
push
out
mov
inc
dec
test
xchg
insb
jmp
scas
and
sbb
or
jno
cmp
out
inc
adc
add
add
sub
cmp
sub
out
and
sar
scas
scas
push
in
js
or
mov
adc
cmc
rolb
and
fsubl
loopne
mov
lea
daa
dec
inc
insl
mov
xchg
and
push
dec
dec
lea
vprotb
push
push
aad
xchg
mov
jbe,pt
je,pn
push
add
fucomp
mov
mov
xor
pop
mov
pop
punpcklwd
pop
add
and
cmp
push
cmp
dec
mov
push
outsb
out
in
movsl
add
stos
inc
fldenv
pop
out
mov
repz
popa
pop
sub
and
out
mov
out
sbb
and
inc
mov
pop
and
or
push
jnp
stc
fs
hlt
or
arpl
mov
aam
sub
push
xchg
add
ret
jg
jge
decb
and
push
pushf
pop
pop
in
inc
push
xchg
mov
sahf
push
add
mov
jge
popf
cld
ficoms
xchg
fbld
imul
negw
xchg
nop
in
xlat
sub
imul
gs
lret
sbb
jl
push
jmp
stc
in
sbb
sbb
imul
or
adc
adc
mov
fimuls
pop
imul
jmp
sub
mov
sub
sub
mov
aas
adc
cmp
jbe
loopne
pop
fistpll
rcrb
adc
inc
dec
sbb
push
popf
stos
ret
int
or
js
mov
fcompl
in
or
movsl
lea
inc
inc
pop
test
ffreep
mov
adcb
mov
push
or
or
mov
sub
cmpsb
rorl
xchg
fnsave
outsb
icebp
xor
fwait
xchg
sbb
mov
popa
loop
es
or
gs
stos
mov
xlat
sarb
fbld
cs
add
ficoml
cltd
cmpsl
xchg
push
int
jp
mov
inc
fcmovbe
cld
imul
lcall
call
adc
pop
int
cmp
testb
and
mov
outsl
push
or
sub
out
shrl
jb
into
dec
mov
lret
out
imul
out
outsb
cli
cli
je
shrl
rolb
or
enter
insl
dec
cmp
stos
mov
repnz
js
shrb
dec
jno
xor
cs
add
mov
mov
iret
scas
in
clc
sarb
sub
dec
mov
xchg
jae
xlat
lods
adc
pop
sub
repz
aas
movsl
pop
psubsb
push
or
cltd
rolb
jmp
fcomps
out
frstor
movsb
sbb
mov
mov
rorl
sbb
mov
daa
popf
adc
lret
lret
enter
lods
pop
sbbb
repz
aam
xorb
mov
mov
mov
jb
imul
sbb
dec
sar
js
mov
cmp
out
insb
mov
sbb
dec
and
scas
in
int3
lret
ret
stc
xor
cmp
fcom
cltd
jbe
pusha
inc
or
les
xchg
and
jae
cld
or
mov
cmpsl
xor
mov
dec
ds
push
mov
jno
jo
sbb
rcrl
ljmp
mov
je
divb
mov
push
mov
sbbb
sub
or
les
and
in
ficompl
aas
ret
mov
sbb
hlt
jbe
adc
mov
xor
mov
mov
or
jg
int3
and
and
push
or
test
pop
scas
push
pop
in
xor
loopne
out
cmpsl
cli
mov
cmp
dec
pop
clc
cmp
cmp
test
nop
mov
cli
jge
sbb
inc
jne
dec
mov
dec
sahf
rcr
out
loopne
fldt
sub
repnz
mov
mov
cmp
inc
cli
cli
sti
cmc
xchg
adc
or
call
aas
fisttps
jg
inc
sbb
add
test
add
sub
scas
xchg
psubusb
push
stos
ftst
push
inc
shlb
rorb
push
cld
shlb
jns
jbe
pop
push
stc
je
or
push
mov
rcrb
dec
and
sbb
jg
xchg
aam
mov
sub
jns
xchg
cmp
jmp
push
sub
mov
xor
xor
inc
imul
pop
test
dec
out
sub
call
hlt
cli
inc
test
lods
lcall
push
dec
dec
inc
loop
jecxz
inc
mov
push
sbb
mov
inc
sbb
add
imull
divb
pop
pop
nop
mov
adc
or
fld
idiv
add
sub
rorl
add
adc
cwtl
xor
insl
fwait
pop
mov
fdiv
mov
idivl
xlat
xor
call
mov
lock
daa
or
push
iret
test
add
dec
mov
sbb
mov
dec
pop
push
push
mov
nop
ja
jmp
cmc
loopne
xor
adcb
jne
fdivrl
dec
mov
fcoms
int3
scas
scas
sbb
or
cmc
in
xchg
mov
mov
xchg
add
scas
dec
push
dec
xor
xchg
push
into
nop
inc
lahf
jp
sbb
fmull
add
leave
insb
data16
test
dec
movsl
ret
movb
movsb
cwtl
fisttpl
mov
jne
sub
fnstsw
sub
roll
mov
xchg
addr16
and
mov
or
not
mov
test
inc
mov
inc
dec
lahf
dec
inc
int3
xor
mov
push
mov
ss
shll
adc
push
stc
pop
int3
or
push
and
pushf
imul
mov
jp
repnz
push
in
push
cli
mov
mov
outsb
in
xor
inc
push
jp
fisubrs
lea
dec
add
pop
scas
leave
mov
jb
cmpsb
out
xchg
xchg
cwtl
xchg
mov
inc
fwait
stos
ret
add
js
addb
andb
sub
adc
pop
movsb
pushw
bound
daa
dec
fdivrl
fs
or
stos
mov
out
popa
cmp
mov
adc
xchg
pop
lcall
jecxz
sbb
adc
fwait
dec
jmp
sbb
clc
inc
cmp
sub
das
mov
jp
fs
inc
adc
bound
popa
pushf
addr16
or
stos
xchg
add
mov
imul
jl
lcall
test
cmp
adc
iret
mov
jo
into
jle
aas
sarb
mov
jge
dec
sub
inc
add
cmp
ret
and
mov
insb
in
out
pop
mov
rcrb
test
shl
and
xchg
addl
pop
adc
das
out
sbb
mov
push
dec
test
or
jle
mov
cmp
test
mov
xchg
push
mov
cli
push
ljmp
popf
in
cli
addr16
jae
pop
or
fsubr
fldt
mov
lcall
xor
mov
gs
sub
sbb
pop
mov
test
pop
xor
pop
lods
out
es
xchg
jno
cmova
xchg
sub
testl
jge
add
gs
sahf
inc
outsl
jecxz
cli
mov
adc
into
cld
in
sbb
or
push
or
stos
jne
and
sub
pop
das
and
xor
sub
cmpsl
mov
jo
popf
inc
jns
outsb
xor
or
xchg
outsb
jb
ret
jno
notl
sbb
adc
dec
loop
jg
aas
xchg
ss
aaa
jb
or
repz
pop
push
inc
insl
icebp
lret
or
mov
lret
gs
xor
rcl
push
jl
stos
add
orb
push
fnsave
mov
ljmp
xchg
sub
sarl
inc
inc
enter
aas
test
popw
cld
hlt
inc
clc
in
mov
stos
sbb
cmp
mov
or
jl
sar
sbb
adc
int
xchg
jae
fsubrl
mov
in
push
push
or
mov
or
jge
push
jae
stc
rcrl
pop
sub
int
pop
and
cmpsl
dec
aaa
lods
loopnew
movsl
and
ds
cmp
dec
mov
subl
nop
mov
xor
dec
sarb
add
js
cli
cmp
sbb
dec
sbb
into
loope
loop
lret
sub
xchg
mov
dec
rorl
test
mov
xor
dec
sub
les
test
test
mov
xor
xor
adc
sub
lahf
cmc
cmc
das
or
mov
jnp
fadd
test
adc
add
les
test
inc
xchg
or
daa
out
flds
scas
jp
inc
cmp
sub
call
insb
popf
out
add
sbb
sub
jge
xlat
int
inc
push
mov
push
inc
xchg
and
jbe
pop
mov
pushf
inc
testl
popl
push
ret
pop
fsts
xor
repnz
cmp
lock
mov
in
mov
aad
adc
sti
inc
cmp
inc
push
jo
inc
xor
movsb
jne
mov
jl
mov
mov
dec
mov
insb
jno
or
fsubp
cmp
andl
test
mov
xchg
dec
mov
and
ret
cmp
mov
sub
test
push
sbb
mov
xlat
pop
pop
hlt
aad
sub
pop
push
push
cmp
dec
outsl
push
movsb
jl
xor
movsb
inc
je
cmp
mov
push
clc
xor
sti
jge
xchg
ret
lret
in
xchg
jns
sbb
adc
cmp
cwtl
jno
rcll
hlt
arpl
addr16
add
push
jmp
cmp
imul
fnsave
push
clc
cs
dec
popf
addr16
and
ljmp
xchg
call
int
les
push
inc
enter
xchg
push
popf
dec
out
cmpsb
lret
pusha
hlt
lods
lods
xor
and
repnz
lods
out
or
and
ss
mov
push
cmc
gs
jg
stos
mov
ret
pushf
jbe
mov
jecxz
or
add
int
mov
add
or
mov
sub
sbb
sub
mov
repnz
pause
jge
in
push
pop
or
mov
inc
aas
insb
and
movsb
ja
xchg
in
fistl
mov
cs
enter
xor
popa
inc
adc
adc
lods
mov
xor
fnstenv
test
xchg
cmp
and
rolb
pop
xchg
in
stos
insl
mov
add
mov
icebp
sahf
mov
mov
pop
dec
add
xchg
mov
inc
ret
jmp
jp
popa
andl
stos
lret
fwait
inc
nop
push
push
push
adc
test
jnp
stc
insb
mov
xorb
mov
adcb
pop
sbb
xor
push
pop
pop
xchg
pop
popa
or
inc
pop
lods
cmp
enter
mov
cmpsl
out
test
jo
hlt
jne
loopne
es
ret
call
cmp
out
pusha
or
pusha
into
mov
mov
cmp
stc
lds
pop
das
loopne
fsub
ret
leave
fnsave
dec
lea
push
jo
xchg
push
xor
and
ss
imul
rolb
xchg
pop
xor
mov
xchg
out
lock
outsl
pop
call
pop
shrl
lldt
repnz
adc
mov
mov
dec
jo
rorl
pushf
in
dec
dec
push
in
add
inc
dec
bswap
cltd
test
add
pop
cmpsb
jae
das
jge
xor
shll
xor
imul
inc
es
addr16
decl
and
jns
aad
popa
xlat
ljmp
aam
aad
lds
ret
xchg
dec
shlb
xor
pop
les
aaa
cltd
adc
add
stos
xchg
cmp
xchg
movsb
out
out
arpl
pop
cmp
shl
lret
rorb
push
mov
mov
lock
xchg
mov
adc
fcmovu
outsl
aaa
add
movsl
daa
gs
mov
sub
lea
outsl
ss
pusha
and
adc
outsb
aad
add
mov
out
or
lds
pushf
jmp
push
or
sub
xchg
sti
rcrb
xorb
and
mov
shl
dec
jmp
lds
rorb
in
jecxz
notl
xchg
dec
mov
adc
jecxz
fidivrl
loopne
out
cmc
jno
mov
dec
xor
aas
ror
pop
mov
and
enter
sub
lahf
out
leave
jno
push
xor
int
xor
xchg
idivb
addr16
mov
fadds
dec
out
sarl
xchg
push
ja
loop
cld
insb
enter
mov
hlt
enter
inc
mov
sub
nop
shlb
popf
jnp
mov
dec
inc
lds
pop
dec
inc
lock
push
stos
gs
ss
pop
andl
fwait
sbb
mov
das
mov
add
cmp
sub
movsl
mov
dec
xor
pop
aas
int3
popa
mov
mov
mov
lahf
gs
into
cmpl
xor
xor
aad
ret
or
jecxz
lods
jns
cld
popf
scas
xor
into
mov
push
push
mul
mov
sub
icebp
mov
cmp
inc
movsb
add
and
mov
mov
dec
xchg
dec
xor
mov
aam
scas
and
lods
sbb
cltd
cmp
add
push
xchg
repnz
out
stos
cmp
pop
push
sub
pusha
sbb
enter
mov
dec
pop
ret
dec
jbe
jle
jo
lcall
outsl
enter
pop
fcompl
pop
fcmovnbe
mov
push
adc
das
jns
aad
lcall
packssdw
push
test
mov
fcmovb
xor
add
stos
dec
xlat
in
add
and
mov
rol
rcll
int
inc
leave
sbbb
add
dec
push
pop
cmpsl
add
fs
jp
dec
popf
iret
xor
add
inc
push
bound
fisubl
inc
mov
xchg
or
pop
mov
out
mov
jl
jne
sbb
sub
sbb
loope
add
jnp
xor
mov
rcrl
push
xchg
dec
mov
lahf
adc
mov
pusha
push
sbb
xor
fdivrl
fisttps
fnstcw
cwtl
xchg
jecxz
arpl
adc
leave
inc
or
pop
iret
frstor
mov
xor
arpl
mov
jo
jmp
mov
inc
pop
dec
stc
xorl
lret
aaa
arpl
add
ret
mov
sub
dec
inc
cs
nop
sub
mov
sarl
pop
or
mov
mov
jb
cwtl
movsb
aad
ds
inc
or
cs
aam
cmp
sbb
outsb
adcb
fimull
dec
in
data16
jle
push
jmp
dec
scas
xlat
arpl
xchg
xchg
icebp
sti
cli
or
mov
sub
inc
or
into
movsl
push
lods
jbe
jns
cmp
xor
dec
fnop
xchg
mov
nop
inc
pop
movsl
ret
mov
int
and
push
dec
fmul
movsb
subl
pop
add
cmp
ds
mov
push
movsb
inc
mov
dec
cld
pop
push
arpl
sets
lcall
cmp
mov
fimuls
and
dec
jge
dec
bswap
stos
xor
test
sbb
cmc
sbb
mov
push
inc
mov
jb
and
pop
iret
jae
jo
cmp
out
out
push
lock
jne
test
popf
les
mov
inc
jle
adc
rcll
lods
in
xlat
inc
repz
mov
or
call
cmp
sbb
rorb
push
sti
dec
push
adc
mulb
test
push
icebp
pop
pop
cld
pop
arpl
ljmp
leave
dec
je
loopne
or
adc
sbb
dec
ja
xchg
xchg
and
lds
ret
xchg
mov
jl
in
pop
inc
loop
add
sbb
insl
fstl
inc
int3
adc
int3
mov
fmull
push
sbb
movsl
xchg
jbe
ja
pusha
xchg
mov
mov
movsl
pop
jb
lret
test
pusha
mov
scas
les
jae
xor
cmp
cmpsl
mov
dec
repz
mov
cs
jmp
cmpsb
jne
leave
and
pop
aaa
loope
jg
scas
add
dec
cmc
xor
sub
subb
mov
stos
int3
jecxz
jp
shll
mov
jnp
pop
fnstcw
xchg
dec
or
popa
das
fsubs
clc
int
icebp
movsb
xchg
data16
inc
cltd
and
popa
cltd
outsl
sbb
or
mov
xchg
ja
fdivr
pop
mov
cwtl
cmp
int3
repz
sbb
mov
sbbb
dec
dec
or
sub
xchg
inc
scas
xor
popf
fwait
aas
mov
pop
add
enter
addr16
pop
jo
push
sti
and
rol
stc
sbb
adc
imul
scas
fidivrl
xor
xlat
ret
and
xchg
add
stc
mov
leave
jne
xchg
imul
jbe
pop
movsb
repz
in
popa
test
scas
lock
call
nop
outsb
xchg
std
ret
and
shlb
pushf
aam
mov
test
shlb
cli
imul
push
mov
fs
jo
sub
cmpsl
mov
aaa
mov
test
mov
lea
jmp
insb
jl
jnp
sub
mov
sbb
pop
jmp
outsb
pop
das
adc
in
fldl
enter
in
or
push
cli
and
sbb
bound
daa
xchg
dec
cmp
int3
jmp
or
pop
sbb
jb
cmp
je
add
movsb
sub
sbb
jp
popa
mov
scas
or
mov
and
or
sub
icebp
fcmovu
loop
push
sub
lahf
out
push
and
pusha
pushf
lods
rcrl
or
add
and
cmp
dec
and
cs
rclb
add
iret
xchg
pop
lahf
sub
arpl
mov
cmp
loope
aam
scas
inc
jecxz
mov
sub
xchg
inc
sarl
push
mov
jge
dec
jg
and
xchg
mov
add
dec
fcomip
hlt
cmp
push
fildl
pop
jecxz
rol
std
out
mov
out
jp
popf
add
leave
lds
in
icebp
pop
jmp
mov
pop
jge
in
leave
ret
cmc
push
dec
cmp
cli
cmp
push
and
movsl
mov
fiaddl
shl
and
xlat
ja
pop
mov
sarl
jecxz
push
outsb
mov
push
pop
lahf
cli
rorb
xor
or
mov
xlat
fsubl
and
movsl
and
loope
loop
aaa
dec
or
sub
repnz
and
sbb
pop
loopne
add
xor
popa
out
and
cld
inc
ja
scas
sub
icebp
rcll
jmp
jne
fcomip
iret
ror
loope
jne
or
xor
data16
fstpt
push
mov
dec
pop
js
pop
into
sub
lret
cmp
add
xchg
jge
fistl
push
or
sbb
pusha
mov
outsl
cmp
inc
shrl
sti
xchg
ret
xchg
out
cmpsl
ret
jae
aad
int
add
rcrl
mov
mov
dec
repnz
gs
insl
jge
shlb
or
mov
test
out
rolb
cmc
decb
fmulp
add
push
lods
popf
sbb
push
xchg
adc
mov
cmp
cwtl
sbb
pop
mov
mov
sarl
cmc
mov
scas
inc
movsb
sbb
mov
lods
xchg
lea
adc
fwait
outsl
or
mov
jno
mov
jle
repz
sbb
hlt
jb
aam
test
sbb
jbe
fwait
dec
daa
aas
push
int
shrb
mov
fs
negl
mov
or
cmp
je
jl
push
mov
pop
sub
cmpb
gs
add
cli
add
or
shl
movsb
adc
xor
push
in
sbb
sbb
mov
psubusb
sbb
mov
xor
lds
and
ljmp
pop
leave
push
cmp
mov
iret
pusha
or
insb
sbb
andl
in
movsb
pop
push
scas
dec
cli
jbe
popf
fldl
pop
bound
test
push
mov
cmpsb
orl
pop
icebp
sub
sbb
adc
mov
cmpsb
lds
shll
add
and
jmp
push
cmpsl
les
push
mov
test
in
ret
movsl
or
inc
shll
or
jg
sbb
xchg
enter
scas
cmp
jbe
clc
pop
ficoms
cli
pushf
jns
add
inc
repz
inc
xor
mov
out
outsb
inc
or
subl
add
inc
and
lock
fidivl
dec
adc
xor
mov
lret
push
ja
push
jb
sbb
or
dec
iret
and
scas
and
and
sub
jg
xchg
adc
int
pushf
leave
fwait
and
sub
in
popa
mov
shlb
sub
outsl
in
cs
leave
mov
inc
stos
mov
mov
popf
testb
or
adc
movsl
xorb
add
xchg
push
pop
je
xlat
push
stc
push
std
dec
aad
pop
jne
push
pop
pop
ljmp
jns
pop
fs
shlb
repz
or
add
lcall
cs
xor
dec
pop
fiadds
cmc
sbb
inc
push
mov
out
pop
push
sub
cmp
pop
aam
clc
jbe
adc
insb
mov
dec
pop
push
cmp
xorl
dec
xor
mov
lahf
lahf
leave
cmpsl
rclb
push
sahf
mov
stc
cmpsb
fs
push
je
push
mov
xor
fdivr
data16
push
xor
ljmp
pop
in
jle
cmpsb
js
xor
in
bound
repz
roll
ljmp
sahf
call
xor
push
dec
out
sahf
sbb
sahf
ret
add
mov
enter
and
lcall
inc
jb
addr16
iret
aad
adc
cmp
sbb
mov
test
add
or
popa
push
nop
repz
mov
sahf
mov
sbb
mov
div
push
or
stc
loop
clc
cmpl
lahf
outsb
shll
adcl
scas
and
outsl
loopne
jbe
das
insl
push
fidivs
jecxz
cli
push
cmc
add
aam
cld
mov
sub
jp
dec
jge
fucomp
pop
jnp
fs
imul
jmp
fsts
fsubl
ljmp
xor
push
dec
movsb
data16
outsl
and
loope
fwait
out
and
rcrb
mov
push
xchg
mov
daa
jns
ret
lcall
pop
dec
or
insb
push
xor
mov
or
cs
push
clc
xchg
xlat
std
pop
ret
sub
mov
fnstenv
nop
fisubs
dec
adcb
sbb
int
shll
dec
and
out
jb
push
sub
xor
mov
cmpsl
or
data16
orl
mov
cmp
int3
repz
mov
mov
xchg
mov
ret
dec
ss
adc
out
jmp
pop
ljmp
lods
push
ljmp
mov
out
mov
scas
imull
ret
pop
mov
push
ret
jp
xlat
xor
push
cmp
push
clc
mov
leave
push
stos
jg
mov
fwait
loope
pop
dec
and
add
aam
sbb
xor
stc
mov
pop
xlat
insb
repnz
shll
lock
movsl
outsl
sbb
cwtl
cli
pushf
shlb
mov
ret
clc
inc
xchg
loopne
les
mov
lods
scas
lahf
mov
aad
jp
push
outsl
call
hlt
lcall
loop
push
push
mov
aad
mov
mov
lahf
mov
and
aas
mov
adc
push
shll
and
sub
sub
add
cmp
xlat
rcrl
push
lret
jb
dec
sub
sub
push
xchg
adc
repnz
sub
mov
loope
dec
push
mov
jecxz
push
mov
xor
fdivrs
lock
mov
mov
clc
hlt
sahf
mov
out
or
and
push
mov
bound
add
inc
into
test
aad
adc
and
js
add
push
test
mov
xor
sbb
push
repnz
mov
insb
addb
ficomps
mov
filds
popa
das
cli
mov
jno
or
pop
xchg
push
mov
dec
or
enter
std
cmpb
cmp
out
sbb
out
mov
inc
flds
lock
adc
and
icebp
fcoml
mov
mov
addr16
scas
push
leave
sahf
inc
xchg
negl
inc
andl
mov
orb
shll
dec
push
or
mov
jae
jge
imul
xor
stos
aas
ret
xchg
inc
pop
fs
sar
or
out
mov
dec
xor
cli
ficomps
mov
std
and
addr16
or
scas
repz
pushf
cli
cmc
fnstcw
xchg
out
dec
add
mov
lcall
repz
lds
adc
push
pop
fadd
push
xchg
orl
imul
int3
xbegin
fidivrl
cwtl
push
data16
cltd
inc
and
out
leave
je
jb
call
imul
out
mov
xlat
cli
jno
hlt
and
mov
and
negb
dec
out
mov
pusha
and
out
sbb
imul
sarl
xchg
mov
sbb
jl
stos
sub
call
xchg
sbb
je
loopne
and
xor
lret
repnz
inc
pop
pop
fistpl
push
push
in
cmp
bound
mov
inc
in
out
sub
mov
out
and
lods
lock
lods
inc
movsb
loop
sub
mov
inc
addr16
in
loope
and
xchg
int3
std
dec
lock
xchg
lahf
pop
add
and
jne
sub
sbb
jae
cmp
sub
jno
inc
push
test
aam
outsb
gs
fs
sbb
fcoml
lock
xchg
aas
out
enter
sti
push
jmp
xor
add
push
mov
push
cmp
repz
into
orb
cmpsb
mov
lahf
dec
sub
movsl
pop
lret
push
mov
mov
push
dec
idivl
rorl
addb
fidivs
xlat
movsb
add
ret
or
inc
cli
sbbl
jl
xor
adc
mov
adc
push
lahf
decl
cmovae
jmp
lods
mov
test
mov
stos
sub
jecxz
insb
ja
shlb
xor
push
pop
xchg
adc
aad
dec
and
xchg
dec
popl
pop
aam
jge
push
mov
jbe
inc
ror
mov
cmpsb
xorl
mov
cmp
outsb
stos
clc
mov
cld
jae
enter
mov
jle
lahf
push
adc
fcmovbe
push
lret
inc
jge
dec
daa
les
daa
std
mov
or
lock
push
lea
je
jl
adc
enter
lea
fisttps
mov
jl
stc
and
test
bound
jecxz
in
push
iret
mull
and
stos
dec
jae
scas
jl
fldt
sub
jecxz
mov
mov
mov
and
add
pop
or
add
shrl
loope
adc
lds
push
dec
cli
insl
into
stos
in
mov
enter
andb
add
lods
dec
cmpsb
cmc
call
and
fldl
push
xchg
je
clc
gs
dec
sub
xor
movsb
insl
mov
xchg
std
sbb
jne
gs
roll
inc
lea
and
jge
cwtl
sbb
int
push
mov
pmuludq
cs
jae
arpl
icebp
aaa
call
pop
je
push
cmc
jg
inc
pop
icebp
jns
ret
les
push
in
mov
jb
xchg
sub
mov
sub
cmp
xor
scas
jb
adc
mov
and
test
and
lret
push
dec
gs
jo
sbb
inc
int3
jns
pop
pop
dec
mov
subl
scas
push
call
in
idivb
mov
inc
andl
ljmp
mov
shlb
xor
test
cmp
or
fs
and
stos
cld
adc
inc
rolb
nop
jne
imul
test
leave
adc
jns
addr16
pop
jne
inc
sub
testl
fmull
ljmp
aam
sbb
and
loope
jl
mov
aas
in
stos
lods
inc
xchg
into
mov
lahf
and
mov
jg
pop
daa
lcall
pop
cmp
or
push
cs
pop
out
lds
xlat
lahf
adc
push
push
jl
andl
insl
pusha
xchg
inc
xor
sarb
cmpsb
ret
push
add
cmp
cwtl
dec
leave
jns
ds
out
out
dec
outsb
adc
xchg
popa
jge
shll
push
ret
ret
ss
inc
lods
and
pop
loope
ss
lods
loopne
xchg
stos
enter
mov
mov
sub
inc
or
push
fildll
fidivs
popf
mov
xor
jle
inc
mov
push
repnz
int3
leave
gs
sarb
adc
stos
movlps
pop
dec
cmpsb
dec
das
or
xchg
adc
ljmp
gs
inc
cmp
mov
and
xlat
xchg
gs
jne
jmp
in
mov
add
or
xor
jbe
es
lods
fldt
dec
mov
in
adc
pop
scas
jmp
add
xchg
push
pusha
int3
into
mov
pop
inc
std
mov
incb
mov
nop
inc
subl
mov
call
in
dec
sbb
lret
cmpsl
jl
xor
mul
rolb
test
mov
add
dec
imul
std
pushf
jns
push
in
fcmovnbe
fimuls
aam
dec
mov
pop
xchg
jg
fidivrs
mov
pop
push
add
mov
adc
scas
sbbb
scas
mov
jle
sbb
push
sarl
jmp
mov
ficompl
mov
sbb
mov
mov
mov
or
into
cmp
test
shlb
mov
shl
fistps
and
mov
mov
xchg
hlt
sbb
pop
push
dec
mov
jns
arpl
inc
inc
mov
sbb
adc
pop
pop
xchg
push
push
or
mov
push
scas
mov
movb
mov
lea
lret
aaa
ret
jp
jbe
out
sbb
and
jne
sbb
xchg
out
mov
int
dec
and
xor
repz
pop
imul
cmp
mov
xchg
cmp
inc
dec
hlt
push
jns
lods
icebp
adc
fiaddl
sbb
sub
fistpl
push
cmp
fnsave
sarb
xchg
and
loopne
outsl
jnp
jae
adc
popa
js
adc
loopne
adc
pop
mov
ret
add
cmpsb
and
out
hlt
push
jg
mov
sub
cmp
cmp
popf
mov
pop
arpl
sub
push
mov
push
cld
jecxz
adc
std
das
jno
inc
jmp
into
and
mov
je
mov
xchg
rcrl
xchg
inc
xchg
lods
sbb
imulb
cmpsb
out
les
fimuls
xchg
and
push
or
cmpsl
add
lahf
xor
push
dec
add
data16
iret
mov
push
dec
push
imul
jno
pop
mov
adc
xchg
jno
fs
int3
sarl
stos
xchg
jmp
push
outsb
dec
add
cmc
stos
in
fildl
cmc
or
jo
testb
rolb
adc
push
push
cmp
repnz
lods
arpl
mov
mov
leave
add
inc
pop
sub
pop
std
cmp
adc
xchg
pop
adc
pop
fiadds
add
pop
xor
cmc
negb
cmp
dec
rorb
and
xlat
inc
xchg
mov
push
sti
enter
add
out
inc
dec
jo
mov
aaa
nop
jo
mov
leave
leave
lock
daa
push
xchg
leave
mov
inc
lods
in
pop
pushf
lcall
dec
xor
sti
xor
and
cli
hlt
push
or
in
or
dec
jp
sbb
mov
sub
stc
mov
nop
test
and
fistpl
mov
div
loop
test
jns
add
jo
stos
pushf
push
enter
and
and
cltd
inc
popa
lret
sub
nop
sub
neg
imul
filds
cmpsl
ds
mov
std
jecxz
or
imul
rclb
shll
xchg
xchg
and
sub
loop
mov
push
inc
adc
mov
cwtl
arpl
adc
mov
mov
in
xchg
repnz
pop
lds
out
into
popa
mov
dec
and
xor
inc
inc
je
adc
add
xchg
stos
pop
daa
addb
sahf
push
mov
mov
insb
and
mov
cmp
inc
jno
dec
push
jmp
push
lods
repz
ds
rclb
fsub
push
addr16
cmp
jbe
jnp
and
cs
fnstenv
push
hlt
add
in
movsb
jns
sbb
adc
dec
rorl
int
sbb
pop
cmp
jb
sbb
popf
jb
jo
adcb
push
add
mov
add
test
dec
test
jbe
add
inc
inc
sti
cltd
sbb
adc
enter
mov
inc
aam
stc
and
jecxz
pop
negl
mov
jnp
mov
push
in
xchg
bound
iret
push
fdivrl
stos
xchg
stos
jmp
xchg
out
or
cmp
inc
aad
push
pop
mul
and
hlt
sbb
pop
mov
jb
jbe
arpl
cld
push
jbe
pushf
xor
cmp
loope
pop
ss
xchg
rcll
icebp
movsl
pusha
mov
adc
cltd
mov
inc
mov
fwait
les
cmpsl
iret
cwtl
jg
and
sti
roll
inc
fnstcw
cmp
in
aas
or
mov
mov
push
jp
xchg
or
jno
dec
mul
cwtl
test
pop
or
pop
lahf
or
adc
mov
inc
mov
clc
jl
sub
daa
aas
lods
fcmovnu
jns
mov
fcomps
push
xchg
testb
xor
dec
lea
sub
inc
or
ljmp
mov
cwtl
ljmp
sub
lret
lods
inc
lock
push
scas
insl
push
shl
mov
add
mov
add
mov
push
sub
mov
hlt
call
insl
cmpsb
in
insl
and
push
data16
addr16
jns
add
push
adc
pop
ret
cld
scas
pushf
out
cmp
xchg
mov
rorl
ss
cmp
pop
and
and
imul
popf
aas
adc
inc
lods
repnz
imul
test
pop
jb
insb
sbb
lods
cmc
stos
jo
and
push
fwait
mov
mov
mov
divb
pop
adc
inc
das
xchg
cmp
add
loopne
inc
xor
test
bound
adc
add
xchg
mov
jmp
sub
xor
das
sub
add
adc
subb
ljmp
mov
dec
inc
adc
ret
in
pop
sbb
ficoml
pop
inc
pop
daa
aaa
shrb
out
loope
add
faddl
add
push
or
sahf
lret
jp
xchg
in
scas
lds
jle
repz
push
scas
add
pop
pop
into
add
js
jo
push
roll
push
dec
inc
divl
xchg
dec
ret
aas
jns
test
sub
lahf
in
jnp
out
mov
xchg
xchg
test
push
out
sub
iret
ss
dec
test
sbb
sub
lea
enter
mov
sbb
jl
xchg
idiv
cmc
pop
sbb
enter
ja
neg
out
test
push
icebp
pop
ret
xlat
inc
dec
cmpsl
add
outsb
add
ret
call
sbb
cmp
xlat
inc
sub
mov
sbb
inc
repnz
add
cmp
push
ret
add
jecxz
popa
shlb
and
and
test
lret
fidivl
stos
push
bound
jl
push
loopne
ret
sbb
cmp
js
cwtl
inc
aad
and
mov
cmp
fbld
pop
push
lods
mov
sub
mov
int3
push
mov
pop
dec
das
mov
mov
stos
jae
push
sarb
jnp
cmpsb
mov
aas
dec
fldt
aas
sub
cmc
loopne
add
aas
aad
and
and
jb
xor
push
mov
dec
jle
mov
jecxz
push
mov
les
leave
cld
adc
imul
aaa
push
xchg
aam
add
loope
jecxz
xchg
out
loopne
pusha
out
mov
sub
daa
sbb
sti
insb
cltd
out
lods
pop
out
sub
inc
shrb
pop
inc
mov
cmp
scas
or
xchg
jge
fisubs
repnz
mov
and
ficompl
cltd
pushf
subb
xchg
not
ljmp
dec
jmp
mov
cmp
aaa
jg
pop
lock
stc
les
in
loop
ds
xor
lods
adc
inc
or
xor
lea
clc
pop
mov
inc
sbb
jge
inc
dec
mov
mov
add
dec
and
cwtl
push
popf
push
mov
incb
imul
loope
nop
jns
dec
push
push
sbb
push
add
test
adc
pop
std
sub
sub
add
ja
cmp
ret
fwait
nop
in
test
mov
fnstcw
fabs
ja,pn
lods
imul
sti
mulb
sbb
push
fld
jle
pop
or
test
mov
sub
sbb
jmp
popf
mov
jns
sbb
or
in
sahf
fadds
xchg
aam
sub
test
in
cmp
push
mov
mov
movl
pop
push
fildll
add
jl
sbb
call
std
int3
cs
dec
sub
dec
mov
jp
or
mov
int3
jns
fadds
or
int
pop
ret
and
gs
test
pop
ret
into
xchg
sar
dec
fs
test
ljmp
or
andl
iret
mov
insl
sub
xchg
or
xchg
mov
xor
iret
jecxz
leave
pop
sbb
mov
mov
jg
cmpsb
fs
popa
mov
loopne
adc
xchg
lods
iret
cwtl
dec
sbb
lret
sbb
es
test
mov
cmpsl
inc
mov
adc
xchg
pusha
or
flds
xorb
jecxz
rol
sbb
pop
jmp
fs
lds
in
sbb
sar
xchg
sub
mov
jle
imul
xor
adc
ror
xchg
and
pop
push
jns
mov
mov
mov
xlat
mov
jle
ss
into
xor
mov
ss
jge
daa
sbb
in
pop
pop
xor
inc
sub
stc
mov
or
add
sti
sbb
jge
clc
inc
sub
pop
mov
xor
mov
mov
sbb
imul
mov
sub
dec
push
loop
jb
nop
fnstsw
sbb
sub
jae
imul
lcall
sub
inc
jo
pop
push
mov
out
mov
cmp
scas
add
sbb
mov
adc
mov
out
jg
cld
andl
lcall
test
xchg
jge
add
xchg
int
insb
test
pop
out
aas
inc
dec
or
sub
jb
jl
outsl
add
lcall
add
ficomps
inc
into
jmp
pushw
cmp
push
mov
xchg
int
sbb
int3
add
pop
int
mov
cltd
lret
ja
insb
jl
js
add
inc
inc
loope
pusha
xchg
mov
and
jmp
enter
and
mov
xchg
dec
jl
mov
sahf
rorl
sub
lret
mov
lods
sbb
mov
xchg
out
sub
das
fsubrs
push
adc
push
ds
mov
bound
call
ja
mov
nop
jg
or
lods
xor
push
inc
fdivrl
in
jge
and
mov
xchg
xchg
inc
fnstenv
xchg
jp
push
popf
inc
cmpsb
mov
lret
xor
cmpl
mov
cmpsl
sbb
leave
stc
dec
insl
nop
fistpl
data16
mov
xor
jb
sbb
add
adc
scas
mov
xorl
mov
xchg
ja
pop
enter
add
adc
xchg
xor
lret
sahf
imul
addr16
or
js
mov
and
ja
jnp
loope
mov
cmp
mov
lods
daa
test
call
mov
xchg
jl
loopne
pop
adc
cmp
push
bound
jmp
mov
push
inc
mov
insl
out
test
sahf
mov
rcrl
imul
adc
js
cmp
inc
enter
ret
rcl
push
and
daa
push
fdivs
rcrb
enter
pop
stos
pop
lahf
fwait
push
bound
xor
fcmovnu
inc
inc
xchg
mov
push
adc
add
push
or
adc
xchg
cmpsb
in
test
cli
jae
jle
add
outsb
repz
mov
sbb
inc
jno
xor
cmc
xchg
inc
mov
jb
jnp
ss
daa
mov
xchg
jnp
ss
imul
or
int3
cld
mov
rcrl
jle
in
cmp
xchg
daa
mov
inc
test
xchg
andnps
mov
in
mov
pop
push
cmc
xchg
fisubrs
sub
sbb
repnz
icebp
mov
cmc
and
stos
stos
fldl
cmp
xchg
xchg
movsb
push
fs
or
pop
sub
inc
and
xor
aam
mov
push
lcall
and
xlat
pop
mov
xchg
cs
out
aad
sti
xchg
push
pop
enter
cli
repz
adc
shll
adc
push
mov
in
out
subl
les
cltd
pop
pop
shlb
dec
movsb
dec
push
filds
add
xor
fimuls
pop
or
mov
pusha
adc
xchg
cmc
mov
jle
adc
mov
or
mov
aam
xor
and
cmc
mov
iret
xchg
pop
call
jge
mov
fsts
sbb
sub
or
in
dec
mov
push
iret
push
mov
out
outsl
loopne
nop
rcrb
stc
loope
pop
xor
adc
pop
int
ljmp
lret
adc
xchg
fdivrl
arpl
and
or
push
mov
cmp
adc
or
outsl
cmp
xchg
hlt
shlb
inc
rep
lock
inc
xor
out
dec
test
iret
pop
mov
push
inc
mov
rcll
cwtl
out
push
push
les
outsl
dec
inc
mov
dec
ss
ds
lea
mov
mov
inc
pop
jmp
stc
gs
mov
dec
dec
into
ds
int3
push
xlat
and
add
sbb
incb
cltd
leave
xchg
push
in
aad
fstp
inc
scas
mov
mov
dec
fcmovnb
add
cld
ja
loope
jbe
shll
dec
adc
adc
ret
adc
mov
sub
add
sahf
aaa
and
in
adc
sub
mov
pop
dec
ss
mov
mov
stos
mov
pop
icebp
pop
movsl
out
aad
lock
and
cli
aas
mov
jb
gs
mov
and
loop
cmpsb
outsl
cld
cmp
xchg
repnz
fs
dec
dec
out
lea
and
std
test
or
sarl
int3
out
cwtl
les
cmpsl
jbe
repz
shr
shr
adc
aam
xor
xor
scas
adcl
xchg
aas
push
cld
mull
test
mov
lret
stc
ret
sbb
lahf
ljmp
je
fsubl
mov
push
inc
pop
in
push
sub
xchg
pusha
push
js
sbb
dec
pusha
fildll
xor
loopne
lds
jmp
add
mov
sti
ja
and
pop
xor
sub
xchg
loope
insb
ss
mov
mov
inc
loopne
in
pop
int3
test
enter
xchg
ja
push
inc
mov
imul
notb
mov
cmp
jp
xor
push
push
dec
cmpsl
les
mov
push
aaa
hlt
pop
pop
aas
inc
adc
mov
and
cld
lods
ljmp
sub
jae
jno
lods
push
mov
sbbl
mov
jge
cmpsb
or
outsl
sub
lea
xor
mov
push
repz
push
jmp
cmp
sub
mov
lea
add
in
out
out
inc
jne
iret
mov
in
push
or
add
scas
imul
stos
push
lods
jmp
outsb
loopne
pop
mov
jmp
std
sti
pop
pop
mov
xor
jbe
sbb
test
adc
mov
xchg
xor
nop
push
jmp
pop
and
pop
sar
mov
xor
push
xchg
ja
or
push
dec
fs
insl
add
test
xor
int3
jg
jns
stc
cmp
xchg
pop
mov
mov
test
repz
pop
sub
sbb
inc
lea
and
pop
jae
dec
mov
cmp
pop
push
push
xchg
sub
sarb
mov
sub
sbb
inc
out
test
xlat
adc
rcl
out
ret
add
pop
daa
xchg
jne
mov
dec
addr16
ljmp
jg
dec
add
imul
xchg
xchg
in
inc
movsb
sbb
stc
out
out
rcll
xchg
push
push
stos
int
pop
xchg
cmpsl
sub
mov
jns
lods
inc
add
sub
or
sti
and
sub
movsl
popa
lret
sbb
mov
clc
hlt
push
cmp
xor
shll
dec
sub
notb
notb
xchg
dec
cmc
and
adc
mov
pop
das
dec
push
jno
pop
movsl
and
mov
ret
jge
jmp
cmp
out
push
cmp
sbb
jnp
fistps
jp
loop
xor
mov
xlat
push
stos
fisubs
in
jle
xchg
and
rclb
mov
ficoms
mov
test
popf
enter
pop
add
xchg
sub
lods
sahf
ja
mov
scas
dec
and
sbb
lods
cltd
idivb
xlat
mov
inc
dec
mov
xor
or
mov
cmp
scas
add
lcall
push
out
aaa
push
sbb
jb
clc
jne
mov
push
pop
push
adc
xor
mov
outsl
xchg
mov
mov
cmc
inc
pop
pop
and
imul
jo
sub
xchg
leave
out
cmp
mov
loope
push
adc
mov
fildl
pop
xor
xchg
push
dec
xchg
xchg
out
fiadds
aaa
aas
xlat
insl
push
and
add
dec
lods
mov
sbb
push
inc
mov
cltd
push
xor
in
pop
mov
test
sub
call
mov
sbb
mov
xchg
call
insb
pop
fistl
xlat
gs
jns
or
push
outsl
lahf
mov
jg
ds
addr16
leave
arpl
sbb
adcw
decb
cmp
xchg
jae
inc
sub
sbb
pushf
gs
push
sub
enter
mov
pop
shrb
sub
pop
push
cmpsl
ja
scas
sub
mov
pusha
xchg
shl
mov
lret
cmc
js
lret
gs
les
pop
insb
filds
outsb
out
dec
fisttpll
add
cmp
mov
pop
lret
mov
lds
bound
in
push
int
xorl
sti
jl
cmp
jne
std
adc
rorl
mov
shr
or
jo
pop
inc
mov
icebp
mov
adc
inc
push
pop
popa
sub
cmc
test
xchg
inc
adc
ret
mov
pop
jg
cltd
je
mov
sar
pop
ffreep
and
sti
and
in
mov
xchg
or
pop
lret
clc
outsl
insb
out
sbb
cmp
scas
outsb
lcall
mov
insl
xchg
mov
mov
mov
int3
sub
sub
scas
lea
je
sub
loope
xchg
jp
lods
xchg
ds
dec
cmpsb
cmpsb
dec
lods
xor
incl
test
mov
fcmovne
mov
xchg
sub
xchg
test
test
xchg
repnz
sub
ss
adc
sti
jnp
sbb
mov
dec
sbb
sbb
inc
dec
dec
push
sbb
aad
je
mov
cmpb
xor
push
divl
arpl
jno
cmp
fst
sbb
insb
mov
mov
das
xchg
inc
add
in
rcr
insb
in
cmpsb
ds
cmp
movsl
push
or
sub
lret
adc
fstpl
es
mov
pop
scas
andl
push
shll
lret
push
and
mov
pop
push
cmp
or
xor
jae
mov
xchg
mov
outsb
push
cs
ds
insl
or
adc
add
fwait
mov
pop
popf
int3
flds
adc
aas
fs
mov
aaa
sti
jle
jg
cmp
rolb
mov
shlb
mov
cmp
fimull
cli
int3
stos
fstpl
mov
xchg
and
jl
test
mov
mov
mov
lret
mull
jmp
jno
xchg
cmpb
cld
pop
cli
cmp
cmc
xor
lret
cmp
dec
mov
cs
mov
lds
pop
sbb
inc
xor
adc
cmp
pop
inc
stc
mov
mov
inc
push
mov
lock
mov
sti
and
mov
dec
or
jmp
and
inc
lea
push
mov
jo
inc
xchg
xchg
mov
outsl
leave
ss
lcall
or
xlat
rcl
int3
cmp
repz
mov
mov
add
xchg
out
add
mov
in
rolb
scas
sbb
sbb
cltd
push
loopne
sahf
mov
and
in
sarb
test
xchg
mov
out
jno
mov
int3
jp
out
push
sbb
dec
idivl
lds
dec
push
push
push
adc
adc
jg
cltd
es
push
bndldx
fstpl
imul
std
stos
out
sbb
push
mov
xchg
fldenv
sarb
call
and
xorl
bound
jp
xlat
div
out
int3
iret
ret
scas
cmpsb
or
andl
loope
push
icebp
arpl
or
cld
out
inc
gs
jge
nop
sbb
mov
jmp
imul
out
sub
cmp
andb
jae
add
or
xchg
pop
dec
negb
in
mov
dec
sbb
xchg
pop
lret
jmp
pop
adc
sbb
mov
add
xchg
arpl
das
jno
movsl
xor
inc
lods
sbbb
mov
or
inc
mov
push
fdivr
lret
fistpll
mov
push
lods
adc
js
dec
cmp
jp
fadds
pop
jmp
jmp
and
sub
sub
and
addr16
daa
stos
or
lds
and
arpl
cmpsb
sub
push
mov
cmpsl
mov
out
xchg
enter
notb
jle
pop
ret
push
push
adc
xlat
out
pop
xchg
movsl
mov
mov
loopne
mov
xchg
iret
cmp
out
mov
aaa
hlt
or
pushl
sbb
pop
mov
ss
inc
xchg
pop
inc
pop
fwait
add
add
dec
inc
dec
sahf
in
outsb
xor
inc
aad
andl
stc
jb
out
inc
sbb
adc
fdivl
add
fidivl
js
pusha
stos
push
pushf
ret
dec
fwait
jmp
rolb
xor
ja
test
dec
ja
rorl
sbb
repz
mov
xchg
icebp
pusha
inc
jle
mov
mov
jbe
arpl
cld
ljmp
pushf
and
sub
xchg
xchg
clc
push
inc
add
pop
adc
push
call
lods
mov
imul
or
xchg
dec
push
cwtl
sbb
or
pop
sti
xchg
lds
movl
and
test
popf
cmpsl
inc
sub
test
sub
add
lea
movsl
or
shrl
insl
mov
cld
lods
sub
sub
push
shll
lahf
xchg
jmp
mov
int3
push
aad
shlb
pop
adcl
or
pop
add
dec
js
pop
pop
sbb
sub
cmpb
xor
mov
add
rorl
movsl
subb
das
shl
mov
negb
clc
mov
test
adc
cwtl
mov
jl
sub
ss
outsl
lcall
sbb
and
sub
or
xor
jmp
cmc
cmc
sub
xchg
inc
inc
insl
jno
fstps
das
incl
mov
pop
adc
mov
sti
push
fs
clc
xor
shrb
add
fs
cmc
fiaddl
sbb
adc
add
cmpsl
or
aam
push
stos
xchg
sbb
push
in
sub
pop
mov
pop
ret
jl
mov
mov
mov
js
movsl
mov
lret
flds
and
daa
les
push
xchg
add
lods
and
fistl
sarb
hlt
lods
pop
or
mov
xchg
es
daa
xor
out
sub
xor
hlt
or
imul
pop
jnp
repnz
pop
adc
push
inc
cmpsb
inc
movsl
mov
rcrb
loopne
xchg
pop
cs
leave
iret
mov
and
loope
popf
mov
hlt
scas
dec
add
mov
adcb
xor
mov
out
sahf
insb
cmp
xchg
or
or
inc
jg
nop
pop
mov
mov
push
les
add
out
mov
sahf
lret
daa
push
loope
scas
mov
dec
lahf
std
sar
and
cld
inc
or
or
cmp
sti
xchg
stos
test
out
cmp
dec
les
rcrb
mov
xor
mov
fstpt
push
pop
in
mov
cmp
cmpsb
iret
add
out
dec
add
out
bnd
inc
add
xchg
push
in
inc
cmpsb
das
aas
fcoml
push
mov
lock
jge
into
mov
jo
pop
dec
xchg
dec
ljmp
mov
pusha
icebp
dec
sub
jnp
sub
xchg
cmp
cmpsb
test
xchg
cmp
sub
jb
mov
inc
int3
mov
xchg
inc
push
movsb
cmp
cmp
dec
hlt
push
outsb
inc
add
rcrb
aas
adc
sbb
push
add
ds
loop
add
pop
daa
ret
push
call
maskmovq
imull
js
jno
or
jns
rcl
mov
in
movsl
scas
fisubl
jbe
jno
push
push
push
pop
push
mov
test
add
push
dec
xorl
int
cmp
adc
mov
sti
jno
fst
adc
jne
pop
cli
pop
xchg
daa
xor
xchg
push
sbb
jle
xor
and
inc
pop
test
fwait
ss
mov
or
subl
gs
mov
fmull
aam
test
loope
adc
adc
push
xor
stc
cmp
out
push
push
inc
xchg
clc
cmp
clc
mov
mov
lods
inc
gs
jb
cmpsb
dec
out
bound
leave
sub
pop
and
xlat
push
sub
dec
gs
pop
xor
fwait
scas
jp
mov
aas
sbb
int3
jle
push
jb
clc
xchg
sbb
xor
xor
xchg
sbb
sbb
sub
add
mov
call
les
xchg
pop
mov
shlb
xlat
sbb
pop
clc
aam
out
xchg
popf
jb
std
pop
fdivr
mov
and
sbb
neg
in
jb
lret
out
sbb
inc
outsb
lds
scas
push
push
mov
icebp
pop
nop
sbb
loop
push
out
cld
xor
imul
addr16
xor
lahf
mov
loope
adc
fldt
data16
sti
jge
jecxz
mov
sbb
stc
xchg
jbe
jp
cmp
std
mov
mov
aas
jp
push
mov
mov
fisttpl
and
cltd
dec
inc
mov
add
shll
out
adc
jo
aaa
xlat
aad
mov
fsubl
inc
push
push
or
hlt
addr16
mov
push
xchg
fldl
push
and
xchg
mov
or
adc
ljmp
pop
cmp
je
out
int
sub
imul
xor
fisubrl
mov
faddl
test
call
add
cs
cmp
sbb
jl
jns
cmp
stc
add
es
mov
pushf
cmp
xchg
adc
push
xchg
cmpb
sub
icebp
push
add
movb
push
loop
stc
ret
pop
subl
inc
push
adc
jb
std
xor
rolb
pop
push
xchg
mov
pop
pop
sbb
cld
enter
pusha
mov
loop
pop
aaa
push
xchg
push
js
push
mov
sub
or
fucomi
inc
outsb
popf
orl
aaa
popf
or
sbb
cmp
mov
mov
bnd
ja
fdivl
jge
ja
add
mov
js
scas
fs
lret
fstps
sub
and
sahf
cmp
clc
std
push
movsl
push
stos
xor
sbb
and
fstl
cmp
fadds
cwtl
andb
xor
lods
icebp
jp
mov
mov
bound
sub
insb
pop
mov
mov
push
movd
fisttpl
aaa
xchg
shrb
out
mov
push
in
mov
jae
mov
mov
xor
scas
mov
mov
xorl
sub
ret
push
lods
std
xchg
and
mov
sub
cmpb
addr16
mov
jp
arpl
scas
icebp
sub
cmp
pop
mov
cmp
in
jl
cltd
mov
add
repnz
pop
mov
rolb
or
jnp
mov
cld
sbbb
gs
sbb
and
ljmp
xor
pop
or
add
cmpsl
mov
jo
fistps
outsl
xchg
test
inc
push
xor
mov
mov
mov
loope
cs
sbb
lock
jne
adc
push
flds
testb
sbb
pop
xorb
ret
add
pushf
hlt
pop
sti
sub
adc
inc
sarb
jmp
sbbb
ror
inc
push
pop
mov
dec
stc
cmp
mov
dec
mov
sub
shl
sub
mov
jp
jo
adc
leave
aaa
ss
jmp
pushf
outsb
test
fiadds
lock
scas
int3
add
mov
dec
cmc
fcmovu
cwtl
pop
adcb
stc
inc
push
stc
mov
sbb
outsb
sub
push
out
outsl
test
in
ficoml
addr16
and
inc
jmp
faddl
add
dec
cmpsl
pop
xor
xor
test
das
sti
jno
or
xor
pop
ja
cmp
fsubr
pop
mov
out
sub
call
pop
dec
xor
rolb
mov
inc
mov
mov
cs
or
or
mov
jne
pop
repnz
test
xchg
int
cwtl
andl
cmp
cwtl
in
push
push
pop
or
pushl
cmp
sbb
push
test
ret
dec
xchg
popf
subb
sub
cli
cwtl
pop
repz
jmp
mov
jbe
div
int
add
adc
in
stos
push
jne
pop
xor
mov
xchg
pop
pop
and
xchg
iret
insl
test
dec
xchg
dec
or
icebp
arpl
rcrl
fistl
sbb
push
ret
imul
or
in
or
test
loop
lea
push
cmp
mov
pop
rcrb
out
cld
outsl
sbb
lods
ret
mov
cwtl
lea
mov
add
fidivl
mov
cmc
mov
hlt
push
pop
push
jmp
aas
scas
int3
dec
push
push
mov
and
pop
in
mov
rcl
xchg
dec
jge
mov
mov
ljmp
sbb
pop
sub
mov
iret
jmp
xchg
mov
inc
sub
incb
push
cmp
xchg
sahf
in
xchg
add
dec
cwtl
js
cld
mov
mov
shll
dec
push
mov
cmp
ret
les
or
jno
ss
sub
bound
xchg
or
out
popa
xor
push
pop
mov
repnz
push
pop
cmp
adc
ds
and
or
mov
addr16
mov
jmp
loope
lods
bound
mov
inc
scas
fistpll
movsb
inc
movsl
push
inc
inc
roll
daa
loopne
inc
je
jae
out
mov
les
rorl
out
push
ret
xchg
mov
dec
shrb
clc
outsb
out
sbb
inc
mov
sbb
or
adc
xchg
outsl
mov
decb
fstpl
mov
push
daa
clc
stc
sub
jns
shrb
sub
mov
lds
fdivr
cmp
pop
loopne
popf
lahf
add
aaa
lock
mov
sti
mov
movsb
pop
je
mov
cmp
adc
cli
ljmp
lds
push
xorb
fildll
jmp
mov
aam
and
dec
xor
mov
xor
inc
sub
cmp
jle
call
adc
fcmovbe
lret
xchg
xchg
cmp
popf
xchg
pop
push
cld
inc
ficompl
jp
movsb
push
xor
mov
sub
rcll
push
pop
mov
push
std
test
mov
adc
ficoms
and
lahf
pusha
push
pop
xchg
imul
mov
pop
scas
std
jae
fimull
mov
and
shr
adc
fnstcw
xchg
jno
int
test
sbb
stc
mov
out
inc
gs
inc
jge
loopne
pop
add
or
lds
loopne
pop
jae
push
push
push
stos
sub
out
std
mov
inc
lret
ds
stc
in
dec
jb
jecxz
repnz
push
xchg
push
jg
mov
pop
das
ds
lcall
sub
bound
inc
adc
rcrl
or
sbb
inc
pop
xor
hlt
cmp
and
push
pop
lock
bound
sahf
or
das
test
dec
or
into
daa
jne
lock
add
mov
push
jo
push
push
add
adc
mov
pop
mov
xchg
jne
add
sbb
test
sub
xchg
jne
int3
rcl
add
mov
add
add
fldcw
arpl
pop
aaa
hlt
xor
jnp
push
imul
clc
rcr
pop
pop
in
in
pop
leave
mov
push
mov
jnp
cmp
scas
sahf
inc
into
xchg
les
imul
sbb
rcrl
pop
loope
sub
cmc
jo
stos
into
inc
add
ds
sbbb
xor
adc
enter
dec
push
sub
loopne
dec
rol
adcl
into
fdivrs
sti
loope
negl
aad
scas
aam
fistl
test
mov
lods
imul
or
adc
push
out
dec
fisubs
rorl
xchg
pop
std
adc
dec
adc
inc
jecxz
sbb
and
stc
sahf
movsb
xor
incb
push
push
loop
js
mov
adc
push
pop
sub
or
shrl
std
sub
pop
or
ja
and
fsubrs
jle
xor
dec
cmp
add
rol
push
addr16
fbstp
lahf
inc
addb
xor
dec
jbe
fldt
adc
inc
sti
inc
mov
popa
outsl
or
or
and
push
inc
les
lret
xchg
scas
cmp
cmpsl
into
xchg
cmp
xchg
iret
and
sub
inc
mov
adc
push
and
daa
xchg
lahf
push
mov
add
pop
into
or
popf
push
stos
lcall
pop
pop
add
loope
adc
cltd
cmpsb
mov
mov
clc
xor
fs
jle
or
xor
dec
push
fnsave
push
push
test
icebp
push
lret
outsb
or
mov
in
aaa
sti
rcr
lahf
gs
aaa
or
jle
fdiv
xchg
dec
lock
sahf
sahf
and
sbb
mov
das
je
push
fisubrs
inc
inc
and
add
pop
ffree
inc
xchg
fadd
cwtl
cmpsb
dec
stos
xor
dec
test
mul
adc
mov
pushf
sarl
int3
daa
dec
push
mov
lds
adc
push
xor
bound
je
jmp
in
les
stos
adc
popf
int
subl
mov
jp
aam
xchg
xor
jbe
and
ja
inc
out
xchg
je
cld
push
cmp
imul
fidivl
in
out
lret
dec
cmp
inc
mov
jl
jge
pop
mov
repz
shlb
lret
outsl
pop
add
repz
sbbb
jl
or
movsb
lret
andb
and
pop
jmp
bound
inc
jmp
and
ret
das
int3
xchg
out
mov
cmc
sahf
xchg
dec
test
test
mov
test
sbb
nop
inc
ja
pop
cli
out
dec
and
add
jmp
push
adc
add
pop
lret
lods
adc
pop
cmp
aad
loope
popf
inc
xchg
sti
xchg
imul
stc
or
mov
fs
imul
cmp
sahf
out
arpl
fsub
icebp
sub
push
inc
lea
rcll
in
sbb
test
mov
fwait
sahf
outsl
fwait
fs
ja
xchg
enter
cmc
mov
xchg
cmc
add
ret
stos
popa
jge
mov
cmpsb
add
mov
and
jmp
sbb
mov
js
mov
or
repz
cld
iret
sbb
sbbl
movsl
jl
jne
cli
dec
mov
das
inc
outsl
out
mov
dec
mov
and
and
leave
shlb
jp
jl
add
fsubrl
dec
mov
adc
dec
mov
sub
adc
mov
xlat
mov
cltd
data16
imul
cltd
or
sbb
test
cmp
je
mov
push
jg
andl
cmp
mov
fiadds
xchg
call
in
aam
inc
call
xchg
loop
lock
pop
call
push
std
shll
xor
inc
faddl
in
hlt
inc
jmp
pop
add
call
inc
in
mov
insl
xor
xchg
mov
push
push
movsl
jbe
scas
inc
sub
add
jae
push
aam
sbb
pop
xor
out
popa
xchg
and
sbb
mov
loopne
fidivrs
jg
mov
imul
add
lcall
xor
mov
enter
mov
fnstenv
xor
jae
mov
jmp
xchg
pop
fwait
lea
fwait
test
push
ja
idivl
ffree
js
sbb
xchg
xor
shll
sub
mov
std
dec
aaa
xchg
pop
ret
pop
pop
ja
add
mov
stos
xlat
loop
fs
lret
mov
push
pusha
push
loope
mov
jbe
ss
push
lret
fsubl
sbb
push
ss
pop
mov
fstpt
push
addl
xchg
inc
sub
push
pop
inc
pop
and
test
or
enter
mov
xor
mov
cs
adc
or
lret
sub
lret
cmpsl
aam
mov
iret
adc
imul
addr16
mov
sbb
aas
pop
clc
insl
popa
sti
mov
lds
xor
lods
sub
mov
es
pop
cmp
cmpb
push
mov
cmp
push
loopne
xchg
int3
testb
lods
lds
packssdw
daa
icebp
push
std
xchg
movsl
imul
lcall
mov
rorl
pop
lcall
push
jnp
pop
dec
cli
jns
scas
in
xchg
adc
call
xor
cmp
cmp
xor
pushf
in
adc
xchg
pop
std
test
es
divps
fsts
jne
inc
lock
loope
lret
jae
mov
out
aas
in
mov
loope
xchg
outsl
test
mov
mov
pushl
cli
pop
and
jnp
lods
mov
data16
push
loopne
test
mov
mov
sub
mov
dec
mov
sub
dec
xlat
pop
mov
clc
inc
pop
fstps
and
hlt
cli
push
inc
in
ss
sarb
addb
repnz
lret
jge
add
jns
xchg
movsl
out
rol
inc
push
int3
icebp
pop
leave
xor
inc
aad
ret
hlt
dec
adcb
mov
scas
fsub
push
cmc
inc
xor
and
and
int
add
arpl
rclb
pop
pop
test
divl
shlb
push
incb
and
adc
fwait
sub
jae
xor
stc
movsb
cmp
sbb
lret
cmc
stos
test
popfw
and
dec
inc
jecxz
inc
sbb
cmp
mov
and
mov
xor
adc
test
rol
rorb
jne
insl
imul
xlat
movsl
loopne
mov
dec
in
jbe
mov
xchg
int3
shll
in
mov
add
test
cmp
mov
repnz
arpl
in
mov
jb
pop
mov
jp
or
ljmp
out
mov
pop
sbb
dec
das
lahf
mov
out
mov
lods
lds
lea
pop
inc
subl
pop
push
push
fs
xchg
ja
or
loop
addr16
ljmp
cmpsl
fdivr
nopl
cli
mov
jp
mov
pop
jle
dec
mov
xor
mov
inc
push
lcall
out
cltd
stos
fistl
cmpsl
xchg
hlt
push
or
fdivs
leave
cmpsl
lahf
mov
add
ret
sub
leave
mov
jmp
clc
xchg
js
cmpsl
cmp
sbb
and
xor
test
pop
sahf
jno
lods
mov
scas
lock
push
mov
scas
jl
and
pop
add
in
cs
jl
adc
es
sbb
pop
push
ja
xchg
movzwl
fmuls
or
fwait
pusha
inc
inc
clc
aas
nop
xchg
mov
xchg
cmp
test
xchg
ss
or
mov
mov
cmpsl
and
out
jmp
repnz
mov
imul
adc
cwtl
lds
inc
lcall
mov
dec
fimull
cli
dec
xor
pop
dec
push
and
jge
aam
push
loope
dec
sub
pop
repz
pop
pop
jno
mov
inc
andl
push
jle
rorb
cltd
xor
nop
jl
push
pop
ret
add
arpl
test
je
jbe
lea
dec
jg
repz
inc
clc
pop
pop
rol
add
dec
pop
pop
push
popa
dec
cmp
lea
push
pop
xor
outsl
stos
in
push
or
repz
and
mov
ds
and
dec
sub
bound
out
sbbl
ss
mov
jne
fildll
js
jmp
inc
xchg
xchg
clc
jge
mov
lock
testl
mov
shl
movsb
cmp
sbb
jnp
cmp
leave
cmp
inc
pushf
xor
jns
jge
xchg
test
out
out
lret
mov
repz
xchg
pop
pop
repnz
sbb
sub
loope
ja
push
lods
push
mov
outsb
rclb
inc
ret
xchg
mov
mov
rclb
pop
movsl
insb
cmc
js
test
adc
imul
mov
mov
or
lods
inc
pop
pop
xchg
jae
mov
cltd
xlat
pop
dec
sbb
pop
and
mov
pop
push
cmp
sbb
dec
in
jo
fimull
mov
adc
sbb
insl
inc
addb
adc
pop
mov
gs
fcmovnb
test
jae
les
ror
adc
lds
mov
xchg
xor
popa
and
sub
and
insb
cmovo
xor
stos
cli
adc
fsubs
jecxz
popf
cmp
stos
jne
add
adc
and
repz
movsl
xlat
test
mov
stos
pop
mov
imul
jge
shll
fsubl
imul
add
inc
punpckldq
mov
imul
pop
shll
sbb
or
outsl
aaa
pop
push
pop
sbb
out
add
test
or
scas
aaa
push
mov
mov
dec
scas
aad
fisttps
test
shl
push
inc
arpl
xor
repz
and
mov
inc
push
and
into
std
cmp
lods
stos
nop
sbb
test
cmp
jg
xor
add
divl
mov
stos
add
mov
aas
lock
cmp
xchg
or
push
stos
sub
mov
sti
sub
daa
or
ljmp
pop
pop
movsl
xor
adc
and
xchg
or
insl
cwtl
push
lcall
mov
fwait
push
lods
lret
sbb
push
and
jns
movsb
mov
push
loope
icebp
and
dec
jbe
xchg
out
push
dec
or
movsl
xchg
mov
out
jmp
negl
dec
aad
cli
adc
add
pop
push
dec
sub
push
xor
xchg
dec
call
mov
mov
stc
ljmp
ret
and
ja
movsb
adc
imul
call
outsb
sub
push
sbb
pushf
pop
scas
xor
xchg
push
shrb
mov
add
cmp
dec
push
dec
pusha
ffree
sub
dec
inc
lock
mov
int3
mov
in
dec
iret
out
dec
jns
ret
out
ljmp
ds
and
icebp
outsl
rolb
or
std
ljmp
adc
mov
mov
add
inc
enter
sub
push
rcll
jecxz
push
icebp
xor
jmp
mov
call
data16
leave
stos
movsbl
fs
mov
jo
pop
andb
sub
xor
and
loope
and
cmp
push
cld
and
mov
pop
into
fldln2
dec
jmp
outsl
sarl
pop
test
xchg
jns
pop
cmpl
outsb
push
jnp
sbb
jbe
lock
mov
loop
lock
mov
lret
sbb
imull
test
movsb
pop
aad
or
ret
mov
lret
inc
fldt
ja
and
xchg
fcoml
mov
inc
adc
or
or
hlt
pcmpeqd
sub
lea
orb
and
call
test
mov
mov
adcb
ror
pop
sub
inc
xor
mov
jnp
and
lret
mov
nop
imul
fisubl
ja
popf
mov
mov
sbb
nop
nop
mov
pop
subb
push
pushf
dec
das
sub
pushf
add
les
lahf
cmp
xchg
test
inc
push
in
je
fidivs
xor
pop
inc
add
fstl
into
sbb
or
test
or
pop
in
icebp
stc
cld
cmp
lret
test
in
mov
scas
xchg
mov
shlb
iret
adc
ficoml
inc
xor
sbb
addr16
mov
dec
popf
imul
sbb
faddl
arpl
mov
mov
mov
mov
outsl
je
push
dec
out
nop
les
mov
jecxz
pop
dec
das
ret
add
jp
jne
mov
sbb
ds
cmpsb
add
mov
push
inc
leave
cmp
rolb
out
sub
or
jmp
ficoml
hlt
hlt
jmp
adc
mov
outsl
sub
aad
iret
test
fisubl
xor
sub
and
or
cmp
ljmp
mov
inc
add
scas
cmp
out
lock
out
dec
in
int3
mov
xor
pop
and
testb
inc
es
addb
popf
decb
pop
xchg
pop
add
das
xor
fiadds
mov
jmp
cltd
aad
cmpsl
int
es
or
xchg
pop
cs
cwtl
lock
xchg
jle
jp
dec
ret
aam
fadd
and
repz
push
mov
and
test
loope
xchg
fwait
cmp
ds
add
fnsave
sub
mov
fcompl
rcrl
adc
scas
jmp
mov
sub
pop
movsb
mov
pusha
jae
sbb
outsb
insb
cmpsb
arpl
sbb
jns
loope
popf
inc
mov
push
call
or
add
cmpsb
sub
cmc
mov
outsl
mov
sub
mov
inc
adc
lahf
push
test
adc
xor
test
pushf
jo
sub
xlat
mov
cmpsb
xchg
dec
popf
push
ret
fildl
daa
jnp
mov
dec
jae
shll
sub
sub
xor
or
xor
jnp
xor
data16
das
mov
mov
int
sub
shll
mov
dec
adc
fists
sbb
push
inc
loopne
test
mov
inc
ljmp
lods
add
ret
or
push
adc
sbbb
pop
push
jo
jmp
jle
push
in
cmp
clc
dec
xchg
push
adc
and
add
mov
jmp
add
imul
push
add
fldcw
pop
push
inc
fdivrs
pop
sub
ret
jne
test
sahf
dec
jl
fldenv
xchg
mov
jg
xor
ljmp
mov
daa
pop
mov
daa
mov
pushf
lea
sub
fs
sub
les
sub
add
and
addb
pop
subb
icebp
xlat
push
xor
rcl
jae
and
push
pop
inc
xchg
pop
loopne
and
mov
jle
cmp
popf
call
gs
repz
xchg
cmpsl
xor
cmp
rcrb
lret
inc
lea
fdivr
lcall
push
ja
ljmp
or
imul
outsl
xchg
xchg
sahf
repz
push
ja
out
xchg
cmp
addr16
cmp
leave
mov
adc
and
popf
push
cs
in
mov
dec
pushf
mov
mov
and
jae
jmp
loopne
and
cwtl
arpl
xchg
adcl
pushf
sub
sar
rcr
jmp
ret
adc
inc
in
pop
xchg
out
or
mov
dec
shrb
pop
fidivs
popf
test
sub
test
pop
aad
movsb
add
pop
push
lods
std
idivb
inc
xor
xchg
inc
mov
sarb
push
and
inc
xchg
jbe
sbb
das
insl
jmp
jo
repnz
scas
xor
movb
lahf
ret
fs
repnz
sti
lds
fmull
sbb
dec
shlb
jno
jns
sbb
push
or
and
adc
or
ds
xlat
sub
sub
mov
insb
inc
mov
pop
dec
mov
and
ljmp
mov
lcall
fcomps
inc
mov
lea
pop
ficoml
xlat
pavgw
cmpb
xlat
xlat
cmp
lret
mov
cmp
ja
test
push
adc
popf
jns
rcl
xchg
leave
js
jnp
ret
pop
xchg
test
fucomi
adc
pop
dec
add
mov
push
dec
sbb
lea
xlat
aam
fs
outsb
test
fsts
test
adc
sbb
cmp
lea
or
jns
inc
xor
dec
movsl
mov
push
or
out
aad
test
inc
push
fdivp
lret
mov
jo
ljmp
pop
popf
shl
sbb
cmpsb
ret
shlb
loopne
addr16
nop
or
mov
mov
sub
sti
inc
out
jb
in
mov
xchg
nop
jno
test
sahf
cmc
subb
push
sbb
ds
dec
inc
jmp
push
aad
adc
jo
xchg
or
push
aam
lcall
es
sarl
movsl
loope
inc
inc
into
jbe
mov
mov
in
fldl
adc
and
sbb
mov
les
shlb
or
dec
leave
enter
xchg
or
lret
aam
sahf
jl
sbb
ret
lds
jo
movsb
enter
enter
and
fistpll
jnp
adc
add
adc
test
adc
jmp
mov
call
scas
mov
cmp
fdivrs
enter
into
loopne
adc
push
mov
mov
adc
push
cmp
and
xlat
pop
pop
test
loope
in
jno
scas
and
mov
inc
popa
jns
call
and
daa
call
addb
lock
in
popf
xchg
out
fnstcw
scas
push
xchg
xchg
sub
inc
inc
stc
shrl
mov
cld
push
jg
mov
jl
jo
js
loope,pt
es
frstor
push
xchg
or
jmp
push
testl
test
call
push
jp
or
insb
mov
mov
xor
dec
adc
imul
pop
push
inc
dec
jmp
xor
xchg
pop
add
jnp
xchg
int3
pop
es
sbb
cmp
das
dec
loop
das
mov
sub
jmp
pop
test
loopne
sub
jbe
cld
in
jle
adc
mov
movsl
xchg
adc
cmp
call
inc
jb
into
int
push
pop
stos
cltd
test
decb
ficoml
pop
sub
xlat
mov
cmp
aaa
movsb
add
mov
adc
dec
jne
mov
jecxz
ljmp
xor
push
testb
sbb
scas
add
inc
cmpsl
cli
push
cmp
mov
std
ficoml
xor
dec
mov
ds
lock
insl
nop
dec
cmp
icebp
icebp
andl
cmc
cld
loopne
fcomip
cs
push
sahf
sub
int3
jbe
imul
xlat
sbb
jge
sub
jge
pop
icebp
cld
in
mov
inc
mov
mov
sub
xchg
push
mov
xchg
and
push
aam
test
pop
xor
sbb
pop
inc
scas
push
lcall
outsb
nop
xor
sbb
adc
xchg
jl
popa
out
loopne
and
dec
cmp
adcb
push
fstpt
repz
shrb
sub
scas
inc
mov
jge
adc
mov
xor
inc
mov
out
inc
push
es
in
cmp
sub
or
sub
push
sub
jo
rcl
cmc
jb
inc
es
mov
pop
sbb
gs
mov
popa
mov
xlat
aaa
daa
add
jae
int3
shlb
std
and
pop
push
pop
jmp
xchg
mov
in
push
xor
inc
fmull
ss
ret
fwait
mov
into
lcall
push
push
test
aam
lods
adc
dec
push
dec
nop
std
in
xchg
inc
jge
cmp
add
pop
or
filds
mov
pop
stos
clc
mov
test
shr
xchg
cmpsb
add
jmp
fcoml
cmp
xchg
fsts
notl
lret
jecxz
sahf
xchg
xchg
pop
imul
add
xchg
sub
pop
sbb
scas
push
dec
mov
or
pop
std
les
cwtl
mov
out
imul
lcall
clc
dec
mov
cli
push
dec
add
mov
mov
subb
jae
int
sub
pop
xchg
push
fcomi
movsb
cwtl
dec
pusha
mov
jno
fs
pushf
scas
sbb
push
cmp
rcll
sbbl
pushf
add
pop
xchg
lods
and
imulb
mov
pop
testb
imul
cwtl
in
inc
fstpl
xorb
sbb
leave
shrb
dec
lods
je
fimuls
pop
in
out
or
rcr
lcall
ja
cld
mov
out
test
add
pop
stc
push
outsl
pop
inc
mov
cmc
fmulp
sub
pop
jnp
jmp
cmp
aam
lock
aam
fisttpl
mov
ret
jne
jge
fsubr
ljmp
jae
mov
lods
inc
daa
push
pop
pop
mov
and
jae
mov
aaa
cmp
cmpsb
sub
cmp
lds
sub
mov
je
lea
mov
cmpsb
fcoml
call
andb
xchg
push
pop
daa
ja
mov
mov
sbb
iret
xchg
pushf
pop
cmpsl
pop
dec
mov
stos
in
push
outsl
shrl
cmp
popa
jl
jl
xchg
andb
scas
lea
xchg
shrl
adc
lock
stos
adc
jb
stc
adc
pop
mov
mov
and
test
in
pop
pop
sahf
push
mov
pop
pop
and
test
add
mov
shrl
dec
inc
or
fs
xlat
lods
dec
sub
cmpsb
div
jmp
stc
dec
xchg
inc
outsl
add
pop
lds
pop
mov
and
sub
lcall
fisubrs
push
movsb
mov
add
shlb
jbe
popa
add
mov
test
hlt
ja
xchg
cltd
ffreep
inc
bound
pop
add
inc
outsl
add
jle
xor
add
dec
imul
sbb
inc
fsubs
push
pop
cli
pop
call
ffree
adc
fxch
or
ljmp
push
dec
out
das
xor
xor
imul
push
and
push
fstl
cmp
fists
cmp
pop
cli
sub
les
jbe
inc
sub
sub
mov
xchg
dec
or
adc
or
mov
inc
adc
fstl
push
jle
push
pop
fcom
mov
test
inc
mov
orb
sub
lds
or
and
fwait
movsb
sub
bound
and
and
inc
cmp
pop
push
test
push
jne
pop
xchg
inc
and
sub
fisubrl
xor
addr16
push
sbb
jge
sbb
cli
insb
xchg
mov
ss
sbb
xorl
repz
mov
je
xchg
or
xchg
ljmp
jp
inc
mov
fldenv
mov
sbb
out
sbb
test
pop
call
push
shlb
jmp
jo
shlb
sahf
sbb
mov
xchg
inc
mov
push
push
dec
daa
jmp
sbb
and
xchg
add
adc
stos
mulb
ss
aas
pop
popa
in
pushf
cmpsl
push
testb
imul
movntsd
hlt
jns
jns
pop
jg
rcpps
rolb
fsubl
mov
sub
cmpsb
cmp
mov
test
fdivr
cmp
rcrb
stc
movsb
jl
push
xor
les
aaa
cmp
shll
or
or
jge
movsb
lahf
sub
dec
xchg
sbb
roll
inc
mov
inc
or
fbstp
jb
fwait
mov
xor
jle
mov
jge
cmp
aad
mov
jno
sbb
inc
imul
push
fs
bound
incb
pop
lahf
fisubrl
mov
adc
dec
mov
xchg
je
dec
add
cmpl
xchg
push
fs
push
xchg
jle
xchg
inc
out
or
dec
or
sti
and
mov
inc
xor
sub
shl
push
add
sbb
push
fnsave
lods
adc
addr16
mov
decb
jg
icebp
lret
movsl
pop
sbb
notb
sub
or
push
jge
fidivrs
out
data16
mov
xor
and
or
mov
dec
push
js
jp
sbb
xchg
inc
in
mov
xor
popf
push
movsl
xor
xchg
leave
pusha
jae
or
popa
or
stos
in
mov
in
test
dec
imul
test
fiaddl
out
iret
leave
loop
sarl
cmc
shr
in
dec
insl
pop
add
adc
jge
mov
xchg
add
or
mov
js
cli
jl
das
push
lret
xchg
repz
out
cmpsl
cwtl
insb
push
cmpsb
ljmp
mov
mov
adc
iret
adc
cmpsl
jae
push
add
fcmovnb
addr16
nop
push
adc
mov
dec
mov
adc
shll
mov
cmp
lretw
mulb
dec
sub
stc
add
push
inc
add
and
or
pop
mov
hlt
test
sbb
add
push
jo
or
mov
mov
insl
lret
sbb
jbe
cld
cwtl
or
js
jns
push
pop
mov
aad
sub
call
sahf
movsl
lcall
test
iret
adc
jg
push
pusha
arpl
mov
fwait
and
xchg
mov
inc
dec
incl
xchg
adc
sti
fs
stc
and
sbb
cmc
jl
jb
and
or
and
push
jns
push
aam
inc
jmp
jmp
sbb
cmpsb
and
mov
push
cli
xlat
pop
add
fucomi
out
adc
test
addr16
inc
movsb
sbb
jp
arpl
jbe
jg
mov
enter
xlat
or
pop
cmp
adc
loope
mov
mov
add
loope
add
push
or
les
mov
jne
js
mov
xlat
inc
out
lock
cs
xchg
out
jae
mov
popa
xlat
or
test
pop
cwtl
enter
jecxz
ljmp
mov
sub
scas
fsub
push
sbb
jae
fadd
lahf
or
add
mov
mov
push
dec
mov
data16
popa
or
or
loope
xchg
fstpl
cmp
sarb
inc
xchg
sub
enter
xchg
aas
iret
lahf
sbb
out
ret
and
mov
dec
push
xor
jo
outsl
push
or
adc
movsl
shlb
mov
enter
mov
mov
test
lods
xchg
push
testb
pop
stc
add
sub
stos
imul
or
vpunpcklwd
dec
mov
mov
ror
inc
jns
adc
xor
cltd
hlt
dec
rol
jbe
xchg
sbbb
and
fwait
aad
inc
and
and
ret
negl
shlb
pop
add
add
stos
add
lahf
xor
xchg
xor
xor
xchg
int
fisttpll
fistl
xchg
jbe
pop
pop
mov
hlt
fistps
scas
lret
gs
popa
jecxz
jbe
push
xor
repnz
sub
stos
inc
push
xchg
fcoms
lret
repnz
dec
inc
jecxz
out
cmpsb
cmpsl
dec
fwait
sti
dec
nop
lret
ds
xchg
sub
loopne
shrb
inc
cmp
fcomip
es
inc
push
add
in
xchg
rcl
mov
push
movsb
mov
push
pushl
mov
sub
mov
stos
iret
xchg
or
pop
adcb
pop
lods
cmc
xchg
and
push
xchg
cmp
push
stc
rorb
dec
cmpsb
stc
xchg
mov
jb
xor
pop
push
data16
lea
jl
inc
insb
push
xchg
and
or
cwtl
cvtpi2ps
fwait
out
hlt
psubd
loopne
jp
xchg
add
hlt
lods
in
jle
mov
loope
sub
out
or
cld
inc
cwtl
dec
push
cmpsl
aad
wrmsr
cwtl
dec
or
neg
pop
and
jo
jecxz
adc
addr16
in
outsb
sbb
or
inc
jmp
cmp
adcb
bound
push
and
inc
pop
and
addb
out
in
aam
sbb
dec
ret
sbb
test
loope
cmpsb
mov
jb
rcrl
sti
ljmp
iret
mov
popf
mov
cmpsb
push
stc
pop
dec
test
les
sub
mov
adc
inc
dec
ja
mov
inc
clc
imul
ja
xor
imul
ret
add
jle
jle
sbb
rolb
xor
mov
dec
testb
xchg
lds
lds
lods
fwait
lcall
std
daa
mov
xor
push
mov
int3
sbb
dec
mov
addr16
hlt
cltd
pop
inc
fcmove
mov
inc
add
arpl
mov
mov
dec
inc
shlb
dec
lret
lret
cmp
xor
js
pop
jne
ror
inc
pop
insb
push
cmp
pushf
imul
mov
xor
in
mov
or
push
push
in
or
arpl
or
xchg
cmpsl
lret
aad
adc
fs
dec
and
in
fdivs
jge
fs
or
inc
loope
mov
stos
push
out
pop
cmp
xor
xchg
mov
cmp
mov
lock
add
xchg
arpl
push
scas
jmp
dec
lods
insl
repnz
outsb
and
pop
cs
into
stos
inc
fadd
mov
je
ljmp
jecxz
jmp
jne
outsl
lea
lea
lock
xor
cld
hlt
adc
mov
inc
insl
xlat
push
add
roll
xchg
dec
idivb
dec
mov
dec
xor
les
jo
loop
adc
cmove
cld
cmp
stc
mov
inc
enter
sbb
into
jl
imul
xor
sub
jecxz
imul
sub
sbb
jae
push
jo
ja
adc
pop
or
xor
stos
or
shrl
xor
shll
out
pop
or
pushf
add
aad
scas
inc
out
sets
lds
dec
rorl
insb
xchg
ret
inc
call
movsl
inc
rcrl
push
xor
xchg
nop
xchg
ds
sub
xor
push
shrl
mov
sbb
loope
push
daa
sbb
imul
out
dec
cmp
adc
xor
test
inc
outsl
enter
adc
inc
cli
jle
or
fs
test
repnz
scas
enter
pop
jns
xchg
pmaddwd
mov
push
mov
add
aad
jp
jg
sub
or
xchg
cmp
mov
pop
xchg
test
mov
decb
mov
imul
mov
lods
repz
loope
pop
test
mov
unpcklps
faddl
arpl
pop
icebp
or
push
jecxz
add
jne
mov
shll
xor
aas
shr
pop
mov
sub
mov
cmp
movsb
jnp
adc
pop
fwait
mov
xlat
fwait
aas
sbb
push
mul
dec
mov
or
xor
fnstcw
jmp
es
cmp
cltd
imul
sbb
outsl
jbe
xchg
jg
pusha
xchg
xor
cli
mov
fcmovnbe
out
or
ljmp
das
cmc
inc
out
pop
jo
aaa
int3
cmp
jle
jg
add
adc
mov
sbb
push
lods
aas
ds
xor
das
fs
dec
int3
cmp
aam
or
mov
les
mov
xor
in
mov
lods
mov
icebp
loop
jno
rol
ljmp
jbe
or
or
cmp
cltd
pop
sbb
cmp
sub
push
inc
pushl
repnz
sbb
or
pop
xor
es
fimuls
into
jns
xor
test
scas
scas
sub
pop
xchg
shlb
jle
jne
mov
sub
ja
sbb
fimuls
negl
jecxz
pusha
jb
jle
addr16
lcall
mov
stc
lods
xor
cmp
adc
loope
mov
lods
or
gs
and
cmp
nop
cs
or
mov
or
popf
push
xchg
pop
iret
test
mov
xchg
inc
pop
stc
cmc
adc
pop
in
pop
loop
mov
adc
cmp
sub
add
dec
cmpsl
mov
or
mov
and
push
adc
pop
testb
stos
fwait
xchg
popa
iret
jge
xor
push
aad
pop
shll
es
scas
popa
loop
lods
jp
lods
fwait
dec
lea
je
fidivl
inc
imul
iret
daa
pop
insl
arpl
stos
pop
hlt
lock
mov
jecxz
xchg
std
pop
xchg
and
scas
sbb
inc
xor
fildl
les
inc
and
mov
and
cmc
and
test
call
push
pusha
neg
stos
lret
cltd
jp
jp
mov
test
cmp
andl
push
mov
sti
inc
popf
movsl
pop
lret
mov
mov
pusha
popa
cli
int
jg
aad
pop
scas
add
in
insl
cli
leave
add
xchg
sbb
mov
push
lahf
add
sub
mov
mov
xor
test
pop
push
push
inc
xor
xlat
pop
add
ds
xor
or
jne
mov
ljmp
fisttps
jmp
lods
arpl
adc
push
pop
ret
push
rcr
mov
aas
dec
addr16
or
gs
adc
cli
lcall
orb
cs
push
mov
adc
pop
inc
and
pop
sbb
sbb
movsb
daa
sbb
dec
inc
xchg
lcall
dec
mov
and
enter
ja
cmp
mov
dec
js
aam
enter
cmp
imul
push
mov
or
mov
sbb
daa
cs
xchg
jl
cmpsb
outsb
dec
mov
int3
jle
mov
clc
out
push
sub
int
cmp
mov
orl
lods
pop
in
pop
cmp
or
leave
enter
ss
jp
dec
push
lock
jmp
push
stos
test
mov
push
cld
lcall
inc
add
add
lret
xor
sahf
pop
and
sahf
pop
inc
jecxz
sbb
sub
aas
outsb
mov
repnz
push
sahf
jne
mov
lea
sub
jle
leave
dec
ds
test
inc
add
mov
fdivl
adc
add
bound
call
loop
adc
lret
push
aas
add
mov
stc
sbb
dec
shlb
jl
dec
fidivl
pushf
movlps
or
xchg
into
ret
and
pop
xor
icebp
pusha
or
inc
mov
aad
push
sarb
and
mov
shrb
int
or
cmc
aad
test
push
cmpb
cld
pop
adc
fs
loop
xor
jecxz
inc
or
loop
add
mov
loop
add
fsubl
pop
bound
cmp
sti
inc
push
fldl
fnstenv
outsl
adc
xchg
in
lods
pop
pushf
sahf
clc
aaa
xor
ljmp
stc
sub
ja
incl
scas
or
cltd
xor
xchg
loopne
filds
sub
sbb
jp
popf
push
fstl
mov
cwtl
mov
mov
in
jmp
sub
xchg
cmp
mov
fsubrs
aaa
mov
ret
lret
inc
mov
outsb
sub
das
mov
mov
mov
cmc
adc
repz
push
outsb
cmc
sarb
call
sbb
int3
pop
adc
sbb
add
push
mov
mov
hlt
push
dec
inc
inc
hlt
xchg
inc
dec
sbb
cltd
dec
xchg
jb
faddl
mov
shll
mov
push
cmpsb
jne
or
inc
dec
lret
in
mov
xor
fidivrl
sbb
and
mov
enter
xchg
stc
out
aam
and
rclb
mov
jp
dec
cltd
out
add
cld
xor
cmp
mov
in
inc
xchg
mov
rdtsc
pop
sbb
sbb
push
outsb
sub
rorb
insl
mov
faddl
adc
in
jae
les
filds
mov
lds
fcom
nop
in
xor
nop
xchg
mov
cmpsb
in
xchg
sbb
lods
lods
pop
mov
hlt
inc
ficomps
mov
jge
out
xchg
sub
mov
jmp
inc
addl
mul
push
inc
jo
std
addl
movsb
stos
adc
mov
pop
lds
sbb
xchg
xchg
mov
rorb
push
sub
inc
push
ret
pop
cmc
mov
fimuls
or
dec
ds
lock
jae
xor
pop
sahf
rol
jbe
jno
push
scas
jecxz
xchg
mulps
lock
adc
popf
pop
adc
dec
cmp
stos
push
call
dec
pushf
jnp
adc
inc
xchg
repnz
adc
mov
sub
xlat
ljmp
dec
dec
sbb
mov
add
daa
daa
mov
push
sbb
inc
dec
arpl
mov
inc
adcb
mov
mov
pusha
sbbb
xlat
js
dec
mov
sub
inc
cmp
mov
addr16
lret
in
bound
inc
movaps
test
jns
cmc
inc
lock
cmpsl
ljmp
cmpsb
xorb
pushf
or
shll
cwtl
insb
and
stc
shlb
loop
or
push
xchg
dec
add
and
inc
icebp
aas
cwtl
test
pop
in
inc
push
fneni(8087
xchg
lods
aas
jb
fsubr
ret
pop
popa
lahf
std
imul
fsts
out
push
mov
jns
sub
stos
rcll
sarb
roll
ss
add
movsl
aam
idivl
jecxz
push
mov
testb
pop
or
adc
es
test
int3
pop
enter
or
xchg
aam
out
pusha
scas
push
dec
repz
dec
movsl
aam
fnstsw
sbb
pop
xchg
mov
pop
dec
jmp
jb
pop
jmp
jne
push
xchg
pop
les
repz
sarl
or
lock
mov
aad
mov
dec
outsb
aas
xlat
mov
out
jns
ror
push
add
lahf
ret
mov
sarl
jnp
sti
movsl
add
inc
pusha
negb
and
bound
popa
lea
fwait
cli
push
inc
pop
or
jne
pop
inc
cmc
sub
fcompl
adc
lods
jmp
jnp
std
repnz
mov
into
pop
or
push
push
mov
adc
adc
jmp
insb
stc
cwtl
and
jecxz
sbb
sahf
xor
sbb
int
sahf
fs
xchg
negb
jno
imul
xchg
jno
lods
xor
and
jnp
pop
dec
ds
pop
jb
xchg
aaa
std
pop
mov
mov
inc
lea
scas
sbb
add
dec
rolb
mov
frstors
imul
ret
fldt
cmpsb
mov
mov
or
incb
or
inc
pop
pop
dec
jle
loope
cmp
cld
dec
inc
mov
cltd
push
cmp
data16
mov
arpl
flds
lret
jp
jle
cmp
test
jno
mov
adc
jne
adc
add
fwait
cmp
rorl
or
dec
sti
add
jg
cli
fcoms
push
push
mov
jle
dec
add
push
mov
xor
imul
loop
jmp
pop
test
ja
xchg
int3
pop
int
in
repnz
sub
shlb
push
push
fstl
lock
xor
xlat
lea
xlat
cmpsb
push
add
mov
lahf
in
pusha
orb
fbld
mov
pop
arpl
push
lods
rolb
jmp
adc
pop
and
sbb
jb
lahf
lds
or
scas
dec
push
fs
lret
xlat
add
pop
test
cmpsl
mov
inc
dec
imul
and
xchg
loope
sar
loopne
mov
inc
aas
dec
inc
jmp
stc
sbb
subl
ja
leave
cmp
cmp
jge
pop
addl
xchg
cmc
mov
cmp
pop
sbb
xlat
push
or
mov
mov
adc
iret
push
addr16
ror
cli
fisttpll
mov
mov
and
call
cmp
ss
cmpsl
pushl
scas
inc
push
call
jle
dec
or
or
xor
adc
add
imul
jo
sbb
sub
lcall
ja
imul
xor
dec
or
inc
jp
inc
xor
icebp
dec
mov
in
add
aam
daa
out
rclb
cmpsb
dec
dec
lcall
out
add
add
fdivrs
pusha
pop
mov
scas
mov
inc
mov
adc
leave
and
jge
leave
sbb
aam
aam
mov
cmc
jns
xorb
inc
addr16
inc
add
in
pusha
inc
push
loop
fsubp
mov
jo
jmp
icebp
xchg
scas
repz
cmp
dec
imul
sub
dec
cltd
loope
fdivrl
xchg
insb
adc
and
add
shl
mov
xorl
sbb
mov
mov
adc
inc
fmulp
mov
jb
inc
daa
xchg
mov
imul
inc
lahf
jl
imul
test
cmc
cld
ja
dec
out
inc
cmpb
cmp
jae
gs
hlt
or
pop
andb
mov
test
dec
insl
mov
lahf
rcll
arpl
cmp
lret
movsl
dec
cmp
and
dec
stos
mov
adc
iret
bound
inc
clc
arpl
mov
xor
adc
jge
int
xor
lods
or
mov
bnd
stos
jp
and
dec
cmp
jp
scas
xor
loope
mov
dec
and
ficomps
daa
pop
lock
push
jno
fucomip
fst
cltd
jo
pop
jnp
cmpsl
test
mov
lcall
daa
dec
mov
mov
pop
mov
or
jno
and
jae
scas
mov
cmp
adc
xor
lahf
dec
xor
dec
dec
dec
and
addl
pop
and
out
into
add
addr16
add
nop
and
sbb
mov
sub
std
pop
sub
sahf
mov
loope
mov
daa
push
ja
pop
mov
inc
cwtl
ret
in
dec
scas
mov
xchg
test
and
pop
jo
jne
pushf
cli
ret
push
cmp
cmp
mov
pop
pop
sub
mov
jmp
jb
ret
xchg
cmpsb
mov
jge
xchg
xor
pop
or
in
pop
sarl
ljmp
and
sub
fst
pop
movsb
pop
cmpsb
jle
sbb
leave
ss
add
push
jmp
iret
jb
movsl
xchg
jge
aaa
testl
adc
scas
jae
aas
dec
dec
push
xchg
inc
xchg
icebp
cld
ret
add
pop
lea
mov
out
mov
pop
push
add
in
pusha
cmp
mov
xor
push
cltd
enter
lret
or
and
sub
or
cmpsl
or
jo
in
shll
and
jo
xor
popa
mov
mov
iret
sbb
dec
mov
fisttps
cltd
lahf
pop
into
cld
js
mov
adc
pop
xor
cmp
jmp
call
add
mov
shll
fsubrs
jg
adcl
sbb
dec
mov
fcomp
test
mov
push
mov
iret
push
sti
call
pop
jle
and
mov
arpl
cmp
int3
cmp
inc
mov
inc
inc
test
xor
popl
and
sub
pushf
cmp
pop
jle
icebp
sub
cmpsl
mov
sub
push
sub
out
xor
je
inc
orb
hlt
cwtl
xor
xorb
and
subl
inc
loopne
or
mov
adc
dec
inc
add
andb
xchg
mov
dec
loope
adc
xor
xlat
mov
stos
mov
jae
mull
and
arpl
dec
mov
aam
cld
mov
add
cld
push
inc
xchg
jp
adc
mov
jnp
ss
jmp
idiv
xor
loope
sub
or
push
add
fs
and
push
inc
cltd
add
data16
mov
daa
fisubs
xchg
int
sub
stos
sbb
cmpsl
push
cmpsb
clc
cltd
ret
and
and
test
push
icebp
sbb
lcall
jo
pop
mov
xor
mov
adc
js
cli
fcompl
cmc
pop
stos
jne
jbe
add
and
jp
outsb
jno
mov
adc
or
bound
push
inc
push
mov
pop
adc
or
pop
std
pop
sbb
mov
and
pop
mov
cwtl
jg
data16
hlt
pop
sub
dec
jno
xor
int3
xchg
ret
ljmp
sti
push
cmp
sub
out
mov
push
fwait
adcl
xchg
lods
ljmp
xchg
add
lret
sub
out
lods
xchg
lods
test
lds
xchg
lds
repnz
jg
lea
push
dec
add
push
xchg
mov
stos
or
cmp
and
or
adc
sarl
call
imull
xchg
pop
das
sub
dec
sbb
mov
inc
mov
push
ss
dec
lds
arpl
jecxz
es
mov
pop
rcrb
fmul
out
push
addr16
in
fldt
fcomps
dec
sub
stos
out
push
testb
xchg
jl
cli
xor
cmpsb
xlat
xchg
fst
adcl
add
xchg
sub
jl
int3
test
cmp
sbb
cmp
inc
and
xor
inc
cltd
into
jns
enter
lds
mov
inc
sti
imul
nop
div
sub
loop
iret
dec
mul
addr16
out
push
push
cli
aad
push
pop
stos
outsb
push
push
into
outsl
popa
mov
xchg
sub
icebp
pop
into
jmp
rcr
das
into
je
loopne
stos
aaa
add
call
jle
pop
push
call
int3
mov
ja
add
jmp
sub
fistpl
movsb
test
cmp
popa
xchg
xchg
and
std
lock
fmuls
out
mov
add
sub
popa
jae
out
lret
in
fwait
lahf
ljmp
sbb
or
sbb
jne
inc
test
psrlq
push
xor
lods
fbstp
gs
out
xlat
pop
mov
daa
sbb
add
sbb
test
xor
rorl
adc
mov
gs
push
ja
dec
or
out
jmp
cmpsl
into
call
and
scas
ljmp
cld
test
and
int
shll
dec
or
aaa
inc
adc
int
negb
stos
loope
xor
xchg
mov
cwtl
mov
aad
std
je
adc
mov
ret
lods
jl
push
out
cltd
inc
jno
iret
ljmp
into
ret
gs
jbe
cmp
sub
leave
addr16
lock
or
icebp
stc
sti
or
jp
sti
and
stos
push
addr16
mov
adc
stc
push
lock
ror
mov
ja
cwtl
dec
push
push
in
inc
sub
negb
cs
lret
mov
stc
dec
mov
push
cs
dec
fwait
rorb
mov
sbb
inc
test
pushf
cwtl
scas
das
mov
jae
cmp
jae
dec
push
icebp
fs
pop
push
push
arpl
push
inc
fldenv
inc
aas
stos
insl
xor
sbb
cwtl
dec
jnp
mov
pop
out
sbb
imul
mov
adc
and
cmp
xchg
mov
sbb
outsl
lahf
dec
ja
ljmp
and
lock
xor
call
dec
jmp
cmp
add
push
jp
adc
out
xor
mov
dec
jmp
add
data16
mov
ss
and
and
xor
shr
ret
inc
data16
jno
mov
divb
cs
xchg
inc
push
aas
fsubrl
cmpsl
div
aad
xor
mov
mov
mov
int3
shll
in
inc
xor
fstpl
ds
mov
fwait
sbb
lret
ret
test
mov
sbbb
ret
lock
scas
jp
xchg
pop
mov
inc
jl
mov
mov
dec
or
test
int3
loopne
jbe
and
stc
in
and
jg
xor
jo
sub
xor
push
xorl
mov
mov
push
pop
pusha
adc
or
in
incl
and
lcall
movl
mov
cld
xor
scas
mov
inc
jae
std
je
mulb
lds
mov
out
inc
les
mov
xchg
xchg
push
jmp
sub
cmp
lret
popa
inc
mov
les
push
add
loop
pop
and
jge
jg
adc
mov
cs
and
xchg
pop
and
insb
inc
jmp
lods
icebp
gs
and
push
push
xchg
dec
xor
xchg
rcll
inc
aaa
dec
cmp
popf
dec
cmp
mov
mov
ror
pop
loop
xchg
mov
sahf
mov
jle
sbb
je
mov
mov
decl
or
mov
xchg
iret
std
clc
xor
fbld
aad
sub
jl
test
pop
dec
call
sbb
xchg
data16
or
lds
fs
mov
jecxz
fstl
inc
mov
fbstp
jne
sbb
fs
cltd
test
mov
int3
push
lds
push
mov
ret
es
stos
adc
xor
push
pop
hlt
pop
fwait
push
mov
mov
cmp
ret
add
popa
into
mov
lea
shrl
push
adc
int3
ds
pop
jo
dec
push
nop
stc
ror
jns
test
sbb
inc
in
jns
or
dec
sub
push
jp
inc
sti
es
fists
jbe
cmpsb
push
sub
stos
sub
dec
movsb
jle
sub
adc
inc
mov
cmp
and
mov
mov
mov
mov
cs
add
nop
push
mov
push
inc
int
imul
adc
sbb
inc
inc
xchg
sbbb
cs
std
lds
gs
pusha
bound
shll
stc
push
repz
jecxz
pop
push
inc
stc
xchg
rorb
adc
enter
push
sahf
scas
test
les
xlat
cmp
push
cmpsl
or
mov
testl
shlb
mov
sti
mov
xchg
lea
push
shll
pop
imul
pop
add
add
fsqrt
mov
idivb
sub
gs
xchg
dec
jno
fstpl
push
stos
shrl
jnp
cmp
push
xor
fwait
rcl
mov
mov
test
movsl
orb
pusha
es
pop
add
ret
dec
xchg
mov
aam
jo
xchg
dec
cmc
cmp
aam
cltd
xor
mov
in
dec
test
xor
jno
es
xor
or
stos
mov
pop
je
aas
pop
push
or
loopne
jae
cmp
outsb
pop
rorb
in
sub
int3
sub
jbe
xchg
out
mov
sub
mov
jnp
push
push
out
adc
je
arpl
xchg
xchg
cmp
test
arpl
mov
lcall
xchg
stc
xchg
ret
adc
pop
cmp
dec
push
shlb
loopne
mov
dec
cs
fwait
inc
add
loope
clc
aad
outsb
push
pop
call
xchg
jno
pop
sbb
fwait
jns
add
jge
in
dec
sub
jmp
nop
add
aas
jo
arpl
scas
test
mov
mov
test
mov
popf
lahf
movsl
ficoml
aad
mov
movsl
sbb
jb
and
xor
mov
push
in
push
xchg
scas
stc
out
mov
js
scas
mov
mov
mov
ret
xchg
sahf
bound
stos
ret
loopne
ds
push
outsl
inc
xchg
push
stos
lea
movsb
add
in
or
inc
cmp
ss
and
cwtl
int3
jle
pusha
and
dec
in
add
jnp
mov
sbb
ljmp
nop
inc
movsl
pop
xchg
loop
adc
add
adcl
jp
in
movsl
sbb
push
pop
in
xor
int3
mov
pop
cmp
clc
cmp
int
out
add
aas
sub
fildll
cli
repz
mov
out
and
add
sbb
push
sbb
imul
pop
int
fcomps
sub
adc
inc
jno
pushf
into
mov
ffree
lcall
imul
aas
sbb
sti
mov
insb
in
jbe,pn
jbe
aaa
xchg
mov
adc
add
lock
jecxz
inc
or
push
xor
mov
mov
ss
shl
cs
arpl
push
icebp
push
inc
and
push
pop
das
ret
scas
pop
lods
ret
clc
jno
test
or
je
mov
xchg
bound
mov
ljmp
leave
imul
adc
xor
popf
loope
icebp
dec
inc
xchg
inc
lock
stos
pop
or
divl
lcall
ljmp
stos
jmp
in
scas
and
cltd
pop
and
mov
or
test
lcall
mov
loope
out
ret
adc
cmc
mov
rclb
sbb
fsubs
out
out
in
xor
divb
sbbb
lret
enter
pop
dec
mov
pop
mov
push
cmpsb
cli
pop
jo
xchg
jb
out
xchg
mov
or
arpl
xor
test
xor
lds
push
ds
into
sahf
hlt
push
ret
inc
sbb
loop
rcr
xchg
dec
mov
jl
jns
cmp
out
outsl
das
stc
xchg
dec
cmpb
ret
push
gs
and
xchg
mov
add
ds
sub
ds
xchg
adc
dec
inc
shl
push
pop
mov
xchg
jno
sub
fidivs
xchg
mov
stc
sti
pusha
jl
jmp
shrl
notb
jae
je
dec
pop
fsubrs
cld
cmp
inc
mov
ljmp
push
iret
rcll
lahf
lret
nop
rorb
sub
push
rcrl
clc
loopne
xchg
addr16
xchg
aaa
sbbb
pop
pop
push
repnz
pop
xchg
gs
xor
pop
in
cmp
movsb
repz
xchg
push
sub
cmp
mov
add
cs
cs
cmc
and
and
and
cli
cs
sarl
shll
dec
fimull
xchg
pop
loope
inc
pop
xchg
js
bound
add
clc
arpl
js
push
xchg
mov
pop
cmpsb
ljmp
cmp
push
or
out
push
xorl
int
insl
idivb
daa
mov
cmp
pop
pop
clc
sbb
popf
jno
mov
outsl
lcall
jmp
idivb
scas
cmc
pusha
lcall
cmp
rclb
enter
stos
push
mov
shr
sbb
mov
jns
movsl
stos
or
inc
push
mov
push
push
push
fsubrl
cmpsb
lcall
add
jmp
out
or
into
outsb
dec
push
jo
xlat
in
sti
dec
fwait
push
pushf
push
lods
mov
lcall
xchg
mov
cmpb
pop
mov
xchg
das
cmp
insb
fnstcw
dec
test
test
adc
mov
sbb
iret
or
jno
or
inc
es
jp
pusha
cmp
sbb
cli
orb
addl
mov
mov
xor
out
jecxz
sarl
push
scas
add
xchg
ljmp
outsb
push
mov
and
into
sub
jns
or
xlat
pop
movsb
faddl
mov
xchg
adc
mov
fcmovbe
inc
dec
sbb
divb
pushf
pop
lds
ret
mov
sub
sub
repz
lret
or
sbb
or
not
flds
xchg
cmp
popf
fmulp
fwait
and
insb
js
xchg
xchg
mov
adcb
cmp
adc
stos
ror
mov
dec
ret
cmp
inc
fildll
push
adc
adc
push
xchg
mov
fsubp
sbb
mov
test
sbb
scas
sub
sbb
aam
fwait
and
push
loop
cmp
xchg
fstpt
rep
ss
and
iret
and
aam
xor
fwait
ror
notb
and
inc
and
sti
aaa
out
push
mov
and
sub
push
mov
data16
cli
loope
mov
or
cmp
sbb
cmp
icebp
iret
decb
or
xor
out
mov
mov
adc
inc
frstor
jmp
jnp
in
pop
mov
aas
out
ret
cmp
xlat
push
add
addr16
sti
sbbl
sbb
pop
cmp
cmp
pop
cltd
popa
loop
negb
lea
in
rolb
mov
dec
out
jne
pop
mov
jl
jno
push
mov
push
or
mov
shrb
mov
dec
and
fwait
clc
pop
scas
inc
sbb
sbb
dec
into
fsubrl
mov
sub
and
lahf
inc
pop
and
out
imul
inc
nop
lods
xor
aad
add
scas
push
clc
cmp
fidivs
in
push
out
jo
mov
popf
arpl
out
sti
mov
cmp
add
fwait
dec
lock
enter
cld
dec
inc
or
pop
sbb
ret
scas
dec
or
lcall
add
jmp
sbb
jbe
sub
jns
sbb
pop
lahf
cwtl
movsl
mov
imul
sub
xchg
movsb
ret
ja
in
jge
sbb
mov
cmp
fildll
mov
roll
ss
xchg
jle
cli
xchg
stc
mov
or
ret
int
xchg
popa
das
call
popa
mov
fsub
in
pop
js
mov
jge
xor
lds
and
pop
inc
lcall
imul
iret
sub
sub
roll
mov
cld
cmpsl
in
or
cmpsb
jl
pop
enter
lds
outsb
lock
push
dec
pushf
sbb
movsl
jo
lcall
sub
add
mov
xlat
pop
scas
shlb
pop
enter
and
and
push
or
adc
jns
mov
dec
mov
pop
fwait
pop
jae
pusha
repz
dec
mov
push
jno
ss
or
addr16
mov
inc
fwait
inc
pop
sahf
mov
pop
or
lret
xorb
es
imul
adc
jnp
ja
pushf
inc
outsl
push
or
aas
jg
mov
jae
stos
mov
xchg
ret
fdiv
xor
stos
sbbl
jae
ss
je
sti
dec
mov
add
push
cwtl
pop
imul
test
add
mov
dec
xchg
mov
inc
cmp
pop
push
fwait
sub
or
rol
adc
push
enter
inc
sbb
jle
push
cmpsb
popa
xor
push
pop
je
push
addr16
mov
rcrb
jno
and
orb
lcall
enter
adcl
xorb
notl
sbb
xchg
imul
ja
nop
jg
sbb
sub
fs
xor
call
inc
pop
add
mov
stos
mov
jp
sub
ja
xchg
ljmp
popf
sub
jnp,pt
jg
test
or
cmp
xor
jns
pop
mov
xor
iret
ret
push
jecxz
and
mov
push
xchg
pop
ja
add
jns
loop
jns
shrl
pop
mov
jle
mov
pop
fstl
jbe
aas
mov
clc
inc
xchg
cwtl
imul
out
and
add
mov
inc
arpl
mov
movl
notl
test
push
test
test
push
ljmp
xor
sbbl
lea
imul
cwtl
or
cmc
push
cs
fisttpll
lods
mov
dec
cmpsl
int3
sbb
vpmaxub
ror
bound
loope
dec
add
jb
sti
pop
jle
inc
xor
mov
fcoms
pop
test
or
out
cld
mov
or
jns
outsb
vhsubps
imul
shrb
push
and
cmpsb
lock
mov
or
jno
imul
movsb
add
pop
cmp
mov
lret
jns
sbb
enter
cmp
or
adc
xchg
push
jns
fstpt
cli
jg
inc
xorps
mov
cs
ret
scas
int3
fists
inc
and
adc
out
test
cld
cmc
pop
xchg
lods
iret
aas
ljmp
or
pop
data16
or
dec
loopne
xlat
scas
jecxz
and
addl
sbb
test
or
cmp
neg
jge
pop
pop
pop
jno
or
add
roll
adc
add
fwait
pop
mull
filds
inc
lahf
or
out
mov
stc
popf
out
or
or
xor
dec
mov
sub
inc
jle
int3
mov
add
fdivrl
orb
arpl
pop
push
es
insl
adc
imul
or
out
lcall
outsb
push
int
or
out
lods
or
scas
fdivrl
cmp
mov
jbe
jp
add
sub
jmp
int
or
and
fldt
and
mov
sub
jno
xchg
lods
rcrl
addb
jno
les
js
cmc
mov
xor
sbb
pop
push
and
aas
add
out
nop
jb
mov
test
xchg
test
fwait
xor
cmp
mov
push
mov
cs
stos
mov
cmp
fstps
call
mov
inc
dec
adc
pop
scas
out
jbe
scas
cmp
push
pushw
fbstp
and
inc
stos
push
fldt
cmpsl
repz
mov
rcr
in
dec
jmp
mov
mov
and
mov
jmp
pushf
jge
popa
sbb
pcmpgtw
pop
sub
mov
mov
or
lret
lcall
mov
repnz
push
jl
jbe
mov
gs
popf
les
lock
repnz
stos
or
sarl
addb
nop
cmp
ss
lret
repnz
inc
fdivr
mov
mov
xor
sub
adc
inc
loope
mov
popf
enter
test
xor
dec
imul
xchg
fs
add
sbb
mov
jmp
fcmovne
push
stos
cs
clc
pop
fiaddl
arpl
mov
fldl
and
lret
push
loopne
mov
scas
or
rclb
call
push
jae
bound
movaps
sbb
mov
mov
mov
or
fcomip
into
idiv
add
and
or
popf
pushf
mov
jl
loop
fldenv
out
ds
aaa
fmull
cmp
xor
fwait
xchg
mov
scas
push
sbb
or
test
jp
push
fsubrp
push
aaa
cmc
sbb
loop
sub
test
sub
mov
push
in
lret
loop
push
and
and
pop
lea
mov
jmp
add
aaa
lea
push
sti
mov
adc
mov
into
sbb
orl
cmp
testb
jns
xlat
add
xchg
mov
dec
push
sub
sbb
rorb
in
dec
push
aam
mov
cmpsl
dec
testl
xor
ss
imul
sbb
xchg
scas
test
pop
xchg
xor
add
ljmp
mov
movups
inc
sub
mov
movsl
fdivr
xchg
add
in
xchg
insb
jg
es
nop
cmc
jle
dec
idivb
push
cmp
adc
jae
out
cli
mov
xor
pusha
xor
mov
mov
lea
shlb
mov
adc
add
test
adc
daa
jnp
xchg
fstpl
cld
push
jp
xchg
pop
test
or
sbb
icebp
out
mov
sbb
dec
dec
sbb
xor
jecxz
xor
mov
int
mov
and
insl
fcomip
int
loope
sbbl
mov
popa
stc
mov
mov
mov
jecxz
or
pop
lret
inc
imul
jge
jns
sarb
mov
dec
fildl
bound
iret
fiaddl
divb
incb
mov
jmp
push
xchg
les
pop
outsb
push
mov
lret
orb
mov
push
or
sbb
pushf
mov
cmpsb
xchg
inc
lret
imul
into
mov
ss
inc
cli
sub
mov
push
fsubrl
das
loopne
jmp
jbe
inc
dec
je
insb
repnz
out
repz
lods
pop
or
xorl
and
mov
and
pop
test
aas
xchg
dec
fbstp
push
jl
aam
xor
cmp
mov
xchg
les
inc
addr16
adc
sub
mov
or
imul
jecxz
icebp
arpl
rcrl
push
sbb
xchg
inc
cmpb
scas
cmp
jo
inc
xchg
mov
mov
pop
inc
inc
movsb
idiv
push
sbb
shll
xchg
jl
outsl
jne
test
dec
movl
imul
aad
mov
cmp
jecxz
xchg
movsb
les
add
sarl
mov
out
fdivrl
xchg
sbb
pop
mov
cmpsb
xor
fists
or
gs
sub
jp
in
xchg
fidivrl
test
lret
push
add
lods
ret
outsb
mov
xchg
cmp
cli
sahf
sbb
stc
jmp
repz
stc
jp
dec
and
sbb
arpl
mov
sub
aas
frndint
int3
cs
inc
cmp
fldcw
cli
in
adc
rol
push
xchg
mov
fwait
rcr
cmpsl
jns
push
mov
sbb
inc
mov
rolb
das
inc
jo
cmp
ja
jmp
movsb
push
push
sub
sbb
push
xor
sub
xor
repnz
mov
jno
or
pop
inc
out
jmp
fcoms
push
pop
loopne
pop
jecxz
das
dec
jmp
pop
mov
mov
sub
test
popa
push
inc
stos
outsb
xor
pop
add
jecxz
test
jns
xchg
push
pop
xchg
mov
jl
cmpsl
mov
cmp
pop
and
repnz
jo
adc
and
pop
sarl
sti
fs
dec
sbb
outsl
jns
inc
gs
xchg
aam
je
mov
inc
xchg
scas
sarb
mov
cmc
gs
rclb
ljmp
xorb
jae
cli
mov
push
movsb
fldcw
mov
lea
add
outsl
push
push
mov
jge
in
xlat
lods
and
cs
dec
mov
jecxz
push
or
sub
insb
mul
popf
push
jae
loopne
lods
or
pop
data16
push
rolb
ret
jg
aad
and
sbb
cmp
std
jo
inc
ljmp
stos
faddl
or
fistl
pop
and
dec
into
push
jnp
cmpsl
xchg
lea
push
pop
int
aaa
sub
adc
and
xor
movsl
inc
xor
out
andl
enter
xor
cmpsl
nop
mov
push
xchg
xor
sti
jmp
out
pop
xor
rcrl
movb
pusha
adc
or
ds
mov
xor
mov
aas
aas
leave
xlat
push
jecxz
xchg
call
mov
pusha
iret
stc
xor
jmp
movl
idivl
sbb
sti
repnz
outsl
or
rolb
stc
or
repnz
xlat
xor
sub
cmp
xchg
stos
out
scas
int
sbb
fisubrs
outsl
pop
mov
test
pop
aaa
mov
sub
aad
push
xchg
js
nop
sbb
jecxz
mov
jnp
dec
rcrl
xchg
xor
adc
jmp
insb
test
jecxz
dec
nop
jo
cmovno
aas
movsl
inc
out
lret
pop
cmc
imul
add
inc
in
mov
je
aam
das
shlb
sbb
imul
add
dec
fs
fidivs
sahf
data16
xchg
arpl
sbb
dec
push
xchg
dec
cltd
xor
insb
mov
sbb
xor
pop
sub
mov
clc
inc
stc
push
in
je
cld
mov
es
jb
and
inc
xchg
or
push
push
mov
je
in
call
jge
aas
nop
shll
or
cmpsl
add
add
aam
add
mov
sahf
dec
out
cmpsl
fsubrs
mov
mov
push
sbb
pop
cmp
inc
dec
jl
punpcklbw
xchg
mov
or
xchg
mov
ds
xchg
mov
and
add
repnz
pop
bound
pop
cld
add
imul
dec
or
mov
imul
adc
insb
in
subl
jmp
xchg
add
mov
adc
fs
test
xchg
sbb
leave
dec
xchg
pop
dec
pop
dec
loop
daa
cld
dec
mulb
insl
sahf
out
push
es
dec
ja
lea
mov
scas
inc
fcomps
sarb
lods
aas
in
xchg
adc
pop
out
or
dec
test
sub
iret
fwait
or
pop
add
out
pop
fistpll
or
hlt
notl
inc
adc
and
pop
push
push
mov
push
repz
cwtl
ss
out
cwtl
scas
adc
sbb
popf
cmp
mov
pop
fimuls
and
xchg
fimuls
aas
xchg
lret
in
daa
hlt
lret
lds
loop
clc
int
jns
andb
jle
mul
insl
mov
mov
out
push
lea
and
sub
notb
xchg
call
imul
pusha
xor
mov
in
mov
bswap
ljmp
popa
in
pop
aad
pop
cld
lea
cwtl
inc
adc
sbb
xorl
dec
sub
xor
cmc
sbb
jbe
aad
ss
ja
stos
dec
push
shlb
pusha
push
movsb
mov
or
rcl
pop
ficompl
jp
adc
mov
imul
sbb
cmp
pop
pop
lret
dec
gs
push
popa
push
outsl
int
mov
and
in
sar
or
lret
sub
inc
dec
mov
pop
jl
loopne
sahf
movsb
movsl
lock
pop
or
mov
or
jle
xchg
push
inc
outsb
fcmovb
fidivl
pop
push
js
adc
f2xm1
jne
les
cwtl
xor
out
test
xor
xchg
in
xchg
imul
mov
pushf
push
imul
push
outsb
enter
movsb
dec
mov
push
data16
movsl
shll
sbb
push
in
xchg
popa
fcoms
sbb
int
cmpsb
int
shll
insl
mov
adc
sbb
mov
popf
loop
dec
add
mov
push
in
lods
inc
fld
xor
out
repnz
inc
or
adc
add
ja
int3
mov
sahf
iret
imul
ljmp
std
adc
fs
xor
dec
pop
push
push
push
dec
push
in
js
negl
mov
inc
cwtl
mov
lahf
popf
and
sub
test
dec
and
and
lds
fcom
rorb
and
cmpsb
mov
cs
dec
aam
mov
xchg
aaa
icebp
shrb
ja
or
arpl
jmp
std
sarl
and
xor
jae
outsl
popw
push
cmp
or
rol
rolb
adc
push
inc
adc
test
inc
int
mov
adc
fimuls
insb
xor
fmuls
clc
loope
sbb
mov
lock
or
cmc
adc
fsubr
add
addr16
popf
std
mov
pop
push
mov
addb
or
mulb
push
adc
sarb
mov
mov
iret
inc
imul
fildll
int
pop
or
sbb
in
dec
jno
pop
cwtl
ds
insl
loope
rcrl
lods
hlt
stos
push
xchg
mov
or
and
xchg
push
or
mov
adc
sub
xlat
or
daa
adc
rolb
or
pop
scas
mov
in
or
loopne
js
bound
xchg
rorl
pusha
push
clc
push
mov
mov
mov
xor
mov
push
pop
sub
pop
outsl
lahf
or
add
add
sub
xor
adc
movsb
inc
rol
sti
imul
inc
movsb
sbb
cli
ds
xor
cmp
push
dec
fsubp
lea
hlt
adc
push
loop
mov
jmp
mov
in
cmpsb
push
call
repnz
loop
repz
js
int
push
cmp
xor
and
loope
cmp
mov
outsl
sbb
push
sti
or
popf
leave
rclb
sbb
cmpsb
ja
inc
jg
pop
ror
insl
in
jnp
pop
sahf
lret
inc
and
scas
mov
aam
les
xor
movsb
push
out
repnz
push
mov
subl
xor
inc
push
lret
int
xchg
and
scas
fdivrs
and
out
jnp
mov
jae
dec
jmp
add
iret
inc
or
lahf
jae
cmp
leave
sbb
fidivs
popf
sbb
pop
jno
xor
sbb
js
dec
push
roll
xchg
add
push
and
pop
cwtl
inc
cmpsb
xchg
aaa
fiaddl
dec
rorb
test
push
call
and
idiv
jae
inc
push
and
xchg
jmp
sbbb
out
add
in
xor
mov
roll
jge
popa
cmpsl
das
push
das
data16
cld
inc
cmpsl
jmp
nop
neg
sub
in
mov
dec
int
jl
pushf
out
mov
hlt
adc
cmp
daa
int
inc
imul
push
mov
mov
xor
int3
out
sbb
cmc
mov
mov
mov
xchg
and
sub
fldenv
push
sub
outsb
pushf
int
mov
stc
in
and
jecxz
inc
fwait
adc
cmpl
out
mov
sub
clc
andb
stos
xor
pop
outsl
std
xlat
mov
cs
test
lahf
sub
scas
pop
dec
mov
std
xchg
stc
mov
enter
cmp
add
in
sub
pop
repnz
testl
in
pop
jle
loop
sub
adc
mov
hlt
add
push
sbb
xor
xchg
aas
cmp
dec
fwait
sub
and
popa
sub
mov
or
lds
repnz
xor
push
cli
lds
in
inc
fs
in
cmp
lods
les
jb
scas
imul
jnp,pn
ja
mov
mov
lods
cmc
mov
aas
aaa
or
cli
in
loopne
mov
cmpb
unpcklps
sbb
scas
and
xlat
movsl
push
mov
aas
sbb
fcom
or
movsb
addr16
loop
orb
iret
jae
or
lcall
in
out
mov
repz
stos
arpl
lcall
jp
sub
aad
sbb
push
repnz
push
or
popl
dec
popa
dec
test
xchg
test
mov
lods
adc
xor
mov
or
cmp
mov
out
pop
lahf
dec
mov
lock
insb
mov
ret
mov
sub
das
pop
jle
ret
out
push
cmp
inc
fsubr
imul
es
outsb
mov
popa
out
xor
cmp
ja
xacquire
insb
loopne
imul
mov
nop
cmp
pop
ret
stc
cmpsb
adc
fnstcw
mov
xor
or
sbb
addr16
cmp
push
jecxz
push
add
pop
movsb
xor
inc
ret
mov
xor
mov
mov
and
dec
or
iret
repnz
cmpsl
xchg
or
mov
jns
out
lds
repnz
xchg
fnstsw
cmp
mov
testl
lcall
ret
mov
xor
mov
test
enter
mov
add
and
cmp
jo
cmp
out
xchg
and
int
sbb
movsl
roll
imul
rclb
fsubp
test
call
inc
inc
shrb
cwtl
xor
xchg
ja
icebp
and
cmp
mov
scas
xchg
mov
mov
lcall
or
loopne
nop
leave
lods
insb
cs
aam
dec
out
cmc
pop
das
enter
popf
out
in
mov
add
jle
in
fwait
or
std
arpl
mov
jb
adc
bound
mov
outsb
shrl
jns
push
mov
into
push
out
mov
dec
xorl
xchg
test
dec
add
out
les
fcoml
addr16
xor
cmp
pop
lds
dec
scas
push
mov
pop
pop
pop
sbb
pop
mov
sub
mov
stos
ds
icebp
add
mov
sti
pop
inc
xorb
fcmovnbe
cmc
adc
sbb
xor
push
icebp
inc
addr16
jp
popa
insl
xchg
sub
xchg
lret
cmp
jnp
push
sbb
enter
aad
lret
sub
dec
hlt
push
mov
dec
fists
std
xchg
or
data16
cs
leave
insl
xchg
lahf
mov
jo
enter
jp
imul
imul
daa
adc
imul
pop
int3
cmc
push
insl
sub
ja
stos
int3
jl
sbb
popf
arpl
dec
loop
mov
mov
sbb
dec
sahf
addl
aad
nop
jge
cmc
hlt
sub
movsl
fs
dec
push
xor
pop
add
shll
test
ss
andb
ds
push
xchg
mov
negl
addb
mov
xor
js
test
cs
mov
mov
mov
inc
mov
jns
ret
lea
aad
adc
cmp
out
imul
mov
push
mov
in
push
mov
xlat
fs
shrl
add
xor
clc
mov
pop
sbb
xor
push
or
clc
daa
pop
mov
loop
push
adc
or
inc
inc
cs
or
mov
fucomi
xor
mov
mov
repz
add
pushf
out
sub
push
out
mov
jmp
icebp
nop
cmp
adc
pop
push
inc
and
scas
add
sbb
xor
lret
sbb
cld
movsb
lret
add
pop
jmp
hlt
or
mov
mov
push
inc
leave
sub
ds
push
push
pusha
popa
and
mov
jmp
adc
mov
in
add
mov
jl
stos
je
inc
xor
mov
fnstcw
aam
add
or
daa
rcr
jne
stos
int
stos
pop
dec
ret
jl
mov
cltd
lods
jle
xchg
les
push
xchg
push
xchg
xor
lods
rclb
add
and
ret
das
je
add
xor
insl
inc
xor
lcall
xchg
insb
fsubrs
cmp
repz
cmp
and
push
repz
dec
addb
vpsubb
pop
mov
shll
jbe
mov
xchg
out
sub
mov
push
repz
xchg
jb
push
cltd
inc
fwait
gs
stos
in
mov
inc
adc
sbb
xorb
lods
loopne
shrl
fidivrs
sbb
cmp
lods
and
and
stos
ret
inc
inc
popa
jno
or
imul
cld
jmp
aam
jmp
inc
adc
arpl
icebp
iret
cmc
out
mov
dec
xchg
xor
jb
sbb
mov
mov
out
outsl
test
mov
shrl
aas
sbb
adc
jne
out
hlt
and
xor
xchg
pushf
push
and
jp
out
jg,pn
add
dec
cmp
push
adc
sbb
mov
rolb
xchg
inc
daa
mov
xchg
mov
hlt
sub
cltd
xor
aas
out
fldcw
je
jle
sub
dec
jae
adcl
jmp
jnp
js
mov
cmc
ja
orl
inc
mov
dec
jae
mov
and
insl
lds
push
pop
je
call
cltd
shl
xor
stos
mov
xorl
dec
cld
dec
and
push
mov
xchg
and
xchg
dec
ljmp
mov
incb
loope
pop
pop
ljmp
add
in
sbb
xor
xor
inc
mov
loop
xor
xor
add
lahf
arpl
nop
loopne,pn
in
loop
lods
shll
add
rcrl
decb
into
push
jmp
bound
cmp
ret
cmp
sbb
xor
pop
push
or
rolb
and
pushl
mov
adc
mov
cmpb
sahf
scas
xchg
popf
repz
pushf
sub
push
push
data16
fisttpl
add
push
hlt
in
pushf
inc
jle
xchg
scas
aas
inc
and
jbe
js
ds
std
dec
push
mov
mov
sbb
arpl
adcl
xchg
lods
int
rcl
sbb
xchg
icebp
push
test
es
mov
jne
adc
pop
js
mov
sarl
xchg
cli
inc
xor
cmp
xor
and
pop
jecxz
lret
int
subb
negb
mov
fstpt
popf
imul
xor
out
xor
and
mov
mov
mov
push
clc
xor
add
loope
je
popf
mov
fdivl
stos
insb
lds
cs
cmpsb
mov
mov
mov
stos
and
dec
push
mov
adc
stos
cmp
push
add
jb
loope
xchg
lods
out
cs
in
out
outsb
sbb
mov
or
jmp
and
cmp
adc
fisttpll
nop
out
mov
ds
pop
jge
xchg
loope
ss
jb
outsb
inc
out
stc
mov
mov
dec
dec
fldt
push
bound
stc
pop
andl
jne
ja
push
push
nop
push
jmp
sub
mov
ja
ret
ret
dec
and
outsl
dec
xchg
sub
jno
or
lock
je
mov
xchg
decb
mov
inc
jg,pn
jg
adc
mov
xor
jae
gs
ret
leave
sub
in
mov
repnz
xchg
inc
psubusw
push
jmp
sbb
xchg
stc
xchg
mov
movb
and
sti
out
rorl
repz
mov
gs
adc
or
jp
das
add
xchg
cmp
sbb
mov
imul
les
aaa
nop
mov
outsb
imul
mov
popa
pushf
aam
jne
scas
pop
cwtl
imul
stos
dec
aas
mov
xor
or
call
dec
cwtl
idiv
or
inc
add
or
cmc
mov
lret
fwait
mov
cmp
jne
lods
scas
sbb
movsb
push
or
inc
lret
adc
mov
lea
int3
sub
call
and
or
fisubs
mov
push
lahf
dec
xor
xchg
js
bound
aam
int3
popf
andb
nop
test
ret
adc
icebp
xchg
arpl
test
or
mov
pop
shll
jmp
pop
mov
test
fisubrl
pop
cmpsl
and
xchg
scas
push
pop
pushf
mov
jb
mov
cmc
lds
