jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
sub
sub
xor
xor
call
and
jmp
and
dec
leave
and
call
jmp
mov
je
mov
cmp
jne
jmp
and
sub
or
sub
jmp
add
sub
jmp
pop
add
xor
sub
pop
add
cmp
jne
mov
xor
jmp
mov
push
mov
sub
inc
or
cmp
jne
cmp
mov
mov
je
mov
or
jmp
add
or
mov
mov
mov
inc
cmp
jne
add
and
xor
add
mov
cmp
jne
push
xor
add
add
push
jmp
sub
dec
mov
jne
or
or
jmp
dec
push
and
push
jmp
add
sub
mov
jmp
jmp
or
xor
pop
jmp
xor
mov
add
cmp
jne
sub
xor
call
xor
sub
cmp
jne
sub
sub
or
mov
and
add
cmp
jne
sub
xor
push
or
cmp
jne
call
or
push
add
push
sub
xor
or
jmp
or
or
call
xor
add
cmp
jne
inc
mov
lods
cmp
jne
add
shr
add
cmp
jne
add
add
xor
jmp
sub
mov
push
cmp
jne
sub
mov
or
mov
sub
and
mov
jmp
xor
sub
xor
and
push
mov
add
xor
cmp
jne
inc
or
call
and
cmp
jne
loope
and
xor
or
imul
jbe
test
mov
sbb
adc
in
push
hlt
andb
mov
jl
scas
into
cmpsl
add
jnp
mov
pop
ss
lds
add
cmc
popf
fincstp
mov
shl
xorb
sub
out
or
scas
fmuls
std
xor
jbe
mov
add
xchg
scas
inc
cmp
sub
jbe
cltd
mov
je
ret
and
roll
push
xor
push
sti
negl
bound
push
pop
jl
movsb
dec
loop
dec
pop
cmp
fwait
mov
cltd
or
sbb
mov
xor
fldcw
aaa
dec
dec
scas
je
jne
mov
std
iret
es
jbe
aaa
lret
into
addb
mov
mov
lret
dec
mull
jne
daa
mov
lret
xor
sub
aaa
pop
mov
orl
lds
or
sarl
dec
push
cmp
mov
xor
std
leave
lret
jl
int
testb
mov
push
and
pop
std
leave
mov
mov
dec
jle
xor
mov
push
mov
outsb
jge
insl
jmp
loope
and
adc
ss
std
cmpsb
xchg
ss
je
jmp
arpl
dec
xor
jbe
lret
jl
dec
xor
cmp
cli
add
lods
jno
std
pop
enter
jne
jbe
mov
cli
shrb
or
shlb
repz
lcall
and
insl
jl
scas
mov
dec
gs
jno
in
addb
xchg
ss
je
test
je
std
pop
enter
cmc
loopne
adc
cmpsb
xchg
fidivrs
test
gs
xor
push
rorb
push
add
sub
jne
xor
add
jae
and
outsb
pop
push
int3
imul
movsl
clc
in
popa
outsb
push
dec
sub
insl
push
pop
mov
add
mov
pop
imul
ret
and
dec
out
jns
lcall
rolb
shr
in
xchg
lcall
in
jbe
or
nop
or
fldln2
out
xchg
mov
or
inc
xor
push
mov
pop
fsts
fiaddl
adc
pop
add
xor
aaa
pop
rcrl
mov
aam
push
add
daa
out
sub
lods
push
adc
pop
push
or
jecxz
shrb
out
xor
outsl
sbb
xor
in
adcb
jl
add
mov
inc
jne
mov
sub
push
xchg
mov
call
incl
scas
cli
mov
out
stos
mov
das
cld
push
ret
add
inc
scas
lods
push
adc
je
xorb
outsl
nop
mov
outsb
adc
mov
xchg
mov
jne
pusha
movsb
xchg
push
add
fidivrl
aas
xchg
scas
lods
enter
xchg
jne
ret
mov
mov
pop
scas
mov
bound
insb
insl
push
push
jb
bound
add
dec
popa
roll
jno
outsl
adc
adc
inc
xchg
jb
and
stos
xchg
push
sub
push
push
add
and
dec
nop
and
mov
outsl
add
push
push
jb
shrl
stc
adc
push
inc
sub
fld
ficoms
mov
ud1
out
adc
mov
mov
inc
enter
xchg
and
sub
sub
nop
or
fldln2
out
xchg
cmpsb
popa
out
pop
and
mov
push
aaa
and
fildl
push
add
shrl
insl
or
xchg
imul
inc
insl
fcomps
stc
pop
adc
add
push
push
pop
push
cmp
lahf
pop
jmp
in
scas
mov
mov
inc
insl
fisubrl
std
out
stos
add
daa
push
adc
fsub
jbe
adc
fisubs
mov
cmp
stos
imul
xlat
outsl
push
push
fisubrs
adc
and
lods
xchg
fcoms
cmc
xchg
pop
test
push
add
test
lods
xchg
push
push
adc
call
add
push
rclb
sub
push
push
add
sbb
add
adc
sbb
lods
je
cmp
imul
xchg
scas
lods
pop
out
pop
mov
movsl
fxch
outsb
pop
outsb
mov
pop
add
insl
pop
mov
push
pop
mov
inc
fbstp
dec
add
out
pop
add
pop
ficoml
cmp
jb
rolb
dec
jge
sub
out
inc
add
movsl
push
jl
mov
xchg
sub
cmp
pop
push
xor
mov
aad
add
xor
not
push
add
wbinvd
out
pop
or
pop
add
sbb
sahf
scas
xchg
pop
xchg
je
pop
cmp
lods
lods
out
fnstcw
fisubl
fwait
and
mov
sub
lods
xchg
es
pop
push
push
inc
adc
push
cmp
sub
lods
aaa
cli
mov
ljmp
pop
add
insl
jns
pop
and
xor
insl
and
adc
push
add
es
pop
add
icebp
push
add
insb
add
pop
sarb
es
lods
or
push
xor
pop
ja
bound
add
mov
out
pop
add
icebp
push
add
shll
popf
and
add
or
ficoms
daa
or
pop
push
sub
xchg
add
pop
and
scas
xchg
ficompl
ret
gs
jge
add
add
stos
push
push
add
fnstenv
out
xchg
add
push
je
fisubl
rcrb
jge
pop
or
scas
daa
or
xor
push
mov
ficompl
sbb
add
cmp
push
imul
cmpsb
mov
jns
pop
fmuls
sbb
movsb
bound
add
mov
pop
cmp
shrl
push
push
or
sarl
scas
inc
xchg
or
jmp
add
pop
lahf
and
movsb
push
andl
and
or
pop
sbb
daa
mov
and
scas
insb
push
ss
pop
inc
or
push
negl
scas
push
fstl
lea
mov
pushf
call
stos
mov
inc
movsl
dec
jne
cli
adc
add
cmp
outsb
cld
xchg
add
ficomps
popa
aad
daa
xchg
xchg
inc
rclb
xor
mov
adc
dec
insb
push
push
jmp
sub
mov
mov
push
insb
and
imul
inc
rcll
pop
xchg
or
pop
rorl
adc
push
imul
outsb
pop
dec
fwait
lahf
inc
cmp
pop
pop
xorl
sbb
adc
js
test
vsqrtpd
sub
inc
popf
in
nop
lods
out
lret
lret
outsb
jno
addb
pusha
sbb
shlb
push
pop
add
push
das
jbe
push
pusha
pop
inc
add
ds
sub
imul
cmc
jge
pop
sarb
mov
push
xlat
pop
shlb
fwait
cmp
imul
in
ficoml
or
in
jno
push
cmp
ret
push
mov
scas
popa
xchg
pop
std
mov
rcrb
mov
mov
adc
je
push
and
out
push
push
test
xchg
sub
shlb
jmp
insl
nop
mov
mov
movb
dec
add
lods
and
push
out
cmp
or
add
es
ja
xchg
sub
addr16
pop
inc
sahf
outsb
rorb
dec
sub
insb
adc
pusha
fiaddl
adc
mov
loopne
sbb
out
pop
dec
addl
push
jb
rorl
xor
loopne
add
inc
or
scas
ficoml
and
pop
and
aaa
es
lods
out
xchg
adc
adc
imul
daa
repz
insl
insb
pop
movsl
inc
xor
inc
pop
mov
sub
add
pop
dec
pop
jb
pushf
sub
sub
lret
sbb
cmp
cmp
xchg
daa
cmpsb
sbb
mov
addb
daa
lock
push
add
aad
or
pop
jne
inc
je
mov
adc
xchg
push
sbb
loop
in
jg
ds
imul
sbb
in
or
adc
fstpl
and
in
fwait
adc
mov
lret
cmp
decb
pop
mov
inc
lret
ja
shr
pop
xlat
insl
sub
dec
out
lea
jl
jo
popf
sub
gs
cmp
cmpsb
movnti
ljmp
inc
notb
out
inc
add
sub
push
push
adc
pop
inc
imul
pop
mov
lds
pop
jne
jl
das
pop
lcall
fmuls
int
leave
lcall
enter
cvtps2pd
or
std
inc
add
lcall
and
sub
inc
cmp
les
sbb
dec
aad
rcr
jbe
add
ret
gs
adc
cs
or
jge
mov
in
lahf
sub
jl
out
insl
daa
out
push
jb
dec
add
inc
jne
mov
in
cmp
dec
subl
sbb
and
pop
sub
scas
cli
sbb
in
pop
jnp
mov
and
sub
mulb
cld
mov
popa
lock
push
push
xorl
push
fadds
ja
data16
jb
pop
sti
insb
xchg
pop
jmp
test
loope
es
clc
cmp
mov
sub
inc
stos
or
mov
mov
or
ret
out
mov
fadds
pop
mov
dec
cmp
inc
ret
cwtl
in
adc
inc
pop
sbb
fldenv
outsb
repz
inc
icebp
aad
pop
add
push
cmp
cmp
or
inc
das
dec
xchg
inc
push
int
out
inc
push
jne
inc
dec
mov
ljmp
mov
fnsave
adc
repnz
rorl
js
fiadds
jo
js
dec
movb
daa
iret
mov
xor
shlb
jmp
xchg
loope
inc
pusha
rorb
inc
aam
jno
and
fiadds
inc
mov
out
bound
mov
push
xchg
pop
xor
fisttpl
in
cmp
gs
pop
mov
dec
adc
xor
test
mov
mov
xor
jae
imul
sarl
cmp
push
cmp
aad
dec
loop
dec
pop
loopne
mov
cltd
inc
sahf
mov
pop
mov
pop
fcom
push
or
or
aaa
dec
fucom
popa
jnp
cmp
and
jae
popa
loope
ret
add
adc
cmpb
cmpsb
inc
and
and
dec
inc
jl
out
out
fidivrl
std
fs
fisubrl
or
cmp
cmpsb
cmp
dec
shrl
stos
dec
sahf
pop
gs
data16
cmp
cmpsb
jns
mov
mov
rorl
pop
inc
rorl
push
sub
push
cmpb
and
push
in
push
or
lret
mov
jae
and
dec
in
ljmp
adc
mov
push
push
adc
sbb
shll
lds
dec
inc
mov
xchg
mov
jp
stc
call
push
roll
inc
cmp
dec
stos
cmp
cmp
xor
fiaddl
jne
flds
cmp
xlat
fs
cmp
pop
loopne
aaa
insl
jne
mov
adc
shrl
push
push
add
sbb
movsl
push
jmp
push
sar
js
inc
xchg
mov
mov
push
imulb
divb
dec
es
jmp
mov
jo
daa
sbb
sub
inc
push
outsl
pop
stos
push
push
clc
push
push
sub
dec
push
inc
push
icebp
and
mov
jne
xor
fcoms
stos
mov
xor
loop
xchg
fsts
iret
or
inc
scas
pop
cltd
and
push
add
sahf
and
add
or
inc
mov
xor
jne
add
enter
dec
cltd
fcompl
aad
xchg
sar
test
gs
fcos
mov
sub
push
test
cli
movsl
cmpsb
or
and
addr16
out
adc
mov
add
cwtl
cmp
pop
xchg
pop
sub
sbb
test
les
mov
sti
adc
mov
cmp
or
fisttpl
out
out
adc
mov
adc
aas
inc
insb
mov
mov
mov
es
xchg
bnd
add
test
cmp
or
sbb
push
lock
clc
lcall
inc
rorb
test
push
shll
or
add
pop
pusha
push
xchg
add
out
or
mov
prefetch
or
add
push
test
sub
mov
add
inc
or
mov
ret
leave
push
arpl
bound
in
inc
lock
je
nop
pop
add
dec
rclb
or
pop
popa
fimull
push
cli
jg
cmp
dec
shrl
jnp
pop
push
jbe
divb
stos
pop
push
and
ret
and
ret
mov
cltd
sbb
xor
js
xchg
adc
je
pusha
movsb
pop
pop
je
dec
daa
add
pop
ret
push
pop
sub
pop
stos
repnz
xor
inc
and
shll
test
pop
mov
pusha
xor
jno
push
add
mov
mov
xorb
ja
fidivl
imul
lods
adc
mov
inc
adc
pop
xchg
or
leave
dec
add
outsb
rorl
lods
mov
cltd
push
add
loope
addl
push
dec
ds
roll
pop
add
test
out
enter
rolb
arpl
nop
pusha
cld
inc
xchg
and
cmp
mov
mov
adc
fldcw
shrl
xorl
pop
xor
test
fiaddl
fistpll
pop
inc
cs
pop
das
xchg
or
in
pop
arpl
out
repz
test
rcrb
cltd
ficoml
inc
lods
add
out
mov
fsubs
gs
insl
dec
int3
leave
ss
gs
hlt
mov
add
adc
sar
cmp
and
jne
ret
jmp
mov
dec
movl
inc
xor
cld
and
inc
inc
fsts
call
xor
xor
push
cli
jmp
das
aam
and
mov
aad
and
jl
inc
movsl
adc
cmp
push
outsl
dec
leave
jmp
cltd
bound
pop
cmp
cwtl
arpl
out
and
cmp
cwtl
bound
mov
popa
fists
stos
ljmp
cmp
fldl
xchg
out
xor
in
cli
iret
pop
xor
jle
cmc
aad
leave
jp
push
movsb
call
inc
and
insb
sbb
std
push
pop
imul
icebp
sbb
fsqrt
outsl
mov
stc
aad
das
jo
add
pop
push
gs
push
inc
call
ss
mov
mov
and
movsl
rcll
test
lds
push
adc
pop
or
mov
loop
xor
je
fidivl
push
lods
push
jo
mov
sbb
sub
dec
icebp
dec
shrl
sahf
and
add
cmp
mov
push
push
or
in
pushf
lahf
and
pop
lret
subl
xor
sub
sbb
and
dec
xorb
sahf
jae
into
flds
stos
lods
sbb
jne
aad
sbb
rolb
jb
cld
jmp
sbb
out
or
or
mov
fisttpl
jbe
or
std
outsb
lret
aad
sahf
call
and
test
dec
jg
addr16
xchg
pop
adc
ja
icebp
and
icebp
addr16
bnd
jns
mov
mov
imul
xchg
jne
cmpsl
pusha
repnz
dec
push
cmp
cltd
cmc
push
inc
testb
pop
cmp
leave
fdivrs
xor
dec
jl
mov
stos
inc
xchg
daa
lret
daa
pushf
int
xchg
pop
adc
push
dec
nop
ja
sbb
repnz
jge
xlat
mov
and
jp
aad
pop
xchg
jne
pop
cmp
mov
cmc
jmp
loop
push
xor
icebp
xchg
push
mov
sbb
cmp
dec
cmp
movsb
adc
jp
jae
sbb
inc
gs
int3
push
call
imul
dec
loop
leave
cwtl
inc
xchg
xor
xor
xor
dec
sub
dec
pop
test
push
adc
jne
cmpsb
insb
sbb
imul
or
ljmp
mov
ret
lock
jge
movsl
jbe
imul
sub
fmuls
lcall
idivb
stc
mov
push
fnstenv
and
lcall
stc
andb
jnp
scas
sbb
sahf
ljmp
adc
mov
xchg
daa
push
lock
mov
or
je
pop
das
scas
and
sub
testl
inc
shll
imul
div
jae
cmp
je
cmp
cli
xlat
mov
xor
les
in
mov
jge
data16
push
push
lahf
jns
mov
mov
shll
lcall
jno
or
mov
pop
dec
mov
lods
mov
imul
mov
xchg
inc
ljmp
or
fnstenv
pop
pop
push
pop
pop
popa
sub
scas
mov
hlt
mov
shl
loop
cwtl
popf
repnz
add
push
jmp
cmp
lods
pop
popf
xor
pop
dec
test
idivl
jb
mov
jo
mov
jb
sbb
and
mov
push
pop
or
mov
xchg
push
inc
fnsave
pop
inc
dec
jbe
sbbb
hlt
jl
pusha
and
bound
frstor
cmp
or
pusha
imul
sbb
push
out
sub
pop
les
sbb
js
adc
jbe
shr
dec
push
adc
jno
adc
test
or
sub
fistpl
fnstsw
je
push
lds
jb
mov
and
pop
sti
or
stos
shl
push
mov
jno
rolb
jns
xor
mov
inc
rcll
int3
adc
sub
sbb
lahf
lods
dec
jo
stos
xor
outsl
jg
sub
sti
cmc
stc
bound
out
lret
adc
push
jg
leave
inc
adc
aas
pop
add
out
nop
imul
call
or
out
add
sbb
push
xor
and
sbb
lds
and
add
pop
rcl
aad
leave
push
cmp
outsl
popa
inc
sub
pop
adc
cs
mov
leave
push
xor
push
enter
lcall
iret
ret
xor
add
pop
jl
mov
and
xor
dec
pop
fxch
lock
pop
dec
add
clc
cmp
xchg
inc
adc
add
cmp
scas
pop
jne
fcoml
mov
int
sbb
fs
mov
iret
insb
hlt
out
mov
psrlq
fnstsw
jne
sbb
dec
ja
sahf
test
dec
loop
mov
pushf
pop
sbb
cmp
mov
and
push
mov
jge
xor
ret
jecxz
hlt
jl
sbb
jg
icebp
int3
cmc
out
xor
pop
cmpl
adc
pop
imul
cmpsl
sub
movsb
sbb
ret
xchg
pop
inc
sub
sub
sbb
pop
push
in
push
or
xlat
push
adc
shlb
jp
sbb
cmp
inc
xor
leave
out
adc
test
sbb
push
sub
dec
xchg
push
pop
xlat
and
mov
mov
rcr
jbe
jge
into
mov
bound
and
call
cmp
scas
sub
adc
jo
pusha
jbe
add
push
imul
dec
mov
push
push
addr16
adc
andb
orb
or
out
das
push
jp
js
cs
in
inc
push
sbb
adc
xlat
push
test
cmpl
in
jle
insl
push
imul
xlat
pop
data16
inc
jmp
aad
pushf
je
sub
sahf
xchg
jp
leave
push
push
icebp
sbb
iret
jbe
push
xchg
dec
fisttpl
cmpsb
mov
dec
pop
addr16
sbb
jae
cltd
jle
cmp
mov
gs
mov
or
arpl
sub
mov
sbb
add
cmpsb
mov
les
pop
inc
adc
xor
ret
insl
scas
xor
into
inc
sub
scas
push
imul
int3
push
insl
mov
icebp
adc
sbbl
es
or
mov
lea
int3
jns
insb
ret
je
outsl
mov
and
mov
leave
call
cmp
lret
aam
shll
je
mov
dec
or
mov
pop
jmp
popf
outsl
inc
lcall
jle
push
arpl
cmp
jae
in
pop
arpl
clc
push
cmpsl
insb
jp
cli
or
fistpll
arpl
lcall
pop
xor
xchg
xchg
lods
mov
and
popa
push
adc
int
inc
adc
inc
push
and
inc
scas
inc
aaa
jne
inc
ljmp
dec
jge
and
dec
xchg
int
test
push
pop
or
fs
adc
loope
mov
xchg
rcrb
mov
rcll
mov
push
int
arpl
icebp
sarb
sahf
and
les
xor
mov
mov
push
rolb
fld
pop
cmc
dec
out
pop
test
adc
test
xchg
mov
jp
out
pop
and
daa
cmp
and
lods
dec
fcmovbe
fiaddl
sub
mov
aam
lea
cmp
imul
sbb
call
test
rcrb
jb
lret
aam
daa
pushf
pop
das
std
orb
rorl
outsb
cmc
in
fsubs
call
stc
or
jmp
sub
add
daa
fstl
sub
fmul
push
and
repnz
cmp
stos
dec
sbb
mov
adc
loope
lret
pop
inc
test
mov
cmpsb
inc
movsl
arpl
dec
push
ffreep
leave
cmp
push
cmpb
cltd
pop
pop
mov
insl
repz
leave
lods
test
into
dec
js
loopne
fdivrp
loopne
xchg
xor
xor
jg
push
fwait
inc
ficoml
mov
daa
or
cmpsb
aas
sbb
dec
inc
push
adc
sub
stos
sub
rclb
jbe
arpl
out
das
out
je
add
adc
fldenv
ja
xchg
loopne
mov
insb
pop
lock
jg
xchg
out
jne
xor
pop
mov
adc
pop
inc
inc
xchg
or
lods
in
pop
outsb
jb
popf
out
jl
mov
iret
mov
xchg
jne
push
std
into
push
fistpll
adc
loop
push
adc
sub
into
stc
sbb
dec
jge
inc
mov
jge
inc
leave
jno
sub
cmp
mov
into
pop
mov
ret
jb
push
sbb
and
fisubl
adc
jno
fimull
scas
adc
push
dec
jno
popf
out
adc
push
mov
lods
and
ljmp
dec
jmp
cmp
inc
jbe
jmp
mov
pop
sub
inc
or
pop
or
jl
aad
mov
adc
jl
dec
lds
sub
jle
sarl
adc
and
mov
inc
mov
imul
icebp
mov
lahf
cmp
xchg
cmp
mov
inc
inc
jno
mov
bound
jns
push
imul
mov
jno
pop
add
js
popf
jbe
xor
or
cmp
jp
insb
adc
or
ljmp
cmp
jp
outsl
call
cmp
ret
mov
push
nop
jle
cmp
nop
jl
je
test
add
push
adc
in
flds
xchg
inc
push
out
inc
jl
leave
inc
sub
mov
or
add
rcl
ss
clc
and
push
out
mov
das
sti
sbb
adc
jbe
das
in
inc
insl
popa
fldt
pop
sub
push
xchg
mov
and
cld
pop
shlb
push
in
enter
and
fmull
xchg
sti
inc
stc
push
mov
arpl
sub
dec
or
in
xchg
ja
or
push
ret
sub
test
pop
pop
lock
bnd
jns
jo
incb
xchg
pop
jecxz
gs
pushf
sbb
sub
adc
dec
call
push
xor
or
mov
add
cmp
imul
movsb
stos
testb
lahf
dec
imul
mov
dec
pop
and
jnp
scas
add
repz
dec
cmp
or
mov
out
outsb
ret
sub
movsl
popa
and
lcall
cs
mov
notb
rcll
xor
inc
ret
repz
loop
jae
imul
sbb
mov
cmpl
in
loopne
dec
pop
scas
push
in
repnz
push
pop
push
aaa
mov
pop
xchg
leave
test
arpl
and
cltd
in
mov
in
xchg
adc
int3
mov
inc
sub
jge
sub
dec
fnstsw
mov
dec
das
int
cmp
xchg
std
cmp
mov
jmp
arpl
adc
popf
inc
jne
or
or
pop
das
popf
add
in
jle
lods
stos
or
mov
mov
push
pop
lods
jbe
jne
mov
hlt
fstps
and
lds
push
mov
insl
push
xor
jecxz
shlb
decl
push
cld
movb
jge
pop
sub
mov
adc
push
xorb
adc
insb
setno
jge
adc
xchg
sar
movsl
ljmp
inc
aam
fdivrl
push
and
lret
and
adc
cmp
or
or
adc
cmp
ljmp
lock
hlt
in
push
test
add
jno
fucomip
mov
mov
jno
sbb
pop
mov
jl
stc
pop
fcompl
dec
or
pop
mov
jnp
mov
inc
push
call
or
mov
xor
dec
insb
aam
lea
mov
mov
inc
out
pop
dec
imull
outsl
movsl
xchg
inc
mov
mov
sbb
leave
scas
mov
enter
hlt
mov
ss
xchg
mov
push
dec
and
fdivl
pop
ret
out
testl
mov
jle
sub
or
sub
or
test
scas
inc
not
test
xchg
fsts
sbb
je
push
pop
dec
cmc
cwtl
xor
sbb
sub
push
in
mov
xchg
std
or
push
in
add
pop
inc
rep
jb
jle
popa
cmp
add
es
icebp
sub
sahf
and
cmp
js
xchg
loope
push
loope
push
das
repnz
lea
mov
cld
push
cmp
xor
outsb
sahf
pushf
or
popf
xchg
pop
mov
or
addr16
es
adc
xlat
xchg
xlat
bound
lea
jb
and
pop
jnp
notb
pop
ret
popa
imul
lods
aaa
aaa
push
stos
cmp
movq
mov
les
int3
xchg
pop
mov
push
nop
stos
in
push
divb
sbb
jnp
cmpb
xchg
add
jne
mov
jmp
mov
lret
cs
leave
push
call
jnp
add
add
dec
sbb
sbb
or
lods
cmp
xchg
pop
xorl
cmp
push
outsb
std
push
popa
fidivrl
mov
sbb
das
jge
mov
mov
jnp
pop
sarb
por
mov
mov
jb
imul
mov
jge
xor
pop
mov
dec
xchg
sub
je
dec
xchg
scas
cmc
inc
push
sbb
push
inc
rolb
leave
inc
loopne
fidivl
or
or
pop
mov
sbb
movsl
lods
inc
push
lock
nop
test
or
jge
and
dec
inc
push
rclb
inc
fsubp
mov
sub
rol
outsb
dec
jbe
test
cmpsl
mov
xchg
dec
mov
jb
mov
adc
lods
int3
add
les
xor
lods
movsb
inc
jge
mov
lds
out
fwait
jne
mov
fucomip
mov
pop
push
mov
stc
and
jbe
xor
pop
js
gs
add
rcrl
adc
scas
rorl
dec
add
sbb
int3
fldcw
or
inc
inc
xor
and
push
lock
cmp
xchg
shr
jmp
or
aad
hlt
and
dec
scas
xchg
dec
negl
stos
jo
inc
adc
pop
push
jbe
ficompl
cmpsb
inc
add
pop
push
popa
jnp
or
jmp
fsubl
dec
es
push
ss
inc
cli
test
cmp
adc
dec
jb
xor
fldl
popa
shlb
cmpsb
stos
pop
pop
push
cmp
hlt
jp
scas
cmpb
lcall
jns
movsb
fisubl
enter
mov
xchg
mov
sbb
ror
add
leave
xor
xchg
jl
add
test
mov
dec
lahf
push
mov
cmc
mov
pop
cmp
sub
xchg
sub
add
mov
push
fyl2xp1
push
scas
std
and
add
mov
shrl
cmpsb
xor
pop
xor
jns
lcall
xchg
mov
cmp
fmull
jbe
fiaddl
or
cmpsl
cwtl
push
cmp
pop
sbb
sub
adc
test
jecxz
rcl
lcall
loopne
roll
dec
adc
pop
xchg
shrl
or
push
pop
mov
and
sbb
push
add
and
stos
jae
repnz
in
sub
sbb
addr16
mov
fcomi
push
inc
sbb
add
mov
ljmp
xchg
and
adc
cmp
insb
pop
mov
push
push
imul
ret
mov
pop
add
std
leave
xchg
pop
cmc
cmp
mov
aaa
stc
lea
mov
ja
fsubr
sbb
mov
stos
push
xor
loopne
pop
into
cld
cmpsl
cmp
mov
or
inc
add
dec
mov
inc
imul
add
pop
movb
jge
in
cmpsb
rcl
jns
pop
and
cmpsb
in
sbb
push
leave
add
adc
jle
xor
dec
add
sbb
test
mov
or
fwait
xchg
mov
push
stos
pop
push
add
das
mov
sbb
adcl
repnz
mov
pop
pop
add
mov
push
push
pop
xchg
push
test
sbb
xchg
divb
or
call
inc
fisttps
lods
mov
sarl
jbe
imul
outsb
add
cwtl
sbb
push
xchg
sbb
inc
pop
push
sti
fs
xchg
rcr
add
sbb
imul
ljmp
xor
aad
outsb
stc
adc
sbb
pop
cli
std
or
data16
inc
nop
xchg
dec
dec
cmp
jle
dec
loopne
andl
cmp
pop
push
testb
fdivrl
mov
xor
push
xor
sbb
cmp
pop
mov
pusha
sub
dec
sbb
cs
dec
xchg
mov
mov
je
aad
xchg
cwtl
inc
xor
push
mov
out
sub
sbb
pop
dec
sti
dec
std
mov
ret
pop
jne
or
push
stc
addr16
fwait
in
jnp
js
roll
dec
mov
add
out
aaa
cmp
dec
stc
arpl
std
mov
hlt
ljmp
pop
sbb
ja
gs
movsb
xor
flds
mov
inc
add
adc
cmp
cmpsb
dec
adc
ret
fisubl
sti
je
mov
pop
in
es
imul
cltd
jle
jns
dec
sub
jne
sub
int3
jg
cltd
inc
cmp
aas
cmp
rcr
dec
jp
xor
cmp
and
in
sbb
push
repnz
adc
jmp
add
out
sub
out
xchg
or
mov
mull
daa
pop
or
inc
hlt
fldz
or
rclb
in
dec
outsl
adc
push
test
inc
jp
sub
add
and
sbbl
adc
add
sarb
ljmp
leave
cmp
adc
mov
test
push
mov
adc
movsl
add
push
lds
movsb
cmpsl
or
sub
jae
or
add
sbbl
daa
imul
push
pop
bound
leave
jb
repz
mov
jle
cltd
xor
sbb
cmc
push
cli
mov
add
roll
lock
pop
push
cltd
flds
ja
scas
mov
mov
dec
fs
and
bound
mov
add
lret
sbb
push
sbb
js
fadd
insl
jno
inc
jne
das
fstpt
dec
xchg
mov
test
popf
xchg
sbb
decb
mov
lock
adc
and
add
loopne
cmp
outsb
in
mov
jne
mov
push
stc
pop
pop
clc
xchg
popf
ja
inc
cwtl
push
add
inc
stos
cmpl
dec
out
xchg
enter
loop
sub
jo
mov
daa
xor
inc
dec
out
lds
stc
mov
icebp
jo
mov
cltd
scas
adc
mov
dec
mov
lds
jbe
lret
out
das
or
or
push
mov
mov
inc
dec
xchg
fcmovnb
outsb
pop
jb
insl
xchg
inc
mov
lcall
add
sti
decl
out
cli
mov
out
into
jg
add
fadds
stc
shlb
mov
mov
mov
mov
xchg
rcrb
add
fs
mov
arpl
jl
xchg
gs
xchg
jno
push
xchg
mov
cmp
xchg
mov
mov
sbb
jle
fwait
jge
adc
and
jb
xor
pusha
jo
jecxz
jae
xchg
insb
repz
sub
adc
dec
fisubs
xchg
jo
adc
inc
adc
mov
sbb
inc
pop
sbbl
imul
jae
sbb
lods
test
fldt
jmp
aad
rcl
add
jne
xorb
shll
jb
sub
pop
adc
jbe
mov
or
sbb
popf
push
ficompl
xor
mov
mov
pop
xor
gs
or
cmp
divl
mov
cli
jp
shl
cmp
push
mov
or
jmp
mov
xlat
xor
and
jne
fcmovu
insb
sbb
mov
cmpsl
cmp
jp
jge
and
pushf
setl
fidivl
clc
out
pop
mov
inc
fdivrs
inc
iret
fs
cli
test
or
aam
stc
std
jge
add
mov
sbb
and
dec
inc
nop
jmp
cmp
or
and
mov
sbb
xchg
bound
lcall
roll
iret
clc
pop
lcall
and
cmp
sub
push
push
inc
int3
inc
or
test
cmp
cs
xchg
sarl
mov
dec
pop
push
scas
cmp
mov
shrl
cmp
int3
dec
mov
add
push
sbb
sbb
pop
adc
stos
scas
mov
jnp
jge
dec
push
cmp
push
mov
fisubrl
aaa
mov
jo
and
jne
adc
add
mov
add
je
fisubl
xor
add
ror
xlat
test
or
arpl
pushf
std
in
out
push
stos
sub
inc
shlb
inc
int3
fdiv
adc
cmp
outsb
jg
outsb
stos
int3
inc
adc
xchg
pop
je
loop
adc
and
jmp
push
mov
lret
fistps
out
je
icebp
jle
ja
mov
mov
xlat
lcall
out
xor
movsl
es
inc
or
lods
mov
cli
frstor
imul
inc
loopne
push
dec
and
icebp
test
or
xorl
mov
test
xor
cmp
movsl
jge
push
out
repnz
mov
jnp
negl
xchg
rclb
inc
xor
inc
push
adc
pushf
xchg
push
bound
pop
inc
jge
rcll
insl
push
sbb
test
je
fsub
push
movsl
sbb
ficompl
inc
out
mov
cmp
dec
mov
jbe
mov
fimull
push
aad
test
or
dec
cmpsl
fdivl
icebp
in
out
cmp
jno
outsb
dec
mov
rcrb
or
mov
inc
sbb
cmp
sub
cmp
imul
das
inc
jp
in
pop
scas
bnd
dec
test
inc
gs
adc
sbb
cmp
mov
mov
jbe
jbe
mov
sbb
xor
jne
adc
mov
stc
addb
aad
and
lods
int3
int3
filds
pop
mov
call
cmp
data16
orb
pop
icebp
repz
ret
enter
sub
xchg
cmpsb
push
inc
sahf
jge
sub
mov
mov
cli
aas
sub
sbb
cmpsl
ss
mov
sub
cmp
imul
xor
jmp
out
cmovnp
jp
inc
adc
sub
push
jno
dec
mov
xchg
enter
jno
loop
dec
in
xor
mov
mov
ret
push
imul
xor
ret
jnp
jecxz
or
lcall
into
arpl
push
fildl
in
xlat
ljmp
add
cmp
mov
add
sub
adc
les
cmp
icebp
mov
in
sbb
in
out
inc
aad
outsb
push
ljmp
clc
es
adc
es
push
jg
stos
mov
faddp
mov
test
or
push
jmp
cmpsl
jbe
cmpl
cld
add
stos
and
xchg
push
lock
test
cltd
movsb
cs
or
in
jne
add
out
lret
mov
cmp
loopne
pop
jne
pushf
rolb
repnz
aaa
fwait
stos
push
mov
and
pop
lret
ret
jo
inc
scas
test
cmp
outsb
jnp
addb
jae
sbb
inc
int
fidivl
or
dec
push
cmpsb
inc
int
inc
mov
xor
mov
js
cmp
push
das
dec
inc
dec
sti
dec
jle
aad
cmc
cmpsl
adc
out
or
call
loopne
add
addb
mov
pop
jmp
sbb
dec
test
or
adc
repz
inc
jbe
div
cmp
sbb
daa
std
mov
pop
sbb
ja
xchg
xor
rcll
jmp
or
or
fidivs
inc
push
jb
sbb
js
cmp
dec
or
and
jmp
or
inc
loopne
roll
cmp
out
repnz
push
push
movsb
add
pop
inc
add
jb
inc
in
pop
add
mov
push
ss
jmp
je
outsl
test
sub
imul
and
fildl
xchg
inc
addr16
xchg
in
jle
shlb
or
add
push
xchg
xchg
ljmp
cmovbe
daa
test
fwait
cmp
xchg
sarb
mov
rol
movsb
xlat
or
pop
inc
xor
mov
or
add
and
cmpsl
push
lea
dec
inc
push
xor
lahf
test
mov
lahf
test
jecxz
pop
sbb
out
cs
outsb
fucom
addr16
orl
outsb
mov
mov
sbb
cmc
pop
jns
insb
mov
lods
fdivrs
xchg
ja
push
xchg
pop
adc
add
dec
mov
test
pop
sbb
cwtl
mov
jo
out
xorb
pop
cmpsl
mov
push
xchg
fisttpl
cmp
popa
or
xchg
and
dec
mov
push
ret
add
das
adc
std
dec
aad
daa
sbb
add
ds
xor
mov
mov
movsl
andb
add
rol
pop
fcoms
sub
es
or
push
aam
xchg
pop
pop
cs
decb
repz
ret
mov
add
fst
std
mov
cmp
mov
dec
xlat
sti
xor
movsl
or
into
mov
in
test
xor
mov
bound
roll
dec
ljmp
sahf
sahf
push
insl
xor
or
popa
dec
lods
addr16
xor
add
bnd
adcl
sbb
dec
push
orb
cli
jg
cmc
outsl
push
push
xchg
pop
inc
pop
xor
or
inc
fists
scas
push
pop
push
jno
or
or
push
rclb
add
mov
js
daa
sbb
das
pop
sbb
or
pop
in
jge
add
adc
icebp
cld
popa
inc
shrb
shll
xchg
xor
test
arpl
arpl
mov
jo
pop
mov
inc
xor
imul
push
cmp
mov
stos
add
and
xor
repnz
cmpsl
xchg
push
out
push
cmpsb
dec
movsl
mov
aad
cltd
adc
iret
fstl
jmp
sub
in
push
jae
mov
outsb
mov
arpl
stos
sub
fwait
push
arpl
popf
xorb
and
sbb
pop
add
mov
sbb
daa
push
adc
jge
scas
inc
mov
mov
shll
adc
lahf
jne
dec
mov
mov
cltd
cmp
push
ja
xchg
xchg
movsl
xchg
sahf
push
mov
hlt
les
xor
xlat
call
das
push
loop
imul
cmp
inc
loope
or
jp
lds
jno
push
dec
dec
icebp
sahf
add
in
lret
push
inc
enter
shl
mov
lcall
sbb
rcll
xchg
bound
inc
add
push
mov
inc
xchg
dec
fucom
insb
sbb
push
cmp
fiadds
sbb
adc
inc
in
mov
xchg
dec
ja
int
dec
inc
jge
out
lods
in
scas
lds
dec
imul
dec
push
jge
push
testl
jae
das
cmp
add
in
push
sbb
adc
cmp
stc
dec
insl
inc
cmp
popf
popf
fadd
inc
mov
loopne
outsb
mov
and
les
or
push
mov
and
dec
inc
sbb
cmp
gs
inc
daa
jnp
lahf
cmpsb
add
addb
sbb
dec
sbb
fsts
adc
stc
xlat
bound
mov
mov
xchg
push
push
cmp
mov
lret
cmp
cmp
das
and
push
negl
inc
in
mov
jne
jp
js
cmp
mov
movb
or
pusha
xor
xchg
jp
repz
pushf
stos
fimuls
xchg
adc
adc
mov
adc
std
xchg
add
insl
les
mov
dec
rorl
fdivrl
or
cmp
inc
push
add
or
out
cmpsb
mov
std
in
pop
test
imul
lods
jp
mov
nop
pop
ds
js
pop
roll
pop
xchg
fcomps
add
dec
mov
add
mov
jo
icebp
add
mov
fidivrl
pop
pop
les
mov
sbb
cmp
inc
inc
sub
and
dec
int3
and
push
sahf
dec
or
sub
mov
arpl
cmp
std
adc
fisubs
out
pusha
cmc
fstpt
mov
mov
or
jmp
mov
pop
test
or
inc
mov
sub
mov
or
ljmp
aad
inc
pop
ficompl
xor
push
out
les
fcoms
xor
cld
push
add
xchg
imul
sar
jp
push
cmp
adc
subl
adc
movsl
and
ret
aad
cmp
sbb
rcrb
flds
or
dec
mov
sub
add
mov
sub
leave
sub
imul
mov
cld
mov
rolb
xor
pop
push
inc
cmp
into
rorl
or
mov
mov
sbb
or
xchg
add
dec
fstpt
xor
sub
ret
cmp
outsb
je
add
aas
jmp
xchg
int3
dec
inc
xchg
mov
and
jmp
lods
mov
jg
pop
mov
jle
add
or
sub
aaa
xor
and
jle
jmp
or
pop
test
movsl
dec
jp
mov
xchg
out
or
pop
inc
jmp
movsb
rcrb
jno
out
gs
cld
sbb
ljmp
and
mov
int
lcall
push
stc
sahf
dec
sbb
leave
imul
cmp
pop
sbb
xor
adc
pmullw
test
scas
mov
add
fisttps
aam
inc
and
xchg
xor
jae
loope
insl
out
or
sbb
in
cmp
sbb
ret
sbb
mov
sub
xlat
jecxz
leave
jl
sub
pop
lahf
jbe
cmp
std
pop
cmp
jb
push
popa
or
fs
ficoml
cld
sbb
bound
xor
movl
pop
jne
ret
jl
dec
sbb
lock
cmp
jmp
mov
xor
push
repnz
in
jns
insb
dec
sbb
ret
sar
pminsw
jb
dec
out
ficoms
jns
test
repnz
push
test
push
je
xchg
adcl
adc
and
push
dec
sbb
jmp
push
adc
xor
imul
jg
push
jge
sub
lahf
shlb
das
sbb
push
xchg
sarb
or
xchg
and
push
test
sbb
cmp
movsb
pop
je
ficoml
call
rcrb
and
cmp
cmpsl
jb
lods
cs
dec
call
push
scas
stos
jne
insb
andl
or
jp
adc
cmc
jns
fcomp
mov
mov
push
xchg
rcl
in
lret
xchg
js
and
outsb
cli
xor
xchg
es
ja
out
pop
scas
je
push
push
add
sub
sub
dec
jge
sub
data16
pop
xchg
das
mov
lahf
scas
sbb
repz
inc
push
or
mov
js
sbb
adc
xlat
inc
jl
mov
adc
xor
loope
jo
mov
das
inc
sbb
out
neg
sbb
sbb
sbb
jmp
es
sti
xor
jno
mov
pop
push
push
imul
adc
sti
adc
inc
sbb
jbe
rcrl
test
xor
sbb
fs
jns
jne
pop
stc
outsb
pop
out
sbb
mov
sub
pop
inc
je
stc
dec
mov
dec
or
push
fistpl
sub
xor
shrb
mov
mov
lea
inc
add
xchg
push
pop
or
sbb
push
fbld
jg
nop
lods
xor
pop
adc
xor
in
dec
dec
out
mov
lds
and
add
aad
loopne
push
pop
add
lcall
in
fistl
std
ror
into
icebp
flds
pop
jp
daa
xchg
xor
std
inc
and
xchg
idivb
lahf
push
dec
sbb
mov
pop
shll
sub
fdivrs
jne
aam
cmp
push
xor
mov
cwtl
adc
xlat
inc
add
jns
push
inc
rcrl
cmp
mov
dec
je
add
es
add
mov
or
icebp
xor
sbb
iret
sti
sbb
add
or
inc
fstpt
leave
push
or
jnp
push
insl
pop
mov
in
pop
ficomps
sbb
push
jns
jmp
in
in
sbb
xor
in
add
inc
push
push
in
inc
push
sub
push
das
push
cs
lahf
lods
mov
aad
aam
in
es
je
push
jns
popa
adc
sub
inc
addr16
imul
popa
fstps
std
arpl
movsl
pop
icebp
sbb
or
pusha
test
loope
ljmp
adc
cld
sbb
loope
mov
pop
cmc
jmp
stos
and
pop
mov
jns
dec
sbb
add
jno
jo
cld
jb
or
pop
jnp
xor
adc
xchg
adc
push
daa
sbb
push
pop
jo
or
push
or
ds
sbb
vunpcklpd
mov
sbb
gs
arpl
and
inc
sbb
fs
cld
in
pop
negb
mov
jge
sbb
icebp
sbb
movsl
pop
jb
nop
aad
mov
push
es
xchg
pop
adc
lret
or
lcall
shrb
jl
cmp
push
xor
sub
inc
nop
mov
inc
adc
rcrl
mov
adc
and
sub
jl
adc
push
lods
xchg
pop
lea
inc
loopne
push
aaa
xchg
jl
xchg
sub
cltd
cmp
and
cmp
pusha
mov
mov
jle
mov
in
and
jne
mov
loope
bound
ja
mov
sub
mov
lods
fdivp
mov
or
dec
pop
test
pusha
mov
in
pop
or
repnz
lea
out
pop
mov
jge
jmp
inc
push
push
jns
fwait
jmp
iret
jb
testb
mov
fldenv
or
pop
repz
xchg
rclb
rolb
or
pop
jbe
fiadds
jo
cmp
fldcw
dec
cltd
idivb
cmpsb
out
cmpsb
cltd
mov
shr
cmp
imul
orl
in
push
xchg
cmp
ret
bound
xchg
fnstenv
pop
in
sbb
bound
imul
and
imulb
mov
lods
and
stos
push
pop
or
movsb
and
dec
push
jb
jo
icebp
inc
test
ds
xor
dec
call
jmp
aaa
add
out
pop
aad
add
xchg
inc
fnstenv
mov
je
insb
or
pusha
dec
push
xchg
add
pop
scas
nop
jb
sub
clc
pop
ret
cmp
xor
test
lods
or
aaa
or
push
pop
fstp
or
daa
mov
jle
in
xor
mov
pop
mov
aad
imul
xchg
gs
dec
test
push
fisttpl
mov
xchg
rorl
xor
mov
movsb
xchg
xor
mov
push
iret
mov
jno
jbe
sbb
sysret
mov
xor
pop
sbbl
mov
push
ljmp
sbb
lea
popf
sub
push
push
imul
pop
addr16
gs
and
popf
in
jae
xchg
pop
rol
js
push
notb
dec
or
inc
push
stos
pop
cmp
cmpsl
imul
out
add
pop
imul
lods
daa
inc
sbb
pusha
adc
jne
push
mov
imul
xchg
cmp
ficoms
sub
inc
enter
inc
mov
sarb
int3
pop
cmp
fidivrl
icebp
add
pop
les
ficompl
and
frstor
jno
rcrl
je
or
mov
and
cmp
shrb
jle
mov
push
hlt
cmp
dec
dec
sbb
roll
shrl
scas
pop
stos
jne
sub
hlt
imul
vcomisd
bound
pop
mov
jns
jb
shlb
iret
mov
mov
and
in
add
jo,pt
adc
pop
or
movsb
and
inc
mov
or
pop
cwtl
mov
adc
and
sub
pop
test
cmp
in
pop
mov
mov
popf
dec
scas
pop
push
shlb
in
sbb
pusha
or
sbb
aaa
adc
push
sti
sbb
mov
shrb
fwait
out
mov
jne
nop
inc
add
adc
mov
pop
mov
jmp
aas
aam
jmp
push
push
xchg
pop
pop
mov
ljmp
sbb
ja
aam
arpl
lahf
or
mov
xchg
xchg
pop
cmp
fnsave
mov
cmp
lcall
sub
mov
mov
and
in
push
mov
or
stos
icebp
loop
insb
call
fsubrs
inc
fxch
mov
pop
sub
call
pop
movsl
fbstp
shl
imul
ljmp
fbstp
imul
sahf
inc
imul
pusha
icebp
ja
jnp
push
push
imull
rcll
int
pop
in
seta
or
jecxz
mov
push
cmp
cmp
jmp
push
ljmp
sub
fistps
mov
inc
decb
xchg
ret
lret
sbb
or
cli
out
lcall
mov
popa
dec
adcl
jp
xchg
aaa
adc
sbb
and
push
gs
arpl
inc
sbb
push
xlat
rcrl
mov
pop
inc
push
and
sub
push
popa
imul
sbb
int
mov
inc
and
es
and
outsl
or
sbb
btc
mov
insb
push
divb
dec
nop
xchg
sbb
pop
loop
push
ja
pop
add
stos
jae
inc
jno
xchg
leave
jge
jp
lock
mov
mov
push
adc
shrl
daa
dec
mov
dec
push
out
jns
jmp
inc
jmp
jge
orb
add
jbe
push
cld
jns
mov
and
mov
jecxz
daa
popl
out
fsubs
cmp
pop
push
lods
push
arpl
outsl
dec
loop
inc
mov
add
xchg
loop
jmp
leave
imul
out
out
pop
or
jp
or
jg
adc
adc
sub
cmp
add
inc
lret
jp
pusha
jo
mov
dec
jp
cmpsb
arpl
test
jb
sub
mov
out
pop
jmp
mov
mov
pop
out
in
dec
shrl
jp
sbb
xor
xchg
mov
lret
sbb
and
rolb
repz
or
aam
lods
mov
inc
sbb
shrl
ret
push
mov
xchg
aam
icebp
outsl
mov
test
int
mov
mov
cmp
inc
out
mov
repz
loope
dec
dec
loop
xor
inc
cmpsb
xchg
fstps
dec
sub
or
dec
ds
out
out
stos
mov
push
test
aad
xchg
push
mov
sub
lods
inc
xchg
inc
add
lret
dec
xchg
lods
cmp
lds
test
and
add
mov
mov
mov
pop
sahf
mov
mov
cmp
adc
mov
aad
out
inc
sub
dec
cs
sbb
test
adc
lods
dec
and
cmp
sbb
xchg
cwtl
in
je
sbb
or
bound
fwait
push
sub
jb
jp
add
or
test
adc
mov
lret
lss
shlb
scas
cmp
add
inc
xchg
aam
stc
test
lcall
add
sub
std
xlat
add
pop
hlt
inc
jb
xchg
sub
inc
jmp
mov
xor
bound
xor
cmpsb
leave
dec
inc
sbb
jmp
push
inc
scas
jno
clc
clc
xor
dec
sbb
bound
cmp
or
sbb
imul
test
outsb
push
std
push
es
clc
sub
mov
pop
sbb
movsb
iret
fld
pop
cmpsl
jbe
inc
mov
loopne
pop
and
inc
out
xchg
push
adc
sbb
jg
inc
push
testb
shll
loopne
inc
or
pop
pop
fcmovnbe
sbb
roll
sub
and
sbb
cmp
and
inc
xchg
push
push
sub
push
adc
xchg
inc
jnp
ss
xchg
xor
cmpsb
pop
out
push
pop
aam
fs
int3
push
movsl
jno
icebp
sub
lock
pop
xor
dec
add
cld
and
mov
inc
mov
das
test
mov
dec
movsl
xor
pop
sub
pop
nop
push
adc
aas
notb
decb
popf
pop
jge
push
sahf
aaa
sbb
cmp
in
push
popa
insb
lahf
add
sbb
je
and
sbb
imul
pop
dec
and
jl
or
jp
dec
push
cmp
pop
or
inc
rcrb
inc
push
or
lahf
jmp
daa
inc
fcomps
rol
jbe
fistpl
ret
inc
ja
cmp
jnp
lcall
in
fnstcw
or
jne
cmpsl
outsl
adc
pop
xchg
inc
pushf
xor
xchg
ja
adc
adc
add
push
pop
mov
xorb
jmp
and
jge
inc
psrlq
lret
or
mov
xchg
icebp
dec
lock
sti
lods
dec
movsb
dec
sub
test
arpl
shlb
sub
push
jg
popa
xor
pop
imul
jo
push
push
inc
out
and
sbb
ja
adc
pushf
iret
cmp
call
lock
lods
lcall
stos
and
jo
inc
pop
pop
and
jl
adc
push
daa
or
mov
jl
pop
imul
dec
fiadds
dec
jno
adc
adc
jge
pop
mov
out
jmp
lds
pop
xor
stc
and
out
in
pop
adc
push
inc
jne
movsb
push
fs
stos
fstps
dec
sar
insb
pop
mov
mov
dec
xorl
clc
inc
push
cmp
cmc
iret
or
mov
fadds
mov
xorps
cli
mov
sub
mov
pop
mov
adc
pop
inc
imull
pop
pop
imul
imul
test
outsl
sbb
pop
stos
adc
inc
pop
inc
loopne
ds
dec
stc
in
mov
fidivrs
sub
mov
mov
mul
adc
aas
sub
cmc
orb
dec
pop
adc
stos
cltd
dec
nop
inc
fisubl
xchg
cmp
mov
test
cs
movsl
scas
add
cmp
pop
xchg
push
jg
push
enter
pop
add
or
push
test
into
stc
pop
cmp
adc
lahf
dec
pusha
mov
std
pop
scas
push
shl
dec
jmp
push
mov
repnz
xchg
insb
mov
add
es
aam
dec
popf
negl
jge
inc
rclb
gs
aad
fnstenv
add
and
xchg
xor
ret
mov
addr16
aas
in
add
das
xor
adc
scas
pop
add
movsl
loope
mov
xchg
xor
cmc
ret
xchg
add
nop
mov
popa
mov
mov
inc
outsb
lcall
fdivrl
das
roll
test
or
aaa
mov
addr16
rorb
sub
jge
das
jecxz
pop
jnp
mov
popf
lock
push
rol
int3
sbb
mov
fadds
push
mov
xor
cmc
lds
rcll
pop
pop
or
fmull
mov
je
push
imul
shl
xchg
out
lods
ja
popa
xchg
add
sub
dec
push
add
testl
mov
test
push
imul
call
pop
jno
adc
jo
insl
jmp
jge
or
pop
icebp
xchg
cmp
pop
adc
into
aam
push
ljmp
out
mov
or
inc
xor
add
sbb
mov
add
add
in
cmpsl
inc
inc
ljmp
and
sub
jo
aaa
fcoml
push
push
and
jmp
cmp
cmp
sarb
sbb
push
fcom
je
dec
dec
movsl
jno
push
iret
out
loopne
inc
sub
je
fbld
jp
mov
int3
fisttpl
push
pop
push
adc
les
sti
inc
xchg
bound
pop
cld
and
sarl
repnz
cmp
rol
jmp
aaa
lods
dec
pop
adc
fwait
jno
jbe
test
jmp
scas
jg
out
test
stos
xlat
adc
pop
add
sbb
sub
test
fwait
in
cltd
bound
sysexit
and
dec
adc
daa
xchg
loop
cmpsl
fimuls
outsb
xchg
sub
mov
add
jno
pusha
xchg
xchg
ret
arpl
push
lds
sti
xchg
in
test
cmp
nop
mov
sub
loop
in
inc
xor
xchg
popa
jge
xchg
jo
push
inc
jle
or
adc
test
stc
sbb
or
or
mov
dec
imul
push
frstor
mov
aad
sbb
sbb
pusha
pop
test
cmp
or
dec
or
mov
nop
and
or
cltd
int
scas
xor
aaa
mov
xor
fildl
in
or
inc
push
jg
add
dec
mov
loop
cmpsl
cmp
sub
out
adc
sti
jns
adc
addr16
push
sar
stos
xor
pop
jbe
jno
xlat
jns
push
or
in
adc
lcall
cld
pop
push
push
sub
or
int
adc
or
sahf
inc
jle
xchg
push
sbb
or
aam
xor
xor
pop
pop
xchg
xlat
icebp
xor
sub
sub
push
xchg
inc
int
pop
shll
outsl
loopne
or
pop
movsb
fidivrs
pop
in
in
test
stos
inc
sti
movsb
aaa
cmp
fldt
push
inc
mov
adc
pop
jb
push
push
jne
dec
mov
test
sti
mov
push
fadds
push
xchg
and
inc
cmp
adc
das
pop
popa
sub
cmp
ljmp
and
adc
pop
adc
inc
dec
roll
fs
jg
bound
jnp
cmpsl
test
adc
mov
lods
dec
stos
sub
xor
popa
aam
cmp
in
rorb
push
fwait
std
loopne
xchg
gs
and
fcoms
push
add
sub
pop
mov
sub
in
or
push
imul
movsl
ss
jmp
sti
jge
dec
das
push
jmp
jp
push
mov
xchg
cmp
or
pop
or
adc
mov
cmc
push
aad
fcmovbe
mov
pop
dec
add
cmp
scas
inc
inc
insb
mov
add
jp
mov
cld
pop
addb
xchg
and
aad
mov
lds
jle
cli
mov
jmp
adc
out
xor
fs
and
std
jp
jnp
lahf
pop
mov
push
sti
loopne
aas
pop
pop
mov
incl
push
je
cmp
stos
inc
std
sbb
adc
xchg
push
pop
jle
sbb
test
mov
daa
xor
sbb
insl
sub
into
dec
es
pop
jne
mov
aam
dec
add
test
jge
sbb
ljmp
xchg
cmp
add
stc
jle
nop
or
repz
xor
fwait
insl
adc
mov
es
jl
es
lods
cmp
mov
out
sbb
sbb
jae
flds
roll
jb
rcll
lock
or
mov
inc
or
or
jl
movl
mov
inc
xor
lret
pop
adc
in
inc
clc
gs
ljmp
jmp
in
das
sbb
xchg
pop
pop
mov
xor
or
push
addr16
add
popl
leave
lods
dec
mov
stos
xchg
add
and
inc
pop
adc
lock
jl
push
adc
aad
push
gs
js
cwtl
dec
jns
jge
push
adc
jmp
inc
and
sub
scas
mov
mov
andl
and
in
jl
jge
out
push
xchg
sbb
push
and
jmp
lret
jle
das
flds
sub
arpl
dec
jle
ds
jp
mov
and
xchg
sbb
add
inc
movsb
gs
outsb
cmp
push
fbstp
push
cmp
imul
fistl
push
dec
jo
sbb
imull
sub
outsb
dec
jp
addr16
inc
adc
mov
adc
dec
xor
out
pop
mov
sub
clc
pop
enter
aas
mov
xchg
mov
pop
mov
pop
and
inc
and
cmc
je
push
adc
insb
rcll
mov
das
mov
jne
int
mov
fists
cmp
and
adc
out
imul
dec
inc
push
movsb
dec
jmp
fldenv
jmp
int3
loop
xor
adc
push
or
dec
mov
adc
cmp
ja
nop
push
and
iret
cmp
xchg
roll
shlb
loope
sub
scas
ret
lods
adc
popf
outsb
jp
push
fcoms
sub
divb
sub
cmp
cmp
pop
pop
inc
add
push
cmp
mov
in
inc
pop
dec
sub
pop
mov
gs
dec
and
jp
in
jge
add
rcrb
xor
push
or
movsb
mov
out
push
mov
jb
in
iret
rclb
cmp
xorl
lret
notb
xchg
daa
std
std
inc
cmp
push
xchg
sub
add
pop
lock
rcll
mov
cmp
add
cmp
xor
repnz
rcrb
nopl
shrb
mov
sbb
xchg
in
leave
js
adc
xchg
inc
mov
sbbb
ret
sbb
inc
or
push
outsl
mov
mov
psllw
mull
orl
loope
push
push
xchg
mov
inc
mov
xor
push
std
daa
cmp
bound
xchg
push
leave
ss
sbb
fstpt
pop
pop
xor
int
ja
inc
adc
loope
imul
data16
inc
cwtl
dec
inc
cmp
xor
sub
into
adc
repz
nop
sbb
push
jmp
cmp
adc
and
add
mov
mov
adc
andl
jg
adcb
sbb
pop
ret
push
jecxz
ret
sub
jg
gs
mov
pushf
ja
push
outsl
cmp
cmp
fimull
js
adc
mov
mov
repz
pushf
mov
xor
pop
es
push
cmpsb
jmp
add
into
test
inc
adc
inc
inc
sub
outsl
cli
inc
adc
dec
jbe
out
and
jae
lea
jecxz
les
jmp
dec
sub
add
outsb
lods
repnz
pop
mov
jb
xchg
inc
push
je
in
jge
push
xchg
xchg
jno
std
adc
in
jae
xchg
lods
sbb
jmp
hlt
cmp
xchg
dec
bound
les
and
sbb
inc
sub
cmp
dec
ret
or
lea
inc
push
jle
or
nop
jge
pop
mov
test
or
rcrl
nop
ret
pop
dec
scas
rcr
mov
dec
dec
imul
popa
jl
add
xlat
data16
push
push
jns
not
mov
and
aam
popa
and
mov
jecxz
daa
sub
push
ds
and
and
dec
ret
mov
sarl
push
test
sbb
pop
outsb
popf
ljmp
jnp
repnz
xchg
mov
inc
inc
flds
test
xchg
or
adc
rorb
icebp
ljmp
dec
rclb
dec
or
in
adc
in
movsb
add
jnp
pusha
nop
pop
ljmp
mov
mov
jbe
push
sub
jge
jno
fucomip
xor
mulb
aas
pop
fmuls
mov
stos
or
hlt
mov
int3
xlat
mov
and
mov
bound
pop
add
dec
mov
or
adc
mov
sti
push
sub
nop
test
pop
fdivs
pop
ja
push
mov
jne
cli
jbe
jp
sarb
shll
xchg
jge
out
dec
dec
inc
cmpsb
push
push
mov
in
or
adc
arpl
sbb
cmp
xchg
cmp
adc
notb
cmp
lea
jns
test
inc
xchg
dec
vmread
dec
mov
jae
push
imull
xchg
std
push
aam
sbb
fsts
xor
and
add
and
jae
enter
and
fiaddl
and
out
mov
cld
mov
pop
cpuid
loope
jno
inc
aaa
xchg
pop
xchg
sub
fsts
or
mov
out
jl
jp
sbb
mov
jge
jecxz
jl
inc
mov
cmpsl
imul
push
fsubs
iret
rorl
int
mov
sbb
bnd
mov
adc
sub
sub
xor
mov
dec
add
pop
addr16
jbe
jne
jnp
sahf
mov
cmpsl
pop
leave
and
scas
int3
adc
and
dec
jl
dec
jecxz
scas
mov
addr16
je
jl
and
lock
sbb
pop
pushf
outsl
xor
fwait
push
add
dec
jo
mov
lods
sbb
test
sbbb
movsl
sbb
mov
cltd
pop
and
and
jp
test
movsl
in
outsb
es
dec
mov
adc
dec
xor
mov
dec
jno
ja
mov
adc
mov
icebp
pop
rcll
inc
scas
addr16
dec
jno
push
and
lret
mov
push
mov
mov
fmuls
adc
adc
cmpsb
dec
pop
das
inc
push
les
mov
mov
cmp
insb
imul
pop
cld
jge
push
adc
bound
add
scas
cmpsl
outsl
adc
push
sti
jae
sub
cmp
cmpb
arpl
aas
push
cmp
sbb
sarl
xor
aas
je
cmp
mov
les
adc
xchg
sti
nop
popa
and
jl
or
movsb
push
and
popf
mov
xorl
pop
mov
out
jbe
jecxz
sar
inc
fstps
cmp
lcall
xor
sub
icebp
int3
and
outsb
fsub
mov
pop
mov
inc
pop
dec
fcoms
imul
cmp
je
adc
inc
fs
mov
and
popa
lret
stos
push
fsubl
push
gs
cmovbe
jmp
insb
add
push
and
mov
cwtl
push
or
jne
pusha
iret
aaa
add
jns
enter
xchg
mov
and
fsub
dec
mov
xor
stos
out
sbb
das
aam
inc
gs
inc
sub
sub
call
xchg
cmp
lret
std
pop
shlb
mov
sbb
addr16
enter
cmp
das
cmc
jg
test
mov
sub
mov
stos
dec
mov
sub
jnp
scas
pop
and
cmp
test
lretw
decl
inc
or
adc
mov
jle
jno
filds
push
cmp
call
push
sbb
push
ss
ds
sbb
add
xchg
inc
jmp
dec
mov
adc
dec
insl
ds
testb
insl
and
cmp
jnp
mov
and
pop
mov
cmp
jb
xchg
int3
test
and
and
jle
xchg
sbb
es
dec
xchg
stos
call
and
sub
and
ret
jge
call
je,pt
pop
arpl
xchg
sub
cmp
xor
jp
rorl
push
outsb
daa
jp
ja
outsl
adcb
pop
xchg
xchg
mov
fsts
cli
mov
lods
mov
fsubrs
ficoms
lea
insb
mov
sub
inc
xor
imull
xchg
xchg
xor
xor
rolb
cmp
or
fcompl
mov
gs
or
add
push
push
jae
lea
ss
add
pushf
js
jge
testb
imul
sub
fiadds
ja
in
lods
pop
in
fcmove
inc
out
jl
ret
setge
inc
cltd
mov
cltd
xchg
icebp
into
or
pop
das
add
mov
push
call
out
inc
mov
mov
aaa
push
fwait
bound
inc
out
ljmp
in
in
inc
push
xor
push
xor
fwait
call
lods
dec
sar
addr16
cmpb
ja
mov
movsl
in
fsub
xchg
and
in
les
xchg
dec
cmp
mov
jne
loopne
fcompl
out
das
outsl
fiaddl
jge
jecxz
nop
pop
lea
add
mov
inc
lahf
adc
int3
lods
add
add
cmp
jns
mov
push
push
fsubp
out
repnz
push
in
xchg
loope
rolb
pop
jne
add
lahf
aam
fisttpl
mov
pop
dec
mov
xor
inc
xor
jge
in
sbb
inc
inc
es
cmp
js
mov
sbb
dec
push
jecxz
fists
push
cmp
inc
add
jbe
mov
stc
out
sub
push
add
xchg
mov
pop
inc
aam
pusha
cmp
inc
add
pop
xor
fnsave
arpl
jns
ret
push
add
mov
inc
dec
push
push
cmp
dec
mov
or
push
xor
lods
ret
inc
xchg
nop
jne
dec
add
dec
mov
push
cmpsb
add
add
cmp
inc
mov
pop
sbb
xor
pop
xor
dec
aas
jle
add
testb
and
fcomps
xor
popf
std
lods
movsl
orl
inc
frstor
push
jge
mov
dec
push
loopne
sub
nop
imul
push
sbb
adc
pop
std
ja
add
into
xor
or
test
inc
decb
xor
movsb
sbb
mov
je
leave
sub
incb
cmpsl
std
lds
outsl
hlt
in
lea
test
xor
push
xchg
imul
push
cwtl
pushf
cmc
aas
adcb
inc
inc
jno
sub
adc
add
mov
push
dec
add
jge
mov
lds
dec
jo
sbb
sub
dec
sbb
negb
mov
mov
sbb
and
movsb
ds
inc
dec
jne
jl
rcll
fcoml
jg
inc
cmp
mov
push
enter
sbb
fistl
mov
push
std
jno
cmp
notl
jbe
cmpb
and
sub
mov
out
js
lods
ja
out
sahf
lods
scas
inc
pop
xchg
mov
push
lcall
inc
addr16
mov
fsubrs
sub
push
mov
or
in
lret
adcl
jb
aas
scas
mov
adc
cmp
adc
outsb
xor
sub
pop
sbb
fwait
ja
xlat
sarb
mov
loope
adc
aam
popl
arpl
pop
add
mov
aaa
int
xor
jb
xor
mov
or
dec
imul
mov
in
call
adc
jne
sbb
dec
sahf
cmp
dec
cli
cmpb
pop
mov
dec
pop
sbb
inc
pop
shl
es
hlt
stc
cmp
xorb
mov
adc
or
adc
or
push
and
divb
leave
sbb
movsl
jnp
mov
jae
cmp
shl
adcb
mov
adc
int3
ja
xchg
xchg
stc
popf
loop
lea
jl
add
mov
mov
or
fsubs
mov
mov
inc
or
cltd
pusha
inc
andb
cwtl
fs
imul
aaa
adc
xor
cs
mov
out
xchg
lahf
xor
jmp
mov
add
mov
inc
push
rorb
cmp
inc
mov
push
sbb
or
push
inc
mov
int3
xchg
and
adc
jg
jcxz
pop
mov
stos
je
or
cmc
push
jnp
push
test
cwtl
pop
shlb
mov
bnd
inc
xor
rorb
add
test
jecxz
jl
rcll
aaa
fadds
xchg
ss
jno
je
push
andb
rcr
and
jno
xchg
clc
decb
sub
mov
or
pop
mov
push
std
push
inc
mov
mov
scas
test
adc
push
jg
and
xor
sub
out
aam
sbb
adc
cmp
jo
xor
and
add
cmp
xlat
push
and
outsb
jnp
mov
adc
jge
icebp
jnp
sub
mov
stc
xor
dec
push
scas
mov
stc
add
adc
test
nop
ja
out
or
dec
xchg
aam
or
xchg
in
adc
popa
mov
sub
push
rcll
dec
test
cmp
jle
dec
cmp
scas
pop
pop
cmc
pushf
jle
std
push
movsb
mov
pop
outsb
mov
mov
pop
out
rolb
adc
inc
jo
dec
in
jbe
pop
pushl
out
mov
mov
cli
repnz
test
fwait
push
mov
xchg
add
jmp
cli
lcall
push
loopne
jl
cmp
dec
cli
xchg
push
mov
adc
and
loopne
or
stc
mov
cltd
jno
je
xor
lods
pushf
push
mov
add
mov
sbb
xchg
pop
and
aaa
push
jp
sub
jl
or
inc
or
or
insb
fs
push
pop
ret
shll
add
or
dec
sbb
jne
push
mov
adc
outsl
jae
jge
jae
jge
jae
jge
inc
adc
daa
pop
out
xor
lods
test
cld
add
mov
movl
aad
dec
push
or
out
adc
ljmp
jbe
fs
in
jns
into
mov
scas
sahf
mov
push
out
sbb
xor
dec
jge
jbe
xchg
mov
les
out
je
sbb
sub
dec
lods
pop
in
or
pusha
mov
push
pop
inc
es
notb
rol
dec
add
aaa
test
data16
add
jecxz
stc
xor
imul
inc
in
call
mov
lret
xlat
jb
test
addr16
cmp
push
cli
inc
out
lea
xor
sub
add
inc
xor
sbb
jne
js
pop
or
fwait
cmp
pop
inc
lahf
push
xchg
pop
jge
repz
mov
cwtl
add
xor
jg
jns
das
mov
xchg
test
or
pop
out
aaa
and
lea
pushf
jb
lret
dec
push
sbb
lahf
fstps
push
add
fisubrl
cmp
repnz
push
push
mov
sub
pop
shlb
test
mov
mov
and
pop
loope
sbb
adcb
divl
dec
pop
gs
pop
cmp
dec
rcl
jge
fstps
pusha
fidivl
shrb
sbb
jle
ficoms
sub
enter
adc
and
pop
loop
in
scas
movl
xor
fistpl
movups
out
mov
aam
in
ds
mov
dec
fildl
jl
mov
lock
fistl
scas
sbb
cmp
dec
inc
stos
add
dec
js
mov
imul
data16
cmp
cvtpi2ps
in
mov
in
aad
pop
loopne
nop
inc
cmp
jle
add
cs
daa
cld
es
mov
lods
adc
xchg
jns
jne
stc
mov
out
loopne
xchg
mov
popa
sub
dec
sub
hlt
push
rolb
mov
inc
enter
mov
or
jle
cmp
jno
rcrb
mov
dec
mov
mov
sub
add
stos
inc
cli
sahf
jmp
jp
add
pop
jp
cmp
in
adc
fcom
adc
data16
cmovns
add
test
in
adc
icebp
add
test
and
cmpl
jne
dec
je
arpl
dec
push
mov
lcall
jbe
shll
lods
imul
scas
mov
mov
pop
mov
dec
add
inc
iret
int
xlat
cltd
jae
mov
aaa
arpl
test
in
jl
fwait
push
push
sub
adc
push
push
loopne
gs
push
popf
scas
rolb
movsl
mov
frstor
lds
add
mov
dec
mov
jg
adc
popa
jle
shlb
pop
les
shlb
xor
ficomps
cmp
adc
mov
inc
cmp
jne
popa
std
dec
add
pop
add
adc
pop
ret
or
mov
stc
sahf
imul
pop
js
add
shl
data16
rcrb
aaa
cmp
mov
mov
shlb
or
xlat
mov
pop
adc
das
test
loope
jl
pop
js
pop
cwtl
movntq
adc
dec
sbb
daa
jp
jns
fsubr
std
and
push
pop
pushf
icebp
add
ret
xchg
ja
cmp
or
popa
dec
addr16
adc
ljmp
popf
mov
test
clc
xchg
pop
adc
mov
movsl
ret
and
dec
or
pop
stos
mov
pop
pop
inc
jne
out
pop
int3
sub
das
and
and
mov
sbb
push
xor
imul
jp
jne
outsb
movups
fiaddl
mov
imul
jns
and
pop
and
in
gs
cld
pusha
cmp
orl
jb
int
jnp
pusha
pop
scas
aad
int3
out
aaa
dec
jge
mov
test
add
mov
jae
test
jecxz
jns
pop
dec
mov
in
mov
cli
ljmp
cmp
mov
dec
pop
fdivr
add
in
rclb
fwait
lahf
outsb
fistps
or
lods
lods
pop
adc
mov
int
adc
es
leave
jg
push
loopne
loopne
pop
mov
shr
xchg
gs
dec
or
test
sub
popa
adc
ret
daa
iret
imul
push
imul
ss
pop
dec
das
test
repnz
loop
and
adc
into
outsl
inc
imul
ret
mov
cmp
pop
into
sbb
or
fmull
add
cld
dec
enter
jb
shlb
and
fistps
je
mov
les
jmp
test
push
pop
jle
push
lods
lock
push
dec
adc
jmp
rcrb
push
jo
gs
or
mov
inc
call
aaa
imul
mov
fsubr
pop
fimuls
es
outsb
or
fadds
push
scas
cmpb
pop
mov
cld
fwait
xor
mov
xor
sub
cmp
fdivr
jge
add
in
lock
mov
cmpsb
jbe
sub
inc
out
int3
sbb
jns
icebp
out
adc
mov
ffreep
xlat
jbe
das
adc
sbb
pop
adc
adc
xchg
nop
lods
add
fwait
push
orb
mull
inc
mov
jg
mov
sub
sti
xor
.byte
