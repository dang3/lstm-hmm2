rcr
ror
mov
xor
adc
xor
decl
jne
lea
xor
xchg
shl
ret
cmp
jne
xchg
neg
shl
adc
lea
cmp
jne
mov
rcl
xor
ror
lea
not
neg
cmp
jne
xor
rol
neg
mov
not
mov
ror
neg
inc
jne
lea
not
cmp
jae
ror
xchg
lea
mov
mov
mov
xchg
cmp
jae
lea
and
xor
mov
lea
neg
lea
mov
lea
neg
lea
lea
cmp
jne
rcr
add
mov
adc
movl
mov
xchg
cmp
jne
lea
rcl
xor
call
neg
not
cmp
jne
lea
xor
lea
mov
add
shr
xor
xchg
xor
add
xor
mov
xor
xor
lea
push
push
push
push
pushl
call
cmp
jne
xor
lea
rol
mov
lea
mov
lea
lea
adc
xor
cmp
jne
xor
mov
shr
dec
mov
not
lea
ret
neg
lea
neg
adc
xchg
cmp
jne
xor
rcl
mov
popa
leave
call
call
mov
mov
shl
movl
xor
mov
add
xchg
cmp
jae
and
xor
rcl
mov
rol
mov
movl
cmp
jne
lea
mov
mov
mov
mov
xor
lea
xor
cmp
jne
mov
shl
shl
neg
and
not
xor
cmp
jae
movl
xor
xor
movl
xchg
mov
xchg
not
xchg
movl
cmp
jne
xor
ret
push
lea
push
push
pushl
pushl
call
cmp
jne
xor
not
mov
neg
rol
mov
add
xor
ror
mov
cmp
jae
mov
neg
add
and
neg
adc
pushl
call
pop
shl
cmp
jne
push
mov
sub
pusha
neg
rol
neg
mov
call
shr
xor
mov
xchg
rcl
call
cmp
jae
adc
xor
xchg
mov
lea
xor
shr
adc
mov
lea
rcl
lea
cmp
jae
movl
xchg
xor
dec
mov
xor
cmp
jne
not
and
call
add
add
mov
neg
xor
mov
xor
xor
mov
xor
not
cmp
jne
ror
ror
ret
mov
mov
xor
xor
xor
mov
xchg
hlt
cmp
jne
mov
not
xchg
mov
mov
cmp
jne
rol
shr
mov
mov
rol
mov
rol
adc
mov
neg
rcr
rol
and
xchg
rol
lea
xchg
not
adc
call
cmp
jne
shl
mov
xor
lea
push
lea
push
lea
push
lea
push
pushl
call
cmp
jae
mov
lea
lea
mov
mov
not
adc
or
xor
neg
xor
not
lea
call
cmp
jne
not
neg
movl
mov
lea
cmp
jne
mov
xor
xor
xor
not
xor
xor
xor
rol
mov
mov
mov
xor
pushl
call
cmp
jne
mov
mov
rol
shl
neg
lea
neg
xor
not
cmp
jae
add
xchg
popl
neg
lea
mov
add
cmp
jne
rcr
xor
neg
xchg
mov
lea
xchg
not
cmp
jae
xor
mov
add
xor
not
xor
push
mov
rcr
mov
add
xor
mov
cmp
jne
mov
neg
lea
lea
push
push
push
push
push
push
push
call
xchg
xor
rcl
cmp
jne
not
add
inc
je
mov
xchg
add
cmp
jne
shrl
mov
mov
lea
mov
mov
xor
mov
cmp
jne
lea
mov
lea
xor
not
neg
adc
ror
mov
lea
push
push
push
push
push
push
push
call
cmp
jne
add
and
add
movl
and
neg
xchg
movb
xor
cmp
jne
mov
lea
lea
neg
mov
mov
rcr
rcr
lea
shr
xor
cmp
jne
mov
xor
adc
lea
push
push
push
push
call
not
neg
xor
xor
ror
mov
cmp
jne
pop
or
jl
imul
cmp
test
xor
cmpl
gs
lock
sbb
inc
fbld
mov
push
fimull
aas
je
cmp
stos
mov
je
inc
add
out
lods
addr16
loop
cmp
addl
loop
xchg
mov
js
rorb
cmpsl
decb
mov
and
cld
in
orl
in
in
fsts
cmpsb
push
xor
or
sub
cmpsb
call
icebp
and
out
cmp
cmp
outsb
cmp
jo
and
or
loop
or
inc
xchg
orb
imul
lock
mov
xchg
jl
push
les
loop
xchg
jl
insl
sub
jg
mov
mov
push
sub
adcl
imul
outsl
cmc
and
xor
xchg
jl
shrl
lea
dec
xchg
add
outsl
mov
popa
cmpsb
or
into
push
and
loope
loopne
add
scas
cs
or
loop
pop
dec
sub
dec
push
loopne
repnz
or
cmc
and
mov
pop
sbbl
neg
fcmovb
sub
or
cmpsl
int
pop
pop
loop
fbld
add
sub
addl
outsb
orl
lcall
xor
or
not
fistps
cmp
sub
dec
push
lcall
push
loop
neg
and
lret
mov
mov
adc
ret
or
sub
imul
add
lea
pop
stos
xchg
mov
push
pop
dec
jecxz
dec
iret
hlt
test
jecxz
dec
sub
inc
addr16
push
xor
aaa
push
sbb
outsl
push
scas
pop
pop
adc
and
adc
in
or
and
in
ret
xor
pushf
adc
add
inc
lds
add
xor
xchg
jb
loop
addr16
mov
in
mov
fdivl
lahf
mov
stos
shr
push
loop
add
insb
sbb
pop
addr16
ficoml
outsl
sub
or
int
adc
sbb
mov
adc
movsb
or
or
shlb
fstps
mov
adc
xchg
fsts
fdivrl
cltd
lcall
movsb
push
out
fs
push
lret
cld
test
imul
cwtl
mov
push
aaa
xor
test
fistl
outsl
lods
or
stos
push
fndisi(8087
adc
push
cmpsb
jae
mov
mov
mov
xchg
pop
out
test
adc
inc
pop
cmpsb
jae
sbb
and
lahf
pop
fwait
imul
jge
push
mov
push
stos
adc
scas
xor
dec
push
sbb
or
and
push
push
xlat
leave
or
addr16
inc
cmpsl
stos
adc
orl
sub
ja
mov
jg
or
and
lret
jnp
stos
xchg
xchg
dec
mov
pop
fstps
xlat
fcoml
and
mov
push
xor
jl
sub
mov
test
fsubrl
and
xor
es
mov
es
sub
imul
lds
add
xor
imul
cwtl
es
pop
xchg
mov
cmpsb
out
pushf
ljmp
cmc
or
fisubrs
push
fisubrl
jle
loop
sub
mov
psubusw
push
mov
xchg
out
cltd
outsb
xor
test
fwait
push
push
aaa
jle
loop
sbb
cmp
js
pop
addr16
aam
cld
pop
addr16
and
cwtl
loop
and
loop
loop
loopne
addr16
sub
daa
mov
and
cmpsb
or
cltd
es
xchg
push
fldcw
xor
sbb
pop
addr16
addr16
gs
pop
xor
insb
stos
cwtl
es
sbb
mov
push
fldcw
outsl
push
sub
push
inc
mov
imul
fidivl
xor
fwait
hlt
xor
cwtl
hlt
fsubrl
sub
loop
or
es
pop
psadbw
test
sbb
imul
sub
imul
cmp
loope
pop
push
sbb
push
and
push
xchg
dec
jg
mov
sbb
loope
imul
in
lcall
inc
adc
mov
int3
push
lods
inc
in
cmpsl
out
fcoml
int
and
jge
or
pop
lret
es
mov
add
ss
cwtl
es
test
loop
fs
fcoml
loope
outsl
pop
push
mov
insb
sbb
ljmp
sbb
inc
in
ljmp
lods
ljmp
lods
pop
std
and
daa
cltd
mov
xor
adc
cmp
xor
hlt
in
mov
fdivrl
shl
or
repnz
adc
hlt
push
adc
push
lods
fstp
adc
loope
push
in
out
sub
lods
push
in
ljmp
mov
shlb
outsl
cld
sbb
inc
pop
cmp
and
loope
push
fs
inc
push
addr16
cmpsl
adc
push
test
loop
lods
ljmp
sbb
push
or
gs
mov
in
xchg
out
imul
hlt
dec
push
in
push
addr16
aam
aam
loop
ficoml
scas
out
pop
xchg
lods
idiv
insb
sbb
aaa
or
lods
ljmp
js
push
fldcw
imul
in
xchg
cli
fdivl
rcr
pop
jg
in
loopnew
dec
adc
mov
fidivrs
fldl
cmp
ja
or
fwait
es
outsl
fs
sbb
push
daa
sbb
xchg
xchg
sar
pop
js
sbb
shrb
jbe
fsubrs
ds
in
daa
adc
mov
xor
mov
sbb
xorb
push
xchg
or
mov
adc
cmpsl
mov
or
imul
pop
push
mov
cmpsl
xchg
outsl
xchg
jecxz
mov
iret
fisubl
xor
insb
fsub
insb
repz
loope
icebp
pop
add
jmp
cli
xlat
loopne
gs
lret
ljmp
pushf
mov
dec
outsl
in
mov
pop
and
addr16
xor
rcrb
and
and
dec
adc
repnz
repz
fadd
testl
mov
cmpb
add
ret
mov
and
and
xchg
sahf
add
ljmp
mov
push
mov
pusha
subb
sub
pushf
shlb
pop
jecxz
lcall
sbb
adc
test
fistpl
clc
and
push
jp
repz
addr16
xor
mov
scas
fisubl
jnp
icebp
mov
mov
shll
pop
pop
aam
pop
xor
pop
push
imul
in
jae
inc
mov
testl
addr16
pop
lods
inc
push
sbb
mov
cmp
lods
fsub
fildll
push
loope
and
sti
loop
leave
push
filds
cmp
out
daa
popa
scas
mov
mov
pause
ljmp
out
cmc
rclb
std
gs
and
scas
rol
les
sub
repnz
xchg
fnstcw
mov
adc
and
push
decl
push
ja
ljmp
xchg
cmp
adc
mov
stos
pop
int3
and
cmpsl
mov
js
mov
popa
lods
loop
aad
fs
push
adc
pushf
sbb
jg
dec
mov
es
scas
rcrl
mov
mov
dec
ret
insl
arpl
fidivs
loope
icebp
andl
xorb
inc
addr16
icebp
xchg
ja
rcrb
pop
ss
mov
mov
rol
orb
cmp
orl
jecxz
mov
mov
push
or
xchg
cmp
imul
xor
dec
scas
xchg
jmp
or
mov
imul
xchg
pusha
addr16
addr16
subl
mov
mov
lea
xor
loopne
inc
dec
cmp
mov
xchg
mov
jne
add
add
cs
lahf
adc
scas
repnz
push
in
jbe
imulb
cwtl
sub
aad
outsl
add
in
ret
jmp
mov
ret
imul
out
mov
andl
adc
pushf
xchg
mov
mov
sub
test
fwait
push
cmp
push
sub
mov
addr16
sub
leave
mov
push
mov
pusha
shlb
gs
fstpl
mov
fldcw
fwait
mov
into
popa
and
jbe
or
add
fisttps
mov
push
je
and
std
sbb
bound
ret
sbb
mov
inc
out
inc
xchg
push
mov
mov
int
ret
ja
jecxz
rcr
in
pop
rcll
insl
aaa
dec
fidivrs
fstpl
loopne
popa
add
dec
mov
lahf
imul
sub
lods
or
push
adc
rclb
int
mov
outsb
push
pop
pop
ss
jecxz
sub
arpl
mov
cltd
jno
leave
jo
sbb
shr
insb
out
xchg
enter
push
jge
pop
loop
push
inc
je
insb
fs
jmp
mov
lret
out
cwtl
pop
cld
sub
adc
sbb
mov
dec
ljmp
mov
in
addr16
jmp
push
xor
test
dec
loope
inc
push
mov
cmp
shll
pop
arpl
sub
cmp
and
loope
jmp
sbb
xchg
mov
sub
or
std
ss
sbb
mov
testl
inc
out
push
stos
fsubl
push
and
xorl
daa
or
movl
pop
sbb
fstps
in
inc
cltd
xchg
cmpl
push
cmp
imul
xchg
inc
jecxz
or
bound
in
pop
hlt
pop
je
lds
mov
fwait
loop
xchg
out
push
movsb
xchg
imul
pop
sub
outsb
jno
lock
cld
mov
ret
insl
pop
pop
mov
cli
dec
xchg
xchg
inc
lock
in
adc
and
add
loopne
pop
push
fs
pop
movsb
push
into
add
sub
xor
adc
push
fsubs
or
fistl
test
push
jmp
ljmp
mov
pop
insb
add
dec
inc
pop
arpl
sbb
pop
out
ss
test
leave
sbb
xor
adc
inc
cwtl
or
scas
mov
loop
pop
cmpl
mov
pop
cmc
aad
xchg
cmp
test
outsl
test
mov
jmp
jnp
loope
ja
into
imul
jne
mov
inc
lcall
out
mov
bound
pop
dec
add
xchg
pop
test
hlt
fmuls
push
fwait
rcr
ret
test
stc
push
cmpsb
sbb
pop
repz
dec
fldcw
pop
xlat
cwtl
fstpt
imul
dec
cmpsl
push
xchg
test
dec
pop
mov
adc
add
cmp
fstl
outsl
xor
push
cld
pop
push
aam
nop
and
lds
cli
xchg
icebp
cltd
sbb
sub
and
into
cmp
or
or
fcmovu
inc
push
pusha
or
push
cli
cwtl
imul
adc
iret
out
mov
sti
jmp
cwtl
lock
mov
mov
out
sahf
sti
push
rcr
cmp
push
mov
mov
inc
adc
sti
and
jmp
mov
push
inc
xchg
imul
xchg
in
das
iret
or
daa
pop
in
pop
inc
frndint
adc
pop
fcoml
adc
rolb
test
cmc
call
sbb
rcl
lods
sub
xchg
dec
arpl
neg
xchg
lcall
leave
movsl
adcb
outsb
ja
adc
adc
clc
and
cltd
in
mov
mov
cmpsl
imul
mov
data16
mov
lds
fcoms
popa
mov
lcall
and
and
int
fsubrl
sbbb
daa
xchg
adc
sahf
pop
fcomps
jnp
mov
and
mul
test
xchg
imul
aam
lock
pop
xchg
out
xchg
cmc
test
testl
jg
and
aaa
mov
fs
sti
rorb
pop
flds
dec
testb
cmpsb
sbb
adc
jns
add
and
gs
push
loop
cmp
pop
sarl
jp
sub
or
cmove
addr16
jbe
js
dec
scas
jmp
xchg
inc
dec
mov
fnstcw
movsl
cld
fnstenv
cs
jp
pop
dec
loope
jbe
cmp
fnstenv
popf
push
sbb
and
xor
nop
dec
dec
mov
or
mov
mov
adc
xor
loop
fimuls
test
dec
push
push
mov
out
pop
cmpsl
cmpsb
mov
cmpsl
stc
filds
xor
dec
loop
ljmp
or
ror
or
les
inc
out
pop
jo
repnz
fsts
imul
lret
fld
es
mov
lea
loop
imul
shll
push
mov
cmp
mov
and
das
lahf
jle
pop
push
test
mov
and
add
rolb
imul
fscale
lods
stc
orl
mov
test
jnp
insl
push
jb
cmp
loopne
repnz
inc
xchg
inc
jmp
sahf
ss
sti
pop
mov
notb
cmc
cmp
and
fdivrs
or
fs
inc
jbe
mov
cmc
or
jb
xlat
push
xchg
pop
push
stc
fadds
mov
xchg
xor
imul
cld
repz
aaa
shlb
sbb
addr16
add
andl
and
adc
out
rol
xor
cmp
dec
out
mov
fldl
lea
jl
fstps
ja
ljmp
or
adc
ss
ds
mov
imul
lock
or
push
xor
insb
mov
jle
dec
dec
das
adc
rclb
mov
or
jmp
stos
dec
fdivp
inc
jmp
and
inc
aaa
cltd
out
pushf
jnp
xlat
push
xchg
xorb
mov
jne
icebp
loop
xor
xor
xlat
jmp
push
mov
mov
popf
aaa
fsubs
int
les
jae
jb
popf
pop
push
add
cmpsb
into
or
push
aas
les
lret
fcmove
mov
mov
inc
pop
xor
push
loope
arpl
and
xchg
jmp
addr16
test
popa
mov
mov
shlb
mov
mov
iret
push
cmp
mov
mov
mov
jle
ljmp
rol
in
nop
add
add
jmp
out
mov
loop
fmul
mov
jg
inc
in
rcl
mov
nop
scas
adc
aaa
in
imul
xlat
push
and
pop
int3
xchg
into
push
jne
aas
mov
fistpll
hlt
enter
xor
aaa
sbb
inc
fs
mov
shlb
cs
ficoml
jmp
cmp
sti
cmp
aaa
inc
mov
jmp
pop
add
xchg
aas
ret
mov
ds
push
cwtl
test
fwait
stc
hlt
push
adc
push
sbb
filds
push
scas
ljmp
test
dec
xchg
adcl
clc
addr16
pop
lret
pop
add
pop
outsb
sbb
cmp
loope
in
sarb
lret
pop
jb
mov
lds
std
in
mov
lds
jl
dec
out
mov
xorl
adc
dec
cmp
push
bound
mov
or
arpl
out
fcmovb
or
fadds
cmpsb
ljmp
dec
fs
stos
std
nop
gs
mov
xor
daa
and
mov
mov
iretw
pusha
ss
sbb
test
add
rclb
test
add
jns
cli
movsb
pop
ljmp
mov
pop
adc
inc
pop
pop
pop
adc
add
push
insb
faddl
push
je
dec
sbb
outsb
flds
jmp
je
lods
and
adc
sti
js
fidivl
dec
js
mov
mov
fdiv
sub
jb,pn
les
pop
divl
add
cmp
push
fs
sbb
mov
sub
jns
add
mov
push
mul
loopne
and
cmp
pusha
addr16
push
imul
gs
sub
cmp
scas
push
cmp
cltd
nop
add
xchg
scas
push
into
mov
push
mov
loop
add
push
lret
adc
sbb
dec
repnz
sbb
fildl
fdivrl
ficomps
xlat
pop
mov
mov
sahf
lock
push
push
test
mov
jmp
hlt
mov
and
mov
ror
add
in
pushf
sub
and
inc
jbe
inc
addr16
mov
stc
lods
jecxz
or
adc
push
sub
addr16
pop
sub
pop
xor
cli
sahf
sub
xchg
push
icebp
pop
push
loop
cmp
divb
out
call
mov
or
leave
or
int
add
out
push
add
xchg
call
cmpsl
jbe
mov
lret
fcoml
pop
outsl
mov
mov
and
out
inc
sbb
stos
mov
into
cmp
or
daa
test
addr16
rol
rcrl
loop
test
loop
les
ja
pop
xchg
sbb
inc
rclb
test
aaa
dec
mov
jne
divb
jmp
jecxz
popa
push
jp
ficomps
inc
xchg
fdivrs
pop
int
xchg
and
addr16
lds
scas
adc
xchg
out
loop
xchg
ret
xchg
lds
notb
or
loop
inc
add
push
pop
mov
in
jp
mov
in
adc
xchg
jb
add
js
leave
in
leave
loope
jae,pn
jmp
dec
xchg
push
xlat
or
jb
and
jmp
fisubl
or
and
ja
cmp
cmpsl
push
mov
shrl
pop
orl
scas
aad
ss
pop
pushf
or
sbbl
in
pop
lret
lods
lods
stc
inc
frstor
push
xlat
add
jge
iret
push
lahf
pop
call
in
gs
inc
xchg
scas
add
or
sbb
ljmp
fdecstp
in
lret
test
imul
cmc
test
sub
imul
cli
loop
bound
push
or
xor
lahf
add
jbe
in
addr16
in
orb
and
mov
dec
addr16
adc
adc
push
and
vandps
cmp
push
sub
push
add
jmp
mov
cmp
jb
add
lods
mov
jmp
xlat
mov
lods
ljmp
ljmp
and
or
popf
cmp
mov
pop
or
rcl
sbb
or
push
addr16
pop
cmpsl
cld
xorb
fsubrs
inc
mov
test
xchg
mov
repnz
call
ss
mov
xchg
xor
loop
int3
test
sbb
dec
sub
mov
int
ss
mov
lahf
dec
in
adc
cmp
sub
lods
gs
inc
mov
int3
movsl
xchg
pop
addr16
mov
xor
push
call
ss
push
dec
cli
pusha
cmc
pop
mov
jnp
fcoms
push
je
sbb
pop
adc
andb
xchg
sub
loopne
addb
pushf
xlat
je
aaa
loop
ret
add
mov
test
jb
lods
jp
xchg
sbb
loop
daa
nop
stos
mov
and
jnp
jo
push
test
sub
andb
mov
mov
in
inc
lahf
loop
popa
fstpl
jl
or
jg
sbb
dec
cld
mov
addr16
pusha
inc
push
push
inc
push
pop
dec
pop
lods
pop
xor
add
cmc
dec
popa
pop
lahf
es
push
mov
dec
push
mov
lret
fldenv
aaa
pop
scas
loop
add
in
ja
jp
into
ja
dec
lret
mov
lds
repnz
dec
das
cld
mov
pop
mov
mov
leave
xlat
stc
flds
mov
mov
xchg
cmpsl
xchg
loop
and
inc
andb
xchg
inc
pusha
xor
pop
inc
dec
jns
xchg
adc
mov
sbb
xchg
sbb
xchg
jp
add
ret
sbb
loopne
cmp
or
jecxz
test
bound
dec
lahf
sub
push
jns
xchg
add
jae
cli
xchg
push
sti
sbb
test
cmc
jb
inc
outsb
or
push
pop
push
push
pushf
mov
rcr
popf
movsl
xchg
lret
and
lahf
call
sbb
and
push
pop
push
cmpsl
adc
loop
mov
and
addb
mov
jl
push
outsb
push
mov
adc
mov
fnstenv
out
sub
aad
xor
push
insb
adc
sub
addr16
adc
shrb
add
cmpsl
out
aaa
in
and
jb
jbe
or
pop
inc
cmp
adc
into
andl
pop
addr16
fisubrl
and
jns
sub
loop
roll
or
scas
jmp
push
xchg
or
add
sbb
sbb
xor
roll
lock
test
loopne
sub
es
dec
in
scas
cli
lods
xor
bound
pop
ret
and
adc
outsb
mov
lahf
dec
loop
aad
mov
fwait
mov
mov
movsl
data16
xchg
test
mov
mov
test
xlat
jmp
xor
sub
mov
jo
in
std
out
mov
loop
rol
out
movsl
mov
das
mov
in
sbbb
jle
add
push
lods
push
cmp
mov
lods
notl
xchg
rol
lret
dec
iret
pop
scas
ljmp
in
or
leave
and
jp
xchg
pop
xchg
xchg
xchg
addr16
sub
cmpsl
inc
in
out
loop
jg
int
unpckhps
addr16
repz
dec
xchg
xlat
fldenv
fcmove
xor
jae
push
fld
pop
jbe
aam
gs
cmp
mov
push
int3
adc
addr16
sti
xor
inc
imul
subb
insl
mov
lds
imul
or
xchg
cwtl
aam
call
bound
adc
inc
add
xchg
add
xchg
in
xor
xchg
lahf
js
je
xor
cmpsl
stos
push
sbb
xor
fnstenv
cmpsl
or
push
mov
aad
dec
lods
call
or
pop
insb
outsb
push
cmp
loop
das
lds
js
fiaddl
fcompp
je
jbe
pop
jmp
push
aaa
push
fdivrs
dec
pop
adc
jl
xlat
mov
push
adc
loope
roll
or
and
sahf
addr16
add
push
add
or
mov
adc
aad
pushf
sti
popa
data16
xlat
imul
sub
mov
sbb
lret
push
add
arpl
cli
clc
dec
xchg
adc
jle
mov
push
xorb
int
dec
push
mov
loop
mov
and
or
sbb
jo
add
fs
cmc
lock
movsb
jns
idivb
cld
test
mov
add
fdiv
out
mov
popf
mov
dec
add
mov
jmp
ja
in
push
inc
inc
push
decl
pop
xor
mov
jmp
push
clc
test
loope
mov
push
xchg
mov
xchg
incb
ret
aam
or
fsts
jge
out
cmp
je
roll
cmc
mov
fsts
mov
das
icebp
mov
and
cmp
pop
cmp
jbe
mov
loop
xchg
rcl
inc
mov
mov
push
xor
popf
and
mov
sub
into
mov
aam
mov
push
adc
dec
fbstp
call
cmp
fiaddl
push
cmp
nop
lea
mov
into
push
ljmp
xlat
fldcw
and
xchg
loop
adc
stc
push
into
adc
sub
mov
inc
mov
rclb
jno
jge
dec
mov
in
in
mov
adc
arpl
sbb
scas
pop
push
push
addb
out
subb
fisubrl
popa
adc
add
fldt
sub
and
movsl
and
mov
mov
mov
push
jne
xchg
xlat
ja
fs
mov
add
push
enter
hlt
mov
ja
push
arpl
cmpl
cmpsb
stc
loop
js
dec
jne
pop
in
xor
fwait
cwtl
mov
dec
inc
jmp
shl
das
add
lret
xchg
call
dec
jb
bound
dec
mov
xlat
iret
mov
xchg
add
gs
or
fnstcw
pop
addr16
es
sbb
push
movsb
insb
cltd
adc
inc
arpl
xlat
sbb
add
pop
into
dec
ficoml
daa
andb
sbb
int
fcmovne
in
mov
nop
add
scas
and
fstps
pop
fsts
cmp
stos
mov
fmuls
imul
dec
pop
rol
sub
lock
repz
fnop
pop
xchg
fdivr
test
loop
ficompl
mov
in
les
mov
mov
or
test
add
push
mov
pusha
cwtl
inc
gs
inc
pop
and
jbe
les
movsb
cmpsb
xlat
in
pusha
in
jnp
jno
fcomp
fnstcw
xlat
xchg
enter
sub
sbb
pop
jle
pop
mov
sbb
out
sti
sbb
out
jnp
xor
jns
js
push
inc
fidivs
data16
adcl
cltd
in
fistps
subl
xor
lahf
xchg
xchg
sbb
sub
push
imul
or
xchg
push
addr16
inc
test
mov
lods
xchg
test
jle
in
jne
cmpsb
dec
sbb
mov
add
loop
fdivs
inc
add
icebp
aas
cld
xchg
test
push
mov
mov
jle
data16
testl
movsb
push
test
and
dec
inc
ljmp
inc
data16
sub
jae
jp
mov
iret
loopne
rcr
int3
and
addr16
scas
xlat
movl
xchg
loope
add
jecxz
sub
popf
cli
dec
subl
jae
inc
push
or
rorl
dec
adcl
mov
outsl
pop
popa
xchg
pop
xor
lods
stos
fsubl
mov
nop
mov
or
popa
fstps
loopne
fistl
jno
in
adc
lds
daa
xchg
cmp
repnz
jl
or
pop
xchg
clc
xlat
dec
xor
or
leave
push
jns
popa
outsb
std
scas
jge
adc
loop
roll
xor
mov
add
sub
ja
addr16
or
stos
push
stos
loope
mov
push
ljmp
mov
mov
sub
jp
sti
shll
mov
mov
shlb
loop
mov
mov
mov
sbb
ret
arpl
outsb
inc
pop
flds
popf
lcall
inc
addr16
mov
loope
xlat
hlt
push
mov
mov
arpl
fcompl
and
pop
push
test
cmpsb
inc
mov
ja
ret
hlt
out
dec
mov
push
ret
cmpsl
nop
inc
jge
loop
rolb
cmp
aad
push
fsubs
neg
adc
cmp
add
sub
push
repnz
in
cmc
pop
mov
push
fnstenv
dec
mov
cltd
loop
inc
push
xchg
faddl
ret
inc
fbld
out
daa
loope
cld
loopne
dec
pop
pop
fistl
pop
push
mov
add
es
xchg
pop
decl
sti
mov
xchg
bound
loopne
mov
popf
push
push
pop
add
push
cmp
lret
cld
pop
mov
jns
addr16
xchg
mov
mov
add
repnz
push
and
mov
push
push
mov
inc
subb
lret
js
cwtl
mov
fidivl
cmpsb
jne
xchg
fwait
add
hlt
imul
subl
clc
pop
sti
mov
jecxz
hlt
adcl
loop
bound
mov
fs
and
adc
ficompl
in
pop
bound
ja
fcompl
gs
xchg
or
mov
xor
in
pop
and
cltd
pop
inc
adc
mov
xchg
sub
sbb
ret
xchg
xchg
or
lods
icebp
or
fldlg2
movsb
sbb
adc
in
mov
push
sub
leave
cmpsb
pop
or
pop
leave
insb
imul
mov
je
pop
ret
adc
pop
mov
adc
sub
push
ja
imul
adc
lods
pop
fsts
repz
iret
aaa
das
imul
fcoms
jno
std
dec
xor
pop
int
movsl
imull
sbb
das
loop
pop
arpl
mov
or
fadd
bound
pop
insl
loop
lods
daa
ret
cmpsb
or
xlat
mov
mov
je
push
cltd
mov
pop
addr16
subb
push
pop
or
inc
inc
xchg
shll
movsb
sub
add
adc
cmp
mov
push
pop
cmpsl
lret
mov
data16
fldl
leave
or
scas
inc
sahf
push
das
bound
xchg
loop
outsb
xchg
push
dec
and
sub
mov
fiadds
xor
adc
mov
xchg
stos
sbb
fnstenv
fmull
push
aaa
std
inc
loop
push
icebp
or
adc
mov
or
pop
out
sub
pop
addr16
rcll
sbb
jg
aam
sub
xchg
adcb
sete
jns
stos
in
mov
jns
fnstcw
in
xorl
lahf
fcmovnbe
cmp
ret
bound
mov
pop
js
sbb
and
es
or
fsubrp
xlat
jmp
xchg
jp
jne
xor
int
add
arpl
pop
mov
jnp
das
or
lock
add
pushf
xor
hlt
faddp
adc
xchg
mov
in
fldcw
or
cmp
sbb
shl
test
or
testl
fistpl
jnp
xchg
push
loop
add
xor
and
or
into
lods
sub
xor
in
scas
addb
loope
xchg
sub
fs
push
adc
sbb
xor
pop
or
in
scas
sbb
shll
addr16
push
xchg
fincstp
mov
shll
les
enter
rclb
sbb
pusha
sub
pop
lock
xor
dec
out
xchg
adc
addr16
xchg
stos
cmp
add
add
mov
rcl
and
push
flds
inc
iret
test
js
loop
das
call
sub
imul
jb
inc
xchg
pop
dec
loop
popa
lock
cmp
icebp
loop
push
mov
xorb
bound
fnstcw
js
addb
stc
jle
into
pop
or
or
std
pop
loopne
in
movsb
pop
loop
lds
mov
sub
jns
insb
addr16
xlat
xor
cmp
pop
xor
outsb
test
gs
sub
iret
aaa
ja
loop
inc
dec
mov
inc
mov
sbb
jae
and
lea
xchg
flds
movsl
push
cmp
and
push
pop
pop
xchg
lcall
insb
stc
out
idiv
xchg
lahf
addr16
fsts
xor
dec
int
mov
or
loop
inc
ficoml
push
push
mov
sbb
ret
pop
nop
jne
add
push
xchg
dec
cltd
push
mov
stos
and
cwtl
inc
in
pop
mov
ja
jae
aam
jbe
push
test
xchg
leave
enter
adc
cli
out
add
add
or
out
mov
mov
in
ljmp
js
in
jae
fsts
es
stos
and
divb
mov
jp,pt
movb
sub
xlat
fwait
dec
xor
imul
mov
dec
in
dec
or
outsb
inc
add
sub
push
fwait
mov
push
sbb
into
repz
jmp
add
and
out
push
jb
add
dec
data16
and
loopne
cs
xchg
push
push
outsl
dec
xchg
fmull
add
mov
data16
inc
mov
jne
dec
int
fwait
add
enter
sub
not
push
push
sub
addr16
mov
fiadds
push
mov
scas
add
mov
testb
dec
flds
inc
push
pop
fcomip
repz
mov
sahf
and
ret
mov
std
addr16
jno
mov
pushw
repnz
insl
mov
loope
fs
xor
lret
in
mov
cmpsb
sub
stos
pop
push
cmp
mov
addr16
jno
int3
mov
cmp
dec
push
aas
enter
push
addr16
mov
mov
xlat
mov
daa
inc
loop
sbb
and
adc
push
xchg
stc
push
wbinvd
lds
inc
imul
pushf
pop
cwtl
dec
xor
out
mov
mov
fwait
ljmp
in
dec
mov
cmpsb
cmpsl
pop
in
mov
ds
jmp
lahf
cs
cld
xchg
lret
fimull
ljmp
sub
add
mov
std
aad
das
adc
mov
mov
xchg
gs
pop
call
js
sbb
add
cs
das
add
sub
xchg
ret
push
shll
sti
loope
cli
adc
or
and
fildll
cmp
pop
sub
sbb
add
daa
jns
bound
flds
fisttps
mov
inc
and
adc
jmp
ss
jno
inc
xchg
fwait
shrb
frstor
int3
and
and
xor
or
or
xor
shl
inc
xchg
daa
cli
pushf
mov
loop
daa
stos
pop
add
imul
sti
cmpsb
mov
push
push
addr16
sbb
loopne
loopne
fldz
bound
cmp
xchg
cwtl
pop
xlat
stos
aad
sbb
push
xchg
xorb
pop
test
sub
jne
leave
fiaddl
xchg
sbb
test
fs
hlt
popf
jecxz
and
xchg
rorb
push
pop
sub
dec
hlt
addr16
mov
add
arpl
mov
xchg
mov
lods
ret
push
push
dec
cmp
sbb
incb
mov
push
mov
push
gs
jo
fstp
daa
rorb
adc
mov
mov
xor
fmuls
sub
cld
lret
and
push
mov
add
cmp
mov
pop
dec
les
and
roll
lock
push
addr16
push
pop
add
push
xchg
pusha
cli
rcrl
jge
rclb
pushf
inc
stos
pop
push
lret
mov
in
gs
addr16
test
fxch
movsb
jb
call
pushf
and
add
jge
cmp
jae
lahf
loop
out
into
ret
mov
call
mov
jecxz
xchg
std
ss
and
dec
fisubrs
shlb
sti
loop
stos
mov
push
add
add
mov
arpl
push
gs
mov
add
adcl
arpl
inc
decl
nop
test
in
xchg
fadd
out
xchg
and
add
dec
jl
ss
push
push
popf
dec
adc
rol
push
cmc
xor
xchg
aaa
mov
inc
aaa
mov
out
mov
and
mov
xchg
xor
mov
push
pop
in
add
mov
jne
xor
push
cltd
paddd
adc
or
std
ret
inc
popa
add
arpl
inc
and
test
in
dec
xor
xchg
xchg
dec
fistps
xchg
mov
xorb
sti
jnp
push
push
xchg
gs
mov
add
adcb
addr16
fsubl
and
lret
add
test
inc
addr16
push
imul
jmp
pop
loop
sub
mov
inc
flds
sub
jbe
pop
idivb
ljmp
ret
and
lret
fwait
ds
inc
fisubrs
lods
std
xor
enter
pusha
dec
icebp
pop
dec
and
pop
iret
repz
lcall
sub
inc
mov
fisubl
pusha
ja
mov
adc
push
xchg
mov
push
push
adc
je
ds
push
out
popa
inc
jbe
fwait
mov
dec
fdivrl
mov
dec
xchg
cmpsl
pop
clc
adc
dec
in
jg
fadds
pop
jmp
jnp
sbb
std
lods
aam
inc
sub
fsts
dec
push
out
inc
inc
or
loop
or
jmp
out
jne
sub
repz
fs
add
cmp
and
push
push
test
push
popf
addr16
inc
mov
test
fst
sbb
mov
xchg
addr16
dec
in
xorb
cmp
jno
test
shrl
dec
shrl
pusha
xchg
sub
das
loop
push
out
mov
push
cwtl
sub
xor
test
cmp
xchg
movsl
out
mov
inc
cld
push
dec
pop
and
push
pop
dec
pop
push
push
push
xchg
popa
std
mov
add
fsubrl
add
sub
and
repnz
dec
cmp
ret
nop
and
inc
mov
daa
aaa
mov
aad
push
xchg
sub
jp
outsb
sti
jno
loop
outsl
sub
dec
ret
sbb
jo
pusha
lahf
inc
insb
and
mov
movsl
jl
aad
pop
into
cld
fists
in
out
pusha
sti
pop
jg
fisttpl
loop,pn
and
test
in
mov
rorl
stos
aaa
mov
xchg
jbe
fnstcw
push
adc
jecxz
in
mov
push
sbb
fnstcw
aam
pop
loop
das
orl
push
xor
rclb
aas
lock
hlt
pop
and
jg
mov
js
adc
addr16
dec
out
xchg
nop
jg
and
add
jne
push
xlat
add
std
lods
and
inc
lods
movsb
push
push
mov
lds
xlat
push
rcrl
add
stos
sbb
addr16
and
or
fdivr
sbb
stc
add
sub
sub
add
rcll
fidivs
mov
addr16
inc
dec
xlat
pushf
xchg
shr
cmp
add
hlt
mov
loop
jl
pop
mov
fistpll
inc
addr16
mov
bound
pop
cld
cmp
xor
jmp
xchg
jb
mov
mov
mov
jmp
shlb
push
lock
pop
fcmove
scas
cmc
imul
inc
mov
fldenv
in
xchg
nop
cmpsl
mov
je
mov
ss
push
push
adc
xchg
cmp
mov
shr
push
jnp
and
les
inc
add
addr16
sub
hlt
push
sbb
fidivs
push
stc
cmp
popf
addr16
cmpsl
mov
fldcw
xor
loop
mov
push
adc
iret
push
sub
inc
jecxz
loopne
and
into
xchg
lret
jmp
insb
pushf
push
add
jge
xchg
jp
popa
stos
aam
popa
cmpsb
ret
jo
fcmovnu
xor
cs
or
icebp
sbb
xlat
outsb
lods
pop
addr16
jne
push
mov
dec
mov
lds
or
loop
xor
xor
aad
xor
out
addr16
insl
inc
xchg
push
sub
rcll
pop
addr16
imul
leave
cmpsb
sbb
jnp
xchg
loop
int
sub
fidivl
jo
outsl
add
sub
xor
cld
or
mov
push
cmp
push
xchg
pusha
pop
xchg
dec
push
inc
ja
mov
mov
shll
imul
adc
fsubp
cmp
test
rorb
mov
push
outsl
inc
pop
test
ss
mov
jg
mov
scas
test
xchg
jo
xlat
and
inc
popf
mov
inc
movsb
loop
xchg
jp
scas
stc
adc
daa
aad
in
and
push
loop
xor
lods
ja
or
daa
vmwrite
xorb
xlat
outsb
out
inc
jg
push
ss
jae
push
outsl
popa
addr16
xlat
rcl
mov
jge
enter
addr16
loop
push
lds
jae
imul
fsubrs
std
xchg
mov
pop
pop
mov
inc
mov
fldenv
sub
js
loopne
imul
adc
or
xchg
cmp
sbb
in
dec
out
mov
imull
push
cmp
dec
mov
shlb
or
fcmovu
int3
cmc
adc
xchg
xorb
stc
loop
insb
bound
push
iret
push
shl
fidivl
iret
pop
cmp
push
hlt
arpl
sub
cmp
sub
add
dec
pop
fldenv
lock
dec
mov
fxch
repnz
xchg
push
mov
or
xchg
jns
mov
fsts
and
inc
icebp
sbb
dec
and
repz
xor
js
mov
repnz
mov
addr16
lds
sti
sub
rolb
adc
rclb
add
and
leave
add
add
adc
lcall
adc
stos
nop
js
fstps
xor
push
loop
out
jnp
xchg
popa
fisubrs
add
push
call
in
mulb
fadds
push
clc
sub
cmp
stc
push
and
jmp
jo
push
mov
sbb
xchg
mov
jb
sbb
rcl
sbb
push
imul
inc
push
or
adc
sub
out
push
or
jecxz
xor
mov
ret
dec
push
mov
adc
les
pop
negb
jp
inc
repnz
fadd
pop
xchg
inc
call
idivb
fs
mov
cmp
push
loop
testb
pshufw
push
loopne
loop
mov
add
pop
leave
push
cs
ds
jg
add
aad
mov
lret
mov
cmp
lcall
ret
fsts
jle
dec
pop
lock
mov
test
push
dec
xor
aaa
push
sbb
mov
rclb
push
and
stos
andb
fldenv
movsb
push
inc
loop
or
xorl
push
ds
dec
cmp
dec
jle
and
data16
adc
mov
pop
call
test
das
xlat
mov
ljmp
dec
insl
mov
rcrl
scas
fists
cmpsb
xor
leave
in
mov
cmpsb
mov
test
dec
inc
dec
outsb
daa
pop
jno
test
outsb
mov
rcll
pusha
cmp
shrb
loop
sbb
fwait
in
pop
in
push
out
adc
pushf
ja
lahf
std
loop
pop
imul
pop
insl
mov
ss
rcr
or
add
push
inc
add
ret
jmp
pop
cwtl
pop
mov
fnstcw
or
jns
fst
loop
mov
sbb
lods
scas
mov
aam
sbb
scas
jl
leave
sbb
push
cli
cmp
xchg
stos
mov
int
mov
les
movsb
imul
jnp
xor
push
fwait
loop
mov
ret
fld1
leave
nop
insb
jecxz
loop
out
addr16
das
hlt
dec
push
fwait
cmpsb
jne
inc
addr16
movsl
sbb
aas
mov
clc
ret
and
add
addr16
ss
scas
push
or
push
mov
inc
cmp
popa
xchg
out
fwait
pop
lret
ficompl
into
push
mov
inc
jmp
adc
adc
jb
js
fxch
sbb
and
mov
adc
pop
mov
jmp
push
cmp
mulb
loope
addr16
in
mov
fdivl
outsl
inc
push
or
add
fsubr
inc
push
mov
mov
mov
lret
ror
push
sahf
xor
repnz
cmp
mov
addr16
dec
out
ljmp
cmp
ret
and
xor
and
xchg
int
imul
loop
and
cld
push
push
push
push
inc
xor
xchg
pop
and
and
fucomi
add
dec
jge
lret
loop
jle
xchg
test
movsb
orb
ficoml
bnd
and
and
mov
fldenv
inc
push
push
cmpsb
cmpsl
jecxz
and
jle
push
sbb
out
pop
mov
cld
inc
mov
loop
lock
insb
flds
std
cltd
sub
xchg
push
fmull
mov
cmpsb
ret
pop
cmp
and
gs
test
jno
push
test
lods
jb
or
add
nop
xor
das
in
stc
dec
rorb
cmp
add
dec
jnp
inc
cld
loop
mov
mov
push
pop
mov
imul
mov
aas
sbb
ret
mov
in
test
inc
out
mov
cmpsl
inc
pop
out
sbb
out
jg
or
call
sti
mov
aaa
push
xchg
pop
fcomi
jle
fdiv
jb
lret
das
icebp
fsubr
mov
fadd
mov
jmp
call
add
or
xchg
cld
nop
push
incl
xor
mov
fnstenv
push
imul
mov
and
xor
cltd
or
loop
pushf
into
pop
lahf
imul
mov
push
sbb
or
outsb
or
cli
bound
cmp
mov
adcb
icebp
mov
push
fadd
test
rcr
cs
mov
loop
cmpsb
stos
push
lods
lods
xor
ja
jge
xor
pop
pop
icebp
orl
fmull
inc
pop
inc
jle
mov
xor
push
mov
push
gs
or
jbe
push
fadds
icebp
pop
xchg
inc
cmp
push
outsl
dec
sbb
pop
mov
xlat
push
mov
add
iret
pop
sub
push
aas
or
insb
lods
out
repz
cld
push
mov
xchg
sbb
push
mov
xchg
cmp
jge
lahf
push
sbb
enter
add
inc
loop
imul
fidivs
loop
pop
push
xchg
loop
jg
mov
push
pusha
ja
or
addr16
leave
push
xlat
scas
jle
rcrb
fnstsw
sbb
loop
dec
mov
cwtl
push
sbb
mov
add
loop
mov
sbb
push
fdivr
mov
or
xchg
test
mov
movsl
inc
cmpl
dec
mov
test
sbb
xchg
addr16
and
fs
lea
popa
orl
or
insb
push
loop
jae
ftst
jl
xor
sti
cmp
pop
cltd
ljmp
pop
lcall
mov
push
in
xor
sub
out
je
cmp
and
call
addr16
fwait
mov
pop
xchg
cmc
fld
inc
in
shll
adc
xor
lock
nop
je
cmp
fnstenv
mov
shl
enter
push
insl
test
stos
pushf
addr16
addr16
aas
lcall
les
and
aas
cmp
lcall
ficoml
into
stc
push
in
push
inc
lahf
mov
add
mov
loop
mov
notb
mov
pop
mov
arpl
pop
cmp
cs
mov
xchg
aaa
cmp
aam
mov
xor
xorb
sub
rclb
icebp
mov
xchg
pop
lret
add
cmpsb
mov
out
adcl
xlat
insl
dec
cli
jp
xlat
jecxz
cltd
lods
pop
cmpsl
xchg
fwait
lahf
xor
sahf
jl
mov
iret
cmp
fstps
add
pop
mov
in
cmpsb
xchg
pop
cld
xlat
mov
and
mov
sti
loop
lret
lret
mov
movups
out
insb
scas
jecxz
push
inc
or
cmp
movsb
mov
push
ss
lret
pop
jl
icebp
jbe
aad
push
das
cmp
push
xchg
shrb
inc
mov
mov
jge
push
sub
mov
sub
or
inc
repnz
mov
gs
jmp
push
push
das
or
add
sbb
loop
push
sub
imul
iret
pop
sub
sub
fsts
pop
mov
fcomp
mov
push
test
lahf
mov
data16
nop
hlt
push
sbb
loop
pop
icebp
xchg
or
in
pop
cmc
mov
inc
addr16
xchg
xor
movsl
adc
or
push
cmp
add
xor
mov
and
out
enter
jmp
xchg
outsl
and
testb
inc
xor
jns
lret
addr16
mov
inc
test
mov
popf
and
sbb
stos
nop
pop
scas
and
push
test
out
mov
fcoms
insb
push
neg
sbb
ss
cs
ret
loop
orb
out
outsl
aam
push
js
xor
add
sub
call
dec
xor
rol
loopne
push
pop
sub
into
jmp
pop
jo
dec
int
and
push
pop
fldcw
divl
fwait
sbb
and
push
inc
lret
or
sub
sub
cli
es
sahf
movsl
xchg
addr16
mov
shlb
cmpsb
pop
add
inc
pop
cltd
dec
adc
mov
fdivs
ljmp
sbb
movl
xchg
bound
mov
mov
or
lcall
lahf
fdivl
aas
enter
movsb
in
leave
neg
push
fnstenv
mov
sub
loope
mov
addr16
test
imul
fpatan
mov
sub
inc
push
add
jp
mov
cmpsl
mov
push
push
movsb
jle
xchg
mov
lret
loop
jne
cmp
jmp
mov
out
loop
rol
jmp
mov
mov
inc
adc
loop
ss
es
push
mov
push
leave
stos
add
subb
or
ror
aas
fwait
test
push
and
addr16
cmpsl
pushf
popf
xlat
dec
adc
pop
loop
mov
xor
pusha
cltd
lea
xchg
orb
cmc
ljmp
mov
lods
xchg
mov
into
sarb
lods
in
daa
fcoms
adc
repz
leave
cmpb
inc
shlb
or
test
popf
adc
repz
and
fimuls
cmp
lea
leave
pushf
jns
pusha
stos
dec
xchg
sbb
inc
add
mov
es
add
inc
push
mov
jecxz
in
rcll
xchg
ss
ss
arpl
leave
in
push
pop
sbb
addr16
rol
fcmovu
mov
fidivs
push
mov
arpl
cmp
xchg
pop
cmc
jb
lahf
cmp
push
xor
fsubrl
insb
sub
push
push
push
jge
inc
scas
push
pop
jnp
lahf
cmp
add
imul
icebp
imul
push
mov
lcall
jo
jge
lahf
sti
fsubrl
inc
adc
test
popf
jne
mov
rcrb
jb
loop
cmp
xchg
fcom
adcl
lret
sbb
cmpsl
push
sbb
xchg
xor
cmp
adc
mov
jb
or
push
in
in
movsl
pop
push
sbb
dec
jmp
mov
test
out
mov
fiaddl
push
call
scas
xchg
jbe
xchg
pop
ljmp
inc
sbb
clc
and
fnstcw
pop
add
loop
incb
push
jne
and
jp
xor
lcall
jle
mov
adc
testl
jmp
movsl
insl
mov
and
popa
movsl
movsl
in
mov
sti
jecxz
jmp
xlat
lret
cwtl
jnp
stc
fldcw
rorb
sub
ret
fists
stos
loop
dec
out
and
sbb
push
js
cmp
mov
sbb
scas
add
cmp
imul
das
adc
pop
idiv
es
lds
push
lock
push
add
and
je
into
lcall
dec
mov
dec
sarb
push
push
lahf
pop
push
ds
sbb
pushf
mov
pop
test
outsb
insb
or
test
and
dec
jo
jo
orb
push
push
bound
outsb
jmp
aaa
into
lret
and
dec
xchg
mov
xor
imul
ret
cmp
sbb
adc
lods
dec
push
in
cli
xchg
enter
cld
dec
and
das
addr16
or
push
aad
xlat
ljmp
sub
popa
cmpsl
mov
pop
out
data16
mov
or
xchg
test
push
jns
inc
push
cwtl
sub
jno
jecxz
xor
sub
lcall
adc
sbb
icebp
cltd
jecxz
mov
mov
popf
lock
scas
cmp
inc
xchg
cmp
or
mov
stc
pop
push
addr16
stos
jp
mov
dec
cmp
xor
jo
out
iret
shl
cs
flds
int
or
repz
loopne
int
hlt
inc
clc
mov
inc
leave
lahf
mov
push
mov
ss
xchg
jnp
adc
sbb
add
fyl2x
xor
lds
push
addr16
and
sub
aad
jb
daa
lcall
addr16
ja
xlat
aad
lahf
ljmp
jg
shll
imul
popw
jp
fnstcw
ret
jo
push
pop
add
in
or
or
shlb
mov
sub
mov
call
shlb
js
push
mov
push
dec
enter
lret
xlat
mov
out
pop
dec
aas
jmp
cmp
outsb
push
loop
jne
mov
and
loope
lods
insl
leave
aaa
addr16
cld
mov
flds
and
jb
loop
leave
sarb
add
std
fsub
sbb
xor
inc
mov
mov
sbb
jecxz
jmp
mov
sbb
and
xor
fcomps
jl
cltd
mov
mov
cmp
mov
pop
dec
pusha
sub
sarb
loop
pusha
cwtl
add
pushf
xlat
in
lcall
movsl
and
fidivrl
je
ss
and
fidivrs
addr16
cld
jmp
mov
cmp
cmp
aaa
test
movsl
xlat
out
iret
pop
mov
push
sti
mov
in
jp
fadds
xor
mov
addb
dec
mov
fisubs
xor
shll
dec
pop
cmp
sarb
loopne
aas
mov
mov
rolb
es
inc
xchg
addr16
pinsrw
pop
cmp
scas
xlat
stos
push
mov
loop
clc
sarl
add
and
in
cmpsl
imul
cmpsb
jno
mov
mov
cmp
cmp
repz
inc
or
xor
lock
xor
fdivr
xchg
sbb
xor
nop
aaa
add
lock
fistpl
leave
mov
jecxz
loop
cld
sub
test
xchg
popf
loop
xchg
and
mov
pop
int
push
lret
and
fsubrp
jmpw
orb
shl
inc
mov
loopne
xchg
cli
lret
and
push
stos
mov
pusha
mov
mov
addr16
sti
test
rcr
data16
mov
add
jne
mov
jo
inc
cs
jge
fs
scas
repz
sub
int3
xchg
xor
movsl
inc
push
test
sti
pop
std
imul
sub
lret
daa
stc
pop
ret
pop
in
daa
fnsave
cs
xlat
adc
xchg
and
andb
daa
mov
loop
fsubrl
out
push
stos
rorl
repnz
sub
xor
push
popf
xor
or
jne
inc
out
jno
sub
les
popa
aaa
jmp
jae
insb
test
mov
rorl
cmp
es
xorl
or
addr16
repz
mov
in
popa
sti
push
loopne
jnp
mov
mov
int
cmp
out
flds
xchg
sbbb
jo
cmpsb
int3
mov
clc
mov
or
inc
fstpt
jno
xlat
sub
dec
in
jae
inc
test
test
xchg
mov
loop
cmp
or
xlat
pop
jbe
insl
loop
cwtl
xor
or
dec
lods
stos
repnz
and
mov
sahf
gs
mov
cmp
cmp
mov
enter
xchg
sbb
jae
add
scas
sti
stos
or
test
sub
sbb
mov
sbbl
mov
cmp
add
inc
add
gs
push
cmp
pop
ss
psrad
and
mov
addl
mov
pop
das
pop
jl
push
inc
repnz
adc
fldenv
and
loop
test
fisubrl
loope
xor
add
cmp
in
test
mov
push
fdivl
inc
jmp
fiaddl
push
add
sahf
push
adc
aad
cld
loop
inc
and
shll
sbb
lods
ds
int
out
sub
int3
xrelease
loopne
push
inc
movsl
push
test
scas
push
jl
fldl
mov
fldenv
mov
in
lods
mov
dec
bound
push
xchg
cmc
xchg
jl
loop
add
dec
leave
lds
mov
mov
loop
jp
sub
mov
xor
mov
or
in
cmp
push
nop
pop
xor
aam
xchg
dec
mov
popa
pop
cmp
addb
mov
and
mov
adc
outsl
and
adc
or
loopne
loop
jno
addr16
mov
fstps
repz
adc
aad
mov
fsubrs
ljmp
cwtl
mov
loope
inc
popf
out
in
test
pop
xchg
sbb
or
cmp
cmp
push
jl
dec
dec
push
out
add
mov
int
jecxz
popa
fldcw
mov
jl
fwait
dec
loop
out
stc
cmp
cmp
out
mov
jb
push
mov
pop
ret
push
xchg
loope
xor
mul
andb
xchg
lret
out
fnstenv
sbb
loopne
inc
les
xor
cmpl
loop
dec
out
out
repnz
test
cmpsb
jmp
push
leave
lock
lret
ret
out
add
jge
stos
jle
scas
sub
push
cmp
push
pop
inc
sub
or
mov
push
push
xor
andl
add
mov
mov
add
movsl
push
push
pushf
push
in
fcompl
cwtl
out
cmp
addr16
jp
push
repz
sbb
subl
rcrl
push
mov
push
js
adc
addr16
rcr
shlb
adc
fisubs
daa
mov
add
or
dec
mov
and
jge
inc
push
adc
inc
sub
loop
mov
arpl
in
and
insb
inc
shlb
push
imul
loop
or
sahf
push
xchg
mov
xchg
fldenv
mov
mov
fimull
out
in
addr16
shll
mov
jecxz
or
test
lods
dec
push
pop
pop
sti
loopne
ret
push
das
and
test
push
jle
inc
out
mov
ss
or
loop
mov
mov
push
xchg
inc
movsl
cli
lret
mov
dec
cmp
mov
mov
sub
mov
mov
jae
paddsb
mov
dec
and
pop
adc
cmpsb
pop
ja
into
ret
int
icebp
lds
pop
fldenv
dec
cmp
mov
sub
out
xchg
xchg
push
ljmp
and
mov
push
rol
pop
fldcw
adc
pusha
mov
cmp
aaa
push
and
sub
push
xor
jl
pmulhuw
mov
xor
mov
sbb
jmp
push
xor
xchg
dec
pop
dec
mov
or
xchg
push
cmpsb
movsb
rolb
pop
sbb
mov
add
fmuls
push
pop
cwtl
insl
in
xor
sub
addr16
and
mov
sbb
jae
lea
movsl
int3
sub
cmpsl
lds
xchg
stos
pop
xlat
dec
ss
xor
fldenv
xchg
mov
cwtl
mov
test
push
adc
lods
jne
insl
mov
mov
jne
jno
adc
out
push
js
xchg
sbb
cmp
push
adc
pusha
push
adc
sub
dec
add
pop
test
xchg
mov
dec
xchg
mov
ljmp
sbb
fsts
push
dec
loop
imul
adc
adc
dec
addr16
idiv
sub
js
test
in
adc
sbb
int3
dec
fdivrp
cmp
es
movsl
cmc
sarb
push
xchg
mov
mov
inc
push
push
mov
sub
sbb
push
mov
cmp
inc
ret
pop
lea
jecxz
fnstenv
push
pushf
xor
inc
outsl
sub
push
jle
xchg
out
in
addr16
out
cwtl
fsubs
mov
push
xor
addr16
movsb
pop
inc
cmc
insb
cmp
daa
fldt
add
sahf
mov
iret
shlb
mov
sbb
push
sub
pop
push
sub
push
fs
push
stc
add
sbb
inc
xor
ss
inc
inc
push
add
sub
ljmp
pop
fs
fwait
cmp
stos
in
into
lcall
test
insl
enter
outsb
loope
xor
push
in
insl
nop
lcall
lcall
inc
rorb
jecxz
loop
insl
fistpl
lods
not
out
jno
add
adc
sbb
fwait
rorl
mov
loope
sti
cltd
popa
inc
jl
in
mov
and
push
and
add
out
jge
ljmp
mov
xor
mov
mov
je
loop
leave
sahf
push
lods
jae
cmp
xlat
jo
mov
xchg
loop
jge
fdivs
out
pop
dec
call
fs
std
data16
hlt
adc
fwait
fs
popf
lods
inc
fbld
mov
das
sbb
gs
xor
pop
inc
cmp
push
sub
add
sahf
xlat
xlat
inc
leave
out
dec
andb
sbb
bound
gs
sbb
jle
aad
aaa
and
lret
fistps
fldenv
dec
or
cmp
push
mov
fdiv
xor
push
js
and
ljmp
adc
mov
addr16
std
aaa
das
mov
fldcw
and
test
pushf
fstpl
cmc
sti
out
in
cld
int
mul
lods
lret
mov
lods
push
xchg
xor
adc
push
loop
and
dec
sbb
shll
dec
test
mov
mov
in
cs
add
das
fwait
xor
aas
push
aad
adc
mov
ret
jecxz
shll
and
add
or
add
sub
bound
bound
sbb
jbe
sbb
jno
jae
push
mov
cmp
adc
dec
push
pop
mov
in
pop
sub
push
xlat
gs
fidivrl
rcrb
out
je
scas
lcall
loop
dec
jnp
lods
rorb
nop
add
pop
push
or
imulb
insl
lods
outsb
mov
xor
dec
add
xchg
xchg
push
test
jp
add
loope
data16
xchg
mov
cmpsb
and
sbb
sarl
mov
cmp
push
aaa
dec
sbb
xor
gs
add
pop
push
sub
push
dec
jmp
jb
mov
sbb
outsl
xchg
push
in
mov
out
add
loopne
data16
dec
nop
in
jae
or
lretw
loop
inc
cmp
push
inc
ljmp
and
jecxz
adc
pop
ds
fnstcw
dec
push
xor
xchg
data16
adcl
mov
rorb
push
xor
loop
clc
in
and
push
bound
add
push
adc
mov
aad
xchg
enter
jne
sbb
fldcw
rcrl
inc
ret
sub
and
mov
mov
loop
sub
pop
hlt
jnp
push
xchg
sbb
adc
arpl
pop
je
inc
sarl
loope
ja
add
shlb
repnz
mov
ljmp
pop
fs
push
xchg
js
repnz
mov
xchg
jne
in
push
inc
nop
out
mov
mov
mov
xchg
sbb
add
push
outsl
and
xchg
in
loop
cmpsl
push
pusha
cld
dec
push
adc
jge
outsl
push
inc
test
push
xchg
js
repnz
adc
imul
push
push
arpl
lret
pop
mov
and
mov
add
jl
add
pop
or
addr16
das
jl
cs
push
xchg
fldenv
adc
outsl
ja
inc
insl
loop
mov
int
push
xchg
out
gs
mov
sbb
jg
dec
lea
bound
push
push
inc
movsb
xlat
mov
lcall
cmp
clc
push
push
cmp
daa
jae
les
push
sub
push
and
mov
andl
fiaddl
es
rcll
insb
jno
sbb
jae
or
xchg
dec
out
jb
pushf
adc
jecxz
aaa
stc
jg
scas
cmpsl
push
jle
sbb
mov
addr16
hlt
inc
pop
sub
fyl2x
sbb
test
xchg
enter
fdivrs
pop
in
adc
ss
mov
mov
test
shlb
sub
iret
bound
repnz
mov
mov
xchg
outsb
outsl
aam
bound
pushaw
mov
sub
fwait
mov
xchg
popf
dec
repz
outsb
pop
pop
aas
xlat
push
je
mov
or
xchg
lods
stc
repnz
pop
mov
xlat
aaa
jle
aam
mov
add
rolb
mov
mov
push
inc
pop
pop
or
imul
sbb
jns
stc
push
xor
pop
sbb
movsl
pop
aas
lret
xchg
mov
pusha
jmp
inc
repz
addr16
fidivrl
push
lods
xor
les
out
call
sbb
lcall
movsl
inc
xor
xlat
cld
push
es
insb
and
pusha
ljmp
jbe
sahf
dec
movsl
adc
mov
and
enter
in
out
push
mov
mov
fcoms
loope
adc
mov
jns
daa
mov
cmc
pop
iret
das
and
xor
data16
popf
inc
lret
pop
lea
inc
mov
test
incl
xlat
sbb
adc
mov
mov
adc
mov
xchg
push
sbb
nop
int
rcrb
mov
les
push
add
nop
fwait
adc
scas
jp
repnz
mov
xlat
cmp
repz
sub
insb
addr16
xchg
sub
jo
cltd
lret
sbb
scas
adc
fstl
mov
jnp
lods
dec
fdecstp
sub
loop
push
pushf
incb
xorb
push
stos
sarb
adc
popa
loope
loop
add
fidivrs
push
cmp
cmpl
pushf
mov
vmovups
ficoml
mov
addr16
out
add
pop
sub
push
cmp
bound
jecxz
dec
xchg
jae
adc
jbe
js
sarb
int
push
pop
adc
scas
stos
push
sbb
sub
mov
lods
push
and
fwait
jbe
repnz
std
test
lock
stc
cmp
test
add
xchg
fidivrl
mov
loop
or
sub
sahf
pop
dec
push
frstor
sub
push
flds
cmp
mov
fwait
je
fs
into
xor
xor
xorl
inc
push
dec
pop
lahf
adc
aas
into
jge
mov
rcrb
mov
fldcw
out
icebp
pushf
in
dec
inc
mov
mov
pop
jmp
mov
mov
sti
inc
inc
scas
dec
stos
push
inc
mov
repnz
insb
lds
pop
pop
inc
iret
add
and
add
adc
mov
out
lock
adcb
jns
pop
dec
sbb
aaa
into
mul
mov
loop
and
popa
leave
pop
rcrb
rcr
hlt
xor
or
push
xor
inc
in
push
insl
hlt
or
xor
sub
mov
cltd
jnp
jecxz
test
push
adcb
mov
xor
orb
mov
in
push
cmp
sbb
inc
sub
imul
popf
add
fsts
xlat
pop
pop
cmp
cwtl
sub
shrb
cmp
bound
addr16
mov
testb
inc
movsl
sub
pop
push
loop
or
dec
jp
add
mov
scas
js
shlb
rcrb
xor
push
push
lret
ret
leave
movsb
mov
dec
and
mov
fnstenv
sarb
pop
sub
mov
das
enter
fldenv
inc
insb
lcall
ss
in
jecxz
pop
jge
mov
jmp
daa
push
mov
in
jns
test
jmp
loope
dec
faddl
mov
addr16
and
mov
mov
or
mov
xchg
aas
and
add
arpl
mov
ret
xor
sub
xchg
xchg
lds
ss
cmp
sub
out
lcall
push
xor
sbbl
iret
mov
loope
cli
xlat
mov
xchg
clc
xchg
inc
dec
xor
aam
cld
cmc
mov
icebp
pop
jge
and
mov
hlt
dec
inc
mov
mov
xchg
mov
stos
and
pushf
gs
push
xchg
xchg
cld
add
addr16
mov
addr16
movsb
xchg
movsb
push
ss
xor
adc
xchg
fs
test
cmp
xor
xchg
inc
je
dec
or
cs
fcompl
jp
lahf
and
sub
mov
and
sub
rep
xchg
movsb
addr16
cmp
pop
inc
fnstenv
xor
pop
orb
mov
sahf
out
pop
loope
in
in
testb
mov
push
mov
sbb
mov
add
push
fwait
pop
pop
imul
jmp
pop
in
cmpsl
ds
dec
gs
shl
hlt
jp
pop
add
push
jno
lea
addr16
mov
jl
test
push
gs
stc
and
mov
jp
adc
jmp
or
cmp
imull
inc
mov
daa
mov
jmp
add
jp
adc
mov
inc
mov
pop
xorb
push
sbb
jnp
addr16
push
adc
mov
and
cmp
into
and
lea
add
fsin
dec
dec
shll
lahf
loop
push
pusha
pop
and
fisubrs
inc
pop
cmp
push
rorb
fs
frstor
mov
aad
int3
adc
dec
out
add
pop
xor
pop
lahf
in
and
gs
xchg
loopne
jmp
repz
in
andb
mov
push
mov
sub
jne
fs
pusha
pop
mov
inc
nop
jnp
cmpsb
cld
jne
scas
xchg
fstpt
jecxz
pop
mov
clc
mov
jle
jnp
loop
push
and
cmpsb
cltd
loop
push
clc
lahf
xor
fwait
push
pop
sub
sub
adc
jg
mov
addr16
dec
iret
jp
lods
addr16
shl
xchg
pop
xchg
movsb
cmc
mov
insb
fnstcw
movsb
sbb
cmp
int
les
hlt
xchg
fwait
arpl
loop
or
sbb
push
pop
push
enter
xchg
mov
mov
scas
fldl
push
test
jecxz
jecxz
fcoms
push
inc
xor
imul
in
inc
jno
sbb
insb
stos
arpl
adc
in
mov
idivb
cli
pop
imul
mov
push
loopne
cmp
mov
jl
mov
cwtl
popf
and
or
pop
sub
dec
dec
xchg
push
cmp
mov
ds
mov
pop
push
push
fadd
fsubr
xor
jb
jmp
and
mov
xchg
daa
pop
lahf
mov
repnz
sub
jbe
addr16
lods
iret
jne
jo
mov
int
push
xchg
les
pop
jl
and
scas
mov
fistps
mov
jl
loope
adc
insb
call
push
cwtl
cmc
es
jmp
push
sbb
testl
out
outsb
stc
add
push
pop
push
test
aad
ja
and
jb
clc
cld
mov
jl
jmp
or
pop
add
jl
dec
dec
push
sub
pop
sub
test
ds
inc
mov
xor
sub
leave
repnz
in
fbld
mov
push
repz
add
mov
xchg
mov
aad
dec
push
ja
push
loope
inc
cld
push
addr16
dec
popl
popa
adc
xchg
cmpsb
clc
dec
leave
pop
icebp
xchg
jecxz
bound
sub
fld
mov
dec
ss
ja
nop
sarl
cmpsl
jns
cmp
push
sbb
cmc
in
sbb
in
mov
or
jb
push
mov
sahf
cmp
mov
and
sub
push
das
repz
scas
xor
sti
es
insl
fxch
out
or
roll
xchg
dec
bound
sbb
mov
add
or
push
pop
stos
in
sub
in
mov
jno
in
movsl
movsl
sbbl
jge
xchg
sbb
jp
jne
loop
xor
sub
pop
xor
lahf
fadd
and
loop
lods
jno
ljmp
inc
rclb
mov
jecxz
test
loop
inc
js
cltd
adc
fs
icebp
cmpsl
add
loopne
and
xchg
xchg
pop
fldl
jecxz
stos
pop
je
pop
xchg
jecxz
adc
iret
mov
test
fnstcw
dec
test
jbe
push
or
mov
push
jecxz
cmp
jo
cmp
push
std
push
fcmovne
sub
lret
xchg
mov
test
popf
jp
and
test
loop
inc
jns
mov
mov
xor
aam
cmp
inc
sbb
imul
int3
mov
stos
jbe
mov
xlat
push
lods
ljmp
fsubs
push
into
jns
xchg
cld
cmp
lcall
jae
ds
cmpsb
mov
xlat
call
jae
and
inc
stos
addr16
testb
push
pop
inc
push
aaa
fidivl
adcl
sbb
xchg
addr16
sti
popa
repnz
mov
mov
rclb
stos
imull
mov
flds
mov
mov
push
shl
std
mov
push
ljmp
add
jge
dec
lods
cmp
pop
fldenv
or
mov
loop
js
scas
cmp
rolb
xchg
outsb
or
sarl
test
and
sub
xchg
ret
jns
inc
xor
bound
cmp
pushf
and
adc
mov
cmpsl
adc
sub
test
inc
gs
adc
sub
les
mov
sbb
ss
inc
inc
or
push
shll
jle
outsb
js
int3
and
sbb
jns
sbb
jbe
mov
xchg
push
push
add
fsts
inc
cmp
popa
mov
sub
ds
stos
xlat
int
mov
test
pop
adcb
lret
loop,pn
cwtl
roll
xor
aad
adc
movsl
pop
dec
push
fs
loop
mov
adc
fcmovu
mov
or
mov
pop
sub
push
push
ficomps
dec
pop
mov
jno
sub
inc
pop
push
testb
cmp
iret
jne
cmp
sbb
loopne
add
data16
inc
jae
scas
insl
fnstenv
and
fsts
test
movsb
loop
push
mov
je
dec
mov
stc
lret
fs
addr16
test
jns
test
movl
lahf
orb
lods
out
popa
ljmp
cltd
mov
mov
jecxz
sarl
adc
mov
bound
stc
pop
jb
jo
movsb
imul
std
push
mov
movsb
xor
sub
dec
enter
sbb
push
cli
lahf
fdivs
xchg
ror
lcall
mov
shr
pop
hlt
fmul
inc
stc
fdivrl
pop
cmp
or
icebp
mov
pop
xchg
fscale
and
iret
or
into
lahf
loop
mov
pop
fiadds
xchg
int
dec
or
lds
mov
mov
fdivp
out
xor
jnp
add
dec
jae
out
cli
arpl
sbb
dec
loopne
ret
ret
mov
and
xchg
addr16
pop
pop
loopne
in
xor
test
jge
aad
push
xor
pop
dec
mov
icebp
cli
repz
mov
inc
loop
add
jnp
mov
stos
out
daa
cs
js
push
dec
jb
dec
jge
or
ds
dec
cmp
mov
test
cltd
mov
xor
leave
jbe
adc
in
loopne
pop
cmpsb
sub
cltd
and
je
aas
dec
xor
cmp
in
scas
mov
push
mov
jl
inc
imul
addr16
jmp
sub
or
mov
leave
stc
nop
pop
mov
push
xchg
sub
mov
adc
cltd
fstps
mov
sbb
loop
mov
gs
lret
or
xor
addr16
xlat
push
xchg
cwtl
jle
xor
int3
sub
mov
sub
cwtl
ss
mov
loop
xchg
pop
mov
jg
scas
hlt
xchg
push
mov
divl
jmp
je
push
into
notb
addr16
repnz
fxch
mov
lret
jmp
inc
enter
idivl
xor
mov
loop
push
mov
mov
gs
pop
into
mov
fnstsw
in
loope
push
add
test
mov
jge
add
jp
das
mov
lret
loop
addb
cmc
fldcw
pop
pushf
mov
pop
inc
sub
add
jns
stos
adc
and
inc
fwait
xchg
mov
pop
or
ds
or
push
lds
push
addr16
jg
ss
mov
or
hlt
aam
dec
ljmp
repz
mov
mov
sub
xchg
aam
add
cltd
fs
mov
mov
sub
cltd
test
outsl
push
mov
insl
xor
push
pop
jecxz
aad
sti
push
lcall
push
addr16
adcl
fsts
sub
cmp
imul
mov
xchg
push
dec
pop
imul
or
mov
out
pop
fwait
xor
or
lret
and
push
movsb
sbb
push
pop
loope
or
jp
and
or
and
icebp
fnstcw
popa
sub
pop
out
pusha
out
out
cld
cmpl
lds
lock
daa
xor
jne
fabs
push
int
or
js
hlt
popf
and
pushf
sub
enter
cmc
cltd
addr16
fidivs
fiaddl
je
mov
cmp
adc
adc
mov
cmp
lret
add
sbb
pop
and
test
stos
loop
int
out
movsb
addr16
sahf
lods
cmp
scas
xchg
in
addr16
sbb
push
mov
mov
pop
adc
xchg
fld
inc
push
xchg
pop
jno
adc
mov
add
stos
xor
stos
inc
data16
mov
sbb
cmp
push
adc
inc
aam
dec
sbb
and
js
rclb
push
inc
pop
or
mov
sub
xor
xchg
imul
lret
pop
pop
lods
xchg
mov
in
cli
cmp
xchg
sti
cmp
push
push
sbb
call
adc
dec
movsb
notb
loop
dec
cmpsl
lret
out
clc
cs
das
movsl
push
scas
mov
loopnew
cmp
out
mov
mov
cmp
dec
push
ds
jno
out
pop
mov
push
mov
mov
mov
dec
dec
call
jnp
pop
mov
jo
loop
adc
jmp
inc
out
push
mov
xor
or
mov
pushf
or
push
and
push
jl
in
iret
rcrb
push
leave
inc
adc
scas
adcl
push
cltd
jns
gs
sub
call
test
movsl
lahf
push
sbb
aaa
push
push
aad
adc
call
rorl
loop
pusha
fwait
mov
xchg
fnstenv
xchg
adc
sub
div
xor
ss
mov
cmc
jecxz
fidivs
xchg
mov
add
jp
xor
mov
arpl
inc
inc
int
mov
loop
cmc
daa
dec
mov
cs
dec
xor
xchg
xor
mov
loop
lock
cwtl
mov
loop
jmp
jge
cltd
je
push
leave
sub
xchg
dec
mulb
stos
cmp
xlat
xchg
ficoml
pop
inc
adc
adc
xlat
cmpsl
je
xchg
sbb
imul
das
sbb
pop
mov
dec
xor
add
jp
jbe
xchg
push
cmp
jae
or
sub
xor
rcr
fstps
sbb
inc
mov
in
mov
adc
in
dec
jle
pop
sbb
mov
enter
push
fisubrs
fsubs
jbe
cmpsl
and
lret
mov
mov
in
mov
add
jne
jbe
push
pop
testl
inc
fnsave
aad
and
adcb
enter
push
pop
xchg
pavgw
mov
xchg
jg
in
cs
fisubrs
addr16
shlb
dec
jno
or
xlat
pop
xorl
lahf
out
mov
mov
fiaddl
mov
out
sahf
scas
mov
or
xchg
mov
repnz
lcall
gs
popf
fwait
pop
mov
mov
addr16
in
sbb
xchg
or
mov
cltd
gs
jge
stc
addr16
imull
cmc
pop
jmp
outsl
cli
out
or
push
adc
jno
lock
mov
cmp
fs
bound
insb
cmpsb
jle
cltd
stos
mov
xchg
sub
mov
dec
subl
shll
pop
add
ljmp
leave
shlb
addb
pusha
loop
mov
insl
push
sbb
xchg
sub
movsb
mov
cs
je
enter
push
repz
pop
xchg
ds
and
movsb
popf
push
sti
shrb
or
sub
pop
in
dec
popa
xor
rorb
arpl
push
inc
repz
fists
push
and
jmp
sbbb
adc
or
gs
lock
rcr
fbld
mov
daa
mov
mov
sub
aad
out
xor
subb
lods
xlat
ds
mov
jae
fists
test
push
cltd
ljmp
in
ret
loop
xlat
lret
fdivrs
push
mov
sti
sub
fs
dec
aam
push
push
aad
push
sub
mov
inc
in
cmp
outsl
xchg
mov
pop
push
mov
pop
mov
pop
jp
pop
lea
push
lahf
fistpll
iret
fisubrs
mov
xchg
jnp
rcl
outsl
jbe
sub
in
fstps
sti
jbe
hlt
jbe
ja
and
mov
mov
pop
std
jp
mov
mov
rorl
sbb
cmp
pop
xor
addr16
cmp
inc
int
xor
lret
sbb
pop
call
mov
fidivs
cmc
jecxz
add
sub
out
xchg
aas
out
loop
lds
out
xchg
movsb
jno
out
cmpsl
enter
mov
mov
push
scas
pop
mov
mov
mov
dec
imul
inc
scas
sbbl
addr16
out
iret
sbb
nop
mov
cmp
popf
ja
xor
and
dec
popa
aad
jge
loopne
mov
cltd
xchg
add
fimull
push
push
addl
sbb
out
add
mov
std
mov
push
jo
mov
sub
or
jmp
popa
imul
pop
dec
push
shlb
pop
data16
mov
arpl
or
sbb
incb
addr16
lods
sub
addr16
scas
imul
push
test
hlt
flds
pop
ror
sti
ljmp
fildl
and
adc
xor
or
xor
xchg
mov
cmpsb
adc
ja
sarb
je
mov
fsubrl
mov
and
fnstenv
js,pt
cli
dec
rol
pop
fwait
lahf
fstps
repz
adc
gs
loop
add
pop
mov
xchg
mov
mov
call
lahf
dec
mov
in
push
inc
mov
in
cmc
adc
adc
mov
imul
add
sbb
aam
es
cmpsb
push
rorl
roll
dec
sub
sub
pop
ja
outsb
loopne
xchg
cmp
jno
loope
xchg
xchg
push
arpl
inc
xchg
dec
pop
fstps
add
add
addr16
out
pop
mov
insl
sub
cmp
sbb
sub
movsl
loop
cltd
inc
dec
xchg
cmp
stos
fsubrs
xlat
xor
andb
jecxz
or
pop
add
insb
fidivrs
adc
jmp
adc
jmp
or
lcall
xor
inc
jnp
ja
mov
test
mov
jae
and
jne
jg
or
pop
mov
incb
loop
outsb
nop
pop
adc
xchg
push
popa
lret
negb
fidivrl
int
xchg
ret
xor
pop
dec
inc
jle
add
je
adc
cmc
in
cs
push
int3
movsl
and
call
mov
push
vpaddsb
jnp
es
xor
je
mov
stos
and
int
fsqrt
xor
aaa
jp
enter
inc
pop
ret
lods
inc
lds
inc
lea
or
dec
out
pop
ret
inc
push
xor
lahf
repz
cmc
subb
mov
xchg
push
inc
out
pop
mov
addr16
pop
std
pop
xchg
mov
loope
cmpl
push
mov
aam
jecxz
ds
mov
jg
jecxz
out
je
ffreep
inc
and
cmp
loope
cmp
into
in
pushf
test
xchg
jns
sbb
addr16
popa
and
add
and
mov
and
cmp
and
add
pop
or
xchg
or
addr16
ss
inc
xlat
loopne
cmp
cmp
mov
adc
loop
inc
jne
cmp
dec
into
push
xor
rcll
sub
push
mov
in
xchg
pop
roll
pop
fisttpl
mov
test
xlat
addr16
xor
ss
xchg
in
jne
push
pop
iret
popa
in
fistpll
mov
fstps
inc
or
out
push
xchg
mov
push
subl
sbb
add
mov
push
testb
mov
pop
mov
fcmovnb
shl
cld
ja
cld
fs
pop
or
push
scas
lret
cmp
fadd
addr16
pop
lea
fwait
push
cmpsl
lods
jo
or
aad
outsb
mov
inc
scas
push
pop
push
adc
mov
gs
adc
push
jmp
mov
pop
sub
mov
inc
mov
jecxz
or
loop
dec
lods
scas
jg
sbb
add
jo
out
loope
outsb
addr16
sub
loopne
fbstp
rorb
mulb
pop
arpl
into
movsb
scas
inc
sub
push
push
jb
addr16
lods
call
sti
fcmovb
fldcw
xchg
jp
in
loop
dec
arpl
add
adc
cmp
cs
mov
loop
inc
pop
test
xor
jge
mov
mov
or
movsl
aas
mov
lods
mov
mov
push
ja
clc
xor
or
push
int3
ja
rclb
mov
jmp
jbe
or
fnstenv
or
dec
add
pusha
loop
call
mov
push
not
mov
mov
inc
mov
movntq
inc
cwtl
push
xchg
addr16
dec
mov
ds
xor
sbb
xlat
xchg
push
sbb
outsb
add
pop
in
push
ss
popf
sahf
mov
pushf
push
xchg
dec
call
inc
fsts
xor
mov
mov
rol
push
and
imul
push
bound
cmp
adc
sub
xchg
pusha
mov
xlat
out
jb
jne
scas
and
xor
sub
jns
adc
das
pop
push
scas
jecxz
inc
push
xchg
lock
loop
mov
push
adc
incb
add
sub
xor
jne
sahf
xchg
shlb
pop
inc
jne
pop
call
cmpsl
insl
or
adc
lds
mov
inc
loope
pop
xlat
cli
cmc
enter
mov
daa
fs
cld
mov
outsl
mov
loop
ret
icebp
loopne
loop
filds
movswl
test
jns
insl
popa
imul
jne
popa
push
fcoml
push
dec
mov
lds
or
ljmp
mov
rorb
addr16
repz
fidivrl
fisubrl
frstor
fldl
mov
cmpsb
lock
mov
fimull
inc
icebp
ss
mov
mov
xchg
stos
loop
sub
test
jae
sub
xchg
inc
loop
fwait
sarl
mov
jne
sub
push
xchg
push
mov
mov
mov
loope
and
imul
fsubl
dec
dec
movsb
xchg
mov
add
xchg
mov
je
push
frstor
mov
dec
insb
hlt
push
clc
movb
xlat
sub
sar
and
stos
stos
pop
dec
xchg
sbb
or
mov
loop
out
sarb
mov
dec
mov
add
sub
pop
ljmp
testl
in
inc
mov
lods
jb
sub
inc
pop
mov
inc
ljmp
aas
testl
or
cmpb
mov
fldenv
mov
repnz
mov
push
pop
mov
add
mov
icebp
jge
cli
xchg
repnz
cmp
repnz
test
push
pop
push
xchg
mov
addr16
scas
pop
lds
push
bound
sub
loop
fsts
mov
mov
push
fwait
sbb
pop
lcall
data16
daa
xor
ja
adc
daa
lods
bound
pop
in
repnz
test
clc
push
or
dec
push
imul
pop
stos
inc
ret
fsub
pushf
test
jmp
cli
pop
cmp
dec
cltd
dec
inc
int3
mov
sbb
pop
out
int3
mov
icebp
lods
stos
ss
popf
jl
aas
jmp
push
xor
xchg
js
aaa
push
mov
or
fcoms
push
push
push
mov
loope
lods
mov
cmp
add
rcr
jg
cmpsl
push
in
outsl
mov
push
ja
xor
cmpsl
mov
cmp
push
inc
pop
add
fnstcw
sbb
mov
jb
cmc
sbb
or
pop
sbb
fistpll
flds
mov
ret
out
jnp
fstps
imul
shl
loop
and
xor
cmp
aas
mov
ds
fidivs
cmc
aas
aad
fldcw
mov
addr16
call
scas
fcmovbe
inc
pop
popl
mov
ss
fiadds
hlt
jmp
fnstsw
shrl
xchg
cmpsl
mov
test
subl
xor
or
das
xchg
add
adc
mov
mov
fs
fimull
jg
lea
vmwrite
popa
test
push
in
and
ret
mov
mov
adc
pop
jae
int
into
addr16
and
insb
cmp
or
fldcw
push
lahf
call
clc
xor
mov
push
or
sub
and
mov
out
or
cli
cmpsl
addr16
mov
fisttpll
pop
stos
out
out
dec
vpminub
cli
mov
js
xchg
pop
inc
push
or
pop
mov
mov
mov
and
addr16
rclb
shll
fdivs
add
adc
mov
hlt
je
stc
cmp
cli
add
dec
add
negl
out
push
inc
pop
lea
fisubrl
and
pop
add
xchg
test
mov
jmp
push
fildll
dec
pushf
or
icebp
push
dec
fwait
dec
push
aaa
pop
je
pop
sbb
xchg
jns
clc
or
fcoml
das
xchg
fldcw
xor
loop,pn
pop
jl
fucomip
pop
push
push
loopne
out
mov
test
xor
fsubl
pop
sbb
lea
insl
addr16
lret
dec
mov
mov
hlt
adc
fsubs
scas
lret
dec
mov
test
push
or
shrl
rorl
imul
test
pop
pop
add
mov
adcl
call
xchg
imul
pusha
loopne
add
ret
mov
pusha
dec
ja
jne
rorb
xchg
iret
mov
mov
sbb
jecxz
fiadds
test
orps
mov
loope
xor
fucom
mov
xor
out
dec
xor
outsb
mov
push
jb
into
pop
and
xorl
ds
lods
out
dec
or
divb
pop
popa
sub
and
adc
sbbl
cmp
mov
mov
or
addr16
dec
loopne
add
push
fldcw
xor
sahf
mov
in
daa
test
add
nop
inc
jne
xchg
popa
sbb
scas
stc
add
xchg
in
hlt
pop
lret
sti
add
jne
cwtl
jae
sbb
and
mov
jl
jo
les
inc
mov
fnstenv
scas
scas
pushf
sbb
hlt
loop
push
test
cltd
dec
andb
push
popf
dec
movsb
stos
test
lret
popf
in
lds
fldt
xchg
and
cmc
dec
dec
or
push
pop
scas
sub
cmc
lods
push
adc
cmpsb
xchg
outsb
lods
ljmp
shrl
in
push
cmp
loop
adc
push
rolb
sbb
je
das
fwait
cmp
inc
adc
iret
clc
inc
mov
add
xor
or
testb
shl
bound
pop
xor
xor
or
loope
or
dec
lahf
and
out
add
xchg
mov
loop
jno
mov
push
push
adc
xlat
addr16
cmp
push
add
pusha
cltd
mov
lcall
nop
cs
inc
sbb
cmp
out
gs
mov
mov
je
push
test
push
hlt
lret
call
aam
mov
ror
out
cmp
sbb
mov
inc
lds
dec
xchg
xchg
cmp
in
inc
loop
pop
mov
jne
flds
lcall
test
test
int
push
jae
outsl
nop
bound
pop
xlat
add
neg
push
and
cmp
mov
pop
fsubs
mov
adc
add
inc
cltd
adc
lock
xlat
adc
std
add
sub
addr16
mov
pushf
push
pop
push
dec
xchg
inc
popf
lahf
or
fnstenv
push
cmp
cs
pop
mov
test
rcll
jmp
addr16
fiadds
ss
pop
bound
add
mov
inc
xchg
push
dec
jbe
mov
mov
jb
aad
xchg
jns
pop
dec
and
stc
sub
cltd
xorl
data16
daa
xor
fcomps
xor
fst
mov
mov
jo
out
test
ja
rdpmc
cltd
mov
push
mov
cli
je
pop
jns
pop
repz
sub
test
mov
and
out
pop
insb
incb
addr16
into
roll
aam
fdivs
jp
insl
cmp
pop
stc
fs
inc
dec
sub
add
cmpsl
pop
mov
lcall
push
pop
cmpsb
fisubrs
mov
xor
mov
dec
lret
loopne
pop
cs
incl
imul
loopne
fists
je
aas
push
mov
dec
mov
sub
out
nop
xchg
lea
js
cltd
test
mov
gs
xor
or
xlat
cmp
inc
popa
inc
push
call
inc
outsl
xor
movsl
or
pop
ss
lods
pop
dec
negl
pusha
pop
imul
push
or
into
jnp
push
jne
add
fidivs
ret
jp
push
nop
cmpsl
das
push
push
aam
adc
bnd
fistl
stos
cltd
sbb
sahf
adcb
movsb
es
mov
xor
lcall
mov
inc
mov
lock
xlat
mov
out
fmull
sbb
xchg
push
xchg
cmp
cmc
loop
xor
mov
pop
bound
push
data16
sbb
mov
fdivrl
sbbl
jb
daa
cmc
decb
arpl
xchg
fsts
push
push
push
sbb
jecxz
aas
sbb
or
mov
enter
xchg
incb
mov
pushf
jnp
pop
in
push
pop
test
push
cmp
call
ss
xor
fimull
mov
xchg
repz
rorl
mov
mov
aad
or
push
arpl
or
out
inc
mov
dec
jge
and
cmp
mov
cltd
ds
pusha
ss
add
xchg
adc
sbb
jecxz
dec
stos
stc
pop
push
not
add
gs
es
add
cmpsb
pop
ds
pop
addb
leave
cltd
jb
sub
push
ljmp
xchg
cmpsb
inc
pop
data16
cmp
mov
js
subb
push
imul
fnstenv
loop
aad
lods
insb
negb
dec
dec
pusha
not
mov
popa
loop
imul
ds
adc
fsubrl
mov
cmc
ja
push
loop
out
inc
lahf
and
cs
fildll
orb
and
loop
in
sti
fadds
in
gs
cmp
aas
fsubs
xchg
lods
ret
adc
stc
push
push
jg
pop
sub
and
add
push
cltd
loop
inc
out
push
sbb
xchg
insb
test
enter
pop
jno
inc
inc
stos
cmc
cmp
push
popa
mov
bound
andl
lcall
push
pmaddwd
sub
adc
mov
dec
in
or
fcompp
adc
shrl
lret
mov
jae
lock
aam
pusha
dec
loop
out
xor
inc
ljmp
add
mov
mov
add
jecxz
mov
enter
or
xorb
jae
mov
in
sarb
outsl
cmp
adc
dec
test
cmp
iret
push
mov
push
mov
xchg
lret
and
cmpsl
aaa
ljmp
call
push
cmp
xchg
xchg
gs
std
sub
add
subl
out
adc
pop
mov
mov
push
ja
jmp
imul
test
xchg
jl
xlat
loop
and
fldt
xchg
in
inc
test
jb
push
sbbl
cmp
addr16
xchg
aas
clc
add
bound
push
pushf
data16
push
push
dec
mov
dec
int3
loop
lods
dec
repnz
sti
push
das
xor
fistpll
mov
xor
xor
ret
xlat
addr16
nop
icebp
add
int3
loop
jecxz
or
jo
mov
loop
adc
mov
add
mov
mov
inc
aaa
test
js
movsl
cld
push
cmp
sbb
jne
and
xor
addr16
xlat
adc
je
and
pushf
pop
mov
insb
sub
ljmp
add
rcll
mov
cmpsl
loop
sub
rol
mov
out
mov
cwtl
add
pop
stc
inc
add
mull
stos
outsb
jne
ljmp
or
add
js
hlt
pop
cmpsb
daa
aas
xchg
mov
lahf
testb
lcall
fimull
cmp
xchg
sbb
adc
icebp
lea
xorb
jmp
jp
fbld
and
xchg
cmc
jne
aas
push
je
sub
push
addr16
je
inc
sahf
jbe
fldcw
mov
enter
and
int
sub
pop
push
and
push
adc
cld
jecxz
repz
xchg
xchg
popf
adc
seta
pop
lea
lods
loop
mov
push
push
xor
aad
add
cmp
into
rcr
test
pop
ljmp
adc
mov
dec
jmp
mov
and
div
mov
mov
sub
mov
xchg
dec
addr16
mov
inc
lahf
pop
loopne
jge
and
cmc
sub
push
xor
sti
push
ds
sub
aam
lock
mov
push
push
mov
mov
cmp
loop
arpl
loope
scas
outsb
push
les
ret
lds
ja
lahf
xchg
adcl
loope
arpl
movsb
push
mov
xchg
outsb
mov
or
mov
pushf
lret
inc
and
ds
inc
push
enter
in
adc
popa
loop
xor
and
imul
aam
aad
jecxz
add
push
scas
movsl
out
jno
adc
outsb
pop
inc
test
scas
ret
sub
add
add
mov
mov
fadd
xchg
mov
sub
es
sti
pop
and
fidivl
push
std
xlat
mov
mov
filds
sub
sub
inc
jnp
arpl
pusha
and
inc
xchg
mov
jnp
hlt
xchg
iret
data16
jle
push
sub
cmc
mov
loop
cmp
cli
jb
addr16
jbe
jno
les
cld
adc
loopne
add
adc
cmpsb
push
lods
jmp
sahf
add
jnp
cmp
lcall
or
jecxz
cltd
lods
xchg
mov
fdivrp
cwtl
sbb
icebp
int3
cmp
jmp
xchg
loop
sub
jbe
push
xchg
mov
fs
and
addr16
inc
add
fxch
adc
xchg
in
loop
jbe
adc
or
rclb
repnz
mov
shl
jmp
mov
push
mov
add
cwtl
xchg
sub
aam
mov
push
icebp
into
cmpsl
lods
rcrl
sti
jb
add
addr16
xlat
daa
imul
aas
xchg
js
and
dec
xor
xor
push
adc
out
adc
dec
mov
addr16
adc
ja
pop
mov
into
lcall
pushf
push
xchg
popa
xor
lret
dec
inc
in
dec
ja
in
xchg
xchg
addl
push
sub
mov
scas
mov
pop
jmp
push
fcoml
adc
xor
loope
insl
push
lea
pop
nop
test
js
lods
and
lods
loopne
mov
add
les
outsl
loop
lds
cmpsl
ret
lock
psubsw
loop
mov
push
rclb
pop
inc
sub
lret
sub
xchg
bnd
ljmp
addl
faddl
xchg
loop
leave
xor
pusha
repz
xchg
mov
leave
push
pop
jb
call
jecxz
test
adc
jne
cmp
cltd
push
daa
sub
fwait
outsl
es
or
cmpsb
push
shlb
mov
xchg
movsl
lret
jae
in
fnstenv
jmp
and
mov
xchg
adc
inc
insb
xlat
sbb
inc
push
xchg
ja
xchg
pxor
lods
lahf
sbb
out
cli
adc
aaa
mov
push
lock
int3
ret
and
sbb
fldenv
inc
mov
jb
test
adc
cmp
and
ret
pusha
add
adc
jb
push
inc
push
pop
mov
ret
cld
jp
and
cmc
sbb
mov
push
rep
or
test
out
or
push
mov
or
xchg
fs
rolb
mov
mull
das
sahf
and
out
adcl
dec
xor
xor
push
xchg
push
popf
addr16
notb
xchg
jnp
cli
mov
out
stos
mov
out
outsb
icebp
push
and
xor
and
pop
or
rcrb
inc
call
cmp
cmc
cltd
lret
fldenv
hlt
movsl
aad
orb
stos
arpl
outsb
loope
jecxz
jmp
pop
push
cld
mov
cwtl
jns
cmp
xor
mov
in
sbb
outsb
pop
dec
imul
out
mov
cmp
sbb
xchg
lahf
addr16
test
subl
insl
or
mov
daa
cld
pop
dec
xor
add
pusha
cmp
jp
adc
addr16
stos
adcl
or
bound
or
dec
adc
mov
or
sub
mov
inc
rorl
in
cmp
pop
out
mov
loop
sub
sbb
jg
sbb
and
pop
jne
push
call
pop
out
inc
bnd
push
add
fldl
lcall
mov
cmpb
out
rolb
ja
lret
and
pop
ja
loop
stos
mov
mov
push
in
xchg
lods
or
sti
push
addr16
cmc
js
sti
mov
ss
lock
.byte
