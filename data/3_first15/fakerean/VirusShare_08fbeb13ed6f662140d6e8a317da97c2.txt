push
push
call
sub
neg
sbb
inc
ret
push
mov
mov
push
push
mov
xor
sub
mov
and
jns
dec
or
inc
cmp
jne
test
jle
mov
xor
jmp
test
jne
test
jle
mov
sub
mov
roll
inc
inc
cmp
jb
xor
pop
inc
pop
pop
ret
push
mov
push
andl
jmp
mov
inc
mov
mov
cmp
jae
mov
add
mov
add
mov
mov
jmp
leave
ret
push
mov
sub
push
push
push
call
mov
cmpl
jge
push
call
mov
mov
push
push
push
call
cmp
je
movl
jmp
mov
xor
mov
push
mov
mov
call
pop
cmp
je
lea
jmp
call
test
je
push
push
push
call
mov
mov
xor
push
pop
div
mov
mov
shl
mov
xor
push
pop
div
push
pop
sub
mov
sar
or
mov
mov
or
mov
mov
xor
mov
push
mov
neg
sbb
and
push
pushl
call
mov
push
pushl
pushl
call
add
push
call
pushl
pushl
pushl
call
mov
mov
push
call
push
call
pop
leave
ret
int3
add
add
or
and
or
stos
xor
mov
ret
dec
add
sldt
data16
sti
sldt
imul
mov
and
adc
inc
imul
add
and
add
add
verw
or
pop
inc
pop
inc
imul
adc
adc
add
pop
add
adc
add
inc
pop
inc
adc
or
add
and
add
add
inc
pop
adc
inc
or
inc
pop
mov
imul
mov
pop
adc
pop
and
add
mov
add
add
pop
pop
add
lcall
pushl
imul
add
decl
incl
push
ljmp
ficoms
jg
call
jmp
jg
jg
lcall
ljmp
jmp
pop
incl
jg
jg
lcall
incl
incl
pop
incl
jnp
jmp
lcall
jmp
decl
fdivrp
lcall
jmp
lcall
decl
jg
lcall
jnp
jmp
jmp
incl
jmp
incl
push
jnp
pushl
jg
lcall
jg
sub
or
sbb
jg
pushl
ja
jg
call
decl
adc
inc
jmp
inc
push
incl
add
idiv
jg
inc
push
ja
decl
ljmp
decl
jnp
ficoms
pushl
jmp
lcall
lcall
loop
jnp
jg
jg
adc
jnp
decl
call
inc
decl
jg
jnp
call
decl
ljmp
call
jnp
adc
lcall
pushl
and
jg
pushl
jg
inc
pushl
ja
jp
repz
jmp
adc
call
incl
ja
adc
adc
adc
lcall
jg
sbb
sbb
inc
jg
call
call
jg
decl
or
ss
or
and
pop
and
getsec
ss
addps
pushl
ud0
decl
cmp
or
imul
and
imul
pop
or
inc
imul
and
add
adc
adc
adc
pop
add
add
or
lldt
inc
inc
add
mov
or
mov
add
add
adc
add
adc
add
add
add
pop
or
add
sbb
add
cmp
pop
add
add
and
arpl
add
sbb
arpl
addb
add
ja
add
adcb
add
add
addb
add
add
add
imul
add
add
cmp
jg
addb
add
add
mov
add
add
arpl
or
xor
add
add
and
arpl
jg
add
sbb
add
add
ja
add
addb
and
jle
add
adc
add
pop
sbb
daa
arpl
add
es
sbb
xorb
add
add
arpl
add
add
add
or
ja
add
arpl
add
add
addb
sbb
jmp
inc
pusha
andb
add
addb
arpl
add
add
ljmp
imul
imul
decl
decl
call
adc
jg
decl
ljmp
inc
inc
pop
movq
ret
adc
ret
adc
pop
movq
pop
adc
imul
imul
adc
imul
imul
jg
lcall
pop
packssdw
pop
movq
inc
pop
jg
imul
imul
ret
imul
adc
ljmp
pop
pop
adc
imul
pop
adc
packssdw
pop
jg
imul
jg
sbb
lcall
pop
push
jle
sub
sbb
ljmp
push
pop
jg
sub
mov
cli
arpl
ds
pop
inc
jg
jnp
std
fcoms
jg
add
jg
cmp
jg
and
bound
push
psubw
sub
clc
ret
jg
mov
pushf
jg
add
xchg
imul
dec
cmp
sbb
sahf
jbe
jae
outsl
cmp
inc
sbb
imul
dec
std
jns
sub
pop
xor
cmp
push
jg
pop
addr16
ret
pop
and
add
out
jnp
cmp
add
inc
ja
and
jg
jg
sbb
mov
fwait
inc
add
pop
cmp
sub
cmp
pop
jo
pop
mov
ficomps
ja
adc
fdivrs
fcoms
jg
inc
add
fisubs
sbb
mov
jnp
cmp
jg
adc
lcall
call
jmp
ja
jmp
add
add
xchg
dec
add
decl
nop
enter
add
jl
add
mov
test
setl
incl
add
jg
jg
add
or
test
loopne
testb
xchg
incl
rolb
add
or
mov
rorb
test
add
arpl
add
orps
pop
and
lea
jg
test
pushf
scas
add
pop
jo
mov
nop
popa
movsl
push
sarb
pop
jg
popa
cmp
inc
data16
imul
ja
negl
inc
mov
jp
add
add
add
into
test
lods
sbb
add
out
and
xchg
or
cmp
jg
and
add
imul
pushf
mov
and
decl
jg
push
cmp
jmp
or
jg
and
lods
add
dec
mov
inc
jg
shll
add
add
lcall
dec
sub
pop
add
pop
pop
add
or
mov
pop
mov
xor
test
add
add
jg,pt
add
xor
incl
add
jg
jg
add
pushl
sti
add
add
add
addb
incl
add
add
jg
bound
jg
jg
add
jg
incl
add
test
fnstenv
incl
ja
cmp
add
jg
test
inc
incl
jg
add
jg
incl
add
add
mov
add
sti
jg
add
test
incl
add
xor
add
inc
xchg
pop
add
test
incl
push
add
addb
cmp
add
pop
mov
add
add
incl
add
jg
pushl
add
add
add
flds
add
add
lea
arpl
xchg
jb
sbbb
into
add
add
dec
dec
jmp
cmp
decl
lea
or
xchg
imul
jle
ja
incl
add
incl
rol
pushf
jp
or
nop
add
in
push
nop
dec
add
ja
add
lods
add
pusha
jg
jbe
pop
popa
ja
add
les
inc
mov
add
inc
cmp
or
add
cld
rclb
add
fs
mov
jg
fsubrp
add
lods
push
inc
sbb
add
or
jl
jmp
add
add
sbb
int
outsl
add
add
xor
call
inc
jg
add
adc
inc
jg
call
add
sbb
add
sub
xor
cmp
sub
add
xchg
add
ljmp
test
jg
push
ud0
add
std
jg
jg
sbb
cmpl
push
add
pop
cmp
call
jns
xchg
sbb
pop
sbb
outsl
jg
push
jg
nop
ss
sub
or
pop
jg
jg
fimull
pop
sbb
ljmp
inc
imul
pop
add
jg
add
pushl
add
xor
xor
cmp
jmp
call
adc
subb
add
jg
call
xor
add
add
add
ja
ljmp
ljmp
add
jg
incl
add
or
into
sub
cld
sub
pop
pop
jg
jg
pop
imul
jmp
jp
pushf
pop
test
push
pop
jg
jg
pop
add
lcall
jg
push
mov
fisttps
jg
mov
add
filds
jnp
es
add
adc
push
add
add
inc
jg
pop
pop
mov
mov
mov
jg,pt
dec
mov
es
mov
dec
inc
add
add
jg
adc
jmp
mov
jg
jg
decl
es
xchg
ja
jnp
es
jnp
flds
xchg
push
lods
mov
rorb
cmpl
ja
push
ret
push
sbb
push
pop
cs
pop
test
imull
data16
mov
mov
inc
dec
je
push
arpl
jne
arpl
lret
jmp
jmp
repz
call
ljmp
call
lcall
repz
call
incl
decl
lcall
call
push
jmp
lcall
pop
add
lcall
push
and
pushl
ljmp
decl
add
imul
imul
push
decl
ljmp
inc
pushl
incl
push
repz
push
incl
repz
jmp
lcall
lcall
pushf
pop
lcall
jg
inc
pop
jmp
lcall
data16
add
cmp
lcall
imul
cmp
add
adc
incl
cmp
incl
add
and
add
add
adc
adc
add
incl
add
and
pop
imul
lcall
jg
pop
jg
incl
add
lcall
jg
incl
addb
inc
imul
imul
add
orb
add
imul
incl
add
xorb
incl
and
and
incl
pop
pop
gs
add
mov
cmp
incl
pop
imul
add
incl
addb
jg
sbbb
ja
inc
or
add
jg
jmp
lcall
cmp
jg
jmp
add
jmp
jnp
jg
aas
jg
mov
jg
jae
add
es
mov
outsl
jg
imul
push
add
jg
pushf
jnp
call
incl
incl
sti
jg
mov
xor
decl
popa
sbb
jg
push
pop
add
lcall
fs
jg
jg
mov
jnp
jg
outsb
incl
add
add
dec
push
data16
jg
add
incl
push
dec
incl
jg
jg
dec
test
ja
pushl
decl
je
lahf
ja
add
jg
add
jg
jg
dec
jmp
test
lcall
dec
dec
dec
ja
sahf
jg
je
bound
dec
dec
dec
jg
data16
dec
dec
decl
mov
fbstp
jg
jg
jg
push
std
je
add
add
outsl
sahf
pushl
je
ja
ja
ja
dec
push
fisttps
je
add
ja
add
mov
add
je
lahf
dec
std
jg
mov
jg
push
jmp
add
add
add
fisttps
add
jg
add
jg
ja
add
add
call
jmp
imul
pop
pop
pop
sub
pop
jg
push
lcall
pop
ljmp
pop
add
jmp
imul
pop
jmp
jmp
pop
lock
pop
jmp
add
pop
incl
jmp
add
pop
lcall
pop
pop
pop
jg
imul
imul
imul
jg
pop
pop
jmp
pop
jg
jg
jmp
pop
movlps
imul
pop
add
lcall
imul
out
imul
imul
pop
pop
mov
add
pop
inc
decl
jmp
pop
jmp
pop
decl
imul
and
add
add
addb
add
add
incl
add
pop
addb
inc
add
add
add
add
add
pop
pop
jg
subb
pop
pop
cmp
add
pop
inc
orb
jg
jg
addb
add
addb
lcall
add
imul
ja
jmp
add
add
addb
addb
add
or
incl
adc
addb
incl
jg
add
adc
imul
add
sti
mov
pop
jg
mov
jmp
incl
incl
add
jg
jg
add
jg
cmp
add
fcos
incl
push
fnstcw
inc
test
add
pop
test
ja,pt
test
pop
jg
add
incl
push
add
inc
jg
push
fnstcw
incl
ds
jg
jg
jg
jg
add
add
add
jg
incl
cmp
add
jg
xor
jg
add
incl
incl
incl
add
incl
xor
jg
incl
add
test
jg
flds
incl
test
add
data16
add
add
jg
jg
add
add
jg
add
add
incl
jg
add
sbb
data16
incl
jg
incl
incl
jg
jne
lcall
add
cmp
jo
ljmp
lcall
add
lcall
incl
aas
incl
jg
sub
pop
jg
jg
incl
jg
mov
and
jg
jg
add
jmp
add
add
sub
add
add
test
add
sldt
jg
add
add
jg
jg
add
jmp
add
sub
and
jg
add
incl
lods
imul
push
xor
out
jg
push
test
mov
bound
int3
leave
int3
in
decl
xor
push
popa
pushl
imul
jbe
xchg
or
jmp
divl
dec
je
leavew
jg
pop
orps
sub
rdmsr
aad
outsl
out
decl
jg
pop
mov
emms
insl
sub
mov
jg
inc
js
daa
dec
outsl
mov
jbe
mov
jg
jg
fnstcw
inc
add
ja
jg
add
add
add
jg
add
jg
test
add
xchg
add
jg
addb
add
ja
fnstcw
incl
decl
add
pop
inc
add
pushl
bound
jg
ss
jg
jg
add
mov
jg
test
cmpb
lcall
jg
test
jg
add
ds
add
cmp
pop
push
incl
incl
pop
jg
jg
inc
add
dec
pop
jbe
subb
fwait
add
outsb
dec
stos
mov
ljmp
jp
adc
movsb
ja
push
fists
pop
jnp
xorl
add
adc
jmp
jae
imul
jb
inc
push
inc
inc
enter
jg
out
data16
add
jg
pop
inc
cmp
mov
or
and
imul
pop
faddl
and
jnp
leave
push
jb
push
bound
push
add
inc
test
repz
call
outsb
outsb
pushl
jg
jg
jmp
jg
mov
ja
mov
incl
incl
imul
and
push
cmp
inc
bound
inc
add
cmpsl
inc
sbb
add
add
jnp
inc
jle
sbb
jmp
adc
jg
push
mov
add
test
mov
pop
sbb
test
pop
sbb
dec
inc
add
add
jmp
add
sbb
lds
dec
pop
imul
incl
fldcw
jecxz
add
movq
mulps
imul
decl
add
incl
add
jg
jg
jnp
pop
pop
pushf
ja
pop
lea
add
pushf
imul
jmp
imul
jae
pop
sbb
popf
imul
jnp
ss
test
pop
jae
test
adc
pushf
lea
outsb
lea
and
add
imul
jg
mov
pop
mov
ds
pop
pop
or
push
sub
mov
xchg
ds
sbb
xchg
cmp
aas
inc
frstor
push
push
sub
lahf
iret
fldt
rcrl
aas
outsl
pop
push
mov
out
cmpsl
out
movsl
and
adc
xor
push
xchg
xchg
roll
cmp
inc
dec
mov
cmp
sti
ds
es
adc
loop
std
notl
mov
stc
roll
or
ljmp
jecxz
popf
daa
imull
mov
imul
rorl
inc
dec
or
mov
into
push
je
lods
xchg
or
mov
imul
ja
jle
add
jo
mov
push
adc
xchg
mov
cmp
cltd
push
adc
stos
dec
cmp
sbb
or
ljmp
testb
push
scas
clc
js
cmp
cmp
inc
iret
pop
aas
pop
test
jecxz
inc
push
pop
mov
dec
dec
ret
push
sbb
sti
mov
enter
fs
adc
lret
lcall
out
or
dec
or
mov
inc
sbbb
push
std
das
pop
jecxz
and
test
jno
out
inc
lret
adc
call
fisubs
fdivl
shll
pop
jae
inc
sub
ucomiss
xor
push
addr16
ds
mov
push
and
adc
andb
adc
xor
pusha
jne
push
add
push
nop
xor
adc
ret
mov
inc
and
inc
aaa
jb
fcomip
clc
sbb
sbb
out
scas
mov
cmp
hlt
ret
sahf
sbb
js
lods
ljmp
fsts
lret
ret
add
jo
test
into
loop
ss
adc
xchg
fadds
xor
ffreep
xchg
inc
push
dec
xor
adc
add
jmp
push
gs
hlt
movsb
or
cmpsb
test
fcompl
push
mov
xchg
adc
adc
es
mov
sbb
pop
cld
popa
arpl
and
or
cmpsl
xor
rclb
add
jns
je
or
rorl
mov
ja
and
int3
and
xchg
push
adc
ja
xchg
rcll
mov
stos
dec
les
shld
cmp
xor
ss
xor
inc
lock
mov
sbb
dec
into
sbb
test
cmpsl
shl
sbbl
cmp
mov
pop
sbb
int3
inc
cmpsl
call
mov
leave
mov
and
inc
push
fs
pop
cli
pop
arpl
inc
push
jmp
or
mov
inc
xchg
jns
in
js
stc
xchg
or
mov
inc
jb
int3
mov
jg
ja
inc
or
movsl
sub
sbb
or
rcll
push
xor
sub
enter
fcoms
add
mov
jge
mov
push
lret
jbe
lods
test
mov
sti
push
leave
and
arpl
cmp
sbb
jbe
insb
and
jecxz
xchg
insl
xor
cmp
inc
int
ficomps
or
jecxz
cmp
test
into
sbb
insb
lea
pop
test
aad
lea
cmpsb
jns
mov
in
ds
test
jns
cmpsl
aaa
mov
xchg
enter
in
xchg
mov
and
adc
testl
in
adc
icebp
inc
mov
mov
add
adc
inc
jbe
loope
arpl
mov
jns
xchg
inc
jnp
mov
add
push
daa
gs
mov
fbld
pop
fdivrs
cld
addr16
xor
lods
mov
sarb
dec
sub
or
int3
xchg
les
fsubl
xorb
adc
inc
mov
repz
jmp
push
scas
stos
adc
in
mov
cmpsl
xchg
ja
into
pop
push
dec
test
mov
rcll
fnstcw
dec
dec
pop
sbb
or
in
ficoml
js
sub
popf
sbb
push
into
dec
scas
add
jae
adc
loope
insl
rolb
inc
in
std
xchg
rol
mov
pushw
les
loop
fldenv
dec
outsb
pop
mov
dec
xor
adc
into
sbb
and
xchg
movsl
push
push
cltd
shlb
aaa
add
mov
cwtl
mov
adc
cmp
sub
and
or
mov
jmp
faddl
inc
fsubr
pop
fcompl
xchg
orb
cld
loope
xchg
mov
bound
jno
stc
ror
jns
dec
mov
mov
mov
aaa
in
xor
xor
and
add
and
or
fldl
inc
mov
int3
adc
cmp
clc
xor
add
lock
dec
hlt
fwait
addr16
jl
repz
inc
int3
sbb
mov
pop
add
add
add
mov
shlb
push
mov
outsb
pop
dec
cmp
sub
pusha
hlt
push
or
movsb
ud0
cmp
shr
scas
xchg
mov
outsb
fnstsw
xor
cwtl
mov
fnsave
loop
push
adc
repnz
inc
mov
aas
jge
adc
add
pop
mov
jl
dec
push
mov
in
pushl
lds
dec
inc
pop
fcmovne
lret
repnz
jns
ds
mov
or
daa
mov
push
mov
xor
cwtl
cmp
stos
cwtl
nop
lcall
sub
inc
ret
pop
lret
insl
fimull
add
lret
dec
test
int
dec
cli
mov
mov
fldt
sbb
loop
shl
call
adc
sahf
xor
cltd
out
cld
pop
add
pop
je
mov
sbb
out
mov
push
inc
insb
adc
and
or
es
je
xor
mov
in
scas
inc
mov
mulb
xchg
inc
mov
outsb
in
xor
xlat
fstpt
pop
xchg
aaa
scas
jo
sbb
dec
jnp
cmpsb
jbe
jp
loopne
jno
sbb
or
subb
ret
xor
mull
cmp
sar
mov
int3
pop
xor
inc
xor
mov
shlb
std
add
push
lods
or
sbb
cmp
lret
mov
lret
mov
push
cmp
jns
and
into
push
inc
stos
mov
sub
adc
sbb
jne
fs
pop
xor
mov
jns
insb
mov
pusha
xchg
push
faddl
push
and
inc
inc
vmovlpd
ljmp
add
insb
mov
push
sub
push
mov
out
add
mov
mov
and
pop
cs
mov
das
mov
dec
mov
mov
hlt
dec
in
int
in
mov
mov
dec
test
sbb
lcall
bound
mov
lcall
sub
cmp
aaa
aas
mov
test
ret
mov
pop
mov
idivb
ret
cs
inc
pop
xor
mov
jns
sbb
or
outsb
adcl
push
add
adc
xor
or
leave
sbb
cmp
in
sub
repz
pusha
sbb
scas
mov
and
ds
imul
add
ss
cmp
movsl
fnstcw
sub
xchg
sbb
sarl
pop
xchg
mov
lods
mov
mov
movsb
aaa
test
jns
out
ret
dec
xlat
dec
ret
addr16
pop
mov
rclb
and
aam
test
and
fidivs
sti
repz
inc
inc
popf
mov
dec
popa
and
mov
jp
inc
int3
cmp
pop
add
dec
int
and
mov
xchg
mov
jnp
mov
xor
loopne
cli
imul
jge
aaa
ljmp
in
js
mov
sub
jl
test
mov
dec
sbb
xchg
sub
pop
mov
in
int
pop
lret
adc
add
out
mov
xor
adc
xchg
jb
and
outsl
cld
mov
div
push
mov
fwait
adc
test
or
inc
xchg
das
xor
inc
into
nop
pop
push
xchg
pop
jmp
add
adc
sub
sub
mov
xor
int3
in
loop
adc
out
jge
add
jge
das
insl
and
mov
cltd
in
mov
xor
mov
add
aam
mov
in
inc
aas
jp
push
or
sub
gs
ror
or
cs
lret
stc
out
xchg
stos
pop
xor
sub
mov
fs
sub
dec
in
jbe
inc
test
pop
loope
dec
or
inc
or
adc
mov
loope
push
hlt
xchg
addl
sbb
cmp
scas
jecxz
sti
push
pop
std
test
int3
sarl
test
mov
aaa
pushf
repz
int3
sti
dec
mov
mov
cld
shrb
in
imul
icebp
cmp
fs
and
jp
pop
mov
je
mov
pop
dec
ret
cmpl
cmp
mov
push
lods
inc
test
iret
sahf
adc
test
xchg
inc
jne
mov
mov
out
mov
fs
cs
sti
icebp
aam
jnp
test
aad
add
mov
push
or
pop
shll
addl
sbb
push
xchg
shrl
pop
arpl
mov
xchg
fs
aad
push
aaa
enter
mov
in
addr16
add
ja
and
sub
fcoms
xchg
insb
adc
mov
dec
or
mov
pop
jbe
and
dec
out
sbb
xor
inc
scas
lea
aaa
xor
pop
push
push
cli
mov
sub
imul
das
out
jae
pop
subl
orl
sbb
push
mov
in
lods
mov
cli
ljmp
sub
sub
mov
push
inc
mov
outsb
mov
in
lea
aaa
out
icebp
push
sbb
push
cmp
mov
cmp
jo
mov
pop
fmul
mov
and
pop
adc
pop
sti
mov
call
jl
xchg
jmp
sbb
ret
das
sarl
fldl
in
shl
cmp
lock
sbb
lcall
xor
push
rolb
ret
out
ret
jae
es
dec
leave
adc
lcall
ficompl
in
call
cmp
and
mov
jge
in
mov
test
push
sub
loopne
je
push
pushf
loop
add
loope
rorb
jae
insl
cmp
and
and
sahf
pop
fisubs
xorl
out
sub
xchg
xlat
xor
fs
mov
push
mov
cmp
lret
adc
mov
stos
mov
xor
jae
xlat
aaa
mov
jo
shlb
jp
test
lahf
add
xor
inc
inc
movsl
aas
fcmovu
add
bnd
xchg
fs
js
cli
mov
cmp
jns
jae
sbb
movsb
or
xchg
pop
jle
xor
add
dec
movsb
loop,pn
fwait
sbb
ja
maskmovq
imull
cmp
or
lret
xor
xchg
ret
loop
xlat
daa
mov
inc
jmp
xchg
leave
sub
jge
mov
xlat
adc
xor
test
mov
rclb
add
sbb
lds
repz
mov
bound
mov
adc
xor
fdiv
cld
int3
les
popf
jmp
pushf
js
popf
inc
mov
data16
fsubrs
pop
mov
cs
ja
inc
vmread
xchg
hlt
lea
mov
outsl
sahf
adc
lahf
dec
pop
pop
rolb
les
jo
aad
fisubs
or
and
xchg
xchg
cmpsb
icebp
cmp
mov
inc
out
lret
cmp
mov
cmpsl
inc
out
jle
jbe
aas
test
pushf
sti
or
jbe
sbb
jno
mov
fsubs
std
nop
jmp
jne
push
imul
or
ds
adc
aas
or
pop
cld
xchg
ljmp
cltd
add
mov
shll
cs
lock
mov
jmp
mov
loope
cltd
shlb
inc
sub
pand
xchg
jo
dec
push
and
jg
xor
dec
mov
jae
push
icebp
add
fdivs
rcrb
orl
adc
jle
popa
mov
sbb
or
fwait
jecxz
inc
lds
xchg
or
xorb
jecxz
sub
sub
adc
stos
xchg
sti
sbbl
add
mov
lods
aaa
aas
mov
or
mov
popa
lods
add
les
pop
pop
dec
cmpsl
push
lret
scas
inc
ljmp
clc
jp
add
or
cmp
sbb
jge
dec
ret
pop
nop
insl
inc
stc
pop
lods
xlat
popa
xor
inc
sub
shr
out
pop
push
lea
jg
mov
and
jmp
fidivl
jp
sbb
xlat
push
mov
lods
mov
dec
loope
in
fistps
cltd
mov
lods
mov
inc
clc
or
scas
jne
jge
and
std
cli
xchg
aam
sbb
insb
mov
add
dec
shll
pop
mov
mov
scas
jno
aam
pushf
popf
vmovaps
or
and
and
cwtl
adc
sub
and
mov
popf
in
cwtl
and
cmp
jne
dec
and
sub
sbb
ret
pop
addr16
jne
mov
dec
iret
jmp
pop
jp
fimull
fwait
jg
xchg
fcmovnb
jb
rorb
movsl
hlt
pop
sub
inc
in
nop
push
dec
out
sbb
imul
psrlq
cli
adc
mov
int
add
adc
or
nop
pop
add
cmc
and
mov
sti
and
xor
outsb
je
daa
mov
xor
sbb
fbstp
test
push
cwtl
imul
jb
pusha
inc
sub
rolb
mov
out
inc
shlb
jne
sbb
sahf
in
nop
inc
imul
xor
inc
and
xor
shll
js
mov
xchg
out
mov
mull
inc
aad
ds
fnsave
and
jno
jmp
and
mov
test
je
push
fsubp
push
outsb
sbb
fcoms
xchg
insb
adc
inc
stc
call
lock
sub
jmp
pop
loope
insl
push
in
and
jae
popf
adc
shrb
bswap
xor
add
out
mov
rorl
fld
jo
dec
lcall
mov
or
aas
rcrl
hlt
jne
xchg
mov
rorl
adcb
jecxz
test
out
test
jge
flds
or
pop
test
sbb
lret
mov
dec
mov
push
mov
je
notb
pop
xor
rclb
or
pop
jbe
inc
lea
pop
dec
gs
loope
cmp
lret
add
push
and
rol
test
sbb
cwtl
fcmovnu
loope
bound
hlt
cmc
and
cltd
or
out
jmp
xchg
loope
out
mov
ret
mov
or
push
leave
outsb
inc
aad
lret
arpl
cmpsb
mov
or
cmp
cmp
lcall
inc
pop
scas
fs
fdivs
imul
fbstp
pop
mov
add
xchg
aam
adc
nop
push
fimuls
add
mov
push
imul
decb
sub
add
test
add
or
fwait
push
jle
mov
xchg
pop
ficompl
jne
xchg
adc
negb
popa
inc
test
lds
not
sbb
popf
push
repnz
bound
lcall
jns
mov
movsl
ljmp
sbb
pusha
mov
sub
xor
xchg
lods
out
nop
fcoms
xor
jo
cltd
les
jp
in
pop
sbb
fadds
and
decl
negl
mov
aad
or
dec
push
push
sbb
in
add
push
jmp
or
cmpsb
fs
mov
or
jg
vpmullw
and
fwait
or
pop
aad
or
cwtl
stos
in
ficoms
jecxz
and
mov
testb
gs
dec
sbb
fsubrs
insb
mov
bound
push
fadd
movsl
xchg
jp
or
sbb
mov
inc
faddl
mov
addr16
mov
loopne
add
cmp
repnz
lock
ljmp
xchg
add
push
insl
adc
rorl
jle
xor
les
sub
outsl
addr16
out
arpl
aam
lea
sbb
icebp
lahf
jns
stos
jne
mov
fxch
cmp
sbb
ljmp
inc
cmpsl
adc
sub
lods
sub
loopne
les
sub
fimull
insb
sbb
dec
movsl
stc
bound
fstpt
or
fisttps
adc
cmpsb
daa
loop
jecxz
adc
mov
add
and
outsl
andb
stc
adc
xor
in
xchg
jecxz
mov
pop
mov
dec
aad
xchg
xchg
sahf
pop
hlt
loope
jge
push
dec
push
repnz
add
and
push
cs
and
adc
xchg
jnp
repnz
sbb
inc
outsl
bswap
fisubl
sub
inc
lea
adc
aas
xchg
fisubrl
nop
adc
repz
stos
in
push
lahf
xorl
jecxz
mov
cwtl
aaa
jmp
js
pushf
inc
mov
jl
sub
push
xor
popa
jmp
dec
pop
add
xchg
dec
mov
cmp
pop
cltd
lcall
or
jp
nopl
adc
xlat
loopne
pop
in
mov
clc
mov
xor
mov
mov
fucomip
js
ret
push
hlt
xlat
outsl
add
push
mov
lds
pop
push
aaa
or
repnz
popf
subb
lds
fimull
loopne
adc
xor
adc
aas
dec
mov
xchg
fidivl
or
jae
dec
mov
lds
andl
mov
negl
and
mov
jnp
sti
or
int
mov
xor
repz
push
scas
fs
pop
insl
xchg
xor
shlb
inc
icebp
out
call
mov
out
xchg
pop
sbbl
jbe
repz
lods
int
adc
sub
and
mov
jb
mov
popf
repz
sbb
inc
lret
jo
pop
loope
push
mov
jbe
xchg
jae
or
into
push
xchg
xchg
xchg
mov
pop
stos
int3
lahf
arpl
ret
clc
repz
ja
pop
pusha
jle
bound
addr16
decl
ffreep
pop
add
xorb
jmp
out
imul
popa
sub
pop
cmp
out
add
or
mov
stos
mov
ficoml
or
sbbb
hlt
push
div
xchg
lret
fmull
mov
push
push
sbb
in
cmpb
pop
fidivl
add
adc
fistl
pop
mov
sarl
cmpb
inc
lret
mov
push
push
ljmp
mov
xchg
add
sti
xchg
sbb
xorl
inc
out
scas
cltd
cs
das
jbe
fdivl
in
push
pop
in
pushf
dec
adc
out
pop
stos
mov
je
or
lock
mov
cmp
adc
movsb
sbb
and
dec
pop
clc
shll
cmp
pop
shrl
daa
xchg
icebp
push
jno
scas
push
mov
insb
xor
rolb
icebp
aad
push
or
mov
mov
and
fidivrs
adc
cmpsb
test
call
sbb
int
loopne
aam
jae
lds
inc
orb
rol
xchg
lahf
aad
mov
mov
ljmp
xchg
dec
or
es
in
lods
cmp
adc
push
mov
lods
or
sub
pop
pop
add
stc
push
fistpl
aam
pop
sub
scas
cwtl
push
ret
cmp
gs
mov
or
aam
scas
sub
loop
and
inc
pushf
daa
test
xor
pop
lret
cli
rol
cltd
es
and
dec
dec
mov
lea
pusha
sub
inc
aad
shl
test
xor
rclb
jbe
iret
imul
subl
stos
push
outsb
add
push
mov
addr16
mov
mov
stos
stos
or
sub
cld
xor
push
push
out
mov
mov
test
lock
lret
or
jp
push
pushf
xchg
mov
notl
xchg
cwtl
sub
jp
inc
or
lds
scas
jmp
push
cmp
popf
imul
jb
mov
push
xor
das
stc
out
aam
pop
and
xchg
mov
lea
xor
inc
jnp
cli
loopne
je
lcall
cmp
mov
dec
or
cmp
sub
xchg
mov
fists
test
push
aas
rorb
mov
add
cmp
test
aaa
add
jnp
jl
dec
sub
mov
mov
add
mov
stos
jle
pop
rcll
test
arpl
lds
jb
fildll
cs
int3
dec
pop
add
test
xchg
inc
sub
loope
cmp
sbb
adc
xchg
mov
sub
pop
into
sahf
jno
out
adc
push
mov
lea
into
lods
outsl
cld
repnz
push
je
xor
enter
jg
hlt
xor
inc
in
push
jl
loope
push
shl
mov
into
ret
or
iret
in
daa
push
or
fxtract
xchg
arpl
mov
pop
jmp
imul
int3
cmc
fcompl
push
out
xchg
or
and
lods
ja
pop
pop
push
fbld
ss
xchg
pop
push
jle
in
pop
or
dec
push
ds
inc
out
add
jle
or
and
dec
adc
outsl
sub
inc
dec
adc
scas
ljmp
push
mov
ja
jae
lods
outsb
mov
sbb
sub
inc
mov
fwait
xchg
test
loop
adcb
movsb
pop
mov
or
leave
add
push
sar
aaa
jbe
or
or
in
es
int
lods
pop
fwait
dec
aaa
xchg
or
das
mov
test
pushl
movsl
push
shlb
inc
xchg
cmc
rcl
test
inc
into
xchg
sbb
pop
jecxz
add
movsl
test
xchg
imul
idiv
xchg
test
sub
adc
outsl
or
dec
sub
cs
call
pop
jns
aaa
out
mov
ljmp
xchg
push
sub
cmp
xor
mov
lahf
and
sbb
fnstsw
jbe
inc
mov
imul
dec
orl
xor
in
and
or
jle
mov
icebp
mov
cmp
mov
ret
mov
jns
push
imul
mov
jle
pop
push
aas
jmp
cmc
addb
mov
sub
sub
mov
jbe
fisubrs
aas
stos
dec
ja
jae
cmp
cmpb
mov
xchg
push
adc
adc
push
mov
jbe
jb
sbbl
popl
daa
inc
pop
mov
aas
test
lret
mov
push
lcall
inc
clc
outsb
xchg
or
out
add
lcall
outsl
stos
sbb
xchg
push
cwtl
push
ret
shlb
stos
or
or
lds
inc
adc
xchg
and
push
pusha
mov
xor
bound
ret
xchg
jae
shrl
mul
cmp
adc
sbb
adc
add
ret
push
int
subb
je
lods
lahf
xlat
fldt
xor
lods
bound
mov
push
pop
jmp
std
lahf
mov
jl
mov
jp
ret
push
rorb
cmp
lock
and
xchg
shl
pop
push
adcl
cmc
mov
dec
ja
adc
cmp
movsb
cwtl
or
mov
sbb
arpl
xor
cwtl
jl
fwait
or
les
cmp
std
mov
jo
pop
test
pusha
arpl
out
jp
xchg
add
cmp
mov
xchg
sub
mov
jno
ror
inc
push
jmp
stos
lcall
cmpsb
pop
xchg
mov
mov
popa
cli
add
shrl
stos
mov
inc
lods
inc
rclb
lret
add
and
pop
les
xlat
rcl
mov
xchg
mov
sbb
xchg
pop
push
decl
popa
int3
mov
jne
scas
cmp
mov
lock
stc
mov
scas
in
or
push
insl
int
hlt
or
movsl
fwait
push
inc
data16
jns
orb
push
inc
cmpsl
mov
mov
jmp
cwtl
dec
push
xchg
xchg
incb
cmp
cwtl
adc
loopne
mov
fcmovnu
jnp
pop
std
fistps
fidivrs
arpl
inc
add
pop
push
adc
jl
and
repz
adcl
movsb
inc
cmp
cmpsl
sarl
cmp
fisubrs
inc
je
cmp
or
fcoms
pop
insb
dec
out
sbb
dec
ss
hlt
cmp
jbe
mov
popa
add
dec
cs
jnp
int
movsl
les
sahf
aas
js
sub
stos
js
shlb
andb
aas
push
stos
sti
insl
sti
dec
pushf
outsb
inc
loope
or
repz
outsl
mov
fisttpll
test
jo
jnp
cmp
ljmp
mov
jnp
or
jno
ljmp
test
aas
sbb
inc
xchg
mov
repnz
jg
mov
jmp
mov
popa
add
and
out
sub
dec
fisttps
lret
push
inc
mov
dec
test
mov
pop
sarl
outsb
sub
xchg
jb
sbb
pop
repnz
dec
into
test
scas
inc
fldt
jmp
add
jb
and
dec
lea
or
not
cmpsb
ja
mov
dec
cmc
clc
push
loopne
out
and
out
nop
sahf
fsub
adc
stc
adcl
mov
es
inc
enter
and
in
insb
push
mov
or
and
int
add
hlt
sbb
xor
and
mov
jp
mov
xor
mov
ret
sbb
jg
out
lahf
stc
shufps
add
imul
lds
lock
cli
insb
aam
lcall
jne
jns
inc
imul
idivl
test
dec
push
fldl
movsl
push
jns
xor
adc
out
adc
or
loopne
push
sbb
and
rorl
arpl
flds
push
adc
in
cs
add
cmp
fld
cmpsl
mov
ds
dec
out
or
shll
push
push
jl
dec
mov
dec
stc
sti
shlb
je
cmp
arpl
mov
push
add
push
leave
push
pop
shrb
mov
jle
ljmp
add
jg
mov
jbe
scas
xor
fiaddl
mov
mov
inc
sub
inc
sbb
les
push
jae
ljmp
sbb
inc
pop
fwait
rol
cmp
jmp
jle
push
int3
cmp
fisttps
scas
mov
jo
pop
xor
dec
mov
xchg
push
fcomps
mov
mov
shrb
into
or
mov
or
jp
sbb
movsl
mov
inc
mov
sbb
mov
push
pop
insb
xchg
das
ret
add
mov
sahf
lock
cmc
xchg
inc
mov
ds
shl
fcoml
shll
push
cmpsb
cld
cld
movsb
stos
gs
and
fsubl
inc
scas
push
dec
jnp
aaa
push
sbb
test
mov
stc
mov
mov
leave
hlt
popf
sbb
pushf
test
ja,pt
je
and
add
nop
dec
xor
out
shl
adc
add
xor
mov
imul
roll
fcmovu
or
stos
shlb
dec
sub
mov
xor
popf
cmp
inc
ds
ja
inc
push
jmp
loope
movl
ret
loop
xchg
hlt
ss
cmpsb
es
jg
rcll
push
add
xchg
jecxz
cwtl
mov
push
xor
push
movsl
arpl
jecxz
jmp
dec
loopne
jne
cwtl
mov
pop
adc
sub
lock
push
das
push
inc
imul
xchg
cltd
in
pop
fisubs
xlat
adc
in
lcall
scas
into
adc
push
in
out
lods
xchg
mov
inc
arpl
sbb
test
mov
xor
daa
push
cmp
add
or
cld
insb
cmp
xchg
inc
pop
adc
enter
jne
xlat
imul
sbb
jo
inc
push
jecxz
xchg
icebp
cwtl
jle
adc
sahf
flds
or
jmp
insb
xchg
ficoms
iret
rclb
inc
pop
xchg
mov
pop
jmp
jb
repz
cmp
int
lcall
test
leave
in
pop
out
in
adc
pop
ret
popf
ja
lock
mov
jl
and
mov
mov
adc
loopne
mov
into
dec
and
popl
mov
sbbb
jns
jns
bound
add
movsb
outsb
inc
out
jl
or
mov
cmp
cmp
jae
int
test
aaa
adc
or
dec
ja
lcall
xchg
pusha
aaa
mov
divb
es
scas
addl
xchg
and
mov
mov
xchg
dec
mov
hlt
lahf
jge
in
lcall
repnz
and
or
iret
xor
fs
mov
adc
sbb
or
push
shlb
mov
xor
into
stos
xchg
cmp
mul
repz
mov
pushf
inc
testl
in
adc
pop
andb
fs
mov
rol
repz
gs
dec
cs
lea
iret
pop
test
shlb
xchg
fwait
fs
cli
pop
inc
mov
in
insb
sar
inc
mov
nop
pop
lea
mov
iret
lahf
mov
xor
cmp
dec
iret
add
test
ja
insb
adc
cs
rolb
cmp
arpl
mov
mov
out
or
loop
xchg
push
lea
fcoms
dec
dec
call
std
aas
push
icebp
xor
jnp
dec
out
cli
shlb
sub
add
sub
mov
and
lret
mov
add
add
xor
cmpsb
fisubs
push
scas
fistpl
aas
add
loope
mov
cwtl
jae
xchg
subl
push
orb
insb
or
into
ret
or
icebp
jb
sahf
mov
pop
std
cmp
mov
xor
stos
mov
cwtl
push
mov
mov
pop
js
int
jne
dec
hlt
sub
mov
mov
out
inc
arpl
ds
dec
les
out
xor
adc
fists
add
mov
hlt
movsl
ret
sbb
je
and
xchg
out
hlt
or
cmp
inc
out
adc
mov
cmp
mov
fiadds
push
pop
in
in
ss
fmul
jae
mov
sti
dec
dec
loope
sub
mov
les
adc
push
and
push
mov
frstor
popf
push
cmp
mov
lods
or
lahf
sub
ss
lret
int3
dec
lods
cwtl
add
add
aaa
and
sahf
nop
adc
dec
jge
dec
ds
arpl
push
sub
cmp
in
std
xchg
pusha
cmp
and
xchg
outsl
rorl
push
mov
push
add
test
inc
scas
and
dec
xor
sub
sbb
popl
mov
call
push
movsl
mov
add
xor
incl
call
cltd
or
dec
mov
add
xchg
test
out
repnz
popa
push
stos
int
pop
shlb
xlat
sub
push
sub
rcll
mov
in
add
iret
sub
inc
ja
ja
push
aad
push
mov
imul
cmp
jae
pop
rcrl
add
cmp
xchg
aam
aam
push
push
aaa
pushf
test
int
jno
mov
pop
mov
icebp
lods
into
js
call
mov
data16
je
sub
sub
add
and
add
out
sub
into
xchg
dec
mov
adc
push
addb
jne
push
jne
jae
nop
ds
arpl
adc
out
test
cs
imul
sub
loop
add
stos
js
inc
repz
mov
lcall
add
mov
shr
jge
dec
dec
popf
movsb
or
loope
cmp
xchg
ljmp
inc
stc
sub
and
mov
cmp
test
jne
pop
pop
ds
xor
jmp
jp
fstpt
mov
rorb
loop
adc
cmc
test
add
cwtl
jl
jno
sbb
ja
sbb
dec
cli
clc
mov
mov
add
xor
jnp
add
imul
ljmp
cltd
cmp
sub
cli
push
pop
push
das
jo
xorl
js
scas
inc
in
popa
push
psubq
xor
shl
pop
lods
aaa
sti
out
mov
adc
lret
mov
xor
sbb
leave
mov
mov
or
mov
mov
icebp
outsb
int
outsb
repnz
jae
loop
mov
sbb
pop
cmp
or
scas
rcr
sti
cs
xchg
mov
data16
sub
xchg
hlt
stc
aad
push
jmp
xchg
fistps
mov
outsb
lods
xor
hlt
lods
mov
inc
je
subb
adc
lahf
add
sbb
and
popa
push
mov
adc
in
pushf
lds
movsl
add
cmp
sub
add
adc
mov
add
add
xchg
mov
icebp
test
test
xchg
lock
lods
arpl
leave
dec
jge
loop
and
test
or
fdivr
add
aaa
mov
sahf
mov
add
es
sbb
nop
pushf
dec
fimuls
inc
jecxz
jbe
icebp
inc
popa
fcoms
cmp
out
out
stc
out
or
push
cmp
dec
call
jmp
fstpl
mov
xchg
xlat
add
jle
sub
add
push
out
adc
loop
pop
jmp
stos
cmp
mov
jmp
frstor
adc
int
enter
or
sbbl
inc
push
jno
test
mov
cltd
jmp
xchg
xor
inc
push
xchg
loope
jg
sbb
add
ret
hlt
mov
js
or
mov
arpl
xchg
xchg
xchg
xor
mov
jne
push
push
fbld
inc
xor
sti
cmp
test
push
leave
adc
mov
sti
cld
sbb
in
or
out
push
xor
jno
sub
and
and
jnp
test
sub
cltd
hlt
lods
outsl
lret
pop
lods
inc
sbb
popf
jg
sub
mov
lock
js
aad
mov
add
int3
mov
frstor
outsl
dec
outsl
mov
iret
arpl
fcoml
and
cmp
jnp
jge
lret
fwait
dec
mov
loope
inc
cmpsb
dec
mov
in
daa
insb
bound
dec
mov
ds
stc
push
lods
mov
adc
jo
pop
les
pop
jg
dec
add
xor
jecxz
shlb
popa
loop
cmpsl
or
lea
sub
inc
fdivp
pop
or
out
and
idivl
mov
jecxz
inc
decl
pushf
lock
loop
xor
jg
mov
out
pop
cmc
sti
gs
jns
arpl
xlat
mov
sub
add
clc
adc
ret
push
mov
xchg
mov
imul
pop
dec
imul
sub
js
add
out
pop
and
cli
adc
inc
jno
jns
cmp
repnz
je
cmp
fsubrs
scas
pop
out
or
mov
in
fistpll
in
fsts
movsl
cmpsb
jns
xchg
out
xchg
cmp
push
and
sbb
stc
mov
xchg
out
das
outsb
adc
insl
mov
push
push
ljmp
cmp
into
cmp
and
lret
xor
out
lods
dec
mov
test
daa
in
push
xchg
movsl
jmp
adc
sbb
push
test
fs
lret
jne
in
cld
mov
gs
in
aas
fisubrs
sbb
iret
gs
sahf
mov
repz
pop
cmp
ds
add
sbb
stos
data16
in
xchg
add
cltd
or
repnz
dec
inc
xchg
sub
pushf
mov
dec
cmp
mov
ret
pop
cmp
or
cli
add
inc
jg
add
mov
mov
pop
xchg
dec
insl
ret
inc
pop
sti
add
cwtl
aad
jg
or
ret
pop
negb
or
addr16
mov
movsb
or
mov
ret
or
and
jo
cli
jb
push
lock
xchg
leave
out
inc
mov
js
pop
sub
enter
int3
xor
adc
cmpsl
in
fcmovnu
aad
out
fldenv
test
jmp
mov
lods
and
lahf
sub
mov
pop
ds
mov
and
arpl
mov
shrb
cmp
insb
mov
mov
xor
push
mov
insl
ss
push
icebp
mov
lods
lock
in
testb
mov
jg
mov
and
les
pop
js
mov
popf
out
xchg
jno
lret
push
dec
outsb
jmp
sub
jnp
js
jg
xor
cs
lcall
xlat
sbb
stc
stos
rol
ret
push
movsb
sbb
or
or
pop
jmp
jecxz
adc
jge
add
icebp
jmp
pop
jne
mov
aaa
add
jb
xchg
pop
add
add
ret
outsb
sub
xchg
mov
enter
push
sub
rclb
stos
lret
ss
jbe
vpinsrw
push
pop
cmp
xlat
mov
and
push
ror
addr16
in
inc
mov
inc
sbb
stc
push
sbb
add
jl
cmovae
fs
adc
adc
cld
mov
cli
mov
bound
jg
add
pop
repz
adc
aaa
adc
push
jecxz
sti
scas
dec
in
rclb
mov
adcl
sub
and
out
pusha
mov
test
test
push
cmpsl
aad
fcmovnb
add
jnp
repnz
xchg
xor
aas
xor
data16
loop
mov
cmp
movsl
mov
rcrb
gs
cmpsl
pop
dec
push
push
mov
xor
int
aad
insb
fsubs
mov
dec
jp
fisubrs
lcall
cmp
icebp
sbb
call
mov
icebp
cs
cltd
xor
xchg
stos
mov
push
aad
jmp
sub
sub
stos
mov
out
imulb
jne
mov
inc
mov
adc
push
and
push
xchg
aas
shr
push
lods
imul
push
xor
lods
push
cs
inc
call
jnp
lcall
movsl
shrb
sub
scas
jnp
pop
inc
decl
sarl
push
push
addr16
push
clc
call
mov
sbb
inc
sbb
ja
push
cmp
xor
movsb
sub
xchg
mov
inc
out
pop
test
sub
inc
int
jae
jnp
jp
mov
stos
das
ljmp
jae
sti
movsb
push
cmp
pop
lret
dec
in
fdivs
aad
out
movl
jg
push
pop
jmp
push
pop
sub
sbb
adc
mov
lods
outsl
clc
inc
mov
push
xchg
mov
mov
and
mov
cs
adc
call
xor
test
lods
aad
aaa
nop
lods
pop
mov
and
stos
mov
inc
iret
frstor
adc
jp
pop
dec
not
iret
or
push
lea
adc
or
xor
fwait
in
mov
adc
pop
lea
pop
rcrl
into
mov
add
sbb
inc
push
xor
shlb
cltd
mov
cld
xlat
pop
pop
lcall
ja
andb
add
mov
lcall
dec
sti
push
push
sarb
pop
adc
mov
dec
inc
outsb
popf
cld
subl
fdivr
or
scas
jne
adc
out
adcb
inc
xchg
test
aas
pop
outsb
sub
sar
cs
test
dec
test
inc
ret
xchg
pop
inc
mov
pushf
lds
test
fs
lds
aad
jge
popa
mov
aam
and
push
test
push
cmp
inc
mov
push
jo
push
icebp
xor
adc
fsubrs
mov
je
les
jge
mov
sbb
movsb
and
fnstenv
out
mov
out
fldt
sar
loop
and
lcall
lds
lcallw
dec
add
mov
mov
cmpsb
jl
cmpsl
pop
mov
pop
lods
sti
das
clc
lds
adc
daa
dec
outsl
and
mov
js
or
inc
jne
pop
imul
inc
jne
nop
lret
ret
lret
lcall
pop
jmp
jp
add
mov
in
shll
or
mov
adcb
pop
adc
xchg
sub
jmp
fs
ror
leave
mov
cs
xlat
pop
jmp
fs
push
add
pop
dec
loope
dec
dec
pop
add
push
popf
add
pusha
cmpl
aaa
clc
idiv
faddl
gs
cld
adc
movl
jno
test
adc
adc
repnz
int
movsl
cmp
add
add
lock
sbb
adc
pop
jmp
scas
push
in
dec
dec
push
mov
loop
enter
in
pop
fsubrp
adc
jo
dec
sub
jo
cmp
adc
xor
sbb
pop
adc
xchg
push
insl
add
movsb
mov
mov
lods
adc
jns
xor
into
and
dec
loope
push
in
jg
aam
add
fisubs
shll
je
pushf
mov
int
mov
add
daa
mov
enter
test
sub
mov
adcb
jo
mov
xchg
imull
xor
out
adc
mov
mov
shl
inc
aaa
out
and
cltd
jb
pop
fcmovbe
dec
lahf
mov
jge
test
js
pusha
pop
js
push
mov
dec
in
test
push
test
ss
or
sbb
rcll
jae
js
mov
insb
sbb
push
nop
rcrb
popf
xchg
lcall
dec
les
push
rcrl
inc
add
lret
sbb
pop
cmp
loope
lock
iret
xchg
pushf
push
mov
fs
pop
cmpsb
lods
test
cmp
xor
test
mov
shll
lea
mov
imul
push
test
repz
dec
ret
pop
pop
xorb
lgs
add
cmp
xchg
leave
call
cmp
xor
mov
cs
mov
lods
mov
xor
mov
sti
xor
clc
adc
push
ret
push
out
add
mov
loop
push
push
sub
inc
test
int3
test
outsb
pop
mov
pop
stos
add
add
dec
mov
fnsave
ret
scas
mov
clc
sbb
cli
xchg
testb
outsl
fisubl
cwtl
mov
mov
es
pop
sub
sbbl
jl
je
js
addb
push
inc
dec
cmovno
jge
xchg
or
sub
jae
add
sub
and
sbb
sbb
rorl
add
push
push
xor
and
pop
lea
decb
in
pop
mov
pop
cwtl
test
push
pop
mov
adc
sbb
jns
cmp
ja
xor
lret
shlb
mov
adc
push
cmp
mov
insb
fildl
aad
fld
jp
mov
adc
dec
sarb
paddsb
add
cmp
bnd
pop
and
das
dec
fisubrs
in
push
ss
fsts
lods
mov
in
iret
push
into
movsl
jecxz
inc
movsb
push
out
enter
adcb
ds
mov
push
mov
out
cwtl
mov
fwait
and
mov
test
fwait
jnp
enter
lahf
push
cwtl
add
jb
pop
ljmp
sbb
ds
aad
loopne
jp
mov
jl
jbe
and
jge
adc
jge
dec
pop
jo
test
pop
sti
adc
gs
or
xchg
mov
es
push
ret
cmp
xchg
pusha
sbb
rcll
pop
jge
int
dec
add
add
mov
mov
sub
add
out
inc
inc
jne
jnp
pop
or
jg
sti
pop
xor
test
adc
or
enter
outsl
xadd
mov
mov
jbe
sbb
rorl
xlat
lock
fwait
out
push
mov
jle
and
dec
gs
pop
les
cpuid
mov
fnstenv
popf
adc
outsl
sbb
rorb
fisubrs
int
in
in
rorl
or
pop
or
scas
xor
xchg
movsl
xchg
rcrb
ds
jbe
lahf
mov
fsubrs
test
popf
pop
xor
out
cmp
ret
mov
sub
inc
xor
arpl
nop
jp
pop
cli
xlat
push
mov
mov
dec
mov
mov
leave
jne
lods
inc
test
jecxz
lods
pop
or
imul
shll
inc
sbb
jnp
jl
jl
loop
pop
fcompl
dec
pop
lret
adc
push
ljmp
jne
popf
stos
xorb
cmp
sub
test
ja
mov
cmp
cwtl
sahf
int
cld
xchg
lock
add
insl
out
cmp
adc
stos
pusha
mov
scas
sbb
hlt
jmp
push
cmp
out
dec
mov
ret
out
cmp
das
ret
pop
sbb
xchg
dec
ret
mov
and
stos
adc
mov
push
call
test
or
imul
popf
xor
xor
sar
mov
or
or
cmp
inc
cmp
jecxz
fldenv
add
je
ljmp
rclb
mov
cmp
pusha
xor
push
or
stc
cmp
or
or
pop
mov
inc
dec
jnp
outsl
stos
push
sub
std
mov
data16
sbb
xchg
add
rorl
jns
sub
xchg
sbbb
sbb
push
sub
lcall
imul
xchg
rcrl
stos
mov
data16
mov
pop
rolb
cmp
xor
inc
or
jmp
lcall
dec
xor
cmp
repz
add
dec
xchg
pop
cmpl
lods
mov
int
mov
inc
sub
pop
lock
pop
das
xchg
push
arpl
inc
sarb
shr
sbb
push
loopne
sub
cltd
dec
sbb
push
push
cs
dec
fcmovne
outsl
jmp
es
cmp
scas
imul
xchg
jp
out
pop
cmpsb
sbb
mov
cld
clc
mov
jbe
jo
mov
imul
loope
push
in
and
test
std
outsb
jns
stos
add
mov
test
mov
aam
popl
push
pop
push
in
dec
jo
sbb
inc
cmp
pop
jge
out
push
xor
push
push
xstore-rng
cmpsl
inc
xchg
mov
popl
mov
add
jns
aam
xchg
nop
ret
js
outsl
aam
jno
cmp
dec
xor
das
adc
dec
mov
enter
fmuls
dec
data16
and
imul
mov
mov
cmc
imul
or
insb
and
dec
daa
test
mov
stos
jns
movsl
sti
mov
cmp
sub
xchg
inc
adc
sbb
add
lcall
repz
mov
int3
lds
ss
cmp
or
cli
inc
fsubrs
in
xlat
xchg
jnp
sbb
xor
rcrb
lret
dec
cmp
sub
cmp
leave
std
dec
andb
mov
xor
jnp
aaa
dec
lcall
inc
mov
add
in
std
lea
ficoms
pop
fwait
test
cmpsl
mov
sbbb
fstps
jmp
shl
or
add
mov
shrl
sarb
hlt
adc
adc
pop
loop
and
jmp
inc
mov
mov
add
lods
jno
adc
adcl
and
add
mov
lret
lret
add
clc
sbb
jb
aad
pop
nop
lods
sbb
into
push
dec
xor
mov
pop
dec
and
mov
mov
adc
mov
adc
cmpsl
pop
rolb
fldt
mov
mov
jg
test
mov
adc
popa
pop
insb
mov
pop
dec
jg
pop
icebp
xor
and
sub
jle
das
jbe
imul
in
test
push
fmuls
daa
outsl
call
add
cmp
enter
leave
push
cli
xchg
and
xor
movsl
cmpsl
xchg
mov
movsb
shrb
cmp
jnp
daa
ljmp
daa
mov
into
outsl
mov
push
dec
test
xlat
iret
sahf
adcb
jno
pop
and
xlat
push
lock
outsl
in
sub
in
ss
out
inc
int3
shl
push
in
ss
bound
sub
lods
dec
js
jno
incb
fiaddl
dec
fcomps
cmp
dec
repz
pop
aas
mov
and
std
jge
xchg
or
loopne
add
adc
adc
xchg
cmp
mov
pop
hlt
mov
js
ljmp
leave
fisttpl
pop
dec
jmp
sahf
cmp
out
loope
cmp
xorb
mov
roll
je
fwait
or
sahf
adc
dec
jb
movsb
repnz
data16
sbb
aas
movsb
dec
pop
cmpsl
push
subb
shll
cmp
sbb
bound
xor
addl
and
inc
fdivl
fists
sbb
adc
mov
sbb
insb
adc
cmp
std
push
movzwl
cmp
stos
pusha
adc
xor
and
xor
and
mov
push
mov
data16
sbb
fimull
jle
iret
lods
mov
xor
xchg
stc
punpcklwd
es
jmp
mov
in
inc
mov
xchg
enter
test
ret
outsl
aam
in
call
push
lret
sbb
sbb
or
dec
mov
mov
repnz
xchg
fstpl
add
lret
inc
cmpsl
ror
bound
add
sub
xchg
push
sti
je
push
add
dec
inc
adc
test
xor
jae
inc
out
xchg
fcoml
mov
add
cmp
in
xchg
movsb
loopne
pushl
or
outsb
repnz
jae
dec
popa
ror
rcrl
sti
sub
dec
pushf
push
cwtl
gs
dec
les
push
lcall
pop
jle
sub
sbbb
pop
push
xchg
xchg
add
sub
xor
pusha
lret
into
ss
movsl
sub
jge
add
std
xchg
sbb
jmp
fcmovbe
mov
into
fs
xor
push
mov
lods
mov
shrl
and
loope
push
imul
mov
cmc
sub
push
push
xchg
sub
loope
and
xchg
repz
jmp
xchg
xchg
leave
cmp
mov
mov
repz
movsb
mov
and
sub
sarb
data16
pop
xchg
pop
push
lods
sti
dec
xchg
scas
popa
sub
xor
fs
jns
sub
lret
or
inc
push
xchg
mov
add
or
push
ret
mov
ret
adc
into
mov
xchg
out
pop
pop
orb
sub
and
stc
mov
push
pop
fimull
outsb
push
mov
in
inc
enter
mov
or
xchg
call
wrmsr
lret
push
movsl
cmp
jno
xchg
mov
bswap
push
xchg
mov
mov
or
mov
loopne
cld
mov
in
mov
jo
jnp
push
lock
loopne
test
pop
sbb
jae
push
in
pop
out
inc
lret
pop
mov
and
push
jl
imul
push
mov
mov
js
iret
pop
sub
mov
jns
loope
call
sbb
xchg
pushf
ja
adc
testb
cmp
sbbl
dec
jns
lcall
dec
repnz
loopne
mov
imul
sub
lret
xorl
fcoms
push
sbb
push
fcomps
aam
mov
out
push
dec
and
or
xchg
pop
xchg
cs
cwtl
rorb
sbb
jecxz
mov
in
test
push
fs
out
pop
test
jmp
pop
jo
push
les
xor
lret
cmp
push
xchg
xchg
push
push
fisttpll
test
dec
jle
mov
xchg
les
bound
bound
int
cltd
dec
lcall
jae
mov
repz
shrl
pop
jns
call
loopne
rorl
lret
loope
inc
adc
rcrb
jne
mov
cmpsb
sub
xor
sub
ret
xchg
sub
in
jg
enter
jnp
inc
sub
mov
adc
inc
inc
addl
pop
int3
rcr
in
cs
jecxz
scas
fwait
sti
sarb
jns
jge
sub
jp
scas
shl
cmp
ljmp
popf
pop
pop
sti
jne
gs
jno
mov
lahf
loopne
xor
sti
int
xchg
insb
js
push
stos
ret
popa
pop
cmp
cli
xor
jle
pop
jecxz
pop
in
cmp
xchg
inc
mov
mov
loope
mov
lea
jnp
cmp
out
pop
push
lods
ret
push
lsl
adc
mov
add
jmp
ja
in
fcmovb
dec
adc
loopne
lock
or
jno
sbb
jnp
xor
ljmp
jo
int3
in
sbb
adc
push
mov
imul
daa
xchg
movsl
inc
jno
mov
es
jecxz
add
or
jecxz
fcoml
jne
mov
in
shll
popf
pop
mov
pop
mov
pushf
push
push
pop
pop
in
dec
mov
test
stos
shr
mov
sub
jmp
mov
cmpsl
fildll
jae
fildll
mov
sbb
dec
cltd
in
push
xchg
jns
adc
jl
imul
aas
sbb
push
incl
clc
pushl
out
out
and
testb
jns
repnz
adc
js
and
sub
psadbw
loope
std
inc
shll
stos
test
dec
mov
ljmp
cmp
or
gs
les
sbb
cwtl
aaa
sbb
or
repnz
cmp
jnp
and
sub
repnz
push
or
cmp
jmp
ds
pop
test
mov
in
adc
cmp
cmp
and
mulb
rclb
cmpsb
into
cs
sbb
lea
iret
mov
inc
jp
stos
fcmovbe
mul
xor
hlt
xor
lahf
add
loope
xor
scas
lds
mov
arpl
xchg
add
push
stos
out
les
dec
into
and
jbe
or
mov
fwait
pusha
xchg
sbb
aam
data16
ja
jbe
stc
popf
out
scas
xchg
out
outsl
mov
ret
lods
push
jo
sub
incb
testw
ffree
mov
sub
les
test
setp
push
lods
push
xchg
sahf
out
loop
xchg
add
adcb
testb
mov
adc
or
push
add
pop
mov
inc
xor
cld
add
jnp
or
add
jp
loopne
clc
mov
push
js
inc
push
xchg
gs
push
roll
sti
out
cwtl
inc
push
jl
push
cli
pop
mov
sub
push
pushf
lret
imul
mov
jmp
cmpsl
xor
insb
xchg
dec
enter
icebp
cmp
leave
sbb
cmp
insl
or
and
push
je
jnp
xchg
mov
std
cli
addl
aas
mov
test
mov
daa
in
xchg
xor
ret
pop
adc
push
ret
add
inc
or
mov
nopl
test
jl
test
pop
or
jp
je
add
sbb
sbb
in
mov
call
push
fldt
xor
mov
inc
popf
aas
xchg
popa
call
mov
orb
pop
jp
pushf
push
stc
shll
inc
sbb
sahf
test
mov
mov
arpl
ss
lahf
adc
testb
aas
test
mov
inc
dec
fwait
imul
mov
rolb
les
mov
jno
dec
pop
mov
insl
movsl
xchg
add
cmp
mov
stc
jecxz
mov
mov
das
or
call
pusha
or
dec
xchg
lret
cmp
adc
cmp
arpl
dec
sub
jecxz
loop
mov
fisttpll
sbb
xor
es
mov
lcall
or
ret
adc
cmpsb
mov
or
jp
ret
js
iret
pop
mov
and
push
cmp
test
xchg
imul
dec
lret
inc
das
test
cmp
int3
push
cmp
clts
sub
mov
cmp
jge
xor
xor
loop
sti
mov
sbb
lcall
inc
jg
out
xchg
js
cmp
pop
add
std
sti
inc
in
jmp
cli
pusha
xor
repz
push
push
pop
cmp
mov
xor
jnp
sub
add
lret
cmp
orb
ss
mov
mov
cmc
call
in
pop
cmpsl
push
out
dec
subb
jecxz
test
test
sbb
iret
mov
jns
lret
sbb
add
xlat
rcrl
xor
or
rcll
dec
arpl
in
xor
mov
adc
pop
pop
or
adc
and
mov
push
stc
xor
lock
mov
pop
pop
aad
sahf
push
jp
lcall
adc
je
aas
sbb
dec
lock
and
add
xchg
dec
rcl
lcall
sbb
and
dec
push
mov
sub
test
insb
add
pusha
out
sbb
jle
add
lods
xor
inc
dec
push
movsb
jo
xchg
pop
dec
add
xchg
xor
adc
jle
jmp
sbb
loopne
xchg
push
xchg
mov
pop
jno
clc
daa
push
pusha
aas
mov
into
cwtl
clc
or
bound
fldenv
or
push
sub
mov
shrb
cmp
xchg
shlb
xor
in
les
sbb
xchg
mov
mov
cltd
das
push
shrb
dec
mov
push
xchg
jmp
data16
sub
ror
xchg
cmpsl
lcall
out
pop
push
daa
xchg
sbb
cmp
mov
insl
mov
cmpsb
sti
je
and
xchg
mov
enter
add
insb
pop
mov
lret
in
call
insb
test
test
test
out
fidivrl
std
addl
aaa
inc
aad
xor
outsl
cld
fsubs
sbb
out
les
jecxz
divb
lods
dec
imul
xor
sbb
push
sub
pop
xchg
or
add
loop
jmp
add
dec
mov
xchg
xchg
push
add
add
mov
movsl
test
xchg
inc
cwtl
lods
scas
outsb
xor
xchg
hlt
push
mov
ret
push
pop
ljmp
je
lea
lahf
mov
jae
sub
bound
loopne
mov
lret
inc
cmpsl
ja
pop
xor
imul
mov
add
das
pop
xchg
sarb
dec
idivl
push
int
in
popf
loope
mov
sub
jmp
cmpsl
mov
cmp
inc
std
xor
lret
sbb
mov
jns
lock
or
pop
mov
in
mov
xchg
clc
in
int3
ret
daa
sarb
gs
subl
xor
repz
add
mov
pop
and
data16
fisubl
subl
xor
and
mov
cmp
jo
push
and
ljmp
daa
dec
sahf
xchg
clc
addb
mov
in
xchg
dec
mov
lods
out
movsl
jnp
je
int
stos
jns
sar
jnp
je
rcrl
sbb
imul
negb
outsl
pop
stc
insl
orb
add
hlt
flds
test
hlt
mov
inc
sbb
aas
pop
fstpt
cmp
mov
pop
inc
fs
aas
call
jle
cmp
or
pop
out
stos
mov
push
es
loopne
aam
int
clc
sbb
bound
imul
test
cmpsl
sub
aaa
push
cmp
arpl
or
out
xor
adc
iret
cmp
and
cltd
sub
jne
imul
mov
sub
mov
adcb
jb
icebp
lds
out
cmp
cli
cs
rorl
fstl
fbstp
or
dec
inc
cld
arpl
jg
mov
push
xor
fwait
lock
pop
movsb
aaa
test
jmp
mov
fs
jno
xchg
sub
jnp
mov
dec
aas
clc
test
mov
and
cmpsb
push
scas
test
stos
gs
pop
inc
jp
sub
fldt
lea
negb
and
js
in
xchg
sub
push
dec
mov
cmpsb
lea
push
xchg
into
adc
out
inc
pop
and
dec
int
xchg
lret
mov
loopne
or
jns
pop
in
pusha
mov
es
xchg
mov
xor
into
outsl
les
inc
enter
push
subl
cmp
push
sarb
out
imul
es
mov
sahf
pop
lods
add
scas
mov
fstl
rcl
nop
pop
mov
push
test
lods
and
stc
push
js
jae
jo
mov
add
aas
inc
fwait
cli
inc
outsl
adc
xchg
jae
pop
dec
fs
das
out
lcall
rcr
push
lcall
les
icebp
add
ret
aaa
jecxz
scas
cmpsb
or
push
stos
loop
xchg
lret
dec
and
pop
pop
cmc
jbe
push
cli
lods
andb
jbe
pop
sub
add
gs
inc
mov
in
or
and
rorb
jmp
push
mov
mov
adcb
lods
aas
inc
cltd
jl
push
lock
jns
xor
or
movsl
jns
mov
sub
and
mov
inc
aas
mov
aad
js
jb
imul
jbe
mov
pop
daa
das
jle
mov
and
jnp
or
and
push
mov
fldenv
repz
in
hlt
ret
clc
dec
mov
jbe
xchg
test
loop
and
xor
mov
bswap
mov
sub
lahf
pusha
cwtl
xchg
cmp
cmpsl
fldl
push
sarb
or
mov
jae
push
push
pop
xchg
sub
fldenv
leave
mov
jae
xchg
js
mov
iret
push
jo
in
adcl
jnp
xchg
lcall
xor
dec
add
inc
dec
cmpsl
dec
pop
xchg
cmp
sbb
mov
jmp
push
scas
shlb
push
pop
sbb
mov
dec
pop
hlt
arpl
dec
inc
xchg
je
mov
imul
fldt
loop
fcomip
jns
outsb
inc
pop
clc
or
les
dec
cmp
inc
lcall
mov
inc
shl
repnz
out
popf
vminss
std
mov
ja
push
adc
mov
jl
in
repnz
movsl
and
call
ss
xor
stc
cmp
nop
scas
je
and
mov
aaa
movsb
xor
push
cmpsb
push
aaa
inc
push
enter
xchg
add
cmc
inc
pop
xchg
loop
push
sub
cmp
pop
shrl
rcrl
fs
push
out
pop
and
inc
out
push
or
bound
xor
cli
jge
xor
sub
movsb
insb
incl
ljmp
sub
adc
push
je
xchg
decw
sub
or
stos
jnp
cmp
shlb
sahf
jle
push
inc
inc
inc
ret
dec
icebp
sti
scas
dec
lea
aad
mov
outsb
mov
loop
inc
enter
and
stc
shrb
lret
cmpl
out
pop
sahf
inc
jmp
int3
pop
jns
clc
rcll
or
jg
cmpsb
mov
jb
xchg
dec
andl
outsl
mov
in
xchg
jecxz
out
mov
shll
fstpl
popa
mov
dec
xor
rcrb
enter
pusha
inc
aad
push
out
insb
repz
mov
mov
loopne
jne
mov
lret
mov
cmp
jnp
sub
insb
jae
les
or
aaa
daa
and
and
insl
sbb
jno
daa
jp
pop
mov
cwtl
xchg
std
jns
push
jg
test
out
rcrl
inc
js
hlt
outsl
stos
cmp
push
lods
sbbb
dec
ljmp
add
mov
mov
jae
mov
popf
outsb
sahf
adc
or
addr16
inc
fsubrl
lret
insb
mov
mov
ljmp
mov
cmp
sahf
outsl
fistps
inc
cld
pop
loope
pusha
sahf
dec
inc
xlat
push
pop
sbb
mov
adc
lea
add
xlat
int3
or
sub
out
dec
xchg
dec
daa
daa
ljmp
inc
and
jge
xlat
loopne
stos
addb
sbb
sahf
repnz
jmp
adc
and
mov
and
inc
fdiv
sub
int3
lods
sub
xchg
sbb
xchg
shlb
in
xchg
pop
jno
xchg
hlt
xchg
inc
push
sbb
aaa
xchg
mov
daa
popf
and
test
xor
sub
leave
dec
mov
jg
fldl
jl
gs
icebp
push
cmp
dec
aam
mov
adc
add
mov
out
push
nop
mov
push
adc
add
xchg
xchg
test
or
mov
shrl
jne
loope
ret
mov
pop
pop
inc
js
nop
push
cltd
add
mov
jmp
pop
sbb
add
mov
push
outsb
es
test
pop
inc
dec
xor
enter
push
push
leave
inc
xchg
or
cmc
pop
fbld
rclb
ljmp
movsb
sahf
inc
pop
mov
push
xchg
mov
xchg
push
cs
repnz
jo
clc
cmp
repz
sbb
mov
sub
cmpsl
xor
adc
push
jo
jns
movl
inc
scas
jno
lahf
cmpsl
fcmovnbe
imul
int
fiaddl
xchg
orl
mov
xchg
push
sbb
jno
xor
mov
jl
cli
out
popl
xchg
xor
stos
ljmp
jae
or
sti
cwtl
add
and
push
mov
adc
xor
adc
out
repz
std
es
cmp
or
shrb
cltd
test
xor
add
mov
shlb
dec
mov
fstpt
int
push
xchg
sets
add
or
fcomp
dec
lahf
outsb
adc
jo
dec
pop
fwait
push
cmp
fstpt
adc
mov
mov
xor
xchg
pslld
or
mov
or
cmp
test
sub
dec
mov
xor
jbe
fdivrl
fistpl
xchg
in
cmp
inc
or
inc
subb
repnz
fidivrs
mov
aad
adc
or
jnp
repz
jbe
addb
leave
fs
xor
icebp
fdiv
sahf
adc
cmc
dec
adc
jle
stc
addr16
ds
push
mov
xor
pop
xchg
fbld
inc
inc
add
jo
ja
dec
dec
or
mov
cmpsb
adc
pop
push
insl
pop
mov
inc
push
or
scas
mov
push
inc
push
push
mov
push
pushf
dec
mov
iret
dec
add
xor
jnp
iret
or
pusha
jmp
xchg
push
mov
lock
mov
push
stos
xor
push
jecxz
rorb
mov
enter
je
movsl
push
inc
mov
and
push
shl
inc
stc
mov
and
in
in
jo
push
mul
pop
nop
push
in
iret
pop
aaa
sub
xorb
jno
pop
icebp
divb
jo
scas
or
add
repz
and
pop
sbb
inc
xor
repz
sbb
or
inc
stc
jbe
cmp
adc
leave
icebp
fcoms
neg
in
push
bound
cwtl
sbb
push
scas
cmpl
rcrb
rcrl
addb
pop
pusha
push
ljmp
sub
jp
pop
stc
xchg
mov
mov
mov
fs
dec
shll
rep
repz
mov
mov
mov
or
test
push
push
out
jnp
dec
fbstp
test
inc
xchg
test
push
out
xchg
adc
push
stos
ljmp
shr
dec
ja
add
dec
push
push
pop
sbb
and
sub
rorl
aas
mov
out
dec
lds
or
fadd
imul
lcall
sbbl
neg
jle
mov
pop
arpl
xor
test
cmp
dec
jb
xchg
lods
push
add
push
jle
cmc
cmp
mov
jp
inc
or
inc
or
or
imul
xorb
les
movl
adc
les
insb
or
mov
mov
mov
enter
sub
ja
pusha
xchg
lret
lret
lods
lret
shll
inc
xor
clc
mov
pop
loop
ljmp
mov
aas
push
movsb
push
xchg
lahf
aas
dec
sub
call
mov
icebp
xchg
inc
ds
xchg
loope
push
out
sbb
loope
ret
adc
jne
sub
or
pop
cwtl
xor
std
arpl
clc
jb
jb
mov
nop
rcl
sbb
push
lahf
sti
pop
int
cli
repnz
jecxz
adc
stos
ss
ljmp
in
sbb
fstl
es
push
mov
xor
popa
lods
sub
es
cs
aas
les
loop
popl
sti
pop
pushf
inc
cmpsl
cmp
push
ja
jge
sbb
mov
cmpsl
jmp
jmp
jb
xor
or
sub
push
mov
out
lcall
insl
and
fsts
movsl
jbe
mov
dec
cwtl
shrb
cmp
jmp
xchg
mov
push
mov
and
scas
insl
insl
test
sbbb
pop
rcrl
jecxz
outsl
cltd
ljmp
mov
cli
sahf
or
lcall
cmp
push
test
out
arpl
jmp
lret
mov
dec
fdivrs
fisttps
sub
inc
stc
movsl
mov
inc
cmp
push
inc
es
fwait
sbb
test
jg
out
and
pop
sub
pop
lahf
mov
mov
cwtl
lods
pushf
xor
jp
popa
test
adc
adc
ja
push
mov
into
insb
addr16
xor
mov
mov
or
xchg
sti
das
stos
pop
push
ds
push
jecxz
mov
cld
cwtl
iret
mov
cltd
movsl
inc
fwait
and
movsl
mov
sbb
enter
loopnew
jmp
adc
xor
ja
jbe
adcb
sbb
pop
pop
and
daa
sub
pop
cmp
lahf
ss
jo
adc
mov
lea
jp
cmpsb
aas
xchg
inc
jp
xchg
imul
dec
lds
leave
sub
mov
lret
andb
add
out
jge
mov
int3
pop
shrl
add
cmc
dec
add
sub
in
loop
mov
cs
outsb
sub
add
out
inc
loop
mov
popa
inc
cli
pop
insl
insl
outsl
cmpsb
sbb
movsl
lds
mov
sarl
into
loopne
in
in
shll
add
popa
ucomiss
dec
repnz
jno
fs
pop
icebp
into
push
and
imul
push
and
jns
movsl
out
xor
lods
mov
andl
xchg
mov
sbb
add
in
and
xor
mov
push
rcl
in
cmp
jb
out
sub
jl
lea
fisubl
pop
pop
dec
dec
into
in
mov
loop
push
mov
push
add
jns
movsb
xor
fs
jae
aaa
sahf
mov
seta
sbb
xlat
lahf
adc
adc
pop
icebp
lods
cmpsl
roll
fmuls
dec
stc
cmp
dec
jecxz
out
inc
xor
out
jbe
xorb
and
mov
roll
push
pop
js
mov
insb
jne
cmp
mov
int3
lds
out
cmpsl
mov
lret
mov
xchg
out
xchg
or
dec
sbb
xor
or
xlat
imul
mov
mov
xor
jle
cmp
aam
push
imul
cld
mov
pop
in
jno
cmpl
leave
pcmpeqb
mov
mov
or
int3
call
or
lods
cmp
ret
jo
jle
adc
push
xlat
addr16
xor
nop
push
xor
mov
mov
test
pop
pop
repnz
stc
cs
pop
dec
loope
jno
mov
stos
adc
stos
push
dec
xchg
and
mov
mov
sbb
jmp
mov
xchg
lods
push
iret
lods
push
sbb
or
or
repnz
call
mov
enter
sbb
es
mov
jbe
cli
aam
jne
jmp
and
and
pop
test
scas
outsl
push
lret
push
jbe
fcomp
add
xchg
std
ljmp
movsb
jno
shr
je
pop
push
mov
jbe
push
lock
mov
sti
push
jb
mov
and
lcall
test
xchg
add
ret
rcrb
pop
pop
cs
xchg
or
mov
rolb
sbb
inc
in
or
mov
shl
sbb
cmp
pop
xchg
flds
andl
xor
cltd
push
fistpl
daa
adc
sub
cwtl
push
push
push
jl
mov
xchg
or
call
scas
xchg
add
lret
jl
pop
cmpsl
inc
push
rcrl
test
das
xchg
add
in
push
nop
add
aad
ret
jne
cld
cmpsl
jno
rol
and
in
and
pop
fldl
cmp
aam
mov
and
and
push
popf
mov
popf
push
ja
test
cmc
adc
cltd
dec
add
popf
test
mov
cmpb
mov
sbb
xchg
or
popf
mov
sbb
scas
push
mov
cmpsb
test
in
sbb
jo
xlat
lock
adc
push
pusha
inc
sarl
push
gs
xchg
pop
add
int3
mov
cld
mov
jmp
lahf
sub
rcrb
jmp
xlat
add
sub
add
jbe
shr
pop
cmp
and
dec
push
mov
mov
jl
mov
lahf
int3
cmp
hlt
xor
and
pop
xchg
xor
xchg
add
push
insb
hlt
ficoml
insb
cmp
pop
push
mov
pop
clc
cmp
pusha
sub
mov
jp
dec
sbb
aaa
xchg
sahf
out
test
iret
xor
negl
adc
cmp
mov
in
fcoml
inc
es
jecxz
jnp
shlb
cmp
fs
mov
sub
andl
pop
shlb
pop
xchg
ret
xor
mov
lahf
orl
popf
mov
dec
addl
xor
dec
in
cld
jl
fnstsw
or
outsb
daa
les
and
hlt
mov
adc
jne
in
cld
xor
mov
insl
xor
jb
aam
cmp
aad
inc
jle
popa
rcl
aaa
insb
dec
pop
lods
es
xchg
daa
mov
xchg
loope
push
orb
xor
in
jns
test
push
jecxz
test
xor
aam
adc
shlb
scas
testb
fcoml
popa
mov
pop
jb
sbb
jmp
jno
xchg
int
pop
push
pop
push
mov
sbb
les
mov
lcall
push
out
adc
inc
test
add
xor
ja
out
aas
jmp
sbb
mov
ss
jne
xchg
or
out
icebp
cmp
into
insb
xor
insb
out
inc
push
jae
fcmovnb
dec
cmp
je
or
and
mov
mov
jno
mov
inc
popa
fwait
and
sbb
idivb
cltd
repnz
add
loope
jg
cwtl
xchg
test
or
lds
xchg
gs
jae
arpl
pop
push
add
stc
pop
push
aam
mov
nop
push
test
enter
outsb
sbb
sti
jl
jns
fdivrp
rcll
iret
fiaddl
jne
pop
xchg
inc
push
push
lret
ret
mov
inc
shl
dec
in
push
jg
xor
test
fildl
mov
or
insb
shll
cs
cmp
cmp
adc
lods
push
aaa
out
insb
pop
add
fidivl
sahf
jb
jle
jl
leave
mov
stos
jne
xchg
push
outsb
mov
pushf
fimuls
into
add
mov
ss
mov
cld
aas
add
in
loop
xor
je
add
fcmove
xchg
ret
or
inc
push
jmp
pop
adc
test
pop
xor
movsl
test
pop
mov
mov
notl
mov
push
lds
or
cli
or
sbb
imul
jp
xchg
je
or
pop
xchg
shll
cs
sbb
cmc
sarl
dec
orl
push
jae
loopne
jns
xor
lret
mov
cmpsb
shll
fsubrl
xchg
loop
out
pop
out
sbb
aad
lds
adc
out
mov
cmp
cs
das
jl
les
cmp
push
dec
mov
dec
rol
mov
arpl
cmp
leave
mov
push
add
lods
cld
insl
and
push
sub
mov
aas
stc
xor
cmpsb
push
push
out
cmp
pop
sub
mov
inc
push
cld
pop
leave
mov
sub
mov
clc
pop
fstp
push
rcll
xchg
lahf
ljmp
fucomp
aad
andb
mov
shlb
sub
lret
jmp
out
jnp
fwait
push
test
fstpl
cmc
jmp
xchg
push
dec
and
andl
jne
jmp
and
int
ljmp
sbb
mov
sbb
data16
mov
out
push
dec
int
mov
addb
inc
jns
mov
imul
movsl
shrb
xor
adc
inc
pusha
xchg
push
les
and
nop
icebp
pop
mov
imul
inc
mov
movsl
sbb
or
in
dec
mov
sbb
lcall
cmpsl
xchg
xchg
dec
push
add
push
in
clc
test
xor
mov
or
cld
xor
leave
outsb
loop
cld
aad
leave
jns
sub
aas
and
xchg
adc
out
dec
pop
cmp
inc
hlt
or
ss
xchg
jecxz
xor
inc
test
movsb
sbb
mov
arpl
fiaddl
mov
jne
jnp
mov
adc
lcall
pop
mov
lods
mov
aad
imul
dec
mov
int3
fadd
jb
jp
mov
mov
adc
gs
fwait
or
int
in
mov
inc
addr16
push
adc
test
pop
clc
popa
stc
pop
outsb
cmc
pusha
cli
dec
pop
rcrl
stos
push
xchg
push
pop
out
pop
lret
addr16
sbb
shll
sahf
test
push
or
mov
movsl
imul
mov
out
repz
sarb
dec
ss
fnstsw
fists
pop
ljmp
xchg
cld
inc
test
mov
in
sbb
aam
test
lods
inc
ret
ror
jge
mov
mov
or
and
and
sbb
xor
mov
xchg
cmp
adc
arpl
fidivs
les
lahf
rolb
xor
pushw
loope
mov
cltd
or
and
inc
bound
lea
push
adc
dec
mov
pushf
xor
mov
in
test
adc
dec
mov
fcoms
or
pop
mov
out
xchg
daa
fisttpl
ret
js
mov
pop
dec
cmp
xchg
stos
outsb
rcll
mov
sbbl
and
sub
xchg
mov
dec
mov
xchg
and
ds
ud0
adc
add
mov
lods
sbb
bound
bound
inc
dec
pop
loopne
clc
in
push
mov
mov
icebp
leave
lcall
std
out
xor
insl
popa
xchg
mov
fbstp
adc
xchg
jl
bound
je
cmpl
push
into
int
mov
aaa
jae
cmp
cmp
in
add
in
sbb
lahf
or
and
scas
and
jmp
pop
or
imul
sub
out
cmp
fimull
cmp
xchg
xchg
aad
mov
das
lock
sbb
out
adc
add
cltd
movsl
popf
lret
pop
jno
insb
cmpsl
push
fdivs
mov
mov
mov
jg
sbb
pop
cmp
orb
test
cld
stos
xchg
push
mov
pop
orb
mov
in
pop
push
jo
js
sub
iret
shrl
icebp
add
pushl
jl
ficoms
sti
cwtl
arpl
je
arpl
mov
addr16
sub
add
xlat
ds
fnstcw
cld
push
jb
push
sub
mov
mov
push
fnstenv
imul
pop
repz
orl
dec
movsb
mov
or
ret
out
ret
sbb
or
cli
or
lds
or
mov
inc
cmpsb
fildl
pop
sub
insl
lods
xor
movsb
or
add
mov
stos
adc
shll
pop
ficomps
test
fwait
iret
fsubl
xchg
fldenv
loope
aas
jle
in
faddl
pop
test
sbb
push
pop
ret
sbb
loopne
inc
out
repz
out
div
loopew
cmp
lret
cs
repz
jbe
push
ljmp
cld
shr
pop
jno
or
flds
inc
iret
pop
jp
dec
mov
sbb
mov
insl
and
adc
adc
mov
daa
inc
jbe
hlt
xchg
popf
loope
aam
enter
dec
mov
sbb
loopne
test
xor
int
int
sub
mov
mov
fistps
add
les
out
pop
data16
stos
push
jl
aaa
outsb
fsubrl
push
mov
out
xchg
fcmove
pop
xor
pusha
sahf
addb
pop
mov
or
enter
push
pop
pop
pop
icebp
les
aas
mov
fwait
out
int
dec
in
push
xor
lods
or
mov
sub
sti
push
pop
cmc
mov
mov
ja
mov
and
xor
and
call
dec
mov
cmp
mov
dec
xchg
or
hlt
or
imul
xor
jmp
test
sub
movsb
sbb
mov
pop
lds
loopne
cmpsb
xor
out
push
addl
push
lea
out
push
sub
mov
add
jns
jnp
xchg
mov
push
xchg
and
pusha
jle
rcll
dec
push
mov
in
mov
jl
cltd
dec
rcr
fsubrl
aas
pop
dec
loop
cmp
xor
sbb
test
dec
add
pusha
xor
or
test
dec
out
stos
jbe,pn
xchg
test
dec
fsts
or
scas
or
push
or
ljmp
mov
jle
and
fdivs
jle
inc
test
or
repz
or
pop
adc
add
push
icebp
in
jns
mov
mov
mov
lods
sar
mov
insb
jb
and
in
pop
fstps
mov
xlat
ss
xor
sbb
mov
dec
or
push
mov
int
inc
pushf
or
or
push
inc
xor
lds
cwtl
xchg
clc
dec
mull
je
punpckhdq
stos
push
xor
inc
push
nop
dec
sub
jne
fnstsw
mov
test
movsb
jecxz
dec
int3
pop
cmpsl
mov
lock
dec
int3
jae
rcll
lcall
cmp
and
pop
scas
ja
add
inc
pop
inc
add
dec
mov
les
outsl
dec
mov
add
push
mov
adc
ja
fs
jle
jmp
jns
jbe
in
pop
lahf
daa
imul
out
mov
push
shrb
jl
or
loopne
or
and
xchg
mov
sti
lock
adc
push
or
dec
pop
xor
pop
cmp
andb
xor
xchg
mov
cmp
loope
pop
out
push
xchg
cli
js
cmp
ret
sub
leave
inc
in
pop
sub
push
aad
ror
push
sarl
cmp
pop
iret
test
and
cmp
out
fdivrl
movsb
mov
out
sub
push
adc
mov
inc
cld
lock
add
push
cmp
lds
inc
xor
sahf
gs
pop
mov
or
fistpl
lea
and
aad
cmp
cmp
dec
xchg
faddl
pop
lret
fwait
inc
ja
lahf
sub
in
jns
call
lock
mov
scas
mov
ljmp
aad
mov
adc
mov
jle
int
xchg
and
add
out
and
mov
cmp
in
jno
movmskps
stos
mov
loop
fiaddl
repz
enter
imul
or
or
pop
repnz
ret
inc
jne
pop
jno
bound
dec
fcmove
mov
decb
in
xchg
iret
dec
xchg
xchg
hlt
push
jbe
push
xchg
jo
in
fbld
inc
pushf
xchg
pop
sbb
push
sbb
mov
arpl
stc
sbb
or
aam
and
pop
adc
pop
je
adc
cmpsl
add
out
aas
push
aam
pop
fs
ja
add
push
cmp
in
sbb
leave
nop
push
in
cmp
bound
or
mov
mov
out
pop
arpl
nop
cmp
movsb
mov
push
mov
loope
xchg
mov
addr16
jne
shlb
pop
ss
mov
pop
push
les
mov
rcrl
mov
rcrb
push
ss
lods
push
cmp
or
xchg
inc
test
adc
add
sub
pop
imul
jmp
or
xchg
jns
insb
sub
cmpsb
hlt
nop
push
pop
xchg
push
stc
test
jns
popa
cmc
loop
sarl
mov
add
xchg
mov
pusha
cmc
push
fmul
inc
rorl
sbb
jl
mov
into
insl
mov
inc
push
jno
jge
out
mov
cmp
pop
inc
sub
jns
cltd
in
push
arpl
cwtl
pop
stc
sbb
sahf
or
sbb
cmpb
and
sub
sbb
es
les
pop
rep
inc
push
mov
push
cmp
xlat
out
mov
mov
sbb
icebp
ss
mov
idivl
hlt
pop
jmp
int3
mov
xor
push
outsb
mov
mov
rcr
repz
call
aad
dec
ljmp
divl
mov
inc
mov
dec
lret
sub
mov
jle
lahf
sub
icebp
not
mov
data16
es
stos
incb
fs
cmpsb
lods
mov
cmp
adc
mov
loopne
mov
push
pop
decb
cmp
sar
or
xchg
in
ds
testb
xchg
loop
jb
push
rcrl
adc
aam
mov
imul
stos
std
jnp
les
cmp
jge
jbe
pop
imul
fcmovb
dec
adc
mov
inc
fs
or
std
in
add
in
jo
cmp
inc
inc
jmp
lds
jmp
js
mov
fldl
icebp
mov
push
jg
jne
stc
clc
mov
sub
adc
jne
sub
dec
inc
cmp
loopne
rcll
notl
add
aas
adc
insb
jp
jo
dec
pop
in
icebp
add
outsb
popa
push
sub
mov
stc
add
repnz
and
stc
mov
out
inc
jns
jle
pushf
fbstp
jecxz
jns
lret
push
xchg
scas
fnstenv
scas
rcrl
les
lret
insb
pop
lret
in
pushf
roll
mov
outsb
aad
sbb
push
mov
lods
dec
xchg
xchg
jge
pop
push
inc
movsl
and
fdivrl
repnz
jle
fisubrs
ja
push
aad
push
int
jnp
push
stos
icebp
jmp
rcr
pop
ja
push
imul
pop
lret
add
mov
mov
pop
inc
dec
mov
movsl
jne
push
insb
or
inc
mov
lret
in
inc
cli
pop
and
jg
add
inc
jp
imulb
xor
rcr
add
call
jbe
sahf
sbb
mov
mov
xor
or
inc
mov
jno
pop
or
lods
pop
insb
bound
push
lock
in
loope
cli
and
inc
inc
dec
sub
xchg
adc
push
enter
rcrl
sub
shl
dec
stos
cmp
dec
add
push
xchg
jno
lcall
pop
add
sar
rorb
jae
enter
adc
push
dec
outsl
push
jg
gs
jp
pop
push
aam
cmc
cmc
mov
clc
add
imul
test
and
sbb
xor
mov
lods
dec
push
pop
divl
shrl
push
mov
mov
iret
lret
mov
test
daa
sub
push
lret
jp
scas
push
push
filds
jb
jns
or
loopne
sbb
stos
or
and
mov
outsl
adc
ret
sbb
sbbl
js
jnp
or
rcll
outsb
xlat
mov
movsb
test
pop
cwtl
js
and
scas
stc
xor
xor
mov
dec
insl
std
pop
ljmp
imul
push
cli
inc
inc
pop
dec
loop
xchg
mov
cs
pop
and
jmp
shlb
daa
lahf
mov
ret
or
repz
mov
sbb
push
test
jne
xchg
cmc
sbb
dec
inc
push
jnp
daa
dec
jle
mov
sar
sbb
jo
jo
ljmp
fisubl
jnp
fistpll
ja
aaa
ret
shlb
movsb
sub
xor
pop
imul
repnz
sub
sub
sub
add
mov
and
add
fimuls
inc
mov
mov
dec
faddl
sub
addr16
or
adc
fcoml
leave
addr16
je
mov
add
mov
out
cltd
mov
mov
bound
and
je
daa
mov
fists
dec
jo
mov
push
aas
add
sti
or
inc
or
pushf
adc
out
loop
sbb
or
push
mov
jg
sti
testl
gs
pop
mov
mov
jl
push
pop
jns
imul
cli
gs
fiaddl
std
add
fdivl
xlat
stos
stos
out
inc
lds
jae
insb
xchg
jbe
fsubp
fdivl
push
pop
popf
sbb
mov
cmp
pushf
int
push
xchg
fistl
pushf
inc
dec
dec
int3
cmp
popf
xchg
hlt
pusha
fisttpll
jne
jl
mov
lahf
xchg
xor
fistpll
pop
jae
jns
aad
out
jae
dec
xchg
mov
dec
or
mull
or
or
scas
mov
jp
push
cmc
dec
and
outsb
pop
xor
jl
mov
mov
push
sbb
mov
cmp
icebp
pop
adc
xor
ja
push
repnz
pop
mov
xchg
pushf
cmp
jno
jo
mov
cmp
andb
lea
dec
shr
dec
std
ds
call
xor
out
xchg
sti
nop
pop
fwait
push
outsl
ret
fisttps
bound
jb
dec
xchg
and
mov
ss
jge
inc
sub
adc
in
xor
fidivrl
add
fld
cmpsb
xchg
sbbb
and
mov
jbe
int3
jb
pop
push
add
out
out
fldl
rolb
fwait
jae
or
cmp
mov
ficoml
outsb
in
fs
pop
jae
sbb
dec
hlt
subl
cwtl
cld
xor
lds
shlb
mov
adc
stos
icebp
rolb
lret
jbe
popa
or
sub
insl
and
adc
jg
pop
pop
sub
aaa
pop
dec
add
pop
repnz
cpuid
sub
adc
incl
repz
jecxz
push
fs
xor
mov
loopne
adc
lock
lods
cmp
or
cmpl
xchg
outsb
es
scas
xchg
imul
clc
enter
data16
jle
mov
sarb
pop
or
js
mov
in
dec
inc
shll
xchg
add
in
mov
ficoml
das
cli
rcll
mov
das
lea
dec
test
mov
push
pop
lods
lret
xor
add
pop
push
dec
lcall
mov
mov
inc
ja
dec
je
jecxz
cmc
or
andl
inc
fistl
cmp
mov
daa
xchg
fs
pop
sub
out
jge
std
push
xor
in
mov
or
aaa
mov
xchg
jne
xchg
add
xchg
mov
in
xchg
xlat
in
dec
enter
sub
pop
mov
xchg
ret
dec
arpl
jle
pop
mov
dec
sub
fldlg2
push
dec
xchg
ret
push
cmc
push
rolb
fldenv
mov
outsl
jo
outsl
mov
bound
mov
ret
dec
sbb
shl
dec
push
and
cmp
dec
add
dec
dec
jo
insb
cwtl
pushl
push
fcom
dec
xor
adc
or
in
xchg
repz
stc
daa
xor
dec
cmp
in
lea
or
sbb
gs
stos
xchg
jmp
adc
mov
out
insb
gs
out
ret
nop
lock
add
pop
lods
jne
fs
jno
jecxz
outsb
and
push
inc
jp
sub
ret
divl
shlb
imul
lret
inc
xchg
pop
pop
dec
jg
ret
dec
lret
in
xor
dec
sub
and
cmp
ja
ljmp
push
js
mov
cmp
inc
in
and
inc
int3
jnp
xchg
cmpb
xor
popa
out
mov
pop
dec
clc
xchg
adc
test
xlat
mov
jmp
out
shlb
fidivs
jne
pop
out
nop
dec
loopne
pushl
adc
pop
rol
sub
inc
cmc
sbb
mov
cmp
sub
jo
fsubs
push
ss
adc
lcall
xor
insb
adc
cltd
pop
outsb
lock
cmp
mov
add
sub
or
iret
das
mov
sub
dec
sbb
aaa
subb
adc
jge
jnp
inc
sub
jo
ss
in
xchg
data16
das
cmpsl
pop
inc
push
test
popf
int3
loopne
mov
jns
in
mov
dec
mov
cmp
pushf
fnstenv
dec
popf
xchg
mov
adc
cltd
xchg
jle
mov
xor
cmp
mov
dec
or
xor
insb
leave
xor
jbe
dec
mov
mov
pusha
adc
test
xor
mov
mov
jae
and
dec
in
imul
add
lea
sub
mov
add
jl
fwait
cmpsb
push
gs
or
mov
movsb
inc
sub
stc
jbe
or
xchg
ss
pushf
stc
add
jmp
inc
jecxz
das
mov
addr16
js
pop
adc
adc
xchg
mov
pop
push
call
dec
jle
mov
hlt
in
negl
adc
out
sahf
in
les
jecxz
sbb
pop
fucom
clc
fisttpll
hlt
mov
outsb
scas
stos
testl
adc
pop
rol
push
push
adc
jmp
stos
jge
mov
dec
mov
pop
and
aad
or
movb
xor
lcall
lret
loop
pop
fdivrs
cmpsb
cli
or
ret
jp
mov
test
or
movsb
sub
iret
and
shll
xor
insl
jae
popf
mov
sti
add
dec
jne
xchg
add
push
cld
jge
ret
mov
aam
clc
movsb
lret
xor
sbb
es
mov
insb
bswap
popa
adc
xchg
fisubrs
fsubl
cwtl
adc
scas
addr16
push
add
and
add
loop
leave
inc
add
add
mov
iret
or
fimull
adc
shlb
ret
scas
xor
das
jg
ret
mov
jbe
sti
dec
xchg
sbbb
stc
mov
clc
pop
jle
or
insb
inc
repnz
cmpsb
adc
and
mov
clc
cltd
mov
mov
mov
mov
pop
sub
xor
inc
arpl
pop
xor
subb
int
push
jl
push
xor
or
push
cmp
cwtl
cmpsb
lret
in
add
daa
xchg
ret
cmp
jo
inc
cmpsb
push
rcrl
sub
ja
mov
cmp
bound
cld
in
mov
cmpsl
pop
xchg
dec
push
mov
jge
mov
pusha
fs
loope
jecxz
xor
sahf
cmpsb
mov
push
jge
sahf
mov
xchg
loop
adc
xchg
jnp
ret
sti
mov
mov
cltd
cmc
inc
adc
or
inc
dec
mov
push
jl
out
cmp
rcrl
scas
jge
inc
push
mov
xchg
jno
repz
les
test
rcll
dec
xchg
jns
jle
mov
int3
call
in
arpl
mov
ds
mov
push
mov
push
jae
mov
push
inc
dec
dec
push
idiv
mov
xor
les
fidivrl
out
stc
dec
or
or
and
loopne
gs
repz
aaa
lret
mov
inc
pop
fisubs
fs
dec
mov
mov
xchg
sbb
add
xor
push
adc
addr16
mov
jbe
test
shll
mov
pop
ja
aam
and
ret
fdecstp
test
mov
lds
xor
loope
mov
nop
pop
aas
push
and
cwtl
sbb
jo
xor
fbstp
iret
and
sub
sbb
fistpl
pop
in
mov
inc
rcrl
movb
xor
out
xlat
ret
lock
xorw
pop
leave
mov
testl
cltd
ret
mov
add
dec
cmp
and
outsb
sub
divl
inc
mov
arpl
ret
repz
in
cs
xchg
shlb
mov
mov
sub
int
adc
scas
into
jns
mov
ret
repnz
fs
icebp
cs
sbb
clc
pop
cmpb
pop
jg
mov
lcall
mov
jno
fists
mov
lea
in
mov
pop
cmp
pop
movsl
push
enter
rclb
inc
sbb
xor
scas
lods
gs
pop
pop
data16
or
adc
addl
sbb
in
or
pushf
xadd
ss
inc
mov
outsb
fwait
pop
movsb
dec
ja
mov
jp
push
mov
mov
adc
and
inc
les
xchg
xchg
int
repnz
cmpsl
shlb
cmp
shlb
unpckhps
jne
xor
rolb
mov
dec
mov
lahf
subl
test
jmp
add
sub
jno
js
sub
pop
pop
sub
mov
test
cmp
cld
cmovno
sub
xchg
cli
scas
scas
shrb
pop
insb
jae
sti
xchg
jnp
jbe
lss
cltd
inc
loopne
jle
das
jl
fisubrl
rcrl
adc
imul
outsl
dec
dec
lods
mov
test
sbb
push
mov
imul
jp
jmp
ljmp
fistpll
rorl
nop
data16
mov
cmp
xchg
mov
lods
out
int3
and
fisttps
fwait
test
and
ss
pop
jb
bound
add
aam
shlb
sub
jbe
or
inc
into
mov
dec
jbe
gs
dec
xor
inc
rorl
adcl
sbb
mov
out
push
repz
jb
xlat
push
adc
sbb
add
inc
push
adc
push
hlt
lods
sahf
movsb
adc
jecxz
pushf
push
stos
and
popf
cmpsb
int3
or
arpl
inc
mov
or
add
test
movsl
xchg
lea
lret
nop
cmc
inc
or
testl
mov
nop
daa
jge
pop
xor
pushf
test
add
xlat
xor
push
fwait
ror
repz
xlat
daa
mov
divl
test
js
insb
movsl
jno
mov
pop
add
ds
push
out
rcll
out
in
pop
xor
mov
and
adc
int
je
dec
sbb
mov
roll
push
or
sti
dec
sbb
dec
scas
mov
cmpsb
jecxz
jge
mov
xchg
adc
enter
push
in
mov
addl
es
dec
sbb
push
ror
and
rorl
mov
fisttps
xchg
push
popa
fcomp
xchg
pop
data16
outsl
mov
cmpsb
pop
sub
xchg
dec
mov
add
dec
call
push
insl
add
jp
mov
test
lods
fdivs
idivl
sub
out
mov
add
pop
add
test
int3
xor
cli
psubb
inc
les
or
dec
bound
mov
add
insb
jmp
add
shll
popa
or
lock
sub
scas
mov
imul
jbe
ficomps
inc
lea
fidivrs
aaa
and
sbb
add
mov
jns
pop
ljmp
jno
sub
push
test
xor
jl
in
scas
cld
testl
sahf
ret
xor
mov
scas
cmpsl
ret
int3
inc
push
add
js
dec
mov
jns
xor
jns
adc
jo
mov
sbb
repz
sbb
xchg
sub
shlb
pop
imul
jo
mov
jne
dec
inc
sbb
mov
jge
lret
inc
cmp
icebp
or
jle
cld
test
jmp
add
inc
cmp
shlb
or
jns
fadds
cltd
jmp
fcos
sub
outsb
inc
loope
lods
dec
rolb
mov
inc
popf
fwait
mov
push
gs
mov
imul
jl
ds
add
stos
fsts
and
test
xchg
jbe
rclb
movsb
or
add
sbb
movsb
push
mov
push
out
sub
lods
push
xchg
push
mov
sti
hlt
xor
aas
and
push
cvtps2pd
lea
cmp
mov
push
subl
sbb
mov
jecxz
pusha
jae
push
cld
push
fcmovbe
lret
in
mov
mov
divb
rcrl
int
lods
lret
jge
cwtl
sub
movsl
dec
mov
and
cmpsl
xor
test
mov
les
test
jo
cmpsl
push
xchg
in
shlb
mov
out
and
pop
mov
xchg
add
dec
daa
orb
lahf
push
inc
roll
lods
daa
inc
out
fs
dec
xchg
cltd
add
add
mov
cmp
in
xor
mov
add
gs
mov
scas
stc
out
xor
movsl
jl
daa
pop
push
scas
das
or
mov
sbb
dec
dec
mov
loop
nop
jmp
inc
lcall
mov
daa
mov
pop
cmp
xchg
fdivr
dec
cld
cmp
pop
or
mov
mov
stos
insb
jge
xchg
or
jno
lret
inc
dec
push
sub
sbb
and
scas
or
or
fcoms
mov
xchg
xor
sub
les
scas
mov
cmp
lea
mov
loop
and
inc
xor
jae
push
jp
std
pop
xor
or
jp
movsb
insb
mov
neg
std
mov
hlt
repnz
int3
mov
enter
sub
adc
or
popf
mov
mov
jne
xchg
push
cmp
xor
xor
push
stos
add
mov
addb
mov
aad
int
inc
xor
jmp
cmpsl
testb
nop
jo
or
push
divb
ja
inc
dec
mov
push
movsl
dec
mov
mov
cmp
mov
cmp
fistps
stc
fildll
popfw
gs
out
fcmovbe
inc
inc
cmpsl
shr
out
popa
push
pop
std
dec
aam
nop
inc
sbb
adc
out
add
xchg
lods
rorb
push
jecxz
dec
out
pop
ret
ja
subb
mov
sarl
mov
push
cs
fistpl
pop
icebp
aaa
or
dec
push
mov
divb
push
fnstenv
adc
cmp
jp
sub
std
or
cmp
or
xor
inc
mov
or
das
sub
iret
jae
push
xchg
js
sub
stc
iret
mov
popa
int3
orl
rclb
adc
push
jecxz
cmpsb
hlt
push
imul
ljmp
hlt
aas
test
repz
cmp
sbb
xchg
add
and
jae
dec
movsb
fs
cmp
dec
xchg
in
icebp
cwtl
sahf
call
loopne
fnclex
push
add
pop
inc
pop
pop
mov
adc
xchg
fadds
shrl
gs
sbb
sarl
and
negb
in
cmp
xor
and
push
pop
bnd
jl
test
xchg
xchg
xchg
cmc
loope
mov
sahf
mov
fimuls
sub
sbb
call
lcall
jecxz
outsb
cld
mov
bound
xchg
or
dec
push
mov
push
aaa
pop
ja
sub
and
in
jecxz,pn
and
scas
orl
adc
sahf
int
sbb
add
movsl
stos
xchg
sub
mov
dec
cmp
hlt
mov
jg
jne
into
mov
mov
call
jbe,pt
push
subb
data16
jns
xchg
dec
and
lods
sub
rcrb
mov
iret
jne
and
fwait
scas
mov
mov
dec
pop
sub
out
or
push
mov
adc
cmp
dec
inc
test
push
inc
push
mov
or
sub
mov
add
imul
bound
inc
bound
movsl
inc
sti
sti
fimull
xchg
rclb
add
fdivrp
fidivrs
jmp
xchg
add
cltd
mov
cmpsl
out
push
xchg
cs
jl
xlat
daa
xchg
ficomps
and
cwtl
xchg
ljmpw
adc
sarb
and
mov
and
and
sbb
pop
jg
xor
jno
xchg
test
clc
pop
repz
rcrb
inc
sbb
or
cmp
sbb
stos
mov
rcl
dec
shll
sub
pop
loop
xor
dec
jnp
mov
hlt
sbb
dec
lds
cltd
and
push
fisubrl
orb
out
jecxz
push
inc
pop
dec
xor
or
push
mov
cli
mov
sub
insl
inc
add
movsb
sbb
or
stc
popa
push
push
das
arpl
push
movsb
ds
ss
addr16
lods
aaa
dec
add
or
lahf
test
and
jbe
xor
sbb
and
cmovl
jne
arpl
aas
jp
cmp
icebp
roll
pop
aad
jnp
xchg
shll
mov
fidivrs
cwtl
in
fxch
cmpb
cmpsb
inc
xor
incl
jb
cwtl
push
rcrb
rorb
mov
cmc
dec
xchg
call
iret
jl
sub
push
out
adc
frstor
pushf
mov
push
xchg
lock
add
or
repz
or
mov
clc
imul
pop
adc
les
into
sbb
fbstp
xchg
test
stos
fnop
sbb
repz
push
data16
movsl
scas
cwtl
cmpsb
mov
xchg
cld
or
add
or
movsb
fisubs
xchg
mov
xor
jp
mov
push
loope
jp
aad
mov
jge
dec
popf
cmp
call
sbb
xchg
pop
repz
cmp
roll
cmp
xchg
pop
and
fs
cmpsb
negl
mov
divl
mov
mov
and
jbe
mov
and
jae
or
jae
sbb
sbb
int3
push
push
mov
adc
sahf
jecxz
push
push
outsb
rcl
data16
lds
push
ljmp
jbe
sbb
fimull
dec
inc
adcb
sti
stos
je
pop
fisubrl
mov
das
and
cltd
cmc
and
lods
mov
icebp
jmp
inc
leave
cmp
sub
push
xchg
ds
cmp
mov
push
das
mov
mov
fisttpll
fldenv
mov
xchg
gs
inc
xor
cmpl
out
pop
mov
mov
lods
lods
lret
push
dec
loopne
fwait
outsb
sub
dec
stc
cmc
cwtl
daa
cmp
push
xchg
mov
cmpsb
dec
test
pusha
test
cmp
mov
inc
leave
adc
imul
jecxz
filds
int3
jbe
cmpl
lret
mov
dec
rcll
push
xor
sbb
mov
sub
test
sbb
add
mov
out
icebp
mov
dec
cld
adc
mov
loope
push
mov
pop
dec
inc
inc
pop
fwait
test
pop
sub
pop
inc
mov
out
mov
sub
ror
pop
fcoms
jns
in
cli
push
incb
push
mov
adc
mov
inc
getsec
mov
jge
mov
mov
xchg
scas
sbb
add
pop
aas
xor
mov
enter
or
adc
jo
sub
cmp
sti
imul
and
inc
inc
js
stos
sub
loope
aam
int3
or
jne
dec
inc
pop
ljmp
jge
mov
dec
out
dec
sub
xchg
or
jbe,pn
sub
ds
fidivrs
adc
jg
mov
mov
pop
stc
dec
dec
test
xchg
enter
add
pop
jo
icebp
mov
push
push
jnp
test
fadds
shl
mov
lods
adc
xchg
fwait
add
sbb
dec
inc
stos
in
fcmovbe
fisubrl
cmp
inc
jl
inc
stc
dec
push
sub
sbb
xchg
xchg
adc
jbe
dec
in
sub
xor
stc
stos
inc
int3
sub
mov
inc
adc
repnz
or
jg
incl
sub
push
and
mov
or
push
or
fwait
or
shrb
and
std
andb
mov
popf
xor
sahf
pop
xor
iret
out
in
pushw
aad
cmp
mov
xchg
sahf
xchg
lret
test
sarl
pop
mov
movsb
cli
push
fidivs
mov
jnp
and
inc
cwtl
xlat
sti
and
mov
test
inc
jmp
dec
cmpsl
jle
pop
sbb
mov
mov
add
dec
pop
sbb
mov
popa
dec
sub
outsl
mov
and
ret
push
subb
push
out
mov
cld
leave
lea
mov
push
call
jb
aad
cmpsl
notl
negb
rclb
cmp
sbb
push
in
push
test
adc
cmp
aad
sbb
push
jecxz
gs
mov
pop
lret
movsb
pop
sbb
in
fucom
aad
cli
out
scas
sbb
xchg
cmp
gs
pop
mov
inc
fstl
add
lcall
repnz
sbb
call
mov
adc
daa
mov
dec
adc
lcall
fistps
jmp
scas
inc
lcall
adc
pop
dec
xor
popf
adc
aaa
jmp
pusha
jp
add
push
outsb
sub
cmc
imul
xchg
inc
adc
test
mov
inc
pop
repnz
mov
xchg
and
xor
repnz
mov
and
dec
lcall
cmc
mov
mov
add
jae
push
vpunpcklbw
xchg
pop
nop
loop
mov
out
dec
mov
loope
insb
repnz
add
sub
imul
mov
cmp
inc
xacquire
adc
mov
xor
and
arpl
incl
les
xchg
addb
test
in
mov
mov
fstpl
jge
and
xchg
xchg
mov
and
pop
xor
jl
lcall
cmp
lock
xchg
outsb
mov
jno
push
aas
lods
sub
inc
xor
mov
or
out
add
fiaddl
mull
into
vmread
add
ss
adc
sub
adc
imul
mov
cmp
inc
scas
movsb
push
repz
sub
lret
jecxz
iret
fldcw
fnsave
addr16
add
dec
popf
iret
insb
jnp
dec
stos
xor
jo
push
ret
mov
dec
lahf
mov
jp
add
call
adc
xchg
out
xchg
ds
or
cmc
inc
in
inc
cmpsl
in
lret
pop
ret
repz
mov
outsb
movsb
jns
into
cmpsl
stc
xor
das
cmpsb
jbe,pt
sbb
mov
fsubrs
jne
xor
push
sub
fists
push
and
dec
and
out
enter
sub
adc
mov
fldenv
jns
xchg
sbb
adc
and
sbb
push
inc
loop
daa
push
mov
xchg
sub
sub
xor
cld
cmp
lea
mov
mov
popf
or
insb
dec
mov
push
aas
adc
add
jne
pop
cmpsb
xlat
lret
insl
scas
add
mov
mov
xchg
unpckhps
arpl
sbb
mov
push
inc
jp
hlt
pop
jnp
dec
sub
dec
pop
pushf
cwtl
jmp
ljmp
xchg
leave
aam
das
jae
jecxz
jo
mov
test
popf
push
mov
lahf
pusha
jb
rclb
mov
sti
rclb
into
push
mov
sub
loop
jne
shl
xchg
xor
mov
movsl
pop
jnp
inc
ss
push
adc
mov
adcb
jl
sbb
mov
js
fidivrl
push
sub
fbld
push
mov
dec
jmp
out
sbb
fildll
cwtl
sbb
cltd
pop
ret
cmpsb
mov
xorb
pop
stos
pop
push
inc
shlb
inc
dec
jnp
and
je
mov
cli
jge
push
mov
mov
andl
mov
roll
fnsave
pop
repz
cmp
mov
nop
push
pop
es
mov
int3
mov
pop
sahf
sbb
into
enter
sub
arpl
push
enter
cmc
inc
xchg
clc
ret
push
negl
mov
push
inc
test
jge
xor
loopne
cwtl
ror
mov
inc
pop
inc
cld
lea
dec
push
pop
cmovl
xchg
add
fidivrl
mov
mov
hlt
mov
sbb
inc
into
dec
decl
lock
xchg
fidivrl
aaa
inc
jbe
inc
or
xchg
fmuls
cmp
jns
or
rorb
cmp
sbb
icebp
sahf
fsubrs
xchg
sub
lea
testl
mov
mov
in
insl
jnp
sbb
sbb
aad
cmp
in
inc
jae
ja
xor
cmp
xor
in
push
fisubs
arpl
inc
out
mull
jne
bts
sub
and
lds
bts
hlt
xchg
mov
mov
cmp
fnstcw
ja
insl
jb
xor
imul
gs
cmpsl
gs
call
jmp
shlb
push
mov
in
mov
arpl
xor
ds
add
sbbb
cmp
movsb
sub
je
inc
xor
mov
mov
cmpsb
lret
out
push
aad
pop
popf
ficomps
mov
ror
loop
or
cmp
inc
push
add
outsb
lret
clc
or
cs
scas
popa
and
daa
mov
addr16
and
adc
imul
les
xlat
jne
loop
sbb
dec
mov
pop
pop
testb
pop
mov
mov
jle
cs
ljmp
call
aad
mov
xchg
dec
sbb
push
push
lods
mov
cmp
dec
mov
jecxz
fwait
cwtl
pop
jns
test
xchg
lea
aas
in
push
nop
fisubl
xchg
cs
ljmp
mov
inc
mov
xchg
xor
sub
push
sub
sub
arpl
imul
in
and
lods
das
cmc
rorl
int3
push
loop
push
dec
and
mov
pop
testl
pop
pop
xchg
cmp
mov
push
bound
sbb
cmp
fbstp
gs
and
aas
inc
xor
jns
sbb
std
ss
sbb
dec
add
adc
test
push
stc
mov
enter
jne
pusha
into
mov
stc
xlat
or
jge
xchg
imul
push
insl
pop
int3
imul
out
insb
cld
jae
mov
sti
push
xchg
imul
mov
pop
add
xchg
or
and
in
fwait
shr
sahf
add
xchg
sbb
mov
lret
mov
mov
bound
dec
jl
pop
mov
push
mov
dec
mov
lods
jp
into
xor
lcall
mov
lcall
cmp
cmp
clc
mov
movsl
adc
xchg
jle
pop
shlb
out
addb
add
inc
les
loopne
insb
fisubl
lret
ret
pop
mov
scas
cmp
cmpsb
jl
jne
aad
xchg
sub
pop
sub
or
cmp
shl
sbb
fs
push
jo
aas
sbb
ficoms
cmpb
mov
aad
jl
pop
jmp
clc
adc
shlb
cvtpi2ps
adc
repnz
pop
mov
mov
mov
jnp
sbb
test
inc
ror
seto
gs
lcall
mov
push
inc
and
insl
loope
xchg
es
and
mov
mov
lret
shlb
mov
xor
or
inc
cmc
test
jae
fiadds
add
cld
pop
scas
std
divb
and
mov
fcoms
pop
aas
xchg
adcb
push
fstps
xchg
shl
sti
movsb
and
xchg
adc
and
aaa
jne
jl
stos
inc
insl
stos
clc
insl
sbb
dec
or
or
push
or
fimuls
arpl
les
rorb
stc
popa
push
stos
fwait
es
sbb
xchg
outsb
daa
jns
and
mov
mov
fistpl
pop
es
xchg
jb
f2xm1
loope
repz
xor
cwtl
mov
sbb
pop
adc
push
divb
xchg
mov
push
repz
sbb
das
sbb
mov
mov
sbb
aas
cmp
sbb
or
dec
jae
js
xchg
hlt
push
xchg
int3
stos
pushl
stc
divb
push
fistps
push
popf
inc
cs
cs
out
pop
add
std
aam
push
xchg
xlat
inc
loope
lret
std
mov
leave
shl
repz
out
adc
jge
shll
in
cmp
cli
inc
lods
cmp
fldenv
and
sbb
in
mov
jge
in
adc
hlt
adc
xor
adc
or
adc
fldcw
adc
jmp
xor
vpsrlw
push
out
mov
or
pop
dec
dec
push
and
aaa
mov
movb
mov
and
jbe
or
xchg
fcomi
or
fdivr
subb
shrb
sub
xchg
or
mov
imul
push
push
inc
aas
int
cmp
sahf
and
push
or
loopne
pop
mov
clc
ja
fiaddl
dec
add
lret
cli
push
and
pop
popf
addr16
arpl
push
push
out
andl
stos
inc
sbb
sahf
int3
and
cmp
dec
cmp
mov
add
sbb
cs
call
add
cmp
sub
pusha
mov
icebp
push
add
cmp
out
mov
int3
cmp
push
mov
xlat
xor
jb
mov
pop
push
ret
loope
jg
aad
lods
incb
outsl
data16
push
xchg
adc
shlb
xor
shlb
or
jg
hlt
test
lret
sbb
testb
or
sbb
out
decb
jmp
inc
lahf
das
rcrb
cmc
pop
sarl
inc
andw
cwtl
adcl
enter
xchg
addr16
jno
out
js
push
cli
rolb
js
jno
xchg
mov
fs
mov
jae
dec
pop
int
jg
call
cmp
aaa
or
shll
mov
cmp
andl
push
imul
xchg
mov
push
ret
sahf
outsb
test
repnz
loope
rcl
inc
sub
cmp
rcrl
pop
enter
or
je
xor
inc
mov
dec
lock
push
int
mov
sahf
push
rcr
and
pop
enter
cmp
fmull
jl
inc
dec
and
adc
gs
xchg
add
pop
sub
xchg
iret
fsub
dec
in
outsl
or
mov
aaa
imul
add
insb
mov
add
in
add
data16
sbb
ds
inc
mov
and
xchg
sbb
gs
or
jle
into
addr16
cmp
cmc
js
pop
sahf
adc
and
jno
sti
mov
scas
add
es
add
adc
in
repz
mov
jg
shlb
hlt
add
lock
xorl
jns
sub
inc
or
lods
int
jns
add
arpl
mov
mov
lret
or
sbb
loope
pop
testl
outsl
lret
mov
add
cmp
scas
jns
lods
fstpt
pop
stos
mov
fs
mov
push
jecxz
fldcw
add
mov
sbb
or
out
sbb
in
jle
jmp
dec
testl
lahf
lods
in
lods
lcall
jae
cmp
push
mov
dec
add
les
aam
and
js
ljmp
jb
hlt
in
leave
cmp
xor
cmpsb
jmp
fidivs
cld
loope
push
ret
in
pop
xchg
push
and
aam
mov
call
jg
cmp
subl
fdivl
jl
mov
rorb
cmp
imul
adc
jns
sbb
popa
fbld
int3
loopne
mov
imul
adc
jg
sbb
in
pop
mov
rolb
addr16
xchg
ret
fsubrs
fs
popa
insb
ja
mov
sahf
jbe
jns
cmp
bound
shrb
idiv
mov
repz
cld
sbb
ret
mov
dec
inc
pop
insl
sub
aam
adc
mov
or
dec
and
inc
push
out
or
pop
fdivs
mov
fimull
mov
xchg
int3
cs
lcall
xor
or
int
dec
mov
sbb
mov
rclb
cmp
fistps
aaa
pop
xchg
mov
dec
xchg
jl
mov
adc
fucomp
mov
lahf
stos
pop
fwait
adc
cmc
sbb
jle
aaa
enter
cmp
mov
pushf
gs
repz
dec
and
mov
ss
aas
push
mov
ds
mov
je
in
push
xchg
insl
xchg
shrl
pop
mov
jno
mov
mov
ss
jmp
mov
shll
sub
xor
xchg
or
push
jae
adc
ja
loopne
ror
sub
dec
aam
mov
jns
in
sbb
mov
lcall
cmp
out
mov
leave
iret
pop
scas
mov
mov
outsl
lcall
pop
mov
cmp
cmc
or
out
es
cli
add
sub
inc
loop
add
xor
sbb
das
mov
hlt
xchg
dec
jmp
sbb
mov
inc
inc
and
gs
movsl
out
ss
es
dec
inc
sbb
cmp
mov
dec
sbb
cld
fwait
sbb
inc
and
in
cmpl
mov
xchg
add
mov
add
les
ficomps
fwait
out
dec
and
sahf
ret
cwtl
mov
lods
js
in
sbb
push
cmp
inc
or
fisubrl
jl
shlb
rclb
jge
mov
bound
cmp
in
test
adc
inc
frstor
pop
int3
jo
outsb
pop
mov
sar
xchg
leave
dec
lods
cwtl
addr16
cli
insl
test
xchg
cmpb
repnz
orb
call
arpl
sub
xchg
insb
inc
jbe
ljmp
pop
or
arpl
cs
push
pushf
imulb
mov
push
mov
and
or
push
jne
stos
mov
push
test
mov
inc
rcrl
adcl
adc
pop
add
in
jnp
push
clc
mov
inc
xor
mov
sbb
stc
adc
out
std
and
jne
and
repz
movsl
pusha
subb
test
push
in
jl
push
xchg
xchg
push
icebp
in
sbbl
pop
and
push
mov
or
xchg
and
in
stc
cmc
add
jmp
out
xor
mov
adc
xchg
sbb
movsl
or
xchg
pop
cmpsl
mov
int3
xlat
movsb
sbb
adc
icebp
pop
rcrb
cwtl
push
dec
in
outsl
es
outsl
fisttps
mov
and
mov
mov
push
pop
fidivrl
xchg
incl
adc
inc
dec
js
popf
popa
cmp
mov
and
in
lret
cmp
mov
scas
cs
mov
dec
fsubrp
pop
nop
jae
movsl
pop
push
inc
push
xor
jg
notb
std
mov
loop
sti
xchg
stc
add
and
push
xor
in
push
test
jne
inc
or
ljmp
ret
mov
push
mov
ljmp
add
sbb
push
mov
jo
pop
icebp
dec
outsb
cmp
mov
dec
inc
insb
inc
mov
add
and
aaa
sub
jl
adc
repz
lea
je
pop
sub
dec
mov
bound
sarb
mov
repz
mov
sti
jp
jge
push
icebp
cmpsb
repnz
fildl
testl
push
aad
pop
mov
jle
testl
dec
add
fmuls
and
inc
jns
stc
loop
int
xchg
notb
push
stos
sub
icebp
push
imul
jnp
xor
repz
cmp
scas
and
push
dec
cltd
enter
fdivrp
test
inc
mov
hlt
mov
fs
jae
or
stc
sbb
lret
scas
mov
addr16
pop
data16
lahf
sbb
jl
and
out
pop
cmp
and
loope
pop
dec
adc
push
mov
add
push
cmpb
inc
pop
push
dec
fisubrs
push
push
lea
flds
ret
imul
inc
rorl
sbbb
push
sbb
rorl
adc
sbbb
cmp
xchg
pop
sbb
rorl
inc
adc
push
add
mov
inc
lret
mov
shl
push
mov
int
jnp
aam
mov
fsubr
push
sub
dec
fadds
adc
clc
sar
jnp
gs
movsb
inc
mov
add
xorl
std
dec
xor
xor
mov
addr16
adc
mov
arpl
jge,pn
mov
idivl
jns
mov
ret
cmpsl
cs
mov
xor
push
into
cmp
and
scas
xchg
out
hlt
sub
jmp
cmpl
or
sti
mov
xchg
pcmpeqb
mov
mov
and
lcall
ljmp
das
cld
or
je
dec
mov
addb
mov
sub
rclb
mov
mov
insl
movsl
das
push
hlt
orb
push
xor
fwait
add
push
jmp
rclb
imul
test
push
dec
sub
mov
and
imul
adc
and
outsb
pop
addl
imul
push
or
jp
mov
icebp
add
stos
inc
in
aas
sub
xchg
xor
mov
loopne
pusha
cmp
sbb
lea
ja
test
xchg
mov
push
push
mov
daa
lds
notl
outsl
daa
dec
inc
fildll
add
push
sub
flds
and
aad
mov
insl
mov
xor
lds
clc
and
pop
jmp
out
in
or
dec
ret
cli
mov
cmp
jo
scas
mov
insb
in
mov
inc
ficompl
sub
pop
iret
sub
addr16
scas
sbb
xchg
fimuls
enter
fdiv
xchg
jbe
mov
inc
hlt
out
or
cmc
dec
mov
shrb
sbb
rcrl
cmp
pop
add
call
in
sub
jecxz
cmp
das
popa
cmp
stos
push
xchg
xchg
or
sbb
repnz
loop
xchg
ss
nop
mov
sub
aaa
adc
movsl
jg
jo
fistpl
cmp
dec
popl
pop
das
fimull
mov
sub
out
or
mov
xchg
aam
insb
jo
lcall
cmp
mov
xor
fstl
jb
fistps
jns
aam
scas
pop
stc
in
inc
mov
fistl
push
jo
or
dec
dec
je
movsb
dec
orl
pop
fcomps
push
call
cmpsb
and
movsl
js
jbe
in
scas
add
test
jge
dec
dec
int3
pop
or
out
outsb
push
adc
clc
sub
inc
dec
push
lds
icebp
mov
adc
fwait
inc
out
pop
insb
xchg
cmp
jle
push
xor
sub
cli
sti
sbb
enter
pop
adc
pop
pop
inc
mov
gs
add
pop
xchg
push
stos
and
lahf
dec
push
push
xchg
inc
lock
mov
fdivl
cltd
lahf
cmpl
les
hlt
iret
mov
dec
sbb
cmpsb
xchg
dec
or
scas
adc
inc
rcrl
stos
cmp
fwait
dec
and
in
cmp
or
popl
xchg
lock
sub
fstl
cmpsb
sbb
andb
mov
pop
negl
dec
popa
xchg
inc
and
notl
in
fisubl
stos
sbb
sahf
xchg
push
cmp
cmp
push
or
xor
ss
outsb
fdivl
and
dec
ds
push
xchg
cmp
dec
movsb
scas
pop
cmc
inc
pop
adc
mov
lock
dec
enter
andb
lds
sub
aaa
xchg
test
je
jnp
xor
add
repz
fbld
inc
adc
pop
mov
test
sbb
and
test
and
xor
mov
fsts
xor
or
xchg
test
dec
jne
or
or
fsts
sbb
lods
hlt
aam
push
fisttpll
leave
xchg
mov
adcl
lea
mov
repnz
inc
sbb
and
xor
adc
imul
lds
in
xor
adc
shll
fimull
lahf
nop
mov
jmp
sbbl
mov
jmp
repz
loope
imul
sub
or
push
and
sub
adc
cmc
addr16
add
pop
mov
jbe
pop
mov
ficompl
repnz
xlat
and
and
sahf
in
lahf
call
mov
adc
ret
sbb
mov
pop
sbb
sbb
and
jno
inc
push
cwtl
pop
sbb
lret
mov
jbe
iret
movb
call
imul
mov
pop
pop
xor
mov
negb
mov
cmpsl
xchg
stos
and
mov
mov
stos
fdivrs
sub
sub
sub
push
mov
mov
or
xchg
gs
cmp
out
aaa
inc
cmp
mov
ret
rclb
add
lret
push
insb
gs
xor
xchg
inc
aam
pop
loopne
in
add
add
iret
cmpsb
sti
dec
adc
in
inc
xchg
pop
shr
outsb
push
xor
add
rorl
push
aaa
stos
test
mov
jle
jae
pushf
popf
es
test
xlat
push
cli
or
lds
daa
clc
dec
dec
inc
jmp
lea
adc
or
mov
and
mov
sahf
sbb
xchg
lret
xchg
clc
xchg
test
add
and
rolb
cmpsl
lock
add
cmp
lret
mov
cmpsb
pop
cmp
movsl
adc
jb
imul
ficoml
inc
add
icebp
push
adc
out
pop
scas
hlt
gs
mov
gs
test
ja
xchg
pusha
lds
jnp
mov
imul
pop
enter
jns
pushf
or
cmp
push
cwtl
sbb
iret
pmaxsw
push
cs
inc
lahf
and
or
sub
subl
idivb
sub
xchg
mov
sbb
xchg
sahf
sti
inc
leave
loope
stos
bound
cmc
add
das
jbe
cmp
je
pop
mov
dec
repz
push
mov
mov
jecxz
cmp
pop
std
popf
mov
mov
add
cmp
outsb
mov
popa
test
es
push
jg
or
mov
lods
xchg
pop
arpl
lret
jnp
inc
fwait
jne
add
xor
cmp
out
inc
and
pushf
xchg
ror
pop
cmp
incl
push
cs
inc
push
pop
or
shll
mov
mov
loop
mov
adc
outsl
pop
and
mov
xlat
sbb
ss
jl
fwait
aas
or
cltd
shl
test
ret
or
lea
add
insb
fs
pmaddwd
inc
jbe
mov
xchg
xchg
enter
inc
out
ret
xor
sarb
mov
inc
jecxz
shrb
sahf
jp
jge
out
pop
mov
inc
and
and
je
inc
cwtl
outsl
stos
mov
fstps
jle
addb
mov
loope
fistpll
sbb
pop
in
pop
jl
int
ljmp
mov
mov
mov
loope
fdivs
ret
adc
sub
cmpb
pop
fldenv
ret
sbb
imul
lods
cmc
loopne
lods
dec
lods
je
lods
xor
jno
aad
gs
sub
scas
clc
or
mov
or
sarl
out
int
repz
mov
cmpb
push
pop
pushf
xlat
jno
jne
mov
mov
xor
fwait
lahf
icebp
scas
sahf
cwtl
add
pushf
pop
xchg
inc
inc
mov
mov
jg
sub
push
pop
call
inc
test
jmp
je
ss
xchg
xchg
mov
testl
mov
cmp
leave
andl
jo
cmpsb
pminub
arpl
jp
sbb
push
mov
cmp
jnp
leave
mov
mov
iret
mov
mov
jl
xchg
ret
jb
mov
into
scas
addr16
addr16
aas
loopne
mulps
loopne
xchg
aas
adc
jne
in
into
lret
fiaddl
and
push
aaa
sbb
inc
mov
jo
cmp
addb
inc
stc
dec
fistps
popf
add
in
and
fstpl
jnp
adc
or
pop
xchg
out
and
dec
iret
les
outsl
aam
cltd
std
and
rolb
insl
subb
in
in
jp
jb
loop
pop
hlt
in
bnd
dec
mov
push
xchg
adc
jmp
addr16
pop
adc
push
stos
add
cmp
clc
ret
push
sbb
cmp
push
lret
sbb
std
iret
iret
cmp
pop
xor
loopne
cmp
dec
dec
push
cmp
sub
xchg
std
scas
sahf
mov
leave
push
fwait
cmp
repnz
push
mov
loop
ret
jl
fmull
lock
sti
sbb
push
and
and
mov
loop
jo
mov
aam
jle
mov
aad
mov
push
and
xchg
jmp
fisttpll
sti
xchg
ds
popf
ret
mov
mov
mov
test
repz
aas
icebp
push
mov
addr16
dec
push
aam
xchg
jl
jno
test
adc
rcl
lahf
in
jl
int
ljmp
hlt
mov
enter
cmpsl
mov
or
sub
mov
dec
mov
pop
in
cmp
aad
mov
mov
test
cmp
loopne
call
pop
hlt
repz
add
and
push
popa
in
cmp
js
jg
push
in
pop
test
push
push
xchg
or
dec
and
test
xchg
test
les
scas
sbb
testl
fs
imul
fidivl
in
xchg
and
cs
repnz
mov
fwait
xlat
adc
sub
stc
pushf
data16
and
sbb
adc
and
orl
mov
cmpsl
sbb
lcall
mov
jmp
in
and
lret
mov
fisubs
vpsrld
mov
cmc
pushw
xchg
add
testb
inc
xor
stos
mov
cmp
push
and
sarb
fists
push
jle
dec
jne
jb
dec
pop
call
sub
inc
mov
add
and
ss
insl
dec
arpl
cltd
add
push
lret
add
das
push
mov
push
cmc
xchg
lock
mov
adc
sub
mov
mov
inc
push
insb
es
or
push
bound
repz
jecxz
pop
mov
pop
cwtl
xchg
jbe
xchg
pop
pop
xchg
xchg
mov
into
ss
lods
add
subl
xchg
lret
rorb
cld
jo
jle
pop
idivl
dec
fwait
mov
lods
mov
mov
lcall
ds
in
das
jmp
inc
lods
enter
fcomps
stc
pop
pop
pop
mov
scas
jae
jb
clc
or
mov
jmp
rep
inc
pop
roll
add
popf
dec
stos
push
ja
and
je
in
andb
push
lret
lahf
lds
sbb
dec
jge
lret
js
xchg
into
mov
push
mov
lcall
leave
jle
mov
xchg
data16
jecxz
gs
mov
jecxz
jmpw
out
jae
pop
and
aad
aas
test
push
rolb
mov
hlt
push
cmpsb
ljmp
xchg
js
pop
in
sub
xor
arpl
sbb
sub
pop
cli
in
insl
push
fwait
aaa
xchg
fwait
jns
subl
jno
push
mov
adc
arpl
jno
movsb
les
mov
movsl
push
pop
inc
leave
roll
mov
mov
xor
fldcw
adc
push
pushf
xchg
jbe
mov
mov
pop
add
mov
pusha
mov
xchg
stos
sahf
mov
jae
cmp
fmuls
adc
test
dec
cmp
cmc
jmp
adc
repnz
xor
test
push
and
xor
ret
sarb
or
push
nop
stos
jecxz
cmp
icebp
divb
lret
push
movsl
roll
pop
idivl
xor
sub
mov
rcrb
js
dec
cmp
xchg
adc
outsl
lret
xchg
or
add
mov
fisubrs
or
sub
ljmp
xchg
mov
push
fwait
cli
mov
pusha
repnz
nop
sub
cmp
addl
out
xchg
jmp
arpl
add
pusha
and
xchg
dec
imull
stos
popf
mov
pushf
hlt
mov
fwait
pop
xchg
cmp
xor
leave
xlat
loop
fstl
fisttps
mov
add
outsb
clc
cmpsl
loopne,pt
nop
push
jecxz
hlt
push
xor
xor
dec
dec
dec
test
xchg
sbb
pop
mov
and
adcl
pop
and
mov
dec
or
fstl
sbb
cmc
mov
jnp
or
das
push
xor
mov
pop
aaa
adc
shr
mov
pop
fisubrl
sbb
xchg
andl
jl
out
movsl
inc
add
cli
pop
clc
sbb
sbb
jmp
dec
pop
ret
movsl
push
outsl
jmp
cmpsb
pop
jmp
movl
dec
ljmp
ja
adc
xor
dec
jecxz
mov
mov
mov
int3
inc
mov
sub
mov
cs
adc
push
mov
jmp
xor
aad
cmpsb
arpl
into
dec
das
lcall
jmp
sbb
imul
push
addb
xor
pop
jo
cmpsb
bound
or
adcl
xor
pop
mov
iret
sub
or
inc
and
into
cmc
fnstcw
dec
jecxz
push
popa
push
pop
xchg
pop
in
inc
out
enter
xor
add
add
icebp
cwtl
lret
gs
cmp
hlt
jg
xor
jno
es
shl
lret
xlat
lock
fmuls
leave
ljmp
rolb
andl
pop
dec
shl
roll
out
dec
cmp
dec
stos
out
jecxz
test
xlat
stos
or
mov
or
dec
stos
cmpsb
sbb
dec
mov
shlb
adc
popa
mov
fs
mov
mov
and
push
scas
push
pop
in
mov
lea
jmp
pop
push
repz
and
jle
loope
sbb
fwait
leave
insl
imul
jge
movsl
dec
xlat
je
or
jne
dec
sbb
lcall
add
lahf
sub
insb
jp
inc
arpl
pop
lret
aaa
adc
cmc
lock
aas
xlat
loope
jb
aam
ljmp
or
or
xlat
sahf
add
cmp
jmp
xlat
loop
push
in
test
mov
jecxz
and
sub
sbb
add
cmpsb
fildll
mov
ret
pop
and
xor
arpl
movsl
jbe
xor
insl
mov
aaa
in
dec
or
jae
pop
pop
fsubrl
push
pop
sub
jbe
ret
mov
sub
cmp
push
outsl
and
mov
rcrb
push
in
push
out
fnstsw
mov
inc
jmp
out
and
or
jne
xchg
mov
inc
mov
add
adc
inc
sbb
movsl
call
xor
lcall
rcll
mov
mov
sbb
punpckhbw
fstpt
sti
jnp
add
inc
sub
mov
xor
cmp
adc
lods
push
aas
mov
xchg
test
push
lret
xchg
or
pop
scas
or
push
cs
adc
pop
dec
cmpsl
movsb
gs
int3
cmc
xorl
sub
fsub
adc
inc
or
adc
test
jae
pop
or
inc
sahf
sub
pop
in
cmp
push
pop
jle
xchg
xor
mov
cli
xchg
mov
scas
mov
mov
xchg
adc
xchg
lcall
movsl
movsl
cmp
aaa
call
pop
mov
jmp
iret
popf
mov
leave
cmp
ficomps
inc
cmpsb
pop
mov
js
iret
ffreep
dec
inc
xchg
ljmp
mov
nop
adc
xchg
cmp
leave
inc
ds
test
out
jns
jo
and
fsub
mov
ljmp
push
int
adc
rcl
icebp
mov
sub
adc
loope
pop
jne
cmp
xchg
cwtl
pop
shlb
adc
test
push
sub
push
cmp
dec
cld
cmp
pop
add
and
sub
icebp
js
test
jno
push
xchg
cltd
xchg
inc
xorb
jne
lret
movb
cmp
add
and
xor
into
sbb
sbb
pop
mov
lods
mov
jle
add
jecxz
mov
cmp
inc
mov
adc
scas
sbb
cmp
jg
and
daa
and
push
mov
sub
mov
mov
push
dec
cmpsb
iret
push
lock
pop
mov
stc
mov
neg
outsb
clc
ja
leave
sbb
pop
inc
jmp
push
addr16
fisubrl
jmp
lock
pop
imul
mov
xchg
mov
cmp
stos
dec
loop
aad
fwait
stos
mov
sub
push
mov
or
aam
pushf
repnz
adc
pop
outsb
mov
inc
jns
jmp
jae
dec
push
lods
mov
jae
jge
mov
jns
dec
xor
add
insb
pusha
insb
stos
sub
cmp
aaa
mov
xor
rcr
scas
out
arpl
mov
mov
push
pop
movsl
stos
repnz
mov
mov
sub
push
jmp
in
lods
fstps
cmp
int
xlat
les
mov
push
gs
push
scas
dec
ja
pop
xor
iret
pop
loopne
dec
stos
xchg
mov
sub
lods
mov
popw
fbld
sub
or
xor
pop
stos
mov
hlt
fisubrs
jbe
lods
xchg
out
push
repz
scas
inc
int3
jbe
imul
and
lahf
fucomp
mov
int
daa
loope
and
in
int
jae
sbb
test
or
mov
imul
jne
mov
sub
or
insb
xchg
btc
pushf
mov
mov
dec
jnp
mov
inc
insb
cld
xlat
fprem
js
gs
mov
cli
mul
lds
adc
es
push
fmuls
adc
mov
cmp
rcl
outsl
sub
pop
or
push
pop
or
stos
ljmp
loope
aad
loop
and
and
xorb
mov
mov
jecxz
pusha
mov
call
add
pop
xor
daa
adc
aaa
inc
enter
repz
add
cs
push
stc
and
jbe
sbb
xor
stc
fcoms
cmpsb
faddl
pop
xchg
jns
lahf
and
sub
lea
xlat
movsb
inc
xchg
pop
jmp
jnp
push
mov
jle
cmova
cmp
cmp
fmul
push
sbb
repnz
sbb
jo
xchg
aad
loope
mov
inc
sub
sub
out
lods
lods
jno
into
jae
sub
lock
cld
cmp
sub
jbe
mov
push
adc
mov
xchg
xchg
scas
sbb
xchg
sub
cmpsb
int3
ror
fisubl
jle
lods
cmpsl
jle
xlat
mov
lock
jp
cmp
or
pop
pop
dec
xchg
imul
test
inc
push
int3
mov
inc
pop
adc
movsl
jp
repz
mov
rcr
fcoms
and
fisubs
dec
pusha
xchg
inc
fldl
lock
rorl
insb
mov
scas
loope
cmpsl
int
hlt
test
mov
and
xchg
jecxz
and
mov
out
mov
push
into
cmp
xlat
mov
add
pop
push
add
sbb
inc
mov
jno
and
mov
jle
shlb
mov
xchg
cmp
cmp
aam
ja
mov
mov
cltd
mov
int
out
mov
shll
jbe
cmc
cld
cmp
sahf
and
dec
icebp
or
je
mov
sahf
mov
mov
notl
fld
insb
rep
loope
mov
loop
sub
and
dec
sub
pop
ret
jbe
jl
lea
fidivl
das
outsl
push
aas
mov
in
cwtl
cld
dec
pop
xor
sahf
clc
leave
jo
mov
jmp
shlb
xchg
push
popa
push
fiadds
sub
cld
les
cltd
roll
inc
sub
jl
aas
lock
outsb
mov
inc
sub
mov
imul
jns
jne
fsubl
mov
add
mov
test
mov
pop
jb
cmp
cwtl
rcrb
inc
push
jb
imul
xor
sub
call
or
aam
sar
jnp
dec
sub
jge
arpl
ljmp
cmpsl
jp
adc
cmp
aad
cmp
push
call
mov
sbb
xor
push
aam
sahf
lods
dec
jns
jae
rolb
xor
jp
icebp
add
mov
shlb
cmp
in
or
or
stc
mov
mov
gs
pop
out
cld
mov
nop
fisttpll
scas
data16
or
movsl
add
jecxz
cwtl
xchg
movsl
mov
lret
fsubr
es
adc
arpl
pop
jecxz
mov
xchg
or
lea
test
pop
shlb
rorb
dec
cmp
lret
mov
dec
pop
mov
xor
clc
pop
fwait
inc
xchg
cwtl
test
hlt
pop
daa
add
les
out
rorl
pop
jnp
sub
mov
shlb
add
push
jns
outsl
jbe
and
ret
add
push
clc
mov
int3
test
mov
jno
mov
and
aam
inc
add
loopew
push
lds
loopne
xchg
ret
mov
inc
sub
add
or
in
add
and
xchg
xor
test
cmp
xchg
jo
push
js
roll
shlb
xchg
or
cmp
mov
sub
test
pop
inc
add
mov
stos
test
stos
ret
adc
pop
lcall
pop
cmc
xor
inc
in
dec
mov
mov
inc
mov
aad
mov
rol
imul
mov
hlt
sbb
dec
shl
mov
loope
push
mov
imul
bound
jo
pop
push
stos
pusha
mov
xchg
bound
push
sbb
cmpsl
dec
fstpt
pusha
aam
push
in
pop
sahf
movsl
add
loop
pop
movsb
fistl
sub
dec
pop
jo
dec
xchg
pop
cmpsb
pop
pop
fdivl
pusha
out
mov
inc
leave
push
jno
or
jge
out
mov
aam
dec
push
ret
and
test
jle
les
inc
dec
int3
mov
and
pop
fs
test
daa
cltd
jmp
in
int
mov
xchg
xchg
mov
test
ffreep
jmp
xchg
aad
xor
adc
test
add
sub
jecxz
jno
stos
notl
push
mov
out
sbb
mov
mov
sbb
or
ret
mov
or
sbb
cmp
test
test
scas
mov
xchg
js
dec
mov
movsb
xchg
or
ss
xchg
icebp
lahf
xchg
gs
cmp
leave
vpsubsb
bound
insl
mov
mov
jmp
inc
jnp
cltd
mov
jb
cwtl
out
incl
call
js,pt
add
push
shrl
test
das
mov
stc
xor
mov
mov
mov
lret
pop
ss
and
or
aad
fs
out
out
pusha
in
movsl
aad
out
push
pushf
mov
gs
fldt
cmp
push
outsl
aas
or
xor
pusha
cmpb
mov
push
pushf
pop
arpl
insl
sarl
inc
movsl
xor
ds
cwtl
inc
lods
mov
push
pop
jle
hlt
sbb
inc
and
or
mov
adc
xor
faddl
cmpsb
addb
movsl
lods
cmp
pop
jmp
sbb
or
pop
pop
sti
or
and
shl
test
sbb
popf
cmp
mov
pop
test
push
pop
into
arpl
int3
test
xchg
sbb
shll
daa
sub
cltd
xchg
add
test
clc
xchg
ret
xor
jnp
adc
cld
hlt
sbb
add
adc
shl
push
in
jo
lret
xlat
mov
and
mov
cmp
rcr
mov
je
inc
xor
lods
ret
adc
inc
mov
dec
push
sbb
push
sbbl
pushf
lahf
adc
adc
lea
and
gs
fdivp
cmp
fbld
test
lods
sahf
dec
mov
inc
bound
pop
cld
cld
push
or
iret
lahf
push
stos
pop
movsl
idivl
mov
inc
icebp
push
sbb
dec
outsb
mov
xchg
pusha
pop
mov
inc
xchg
mov
mov
xor
adc
mov
ljmp
jo
ret
in
push
fs
mov
lds
cmpl
bound
ret
pop
mov
ja
outsl
sbb
lret
xor
or
shr
inc
popa
inc
enter
and
fsts
std
add
rcr
lods
rolb
jno
dec
jle
fcomps
mov
sub
cwtl
lcall
jbe
insl
push
fcmovnu
lds
sub
push
nop
ds
rcll
pop
sub
mov
aam
push
and
and
int
push
mov
int3
pop
xchg
mov
jns
je
mov
mov
adc
incl
xchg
cmc
push
add
decl
rcrb
mov
test
mov
rorb
push
push
jno
mov
mov
mov
add
fs
test
jne
les
outsl
cs
jne
mov
in
sti
jmp
push
out
or
mov
or
adc
and
jnp
subl
xchg
or
imul
fimuls
mov
inc
jg
xchg
aas
out
out
push
xor
add
cmc
jmp
push
lret
mov
or
jp
ret
dec
hlt
add
lret
call
lret
ror
sub
stos
stos
push
lods
jns
repz
cmp
out
popa
xchg
push
aad
push
daa
cmpsl
out
lock
pop
sti
jb
sarl
movsb
hlt
jecxz
lcall
int3
cli
push
movsl
cmp
cld
add
jbe
jbe
adc
mov
test
loop
pop
shl
add
sub
imul
movsl
push
rolb
pop
fisubrs
rcl
sbb
push
cmpsl
sub
inc
aad
mov
cmp
cmp
stos
lds
roll
sbb
loope
test
push
jno
in
in
cmp
xchg
les
xlat
jecxz
pop
cmp
push
lock
insl
mov
jmp
out
into
dec
xchg
leave
stos
push
pop
daa
sbb
lods
and
dec
cmp
das
insl
and
mov
jl
or
xor
fsubrl
inc
data16
aaa
push
mov
cltd
push
jb
repz
dec
test
test
fistps
push
mov
xor
jno
loope
and
adc
cmp
js
add
rcll
js
and
add
rcrl
push
add
jne
insb
mov
es
test
mov
or
imul
fimull
inc
fsts
iret
out
test
adc
sbb
and
jmp
and
testb
jnp
insb
jo
xor
or
imull
rclb
sub
lods
lock
cmp
insb
cmp
lret
mov
mov
sahf
mov
sub
std
popa
jle
cmpsl
out
mov
popf
mov
and
adc
or
fwait
xlat
mov
loopne
ljmp
lods
fs
inc
add
ret
movsl
cmp
jg
rorb
test
daa
inc
pop
cltd
pop
loopne
xchg
pop
ljmp
push
stos
sti
push
mov
shl
ds
fcomip
xchg
mov
mov
jae
jmp
loopne
cmp
jnp
mov
jle
inc
xor
scas
sbb
push
inc
jp
jb
jp
fstpl
shrl
cmp
mov
sub
mov
dec
dec
and
jecxz
xor
lret
sti
pushf
mov
nop
aas
dec
dec
stc
ret
out
adc
out
or
push
repz
cmp
mov
xchg
ffree
xor
repz
cmp
scas
dec
mov
mov
jno
lret
cmpsb
insb
fdivl
mov
xchg
or
pop
push
push
int3
push
cmp
xchg
out
jbe
stc
cltd
sub
dec
sbb
cmp
xchg
add
stos
popa
push
inc
or
arpl
int
sub
in
fisttpll
and
out
iret
in
jp
pop
jmp
sub
mov
andb
cs
xchg
xor
ds
xchg
sarb
lea
fildl
popf
mov
sbb
or
and
outsl
jp
mov
mov
repz
test
divb
stos
rorl
sbb
and
lock
mov
sub
fmulp
mov
jp
lahf
je
sub
xor
hlt
or
outsb
jne
mov
shr
xor
in
daa
loope
jl
xlat
cmp
mov
mov
mov
cmc
add
and
inc
rolb
jle
xchg
cmc
movsl
and
dec
add
loope
jmp
dec
iret
adc
fistpll
pop
mov
pop
sbb
mov
xchg
pusha
and
imul
insl
loopne
inc
out
cltd
femms
xchg
fwait
mov
lret
or
cmp
in
jl
inc
andl
and
add
out
push
jmp
sbb
or
test
mov
add
mov
xchg
push
cltd
popa
cmp
cmpsl
jmp
sbb
jg
stc
xor
int3
aas
daa
inc
lahf
fstpt
pop
out
sub
out
inc
inc
ss
popf
popf
orb
hlt
into
int3
jne
imul
je
xor
sub
je
sarl
outsl
sbb
xor
arpl
xor
out
push
add
cmp
popa
aam
adc
or
stc
push
jecxz
popf
cltd
out
add
jo
ja
xor
loopne
lea
jg
add
xor
in
cmpsb
xchg
out
sbb
push
pop
cli
add
adc
bound
roll
rcrb
cmc
data16
jb
in
xor
fwait
pop
mov
xchg
es
add
or
xor
sub
mov
lods
sbb
and
mov
adc
int3
push
std
mov
mov
add
sub
cmp
test
roll
sbb
mov
jo
mov
add
mov
mov
stos
push
dec
add
xor
dec
and
dec
outsb
test
aad
aam
adc
adc
adc
or
cli
popf
int3
shl
inc
call
outsb
adc
shl
testb
aaa
lds
in
imul
add
sahf
insl
pop
jmp
mov
cld
lea
mov
adc
shl
mov
call
lods
sbb
sarl
out
push
add
dec
pop
test
sub
cltd
pusha
cli
cmp
mov
nop
lret
xchg
adc
mov
std
adc
push
testl
mov
and
pusha
lahf
inc
arpl
mov
dec
cmp
aas
dec
xchg
sub
sub
mov
ljmp
lods
inc
cmp
jnp
mov
int
adc
jge
aaa
jle
jae
sahf
xor
cld
jg
shlb
sbb
sbb
xor
lock
in
out
adc
cwtl
adc
xchg
cmp
xorl
outsb
push
jbe
xor
enter
fs
pop
mov
and
mov
fimuls
cmpsl
inc
stc
jnp
or
xlat
or
scas
fcomps
xor
sub
xchg
mov
adc
mov
pop
dec
mov
push
fists
notb
push
add
and
xor
push
ret
push
jo
les
add
cmp
enter
imull
and
ss
movb
xchg
add
add
cld
push
test
sub
enter
dec
outsb
cwtl
insb
mov
pop
or
repz
xchg
pop
mov
fistl
test
into
movsl
insb
jp
lea
push
std
cwtl
stos
pop
push
push
jle
cmp
daa
out
or
ret
xchg
lret
add
out
inc
mov
mov
mov
gs
push
jl
test
imulb
out
ficoms
inc
pusha
add
jmp
sub
in
cld
dec
jno
ljmp
mov
das
xor
mov
adc
leave
cmp
add
xor
cltd
jecxz
js
add
and
fwait
sub
sbb
mov
xchg
cmpsl
in
mov
les
cmp
arpl
fildll
xor
popa
pusha
es
cmpsl
add
pop
dec
dec
imul
pop
mov
jp
cmp
add
test
sbb
nop
add
std
push
or
or
jns
push
xchg
shlb
or
cld
push
jnp
sti
sbb
xor
out
sbb
jae
pop
xor
mov
jb
bound
rcll
ret
sub
mov
xchg
mov
mov
test
fcmovnb
push
pop
data16
mov
mov
ret
aam
sbb
add
lock
jns
imul
mov
sbb
incb
cmp
decl
test
cmc
or
jno
addr16
lods
in
mov
jns
jno
test
mov
icebp
push
scas
lgs
cli
pop
lods
stos
or
call
xchg
add
into
push
jae
inc
pop
adc
addr16
or
sbb
sahf
shl
or
cmp
add
fnsetpm(287
das
out
imul
push
sub
lret
xor
fildll
mov
sbb
js
mov
sub
lcall
sbbb
push
mov
add
adc
repz
cmp
in
or
sahf
sub
sti
mov
sbb
addr16
xchg
add
movsb
sub
xorb
scas
xchg
or
add
add
jg
or
add
xor
mov
push
jae
xchg
fwait
push
xchg
xor
shrb
mov
testb
or
cmp
adcl
jno
cmp
sub
inc
sub
push
xor
fldl
jno
aaa
and
xor
call
enter
cmp
jmp
cmc
jg
mov
push
ret
sahf
lods
ljmp
in
pop
sti
xchg
inc
aaa
inc
pop
adc
clc
xchg
lods
lcall
mov
popf
cmp
sbb
xchg
xor
sarb
jmp
out
clc
sbb
add
xchg
js
dec
in
xor
rol
cwtl
stc
push
xchg
mov
adc
pusha
cli
fcoml
pop
push
jns
cmp
out
and
notl
stos
enter
pop
dec
push
dec
mov
push
adc
push
cmp
push
dec
mov
push
inc
push
pop
add
fstpt
sub
xor
lods
jg
or
adc
das
fcomip
mov
fstpt
iret
and
stos
cmpsb
pop
add
inc
mov
push
inc
sub
add
test
push
pop
jns
mov
sbb
jl
out
jl
in
inc
mov
insb
movsl
jg
fcomps
inc
push
jge
xchg
pop
fwait
ljmp
xchg
pop
and
mov
mov
xor
xor
push
mov
dec
cmpsl
or
lahf
dec
aam
stos
mov
ja
fdivs
lcall
adc
lcall
cmp
pusha
nop
ljmp
xchg
test
adc
dec
mov
in
mov
mov
inc
adc
cmpsb
int
xchg
out
pushf
or
popf
or
rorb
xchg
js
jnp
adc
subb
push
clc
xchg
sub
mov
xchg
es
gs
leave
or
cmp
sbb
pop
cmp
and
loopne
outsb
hlt
push
popa
loop
arpl
ss
and
lea
inc
jne
xchg
negl
fwait
xlat
cwtl
mov
arpl
and
mov
rclb
es
xchg
fs
sbb
dec
xlat
cmp
rcll
ljmp
adc
mov
loopne
mov
popf
outsb
test
or
dec
icebp
sti
pop
fdivr
in
sub
jno
mov
adc
xor
popf
in
std
int3
xchg
xchg
cmp
mov
scas
inc
pop
shlb
add
leave
adc
jo
fdiv
and
xchg
cmpb
mov
pop
fists
inc
cmp
pop
mov
push
into
cmp
rolb
push
push
cmc
dec
xor
lods
popa
push
jge
adc
sub
sbb
mov
mov
lret
pop
loop
push
push
xlat
loope
divb
mov
loope
jp
dec
dec
xor
jle
push
in
cmc
mov
add
ret
xor
mov
cmc
inc
cmp
les
cwtl
and
dec
mov
cmc
ret
mov
xchg
daa
sbb
adc
push
popa
clc
add
sahf
vmread
push
leave
addr16
sub
std
mov
jne
adc
std
test
add
test
dec
mov
dec
in
loopne
or
xor
aaa
cmc
sub
sub
test
or
rcrb
add
pop
je
jl
enter
sarb
rclb
je
imul
cmp
rol
popa
mov
arpl
dec
jne
ret
mov
mov
mov
adc
movsl
rorb
pop
rcrb
negl
out
mov
cli
divb
loope
mov
cmp
mov
jg
sbb
add
fcmovb
aam
outsb
jp
add
adc
ljmp
sarb
fsubr
add
jb
jbe
or
pop
or
hlt
dec
test
cmp
mov
nop
aam
ja
icebp
imul
mov
test
jl
scas
jl
gs
jle
sbb
xchg
ljmp
cmp
pop
enter
jns
addr16
les
je
xchg
xchg
add
loop
mov
out
mov
push
outsb
lcall
hlt
fmul
sbb
aaa
or
nop
push
stos
push
rclb
into
cs
cmpsl
pop
or
jnp
dec
mov
insl
cli
push
xor
popf
pop
mov
mov
mov
lcall
xchg
cmpsl
ret
mov
pushf
jnp
fcmovne
and
fdivrs
lock
jne
cmp
aad
mov
arpl
sahf
enter
xlat
addb
push
mov
movsb
inc
adc
add
cwtl
pop
cmp
scas
faddl
pmaxsw
mov
sub
aas
mov
cli
xor
mov
addb
rolb
mov
mov
jno
xor
in
push
jl
stc
cs
movsl
dec
push
repnz
stc
push
lock
push
push
add
lahf
adc
cmp
movsl
in
or
data16
add
sub
jmp
insl
or
add
out
fwait
loop
je
popf
jl
jp
ja
rolb
pop
lods
cmp
pop
in
stos
pop
lcall
les
inc
xchg
pop
movsb
xchg
dec
psubq
pop
jl
aas
mov
jnp
xor
js
out
sbb
loope
push
jo
aaa
lahf
pop
sbb
loop
mov
loopne
xchg
iret
js
fdiv
ds
ret
mov
cs
xchg
add
add
mov
pop
iret
lahf
push
cmp
push
mov
mov
and
jecxz
and
je
jle
jg
or
or
inc
iret
add
sub
repnz
jno
mov
fiaddl
jbe
cs
xor
pop
cmp
fdivrl
cltd
cmp
lret
in
lahf
inc
idivb
nop
add
das
aam
repz
cwtl
mov
jns
push
aam
mov
sbb
add
stos
and
xor
pop
push
lret
add
pop
jo
lea
adc
pop
pcmpeqd
into
gs
pop
mov
dec
cmp
sbb
push
push
imul
or
cld
insl
mov
shll
repz
mov
and
cmp
dec
add
int3
mov
pop
inc
test
outsb
jl
test
add
cmc
je
dec
lret
cmpsl
and
jnp
cmp
shrl
push
or
xchg
xchg
imul
mov
lret
adc
xchg
lock
sub
jns
shl
or
pop
push
cmpsl
lods
clc
scas
hlt
aam
push
jmp
test
add
bndldx
clc
lds
test
jno
pusha
mov
xor
shlb
out
imul
sbb
xorb
jl
push
adc
nop
call
adcl
das
testb
xchg
xchg
adc
pop
sbb
push
cmpb
jecxz
test
sbb
mov
test
popa
scas
cmp
dec
jge
lret
stos
arpl
fisttpll
int
mov
insb
dec
je
xor
pusha
incb
loop
add
outsb
xor
nop
add
mov
mov
rorb
xor
inc
mov
and
sub
mov
into
clc
loope
xor
cmp
mov
jg
push
hlt
mov
push
loopne
popf
mov
dec
aam
or
push
mov
fcom
inc
mov
add
mov
inc
roll
insl
fwait
jmp
mov
shl
loop
stos
enter
jp
inc
enter
mov
scas
mov
andb
jo
mov
push
data16
mov
adc
adc
jmp
insb
mov
push
imul
data16
in
cltd
and
pop
add
jecxz
mov
clc
inc
inc
icebp
hlt
or
mov
adc
pop
and
fidivrs
out
push
sub
stos
xchg
int3
sbb
shr
pop
xchg
in
jg
test
bound
pop
ficompl
mov
xchg
shlb
sbb
push
adcl
test
ds
lock
out
push
pop
dec
jl
add
dec
cli
rolb
xchg
andb
sub
ficomps
loopne
mov
hlt
jg
aam
jnp
aam
ret
push
stc
push
adc
pop
stos
pop
jecxz
ret
cmc
pop
lds
or
mov
mov
daa
aam
mov
jle
gs
loope
test
push
bound
ja
in
insl
xchg
mov
cmp
xchg
or
push
mov
lods
sarl
push
push
dec
jns
andb
imul
shll
out
mov
sub
in
ss
scas
add
stc
in
repnz
xchg
dec
xor
ffreep
push
or
push
sub
and
jns
insb
pop
inc
pop
sbb
xchg
push
dec
inc
mov
jbe
es
mov
and
mov
ficomps
movsb
xchg
ja
sub
sub
inc
pop
dec
fidivl
sbb
push
jp
mov
loope
mov
rclw
cmp
je
and
add
xchg
jnp
mov
push
clc
ret
mov
xor
jecxz
std
lahf
fdivrl
sub
lcall
mov
andl
jnp
popa
hlt
call
cmp
rcrl
jmp
ljmp
mov
xor
cmp
andl
xor
cmp
mov
xchg
sub
jl
loope
xor
cmpsl
cmc
rcr
test
ja
push
mov
clc
inc
dec
xor
dec
mov
cwtl
xchg
dec
xchg
jle
adc
xchg
or
nop
xor
shll
mov
fidivrs
imul
adc
repz
aaa
popa
jp
mov
loop
mov
sbb
add
xchg
popa
fisubrl
std
into
or
jne
adc
push
jns
stc
mov
mov
jle
pop
aaa
test
imul
or
xchg
int3
and
hlt
in
bound
test
add
call
js
fdiv
xchg
mov
cmp
add
enter
scas
es
jmp
mov
lret
mov
add
inc
pop
or
cmp
dec
xchg
pop
xchg
sahf
aad
sahf
loop
ret
jl
sub
enter
les
pop
imul
adc
adc
imul
in
adc
sbb
push
bound
push
out
nop
sahf
icebp
inc
stc
mov
std
mov
xchg
add
mov
rorl
pop
fcomip
sub
flds
imul
outsb
mov
inc
bound
add
es
stc
xchg
scas
xchg
jp
dec
inc
fstpl
ficomps
mov
hlt
mov
fcmove
mov
sub
icebp
cmp
call
cmp
popf
mov
pop
dec
into
stos
ret
pop
and
je
movsb
jecxz
bound
fstl
stos
jbe
shlb
les
call
mov
sahf
push
incl
or
stc
fldenv
shll
mov
mov
push
dec
ror
movsb
bnd
je
in
lret
jmp
cmp
cmp
pop
mov
dec
mov
mov
mov
stos
das
cmp
pop
or
scas
jl
xchg
fidivrs
mov
fdivl
rclb
adc
mov
adc
into
enter
mov
test
mov
mov
xchg
add
jle
push
lods
push
adc
mov
stos
pop
outsb
fsubrs
movsb
push
mov
sub
mov
sub
mov
jg
dec
and
cld
les
and
sbbl
out
ds
and
adc
adc
xchg
movsl
push
adc
mov
sbb
sbb
not
sub
push
xor
cmp
leave
out
adc
repnz
xor
in
push
add
and
push
dec
xchg
mov
pusha
pop
pop
pop
fisttps
lods
inc
sti
mov
mov
sub
inc
pop
test
or
xchg
loope
jns
adc
fs
pop
push
jg
psrlq
ds
sub
rcrb
xchg
es
xchg
data16
adc
leave
xchg
mov
sbbb
pushf
jmp
jle
jp
imul
das
jl
inc
or
ficoms
in
pop
sbbb
movsl
cs
std
or
pop
push
stos
mov
das
fisubrs
dec
xor
loope
or
fcoml
jecxz
leave
mov
cmp
mov
scas
inc
add
lcall
pop
sbb
xchg
fisttps
aad
sbb
xchg
bound
dec
mov
into
js
dec
xchg
push
insb
mov
add
xor
xchg
in
and
jl
js
fildll
dec
imul
mov
xor
or
or
jge
lock
fdivs
jg
and
mov
ds
mov
pop
mov
rcll
sub
aaa
add
icebp
sbbl
popf
ja
cmp
loopne
xor
icebp
ret
gs
das
mov
out
outsb
jne
cmp
mov
xchg
pop
xor
sbb
lret
or
std
mov
stos
mov
cmc
inc
jmp
cld
movsb
mov
dec
loop
inc
hlt
dec
stos
sbb
sbb
xor
addr16
cltd
ds
int3
adc
lea
push
enter
jne
add
push
sarb
gs
jae
mov
fisttpl
das
js
cltd
and
in
out
scas
pop
inc
mov
in
hlt
dec
psrlq
add
fildl
jne
aam
sub
sub
stos
mov
dec
pusha
inc
ds
adc
test
mov
in
repz
mov
sbb
jbe
jp
sbb
cmp
sub
mov
test
fsts
aad
and
sbb
movsl
imul
les
mov
adc
cltd
ficomps
ds
pop
call
gs
xor
ja
pop
xchg
jge
add
jle
imul
mov
sub
push
subb
mov
into
sub
jle
lods
call
stc
add
daa
cmpsb
lods
rcll
jae
mov
das
adc
les
idivb
je
inc
enter
rcl
rcrb
test
cmp
mov
inc
pop
push
cmp
sbb
inc
ljmp
mov
push
bound
adc
jo
mov
fdiv
les
xlat
pushf
mov
jmp
and
lods
lock
and
sub
sub
movb
dec
inc
adc
jo
cmp
dec
shll
mov
sbb
inc
incb
rcrl
cmp
movsl
arpl
fcompl
pop
inc
rcrb
dec
mov
outsb
sub
lock
ss
jp
cmpl
sub
lret
das
outsb
call
pop
out
insb
pop
jle
push
in
fnsetpm(287
jl
shll
push
jle
lods
mov
inc
sbb
push
fnsave
aad
mov
cmpl
bound
push
es
scas
test
rorb
inc
xchg
loopne
xchg
sar
mov
xlat
add
or
scas
pop
adc
cmp
add
imul
push
push
frstor
and
push
add
scas
pusha
jmp
jmp
dec
fstl
dec
xlat
addr16
dec
fmuls
pop
push
aaa
inc
rcl
jae
xor
fucomi
je
mov
das
scas
lret
mov
mov
cmp
enter
rolb
outsb
je
orb
xor
xor
imul
mov
sbb
and
sbb
mov
hlt
fs
rolb
inc
movsl
dec
pop
sahf
cmp
ja
push
mov
mov
daa
fisttpll
in
mov
adc
dec
push
xor
out
sub
cmpsl
loope
aam
xchg
and
jno
out
mov
out
stos
jp
jno
pop
ss
sub
mov
ret
sbb
push
lret
fiaddl
add
inc
adc
in
sbb
and
cmp
fistpll
imul
cmp
mov
cmp
xor
je
loopne
jmp
jecxz
xchg
addr16
cmc
movsl
pop
push
mov
sbb
jle
out
cmp
enter
ljmp
lock
mov
scas
subl
add
cs
clc
sbb
sbb
dec
outsb
lahf
xor
inc
xlat
loope
movsb
cltd
mov
push
mov
cwtl
mov
inc
test
pop
ljmp
lds
add
mov
or
xchg
clc
xlat
test
adcb
lock
mov
nop
cmp
adc
push
adc
in
mov
jl
fbstp
mov
les
es
sbb
push
inc
ljmp
pushf
scas
int3
gs
push
outsb
filds
pushf
pop
out
movsb
fsub
push
mov
sbb
add
lock
or
jbe
fwait
ss
jge
jl
xchg
adc
lret
inc
sub
jle
xchg
mov
jecxz
jmp
in
mov
loop
insb
out
or
mov
rorb
ljmp
and
jb
out
lret
out
cs
testl
jg
mov
incl
xor
and
xchg
add
test
out
pop
mov
inc
pop
lds
dec
pop
adc
enter
out
loope
out
pop
ror
and
or
rclb
sti
mov
sub
ret
add
aad
xchg
aad
fwait
and
xchg
sub
repnz
jns
fistps
les
jp
cwtl
std
gs
hlt
push
push
xchg
xor
mov
pusha
pop
push
xor
and
mov
pushf
jl
mov
imul
xor
cwtl
movsl
dec
jg
out
scas
adc
sbb
xchg
push
cmpsl
addr16
inc
mov
insl
out
and
daa
lea
mov
mov
std
mov
push
pop
pushf
clc
test
dec
pop
lods
inc
repnz
jge
lods
mov
cwtl
sbb
mov
xchg
push
repnz
mov
sarl
mov
in
fwait
divl
loop
iret
mov
cltd
sbb
xor
stc
sahf
dec
push
inc
lea
data16
clc
xchg
sahf
xchg
imul
gs
and
clc
out
xor
in
es
icebp
and
stc
inc
or
lock
cli
push
outsl
cld
cmc
jne
pop
mov
cmp
test
roll
jbe
jb
jae
outsb
out
mov
in
adc
lods
mov
adc
int3
scas
scas
lahf
mov
pop
imul
shll
xchg
fisubrl
xchg
leave
mov
sbb
popf
cld
mov
mov
mov
lods
mov
add
pushf
add
xchg
sub
mov
sbb
mov
push
sbb
shrb
jmp
les
addb
adc
fstl
test
sub
mov
fadd
gs
mov
out
cs
popf
fiaddl
outsb
dec
pop
dec
adc
or
cmp
inc
mov
enter
sub
fmull
std
push
dec
lods
imul
aas
cld
in
pop
ljmp
inc
mov
cmpsl
push
mov
add
in
cmp
lret
adc
push
scas
xchg
scas
push
ljmp
popa
sub
testl
push
xlat
getsec
in
fisttpl
scas
xchg
inc
mov
dec
jmp
out
mov
jne
cmc
je
xorb
sbb
seta
push
jne
movsb
push
sbb
stc
xchg
ret
mov
idivb
mov
ss
sarl
adc
sbb
das
ret
dec
push
pop
mov
fadds
mov
xchg
mov
fistl
push
adc
pop
add
ret
insl
jno
mov
movsl
xor
adc
mov
pop
xor
mov
xchg
xor
adc
gs
popf
jo
dec
add
movsl
xor
cs
push
add
mov
add
out
pop
mov
mov
jbe
mov
mov
movsb
mov
mov
and
push
adc
add
insb
sar
jecxz
jecxz
add
or
add
fmuls
mov
mov
ret
mov
jno
add
pop
stos
mov
iret
addb
xor
movsl
cmp
mov
stc
insl
nop
loop
cmp
xchg
out
jp
mov
jno
cmp
or
repz
mov
pop
mov
lds
jno
movsb
cmc
push
test
pusha
xor
hlt
xchg
adc
sbb
sub
popl
cmp
xchg
jge
jl
xchg
or
mov
and
xchg
call
nop
pushf
mov
fmuls
xchg
ja
jl
xor
or
inc
mov
jns
jno
and
clc
movsb
not
cmpb
and
sub
nop
jbe
xchg
add
adc
in
mov
nop
mov
frstor
jns
push
inc
xorb
cmpsb
sbb
psubusw
jb
cld
add
lcall
fistpl
loop
pop
lods
inc
adc
scas
andb
fidivs
push
xor
and
jmp
and
ds
xchg
sbb
lock
or
sbb
arpl
inc
xchg
add
hlt
pop
jecxz
test
in
outsl
movsl
inc
ret
mov
dec
adc
sbb
bound
mull
mov
mov
test
pop
dec
je
ds
pop
and
imul
sbb
jo
jmp
mov
xchg
std
push
in
lahf
mov
shrb
jp
fstpl
cmp
cmp
movq
mov
mov
xchg
into
in
or
and
pop
add
cli
test
cmp
jbe
xlat
aad
jge,pn
int
aas
lcall
out
addl
jle
mov
xchg
xchg
ss
push
adc
pushf
jae
cmp
fimuls
pushf
fwait
adc
loopne
mov
jo
push
xchg
cmp
adcb
testb
sbb
insb
sahf
fimull
cmp
cmpsb
mov
dec
dec
js
mov
les
dec
repz
xor
mov
outsb
xchg
or
sbb
dec
mov
mov
test
cmp
es
fidivs
insb
adc
or
jmp
fcomp
fwait
and
inc
cwtl
mov
pop
pop
clc
cld
xor
jne
scas
mov
cltd
fisttps
or
adc
push
lods
xor
sub
arpl
scas
add
push
fsubrl
pop
cmpsb
das
ret
test
mov
inc
xchg
mov
jmp
add
xor
inc
cwtl
sahf
sub
in
jno
std
add
ret
fsubrp
sbb
or
stos
out
sbb
js
mov
mov
push
clc
xchg
lret
pop
mov
lret
pop
mov
out
stos
ss
movsl
loop
and
jg
xchg
mov
adc
idivb
enter
dec
or
push
daa
addl
add
into
aas
or
push
incb
ret
sub
aas
jecxz
inc
loopne
cmp
pop
lds
mov
sbb
or
jnp
or
push
dec
aad
das
rorb
xchg
sub
cmp
inc
cs
lcall
xorl
movsb
push
rcll
xchg
dec
xchg
dec
push
in
pusha
subl
and
xchg
int
lcall
add
faddl
jle
xor
cmc
sub
idivb
aad
xchg
dec
rol
jg
std
adc
push
pushf
pop
inc
sbb
enter
rol
scas
or
in
icebp
mov
aas
pop
imul
xor
in
jecxz
cmp
sti
in
imul
aaa
inc
push
test
xlat
leave
je
sub
lret
xchg
dec
or
test
nop
mov
loopne
cmpsl
dec
mov
or
les
lcall
inc
mov
add
rolb
enter
add
inc
xchg
pop
mov
adcl
sbb
in
fidivs
in
ret
lret
ficoml
mov
sbb
cmpsb
scas
sub
and
idivb
shrl
lret
xor
pop
and
loop
xchg
dec
aam
jo
data16
jae
jno
or
mov
es
ret
sbb
pop
hlt
mov
sbb
stos
push
aaa
pop
fs
xchg
push
jg
enter
insl
and
insl
ret
cmp
and
lcall
pop
xor
mov
roll
cmc
jnp
sbb
mov
add
stos
sar
dec
cmp
rcll
pop
in
in
sub
or
mov
test
fstpl
mov
jno
pop
xchg
mov
fs
cmp
call
jnp
inc
rcrb
jae
jno
int
aaa
lock
int
and
push
into
mov
mov
sarl
iret
pop
jb
fstl
add
ds
dec
xor
xor
mov
mov
lods
or
pop
inc
push
and
mov
inc
dec
mov
inc
fidivs
push
sbb
pusha
jno
call
fnstsw
dec
dec
es
inc
sbb
leave
xor
pop
sbb
ljmp
add
pop
leave
or
loopne
ljmp
mov
insb
add
cmp
stc
push
bound
pop
xchg
test
fsts
sbb
jp
push
out
pop
aam
xchg
mov
out
aad
pop
movsl
daa
cmp
int3
out
mov
adc
xor
xor
and
stc
sub
mov
dec
pop
adc
mov
mov
imul
loopne
add
jns
cwtl
xchg
sbb
jl
cmp
loopne
xchg
ret
sbb
jmp
push
in
ret
inc
lock
jecxz
sbb
inc
push
icebp
push
bnd
sahf
enter
sub
xchg
cmp
jns
xor
jg
dec
jno
lods
shrb
sbbb
adc
sbbl
mov
xchg
outsl
jne
add
and
iret
dec
mov
and
outsb
fistl
or
loope
scas
in
out
loope,pt
arpl
jp
push
mov
mov
xor
mov
rclb
mov
leave
aaa
popa
cmp
and
lret
sbb
add
jno
and
call
sbb
enter
in
adc
leave
lcall
ds
fmul
repnz
sbb
push
das
arpl
orl
mov
xchg
jmp
dec
test
lods
aad
mov
pop
pop
cli
adcb
lock
scas
sbb
cli
add
in
add
adcl
outsl
stos
ficompl
imul
pop
test
xchg
mov
sub
test
mov
and
cmp
pop
pop
mov
cmp
jns
insb
xchg
mov
dec
pop
mov
pop
andl
in
je
mov
fstl
sbb
enter
adcl
add
push
xchg
push
mov
push
dec
inc
or
sub
aas
add
ret
push
cltd
shlb
add
dec
ja
rolb
in
xchg
or
mov
lock
mov
jno
xor
imul
sbb
out
ljmp
and
aaa
dec
or
out
testb
bound
loop
int3
lea
dec
loop
pop
cmp
xor
in
pop
cs
jl
jle
mov
mov
dec
stc
fcom
jl
adc
aam
push
dec
lods
mov
pop
das
cwtl
xchg
sti
jnp
jle
mov
jb
inc
cmp
pop
mov
pop
test
insl
pop
push
push
mov
adc
jecxz
inc
data16
repnz
lods
dec
movsb
inc
mov
bound
dec
pop
insb
pusha
pop
cmp
inc
add
lahf
cmovnp
jp
and
enter
xor
pop
jno
push
adc
or
pushf
stc
cwtl
or
lret
int
push
sbb
testb
cltd
sub
dec
mov
mov
pop
sbb
jg
add
push
xchg
push
lods
sub
pop
lahf
fsubrl
dec
sub
inc
bound
fcmovnu
jnp
aas
adc
pop
ljmp
xchg
pop
nop
pop
jmp
sbb
mov
int
sbb
das
sahf
dec
imul
lods
mov
lds
das
add
mov
je
adc
loopne
outsb
fs
lods
repz
cmc
cmp
dec
xchg
rclb
mov
push
fimuls
arpl
notb
pop
mov
push
jp
cld
mov
lds
test
in
bound
jne
sub
sbb
dec
and
pop
sbb
les
negl
leave
rcrb
aaa
xchg
call
and
and
in
cmp
cld
xchg
pushf
push
xor
push
add
rolb
sbb
outsb
adc
jns
pop
in
dec
sbb
sub
cmp
mov
pushf
xchg
add
sub
dec
sbb
test
dec
dec
inc
fcmovu
cmp
adc
cmp
xchg
add
lret
lea
shrb
or
cli
push
inc
lret
jmp
lcall
pop
pop
rep
idivb
lods
sbb
jb
aad
das
mov
push
repnz
inc
cwtl
andl
sbb
mov
sbbb
dec
push
frstor
push
lock
scas
fldl
aad
fwait
push
fistl
cwtl
dec
adc
outsl
fdivrs
xchg
in
push
cmpsl
int
or
jg
push
je
lret
rorl
addr16
and
test
push
jmp
mov
popa
sbb
imul
sub
insb
ss
fnstcw
push
add
sbb
mov
mov
rorl
xor
fisubrl
push
or
shll
fcmovb
out
or
and
lock
or
cmpsl
sub
or
jnp
or
imul
mov
test
sbb
cmp
lcall
imul
jne
outsb
push
adc
xor
test
push
xorl
sbb
cmpsl
test
insb
cmpsb
outsb
mov
mov
roll
fcmove
mov
adc
pop
pop
int
sbbl
loope
cmp
xlat
inc
lea
xchg
inc
sub
inc
cmc
jl
sbb
jno
stc
sub
xchg
and
dec
nop
mov
lahf
xor
pop
shrb
rcrl
mov
xor
bound
jg
dec
mov
movsl
pop
les
xor
push
out
fcomps
mov
xchg
sbb
push
dec
xor
outsl
popf
xchg
arpl
je
negb
push
xchg
add
pop
frstor
outsb
push
mov
test
nop
mull
mov
insb
xor
xor
out
out
mov
or
int
xchg
or
pop
dec
mov
xor
push
jle
cli
sbb
mov
repnz
in
clc
jno
mov
and
mov
mov
push
mov
in
jmp
jb
add
jge
jg
and
push
test
push
add
and
aas
mov
push
push
or
int
jns
xor
inc
lea
or
sub
mov
mov
shl
ljmp
mov
mov
jbe
and
popf
jmp
in
add
dec
mov
pop
jns
xor
adc
inc
mov
sahf
outsl
pop
jmp
int
aas
or
scas
jo
sbb
cmp
add
add
pop
repz
inc
mov
lock
add
in
push
in
xchg
and
mov
nop
add
ljmp
inc
je
pop
xor
dec
push
jbe
jge
adc
out
sub
push
jmp
adc
and
or
fidivs
mov
into
mov
cmp
gs
cmp
call
or
jno
push
rclb
inc
shlb
aaa
iret
sar
sub
scas
push
mov
ds
cli
sub
push
test
add
mov
pop
pop
ret
push
push
nop
adc
add
in
insb
adc
push
fnstenv
dec
xchg
mov
mov
cmpsl
xchg
int
ja
lret
or
xchg
pop
jo
scas
mov
mov
cmp
in
lods
push
aad
sub
cmp
xor
and
outsb
jge
jge
ja
sbb
xchg
lods
push
cmp
xchg
stos
gs
mov
gs
fistpl
cwtl
sub
xchg
cmpsl
andl
in
lods
bnd
cli
mov
adc
movsb
sar
ss
push
iret
cwtl
test
and
lds
imul
pop
es
daa
mov
adc
addr16
enter
adc
ljmp
cltd
adc
or
out
aas
or
movsb
paddusb
int3
mov
lahf
in
dec
ss
popf
adc
pusha
cli
das
lods
iret
test
cli
lods
aam
jo
fstl
int3
xchg
sub
repz
stos
mov
add
jge
movsb
cmp
aam
jg
into
pushf
rcrl
notl
xchg
adc
out
rorb
adc
dec
mov
ljmp
mov
faddl
int3
adc
lret
adc
ret
sbb
je
fwait
icebp
popa
int
call
mov
xchg
add
daa
sbb
fst
push
mov
stc
adc
jns
out
sub
jo
and
cmp
pusha
jae
cmp
mov
push
mov
loope
stos
pop
or
xchg
jl
nop
sbbb
mov
pop
jmp
jmp
fstps
xchg
adc
arpl
loopne
jb
sub
mov
xor
loope
mov
dec
and
xchg
jb
xor
test
add
ljmp
dec
or
pusha
jns
movsb
ret
or
and
add
fxch
xor
sbb
lods
jns
stc
es
xchg
and
mov
and
mov
das
mov
pop
mov
mov
in
fisubrl
je
stos
or
fdivrp
nop
gs
les
cmpl
and
xchg
sub
icebp
es
fdivrs
xchg
jmp
in
mov
cmp
add
xchg
inc
mov
add
sahf
cmp
ss
lds
add
movsl
pop
lods
loope
jge
je
inc
sbb
call
and
mov
imul
add
test
jle
and
sbb
mov
popf
add
outsb
idivb
hlt
push
mov
pop
test
and
loope
xor
and
bound
ret
pushf
pop
xorl
lret
imul
cmp
mov
push
sbbl
mov
sar
jns
std
orl
mov
bound
loop
xor
cmp
dec
jp
cmp
and
push
mov
lahf
add
cmp
adc
jmp
fidivl
sub
pop
mov
ficoms
sub
push
push
bnd
xor
push
mov
dec
pop
xor
daa
lret
push
xchg
in
mov
getsec
mov
xchg
mov
cmp
lcall
push
fnsave
push
and
in
lods
cmp
inc
pop
pop
fsubs
adc
jnp
fistl
jo
fstpt
enter
out
scas
xor
cmp
add
cmp
push
test
popa
inc
js
or
in
jg
jae
shl
jno
or
loope
pop
fistpll
test
xchg
mov
outsb
int3
push
pop
insb
push
push
popf
int
inc
push
push
jmp
cld
sahf
loopne
xorl
cmp
jg
mov
das
add
and
cmc
ret
fnclex
loope
mov
fs
roll
mov
sub
js
je
mov
sub
cmp
inc
ret
loope
push
stos
bound
int3
mov
imulb
outsl
mov
push
popa
mov
jnp
pop
xor
xor
add
cmp
dec
jge
andl
or
inc
cmc
and
cmc
jmp
adc
aad
scas
std
adc
std
imul
push
dec
popf
fsubrs
cmp
push
int
inc
xor
push
adc
inc
mov
cli
out
cwtl
jae
sahf
icebp
mov
aaa
notb
cmpsb
pop
sahf
dec
loope
pop
in
stos
xor
inc
shr
testl
testb
adc
es
inc
stc
xor
inc
push
into
imul
fistl
dec
and
add
push
dec
jle
push
xor
cmp
stos
inc
lret
push
icebp
xchg
dec
cmc
movsl
dec
pop
jp
jp
scas
cltd
add
sbb
push
add
jecxz,pt
push
aaa
pop
inc
stc
pop
popf
mov
push
mov
cs
ss
push
insb
cmp
or
pop
mov
faddp
out
sub
mov
lcall
movsb
add
fdivl
ror
cmc
xchg
jo
jne
fcomp
cwtl
mov
movsb
jne
cmp
push
jb
dec
xchg
or
sbb
lods
and
pop
cmp
pop
imul
mov
fs
sub
mov
push
aaa
std
lahf
out
jmp
lods
subl
rorl
mov
fldenv
jnp
lret
and
push
sub
in
nop
lahf
in
sub
push
and
sbb
adcl
pop
stos
sar
dec
insl
xor
push
and
lahf
ret
cmpl
and
xor
jmp
hlt
dec
nop
icebp
push
jle
lea
adc
inc
jnp
pusha
lea
mov
imul
sub
jmp
mov
out
rcll
cmp
cmp
jns
mov
mov
nop
out
mov
outsb
test
jmp
loop
mov
imul
and
dec
sbb
notl
xor
cmp
inc
cmpsl
orl
lea
enter
aas
xor
adcl
and
pop
jb
fs
clc
xchg
dec
push
pop
push
pop
mov
and
push
cli
mov
dec
aam
mov
or
mov
call
lret
mov
xchg
addl
or
sub
addl
mov
sti
and
push
sar
mov
inc
lods
outsb
sbb
flds
or
xor
popa
push
ss
popa
pop
push
mov
shll
je
add
imul
inc
lret
sbbw
ficompl
scas
sub
icebp
into
dec
je
out
dec
pop
jmp
ja
dec
lods
pusha
in
jo
test
mov
mov
movsl
push
pop
add
lcall
xchg
mov
rorl
inc
movsb
inc
cmc
dec
push
out
enter
mov
mov
jmp
loope
inc
arpl
ret
loope
or
fstl
add
aam
inc
xchg
in
nop
xor
imul
adc
sahf
xchg
cwtl
call
or
stos
pop
movsl
ss
mov
mulb
jb
out
sbb
js
inc
repnz
gs
mov
jge
jne
test
mov
dec
in
sub
or
cwtl
icebp
and
inc
mov
ret
loope
pop
mov
das
add
mov
pop
in
jno
addr16
push
xchg
inc
insb
nop
sub
ret
add
inc
mov
and
repnz
lret
pusha
dec
mov
pop
push
push
and
push
adc
mov
sahf
jmp
mov
xchg
nop
mov
adc
mov
lea
mov
ljmp
call
leave
jecxz
lea
int3
popa
jb
mov
sbb
es
ss
icebp
sub
test
adc
mov
dec
add
mov
inc
or
adc
xchg
or
xchg
in
or
inc
xchg
sub
psubw
int3
dec
leave
adc
pop
hlt
jp
add
push
dec
xor
pop
jae
sahf
adc
xlat
push
sbb
push
add
lea
mov
inc
push
cmpsb
aad
sub
dec
push
xchg
mov
std
sub
adc
call
cmp
xor
sti
mov
in
or
mov
mov
into
mov
repz
lods
jbe
das
addr16
lods
cmp
sub
cmc
jg
push
js
stos
push
sub
hlt
sub
and
ret
pop
sub
xor
xchg
rcll
cli
loopne
out
inc
mov
adc
sub
popf
lods
mov
mov
inc
pop
push
insb
shll
sub
cmpl
push
ljmp
pushf
in
pushf
push
inc
add
pusha
adcl
rorb
pop
rcrl
enter
xor
fs
cli
and
aam
imul
cltd
push
lahf
add
inc
or
nop
daa
lods
cmp
pushf
aas
addr16
daa
jmp
or
xchg
jns
iret
dec
pop
test
repnz
jge
pop
ljmp
cmp
add
cmp
adc
imul
pop
loope
add
cmc
bound
add
cmc
fwait
jb
clc
pop
xor
xor
jp
push
mov
fs
int3
in
mov
pop
lods
mov
out
addr16
adc
push
or
jno
cltd
clc
adcb
mov
ss
finit
cmp
out
fnsave
cld
mov
pop
cli
add
xor
cmp
cmp
push
inc
fs
or
mov
or
push
repz
pop
dec
lock
xor
xor
inc
je
outsl
inc
and
nop
rorb
dec
ficoms
adc
xchg
push
inc
fdivr
xlat
inc
stos
cwtl
add
sbb
mov
pop
pop
imul
xchg
dec
push
and
jecxz
inc
notl
fisubs
insl
cmp
push
lods
nop
jnp
inc
xchg
popf
imul
or
sbb
sub
arpl
pop
bound
aad
sbbl
xchg
repz
imul
loopne
enter
mov
pop
xchg
cmp
loop
xor
jge
loope,pt
xchg
mov
hlt
fcomi
xchg
add
dec
shrl
dec
pop
jmp
aad
jmp
test
call
cwtl
jl
pusha
xchg
cmc
mov
les
test
inc
mov
fsubrl
dec
mov
insb
jg
mov
pop
mov
mov
fidivrs
lea
cwtl
mov
pop
in
push
dec
loope
cltd
aaa
daa
jp
out
and
and
loopne
add
push
push
pop
jge
or
adc
mov
add
xchg
faddp
pop
xchg
lcall
cwtl
xchg
pop
insl
pop
outsl
in
movsb
loope
enter
test
orl
scas
push
add
sbb
pop
dec
das
sti
test
mov
jno
imul
add
xorb
sub
data16
dec
outsl
aas
sub
shlb
out
loope
lret
jle
inc
xchg
jg
test
and
jne
jbe
out
push
jge,pn
shl
mov
pop
add
roll
gs
insl
hlt
xchg
mov
stc
mov
sub
mov
sahf
push
fstl
lds
pop
inc
or
mov
repnz
and
ds
lcall
xor
or
add
mov
out
repnz
dec
pop
dec
push
mov
xchg
xchg
adc
or
xor
sub
jl
jl
ror
test
xor
fldt
jle
repnz
push
stos
shrl
pop
test
lods
test
push
dec
and
dec
sarl
lret
adc
dec
sar
loopne
mov
cmpb
adc
cmpsl
xor
fildll
shrb
movsl
daa
sub
push
push
sbb
push
and
cmpsb
mov
mov
in
out
and
and
scas
pop
filds
lret
add
mov
sbb
and
clc
push
pop
cs
mov
fistpl
pop
in
fcoml
cmp
lods
add
and
idiv
leave
jae
sarl
bound
je
dec
mov
fmulp
sub
aaa
sbb
enter
and
and
pop
add
sbb
cmpsb
test
mov
inc
and
cwtl
fdivs
push
sbb
stc
arpl
mov
pushf
xchg
orl
push
shrb
into
and
js
push
addr16
loope
xchg
cmp
fdivrs
lcall
mov
mov
jno
push
popa
jb
out
sub
pop
das
loope
loopne
in
cwtl
call
push
dec
lcall
xchg
stos
shll
add
add
push
push
pop
inc
vmwrite
filds
decl
push
sbb
mov
clc
jns
mov
xor
aad
je
test
shlb
mul
push
insb
cmpsb
stos
push
mov
lahf
pop
sbb
and
cmp
insl
mov
fnstsw
push
stos
data16
aaa
mov
loop
dec
loope
pop
mov
into
mov
push
inc
in
insl
mov
fwait
sub
sub
mov
push
pop
cmpsb
mov
addb
popl
rolb
jo
addr16
and
jmp
cmp
push
test
scas
call
mov
inc
or
add
loop
jnp
std
aad
arpl
ret
ja
ret
gs
dec
pop
cmc
xchg
push
movsl
fdivp
insl
mov
inc
sbb
call
fmulp
mov
adc
mov
data16
stos
xor
xchg
mov
or
mov
jo
inc
arpl
adc
add
les
xlat
pop
lcall
loopne
push
mov
lret
add
into
sti
mov
imul
cmp
mov
popf
test
pop
add
push
outsl
push
jne
mov
inc
pop
je
iret
repz
inc
push
insb
sub
insl
pusha
sub
fisttpll
sub
fists
jmp
fwait
stos
xor
nop
mov
icebp
cmp
mov
cmc
jmp
ret
inc
push
scas
rcll
dec
cwtl
faddl
mov
stos
add
and
push
and
jbe
cmp
les
int3
pop
push
mov
test
in
cmpsb
stc
sarb
ret
loope
or
mov
fsubrs
jmp
out
xchg
sbb
dec
push
jmp
jne
cmp
adc
in
ljmp
outsl
out
ja
pop
pop
mov
mov
out
testl
inc
adcl
push
add
insl
add
add
inc
mov
push
inc
cmpsl
push
inc
push
insb
jns
mov
add
cmpl
outsl
sbb
rclb
sub
mov
xchg
adc
xor
ljmp
push
decb
sbb
into
jb
dec
out
mov
dec
mov
sbb
ja
xor
dec
out
jl
sahf
stc
repz
cmp
fnstcw
aad
dec
jp
xor
icebp
mov
sub
enter
pop
pop
cmp
lret
je
data16
and
push
cmpsl
out
sbb
mov
dec
imul
push
adc
pop
adc
cmpsl
xor
xor
fcompl
inc
shlb
push
dec
dec
cmp
inc
pop
imul
xorb
cmpsb
jnp
loopne
insb
lea
or
mov
fmuls
add
mov
dec
fisttps
sbb
repz
jbe
dec
cmp
cld
aaa
icebp
mov
jge
fldl
push
inc
test
push
push
inc
lock
in
sbb
mov
push
es
inc
shlb
adc
xor
test
mov
sahf
dec
push
xchg
test
lds
dec
roll
scas
jns
pop
fcomps
out
pop
stc
or
ret
std
xchg
or
push
jg
pop
adc
test
dec
mov
outsb
test
fistpl
sarl
pop
shrl
hlt
cwtl
sbb
loope
loopne
add
push
hlt
outsl
je
and
mov
inc
iret
xchg
fidivl
push
xchg
sti
ds
lret
in
test
loop
jp
in
xchg
mov
call
sbb
repz
xchg
adc
enter
rcr
hlt
dec
sub
jge
add
push
sahf
andb
ficompl
repz
xlat
popa
pop
cld
out
dec
xor
jmp
je
jo
movsb
mov
mov
mov
and
mov
adc
jns
inc
cwtl
pop
popf
cwtl
std
mov
ss
add
fsubrl
cltd
xor
push
cmc
cmc
sub
cwtl
jno
mov
aad
vmovd
sub
xor
pop
in
dec
push
lcall
bound
addr16
push
popa
and
orb
push
or
adc
rol
mov
lods
or
andl
fsubl
notl
push
add
add
dec
xor
push
xchg
out
inc
int
mov
dec
sub
mov
inc
insl
fdivs
pop
mov
imul
pusha
cwtl
divb
sub
push
loop
imul
test
ret
inc
jp
addr16
js
inc
mov
mov
test
mov
stos
dec
cwtl
push
sbb
into
adc
cmpsb
pop
dec
push
add
or
add
sub
popa
jecxz
or
lods
jo
js
rcrb
cld
xchg
mov
sub
loop
popf
popf
dec
lret
out
adc
lods
pop
sbbl
xor
push
xchg
xchg
cmp
fildl
loop
mov
and
mov
ja
sar
int3
inc
mov
loop
cltd
sbb
lea
dec
daa
lock
mov
mov
xor
cld
add
loopne
cmp
fcmovb
push
mov
mov
js
push
subb
call
sahf
push
inc
adc
mov
es
add
jg
inc
fadds
sar
popf
add
or
dec
sub
addr16
pusha
mov
loop
cmp
popa
insl
fisttps
lcall
decl
pop
popa
cwtl
mov
mov
in
in
arpl
andb
sbb
pop
sub
divb
scas
loopne
imul
popf
imul
sub
fiaddl
lret
cltd
fstpt
inc
fisubl
popf
cmpsl
and
sbb
push
mov
clc
aaa
loop
push
insl
fwait
push
dec
neg
inc
out
pop
scas
cmp
cwtl
dec
add
stos
or
pushf
popf
mov
adc
out
jns
into
mov
sarb
and
iret
neg
in
cmpsl
or
or
cmp
inc
test
mov
rolb
shll
cwtl
out
dec
add
xchg
xor
push
outsl
jl
scas
leave
dec
stos
mov
repz
jecxz
mov
mov
gs
sbb
dec
inc
js
gs
ss
fsubl
xor
mov
jb
sti
popf
jp
jnp
sbb
jmp
sbb
sbb
jl
fsubr
mov
fnstsw
lds
mov
adc
pop
insl
add
mov
sub
shll
pop
and
or
fldl
outsl
mov
mov
adc
and
pop
cmp
into
sbb
cmp
scas
cli
inc
xor
xor
repz
int3
es
jg
insb
pop
push
dec
add
lret
xchg
xchg
fsubrl
xchg
sub
aam
loope
out
sub
cli
jnp
mov
push
xchg
iret
push
adcb
scas
pop
cmp
mov
mov
adc
js
repnz
or
sub
pop
sbb
lock
clc
or
mov
push
outsb
shlb
cmp
pop
test
arpl
lock
popf
addb
ds
sti
imulb
sbb
jge
mov
sub
push
or
rol
lret
push
movsb
push
movsb
in
inc
pop
jle
mov
pusha
scas
pop
cmpsb
xchg
shlb
fidivrl
xor
das
mov
and
dec
ljmp
cmp
sub
cmp
dec
imul
ret
sbb
dec
fdivs
fists
sbb
mov
mov
js,pn
sub
xor
sub
xor
inc
jbe
mov
lcall
das
inc
ret
mov
adcb
ror
es
fnsave
nop
jnp
mov
push
add
subl
pushf
ds
dec
pop
or
mov
mov
stos
dec
xchg
mov
iret
imul
cmp
stos
add
xor
idivb
push
xchg
hlt
fwait
test
movsl
add
jle
pusha
jns
rcrl
inc
cmc
sti
mov
cld
xchg
test
aas
pop
mov
xchg
mov
jbe
inc
and
ljmp
mov
mov
cmc
in
lret
xchg
arpl
insb
jmp
dec
gs
bound
iret
repnz
and
aaa
bt
jmp
mov
div
mov
push
es
lods
ljmp
cwtl
inc
inc
insb
rcll
out
cltd
adc
movsb
bnd
mov
sub
push
push
out
stos
lock
mov
or
cs
loope
imul
adc
push
dec
mov
hlt
hlt
arpl
and
clc
rep
mov
bnd
push
mov
mov
jno
fmull
or
test
fildl
or
adcl
add
sbb
adc
and
nop
dec
adc
ret
jmp
lcall
and
hlt
cmp
inc
sub
lret
mov
es
aam
adc
push
sub
jno
xlat
incl
aaa
or
cmpsb
or
stos
mov
push
add
jbe
int
mov
cli
jg
xchg
cmp
push
test
push
sub
mov
rorb
jle
lret
xchg
push
mov
clc
int
sbb
repz
jl
ja
xchg
xchg
rcrb
mov
imul
hlt
loope
movsl
cmc
xchg
lret
and
stos
out
sbb
out
adcl
ja
mov
push
cs
negl
push
add
push
xor
insl
bound
sub
push
pop
imul
xchg
aas
fists
push
andb
push
jo
iret
movsb
dec
cmp
lock
outsw
je
push
mov
sub
into
mov
bound
cmp
faddl
movsb
dec
push
ja
fs
shr
mov
in
mov
or
sub
jns
push
loop
pushf
sub
call
dec
cmp
pushf
cmp
jo
test
fldl
jg
or
xchg
mov
cmp
mov
lret
mov
or
pop
lret
aad
iret
jno
pop
aam
arpl
sbb
int3
adc
lret
test
subb
adc
popf
jge
mov
sbb
js
mov
lret
xchg
jge
mov
insl
add
fisubrl
out
xor
push
xchg
lcall
mov
adc
inc
arpl
mov
xor
mov
rcrb
jns
ds
lock
es
clc
add
data16
out
leave
push
push
jb
dec
pop
in
leave
fadds
mov
jmp
test
fs
fs
dec
lret
outsb
loope
ffree
mov
jns
jbe
add
sbb
stos
fstl
mov
mov
dec
out
pushl
and
std
xor
ja
mov
and
scas
xor
out
cmpsb
mov
lds
insl
push
insl
cmc
pop
cmc
in
dec
sti
int
lods
enter
ss
das
dec
pop
mov
popf
out
popf
mov
and
sahf
leave
push
xchg
cs
lock
cmp
ret
insb
rcrl
call
loope
adc
or
adc
addr16
lret
ss
inc
loope
lock
pop
fnsave
jmp
das
loope
adc
loopne
xor
jnp
movsb
jecxz
adc
es
mov
outsb
sbb
sub
or
or
gs
xlat
loop
sub
sbb
jae
scas
cli
xor
fwait
inc
fists
inc
sbbb
mov
dec
pop
cmp
lock
out
inc
ret
cmp
jge
pop
aaa
repnz
push
jb
xchg
xchg
sub
xlat
jae
inc
jo
dec
mov
adc
inc
loopne
and
stos
gs
imul
dec
adc
shll
add
imul
xor
cmp
aas
xchg
jno
loop
aaa
and
enter
leave
rcrl
cmpsl
and
clc
lods
cmp
test
push
imul
sub
outsb
adc
fld
test
mov
test
femms
int3
cwtl
aas
addr16
xor
dec
pop
add
mov
in
fcompl
sbb
adc
inc
and
inc
fcmovnb
mov
or
add
push
push
mov
add
js
fwait
push
sbb
dec
inc
scas
jnp
push
clc
dec
pop
jae
adc
loopne
sub
cmp
test
imul
test
xchg
insl
jp
adc
cld
repnz
mov
ret
mov
into
cmp
call
mov
mov
xchg
call
inc
movsl
mov
xchg
andb
push
imul
ss
mov
je
mov
adc
jbe
mov
rcll
dec
cmp
loope
jae
rorb
test
inc
xchg
adc
test
jg
sub
insl
sub
lds
fldenv
xchg
fldl
sub
aad
xchg
pop
arpl
int3
in
push
out
in
in
inc
pop
dec
adc
and
std
pop
dec
adc
inc
popf
xor
dec
inc
aas
fistpll
inc
xchg
push
mov
lar
test
addr16
jns
xor
xchg
decl
fsubrl
cwtl
xor
test
inc
xlat
scas
popa
mov
dec
icebp
pushf
push
push
je
imul
loopne
cmpl
push
loopne
mov
lret
push
xor
out
mov
and
jo
lret
in
jmp
mov
ss
insb
mov
cmc
insb
and
bound
cmp
pop
sub
mul
mov
mov
out
mov
cmp
enter
lret
roll
push
push
mov
pusha
fsubrs
jmp
int3
dec
imul
insl
je
mov
test
bound
ss
dec
xor
jae
pop
rcrb
jecxz
dec
adc
mov
jge
aad
xchg
aas
mov
adc
jne
dec
or
lds
sbb
pop
sbb
idivb
xchg
mov
pop
cmp
enter
dec
lahf
test
push
jo
dec
cmp
sbb
cmpsb
insb
test
sahf
push
xchg
xor
into
mov
mov
push
js
dec
xchg
mov
out
mov
sti
in
push
adc
xlat
out
mov
es
ljmp
inc
rorb
mov
stc
out
arpl
call
mov
jl
push
or
xor
les
or
jae
test
sbb
ja
mov
xchg
xor
aaa
fs
scas
popf
mulb
jp
out
ret
push
leave
sbb
add
movsb
into
sub
cmp
jnp
sti
in
insl
cmc
in
outsb
es
or
pop
aaa
sub
pushl
ja
call
cmc
lcall
push
inc
adc
xor
dec
and
in
out
cmp
dec
imul
cmp
out
stc
jb
cmc
data16
dec
jo
ds
mov
dec
test
push
stos
push
xor
aaa
popf
scas
mov
or
fcmovu
sub
xor
sub
adc
cmp
xchg
popf
jae
pop
fs
and
mov
js
gs
in
call
lods
or
pop
adc
pop
test
mov
mov
jmp
sbb
xor
sub
insb
or
push
pushf
jne
std
icebp
adc
js
lcall
mov
ret
mov
pop
inc
ja
daa
pop
outsb
or
add
mov
xor
mov
sbb
inc
out
push
sbb
lods
jnp
jg
push
jo
pop
iret
xchg
addr16
and
into
ss
sub
les
dec
adc
cmp
ficompl
add
jp
fisttpl
pop
mov
xorl
cld
jge
jl
pop
jecxz
in
in
and
jmp
or
push
pop
loopne
mov
daa
dec
addb
mov
lret
loopne
jb
inc
jbe
xlat
mov
mov
push
loope
jmp
scas
push
fwait
add
mov
ret
adc
mov
mov
out
mov
ljmp
cmpsl
push
je
es
rolb
jno
mov
insl
std
test
arpl
dec
push
cmp
pop
or
mov
cmp
mov
dec
adc
and
mov
pop
xor
mov
stos
xor
dec
adc
or
aaa
mov
fidivs
xchg
or
xchg
xor
dec
add
clc
jno
adc
clc
pop
jno
stc
xorl
stos
push
or
in
fadds
lret
into
xchg
scas
jle
insl
mov
adc
jp
mov
pop
testl
mov
cmp
out
mov
push
je
jno
add
jns
jl
arpl
pop
fadds
ficompl
stos
pop
ficomps
dec
ret
jge
and
xor
aas
pop
cmp
xor
sub
dec
xchg
mov
adc
or
xor
popa
rclb
lcall
call
aaa
xchg
sbb
jo
sahf
mov
add
add
movsb
cli
in
jne
and
xor
dec
jp
push
in
daa
push
outsl
ljmp
cmp
jbe
mov
loopne
aam
mov
dec
int
lea
dec
mov
popf
push
test
fcoms
sbb
nop
jns
add
clc
jmp
test
ret
jp
add
loopne
push
or
mov
xor
lods
jae
jge
jns
xor
add
adc
ja
outsb
sbb
lods
add
scas
mov
mov
in
std
cwtl
pop
inc
vpsrlvd
inc
stos
jg
and
or
jp
cmp
dec
hlt
jbe
hlt
das
adc
push
sbb
jne
jp
adc
mov
mov
sbb
in
mov
sbb
lahf
in
ljmp
dec
insb
scas
lods
xlat
cli
and
sub
ret
xlat
sub
rorl
movsb
inc
fs
adc
fstl
inc
inc
adc
out
rorl
ljmp
fs
mov
mov
adc
leave
and
je
lret
mov
mov
and
mov
jb
addr16
inc
and
mov
in
xchg
and
or
pop
add
lock
std
inc
jns
jb
dec
adc
xchg
mov
mov
inc
int
gs
ja
js
push
test
jae
pop
dec
outsb
mov
inc
daa
pop
sub
movb
out
bound
pushf
insl
inc
js
push
pop
push
loop
add
mov
mov
clc
call
pop
fcompl
add
imul
cmpsb
add
sti
add
outsl
lret
fwait
dec
pop
cltd
mov
cmp
clc
scas
add
pop
pop
push
lods
mov
mov
jae
adc
pop
and
lcall
lock
aaa
jb
adc
mul
cmovns
xor
mov
mov
inc
adc
and
pop
xchg
mov
jle
adc
mov
sbb
mov
jmp
outsl
add
lcall
xchg
push
xchg
orb
xchg
bnd
pushf
sbb
pushfw
or
dec
mov
sbb
or
stos
cld
icebp
jmp
inc
push
popa
stos
dec
push
sub
mov
fidivrl
mov
lods
and
xchg
xchg
sub
insl
and
inc
jnp
iret
lret
bound
sbb
jb
dec
pop
aam
mov
test
adc
pop
aam
sub
out
sbb
mov
cmpsb
in
popl
mov
add
xchg
adc
insb
daa
popa
scas
mov
push
cmp
xchg
dec
aaa
ja
or
adcl
addr16
sarl
arpl
or
gs
fadds
sbb
das
adc
or
pop
clc
leave
push
ds
pop
xchg
push
rcrb
lret
dec
sub
insl
and
pop
push
sbb
xor
pop
cmpl
pop
inc
add
scas
stos
shlb
or
fs
add
shrl
pop
scas
fwait
xchg
in
stc
movsb
mov
lret
ljmp
fsubs
loope
xor
in
insb
scas
ljmp
xchg
fidivrl
out
scas
add
add
sub
into
add
sub
sub
cmpsl
loope
std
insl
xor
out
mov
repz
ret
pop
mov
fs
scas
enter
mov
popf
pushl
and
call
out
sub
aaa
arpl
rorl
add
push
and
shrl
out
push
push
pop
ror
in
and
adc
add
mov
cwtl
inc
data16
aam
jo
shr
sarb
jo
mov
mov
aad
int
mov
add
push
bound
enter
adc
push
lods
int
xchg
lds
out
pop
or
xor
cltd
idiv
fmulp
icebp
add
or
dec
mov
mov
popa
sub
and
push
outsl
xor
insb
cltd
cmc
imul
jg
cs
xchg
xchg
sub
jno
pop
xchg
adc
lods
jns
inc
jae
sbb
testb
xchg
jecxz
in
das
xchg
inc
imul
les
or
xchg
pop
dec
cld
push
dec
lret
or
mov
adc
rorb
cmpsl
mov
lds
fsubr
lock
bound
adc
push
fldl
inc
inc
shlb
mov
aaa
cmp
jno
jnp
dec
xchg
out
aam
out
pusha
stos
loopne
sbb
data16
and
xlat
and
out
arpl
xchg
cmpsb
fisubrs
pop
dec
je
sub
lds
into
repnz
xchg
jg
scas
imul
sub
jmp
inc
cld
iret
mov
filds
inc
add
xchg
js
sub
push
hlt
test
mov
rorb
xchg
or
dec
mov
jmp
adc
outsl
push
sub
xor
sarb
sbb
push
adc
sub
adc
xchg
push
cld
pop
add
push
mov
sub
mov
sti
pop
aaa
js
mov
into
sbb
sub
sbb
adc
pushw
sarb
cli
nop
mov
xchg
jg
nop
insb
and
es
popf
push
xchg
arpl
pop
cbtw
push
mov
mov
movsb
or
das
lret
mov
movsb
mov
rcll
and
nop
xchg
inc
shrb
mov
test
lret
pop
xchg
mov
mov
xor
out
stos
repz
jne
jb
xor
sbb
mov
cmp
add
pop
sbb
xchg
jb
add
popa
pop
popa
mov
sbb
and
mov
test
jbe
mov
ficomps
nop
adc
neg
movl
imul
fs
mov
js
loop
or
popl
loope
sbb
or
xchg
je
int3
jno
inc
std
ret
xor
in
rolb
data16
and
inc
imul
cmp
xchg
pop
xchg
shll
mov
pop
pusha
dec
sbb
jl
inc
pop
add
loope
sub
hlt
cmp
ficoml
push
icebp
cmp
xchg
pop
push
pop
lahf
movsl
icebp
aam
pop
fs
es
mov
popa
das
adc
leave
or
test
outsl
ss
add
loope
sbb
xor
int3
nop
inc
outsl
repz
xor
push
push
and
and
out
sbb
pminsw
aaa
push
xchg
movsb
rorl
push
dec
xor
jnp
ja
adc
mov
push
lret
sti
xchg
decb
loope
push
lods
add
xor
mov
pusha
xchg
imul
ret
inc
or
jnp
shlb
sub
lods
in
out
inc
dec
push
sbb
jge
and
lea
insl
sub
push
mov
lret
mov
sbb
loopne
jns
hlt
jbe
mov
out
add
mov
test
lahf
aad
faddp
cmpl
test
cli
adc
cmp
xlat
jno
ss
repnz
sbb
inc
pushf
inc
sbb
daa
pop
sub
xor
jg
popa
aaa
outsb
adc
xchg
dec
push
scas
repz
testb
xor
out
sub
jge
push
inc
loopne
lcall
dec
mov
xchg
mov
aam
inc
stos
lods
out
inc
add
xchg
hlt
ds
mov
sub
mov
testb
paddusb
enter
inc
jge
out
inc
divl
clc
inc
adc
lret
inc
push
pop
cmc
add
jp
add
pop
mov
mov
push
jo
push
out
push
push
loope
dec
subb
mov
jns
popf
js
imul
sub
out
push
mulb
inc
sbb
aam
movsb
in
lods
xchg
subb
pop
xlat
xlat
sbbb
int3
jnp
mov
xchg
xor
mov
jns
movsl
nop
dec
xchg
mov
arpl
lret
int3
pop
incl
mov
sti
cmp
loope
ljmp
push
add
insb
sub
lahf
jecxz
or
inc
push
or
je
loop
mov
lcall
push
movsb
fisubrl
inc
jne
insl
icebp
dec
xchg
cmp
hlt
add
inc
icebp
pop
inc
stc
out
aad
test
lea
lock
sub
inc
jns
push
xor
dec
jbe
push
cwtl
lret
popa
aas
push
test
push
add
lret
mov
jecxz
mov
sbb
insb
jb
mov
pop
xchg
out
xor
test
mov
ljmp
ret
cwtl
jl
sub
scas
or
jle
mov
imul
pop
in
jo
ffreep
xor
cmp
mov
ss
enter
jp
pop
mov
ds
fisubrs
sbb
lahf
int3
lds
mov
jl
inc
neg
mov
jno
cmp
out
sub
rorb
jge
rolb
imul
mov
inc
mov
in
xchg
loop
xor
pop
push
stos
nop
mov
cmp
out
into
aaa
or
je
in
lahf
imul
jle
push
mov
lcall
fwait
and
lods
in
pop
cmp
mov
sub
jb
jbe
jnp
xchg
dec
cmpsl
sbb
xlat
in
lds
push
inc
inc
mov
dec
fnsetpm(287
fistpll
push
fimull
and
add
xlat
mov
dec
inc
rorb
jg
repnz
lret
mov
hlt
enter
rsqrtps
cmc
push
cmpsb
test
fwait
push
sbb
cmp
pushf
mulb
insl
js
sbb
adcb
and
sub
pcmpgtb
pop
std
fimull
fs
xchg
inc
adc
outsb
push
cmp
jbe
aad
xlat
mov
mov
adc
inc
lcall
or
movsb
xchg
or
std
test
rcrl
addl
movsb
mov
or
aaa
stc
int
les
mov
pop
sbb
inc
or
mov
dec
mov
cmp
pop
add
sub
scas
movsb
ffree
addr16
mov
fsubrs
fnstcw
aam
xchg
xchg
stc
str
aad
rorl
fdivrp
aam
mov
inc
sbb
lahf
test
sub
into
xchg
xchg
cmp
not
stos
pop
gs
in
pusha
ret
xor
jnp
ficoms
xor
pop
mov
lock
jp
daa
add
xlat
scas
daa
pop
xor
rclb
mov
sbb
test
cmp
xchg
jbe
test
jmp
fdivrl
into
push
sbb
cltd
andb
and
inc
fdivrs
cmp
add
adc
test
push
shrl
or
mov
std
xchg
push
sahf
adc
orb
mov
xchg
mov
aam
inc
iret
jg
addl
sbb
inc
pop
repz
inc
adcl
daa
xorb
inc
xor
stos
in
cmpsb
lds
pop
insb
mov
mov
push
fsubl
int
in
jns
pop
mov
out
out
xchg
push
cli
fists
or
xchg
out
xchg
cs
inc
es
insb
jle
outsl
arpl
mov
push
push
xor
add
mov
and
jbe
mov
std
mov
push
out
xor
and
xlat
jge
out
mov
es
pop
mov
xor
cmp
xlat
sbb
clc
pop
mov
push
push
cs
mov
add
js
cmpsb
pusha
xchg
repnz
aam
movl
mov
in
in
mov
push
mov
sub
cmp
pusha
and
insb
xchg
loop
add
jo
xor
xchg
inc
loope
in
xchg
mov
xchg
and
stc
inc
insl
jns
sti
jp
out
mov
lahf
dec
in
push
jo
and
loopne
scas
cmp
jno
cmp
sbb
mulb
sbb
pop
aaa
addr16
mov
xchg
pop
xorl
sti
leave
push
push
rclb
daa
outsb
hlt
leave
pop
fstpt
pop
subl
mov
popf
xchg
daa
mov
cltd
xor
xchg
pusha
daa
dec
push
mov
leave
mov
aas
push
and
cli
insb
gs
test
inc
push
or
test
out
pop
mov
repnz
clc
or
out
adcl
rorb
cmc
mov
xchg
mov
outsl
out
pop
enter
jge
add
or
pop
jmp
jae
out
push
add
in
jmp
dec
push
gs
and
dec
jp
jle
imul
testl
xchg
fisubrl
pop
pop
arpl
stos
mov
mov
shll
enter
xchg
xchg
fdivr
inc
icebp
sub
lret
shl
push
lods
into
xor
push
push
adc
xor
add
into
jge
cs
xor
jle
dec
outsl
push
jne
clc
je
cmp
test
or
bound
pop
sub
in
ret
and
sbb
das
gs
adc
mov
pop
ret
mov
ljmp
add
xchg
or
sbbl
jo
dec
mov
iret
and
fisttpl
lcall
ljmp
dec
cld
cmp
mov
movsb
movsl
clc
js
jle
das
sub
mov
jno
popa
inc
outsb
dec
push
movsl
push
out
mov
pusha
clc
ret
fwait
sub
mov
sbbl
test
xchg
out
xor
pop
mov
testb
hlt
or
dec
cltd
ret
test
mov
leave
out
push
sti
sti
mov
test
sbbl
jecxz
jmp
rol
mov
xchg
push
xor
aad
scas
mov
inc
aas
cmp
mov
adc
sub
pop
jns
sub
pop
add
rcl
dec
lahf
or
sbb
cltd
pop
adc
xlat
and
lds
pop
inc
loop
inc
ds
add
das
lret
sub
imul
or
add
mov
mov
fstl
rolb
pop
into
insl
in
cmpsb
gs
sbb
popf
inc
test
and
inc
inc
jl
push
sbb
xchg
fstpl
adc
push
jae
lock
xor
cmp
adc
xorb
outsl
sub
cltd
mov
push
inc
xor
push
sbb
sahf
and
inc
add
movsb
mov
dec
cmc
dec
inc
fsincos
fwait
push
cli
loope
ret
lret
sbbb
shrl
mov
cmp
xor
popf
mov
fcmovu
lahf
leave
sar
out
adc
mov
jge
in
jno
ljmp
and
scas
bound
sub
jecxz
call
stos
pop
pop
dec
inc
sub
adc
xchg
fisttps
hlt
insb
ds
push
scas
sub
add
jbe
enter
cmp
xor
xchg
cld
mov
fcmovnb
mov
test
mov
in
push
lock
rcrl
lret
xchg
jns,pt
lret
inc
jbe
mov
insl
sub
pop
iret
inc
mov
loopne
dec
mov
es
enter
mov
call
adc
subb
hlt
jecxz
lea
insl
int3
in
sub
xor
pop
adc
int3
sti
movsb
addl
xor
pop
inc
or
xchg
lea
sbb
inc
rclb
fistl
int3
aad
and
loope
int
and
and
sub
adcb
je
cmpsl
outsb
push
scas
cmp
inc
dec
sub
jnp
dec
stc
jb
lcall
lcall
dec
xlat
jmp
popa
cmp
rclb
imul
fcomip
mov
mov
cmpsl
push
xlat
push
dec
popf
adc
negl
cmpsb
ja
lea
and
xchg
dec
mov
jns
aas
lret
test
mov
xchg
mov
rep
mov
mov
cmp
fsubl
push
stos
dec
mov
data16
xor
ret
in
cmp
inc
cmpsl
add
stos
mov
ror
mov
xor
add
and
jne
xchg
dec
aam
adc
jp
xor
hlt
jl
pop
cmp
pushw
sub
or
int
pop
sbb
mov
xor
icebp
pop
push
jno
out
xlat
cmp
mov
sub
inc
leave
test
sahf
es
mov
cli
out
in
adc
dec
or
jo
cli
insl
jo
fdiv
les
cmp
sbb
cmp
stos
dec
rcll
add
adc
scas
pop
mov
push
jp
loopne
filds
arpl
imul
js
mov
jecxz
xchg
jge
push
add
add
in
cmpsb
or
jp
mov
ja
imul
loop
scas
and
and
jmp
jns
in
push
pop
ss
fdivrl
cwtl
js
mov
test
cmp
pop
dec
sbb
xchg
cmpsl
and
loopne
sar
bound
sub
repnz
mov
inc
pop
test
xchg
xlat
inc
sahf
aam
jno
shl
and
or
faddp
inc
popw
mov
sti
pushf
jp
push
ud1
push
jnp
cmp
sar
mov
iret
cmp
xchg
inc
dec
rdpmc
aas
das
fs
pop
repnz
enter
jbe
subb
add
aad
sahf
jle
jg
repnz
cltd
cwtl
lret
inc
jne
and
sbbb
stc
sti
inc
ja
es
lret
mov
cmp
ja
xor
jno
fisttpll
aaa
leave
add
out
jno
jnp
push
pop
std
dec
mov
jl
outsl
xchg
push
adc
jl
fidivrl
push
jmp
rol
sub
dec
ror
fldt
hlt
int
and
cld
add
adc
sbb
jge
adc
test
push
dec
test
fsub
dec
cli
mov
aad
xchg
fcompl
cmpb
insb
test
movsl
add
jp
daa
adc
jecxz
outsl
mov
les
nop
test
addr16
mov
jb
sbb
mov
lret
movsl
in
inc
fisubrs
fwait
mov
xor
xchg
add
sub
insl
sti
rcrb
lret
fwait
imul
adc
mov
sbb
test
jle
cltd
stos
dec
ljmp
adc
fisttpl
and
ficompl
pop
push
cmp
mov
push
mov
mov
and
addr16
testb
cmp
arpl
push
xor
lcall
push
dec
test
ret
and
mov
outsl
xor
or
arpl
pop
pop
jge
inc
in
les
mov
test
xchg
inc
and
lcall
push
outsb
test
sysret
imul
es
inc
push
mov
xchg
xchg
aaa
rorl
xchg
std
push
or
aam
and
lods
mov
jge
insl
sbb
cld
xor
push
inc
call
test
shl
mov
add
into
in
and
adc
loope
mov
cmp
inc
sahf
inc
push
add
jmp
mov
pop
push
push
push
xor
subb
andl
outsb
jge
gs
loopne
cmp
jp
push
cmpsb
mov
std
or
and
mov
leave
mov
sbb
ds
mov
dec
jg
jle
adc
cmp
adc
mov
adcl
stos
jge
call
jne
xchg
jg
mov
xorb
or
pusha
jecxz
pushf
sub
jns
push
fs
fs
jno
dec
xchg
ds
stc
pushl
enter
xchg
roll
imul
push
xchg
xchg
adc
icebp
jae
push
jp
fisubl
mov
fdivl
gs
lret
dec
mov
mov
add
sub
push
and
dec
jbe
popf
movsb
pop
fsubl
popa
sub
lret
and
fnstsw
ljmp
jle
lcall
cmp
mov
pop
mov
jmp
popa
imul
aas
pop
mov
rcr
aam
cmp
push
aas
jae
inc
add
jle
dec
add
cmp
push
sub
std
cmp
lea
cmp
inc
add
lret
dec
minpd
xor
push
jb
in
cmpsl
jp
subl
je
mov
xchg
lods
pop
push
aam
and
mov
std
xchg
jnp
addr16
sub
pop
xchg
cmp
xor
jecxz
aad
xlat
aam
in
outsb
cmp
jne
cmp
daa
or
shrl
inc
das
pavgw
out
movswl
or
mov
dec
stos
hlt
xor
pop
dec
movsb
xchg
stc
mov
jl
lcall
pop
aam
lock
mov
nop
xlat
fcoml
add
dec
insb
fsub
je
scas
aam
pop
scas
bound
push
jnp
orl
mov
rorl
sub
mov
sbb
pop
or
sub
xchg
jns
mov
sub
sub
pop
pop
push
lcall
adc
inc
in
push
imul
lock
mov
in
movsb
jnp
jp
popa
rclb
push
mov
and
leave
inc
in
orl
mov
dec
jmp
fnstcw
cld
clc
pop
imul
movsb
aam
pop
popf
dec
lds
push
repnz
sub
sub
or
mov
or
pop
xchg
js
pop
std
inc
pop
iret
add
xchg
insb
dec
pop
std
sbb
outsb
fcomps
adc
aam
mov
mov
sbb
jl
jle
xor
repnz
scas
inc
xor
sub
mov
cmp
pop
mov
cmp
push
xor
mov
ficoml
mov
fidivl
jp
and
adc
mov
jne
add
fdivrs
ljmp
sub
sub
iret
add
pop
or
rolb
popa
mov
ds
pop
inc
cmp
int
mov
fstps
xor
lods
dec
pop
adc
test
pop
ret
nop
fldt
les
inc
loop
enter
inc
or
or
inc
jns
inc
fdivr
push
jae
popa
pop
stos
mov
shrb
cmp
lret
cld
sub
jns
cltd
repz
das
xchg
xchg
jns
nop
mov
mov
jns
adc
int
insl
mov
pop
adc
jmp
cmpl
pop
jo
bound
push
stos
adc
lcall
jle
insb
int3
and
je
into
jl
dec
mov
movsl
mull
mov
loop
jge
jae
mov
add
cmc
push
push
inc
addr16
call
sub
lret
jno
dec
in
es
test
cmp
jae
sub
or
and
pop
roll
pop
ficoms
pop
mov
mov
fldl2e
push
sub
jb
ret
pop
es
dec
shr
dec
fnstcw
jns
movsb
push
and
stc
fistpll
leave
arpl
sbb
lcall
js
sbb
fisttps
and
or
push
xor
fwait
sbb
mov
mov
push
mov
mov
pop
ds
sbb
push
push
data16
mov
jbe
adc
popf
cltd
mov
les
fstpt
mov
in
ss
sarl
or
stos
enter
cmc
jno
xchg
stos
leave
push
sub
sti
xchg
ret
mov
mov
shrb
xchg
mov
iret
scas
cli
incl
ds
sub
fnstenv
sub
sahf
dec
std
aaa
gs
mov
addr16
ss
add
test
ficoms
data16
movsl
jl
adc
inc
cmpsb
jbe
or
pushf
mov
lock
fimull
imul
adc
arpl
leave
or
push
inc
inc
jbe
inc
mov
into
test
imul
and
add
push
push
ret
add
inc
sub
cli
and
imul
dec
ffree
outsl
aad
inc
dec
adc
sbb
sbb
cmp
cmp
rorl
aam
pop
fwait
or
idivl
movsb
mov
imul
jmp
decl
out
cld
hlt
adc
aad
sub
pop
movsb
cmpsb
rol
testb
in
dec
aas
add
daa
out
cmp
test
adc
pop
and
shlb
add
dec
push
pop
movsb
call
sub
sub
mov
lcall
das
mov
xor
aad
in
clc
push
fidivrl
lods
and
faddl
jecxz
push
nop
sbb
and
pop
mov
outsb
nop
aas
xor
iret
sahf
in
icebp
xchg
sub
dec
shll
pop
lret
rclb
les
push
pandn
stos
push
sub
xor
ljmp
sti
cmpsb
inc
leave
jb
dec
pop
test
mov
jno
dec
lea
movsb
jno
jmp
push
add
nop
inc
in
mov
cmp
xor
pop
dec
jg
ljmp
adc
das
out
dec
mov
es
and
loop
shl
mov
repz
cmpsb
cmpsl
fidivs
clc
xor
insb
sbb
pushf
fmull
pop
addr16
ds
cmc
push
adc
test
jg
dec
sbb
jmp
lds
adc
call
dec
mov
pop
frstor
or
ss
aas
test
ret
dec
lret
mov
fs
sub
cmc
pop
cmovns
or
pop
shll
add
cmp
stos
mov
out
aam
mov
jo
fnstsw
fiaddl
popa
leave
jl
adc
mov
std
jnp
daa
cld
and
lret
xchg
jge
sarb
xor
ret
inc
stc
inc
jp
sbb
or
ja
jp
push
bound
popf
ret
or
mov
stos
jnp
shlb
or
push
dec
aas
pop
cmpsb
iret
aam
xor
ljmp
push
mov
fistl
inc
fwait
jb
sarb
push
int3
xchg
sbb
pop
xchg
std
loop
mov
mov
aas
ss
out
insb
jno
out
xor
js
pop
ja
adc
pop
dec
jo
in
pop
not
xchg
push
cmpsl
mov
pop
popa
jnp
in
cmpsb
mov
mov
mov
mov
and
in
test
cli
push
push
outsl
sub
mov
stos
sub
xor
inc
push
cmp
dec
mov
or
sti
xor
or
dec
aad
mov
jmp
imul
sbb
sar
dec
add
lods
out
mov
iret
mov
and
add
push
xchg
fstpl
mov
push
test
xchg
cmpsb
and
and
insb
out
movsl
test
dec
xor
add
or
cmpsl
adc
adc
push
lret
or
ja
sub
lea
fs
adc
and
out
daa
addr16
divl
mov
sbb
pop
xor
sti
xchg
clc
int3
vmaxps
ret
push
jp
mov
rcl
xor
cmp
enter
cmpsl
in
lcall
sbb
pop
fldt
xchg
mov
cld
fwait
loopne
call
scas
mov
mov
cmp
stos
jbe
sbb
add
add
rep
filds
inc
mov
subl
pop
lea
adc
fimuls
cltd
int3
and
add
test
sarl
mov
popf
iret
arpl
ja
stos
call
stos
sbb
and
cwtl
fcmove
aaa
push
sbbb
fmull
sub
lret
jge
js
shrl
and
das
repz
jnp
pop
jmp
mov
test
fistps
ret
gs
inc
and
mov
xchg
aad
and
filds
in
jbe
dec
test
rorl
fnstsw
fwait
add
in
dec
sub
pop
inc
ret
stc
sub
push
adc
ja
inc
sub
loop
xor
inc
mov
mov
adc
add
pop
je
pop
mov
mov
xor
inc
inc
mov
int3
mov
adc
pop
clc
or
jge
pop
aaa
dec
cmp
mov
mov
rcll
mov
or
lahf
cmp
into
add
jns
mulb
pop
push
daa
push
mov
insl
mov
ljmp
push
xor
mov
hlt
cmp
mov
shrl
add
mov
jecxz
sarl
icebp
sbb
jb
fwait
cli
xlat
shl
jnp
mov
mov
incb
lea
inc
push
sar
cmp
nop
insb
movsl
popf
mov
jmp
imul
pop
sub
push
push
loope
je
paddusw
and
or
jg
push
jne
outsb
jmp
sahf
in
imul
mov
int
mov
add
pop
cmc
jo
repnz
dec
or
es
out
jecxz
xchg
xor
fiaddl
repz
cmp
enter
das
fimuls
mov
jo
cli
mov
stos
add
repz
xor
cs
xchg
pop
stc
mov
pop
lea
mov
jecxz
dec
jg
sbb
aas
xor
mov
fidivl
test
jbe
dec
pusha
js
xchg
mov
jp
cmp
dec
jbe
lret
in
xor
push
and
jecxz
test
mov
or
adc
push
push
hlt
xor
sbb
cs
xor
loop
mov
fidivs
adc
lock
lods
out
mov
psubq
dec
gs
dec
cmpsb
lret
jae
lods
mov
stos
sbb
push
cmp
sbb
pop
es
xlat
jnp
and
scas
icebp
pop
or
lret
je
fwait
mov
jmp
push
sub
out
dec
je
push
data16
inc
or
into
movsb
mov
dec
jne
js
subb
pop
loope
mov
jle
add
scas
int3
repz
pop
fisubrs
or
mov
pushf
fsubl
lds
mov
xchg
dec
cltd
mov
lret
xchg
sbb
leave
fs
iret
imulb
hlt
daa
mov
cmp
movsb
adc
xsaveopt
add
jecxz
scas
repz
daa
aaa
loop
sbb
pushl
push
pop
xchg
sbb
jno
sbb
test
sbb
popa
add
lahf
pop
push
mov
dec
cwtl
push
mov
lret
ds
cmp
mov
mov
pop
outsb
loopne
xchg
sbb
rcrb
out
mov
test
mov
cmpsb
cs
inc
loop
dec
and
adc
into
aam
pop
mov
shl
call
test
dec
cli
lods
xor
adc
jae
add
mov
fs
fsts
mov
fbstp
aad
dec
sub
shld
outsb
add
sub
sub
and
cmpsl
arpl
mov
mov
add
push
inc
clc
jo
fisttpl
and
push
add
int3
mov
ja
scas
int
mov
sub
cld
lea
jo
push
icebp
cmpsb
or
mov
jo
insb
loopne
cltd
pop
jb
and
in
inc
push
movsl
insb
sub
inc
sbb
pop
push
mov
les
clc
xchg
addr16
and
add
adc
jle
roll
fiadds
cmp
cmp
cs
push
mov
dec
sub
jno
pop
pop
cltd
fucom
in
dec
addb
inc
or
sbb
jl
mov
or
xchg
add
inc
les
or
push
adc
pop
pop
or
push
mov
sub
idivl
cld
adc
test
leave
pop
adc
clc
jo,pt
pop
pop
test
xchg
out
cmp
jno
jl
loopne
sbb
mov
or
xor
and
arpl
es
dec
cltd
add
add
dec
adcb
mov
mov
std
jl
fstpl
push
adc
add
sbb
mov
jle
xchg
mov
add
mov
cmp
mov
lods
testb
mov
stos
int
pop
mov
jo
insl
jl
test
xor
or
cmc
xchg
mov
adc
mov
jae
sbb
sarl
fwait
sbb
dec
dec
mov
xor
xorb
sbb
fidivs
insl
pop
sub
pusha
lds
inc
mov
add
sub
movsb
xchg
in
xor
pavgb
jae
push
test
mov
inc
outsb
gs
cmp
leave
add
dec
in
movsb
adc
inc
add
jg
jno
mov
fdivrl
es
test
fsubl
lods
pusha
push
into
movsb
test
or
dec
mov
xor
shl
add
dec
jmp
orb
sub
add
daa
push
push
pop
inc
cmp
andb
daa
sub
add
mov
cmp
adc
or
mov
cmpsb
pop
stc
dec
mov
sub
jne
mov
and
test
lahf
std
leave
jne
mov
loopne
fisubl
loopne
add
rorl
int
cmp
cwtl
mov
jnp
in
push
and
add
lods
push
push
mov
cmp
ret
aad
jecxz
mov
inc
inc
mov
fnstenv
js
int
adc
lea
jmp
jno
push
stc
push
pop
xchg
jae
adc
mov
fsts
cmpb
insl
ja
nop
mov
pushf
pop
cmpsl
add
and
or
sub
push
repz
dec
mov
xor
lods
shrb
stos
push
xlat
je
xchg
adc
inc
push
lahf
data16
sbb
push
jbe
aas
inc
pop
mov
fmulp
sbb
adcl
das
jecxz
and
movsl
pop
push
inc
dec
cmovno
mov
imul
div
lods
in
ljmp
out
mov
movsl
jae
imul
add
mov
cmc
mov
in
jae
mov
sbb
dec
stc
cld
negl
or
leave
and
ret
repz
ficoms
mov
xor
sbb
jmp
dec
test
jg
es
rclb
or
cli
andb
stc
fdiv
dec
sbb
dec
and
dec
jo
jo
pop
arpl
mov
xchg
cld
push
out
pop
mov
adc
fldcw
jmp
mov
imul
dec
test
mov
dec
and
psubusw
and
es
rcll
add
ja
fists
mov
lea
mov
aad
bound
bound
stos
fstp
add
bound
sbb
mov
fnsave
jb
push
leave
lret
sbb
gs
pop
cmp
pop
into
push
andl
and
jl
jno
push
sbb
out
add
sub
xor
adc
xchg
xor
mov
sbbl
xor
push
push
subb
xchg
je
sbbl
lds
fistpll
addr16
sub
mov
faddl
fadds
leave
adc
and
mov
fsubp
out
dec
lods
mov
jo
pop
push
dec
push
mov
into
pop
jo
sbb
call
out
mov
xor
pop
push
lea
xchg
add
hlt
jg
imul
cmp
inc
fnstcw
jge
and
push
rolb
mov
bound
mov
divl
scas
inc
xchg
xlat
pop
in
mov
imul
rolb
cmp
adc
iret
pop
jne
incb
push
imul
or
pop
dec
imul
adc
ror
inc
popl
mov
pop
pop
test
shlb
dec
mov
sub
test
push
lcall
mov
insb
ficoms
inc
push
cmp
pop
fdiv
inc
sub
insb
scas
repz
cmp
cld
lods
lds
roll
mov
insl
pop
mov
pop
outsl
sbb
xchg
xchg
outsb
adc
rolb
xchg
daa
movsl
mov
xchg
pop
das
push
push
stc
enter
cltd
lcall
fwait
xchg
add
das
sub
stos
fstps
inc
mov
mov
jo
push
jbe
dec
xchg
stos
mov
shlb
leave
aas
mov
loop
mov
aad
ficoms
mov
mov
cmc
and
mov
repz
add
xor
dec
cmpsb
out
shrb
in
inc
fisttpll
mov
stc
jae
scas
xor
adc
and
movsl
dec
leave
dec
push
mov
fs
in
adc
into
push
push
mov
in
cmp
addr16
mov
ds
or
adc
sub
clc
stc
arpl
shlb
cmp
pop
push
int3
and
mov
mov
pusha
vmread
mov
sbb
pop
outsb
cwtl
xor
insb
aas
int
andl
jae
hlt
inc
das
loope
mov
test
sub
jbe
and
inc
dec
jmp
jmp
sub
mov
add
xchg
and
movsl
or
shrl
push
add
mov
cli
xor
fwait
pusha
cmp
jg
test
add
xchg
flds
in
fwait
xchg
push
in
popf
cmp
mov
out
imul
lret
dec
testl
pushf
inc
clc
push
jo
push
xchg
cli
mov
js
mov
or
sub
cmc
aaa
out
push
cld
mov
and
mov
ja
jb
imul
das
xor
movsb
inc
xor
mov
xchg
dec
cmpsb
and
icebp
jmp
cmp
popf
test
call
or
bound
xor
popf
in
jl
fiadds
mov
jne
pop
and
shr
inc
mov
aaa
xorl
bound
stc
xchg
xor
add
mulb
add
loopne
jp
dec
lock
lret
jns
lahf
push
loop
lea
inc
test
scas
mov
sbb
push
dec
adc
cli
sub
pop
mov
sbb
out
ss
jg
sub
jns
xor
adc
mov
xor
movl
dec
push
push
jecxz
sti
push
xor
cmp
lds
imul
mov
leave
inc
mov
stos
in
pop
inc
stos
or
inc
mov
jmp
fstpt
scas
movsb
not
aam
jl
mov
pop
dec
adc
and
int3
mov
leave
mov
cmp
rclb
aam
inc
stos
xor
push
pop
into
mov
dec
lret
divb
icebp
push
mov
jmp
cmc
and
mov
cltd
sub
sbb
dec
cmp
lods
inc
push
mov
fwait
push
test
mov
xchg
ret
daa
jbe
fisubs
sbb
dec
pop
sub
add
repnz
test
jne
arpl
stos
xor
pop
xor
cmp
sub
or
data16
xor
sbb
xlat
inc
sbb
xor
adc
leave
sti
dec
rol
adc
sbb
stos
ret
movsl
jge
mov
adc
or
or
jp
repz
dec
sbb
dec
sar
adc
out
mov
dec
add
push
push
je
faddl
mov
insb
jbe
adc
shll
les
adc
in
xchg
repz
leave
in
pop
arpl
ret
adc
and
add
pop
xchg
sub
lods
fdivr
int3
pop
cmp
sarl
call
push
shll
out
xchg
cmpsl
dec
in
pop
inc
sbb
out
inc
push
pushf
inc
repz
mov
mov
adc
in
push
inc
cmp
push
cltd
dec
mov
ret
movsb
inc
popf
push
popf
aaa
fsubr
mov
and
cmp
das
sub
or
mov
leave
mov
inc
cwtl
pop
mov
ret
mov
push
xor
nop
xchg
sub
std
xor
mov
aaa
and
jo
add
and
jecxz
jne
in
in
mov
and
scas
xor
pop
in
jge
add
fldpi
les
insl
add
aas
pusha
sbb
mov
sbb
mov
sbb
add
push
sbb
cwtl
repnz
sub
fidivrs
lods
pushf
ret
aad
add
insb
rcl
inc
cmp
daa
inc
inc
mov
mov
xchg
push
hlt
cmc
nop
es
jg
icebp
sub
ret
mov
jecxz
pusha
push
xor
jnp
push
test
or
inc
mov
int3
outsb
mov
enter
fmul
lret
mov
sbb
fnstenv
cmpsb
addb
in
negb
ds
sahf
shufps
push
cmp
ret
test
pop
inc
and
add
aad
pop
loope
ret
lods
push
loope
xlat
mov
inc
xchg
add
sahf
divl
inc
cmpsl
sbb
xchg
xchg
jbe
push
sbb
push
daa
and
fdivs
repz
mov
aad
aam
jecxz
xor
aaa
icebp
mov
repnz
or
sub
xor
sbb
ror
ljmp
mov
loopne
rcrb
iret
or
cmp
add
jbe
pop
cmp
jne
mov
pop
and
mov
xchg
int3
ret
outsl
fisubs
mov
and
jp
cmp
das
inc
shll
add
or
xor
out
das
mov
xchg
or
and
aas
and
pop
cli
jecxz
ficompl
jno
add
mov
pop
pop
in
mov
mov
in
sbb
out
shlb
mov
pop
inc
pop
test
imul
mov
pop
test
or
lds
pushl
mov
subb
and
push
test
pop
adcb
mov
imul
add
cmp
mov
or
psubusw
push
pop
out
stos
aas
pop
std
fcmovnb
inc
fisttpl
repz
dec
lds
repnz
xchg
cmpsb
xor
fldl
add
movl
icebp
mov
xlat
cmc
std
enter
imul
mov
scas
popa
mov
out
je
mov
push
push
xchg
add
lret
adc
or
cmp
xchg
aaa
pusha
dec
dec
cmp
scas
ja
lcall
outsl
pop
jnp
fstl
pop
hlt
push
fbld
sub
sbb
xor
mov
mov
add
sbb
pop
rcrl
jp
pop
mov
push
notb
rorb
and
inc
inc
bnd
mov
xlat
mov
daa
in
out
push
jno
jmp
mov
pop
mul
movsb
mov
dec
nop
mov
fsubrs
and
xor
int
cs
pusha
dec
loopne
inc
xchg
mov
mov
sbb
push
shll
mov
shr
insb
xor
add
jle
fdivrs
cld
jp
mov
stc
punpcklwd
enter
es
xor
filds
dec
ja
je
loope
stos
mov
mov
movsl
jne
or
scas
loop
xchg
jle
mov
mov
mov
inc
lret
lods
pop
test
in
adc
call
or
sti
cmp
mov
lret
xchg
out
or
jecxz
mov
jmp
leave
jbe
test
sub
mov
push
pop
xorb
jb
cmpsl
pusha
pop
or
pop
adc
movsb
cli
xchg
fwait
jo
in
jbe
ficoml
fisubrs
lret
jge
add
inc
push
push
repnz
push
jb
adc
cmp
pop
jge
sub
mov
and
addr16
sbb
fxch
imul
inc
stos
popf
add
imull
pop
jnp
pop
ret
xchg
push
xchg
int
dec
xchg
shll
pop
nop
insb
rorb
test
jnp
xorb
aaa
pop
mov
sub
sub
jle
or
push
adc
dec
mov
cli
arpl
fcomps
push
mov
jae
pushf
ret
iret
add
cltd
xchg
insb
jae
ja
or
mov
push
stc
sub
sti
adc
mov
insl
cli
pop
mov
dec
fcom
mov
out
iret
loope
xor
sbb
inc
mov
cltd
jge
popf
das
std
loop
cmp
sbb
popa
sub
insb
dec
cmp
mov
daa
xor
daa
pusha
inc
push
sbb
inc
repz
push
test
out
xor
subl
lods
popa
sub
mov
in
loopne
sbb
dec
and
sub
pushf
fdivs
push
das
mov
cmovge
repnz
adc
add
push
insl
mov
fisttps
test
out
lret
push
hlt
imul
sub
jle
pop
or
insl
mov
ljmp
mov
sub
out
sbb
fwait
mov
and
adcb
int
jecxz
xor
sbbb
loop
mov
mov
cmp
jge
sub
pop
psadbw
cmp
cli
dec
jno
faddl
shlb
push
cli
cmpsl
xor
in
adc
fcmovbe
and
fldz
jb
pop
lods
or
iret
xchg
push
ret
mov
sbb
add
push
sbb
insb
fldt
sbb
int
shrl
femms
scas
pop
mov
sbb
jae
fstl
or
in
sbb
adc
jmp
data16
sub
adc
inc
testb
inc
mov
mov
sbb
cmp
shrl
sub
sahf
and
push
sbb
xor
sarl
les
scas
add
rorl
fisubs
pop
test
test
shr
ljmp
and
fidivrs
rorl
mov
pushf
nop
push
into
mov
les
clc
mov
xchg
dec
ja
jne,pt
nop
pop
dec
lock
push
and
inc
dec
pop
pop
ret
ss
pop
mov
call
push
ds
and
jno
out
jnp
jns
jmp
test
mov
test
imul
test
orl
rorl
sbbl
js
mov
xchg
rorl
adc
shlb
aaa
scas
jb
fdivl
mov
push
aad
push
or
push
lods
push
fwait
cmp
mov
bound
mov
lock
xchg
iret
adc
movsl
fidivrl
hlt
popa
fisubs
adc
and
xchg
int3
sbb
push
sti
jmp
and
dec
jnp
add
push
mov
ret
and
aaa
mov
fisttpll
mov
ret
outsl
adc
mov
lds
pop
mov
test
out
imulb
aas
dec
sub
jo
shlb
mov
xchg
xchg
jbe
scas
popa
call
pusha
and
sub
cmp
fisubl
push
mov
mov
int3
push
addb
aaa
fldcw
pop
test
imul
jge
xor
sub
xchg
mov
mov
pop
movsl
test
ja
mov
mov
bound
sub
xchg
and
adc
adc
adc
dec
xchg
negl
sahf
or
dec
add
insb
and
push
and
clc
cli
cwtl
call
dec
mov
incl
xor
mov
pop
push
inc
cmp
mov
mulb
inc
cmp
and
and
lret
sub
jl
jns
xlat
xchg
mov
pop
sti
data16
sbb
les
loop
pop
pop
insl
or
mov
dec
mov
cmpsb
push
stos
pop
data16
lds
bound
mov
sub
mov
ret
xor
dec
js
inc
mov
add
je
es
movl
out
xor
pop
sub
mov
sub
cwtl
ret
push
mov
adc
adc
leave
cs
cmp
call
xorb
mov
repz
in
inc
repnz
hlt
outsl
jge
sti
enter
mov
pop
pusha
dec
xchg
xor
ds
xchg
sub
insl
aaa
mov
aas
popf
cmpsl
mov
push
jle
cmp
inc
lock
hlt
ss
inc
mov
add
pop
mov
jmp
test
and
jg
fiaddl
jb
pusha
bound
movsb
xor
mov
stos
sub
ret
es
icebp
movups
jmp
mov
lods
ljmp
aas
jns
movsl
leave
gs
push
push
push
nop
mov
jmp
sbb
adc
pop
xchg
xor
stc
mov
pop
int3
or
dec
gs
or
mov
xor
mov
ss
hlt
pushf
pop
stos
push
out
gs
push
pop
or
or
loope
adc
shlb
xchg
cmpsb
and
out
xor
fcmovnu
and
and
add
and
movsl
jae
mov
shll
dec
dec
jns
fsts
or
mov
mov
add
mov
lea
mov
hlt
mov
sbb
push
sahf
pop
push
pop
decb
push
mov
pop
jg
dec
lods
stc
jno
in
test
je
add
repnz
push
push
xor
cmp
test
mov
inc
jbe
leave
dec
sti
add
jne
shlb
inc
dec
sahf
subl
fstps
rorb
movsl
gs
xor
popw
xor
cltd
dec
sbb
and
arpl
mov
cmp
jae
jg
sub
sarl
push
mov
into
ffreep
pop
imul
std
xor
fwait
xor
aad
pop
fisttps
test
cli
aas
xor
int3
out
adc
xor
fdivs
addb
shrb
sbb
cmp
imul
in
and
jnp
xchg
sub
sbb
movsl
xor
cmp
and
stos
loopne
sub
addb
mov
push
cmpsl
inc
pop
pop
fs
in
jmp
rclb
push
call
mov
pop
mov
loopne
inc
adc
jns
add
jne
mov
and
lahf
xlat
push
jg
pusha
mulb
dec
es
jno
rcr
and
sti
adc
negl
pushf
push
fisttpll
pop
sahf
stos
das
inc
sbb
loope
loope
psrld
xchg
test
fs
inc
sub
lods
cmp
cmpsl
adc
or
stc
sti
jge
jo
push
inc
dec
and
and
cmp
mov
test
xchg
push
jge
pop
mov
adc
sbb
push
sbb
adc
pushf
jae
inc
sub
pop
xchg
scas
cmc
sub
ljmp
fmull
cld
daa
fldcw
pop
pushf
sub
cwtl
pop
loopne
fwait
scas
dec
test
pop
inc
push
xchg
sbb
pusha
jno
sbb
in
xor
test
fwait
sub
and
incb
cmp
in
and
shr
cmp
pushf
lret
out
inc
lret
pusha
sub
pop
mov
icebp
sbb
incb
sbb
add
jp
xchg
push
jnp
jmp
lods
adc
fistpl
dec
add
push
es
mov
push
jno
and
es
or
loopne
and
fdivrl
insb
ss
roll
add
enter
or
push
out
das
push
fisubrs
je
ss
cmp
div
jno
xor
mov
mov
ja
stos
mov
leave
add
jns
mov
xor
pop
es
icebp
mov
sbb
dec
mov
out
out
jmp
imul
daa
inc
inc
sbb
loopne
popa
mov
and
ficomps
popf
rclb
jmp
sbb
arpl
cmp
fcmove
es
jb
xor
cwtl
fnstsw
push
mov
xchg
ljmp
cmp
xor
sahf
out
push
pop
pop
sti
mov
aas
xchg
out
aaa
fs
fcmovnbe
fsubrs
int
jnp
push
sbb
lret
inc
test
pop
iret
jnp
aam
fists
or
addr16
dec
push
adc
push
aaa
orb
cmpsb
mov
jle
imul
insl
jns
dec
and
scas
add
das
stos
sarl
inc
in
fucom
sub
mov
cmpsb
arpl
jnp
adc
push
or
pop
dec
adc
popf
fiaddl
fadd
mov
add
add
dec
sbb
push
xor
stos
imul
inc
ss
mov
or
jae
adc
add
xchg
inc
and
sub
orb
stos
pop
out
repz
pushl
mov
jmp
imul
nop
sbb
mov
ss
inc
jge
cmpsl
ljmp
jg
add
push
add
test
loopne
lret
mov
mov
lods
out
ljmp
and
xchg
cmp
or
divb
add
dec
sub
out
mov
sub
dec
fldenv
subl
movsb
daa
stc
jmp
jmp
dec
sbb
cmc
out
sbb
mov
mov
rorb
les
jge
push
test
adc
dec
mov
sbb
or
fstps
cmpsb
movb
xor
negb
aam
mov
jg
or
mov
or
mov
mov
addr16
dec
fisttps
es
divl
and
dec
lahf
into
adc
stos
inc
loope
or
jle
jnp
mov
ljmp
and
std
imul
loopne
mov
lds
pop
mov
lds
mov
sahf
test
cmp
negb
mov
xchg
imul
dec
aaa
xchg
fiadds
dec
cld
test
push
push
adc
jle
inc
add
sbb
iret
aam
jmp
mov
sbb
dec
sbb
stc
sbb
fcmovu
push
push
push
mov
insl
sub
mov
cmpsl
inc
stc
push
xchg
sbbb
test
fsubrl
inc
loopne
scas
xchg
into
dec
fsubr
mov
and
jnp
int3
je
callw
inc
mov
std
mov
arpl
fcoms
sbb
xchg
and
pop
mov
into
loopne
xchg
in
add
loopne
xchg
fwait
sub
sbb
dec
das
mov
stos
push
lcall
pop
shrb
iret
inc
cmp
pop
sub
jle
add
jp
pop
rorb
data16
sub
and
pop
je
xor
inc
push
and
loopne
gs
scas
jmp
bound
push
lcall
mov
jmp
push
repnz
aad
push
mov
mov
insb
xlat
das
inc
sahf
push
sbb
or
pop
fsts
add
ret
out
lret
inc
jge
stos
add
sti
pusha
cmpsl
xchg
push
mov
xchg
push
sbb
jnp
pop
arpl
add
cwtl
mov
mov
lahf
aas
jle
push
leave
cltd
fsub
sbb
push
xchg
mov
jl
add
xchg
xchg
stc
rclb
stos
js
jmp
ljmp
stos
repz
sub
sbb
fs
push
mov
inc
push
xor
sbb
or
pop
or
lcall
cmpsb
cmp
push
pop
cld
inc
iret
imul
aad
out
inc
xor
adc
test
pop
jns
je
xchg
sub
fdiv
push
add
pop
and
add
iret
jno
push
dec
les
std
jg
pop
pop
lea
jnp
push
adcb
mov
xorb
mov
pop
scas
xchg
ret
push
sbb
ljmp
dec
push
mov
lds
cmc
sbb
cmc
mov
push
or
cld
call
imul
fstpt
lock
xchg
push
cmp
xor
jae
inc
add
mov
int
dec
mov
push
jg
inc
mov
out
add
cltd
push
cmp
aam
iret
push
pop
mov
out
shll
mov
cmp
inc
testl
or
mov
lds
dec
stos
add
sbb
and
dec
cs
mov
repz
subl
out
icebp
mov
inc
push
and
ret
jle
rcll
mov
test
fimull
lret
dec
sbb
pop
and
test
enter
stos
insb
jns
mov
xlat
repz
popf
mov
jo
jle
sub
testb
dec
aas
mov
push
imul
add
imul
iret
mov
jae
cmp
lds
js
pop
push
sbb
or
shlb
jne
push
pusha
push
push
stos
mov
dec
dec
aaa
inc
mov
rolb
lea
dec
push
jmp
mov
mov
into
filds
into
sub
mov
mov
pop
xor
sti
into
xor
sub
testl
je
and
call
xor
jno
es
ds
fsubl
pop
ret
aas
lock
add
xchg
ret
jl
pop
imul
test
shrl
shl
out
jnp
fucomi
sbb
xor
dec
sub
or
inc
loope
loopne
mov
popa
enter
push
adc
lods
cmp
fs
xor
push
jecxz
pusha
add
mov
scas
mov
dec
cmp
daa
pop
sub
in
lods
out
lods
dec
push
push
hlt
xchg
stos
fsts
mov
js
xor
inc
lock
lods
ret
scas
xor
aam
ret
sub
jecxz
test
adc
pop
cli
cmpsl
in
hlt
insl
rorb
pop
lea
push
push
into
repnz
mov
orl
push
out
cmpl
jbe
and
pop
jns
lods
or
jo
dec
sahf
inc
xor
aam
cltd
ds
add
xor
out
sub
sbb
add
je
repz
push
push
and
shll
adc
ja
jl
imul
push
add
mov
jno
push
ljmp
out
cltd
cltd
cmp
push
mov
cmc
mov
lret
jnp
jnp
pop
push
lock
imul
lret
iret
dec
lret
stos
std
sar
inc
pop
loope
or
repz
outsl
xchg
add
sub
loopne
lcall
pushf
ljmp
les
lret
xchg
sbb
dec
mov
dec
das
mov
loop
inc
movsl
int
jns
inc
and
mov
shl
or
les
mov
lahf
jle
in
and
mov
lahf
adc
int
ret
jmp
mov
xchg
mov
dec
lcall
pop
scas
shl
sub
mov
imul
dec
cli
pop
les
mov
and
cmpsb
out
mov
out
add
loop
stc
pop
add
rcr
insl
mov
xchg
movsl
xchg
jno
mov
push
rcll
xchg
pop
mov
lds
mov
mov
add
loopne
sti
in
xor
xlat
xchg
jl
arpl
imul
jb
jle
adcl
cmpl
jo,pn
and
xchg
adc
add
adc
cmp
cli
pushl
pop
loopne
push
fisttpll
sub
mov
and
das
xchg
cmp
pop
lcall
or
pop
ja
jns
lods
dec
add
das
mov
int
mov
cs
jne
or
pop
pop
fs
int
mov
jecxz
mov
pop
stos
push
adc
sbb
dec
insl
inc
push
pop
or
test
jg
mov
pusha
mov
xor
mov
loope
push
js
ss
xchg
in
ds
add
push
in
add
xchg
pop
js
push
mov
leave
jbe
lret
adc
stos
test
cmp
xchg
call
js
sahf
push
lcall
ljmp
lock
pop
lds
imul
jne
push
add
ds
mov
in
in
adc
adc
adc
jb
add
jae
outsb
daa
xchg
dec
in
or
jp
push
shrb
mov
mov
in
rorb
jo
mov
call
sti
jmp
push
jns
sar
enter
push
in
sbbb
xor
or
mov
inc
into
adcb
stos
push
push
xchg
test
add
cmpsl
and
mov
and
mov
dec
push
imul
mov
pop
pop
mov
jle
sub
cmp
xchg
fwait
push
mov
jmp
mov
pop
xchg
bound
dec
popf
das
es
mov
adcl
sbb
jbe
or
add
cmpsb
sbb
or
out
pop
pop
push
mov
aam
and
pop
pop
jl
sbb
xchg
mov
cmp
and
imul
add
xchg
enter
pop
popa
and
out
dec
aaa
mov
pop
movsl
aam
loopne
mov
stos
xor
xor
add
or
push
inc
pop
movsl
xor
insl
mov
test
loop
jp
mov
sbb
movsl
inc
mov
jb
sub
cltd
push
jl
mov
mov
sahf
call
fyl2x
js
je
and
mov
push
imul
ja
dec
push
std
jl
jne
test
sub
jl
sub
jecxz
jno
icebp
fdivs
clc
outsb
xchg
dec
test
sahf
xor
or
outsb
sub
repnz
std
jbe
movsl
fldenv
sub
push
inc
test
loopne
adc
insl
call
push
add
stc
adc
mov
arpl
jmp
out
pop
ja
cmp
dec
outsl
xor
inc
jmp
lods
or
repnz
call
pop
lds
sbb
jmp
int3
cmp
repz
sbb
scas
mov
fsubs
push
push
dec
mov
mov
pop
sbb
sbb
inc
add
mov
sbb
xchg
jge
loope
or
jb
outsl
ret
jle
aas
cltd
cli
shlb
decl
xchg
aas
fidivrs
fiaddl
subl
into
jbe
testb
fiadds
test
stos
test
lahf
mov
and
or
mov
daa
sub
xor
daa
sbb
dec
das
pop
shr
add
or
mov
sub
jmp
mov
xor
enter
test
test
push
and
sbb
call
xor
xor
pop
and
cmpsb
imul
xor
repz
gs
test
inc
jp
les
cmpsb
sahf
inc
sub
ja
loopne
cmp
push
xchg
lods
hlt
or
js
pop
das
cmpsb
sbb
mov
pop
out
sub
mov
int3
ss
push
in
cld
add
and
xor
in
jo
orl
hlt
xor
cwtl
mov
or
cmpsb
adc
push
je
int3
iret
lahf
jae
inc
pop
subps
int3
pusha
pop
insl
aad
mov
mov
add
pop
shll
mov
sub
stos
or
add
mov
shlb
es
dec
inc
jmp
fisubrs
nop
inc
dec
and
pop
pop
sti
popf
cmpb
scas
popa
sub
fisttpll
sub
jne
scas
pop
test
push
js
xor
xchg
mov
add
jo
pminsw
out
aaa
push
popa
lcall
out
sti
push
inc
mov
mov
pop
scas
jmp
pop
gs
xacquire
sbbl
leave
shr
ficoml
xchg
pop
pop
pop
out
or
adc
add
xchg
or
cmp
or
pop
fldlg2
shrl
xlat
test
or
pop
xchg
jle
pop
jmp
lcall
repnz
movsb
rclb
ja
lcall
sti
orl
inc
inc
push
add
cmp
adcb
xchg
sub
scas
cmp
ljmp
roll
adc
cltd
mov
xor
cs
dec
daa
add
imul
leave
mov
or
push
and
sub
movsl
gs
jg
jbe
cmp
int3
or
nop
shlb
loopne
cmp
sub
insb
cmc
push
lods
lds
jmp
sbb
or
sub
dec
in
jns
mov
inc
or
add
jo
mov
sbb
test
es
movsl
mov
fnstcw
aad
stos
lret
cmp
imul
js
add
cmp
sbb
and
ret
jmp
mov
adc
jp
jo
xor
inc
cmpsb
dec
mov
fiaddl
loop
cmpl
dec
data16
test
inc
push
insb
pop
jnp
sub
xor
mov
ret
gs
jle
dec
icebp
stos
mov
push
sbb
sarb
xchg
ret
cmp
mov
out
xchg
xchg
xchg
addr16
sti
sub
sbb
pushf
or
int
cld
inc
adc
mov
imul
mov
clc
mov
pop
leave
jecxz
sub
je
pop
sub
push
fcoms
sub
push
arpl
aas
push
sub
stos
mov
icebp
xchg
pop
pop
pop
xchg
lea
add
pushf
mov
lahf
or
sub
in
add
xor
push
sbb
movsb
cwtl
mov
xchg
jl
pop
pop
repnz
cmpb
imul
aaa
push
add
int3
mov
mov
pusha
dec
out
xchg
cmp
push
jae
shlb
dec
lock
sar
es
xchg
adc
aaa
adc
js
cmp
mov
pop
popa
lds
mov
inc
ds
or
test
ljmp
decl
fisttpl
ficomps
mov
mov
adcb
movsb
gs
fstps
pop
cmp
or
int
cmc
inc
stos
aaa
iret
stos
pop
mov
sbb
or
fldenv
adc
mov
cmp
jge
push
sbb
mov
in
xchg
es
push
sub
scas
popf
fcoms
jo
xor
cld
sub
fistps
iret
add
std
nop
mov
std
or
pushf
ljmp
out
xchg
call
movsl
inc
aam
cwtl
mov
cmp
pop
pushf
pop
push
cmpsb
jmp
push
inc
jle,pt
sahf
shl
pop
push
cltd
dec
and
imul
aad
mov
aad
div
push
je
mov
jnp
loop
imul
mov
popa
pop
in
jl
cmp
jecxz
add
vshufpd
loope
push
daa
outsl
call
push
dec
outsb
psrlw
adc
ret
lahf
jne
pop
lods
xor
and
mov
dec
lcall
out
je
push
cltd
in
cli
xchg
and
inc
mov
mov
sub
dec
ja
mov
pop
inc
push
xchg
das
cmc
out
adc
pop
mov
jg,pn
mov
orl
inc
enter
pop
mov
lds
push
adc
mov
lea
cmp
sub
push
loopne
mov
data16
in
or
pushf
xchg
ds
jle
sub
shrl
filds
xor
dec
xchg
dec
dec
fsub
mov
push
rcrb
push
stos
fdivrs
dec
lret
xchg
jmp
jmp
inc
nop
cmpl
call
jle
lods
leave
dec
cwtl
call
sub
fmuls
inc
dec
cmp
mov
cli
and
out
adc
mov
lock
fs
mov
xchg
into
add
add
push
lcall
mov
and
mov
push
push
sub
sbb
cmp
rorb
call
xchg
fisubl
mov
xchg
mov
xchg
movb
jae
add
clc
ja
out
mov
mov
pop
cli
arpl
les
inc
add
inc
mov
sbb
push
jge
xor
dec
fstpl
lahf
pop
repz
shlb
sbb
movsb
dec
data16
loope
call
fdivl
out
jg
sbb
arpl
and
or
mov
xorb
cld
push
mov
xchg
sbb
dec
imull
shr
and
xchg
popa
mov
scas
fwait
push
mov
add
bound
mov
push
imulb
add
ss
cld
loop
jge
xchg
xchg
and
lods
jns
daa
push
and
dec
in
xchg
sub
jnp
cmpsl
scas
or
mov
test
adc
cmpsb
insb
inc
mov
cmp
adc
rorb
xchg
fimull
scas
cli
push
out
mov
lods
jp
mov
out
sti
jmp
xorb
cmp
mov
inc
pop
xor
insb
add
nop
test
std
shll
xchg
mov
pop
sbb
loope
inc
testl
xchg
push
mov
or
movl
out
cmpsb
negl
inc
or
xor
pop
inc
pop
lcall
stos
mov
or
fisubrs
xchg
dec
sbb
add
out
es
shll
mov
adc
mov
ja
jae
inc
insb
sbb
push
xor
jge
adc
and
in
cmp
inc
loope
mov
jl
sti
test
mov
daa
push
jle
xchg
xor
pop
jmp
in
push
jno
das
je
xchg
push
fdivrl
fdivs
jecxz
add
and
je
cmp
xlat
adc
lret
andb
pop
and
inc
mov
dec
lods
fldt
jns
mov
cmp
add
mov
xorl
aam
cmp
icebp
sbb
or
mov
lods
fstl
jo
xchg
or
fisttpll
xor
mov
fs
aas
enter
jnp
pop
dec
jae
inc
outsb
cmc
jmp
sub
data16
out
ljmp
aam
mov
xchg
xchg
pushf
jns
daa
xor
ljmp
dec
test
pop
aaa
push
dec
inc
push
xchg
pop
mov
stos
loope
inc
push
dec
xchg
ret
jmp
jle
insb
int
or
js
add
push
ljmp
fidivrs
fisttpll
js
aaa
int3
push
xor
popf
dec
fcoms
out
mov
stos
push
sbb
push
popf
cmp
sbb
lods
sbb
jno
push
push
mov
lods
int
xchg
adcl
fs
arpl
and
fwait
mov
leave
mov
repnz
test
pop
aaa
insl
sbb
mov
and
dec
mov
or
clc
xchg
adc
int3
push
cmp
mov
in
ret
fldcw
push
add
stc
mov
in
adc
xor
push
and
sbb
ds
mov
rorb
xchg
xchg
mov
pop
out
fmull
imul
jp
add
cmp
dec
jno
pushf
lret
xor
repz
add
pop
imul
icebp
mov
cwtl
clc
or
add
test
mov
push
insl
insl
mov
lods
pushl
cmpsb
nop
loope
cmp
cmp
pop
add
lods
mov
fcmovnu
cwtl
push
or
jb
std
fnstcw
add
aad
call
or
xchg
adc
mov
xchg
mov
push
stos
aas
out
mov
jle
pop
mov
je
ja
sbb
inc
dec
out
mov
push
decb
dec
xchg
ret
imul
mov
add
dec
pop
inc
add
cmp
movsl
dec
test
jmp
or
mov
shlb
mov
rolb
dec
and
test
int3
movsl
sbb
mov
lret
push
loopne
or
lock
call
and
test
stc
je
inc
sti
rcrl
mov
mov
jne
push
dec
jns
les
push
or
cs
xchg
push
mov
or
adc
mov
mov
xchg
leave
mov
nopl
jp
inc
stos
pop
in
xchg
loop
cmp
and
and
adc
pop
push
cmp
ret
jne
pop
pop
out
cmpsb
jae
push
aad
test
jmp
sbb
mov
jl
pop
rorl
sti
inc
test
inc
mov
push
mov
pop
pushl
rol
jno
in
push
stos
mov
sub
and
or
add
sahf
pop
stos
xchg
mov
addl
ret
push
sarb
xor
push
adc
scas
push
cmp
add
rclb
ret
xchg
cltd
fs
sbb
jecxz
cli
mov
sahf
aad
loope,pn
cmpsb
mov
inc
or
mov
sbbb
push
sub
xor
jmp
lods
cmp
push
sub
mov
sbb
mov
repz
fbld
lock
add
aaa
push
mov
fcom
mov
cmp
fnclex
sbb
loop
adc
sub
mov
or
leave
mov
mov
sbb
jbe
jnp
dec
xchg
pop
sahf
aad
dec
fucomi
orb
push
mov
aaa
enter
pop
js
xchg
xor
mov
clc
sti
dec
and
add
ss
add
cs
jne
mov
and
test
push
pushf
test
pop
cmp
jmp
cli
sub
bound
adc
push
push
sub
adc
push
and
pop
inc
or
cld
stos
xor
mov
loopne
cli
divl
push
pop
pop
lahf
lahf
mov
lods
jmp
push
test
shr
cmp
call
popa
or
into
imul
push
je
add
daa
jecxz
cmp
fwait
dec
loop
jmp
xor
les
sarl
stc
daa
enter
xchg
push
sub
mov
push
ja
pushf
fdivr
pop
sahf
mov
loopne
std
mov
das
fsubl
ja
sub
sbb
push
pop
loop
cmp
daa
pop
rorb
leave
mov
cwtl
jge
push
lods
push
punpckhwd
ret
addr16
in
fucomip
mov
insl
repz
dec
fisubs
cmp
shll
clc
ljmp
dec
enter
rorl
scas
nop
scas
cmp
jno
loopne
cmpsb
jmp
mov
jb
inc
ljmp
mov
andb
jmp
ljmp
pop
mov
cmp
in
adc
inc
mov
sub
inc
jmp
add
outsb
aam
lods
cmc
fidivrl
push
and
loopne
add
xor
sub
inc
xor
icebp
movsb
inc
add
mov
mov
push
out
mov
push
pop
push
movsb
jge
mov
movsl
mov
insb
push
sub
mov
sbb
sbb
movsl
dec
xor
inc
aas
sbbl
fs
cmpsl
out
mov
lret
push
and
aaa
test
insb
adc
stos
or
xor
sbb
pop
test
xor
imul
imul
scas
test
das
jmp
and
jl
push
or
ja
push
aas
fcomps
loop
xor
je
adc
arpl
or
mov
pop
pusha
jecxz
insl
out
mov
xor
xchg
push
fisubrl
movsb
add
pop
int
aaa
sarl
dec
addr16
pop
in
and
std
aaa
out
jno
push
movsb
xchg
repz
inc
addl
les
inc
or
cmc
jbe
dec
jp
xchg
mov
inc
xchg
inc
fs
sbb
adc
cmp
sub
push
sbb
sub
sub
xor
mov
cmpb
dec
jecxz
in
jbe
enter
cld
and
ds
push
loope
es
movb
dec
mov
sbb
mov
xlat
fsubs
jge
nop
jecxz
call
inc
add
mov
repz
notl
outsb
roll
cmc
inc
jg
xchg
pop
or
icebp
push
dec
out
loop
sub
sbb
adc
dec
aad
outsl
or
adc
call
sbb
pop
dec
or
clc
jp
jmp
lahf
jo
dec
xchg
push
jle
faddl
in
xor
xchg
inc
sbb
push
inc
push
into
ds
or
add
xor
lret
imul
rclb
push
test
or
loopw
and
adc
push
ds
std
push
push
push
cmp
and
scas
xchg
lods
mov
jno
fbld
cmc
push
jecxz
jnp
or
xchg
cltd
jp
push
mov
mov
pop
lock
and
incl
popf
gs
rcr
lock
dec
push
adc
insb
inc
dec
cmp
and
bound
outsl
jne
sarb
pop
add
jmp
rolb
pop
sbb
mov
sbb
scas
fs
mov
das
rolb
add
fcompl
sbb
lods
outsl
jmp
pushf
dec
mov
dec
lods
mov
stos
xchg
cwtl
push
xchg
loopne
add
jae
addr16
xchg
cltd
sbb
fwait
cltd
push
jge
ficoms
and
inc
outsl
in
adc
loopne
shll
aam
addr16
sbb
jb
cmc
dec
std
pop
xchg
sub
repz
jecxz
mov
lahf
xor
xchg
hlt
add
aam
stc
enter
xor
aad
mov
aam
lret
adcl
addr16
in
rolb
in
shrl
sub
ja
pop
outsl
fwait
mov
cltd
ss
fistl
cmpsl
sbb
mov
lcall
mov
imulb
adc
repnz
mov
bound
push
lahf
sub
gs
adc
and
mov
negb
jns
adc
movsb
or
sbbb
jl
insb
inc
dec
out
cmp
add
sahf
cltd
std
pop
std
pop
xor
or
adc
mov
out
inc
popa
xor
xchg
out
ljmp
rcrl
in
dec
ret
push
setg
js
cmp
add
adc
stc
push
mov
pop
xchg
ds
pusha
sub
xchg
arpl
and
push
mov
xchg
mov
jg
push
adc
bound
mov
pusha
mov
loope
or
push
and
xor
add
push
jae
mov
test
popa
push
ficoml
sub
pop
fst
inc
ret
sub
jmp
mov
nop
and
inc
in
add
xchg
push
inc
shlb
pop
aad
push
sti
lods
lahf
inc
mov
repz
xchg
lods
sbb
adc
adc
mov
dec
bound
insb
inc
aas
inc
adc
out
sti
mov
scas
sub
decl
dec
bswap
add
sbb
jg
push
add
adc
test
sbb
mov
add
cmp
mov
cmc
or
adc
hlt
cmp
xor
sarb
movsb
sbb
inc
rclb
js
loop
inc
outsb
mov
mov
sbb
ss
flds
inc
dec
fisubs
and
loop
addr16
pop
jns
jg
adc
push
mov
mov
movsl
dec
aaa
jno
push
in
stc
mov
mov
cmp
clc
push
call
xor
faddl
je
mov
sbb
fistps
fidivs
pop
push
rorl
lret
inc
mov
jo
notl
inc
fwait
jecxz
cmp
xor
aad
vmovss
pop
cmp
add
pushf
add
fists
enter
fstps
push
dec
inc
mov
jge
pop
adc
dec
pop
lahf
cli
jb
js
fiaddl
fmuls
les
into
out
dec
out
dec
mov
mov
repnz
jae
pop
shlb
cmp
fwait
mov
imul
or
pop
pop
mov
xor
mov
sbb
sub
jge
and
testl
scas
sbb
mov
sbb
jmp
in
ljmp
fnsave
xor
call
cmp
out
and
fimuls
dec
mov
cmp
je
add
mov
enter
pop
fistpl
and
decb
cmc
mov
insb
fwait
lret
jl
stc
sub
mov
or
inc
cltd
test
mov
insl
xor
push
out
cld
jp
ljmp
test
mov
cmpsb
sbb
cmpsl
sti
sub
mov
gs
mov
or
shlb
outsb
imul
inc
and
xlat
scas
std
pop
loop
inc
push
mov
dec
jg
and
push
push
daa
mov
imul
pop
pop
js
xchg
jno
ljmp
xchg
out
lahf
jnp
loope
pushf
add
adc
aaa
and
mov
dec
popa
sbb
lcall
or
sbb
inc
scas
sub
imul
add
out
rcl
mov
push
and
or
inc
sub
cmp
lret
mov
fimuls
pop
mov
repnz
mov
jl
xor
cli
jno
cmp
and
fs
mov
imul
push
inc
scas
xorl
mov
das
rcrl
jmp
mov
mov
lfs
aaa
pop
lahf
sbb
cmp
cmp
pop
stc
sbb
jecxz
aas
fstl
cmpsl
dec
push
sti
fisttpl
jbe
lcall
jnp
lea
mov
push
sbb
xchg
ss
and
jge
or
int3
mov
push
mov
add
jne
push
pop
sbb
adc
das
inc
xchg
addr16
and
mov
loope
cmpsb
cltd
scas
lahf
movl
arpl
clc
faddl
dec
and
or
std
add
push
fnstcw
xor
scas
push
dec
lods
mov
mov
push
jmp
xchg
ja
pop
jb
push
repnz
popf
dec
pop
mov
out
ret
stos
repz
jno
mov
hlt
xchg
inc
int
outsb
insb
lret
push
and
sti
add
mov
push
aas
dec
mov
test
repz
pop
in
pop
jg
inc
cmp
aas
jmp
movb
mov
mov
shrl
add
push
push
inc
or
fdivs
daa
push
ljmp
xor
xor
lods
adc
cwtl
mov
jecxz
fmul
mov
in
add
cmpsl
or
leave
inc
push
xchg
addr16
das
add
sbb
jne
mov
mov
jg
cmp
or
jge
mov
sbbl
notb
aad
aad
call
insb
fstpl
push
adcb
add
push
shl
call
pop
mov
cmpsb
aas
inc
xchg
inc
mov
cmpsb
jl
pusha
cs
fs
les
cld
jmp
sub
addr16
outsl
dec
add
mov
outsl
jl
sti
shrl
dec
push
xor
arpl
jb
adc
or
sbb
sahf
movsl
add
jp
cmp
inc
lods
cmc
mov
pop
int3
adc
scas
idiv
jmp
sbb
jne
xchg
xchg
insb
loope
in
pop
add
test
push
or
out
dec
rorl
fwait
arpl
jb
insb
adc
add
mov
jmp
adc
js
mov
mov
movsb
clc
popf
mov
sbb
test
xchg
leave
cld
dec
sub
sub
scas
lret
neg
mov
mov
xor
and
sbb
das
inc
mov
mov
pusha
imul
arpl
jl
dec
xchg
cmp
pop
jne
mov
sbbl
repz
add
lds
sbbb
adc
les
repz
add
jg
nop
xor
lret
mov
add
or
clc
scas
jno
mov
xor
inc
jmp
jnp
cmp
jno
fdivrl
popf
cmp
fcmovnbe
mov
call
cmp
sbb
or
jno
cmpsl
hlt
nop
jge
lock
lds
jo
fisttps
mov
xor
dec
cmp
les
std
stos
jb
pop
stc
jo
add
xor
sub
jge
xchg
lea
cmp
fildl
xchg
ss
in
adc
dec
push
jae
add
jbe
mov
pop
mov
mov
sbb
push
lcall
out
mov
imul
pop
pushf
and
dec
mov
pop
adc
add
jnp
roll
xor
rclb
nop
fbstp
cmp
xor
fiaddl
mov
cmp
pop
or
or
add
int
inc
mov
dec
sti
jnp
inc
dec
dec
adc
xlat
push
or
adc
lcall
out
iret
ficomps
mov
pop
fs
sub
ret
enter
int
scas
rolb
xchg
stos
pusha
xor
sti
leave
lds
inc
stos
icebp
push
aam
push
jne
mov
adc
icebp
loopne
jle
lock
fwait
sub
jg
mov
mov
jle
cli
cld
mov
jb
arpl
scas
ret
in
mov
shll
sbb
arpl
int
push
sbbb
mov
lret
sarb
xchg
imul
xor
outsl
add
dec
xchg
xchg
movaps
out
inc
out
add
repnz
xchg
push
int
popf
test
outsb
stos
js
stc
mov
xor
xchg
in
lock
inc
xchg
mov
push
lea
sbb
mov
pusha
pop
fmul
rcrb
cltd
cmp
fistps
xor
cmp
and
add
jp
push
or
inc
inc
in
test
mov
ss
jmp
test
hlt
pop
mov
ljmp
adc
into
cmp
push
loop
sbb
lock
add
mov
je
sbb
hlt
orl
xchg
pop
ror
pusha
mov
dec
pushf
push
lods
pop
scas
ret
lea
js
popa
inc
fdivrs
clc
mov
mov
dec
mov
xchg
inc
repnz
enter
das
jp
push
andb
insb
dec
es
jge
scas
jno
call
xor
out
push
and
add
lahf
repnz
adc
jb
xchg
lods
xchg
cmp
jne
add
jecxz
out
sub
mov
in
loope
icebp
xor
data16
aam
mov
fnstcw
clc
pop
popl
mov
mov
or
jno
pop
les
test
jbe
cmp
lret
sbb
mov
repnz
test
sbb
cld
ljmp
inc
out
js
insl
out
jl
or
jmp
or
stos
pop
outsb
data16
mov
in
mov
sub
hlt
scas
inc
mov
xchg
pop
dec
mov
mov
repz
jle
mov
push
xor
jne
xor
xchg
or
jae
cld
push
pop
add
scas
into
lahf
lock
jge
scas
clc
and
or
out
fmull
in
xor
or
movsb
fisubs
push
scas
sub
add
shrb
test
aam
sbb
mov
ljmp
push
enter
push
fstpt
call
fwait
stos
mov
subl
push
or
out
fnstenv
ficoms
xor
popf
inc
fs
cmp
and
push
popf
mov
imul
movsl
out
ret
xor
xchg
stos
xor
add
xchg
repz
fdivrs
imul
test
std
imul
sar
dec
out
les
testl
in
rorl
inc
xchg
aam
cmp
mov
lea
pushf
out
sti
push
mov
scas
jp
mov
fsubl
add
mov
sbb
fdiv
fisttpl
popa
shrb
loop
xor
subl
adc
scas
fbld
insl
stc
clc
mov
cld
sub
in
xchg
xor
cli
jl
cmp
sub
ret
cmpsb
push
faddl
dec
fildll
int
lods
sub
cmp
dec
in
push
cmp
jo
aas
dec
push
jnp
xchg
pop
or
leave
and
int3
add
sarl
mov
mov
and
in
push
xor
aaa
push
sbb
sti
sti
in
das
mov
dec
aad
mov
jge
add
sub
add
insb
xchg
fidivrl
aaa
imul
push
push
cmpsb
rcrb
xchg
pushf
add
leave
jae
inc
cwtl
repnz
jnp
cmp
es
dec
int
out
nop
lods
adc
pushf
jnp
jno
lock
sahf
loop
int3
add
adc
std
mov
gs
aas
adc
mov
xor
stos
xchg
aaa
in
fs
mov
mov
dec
dec
xor
push
mov
dec
daa
dec
xchg
mov
inc
insb
mov
inc
dec
push
cmc
push
sbb
or
inc
notl
in
icebp
inc
xor
xchg
repnz
inc
ja
push
jecxz
mov
and
ja
or
fsubp
aaa
inc
ror
roll
stc
pop
inc
inc
or
and
sbb
inc
mov
addr16
es
nop
insb
lods
push
dec
es
push
sub
mov
mov
in
mov
outsb
cmp
jno
ret
pusha
xor
mov
sub
or
dec
dec
ret
fwait
adc
xchg
idivl
cld
jg
sahf
push
in
movsb
push
or
gs
bound
repz
mov
adc
lods
arpl
in
cmp
and
xchg
repz
in
push
cmp
inc
sarl
cmpsb
addb
popf
xchg
mov
and
or
dec
jae
int3
jno
fcoms
in
or
psraw
adc
dec
cld
and
mov
cmc
inc
cs
xor
dec
in
leave
push
cltd
outsl
inc
xor
sbb
dec
xor
push
mov
sub
xchg
dec
pop
add
xchg
cwtl
sahf
int3
shrb
dec
or
lea
mov
add
jmp
popf
rcl
or
bound
dec
addl
push
sbb
pop
stos
dec
mov
dec
cltd
negb
jg
jae
jl
fists
popf
js
or
push
popa
add
xor
sbb
xor
dec
cmp
add
out
in
loope
mov
rorl
sub
inc
aam
imul
adc
into
xor
lods
mov
lcall
repz
jbe
dec
mov
faddl
lret
sub
or
mov
mov
push
in
inc
inc
jle
push
lock
in
fwait
loopne
lcall
sbb
jbe
fcmovu
xlat
push
pop
push
xchg
mov
lea
test
jnp
rclb
icebp
neg
daa
bound
aas
out
es
adcb
push
mov
and
push
mov
call
insb
and
in
mov
jle
loopne
mov
mov
add
sbb
inc
jg
dec
lret
imul
xchg
js
cltd
movsb
in
imul
cmpsl
pop
fdiv
test
mov
xorl
fwait
pop
and
dec
cli
call
sub
xchg
add
scas
repz
or
add
aaa
xor
sub
push
mov
inc
dec
pop
or
mov
ret
mov
cmpb
push
xchg
xor
outsb
or
jl
in
inc
hlt
loopne
or
or
fimull
mov
lret
jp
gs
push
add
in
stos
lea
ds
add
das
jae
stos
subl
add
repnz
add
mov
jo
int
xor
pop
cli
fwait
cli
pushf
cmpsl
sbb
pop
sbb
mov
and
xchg
pop
push
xor
inc
adc
add
jge
pop
imul
inc
sub
fidivrl
out
xor
push
imul
nop
mov
xchg
cmpsl
mov
jp
xor
jne
in
das
loope
push
adc
cwtl
cmp
inc
out
mov
hlt
notb
mov
xchg
icebp
cmc
in
cld
xchg
cwtl
sbb
and
fs
aam
daa
inc
nop
decl
outsb
push
cmp
xchg
iret
ljmp
jb
das
shlb
sub
pop
lcall
adc
and
mov
scas
test
jecxz,pt
adc
add
push
mov
ja
lods
and
inc
js
dec
insb
mov
testb
mov
lcall
jb
lcall
dec
inc
mov
fbstp
insl
dec
inc
imull
jg
lods
repnz
cmc
mov
loope
scas
jg
jle
xchg
lock
test
mov
notl
sbb
mov
rolb
xor
cmp
orl
sub
jns
sbb
mov
jp
mov
js
mov
fstpt
cmp
inc
imul
repz
test
imul
nop
mov
ja
sbb
push
push
cltd
mov
test
les
imul
ficompl
xchg
dec
fisttps
mov
cmp
ljmp
lcall
push
aas
add
ret
subb
enter
mov
lock
push
sti
mov
fs
push
jno
imul
pop
push
in
aad
push
push
cmp
mov
inc
movsb
sahf
dec
jb
jns
add
adc
adc
jmp
mov
lock
popa
loop
fmuls
pop
sub
sub
insl
popl
push
ret
push
ficomps
sub
sarl
push
and
pop
or
mov
scas
adc
sahf
xor
jge
add
and
in
daa
sbb
sar
cltd
movsl
jmp
cmovnp
incl
mov
jne,pn
push
jns
outsl
cmp
pop
repnz
or
add
jns
dec
inc
std
dec
stos
test
and
in
jp
push
dec
repnz
pop
orb
arpl
aaa
or
insb
cmpsb
rorb
lea
jl
jmp
add
sbb
jge
sbb
add
mov
mov
int3
in
out
xlat
push
jmp
sbb
out
sub
inc
loop
int
or
push
shl
cmp
xor
leave
push
mov
insl
mov
das
pop
jmp
mov
js
push
or
repz
jl
xchg
jg
andl
pop
aas
xchg
push
jmp
es
xchg
adc
push
push
faddl
gs
inc
aad
cmc
xchg
loopne
aam
mov
lret
pop
jle
push
loope
add
or
push
repnz
sub
rcrl
inc
lcall
mov
fsubs
sbb
imul
ja
cmp
push
or
shlb
sub
jbe
ja
sbb
inc
ss
xor
xchg
ror
pop
clc
lods
push
movsb
cmpsl
lea
call
scas
nop
mov
xchg
adc
push
pop
jno
jo
lcall
pop
dec
push
rcr
or
jae
pop
add
lock
and
insl
push
mov
into
jns
mov
sbb
out
movsb
cmp
movsb
push
dec
pop
mov
lock
dec
mov
push
ljmp
orps
sub
test
decl
jle
jl
xchg
mov
cmp
stos
lret
or
xlat
lcall
jbe
pop
pop
ljmp
ficoms
inc
and
lods
jbe
mov
push
fsubrl
add
push
lret
insl
shlb
mov
or
jmp
lcall
std
mov
inc
mov
lcall
push
add
scas
dec
cwtl
leave
out
orl
inc
xchg
add
mov
addl
jbe
push
pop
jns
mov
adc
fwait
out
dec
int
mov
shr
sub
jle
loopne
xor
inc
lods
sbb
pop
mov
pop
inc
push
fs
repnz
push
jle
push
aad
imul
fs
jl
pushf
mov
cmp
xchg
or
mov
jno
xchg
ja
mov
or
test
push
mov
mov
leave
dec
or
xchg
cmp
test
jae
divl
inc
shlb
pop
adc
addr16
lret
or
and
loop
sbb
add
jne
jns
insb
jae
jnp
mov
fdivrp
lret
inc
sbb
movsb
xchg
cmp
in
je
xor
incb
lahf
sub
xchg
push
sbb
cmp
cs
orl
xlat
jmp
add
cmpsb
ret
mov
mov
fs
sbb
inc
mov
xor
fwait
xor
mov
adc
clc
sub
push
sbb
je
mov
sahf
scas
shll
push
adc
mov
in
in
inc
inc
and
out
push
pop
arpl
push
sbb
lea
popf
pop
in
fidivrs
fldl
call
dec
mov
mov
adc
cmpb
in
arpl
mov
fisttpl
cmp
movsl
mov
mov
or
pop
xor
mov
add
jmp
xchg
inc
pusha
mov
xor
nop
aad
sbbb
mov
mov
adc
xchg
inc
fnstenv
test
sub
or
incb
incl
lahf
inc
push
mov
lods
lds
or
add
dec
out
pop
xchg
cli
push
pop
sbb
pop
sub
add
out
minps
jecxz
sub
push
mov
daa
je
push
pop
inc
test
inc
cmp
jno
jb
inc
fwait
xlat
and
lret
and
cwtl
mov
pop
hlt
sbb
jg
xor
add
insb
push
mov
shrd
jl
jb
mov
mulb
and
pop
xchg
stc
sub
xor
into
pop
fistl
mov
push
vmwrite
in
movsb
fiaddl
mov
jo
pop
cltd
xchg
in
jb
pop
push
leave
sub
push
jle
cmc
mov
aas
xchg
movsl
scas
push
mov
mov
lret
js
mov
insl
xor
cmc
es
jecxz
cltd
enter
fisubs
fldcw
outsb
test
xlat
xor
sub
mov
inc
fisttpl
xchg
test
std
push
mov
cmpsl
repz
push
xchg
outsb
out
mov
sti
mov
push
mov
push
pop
in
aas
mov
mulb
xchg
push
aam
sub
xor
mov
push
xor
repz
cmpsl
pusha
pusha
xlat
xchg
test
inc
sbb
cmp
or
pop
sub
or
xor
int
mov
icebp
cmpb
xor
popa
pushf
dec
cs
scas
lods
ffreep
fldcw
mov
add
icebp
scas
cmpsl
inc
inc
pop
xor
lds
fwait
mov
out
mov
decl
add
xchg
iret
inc
pop
rcrl
out
icebp
pop
cs
sub
sub
popl
or
roll
in
adc
int
sub
mov
sbb
push
incl
mov
popa
jo
dec
ret
fdivrs
inc
sub
sub
sub
bound
mov
cmp
push
sahf
mov
push
imul
pop
jl
push
xchg
mov
jp
jg
in
leave
cmc
ss
pop
clc
mov
jmp
mov
jnp
jge
shll
clc
xor
insb
inc
cmp
lret
cmpsb
call
jo
test
outsb
push
mov
mov
in
loope
in
push
stc
add
pop
sbb
sbb
pop
mov
jmp
je
iret
xchg
xor
jl
push
pusha
pop
les
xchg
cmp
add
lods
push
sub
ret
xchg
add
push
inc
mov
mov
fs
adcb
ljmp
test
lea
cmp
mov
fs
into
stos
cmp
cmp
pop
in
arpl
pop
sbb
jns
mov
jae
inc
mov
in
jns
xchg
adc
aad
out
mov
pop
mov
insl
xchg
mov
xchg
mov
jge
jo
xchg
mov
jae
push
fxch
xlat
cld
cmc
sub
popa
in
pop
lcall
ret
popf
sbb
leave
pop
cltd
add
sti
fsubp
dec
ljmp
in
dec
test
dec
xor
imul
xchg
andb
inc
std
jns
jl
dec
cwtl
push
inc
jbe
cli
es
cmpl
mov
das
sub
inc
fwait
ror
nop
pop
pop
xlat
insl
add
adc
popa
push
fldenv
mov
fldenv
add
dec
test
test
jb
adc
imul
and
inc
dec
rclb
movsb
enter
xchg
loop
mov
decb
pushw
add
pop
mov
sbb
pop
push
dec
jmp
ja
and
js
mov
jp
repz
test
push
add
cmpsl
or
dec
push
xchg
pop
iret
or
inc
ret
filds
mov
inc
test
stos
fildl
and
sub
jmp
jmp
lock
xchg
dec
and
int
jne
jl
lahf
adc
fwait
inc
call
pop
fxam
xor
xor
add
enter
arpl
xchg
lcall
inc
inc
inc
xchg
dec
mov
sbb
sbb
xchg
bound
sahf
mov
fisttps
ljmp
aad
fs
pushf
mov
std
iret
hlt
mov
sahf
stos
jb
mov
adc
jne
and
inc
out
jo
jne
and
mov
cli
addl
dec
das
ficoms
call
or
loope,pt
jbe
testb
test
dec
adc
push
fadd
fcmovbe
fdivs
test
mov
mov
stos
cwtl
push
and
jg
mov
add
in
xchg
std
jp
out
insb
sub
in
loopne
sub
mov
cmc
xor
scas
repz
push
adc
xchg
sub
aad
inc
lds
cmp
jb
push
or
daa
fists
jl
inc
mov
aad
and
adc
xor
into
int3
push
pop
pop
push
arpl
daa
push
scas
scas
push
or
push
dec
pop
call
jbe
sahf
cmpsb
inc
cmpsl
adc
ret
mov
cs
jmp
dec
push
in
sbb
dec
add
xchg
mov
popf
movb
popf
mov
jb
dec
or
mov
fistps
xchg
jnp
shlb
mov
lods
sahf
cmpsb
push
nop
mov
pusha
jb
test
rcr
inc
stc
cmp
mov
lock
leave
in
js
ljmp
out
icebp
pop
lret
sbb
jb
mov
std
xorl
out
lds
rorb
int
mov
jo
pushf
sbb
mov
in
cmp
roll
pop
inc
cmp
fmull
imul
lcall
into
mov
jmp
orb
push
xchg
sarl
test
cmc
xchg
mov
test
fs
dec
inc
ret
call
push
mov
push
mov
enter
sub
repnz
jg
xor
fdivs
xor
bound
jne
jle
leave
add
adc
xchg
loopne
xor
lods
mov
aaa
jb
popa
cmp
dec
cld
jg
pop
data16
ret
xchg
push
add
ret
xchg
sbb
jl
in
adc
mov
dec
loopne
xor
dec
push
mov
out
pop
scas
cmc
sbb
adc
push
push
inc
inc
mov
inc
inc
frstor
xor
lods
push
cs
xchg
ret
and
in
gs
or
rolb
cmpsl
cmp
add
xchg
adc
jne
jne
leave
into
fcoms
jmp
push
xor
jmp
test
dec
aas
iret
es
rclb
sub
cmpsb
bound
inc
insl
dec
add
add
adc
mov
cwtl
inc
inc
mov
xor
dec
adc
push
jbe
rorb
lods
insb
or
adc
lret
fs
sbb
imul
out
mov
mov
sbb
dec
inc
test
mov
xor
mov
idivb
push
or
inc
repnz
addr16
testb
cmp
sbb
and
pop
xchg
xor
in
dec
mov
xor
pop
sbb
and
aam
mov
cmp
cmp
rcrl
sbb
into
aas
inc
jb
dec
ss
test
imul
add
jge
and
add
cli
iret
movb
cmp
xchg
test
push
mov
mov
jne
dec
sub
inc
xor
mov
dec
or
inc
mov
add
aam
inc
xor
mov
xlat
int
dec
adc
rcrl
clc
mov
hlt
push
inc
sahf
inc
inc
add
inc
xchg
aaa
loopne
aam
fcmovbe
ljmp
lods
and
inc
mov
push
cmpsl
mov
push
push
adc
or
cmp
popf
adc
enter
cs
stos
mov
rolb
mov
jae
lahf
fisubrs
leave
jb
lret
sbb
loope
mov
das
lock
inc
mov
push
or
xchg
aad
mov
pop
push
and
push
insl
mov
jl
or
sbb
inc
pop
repnz
mov
or
cmpsb
cmc
jle
dec
popl
inc
sar
jl
adc
mov
push
filds
pop
cmpsl
adc
mov
push
cmpsl
lret
pop
movsl
mov
pushl
mov
xorb
stos
mov
cmp
inc
cltd
dec
enter
cltd
fdivrs
mov
hlt
in
stos
int3
aas
rorl
fnstsw
cwtl
stc
xchg
bound
data16
fmuls
mov
jmp
lods
jns
filds
iret
push
iret
into
push
jg
push
mov
sub
lods
aaa
dec
cmc
dec
movsl
lods
xchg
in
jg
jb
jg
cwtl
xchg
shll
inc
mov
popa
test
out
xor
out
adc
cs
es
arpl
repnz
pop
lcall
sti
in
or
jle
xchg
lods
icebp
jg
mov
pop
lods
js
cli
js
mov
jecxz
repz
lods
jnp
les
in
stos
xchg
sahf
adc
cwtl
roll
out
fnstcw
lds
in
push
pop
mov
std
insl
sub
and
cmp
into
xchg
scas
out
xor
adc
leave
mov
pop
inc
ret
and
pusha
mov
or
mov
cmp
ffree
repnz
enter
ret
sbb
shll
lock
sbb
in
add
test
mov
jmp
push
inc
mov
inc
cwtl
insl
mov
push
rcll
mov
data16
and
stos
addb
imul
pop
sbb
pop
pop
ljmp
sub
add
cmp
mov
jmp
xchg
lock
mov
pop
mov
mov
leave
insb
enter
das
inc
cltd
push
in
jmp
les
lds
pop
daa
aaa
pop
jecxz
int3
loop
pavgw
add
cld
ljmp
xchg
daa
out
mov
xlat
lahf
cmpsb
cmpsl
popa
fisubl
in
call
bound
mov
add
push
dec
mov
bswap
sub
mov
push
pop
cmp
mov
scas
cmp
repz
orl
adc
repnz
jno
sbb
mov
int3
xor
cmp
cwtl
outsb
mov
imul
clc
pop
jmp
outsl
iret
dec
stos
push
dec
stc
cmp
subl
stc
pop
jae
daa
xor
jmp
insb
push
cld
into
mov
stc
test
dec
jecxz
lcall
push
repnz
cltd
test
pop
sti
daa
ss
mov
ficomps
inc
fmul
cltd
pop
pop
sbb
cmpsb
inc
nop
insb
push
test
pop
mov
ja
popa
sub
lea
push
xor
outsb
mov
repz
in
loop
inc
xchg
scas
xchg
iret
adc
inc
pop
mov
aam
mov
push
jl
cmp
mov
or
int3
in
dec
fdivs
sarb
xor
sbb
in
sbb
xchg
or
jae
cltd
stos
ljmp
sbb
dec
jecxz
pop
aaa
and
sbbl
jecxz
push
out
rdpmc
cmp
pop
push
dec
jge
cmp
in
fdivl
cmp
test
jnp
xchg
test
add
jnp
jg
xchg
sub
aas
cmp
rol
aas
in
sbb
sbb
loope
mov
js
stc
cmp
push
es
lods
lds
shlb
xchg
pop
ficompl
sub
pop
jle
fmulp
fwait
cmp
gs
xchg
adc
adc
mov
jno
movsl
dec
cmp
dec
leave
xor
sub
daa
mov
ret
mov
adc
sbb
negl
test
inc
mov
insb
daa
dec
test
jnp
add
repz
dec
push
mov
fidivrl
adc
popa
xchg
adc
outsl
or
sub
das
xchg
adc
dec
sti
rcrb
adc
jns
pop
cmp
int
std
or
push
lods
and
adc
xor
rcr
xor
popf
push
adc
dec
iret
clc
xchg
xchg
or
negl
adc
dec
mov
fs
negl
mov
xor
lahf
or
or
into
mov
jnp
jp
and
push
push
xor
gs
rclb
out
mov
test
in
and
push
stos
std
pop
cmp
std
loopne
int3
push
inc
pop
testb
imul
or
out
mov
mov
cmp
jno
cltd
icebp
mov
xor
iret
cmp
push
scas
ss
addr16
cmp
cmp
inc
out
xor
xchg
cmc
mov
lods
test
or
mov
mov
sub
mov
test
sbb
xor
lods
and
mov
inc
jp
cmp
add
mov
xchg
xchg
out
cmc
and
pop
push
xor
aas
xchg
cmpsb
lret
loope
pop
jne
test
jno
repz
shrl
inc
stc
dec
cmc
mov
adc
sub
insb
mov
adc
cmp
insb
aaa
nop
jp
dec
mov
stos
pop
scas
push
sarb
pop
call
std
enter
ja
adc
stc
fnstcw
pop
xor
and
cmc
push
mov
push
push
and
sub
fnstcw
pop
push
or
inc
into
mov
xor
pop
and
sahf
jecxz
movsl
std
adc
push
frstor
rol
rcll
xchg
cmp
pop
and
jge
fwait
subl
xor
test
and
push
outsl
lock
ret
or
lock
gs
jae
filds
call
stc
fsubr
adc
cmp
pop
mov
xchg
fs
jg
push
mov
pop
je
mov
jecxz
jb
pop
mov
fimull
repnz
pop
lea
test
xchg
and
push
pop
and
xchg
imul
hlt
addl
sti
lods
fs
out
stc
mov
xchg
cwtl
pop
divb
jmp
outsl
test
in
adc
sbb
mov
out
js
fmuls
das
test
fcoms
cmp
stc
ret
test
dec
sbb
xchg
jbe
js
das
mov
daa
fists
and
aaa
arpl
mov
xor
loope
pusha
sub
sub
mov
gs
or
lcall
lret
xchg
and
cltd
or
cmp
andb
scas
inc
push
push
in
ss
mov
adc
xor
adc
mov
pusha
rcrb
lret
adc
xchg
roll
xor
mov
and
ljmp
push
pmaddwd
jb
add
scas
out
or
jb
sbb
jg
pop
lahf
dec
leave
and
mov
outsl
inc
filds
bound
gs
lcall
cld
dec
dec
mov
sbb
repz
xlat
cmc
nop
into
cli
fs
sub
adc
les
inc
dec
mov
and
out
fldcw
add
dec
jge
or
out
jbe
xchg
addr16
sbb
repnz
mov
push
shll
repz
rcrl
out
mov
out
push
push
cld
outsb
das
xor
jo
popa
sbb
xchg
add
in
sub
mov
int3
fisubs
adc
fucomp
into
jmp
lahf
inc
mov
inc
ss
inc
mov
lret
cltd
mov
imul
or
int3
fnstcw
cmpsl
sbb
xchg
xchg
lods
pop
dec
dec
iret
out
dec
dec
mov
cwtl
jecxz
mov
cmc
mov
je
cmp
imul
jmp
jecxz
arpl
cmp
pop
or
aas
adc
pop
fstps
mov
popl
jae
xchg
mov
jge
clc
xor
in
cltd
or
rorb
test
test
sbb
ret
mov
dec
cmp
lods
mov
nop
scas
sti
pop
out
mov
push
sti
push
inc
sarl
aam
pusha
gs
dec
inc
xor
out
popf
and
scas
inc
pop
adc
daa
in
jg
rclb
insl
cmp
jp
mov
dec
jno
pop
mov
pop
rol
movsl
shrl
movsl
in
in
ds
sub
mov
mov
jp
push
pusha
xchg
jle
in
jbe
xchg
out
adc
leave
xor
xchg
jb
push
push
jno
mov
xchg
sbb
lods
orb
test
andl
adc
in
mov
xor
sbb
sbb
xchg
cmpsb
mov
push
bound
cld
in
push
insl
es
cmp
popl
jnp
fcomps
inc
xor
imul
jmp
shlb
orl
mov
sbb
sbb
sub
cmp
std
and
xchg
rol
dec
add
xor
movsl
dec
mov
cmpsl
rcll
ds
jge
cli
xor
dec
into
sbb
cmpsb
leave
pop
or
sbb
sub
inc
jnp
or
cmp
decl
sbb
imul
inc
imul
dec
dec
jl
pop
cmp
aaa
sbb
cwtl
and
push
clc
sahf
jo
popa
nop
or
test
into
mov
dec
jecxz
pop
inc
and
in
setnp
or
xchg
cmp
xlat
out
pop
sub
je
rcrl
adcl
cld
loopne
push
add
jae
js
jns
mov
cmpsb
aaa
cmp
cpuid
stc
pop
xchg
rcrb
aas
frstor
inc
fldenv
mov
jbe
mov
ficompl
mov
ret
xor
cwtl
fidivl
push
xor
cmpsb
cmp
and
xchg
xlat
xchg
and
loop
mov
push
mov
xchg
or
adc
push
test
int
dec
ret
sub
push
into
outsl
pop
cli
aam
push
pop
les
mov
test
cmp
xchg
inc
adc
in
sub
stc
mov
ds
xor
outsl
xorl
inc
jne
adc
push
adc
pop
in
repz
mov
xor
and
adc
enter
loope
mov
lahf
cltd
in
lea
inc
nop
popf
dec
sub
mov
lock
sub
sbb
xchg
in
xor
xor
adc
dec
add
xor
in
mov
mov
scas
and
cli
stos
and
inc
lock
lahf
mov
jbe
mov
pop
and
icebp
push
js
in
push
outsb
pop
mov
mov
sbb
xor
mov
mov
mov
mov
fs
stos
xchg
mov
ret
data16
stc
or
and
sbb
xchg
jno
or
cmp
or
sub
test
or
leave
inc
xchg
mov
leave
adc
and
mov
mov
mov
int
je
sub
xchg
xor
xchg
mov
inc
dec
fists
sbb
cmpsb
jns
xor
leave
in
pop
pop
dec
insb
mov
sbb
or
push
push
pop
mov
sbbb
sti
push
adc
mov
loope
xchg
or
js
movsl
xor
dec
xor
out
call
push
xchg
pop
or
sbb
push
or
sbb
pop
fldenv
stc
add
scas
nop
sub
js
insl
jl
scas
push
mov
mov
out
xchg
inc
push
mov
js
adc
out
out
mov
jbe
cmp
sbb
push
mul
inc
arpl
in
xchg
nop
orl
mov
lea
dec
push
mov
push
xor
mov
iret
in
inc
adc
into
movsb
shrl
or
xor
sahf
shlb
dec
sarl
mov
movsb
adc
rorl
cmp
add
push
add
fildll
dec
push
stos
bound
ss
movsb
xchg
jo
pusha
pop
add
lods
mov
push
or
add
cmpb
lcall
pop
mov
and
test
jge
adc
repnz
mov
xor
or
std
mov
in
imul
repz
popf
repnz
pop
mov
stos
int
add
dec
lret
jp
sbb
mov
sbb
or
outsl
adc
mov
xchg
cltd
stc
iret
push
ds
divl
xchg
xchg
push
cmp
aaa
jge
jg
pop
in
stc
and
mov
sahf
je
cmp
xchg
pop
cwtl
adc
mov
push
dec
cmpb
add
adc
push
jmp
lea
rcrl
adc
add
repnz
pushf
mov
repz
inc
mov
ljmp
int3
cmpsb
push
mov
std
cs
pusha
sub
dec
pop
into
cwtl
inc
cs
lods
in
leave
dec
call
mov
lcall
mov
sub
mov
gs
out
mov
stos
push
xor
dec
lods
jle
push
sysexit
push
jl
pop
inc
clc
inc
rcrb
jae
loopne
xchg
mov
loopne
loop
mov
and
inc
mov
sub
push
cmpb
fdiv
push
mov
mov
cmp
sub
and
mov
mov
xor
dec
inc
adc
add
or
add
jns
pop
enter
ret
repz
cmp
enter
mov
push
jnp
jns
push
aas
icebp
or
repz
in
inc
xor
pop
jnp
and
leave
data16
insb
or
pop
pop
dec
aam
es
push
mov
add
popa
imul
push
daa
pop
xorb
adc
fidivrs
mov
push
push
out
pusha
imul
xchg
mov
adc
sbb
sarl
fimuls
pop
lods
xchg
adc
pop
or
fldcw
and
sbb
lea
push
cwtl
ljmp
repz
sub
mov
mov
or
scas
mov
mov
mov
mov
and
push
cld
sub
pop
leave
idivb
jbe
andb
jbe
psrld
cli
out
rcrl
jle
enter
mov
mov
mov
lods
jecxz
pop
xorl
add
add
arpl
jg
test
mov
pop
cmp
imul
xlat
mov
repnz
in
or
push
xor
lret
dec
add
xchg
xchg
xor
movsb
xchg
lock
dec
sbb
mov
jp
pop
out
mov
mov
icebp
dec
stc
ja
int
add
pop
sti
pop
movsb
or
inc
push
cmp
mov
nop
pop
cmpsb
icebp
inc
cmc
test
or
inc
nop
inc
es
lret
into
or
gs
jg
test
jno
aas
push
mov
fmuls
mov
cwtl
imul
icebp
pop
sub
jge
adc
mov
mov
cmp
sbb
mov
xchg
call
jle
repnz
adc
jo
mov
push
lcall
mov
mov
or
in
iret
das
gs
shll
xchg
xchg
outsl
push
aas
lock
fwait
jae
imul
lret
cmp
sub
push
out
sub
jmp
lea
push
push
adc
enter
jno
test
clc
push
notl
pop
pop
fwait
xor
push
jno
ss
xor
mov
iret
loop
out
outsl
push
setp
jmp
pop
cmp
pushf
outsl
xchg
pop
jmp
faddl
decb
dec
push
push
cmp
mov
rclb
cltd
sbb
mov
xchg
ss
pop
in
pushf
cmp
fdivp
int
lds
jmp
mov
inc
out
lcall
mov
js
fs
and
jnp
sub
data16
lcall
xchg
pop
add
cmp
push
aam
push
in
add
mov
fwait
inc
cltd
sbb
pop
gs
inc
mov
rcr
in
rcrl
mov
inc
jno
push
mov
inc
fwait
adc
std
push
orb
mov
sub
cmp
dec
or
insb
fnstsw
mov
cmpsb
insl
jg
pop
cmp
cwtl
dec
and
or
mov
cmp
cmp
adc
in
rcrb
int3
in
xlat
movsb
or
xchg
fs
jle
cmc
xchg
clc
jns
loope
and
xor
or
mov
subb
jmp
jg
repnz
push
ret
mov
mov
aaa
call
fwait
inc
daa
cmpb
adc
js
sub
movnti
jo
pop
sahf
imul
hlt
ss
scas
cmp
mov
out
imul
mov
mov
xchg
out
dec
je
sbb
lcall
addr16
pushw
push
cltd
icebp
add
push
cmp
rcr
sub
clc
xrelease
add
cmpsb
imul
outsb
fsubrl
jae
mov
icebp
lret
lahf
dec
push
mov
lods
mov
jae
sub
clc
push
add
or
loopne
sarl
xchg
xchg
lret
adc
pop
mov
add
or
cld
sub
fidivl
add
cmp
clc
ja
xor
xor
push
xor
cmp
jnp
sbb
inc
pop
jecxz
fidivrs
mov
loopne
loopne
push
dec
dec
xor
imul
lret
mov
inc
mov
bound
out
jno
int
mov
inc
pop
jp
push
mov
inc
pop
or
jl
jnp
rorb
rcrb
bound
cmp
jbe
andb
xor
insb
sbb
dec
ja
xchg
sbb
mov
lea
or
out
dec
js
imul
mov
or
ljmp
lar
xchg
fldcw
jnp
xchg
sbb
jo
adc
inc
dec
lds
repnz
cwtl
or
jno
mov
sub
ds
adc
cld
mov
pop
adc
cmp
mov
frstor
rcr
les
sub
mov
dec
or
lret
shrb
pop
in
or
pop
push
and
jne
int
mov
mov
repnz
sbb
dec
loop
dec
cs
jecxz
stos
inc
push
dec
dec
xchg
mov
lcall
pop
push
lea
push
test
jmp
push
jbe
pop
decl
add
lret
leave
sbb
xor
aam
adcb
add
scas
jae
lods
jo
int
scas
push
dec
int
das
xchg
dec
sahf
imul
add
insb
jo
inc
test
pop
inc
jle
or
test
mul
and
cmc
into
fs
inc
pop
arpl
stos
push
and
movsl
jp
fs
sub
add
inc
call
loope
lds
lahf
test
aaa
sub
rolb
add
jmp
dec
jecxz
xlat
nop
lret
add
jno
std
fwait
mov
sub
jle
cli
into
jb
mov
xchg
clc
cs
cltd
std
mov
push
scas
movb
xchg
xor
je
push
subl
mov
add
jne
lret
inc
pop
mov
jns
sbb
push
jns
int
adcb
sub
pop
sbb
aad
cmp
pop
aas
aam
leave
inc
mov
lret
sbb
sbb
aam
dec
leave
mov
mov
cmp
aas
testl
faddl
dec
loope
sub
sub
out
stos
sub
and
and
int
scas
fildll
sbbl
and
loop
loopne
jg
and
ds
test
or
jnp
loope
cmp
dec
and
xchg
pop
mov
daa
xor
cmp
int
sbb
cmc
mov
icebp
in
cltd
pop
xor
sbb
insb
dec
dec
and
and
gs
popa
mov
gs
mov
mov
push
out
aad
repz
jmp
fisubs
aad
leave
cmp
dec
scas
test
mov
or
sbb
xchg
jmp
inc
ja
imul
orl
fdivrs
out
pop
insl
and
jnp
in
cs
aaa
adc
outsl
xor
pop
imul
es
pop
ret
mov
pop
mov
inc
mov
jmp
mov
and
jmp
push
pop
and
add
fadds
dec
push
dec
ret
test
or
mov
stos
stos
and
jmp
cmp
sbb
and
enter
sub
lods
shl
mov
rolb
xor
bound
out
dec
jno
clc
pop
in
push
dec
mov
pop
insl
inc
fsub
push
ret
mov
mov
addb
cmp
cld
jecxz
std
push
int3
add
sbb
jno
stos
xchg
pmaddwd
dec
aam
dec
xchg
sti
dec
inc
mov
ds
shrl
lret
arpl
popa
mov
mov
or
inc
aas
cltd
xor
je
sub
fwait
jns
sub
stc
adc
mov
adc
scas
xchg
push
mov
fwait
ret
sbb
out
mov
subl
sbb
pop
aas
mov
test
cmpsb
scas
fidivrs
xor
add
mov
or
pop
test
add
and
xchg
scas
movaps
jns
movsl
inc
sub
hlt
and
and
scas
push
mov
jg
pop
loop
mov
inc
jl
mov
xchg
addl
sbb
push
lahf
repnz
fstp
xchg
xchg
cld
repz
jp
mov
aaa
jno
and
pop
and
cli
or
xchg
mov
xchg
popf
call
inc
or
inc
push
mov
insl
andb
stc
dec
push
push
mov
into
loop
ss
push
popf
nop
test
mov
fs
data16
fcomps
loopne
inc
clc
js
push
nop
pop
pusha
or
mov
or
jg
jnp
lcall
jecxz
fldcw
imul
mov
popa
out
xchg
push
lcall
pop
push
addr16
aad
aaa
orl
push
inc
or
xor
aad
xchg
sub
fcomi
mov
mov
addb
jno
sub
mov
in
pop
rcrb
xchg
add
jmp
scas
cmp
adc
inc
pop
loopne
sub
push
arpl
test
js
adc
movsb
ds
fs
das
jnp
shlb
mov
lods
cmp
pushf
loop
lcall
dec
inc
dec
push
cmp
gs
addr16
jl
sub
add
lea
sub
cmp
cli
fs
add
pop
mov
cmp
jae
xchg
xor
jp
or
mov
rcl
loopne
shlb
imul
ret
dec
xchg
ds
notb
inc
jb
sbb
das
or
sbb
push
jp
ss
hlt
jmp
xor
and
pop
dec
lea
mov
sub
pop
insl
sarb
push
pop
pop
push
pop
jo
jnp
mull
mov
test
mov
es
aam
inc
or
call
repnz
mov
imul
and
lods
pop
jnp
jge
mov
mov
loop
push
mov
cmp
and
mov
fwait
ds
inc
mov
mov
inc
push
and
push
or
insb
negl
aas
sbb
add
xor
in
jecxz
pop
incb
dec
xor
dec
and
cld
mov
repnz
out
orb
popf
cmp
fsqrt
xchg
out
insl
outsb
arpl
xor
jmp
cmpsl
lock
xor
lahf
ret
jnp
xchg
ret
mov
mov
xchg
das
mov
in
sar
push
js
mov
push
cmpsb
mov
hlt
jp
aaa
add
stos
repz
call
test
and
xchg
mov
out
mov
pop
rcr
adc
insl
lahf
ret
cmp
jo
test
pop
pushf
sbbl
push
cmpsl
rolb
jmp
pop
mov
scas
subl
push
popa
rcll
shlb
xor
stc
scas
sarl
enter
idivb
fmuls
sbbb
aam
popa
ds
xchg
mov
cmp
insl
fildll
mov
mov
scas
cwtl
andl
sbb
popf
mov
and
ljmp
mov
sub
idiv
mov
inc
out
push
lret
dec
add
pop
and
je
pop
cld
sbb
xchg
mov
xchg
xchg
or
imul
aas
outsl
mov
sarb
push
inc
insl
cli
les
jbe
notb
test
shll
jg
movsl
add
sub
es
push
jge
sbb
add
sub
pop
test
test
negl
mov
jmp
mov
popa
xor
mov
ljmp
int
inc
sub
fldenv
rcrl
ret
jo
mov
and
mov
xlat
pop
in
outsb
cmpb
shrl
lret
js
rol
insb
scas
fcoml
mov
sbbl
fcoms
cmc
push
in
stc
sahf
scas
push
pop
in
leave
or
mov
int3
pop
pusha
cmpsb
cmp
and
jo
lods
adc
dec
inc
fwait
daa
fs
and
cmp
out
leave
ret
ja
cli
mov
sahf
or
push
mov
xor
inc
pop
mov
dec
push
bound
cmp
sbbb
sub
sub
outsb
fs
push
sbbl
push
out
mov
inc
push
and
call
jns
in
sbb
adc
imul
mov
xchg
adc
out
mov
sub
cmp
ret
pop
popf
sub
cld
xchg
mov
sub
lahf
nop
test
xlat
xor
aam
in
push
cmp
or
lret
arpl
ret
xchg
adc
aaa
into
mov
mov
leave
movsb
aad
mov
jno
add
lahf
leave
push
call
das
iret
add
stos
addr16
xor
sbb
sub
sarb
xchg
das
mov
cmp
rol
add
cli
repnz
cld
sbb
repnz
add
sub
or
cmp
lods
cwtl
xor
stc
test
adcb
or
and
aad
inc
scas
xchg
adc
mov
gs
dec
push
xorb
cmp
setbe
in
mov
lret
int3
mov
lret
lods
jo
mov
incb
imul
pop
adc
lret
jmp
or
or
inc
out
or
mov
cmp
sbb
out
jmp
rcrb
testb
mov
leave
ja
push
xchg
movb
dec
out
out
sub
mov
adc
jnp
xor
pop
hlt
jbe
fcomps
arpl
add
cmpsl
or
pushl
fisubs
or
and
push
loope
fs
loope
fistpll
scas
xchg
or
outsb
out
xchg
and
roll
aaa
cmpl
jmp
dec
iret
test
xchg
rcrl
in
loopne
test
mov
repz
sti
or
cmc
pop
je
push
mov
dec
stc
clc
je
mov
lahf
fnstenv
or
xchg
xchg
cmp
mov
or
push
pop
in
or
lcall
pop
and
sbb
sub
stos
test
jo
push
imul
sbb
jns
pushf
in
call
mov
mov
stos
lock
ja
aad
mov
add
sti
test
je
fdiv
mov
cmc
gs
add
out
outsb
cmpsb
icebp
fdivl
fwait
in
js
or
loope
in
mov
out
adcb
push
lea
push
stos
xor
inc
scas
adc
mov
es
arpl
jnp
loop
pop
mov
sub
push
cmp
cmp
mov
adc
push
pop
pop
nop
mov
cmp
xor
icebp
jb
jno
pop
in
xorl
push
pop
mov
sarl
faddl
mov
sub
ljmp
idivl
mov
dec
jg
add
add
mov
mov
ljmp
xchg
imul
and
jns
fwait
mov
or
sub
mov
add
sbb
or
outsl
xor
jbe
rcl
or
inc
in
mov
add
mov
sar
rcll
dec
dec
stos
mov
xchg
notl
test
les
inc
pop
add
cmp
movsl
sbb
sub
sub
xchg
icebp
push
pop
sub
xchg
mov
dec
mull
ret
dec
sarb
pop
popl
sub
subl
imul
mov
imul
test
gs
pop
shrb
or
add
aas
insl
sti
repz
fisubs
dec
decl
xor
dec
xor
dec
ret
arpl
cmp
rcll
inc
mov
imul
or
add
mov
mov
lock
inc
dec
in
jle
mov
add
jne
test
lret
punpcklbw
scas
test
adc
std
xchg
test
and
lea
xor
fisubl
test
or
push
dec
mov
add
xchg
dec
rclb
ss
jp
push
fsubrs
insb
sbbl
adc
gs
imul
mov
adc
xchg
outsl
scas
mov
dec
lret
in
cmpsb
cmpsb
jne
loopne
aad
test
cltd
xchg
xorb
test
insb
fwait
jne
push
or
test
fldenvs
jmp
std
js
sarb
jne
sbb
das
cld
mov
dec
pushf
pop
mov
popa
rcll
out
jecxz
mov
test
mov
cmc
shrb
aas
add
popf
in
aas
imulb
and
jb
das
mov
xor
xchg
xor
pop
arpl
sahf
xchg
jecxz
int3
out
in
lret
test
into
ret
ss
call
mov
lds
adc
pushf
insl
pop
cli
nop
mov
lahf
pop
or
mov
push
dec
adc
dec
fsubr
mov
xor
fdivr
mov
and
cli
ficompl
aaa
imulb
dec
add
dec
inc
push
test
in
xor
xchg
stos
faddl
xor
mov
rorb
mov
and
test
sub
jecxz
xlat
mov
test
js
rorb
in
mov
push
stos
mov
lock
lods
push
cmp
out
pop
mov
xchg
or
jbe
aam
xor
loop
adc
xchg
mov
dec
cmp
ret
mov
pop
and
push
shlb
xchg
call
sahf
pop
pop
dec
sbb
pop
outsl
mov
jp
cmp
sbb
add
in
jl
pop
adcl
sub
or
xchg
arpl
mov
pop
mov
mov
mov
adc
int3
std
bnd
push
or
lret
idivl
push
rcrl
mov
bound
mov
inc
inc
push
inc
and
test
xchg
cmovo
dec
mov
sbb
out
repz
and
cs
fcomp
stc
xchg
xchg
cmp
loop
inc
add
in
sbb
mov
and
in
or
sub
adc
xchg
popa
push
test
lret
ss
sub
addl
mov
lret
and
xor
push
cli
adc
out
lds
push
xchg
sbb
jmp
jmp
sbb
add
fcomps
xor
inc
xchg
dec
dec
add
dec
repnz
add
xor
lea
fwait
cmp
or
rorl
dec
fmulp
xchg
stos
fcmovne
and
movsl
and
popf
dec
jb
lahf
lret
dec
push
adc
cli
fists
push
xor
pop
sub
orl
mov
cvttps2pi
mov
stos
sbb
icebp
shr
mov
jne
and
addr16
nop
dec
xor
push
cmp
ja
cs
adc
adc
sbb
mov
jns
dec
mov
cmp
out
inc
mov
rorl
xor
fs
and
push
scas
adc
lcall
xor
or
loope
js
not
pop
fdivl
pushf
cltd
and
jb
les
lock
sti
pop
stos
cmp
lods
cmpsl
sub
adc
dec
sarb
mov
jl
repnz
pop
cld
incl
add
xor
mov
in
pop
jne
mov
fwait
jbe
popf
mov
mov
stos
push
aad
ja
das
stos
sbb
pop
pop
imull
push
insl
cltd
cwtl
mov
in
stos
subl
cmp
mov
jnp
sarb
cli
lods
dec
add
and
inc
push
xchg
cmp
clc
imul
daa
lea
aaa
dec
in
iret
lret
mov
mov
and
mov
sbb
sbb
dec
push
shll
inc
outsl
repnz
call
xchg
idivl
pop
daa
mov
inc
add
add
or
adc
mov
inc
addr16
loope
xchg
test
xchg
xchg
mov
jno
cli
and
sub
jns
in
mov
fcompl
aaa
je
mov
inc
insl
loopne
js
out
dec
imul
inc
fcomi
popf
inc
jp
cs
and
xor
out
dec
popf
jmp
inc
or
aaa
in
fiadds
bnd
mov
pop
or
pop
hlt
lds
insb
test
sbb
add
or
andb
add
push
jp
mov
add
pop
pop
fisttps
gs
push
sub
cmpsl
mov
xchg
xchg
mov
xchg
sbb
icebp
gs
arpl
pop
addb
jp
stc
cvtps2pd
lock
popa
cmc
mov
outsl
loop
mov
and
stos
ret
cmpsb
xor
mov
cltd
sbb
and
js
sti
andl
mov
cwtl
enter
scas
adc
sub
add
cltd
scas
mov
aad
xchg
adc
push
cltd
mov
dec
mov
dec
out
add
add
pop
test
adc
push
dec
stos
out
mov
and
stos
es
sti
ss
mov
cs
xchg
pusha
pop
aam
stc
jno
movsb
mov
mov
scas
scas
vmovss
jbe
sub
mov
lret
inc
in
sub
call
stc
and
push
loope
push
inc
push
sub
push
mov
stos
mov
fidivs
out
stc
loope
mov
sti
pop
fdivp
cmp
jb
dec
mov
lods
ficoml
mov
mov
imul
insb
xor
mov
outsb
lea
test
fs
int3
sbb
jbe
or
ret
push
pop
jecxz
test
imul
mov
sub
test
add
aaa
loopne
inc
jno
aam
xlat
mov
int3
movsb
jno
jo
pushf
shll
test
or
test
inc
pop
stc
add
outsb
imul
inc
iret
jns
mov
mov
out
in
mov
fs
jecxz
stc
push
dec
fdivp
movsl
insb
adc
mov
xchg
test
xor
mov
dec
jnp
jno
add
jne
adc
sub
out
and
xor
or
adc
dec
fidivs
or
add
xor
mov
fcoml
test
cmc
dec
inc
ficomps
in
xor
adc
lret
inc
push
add
adc
dec
popa
inc
out
push
into
mov
dec
mov
sbb
mov
jbe
icebp
add
sti
into
jne
ja
or
rol
sar
add
js
ss
mov
and
push
fiadds
leave
pop
push
push
push
mov
nop
push
mov
test
xchg
repnz
cs
jle
sahf
mov
mov
fcmovu
sarb
xchg
test
push
cs
and
push
and
mov
or
cmp
pop
lret
pop
fimuls
fs
mov
outsb
and
cmp
add
out
leave
pop
push
stos
xchg
mov
jg
jmp
dec
xlat
jle
ljmp
and
ror
mov
test
and
dec
sbb
xchg
sbb
jge
jl
mov
jl
int3
xlat
out
sub
pop
cmp
aaa
sbb
lods
mov
ljmp
push
sarl
adc
jbe
repnz
mov
jl
cmc
pop
sbb
or
dec
fbstp
fcomp
xchg
jecxz
and
lock
mov
or
sub
or
and
push
sti
sbb
dec
add
xchg
xchg
test
sbb
ljmp
xor
pop
pop
add
push
xor
jl
adc
movsb
xlat
rorl
sbbb
inc
add
mov
std
cmpsb
dec
cld
cmp
add
pop
dec
add
jg
mov
inc
out
dec
lods
into
push
hlt
push
mov
mov
inc
mov
shll
push
mov
je
das
dec
cmp
and
ss
push
add
xor
push
inc
test
scas
add
ja
fstl
adc
add
cmp
xchg
es
cmpsl
push
cwtl
orl
repz
xorb
clc
ret
and
sub
cmp
fwait
pop
pop
lcall
mov
and
insl
pop
int3
adc
data16
dec
or
jnp
and
cld
push
push
pop
jb
decb
jmp
sar
jecxz
mov
int
leave
or
jmp
xor
lea
aas
mov
xor
push
es
sub
lods
push
in
mov
push
negl
ret
out
sbb
in
bound
push
jl
mov
sahf
cmp
cmc
popf
movl
in
imul
adc
add
in
cmp
push
jge
cli
sbb
sbb
fidivl
add
and
cwtl
pop
xor
adc
xor
adc
mov
inc
sbb
out
fs
jns
xchg
lret
cmc
push
icebp
mov
inc
scas
inc
cmp
or
cmpsl
cmpsl
sub
sub
fdivrl
pop
ror
popa
sbb
mov
int
enter
lar
in
ficompl
push
movsb
lods
and
outsl
outsb
lods
shlb
sahf
out
xor
sbb
fs
fwait
inc
xchg
bound
aaa
push
nop
pop
mov
bnd
inc
cmpsb
adc
jecxz
fsubr
xchg
push
les
and
mov
mov
in
je
dec
js
xchg
push
add
int
push
or
jb
inc
in
lret
pop
pop
mov
mov
adc
xchg
pushf
adc
fistpl
sti
jbe
xchg
xlat
fidivrl
in
add
mov
clc
imul
cmp
movsl
mov
mov
sbb
pop
fiadds
jo
jp
mov
cmp
pop
scas
mov
fdivs
sbb
push
sub
ret
ret
cmp
pop
dec
push
sbb
mov
stos
in
imul
pop
bound
dec
pop
icebp
cmp
sahf
adc
iret
mov
adc
movsbl
cltd
mov
bound
push
xorb
cwtl
lcall
sub
push
xor
xchg
popa
test
sub
movsl
add
jge
iret
jge
adc
ss
int3
sub
icebp
jb
pop
pop
mov
in
jo
xchg
ss
push
mov
or
fdivr
push
pop
repz
push
dec
mov
sahf
inc
add
nop
or
dec
xor
arpl
mov
aad
f2xm1
push
cmp
push
mov
and
push
add
test
xor
loope
test
pusha
mov
push
mov
jb
jb
dec
pop
pop
or
cmp
pop
sbb
data16
sbb
lods
mov
stc
lods
jno
cmp
inc
jge
jle
add
sbb
jae
idiv
jge
or
adc
jnp
addr16
cmpsl
outsb
repz
lret
push
and
leave
adc
or
aaa
clc
loopne
or
dec
xor
mov
or
insb
push
test
int3
js
inc
push
push
push
sub
or
stos
mov
sahf
xor
mov
pop
js
sti
std
cmp
jns,pt
mov
sahf
pop
add
stos
and
push
xor
push
inc
cmpsb
dec
add
cmp
adc
sbb
xlat
and
das
ss
jne
inc
or
sbb
and
fwait
xchg
mov
pop
pop
push
push
dec
imul
in
ret
cmpsb
pop
sarl
and
mov
mov
pusha
mov
xchg
mov
jb
shlb
sub
jbe
push
out
or
push
sub
xchg
sub
pop
insw
adc
pop
fwait
jmp
jg
clc
jg
push
and
cmp
pushf
cwtl
fisttps
in
cli
loope
sbb
div
neg
in
push
insl
adc
add
xor
sti
cmp
or
lea
div
push
incl
adc
cmpb
rcll
sub
movsl
cmp
cmp
push
xor
fcomip
sahf
test
stos
fisubs
arpl
xor
jmp
test
pop
insl
arpl
js
xchg
adc
mov
add
std
dec
in
pop
js
cmc
je
mov
sbb
mov
test
sbb
adc
fisubrs
jbe
rcr
adc
pushf
sbb
mov
lret
jl
outsb
dec
or
fs
push
jle
hlt
inc
jmp
and
dec
sub
pop
mov
cmp
lret
push
cmp
lea
aaa
test
xchg
outsl
incb
rcrl
lret
addb
outsb
dec
out
adc
mov
or
out
or
cmpsb
call
mov
lods
sarb
ja
stc
sub
in
lods
cs
dec
mov
xchg
addr16
push
inc
push
cmc
loope
out
dec
out
pop
dec
out
clc
jp
push
push
cmpb
xchg
mov
nop
dec
mov
add
or
fisubs
lock
cld
dec
mov
push
xchg
xorl
sub
jg
mov
dec
fcomps
repnz
fidivrl
sti
std
icebp
mov
in
mov
xor
xor
pop
scas
inc
push
lcall
mov
fistl
sub
pop
jae
jne
test
sbb
push
dec
ja
dec
jb
aas
popa
pop
inc
jmp
loop
inc
jle
cmp
sarl
lods
popf
xchg
adc
sub
lods
sbb
test
mov
cmpb
and
insl
sub
cs
gs
mov
lea
mov
lahf
clc
pop
roll
cmpsl
mov
scas
mov
pop
in
inc
dec
fstpt
subl
or
push
xor
arpl
mov
outsb
push
rorb
imul
into
cmp
push
mov
loopne
lea
xchg
orl
jns
mov
push
xor
sysexit
and
lahf
sbb
ljmp
inc
mov
mov
pop
rcrb
or
call
aaa
dec
jo
fsub
mov
pop
jp
icebp
cmp
xor
inc
dec
inc
sbb
cmp
popa
adc
jecxz
cmc
jbe
out
jbe
dec
inc
mov
jmp
arpl
mov
or
adc
daa
dec
fsubp
cwtl
or
mov
mov
pop
hlt
fs
sub
sbbb
outsb
mov
les
mov
fisttpll
dec
daa
data16
push
sti
pop
sub
mov
mov
into
dec
cmc
add
pop
inc
push
adc
dec
in
mov
sbb
aad
out
mov
xor
fdivrl
add
or
inc
push
lds
push
jge
dec
aad
or
ljmp
jle
xor
rcr
adc
into
sbb
xor
push
adc
push
lods
fcoms
out
jle
jb
data16
les
movsb
sub
lock
das
mov
inc
xor
push
inc
xlat
icebp
in
or
enter
fstpl
jnp
les
mov
sbb
fidivl
movsb
mov
mov
cwtl
mov
push
cmpsb
inc
inc
jle
pop
and
lret
cmp
push
adc
adc
movsl
out
push
loopne
fisttpl
jne
cmp
sub
idiv
fnstcw
jp
movsb
std
test
pop
sub
lret
sub
cmp
test
fistpll
adc
and
inc
mulb
rcll
daa
mov
lods
mov
or
cmp
movsb
jo
mov
sbb
loopne
fstpt
sti
fnstenv
and
hlt
insb
js
insl
cmp
inc
rcr
movsb
imul
out
fnstenv
or
loopne
inc
push
lds
shlb
icebp
mov
dec
es
fwait
adc
mov
pusha
jp
fsub
mov
sub
adc
jo
imul
fidivrl
dec
mov
cmp
cmp
roll
pop
ficoml
int
ds
loop
or
push
icebp
adc
dec
inc
pop
mov
push
aas
popl
xchg
jecxz
pushf
testl
movsb
push
sub
push
push
add
bound
movb
loopne
in
nop
mov
ss
lds
ja
pop
pop
out
popf
sub
mov
pop
mov
and
mov
fs
sub
adc
push
jle
xchg
sub
and
sub
xor
out
fwait
jnp
mov
imul
movsb
xor
and
sub
mov
ja
test
and
sub
pushf
cli
loope
flds
inc
mov
test
sbbb
and
pop
inc
gs
aad
and
pop
mov
mov
shlb
sub
sahf
push
int
lret
xchg
sbbb
shrb
decl
sti
sbb
cld
sub
pop
or
mov
inc
jle
pusha
xor
lret
int
and
sub
inc
test
add
insl
sub
scas
in
jbe
dec
out
dec
ret
or
mov
adc
loop
in
mov
adc
jno
lock
ja
aad
cltd
dec
cmp
ja
frstor
pop
push
mov
mov
pop
ficomps
fmulp
insl
cltd
push
fucomip
pop
fstpt
cmp
cmp
sti
mov
and
push
adc
cmpsl
daa
out
arpl
mov
outsl
mov
cs
orb
stos
aaa
inc
xchg
test
dec
mov
scas
or
sub
add
push
cmpb
inc
mov
out
push
cmc
and
and
inc
rcrb
fs
or
or
outsl
jae
mov
dec
ljmp
dec
cmp
cli
sbb
movsb
or
mov
sbb
test
and
stos
xor
mov
and
xchg
test
test
jmp
cmp
jns
push
arpl
jle
lds
mov
sbb
rorl
hlt
ret
repnz
test
mov
xchg
mov
xor
adc
lret
lahf
sbb
pushf
popf
repz
ficompl
lods
sub
loope
adc
aad
push
and
test
cmp
lret
test
ss
jnp
pop
mov
data16
sbb
out
shrl
dec
loopne
icebp
aam
enter
je
push
cs
repz
and
hlt
test
daa
pop
jl
pushf
cmpsb
out
gs
fisttpl
idivl
xchg
pop
clc
mov
repz
out
push
int3
add
imul
inc
or
sbb
bound
xchg
repnz
pop
pop
and
mov
push
stos
shlb
and
or
sarb
lcall
add
sqrtps
cltd
push
repnz
jae
push
scas
test
shl
loope
and
pop
and
dec
pop
cwtl
mov
jne
xor
add
push
inc
lcall
or
sbb
or
decb
mov
dec
lods
inc
jnp
cli
inc
js
nop
and
out
jmp
pop
mov
mov
xchg
add
dec
jnp
inc
pop
xchg
ret
enter
push
call
cmp
mov
ljmp
push
mov
and
pop
je
sbb
test
fsubrl
stos
sub
daa
lods
mov
mov
aaa
add
lock
rcll
je
outsl
dec
sub
inc
add
div
mov
push
mov
mov
adc
mov
dec
enter
loopne
cs
clc
imul
dec
xor
cmp
hlt
cmp
cmp
stc
push
test
push
mov
dec
gs
push
sub
jne
mov
mov
fwait
inc
xchg
add
je
inc
jo
sbb
mov
and
rolb
jmp
enter
clc
pushf
jno
dec
divl
xlat
mov
or
ds
and
in
or
adc
xchg
pop
stos
fldcw
cmp
and
add
icebp
mov
mov
mov
mov
loop
mov
repnz
or
xchg
shlb
scas
nop
rcll
popf
mov
mov
add
add
adc
je
dec
cwtl
cli
inc
scas
mov
js
add
sub
mov
xor
dec
outsb
lret
rol
mov
and
loope
jae
cmp
clc
sbb
das
shr
inc
inc
fstp
pop
and
addr16
push
sub
loope
std
adc
sbb
outsl
icebp
repz
dec
inc
ds
and
inc
and
std
xor
mov
lock
cmp
pop
call
push
test
popf
test
popa
cwtl
add
mov
mov
cmp
testb
add
in
or
insl
sbbl
mov
cmpsl
inc
and
push
cmp
jo
in
jecxz
mov
xchg
jno
lcall
push
jb
test
aad
xor
jmp
lret
push
sar
out
popl
cmpl
out
mov
sub
aad
xor
adc
sbb
fucomp
testl
lret
dec
and
call
xor
fstpl
popf
adc
ret
push
rcr
or
add
addb
cmpsw
push
in
repz
cmp
cmpsb
mov
pop
dec
shrl
in
push
js
test
mov
pop
movsl
push
jp
popa
aam
insb
lret
mov
fisubs
mov
fidivl
pop
cmp
aam
pop
sub
xchg
push
ljmp
outsb
mov
push
mov
insb
jns
mov
mov
je
repz
scas
sarl
cmp
adc
clc
les
insl
jbe
xchg
adc
inc
and
lahf
or
dec
jae
inc
dec
icebp
mov
cmp
jp
or
push
dec
insb
test
or
mov
movsl
mov
pop
inc
sti
gs
jbe
loope
adc
nop
jle
pop
pusha
stos
les
aaa
pop
jg
bound
mov
aad
or
or
cmp
shl
fisubrs
inc
arpl
stc
dec
scas
clc
pop
cltd
insl
fwait
sbb
notl
adc
and
xchg
dec
fwait
sub
insb
imul
js
pushf
mov
adc
mov
ljmp
mov
rolb
int
mov
adc
xchg
mov
dec
sbb
cmp
paddq
mov
pop
push
ljmp
in
out
ds
sbb
shl
aam
cmpsb
pop
dec
push
mov
stos
in
mov
pop
pop
in
je
cmpsl
xchg
fcmovb
xor
out
cmc
lahf
xor
dec
pop
xor
lea
xchg
lret
insb
inc
dec
iret
aam
adc
test
jns
jno
cmpsb
cmp
imul
aam
aam
xor
mov
das
popf
xchg
push
aad
in
or
dec
insl
pushf
outsl
jb
and
lret
jno
enter
ds
sbb
xchg
das
pop
lahf
xchg
sahf
stos
mov
ds
jne
ret
xor
mov
sub
or
or
dec
mov
jl
sbb
push
out
jmp
push
sbb
mov
ljmp
mov
jecxz
inc
cmp
mov
ret
push
adc
aam
add
adc
xchg
stos
dec
sbb
xchg
cmp
sbb
fisttpl
pop
js
inc
cmp
push
sub
in
mov
xchg
cmpsl
loopne
mov
loope
mov
pop
les
iret
pop
mov
iret
mov
adc
inc
sub
pop
into
or
push
push
sub
sbb
xchg
repnz
sti
pop
or
and
or
fstpt
movsl
push
faddp
xor
in
sub
xlat
push
cmp
push
push
sub
popf
jp
mov
stc
xorl
into
push
addl
jl
sub
adc
lret
clc
xor
adc
dec
pop
aas
loop
mov
mov
mov
jo
icebp
adc
cwtl
andb
jb
push
iret
les
adc
dec
repz
iret
outsl
xor
or
cmpsb
popa
push
popf
sub
out
cmpsl
jne
subb
fistpl
or
fs
mov
testl
mov
movsl
pop
or
mov
cmp
mov
xchg
xchg
add
jbe
push
sbb
loopne
mov
mov
sub
jecxz
lahf
cmp
out
out
dec
clc
cmpl
fs
mov
dec
daa
jl
xchg
jmp
pop
insl
dec
add
adc
jmp
push
and
xchg
lea
jo
cld
ret
scas
lods
pop
sub
pop
ret
scas
sub
lcall
into
mov
add
stc
pushf
das
add
jb
cmp
push
xor
xor
jo
push
mov
stc
dec
pushf
insb
xor
inc
test
nop
test
addr16
cmpsb
sub
mov
bound
mov
les
xchg
fnstsw
mov
je
or
mov
jmp
xchg
test
into
push
lock
out
add
jnp
and
fstpt
sub
jo
xor
dec
mov
data16
lds
push
and
jmp
add
daa
lret
cmp
push
shrb
push
inc
lcall
testb
sbb
ds
mov
fiadds
or
mov
clc
aam
and
out
add
jb
mov
inc
inc
iret
rcr
mov
mov
dec
add
sub
ja
mov
dec
xor
cmpsb
cmp
dec
mov
test
xchg
mov
mov
or
or
jge
clc
push
sub
mov
inc
mov
nop
mov
or
les
xchg
sarb
adc
push
push
jb
sbbb
enter
das
xchg
stos
jne
mov
jp
mov
push
in
inc
push
adc
mov
cwtl
inc
push
cmp
push
sahf
and
xchg
ror
mov
cmpsb
insb
ja
or
sbb
outsl
lcall
pop
add
imul
cli
test
ljmp
lods
mov
loopne
je
xor
mov
cli
stos
mov
sbb
inc
xchg
add
pop
dec
fstl
sbb
mov
push
popf
jne
sbb
xor
push
lret
les
icebp
fldcw
aad
cmp
push
mov
inc
lcall
inc
test
pop
pop
dec
movsb
ds
pushf
mulb
pop
sub
and
jg
or
jns
sub
jge
aas
fwait
push
inc
push
push
outsl
insb
or
mov
add
nop
adc
xchg
aaa
out
dec
fnstenv
call
inc
sahf
fstp
scas
add
loop
mov
sub
aam
js
lock
test
out
add
mov
push
inc
movsb
push
pop
jb
xchg
mov
dec
mov
cmp
xor
mov
pushf
sub
test
lock
loopne
jp
xorb
mov
xor
stc
repz
iret
out
inc
mov
sbb
enter
pop
lock
js
gs
insl
mov
lcall
or
std
test
xor
add
insb
add
mov
mov
dec
jns
push
aaa
mov
mov
xchg
rorb
jb
cmpl
imul
dec
loop
negb
mov
mov
in
imul
xchg
xor
dec
xchg
ret
or
nop
adc
imul
popf
mov
iret
push
inc
lea
negb
dec
mov
divb
loop
push
daa
jns
rclb
test
sbb
bound
das
mov
inc
sbb
pop
mov
cmpsl
mov
in
in
cltd
jb
stos
test
xchg
push
aaa
or
sbbl
icebp
jmp
clc
cmovge
add
push
lret
cmp
or
mov
mov
out
xchg
mov
mov
pop
cmp
sbb
add
push
loope
pop
mov
jns
fbstp
cmp
mov
sub
arpl
push
mov
mov
cmp
mov
leave
inc
xchg
cmpsb
insl
xlat
jmp
ret
jle
lods
lcall
test
jne
sbb
jge
or
mov
daa
push
xchg
add
sahf
mov
cmp
mov
rcll
mov
cmp
jmp
jle
xchg
jo
inc
dec
cmp
in
ret
pop
call
lea
scas
xchg
cld
repnz
test
icebp
mov
add
cmp
mov
pop
lods
mov
lods
ljmp
sysenter
or
dec
mov
adc
xchg
mov
sbbl
leave
xchg
add
pop
mov
xor
or
fadd
and
jl
mulb
push
cmp
lods
push
jmp
divl
or
mov
push
mov
bound
or
sbb
mov
mov
jle
push
jne
fildll
dec
call
pusha
jmp
push
dec
mov
push
cmp
pop
call
mov
aad
xchg
addr16
clc
mov
es
inc
nop
sbb
adc
push
push
lcall
dec
test
jbe
shlb
mov
and
pusha
mov
rorb
cltd
loope
push
nop
push
pop
push
xor
ficomps
lods
cmp
addr16
jp
and
sub
insb
test
ja
loopne
sbb
lods
mov
std
int3
xchg
popf
insl
cmpsl
jle
shl
and
adc
xor
cmp
aad
sub
jle
xchg
lock
pop
loopne
fwait
imul
jae
outsb
xchg
shrl
mov
xlat
out
push
ret
cltd
int3
mov
daa
mov
or
cmpl
adc
pop
pop
cmp
cmc
lret
ljmp
stos
sbb
sbb
test
pop
cltd
mov
daa
test
inc
cmc
int3
mov
lcall
fmuls
or
xchg
lods
ret
mov
xor
in
adc
adc
orl
sti
xor
pop
ljmp
add
addl
clc
scas
into
pop
pusha
pop
and
orb
pushf
wrmsr
icebp
out
sub
gs
out
cmp
mov
pop
outsl
adc
cwtl
out
cwtl
or
pop
insl
cmpsl
out
xlat
jp
jmp
movsb
sbb
mov
push
mov
inc
dec
fmuls
xor
rclb
fiadds
jo
pop
and
push
mov
out
push
icebp
add
nop
dec
jg
or
jns
iret
pop
push
rcl
and
sbbl
mov
out
lcall
cwtl
push
and
or
cld
pop
xor
mov
push
lock
add
mov
dec
and
fdivs
cli
mov
sub
pop
sbb
mov
mov
and
mov
rorb
scas
icebp
test
xor
jb
xchg
iret
adc
push
add
sbb
and
lcall
add
ljmp
and
ret
fsubrl
jl
in
cmp
movsl
mov
dec
sbb
fildll
les
jb
inc
mov
sub
nop
call
es
sahf
sub
sar
and
enter
jbe
or
xchg
stos
lock
jp
scas
adc
stos
sub
addr16
push
mov
mov
and
dec
je
dec
clc
mov
mov
push
xchg
jo
xor
lods
int
sub
pop
and
mov
xchg
mov
iret
insb
hlt
aam
fldcw
mov
mov
pop
mov
xchg
and
and
dec
jge
divb
cld
mov
sub
inc
dec
int3
imul
mov
mov
lret
jne
jl
cmp
movsb
jbe
sbb
rorl
and
daa
lret
sbb
push
or
mov
and
stc
cwtl
mov
mov
clc
sbbb
add
pop
push
flds
ds
push
mov
xor
test
in
add
pop
or
push
outsb
push
out
sahf
cmp
sbb
arpl
xor
and
push
in
dec
mov
adc
je
loopne
cwtl
stos
lahf
cmp
xor
mov
movsl
arpl
inc
mov
add
sbbl
je
decb
push
shr
movsl
arpl
in
jb
std
or
mov
pop
sbbl
push
test
into
std
dec
xorl
fscale
in
arpl
scas
repnz
in
inc
push
and
int3
pop
inc
insl
jae
test
into
jb
jbe
push
dec
dec
mov
mov
xor
sub
in
inc
icebp
jmp
movsb
aam
and
sbb
push
popf
inc
call
into
xchg
sti
clc
fsubrs
es
inc
or
adc
loope
repz
add
mov
jo
into
sub
sbb
add
inc
movb
test
loop
lea
xor
inc
mov
adc
sub
push
fs
cmc
lods
call
test
push
test
inc
inc
mov
sub
pushf
movl
inc
stc
data16
enter
xchg
push
sti
push
mov
in
sti
or
cmp
pop
sbb
jmp
add
jmp
imull
hlt
jnp
lods
xor
insl
cmp
sbb
imul
test
adc
pop
or
test
lock
push
add
insb
fnstcw
mov
inc
sub
stos
aam
jns
pop
mov
push
je
mov
std
sbb
xor
out
lods
sbb
cltd
xor
sbb
or
mov
je
add
pop
lcall
mov
and
lret
cmp
or
xchg
test
cmp
push
ja
or
in
push
mov
or
mov
sub
sub
xor
mov
xchg
fiaddl
cmpsl
pop
adc
cmp
loope
ljmp
add
mov
loope
movsl
in
xor
cmpsb
xchg
inc
xchg
ss
and
push
sahf
pop
pop
popa
jmp
loope
lods
je
fiaddl
gs
lcall
nop
or
jmp
xor
sarl
mov
adc
mov
jl
pusha
xchg
fdiv
enter
fildl
push
pusha
insb
fs
jl
lret
adc
ljmp
jbe
out
xchg
test
jge
add
mov
pop
fsubr
pusha
js
and
xchg
xchg
movsb
xchg
adc
mov
arpl
mov
adc
jecxz
test
pop
loope
push
sub
cmc
fildl
std
or
sub
popf
mov
pop
hlt
cmpsl
in
fldenv
andl
adc
orb
cltd
cli
xchg
or
xchg
outsb
sti
mov
push
sub
ss
xchg
cltd
or
js
inc
shll
sbb
mov
repnz
sbb
dec
mov
mov
push
add
stos
shlb
andb
jl
push
popa
xor
ret
mov
outsl
repnz
xchg
aam
loop
push
jg
xchg
mov
xlat
cmp
stos
push
add
mov
mov
mov
mov
aaa
imul
sarb
push
mov
and
das
sub
cmpsl
js
andl
ja
adc
fs
jns
add
push
andl
jae
sbb
imull
mov
es
sarl
or
dec
rclb
cmc
psrad
scas
mov
orl
mov
xchg
faddl
rcll
sti
flds
jp
xor
fidivs
xchg
lcall
aad
pop
stos
xchg
loop
mov
stos
stc
aad
or
mov
clc
les
pusha
idivl
or
adc
stos
ss
daa
in
pop
int3
sbb
and
pop
stc
xchg
fldcw
push
aaa
cmp
dec
outsl
xor
pushf
daa
jae
into
mov
pop
pop
test
repz
in
aas
les
mov
jmp
xlat
movsb
jg
push
in
fnsave
test
test
pop
nop
inc
mov
or
in
xlat
test
jmp
cmp
or
xor
pop
cmp
or
cmc
jns
dec
push
ljmp
jb
aad
mov
cmpb
jae
aad
pop
aam
bound
ret
pop
xchg
decb
lret
aas
and
es
pop
xchg
pop
js
mov
inc
jg
pop
or
stc
jp
lods
icebp
outsl
cli
aad
sahf
fldcw
mov
sbb
in
insl
pop
pop
out
xchg
pop
testb
dec
push
xlat
or
addr16
push
mov
test
jg
lods
mov
das
mov
test
push
es
mov
inc
pop
adc
popa
pop
in
aad
aam
jo
push
jae
jecxz
cmp
adc
cmc
fmull
pop
in
lret
popa
es
sbb
push
mov
xchg
fs
or
add
testl
pop
daa
cmp
pop
test
jnp
cld
push
cli
push
aad
add
popf
fnstenv
imul
aas
inc
cmp
std
xor
jge
dec
je
xchg
adc
lods
test
clc
jnp
mov
mov
pop
daa
mov
add
mov
leave
cltd
sahf
cmpsl
ja
addr16
cmp
and
fnstsw
cmp
xchg
ja
lret
iret
dec
adc
movsb
jnp
ret
pop
xchg
je
cli
and
aad
xchg
ss
pop
inc
daa
cmp
mov
repnz
pop
inc
xlat
cmp
fistpl
inc
adc
sbb
mov
neg
aas
xchg
daa
mov
jecxz
adc
mov
xor
xchg
xor
pop
test
vpavgw
and
jecxz
addr16
pop
mov
outsl
lods
cmc
hlt
dec
sbb
inc
mov
cmp
xor
cmpl
or
scas
jae
and
loope
sub
mov
mov
adc
cmp
dec
sbb
pop
hlt
jae
mov
ds
and
shl
push
cld
dec
jo
add
lods
and
fs
gs
or
movsb
fisttpll
rorl
xchg
fwait
dec
push
mov
sbb
dec
mov
addr16
cmpsl
xchg
cwtl
sub
out
dec
push
dec
mov
add
mov
and
insb
add
mov
pop
jl
shr
add
and
leave
nop
xor
jl
xchg
push
adcl
push
cltd
or
xchg
xchg
or
test
cs
xchg
dec
je
sbb
mov
jbe
cmp
repnz
pop
jg
int
mov
jbe
pop
jb
out
cmp
scas
add
mov
scas
jb
xor
inc
sbb
jl
add
fs
inc
shlb
xchg
mov
sbb
movb
sbb
sbb
sub
or
into
sub
mov
aam
bound
pop
mov
mov
fucomp
xor
lahf
cmp
in
sti
push
adc
or
push
jo
sbb
mov
cmp
sbb
mov
or
and
mov
shrl
adcl
js
stc
lret
mov
jbe
out
mov
adc
sbb
or
mov
jp
bound
lahf
push
push
add
or
jg
into
and
jecxz
loopne
mov
fcmovnbe
xchg
and
fstpt
xchg
jp
mov
sbb
shrl
mov
fildl
ja
pushf
hlt
bound
inc
or
in
std
mov
mov
cmp
push
cmp
pop
cmp
fs
pop
stc
adc
pop
jbe
test
sti
jne
sub
mov
jb
fcmovne
sahf
push
data16
lahf
mov
movsb
cmp
mov
mov
cmp
cli
aad
mov
inc
stos
dec
jb
cmp
mov
shll
call
cli
cmp
mov
jnp
test
and
push
inc
inc
dec
pop
std
push
mov
add
jmp
jb
push
mov
push
fldt
mov
jp
outsl
push
std
cmp
pop
out
pop
adc
and
call
shll
xchg
cmp
fwait
int
sbbl
movsb
pop
fneni(8087
adc
jmp
lock
pop
xor
dec
aaa
pop
arpl
add
sahf
cmpsb
lret
cmp
mov
push
and
mov
int
pop
in
lods
jecxz
adc
mov
inc
jb
dec
inc
pop
fsubrs
lcall
pop
sub
arpl
mov
clc
push
inc
and
xor
cmp
aad
stos
int
ljmp
push
in
xor
sub
out
fcompl
pop
xor
dec
sbb
sbb
test
mov
mov
inc
xchg
lods
js
xchg
adc
mov
xlat
repnz
fcompl
mov
mov
aam
xchg
loopne
add
jmp
or
sbb
mov
jp
or
call
bswap
xchg
cmp
and
cli
dec
inc
jmp
ljmp
mov
shl
jp
and
xchg
dec
inc
outsb
or
iret
hlt
inc
push
icebp
stc
cmpsb
popa
mov
leave
xor
push
inc
push
pop
xchg
push
mov
imul
lods
or
mov
inc
pushf
xor
daa
or
ja
push
scas
pop
lret
mov
adc
mov
fdivl
jnp
sbb
fildl
repnz
add
mov
hlt
sbb
orb
xchg
fld
cmp
test
repz
cld
mov
mov
push
mov
aam
lcall
scas
std
int
loope
out
pop
fldenv
inc
int
adc
testl
insb
or
cmc
lcall
dec
sbb
sbb
and
insl
test
push
dec
dec
imul
ret
push
inc
lea
sub
nop
adc
insb
test
lcall
enter
adc
xor
xor
hlt
movsb
mov
imul
es
push
ret
lret
es
daa
in
push
imul
pop
push
sub
iret
and
ja
xor
push
push
cmp
or
push
pop
fnstcw
sbb
pslld
push
fisubl
je
mov
sbbl
sahf
in
outsb
xchg
jmp
lret
dec
decb
inc
aam
clc
aaa
lret
push
mov
stos
pusha
and
in
lods
mov
inc
decb
popa
xlat
fldl
lret
mov
stos
decb
stos
and
mov
in
ret
subb
pop
adc
fwait
cmp
in
ret
push
movsl
xchg
adc
dec
and
add
clc
jo
jp
repnz
jnp
into
inc
pop
movsb
xchg
sbb
inc
jae
xor
jae
std
cmp
jp
in
lret
cwtl
inc
push
sti
xor
pop
pop
mov
push
inc
pop
and
xchg
adc
das
iret
jg
or
ja
push
xor
mov
mov
jl
xor
test
or
xchg
repnz
imull
or
mov
xor
xchg
in
ds
jge
sbb
cmpsl
out
sarb
pop
lgs
cmp
cmp
subl
adc
jb
pushl
imul
push
push
mov
arpl
mov
or
inc
faddl
sti
pushf
cli
fstl
in
lods
mov
jge
mov
sbb
xchg
inc
jle
fdivrs
aad
ret
jae
mov
jmp
dec
mov
pop
xchg
sbb
sbb
gs
push
or
adc
push
out
cmp
cmpsb
test
add
pop
mov
gs
shlb
aam
jno
fs
jb
jnp
pop
ret
js
aaa
add
mov
cwtl
ret
ret
lea
cmp
cld
es
pusha
push
mov
inc
out
cmp
mov
pop
jp
enter
jmp
mov
cwtl
jno
adc
popl
lods
cmpsl
shr
pop
push
mov
dec
push
mov
cltd
arpl
cmpsl
mov
outsl
int
pop
pop
mov
and
popa
jns
bound
push
in
mov
repnz
ja
movsl
negb
xor
sti
ficoms
cld
into
cmp
and
xchg
adc
xchg
aam
mov
addr16
cli
add
pop
mov
lahf
xlat
int3
xor
mov
dec
out
mov
movsb
mov
fucom
outsl
out
and
enter
jg
test
rcll
fwait
repz
add
xlat
std
pop
dec
push
leave
fsts
sub
add
clc
cmp
xchg
leave
in
inc
jp
not
or
push
enter
adc
das
dec
icebp
lret
inc
mov
sub
call
out
pushf
xchg
cwtl
sub
mov
int
push
pop
mov
rcrb
int
frstor
pop
jmp
xor
mov
push
adc
xor
ret
into
cwtl
les
pop
add
add
popa
push
inc
into
cmpsl
fists
scas
or
inc
inc
imul
stos
or
add
loopne
nop
sbb
xadd
dec
mov
shl
xchg
aam
loope
push
xchg
push
dec
ret
cltd
enter
insl
les
fdivs
mov
xor
scas
adc
mov
inc
dec
xor
jnp
cmpsl
or
loop
out
push
cmc
mov
cmp
cmp
ja
mov
out
outsl
mov
ror
mov
and
ret
xchg
out
mov
adcl
test
add
jge
mov
sub
mov
dec
repnz
insb
aad
scas
out
cmpsl
cmp
fs
cmp
push
inc
mov
mov
orl
adc
jno
dec
xor
fcoml
lret
cltd
mov
mov
dec
mov
xor
clc
in
sbb
rol
mov
mov
mov
and
ds
test
push
sbb
or
mov
cmpsl
imull
mov
js
xor
cmp
mov
shll
inc
mov
outsb
mov
in
adc
ret
push
addr16
mov
sbb
inc
push
test
mov
imul
or
push
outsb
jnp
jecxz
dec
mov
adc
in
xchg
dec
push
in
jne
repnz
xchg
xor
cmp
fcompl
test
xor
jbe
jae
inc
sub
push
mov
mov
outsb
xchg
test
cmp
loopne
sbbl
mov
mov
jmp
push
jo
mov
ss
dec
sub
fst
mov
bound
and
clc
jbe
rol
jmp
movsb
add
sbb
fdiv
xchg
jb
push
jmp
inc
fwait
inc
mov
add
movl
sahf
rcrl
cs
es
orl
mov
mov
xor
out
dec
xchg
jo
xchg
sub
das
fwait
loope
es
mov
out
adcl
xor
shlb
adc
jl
inc
jmp
aam
ljmp
pop
dec
add
dec
xchg
and
jmp
dec
adc
mov
fsts
inc
cmpsl
inc
pop
jmp
jno
jmp
daa
mov
inc
js
pop
mov
push
push
insl
andb
cmpsl
movsb
cmpsl
test
lahf
lds
aaa
stos
mov
pop
repnz
pop
sbb
shrb
dec
ffreep
sbb
sbb
fistl
ret
lds
sbb
cwtl
mov
out
pop
mov
add
jp
in
inc
dec
and
gs
fmuls
clc
out
in
mov
clc
adc
jl
or
add
jno
jmp
adc
xor
shll
hlt
sbb
sub
cs
pop
pop
inc
lcall
insb
mov
shlb
test
pop
jae
aam
mov
int
mov
add
add
stos
adc
out
mov
xchg
and
and
mov
mov
jbe
cmpsb
xchg
add
repz
adc
and
and
repz
mov
movsl
mov
push
andl
add
cs
nop
and
lods
pop
ror
dec
imul
in
pop
cwtl
aaa
outsb
int3
mov
andb
mov
in
test
mov
mov
mov
call
or
lret
js
jae
jp
and
cmc
fldcw
pushf
lock
or
xchg
outsl
mov
iret
loopne
or
xor
jp
xchg
jge
push
scas
lret
xchg
ss
or
pop
mov
pop
cmp
push
push
push
pop
xlat
bound
sahf
mov
lcall
xlat
lds
hlt
das
test
rorl
mov
mov
jecxz
add
fisubs
dec
cmovge
push
ror
pop
push
mov
xor
stos
inc
out
jecxz
cmp
push
cmp
mov
mov
and
and
cmp
mov
dec
push
sub
fcmovnu
push
push
pop
xlat
lock
adc
aad
test
xchg
pop
lds
jo
mov
fnstcw
or
div
mov
mov
sub
mov
mov
and
adc
out
mov
flds
add
in
rcll
repz
pop
mov
mov
mov
in
pop
xor
push
xchg
pushf
js
jae
out
faddl
pushl
mov
and
pushf
fistps
add
xrelease
push
repnz
andl
test
and
xlat
and
arpl
mov
jge
pop
mov
cmpb
cmp
and
pusha
in
sub
xlat
mov
add
xor
data16
cmp
cltd
out
adc
and
bound
les
je
ret
cmpsb
xchg
and
iret
xor
popf
cmpsl
xchg
ss
mov
mov
jge
fdivs
pop
add
mov
sbb
push
insb
jge
scas
cmp
mov
int
les
or
jl
test
sbb
cmp
iret
xor
push
adc
enter
xchg
addr16
inc
cmp
movsl
xchg
out
xor
fs
push
sub
add
xor
cmp
dec
fwait
cs
push
pop
adc
push
and
dec
pop
push
fildll
pop
mov
mov
inc
test
inc
data16
adc
add
mov
add
subl
pop
inc
cmpsl
sub
leave
cmp
imull
popf
addb
mov
jmp
jg
rcl
mov
loope
adc
fs
or
mov
jle
aas
sub
subl
aad
leave
rolb
mov
movsl
cmp
insl
imul
ret
push
fs
mov
cmp
addr16
in
pop
or
jecxz
sub
cmp
and
rcrl
mov
mov
push
xchg
cmp
mov
dec
orb
adc
out
xor
and
mov
subb
and
jo
mov
push
fnsave
js
and
sub
and
mov
sub
rcrl
push
and
mov
lock
dec
mov
addr16
inc
mov
jae
push
shll
xchg
xchg
xor
add
mov
cmp
test
in
dec
js
cli
jg
test
pop
out
jno
bound
nop
add
mov
scas
jmp
hlt
xchg
hlt
fwait
jns
mov
and
insl
test
sbbb
sahf
dec
js
adc
iret
xchg
int
loope
cmp
loopne
jmp
or
dec
cmp
jle
sub
sub
aam
and
orl
xor
push
mov
aam
xor
mov
mov
mov
int3
cmp
adc
int
xorl
lret
mov
fs
push
jl
shll
xor
in
add
js
add
mov
push
in
aam
fs
mov
imul
mov
pop
pop
mov
sbb
adc
mov
and
mov
rcrb
bound
add
mov
popl
xchg
call
das
ficoml
faddp
cmp
sti
insb
in
clc
xchg
pop
repnz
lcall
push
pop
rorl
stc
pop
sbb
in
jle
jmp
ret
negb
nop
sub
sbb
out
cmp
sub
mov
jg
ljmp
lock
jle
dec
ds
loope
lcall
test
lret
ds
xchg
fstpt
or
sub
neg
dec
outsb
dec
jbe
mov
xor
mov
repnz
push
mov
aad
or
add
stos
leave
outsb
icebp
aam
sub
lcall
jecxz
sub
adc
xchg
scas
mov
outsb
lcall
bound
sub
loop
daa
adc
add
shrl
sbb
mov
orl
pop
negb
das
test
xchg
push
dec
imulb
cli
jmp
rcrb
shrb
pop
pop
lods
mov
push
cmp
test
mov
push
cmc
cmp
or
lcall
push
push
xchg
inc
aas
dec
pop
fidivl
subl
out
pop
addr16
jbe
or
jl
dec
jmp
and
es
sub
test
jbe
scas
popa
push
cmp
arpl
lea
mov
xor
or
xchg
or
ret
fldenv
cmp
lods
dec
mov
mov
jbe
test
les
rclb
add
insb
inc
addr16
test
adcl
dec
leave
mov
daa
mov
rcr
pop
sarl
sub
aad
call
call
gs
dec
mov
mov
cmp
bound
aad
loope
dec
add
iret
shll
dec
mov
lods
jle
nop
mov
xchg
mov
outsl
andb
test
fisttpll
mov
or
fucomp
push
sbb
in
add
mov
xchg
cmpsl
sbb
lahf
inc
lods
push
cmp
aad
add
or
xor
jnp
xor
addr16
repz
fcoml
leave
aam
jp
pop
sub
xor
mov
inc
pop
and
in
mov
addr16
pop
push
mov
mov
fs
repz
mov
inc
int
fisubs
shrl
mov
mov
stos
xor
pop
xor
adc
fisttpll
std
loope
movsb
jge
mov
es
sub
xor
adc
adc
mov
sub
insl
in
mov
ss
fwait
mov
leave
dec
xchg
jge
fsubrs
pop
sbb
xchg
cld
jl
pop
int
lret
cli
nop
int3
add
xchg
fs
insl
cmp
sbb
test
shll
int3
mov
jmp
jmp
lods
xchg
add
negb
out
mov
sub
pop
sbb
inc
cltd
ffree
imul
daa
loope
fdivr
fwait
mov
jl
jp
sbb
stc
mov
xchg
mov
out
jmp
push
cmp
movsb
push
iret
repnz
lea
push
cs
ljmp
push
call
cmp
aas
mov
or
jb
mov
cmp
mov
cs
dec
sub
jmp
mov
or
xchg
mov
dec
std
adc
mov
das
mov
out
adc
imul
aam
cmp
jo
xchg
or
sbb
pop
or
pushf
sub
insl
sahf
cld
and
push
push
sbb
inc
loope
fdivrs
lcall
sbb
icebp
sar
mov
sbb
movsbl
insb
ss
add
inc
push
ljmp
jge
jmp
dec
sbb
sti
ja
add
aas
pusha
and
jne
lcall
pop
outsl
and
mov
test
mov
repz
sbb
loop
cmp
xor
adc
cs
shrb
sub
inc
pop
loope
loop
mov
cmp
outsl
and
inc
push
je
stos
ficoml
mov
jmp
sti
push
adc
push
pusha
std
jl
sub
cmp
cwtl
daa
divb
pop
cmp
push
jne
and
pusha
cmpsl
lods
sbb
lret
jle
sub
inc
inc
sub
sbb
pop
inc
sbb
jl
pushf
call
xchg
imul
aas
loope
push
inc
xor
int3
mov
movsl
xlat
shll
pop
and
sub
xlat
cmpsl
fwait
iret
adc
sahf
scas
sbb
xor
cmc
dec
xchg
adc
sub
jge
push
lret
into
rcrb
fistl
stc
pop
mov
mov
bt
imul
dec
js
das
inc
inc
repz
mov
test
test
jns
dec
cltd
int3
inc
push
ret
adc
test
out
outsl
in
int3
in
mov
jbe
lahf
sub
mov
xor
sahf
or
jl
neg
mov
pop
or
adc
inc
rcll
xchg
push
sbbl
inc
pop
add
push
push
addr16
outsl
sbb
pop
stc
xlat
jmp
in
pop
inc
add
popa
test
jnp
loop
push
mov
scas
pop
inc
aam
push
inc
out
stos
mov
inc
lods
adc
sbb
mov
mov
movsl
cmpsb
fcomps
divb
js
inc
mov
cld
push
lods
sub
xor
call
adc
arpl
ja
loop
push
push
xchg
inc
add
add
pop
test
out
xor
sahf
jns
cmpsl
or
or
es
xor
cli
lds
xchg
or
mull
xor
ficoms
cmpl
inc
jecxz
inc
sub
xchg
mov
popa
pop
xchg
dec
and
inc
push
xor
movsl
aas
clc
lcall
cwtl
loopne
ss
and
cmp
repz
outsl
incb
xchg
xorl
and
add
sbb
pop
xor
sbb
pushl
or
xor
outsb
dec
dec
insl
cs
cmpsl
xchg
jns
pop
outsl
xor
inc
int3
in
sbb
sub
inc
jno
cmp
je
or
push
out
popl
adc
shlb
sbb
jl
xor
jnp
mov
les
arpl
xchg
pop
xor
aad
adc
jb
fsubrs
inc
jg
pushl
sbb
fwait
inc
in
pop
sub
cli
test
leave
cwtl
scas
jne
popa
push
popf
int
mov
lds
into
dec
test
gs
notl
mov
jle
insl
xchg
stos
sub
es
jg
or
mov
cmp
into
pop
scas
push
mov
or
xchg
loopne
fisubrl
mov
mov
ret
mov
mov
mov
or
xchg
mov
call
inc
xor
add
rcrb
in
int3
rorl
pop
lcall
movsl
pop
sub
in
test
adc
test
mov
fiadds
test
shl
sub
in
in
sub
stos
mov
cltd
imul
shlb
popa
sbb
push
outsl
cmpb
rcrb
or
cmp
dec
jno
ljmp
push
fwait
sahf
inc
and
loope
jb
mov
adc
xchg
call
sbb
popf
repz
or
lods
jg
test
sbb
mov
lods
push
xchg
sahf
movsl
jno
fbld
or
mov
add
pop
mov
shrb
push
dec
dec
daa
dec
sbb
test
push
sahf
aam
push
push
fwait
sbb
adc
ds
leave
xchg
adc
fidivrl
adc
mov
out
sahf
pop
cmp
pop
push
mov
orb
add
mov
imul
leave
es
and
sbb
inc
es
mov
jge
jno
adc
fistps
mov
cmp
enter
aad
push
mov
and
fldenv
test
scas
xchg
cmpsl
inc
mov
das
xchg
add
inc
xchg
cld
sbb
test
insl
int
in
pop
and
addr16
andl
xchg
insb
cmpl
xlat
andl
test
xor
loope
xor
popa
sbb
xchg
test
inc
loop
or
fnstenv
fs
cmc
icebp
dec
clc
ficoml
xchg
cmpsb
jle
sub
leave
fwait
mov
mov
pop
push
cmpsb
inc
sti
mov
lcall
sub
add
inc
and
jae
cli
inc
or
mov
mov
add
data16
outsl
and
mov
movl
lds
push
add
xchg
xchg
cld
leave
rorb
mov
filds
fs
mov
cmpsb
mov
movsl
mov
test
mov
or
inc
cmpsb
add
ds
and
data16
mov
mov
cmpsb
push
cltd
cmp
jno
xchg
adc
sti
cltd
testl
outsb
insl
and
dec
xchg
test
jp
std
movb
or
fsubrl
add
and
mov
cmpxchg
cmp
dec
mov
xchg
and
jno
pop
ret
scas
int3
or
repz
loope
pop
xchg
ss
imul
jae
push
push
jns
jb
rorb
mov
daa
sub
or
cmp
xor
pop
push
mov
scas
pop
test
nop
loopne
xchg
lcall
mov
movsb
popa
sub
xchg
jecxz
hlt
stc
pop
mov
mov
sbb
mov
add
ficompl
jmp
addl
adc
lahf
enter
xchg
daa
push
mov
mov
add
sahf
mov
mov
sahf
dec
and
imul
mov
cltd
xor
adc
jle
adc
add
jbe
into
xor
out
xor
cmp
std
jecxz
andb
push
sbb
mov
or
xchg
fdivs
sti
loop
push
lock
or
in
mov
xor
aad
flds
jmp
shll
add
jge
cmc
outsl
movsb
xchg
sub
out
lea
jmp
mov
fidivrs
das
push
inc
insb
sti
xlat
dec
adc
jno
ds
inc
sbb
push
or
out
stc
fbstp
cmp
xor
iret
cmp
mov
inc
lret
inc
test
lea
jl
fists
mov
aad
cmp
lds
add
lahf
movsb
cmp
push
out
fwait
insl
push
lahf
stos
xor
arpl
and
movsl
ss
scas
inc
daa
lcall
das
in
xor
std
pop
dec
inc
rol
or
jae
mov
mov
add
rcrb
dec
std
lods
and
pop
sub
loope
leave
daa
or
jo
in
scas
pop
ljmp
add
pop
orl
and
jl
ljmp
cmpsl
shll
mov
cmpsb
xchg
cmp
or
jl
scas
mov
xchg
stos
jecxz
mov
stos
sub
mov
addr16
out
aaa
sub
fs
ds
inc
jns
loope
std
gs
jae
stos
mov
shr
test
call
jle
ret
push
aam
jge
cmp
icebp
fcomps
push
stos
jns
push
loop
sub
pop
sub
jne
adc
add
pop
mov
fsubs
mov
push
bound
mov
push
into
into
orb
sahf
arpl
inc
bnd
mov
out
add
notl
aas
into
cmpsb
mov
cwtl
je
sbb
sahf
cmp
test
cld
add
push
out
lds
ret
ljmp
sbb
out
vpmullq
xchg
pop
hlt
inc
fisttpll
adc
mov
imul
stos
out
stos
xor
call
dec
sbb
adc
pop
roll
sti
sub
cmp
dec
sbb
dec
xchg
sti
dec
xor
and
es
pusha
sbb
ss
add
sahf
push
xchg
pop
incb
mov
push
cld
inc
lcall
das
mov
mov
fcoml
cmp
ds
dec
mov
mov
jo
push
adc
cmp
push
in
mov
ror
pop
clc
sub
sti
mov
pop
jge
adc
je
mov
insb
sahf
xor
push
inc
nop
inc
pop
dec
fistpll
flds
mov
pop
test
cwtl
mov
or
sub
add
xchg
inc
je
or
pusha
mov
dec
dec
fbld
imul
mov
fwait
sti
fnstcw
jp
into
jle
or
xchg
enter
mov
mov
lahf
cmc
lea
xchg
ret
xor
xor
cltd
push
mov
aaa
cwtl
ss
push
aaa
mov
ret
sub
sahf
sub
or
icebp
dec
push
cld
addr16
outsb
mov
cli
add
roll
das
sti
dec
xorb
xchg
or
inc
xor
movsl
pop
mov
ret
shr
test
jo
sbb
in
shrd
das
xchg
aas
adc
mov
lock
pop
test
cwtl
xor
push
js
mov
rsqrtps
bound
lcall
popf
push
fistpl
inc
sbb
out
add
andl
cli
sbb
ljmp
xchg
mov
push
mov
cld
leave
add
jl
cli
pop
les
inc
jle
js
cmpl
mov
xor
xor
cmp
xchg
enter
mov
movsb
movsb
or
cmc
jo
xchg
scas
xor
andl
std
ret
int
das
lods
clc
lret
popf
push
cltd
add
insl
jnp
or
adc
mov
inc
jns
and
xor
adc
in
lret
sbb
daa
pop
fwait
les
push
loopne
imul
stos
push
scas
pop
adc
pop
xchg
fwait
jne
fwait
mov
jg
inc
add
pop
out
int
xor
xchg
xchg
dec
mov
mov
ror
lea
lahf
or
int
lds
mov
or
xor
in
sarb
mov
fwait
shlb
repz
shlb
inc
mov
hlt
push
lret
imul
xchg
stos
iret
test
xor
xor
mov
test
lret
insb
mov
mov
mov
daa
out
fiadds
jne
cmp
xchg
inc
jno
inc
adc
lcall
sub
mov
adc
ss
insl
imul
and
pop
mov
inc
xchg
add
and
cmp
inc
cltd
loop
ret
xchg
mov
enter
add
out
pop
xchg
mov
push
in
mov
in
push
sub
jno
lock
dec
movsl
xor
dec
jnp
cmc
jl
sub
lret
or
andb
jo,pn
add
cmp
add
pop
data16
push
dec
jl
rcrl
inc
cmp
sub
inc
or
mov
movsb
lds
mov
das
lock
insb
push
movb
icebp
je
adc
lret
ja
cld
popa
and
repz
stos
lods
inc
jp
xchg
and
ljmp
packsswb
in
xchg
push
push
pop
popf
xor
dec
stos
cmc
ret
add
mov
cmp
mov
mov
inc
pop
popf
push
push
sub
xchg
inc
test
shl
pop
and
les
js
jno
xlat
dec
fwait
inc
mov
xor
lcall
repz
sub
fsubl
aas
enter
inc
cs
and
cmp
das
call
clc
pusha
movsb
andl
dec
ret
lret
arpl
mov
repnz
fs
aam
pop
sub
aaa
imul
xchg
sub
mov
pop
mov
les
or
adc
inc
cmp
fldenv
out
cmc
dec
or
xchg
cmp
emms
loope
mov
pushf
mov
cs
sbb
sub
mov
xchg
xlat
mov
jecxz
adc
mov
rcl
jp
in
andl
fsubl
sbb
mov
cmp
cmp
mov
gs
jp
mov
jge
fdivs
das
sbb
jae
pop
cmp
dec
ss
hlt
xor
shrb
inc
mov
mov
adc
xor
xor
mov
lret
sub
inc
xorl
adc
frstpm(287
sub
mov
mov
cmp
jno
rcl
xor
push
mov
push
icebp
addb
jae
or
outsb
addr16
outsb
or
scas
movsb
pop
imul
cmp
or
and
adc
sbb
popf
and
fcoms
push
jns
leave
fadds
jle
push
pop
lea
push
je
mov
pop
bound
jecxz
loop
mov
aad
shll
fmuls
jg
sbb
test
leave
push
jp
enter
jmp
pop
pop
icebp
out
mov
xchg
dec
popa
test
addl
jmp
pop
nop
rol
dec
inc
stos
lds
je
inc
jae
and
shlb
cmc
into
stos
ds
pop
loopne
scas
jae
lcall
pop
int
lret
data16
jae
lret
sbb
mov
inc
mov
add
sub
sbb
cld
les
add
xchg
dec
std
cmp
add
xor
pop
or
lahf
pop
mov
push
fidivrl
out
pop
cli
imull
add
addl
mov
cmp
adc
sbb
nop
xchg
mov
fisttpl
jb
mov
pop
mov
fdivs
and
inc
les
pop
pop
sahf
jmp
jns
inc
cmp
out
jg
daa
xchg
push
cmc
into
jl
jmp
repz
lock
mov
mov
dec
adcb
and
in
jmp
dec
push
dec
loope
stc
ficoms
cmp
cmp
add
mov
jae
xchg
stc
in
and
ja
inc
daa
sbb
inc
mov
loope
idivl
sahf
xor
int
and
jbe
pop
mov
mov
push
mov
xor
xchg
jae
add
enter
or
mov
xchg
mov
popa
push
and
pop
mov
fsubr
in
inc
es
inc
icebp
xor
xor
or
mov
mov
xor
lods
dec
dec
xchg
mov
push
imul
insl
mov
push
pop
shrb
stc
dec
fistpll
idivl
test
inc
dec
inc
cmp
insb
std
out
test
jg
xchg
and
mov
rcl
add
pop
imul
dec
pop
adc
fiaddl
dec
mov
lcall
push
cmp
mov
push
pop
mov
sbb
movsb
or
fcomps
mov
ds
test
jno
negb
movsb
push
push
dec
nop
pop
inc
jp
mov
iret
jnp,pt
stc
adc
jne
sbb
out
mov
and
xchg
filds
shrl
push
in
push
fidivrs
cltd
dec
push
test
sub
and
and
imul
addr16
add
clc
repnz
icebp
gs
cmp
loope
push
es
mov
xchg
ja
add
inc
aam
cmp
add
mov
in
cmpsl
and
push
mov
pop
mov
xchg
add
add
aas
push
into
push
pop
hlt
add
sub
dec
xchg
jge
mov
mov
addl
pop
jge
mov
inc
and
sarb
loop
les
and
outsl
mov
mov
xchg
dec
sbb
push
inc
cmp
test
pop
sbb
stos
pop
pop
adc
fnsave
test
testl
lds
xchg
mov
nop
inc
push
cmp
les
outsb
rcl
fdivl
cmp
lcall
cwtl
test
jp
push
sbb
sub
sub
or
loop
jp
cld
insb
shrl
add
sub
adc
or
test
sub
jnp
das
add
iret
sbb
or
insl
and
lds
mov
mov
test
dec
push
test
dec
xchg
sub
repnz
or
xchg
dec
and
into
sub
lret
push
cmp
jno
daa
dec
ret
shll
add
negl
cmp
pop
aad
jp
push
das
mov
pop
sub
push
lahf
aas
mov
xchg
rolb
xchg
rorl
jbe
subb
jo
fwait
dec
in
sub
in
ret
xchg
push
xor
sub
push
ss
sarb
fistpll
pop
fwait
inc
add
ja
and
jb
std
pop
adc
xor
cltd
out
sub
jmp
jg
arpl
or
ljmp
add
fimull
pop
sbb
movsb
xor
pop
adc
jae
pop
cmp
pop
lret
stos
test
inc
jbe
insb
sbbl
shll
and
mov
xchg
or
fcomp
xor
clc
push
push
iret
pop
adc
jl
daa
mov
loop
lds
fistpl
subb
ljmp
mov
jb
cmp
ret
ret
sbb
fnstsw
or
mov
fmul
xor
mov
push
mov
lcall
daa
sub
cmpsl
jmp
or
cwtl
addb
inc
cmp
jae
lea
and
insb
filds
sub
inc
les
mov
mov
sub
les
jl
out
repnz
sbb
lods
jge
das
inc
nop
ja
mov
fwait
inc
insl
or
lods
in
subb
xchg
xchg
stos
mov
and
or
dec
in
inc
pop
pop
sub
and
mov
sahf
pop
dec
lds
push
jge
mov
in
push
loopne
cwtl
fldcw
pushf
rorl
and
pop
stos
pop
repnz
mov
in
mov
ss
jmp
out
sbb
andb
or
xor
sbb
fimull
pop
adc
mov
jle
or
push
mov
mov
movb
xchg
aad
je
add
daa
inc
push
ret
clc
pop
sbb
xchg
xchg
sub
ds
cmc
mov
mov
jae
lock
push
jnp
ljmp
stc
mov
add
sbb
jl
cld
sbb
cmp
or
enter
push
sbb
push
ror
shrl
stos
test
inc
adc
test
mov
inc
push
movsl
jl
and
loopne
fisubs
rolb
in
in
ret
or
pop
or
add
gs
jae
fisubs
push
xor
rclb
in
jle
push
push
aad
jmp
pop
fucomi
loope
sbbb
pusha
inc
out
call
jg
movsb
mov
sti
bound
clc
sub
insb
bound
dec
adc
imul
cld
xchg
inc
shrb
clc
xor
xor
hlt
pusha
mov
inc
pusha
es
ret
adc
push
push
xor
jle
ret
fwait
imul
sub
push
adc
mov
push
insb
out
pusha
in
mov
and
pop
scas
push
inc
push
shufps
and
icebp
shrl
pop
pushf
icebp
sbb
inc
fstpt
clc
cmp
xchg
cli
sub
sub
cmc
cltd
rclb
call
outsb
addl
push
mov
xchg
pushf
jecxz
ja
fsubs
dec
lret
inc
sub
adc
adc
cmp
inc
orb
pop
sub
rcrb
stc
rcrb
or
pusha
lea
or
ror
daa
or
sub
push
bound
xor
mov
xchg
sbb
incb
subb
xor
dec
enter
pop
push
in
test
and
call
push
lods
mov
pop
dec
cmp
dec
cltd
test
aad
scas
fimull
aaa
inc
push
mov
pop
fisubrl
inc
movsl
aas
jp
or
pop
cli
adc
test
inc
es
ret
ss
in
inc
push
add
mov
shll
and
fs
ljmp
mov
rep
shl
xor
push
xor
xchg
mov
dec
jmp
add
mov
mov
ror
test
arpl
pop
insl
push
inc
std
movsl
inc
popf
or
sbb
cltd
cmp
ret
sub
cmc
imul
out
popa
push
or
imul
xor
pop
lods
inc
xor
xor
mov
pop
cli
jecxz
xchg
imul
movsb
insl
cmc
mov
and
lcall
dec
or
iret
pusha
mov
dec
dec
jle
dec
xor
sbb
in
cli
enter
push
scas
test
push
pop
mov
and
test
add
inc
push
cmp
faddl
pop
test
inc
pop
lods
sti
ret
inc
into
push
or
imul
in
mov
fidivs
push
lret
mov
jl
in
push
push
es
sbb
mov
jne
xlat
add
int
or
sub
cs
cltd
es
jecxz
loop
mov
cmp
add
add
out
jbe
decb
inc
lahf
add
cmpsb
int3
out
fstp
push
ja
mov
out
or
popf
je
loop
xchg
dec
push
xchg
bound
inc
test
loop
pop
in
push
out
or
loopne
mov
lock
xor
shll
sub
xchg
aas
adc
nop
sbb
push
mov
xor
adc
sub
xor
mov
stc
test
lcall
inc
loopne
fs
or
test
xchg
loop
mov
stc
inc
mov
pop
xor
mov
pop
cmp
adc
jmp
jns
add
dec
aas
jmp
imul
shrb
aas
dec
rcl
push
jmp
test
push
cwtl
repnz
ss
fnstenv
push
cmp
fisubl
mov
fisubs
or
and
loop
lds
mov
push
or
jbe
test
pop
fdivs
mov
xchg
movsb
and
sahf
cmc
and
jns
fidivrl
inc
adc
clc
mov
dec
cltd
xchg
nop
leave
aad
sub
sub
push
clc
and
mov
ljmp
das
xchg
mov
mov
out
dec
xchg
pop
ds
mov
ret
or
insl
inc
ds
mov
add
xor
shlb
push
adc
mov
negb
ret
pop
jo
fldl
pop
dec
push
push
aas
xor
repz
into
mov
push
push
cmp
cmp
add
dec
scas
filds
lock
daa
sub
inc
inc
outsb
push
sub
mov
xchg
add
pop
sub
sbb
mov
out
test
mov
mov
mov
in
subb
cmp
sbb
sti
xor
pushf
addl
mov
inc
in
push
pop
js
call
mov
and
push
sub
or
imul
inc
sub
sbb
mov
xchg
mov
clc
cmc
test
push
popa
xor
mov
lods
aad
sub
inc
push
bound
sbb
cli
out
shlb
xor
mov
shlb
or
bound
adc
decb
and
mov
pusha
clc
popa
mov
mov
mov
push
inc
jp
cs
imull
adc
mov
leave
mov
cmp
mov
dec
and
dec
fbld
daa
xchg
inc
enter
arpl
fisttpll
mov
pop
xchg
inc
sti
sub
push
movsb
mov
sub
xchg
add
or
xchg
add
mov
and
xor
flds
sub
rorb
mov
into
leave
or
and
cltd
ljmp
js
bound
out
mov
into
xchg
and
xchg
mov
inc
arpl
and
or
loope
mov
pop
mov
cmp
dec
inc
incl
cmp
push
daa
cmp
cmpsl
lcall
fmuls
mov
inc
lea
popf
pop
inc
int
sbb
inc
push
int
push
in
adc
ficomps
dec
out
push
sarl
test
dec
lahf
and
stos
mov
adc
inc
aas
mov
movsb
cmpsb
inc
xchg
lret
add
imul
jnp
cmpl
sub
das
mov
imul
gs
int
cmp
dec
cmp
insb
std
fidivs
xor
adc
inc
scas
daa
add
pop
dec
sbb
push
ss
jns
insl
test
jae
test
cmpb
test
sahf
mov
mov
vsubps
or
int3
push
sub
pop
ljmp
fwait
arpl
xchg
sub
mov
fs
testl
aaa
xchg
out
cld
insl
fdivrl
pop
fwait
aam
add
push
cmp
cmpsl
test
push
popa
xor
in
call
xchg
cmp
mov
mov
ljmp
xchg
subl
jle
dec
call
iret
int3
aas
xchg
mulb
push
push
inc
arpl
bsr
inc
sub
xchg
fs
and
adc
sbb
cmpl
popf
sti
adc
arpl
push
inc
jno
popf
sbb
out
fcomp
mov
sub
jo
dec
sbb
jbe
iret
repnz
incb
mov
inc
adc
lcall
ja
jno
out
clc
pop
cmp
repnz
mov
adc
fnstenv
rorl
inc
test
sbb
sub
cltd
add
pop
mulb
mov
pusha
or
mov
xchg
daa
jno
sub
aaa
loop
pop
mov
dec
xor
sbb
sub
cmp
push
cs
leave
cmp
sti
dec
pop
cwtl
fcompl
sbb
jl
jmp
mov
aas
mov
mov
add
cmc
das
in
std
lret
fwait
hlt
dec
fwait
outsl
mov
fists
ljmp
and
shlb
flds
movsb
jne
aaa
stc
mov
loop
scas
mov
cmp
nop
in
sahf
inc
xchg
mov
jno
sub
cltd
push
in
clc
stos
loope
push
adc
aam
les
shrl
sbb
fldt
pop
jmp
ljmp
adc
or
out
add
adc
gs
aam
pusha
push
push
jl
sub
jle
je
xor
push
sub
and
push
leave
mov
sub
inc
sar
xor
adc
subb
je
dec
ret
lds
insb
sbb
mov
aad
inc
inc
dec
lret
mov
mov
xchg
or
cmpsb
mov
data16
lock
jle
lods
in
call
pop
mov
in
pop
xor
orl
mov
mov
mov
das
mov
int
pop
ja
xor
inc
adc
loopne
xchg
mov
mov
fbstp
popa
pop
sbb
je
lret
out
inc
jmp
sbb
push
insb
out
adc
popf
call
cmpsb
pop
int
insl
aad
bound
insl
pop
push
mov
pushf
mov
das
jmp
cmp
lcall
xchg
and
leave
mov
xchg
add
push
hlt
mov
mov
sub
or
iret
aas
fs
push
cmc
or
mov
mov
cmp
out
mov
arpl
ret
incb
fnsave
xchg
mov
adc
pushf
jae
leave
movsl
sub
outsb
ja
fcompl
sub
cmp
inc
sbb
popf
xchg
jae
pop
fwait
xlat
xchg
dec
das
movsl
pop
cmp
cld
arpl
xchg
pop
mov
fmuls
divl
pop
xor
pop
aaa
notb
test
jecxz
xchg
adc
and
rclb
sti
xchg
gs
in
imul
sarl
push
xor
dec
or
and
sbb
repz
insb
jmp
cmc
mov
push
sbb
mov
sarl
and
or
icebp
movsb
bound
out
daa
push
adc
push
dec
ss
cs
mov
and
add
ret
stos
push
pop
jne
cmp
mov
mov
jno
leave
out
sbb
and
pop
mov
in
int3
sti
sub
inc
push
inc
into
sahf
dec
adc
sti
cmc
mov
and
cmpsl
mov
test
pop
leave
ret
inc
xchg
push
mov
out
pop
pop
sbb
lret
pop
and
aas
xor
and
xchg
dec
sbb
jno
arpl
neg
jmp
jp
ds
ret
cmp
cmp
and
cs
ret
or
adc
in
mov
push
ljmp
fdivl
loopne
jl
movsl
insl
mov
jbe
pop
xchg
test
gs
roll
add
mov
mov
mov
dec
out
cmp
jb
sub
pop
add
add
cmp
std
mov
lds
outsb
fdivl
movsl
jo
add
lock
lret
out
sbb
imul
inc
mov
daa
fdivr
pop
cs
ds
testl
mov
jno
pop
mov
sahf
fsubs
loopne
js
stos
aam
ljmp
rorb
and
jno
imul
dec
mov
adc
cmpsl
sub
xor
and
mov
scas
pop
fwait
mov
jmp
lret
adc
je
data16
mov
mov
sbb
cmpl
sub
lahf
call
ret
rorl
test
xor
das
iret
icebp
je
mov
ljmp
imul
mov
sub
repnz
mov
mov
sbb
cmp
mov
sub
jle
in
dec
jle
insb
xchg
testb
ret
leave
enter
sub
jbe
sahf
repz
adc
cmpb
dec
adc
jmp
inc
out
pop
and
daa
mov
pop
inc
xlat
adc
ss
decl
inc
mov
clc
pop
or
in
fstl
test
sahf
ret
lret
fs
aam
loope
add
pop
fisubrl
pop
adcl
adc
movsb
push
push
inc
cli
cld
xchg
push
bound
inc
xlat
mov
cltd
or
fildll
cli
jge
call
dec
push
sub
cmp
push
jae
je
iret
xor
ret
jg
and
pop
adc
jp
sub
push
outsl
pop
ret
orl
outsb
leave
outsl
cmp
aaa
xchg
and
fildll
outsl
fistpl
cwtl
inc
push
data16
and
dec
jmp
pop
jb
daa
aad
push
hlt
or
in
inc
shrb
dec
jb
stc
mov
pop
test
sub
sbb
or
or
jle
sub
fimuls
fucomi
int3
fisubl
pop
or
inc
and
xlat
out
shl
push
jne
fwait
dec
inc
rcr
lock
shl
add
sub
mov
jne
and
adc
aaa
inc
mov
adc
and
test
mov
jbe
add
and
xchg
jne
lock
and
lret
pushf
or
sbb
lods
repz
sbb
ds
xchg
movsl
fbld
fdivs
mov
adc
push
inc
cmp
pop
loope
xor
jo
sbb
scas
mov
lcall
pop
shrb
push
sahf
lods
inc
mov
mov
aas
inc
mov
mov
aas
add
aaa
pop
jp
push
push
sbb
sub
cli
rol
xchg
cmp
mov
bswap
or
out
sub
mov
inc
mov
jecxz
fildll
xchg
imul
mov
inc
sub
fwait
and
mov
mov
or
push
mov
xor
dec
fdivrl
mov
push
lahf
xor
out
pop
cmpsl
cs
xor
mov
pop
jbe
insl
fdivr
rcl
call
jl
iret
cld
cmp
add
xchg
ror
xchg
ficoml
icebp
test
xchg
repz
lret
jp
lds
repz
xor
mov
push
xchg
jg
fcmovbe
pop
aaa
or
mov
or
leave
fstps
std
gs
mov
in
pop
pop
sahf
int3
jae
lods
nop
outsb
call
rcrb
cmpsb
mov
fs
test
push
mov
ret
lock
ja
lcall
and
push
test
fwait
xchg
xchg
inc
pop
in
ds
cmp
mov
out
das
adc
pop
pop
sbb
xchg
fwait
daa
hlt
std
push
aam
mov
pop
ret
dec
outsl
fldt
les
sti
test
xchg
push
cmp
xchg
sbb
mov
push
or
lods
cmc
int3
push
pushf
leave
or
mov
das
push
sbb
cmc
inc
cmp
jp
aad
mov
clc
adc
lret
xor
ret
icebp
movsb
sub
imul
mov
sbb
int
pop
mov
pop
adc
mov
mov
sbb
push
pop
out
clc
and
xchg
std
jmp
pop
and
and
pop
sti
inc
scas
ret
out
push
aam
lcall
fstps
les
imul
out
mov
cmpsb
mov
or
mov
sbb
mov
mov
sbb
mov
inc
lret
cwtl
les
addr16
pop
inc
and
bswap
cmpl
stos
enter
jle
dec
dec
or
ljmp
jno
fisttps
cs
inc
add
rolb
movsl
leave
or
xchg
inc
fldenv
mov
sub
ror
pop
stc
adc
dec
cmp
adc
jmp
add
mov
daa
imul
jmp
inc
insl
in
push
cld
jnp
pop
cmp
cltd
cltd
in
mov
mov
mov
adc
xchg
xorl
mov
int
mov
ja
jle
repnz
adc
inc
jp
jbe
xchg
mov
call
insb
or
pop
xor
pop
pop
shll
test
adc
lods
mov
jge
add
xor
add
ret
push
mov
pop
repz
leave
outsl
jge
and
fcmovne
xor
pop
loopne
pop
mull
xchg
aam
adc
push
aaa
outsl
push
rclb
push
in
imul
call
insl
repnz
loop
ljmp
outsl
mov
int3
shr
mov
push
popf
push
mov
or
add
sbb
fsubp
mov
mov
mov
dec
popa
loope
popa
insl
les
jle
jmp
mov
and
hlt
inc
js
lea
faddp
jmp
into
jg
jle
aad
aaa
xchg
mov
xchg
and
cmpsb
fadds
out
or
lahf
pop
push
sub
decl
jns
dec
adc
outsb
dec
fistps
dec
adc
insb
fprem
mov
test
pop
cmpsb
xor
sbb
ficoml
mov
mov
les
inc
sbb
sbb
mov
fwait
xor
pop
inc
mov
xchg
pusha
loop
dec
xchg
repnz
mov
jns
addl
mov
dec
sbbb
ljmp
or
stos
or
xchg
jg
jmp
or
jb
inc
daa
rcrl
negb
inc
push
adc
and
aam
add
mov
cwtl
jmp
xor
push
adc
int
in
cmp
pop
insl
push
sbb
int3
rcrl
xchg
adcl
sub
sbb
cmpsl
xchg
cli
adc
jmp
dec
data16
sahf
sbb
push
pusha
inc
shlb
and
das
sub
std
jnp
or
mov
mov
push
mov
outsb
mov
dec
enter
scas
das
orb
mov
rol
push
cmp
aam
jne
dec
xorb
insl
pop
rcrb
inc
mov
out
mov
mov
jmp
or
mov
sbbb
out
cmpsl
movsl
pop
pop
scas
loop
imul
jecxz
xchg
mov
loop
std
mov
fs
test
jge
popa
bound
or
xor
jns
lock
je
inc
icebp
push
sar
cmpsl
leave
lcall
xchg
mov
pusha
push
sub
loop
pusha
mov
std
push
lret
adc
clc
ljmp
jbe
sbb
std
sub
es
jbe
push
or
pop
popa
test
int
pop
lea
mov
ljmp
adc
xchg
adc
sub
addr16
and
shlb
mov
mov
jg
inc
mov
jo
ret
push
dec
add
popf
pop
mov
inc
jnp
push
mov
xchg
mov
test
repnz
cmpl
dec
clc
hlt
mov
jbe
mov
sub
or
sbb
loope
cltd
fnstcw
ret
cmp
sub
into
daa
lret
leave
jo
out
mov
js
into
xchg
adc
cwtl
or
pop
int3
in
int
lcall
orl
aam
dec
mov
inc
sub
xor
cld
lahf
lods
jae
clc
mov
test
xchg
sub
and
out
fisubrl
push
ljmp
cmp
cmp
adc
mov
outsl
cmpb
insl
ja
sbb
push
in
cmpsl
scas
pop
aad
shl
aad
mov
sbb
and
bound
je
sbb
xchg
stos
sti
add
mov
inc
in
mov
dec
or
fstl
jmp
sub
lret
jmp
cmpsb
sbb
jmp
cmp
fnsave
xlat
cmc
out
jmp
ds
pop
insb
or
das
pop
dec
mov
xor
and
dec
sahf
stc
das
or
cmpsl
ret
insl
cmp
jp
xchg
jnp
pop
mov
push
fidivl
arpl
or
push
cltd
insl
out
mov
jge
icebp
pop
rorb
pushf
aad
pop
test
dec
leave
add
std
or
and
stos
or
loopne
das
pop
xchg
mov
push
mov
sub
xor
inc
adc
xchg
xchg
lahf
jg
cmp
inc
loope
outsl
lock
cld
push
jmp
mov
jg
in
adc
repnz
and
orl
test
mov
test
xlat
sbb
jge
mov
lods
lods
or
rorl
adc
mov
add
addb
fcomp
xor
xor
and
bound
in
repz
inc
mov
loope
ja
test
pop
outsl
jmp
movsl
ds
mov
fcomi
sub
mov
ss
cmp
sub
mov
mov
test
bound
outsl
and
push
inc
pusha
cmc
xor
aam
and
scas
jge
add
adc
outsl
jb
jle
push
movsb
lea
imul
jo
xchg
ret
jae
jae
jmp
pop
xchg
adc
loopne
and
jle
pop
mov
loop
push
add
sub
push
push
out
cs
inc
mov
pop
outsl
pusha
pop
sti
mov
mov
jb
mov
movsb
sti
jae
fimull
and
fists
scas
sbb
lret
into
jle
push
cmpsb
lds
push
or
xchg
hlt
mov
andb
sub
ljmp
push
loopne
outsb
dec
popa
and
int
mov
mov
data16
int3
or
hlt
popf
xchg
ja
ljmp
jnp
mov
xor
fwait
aas
xchg
into
push
imul
pop
jbe
ss
xor
nop
inc
mov
adc
sbb
iret
xor
inc
inc
sub
inc
outsb
add
insl
test
mov
add
outsl
aad
push
imul
bound
xor
std
mov
mov
ja
inc
movsb
pop
add
arpl
mov
enter
inc
jecxz
pop
jg
inc
jle
pcmpeqw
jns
pushf
rol
mov
lea
pop
push
inc
cwtl
adc
sub
or
sbb
push
sub
gs
fmuls
cmpsb
ja
xor
lret
add
stos
mov
xchg
lea
push
shrb
jcxz
sar
mov
outsl
cmp
jp
shlb
cmp
mov
push
imul
ja
clc
shlb
mov
mov
adc
cli
rclb
cmp
div
stc
cs
test
sub
imul
xlat
nop
or
popa
xor
jl
pop
fs
and
aad
and
lret
les
lret
ljmp
stos
dec
xor
enter
push
cwtl
jae
sub
cmp
cmpsb
add
pushf
xchg
inc
fistpl
mov
and
movsb
int
jae
ret
pusha
pop
repz
test
shrb
pop
fldcw
mov
lds
aad
lods
aas
inc
je
inc
sbb
xor
idivb
pusha
inc
pop
cwtl
xor
out
push
push
pop
scas
inc
cmp
inc
in
je
xlat
repnz
mov
adc
movsb
gs
xor
pop
sub
cmp
pop
enter
add
hlt
jno
cmp
push
test
or
pop
int
ret
rcrb
scas
lods
mov
pop
or
push
test
jnp
outsb
shll
cmp
test
arpl
aas
adc
cli
rol
lea
push
ffree
jle
lret
mov
movsb
mov
nop
add
aad
dec
insb
sub
mov
xor
xor
lds
test
je
fwait
pop
xchg
data16
add
pop
mov
imul
sub
xchg
pop
ljmp
pop
push
testl
push
push
cltd
sub
push
or
adc
xchg
fimuls
adc
push
clc
xchg
inc
or
and
adc
es
daa
std
push
out
les
cmpsl
sti
pop
mov
sbb
adc
push
sbb
mov
pusha
insl
notb
mov
sti
xlat
and
shl
jne
nop
out
icebp
and
add
sbb
inc
cld
push
dec
in
or
nop
jl
in
xor
jae
cwtl
and
xchg
xchg
and
pop
shll
loopne
ljmp
inc
jno
pop
push
add
ljmp
loope
dec
sub
adc
xlat
mov
repnz
mov
popf
out
jle
int3
cmpsb
add
orl
nop
mov
jge
inc
mov
icebp
push
mov
push
repnz
dec
es
dec
enter
jl
ds
fs
fstps
cmpsl
cmc
movsb
aad
lret
hlt
sbb
xchg
push
sbb
cmpl
xchg
xor
clc
mov
andl
push
cli
cmp
jae
sbb
add
dec
xchg
inc
int
or
or
push
aaa
dec
mov
lds
sub
in
push
add
fs
and
nop
ds
scas
mov
jnp
popa
loop
rcll
add
pop
and
aas
pop
pop
mov
cmp
cli
lahf
and
ficomps
adc
adc
imul
adc
lahf
hlt
and
cs
fadds
push
loope
and
or
lahf
jg
shll
mov
inc
xor
jae
shlb
lods
jecxz
in
repz
arpl
xor
ljmp
jp
imul
pop
movsl
add
jo
cwtl
and
iret
sahf
xchg
test
xor
mov
je
imul
add
sub
cmpsb
xchg
mov
fwait
dec
cmp
sbb
std
daa
push
imulb
push
in
cmp
jmp
xchg
imul
mov
mov
lock
sbb
cld
out
stos
aaa
sahf
pushf
enter
mov
or
test
mov
repnz
insb
add
and
mov
lock
flds
popl
mov
sti
movsl
mov
inc
ret
repz
js
adc
sbb
paddsb
inc
out
xchg
leave
mov
cmp
addl
push
inc
push
fidivrl
pop
mov
les
aam
jmp
bound
call
mov
jno
rclb
mov
mov
push
fwait
lcall
orb
adc
notl
cmpsl
pop
iret
or
mov
mov
mov
sub
xor
inc
mov
cli
mov
sbb
dec
push
lock
insb
add
and
inc
xchg
insl
jmp
or
jo
ds
push
or
cmpl
imul
andb
loopne
mov
fwait
push
inc
push
or
insb
push
add
push
lcall
mov
cld
stos
sbb
in
add
gs
incb
fs
fistpll
insb
iret
andl
les
inc
xchg
arpl
enter
xchg
aam
jl
popa
xor
cmpsl
loop
shlb
mov
or
in
pop
je
lds
aam
jae
ljmp
dec
dec
rcrb
lret
and
jmp
mov
push
cwtl
jnp
cmpsl
filds
cld
rol
adc
mov
ret
jo
jb
je
movsl
scas
fmul
leave
or
ret
lret
hlt
xchg
pop
sti
adc
test
daa
stc
cmp
pop
jnp
sbb
rorb
addl
mov
inc
je
push
jne
and
push
cmp
jmp
pushf
mov
add
pop
rcrb
jo
push
mov
jae
pop
ret
scas
or
rep
test
xor
popf
mov
imul
dec
mov
and
stos
jp
scas
sbb
aam
lods
pushf
enter
imul
push
shll
mov
push
and
clc
jl
loop
dec
jl
cmp
push
cmpsl
imul
cmpsb
in
jp
sahf
sbb
fdivrs
sbb
movsb
cwtl
imul
pop
or
hlt
mov
rcll
enter
mov
inc
bound
call
mov
inc
es
push
sbb
aas
fadds
inc
mov
cmp
push
ja
pop
xlat
lcall
popf
sbb
adc
jne
nop
push
pop
icebp
in
push
xor
gs
icebp
lcall
mov
mov
sti
lcall
jo
xchg
xor
mov
fs
pop
das
data16
mov
cmpsl
insl
mov
imul
push
and
sub
mov
femms
sahf
fs
dec
pop
xor
jmp
rol
inc
daa
loope
push
cmpsb
movsl
sbb
add
lcall
dec
xor
or
mov
and
std
jge
or
mov
pop
mov
fdivrs
loope
das
mov
or
cmp
xchg
scas
cli
shlb
adc
push
scas
cmp
test
inc
cld
int3
repz
incl
mov
popa
push
adc
xchg
call
cmp
leave
das
mov
stos
mov
aaa
cmp
das
fmul
std
cli
js
dec
sbb
popf
lods
subb
jo
xor
dec
pusha
mov
in
lret
pop
sub
leave
cli
ret
stos
fnstenv
xchg
push
daa
jge
pop
pop
mov
cs
lock
push
and
ljmp
lret
sbb
shll
call
ja
pushf
repz
add
lahf
cmpb
imul
lret
inc
sbb
dec
movsb
cs
in
push
mov
inc
jl
ret
xlat
orb
add
sbb
andl
or
dec
or
iret
je
bound
lock
inc
push
push
xor
sarl
jmp
ret
icebp
mov
rcrl
sahf
sub
iret
testb
xor
jmp
xor
gs
adc
je
test
jle
or
push
out
xchg
pop
lds
inc
or
dec
mov
jle
inc
push
mov
gs
pop
lahf
gs
push
mov
les
xor
mov
push
xchg
mov
ret
popa
scas
xchg
push
out
out
mov
out
xchg
push
dec
and
fwait
and
push
mov
iret
xor
ret
stos
and
and
adcb
mov
cmc
loop
dec
notl
sub
mov
int3
dec
repz
rcrb
or
mov
icebp
dec
adc
in
push
js
cwtl
pop
js
pop
mov
movsb
inc
jmp
mov
pusha
push
das
ljmp
add
or
imul
test
ds
ja
pop
jp
ret
les
mov
out
xor
mov
rcll
fmull
pop
cltd
jnp
lock
sub
popa
push
lret
inc
sub
push
icebp
mov
lds
push
andl
jge
jo
je
jp
popa
stc
sbbl
cwtl
daa
dec
incl
xor
push
ret
mov
rcll
cmp
cmpsl
in
cs
jg
mov
in
test
xor
sbb
lahf
lret
roll
jbe
bound
imulb
addr16
fistpl
xchg
pushf
lds
int
imul
xchg
scas
fmull
rorb
xchg
aas
add
jno
dec
cmpsl
cmpsl
popf
in
in
jge
cmp
cmp
pushf
movb
out
je
stos
or
mov
leave
shll
jmp
leave
subb
scas
fidivrs
dec
or
add
and
mov
repnz
testl
xchg
sub
cmp
mov
or
lahf
jl
movl
test
insb
dec
push
aam
in
push
adc
or
test
bound
loopne
sahf
movsb
lods
cmp
outsb
mov
push
mov
outsb
addb
inc
mov
mov
sub
fs
dec
and
push
sbb
push
dec
jbe
jp
push
bound
data16
sub
mov
data16
ftst
jb
dec
fistpl
sti
xor
push
insb
aaa
outsl
pop
popf
xlat
es
mov
outsb
push
pop
add
mov
sub
adc
xchg
pop
mov
inc
cs
dec
movl
loopne
out
pop
push
dec
add
call
jo
fwait
xchg
mov
and
cmp
pop
sbb
sbb
call
pop
pushl
outsb
imulb
mov
mov
arpl
loop
mov
push
mov
out
pop
cmp
or
and
mov
push
push
push
push
push
and
mov
sub
stos
ja
pop
ds
js
fildll
imul
out
xchg
loope
int3
in
imulb
push
scas
outsb
in
adc
fisubs
adc
call
ljmp
lret
pop
icebp
mov
pcmpgtb
repnz
mov
pop
sbb
jae
in
push
imul
sub
repnz
jns
ret
idiv
imul
jns
test
pop
fwait
jne
pop
inc
pop
sub
jb
sub
jg
fwait
dec
test
xor
cltd
popa
jge
scas
jae
ror
out
enter
lock
imul
inc
sub
out
mov
ljmp
mov
scas
gs
or
adcb
inc
mov
in
xor
pop
sub
iret
imul
push
xchg
push
xchg
pop
sarl
pop
rolb
sbb
or
pop
inc
dec
xchg
aas
pop
popf
sub
xor
xlat
mov
int
outsb
sbb
pop
test
mov
lcall
inc
push
cmpsb
inc
jmp
sbb
mov
sbb
and
cmp
inc
movsb
jge
cmpsl
push
mov
hlt
fstp
fwait
add
jno
imul
mov
mov
push
cltd
mov
out
mov
test
sti
sbb
sub
xchg
push
dec
imul
js
daa
jbe
scas
mov
jo
int3
add
std
dec
xor
and
outsl
adc
inc
fsts
mov
xor
and
dec
inc
xor
scas
mov
cli
sbb
mov
jne
xchg
in
sahf
inc
sbb
jmp
push
adc
iret
rorl
xchg
mov
sub
jno
push
or
xor
dec
pop
pop
xchg
jbe
cli
lods
les
mov
mov
int3
jne
mov
fildl
popa
sbb
mov
scas
call
xchg
mov
scas
mov
pushw
and
add
fcompl
stos
fwait
xchg
std
push
push
test
std
mov
cwtl
cltd
cwtl
ret
insb
clc
out
in
jg
jo
popf
ret
or
shrl
xchg
or
nop
xor
sub
cli
dec
addl
and
insl
sahf
rcrb
rcll
pop
adc
sub
cwtl
xchg
jge
outsl
cmp
jp
and
rorb
int3
push
push
or
test
cli
in
sbb
push
clc
ss
popf
sbb
push
xor
mov
cmp
lcall
dec
sti
into
mov
fcompl
pop
dec
rol
or
xchg
or
mov
std
bnd
cmp
push
dec
nop
lods
cmp
jl
lcall
cmpb
bound
shlb
cmp
xorl
xorl
xchg
jmp
mov
lock
push
cmpsl
out
fsts
xor
jae
ret
cmp
stos
sub
addl
adc
test
add
addb
ss
push
imul
sbb
movsb
add
xor
mov
lcall
dec
add
inc
jne
jb
or
into
test
sbb
xchg
push
insb
icebp
jae
ss
das
shrl
cmp
or
leave
pop
in
lods
dec
popa
dec
je
or
into
xchg
test
cmpsb
cmp
xchg
mov
pop
negb
xchg
js
inc
pop
lcall
adc
rorl
adcb
or
add
pop
adc
sub
and
mov
adc
adc
and
push
xorb
sbb
sbb
loopne
aam
std
ret
sbb
xor
xor
inc
test
xlat
scas
mov
cmp
xchg
push
sbb
pop
xor
pusha
sub
adc
xchg
loop
jmp
sub
jle
cmp
adc
scas
lcall
jno
sub
gs
dec
mov
imul
cmp
xorl
push
xchg
push
hlt
icebp
cli
in
add
imul
xchg
push
clc
cwtl
adc
adc
add
adc
ss
fstenv
ja
inc
jmp
loopne
pop
addr16
daa
das
jg
fisubs
sti
pop
loope
loope
adc
jp
mov
lret
ss
icebp
push
or
push
add
aaa
dec
ss
insb
sbb
or
dec
imul
pextrw
add
int3
xchg
mov
dec
pusha
mov
mov
sbb
fimull
test
and
pop
adc
data16
dec
pop
into
sbb
or
stos
rorl
cmpsl
mov
fiadds
sbb
push
inc
xor
cmp
leave
mov
inc
push
xor
pop
mov
dec
pop
add
jg
mov
push
addr16
push
xlat
push
jg
mov
loop
cmp
arpl
leave
xchg
scas
xchg
pop
jecxz
movsb
hlt
pop
lret
cltd
pop
xor
and
pop
je
mov
mov
mov
pop
jmp
jecxz
pop
sub
out
add
std
out
fadds
sbb
xor
rclb
insl
push
or
cmp
or
sub
call
lahf
mov
cmp
add
popa
call
mov
mov
push
jbe
jg
aaa
call
dec
xchg
lock
and
pcmpgtd
hlt
lods
or
inc
jmp
imul
repnz
std
aad
mov
lahf
ret
bound
push
std
das
jle
push
aad
xor
mov
repnz
inc
mov
xor
pop
cwtl
add
sbb
mov
mov
enter
faddl
vmread
or
jns
sub
lret
inc
shll
mov
xor
addb
stos
int3
xor
std
imul
sbb
push
ret
xchg
xchg
dec
push
repz
mov
mov
mov
out
aas
xor
inc
and
orb
xchg
xchg
hlt
std
add
out
and
cli
fmuls
xor
pop
test
ret
movsb
sbb
packssdw
mov
in
cmpsb
jns
arpl
jge
adc
sub
or
pop
daa
loope
or
fnstcw
addb
ja
push
dec
stos
dec
inc
insl
mov
loop
lods
std
dec
jo
stos
cwtl
das
inc
inc
test
jg
std
fnsetpm(287
inc
das
xor
pop
add
js
or
and
inc
cmpsl
dec
cmpb
jmp
cltd
mov
dec
pusha
pop
fisttpll
jmp
jnp
fs
or
cwtl
pop
adc
inc
sbb
les
xchg
lock
loope
cmpsl
and
jae
scas
lods
mov
sbb
inc
int
sbb
pop
jmp
sti
icebp
insl
jns
lods
or
out
test
sbb
lods
mov
bound
repz
and
les
pop
cltd
push
and
cwtl
pop
cmp
xchg
stos
xchg
sub
scas
dec
push
add
imul
sarb
pop
mov
repnz
outsl
pcmpeqd
inc
into
and
addl
das
xchg
repz
stc
or
xchg
xchg
lahf
sub
xor
inc
repz
mov
insl
lods
stc
add
push
stos
pop
loop
adc
cld
pop
cmp
mov
popa
ds
fs
add
pop
xor
insb
js
arpl
mov
lcall
push
pop
ss
push
xlat
xor
into
cmp
imul
add
xor
xor
dec
adc
mov
push
jmp
pop
sub
imul
xchg
mov
mov
cmc
addl
push
sub
aam
outsl
pop
xchg
mov
pop
ljmp
xchg
sub
shll
pop
adc
cmp
push
imul
add
dec
dec
pushl
or
mov
pop
adc
add
sbb
or
sbb
add
fwait
pop
jp
mov
aaa
lcall
das
and
add
xchg
push
in
mov
pop
jb
popa
cmp
shrb
dec
sub
inc
pop
mov
sub
popa
adc
cwtl
jg
mov
jge
add
cmpsb
pusha
out
mov
push
xor
xlat
push
stos
or
sub
loopne
pop
mov
or
in
cmp
and
lods
insb
cld
movsl
mov
sbb
out
loope
bound
mov
adc
push
stc
fadds
jmp
inc
les
push
dec
sti
and
int
out
scas
xchg
mov
lret
mov
or
icebp
adc
push
cmpsb
orl
test
outsl
sub
aam
push
cmp
or
nop
fbstp
sub
ds
mov
fisubl
mov
scas
lahf
jae
push
xor
scas
rcrl
pop
jle
cltd
lcall
int3
mov
dec
mov
dec
imul
in
mov
and
rcrb
sbb
ljmp
jne
sbb
jmp
inc
lods
sbb
addr16
ss
xor
mov
imul
rorl
xchg
aas
jne
daa
movsl
adc
decl
int
cmp
jbe
out
das
fsubs
fnclex
inc
push
xor
mov
ret
int
jle
jno
push
repnz
fwait
inc
push
aaa
mov
xchg
rorl
inc
xchg
add
jg
xor
mov
mov
rclb
int3
jae
mov
setno
cmp
andb
fs
dec
js
fstps
mov
imul
push
das
in
xor
or
sbb
add
cmp
sti
add
adc
stos
xchg
ret
push
aad
outsl
subl
stos
sub
or
add
fists
adc
sti
push
adc
loope
jns
cmovne
adc
mov
and
mov
loopne
sub
push
dec
insl
jecxz
xchg
scas
xor
mov
xor
push
sub
xor
repnz
nop
in
mov
fldcw
cwtl
jg
inc
repnz
push
mov
cmp
sti
push
inc
in
jp
iret
scas
adc
mov
orl
daa
sub
adc
jp
arpl
pop
fiaddl
mov
mov
rclb
inc
and
xor
imul
cmp
imul
es
pop
jle
out
or
xor
arpl
jle
jns
mov
bound
test
mov
inc
in
sub
lock
cmp
into
inc
or
nop
stos
in
fisttpl
movsb
push
push
insb
jmp
pop
sbb
pushf
ret
or
add
xor
pop
inc
fldt
cmp
pop
shrb
mov
pop
push
test
jle
mov
arpl
xchg
sub
fmuls
in
adc
int3
ret
cmpsb
scas
xor
pop
cmpsl
mov
mov
fiaddl
hlt
mov
inc
mov
push
ds
cmp
xor
xchg
mov
mov
pop
sub
icebp
mov
mov
dec
into
push
ds
mov
les
jne
pop
aas
orb
loopne
cmp
adc
dec
scas
fidivrs
mov
push
cmp
sbb
imul
rcll
js
or
iret
test
subl
xchg
inc
lods
das
insl
xchg
fdiv
std
sbb
lahf
mov
cltd
add
lcall
ret
cmp
icebp
inc
cs
int3
sbb
mov
add
cmpsl
movsb
lcall
aad
mov
jne
xchg
xchg
pop
add
or
out
loope
outsl
in
fldcw
stos
dec
mov
push
sbb
mov
mov
pop
inc
jno
das
test
pop
jae
xchg
nop
jmp
decb
adc
xor
rcl
cmp
sub
pop
mov
pop
leave
repz
scas
jp
add
in
lods
popa
mov
or
shr
mov
int3
mov
add
xorb
les
adc
dec
mov
fcom
xor
lods
add
push
scas
cmp
stos
popa
dec
adc
popf
pop
xchg
push
rcrl
popa
or
aam
mov
jno
pop
pop
sbb
sub
aam
adc
jle
and
mov
or
cmpsb
jae
cmp
addb
mov
clc
in
and
test
mov
sbb
xchg
loopne
mov
mov
adc
loopne
fildll
mov
mov
cld
mov
icebp
lds
push
int
xchg
inc
daa
adc
test
pop
sti
scas
in
cli
push
jae
add
adc
mov
push
mov
int3
jbe
sub
mov
xchg
add
mov
dec
ret
clc
dec
mov
jge
orl
cmp
gs
mov
shrb
add
fcomps
nop
aas
cltd
bound
xchg
inc
jno
jp
out
xor
cmpsl
fsub
js
aad
jmp
push
lods
into
ror
xor
outsl
cwtl
xchg
scas
lcall
sub
cmp
inc
xor
or
cmp
inc
scas
push
pop
xchg
loope
adc
aaa
sarl
shll
xchg
and
push
shrl
lcall
cwtl
sub
mov
and
dec
pop
daa
int3
test
mov
mov
loopne
pop
push
pop
pop
jb
xchg
dec
mov
sub
mov
int
test
pop
pusha
adc
scas
mov
ja
jb
jge
cld
adc
dec
rol
lods
int3
sub
pushf
sub
ds
mov
pop
and
mov
xor
je
mov
outsl
cmpsb
inc
clc
or
push
jp
cmp
ds
ret
push
scas
call
mov
inc
push
jae
dec
int3
insb
pop
add
icebp
mov
add
sub
xlat
sahf
scas
sti
movsl
push
xor
subb
test
adc
int
push
test
cmp
cmp
mov
pop
das
fidivl
mov
ss
xchg
enter
imul
pusha
mov
jg
ja
sub
mov
iret
aad
dec
inc
add
sbb
data16
push
lds
dec
test
xor
mov
dec
fistpll
jl
leave
mov
popa
out
xor
xchg
jmp
jno
js
hlt
xchg
xor
mov
lahf
js
xor
xor
in
sbb
arpl
ret
repnz
xor
in
xchg
dec
mov
jge
xchg
sarb
lea
in
sti
leave
jmp
shlb
add
mov
sub
inc
cld
xchg
push
inc
ds
loopne
fwait
pop
jb
test
or
mov
sti
ljmp
or
xor
js
pop
jp
mov
sahf
pop
xor
fisubs
rcll
mov
repz
test
mov
sub
in
decb
stos
adc
movsl
cmp
cmp
lret
dec
ljmp
adc
jge
repnz
mov
sub
loope
dec
xor
stos
xor
repnz
aam
les
jp
pop
jo
push
sbbb
inc
mov
aaa
mov
cmpsl
push
sub
iret
fucom
clc
dec
aam
sti
jns
jle
and
in
adc
xor
xlat
lret
xchg
mov
jo
je
loop
sub
loopne
dec
add
std
push
push
andl
mov
pop
jne
sub
cmp
sub
gs
sti
loope
cli
ljmp
out
sahf
fcoms
adc
test
mov
addr16
mov
adc
lret
adc
lds
sti
push
nop
adc
dec
push
mov
sbb
lret
lods
icebp
fwait
repnz
jns
mov
mulb
and
push
cli
xor
out
pop
mov
jne
popf
repnz
pop
mov
hlt
sub
gs
ds
stc
mov
pusha
outsb
fstpt
adc
movsb
dec
dec
push
popf
movzbl
fwait
in
xchg
outsl
sbb
cmp
mov
add
in
xchg
enter
outsl
pusha
mov
mov
xchg
mov
test
mov
sub
or
addl
es
pop
idivl
pop
inc
and
sub
xchg
inc
push
ret
addr16
add
sbb
pop
mov
idiv
shl
and
xor
clc
addr16
ljmp
push
jb
les
ret
call
jbe
xor
mov
push
sub
xor
sub
lods
rcll
iret
mov
mov
mov
in
out
cltd
add
test
jo
sbb
call
or
fidivrs
idivl
fistps
push
dec
push
shl
sub
mov
mov
std
sub
xchg
add
push
or
enter
mov
or
sub
loopne
lods
shrb
or
addb
adc
jo
push
out
xchg
mov
sub
push
xchg
cmpsb
sbb
sub
mov
popf
insl
ficoms
dec
aad
add
ficoml
ja
mov
jmp
pusha
int3
push
pop
pop
and
inc
mov
dec
pop
data16
xchg
sbb
movsl
cmp
xor
jmp
pop
inc
repz
daa
cmpsb
or
mov
sub
lods
daa
mov
aaa
into
push
sub
pop
mov
or
and
in
xchg
push
je
insl
addr16
popf
hlt
mov
je
jecxz
xchg
xor
leave
jne
xor
dec
add
xchg
cmp
pushf
adc
mov
int3
cmp
adc
mov
cmp
cmp
lret
sub
lds
cmpb
fisttpl
hlt
cmp
ljmp
dec
aas
xor
test
jecxz
inc
jae
mov
outsl
jge
dec
cltd
mov
dec
mov
mov
xchg
or
mov
in
ljmp
les
adc
outsb
and
xchg
mov
jecxz
dec
dec
pop
add
nop
imul
xchg
dec
mov
mov
pop
nop
pop
fistpl
cwtl
aam
cmpsl
inc
adc
lret
loop
dec
ret
outsb
jp
add
lods
leave
mov
fsts
gs
movsl
cmpsl
rep
ret
ds
hlt
jecxz
push
mov
inc
pop
mov
sbb
scas
adc
int
in
imul
js
xor
inc
daa
jg
mov
ljmp
xchg
add
popf
push
mov
inc
jecxz
add
pop
les
outsl
ljmp
mov
cmpsb
aad
pop
jl
pop
into
subb
stc
shrb
jg
cld
iret
push
inc
rcrl
jae
mov
je
sub
mov
stc
mov
ds
out
add
push
push
shrl
add
dec
test
mov
das
xchg
sub
inc
lock
pop
push
pop
pushl
cmp
stc
popa
sub
aas
sbb
test
test
roll
xchg
sub
cld
test
cmp
enter
repz
add
mov
push
xchg
std
xor
das
pop
outsl
inc
xlat
repz
adc
pop
pop
adc
fstl
jp
cmp
xor
daa
out
mov
xchg
mov
jg
in
adc
aaa
loope
pop
adc
aam
inc
ljmp
jmp
test
ja
pop
jg
push
movsb
dec
mov
or
mov
cmpsb
mov
stos
push
cli
jne
push
outsb
fmuls
xchg
icebp
xchg
cmp
dec
fsts
mov
stos
imul
movsb
in
sti
ljmp
push
adc
sbb
jecxz
lods
pop
pop
negb
mov
nop
addl
push
in
dec
gs
cmpsb
pop
sbb
mov
add
lahf
push
pop
mov
mov
out
xchg
mov
mov
scas
or
daa
adc
out
pop
cltd
pop
flds
popf
pop
test
cmp
sar
mov
pop
jae
aaa
pop
sti
gs
and
dec
aaa
btc
or
jmp
cs
insb
push
xlat
jns
mov
enter
cmp
push
in
ret
cmp
pop
adc
dec
adc
aas
xchg
mov
rorb
shlb
pop
xor
in
xchg
insb
loopnew
out
jmp
mov
in
popa
and
mov
scas
outsl
loope
push
leave
mov
dec
ja
sub
add
or
pop
ja
das
and
gs
push
sbb
cmp
test
cmp
lret
inc
xchg
lock
ret
int
jno
mov
movsl
pop
dec
lods
jl
mov
test
sbb
outsb
pop
xor
mov
add
lret
std
jmp
dec
jbe
xor
sbbb
jg
mov
mov
icebp
movsl
out
loope
push
cltd
in
orl
loope
icebp
addr16
cmp
lret
pop
mov
es
wbinvd
clc
push
repnz
and
adc
cmp
pop
fisttpl
jbe
dec
dec
sbb
and
cmp
dec
movl
pop
sbb
inc
or
pop
lods
ljmp
outsl
xchg
je
dec
iret
jae
lcall
in
shrb
jecxz
loop
fwait
adc
mov
and
dec
sti
jb
pushf
inc
sub
jle
cs
leave
sbb
push
dec
in
dec
pop
jo
out
mov
popa
in
ds
and
daa
cmpb
cmp
movsb
stc
mov
adc
mov
or
sub
mov
mov
daa
mov
dec
test
adc
outsb
idiv
ret
xchg
or
cs
ja
les
jmp
mov
lds
in
loop
push
ds
out
mov
or
add
hlt
push
gs
dec
popa
jg
push
or
jp
gs
imulb
add
mov
jg
dec
int3
and
dec
aas
jo
xor
jo
inc
mov
sub
out
scas
cmp
mov
add
jle
out
xchg
push
add
xchg
dec
or
inc
add
cs
into
sub
leave
ficoms
js
sub
cmc
xor
mov
xor
push
push
lds
xchg
repnz
sbbl
imul
xchg
jmp
sbb
sti
imul
mov
pop
aas
aaa
xchg
nop
push
pop
add
push
xlat
jecxz
mov
icebp
xor
pop
lcall
xor
mov
shll
int3
iret
addr16
in
insb
mov
adc
hlt
pusha
fcoml
xor
adc
sub
fistps
mov
sub
mov
adc
adc
and
mov
scas
push
test
adcb
sbb
dec
sahf
cmp
add
or
fwait
popf
sti
out
setp
adc
lods
sub
add
ret
loopne
mov
lods
fs
or
cs
test
adc
movb
jl
pushf
cmpsb
icebp
mov
lea
and
add
out
fs
xchg
push
and
jne
jae
cltd
fwait
or
adc
mov
sub
fsubs
sbb
adc
pop
sbb
imul
outsl
and
clc
lock
loopne
loope
in
xchg
scas
fwait
lahf
nop
jnp
shrl
shr
mov
adc
imul
cmp
cmp
xor
inc
adc
sub
mov
jmp
int3
mov
pop
enter
clc
xchg
jge
ret
mov
hlt
xorb
cwtl
jg
jg
pop
loopne
cmc
call
test
dec
xchg
insl
enter
ljmp
push
push
xor
mov
inc
jae
filds
les
sub
out
fnstsw
xchg
repnz
jg
add
jg
hlt
dec
loopne
sub
mov
arpl
cs
loope
dec
sub
push
pop
sub
scas
or
aam
dec
xchg
mov
push
cs
inc
add
pushf
and
popa
or
sbb
or
jl
xchg
mov
inc
jle
in
mov
pushf
shr
adc
jb
mov
push
or
push
xchg
add
sbb
xchg
adc
cmp
inc
push
ret
pushf
jg
push
pop
mov
and
pcmpgtd
mov
in
jno
sarb
cld
mov
outsl
pop
lods
add
mov
shrb
shrl
pusha
xchg
mov
adc
or
cmp
dec
push
je
mov
fisttps
arpl
mov
mov
dec
lds
add
dec
lret
test
xchg
adc
jge
inc
pop
pop
cmp
clc
pop
fsubrl
jle
sub
jae
sbb
cmp
xchg
and
lods
inc
and
cmc
cltd
movsl
aam
fs
test
in
fwait
sub
mov
push
mov
mov
xor
or
cmp
mov
aam
push
mov
sub
dec
loopne
cld
pop
and
fidivrs
and
xor
int
in
sub
dec
xchg
adc
mov
or
cwtl
pop
rcl
cs
and
push
fdivr
sub
cmpb
mov
or
mov
clc
pop
insl
push
xchg
fs
imul
repz
mov
or
mov
push
adc
das
bound
push
sahf
mov
lods
push
push
imul
or
ja
out
hlt
dec
lcall
mov
mov
inc
xchg
sarl
mov
fcompl
bound
add
mov
fucom
cmpsl
inc
xchg
adc
mov
sub
fisttpl
ss
ss
in
sub
xchg
arpl
sub
cmp
shll
adc
orl
pop
mov
cmp
mov
cmpsb
pop
shll
cmp
fldenv
arpl
lods
int3
sub
imul
cmpsb
sub
test
ret
mov
jns
insl
outsl
test
mov
mov
and
dec
insb
js
sbb
icebp
lcall
add
popa
les
inc
sbb
pop
aam
sti
fisubl
mov
ds
jne
mov
pusha
in
mov
scas
pop
shlb
scas
aad
xchg
popa
mov
lcall
fists
sub
push
sbb
pop
ljmp
mov
mov
dec
push
in
dec
inc
xchg
out
cmp
xor
shl
xchg
out
xor
mov
ja,pn
sbb
ljmp
xor
clc
icebp
sbb
imul
orl
hlt
adc
loopne
in
inc
mov
add
xor
xor
push
mov
xchg
nop
imul
in
lods
lcall
push
xchg
fwait
aas
nop
xchg
or
loop
xchg
cmp
mov
int
push
roll
mov
sub
cmpl
pop
push
cltd
stc
mov
pop
and
mov
xchg
leave
pop
subl
aaa
mov
or
jbe
shll
mov
push
add
shlb
mov
sub
les
dec
push
mov
out
adc
adc
dec
dec
jno
out
outsb
xchg
xorl
lret
sbb
jmp
loop
push
sub
stc
enter
or
and
shlb
xchg
sbb
test
add
cmp
xchg
outsl
push
xor
pop
ficoml
xchg
xor
mov
mov
imul
mov
aaa
push
jae
pop
pushf
mov
or
mov
sub
clc
lock
adc
roll
pop
sub
test
mov
scas
test
aam
inc
inc
sbb
leave
test
dec
mov
bound
in
lock
xchg
popf
int3
pop
xor
nopl
xor
pop
push
pop
or
out
das
orb
insb
mov
subl
pusha
ret
add
push
daa
aas
lds
lahf
lock
add
and
pop
add
cmp
out
scas
adc
mov
mov
dec
into
mull
and
aas
xchg
in
cli
dec
push
insb
cmp
mov
cmp
out
dec
not
pop
loop
mov
jge
test
or
mov
aaa
dec
push
andb
rcrb
pop
push
notb
xchg
jge
loopne
fnstcw
jno
cmc
aam
notb
cmpsb
xor
or
xchg
lcall
push
mov
rorl
movsl
nop
enter
and
out
mov
lret
leave
ret
mov
es
clc
lret
push
mov
gs
pusha
push
mov
fsubrp
or
fdivr
dec
xor
cmpsb
cmp
loopne
in
loop
add
nop
mov
sahf
pushf
push
add
repnz
iret
ret
jae
fwait
cli
cld
out
mov
add
cmp
test
add
inc
inc
cwtl
fildl
sub
and
mov
cmpsb
mov
sarl
xor
cmp
push
ljmp
xchg
push
xchg
jne
add
int
icebp
inc
gs
pop
iret
sahf
out
testl
xor
rcl
fisubs
and
ret
sti
mov
jnp
push
in
je
pop
test
push
jae
rcl
sbb
sub
mov
inc
cld
insl
cwtl
adc
add
dec
addr16
lret
sarb
mov
push
or
sahf
sti
adc
xchg
push
cmpsl
sbb
xorl
adc
repnz
adc
lods
mov
xor
lods
jecxz
pop
mov
jbe
sbb
mov
loop
sbb
or
cvtps2pd
repnz
test
dec
cmp
andb
das
aad
arpl
negl
shll
int
xor
adc
push
setge
cld
push
xchg
test
pushf
rorl
cld
add
sbb
lret
rep
rcll
pop
aas
mov
fcmovnu
test
jno
in
mov
insl
call
out
sbb
mov
mov
cmpsl
or
cmp
mov
push
in
aaa
clc
imul
fldl
out
or
clc
push
and
xor
or
and
xchg
cwtl
into
adc
xchg
or
sbb
mov
dec
rcrb
adc
xor
mov
in
cli
cmpsl
lods
cwtl
xchg
in
fisubrl
pop
adc
jge
in
mov
mov
inc
inc
push
jmp
xchg
jmp
mov
cltd
or
fs
lods
aad
push
sbb
das
mov
adc
movsl
adc
cmp
popa
dec
dec
test
cmpsl
push
mov
sub
mov
subb
jbe
cli
adc
jae
pop
pop
push
mov
mov
mov
loopne
jmp
xorb
or
mov
fmuls
mov
popf
jle
mov
movb
outsb
out
xchg
add
push
dec
lret
and
aas
icebp
shrb
movsb
adc
mov
jb
mov
cmp
and
test
cli
in
ret
adc
or
and
push
sti
cli
adc
xchg
sbb
gs
push
fimuls
lods
dec
mov
jge
xor
les
aam
divb
jno
cmp
and
mov
jp
adc
lret
addr16
gs
es
pop
push
sahf
fwait
dec
add
jnp
pop
cltd
fldenv
jb
stos
adc
pop
pop
ret
icebp
rsm
popa
cs
pushf
push
lahf
cmp
dec
add
pushf
mov
xchg
imulb
shll
lods
repz
mov
aaa
cld
xchg
scas
adc
fimuls
mov
jno
jne
insl
and
loope
insl
push
cmp
movsb
insb
lret
andb
cmpsl
sar
xor
xchg
push
push
inc
push
push
out
imul
fs
imul
sub
cmp
out
sar
lahf
shll
sbb
and
jge
inc
lds
rcll
mov
lods
outsb
fidivrl
loopne
inc
pusha
push
pop
push
dec
jns
xor
xchg
dec
roll
arpl
inc
xchg
cmp
cs
test
add
xlat
faddl
jne
fstpl
mov
inc
inc
mov
cld
mov
pop
cmp
insl
pop
cs
nop
rcr
stc
xor
loope
and
leave
dec
enter
and
jl
sti
and
and
addl
jne
sub
sub
jl
sbb
sub
mov
clc
pop
jg
out
mov
mov
ljmp
fcomps
in
jle
jg
test
xchg
lock
negl
popa
ret
cmc
ds
repz
bound
xchg
push
and
inc
mov
cli
data16
lea
cld
mov
loopne
addb
lods
scas
stc
pop
fiaddl
inc
clc
lock
cwtl
cld
scas
xchg
movq
add
mov
push
pop
add
out
dec
xchg
sub
test
hlt
xchg
mov
cmp
js
in
loope
outsb
mov
and
sub
xchg
fmull
cmpsl
fisttpl
jns
and
pusha
xchg
push
xchg
fwait
mov
pop
outsl
sub
push
pop
dec
incb
cs
pop
mov
lret
bound
mov
add
inc
mov
roll
inc
imul
mov
jmp
imul
jmp
test
mov
or
inc
push
insb
push
pop
xor
sbb
pushf
jns
inc
cmp
jmp
or
ja
inc
adc
adcl
lret
mov
sbb
mov
out
stc
mov
lea
ja
xchg
inc
fistl
aam
stos
cmp
stos
jg
xchg
rolb
jecxz
cmc
xor
adc
dec
pop
push
pop
fwait
std
inc
pop
movsl
stos
jne
or
loop
cwtl
rdtsc
xor
mov
cmpsl
orl
leave
jge
add
dec
xchg
ficoml
aaa
arpl
mov
orl
shlb
mov
mov
sub
outsb
mov
lahf
mov
fimuls
sbb
popa
and
jbe
daa
and
inc
nop
pop
int
or
jae
add
nop
mov
outsl
dec
dec
in
and
test
push
jp
sahf
mov
fisubrs
repz
adc
sbb
out
mov
ss
cmp
cmpsl
mov
jb
data16
fldl
mov
or
stc
or
mov
dec
mov
xorl
nop
cmp
add
or
stos
and
pop
and
idiv
inc
jge
jp
icebp
inc
or
ja
add
loope
clc
addb
push
in
fdivrl
xor
cld
jp
loope
dec
test
mov
xchg
negl
sbb
stos
leave
xchg
popf
test
cmp
leave
in
add
sbbl
mov
sahf
popf
cld
enter
ret
andb
pop
cmp
xchg
xchg
cmp
dec
pusha
sbb
mov
jg
add
adc
jp
repz
xchg
insl
mov
pusha
sub
mov
and
cmp
dec
and
rorl
push
sub
and
xchg
dec
mov
sub
loop
notb
shrb
mov
sti
imul
stc
jecxz
mov
or
add
sub
jne
aad
sub
jno
bound
mov
dec
outsl
cli
fs
cs
cmp
cmp
mov
and
std
lahf
dec
jnp
addr16
mov
sub
icebp
jg
pop
out
adc
sub
fs
dec
in
pop
repnz
gs
je
fsts
or
cs
cmpsb
jl
pop
lret
scas
scas
xchg
pop
pushf
mov
push
lods
jb
int3
pop
stc
push
mov
push
pop
cs
xchg
jae
cmp
out
jbe
test
aaa
aas
push
push
push
nop
jae
add
loop
movsb
jmp
andl
mov
fsubp
push
ss
lods
in
pop
mov
cmpsb
xchg
sub
cmp
call
add
fisubrs
je
nop
out
xchg
adc
push
jg
xchg
es
adc
add
sbb
les
outsl
sbb
pushf
adc
adc
cmpsl
es
es
xchg
aam
out
mov
aad
push
sahf
sbb
in
mov
dec
movsl
mov
cmp
stos
cs
sub
dec
icebp
scas
push
push
test
iret
or
or
push
sbb
inc
dec
pop
add
jp
adc
mov
movsl
sbb
jl
test
fsts
repz
lret
push
mov
mov
pop
pop
sub
push
xchg
xchg
mov
xchg
cmpsl
adc
jo
shll
shlb
imul
add
negb
lock
das
sbb
or
dec
cmp
test
andb
call
add
cmpsb
int
aas
add
jge
mov
inc
push
adc
cmp
jmp
xor
test
out
arpl
dec
xchg
xor
dec
cmpsb
sahf
leave
or
push
mov
cmp
jbe
xchg
xor
dec
inc
mov
or
fs
fdivl
xchg
dec
roll
scas
cmp
sti
sub
adc
xor
add
jecxz
aam
and
fisubrl
mov
ja
inc
fstpt
sub
xchg
out
fwait
stos
jb
les
adc
push
enter
mov
xor
sti
xlat
jbe
push
gs
lret
out
mov
repnz
mov
popl
or
xchg
push
or
int3
jle
dec
stos
imul
and
and
xchg
std
shll
or
inc
cli
mov
mov
xor
mov
hlt
cs
mov
mov
jo
mov
push
push
jae
cltd
or
xchg
add
and
dec
push
mov
fld
mov
adc
rol
xorb
jno
mov
cltd
push
test
sbb
test
jb
call
lods
jne
or
popf
int
bound
inc
aaa
cmp
fisttpl
pusha
mov
testl
fbstp
push
or
arpl
cmp
loope
and
or
popa
cltd
xchg
jecxz
jmp
mov
pusha
imul
sub
lock
inc
cmp
dec
test
inc
inc
and
clc
rorl
xchg
push
fildl
pusha
jb
mov
xchg
daa
scas
and
and
hlt
enter
les
into
dec
adc
out
or
movsb
jns
push
jp
test
mov
scas
pop
sti
push
test
in
dec
push
pop
pop
or
cs
stc
in
sahf
dec
dec
inc
dec
psraw
dec
push
jge
imul
pop
xchg
testl
in
out
rcll
pushf
movsl
inc
clc
mov
mov
jle
xor
movsl
inc
jno
push
xor
fwait
dec
xor
and
insl
rorb
pop
or
arpl
mov
fstpl
sbb
mov
lock
adcb
loope
mov
test
addr16
pop
pop
mov
jno
icebp
jne
pop
dec
mov
pop
test
cmp
fs
sti
mov
iret
push
in
jns
ret
bound
shlb
fidivl
data16
mov
mov
sub
into
pop
shlb
cmp
testb
stc
add
adc
cltd
out
sub
daa
push
pop
nop
add
sahf
movsl
fidivrs
ja
xchg
mov
xor
pop
stc
imulb
lret
add
repnz
cltd
ret
pop
xlat
iret
mov
push
inc
stc
aaa
std
inc
imul
nop
xor
fdiv
pop
sti
sbb
imul
or
aam
inc
int3
shlb
add
xchg
sub
add
into
or
add
push
push
test
in
lods
les
test
cwtl
push
inc
inc
clc
dec
mov
xchg
ljmp
fistpll
test
out
add
lahf
xchg
in
into
xchg
adc
sbb
xorl
jecxz
fs
pop
inc
cltd
je
out
pop
fists
stos
or
jge
xor
insl
jne
nop
or
pop
jg
cmpsb
rol
xor
xchg
cmpsl
mov
enter
icebp
mov
mov
ret
roll
clc
mov
loop
gs
cmp
call
jl
sarb
mov
rcrb
gs
loop
jg
hlt
push
outsb
sub
lcall
cli
lods
mov
push
xchg
loop
mov
mov
addr16
aam
xchg
ds
pop
rorl
hlt
imul
mov
mov
cmc
xchg
xor
cmc
mov
adc
xchg
addr16
adc
cmp
xchg
out
je
scas
xchg
dec
cltd
mov
adc
and
iret
stc
mul
push
inc
inc
rorb
pop
mov
loope
icebp
sub
lock
icebp
imul
mov
in
jns
jae
test
push
mov
cmp
jp
or
fimull
xor
je
test
mov
in
xor
inc
fidivs
ds
dec
sti
or
in
cmc
lret
mov
mov
cmp
les
mov
push
fistl
xor
je
ss
inc
loopne
sbb
push
adc
cli
or
je
mov
mov
ja
mov
iret
pop
jl
stos
dec
add
pop
xor
cmp
mov
out
dec
fbstp
and
push
nop
imul
in
shll
and
xchg
jb
mov
cmp
movsb
jg
add
clc
push
push
movsl
into
xor
mov
pusha
xor
xchg
dec
fistps
xchg
pop
and
push
aad
lret
jle
call
pop
fmull
mov
jb
dec
inc
adc
add
cmc
data16
and
shrb
push
add
jb
lods
mov
cmp
push
sub
stc
mov
sbb
pop
sub
add
rol
inc
sbb
aaa
jmp
xor
dec
pop
mov
lcall
ja
icebp
lahf
leave
add
popa
mov
pop
push
out
push
movsb
call
aam
push
repz
jns
xor
sbb
sti
xchg
or
sbb
mov
sub
push
mov
mov
cmp
int3
or
les
add
stos
loope
addr16
add
shl
fsubs
mov
mov
push
std
int3
sub
fiadds
inc
mov
push
adc
sub
sbb
divb
mov
or
aaa
andb
loopne
inc
mov
sahf
sbb
or
mov
dec
pop
add
dec
jge
push
lahf
std
lret
aaa
stc
or
mov
adc
adcl
dec
out
pop
pop
ljmp
push
lock
jne
or
dec
inc
fimull
test
hlt
jne
test
jnp
xchg
adc
sbb
loop
mov
pushf
in
cmpsl
or
les
cmpsl
aaa
cmovge
push
sub
stos
mov
movsl
adc
jecxz
push
stos
dec
and
mov
inc
outsl
popa
stc
jb
fstps
fwait
jbe
iret
lods
sti
mov
xchg
ja
test
bound
mov
repnz
sbb
push
repz
add
xor
jb
mov
cmp
xor
mov
lock
and
repz
jge
or
into
lods
and
sub
push
mov
das
je
add
cltd
idivl
lcall
cli
and
das
enter
gs
jnp
mov
insl
adc
int
jb
push
int3
add
inc
insb
jno
insb
inc
mov
push
movsb
out
ljmp
sbb
pop
test
aas
xchg
inc
cld
sub
jmp
ds
jl
je
out
les
lds
aaa
jbe
jns
xchg
addl
cmp
mov
out
jmp
xor
lcall
lock
ret
mov
fld
xor
mov
popa
or
in
push
cs
jmp
js
or
mov
jl
push
add
cmp
dec
lods
lods
xlat
dec
and
es
push
jecxz
lock
adcl
pop
add
mov
into
sbb
sub
mov
shl
mov
add
test
pop
stos
dec
xor
fidivrl
add
int3
mov
cmpl
add
test
pop
push
mov
sbb
mov
ja
pop
mov
add
jo
xchg
jo
xchg
sbb
xor
dec
sub
lahf
pop
loope
lods
pop
push
loopne,pt
iret
sub
mov
repz
xor
push
je
and
jge
sub
sub
jo
adc
cmpsb
or
mov
push
jnp
out
cmp
jg
xchg
daa
pusha
fisubrs
xchg
std
ds
movsb
inc
sub
cmp
mov
dec
aas
adc
adc
outsl
out
and
jmp
sbb
ljmp
sub
adcl
ds
cmpsl
add
aaa
mov
inc
sub
push
lock
outsl
mov
frstor
lcall
das
insl
fildl
repz
adcl
addr16
das
push
pop
movsb
jl
inc
in
fdivrl
cmp
test
xchg
repz
dec
jle
and
push
mov
adc
cld
arpl
or
outsb
popl
cmp
ret
mov
test
cmp
or
fcom
or
test
push
jg
pop
sbb
lods
jb
dec
cli
cmp
subb
cmc
adc
sbbl
mov
cmpsl
imul
xor
out
decb
sti
jg
lds
lret
pop
adc
sbb
in
iret
into
dec
sub
cs
jae
mov
in
push
movsl
lods
jmp
sbb
in
add
xor
sahf
push
gs
sub
leave
mov
inc
imul
filds
cmp
movsl
lock
lock
jno
adc
setp
scas
and
lret
mulb
push
push
cmc
addr16
jg
mov
inc
push
out
pop
shlb
addr16
mov
xor
les
adc
pop
jns
ja
lods
pusha
loop
sub
pop
xor
mov
aas
mov
test
xlat
and
lods
mov
repnz
sub
pop
into
cmp
enter
mov
gs
test
pop
dec
fisttpl
cmp
daa
and
shll
sbb
lods
dec
jo
sbb
aad
bound
cmp
orb
push
fadds
iret
push
movsb
aaa
mov
in
outsl
mov
jno
ss
les
adc
jno
lahf
sub
sub
int3
push
inc
xorl
sub
mov
int
mov
pushf
mov
jp
fisubs
jge
addr16
jmp
sbb
mov
inc
testb
insl
mov
xor
push
ljmp
pushf
gs
fwait
cmp
lock
push
pop
push
xchg
fstpt
cli
stc
mov
insb
mov
test
cmc
rol
les
stos
in
repz
and
ljmp
and
popf
or
push
or
iret
sti
les
jb
mov
jbe
xlat
dec
xor
mov
or
in
push
and
dec
and
int
lret
mov
inc
dec
pop
adc
lock
lods
mov
cwtl
stc
repnz
aas
pop
mov
and
and
adc
stos
and
out
shr
cld
sub
jb
test
aam
xor
je
xchg
pusha
lock
jmp
mov
fdiv
jno
mov
outsl
fildll
jmp
enter
sub
adc
inc
pop
outsl
lcall
data16
jg
add
les
xor
idiv
sahf
and
popa
jne
and
mov
cmp
mulb
push
pusha
outsl
mov
jne
test
sub
pop
popl
or
dec
jb
leave
and
push
pop
mov
adc
fadds
add
sbb
sub
push
adcl
out
negl
mov
rcl
sub
pop
pop
iret
int
repz
dec
popf
dec
or
adc
xor
fmuls
shlb
adc
lock
lods
dec
dec
mov
lods
je
adc
faddp
adc
rolb
test
mov
mov
fsubrp
pop
outsl
or
mov
out
insb
fisubs
fdivl
add
arpl
xadd
xor
push
lcall
xor
xchg
outsb
jp
popa
cmpb
loop
sahf
dec
aas
and
xchg
inc
add
sub
and
sbb
in
and
xor
push
loope
mov
arpl
dec
es
int
fcmovne
scas
fwait
xlat
aas
shlb
arpl
push
in
or
daa
add
mov
test
adc
fldenv
je
sbb
fisttpll
ljmp
lods
add
loop
pop
mov
adc
aad
outsb
inc
lcall
aas
sbb
push
sahf
mov
cmp
mov
outsl
inc
xlat
xchg
in
ss
sar
pop
sbb
mov
out
adc
out
clc
jge
scas
xor
pop
push
xchg
jae
add
xlat
xchg
iret
cmpsb
test
xchg
pop
jo
out
xchg
mov
cmp
jle
pop
fidivrl
arpl
sbb
mov
pop
add
addr16
inc
je
mov
inc
lock
sbb
lea
ret
xchg
or
inc
ss
add
pop
aaa
sub
aaa
loope
xchg
lds
xor
push
lret
mov
add
popa
mov
sub
sub
fldt
pop
bound
out
shl
imul
mov
sub
sbb
sbb
xchg
mov
jae
mov
lock
fwait
and
cmovp
adcl
jmp
mov
lea
lea
test
fcompl
ljmp
sbb
cmp
jge
sbb
bound
mov
mov
lcall
stos
fwait
aam
outsb
pop
jbe
ss
movsb
mov
popf
je
daa
js
call
ljmp
stos
jno
shll
loope
xchg
imul
arpl
dec
push
dec
test
sbb
int3
cld
in
add
pop
out
aaa
mov
cmpsb
loope
in
xchg
fs
imul
call
dec
cmp
out
es
sub
mov
pop
cmp
dec
and
mov
xchg
fdivr
cli
add
jno
jnp
mov
aas
or
pop
in
mov
sbb
fwait
mov
jae
or
adc
bound
out
mov
dec
mov
std
int3
call
mov
andl
push
popa
bound
dec
aaa
ja
and
or
sub
cltd
push
pop
add
add
aas
xor
fs
xor
stc
iret
add
xchg
pop
mov
ja
iret
push
out
rcll
lcall
inc
sbb
jge
cltd
in
pop
mov
jp
mov
sbb
push
xchg
shl
dec
cmpsb
lret
lahf
jle
xorl
out
xchg
pushf
lahf
mov
push
loopne
inc
jge
jno
dec
repnz
pushf
jg
out
sarb
test
jns
std
xor
gs
push
rorl
jp
mov
cmpsb
sub
and
in
outsl
into
fcompl
movsl
pop
les
scas
add
adc
ret
push
add
pop
fwait
call
pop
into
cmpl
in
mov
aam
enter
dec
cwtl
adc
pop
mov
test
mov
add
aad
xchg
dec
jne
in
out
sub
es
push
mov
xor
sbb
xchg
lret
stc
call
mov
dec
jle
clts
or
movsl
jmp
xor
outsb
pop
shr
cmp
add
test
add
in
sbb
gs
adc
cld
and
test
cwtl
jg
or
repnz
adc
xor
pop
mov
mov
loope
sbbb
lret
clc
jmp
inc
js
lret
push
pop
xor
mov
and
clc
and
ss
rcr
or
in
xchg
and
es
xchg
cld
inc
je
jg
rcr
jge
out
fistpll
pushl
cli
fldt
fxam
movsl
loopne
mov
adc
mov
and
cmp
or
jg
mov
dec
std
call
push
push
adc
adc
sbb
cmc
cmp
cmp
mov
mov
xchg
sub
xchg
cmp
jae
dec
sarb
jl
fwait
gs
add
sbb
loopne
scas
mov
xchg
fsubs
mov
imul
data16
ds
adc
pop
xchg
repz
pop
add
pop
orb
call
hlt
jae
pop
jge
outsl
sub
and
xor
std
neg
addr16
and
int
out
fiadds
inc
fdivrl
pop
push
loope
arpl
bound
sbb
es
add
xorl
sahf
add
aam
pusha
addr16
call
imul
loop
adc
pop
mov
dec
or
jb
xor
mov
lods
ret
scas
pop
lahf
pusha
inc
dec
dec
ljmp
mov
push
jo
nop
xor
add
test
outsl
popf
mov
dec
cmp
xor
mov
fwait
jl
dec
das
xlat
xchg
ret
push
sbb
in
adc
jl
adc
pop
mov
mov
es
insl
dec
mov
cmpsl
jo
mov
ljmp
ja
jne,pt
repnz
jge
mov
add
outsb
arpl
aaa
cmp
add
xor
ret
loopne
lods
shl
shlb
mov
movsl
icebp
mov
xchg
ret
mov
add
add
mov
mov
mov
sbb
cwtl
popa
jb
outsl
and
cltd
or
leave
fsub
mov
cmp
mov
lahf
jno
xor
mov
xchg
pusha
cmp
mov
fwait
lret
out
lods
imul
or
imul
dec
dec
popa
push
xor
cld
fcomps
imul
push
out
pop
cmpb
jo
ret
mov
sub
in
faddl
addr16
sbb
and
pop
je
mov
loopne
and
dec
xor
lds
jg
movsb
xchg
and
xchg
ret
loope
inc
mov
test
mov
aas
jnp
addr16
out
jp
mov
mov
notl
pop
pushf
lds
sub
aas
push
pop
push
setne
sub
out
add
mov
jl
cmpsl
xchg
in
mov
fdivrs
into
mov
xor
push
cltd
fwait
sbb
mov
int
ja
in
test
fmuls
lret
imul
js
test
or
dec
sbb
cmpsl
xchg
and
dec
cmp
std
popa
adc
insb
imul
mov
jnp
sub
adc
sub
inc
fistpll
in
jae
or
mov
lahf
nop
aam
cld
mov
xchg
mov
aaa
sti
fsubs
inc
sub
dec
push
cmpsb
out
in
inc
je
inc
pop
aam
sbb
sbb
jle
dec
mov
das
mov
fmull
int3
insl
or
jo
inc
xor
mov
pop
sbb
mov
xchg
adc
inc
sbb
cs
lea
ja
in
adc
adc
or
mov
test
mov
pop
daa
push
movsl
out
fsubrp
fs
push
or
aad
pop
nop
push
lahf
add
push
repnz
int3
test
sub
and
test
loopne
adc
jo
adcl
add
and
cltd
mov
dec
mov
bound
and
push
fwait
sbb
mov
test
pusha
inc
into
out
push
add
scas
sub
fistl
xor
andl
movsl
call
test
je
push
xchg
add
movsb
repnz
pushf
adc
test
mov
data16
pop
dec
jo
cmp
rorb
test
xor
push
jno
dec
push
movsb
aad
outsb
pop
loop
xchg
cwtl
jg
jne
fildl
mov
in
imul
sar
lods
lcall
call
push
and
adc
mov
sbb
push
stos
mov
sub
pop
jne
ja
dec
push
xlat
mov
dec
loopne
fimuls
cli
lret
aas
jo
xchg
loopne
scas
jb
addr16
adc
jg
imul
js
dec
mov
xorb
push
repz
in
pop
dec
test
iret
fmul
in
test
dec
sub
mov
add
add
push
inc
add
cmp
sbb
arpl
cwtl
pop
scas
dec
out
popf
scas
push
pushf
push
repz
pop
jmp
je
cmp
lcall
into
lcall
mov
xchg
xchg
sbb
fadd
ret
das
les
icebp
mov
cmc
sahf
imul
and
or
add
mov
in
imull
push
mov
sti
rcll
mov
not
inc
cmp
cmp
xchg
xor
loope
and
or
loop
pop
fwait
int3
rolb
sbb
xchg
int3
lods
scas
xchg
shlb
iret
out
lret
pop
rcll
test
or
pop
cmp
sub
dec
or
in
insb
push
iret
rcrb
notb
push
int3
ljmp
sbb
inc
sti
sti
lahf
inc
push
icebp
test
int3
dec
cmpl
dec
dec
dec
mov
mov
jne
dec
xchg
gs
or
sub
push
mov
das
adc
add
jo
pop
xorb
mov
data16
add
add
mov
in
adc
frstpm(287
xor
lds
call
sub
cmp
adc
cmp
js
push
jle
cmpsl
fstpl
push
dec
push
xchg
lods
pop
iret
imul
sbbl
pusha
mov
xchg
inc
mov
lods
mov
and
fnstsw
push
xchg
lods
lods
stos
cld
xor
clc
adc
pop
fisubrl
cmp
sbb
cs
loopne
mov
jno
pop
adc
mov
cli
add
std
mov
mov
inc
addb
popa
ss
xor
decl
popa
mov
int3
xchg
and
fs
xchg
push
cmp
movsb
jge
pushf
adc
repnz
sbb
pmulhw
or
xchg
sti
cmp
dec
or
xchg
lcall
shrl
or
lock
ret
out
push
jb
es
jbe
loope
scas
scas
stos
imul
dec
imul
hlt
mov
lods
or
xchg
adc
pusha
sbb
mov
adc
mov
imul
cmp
adcl
sub
inc
mov
mov
sbb
xor
adcb
bound
pop
sbb
inc
lods
int
sbb
shlb
test
aad
dec
imul
dec
addr16
inc
bound
add
jp
xchg
cmc
inc
sbb
pop
mov
fbstp
adc
imul
push
fstl
jle
or
and
lods
test
xor
mov
mov
into
inc
push
pop
xchg
sbb
inc
clc
mov
cmp
mov
stos
xlat
cmp
rcrb
and
mov
pop
xchg
mov
cmc
lcall
xor
ret
ds
and
int3
dec
ficoml
loope
mov
cmp
add
jmp
mov
mov
and
dec
loopne
mov
orl
jp
or
dec
out
lret
enter
mov
aas
sub
outsb
jmp
fldenv
or
popf
jae
mov
lcall
pop
or
ficomps
xchg
add
cmp
mov
xchg
mov
ret
iret
lods
mov
leave
cmp
lods
mov
andb
xchg
test
cltd
mov
andl
arpl
pop
fidivrl
push
xor
lds
mov
popf
push
sbb
and
aad
mov
out
outsl
inc
mulb
outsl
mov
aas
mov
sbb
push
test
fs
test
mov
mov
sahf
pop
xor
adc
mov
sub
jle
sbb
rcrl
jg
inc
or
push
sti
movsl
mov
jge
in
sbb
jo
inc
adc
pop
mov
pop
rcrb
mov
dec
shrb
je
bound
xor
mov
jmp
mov
pop
sti
pop
outsb
add
dec
mov
push
xchg
jmp
push
mov
add
imul
repnz
je
cmp
fsubrs
mov
mov
sbb
inc
fwait
and
xchg
xor
mov
lcall
ljmp
mov
fcompl
sub
cmp
xchg
or
sub
test
shl
add
jbe
dec
mov
mov
xchg
push
mov
fcom
jge
call
adc
gs
or
loopne
push
or
or
xor
stc
ja
lds
cmp
xchg
sub
mov
push
mov
push
xor
jmp
adc
pop
sub
push
cmp
fstpt
push
mov
adc
add
dec
fldenvs
lret
or
mov
decl
mov
pop
in
icebp
jo
iret
lahf
sbb
jne
fistpll
mov
sar
stc
or
pop
loop
ja
and
lahf
test
xlat
xchg
les
and
push
adcb
iret
and
pop
and
xchg
testl
sarl
js
pop
into
ljmp
jp
mov
inc
loop
cwtl
psadbw
mov
cmp
fildll
or
fdivrl
mov
mov
jecxz
clc
imul
mull
clc
ljmp
jmp
rorl
and
test
leave
into
push
inc
cmpsl
and
sbb
xor
sti
add
cmp
jle
sbb
mov
xchg
or
mov
dec
push
push
dec
scas
insl
inc
hlt
sar
lcall
xchg
push
arpl
add
xchg
adc
xchg
dec
xor
repz
lds
imul
xchg
ljmp
pop
jae
out
gs
xor
mov
cmp
xchg
rcrl
pop
push
push
mov
cltd
sub
push
fnstsw
leave
add
mov
push
inc
out
xchg
xlat
scas
ficompl
push
mov
adc
pop
push
push
mov
sub
into
sbb
push
pusha
addr16
dec
xchg
mov
and
cltd
fs
jecxz
xchg
sbb
and
out
int3
mov
ficoms
sbbl
xlat
iret
outsb
xchg
push
add
xor
mov
outsb
lcall
gs
sahf
mov
sub
jnp
xor
sub
push
test
dec
push
sub
adc
xor
jg
and
sub
mov
insl
add
repz
out
xchg
add
xor
clc
in
nop
stos
fsubrl
jecxz
adc
xchg
enter
outsb
sbb
jge
dec
push
cmpsl
adc
xchg
lret
pop
xchg
lock
fldl
mov
inc
mov
pop
mov
inc
push
mov
inc
pop
jg
fwait
nop
dec
fimull
fisubs
and
add
aam
cmc
inc
dec
mov
xchg
adc
jo
dec
adc
mov
push
inc
jns
roll
inc
inc
ret
mov
mov
push
xchg
mov
xlat
push
lock
out
add
cmp
cmp
jmp
mov
xor
std
xchg
dec
cmp
int3
mov
pop
jo
lea
das
or
adc
dec
ror
and
out
push
mov
sbb
jp
push
lret
sar
and
pop
add
jb
dec
mov
pop
orb
sbb
dec
das
jecxz
insb
dec
int
pop
xor
mov
mov
test
insl
inc
adc
push
inc
xchg
sub
fisubrl
jae
imul
push
aad
jmp
es
repz
sub
mov
jecxz
xchg
jne
push
loope
sbb
mov
inc
add
mov
ret
pop
jle
popf
stos
pop
xor
sub
cmp
dec
mov
jge
fldenvs
hlt
pop
cmp
adc
mov
clc
insb
into
shl
aad
xchg
mov
xchg
dec
jg
mov
mov
into
push
testb
jnp
sarb
ret
fildll
xchg
mov
sbb
xchg
stos
or
add
mov
fimuls
mov
inc
lds
xchg
mov
cmp
popa
or
inc
jmp
jge
out
sub
popf
and
cmc
or
icebp
and
pop
ret
hlt
cmp
lcall
mov
pushf
push
mov
shrl
loop
jns
adc
pop
pop
cmpsl
mov
cmpsb
out
xchg
les
xor
mov
pop
or
ljmp
scas
dec
test
jbe
xchg
call
lcall
pop
push
int3
jns
jae
gs
sbb
sub
xchg
enter
sbb
jb
pop
push
icebp
je
push
jmp
xorb
fs
lret
push
mov
sti
pop
imul
xchg
sbb
pusha
ficoms
mov
cmp
aam
push
xor
cmpsb
ret
cmc
clc
cmp
push
xorb
js
pop
xchg
or
sub
ljmp
jg
sbb
cwtl
ret
subb
xchg
rorb
cmp
stos
pop
inc
cwtl
jne
inc
or
pushf
fucomip
xor
mov
ret
andb
mov
and
cmp
pop
in
gs
sbb
inc
push
loopne
les
cmp
xor
sub
hlt
ja
addr16
sbb
and
fisubrs
pusha
cmp
sbb
loop
inc
pop
mov
pop
mov
imul
dec
mov
mov
insb
pop
inc
pushf
jbe
xor
xchg
or
fs
inc
sub
ljmpw
out
nop
mov
movb
arpl
jle
or
push
jp
xor
pop
sbb
fcmovnu
mov
outsb
jno
int
pop
jle
test
push
ffree
jg
test
fidivs
mov
loopne
test
push
imul
sbb
movsb
adc
je
push
lret
xchg
pop
xchg
or
aas
ficoms
pushf
ss
je
insb
movsl
adc
cmpsl
cld
pushf
mov
adc
xor
jl
xchg
and
mov
test
ret
pusha
xchg
and
aad
aaa
cs
inc
xchg
lods
xchg
js
pop
inc
test
mov
mov
sarl
mov
mov
pop
inc
push
inc
pop
pop
cmp
aaa
and
dec
and
pop
jb
mov
hlt
outsb
je
xor
push
adc
mov
adc
pop
dec
xlat
mov
hlt
lret
daa
insb
jne
and
sbb
mov
xchg
sub
imul
xor
es
je
fisttpl
bound
lcall
out
testb
jl
sub
addr16
lret
jecxz
mov
pop
adc
jp
pushf
mov
mov
mov
push
pop
rclb
fdivrs
insl
fs
and
fiadds
scas
sub
cltd
cmp
fs
lds
cwtl
inc
sbb
jno
sbb
xor
popl
mov
out
adc
push
inc
pop
dec
ret
pop
fwait
pop
insb
pop
shll
inc
mov
nop
mov
rcrb
sbb
out
and
imul
or
xor
cltd
push
sbb
popa
arpl
neg
dec
iret
add
push
adc
pop
inc
fimuls
ror
dec
test
rorl
imul
in
sti
xchg
incb
xor
adc
out
test
dec
push
shrl
mov
cmpsb
cmp
imul
inc
and
and
dec
and
call
bound
mov
mov
jmp
sbb
sbbl
add
inc
fcoms
ljmp
sbb
jo
jp
fmull
roll
loop
push
jle
jl
fistpll
adc
ss
fstps
jns
dec
sbb
jb
mov
xor
mov
sub
sti
pop
sub
arpl
jns
or
fs
dec
clc
icebp
jne
jnp
rcl
or
mov
inc
adc
stos
in
mov
pop
sbb
mov
frstor
dec
inc
adc
or
mov
loop
jo
xchg
cmp
xor
sbb
xor
in
idivb
enter
pushf
clc
movsl
cmp
daa
test
inc
mov
lea
pop
sub
arpl
sub
fs
and
imul
das
inc
ja
xchg
fwait
imul
out
dec
mov
mov
ja
int3
incb
iret
xchg
pop
cmp
adc
mov
sbb
adc
dec
enter
in
repz
pop
dec
sub
lcall
push
std
jg
sub
jle
jmp
sub
lcall
ja
xchg
scas
push
mov
lods
test
mov
cltd
loop
mov
pop
cwtl
addl
add
mov
push
adc
hlt
in
and
mov
dec
imul
sti
test
jle
jbe
mov
cmpsb
cltd
pop
xor
mov
or
sub
aaa
sbb
inc
jns
inc
fwait
or
sub
add
shl
mov
add
decl
sbb
out
push
and
in
testl
sub
cmpsl
inc
clc
or
ja
and
add
cli
cmp
ds
mov
scas
das
sub
push
or
scas
mov
jno
ljmp
mov
mov
xorb
nop
or
jmp
ret
pop
hlt
and
in
repnz
ret
add
adc
icebp
push
mov
sbb
jge
mov
jmp
fdiv
dec
sbb
inc
sub
mov
sub
aad
rcrl
mov
push
xchg
imul
inc
inc
mov
js
pop
jg
btc
inc
xchg
adc
adc
nop
int
mov
test
out
xorl
test
outsb
out
jecxz
in
pop
xchg
cmp
out
cmp
push
fiadds
hlt
mov
jns
shlb
push
ret
hlt
out
out
shl
pop
cs
and
adc
adc
push
mov
in
adcl
add
mov
jmp
sub
testb
pushf
xor
jae
loope
jmp
xor
fadds
xor
or
and
pop
adc
adc
push
push
xchg
cmpsb
stos
push
stos
add
pusha
push
sbbb
push
mov
mov
aas
xor
jl
aaa
subl
pushl
sahf
mov
sub
xchg
insb
shll
lock
adc
gs
pop
sbb
cmp
push
and
in
push
out
ret
fldcw
clc
jmp
mov
cmpl
xor
jl
cmc
jl
or
subl
and
dec
sbb
mov
push
inc
addr16
pop
mov
daa
lock
fcmovu
mov
mov
dec
cltd
hlt
and
jle
mov
jns
add
dec
clc
push
and
mov
pop
into
inc
insl
dec
xchg
ret
cltd
leave
pop
fists
mov
sbb
inc
fldl
pop
xchg
daa
jo
pop
cld
or
push
lret
sbb
sarl
movsl
lahf
and
data16
outsb
dec
mov
add
cmp
lcall
push
or
xor
jmp
out
enter
loopne
inc
pop
lock
mov
in
les
stos
mov
in
push
jg
jge
xchg
and
das
push
push
add
es
push
scas
sbb
adc
dec
mov
xchg
bound
ret
pop
add
aas
cmpsl
scas
push
jo
adc
xchg
jge,pn
decb
mov
mov
jecxz
cmp
xor
xlat
test
movsb
xlat
aaa
rorl
out
adc
mov
cli
pop
fstps
inc
or
js
xlat
and
test
test
pop
cmc
add
xor
pop
subl
les
sub
shrl
pop
push
imul
mov
or
add
jns
cmc
pop
mov
loop
push
leave
pop
xor
adc
xchg
lods
push
fimull
in
jmp
int3
pusha
cmpsl
mov
cwtl
add
and
stos
push
jb
dec
mov
scas
popf
pop
int3
out
sbb
mov
or
gs
inc
and
sbb
pop
or
pop
xor
dec
bound
add
cmpsl
or
mov
sub
sbb
or
ficoml
mov
pusha
outsb
insb
rorb
push
fwait
daa
push
xlat
push
sbb
adc
and
dec
test
shlb
push
test
sbbb
fadds
xlat
sbb
loopne
shll
addb
std
or
pop
jo
mov
or
daa
ficoms
cmpsb
jecxz
mov
jge
dec
xor
arpl
nop
jmp
in
out
adc
dec
outsl
mov
mov
aam
pop
sbb
or
cmp
add
popf
cmp
adc
push
pop
pop
rcl
mov
aas
mov
fstl
sbb
mov
sbb
mov
xor
pop
adc
pop
adc
push
movsb
or
adc
addr16
pushl
rcr
or
xchg
rcrb
imul
ja
imul
or
push
xchg
pusha
cmpsb
add
shlb
pop
fstl
and
mov
fwait
out
add
outsb
add
mov
stos
ffreep
dec
jo
gs
lds
rolb
dec
insl
xor
sbb
xor
ljmp
cmpl
jnp
xor
lret
jmp
fwait
adc
xor
jbe
adc
jns
adc
adc
add
fiaddl
dec
bound
jle
jnp
enter
and
jmp
icebp
push
mov
scas
daa
mov
pop
ret
ja
push
and
add
add
dec
push
stos
negb
sub
fldenv
les
and
cmc
outsb
and
or
stos
push
scas
jmp
jecxz
lret
add
adc
pop
and
scas
or
inc
in
aas
mov
enter
inc
xchg
fidivs
lock
jecxz
fs
xchg
pop
push
fs
mov
sub
push
mov
mov
loope
xlat
mov
xchg
lods
push
jmp
lahf
pop
or
or
loope
xchg
cmp
js
pusha
pusha
idivl
roll
jae
fwait
sub
into
mov
dec
dec
adc
push
pusha
add
mov
andl
dec
mov
cld
out
fmulp
xchg
aad
xchg
mov
outsl
iret
rcrb
movsl
int3
add
push
cmpsl
or
ss
mov
call
mov
les
clc
sbb
inc
imul
out
sub
and
lea
pop
cmp
aaa
or
test
add
out
mov
cmpsb
in
int
sub
rclb
xor
pop
mov
add
mov
fcomps
or
rclb
mov
dec
inc
add
jb
test
pop
dec
sub
jle
lods
sbb
lds
or
aas
pop
sti
out
call
lods
outsl
jno
imul
mov
pusha
jmp
pushf
hlt
mov
ds
punpcklbw
loope
shll
movsb
shl
subb
pop
data16
or
mov
add
shrl
loope
jecxz
cmc
adc
and
or
ficomps
ret
dec
or
in
or
push
nop
popf
bound
pop
mov
push
lods
pop
jb
mov
add
xor
xchg
push
les
push
jecxz
push
imul
sub
pop
movsb
cs
lret
or
dec
sahf
pop
mov
inc
or
popf
push
ret
jmp
rolb
sbb
test
adc
push
dec
sbb
jno
adc
mull
cltd
sbb
cmp
out
lock
mov
setle
fdivrl
mov
push
mov
add
addr16
dec
cmp
out
xlat
inc
into
jecxz
mov
mov
cmp
mov
sbb
scas
lahf
pop
and
aad
aam
xor
inc
jmp
lahf
in
call
pop
stos
test
test
and
lods
aas
testl
jno
push
lock
popaw
pushf
iret
xchg
nop
test
insl
jne
into
xor
xor
lods
mov
mov
cld
nop
inc
add
dec
xor
push
icebp
xor
rorl
mov
rorb
popa
aaa
inc
xchg
and
ljmp
or
in
inc
popa
adc
adcl
push
sbb
daa
imul
lods
test
lcall
inc
repnz
lds
std
mov
cmp
mov
faddp
sub
push
int
pusha
rolb
aas
mov
mov
lahf
add
adc
dec
das
jbe
sbb
push
xchg
lahf
in
roll
cld
mov
jl
or
int3
call
pop
jecxz
pop
roll
sub
push
mov
not
nop
jmp
cwtl
fwait
sarb
adc
sub
int3
iret
cli
addr16
pop
jne
verr
iret
dec
mov
leave
popa
inc
add
mov
inc
jbe
push
xor
ret
leave
popa
fucom
nop
jns
in
scas
sub
inc
les
dec
jns
pop
fwait
shlb
repz
mov
sbb
lods
repnz
shlb
jecxz
jbe
mov
mov
or
dec
mov
int
add
imul
inc
xor
xlat
hlt
xchg
mov
push
and
inc
push
and
int3
and
pop
cmc
add
fldenv
sar
push
pop
lcall
mov
push
loopne
sti
in
pop
dec
stos
gs
daa
and
adc
mov
jmp
inc
aaa
stos
aad
daa
addr16
push
xchg
sub
je
dec
fisubs
shlb
test
jb
xor
rclb
pop
mov
test
lcall
xchg
push
fucomip
mov
cmp
add
lahf
ficompl
test
lahf
insb
in
movsb
and
mov
sbb
dec
rcrl
jb
subb
mov
ja
push
mov
push
loop
stc
loopne
push
adc
shrb
lret
lods
mov
test
jns
adc
jnp
dec
inc
scas
xchg
or
push
add
jns
in
mov
in
and
pmaxsw
mov
fstpt
lcall
add
push
cmpsb
sub
xor
cmp
ret
lock
mov
nop
cltd
adc
pop
push
mov
sub
push
cmp
paddw
movsl
add
popf
sbb
gs
pop
fadds
stos
sbb
xchg
mov
mov
shlb
and
add
and
bound
xor
pushf
lods
xchg
loopne
xchg
and
outsl
test
stos
pop
gs
inc
jmp
stc
mov
add
in
fsubrl
xchg
push
pop
scas
insb
cmp
or
andb
bnd
shll
icebp
fdivrs
cs
ret
cmp
and
loope,pn
jnp
add
adc
mov
imul
pop
pop
sub
stos
gs
lahf
and
xor
mov
sbbb
outsl
or
xchg
pop
push
fs
lock
sahf
xor
pop
adc
cmpsb
outsb
fildl
loope
push
xor
ljmp
adc
iret
xor
pop
loope
sahf
fs
sahf
loop
pop
shlb
dec
xor
lret
inc
dec
fadds
cli
fistpl
inc
gs
sar
mov
out
rcr
xchg
jmp
fcoml
std
mov
vpminsw
arpl
gs
dec
cwtl
fwait
adc
pop
mov
aam
mov
loope
arpl
or
jb
scas
cmpsb
mov
nop
mov
fadds
adc
enter
fwait
lds
repz
mov
lcall
mov
ret
sub
mov
das
ss
ljmp
aaa
jnp
int3
fstl
sbb
pop
and
pop
mov
jle
insb
add
mov
les
stc
xor
cmc
push
fwait
xchg
out
hlt
ds
cli
mov
call
or
or
mov
or
xchg
outsb
sbb
pop
leave
dec
pushf
mov
in
jl
cmp
mov
pop
dec
inc
push
in
fs
inc
xchg
loope
inc
pop
movsb
cmp
out
in
adc
out
int3
add
aas
add
mov
xor
aas
adc
scas
cmpsb
ss
mov
mov
out
cmp
cmp
cmp
pop
sub
scas
xor
inc
xchg
jmp
or
out
gs
pop
cmpsl
mov
pop
jg
jl
pushf
insb
into
mov
pop
mov
movsl
pop
nop
jae
lahf
in
add
or
mov
test
popf
jle
jmp
mov
dec
outsb
test
push
fmul
hlt
jle
cs
cmp
push
notl
loopne
into
or
push
cmpsb
scas
inc
ftst
mov
divb
or
roll
sbbl
fs
lods
cltd
push
push
test
arpl
shlb
mov
ret
lods
in
xchg
xchg
or
xchg
adc
push
jl
push
xchg
mov
je
jmp
into
mov
stos
push
push
out
cmpsl
dec
test
fdivrp
or
xor
and
movsb
mov
fdivrl
mov
pop
push
pop
fiadds
adc
in
cmp
inc
into
dec
fistl
cwtd
lods
nop
lahf
mov
into
ja
daa
push
mov
xchg
leave
or
bnd
cld
out
or
inc
repnz
pusha
pop
mov
lcall
sbb
int
hlt
ljmp
ljmp
ret
push
mov
insl
adc
ret
push
imul
cmp
stos
inc
pop
clc
add
insl
daa
adc
enter
les
dec
ss
cld
add
adc
lret
out
add
add
and
test
aaa
rcll
sbb
mov
scas
cmp
adc
jp
sbb
push
gs
pop
and
insb
sub
cwtl
lret
neg
mov
ret
push
adc
outsb
and
out
mov
adcl
pop
lret
pop
stos
pop
push
pop
mov
lcall
add
lock
lods
add
imul
loop
jmp
mov
out
or
cmp
cmp
xchg
pusha
adcl
stos
pusha
push
js
loopne
js
sub
fimuls
fwait
mov
call
add
ret
stos
sahf
sbb
sahf
lcall
roll
mov
cltd
inc
jecxz
jp
push
jl
xor
pop
mov
xor
inc
leave
mov
sbb
cmp
sti
or
pop
mov
adcb
ja
dec
rcll
sub
pop
aaa
mov
and
push
fmulp
jge
jp
scas
xor
fs
dec
cmp
xchg
and
cmpsb
or
pop
mov
cmp
inc
xor
add
push
and
adc
mov
add
push
jl
pop
or
xchg
inc
in
or
push
cltd
jnp
aam
jecxz
and
lods
pop
adc
adc
fistpl
pop
dec
pop
or
jge
pop
cli
cmp
daa
testb
cmp
cmpsl
imul
movsl
mov
lea
push
push
js
or
mov
jg
fs
push
push
inc
jae
pop
and
sbb
mov
mov
pop
fidivrs
or
dec
adc
imul
pop
dec
fldenv
std
ljmp
adc
jmp
mov
cli
cwtl
xor
imul
sub
add
dec
filds
jg
icebp
lahf
jl
jnp
mov
cli
outsb
adc
xchg
push
cld
mov
sub
xchg
jp
jmp
imull
or
xchg
pop
negb
pop
les
mov
pop
push
cli
aam
mov
push
das
add
and
je
inc
push
fsubp
insl
enter
in
inc
cmp
out
xchg
mov
mov
xchg
inc
mov
cs
dec
jmp
push
enter
out
xchg
xchg
jno
outsl
mov
cld
cld
lock
xor
jg
ret
sahf
sub
inc
mov
out
ret
dec
stos
inc
std
cmp
push
scas
lods
mov
jp
imul
cltd
xor
dec
xchg
or
mov
lods
rorb
push
aam
lcall
ficomps
add
out
or
shll
cs
adc
jno
jbe
icebp
fnstcw
repz
mov
jne
mov
out
and
push
mov
cmp
xor
jnp
cmpsb
cmp
mov
icebp
aas
jnp
inc
icebp
cltd
push
pop
ljmp
push
or
adc
cld
push
sub
push
insb
dec
fsqrt
xor
sbb
pop
adc
lods
or
add
or
and
addb
mull
aas
addb
cmp
shrd
xchg
lcall
mov
xchg
push
push
in
xchg
out
outsb
clc
aam
xor
or
pop
add
mov
sub
andl
in
insb
call
xor
mov
fmul
jg
out
inc
mov
mov
or
pop
orb
nop
mov
fiadds
push
push
test
mov
pop
add
loope
inc
fldl
xchg
mov
or
dec
push
in
inc
sar
cmpb
xchg
fimuls
jmp
enter
push
clc
mov
mov
aaa
mov
test
ljmp
fisubrl
out
adc
and
ret
xor
mov
mov
das
or
enter
mov
cld
jae
pop
add
xchg
lahf
bound
mov
inc
add
bts
sbb
out
xchg
xchg
mov
add
sub
int
lahf
dec
test
das
or
mov
jbe
pushf
mov
das
in
mov
std
sub
xchg
push
cmc
call
mov
cs
mov
or
sub
in
sti
loop
xor
ret
cmp
dec
jmp
or
call
sbb
loop
mov
icebp
fwait
hlt
in
inc
out
lods
mov
xchg
mov
and
es
push
js
out
cli
rcrb
in
cmpw
imul
out
push
cmp
inc
outsl
mov
jnp
daa
fdivs
fsubs
fsubs
mov
mov
cmp
add
imul
xchg
xchg
jl
ret
stos
sbb
push
xchg
add
arpl
push
jne
push
sbb
stos
lea
mov
sti
insb
ret
push
push
stos
mov
jb
adcl
mov
sbbb
push
pushf
jg
mov
pushf
cltd
pop
popf
add
notl
lds
fisttpl
in
xchg
lea
xchg
andb
fisttpll
icebp
or
lahf
mov
xlat
jbe
out
sub
decl
repnz
push
lds
mov
stc
or
inc
mov
iret
movsb
or
out
arpl
push
lods
inc
or
scas
outsb
sti
cmp
xor
mov
push
mov
pop
inc
push
jae
push
add
cmp
idivb
xchg
rol
sub
lret
icebp
inc
andl
dec
cmp
mov
psrlq
int3
dec
rclb
test
pop
push
mov
push
into
int3
inc
mov
mov
xchg
movsb
out
subl
mov
addl
enter
add
inc
ds
stc
sbb
sbb
iret
mov
sbb
or
outsb
push
xor
idivl
push
in
pop
inc
fists
loope
mov
cld
fildll
jne
jp
iret
paddd
cmovle
add
insb
cmpsl
test
sub
jb
dec
jmp
jmp
add
lods
pop
adc
pop
add
mov
int
into
push
fcmovu
fmull
bound
mov
and
sarl
add
data16
mov
cmc
iret
idivl
loopne
mov
mov
jecxz
xchg
popa
mov
sti
add
lret
xchg
cld
test
aas
dec
cmp
cmpsl
stos
push
cwtl
xchg
dec
lahf
adc
xchg
mov
sbb
ljmp
stos
ss
xor
test
push
pop
test
imul
mov
outsl
insb
nop
scas
push
stc
mov
jecxz
xchg
out
jns
inc
push
pop
dec
inc
fwait
mov
into
pop
and
mov
adc
adc
sti
push
add
outsb
call
or
jns
xchg
mov
mov
push
and
test
xchg
into
data16
mov
mov
ficoml
imul
sub
pop
add
xor
jge
outsl
aad
add
leave
outsb
cmp
clc
rcrl
testl
mov
js
or
and
jmp
in
jo
jle
sub
cli
in
mov
fnstsw
fucomp
cmp
pop
mov
test
fdivl
add
mov
cmp
push
add
loopne
loopne
mov
in
fistl
xor
push
fmul
and
icebp
insl
xchg
movsl
cmp
mov
mov
pop
lock
lock
cli
xor
jmp
mov
les
shlb
pop
xchg
push
dec
pop
lods
lahf
jae
xor
mov
xchg
test
pop
ljmp
cmpb
jp
stc
mov
cli
loopne
push
test
in
lahf
addl
sub
add
in
std
mov
scas
cltd
scas
out
or
push
nop
ss
sahf
push
add
stos
xor
mov
sub
cmp
dec
lods
jle
dec
mov
ret
or
or
adc
mov
jg
push
daa
test
dec
pop
jmp
adc
add
push
mov
movsl
push
sub
test
lods
ljmp
fs
cmp
bound
lea
push
mov
pop
jns
fwait
shlb
adc
test
xlat
mov
adc
sbb
popf
sti
add
dec
adc
push
mov
int
and
sahf
jne
loope
mov
rcll
jb
sbb
shlb
jl
xchg
fcomi
or
mov
jp
mov
mov
and
aam
pop
mov
sub
xchg
repz
stos
mov
roll
cmpsl
jnp
iret
add
mov
cmp
pop
imul
mov
jb
and
xlat
or
aam
sub
adc
cmp
mov
xchg
jmp
fiadds
in
push
mov
das
sarb
mov
and
popf
filds
xor
pop
dec
imul
jmp
ljmp
ficoml
insb
cmpsb
into
pcmpgtw
and
mov
fldcw
nop
je
ss
fldenv
jb
jle
and
pushf
mov
mov
ja
and
mov
xor
or
adc
sahf
pop
andb
cmp
int3
mov
mov
push
and
mov
and
sub
jge
push
inc
fwait
hlt
adc
imul
jno
out
roll
push
jb
jmp
lods
insb
jecxz
fnstenv
mov
jbe
repz
into
jge
jae
xchg
xor
jo
xchg
jg
jbe
xor
adc
imul
adc
lods
adc
mov
cld
add
adc
sbb
fucom
xor
iret
sub
fstpl
push
imul
loop
push
repnz
and
test
or
in
jo
xor
cmp
iret
mov
dec
rorb
fdivs
aam
psubsb
test
popa
lds
mov
div
das
inc
mov
insl
cs
fdivr
out
sti
and
cs
ljmp
in
jns
jno
mov
push
jecxz
push
jae
lock
mul
mov
aaa
jl
movsb
and
sub
pop
cmpb
mov
inc
gs
sti
jbe
or
jecxz
fistps
sbb
inc
inc
sbb
cmp
mov
cmp
call
jmp
add
jle
sub
mov
mov
aam
sbb
xchg
jecxz
dec
rcrb
mov
sti
test
inc
push
mov
ja
adc
je
loopne
lcall
xor
pop
cmova
xchg
vpackssdw
xor
out
je
dec
arpl
fstps
test
jp
cmp
mov
hlt
loopne
and
dec
mull
inc
popf
mov
mov
sti
pop
jae
inc
ds
or
mov
pop
xchg
shrb
pop
mov
mov
and
mov
jle
adc
push
stc
fwait
test
push
cltd
and
push
pop
jnp
mov
pop
mov
push
or
adc
aaa
pop
fimuls
jl
jecxz
aad
sbb
cmp
mov
movsb
repnz
pushf
lcall
pop
int
mov
xor
xchg
inc
cmp
jle
jns
fs
outsl
pop
jmp
push
push
xchg
or
aas
les
mov
pop
jl
push
mov
shrl
sti
xchg
inc
jno
and
sarb
lock
adc
outsl
mov
insl
and
in
jbe
cwtl
insb
pop
into
adc
cli
mov
into
jg
mov
dec
rcr
jp
daa
scas
jmp
pop
mov
fxch
cld
mov
sbb
add
dec
cs
adc
mov
mov
xor
pop
sbb
or
ss
push
or
mov
idivb
ret
pop
xchg
or
loopne
leave
add
mov
mov
xor
inc
mov
dec
sbb
jns
mull
pop
lahf
xlat
or
mov
jp
lods
addr16
cmpb
jbe
cli
cmp
xor
cmp
sub
cmc
pop
xchg
sub
mov
inc
ja
arpl
mov
push
jl
jp
mov
sub
jmp
insb
inc
add
push
fyl2xp1
xchg
pop
adc
insl
stos
or
sbb
sub
xor
or
push
sbb
aam
pop
lret
xlat
addr16
imul
adc
in
mov
cwtl
enter
repnz
add
jl
sub
popf
mov
xchg
jbe
mov
dec
push
negl
sub
rcr
add
incb
loop
cmpsb
test
ret
cmp
into
pop
dec
sub
push
cmp
dec
jge
dec
mov
jmp
mov
pusha
pop
push
scas
pop
call
mov
mov
adc
cmp
arpl
jo
push
stc
push
xchg
bound
push
mov
popa
mov
fisubs
movd
mov
xlat
adc
sbb
mov
pop
inc
or
or
cltd
inc
mov
popf
inc
lcall
test
fwait
sub
test
or
movsb
and
stc
jb
mov
mov
adc
push
jge
inc
xchg
xchg
shl
jg
mov
pusha
xchg
jne,pt
cmpsb
push
les
inc
and
les
and
and
push
jno
clc
idivl
iret
je
cmp
movsb
jnp
imul
fisubrs
lcall
jle
insl
mov
fnstenv
test
cmpl
push
cmp
aad
sti
les
add
mov
in
adc
mov
mov
cmp
cmp
out
stc
mov
pop
and
adc
stos
mov
and
inc
sbb
shl
mov
test
aad
pop
das
mov
inc
daa
push
push
das
sbb
inc
pusha
cmp
rclb
cmc
pop
out
imul
aad
mov
jae
pop
shlb
mov
xchg
inc
xor
push
add
or
sbb
jno
mov
in
cmp
in
adc
lods
cmp
jp
fs
mov
mov
gs
or
push
jbe
cmp
mov
and
xchg
ds
shl
mov
shl
pop
xor
sarb
inc
cmp
sub
push
shlb
aas
aaa
or
fnsave
sbb
lret
dec
rclb
jb
loope
sub
inc
mov
inc
insl
lcall
in
xchg
ljmp
xor
enter
xor
ret
mov
push
mov
arpl
sbb
xchg
dec
push
pop
mov
jne
xchg
ret
jle
fsubrl
or
xor
or
sbb
fisubs
dec
pop
loopne
hlt
testl
pop
or
mov
lcall
adc
sbb
or
mov
int
fidivrs
lods
stos
mov
xchg
lods
loop
fstpt
sub
add
pop
lods
dec
test
push
inc
push
xchg
test
mov
ja
push
inc
inc
outsl
xchg
outsl
xchg
sbb
pop
lea
fistps
xchg
int
lret
loope
mov
in
pop
mov
and
fcomip
sbb
jnp
stc
mov
loopne
cmp
jns
add
loope
lahf
inc
fnstcw
sbb
add
or
stos
jp
lcall
inc
push
or
outsl
stc
sbb
mov
ds
push
sub
sub
mov
fsubrp
ficompl
js
jno
das
incl
arpl
cmp
mov
lock
push
gs
js
icebp
sahf
pop
filds
dec
mov
pop
xchg
sub
inc
enter
movsb
inc
shlb
dec
xor
dec
jmp
arpl
or
push
xchg
adc
aam
push
insb
das
arpl
lods
add
sar
fmulp
xor
cmp
lock
mov
in
xchg
sub
hlt
ds
push
push
jnp
push
push
gs
andb
movsl
stc
leave
cmp
imul
insb
pop
and
scas
bound
popa
popa
mov
imul
lods
dec
icebp
and
lea
push
mov
mov
outsb
inc
jl
lods
lods
cmp
adc
cmpsl
subl
inc
into
pusha
popa
dec
pushf
or
push
daa
jne
divb
out
imul
mov
jmp
push
or
pushf
adc
add
test
repz
enter
cmpb
les
ljmp
jae
ret
into
loope
push
inc
jns
pop
and
incl
and
sub
sub
or
test
cli
aam
ja
scas
xchg
push
int3
sbb
shl
xor
loop
jle
inc
outsl
or
gs
test
lds
adcb
addr16
mov
movsl
lsl
outsl
adcl
in
adc
fnstcw
lcall
fcmovnb
and
xor
divl
push
vrcpss
movsl
and
mov
mov
dec
xchg
sahf
dec
cmp
sub
enter
cmpsl
jae
test
sub
jno
add
push
pop
jecxz
aam
popf
rcll
dec
nop
cmp
in
seto
dec
imul
push
adc
or
pop
sbb
jmp
sub
jo
into
inc
pop
cmpsb
leave
push
in
jnp
test
addr16
rolb
push
mov
pop
outsl
mov
push
ljmp
push
mov
pop
ljmp
mov
xchg
dec
push
and
loope
ficoml
and
mov
popf
jo
xchg
pop
push
fistpl
nop
jmp
ja
cmp
pop
mov
sti
dec
mov
movsl
push
xchg
mov
test
insb
add
add
cmpsb
std
gs
in
mov
dec
fcompl
int
int3
mov
pushf
cs
push
sub
adc
ds
jge
and
icebp
popf
in
fisttpll
inc
lea
dec
xchg
testl
std
mov
popf
rclb
xchg
jmp
repnz
cmp
icebp
insb
mov
xlat
fwait
enter
lods
mov
fstpt
adc
sub
sub
jb
and
stos
cltd
cmp
les
test
cmp
dec
mov
cmc
sbb
xchg
pop
sub
inc
dec
sbb
or
mov
cmp
sahf
movsl
dec
xchg
aam
inc
movsl
dec
mov
mov
into
pop
mov
push
pop
or
mov
cmp
mov
jl
iret
mov
dec
cli
aad
int
idivl
lcall
adc
and
lods
cmp
mov
add
filds
dec
mov
jbe
insb
stos
aaa
sbb
inc
xchg
fldcw
ss
addl
lock
adc
repnz
xor
dec
lcall
push
sbb
pop
das
jnp
loope
fdivrl
cmpl
cmpsl
xor
jmp
push
mov
mulb
mov
pop
aas
adc
in
mov
lahf
jmp
cmc
outsb
test
fimull
xlat
loopne
movsl
scas
int
data16
fisubrs
mov
es
xor
cmpl
or
push
jecxz
sub
imull
pop
push
dec
push
lds
lods
out
mov
mov
sbb
fs
mov
mov
inc
das
dec
sahf
or
hlt
out
fdiv
and
cwtl
inc
lret
pop
stos
xchg
cmp
js
lcall
mov
pop
data16
ss
mov
add
das
pop
push
push
xor
push
stc
adc
inc
aad
sbb
mov
shlb
out
aas
cmp
fistl
call
fs
adc
or
mov
push
shrb
or
mov
ljmp
loope
out
jae
rolb
push
repnz
mov
lahf
pushf
adc
sti
mov
paddb
int3
fadds
rorl
dec
pop
aaa
cli
ret
popa
rol
out
out
pop
sbb
mov
call
jge
push
pop
test
mov
jns
bound
mov
mov
or
add
ret
pushf
lret
cmp
or
cmp
icebp
xchg
movsb
scas
call
sbb
imul
cmp
jno
shr
jecxz
mov
sub
stos
xor
into
fs
iret
inc
sbb
jno
fwait
inc
cmp
sub
sub
and
push
jp
lock
ret
adc
push
idivb
negb
sbb
xor
jge
pop
mov
cltd
pop
fisubrs
gs
xor
testl
sub
sti
cli
ljmp
ljmp
pop
das
add
shll
lock
sbb
mov
sbb
jnp
pusha
sti
lret
lods
sarb
test
cmpsb
sbb
adcb
pop
lea
xchg
xchg
les
sub
sbb
push
shrl
jns
enter
jne
mov
push
cmp
ljmp
push
repz
outsb
sbb
xchg
loopne
test
pop
xor
xchg
inc
rcr
adc
cmpl
jmp
in
cmp
popa
mov
mov
fimuls
push
cmpsl
jo
push
lods
mov
rclb
in
cld
mov
push
mov
push
test
mov
mov
incb
stos
mov
pop
aam
sbb
dec
cmp
jb
add
or
rclb
push
push
add
add
lods
xchg
xor
out
out
mov
dec
cmp
and
cmp
jno
loopne
les
js
pop
dec
or
je
add
cmp
pop
in
jne
jo
out
xchg
ret
out
inc
repnz
insl
ficomps
jns
push
adc
inc
inc
jle
repz
in
mov
cmp
outsl
int3
push
xlat
mov
mov
and
jne
and
fidivrs
sbb
fcmovbe
enter
adc
imul
mov
pop
or
ljmp
and
xchg
test
cs
mov
pushf
sbb
inc
mov
adc
sti
subb
addb
dec
divw
xlat
jns
add
adc
lret
sarl
jle
rcll
dec
xchg
inc
sti
andl
fdivrl
jge
out
stos
scas
mov
out
mov
or
aam
mov
add
inc
pop
loop
aas
mov
jecxz
int3
lcall
mov
aad
sarl
out
loopne
insl
xor
cli
add
jg
sbb
nop
pop
push
adc
iret
sub
xchg
pop
out
inc
movsb
mov
lcall
add
or
pop
dec
push
and
dec
in
cmc
inc
push
shll
sub
jns
xchg
sbb
push
ja
into
cs
xor
rorb
fwait
mov
mov
dec
xor
or
adc
popw
leave
cli
mov
shl
push
aas
xchg
fisttps
sub
pop
and
xacquire
jmp
fmuls
das
push
pushf
jge
and
sub
lret
ret
and
mov
lcall
das
aam
push
inc
mov
jnp
shrl
shrl
add
mov
daa
sub
push
xchg
pushf
enter
rolb
push
jle
dec
sub
pop
or
dec
jg
in
add
fwait
xchg
pop
mov
pop
push
rolb
jne
adc
test
mov
pop
ljmp
push
push
cltd
push
std
test
jmp
jnp
imul
rcll
mov
cwtl
and
stos
push
xor
movsb
xor
loop
add
sbb
inc
or
je
add
ret
inc
outsl
jge
cmpsl
inc
in
mov
or
imul
sub
daa
mov
sahf
cmpsl
xchg
ljmp
cwtl
push
insb
cmp
dec
jmp
clc
push
pcmpeqd
sub
add
jo
add
out
cwtl
cwtl
jae
adc
fistps
or
add
std
lock
mov
lahf
divb
or
cwtl
jg
loope
nop
call
pop
mov
fbstp
cmp
pop
push
imul
mov
cmp
mov
gs
pop
addl
inc
neg
pop
xor
fcmovbe
or
adc
aas
cmp
jmp
lcall
scas
mov
xchg
jb
jo
div
movsb
lods
lea
pushf
pop
push
dec
jns
push
push
jmp
add
sahf
lcall
sbb
pop
sbb
pop
sub
jg
xorb
and
ja
dec
cmp
adc
das
repnz
xor
iret
cmpsb
xor
cmp
cmp
sahf
dec
pushf
mov
push
add
cs
jl
je
shlb
sub
push
and
xchg
bswap
add
sbb
push
xor
mov
jge
stc
out
ret
xchg
sbb
push
fiadds
icebp
int
push
or
dec
sbb
cmp
cltd
or
mov
out
cmpsb
mov
lret
dec
mov
aam
cmpsb
cs
mov
dec
les
or
jp
push
dec
push
cmpsb
cmp
or
dec
pop
cmpsb
das
mov
mov
mov
imul
mov
mov
mov
jecxz
aas
mov
repnz
mov
rclb
mov
fs
pushf
sub
jae
mov
arpl
rcrb
aas
mov
sbb
les
or
hlt
sub
mov
js
xor
cs
push
dec
out
pop
pop
cltd
jns
jle
sti
jne
movsl
sbb
jmp
scas
mov
fmul
mov
mov
dec
sub
jl
repz
stos
es
push
fmuls
push
bound
insl
fdivrl
pusha
lods
lcall
cs
int
mov
dec
add
cmc
jno
add
lock
shr
add
push
iret
pop
bound
jl
orb
add
jb
push
icebp
lea
outsl
jno
stos
mov
xor
pop
xchg
lahf
fsubs
ljmp
call
pushf
test
dec
xor
add
loopne
jno
xor
inc
sbb
adc
jo
cmp
test
and
push
repz
outsl
add
inc
jmp
jg
jns
dec
push
imul
adc
js
sub
sarb
cmp
aad
xor
inc
int
or
popf
push
sarb
or
adc
push
dec
outsb
adc
lods
out
sub
jp
lods
cmp
shll
sbb
xchg
clc
push
jle
xor
lahf
dec
imul
push
add
sbb
lds
mov
notl
adc
adc
fists
inc
push
es
stc
popa
or
or
cvtpi2ps
pop
cmp
lock
enter
xor
clc
adc
cli
xor
addr16
lods
dec
cltd
jl
adc
daa
fists
sti
hlt
fcompl
xor
sbb
add
add
inc
in
mov
add
push
icebp
popa
mov
mov
addl
std
mov
aad
ret
lret
sub
cld
lret
nop
sub
sbb
int
fcom
adc
hlt
jnp
aad
cltd
stos
out
enter
jmp
cmpsl
pushf
push
and
pop
out
lock
xchg
bnd
stos
in
inc
ds
mov
pop
cmp
das
loop
call
push
xchg
and
mov
outsl
mov
lods
fistpl
sub
inc
negl
mov
jmp
mov
out
testb
daa
dec
jb
or
stos
mov
or
mov
xchg
cmc
lock
cmpsb
les
imul
dec
mul
ret
mov
das
insl
cmp
mov
ss
cmp
addb
xor
inc
in
jmp
mov
std
outsb
mull
jo
outsl
pop
jecxz
jecxz
push
mov
push
popf
psubusw
stc
mov
cmpsb
mov
fwait
lds
xor
inc
xor
mov
stos
push
nop
xor
fbstp
mov
mov
jns
sbbb
mov
cmpsb
ficomps
sub
push
faddp
xchg
or
cmc
std
mov
dec
int3
mov
ss
enter
add
js
xchg
clc
lahf
xchg
lahf
xlat
daa
adc
xchg
xchg
mov
imul
mov
rol
test
aam
and
jmp
shll
es
outsl
outsl
dec
dec
outsl
lock
js
push
push
test
idivb
add
loop
in
cmpsb
xchg
mov
les
int3
xor
pop
mov
cmp
loopne
jl
jecxz
xorl
roll
out
adc
fsubl
pop
inc
mov
fldt
dec
repnz
push
mov
push
pop
adc
mov
pop
xchg
jnp
cmpl
mov
test
inc
sbb
mov
push
inc
sbb
movsl
mov
push
jecxz
sahf
pop
gs
shrb
lea
adc
cmc
out
xor
pop
or
aaa
ret
mov
pop
xorl
inc
pop
rcrb
sbb
fiaddl
js
jbe
rol
jnp
and
jno
mov
in
xchg
and
call
cs
mov
jle
jp
push
daa
and
cltd
xchg
iret
push
jg
fwait
xor
jns
rol
xchg
sbb
xchg
xchg
mov
mov
mov
inc
cmc
sbb
mov
xor
out
and
dec
test
loop
mov
std
negl
add
lds
loop
or
add
jno
lahf
nop
outsb
pop
dec
mov
addr16
adc
mov
les
push
sti
add
lea
fisubl
sbb
leave
mov
sti
add
add
sub
cmpsl
lods
stc
inc
addr16
add
add
dec
xchg
push
mov
call
or
mov
in
std
inc
jae
shrb
add
ljmp
jge
inc
mov
cmp
mov
clc
jle
lret
aaa
add
dec
adc
aam
add
movsbl
lahf
pop
popl
stc
pop
fdivr
mov
in
or
pop
xor
xchg
inc
out
sahf
popa
popf
inc
jb
repz
aad
out
pop
fidivl
cmp
mov
cwtl
add
mov
shlb
mov
adc
xlat
shrb
xor
adc
rol
jns
imul
data16
cmpb
xor
frstor
sbb
xchg
lret
popf
shr
test
xchg
push
mov
mov
inc
sbb
scas
inc
jg
mov
inc
xchg
sbb
jae
jns
fs
lea
fiaddl
inc
cmp
xchg
movsl
dec
inc
loop
repnz
out
inc
pop
pop
ret
add
sbb
jp
or
int3
xor
xchg
mov
scas
fisubrs
and
popl
stc
js
notl
faddp
lea
inc
jle
pop
cmpsb
outsl
jmp
add
xor
out
in
and
iret
je
and
push
ret
pop
push
js
sti
xor
ret
xchg
pushf
lret
fdivs
add
into
ffreep
loopne
jl
lods
rcll
jo
sbb
xchg
nop
push
movsb
pusha
rcr
mov
sbb
sbb
mov
or
add
dec
and
lods
movb
aam
popa
mov
xchg
push
pop
pop
popl
shlb
mov
cmp
fsubrs
jbe
inc
out
sub
pop
inc
xorb
loope
xor
push
xchg
rol
popf
mov
js
cmp
adc
rclb
out
jecxz
and
cmp
sub
fnsave
xor
lock
int
dec
fldenv
shlb
add
shl
push
movsl
outsb
outsb
push
inc
and
push
cmpl
jle
pop
jno
and
xor
shr
mov
xchg
fwait
rorl
cmp
std
mov
xor
add
clc
sub
xchg
xchg
lds
and
push
fldenv
pop
pop
out
js
fcmovbe
sbb
enter
and
xor
mov
pop
xor
addr16
jnp
addl
test
mov
popa
push
in
out
outsb
dec
sub
mov
mov
int3
sarl
out
mov
inc
jns
sahf
stos
aaa
stos
mov
out
jmp
or
lock
imull
sbb
dec
enter
aam
xorb
cld
sarl
xor
scas
or
sbb
push
add
call
lahf
or
add
mov
in
push
sub
enter
ljmp
pop
add
outsl
out
or
or
out
mov
inc
jge
dec
fstp
mov
cs
xchg
cmp
es
stos
and
test
test
dec
cmp
mov
sti
add
xchg
in
inc
push
adc
cmp
push
add
in
cmpsl
jb
fiadds
rcr
subb
lahf
adc
out
add
mov
loope
loop
insl
fs
dec
es
sti
xor
lret
stos
xchg
fnstenv
adc
xchg
gs
lret
xor
add
int
inc
jo
mov
imul
jb
in
enter
xchg
pop
out
pop
xor
clc
cmp
dec
sbb
cmp
repz
dec
mov
nop
ret
xor
aad
cltd
in
scas
sbb
fwait
jge
cltd
xor
cmpsl
cmpsb
mov
das
mov
and
xchg
jecxz
aam
adc
outsl
in
cwtl
out
gs
adc
pop
call
test
aam
sbb
popf
cmp
xorps
gs
mov
lock
aad
inc
test
push
imull
ds
shl
push
xchg
lds
lret
fisubrl
inc
jbe
add
imul
mov
shlb
pop
movl
mov
adc
xlat
out
fs
cltd
and
xchg
add
mov
rcll
test
add
xor
rorb
jp
mov
cld
push
sti
xor
pushf
aas
mov
mov
out
clc
fcoms
adcb
ret
scas
int3
repnz
mov
outsb
or
jae
stos
or
clc
push
add
cmp
adcl
and
or
lods
xorb
lods
out
pop
call
mov
lret
out
push
fistl
jo
jns
popl
sbb
lods
jl
pop
fsubrl
jge
lahf
call
pop
lods
in
mov
lods
adc
ss
xchg
in
out
lea
cs
fidivl
sub
lods
jmp
and
lahf
out
mov
test
adc
inc
repz
xchg
or
sub
push
dec
insl
and
or
push
mov
scas
insb
jno
jl
xor
jbe
and
ljmp
push
mov
hlt
mov
adc
inc
int3
scas
mov
xchg
int
fcmove
sub
je
pop
sti
movsl
inc
push
mov
jecxz
movl
push
mov
insl
jge
push
pop
lcall
push
test
lods
pop
stos
ja
sbb
xor
jle
test
mov
mov
mov
xor
pop
in
and
mov
fidivl
or
stc
in
push
and
dec
leave
dec
push
jge
rcr
push
popa
mov
dec
adc
neg
sub
jae
sub
jno
cld
jle
pop
ss
cmc
sbb
out
jg
pop
repz
fwait
gs
sbb
or
cmc
bound
xor
and
das
cmp
push
sti
cs
insl
lret
jns
inc
sbb
and
xchg
out
add
imul
mov
or
mov
xchg
out
pop
int
adc
add
mov
pop
bound
leave
std
gs
nop
lret
mov
mov
ljmp
jecxz
cmpsl
std
cmp
dec
mov
js
mov
fnstcw
jo
push
sbbl
popf
int
in
lds
xchg
sahf
ja
negl
outsb
mov
push
push
push
mov
adc
xchg
lahf
pop
cmpsb
sub
stos
sbb
aam
into
leave
mov
jmp
sub
cmp
xchg
ficompl
lahf
scas
lea
mov
pop
push
and
outsl
cmp
xchg
fnsave
or
mov
fistpl
repnz
fistpl
xchg
jne
sub
es
pop
call
cwtl
bound
sub
mov
insl
xor
inc
cmpl
ret
xor
ds
std
jns
sbb
lods
mov
or
mov
cmp
shlb
mov
sub
sub
insb
cmp
ss
test
movsl
sub
mov
adc
mov
ljmp
cmp
dec
cmp
cld
mov
inc
lret
addr16
cltd
dec
sub
xchg
jmp
mov
outsl
fnstsw
jl
lret
out
push
mov
leave
lret
dec
push
hlt
xor
push
scas
dec
cmpsl
sub
and
ror
imul
adc
sub
inc
pop
jmp
scas
mov
xchg
mov
pop
scas
or
movb
inc
lahf
jp
xchg
mov
cmp
pop
sarb
sub
dec
mov
adc
std
shll
lock
lea
loopne
dec
mov
dec
xor
xlat
out
and
arpl
imul
call
mov
inc
mov
insl
mov
push
adc
xchg
sti
aad
jg
push
into
inc
mov
add
jb
and
jno
xchg
mov
addr16
add
mov
leave
out
int3
dec
pop
dec
lahf
jmp
mov
xchg
jbe
dec
pop
add
in
xchg
jp
pop
and
cmp
clc
or
outsl
push
cmpsl
jno
std
cmc
int3
add
rcrb
popa
push
clc
imul
add
lds
gs
mov
hlt
xorb
jns
out
inc
mov
loope
lea
fstl
mov
and
sbb
std
loope
lret
xchg
out
es
leave
fsubl
mov
cmc
aad
pop
in
in
inc
hlt
fisttps
and
mov
push
ss
mov
nop
jno
adc
mov
ret
xchg
and
pop
push
stos
repnz
lret
cli
dec
pop
jmp
mov
mov
mov
mov
arpl
push
mov
xchg
lret
cmp
sub
xchg
rcrb
out
and
inc
mov
mov
inc
loope
hlt
mov
cmp
sub
xor
in
cli
fimuls
sbb
jle
push
insb
inc
loopne
and
imul
or
sbb
pop
test
fcompl
fninit
loop
daa
fidivs
cmp
adc
mov
push
mov
addl
add
imul
loope
cwtl
loop
das
test
insl
mov
push
or
adc
mov
xchg
inc
imul
mov
gs
shrl
push
xor
add
cs
jo
xchg
lods
push
seto
scas
sbb
cmp
xlat
and
enter
sub
xor
cmc
xor
mov
sub
leave
dec
cmpsb
push
shrl
data16
mov
pop
fldl
mov
scas
in
inc
mov
les
fidivl
pop
dec
ror
and
in
fxch
scas
pop
pusha
xchg
pop
xor
mov
imul
divb
xor
cmpsb
dec
adc
lahf
popl
sbb
mov
repnz
lcall
or
add
in
into
mov
std
int
stos
fdivr
pop
in
xor
mov
test
sub
pop
jg
push
hlt
hlt
stos
out
mov
dec
xchg
xchg
mov
sbb
xor
ret
outsl
mov
out
cmp
jae
shl
fsqrt
aam
mov
test
pop
and
fwait
mov
xchg
mov
push
pusha
add
inc
xchg
notb
xor
loope
add
lret
sbb
and
roll
inc
call
fstl
out
mov
push
or
cmp
or
data16
xlat
xchg
in
test
mov
dec
dec
mov
adc
push
cmp
rcrl
enter
push
iret
lahf
sub
aam
icebp
test
fwait
sbb
adc
imul
jo
adc
stos
cmpsl
shll
or
xchg
movsb
xchg
cld
orl
repnz
dec
pop
inc
adc
xor
inc
clc
fwait
jp
push
mov
je
fs
pop
and
inc
or
dec
mov
divl
adc
iret
dec
aas
lcall
push
arpl
xlat
iret
aad
inc
insl
add
mov
jnp
sub
xor
mov
fbstp
pop
inc
fbstp
push
jmp
repz
jbe
das
add
hlt
xchg
push
pop
mov
dec
xor
xchg
sahf
dec
pop
xchg
dec
xchg
mov
adc
jmp
sub
jbe
test
push
push
and
loop
fdivrl
lret
movsb
stos
mov
jns
ja
mov
mov
pusha
pusha
cs
xorl
push
test
int
imul
test
push
test
jnp
adc
push
rcr
sbb
cmpsb
adc
roll
inc
mov
aas
iret
jg
adc
in
sbb
cmc
stos
cli
inc
sbb
enter
xor
xor
dec
cmp
push
dec
insl
in
inc
xchg
mov
lret
ret
out
aam
out
xor
push
xor
mov
das
aas
pop
lods
cli
cltd
push
cltd
arpl
test
add
inc
or
and
les
clc
roll
push
pop
loop
xor
cmp
dec
push
das
lret
push
adc
ds
and
shrl
fstpt
xchg
mov
fdiv
sub
cmp
sti
stc
or
into
mov
test
inc
cld
cmpl
or
jbe
and
in
adc
sub
add
mov
mov
lret
xor
sub
cmpsl
fwait
push
out
mov
adc
ror
push
or
sub
js
fwait
sub
fcoml
jno
leave
adc
sahf
test
shlb
mov
push
insb
loope
fnstsw
and
rcrl
sahf
ja
lds
clc
call
pusha
mov
in
xor
add
pusha
dec
cmp
mov
xorl
mov
push
sbb
and
out
jge
mov
inc
mov
outsl
bnd
imul
fdivrp
dec
inc
jnp
cli
mov
dec
add
shrl
fildl
mov
idivb
mov
jne
adc
xchg
fildll
fs
pop
jge
jo
xchg
das
mov
ret
imul
arpl
out
rclb
mov
mov
cmp
test
fisttpll
repz
test
cmc
jp
jae
icebp
scas
rcrl
jle
cmpsl
lcall
xchg
and
bound
mov
loopne
dec
mov
out
icebp
stos
xchg
inc
fs
add
movsb
jecxz
mov
jo
lea
iret
popf
loope
outsb
cmc
add
hlt
aad
push
inc
cmpsb
dec
ja
imul
stos
and
loopne
js
jle
movsl
nop
pop
fisubs
cmp
sub
mov
jbe
push
cmpxchg
stos
xchg
jle
repz
int3
in
sub
stos
cmpsb
pop
rorb
sub
jge
lea
inc
xor
addr16
push
dec
clc
outsl
xchg
cmp
jo
jmp
fisubs
mov
jmp
jns
je
push
and
ret
mov
cmp
sub
cwtl
push
or
ds
and
not
push
xchg
scas
xor
adc
xchg
xchg
jp
dec
xchg
dec
cmp
gs
and
andb
ficoms
sbb
iret
inc
out
je
cmpsb
in
iret
int
jle
ds
fadd
in
add
insl
in
sub
xor
xor
lcall
lods
fucomip
rcr
fldenv
loop
inc
mov
jae
fs
je
cmp
or
jbe
in
mov
xlat
pop
xchg
hlt
push
xchg
lcall
js
mov
or
adc
mov
add
and
sub
outsb
lods
jecxz
push
test
mov
and
dec
dec
clc
out
pop
stc
hlt
out
inc
jae
fdivp
enter
xchg
divl
push
pop
in
mov
das
andb
cmp
mov
dec
ror
jg
cmp
adc
test
jmp
pop
sub
pop
movsb
inc
out
mov
mov
mov
add
cmp
add
lret
jbe
mov
dec
or
mov
or
push
xchg
fs
pop
mov
outsl
xchg
fldl2t
in
mov
cmpsl
cmp
and
inc
pop
jl
repz
out
rolb
test
insb
movsl
cmp
jecxz
push
sbb
in
push
jb
insb
add
call
mov
jae
add
sbb
jns
add
push
movl
mov
or
push
mov
sub
repnz
sti
testb
mov
mov
data16
sarb
mov
cmp
and
push
xchg
ret
out
jge
jo
push
mov
lret
fdivrp
mov
hlt
imul
pop
push
popa
sahf
in
in
sub
jg
xor
imul
jnp
mov
adc
pop
mov
daa
mov
mov
push
mov
push
jmp
add
or
inc
and
fistl
js
iret
xor
xor
mov
pop
loopne
test
add
mov
fistpll
and
jne
hlt
bound
inc
mov
sub
dec
mov
ficomps
ljmp
sarb
in
fwait
sub
iret
lcall
add
clc
jp
inc
pop
aaa
fsubrl
out
cmp
or
or
faddl
stos
daa
mov
or
int
sbb
loopne
jg
cmpsl
pop
push
loopne
add
sbb
pop
mov
loop
adc
dec
or
stos
push
pusha
les
cmp
bswap
cmpsl
pop
add
insl
jle
cmp
fisttpll
sub
sub
adc
fnstenv
adcl
xchg
stos
dec
rcrb
jmp
xchg
sbb
push
xchg
pop
xor
into
pop
sub
sub
and
ret
rcrb
jnp
adc
sub
sbb
repz
adc
shl
pop
dec
jns
das
xchg
dec
push
scas
xor
leave
orw
loop
ja
outsb
xor
dec
cmp
insl
cmp
fnsave
mov
push
fwait
jno
mov
pop
pop
adc
outsb
test
dec
or
cwtl
push
movl
lcall
and
jnp
repnz
mov
int
retw
movsl
sbb
sbbb
cmp
inc
rcrl
and
repz
push
xchg
push
push
sub
call
inc
jbe
or
push
insl
ret
push
sbb
repz
arpl
test
mov
push
sbb
test
sub
fcmovnb
mov
jns
jg
mov
jge,pt
ja
push
adc
and
mov
sbb
inc
psraw
std
test
xor
dec
sub
gs
lock
mov
imul
loop
popa
mov
iret
xor
sbb
sbb
mov
cmp
mov
rsm
in
push
and
jnp
inc
popa
je
mov
mov
sub
aad
inc
inc
xchg
mov
fisttpl
cwtl
repnz
add
mov
sbb
scas
push
bound
or
arpl
mov
and
ffree
mov
mov
scas
sbb
and
fildl
push
sub
pop
mov
aas
sbb
out
add
jne
clc
xchg
jmp
add
lcall
sub
pop
push
outsb
jno
test
xchg
popf
into
outsb
fwait
sub
mov
clc
dec
pop
sbb
jmp
cmpsl
rorb
or
fisubl
int
stos
call
adc
popa
ss
cmp
dec
fst
icebp
xchg
popf
or
call
jge
mov
adc
int3
inc
pop
sti
mov
sub
adc
jmp
dec
test
aam
xchg
sbb
pop
jo
pusha
pop
mov
pop
jecxz
add
or
fisttpll
es
fwait
push
mov
ret
shl
sbb
out
stos
xor
aaa
lahf
fcmovu
out
mov
mov
adc
popf
fdivp
mov
lret
out
in
adc
sub
gs
and
out
fwait
sbb
pop
inc
fnstcw
push
cltd
push
or
or
push
xchg
and
lock
je
xor
stc
int
mov
pop
int3
test
out
add
push
lahf
push
push
jb
add
test
mov
adc
dec
out
sbb
push
stc
xor
push
cmpsl
fistpl
adc
sub
push
add
insl
jo
jne
mov
xor
push
fidivs
pop
pop
bound
jns
mov
or
lods
fsub
pop
inc
aaa
push
rclb
jp
rolb
inc
shlb
cmp
push
cmp
or
mov
mov
cmp
xchg
push
pushf
hlt
jae
sub
enter
scas
insb
pop
adc
dec
push
movsl
adc
popa
xchg
dec
cmp
aas
mov
shlb
xchg
add
gs
adc
imul
push
xor
xchg
inc
test
pushf
popa
or
jge
add
mov
mov
call
std
insb
pop
cmp
inc
mov
movsl
xchg
test
add
mov
xor
lcall
add
or
sbb
dec
jl
mov
lret
in
xor
mov
scas
mov
aam
hlt
cmpsl
dec
add
ds
fisubl
jle
inc
aam
inc
add
int
add
js
ficomps
push
mov
ja
lret
xlat
lods
std
int3
loopne
in
mov
sbb
stc
xchg
xchg
push
mov
in
push
push
mov
xchg
jecxz
jp
insl
sub
cmc
outsb
fsubl
test
pusha
roll
sub
cwtl
add
push
movsb
add
shrb
rol
in
and
es
adc
mov
or
popa
mov
dec
outsl
lret
dec
setns
ret
xor
arpl
addr16
testb
jne
ljmp
fadds
sub
movl
xor
ror
pop
sbb
pusha
inc
repz
sub
push
shrl
je
inc
jb
dec
inc
cwtl
sub
cltd
insb
jnp
jae
aas
mov
push
mov
adc
jmp
in
inc
pop
cli
aad
sar
fstpl
movl
cmp
sbb
shrl
mov
xor
repnz
push
lea
and
cmp
push
and
ret
or
jmp
xor
sbb
jae
pop
std
addb
iret
xorl
into
popl
psrlw
enter
sahf
repnz
jmp
fst
or
lock
stos
lahf
ss
idivb
push
xor
movsb
cld
jmp
ss
xchg
xchg
ficomps
mov
and
lret
inc
jae
icebp
into
pop
jmp
adc
xor
scas
mov
cltd
pop
rcrl
jge
push
gs
lret
cmovae
ss
out
inc
mov
fwait
es
sbb
clc
add
inc
in
xchg
stos
in
push
mov
jae
mov
loop
and
sbb
notl
hlt
dec
xor
lock
mov
repz
ss
cs
sub
mov
int3
repz
add
inc
aas
push
mov
fs
dec
jo
out
repz
cli
add
pop
xor
mov
aas
sub
repz
mov
xlat
fsubrs
jne
mov
xor
adc
mov
cmc
push
mov
pop
cwtl
add
lret
xchg
mov
dec
push
pop
pop
or
cmp
pop
jno
mov
mov
dec
cmc
xchg
jns
cmp
xor
rol
subl
inc
lock
dec
mov
pop
mov
mov
lods
fwait
sahf
xchg
xor
add
lret
mov
xor
dec
add
sbb
rolb
jmp
and
in
fmull
std
mov
dec
cmovne
addr16
push
xchg
rcrb
or
mov
aaa
pop
fwait
arpl
shlb
sub
xchg
xchg
push
notl
or
lret
sbb
push
push
jns
adc
stos
pop
inc
mov
push
cmc
sbbl
fbld
decb
and
add
int
mov
xor
pop
in
push
pop
cmp
add
jge
hlt
xorl
stos
pop
bound
test
pop
ljmp
or
inc
dec
jo
hlt
or
lods
rcll
dec
imul
iret
shl
jl
ljmp
mov
sbb
jbe
cmp
mov
push
sbb
cmp
out
and
mov
mov
fs
xlat
movsl
paddsb
push
jge
nop
cld
lods
sbb
adc
push
les
pop
mov
dec
into
arpl
fstpt
mov
push
fwait
movb
fwait
add
or
dec
inc
xor
out
scas
mov
fstpt
mov
dec
or
rcr
sub
loopne
sbb
int
pop
pusha
sbbb
cmp
scas
and
jecxz
rcll
mov
xchg
sub
and
je
icebp
and
in
dec
pop
repnz
mov
push
scas
dec
stos
push
cmp
pop
sub
loop
jne
pop
out
mov
jg
or
cmp
fs
jbe
jmp
fsubrl
mov
or
xchg
stc
or
out
loopne
inc
inc
mov
and
ss
inc
cmp
aaa
leave
add
sbb
sarl
int
jmp
test
fisttps
lds
mov
imul
lock
xchg
mov
lcall
xor
ficomps
cmp
jecxz
daa
inc
xchg
shl
popf
ss
and
mov
sbbl
lahf
cmp
inc
push
ss
and
cmp
jmp
xor
cmp
and
push
jno
insl
cmp
dec
test
add
sbb
xlat
pop
push
adc
xchg
cmp
test
in
inc
inc
add
dec
xchg
add
lret
sbb
push
mov
or
pop
hlt
jb
out
cwtl
pop
leave
js
fisttps
cmpsl
mov
jl
icebp
inc
inc
bound
pop
mov
cmp
push
push
test
inc
ds
push
insl
imul
repz
pop
les
fnsave
sub
sub
jne
scas
pop
lods
pop
mov
orb
xor
je
jnp
xchg
ds
bound
jl
add
gs
sarl
decl
jg
movl
shl
int
scas
imul
jl
fmulp
jg
or
sti
push
xor
mov
test
xor
cmpsl
push
push
mov
and
fwait
in
fs
pushf
jle
addr16
jmp
dec
add
inc
xchg
adcl
dec
dec
or
test
bound
mov
insl
lea
add
shlb
ss
jmp
out
jb
pop
enter
rcrb
mov
mov
in
cmp
sbb
lods
xorb
xchg
test
and
movsb
sti
push
dec
sbb
nop
or
inc
add
mov
cmp
cmp
data16
test
push
cwtl
sub
notb
push
mov
push
int
xchg
sub
jnp
imul
mov
push
std
fisubs
rclb
xchg
fisttpl
neg
fildl
cmpsl
cli
pop
vmwrite
xorl
sub
movsl
push
ret
daa
js
loopne
pop
adc
cmpsl
push
push
mul
nop
cmp
lods
add
jmp
inc
int3
adc
ret
fwait
sub
stos
out
sbb
sub
sbb
mov
cmp
jp
and
leave
data16
fimull
mov
pop
mov
nop
lods
or
aad
mov
mov
mov
fsubp
das
sub
sti
hlt
cmp
pop
jns
in
push
dec
jecxz
xor
xor
push
bound
mov
in
pushf
popa
lods
sbb
lret
jle
and
mov
leave
pop
fidivrs
or
mov
cmpsl
dec
push
push
mov
sub
loope
scas
aam
mov
jl
in
cld
stc
insl
add
adc
fisttpll
dec
mov
inc
outsb
fcmovu
push
fs
inc
xorl
aas
test
loopne
jnp
sub
pop
cmpsb
jecxz
mov
pop
cmp
cmp
pop
dec
xchg
cmp
rorb
and
js
mov
pop
jae
stc
mov
mov
je
outsl
in
in
rolb
adc
subb
or
push
mov
adc
out
movl
fwait
es
imul
xchg
and
mov
adc
fists
aam
xor
cli
cmpsl
xlat
arpl
and
je
movsb
loope
sub
movl
into
xchg
fwait
xor
jb
fmuls
lods
js
stc
mov
cmp
aad
je
xchg
push
push
stos
pop
add
lret
mov
in
fdivl
loope
jge
mov
adc
push
bound
int
sti
or
or
in
jne
pop
xchg
btr
or
stos
mov
inc
ss
addb
mov
mov
mov
lcall
imul
push
adc
mov
fs
lds
shrl
stos
mov
fwait
sti
mov
pop
iret
mov
pop
push
xchg
dec
pop
stos
push
mov
fildl
mov
push
or
shrb
sti
scas
loop
dec
lods
mov
subl
adc
jp
add
cld
mov
push
and
andl
inc
repnz
negl
cli
loope
jno
mov
cmpsb
add
mov
inc
aaa
xchg
aas
addr16
into
xor
jp
push
cwtl
and
negb
imul
fidivl
ds
mov
scas
mov
and
fadds
int3
mov
mov
dec
inc
mov
aam
mov
pop
or
daa
iret
mov
or
xchg
push
lock
arpl
xchg
jbe
loope
push
clc
addl
shll
fcmovb
adc
jb
subl
cmpsl
pushf
and
cmpsb
insl
mov
dec
adc
xor
test
push
cmp
ret
movsb
imul
cmpsb
ljmp
and
into
mov
movsb
push
fstl
fisttpll
in
mov
fiadds
roll
mov
xor
nop
jle
rol
inc
orl
pop
adc
rolb
imul
lret
sbb
push
mov
sbb
add
xor
xchg
out
push
xchg
push
pusha
xchg
push
stc
pop
mov
loop
and
mov
in
cmp
gs
or
aaa
dec
cmp
xchg
mov
cld
mov
jnp
and
xor
fmull
dec
mov
xchg
fstl
adc
cltd
add
sub
jno
jae
jae
sub
idivb
pop
movsl
stos
xchg
test
pop
cmp
movsl
loopne
sub
loopne
pushf
jne
sbb
push
or
mov
daa
or
jg
inc
lods
jmp
add
imul
out
or
subl
and
and
mov
subb
pop
inc
xor
mov
insl
xchg
add
cld
xor
jecxz
ss
mov
shlb
stos
mov
jns
or
ja
in
lods
and
or
cs
mov
jecxz
ja
aam
test
fadds
pop
xchg
mov
jns
in
pop
dec
lret
bound
movsb
or
repz
or
or
stc
out
add
push
nopl
or
push
mov
ljmp
stos
push
sub
add
sbb
pop
je
push
or
mov
fsub
jecxz
sbb
add
jle
cs
sti
dec
mov
push
movsb
mov
mov
dec
xchg
outsl
test
xchg
inc
or
xchg
call
push
cmpsb
hlt
mov
add
movl
or
dec
sub
imul
popf
lret
pushf
mov
mov
ds
mov
jns
test
and
fld
and
xchg
pop
jae
xchg
imull
shrl
leave
rclb
ret
out
jmp
jnp
fimull
xchg
sahf
inc
icebp
xchg
fmull
dec
es
inc
test
mov
xchg
add
xchg
test
inc
loope
push
aam
rcll
imul
add
aam
mov
xorb
gs
stos
cmp
mov
xchg
sbb
push
pop
xchg
lcall
or
movsb
sahf
movsl
inc
mov
push
fnstenv
pop
and
lcall
lret
int
mov
aad
outsl
lds
mov
dec
mov
mov
inc
incl
nop
ds
daa
xchg
ffreep
ret
dec
out
ret
pop
ret
addr16
jno
jle
push
scas
rorl
jp
out
arpl
hlt
jle
ret
adc
cmp
add
in
jg
or
and
mov
aaa
xor
xchg
inc
outsl
dec
mov
gs
lock
mov
out
xor
push
dec
pop
leave
xor
inc
in
repnz
orl
pop
mov
and
mov
inc
ljmp
xor
add
xor
mov
loope
xor
test
sub
orb
push
mov
push
jnp
dec
stc
add
pop
dec
addb
hlt
sub
insl
les
lret
push
imul
pop
fsts
jl
jmp
lds
loopne
and
lcall
pop
aaa
iret
sub
adc
mov
enter
fstl
or
pop
add
jne
jne
sub
mov
stc
hlt
pop
es
data16
dec
ficoms
pop
test
cli
das
xchg
xor
setne
push
divl
es
leave
xchg
push
int
into
jnp
cmpsl
cltd
clc
mull
pusha
mov
push
mov
jecxz
outsb
dec
xchg
cs
add
insb
ljmp
ficoms
jae
cmp
mov
popa
and
int
test
out
xor
push
roll
mov
mov
xchg
mov
adc
js
sahf
push
sub
xor
sub
xor
inc
insb
pop
in
fiadds
pop
movq
loop
sub
inc
cmp
dec
rorl
orl
pushf
fisttpl
aam
cmpsb
push
ror
adc
aam
sub
aad
imul
cmp
xchg
mov
ljmp
test
and
mov
mov
sbb
dec
mov
push
sub
stos
lea
lods
sub
addr16
adc
push
jle
fcoms
mov
inc
push
in
loop
repz
mov
call
xchg
dec
shrb
outsb
jge
inc
jl
mov
pop
in
lock
sbb
and
xchg
sbb
rcr
add
lahf
push
add
fisubl
mov
std
loope
xor
dec
aam
mov
add
dec
pop
pop
cmp
pop
je
xor
jmp
ret
shr
data16
out
or
aas
cmpl
push
cli
jbe
push
test
int
jp
and
mov
xchg
jp
divl
and
jne
std
add
add
outsl
xchg
adc
sbb
cmpsl
sbb
mov
js
aaa
or
jo
testb
les
adc
push
jecxz
sbb
mov
mov
cmpsl
sbb
mov
arpl
mov
xorl
std
out
stos
mov
sub
shrl
cld
cld
mov
pop
sub
sbb
in
movsb
aam
inc
andl
add
xor
push
stc
aad
shrb
mov
js
rcrb
lock
inc
loop
xchg
mov
add
fstps
movsb
xchg
inc
dec
imul
mov
fisttpll
imul
add
xchg
add
in
das
push
cmc
or
and
bound
stc
hlt
push
pop
cltd
test
xchg
pop
jne
or
jle
fmuls
leavew
jno
das
sahf
adc
inc
mov
adc
ss
dec
pop
pop
icebp
dec
push
sub
bound
cwtl
iret
xchg
dec
add
jecxz
std
sbb
jae
pop
pop
gs
and
je
in
enter
jl
cmp
jmp
dec
add
call
sti
mov
xchg
insb
xor
int
dec
pushf
and
movsb
jle
rorl
repnz
jno
add
mov
ds
mov
sub
or
call
mov
inc
cmp
fnstsw
push
rolb
mov
aas
jmp
adc
sarl
jle
lods
pop
pop
sahf
add
push
push
loope
mov
insl
sbb
repz
mov
dec
outsb
stc
iret
push
stos
jl
sbb
pusha
aas
rcrb
ds
sar
xchg
mov
outsl
pop
push
pop
mov
sbb
shl
movsb
mov
xchg
cltd
rcrl
cmp
xor
stos
xlat
sbb
fstpl
hlt
jl
mov
jp
int
enter
pop
jecxz
outsb
add
cli
inc
cmc
or
out
loop
adc
cltd
jl
call
pop
or
cltd
ss
lds
adc
xchg
pop
xor
in
mov
ret
aas
fsubs
mov
hlt
fcomps
mov
imul
adc
jle
adc
enter
dec
scas
mov
std
add
in
stos
and
mov
cmp
nop
xor
movsb
xchg
adc
mov
and
leave
sub
jo
pop
ret
test
push
movsl
add
push
pop
mov
mov
stos
cmp
movb
mov
sarb
pusha
dec
fxsave
sarb
and
and
ljmp
jecxz
pop
in
add
xchg
xchg
in
pop
pop
push
fisubrl
jae
pushf
or
mov
mov
addr16
test
bound
mov
push
xchg
iret
cmpsb
fcomip
sub
pop
ficomps
sbb
in
lds
adc
cli
imul
mov
push
mov
mov
das
stc
lcall
or
inc
int
out
or
mov
mov
shl
pop
insl
push
jge
insl
inc
cmp
out
cli
inc
xor
mov
in
adc
mov
ret
mov
aaa
push
leave
pop
ffree
enter
sbb
lods
and
mov
and
test
mov
sub
jecxz
loop
inc
cld
std
mov
hlt
push
sahf
sub
fisttpl
sub
imul
xchg
rcrl
shlb
mov
mov
push
std
xor
nop
test
int3
insb
add
int
sar
xchg
inc
pushf
arpl
pop
cs
rclb
out
xor
rcll
jb
outsl
adc
testb
aaa
push
xchg
mov
mov
cmc
gs
xchg
pusha
pop
lods
scas
into
stos
hlt
and
sub
mov
pushf
xchg
gs
es
or
xor
xchg
jg
test
inc
sahf
inc
and
or
aad
xchg
out
and
imul
xor
das
sbb
fdivl
mov
stos
mov
aas
fdivrs
xchg
aaa
pop
sar
mov
lahf
dec
push
sub
inc
dec
test
dec
push
inc
insl
inc
xchg
into
mov
mov
sbbb
or
ficoml
js
popf
mov
out
jae
stc
mov
jl
mov
negb
cmc
sub
mov
jbe
fdivrs
mov
xor
fs
push
dec
dec
mov
mov
ficoml
insl
cmp
sub
frstors
and
movsb
aam
push
lods
push
bound
push
add
pop
es
cwtl
cmp
lcall
test
into
insb
insb
xchg
lods
add
or
push
fcoms
and
or
lret
push
iret
adc
inc
xlat
xchg
mov
push
pop
lahf
mov
sti
sub
stos
pop
pop
or
out
cmpsl
xchg
fwait
les
fcoml
notb
movsb
xchg
fstpt
cltd
jno
arpl
into
lahf
and
add
mov
cld
idivb
xor
jb
jnp
or
add
xchg
sti
dec
repz
dec
daa
lea
adc
in
xchg
popf
repnz
popa
jg
sbb
mov
shrl
xchg
mov
fldl
lods
mov
pop
aam
aad
sahf
sbb
test
or
cmpl
pop
sarl
aam
mov
pop
adc
add
std
mov
int
mov
in
shll
insl
xchg
sbb
imul
pop
or
pushf
dec
shll
aam
lcall
add
stos
insl
mov
scas
loop
bound
lods
cwtl
push
add
pop
shll
sub
imull
popf
mov
lods
or
iret
out
mov
pushf
mov
fldlg2
sub
xchg
pushf
movsb
jae
movsl
push
and
mov
dec
adc
in
push
pop
mov
mov
mov
loop
gs
ljmp
mov
push
aad
pop
leave
int3
mov
fdivl
repnz
or
lahf
aad
mov
pop
sar
and
call
sbb
mov
loopne
sahf
pop
aas
adc
nop
dec
test
mul
fnstcw
pop
test
int
enter
add
dec
mov
adc
jnp
aad
pop
add
mov
aaa
add
jge
out
dec
xchg
xor
sub
test
add
mov
add
jnp
and
pop
repnz
push
pop
nop
xchg
push
test
xchg
jb
pop
mov
nop
push
push
addr16
test
inc
gs
sub
and
xor
faddl
nop
faddl
insl
and
sub
ljmp
ss
fstpl
push
sbb
test
mov
dec
out
push
xlat
je
or
inc
jecxz
mov
divl
rolb
push
out
or
hlt
ficoms
dec
icebp
ret
xorl
gs
jle
outsb
or
imul
add
mov
outsl
mov
in
jecxz
pop
push
push
aaa
lret
rorb
mov
pop
stos
cvttps2pi
imull
xchg
and
sahf
sub
insb
mov
into
xchg
daa
xchg
add
xchg
pop
jne
xchg
inc
add
inc
repnz
clc
sbb
pop
incb
ja
jae
sarb
test
push
inc
mov
stos
int
cmpsl
daa
xor
aaa
mov
pop
in
daa
xlat
hlt
jmp
fwait
fwait
out
pop
pop
adc
nop
in
jp
add
jge
roll
lahf
scas
push
sbb
dec
lods
dec
xor
int3
dec
stos
ds
in
xor
sub
xlat
in
adc
push
sub
mov
pavgb
xlat
mov
bound
cmpsl
pop
ret
mov
and
dec
jbe
data16
lods
je
dec
mov
cli
jmp
dec
orb
pusha
mov
mov
insb
mov
xor
scas
je
add
pusha
ret
mov
sbb
enter
xacquire
iret
jnp
test
scas
jbe
pop
fildl
lock
enter
mov
fbld
sbb
jae
es
cmp
cmp
dec
lock
jbe
enter
sbb
int
mov
jle
jecxz
mov
sbb
mov
or
mov
fwait
cmpsl
push
and
mov
popf
pop
ljmp
mov
repz
pop
sbb
stos
lret
mov
fstps
mov
mov
rcll
xor
rcrb
std
and
ficomps
pop
xlat
fs
stos
pop
gs
adc
jo
movsb
dec
outsb
or
pop
mov
sub
xor
mov
lea
add
xor
mov
in
inc
jp
xor
mov
icebp
mov
inc
sub
fdivl
call
mov
pop
xchg
roll
sahf
mov
lea
and
sahf
inc
xchg
int3
push
es
int
cld
pushf
and
pop
xchg
mov
or
adc
cmpsl
and
icebp
out
cmpsb
cmp
push
sub
pop
popf
jnp
mov
insb
sarl
daa
and
je
test
je
es
lds
or
popf
adc
inc
outsb
sub
je
ret
sbb
cmp
imul
jle
mov
xor
int3
add
jp
jecxz
ja
or
sbbl
mov
add
pusha
jle
or
lret
fs
xor
xchg
xchg
and
xchg
xlat
addr16
movsl
fimuls
jns
decl
scas
sbb
sub
sbb
jbe
push
arpl
or
xor
add
pushf
push
imul
and
sbb
jp
and
sbb
xor
mov
jge
idivl
mov
jbe
xorb
mov
sbb
aam
jmp
addb
fstps
mov
cmp
inc
mov
push
adc
pminsw
jp
into
pop
std
testl
pop
inc
push
cmc
add
xlat
jo
jae
lods
in
mov
test
inc
mov
xchg
adc
test
push
push
cli
push
push
push
jecxz
dec
jmp
inc
dec
mov
stos
cmp
outsl
mov
scas
mov
mov
hlt
push
xchg
subb
fs
pop
pop
push
subl
dec
pop
xchg
les
cmpsb
mov
sbb
push
aam
pushf
pop
arpl
repnz
jmp
jae
or
cltd
addr16
pop
repnz
jl
xlat
push
mov
mov
repz
mov
jl
cmp
sub
sbb
xor
ja
add
ret
and
cmp
stos
lods
jl
gs
push
pop
mov
dec
stos
xchg
pushf
lret
inc
scas
xchg
sub
and
cli
sbb
std
sub
test
mov
sbb
jo
xor
dec
sbb
pop
pusha
std
fisttps
xchg
mov
nop
sbb
sbb
or
fiaddl
sub
inc
cmp
sbb
and
xor
ret
aam
sbbb
mov
lds
repnz
rcrb
cmp
andb
cmp
or
sub
mov
jb
icebp
push
lret
inc
movsl
int
repnz
adcl
nop
xlat
add
xlat
popa
jno
dec
adcl
jp
fsubr
mov
add
jl
pop
pop
imull
lock
fdivr
dec
sub
ss
das
movsb
push
lock
adc
xchg
js
xchg
icebp
stos
loop
add
xchg
inc
push
je
add
popa
push
push
ss
and
dec
into
mov
aaa
sub
sub
pop
leave
mov
adc
jno
jle
ljmp
out
xchg
xlat
mov
lret
sbb
fwait
data16
dec
mov
mov
pop
lret
add
sub
dec
nop
push
addr16
adc
mov
ds
aas
xor
fisubrl
mov
outsl
jns
scas
ret
jp
fsubrs
dec
and
sti
call
adc
and
outsb
push
mov
jb
mov
or
xchg
pop
cmp
pop
icebp
mov
aam
dec
pusha
jns
int3
sti
and
loopne
rep
nop
xchg
popa
test
pop
fsubrs
or
xor
sahf
dec
sub
lcall
xor
push
mov
sbb
fidivs
xchg
out
adc
adc
inc
jmp
aaa
inc
add
pop
scas
sbb
mov
fs
int3
inc
mov
leave
inc
ss
push
sbbl
dec
cmp
call
sti
or
js
vpandn
gs
jecxz
sub
inc
ds
mov
mov
pop
fmul
xchg
sub
cmp
push
sbb
pop
xchg
lock
pminsw
loopne
outsb
add
sub
xlat
lods
loope
lcall
dec
fidivs
mov
push
cs
push
sub
daa
ds
add
imul
lcall
push
movsb
xlat
jb
ss
cmp
orl
sbb
xor
inc
iret
lahf
ret
push
nop
adcl
mov
lahf
pop
lds
mov
jle
aaa
mov
out
mov
std
mov
jp
cmp
insb
je
adc
jmp
movsb
adcl
jae
mov
push
and
sarb
mov
pop
mov
ss
xor
add
enter
sub
sarb
das
push
sub
test
pushf
lret
inc
sub
fcomp
mov
jmp
outsl
xlat
sub
and
repnz
imul
jb
iret
fstpt
shll
or
inc
addr16
push
xor
imul
lahf
rcr
imul
js
int
jge
add
in
shll
aaa
clc
ror
lods
push
push
lock
mov
pop
lods
mov
jmp
mov
scas
xchg
lds
jp
jle
fwait
xchg
jmp
out
or
lahf
cmp
and
scas
icebp
adc
andb
sub
nop
shrb
jg
xor
and
xchg
mov
jle
mov
fnstenv
js
jp
stos
es
ja
fstl
push
pushf
dec
mov
arpl
pop
inc
inc
imul
cli
pop
pop
xor
fs
jge
push
add
arpl
repnz
cld
fsubl
inc
mulb
push
orb
adc
out
push
jae
inc
outsl
or
lret
cltd
psllw
cwtl
call
test
shl
mov
push
xchg
stc
jns
mov
sti
outsb
add
pop
daa
cld
gs
xchg
adc
inc
test
jb
push
jne
hlt
mov
sub
mov
imul
pop
mov
pop
mov
sub
mov
out
mov
jle
ljmp
test
cs
mov
out
addr16
fists
mov
xchg
mov
xchg
jno
popf
das
loopne
fwait
add
xchg
adc
cmp
adc
xorb
lret
xchg
stc
arpl
arpl
cli
jecxz
sbb
movsb
mov
cltd
or
scas
adc
cmc
xchg
jno
xor
inc
push
jge
stos
loopne
es
xchg
sbb
mov
daa
std
lret
std
loop
adc
cmp
lds
add
cmpsb
lods
sub
mov
xor
imul
pop
dec
add
inc
pusha
das
shlb
outsl
cmp
popf
outsl
fcomps
mov
sbb
push
sub
jbe
push
out
ja
adc
push
sub
xor
insl
add
jbe
dec
push
push
add
int
nop
cmpsb
subb
sub
stos
or
mov
sub
rdtsc
cmc
mov
jp
leave
push
xchg
adc
pop
dec
xchg
push
pop
jmp
xchg
or
movsl
add
mov
xchg
fs
pop
fiaddl
loopne
mov
movsl
js
fidivs
stc
jbe
into
pop
aas
insb
mov
sub
dec
push
call
dec
outsb
jo
lahf
xor
arpl
rorb
cmp
mov
cmp
mov
jno
add
loope
cwtl
pop
pushf
negl
sub
pop
jb
inc
xor
jmp
inc
scas
cs
das
popf
insl
mov
xchg
mov
mov
jp
stc
imul
mov
sub
push
xlat
mov
insb
out
add
fisttps
movl
push
and
mov
out
in
push
sbb
xor
xchg
xor
rorl
lock
adc
xchg
and
xchg
call
loopne
add
out
sbb
lock
mov
stos
imul
lock
adcl
addr16
outsl
rcll
push
call
mov
dec
mov
iret
fs
dec
push
mov
js
ret
clc
sub
cmpsb
adc
dec
dec
je
jne
jns
ror
mov
jns
push
push
insl
rcll
sub
rcl
dec
test
daa
push
fwait
add
into
dec
mov
sbb
bound
popf
ljmp
incl
cwtl
xchg
bound
fisubl
pop
cs
ljmp
sub
leave
cs
xchg
mov
test
stos
sbb
dec
nop
movsb
or
mov
jno
mov
int3
call
das
fincstp
clc
popf
adc
negw
xchg
xor
imul
cld
pop
and
pop
inc
repnz
jmp
add
mov
adc
push
add
dec
sahf
cmp
jne
in
xchg
loopne
out
cmpb
mov
xchg
lcall
lods
xor
cmp
sub
out
xchg
je
gs
xchg
jns
xchg
inc
pop
mov
cld
js
lret
sbb
pop
jp
jecxz
ja
inc
sub
fstps
das
mov
and
insl
pop
fstps
shll
xchg
sbb
dec
aam
or
xor
scas
cmp
cli
popl
fnstsw
ret
jmp
int3
dec
push
xor
jmp
aaa
inc
or
or
jns
pop
lret
shrb
pop
test
dec
sbb
sbb
inc
in
push
loope
pop
fcoml
dec
mov
subl
stc
mov
rcrl
sbb
and
ja
dec
jge
clc
into
jp
ds
cwtl
daa
push
nop
or
lods
sub
adc
or
int
add
repz
jmp
xor
iret
pop
xor
adc
push
xchg
insl
mov
cmp
add
or
pushf
xlat
shlb
push
or
inc
push
push
cwtl
shlb
push
inc
jne
arpl
imulb
pop
cmp
jbe
icebp
push
mov
stos
mov
in
pusha
movl
inc
mov
je
jl
xchg
xchg
test
sbb
or
xor
and
xor
leave
ret
push
dec
pop
xchg
xchg
int
push
iret
stos
or
loope
pop
and
test
mov
pop
pop
gs
fwait
repz
repnz
jmp
xchg
add
xchg
add
mov
aad
test
jo
xor
insb
jbe
or
pop
jmp
adc
jno
movsl
orl
sub
adc
dec
les
cmovg
hlt
shr
push
xchg
aam
xor
pop
fidivrl
lret
movsb
push
adc
mov
fsubs
or
imul
je
lahf
repz
dec
movsb
fdivrs
in
or
ret
out
not
cli
add
loop
jnp
xorb
xchg
in
pop
pop
ret
in
sbb
fadd
in
add
mov
jae
push
pop
mov
ds
sbb
insb
in
cmp
or
push
clc
pop
pop
addb
dec
push
inc
loopne
inc
js
jbe
fidivl
lret
bound
xchg
dec
es
fnsave
xlat
mov
daa
sbb
cmc
dec
sub
cmpsb
lock
insb
mov
adc
or
js
sar
mov
mov
mov
xor
inc
mov
fwait
jne
or
mov
mov
jbe
adc
sbb
and
lret
sti
popf
fnstenv
ror
out
push
mov
popa
mov
add
testl
or
cmp
fdivrl
loopne
xchg
mov
xchg
lock
hlt
lea
mov
inc
insb
jb
out
hlt
int3
pushf
push
icebp
stc
out
jl
dec
test
pop
pusha
fdivrl
xor
cmc
arpl
adc
pushf
or
fimuls
shll
push
ldmxcsr
adc
movsb
adc
repz
and
repz
mov
hlt
jno
jge
adc
xchg
lock
loopne
mov
addl
popf
fwait
jno
div
lods
pop
cmpsb
scas
add
inc
sub
pop
xchg
jecxz
js
cmc
add
pusha
jmp
cli
inc
mov
das
es
lds
fxtract
dec
sahf
sub
in
and
sub
mov
xchg
xchg
inc
fcomps
xchg
or
mov
test
sbb
sbb
xor
push
xchg
pop
dec
test
xor
mov
xor
mov
imul
int
mov
lret
in
jne
stos
rcrb
pop
xor
xor
ds
xchg
sbb
hlt
sbb
mov
cmp
popf
sarb
fnstsw
jo
int3
inc
stc
sbb
push
inc
das
testl
insb
lret
jp
addl
aam
sub
imul
mov
scas
jne
cmpsl
jl
xchg
dec
cld
int
test
test
pop
daa
enter
addr16
movsl
mov
mov
push
cmp
rol
cmpsb
hlt
mov
xchg
lahf
stos
push
inc
inc
sub
mov
jo
jbe
and
adc
les
mov
pextrw
push
je
cli
and
cmpsl
pushf
push
cwtl
push
pop
dec
imul
adc
shlb
int
les
adcb
dec
mov
dec
pop
cmp
cwtl
sahf
data16
mov
bound
js
sbb
ljmp
jecxz
mov
push
int3
mov
and
adc
stc
mov
adc
unpcklps
das
mov
in
gs
testl
mov
cwtl
sbb
scas
pusha
add
jns,pn
jb
dec
faddp
lret
addr16
mov
jl
and
adc
repnz
movsb
push
lods
pop
gs
lcall
inc
icebp
cmp
ja
xchg
je
add
xchg
lods
xchg
inc
mov
push
sub
mov
adc
mov
pop
sbb
mov
sub
ja
imul
sbb
cmpsl
and
hlt
outsb
dec
inc
inc
pop
mov
push
pop
xor
mul
ret
adc
arpl
mov
stos
add
or
sbb
fisubs
xchg
stos
sti
andb
fidivl
fldenv
stos
loopne
xchg
sbb
mov
sub
out
jo
out
sub
fistl
scas
mov
cltd
mov
xorb
dec
xor
xor
push
int3
in
dec
jg
fwait
mov
adc
out
add
xor
in
imul
jbe
jne
pop
adc
add
cld
neg
aad
jecxz
ror
cmpsb
dec
push
pushf
adc
push
push
or
mov
adc
lcall
jbe
and
stc
inc
dec
or
insb
push
inc
adc
clc
mov
jbe
mov
mov
or
call
mov
add
loop
test
mov
lds
cld
and
push
push
into
lock
into
addr16
push
xor
mov
jmp
mov
cmp
hlt
fidivs
in
xchg
pushf
add
das
imul
stos
jmp
outsl
test
movsl
mov
mov
bound
jne
push
mov
cmp
push
push
xor
cmpsl
push
pop
lods
movsb
nop
test
roll
push
out
mov
mov
jle
or
push
or
int
push
cs
mov
std
xchg
sub
data16
dec
inc
push
scas
iret
scas
dec
stos
jae
ror
xor
icebp
mov
shll
push
xor
sub
and
ja
ds
outsb
movsb
or
cmc
ud0
mov
inc
loope
dec
xor
lods
pop
std
adc
xor
push
lods
sbb
inc
test
fwait
jmp
mov
nop
mov
fistl
adcb
jecxz
into
or
push
stos
xor
rol
xor
les
jb
mov
push
xchg
cwtl
ss
enter
xor
hlt
jb
mov
aad
lcall
movups
jae
rcl
repz
sub
or
jp
mov
or
insl
subb
xor
jnp
push
xchg
stos
popf
lcall
popf
push
ret
insl
inc
push
add
mov
out
pop
xchg
xchg
movsb
imul
imul
fs
jge
out
jnp
call
cmp
mov
jb
mov
and
mov
fidivl
xor
cmp
sub
out
pop
jne
sub
push
sbb
stc
or
push
mov
sbb
sti
out
cmpb
sub
inc
sarb
int
cmpsl
pop
adcb
cmp
xchg
leave
fs
inc
js
pop
mov
push
mov
gs
scas
and
pop
push
pop
mov
jnp
sbb
mov
push
addr16
mov
or
sbb
stos
std
xorb
rcr
add
insb
mov
xchg
add
jne
clc
mov
sbb
pop
shl
int3
adc
mov
add
out
jne
xor
dec
scas
test
and
or
ret
jmp
and
mov
enter
aam
cli
and
add
add
out
dec
fadds
mov
sub
stos
loope
cmp
pop
adc
xchg
push
negb
mov
imul
inc
lret
daa
fsubrp
inc
ss
out
jge
filds
xchg
nop
insb
xor
dec
lahf
sarb
xor
or
inc
dec
in
arpl
ss
lods
loop
inc
mov
add
pop
cmpsb
xchg
insb
sbb
in
movsb
das
dec
sub
gs
mov
hlt
out
mov
push
out
mov
sahf
xor
xlat
add
push
mov
cld
loop
rol
mov
lds
sbb
jp
adc
adc
fldcw
xchg
shl
jmp
cmpsl
xchg
out
fwait
sbb
jl
sbb
mov
mov
push
idiv
out
mov
cwtl
sub
popf
push
xor
xchg
filds
cmp
add
jecxz
add
mov
push
xor
dec
jb
imul
shll
pop
lcall
in
inc
subb
xchg
pop
fsubs
clc
repnz
out
into
pop
leave
mul
out
stos
je
icebp
aas
aas
sub
mov
sbb
movsb
enter
mov
call
fstpl
adc
std
or
jecxz
dec
or
dec
subb
test
jb
xor
xadd
bound
xchg
iret
pop
test
mov
test
test
xchg
push
push
and
das
dec
dec
stc
scas
out
enter
aad
add
roll
mov
fmull
arpl
sub
xchg
rolb
jmp
pop
and
and
or
adc
divl
loop
call
clc
test
jnp
xor
or
test
push
ficoml
sbb
mov
inc
arpl
stos
and
shll
push
add
sbb
pop
jae
nop
cmp
outsl
lock
pusha
pop
mov
pop
inc
nop
push
clc
fildll
mov
loopne
ffreep
andl
mov
insl
pop
nop
test
mov
leave
ret
mov
sub
or
push
mov
test
sbb
dec
out
ret
out
sub
popa
imul
pop
outsb
pop
dec
push
cwtl
add
xor
cli
xor
pop
loop
and
movb
dec
mov
xchg
imul
mov
inc
int3
push
mov
test
movsl
test
lret
ret
fldt
mov
shrb
push
push
pop
ds
fcmovnbe
sub
or
popa
xchg
test
adc
stos
add
sbb
jo
xor
push
mov
push
mov
mov
lods
xchg
xor
jl
xor
add
mov
pop
out
sbb
xchg
sti
cmp
add
in
outsb
or
push
mov
inc
xchg
shrb
arpl
int
pushf
popa
loopne
adc
inc
rol
std
stc
iret
mov
test
out
int3
push
out
push
faddl
lods
and
mov
sbb
in
add
stc
test
dec
pop
sub
imul
inc
pushf
lahf
rorl
adc
inc
xchg
jge
addr16
add
in
xor
xchg
jmp
sbb
aaa
push
pop
in
jnp
daa
sar
xchg
mov
stos
fstpt
mov
fsubr
sbb
movsb
movb
addr16
xchg
add
mov
imul
pop
cmp
push
mov
and
sahf
pop
stos
sahf
call
or
les
dec
inc
sarb
or
enter
pop
and
mov
pop
push
arpl
pop
shll
fwait
adc
fsubrs
dec
sub
pop
mov
inc
xchg
mov
mov
fldcw
div
lahf
mov
xor
jg
push
ss
sti
mov
ljmp
cmpl
test
mov
mov
popa
dec
popa
daa
aas
pop
inc
xor
push
add
rcrl
daa
sbb
sub
int3
cmp
adc
pop
lods
cli
mov
shll
rclb
es
and
into
fdivs
pop
add
js
loope
xor
insb
lcall
mov
test
adc
hlt
cmp
lods
push
movsb
mov
pop
pop
bound
pop
je
imul
mov
fnstsw
mov
divb
sub
icebp
mov
add
faddp
sub
popf
shl
test
mov
notl
mov
cltd
jne
jae
sbb
insl
flds
push
xchg
cmp
mov
hlt
cmp
fdiv
adc
jl
inc
pop
lcall
push
repz
sub
cmpsb
dec
push
inc
lock
popa
pop
jecxz
outsl
inc
cmpsb
xchg
fs
cli
ret
xchg
jo
jne
cmp
sbb
sbb
mov
mov
inc
cmp
sbb
fwait
icebp
pusha
sbb
ljmp
out
aas
decb
nop
pusha
jl
sarl
push
push
ret
icebp
lods
fwait
call
xchg
fcomi
sti
lret
fmuls
or
inc
inc
clc
sahf
jecxz
test
fwait
xor
cs
xchg
test
cmp
sub
testb
push
jae
push
inc
rcrb
add
sbb
xor
or
in
pop
sar
pop
cmp
int
leave
cmp
ds
xchg
insb
es
mov
add
mov
push
out
cmp
in
ret
lret
das
cmc
cmp
inc
stos
or
push
xchg
mov
jge
xchg
inc
fidivrl
cmp
ss
gs
mov
outsl
lds
jmp
push
je
pop
iret
das
outsb
dec
sbb
in
cmpsb
repz
pop
enter
push
dec
pop
mov
xor
dec
loope
nop
sbbb
out
sbb
insl
pop
push
push
shrb
test
push
sti
addr16
xor
add
mov
inc
sahf
and
xor
repnz
scas
es
out
sub
out
or
gs
iret
xor
insl
subb
dec
enter
cmp
cmc
xchg
push
push
push
jbe
xor
inc
or
xor
out
pop
incl
add
push
rcll
pushf
jp
and
dec
loopne
jl
jl
push
fsubl
cmpsl
adc
outsl
adc
out
jge
inc
dec
cmp
les
pop
mov
sahf
dec
pop
mov
leave
mov
jo
or
sbb
dec
ret
mov
loop
data16
ljmp
je
mov
mov
imul
insl
pop
pop
lods
shll
add
lods
xchg
sub
popa
fwait
stc
leave
xchg
sub
cld
add
adc
lahf
jns
fwait
sub
imulb
mov
mov
push
xlat
dec
jp
repz
clc
push
mov
push
push
rorl
adc
mov
dec
pushf
lds
jno
lods
test
inc
sub
push
and
push
xchg
shl
mov
ret
sbb
xchg
lret
aad
jecxz
jae
sub
jmp
adc
add
or
add
adc
or
jmp
push
aaa
das
inc
dec
add
push
hlt
add
sbb
adc
or
out
push
clts
ret
rorl
sahf
cmpsb
and
negl
push
loope
mov
aas
mov
test
pop
xchg
jo
lods
aad
fcompl
add
sbb
insb
push
sbb
mov
xor
push
movsl
sbb
insb
pop
jae
iret
push
or
dec
mov
inc
jnp
subl
popa
pop
dec
std
adc
fdivr
sbb
and
mov
cli
aam
lds
in
out
inc
lcall
lret
ret
mov
push
insl
jns
pop
das
xchg
jnp
and
fldt
and
in
dec
mov
push
push
mov
pop
lods
push
iret
aas
sbb
pop
dec
mov
aad
fimull
pusha
or
outsl
inc
mov
xlat
jns
pop
push
mov
xchg
fisubl
add
cltd
bound
jae
test
adc
aaa
mov
ds
fisubl
sub
or
xchg
adc
dec
test
lret
pushf
adcb
es
sahf
fs
add
mov
les
inc
xor
enter
mov
insl
lret
push
push
or
jl
inc
cmc
imul
push
imul
js
sbb
pop
cmp
sub
sbb
xchg
fstpt
inc
call
push
enter
ja
push
ja
popf
mov
fs
xchg
arpl
out
or
iret
push
mov
enter
lods
mov
into
dec
cmp
outsl
in
jle
add
out
pop
pop
pop
ret
xorl
add
jge
hlt
fcompl
insl
pop
stos
sub
xchg
jmp
fidivrs
out
mov
pop
jnp
cmp
mov
and
ljmp
daa
arpl
xlat
mov
repz
lds
leave
imul
mov
jbe
pop
xchg
add
and
sub
enter
mov
cmpxchg
mov
arpl
clc
inc
adc
repnz
lods
sub
test
loopne
jg
test
sbb
clts
insb
jae
sti
in
add
movsb
fcomps
dec
test
xor
shrl
xlat
cmc
add
inc
push
divl
fs
jae
mov
arpl
push
js
mov
sbb
aad
or
in
push
iret
cmp
ss
dec
inc
push
add
inc
or
sub
and
mov
cmp
mov
jno
push
jns
mov
out
push
push
lcall
dec
jno
mov
addr16
das
add
stos
push
cltd
aaa
fcmovnu
test
dec
adc
cmp
add
pop
jl
push
sar
dec
xor
push
loope
mov
ficomps
pop
stos
xor
out
pop
push
insl
push
and
dec
sbbb
mov
dec
stos
pop
das
dec
pop
das
mov
cmc
xchg
jo,pt
shr
fs
push
xchg
dec
jmp
inc
cmp
sbb
fnstsw
jecxz
lds
sbb
jne
mov
xchg
inc
sti
int
or
hlt
pusha
aam
jne
lahf
dec
mov
push
loopne
imul
mulb
dec
int3
cmpsl
mov
mov
or
sub
push
jle
sbb
adc
cmp
adc
mov
inc
addr16
xchg
pop
sbb
jecxz
pop
and
fsubl
pop
loope
xor
ljmp
mov
lret
scas
push
mov
sub
shl
add
mov
rcrb
ret
or
gs
addb
icebp
cmpsb
jo
ljmp
inc
push
ja
sbb
push
cmp
subb
movsb
popl
outsb
mov
sub
xlat
mov
stos
jmp
jno
ret
fbstp
ss
xor
push
add
ljmp
mov
stos
out
sahf
adc
fistl
scas
mov
mov
mov
idiv
fidivrl
insl
pop
xchg
xchg
fcompl
xor
pop
enter
xchg
mov
repnz
ror
lcall
lds
mov
xor
dec
jno
jmp
adc
popa
pusha
outsb
push
std
lods
fcmove
sahf
add
jbe
subb
adc
in
ss
test
imul
insb
icebp
sub
cs
xchg
lods
push
shrb
push
push
push
shrb
push
dec
adc
xor
and
jbe
mov
addb
out
pusha
xor
xor
cmp
or
cld
add
out
add
pushl
xchg
js
fadds
movsl
ja
jae
aas
test
ficompl
mov
pop
sbb
add
outsb
pop
and
stos
xor
fldl
cmpsl
add
xor
stos
or
inc
sbb
fwait
adc
adc
imul
jmp
push
ret
push
ds
decb
lods
xchg
dec
in
jmp
and
and
pop
jb
jmp
pop
ja
out
aaa
jno
les
clc
or
lret
dec
cmpsb
push
loope,pn
xchg
cmpsl
or
gs
rcrl
cmpsb
mov
dec
cmp
je
bound
out
or
and
nop
mov
mov
movb
xchg
fimuls
push
loope
sbb
scas
shll
jmp
shrb
jae
ds
lahf
incb
in
mov
and
sar
jle
or
lcall
fwait
mov
add
test
mov
xor
pop
mov
sbb
sub
mov
popf
push
inc
arpl
rorb
loope
cmp
jns
cld
scas
cmpsb
and
rorl
adc
data16
adc
dec
or
add
rcrl
jp
lret
sub
in
pop
arpl
hlt
sbb
fcmovnbe
jge
jmp
test
sbb
mov
ret
push
mov
jl
fnsave
mov
test
inc
clc
leave
push
mov
fsubrl
int
dec
clc
aam
sub
xchg
inc
sub
sti
andl
in
repz
popf
notl
push
dec
xor
and
jb
fsubrs
cmp
xchg
rcl
jae
sub
mov
mov
cs
ljmp
dec
dec
gs
fistps
and
dec
ret
into
bound
push
imul
rcrb
lea
xor
xchg
sbb
fcomps
bound
mov
add
push
call
out
pop
xchg
aas
pusha
jl
scas
mov
std
jecxz
mov
xchg
leave
fadds
mov
jmp
out
mov
mov
dec
or
mov
std
mov
ret
sbb
cmpl
cmpsb
cltd
adc
jmp
mov
mov
out
mov
lock
loope
cld
mov
xchg
ror
fadd
mov
addr16
or
push
xchg
clc
mov
sub
add
dec
es
jecxz,pt
cmp
xchg
dec
cld
out
jp
adc
pop
xchg
test
jns
inc
sub
mov
repz
dec
paddw
sub
repz
push
jecxz
ret
adc
fidivl
and
mov
xorps
test
out
clc
cld
xchg
and
xchg
xor
popf
sti
cmp
stc
or
cld
or
pop
and
clc
sbb
decl
inc
iret
mov
imul
or
stos
cmc
pop
xor
fs
pop
out
jbe
enter
adc
pop
lods
pop
faddl
clc
mov
push
dec
mov
arpl
adc
mov
lcall
mov
scas
in
ret
bound
daa
mov
pop
jns
out
loope
fildl
mov
das
mov
xor
xor
clc
and
sbbl
ja
test
es
fisubl
and
cli
add
push
xchg
call
and
xchg
shll
add
mov
adc
push
fstpl
das
add
imul
in
insb
sub
sub
dec
sbb
jne
jne
ljmp
add
mov
sarl
cltd
cmc
adc
scas
aaa
rorb
push
cmp
jns
outsb
add
pop
cmpsb
mov
push
test
leave
dec
mov
pop
or
add
push
inc
mov
mov
popa
notl
sbb
mov
mov
push
out
int
out
fnstenv
mov
inc
orb
jle
mov
hlt
xchg
sub
push
test
cmp
int
adc
or
sbb
push
pop
xor
mov
fwait
xchg
scas
imul
lcall
dec
or
add
jmp
fwait
lret
push
sti
fadd
aaa
iret
jb
and
fucomp
xchg
push
and
sub
lret
jl
packssdw
cmpsb
idivl
movsb
sub
ror
mov
xor
inc
add
in
xorb
fwait
int3
testl
pop
cmpsb
mov
adc
sti
dec
xor
and
push
or
add
inc
jl
add
mov
into
cmp
cmc
jl
dec
loopne
or
stos
imul
jnp
inc
ret
imul
lock
fs
mov
push
cmp
dec
jle
mov
enter
pop
enter
je
push
lods
andb
in
pop
mov
jg
shl
int
sub
sbb
xchg
aaa
std
leave
in
icebp
xlat
lods
pop
mov
sub
lock
stos
lcall
cmp
pop
sub
xchg
sub
pushl
dec
adc
or
pop
mov
cmpxchg
test
add
push
ret
xor
and
fbstp
mov
shlb
ret
push
insb
sub
out
xchg
rclb
icebp
inc
fstpl
mov
movsb
shl
adc
scas
add
ljmp
push
push
inc
cmp
pop
dec
das
mov
xchg
sub
fnstenv
out
hlt
inc
dec
inc
sbb
lods
inc
push
or
push
rolb
dec
cmp
sub
jmp
nop
imul
adc
fwait
rorb
mov
pop
add
jecxz
ret
mov
jo
sahf
add
int
xchg
dec
roll
push
movb
inc
jecxz
fnstcw
divl
add
sbb
xor
lahf
mov
stos
call
in
xor
cltd
sbb
enter
push
in
mov
mov
xor
ret
fnstenv
js
add
pop
mov
call
loop
lret
dec
cmp
mov
mov
cmp
jmp
sub
repz
pop
sub
add
fdivs
repnz
into
xor
mov
pop
sub
mov
sbb
jnp
orb
xchg
in
pop
and
or
scas
inc
mov
mov
sub
popf
or
cmp
fsubr
inc
inc
aas
xchg
lret
inc
lds
cmpsl
fs
in
arpl
dec
jne
jg
sarl
test
rolb
jl
scas
sbb
scas
pop
mov
jl
add
jp
inc
xor
lds
mov
sub
mov
movsl
inc
ss
sbb
jb
stos
aam
mov
out
sbb
sti
cmp
or
lods
xchg
test
dec
sbb
pop
out
inc
fnsave
sarl
clc
and
out
js
pop
lret
sbb
push
sub
movsl
or
iret
testb
test
fsubrl
xor
pop
iret
jle
mov
adc
or
rorl
fdivs
test
push
out
sbb
rep
pop
cmp
dec
frstor
sbb
pusha
adc
cld
or
mov
pop
xorb
lock
mov
stos
cmp
shl
test
mov
lahf
lds
mov
cmp
hlt
mov
cmp
adc
sarb
mov
lods
dec
das
movsb
push
mov
pop
xor
push
js
cmc
inc
or
mov
fiaddl
nop
pushf
inc
cmp
es
or
jns
xchg
out
xor
inc
sbb
idivl
pop
test
out
orl
xor
push
pop
mov
je
enter
insl
mov
xchg
inc
sahf
ret
cltd
sub
fisttpll
stos
int3
ret
lret
sub
xchg
inc
imul
fildl
xor
shr
mov
int
rcrl
add
push
push
jno
lock
sti
ret
rorl
sub
aad
cmp
xchg
cmp
stos
arpl
adc
sahf
cli
dec
lods
stos
aaa
pop
jne
scas
stos
fldt
sub
out
test
clc
in
lds
ja
pop
in
push
vmovss
pop
xor
testb
orl
inc
nop
and
sub
decb
in
in
loope
mov
ljmp
in
or
pop
outsb
inc
test
fdiv
jle
push
outsl
xchg
jne
push
addr16
rolb
adc
mov
sbb
sarl
scas
fimull
fwait
xchg
adc
scas
cltd
xchg
lea
push
clc
ret
sub
xor
ss
jecxz
jmp
shrl
sbbb
out
pop
mov
pop
sbb
into
arpl
cmp
xlat
jmp
rcll
aas
ret
in
jno,pt
not
mov
mov
and
xor
or
sub
sub
dec
stc
xor
cli
xlat
movsl
xchg
stos
test
xchg
lret
sbb
add
mov
jns
add
sub
sbb
push
ja
js
out
dec
jnp
adc
adc
repnz
or
or
sbb
nop
out
push
ret
hlt
cwtl
lahf
mov
in
enter
in
jmp
icebp
into
and
xor
mov
cmpsb
jle
xchg
push
stc
push
jp
iret
imul
mov
cmp
test
addr16
cmpsb
sub
out
mov
xor
mov
xchg
pop
enter
xchg
cmp
das
xchg
jae
push
cmp
xchg
ja
push
loop
mov
lods
in
test
testb
jecxz
or
sub
testb
mov
mov
rcl
cmp
and
pushf
and
pop
imul
in
sbb
pushf
inc
cld
fsub
fstpl
aas
mov
std
lret
sub
cmpsl
addl
cmp
shrb
adc
push
sbb
pop
scas
cmp
or
mov
fcmovnu
and
cmpsl
add
std
loop
popf
xor
pop
push
adc
mov
gs
setnp
outsb
in
ds
into
aas
cmp
sbb
push
push
fwait
outsb
outsb
cmpsl
push
fsubs
orl
nop
andnps
mov
les
sbb
mov
pop
ljmp
out
add
fidivrl
pop
lock
ljmp
or
std
mov
cwtl
les
dec
in
add
hlt
dec
adc
jns
sub
in
push
push
adc
cmp
cli
xchg
xchg
lea
jp
cld
xor
je
outsl
sub
in
mov
adc
push
mov
xchg
push
mov
movsb
ljmp
pop
inc
mov
push
rolb
insb
lea
test
ljmp
sar
insb
sahf
cmpsb
or
cld
push
add
xchg
sbb
test
xchg
lahf
loope
cmc
mov
popa
int
jns
mov
imul
jmp
icebp
mov
fsubp
lods
cmp
mov
cs
push
ja
pop
pop
dec
fimuls
popf
xor
popa
loope
mov
inc
pusha
fcmovne
pop
sti
insl
jmp
dec
push
push
dec
repz
sub
xor
pusha
in
dec
bound
xchg
or
daa
jmp
aas
lods
sub
mov
dec
mov
insb
lods
fnstsw
cld
mov
mov
hlt
add
push
xchg
and
sub
mov
rcrl
stos
push
lret
jecxz
cli
mov
fisttpl
fmuls
xor
sub
and
arpl
add
pop
jo
and
and
jge
jle
or
out
sbb
xor
inc
cmp
add
shrb
gs
add
mov
in
jmp
adc
or
jbe
add
stos
push
std
outsl
or
pop
int
lahf
sbb
lods
aad
jbe
divl
push
popf
pop
mov
addr16
jmp
inc
je
push
popa
or
subl
aaa
lcall
add
inc
jno
sbb
inc
xchg
ss
adc
cld
cs
sbb
lods
mov
insb
aas
fprem
cltd
jno
not
and
cltd
mov
or
adc
adc
sbb
movsl
sar
out
daa
clc
xor
adc
xchg
or
cs
or
ss
stc
jge
mov
inc
sbb
fisubl
addr16
out
pop
add
sub
and
adcl
pmaxub
add
mov
test
sarb
cmp
adc
cltd
mov
lods
imul
cmp
jle
mov
shll
lea
iret
into
fnstsw
pushf
outsb
cmp
enter
jg
xchg
mov
ret
xor
push
or
jg
jbe
rcr
inc
add
pusha
dec
int
xchg
stos
add
lret
mov
mov
push
lret
fs
sub
clc
insl
mov
test
mov
call
mov
scas
nop
mov
test
xchg
xor
daa
and
push
mov
mulb
xchg
mov
dec
or
push
es
ds
lea
dec
jecxz
lahf
ja
lods
jle
call
loope
into
out
or
and
lcall
or
enter
stos
xor
ss
out
ja
xchg
add
les
mov
gs
fldl2e
xchg
dec
in
fstps
stos
pop
push
movsb
in
add
cli
fsubl
addr16
scas
sub
and
test
pmuludq
lcall
mov
lods
test
xlat
xchg
cltd
pop
mov
add
les
dec
clc
daa
outsl
cmp
in
mov
adc
mov
mov
pusha
push
enter
sti
xor
push
xor
stc
mov
call
xchg
xchg
icebp
adc
addr16
jo
mov
cmc
lds
addr16
sbb
lds
mov
mov
dec
and
stc
das
in
popf
sub
add
xchg
ss
add
push
pop
outsl
sbb
xchg
lods
push
pop
jmp
cli
sbb
pop
or
scas
inc
pop
icebp
mov
adc
out
sub
adc
and
dec
mov
mov
dec
rolb
cltd
jo
stc
scas
lahf
out
jmp
movsb
push
push
scas
or
pop
outsb
pop
andl
jnp
xor
sbb
xor
pop
jge
jl
pushl
sbb
sub
mov
xor
push
test
fisubs
push
mov
push
sub
push
inc
mov
enter
cmp
ss
mov
lret
jbe
xchg
xchg
je
stos
jae
loop
xchg
sbb
add
cmp
mov
mov
outsl
add
xchg
punpckldq
rclb
hlt
sbb
enter
mov
cmc
test
mov
cltd
call
dec
push
ret
lret
mov
ljmp
xchg
sahf
pusha
sbb
mov
mov
cmp
jne
out
pop
xchg
or
in
jge
sbb
lret
in
mov
inc
ss
inc
cmpsb
dec
mov
pop
xorl
shlb
or
loope
pop
push
xchg
pop
cmp
sub
int
fcoms
jb
push
mov
outsl
push
iret
push
cmp
sarl
cld
cmp
aam
mov
inc
clc
xor
push
rcrl
out
lds
sbb
fnstenv
xchg
iret
or
scas
jns
int
mov
cs
scas
popa
stos
xchg
dec
sub
jp
sub
idiv
adc
pop
int
push
mov
js
dec
inc
pop
cmp
sub
gs
sbb
dec
int
mov
push
orb
mov
es
jnp
pushf
mov
sub
jne
sub
jno
xchg
test
jmp
dec
jbe
test
pop
loop
inc
mov
mov
das
outsl
sub
mov
mov
dec
push
sub
daa
pop
pop
test
or
aam
outsb
jno
pop
insb
sbb
jno
pop
call
clc
repz
add
mov
jo
mov
movsb
jp
jmp
sahf
icebp
into
push
inc
dec
mov
xchg
stos
mov
sub
ljmp
pop
xor
xchg
adc
add
pop
enter
ss
sarl
jo
loopne
lret
add
dec
mov
mov
loop
sbb
sub
hlt
and
add
sbb
mov
ss
sub
sbb
xchg
icebp
stos
outsb
hlt
sub
pop
adc
imul
jge
nop
xchg
cli
sbb
aad
test
movb
cmpsb
js
ss
mov
aam
loope
sub
lcall
in
icebp
test
xchg
cmp
lea
aam
sahf
into
or
dec
mov
add
push
lahf
pop
mov
jno
mov
pop
adc
pop
dec
pop
data16
bound
loop
mov
cmp
cmc
test
pusha
popa
scas
fs
int3
xchg
jne
ret
mov
mov
mov
xor
inc
cmp
pop
mov
or
pop
pop
aaa
pop
shll
adc
push
xlat
mov
inc
add
cmp
insl
push
incl
mov
cmp
pop
sbb
call
loopne
push
jns
test
shrl
std
outsl
xlat
movsb
shll
outsl
fcmovnb
jp
test
scas
mov
ret
mov
mov
bound
mov
fs
inc
pop
sbb
mov
gs
mov
xor
int
push
imull
and
mov
or
add
mov
mov
xchg
ljmp
hlt
sub
mov
mov
fwait
jns
xchg
sbb
scas
clc
nop
mov
ret
mov
push
inc
stos
pop
xor
clc
mov
xor
ficoms
xor
pop
mov
int3
dec
inc
icebp
dec
xor
xor
outsb
cwtl
push
test
sbb
mov
loope
sbb
mov
rorl
adc
test
negl
add
jge
lds
xchg
xchg
mov
jle
jg
popl
jp
rclb
clc
sbb
loop
adcl
jge
adc
sub
cmc
sub
mov
sub
test
add
adc
cli
cli
cmp
mov
xchg
lcall
test
inc
adc
or
sub
sbb
push
je
jbe
loope
iret
xchg
loope
orl
hlt
jge
cmp
ja
pop
adc
in
test
jp
and
cmp
mov
inc
loope
adcl
shlb
in
test
xchg
fstpt
rcr
jae
nop
cld
jmp
outsl
out
out
out
xchg
inc
ljmp
int
not
push
jge
add
rcrb
nop
cmp
loopne
ds
shll
imul
push
loope
mov
lret
sbb
or
mov
push
repnz
sub
or
lahf
ret
stos
mov
mov
push
push
sub
insl
mov
les
push
out
jnp
scas
loope
addr16
lods
insl
mov
mov
adc
stos
push
inc
mov
inc
dec
cmp
add
or
fbld
fdivs
stos
push
imul
sarb
dec
adc
dec
adc
test
xchg
mov
out
mov
xlat
pop
cltd
jno
push
adc
icebp
sti
mov
xor
xchg
js
add
inc
xor
cmpl
mov
mov
loope
into
ds
in
dec
repnz
pop
pop
mov
leave
or
mov
mov
cmp
sahf
nop
or
fdivl
add
dec
push
inc
test
aam
imul
mov
mov
xchg
mov
adc
sbb
sbb
bound
or
loopne
sub
mov
repnz
pop
gs
int3
out
pop
push
test
aad
mov
cmp
aad
repz
and
cmpl
cwtl
and
add
xchg
fs
adc
jle
repz
xlat
add
jp
inc
scas
imul
repnz
inc
cmc
sub
dec
mov
sbb
xchg
xchg
fsubl
add
push
ror
or
enter
outsl
cwtl
popf
cmp
scas
mov
imul
and
outsl
cmp
mov
push
shrl
pusha
cld
xor
sub
adc
pushf
fucomp
push
jne
popa
mov
fmuls
pop
xchg
in
cmpsl
cmp
into
aas
push
sar
sub
ret
push
xor
sbb
pop
push
pop
scas
xor
popa
call
std
push
sub
or
fiadds
pop
push
jnp
mov
stos
xchg
fisubs
loopne
sbb
xchg
mov
out
neg
cmp
xorb
cwtl
push
std
cmpsb
pop
out
sbb
loope
scas
dec
fisubl
push
dec
sbb
mov
fnsave
xor
jno
leave
mov
cltd
jl
imul
add
stos
push
add
out
int
repnz
push
in
add
pop
and
cmp
xor
pop
shll
scas
imul
mov
aas
push
mov
fs
cld
and
jbe
xor
push
sub
mov
add
outsl
ja
rolb
fidivs
out
rcl
scas
mov
and
sahf
fwait
inc
cmp
mov
jns
frstor
and
push
nop
sti
and
loop
lea
sub
push
mov
jg
inc
cmpsb
leavew
xchg
pop
pop
xor
push
xor
jmp
insl
test
ror
fs
subl
stos
pop
loope
movsl
pop
mov
sbb
scas
push
push
dec
lods
lds
mov
fnsave
jp
cmc
jp
mov
cmp
jmp
aas
sub
inc
mov
pop
sbb
dec
dec
dec
out
xchg
dec
jge
lcall
adc
ja
stos
dec
mov
adc
imul
popf
pop
push
jae
sub
insb
arpl
mov
jae
sub
dec
shlb
cmp
fsts
outsb
out
jge
in
add
adc
aam
push
inc
push
bound
mov
cmp
pop
pop
add
call
ss
mov
mov
scas
push
adc
lds
lret
in
inc
popa
lea
push
outsb
cmpsb
std
lcall
cmp
in
stos
out
jle
popa
dec
pop
lret
add
xor
jne
iret
adc
stos
loopne
adc
out
pop
jo
add
inc
push
inc
or
out
rorl
shll
fucomp
das
push
mov
xchg
add
mov
jo
mov
adc
adc
enter
lock
sbb
ret
in
mov
lock
pushf
push
je
xchg
push
stos
arpl
ror
xchg
xchg
test
mov
fidivrl
arpl
push
cmpsl
fsubl
test
repnz
clc
mov
push
dec
imulb
lods
in
mov
pop
enter
add
mov
mov
orb
sbb
and
fcomps
out
mov
out
inc
repnz
lcall
ja
cld
xchg
test
adc
inc
add
pop
inc
pop
sbbb
dec
jg
and
mov
push
pop
mov
pushf
sti
add
in
push
push
or
fwait
mov
lds
sti
mov
aad
mov
lods
push
das
mov
mov
xorl
push
ret
and
mov
or
cmpsb
popf
test
mov
clc
nop
lea
aaa
addr16
dec
jae
loop
in
or
mov
mov
ret
jnp
stc
mov
sbb
mov
mov
mov
xor
js
jge
dec
xchg
lea
into
sbb
push
mov
mov
ror
inc
test
fwait
pop
mov
in
cmc
xchg
fisttps
jecxz
ds
incl
jecxz
fs
pop
jo
ret
shufps
push
lahf
aam
fstps
add
je
jo
or
push
cmp
aas
jg
xlat
jge
lahf
mov
sub
int
add
sbb
mov
loope
jb
aas
push
sbb
imul
xorl
push
enter
mov
dec
repz
and
xchg
pop
cmpsb
add
lretw
arpl
add
mov
ljmp
mov
or
jb
mov
cmp
mov
or
nop
add
add
sub
shrb
out
inc
adc
inc
mov
inc
nop
sub
and
dec
pop
arpl
add
pop
sbb
mov
stos
lock
pushf
inc
push
jg
and
dec
xchg
cmpsl
sti
cli
clc
in
mov
stos
push
outsb
test
int3
out
sti
mov
xchg
adc
and
shll
arpl
lods
out
sub
frstor
push
adc
ret
mov
dec
and
fsubl
fwait
dec
push
cmp
push
cmpsl
inc
and
sahf
add
lahf
mov
jmp
inc
vmovlhps
test
loopne
addb
cltd
sbb
or
aaa
dec
xor
lret
mov
pushf
sub
fistl
outsl
popa
ljmp
es
sub
out
clc
out
jae
push
xor
add
jge
mov
gs
jl
pop
mov
jle
sbb
lret
mov
sbb
push
mov
push
mov
xchg
data16
push
stc
mov
movsb
jne
fs
sbb
inc
movsb
movsl
inc
jb
repnz
lea
sub
lret
lods
addl
xchg
sahf
stos
in
sub
xlat
in
mov
push
and
mov
stos
inc
mov
out
repz
and
mov
dec
or
xchg
jg
sbb
or
adc
or
xor
scas
sub
mov
es
sbb
pop
pop
jno
lret
fcomps
sub
lcall
xchg
shrb
scas
push
add
ljmp
or
leave
jo
add
adc
mov
xor
mov
or
push
xchg
leave
shlb
add
or
xchg
jnp
orl
mov
mov
or
jns
push
scas
mov
cld
stos
hlt
pop
pop
inc
xchg
jg
test
sub
test
dec
rcll
aas
jne
dec
push
cmpsl
loop
and
enter
bound
jecxz
bound
cmpsl
pop
pop
and
and
cmpsl
sub
mov
cmp
std
mov
jg
jb
test
andl
mov
xchg
outsb
or
inc
negl
inc
sbb
aas
ret
enter
sbb
call
je
dec
cmp
scas
shl
out
push
ds
dec
mov
jmp
add
movsl
xchg
fwait
xchg
xchg
cmp
lret
rcrb
xor
push
dec
punpcklbw
add
sbb
ret
push
arpl
and
jmp
fptan
jecxz
inc
inc
cmp
add
jg
jb
scas
sub
in
push
xchg
cmp
enter
lahf
jecxz
or
gs
enter
mov
ss
lds
aaa
out
daa
mov
ficompl
out
lea
add
mov
mov
jecxz
mov
jns
inc
cmp
aaa
pushf
push
in
ss
insl
dec
loope
ffree
pop
lds
out
adc
sbb
add
add
push
loop
jno
pop
or
mov
aaa
loop
rcrl
insb
aad
xor
or
out
arpl
int3
iret
sahf
push
out
xchg
js
jo
xchg
mov
dec
pop
movsl
xorb
inc
sahf
adc
lods
cmpsl
test
lea
push
mov
xlat
xchg
stos
xchg
adc
roll
lock
mov
sbb
fidivrl
adc
out
rclb
mov
rorb
sti
lahf
inc
adc
mov
mov
mull
movsb
push
ss
or
stos
cmpsb
mov
orb
shrb
sbb
xor
pop
mov
decb
push
add
sbb
into
jne
push
add
jbe
bound
and
inc
sarl
xchg
mov
mov
pop
dec
mov
adc
pop
sub
int3
outsl
cmp
std
xor
shll
adc
imulb
mov
mov
jo
fwait
cmp
inc
cmp
enter
or
adc
push
jbe
mov
xor
push
in
inc
push
std
test
cli
mov
push
addr16
lods
fisttps
jge
ret
fnstsw
xcrypt-ofb
cmpsl
test
push
inc
icebp
and
xchg
mov
mov
rcr
lret
iret
or
std
xchg
sub
jecxz
adc
push
cmpsb
arpl
sti
les
or
cmp
cs
hlt
roll
push
jmp
push
push
cmp
and
pop
or
int3
sbbb
jmp
push
outsb
out
xchg
pop
lahf
scas
testb
daa
out
pop
sbb
jecxz
repnz
adc
in
pusha
hlt
push
mov
ret
das
jp
ljmp
pop
mov
push
or
pop
xor
mov
out
or
sti
sub
lcall
sbb
pop
repz
inc
fisubrs
mov
decl
lods
jmp
je
jns
rorb
insb
lea
adc
inc
ljmp
jle
es
test
cmpsb
bound
xchg
aas
sbb
jbe
ret
push
popf
fdivl
dec
push
push
jp
fbld
rorb
cmp
xchg
mov
and
out
das
sbb
and
fdivl
mov
jecxz
daa
into
imul
jnp
pop
fs
out
insb
pop
adc
mov
push
sbb
stc
push
push
sub
push
xchg
imul
sub
shll
mov
cwtl
fimull
xchg
pop
jmp
js
leave
in
ja
into
shll
fdivl
shlb
mov
push
push
inc
push
mov
push
pop
pop
xor
fiadds
loop
insb
jns
mov
fsubl
inc
mov
mov
imul
fdivrl
inc
daa
pop
or
cmp
pop
cwtl
sub
cmpsl
jnp
shr
mov
cs
stos
inc
fists
push
je
pop
mov
pop
outsb
xchg
jns
fbstp
enter
jge
repnz
jbe
nop
repnz
divl
addl
inc
push
mov
loop
out
pop
enter
mov
mov
or
testl
add
subb
jle
inc
mov
das
stos
mov
jne
jmp
dec
repnz
xor
dec
sbb
fs
dec
cs
xchg
mov
sbb
pop
xchg
mov
outsb
lret
rcrl
add
out
iret
jbe
sbb
jecxz
push
inc
pop
iret
mov
repz
lock
mov
mov
xchg
data16
in
repz
ds
mov
hlt
and
dec
stos
stc
xchg
shlb
pop
shl
cld
pop
je
mov
outsb
xchg
popa
into
add
mov
lds
mov
mov
xchg
inc
cmp
pop
push
jnp
stos
sub
xchg
ror
add
ret
jg
adc
push
cmp
or
lret
adc
xchg
stc
xchg
push
mov
and
ficoml
sbb
push
and
imul
inc
xchg
lcall
sti
ss
test
arpl
jle
mov
fdivp
adc
pop
jb
xchg
in
push
mov
test
xorb
aaa
ds
dec
inc
dec
mov
pop
hlt
push
mov
add
lret
mov
out
mov
xchg
sub
or
jp
and
inc
scas
mov
out
fcomps
pop
sub
or
add
xchg
xor
aad
gs
fmull
inc
lret
adc
leave
mov
xchg
out
dec
out
mov
addr16
mov
and
arpl
and
dec
or
call
movsl
sbb
lret
pop
sub
xchg
repz
xor
daa
cli
push
xchg
lahf
pop
loope
xor
movsb
mov
dec
or
mov
mov
jle
and
jecxz
stos
dec
cmc
xlat
std
cmp
jo
fs
and
inc
rorl
sbb
pop
das
xchg
dec
loope
push
jge
push
idivb
lret
daa
orb
add
rolb
cmp
cmp
lods
incl
jno
push
xchg
sti
mov
mov
add
scas
pop
pslld
inc
sbb
pop
mov
jae
xchg
ja
xor
or
xorb
cmp
push
xchg
subb
cs
in
pop
jne
sub
sarl
mov
inc
out
pop
or
sti
clc
cli
das
jae
dec
fldt
add
scas
cmovb
adc
add
sub
and
pop
in
mov
hlt
push
sbb
lret
popf
out
aad
push
subb
inc
paddw
jnp
mov
out
int3
push
addr16
mov
int
mov
mov
xor
jmp
shlb
pop
outsb
test
xchg
in
shlb
cmpsl
or
dec
inc
sub
out
cmp
adcb
scas
pop
movsb
or
mov
adc
or
lret
pop
jbe
cmp
inc
popf
jp
mov
shl
mov
xchg
add
aaa
cli
outsl
out
nop
mov
gs
mov
jbe
jae
xchg
call
cmpsb
bound
jae
pop
add
fldt
clc
mov
ret
pop
xchg
xor
xchg
sub
push
jmp
popf
jns
aam
in
daa
movsl
cmpsb
ret
pop
cs
arpl
inc
repz
mov
movsl
out
jns
inc
mov
punpcklwd
jb
mov
out
js
add
or
pop
pop
sbb
mov
aam
add
jo
bnd
cltd
mov
out
lahf
insb
test
stos
jp
rcll
scas
xor
arpl
fistl
jns
scas
sbb
sahf
xchg
add
adc
cmp
data16
in
sbb
mov
imul
pop
cmp
cwtl
jo
jo
test
int
stos
leave
ss
test
jge
iret
outsl
and
and
mov
pop
arpl
jg
cmp
movb
sbb
cmc
inc
and
cltd
hlt
or
lods
es
arpl
xchg
pop
push
out
fisttpl
adc
xchg
ja
and
cld
in
ljmp
pop
iret
mov
ljmp
sahf
push
xchg
mov
pushl
pop
adcl
cmp
push
mov
xor
mov
pop
mov
mov
cmp
movsb
iret
and
loope
iret
hlt
cmc
push
movl
pop
jecxz
jbe
dec
jb
out
sub
loop
cmp
in
or
inc
mov
xor
jnp
das
cmp
mov
lret
xor
insb
mov
pop
cs
mov
sub
pop
mov
mov
adc
jge
lret
jmp
imul
mov
lret
pop
inc
roll
lods
lea
pop
dec
hlt
arpl
popa
cmpxchg
sbb
dec
and
pop
dec
inc
aaa
sti
es
and
shll
loope
ret
lret
mov
mov
push
repnz
mov
inc
jl
loope
cmp
andb
sbb
pop
dec
jo
or
xchg
add
outsl
cmp
pushf
int
stc
dec
and
dec
add
lret
daa
cld
sub
je
jmp
mov
xchg
loopne
cmc
addr16
fiadds
lods
pop
clc
mov
push
dec
jle
js
test
pop
jne
in
cwtl
mov
lret
cli
fistps
out
xor
jns
jbe
pop
mov
mov
add
push
push
inc
inc
repz
lds
pop
fld
cld
mov
adc
xchg
fdivp
out
inc
ss
sub
addl
int
cmp
sub
rcll
or
mov
icebp
ds
pop
lods
cmpsl
push
mov
jmp
add
dec
int3
adc
xlat
nop
mov
jne
jle
dec
push
xchg
push
pop
inc
insb
sbb
fcompl
jae
dec
cmp
shr
mov
shrl
inc
loope
jbe
es
mov
jmp
mov
aas
pop
roll
fsubrl
je
jg
ja
sbb
mov
adcb
xchg
mov
xchg
jb
xor
xor
inc
in
sub
push
xor
push
sub
mov
lods
mov
mov
inc
xchg
fs
in
frstor
je
mov
ss
jp
out
jg
in
push
rcrb
mov
add
stos
sti
ret
dec
les
aam
jae
das
mov
cmpsb
cmp
scas
pop
leave
shlb
xchg
mov
jne
std
jns
fstl
sbb
cmp
push
outsb
push
cmp
and
ror
or
setno
adc
xor
xchg
push
pop
xor
subl
cmp
inc
mov
aam
xor
mov
pop
rcr
test
mov
out
repnz
jno
lock
fidivs
arpl
adc
mov
cmp
pop
xchg
clc
cwtl
jno
pop
xor
push
adc
jno
xor
jecxz
mov
xor
jle
xchg
pop
mov
xor
xor
fstpt
sbb
pop
jno
push
cmp
les
push
add
jp
movsb
push
rcrl
cmp
fistpl
andb
bound
adc
xor
aad
lds
add
mov
dec
jecxz
and
adc
xor
push
xchg
push
sti
mov
jg
adc
lahf
dec
aaa
scas
loope
aas
jle,pt
sub
xor
sbb
jnp
or
and
inc
mov
jl
sbb
ds
arpl
pop
add
hlt
popf
lods
mov
cmp
lret
jp
icebp
inc
add
cltd
dec
test
jmp
cmpsl
jmp
into
mov
arpl
pop
dec
mov
cmp
out
shlb
stc
in
pop
jg
or
movsl
sbb
jnp
lock
push
push
fnstcw
ret
mov
insb
add
lock
lret
mov
sub
lea
add
imul
sbb
fmull
xchg
lahf
loopne
jmp
out
ret
jecxz
fcomip
pushf
cmpsb
or
jo
and
fstpt
cmp
sub
fiaddl
xchg
es
popa
out
clc
jecxz
call
je
outsl
outsb
inc
dec
loop
jb
xchg
push
sub
ljmp
xor
xchg
sbb
push
or
jl
cwtl
or
das
adc
sarl
out
dec
jae
push
xor
scas
xchg
jnp
test
in
mov
sbb
mov
aad
pushf
icebp
shl
sub
lea
enter
jae
jbe
gs
mov
call
dec
inc
rorl
mov
negl
jecxz
sub
jne
fdivs
lcall
pop
pop
pop
lret
sbb
outsb
mov
out
mov
jecxz
gs
aas
in
cmpsl
cld
push
call
scas
push
mov
push
dec
insl
xchg
sbb
jecxz
pop
push
xor
mov
jae
popa
adc
inc
mov
pop
std
arpl
sbb
mov
sub
sub
loopne
inc
sub
shll
in
fidivrl
adc
mov
es
lock
hlt
xchg
xor
cmp
sbb
mov
inc
push
inc
sub
mov
repz
cli
mov
subl
sub
push
push
out
je
push
outsb
stc
fdivr
mov
enter
and
xchg
cmc
jl
inc
scas
das
testl
cmp
add
scas
pop
sbb
inc
movsb
adc
or
insb
sub
add
es
push
clc
out
or
xorb
dec
mov
addr16
or
push
call
mov
xlat
hlt
shrb
icebp
push
add
sub
xchg
mov
mulb
xchg
and
in
imul
push
mov
jge
mov
cli
ds
pop
cmc
sti
mov
sbb
cmp
fs
cmp
insb
ja
es
addl
adc
clc
add
test
cli
push
xchg
jbe
add
fwait
cmp
xor
jne
and
xor
call
mov
jb
adc
iret
notl
cmp
mov
and
sahf
scas
jge
mov
pop
cmp
xchg
loope
push
xchg
cmp
adc
ffreep
stos
push
cmp
jmp
push
imul
rclb
aam
sub
aaa
mov
dec
stos
dec
sbb
mov
cld
pop
cltd
js
fwait
dec
xchg
sti
roll
ret
sbb
call
cmpsb
js
shlb
cs
lods
mov
xor
cmp
mov
aas
test
mov
lahf
mov
orb
dec
imul
in
hlt
push
lahf
add
out
test
pop
mov
sub
sub
sub
add
fistps
movsb
cmp
xor
mov
mov
mov
mov
mov
in
jg
xor
in
ja
mov
cmp
scas
test
test
loop
test
jle
lahf
push
adc
push
dec
clc
mov
xchg
add
lahf
sti
mov
inc
mov
arpl
inc
test
int
xlat
xor
adc
inc
cmpsl
pop
loope
push
sbb
cltd
xor
push
add
mov
mov
aad
std
les
iret
xchg
inc
jb
inc
add
ret
dec
mov
dec
out
inc
push
mov
jo
lret
push
scas
rolb
mov
or
aas
cmc
inc
sub
push
dec
push
lret
js
es
es
sub
js
xchg
sbb
mov
xor
mov
mov
ret
inc
add
xorb
bound
ss
mov
repnz
stc
mov
rolb
aad
arpl
cmc
mov
and
sbb
sub
xor
in
jbe
adc
enter
test
xchg
add
xorb
mov
mov
stc
insb
sub
mov
jb
pop
sysret
int3
test
adc
and
nop
jmp
adc
xor
xchg
add
pmovmskb
cli
fiadds
jno
shrb
mov
das
jno
sti
pop
push
add
ret
add
je
in
add
rclb
bound
jno
jmp
in
mov
or
mov
ret
or
lea
and
and
sub
inc
pop
jae
out
mov
cmc
mov
icebp
dec
or
lds
fwait
mov
incl
rcrl
out
push
stos
sbb
xor
jne
stos
and
mov
inc
cmpsb
adc
out
rolb
ret
adc
lods
lcall
xchg
xor
jae
xor
sub
and
xor
or
rcrb
arpl
test
hlt
in
scas
cmp
lea
push
shll
ds
jecxz
mov
sub
sar
fsubr
pcmpeqw
loope
loope
or
jl
jmp
addb
sahf
push
pushf
or
push
dec
dec
loopne
insl
cld
cmp
pop
orl
movsl
mov
stos
xlat
cmp
push
inc
fstpt
js
and
mov
pusha
jle
xchg
jo
inc
popf
fdivl
pop
out
test
mov
outsb
dec
inc
push
xor
pop
mov
mov
push
scas
xchg
push
icebp
xchg
push
xchg
test
mov
sarb
andb
lahf
lods
clc
or
mov
outsb
jo
les
in
jns
pop
mov
fdivs
je
stos
pop
out
je
fnstenv
jge
xchg
mov
jae
pop
pop
bound
loope
xchg
push
das
mov
je
sahf
std
inc
add
dec
mov
pop
and
adc
sar
dec
pop
pop
clc
mov
add
rcrl
adc
sub
aad
cld
test
test
lahf
push
xor
pop
sub
dec
pusha
mov
out
mov
mov
jle
push
int3
xor
hlt
cmp
push
add
in
out
call
fisubrl
hlt
adc
push
test
in
push
mov
mov
pop
jg
push
or
xchg
mov
ret
push
and
call
mov
pop
movsb
and
pop
mov
jp
enter
and
out
mov
push
add
push
sbb
add
pop
popf
adc
and
mov
outsb
pusha
decl
lret
or
idivb
cmpl
insb
outsb
stos
sbb
call
shl
mov
je
bound
test
inc
jp
outsb
dec
xor
stos
pop
lock
mov
sahf
icebp
cmp
in
ljmp
push
popf
inc
sub
into
movsl
push
jg
arpl
mov
push
mov
cli
loope
cmp
pop
cmp
icebp
sub
int
or
mov
xor
mov
lods
clc
xor
inc
loope
jne
adc
sub
ds
or
jne
das
lock
inc
clc
gs
xor
mov
add
popa
adc
cmp
in
adc
and
jmp
jge
out
inc
cmp
xor
xor
sbb
add
popa
repnz
in
cmp
fs
adc
shlb
xor
nop
push
test
ss
or
add
adc
fcmovu
xchg
jp,pt
cmp
pop
push
sahf
clc
xor
sbb
inc
or
lret
jns
adc
mov
mov
cmp
fwait
stos
and
jo
fsubl
inc
aas
jecxz
ljmp
es
push
cmp
cmp
fwait
and
mov
call
mov
fidivrl
pushf
or
pop
xchg
ljmp
jo
fsubp
es
ds
inc
add
rorl
lods
cmpsl
shlb
into
cld
push
movb
pop
out
gs
lock
inc
test
pop
or
pop
imul
mov
jg
or
aaa
cmpsl
jmp
cli
dec
mov
push
sbb
or
clc
add
popf
cwtl
jne
pop
aam
out
aaa
ja
cs
loopne
jecxz
inc
addr16
shll
movsl
fidivl
dec
outsl
add
add
loope
inc
mov
and
sti
cmp
adc
daa
add
imul
movsb
push
pop
test
pop
adc
mov
xorb
adc
and
lods
mov
ja
std
ss
jne
xchg
js
lret
mov
mov
stos
iret
in
and
repnz
sbb
fmull
inc
sbb
xchg
push
pusha
fisttps
dec
cmpsb
fstps
pop
das
into
sbb
xor
pop
jae
sub
sbb
cmpl
push
xlat
int
jno
addr16
mov
loopne
fidivrl
rcl
pop
decb
fistps
stos
xlat
adc
jb
cmp
jne
jg
push
punpckhwd
aas
and
mov
in
dec
dec
mov
add
mov
jp
fst
out
lret
and
mov
out
outsl
xor
dec
jl
into
imull
push
inc
sub
pushf
push
inc
clc
cmp
push
xchg
cmp
in
cmc
out
push
mulb
sbb
sub
cmp
xor
stc
sbb
mov
adc
mov
dec
stos
add
ficoms
push
mov
test
xchg
arpl
add
pop
leave
mov
dec
mov
shlb
repnz
loopne
shll
out
std
dec
xor
in
cld
cmpsb
mov
jnp
cld
loopne
inc
data16
fimull
add
dec
mov
mov
fisubrl
sti
add
push
fnsave
or
out
aad
push
hlt
xchg
pop
ret
pop
jnp
mov
out
cld
xor
fsts
mov
addl
mov
adc
jl
mov
test
mov
scas
mov
sbb
lret
repz
inc
or
mov
test
fs
ss
mov
pushf
mov
pop
pushl
xchg
loope
fistps
mov
stc
xchg
and
jne
jecxz
xor
jo
std
xchg
incb
dec
movsl
jp
sbb
mov
cmp
mov
fisttpl
pop
or
scas
nop
out
data16
jge
dec
test
sub
sbb
adc
enter
les
add
rorl
outsb
cmc
and
mov
ja
mov
icebp
push
addl
enter
or
ret
cs
gs
rcl
xor
cmp
mov
jo
inc
sbb
pop
mov
xor
enter
insl
sub
movsb
push
js
add
outsl
xlat
xchg
test
pop
aas
and
inc
mov
pop
push
adc
or
icebp
sbb
push
push
ss
das
int
and
scas
jmp
stc
xchg
adc
int
popf
xchg
aas
push
or
cmp
sbb
xchg
pushf
bound
xchg
pusha
movsl
ror
dec
cwtl
pop
push
jg
ret
stos
es
jns
lret
cmp
out
popf
lret
xchg
popa
add
push
enter
sub
jmp
ret
inc
leave
adc
add
push
cmp
stos
mov
hlt
sub
add
jecxz
or
mov
in
xor
data16
hlt
test
inc
leave
dec
jecxz
loopne
movsl
add
xor
lods
xor
fisubs
pop
sub
xchg
sbb
push
jle
mov
ror
fbstp
mov
lret
push
test
ret
dec
mov
gs
mov
arpl
push
xchg
jmp
sbb
mov
adc
lock
daa
xchg
mov
stc
fidivrs
add
out
addr16
push
nop
int
push
imul
mov
mov
mov
or
pusha
and
into
int3
in
cmp
mov
divl
fidivs
adcb
cmp
adc
fcoms
dec
push
popf
mov
daa
cmp
fdivl
mov
call
jo,pn
mov
leave
and
loope
dec
pop
scas
xchg
sub
movsb
mov
lea
pop
daa
mov
lds
arpl
cmp
mov
dec
xlat
test
jg
inc
push
das
fisttpl
aas
lock
loopne
jbe
mov
out
pop
dec
and
sub
mov
lock
cltd
push
push
pop
add
cmp
lock
jbe
and
cld
clc
lea
adc
sub
mov
pop
pop
jne
jnp
lods
dec
jae
ds
dec
andl
cwtl
inc
pop
clc
int
jp
jecxz
mov
stc
push
pop
clc
icebp
out
xor
adc
jae
je
sahf
pop
sbb
or
in
adc
scas
mov
push
cmp
cmp
push
cmpb
lock
add
jge
mov
jne
pop
testl
cltd
popa
addl
mov
mov
mov
ffreep
hlt
xchg
enter
mov
popa
outsl
roll
int3
dec
inc
cwtl
xor
add
push
pusha
mov
xchg
iret
push
enter
add
lea
add
pop
arpl
jle
lea
pushf
scas
repnz
mov
mov
jbe
or
adc
aam
popf
fsubr
cmpsl
mov
mov
lret
mov
ret
das
or
stc
mov
and
dec
or
pop
sbb
leave
cmp
or
push
jo
and
dec
ljmp
gs
xor
mov
into
es
fnstenv
sarb
xchg
sbb
icebp
aas
add
pavgw
jo
lret
hlt
std
mov
jo
inc
sbb
mov
cld
add
repnz
fistl
fisubrs
cmp
clc
lret
xlat
mov
jle
pop
ja
push
lret
lock
std
xchg
das
repnz
jg
fiadds
sub
pop
cmp
xchg
push
mov
lahf
cmc
push
dec
xchg
inc
jb
cmpsb
sub
mov
ss
mov
fstpl
dec
es
into
out
scas
or
into
or
xchg
push
cmp
mov
dec
bound
mov
dec
sub
sub
dec
in
xor
es
cli
cmp
enter
inc
in
outsl
fstpt
aad
add
insl
and
xor
fmuls
stc
cwtl
add
mov
pop
push
loope
cmp
cmpsl
mov
jnp
inc
mul
adc
sbb
ret
dec
adc
aas
scas
xchg
inc
xor
cmp
jle
mov
cmp
dec
xlat
fldl
stos
movsb
mov
mov
rcl
mov
jae
xchg
ja
loope
inc
xchg
and
mov
andb
arpl
push
xor
daa
mov
cltd
jge
pushf
pop
jae
arpl
out
cld
xchg
jmp
fwait
add
mov
sbb
or
inc
add
dec
cs
push
mov
or
pusha
js
push
outsl
sti
jnp
pop
icebp
ds
jno
cld
sub
clc
fstps
and
adc
jl
pop
xor
dec
mov
jo
mov
andb
xchg
in
mov
pop
dec
jle
inc
inc
pop
pushf
lods
mov
test
inc
lods
shlb
insl
mov
xor
imul
mov
cmp
adc
cmp
dec
inc
movsb
jg
adc
xor
mov
dec
lock
int
xchg
fists
sbb
add
mov
test
fldl
jle
adc
jbe
xchg
out
jmp
jne
leave
fldenv
rcrl
pop
movl
xlat
in
lock
stos
cwtl
jecxz
cmpsb
dec
fisttpl
add
jp
add
sub
push
xor
out
xor
push
stos
cld
sbb
movw
adc
sahf
add
jecxz
fildll
mov
call
push
cmp
outsb
jg
iret
repz
pop
int3
sub
in
add
and
push
sbb
inc
lahf
xchg
out
or
in
shlb
sub
sbb
aad
lret
icebp
mov
movsb
out
aas
inc
mov
leave
cmc
mov
mov
cmp
pop
das
dec
sbb
inc
ds
and
shll
ss
movsb
cmpsl
push
jmp
fbld
incl
inc
xor
cltd
mov
push
clc
push
cmp
into
dec
inc
and
fwait
repnz
push
repnz
cmp
test
mov
test
mov
jbe
push
add
test
push
jno
fldcw
aam
mov
sahf
mov
loop
or
xchg
push
gs
jbe
dec
out
mov
xor
test
out
lds
lahf
jle
mov
push
or
loopne
inc
popa
call
imul
push
add
iret
fimull
mov
nop
xor
mov
pop
call
inc
push
addr16
sub
push
mov
test
aad
pushf
test
xchg
xor
pop
scas
jecxz
mov
push
out
pop
and
adc
cmpsl
das
adc
push
dec
push
roll
or
adc
movsl
push
push
cltd
aas
cmp
jae
imul
adc
pop
ss
leave
in
mov
push
scas
lock
jl
inc
push
mov
adc
cs
dec
or
mov
jno
xchg
sahf
push
stc
mov
cmpsl
jns
xchg
mov
mov
icebp
sub
jo
out
mov
xchg
cmp
mov
les
addr16
jle
push
xor
add
xor
jp
pop
mov
outsb
arpl
pop
mov
dec
aas
bound
pop
and
pop
test
jae
or
leave
cld
cmp
jbe
lret
popf
add
dec
push
cmp
jae
scas
jp
pop
mov
xchg
sbb
and
shrb
aaa
mov
lea
or
mov
cmp
and
and
adc
xor
lcall
arpl
cmp
jns
lret
inc
push
sub
xchg
cmp
pop
sbb
jl
push
popf
test
fnstcw
cltd
repnz
fs
and
daa
shrl
inc
or
cmpsl
insl
jg
pushf
sbb
and
mov
maxps
push
mov
xor
mov
push
fdivrs
popa
stc
adc
push
dec
xor
xchg
xchg
fwait
or
push
dec
lods
scas
rsqrtps
data16
andl
out
lods
test
and
ds
fdivrl
and
pop
sub
mov
stc
out
jo
push
mov
push
loop
push
sbb
dec
test
mov
push
mov
dec
test
ffree
mov
or
cmp
mov
cmp
jns
addr16
sti
sub
pop
mov
xchg
inc
or
mov
xor
std
outsb
pop
in
sub
and
mov
jecxz
adc
dec
or
les
sbb
mov
cmpsl
mov
cmp
std
and
mov
imul
fs
sbb
cmp
mov
inc
inc
cwtl
popf
push
lret
push
call
and
stc
mov
daa
push
sbb
mov
call
nop
inc
lret
stc
cmp
nop
cmp
shlb
roll
je
push
call
in
sbb
es
leave
add
inc
fstsw
mov
add
pop
hlt
push
pusha
lods
add
movsb
gs
sub
popl
insl
mov
popf
pop
add
pusha
add
in
add
jb
jle
adc
sbb
dec
jmp
inc
inc
rorl
hlt
test
push
outsb
jg
cmp
mov
movsl
mov
loopne
xchg
jae
pushf
mov
add
ds
push
push
jb
add
aaa
add
punpcklwd
in
cmc
into
sbb
dec
cmp
adc
movsb
nop
mov
mov
pop
pop
xchg
dec
mov
iret
mov
in
mov
push
jge
out
or
jae
sbb
std
or
shrl
add
test
and
subl
push
jg
mov
xor
push
add
test
add
adc
incl
and
addr16
aaa
lods
inc
inc
sub
mov
jge
add
mov
mov
test
pushf
mov
cld
inc
repz
mov
outsb
fisttpll
cmpsb
scas
mov
mov
push
fidivl
sub
nop
pushf
xor
sbb
jl
leave
sub
mov
dec
adc
add
jle
enter
loope
adc
sahf
lods
mov
adc
adcl
or
mov
lcall
cltd
mov
sub
inc
push
mov
mov
outsb
and
sub
into
sbb
out
mul
mov
cli
rcrl
inc
sbb
dec
lock
mov
sub
inc
mov
or
fbld
ficoml
push
or
xor
mov
lea
and
nop
lds
push
psubusw
fwait
inc
sbb
sarb
call
fcmove
fmull
sub
jo
xchg
je
pop
fwait
and
mov
mov
dec
in
mov
mov
std
in
jno
ret
push
idiv
push
push
flds
out
out
dec
js
out
cmp
push
aam
pop
ret
loope
adc
dec
out
icebp
cmp
mov
xor
push
lahf
sbb
int3
and
mov
sub
or
out
rolb
and
imul
mov
es
push
fimuls
xchg
and
fmuls
dec
mov
pop
in
vmovdqa
into
insb
mov
out
cmpsb
imul
leave
int3
pop
roll
sub
arpl
or
jle
adc
arpl
inc
cmp
loope
pop
cli
ljmp
push
lock
sbb
test
sbb
mov
dec
movsb
xor
fs
and
mov
enter
roll
lahf
jl
xor
mov
fistl
insl
mov
and
jnp
jmp
ss
xor
mov
xor
push
mov
mov
in
shl
lods
dec
imul
lds
pop
pushf
imul
xchg
fsubrl
lea
outsb
jp
daa
push
add
std
pop
cmp
or
cmp
xor
mov
fcmovne
jb
stos
mov
stos
push
cltd
jmp
push
test
or
adc
fldenv
add
idivl
shlb
fcomp
xchg
ret
idiv
inc
pop
repz
jl
xchg
mov
or
repnz
mov
insl
mov
frstor
pop
push
jns
sub
sub
lds
ja
cs
cmp
xchg
xor
cs
daa
mov
xchg
gs
std
inc
add
and
inc
cmp
mov
pop
outsl
cwtl
lahf
inc
push
add
shll
adc
in
jbe
orl
call
cmpsb
xor
orl
inc
les
out
je
and
mov
pop
outsl
inc
mov
stos
sbb
dec
push
mov
loopne
std
and
xlat
jmp
xchg
repz
mov
int3
std
mov
xlat
jg
pop
jg
mov
dec
cmp
cltd
push
stos
dec
loope
mov
sbb
and
mov
mov
jle
xchg
stos
mov
das
insb
bound
sarb
jae
adc
or
lret
jnp
or
fdivl
mov
sbb
ret
and
cmp
cmp
sub
js
into
pop
fsubl
popf
sti
pop
int3
jl
xor
clc
test
rolb
dec
outsl
jmp
fidivl
add
sbb
enter
fs
addr16
fistps
xchg
or
outsb
filds
lahf
test
dec
mov
addl
push
shll
jge
inc
int3
lcall
push
lods
cltd
fsubl
pop
inc
mov
dec
daa
jl
or
out
xor
sub
adc
iret
movb
outsb
xchg
mov
mov
jne
jns
adc
daa
in
sbb
mov
rcll
cltd
sub
cmp
leave
insb
and
js
rorl
or
pop
ret
xor
stc
push
dec
jne
lock
ja
inc
rcrl
adc
addr16
cmp
mov
aaa
or
addb
sahf
mov
mov
mov
out
mov
fxch
add
adcl
int
aam
movsl
xchg
mov
fisubrl
sub
stc
mov
ds
xchg
fnstenv
dec
loopne
and
insb
jl
rorl
into
dec
push
sub
pop
dec
inc
cld
adc
fiaddl
or
fidivs
repz
cmpb
fbstp
shll
inc
xchg
push
pop
xchg
mov
rolb
push
cmpsl
fwait
popa
out
pusha
jo
test
push
jmp
add
cmc
mov
xor
jb
rclb
mov
adc
mov
icebp
into
js
fstp
cmp
ljmp
out
adc
push
and
mov
mull
cmpsl
mov
mov
aad
lods
inc
pop
gs
std
inc
mov
fs
gs
dec
test
xchg
adc
mov
lahf
lock
bound
add
mov
insl
dec
jne
ficomps
aam
pop
in
add
arpl
xchg
jo
cmpsb
pop
je
mov
and
fdivs
mov
adc
or
insl
jne
mov
dec
inc
xchg
jmp
negb
shlb
clc
mov
data16
dec
mov
cmc
stos
outsb
mov
adc
jns
popf
andl
jg
jmp
rcll
fs
out
insb
pop
push
jbe
stc
xchg
out
mov
lcall
mov
push
cld
xor
mov
cld
add
mov
lds
decl
fdivl
lods
jl
pop
in
call
out
xor
das
dec
mov
inc
push
push
add
sub
and
push
cmc
mov
mov
add
sub
movsb
mov
cmpl
neg
pop
mov
mov
mov
rclb
test
adc
inc
fwait
dec
lret
push
cld
cmp
push
add
jbe
rorb
cwtl
xchg
aam
arpl
lds
leave
or
adcw
mov
mov
cmp
push
mov
cmc
cmc
dec
cmp
ss
pop
mov
fisubrs
aam
sub
lahf
shl
or
xor
add
push
movsb
popa
push
mov
test
out
push
int3
sub
clc
jmp
pop
ljmp
fnstenv
add
mov
xchg
pop
jno
adc
es
pushf
inc
out
pop
fisubrs
jne
js
push
mov
cmp
nop
mov
sbb
sbb
inc
cltd
xchg
dec
ds
fmul
xchg
jns
rcr
lds
or
xchg
popf
inc
ljmp
xchg
cmpsb
push
adc
cmp
in
sarb
sub
fldcw
jl
jb
cmp
jbe
xor
or
adc
and
jl
loopne
sub
stos
fstps
push
mov
cmpl
sbb
dec
jmp
push
dec
xor
aaa
clc
repz
inc
ret
and
mov
mul
gs
loopne
xchg
and
jo
sbb
or
cmpsl
mov
mov
outsl
cltd
popa
int3
leave
repnz
push
or
fidivrs
xchg
out
insb
cmpsl
adc
in
or
das
mov
into
sbb
jle
popa
int
imul
lret
inc
mov
fwait
mov
insb
add
cmp
leave
adc
pop
stc
test
or
cmpsb
mov
inc
jle
xchg
dec
mov
and
mov
mov
push
insl
fs
pop
std
or
mov
fisubs
roll
xchg
push
sub
add
xchg
or
xchg
pop
stos
mov
mov
aas
repnz
mov
ficomps
mov
cmp
pop
xor
into
pop
ja
pop
mov
mov
lret
mov
mov
adc
jg
sub
das
mov
test
xchg
jg
fs
in
mov
sub
pop
sbb
pushf
imul
cmp
mov
inc
stc
and
cmp
fsubrl
call
xchg
xchg
in
stos
repz
icebp
or
pop
vmovlpd
int
mov
test
jne
push
ror
fwait
mov
and
lahf
pop
sbb
cli
mov
dec
aam
adc
aaa
jno
sbb
dec
lods
dec
jne
dec
lcall
mov
sub
adc
jg
loop
sbb
shl
fyl2xp1
dec
cmpb
icebp
ja
adc
mov
popa
mov
mov
lea
test
push
and
lret
push
enter
pop
cmp
jmp
fisubrl
test
arpl
jbe
shll
push
fimull
movsb
xchg
add
into
int
xor
out
jnp
pop
mov
ret
ljmp
or
sub
mov
sub
enter
mov
mov
jl
pop
sarb
and
add
ljmp
add
scas
adc
adcb
aam
outsl
leave
dec
xchg
mov
loopne
ja
mov
push
dec
dec
or
sub
sbb
cmp
add
aas
add
inc
sub
add
adc
int
test
jecxz
std
mov
sub
push
lock
fadds
in
push
ljmp
pop
loop
cmpsl
mov
and
mov
mov
xor
es
cmpsb
lcall
or
mov
enter
cmpsb
cld
push
stos
std
adc
bound
push
mov
jnp
stos
add
loope
mov
popf
leave
cmpsb
and
mov
jns
push
push
aad
cltd
sbb
cmp
adc
repz
inc
mov
jle
mov
mov
fstp
daa
cmc
fidivl
rcl
sub
nop
testl
stos
or
dec
adc
sbb
push
lahf
ficompl
push
dec
adc
xor
pop
in
loope
jne
out
xor
push
jp
sub
stos
mov
sub
mov
out
data16
mov
fildl
fbld
popa
aam
jp
rclb
je
jg
js
fcoml
mov
aaa
inc
and
inc
inc
xlat
xor
int
inc
stos
mov
filds
fistps
mov
mov
enter
jns
movsl
sub
push
fisttps
mov
lea
rcrl
sbb
sti
call
dec
aam
push
xchg
call
les
pop
adc
bound
sarb
mov
imul
or
jl
or
pop
push
clc
jns
daa
xorb
mov
out
xor
mov
inc
icebp
xchg
xor
adcl
mov
leave
lret
es
icebp
or
incb
int
outsl
xor
out
into
lea
pop
mov
popf
dec
and
push
pop
add
adc
nop
leave
roll
add
mov
imul
pop
ja
add
inc
dec
sbbb
adc
fcomps
ljmp
imul
add
leave
mov
xchg
ret
or
mov
jmp
lret
jbe
jo
fwait
out
jge
fs
pushf
lret
jns
ja
push
adc
dec
pop
movsl
ret
dec
dec
sbb
add
lcall
cmpsl
loop
or
pop
fimuls
or
xor
call
andb
mov
inc
adc
jb
inc
and
fdivrs
mov
sbb
in
in
hlt
inc
js
sub
push
jb
or
imul
repnz
cmp
xchg
sub
add
fmuls
jp
xor
inc
jge
adc
pop
or
push
loope
femms
pop
fmulp
in
clc
aam
lcall
or
inc
adc
mov
iret
mov
lods
stc
lods
setle
push
sub
movsb
stc
addl
test
push
push
in
cmp
lahf
mov
dec
cmp
xchg
and
stos
mov
add
mov
cmp
jb
mov
jns,pn
fstpt
loope
mov
bnd
rcrb
je
add
xchg
jbe
mulb
mov
int3
fs
shll
cwtl
add
jp
inc
nop
push
push
inc
and
fisubrs
jge
sbb
loopne
addr16
fcoml
cmc
ljmp
dec
inc
sub
dec
out
sti
inc
push
cmp
fisttpll
ljmp
xchg
xchg
int3
push
push
dec
ja
in
mov
sbb
test
mov
aam
jl
jmp
mov
adc
and
adcl
pop
cmp
jp
dec
adc
div
mov
mov
and
xor
test
mov
and
pop
pop
push
int3
xorb
mov
cs
loope
dec
xor
imul
pop
or
mov
jl
jecxz
in
stc
adc
test
mov
cmpsl
clc
in
xchg
mov
sar
adc
add
js
lahf
adc
pop
mov
mov
cwtl
cmp
fists
and
call
je
test
cmpsl
sbb
fs
xchg
adc
pop
jecxz
push
dec
les
push
fildll
es
jg
inc
out
jae
and
pop
push
pop
cld
inc
mov
leave
outsb
pusha
xor
out
into
inc
sub
mov
push
jno
fnsave
push
aaa
jne
outsb
in
jo
pop
jg
or
sbb
jns
xchg
iret
out
jle
fbld
aaa
ljmp
xor
mov
mov
xchg
call
jbe
mov
and
fistpll
test
ds
xor
imul
cs
nop
adc
dec
mov
sub
lods
jle
xlat
les
pop
js
push
xchg
lods
in
shlb
push
pushf
mov
test
dec
mov
stos
xchg
insb
inc
fcomps
and
addr16
das
xchg
out
out
in
in
ja
push
test
pavgw
mov
mov
xor
icebp
dec
daa
roll
add
shll
test
sbb
or
scas
inc
movsb
xor
mov
mov
dec
jmp
cmp
ss
adc
add
adc
dec
dec
xlat
ss
test
imul
ret
sbb
or
mov
adc
adc
fadds
pop
sbb
in
mov
aad
jl
push
roll
lods
dec
jmp
mov
and
fldln2
mov
rolb
ds
dec
clc
clc
inc
xorl
nop
xor
dec
outsb
loopne
add
cltd
cs
stc
cmp
fadds
fs
jbe
dec
aas
sub
push
test
mov
add
popf
test
xchg
ljmp
pop
cmc
insl
nop
ss
adc
pusha
jnp
cmovnp
adc
divl
or
push
jno
cmp
ret
iret
jo
dec
xchg
dec
adc
sub
mov
xchg
int3
lods
mov
nop
fildl
sub
inc
sbb
addr16
and
gs
mov
inc
loope,pn
xlat
out
cmp
fsts
sbb
les
lret
push
pmaxub
mov
inc
mov
add
or
loope
or
outsl
jmp
push
imul
xor
pop
xchg
mov
mov
and
pop
add
cmp
fldt
mov
sub
insl
pusha
or
push
push
outsb
sub
dec
std
sti
je
xor
adc
out
insb
popf
ret
or
dec
push
push
mov
jb
mov
cmp
and
out
xor
xchg
or
fsubr
and
pushw
sub
jge
inc
jae
shl
cmpsb
fwait
ret
subb
arpl
loope
adc
bound
xor
lods
and
xor
mov
mov
mov
data16
dec
sbb
test
jecxz
mov
cmp
and
call
push
nop
aam
xor
adc
push
fildl
fisttpll
mov
test
outsl
std
ljmp
ficoms
mov
shrb
sti
mov
and
ret
lcall
shrb
jae
addl
pop
icebp
loop
mov
and
pop
and
dec
and
pop
cs
jno
stos
jne
jl
mov
adc
xor
mov
dec
xor
xchg
adc
sbb
inc
lds
mov
mov
sbb
icebp
fnsave
ja
ret
add
scas
push
pusha
orb
int3
xchg
xchg
out
sti
leave
data16
cmp
inc
jecxz
jo
mov
fwait
inc
aas
hlt
jge
pushf
lods
imul
push
inc
cltd
cmp
dec
cmc
pusha
test
mov
and
sub
add
es
or
imul
dec
aad
loopne
sahf
adc
std
jp
cli
jge
leave
in
jp
adc
dec
in
test
sarl
push
sti
mov
imul
and
add
lods
jecxz
push
out
inc
jae
fs
push
sarb
xor
sub
repnz
mov
pushf
outsl
push
aam
mov
les
cld
cmp
add
mov
lock
ljmp
into
sbb
mov
jne
cmp
sub
mov
shll
add
test
push
lds
scas
addr16
lods
pop
jl
sbb
popa
jmp
lahf
das
mov
mulb
lods
fucom
jbe
in
loopne
cli
pop
inc
mov
imul
add
adc
in
xchg
push
flds
sub
add
jo
scas
and
sub
add
and
loopne
cmp
cwtl
ret
push
add
sub
mov
ffree
roll
dec
aas
das
mov
dec
mov
cwtl
mov
je
mov
int
ret
in
cltd
shll
ljmp
cld
push
dec
outsb
out
sub
sbb
dec
xor
push
jnp
pop
lret
mov
xchg
jae
inc
ja
or
test
xchg
mov
xor
mov
test
xor
sub
add
cmp
lods
sti
insl
mov
nop
jge
xchg
push
test
cmpsl
rolb
stos
xchg
push
inc
mov
fbstp
mov
sbb
mov
lods
stc
xchg
ss
cmp
aam
or
jae
shrb
jg
lret
push
inc
inc
lret
and
loopne
mov
dec
mov
mov
imul
add
xchg
cmpsl
xchg
cli
je
pop
negb
jle
inc
mov
push
andl
push
cmpsb
push
sub
icebp
cmpsb
inc
or
push
pop
or
bound
cmp
mov
cs
vmread
xchg
int3
das
mov
pushf
orb
push
cmp
xchg
ljmp
xchg
adc
mov
mov
cmp
push
lahf
xchg
jno
xchg
mov
pop
cmpsl
mov
adc
rorl
rol
push
enter
scas
sbb
rcrl
outsb
arpl
jl
daa
icebp
dec
pop
into
movsb
push
jo
ret
jb
loope
repnz
sub
sub
adc
add
sbb
xor
out
pop
push
push
fld
xor
dec
test
movsl
mov
push
and
push
sub
int3
jno
sub
inc
leave
jmp
test
add
mov
and
xchg
das
fs
lods
iret
test
xlat
data16
out
mov
mov
out
pop
popa
shll
jae
xor
clc
mov
pop
mov
rcrw
jb
sub
out
fsub
jb
cli
mov
cmp
push
jge
mov
jecxz
lods
jge
pop
sub
jno
fdivs
jg
mov
jl
fcmove
test
push
jg
aas
add
or
push
leave
scas
loopne
in
test
mov
cmp
push
je
add
test
addl
testb
jnp
data16
adcb
fcmovb
mov
sbbb
jl
shlb
xor
push
dec
fdivs
mov
loop
xchg
sbb
sub
pop
mov
fstl
xor
fmull
popa
bound
jp
cmp
jge
xor
add
mov
or
mov
imul
addr16
cmp
mov
or
sti
movsb
adc
mov
xor
and
or
sub
xorl
iret
add
int
sbb
sti
aaa
test
enter
push
cmpb
xchg
push
push
aam
push
push
aas
std
mov
shr
stc
inc
sbb
xchg
xor
hlt
or
mov
pop
mov
jnp
pop
cmp
add
test
mov
jnp
mov
add
aas
mov
andl
xchg
cltd
pop
ucomiss
pop
lcall
and
add
add
pop
push
sub
cwtl
cmpl
nop
or
cmp
push
cmpsl
mov
sti
mov
pushf
fs
movsb
lahf
je
ficompl
adc
gs
inc
dec
out
adc
decl
jno
adc
pop
aam
add
into
loopne
or
inc
stos
inc
scas
xchg
gs
aaa
sub
pop
sub
loope
mov
ss
xor
popf
aaa
mov
fs
shll
push
xor
ret
inc
adc
xor
cmp
jle
sbb
mov
pop
scas
and
inc
push
and
xchg
and
mov
mov
das
int3
fsubrs
pop
adc
mov
sub
in
add
lahf
inc
out
xchg
std
std
popf
cmp
inc
outsb
mov
out
lods
call
ss
xchg
into
mov
inc
out
imul
hlt
dec
movsl
push
or
aaa
pop
fstpt
mov
mov
enter
shlb
cwtl
and
data16
std
dec
jge
adc
jle
pusha
outsl
sbb
or
loop
adc
mov
jne
cwtl
mov
das
sbb
ret
insb
je
flds
sub
mov
push
leave
lahf
and
xchg
pop
fisttpll
outsl
jmp
es
ret
loope
pop
sbb
aas
aam
inc
aam
pop
cltd
shll
pop
std
shr
outsl
dec
loope
cmp
les
in
mov
loop
movsb
cmpsb
jae
stc
xchg
aam
cwtl
popl
or
shlb
hlt
in
jmp
insl
mov
sbb
pop
int
pop
xor
movl
add
mov
mov
repz
mov
inc
repnz
cltd
mov
and
or
ja
jne
nop
lods
or
mov
adc
inc
dec
lcall
jecxz
add
inc
pop
push
push
adc
xchg
cmp
fiaddl
cltd
lods
std
push
mov
or
dec
jg
jmp
push
ret
jmp
or
lea
cmpsl
inc
sub
push
repnz
xchg
jbe
test
ret
adc
iret
into
xchg
or
add
scas
jmp
jo
xor
stos
sub
cli
pop
pop
adc
sarl
pop
lahf
movsl
cmp
add
loopne
cmc
add
pop
dec
jmp
int
nopl
aad
mov
ret
out
mov
add
test
fldln2
sub
and
call
mov
pushf
dec
ja
enter
ret
in
out
sub
mov
and
xor
call
mov
shrl
test
mov
inc
pop
int3
sub
push
incl
enter
mov
cli
out
mov
fists
inc
push
push
aaa
inc
loope
test
mov
pop
stos
cli
inc
nop
jmp
rorl
and
ja
or
mov
push
sbb
ja
mov
subb
test
pusha
mul
fcmove
dec
idiv
pop
sbb
ret
in
iret
fsubs
in
xchg
push
adc
mov
adc
je
arpl
bound
ror
mov
xlat
push
dec
pop
sbb
inc
push
dec
xchg
mov
pushf
xor
insb
imul
cmpsl
sub
jbe
cmp
decb
lock
sub
repz
jne
or
mov
jne
mov
inc
out
xor
mov
jp
mov
or
sub
cmp
aas
pop
fs
fldenv
cmp
mov
mov
aas
imul
mov
loop
repz
aas
data16
sti
add
and
rclb
xchg
sbb
jae
fs
popf
sbb
jmp
in
jg
push
sub
jae
adc
or
push
addw
shll
add
daa
xchg
stos
outsb
arpl
or
xchg
push
dec
push
dec
popa
iret
sbb
xorl
ret
mov
stos
inc
sub
xchg
pop
stos
cli
sbb
mov
mov
into
sub
popf
ljmp
jns
rorl
jecxz
mov
adc
leave
pop
jae
mov
inc
or
lock
arpl
and
adc
mov
mov
scas
dec
inc
xchg
xchg
popf
push
inc
ret
push
outsl
cmpsb
dec
leave
jbe
xor
mov
das
call
sbb
mov
repz
jp
scas
inc
out
push
test
fsubl
mov
push
pop
xor
scas
out
mov
xor
xchg
lock
dec
cmp
bound
dec
jns
call
outsb
in
sbb
push
iret
lods
pop
dec
lods
outsb
pop
cwtl
bound
and
jns
sub
adc
shr
sbb
mov
mov
icebp
scas
sti
addr16
ret
cwtl
inc
sub
out
adc
xchg
or
sbb
pop
mov
mov
xor
out
pop
iret
clc
pop
mov
sub
pushf
adc
out
cli
cmp
jl
and
inc
shl
divb
xor
dec
les
xchg
pop
inc
imul
mov
xchg
mov
test
or
and
jp
mov
icebp
mov
and
mov
pop
test
push
mov
jae
mov
movsl
loopne
dec
sub
mov
jnp
sub
or
jg
test
cwtl
fidivs
test
sbb
adc
rorb
push
xlat
pop
adc
loopne
jmp
hlt
cmp
push
movsl
push
loop
jns
xor
push
fwait
sahf
add
ss
cmp
xchg
int
jb
out
xchg
xlat
inc
xchg
test
jmp
push
inc
xchg
xchg
jmp
lods
fucomp
jle
mov
push
xchg
aas
movb
pop
jbe
mov
iret
or
or
aad
rcrl
xor
fdivl
pusha
sbb
test
inc
inc
xchg
ss
xchg
pop
adc
movsb
out
pop
jl
and
sbb
pusha
shll
out
push
dec
enter
jge
daa
jbe
xor
xchg
inc
xchg
maxps
sbb
mov
std
flds
mov
xor
repnz
dec
adc
faddp
cmp
sbb
in
jo
in
and
push
movsl
pop
inc
fmull
stos
loopne
push
and
shl
xchg
xor
xchg
mov
fwait
aaa
inc
push
xorb
push
imul
mov
ja
cmc
sbb
jge
sbb
popf
test
cmpsb
fst
sub
mov
xchg
jmp
xchg
sarl
inc
mov
push
adc
mov
or
popa
testb
adc
outsl
mov
pop
ljmp
sahf
push
push
adc
xchg
xor
scas
mov
jnp,pn
and
mov
sub
mov
and
lret
xchg
mov
int3
adc
subb
repz
xchg
adc
dec
shrb
loopne
vmovaps
jb
movsb
ljmp
inc
inc
cmpsb
iret
push
pop
dec
or
push
clc
outsb
dec
aad
cmpb
add
jmp
jle
cwtl
jp
push
ljmp
sub
fsubr
pop
orl
sub
push
add
sti
stc
rclb
fsubl
mov
leave
dec
fcoml
jb
and
iret
out
scas
aam
jg
push
pop
pop
or
or
dec
fstps
sub
bound
or
enter
jp
scas
insb
xchg
rcrb
mov
call
xchg
xor
sub
mov
js
sub
clc
xor
mov
es
add
mov
sahf
jle
das
lea
jae
loop
dec
sub
scas
imul
lods
dec
cld
or
mov
iret
setnp
test
jge
int
mov
or
cmpsl
insb
adc
jge
mov
jmp
cmp
in
xorl
xchg
add
inc
jbe
or
imull
or
inc
inc
aam
scas
push
shlb
adcb
xchg
outsl
dec
clc
ljmp
jbe
inc
test
not
fcomp
pop
lods
leave
or
fmuls
aam
bound
or
mov
xlat
loop
cli
repz
mov
loope
push
jo
jmp
adc
dec
jnp
cmc
push
lahf
xchg
ss
sahf
out
lods
sbb
xchg
sbb
stos
cmp
or
out
arpl
pop
jns
mov
psubusw
lock
repz
movsl
add
pop
mov
scas
xor
mov
ror
inc
iret
sub
jns
jecxz
push
jnp
test
inc
mov
adc
xchg
sbb
mov
dec
out
stc
inc
call
xor
test
stc
mov
inc
sub
arpl
cli
or
mov
dec
xlat
adc
sub
dec
or
pushf
mov
negb
vshufps
sbb
mov
shrb
in
pop
adc
push
inc
js
dec
mov
cmp
in
xor
sbb
pop
ljmp
je
jg
notb
mov
dec
dec
xchg
bnd
cmp
cs
dec
mov
pusha
pop
pop
xor
popa
addl
dec
es
mov
std
test
fisubrs
outsl
xlat
mov
mov
cmp
scas
pusha
inc
push
xchg
mov
aaa
xchg
xor
or
push
scas
pusha
xor
call
fmul
mov
in
rcl
cmp
daa
pop
jb
sub
push
popf
lock
jo
and
push
movsb
lock
jecxz
fwait
mov
mov
shrb
pop
xchg
sti
xor
push
flds
mov
xor
in
lcall
and
inc
push
lahf
rolb
jl
pop
and
sahf
loope
cld
push
outsl
add
cmp
pop
jg
ljmp
repnz
pop
lret
sub
out
test
scas
nop
stos
dec
nop
loope
out
sub
mov
nop
dec
loope
mov
mov
in
xor
dec
imul
sbb
cs
xor
mov
jp
lret
push
inc
jp
ret
stos
lds
sub
into
xlat
vmread
icebp
jb
pushf
imull
insl
loop
cmpsl
aaa
push
fstl
cmc
js
mov
out
jp
jp
jge
in
in
jae
leave
adc
push
cmp
pop
xlat
into
push
cmp
add
inc
sbb
jne
add
daa
xchg
and
mov
push
aam
outsl
push
jnp
fmul
inc
movsb
xor
fcmovb
out
adc
cmp
adcl
push
test
and
and
nop
int3
dec
sub
or
nop
test
scas
sahf
mov
push
ret
xor
add
push
push
sti
in
or
push
pushf
mov
add
loopne
cld
push
lea
inc
push
push
ds
lock
int3
mov
cli
out
pop
iret
sub
movsl
mov
mov
nop
mov
mov
xchg
push
push
xchg
js
push
jb
loop
cld
add
sbbb
imul
pslld
addr16
push
adc
mov
ret
add
orb
sbb
fdivr
ljmp
mov
and
repz
loopne
cmc
in
aam
loop,pt
int
in
shrl
pop
std
xlat
inc
push
fistpll
mov
inc
lods
xchg
ja
jns
in
dec
pop
lahf
push
test
cltd
imul
test
jg
cs
shlb
flds
lods
mov
fisttpl
jecxz
and
ret
mov
push
scas
jns
fs
je,pt
stos
sub
mov
push
mov
mov
mov
lods
dec
jecxz
hlt
in
cmp
ja
mov
aam
push
popf
jae
jmp
pop
add
push
jl
pop
jno
cmp
ljmp
stc
lret
push
sub
jg
xchg
lods
pop
in
dec
in
sub
imul
fs
aam
popa
mov
cs
push
out
in
scas
push
loope
movl
xchg
or
add
out
shr
pop
adc
ljmp
and
orl
inc
mov
xor
cmpsl
test
inc
adc
scas
sub
int
sti
mov
sbb
add
push
orl
scas
jbe
les
repz
iret
lds
inc
lcall
fidivs
mov
lods
inc
xchg
pop
push
push
dec
cli
cmp
push
push
cmpb
pop
adc
mov
jle
idivl
sub
jmp
jne
out
xorl
data16
sub
cmp
or
xor
sub
mov
aas
push
jp
sbb
and
test
scas
or
sub
ss
packuswb
and
cmp
out
adc
loope
call
sbb
push
or
lret
dec
loopne
pop
push
test
hlt
gs
testl
sub
push
cli
xor
sbb
out
filds
repz
sarl
imul
std
mov
nop
cltd
fwait
sub
lea
lds
push
addl
sarb
sub
cli
xchg
rcrl
sub
jle
cwtl
xchg
dec
pusha
fstps
mov
inc
inc
ljmp
sub
daa
mov
lea
dec
push
iret
jg
add
cli
jp
inc
aad
mov
shrl
mov
lcall
jecxz
stos
stos
test
scas
mov
stos
cmp
pop
pop
fildl
push
out
insb
dec
dec
push
or
pop
enter
jbe
call
inc
in
testb
dec
imul
sub
pop
pop
adc
addr16
adc
les
xor
imul
insb
xchg
nop
and
mov
mov
repnz
xchg
adc
lcall
lret
test
loopne
pop
cmp
lods
push
mov
iret
jno
stc
popf
shr
adc
sti
mov
push
imul
or
in
sub
push
insb
mov
lea
xchg
movsb
mov
jge
sub
inc
shll
insl
cmp
pop
lods
xor
neg
push
test
pusha
push
inc
in
xor
repnz
push
mov
pop
mov
xor
ljmp
pop
cltd
mov
xchg
test
clc
jg
sbb
jnp
lret
mov
inc
loop
xor
or
jg
dec
mov
or
add
mov
cmp
mov
call
mov
dec
mov
popa
clc
outsb
or
or
stc
xor
lret
xor
sti
incb
mov
and
mov
sbb
das
dec
das
repz
mov
push
xor
pop
xchg
inc
daa
push
mov
ret
push
cmp
cmp
pop
mov
jns
stc
sub
cmp
pushf
addr16
jg
and
dec
repnz
or
and
xor
and
cmp
mov
das
arpl
mov
outsl
aas
pop
or
inc
subl
rorl
lods
dec
lret
xorb
rorb
sub
lcall
mov
ss
scas
push
add
push
in
adc
lock
xor
jae
jge
mov
sbb
fistl
cmp
jp
loope
pop
cld
push
pop
icebp
cmp
adc
push
pop
cmc
fldl
mov
add
pop
xor
sahf
push
test
insb
ja
fsubrs
adc
jno
mov
ret
rcl
lahf
int3
mov
and
adc
sahf
and
push
or
mov
xchg
pop
mov
mov
and
or
mov
adc
jle
dec
cmp
fwait
imul
fidivl
mov
jae
nop
hlt
test
xor
f2xm1
loopne
adc
popa
repz
sbb
scas
cmpsb
push
adc
cmp
jmp
std
movsb
cmpsb
cmp
pop
mov
jae
jmp
dec
dec
inc
add
mov
popf
lds
in
push
outsb
xor
push
stos
nop
and
add
add
in
xchg
sub
jge
out
loopne
push
jmp
int
mov
dec
xor
push
fldenv
xchg
imul
repz
sbb
ds
lock
xchg
out
mov
rcrl
mov
mov
cmpsl
test
jo
cmc
addb
sarl
push
ja
dec
jl
inc
sti
jns
inc
cmp
ss
sbb
fmuls
decb
hlt
fcoms
dec
shlb
clc
xchg
sub
arpl
cmpsl
rcrb
inc
inc
sbb
mov
test
add
popa
push
fsubl
sarl
xchg
mov
ljmp
jge
sub
mov
dec
jge
fists
divl
movsb
dec
and
shll
js
inc
sti
cmpsl
jne
sbb
xlat
push
shlb
mov
cmp
sub
mov
shll
and
movsb
in
inc
out
rcrl
adc
pop
cmp
push
add
lock
enter
pand
inc
cmc
mov
push
das
loop
imul
inc
mov
mov
mov
lea
movlps
sbb
scas
sbb
je
add
mov
lea
xor
cld
add
mov
mov
xorl
inc
cli
repnz
cmp
sub
xchg
jl,pt
shl
and
adc
dec
push
aad
inc
popf
loop
push
add
sbb
rcl
sub
loop
cmpsl
out
sub
ficoml
shrl
add
or
xchg
mov
dec
lds
mov
in
jle
inc
pushf
insl
ret
add
bound
outsb
pop
mov
fwait
mov
inc
pop
add
xlat
lods
clc
jne
int
cmpsb
sub
inc
or
adc
pushf
cmpsl
imul
mov
mov
mov
cmp
in
push
dec
xchg
adc
test
cmc
sub
xor
pop
arpl
xor
in
ja
in
push
xchg
adc
mov
or
out
ret
cmp
xchg
add
push
cs
adcb
jmp
mov
in
gs
orb
aaa
push
jne
jle
sbb
bound
mov
jmp
inc
sbb
imul
inc
jmp
xchg
lret
mov
xor
arpl
adc
or
stc
sub
sub
in
rorb
aas
je
fcomps
sbbb
add
jl
pop
adc
and
add
mov
fisttpll
pop
ficoms
cmc
in
insl
jno
mov
push
sbb
les
pop
stos
sbb
sahf
jns
lds
shll
and
pop
daa
leave
fs
and
mov
repnz
testl
mov
adc
lret
addb
dec
sub
dec
test
cmp
mov
push
loopnew
fcomp
push
aaa
mov
dec
lahf
movb
insl
and
and
sahf
popf
sarl
iret
sub
daa
iret
movsb
sub
dec
pop
sub
lahf
arpl
test
movaps
xlat
outsb
loop
ret
dec
xchg
out
jo
jo
inc
add
mov
dec
sub
push
scas
pop
push
repnz
das
std
pop
stc
test
aad
sahf
mov
add
and
stos
sbb
cmc
ret
cmp
xchg
xor
pop
ud2
scas
sbb
not
cmp
mov
cwtl
je
shl
sbb
mov
jl
out
cmp
and
jne
fnsave
push
pop
pop
out
mov
in
jb
jne
or
push
pushl
inc
sub
add
sub
sahf
push
xchg
mov
clc
mov
cmpsb
pop
out
ja
nop
pop
cmp
pop
test
jmp
sbb
pop
lods
push
pop
mov
rol
data16
cli
xchg
fwait
test
xchg
ja
cwtl
pop
and
ret
outsl
add
add
stos
cmp
loopne
push
repz
inc
int
ds
cmp
add
sbb
fwait
hlt
popa
cmc
push
sahf
mov
roll
jnp
std
les
adc
cmp
or
imul
les
bound
ss
repz
adc
in
xor
rcrb
vmwrite
cs
and
ds
mov
xchg
icebp
sahf
mov
push
push
push
or
sbb
lcall
pop
mov
jmp
rclb
aas
pop
adc
popa
lds
cmc
divl
movsl
mov
adc
into
loop
xor
mov
jo
push
mov
push
dec
lock
mul
pop
adc
jmp
adc
aaa
rorl
movsb
pop
mov
imul
mov
out
jno
jg
sub
sarl
mov
daa
mov
push
jns
jno
jge
test
cmpsb
pushf
sub
mov
stos
aas
repnz
popf
pop
inc
pop
jb
outsl
ret
dec
rorl
mov
push
call
adc
jmp
push
sub
rolb
stos
rolb
jg
sbb
push
inc
fmuls
enter
inc
cli
popa
jg
es
fisttps
jns
push
pop
sub
dec
lea
rcrb
mov
scas
mov
xor
or
jne
cmpb
lret
hlt
arpl
and
adc
shll
dec
cmp
xchg
int3
loopne
shlb
cmp
or
lods
inc
mov
mov
xor
mov
dec
pop
mov
out
cmp
cmp
addr16
xchg
adc
jg
iret
mov
pushl
ror
jns
push
rolb
enter
xchg
mov
std
movsb
leave
xchg
mov
dec
data16
cmp
dec
mull
loop
lret
in
jae
in
mov
pop
add
push
mov
sub
mov
pusha
bswap
sbb
pop
sbb
add
iret
aad
in
dec
hlt
ficoml
ds
pusha
lret
push
das
and
into
inc
adc
pop
add
push
hlt
sub
mov
cmp
subl
mov
jbe
lret
popf
or
inc
pusha
scas
xchg
mov
mov
daa
cmp
jbe
stos
adc
aas
dec
cmc
inc
jg
or
xchg
adc
das
ds
cli
sub
decl
gs
xor
pop
ficomps
mov
and
call
dec
sub
bound
push
mov
push
cmp
dec
sub
xor
stos
sbb
mov
mov
shl
ljmp
in
inc
std
repz
leave
test
mov
adc
test
repz
adc
or
pop
dec
mov
and
or
dec
push
add
inc
push
in
adc
scas
jnp
jns
or
mov
test
movb
push
dec
repz
outsb
dec
addr16
fsubr
lods
mov
cli
mov
loope
adc
out
pop
shl
push
cmpsl
lods
mov
fisubs
rclb
out
js
imul
int3
add
lock
or
repz
push
imul
push
jecxz
pop
ljmp
push
mov
mov
cmp
or
das
mov
xor
mov
and
pop
inc
fiadds
sbb
adc
aaa
decb
ss
ds
push
roll
dec
add
add
jmp
fs
in
inc
jl
push
notl
mov
fists
mov
in
fcoms
mov
mov
movl
data16
aam
fistl
scas
mov
in
jl
cltd
mov
lcall
andl
inc
cmp
jp
test
xor
dec
es
jp
outsl
andb
jno,pn
mov
mov
addr16
jns
dec
mov
adc
ljmp
lcall
sti
mov
popf
repnz
cltd
lds
pop
xchg
jb
dec
mov
inc
test
movl
or
cmpsb
inc
mov
pop
fdivl
ja
inc
lods
lds
ja
push
psrad
cld
add
test
gs
inc
mov
loope
push
xor
push
repnz
cs
fsubs
aas
mov
dec
rolb
aaa
mov
repnz
xchg
push
inc
cs
pop
dec
lea
sub
pop
nop
xchg
jg
dec
jmp
jno
pop
and
mov
dec
mov
lds
insl
push
outsl
sbb
das
dec
dec
in
aas
xchg
inc
mov
lahf
cli
sbb
fld1
cwtl
xor
lcall
sub
push
push
mov
mov
pop
sub
add
scas
or
sbb
inc
cmp
pop
adc
sbb
jle
add
or
jle
sbb
and
movsl
xor
mov
xchg
outsb
jb
push
das
in
in
push
cltd
dec
or
mov
xchg
sub
popa
add
lcall
loopne
rorl
mov
adc
scas
or
imul
pop
loope
and
ret
pop
xchg
or
push
jo
or
stos
pop
fmull
cltd
inc
sbb
mov
xchg
sub
sbb
and
bound
xor
mov
pop
dec
or
aam
int3
scas
outsb
sub
xchg
adc
add
pop
push
push
lcall
inc
xor
or
xchg
lret
nop
push
push
mov
iret
push
and
mov
inc
std
xchg
pop
lods
mov
ret
lcall
mov
xchg
jns
arpl
call
divl
mov
push
sub
out
xor
in
mov
ficompl
inc
lds
clc
int
mov
pop
callw
test
iret
scas
movsb
xchg
push
stc
jo
ljmp
pusha
lock
popf
adc
mov
ss
lcall
xor
mov
test
out
fistpl
add
pop
mov
jnp
dec
lret
lcall
not
cwtl
aad
mov
mov
dec
push
cmp
cmc
push
dec
push
pop
sub
adc
add
sub
dec
enter
adc
push
arpl
or
das
je
xor
xchg
jbe
test
dec
inc
mov
imul
cmc
test
cmp
xor
add
in
pop
add
cwtl
lea
push
aaa
push
lds
pop
rorb
mov
insb
lea
jnp
lock
push
in
jge
or
subb
or
fs
push
mulb
movsl
cmpsb
adc
mov
xchg
push
jg
dec
les
clc
xor
movsl
enter
push
push
loopne
fwait
out
sub
insb
sub
inc
arpl
push
dec
xchg
adc
cwtl
jecxz
mov
push
cmp
inc
addl
lea
sub
gs
pop
not
loope
lods
movsb
pop
std
jo
out
xor
inc
jno
push
sub
inc
vshufps
mov
sub
jp
push
int3
call
fs
nop
daa
jnp
test
addr16
xchg
jle
xlat
les
cltd
decl
inc
test
jecxz
push
nop
sbb
test
dec
adc
lcall
mov
jg
adc
lods
add
mov
mov
stos
stc
jg
adc
xchg
push
inc
and
sub
popa
lahf
jmp
movsl
jmp
mov
mov
out
das
rcrl
sbb
inc
je
xchg
scas
rorl
js
xchg
mov
cmp
xor
xchg
cmp
inc
sahf
jno
sbb
or
aad
pop
cmpsb
inc
lock
cltd
lds
call
push
inc
mov
mov
jb
jl
push
sbb
ja
inc
punpckldq
cmp
test
ds
cmpsb
bswap
addb
jae
int3
lock
ljmp
xor
jbe
mov
push
sub
cmc
pop
lret
xchg
mov
fwait
adc
xorb
sahf
iret
sahf
out
push
dec
loop
add
out
xchg
and
popa
xor
adc
cltd
out
push
adc
icebp
cmp
out
inc
test
scas
pop
jae
cmc
adc
fisttpl
lods
push
pop
insl
add
ret
rcl
jmp
out
xor
pop
lea
mov
xchg
mov
jbe
xor
adc
in
jmp
inc
jle
sbb
fucom
mov
jle
inc
std
es
out
decb
xchg
and
push
mov
pop
mov
je
jno
jl
dec
das
dec
scas
xchg
fcompl
out
mov
lret
shll
cmp
cmp
enter
add
sbb
dec
push
mov
cwtl
inc
lock
cld
and
xor
pop
in
je
sub
lock
mov
sub
lock
lock
out
cmp
xor
test
in
out
cli
aaa
jmp
inc
mov
test
leave
daa
icebp
xchg
orb
ja
lret
sub
mov
mov
pusha
inc
mov
xor
dec
int3
jbe
or
dec
es
sbb
lods
sbb
fstpl
sbb
fs
jmp
sbb
imul
jmp
jecxz
mov
jns
cmp
jae
aam
rcrl
pop
int
into
pop
sbb
adc
sbb
jg
out
jno
sub
push
mov
cmp
pushf
jmp
jmp
cld
leave
mov
mov
fcmovu
pop
xor
inc
lea
pop
dec
mov
aaa
icebp
dec
gs
sti
and
rclb
popa
sbb
or
xor
dec
repnz
shlb
mov
stos
push
jg
mov
pop
in
iret
lods
in
mov
cltd
scas
fs
sbb
push
jl
mov
adc
subb
jnp
clc
jbe
dec
pop
out
add
mul
frstor
movsb
test
idivb
clc
pop
mov
je
pop
sbb
sub
xchg
lret
cmpsb
icebp
ds
nop
mov
bound
mov
ja
add
clc
xchg
push
jns
int3
xlat
xchg
xchg
lods
andb
cmp
or
sub
lret
mov
repnz
std
loopne
cmp
push
cli
js
and
sub
inc
adc
addb
enter
mov
pop
and
mov
int
dec
mov
cmp
jb
push
inc
mov
hlt
sub
sbb
or
outsb
out
dec
sub
lods
sbb
fs
cltd
sbb
or
stos
adc
mov
dec
out
dec
sub
jle
add
jo
int3
rorl
ja
jl
das
and
icebp
in
aas
shll
repnz
push
push
fsubl
iret
xlat
add
adc
cmp
push
adc
mov
xchg
shrb
cs
push
lret
fistpll
out
test
in
imul
jmp
inc
adc
popl
sub
fxch
add
add
in
jbe
adc
cltd
dec
outsb
adc
sbb
sbb
imul
sub
mov
mov
ss
aam
faddl
mov
mov
and
bound
cltd
testl
insl
xor
stos
dec
xor
int
scas
stos
lds
imul
pusha
mov
popf
push
in
sti
adc
shrl
js
dec
add
push
sbb
sbb
lret
lods
andb
mov
ja
clc
jnp
push
jb
cmp
inc
lods
cmp
mov
xchg
outsb
pop
shll
aad
cmpsl
rolb
push
pop
movsl
push
test
pushf
je
in
mov
sub
popa
inc
push
pop
jecxz
adc
xchg
adc
lods
ret
rolb
add
cltd
mov
push
mov
jns
lea
sub
sub
sbb
xchg
mov
cli
jnp
test
mov
or
and
std
popa
aam
lods
push
push
mov
cli
fmull
add
adc
xchg
test
lcall
dec
sub
lret
into
sub
and
ss
ja
push
sti
movsl
popf
cmp
gs
sbb
sahf
std
shll
popa
jmp
loop
sub
jmp
lahf
call
mov
rcl
je
push
and
ss
outsb
out
outsb
outsb
test
addl
repz
pop
sti
jb
testb
push
xchg
cmc
data16
fs
movsl
mov
int
add
lods
lock
test
mov
pop
sub
dec
lds
sbb
ja
and
mov
cmpsb
loope
push
sub
lcall
inc
bound
xchg
dec
loop
mov
add
cmp
loop
arpl
sub
and
clc
cmc
and
popf
push
sub
pop
shll
leave
testb
outsl
gs
lea
mov
dec
xchg
ljmp
pop
jmp
shrl
pop
dec
push
stc
cmp
daa
movsl
sub
adc
repnz
mov
hlt
dec
add
das
clc
fimull
mov
shll
and
adc
lods
dec
in
xor
movb
icebp
add
stos
mov
dec
xchg
mov
push
js
aas
push
push
in
or
addl
jge
stos
or
dec
hlt
sbb
dec
into
lock
sbb
fbstp
xchg
fs
cwtl
outsb
iret
push
or
inc
push
add
out
shr
and
icebp
shrl
push
in
and
pop
and
icebp
adc
hlt
mov
sarb
test
add
jbe
pop
dec
xor
fdivs
icebp
test
mov
jns
and
pop
scas
jno
adc
jmp
out
addr16
jp
mov
mov
lcall
xchg
fimull
shlb
cld
popa
mov
ja
jl
and
and
scas
dec
push
push
jns
test
xor
mov
add
mov
gs
arpl
push
jecxz
pop
sbb
sbb
add
lcall
jb
jno
mov
mov
adc
push
mov
cmp
shll
dec
mov
cmp
or
lcall
xchg
fidivs
in
out
adc
xchg
xor
fwait
mov
sbb
xor
dec
lcall
inc
jno
loopne
cmpsb
scas
fisubrs
adc
aam
pop
jnp
dec
out
imul
fildl
in
sbb
rcll
movsb
test
insl
and
es
aam
cmp
popa
xchg
xor
mov
roll
loope,pn
call
pop
sub
adc
int3
push
or
dec
push
lea
push
lgs
jmp
pop
and
cwtl
cmpsl
rclb
je
aad
int
xchg
mov
xor
mov
insb
xor
clc
jp
orb
shl
push
lods
jecxz
pop
mov
lds
xchg
push
inc
inc
sahf
push
mov
popa
in
jno
sub
mov
or
mov
fptan
inc
jmp
js
cmp
js
jae
inc
jns
sahf
add
inc
insl
jb
inc
movsl
jne
rcrl
mov
adc
mov
dec
or
mov
dec
pop
adc
jmp
ror
jb
push
daa
bound
pop
pop
rorb
fisubrs
loopne
or
xchg
adc
pop
mov
fs
stc
pop
arpl
out
in
jl
bound
push
sub
and
in
pop
outsb
pop
jbe
popf
dec
jns
mov
xchg
daa
mov
arpl
aad
xchg
dec
cltd
pop
jl
cmp
push
lds
sbb
inc
pop
mov
mov
xor
stos
dec
sub
scas
mov
mov
scas
loopne
mov
cmc
fldt
unpcklps
jge
mov
ret
fdivrl
sbb
insl
mov
push
sbb
pop
and
jne
nop
inc
ljmp
fidivrs
xor
arpl
pop
cmc
sti
mov
or
fidivrs
mov
lock
mov
je
cltd
and
repz
mov
pop
mov
popf
out
xor
add
rcrb
in
in
mov
adc
cmp
push
das
in
popl
ss
sbb
sbb
lea
imul
sti
push
dec
xchg
sub
hlt
xor
imul
xor
jnp
jbe
cld
leave
sbb
mov
and
lods
push
lds
and
in
and
mov
xchg
and
add
daa
xor
stos
jle
int3
xor
jae
idivb
or
lcall
inc
jnp
rolb
pop
cltd
cmc
cmp
and
fadds
cli
ljmp
mov
movsl
repnz
inc
and
pop
mulb
pop
lcall
stos
mov
mov
testl
inc
jmp
inc
dec
inc
and
outsb
popa
mov
xor
mov
or
ret
ret
dec
jbe
call
mov
xchg
test
pop
into
adc
mov
mov
and
dec
push
sub
hlt
push
inc
data16
repnz
ret
call
test
nop
call
pop
xlat
inc
push
ror
mov
xchg
jle
enter
int
popf
xchg
subl
int
cltd
sbb
inc
inc
adc
fistpll
pop
popf
xor
shl
xor
cmpsl
jp
or
movsl
pusha
push
in
pop
jl
and
out
push
pop
pop
push
inc
mov
fst
push
and
dec
sti
out
adcb
inc
movsb
xchg
decl
mov
movsb
out
dec
xchg
test
pop
ficoms
xchg
add
movsl
xlat
fwait
stos
add
jne
xchg
inc
fstl
pop
jmp
stos
xchg
xchg
bound
aaa
xchg
xchg
and
or
out
lret
shll
xor
sub
mov
or
fmulp
pushf
lods
mov
cmpsb
inc
cmp
pop
jno
gs
xchg
push
adc
test
xchg
lea
fcmovu
dec
pop
jns
mov
int
dec
dec
test
xor
fbld
jo
pop
mov
dec
mov
adc
fcomi
xchg
test
jecxz
lods
xor
mov
or
inc
imul
inc
xchg
scas
inc
enter
mov
fsubp
xor
push
dec
dec
dec
popa
shll
fnstsw
dec
outsb
push
xor
fstp
mov
rclb
xor
lock
call
into
sub
mov
pop
xchg
pop
movsl
adc
or
div
sbb
es
push
pop
xor
mov
test
jns
xor
xchg
mov
lds
test
imul
ret
popa
add
jo
mov
lock
ret
fnsave
lea
push
mov
lret
pop
daa
mov
lret
sbb
test
sbb
adc
cmp
fidivl
bound
cmpl
add
test
nop
push
mov
push
sub
xor
cwtl
leave
and
sbb
insb
sub
xor
enter
aaa
loop
cmp
adc
negb
out
adc
nop
int3
add
imul
lea
sbb
xchg
jmp
lret
clc
les
jns
xor
or
cmp
xorb
xchg
cwtl
std
add
je
mov
adc
dec
and
mov
sbb
sbb
repnz
mov
scas
lea
test
aas
sub
push
pop
mov
push
pop
mov
lods
push
dec
add
xor
xchg
xor
push
sub
and
dec
pop
dec
movsb
scas
imul
stos
test
or
add
shll
movsl
lods
adc
jne
inc
jb
test
and
ds
cmp
inc
imul
leave
in
daa
out
cltd
jns
mov
push
and
inc
dec
pop
shl
ret
and
mov
mov
mov
sub
nop
add
add
cmp
outsl
lret
ja
cmp
inc
jo
pop
jp
aam
loope
xor
call
lea
inc
and
fprem1
inc
mov
cmp
adc
inc
mov
stos
fsub
jecxz
inc
aaa
cmpsl
fisttps
or
clc
cmp
cli
mov
dec
mov
mov
mov
adc
push
inc
ror
ret
pop
push
test
adc
add
rep
mov
aad
mov
aam
les
addl
sub
inc
sub
adc
stos
pop
or
jno
shrl
lret
bound
ljmp
push
call
decl
lods
adc
pop
inc
jo
enter
out
cmp
es
ret
mov
dec
push
lock
addb
ret
push
push
sub
xchg
push
lock
adc
or
jno
cmpsb
cmp
cmp
add
ljmp
leave
mov
lods
sbbb
inc
xor
ss
mov
or
xchg
mov
mov
xchg
add
das
jnp
divl
iret
jo
adc
aas
pop
and
push
stc
nop
dec
inc
ss
lahf
stc
mov
xchg
je
lock
sub
inc
sub
hlt
fstps
adc
lcall
jl
jmp
xor
fsubs
adc
xchg
dec
and
push
push
pop
push
and
pop
std
aaa
jmp
inc
leave
xlat
jecxz
jbe
rcrl
lds
icebp
lods
jae
push
mov
lods
push
pop
xchg
inc
in
in
add
adc
in
out
sbb
mov
iret
jecxz
stos
inc
test
fwait
pusha
jmp
mov
das
sti
leave
shll
add
and
inc
dec
and
imul
add
test
call
mov
out
xor
pop
test
or
sub
xchg
sub
out
mov
adc
daa
loope
sub
sahf
out
push
xor
pop
mov
xchg
add
sbb
std
inc
or
cltd
jmp
call
xor
bnd
sbb
cmp
cmp
jp
outsb
mov
adc
frstpm(287
sub
cwtl
arpl
adc
and
aad
xor
jnp
cmp
rclb
dec
jge
xchg
outsb
divb
lahf
adc
pusha
push
ret
xchg
add
mov
int3
insb
mov
cwtl
lods
lea
mov
ret
xchg
push
cmp
movsb
pushw
outsl
lods
call
fidivl
aad
and
loope
or
xor
in
cltd
mov
rcrb
popa
fwait
mov
pusha
mov
cmpps
push
jle
cmc
cmpsl
rclb
mov
sbb
cmp
out
movsl
inc
adc
fmull
mov
cli
xor
popf
js
in
aas
or
jl
scas
push
pop
lret
das
sub
enter
dec
sub
push
push
pop
add
adc
sti
pop
push
in
dec
mov
inc
or
push
dec
mov
out
lds
out
hlt
jp
sbb
sub
xchg
mov
das
mov
stc
into
addb
jp
testl
ljmp
mov
or
mov
add
adc
push
mov
and
cmpsb
push
insl
xchg
je
lea
cltd
gs
jmp
aad
sub
mov
mov
sbb
pop
sub
jl
fsubs
mov
pop
roll
cs
call
insl
sbb
push
and
cltd
pop
push
inc
sbb
adc
dec
lea
xor
aaa
rol
adc
xor
insl
jne
test
jbe
cmc
inc
pushf
bound
push
mov
xor
dec
sbb
and
mov
pop
mov
inc
jl
aad
popf
mov
or
out
aad
movsb
xchg
fmuls
inc
lret
mov
inc
mov
cmc
adc
sar
aas
fsubs
popa
or
xchg
lea
clc
addr16
mov
xchg
repnz
shl
push
aad
hlt
iret
mov
inc
adc
imul
xlat
enter
insb
xchg
and
push
lret
scas
cmp
fisubl
cwtl
arpl
test
sub
mov
fmuls
data16
mov
mov
or
jge
mov
cli
popf
sub
adc
lock
ret
jne
dec
ret
fnstsw
out
call
and
push
cmp
mov
sub
inc
pop
repz
xchg
xchg
xchg
cltd
pop
dec
bound
pop
lahf
or
sub
push
dec
or
cmc
rcrl
sub
xchg
xchg
sbbl
cld
aas
mov
mov
jb
ret
sub
cwtl
lcall
inc
pop
inc
lods
mov
repz
lcall
insl
fstpt
cmp
daa
inc
mov
mov
add
pusha
movsl
push
pop
or
loopne
xchg
insb
cli
clc
lods
jb
adc
sti
int3
mov
data16
pop
pop
cmp
inc
icebp
sub
sbb
cmpl
add
lahf
sbb
jmp
subl
or
clc
push
add
xchg
add
aad
lock
jo
aad
add
inc
std
xchg
roll
ret
stc
inc
jl
dec
je
push
inc
fwait
or
das
fscale
cmpsl
pop
addl
dec
popa
and
pop
jecxz
pop
mov
out
pop
inc
pop
push
lret
cli
jne
adc
div
cmpsb
jg
insb
jl
sub
lcall
fbld
sbb
jnp
pop
fwait
cltd
fwait
sbb
xchg
ss
jp
xor
xchg
iret
lds
lods
repnz
adc
adc
adc
cwtl
lods
or
dec
jae
pop
icebp
sbb
mov
jge
hlt
std
insl
add
sub
jle
jmp
dec
inc
loopne
push
bound
xchg
es
ret
pop
cmp
inc
lods
mov
inc
sbb
adc
push
std
sarb
dec
pop
add
mov
rorl
adc
repz
cmp
mov
in
lret
jns
mov
inc
aad
scas
pop
cmp
cmp
cmpb
or
and
int
shrb
xor
jg
jmp
shlb
fsts
out
pop
imul
js
cs
or
push
sub
xchg
xor
pop
jge
das
cltd
shll
mov
fldt
lret
mov
dec
cmp
ret
fsts
test
mov
fisubs
sbb
das
leave
pop
sub
lock
rcl
inc
inc
hlt
mov
in
je
insl
add
es
sbb
add
sarl
cld
not
loopne
cmc
cli
sub
je
jmp
push
mov
dec
add
imul
push
inc
and
xor
sub
es
push
icebp
xor
mov
scas
sbb
rclb
aam
mov
fs
xor
mov
inc
imul
loop
mov
dec
dec
sub
mov
mov
rolb
popa
arpl
push
orl
aad
dec
xor
bound
lret
xor
bound
sub
mov
rcrb
cltd
fists
fdivs
xchg
or
cmpsl
xchg
mov
mov
mov
push
loope
fidivrs
adc
popf
mov
ret
gs
mov
pushf
addr16
insb
sbbb
repnz
out
ret
mov
int
cmp
test
and
cmp
xor
sub
popa
cwtl
clc
or
ja
adc
mov
imul
test
jo
cwtl
sub
dec
rolb
mov
or
mov
fst
xchg
cwtl
inc
imul
cmp
outsb
or
mov
jo
loop
int
or
xchg
fwait
lods
xchg
sbb
cld
sbb
inc
add
repz
aaa
sbb
inc
add
lahf
mov
mov
cmp
jl
cmp
push
shrb
xor
in
js
xor
cmp
adcl
imul
cs
xor
jns
inc
test
test
xlat
jne,pt
inc
sub
mov
sub
and
sub
pop
xchg
push
insl
movsb
pop
test
loop
aaa
mov
idivl
xchg
ret
sub
ss
lods
test
dec
in
xlat
push
sub
fnsave
scas
xchg
dec
push
xchg
hlt
lods
sub
or
loope
xchg
ret
add
adc
enter
ss
fmul
jo
cmp
sbb
fists
ljmp
or
cmp
adc
das
jae
mov
inc
mov
and
lods
xor
test
jge
xor
dec
dec
xor
sti
int
sahf
and
into
pop
sbb
add
push
adc
mov
inc
or
test
xchg
iret
rol
mov
mov
dec
xchg
test
add
add
mov
or
insb
outsl
dec
das
inc
mov
stos
ficomps
mull
push
mov
fidivl
lea
ret
out
pusha
xchg
pop
inc
pusha
jecxz
in
repnz
idivl
xchg
into
pop
mov
les
ja
cmp
jle
scas
movsb
xchg
sbb
pop
mov
insb
ret
jle
inc
lcall
inc
cmpsl
repz
test
push
fstl
push
mov
push
cmp
fldt
cmpsb
nop
mov
sbb
fiadds
lds
sbbb
nop
pop
cs
fisubrl
jge
andl
lock
fildl
jmp
mov
xor
insl
or
or
mov
mov
xchg
pop
push
out
hlt
pusha
xor
cmp
push
lahf
mov
pop
inc
mov
leave
pushf
cmp
xchg
or
mov
outsb
xchg
mov
rorl
mov
inc
cmpsb
aaa
sbb
out
and
cmp
sbb
or
dec
ror
scas
mov
push
pop
jmp
mov
and
jno
jp
push
shrl
push
cmp
test
test
jnp
mov
and
mov
fdivr
push
push
dec
mov
sub
ret
adc
imul
xor
clc
and
loopne
stos
into
loop
sbb
leave
mov
xor
es
std
xchg
jmp
testb
ljmp
jno
jg
sbb
pushf
push
add
sbb
cli
mov
imul
punpcklwd
or
cmpsl
mov
lahf
fisttpl
mov
mov
cmp
or
add
into
aad
dec
rorb
lds
loopne
mov
mov
fcoml
popa
sub
xor
sbb
mov
pop
mov
ja
pop
mov
adc
in
outsb
and
in
jbe
cmp
sbb
insb
push
xchg
sysexit
jns
ret
dec
mul
test
std
push
sbb
xor
mov
dec
dec
sub
mov
jecxz
jbe
inc
imul
or
inc
je
pop
and
lods
dec
shll
scas
ret
pop
or
sub
push
jae
mov
leave
inc
daa
mov
and
xchg
rorb
and
repnz
mov
lock
sbb
fildll
sub
push
cmp
and
cmp
test
pop
lock
jns
push
bound
scas
xor
jbe
insb
jmp
repnz
pushf
popf
and
pushf
insl
xor
ror
test
xor
pusha
sub
push
adcl
mov
push
les
jb
shl
or
repnz
adcl
jns
mov
dec
out
and
repz
pop
mov
mov
cmp
mov
insl
rclb
xor
inc
xchg
cmpsb
negb
icebp
fstl
mov
int3
cld
jl
mov
fdivrs
loope
pop
fstps
in
xchg
pop
aas
mov
test
cmp
sbb
sbb
lret
mov
gs
jno
cmc
outsb
pop
inc
and
nop
stos
test
xlat
clc
and
or
sbb
xchg
iret
fcoms
test
les
sahf
add
nop
aas
pop
shrl
adc
lcall
imul
or
movb
inc
aad
mov
sbb
sbb
fcmovu
out
dec
or
decl
or
test
out
enter
call
add
int3
dec
and
mov
repnz
pop
insb
test
adc
push
push
cmp
cmp
sbb
test
outsl
pop
fsts
mov
adc
mov
add
inc
movsl
clc
js
xor
xchg
popl
xchg
outsb
or
fnstenv
loopne
rolb
rcr
loopne
loope
imul
test
sub
ljmp
shrb
js
pop
cmp
test
push
or
sahf
dec
push
fwait
and
xchg
aas
std
out
sbb
and
subl
pop
pop
sahf
mov
jecxz
ds
push
cmp
fs
dec
aaa
xchg
bnd
inc
jb
and
xchg
mov
sbb
into
loope
xchg
ss
mov
jg
jns
or
das
dec
in
mov
lcall
push
test
insl
push
imul
dec
jbe
jnp
lods
clc
push
jmp
adc
jl
xchg
ljmp
pusha
in
and
inc
outsl
push
push
lahf
int
and
pop
sbb
sbb
loope
add
mov
adc
lret
mov
iret
aam
pop
fs
arpl
jb
dec
testb
pop
loop
leave
movsl
pop
fadds
ret
jle
sbb
cld
and
lret
insb
gs
push
ja
or
pusha
fucom
std
test
inc
in
dec
inc
setbe
arpl
nop
rclb
lret
mov
xchg
imul
jle
adc
push
pop
and
mov
leave
into
movsb
cltd
jae
xchg
out
xchg
mov
xlat
pop
sbb
cmpsb
sbb
adc
cmp
push
mov
outsl
pop
xor
aam
sub
pop
shrl
and
sarb
sub
push
pop
fcoml
imul
add
ret
mov
lret
and
pop
test
add
lret
stos
or
loopne
sbb
dec
mov
add
out
pop
adc
popf
adc
xor
sub
jae
inc
sbb
out
ja
jg
imul
ss
hlt
pop
and
leave
cmp
pop
and
and
mov
cmp
mov
push
lahf
ljmp
addb
mov
sub
xor
xor
xchg
adc
mov
cmp
ret
inc
filds
clc
bound
mov
push
sbb
add
leave
test
fs
dec
clc
ja
or
add
lds
add
sti
int
ja
out
lods
call
pushf
mov
adc
addl
repz
xchg
inc
dec
pop
and
cmp
out
dec
ljmp
dec
lahf
hlt
or
xor
xchg
mov
jmp
xchg
mov
sbb
add
dec
sub
mov
imul
popa
ffree
bound
cwtl
mov
hlt
int3
mov
xor
push
push
or
cmp
ficomps
inc
cmp
cli
mov
pop
es
inc
inc
jecxz
or
icebp
jno
sbb
outsl
sbb
data16
add
jo
mov
pusha
movsb
mov
and
cmpsb
push
pop
subb
adc
test
ficoms
adc
xchg
xor
mov
push
jl
and
icebp
imul
loope
jl
cs
cmp
dec
mov
jno
repz
inc
paddsb
imul
fstpl
stc
and
arpl
repz
xor
mull
sbb
movsb
sub
mov
dec
xor
cmpsb
sbb
scas
add
stc
and
enter
sti
add
mov
andl
fnstenv
call
xor
adc
test
je
ret
inc
repz
popf
cmpsb
adc
dec
xor
icebp
les
jmp
dec
add
mov
mov
mov
sbb
dec
sbb
jmp
pushf
pop
and
into
bound
sbb
adc
add
push
xor
fimuls
xor
mov
push
xchg
cmp
push
enter
jmp
pop
shl
add
call
push
lahf
xchg
lahf
into
push
mov
xchg
pop
lret
out
ffree
aaa
xchg
xchg
ret
nop
pop
xchg
push
push
daa
fstl
and
mov
mov
mov
lret
ds
imul
pop
fs
imul
inc
lcall
gs
adc
outsl
movsb
sbb
xchg
hlt
cmc
mov
dec
cmp
xchg
fildll
daa
jmp
lods
mov
bound
fadd
std
rep
xchg
mov
clc
xor
mov
pop
gs
cmc
or
jle
xchg
aaa
call
sbb
les
shll
pop
jecxz
stos
cli
test
cmp
test
inc
out
xchg
enter
pop
mov
sbb
stos
xor
push
fucom
xlat
jl
xchg
fadds
cwtl
xlat
dec
repz
rcl
adc
jnp
fwait
or
jp
je
sub
sub
mov
sub
lahf
out
jp
cwtl
mov
mov
data16
ljmp
add
xor
mov
xchg
pop
push
rorb
xor
and
addr16
push
sub
jg
jne
pop
and
adc
ret
add
cmc
orb
pop
pop
inc
xor
jno
jae
xchg
cmp
mov
add
cmpsl
out
mov
call
stos
mov
xchg
or
in
pop
aam
jns
insb
push
adc
aad
fstpl
out
in
lret
movsb
inc
lret
pop
push
push
push
pushf
add
cli
ja
push
ds
movsb
icebp
repz
imul
pop
mov
les
imul
rorb
cli
jge
jno
inc
sbb
pusha
sbb
mov
add
cltd
mov
mov
xchg
mov
pop
mov
add
loop
lret
mov
in
aam
test
xchg
stos
loop
fstpl
test
out
das
insl
test
pop
orl
push
loop
pop
cmp
scas
xchg
push
push
dec
repz
rcrl
lods
in
dec
fsts
sub
cli
xchg
les
inc
cmpsb
je
and
push
push
mov
dec
sbb
stos
inc
repnz
add
xchg
push
mov
out
mov
outsb
rorl
lahf
mov
flds
fs
rorl
icebp
pop
addl
adc
inc
out
out
jg,pt
mov
and
or
mov
xor
lret
sti
int3
cwtl
popa
imul
inc
sbb
pmuludq
insb
insb
jp
sarl
mov
mov
out
mov
cwtl
sub
test
lds
nop
out
fbld
mov
arpl
adc
xor
das
insb
adc
jmp
cmpsb
jae
inc
jmp
pusha
or
aad
es
fmull
jno
sbb
mov
mov
adc
es
mul
lea
data16
xor
mov
jecxz
outsl
out
dec
jnp
adcl
lds
pop
xchg
adc
cmp
dec
xor
fstpt
push
pusha
lods
dec
and
out
shrl
sub
push
ss
cmp
sbb
stos
pop
andl
add
mov
movsl
ffreep
test
push
push
mov
sbb
scas
jae
mov
xor
cmpsl
pop
adc
add
mov
xlat
lods
pmuludq
sub
push
out
and
into
cmp
xchg
aas
fwait
sbb
sbb
pop
sbb
fcmovne
aam
xchg
xchg
jno
in
movsl
int
jecxz
mov
les
in
add
dec
lds
mov
repz
mov
xor
add
add
popa
pop
into
push
push
cmp
movsl
fsubs
movsb
push
inc
test
shl
mov
adc
push
push
xchg
sbb
jo
cmp
push
cmp
mov
rcll
jg
mov
fisubrs
pop
mov
mov
sbb
pop
pop
std
sub
es
cmpsl
in
daa
adc
or
or
xchg
imul
sub
push
or
fildll
hlt
bound
les
sbb
int3
aam
addl
fcomp
sbb
mov
ja
push
pop
aas
mov
dec
pop
or
insl
jo
cmpsb
xchg
fsubs
call
push
dec
or
mov
mov
xor
push
adc
shrl
xchg
setg
movsl
into
push
outsl
cmp
mov
or
rcl
sbb
shll
lcall
outsl
cmp
stc
adc
aam
fistpl
in
add
out
insl
hlt
in
ret
cmp
sarl
faddl
jg
cmp
test
push
add
loopne
cmp
cmp
pop
out
sbb
or
xor
loopne
aas
loop
add
xor
arpl
jmp
pushf
push
int3
add
dec
rcl
test
loopne
push
mov
test
int
add
stos
push
sub
mov
inc
data16
adc
movsl
push
and
les
dec
nop
incb
dec
cmpsb
push
scas
push
jbe
inc
popa
mov
sahf
jo
push
mov
or
lret
adc
and
jb
sub
cmpb
jo
jle
cmp
mov
inc
sub
ficoms
cmp
push
push
aaa
and
rclb
aaa
fs
test
cltd
lret
rorb
dec
and
std
data16
jl
push
out
push
lods
push
insb
mov
xor
add
insl
fs
bnd
mov
sbb
popa
aaa
mov
jo
push
dec
daa
outsl
ficoml
insb
lods
lcall
xlat
and
add
shrb
out
or
push
sbbb
scas
int3
mov
stos
pop
mov
push
lcall
cmp
push
push
xor
fidivl
xchg
xchg
push
cli
sbb
adc
ljmp
dec
cli
repz
cwtl
icebp
jo
cmpsl
stos
or
subb
sub
clc
loopne
xchg
enter
inc
adc
popf
out
add
mov
and
test
push
loop
or
pop
sub
sti
enter
mov
fcmovnbe
int3
in
dec
adc
rorb
inc
xchg
jae
idivb
ja
into
fsubr
jne
dec
adc
pop
icebp
xlat
mov
dec
xchg
popa
sarl
mov
cmp
iret
cld
and
std
jp
inc
movsl
sub
xlat
lea
cmpsb
jp
inc
cld
test
xchg
out
lret
int
lret
and
sbb
mov
int
hlt
popf
js
and
push
adc
ds
mov
add
adc
sub
jnp
pop
push
lcall
hlt
mov
popa
repz
repz
imul
aam
pop
cmp
out
mov
in
pop
outsl
pop
dec
push
shrl
in
push
arpl
xchg
and
or
pop
push
push
xor
adc
lahf
xchg
cmp
pop
dec
xchg
pushf
jecxz
mov
gs
dec
pushf
call
mov
mov
jae
fbstp
ret
dec
jns
jne
mov
dec
test
icebp
mov
xlat
adc
rcrb
mov
mov
pop
shrl
outsb
jo
mov
pop
or
out
outsl
dec
push
fcoms
mov
mov
outsb
jmp
mov
add
in
pop
mov
jne
or
divl
xchg
push
out
scas
adc
cmp
mov
lcall
in
icebp
lock
mov
mov
jp
out
inc
aam
push
dec
xor
scas
xlat
dec
loope
sahf
outsl
cli
mov
jo
scas
loopne
or
and
imul
in
movsl
test
call
loop
inc
pop
mov
push
js
mov
add
inc
cmpsb
or
cmc
push
jnp
adcb
cmp
adc
mov
lret
adc
push
cli
dec
xchg
cmpsl
jnp
shrb
cmpsl
aaa
jp
inc
je
out
sub
lds
push
sbb
repnz
fcoms
jge
mov
ficompl
lds
jg,pn
inc
xchg
jp
inc
pop
and
ljmp
stos
sub
xchg
jecxz
pusha
cmp
xlat
and
popf
jle
jne
cmp
bound
or
xorb
cmc
jbe
mov
imul
mov
xchg
sbb
pop
mov
mov
pop
and
mov
out
lret
adc
cmpl
sbb
mov
popf
into
fs
std
mov
repnz
mov
test
add
add
mov
push
test
lea
js
mov
fisubrs
push
inc
pop
adc
push
aas
into
fstl
add
push
jg
iret
dec
cmp
ja
rorl
adc
ret
sbb
adc
mov
dec
dec
sbb
out
or
jmp
pusha
fcoms
pop
ret
xchg
mov
mov
sbb
dec
fsubr
mov
pop
aam
and
xchg
mov
jne
inc
add
pop
test
pop
lret
jle
push
mov
mov
jle
pop
aas
adc
cmp
xor
stc
dec
js
and
ljmp
sbb
or
data16
dec
mov
lcall
adc
sbb
test
cwtl
es
xor
insb
mov
out
xchg
push
adc
add
or
mov
or
mov
lahf
mov
inc
in
cmp
mov
and
and
push
mov
repz
push
jne
add
test
add
mov
add
sub
adc
xor
lock
clc
dec
psrlw
dec
lods
aaa
int
inc
scas
pop
loop
mov
jns
mov
iret
dec
repz
loopne
sti
or
lahf
imul
outsb
repnz
xor
jmp
fwait
sub
into
out
cmp
jecxz
addr16
push
popa
ss
mov
cmc
jle
cmp
pop
mov
sub
pushf
add
jmp
lahf
adc
sbb
js
sbb
dec
sbb
push
or
sahf
ds
mov
icebp
pop
xchg
jecxz
pop
or
mov
stos
add
mov
dec
lea
add
faddl
push
sti
mov
test
adc
sub
xchg
cmp
mov
push
mov
std
mov
push
jg
sbb
push
pop
daa
mov
or
add
jbe
pop
push
jb
cli
push
cmp
dec
lcall
sub
sbb
dec
xchg
in
push
cmp
pop
sbb
xor
push
add
rorb
cld
xchg
xchg
jmp
pusha
dec
cmp
stc
adc
hlt
inc
pushf
push
mov
jg
cmp
out
pop
loopne
mov
sbb
pop
cltd
pop
push
shl
fwait
sbbb
mov
jbe
jp
mov
and
dec
sbb
ret
pop
adc
adc
insb
loope
xchg
jmp
xor
in
cltd
loopne
inc
scas
mov
ds
sub
xor
mov
xor
popf
ret
sahf
out
jnp
nop
sbb
cmp
clc
or
test
cmp
lods
inc
test
pop
mov
push
xor
dec
xchg
dec
into
repz
jns
jp
adc
mov
cmpsb
test
repz
clc
mov
sub
xchg
fidivrl
sub
fists
leave
mov
lcall
out
dec
push
insb
scas
outsb
mov
inc
outsb
sbb
push
je
fldl2t
or
fwait
repz
and
icebp
dec
push
insb
mov
jl
jnp
dec
in
mov
pop
andb
dec
xor
push
jno
pop
jl
push
pop
mov
cmp
mov
sti
clc
sahf
xchg
and
jl
dec
in
adc
dec
popl
cwtl
stos
and
fadd
mov
cmpsl
notl
jb
mov
push
inc
sub
sahf
mov
dec
mov
shll
mov
pop
cmc
xchg
jp
fnstenv
pop
ss
sub
pop
and
shll
imul
mov
repz
xor
std
adc
adc
mov
incl
ja
mov
es
bound
sti
js
imul
push
jns
iret
sub
add
pmovmskb
movl
clc
mov
enter
or
sub
outsb
sub
push
push
pop
fnstcw
daa
pop
mov
xor
data16
lcall
sub
mov
add
mov
aad
mov
pushf
repnz
int3
mov
int
sti
jmp
loopne
and
imul
lcall
js
jne
iret
pushf
aas
rol
add
dec
loop
mov
sti
outsb
adc
cmpl
mov
and
jae
daa
jno
out
sbb
insb
dec
jg
jb
pushf
icebp
addr16
nop
stos
pop
xchg
add
xor
adc
dec
test
addl
je
ljmp
inc
jns
cmpsl
ljmp
cmp
imul
pop
fcompl
leave
leave
cmp
cmp
lea
outsb
sub
mov
dec
mov
pop
jne
sub
cmp
push
mov
loop
cs
dec
call
and
pop
aas
cmp
fs
pusha
inc
ja
das
xchg
hlt
pop
adc
xor
les
cld
push
popf
test
push
stos
jg
popf
lock
repz
push
mov
fstpt
mov
arpl
inc
das
fcomps
mov
adc
adc
cwtl
int
out
orl
mov
addr16
adc
outsb
xchg
arpl
add
mov
insb
adc
push
sbb
mov
sbb
push
and
arpl
sahf
loop
mov
inc
or
mov
or
sub
pop
sub
aam
pop
repnz
push
pop
pop
adc
scas
stos
or
stos
negb
in
mov
fs
addb
scas
sub
das
cmp
jns
lret
arpl
sti
pop
roll
xor
push
push
scas
fisubs
jmp
inc
les
mov
cld
xchg
test
in
mov
or
mov
jbe
adc
sbb
xchg
bound
xlat
lods
jae
jg
ss
or
mov
fdivrs
jg
mov
lds
cmp
cmpsb
addr16
dec
mov
and
add
divl
in
sbb
sub
cli
mov
mov
xlat
dec
push
mov
mov
pop
negb
aam
pop
int
add
repnz
adc
in
sbb
aas
jne
hlt
push
imul
mov
adc
adc
aam
inc
jmp
rorl
cmc
jne
push
adc
push
add
cli
inc
xchg
cmp
cltd
mov
dec
push
jge
jecxz
xor
stos
inc
or
inc
loopne
push
xchg
orl
ljmp
cld
pop
inc
pop
mov
lods
mov
mov
jne
insl
sbb
lods
cmp
addr16
mov
jecxz
inc
adc
sbb
xchg
dec
cmp
das
mov
mov
ja
cmc
mov
js
out
nop
into
test
pop
aam
sub
add
pop
dec
cld
adc
dec
push
aas
mov
popa
dec
ret
xor
xor
mov
and
iret
out
lock
in
mov
outsb
addr16
out
sarl
insb
insb
sub
mov
outsb
xchg
in
into
and
leave
jno
inc
or
je
std
out
xchg
sub
jno
out
xchg
lcall
inc
adc
mov
jle
pop
mov
xchg
or
arpl
add
ss
xor
sysenter
int
or
sub
xchg
inc
pop
js
aas
mov
out
dec
inc
aam
insl
ljmp
or
shrb
add
rcrl
sub
adc
pop
stc
mov
xlat
jne
adc
inc
fsubl
mov
pop
in
ds
loop
mov
push
adc
xor
outsl
push
lcall
lods
sti
xor
sbb
js
push
or
pop
push
daa
lods
outsl
ss
je
shlb
cmpsb
adc
popa
jge
es
cmp
loop
imul
mov
lock
lds
cmp
test
lret
hlt
or
mov
leave
fistpll
lea
rcr
lods
fwait
loopne
enter
ret
add
mov
cmp
jmp
cs
fsubr
adc
mov
in
inc
hlt
pop
mov
les
cmp
loope
cli
or
cmpsl
mov
fstpt
add
cmp
int3
add
or
and
or
add
insb
fists
sbb
sbbl
and
adc
pop
add
mov
repz
cmp
jno
inc
out
sti
loopne
pop
mov
fwait
sbb
mov
jb
or
enter
sub
arpl
daa
orb
push
jmp
rol
rol
repnz
int
inc
sub
push
mov
jecxz
adc
lea
sbb
out
scas
mov
rclb
lahf
dec
insl
lret
ret
in
jbe
adc
cmpsl
loope
clc
outsb
dec
ret
sbb
xchg
stc
dec
mov
cmp
icebp
dec
sub
in
test
xchg
cmp
mov
xlat
jg
jno
pop
and
adc
push
sub
pop
jne
adc
and
cs
push
jae
dec
xchg
or
sbb
and
mov
xchg
in
push
mov
or
fnsave
cmp
cli
in
aam
insl
add
stos
cmp
faddl
mov
lds
lret
push
in
fsts
inc
les
mov
jb
mov
out
sbb
sub
scas
cmp
mov
mov
fsubs
and
xlat
inc
dec
and
xchg
popf
inc
notl
enter
nop
out
out
or
test
gs
jle
iret
mov
and
sub
and
sub
or
lock
pop
jne
mov
jecxz
loopne
xor
leave
leave
push
dec
pushf
jl
pushf
in
repz
lds
or
mov
push
jmp
fs
mov
cmp
push
sbb
mov
or
jl
or
shll
or
je
mov
out
and
cmp
insl
or
imul
sbb
nop
xor
ljmp
and
fstl
and
push
mov
popl
andl
imul
sbb
xor
sahf
add
sbb
test
cmp
lods
inc
test
push
popa
bnd
dec
aas
sub
mov
jl
xchg
fiaddl
cld
jmp
mov
xor
cmp
add
ss
add
mov
fsubrl
cmp
psraw
in
sub
sarb
lock
idiv
dec
dec
cmp
cld
aaa
xchg
xor
in
sbb
aad
loope
fsub
xchg
repz
int3
imul
dec
clc
dec
pop
inc
cmp
push
ljmp
mov
adc
sarb
jno
cmpsl
fldl
sbb
sub
add
and
icebp
loop
addr16
mov
movsb
jbe
or
lods
cmp
mov
out
adc
cmpsb
int
ret
lock
push
inc
stos
adc
movsl
mov
xchg
jns
cli
fucomip
add
xorb
sub
mov
xor
fistl
add
mov
jecxz
push
pop
ljmp
aaa
mov
cmp
xchg
mov
outsl
cmp
push
jle
dec
fnstcw
jle
jmp
mov
inc
idivl
lret
push
add
pop
mov
test
mov
aas
das
lock
jl
mov
fsubs
mov
mov
fldenv
in
imul
mov
movsl
arpl
xor
cs
addr16
testl
popf
xchg
dec
or
lcall
movsl
xor
adc
dec
cltd
dec
rcrb
hlt
std
lcall
jle
shll
mov
pusha
dec
mov
imul
jns
jns
push
jl
testb
xchg
cli
mov
fisttps
sahf
sbb
lret
or
movsl
add
iret
ret
sbb
dec
insl
sti
dec
mov
sbb
out
lahf
or
sub
test
dec
xlat
fsub
mov
mov
aam
and
or
int
js
add
test
or
cli
imul
rclb
sbb
cmp
mov
pop
imul
and
fmull
inc
xchg
scas
xchg
test
add
inc
cmp
or
icebp
pop
iret
or
sub
out
aam
pop
icebp
mov
stos
js
outsl
pop
jb
lds
jge
jle
and
fstpl
adc
push
out
jns
pop
cmp
cmp
cmc
sahf
sub
pop
out
add
add
hlt
in
push
jbe
dec
push
dec
mov
and
insl
lods
leave
loop
xchg
outsb
mov
mov
mov
int
mov
comiss
mov
xorb
jg
imul
mov
pushf
mov
push
push
imul
mov
rolb
call
or
cmp
pushf
mov
jae
out
cmc
add
outsl
pusha
xchg
std
mov
xchg
push
and
mov
xor
fwait
test
aaa
mov
int3
mov
push
xchg
sub
fwait
push
aad
mov
ror
add
add
test
shll
cmc
xchg
jae
outsb
das
cltd
dec
mov
fmuls
jnp
adc
pop
test
jno
lcall
mov
adc
lds
pop
mov
xor
pop
jl
daa
and
movsl
lcall
mov
cmp
pop
or
neg
leave
mov
pop
push
pop
xlat
mov
arpl
jb
cmpsl
xchg
outsb
sub
mov
imul
in
and
lcall
sub
mov
sbb
faddl
vmwrite
inc
cmpsb
fiaddl
mov
dec
push
cmp
in
push
dec
or
stos
sbb
lods
jo
aas
xchg
lret
xchg
mov
sub
dec
repnz
leave
jmp
add
or
cmp
dec
popa
aaa
mov
push
inc
sarb
mov
dec
or
pop
les
imul
leave
out
or
adc
aaa
dec
mov
insb
std
dec
notl
adc
sbb
imul
jb
fnsetpm(287
int3
adc
and
cmpsb
dec
adc
push
fsubl
cmpsl
int
xor
pop
adc
jne
cmp
mov
xchg
lret
add
xchg
dec
mov
mov
sbb
incb
lcall
scas
jmp
jno
push
mov
shrl
mov
nop
fimull
or
push
mov
cmpsl
push
out
data16
mov
jecxz
ficoms
mov
cs
sbb
jae
mov
aaa
scas
and
mov
pusha
xchg
lods
add
inc
pushf
mov
es
sbb
iret
adc
int
addr16
sahf
mov
pop
adc
ss
cmc
jmp
iret
sbb
adc
iret
out
inc
cmp
loopne
sub
lea
jle
fstl
mov
or
rol
or
fisubl
adc
or
sub
ds
xorb
ljmp
lock
mov
pushf
or
sub
lds
rolb
icebp
inc
ja
dec
push
lock
pop
dec
push
mov
inc
pusha
dec
mov
xlat
mov
sti
jmp
adc
sar
lds
push
pusha
xchg
sbb
mov
cs
lret
icebp
dec
mov
pop
cmp
inc
xchg
mov
leave
push
stos
lcall
and
or
les
adc
mov
sub
cmp
jnp
cs
adc
sub
and
jnp
int
cs
lock
int
and
shld
fld
lret
push
jmp
dec
and
xor
mov
in
int
subb
cmp
les
mov
loopne
push
lcall
imul
mov
xchg
mov
cwtl
jmp
out
test
jecxz
lahf
cs
sub
idiv
and
into
into
jmp
push
cmp
fstpl
inc
arpl
xorb
ja
adc
gs
or
mov
sbb
and
pop
and
inc
lods
inc
xor
loopne
push
test
jnp
loop
int
xor
pusha
ret
nop
lods
rcrb
xchg
push
movsb
jo
add
cmp
or
xor
and
xor
or
movsl
div
ret
outsb
xlat
stos
scas
dec
sub
inc
daa
add
add
pop
add
mov
outsb
cmpl
mov
arpl
mov
fnstcw
jne
push
stos
pushf
pop
in
inc
sar
xor
jno
icebp
ss
aam
xchg
data16
shll
ljmp
ror
pop
push
ficompl
out
mov
jno
dec
ds
xchg
inc
and
sbb
cmp
aad
xchg
cmp
repz
sahf
xchg
das
add
inc
xchg
inc
dec
adc
or
push
hlt
mov
push
xor
dec
xchg
jno
int
jno
fcomi
mov
push
or
xchg
sub
scas
add
ds
mov
mov
pminsw
andl
js
rolb
cld
je
dec
mov
jmp
add
cmp
sti
mov
mov
pop
or
add
gs
outsb
add
push
adc
inc
pop
push
add
and
call
fcompl
je
in
std
lds
cmp
jns
mov
repz
test
add
fwait
sub
addr16
mov
dec
mov
push
add
cmpsl
jns
insl
jne
xchg
clc
pop
mov
lock
mov
lahf
jno
xchg
in
xchg
cmpsb
cltd
pop
movsl
add
pop
daa
mov
inc
mov
xor
inc
inc
inc
xor
in
add
jbe
jmp
lods
mov
or
insb
pop
dec
lret
cld
jno
push
inc
and
out
push
adc
pushf
lds
sarl
and
movsl
js
lods
cmpsl
cli
loopne
push
stos
ds
sbb
sbb
loop
out
rol
sub
jge
xchg
xor
call
sbb
mov
aas
mov
jl
cmp
jge
and
pop
push
add
popf
insl
stos
adc
or
cmpsb
xchg
push
jnp
sbbb
pop
xchg
adcl
add
xchg
xor
loopne
cmc
fdiv
int
stos
jae
xchg
add
jge
and
enter
repz
mov
jg
push
pop
outsb
mov
fistpl
daa
addr16
pop
adc
dec
xchg
adc
movsl
jbe
adc
adc
cmpsl
cmp
jo
jmp
cmp
lret
cmp
jae
aaa
test
sbb
xchg
ss
sub
mov
adc
aam
xchg
jg
or
jno
hlt
fbld
arpl
sbb
push
xchg
adc
push
mov
pop
sub
push
out
pop
inc
mov
rcr
lds
inc
loopne
orl
movsl
rcll
add
mov
mov
movsl
pop
jnp
fidivs
adc
int
imul
aas
lahf
jp
fimull
mov
or
cmpl
test
inc
addl
scas
push
push
frstor
xchg
sub
sub
daa
xlat
cmp
add
adc
adc
mov
scas
mov
mov
aas
das
cmpsb
inc
cmp
dec
les
pop
xchg
push
cmpsb
mov
xchg
dec
pop
lret
mov
and
inc
xlat
jns
sbbl
stos
mov
std
pop
sbb
enter
dec
into
psadbw
outsl
lods
cmp
pop
xor
sbbb
mov
push
pop
icebp
cld
dec
into
sti
arpl
dec
inc
imull
test
scas
aam
mov
nop
lahf
jnp
pop
popa
scas
push
sbb
or
push
fwait
mov
lcall
sub
mov
jmp
push
pushf
js
in
inc
aas
out
int
xchg
sub
nop
and
aas
xorb
xor
lods
mov
pop
cmp
inc
and
sub
push
daa
fistpl
scas
sub
jno
aad
enter
test
loop
xchg
loop
mov
fisubrs
sbb
in
sbb
out
lock
and
je
adc
mulb
sbb
lcall
sbb
push
fdivrs
pusha
pop
cltd
sub
push
xor
jb
pop
mov
dec
or
mov
pop
negb
dec
dec
inc
cmpsb
mov
test
push
sub
loop
and
insl
and
add
sbb
aaa
push
lret
dec
daa
repz
sbb
mov
xchg
xlat
in
dec
adc
push
movsl
stos
inc
inc
jle
addr16
and
cmp
mov
mov
inc
lea
faddl
mov
add
das
les
xor
fdivr
into
jae
push
or
arpl
push
andl
jae
pop
repz
lahf
repz
sahf
cltd
inc
cmp
mov
lods
mov
idivl
push
sub
dec
mov
test
cmp
jge
xchg
jp
sbb
inc
inc
sub
cmp
sub
mov
leave
pop
clc
jp
xchg
jae
lea
jmp
pop
fcomps
and
andb
test
mov
cmp
mov
sbb
mov
mov
mov
mov
xchg
jae
ljmp
cmpsl
sbb
xchg
push
adc
jle
xor
inc
fisubrl
leave
loopne
pop
out
push
add
fldenv
xor
xchg
cmp
xchg
fs
add
or
push
xchg
je
outsb
jg
adcb
inc
sub
pop
mov
nop
punpckhwd
lds
xchg
leave
sub
jne
mov
mov
push
arpl
std
xchg
and
jne
gs
pushf
xor
mov
ret
int3
iret
xchg
bound
jl
pop
mov
repz
push
inc
clc
idivl
xchg
xchg
jg
fidivrs
push
stc
sbb
xchg
fistpll
fsubrp
inc
jns
sbb
iret
xor
pop
gs
pop
sbb
test
outsb
repz
sub
jge
jae
iret
and
or
mov
mov
cmp
xchg
mov
cld
mov
dec
or
push
int3
out
lds
jecxz
das
inc
addb
or
ffree
xor
push
sbb
push
push
scas
mov
les
mov
fdiv
lods
dec
sub
push
jl
mov
or
rclb
mov
push
push
jl
mov
sbb
movl
into
into
sub
imul
bound
scas
cmpl
pusha
mov
jmp
mov
jmp
mov
jecxz
pop
xchg
test
and
sub
xorb
xor
xor
jle
xor
sub
mov
sub
sub
and
ret
stc
enter
and
cli
pop
pop
frstor
jne
inc
jb,pt
adc
sub
or
add
adc
imul
dec
or
mov
leave
imul
add
sarl
push
sbb
mov
mov
popf
cltd
xor
and
pop
xor
mov
repz
fwait
dec
dec
mov
xchg
add
xor
adc
mov
sub
jg
adc
mov
cli
push
int3
mov
and
daa
pop
xchg
mov
push
clc
div
call
test
fldt
nop
jo
mov
fwait
push
jnp
jo
pop
jb
jl
lock
and
aas
jnp
add
enter
mov
gs
dec
repz
adcb
cli
stc
mov
fnstenv
ja
push
and
fcompl
jns
and
push
mov
sahf
out
sarl
add
adc
inc
pop
adc
shl
mov
and
mov
in
fsts
mov
jb
cmc
xor
test
push
or
fdivrs
cmp
adc
lods
cld
xchg
js
jnp
mov
cmp
addr16
cmp
push
push
dec
je
inc
aaa
dec
lods
out
mov
enter
xchg
incb
mov
jge
cmp
aaa
mov
add
sarb
sti
ds
jno
enter
pop
xor
fprem1
and
js
dec
push
cltd
dec
insl
jmp
mov
mov
add
sti
test
lahf
xchg
orl
mov
push
xor
pop
mov
cltd
scas
scas
xchg
pop
cld
and
mov
rorb
pop
in
push
sbb
ret
sti
movsl
mov
mov
pop
in
push
jp
xor
dec
jl
pusha
cld
ljmp
popf
clc
cs
decb
bound
fstps
dec
xchg
pusha
xor
xor
fsubrs
ss
mov
into
sti
jno
adc
fnstcw
sbb
scas
aas
insb
adc
or
mov
scas
fldl
pop
push
nop
mov
mov
xchg
xlat
mov
or
je
movsb
xlat
xchg
repz
repnz
jnp
jb
pop
push
push
out
mov
daa
test
ret
cmc
xchg
outsl
inc
fimull
cmpl
testl
cmp
out
mov
mov
outsb
sbb
adc
jae
ror
idivl
push
mov
cmp
mov
pmulhw
lcall
rorl
stc
add
push
fcoms
stos
mov
cmp
lcall
out
stos
stos
cmp
sbb
pop
sub
popa
lods
in
pop
imul
sub
pop
xchg
xlat
lods
shll
lea
fldcw
push
icebp
jge
mov
fwait
les
push
aad
pop
lret
andb
mov
lds
xlat
subb
aaa
fsubs
repnz
stos
inc
ljmp
out
add
lret
cs
jmp
pop
loop
lea
xchg
ja
sub
cwtl
cmp
jb
in
mov
mov
mov
fs
xchg
lcall
imul
or
test
adc
sbb
jg
daa
and
mov
mov
cli
xor
mov
cmc
cmp
into
das
sub
jb
add
loope
adc
lock
add
jmp
das
sbb
sti
pop
and
mov
es
stos
pop
loope
mov
push
mov
xchg
imul
in
push
lds
mov
lods
sbb
dec
loopne
cmp
xor
cmp
daa
popf
ret
test
push
xor
add
mov
jno
jns
loop
dec
sbb
cmpsb
imul
xchg
jb
mov
push
int
sbbl
pop
mov
push
pushf
stos
mov
cwtl
jb
rcrl
dec
pop
es
push
xchg
hlt
or
pop
xor
push
rep
push
and
aaa
xor
pop
xchg
xchg
les
pop
adc
jae
mov
test
daa
sbb
leave
aas
stc
les
in
mov
or
rcrb
xchg
into
or
lds
mov
dec
sbb
addr16
xor
xchg
loope
xchg
jp
xorb
xor
mov
cmp
fstl
repnz
scas
paddsb
dec
inc
or
mov
leave
mov
mov
stos
sahf
in
outsb
jo
adc
mov
cmp
add
jae
nop
popf
mov
je
les
jge
inc
mov
cmpl
rorb
out
mov
insl
out
adc
add
jp
mov
orl
out
xchg
rdtsc
mov
push
ret
cmpsl
lret
lods
loope
insl
adc
inc
bound
movsl
mov
jp
sbb
cs
pop
jecxz
cmp
xchg
sub
cmpsb
mov
cmp
mov
jge
xor
xor
fwait
sbb
and
fwait
adc
adc
decl
jne
jge
xchg
cli
inc
call
out
add
mov
jg
fnsave
lds
data16
jle
das
mov
sbb
sbb
out
cmp
jle
and
insl
cltd
sbb
jecxz
xor
ret
pop
adc
inc
adc
mov
cli
pop
xchg
imul
dec
sub
int3
mov
lahf
insb
mov
ret
imul
shll
inc
std
dec
lea
adc
sub
imul
push
cmpsl
mov
pushf
mov
jge
iret
sub
pop
bound
and
movb
jnp
mov
xchg
out
cltd
dec
pop
out
in
sbb
pushf
mov
lds
add
jp
xor
pop
or
das
dec
pop
stos
xchg
and
mov
inc
inc
xor
add
in
enter
mov
xchg
popa
mov
cwtl
lahf
mov
mov
mov
dec
cwtl
adc
or
mov
repz
not
xor
pop
jno
fdivl
mov
add
dec
fs
add
mov
dec
sub
mov
das
clc
and
test
xor
pop
push
add
cmp
pop
cmp
or
jmp
movsb
add
push
addr16
dec
dec
das
aad
ja
sbb
notl
lahf
or
jne
dec
mov
repnz
inc
cmc
mov
fucomip
sbb
out
push
pop
hlt
xor
cmp
mov
sub
fistps
xchg
dec
ret
psraw
or
in
out
pop
xchg
lock
fsubrs
repnz
outsl
push
jo
inc
adc
sub
xchg
xchg
fsubrl
aam
rcrb
mov
push
sbb
mov
bound
inc
inc
jecxz
jg
outsl
and
dec
add
dec
inc
lock
sti
push
cwtl
xorl
or
repnz
mul
jg
inc
movsl
mov
insl
outsl
jno
int3
cmp
lcall
sbb
scas
adc
cwtl
lods
popa
xor
pop
jecxz
add
stos
orb
xor
popf
sub
push
xor
cmp
les
stc
lret
cmpsl
sbb
sub
ja
mov
adc
shrl
cwtl
lret
fnsave
sbb
cs
ficomps
idivl
jo
hlt
sbb
xchg
int3
popa
and
packuswb
xchg
cs
lods
lret
inc
call
fisubs
xor
inc
lret
dec
mov
rcl
out
adc
mov
inc
xchg
xchg
jns
push
mov
jns
hlt
xchg
xchg
push
adc
jg
mov
imul
cmovg
loope
scas
das
popf
shll
fidivrl
daa
or
inc
pop
cmp
in
dec
mov
jno
and
jbe
call
popa
push
mov
test
push
aas
sahf
mov
out
lods
rcl
into
ret
xor
pop
fdivs
idiv
mov
dec
pop
pop
shlb
lcall
mov
lds
sub
loope
outsb
push
cmc
jnp
inc
jnp
adc
sbb
bound
iret
inc
lds
add
mov
faddp
daa
pop
in
fisubl
jecxz
or
hlt
mov
hlt
lret
lret
and
cmp
sbb
push
std
push
fistpl
jp
ss
fisttpll
xor
rorb
sbb
mov
fs
test
pop
pusha
mov
idivb
push
xlat
sbb
cli
pop
stos
inc
das
sbbb
mov
addr16
neg
fists
xor
sbb
pushf
dec
inc
sub
orl
arpl
scas
out
xchg
dec
fwait
add
xor
repnz
cmp
icebp
inc
loop
push
xchg
fwait
mov
xor
std
in
insl
mov
orb
xchg
imul
pop
jno
or
pop
xlat
push
cmc
ja
movsb
dec
fwait
pop
mov
jmp
jae
shll
aad
pop
fisubrs
rorb
jne
movsl
js
dec
repz
or
mov
fstl
push
adc
ljmp
dec
push
pop
and
stos
jnp
nop
iret
les
int
test
mov
push
xor
das
aaa
add
int
pop
sub
mov
jp
inc
push
insl
inc
jnp
pop
xchg
lcall
adcb
aad
repnz
movsl
ljmp
pusha
sub
xchg
test
xor
xor
or
aaa
add
enter
cs
test
orb
subl
pop
fsubr
loopne
xchg
pusha
push
add
aam
out
test
hlt
mov
sub
mov
ds
jl
insb
adc
or
mov
xchg
jmp
loopne
in
mov
stc
mov
loopne
mov
les
bound
fsubr
insb
add
jmp
add
xchg
jge
fwait
pop
add
mov
cld
int3
inc
lahf
les
xor
cmp
sbbl
adc
test
jg
or
add
bound
xor
xor
je
cwtl
sbb
dec
shll
mov
dec
test
mov
into
xor
gs
sahf
loope
ljmp
inc
out
cmp
cmpsl
adc
cmpsb
xor
leave
lods
fisubrs
mov
adc
and
xchg
mov
aaa
or
sbb
test
jl
xchg
ret
andl
sar
inc
cmp
adc
pop
jne
or
push
scas
aaa
or
stos
ret
lea
lcall
aaa
jp
jg
mov
adc
adc
cmp
aam
add
nop
sub
in
add
pop
or
das
in
jno
arpl
mul
int3
pop
xor
cs
decb
push
jbe
push
popa
stos
sub
addr16
loop
fistps
insb
pop
shll
adc
stos
xor
ljmp
xor
cmp
sti
jno
lds
call
mov
in
aas
add
add
shlb
int
cmp
jnp
sub
cmp
jne
lret
mov
in
push
std
call
push
gs
sbb
pop
mull
loop
int3
mov
scas
repnz
hlt
icebp
test
loopne
mov
out
mov
jle
imul
pop
ficomps
loop
mov
and
add
bound
add
subb
pop
lret
push
aas
ljmp
fstpl
sub
shrl
pop
js
jle
enter
cwtl
repz
mov
out
adc
dec
inc
sbb
cmp
add
mov
scas
dec
mov
mov
mov
sbb
ljmp
stc
scas
pop
jae
push
add
add
aam
pusha
test
fcmove
cmpl
adc
mov
rcrl
jge
jo
mov
das
dec
cmpsb
inc
sub
xor
xchg
mov
jl
lret
cmp
cltd
popa
std
mov
push
lds
cld
adc
mov
int3
cmp
outsb
inc
dec
pushl
pop
insl
ficoml
fistpl
push
adc
cli
mov
add
cli
aas
leave
ds
in
fbstp
cmp
pop
xchg
enter
inc
test
scas
cmpsb
in
std
jo
push
lock
xchg
push
testl
or
push
imul
mov
movsb
mov
sub
push
outsl
adc
aad
jnp
mov
and
mov
mov
mov
jp
pushf
cmpsb
sbb
mov
push
sub
add
dec
cld
mov
mov
roll
insl
push
js
push
mov
adc
lcall
mov
push
sahf
cmp
jecxz
mov
aam
cmp
xchg
lds
aaa
in
idivl
xchg
mov
ljmp
loop
daa
enter
adc
inc
lods
bound
or
rcl
inc
xor
shlb
pop
lds
dec
lods
popa
pop
add
pop
ja
fwait
jae
loopne
mov
pop
pop
js
faddl
jle
sub
mov
ret
aad
pop
mov
bound
and
mov
popa
inc
and
sbb
mov
pop
mov
iret
aas
pop
and
rclb
cmp
lret
jno
cmp
je
andb
in
adc
or
shll
xchg
sub
cmp
mov
and
pusha
cli
notl
push
fpatan
inc
test
add
add
sbb
pushf
imulb
add
sbb
add
push
mov
inc
rorl
mov
or
lock
fcmovnu
mov
in
and
loopne
fsubrs
out
dec
mov
hlt
push
mov
rolb
sbb
xchg
add
ficoms
aaa
lcall
and
or
sarb
icebp
aas
sbb
push
jg
xchg
daa
cmp
and
dec
sub
repz
das
adc
adc
daa
or
cmpsl
mov
negb
mov
pushf
sar
iret
push
sub
insb
dec
addb
xchg
pusha
sti
dec
imul
int
lret
mov
loopne
inc
sarl
sub
loope
cli
insb
stos
dec
adc
scas
jno
mov
cld
repz
rorl
mov
jecxz
mov
lret
stc
sbb
add
jns
mov
sub
sbb
dec
cmpb
cmp
push
dec
imul
inc
inc
mov
pop
std
pop
jg
xchg
mov
out
or
xchg
pextrw
and
lcall
pusha
pop
mov
filds
or
xchg
push
rcrb
out
push
inc
inc
cltd
test
cmp
push
adcl
mov
push
insl
int3
dec
clc
jge
out
pop
popf
test
idiv
cmp
les
movsl
lds
mov
xchg
test
fdivrl
cmc
jmp
aad
dec
adc
or
mov
jge
dec
lahf
cmp
cltd
movsl
lods
mov
data16
cmp
insb
dec
xchg
inc
inc
test
mov
xchg
mov
xorb
add
test
pop
fsubs
add
or
mov
or
or
lea
fcoml
adc
cmpsl
jbe
out
lret
pop
inc
dec
fwait
jle
push
push
stos
or
cld
scas
test
inc
push
sub
mov
push
les
pop
jecxz
mov
inc
pusha
dec
popa
jnp
stos
inc
dec
js
lea
adc
dec
pop
scas
jecxz
rolb
xor
xlat
or
pop
mov
and
shr
or
fs
mov
add
sub
and
into
xchg
jmp
jae
mov
sub
xchg
xchg
lret
mov
hlt
outsl
imul
iret
daa
inc
push
out
pop
jge
mov
insl
lcall
nop
jo
and
shlb
dec
insb
rolb
mov
mov
sar
jmp
jmp
push
dec
dec
repnz
jnp
or
movsb
push
and
dec
movl
sbbl
gs
cmpsb
pop
cmp
ficompl
xor
mov
jp
pushf
out
outsb
adc
push
sahf
aad
mov
dec
fstpt
test
sub
ss
xor
push
jne
lds
movsb
int
jo
aad
add
inc
lret
push
jl
adc
cmp
adc
xor
jle
out
xchg
div
ss
bnd
fwait
shlb
fsubs
dec
xchg
pop
scas
sub
dec
mov
pop
mov
out
fisttps
or
cmp
cmp
movsb
add
loopne
and
push
bound
in
loop
mov
mov
and
or
insl
cmp
pop
outsb
scas
adc
arpl
test
mov
pop
cld
push
mov
inc
test
and
xchg
out
out
jecxz
xlat
adc
and
pop
in
xorb
push
sti
or
jnp
xor
movb
xchg
push
cmp
hlt
clc
jge
lods
pop
pop
fdivrl
icebp
jmp
pop
cmpsb
fstpt
repnz
sbb
or
jno
add
mov
aam
aam
pop
subb
add
xlat
aas
stc
into
mov
sti
xchg
mov
daa
add
pop
mov
cltd
dec
shr
push
push
pop
test
add
jecxz
mov
cmp
in
inc
out
cli
testl
and
add
mov
or
sbb
call
cli
cmp
inc
add
lods
cli
mov
clc
jmp
and
in
in
and
dec
adc
pop
jge
sub
cmp
scas
adc
stos
mov
cli
cmpl
pushf
clc
sti
xchg
xchg
xchg
pop
lods
cmpsb
call
lret
movsl
cmp
adc
xor
bound
xor
mov
mov
push
testl
adc
lahf
add
mov
repnz
dec
add
dec
hlt
mov
jmp
jecxz
sbb
not
pop
js
out
sub
lcall
cmpsl
out
inc
pop
jmp
jg
fs
jle
lcall
sub
mov
outsb
cmc
xchg
arpl
or
sbb
adc
ficomps
or
xchg
pop
imul
popf
fidivrs
fcomi
inc
jecxz,pn
and
les
push
cmp
test
xchg
call
test
and
imul
and
iret
scas
mov
sub
sub
inc
dec
and
push
xchg
add
aad
sbb
sbb
inc
xor
mov
hlt
fdivl
aas
lahf
insl
push
icebp
addr16
notl
out
mov
in
and
ret
cmp
pop
jo
mov
lahf
int
sbb
adc
arpl
dec
leave
adc
daa
jecxz
lret
inc
leave
mov
imul
lods
movsl
les
sub
xchg
out
nop
dec
out
imul
push
test
in
inc
xor
jno
pop
iret
adc
sub
add
gs
ljmp
sti
pop
test
mov
sarb
fistpll
or
push
ds
lret
fisttpl
insb
xchg
sub
cmp
fildl
sub
daa
movsl
cmc
mov
pop
aaa
aam
mov
pop
xorl
sbb
adc
test
push
icebp
cmp
jno
jae
inc
out
loopne
movsb
aad
in
mov
fdivs
mov
iret
lahf
lock
push
jnp
and
mov
or
cmp
pop
sub
popf
jo
mov
test
cmc
sub
ja
lea
push
mov
stc
or
jns
std
inc
mov
sub
mov
stc
loope
cmp
pop
in
jno
jge
daa
enter
pop
xchg
popf
or
outsb
dec
sub
dec
orl
sbb
mov
and
cltd
subw
push
fdivp
inc
jno
jb
cmp
daa
into
rcll
push
add
ret
test
mov
fwait
sbb
and
jmp
pop
mov
add
add
mov
pop
mov
jnp
xchg
or
push
jbe
imul
sti
adc
sbb
adc
cmp
push
pop
inc
sub
ja
rol
or
hlt
aad
or
jb
arpl
int
mov
inc
push
mov
das
bnd
cmp
inc
jo
add
add
enter
aas
jge
sub
or
cmp
mov
in
or
test
andb
push
lds
cmpsb
xchg
xchg
xor
push
pop
xchg
inc
or
loop
lods
mov
push
xchg
pop
and
negl
xorb
cmp
mov
push
inc
push
dec
add
daa
xor
call
mov
cli
xchg
pop
xor
or
int3
pop
repnz
test
not
mov
add
sbb
scas
cmp
jecxz
repnz
in
xchg
aam
jmp
fwait
rcll
or
leave
pushf
aam
and
xchg
adc
scas
test
lock
movsb
test
dec
xor
dec
fbld
sub
dec
cmp
ja
cmpsl
mov
jns
lds
jg
pop
out
xchg
dec
sbb
or
mov
dec
or
cmp
sbb
pop
repz
cmp
jmp
cmp
xchg
xor
mov
js
xchg
inc
push
clc
mov
pop
push
mov
movsb
fucomi
xor
out
call
push
push
ficompl
mov
adc
imul
xor
imul
jmp
icebp
nop
loope
or
jno
in
mov
and
inc
mov
jmp
sub
hlt
ret
inc
mov
inc
shrb
js
bnd
jp
imul
mov
mov
outsl
add
lods
dec
push
icebp
cmpsl
shl
xor
incb
out
dec
fisttpll
ret
jl
adc
fwait
shll
pop
sahf
sbb
sbb
les
out
arpl
popa
cmpb
fimull
jmp
stc
in
sbb
pop
mov
xor
pushf
scas
mov
cmp
push
stc
sbb
les
insl
push
cltd
sbb
xor
shlb
jmp
push
dec
popf
cwtl
insl
cmp
insl
sti
stos
jle
jecxz
stos
dec
jge
daa
jne
dec
jecxz
in
xor
iret
cld
fwait
ror
je
in
mov
mul
test
sub
mov
adc
mov
sub
shrl
mulb
sub
lcall
pop
inc
pop
fwait
pop
mov
push
xchg
inc
mov
and
dec
mov
add
lahf
xchg
mov
add
movsb
and
inc
ret
push
xor
mov
push
mov
dec
mov
dec
testl
inc
push
daa
movsb
test
and
rcrl
std
pop
mov
out
aas
mov
jns
in
pop
sbb
jbe
dec
sti
mov
jnp
fxch
enter
push
mov
int3
mov
imul
jnp
das
ret
sbb
popw
adc
imul
gs
add
daa
jmp
cmp
inc
jmp
pop
jno
xchg
lds
adc
popa
jmp
pop
into
mov
cltd
ret
mov
ret
dec
jno
mov
xlat
xlat
pop
mov
adc
testb
idivb
notb
insl
js
movsb
xor
xchg
pop
stos
xchg
xor
test
adc
clc
jns
outsl
data16
daa
or
cli
je
mov
pop
ds
fldenv
jmp
cli
lods
outsb
or
repnz
je
and
mov
dec
addb
mov
push
pop
pop
loopne
fcmovnbe
mov
sub
jmp
out
in
dec
xorl
leave
mov
and
sbb
pusha
mov
and
pop
push
push
pop
xor
cwtl
aad
roll
cs
pop
sbb
lret
bndstx
adc
add
into
dec
sub
test
test
imul
sbb
cwtl
mov
inc
pop
in
add
addr16
xchg
push
inc
mov
dec
lock
outsl
imul
sub
jo
outsl
fiaddl
and
mov
movsl
xlat
mov
inc
gs
cmc
std
add
push
loope
pop
sub
incb
jg
sub
hlt
ret
or
mov
out
push
jb
add
xchg
movsb
ljmp
and
xor
or
popa
outsl
and
and
popa
mov
imul
rcrl
dec
or
push
arpl
int3
arpl
out
arpl
cld
loop
ret
out
cmp
push
or
mov
xchg
insb
push
dec
movsb
xor
adc
inc
cmpsb
add
pop
mov
jg
or
or
je
lock
mov
mov
lret
shll
lds
push
or
mov
mov
repnz
clc
icebp
jmp
ficoms
cmpsb
shlb
inc
mov
cmpb
nop
lea
adc
repz
add
iret
push
mov
jmp
mov
fidivrl
push
cld
int3
addr16
lea
stos
daa
lock
sarb
nop
push
lods
ffree
fdivr
sbb
roll
cmp
cli
mov
stc
orl
adc
in
mov
mov
das
fwait
cli
dec
rcrl
mov
ja
ja
bound
sbb
xorl
ret
insl
mov
mov
pop
stc
push
or
push
daa
push
sbb
loope
mov
inc
dec
int
add
rorl
movsb
repnz
movsl
scas
leave
ja
in
je
popf
pop
and
dec
and
pop
shl
insb
inc
test
cmp
or
cs
or
pop
xor
fsubrl
fwait
popa
and
pop
cmp
cmc
jb
sbbl
addr16
imul
jp
xor
and
popf
outsl
ljmp
repz
cld
mov
int3
iret
pop
and
pop
or
jno
adc
inc
xchg
das
cmpsl
testl
pop
mov
leave
jne,pn
sbb
ds
cld
movsl
xor
cmpsl
sub
enter
pop
jns
gs
or
iret
fxch
imul
mov
push
jnp
and
sqrtps
mov
sbb
adc
xor
xchg
test
jp
cmp
repz
inc
insb
xchg
mov
sbb
mov
hlt
lods
leave
bound
shrb
movsb
push
in
and
fdivrl
and
notl
or
push
fidivrl
jb
xchg
inc
mov
xor
sub
dec
sbb
out
mov
mov
bound
mov
adc
mov
cmp
or
push
lea
jp
lea
into
mov
add
fidivrs
rcrb
in
and
and
jb
jnp
sub
xchg
stos
out
cmc
mov
or
andb
loopne
sub
dec
inc
outsl
jg
jmp
lds
xchg
mov
nop
cmp
fnstenv
sbb
inc
mov
hlt
fcoms
sbb
and
cmpsb
call
jb
sbb
inc
movsb
sbb
pop
jge
and
pop
pop
push
xlat
pop
xchg
fnclex
push
leave
push
pop
mov
dec
push
je
imul
cmp
inc
add
jb
dec
movsl
adc
sub
mov
das
stc
repnz
arpl
std
testl
push
push
add
inc
loop
mov
cmp
ja
jns
and
popa
lods
ds
add
pop
push
add
clc
mov
push
out
fwait
xor
dec
outsb
cltd
test
mov
lcall
jae
mov
sub
add
je
nop
and
mov
femms
sbb
out
es
ret
push
imul
mov
ja
clc
imul
and
xor
jnp
and
std
add
push
sub
pop
pop
add
mov
test
xor
cli
cmp
cmc
aas
xchg
inc
std
in
xchg
sar
fcmovnb
pop
mov
ljmp
lods
ss
mov
stc
adc
xchg
adc
push
jecxz
jmp
sbb
sub
push
jae
out
mov
push
inc
loopne
push
mov
or
or
mov
xchg
jmp
push
pop
add
aaa
and
pop
stos
add
in
sahf
mov
in
dec
xchg
sbb
andnps
lahf
cld
cmc
lea
xor
xchg
xchg
mov
mov
mov
lods
jl
fidivrs
cmc
adc
add
add
or
push
xchg
fndisi(8087
fsubs
jecxz
xchg
mov
xchg
hlt
or
mov
or
jne
int
or
fisubrl
imull
mov
out
sar
mov
cmp
inc
sbb
cmp
xor
test
test
inc
fwait
rol
sub
cmp
mov
int
jne
xorl
xchg
js
mov
fiaddl
sti
cs
push
ja
mov
add
insl
imul
inc
xchg
jmp
arpl
and
xor
mov
aaa
repnz
sbb
xchg
adc
jp
rorl
sbb
out
mov
jne
imul
dec
aas
iret
and
pop
cmp
mov
in
daa
xchg
or
mov
push
sti
sbb
jae
movsb
and
lods
je
test
push
sbb
mov
pop
mov
adc
jle
cltd
aam
xchg
out
dec
lock
xor
daa
jecxz
outsl
in
gs
bound
mov
ja
pop
mov
sbb
fisubs
xchg
ficompl
imul
scas
leave
bound
sub
rorl
ret
into
cmp
shll
xchg
hlt
adc
jle
push
pop
ja
test
push
lahf
mov
and
xor
nop
ret
jg
xchg
rorb
sub
adc
mov
xchg
inc
or
addr16
add
outsb
lcall
scas
jo
pop
mov
or
mov
mulb
cs
orb
ret
xchg
ret
ret
popa
or
lea
add
and
sub
int
or
mov
vmwrite
sbb
scas
pop
cmc
sub
fsubrs
fsubl
dec
pop
out
xor
xchg
cmp
sub
push
sub
or
out
pusha
lcall
jnp
push
cwtl
repz
or
push
xchg
scas
push
pop
xchg
or
loope
idivb
mov
pop
in
insb
decl
dec
addl
or
mov
ret
shlb
ja
adc
mov
loop
dec
and
and
cld
jmp
cmp
ret
ss
push
shll
pop
loopne
mov
out
lods
adc
dec
and
leave
push
pop
or
jbe
inc
xor
jge
fimuls
push
xchg
mov
mov
in
pushf
dec
notb
xchg
and
jp
add
cs
add
imul
imul
dec
sbb
mov
xchg
jae
in
lock
stos
dec
push
push
add
stos
mov
push
pop
mov
and
pop
adc
pushf
imul
jl
arpl
cltd
icebp
dec
push
sub
ds
mov
mov
ss
pop
xor
lock
stc
mov
cmc
cmc
out
icebp
loopne
lret
pushf
and
dec
je
push
lcall
adc
leave
and
mov
xor
pop
sbb
pop
dec
add
vmovaps
mov
jmp
std
in
fdivrl
pop
push
out
pop
add
adc
sbb
or
mov
lret
sub
inc
xchg
sti
fldl
or
sub
inc
data16
cmc
pop
outsb
iret
jp
cmp
stos
xlat
jge
mov
imul
out
jo
sub
icebp
fnstenv
pop
addr16
dec
dec
or
pop
sbb
pop
push
mov
test
sbb
xchg
lret
sahf
adc
pop
mov
adc
insl
mov
test
hlt
cli
ret
outsl
mov
into
mov
ds
out
xor
xchg
lods
movsb
int
fldcw
addl
and
xor
pop
sub
loopne
les
rcrb
cmpb
jp
jns
mov
or
cmpb
jo
dec
sbb
sets
or
jg
aas
mov
fsubrl
aad
les
pusha
sub
je
and
gs
aam
pushf
lods
andl
cmp
fdivp
lahf
xchg
cmpsb
loopne
out
imul
das
cmp
sahf
cltd
orb
lahf
les
pusha
mov
adc
cs
dec
inc
adc
cwtl
xchg
aas
into
push
sub
push
ret
fisttpll
sti
scas
dec
fadd
sahf
stos
pop
aaa
dec
in
xor
cld
ret
leave
jne
test
fcomps
lods
leave
scas
mov
or
jg
int3
ds
pusha
cmp
leave
mov
add
dec
jo
js
data16
xchg
inc
pushf
pop
dec
push
popf
cmp
pop
mov
inc
push
dec
cld
sub
push
les
test
lods
outsl
mov
adc
mov
sub
into
pop
clc
jp
mov
divb
push
in
ja
jmp
jmp
mov
mov
cmc
jp
mov
dec
aam
js
imul
cmp
in
lret
jecxz
movsb
repz
cltd
xor
cmp
std
pop
sub
adc
movsb
insb
out
mov
mov
out
inc
data16
mov
jno
sub
sbb
outsl
clc
xlat
cmp
pop
sub
pop
pop
sbb
imul
cmp
rcl
push
cmp
test
pop
cmp
gs
stos
jge
mov
cwtl
pop
out
jle
and
mov
pushf
pushl
sbb
lahf
popf
cmp
subb
add
and
daa
add
dec
cli
and
jmp
sti
lea
and
in
decl
mov
setl
cmp
pop
cmpsl
call
fucomip
xchg
jmp
sub
in
lahf
and
inc
test
or
repz
jle
pop
clc
cmp
mov
jp
movsb
and
add
jg
test
cwtl
shlb
call
loop
popf
xchg
xchg
loope
loop
fnsave
pop
xor
repnz
jo
lods
icebp
adc
imul
hlt
aam
push
adc
fcmovbe
pop
lods
pop
fdivr
rcrb
push
push
cmpsl
and
push
push
ds
jecxz
xor
cmp
xchg
pop
jo
lret
jl
jns
sub
repnz
jg
pop
or
mov
jl
cmpsb
jb
jge
lock
test
into
add
add
bound
jo
mov
mov
dec
jnp
dec
pop
sub
sbbb
xor
inc
xor
into
jns
cld
or
psadbw
sahf
jp
cltd
cmp
push
lea
test
cmovo
clc
popf
aaa
sub
jmp
add
icebp
pop
and
scas
mov
xor
popa
iret
mov
repz
test
shll
and
popf
xchg
shrb
addr16
cmpsl
arpl
and
add
xchg
sti
sbb
pop
push
outsb
cmp
push
mov
mov
dec
nop
mov
aaa
pushf
pusha
sbb
inc
xchg
out
add
and
or
pop
testl
popa
movl
fstpt
jno
shrb
xor
mov
popf
sarl
lahf
nop
daa
outsl
aaa
int
or
cmp
lahf
inc
arpl
sbb
insb
sbb
or
pop
pop
fsubrs
add
les
or
std
gs
jmp
sub
arpl
fisubrl
cmp
jle
mov
jle
dec
xorb
mov
aam
sbbl
loopne
mov
pop
pop
cmpsl
dec
imul
dec
push
mov
dec
mov
adc
andb
adc
loope
xchg
pop
sbb
sbb
in
subl
xor
js
lods
mov
fildl
and
xchg
orb
push
imul
xor
adc
lock
push
adc
or
in
cld
sub
bound
adc
pusha
dec
jecxz
sub
jmp
mov
and
and
dec
lea
les
fisubrl
ret
popf
inc
nop
pop
jl
test
dec
dec
ret
lea
add
lret
pusha
and
mul
mov
inc
icebp
mov
dec
hlt
and
fwait
push
jno
cmp
jbe
jbe
xchg
push
xchg
and
iret
push
push
in
dec
dec
mov
sub
dec
xchg
and
ss
es
adcb
push
test
cmpsb
and
pop
iret
pop
mov
cmp
leave
hlt
push
inc
and
push
fmuls
push
cwtl
mov
dec
push
leave
sub
pop
cmp
mov
cli
pop
xchg
gs
push
gs
jle
adc
push
sub
cltd
pop
xchg
mov
push
xor
or
cmp
xchg
ja
xchg
add
out
pop
loope
adc
adc
cmpsb
dec
xor
insb
cmc
fldcw
sub
and
fldcw
cmc
ja
and
adc
mov
sub
mov
mov
hlt
fs
ss
jb
cli
addr16
imul
dec
ljmp
cmp
jecxz
testl
or
fistl
daa
adc
daa
or
call
cltd
ffreep
out
jmp
mov
mov
inc
mov
or
push
jo
push
shll
dec
and
add
and
xchg
add
dec
pop
mov
clc
xchg
stos
fucomip
or
inc
data16
stos
nop
add
mov
iret
and
js
pop
fiaddl
mov
pop
pop
clc
lcall
and
les
pusha
popl
adc
aas
jmp
imul
dec
mov
leave
sbb
int
push
jno
in
fucom
stc
sub
scas
dec
ljmp
mov
xchg
pop
sbb
fisttpll
aam
xchg
or
mov
je
loope
fnstsw
xchg
mov
xor
scas
into
sub
int3
lds
lret
test
popa
pop
pushf
stos
rcl
or
add
push
jns
push
rcr
aaa
mov
sbbb
sbb
sub
adc
mov
test
push
mov
std
out
sbb
sbb
adc
mov
cmp
insl
movsl
in
mov
dec
in
sbb
shrl
jecxz
add
xchg
ja
mov
cs
in
mov
loop
lods
inc
cwtl
mov
sbb
pop
in
add
pop
xor
push
push
sub
iret
sub
and
jmp
mov
sub
cmp
jp
mov
inc
sub
lret
mov
sub
xor
jne
or
sbb
sbb
loopne
fcompl
lret
imul
loopne
test
mov
int
in
mov
ss
aaa
sbb
popa
push
das
add
int
mov
cmc
add
in
std
ja
jae
fs
xchg
pop
mov
ljmp
ljmp
lds
adc
pop
cmp
dec
mov
push
or
popf
fidivrs
push
aad
lea
add
daa
sbb
mov
sub
add
sbb
push
lcall
jecxz
sub
mov
test
insl
or
das
cmp
cmpsb
dec
test
repz
movsb
out
inc
dec
add
xor
mov
xor
clc
sarb
out
xchg
fdivl
imul
scas
xchg
jecxz
dec
push
in
ret
lods
xchg
iret
int3
cmpsb
nop
stc
push
push
pop
pop
mov
sbb
cli
cmc
mov
in
enter
sti
or
adc
cld
adc
or
jns
call
xor
nop
mov
or
lods
hlt
and
stos
popl
jbe
roll
cwtl
jecxz
test
orb
loope
push
mov
jae
pop
aam
mov
adc
pop
in
fisttpll
dec
cmp
mov
and
je
inc
test
dec
jno
outsb
pop
xchg
and
adc
xchg
pop
xchg
mov
xchg
in
ds
sti
push
cmp
and
mov
int
jge
pop
lahf
pushf
sbb
adc
sarb
and
add
lahf
faddl
xlat
xorl
push
out
push
fbld
orl
cmpsl
add
sbb
fidivrs
pop
xchg
mov
pop
dec
lret
inc
sub
mov
inc
xor
aas
add
lods
sbb
pop
leave
test
les
sub
xor
cmc
adc
lahf
pushaw
mov
inc
lock
insb
cld
cmp
fucom
sub
mov
mov
div
inc
inc
and
ss
sbb
rorb
pop
sbb
pop
pop
adc
pop
mov
mov
dec
loopne
xor
pop
xchg
ret
cli
sbb
sbb
arpl
and
mov
xchg
int
sbb
pop
in
das
push
pop
lcall
loopne
andl
mov
in
pop
lret
xor
adcl
lahf
dec
fs
lret
or
xor
rcr
out
cmp
or
sub
jbe
sub
arpl
inc
es
dec
fimull
dec
xor
filds
in
jp
cli
sti
and
pop
stc
push
push
stos
push
adc
or
fisubl
xchg
das
dec
stos
es
jmp
pop
and
pushf
jp
movups
or
fs
cmpl
imul
fdivrl
sbb
int
clc
mov
rorb
push
out
repnz
aam
test
cmp
repz
fcompp
into
jno,pn
cmp
sub
jne
add
iret
ret
push
mov
rolb
adc
fcoml
xchg
cs
fnstenv
cltd
cmp
mov
fcoml
xor
mov
enter
clc
ss
xlat
loopne
sub
and
loopne
push
xchg
pop
pop
ss
das
in
mov
xor
stc
pop
sub
pusha
fwait
xor
stc
and
jge
push
jns
cld
ljmp
or
mov
mov
in
add
outsb
or
pop
scas
shll
std
sub
out
push
inc
mov
or
or
cmc
sub
psrlw
clc
dec
dec
ror
mov
push
cmp
clc
clc
inc
sbb
jg
int
pusha
roll
aam
cli
or
in
mov
ds
jo
sub
fcmovnu
inc
mull
ffreep
mov
icebp
lock
fdivl
add
xor
and
cltd
ja
iret
inc
out
addl
jle
or
sub
cltd
cmpsb
inc
insl
mov
and
add
mov
sub
lea
test
fdiv
mov
fsub
ret
test
inc
mov
mov
fcmovnbe
pop
test
imul
insb
or
nop
mov
jae
jg
jbe
pop
xor
int
lods
add
xchg
xchg
pop
jmp
ficoms
movsb
cwtl
push
hlt
mov
sbb
jae
xor
xchg
and
mov
aaa
cmp
rcrl
mov
and
pop
fwait
repnz
or
ret
scas
loopne
mov
dec
sbb
or
jne
mov
out
fildl
jle
icebp
int3
jbe
jge
jno
dec
mov
mov
adc
cltd
outsl
out
mov
pop
mov
sti
mov
int
mov
sar
jg
mov
loope
jle
insb
repnz
mov
sbb
push
mov
outsl
sbb
push
mov
sbb
sbb
jl
push
arpl
int
dec
adc
xor
mov
push
push
jns
mov
out
mov
jno
jp
sbb
das
fnstenv
cltd
andl
aam
add
mov
jnp
clc
fs
or
fimuls
aad
xorb
scas
and
pop
testl
daa
stc
dec
fistps
fs
insb
jb
xchg
ja
cmp
cmpsb
mov
lods
popa
and
jno
lods
stos
add
adc
lcall
int3
std
divb
repnz
add
out
sub
push
push
cld
insb
in
out
das
or
mov
mov
mov
mov
cld
inc
push
xor
inc
jbe
bound
xor
addr16
mov
xor
out
outsl
add
or
or
push
sbb
xor
or
mov
inc
push
pop
insl
fmuls
adc
inc
out
mov
cmp
mov
fwait
inc
adc
dec
mov
ret
mov
push
pop
or
ja
and
aad
jbe
outsl
dec
jmp
cmp
cmp
loopnew
es
jmp
mov
push
fwait
xchg
movl
xchg
popl
inc
shrb
test
insb
ret
imul
leave
std
std
shlb
lods
popf
insl
clc
lods
jns
fwait
mov
retw
rcrl
adc
cmp
and
lahf
mov
dec
xchg
mov
sub
ret
cs
xchg
mov
call
xchg
ret
jne
cmp
push
cmpsl
jmp
jb
testl
push
jno
xchg
or
push
imul
mov
jg
mov
test
icebp
lret
jnp
rorb
dec
in
add
sti
repnz
jne
push
cmpsl
outsl
push
jmp
fimull
mov
mov
jns
mov
mov
addr16
jmp
xor
imulb
fs
scas
aad
ja
sbb
jo
loopne
int
xor
testb
aaa
mov
scas
xchg
dec
sub
mov
mov
in
add
lock
push
mov
vcvtsd2si
xlat
or
jge
mov
and
pop
repnz
push
push
repnz
es
and
mov
xchg
sbb
popa
ret
jno
fwait
in
pusha
mov
pop
rcrb
mov
nop
sti
les
inc
add
in
data16
xchg
adc
and
orl
mov
adc
mov
mov
push
sub
sbb
xchg
imul
push
push
cwtl
cmp
or
loop
insb
lds
rclb
pop
out
and
jne
add
or
arpl
jle
push
jp
cmp
push
cmpsb
pop
fistpl
fs
scas
mov
cmp
xchg
mov
dec
cmc
xchg
jae
loope
leave
test
pushf
ret
jmp
mov
sbb
in
and
bound
mov
mov
iret
mov
push
sub
sub
xchg
push
xchg
push
incl
jle
jne
inc
adc
adc
shrl
imul
dec
mov
outsb
lods
test
cmp
enter
mov
popf
cld
xor
adc
adc
leave
or
push
xchg
or
mov
rolb
pop
data16
jge
loop
jbe
add
mov
xchg
dec
movsl
ljmp
or
jno
jb
push
and
scas
lcall
inc
imul
data16
addb
iret
add
mov
lahf
aaa
test
adc
adc
xchg
into
xchg
push
popa
cwtl
into
or
out
mov
xchg
lods
inc
cld
jbe
dec
jo
hlt
sub
cs
sahf
test
mov
mov
cmp
in
lahf
jno
sub
ret
add
push
ljmp
mov
dec
adc
cmp
repz
scas
stc
push
je
pop
add
loopne
or
push
mov
xor
js
int3
fcmovne
je
sbb
xlat
in
jp
sbb
mov
push
pop
cmp
xchg
cmpsb
std
es
shl
addr16
mov
xchg
dec
sub
mov
cwtl
inc
jbe
lods
mov
add
fst
jb
dec
sub
mov
pop
icebp
ror
sbb
cs
sahf
or
outsb
jecxz
movsl
mov
or
mov
mov
sub
inc
shlb
sub
ljmp
jg
and
roll
fs
mov
cwtl
push
loopne
and
push
adcl
mov
push
dec
test
test
mov
stos
cmpsl
sub
jae
push
sbb
ja
xchg
jg
push
sbb
cli
in
xchg
into
xchg
push
addl
dec
or
jecxz
push
or
xor
add
pop
lretw
jnp
mov
hlt
leave
loope
push
adc
mov
adcl
ficoms
add
inc
xchg
inc
or
jnp
or
push
in
popf
and
aas
and
sbb
push
arpl
ret
fadd
or
outsb
sbb
and
ds
jmp
or
sbb
ja
xchg
dec
mov
or
mov
dec
mov
jnp
xchg
push
sub
cmp
mov
cmp
add
xchg
add
into
xchg
int3
jne
stos
push
jnp
loopne
dec
push
fninit
sbb
sti
push
popf
jnp
pop
adc
movsl
mov
cmp
xchg
inc
fcomps
and
mov
pop
xchg
aad
cmpsb
loop
sub
stc
sbb
xor
jne
test
into
adc
fmulp
adcb
icebp
mov
shll
jmp
mov
adc
pop
mov
mov
cmp
js
sbb
loopne
das
in
add
call
lds
sbb
aam
add
fistpll
addr16
jnp
and
inc
stos
push
xor
sub
xchg
lods
scas
bound
pushf
cld
mov
daa
xchg
outsl
addr16
sbb
lahf
and
stc
fistpll
andb
xchg
mov
mov
xor
pushf
push
sbb
in
mov
jb
test
pop
movsl
je
inc
sub
pop
xchg
out
int
fdivl
fiadds
xor
pop
sbb
shll
repnz
mov
pop
xchg
lods
mov
pop
xrelease
inc
jo
xchg
inc
push
jns
sbb
jbe
test
test
in
push
in
int3
dec
stc
clc
pop
enter
cmp
mov
sbb
mov
sbb
fs
xor
orb
into
xor
inc
mov
arpl
pop
or
movsl
bound
mov
cmp
gs
dec
aas
iret
aad
data16
shll
dec
fs
fcom
push
leave
nop
and
inc
jae
add
jmp
icebp
adc
lods
sahf
cmp
cs
pop
jl
dec
xchg
and
loope
add
adc
addr16
lods
pop
sbb
rcll
jae
xchg
test
loopne
dec
xchg
cmp
int3
out
and
xor
jecxz
adc
icebp
xor
scas
mov
leave
jb
cmp
adc
xor
push
sub
lds
nop
adc
or
je
xor
inc
fs
mov
push
pop
push
xchg
aam
fistl
mov
inc
in
push
jge
mov
xchg
inc
dec
jl
stos
addb
in
fs
fstpt
rolb
push
loop
movsl
movsb
lods
add
jbe
add
add
jg
jmp
loopne
aas
rorl
je
inc
sub
mov
in
fs
lea
ds
add
sub
shll
mov
aad
jge
push
sub
inc
sbb
stos
mov
insb
lods
cli
sbb
pop
add
adc
mov
jo
rclb
hlt
pop
and
es
repnz
aas
loopne
pop
out
clc
push
push
leave
in
pop
jp
ljmp
push
push
fstl
pushf
sub
and
mov
add
mov
loopne
mov
xor
subb
scas
pop
mov
jg
rcl
bound
inc
jmp
mov
cmp
fadds
outsb
in
iret
sbb
push
hlt
dec
out
pop
push
jo
ret
shr
loopne
loopne
adc
jp
pop
mov
outsb
or
loop
mov
cmc
dec
shlb
ret
cmp
les
push
int
mov
std
sbb
sbb
shr
aam
or
ss
pusha
push
inc
mov
sub
test
adc
rcrb
fwait
loop
push
sbb
stos
cltd
ss
mov
jg
jo
push
jp
mov
out
adc
jnp
push
test
cmp
push
hlt
jmp
lds
push
sub
cld
scas
faddl
push
lods
cld
ret
out
lahf
mov
into
xor
push
movsl
addl
cmpsb
dec
lods
xchg
mov
or
inc
push
xchg
andb
dec
aas
inc
outsb
mov
inc
aas
fwait
pushf
decb
nop
fimuls
dec
pop
and
fstp
mov
jge
movsb
xor
stc
cltd
movsb
popa
mov
sub
pop
shll
orb
lds
fcmovb
xor
loop
xor
inc
pop
aad
xor
ja
push
push
and
sti
iretw
out
inc
xchg
push
in
cmp
je
out
fisubl
xlat
pop
xor
outsb
add
fsubr
xchg
push
out
inc
mov
int3
idiv
rolb
push
jle
fiadds
ja
imul
out
cli
daa
inc
lods
fwait
mov
outsl
js
fwait
mov
jbe
ja
leave
in
mov
outsb
jle
rcl
cmp
aaa
lahf
fisubrl
add
std
les
decb
xor
mov
push
or
popa
fcomps
mov
stos
xchg
jg
cmp
mov
loope
push
fcompl
int3
xchg
mov
xor
add
inc
or
cmp
push
aas
push
push
loope
fisubl
arpl
pusha
xor
mov
testl
inc
pusha
sti
xor
int
imull
mov
cmc
js
and
iret
dec
add
push
les
insl
mov
orb
and
xchg
xor
pop
push
adc
sbbl
mov
lods
jg
pop
mov
leave
cs
and
repnz
xor
mov
push
dec
fsts
add
add
out
out
in
xor
push
xor
sbb
outsl
jae
out
cli
imulb
cltd
mov
mov
sbb
push
icebp
push
adc
mov
cmp
loope
add
popa
fists
aam
xchg
inc
dec
inc
in
cmp
mov
imulb
insl
and
push
mov
pop
lret
bound
mov
mov
mov
push
in
mov
cltd
ret
mov
loopne
inc
mov
sbb
mov
mov
or
les
clc
andb
xchg
push
fidivl
call
fldln2
ja
repnz
dec
xor
dec
into
or
push
std
sub
sbb
or
gs
dec
sbb
and
cmp
mov
or
popa
mov
jb
movsl
movaps
dec
test
shll
js
fmull
mov
lods
aaa
imul
mov
ljmp
mov
pop
in
add
add
dec
cli
adc
and
jmp
scas
nop
adc
jo,pn
ret
addl
sbb
jae
dec
mov
xchg
nop
jecxz
xchg
xchg
lods
or
mov
cmp
adcb
aad
adc
push
fildll
stc
test
mov
and
or
sbb
mov
in
pop
pop
shr
mov
jp
loopne
inc
xor
out
jp
fs
in
mov
sbb
pop
insl
cli
push
and
adc
popa
add
ljmp
icebp
sub
mov
out
cmp
mov
pusha
mov
pop
mov
je
and
ja
out
shl
xchg
jb
fimull
fnop
dec
pop
and
xchg
cs
addr16
enter
xor
js,pt
sbbb
rcll
imul
mov
xor
popf
jne
adc
mov
in
push
fimuls
movsb
mov
call
xor
outsl
mov
scas
push
sub
punpckhbw
xchg
std
cmp
dec
rcl
sub
scas
dec
sbb
ret
mov
adc
jle
jg
repnz
or
iret
ret
pop
inc
pop
xor
xchg
jae
in
jnp
cmp
enter
jno
or
or
cli
xor
sbb
aam
mov
jno
sahf
and
xor
sarl
cmp
push
in
pop
test
push
add
mov
cmp
or
mov
lahf
shlb
inc
or
out
cmc
xorl
mov
mov
test
cltd
jb
push
inc
dec
mov
enter
xor
mov
dec
test
and
and
dec
icebp
jle
jl
add
test
jle
int
sbb
aam
stos
push
stos
test
pop
mov
xchg
or
add
sub
int
aas
mov
test
push
neg
hlt
adc
hlt
test
sub
xor
mov
inc
cmp
mov
xor
notb
mov
das
inc
mov
fistps
lods
data16
or
fldt
inc
fs
fcoms
lret
dec
addb
faddp
lahf
cmp
insl
pop
xchg
mov
lods
cmp
test
arpl
and
xchg
jne
popf
call
lock
lods
std
dec
and
push
es
inc
adc
inc
pop
ja
sti
cmpb
mov
daa
mov
push
jb
pushf
lock
pop
das
out
repnz
out
inc
ret
loop
test
int3
shlb
ret
cmp
cmp
out
jge
in
je
jo
and
add
scas
stos
mov
cmp
pop
nop
dec
int3
test
mov
fs
pusha
popf
mov
dec
pop
xor
aas
pop
outsb
jp
imul
in
fwait
test
movsb
ret
or
push
pop
js
insl
lahf
and
and
mov
out
push
push
out
clc
mov
mov
pop
stos
pop
cmpb
push
scas
jmp
xor
xor
sub
push
mov
aam
xchg
cwtl
movsl
jne
aas
cmp
popf
xor
jl
jge
mov
mov
xor
push
mov
in
mov
jae
and
add
and
xchg
scas
lds
or
je
rcrl
push
adc
and
dec
pop
jne
mov
jl
xchg
mov
push
aad
add
pop
out
and
adc
jg
jge
inc
in
pop
cld
jle
pop
push
inc
dec
es
rorb
dec
mov
xchg
out
test
cmp
sbb
xchg
dec
hlt
dec
addl
or
stos
jmp
fistps
cmp
dec
ficoml
lahf
xor
movsb
cmc
dec
popa
fistpl
and
cs
xchg
inc
jp
and
cmp
add
xor
xchg
or
sbb
insl
dec
sbb
out
push
xor
jb
mov
hlt
xchg
test
mov
lret
in
clc
das
mov
pop
add
insb
inc
rorl
jns
lret
pop
jge
stos
mov
add
rorb
fwait
sub
ret
add
andb
inc
shlb
xchg
cwtl
das
sub
add
sahf
lea
mov
pop
lcall
mov
pop
adc
xor
jb
or
dec
enter
enter
jle
xchg
int
cmpsl
xchg
fld
push
in
inc
ja
ret
adc
test
jnp
pusha
js
jecxz
rcrl
aas
scas
movsb
mov
outsl
stc
cltd
hlt
fcompl
mov
push
jl
or
insb
or
mov
shr
mov
dec
mov
push
pop
divl
shlb
lret
lret
jg
xlat
mov
repz
inc
mov
sub
and
push
pop
sub
inc
xchg
std
loopne
aam
cld
cmp
cmp
pusha
clc
movsl
cmp
push
repz
sub
outsl
mov
dec
pusha
xchg
adc
mov
mov
inc
jp
cmc
xchg
or
rcrl
iret
adc
xor
jecxz
sub
push
mov
aaa
jecxz
sbb
nop
fisttps
xor
dec
mov
dec
lcall
enter
test
xor
xchg
enter
hlt
jne
push
dec
test
jne
dec
sbb
mov
jp
das
xchg
sbb
ret
xchg
sbb
add
fwait
test
lret
mov
push
jno
pop
lock
mov
mov
push
mov
sbb
je
mov
nop
mov
lahf
mov
rol
xchg
leave
movsb
repz
and
xor
lock
outsb
je
pop
pop
pushf
pop
pusha
dec
inc
or
in
fldpi
cmpsl
add
std
rorb
mov
dec
fldenv
clc
leave
and
and
xchg
and
les
out
scas
fwait
and
jg
dec
sub
pusha
cmp
mov
mov
add
les
outsl
mov
and
sbb
inc
mov
xchg
cmpsb
sbb
test
dec
ja
cli
push
ljmp
mov
dec
fnstsw
mov
push
dec
adc
out
ds
test
arpl
jb
xorb
push
inc
insl
aad
movsb
fisubrl
es
dec
pop
and
fcoms
sti
negl
or
cmp
aam
loopne
call
fisttpl
cmp
pop
or
ljmp
inc
inc
fistpl
jmp
pop
stos
imul
push
loop
or
nop
push
test
lret
lret
jecxz
movsl
out
sti
mov
cmp
inc
ds
rolb
mov
push
lcall
movsb
sbb
sbb
cmpsb
xchg
xchg
pop
pop
jnp
out
fwait
jecxz
out
push
inc
push
inc
insb
fstps
mov
jmp
mov
mov
mov
cld
push
push
cltd
mov
mov
add
or
loopne,pn
jg
fisubrl
mov
push
hlt
mov
mov
jo
aad
mov
push
adc
outsb
arpl
lock
or
fcmovbe
fadds
or
pop
pop
adc
sub
or
mov
data16
js
add
je,pn
repz
movups
inc
adc
mov
inc
xor
or
push
fsubl
fwait
mov
aad
shrb
sub
idivb
repz
rcrl
data16
and
mov
xor
icebp
cwtl
nop
iret
cld
data16
cmp
enter
outsl
mov
push
add
pop
lock
xlat
imul
jb
fldcw
scas
xchg
xor
jmp
ret
pop
psraw
pop
ljmp
pop
mov
fstp
xor
in
fldt
or
lods
or
add
sbb
push
enter
xchg
mov
movsb
mov
in
pop
in
jnp
stc
rolb
fs
cmp
pusha
rcrb
pushf
push
movsb
xchg
sbb
pop
mov
inc
adc
push
push
cmp
sbb
cmpb
adc
xchg
lret
cmp
js
aaa
jmp
frstor
jge
push
fs
mov
mov
loope
push
cmp
adc
jp
mov
sbb
pop
mov
imul
xlat
popf
add
mov
js
ljmp
jbe
das
xor
pop
xchg
sub
aas
push
and
dec
mov
pop
icebp
negl
xor
stos
mov
xchg
mov
cmpb
mov
push
fisttps
adc
push
and
or
js
xorb
stos
cmp
and
movsl
push
loopne
adc
mov
cmc
in
and
and
mov
lret
stos
out
std
movsb
xor
stos
popf
push
push
mov
insl
insb
inc
stc
mov
fiaddl
inc
rorl
and
inc
pushf
lods
enter
lods
inc
xchg
push
jo
push
rcrb
stos
mov
lds
pop
popf
push
xor
das
sbb
cwtl
imul
jae
push
xor
lods
jae
pop
cmp
sti
sub
adc
lret
decl
stos
mov
dec
xchg
sbb
cs
sbb
dec
nop
push
xchg
dec
adc
fimuls
inc
data16
pop
lcall
cwtl
clc
stc
mov
pop
test
inc
adc
xchg
ret
jle
or
jae
ss
insb
cmpsl
push
inc
and
pop
or
stos
divl
popf
inc
ja
sub
outsl
loope
adc
ss
aas
jnp
xchg
jno
fcmovnu
adc
and
pop
mov
add
lret
dec
or
push
int3
pop
xor
and
in
xor
movsl
pop
adc
cmp
cmp
cmp
mov
lods
add
scas
push
add
mov
inc
mov
sub
lcall
sti
imul
stos
or
inc
sarb
mov
daa
stos
xchg
mov
add
loopne
mov
push
subl
sub
add
mov
jbe
call
or
outsb
ss
in
aas
push
push
icebp
pop
xor
add
je
inc
cld
int
je
movsl
addr16
and
or
dec
jno
xchg
movsl
mov
sub
xor
or
jo
in
roll
dec
xor
push
iret
inc
loopne
int
fimull
test
stos
test
jg
mov
dec
add
daa
aam
fistpl
pop
mov
lret
sbb
inc
inc
icebp
cwtl
push
sub
in
jecxz
xchg
or
inc
sub
mov
pop
rolb
push
cli
pop
stos
jnp
test
repz
pop
mov
loop
add
push
and
push
pop
rcrl
out
cmp
inc
mov
jae
idivl
gs
adc
add
pop
mov
push
iret
insb
pop
sub
xchg
mov
sti
inc
cmp
mov
pop
inc
mov
cmp
push
dec
jnp
subps
popf
or
mov
add
add
add
lods
repnz
popa
mov
dec
imulb
dec
ds
pushf
loopne
and
cwtl
sarb
out
out
movsl
sub
hlt
jb
inc
insl
mov
mov
sbb
jae
jbe
xchg
imul
dec
cltd
push
xchg
dec
or
arpl
dec
fcoml
imul
cwtl
std
sbb
cmp
ljmp
mov
dec
mov
pop
add
push
loopne
bound
or
jle
cmp
adc
sub
mov
insb
xor
ja
outsb
sbb
in
lahf
cmpsb
insl
test
xchg
sbb
or
dec
xlat
xchg
xchg
ds
test
notb
sbb
leave
enter
loope
inc
pop
sbb
hlt
sahf
aas
dec
testb
pop
sbbl
shl
rcr
ja
hlt
push
fs
and
jo
imul
mov
pop
jae
mov
ljmp
data16
movsl
jo
cld
lods
or
in
data16
xchg
ss
cs
andl
xchg
outsb
pushf
mov
adc
xchg
jp
inc
sbbl
leave
mov
push
add
call
or
test
push
or
inc
data16
or
jmp
aam
add
pop
add
mov
filds
sbb
sub
cmp
or
test
and
out
sti
mov
push
dec
jg
cmp
push
or
rcrl
mov
mov
add
adc
adc
push
mov
lcall
sarl
jl
lods
xor
jmp
jle
xlat
and
imul
sbb
lret
insl
fldt
jle
fcmove
lret
repz
sbb
out
xor
adc
test
mov
sbb
hlt
dec
cld
ds
xor
sahf
and
push
cli
jo
pop
mov
imul
jno
test
mov
cmpsl
lock
or
jnp
jno
or
ds
icebp
add
into
mov
push
pusha
ret
mov
and
mov
push
std
xlat
stos
pop
mov
xchg
mov
sub
cmp
loopne
js
jp
divb
movzwl
data16
xchg
pop
cs
mov
int3
movsl
jmp
movsb
fs
aaa
push
movsl
fisubrs
sarb
sub
movsb
cmc
enter
int3
rcll
sub
stos
dec
ret
pop
in
sahf
stc
and
xor
daa
push
xor
mov
repnz
test
add
repnz
mov
add
lea
push
pop
std
pop
lock
aaa
sahf
or
std
aaa
in
fs
loop
jnp
scas
lret
faddl
mov
mov
jne
cmc
in
mov
xor
push
stos
sub
cli
xlat
jbe
ret
jb
xor
fistpl
addr16
add
adcb
test
addr16
out
lods
in
pushf
fstpt
add
and
cwtl
mov
bound
sub
xlat
adc
and
inc
test
subl
jge
imul
pop
mov
pop
hlt
sub
arpl
xchg
mov
xlat
adcb
push
rorb
ror
in
mov
push
jle
or
arpl
xchg
push
fwait
pushaw
lods
push
push
sarb
subb
pop
xchg
outsl
xlat
outsb
xchg
clc
mov
out
sbb
dec
cmpsl
push
out
pop
sub
cmp
xchg
xchg
or
enter
clc
pop
shl
and
add
mov
dec
fucomip
mov
cmc
mov
stc
push
arpl
rclb
cmp
test
or
mov
int
cmp
idiv
jb
mov
jecxz
pop
and
lret
shlb
jg
out
vorpd
call
cmp
jb
std
pushf
pop
stos
xchg
dec
pop
cmp
cmp
mov
jnp
lea
sbb
insb
jmp
cmp
stc
cs
imul
dec
jbe
ds
out
or
mov
jne
sahf
es
call
fcmovnu
push
into
jb
addr16
add
lods
orb
mov
and
sub
std
lahf
pusha
xchg
rcl
adc
mov
inc
aam
std
sbb
sub
dec
std
in
push
clc
out
aad
cwtl
jecxz
dec
push
sahf
push
jecxz
js
lods
aad
push
pop
add
jg
out
inc
mov
sbb
outsl
xchg
repnz
nop
cld
pushf
cmp
mov
jno
pop
add
test
jg
xor
push
loop
insb
lds
cmp
fsts
in
decl
das
je
in
pusha
add
mov
mov
lcall
std
or
mov
or
fwait
movsl
imul
scas
cmc
loop
jae
add
jnp
ja
push
das
iret
xchg
jbe
xchg
pop
add
dec
loopne
imul
cmp
push
mov
shlb
xlat
loopne
lods
add
inc
out
repnz
ret
ficoml
push
scas
dec
push
cmp
xor
insl
push
sti
cmpsb
pop
fcmovnu
dec
inc
iret
jge
hlt
adc
xor
aam
or
jge
mov
and
mov
and
rorl
jmp
xor
jnp
out
push
lret
in
cld
test
rorl
aas
dec
in
mov
std
fdiv
leave
inc
iret
pushf
lock
call
in
and
es
lahf
outsb
mov
dec
enter
dec
repz
dec
push
das
jl
sbb
adc
andb
lret
cmp
push
inc
lahf
lret
stc
popf
xchg
cltd
bound
fisttpl
xor
mov
sbb
lock
in
pop
arpl
mov
js
or
sub
hlt
lcall
sbb
pop
inc
dec
daa
mulb
lret
std
adc
add
rcrb
jl
mov
out
sarb
xchg
cli
faddl
inc
arpl
nop
jmp
loopne
jbe
dec
lahf
cmp
pusha
and
adc
lea
mov
dec
notb
movsl
lock
lret
sbb
xchg
jae
lea
movsb
inc
jns
mov
out
dec
mov
pusha
aam
sub
push
lock
lods
movaps
cmp
enter
das
dec
pop
mov
ret
aaa
movsb
jne
das
fadd
pop
or
dec
loope
and
mov
hlt
mov
pushf
mov
jns
nop
or
scas
cmp
pop
mov
dec
mov
test
push
mov
mov
dec
fwait
xlat
push
gs
xor
xchg
cmpl
push
mov
std
ljmp
enter
fdivl
xor
push
sub
cmpsb
mov
push
mov
jmp
sub
sub
jo
mov
pushf
inc
cld
mov
push
adc
push
xor
nop
inc
push
mov
sub
mov
das
dec
loop
mov
dec
push
nop
lcall
leave
inc
cltd
nop
push
mov
movsb
jo
nop
nop
and
pop
mov
sti
jge
fdivs
mov
pusha
stos
cwtl
fimuls
xor
mov
jae
dec
lcall
pop
imul
bound
mov
xor
cmp
ret
lea
loop
or
sub
rcrb
pusha
mov
rorb
and
das
mov
push
push
mov
jmp
dec
and
sbb
mov
out
fisttps
leave
dec
shrb
xchg
out
mov
jne
stos
xorl
loopne
xlat
icebp
mov
xor
leave
add
clc
fmull
daa
adc
mov
or
imul
adc
xor
bound
rcl
das
iret
mov
nop
insl
clc
mov
jb
mov
push
jnp
mov
es
xlat
andl
ja
movsb
dec
fisubs
lods
cli
lret
cmpsl
fldcw
push
fs
sbb
jl
mov
mov
inc
lret
scas
imul
sbb
bound
loope
jp
scas
or
mov
xchg
leave
push
xor
fisubs
and
fidivrl
adc
dec
imul
arpl
pop
popa
mov
jbe
sbbl
xor
cmpl
and
inc
sub
cs
xchg
pop
push
add
int
sub
add
popa
mov
jp
pop
popf
in
pop
mov
leave
sub
mov
mov
out
fdivrs
lret
fdivl
pop
add
out
or
adc
shl
add
stc
test
nop
insl
enter
cmc
cld
movb
pop
scas
push
subl
int
ljmp
dec
xor
cli
mov
jg
cltd
test
add
cmp
xor
shlb
cmp
mov
mov
popf
push
jp
shl
adc
add
lahf
not
into
mov
mov
sbb
and
inc
add
jp
push
scas
or
cmc
mov
xor
in
or
dec
lock
add
pop
xor
popf
dec
das
inc
xlat
decl
into
fnstsw
jbe
aas
je
ja
dec
cld
pusha
rolb
adc
scas
or
jecxz
push
adc
add
xor
mov
sub
mov
and
imul
stos
insb
add
aad
jl
adc
ret
xor
clc
mov
out
cmp
cmp
iret
enter
subb
mov
mov
insl
data16
xchg
pop
gs
fwait
add
stos
lret
stos
int
jecxz
repz
push
pop
dec
pop
cmpxchg
test
pop
fcmovb
jb
sub
pushf
sar
push
dec
push
jno
cs
mov
sar
dec
out
jg
sub
xor
pushf
stos
mov
fsubrl
rorb
adc
and
sbbb
shrl
ss
xchg
popa
sbb
aaa
sub
mov
outsb
repz
sar
push
fstps
xor
in
mov
aad
or
mov
xchg
insl
lea
push
push
ja
lods
jns
sub
adc
push
test
testb
gs
push
mov
lods
pop
loop
sar
and
and
mov
push
add
and
fidivrl
sub
inc
sub
out
jne
stc
adcl
pop
sahf
xabort
in
mov
push
lods
or
in
out
mov
xor
addr16
fcom
ror
shlb
fs
out
leave
cmp
push
sbb
xchg
bound
cwtl
test
and
pop
xor
mov
cmc
icebp
mov
mov
imul
popf
push
out
mov
es
jp
inc
push
clc
mov
into
and
mov
fdiv
negb
jle
insb
std
in
sub
ret
mov
xor
sarb
int3
fadd
mov
and
xor
or
jge
cmp
inc
in
mov
xor
xchg
fsts
out
push
mov
sub
xchg
inc
dec
faddl
std
or
cld
aam
jae
loop
pop
inc
pop
iret
or
lds
adc
pop
les
dec
pushf
sbb
loop
pop
inc
icebp
mov
push
cmp
and
inc
cltd
cltd
jmp
lock
xor
loopne
jns
shrl
or
js
and
or
js
inc
out
nop
dec
sub
sbb
lret
or
mov
cld
mov
fxch
mov
aas
jmp
repz
push
insl
lods
mov
cmpsb
sub
call
push
mov
fwait
push
adc
lahf
ficoml
aaa
sbb
dec
loop
pop
pop
pop
push
xor
add
sub
in
mov
mov
adc
stos
xchg
popa
xorb
xor
mov
scas
fcoml
inc
icebp
je
subb
push
loopne
addr16
or
les
cmp
stc
sbb
mov
jl
mov
out
push
jbe
mov
sub
shl
inc
xor
into
fsts
hlt
jecxz
pop
aad
shlb
ds
sahf
mov
pmaddwd
pop
ja
or
jg
rclb
mov
add
es
into
loop
sbb
lahf
add
add
sub
jb
fists
push
dec
je
mov
rcrl
out
and
adcl
xchg
movsb
mov
mov
xor
add
push
xchg
loope
mov
and
in
les
pusha
xor
fisttps
stos
jmp
sub
shr
jecxz
xchg
xlat
cs
jae
and
or
fdivs
sbb
xchg
add
adc
cmpb
sub
push
pop
cs
es
jbe
popa
imul
push
enter
dec
stc
lods
je
or
xchg
gs
dec
outsb
dec
ja
push
fists
js
nop
sbb
inc
js
fcoms
inc
sub
mov
push
ss
sahf
and
cwtl
cmpsl
add
mov
movsb
ret
xchg
in
mov
daa
cs
mov
push
mov
sub
lahf
int
pop
lret
movsl
mov
sbb
test
push
insb
mov
rcr
xor
decb
add
scas
fisttpl
int
loop
je
or
enter
adc
push
mov
or
loop
push
loop
adc
push
mov
jg
jb
cmp
lret
pop
jmp
leave
mov
mov
imul
add
mov
stos
add
aam
aam
xor
inc
and
sbb
mov
xchg
imul
jge
call
leave
cwtl
out
sbb
jns
sbb
jmp
loopne
fiadds
out
jp
dec
xor
sarl
in
shl
iret
fldl2e
xchg
or
jnp
es
push
cmp
inc
adc
lods
lret
cmp
movsb
cmc
jmp
lcall
mov
inc
cld
pusha
cwtl
and
aas
stos
inc
jne
sub
out
in
cmp
popa
xlat
aas
and
sub
stc
mov
vmwrite
cli
popa
and
jp
sub
inc
push
mov
ficompl
sahf
push
out
xchg
lods
in
push
cmp
inc
jmp
ljmp
pop
rorl
shlb
shl
pop
push
mov
fsubl
test
mov
ret
add
cli
fcoml
dec
xor
iret
imul
mov
mov
adc
push
cmpl
sub
les
or
push
jbe
pop
mov
imul
add
repnz
inc
test
scas
aad
inc
fsubr
push
aaa
sbb
imul
dec
mov
or
pushf
popl
inc
ss
testb
in
cmp
loop
or
fs
cmc
mov
cmpsl
cwtl
sub
stos
dec
mov
sub
dec
arpl
mov
arpl
push
adc
add
ret
adc
inc
int3
or
out
push
or
pop
sbb
mov
ja
pop
lock
and
loope
test
loopne
std
cltd
aam
leave
out
les
adc
leave
jb
add
push
pop
push
hlt
into
mov
adc
aam
lahf
xchg
mov
testl
and
mov
or
adc
xor
push
push
xchg
in
gs
fs
loope
push
loope
xor
scas
sahf
cmp
sub
xchg
dec
test
and
cmpsl
ja
adc
sub
jae
mov
mov
sub
movsl
clc
pop
test
shl
leave
jmp
adc
cmp
repz
push
aam
dec
dec
jmp
pop
fistpl
jbe
sbb
test
add
pop
gs
fsubs
xor
sbb
xchg
dec
flds
clc
sbb
bound
in
in
repnz
sbb
sub
shlb
adcl
mov
outsl
sahf
ret
xchg
xchg
push
sub
inc
inc
add
test
sub
lock
in
stos
orl
cltd
imul
xchg
push
andb
fwait
imul
push
mull
cmp
jne
sti
gs
dec
rcl
dec
fnstsw
stos
mov
lods
pop
xorb
jl
sbb
and
push
mov
sub
jl
add
int3
sub
cmp
adc
dec
ret
jno
cmp
pop
and
pushf
push
cmpsl
cmp
push
lods
or
cmp
pop
inc
rcll
and
xchg
dec
in
out
inc
add
push
shll
out
jae
enter
ret
adc
enter
bound
add
je
es
sbb
push
xchg
push
push
fistl
lods
push
pop
fdivrl
mov
sub
rcrl
xor
dec
ret
sbb
bound
ret
ret
and
inc
pop
mov
int3
and
inc
lods
mov
add
mov
pop
push
aaa
data16
or
fildll
loopne
lock
push
je
sbb
out
pushl
sbb
fdivrs
imulb
hlt
pmuludq
cmp
dec
inc
jne
sbb
insb
or
cmp
cwtl
mov
cld
inc
nop
lock
nop
loopne
jecxz
pop
test
sbb
out
stc
and
mov
punpckhbw
jb
lret
fcompl
mov
scas
ret
mov
pushl
loopne
cmp
repz
cmc
mov
push
pop
movsb
fcomps
rolb
sbb
jg
rcr
int3
les
jns
or
push
je
daa
inc
inc
les
jo
mov
mov
shl
xor
add
sub
inc
int3
fcmovnbe
push
adc
sbb
fldl
mov
outsb
ss
add
adc
xor
cwtl
push
cmp
shlb
mov
mov
push
in
add
mov
or
lcall
add
jnp
mov
or
adc
aaa
cmp
jne
es
loope
add
test
mov
lret
sub
call
arpl
or
cmp
into
sub
push
mov
dec
fiadds
add
jae
dec
iret
arpl
sbb
cmp
pop
dec
leave
hlt
pop
sub
cwtl
cwtl
shl
lret
inc
sub
xchg
add
xchg
jae
cmp
jle
mov
mov
arpl
adc
push
flds
in
popf
or
inc
mov
xchg
outsl
cmp
jle
mov
push
rorl
fsub
adc
sbb
push
xchg
or
data16
idivl
pop
push
inc
xchg
mov
dec
cmpsb
int3
fcomi
stc
sbbl
jo
xchg
je
popa
test
inc
jp
dec
ss
stos
jnp
inc
inc
cmp
pop
dec
push
scas
pop
loope
jno
pop
mov
mov
aad
add
sbb
test
cwtl
cmp
dec
outsl
sti
push
ret
in
mov
mov
mov
sti
mov
add
imul
sbb
hlt
lods
inc
jle
or
mov
imul
inc
jns
cmpsb
mov
leave
inc
mov
out
push
or
push
mov
out
loopne
inc
fsub
data16
leave
jns
mov
dec
loopne
inc
mov
xor
lcall
cli
std
popf
mov
movsl
lds
push
call
test
lock
lret
movsl
push
aaa
fwait
int3
bswap
mov
lds
dec
testl
mov
test
adc
push
xor
add
xchg
mov
xchg
insl
sub
push
or
jbe
push
std
mov
popf
insl
test
scas
sti
addr16
jo
mov
movsb
rcrb
push
push
arpl
leave
sar
int3
pop
mov
dec
arpl
out
sbb
int3
xlat
push
and
sahf
icebp
int3
push
aam
dec
test
lock
sbb
jmp
lods
mov
fs
cmpsb
mov
xchg
jns
ret
icebp
shrl
dec
rclb
fsubl
inc
sub
lock
mov
or
cld
inc
repz
aaa
arpl
rolb
es
sbb
adc
xlat
lret
mov
stos
push
cmp
dec
push
push
ret
push
insl
push
repnz
inc
inc
shrb
incl
xor
scas
scas
cs
mov
mov
jne
mov
push
xlat
inc
test
dec
fwait
out
jnp
pop
inc
cltd
scas
jo
xchg
push
push
call
fiadds
leave
int
lods
xor
in
int
scas
filds
push
iret
xchg
and
cmp
sbb
jnp
fbld
mov
inc
outsl
sub
js
lahf
lea
movsl
imul
test
push
sbb
jp
mov
jnp
shr
or
jno
cmc
popl
fnsave
scas
xchg
fbstp
sbb
add
pop
adc
ljmp
mov
dec
adc
sarl
leave
cmpl
stos
cmc
insl
sub
cwtl
pop
lcall
and
adc
scas
out
fildll
mov
jnp
xor
decb
cmp
cwtl
inc
mov
lcall
repz
xor
in
sbbl
cld
mov
cmpsl
mov
adc
pop
mov
sbb
in
das
sub
and
push
cltd
push
mov
repz
mov
sub
daa
call
dec
jle,pt
nop
cld
es
rclb
lea
push
cmpl
movsl
and
push
and
clc
popa
jge
lret
fsubrs
dec
out
jb,pn
sbb
inc
out
movsl
push
xor
or
test
sahf
adc
cmpsb
outsb
cld
imull
sbb
cmp
int3
xchg
mov
push
loope
daa
in
cmpsb
rcll
ljmp
mov
pop
out
dec
rcr
push
mov
xor
inc
std
xchg
and
add
lds
mov
adc
sarb
or
loop
add
mov
aad
jecxz
push
sub
add
jmp
xchg
aad
sub
lods
jmp
dec
add
iret
stc
in
xorl
sbb
icebp
xorb
cmp
ds
outsb
mov
lcall
pusha
ss
cmp
movsb
stc
pop
push
mov
pushf
pop
and
fsubrs
mov
cli
lret
pop
sub
ljmp
jmp
cmpsb
push
or
mov
les
rcrl
imul
fisubl
cwtl
add
aas
es
mov
jo
jl
loopne
pop
xor
clc
shlb
push
fs
orb
lcall
sarb
rolb
sbb
pop
sub
xchg
push
push
ss
mov
aas
or
stc
mov
mulb
out
lahf
sahf
iret
lret
push
or
imul
or
pop
xchg
subb
clc
xchg
call
pop
dec
inc
pop
fwait
lock
loopne
mov
and
mov
mov
inc
mov
or
es
lds
push
inc
iret
and
bound
aad
popa
mov
mov
pop
sub
lcall
je
es
pop
aam
mov
stos
imulb
jnp
and
sub
jecxz
incl
stos
out
push
call
lods
push
mov
in
cmc
dec
xor
insl
int
or
or
cld
mov
sub
je
add
xchg
imul
dec
sbb
dec
dec
insb
mov
or
into
push
xchg
test
outsl
jae
inc
push
push
or
jle
jae
or
inc
insl
sbb
xchg
lds
xchg
or
and
xchg
add
ret
repz
xor
adc
pop
cmpsb
inc
mov
and
push
jg
call
push
cs
sahf
pusha
lds
mov
mov
or
push
test
bnd
rolb
repz
rorb
mov
into
cmp
sbb
lods
cmp
inc
imul
cmpsb
jecxz
lret
jl
movsl
out
jmp
aaa
xor
mov
xor
fsubrp
push
sbb
cmp
mov
insb
test
ret
xchg
ret
popf
mov
inc
pop
fcmovnbe
ds
lret
out
or
in
mov
push
mov
fisubrl
sahf
mov
or
ret
mov
scas
pop
outsb
push
push
clc
mov
jno
inc
stc
out
cmp
into
mov
inc
js
leave
rcr
and
sahf
mov
pushf
dec
push
push
mov
jmp
addb
jno
arpl
lret
add
jecxz
std
scas
inc
adc
dec
pop
int
mov
xchg
loope
pushf
gs
jb
dec
fs
cltd
je
arpl
cmc
mov
scas
shll
into
adc
mov
sti
aas
mov
push
aas
push
add
fwait
icebp
mov
das
sub
push
test
hlt
add
rcl
adc
loope
push
sub
inc
jno
data16
xor
inc
enter
mov
add
aad
fstpt
xor
cmp
cs
sbb
pop
mov
or
add
repnz
xchg
pop
push
push
dec
push
jecxz
lret
sub
jp
inc
xor
xor
iret
rcr
xor
insb
jge
test
xor
lock
xchg
mov
inc
push
sbb
jge
test
add
ret
fisttps
xor
imul
mov
inc
mov
lcall
stc
jle
dec
icebp
mov
mov
inc
dec
and
popa
cwtl
mov
orb
lret
pop
cmp
fcompl
xchg
xchg
or
ficoml
mov
mov
inc
daa
ror
pushf
orl
insl
add
or
jno
mov
jmp
jg
ss
xor
pop
and
dec
inc
les
mov
out
rolb
stos
mov
ret
sub
outsl
pop
lcall
lds
dec
sub
outsb
popa
les
in
cmp
movsb
daa
data16
mov
cld
inc
les
pop
ja
mov
xchg
ss
ss
and
mov
in
pop
inc
mov
or
sbb
mov
ljmp
ljmp
and
mov
sub
leave
and
or
xchg
sub
popa
adc
mov
bswap
sub
sbb
add
int
jne
add
xchg
scas
pushf
cs
mov
or
lret
mov
jecxz
cs
mov
lahf
dec
movsb
loop
cs
push
lret
ret
je
xor
sbb
sbb
cli
mov
cltd
aas
movb
testl
sbb
jmp
sub
cmpl
inc
mov
jb
push
repnz
sbb
mov
fcoms
ret
dec
jmp
add
pop
xchg
pop
jb
adc
les
insl
cmpsb
divb
rolb
xchg
cmp
dec
sti
pop
pop
in
xchg
leave
and
jnp
movl
aas
into
insb
cmp
dec
sahf
loopne
lods
push
in
aaa
iret
fimull
mov
cltd
push
sub
sbb
add
mov
out
mov
dec
pop
jg
outsb
or
ds
jl
sub
lahf
or
or
int3
out
clc
cmp
and
insl
call
xor
inc
push
inc
adc
ss
test
cmpsb
sbb
sti
jae
int3
xor
ds
minps
cmp
fucomi
lods
loopne
pusha
stos
cmpsl
sub
adc
out
xorl
sbb
sbb
int
push
add
dec
and
popf
dec
adc
mov
cmp
adc
test
adc
dec
xchg
mov
scas
lcall
test
pop
test
cltd
mov
jg
cltd
rcrb
dec
cli
in
mov
xlat
xchg
pop
popa
push
fisttpll
push
lret
movsb
sbb
adc
fidivs
sbbl
push
fldt
loop
std
lret
xchg
in
pop
jne
xchg
cmp
fstps
in
lahf
xor
imul
in
cmc
sahf
leave
push
out
jae
mov
push
clc
stmxcsr
inc
or
shlb
or
or
lcall
pop
cmpsb
jle
repnz
dec
cmp
out
mov
mov
scas
xor
in
sbbb
mov
mov
in
mov
imul
movsb
es
xor
and
or
jns
push
sub
fimull
pop
push
jge
lods
leave
pop
jg
movsb
mov
loop
mov
test
jecxz
inc
and
js
pop
scas
mov
int3
xchg
inc
cltd
inc
jge
pop
mov
pusha
jecxz
outsl
fwait
divb
mov
cmc
mov
fistpll
mov
xchg
js
lahf
sbb
jg
cmpsb
fnstsw
fwait
add
push
aam
pop
jae
jmp
pop
leave
fbstp
shlb
ficomps
enter
loopne
fdivrl
add
loopne
jnp
inc
jne
jmp
sbb
dec
dec
mov
and
mov
stos
pop
mov
and
addr16
insb
jbe
cmp
xchg
in
ds
or
or
lea
mov
call
clc
add
mov
inc
dec
mov
popf
das
daa
pop
jecxz
arpl
add
data16
shrl
iret
adc
mov
or
int3
shrb
mov
mov
sbbb
mov
mov
packuswb
xlat
add
aaa
xchg
in
dec
movsl
iret
add
add
cmc
add
test
test
stc
roll
iret
popa
ja
sbb
xchg
test
mov
and
test
jmp
mov
imulb
fistl
data16
adc
hlt
stos
cmp
das
fmull
pop
shrl
inc
add
mov
add
aad
mov
or
add
mov
xchg
mov
sbb
rcrb
and
sub
add
loope
mov
xor
stos
dec
or
mov
int
clc
push
lds
mov
jg
sahf
outsb
cmpsb
insl
leave
ud1
lds
inc
inc
xchg
inc
add
repnz
fs
mov
aad
push
movsb
mov
adc
pusha
pop
add
adc
mov
mov
push
aaa
pop
inc
mov
into
cwtl
push
adc
xor
adcl
stos
sub
cmp
not
test
fiaddl
lcall
addr16
mov
mov
arpl
aam
adcl
lds
or
adc
test
les
fidivs
push
test
jbe
stos
cmp
pmaddwd
fiaddl
add
pop
inc
sbb
scas
js
xor
push
and
pop
inc
jae
mov
push
or
cld
das
ficoms
cmc
mov
push
xchg
push
repnz
pop
ret
xor
pop
int3
mov
mov
mov
inc
movsl
push
fnstcw
cli
lcall
mov
jno
adc
mov
pop
je
push
pusha
insl
sar
mov
fcompl
cli
scas
lahf
cmp
jp
and
add
je
lret
loope
shll
cmp
add
jo
sub
cmc
das
push
dec
mov
add
pop
mov
outsb
mov
addr16
lret
ret
sbb
lret
mov
ljmp
pop
mov
adc
test
adc
jmp
adc
out
cmpsl
lcall
leave
stc
popa
cwtl
notl
mov
add
jo
outsl
adc
mov
imul
lret
icebp
stos
xchg
fldcw
sub
stos
jnp
push
subb
popa
push
push
adc
in
xor
repz
pop
out
mov
aas
dec
js
cmp
xor
les
cmp
xchg
jle
stc
fisubrl
sahf
jne
iret
xchg
pop
xchg
jge
std
notb
cs
ds
cs
pop
iret
cmp
cmp
jb
adc
dec
cmpsb
cmp
hlt
jae
push
or
leave
xchg
mov
outsb
notl
std
push
ja
roll
shl
fiaddl
mov
lret
pop
mov
repz
mov
les
cmp
mov
mov
cmc
or
inc
lret
dec
cs
aam
test
call
dec
mov
xlat
adcl
js
pop
xor
or
repz
fsubrl
sub
or
lcall
andb
or
les
pop
mov
stos
bound
adc
inc
clc
popa
add
outsb
jg
pop
dec
fst
pop
ja
and
or
repz
ret
bound
loope
cld
pop
not
jl
int3
push
pop
cli
pop
ljmp
cwtl
adc
test
xchg
out
push
pop
pop
dec
roll
ljmp
ret
sbb
jge
mov
mov
mov
jge
push
ja
lock
sti
pop
neg
dec
fists
gs
stos
stos
xchg
mov
lret
fcoml
out
call
shl
mov
cmp
cmp
test
imul
or
pop
hlt
mov
nop
test
push
fisttpll
frstor
ret
or
cmpsb
dec
call
inc
in
mov
adc
mov
add
xchg
adc
out
jae
jp
icebp
jo
nop
lcall
sub
jae
jmp
and
sbb
jmp
pop
pop
sbb
push
stc
scas
pop
std
ficoms
imul
int3
insl
scas
mov
test
pop
neg
jo
pop
lods
and
cmpsl
lods
pushf
or
jecxz
sbb
scas
loopne
pop
repnz
jne
out
ja
repnz
lock
lret
pop
pushf
test
or
sahf
orb
popa
ss
enter
jg
mov
cli
sbb
clc
icebp
jmp
mov
gs
mov
xor
outsb
addl
iret
in
fldt
xorb
xor
fldl
push
in
adc
pop
xor
aas
sub
add
jns
xchg
dec
mov
inc
popa
les
int3
in
aad
xchg
movsl
or
jle
jmp
pop
or
rcll
jne
fildll
mov
int
dec
cmp
xchg
xor
aaa
loope
dec
fldcw
adc
ret
js
fwait
sar
pop
ss
and
stc
lock
and
adc
inc
add
pop
mov
add
cmpl
sti
ds
loopne
add
mov
les
daa
test
mov
mov
jns
dec
out
mov
cmpsl
pop
mov
imul
outsl
push
iret
push
out
outsb
xor
dec
add
jns
dec
inc
ret
jnp
aaa
mov
cltd
data16
je
into
ds
inc
imul
popf
scas
xor
sub
mov
adc
jnp
sub
sbb
adc
add
out
movsl
and
scas
ljmp
xor
fcoml
or
push
out
cld
adcl
mov
inc
mov
sbb
mov
adc
jno
orl
push
sub
xchg
adc
cwtl
adc
xchg
pusha
cwtl
xchg
roll
cli
cmp
pop
icebp
lods
bound
stos
mov
sub
or
mov
pop
je
and
jns
jl
out
imul
xchg
cmc
adc
and
pop
pusha
cli
xchg
jg
sub
insb
dec
fdivp
jns
mov
dec
xor
mov
pusha
icebp
push
xchg
or
push
dec
xchg
je
and
or
ss
jle
push
fsubr
loopne
sbb
mov
test
test
and
nop
sbb
mov
aas
stos
mov
in
jae
add
inc
es
xchg
inc
mov
rcll
inc
les
push
popa
ret
lods
pusha
outsb
inc
jne
xchg
faddl
dec
insb
xor
mov
popl
shr
call
neg
push
loopnew,pt
mov
add
mov
mov
repz
pop
jb
pop
push
rcrl
push
les
mov
lods
insl
mov
xchg
jb
push
ret
stc
fidivrs
pop
fcmovbe
pop
pop
mov
push
lcall
insb
xchg
xchg
push
fisttpl
mov
sti
je
stos
adc
scas
mov
divl
and
scas
adc
out
imul
push
jmp
popf
xlat
stos
or
mov
cmp
rolb
jnp
in
daa
shlb
sbb
or
lock
push
fcmovb
mov
fcomip
sarl
pop
fisttpll
fdivs
xchg
iret
push
ja
push
faddl
add
jp
iret
lds
lret
sbb
leave
stc
xchg
sbb
mov
jns
jle
dec
push
jns
nop
call
mov
or
adc
fsubrl
push
in
pop
andl
sbb
mov
xlat
xchg
scas
ret
addr16
mov
and
cli
dec
jge
push
rorl
mov
enter
imull
xchg
pop
mov
xor
inc
iret
nop
icebp
cmp
fcmovnbe
out
dec
cmp
ret
stos
jo
out
dec
shl
sub
or
mov
cmpsl
jae
repnz
jecxz
adc
dec
stos
jl
scas
pop
xchg
popa
xor
cmp
xor
add
outsb
stos
mov
fstpt
loope
mov
sbb
add
pop
and
out
fldenv
das
dec
inc
jecxz
mov
fyl2x
mov
mov
stos
pop
add
test
xchg
daa
inc
cmp
aaa
push
in
nop
mov
jle
and
xor
inc
jg
js
addr16
or
into
ret
test
xchg
add
jp
adc
in
adc
dec
in
fs
std
dec
data16
jb
fdivrp
clc
repz
shl
and
das
jle
cmp
std
dec
mov
jmp
pop
mov
es
mov
sti
xorl
sahf
repnz
mov
sti
or
out
aas
sub
and
mov
mov
xor
sub
stos
out
mov
mov
add
adc
ficoms
aad
fstps
rcrb
aam
sub
movsl
pop
stos
xchg
les
test
or
mov
cmp
or
inc
cmc
or
xchg
mov
out
pop
inc
sti
cmp
addb
fsubrl
push
mov
push
sbb
push
jge
add
or
fsubr
jo
aaa
enter
int
enter
pop
repnz
pop
jnp
pop
add
lock
mov
rcr
mov
and
mov
dec
sti
fwait
add
sub
mov
mov
inc
jg
adc
ret
pushf
lret
out
mov
fcoms
push
mov
test
lret
xchg
xchg
xor
icebp
in
pop
iret
fistpl
jb
fidivl
fwait
popf
les
jg
sbb
sbb
and
inc
fwait
dec
nop
jp
jnp
dec
leave
cli
or
jmp
push
xlat
dec
jecxz
cli
lea
xchg
sbb
icebp
divl
in
adc
mov
mov
in
adc
je
push
lahf
int
cltd
lds
inc
adcb
cmp
adc
movsl
jmp
xchg
or
push
add
ss
sbb
add
mov
mov
mov
add
sti
xchg
cmp
andb
jle
addr16
inc
aad
pop
cmp
mulb
in
sbb
sbb
arpl
sbb
pop
mov
mov
sub
ljmp
repnz
xor
imul
negb
fcmovnu
repz
sub
mov
movsl
dec
cmp
pop
gs
xor
mov
fistpll
sbb
das
cmp
std
sti
mov
loope
inc
sub
inc
lahf
dec
sub
sbbb
ds
pop
lds
mov
adc
sbb
mov
jp
sub
loop
outsb
xchg
xor
pop
test
or
jae
pop
jns
jo
inc
jne
fs
jo
or
rorl
mov
mov
aam
mov
popf
outsl
mov
push
mov
ret
jl
daa
insb
cli
lret
aaa
adc
sub
sbb
ljmp
and
aam
test
shrb
ffreep
aaa
orl
sbb
in
inc
fcmovnbe
decb
daa
xor
sarl
lods
dec
outsl
mov
cmpb
loopne
mov
out
inc
iret
leave
fidivs
pop
aas
inc
repnz
repnz
std
pop
xor
pop
ret
dec
dec
dec
push
jo
lea
or
int3
and
push
dec
in
incl
outsw
aas
call
ss
xchg
sub
xchg
cmp
cmp
push
push
add
mov
mov
loope
ret
lahf
out
insl
adc
push
jo
inc
rep
or
cmp
push
push
adc
addb
and
insl
pop
ss
mov
dec
xor
clc
int
loope
mov
das
mov
push
std
sub
jp
and
out
sbb
adc
int
xchg
shrb
mov
xchg
sbb
jo
xor
sbb
sbb
aad
punpcklbw
pop
inc
lods
inc
out
into
lods
xor
push
mov
cld
lret
push
sub
adc
adc
sbbl
jnp
adc
xor
popa
mov
jmp
sar
push
or
mov
mov
pushf
xchg
lret
mov
xchg
sbb
pusha
push
cmpsl
dec
shl
pop
dec
test
jecxz
sarb
jbe
or
push
lahf
inc
add
cmpsl
in
cmp
mov
notb
dec
cmc
dec
push
bndldx
negb
inc
in
insb
stc
push
addr16
push
cmp
repnz
lret
and
ja
sbb
ljmpw
ficompl
pop
pusha
xchg
dec
shrb
sbb
lahf
dec
sbb
and
mov
shrb
popf
xchg
jb
add
fildll
cltd
dec
rolb
lock
test
xchg
and
test
orl
add
sub
xchg
push
pusha
lret
push
rolb
jb
inc
fcoms
popf
stc
mov
fsubl
cmp
jb
cmp
das
or
pop
lods
insl
int3
sub
ret
jg
pusha
cmpsl
push
cmpsb
mov
jne
subb
sbb
pop
cs
into
mov
enter
fadd
shll
inc
ror
jnp
out
push
dec
sti
jg
jmp
fisubrl
cwtl
adc
sbbb
mov
mov
shrb
mov
nop
mov
lcall
fucomi
add
out
test
sbb
mov
out
gs
aas
jecxz
hlt
mov
inc
mov
sbb
adc
outsb
cmp
jnp
jge
xchg
pop
popa
jbe
and
inc
nop
mov
push
loopne
and
push
jo
xchg
jne
push
xchg
je
andl
xor
mov
push
call
mov
pop
add
pop
pop
mov
sub
sahf
jl
mov
inc
cli
stos
out
fcomip
jb
lock
xlat
jp
xchg
jg
push
jbe
data16
fnstsw
jns
dec
or
leave
ss
aam
insb
adc
daa
or
imul
aaa
xor
fs
mov
push
mov
fwait
jl
mov
xchg
ficompl
dec
mov
lcall
ds
fidivrs
xor
sub
mov
cmc
pop
push
movsb
sbb
xor
iret
jb
mov
pop
mov
loope
test
sbb
xor
aad
sub
mov
sbb
xchg
hlt
clc
popa
jp
arpl
pop
inc
push
mov
push
ret
xor
aaa
dec
es
repnz
test
cmpsb
lret
push
iret
xchg
mov
ds
cs
sbb
mov
call
icebp
mov
jno
mov
test
divl
xlat
xchg
jg
ficoms
in
in
iret
out
pop
xor
sbb
mov
inc
das
sbb
push
outsb
arpl
sub
testl
mov
int
adc
pop
push
psraw
rcl
push
fmuls
mov
and
jecxz
and
pop
and
in
push
mov
inc
rcll
and
and
xor
push
xorb
fs
pusha
subl
mov
sti
cmpsl
orb
and
stos
mov
mov
cmp
fidivrl
and
push
dec
loope
cmp
aam
mov
mov
push
mov
js
loop
or
push
mulb
scas
lret
xchg
mov
inc
push
in
push
lret
roll
loope
mov
pop
loopne
lret
pop
pop
mov
insl
call
shrb
jne
scas
imul
ret
loop
movsb
ucomiss
dec
test
fs
mov
testb
je
dec
jg
mull
cwtl
ss
aad
jmp
push
ljmp
adc
and
movsb
or
jae
loop
cld
push
add
xor
sahf
sbb
push
sub
pop
mov
mov
add
jb
mov
dec
das
cmp
add
sti
fldt
repz
and
push
jnp
fmuls
and
xor
into
xchg
lock
rclb
ljmp
push
add
movsb
dec
xor
cmpsb
dec
xor
jnp
cmc
xchg
mov
fildl
and
pop
gs
into
outsl
daa
pop
test
push
shl
in
cmc
pop
push
mov
inc
xchg
data16
int3
adcb
je
pop
je
mov
shll
ffreep
mov
nop
vmread
jno
push
or
dec
fidivrl
or
fld1
cmc
movsb
and
sub
pop
addr16
mov
mov
pop
outsl
icebp
rcrl
mov
xchg
outsb
xor
mov
cmpl
shll
jae
enter
dec
adc
cld
into
test
adc
inc
stc
mov
call
mov
aam
push
cmp
xchg
mov
pop
mov
cmp
std
in
sti
sbb
lcall
loop
dec
arpl
stos
std
rcrb
sbb
iret
add
negl
inc
jo
lods
jns
adc
pop
mov
fcoml
fsts
or
mov
jae
jecxz
repnz
sub
mov
jb
repz
mov
lds
jle
aas
iret
in
mov
push
aaa
cmp
adc
xchg
div
sub
pop
mov
addr16
sarl
es
stos
xor
sbb
and
pop
lret
lcall
aad
or
mov
icebp
inc
mov
inc
loop
ret
rcrl
mov
dec
js
dec
cld
shrl
jns
mov
jle,pn
jg
pop
scas
lret
xor
xchg
in
mov
xchg
cmp
lret
outsb
aam
das
call
fcmovnb
add
push
or
pusha
pop
cmpps
decl
and
dec
pop
xchg
jge
imul
lahf
bound
popa
push
icebp
jbe
adc
push
repz
cmp
mov
cld
popa
push
rolb
icebp
out
sub
sahf
test
iret
pop
movsb
inc
ss
cmp
and
mov
testb
xor
cmpsb
mov
insl
sub
adc
pushf
jae
cwtl
mov
sti
dec
test
fildll
ret
mov
divl
aam
sti
inc
cmp
fdivrl
dec
ret
jp
loopne
stc
sub
xor
add
repnz
testb
or
inc
int
dec
in
xchg
andb
lret
xor
xchg
inc
push
jle
add
pop
aas
xor
rcrb
xor
and
stos
aas
add
sub
iret
fisubrl
add
out
push
mov
dec
pop
sahf
sbb
pop
sub
sbb
das
inc
push
jns
cmp
push
mov
mov
sbb
mov
outsb
data16
xchg
fistpl
leave
adc
rcrb
xor
xchg
sub
ret
add
rclb
add
mov
movsl
cwtl
andb
fnstcw
xor
insl
mul
jle
mov
div
fldt
sub
add
out
fidivl
int
jbe
daa
sti
bound
xor
xor
sarl
loopne
mov
and
pusha
mov
shll
jg
testb
mov
cmpsb
or
xor
xchg
jle
mov
cmp
push
test
xchg
push
xor
ja
push
lahf
clc
xor
jo
fistpl
inc
addr16
or
insb
sbb
xor
cwtl
sub
pop
xor
add
push
fisubl
dec
loopne
jne
sub
loop
enter
je
add
sub
sbb
inc
repnz
cmp
and
mov
loopne
cs
mov
mov
sub
lahf
pop
cmp
sbb
aaa
lds
int
push
mov
push
out
lods
mov
rolb
jbe
push
lods
pop
jecxz
and
ss
jb
add
push
adc
cwtl
sbb
sbb
mov
mov
cmp
aaa
and
sbb
cmp
and
jl,pt
mov
icebp
push
mov
xor
push
fcmovnb
cli
and
mov
pop
jne
jecxz
scas
movsb
lds
sbb
clc
xor
xor
lret
rcrl
and
fnstsw
loop
std
xor
and
mov
inc
sbb
jae
fsubl
jns
add
aas
mov
xchg
sub
fcom
add
cltd
cltd
aad
adc
insb
fistps
sbb
and
mov
mov
jnp
std
xor
lcall
add
dec
jbe
test
ljmp
fs
mov
imul
adc
outsb
lahf
aad
mov
in
inc
int
mov
sbb
lods
je
into
scas
pop
je
jmp
jne
or
push
das
jno
ret
nop
push
pop
sbb
test
sub
xchg
jns
or
mov
xchg
outsl
lret
ret
mov
nop
add
mov
rcrb
pop
push
scas
mov
sub
adc
cld
shrb
inc
sbb
jmp
add
cmp
and
test
push
or
pop
or
out
rcl
out
sub
push
fists
outsl
push
test
or
xor
cli
test
in
inc
push
out
jle
or
jnp
pop
roll
gs
je
sbb
xor
sub
lods
aas
cli
pop
insl
inc
aam
adc
aam
inc
mov
test
dec
test
mov
dec
mov
add
aas
cld
lret
outsl
jle
xchg
sbb
push
sub
adc
xor
mov
addr16
imul
pop
jno
fcoms
pop
mov
dec
sahf
mov
inc
pop
dec
lahf
dec
in
cld
pop
addr16
stc
movsb
sbb
ds
jae
adc
arpl
cmpb
sbb
popf
and
scas
test
jae
movsl
cltd
pop
das
xchg
sub
inc
stc
jne
dec
xchg
fisttps
mov
mov
enter
xchg
push
and
xchg
repz
mov
mov
mov
add
inc
data16
int
das
scas
xchg
dec
dec
and
call
and
pop
imul
mov
mov
push
and
add
inc
das
mov
xlat
pop
ljmp
popl
jne
in
cmpxchg
jl
int
adc
popl
fldenv
cmp
jnp
cmp
adc
pop
fcompl
repz
mov
push
pushf
mov
aas
fldenv
mov
or
in
hlt
repz
ljmp
push
loop
test
add
inc
int3
ret
adc
repz
fs
outsb
adc
lcall
test
cmpsl
mov
mov
xchg
mov
add
fistps
add
aaa
into
or
pop
mov
push
mov
es
lock
in
fbld
lret
or
shl
js
popf
sbb
xchg
movsb
fbld
rorl
leave
xor
xor
push
xchg
ss
cmp
xchg
fidivrl
jo
pop
lret
lock
ds
cmp
cmc
xchg
insl
and
daa
cli
jge
xchg
sar
loopne
cmp
mov
sbb
jae
and
outsb
lods
and
push
cmp
xchg
pop
dec
sahf
aaa
mov
rcr
hlt
cmp
rcrl
mov
in
out
pop
jno
push
call
loopne
xchg
gs
mov
cld
fsubs
mov
mov
push
xlat
leave
or
jge
inc
xor
fs
imul
xchg
daa
repz
dec
lock
mov
fstps
push
lock
and
out
inc
cmp
xchg
daa
add
xor
pop
stos
hlt
push
dec
mov
dec
sub
xchg
pusha
rorl
je
mov
and
adcw
pop
call
xchg
xchg
sub
clc
test
stos
push
jb
dec
shl
paddw
inc
lcall
xchg
insl
jne
and
sbb
clc
mov
mov
sahf
jmp
sbbb
pop
fdivp
mov
add
enter
loopne
rclb
fsubr
scas
js
sbb
stos
pusha
dec
push
mov
jnp
pop
sahf
add
and
hlt
repnz
xchg
insl
xchg
dec
pusha
xchg
imul
into
mov
mov
andl
popa
iret
aad
pop
lret
std
addb
pop
jb
adc
in
cmc
xchg
inc
cld
clc
movsb
or
stc
mov
mov
inc
mov
jnp
and
sarl
dec
push
xor
jl
repnz
jp
or
push
push
ret
sub
icebp
adc
adc
jl
xchg
adc
stc
mov
pop
fidivl
je
std
mov
mov
pushf
test
or
mov
dec
aam
rorl
imul
and
mov
xchg
addr16
add
in
insb
lcall
mov
pop
fwait
in
in
mov
xchg
add
fsubrp
es
inc
xor
jmp
movsl
scas
sub
xchg
mov
ds
iret
jne
xchg
pop
sbb
gs
sbb
pop
popf
jo
sub
xor
das
xchg
mov
iret
push
xor
pop
negl
jne
pop
lret
dec
mov
out
sub
je
mov
xlat
out
das
out
lods
int
in
add
mov
test
jns
sti
jg
inc
xor
int3
outsb
sti
ret
xchg
jmp
sbb
inc
and
rclb
mov
out
add
sbbb
mov
stos
sahf
fidivl
ss
mov
mov
fwait
lret
rorb
dec
xchg
lock
ret
pop
lock
mov
xchg
mov
xor
lret
or
mov
inc
add
mov
subb
andb
aas
sub
dec
sbb
mov
fisubs
loopne
cmpl
sub
invlpg
dec
int3
clc
inc
loope
aam
adc
add
popl
fwait
js
xchg
scas
ds
arpl
in
mov
or
or
sbb
mov
add
repz
pop
ds
sbb
rcrl
outsl
int3
push
or
pusha
ljmp
ret
les
mov
push
adc
push
and
jmp
cltd
scas
pop
xchg
pushf
inc
leave
scas
movsl
inc
xor
ret
pop
cmc
mov
lret
sti
mov
jp
push
xchg
push
movsb
xor
cmp
mov
pop
ret
mov
in
out
movsb
fxch
jmp
inc
mov
test
inc
pop
sub
xor
cmpsb
outsl
jmp
ror
xor
jnp
cmp
addr16
mov
nop
dec
xlat
mov
dec
data16
sub
xchg
stos
mov
sub
xchg
push
cmp
gs
ljmp
dec
xchg
test
xchg
bound
and
dec
enter
ds
fs
mov
jne
fisubs
clc
adc
lret
mulb
and
idiv
lahf
dec
and
shll
pop
inc
scas
shll
repz
insb
push
push
jge
mov
and
add
clc
fisttpl
sub
dec
test
mov
or
mov
xchg
aas
xor
mov
and
nop
addr16
xchg
notb
jae
fs
or
mov
int3
adc
mov
jae
push
inc
inc
inc
xchg
dec
xor
mov
cmp
or
dec
sbb
mov
lahf
xor
nop
jne
add
jmp
aas
mov
mov
xorl
add
adc
mov
jo
movsb
xchg
sub
xchg
fstpt
sbb
or
inc
xor
pop
xchg
pop
sub
cltd
loope
fnstenv
in
aaa
test
cmpsb
xor
cmp
and
or
out
repz
pop
cmp
popf
test
iret
sub
inc
push
out
mov
lret
leave
add
pop
push
in
mov
sbb
jns
data16
in
add
and
mov
push
mov
mov
xor
mov
repz
aaa
jl,pt
inc
mov
cmp
xchg
mov
dec
sbb
hlt
subb
jmp
imul
hlt
jno
ljmp
in
fstl
or
lods
ljmp
and
clc
cmpsl
cmpsb
push
pop
insl
dec
cmp
ds
sbb
jp
movsl
in
scas
push
lret
or
out
lret
hlt
adc
mov
inc
lods
push
lods
lds
incb
jle
ret
jb
repz
bound
dec
je
adcl
push
push
es
xchg
xchg
mov
add
sub
mov
insb
scas
push
sarl
pop
and
inc
mov
leave
and
jecxz
lcall
ss
or
addl
inc
fadds
lea
gs
pop
stc
cmc
fs
popf
std
lods
adcb
xlat
and
iret
test
fsts
sbb
sub
repnz
pop
lahf
push
std
in
adc
ja
pop
push
sub
mov
dec
add
call
lock
pushf
sbb
int3
test
in
negl
push
add
or
dec
std
push
sub
adc
jne
outsb
jge
mov
scas
lods
inc
xor
orl
incb
mov
out
adc
movsb
and
mov
inc
xchg
ret
sub
jb
and
sysret
push
scas
jecxz
popf
fidivl
inc
mov
cmpsb
cli
xchg
mov
call
sti
add
or
push
test
sar
mov
in
adcb
push
shl
out
pop
mov
pop
jmp
js
flds
xlat
mov
cmp
mov
popf
or
lock
cmp
inc
or
mulb
sbb
cmp
add
jae
jg
out
inc
adc
jl
or
jne
mov
dec
mov
lahf
add
pusha
fstpt
dec
std
imul
sbb
lea
aam
jl
push
in
mov
mov
test
jbe
lods
lcall
mov
mov
jbe
inc
ljmp
sub
and
mov
add
psadbw
popf
xchg
sahf
lcall
xchg
ja
cld
int
in
inc
test
adc
in
jl
and
cmp
shl
dec
repz
imul
test
imull
pop
push
test
aaa
jmp
shll
adcb
xor
push
rclb
sub
shl
adc
mov
adc
aas
mov
mov
sar
mov
hlt
cmp
test
add
movl
ljmp
inc
inc
test
mov
insl
stos
dec
pop
lret
adc
add
adcb
xchg
lock
ss
in
clc
icebp
sbb
je
pop
out
adc
fimull
push
inc
pusha
adc
in
sub
cmp
daa
xchg
dec
stos
sti
mov
icebp
js
push
inc
loope
sbb
inc
aam
scas
jbe
mov
mov
push
movsb
xchg
fmuls
fsts
pop
repnz
xor
xor
out
gs
pop
fcmove
dec
sbb
xor
push
aaa
add
loopne
mov
mov
scas
pop
pop
fcomi
gs
lock
mov
stc
dec
inc
inc
jg
and
push
outsl
mov
sbb
xchg
dec
or
popa
ja
xor
imul
xor
sahf
pop
aaa
lods
out
xchg
inc
cmpsl
mov
arpl
push
mov
sahf
mov
cwtl
iret
mov
cmp
cmp
jge
and
cld
lcall
pushf
sub
in
or
in
or
ja
inc
mov
and
jle
jb
daa
mov
xor
aas
xchg
xchg
cmpsl
push
popa
popf
call
dec
fiaddl
xchg
xor
dec
jp
mov
hlt
inc
cmp
loop,pn
imul
movsl
add
pushf
notl
and
xor
out
mov
test
xchg
scas
movsb
and
lds
scas
push
fwait
mov
add
sub
mov
mov
call
jecxz
inc
mov
clc
sbb
rorl
cmp
fsubs
fadd
xor
push
ljmp
scas
out
mov
xchg
jmp
mov
pop
fwait
adc
mov
add
ret
xor
push
mov
in
mov
push
adc
and
pop
mov
mov
dec
cmp
sahf
sub
mov
pop
arpl
lret
mov
xchg
hlt
xor
mov
and
mov
mov
xchg
sbb
insb
addr16
and
pushf
or
push
sbb
lret
fcmovnu
scas
aaa
cmc
out
push
cmp
popa
inc
fcoms
loop
std
inc
cmp
scas
aam
or
pop
test
aas
stc
jp
jae
mov
jns
sub
lret
jmp
cli
fnstsw
push
aam
cmp
ljmp
mov
and
insl
pop
and
cmp
fnstenv
cmpsl
jle
fdivrl
cmpsb
pop
adc
js
in
js
test
mov
push
jb
sub
movl
xor
repnz
int
sub
jecxz
gs
add
jno
nop
outsl
xchg
pusha
fisubrl
out
adc
fcoms
mov
adc
fldenv
mov
sahf
out
hlt
push
into
lods
das
xchg
int
int3
sub
jp
shll
jle
xor
dec
sbb
scas
mov
inc
movsb
sub
mov
sti
sub
lods
xchg
int3
stos
aas
cld
out
js
ss
xorl
sahf
push
adc
imul
div
shll
xor
xchg
xchg
out
mov
lahf
sbbb
and
out
jmp
shrl
notb
movsb
enter
add
mov
shlb
inc
sub
sbb
rcll
jne
sahf
or
mov
cmp
push
lret
adc
loop
cwtl
subl
shl
out
ljmp
mov
neg
xchg
inc
push
test
xchg
and
mov
dec
nop
cmc
sbb
sti
ret
repnz
xlat
imull
push
in
mov
cltd
mov
out
xchg
mov
push
cmp
cmpsb
notl
cmpsb
fstps
clc
or
cmp
call
inc
incb
or
adc
mov
test
mov
sub
jl
pusha
das
push
jo
adc
inc
fucom
sbb
mov
lret
mov
jbe
or
mov
dec
fbld
or
adc
jle,pt
scas
sub
inc
insb
popf
test
nop
je
mov
leave
or
and
sbb
adc
pop
aam
es
out
psubsb
ja
mov
insb
push
out
mov
pop
pop
xchg
aaa
mov
popf
push
sbb
push
push
add
add
cmp
push
sahf
pop
pop
dec
lahf
xchg
push
repnz
push
scas
aam
fxam
scas
add
nop
pop
pop
pop
sbb
xchg
std
iret
or
popf
xor
ror
imul
ss
or
ljmp
gs
cmp
sub
in
vlddqu
movsl
dec
cmp
fucomi
sub
mov
lea
or
jg
lea
pop
mov
dec
imul
inc
and
cmp
test
pushf
data16
lea
push
repz
fists
add
fs
sahf
cmp
xchg
push
xchg
jecxz
lock
jmp
push
lcall
jnp
jmp
mov
je
or
dec
and
pop
repnz
sub
test
in
mov
lahf
jnp
jecxz
cmpsl
rcll
arpl
cmpl
enter
jle
and
and
pop
cwtl
int3
add
adc
xchg
shll
mov
outsl
sub
jno
stos
nop
addr16
mov
rcrl
std
xor
shlb
fiaddl
xor
cmc
sbb
ret
rcr
lods
in
fs
mov
aaa
lret
or
sbb
xor
adc
pop
in
in
andl
dec
sbb
loop
push
into
sbb
add
jno
adc
pop
scas
or
push
sub
xor
xor
dec
lcall
dec
dec
sbb
orl
jbe
outsl
les
addr16
xor
mov
dec
test
xchg
push
jb
int
sbb
inc
pop
inc
dec
mov
in
adc
fwait
xor
andl
dec
out
mov
mov
test
fisttps
psubusb
cmp
sbb
push
inc
insb
je
cmpb
popa
nop
cmc
pop
mov
xchg
cmp
xor
jmp
add
jno
xchg
rclb
insb
inc
pop
jg
ret
cli
xor
mov
mov
pop
jmp
lcall
xchg
pop
mov
xchg
dec
in
lret
repnz
scas
jmp
repz
clc
pop
pop
sbb
or
jae
rep
xor
into
pop
cmp
jnp
push
xchg
mov
push
jle
outsl
mov
fcomp
jmp
mov
or
and
or
mov
rcrb
add
cmp
fstp
rcrb
enter
mov
xchg
test
aam
xor
add
dec
gs
or
stc
ds
xchg
mov
fldt
fiadds
mov
xchg
imul
fistl
inc
sbb
test
mov
mov
mov
jb
push
call
pusha
xchg
sar
xor
mov
xor
jle
push
xor
add
daa
in
mov
pop
xchg
pop
imul
jno
paddsw
fidivs
mov
mov
cmp
mov
loopne
jle
xor
jl
inc
cmpsl
push
jecxz
test
cmp
xchg
shlb
push
addr16
or
decb
aam
pop
or
shrl
push
repnz
out
xchg
test
jle
or
enter
lret
sbb
in
add
icebp
sub
dec
mov
lret
or
das
int
mov
jmp
sbb
enter
pop
jle
fldl
and
inc
dec
xlat
push
cli
inc
pushf
fisttpll
movsl
out
lahf
adc
rcrl
pop
ja
inc
aaa
inc
imul
cmpsl
cmp
push
mov
rolb
aad
mov
addb
nop
mov
push
mov
mov
lods
in
repnz
stc
lret
cmc
fisubrs
mov
ljmp
loope
in
jb
andb
stos
xchg
movsl
filds
inc
add
repz
fcoml
data16
addr16
addr16
inc
rol
lahf
gs
dec
mov
movsb
pop
adc
mov
mov
std
cmp
fildll
sbb
repnz
shll
push
sbb
mov
mov
xchg
in
dec
pop
aam
out
jne
mov
mov
aam
xchg
push
sahf
fbstp
pop
mull
pop
and
in
jns
adc
bound
mov
imul
out
je
sahf
insb
mov
or
das
pop
fists
or
jle
cmp
out
lods
and
subl
xchg
jae
jecxz
push
mov
xchg
ss
loope
dec
fdivrs
sub
xorb
in
pop
xchg
jmp
pop
psllq
das
insb
pusha
ds
cltd
test
sub
cltd
sub
mov
dec
mov
int3
fidivl
jo
add
nop
gs
outsb
fs
cmp
cmpb
push
mov
dec
jge
mov
pop
mov
std
mov
ret
inc
popa
adc
or
mov
adc
outsb
mov
popa
xchg
sub
push
in
mov
jg
sarb
repnz
jge
xchg
inc
adc
mov
sub
add
aaa
xchg
xchg
cmpsl
icebp
iret
lret
loope
arpl
ret
and
mov
mov
mov
xchg
dec
outsb
xor
push
test
int
pop
pop
std
xor
out
push
mov
sub
xchg
mov
arpl
mov
icebp
pusha
dec
pushf
in
pop
scas
inc
inc
sbb
insl
lock
xchg
lods
lahf
sbb
jne
mov
xor
mov
ret
mov
test
jp
xchg
xchg
inc
jge
aaa
mov
push
pop
rcl
and
dec
dec
enter
call
jno
aam
call
xchg
outsb
push
sbb
shlb
ret
sbb
or
or
push
hlt
mov
sbb
cmp
popa
and
pop
mov
mov
push
cmpsb
push
cli
sub
cmpsl
fldcw
or
xchg
shl
or
mov
addr16
sbb
pop
cwtl
js
or
je
cmp
loopne
rcl
clc
es
lea
lret
leave
movsb
adc
mov
mov
lret
and
cmpsl
into
dec
pushf
inc
mov
inc
mov
fisubrl
push
adc
insb
xor
pop
shl
pop
in
fbstp
and
and
jns
xchg
out
pop
orps
imul
cwtl
hlt
xchg
aas
pandn
jl
add
xchg
ljmp
pop
dec
or
xchg
sbb
jecxz
scas
adc
lcall
inc
dec
adc
das
push
mov
dec
xor
pop
test
movsb
popa
xchg
in
push
push
mov
std
pop
dec
xchg
sub
sbb
xchg
ret
les
sbb
dec
hlt
ja
cmp
ret
mov
pop
jae
xor
pop
inc
jo
in
mov
xchg
or
cmc
jge
cmp
jae
js
mov
in
xor
mov
adc
lea
mov
in
mov
arpl
pop
repz
push
jne
lahf
mov
pop
fs
mov
loop
sbb
mov
cld
xchg
and
imul
lods
fdivrp
mov
xchg
xchg
popf
mov
cmpsl
cmp
sti
int3
outsl
fmull
sarb
dec
jb
in
aaa
test
push
sub
stos
fwait
call
int3
and
inc
add
xchg
adc
or
xchg
mov
xor
xor
int
pop
fcoms
jp
pop
mov
fmuls
mov
dec
inc
adc
ror
cwtl
idivb
sbb
jge
repnz
in
in
mov
xor
dec
xchg
push
jns
xlat
ljmp
pop
add
cmp
inc
sbb
push
xchg
adc
imul
popa
ljmp
pop
movsb
test
and
outsb
add
xor
push
inc
ss
mov
mov
testb
or
shlb
mov
test
sahf
stos
mov
inc
mov
cmpsb
test
xlat
fidivrl
xor
jle
sub
loope
stc
pop
xor
mov
movsl
jb
jmp
inc
jge
inc
inc
ret
movsb
leave
inc
hlt
push
aaa
push
mov
mov
lds
and
jp
fstl
test
bound
mov
xchg
xchg
ja
sahf
push
subl
sub
jl
adc
insl
mov
out
inc
or
cltd
cmp
dec
inc
dec
scas
mov
jbe
int3
mov
xchg
dec
je
pusha
mov
data16
inc
in
inc
nop
hlt
push
sbb
daa
stc
push
stos
loopne
and
dec
cli
out
jmp
pop
mov
mov
cmp
mov
int3
pop
roll
dec
cs
loope
sbb
dec
or
andb
js
push
pusha
push
xchg
dec
and
mov
or
ss
push
js
mov
mov
or
cwtl
lea
sahf
lcall
enter
movsl
mov
sub
push
xchg
jno
dec
mov
mov
and
and
mov
and
xchg
add
push
sti
stc
insb
xor
cmpl
jmp
test
hlt
jno
mov
xor
and
je
aas
adc
popf
arpl
xor
pop
movsl
jns
sarb
gs
stos
ds
mov
pop
pop
xlat
pop
sbb
mov
loop
xchg
sti
movsl
aaa
ja
jl
push
add
xor
mov
out
or
jno
iret
sub
push
jp
in
out
mov
mov
xor
mov
jmp
icebp
out
in
int3
sti
lcall
jne
scas
pop
les
repz
sti
dec
xchg
imul
jo
ss
adc
daa
lahf
inc
cmp
and
js
aam
loopne
or
leave
jecxz
cmpb
cltd
and
adc
js
xchg
inc
add
jle
cmp
and
adc
jno
cld
scas
xor
fcmove
int3
enter
push
inc
outsl
ret
cmpsb
dec
push
cs
fcoml
add
lods
inc
lds
lods
insb
sbb
adc
test
adc
cs
mov
sub
outsb
test
pop
or
movsb
add
jno
pusha
or
xlat
mov
data16
popf
mov
jl
je
jge
adc
mov
cmp
rcrl
xchg
mov
sbb
movsl
xor
or
mov
jg
sub
lds
xor
inc
jo
cmc
push
inc
cmovno
pop
and
nop
out
rorl
inc
out
into
mov
push
fnsave
addr16
stc
cmp
cmp
subl
and
ljmp
in
pop
pop
mov
add
cld
ss
cltd
mov
and
popf
scas
fnclex
push
imul
shl
cmp
mov
add
add
and
jbe
rcrl
or
cmp
jge
lods
shr
loop
push
ret
repnz
sbb
std
repz
pop
pop
outsb
int3
mov
in
cld
pop
add
jecxz
xchg
stc
nop
cli
es
jecxz
cmp
inc
jecxz
push
mov
cs
lcall
pop
fidivs
aad
dec
or
mov
testb
push
add
adc
idivb
std
mov
push
xor
or
cmc
push
int3
jo
xor
sbb
sbb
sub
sahf
das
loop
adc
cs
dec
mov
cmp
inc
push
sub
and
xchg
mov
cmp
or
jb
ss
add
sbb
rolb
adc
push
cs
mov
pop
cli
mov
mov
in
sti
dec
lea
aam
aad
mov
lock
mov
inc
xchg
lret
add
mov
mov
out
cmp
lock
lret
lcall
and
or
insl
dec
loope
out
scas
jl
fimuls
sar
sub
pop
jecxz
shlb
mov
mov
orb
jmp
fcoms
ret
mov
push
outsb
cmc
mov
stos
pop
loop
xchg
std
add
pop
outsb
pushf
sbb
iret
sbb
push
jp
out
cmp
scas
int3
sahf
lds
mov
loop
cmp
cmp
push
adc
mov
xor
test
pop
cmp
adc
andb
sub
adc
cmc
lods
outsb
repnz
idiv
fucomip
iret
leave
sbb
sbb
dec
add
sbbl
pop
dec
adc
xlat
xor
cmp
sahf
jne
jne
mov
xor
jo
imul
and
jo
xorl
popl
add
jg
and
mov
pop
or
out
pop
dec
pop
outsb
popl
inc
imul
inc
push
in
jecxz
mov
pop
xor
fmull
push
insl
dec
dec
shlb
jp
shl
psubusb
mov
ror
xchg
push
add
lock
cmp
adc
fldt
repnz
xor
and
inc
xchg
inc
or
popf
stos
dec
hlt
scas
jo
loope
aaa
pop
pushf
pop
inc
pop
ja
mov
pop
std
mov
or
dec
cltd
mov
xchg
jo
mov
or
ret
stc
ret
ss
adc
push
pop
lock
push
or
enter
jne
jne
ja
mov
call
aad
mov
aam
cmp
mov
leave
xorb
fwait
xchg
push
in
pop
hlt
in
inc
mov
push
inc
hlt
jg
lds
daa
jo
insl
cmp
push
dec
in
jae
xchg
ljmp
pop
gs
pop
jl
dec
cltd
pop
cltd
aaa
mov
lret
ret
adc
sbb
mov
subl
mov
es
loope
out
sub
mov
inc
mov
daa
cld
loopne
xor
pop
dec
addr16
add
xlat
push
push
xor
xchg
lods
or
sub
xchg
or
sbb
fmuls
shlb
push
int3
xor
pop
jmp
dec
cwtl
mov
cmp
popf
adc
sub
add
and
mov
adc
in
xchg
arpl
adc
lahf
adc
sub
add
jge
je
jne
mov
xchg
movsb
push
xor
jne
dec
bound
and
icebp
stos
mov
roll
repnz
loope
out
mov
jecxz
loopne
adc
jmp
xchg
or
adc
xchg
jno
cmpsl
out
jb
or
push
inc
fisttpll
ret
mov
insb
mov
inc
add
mov
test
or
pop
aad
pop
insb
mov
push
pop
mov
fld
in
add
enter
cwtl
lods
cmp
jbe
push
scas
or
fdivs
add
fildl
fidivrs
repz
push
dec
mov
sbb
hlt
lret
inc
mull
pop
jae
xchg
lret
mov
xor
aam
ja
negb
leave
xchg
movsb
pushf
sbb
mov
sbb
xchg
leave
bound
mov
fsubl
inc
in
stos
repz
adc
out
stos
dec
add
fwait
push
mov
rorb
mov
jae
subb
pop
xor
vpcomud
pop
mov
mov
xchg
aam
xor
call
xchg
inc
imul
std
loop
push
push
mov
pop
xor
mov
loope
inc
movsb
adc
inc
insl
mov
mov
mov
add
xchg
in
inc
scas
and
dec
sbb
dec
into
lcall
pop
cmp
outsb
js
xchg
mov
out
cmp
xlat
sub
or
push
enter
dec
sarb
stc
imul
pop
cmp
adc
sarl
sahf
sub
ljmp
jno
lods
jne
in
int
inc
fucom
or
add
sub
fstp
inc
cmp
bound
mov
jmp
pushf
push
fsubs
and
enter
inc
pop
xchg
icebp
mov
adc
jp
push
mov
cmp
adc
xor
dec
adc
lahf
xlat
xor
lea
cmp
mov
and
add
pop
std
xchg
sub
adc
lds
sarb
push
ljmp
shlb
lds
ds
lods
xchg
or
fisubs
jo
jno
sbb
cld
mov
or
int
aaa
retw
mov
mov
cmp
xor
mov
jno
repnz
jg
aas
dec
xchg
cmp
pop
in
mov
test
loop
jb
sahf
mov
mov
and
add
arpl
mov
shl
rcr
mov
clc
dec
cmpsl
pop
xor
aam
mov
sbb
or
sbb
movsl
pop
inc
sbb
scas
jne
je
aaa
jnp
fwait
push
adc
xorl
or
cmp
daa
dec
inc
inc
std
jns
mov
jnp
loope
cli
es
sbb
mov
dec
xchg
adc
push
call
mov
jne
xor
test
mov
pop
in
inc
dec
and
scas
cld
mov
pop
mov
mov
mov
je
lret
lcall
test
push
repnz
lret
adc
shl
pop
in
aas
push
xor
shrb
out
cmp
lods
adc
das
aam
adc
hlt
jbe
xchg
xor
push
test
arpl
mov
lret
cltd
mov
mov
loop
out
js
cld
adc
fwait
xchg
jg
repz
jmp
mov
test
sbb
mov
or
dec
adc
jae
hlt
mov
xor
jae
int3
mov
pop
mov
adc
cmp
xchg
sbb
pushf
inc
add
push
xor
xchg
cmc
repz
push
fmull
jp
rcrl
inc
push
aam
adcl
cmc
push
jno
jg
in
fisubs
mov
push
icebp
or
xchg
popf
and
adc
movsb
xor
out
cs
rcrl
jb
cmp
mov
and
push
xor
and
cmpsl
lods
and
and
push
ja
push
cli
cld
daa
mov
sub
lcall
rorl
clc
ja
push
mov
mov
loopne
call
movsl
add
lock
push
out
es
sbb
push
add
cld
arpl
ss
mov
test
dec
inc
ds
ret
push
mov
mov
dec
arpl
dec
jle
out
mov
lock
xor
xlat
mov
fnstenv
pop
jns
mov
dec
mov
in
jge
xor
shrd
or
mov
loope
int3
aas
incb
jmp
mov
out
xor
dec
mov
push
add
in
cmp
push
sbb
jp
popa
xchg
andl
xlat
jne
into
dec
out
inc
sarl
cmp
xchg
rcr
in
iret
movsb
cmpsb
lret
inc
cld
mov
shrb
jns
fnsave
fwait
dec
add
outsb
test
xchg
add
and
pop
fists
jb
sub
mov
loope
fisubs
mov
cmp
int3
mov
call
add
iret
pop
int3
out
ja
mov
xchg
and
cmp
jl
sub
shlb
aad
mov
mov
out
sbbb
loopne
arpl
pop
aad
test
adc
clc
sar
ds
out
lcall
add
imul
cwtl
mov
js
pop
mov
sub
add
mov
cmpl
mov
nop
xchg
fcmovnu
mov
mov
call
mov
inc
pushf
scas
push
xor
adc
popa
push
idivl
and
mov
sbb
adc
cmp
mov
loop
lcall
lds
outsb
ror
mov
inc
xchg
in
in
inc
mov
enter
adc
call
xor
dec
dec
clc
jp
and
out
xchg
or
jp
arpl
jecxz
call
int3
jg
aaa
dec
jne
lret
sahf
mov
mov
enter
push
dec
adc
ret
push
fcomps
mov
mov
jle
jnp
push
xor
dec
mov
push
mov
mov
iret
mov
adc
nop
arpl
sahf
xor
rcrb
mov
in
jp
rcrl
dec
sahf
cmp
xorb
push
cmp
xchg
es
pop
jg
subl
jnp
dec
push
jl
xchg
cmp
xor
mov
shr
in
ljmp
push
scas
inc
sti
xchg
or
adc
xchg
xor
out
inc
lret
jns
push
fcoms
lea
push
fcomip
hlt
scas
xchg
jmp
insl
test
aam
lods
ret
inc
jl
inc
add
rorb
adc
lods
cltd
push
pop
xchg
pop
mov
add
icebp
fidivrs
cltd
frstor
aaa
xchg
dec
cli
xlat
insl
iret
rorl
ja
and
cmp
fs
jecxz
pop
out
pop
scas
push
popa
cltd
push
sub
push
int3
or
inc
dec
push
pop
cmp
fnsetpm(287
add
adc
cmp
sub
xor
daa
loope
aad
repnz
lcall
inc
cmpsb
jge
pop
inc
call
popf
ljmp
test
or
sbb
or
sti
push
sbbl
push
mov
pop
sub
test
test
mov
or
sub
popa
fisubrs
outsl
lcall
pop
aas
adc
jmp
ljmp
mov
cmpsl
popl
subb
push
aad
and
aam
outsb
aam
arpl
aam
xor
sbb
inc
pop
andl
repz
pop
xor
cwtl
push
push
push
xor
xor
outsl
idiv
xlat
xor
sbb
repz
leave
cli
dec
and
mov
in
fisttpl
jecxz
lds
mov
inc
sub
dec
inc
mov
mov
fs
pop
into
xchg
add
xor
mov
pop
out
xchg
sbb
mov
inc
or
sbb
mov
cmc
pop
scas
cltd
addr16
mov
xor
xchg
and
std
mull
gs
jne
mov
nop
daa
adc
add
and
dec
mov
mov
xor
inc
es
xor
pop
nop
pop
out
or
fmuls
cmp
test
push
pop
cmpsw
js
loopne
popf
fadd
mov
sarl
lock
lahf
les
addr16
mov
out
sahf
rol
push
gs
pop
rcrb
test
mov
mov
cmpsl
cli
mov
gs
mov
and
xor
push
sahf
mov
in
and
shr
in
jge
jno
inc
iret
jb
movsl
and
aam
push
ja
pop
cmpsl
fs
sbb
imul
idiv
fidivrs
mov
adc
mov
lcall
stos
lock
loope
inc
in
mov
nop
popw
ljmp
pusha
lods
fsubrs
sarl
xor
into
lea
jno
or
adc
mov
scas
popa
pushf
fstl
jge
xor
xchg
out
or
das
out
sti
add
pop
jmp
addr16
lods
mov
jp
sub
jmp
adc
xchg
lahf
fs
stos
sti
rolb
dec
jno
mov
sbb
int3
jno
int3
mov
repnz
jmp
lcall
imul
sbb
mov
pop
lcall
pop
movsl
mov
fs
je
adc
push
into
loop
fadds
pop
dec
jns
pop
dec
popf
mov
loope
jne
in
mov
movsb
add
xor
jle
or
ficoms
mov
inc
xor
into
ja
jne
add
sub
in
jle
lea
push
pop
arpl
mov
out
js
inc
test
sbb
in
push
pop
stos
stos
cltd
aad
mov
xchg
cmp
jp,pn
test
mov
add
movsb
dec
in
aad
cmpsl
popf
lea
xor
test
cli
int3
xchg
push
pusha
or
in
dec
addr16
push
enter
in
stos
sbb
or
cmp
inc
xor
mov
scas
int
mov
cmc
cmp
loop
dec
in
aaa
push
pop
adc
and
imul
xchg
orl
dec
dec
inc
inc
jmp
clc
push
push
xor
pop
loope
xor
leave
icebp
push
mov
movsb
scas
add
cmp
cmpsb
jno
nop
cmpsb
lods
xlat
push
mov
mov
filds
mov
sub
pop
aaa
test
test
mov
fdivs
sbb
sub
and
in
inc
dec
int3
mov
inc
ficomps
inc
add
cmp
mov
fdivs
out
popa
pop
js
fistpl
bound
adc
ficoms
adc
adc
pop
mov
sarb
into
fcoml
add
jle
loop
push
pusha
xor
movsl
mov
sub
rcr
or
das
mov
xchg
xchg
lret
sbb
xchg
mov
adc
or
push
or
add
mov
cmpsl
dec
test
or
dec
cmpsl
sub
mov
dec
sahf
pop
pushf
adcb
dec
xchg
aam
int3
lods
je
jb
push
lcall
fwait
call
jae
push
scas
mov
jle
and
mov
scas
divl
popa
shll
mov
push
fldcw
xor
dec
mov
adc
inc
call
push
ret
xor
add
test
or
mov
xchg
jb
outsl
mov
xorb
xchg
leave
test
or
add
or
in
andb
inc
and
push
cmp
mov
cld
xchg
movsb
inc
repnz
ljmp
je
jmp
mov
push
int
and
not
xchg
dec
sub
jbe
jmp
cmc
jb
sub
enter
out
pushf
cmp
xchg
jg
jge
gs
push
mov
inc
xchg
pusha
sbb
clc
and
cmpb
pop
daa
repz
sub
xchg
add
cli
add
ret
addr16
xchg
pop
adc
testl
stos
jl
and
adc
lret
dec
sar
lea
push
cmp
addr16
mul
pop
cmpsl
ret
add
fxch
ss
mov
inc
test
scas
roll
pop
xlat
or
mov
mov
jge
movsl
test
dec
imul
leave
aam
outsl
mov
fistl
bound
adc
nop
jnp
sbb
imul
mov
push
cmc
aaa
jle
gs
and
pusha
test
and
jae
or
bound
add
popf
sub
push
je
fwait
sbb
push
imul
in
add
cmp
or
xchg
fisttps
jmp
push
ljmp
pop
sti
fcmovne
fdivrl
movsl
das
xchg
mov
add
pop
jmp
add
dec
daa
jbe
into
test
fsubrs
dec
bnd
adc
jl
repz
stc
fnsave
lahf
inc
or
out
cld
repnz
and
cmp
out
and
mov
cmp
sbb
sub
jo
push
loopnew
imul
ja
test
pop
bound
in
ja
push
out
mov
inc
jmp
out
fs
cmp
adcl
cmp
add
xlat
push
out
ljmp
push
cltd
sub
rcrb
lea
insb
mov
mov
fwait
mov
xor
aaa
aad
sbb
aad
pop
cwtl
pop
or
mov
or
sbb
addr16
or
into
or
sbb
and
imul
lret
xchg
xor
mov
jae
add
in
leave
mov
ret
les
lds
jnp
push
sub
sbb
pop
mov
test
or
rorb
adc
xchg
cmpl
dec
repz
adc
mov
sbb
fisttpll
movsb
jnp
push
aam
stos
cmpsb
dec
cmpsl
jmp
in
cld
es
mov
cmp
cmc
xchg
adc
das
mov
popf
or
repz
dec
hlt
cmp
push
loopne
cs
lret
xor
xchg
rcr
pop
cld
inc
add
xchg
pushf
pop
push
adc
and
outsb
and
inc
mov
mov
in
or
inc
push
push
cli
pop
sbb
dec
mov
push
pop
in
push
adc
add
sub
and
mov
sbbl
popa
or
fs
frstor
xchg
pop
mov
mov
inc
mov
push
rorb
loopne
inc
sahf
popf
cli
test
xchg
lcall
je
inc
das
add
cmc
insl
inc
popf
ljmp
js
ljmp
pop
andl
mov
bound
and
data16
popa
dec
pop
mov
mov
adc
cld
mov
dec
dec
jnp
testb
idivl
std
inc
mov
repnz
push
adc
sbb
std
mov
xchg
mov
pop
bound
jmp
insl
cmp
pop
mov
cwtl
push
sbb
xor
push
test
iret
clc
push
scas
aad
mov
adc
imul
insl
dec
mov
xor
adc
or
movsb
add
test
add
xor
test
mov
cmpsb
dec
sbb
push
jge
inc
addr16
cs
adc
ja
pop
inc
insl
mov
enter
or
pop
test
in
pop
test
icebp
jno
pop
sti
jl
push
and
mov
das
rcrl
pushf
mov
xor
mov
and
in
out
test
icebp
gs
mov
jmp
sub
jb
xchg
dec
bound
pushl
pop
jle
or
int
mov
iret
into
mov
nop
pop
sub
mov
add
mov
scas
mov
sbb
sbb
dec
mov
mov
pushf
mov
inc
pop
lods
popf
and
push
jno
clc
pop
popa
jbe
mov
sti
out
sbb
out
inc
mov
sbb
std
aaa
lds
out
jae
insl
outsl
icebp
add
shll
mov
jae
fmuls
sub
add
pop
sub
data16
pusha
popa
sbb
dec
les
cmpl
pushf
addb
int3
adc
enter
inc
popf
dec
dec
dec
add
ss
insb
sub
sub
inc
push
pop
pop
push
addl
mov
xlat
add
add
xchg
mov
or
jmp
cmp
xor
xor
lods
or
pop
ret
jmp
or
push
mov
int
negb
incl
push
dec
mov
dec
xor
test
into
stc
cmc
fsubrl
sub
loopne
pop
lds
lahf
or
adc
push
push
lret
mov
xchg
pop
pusha
xchg
dec
sub
ss
std
ja
jnp
dec
cli
icebp
inc
xchg
pop
lcall
stos
jo
fwait
mov
ss
mov
mov
dec
cltd
jle
dec
push
push
mov
or
push
repz
das
ss
test
rolb
fxam
inc
sub
sub
and
je
xchg
enter
adc
or
test
cli
add
pushf
sub
in
hlt
or
lahf
inc
and
shl
mov
add
sbb
xor
fbstp
imul
outsl
mov
sbb
cmp
xlat
and
push
ljmp
dec
dec
jae
inc
std
xchg
cmp
fisttpll
mov
add
jne
push
cmpsl
aam
jle
jle
inc
mov
pop
imul
xchg
and
cmp
mov
in
and
aaa
and
inc
add
mov
aaa
enter
add
jl
repz
paddw
popf
push
test
aas
das
repnz
aam
xchg
push
xlat
clc
xor
stos
inc
clc
xchg
xor
mov
jbe
xor
or
sbb
jle
cmpsl
daa
and
mov
or
or
sbb
jle
jge
das
add
sbb
xchg
dec
dec
add
mov
es
and
cmp
call
jge
das
in
push
jb
xor
mov
movsb
test
data16
sub
and
xorl
stos
outsl
fisttpl
jb
jo
std
pop
out
sub
and
inc
adc
cmp
dec
into
mov
mov
adc
add
ljmp
push
lods
je
inc
ror
dec
and
ret
mov
inc
cmp
bound
hlt
sub
sub
xchg
enter
je
cs
lock
adc
int
out
ds
scas
xrelease
enter
dec
pop
xor
pop
test
or
cmpsb
push
pop
fldenv
add
outsb
push
fadd
jl
adc
les
clc
push
loopne
mov
xor
inc
mov
and
jae
ret
jmp
aad
shrd
add
xorb
pop
jbe
insl
test
xor
addr16
ss
addr16
dec
ror
mov
out
or
fs
psrlw
js
pop
sub
fs
stc
cmpsb
arpl
add
dec
or
das
sub
mov
dec
mov
iret
ja
sbb
int
outsl
ss
lea
adc
dec
aam
js
scas
loopne
or
cmp
aas
repnz
push
xor
sub
jb
aam
jne
fcmovnbe
xchg
or
cld
aas
push
and
mov
fsubl
fidivs
push
rclb
mov
pop
fldl
loope
add
stos
cmp
lcall
cmpsb
or
inc
mov
jp
movb
fdiv
pop
loopne
xor
xor
and
cmp
inc
xor
fildll
mov
adc
js
dec
pushw
loopne
mov
lods
add
xchg
inc
jno
loope
dec
ds
pushf
in
inc
pop
mov
mov
lds
lods
dec
sbb
or
xor
sbb
enter
repz
sahf
shl
inc
fcmovne
xchg
hlt
add
in
push
push
aad
mov
jo
inc
xlat
lods
push
inc
adc
je
mov
pop
sub
mov
test
or
pop
dec
sbb
mov
in
fwait
pushf
mov
sbb
scas
das
jo
mov
xchg
mov
fwait
addb
stos
jns
test
loopne
dec
es
aaa
add
rcll
xchg
mov
xor
enter
jmp
rclb
mov
adc
push
and
nop
movsb
icebp
call
mov
cvtdq2ps
shll
xor
push
out
hlt
cltd
jbe
movb
mov
mov
mov
stos
movsl
xor
ljmp
gs
inc
ja
in
hlt
xchg
cmp
cmp
in
add
pop
insb
scas
adc
dec
adc
jb
pop
pushf
je
mov
add
mov
and
lods
ret
mov
lret
or
xor
addr16
cs
daa
sub
mov
cmpsl
mov
addr16
stc
imul
adc
lock
ret
sarl
outsl
lret
adc
mov
cltd
jb
cmp
add
xor
ljmp
adc
mov
inc
lods
pop
pushf
lock
and
mov
out
mov
add
fbld
adc
int3
push
xor
das
in
sbb
pusha
paddusb
or
sub
jne
mov
lcall
ret
sbbl
lcall
test
pop
xorl
cwtl
aad
aaa
pushf
cmc
adc
lds
rolb
ljmp
xchg
subb
xor
test
fisttps
sub
ljmp
insb
call
xchg
dec
loope
jns
push
sub
jp
inc
lea
in
jb
jae
std
shll
jne
jecxz
mov
jp
les
or
xchg
sub
cmpsl
ret
mov
adcw
flds
cmp
or
lret
das
cmc
fmull
mov
push
add
push
vmread
fadds
lss
push
das
cmpsb
jbe
imul
cmp
xor
push
lock
scas
cmp
icebp
fidivs
xor
je
and
mov
xor
lods
movsb
mov
std
mov
stos
jmp
sahf
xor
fldenv
hlt
or
jbe
aaa
fdivl
test
jg
cmpsb
dec
test
jle
cltd
stos
add
cmpsb
cmp
sqrtps
outsl
test
xor
push
lahf
cmp
aam
cmpsb
jp
dec
sbb
dec
dec
sbbl
mov
lock
jb
and
les
std
out
jo
sbb
cmpsl
inc
leave
stos
sti
sti
lods
dec
xchg
cmp
sub
dec
ror
out
out
mov
mov
mov
add
mov
incb
dec
aam
std
stc
imul
test
outsb
pushf
mov
push
cmp
mov
ss
lahf
inc
or
dec
shll
into
test
shll
jae
cmc
loope
repz
movsl
arpl
sub
inc
fstl
pushf
lods
shl
fstl
clc
lods
imul
frstor
dec
or
xchg
call
or
mov
add
addb
shrl
xlat
cli
mov
xchg
cmp
xchg
push
aam
xchg
mov
mov
and
std
test
cmp
je
out
and
lret
push
enter
push
jo
xor
sbb
cmp
aad
pop
xor
fbld
stos
mov
in
jl
iret
lahf
mov
mov
xor
outsl
adc
repnz
mov
xchg
test
ja
add
out
xchg
test
dec
jecxz
dec
adc
xchg
xor
pop
bound
outsb
mull
mov
cmpsb
jnp
loop
xor
gs
inc
imul
pop
and
outsb
fs
in
jo
mov
push
mov
fldenv
mov
push
xlat
scas
xor
jle
cmc
adc
lahf
movsl
notb
insl
out
push
aad
xchg
push
mov
ljmp
cmp
mov
and
ret
test
ljmp
push
cmp
cmp
fwait
push
pop
and
cwtl
or
pop
pop
cmp
lock
pop
addr16
or
xor
add
in
ss
stos
push
add
push
ds
sub
jne
arpl
push
inc
cld
xchg
mov
lock
mov
push
pop
inc
mov
loopne
or
pop
popf
push
pusha
lds
jno
mov
push
popa
movsl
cmpsb
popf
imul
cmp
sbb
or
je
jg
icebp
xor
add
jle
sbb
add
xor
push
cmp
pop
aam
pop
jbe
insl
test
mov
les
cs
adc
dec
dec
cmp
popf
adc
testl
push
mov
push
or
filds
pop
cmp
int
jns
mov
jno
stc
int3
push
push
mov
mov
gs
out
hlt
jmp
add
dec
add
out
jnp
mov
xchg
dec
pop
ds
fwait
jg
xlat
sub
xchg
xor
movb
and
mov
fdivrl
dec
stc
inc
shl
jmp
push
pop
sti
jns
inc
rol
fistpll
inc
pop
and
divl
rcrl
push
adc
or
cmpsl
les
fs
inc
das
inc
testl
xchg
ret
jl
repz
std
jl
inc
dec
test
mov
gs
sub
lock
jne
cmpsb
scas
scas
xor
xchg
push
loope
lahf
jns
mov
xlat
sub
add
rcll
sbb
aad
or
sub
inc
mov
xchg
sub
repz
and
lret
scas
stos
iret
imul
xchg
mov
or
xor
ljmp
loop
insl
push
popf
inc
pop
and
inc
dec
es
lret
sarl
call
sbb
iret
cmc
cwtl
mov
or
ret
pop
mov
pop
cs
lahf
fdivp
mov
out
jbe
sub
jecxz
dec
jge
jl
loopne
rorl
fwait
xchg
jg
nop
and
stos
in
negl
dec
or
mov
test
bound
or
mov
das
cmp
test
xchg
ror
dec
jno
lods
roll
push
aaa
jmp
mov
clc
std
sbb
xchg
cs
adc
loopne
fcmovu
pop
xchg
mov
jmp
cmp
lcall
jb
int3
outsl
xchg
push
xor
or
ret
xor
jbe
mov
rcll
pop
mov
or
or
stos
sbb
jge
js
lods
outsl
jg
fidivrl
mov
scas
pop
lods
mov
lods
jb
mov
addr16
push
add
imul
dec
into
jne
adc
mov
insb
xor
cli
mov
ja
arpl
xchg
imul
in
call
int
scas
outsb
je
outsb
imul
jecxz
in
aam
loopne
sbb
xchg
xor
sub
aas
decl
ss
insb
faddp
test
int3
test
or
mov
fs
lret
inc
aam
jl
js
ljmp
inc
popa
xor
test
inc
inc
dec
shlb
sahf
inc
ss
push
mov
mov
scas
outsl
cmp
lahf
inc
add
jp
andb
jo
rcll
sbb
pop
pop
addr16
inc
aas
ret
adc
in
xor
fidivs
jge
xor
adc
test
out
pop
xchg
aas
dec
inc
popf
mov
hlt
shl
dec
pop
jno
jg
jecxz
aam
cld
push
mov
sbb
sbb
leave
xchg
inc
fucomi
les
xchg
std
sub
sub
adc
repnz
and
stos
int
out
pop
aad
sahf
cli
mov
inc
sti
or
sub
xchg
dec
xor
add
ljmp
xor
adc
add
xchg
fcompl
add
mulb
pop
data16
movsl
jle
sti
xchg
pop
test
sbb
sub
je
add
aad
pop
or
xor
xchg
cmp
pusha
mov
outsb
scas
mov
gs
dec
int3
in
bound
push
inc
mov
pop
roll
mov
and
mov
rol
sub
adc
adc
lret
shlb
add
sahf
in
jecxz
ja
mov
enter
push
orb
enter
jg
mov
xchg
inc
sub
test
fwait
cmc
int
outsb
add
dec
movsl
adc
adc
aad
test
mov
add
cmpsl
jbe
pushf
adc
rcl
sbb
out
push
addl
addr16
xchg
cmp
cmp
bound
in
xor
pushl
cmpsb
dec
xchg
jecxz
roll
test
enter
push
and
icebp
push
adc
call
lret
mov
pop
jecxz
cld
add
lret
hlt
out
mov
inc
and
jmp
lods
scas
loop
push
push
test
mov
pop
inc
xchg
inc
ds
xchg
or
mov
mov
int3
popf
call
lcall
pop
enter
pop
push
lret
les
xor
inc
loop
repnz
addb
xorb
in
fnstenv
cmpsl
xchg
je
adc
push
cmpsl
and
bound
aam
lcall
push
sti
mov
lahf
fstpt
sbb
cmp
sarl
jnp
sbbl
daa
outsb
lock
inc
pop
fwait
sbb
cmp
rclb
xor
pop
shrl
sbb
mov
loop
push
std
out
push
and
sar
imul
lea
outsl
inc
pop
xor
jno
mov
sahf
adc
aaa
mov
push
xlat
and
addb
push
add
xchg
jae
and
imul
push
lods
popa
cmpsl
jge
dec
dec
jg
stos
jle
dec
push
xor
shr
sbb
push
xchg
mov
ret
mov
pop
out
mov
mov
cmc
repnz
daa
inc
ret
push
and
inc
clc
lret
jmp
shll
xorl
out
or
inc
jmp
cmpsb
lods
je
cmpsb
pop
mov
lods
dec
lcall
pop
addr16
mov
filds
fimull
adc
xor
fnstcw
pop
sbb
sub
or
aaa
push
pop
loopne
jl
xor
mul
into
jmp
or
mov
jne
call
rcll
int3
inc
cmp
les
scas
arpl
mov
fildll
mov
test
add
fs
add
fadds
enter
repz
xor
clc
das
les
int
xchg
js
xor
jg
int3
ljmp
mov
xchg
sub
push
mov
test
sbb
cld
testl
mov
xchg
push
pop
test
dec
pushf
ljmp
mov
cwtl
adc
xor
arpl
in
mov
test
mov
lret
or
add
mov
push
jno
jnp
popf
pop
lock
ss
and
xchg
dec
adc
das
hlt
jno
scas
push
jbe
or
xchg
adc
out
mov
pop
out
jg
aam
lea
loop
jle
outsl
lods
jg
adc
clc
test
enter
pop
aas
ficomps
jb
jge
cmc
nop
ret
or
ljmp
inc
daa
and
mov
loop
mov
movb
arpl
mov
mov
mov
jo
in
fdivrs
mov
mov
xor
cmp
and
jge
orb
dec
sbb
and
mov
je
cmp
rcrb
cmpsb
or
cmpsb
mov
daa
and
lock
loope
fwait
fwait
lret
lahf
pop
mov
pop
pop
cmp
mull
adc
test
xor
stc
int3
jmp
outsl
cmp
mov
nop
call
mov
ss
jb
addr16
mov
leave
mov
and
xchg
test
dec
cmp
lods
es
in
jb
xor
push
push
pop
fucomi
xor
lds
popf
dec
cs
lret
mov
push
add
js
aam
mov
jecxz
addr16
scas
ret
cmp
pop
push
mov
sti
fs
or
mov
out
sub
sub
sbb
adcl
xchg
cs
sub
insl
and
test
jge
daa
lods
mov
fcmovnu
divl
hlt
xor
cmp
and
jb
xlat
mov
or
and
mov
pushf
pop
cmp
add
stos
push
jnp
das
mov
out
lods
inc
sbb
mov
dec
call
xorb
daa
mov
pop
xor
xor
ret
inc
lahf
test
idiv
fdivs
jg
add
mov
cli
lea
mov
lcall
sbb
sti
bound
mov
jmp
lea
idivl
xor
mov
ljmp
sub
sbb
adc
out
push
fadds
cmpl
pop
pop
lods
jge
icebp
rorb
in
cmp
dec
arpl
xchg
dec
out
xchg
adc
inc
cmpsl
push
in
sub
ret
shr
sbb
mov
xor
iret
aam
stc
sbb
xor
hlt
add
dec
sti
mov
sti
cltd
clc
xor
loop
mull
fcomps
aad
mov
cmp
xor
lret
in
jno
xchg
js
fdivs
xchg
imul
pop
testl
movd
roll
pop
push
adc
mov
push
fisubl
sbb
pushf
fsubs
or
adc
out
cmp
aad
aaa
add
int
pop
and
jmp
enter
dec
insb
push
mov
xor
lea
inc
jb
push
jge
push
daa
mov
gs
xor
in
push
out
jp
shll
xor
cli
lock
push
mov
enter
mov
jl
cmp
jg
into
or
mov
call
dec
mov
rcr
in
into
xchg
inc
fucomp
mov
sub
test
cmpsb
lods
and
and
rorb
js
sub
cltd
jp
movsl
dec
mov
dec
in
daa
cmp
mov
adc
mov
lods
imul
and
mov
xchg
adc
inc
add
jo
in
into
ja
cmpsl
cs
mov
sarl
ljmp
inc
jecxz
lods
xchg
adc
fwait
or
std
imul
mov
xor
out
jo
ror
jmp
jecxz
fs
pop
call
xlat
or
jmp
push
xorb
ror
call
addr16
mov
mov
imul
mov
dec
addb
std
jmp
dec
loope
xlat
es
jo
jg
cmpb
mov
mov
or
dec
test
rorb
cmc
js
fistl
dec
rcrl
sbb
sbb
xor
jmp
inc
add
pop
les
pushl
test
sub
mov
imul
jnp
mov
push
push
jle
out
xor
pop
and
xchg
stos
mov
test
fcomi
test
adc
stc
sbbb
sti
rcrl
pop
jl
mov
mov
pop
pop
mov
push
fwait
stc
sti
jno
aaa
idiv
add
clc
fisttpl
or
fidivl
dec
fs
repz
cmp
pop
push
add
dec
loope
cmp
sub
mov
jae
and
mov
adc
in
sbb
pop
push
das
add
imul
ret
rcll
pop
cltd
and
inc
jge
rorb
outsl
mov
xorb
in
and
lahf
movaps
add
dec
or
push
or
rorb
xor
call
dec
or
xor
cmp
mov
andb
jb,pt
add
xchg
push
out
adcl
scas
mov
orl
stc
out
sbb
je
loopne
test
xor
fcomip
flds
mov
scas
imulb
mov
xchg
insl
push
shll
pusha
mov
faddp
jbe
insl
das
sbb
xor
jecxz
dec
sub
add
mov
shl
lahf
push
movsb
scas
jae
mov
mulb
cmp
sarb
jmp
stos
jne
pop
mov
gs
cmp
rcpps
test
or
test
sbb
inc
sbb
filds
or
jl
and
jne
push
adc
inc
jbe
adc
ss
scas
test
mov
je
out
imul
cmpb
pop
xrelease
cld
jne
jb
lock
xor
push
jne
xor
xchg
push
stos
xchg
mov
fcomps
xchg
pop
sahf
mov
jle
imul
sub
fnsave
mov
int3
gs
js
mov
fwait
and
or
je
lods
test
lods
jl
jle
jbe
lock
icebp
sbbl
lock
adc
call
pop
inc
out
sbb
lods
push
jg
cwtl
lahf
sbb
mov
xchg
jbe
pop
pop
xchg
push
mov
sub
xchg
arpl
or
pop
mov
cmp
xchg
xchg
push
call
dec
dec
stos
ret
fistpl
out
outsl
cmp
pause
popa
clc
sahf
cli
ja
repnz
cmp
test
arpl
xchg
mov
aaa
push
je
mov
ja
cmp
add
popl
mov
push
repnz
lret
dec
aam
and
movsb
ret
xor
and
adc
sbb
test
lds
sub
lcall
or
sbb
sbb
rorl
sbb
adc
mov
dec
mov
cltd
xor
bound
mov
insb
add
ror
adc
sahf
mov
mov
add
leave
sbb
sub
cmp
addr16
mov
mov
xor
and
inc
pop
leave
cltd
addr16
popf
sub
dec
hlt
sbb
mov
stc
enter
outsb
push
movsl
cld
xchg
sbb
xor
sub
imul
push
test
ds
sbb
repnz
popa
add
cmp
push
jle
lock
push
wbinvd
fnstsw
sub
movsl
jge
push
and
push
xchg
cmp
xor
mov
pop
push
mov
inc
lea
lods
stc
out
adc
xchg
pop
in
outsb
test
mov
das
loopnew
repz
nop
lods
addr16
ja
pop
es
sub
jmp
movl
sbb
ret
jp
mov
dec
dec
xor
jns
scas
stos
lret
out
cli
jmp
test
movsl
rep
test
icebp
and
and
add
subl
mov
mov
aad
jmp
add
out
push
lret
or
adc
fwait
mov
out
pop
dec
adc
rorl
cmpsl
mov
sbb
mov
dec
call
pop
mov
scas
mov
lods
dec
sbb
scas
js
filds
cmc
xor
xorl
xchg
mov
mov
and
test
xor
scas
ds
cmc
xchg
push
adc
and
push
shll
xor
call
xor
xchg
mov
mov
ja
subb
mov
jmp
mov
sub
popa
inc
jne
mov
fmulp
nop
jmp
jecxz
cs
pushf
sub
les
ds
dec
mov
movsl
mov
cli
mov
dec
push
aaa
shrb
in
fldcw
fists
xor
mov
or
fistl
jns
ljmp
and
jae
insb
mov
jge
dec
xchg
rcr
pop
dec
cmc
mov
add
xchg
sbb
lea
inc
test
add
pop
lcall
int3
addr16
inc
aam
rcll
popf
lods
fsubr
fsub
push
into
je
insl
cmpsb
repnz
rolb
daa
and
call
cmpsl
and
imul
push
dec
lret
mov
testl
or
xor
mov
shlb
cmp
rcl
cmp
sbbl
and
jne
mov
pusha
xchg
push
jbe
jl,pn
jecxz
pop
cmpsl
jae
mov
cmp
lods
ret
imul
loop
call
std
das
sahf
inc
movsl
in
shlb
jle
mov
mov
xor
mov
push
mov
std
cmpsb
mov
cmp
jae
lock
loope
pop
fs
fwait
stos
add
imul
idivb
sub
pop
out
paddw
jp
sbb
or
add
repz
stos
mov
ret
or
push
gs
rorl
pop
lahf
sbb
adc
adc
pusha
xchg
hlt
cltd
inc
sbb
int
in
mov
xor
sub
xor
sub
fwait
int3
and
fldcw
cwtl
stos
or
cmpsb
outsb
aad
pop
je
aaa
adc
mov
xor
add
and
dec
push
sbb
adc
cmp
mov
xchg
shrl
sbb
sahf
addl
mov
add
mov
pop
push
or
les
call
pop
sub
mov
cmovne
dec
mov
xchg
mov
jb
xchg
mov
adcl
fidivrs
xor
ljmp
popl
call
pop
out
fnstsw
out
mov
lahf
dec
mov
pop
jns
and
lock
dec
divl
or
cmp
out
pop
cmp
mov
movsb
or
iret
sbb
rcrb
cld
outsl
or
iret
sub
mov
or
ret
aad
fstl
cmpsl
ds
paddq
je,pt
aam
mov
and
push
cmp
xchg
cmpsl
in
push
xor
or
test
nop
aad
or
leave
arpl
bound
mov
cmp
mov
push
xchg
int
insb
js
insl
cmp
les
insb
mov
sub
xor
insl
lods
jae
fwait
or
mov
push
imul
les
notl
sbb
fisubrs
sub
dec
clc
sbb
aad
rcll
gs
jmp
ss
cltd
mov
call
adc
imulb
inc
dec
push
jne
and
adc
or
xor
sub
cmp
inc
add
xor
sub
cld
cld
add
jge
movsb
dec
mov
add
xor
mov
dec
push
mov
mov
add
js
loop
sub
aas
lds
test
movsl
ja
pop
xchg
ret
add
mov
jnp
dec
fscale
xor
pop
in
inc
call
cmp
lea
inc
xor
inc
sbb
call
mov
dec
mov
pusha
mov
xchg
jne
adc
fildll
es
jns
cmp
arpl
mov
rolb
cs
scas
ret
sbb
or
stos
icebp
pop
push
test
jge
push
dec
arpl
cmpsl
lea
xor
mov
into
add
pop
push
xor
push
cmp
add
mov
outsb
rorb
dec
mov
into
add
mov
sbb
int
loopne
aad
sub
jp
hlt
sub
and
ja
add
int3
pop
fnstcw
test
xor
loopne
mov
pop
and
repnz
stc
pop
cwtl
xchg
je
mov
mov
and
pop
out
aad
adc
mov
cmp
movsl
test
arpl
add
addb
int3
jl
aam
dec
cmp
addl
sbb
add
jbe
mov
loop
mov
cmp
mov
sbb
es
fistpl
and
fsubl
xor
je
aaa
cmp
test
or
iret
pusha
xor
adc
or
loop
lahf
push
mov
ffree
call
adc
jle
leave
cmp
jns
pop
adc
xchg
loopne
push
lods
push
aaa
mov
mov
jno
rcl
out
fsts
leave
push
xchg
clc
dec
addl
pop
adc
jno
das
and
pop
daa
roll
dec
dec
mov
mov
mov
int3
sbb
insb
jb
push
mov
js
cmc
or
sbb
or
pusha
out
push
push
fnstsw
mov
adc
sub
stos
add
fs
push
fildl
mov
sti
std
or
pop
xchg
pop
inc
rclb
and
test
jbe
or
loope
aad
mov
stos
pop
faddl
pushl
or
mov
cmpsb
das
lret
sbb
lods
jns
sbb
xor
push
sbb
xchg
mov
pop
pushf
fwait
sub
push
jge
int
dec
leave
pop
dec
out
and
stos
out
xchg
out
sbbb
hlt
pop
repz
stos
inc
xor
mov
or
inc
outsl
mov
sar
push
mov
pop
pop
enter
popa
mov
enter
cmpl
push
push
pusha
in
pop
sahf
rolb
or
mov
ljmp
mov
jnp
mov
dec
in
cmp
jg
adcl
pop
xor
or
mov
aaa
cmp
inc
jbe
push
mov
mov
cmp
dec
mulb
test
pusha
jo
arpl
dec
mov
dec
fcomp
fiadds
sti
testb
xchg
mov
cli
mov
and
cmp
mov
push
and
mov
add
insl
mov
fadds
sub
das
lea
push
mov
pushf
mov
ss
xchg
sub
sbb
mov
pop
or
or
gs
jae
sti
std
aas
inc
dec
orb
mov
inc
jb
test
test
push
cmc
xor
pop
mov
int
sbbb
xchg
pop
std
data16
jb
scas
ljmp
dec
fidivrs
andb
repz
xor
movsb
repz
outsb
lar
jl
pop
call
dec
sahf
aad
sbbb
xor
mov
inc
inc
cmp
fucomip
stc
push
movsl
loopne
std
push
inc
int
xor
in
inc
stc
pop
add
ds
mov
stos
pop
jbe
les
mov
out
inc
push
icebp
das
dec
mov
addr16
mov
dec
sub
mov
cmc
fst
iret
in
add
cmp
push
pop
ret
ljmp
pop
orl
bswap
outsl
cmp
call
aas
push
in
mov
std
cmp
fcoms
nop
lahf
mov
dec
mov
and
and
inc
push
mov
pop
pop
and
lea
aas
test
arpl
lahf
ss
inc
imul
insb
daa
cmc
rolb
aas
push
iret
pop
movsl
inc
or
jp
lea
sarl
imul
mov
jmp
mov
je
call
add
lods
pop
jmp
ja
xchg
xchg
int3
cmp
lahf
inc
jecxz
cli
mov
imul
or
mov
in
sbb
mov
std
rcr
sbb
push
loopne
addr16
shll
orb
xchg
cmp
add
mov
sarb
test
pop
mov
dec
mov
jle
call
ret
xlat
push
and
les
sarb
test
mov
cwtl
pop
xor
mov
sbb
mov
repz
shrl
mov
pop
xor
fbld
in
les
push
xchg
push
pusha
mov
mov
inc
outsl
cmp
das
insl
jmp
out
dec
dec
adc
arpl
popf
cltd
int
iret
mov
sub
sti
or
in
test
or
cmpsb
mov
mov
add
xor
enter
inc
xorb
inc
jmp
lea
je
add
les
dec
aam
shlb
dec
jae
movsb
and
dec
int3
loop
jbe
std
or
insl
leave
sub
xor
mov
imul
xor
outsl
lods
fiaddl
out
cmp
sub
scas
mov
cli
adc
jae
xchg
fnstenv
fs
flds
push
push
push
pop
lds
icebp
inc
sahf
xor
or
and
xorl
imul
pop
inc
dec
lds
out
lods
jnp
insb
adc
out
fstp
rcll
scas
inc
aam
imulb
cmc
ror
xchg
sub
sub
pop
in
inc
push
jge
or
mov
jns
pop
out
or
out
and
enter
xor
xlat
mov
shll
cmp
fidivrs
icebp
mov
jmp
es
fiadds
mov
mov
scas
ss
jbe
mov
test
popf
ret
loope
leave
fwait
push
xor
into
inc
xor
push
fs
scas
cmpsl
sub
repz
mov
xor
pop
fildll
fists
push
popf
adc
movd
loopne
int
mov
pop
mov
std
insb
inc
in
pop
pushl
xorl
dec
mov
pop
jno
xlat
pusha
push
xor
mov
iret
test
sbb
inc
cmp
fs
adc
lock
dec
sub
mov
imul
mov
fstl
mov
rolb
xor
aaa
lahf
jns
sbb
push
and
outsb
stos
cmp
cli
fldt
dec
pop
mov
pop
out
std
hlt
pop
imul
movb
jae
cmp
inc
shlb
stos
xchg
inc
lcall
into
push
inc
cmc
pop
pop
sub
into
mov
std
inc
lea
jl
or
jmp
insb
jl
andb
add
sbb
adc
mov
add
or
sbb
jmp
xor
mov
js
int
and
lahf
sar
jp
sbb
add
mov
cwtl
les
and
test
pusha
les
pop
jae
jg
push
in
or
adc
fidivrs
mov
cli
sub
movl
fdivs
mov
xchg
mov
and
fdivrl
adc
cmp
push
xchg
daa
pop
inc
nop
call
mov
data16
loopne
jo
insl
push
iret
hlt
sub
jns
or
push
adc
add
popl
scas
lahf
adc
and
push
dec
das
pop
mov
pop
jbe
jmp
add
lret
push
in
push
out
adc
mov
jb
dec
iret
bndcn
leave
ljmp
jle
push
arpl
jecxz
or
xchg
int3
pop
out
sub
sarb
mov
mov
xchg
cmpl
push
les
mov
push
jmp
dec
sahf
mov
enter
dec
xor
jg
lods
xchg
ljmp
dec
das
in
fisttpl
in
add
jg
lahf
clc
sbbl
pop
inc
pop
lcall
rol
and
sub
xchg
sti
das
test
data16
jmp
sub
fistpll
stos
mov
sub
xchg
or
pop
mov
dec
sbbb
mov
call
jb
pop
sub
fdivrl
test
fwait
std
fidivs
add
dec
iret
cmpsl
push
aaa
fdivl
mov
mov
dec
or
imul
jns
in
push
mov
push
test
hlt
jne
push
mov
adc
pop
inc
add
sahf
inc
scas
mov
jge
les
fisttpll
inc
add
dec
dec
mov
fbstp
mov
push
xchg
push
or
and
mov
xor
ds
jno
fdivrl
cmp
js
fidivl
gs
and
jnp
je
aam
iret
sbb
call
mov
fs
jle
and
inc
shrb
adc
shlb
je
inc
test
nop
cli
hlt
xor
pop
inc
pop
lea
xchg
stos
js
ja
addr16
outsl
data16
jno
jnp
repnz
xor
dec
aas
decb
mov
outsl
cld
cmp
or
ret
test
enter
int
sub
scas
fnsave
fstpt
into
or
push
in
movsl
mov
imul
mov
inc
cmpsl
je
lret
mov
mov
lea
sbb
jns
fstpt
sub
mov
push
jbe
lods
mov
xchg
jge
pop
pop
movsb
mov
in
xchg
fldenv
jle
or
or
insb
mov
push
mov
test
not
push
pushf
add
jne
repz
lcall
jns,pn
ss
and
mov
addr16
test
pop
xlat
adc
dec
sub
outsb
xchg
sbb
mov
xor
push
jae
add
add
dec
loope
sub
pushf
dec
inc
sub
jae
sub
and
mov
orl
xor
divl
frstor
int3
lret
aad
jo
stos
dec
fisttpl
in
lock
ss
dec
adc
fcoml
pop
bound
js
popa
xlat
push
fs
xchg
or
out
nop
jmp
mov
mov
gs
push
ficompl
aad
lcall
lock
loopne
out
dec
add
push
rclb
iret
add
xchg
push
sbb
mov
fisubrs
dec
xchg
inc
adc
nop
sbb
mov
lret
adc
xor
insb
cmp
hlt
jnp
cmc
mov
loop
call
lods
xor
cmp
mov
adc
subl
and
add
int3
mov
xchg
mov
fstpt
pusha
mov
pop
or
cmp
insl
xchg
daa
stos
div
mov
adcl
push
push
pop
inc
loop
pushf
fisubrl
movsl
maxps
mov
mov
push
call
adc
push
cmp
add
outsl
les
pop
jae
ret
sub
inc
dec
pop
or
ss
std
addr16
jp
notl
mov
adc
xlat
xchg
imul
cmp
ror
mov
mov
test
scas
dec
cmp
pop
push
push
sbb
mov
lds
mov
mov
das
jecxz
andb
clc
shl
gs
test
lods
sub
fwait
xchg
inc
mov
push
cld
mov
jb
jo
pop
xchg
roll
push
mov
lret
adc
test
insb
mov
pop
out
les
daa
iret
inc
push
popf
ret
lods
test
into
fisttps
stos
mov
aam
cld
mov
cwtl
mov
adc
dec
mov
popf
pop
dec
adc
push
mov
ja
pop
jp
mov
dec
fisttpl
xchg
xor
pushf
andb
jae
cmp
shrb
cmpsb
dec
mov
cmp
mov
xchg
out
mov
int3
cmpsb
cmp
inc
add
mov
jno
leave
xchg
enter
sub
dec
outsb
js
or
push
cmp
dec
jge
dec
fsubs
dec
add
jp
or
and
mov
jbe
sbb
fisttpll
mov
and
jnp
ss
jmp
xchg
mov
push
jl
stc
ds
mov
je
adc
test
bound
in
mov
shrb
shlb
lcall
add
scas
pavgb
push
and
or
ret
xorl
lods
push
mov
cld
mov
bound
sub
in
das
out
in
and
xchg
dec
repz
sbb
sub
jbe
out
push
dec
cwtl
scas
push
jno
fadds
lret
ljmp
insb
lods
pop
xor
aam
mov
iret
inc
out
pop
enter
lds
out
mov
ja
scas
and
cmp
push
add
mov
jns
adc
mov
sbb
mov
das
dec
pop
ret
out
repnz
push
add
inc
lahf
or
jne
fmuls
rcrl
inc
cmc
xchg
bound
lcall
fcmovbe
mov
mov
dec
xchg
jle
push
xlat
mov
push
lret
or
iret
or
mov
call
in
xor
fwait
sahf
pop
xor
adc
daa
fisttpll
add
push
test
ret
int3
mov
in
data16
mov
mov
jne
jno
jl
vpcomd
les
bound
not
loopne
test
pop
lahf
push
or
es
imul
cmpb
push
nop
mov
loopne
lahf
sub
out
cmp
fsubrs
push
adc
dec
mov
dec
inc
adc
dec
into
out
jmp
sbb
popa
sti
xchg
jle
mov
aas
addl
dec
xor
inc
mov
jl
and
cmp
nop
push
sub
je
daa
outsl
movsl
push
sbb
ja
mov
inc
pop
mov
push
pop
inc
arpl
add
cmp
icebp
iret
aad
sub
add
sub
das
je
daa
xchg
and
fdivs
test
repnz
cmp
movsl
push
pop
mov
pop
sub
cwtl
out
mov
cmp
push
out
dec
dec
inc
shrl
xchg
outsl
add
dec
imul
scas
test
mov
cltd
jle
clc
push
inc
dec
dec
into
jbe
jo
fiadds
aas
add
sbb
test
cmp
push
jecxz
mov
sbb
jl
xor
push
enter
cmp
pop
iret
or
testb
pop
xor
iret
fcoml
or
or
fsub
pop
outsb
cld
add
add
push
pop
pop
cmpsb
mov
scas
lds
addr16
out
or
add
mov
adc
dec
adc
shrl
sub
mov
or
jge
xor
pop
aad
mov
cmpsb
adc
stos
pusha
stc
mov
ror
fcmovu
clc
jo
loopne
rorb
ret
mov
rcr
stc
rcr
mov
push
mov
push
jle
or
popa
cmp
dec
sub
lahf
fnstcw
sub
xchg
ljmp
xchg
test
ljmp
test
loop
faddl
scas
int3
pop
lcall
adc
inc
mov
stos
jno
cmp
mov
push
sti
lods
testb
xchg
jle
arpl
sbb
mov
test
sti
sarb
xchg
leave
cmp
pop
jg
mov
add
xchg
inc
mov
popa
pusha
add
mov
mov
pop
add
pop
mov
jge
jecxz
leave
add
stc
out
lock
adc
leave
xor
rorb
mov
mov
js
test
into
sbb
or
test
test
aad
cmp
mov
daa
scas
pop
lods
lret
mov
clc
and
daa
pop
cmpsl
adc
mov
push
movntq
ss
cmp
out
pop
pop
je
mov
cmp
sti
test
and
bound
icebp
sub
ljmp
pop
mov
aam
sub
gs
push
imul
fs
and
sti
rcll
in
inc
das
mov
dec
or
pop
or
ret
popf
inc
call
xchg
push
or
lea
or
inc
movsb
lahf
jg
mov
stc
rorl
dec
mov
add
mov
cmp
add
xchg
mov
loope
out
pop
pop
hlt
rclb
pop
inc
fdivl
popf
mov
pop
mov
sub
adc
cmpsl
pop
hlt
cmp
neg
aas
jae
xor
lods
mov
xchg
cld
outsl
cmc
xlat
lds
cmpsl
dec
mov
test
notb
test
xor
sub
xor
shll
rcrb
xchg
jae
scas
shll
data16
sub
inc
sarl
cld
daa
and
jecxz
mov
mov
mov
or
fistpll
outsb
in
test
jge
lods
aad
into
cmpsb
test
and
mov
xor
nop
push
in
aas
push
xor
pop
test
lret
cmc
mov
jmp
add
cld
push
ljmp
mov
push
movsb
insl
lret
lcall
push
add
dec
shlb
xor
mov
add
add
pop
dec
or
mov
push
cmpsl
add
mov
or
mov
js
push
pop
adcl
jp
loopne
or
repz
mov
stos
inc
mov
xor
jle
mov
lahf
movsb
dec
cmp
test
mov
movsb
mov
lret
subl
cmp
movsb
es
imul
push
nop
jmp
cmp
hlt
lret
push
movsl
push
push
xchg
jl
cli
push
or
push
rorb
push
push
pushf
lret
mov
andb
or
pusha
mov
mov
cmp
shll
pop
push
jns
push
or
imul
in
mov
xchg
and
or
and
enter
add
pop
mov
scas
xor
add
hlt
jnp
orl
mov
cli
sbb
xchg
test
push
add
loopne
cltd
fldt
adc
dec
adc
jp
out
and
jge
dec
mov
xchg
xor
adcb
pop
xchg
lret
jmp
or
sub
and
push
pusha
cmp
stc
imul
pusha
ret
inc
ficoml
push
xlat
inc
or
sbb
jae
leave
and
pusha
sbb
mov
pop
out
call
fdivrl
and
jmp
inc
or
nop
mov
insb
adc
pop
out
loope
xor
mov
leave
cmp
inc
jecxz
int3
cmp
add
cmp
outsl
idivb
ficomps
cmpl
adc
in
in
xchg
mov
pushf
stc
add
fcomps
sub
lds
cs
sahf
call
out
push
faddl
cmp
mov
clc
clc
add
inc
daa
clc
aaa
cltd
dec
or
stc
and
inc
test
loop
repnz
inc
movsb
mov
and
mov
mov
nop
gs
sbb
cmp
xchg
push
mov
and
pop
dec
negb
shlb
pop
jmp
jb
sub
mov
aaa
add
jl
jbe
int3
mov
cld
stos
cmp
fcomp
in
in
xchg
out
faddp
daa
mov
jno
mov
cmp
add
scas
movsl
ja
cmp
fldl
incl
in
add
xchg
add
lret
pop
add
aad
mov
jecxz
cmc
leave
sub
xchg
and
mov
mov
fnstsw
sbb
sub
out
jb
and
lea
and
dec
adc
into
mov
jg
icebp
pcmpgtb
popa
adcl
scas
lds
lret
aad
adcl
push
jo
arpl
ror
push
xchg
and
lcall
jle
sbb
push
test
popf
dec
repz
xor
dec
dec
mov
cmpsl
xchg
mov
xchg
dec
es
bound
and
rorb
pcmpeqw
test
fstl
movsl
sbb
mov
and
scas
adc
jns
push
mov
and
mov
sbb
push
in
dec
jno
and
cmpsb
mov
in
aad
xchg
cli
ds
xor
nop
sbb
mov
xor
lret
addb
cwtl
mov
aam
mov
push
mov
or
push
cmp
cmp
and
pop
cli
and
push
scas
or
jl
inc
call
add
xor
inc
add
dec
push
enter
sub
jae
sub
cmp
jns
cmpsl
mov
pushf
or
sahf
lahf
adc
lea
popf
jbe
inc
sub
pop
out
push
and
outsb
push
sub
mov
test
imul
xor
daa
call
cli
adc
mov
cs
sbb
lods
xchg
cmp
jb
jae
movd
inc
sbb
in
fcoml
adc
pusha
movsb
scas
mov
add
pop
popf
jecxz
mov
adc
popf
in
mov
dec
dec
sbb
loope
shl
aaa
cmp
adc
out
fwait
test
or
fwait
adc
in
bound
les
insl
xchg
and
ds
sbb
stos
xchg
je
js
mov
mov
lahf
or
jne
sbb
mov
and
cmp
xchg
aam
cmp
andl
leave
repz
mov
into
fwait
aas
dec
insl
push
or
xchg
xchg
frndint
mov
test
mov
orl
sahf
mov
sbb
xchg
andl
sbb
lahf
in
int3
mov
pop
in
lret
ret
push
pusha
xchg
add
repnz
jge
adc
and
sub
andl
cli
imul
shl
mov
mov
lods
in
mov
fisttpll
scas
clc
add
xchg
inc
mov
je
inc
inc
fs
xor
les
cmp
push
gs
popa
xor
rorl
rcrl
aad
add
adc
ja
and
scas
push
cmpsb
pop
xchg
gs
mov
jle
ret
out
rol
adc
and
js
pop
leave
cmpsl
add
mov
test
pop
cmp
push
cmp
or
lret
ret
stos
scas
add
mov
lds
lret
sbb
sub
push
mov
mov
push
ret
fildl
inc
loope
loop
push
pop
jmp
cld
mov
test
xor
jg
dec
iret
out
sub
test
xchg
outsb
ficomps
mov
shll
or
lods
pop
mov
test
mov
adc
int
jo
mov
sbb
jno
inc
data16
loope
mov
adc
movb
inc
and
clc
test
out
push
mov
ret
aas
jp
mov
pop
inc
jmp
subl
mov
leave
push
mov
inc
ds
cmp
filds
jnp
ja
iret
popf
adc
cmp
in
mov
xchg
rorl
scas
bound
enter
sub
add
adc
mov
repnz
bound
push
and
sub
loope
je
pop
push
push
sbb
fidivrl
sub
hlt
mov
pop
mov
ret
pop
cmpsl
into
cmpsl
adc
and
repnz
sub
aaa
fwait
jns
and
mov
pushf
and
inc
add
adc
push
out
insb
sub
and
cli
fdivrl
mov
lea
fisttps
sbbl
cs
sub
push
push
hlt
hlt
lahf
inc
add
aad
movb
add
insb
inc
mov
pop
adc
mov
js
and
ljmp
add
push
pusha
adcl
icebp
sahf
inc
xchg
test
pop
fbld
cmp
test
add
mov
das
xchg
adc
or
lret
lea
cmpsb
xchg
das
xchg
mov
ljmp
cmp
mov
mov
and
mov
sar
pop
push
jecxz
adc
cmp
mov
mov
adc
insl
inc
sbb
push
adc
adc
mov
push
dec
adc
ds
or
fisttpll
mov
mov
lds
cmp
mov
inc
bound
in
flds
dec
pop
xchg
mov
jecxz
popf
stc
shrl
push
pop
insl
adc
outsl
push
std
aas
mov
addl
push
cmpsb
jno
repnz
in
mov
xchg
sub
aad
iret
add
movb
jno
jp
loopne
push
or
ja
enter
mov
pop
int
mov
adc
ret
adcl
cs
jo
dec
rcll
and
jne
ds
xchg
sbb
mov
xchg
mov
je
mov
insl
in
push
aaa
cld
mov
mov
and
and
or
sub
mov
stc
fnsave
lock
sub
mov
rclb
adc
jp
mov
insl
adc
pusha
inc
mov
add
or
dec
fiadds
mov
lds
xchg
inc
mov
cwtl
rol
mov
sbb
mov
cmc
push
mov
jl
mov
jne
and
mov
fidivrs
sbb
inc
mov
rol
push
fildl
cltd
cmp
pop
bound
add
sub
sahf
nop
cmp
aad
fdivl
dec
imulb
mov
xchg
cmp
cmp
push
adc
insb
xchg
push
pop
push
rol
fimuls
inc
mov
jno
cmp
xchg
int
xchg
movsb
lock
lret
xchg
mov
les
mov
bound
push
and
test
sbb
insb
cmp
fadd
or
test
idivl
out
mov
mov
mov
jg
adc
ret
shll
sbb
or
fstpl
and
mov
rcr
stc
fmuls
jg
aam
popl
dec
imul
std
adc
xor
sbb
fstpt
stos
adc
xor
mov
lahf
loope
out
add
and
clc
pop
xorl
stc
sahf
mov
sbb
dec
andb
lock
repnz
pusha
fsubrs
mov
pusha
mov
dec
test
xchg
mov
or
pop
dec
in
dec
mov
dec
lahf
pop
add
ja
mov
xor
cmp
mov
xchg
lods
dec
shrl
sub
mov
mov
sub
jle
shrl
out
push
in
ret
jnp
or
mov
rclb
imul
enter
dec
mov
repnz
add
mov
inc
jle
and
cli
outsb
daa
es
rcrl
std
jne
jmp
dec
sahf
sub
scas
outsl
xor
xchg
dec
add
in
in
cmc
js
cmpsl
sbb
fs
push
jb
sbb
xlat
cmp
outsb
jns
pop
test
sbb
xor
push
aad
sbb
push
mov
jnp
push
pop
fsub
arpl
clc
fisttps
and
testb
jae
mov
sbb
adc
xorb
imul
and
pop
addr16
jnp
into
testl
bound
leave
in
dec
enter
cmp
xchg
popf
jne
mov
push
mov
ds
icebp
mov
add
loop
lret
add
addr16
movsb
addr16
mov
xor
sbb
aam
mov
inc
jle
ljmp
inc
loope
sbb
lea
test
ret
jae
xchg
dec
popa
nop
cmp
imul
lock
or
das
jge
in
xor
das
fstpt
adc
inc
pop
sub
inc
push
mov
and
mov
pop
repnz
insb
movsl
popf
outsl
sbb
xor
pop
test
vpxor
jp
cmpsl
test
scas
cmpsb
push
xor
test
lret
mov
mov
aad
cwtl
and
fisttpl
dec
add
dec
xchg
or
fcmove
add
xor
lods
mov
test
adc
loope
add
add
fwait
xchg
sbb
mov
addr16
loopne
sti
inc
lahf
int
mov
and
jnp
subl
stos
xchg
arpl
jae
push
mov
jo
mov
adc
sbb
les
popa
inc
aas
in
stc
fbstp
arpl
cs
adcl
pop
out
clc
mov
les
mov
int
aad
pop
movsb
pop
adc
or
push
push
out
push
or
ss
lcall
cmp
mov
stc
cli
pushf
sti
mov
cmc
jl
popa
push
sub
xor
push
sub
mov
inc
pop
dec
cli
and
popa
or
sbb
loopne
out
mov
stos
or
adc
lds
or
adc
pop
in
jo
arpl
mov
data16
lcall
das
or
xor
xchg
popa
push
scas
adc
mov
pushf
pusha
and
sbb
das
mov
in
mov
lret
dec
popa
aam
xlat
das
push
cmp
stos
inc
mov
sub
out
je
js
push
xor
mov
loop
mov
xor
push
sub
in
sahf
xchg
mov
mov
les
ss
push
fcomps
xchg
xor
push
add
push
mov
test
ret
xchg
fwait
jge
test
pop
fcoml
and
push
lock
movsw
out
mov
xor
and
mov
push
xorb
add
and
sti
pop
push
clc
mov
stos
fsubp
lcall
and
xchg
jmp
in
mov
mov
dec
and
cmp
push
pushf
mov
xor
div
inc
cmp
ret
adc
or
sub
add
cs
scas
add
xor
cld
add
sbb
fisttpl
insl
sbb
xchg
in
mov
nop
sub
xchg
dec
movb
out
int
leave
dec
nop
popf
jmp
inc
jbe
sbb
sbb
gs
adc
inc
mov
mov
dec
inc
ss
adc
mov
divl
es
jae
or
out
out
push
movsl
sbb
mov
pop
outsl
push
mov
call
addb
pop
xor
mov
test
sub
mov
sbb
xor
or
xor
movsl
jg
inc
fistpl
js
inc
push
lods
sub
scas
pop
cmc
mov
int3
addr16
cmpsb
mov
pop
mov
lret
sub
je
jb
push
xchg
pop
pop
cmp
fadds
or
cmp
mov
ja
sub
sub
cli
push
dec
ljmp
push
xchg
imull
mov
or
sbb
fbld
xor
sub
dec
or
and
mov
cmc
mov
sbb
ss
fcomps
mov
stos
inc
jne
clc
call
je
popl
cmp
lods
mov
dec
push
or
mov
jns
lds
mov
sbb
xchg
pop
add
scas
lock
adc
ret
cmpl
push
dec
lahf
adc
movzbl
loopne
dec
movsl
mov
in
add
mov
cld
sub
lret
insl
divl
add
adc
sub
test
xchg
pop
jo
ja
mov
xor
cmpsb
addr16
hlt
loopne
pop
and
mov
adc
outsl
loopne
lahf
loop
xchg
push
popa
lods
and
dec
shl
push
pushf
cmpl
and
lock
add
sub
mov
loopne
outsl
cmp
add
mov
jne
and
scas
lods
rcr
pop
adc
xlat
xchg
mov
push
out
divl
ss
xor
aaa
sub
pop
adc
aaa
mov
lock
insl
out
scas
cmp
aam
fadd
sahf
sub
mov
push
stc
add
gs
mov
jbe
add
shrl
aas
add
into
cltd
mov
cmp
xorl
xor
leave
sarb
or
fsubp
ds
hlt
sbb
sbb
sub
cmp
imul
mov
dec
xchg
jne
cmp
mov
mov
outsl
idiv
ficoml
cwtl
fimuls
push
or
lods
xchg
pop
shll
cli
shr
inc
jae
jmp
adc
fidivs
adc
jge
jnp
mov
xor
or
pop
pop
pop
sti
pop
or
je
pop
fucomi
int
test
mov
mov
out
movsl
lret
jne
or
dec
addr16
es
mov
mov
adc
fwait
mov
dec
adc
cmp
int
mov
shll
je
push
pop
das
movsl
mov
mov
addl
pop
or
mov
addr16
stos
jecxz
jle
cmc
stos
xlat
sub
hlt
bound
xlat
cmpsl
dec
pusha
and
seta
arpl
out
lcall
mov
mov
pop
sbbl
jp
jo
inc
mov
dec
cmpl
test
adc
push
and
pop
inc
add
je
sbb
das
loopne
xor
mov
test
xchg
add
xchg
shll
fwait
jne
mov
mov
adc
jge
les
es
cld
jbe
or
fcmovu
inc
jnp
jns
test
cmp
movsl
outsl
adc
rcll
insb
lods
mov
mov
mov
ss
add
mov
insl
push
jo
loope
das
xchg
into
sarl
push
push
dec
je
shll
jg
push
pop
push
addb
lcall
bound
push
xchg
jno
inc
inc
push
push
shll
mov
and
ds
pop
push
inc
jbe
pop
add
pop
push
mov
packssdw
xchg
mov
aad
mov
cmpsl
cld
icebp
rclb
jae
cmp
adc
dec
jecxz
dec
xor
and
jp
pushf
cmp
ljmp
pushf
push
adc
enter
popa
sub
fiadds
lock
dec
push
mov
outsb
jl
xorl
bound
fcom
dec
mov
mov
mov
pop
scas
mov
add
icebp
push
gs
sub
icebp
add
call
movl
andb
add
jae
mov
shll
sbb
popf
jns
push
addr16
cmpsb
shlb
adc
cld
xchg
fdiv
mov
inc
pop
cmp
xchg
jb
addr16
sub
mov
ret
stc
and
fdivl
push
int3
lcall
fs
out
jne
push
sub
inc
jp
xor
sub
jmp
mov
stc
mov
addl
out
repnz
mov
mov
roll
repz
icebp
or
mov
lret
inc
imul
mov
fsts
ljmp
inc
xchg
imul
sub
dec
movsl
jae
stos
and
arpl
pop
pop
repnz
out
pop
pop
xchg
push
mov
xor
inc
icebp
xchg
jmp
loopne
cmp
nop
rorb
cmp
pusha
test
movsb
stos
and
in
adc
or
add
aaa
sbb
in
push
incb
lret
fsubrs
push
ret
out
test
jo
into
xorl
lcall
xchg
iret
lret
mov
es
fldt
dec
mov
imull
xor
mov
lea
jno
cwtl
push
rorb
push
movsb
xchg
fldl
subb
mov
cmc
pop
sbb
push
call
sbb
lods
mov
int3
inc
cmp
imul
pop
into
stos
ret
pop
sub
sbb
xor
jmp
out
ljmp
mov
xchg
scas
fbld
roll
adc
and
ja
xlat
xlat
mov
das
xlat
clc
sbb
fsubr
cmp
cli
push
incb
in
repz
cltd
xor
jo
ljmp
xchg
loope
lcall
push
pop
mov
jl
lds
xchg
lods
pop
not
and
in
mov
sub
lods
loope
or
sub
in
aam
inc
xchg
je
ja
addl
inc
std
fnstenv
mov
xor
je
testb
cmc
sub
cmp
add
ret
scas
mov
fdivs
imul
ja
lret
push
data16
adc
in
push
inc
xchg
ja
cmpsb
inc
scas
sbb
sub
add
xchg
mov
es
cmc
lods
jle
aam
daa
jle
insl
push
jmp
cmc
lcall
test
inc
pop
mov
adc
shll
and
adc
sahf
insl
hlt
pusha
jnp
lods
das
test
testb
mov
aad
mov
dec
jge
iret
arpl
push
ja
out
and
sbb
enter
scas
cmp
xor
mov
jg
push
push
es
pop
inc
xor
out
ss
sub
xchg
push
aas
sarb
push
jle
int3
sub
jp
adc
clc
jmp
in
and
or
push
dec
pop
sbb
pop
cmp
stos
mov
or
imull
daa
xor
inc
mov
or
lcall
outsl
lcall
rcrl
jae
fadds
out
lea
clc
jp
ret
fsub
adc
inc
out
in
pop
pop
stos
cmp
fsubrp
testb
sbb
fs
adc
mov
jecxz
xor
pop
cmp
mov
aam
adc
cmc
inc
data16
or
adc
or
cli
ret
lcall
sub
ret
movsl
fmull
je
in
or
sub
mov
pop
xchg
jbe
gs
stos
xchg
mov
add
aam
nop
jne
mov
push
scas
sbb
stc
push
sub
add
daa
push
in
std
jmp
dec
mov
cmp
push
pop
mov
xchg
xchg
inc
add
mov
xchg
imul
fwait
cwtl
test
lods
jecxz
xchg
mov
cmp
push
imul
outsb
sbb
and
fwait
pop
pop
cmpsl
xor
mov
mov
sub
push
icebp
xor
imul
loope
fs
aam
popf
cwtl
push
and
pop
push
loopne
dec
xlat
xchg
or
lock
sahf
jnp
xchg
pop
imul
shr
repz
int3
notb
inc
jecxz
iret
xchg
addr16
jne
add
dec
inc
rsm
mov
ret
data16
cld
pop
sub
lods
pushf
xchg
ret
data16
mov
sub
pop
or
in
clc
cs
xchg
js
pop
std
out
adc
mov
outsl
inc
or
filds
xlat
jmp
fildl
xchg
adc
mov
add
jecxz
xchg
fcmove
fsubrs
cmp
mov
clc
mov
shlb
push
cld
jb
sbb
pop
sahf
aaa
sub
xor
sarb
cmpsl
mov
push
movsb
aaa
imul
fcmovnb
shrb
ret
cli
insw
mov
in
scas
subb
out
dec
imul
add
push
push
or
int3
xchg
and
sub
shl
mov
cmp
shlb
xchg
mov
adc
je
lret
xchg
out
mov
lock
dec
fwait
or
or
ss
mov
fisubs
pop
mov
cwtl
inc
add
out
xchg
mov
incb
sbb
movb
push
mov
das
jl
js
push
pop
call
fdivs
add
cmp
dec
divl
xchg
mov
pusha
inc
mov
xchg
xor
cmp
xchg
jns
sub
pop
outsl
lods
and
lods
push
mov
ljmp
data16
jns
insl
bound
cwtl
sahf
mov
and
mov
dec
push
stos
sub
out
rorl
rorl
test
mov
or
xor
jnp
mov
nop
and
insb
mov
jmp
cwtl
aam
test
fwait
push
mov
sbb
scas
push
dec
and
pop
xchg
add
clc
outsl
sbb
test
jnp
addr16
pushf
lahf
xchg
lds
cmp
ficompl
stos
insl
or
jns
mov
push
cmpsb
imul
imul
insl
movl
pop
push
js
and
cltd
xor
xlat
imul
outsl
adcb
call
dec
cs
inc
pop
scas
cli
std
std
push
dec
push
lock
push
rcrb
cmc
shr
dec
adc
mov
dec
inc
xchg
sbb
cs
adc
test
or
out
mov
adc
repz
es
clc
sbb
popf
inc
jae
mov
lret
int3
ss
call
inc
xlat
xchg
jmp
sbb
add
test
fsubrs
rcll
lret
push
mov
xchg
lcall
in
int3
bound
inc
into
out
dec
mov
popa
mov
clc
jns
mov
inc
xor
mov
fstl
jg
popa
mov
pop
cs
inc
xchg
subb
movsl
repz
pop
mov
popa
std
jp
loope
arpl
adc
nop
insl
enter
shll
xchg
popf
jle
mov
stc
jle
inc
xchg
and
testb
push
mov
jae
mov
dec
jb
das
jbe
jecxz
mov
push
mov
jae
lds
mov
arpl
mov
jl
cmp
leave
mov
outsl
cmp
or
ret
cli
mov
sub
pop
adc
xor
mov
stos
inc
mov
jns
and
aaa
xor
sbb
push
jae
adc
push
repnz
xchg
jle
test
push
rdmsr
outsb
sub
pop
mov
addr16
and
xchg
scas
push
xlat
adc
cmc
daa
incb
sub
push
notl
data16
stos
pop
roll
mov
lods
into
mov
pop
jb
xchg
adc
lods
dec
mov
sahf
inc
cmp
jb
aam
mov
xchg
ljmp
dec
inc
lret
sbb
lret
aam
sub
fwait
add
push
lret
jge
int
cmp
popf
out
js
outsl
call
dec
std
pop
cli
cmp
inc
ret
shrl
lds
mov
xchg
inc
lods
sub
stc
jmp
add
xor
mov
lahf
jae
ror
cwtl
imul
ret
cmpsl
cmp
jno
sub
add
es
lahf
jne
fisttpll
and
cmpsb
sub
fcoml
mov
movsl
sub
cmp
or
add
mov
adc
fiadds
je
add
and
ljmp
add
or
or
adc
add
fisttpl
sub
jle
jmp
jne
in
fs
sbb
cmp
jg
lds
push
outsl
dec
pop
cwtl
push
out
movsl
inc
scas
pop
sbb
add
mov
xchg
jmp
sti
out
dec
push
lods
adc
das
outsl
popf
xor
rcrb
rcrb
push
xchg
iret
xchg
mov
mov
loope
popl
inc
nop
nop
test
xchg
and
int
mov
fsts
and
inc
popf
xor
mov
fidivl
dec
orl
pop
fucomp
dec
or
cmp
in
pop
sbb
or
sahf
adc
repz
fsubrl
mov
fisubrl
daa
sub
push
js
add
scas
ljmp
and
and
xor
and
ds
loop
repz
inc
subl
push
fcoms
fldl
pop
jge
add
sub
mov
mov
cli
jns
fmuls
mov
cli
xor
ds
fisttps
cwtl
imulb
xchg
in
lods
test
dec
lock
subl
pop
cmc
and
add
push
mov
fucom
popa
push
lds
mov
movsb
mov
push
add
pop
fsubrl
and
sbb
cmp
pop
jl,pn
in
int3
std
mov
fcmovnbe
in
mov
notb
mov
pop
sbb
cmpsb
aas
aaa
lcall
mov
shr
bound
pop
mov
inc
test
inc
add
outsb
pop
daa
or
popa
movsl
addl
popl
push
push
insb
pop
mov
pop
scas
or
call
cmp
fsts
jo
stos
jmp
jle
jmp
mov
cmp
xchg
xor
and
es
inc
or
cmp
lcall
imulb
jno
int
sbb
fnsave
cltd
cmpl
adc
jbe
or
xor
sub
aam
dec
inc
pop
test
jmp
xchg
dec
testb
dec
push
test
jecxz
aas
xchg
mov
outsl
pop
pop
jge
mov
pop
leave
rcll
ret
ret
jmp
and
ret
sahf
mov
xchg
add
adc
and
or
or
ficoml
or
mov
pusha
je
push
cli
popl
lret
mov
divb
cli
cmp
call
jecxz
orb
lret
xor
dec
mov
cli
xchg
cmp
cmpsl
ret
mov
imul
lahf
xor
or
sub
xor
addr16
lret
push
sahf
inc
cmp
outsb
pop
jmp
push
pop
add
popf
test
jl
sarl
lret
stc
adc
roll
lret
cmp
jo
mov
jecxz
add
xor
jge
out
out
jg
test
jl
dec
test
fcmovnu
xchg
and
aad
ja
inc
pop
outsl
mov
scas
lret
jne
dec
mov
jno
and
in
pop
out
and
insb
sbb
inc
cwtl
xchg
xchg
jns
aad
sbb
test
inc
pop
mov
rolb
sub
btc
pop
mov
pop
mov
push
dec
stos
add
cwtl
pop
icebp
mov
dec
sbb
sbb
adc
lea
or
and
idivb
cld
rcrl
les
rcll
stc
popa
aas
mov
clc
push
inc
ljmp
sbb
jp
test
jne
repnz
aas
mov
imul
push
stc
xchg
dec
in
js
addr16
ds
imul
cltd
cltd
scas
xchg
xchg
and
fisubs
sbb
xor
hlt
lahf
mov
push
mov
mov
jo
in
lret
test
cwtl
je
and
outsl
or
lods
pop
gs
fcoml
sbb
mov
sbb
mov
sub
clc
aad
fsubs
and
inc
lods
rclb
xchg
lods
sub
aad
sub
push
jecxz
lods
imul
mov
mov
repz
fsts
cmpl
cmp
in
enter
and
mov
fmulp
outsb
shlb
sub
jbe
hlt
popa
dec
ds
adc
orb
xchg
mov
arpl
adc
add
push
movsl
mov
mov
scas
stos
xchg
lea
inc
dec
or
dec
fimull
push
add
and
inc
mov
xchg
inc
dec
dec
mov
xor
cmp
leave
add
lods
sgdtl
push
movsl
fidivrl
ret
mov
adc
fisttps
ds
js
inc
pop
pop
xchg
test
aam
pop
xchg
push
sub
push
les
xor
in
cmp
jmp
pop
xchg
cld
add
div
mov
push
addr16
clc
lcall
rcrl
decl
xchg
inc
jp
mov
dec
adcl
mov
xchg
adc
inc
mov
jecxz
jo
pop
adc
js
arpl
test
adc
popa
mov
xchg
mov
cmpsl
xchg
out
adc
mov
xlat
pop
mov
xchg
add
dec
fwait
inc
fildl
push
imul
sub
sti
mov
add
sbb
sub
jmp
push
dec
insb
outsb
pop
iret
ficoms
popf
inc
or
les
mov
mov
xor
nop
mov
mov
inc
cmp
dec
jmp
lret
lret
mov
imul
adc
gs
cmpb
fnstenv
filds
jns
mov
cmp
mov
loop
fidivrs
aad
stos
jle
xchg
mov
lock
incb
out
bound
mov
push
rcl
cmp
repnz
arpl
ss
cli
push
add
xor
adc
sahf
lods
sub
lds
jmp
jp
cmp
mov
in
sti
mov
outsb
shll
add
mov
test
fwait
hlt
cmp
js
lahf
nop
pop
cmp
call
dec
sbb
insb
pop
add
gs
fucomip
pusha
out
cmpsb
and
inc
fisttps
js
and
mov
push
insl
mov
out
mov
jno
out
rcl
jge
pusha
pop
ljmp
and
lds
mov
pop
xchg
loope
in
std
pop
jg
ja
mov
fimull
out
mov
cmpsl
sar
pop
push
jl
sahf
or
imul
fstpl
lret
ret
in
arpl
lock
jl
aaa
pop
sub
test
daa
sbbb
xchg
enter
loope
outsl
pushf
into
lds
mov
ds
adc
ss
xchg
xor
pop
push
adc
mov
out
xchg
mov
add
mov
xchg
xchg
push
sub
inc
scas
mov
dec
sbb
cmpl
xchg
mov
call
sub
pop
in
inc
sub
mov
cwtl
sti
push
dec
and
pop
xchg
sbb
xor
xchg
icebp
xchg
test
dec
xchg
xor
mov
xor
pop
xchg
arpl
rep
pusha
lcall
push
ret
in
outsb
std
les
sbb
xchg
repnz
mov
mov
jo
adc
inc
cmp
sbb
js
mov
scas
movsb
mov
pushf
cmp
scas
push
pop
scas
dec
cli
or
sarb
add
add
inc
inc
insl
cmp
shrl
xor
cmpsl
mov
shrl
lret
sub
test
mov
popf
aas
aas
ds
sbb
add
scas
leave
daa
and
jae
xlat
cmp
aad
jne
ja
aas
mov
add
jg
subl
mov
clc
push
mov
icebp
xlat
lds
and
adc
jp
bound
mov
repz
mov
mov
push
in
jb
jle
loope
add
call
les
mov
dec
clc
mov
or
sub
subl
daa
icebp
in
jbe
in
sti
push
idivb
sti
sbb
add
out
fwait
push
adc
in
pop
cmpsl
stos
add
mov
mov
pop
xchg
scas
jg
dec
insl
in
mov
scas
inc
sub
iret
mov
adc
ss
mov
aad
jb
mov
aas
add
sbb
mov
and
frstor
jo
sbb
cmp
inc
ret
dec
lock
cmpsl
pop
les
std
adc
insl
mov
scas
ret
sahf
add
fwait
out
and
mov
lret
es
adc
pop
dec
stc
imul
outsb
sti
mov
sub
ljmp
repnz
mov
mov
sub
cmpsl
lea
addb
inc
fucomip
pop
lahf
jp
cmp
in
outsb
xchg
inc
sbbl
adc
jle
std
rol
ret
mov
inc
jns
mov
and
lret
lret
fcoms
mov
push
adc
xor
out
mov
pop
and
movsl
je
loop
testb
and
test
dec
xor
add
sbb
xchg
and
sbb
lock
mov
fs
mov
neg
cs
std
cltd
add
aam
mov
or
lods
fildll
xor
insl
jb
sti
jecxz
adc
pop
lock
pop
out
pop
repnz
jp
pop
xchg
es
test
jecxz
dec
xor
sahf
fwait
sbb
js
push
sbb
loope
inc
cmp
push
ret
jns
sbb
out
inc
jno
xchg
or
leave
or
filds
jmp
cli
popa
js
ja
ret
fstpl
or
jge
mov
nop
outsb
outsb
fistps
dec
push
roll
lock
or
pop
sbbb
mov
xor
lahf
or
in
lea
mov
jge
xchg
cmp
mov
inc
jnp
shlb
xchg
xor
test
pop
mov
mov
outsb
or
cmp
dec
push
dec
push
mov
pusha
out
movsl
mov
mov
pop
fidivs
fwait
sub
dec
xchg
jne
jge
pushl
sbb
addl
int3
subl
je
pop
mov
and
inc
jnp
dec
cmpsl
aam
in
iret
jb
xor
pop
fistps
sbb
pop
ss
loope
ret
sbb
xor
imul
out
aad
and
std
mov
or
outsl
cmp
push
fiaddl
push
imul
and
pop
push
bound
xor
stos
aam
cmovno
add
cmp
cmc
inc
sbb
inc
mov
out
repnz
push
in
ljmp
mov
jecxz
clc
push
sub
mov
stc
xor
outsb
lcall
aas
mov
jl
and
lcall
adc
xchg
push
call
sub
fstp
sti
sub
test
adc
sar
out
jae
sub
fisubl
xchg
das
push
and
sub
pop
and
and
popa
sbb
or
push
rclb
mov
mov
je
es
dec
xor
dec
cmp
shll
push
pop
cs
outsl
xchg
sbb
mov
add
adc
jg
je
inc
out
out
scas
aam
mov
imul
les
inc
add
mov
pop
mov
add
in
aad
mov
mov
cmp
push
cmpsb
add
cld
outsb
lods
lret
mov
push
call
pop
fisubl
out
and
or
sarb
cli
push
nop
jnp
xchg
jno
dec
jge
js
notl
adc
mov
rol
std
xchg
cli
jmp
pop
cmpsb
mov
sarl
adc
lret
push
or
ss
xchg
pop
cwtl
cwtl
das
xchg
or
orb
fdecstp
popa
jnp
cmp
imull
lahf
cmp
sti
inc
jp
mov
outsb
cmp
orb
stos
push
xlat
pushf
add
inc
sbb
loope
cmp
arpl
pop
movsl
and
dec
cld
je
xor
jge
jle
pusha
and
mov
jns
imul
mov
cli
ss
aam
mov
inc
int
fcmovnb
sub
cwtl
gs
test
ss
hlt
jl
mov
lea
js
popa
jmp
repz
jns
dec
sbb
in
es
inc
int
mov
xchg
push
cmpsb
and
sbb
stc
add
addr16
testl
mov
in
inc
int3
pop
loopne
mov
sub
jb
cltd
testl
lods
mov
sub
das
mov
movq
mov
xchg
movsb
movsb
idiv
std
mov
inc
daa
push
adcl
cmc
fstpl
aad
sbb
jno
sub
fwait
push
pusha
outsl
mov
dec
sub
pop
lcall
js
adc
mov
jno
lods
loope
notl
lret
loopne
push
lds
or
test
mov
pop
mov
dec
notb
rolb
jecxz
jmp
xor
mov
jmp
xchg
dec
jne
hlt
dec
jb
adc
inc
repz
add
jle
movsb
xchg
sub
mov
add
xor
mov
xchg
jecxz
popa
movsl
lcall
jge,pt
add
orl
mov
or
dec
mov
lods
out
sbb
xor
mov
iret
loop
dec
rcll
or
inc
dec
sysenter
out
add
hlt
jmp
sbbb
loop
movsb
outsl
or
dec
test
scas
xor
out
mov
cmp
sub
out
fsubl
mov
mov
into
push
xchg
mov
nop
leave
cmp
imul
lea
jge
stos
cmp
stc
test
lcall
inc
sub
dec
test
push
push
dec
daa
mov
js
das
dec
pop
sahf
pushw
sbb
movsb
mov
insl
inc
xchg
jns
imul
in
push
mov
notb
nop
js
adc
aad
incb
push
popl
pop
sub
cmp
jecxz
fs
pop
mov
aaa
add
and
add
push
jb
push
push
je
sbb
sub
add
adc
dec
push
js
xchg
jmp
mov
xor
push
xchg
sub
sbbb
xchg
mov
inc
push
dec
inc
cmp
int
push
or
fnstenv
or
and
cmpsb
adc
sahf
subps
mov
data16
jb
aas
out
push
add
inc
les
cmp
inc
scas
jmp
jo
lods
out
sarb
add
and
divl
dec
fwait
hlt
stc
sahf
jbe
dec
mov
xor
fs
sub
xchg
fidivl
jmp
or
fstl
popa
nop
das
dec
add
dec
push
pop
addr16
pop
in
jns
add
dec
loope
shr
outsb
les
sub
mov
out
out
sub
cld
xor
int3
jns
dec
popa
add
leave
mov
int
adc
int
sti
rcll
enter
pop
lods
dec
or
inc
or
mov
std
aam
enter
test
inc
mov
aad
or
sbb
add
inc
pop
pop
int
xchg
ja
and
cwtl
mov
test
jb
cld
aas
inc
xchg
sub
xchg
mov
cmp
or
inc
roll
aaa
arpl
pop
ss
push
stos
sub
mov
cmc
hlt
jg
rolb
jno
std
gs
mov
sbb
pop
add
push
test
pop
mov
push
outsl
ds
in
jmp
lahf
or
rorl
loopne
mov
lock
test
in
out
or
mull
setnp
cli
decl
jge
jbe
mov
pop
stos
jnp
gs
adc
xchg
and
adc
push
push
aad
rcl
call
push
incl
cmp
das
and
xor
mov
mov
outsl
mov
sbb
cmp
and
scas
dec
sti
rcrl
cmp
jno
jno
mov
pop
xchg
mov
clc
jbe
dec
sub
add
loop
xor
push
adc
mov
dec
aad
scas
adc
rcrl
iret
js
mov
xchg
pop
bound
daa
jmp
nop
dec
adc
push
fistps
daa
ja
aas
scas
push
imul
dec
divb
jnp
ret
dec
push
shlb
push
stos
sbb
adc
int3
sub
cltd
mov
mov
outsb
xor
sahf
popf
fsubl
fidivl
and
or
aad
cmp
aad
pop
scas
cli
dec
mov
or
rorb
jmp
sub
push
repz
adc
fiadds
movsb
xchg
and
shrb
mov
mov
push
mov
dec
outsl
push
add
and
bound
addr16
jae
mov
adcl
popf
add
mov
in
add
sub
inc
pop
ret
add
movsl
mov
arpl
add
mov
xor
xor
ja
out
mov
mov
test
push
movl
leave
pop
mov
push
add
dec
and
cmp
popf
mov
mov
scas
out
cmp
mov
sub
adc
mov
add
jmp
xor
cld
movsl
syscall
lcall
sahf
hlt
cltd
jb
clc
imul
call
aas
clc
add
popf
loopne
sub
popa
or
fisubrl
and
scas
xor
jp
jbe
jo
in
dec
cld
movsb
and
mov
inc
jns
mov
scas
mov
sbb
leave
test
pop
loope
xchg
data16
mov
and
mov
aam
inc
push
xchg
pushf
pop
mov
arpl
data16
fwait
jg
jmp
sub
adc
cmp
mov
lahf
push
mov
shl
sub
mov
jl
lds
hlt
mov
out
mov
ret
fistps
mov
aad
sub
out
add
fisttps
lea
pop
inc
adc
inc
clc
add
sahf
jg
cli
mov
cld
call
or
mov
push
rcrb
sub
fcmovne
push
jle
xor
test
cmc
push
jmp
mov
and
xor
or
into
inc
xchg
xor
out
sbb
jbe
test
mov
cld
and
and
fs
shrl
pop
or
jge
or
xchg
out
pop
jp
mov
shll
push
sub
mov
out
mov
and
hlt
out
mov
jo
cwtl
outsb
sbb
cld
lods
pop
jns
notl
aas
pop
orl
stos
fsub
xchg
jbe
sbb
pop
inc
or
push
inc
pushf
jo
or
movsb
cmp
pop
add
adc
xor
jne
or
jbe
lahf
test
mov
subb
xchg
pop
rcrl
ds
shl
enter
jne
mov
jbe
int3
das
stc
jp
or
fistps
inc
loope
out
out
jp
mov
sar
ret
rclb
sub
xlat
dec
lret
xchg
push
out
ja
test
adcl
ror
mov
int3
clc
mov
mov
sub
cmpsl
cli
sarl
sbb
aam
mov
xchg
fcoml
fsubs
pop
pop
xchg
push
jp
xchg
movsb
loope
into
and
pop
sub
mov
out
sarl
mov
pop
mov
inc
add
cmp
cs
dec
sub
or
movhlps
std
inc
sub
jp
mov
xor
aaa
mov
std
sbb
into
mov
or
cmpsb
add
jb
in
cmpsl
stc
mov
mov
js
jmp
inc
addb
out
cld
or
dec
jnp
inc
and
xchg
lds
inc
push
lea
mov
jns
out
das
lea
sub
movsl
call
mov
jp
inc
jo
adc
or
dec
imul
pop
or
and
fwait
pushf
push
xor
pop
cmp
fs
aam
lret
bound
xor
adcb
pop
popf
js
jp
aas
push
or
cmp
aam
in
fcomip
push
mov
cmp
sbb
mov
arpl
cmpl
movsbl
sarl
das
popa
xor
xor
icebp
pop
cmpsb
mov
add
mov
pop
cmpsl
les
jnp
andl
jbe
aam
ja
and
sbb
cmp
pop
fdivrl
pop
push
pop
mov
rcl
enter
outsl
mov
stc
outsb
lods
fcomps
dec
xchg
outsb
jmp
sbb
pop
orb
push
cmpb
pop
scas
inc
sub
mov
cld
sub
dec
int3
repnz
clc
sahf
ret
push
and
or
sbb
inc
fildll
pop
sbb
scas
xor
or
repnz
test
cmp
add
adc
sti
jmp
jno
lds
mov
rolb
clc
jge
inc
rcrl
sbb
cmp
adc
je
jp
scas
dec
mov
inc
ficoms
add
mov
dec
cmc
push
mov
mov
sub
xor
mov
mov
adc
inc
jbe
test
aas
hlt
negl
and
adc
cltd
mov
cli
into
xchg
adcl
adc
dec
sti
gs
test
or
hlt
lea
xorb
in
jne
je
inc
pop
out
xlat
outsl
push
in
push
sub
adc
mov
push
pop
inc
adc
gs
fdivl
xor
mov
lea
sbb
jmp
movsb
pushf
mov
xchg
jne
or
ds
xchg
add
push
adc
adc
aas
mov
imul
test
adc
ret
stos
xor
loope
clc
mov
out
outsl
jge
xchg
xchg
mov
scas
das
lods
in
lods
sbb
arpl
notb
jge
ljmp
adc
xor
in
add
rcr
dec
clc
das
fwait
or
stos
aad
sti
cli
cmp
repz
mov
xor
or
popa
orb
push
add
mov
insl
sub
test
add
push
mov
sahf
dec
popa
pusha
push
pop
mov
inc
xchg
clc
orb
adc
fisubl
pop
dec
movsl
xchg
jp
jp
or
push
sub
stc
push
cmpsl
sub
into
and
lods
test
into
jecxz
lret
jmp
cmp
movsl
jae
movsb
fldenv
push
subl
outsl
jecxz
scas
adc
sti
lock
les
sbb
push
jb
cmp
aad
rorl
sti
scas
jmp
fwait
cs
xor
inc
movsl
rcrl
mov
sub
sub
cld
test
repnz
push
adc
xchg
sbbl
dec
pop
aas
lahf
ja
xor
xchg
aaa
jo
xchg
sub
aaa
cmp
inc
clc
sub
popf
lods
push
fnstenv
or
je
testb
aam
mov
pop
cmp
adc
mov
mov
push
mov
push
mov
and
mov
mov
out
add
in
movsb
cmc
das
fmul
jge
and
sub
outsb
dec
cmpsl
lret
dec
xor
jg
jo
xchg
filds
jecxz
xlat
aas
adc
or
lcall
pop
lahf
bound
push
sub
push
push
imul
xchg
out
dec
outsl
leave
dec
jae
aas
jle
out
jmp
mov
std
in
mov
mov
xor
dec
mov
dec
arpl
stos
lds
sti
inc
inc
jmp
mov
mov
jae
mov
jo
and
xor
push
sti
into
data16
pop
mov
and
pop
scas
dec
mov
push
leave
ret
cmp
cmp
cli
stc
rclb
jb
pop
je
scas
pop
cmpsb
inc
loope
cmp
mov
mov
icebp
test
imulb
lods
add
repnz
int
xchg
pop
xor
fdivl
rolb
cli
out
fs
in
arpl
aam
dec
xor
ficomps
adc
lods
xor
xlat
dec
jg,pt
push
sub
aad
int
add
sub
mov
aaa
xor
insl
push
cmc
mov
dec
jae
and
sarb
mov
cs
popf
mov
sbb
insb
xor
movsl
lods
hlt
adc
movb
out
adc
aas
cltd
push
test
in
pop
xchg
shrb
pop
repz
xchg
testl
fsub
adc
xor
fidivrs
mov
lods
sub
jae
xor
pop
outsb
dec
in
dec
stc
shlb
push
sub
sarl
out
bound
ret
inc
insb
jnp
mov
sbb
jo
jmp
add
xchg
fs
fildll
cltd
jle
rcll
inc
dec
sti
lds
xchg
scas
rclb
add
xchg
ss
notb
int3
and
scas
idivl
xchg
jbe
fsubs
loope
jbe
aam
adc
mov
sbb
dec
xchg
and
ret
jl
push
sub
popf
les
and
ret
rcl
popa
xchg
dec
dec
jnp
lds
fsubs
xchg
cmpsb
mov
mov
sub
and
in
test
jb
iret
mov
mov
cmp
icebp
add
and
sbb
sar
jge
push
dec
xchg
lds
adc
sub
push
dec
int3
es
stos
dec
jns
pop
push
test
shrb
sahf
mov
jle
add
xchg
out
mov
hlt
sbb
mov
lds
stos
xor
pushf
mov
lret
mov
into
cltd
xchg
lods
push
pop
out
push
mov
jnp
call
xchg
into
adc
cmp
lea
int3
aas
adc
mov
pop
cmpsl
test
enter
ret
popa
out
imul
jmp
cmpsb
mov
arpl
into
push
add
scas
fnsave
mov
fdivrs
pop
js
inc
sub
xorb
add
movsl
fxch
and
pop
mov
xor
add
jnp
cmp
adc
shlb
sbb
daa
pop
lods
mull
dec
mov
es
aas
inc
or
inc
movsb
inc
pusha
adc
in
xlat
movsl
icebp
xchg
lods
sub
hlt
incb
lcall
jae
mov
loope
popf
jecxz
fdivrs
sbb
popa
sub
mov
out
imul
pushf
push
out
push
sbb
xor
insl
mov
aaa
or
cmp
add
pusha
hlt
lds
pusha
cmp
xchg
ret
pop
jl
xor
fnstsw
jmp
xor
inc
mov
jb
cmpsb
stos
dec
lods
sti
jg
and
adc
cmc
dec
pop
out
jb
nop
stos
adc
adc
fisubrs
cmp
push
sar
mov
and
inc
cmp
jne
mov
pop
aad
inc
popl
adc
cwtl
sub
addb
cmp
jmp
shlb
xor
mov
push
data16
cmp
rcr
ljmp
inc
sbb
icebp
cmp
insb
xchg
xchg
jae
shl
mov
dec
adc
mov
push
fidivl
loop
lock
cmpsb
lcall
pop
jge
inc
cltd
xchg
or
dec
push
push
clc
xor
nop
mov
pushf
sbb
xor
stos
push
mov
mov
rorl
push
les
scas
inc
jno
shrb
jae
cli
or
mov
movsl
jecxz
mov
clc
push
lea
loop
jbe
mov
add
mov
outsb
fdivrl
int3
test
test
dec
jnp
clc
lea
js
in
push
jns
jae
and
xchg
add
pop
ret
mov
sub
inc
cltd
dec
pop
and
jae
push
cmp
iret
pop
fcompl
push
mov
adc
jno
sub
outsb
dec
sub
lods
pop
lea
leave
lea
mov
jmp
rep
sbb
test
cmc
inc
aad
cmp
cmp
addr16
jo
sub
push
test
xor
jg
dec
je
mov
leave
mov
movsb
jp
mov
cltd
int
mov
daa
xor
cmp
mov
dec
gs
xchg
xchg
int
xchg
mov
fbstp
fidivl
sbb
pop
aaa
pop
ja
clc
dec
scas
nop
lods
or
dec
sub
pop
cmpsb
movsb
xchg
or
inc
std
xor
lock
inc
lds
test
aaa
adc
or
push
push
jae
ffreep
pop
pop
out
mov
mov
pop
xor
icebp
or
repnz
inc
test
mov
xor
insl
cltd
inc
mov
cmp
ds
cld
adc
jle
mov
test
mov
out
mov
xchg
loopne
scas
mov
fwait
cmp
sbb
or
mov
sub
add
mov
mov
lock
pop
mov
jecxz
push
pop
fs
mov
fwait
cwtl
enter
insb
insl
ret
dec
cmp
mov
sarl
pop
mov
inc
mov
mov
or
xor
xor
adc
test
inc
push
out
mov
pop
xchg
fsub
cs
cmp
lcall
push
out
mov
mov
pop
nop
mov
sbb
test
andb
xchg
pop
xchg
inc
jne
faddl
dec
and
mov
xchg
repz
sbb
sti
lock
and
testl
ds
jne
js
sbb
pop
mov
test
add
mov
or
ficompl
mov
movsb
cmp
push
sbb
add
push
into
xor
mov
cli
or
add
sub
imul
push
add
mov
arpl
xor
clc
fucom
cmp
int
mov
sti
push
mov
je
xchg
mov
lods
xchg
xchg
lret
jno
stos
mov
xorb
enter
xor
xchg
adc
fwait
jg
jle
lods
add
daa
popa
rcrb
dec
frstor
loopne
push
outsb
mov
aas
add
rcl
sbb
and
mov
ret
in
or
aam
rcr
xor
lcall
cmpb
adc
fsubrl
pusha
lret
popa
int3
cmpsb
jecxz
sbb
mov
mov
scas
insb
push
pop
push
mov
jo
clc
cmpsb
pop
or
push
movsb
mov
dec
pop
aas
sub
jae
enter
fwait
push
add
jp
fisubs
dec
pop
xchg
inc
cli
fwait
cmp
aad
fists
mov
adc
cld
stos
sbb
push
lret
rclb
mov
addb
hlt
mov
sub
jecxz
movsl
xchg
ficomps
mov
push
inc
pop
sbb
cs
push
inc
out
mov
push
gs
into
xor
outsl
pop
add
pop
inc
jno
sub
mov
test
sahf
stc
mov
or
out
push
imul
sbb
push
lock
mov
jb
lods
cmp
or
mov
test
test
add
push
pop
mov
xor
sti
repnz
insb
loopne
mov
inc
pop
add
jg
dec
xchg
or
or
enter
push
pop
test
sbb
fmuls
dec
aaa
mov
roll
in
dec
dec
sub
adc
push
xchg
into
mov
imulb
pop
mov
push
mov
mov
outsl
pushf
pop
out
leave
pop
jae
inc
ret
add
outsl
lock
mov
fldenv
mov
pop
scas
add
inc
cld
inc
push
loope
mov
test
bound
sub
add
jbe
imul
loopne
loopne
lcall
dec
xor
mov
shlb
jbe
push
xor
es
add
aam
test
jns
aad
stc
lcall
sbb
loopne
mov
and
xorb
int3
adc
jle
fdivl
icebp
dec
cmp
sbb
jae
cmpsl
mov
sbbl
or
sub
cmp
loop
sahf
adc
mov
outsl
mov
dec
pop
push
and
in
lret
xchg
jb
bound
clc
mov
rorb
xchg
and
inc
jmp
push
adc
push
xchg
ret
arpl
shll
mov
out
hlt
jae
add
lods
lret
mov
and
insl
xor
mov
and
int
aam
in
aam
sub
sbbb
adc
addl
jge
in
jg
mov
jne
mov
jl
cmp
mov
and
add
pop
jecxz
push
mov
insb
sbb
ffreep
subb
xor
inc
insl
imulb
or
loop
mov
clc
xchg
movb
ja
inc
and
mov
and
mov
mov
xchg
std
pop
cli
fsubr
lock
cmp
cld
jg
cmpsb
mov
or
fstp
movsb
mov
loopne
imul
pop
test
dec
pushf
fldt
cmp
add
cmpsb
lahf
xchg
jmp
test
mov
push
lods
in
xlat
or
push
lret
pop
scas
out
mov
xor
add
sbb
cmp
outsl
sahf
jno
push
add
test
pop
pop
sarl
lods
enter
xchg
shll
in
out
cmp
fcomp
dec
jo
adc
out
or
out
imull
jge
jmp
fdivs
mov
iret
fnstsw
popa
andl
shll
jb
mov
inc
pop
lock
fwait
inc
iret
out
cwtl
std
inc
fs
ljmp
fidivs
adc
scas
inc
or
pusha
xchg
pop
fsubrs
idiv
and
push
lret
dec
sarl
xchg
mov
pop
mov
jns
sbb
pop
jle
bound
mov
lret
pushl
xchg
mov
xor
mov
dec
std
mov
xor
mov
xor
adc
out
xor
lcall
jp
xor
shlb
and
and
inc
mov
add
and
ds
repnz
cld
into
sbb
loop
push
adc
fldl
xchg
mov
loopne
pop
movsb
cmpsb
cli
push
sbb
dec
cmp
std
ss
add
test
lock
adc
adc
mov
int3
mov
sub
push
and
inc
push
mov
cli
lock
mov
xor
jge
imul
cmpb
pop
cltd
ss
cmpl
cmpb
adc
sub
pushf
cmp
rclb
aad
pop
daa
pop
outsb
sub
add
faddl
add
loopne
sahf
adc
lods
fldcw
mov
fisttpl
into
dec
and
xchg
cmp
mov
jmp
adc
in
mov
mov
or
lea
aaa
mov
bound
icebp
mov
fcomp
and
cltd
adc
jno
jecxz
outsb
cli
imul
mov
mov
fucom
ljmp
pop
insb
add
out
add
sarb
and
movsl
test
add
shl
std
adc
xchg
push
or
xorl
mov
cmpsb
push
jae
add
mov
aad
out
adc
dec
enter
in
cs
ss
clc
nop
mov
xor
sbb
arpl
or
mov
in
dec
fcoml
dec
stc
xchg
xlat
in
mov
ljmp
shlb
sub
xor
stc
xor
adc
aaa
xchg
jl
and
xor
in
stos
repnz
outsb
sub
fisttps
stc
inc
sbb
push
add
jle
aad
pop
js
data16
pop
mov
daa
scas
add
pop
pop
and
jl
sbb
push
mull
pop
push
repnz
push
sar
fmulp
in
lods
mov
insl
addr16
mov
das
jecxz
cli
std
mov
faddl
pop
cmp
mov
ret
adc
xchg
jno
sbb
ja
cli
and
les
mov
mov
xacquire
pop
mov
fmuls
out
cmp
mov
pop
cmp
xlat
roll
ljmp
pusha
jo
xchg
pop
xchg
adc
add
daa
unpckhps
push
bswap
mov
mov
jo
pop
xchg
jmp
icebp
adc
addl
cmpsb
lods
leave
leave
cmp
mov
jae
clc
lcall
pop
adc
mov
andl
leave
fs
das
jge
popa
pusha
div
fildl
xor
pusha
in
stos
mov
lds
je
xchg
pop
dec
sbb
repnz
roll
sti
mov
mov
clc
mov
ja
add
roll
int3
pop
imul
jp
push
pop
sbb
mov
scas
lret
sbb
sbb
std
cmpsl
rol
das
xchg
lret
lcall
mov
js
je
dec
aam
push
arpl
shrl
call
gs
aad
lret
lret
lcall
lret
js
pop
dec
call
push
ret
cmp
popa
mov
ja
inc
pop
repnz
shll
add
inc
or
enter
xchg
xor
js
leave
loope
push
dec
jecxz
dec
cld
aam
aaa
fildl
inc
aas
jno
stos
icebp
sub
std
jae
mov
jae
test
scas
lods
fldt
cmc
xchg
mov
pusha
dec
jb
aaa
pop
jge
out
sub
inc
or
imul
adc
sbb
mov
test
or
add
sub
cld
nop
mov
out
jle
mov
jle
push
pusha
lret
add
xchg
xchg
pusha
sub
inc
leave
dec
and
ds
and
imul
sub
cli
xchg
call
popf
lock
jno
les
popf
pushf
sti
push
dec
xchg
jnp
inc
std
aam
and
out
mov
mov
mov
sbb
fdivr
rolb
mov
cmp
push
mov
outsl
icebp
jmp
pop
adc
pop
mov
rep
xchg
rcrl
cmp
xor
mov
ds
bound
pop
or
imul
dec
inc
adc
mov
jo
adc
in
pop
aad
aaa
popa
pushf
aam
gs
das
cli
mov
jle
leave
sahf
lret
lods
mov
movsb
push
pop
jnp
ss
mov
xlat
and
cwtl
jle
bswap
push
jg
xchg
fdivp
mov
jle
insb
cmpsb
mov
push
fimuls
std
popa
dec
adc
mov
mov
outsl
fistpll
call
in
push
mov
adc
jg
pop
mov
mov
mov
test
andb
lret
pop
mov
addr16
or
cmp
ret
mov
cmp
cmp
mov
push
andl
pop
jle
inc
cmpl
mov
mov
push
jbe
jne
xchg
sbb
push
or
xor
fdivrs
jecxz
and
xlat
or
add
cmpsb
mov
xor
xchg
fwait
dec
and
ficoms
sarb
idivb
jecxz
xor
lea
dec
dec
jmp
cmp
fmulp
cmp
daa
inc
ret
mov
nop
jbe
inc
fsubr
cmp
pop
sbb
loop
pop
inc
leave
xchg
and
scas
mov
scas
sub
shll
jge
mov
push
push
loopne
out
icebp
das
shrl
cmp
popl
xchg
xchg
pop
jnp
loope
sahf
jg
and
xorb
jnp
and
mov
pop
dec
nop
cld
test
out
in
mov
push
jg
stos
imull
pop
inc
xor
mov
test
ljmp
or
ja
hlt
jae
out
add
or
popa
cmpsl
add
xor
sbb
pop
ds
or
add
cmp
add
inc
pop
push
mov
addb
sub
hlt
in
cmp
fstpl
and
hlt
jo
loope
sub
mov
inc
cmp
adc
in
pop
repz
cs
out
adc
mov
out
add
jmp
test
outsl
repz
and
sub
aaa
fsqrt
insb
xor
test
jne
pop
mov
adcb
out
rolb
jge
and
xchg
cmc
sbb
xchg
inc
leave
stos
mov
sbb
mov
movsl
fcompl
hlt
pusha
movsl
out
test
mov
pop
mov
sub
jne
mov
sub
adc
loope
pop
pop
out
push
jecxz
loop
push
pushl
sbb
int3
scas
iret
fiadds
mov
pop
jne
xlat
testl
fisttpll
orb
cli
push
mov
mov
lods
ljmp
and
outsl
cmpsl
mov
sbb
cwtl
xor
inc
cmpl
adc
jle
inc
push
push
rcll
faddl
push
xor
pop
mov
lds
into
test
cs
nop
icebp
cmp
pop
cmp
mov
add
ss
inc
aaa
shrl
mov
dec
cli
ds
das
and
mov
inc
pop
stos
daa
mov
mov
jns
in
lret
or
add
add
mov
mov
loop
dec
push
test
dec
jnp
xor
insl
adc
jb
or
ljmp
in
push
xchg
jbe
cmp
pop
or
scas
xor
in
sbb
pusha
scas
fisttpl
jg
das
jp
push
pusha
xor
in
lock
xchg
sbb
sbb
mov
stos
hlt
and
add
cwtl
mov
cwtl
inc
push
jge
pop
clc
inc
pusha
imul
or
xchg
cld
dec
mov
imulb
mov
push
scas
xchg
daa
dec
push
gs
mov
popf
int
xor
stos
jnp
popf
add
aad
and
mov
mov
test
dec
call
lret
mov
aam
push
mov
fstp
imul
ljmp
aad
in
or
mov
aad
mov
repnz
movsl
mov
pusha
out
fwait
loop
test
subb
xchg
enter
pop
bound
add
mov
sar
xchg
cwtl
movsb
mov
cmp
mov
or
pop
fadds
pushf
js
lods
mov
xchg
fdiv
and
js
in
pop
and
push
pop
pop
push
xchg
push
mov
js
lahf
pop
cs
xlat
cmp
subl
std
lahf
sbb
ret
leave
cmpsl
lcall
fists
loop
pop
movl
aaa
pop
mov
cmp
or
cmc
ds
mov
add
xor
imul
add
inc
xchg
push
pop
mov
jp
push
int
pop
ret
jg
data16
push
or
imul
pop
outsb
and
imul
std
inc
call
lahf
sbb
cmp
rclb
jg
lods
mov
gs
dec
out
push
iret
xor
sbb
dec
mov
dec
cmp
das
imul
mov
lea
out
jge
jns
fiaddl
push
lcall
scas
xor
ja
lods
fmull
sahf
add
cmp
in
mov
jmp
mov
dec
leave
jmp
adc
mov
jns
cmp
jle
pop
sahf
and
mov
pop
ret
repz
decl
scas
lahf
inc
and
scas
and
sti
mov
call
mov
cwtl
in
and
lock
rcl
mov
jnp
add
xor
nop
push
xor
push
xchg
sub
loope
inc
mov
mov
testl
dec
and
cmpl
add
lods
sbb
mov
sahf
sub
hlt
int
jmp
bound
cltd
xor
les
sub
push
jge
into
imul
xor
pop
push
cs
dec
jbe
xchg
cmpsl
sbbb
rolb
lahf
scas
popa
jg
cld
movl
jg
loope
sbb
jmp
sbb
enter
sbb
hlt
dec
mov
mov
pusha
xchg
and
out
leave
add
bound
jecxz
adc
mov
dec
dec
fmull
mov
aas
pop
jp
in
mov
insb
jne
test
inc
lds
xchg
xchg
subb
push
stc
mov
and
lahf
sub
pop
pop
mov
lret
cmpsb
popa
hlt
sbb
xchg
popa
out
push
pop
jmp
add
inc
and
roll
outsb
jb
shll
jle
cmpsl
fcomip
push
jp
mov
jbe
adc
push
pop
insl
loop
jle
sti
test
mov
aam
fidivrs
into
flds
or
lcall
addb
mov
fs
xor
xchg
mov
outsb
lds
mov
inc
push
pop
jle
repz
cmp
cmp
mov
rorb
ljmp
inc
aam
mov
dec
cmpsl
ret
push
mov
dec
or
mov
dec
mov
xchg
sub
incb
cwtl
cmp
fadds
clc
pop
push
sbbl
rcr
pop
jl
and
ljmp
mov
push
loope
push
iret
lcall
cmpsl
pusha
call
movsb
mov
push
jge
fisubrs
xchg
ja
cli
lods
sbb
repnz
dec
dec
mov
loope
push
ja
jno
stos
push
cltd
jae
orl
jno
and
adc
pmovmskb
jl
sahf
test
add
arpl
lea
xchg
scas
fs
inc
dec
sub
adc
mov
loope
mov
aas
cmp
jbe
push
insb
mov
les
fldl
fwait
shr
call
in
das
and
rcrb
inc
sbb
js
cmpsl
fwait
pop
insb
sub
insb
mov
xchg
mov
enter
andb
aaa
inc
test
test
xor
mov
push
xchg
cmp
sbb
push
lds
bound
and
jne
aam
loop
inc
jecxz
shl
cmp
dec
or
shlb
leave
stos
gs
cmp
add
out
pop
cmp
shrl
stc
xor
adc
setbe
cld
pop
push
adc
and
add
mov
or
pop
dec
xchg
cmp
das
inc
mov
hlt
lret
dec
aad
mov
hlt
ss
adc
sbbb
negl
mov
mul
mov
inc
out
mov
jle
xchg
or
xor
or
jge
stc
gs
xchg
cmp
cmpsb
mov
mov
loop
or
add
enter
rorl
mov
pop
std
mov
xchg
push
inc
cmp
pusha
pop
cmp
test
mov
jmp
int3
pushf
je
push
andl
pushf
arpl
inc
aam
xor
arpl
push
sbb
cmp
inc
sub
push
out
push
dec
ja
adc
ljmp
and
jns
jle
int3
ds
xchg
jl
addr16
loope
sbb
int3
or
outsb
mov
ljmp
ljmp
and
test
addr16
addb
xchg
das
mov
push
in
fsubs
sub
ds
lock
lds
enter
les
and
mov
push
pop
and
mov
xchg
mov
add
and
sti
test
inc
std
mov
pop
mov
adc
cmpsb
fdivr
add
push
ja
addl
or
dec
stos
popa
ljmp
jecxz
pop
pushf
repnz
add
sahf
add
jp
adc
lea
push
push
xor
fisttps
das
mov
sbb
out
xchg
xchg
ret
movsb
pop
jno
popf
cmpsl
or
imul
and
sbb
sbb
pop
idivb
xchg
and
and
rolb
ss
mov
xchg
loope
dec
xlat
js
xor
push
push
les
gs
and
dec
pop
shll
pop
jecxz
scas
lret
dec
fwait
and
fcoml
pop
mov
mov
ss
adc
adc
xchg
int3
push
ss
or
lret
cli
adc
mov
mov
jae
inc
aaa
or
and
mov
cmc
mov
movsb
mov
jmp
in
mov
inc
or
push
fstpl
stos
cwtl
sbb
stos
jge
or
testb
push
mov
mov
push
testb
and
pop
mov
insl
mov
imul
mov
popf
push
xchg
loop
mov
fisubs
ret
xchg
cmc
cmp
mov
add
push
inc
pusha
pop
push
pop
ja
and
sbbl
add
mov
aam
cltd
repz
lds
cli
add
je
dec
test
sbb
jg
dec
into
lret
mulb
push
addr16
cmc
cmp
mov
fmuls
pushf
sub
out
stos
xchg
cs
sti
movl
xor
std
push
rclb
arpl
inc
shlb
push
in
xchg
subb
mov
push
pop
fistl
std
dec
adc
decb
push
loopne
add
or
jns
cwtl
outsb
mov
lret
bnd
andb
lahf
jmp
popa
ds
in
or
bts
pop
cmp
cmp
iret
aaa
fstl
rol
cmpsb
or
loop
jmp
je
test
scas
ficompl
scas
inc
push
pop
dec
insl
push
mov
or
jmp
add
loop
or
pmullw
shl
into
sbbb
mov
into
int3
xchg
adc
pop
xor
xchg
mov
xchg
sub
push
out
fldt
out
dec
out
xchg
adc
test
mov
pop
ret
movsb
cmp
mov
movsl
mov
add
rcrb
les
mov
loope
data16
or
out
aaa
and
cmp
pop
loope
aas
mov
sbb
movsl
adc
rol
aam
mov
inc
aam
push
inc
jmp
outsl
outsl
ret
lock
mov
imul
dec
add
mov
push
enter
loop
pop
jp
cmp
call
or
pop
cli
sbb
push
andl
pop
repnz
mov
cmp
lret
cmp
iret
jo
pop
jb
inc
jb
dec
mov
sarl
lcall
push
lea
jmp
lret
in
lahf
or
sbb
pop
adcb
fimuls
adcb
add
lods
stos
pop
sbb
mov
mov
mov
sub
insb
shll
int
mov
pop
and
inc
or
push
aaa
dec
cld
and
js
sbb
shlb
clc
test
daa
xor
repz
test
shr
ss
enter
insb
push
scas
inc
aad
test
call
test
xchg
aad
fistpl
add
scas
adc
sub
test
sti
shlb
pop
lret
push
repz
fsubs
dec
dec
std
aas
movsb
cmp
loop
xchg
adc
jecxz
sbb
mov
cmp
ss
addb
jne
fists
testb
lahf
add
pop
int
jmp
lea
shlb
test
cmpsl
mov
andb
sbb
jo
jns
add
adc
testb
out
mov
xor
jecxz
loope
lock
mov
iret
test
cmp
and
sbb
or
stos
push
mov
stos
mov
fadds
push
fnsave
or
cwtl
xor
inc
movsb
mov
xor
adc
ja
jo
sbb
sub
pusha
lods
or
data16
push
dec
add
addb
pop
jo
insb
xchg
inc
ds
lds
leave
mov
movsl
xchg
fidivrs
and
cs
jo
stos
dec
jb
orb
dec
or
lret
sub
mov
sub
movsl
adc
pop
jl
sbb
ljmp
dec
lea
inc
pop
cmp
xchg
subb
je
push
xor
jns
gs
xor
cmp
cmp
jp
mov
jmp
jge
and
sub
aam
add
test
std
enter
jnp
movsl
mov
jp
lods
adc
fildll
rorb
mov
scas
aam
sub
cmp
push
fdecstp
jns
in
xor
movsb
or
add
jg
cs
pop
sub
dec
add
out
jne
fidivl
cmp
jp
jbe
gs
cmpsb
pop
ret
add
leave
adc
pop
movsl
cmc
sbb
shlb
std
data16
or
xchg
fcompl
cmp
nop
fildll
mov
aam
mov
sbb
cmpsl
jl
stos
push
aas
cmp
movsl
fs
aaa
or
clc
xchg
loopne
das
cmc
pop
push
bnd
outsl
jle
imul
and
mov
insb
add
test
jmp
adc
xchg
or
pop
rorb
xchg
mov
xor
fildll
fcmove
adc
mov
fwait
out
pushf
add
popa
std
loope
sbb
adc
in
enter
movzwl
lock
sub
mov
mov
inc
mov
ret
mov
jno
dec
cmp
ds
cmc
sti
mov
mov
fsubs
roll
ud1
mov
mov
push
sahf
push
rcll
sbb
movsb
or
pop
pop
aad
iret
ja
push
pop
mov
in
test
cmp
ret
xor
jae
je
jmp
xor
pop
pop
and
or
xchg
cmp
xor
jle
stc
lret
mov
pushf
sti
add
add
fwait
sbb
xchg
jl
insl
stc
lods
cmpsl
rclb
fsubl
mov
mov
xchg
inc
ds
cwtl
subb
xchg
xorl
js
aas
jmp
ds
add
mov
dec
divb
imul
rcrb
loope
add
fmul
cmp
loope
aam
dec
scas
pop
repz
pop
dec
test
test
pop
movsb
lds
icebp
js
jo
out
push
mov
test
pop
xchg
aas
cmp
jg
lods
imull
enter
shll
cwtl
movsb
arpl
and
add
mov
sbb
mov
int3
jecxz
fucomi
cmpl
stos
or
cmp
lock
lods
cli
mov
sub
jmp
xor
sbb
cmpb
pop
test
rcrl
and
jae
fsts
popf
add
repnz
sti
insl
or
inc
xor
mov
cmpsl
pop
rcrl
xchg
out
push
push
andb
mov
in
clc
pop
xchg
stos
add
test
sbb
out
jo
insl
dec
xchg
in
jl
iret
push
shr
sbb
daa
xchg
inc
jmp
shll
lds
loope
dec
mov
push
xchg
cs
out
xchg
push
rolb
or
mov
daa
insb
loopne,pt
push
mov
or
fnsave
popa
jno
imul
push
xchg
cmp
push
pop
xchg
in
sbb
fcmovbe
outsb
dec
sub
in
mov
and
xchg
inc
jle
inc
movsb
outsl
sarb
cwtl
insb
and
pop
sbb
cmpsl
ljmp
lret
test
fcmovbe
cmpsb
outsl
sbb
shr
xor
and
ret
inc
popf
xchg
adcb
into
js
inc
movsb
push
cmp
insb
push
lods
xor
out
mov
inc
je
scas
addr16
cld
in
jae
incb
lahf
aad
xor
sub
xor
xlat
pop
loopne
popf
das
or
sub
adc
addr16
push
ljmp
mov
adc
cld
outsl
bound
xor
jp
add
out
push
lock
jmp
fisubl
cmpsl
push
roll
cs
lahf
rcrb
je
jg
dec
xlat
inc
xchg
pop
into
xchg
xor
pop
inc
pop
fmul
out
das
movsl
sub
adc
or
xor
add
daa
loop
push
test
leave
in
cmp
sar
ja
xchg
sub
mov
dec
pop
outsl
stos
xor
pop
cwtl
lods
sub
dec
xchg
in
hlt
sbb
push
dec
push
pop
inc
int
into
cmp
jno
inc
rorb
mov
xor
xchg
cmp
shr
jg
add
pushf
dec
push
cwtl
jg
sbb
movsl
mov
mov
adc
out
pop
lea
mov
bound
movsl
mov
adcl
mov
pop
cmp
arpl
xor
mov
xchg
pop
push
adc
or
sub
lcall
jo
or
fstpt
repz
into
ljmp
and
cltd
adc
movsb
pop
or
or
jo
sub
jle
mov
cmp
ja
mov
inc
cmpsl
fisttps
mov
repnz
fcoml
mov
pop
int
cmp
sbb
mov
fadds
sub
inc
rcrl
add
jns
aas
fnstsw
cmp
adc
test
mov
call
xor
and
ljmp
inc
or
cltd
fs
dec
xor
xor
mov
adc
sub
rcll
movsb
in
scas
loop
cmp
jb
lret
enter
push
or
inc
mov
and
pop
mov
aad
pop
out
mov
movzbl
addr16
out
adc
or
adc
leave
popf
in
int
inc
sub
push
pop
cmp
push
aad
adc
or
enter
mov
cmc
ret
adc
bound
stos
jecxz
out
and
jg
lcall
pop
stos
add
mov
pop
mov
jo
push
or
sub
sbb
out
pop
pop
pop
mov
idivl
inc
fadds
or
pop
sbb
sbb
cmp
jl
fs
adc
nop
push
imul
scas
and
push
fsubs
ja
cmpsl
and
lcall
lcall
mov
pop
das
dec
jmp
movsl
add
adc
or
fstp
xor
idivl
mov
fisttpl
mov
or
jnp
pop
call
js
sub
jae
jmp
push
and
ret
std
scas
jo
incl
jg
lods
popa
lret
mov
pusha
fisubs
jno
inc
lods
and
ljmp
outsl
cmp
jbe
add
mov
daa
xchg
js
fisttpll
jle
test
fistpl
outsl
mov
aam
mov
cwtl
faddp
ljmp
mov
sahf
rcrb
push
fsts
inc
sbb
test
jmp
pop
lcall
add
inc
jnp
data16
cld
fwait
xchg
mov
out
lods
or
jp
cmp
jp
imul
push
pusha
or
push
xor
fimull
add
push
movsb
scas
ss
xadd
dec
scas
xchg
sub
aad
cld
daa
mov
dec
lahf
inc
scas
aam
into
pop
jle
outsl
sbb
imul
and
jmp
js
xor
mov
loope
push
ljmp
mov
cmpsb
testl
shl
ss
jns
pop
fimuls
mov
mov
sbb
fcomps
or
das
push
xchg
cmp
cwtl
pop
mov
mov
xlat
sbb
bnd
pop
rorb
xor
stos
icebp
addb
push
adc
aas
sub
lods
push
shll
lret
adc
imul
fstps
icebp
imul
xor
in
movsl
outsb
xchg
flds
inc
fs
xchg
add
test
into
aaa
data16
rorb
loope
mov
xchg
and
out
cmp
mov
insl
adc
in
adc
push
mov
mov
pusha
lret
pushf
jmp
adc
and
jecxz
sub
cmp
data16
jae
inc
in
popa
xchg
add
jp
jmp
sub
add
push
lret
xor
dec
scas
xchg
out
sbb
dec
xorb
js
cmp
mov
popl
xor
sbb
out
fwait
push
xor
jo
fisubs
sbb
sub
xorl
add
xchg
cmp
add
mov
addb
das
push
and
push
aam
mov
add
mov
sbb
lock
and
mov
adc
in
cwtl
cwtl
or
in
sbb
xlat
jecxz
cli
popa
scas
cs
mov
loopne
std
pop
dec
in
rclb
and
jo
cmpsb
addr16
cmp
out
jge
cld
jg
add
out
mov
sbb
pop
fisttpll
mov
push
dec
adc
imul
add
imul
loop
repz
icebp
mov
mov
icebp
xchg
fs
sti
clc
push
xor
icebp
xchg
sbb
and
out
pop
je
mov
test
adc
imul
jge
pop
orl
outsb
mov
cmp
push
and
jl
lret
addr16
or
jnp
sbb
or
push
push
dec
aam
in
xchg
push
loopne
sar
adc
mov
leave
fisttpll
push
cmp
mov
push
mov
test
addr16
sbb
mov
cwtl
pushf
sub
push
scas
test
iret
mov
push
lret
sbb
or
add
jmp
sbb
add
andb
sub
aaa
jg
pusha
outsb
mov
aad
mov
push
jg
xchg
or
popf
aas
mov
adc
ljmp
pusha
add
inc
rcr
and
in
jp
add
repz
arpl
sti
mov
mov
push
dec
in
add
lahf
fnstsw
mov
or
pushf
ss
push
jmp
rolb
dec
outsb
jmp
mov
ljmp
in
and
adc
mov
jmp
fimuls
mov
push
xchg
mov
aaa
sbb
pop
jns
lcall
mov
sbb
dec
arpl
pop
push
data16
jecxz
sbb
xor
aaa
xchg
add
subl
push
xchg
adc
sub
jg
rorb
repnz
psrad
inc
or
jecxz
sub
movsb
arpl
pop
dec
aad
loope
or
popf
movsl
leave
push
inc
jge
cwtl
push
ljmp
cld
sub
dec
jg
push
xor
int
inc
push
pop
pusha
mov
jle,pn
sarl
ja
ss
ss
add
pusha
dec
mov
jns
sete
inc
jo
jne
inc
cld
xchg
pop
add
out
pushf
and
mov
add
fmulp
dec
xor
out
mov
lahf
xchg
push
loope
scas
xlat
cmpsb
add
add
shlb
je
cmpsb
jmp
lcall
mov
sbb
lret
rcr
loop
or
inc
or
insl
insl
insl
sbbl
adc
scas
inc
mov
fimuls
ret
sub
pop
add
mov
sbb
lock
neg
repz
add
loope
fstl
mov
lahf
jno
shll
xor
fs
xor
mov
cli
adc
sarb
dec
dec
or
mov
push
jnp
xchg
cmpsb
sbb
adc
xchg
jle
aam
icebp
jp
xchg
pop
push
lcall
popw
sbb
jl
cmp
cmp
pop
mov
popa
push
andl
outsb
adc
fwait
test
mov
or
mov
adc
negl
roll
add
test
mov
push
or
pop
xchg
push
dec
mov
fnstenv
addb
adc
sub
dec
sbbb
sarl
or
sub
scas
mov
xchg
ja
nop
mov
psubusw
sti
mov
shrl
inc
jnp
mov
stos
cmp
mov
shr
arpl
inc
xchg
sub
test
arpl
clc
or
div
and
mov
gs
dec
sub
insl
in
dec
insl
mov
mov
mov
add
inc
out
jae
sbb
mov
outsb
add
push
mov
jns
cwtl
and
push
insb
clc
je
mov
rorl
sub
jne
mov
cmp
insb
cmp
cltd
adc
test
rcll
pop
cmp
cmc
mov
fucomip
cmc
pop
fwait
scas
pop
in
ss
fnstsw
xor
std
push
pop
ja,pn
popf
ja
mov
mov
gs
das
dec
and
jb
loope
pop
xchg
sbb
mull
sub
jge
mov
and
push
lcall
push
data16
pop
pop
std
stc
inc
add
loope
sbb
xchg
shrl
mov
les
test
scas
mov
in
bound
cwtl
dec
decb
cmp
out
lds
add
xchg
je
cld
repnz
lds
xchg
stos
sub
insl
cmc
repnz
or
pop
push
push
test
sbb
jnp
imul
lods
push
icebp
es
sbb
or
sub
sub
fwait
add
jl
xchg
push
or
imul
push
js
repnz
dec
sub
xor
popf
aas
addl
mov
js
sub
pop
clc
popf
out
lods
and
insb
push
adc
clc
push
push
xchg
jmp
mov
xchg
inc
and
mov
push
ss
mov
ljmp
movb
rcll
adc
out
fstl
shl
enter
cltd
mov
jnp
sbb
addl
pusha
xchg
push
scas
not
test
dec
pop
and
or
push
out
cli
mov
push
sub
addr16
repz
std
inc
adcb
sarb
lods
imul
inc
outsb
test
testb
pushf
add
and
cmpsb
dec
pop
mov
inc
and
rclb
in
lods
imul
cld
push
loop
out
outsl
lret
mov
mov
mov
loopne
out
push
out
mov
lds
lds
sub
jnp,pn
mov
std
aad
outsl
leave
mov
adc
lods
sbb
sub
adc
mov
nop
in
ljmp
lret
xor
jae
mov
popa
and
pop
sbb
jb
in
inc
sbb
mov
inc
add
movsl
dec
lcall
and
cmp
repnz
out
leave
pusha
mov
inc
fwait
cwtl
add
add
mov
sbb
xchg
jmp
adc
adc
icebp
sub
cmc
out
or
jp
popf
sub
lahf
jl
push
xchg
inc
imul
adc
or
out
xchg
adc
push
xchg
or
mov
es
das
pop
push
and
cltd
movsb
iretw
mov
dec
and
xchg
xchg
bound
sbb
push
hlt
cmp
fildll
aaa
mov
sub
jecxz
sub
cmp
aam
xchg
movsl
out
push
jae
inc
mov
lods
jne
cmpsb
mov
nop
stos
stc
fsubs
mov
decb
in
repz
mov
jle
out
repnz
jle
mov
sub
ss
shll
pushf
xchg
cmpsl
jo
and
xchg
lcall
sarb
test
into
add
mov
stos
inc
mov
das
xchg
cmp
loopne
cli
ficompl
cmpsb
addr16
sub
jmp
sbb
pop
mov
dec
pop
gs
and
jo
sarb
into
scas
inc
xchg
xlat
imul
adc
sbb
sub
jle
inc
jmp
push
pusha
xchg
dec
mov
xor
push
xchg
cmp
xlat
mov
cmpsl
jp
inc
xor
sub
cltd
mov
andb
movsl
or
movsb
out
mov
cltd
xor
sub
mov
pop
fcoml
ret
xchg
mov
jbe
dec
jge
lret
cli
ja
sub
xor
es
into
mov
fisubrl
jae
into
jb
mov
push
filds
or
cmp
and
sbb
xrelease
outsb
notb
sahf
iret
mov
pop
jle
cld
pop
cmp
lds
jmp
js
cmpsb
inc
repz
dec
jle
int3
cmc
scas
push
inc
cmp
or
ficoml
mov
bound
sub
lods
inc
fbld
lret
sbb
or
pop
push
xor
jns
xor
add
scas
push
inc
fs
xor
aaa
jb
sub
inc
mov
cld
out
mov
adc
xchg
xor
out
inc
bound
mov
pop
xchg
and
in
das
and
bound
shr
std
das
mov
out
int3
bswap
imul
push
fildl
mov
jle
push
pushf
dec
loope
sti
inc
push
mov
adc
gs
mov
imul
jge
addr16
push
push
stos
add
cld
and
mov
mov
jae
nop
in
nop
pop
mov
inc
fs
test
mov
lods
lahf
cmp
jmp
lods
push
dec
jle
out
jg
rorb
ljmp
adc
cmpsl
mov
sub
nop
xchg
in
pop
cld
mov
pop
shlb
dec
dec
jnp
aad
mov
jae
jae
inc
idivb
loope
stos
mov
jnp
jns
sub
fisttpl
mov
leave
push
push
std
adc
xchg
pop
clc
inc
xor
push
jl
mov
pop
add
jl
fisttpll
cmpb
mov
jnp
dec
sub
dec
jge
enter
jnp
jle
dec
dec
shr
sbb
push
in
andb
mov
ret
lahf
in
add
push
scas
fisubrs
pop
inc
or
cmp
or
jns
add
inc
push
inc
push
hlt
add
sub
icebp
or
clc
adc
mov
mov
out
push
mov
adc
data16
aam
add
inc
les
mul
out
and
into
mov
lcallw
mov
out
sbb
adc
call
adc
mov
fistl
lea
jle
scas
mov
and
aad
insb
adc
scas
bound
rcrl
push
push
mov
add
add
cmpsl
jo
sub
ficomps
shl
in
mov
movb
lods
iret
repnz
cmp
pop
jp
test
mov
push
stos
adc
out
push
aaa
fs
sarl
ljmp
pop
js
push
lret
lods
mov
lret
and
mov
movsl
pop
shrl
cld
ja
pusha
sbb
pop
adc
jns
inc
shrb
cmp
pop
xchg
out
rcrb
cmp
mov
pop
and
sahf
or
inc
testb
push
ljmp
add
or
sbb
mov
pslld
pusha
sbb
std
mov
std
pop
push
mov
test
xor
sub
popf
push
rolb
iret
mov
aad
int
movsb
adc
or
jne
mov
fiadds
push
jecxz
pop
adc
enter
adcl
or
sahf
sub
pop
imul
dec
push
fdivr
mov
jp
jae
mov
mov
pop
adc
subb
clts
out
iret
pop
je
mov
rcll
test
xchg
cmp
and
and
dec
and
shl
adc
dec
repnz
lds
movsb
insl
mov
addr16
sbb
mov
push
pop
in
xchg
sub
mov
jns
cld
dec
pusha
mov
jbe
xor
jmp
cmpb
mov
aad
call
stc
add
mov
std
div
jno
add
test
cmpsb
jae
movsb
and
mov
dec
ds
inc
xor
mov
add
out
ljmp
out
mov
mov
cmovge
dec
cmpsb
imul
in
ret
bound
jno
pop
push
pushf
adc
cmp
push
sub
inc
sbb
les
lock
inc
rcll
aam
mov
ja
xor
sarl
cltd
pop
jb
pop
xchg
cmpsl
xchg
or
cmpsl
sub
cmp
and
fs
mov
mov
lret
pop
mov
dec
adc
sbb
pop
idivl
les
in
jo
das
xchg
arpl
mov
iret
dec
insb
rcrb
inc
fcom
roll
outsl
sub
and
mov
cli
icebp
insb
pop
cwtl
jb
adc
shrl
xchg
outsb
add
or
adc
out
cmp
cmp
fcompl
mov
pop
cmp
nop
adc
push
dec
sub
iret
repnz
push
and
pop
ljmp
mov
stos
cmp
fbstp
ds
sub
xor
popf
aas
mov
xor
sbb
cld
subl
pop
in
jl
into
in
sbb
or
adc
inc
jnp
or
movsb
push
repz
pop
pop
inc
adc
jmp
push
xor
insb
or
push
lret
sbb
jnp
leave
adcb
aad
adc
jmp
repnz
push
pop
cmp
lock
add
sbb
pop
cmp
or
mov
push
loopne
js
xchg
mov
jmp
inc
xlat
shlb
jecxz
mul
scas
lcall
sbb
mov
sarb
pop
mov
dec
mov
dec
dec
and
loop
movsb
out
ror
insb
lret
mov
repnz
inc
pop
mov
cmpsb
sbb
push
xchg
jl
or
pushf
jmp
test
push
lcall
hlt
addr16
scas
repnz
push
outsl
js
push
adcb
push
testb
fistl
pop
jp
jbe
jb
add
fcmovnb
fcomip
hlt
loop
out
mov
lods
cmpsl
fsubrs
imul
inc
movsl
add
push
je
xlat
jmp
or
les
cmp
ja
lds
lods
in
xchg
fstps
jl
jbe
and
mov
pop
mov
out
add
mov
ds
sbb
inc
loope
xchg
dec
pusha
loopne
jae
std
mov
icebp
xchg
movsl
call
andl
xor
pop
jns
jg
enter
cmp
in
jp
imul
jmp
sub
cltd
cmp
cmp
mov
dec
xor
shl
rcrb
cmp
test
adc
or
ret
push
push
fucomip
arpl
xor
or
data16
fs
add
adc
pop
jmp
xlat
inc
arpl
sahf
mov
filds
jne
popf
inc
sbb
arpl
push
adc
inc
push
jp
incl
inc
in
scas
add
mov
out
sbb
ret
jbe
out
stos
addr16
cmp
pop
fwait
daa
addr16
ss
mov
xor
and
fwait
pop
dec
mov
lds
fsubrp
mov
jmp
dec
mov
icebp
stos
nop
xor
popa
mov
fidivl
sahf
inc
push
movsl
inc
stos
pop
pop
aad
jmp
mov
rclb
test
mov
les
sub
insl
mov
dec
or
in
ret
mov
mov
inc
pop
xchg
jae
or
cli
in
and
inc
insb
dec
enter
or
shll
push
sbb
fcmovne
jle
enter
aaa
lods
popf
xchg
iret
jns
cmpsl
mov
pop
xchg
mov
ucomiss
fs
xchg
fimuls
aas
loope
inc
sbb
pop
jp
mov
fists
fdivl
add
mov
fs
mov
push
lods
lahf
xchg
ds
shll
jle
sahf
insb
icebp
rclb
dec
jp
jmp
dec
insb
in
into
dec
outsl
hlt
and
jne
das
int3
subl
fldenv
mov
cld
insb
int3
and
mov
ret
loope
push
shl
inc
sbb
out
xchg
xchg
out
xor
push
jbe
loop
xor
ss
dec
imul
sbb
icebp
xchg
lret
je
ret
lret
and
sar
mov
out
or
adc
mov
sahf
ficomps
push
inc
xor
lea
add
pop
cltd
jno
daa
mov
lahf
ds
mov
nop
adcl
cld
cs
cmp
mov
cwtl
mov
mov
inc
std
popf
lods
lea
sub
decb
fwait
dec
xor
mov
mov
jno
dec
xchg
mov
xchg
inc
mov
ret
test
and
dec
mov
inc
jg
xorb
js
mov
stos
lret
xor
dec
inc
movb
or
lcall
aad
in
shll
les
sahf
pop
dec
shl
mov
js
mov
lea
sub
dec
inc
sub
inc
or
add
lret
out
loopne
movsl
jne
push
xchg
bound
lds
pop
push
xchg
sub
dec
pop
mov
cmc
leave
mov
clc
xchg
ja
sbb
ret
jo
dec
mov
xchg
scas
rep
jae
add
xor
cmp
iret
xor
aas
std
and
hlt
add
outsl
xchg
les
mov
mov
mov
hlt
mov
shld
mov
mov
mov
sub
adc
nop
add
sar
adc
int
xor
enter
pop
jno
inc
xor
lods
jmp
xchg
inc
push
mov
lods
adc
or
popf
gs
clc
mov
xchg
sbb
aas
push
cmp
cmp
rorb
mov
push
cmp
fsts
in
or
xchg
mov
out
addr16
xchg
ror
or
xchg
ret
cmc
ds
int3
loop
push
push
dec
pop
xor
jb
or
jne
push
push
aaa
rcl
pop
or
test
jb
cmp
or
inc
mov
mov
mov
ss
xchg
push
xabort
pop
pop
jno
les
out
push
in
dec
pusha
cs
sbb
jns
pushf
xchg
dec
lods
pushf
push
je
cmp
scas
in
inc
lods
in
jp
test
jp
jl
mov
icebp
add
xchg
xor
pop
xor
jge
icebp
pushl
test
dec
or
fcompl
nop
loope
mov
add
les
pop
adc
je
mov
aam
hlt
fwait
cmp
mov
cmp
push
aaa
xchg
cmpsl
repz
repz
outsl
add
divl
gs
adc
or
mov
shll
jb
lcall
aas
clc
add
or
or
or
dec
lahf
or
and
sbbl
cmp
or
js
mov
inc
pop
incl
out
dec
dec
fidivl
or
cli
cmp
daa
xchg
jo
fadds
pop
mov
dec
or
mov
into
xor
scas
lods
adc
in
aaa
sti
cmpsb
imul
sub
mov
mov
pushf
push
subb
inc
or
xor
es
or
aas
icebp
pop
mov
movsb
decb
lret
or
push
lret
sbb
cmc
lea
push
popa
loopne
pop
mov
dec
pop
cmc
mov
mov
adc
fldl
jne
pushw
das
testb
push
cld
adc
inc
push
call
outsb
cmp
rorl
int
addr16
insl
or
out
xchg
inc
dec
les
lods
sbb
imul
lods
push
lods
sub
xchg
lods
sub
add
sbb
jbe
inc
xchg
add
dec
sahf
test
outsb
fidivl
aaa
sbb
jb
and
push
pop
lock
sbb
clc
das
cmp
loope
or
subb
jmp
je
adc
fistps
out
dec
sahf
inc
pop
inc
jo
push
jns
sub
push
mov
push
inc
lods
adc
pop
fwait
in
sbb
jp
dec
xchg
mov
xchg
add
aaa
xchg
pusha
push
jo
xor
sub
cmp
icebp
fldt
imul
bound
popf
and
jne
or
clc
gs
jae
sub
iret
inc
scas
loope
cltd
sbb
add
jns
mov
pushf
mov
jg
xchg
mov
repnz
outsl
cltd
sub
movsl
sbb
and
imul
adc
push
or
movsb
ss
pop
add
jmp
push
mov
repz
fcmovb
addr16
sbb
repz
pop
icebp
lds
dec
add
cmp
mov
jmp
jge
dec
pop
stos
test
shll
mov
adc
pop
fiadds
mov
loope
fldcw
negl
flds
outsb
mov
and
inc
shrb
xchg
push
mov
inc
or
clc
mov
inc
sarb
mov
pop
inc
aad
and
xchg
xor
data16
adc
xchg
das
dec
ret
pop
xor
enter
push
inc
addr16
mov
lods
call
push
jnp
mulb
fdivrl
ret
outsl
stos
mov
inc
push
nop
insb
rorl
cli
in
cmp
fstpt
cmpsl
and
arpl
mov
rcll
dec
out
xchg
lcall
dec
cli
jmp
mov
mov
inc
pop
cmp
dec
repz
push
popf
push
sbb
adc
push
adc
xchg
ret
sbb
xlat
push
fdivrs
enter
cld
fwait
outsl
mov
cld
fs
scas
pusha
sub
pusha
test
insb
add
lock
add
or
adc
ret
inc
lds
jns
imul
jle
push
loopne
push
pop
sub
mov
push
in
shll
shlb
les
dec
xor
es
sub
push
fnop
lcall
inc
mov
ja
ss
mov
scas
xchg
mov
xor
loop
repz
sub
ljmp
or
pminub
cmp
neg
inc
jle
rcl
mov
and
jb
lea
jae
cltd
add
aaa
mov
or
add
repnz
xor
test
jecxz
lea
cmc
ret
add
aad
mov
mov
inc
sahf
ja
lds
stos
adc
mov
mov
jne
xchg
mov
mov
xorb
dec
pushf
xchg
lcall
mov
mov
out
or
test
jmp
test
sub
js
movsl
int
push
std
fildll
das
leave
mov
adc
fidivs
or
or
test
add
mov
jg
cmpsb
ret
loopne
cld
stos
inc
pop
pop
xor
aam
jmp
sahf
jnp
out
cmp
xor
mov
arpl
mov
hlt
clc
movsl
mov
push
or
pusha
pop
dec
sub
test
adc
cwtl
movb
loop
test
pop
jnp
push
addb
mov
lret
gs
jnp
adc
ret
or
xor
pop
mov
jle
sbb
mov
add
clc
adc
jge
or
sbb
jge
movsb
rclb
loope
and
jl
clc
sbb
jge
or
out
out
imul
fstpt
aam
jg
adc
bound
subb
ret
sub
fsubrl
mov
sub
xchg
cld
jnp
test
packuswb
push
pop
ljmp
ret
jae
push
mov
std
and
std
mov
mov
repz
pop
pop
mov
mov
lcall
aaa
or
sub
jns
pop
hlt
std
movsb
or
cltd
mov
adc
add
mov
add
daa
div
xor
pop
das
lds
push
cmpsb
shrl
rorl
insl
mov
inc
push
ffreep
imul
add
lret
mov
jo
mov
bound
dec
in
in
call
lock
test
mov
lcall
jl
push
lahf
mov
jo
xor
jecxz
sub
pop
imul
mov
xchg
xchg
popa
jo
fists
js
cmovg
mov
fsubrl
aaa
jno
sub
aaa
and
xchg
nop
sub
xchg
es
push
fisubrs
mov
fcoms
inc
aas
pop
leave
fwait
ret
ljmp
ret
pop
imul
lret
pop
loopne
pop
repnz
push
js
push
mov
or
loope
lcall
aas
sahf
dec
ja
inc
pop
inc
push
popf
jg
inc
and
push
cmpsl
aas
push
in
push
popf
pop
test
pop
fcoml
dec
or
loop
add
or
fildll
lahf
sub
test
leave
test
out
into
pop
lds
jl
or
rorb
sti
cmp
jge
hlt
jg
fldcw
add
adcb
int3
push
cmpl
push
loopne
in
in
in
mov
and
scas
clc
popf
fidivs
iret
mov
mov
jnp
std
jge
xor
std
mov
rolb
mov
test
jecxz
and
jne
and
test
mov
shr
push
std
sti
add
push
stos
rcr
jae
ficompl
push
pop
pushf
xchg
js
mov
or
lods
lret
mov
add
jecxz
cltd
mov
rcr
es
sbb
ret
je
inc
xchg
cmp
lods
add
sub
pop
pop
fs
jle
jo
or
sarl
jl
push
outsb
in
xchg
sub
sub
add
push
pop
and
add
jmp
mov
mov
cli
leave
cli
popf
clc
push
test
lods
xor
jb
inc
xor
popf
jmp
mov
or
in
pop
pop
or
or
cltd
dec
xor
daa
jnp
mov
cmp
pop
gs
push
dec
dec
lret
mov
into
jp
pusha
mov
mov
sub
push
stos
aad
imul
call
sub
imul
stos
inc
sbb
xlat
stc
mov
cltd
mov
inc
adc
stos
jno
loope
rcll
mov
xor
pop
or
scas
rorl
inc
cs
mov
mov
std
sub
in
mov
mov
fwait
xor
pop
and
sti
push
pop
jb
push
loope
xor
pop
and
lods
in
xor
or
imul
call
stos
icebp
push
push
lea
or
les
in
mov
int
shl
rolb
jnp
pop
clc
mov
lock
dec
lods
add
pushf
push
push
or
int3
lea
push
xor
addr16
pop
ret
mov
xlat
mov
insb
lahf
jle,pn
shr
xor
dec
int
adc
inc
int3
cwtl
jnp
and
mov
shrb
dec
arpl
lock
push
fsubr
mov
xchg
ss
xchg
test
mov
movsl
pop
mov
and
sub
or
mov
ret
mov
in
push
cmp
pop
mov
jp
inc
pop
std
adc
roll
sbb
mov
notb
sub
inc
pushf
mov
fldt
sub
push
fistpl
pusha
je
sub
arpl
mov
scas
and
sub
fisubrs
mov
fsubrs
icebp
add
mov
les
sbb
imul
cwtl
dec
mov
xor
jge
aam
mov
push
cltd
cmp
mov
icebp
sub
test
outsl
cmpsb
test
jecxz
sub
aam
orb
cld
xchg
iret
in
sbb
lods
aad
movsl
ljmp
adc
mov
idivb
out
je
pop
xor
shlb
out
ficompl
ss
or
adc
into
xor
ja
jp
sahf
jo
xor
movsb
xor
sti
jno
movsb
mov
jecxz
sbb
jl
aam
popa
fs
in
jecxz
mov
pushf
pusha
out
aam
mov
jo
push
jnp
or
jnp
xchg
ljmp
or
adcb
mov
fcoms
add
push
fucomp
adc
fsubrs
shll
aaa
cs
jge
mov
testl
test
mov
jle
mov
and
mov
rolb
imull
xor
decb
mov
loop
inc
xor
add
sub
mov
in
xchg
das
dec
pusha
adc
negl
inc
jp
jl
add
pop
adc
and
ss
fninit
pop
jb
cmpb
fdivrl
xchg
outsl
push
sbbb
mov
in
rcll
jnp
addr16
testl
mov
sti
adc
call
or
shl
aaa
in
fwait
xor
cmpsl
std
stos
aam
xorb
dec
inc
cmp
movsl
push
rcr
cmp
fwait
dec
daa
adc
dec
addr16
lret
and
jl
mov
mov
add
and
mov
repz
test
lcall
enter
les
sbb
rolb
cmpsl
sub
push
lods
cmp
mov
push
lods
call
and
cmp
inc
mov
adc
test
fxch
clc
xchg
lods
fimull
push
fidivrs
jae
push
cmc
movsl
rcr
jmp
repz
repz
xor
fwait
ljmp
fistps
popa
pop
dec
sub
mov
enter
and
pmulhw
shll
rol
iret
stos
rcll
pop
call
shlb
rolb
and
cmpsl
mov
cmp
xchg
xchg
aam
jbe
repnz
cmp
and
sub
mov
enter
sbb
test
std
add
sub
xor
pop
ffree
add
imul
inc
dec
dec
inc
lahf
sbb
xor
mov
jmp
stos
fwait
xor
sti
jo
dec
mov
pop
loop
mov
pop
lret
jno
dec
inc
mov
stos
inc
push
movsb
add
or
or
adc
popf
or
js
outsb
pop
jnp
aas
sti
rcrl
in
or
repz
imul
jb
mov
cs
fists
mov
andb
inc
loope
push
out
xchg
jo
cld
pop
not
xor
movsl
incl
mov
pop
int
mov
adc
mov
fcoml
jmp
mov
orb
mov
jg
push
pop
loopne
jbe
jne
aas
sub
fcomp
sub
push
test
inc
or
cwtl
bound
cmc
aaa
call
jmp
mov
mov
lahf
fwait
mov
mov
xchg
loope
in
std
insl
xor
cmp
adc
jbe
mov
imulb
in
mov
xchg
mov
sbb
mov
imul
movsl
aad
cmp
pop
xadd
lahf
and
mov
fcom
fbstp
jae
or
push
add
test
and
adc
and
enter
arpl
dec
mov
imul
pushf
jge
xchg
int
and
jno
mov
sbb
add
iret
mov
inc
xor
mov
lahf
xor
add
xor
adc
out
pop
fisubs
or
int
fldl
sbb
mov
arpl
cli
inc
idivl
jo
ret
mov
or
int
push
fldt
xor
xchg
sbb
adc
cmp
es
mov
fs
push
cmp
add
and
jno
lret
lret
insl
movsl
mov
cld
mov
ficompl
mov
fidivs
dec
dec
iret
jbe
mov
ret
dec
pop
push
xchg
bound
loopne
je
ret
rcrb
dec
incb
and
sub
ljmp
xchg
xchg
push
sub
jno
sub
mov
xor
subb
loope
fisubrl
call
jmp
ljmp
in
jg
mov
dec
loope
push
test
and
and
cmp
enter
js
out
push
xchg
popa
hlt
mov
shlb
jo
popa
xchg
call
aad
fsubs
push
repnz
mov
sahf
insl
and
inc
pop
clc
lret
mov
mov
ret
rorl
pusha
xor
data16
into
xchg
push
lds
dec
xchg
or
je
test
lock
icebp
addr16
sub
add
cmpsb
dec
leave
es
or
sti
push
pop
mov
int
add
inc
fnsave
stc
mov
mov
rcrb
inc
pushf
push
loope
push
lods
xorb
mov
jge
mov
imull
add
dec
subb
je
sub
mov
int
jl
outsb
mov
lock
cmp
pop
aaa
leave
cld
mov
xlat
bound
mov
popa
insl
mov
enter
inc
jns
scas
inc
ds
fscale
sbb
inc
dec
ret
lret
int
dec
push
add
fcoms
cmp
mov
dec
aad
pop
sub
jno
dec
push
jl
andl
sbb
in
out
aad
adc
dec
je
lret
test
in
leave
enter
sbb
or
sbb
inc
pop
mov
mov
and
aaa
jle
jb
scas
fwait
or
jge
push
addr16
or
mov
xchg
loope
bound
mov
lret
sbb
jne
in
jmp
sbb
dec
pop
dec
scas
pop
jp
std
sbb
sub
ret
inc
imul
push
pop
sub
enter
push
add
fisubrl
out
rorl
xchg
pop
sbb
setl
ljmp
push
sahf
je
addr16
out
fadds
filds
lahf
lds
xor
fs
cwtl
pop
pop
mov
add
mov
testl
dec
cwtl
ja
pop
inc
adc
out
or
cmpsl
imul
adc
pop
rcll
inc
xor
lcall
inc
negl
js
xchg
sti
push
mov
push
divb
mov
movsb
xchg
xchg
push
dec
sub
push
sbb
mov
adc
mov
jle
rcl
cli
adc
inc
popf
jp
hlt
das
sub
and
aam
movsl
jbe
cli
pop
aam
xor
cmp
dec
sbb
add
pop
stc
lock
ret
mov
cli
aas
out
push
popa
hlt
cmc
pushf
or
stos
pop
mov
call
jae
shl
xor
lods
mov
sub
iret
mov
sbb
call
negl
mov
pusha
lock
jo
sbb
data16
xlat
or
mov
scas
and
cmpsl
and
and
stos
cltd
sbb
push
das
pop
jne
xchg
push
inc
mov
fildll
test
in
ret
xchg
stos
je
mov
and
mov
pop
add
jmp
out
dec
sbb
or
pop
lods
xchg
cli
hlt
pop
inc
fs
stos
jle
jns
dec
aaa
push
ss
frstor
or
add
and
push
mov
int3
xchg
push
pusha
xor
in
out
sbb
je
ja
push
pandn
push
dec
add
data16
adc
xchg
jae
popf
push
inc
or
cmpsb
add
mull
pop
out
and
jne
mov
imul
int
dec
mov
test
dec
rorl
bound
cmp
stos
jno
ret
sbb
test
pop
sbb
inc
and
in
leave
cmp
sub
je
test
lahf
stos
roll
stos
leave
adc
or
orb
popa
shrl
pop
add
add
mov
dec
rolb
push
int3
pop
xor
movsb
or
dec
cs
into
pop
mov
fstpl
and
jbe
or
mov
adc
pushf
lea
pop
push
js
xor
mov
mov
inc
fs
repnz
mov
lock
and
je
xchg
testl
xor
inc
and
rcpps
mov
movsb
xlat
adc
push
pop
decl
enter
aaa
cwtl
sub
push
adc
add
xor
inc
cmc
lock
out
dec
mov
fildll
cld
imul
pop
gs
sahf
add
mov
jnp
jb
fwait
add
cmc
outsl
xchg
add
inc
fistpl
sbb
fiaddl
push
dec
xlat
repnz
mov
xchg
jge
dec
xchg
mov
mov
or
dec
xor
dec
jno
icebp
mov
flds
adc
pop
sbb
mov
inc
dec
add
fdivl
mov
jmp
mov
sub
les
mov
out
and
inc
cmp
rdmsr
gs
cmp
cmp
jae
iret
fmull
jns
scas
into
ja
mov
pop
pop
inc
mov
fistl
testl
dec
pop
imul
das
xchg
and
roll
or
mov
dec
pop
xor
jecxz
in
push
jne
insl
testl
enter
fdivrs
jg
mov
xchg
scas
mov
xchg
leave
decb
xorb
inc
insl
jmp
push
lret
rol
and
pusha
ja
jmp
cmpsb
pop
or
in
dec
dec
out
popa
aas
mov
sbb
mov
mov
fisubrs
inc
jecxz
arpl
sarl
scas
sub
mov
jae
in
mov
aas
cmpsb
mov
mov
movsl
push
leave
add
aaa
push
pop
and
cmp
mov
loopne
cmpsl
push
xor
jo
std
orb
add
orb
push
and
mov
dec
in
bound
and
xchg
rcll
mov
dec
test
sbb
dec
sub
enter
inc
jl
cmp
movsl
mov
push
push
movsl
pusha
mov
loop
sbb
popa
scas
dec
xlat
mov
push
stc
shll
fadd
lahf
dec
call
mov
call
push
pop
sub
test
jp
into
and
push
mov
push
popa
es
add
sbb
fldlg2
mov
jp
popa
pop
rcrl
fnsave
lock
add
repnz
push
mov
test
add
loope
adcb
xor
in
outsl
ret
push
repnz
mov
int3
add
jbe,pt
cmp
add
jb
adc
adcl
push
stos
and
inc
add
adc
push
in
into
mov
icebp
imul
mov
lahf
mov
sahf
mov
push
ds
mov
push
mov
test
lock
mov
dec
outsb
jmp
into
or
inc
cmp
sbb
daa
inc
xchg
sbb
jb
gs
js
outsl
mov
pop
les
and
repz
jecxz
jecxz
sub
mov
adc
mov
add
mov
add
ds
sbb
fwait
xchg
mov
xchg
mov
in
pop
ljmp
bound
push
test
stos
sbb
js
ret
into
je
sbb
xchg
daa
jno
push
je
jo
enter
fwait
in
mov
and
xor
es
push
adc
inc
jle
pusha
lret
roll
ljmp
or
call
cmpsl
sbb
into
mov
xchg
repz
push
lcall
sbb
push
inc
jae
push
outsb
imul
sub
pop
push
mov
inc
cmp
lock
mov
and
sahf
push
xchg
stos
lds
cmpb
ret
mov
shll
mov
inc
jecxz
adc
loope
xor
mov
lock
push
pop
into
aad
cmc
in
test
popf
test
sbb
push
sbb
insb
jmp
sti
aaa
dec
pop
mov
ret
mov
cmp
pushf
rorb
clc
inc
pop
add
lret
pop
mov
fsubs
lock
fimuls
test
les
stos
loopne
dec
ret
mov
pop
rclb
xchg
sub
sub
pushf
dec
sbb
fwait
insb
pop
ja
dec
inc
mov
pop
cmpsb
sahf
or
sahf
pushf
lods
shrb
popf
jo
xor
pop
dec
fisttpl
mov
sbb
pop
sbb
rclb
cmp
movsb
aas
idivl
sbb
imul
dec
pop
pop
dec
or
inc
mov
enter
testb
enter
sub
sti
sbb
mov
mov
popa
mov
imul
xchg
push
mov
inc
test
cmp
test
ss
decb
add
cmp
lcall
mov
cmpsb
or
cmp
outsb
xchg
pop
mov
leave
les
jge
add
mov
jae
and
xchg
sbb
arpl
and
add
xor
subb
int3
popa
and
fsubr
cmp
movsl
dec
lret
xchg
sbb
push
icebp
out
xchg
data16
cmp
subl
add
push
mov
mov
pusha
test
cmp
lds
pop
movsl
xchg
dec
fnsave
jno
push
rcl
inc
jp
pushf
fwait
lea
cld
repz
push
pop
stc
loop
ljmp
bound
jnp
lret
and
pop
sub
test
sbb
mov
fisttpl
push
mov
xchg
aas
dec
outsl
jno
pop
stc
pop
lods
popf
fsubl
lret
arpl
gs
mov
mov
in
mov
inc
pusha
dec
stc
inc
js
xlat
xchg
inc
fdivrs
mov
aad
pop
movsb
dec
mov
dec
ds
fidivrl
lods
mov
pop
mov
inc
mov
dec
mov
fdivl
xlat
adc
sbb
int3
iret
sub
sbbb
pop
js
fsubs
xor
adc
or
out
mov
mov
jo
cmpl
cmc
jbe
paddw
rcrl
push
and
adc
test
movsb
aas
push
test
data16
xchg
insb
cmpsb
jecxz
cmpsl
fdivl
mov
cvtps2pi
add
test
mov
or
mov
push
mov
jne
dec
jno
data16
mov
push
pop
popf
sbb
xor
lods
into
and
in
sbb
adc
xlat
out
push
sbb
call
in
mov
add
mov
pop
es
cmpsl
pop
mov
call
cwtl
stc
int
sbb
jo
add
mov
sub
inc
mov
sub
les
cmp
adcl
pop
cwtl
std
enter
outsl
xlat
lret
incl
call
or
xchg
imul
addr16
mov
mov
dec
std
mov
cmpsb
mov
xchg
stos
in
loope
mov
adc
add
mov
hlt
sahf
roll
pop
cmp
mov
mov
jmp
mov
or
xlat
scas
loopne
movsl
pop
or
out
jmp
ret
iret
adc
push
test
movsb
mov
daa
adc
add
push
fdivr
mov
incb
mov
or
push
push
xor
xchg
jp
lock
ret
add
test
ret
mov
out
in
es
push
test
inc
dec
lds
and
push
cmp
fisttps
add
loopne
xchg
and
mov
push
mov
push
pop
hlt
iret
jg
out
sub
mov
inc
cwtl
cmc
pop
and
mov
ficoml
fmull
rorl
xor
mov
mov
movsl
mov
sahf
insl
jae
mov
dec
cltd
into
adc
test
pop
sarb
scas
shl
pop
xor
dec
xchg
fdivrs
lock
push
and
push
imul
call
inc
or
inc
ss
dec
or
leave
test
cwtl
xchg
cmp
roll
xor
mov
jne
rcrl
jae
fimuls
pop
scas
push
push
je
inc
push
pusha
xor
mov
mov
add
cmp
mov
fidivrs
fisubs
addr16
fsubr
loopne
xlat
test
loopne
pop
pushf
sub
push
mov
xchg
add
fistps
xor
mov
addr16
out
mov
movsl
out
arpl
push
cmp
push
imull
imul
dec
add
into
filds
ret
jno,pt
daa
add
mov
sar
decl
jmp
add
sub
adc
lock
mov
dec
movsb
or
mov
jae
loop
nop
push
dec
lret
mov
cmc
jle
fldl2t
mov
dec
ss
cmpsb
insl
cmpsl
jmp
pusha
daa
inc
idivb
pop
pop
sbb
xchg
inc
outsl
rolb
adc
and
mov
jp
lds
js
mov
movsl
dec
xchg
popf
jbe
mov
cltd
push
mov
lods
mov
xor
or
jbe
and
sti
mov
sbb
sbb
cmp
fisubs
adc
sti
pusha
ss
leave
mov
mov
add
xchg
jae
dec
pop
or
adc
inc
setge
push
sbb
push
sbb
lahf
aam
adc
inc
rcl
jmp
and
shrb
adc
pop
sbb
sub
outsb
mov
mov
fildl
in
mov
and
jmp
movsl
push
adc
and
aas
adc
cmc
mov
rcrb
add
orl
mov
loope
sbb
dec
sbb
jmp
jne
push
push
test
mov
push
sbb
mov
jmp
jecxz
push
or
dec
fs
adc
aas
xor
sbb
bound
pop
fwait
in
and
lahf
fs
fs
and
pop
adc
stc
lea
push
pop
or
aad
sbb
push
jbe
push
rcrl
fmuls
mov
add
push
sahf
pop
out
xchg
xchg
push
pushf
call
mov
repnz
sub
rclb
mov
das
pop
and
int
pop
insl
decb
sbb
bound
mov
xchg
sbb
andl
cmp
mov
xchg
imul
fwait
push
into
jbe
add
cli
addr16
inc
add
xor
outsl
iret
cmp
arpl
pop
inc
mov
xchg
mov
adc
test
jl
outsl
mov
loop
xor
test
cmpsb
popf
pop
andl
inc
mov
push
stos
movsb
sub
sbb
xchg
cwtl
mov
mov
push
mov
jle
scas
out
inc
push
inc
lahf
test
push
call
stos
pop
push
mov
insb
mov
into
test
sahf
inc
pop
mov
iret
mov
mov
dec
pushf
push
adc
jle
add
inc
cbtw
sub
lret
xchg
pop
mov
aas
aam
push
cmc
xchg
mov
stos
jno
add
ds
ret
mov
mov
dec
xchg
push
sub
push
emms
lea
cld
cmp
jno
test
push
lock
pop
popa
decb
std
and
inc
in
inc
pop
mov
push
adc
stc
adc
nop
scas
out
rolb
outsb
pusha
xchg
dec
push
nopl
notl
pop
pop
pop
xchg
gs
pop
mov
dec
push
dec
push
shrb
adc
inc
sub
xchg
pop
sub
pusha
push
cmp
jbe
or
pusha
jg
pop
adc
xor
sahf
popa
mov
mov
shll
outsb
push
arpl
sub
push
notl
ja
rorl
adcb
fcoml
adc
mov
jg
cs
inc
ds
or
mov
mov
neg
fsubs
fucomi
adc
add
ljmp
cmc
test
or
and
jno
into
incb
push
jne
push
dec
cmp
sub
xchg
pop
push
inc
pop
out
sti
loop
jae
clc
pop
xlat
call
pushf
stos
xchg
mov
xlat
lods
cmp
lods
les
cmp
fmull
les
rol
jmp
push
jge
jmp
dec
inc
cmpsl
cmp
xchg
divl
int
fbld
andl
add
fwait
mov
addr16
inc
icebp
xchg
push
push
fcoml
and
scas
aaa
adc
fwait
into
subl
jo
js
sarb
pushf
adc
push
in
push
testl
lock
data16
icebp
mov
inc
dec
xchg
jle
stos
and
loope
repz
jl
adc
je
rcrb
rcr
mov
dec
jnp
cld
jmp
mov
add
inc
adc
ss
insb
movsb
adc
mov
in
cmp
mov
pop
xchg
popf
out
fs
cltd
out
nop
mov
or
into
or
enter
pop
jns
xchg
push
mov
cmp
notl
rclb
out
xchg
nop
int
fsubr
stos
popa
je
cmp
icebp
repnz
outsb
mov
std
fucomip
jecxz
xlat
call
jle
daa
jnp
jle
jge
icebp
adc
sbb
xor
fwait
pop
pushf
pop
loop
cmp
das
xchg
push
dec
mov
jle
inc
jbe
andb
psllq
bound
or
sub
aaa
leave
sub
mov
adc
data16
sub
pop
sbb
push
cs
mov
outsl
sub
xchg
jno
and
aas
scas
ss
lods
fwait
repz
mov
fs
fistps
es
fnstenv
out
xor
and
stos
jle
rcrl
daa
adc
cmp
push
push
inc
xor
mov
or
ss
call
cmp
fdivrs
lahf
insb
add
rcrb
mov
popf
jo
fs
mov
data16
cld
dec
call
jge
fs
stos
imul
pop
enter
push
test
xor
popf
mov
and
vmptrld
les
jnp
outsl
leave
adc
xlat
inc
and
cld
out
sarl
repnz
aam
push
and
call
mov
ljmp
sbb
mov
mov
cmp
ja
call
xor
cwtl
adc
les
in
mov
inc
cli
fdivl
sbb
mov
fwait
ret
loopne
jge
rcll
stc
lods
addr16
add
fistl
xchg
mov
js
insb
push
shl
and
fimuls
and
sub
push
xorb
hlt
fidivs
es
jno
add
and
adc
mov
xchg
shlb
sti
or
decb
xor
adc
movsb
popa
inc
push
push
mov
xchg
adc
sub
popf
mov
cmp
cmp
outsl
xchg
mov
push
jb
mov
daa
mov
mov
das
pop
test
repz
lods
call
push
daa
stos
jg
dec
xchg
mov
cli
push
add
push
aaa
pop
pop
mov
scas
lret
lds
out
mov
fcom
ja
int3
ret
mov
repnz
fbld
ljmp
fnstenv
sub
mov
sub
push
mov
shll
mov
cmp
add
lcall
dec
mov
mov
aas
dec
nop
hlt
jecxz
jne
dec
fldcw
ds
or
fwait
xchg
aam
mov
shl
popf
scas
insl
mov
pop
iret
xor
sbb
ljmp
adc
xchg
add
sbb
testb
lock
out
shr
loope
cmp
enter
dec
call
mov
lret
mov
enter
les
leave
cmp
je
scas
xchg
out
pop
loope
jnp
aad
mov
push
out
dec
out
lahf
pop
and
fbstp
jle
movsb
mov
insb
in
repnz
mov
jbe
xor
xchg
or
mov
cs
incb
mov
fcomps
and
ljmp
mov
jbe
call
inc
xchg
add
jmp
mov
sub
inc
shl
jae
xor
pushf
push
ficoms
xchg
ja
loopne
xorb
mov
mov
aam
push
xchg
jnp
nop
mov
inc
xchg
in
outsb
push
dec
test
loopne
insl
sbb
cmp
add
int3
pop
pop
jo
scas
popf
lcall
mov
mov
outsb
sub
aam
inc
mov
sar
xor
jo
push
gs
mov
test
enter
xchg
outsb
dec
in
sbb
cli
xchg
out
add
out
pop
mov
lock
xchg
nop
sub
ds
clc
mov
stc
mov
dec
push
lock
xor
in
add
dec
in
add
lock
ja
inc
push
cmpsb
lods
in
in
dec
cmpsb
dec
xchg
xor
loop
ss
mov
jmp
cmpsl
xchg
fmull
mov
add
inc
xor
fistpll
jno
mov
aam
movl
out
sbb
mov
and
xchg
call
jb
ljmp
bound
ss
jo
bound
pop
and
fdivrl
adc
inc
pushf
sar
cmpsl
bound
mov
cmpl
aam
mov
inc
stc
popa
sub
push
jb
in
fistpll
and
les
inc
mov
sub
push
adc
fdivrl
fcmovnu
nop
xchg
add
inc
pop
lret
ret
leave
pop
gs
xor
rcll
pop
test
mov
or
jle
cmpsb
jbe
lret
sarb
ljmp
repz
test
xchg
cwtl
movsl
xchg
jae
sub
test
inc
cmp
add
cmp
rorl
jo
divb
sub
popf
dec
pop
das
and
daa
inc
jae
lcall
sti
leave
mov
fcmove
mov
or
jp
add
lea
jp
stos
dec
clc
and
negb
jne
xor
sub
adc
push
sbb
int
loope
cld
push
push
sub
cmp
dec
ljmp
dec
test
adc
test
repnz
mov
cmp
mov
xor
pusha
out
and
fwait
cwtl
aaa
mov
jle
cwtl
pop
mov
aaa
sbb
out
pop
sub
xor
aaa
mov
adc
cmp
inc
pusha
cld
cli
dec
in
adc
push
add
push
xlat
lods
mov
inc
cmp
cld
in
xchg
js
and
xchg
mov
leave
xor
imul
jno
inc
mov
pop
jnp
cmp
sub
mov
hlt
inc
lds
cs
mov
sub
mov
pop
mov
xchg
in
mov
out
aas
call
cmp
fcomps
ljmp
sbb
fstps
pop
sarb
mov
in
push
popf
xor
ljmp
jmp
stos
aas
leave
xor
call
jge
aam
and
cmpsl
cmc
shrl
mov
adc
add
push
and
inc
push
sbb
cli
mov
add
ret
pop
repz
data16
pop
push
and
popa
mulb
outsl
in
lcall
xor
ss
rorl
dec
xor
push
or
rcrb
addl
mov
aas
add
or
pop
adc
dec
inc
mov
xor
push
or
fldt
sbb
jo
adc
xchg
nop
xchg
and
or
ror
dec
jbe
cmpsl
movsb
and
xor
cmp
mov
enterw
testb
mov
adc
jns
in
pop
pop
movsb
sbb
push
inc
dec
mov
or
shrb
inc
jbe
ficompl
add
hlt
hlt
mov
jno
sarl
jge
push
outsb
cld
adc
sti
cmpl
dec
pop
push
arpl
ljmp
enter
cmpsl
pop
loope
rorl
mov
mov
leave
add
fcompl
mov
scas
shlb
dec
hlt
mov
aam
jp
mull
pop
jno
das
jmp
aaa
xchg
pop
cmpsl
jle
loop
addl
cmp
cld
or
sbb
pop
mov
lods
dec
ds
jge
mov
js
aam
int
sub
popf
nop
push
clc
in
mov
ds
xor
mov
xchg
lret
and
sub
ja
push
mov
xchg
rorl
fistpll
imul
cmpsb
cmp
aas
sbb
jmp
stos
and
out
rol
sub
or
mov
outsl
repz
xchg
cmp
jbe
ret
sbb
mov
ja
lds
jge
test
cmp
or
or
mov
ret
outsl
loopne
dec
mov
or
cmp
mov
xor
inc
pop
fs
xchg
adc
xchg
mov
and
aam
orl
std
mov
jp
adc
inc
clc
adc
jnp
fcomps
stc
and
cmpsb
ficompl
add
sbb
test
mov
mov
scas
push
fidivrl
mov
pop
js
leave
mov
sti
fdivrp
cld
sbb
add
push
scas
addr16
sub
or
mov
std
cmpsb
gs
xchg
dec
push
add
and
jae
sarl
fs
pop
in
dec
sbb
imul
hlt
mov
add
les
stc
js
mov
mov
pop
push
mov
mul
imul
mov
cld
push
cmp
in
popa
sbb
lret
mov
xchg
cltd
push
mov
mov
push
mov
xchg
out
aas
out
fmuls
es
adc
xor
sbb
mov
stos
mov
mov
popf
popa
adc
xchg
int
fsubl
inc
fwait
fwait
pop
adc
icebp
dec
mov
cmpsb
nop
dec
movl
sbb
jmp
xor
clc
out
movsb
mov
pop
inc
xor
enter
mov
daa
cmp
jbe
pop
mov
imul
xchg
push
mov
mov
pop
cwtl
loope
dec
sub
jmp
and
movsl
mov
add
pop
sub
incb
jnp
cmpsl
lret
das
ret
and
push
cld
push
push
or
mov
repz
pop
and
fistl
cmp
lret
pop
mov
rcr
push
jns
mov
jb
inc
xor
out
or
pop
mov
mov
and
push
mov
dec
push
adc
and
push
xchg
push
stos
push
rclb
pop
ret
dec
mov
test
scas
ljmp
mov
in
mov
dec
imul
fimull
int
and
push
loope
dec
pop
ja
jne
jp
repnz
or
cltd
mov
out
and
lods
inc
mov
sbb
jne
nop
aas
mov
je
ss
mov
inc
outsb
ss
dec
cmp
and
fcoml
push
adc
add
mov
cwtl
xor
jle
lods
add
rcrl
add
jge
pop
lods
inc
dec
call
xchg
fnstcw
scas
pop
xor
pop
mov
xchg
pop
fcompl
jae
lock
in
cmp
jns
mov
out
jg
and
imul
outsl
xchg
cmc
and
fisubs
rcrb
sarb
mov
mov
out
sbb
or
push
cli
jg
ret
jo
ljmp
pop
pop
mov
or
test
jns
jbe
xor
das
pop
add
adc
xchg
jno
dec
mov
mov
dec
ljmp
push
or
add
lea
insb
mov
subl
cmpsl
aam
xor
lgs
mov
call
mov
mov
add
imul
push
inc
cli
jp
loopne
mov
xchg
lods
xor
fnsave
out
dec
cld
mov
mov
jecxz
mov
mov
cmp
mov
xchg
movsb
in
inc
mov
mov
push
lea
scas
jbe
movsl
pop
loope
push
mov
pop
sub
sub
sub
lock
jnp
adc
imul
lret
adc
shll
mov
jns
in
mov
add
pusha
sbb
add
pop
addr16
aas
cltd
test
add
pusha
xchg
mov
jecxz
inc
adc
dec
jae
mov
or
das
mov
andl
clc
test
push
xchg
mov
icebp
push
out
pop
xchg
je
fcoml
and
das
push
fwait
leave
sti
sarb
pop
bound
out
xchg
ud0
pop
idivb
outsb
mov
push
lahf
dec
inc
cmp
or
out
push
out
pop
jp
arpl
addb
repz
or
scas
push
dec
and
mov
pop
push
cmpsl
rorb
and
push
test
push
idiv
inc
xchg
imul
das
inc
popa
xchg
pusha
push
mov
mov
imul
dec
or
sbb
xlat
out
popa
scas
lods
jno
int3
add
pushf
sub
rcrl
fidivl
mov
push
pushf
lods
push
loopne
outsl
loop
in
jp
fsubrs
xor
mov
out
mov
in
sbb
add
int
cltd
jecxz
or
jp
ja
cwtl
lret
sub
lock
cmpsl
sbb
popa
shlb
mov
fwait
mov
inc
pop
sbb
test
cmp
pop
cli
cmpsb
fbstp
jmp
mov
in
pop
and
sub
lea
dec
sbb
jecxz
lret
jg
jp
sub
add
popf
daa
add
jg
jl
ja
cmp
imul
jmp
dec
mov
imul
test
js
rclb
inc
pop
inc
int3
js
add
and
orb
js
pop
sbb
scas
andl
into
adc
jo
jl
sti
in
cmpsb
cld
or
cmp
sub
notb
mov
push
popf
enter
ror
bound
inc
xor
jg
or
mov
sub
cmp
adc
jns
faddl
dec
lock
or
cmpsl
pop
rolb
adc
cmp
scas
jnp
pop
test
sbb
pop
mov
orb
cmpsb
mov
mov
shll
cli
outsl
scas
add
push
repnz
push
repz
fiaddl
xchg
sub
lock
push
and
dec
jns
loopne
add
imul
jmp
sub
xchg
inc
ret
mov
cmp
push
fimull
and
fists
negb
es
mov
leave
daa
out
icebp
or
icebp
mov
popa
or
ja
or
rorb
hlt
pop
jns
sbb
arpl
pop
sub
mov
mov
jle
jge
inc
mov
iret
xor
jo
mov
push
fmul
inc
data16
jg
and
test
adc
sbb
jl
or
movsl
mov
pop
add
in
xchg
or
pop
push
xor
mov
fistps
mov
adc
cmp
stc
sub
outsb
sub
sar
shrl
and
call
push
add
dec
lahf
pop
or
in
call
push
ljmp
scas
negb
add
insl
ficoml
fwait
xor
inc
mov
mov
mov
stc
jno
mov
jle
inc
mov
pop
addb
mov
ja
fldl
sub
xor
sbb
cmp
and
xor
test
out
jne
or
mov
sbbb
fnstenv
pop
or
fcmovbe
mov
pop
push
popf
sub
leave
orb
fcom
iret
out
inc
push
and
out
or
mov
scas
cmpsb
scas
xor
inc
data16
shlb
clc
cmp
jno
addr16
cmc
jne
insb
sbb
aaa
fwait
lock
data16
cmp
cmp
or
mov
out
mulb
jno
aas
les
les
xor
jo
fwait
mov
ds
lods
hlt
in
or
nop
pop
and
sbb
out
aad
cmp
or
stc
hlt
loop
or
jnp
mov
push
sahf
inc
mov
ds
clc
mov
mov
pop
cli
add
repnz
push
jle
in
outsl
cmp
and
pop
jmp
push
jns
arpl
xchg
test
push
inc
stos
and
sbb
gs
adc
rcr
arpl
mov
fwait
add
pop
jne
outsb
dec
test
jae
movsb
shll
movsb
adc
sbb
test
jp
ds
hlt
push
mov
cmpl
imul
jo
fnsave
loope
fmuls
mulb
dec
push
jg
imul
out
dec
jns
xor
jnp
pop
les
add
xor
cs
or
and
mov
cs
lds
pop
jmp
cmp
nop
fnstcw
sahf
dec
jns
xlat
mov
jo
mov
mov
cs
in
sub
mov
test
into
cmp
pop
and
mov
dec
or
jge
mov
add
push
push
and
pop
cmp
jae
scas
push
in
lahf
mov
cs
mov
jne
cmp
lcall
sub
pushf
lcall
sub
inc
dec
pop
add
neg
cmp
adc
inc
sub
jp
jl
test
int
xchg
adc
cltd
push
stc
push
loopne
cmpsl
cmp
and
cs
nop
in
ficompl
sbb
addl
std
pop
sub
movsl
mov
gs
sub
in
pop
inc
jnp
fdivrs
sbb
inc
inc
fstpt
dec
pop
mov
mov
push
sub
inc
pop
adc
popf
imul
dec
pusha
fldenv
loopne
add
push
shlb
iret
mov
lods
dec
popa
fisttpll
loope
mov
iret
hlt
mov
sahf
aam
aaa
dec
jge
xchg
insb
stos
sub
mov
mov
dec
mov
mov
mov
push
aas
push
mov
sbb
jl
mov
lea
mov
inc
scas
mov
mov
sbb
adc
fbld
enter
mov
pop
mov
call
dec
xchg
jno
push
sub
jecxz
push
dec
mov
push
addb
adc
pop
fwait
push
or
sbb
mov
bound
lret
test
aaa
data16
lods
ja
pop
push
push
xor
dec
flds
push
adc
cmp
mov
sbb
popf
mov
add
xchg
cli
test
mov
xchg
ljmp
pop
loopne
enter
dec
cmp
fistps
fcompl
daa
testb
sbb
fnstenv
cmp
xor
enter
and
or
push
pop
lds
and
dec
jo
xor
test
jmp
or
mov
xor
ficomps
and
add
and
shr
mov
pop
jns
xchg
cmpsl
sbb
add
pop
mov
fisubs
dec
adc
call
in
xchg
dec
jne
enter
inc
jecxz
daa
popa
mov
sbb
inc
mov
scas
fstl
pop
leave
test
adc
pop
cli
stos
and
add
divb
adc
or
rcll
lcall
daa
or
jecxz
hlt
inc
scas
push
xchg
cmp
mov
mov
cltd
sbb
jb
push
and
mov
lods
fstps
lds
add
aaa
cmp
sti
add
andb
testb
ds
add
mov
ss
jo
popf
pop
push
lock
xchg
mov
mov
push
xor
pop
in
and
test
enter
je
stos
sub
lock
inc
jbe
adc
jecxz
cmpsl
sub
or
push
mov
es
out
jmp
int3
das
pusha
lret
loopne
test
pop
xchg
ss
dec
popf
scas
adc
outsb
jo
adc
loop
dec
cmp
out
cmpsl
scas
mov
push
aaa
addl
cmp
imul
push
movsb
push
sbb
es
push
sub
insl
mov
fst
sub
mov
and
pop
or
xor
jns
imul
push
or
lea
sub
lea
lods
loopne
pushf
cltd
outsl
mov
or
popa
dec
push
aad
jo
cld
mov
sub
pop
cltd
es
mov
in
outsb
repnz
repnz
data16
dec
jns
repnz
stos
stc
adc
sbb
cltd
shll
inc
dec
mov
xor
pop
es
adc
int3
mov
insb
call
mov
xor
movsb
fbstp
dec
or
movl
mov
arpl
aaa
jecxz
mov
aad
add
stos
xor
or
pushf
mov
std
lds
push
andb
xchg
mov
xor
mov
mov
push
icebp
outsb
or
test
aas
sbb
repnz
movsl
cmp
or
sub
jg
cmp
adc
subb
pop
mov
ret
movsl
dec
xor
cwtl
repnz
ficoml
aaa
xlat
std
xchg
or
xchg
imul
subl
popf
push
out
and
stos
inc
pop
jl
add
sbbl
outsb
out
jmp
and
add
fsubrs
adc
aam
jae
mov
xchg
dec
xchg
xor
xchg
loopne
sti
adc
push
data16
imul
xchg
dec
repz
cmpsb
pop
xor
xlat
scas
and
pop
mov
and
rcrb
cwtl
and
sub
jae
shlb
or
aaa
add
cld
sub
es
orb
mov
orb
lret
xchg
and
popa
pop
jge
xchg
jo
call
jmp
dec
inc
jl
out
outsb
pushl
or
push
leave
push
mov
push
stos
gs
push
mov
push
into
sub
adcl
test
dec
mov
in
enter
mov
pop
inc
mov
iret
pop
adc
into
in
mov
cli
add
aad
std
popl
stos
mov
pop
jo
xchg
jns
sbb
dec
mov
jg
mov
incb
mov
and
cltd
xor
sub
fs
mov
cmp
jns
xchg
sbb
adc
and
fimull
sbb
xchg
rcrl
scas
mov
sub
imul
sub
add
adc
dec
cmpl
movsb
inc
mov
xchg
data16
jbe
mov
jno
or
adc
push
cmp
or
stos
js
sti
cmp
push
mov
movsb
ret
or
xlat
mov
mov
lock
xchg
in
pop
add
aas
cmp
lea
movsb
ljmp
pushf
loopne
pop
inc
dec
nop
cmp
sub
hlt
cmp
or
mov
inc
xchg
add
fisubrs
jns
pop
cmp
mov
bound
sbbb
shlb
and
add
nop
adc
add
lock
jle
push
jp
cmp
lret
push
push
leave
ja
push
jmp
outsl
mov
add
cmp
mov
addr16
and
jl
ror
dec
cmp
lret
repnz
cmc
push
add
stos
movsl
sub
fdivrs
pop
sahf
pusha
jne
call
int
test
push
jno
loopne
jle
sbb
sub
and
cmc
xchg
xor
fucomi
out
jp
fcmovnbe
fdivrl
popf
ret
add
pop
sahf
imul
jl
adc
xchg
sub
inc
dec
jle
dec
leave
xchg
enter
jmp
imul
cld
iret
mov
or
out
ret
jge
inc
or
out
aam
fsubl
or
sub
je
adc
push
insb
sbb
ret
sbb
sbb
or
ds
stos
fstp
xor
in
in
or
add
xchg
pusha
xchg
xchg
adc
sub
add
xlat
jb
jne
adc
addr16
pop
add
fnstsw
test
les
test
xchg
ror
test
aaa
scas
xor
adc
hlt
hlt
scas
adc
and
scas
out
fistpll
inc
rcrb
push
fdivrl
pusha
mov
call
mov
sbb
cmp
mov
xchg
xor
int3
les
arpl
xchg
cwtl
or
xor
pop
int
adc
cld
mov
push
sub
jle
dec
or
in
push
pop
call
dec
and
mov
jbe
push
int3
cmp
mov
mov
sbb
xor
add
mov
xor
aam
xlat
cmpsb
and
xlat
dec
sti
lahf
pop
sub
adc
xor
test
imul
subb
inc
repnz
mov
loopne
xchg
decl
jnp
lcall
cmpsl
jae
push
mov
mov
cltd
fnstenv
lods
inc
sbb
add
popf
sti
adc
jns
out
adc
add
dec
push
out
jb
addl
xchg
out
test
jnp
xchg
jae
addl
test
and
addb
or
hlt
jno
jno
lret
clc
cli
pop
and
fdivl
les
mov
int3
sbb
movsb
add
mov
iret
aam
out
push
insb
or
mov
int3
push
imul
dec
mov
je
mov
adc
iret
ret
mov
xchg
jo
repnz
ss
loope
adc
enter
or
jge
mov
inc
mov
cs
cmpsb
cs
in
sub
out
into
mov
loop
jnp
cmp
loop,pn
mov
jp
outsl
ds
insl
sub
sub
cmpl
and
lods
pop
dec
or
fmul
xor
mov
arpl
negl
adc
pop
pop
mov
dec
ret
adc
aaa
cmp
inc
cmpsl
add
roll
jb
loopne
push
test
jo
fcoms
push
or
inc
sbb
std
xchg
aaa
out
mov
inc
and
jnp
jnp
fsubs
aaa
add
data16
fcoml
movsl
jae
sbb
push
push
icebp
xor
sub
adc
pop
mov
adc
pop
clc
adc
adc
dec
cmp
pusha
fisttpll
jge
adc
sahf
xchg
fcmovu
cli
xor
cmpsb
jnp
popf
pop
sbb
les
repz
aam
add
fs
repnz
jo
dec
int
lahf
jg
mov
cltd
repz
aaa
movl
insb
cmp
sbb
popf
lods
and
xchg
test
aaa
sbbl
inc
mov
jmp
jmp
sbb
xor
sub
cmpsb
sub
dec
dec
lea
push
fst
push
mov
mov
mov
push
leave
popf
dec
inc
aaa
bound
and
sub
loop
testb
data16
out
cmp
sub
scas
add
out
fcoms
push
pop
leave
inc
mov
fdivrl
jae
dec
sub
call
and
int
arpl
or
lea
dec
popa
pop
fdivrs
cmovne
and
ss
addb
daa
fldcw
pushf
mov
or
sub
and
xchg
enter
sub
retw
loope
xchg
and
sbb
jo
push
or
orb
out
repz
adc
cmp
enter
lea
inc
xchg
sub
dec
int3
mov
mov
movsl
or
ret
sub
outsb
mov
jmp
ffreep
and
push
cli
inc
ljmp
jl
lahf
or
scas
filds
das
adc
enter
mov
xor
hlt
xor
jne
shlb
jle
icebp
shrb
js
popfw
inc
in
lods
mov
sbb
es
cmp
push
clc
inc
subb
in
test
or
sbb
mov
xchg
mov
adc
sub
pop
jns
adc
mov
ss
mov
imulb
out
flds
mov
jmp
or
dec
fs
rcrl
xchg
ret
ficoml
sbb
jp
and
int
sti
sbb
pushf
dec
lods
xchg
push
out
or
cld
stc
xchg
xorl
jns
pusha
mov
cmpsb
or
ja
xor
ss
add
xchg
xchg
shl
xchg
fisttpll
imul
popf
sarl
mov
aam
test
jns
mov
call
jne
rol
xor
rolb
xorb
mov
mov
lock
mov
xor
rorl
adc
mov
inc
add
sub
aaa
cli
int3
cmp
jns
sbb
nop
add
or
pop
pusha
ja
stos
inc
xor
sub
pop
das
xlat
sub
jl
loopne
or
fistl
mov
push
inc
dec
jl
and
ret
ljmp
dec
jl
or
loop
stos
add
popa
mov
in
movsb
mov
mov
scas
clts
push
popf
test
call
xor
loope
push
mov
js
sbb
push
add
loopne
mov
jmp
repnz
push
orb
adc
ljmp
nop
stc
xor
testl
xchg
xor
lret
xchg
fwait
pop
inc
in
mov
or
or
dec
inc
or
inc
or
scas
popf
out
sbb
sub
dec
or
into
ds
mov
fucomi
aam
fidivl
cld
shr
add
lcall
fwait
popf
fdivs
scas
mov
add
lret
sbb
xchg
cmp
inc
sahf
fisubrl
movsl
jae
jmp
add
hlt
add
pop
stos
dec
mov
mov
les
push
add
idivl
cmpsl
cmp
add
inc
push
cltd
hlt
mov
xchg
xor
dec
add
jne
mov
sub
std
dec
out
repz
lods
fcompl
push
rcrb
cmc
pop
xchg
enter
sbb
pop
pop
push
pusha
adc
mov
inc
test
sbb
add
or
cmp
xlat
xchg
push
sub
dec
push
xchg
push
mov
bound
popa
aas
mov
sahf
icebp
adc
sub
call
cmp
arpl
jl
xor
ror
and
cwtl
jno
and
xchg
cmc
cmc
rcrl
lret
mov
cmp
aas
cmc
jo
and
loope
or
lock
lods
hlt
imul
rorb
sub
and
fwait
and
jbe
lret
mov
sub
sti
in
outsb
cld
sarl
sub
popf
sub
xchg
out
push
movb
bound
lea
mov
sbbl
jbe
lods
cmp
xor
mov
lcall
inc
insb
push
push
insb
cmp
mov
jg
mov
push
jecxz
out
das
push
push
xchg
xor
cltd
xchg
scas
adc
sbb
pop
mov
lret
scas
push
stos
xor
push
test
cmp
jne
ret
cmp
sub
and
loop
push
xchg
dec
dec
jbe
pop
push
cmc
rorl
mov
orb
xlat
mov
je
fnsave
adc
fsubrs
push
pop
or
mov
inc
sbbb
push
les
cmp
stos
adc
mov
mov
lahf
test
hlt
xchg
out
iret
or
movsl
out
sub
mov
testl
in
mov
dec
adc
popa
or
mov
sbb
js
inc
cs
iret
scas
push
mov
mov
xor
and
loop
lods
pop
fistpll
scas
adc
push
scas
andl
fucomi
pop
jmp
or
mov
mov
xchg
popa
fmul
mov
xchg
add
int3
outsb
fucomi
fisttpll
cmpsl
insb
inc
repnz
in
lahf
inc
inc
sub
pop
jns
lahf
leave
xor
mov
filds
push
cmp
fneni(8087
jbe
icebp
es
loop
iret
jnp
testl
fsubs
stos
and
call
cmp
mov
addr16
mov
xor
mov
mov
cmp
idivl
jmp
test
lds
fisubl
xchg
mov
and
pop
int3
mov
int
mov
repz
xlat
lods
mov
inc
adc
cmc
int3
jmp
into
xchg
adc
enter
loopne
jnp
les
stc
scas
inc
cmovns
mov
and
xchg
and
mov
jl
push
dec
sub
xchg
mov
popa
mov
jp
jns
out
mov
or
mov
jbe
or
mov
push
test
mov
cli
adc
fnsave
cmp
adc
mov
adc
int3
mov
mov
sbb
xchg
or
repnz
add
and
xor
dec
push
out
xchg
jo
mov
sub
mov
aad
nop
stos
enter
inc
xor
js
add
faddl
test
push
mov
fcmovnu
imul
xor
int3
pop
dec
jle
or
or
pop
jnp
mov
lcall
sbb
push
fisubrl
outsl
xchg
inc
sub
push
push
jge
xchg
xchg
lods
inc
cmp
push
mov
pushf
loopne
mov
enter
cmp
sbb
lret
nop
xchg
mov
adcl
mov
mov
mov
xchg
sub
mov
stos
push
xor
xor
xchg
mov
xor
jae
cli
sub
pushf
aam
dec
jle
pop
push
xchg
fdivs
fldln2
lods
xor
and
xchg
adc
jle
test
pop
sahf
fists
cmp
in
pop
dec
mov
sti
xchg
mov
mov
cli
js
sub
mov
outsb
loope
sbb
jg
jmp
mov
jbe
xor
movsl
dec
mov
add
and
hlt
xchg
fsubr
push
movsb
addb
xor
jne
cltd
arpl
pop
outsb
push
ret
ljmp
test
cmp
jo
outsl
xchg
xchg
mov
add
add
add
or
push
loope
xchg
in
add
lret
in
fstl
mov
add
test
mov
gs
and
out
xor
sti
movsl
out
test
call
pop
sbb
lods
pop
ljmp
push
lods
mov
in
decl
push
mov
sub
pop
add
adc
xor
jnp
mov
pop
cmp
lods
jle
or
mov
aam
out
mov
lea
cmpsb
mov
push
pop
lcall
cmp
ss
xor
ret
lret
mov
cs
dec
nop
adc
rcl
loope
negb
add
pop
out
lods
sbb
lock
cwtl
sub
fists
popa
adc
jbe
push
jl
jno
daa
jo
cmp
jge
jo
inc
sub
imul
rcl
movl
dec
inc
sbb
dec
mov
add
rorb
jecxz
leave
rcl
mov
push
jge
xlat
adc
push
data16
mov
push
cmp
ret
jl
ljmp
mov
mov
cwtl
pop
cmpsl
mov
inc
lahf
and
or
sbb
jae
mov
nop
lds
mov
fldcw
jecxz
sub
xor
sub
loopne
or
fsubrs
sub
ret
jmp
cmp
push
and
lds
test
jp
inc
lret
gs
stc
add
xchg
push
test
mov
dec
sub
aam
lea
outsl
aas
test
mov
xchg
sti
mov
push
aaa
scas
add
dec
jecxz
ss
mov
aas
roll
notl
js
sub
test
cmp
and
xchg
je,pn
sti
mov
lds
adc
cmp
cmp
or
xor
in
push
inc
push
adc
sbbl
inc
add
mov
inc
jl
or
jno
or
mov
jmp
or
lahf
lret
add
cmp
shlb
popa
sub
xchg
orl
nop
stos
push
cmp
cmp
or
je
mov
test
mov
mov
jle
mov
jmp
or
push
movsl
dec
xor
inc
or
sub
or
adcb
inc
cmpsl
cli
in
jl
loopne
jg
adc
pop
add
incb
xchg
sbb
fistps
pop
lret
pop
push
repz
xchg
jns
es
jo
pop
arpl
jge
aad
push
testl
nop
sbb
mov
fwait
push
add
xor
loop
cli
mov
dec
pop
fbstp
push
cs
cld
insb
and
call
pop
and
dec
inc
jecxz
addb
jmp
mov
inc
dec
mov
jecxz
xchg
fists
add
fwait
decl
js
lods
push
mov
fnstenv
sub
imul
pusha
push
inc
pop
ja
xchg
pop
adc
std
mov
sahf
lret
popa
fwait
mov
sbb
adc
movsl
cli
pop
lret
push
je
and
call
add
pop
rorl
push
cltd
mov
shrb
insb
shrb
ds
xchg
scas
mov
lods
mov
sub
jo
push
lea
jg
or
popa
mov
mov
xor
push
mov
mov
lcall
ja
movb
mov
mov
and
jle
outsl
sbb
leave
jnp
jbe
rcrl
test
scas
mov
and
sbb
cmp
and
addb
push
scas
mov
fs
lret
cmp
mov
mov
mov
out
push
ret
inc
push
inc
bound
mov
fisttpl
adc
je
mov
mov
daa
arpl
fwait
jns
incb
lods
mov
mov
inc
subl
dec
jl
scas
scas
jl
jmp
fisttpll
arpl
push
sbb
sub
pop
aam
sub
dec
push
sti
add
out
xor
dec
jp
lahf
mov
jecxz
out
or
test
xchg
or
push
call
adc
loope
mov
popf
xor
mov
popf
xchg
les
lods
pop
rorl
rep
rorl
lock
imul
mov
daa
test
inc
xchg
dec
call
mov
hlt
jno
movsb
sbb
xchg
bound
jns
rorb
lock
and
insb
stos
int
jo
ss
jle
adc
cli
sbb
lahf
adc
and
lret
repz
pop
shll
push
pop
xchg
xchg
notb
xchg
or
aas
jle
xchg
jmp
jle
inc
jae
inc
fistl
inc
mov
hlt
les
popw
loope
push
pop
jne
mov
psubsb
rorb
sar
sbb
cwtl
lret
pinsrw
jns
xchg
xchg
mov
aas
out
out
mov
jecxz
lea
imull
mov
or
pop
pop
ljmp
add
jns
mov
jb
leave
test
loop
push
cmpsb
in
sub
cmpsb
inc
or
and
pop
call
in
ret
mov
mov
push
testl
decb
lea
adc
add
test
ljmp
or
std
testl
dec
fwait
test
jmp
and
mov
hlt
sub
mov
add
ss
dec
xchg
lock
int3
sbbl
jmp
pop
push
leave
jge
cmpsb
mov
lds
mov
fucom
dec
jo
mov
je
call
adc
loope
sbb
xchg
dec
mov
push
iret
jae
mov
cmpsb
aaa
and
in
xchg
mov
pop
imul
addr16
out
sbb
xchg
sub
mov
in
scas
cwtl
push
adc
shl
push
repnz
sar
and
dec
loopne
sbb
sbb
jl
jae
rorl
jno
ret
sbb
inc
cs
clc
mov
rcrl
jecxz
pop
inc
adc
xor
mov
or
data16
nop
lds
mov
add
cmp
ror
outsb
sub
mov
push
aas
inc
repnz
es
cmp
pop
mov
sub
or
sahf
iret
insb
inc
push
dec
fucomip
xor
loop
popf
or
or
and
add
js
push
ss
push
cld
sub
pop
enter
jbe
cltd
mov
mov
cli
xchg
pop
xlat
or
movsl
cmp
xchg
test
hlt
and
xlat
cli
or
mov
sbbb
mov
xorb
push
paddusw
fcmovb
adc
cli
mov
out
mov
push
mov
xchg
xchg
fdivr
lret
aas
mov
xor
mov
insb
data16
mov
int3
mov
sbb
mov
in
rolb
jl
jg
loope
das
ja
scas
cmpsl
push
lock
mov
adc
in
cmp
out
sbbb
pop
xchg
sbb
push
pushf
bound
xchg
iret
jl
cmp
fistpl
jl
push
nop
mov
mov
and
fimuls
fadd
dec
scas
push
mov
adc
pop
daa
insl
call
push
push
add
push
or
xchg
jmp
pop
jl
imul
push
lahf
popf
pop
inc
leave
pop
dec
cmpl
cmp
xor
test
and
pop
sbb
bound
and
jae
sub
jnp
lods
mov
test
mov
or
out
pop
aad
ljmp
push
bnd
js
test
arpl
ficomps
and
orl
shrl
fnsave
repz
mov
xlat
rcrb
xchg
push
xchg
divl
aad
js
and
sub
int
dec
push
inc
ret
and
mov
xchg
test
xchg
jne
lds
jmp
sub
stc
scas
sbb
fistpll
adc
mov
cmc
pop
outsl
test
pop
jmp
mov
push
dec
scas
xchg
insb
ja
dec
add
push
cld
sub
sub
imul
arpl
and
cmp
adc
lds
fcomps
scas
pop
sub
nop
xlat
jl
ret
lcall
scas
push
cmp
mov
or
in
stc
in
or
sbb
lock
cli
sbb
push
sub
push
jnp
cltd
dec
or
aad
adcb
pop
cltd
mov
icebp
pop
fcmovb
jmp
push
mov
stos
rcrl
adc
fists
inc
pop
ljmp
ss
movb
mov
in
fistpl
sti
mov
movsl
add
sub
cltd
aas
sbb
and
pop
into
dec
or
enter
xchg
xor
lcall
jb
gs
push
jne
lret
sti
xchg
lods
insl
hlt
mov
arpl
popf
mov
pusha
dec
push
adc
call
pop
push
add
push
pusha
pop
inc
inc
xlat
sub
push
xchg
xchg
test
push
pop
push
call
push
push
mov
lcall
cmpsl
es
jecxz
xchg
outsl
mov
int
xor
sahf
and
ljmp
jae
sub
mov
std
pushf
xchg
xchg
mov
xchg
rcrl
cltd
dec
pop
out
leave
les
xor
jl
dec
inc
or
in
mov
sub
push
idivl
enter
ja
icebp
pop
mov
movsb
push
clc
roll
mov
push
sub
sbb
sbb
xlat
adc
sbb
rolb
dec
aad
xchg
jle
xchg
test
arpl
sub
or
dec
mov
adc
mov
jns
je
insb
gs
aam
jo
outsl
xchg
jb
inc
and
dec
sbb
mov
dec
xor
ffree
subb
leave
add
or
aam
pop
iret
incl
addr16
sbb
cltd
dec
mov
inc
mov
orb
sbb
sub
es
push
add
out
test
xor
jge
fcoml
loope
push
addr16
dec
dec
repz
sub
fcoml
inc
inc
insb
push
push
jecxz
jns
inc
loopne
dec
mov
jecxz
mov
fs
enter
nop
fs
jae
pop
dec
push
jno
es
dec
test
outsb
divb
adc
sarb
adc
mov
mov
stc
inc
loopne
cmpsl
roll
or
arpl
inc
sbb
and
push
pop
in
adc
sub
imul
inc
mov
mov
cmp
mov
lods
daa
rorb
in
push
loopne,pt
xchg
int3
jo
out
pop
sbb
sbb
dec
das
pop
sbb
mov
lock
outsl
out
xchg
stc
and
mov
cmp
ljmp
popa
mov
fadds
mov
mov
push
icebp
inc
lahf
jnp
add
aaa
fimull
int3
and
mov
test
lcall
iret
inc
inc
inc
add
jno
or
sub
inc
mov
ljmp
fidivrs
dec
pcmpeqw
mov
adc
jl
xchg
lret
imul
cmc
pop
hlt
mov
mov
cmp
xchg
ja
lret
nop
mov
insl
add
dec
fcomi
test
stos
stos
push
in
mov
es
aad
mov
adc
sbb
pop
dec
mov
pushf
cmc
movsl
jl
cmp
roll
adc
fs
xor
xchg
sbb
lds
insl
aas
cmc
js
aam
sarb
shrl
js
sbb
lcall
pop
cmp
icebp
aam
cs
ficompl
cmp
sbb
adc
mov
sbb
push
lods
loop
push
popf
mov
sbb
scas
xor
in
sbb
pop
inc
shrb
leave
jecxz
and
inc
inc
test
inc
in
mov
mov
out
psubusw
mov
popf
repz
or
or
xchg
xchg
aas
xor
sub
test
test
cmp
mov
hlt
sahf
movsb
pop
aas
in
push
or
lahf
mov
mov
daa
test
sbb
and
dec
inc
in
pop
fimuls
sar
aad
sub
pop
xlat
int3
outsb
sub
enter
jecxz
es
ret
into
call
test
arpl
sub
and
cmp
jp
lods
mov
sub
mov
sub
cmpl
adcl
cltd
popa
gs
adc
in
shlb
cmp
in
ss
in
mov
popf
mov
adc
cmc
jbe
pop
dec
dec
sub
movl
push
icebp
and
cmp
ljmp
or
popa
shlb
pop
push
and
aad
xchg
mov
mov
xchg
jp
cmp
sbb
addb
sbb
in
mov
mov
mov
push
in
stos
aas
js
mov
xor
enter
push
pop
rcr
jp
and
xchg
fwait
rorb
lods
adc
cmc
movsb
jp
mov
mov
cs
lds
adc
or
repz
enter
pop
cmpsb
arpl
outsl
pop
jb
cld
mov
shrl
sahf
or
push
pop
bound
pusha
push
or
and
mov
sub
les
push
mov
shlb
xor
push
ret
push
into
jge
cs
addb
lods
and
dec
in
dec
out
mov
repz
ss
movsb
mov
int
daa
arpl
inc
mov
adc
cmp
cmp
lock
daa
pop
repz
dec
hlt
ficompl
lret
xchg
ja
dec
mov
jae
enter
sbb
dec
ficoml
dec
and
rorb
jne
mov
fwait
jb
imul
inc
and
mov
adc
addr16
je
jbe
cmp
push
mov
push
test
add
or
ret
mov
adcb
scas
mov
insl
repnz
aas
out
cmp
ja
cwtl
ret
popf
inc
sub
fimuls
mov
sbb
xchg
inc
jb
or
int
push
pushf
mov
or
testl
cmp
gs
push
lods
add
jnp
inc
jp
shlb
dec
lcall
aam
test
jp
nop
jge
push
jo
movsl
int3
repnz
outsl
or
lods
adc
pop
in
loopne
out
jp
ficomps
sub
pop
fs
push
and
negb
test
imul
rolb
imul
pop
cmpsb
add
fcoms
xlat
mov
jmp
das
out
mov
lret
mov
push
fmuls
in
das
pop
jbe
stos
mov
fistps
push
lods
xchg
add
ret
mov
dec
push
es
dec
pop
aaa
xor
add
sub
inc
jnp
sub
imul
push
int
push
jae
es
xchg
cs
and
aad
inc
xor
rorl
mov
call
xor
cmp
or
sbb
cmp
in
in
xchg
xor
or
and
mov
sahf
push
in
pop
push
or
or
pop
adc
sbb
mov
mov
stos
jl
jp
mov
into
cmp
clc
jns
jo
rcll
out
push
pop
js
add
dec
out
dec
loop
repz
push
pop
mov
mov
mov
aas
adcl
in
pop
repnz
mov
adc
fwait
xor
jmp
inc
jmp
ret
add
xor
push
pop
test
adc
aad
dec
sbb
mov
imul
mov
mov
push
jecxz
mov
out
test
dec
push
adc
cmc
mov
push
jg
push
test
dec
mov
dec
nop
outsb
xchg
out
lahf
repnz
jae
fdivl
repz
jle
sub
mov
cmp
cmp
in
push
loope
mov
out
xor
or
mov
jno
cwtl
dec
add
and
popa
xchg
pushf
cwtl
stc
inc
leave
inc
dec
pop
outsl
arpl
mov
mov
sbb
fst
int3
jecxz
gs
sbb
sbb
mov
xor
pop
push
and
adc
cmc
sahf
dec
xchg
cmp
bound
std
scas
test
test
insl
test
es
cmp
xor
fimull
out
rorb
pop
jecxz
mov
sbb
mov
int
jge
sub
lods
xor
push
bound
mov
mov
xor
push
jno
sub
jg
pop
jp
xor
div
add
cmpsb
xlat
lcall
in
inc
testb
in
jp
out
popf
enter
inc
jbe
cmp
subl
addr16
aas
jb
sbb
stos
or
aam
push
mov
movsl
imul
lock
inc
sub
mov
lcall
test
pop
or
dec
loope
and
sub
stos
push
cs
jmp
aad
push
sti
sahf
adc
call
add
cmp
jecxz
insl
xor
cltd
adc
dec
push
bound
xor
push
mov
in
mov
mov
xchg
push
cmpsb
leave
ja
std
mov
cmpsb
add
jns
mov
xor
inc
mov
popa
lods
jae
xchg
xchg
nop
lea
loope
pop
inc
push
lret
imul
sbb
cs
call
dec
adc
call
jecxz
sub
xchg
ret
les
lds
test
stc
neg
pop
or
cs
jae
xchg
test
ljmp
mov
jno,pt
lret
int3
sub
movsb
pop
sub
test
xchg
stos
and
sub
in
adc
insl
adc
jo
shrb
push
shrl
cwtl
cld
rcll
dec
adc
dec
xor
dec
push
inc
mov
sbb
fs
mov
bound
outsb
and
loop
xor
jnp
adc
bound
fld
loope
lock
mov
mov
lahf
xor
fbld
mov
mov
inc
xor
fisttpl
call
sti
sbb
push
xchg
aad
xor
into
cld
push
shl
ss
rorl
add
push
pusha
push
sub
in
mov
mov
push
cmp
pusha
xchg
aas
xlat
subb
ss
push
fisttpll
sbb
cmc
int
test
rclb
rclb
and
dec
mov
lret
mov
hlt
mov
dec
repz
fst
mov
out
in
fcos
imul
les
push
ljmp
adc
jp
pop
jmp
mov
push
sbb
mov
xlat
movntq
out
aas
inc
dec
out
or
xchg
hlt
mov
inc
add
popf
xchg
sub
les
sub
push
jns
pop
call
add
in
jnp
movsb
test
mov
and
sub
sbb
xchg
inc
fs
sub
hlt
ret
mov
xor
in
mov
ret
in
popf
cmpsb
cld
in
mov
aas
les
push
and
out
lods
mov
lock
sti
les
fadds
scas
sbb
xchg
hlt
adc
inc
pop
sbb
hlt
adc
push
jl
ss
lock
lahf
cmc
movsb
xor
iret
and
gs
push
imul
pop
scas
pop
inc
rcrb
cmp
stc
push
dec
pushf
movsl
int
push
mov
inc
push
andl
lahf
scas
fdivl
inc
test
hlt
shl
jb
xchg
pop
adc
dec
clc
jmp
add
xlat
gs
imul
cmpsl
mov
mov
mov
mov
test
ss
aaa
sahf
arpl
add
ret
scas
xchg
es
pop
pusha
add
popf
push
or
lds
and
xchg
push
lret
test
test
push
push
jg
insb
lret
jmp
lock
aad
xor
sbb
jae
pop
imulb
lret
into
out
add
dec
xchg
jmp
bound
inc
and
or
into
clc
daa
addr16
or
dec
ds
pop
or
call
fsubr
test
frstor
or
push
or
dec
gs
aad
call
mov
sbb
jne
pop
dec
jo
out
sbb
leave
mov
repnz
out
inc
mov
fcoms
mov
xchg
push
into
lds
lods
xor
in
in
in
or
das
push
jns
jmp
js
dec
arpl
jo
jmp
icebp
pushf
negl
pop
or
fistpll
repz
rolb
add
push
jmp
sbb
pushf
divb
aad
pop
or
les
push
mov
ja
dec
lods
outsl
aas
push
in
cmp
sub
push
dec
dec
fistpl
nop
cmc
std
lea
enter
sbb
in
andl
adc
xchg
test
pop
add
fmull
jmp
inc
cmp
push
scas
inc
mov
inc
stc
int3
push
cmpsb
pop
ljmp
fistps
mov
fwait
adc
je
mov
pop
inc
mov
xor
les
movsl
shl
test
lcall
cmpsb
imul
or
adc
in
popa
inc
mov
leave
movsb
xor
sub
icebp
shlb
insb
adc
lahf
mov
inc
in
adc
xor
es
out
out
inc
sub
inc
inc
lea
ds
dec
test
movsb
test
nop
shrb
orb
jmp
bound
or
js
mov
lcall
mov
lcall
ljmp
sub
push
jo
mov
dec
sub
mov
push
cmp
add
stc
adc
xor
mov
inc
add
rcr
mov
cmpsl
les
jecxz
jb
out
and
adc
sub
pop
jno
std
xchg
mov
movsl
adcl
push
mov
mov
add
test
fbstp
cli
push
test
fisubl
xor
aad
scas
aaa
in
data16
pop
test
ret
mov
scas
int3
mov
inc
cltd
mov
ja
mov
ret
and
pop
call
xchg
lcall
cmp
mov
pop
sub
dec
movsl
cmpsb
sbb
repz
jb
dec
sbb
sbb
add
arpl
inc
lds
xchg
fs
sbb
cli
xchg
sbb
inc
dec
push
add
jbe
push
jo
call
inc
dec
inc
je
or
mov
std
mov
shrb
stos
or
dec
jecxz
inc
bound
and
sarl
dec
mov
ds
lret
or
pop
and
bound
loop
inc
adc
pop
insb
out
pop
sbbb
pop
and
jle
xchg
pop
jo
enter
dec
xor
cwtl
das
mov
push
dec
out
pop
push
dec
into
dec
lea
sbb
inc
mov
popa
mov
lea
lret
mov
xchg
nop
jmp
nop
mov
aam
stos
sbb
mov
and
in
xchg
xchg
lods
fcomps
mov
sub
fadd
jb,pn
pop
mov
stos
int
inc
shr
cmp
loop
and
sbb
pushl
sub
fucomp
cmpsl
loop
sub
popa
pop
jmp
mul
mov
xor
adc
inc
inc
fs
leave
mov
xor
rep
pop
cmp
fnstcw
xchg
pop
add
out
mov
pop
cmp
xorl
movsl
loope
lret
push
pusha
inc
inc
pop
mov
add
mov
ret
dec
ret
sub
popl
adc
ret
fstl
in
sub
adc
aas
in
cmp
xchg
cld
inc
add
push
ret
inc
dec
lcall
mov
test
mov
les
into
xlat
and
lret
int3
sub
push
cmc
dec
sub
mov
dec
pop
jbe
jmp
lea
rcl
ljmp
test
addb
imul
push
repnz
sbbb
aaa
xchg
adc
test
popf
sub
scas
sbb
mov
ret
aaa
or
std
ss
mov
clc
aaa
idiv
nop
pop
ljmp
mov
shlb
pop
rcll
sbb
sbb
loope
push
pusha
sarl
mov
push
mov
repz
cmp
divl
cmpsb
sbb
daa
or
daa
pop
dec
sbb
dec
imul
int
push
mov
xchg
jge
add
aaa
jnp
sub
pop
and
fsubrl
or
popf
icebp
lods
xor
xchg
lcall
sbb
hlt
lahf
test
sbb
push
mov
inc
out
hlt
ss
mov
adc
and
jae
out
xor
lock
inc
fimuls
sbb
int
fmulp
mov
andl
mov
dec
mov
in
test
push
jp
mov
lahf
inc
out
or
int3
idivb
xor
insb
pop
and
jecxz
int
movsl
adc
subl
push
push
pusha
adc
rorl
dec
in
and
xor
leave
in
adc
aas
cs
add
dec
pop
stos
jo
sub
jp
xchg
mov
scas
rorb
and
addr16
mov
cmp
mov
hlt
push
fdivrs
jns
sub
sbb
leave
push
push
mov
push
les
adc
pop
addr16
sub
cli
out
jno
cmpsb
inc
xor
mov
clc
scas
xchg
outsb
push
mov
inc
pop
fnstenv
mov
adc
push
inc
xor
xor
add
cmpsb
add
test
fwait
jcxz
add
dec
adc
js
shlb
pop
jl
inc
mulb
push
jecxz
cmp
lcall
cmpsb
fisttpl
outsb
pop
sbbb
enter
repz
mov
ljmp
adc
xchg
sub
rcrb
out
xchg
or
dec
dec
lds
pop
out
mov
pop
shl
movsb
fwait
push
js
and
jle
cmpsl
stos
pop
jnp
cltd
mov
and
addl
fsubp
or
mov
mov
or
mov
cmpsl
test
xor
mov
or
or
mov
insb
dec
fdivs
xlat
xor
push
add
imul
xor
in
mov
pushf
sahf
and
fisubl
and
xchg
jns
scas
mov
aaa
push
aam
rcll
push
and
sbb
mov
jmp
add
or
mov
in
xchg
or
out
or
lods
pop
sub
jge
fidivl
xchg
adc
fdivs
cmpsl
loopne
scas
sahf
loopne
sbb
add
popa
pusha
jbe
pop
ja
xor
ljmp
jl
test
push
lods
fnstsw
cmpsl
add
cmp
xor
xchg
cmp
or
inc
xchg
cmp
test
mov
sarl
icebp
push
je
insb
pop
xor
jbe
scas
inc
sbb
rolb
mov
lods
or
push
sti
data16
sbb
xchg
idivl
daa
xchg
scas
out
mov
mov
nop
adc
out
mov
sarl
cmp
adc
imul
test
dec
xchg
frstor
xchg
int3
push
sub
test
push
outsb
lock
xchg
ja
outsb
nop
adc
push
pop
mov
aaa
lock
sbb
ret
pop
outsl
insb
lcall
pop
daa
jge
push
ret
dec
rcr
add
push
leave
aam
mov
pop
xlat
xor
into
jmp
xchg
sub
daa
ja
in
lods
mov
add
or
xchg
jo
in
shlb
ret
gs
outsl
sbb
push
imul
jle
rolb
cmp
push
insb
lcall
into
ret
es
pushf
lret
xchg
xchg
pop
iret
sub
add
cmp
call
cld
jg
es
in
sbb
sbb
test
dec
jle
and
xor
nop
ljmp
int3
lahf
xor
cmpsb
pusha
fstpl
fcoml
dec
push
sti
repz
loope
lock
xor
jle
out
mov
add
es
sub
xor
sbb
inc
mov
sub
lods
mov
sub
push
mov
jns
jno
and
jge
in
dec
lea
es
lret
scas
lret
pop
or
cmp
mov
lock
add
cmp
push
mov
dec
lret
les
jae
pop
mov
test
mov
hlt
jle
aas
mov
mov
data16
fidivs
mov
aad
fnstenv
sbbb
outsl
fists
jo
fsubp
in
pop
adc
xchg
sbb
jae
iret
fisttpl
adc
or
add
and
xchg
mov
push
pop
dec
cld
cmp
and
stc
push
outsb
addr16
inc
paddb
sub
je
push
pushf
jmp
addr16
stos
mov
xchg
mov
sti
mov
inc
mov
loopne
cld
push
mov
fdivl
in
pop
and
mov
jmp
icebp
in
aam
in
aad
scas
cmp
xor
ljmp
add
rorl
adc
repnz
sub
mov
call
rcll
lds
pop
inc
das
ret
lret
pop
sbb
jecxz
andl
lcall
cltd
inc
sbb
test
pop
sahf
mov
push
inc
test
jl
mov
pop
sahf
cmp
das
cmpsl
es
int
push
cmpsl
mulb
sub
sub
icebp
xchg
inc
mov
jle
push
push
and
mov
stc
mov
sub
pop
jno
mov
mov
xchg
jbe
mov
push
xchg
push
lcall
xchg
inc
sahf
xor
jne
lret
adcb
xchg
jl
xor
out
or
rclb
add
inc
adc
xlat
inc
outsb
jl
or
or
pop
sub
negb
call
adc
xchg
xchg
push
insb
das
rorb
adcb
test
add
pop
jbe
sbb
jge
fwait
push
add
mov
ret
push
rorb
shlb
and
inc
mov
mov
out
iret
call
push
and
std
popf
pop
clc
and
in
daa
push
adc
and
out
xor
in
in
mov
enter
es
cmp
dec
repnz
pop
dec
ret
stos
dec
jnp
aas
push
dec
mov
xor
jecxz
bound
ljmp
mov
fsubrs
imul
out
pop
and
push
xchg
lahf
add
pop
loop
filds
aad
in
ds
and
push
adc
push
sub
adc
push
inc
test
mov
popf
dec
inc
sub
out
fisubrs
xor
ret
xchg
inc
lcall
lret
cmp
loope
aaa
add
mov
cmp
in
pop
add
pop
mov
pop
dec
xchg
and
rclb
inc
rdtsc
jl
repnz
push
roll
sbb
scas
and
mov
ret
add
scas
dec
inc
inc
loope
mov
cld
or
push
lahf
mov
or
sbb
and
sub
mov
imull
and
aad
call
xor
data16
xorl
mov
lods
mov
jl
outsb
xlat
roll
mov
inc
clc
cld
or
dec
ss
cmp
adc
test
push
pushf
mov
gs
out
and
xchg
lock
ret
push
sbb
dec
sbb
dec
add
jp
mov
add
dec
xor
pushf
sti
sub
xor
js
lret
mov
mov
les
cmp
fdivrs
ljmp
lcall
push
imul
das
cmpsb
and
add
enter
and
adc
mov
sti
std
sub
mov
sbb
fisubrl
clc
xor
dec
jns
es
ja
movsb
dec
iret
test
dec
adc
nop
cmp
jae
ljmp
dec
icebp
and
enter
cmp
push
out
out
lcall
xchg
xchg
add
shrb
ss
stc
xchg
popa
ret
repnz
gs
xchg
ljmp
and
ljmp
das
ret
scas
ds
mov
adc
mov
xchg
add
es
movsb
and
jle
jp
stos
lods
test
mov
cmp
gs
mov
out
loop
inc
aad
popa
push
pop
lea
cmc
das
stos
and
mov
insl
loopne
inc
hlt
adc
mov
sub
and
ret
adc
jmp
cmp
dec
mov
mov
jecxz
andb
mov
mov
not
dec
pop
loope
xor
ret
or
mov
test
inc
in
leave
sub
daa
in
push
mov
enter
inc
dec
comiss
and
xchg
and
sub
leave
sub
lcall
add
inc
adc
aas
xchg
adc
and
sub
mov
jo
and
sbbb
jno
dec
and
setnp
jne
mov
lcall
cmpl
cwtl
lret
add
mov
das
insl
jl
inc
outsl
sub
cmc
push
mov
mov
int
pop
sub
gs
stos
xchg
inc
rorl
adc
ss
lret
insb
pop
scas
ficoml
dec
popa
xlat
sub
rcll
imulb
cmpsl
stc
inc
lock
xchg
pushf
fwait
lea
outsl
popa
jnp
xchg
mov
adc
mov
xor
adcl
scas
sub
mov
sbb
push
fsubp
xlat
push
dec
bound
adc
lret
mov
mov
clc
pop
mov
pop
sub
js
imul
decl
leave
cmp
rcrb
mov
inc
in
lds
lcall
jl
adc
scas
outsl
in
pop
gs
push
sahf
out
cmc
adc
add
xor
jmp
data16
stos
cmc
mov
fimull
dec
jmp
pop
cmp
stos
mov
sbb
movsl
lret
cmc
aad
sbb
sub
popf
jne
es
aaa
xchg
clc
add
sbb
pop
pop
scas
push
and
shll
mov
aaa
outsb
inc
dec
dec
je
mov
rcr
ss
mov
push
jnp
mov
scas
andb
and
popa
push
inc
lret
jp
adc
xchg
sub
inc
bound
adc
rclb
push
rcl
pop
pop
mov
push
fcomps
outsb
enter
jge
clc
das
ds
adc
xor
xor
xchg
and
and
xor
jmp
stos
das
xchg
xchg
mov
jb
add
cmp
jecxz
mov
push
lods
pop
xchg
push
jmp
leave
dec
pop
pop
push
mov
leave
xor
pop
xor
outsb
sti
into
dec
xor
add
mov
adc
push
xor
jecxz
adc
mov
sbb
push
fbld
or
dec
scas
inc
hlt
jb
test
imul
sub
jl
in
clc
fidivs
test
cmp
xor
pop
test
scas
faddl
push
aam
push
ss
out
pop
aad
adc
movsl
mov
clc
or
lock
dec
pushf
sub
repnz
mov
add
xchg
lahf
loope
fsubrl
nop
incl
std
sbb
fsubl
iret
xchg
test
xchg
lahf
inc
mov
and
push
xchg
lock
fisubrs
mov
mov
cmpsb
movsb
push
add
loopne
out
mov
adc
sti
and
push
dec
imul
lods
mov
ja
das
loop
aaa
mov
es
pop
mov
fisttpll
cmpsb
xlat
mov
aad
xor
clc
push
dec
ret
aad
mov
push
daa
out
ja
sub
clc
or
frstor
mov
stc
pop
cmp
adc
sub
mov
dec
mov
mov
out
pop
outsb
mov
test
stos
cmp
loopne
mov
mov
dec
mov
mov
ret
lret
push
arpl
sbb
rcll
push
ret
mov
out
bound
xor
addr16
lahf
xor
fsubs
lock
std
jmp
add
in
mov
push
push
dec
sbb
cmp
jl
test
loope
mov
push
and
add
jg
jg
dec
push
call
popw
push
fs
fcoms
mov
pop
shlb
jae
inc
imul
inc
xchg
ljmp
xor
fcmovne
mov
test
jle
mov
mov
xor
pop
cmp
sub
lock
sarb
jno
cmp
mov
push
and
sbb
cltd
sub
sub
cmp
stc
bound
bswap
jo
jbe
pop
mov
jo
jb
mov
xor
out
out
fwait
mov
add
mov
sbb
ror
mov
pop
stos
adc
mov
sbb
or
dec
mov
cld
pop
subb
icebp
stc
je
or
cwtl
test
data16
adc
popl
sub
xchg
cmp
addl
cs
adc
lcall
aam
push
xor
cmc
je
mov
sub
pop
jg
xor
inc
xchg
mov
jle
sbb
sbb
imulb
pop
sbb
jle
and
mov
jns
icebp
cmc
sub
jge
lea
xor
out
popf
or
dec
iret
std
mov
adc
jo
lods
pop
filds
out
adc
xor
movsl
or
lea
and
andl
imul
sub
xchg
scas
jl
lret
lods
adc
cwtl
push
dec
daa
push
pop
xor
repnz
pop
mov
add
sarl
adc
push
push
jmp
cmp
xor
lcall
push
notb
imul
pushf
push
mov
sub
sub
mov
jo
std
in
lods
jg
mov
xchg
cmc
mov
mov
scas
pop
fists
jle
jle
div
imul
daa
loope
pop
in
and
dec
mov
loop
push
sub
mov
cmc
out
jl
loope
mov
rclb
fs
pop
inc
and
fnstenv
orb
mov
jo
xor
and
jl
and
mov
and
stos
inc
mov
inc
rolb
test
rolb
cmp
shll
sub
popa
lahf
adc
lea
ljmp
fdivl
in
or
cmp
dec
lds
jns
fs
addr16
add
pusha
sub
jg
jmp
mov
mov
sbb
out
xorb
jle
cli
push
ss
sub
js
ja
in
push
aad
xchg
jbe
pop
insl
mov
pushf
mov
mov
cs
mov
lahf
pop
dec
es
inc
cmp
sahf
outsl
adc
es
dec
cld
mov
dec
push
and
adc
and
aam
mov
mov
cmp
sbb
xlat
cli
push
mov
into
ljmp
clc
mov
andb
arpl
dec
mov
enter
add
xorl
dec
cmp
idivl
sub
xchg
push
stc
pop
jmp
mul
sub
fs
out
and
mov
push
pop
ja
xchg
jmp
sbbl
adc
pushf
inc
dec
pop
sub
xchg
jbe
lods
mov
fbld
pusha
dec
adc
mov
iret
mov
dec
mov
push
mov
stos
xchg
int3
repz
dec
push
cld
int3
sbb
jge
ja
rolb
outsb
lret
jne
in
gs
outsb
xchg
xor
or
xchg
aad
imul
sub
xchg
jns
mov
cmc
arpl
lcall
addr16
inc
stos
pop
addr16
shld
xchg
ljmp
xchg
add
imul
cmp
adc
lods
rcl
sbb
loope
mov
sbb
test
mov
aad
or
dec
jno
ljmp
or
fisttpll
cltd
sub
mov
call
sub
ret
test
xchg
xchg
das
jg
xor
xor
add
imul
insb
int3
mov
and
sbb
xchg
repz
xchg
and
std
stos
jb
or
xor
mov
adc
jmp
arpl
pop
xchg
mov
enter
jno
les
js
ss
xor
sahf
and
outsb
in
lock
or
enter
in
sbb
into
cmp
ja
xor
loope
sub
mov
cmp
lea
mov
mov
cmp
aad
xor
fistpl
loopne
pop
lret
cli
cmp
jb
xchg
jg
cmp
cmp
xor
repnz
mov
outsb
dec
les
xor
shrl
mov
sbb
mov
jge
into
lahf
add
pop
pop
dec
mov
add
fisubrl
jl
dec
adc
lods
mov
in
in
adc
std
xor
adc
in
pop
add
jne
enter
lret
insb
dec
insl
aaa
mov
pusha
push
repz
insl
cmp
dec
mov
fldl
fwait
stos
lods
or
sub
outsb
les
inc
push
lods
dec
out
roll
jb
rolb
outsb
call
jl
mov
push
ret
push
incb
or
add
xchg
sbb
fldl
add
les
lret
dec
imul
scas
pushf
fnstcw
xor
mov
icebp
push
jnp
loope
pop
pop
push
dec
test
jno
sbb
mov
divb
xor
lahf
lret
pop
xchg
js
cwtl
pop
loop
mov
cmp
push
cmc
mov
enter
aaa
dec
mov
mov
arpl
gs
adc
enter
cli
arpl
add
jmp
scas
test
inc
cltd
jmp
repz
mov
dec
ljmp
sbb
insb
adc
sbb
and
dec
out
dec
sbb
sbb
int3
enter
inc
pop
orl
push
add
push
cmpb
and
cmp
mov
mov
push
cli
lcall
inc
gs
out
mov
dec
out
jne
aas
inc
and
pop
int
fisttps
and
sub
add
stc
popl
dec
test
test
and
push
repz
movsb
mov
add
fimuls
cmp
outsl
cmp
pushf
sarb
push
loope
mov
out
gs
and
jmp
cld
push
jl
shr
pop
jno
fs
inc
mov
out
mov
mov
pop
cmp
rcrb
add
data16
sbb
and
adc
push
subb
pop
adc
push
jae
lock
jp
mov
push
xor
negb
jp
adc
ljmp
lock
jae
mov
push
lret
mov
jle
push
xlat
sbb
fcmovnu
push
sub
jg
notl
sti
push
cmpb
jl
aas
lds
loopne
or
das
leave
jp
fistpl
jg
or
add
popa
and
mov
mov
mov
loop
popf
sub
shlb
push
outsb
mov
mov
lods
das
mov
lock
and
mov
mov
push
jge
cmp
jns
inc
mov
push
sbb
sub
shrl
sbb
jo
inc
cmp
repnz
popa
adc
cwtl
movsl
dec
sub
add
pusha
pop
outsb
testb
out
add
push
pop
aas
push
jno
cltd
insb
arpl
inc
pop
ja
jae
xchg
push
shlb
daa
or
dec
enter
xor
xchg
cmp
xchg
movsb
push
push
mov
arpl
mov
out
mov
loopne
and
lahf
pusha
push
cli
in
imul
sub
inc
cmpsl
cmpsl
aas
jb
adc
inc
mov
test
cmp
or
jnp
sbb
outsl
jbe
lcall
cmp
fcoml
sar
xor
cwtl
and
shrl
inc
stos
xchg
out
xchg
push
stc
lock
arpl
arpl
dec
mov
inc
mov
loop
cwtl
or
mov
shrl
je
xchg
in
inc
sub
cmp
fisubrl
pop
pop
in
lahf
adc
ds
sbb
add
mov
aaa
sbb
dec
sub
jnp
ret
push
test
sbb
xchg
aad
mov
aaa
aaa
add
pop
scas
cwtl
ret
ljmp
xchg
and
push
push
mov
movsl
xor
jno
pusha
sbb
loop
mov
jp
arpl
insb
jge
xor
insl
jo
int3
arpl
out
push
or
adc
movsl
xchg
mov
cmpsb
push
mov
mov
mov
push
cmp
in
scas
mov
sub
fcompl
sub
fcompl
data16
cmp
push
out
mov
mov
ret
jno
xchg
xchg
fiaddl
iret
jno
xchg
movl
gs
mov
mov
cmp
mov
xorb
fbstp
out
hlt
xor
scas
popf
fldz
add
in
sub
leave
mov
mov
mov
in
cmpl
xchg
lret
xchg
add
push
dec
aaa
mov
jmp
loope
out
push
and
addr16
imul
fstp
cld
loopne
and
add
mov
hlt
cmp
xor
cmovo
mov
scas
mov
test
mov
mov
jle
push
jmp
in
add
adc
ret
add
pop
xor
mov
out
pop
pop
mov
movsb
adc
addl
sbb
add
scas
insl
mov
mov
jo
les
fadds
mov
insb
fwait
mov
add
stos
jns
mov
lock
or
mov
fimuls
imul
ret
scas
fstpt
aam
mov
inc
pop
arpl
sub
or
adc
fsubrs
mov
and
data16
xchg
dec
ss
lock
sahf
xchg
adc
in
mov
jp
cmp
mov
in
popa
fistl
pop
jbe
stos
mov
push
pushf
insl
mov
fmul
sub
jne
nop
std
and
pop
adc
repnz
pop
jbe
loope
cmp
xchg
sbb
insb
mov
es
mov
cmovns
sub
pcmpeqw
ja
mov
cmp
push
pushf
adc
add
stc
push
pop
das
test
jecxz
leave
dec
pushf
add
and
pop
test
insl
xor
pop
sbb
nop
push
jp
pop
or
fadds
lea
adc
lcall
pusha
mov
imul
pushfw
add
pop
mov
insl
mov
flds
lahf
mov
sbb
sahf
test
mov
add
mov
into
dec
xchg
repnz
and
outsb
fisubs
sbb
push
daa
push
xchg
mov
inc
aas
xchg
shlb
pop
xor
stos
pop
ret
jo
repnz
mov
dec
push
xor
sti
or
sub
pushf
cmc
sub
leave
nop
pop
mov
popf
pop
inc
shlb
dec
divl
int
outsl
fcomps
subb
or
das
shr
jmp
cltd
and
int3
mov
repz
or
jbe
jo
xchg
fwait
iret
std
arpl
not
stc
inc
pop
sub
pop
icebp
addps
jge
mov
sbb
add
and
lea
loopne
nop
lret
pop
pop
leave
sahf
sti
outsl
jmp
dec
repz
cvtps2pi
imul
out
mov
xchg
gs
or
sbb
jmp
inc
mov
scas
or
xchg
pop
pop
cmpsb
cmpsl
jne
add
sub
ja
jo
call
cmp
int3
add
adc
fimuls
xor
and
mov
push
lea
enter
out
orb
inc
mov
icebp
cs
cmp
sbb
add
inc
add
ret
inc
mov
outsb
pop
jns
ljmp
ds
pop
mov
pushf
decl
add
mov
sbb
in
mov
xchg
and
js
mov
xchg
subl
lcall
hlt
and
aam
inc
negl
jg
leave
jmp
pop
push
jne,pt
push
adc
add
xor
rcl
ljmp
movsb
stos
inc
mov
dec
negl
sub
xor
test
push
mov
lds
or
loope
push
or
mov
cli
jle
mov
mov
jmp
and
clc
sti
add
int3
jp
cmpsl
adc
cmp
popf
pusha
movsl
pop
mov
jae
xchg
popf
mov
out
int3
sbb
test
add
xchg
xorb
xor
pop
jbe
sbb
jne
mov
leave
inc
out
mov
lcall
sub
mov
dec
add
push
mov
jnp
movsb
repz
ret
movsl
out
push
test
out
push
pop
jb
mov
sbb
ljmp
and
fwait
adc
into
jns
dec
jnp
push
or
cld
and
aaa
bndstx
mov
in
in
push
sub
icebp
cld
xchg
dec
push
lret
add
aam
inc
stos
mov
out
push
sbb
mov
aas
sahf
sub
mov
mov
dec
mov
add
jecxz
hlt
ljmp
push
jbe
mov
cltd
sub
in
int
jp
push
dec
inc
add
sbb
fisttpll
sbb
repnz
shlb
xchg
xor
loop
idivl
cmpl
in
pop
sub
hlt
or
aad
pop
or
xor
and
in
sub
fisttpll
clc
mov
mov
sbb
insl
xchg
js
lods
mov
mov
test
fsubs
xchg
dec
outsb
jecxz
and
add
jns
pop
addr16
shlb
mov
mov
xor
push
dec
cmpsl
push
and
sbb
xor
inc
ja
inc
ja
add
xchg
dec
xchg
mov
jae
test
pop
pusha
movsl
dec
mov
lea
in
decb
push
in
jo
clc
or
add
stos
ljmp
mov
mov
js
xor
sub
and
and
pop
add
xor
int3
xchg
dec
popa
fcomi
inc
sub
test
leave
imul
stos
jp
ljmp
xchg
mov
out
lds
clc
xor
aad
cmp
shl
int
xchg
mov
dec
aaa
repnz
pop
cmp
popa
and
xor
ret
nop
cwtl
pop
clc
mov
ret
loop
out
lock
div
cmp
lock
adc
inc
adc
clc
inc
dec
xor
cmp
adc
push
out
rcrb
pop
inc
shlb
lods
add
pop
subb
lcall
inc
xor
shll
lret
jne
push
jbe
adc
mov
ss
in
nop
push
adc
fistl
icebp
clc
cmpsb
jb
cmp
pop
in
leave
dec
mov
cmp
divl
insb
insb
cmpsb
inc
inc
and
mov
mov
pop
popa
aas
jo
shlb
add
cmp
cmp
test
mov
push
sub
mov
jmp
cmc
sbb
mov
cmp
jne
jb
popf
jae
das
xor
dec
dec
jmp
xchg
sbb
or
es
shl
mov
jle
sbb
test
jg
mov
sahf
and
mov
xor
mov
push
add
iret
xor
decl
xor
jle
les
dec
inc
jle
mov
leave
mov
shll
std
jge
fiadds
mov
call
push
lcall
xlat
jne
jmp
insl
out
and
and
js
cli
inc
call
xor
je
les
mov
xor
jb
sub
lods
xchg
test
lock
aaa
daa
jge
lahf
mov
negl
xorps
jp
fwait
int3
ljmp
pop
dec
xchg
cmp
jge
mov
imul
aas
daa
movsb
lret
rcll
cltd
shrl
call
sub
push
sarl
jge
int
nop
sub
stos
pop
adc
add
mov
and
ret
sub
test
lahf
cmpsb
stos
lret
in
cmpsb
fstpt
and
jae
mov
ret
push
xlat
sar
xchg
call
pop
jecxz
sbb
push
or
cltd
loope
outsl
adc
fisubrs
repnz
fcmovne
jecxz
cwtl
fwait
lods
xorl
add
add
dec
xlat
scas
andl
addl
pop
imul
bound
sub
fsubr
ss
inc
test
mov
mov
ret
mov
pop
mov
imul
cmp
repz
fwait
ljmp
xchg
int3
into
jno
stos
cmp
dec
xchg
pushf
xor
mov
push
xchg
xchg
aaa
mov
loop
aad
stc
pop
jmp
mov
fbld
aad
movsb
jge
pop
jp
mov
lea
bnd
rcr
cmp
mov
nop
mul
and
mov
add
adc
das
push
xchg
adc
dec
mov
xchg
inc
gs
mov
mov
jno
ja
sub
pop
jns
negb
lds
adc
push
fnstsw
ficomps
push
cmp
lahf
filds
add
int
sub
sub
mov
sbb
pop
lods
data16
sub
mul
pop
sub
push
inc
jge
out
jne
jno
sub
sbb
xor
mov
xor
jle
add
push
fdivrs
leave
cmp
adc
dec
cmpsb
mov
adc
sub
pop
jo
mov
inc
in
sub
and
and
jmp
cwtl
pop
loope
xchg
sbb
fcos
popa
std
cmp
xchg
xor
mov
push
adc
adc
add
arpl
xor
add
rolb
jmp
push
adc
je
adc
in
data16
add
mov
call
and
xchg
inc
cmp
js
pushf
jl
int
fsubp
inc
in
int3
dec
into
daa
mov
or
pop
shrl
mov
aam
pop
das
andl
sub
xlat
mov
cmp
pop
sub
cmp
mov
add
std
pop
insb
and
popa
divl
add
movsl
pop
loope
or
into
pop
cli
xchg
test
scas
enter
mov
adc
mov
mov
sub
push
iret
jl
int
in
inc
stos
mov
adc
jmp
aam
lods
mov
addr16
inc
sub
pop
fs
pop
cmpsb
sbb
push
adc
lret
pop
fwait
stos
dec
pop
sub
sarb
clc
xchg
dec
dec
test
xlat
xor
mov
sub
sub
scas
adc
xor
rolb
cmpl
je
stos
cwtl
cmpsb
repnz
leave
in
mov
test
divb
loopne
ret
loope
pop
push
xor
out
dec
adc
jb
rcr
cmc
sbb
pop
mov
movsl
adc
push
mov
adc
inc
shrb
push
mov
lret
dec
out
cwtl
mov
xor
or
cmp
in
out
sub
fs
int
mov
dec
ffreep
xor
in
aaa
cmc
aaa
xor
ja
pop
faddl
adc
dec
aam
sub
or
add
popa
fadds
cld
jl
dec
mov
movsb
test
push
divb
push
nop
dec
daa
adc
sbb
decl
jecxz
aam
adc
test
insl
das
or
aas
xor
aaa
icebp
nop
push
lods
mov
ret
enter
sbb
imul
mov
hlt
mov
dec
gs
shl
pushf
jp
or
aam
pop
loope
stos
std
xchg
mov
jl
jg
out
pushf
das
and
insb
adc
into
sbb
hlt
xorl
rcl
jmp
cmpsl
mov
add
scas
loop
sbb
cmp
ficompl
fbstp
xchg
xchg
outsl
push
mov
mov
cltd
imul
xor
jo
or
nop
add
mov
and
es
test
jg
sbb
mov
js
fwait
jl
dec
out
mov
add
push
idivb
pop
test
shlb
xchg
cld
adc
cmp
cmp
xchg
jne
in
adc
pop
rclb
std
cmp
pusha
stos
je
ljmp
push
aad
out
aad
je
cmpsl
sti
mov
pop
ror
cmp
push
movsl
push
dec
test
call
ret
lret
pop
push
mov
xchg
push
sub
pop
mov
adc
lea
rcrl
sub
insl
das
push
movsl
cmpsl
pop
sub
imul
xor
aaa
jne
xchg
pop
adc
dec
addr16
pop
dec
cltd
fimull
jns
adc
pop
enter
imul
push
dec
add
int
std
aaa
pop
pop
mov
leave
push
jl
xor
pop
xchg
xor
and
test
add
xchg
test
in
cs
xor
shlb
sub
dec
cld
insb
mov
sub
jae
and
inc
sarl
testl
stc
in
aad
daa
leave
ljmp
fnsetpm(287
jb
ja
das
xchg
data16
test
pop
mov
lea
add
jns
sub
mov
cmp
sbb
cmc
fstps
xor
sub
xchg
cmp
into
cmpsb
cmp
std
adc
push
xchg
mov
mov
fldcw
dec
enter
sub
pop
and
test
adc
jns
movsl
insl
mov
dec
mov
pusha
stos
sub
cmc
cs
in
in
lods
dec
inc
sub
xchg
les
popf
jns
push
fsubs
std
aas
xchg
jnp
iret
xchg
jnp
ds
add
mov
inc
mov
shlb
xchg
jo
adc
mov
add
cmpsb
stc
movsb
push
dec
insl
push
push
cli
sahf
jl
fidivl
movsl
pop
ds
jg
xchg
and
inc
mov
sub
into
mov
xchg
enter
fwait
aas
sub
mov
fiaddl
xchg
jae
push
out
or
cmp
rcr
pop
fsubr
add
lahf
loop
adcb
adc
idivb
repnz
mov
mov
xor
ficomps
jo
dec
dec
aad
lods
shl
mov
mov
inc
ljmp
popf
ret
push
ja
mov
dec
push
mov
cmp
or
mov
sbb
loopne
dec
inc
movsb
mov
cmp
mov
mov
xchg
and
or
lds
mov
xor
outsl
dec
into
inc
cmpsl
int
and
add
cld
sbb
sub
out
out
xor
shl
cmp
sbb
cltd
cltd
mov
mov
pop
enter
mov
mov
xor
jle
and
mov
lock
cli
stc
add
or
push
rorb
fwait
ss
popf
je
xor
mov
sbb
addl
mov
pop
add
inc
pop
adc
testl
lea
xchg
adc
mov
vcomiss
cmpsl
push
lret
mov
out
push
cmpsb
lock
ja
popf
mov
fs
in
ret
aas
xchg
push
nop
stc
pop
and
lods
fstpt
cmp
pop
fwait
cmp
adc
add
dec
std
outsl
xchg
ret
inc
sbb
clc
pop
ret
or
loope
shll
aad
imul
int3
mov
lret
incb
mov
cmc
rclb
filds
psubb
int3
sub
cmpsl
lret
inc
call
ret
mov
cmpsb
pop
insl
or
fnstenv
sbb
mov
push
xor
enter
inc
adc
int
pop
pop
mov
mov
sub
add
mov
mov
push
out
imul
pop
mov
lods
or
pop
pop
scas
pop
sub
out
imul
scas
out
xlat
jne
ss
mov
cli
es
imul
add
lcall
decl
adc
cli
arpl
sbb
leave
lret
fsts
xchg
stos
cmp
add
and
cwtl
sahf
in
xchg
jmp
cmp
and
scas
sbb
push
dec
scas
aaa
xchg
lods
push
pop
sbb
out
xchg
mov
inc
inc
sarl
outsb
and
mov
out
shlb
dec
fcoml
cmp
cmp
mov
jmp
incl
jl
or
ds
repnz
fwait
lret
dec
jmp
push
pop
ljmp
xor
test
jle
aad
push
jnp
loop,pt
jmp
push
icebp
ljmp
jno
test
mov
dec
dec
rclb
xchg
cmp
pop
scas
aad
add
clc
ljmp
mov
xlat
mov
mov
push
push
pop
lds
jns
addr16
jle
dec
mov
mov
in
mov
stos
sub
dec
bound
mov
les
push
int
add
push
jge
daa
jmp
push
dec
dec
push
push
mov
pop
sub
adc
sbb
int3
and
mov
std
xchg
sub
push
mov
jl
das
inc
stos
in
mov
mov
push
mov
lock
add
cmp
xor
or
in
xchg
andb
sbb
xor
outsb
add
xchg
pusha
mov
mov
mov
cs
cmp
in
mov
jns
out
pop
jbe
fnstcw
shlb
xchg
push
lods
inc
outsb
push
pop
dec
gs
out
add
lods
dec
pop
push
rdmsr
cmp
daa
cmp
pop
cmpsb
addr16
xor
sub
insb
cmp
in
popa
ljmp
xor
fld
mov
sub
cs
int
shlb
adc
jo
xchg
xchg
ja
cmp
cmc
jno
adc
or
fcmovbe
aaa
mov
inc
mov
sub
into
shrl
test
in
add
mov
ret
mov
repz
jmp
fs
nop
mov
xchg
xchg
cli
mov
lock
inc
sub
or
dec
loopne
shll
jnp
int
jmp
adc
shr
fbld
insb
mov
mov
sti
in
imul
xchg
push
cmp
mov
or
mov
mov
jns
dec
sbb
sbb
fstpt
push
movsb
dec
adc
mov
push
subb
xor
xchg
mov
sbb
insl
pop
stos
loop
jl
and
or
mov
pushf
pop
stc
mov
add
hlt
leave
inc
out
mov
mov
or
mov
ljmp
dec
push
data16
push
adc
sbb
out
mov
adc
xlat
hlt
cmp
movsl
xor
test
ja
jg
inc
pop
lock
inc
or
and
pop
mov
gs
add
es
jmp
test
inc
jecxz
out
fwait
push
shll
sub
push
sub
mov
mov
xchg
int
or
cli
lock
inc
sahf
jmp
in
in
adc
fistpl
arpl
call
lcall
jbe
xchg
dec
cmp
hlt
and
ret
xor
jg
pop
xorl
cmpsl
xchg
lcall
ja
xor
fsubr
and
xor
dec
loop
leave
insl
aam
je
sti
cmp
mov
fdivrl
jg
nop
jno
push
xor
lds
popa
loopne
mov
cmp
sub
movsb
mov
pop
enter
mov
pop
je
push
xchg
or
shlb
dec
and
rcl
test
movsl
fcoml
loope
jl
sbb
and
out
shll
cld
out
and
xor
dec
jbe
aaa
inc
test
push
sub
mov
adc
test
popf
jl
lds
xor
sub
xchg
mov
stos
cmp
scas
loop
cwtl
out
pop
pop
in
lods
push
mov
sbb
sbbb
scas
push
mov
stos
or
mov
out
lods
pusha
jns
cmp
mov
fsubl
cmp
or
in
clc
sub
in
pop
add
cmpsl
sbb
jg
loopne
mov
sbb
lds
push
adc
jge
mov
mov
cwtl
mov
sbb
and
movsl
or
or
les
mov
mov
stc
xor
scas
shll
movsl
cs
inc
das
jge
les
stos
jle
imulb
loop
into
mov
jno
jecxz
or
es
pop
das
ljmp
push
pop
bnd
xor
xor
lock
lds
mov
mov
shlb
movsb
push
out
repnz
and
sbb
jae
hlt
sub
or
sub
push
inc
sahf
dec
jge
imul
shrl
push
mov
and
aas
jmp
jno
insl
mov
add
mov
ret
add
sub
and
push
imulb
dec
popa
xlat
lahf
frstor
jne
shll
stos
add
push
sbb
push
or
and
inc
faddl
clc
xor
popf
pop
push
loop
sub
jle
clc
insb
sbb
xchg
add
sub
adc
mov
sbb
cltd
sbb
rcll
out
pop
mov
push
inc
loopne
xchg
call
dec
push
xchg
push
mov
shlb
add
lret
sub
scas
inc
sbb
adc
and
mov
mov
mov
into
push
sbb
push
adc
mov
push
out
test
popf
xchg
testb
push
imul
rcrb
rcrb
ss
mov
pop
imulb
fbstp
xchg
sub
add
add
add
stos
in
in
jg
fwait
sarb
jns
pop
popf
je
pop
loop
dec
xor
inc
ds
mov
int3
repz
dec
roll
call
sub
cld
add
inc
mov
sbb
jbe
ljmp
add
jg
into
inc
and
sub
mov
xchg
insb
js
in
jp
fwait
jnp
xor
enter
idivb
aam
push
xorl
and
sbb
test
pop
mov
pop
aad
and
cmp
imul
dec
jge
pop
call
adc
jo
mov
pop
inc
cs
loope
aaa
fsub
mov
adc
in
add
jp
aas
cmp
cmp
lcall
pop
sub
fldcw
inc
loop
cmp
movsl
sub
lret
xor
cmpb
pop
fstp
push
int
into
jmp
inc
mov
inc
lret
push
arpl
pop
mov
rcl
xchg
idivb
cwtl
int3
fwait
sbb
test
jo
xchg
pop
sbb
imull
ret
ljmp
je
loope
lret
and
int
mov
aaa
mov
pop
fbld
jmp
jns
aas
mov
shlb
je
ljmp
jne
cmp
mov
shr
jle
frndint
xchg
push
loopne
out
cmp
loopne
out
movsb
or
nop
adc
popa
mov
dec
fwait
mov
inc
xchg
adc
cmpsb
lea
sub
lds
pop
jecxz
fs
mov
xchg
pop
xor
ret
push
inc
inc
pop
cmp
fwait
inc
imul
ljmp
inc
add
stos
sti
cwtl
sub
sbb
xchg
mov
outsb
out
adc
icebp
jb
pop
rcll
dec
fs
mov
daa
mov
inc
pop
inc
cmpsb
daa
clc
mov
pop
movsb
mov
jnp
xchg
push
lret
add
out
push
xchg
ds
sub
iret
arpl
insb
cld
push
jno
xchg
mov
jo
shlb
adc
xchg
xchg
pop
and
xchg
and
test
insl
lock
fwait
in
cwtl
push
push
imul
movzbl
sub
push
out
inc
stos
pop
xchg
nop
cmp
movsb
mov
pop
jecxz
mov
add
jns
sarb
popf
pop
loope
sbb
lret
stos
pop
and
or
adc
mov
sti
or
push
jnp
xor
in
xor
adc
xchg
dec
add
rcll
sub
aad
mov
xchg
je
pop
pop
test
pop
cmpxchg
out
sub
subb
leave
push
jmp
lahf
cmp
mov
lock
inc
shll
cmovle
nop
outsl
jecxz
stos
push
aas
loop
repnz
or
pop
mov
add
push
and
push
xchg
int3
push
repnz
pop
into
mov
pop
lret
push
add
mov
sahf
pop
mov
pop
push
outsb
int
or
out
popa
sbb
jecxz
nop
push
fnstenv
stc
clc
out
add
xchg
cmp
aad
outsl
shl
cmpsb
sbb
test
arpl
sub
ss
jge
inc
orl
daa
arpl
xchg
sub
cmc
in
dec
xor
cmp
push
sub
cmp
jns
sbb
imul
call
out
fistpl
in
add
sbbl
jge
push
or
std
leave
xlat
pop
sub
inc
xchg
repz
in
cwtl
inc
int
xchg
pop
mov
push
lea
mov
test
xchg
inc
and
mov
pop
cmc
inc
or
or
popa
pop
adc
jp
sub
adc
cmp
mov
jo
cmp
push
rorl
cld
es
addr16
movsl
ds
mov
cltd
sub
lret
push
dec
cmp
sahf
cld
add
and
sbb
cld
mov
test
push
mov
ret
cmc
lret
cmp
aad
inc
jns
outsb
cwtl
nop
adc
out
and
cmc
mov
loop
shll
or
mull
dec
xchg
in
vpslldq
pop
int
jo
mov
loopne
push
pushf
adc
pop
fldt
insb
lods
int
pushf
fwait
scas
jae
ret
push
add
andb
xchg
cmp
or
jb
add
adc
sbb
out
push
daa
lret
jns
add
stos
jecxz
adc
in
mov
mov
enter
push
mov
or
dec
and
insb
push
stos
pushf
inc
pop
fs
lcall
and
jg
in
popf
lcall
mov
clc
shrb
fadds
loope
sbb
aam
mov
adc
das
hlt
orb
in
jl
push
fildl
pushf
push
push
insl
lret
testb
inc
imul
js
inc
jp
adc
push
inc
daa
push
pop
or
cmp
push
xor
pop
out
push
lods
inc
sbb
sbb
sti
sub
xor
rorl
ljmp
dec
das
out
xlat
add
jmp
xor
push
imul
cmpl
lds
dec
fucomip
shr
xchg
test
pop
lods
push
mov
xchg
sti
shr
std
sbb
outsl
add
and
mov
sbb
xor
sub
jae
push
cmpl
into
inc
fcomps
jbe
sahf
push
cmp
movsl
sub
inc
push
xor
arpl
aas
lods
and
mov
mov
push
xchg
mov
mov
adc
scas
xchg
jbe
inc
fiadds
push
into
notl
mov
jo
sahf
mov
add
add
jb
shlb
inc
clc
jecxz
jecxz
adc
jecxz
js
dec
push
adc
lods
ffreep
jg
add
pop
imul
xor
incl
push
pop
mov
adc
popa
mov
inc
push
cs
push
adc
ret
pop
mov
xchg
ret
dec
xor
bound
xor
inc
sub
mov
test
sub
enter
aad
daa
rolb
cmc
xchg
mov
mov
or
push
mov
xchg
add
mov
sbb
sbb
aas
pop
inc
mov
jp
mov
adc
icebp
fidivl
daa
xchg
les
and
popf
outsl
sbb
mov
add
xor
adc
sbb
mov
enter
insl
sbb
sub
mov
and
pop
jmp
cmpsl
out
cld
push
pusha
cmp
out
xor
repz
push
addr16
stos
shl
mov
jle
lcall
add
repnz
aam
inc
loope
cmp
or
subb
push
push
jo
scas
inc
or
cmc
pusha
push
xchg
jg
xor
or
lret
push
xchg
xchg
test
inc
repz
cmp
cmc
addl
and
lret
pop
cmp
mov
adc
jno
adc
fistpl
shll
stos
inc
push
push
sub
pop
enter
aaa
mov
lcall
int3
dec
add
cltd
or
mov
mov
mov
pop
push
daa
mov
aam
testb
pop
mov
dec
inc
popf
je
cld
pop
test
ret
push
cmp
mov
pusha
lea
mov
jmp
adc
mov
outsl
movsl
pop
out
pop
pop
sbb
inc
movsl
lods
push
cmp
and
sbb
cmp
mov
mov
push
xlat
call
pop
loop
mov
leavew
imul
sbb
jbe
movl
leave
and
dec
fisubrs
getsec
and
cmp
sub
mov
xchg
fdivl
sbb
mov
shlb
nop
push
out
cmp
mov
xor
andl
xor
adc
scas
adc
or
repz
std
mov
cltd
lods
or
fidivrl
enter
inc
sahf
or
in
int
add
push
pop
rcrb
mov
cmp
cmpsb
in
jnp
xor
xchg
mov
test
iret
and
add
test
leave
adc
sub
icebp
loope
stos
and
mov
mov
aaa
and
xor
test
dec
push
pop
clc
mov
inc
repz
rclb
out
push
adc
mov
in
mov
out
fdivl
and
mov
mov
mov
sub
push
push
pop
rcr
lods
add
dec
jo
and
out
cli
or
lods
mov
dec
divl
cli
mov
testb
lods
dec
cltd
mov
arpl
inc
lods
lret
dec
mov
mov
xlat
mov
std
aas
test
mov
mov
stos
jo
ret
inc
push
mov
inc
fbstp
mov
in
pop
ds
sub
cs
test
and
adc
jecxz
mulb
sahf
scas
into
rorl
mov
data16
push
shl
sub
dec
fwait
cmpsb
push
arpl
fistps
pushf
adc
push
fisttpll
push
repz
mov
pop
inc
sahf
cmp
add
sbb
xchg
pop
mov
pcmpeqd
aad
inc
shrl
leave
out
aad
add
or
adc
inc
jp
mov
mov
sbb
daa
lret
imull
shrl
dec
sbb
movsl
cmc
sub
and
sbb
sub
imul
adc
stc
les
sbb
add
jmp
sub
sub
sbb
cld
arpl
ret
pop
mov
roll
xchg
inc
sub
push
cmpsb
push
or
push
ss
pop
mov
ret
sbb
cwtl
pop
mov
dec
xor
rcrl
sti
fimull
fcomi
cmp
std
sbb
mov
pop
mov
movsb
pop
scas
adc
add
outsb
mov
mov
or
mov
xchg
jo
mov
sub
shlb
pop
mov
cwtl
mov
mov
push
xlat
stos
sub
sbb
sbb
lds
out
push
mov
dec
ret
mov
js
jbe
int3
inc
jbe
add
sub
xchg
inc
sub
lds
sbb
mov
dec
lods
mov
inc
call
nop
xchg
mov
cs
xor
sbb
mov
xor
nop
sbb
jmp
mov
pusha
sub
ss
fwait
loope
inc
adc
aas
jmp
cs
pop
sahf
popf
pop
test
aaa
mov
xchg
and
lcall
jb,pn
and
add
inc
and
iret
or
inc
lock
jge
repz
sbb
mov
push
aam
xor
cmp
push
rolb
mov
std
test
mov
cmc
out
cmc
test
cld
mov
jp
add
subl
mov
aam
mov
and
pushf
add
aad
xchg
pop
adc
imul
fldt
inc
bound
mov
mov
cmpsb
mov
or
inc
scas
cli
adc
lret
push
jge
and
jp
pop
fimull
dec
lcall
lret
icebp
pop
adc
adc
adc
int
jle
lcall
or
jmp
xchg
adc
ss
out
incl
clc
inc
call
rcll
insl
add
aaa
lret
mov
iret
add
test
sub
data16
jbe
and
leave
repnz
push
repnz
jmp
xor
jmp
test
ds
cli
add
das
mov
jne
lret
xchg
cld
movsl
lret
in
je
add
popf
jp
cld
push
mov
pusha
in
insb
inc
inc
call
leave
dec
lea
push
in
or
and
sub
cmovle
dec
pusha
jns
jnp
add
lods
movsb
and
mov
call
fnop
pop
push
jg
inc
mov
into
or
repz
scas
test
add
loop
out
out
push
mov
mov
push
int
and
sbb
and
xchg
call
movl
lea
daa
fstl
pushf
mov
xor
cmp
cmp
mov
and
fst
or
adc
imul
pop
xor
js
aam
scas
and
mov
xor
int3
or
pusha
aam
insl
pusha
xchg
adc
and
jne
movsl
mov
loopne
or
jl
imul
xchg
movsl
fstpt
mov
dec
rcrb
jmp
push
xchg
xchg
pop
pushl
or
insb
adc
test
addr16
loopne
aaa
fsubr
imul
movsb
xchg
push
xchg
and
mov
jg
out
or
movsb
pop
into
lret
lea
mov
xlat
and
add
sub
mov
sarb
ljmp
push
sbb
sbb
jo
mov
andb
movsl
into
je
shrb
and
jno
sub
scas
sbb
jge
icebp
xor
negl
cmp
in
jge
in
cli
xchg
cmpsl
mov
gs
lods
das
cmp
sti
adc
ret
xchg
aad
in
add
fdivs
gs
aaa
mov
fwait
lcall
mov
dec
pop
pop
pop
fldcw
mov
sahf
icebp
dec
sbbb
lret
adc
hlt
out
mov
test
push
adc
push
lods
enter
fcomps
ds
dec
cmp
leave
je
pop
les
lds
lods
rcrl
mov
inc
cmp
arpl
fimuls
pop
cmpsl
mov
fucomip
dec
movsl
mov
rcl
and
loopne
test
loop
sti
sub
sbb
nop
and
inc
leave
jne
jne
andl
icebp
cli
add
fcmovnb
pop
fcompl
jo
inc
pop
call
mov
cmpsl
jmp
flds
push
data16
jne
cmp
push
mov
mov
or
push
sar
stc
roll
or
sbb
mov
xor
sahf
jbe
scas
mov
es
mov
outsl
imul
les
xchg
stos
push
rorl
mov
dec
push
pusha
ffree
push
lcall
xor
and
add
jmp
or
jns
addb
cld
ss
cmp
sub
push
push
cwtl
jo
jmp
or
in
rorb
pop
sbb
fwait
pop
mov
sub
cmp
jns
jns
repz
xchg
nop
inc
cmp
cltd
sahf
pop
pusha
mov
leave
rol
inc
xor
mov
lcall
dec
not
push
stc
lcall
or
call
repnz
fcomps
or
or
mov
insb
pushf
mov
mov
sbb
adc
mov
dec
sbb
adc
gs
xchg
cmc
rcrl
jecxz
dec
nop
sub
jge
mov
jnp
mov
xchg
xor
mov
sub
xor
jne
into
outsl
jecxz
xchg
dec
enter
xchg
sub
mov
xchg
adc
ds
xor
or
jmp
dec
shrb
jnp
fidivrl
jmp
idiv
mov
test
jge
sub
cwtl
sub
jle
sub
addr16
jo
popa
cmc
cld
pop
pop
xchg
push
adcb
mov
push
out
push
jmp
int
and
out
movsb
ja
mov
inc
dec
aas
lock
xor
popf
jmp
ss
mov
jp
inc
cld
ljmp
add
mov
pushf
dec
lahf
les
and
inc
fmuls
dec
jne
sub
faddl
fldl
setne
sub
adc
lret
clc
and
sub
xchg
testb
out
and
divb
jl
add
sbb
cli
add
dec
lret
add
mov
std
jg
xchg
orl
out
notb
push
xlat
out
mov
ljmp
hlt
xorb
push
rolb
test
lcall
pop
sbb
mov
imul
sub
aam
dec
xchg
cmp
loop
sub
and
cmc
jmp
cld
mov
push
bound
popa
pop
add
cmp
cmpl
daa
mov
jmp
and
stos
cmp
lods
insb
pop
jae
mov
cmp
inc
repnz
push
cmpsb
aam
or
fadd
push
jl
ret
pop
daa
lret
js
sbb
push
jbe
mov
add
dec
out
lea
push
mov
xor
out
pop
cs
rolb
mov
divl
xorb
addr16
mov
in
mov
jns
jmp
add
addl
mov
fnstsw
repz
hlt
cmp
test
sbb
mov
les
xchg
call
or
leave
pusha
mov
fdivp
outsl
mov
mov
in
jne
insl
xor
mov
xor
lcall
add
shrl
imul
mov
mov
outsl
test
mov
mov
inc
movsl
cltd
in
sbb
push
xchg
and
test
aad
mov
pusha
out
cmp
add
int
cmpsb
rcrl
adc
and
push
pop
imul
adc
cmp
xchg
jl
test
out
push
popa
xchg
mov
data16
add
stos
push
sub
add
clc
ret
outsb
rorb
jb
cli
jo
shrl
lret
mov
fcomp
adc
hlt
add
dec
or
inc
loop
insb
xor
ja
mov
mov
mov
cld
nop
out
inc
xor
iret
mov
sub
lcall
outsb
hlt
and
add
add
push
xor
lea
in
dec
hlt
into
fldcw
mov
xchg
adc
or
jle
fwait
add
adc
push
outsl
sbb
jl
mov
jg
inc
add
adc
insb
push
sub
leave
insl
cmp
shl
pop
adc
mov
sahf
pushf
inc
int
fldt
imul
jmp
je
or
jge
lret
repz
pop
mov
int
popa
xor
mov
push
leave
dec
aas
int
or
add
aaa
hlt
and
repz
lcall
roll
idivl
pop
mov
xchg
mov
test
dec
mov
repnz
and
pop
push
cmpsb
cmp
addr16
cmp
push
or
and
mov
xor
sbb
sbb
and
xor
mov
daa
out
cmp
cmp
es
repz
inc
adc
pop
pop
aam
mov
pop
pop
stc
andb
repz
sub
cmp
out
out
mov
insl
into
add
lods
cli
arpl
out
loopne
mov
sub
pop
sub
sub
insb
lds
lcall
in
sbb
fcomp
add
push
or
jnp
loop
aas
and
mov
cmp
cmp
cmp
dec
outsb
and
pop
mov
mov
jnp
mov
jg
clc
insl
sahf
sbb
xor
jmp
repnz
fwait
and
sbbb
jg
hlt
mulb
mov
push
cmp
call
sbb
and
pop
sub
cmpsl
sub
shlb
mov
cs
ljmp
inc
fstpt
mov
aaa
and
adc
pop
scas
dec
ja
bound
mov
es
xchg
sbb
adc
jp
loope
icebp
movsb
call
mov
leave
mov
sbb
jnp
mov
dec
subb
das
and
out
loopne
fidivrs
int3
fwait
and
fwait
lods
out
dec
loope
adc
lahf
scas
lods
adc
pop
add
cwtl
xchg
dec
adc
shll
jns
into
cmp
rolb
fldl2e
adc
cmpsl
rorl
sahf
sub
das
pop
fnstcw
ja
enter
push
pop
scas
fimuls
cli
add
and
lahf
mov
into
inc
dec
ficoml
jns
fdiv
ret
mov
call
mov
int3
dec
push
cli
je
xor
hlt
add
subb
out
cmp
aad
sbb
mov
js
fsubl
dec
dec
pop
mov
in
mov
dec
mov
mov
xchg
sbb
push
les
push
lea
lds
ret
lret
stc
or
lret
and
fcompl
dec
jbe
add
and
loopne
insl
rclb
add
pop
sbb
lds
mov
mov
pop
dec
jle
rcrb
ds
les
lahf
mov
testl
sbb
int
mov
leave
sbb
std
mov
arpl
pop
int
jge
mov
sub
repz
and
lret
loopne
and
xchg
or
pop
rorl
clc
fxch
pop
push
gs
or
mov
lea
push
push
insl
lds
fcoms
cmc
sub
add
sbb
arpl
adc
cmp
push
inc
push
add
xchg
xchg
mov
in
cmpsl
cmpb
pop
push
jmp
jp
pusha
fldt
mov
test
inc
jmp
idivl
cmp
or
out
popf
or
jl
dec
lcall
daa
xor
add
sbb
dec
xor
or
sub
fnstcw
addr16
jmp
loop
mov
rclb
jmp
stc
gs
sbb
cltd
sbb
sbb
sub
push
cwtl
inc
xor
js
out
cwtl
js
dec
ror
xor
mov
and
adc
outsb
pop
or
sbb
enter
pop
adc
shlb
in
lock
adc
push
mov
jle
and
jbe
sti
aaa
jg
push
xchg
pop
or
insb
jno
or
mov
mov
mov
aad
and
add
ljmp
ss
inc
pop
cs
fidivs
retw
inc
addr16
ja
jae
fcmovb
rcrb
pop
into
push
insl
inc
sub
call
xchg
or
pushl
mulb
aaa
cmp
xchg
mov
cmp
scas
push
popa
mov
pop
movsl
sub
or
mov
and
js
cwtl
mov
jp
test
mov
testl
icebp
adc
popf
lahf
into
push
loop
arpl
and
ret
adc
push
fwait
dec
xor
lcall
lock
add
dec
xchg
pop
subb
ret
movb
xchg
leave
in
jb
inc
adc
int3
sub
sbb
outsl
mov
sub
inc
or
xor
xlat
cmp
out
pop
mov
mov
out
or
fnstcw
fisubrs
cld
xchg
dec
lock
fcmovnu
or
call
push
movb
sbb
jmp
add
cmp
test
cmp
push
jae
mov
push
xadd
mov
rolb
xor
xchg
and
lock
mov
cmovnp
imul
or
bound
push
rorb
lea
push
stos
xlat
testl
jno
mov
cmpb
sbb
data16
ds
fs
pop
andb
jb
psadbw
inc
fdivrl
push
xchg
dec
fdivl
mov
fidivs
sub
movsb
ror
fidivrs
das
push
dec
push
into
test
sub
xor
jl
pop
dec
and
ret
cld
mov
cwtl
xor
aad
xor
jb
xor
pusha
gs
scas
inc
out
orb
mov
push
jns
adc
scas
push
inc
outsb
jge
or
pop
pop
fwait
xchg
xor
add
xchg
jo
das
repnz
mov
lahf
scas
pop
push
push
mulb
pop
ljmp
ret
sbb
mov
mov
xor
ror
cmp
xchg
jl
movsb
xor
xchg
xor
sarl
fisubl
sahf
mov
vpmullw
call
mov
mov
ret
xchg
fistpll
sbbl
xchg
lds
fiadds
and
ja
xor
hlt
sub
aas
bound
les
sbb
adc
mov
jno
pop
sti
repz
pop
mov
dec
dec
pop
jnp
add
xchg
or
adc
pop
sub
dec
fdivs
pop
jno
lds
push
mov
and
loope
adc
pop
loopne
jb
sub
mov
jae
mov
pop
dec
stos
jo
out
aad
lods
leave
mov
pop
mov
in
xor
ja
mov
or
sbb
and
dec
xor
shrb
test
mov
mov
push
push
stos
mov
jmp
adc
jns
pop
inc
jae
and
xor
mov
ret
push
xchg
xlat
test
addr16
push
sbb
push
or
das
mov
cmp
add
cli
push
xchg
sbbl
jle
push
cld
jge
int
xchg
rcl
mov
sahf
ss
mov
xchg
mov
inc
daa
ljmp
sarb
sub
inc
push
std
mov
cmp
jmp
repz
sbb
dec
sub
and
xchg
imul
jnp
stc
xchg
push
stos
stc
fildll
push
dec
xor
daa
jmp
notb
and
insb
cmp
sbb
fwait
cs
push
or
cmc
arpl
fstl
pop
adc
repz
cmp
and
and
sbb
cmp
fs
and
add
ret
rol
jp
inc
push
aad
or
insl
sahf
mov
mov
lcall
lock
or
scas
cld
jnp
cmp
js
cli
aad
mov
or
inc
cmp
popa
pop
shll
mov
daa
rolb
cmp
sbb
xor
sbb
scas
out
pop
loope
cmc
jmp
call
adc
loop
cld
dec
inc
mov
xor
lea
movsb
enter
fmul
ja
jl
xor
call
pop
out
lcall
cld
stos
sub
lds
mov
iret
mov
rorb
clc
lods
fwait
in
in
jne
xor
or
jne
sahf
adc
adc
pushf
shrl
out
lea
push
loope
xchg
int
mov
mov
xchg
cmp
or
inc
pushf
shlb
push
mov
out
repz
jnp
imul
sbb
xor
clc
ds
aaa
cld
sbb
or
outsl
inc
int
mov
ss
xchg
sub
test
jb
sub
fstpt
mov
in
hlt
faddp
scas
lds
adc
push
fs
sahf
dec
out
int3
cmpsl
xor
jne
loope,pt
in
popa
xchg
jns
out
push
adc
dec
es
shrb
add
cmp
cmp
xchg
xor
imul
xchg
pusha
lahf
xor
pop
bound
das
aam
jne
addl
out
mov
xor
stos
lret
clc
pop
repnz
mov
enter
sbb
xchg
jb
cmp
sbb
or
stos
ja
iret
stos
mov
and
clc
pop
ss
stos
lea
pop
adc
out
inc
pop
js
cmp
les
test
xchg
jg
or
push
pop
or
jp
out
out
faddl
xor
setns
scas
imull
jnp
sbb
call
lahf
sbb
lcall
adcb
test
outsl
addl
cli
in
pop
xchg
jmp
dec
inc
push
jle
into
inc
inc
add
in
js
pop
das
add
mov
mov
mov
movsl
adc
lods
scas
outsb
jae
xor
dec
mov
aaa
inc
push
adc
sbb
enter
add
pop
add
pop
fisttps
into
icebp
cwtl
roll
test
mov
push
fsubs
loope
mov
jmp
xorb
adc
pushf
insl
popa
push
mov
mov
adc
inc
dec
leave
jmp
xchg
xchg
mov
cmpl
push
jp
fs
and
mov
hlt
mov
dec
addr16
mov
insl
adc
xchg
sbbl
mov
out
cmc
sub
shlb
xor
add
mov
adc
mov
lods
repnz
lret
xchg
shll
lods
mov
xor
jbe
addr16
enter
mov
add
sahf
aas
adc
xchg
roll
fwait
and
enter
lcall
cmp
pop
inc
cli
ljmp
jmp
mov
ret
or
sub
sub
outsl
arpl
jbe
inc
aam
mov
repz
dec
testl
mov
mov
jle
repnz
and
int3
mov
lds
ljmp
jecxz
push
loop
and
popf
rcrb
pop
adc
cltd
or
dec
and
lahf
adc
jne
add
cltd
enter
xchg
outsb
testl
sub
and
scas
dec
mov
jnp
xor
ss
jmp
pop
push
sbb
xchg
repz
add
mov
ds
xchg
pop
out
cmpsl
int
fcoms
int
mov
dec
or
loope
adc
and
insb
faddp
lahf
cltd
data16
mov
sarb
mov
aas
pop
mov
push
mov
fldl
loopne
dec
outsb
aad
pop
adc
pop
mov
xchg
sbb
popa
imul
jno
or
movsb
shll
and
mov
add
sarb
hlt
add
test
cmp
inc
mov
into
inc
inc
lods
mov
and
ds
test
rcrl
idivb
outsl
std
mov
aad
clc
xorl
test
and
cmp
xchg
xor
cmpsl
dec
adc
call
test
mov
xchg
and
fsubr
cs
dec
jmp
dec
jbe
xor
cmp
hlt
inc
pop
icebp
xchg
lahf
testb
xchg
fistpl
jecxz
mov
hlt
inc
adcl
jbe
or
add
push
pop
sub
pop
jne
or
inc
sub
mov
sub
push
xor
das
xchg
nop
pop
nop
clc
les
out
call
and
test
mov
call
or
jmp
popa
std
inc
aas
inc
xor
cmp
decl
out
arpl
enter
push
cld
loope
repnz
leave
test
xor
xchg
out
mov
xchg
xchg
ja
mov
stos
lret
cmp
out
push
sub
and
popf
je
inc
insb
mov
sahf
mov
in
and
sub
add
xchg
sbb
or
mov
xchg
mov
fstl
xchg
push
sbb
scas
jecxz
xorl
int
icebp
test
mov
addr16
addr16
mov
pusha
mov
fcomi
dec
rcrl
add
add
ret
enter
ds
scas
orb
adc
push
mov
inc
mov
cld
inc
addr16
push
jns
std
inc
mov
xor
fsubrs
sarl
inc
icebp
and
out
jmp
pushf
mov
jns
dec
cmc
das
jns
movsl
mov
repz
imul
mov
out
and
enter
insb
mov
jl
add
call
push
rclb
mov
add
stos
dec
pop
cld
enter
shll
sub
sar
push
call
sbb
cmp
ucomiss
out
jl
lods
cmp
pusha
pusha
sub
adc
sub
inc
pop
daa
mov
popa
jp
mov
shlb
or
mov
adc
add
sahf
cmpsb
lcall
or
sub
lcall
push
jne
or
sub
sub
xor
std
and
xlat
loopne
and
jns
imul
les
stos
inc
inc
pop
cli
xor
bound
sub
mov
rclb
mov
mov
cmp
adc
fstp
dec
mov
pop
and
xor
mov
mov
ss
ret
jle
mov
dec
aad
mov
inc
jb
sbb
cmpsl
aas
cltd
jmp
mov
jns
andb
inc
cmp
fs
lds
pop
std
xchg
xchg
inc
push
and
out
pop
in
adc
fldlg2
ret
popa
xor
daa
ret
xchg
xor
fstpt
iret
and
sbb
jo
int
outsb
xor
lock
inc
jg
fs
flds
jns
or
out
mov
or
cs
cld
fcomp
sbb
or
xor
fnsave
in
aas
xchg
xor
int
mov
pop
or
aam
and
dec
push
ljmp
scas
cmpsb
mov
sub
sbb
std
outsb
cli
and
ss
out
inc
in
aaa
gs
inc
and
add
mov
xchg
and
and
jnp
and
cli
xor
lret
int
jmp
movsl
jnp
sbb
xor
mov
mov
pop
push
adc
xchg
and
fcomps
pop
add
rclb
adc
or
or
arpl
cmp
movl
aas
gs
nop
dec
in
mov
add
or
fisubrl
mov
mov
enter
cltd
or
ficoms
jns
lods
stc
sub
and
stc
xlat
or
out
xor
dec
fcompl
pop
lds
fwait
loope
popa
jg
push
cmp
mov
rcll
cmc
add
jnp
lret
dec
and
sbb
ss
cld
lahf
add
xor
mov
in
fwait
int
iret
scas
ljmp
and
cs
into
or
cwtl
pop
lock
inc
add
xor
faddp
daa
leave
lret
xchg
je
pop
sbb
jmp
fwait
sahf
lock
inc
clc
adc
cmp
xlat
adc
popa
nop
in
pop
sbb
add
pop
jg
fsubrs
dec
push
std
pushf
in
jl
adcb
inc
add
inc
repz
xrelease
test
jb
pop
js
fwait
in
out
movsb
jo
negb
adc
and
and
sbb
in
add
adc
mov
fnstsw
pop
rcrb
aad
or
xchg
lret
out
or
and
xchg
push
leave
sarl
fnstsw
mov
rol
ds
inc
sub
xchg
outsl
lea
sbb
push
sub
or
xor
mov
arpl
or
mov
cli
out
add
adc
iret
bnd
dec
out
xchg
cmpsb
in
xchg
inc
add
in
dec
lock
stc
call
les
cltd
xchg
repnz
gs
call
cmp
bound
pop
sti
loop
push
push
adcb
add
sbb
jae
xor
faddl
or
faddp
xchg
sbb
lods
js,pn
or
lods
and
pop
fsubp
repz
les
adc
cmp
out
push
aas
test
andl
dec
and
mov
pop
mov
hlt
bound
sub
xchg
push
pushf
pushf
lock
in
lock
mov
xchg
push
or
ss
mov
lock
hlt
movsb
mov
cmp
ja
lods
sub
insb
repz
imul
adc
push
imul
loop
sbb
sahf
cmpsb
push
push
mov
sub
in
sbb
ss
in
imul
xor
insl
fsub
addr16
sahf
xchg
jnp
vpmulhuw
push
mov
test
or
jns,pn
gs
cmc
aam
pop
fs
push
cli
sbb
xchg
bound
dec
add
lret
sub
cmp
in
pushf
mov
pop
and
inc
fiadds
xchg
fistpll
cmp
shrl
inc
out
cli
or
mov
test
das
adcb
gs
daa
ljmp
xor
movsb
pusha
jg
int3
adcl
push
push
xchg
lea
sbb
xchg
lret
xor
iret
dec
jb
jmp
and
fld1
testl
xor
add
subl
sarl
repz
popa
mov
sub
lds
mov
int3
jl
fists
jbe
jp
pop
pop
mov
int
ret
ret
fildll
adc
push
popf
sbb
xor
jp
orl
and
jnp
push
adc
sbbb
das
sbb
cli
jecxz
mov
outsl
push
inc
mov
inc
aaa
xchg
mov
subl
imul
repz
mov
data16
fcomp
mov
jl
dec
mov
jbe
out
lret
cli
mov
jo
rcrb
mov
xor
loop
lock
stos
jno
movsb
mov
jp
push
dec
pop
fistpl
or
lods
mov
hlt
xchg
sbb
dec
ja
jmp
and
sbb
scas
adc
push
out
cmc
loop
inc
dec
cmpsb
out
enter
sub
mov
mov
repnz
pop
test
in
nop
xchg
scas
mov
pushf
movsb
xchg
int
push
mov
cwtl
lea
mov
sbb
sbb
dec
out
pop
inc
gs
dec
setne
dec
insb
mov
mov
enter
push
std
jp
cld
push
jle
push
add
xor
sub
enter
sbb
rep
pop
adc
jle
add
xor
lret
sti
pop
mov
ret
mov
sbb
add
movsl
sbb
enter
or
add
dec
push
popf
xor
sbb
and
cwtl
push
fwait
push
mov
cmp
sbb
incb
orb
test
pop
in
pop
pop
cltd
icebp
std
pushf
movsl
add
sub
xchg
xor
jp
pop
pop
push
cmp
ljmp
add
sarb
ffree
sbb
xor
loop
fbstp
les
test
push
sahf
pop
loope
cs
and
and
popf
fiaddl
mov
enter
stc
out
sbb
lods
mov
addb
or
sub
or
jle
xchg
sub
inc
pop
out
jge
mov
dec
xor
mov
add
sub
sub
pop
mov
dec
jmp
add
lahf
rorb
add
pop
sub
insb
nopl
mov
in
jp
loopne
or
inc
hlt
dec
loop
dec
xchg
in
xchg
adc
cmp
loopne
daa
ljmp
xchg
aas
fnstsw
lret
je
icebp
xchg
cmp
repnz
bound
cmpsl
adc
dec
pushf
pop
xchg
stc
cmp
in
stos
mov
add
popf
fcomi
dec
cmp
lds
rorl
xlat
pushf
and
cmp
test
hlt
sbb
xor
mov
lods
shll
and
xor
into
inc
xchg
popf
jno
clc
add
add
dec
mov
idiv
std
mov
lcall
out
fs
lcall
sub
jo
in
push
inc
jo
dec
leave
rorl
insl
xchg
push
or
mov
sbb
dec
push
jl
bnd
mov
es
adc
cmp
js
lret
imul
jne
pop
jne
dec
mov
xchg
ret
sub
adc
imul
and
es
xchg
dec
jecxz
stos
aad
orb
cmpsb
js
outsb
dec
pop
dec
cmp
inc
mov
subb
lahf
fwait
aam
int3
sub
das
xorb
cltd
out
inc
mov
sub
insl
xchg
sbb
cmp
xor
adc
mov
mov
adc
rolb
xchg
mov
test
or
ret
xor
push
or
jns
cld
cwtl
pop
imul
or
test
cmp
lea
and
sbb
and
jl
push
test
jmp
add
pop
adc
xchg
mov
gs
mov
scas
sub
mov
les
insb
cmpsb
push
shl
repz
addr16
push
sbb
ret
js
mov
inc
in
in
test
les
repnz
push
mov
lret
mov
cmp
divl
scas
add
sbb
or
dec
dec
aam
int3
mov
insb
jnp
lcall
fdivr
push
mov
ss
int3
or
cld
mov
testl
insl
movsl
push
pop
outsl
or
popf
and
aas
sub
add
mull
cld
das
cmc
adcb
sbb
test
pushf
arpl
bswap
or
xchg
inc
add
in
ljmp
or
pop
adc
jnp
mov
push
cmp
push
nop
jmp
imul
fdivrp
and
push
ret
dec
std
idivb
push
movsl
sbbb
jae
adc
cli
in
shl
leave
pop
cld
movl
xchg
mov
aam
sub
mov
clc
jae
mov
adc
shr
imull
push
cwtl
loope
movsl
cwtl
jns
jo
gs
cld
idiv
arpl
mov
data16
outsb
mov
adc
xor
dec
mov
rcl
sti
loop
outsb
ljmp
sarb
sti
sbb
xor
sbbl
cwtl
dec
les
xor
loop
ss
xor
cmp
shrl
and
loop
repnz
dec
outsl
lods
loope
out
fsubs
mull
adc
sbb
ret
in
sub
outsb
loope
sbb
aad
testb
jno
lea
enter
xor
or
mov
push
jb
inc
call
cltd
inc
stos
lret
sbbb
mov
push
andl
and
inc
xor
push
testb
mov
push
or
sub
lcall
jge
xorl
shlb
scas
aad
data16
movsb
mov
js
aas
mov
and
mov
cmp
mov
cltd
sub
and
mov
pop
push
insl
xor
loopne
fs
sar
pop
cmp
shlb
add
aaa
sbb
mov
ja
out
mov
sub
mov
mov
lcall
inc
mov
adc
and
ljmp
lods
mov
or
push
cmp
outsb
pop
mov
cmp
clc
push
scas
rorl
jnp
dec
add
or
and
mov
mov
push
mov
xchg
inc
add
cmpb
mov
pop
push
pop
add
cs
adc
into
nop
notb
mov
ds
inc
dec
or
repnz
xor
dec
mov
adc
in
stos
maskmovq
testl
add
in
out
ss
loop
hlt
dec
inc
andnps
adc
test
bound
ja
dec
jge
hlt
pop
cltd
or
je
mov
xchg
jno
push
arpl
sbb
sub
mov
mov
dec
mov
adc
imul
sbb
loopne
xchg
sbb
push
fs
into
repnz
mov
jg
or
mov
dec
fwait
adc
pop
ret
push
mov
push
je
and
in
repnz
es
scas
cmp
popa
popl
call
repz
in
sbb
lods
addr16
lahf
mov
inc
jae
mov
cmp
mov
jl
sbb
dec
adc
shlb
mov
std
pusha
jns
jb
leave
mov
mov
lahf
lods
dec
test
enter
mov
or
inc
dec
popf
push
notb
aam
rcl
sbb
jnp
push
lret
hlt
add
test
mov
mov
add
or
push
adc
scas
jo
sbb
outsb
mov
aas
dec
mov
pop
jge
pop
mov
mov
sub
adc
out
inc
loopne
loop
sub
sub
xor
sbbl
inc
add
cmp
jecxz
out
and
jle
cmp
pop
mov
adc
sahf
leave
call
scas
ss
sahf
jge
mov
scas
sbb
inc
loopne
daa
and
js
enter
movsl
outsl
mov
mov
call
adc
lods
push
jo
repnz
cmp
inc
cmp
aaa
cmpsb
mov
lock
std
xlat
cmpb
imull
sub
stos
cmpsb
in
scas
in
sub
adc
fisttps
jg
inc
cmp
cmp
cmpsl
mov
cmp
cwtl
jae
adc
jb
and
pop
stos
mov
ret
mov
insb
mov
push
insb
imul
mov
jae
pop
mov
roll
sub
cmp
mov
gs
das
push
ss
int
xor
xlat
jae
js
das
adc
add
gs
outsb
iret
sti
lods
xchg
adc
adcb
test
subb
insl
enter
xor
inc
test
xchg
sbb
loope
das
fisttpll
mov
sub
and
sbb
cmp
xor
and
and
jns
dec
aas
mov
rorb
cwtl
lret
hlt
outsb
xchg
gs
dec
inc
ds
mov
idivb
lods
dec
int3
lods
ljmp
loopne
pop
pop
push
popf
popa
push
cmp
push
int
and
add
sar
sub
divl
rcrl
mov
stc
dec
push
fildll
popf
ja
out
aad
inc
mov
inc
cmp
stos
xor
or
lcall
hlt
dec
pop
movsl
adc
cmp
mov
lds
or
jmp
dec
cmp
mov
jge
inc
jbe
shl
aad
ds
mov
jae
push
inc
sub
pop
sub
bound
mov
call
shrb
dec
dec
cmpsb
sub
std
cli
and
add
push
mov
xchg
pop
scas
inc
add
xchg
not
mov
pop
mov
fbstp
repz
cmp
sbb
xchg
adc
pop
adc
fsubr
jmp
shlb
xorb
xchg
lods
jl
gs
and
orb
je,pt
inc
sbb
movb
inc
jnp
loopne
xchg
push
inc
leave
inc
jmp
loop
out
adcl
insl
push
mov
iret
imul
jmp
nop
cmp
stc
aas
mov
sub
and
ret
imul
mov
loop
enter
adc
fldcw
enter
fs
cmpsb
lea
in
sub
jmp
roll
ficoms
or
bound
stos
pop
out
lods
dec
cmp
push
pop
out
nop
mov
nop
lea
mov
rcll
xor
insl
xor
data16
cmp
lods
std
or
inc
ss
fbstp
push
sbb
push
or
test
cmc
pushf
insl
test
xor
iret
jae
icebp
pop
xchg
sub
dec
cltd
jge
and
jb
mov
push
movsb
in
sbb
stos
or
addl
movsl
rol
lods
cli
jl
call
dec
adc
mov
mov
pop
imul
jo,pt
scas
in
xchg
inc
inc
inc
mov
mov
push
cmp
pop
aaa
and
stc
mov
sub
imul
cmp
jae
inc
cmp
cld
add
test
xchg
and
push
stos
js
pop
les
loop
add
test
nop
jp
rol
push
rorb
pop
or
and
pop
dec
pop
das
sbb
push
sbbb
jns
faddl
dec
and
fnstcw
push
aaa
pushf
mov
mov
jbe
rcrl
xchg
les
mov
mov
jne
xlat
gs
lret
add
enter
insb
imul
adc
adc
mov
xor
enter
or
cmpsl
cmp
sbb
or
fs
fimull
rcrl
shrl
dec
jge
mov
lcall
ja
push
mov
mov
pushf
out
add
mov
fisttps
mov
mov
cld
xor
out
in
and
dec
es
add
jne
insb
and
pusha
jno
inc
sbb
mov
push
sub
les
mov
sbb
pushl
xchg
pop
js
add
push
mov
sbb
push
cltd
dec
cmpsl
jmp
lret
add
addr16
push
jp
je
jne
leave
jne
movsl
addr16
inc
sbb
pop
les
or
jne
ficompl
xor
addb
sti
mov
ss
add
jge
aad
dec
bnd
jae
mov
insb
sbbb
pop
pusha
movsl
test
movsl
sbb
inc
frstor
out
mov
inc
adc
shlb
inc
in
push
jl
loope
mov
and
xchg
mov
out
dec
das
dec
lcall
lods
inc
xchg
mov
das
pop
xlat
aas
jno
cwtl
xor
jmp
cwtl
jbe
jns
jae
js
jge
jl
dec
mov
into
mov
jge
sbb
mov
int3
nop
popf
sub
mov
repz
aad
imul
fisttps
lods
jno
fmull
sbb
mov
scas
test
xchg
js
pop
scas
dec
int3
lods
lahf
shll
out
js
sub
fidivs
sbb
xor
add
cmp
leave
popa
in
orl
rcll
lods
dec
sbb
iret
pop
out
jo
sub
and
mov
jns
xchg
lahf
lret
push
fstps
xlat
mov
filds
pusha
test
mov
lods
dec
jns
lret
or
sub
scas
std
inc
jnp
mov
faddl
popa
dec
cltd
rcll
push
jno
out
subb
aad
addl
pop
or
push
jle
mov
leave
push
imul
loope
sbb
inc
aaa
adc
pop
sub
mov
and
xor
sbb
shlb
scas
add
adc
sub
jg
std
fidivl
nop
out
mov
pop
dec
das
in
dec
pop
loopne
mov
popa
sub
sub
je
push
push
js
aas
pop
pop
fnsave
jp
cmpsl
cwtl
bound
mov
mov
out
addl
pop
dec
jb
mov
aad
add
dec
xor
push
rorb
and
mov
rol
cmp
clc
iret
enter
ja
adc
cs
cli
addr16
mov
xchg
int3
jg
adc
sbb
leave
iret
dec
movsl
negl
mov
push
push
xor
imul
je
mov
outsb
add
repnz
fwait
lods
fs
sbb
fwait
adc
out
xor
in
sbb
pop
call
xchg
inc
movsb
cmp
adc
adcl
aaa
xor
xchg
arpl
mov
xor
adc
mov
push
dec
xchg
pop
jp
popf
cmp
jo
lret
ja
test
inc
sub
xor
push
fildl
test
inc
outsb
fstl
arpl
sbb
mov
cmc
daa
add
rorl
or
addb
mov
cwtl
ret
dec
test
cmpsb
adc
cwtl
cmpsl
push
stos
ret
xchg
xor
adc
adc
daa
pusha
mov
jmp
loop
test
pop
mov
pop
out
or
lahf
ljmp
inc
into
out
sbb
cmp
adc
mov
imul
fwait
inc
and
std
out
out
mov
aad
loope
lcall
jp
lods
call
xchg
xchg
stc
mov
pop
rcll
mov
mov
dec
iret
fs
hlt
cmp
push
add
aaa
inc
idivb
push
gs
clc
fdivr
and
jmp
ret
push
push
dec
cli
or
cmpsl
cld
fists
in
jecxz
out
pop
sbb
enter
out
mov
jle
jnp
mov
inc
add
xlat
ja
jo
jecxz
add
and
lea
xchg
hlt
mov
lods
jnp
sbb
jp
inc
ja
add
xchg
and
add
push
repnz
add
inc
pop
xchg
jmp
add
btc
jbe
and
movsl
movsl
movl
inc
and
sbb
dec
cmc
outsb
int3
add
add
push
jl
loopne
push
mov
push
fldl
cmp
lcall
aas
push
pushf
fsubl
pop
stc
mov
mov
push
leave
test
ljmp
mov
jg
repnz
leave
xchg
jge
pop
nop
cmpsb
mov
fmull
cmp
xor
les
fidivs
imul
push
add
ret
push
or
rolb
sub
divb
js
mov
call
testb
shrl
adc
mov
divl
enter
dec
sbb
ljmp
ss
or
inc
sub
jl
mov
sbb
push
add
inc
dec
cmp
inc
adc
fadd
sub
adc
dec
adc
xchg
adc
push
jl
jg
or
sub
dec
push
aam
pop
movsb
into
pop
lret
push
mov
adc
pop
aam
clc
mov
ret
push
test
xchg
jg
icebp
dec
into
xor
adc
push
inc
xor
xchg
and
push
add
cltd
xor
dec
sub
pop
dec
pop
inc
outsl
les
gs
push
jo
push
bound
xor
add
pusha
test
inc
js
nop
dec
push
int3
dec
adc
inc
imul
loop
enter
push
mov
mov
add
mov
cltd
xchg
adc
pop
mov
xchg
xlat
icebp
mov
sub
iret
mov
jecxz
orl
lret
ljmp
cwtl
and
stos
sbb
gs
push
ret
push
jae
sbb
push
pop
or
test
xor
push
xor
mov
push
sbb
ljmp
mov
sub
and
sbb
xchg
pop
gs
movsb
loopne
pop
or
push
sti
push
sbb
and
and
adc
and
mov
nop
add
shl
stc
pop
shll
pop
dec
mov
aaa
mov
ficoms
mov
das
mov
xlat
xchg
je
mov
shll
mov
pop
ret
push
jle
ret
fnstsw
dec
es
cmpsb
cmp
mov
or
fs
fstl
pop
imul
loope
jge
cld
pop
in
push
shll
jae
adc
add
xchg
testl
movsl
mov
punpckldq
loopne
inc
inc
sbb
add
fs
inc
cltd
repnz
fcmovu
clc
dec
notb
frstor
pop
repnz
punpckhdq
mov
jbe
push
or
cmc
dec
mov
in
fcomi
aas
xlat
mov
hlt
int3
je
cmp
lret
aaa
pop
movsb
sbb
seta
or
inc
add
mov
xor
push
fsincos
pop
mov
mov
jno
call
sbb
arpl
scas
imul
mov
ss
sbb
xor
gs
mov
js
fisttpl
sbb
stos
daa
popa
mov
push
lret
mov
cld
push
jge
adc
jecxz
xchg
lret
pusha
push
pop
out
push
ltr
cltd
adcb
aas
mov
outsb
test
movb
cwtl
enter
inc
cmp
gs
shrl
dec
pop
ficompl
or
sbb
cmp
inc
adc
dec
std
cmpsl
inc
jmp
add
fcoml
lea
sbb
lock
cmc
dec
mov
rcrb
cld
iret
jne
scas
imul
ja
cmp
dec
gs
dec
cmp
cltd
pop
int
inc
and
push
arpl
test
cmp
pop
in
add
dec
jg
dec
inc
inc
pop
mov
ret
subl
sbb
rolb
xchg
push
push
xor
add
pop
push
outsl
icebp
popf
cld
add
mov
fistpll
push
lcall
and
jge
loopne
pushf
mov
mov
xor
push
push
addr16
dec
or
sbb
mov
hlt
sbb
lods
lods
outsl
add
jp
mov
pop
movsl
fimull
daa
adc
or
jae
pop
xlat
repz
mov
pop
fldcw
insl
dec
xor
enter
push
jne
test
jno
push
stos
or
xor
pushl
bound
jecxz
sub
ja
cltd
popf
jbe
popa
mov
in
jae
xor
pop
icebp
int
int
insb
mov
xchg
icebp
and
cld
and
sbb
testl
imul
maxps
add
std
add
aad
pop
fdivr
mov
clc
cmp
loopne
jmp
mov
enter
cmpsl
jnp
sbb
dec
and
cmpsb
into
not
lods
push
and
adc
jmp
push
cmp
les
dec
stos
fbld
mov
adc
jp
sub
pop
mov
dec
add
ret
jle
je
insl
adc
or
mov
xchg
push
add
hlt
outsl
inc
insb
push
dec
nop
enter
fnstcw
js
or
or
clc
fistl
test
ss
test
pop
les
dec
gs
arpl
mov
jb,pn
push
cmc
pop
enter
and
jecxz
adc
aad
jp
jb
inc
push
daa
inc
mov
jne
hlt
pop
xchg
popl
inc
loop
movb
or
inc
in
mov
test
jne
arpl
push
cld
xchg
adc
jge
jp
clc
xor
insb
andb
dec
ret
loope
jmp
sti
cltd
shlb
cmp
in
dec
cmp
cmp
sub
into
in
popa
lock
das
outsb
inc
test
mov
cmpsb
inc
ret
imul
lret
popf
and
call
negl
test
inc
push
push
or
sub
out
jg
xor
in
and
adc
mov
mov
sub
jnp
mov
js
mov
or
fsub
call
fisubl
icebp
mov
pop
push
push
jecxz
movsl
sub
sbb
mov
call
mov
jnp
adc
into
xchg
lods
adc
xor
mov
fsubl
repnz
cmc
ret
xchg
xor
bound
imulb
pop
insl
mov
les
leave
mov
or
ficomps
jne
lret
mov
xchg
rcrl
stc
ret
add
and
in
xor
sbb
or
push
scas
and
cs
push
jns
and
pushf
lods
adc
mov
cli
xchg
lods
rorl
sub
dec
sub
pop
in
sbb
fistps
outsb
push
mov
shll
sti
mov
mov
pop
imul
jae
cmp
jmp
cmpsl
movl
cld
outsl
add
jle
popf
mov
push
enter
add
adc
dec
sub
cmpsl
mov
inc
call
ss
dec
ja
push
jle
pop
push
xrelease
pushf
or
inc
loop
cmp
fs
add
in
or
into
pop
testb
jecxz
jns
cmp
aas
pop
dec
call
aaa
mov
pop
jmp
test
jne
mov
test
push
ljmp
dec
sbb
add
dec
adc
sub
mov
mov
popf
xchg
push
sarb
in
sbb
mov
pop
cmpsb
jae
mov
and
ret
dec
addr16
sub
jae
pop
mov
push
push
inc
shlb
in
roll
or
mov
fildll
mov
lcall
xor
lahf
fsubl
aas
xchg
test
hlt
mov
xchg
inc
sub
ret
lock
fchs
out
bound
outsl
test
mov
inc
or
imul
fs
loope
xchg
cmp
or
lret
addb
jns
outsb
roll
mov
repz
sbb
in
adc
xchg
add
mov
xor
cmp
mov
les
pop
or
ss
cld
cmpl
fs
stos
sbb
inc
dec
xor
lock
sahf
out
arpl
mov
cmp
sarl
mov
lods
cmp
imul
add
inc
dec
adc
mov
or
fsubrl
mov
dec
mov
sbb
mov
adc
xchg
nop
xor
jnp
push
xchg
or
popf
xchg
pop
popa
xor
cmp
push
int3
test
cld
xor
mov
imul
push
call
shll
and
shrb
lret
mov
insl
sbb
add
pop
into
clc
xchg
test
mov
lods
or
cld
cmp
jmp
sbb
push
in
pop
xorl
mov
xlat
or
mov
ret
inc
dec
repz
ja
mov
xor
mov
jmp
cmp
xchg
push
push
push
cmp
and
addr16
pushf
mov
test
test
push
mov
xchg
loopne
pop
push
out
dec
shrl
or
mov
dec
mov
or
fidivrs
xchg
or
inc
test
sti
adc
int3
lods
inc
out
ss
sub
cld
mov
sub
dec
scas
cld
bound
pop
and
or
cwtl
cltd
cld
insb
sub
aaa
std
or
xchg
fcoml
dec
push
stc
imull
inc
pop
push
xor
mov
inc
xchg
jno
stos
and
and
lret
div
popf
mov
sbb
repz
xor
int
push
das
push
xchg
sbb
out
in
mov
andl
cltd
sub
lret
roll
arpl
dec
adc
push
jb
jnp
test
dec
pop
stos
push
cli
and
adc
mov
and
dec
dec
lret
test
sub
mov
mov
aas
out
dec
mov
lock
jmp
push
cmp
mov
aad
adcb
out
pusha
xchg
aad
in
push
mov
lcall
sbb
js
pushf
repz
lock
es
jmp
out
into
jecxz
dec
stc
int3
ljmp
jecxz
adc
lret
insl
or
aam
jbe
ds
cmpsl
xor
fs
xchg
rorb
or
fwait
ret
shl
in
or
pop
mov
in
sub
inc
adc
pop
ret
mov
push
jmp
jb
xchg
mov
shrl
sbb
and
nop
cmpsb
sub
cmp
fadd
in
pop
sbb
cltd
aas
sbb
jl
pusha
or
mov
je
adcb
cwtl
lds
jg
aaa
shrl
push
enter
dec
in
xchg
pop
fistl
mov
adc
into
jge
outsb
cmp
cmc
or
and
pminsw
stos
out
jb
push
cmp
mov
addr16
push
inc
bound
clc
divl
aad
movsl
dec
inc
rol
or
mov
inc
sahf
mov
push
icebp
je
pop
enter
je
fistpll
insl
ja
pop
jp
xchg
rcr
add
loopne
add
pop
add
mov
aaa
shll
mov
xchg
xor
pop
ret
dec
cmc
repnz
lods
cli
jne
das
int
push
xchg
pop
pusha
dec
push
nop
adc
cmp
jnp
lods
jnp
dec
dec
gs
push
or
push
mov
sub
stc
sbb
dec
jl
lcall
cmp
adc
push
out
mov
and
add
out
movl
sub
mov
adc
push
adc
or
shlb
sub
sti
bound
out
enter
inc
and
adc
mov
cmpsb
push
in
dec
rcrl
push
insl
fidivs
insb
ja
out
xor
pop
pop
xor
dec
test
aas
or
jno
mov
mov
sbb
mov
xor
jle
sbb
pushf
mov
mov
aad
mov
cwtl
out
cmp
jle
test
cmp
xchg
test
xchg
push
imul
mov
les
testb
pop
subb
jnp
push
int3
lods
pop
movsb
pop
mov
or
jle
cmovl
in
daa
movsl
adc
es
outsl
adc
rcrb
imul
pop
jp
pop
jb
jp
xchg
imul
xchg
xchg
and
mov
inc
pop
xchg
loopne
pop
inc
jmp
sbbb
ret
repnz
imull
test
movsb
movsl
filds
ds
subl
rcrb
push
out
sub
nop
sbb
lods
call
adc
adc
dec
fcoms
pusha
lea
popa
inc
dec
xor
call
add
or
or
adc
fists
jns
push
adc
xor
xchg
mov
popa
imul
inc
mov
in
mov
jne
imul
pop
iret
xor
ljmp
cld
jge
in
mov
or
mov
sarb
mov
imul
lods
dec
lock
or
fs
and
push
push
dec
inc
pop
cmpsb
fdivs
adc
cmpsb
sub
pop
cmp
push
stos
stc
stos
aad
hlt
sub
rcll
enter
inc
mov
rcll
ret
daa
pop
add
push
push
scas
mov
push
sbb
pop
mov
jecxz
test
adc
add
push
adc
xchg
test
xchg
xor
inc
mov
sub
aaa
stos
jmp
xchg
push
repnz
rolb
jp
out
inc
pop
out
ljmp
mov
pop
push
or
mov
aad
cmp
sub
pop
lret
inc
sbb
jle
std
icebp
mov
shrl
inc
push
lock
xchg
xchg
jle
bound
test
and
dec
clc
pop
mov
cli
jecxz
push
or
lock
add
inc
and
mov
in
or
int
jne
jns
sbb
repnz
pop
testb
push
pop
test
sub
push
jle
int
data16
cmpsb
ret
sub
cli
adc
cwtl
jb
lods
mov
popf
jns
mov
mov
dec
cmp
and
into
pop
mov
jne
ss
mov
push
shl
or
shll
adcb
dec
inc
pop
mov
sub
jmp
sbb
push
int
test
stos
pop
add
adc
fisttpl
dec
xchg
into
dec
cli
and
stos
test
loope
sbb
jb
mov
scas
pop
mov
lahf
adc
mov
mov
mov
cmpsl
mov
and
inc
sbb
dec
push
cltd
arpl
pop
mov
shrl
cltd
sub
cld
xor
and
test
add
push
imul
popf
sub
sbb
movsb
push
fstl
dec
ja
mov
xor
into
jge
cli
add
fdivs
and
jno
cmp
and
setge
and
negb
fsts
xchg
orl
shl
cmp
and
bound
test
loop
cwtl
pop
popf
lcall
sbb
pop
add
aad
in
adc
mov
and
mov
hlt
cwtl
xor
push
adc
lahf
lahf
leave
jae
add
popf
lea
int
stc
xchg
push
pop
mov
pop
bound
sarb
lcall
test
pop
mov
push
adc
cmpsl
sbb
scas
outsb
and
jmp
cmc
mov
outsb
push
mov
pop
adc
add
sbb
lds
add
mov
fnstsw
mov
aam
pop
bound
xchg
mov
sub
cld
inc
cmpb
lods
mov
push
mov
pop
pop
mov
and
mov
cmp
popa
ret
mov
loop
add
xor
mov
push
cmp
sub
add
cmp
jl
xor
sub
in
rcll
lcall
out
jp
sbb
fists
mov
out
fwait
daa
fstpt
cmc
arpl
stos
jnp
arpl
adc
je
cmpsl
xor
cmp
pop
fidivrl
mov
mov
negl
sti
mov
in
loopne
push
push
mov
xor
xchg
shrb
faddl
adc
nop
add
pop
ljmp
mov
cmp
addr16
outsl
jnp
loope
inc
pop
stc
and
inc
lret
stc
stos
or
push
ret
adc
jle
jle
xchg
into
sub
or
popa
js
jge
call
fnstsw
sti
loopne
adc
cmpsl
fbld
jo
sbb
dec
loop
testb
ret
add
sbb
gs
scas
cmp
mov
xchg
adc
aaa
cli
dec
fnstcw
jecxz
cmp
jb
out
jne
dec
ficompl
xchg
test
ret
mov
les
aad
xchg
enter
movsl
lcall
cld
xor
aaa
pushf
pushf
dec
dec
ljmp
pop
inc
fisubl
mov
jo
inc
sub
hlt
fistps
movsb
or
fcomps
mov
insl
mov
ss
mov
push
mov
loopne
mov
outsl
cmp
ljmp
cmp
cmpb
sbb
fiadds
mov
adc
addl
pop
jo
bound
aad
lds
inc
bound
fwait
imul
push
pop
mov
ret
test
loop
add
mov
pop
adc
push
cwtl
push
xchg
lret
je
mov
ret
adc
push
jb
jns
cmpsb
dec
mov
loope
popf
pop
leave
lds
jp
sbb
sbb
add
xor
loop
push
push
sahf
push
xor
mov
pop
or
popa
movsw
and
sub
mov
insl
xor
jnp
in
fidivs
xorb
scas
mov
and
aad
and
and
repz
fmuls
jb
inc
aad
loopne
test
sub
shll
movsb
out
add
sbb
push
add
cmp
fsqrt
cmovp
mov
rcrl
pop
sbb
data16
repnz
mov
push
or
sbb
pop
enter
into
dec
mov
loope
mov
jp
roll
cmpsl
or
sbb
mov
push
mov
int
jo
psrlw
stc
out
xchg
cmpb
je
bound
icebp
adc
fiadds
or
xchg
frstor
sbb
stos
faddl
cmpsl
test
stos
loopne
ret
sub
es
es
fstpl
int
cmp
sbb
cmp
sub
imul
ljmp
mov
xor
jo
pop
aam
sarl
test
stos
sub
jno
inc
mov
test
and
and
jo
mov
ss
xlat
push
decb
roll
pop
pop
sbbl
add
pop
or
shll
cmp
test
pushf
sbb
jae
cwtl
jae
daa
cmp
and
bound
mov
pushf
dec
and
jbe
jo
inc
adc
aaa
jns
dec
jb
jp
mov
add
roll
test
cs
inc
int3
lds
xchg
in
sahf
sbbb
xor
push
add
jmp
xlat
mov
pop
add
mov
lcall
dec
xor
sbb
mov
fbld
push
mov
push
cmp
push
in
xchg
mov
cmp
enter
adc
out
jp
sbb
hlt
cmpl
lods
roll
not
xchg
faddl
push
adc
in
out
cmp
cmp
inc
pop
adc
mov
sbb
lret
shr
or
fmuls
lret
mov
sbb
jmp
jnp
sbb
push
daa
popf
xchg
mov
xor
mov
and
mov
movsb
xlat
imul
leave
xchg
or
or
cmp
push
pusha
test
sti
fldl
push
lds
lahf
xchg
xchg
ds
mov
shll
mov
xor
cmp
andb
fisubs
hlt
jle
mov
ja
inc
add
mov
mov
jle
cld
mov
push
js
jns
cwtl
push
and
out
add
cmp
dec
and
or
mov
in
adc
lcall
fstl
dec
or
xchg
les
stc
cmpsb
fsub
dec
cmp
loop
dec
js
xor
inc
cmpsb
xchg
push
cmp
mov
add
xor
lods
stos
icebp
movsl
inc
sbb
pop
test
lret
dec
mov
inc
sub
pop
sub
mov
jge
or
or
test
jno
or
xor
pop
orb
pop
cs
push
dec
and
stos
das
dec
push
pop
aad
jge
outsb
cmp
roll
sub
cmc
dec
aam
ja
dec
add
std
jp
into
push
fldcw
mov
addb
dec
or
mov
leave
sub
mov
ficoms
add
ljmp
lcall
sub
add
data16
mov
loope
fcmovne
pop
clc
jp
dec
es
fisubs
psrad
fbld
xlat
mov
xchg
test
fs
inc
aas
sbb
cmp
cmpsb
loop
loope
jnp
cmc
popf
in
pop
cmp
lahf
fists
jne
mov
aaa
int3
cmp
mov
test
jnp
push
and
mov
hlt
add
sbb
repz
in
jb
adc
lret
ja
into
mov
mov
inc
das
xor
jne
mov
pop
or
inc
xchg
xchg
sbb
fwait
pop
mov
cwtl
inc
mov
outsl
adc
jnp
sub
out
arpl
push
dec
add
clc
mov
ss
lret
sub
dec
jl
xorl
push
jl
xor
sbb
add
fwait
ret
std
cmp
and
lods
or
or
pop
pop
imul
dec
jecxz
adc
lret
outsl
daa
test
test
mov
shrl
push
and
mov
icebp
xchg
mov
and
add
imul
lods
sub
lcall
adc
push
dec
cmp
dec
divl
xor
popa
dec
jmp
xor
dec
ret
cld
jb
insb
inc
notl
roll
sbb
insl
sub
lcall
lea
jmp
xor
sahf
mov
push
fsubs
mov
lret
cli
iret
or
call
sbb
xchg
mov
into
xchg
test
mov
lds
insl
mov
push
pop
out
inc
cld
and
in
inc
mov
cmp
test
adcl
out
aam
outsb
jle
sbb
rcrl
adc
lea
and
pop
jle
mov
insb
imull
sahf
pop
pop
ja
add
sbb
sbb
xchg
out
or
mov
int3
repz
dec
pop
mov
mov
jl
adc
popl
ss
inc
dec
icebp
inc
cld
sub
xor
lea
ljmp
sub
out
mov
in
pop
mov
dec
rcr
int3
mov
mov
mov
jb
loopne
dec
insb
xorl
insb
mov
aas
push
shrb
cmp
sbb
movsb
test
mov
repz
popf
cmpsb
shll
sub
scas
pop
cwtl
scas
ror
out
inc
decl
cmp
sbb
les
andb
mov
in
loop
add
or
dec
and
cmp
aam
fdivr
xor
inc
add
cld
popa
adc
scas
sbb
sub
inc
add
dec
test
xchg
movsb
and
rol
mov
pop
add
cld
test
push
adc
sub
repz
ljmp
addr16
or
rol
push
repnz
cmp
mov
inc
adc
gs
lods
pop
mov
scas
leave
pop
les
push
xchg
sarl
jp
and
push
outsl
sbb
xchg
mov
dec
cmp
and
arpl
mov
mov
int
add
in
adc
mov
and
jl
xchg
loope
lret
push
push
shrl
sub
shrl
cmp
mov
xchg
mov
lahf
nop
sub
cmc
cmp
xchg
adc
dec
je
pop
cmp
rolb
push
sub
add
test
xor
loop
cmc
and
into
pop
jmp
xchg
dec
dec
in
data16
dec
fnstenv
pop
pop
mov
cmp
loop
cmpsl
rcl
xchg
xchg
inc
rorb
dec
cmp
outsl
push
mov
jbe
outsl
icebp
sbb
or
bound
jo
add
push
pop
das
push
jno
repnz
cmp
sub
adc
pushf
and
ljmp
sbb
cwtl
cmpsl
fdivl
inc
sbb
jo
mov
adc
sbb
adc
idivb
add
dec
or
pop
enter
je
jne
lcall
mov
pop
cmp
shll
fisubrs
push
out
jl
or
dec
push
cmc
and
xor
push
jl
rclb
movsb
mov
in
adc
out
sbb
pop
imul
lds
call
cmp
push
dec
movsl
ficoms
ss
aam
pop
push
fwait
jno
xchg
imul
sub
sub
arpl
inc
push
sbb
mov
inc
push
push
shr
dec
mov
loope
insb
inc
pmuludq
arpl
push
push
mov
fsubrs
lock
jp
push
cwtl
cmc
pop
mull
insl
and
add
stc
lea
rcr
sbb
stos
dec
je
lahf
mov
or
test
mov
test
out
cs
mov
shlb
dec
xchg
pop
inc
push
aam
enter
xorb
or
inc
sub
lret
jbe
jne
jbe
data16
add
mov
dec
and
xor
xor
xchg
cmc
ljmp
movsl
mov
adc
cmp
dec
xchg
sub
sub
cmp
cmpsl
imul
push
jmp
inc
inc
and
fmull
pop
mov
mov
inc
push
mov
lcall
add
icebp
aam
mov
daa
xchg
mov
dec
mov
int3
movsl
jmp
push
push
les
aad
loopne
mov
xlat
mov
push
push
and
sub
pushf
adc
mov
out
inc
sub
and
movsl
add
scas
in
push
iret
dec
cmc
test
sbbb
pop
pop
mov
and
xchg
mov
rcr
xor
js
and
adc
pop
sbb
sti
jge
fildll
add
dec
inc
decl
std
xchg
test
mov
sub
mov
jp
cmp
push
adc
imul
fs
mov
lret
iret
push
mov
into
push
scas
sbbb
cmp
scas
rorl
pushf
pop
in
lret
or
iret
push
insb
arpl
inc
cmp
inc
push
fsubrs
jo
push
jle
add
test
cmp
xchg
popf
hlt
mov
mov
jo
out
movsb
jno
icebp
icebp
inc
xor
sbb
repnz
cmp
cld
xchg
cld
test
jne
mov
mov
loope
rcrl
ds
cltd
mov
adc
lea
cwtl
jp
inc
data16
arpl
addr16
cmp
mov
icebp
movsb
pop
sbb
jecxz
push
outsb
pusha
push
jecxz
sub
stc
lods
mov
pop
push
lcall
push
jno
popa
sbb
in
in
sbb
pop
mov
or
pop
int3
sub
xchg
in
inc
or
ret
aas
inc
xchg
xchg
lret
hlt
push
shlb
dec
mov
mov
and
cmp
pop
sbb
cmp
cs
lock
cmp
add
pop
loop
adc
stos
idivb
dec
mov
outsl
xchg
in
push
push
add
and
xor
les
aad
mov
adc
xchg
test
cmp
pop
push
add
inc
outsl
or
fsubrs
ret
cli
ss
in
xor
test
mov
nop
mov
cmp
lods
enter
jg
out
jmp
jno
xor
cwtl
ja
mov
fst
push
sbb
aad
enter
pop
outsl
fwait
jae
fisttps
outsb
pop
lock
ja
pop
cmpsl
stos
mov
clc
sub
test
sbb
jmp
jns
pop
inc
jbe
inc
xchg
pop
mov
push
mov
jg
jns
popf
lret
lock
repz
sub
inc
jecxz
stos
pop
mov
ljmp
repz
add
insw
jle
out
cmp
sub
ds
lea
sarl
push
xchg
inc
cmpsl
aas
call
mov
pop
or
or
adc
je
lods
rcr
adc
sbb
xchg
adc
pop
xor
mov
scas
and
or
call
out
into
and
popf
add
dec
adc
inc
push
jge
es
mov
leave
jecxz
jae
or
loope
or
lret
mov
xor
fisttps
int
fisttpl
lret
mov
les
bound
xchg
imul
push
add
test
loopew
or
cs
mov
mov
das
orb
mov
xor
add
addr16
ja
aas
xchg
in
pusha
mov
jnp
movsl
fmuls
pop
fs
shll
iret
jbe
jp
movsb
ficomps
int
sahf
out
fs
add
fistl
dec
or
xchg
out
mov
mov
es
aaa
dec
adc
fnstcw
mov
mov
or
jg
sarb
ss
fcmovnbe
aad
fistps
jg
inc
movl
fsubs
hlt
popa
ljmp
pop
mov
leave
jnp
popa
xlat
jo
xor
lcall
rcr
aaa
jae
xor
xchg
int3
loope
pop
cmp
mov
add
cld
stc
fcomi
or
sbb
pop
mov
ss
dec
loopne
aaa
test
xor
repnz
fwait
inc
inc
cmpsl
fwait
mov
js
cwtl
and
ret
cmpb
cmp
push
pop
pop
pop
sub
out
and
mov
jecxz
and
cmc
ficoml
leave
push
jns
mov
cltd
mulb
movsl
dec
lods
cmp
push
adc
test
pop
outsb
adc
cmp
jns
mov
push
outsl
lahf
cmpb
enter
pop
push
je
mov
lret
daa
cs
call
popa
frstor
pop
jns
mov
push
fdivl
mov
test
jecxz
jecxz
adc
rorb
test
adc
push
pop
test
mov
xor
push
add
test
js
jnp
jnp
ja
jne
out
xchg
das
test
sub
loope
jmp
pop
mov
mov
test
xorb
imul
sbb
mov
push
adc
dec
pop
dec
dec
pop
sbb
lret
stos
xchg
pop
push
gs
xchg
xchg
into
iret
sub
cmp
stos
pop
jecxz
aas
push
adc
push
repz
outsl
rorl
inc
and
fwait
push
es
mov
jb
out
push
push
xlat
inc
stos
out
adc
test
int
lahf
mov
push
mov
stc
fistpll
xchg
or
ja
and
inc
call
je
data16
pop
outsl
or
mov
jae
xor
rolb
jle
pop
scas
fstpl
arpl
inc
inc
push
div
xchg
in
jnp
pop
bound
orl
rcll
mov
xchg
jg
jge
rcrb
shrl
jne
dec
xchg
and
mov
lds
push
shl
mov
loope
or
ljmp
movsb
sahf
in
ds
or
sahf
push
fildl
dec
sahf
xchg
sbb
sbb
cmp
xor
int
vmwrite
pop
pusha
dec
add
cli
test
and
jb
lret
or
scas
mov
repz
sarb
loope
in
cld
inc
cmc
aaa
call
idiv
mov
add
cmp
cltd
fdivl
inc
adc
rorb
outsb
jp
scas
jno
and
and
xchg
aaa
or
lcall
jle
shll
jp
int3
cld
xchg
pop
mov
mov
push
mov
dec
mov
movsb
xor
aam
mov
lret
jae
xchg
push
pop
jns
shl
dec
aam
cmp
aad
lcall
and
rol
pop
ficoml
jg
sub
pop
sarb
and
dec
lea
dec
out
jecxz
iret
rcl
xlat
fidivrl
ds
jge
prefetch
out
jp
repz
jns
xchg
lods
loope
in
jp
sbb
or
xchg
mov
pop
cld
sbb
inc
cltd
loope
les
data16
xor
xor
adc
insb
sti
mov
and
dec
ja
ljmp
xor
leave
aam
clc
cmpl
daa
lock
cmpsl
cmc
inc
dec
lcall
mov
popa
js
push
fldenv
sub
test
btr
sti
mov
fbstp
jo
aas
pop
xchg
jg
mov
sub
xor
ret
jmp
outsb
mov
jmp
rorb
xor
or
out
and
pop
pop
inc
test
addb
add
fiadds
fwait
sbbb
push
lea
and
or
xor
cld
inc
lods
fcmovnu
dec
pop
mov
xor
mov
cwtl
cmpsb
lds
cmp
ficoml
lret
in
xor
stos
add
adc
aad
test
adc
jo
ss
ljmp
jg
pop
add
ja
xchg
add
push
inc
sbb
adc
scas
inc
push
xchg
push
shll
add
jmp
adc
mov
sbb
dec
inc
ret
sbb
sub
test
es
push
push
movsl
fsqrt
jmp
lcall
push
dec
faddl
lods
xor
stos
mov
iret
insl
push
xchg
jg
and
mov
mov
jo
orb
dec
and
out
testb
adc
jl
jne
rsqrtps
and
leave
mov
and
clc
clc
xor
insw
lret
mov
push
lcall
add
xor
popa
lods
jmp
in
sbb
jle
dec
in
xchg
test
adc
cwtl
mov
xlat
orl
add
inc
in
shrl
fmuls
cmp
inc
fsubs
xchg
adc
mov
call
sbbb
pop
inc
movsl
hlt
icebp
pushf
mov
sbb
imul
mov
xor
dec
mov
out
lods
mov
lcall
test
and
out
repnz
mov
mov
xor
inc
ret
lock
sub
and
pop
cmpsb
xor
push
out
or
adc
notl
cmpsl
and
scas
stc
cmpsb
roll
loope
add
mov
push
cmpsl
repz
pop
aam
xor
test
mov
std
sbb
out
push
xor
adc
stos
fistl
push
test
jno
lret
aaa
std
mov
out
mov
movsb
movsl
jbe
pop
mov
mov
lcall
sbb
in
push
lahf
dec
adc
inc
lock
ret
sub
ret
pop
push
sub
scas
lods
sbb
dec
mov
pop
dec
jns
xchg
fwait
aam
pop
mov
xchg
add
push
idiv
clc
stos
lret
outsl
dec
jle
and
mov
stc
movsb
andb
repz
call
push
imul
fwait
push
out
pop
add
cmp
ss
js
fwait
in
inc
fmulp
mov
jns
ds
xchg
movsl
adc
movsl
popa
sbb
mov
hlt
mov
jl
inc
aas
addr16
and
push
mov
adc
out
jb
div
dec
dec
and
ljmp
xchg
cmpsl
push
xchg
shll
ret
add
jb
sbb
xor
sbb
cmc
mov
cs
sbb
nop
push
pop
cli
cmpsb
out
shlb
fldl
orb
jns
in
pop
cli
cwtl
inc
mov
push
outsl
add
outsb
add
lea
sbb
cli
pop
xchg
adc
xchg
testl
mov
push
clc
or
cld
add
sub
and
mov
push
push
dec
sub
push
adc
ja
in
fwait
psubb
sbb
nop
mov
sbb
add
lret
fists
ret
push
fs
or
pop
gs
fsts
jnp
cs
ficompl
xchg
mov
or
adc
pop
and
lods
mov
xchg
mov
jg
cmp
xor
mov
mov
dec
les
mov
test
testb
mov
push
push
jecxz
aaa
push
ss
pop
pop
rcrl
call
mov
add
dec
cmp
mov
mov
inc
and
cmpsb
orl
imul
insl
or
and
push
mov
jl,pn
pop
aam
push
mov
and
enter
push
sub
lea
aaa
out
shlb
outsb
jmp
jbe
mov
or
xchg
sub
mov
dec
xor
push
pop
cltd
adc
xlat
std
xor
in
and
in
mov
into
stos
nop
std
das
mov
pushf
mov
push
in
pop
cmpsl
outsb
loope
or
lret
dec
inc
daa
out
pusha
mov
call
xchg
xchg
mov
sbb
mov
pop
or
lcall
add
inc
fcmovu
push
cmp
pop
mov
mov
pop
or
fidivrl
adc
ljmp
aas
std
je
lcall
cmp
xchg
ja
cmc
int3
mov
xchg
xchg
xchg
ja
xchg
mov
dec
adc
shl
mov
scas
out
push
cmp
xchg
or
or
jae
sbb
ljmp
cwtl
pop
stos
jp
mov
adc
aaa
test
mov
jne
jbe
std
mov
hlt
iret
cmpsb
mov
sub
mov
push
icebp
jge
jg
jle
int3
je
add
insl
sub
or
pop
and
push
pop
pop
sbb
add
mov
or
sbb
xchg
push
inc
pop
push
jno
push
negb
mov
aam
sbb
xor
pushf
nop
mov
pop
loope
fdivs
and
gs
popf
inc
fcmovu
outsl
or
inc
in
mov
pop
outsl
sub
add
out
mov
or
cmp
scas
and
adc
cmpl
push
in
sbb
sub
mov
test
cmp
dec
add
push
lock
in
fistl
and
add
je
in
scas
shll
push
dec
sub
in
fmuls
imul
lds
pop
jge
repnz
repz
pandn
lea
test
fstp
jae
pop
int
cmpsl
sbb
jecxz
scas
fnstenv
mov
fdivrs
adc
es
jbe
mov
out
fmul
pop
or
add
imul
dec
xor
and
jp
test
pop
andl
pusha
lret
cmp
sub
les
dec
add
ljmp
out
cli
mov
add
aaa
jno
ficompl
ds
pop
addb
testb
push
or
xchg
mov
orb
and
cwtl
jge
cmp
imul
outsl
xchg
daa
mov
bound
add
xchg
cmp
adc
iret
sub
fwait
arpl
xchg
inc
fbstp
adc
cli
sub
push
jae
jb
xor
mov
aam
lock
or
push
inc
sub
mov
cwtl
and
jns
dec
add
sarb
test
fwait
clc
xchg
mov
fs
mov
lods
popf
jecxz,pn
mov
push
mov
nop
cmp
test
or
cmpsb
add
cmc
mov
nop
fadds
add
xchg
fnstsw
xor
repnz
xchg
test
popf
jp
push
cmpsl
lret
pop
cltd
adc
mov
hlt
movl
or
fcompp
pop
push
jo
push
int3
imul
loope
daa
mov
pop
and
inc
push
inc
dec
mov
aaa
mov
movsb
jecxz
subl
mov
mov
add
or
repnz
stos
fucomi
js
push
pop
lods
or
push
bound
scas
jle
xor
or
shr
jae
xchg
aad
bnd
dec
sub
clc
xor
sub
add
push
mov
push
cli
insb
pop
aad
scas
ficompl
add
pop
out
fnstsw
pop
lret
lret
add
rolb
xchg
push
pop
les
sub
insl
repnz
cmpsb
aaa
sbb
cmp
stc
ljmp
jmp
sub
stos
imul
push
int3
popa
adc
popa
out
cli
inc
inc
sarl
aad
js
int
cmpsb
jbe
cmp
inc
sahf
stc
insl
out
add
push
or
cltd
sbb
enter
call
xchg
lret
xor
sbb
cli
add
mov
cmpl
fsubrs
sti
xor
push
pop
test
and
jne
pop
inc
fs
push
sar
cmpb
xor
push
cli
add
jle
sub
push
mull
jl
and
inc
pop
test
aad
repnz
mov
sarb
pop
and
das
ret
dec
dec
scas
das
mov
es
arpl
mov
pushf
int
popf
mov
lock
jmp
mov
xor
test
jge
lret
xor
loopne
pop
push
xor
dec
mov
dec
mov
test
pop
pop
insb
push
sub
scas
lock
lea
shrb
and
or
jecxz
mov
in
dec
cmpsb
lret
sub
push
mov
lret
cmpsb
rolb
adcb
or
mov
in
dec
dec
fs
add
std
inc
xor
fsubrs
leave
mov
addr16
sub
mov
dec
cmp
jmp
jg
pop
loopne
lods
cmpsb
pusha
cmpb
stos
leave
xor
popf
lds
filds
add
pop
clc
inc
cltd
inc
cmp
outsl
pop
push
mov
pop
xchg
lock
pop
add
inc
xchg
lret
dec
in
mov
xchg
out
pop
arpl
imul
out
mov
xchg
outsl
test
icebp
or
mov
outsl
add
ss
xchg
mov
test
mov
sub
mov
or
sbb
loope
mov
das
xchg
or
mov
push
cli
or
push
lds
dec
and
in
inc
add
bound
mov
into
adc
ret
fxch
xchg
dec
pushf
popa
push
hlt
sbb
mov
pop
pop
dec
cmpb
dec
loop
jp
push
mov
sub
stc
and
nop
and
cld
test
adc
inc
fucomi
je
push
stc
mov
jecxz
leave
or
push
fistl
adc
jnp
and
ljmp
movsb
rclb
fistl
pop
in
and
add
sbb
add
mov
inc
movsb
sub
cwtl
stc
repz
push
cmp
clc
lds
pop
sub
and
dec
mov
inc
lods
jnp
or
inc
incl
pop
push
mov
fimull
aam
dec
fcoml
shl
cld
mov
and
leave
shll
adc
outsb
test
mov
test
dec
mov
test
add
ljmp
xchg
ja
push
push
subl
addr16
xlat
pushf
add
ja
mov
xchg
aad
push
sbb
mov
jge
inc
int
inc
xor
mov
add
xchg
fnstenv
dec
insl
scas
gs
mov
jl
test
les
fsubrs
repnz
decl
sbbl
loope
lock
out
jecxz
jmp
xor
xchg
cmpsb
jns
jle
mov
or
xor
stos
push
out
push
subb
fwait
lret
lea
aam
pop
sti
imul
les
sbb
or
mov
sbb
or
aad
push
push
fisubs
lret
xchg
stc
sti
sub
adc
mov
in
inc
outsl
enter
fdivrs
fmul
cld
or
sahf
popa
lret
cmp
ds
inc
test
and
hlt
pop
out
in
scas
pop
cli
or
ret
cmp
adc
pop
movsl
dec
cli
mov
jp
test
cwtl
push
pop
pop
loop
jb
jae
inc
int
out
inc
sbb
test
lcall
mov
dec
shll
subb
mov
mov
sub
adcl
ljmp
jl
mov
and
jne
mov
ja
mov
iret
push
shl
or
std
sub
xor
xchg
rcrl
dec
pop
xchg
lods
scas
das
xchg
rolb
inc
cltd
gs
adc
adc
mov
fdivrs
add
in
xor
pop
arpl
fadd
mov
push
sti
mov
and
aam
lds
repz
mov
test
xchg
sub
ljmp
xor
fcomp
jmp
cs
lret
pusha
out
jbe
stos
test
movsl
pop
add
arpl
add
jo
push
lods
cmp
ret
xor
dec
dec
mov
cld
and
mov
test
push
or
xchg
inc
cld
push
dec
je
xchg
sub
mov
mov
subb
bound
lods
xchg
add
push
mov
cmc
jle
imul
adc
mov
jecxz
push
sub
test
xchg
inc
mov
mov
testl
xchg
mov
jle
sbb
ss
or
inc
movsb
mov
sti
xchg
std
addr16
aaa
sub
xchg
jecxz
mov
lahf
mov
add
out
mov
loope
inc
dec
mov
mov
jno
jg
in
lcall
lahf
inc
movsl
imul
adc
lret
xor
push
inc
ret
add
in
xor
sub
push
lods
xor
cmp
in
or
data16
push
or
xchg
enter
push
pop
movsb
mov
add
repz
xchg
push
std
jle
ss
sbb
imul
mov
test
cmp
loop
cmp
and
push
orb
xor
movsl
sub
xchg
xor
xchg
push
pop
jge
scas
or
in
mov
xor
pop
negl
je
push
mov
push
mov
xor
jno
dec
sbb
cwtl
pop
mov
insl
stos
jmp
add
and
xor
bound
and
xor
or
data16
push
dec
ja
stos
pop
or
mov
xor
in
iret
fimuls
pop
mov
cli
and
inc
pop
push
xchg
mov
push
xchg
enter
and
fistpll
jge
rcl
out
sub
pusha
jbe
mov
out
mov
movsb
mov
fisubrs
mov
sub
mov
cli
rol
sub
mov
ljmp
jmp
inc
mov
jo
dec
push
jns
lock
int3
xchg
xchg
adc
xchg
xor
jmp
dec
hlt
bound
in
fs
andb
lret
inc
dec
and
mov
negb
lods
ja
push
mov
push
pop
or
in
pop
iret
mov
push
cltd
cmp
dec
movsb
fcoms
daa
mov
fs
orb
push
sbb
movsb
mov
adcl
stos
loop
pop
fld
push
shr
jmp
or
lock
mov
and
dec
sbb
cltd
clc
mov
adc
pop
mov
mov
leave
or
pop
cmp
jmp
les
data16
negb
pusha
sahf
push
mov
imul
push
jnp
add
imul
rorl
jo
rclb
or
stos
in
add
jecxz
imul
int3
sahf
adc
shlb
pusha
stos
fldl
mov
sub
test
pop
sahf
pop
mov
xchg
inc
cmp
aaa
or
mov
and
or
sbb
xchg
loop
aam
mov
mov
sub
in
sbb
mov
or
mov
jae
stc
in
sbb
sahf
inc
pop
lcall
push
or
call
sub
stc
jno
hlt
clc
scas
dec
adc
push
mov
cmp
addr16
mov
popf
arpl
xor
in
dec
stos
and
clc
fs
jb
cmp
shlb
mov
jl
popa
rcrb
jle
imul
pop
sub
das
dec
xchg
loopne
imul
ds
cmp
jmp
lea
mov
cmp
xchg
or
push
push
popf
lcall
push
sahf
sbb
sar
mov
lock
sbb
cmp
push
call
mov
notl
sbb
ror
mov
test
mov
test
dec
jp
inc
xor
pop
xor
xchg
adc
sahf
pop
cmpsl
dec
enter
push
stc
loope
inc
int
sbb
add
mov
and
shll
int
test
ror
cltd
or
and
jg
xchg
inc
das
inc
and
xor
mov
jbe
insl
ljmp
fstpl
mov
dec
mov
mov
cmp
dec
adc
cmc
sbb
push
shrb
jo
test
test
jmp
sbb
insl
fists
scas
addr16
pushf
int
roll
mov
dec
and
mov
sub
and
lods
xchg
pop
mull
mulb
or
xchg
cmp
jnp
cltd
xor
push
repz
icebp
mov
xchg
and
mov
sbb
nop
out
adc
jg
sub
std
lea
shlb
adc
enter
es
xor
sarl
inc
lock
mov
test
ret
inc
mov
adc
inc
push
cmp
jne
push
inc
imul
xchg
outsl
jg
mov
mov
jge
mov
icebp
push
movsl
xchg
insl
adc
pop
jmp
ljmp
popf
pop
pop
push
mov
cmp
mov
cmp
clc
push
pop
cmpsl
cltd
popf
in
jbe,pn
sub
jbe
fyl2xp1
mov
popa
jle
sub
or
sub
out
imull
or
sahf
stos
lcall
push
jno
imul
test
sbbl
call
repnz
das
hlt
das
icebp
mov
mov
sbb
sahf
xor
je
hlt
pop
aaa
cmpsb
push
cmpsl
sar
imul
mov
insl
push
add
pushf
lods
lcall
gs
shl
fiadds
pop
sub
sub
cmp
out
pcmpgtw
sub
mov
adc
cmp
jne
sbb
out
xor
adc
mov
cmp
lcall
jl
inc
mov
mov
pop
subb
clc
mov
std
pusha
dec
pop
inc
push
inc
adc
adc
inc
cmp
xchg
out
cmp
push
inc
std
scas
les
xchg
push
ret
fnsave
sbb
movsb
cmp
add
dec
repnz
xchg
std
xlat
pusha
or
fs
mov
mov
dec
jnp
jl
mul
and
inc
inc
push
cmp
dec
cmpl
inc
push
ss
loope
jl
and
rcl
lds
xlat
and
mov
inc
mov
push
insl
dec
aaa
decb
ret
call
xchg
mov
cmp
lahf
jge
dec
xchg
jle
lds
mov
loopne
sub
xor
xor
subb
call
pop
aas
jp,pt
xor
fimull
push
pop
addl
imul
leave
and
xchg
std
xchg
ljmp
scas
inc
cmp
dec
pop
fidivrs
frstor
push
rolb
jnp
push
lret
push
pop
mov
fiadds
fisubl
call
hlt
xchg
fsubrl
sti
inc
add
lret
xchg
out
addr16
inc
sbb
aas
dec
iret
pop
mov
in
aad
and
inc
push
in
and
sbb
clc
sbb
xchg
adc
ret
pop
mov
or
aas
cmp
add
test
cmp
dec
lods
jo
sbb
jae
lds
lods
bound
es
test
mov
dec
adc
jo
push
aam
icebp
outsl
push
mov
test
push
xchg
cs
stc
cli
out
call
jmp
repnz
jne
in
inc
push
jmp
jbe
lcall
std
test
decl
pop
add
pop
mov
mov
sub
xchg
sub
sub
out
or
mov
lock
push
fsubl
mov
mov
jb
cmpsl
lods
or
fwait
pop
mov
aam
ja
sub
sbb
arpl
fsts
imul
push
nop
mov
jne
dec
mov
add
aam
sub
pop
xchg
xchg
cmpsl
repz
movsl
clc
or
sti
add
push
push
lds
mov
les
idivl
loope
repz
loopne
mov
push
sub
add
sub
movl
fsubs
js
loopne
and
test
lret
leave
js
lock
sbb
add
inc
movsb
mov
sbb
hlt
inc
ret
adc
bound
mov
mov
in
fyl2xp1
mov
pusha
imul
sub
mov
inc
lret
js
jo
jae
add
mov
lods
pop
out
sub
xchg
aas
decl
rcr
or
out
push
dec
jae
es
inc
lahf
imul
leave
push
or
and
dec
imul
mov
mov
rorl
cmc
fstps
loop
push
dec
jp
adc
mov
jne
xor
cmp
int
fdivrs
sti
out
cld
cmp
mov
dec
out
fiadds
push
pop
sub
dec
pop
out
add
inc
lret
fwait
push
jo
mov
ja
jl
push
data16
es
pusha
add
imul
lock
and
jnp
and
fdivs
into
roll
jp
sub
push
cmp
xor
gs
inc
shrl
out
out
pop
jno
imulb
pop
lods
sti
push
pop
fst
fistps
mov
mov
sbb
pushf
or
loope
mov
and
mov
pop
or
in
push
movsl
repnz
fildl
xor
xchg
push
sub
add
or
and
in
push
pop
or
adc
jecxz
cmp
insb
xor
push
sub
mov
insb
push
shll
lret
dec
in
std
sbb
pop
jno
mov
cwtl
xchg
fidivs
mov
test
xchg
aas
xlat
bswap
out
jl
cmp
sahf
call
lcall
cmp
mov
mov
xor
rorl
fnstsw
das
dec
mov
movsl
sub
dec
enter
and
ret
and
inc
data16
movsl
pop
sub
test
xchg
inc
push
and
mov
popa
fsts
xor
loop
mov
ret
dec
jne
rcrb
push
push
mov
and
aas
adc
mov
mov
xchg
stos
xchg
out
add
push
aas
xor
fcoms
popf
sbb
or
push
aam
mov
int
fwait
cmp
mov
add
and
leave
inc
dec
mov
fcomps
sub
mov
ss
jno
lock
stos
loopne
popf
xchg
fsubrp
ret
stos
push
stos
sbb
push
or
movsl
in
push
sub
popl
dec
mov
movsl
jmp
sbb
cmp
cmpsb
dec
shrb
mov
pusha
sti
xchg
js
rorb
jo
cmp
sub
stos
popa
stos
sub
imul
pop
shll
filds
mov
inc
sub
movsb
xchg
jge
sub
jecxz
mov
cmp
cmovg
les
test
gs
and
clc
xchg
mov
aam
test
loopne
nop
adc
lods
jnp,pn
scas
lret
js
adc
sbb
xor
push
xor
test
fidivs
loopne
pop
xorb
mov
out
gs
imulb
fisttpl
lret
xor
mov
mov
sbb
dec
xor
adc
and
push
aaa
fcomps
aaa
fs
stc
js
mov
mov
xchg
mull
mov
dec
shlb
in
mov
leave
imul
inc
pop
mov
pop
mov
push
mov
jae
xlat
mov
mov
cmc
pop
fwait
xor
or
mov
cmp
in
sbb
mov
ret
movsl
lcall
sub
fisttpll
mov
jno
fdivrl
addl
cmc
sub
int
cmp
add
subl
inc
adc
insl
pop
mov
cmova
add
or
adc
add
and
mov
add
lods
jg
pop
lret
dec
adc
push
adc
lds
shrl
cmc
xor
or
test
or
sub
xor
add
mov
arpl
inc
fnstsw
bts
outsb
xorl
dec
repnz
aaa
or
ffreep
dec
mov
adc
daa
push
out
jp
xchg
jge
lds
arpl
shlb
cwtl
cs
push
dec
test
sti
add
je
xor
cmp
lods
test
pop
out
push
fldcw
push
mov
or
jp
scas
and
out
sub
addr16
sbb
shlb
xchg
sub
xor
fstps
adc
jns
sub
mov
testl
in
add
inc
stc
scas
jns
sub
jg
adc
lock
xlat
inc
out
nop
into
scas
sub
cwtl
fsubrl
adc
insl
xchg
sbb
mov
mov
addl
out
roll
mov
adc
and
movsb
sbb
fildll
pop
shll
scas
sbbl
jmp
les
mov
jge
push
int3
adc
stos
ror
jb
fsubrl
into
mov
gs
dec
cmp
lods
mov
and
or
pop
jb
xchg
movsb
cmpsl
outsl
sbb
dec
call
stc
cs
sub
arpl
jne
in
sub
test
jle
movb
clc
and
or
cmpsb
lods
cmc
imul
push
mov
mov
loope
mov
divb
add
aam
cmp
js
xchg
lds
roll
mov
mov
repnz
jns
push
xchg
adc
sbb
dec
call
jle
adc
je
popf
out
add
push
ds
cli
push
pop
mov
lds
std
jle
sbb
stc
cmpsb
loop
sbb
xchg
in
mov
jae
sub
mov
int
xor
mov
int
jns
daa
ds
and
pop
lock
sarb
bound
jmp
mov
mov
flds
rep
inc
lahf
pop
pop
push
inc
outsb
mov
pop
adc
ret
xchg
pop
mov
pop
outsb
add
gs
js
jle
and
imul
bound
test
jmp
sub
xor
enter
and
dec
fadd
mov
add
in
ja
or
sbb
and
mov
xchg
movb
cmpsb
in
test
jae
popa
fidivl
push
mov
adc
push
fucomip
out
in
rep
or
add
gs
and
dec
sub
imul
jle
or
test
pop
lock
adc
lods
xchg
pusha
inc
mov
fcompp
add
test
adcb
push
fstpt
into
rclb
pop
inc
pop
cs
cwtl
or
imul
into
lahf
aaa
stos
rol
mov
sub
pop
shlb
mov
sub
je
dec
mov
lret
mov
xlat
inc
xor
pop
pop
mov
jg
lods
jge
inc
cmp
mov
lcall
aam
aad
fxtract
rcl
mov
gs
push
push
shrb
pushf
jae
sub
push
arpl
mov
pop
jns
in
sbb
ds
xchg
dec
xor
in
fs
aas
jno
mov
into
mov
outsb
jno
jge
jmp
cwtl
or
out
sub
sbb
out
xchg
out
and
cmpsl
and
test
ja
mov
jns
jbe
sub
jg
inc
ss
ret
test
sbb
iret
mov
push
adc
inc
pop
push
adc
mull
push
out
inc
cmpsl
ror
pusha
fcomps
pop
mov
push
xchg
sahf
mov
lods
iret
mov
sub
jno
and
adcl
add
push
cmc
add
push
pop
adc
imul
and
jno
fsubrl
test
jnp
outsl
movsb
push
cs
mov
nop
ret
xchg
mov
or
dec
jle
cmpsl
push
jge
std
add
and
pop
pop
push
seta
mov
or
adc
fsubrl
nop
lods
mov
cmpsl
jb
mov
xchg
jo
std
test
ret
mov
push
rcrl
in
push
repz
mov
in
xchg
xor
push
mov
cmp
push
data16
pop
inc
mov
xor
push
push
out
stos
mov
push
xchg
xchg
add
dec
aaa
mov
shll
std
add
shlb
inc
andb
test
or
pop
adc
stos
inc
mov
pop
jne
cmpsl
cmp
and
inc
mov
stos
lret
push
test
cmpsb
call
xor
clc
outsl
call
cs
mov
jmp
or
mov
cmp
bound
lods
ljmp
subb
fidivrs
mov
aas
mov
xor
pop
insl
xchg
sub
sub
xor
pop
adc
stos
push
xchg
mov
loope
fstps
mov
arpl
jge
ret
dec
pop
inc
insb
mov
push
leave
in
outsl
or
mov
test
daa
or
push
xchg
aad
lods
cmp
or
xor
mov
and
jns
clc
xchg
sub
cmp
cmp
fdiv
cmp
pop
cli
add
or
test
sub
add
xchg
mov
in
dec
ds
ret
lea
push
mov
les
pusha
addr16
jl
bound
add
dec
out
inc
into
add
jle
lods
xor
sbbl
int3
scas
pop
test
mov
push
fcmovu
js
mov
mov
inc
sbb
inc
mov
cmpsl
xlat
sbb
pop
jp
inc
pop
gs
add
iret
push
mov
pop
and
mulb
add
mov
call
dec
cmp
scas
jmp
mov
inc
js
add
pushf
jns
add
adc
push
push
xor
enter
addr16
mov
ja
adc
test
out
movsb
push
rcrl
cmp
adc
adc
mov
aaa
mov
lea
mov
data16
push
pop
fndisi(8087
mov
xchg
stos
fwait
mov
xchg
cmp
mov
xchg
jl
pop
push
pop
neg
inc
insb
xchg
hlt
sub
loope
push
outsl
mov
push
outsb
stos
shlb
xchg
adc
cmp
xlat
xor
and
sub
cmpsb
inc
xlat
loop
enter
ficoms
xchg
jo
stos
mov
sub
clc
cltd
mov
xlat
dec
mov
repnz
pop
pop
or
aad
inc
cltd
dec
mov
sbb
test
dec
sub
bswap
mov
fsubs
test
stc
jl
mov
xchg
out
lods
testl
pop
dec
rcrb
xor
sbb
mov
xchg
jle
or
jl
and
inc
jnp
mov
push
pop
pop
sbb
ret
lock
mov
rclb
jle
cli
stc
pop
sarl
cmp
mov
inc
das
sub
jecxz
fcmovnbe
es
mov
pop
dec
dec
adc
jbe
test
repnz
xor
xchg
and
mov
dec
mov
das
outsb
inc
dec
iret
int3
cli
sbb
inc
push
mov
add
mov
enter
sbb
pop
mov
icebp
orb
cmp
cmp
imul
shrb
sub
jo
icebp
lahf
pop
int3
ljmp
ja
cltd
sub
sub
bound
and
iret
add
jl
stc
out
es
jp
jg
repz
rcll
jp
xchg
xor
xchg
aam
xchg
cmp
aad
shl
aas
pop
fstps
dec
lods
in
jb
adc
out
fcmovne
jmp
jo
pop
out
sub
push
dec
jg
jne
shrb
pop
cmp
fnstenv
push
adc
xchg
lret
dec
stos
jns
leave
aaa
sub
ds
mov
mov
sub
cmp
add
movsl
jns
aad
mov
iret
sbb
and
adc
out
mov
jp
cmpsl
shlb
inc
or
or
or
adcl
push
mov
xor
into
cwtl
jb
sbb
cmp
xchg
jbe
fldenv
pop
roll
xchg
lcall
xchg
lcall
out
dec
ret
out
xor
dec
mov
inc
lret
mov
movsb
mov
ret
out
fmuls
jg
enter
sub
jecxz
mov
scas
mov
scas
shl
xchg
jmp
outsl
ss
jae
dec
push
or
rorl
jns
imull
xchg
mov
xchg
jb
out
hlt
and
gs
ja
cmp
movsb
pop
out
add
shll
pop
arpl
and
jnp
xchg
outsb
pop
push
mov
jg
sar
fs
jb
mov
jb
fucom
mov
jne
in
out
sar
lahf
adc
popf
outsb
jb
pop
jae
pop
mov
jecxz
lods
jo
enter
pop
push
cwtl
push
push
inc
mov
popf
aam
aam
mov
push
cli
lahf
pop
mov
and
or
movsl
xchg
out
ss
mov
xlat
out
jecxz
ja
and
or
dec
stos
and
mov
cmpsl
psrld
cmp
leave
xchg
sub
pop
in
mov
mov
mov
jo
ret
mov
fldl
sub
lds
fildl
and
sahf
and
jmp
enter
je
test
sti
in
jmp
mov
mov
adc
scas
cltd
rcpps
sbb
push
loop
lahf
sub
cmp
adc
out
pushf
jp
inc
popl
out
xchg
pusha
frstor
out
and
je
add
inc
add
pop
inc
push
ret
shrl
xchg
mov
adc
xchg
cli
push
rolb
out
inc
pop
imul
in
negl
stos
adcb
pusha
xchg
stc
int
pushf
das
push
nop
or
aam
or
push
cmpsb
or
aam
call
mov
xchg
jmp
divl
dec
and
mov
or
inc
inc
test
loope
mov
jbe
jne
call
jae
mov
dec
jmp
mov
push
xchg
iret
jmp
lock
pop
cmpsl
or
inc
cmp
pusha
dec
push
fcomp
out
inc
pop
or
pop
adc
adc
rcll
sub
inc
outsb
and
divl
repnz
int
loope
cmp
jo
fwait
int
outsb
mov
in
gs
lahf
xchg
xchg
and
and
mov
sahf
dec
cmc
into
dec
gs
into
add
dec
fdivrl
dec
in
xchg
push
ds
mov
int
out
xlat
jecxz
ljmp
jp
sub
or
test
push
ficoml
inc
dec
test
xchg
mov
and
add
iret
repnz
dec
call
pop
cmpsb
add
or
adcl
rolb
sarl
mov
popf
xchg
jg
mov
outsb
push
mov
cmp
daa
in
maxps
sbb
sti
mov
xchg
rcll
xchg
push
xor
inc
and
addr16
xor
adc
ds
pop
xlat
sti
xlat
dec
add
ficomps
outsl
jl
mov
or
mov
sbb
xor
inc
call
lcall
js
ret
aam
push
mov
iret
shr
jns
inc
or
add
outsl
mov
outsb
and
pop
insb
mov
jo
add
sbb
pop
test
dec
adc
push
and
push
jge
add
sahf
jnp
sbb
cld
xchg
adc
les
in
push
imul
mov
mov
leave
out
dec
pop
cmp
adc
pop
lahf
icebp
mov
push
pop
test
or
stos
jb
cmpsl
adc
or
imul
jo
jns
jecxz
jmp
loopne
mov
dec
jb
xchg
and
mov
add
xchg
lods
dec
xchg
mov
sub
testb
cmpb
shll
jp
divl
push
fisubs
in
pushf
arpl
dec
mov
pop
imul
mov
and
out
and
fcmove
pop
xchg
and
cwtl
mov
sahf
in
jb
in
es
adc
push
roll
movsb
leave
jne
fldcw
orb
pop
sub
push
xchg
std
mov
cs
jge
fwait
cli
adc
xchg
push
leave
cmp
out
pop
push
out
repz
repz
mov
mov
iret
lock
outsb
or
jl
sub
add
mov
or
inc
lea
repz
push
xlat
mov
pop
adc
xchg
and
mov
mov
cld
inc
pop
insb
push
fwait
fs
lret
or
add
inc
test
xchg
repz
xchg
repnz
push
clc
lcall
lds
jmp
movsb
adc
inc
jmp
cmpsl
jp
fsubl
dec
sub
imul
mov
insb
add
adc
jb
outsb
lods
out
enter
stc
outsb
insb
mov
inc
xchg
mov
cltd
lods
or
mov
or
arpl
sbb
and
cmpsb
dec
dec
test
sbb
addr16
leave
pusha
shlb
in
sahf
dec
or
outsb
les
lret
cmp
int3
dec
jo
mov
maxps
ja
mov
syscall
mov
stos
mov
out
fadd
push
ficoms
adc
jp
xchg
push
mov
sbb
sbb
outsb
pop
out
lods
cmc
icebp
mov
add
repz
mov
test
shl
xlat
cld
and
dec
fdivp
nop
cli
stc
and
aaa
stos
dec
loope
inc
imul
hlt
in
sub
sbb
xor
jae
ljmp
enter
mov
xor
and
lret
in
adc
mov
jp
and
test
and
pop
stc
or
sahf
add
sarl
push
cmp
shll
iret
mov
adc
insb
add
pop
inc
and
xchg
pop
adc
into
mov
sub
fsubr
lcall
dec
fstl
mov
and
inc
daa
push
nop
cmp
lods
js
and
mov
cmp
mulb
in
push
lea
fwait
mov
into
sti
jno
sub
mov
pop
push
dec
stos
dec
push
subb
inc
lock
jl
add
dec
bound
and
xchg
imul
pop
repz
or
inc
repz
mov
cltd
sub
cmp
xor
pop
push
mov
sbb
sub
sbb
ficomps
push
int3
lock
jle
cmp
fmulp
les
incb
outsb
add
xchg
cld
pop
cmpsl
dec
mov
mov
movsb
clc
push
xor
stos
cli
test
repz
cmpsl
fstl
fsub
mov
mov
push
sbb
std
shrb
sub
pop
pusha
inc
add
dec
in
push
fistl
in
mov
push
jb
xor
xchg
jae
stos
lods
xor
stos
ljmp
mov
pop
scas
xchg
cli
repnz
ja
xchg
aad
mov
add
scas
ret
lds
mov
subl
lcall
repz
loope
add
add
stos
fldl
aad
ja
pop
push
fidivrs
mov
jb
sarl
jle
fidivrs
aam
and
out
pop
mov
fidivl
lods
mov
add
cmp
mull
cltd
loopne
cltd
insl
setbe
xchg
pop
pushf
or
es
xor
clc
mov
scas
lds
mov
call
roll
gs
jmp
inc
bswap
jecxz
into
xchg
aaa
inc
sahf
cmp
loope
xchg
out
or
cmc
rolb
fs
dec
enter
fstl
sbb
pop
mov
pop
sarb
xor
cmp
jle
sbb
dec
in
xlat
in
sti
mov
shll
into
arpl
xchg
das
pop
mov
sbb
fdivr
in
pop
stos
mov
mov
into
lods
ss
out
mov
pop
jno,pn
stos
fdivr
xor
add
outsl
xor
sbb
or
and
dec
cmp
add
mov
ds
nop
cmc
mov
loopne
cltd
pop
push
xor
rcr
inc
mov
jp
pop
mov
lret
sub
das
mov
addr16
and
shr
xchg
fimull
xchg
enter
sub
pushf
stos
jecxz
cmp
xchg
jl
fidivs
pop
daa
inc
push
add
inc
daa
xchg
in
int
sub
push
push
jp
mov
shll
adc
xchg
sub
or
push
dec
xchg
push
push
cmp
addr16
into
mov
pop
and
rcll
jge
data16
iret
cmp
dec
leave
jle
xor
out
aaa
into
dec
add
test
mov
ret
negb
pop
sub
sbb
aam
in
cmp
xchg
dec
and
jl
add
inc
and
ljmp
xchg
fs
ret
adc
mov
dec
scas
push
jo
dec
popa
ljmp
loope
push
cli
imul
mov
popa
mov
rolb
cmpsl
out
or
ret
shlb
xchg
out
push
push
sbb
add
mov
fldcw
mov
inc
cmp
add
add
mov
cwtl
iret
mov
popa
test
adc
pop
sbb
jecxz
rolb
test
add
nop
jb
dec
pushf
sar
adc
dec
mov
lea
mov
xchg
or
bound
pop
dec
push
cmp
fbld
mov
loope
push
gs
mov
mov
add
shr
push
ljmp
leave
jb
in
nop
dec
sbb
stos
ja
call
loopne
lahf
xchg
fidivrl
mov
ret
into
or
mov
addl
adc
jne
pop
mov
lds
fsubs
mov
add
call
dec
fisttpl
nop
dec
xchg
xchg
mov
push
jle
or
jne
cld
out
lods
cmc
cmp
sti
or
stos
adc
sbb
cwtl
mov
xchg
lret
pop
adc
sbb
mov
jl
addr16
outsb
adc
scas
jae
scas
mov
lcall
mov
mov
outsl
inc
gs
push
sub
les
cmc
repnz
jae
cmpsl
and
lcall
cli
pop
xor
push
cmp
js
dec
or
iret
rorb
iret
inc
ret
xchg
std
clc
jnp
inc
xor
ret
push
stos
sbb
sbb
xchg
or
mov
push
jb
xchg
icebp
cmp
adcl
ja
decb
int
mov
pop
sbb
fsubl
out
xchg
or
cmc
stos
lods
mov
roll
adc
and
inc
sbbb
das
and
lods
and
sbb
sbb
addr16
arpl
jns
fmul
mov
add
or
push
xchg
mov
xchg
cltd
pop
popa
mov
dec
fists
scas
pop
out
movb
jo
pop
loope
js
xchg
add
shll
daa
popa
dec
fnstsw
sub
xor
in
xor
loopne
cmp
dec
mov
insb
jns,pn
cmp
insl
aam
pop
or
outsl
fdivr
aas
mov
addr16
loop
scas
les
stos
pop
imul
int3
push
enter
xchg
sbb
aas
push
shll
push
mov
mov
sti
add
popa
mov
mov
mov
xchg
mov
push
mov
push
leave
in
hlt
or
repz
sbb
int
clc
pop
fcomip
leave
movsl
ja
add
sub
mov
testl
jecxz
xchg
jp
adc
int
aam
lcall
pavgb
add
xchg
sub
fwait
pop
aas
push
push
cmp
push
clc
sub
xchg
jl
jae
test
add
pop
mov
mov
imul
repnz
clc
adc
arpl
push
fs
mov
loope
mov
ja
bound
push
nop
dec
js
xchg
cwtl
clc
int3
cwtl
cmpsl
push
lret
mov
jns
inc
shll
test
and
data16
pop
adc
ljmp
movsb
add
andb
mov
ljmp
xor
std
icebp
xor
aas
incb
enter
out
out
add
inc
mov
fistps
cmc
cmc
and
sbb
ficompl
push
jg
jle
das
loope
mov
xor
outsl
xor
cmp
in
aas
push
int
sbbb
or
pusha
mov
sub
outsb
pop
dec
test
push
jo
or
les
xchg
cltd
sub
shll
and
test
adc
lahf
cbtw
mov
or
push
add
jge
or
scas
sti
cwtl
inc
mov
adc
cmc
test
push
cld
repnz
es
xor
pop
or
imul
cmpsl
test
lahf
mov
push
xchg
cmp
push
dec
lret
imul
jg
movsb
pushf
xchg
sub
jae
popf
xor
rcrl
lds
scas
lahf
ror
icebp
rcrb
imul
ret
aam
lahf
adc
push
pushf
inc
lcall
fdiv
add
mov
add
xchg
mov
cmp
xchg
hlt
scas
mov
push
mov
mov
repz
pushf
cli
cmp
sti
cs
cmp
cmc
out
adc
sahf
xchg
dec
mov
inc
pop
add
test
push
stc
pop
movsb
or
stos
adc
mov
dec
jge
repnz
jb
pop
jl
fmul
pop
shrl
mov
mov
in
pop
sahf
aad
call
or
dec
mov
push
and
mov
cmc
sbb
dec
andl
out
jb
int3
inc
gs
adc
lahf
fldl
lret
mov
jb
xchg
add
sbb
js
dec
inc
int
shll
fsubrl
mov
cltd
sbb
mov
cmpsl
xor
jbe
fsubrl
mov
xchg
cli
fcomps
loop
inc
ffree
and
pop
sbb
xor
cmp
popa
mov
push
scas
testb
pop
frstor
mov
iret
jae
out
cmpsb
rcr
stc
leave
pop
repnz
aaa
es
insb
arpl
and
fmulp
daa
subb
xchg
sub
mov
push
push
or
jecxz
mov
pop
mov
cmp
cwtl
ljmp
xor
out
pop
and
mov
cmp
sub
scas
adc
imul
inc
sbb
pop
or
xchg
rdtsc
push
mov
fcoml
mov
ret
mov
sar
loope
ja
loop
or
cmp
nop
cs
loopne
stc
int
shrb
sub
bound
stos
mov
rorb
push
mov
adc
idiv
xchg
sti
add
and
add
sbb
lods
pop
add
cmpsl
jnp
mov
ds
jmp
xchg
mov
lret
pop
mov
add
xor
xor
aam
shrl
jmp
add
jae
clc
lock
pusha
imul
mov
out
cmp
mov
push
rolb
dec
dec
dec
jg
cmpsl
fstps
sbb
mov
test
movsl
jmp
test
shlb
data16
loope
and
enter
push
mov
int
add
stc
fstpl
xchg
mov
lds
xor
mov
inc
divb
jmp
out
rcll
cwtl
inc
jbe
mov
outsb
pushl
and
jp
jae
sbb
lret
jp
ficomps
mov
or
imul
xchg
xchg
or
call
dec
xor
jl
xchg
add
add
mov
cmp
subl
ss
ljmp
and
push
test
pop
xchg
les
dec
pop
dec
outsb
pop
into
jg
testl
cld
stos
sub
xchg
mov
out
mov
cmpsl
push
mov
cmpl
xor
shlb
cld
test
mov
shlb
xchg
cltd
push
mov
mov
inc
inc
push
dec
sub
scas
adc
scas
and
and
pushf
xlat
jno
enter
push
push
dec
subl
hlt
dec
jle
jmp
inc
lea
pop
xor
jg
std
cmp
out
jb
inc
stc
ljmp
sub
fdivl
jo
xlat
repnz
jl
adc
testb
mov
test
out
xchg
enter
in
popa
in
inc
insb
sub
or
or
rcll
cmpsb
sub
mov
dec
std
or
jl
cmp
push
es
push
sbb
xchg
push
daa
adc
xor
push
push
xchg
inc
xchg
ljmp
and
stos
lock
insl
push
jp
inc
jl
movsb
dec
ror
dec
inc
iret
mov
test
sbbb
nop
jle
test
ss
adc
pop
lret
insl
xchg
cltd
lock
cmp
xlat
pop
cld
push
jmp
pop
lds
xchg
stc
mov
in
add
jmp
xor
push
add
pop
xchg
mov
jmp
je
mov
jns
pop
jecxz
dec
add
insl
call
testl
test
lea
add
pop
push
inc
xor
add
jno
dec
sbb
and
push
call
mulb
push
add
add
xchg
js
push
pop
movd
ljmp
add
pop
push
add
sub
jns
xchg
bound
orb
sub
out
gs
lahf
xchg
loope
cmpsl
scas
loop
in
sub
adc
data16
clc
adc
mov
inc
sbb
mov
xchg
test
cmp
aaa
stc
stos
adc
roll
test
shll
in
shr
sub
inc
lea
cltd
notb
inc
and
pop
in
add
adc
int
das
dec
and
orb
popf
je
cmp
sub
aam
sbb
cmp
outsb
mov
dec
mov
pop
jg
xchg
jo
sar
or
sub
frstor
test
in
rolb
pop
out
xor
in
fwait
daa
fwait
imul
lret
cltd
out
sub
xor
mov
or
jo
xor
cmp
lods
je
cmp
fwait
dec
push
mov
cmp
cmp
lret
lea
scas
clc
push
outsl
clc
push
cld
or
enter
push
or
mov
fcmovu
rcll
cmpsl
std
pusha
pop
xchg
js
aaa
xchg
xor
push
or
mov
pop
outsl
cmp
into
xor
arpl
test
imull
xchg
cs
addr16
cmp
xor
shrb
aas
push
inc
pusha
scas
test
pusha
roll
stos
sub
shrl
ja
sub
pop
jae
out
mov
cmc
cli
jl
cmp
cmp
add
pop
out
jb
ss
add
aas
mov
fidivs
add
int
push
mov
jbe
sbb
pop
jb
pop
cmpsl
lds
cmp
popa
popa
mov
scas
inc
js
or
xchg
into
pop
or
divl
pop
sub
sub
addb
dec
jnp
push
or
pop
loopne
cmc
mov
dec
adc
rorb
call
ja
testl
mov
ja
push
dec
sbb
add
fisubs
mov
add
ljmp
into
or
mov
lret
xchg
inc
inc
push
add
sub
orb
add
movsb
ja
aas
mov
out
xchg
fsts
jne
inc
push
mov
add
in
mov
insb
dec
lret
clc
cmp
leave
xchg
xor
pusha
mov
repnz
inc
out
rclb
sbb
call
mov
xchg
movsl
lods
aaa
fsubrl
hlt
int
out
pop
or
inc
mov
xchg
addb
add
testl
cmp
es
inc
inc
cli
sub
xchg
cmp
popf
inc
jl
jo
adc
jno
and
int3
jno
daa
cli
xor
testb
popf
push
popf
adc
pusha
jl
js
gs
pop
mov
lods
adc
shrb
cmp
xor
and
jl
leave
pop
inc
dec
xlat
call
jmp
add
repnz
stc
and
dec
pop
js
push
push
xor
scas
arpl
lock
in
std
in
xchg
mov
bound
dec
cmp
fiaddl
push
dec
jl
fidivl
call
add
dec
fsubrl
fucomip
dec
aaa
xchg
jecxz
into
rcrb
mov
dec
outsl
pop
movsb
mov
addr16
or
push
out
sub
cmc
mov
pop
mov
and
or
push
jg
sbb
out
xchg
gs
fs
dec
icebp
nop
xor
test
push
mov
stc
and
ljmp
int
pop
cmpsl
sbb
pop
jnp
out
push
mov
push
inc
out
cmp
insl
out
xor
pop
lret
aad
mov
or
push
inc
push
ret
dec
cld
repnz
xchg
pop
add
das
adc
xchg
mulb
mov
and
push
aam
popa
push
mov
out
sub
adc
sbb
in
bound
loope
cmp
imul
dec
or
dec
mov
cmp
enter
mov
pop
gs
loop
sahf
scas
sbb
popf
lea
inc
xchg
dec
mov
cmc
lcall
shll
int
add
ret
in
or
dec
cmc
jp
out
call
inc
or
add
dec
add
aad
adc
std
sbb
lods
sub
enter
xorl
pop
in
cmp
mov
and
push
inc
adc
movsl
andb
push
sub
fcmove
xor
in
out
cmp
mov
xor
outsl
add
hlt
repnz
xorb
push
int3
fs
or
adc
and
push
xchg
mov
or
xlat
test
int3
and
or
xchg
sahf
sub
repnz
pop
lods
xchg
imul
fcomi
push
neg
fs
aam
test
loope
outsl
jl
xor
lock
aad
sarl
je
xor
adc
xchg
lret
idiv
and
lock
pop
rclb
xor
push
mov
sub
stos
out
mov
lahf
cvtps2pi
divps
in
ja
push
mov
sbbl
push
inc
call
cmpsl
push
pop
sub
pop
aam
inc
and
cmp
shl
mov
mov
xor
jae
popf
inc
mov
jnp
mov
cltd
dec
xchg
xchg
nop
xor
ja
gs
gs
jae
push
rcll
push
test
cmpsl
jb
and
hlt
pop
rcl
lcall
repz
adc
push
sub
and
jecxz
ljmp
fdivrs
mov
test
adc
cld
lret
cmp
inc
iret
aas
mov
mov
mov
mov
push
lcall
xchg
stos
adc
jae
sysret
lea
fwait
sub
out
sbbb
fstpt
dec
and
xor
xchg
lea
xchg
scas
jecxz
inc
out
out
push
push
adc
test
mov
push
mov
repz
pop
cmp
arpl
faddl
mov
sbb
loop
mov
push
jne
lods
push
push
sbb
cs
ds
sbb
repnz
loope
test
popf
pop
hlt
push
push
ss
mov
sarl
mov
mov
aas
mov
pop
filds
sti
or
mov
cmp
movsb
jp
negl
jl
add
ja
push
xchg
popf
out
mov
or
or
in
pop
sbb
pop
cmc
jp
push
test
pop
add
pop
pop
scas
movl
mov
lods
sbb
daa
inc
aad
add
add
ljmp
or
repnz
dec
xor
cmc
jbe
ret
pop
ret
addr16
lds
mov
dec
add
push
aam
shrl
pop
daa
ret
push
imul
shrb
mov
xor
jp
ds
mov
sbb
mov
dec
inc
fistps
call
dec
mov
pusha
lods
push
int
mov
cmp
sbb
jbe
dec
hlt
cld
xchg
outsl
push
mov
adc
test
add
mov
adc
loopne
cmp
rcl
outsb
mov
icebp
push
fsubrs
inc
lret
call
bound
leave
sbb
xchg
sub
nop
pop
push
fists
jne
outsl
test
fs
add
dec
inc
push
ret
sbb
sbb
stc
sub
test
aaa
jae
lods
dec
mov
add
and
scas
movsb
cmp
incl
loope
adc
insl
sti
adc
outsl
in
mov
mov
adc
jae
mov
pusha
push
sbb
mov
sbb
inc
rclb
fiaddl
mov
loope
sub
lret
out
mov
test
sbbb
cmc
mov
cmpsb
jo
push
lock
rorb
jmp
jns
pop
stos
inc
add
jle
int
inc
mov
dec
and
cld
repnz
push
adc
out
sahf
push
push
fcmovbe
popa
mov
popf
push
lret
dec
rolb
sub
dec
cmpsl
pop
fistpll
inc
push
push
push
ja
mov
imul
ror
lcall
repnz
push
xchg
loope
mov
loopne
jmp
dec
inc
arpl
jne
lods
add
and
mov
or
imul
lock
sub
lock
mov
sbb
int
dec
mov
fiadds
idiv
bound
aas
aad
sbb
shrl
inc
sahf
jl
mov
das
mulb
inc
pop
add
dec
lret
xor
jle
or
in
divl
mov
or
push
pop
lock
mov
jae
push
cs
mov
movsl
cmp
insb
inc
imul
mov
inc
jge
mov
ja
mov
bound
add
sub
push
fisttps
xchg
adc
jo
jne
jle
ret
fnsave
adc
notl
fnstenv
mov
and
xchg
sbb
movsl
enter
and
leave
mov
sbb
xchg
mov
pop
bound
sarl
sub
lret
data16
dec
inc
mov
and
pop
jo
fnstsw
adc
mov
scas
mov
mov
adc
jne
sub
scas
cmp
add
pop
jbe
aaa
in
inc
xor
and
leave
pusha
test
pusha
adc
adc
daa
fs
jbe
cmpsb
mov
enter
inc
cli
arpl
mov
mov
push
aas
jecxz
xchg
cmp
enter
sub
ss
pop
enter
repz
mov
jmp
sub
es
dec
cld
stc
leave
add
mov
imul
into
and
push
gs
negl
adc
add
or
mov
mov
add
mov
sbb
pop
ret
adc
or
cld
in
shufps
idiv
fisttpll
idiv
ret
fisubrl
clc
es
es
test
dec
dec
xorb
sbb
js
inc
pusha
enter
mov
xchg
mov
loop
adc
test
jecxz
idivb
jecxz
pop
ljmp
xchg
aas
mov
xor
mov
rcrl
jno
orb
mov
jo
inc
stos
xor
pop
in
shl
mov
push
mov
imul
mov
xor
testb
cmc
shlb
mov
fstpt
mov
jg
xchg
add
rolb
jl
or
inc
adc
inc
xchg
mov
sub
xchg
leave
in
mov
and
pop
xchg
out
outsb
inc
movsb
xor
pop
ss
mov
outsl
stc
sub
sti
imul
ret
inc
ds
fsts
repz
in
sbb
scas
jno
sti
xlat
aaa
and
sbb
ss
scas
sti
push
inc
sub
scas
pop
sti
pusha
and
lds
out
adc
xchg
cmpsl
push
dec
ret
dec
enter
sbb
rcr
lahf
mov
push
pop
fsubr
pop
dec
mov
int
xor
push
dec
inc
sub
popl
lock
push
bnd
mov
bound
cmp
adc
cld
sub
arpl
xchg
mov
sbb
aam
or
mov
stos
in
aas
xor
mov
fcomps
mov
enter
repnz
dec
aam
inc
loop
and
shlb
cmp
dec
subb
cmpsb
movsb
inc
sub
push
mov
lock
and
outsl
and
jae
add
sbb
cld
ja
nop
sub
mov
ret
sub
xchg
stc
jbe
add
mov
push
or
xchg
push
dec
call
push
add
shrl
in
and
or
pop
mov
jle
xchg
std
stc
ficomps
xlat
shll
push
addr16
add
out
in
shrb
out
mov
shrl
mov
mov
pop
dec
push
mov
inc
out
sbb
inc
outsl
adc
xchg
jnp
push
enter
out
push
icebp
xor
push
ds
aas
adc
aad
sbb
mov
sbb
cmp
daa
dec
add
adc
xchg
push
mov
adc
outsb
jbe
subl
in
orb
out
out
aaa
lds
and
shld
adc
leave
cmpsb
jge
xchg
mov
aaa
or
cmp
mov
inc
imul
cmpsl
ljmp
pushl
or
popf
insb
jbe
push
jge
ret
add
subl
xchg
mov
jo
sbb
ficompl
jae
xor
or
mov
mov
xchg
pop
das
dec
dec
decl
mov
scas
jns
push
jecxz
jb
or
or
pop
adc
push
mov
jb
loopne
loop
fucomi
pop
sub
out
sub
or
xchg
jl
xlat
lahf
out
jg
in
icebp
sahf
imul
jmp
hlt
jns
jl
and
ljmp
leave
mulb
or
dec
mov
es
imul
jae
ret
add
out
mov
sahf
xchg
outsl
xchg
dec
adc
xor
lahf
imul
jne
loope
int3
or
dec
dec
jle
push
mov
jb
rcrb
or
insb
adc
mov
cltd
adc
mov
jns
shlb
daa
cmp
and
mov
enter
les
xchg
test
clc
add
xor
jnp
or
xlat
decb
pop
addl
imul
and
imul
xchg
inc
shll
sub
js
cli
cld
jp
rcrl
push
pop
arpl
aas
adc
loopne
or
jb
mov
sahf
loope
jge
aam
into
in
or
jle
repz
sti
sahf
daa
les
orb
imul
and
shrb
xor
jae
leave
mulb
test
cmp
push
adc
jl
sahf
or
or
outsb
xorb
scas
push
fsubrs
inc
push
leave
outsl
out
shrl
and
and
lret
or
or
inc
imul
rcrb
fstps
push
pop
sbb
lods
repnz
inc
in
cmp
sub
jp
incl
test
sub
scas
inc
cmpsl
call
mov
mov
gs
test
dec
std
mov
adc
or
sub
inc
insl
das
into
xor
push
adc
push
ret
aas
test
or
push
ja
jno
xor
inc
sub
add
cwtl
mov
aas
js
push
fidivl
inc
lcall
aam
ret
xor
cmp
nop
aas
fdivl
push
xchg
add
cwtl
das
fimuls
add
clc
sub
inc
sti
push
js
mov
sub
lcall
arpl
in
nop
or
pop
divb
out
sbb
adc
gs
pop
push
inc
or
push
sub
and
loop
mov
movsl
movsl
pop
xchg
xchg
sub
loopne
adc
scas
je
out
nop
andb
xchg
gs
or
jecxz
repz
jbe
daa
lret
into
dec
dec
jmp
mov
jnp
sbb
mov
ja
int
sub
popf
test
pop
loop
cmp
pop
test
pop
mov
jb
dec
inc
cmp
testb
push
in
fs
pop
fcmovnu
xor
mov
addr16
rolb
or
pop
jo
jle
das
inc
mov
aad
out
iret
mov
lock
xchg
dec
shll
repz
mov
xchg
fs
stos
loop
mov
lret
cmpsl
sub
sub
fistps
out
fcmovbe
mov
mov
loope
idiv
ja
xor
cltd
add
ljmp
stos
xor
xchg
es
repz
notb
test
or
xchg
push
rcl
orb
iret
mov
inc
es
cmpl
xlat
dec
in
ret
push
mov
xor
cmc
mov
sub
jle
cli
outsl
rcll
jl
mov
or
push
jbe
aad
cmc
test
add
lock
mov
dec
cmpsb
mov
and
xchg
sub
mov
loope
leave
xchg
loopne
outsl
push
cmp
lock
xor
jb
inc
pop
rcll
adc
sbb
pop
push
xchg
dec
daa
add
aam
cmp
popf
popf
int3
push
pop
xor
jno
loope
jnp
fadd
adc
adc
aaa
stc
or
pop
mov
inc
sub
pop
lods
inc
movsl
jbe
clc
cltd
push
and
dec
cs
cmpsb
mov
lahf
mov
lods
jne
lods
dec
outsb
scas
in
cmp
cmpsb
mov
leave
sub
mov
fcmovnb
lahf
push
dec
lahf
mov
fsub
mov
and
pop
cwtl
scas
xor
notb
fdivrs
aaa
add
in
jmp
cmpsb
repnz
and
imul
into
add
sbb
ror
push
sbbb
push
mov
xchg
fisubrs
int3
mov
daa
pop
cmpsb
sbb
pop
cmp
add
fisubl
add
cmp
push
push
cli
pop
sbb
jno
jns
out
insb
arpl
lds
push
fmuls
mov
popa
shl
jmp
add
repnz
and
adc
neg
xchg
std
shll
or
fdivp
adc
pusha
mov
and
inc
xchg
je
xor
arpl
in
fsubrs
aam
lock
cmpsl
or
lret
mov
cmp
add
pop
lret
stos
cmpsl
outsl
inc
xchg
in
data16
pop
and
add
mov
data16
rorb
dec
xchg
loopne
cli
jecxz
movl
gs
and
fildll
sbb
or
mov
xchg
insl
fldt
mov
jg
xor
ds
dec
test
sub
cmp
daa
dec
movsl
clc
sub
and
jecxz
dec
pusha
and
enter
call
push
mov
cs
push
pop
xor
scas
xchg
nop
xchg
adc
mov
out
xchg
daa
stos
add
call
mov
sbb
lds
fsts
je
aam
cmpb
je
cmp
jge
and
adc
scas
mov
test
movsb
jb
out
mov
aad
js
jae
dec
clc
inc
stos
push
mov
lahf
clc
mov
dec
cld
mov
adc
jnp
adc
and
fucom
movsb
mov
pop
inc
mov
push
lods
jbe
or
sbb
test
loop
into
and
outsb
loopne
push
jnp
lret
jmp
sub
push
shll
pop
lret
cmc
sahf
xchg
jmp
ret
andb
jge
into
out
sbb
mov
xorl
xor
push
cmp
and
inc
pop
pushf
lods
adc
mov
jns
mov
xchg
dec
mov
call
or
pop
push
das
fmuls
mov
out
mov
test
xor
jbe
mov
mov
aas
mov
aam
xor
jp
aam
or
xor
add
jle
cmp
pop
cs
mov
mov
mov
cs
and
in
stos
in
cmp
lret
aaa
outsl
push
xor
shll
into
inc
cwtl
leave
out
cvttps2pi
xor
ljmp
movsl
imul
in
mov
call
and
sahf
lds
mov
stc
adc
xchg
inc
ret
mov
repnz
mov
jns
popa
test
dec
cs
push
sbb
cs
xchg
cwtl
sti
fwait
das
adc
jo
xchg
inc
dec
mov
adc
mov
mov
loop
test
or
lcall
int
xchg
pop
fisubl
clc
and
mov
sub
pop
stc
aas
test
mov
mov
lahf
in
les
fs
clc
jp
sbb
loope
lods
xor
pusha
icebp
push
and
fidivl
push
test
dec
sub
add
jmp
loope
push
xlat
pop
int
cs
cmp
xor
inc
jmp
sbb
mov
lret
clc
fs
xchg
xor
mov
cmp
icebp
sub
jecxz
or
shrd
and
daa
loop
jno
mov
repnz
pop
loopne
xchg
lods
cmpsb
movsl
sbb
pop
shlb
xor
mov
or
std
mov
insb
xchg
sub
push
or
sub
mov
mov
and
dec
mov
xor
mov
mov
out
push
jge
xor
push
add
mov
lahf
mov
cltd
sbb
add
mov
jns
or
pop
jb
cmp
rcrb
adc
mov
ret
jno
lret
daa
insl
jmp
pop
xchg
rorl
jg
mov
stc
sub
mov
divb
call
ja
pop
test
icebp
and
test
xor
pop
es
mov
repz
loop
mov
add
enter
add
das
repz
fistpl
aad
enter
mov
jmp
lcall
fists
ljmp
ja
aaa
jle
cmc
add
rcr
cmp
mov
xor
insb
jmp
pushf
xchg
add
jp
stos
xor
int3
adc
pop
ret
les
add
insl
adc
sub
dec
notb
fsubrl
test
xchg
and
xor
stos
jecxz
xchg
sub
test
dec
push
outsl
out
lret
push
or
mov
jb
fistps
sahf
das
vxorpd
loopne
call
lock
and
push
cmpsl
jae
inc
stc
rclb
inc
dec
sarb
outsl
lret
pop
leave
lcall
lea
dec
cs
jmp
jb
pop
out
stos
sbb
jae
out
adcl
out
nop
sbb
pop
fwait
testl
popa
pop
sbbl
sbb
jb
jne
inc
sub
pop
mov
frstor
pusha
pop
cmpsl
fistpll
pop
notl
or
mov
sub
sub
repz
sub
jo
sbb
jb
aas
mov
fcomps
mov
add
xor
idivb
mov
stos
popf
cltd
fimull
andl
data16
pop
out
loop
pop
push
scas
and
out
fistpl
adc
mov
icebp
cmp
fildl
mov
jg
cmc
inc
cmp
pop
sub
mov
rcrb
mov
mov
mov
punpckhbw
push
add
adc
out
frstor
pop
in
ja
outsl
sbb
iret
cmpb
cwtl
ljmp
fiaddl
loope
ds
nop
mov
jno
lret
push
les
pusha
add
shlb
btc
jno
arpl
cmp
dec
arpl
sbb
jne
mov
sarw
dec
rcr
out
cli
and
adc
sub
jo
jbe
cmc
lds
inc
sub
ffreep
xchg
jg
xchg
push
lea
pop
out
ljmp
jae
ss
push
fldt
cmp
xchg
add
and
add
leave
cld
shll
xlat
mov
push
push
xor
sbb
adc
cmpsb
jae
inc
cmp
mov
into
jmp
std
push
cld
out
mov
jno
imull
mov
rcr
pop
jns
sbb
stos
ja
xchg
pop
pop
or
arpl
mov
js
test
and
xchg
repnz
mov
das
les
icebp
inc
jb
ja
mov
push
xchg
add
sti
xchg
cmc
decl
mov
out
adc
cmpsl
cmc
pop
lahf
mulb
fwait
icebp
push
mov
and
xlat
xor
loopne
mov
or
nop
popa
xor
shll
fs
mov
incl
jg
cld
lret
add
push
sti
js
xor
repz
in
mov
xchg
outsb
jne
lret
test
or
iret
sahf
and
lea
fistpll
pop
sub
pop
mov
sub
push
push
mov
lods
loope
int3
mov
mov
lcall
test
mov
aaa
hlt
cli
cmp
in
cld
cld
add
mov
or
movsl
scas
pushf
cld
sub
sub
test
loopne
shrb
push
adc
sti
pop
jge
jle
int3
mov
imul
jae
fisttps
mov
jmp
cltd
sub
jno
movsl
or
mov
or
inc
mov
jns
mov
cmpsb
sarb
pushf
dec
push
pop
xchg
arpl
scas
or
rorb
sub
xchg
scas
xchg
mov
in
cmp
xchg
jne
popf
sbb
inc
icebp
or
loope
dec
outsl
je
clc
sbb
loopne
jb
test
call
mov
jl
test
pusha
cmp
cltd
lods
outsb
add
mov
je
lret
jge
neg
pop
sub
in
enter
xor
test
mov
xchg
mov
cwtl
les
into
sbb
daa
leave
mov
sbb
sti
movsb
mov
push
cltd
or
leave
js
sub
movsb
repnz
pop
mov
cmpsl
in
inc
adc
ss
lods
inc
lods
loop
push
gs
into
adc
xchg
or
fistpl
aam
add
jmp
fwait
xor
cs
inc
xchg
sbb
ss
push
jbe
test
sti
mov
aam
inc
stos
push
insb
ss
inc
sub
xchg
mov
or
arpl
xchg
in
ja
jg
iret
cld
mov
repz
adc
xchg
and
aam
imul
loopne
jo
out
adc
push
aad
scas
pusha
mov
jmp
cwtl
sub
and
pop
clc
xor
jns
leave
mov
mov
cmp
cmpsb
shl
and
cmp
pop
test
cwtl
iret
cmp
mov
pop
dec
fisttpll
push
xchg
pop
jl
in
pop
sbb
into
int3
jnp
mov
xor
sarl
scas
xor
les
addr16
ret
rol
cmp
xchg
stc
scas
fildl
adc
bound
pop
push
lock
jge
leave
adc
das
jae
jg
xchg
out
std
in
hlt
data16
mov
pop
lods
flds
ds
xchg
dec
pop
lea
jnp
sbb
mov
inc
je
mov
jno
into
sti
pop
cmpsb
jl
in
outsl
dec
push
xor
jno
test
cmpsb
fidivs
jo
pop
fisubs
mov
xor
arpl
pop
lods
scas
lods
jge
mov
mov
mov
mov
adc
adc
fidivrs
add
and
pop
in
add
and
mov
lods
fistpl
das
pop
roll
rcr
movsl
movsl
daa
loope
mov
inc
ret
aam
sti
jecxz
jnp
xlat
mov
in
push
es
in
into
scas
nop
cmp
dec
std
hlt
int3
stos
andl
fcmovb
sub
test
ficompl
addr16
in
mov
movsl
pop
test
sbb
add
and
xor
fs
out
icebp
rcll
mov
test
pop
hlt
mov
inc
mov
add
sub
out
lret
dec
inc
flds
test
push
aas
shl
push
cmp
js
daa
sbb
nop
mov
shll
mov
pop
sub
push
jg
cmp
cmp
daa
pop
sbb
or
mov
mov
mov
cli
mov
nop
lds
mov
fcompp
test
stos
mov
andl
addr16
out
loopne
daa
dec
push
push
mov
icebp
loopne
adc
jno
cmp
mov
sbb
or
xchg
and
pop
cltd
fdivl
inc
jmp
xchg
std
jmp
cli
cmp
and
ljmp
lds
out
adc
pop
jmp
jge
xchg
inc
les
arpl
fisubrl
sarb
je
loopne
add
xor
lods
scas
out
loope
mov
outsl
cmp
or
push
fidivl
fcoms
xor
jb
dec
popa
ss
push
ja
inc
repz
mov
sbb
popf
push
ja
mov
pop
notl
inc
fadd
push
shrl
lahf
dec
pop
dec
cli
pop
xchg
jo
pop
inc
and
lret
add
or
dec
outsw
aad
stos
mov
jmp
lods
mov
cmc
adc
lock
bound
outsb
mov
mov
pop
dec
add
mov
sbb
sub
ss
push
out
ljmp
in
inc
stos
and
pushf
xchg
bound
jmp
dec
mov
mov
test
add
push
fdivr
mov
xor
sub
sbb
push
sub
add
or
in
or
mov
sub
scas
leave
cmp
cmp
dec
lcall
stos
pop
out
add
xor
sarl
jb
pop
adc
and
adc
mov
sbb
ret
xor
jp
cmc
mov
test
enter
pop
sbb
in
sti
and
repz
xchg
test
push
mov
push
xchg
imul
jb
test
lcall
jbe
xor
pop
stos
loopne
push
das
push
scas
adcl
inc
int3
push
sbb
or
add
cli
int
stos
aam
or
lds
dec
ss
arpl
sbb
das
mov
mov
es
imul
mov
jae
dec
cs
cmpsl
pop
jmp
xchg
sbb
inc
sbb
adcl
cli
sub
fidivrs
mov
pusha
xor
popa
jle
mov
or
cmp
mov
mov
fs
add
mov
fsubl
fwait
cmp
loope
push
test
arpl
dec
push
jle
sub
jl
out
mov
push
adc
rcrl
push
jecxz
add
out
aas
in
es
test
mov
inc
pop
xchg
in
mov
les
incb
subb
test
scas
movsb
ljmp
jno
cli
jle
cmp
in
jbe
mov
jae
add
sub
popf
mov
mov
push
add
jae
fcomi
rcll
xchg
add
in
inc
mov
and
fdivs
xchg
cmp
int3
pop
mov
adc
add
xor
sbb
rorb
mov
je
and
xchg
test
push
sub
je
sahf
popf
cmp
pop
lret
sbb
dec
shlb
clc
lea
mov
in
hlt
pop
loop
outsb
sqrtps
stos
xchg
faddl
xchg
andb
jb
int3
push
mov
sarl
jo
push
pop
scas
pop
nop
push
adc
insb
dec
add
add
mov
aam
or
lret
sbbl
pop
mov
push
cmpsl
pop
adc
loop
inc
sub
in
or
mov
rcll
dec
mov
sub
fs
jbe
push
jl
adc
into
sbb
in
sub
pop
mov
adc
jno
and
aas
and
xor
sbb
mov
in
cmp
add
add
dec
pop
inc
or
test
addb
jbe
dec
pop
aad
ljmp
sbb
stos
rcl
pop
cs
jns
testl
test
xchg
ss
pusha
lock
mov
mull
xlat
jne
addr16
call
dec
sbb
test
push
cld
sub
iret
ss
fidivl
lock
hlt
fstpl
xor
push
add
lods
notb
popa
rcrl
lret
sbb
fwait
dec
adc
and
scas
mov
je
xor
out
out
xor
lods
mov
mov
inc
fsubs
aaa
enter
repnz
xor
insl
inc
adc
mov
jmp
mov
aas
scas
lods
sub
xchg
cmp
das
sbb
out
adc
adc
cmp
jp
xchg
xor
adcb
mov
mov
iret
mov
cmc
sbb
cmp
mov
ja
pop
pusha
xor
jns
movsl
sbb
lahf
nop
jl
jl
mov
test
mov
lods
addl
xchg
mov
loop
cld
insl
cmp
loop
scas
bound
mov
inc
push
mov
cld
rcrb
cli
movd
mov
xchg
mov
rcll
pop
sbb
leave
mov
aam
jecxz
cld
sbb
cltd
xor
dec
fmuls
sti
decb
mov
popf
in
in
pop
in
sub
hlt
jbe
andl
addr16
lea
frstor
push
inc
pop
add
fcoml
in
out
clc
push
cmp
into
mov
mov
aad
or
and
adc
and
lods
inc
lcall
int3
pop
adc
loopne
shrl
cs
jecxz
xor
xor
adc
jb
sbb
mov
jg
mov
lods
out
pop
cmp
add
sbbl
inc
add
popf
or
sbb
rcll
jge
mov
mov
mov
jae
inc
dec
mov
daa
pushf
or
xchg
roll
sahf
inc
subl
ljmp
dec
imul
dec
sub
add
sub
mov
repnz
je
pinsrw
inc
lods
int
icebp
insb
cwtl
add
cmp
stos
and
adc
es
mov
xchg
xor
lahf
xor
and
subb
pop
jo
mov
mov
in
das
bound
pop
xchg
jle
cmpb
fs
dec
mov
sbb
out
movsl
stc
xchg
add
or
inc
lret
adc
xlat
add
out
and
bound
sahf
xchg
pop
mov
mov
cltd
test
das
clc
inc
dec
sahf
inc
in
dec
inc
out
cld
movb
es
addr16
sbb
shll
js
mov
sbb
les
enter
inc
stos
je
xor
xchg
cmp
pop
inc
jns
aad
lret
dec
jb
out
int3
lock
repz
icebp
fcompl
scas
xor
into
inc
mov
fs
test
ret
cmc
aas
pop
pop
jg
adc
add
sub
imul
jae
fstl
add
push
mul
notb
mov
mov
dec
decl
cmpsl
mov
inc
ret
jl
xor
adc
push
in
pop
inc
and
mov
stos
in
jecxz
insl
inc
cmp
imul
subb
dec
mov
cmpsb
leave
test
xor
cmpsb
mov
mov
mov
popa
stc
and
push
mov
mov
jbe
push
ss
ficoml
dec
mov
lret
shrb
and
adc
lret
jge
xor
push
rcr
fildll
mull
nop
adc
arpl
and
inc
aad
into
test
push
xor
xor
sbb
adc
pop
scas
sti
inc
sti
ret
cmpsb
or
insb
or
sbb
mov
pop
fldln2
int
mov
mov
fwait
cmpsl
sbb
loopne
loop
ss
jae
jl
test
jno
mov
sbb
in
int3
imul
pop
cmp
movsl
push
jmp
clc
rep
lret
mov
push
cld
icebp
or
fsubrs
lods
enter
mov
sbb
test
out
sub
outsb
mov
shlb
dec
mov
inc
jne
push
dec
imul
insb
jge
sarl
insb
push
lea
imul
gs
outsb
shll
dec
sti
mov
mov
aaa
push
test
mov
aas
cs
push
in
or
sbb
es
stc
pop
sahf
std
popa
and
jge
out
sub
shll
lods
mov
je
gs
repz
movsb
cld
cmp
or
loopne
outsl
lea
xor
mov
cmpb
or
lea
lods
or
movsb
lcall
addr16
or
jne
out
cmp
mov
imul
xor
dec
cmp
outsl
cmc
push
cmp
dec
scas
addb
popa
mov
mov
lock
jmp
sub
nop
ja
inc
dec
addr16
xor
push
inc
imul
dec
mov
inc
cli
arpl
mov
xchg
dec
out
clc
cmp
add
test
jb
add
inc
mov
xor
repz
jecxz
xchg
xor
std
ds
lea
fisubrs
flds
jae
shll
xchg
sbb
scas
pop
ret
pop
jbe
mov
fnstsw
repz
or
jle
or
fistpl
test
lods
dec
ss
test
xchg
cmpsb
pusha
push
stc
test
fmuls
ljmp
inc
or
dec
mov
pop
imul
push
arpl
jno
add
xadd
adc
repnz
push
pop
ljmp
add
stos
clc
xchg
xchg
sarb
loope
clc
aad
add
int3
pop
mov
mov
arpl
fwait
add
xor
les
lods
and
and
repnz
test
mov
xor
negb
fcoms
shl
mov
scas
pop
lods
mov
and
int3
outsl
jecxz
sahf
sub
sbb
sti
lds
hlt
mov
pop
pop
dec
xlat
pop
notl
scas
das
inc
jecxz
xor
arpl
push
push
mov
test
jl
es
xchg
pop
xchg
loopne
inc
xchg
jg
or
sub
inc
pop
ljmp
adc
pop
loopne
clc
xor
cmc
sub
daa
clc
lret
into
and
mov
adc
loope
rolb
jnp
pop
das
cmpsl
ficomps
push
xchg
rclb
add
xchg
add
push
pop
sbb
cmp
idiv
mov
clc
push
lock
xchg
xchg
mov
mov
sarb
sahf
in
jno
xchg
inc
cmpsb
dec
mov
test
stc
cwtl
fidivl
cmp
les
inc
adc
roll
cmp
dec
scas
sub
fistl
mov
mov
push
push
mov
in
sbb
jno
dec
aam
lods
jmp
and
stos
mov
fdivs
xor
fld
xor
lds
lret
or
in
leave
xor
pop
cli
lret
pop
xor
je
iret
xchg
ficomps
jmp
scas
outsl
rorl
push
pop
lcall
ret
xor
jmp
xchg
dec
pusha
js
movsl
cmp
add
adc
test
in
leave
xlat
jno
lret
cmp
cmpb
pop
in
push
ret
into
jecxz
into
jecxz
int
iret
pusha
shll
xor
out
loope
xor
jecxz
mov
test
icebp
push
jmp
or
dec
cwtl
xchg
mov
xchg
xchg
repz
push
inc
sub
sbb
int3
bound
imul
into
push
dec
addl
loope
and
lahf
in
sti
push
dec
icebp
std
ja
pushf
adc
pop
fwait
loopne
fcmovnb
xchg
jne
stc
cli
adc
hlt
pop
jmp
xor
les
loop
add
addr16
insb
push
dec
jmp
xchg
fisttpll
rol
shrl
into
and
in
push
fwait
add
pushf
dec
testb
lods
xor
leave
cmp
mov
mov
into
xchg
cld
xchg
test
std
pop
aam
pop
fcmovnbe
inc
mov
jl
pop
inc
outsl
arpl
sbb
leave
insl
dec
push
inc
mov
fnstenv
mov
mov
scas
mov
fimuls
adc
xor
jno
out
jnp
dec
xor
xor
jmp
pushf
inc
jp
pop
cmp
fdivrl
enter
js
pop
sub
add
mov
cs
mov
mov
es
das
rorb
or
test
std
clc
pop
out
in
jno
push
icebp
js
mov
adc
xor
mov
mov
xchg
lret
xor
test
das
mov
sub
rolb
mov
mov
popf
dec
nop
lahf
adc
mov
add
aaa
cmp
out
and
cld
xor
add
int
mov
nop
sub
mov
push
dec
xchg
push
push
loopne
pop
or
push
cmpsb
pushf
mov
cmp
adc
and
shlb
lahf
in
cmp
dec
stc
stc
adc
jns
lahf
mov
dec
imul
scas
stc
and
cltd
cltd
in
and
outsl
fwait
jno
push
adc
or
mov
lods
leave
pop
xor
cmp
push
mov
and
jae
dec
push
repnz
imul
movsl
pushf
in
adc
xor
and
mov
mov
lahf
add
dec
icebp
cmp
clc
int3
mov
pop
and
leave
inc
dec
and
hlt
pop
xchg
add
or
mov
xchg
fimuls
inc
lret
sub
jle
add
jge
dec
insb
lds
adc
mov
cmp
cmp
aam
push
pushf
push
jle
cs
pushf
cmc
mov
cmpsb
test
leave
insl
jge
dec
xor
sub
gs
fcomip
inc
out
in
mov
add
pusha
sti
mov
xchg
imul
jecxz
pop
add
stos
fcmovbe
cltd
sub
dec
mov
xchg
or
sub
jnp
pop
jg
push
lock
cmp
mov
xor
sub
js
enter
sbb
cmp
sub
mov
mov
mov
jnp
rcll
das
nop
or
fwait
push
xor
lahf
cmpsl
sbb
faddl
cs
adcl
add
xchg
pop
icebp
xchg
xchg
and
ds
mov
add
in
stos
lret
xorl
sbb
or
leave
lret
sahf
aas
add
daa
mov
rolb
dec
fninit
cld
or
push
or
xlat
lods
test
jl
into
dec
sub
sub
push
inc
jne
xchg
cs
cmp
xchg
push
cmp
pop
sbb
sbb
insl
fstpl
sbb
mov
mov
lea
sbb
arpl
sbb
sbb
xor
mov
jno
pop
out
mov
pop
out
mov
cmpb
loop
jle
mov
or
ret
pop
mov
rcr
inc
notb
out
cmp
mov
dec
rclb
lock
stos
std
add
mov
adcl
mov
ja
push
mov
and
mov
mov
sbb
sub
sub
or
sarl
aad
stos
xchg
test
push
or
mov
je
test
lcall
cmp
shrb
imul
test
add
xchg
mov
push
add
pop
test
icebp
aam
movsb
inc
jg
pop
push
mov
mov
js
push
cmp
imul
loope
data16
mov
cli
xchg
mov
xchg
jbe
stos
gs
hlt
and
xor
rorb
or
sbb
push
cmp
pushf
mov
jnp
cmc
insl
jl
push
lcall
data16
popa
mov
scas
iret
adc
sbb
fsubrs
mov
push
int
jno
push
les
aaa
rcl
addb
repnz
mov
xor
enter
add
stc
dec
pushf
cmpl
les
add
xchg
lea
mov
jmp
jbe
cmpsl
sbb
lds
inc
data16
jb
mov
out
xlat
sbb
mov
xchg
xor
data16
adc
sbb
scas
dec
repz
mov
pusha
jge
scas
and
pop
outsb
daa
fs
adc
sarb
loop
rorl
pop
mov
cmp
and
mov
mov
push
call
mov
add
out
jns
mov
sbb
cld
mov
pop
jno
cwtl
int
or
push
lcall
das
and
sbb
xchg
add
negb
daa
push
das
or
xchg
push
lret
cltd
xor
mov
adc
or
fs
pop
addr16
mov
inc
insb
fisubl
push
insb
outsl
insb
lret
push
mov
mov
iret
pop
sbb
in
repnz
stos
into
rolb
and
pop
jb
inc
test
ss
ja
xchg
lods
gs
sahf
or
sub
xor
cmp
cmp
mov
in
fsubs
hlt
adc
std
aam
or
xor
lock
mov
negl
sub
scas
popf
inc
pop
or
repz
lret
pop
sbb
jmp
jl
fwait
jle
insl
ret
es
aam
mov
aad
add
jmp
push
and
movsb
fs
sbb
or
xchg
sbb
jno
sub
pop
mov
cmpsb
cmp
lods
inc
enter
pusha
stc
jne
aad
push
jnp
mov
xor
lret
xorb
mov
xchg
jle
lahf
jnp
cmp
in
adc
cmpsb
clc
int
xor
test
cmpsb
push
pop
sbb
xor
sub
push
pushf
jno
lock
xchg
in
lret
shll
aam
pop
mov
adc
out
in
stos
jne
jbe
jp
shlb
xchg
pop
mov
fstps
adc
or
ret
movsl
imul
fs
cwtl
pusha
icebp
mov
adc
gs
mov
push
adc
out
pop
xchg
pop
loopne
mov
pop
xor
mov
cwtl
sahf
fwait
int3
scas
in
dec
adc
adc
stc
or
in
stos
sbb
pop
or
pop
pop
shrl
pushf
add
and
imul
dec
xor
xchg
mov
rolb
lods
out
popf
out
fcmovb
loopne
pop
push
paddsb
ror
lods
xchg
nop
and
roll
aad
stc
mov
mov
bound
dec
sbb
xor
or
push
push
adc
pop
outsb
enter
test
fiadds
insb
jmp
sub
stos
cmpb
jge
mov
adc
popf
mov
test
test
mov
sub
scas
lock
pop
ja
sub
out
pop
sarb
repz
sbb
cltd
cs
jae
xchg
loop
aas
out
or
mov
movsb
int
lret
test
sahf
adc
fwait
pop
pop
cltd
jecxz
sti
add
pop
sbb
bound
pop
sbb
push
xchg
push
lcall
add
lcall
mov
loop
shr
pop
fmuls
rclb
push
inc
iret
jbe
jle
sub
adc
into
insl
sarb
jg
mov
and
je
xchg
or
cmpsl
stos
jns
loop
ret
ret
adc
lret
jmp
insl
push
xchg
push
std
lea
shr
test
fs
add
in
daa
push
das
pop
mov
ljmp
aad
lds
pushf
xor
xor
cwtl
add
push
lret
xor
icebp
dec
das
or
or
fwait
sahf
dec
cs
mov
sub
push
mov
xchg
out
movq
aaa
stos
xchg
das
xchg
jno
fld
rclb
mov
adc
pop
mov
repz
fstl
out
fimuls
pop
sahf
ret
mov
ret
mov
mov
adc
in
pop
pop
push
ljmp
push
fidivrs
adc
cmp
lret
movsl
loope
cmp
lods
mov
jle
ljmp
xchg
mov
stc
lret
or
cltd
pop
dec
cs
mov
inc
xlat
ja
scas
fs
adc
push
es
lea
dec
arpl
cltd
mov
xor
cmp
jae
xchg
fmuls
je
pop
outsl
pop
call
icebp
push
sub
jmp
aas
lock
mov
stos
mov
inc
sbb
in
cmp
dec
or
cvtpi2ps
push
xchg
mov
jmp
sub
pop
or
ljmp
cltd
xchg
mov
cli
or
int3
jge
sti
test
loopne
push
lret
cs
shlb
in
or
enter
inc
jb
cmc
stos
rolb
jmp
cmp
repnz
cmp
sbb
cmp
jae
sarb
sub
fistpll
or
xor
or
mov
das
pushf
sti
lahf
jns
addl
out
mov
stos
inc
repz
es
sbb
sahf
and
add
sub
out
pop
fs
clc
dec
push
test
or
daa
gs
cli
cmp
add
call
in
jge
shrb
xchg
jl
in
outsb
mov
fisubl
es
js
mov
fsub
jge
or
push
shl
in
or
xor
ds
cmp
push
sbb
lcall
test
aad
mov
or
pop
movsb
sub
lds
pushf
fstps
rclb
pusha
lret
push
mov
pop
mov
add
test
sub
or
paddb
cli
das
les
xlat
jae
adc
not
bnd
addl
inc
jle
or
pusha
cmp
mov
data16
icebp
or
add
lret
imul
inc
and
dec
push
pop
cmp
xchg
pop
sbb
jp
pop
sbb
inc
loop
sbb
scas
out
mov
outsb
jmp
dec
push
adc
popf
rclb
push
push
mov
jle
mov
sbb
je
jno
push
stc
jo
mov
ja
xchg
and
fucomip
je
mov
pop
negb
sbb
insl
repnz
fsubl
icebp
jae
mov
jg
fnstcw
jne
icebp
jne
cmp
xor
insl
movsl
inc
ljmp
xchg
leave
mov
pop
rorl
mov
ja
mov
cmp
inc
pop
aas
pushf
out
push
lock
idivl
jno
mov
and
gs
repnz
sarl
int3
cmp
das
sub
aas
cs
or
adc
push
cltd
arpl
ja
fdivl
push
jmp
mov
sti
mov
pop
loop
loope
add
daa
fsts
stos
jp
scas
mov
arpl
fwait
and
pop
lds
jecxz
cmp
repnz
lds
mov
lahf
hlt
cmp
pop
arpl
or
adc
jg
fstps
icebp
mov
fnsave
andb
xlat
adc
push
int
jecxz
xor
inc
lcall
or
mov
xor
mov
jno
loope
test
shll
outsb
subb
movsl
push
repnz
andb
shll
add
test
ret
stc
inc
sbbl
mov
mov
inc
xchg
dec
and
insb
sbbl
fwait
or
xchg
inc
sbbl
sbb
aad
div
jbe
cmpsb
in
adc
jle
test
dec
mov
sub
dec
xor
mov
call
insb
lahf
aas
pop
cmp
pop
repnz
repz
push
es
mov
scas
pushl
mov
subl
ljmp
or
cmp
cmp
sub
test
arpl
jge
mov
push
push
cld
out
ljmp
movsb
pushf
sub
adc
fs
ret
insl
popa
mov
aaa
mov
loopne
xchg
mov
mov
movsb
xchg
sbb
inc
dec
sti
push
rorb
adc
dec
out
ja
mov
aas
xchg
stos
fwait
pop
shll
in
ret
xchg
lret
add
sbbl
sbbb
jl
inc
nop
nop
xchg
fisubrl
inc
and
push
pop
add
pop
ss
cmpsb
mov
es
out
jns
and
mov
pop
movsl
inc
fsubrp
into
cmp
ja
or
pop
jmp
lock
insb
mov
fsub
add
lea
ficoml
inc
xchg
mov
xor
sub
subps
adc
movsl
mov
pop
fs
je
call
out
sub
push
lock
push
sbb
int
clts
inc
fnstsw
test
ja
adc
jmp
xor
jnp
jp
lods
or
mov
push
add
mov
sbb
mov
or
mov
inc
imull
cmp
xor
xor
adc
push
movsl
inc
gs
dec
mov
fsubs
test
stos
jns
push
loopne
lock
xor
xlat
popa
and
aad
aam
test
icebp
sbb
inc
data16
jl
push
jb
in
xchg
mov
or
mov
ret
lcall
bound
cli
mov
insb
ja
aaa
dec
mov
mov
ret
je
mov
into
jp
mov
sbb
pushf
insl
push
je
mov
cs
mov
add
ret
ret
xor
icebp
imul
movsl
dec
or
mov
lret
and
rol
sbb
call
pop
lods
jno
sbb
pusha
rorb
push
sbb
inc
jp
adc
mov
je
inc
fsubs
adc
sub
out
lods
sbb
xchg
jo
mov
push
xchg
sub
cld
adc
test
sbb
ret
mov
xchg
add
sti
pop
jmp
imul
movsl
es
dec
mov
imul
fildll
xor
mov
xlat
fs
and
xchg
ljmp
imul
and
repnz
repz
fwait
jge
mov
mov
insl
ds
xor
lock
sti
cli
enter
xlat
sbb
repnz
jle
pop
push
cmp
xor
out
cmp
dec
in
xchg
pop
push
or
les
scas
std
ljmp
fsubs
mov
hlt
rorl
adc
mov
dec
ds
call
adc
test
xchg
mov
dec
daa
add
mov
or
cmp
mov
loope
in
cmp
and
xchg
jb
sub
jbe
xchg
pusha
mov
addr16
sub
adc
ja
pop
mov
push
cmp
mov
push
mov
int
mov
sbb
sbb
test
jg
mov
out
push
sub
and
adc
lahf
outsb
cld
or
or
mov
inc
faddl
addl
inc
sbb
jbe
push
shlb
outsb
mov
adc
mov
push
add
xor
cmp
jo
mov
jp
mov
and
lods
cmp
bnd
dec
std
sbbl
testb
movsl
push
add
call
xchg
leave
mov
mov
pop
aaa
push
jbe
pop
xchg
mov
outsb
jae
data16
and
xor
xchg
repz
rclb
ds
dec
push
push
lret
cmp
cmp
data16
pop
pop
into
xchg
call
cwtl
mov
lea
adc
lods
inc
xchg
cwtl
leave
adcl
nop
pop
jnp
pop
inc
push
pop
clc
rorb
sub
mov
fwait
pop
dec
mov
pop
mov
add
shrl
scas
into
mov
inc
mov
ss
xor
addb
in
dec
xor
in
push
xchg
lds
push
rolb
jecxz
fidivl
push
push
jle
xor
push
outsl
and
bound
adc
fiadds
out
cmp
mov
add
in
add
jno
xchg
pop
scas
jbe
in
sub
lcall
popa
push
mov
outsb
in
mov
inc
lock
xor
add
jbe
jb
pop
int3
push
pop
fistpl
hlt
jle
adc
jg
bnd
outsl
cmp
adc
int3
mov
cltd
pop
adc
test
paddd
mov
jb
shlb
loope
or
fldenv
inc
arpl
sbb
jae
push
jle
sub
das
xor
jp
xorb
sub
js
xor
leave
int
jmp
jbe
dec
push
jne
mulb
mov
insb
xor
testb
rclb
xchg
daa
add
add
sub
sbb
lret
std
test
inc
lret
pop
push
ror
sarl
pushl
dec
cmpsb
shlb
push
mov
adcl
lods
xor
dec
cltd
cmc
jp
and
out
out
cmp
cld
andl
push
lea
add
push
mov
arpl
cmp
push
cmp
cld
inc
adc
out
adc
adc
pop
inc
and
push
and
cld
stos
cli
dec
and
adc
into
dec
push
lods
jo
dec
pushf
aaa
push
cli
outsl
jae
jae
jnp
test
push
cmpsb
and
pop
iret
jge
cs
or
cwtl
bound
xchg
adc
inc
addr16
subl
in
lea
movsb
das
sub
mov
mov
or
shrb
or
mov
adc
int3
into
shll
push
push
adc
xchg
popf
sbb
sahf
mov
xchg
push
cmp
xlat
imul
cwtl
cmp
push
aaa
pop
push
mov
sub
cmp
jge
pop
or
daa
cmp
mov
sbb
push
jo
add
and
cld
push
pop
fldcw
sub
mov
mov
adc
or
dec
sbb
fbstp
out
les
xchg
jnp
cltd
lods
mov
xchg
add
jmp
in
or
gs
ja
movsb
xchg
loope
shlb
mov
add
lods
aam
adc
shrb
add
mov
add
mov
rorl
rcrb
dec
repnz
or
mov
adc
js
and
test
inc
inc
enter
fildll
jbe
inc
out
cwtl
dec
dec
out
mov
pop
hlt
jbe
dec
mov
cltd
cmp
aad
dec
aad
inc
inc
stos
mov
mov
adc
xchg
imul
ror
aam
fidivl
loop
daa
fimull
xchg
sub
push
dec
dec
xor
jno
jle
ss
pop
mov
add
or
ret
dec
lds
les
jmp
xor
cs
je
ja
shll
leave
lret
or
cltd
in
aad
xor
add
jl
mov
lea
jno
in
test
mov
adc
sbb
shll
pop
mov
mov
int
lret
jle
out
dec
call
scas
and
inc
mov
push
pop
cmp
dec
push
insb
repnz
jg
xor
mov
jbe
dec
in
sub
bound
call
sbb
subl
leave
ret
out
and
adc
shlb
mov
bound
mov
cltd
fildl
dec
push
push
jnp
and
gs
imul
jg
shlb
sub
imul
dec
fisttpl
scas
sbb
dec
dec
cld
cld
xchg
fcom
neg
or
cmc
mov
push
int3
add
adc
dec
std
inc
xor
stos
xchg
in
adcl
fcmovu
std
leave
leave
jge
mov
dec
in
fcomps
jns
repnz
fldl
enter
jb
clc
sarb
xor
or
jae
popf
out
lds
sahf
out
push
fstpl
pop
test
mov
inc
xor
out
fmuls
outsl
sbb
push
adc
inc
aas
and
adc
xchg
cmc
ret
and
ja
inc
dec
rcrb
ds
aad
mov
xor
xchg
test
pop
xor
rcrb
and
sbb
adc
cmp
sub
and
dec
je
sub
sbb
pop
sub
cmp
aas
or
and
outsb
dec
pop
loopne
sti
sub
out
lods
mov
add
imul
lea
leave
data16
int
aaa
xchg
push
xor
shll
xor
insb
and
and
je
and
cmp
shll
push
xchg
lcall
dec
mov
lret
fldenv
or
in
dec
lret
and
xchg
mov
jecxz
stos
mov
dec
jp
mov
in
sub
js
and
pop
loopne
and
push
and
aas
loope
mov
xchg
insb
fldt
jbe
int3
add
mov
jb
addr16
test
sbb
ja
xchg
mov
xor
shrb
cmpsl
and
popf
test
sbb
dec
sbb
ja
push
icebp
fucompp
sub
hlt
out
imul
sub
mov
inc
pop
inc
je
aas
dec
push
ljmp
pop
clc
xchg
out
mov
sbb
cmp
sbb
xor
imull
push
imul
test
and
in
ds
in
push
xor
arpl
sar
repnz
adc
jmp
pop
adc
push
lcall
cltd
insl
insb
int3
jns
das
dec
mov
push
add
inc
lret
insl
imul
inc
es
dec
movsb
lds
and
mov
push
jbe
or
pop
inc
xlat
js
fwait
mov
and
pop
mov
mov
lock
enter
fsubr
jge
sub
inc
adc
dec
call
pop
loop
call
in
insb
imul
mov
pop
xlat
mov
ret
test
push
std
dec
fldenv
jb
jecxz
xlat
popf
and
daa
shll
lea
jnp
shlb
lods
mov
inc
je
inc
test
rcl
add
and
push
sub
fidivrs
mov
pushf
into
dec
push
ficompl
loope
sbb
in
sti
cli
and
xchg
mov
push
shl
mov
scas
push
and
jno
dec
insb
out
cmc
loopne
sbb
aam
dec
jnp
or
inc
or
and
add
lock
pop
sbb
lds
icebp
aas
add
or
push
mov
divb
and
aas
add
xchg
fidivrl
mov
jnp
sbb
mov
push
imul
inc
pop
pop
loop
lahf
in
out
fwait
dec
xor
pop
adc
xor
andb
ret
lds
mov
cltd
jns
les
push
dec
shrl
into
fidivrs
dec
into
mov
inc
lods
sbb
shlb
mov
rcrl
xor
cmpb
pop
repz
lods
sahf
out
test
stos
push
jae
in
js
pop
in
mov
pop
dec
sbb
nop
adc
xchg
dec
push
push
jg
in
cmp
das
xchg
js
mov
das
jecxz
xor
enter
jp
xchg
push
outsb
fmul
cmp
lahf
arpl
mov
cli
in
xchg
out
mov
mov
mov
mov
inc
outsb
jne
ja
fs
test
in
push
pop
ja
inc
or
mov
fs
addb
stos
mov
jl
pop
sarb
stc
dec
cmpsl
outsb
jl
push
in
or
mov
test
pop
lcall
mov
fcoms
inc
sub
dec
mov
sub
fs
xchg
imul
cs
loope
int3
sbb
jp
jg
jecxz
mov
push
sub
sub
data16
test
pop
sbb
scas
xchg
add
sub
or
cmp
int3
enter
cmp
and
mov
lret
dec
rcrl
gs
dec
addr16
insl
test
push
stos
inc
jmp
imul
pop
nop
aad
fisttpl
cmp
bound
jp
lock
push
ja
movsl
sub
xchg
xchg
fistl
aam
push
mov
imull
scas
mov
inc
testb
icebp
xchg
push
aam
push
scas
test
adc
shrb
and
sbb
jge
aam
xchg
and
outsl
aad
xchg
fucomp
insl
push
add
ss
sbb
iret
outsb
add
movsl
insb
sahf
jge
insb
cs
cmpsl
mov
repz
pop
stc
sbb
cmp
pop
dec
rcrl
fwait
pop
cwtl
jns
mov
out
inc
bswap
and
pop
inc
add
fsts
fsts
cmp
es
shrl
or
icebp
mov
lcall
cmpsl
ret
int
lret
aas
add
mov
inc
or
dec
fcoms
fwait
add
sub
mulb
add
cmp
inc
add
pop
xchg
sbb
and
sub
dec
mov
xlat
leave
or
repz
mov
xor
push
cmp
rorl
test
mov
add
iret
mov
mov
inc
jg
repnz
bound
insl
adc
out
inc
in
sbb
mov
push
inc
pop
xchg
ficomps
clc
jp
inc
aad
mov
int3
mov
loopne
jbe
mov
add
inc
mov
je
sbb
xor
insl
cmp
faddl
dec
sub
mov
cmp
mov
enter
jge
clc
rcrl
push
dec
hlt
lahf
push
xor
es
jecxz
sbb
and
loopne
das
cmp
outsb
push
movsl
in
push
in
push
jl
push
sbb
fcomi
sub
push
std
or
sub
lods
dec
aam
loop
or
lds
xchg
dec
lret
dec
fldpi
jne
outsl
xchg
test
push
aad
mov
testb
js
sti
add
cmpsb
icebp
push
push
int
aam
push
inc
fsubp
pop
ss
cmpsb
rol
in
iret
inc
sub
push
xlat
icebp
shlb
rcrb
test
cwtl
test
adc
ret
aaa
sub
pop
loope
arpl
jle
pop
ss
dec
lahf
pop
repnz
add
mov
push
sbb
xor
mov
jp
icebp
push
sub
adc
jecxz
stos
mov
pop
push
inc
sbb
or
popl
stos
jle
shlb
xor
xchg
lock
mov
fiaddl
test
mov
andb
add
pop
sub
jle
jge
jbe
dec
sahf
mov
cmpsb
outsl
ret
mov
xor
icebp
loopne,pn
or
call
sub
dec
sub
mov
mov
psubsb
in
xchg
ljmp
test
mov
mov
test
fistpll
out
frstor
fistps
xor
sbb
ret
fidivl
mov
cmp
sbb
insl
push
and
fucomp
lret
inc
and
mov
mov
adc
push
xor
in
xchg
repz
sub
ljmp
adc
xchg
push
in
stos
sbb
inc
add
mov
stc
xor
mov
fdivrs
loope
xchg
mov
fisttps
lods
mov
call
and
popa
sbb
popf
fucomp
loope
out
in
mov
lret
push
xor
or
mov
pop
sbb
push
push
aaa
loopne
pusha
sar
xchg
adc
push
into
movsl
jg
mov
out
lods
test
inc
clc
mov
pushf
push
mov
and
js
jno
fdiv
sti
addr16
adc
movsb
mov
add
sarb
xorl
icebp
aas
add
or
pop
movsl
stc
mov
ret
lods
lods
xor
xor
inc
push
jb
aam
hlt
fwait
inc
bound
outsl
push
rcrl
inc
shrb
ljmp
sub
rcrl
movsl
mov
daa
mov
rol
loope
cmp
into
leave
push
lods
aaa
jl
adc
call
cmpsl
and
es
xor
xlat
xchg
cmp
jno
mov
cmp
dec
cwtl
jns
jno
popf
xchg
shll
push
in
and
sub
mov
xor
or
pop
xchg
jge
pop
pushf
imul
ja
mov
mov
cmp
push
ss
fwait
xchg
xchg
and
leave
xchg
push
int
sub
cmp
mov
scas
jg
sbb
mov
mov
cmp
sbb
sti
in
test
xchg
fldenv
mov
xchg
lcall
xor
pop
call
movsl
enter
jns
mov
lahf
out
sbb
push
insl
aaa
sub
xor
lahf
sbbl
insl
adcb
mov
std
clc
lea
fisttpll
dec
mov
mov
js
sub
cld
jecxz
mov
fwait
inc
dec
cwtl
jmp
imul
cltd
add
dec
jae
stos
xchg
nopl
push
lcall
popa
jae
xchg
dec
das
push
cmp
test
mov
and
fs
stc
cli
add
ss
xchg
sbb
pop
xchg
call
jmp
sub
lds
scas
inc
std
ss
cmp
arpl
or
aaa
lahf
adc
push
insl
jecxz
inc
mov
testb
adc
pop
mov
adc
loopne
notl
mov
call
push
sub
sti
std
lret
mov
push
in
cmp
mov
int3
mov
sub
mov
negl
pop
scas
popa
popa
andb
inc
aad
push
fisubl
cmpsl
aas
add
jp
int3
mov
jl
lock
dec
push
adc
mov
pop
into
inc
dec
cmp
pop
cmp
outsl
dec
aas
mov
jae
ficoms
gs
dec
xchg
sbb
imul
push
es
fwait
push
sti
adc
adc
fwait
mov
xchg
addr16
leave
ret
jbe
call
jg
jmp
addr16
cmp
rcrb
dec
sub
cld
or
jmpw
xchg
iret
cs
push
pop
xor
ds
mov
or
inc
in
inc
cmp
addb
movsl
shrb
ret
push
cmc
or
pushf
cld
and
add
test
inc
loopne
adc
hlt
inc
xchg
pop
jp
xchg
fnsave
loopne
fiadds
pop
sbb
ret
mov
sahf
mov
pop
iret
call
daa
mov
or
xor
push
test
dec
cmpsb
or
adc
sub
sbb
out
mov
cli
sbb
dec
mov
repz
leave
fs
mov
inc
mov
aas
movl
push
jg
or
sti
aad
jnp
lods
push
das
sbb
jp
cs
cmpsb
inc
cmp
cmpsl
jae
cmp
cs
loopw
daa
sub
and
test
or
lahf
add
js
add
dec
jl
dec
mov
filds
cmc
xchg
test
sbb
cltd
push
push
xor
pop
cltd
rorb
dec
movsl
je
add
outsb
and
jb
xor
scas
mov
push
in
cld
out
test
int3
cmpl
push
std
add
arpl
pop
mov
aaa
pop
push
pushl
jle
pop
sbb
jns
les
int
cmp
loop,pt
and
aad
mov
int3
mov
pop
data16
ficomps
fs
popf
and
cmpsl
cmpsb
or
mov
outsb
jg
daa
fisubl
xchg
out
xchg
call
fcoml
stos
sbb
cmp
negb
js
inc
fsubp
cmp
pop
xor
sbb
adc
xchg
push
int
and
les
jle
mov
inc
adc
mov
sti
cmp
dec
mov
inc
shll
lret
xor
pop
mov
mull
incl
pusha
cwtl
and
fisubrl
loop
dec
push
cld
aaa
arpl
xor
sbbb
int
je
mov
xchg
les
cmp
addl
ss
rorb
jbe
xlat
push
out
sub
cmp
add
jp
inc
add
adc
cmc
ljmp
push
orl
and
mov
leave
lods
lods
xchg
fstp
andl
inc
imul
pop
and
xchg
inc
xor
and
loopne
fdivp
push
mov
xchg
or
mov
or
adc
mov
adc
into
jmp
fistps
out
out
das
inc
pop
cwtl
jmp
rcll
cmp
aad
pop
out
xor
dec
imul
mov
cmp
scas
fistpll
stos
jae
in
lods
mov
mov
fnstenv
sahf
repz
xor
repz
fnsave
push
adc
xor
push
push
jb
jno
sub
lahf
addr16
stos
xchg
lea
cmp
leave
shlb
mov
xor
scas
cltd
pop
mov
sbbl
imul
pusha
pop
imul
pop
xchg
std
dec
mov
imul
jecxz
movsb
nop
adc
mov
divb
mov
lcall
bound
push
or
out
call
pop
pusha
imull
xchg
add
pusha
add
loopne
ds
adc
add
pop
and
pop
and
mov
aad
arpl
push
xchg
adcl
lahf
xchg
xchg
out
xchg
xchg
adcb
int3
out
dec
mov
dec
push
cmp
arpl
xor
fwait
pop
sbb
mov
out
and
hlt
pop
xor
jo
cmpb
in
or
adc
pop
sti
xchg
scas
adc
sub
sub
cwtl
cmc
and
mov
mov
dec
mov
into
int
jl
mov
clc
and
and
lea
pop
cmp
shll
push
inc
push
test
fwait
dec
lea
jl
std
lahf
cmpsl
ds
fiadds
xor
pop
pop
call
or
adc
cmpsb
adc
adc
popa
ret
mov
mul
xor
hlt
add
addb
add
in
xchg
rorb
dec
or
or
dec
sbb
cmc
adc
jg
inc
shrl
and
fstpl
nop
mov
loope
add
jbe
or
pop
sarl
mov
roll
mov
loop
xchg
mov
cmp
pop
dec
adc
lea
and
jmp
adc
out
jp
loop
imul
jno
inc
out
push
xor
mov
into
cwtl
push
out
mov
es
int3
repz
in
mov
je
sbb
movsb
lcall
adc
xor
dec
mov
adc
push
xor
jmp
jnp
pop
xchg
cmp
jge
sbb
repz
outsb
pop
xchg
pop
nop
adc
xorl
sub
and
arpl
mov
arpl
and
mov
jecxz
or
xor
add
ljmp
rorb
lcall
leave
leave
push
ret
jb
push
mov
jne
xor
or
aad
add
jbe
inc
loopne
add
jmp
test
mulb
jecxz
add
out
data16
push
fcoms
lods
leave
push
xchg
jbe
daa
inc
mov
lret
sub
dec
aas
out
adc
adc
sbb
daa
sti
sub
in
jmp
scas
mov
clts
pushf
mov
mov
and
jmp
clc
jo
test
outsl
jmp
jmp
movsb
bound
lea
mov
sub
pop
xlat
mov
sti
roll
adc
imul
jne
mov
lods
cmpsl
pop
popf
repz
push
pop
loop
xchg
jecxz
in
fcmovnb
nop
mov
cwtl
mov
fcoms
and
cmpsb
call
xorl
inc
mov
mov
fiaddl
and
dec
in
pop
inc
mov
lret
stos
gs
cmp
popa
push
cmp
leave
cmp
divl
loop
sub
xchg
add
push
jno
ja
sub
repnz
push
pop
fs
movsl
into
mov
lahf
and
or
sti
fcompl
pop
aam
outsl
sbb
or
sbb
test
lahf
nop
xchg
in
pop
push
ljmp
in
push
repz
sbb
movsl
cmp
sti
icebp
push
or
lods
cmpsl
push
cwtl
add
mov
dec
lds
push
mulb
ret
cmp
test
mov
loope
jnp
imul
cmp
ret
andb
imul
cmp
movsl
mov
push
inc
stos
mov
fistps
arpl
pushf
push
mov
insl
testb
aad
xor
daa
pusha
jl
cmp
jne
out
xor
push
pop
in
lods
leave
insl
xchg
or
mov
jne
into
add
jecxz
out
pop
test
roll
adc
push
xchg
jbe
loop
dec
cmpsb
ret
mov
dec
pop
test
dec
and
sub
bound
shll
and
es
xchg
testb
inc
adc
insl
push
dec
sbb
arpl
cmp
not
arpl
pop
popf
movsl
pop
sub
sbb
icebp
pushf
add
leave
jne
out
lcall
jmp
rolb
js
cmp
repz
dec
rclb
mov
jb
cli
add
dec
sbb
mov
test
fs
shlb
jne
and
pop
jae
mov
rorb
out
movsl
pushf
xchg
movsl
mov
aas
jle
enter
test
xchg
bnd
data16
cli
push
pushf
sbb
lret
jmp
pop
sahf
movsl
push
xor
std
or
icebp
out
aam
mov
mov
push
adc
cmpsb
sbb
inc
add
mov
xor
mov
call
xchg
loope
loop
lret
inc
insb
mov
cli
mov
fs
fcomip
addr16
jle
dec
mov
or
movsb
rcll
inc
push
cltd
cmpsb
repz
push
mov
cmpsb
add
mov
lahf
sub
out
pop
push
add
mov
add
mov
movsl
ljmp
mov
mov
dec
cli
push
cld
rcr
and
xor
outsb
movsl
in
pop
or
xor
mov
movsl
pop
jp
adc
shll
ljmp
sbb
adc
push
lds
fidivs
sub
push
lret
push
inc
inc
movsb
inc
and
pusha
pop
call
cmpsl
dec
xor
ds
dec
and
adc
jnp
adcb
mov
and
xor
insl
in
arpl
or
repz
dec
ja
scas
mov
xor
dec
and
cmp
push
mov
mov
out
pop
xor
lea
add
inc
in
jmp
fwait
cli
sbb
out
jbe
and
aas
adc
movsb
inc
cld
mov
xor
iret
addr16
xor
add
inc
repnz
xor
jp
dec
pop
dec
sbb
mov
stc
mov
jmp
dec
xor
inc
int
mov
das
sub
jmp
push
test
pushf
mov
dec
or
es
leave
rcr
fimuls
mov
jnp
push
notl
and
cmpsl
test
jb
mov
test
cs
mov
leave
dec
jp
aad
mov
es
push
mov
arpl
jae
inc
pop
xor
in
dec
add
jecxz
outsb
inc
shrb
pop
jo
cmpsl
mov
dec
loope
push
daa
outsb
xor
mov
mov
cli
outsb
cmp
push
test
jno
in
mov
out
sbb
mov
loope
or
popf
xor
push
pop
scas
fidivrs
in
or
orb
lret
xor
jmp
jne
inc
cmp
xorl
into
sub
add
mov
push
mov
mov
sbb
test
add
pop
stos
inc
test
inc
ss
mov
mov
lret
stos
in
test
dec
push
push
sub
push
inc
add
in
mov
add
jmp
insl
jg
in
test
imul
clc
mov
inc
jmp
adc
pop
imul
call
pop
js
xor
pop
jg
lret
dec
aam
lcall
dec
push
lds
loop
ljmp
fisttpll
dec
and
xchg
adc
xchg
jmp
nop
fimuls
pop
and
push
in
jle
inc
adc
sarl
in
sbb
push
popf
pop
inc
cltd
cmp
jae
or
negl
cmp
fnstenv
push
cli
cmp
setns
adc
jbe
mov
fisttps
pop
nop
pop
in
lods
test
jl
jne
ret
mov
jnp
sbb
push
push
or
test
insb
xlat
mov
aaa
adc
push
mov
ja
push
mov
adc
jae
sub
inc
lret
xchg
dec
pushf
pop
sub
mov
or
test
sub
mov
mov
xchg
push
mov
xor
adc
call
and
jge
and
xchg
sub
xchg
cmc
lds
push
mov
icebp
and
sub
loopne
rorb
fisttpll
xlat
shrl
pop
popa
fldenv
flds
ret
aad
lahf
jae
lods
out
mov
enter
xor
es
call
inc
push
jge
mov
jmp
mov
pop
in
and
fimull
jmp
das
imul
push
mov
es
jmp
stos
sahf
and
adc
xchg
mov
add
mov
mov
jmp
imul
shll
jbe
scas
movsb
loopne
mov
mov
ja
mov
pop
dec
mov
test
jno
arpl
mov
int3
scas
repnz
fiaddl
lock
gs
mov
mov
mov
inc
fs
sti
cmpsl
inc
pop
in
loop
dec
es
es
pop
ljmp
clc
mov
dec
icebp
mov
dec
rorl
jg
imul
mov
xor
mov
cmpsb
push
jge
push
into
das
fbstp
int3
add
add
shrl
fwait
lahf
xchg
addr16
cmc
and
xchg
xor
dec
mov
sub
mov
lret
jo
jl
dec
xor
lea
lret
loopne
mov
stos
incl
pop
gs
adc
mov
lcall
jne
mov
xchg
inc
and
fbstp
or
pusha
fistl
lea
rcll
push
adc
cmp
add
pop
mov
xor
movsb
fsubs
pop
xchg
pop
cwtl
icebp
cld
xor
movsl
push
aaa
imul
pop
into
bound
dec
repz
jp
xchg
sub
push
mov
mov
or
hlt
jno
mov
leave
add
xchg
cmc
sar
push
xor
push
test
out
nop
nop
push
cmp
aaa
xor
cmp
punpcklwd
mov
int3
sub
popf
sub
push
add
repz
jo
pushf
stos
add
mov
dec
sub
sbb
dec
hlt
es
push
fbld
cli
push
sbb
mov
iret
mov
adc
push
enter
push
sbb
loope
aas
sbb
lret
insb
iret
inc
xchg
jb
add
lret
testl
adc
imul
dec
sub
fcomps
pop
pushf
movsl
dec
and
call
push
and
jp
daa
aad
lret
add
or
dec
mov
gs
lea
cmp
xchg
mov
pushf
lcall
xor
icebp
out
mov
inc
mov
fidivrs
arpl
fidivrs
stos
cltd
negb
fs
insl
cmpsb
ljmp
fucomip
dec
sbb
ljmp
daa
movb
out
test
das
and
andb
jae
shrl
mov
push
out
jbe
aam
insb
nop
test
or
inc
in
adc
insb
ret
push
std
push
xchg
xor
xor
leave
inc
pop
mov
popa
idiv
pop
dec
call
mov
push
test
and
daa
add
in
pop
dec
aam
outsb
clc
dec
jae
cs
xchg
ret
out
xchg
enter
cmp
sahf
mov
lret
data16
cli
sahf
sub
cmc
dec
mov
gs
adcb
fcmovne
sti
fbstp
test
jmp
je
addl
fisttps
sti
jle
aas
in
add
mov
jle
mov
push
iret
mov
arpl
mov
xchg
jo
add
mov
sti
add
dec
pop
scas
lret
jae
add
int3
inc
add
mov
cwtl
test
adc
and
inc
cmp
adc
mov
push
ss
stc
out
rcrl
push
xchg
jmp
or
push
test
dec
popa
adc
mov
test
pop
sub
popl
stos
fiaddl
inc
mov
push
ret
stc
and
ds
pop
js
cmp
imul
sub
xchg
mov
fildll
insl
mov
lock
jo
pushf
jl
ss
or
out
fcmovbe
sub
mov
fiaddl
shr
cltd
jp
aam
pop
loopne
das
xor
push
mov
mov
jmp
mov
in
sahf
insl
dec
and
mov
imul
mov
movsl
ljmp
xlat
sbb
mov
lret
test
adc
mov
inc
mov
mov
int
lret
in
iret
pop
mov
ret
js
addb
dec
xchg
add
sub
sub
scas
imul
in
testb
sbb
mov
inc
adcb
adcl
mov
sbb
shlb
test
mov
sbb
and
inc
xlat
lret
lret
inc
sbb
xor
mov
orl
mov
out
mov
stos
call
mov
cwtl
into
in
stos
add
jb
rcr
orps
xor
sbb
into
jo
bound
cli
or
aad
and
adc
sbb
mov
cli
addl
ljmp
test
push
mov
jmp
dec
pop
xor
inc
pop
sub
mov
ja
mov
mov
adc
loopne
mov
xor
and
push
insb
or
mov
mov
mov
dec
dec
adc
jno
fbstp
popf
movsb
bswap
pop
loop
inc
insb
lods
hlt
sbb
jae
roll
pop
sub
je
cmpsl
test
cmc
clc
lods
sti
sub
add
out
call
mov
xor
arpl
scas
mov
mov
es
xchg
repz
fcomp
or
jle
out
aad
add
aaa
mov
dec
test
cmp
push
loop
in
sbb
pushf
add
push
jo
lods
mov
int3
jae
inc
int
imul
xchg
imul
dec
cmpsb
mov
outsb
inc
jne
add
add
mov
pop
lret
mov
adc
lret
adc
stc
in
xchg
shlb
testl
dec
mov
and
xor
push
adc
pusha
mov
push
in
stc
clc
lods
pshufw
jl
test
sub
test
lock
sbb
cmp
fiadds
ret
loopne
and
xor
push
incl
add
shlb
je
roll
jns
rolb
inc
cli
pusha
inc
nop
icebp
fildll
test
mov
add
call
jg
pop
cs
sbb
xor
flds
xor
jno
cmp
inc
adc
lods
mov
in
ds
push
cmc
inc
xchg
loop
adc
inc
loope
ja
and
sub
out
inc
jnp
icebp
pop
jle
add
xor
push
enter
xchg
arpl
cmp
ds
push
add
push
imul
pop
lods
and
jo
xchg
insl
jge
jg
mov
stos
adc
scas
dec
loope
cmp
fstl
dec
scas
mov
pop
mov
lock
popa
or
push
les
and
jb
jae
test
fs
cli
jmp
jnp
jmp
inc
je
call
mov
push
jg
push
push
adc
imul
les
and
cltd
incl
mov
in
pop
push
sub
movsb
jl
lea
xor
pop
mov
jne
int3
call
popa
jbe
mov
xorl
rolb
pop
xchg
dec
inc
mov
inc
sub
aaa
sbb
negl
shlb
fstpt
dec
dec
adc
sbb
sub
cmp
dec
insl
sub
out
xchg
push
pop
jg
gs
sbb
stc
push
mov
push
cmp
mov
imul
push
shl
lret
js
adc
lcall
jle
sbb
xchg
cmpsb
out
sahf
pop
lret
adc
enter
cmp
pop
xlat
in
xchg
mov
xchg
sahf
xor
mov
push
add
pop
int3
pop
mov
rorb
mov
sub
das
sti
subb
xor
push
lods
nop
mov
or
or
jg
cmpsb
jmp
mov
insl
sbb
cmp
hlt
jne
cltd
pop
or
cmp
lea
jo
push
sbb
icebp
jmp
ljmp
xor
fstpl
mov
test
jecxz
lret
inc
insl
push
loop
pop
xchg
xor
repnz
mov
push
and
lods
aam
mov
mov
jle
fidivl
add
push
std
lcall
ds
add
inc
mov
icebp
dec
insl
in
loope
popa
pop
dec
ljmp
lds
stos
pop
xor
and
cld
xor
pop
stos
imull
push
pop
stos
dec
sahf
clc
das
jge
movsl
daa
add
sbb
dec
xchg
inc
test
lret
aad
fldenv
lock
ret
xchg
test
scas
mov
pop
dec
aam
mov
sarl
imul
and
cld
into
mov
in
mov
push
rcll
leave
mov
mov
inc
mov
leave
mov
xchg
mov
fdivs
cmp
mov
mov
mov
dec
addr16
cmp
dec
decl
or
push
sti
cmp
jbe
lahf
dec
scas
outsb
and
cmpsl
or
and
pop
adc
add
and
int
jo
adc
outsb
sbbb
pop
lea
je
lcall
adc
adcl
daa
sub
inc
push
stos
dec
xlat
push
insb
shrl
out
jp
loope
sarb
ljmp
cld
ja
flds
add
imul
cmp
pop
outsb
pop
bound
xchg
rolb
jmp
shll
cmp
xchg
mov
in
ljmp
xchg
or
ljmp
mov
inc
in
mov
fcomp
mov
mov
jns
lds
rcll
orb
mov
call
shlb
fists
cmp
add
jp
jmp
sub
mov
imul
aam
scas
xor
loop
jbe
js
inc
xor
aas
xchg
ljmp
stc
push
add
sbb
mov
mov
push
or
dec
into
inc
stc
jno
push
jne
adc
jbe
sub
lret
or
mov
fnstcw
adc
push
pop
rcl
adc
pop
push
int
outsb
mov
stos
jo
scas
sbb
mov
fs
dec
add
stos
inc
aaa
xchg
hlt
mov
sub
out
out
adc
aam
dec
ret
cmp
aad
daa
sub
push
int
pop
mov
in
jp
out
data16
test
int
sub
dec
orb
clc
clc
sbb
scas
movsl
xlat
lahf
add
mov
inc
pop
rclb
add
mov
and
es
add
faddp
xlat
cmp
sub
dec
jmp
push
add
sub
push
xor
adc
fldcw
shr
cmpsl
icebp
push
pmulhuw
fisubs
cmp
dec
sbb
sub
lds
push
jns
aaa
test
repnz
loope
xchg
fcomps
or
or
mov
cltd
or
dec
push
ficoms
mov
sti
shlb
bound
add
adc
xchg
shll
jo
jp
sarl
sub
scas
icebp
mov
lahf
fiadds
movsb
push
scas
scas
inc
pop
sbb
ret
add
mov
xchg
xor
or
add
dec
clc
clc
and
cmp
test
adc
mov
sub
pop
adc
dec
rorl
sub
in
jno
cmc
jae
dec
xchg
test
xchg
mov
xchg
das
jl
daa
into
xchg
std
sub
inc
not
cli
outsb
lock
mov
xlat
cwtl
dec
cwtl
jecxz,pn
push
loop
stos
ja
pop
xchg
gs
aaa
loopne
add
iret
mov
or
rclb
dec
mov
push
xor
ljmp
or
mov
sahf
rorl
lcall
mov
xchg
add
jmp
cwtl
xchg
cld
cmpsl
lcall
popl
mov
adc
outsb
enter
add
lahf
int3
push
ficompl
push
inc
nop
push
cwtl
fwait
jb
test
push
testl
cmpsl
xchg
repz
cltd
in
cmp
imul
adc
imul
sbb
std
add
mov
decl
xor
lcall
xchg
test
insb
xchg
cwtl
sub
xor
call
ss
xchg
or
xchg
adc
inc
ja
push
loopne
add
dec
lock
cltd
sahf
sub
sub
lahf
dec
cmpb
mov
fsubrp
jp
adc
arpl
ja
fcoms
mov
or
inc
adc
mov
popf
out
inc
adc
pusha
and
repz
mov
fyl2x
jbe
pop
push
in
sub
fmul
lea
ss
dec
fsubrl
outsl
and
int
outsl
leave
ljmp
icebp
cli
inc
leave
push
mov
enter
dec
int
je
in
in
idivb
sbb
enter
cltd
and
mov
push
dec
rorb
je
loop
out
leave
pop
out
xchg
cs
jl
sbb
outsl
pop
mov
pushl
cli
cmp
mov
adc
sbb
dec
add
testb
popf
and
test
mov
adc
push
dec
xlat
push
jo
bound
in
inc
sbb
cmc
int
loope
push
out
int
jnp
cmpsl
fs
js
ds
cwtl
mov
and
sbb
sbb
sub
nop
daa
int3
pop
lea
adc
ljmp
jns
iret
jno
push
int
dec
leave
fwait
into
lcall
loope
xchg
test
cmpsb
imulb
ds
scas
push
ficoml
and
shll
jae
insb
ja
setp
fisubs
jns
or
dec
mov
mov
fisubs
inc
insl
or
sti
mov
xchg
pop
out
inc
inc
mov
sub
test
cwtl
jmp
jnp
adc
mov
pop
sti
mov
jns
cmp
or
inc
mov
call
dec
inc
mov
loopne
jo
cmp
adc
dec
jecxz
fwait
test
mov
and
xlat
fs
inc
and
les
sbb
and
scas
adc
fisubs
lahf
nop
sbbl
pusha
jne
cmp
sub
xchg
cltd
add
cmp
xor
adcl
lahf
stc
into
jp
add
pop
ja
pop
mov
inc
mov
adc
sub
cmp
push
popf
cmpsb
cli
adc
mov
cmpsb
std
incb
jo
pop
out
and
sahf
cs
jmp
rcrl
jp
pop
enter
cmp
mov
ret
mov
push
push
lea
scas
push
aas
shlb
not
outsb
dec
xlat
fcmovbe
mov
test
pop
fldl
mov
sub
push
loop
insl
int
jmp
sbb
dec
mov
sbb
inc
adc
dec
xor
addl
xor
inc
mov
push
push
lea
test
das
stos
test
vmovsd
xchg
dec
add
or
lods
mov
sub
mov
cmp
xor
and
daa
xchg
cmp
sti
or
es
shll
lods
sahf
nop
cmp
addb
pop
jp
push
es
mov
popf
clc
outsl
shlb
mov
int
insb
fisubl
adc
and
mov
pop
iret
push
xchg
jmp
xchg
xchg
mov
movsl
popf
pop
int3
sub
testb
lds
push
cmpsl
negb
test
add
popf
sbb
subl
mov
adc
loope
loope
fcoms
xchg
in
test
mov
shrb
mov
jle
add
cmpsb
int3
sub
jg
scas
push
adc
dec
out
rsm
pushf
nop
jnp
sbb
fisubrs
jo
loop
mov
dec
sahf
pop
jle
add
test
mov
ficoml
mov
cmp
or
mov
and
mov
cltd
stos
sub
xchg
movsb
xchg
add
jmp
jnp
and
mov
sti
jmp
push
adcb
pop
dec
dec
outsl
fldl2e
test
mov
rorl
jns
add
lahf
xchg
mov
jo
dec
gs
out
xlat
xchg
mov
scas
push
ss
mov
mov
add
or
or
pushf
cltd
lods
and
sbb
jne
ret
or
shr
enter
cwtl
outsl
repnz
or
xchg
dec
add
push
aad
cwtl
jl
ljmp
add
roll
popf
jo
hlt
add
sub
xchg
adc
in
inc
testb
cwtl
out
addr16
lret
je
dec
lock
add
mov
stos
ljmp
mov
mov
les
mov
rclb
inc
daa
cs
lods
nop
out
scas
js
mov
xor
xchg
and
pop
testl
xchg
inc
jle
mov
push
or
push
loopne
repnz
shll
divl
test
add
outsl
dec
test
cmp
mov
jno
cmc
test
sbb
mov
lea
jp
adc
push
lock
xchg
and
les
repz
add
sub
fmuls
loop
cmpsl
jbe
add
sbb
int
push
inc
test
cmp
mov
imulb
leave
je
sub
sarb
jmp
lcall
clc
jnp
sub
sub
push
rolb
pop
or
iret
adc
and
sbb
pop
aaa
popa
dec
pop
test
repnz
inc
repz
push
stos
jge
adc
mov
jo
fmuls
in
cmp
fsubr
std
out
ja
sbb
loopne
push
mov
and
pop
pusha
or
sbb
jge
bound
repz
mov
orb
pop
cmpb
in
mov
nop
mov
mov
sub
clc
shll
mov
dec
loopne
cmp
aam
pop
or
adc
out
jo
sbb
adc
popf
mov
xor
movsb
imul
and
pop
fsubl
pushf
stc
adc
pop
push
adc
jecxz
pop
int
inc
sbb
mov
jge
mov
cmp
lret
in
xchg
cmc
pop
test
cmpl
ja
cs
das
inc
dec
sub
xchg
repnz
cmp
ficomps
outsl
add
in
sbb
mov
out
xchg
dec
mov
pop
add
cmp
xchg
out
inc
stos
mov
ljmp
or
adc
cld
fs
mov
roll
cmpsl
xor
xchg
mov
andl
mov
cmpsl
jmp
cmp
push
sbb
subl
enter
ds
test
daa
imul
xchg
shlb
push
dec
pop
cmc
pop
cmpsl
mov
out
cwtl
in
out
push
dec
lret
and
fdivl
cmp
lea
pop
inc
es
arpl
leave
pop
scas
shlb
dec
jb
or
jno
push
popa
call
insb
je
popf
and
pop
fwait
add
js
popa
outsl
lea
fsubs
mov
or
scas
inc
daa
xchg
xchg
mov
mov
pop
or
enter
xchg
push
jg
fimuls
or
loop
ret
sub
push
adc
push
insl
lret
pop
or
sbb
movsl
cmp
repz
movsb
outsl
inc
push
rolb
cmp
fnstcw
sub
pop
iret
lcall
popa
xor
push
xchg
aaa
jmp
adc
jecxz
pop
clc
ljmp
test
pop
fidivs
hlt
hlt
ljmp
push
aaa
mov
pop
pop
mov
cwtl
jae
popf
test
add
filds
cmp
xor
les
cld
xlat
aam
out
xor
ss
fisubrs
das
pop
push
arpl
mov
test
sahf
and
pop
sub
adc
cmpsb
xor
jns
dec
fsubl
mov
and
gs
mov
and
mov
sub
mov
sub
popf
ret
sub
jae
dec
shrb
jl
loopne
loope
clc
lret
push
fsubrs
es
xor
push
stc
clc
call
cmpsl
sub
pop
xor
je
shlb
and
sub
pop
xchg
cmp
je
cmp
add
mov
cmpsb
jp
push
dec
leave
paddusb
mov
or
push
sar
pop
add
xchg
ljmp
mov
daa
and
sub
cmp
fdivp
xlat
pop
lock
stos
rorb
cmpb
popa
mov
movsb
sbb
push
sti
cmp
enter
jle
or
lods
dec
pushf
roll
xchg
cmp
xor
and
fimuls
jmp
out
test
push
mov
stos
gs
jno
cmpsb
adc
pusha
daa
pop
mov
push
stc
test
loop
jl
iret
insl
xchg
jb
leave
loopne
inc
rorb
adc
jle
dec
mov
xchg
cmc
in
out
out
sub
push
inc
bound
stc
mov
xor
jmp
outsb
in
outsl
pop
xor
inc
sarl
xchg
lea
adc
int
push
andl
mov
cmc
add
inc
inc
repz
mov
xchg
fs
std
dec
cli
lret
dec
push
xchg
mov
test
xchg
push
leave
inc
mov
stc
loop
mov
fdivrs
jne
daa
push
repnz
mov
cmpsb
mov
add
and
push
lds
mov
hlt
adc
out
mov
jle
push
xchg
mov
ss
shll
push
pop
inc
jo
out
mov
lret
xor
arpl
adc
cmc
pushf
push
scas
cmpsb
pop
add
cs
cs
ret
mov
mov
xor
jb
push
adc
sub
pop
outsb
icebp
aas
xchg
jo
inc
mov
mov
mov
push
insb
jne
enter
stos
jns
scas
mov
xchg
jmp
jno
nop
pop
sbb
fs
sbb
dec
loop
sbb
mov
mov
out
retw
loopnew
es
inc
jo
and
shlb
or
stc
lahf
pop
adc
popf
aas
mov
scas
cmp
fdivr
jne
hlt
fs
fisubrs
mov
loop
fidivrs
movsb
push
dec
mov
jo
mov
fwait
push
cli
rcrb
mov
rorb
cs
sbb
mov
scas
arpl
lret
push
push
dec
mov
push
jecxz
jns
xor
mov
or
lret
out
in
lods
mov
daa
push
fdivl
aad
sbb
std
and
sbb
mov
or
cs
jns
movsb
aas
addb
sahf
pop
cmc
in
call
jp
cmc
pop
jmp
xchg
mov
scas
and
dec
in
repnz
test
mov
cmp
xorl
dec
inc
jbe
ja
pushf
jnp
stos
push
cmp
leave
sahf
mov
mov
mov
testl
leave
jns
fisubs
jb
inc
dec
fwait
and
mov
xchg
add
sbb
daa
notb
mov
lods
push
add
pop
inc
and
jecxz
imul
pop
lea
sbb
mov
sar
mov
ffreep
jns
pop
addr16
mov
addl
lods
outsb
pop
push
enter
test
cli
outsl
sub
push
push
in
add
stos
push
jo
mov
push
mov
mov
aas
clc
outsb
mov
push
fcoml
jns
cmpsb
or
cmpsb
nop
cltd
mov
fwait
lods
xor
nop
in
orb
sarl
adc
mov
mov
jmp
sub
nop
mov
ret
xlat
jge
sub
pop
or
or
add
mov
mov
addr16
sti
dec
xchg
lcall
or
or
aam
jo
xor
jp
mov
imul
cmpsb
add
call
mov
pop
loope
mov
jle
adc
pop
push
and
and
sub
aam
xchg
cmc
faddp
into
mov
xchg
push
lret
lret
pusha
movsb
push
lods
and
ret
frstor
lahf
mov
xchg
out
xchg
stos
push
xchg
or
int
lret
pop
mov
sbb
xor
cld
sti
cmp
add
mov
movsl
daa
xorl
mov
rcl
push
mov
mov
icebp
adc
pop
mov
mov
sahf
test
jns
and
aas
mov
mov
dec
jge
add
sti
adc
pop
cmpsb
mov
adc
bound
adc
imulb
mov
or
xor
cmpsl
aad
fistl
scas
cmc
mov
icebp
nop
lea
push
sahf
dec
je
push
mov
imul
jl
inc
pop
xchg
imul
pop
icebp
inc
inc
pop
dec
lea
or
add
xor
pop
pop
inc
sub
mov
inc
jecxz
push
pop
sub
cmp
stc
push
or
scas
icebp
insb
ljmp
jge
mov
push
ja
les
loopne
cmpsb
sbb
mov
cli
mov
cld
lods
icebp
jge
mov
pop
lret
add
jl
ds
sub
cmpb
test
rclb
fstpt
ds
enter
imul
or
shlb
ljmp
xchg
jb
cltd
pop
call
mov
push
sbb
int
js
xor
push
ds
fs
testl
sub
stc
dec
ret
adc
fdivrs
mov
out
aad
nop
out
or
cmp
inc
and
jge
ljmp
or
insb
xchg
adc
dec
repnz
xor
scas
dec
lret
inc
jle
lret
stos
scas
inc
sub
xchg
je
inc
pop
hlt
sbbb
xchg
fxch
sub
fidivs
out
inc
jns
loop
mov
adc
lea
leave
test
out
add
shlb
repnz
xchg
pop
push
mov
or
mov
fwait
jne
sub
fdivr
stc
push
add
insl
outsb
imul
ja
fldcw
fidivs
sub
rcll
roll
mov
cmp
test
dec
imul
ds
sub
xor
inc
jp
cmpsb
mov
cmp
jnp
fisubrs
shlb
aam
dec
clc
inc
cmc
sub
jl
xlat
push
mov
mov
xor
mov
cmpsb
mov
xchg
mov
incl
es
adc
pop
ljmp
xor
hlt
movntps
add
enter
push
add
stos
adc
xor
es
mov
lret
mov
mov
add
subl
fdecstp
xchg
push
es
or
aaa
mov
push
add
mov
push
push
fimull
inc
ret
lods
out
jmp
ja
movb
out
aaa
insl
cmc
fnsave
jbe
xchg
xchg
adc
out
jb
ss
ds
inc
outsb
imul
stc
icebp
ret
push
push
pushf
sub
lret
imul
jae
push
or
cltd
lret
cmpsl
xchg
cmp
addl
mov
jge
push
das
mov
imul
pop
fsubr
sbb
push
sub
call
into
jno
jns
sub
cmpsb
jne
and
push
xchg
mov
fs
add
inc
mov
shlb
fsubrl
shlb
add
adc
jns
jmp
les
jne
pop
je
insb
jne
sub
or
jmp
sub
sbb
mov
mov
or
jg
pop
ret
popa
test
xchg
add
leave
pop
inc
inc
arpl
mov
xchg
pop
scas
orl
dec
jne
xchg
xchg
inc
mov
cwtl
dec
xlat
adc
or
push
xchg
jecxz
add
fwait
xor
test
imul
mov
mov
and
insb
push
or
and
and
out
stos
sbb
mov
mov
mov
pop
orb
push
lock
ja
push
inc
ret
xor
jge
movsb
xor
bound
nop
inc
fs
sbb
xor
fwait
adc
sub
imul
insl
in
mov
xchg
jl
sbb
jo
cwtl
scas
mov
lret
push
imul
iret
mov
shrl
xchg
pop
mov
jmp
xchg
cmp
mov
push
repnz
mov
xchg
bound
add
inc
test
shl
rol
jno
insb
sbb
jp
call
mov
jns
mov
das
dec
call
mov
mov
shlb
aam
in
mov
test
pop
outsl
das
in
aad
adcl
imul
les
ljmp
cmp
into
movsb
cltd
xchg
inc
bound
inc
iret
inc
cltd
cltd
rcll
pop
pop
sbb
mov
pop
pop
mov
jle
push
mov
mov
sbb
lret
outsb
lods
stos
dec
cmp
movsl
in
aaa
lock
sub
or
mov
lret
jecxz
jae
out
jmp
std
les
sbb
dec
dec
xchg
pop
popa
cmp
jnp
sbb
mov
add
mov
aam
cmp
fimull
scas
loope
mov
cld
pop
sub
sub
push
iret
or
ljmp
mov
insl
dec
loop
pop
adc
pop
lea
inc
xlat
int3
out
add
or
cmpsl
js
inc
jecxz
mov
xchg
lods
jp
push
jmp
mov
add
das
jae
shrl
xor
or
ds
mov
je
pushl
imul
rcrb
xchg
int3
jp
adc
int3
lods
outsb
push
mov
push
cmp
data16
out
cmp
jle
add
nop
out
outsb
movl
adc
mov
pop
sbb
out
repnz
fidivs
inc
flds
stc
mov
adc
cld
mov
lds
jge
pop
andb
inc
add
in
or
in
jle
push
nop
sahf
je
or
shll
stc
popf
jo
jecxz
add
dec
push
xor
lret
mov
mov
loopne
dec
mov
repz
mov
out
std
push
and
lret
sub
pusha
inc
cmp
in
fstpl
jmp
ret
push
jns
imul
dec
push
movsb
mov
or
dec
jecxz
fildl
rorl
add
xlat
out
sub
movhps
popf
add
and
nop
shlb
jnp
pop
xchg
cmp
ret
sub
lods
fisttpll
lds
outsb
push
mov
dec
ljmp
lds
dec
xchg
dec
jno
sub
cli
cmp
push
push
inc
pop
loopne
into
adc
push
out
xchg
pushf
jge
dec
hlt
outsl
insb
xchg
or
mov
mov
mov
push
fsubr
out
enter
mov
shrl
cltd
add
stos
jbe
pop
mov
cltd
or
jnp
adc
inc
ljmp
pop
insb
push
ret
sub
or
push
dec
lret
flds
testb
pop
push
push
jne
rcll
shrb
cltd
out
dec
add
pop
pop
subl
in
loop
dec
lahf
mov
lcall
ret
movsl
insb
stc
sbb
leave
mov
loopne
add
dec
xchg
or
inc
mov
and
out
aad
jno
imul
cli
push
in
push
cwtl
out
iret
push
lds
clc
fwait
in
xlat
frstor
jae
sbb
inc
jle
fsubrp
loop
xchg
repnz
fxch
and
lret
jo
mov
mov
sti
sub
negb
hlt
or
jmp
pop
sti
pop
sub
push
rclb
sbb
dec
call
clc
fcompl
mov
sti
jno
loope
mov
out
add
mov
xor
or
mov
inc
add
int
shll
push
imul
and
mov
pop
add
xchg
mov
lock
cmpsb
or
movsb
push
ret
pop
cltd
data16
repnz
and
andl
adc
xor
outsb
adc
iret
adc
cmp
sbb
insl
fs
or
adc
fwait
test
fwait
xchg
push
add
outsl
push
ret
pop
push
daa
cmp
aas
jecxz
rorl
add
push
cmp
or
aaa
jo
ss
outsb
mov
dec
adc
pop
pop
mov
mov
or
mov
adc
add
das
dec
in
and
sbb
and
and
sbb
jecxz
in
divl
icebp
mov
int3
scas
jg
pop
mov
sub
inc
scas
and
andl
imul
add
call
into
cmp
cwtl
pop
mov
jae
lret
sbb
cli
fcomip
jnp
jnp
loopne
hlt
or
clc
imul
fwait
jecxz
push
pop
aas
adcl
pop
mov
and
fs
shrl
pop
test
pop
sub
fiaddl
dec
cmp
imul
lds
cli
push
dec
out
pop
pop
mov
mov
jecxz
popf
xchg
or
pop
inc
inc
les
lcall
jge
push
pop
scas
fmull
mov
xor
repz
or
lds
lret
idivb
pop
xchg
push
xor
das
fildll
cmp
into
repz
dec
xor
nop
gs
push
out
aam
iret
lds
fs
xchg
inc
push
orl
mov
ja
orb
divl
out
aas
and
clc
ss
xor
mov
loope
cli
push
inc
jno
lret
mov
testl
repnz
lock
mov
mov
outsb
mov
movsl
mov
adc
fdivl
or
ficomps
sbbl
adc
add
cli
or
push
popf
testl
mov
jns
loop
xchg
add
jo
lret
and
mov
loopne
ja
imul
orb
inc
stc
or
popf
subb
add
sbb
test
push
pop
sbb
cmpsb
les
mov
jecxz
cmp
fiaddl
xchg
inc
fwait
ds
and
mov
fists
shl
mov
cmp
vmread
mov
cld
adc
xor
xchg
mov
js
cmpl
in
stc
testl
add
cmp
js
or
and
sub
push
movsb
aad
push
shrb
aad
jnp
or
sbb
lods
mov
dec
ret
bnd
jecxz
jae
jb
sub
sti
test
or
and
add
movsl
enter
mov
ret
scas
mov
xlat
cmpsb
pushf
xor
and
icebp
aam
enter
ja
dec
shrb
and
je
lock
shll
mov
ficoms
and
imulb
adc
xchg
xor
mov
or
cmp
add
push
or
pop
sahf
xor
mov
mov
loopne
daa
stos
sahf
or
add
adcl
cmp
push
dec
or
add
inc
and
push
push
xor
aaa
fdivl
call
sbb
ljmp
mov
outsl
and
pushf
call
test
aam
xchg
lods
mov
or
subl
jle
adc
jne
jle
out
dec
cmp
push
sbb
push
inc
cmc
test
pop
xlat
imul
mov
inc
jb
inc
fildl
outsl
inc
jbe
xchg
push
fidivs
pop
pop
pop
inc
fs
fildl
outsl
xchg
lcall
testb
push
cmp
xchg
out
mov
sahf
out
arpl
or
and
sub
push
cmpsb
out
in
cmp
push
movsb
xchg
sarl
inc
mov
outsl
mov
inc
push
mov
add
push
loop
loopne
shrl
mov
sub
jl
lcall
call
jno
push
pop
dec
pop
mov
lcall
mov
xchg
mov
cmpsl
stc
cmpsl
pop
xor
add
cmp
sbb
cmp
data16
sub
inc
ljmp
sub
rcrb
inc
call
cmp
pop
sub
mov
dec
lret
jg
popl
inc
iret
mov
in
jbe
sbb
orb
mov
pusha
addr16
mov
stos
ja
loope
mov
xor
in
in
lcall
add
call
dec
mov
in
cwtl
dec
fs
inc
and
fnstcw
sbb
inc
pop
outsl
mov
sub
adc
in
jp,pt
cmp
cmc
gs
repz
and
inc
mov
fnstenv
push
arpl
jns
dec
and
out
sub
jnp
sbb
mov
sub
push
in
add
mov
xchg
repz
fidivrl
add
mov
sti
imul
inc
and
add
push
pop
gs
jne
jae
stos
push
and
add
out
mov
mov
sbb
sbb
sbb
sar
xor
test
cwtl
pop
flds
push
insl
and
mov
lcall
out
test
out
sbb
inc
loope
and
xchg
loop
cmp
ret
fs
cmpsb
add
jge
cli
push
adc
dec
xor
xchg
lds
inc
test
inc
pop
mov
inc
lds
rorl
dec
dec
aam
cmp
xor
sbb
push
jge
xchg
or
out
shll
jnp
popf
mov
push
sti
mov
pop
inc
add
sub
and
jp
mov
movsl
or
or
in
and
popf
mov
pop
pop
loope
ret
cmp
add
sub
mov
jecxz
scas
lds
mov
xchg
dec
enter
in
insb
inc
cmp
push
gs
pusha
lcall
pop
in
ss
or
jnp
shrl
shll
fs
and
and
scas
xor
daa
faddp
ja
add
loope
mov
insl
xor
add
lds
das
mov
inc
int
rcll
js
adc
cli
push
stc
adc
stc
leave
mov
test
ss
or
inc
mov
lret
inc
shlb
imul
cld
scas
xchg
or
xor
shl
iret
mov
mov
jle
add
sub
xor
xchg
mov
inc
pop
cmpsb
out
subl
pushf
test
sbb
enter
sbb
jbe
fldl
mov
daa
pop
sub
push
pop
in
fstpt
jle
or
arpl
mov
addr16
mov
sub
fwait
movb
cmc
xor
stc
and
add
lods
lahf
push
push
push
pop
inc
test
add
add
xchg
xchg
mov
cmpsl
xchg
or
dec
rep
mov
push
loopne
js
pop
aaa
mov
adc
xor
cs
aad
jmp
subb
sub
stos
insl
jo
sahf
ljmp
mov
jl
pop
daa
call
sbb
arpl
lret
out
int3
xchg
adc
ljmp
loop
iret
dec
pop
mov
xchg
mov
mov
inc
adc
dec
sub
inc
and
and
mov
std
mov
mov
loope
ret
fdivrs
xchg
add
sub
jg
push
ror
bound
xchg
pushl
inc
call
jge
lock
enter
add
sub
lret
jne
loopne
lock
xchg
in
ret
add
push
dec
jbe
mov
int3
data16
and
jbe
aas
movsb
and
cltd
inc
int
or
jg
and
leave
push
mov
lods
xchg
sub
jae
or
into
out
jmp
arpl
outsl
push
add
in
inc
cmc
movsl
shr
jne
sti
andl
test
pop
push
movsb
sub
dec
adc
fnsave
pop
pop
jae
or
ss
jmp
mov
cmp
adc
xor
xchg
jno
sbb
adc
mov
cmp
imul
inc
cwtl
pusha
shll
fisubrs
insl
mov
and
push
dec
outsb
fmull
adc
mov
sbb
sbbb
mov
mov
dec
mov
into
repz
mov
loop
and
dec
std
sbb
mov
iret
adc
movsb
xor
shrb
mov
arpl
cmp
stc
mov
lea
cli
test
jne
xchg
xor
cld
cmp
imul
inc
pop
shll
ja
xchg
xchg
clc
cmpsl
enter
and
push
dec
jno
xchg
sahf
sub
data16
sbb
in
ret
stos
push
test
jae
pushf
cmp
push
push
push
aas
pop
xchg
lahf
mov
mov
xor
aam
xchg
sub
addr16
push
outsl
jmp
jnp
mov
dec
outsb
bound
aam
mov
hlt
xor
clc
int3
into
and
add
pop
jg
cmpsl
jne
aaa
sar
scas
cmpsl
iret
mov
cmp
and
mov
jl
push
jne
dec
and
push
lds
ja
pop
mov
xchg
mov
adc
inc
mov
sbb
dec
push
add
sub
jmp
xor
int
adc
push
mov
fmull
fcomps
push
fnstcw
xor
lea
loopne
dec
or
in
cmp
xor
or
stos
lock
mov
xor
scas
cltd
mov
cli
push
mov
hlt
loop
mov
test
adc
adc
xlat
add
and
cld
cmp
sbb
test
jge
cmpsl
loope
jmp
stos
je
mov
xchg
clc
adcl
sub
lods
test
cmpsb
inc
ljmp
lock
inc
xor
pop
aaa
jle
inc
mov
rorl
push
push
mov
cltd
inc
andl
mov
xchg
daa
pop
mov
daa
subl
dec
mov
xchg
mov
xchg
cltd
pusha
je,pn
in
jbe
mov
cmpsl
test
adc
adc
bound
les
loopne
xchg
fs
out
call
call
add
hlt
int
xchg
pusha
dec
leave
push
cs
enter
mov
outsl
mov
notb
jl
stos
mov
or
pop
mov
mov
mov
pop
rcrl
or
addr16
jge
out
pop
orb
js
imul
pop
rep
ds
or
adc
pusha
adc
mov
push
cmpsb
mov
sahf
mov
aam
insl
jg
cmp
loop
xchg
ja
outsb
sbb
mov
mov
xchg
mov
addr16
mov
xchg
sub
inc
and
push
mov
lret
mov
mov
popw
mov
add
jge
icebp
pop
push
cmp
or
inc
push
imul
mov
sbbb
stc
jno
lahf
dec
rorb
test
pop
jbe
cmpsb
add
add
sbb
pushf
add
sbb
cmp
stos
xchg
lcall
shlb
imul
sbb
or
mov
shrb
jle
lea
movsl
fdivl
or
movsl
mov
in
xchg
loop
jns
mov
pop
xchg
stos
mov
pop
test
sbb
je
test
mov
pushf
setnp
sub
jl
repnz
in
test
sarb
iret
xchg
mov
ljmp
fwait
mov
in
popa
aam
cmp
fldt
inc
or
ret
sbb
and
jmp
xor
dec
mov
lahf
and
mov
stc
mov
fidivrs
and
cmp
pop
and
mov
lcall
pushfw
inc
push
adc
aad
mov
mov
lcall
push
mov
into
mov
shr
sahf
sarb
outsb
lock
shll
sub
sbb
mov
sbb
pusha
jnp
addr16
rcrb
movsb
imul
inc
pushfw
adcb
fucomip
xor
in
out
jmp
cmp
mov
data16
icebp
jle
or
pop
jb
aas
flds
push
scas
mov
jae
inc
aad
cmp
mov
and
daa
inc
add
xchg
aas
in
in
in
push
dec
jg
mov
xchg
repnz
jns
jg
sbb
xchg
jmp
faddl
fwait
dec
in
mov
and
outsl
in
mov
aam
push
popa
pop
xlat
test
andb
lret
adc
out
cs
mov
jo
push
rorb
enter
mov
jmp
stc
adc
adc
mov
adc
jmp
push
scas
inc
sbb
jecxz
fadds
nop
sbb
cltd
cld
push
sbb
jae
and
test
out
cs
push
jecxz
and
aas
mov
cmc
into
out
xchg
xchg
lea
ljmp
cld
data16
mov
orb
into
out
push
cmc
aam
ficoml
lret
lock
mov
push
and
mov
into
jb
cmp
insl
dec
mov
dec
cmc
jg
mov
jae
and
inc
movsb
mov
push
adc
dec
addr16
jp
xchg
and
cmc
ja
push
fistpl
cltd
aas
adc
xor
xchg
dec
mov
call
jae
pop
sub
out
jo
xor
pop
bound
xchg
imul
test
decb
sbb
push
aaa
jnp
xchg
fs
inc
fs
xchg
dec
cmc
imul
cli
lea
push
push
xor
dec
std
hlt
push
mov
arpl
or
fisttpll
inc
mov
xor
into
jg
std
insl
aaa
in
fiadds
jne
cmpsb
shlb
fnstsw
int
aas
cmp
inc
mov
jb
movsb
cmc
aad
and
and
lock
jmp
push
lods
lods
int3
insb
ret
mov
repz
aad
std
mov
sbb
addr16
loope
mov
sbb
sahf
aas
test
outsl
stos
jbe
dec
fwait
imul
shll
cmp
pop
jne
mov
ret
repz
stc
xchg
nop
dec
adc
adc
sbb
mov
dec
sti
movsb
movsl
addr16
push
dec
lds
xorb
insl
lret
add
jnp
push
mov
xor
ljmp
pop
lods
and
stc
pop
addl
stos
test
call
push
jl
push
in
mov
iret
inc
mov
and
jmp
mov
sbb
push
mov
outsb
adc
pop
and
mov
in
sbb
mov
cmc
or
std
xor
insl
mov
out
mov
test
push
imul
sbb
rcll
es
imul
xchg
jne
into
xchg
pop
mov
push
fucom
jge
in
or
mov
mov
sbb
push
xchg
sub
pop
sti
leave
sahf
into
fxtract
xor
pop
xchg
popf
insb
mov
scas
sbb
xchg
dec
cli
std
mov
pop
sub
cmp
mov
std
pop
push
out
xchg
dec
pop
dec
sbb
push
popf
sar
fildl
repnz
cmp
push
popa
inc
push
lock
test
xchg
sbb
shrb
adc
jne
inc
outsb
cld
stc
enter
insl
pop
int3
dec
loopne
xchg
idivl
scas
sbb
adc
xor
sbb
xchg
sub
arpl
adc
shll
shlb
xlat
push
add
sbb
adc
sub
jmp
pop
aaa
out
xchg
dec
pop
ja
add
lret
pop
mov
and
loop
lret
out
lods
es
mov
adc
dec
sbb
mov
fs
loope
sbb
lahf
mov
jb
mov
fwait
rclb
fwait
jbe
scas
pop
jp
inc
test
lret
mov
stc
and
mov
ja
iret
sub
shl
or
xor
cmp
pop
adc
or
imul
jbe
jb
in
ficoml
loope
idiv
mov
data16
xor
and
shl
outsb
inc
int3
push
push
adc
push
scas
mov
dec
test
in
add
cmp
lea
repz
rolb
shlb
fdivl
nop
push
es
dec
je
data16
jo
daa
shrl
pop
movsl
imul
pushf
inc
es
dec
add
xchg
pop
fistpll
decb
dec
repnz
out
lock
mov
sub
pop
out
adc
add
fldt
sbb
das
add
push
adc
pop
rcr
aas
in
sub
out
fbld
lcall
mov
inc
test
xorl
or
es
cmp
sbb
add
pop
lds
mov
cli
mov
xchg
lds
test
lret
aam
sub
fmull
push
add
cs
jle
pushf
insb
ss
inc
popa
hlt
lods
cmp
and
and
jne
push
sbb
sub
sbb
sbb
mov
repnz
cmp
das
mov
in
test
jmp
sbb
mov
mov
adc
andb
mov
push
push
bound
andb
add
mov
in
and
mov
stos
xchg
and
fimull
xchg
adc
sub
imul
stos
adc
outsl
push
lods
int3
or
fldcw
jns
stc
ret
roll
inc
jae
sub
fnstsw
fisttpl
das
rorl
out
jecxz
xchg
sbb
mov
jp
add
out
outsb
jecxz
push
jecxz
pop
shr
and
add
mov
and
lret
lock
add
in
mov
adc
fnstcw
mov
mov
ds
rorb
mov
lahf
cmovp
add
jo
jne
enter
pop
mov
sbbl
or
loope
jl
insl
sub
fcoms
inc
fwait
dec
das
cmc
xchg
loop
mov
cltd
inc
dec
movl
add
jb
jae
in
pop
and
cmpsb
sub
pop
push
scas
imul
add
sub
sub
stos
jbe
jno
fsubrl
sub
xor
pop
stos
outsl
push
cmp
sahf
nop
sbb
mov
jne
orps
add
xchg
ret
adc
enter
and
xor
shrl
fnstsw
sbb
adc
jbe
pop
lcall
test
fnstenv
aam
lret
les
loope
cmp
aaa
and
adc
pop
and
leave
imul
xchg
xchg
loopne
out
bound
add
mov
leave
icebp
mov
xchg
lods
nop
jb
leave
and
hlt
add
sub
dec
test
in
mov
or
mov
add
or
and
shrb
mov
imul
mov
mov
outsl
push
movsb
push
jp
jae
xor
repz
imul
adc
inc
mov
dec
or
push
int
dec
mov
sub
lcall
xchg
das
sbb
add
popf
xor
cmpb
lea
addr16
out
jnp
ss
adc
mov
sbb
adc
ljmp
jg
andb
loope
or
loopne
pop
das
add
cmp
cs
inc
inc
stos
xor
rolb
adc
sub
insl
sub
mov
mov
mov
lods
mov
pop
call
iret
call
rolb
scas
cmp
xchg
rcrb
stos
loope
adc
xor
enter
loopne
icebp
jge
imul
mov
test
stc
cmp
pusha
jg
sbb
xor
dec
aam
adc
pop
repz
mov
jns
add
pop
mov
scas
fs
jnp
cmp
dec
or
ds
xchg
pop
sub
dec
adc
jp
xlat
pop
adc
clc
mov
jg
imul
in
orl
and
repz
int3
mov
pop
or
sub
gs
pop
inc
loopne
nop
inc
in
outsl
andl
add
inc
or
add
fldl
ret
psllq
push
xchg
jecxz
lret
push
leave
xor
xchg
cwtl
or
ret
int3
mov
repz
fwait
cmp
icebp
cmpsb
ss
pushf
aam
andb
jg
stc
xchg
push
daa
sbb
mov
mov
enter
push
jg
inc
jne
push
lods
push
add
cld
mov
ljmp
imul
sub
pop
cmp
sbb
into
lret
or
insl
pop
adc
ss
outsb
stos
add
jl
sub
sbb
xchg
arpl
pop
call
mov
mov
testb
mov
in
movsb
xchg
adc
xor
jns
stos
decl
imul
out
mov
jge
out
loope
push
ficomps
dec
dec
je
dec
aad
or
test
cmp
xchg
cmp
add
insl
and
or
sub
cltd
cwtl
imul
in
xchg
dec
jns
mov
mov
icebp
in
pop
test
sub
clc
xor
inc
shll
aas
and
out
inc
andb
dec
mov
enter
jbe
daa
loop
cmpsl
jae
jmp
jge
rcll
dec
dec
cmp
rol
in
pop
or
and
sub
mov
jb
add
push
mov
mov
test
jae
xchg
mov
add
xchg
add
push
mov
lods
lock
jo
xchg
push
pusha
adc
inc
loop
addl
fistpl
xor
sub
out
out
test
je
adc
push
jnp
jae
pop
add
fistps
xor
dec
mov
cmp
mov
jno
int
or
or
out
fnstsw
jg
shlb
jbe
insb
in
or
fld
mov
in
je
out
inc
roll
inc
out
movsl
divl
lods
adc
arpl
add
mov
xor
pop
aaa
and
leave
mov
int3
icebp
xchg
add
jg
xchg
aaa
xchg
add
and
inc
int3
sbb
js
les
fs
and
and
pushfw
mov
movsl
repz
xor
pop
cld
mov
dec
movsb
inc
sub
push
mov
pop
iret
pop
shlb
lea
jno
test
xchg
push
add
fildl
xchg
ror
inc
dec
out
xchg
and
jnp
lcall
cwtl
jge
push
out
mov
push
imul
int
stos
sbb
mov
mov
scas
lahf
push
push
pop
cmpsb
lods
popf
mov
leave
xor
pusha
sahf
jmp
popf
insb
cmp
mov
std
xchg
cmpsb
xchg
inc
mov
ljmp
push
lods
and
push
shl
cmp
sub
adc
pop
pop
in
mov
adc
ja
push
popa
dec
jmp
add
mov
stos
das
xlat
xchg
mov
xor
std
mov
lods
mov
dec
sti
jg
imul
mov
cmp
inc
mov
testl
push
bound
sub
ret
jnp
jae
xchg
movsl
popa
adc
cmp
insl
or
xchg
or
je
sbb
sahf
jmp
out
into
add
adc
int3
dec
decl
loopne
dec
call
insb
scas
mov
test
mov
out
fsubs
mov
or
adc
aam
inc
iret
mov
mov
inc
ret
cmp
pop
cli
int
imul
fcmove
cld
iret
jns
rcrb
mov
dec
pop
jo
push
mov
inc
stos
push
sub
out
out
js
cmp
cmpsl
ss
fidivrl
or
add
pop
shl
je
push
sub
cmp
leave
ret
or
mov
pushf
jge
add
fldenv
lods
pushf
xlat
aaa
ret
mov
jp
xchg
add
sbb
inc
xlat
lret
ds
mov
lcall
imul
push
pop
pop
mov
push
stos
out
or
insb
arpl
imul
mov
xchg
adc
inc
loop,pn
lret
popf
pop
mov
adc
clc
mov
out
rorl
or
or
cmc
and
pop
and
or
testb
mov
fs
dec
cmp
mov
xor
out
push
push
aam
or
data16
add
loop
ds
mov
mov
xchg
clc
pop
scas
mov
sbb
aas
cmp
test
push
jge
mov
aam
and
jbe
mov
shrl
leave
inc
mov
pop
decl
cmp
fmuls
cmpb
faddl
mov
mov
xchg
mov
lret
setne
sahf
adc
imul
lds
sub
stos
sbb
out
inc
test
call
inc
stc
loop
pusha
adc
pushf
jnp
enter
frstor
cs
dec
arpl
cmp
jne
mov
sub
mov
sub
mov
dec
cmc
mov
push
aas
pop
and
loopne
jne
movsb
xchg
sub
mov
jns
stc
xor
mov
mov
dec
sbb
out
ret
fsubrl
popf
or
incb
outsl
ret
fisttps
cmpsb
ss
mov
push
dec
jne
ret
push
xchg
test
jbe
bound
xchg
loop
push
mov
ret
jne
stos
icebp
pop
cmpsb
push
jno
pushf
sub
jb
outsb
pop
lret
xor
xor
js
fwait
mulb
inc
pushf
iret
aad
rcll
pop
inc
inc
icebp
push
in
jne
stos
jnp
addr16
shrl
or
push
push
je
fadd
mov
loop
fisubrs
hlt
mov
jecxz
out
rolb
lret
push
sbb
xchg
mov
sbbb
inc
push
imul
fimull
repz
add
nop
push
push
outsb
mov
and
jb
sub
mov
or
adc
jl
mov
cmp
in
das
fwait
ljmp
fmuls
cmp
cmp
pop
test
xchg
jl
push
out
nop
push
loop
repz
cmp
test
mov
std
xor
dec
arpl
sub
jge
test
in
mov
add
mov
popf
repz
sub
sub
xor
fstps
mov
in
xchg
push
test
adcb
imul
imul
pushf
sbb
adc
or
push
repnz
sahf
cmpsb
sub
scas
mov
popf
dec
mov
pop
rcll
mov
sbb
adc
inc
adc
jbe
inc
cmp
iret
and
lret
dec
jg
jecxz
pop
test
in
mov
lods
movsb
fstp
rcrl
dec
sub
fsubrl
icebp
pop
push
out
pop
xor
cwtl
or
push
repnz
push
andb
mov
mov
stos
xor
pop
inc
mov
scas
fadd
hlt
imul
cli
adc
stc
dec
push
jmp
sbb
inc
ljmp
pop
in
stc
pop
imul
das
in
out
or
pushf
idivl
push
mov
int3
jbe
inc
push
or
jne
hlt
mov
movsl
xchg
not
ret
push
xchg
sub
cmp
addl
sub
xchg
pop
add
subl
mov
stos
push
leave
adc
iret
push
pop
lock
pop
fnstcw
icebp
bnd
cwtl
pop
inc
subl
repz
stos
inc
leave
or
jmp
stos
lods
xchg
cmp
mov
mov
mov
mov
jae
mov
xchg
jl
andb
inc
fsubrs
cmp
xchg
mov
adc
or
sbb
dec
and
fsubl
mov
jg
add
ljmp
imul
jb
cmp
xchg
lahf
adc
notb
test
in
out
bound
lret
mov
jp
ljmp
andb
mov
or
filds
enter
mov
mov
pop
fisubrs
pop
aas
test
adc
out
pop
inc
mov
xor
andb
pushl
jae
xchg
xchg
push
mov
push
cli
outsl
xchg
fwait
jp
jae
pop
clc
push
mov
mov
out
ror
xchg
rcll
adc
push
repz
bound
sub
sub
mov
xor
lds
cmp
adc
cmpl
sub
mov
and
jns
pop
cmp
in
mov
dec
cmp
movsl
out
xchg
sub
sub
sub
and
fisubl
adc
xor
xorl
jmp
cmpl
or
xor
xchg
mov
cmp
pushf
fidivl
andb
cmp
or
xchg
test
xor
ret
imul
jg
or
ds
jb
cmc
popf
jecxz
ss
in
aaa
inc
jo,pn
mov
sti
ret
stos
int3
push
and
xlat
into
rcr
xchg
sub
pop
jae
dec
scas
js
inc
sbb
pop
scas
cmpsl
mov
mov
xchg
jo
test
sub
adc
into
js
push
imul
push
push
adc
mov
cmp
ja
cmp
add
push
cmp
adc
jo
sarl
and
idiv
insl
pop
pushf
pop
mov
jg
add
cmpb
or
inc
mov
ljmp
cmp
or
xor
cmpsl
mov
dec
and
xchg
mov
mov
push
add
bound
or
xor
inc
push
push
inc
cmp
mov
divb
imul
jb
inc
in
mov
aam
mov
aam
aaa
xor
test
mov
push
popf
mov
inc
sub
rcrl
dec
dec
and
and
lret
insl
in
iret
pop
ja
inc
mov
lock
dec
dec
mov
adc
mov
xchg
push
outsl
fdiv
xchg
xchg
iret
ret
stos
add
cmp
out
dec
call
jmp
imul
fiaddl
lea
cs
xchg
shrb
insb
stc
lret
notb
sub
inc
xor
pop
inc
lods
mov
fmull
es
loopne
xchg
arpl
xor
push
lahf
in
iret
adc
sbb
fcom
arpl
pop
imul
push
mov
and
repz
enter
push
int
mov
sbb
xchg
movsl
jp
sbb
jle
push
aaa
out
stos
jae
jl
xor
dec
push
shlb
push
sub
and
xchg
stc
js
jnp
hlt
je
pop
aam
shll
mov
adc
xchg
jmp
xor
sahf
aas
push
test
mov
mov
repnz
test
sub
mov
cmpsl
xor
ljmp
daa
cli
andb
fsubrp
mov
sbbl
adc
call
inc
and
insl
sbb
mov
sub
xor
or
mov
mov
dec
sub
in
cwtl
jnp
sub
cmp
push
or
bound
pop
sub
xchg
in
dec
cmpl
jmp
add
arpl
add
mov
jg
bswap
cmp
outsl
xchg
push
xor
mov
fistps
push
jmp
add
mov
cmp
push
icebp
mov
sub
dec
sbb
pop
mov
pop
dec
pop
add
dec
push
inc
aaa
or
test
inc
out
dec
jae
aad
mov
iret
mov
sub
mov
jnp
mov
mov
aas
cmpsb
mov
inc
cs
sub
insl
dec
xchg
testb
mov
xor
inc
jne
adc
cwtl
sbb
sub
jmp
jle
inc
jne
movsl
stc
adc
cmpsb
pusha
dec
mov
add
jbe
cltd
cmp
push
das
cld
imul
andb
xchg
xor
fdivl
push
negl
jo
jnp
or
or
fadds
push
in
lret
push
fsub
roll
xor
jns
push
scas
cmp
xor
or
adc
sti
fdiv
sub
arpl
pop
push
xlat
insb
ret
adc
mov
cmp
and
sbb
sub
ss
jp
lock
push
lea
out
pop
cmp
pop
divl
pop
aam
jo
cmp
push
push
pushf
pop
push
xchg
adc
and
mov
lock
lods
outsb
incl
pop
push
xchg
outsl
lea
pop
jnp
scas
sbb
or
jno
mov
jmp
xor
les
lock
mov
sbbb
cwtl
decl
sub
mov
leave
adc
jns
lods
push
pop
imul
mov
jno
mov
pop
inc
sbb
int3
in
xchg
int3
dec
lcall
adc
push
mov
jo
dec
dec
sti
jg
sbb
repnz
int
cltd
pop
jge
dec
xchg
nop
outsb
scas
mov
dec
xor
aad
fstpl
push
movsb
movsb
xchg
in
stos
cli
add
add
jnp
lret
insb
fstp
sbb
push
es
fldl
lret
mov
loope
into
mov
push
mov
ds
mov
into
repz
adc
inc
leave
roll
test
mov
inc
data16
add
negb
data16
mov
jo
insl
inc
add
pushl
pop
jl
or
mov
stos
push
arpl
xor
and
mov
cli
cmp
out
dec
adc
int3
repz
cli
mov
add
add
mov
stos
pop
outsb
sbb
aam
sbb
mov
mov
jl
xchg
or
pusha
xchg
or
sub
xor
or
iret
mov
daa
enter
lret
scas
loope
sbb
out
call
xchg
pusha
mov
pop
int3
scas
sub
popf
adc
dec
push
fisubs
dec
sar
sbb
jecxz
repz
mov
bound
outsl
shll
js
jo
adc
sbb
and
pop
int3
jmp
test
jne
rorb
cmpsb
out
mov
add
rol
pusha
mov
pop
xor
into
cltd
ljmp
sbb
aas
lds
leave
cld
mov
xchg
xchg
and
fdivr
or
xchg
jno
popf
mov
and
cmc
lock
ret
inc
sbb
jne
mov
pop
iret
push
roll
sar
add
rorb
outsl
pop
xchg
fwait
rolb
mov
sbb
test
cltd
jnp
sub
sub
mov
dec
insl
jae
adc
in
xor
std
int3
cltd
gs
icebp
mov
cmc
cmpsl
sub
xor
hlt
and
test
leave
shlb
stos
adc
mov
jmp
mov
mov
cmc
ja
out
incb
inc
sub
push
push
and
arpl
mov
das
and
dec
stos
stos
push
iret
jnp
popf
inc
into
sbb
movsl
push
es
das
mov
bound
xchg
ret
mov
cmpsl
sbbl
jns
push
test
add
pusha
fwait
cmp
stc
les
inc
popa
es
cmpsl
outsl
out
jb
daa
adc
enter
inc
inc
mov
jge
shl
and
add
mulb
bndstx
andl
xor
xchg
mov
sub
cld
mov
rcpps
bound
adc
inc
jae
adc
pop
pop
adc
adc
test
sbb
add
shl
pop
push
lea
into
jae
popa
cltd
push
push
out
pop
cmp
jmp
loop
lods
and
gs
jo
popa
movb
daa
shll
pop
inc
nop
jmp
add
cmp
cmp
jl
sarb
sbb
adc
je
stc
and
insl
rorb
sbb
pop
ja
sbb
pusha
cmpsb
dec
adc
jns
mov
mov
fsubs
jmp
dec
inc
inc
and
fcmove
jmp
pusha
mov
mov
pop
lods
and
jmp
stos
dec
mov
std
lds
and
push
les
aad
jecxz
dec
enter
movsb
mov
xor
insl
movsl
test
xchg
sub
sti
xlat
inc
jmp
addr16
pop
mov
xchg
lea
mov
push
inc
mov
mov
insl
sbb
xchg
jmp
jg
pop
mov
sarl
and
repnz
mov
xchg
inc
xchg
mov
lods
es
lahf
jecxz
lcall
bound
adc
test
cmpsl
jns
lcall
cld
add
outsb
push
cli
xchg
jp,pn
sub
and
adc
or
test
inc
outsl
dec
adc
inc
xchg
and
scas
fcmovu
mov
cmp
add
aas
fs
jle
adc
xchg
inc
fildl
ret
mov
loop
push
jae
aam
sbb
mov
mov
lea
nop
int
je
out
pushf
jg
or
adc
into
add
pop
pop
jl
jl
jns
add
sbb
xor
aaa
and
adc
push
adc
pop
inc
push
mov
cs
sub
mov
inc
aas
jle
push
data16
add
mov
sub
dec
mov
stos
mov
pusha
mov
ljmp
adc
gs
lds
adc
outsb
icebp
cmc
cltd
mov
add
imul
lcall
fwait
sub
jecxz
xorb
scas
sti
mov
mov
scas
push
test
xlat
mov
cmpb
xchg
jl
inc
dec
jne
and
inc
lods
lds
stos
repz
dec
fcmovnbe
sub
adc
push
inc
or
pusha
adc
movsb
lock
repnz
idiv
xchg
push
adc
jne
fsubp
loopne
pusha
arpl
leave
cmp
sbb
sahf
and
sub
mov
loopne
sub
std
push
cwtl
insb
lret
flds
pop
bound
int3
pop
imul
xlat
inc
add
lods
adc
xchg
bound
repnz
inc
jmp
fisubs
out
ret
out
dec
push
jg
mov
in
dec
mov
mov
movsb
rclb
adc
clc
movsl
push
ja
es
leave
xchg
cmp
stos
jae
jne
std
mov
pop
fisttpll
nop
das
gs
pop
mov
mull
or
out
and
sbb
cs
test
cmc
cld
sub
les
push
pop
stc
jp
and
shl
mov
fbld
sbb
push
fwait
sbb
std
cmp
cmp
adc
bound
add
aas
std
push
add
pusha
ds
sbb
imul
not
ret
pop
push
fs
inc
out
aaa
inc
leave
mov
jge
cmpsb
mov
loop
or
jmp
sbb
jge
mov
jbe
push
push
test
pcmpgtd
ret
or
lcall
pop
inc
sbb
lea
push
mov
dec
roll
adc
and
rcll
movsl
jg
testl
dec
or
dec
cmp
jne
mov
out
push
xchg
lds
loop
adc
jge
in
das
in
ret
je
push
insb
cli
in
push
mov
sbb
mov
fdivl
and
jbe
xor
adc
xor
decb
xchg
jbe
stos
pop
pop
loopne
in
nop
cmp
mov
aaa
ret
pop
sbb
add
xchg
push
mov
push
fnstsw
dec
jp
test
rcrl
jne
adc
rolb
fsub
pop
lock
xlat
in
lock
test
jl
in
inc
popf
addr16
or
imul
lock
push
stc
sbb
inc
mov
push
hlt
imul
sub
popf
aas
jbe
in
movsb
xlat
cli
shrb
ja
nop
mov
inc
hlt
and
loope
mov
inc
int3
fsubr
nop
adc
pop
out
inc
cwtl
fdivp
xchg
xor
repnz
mov
sbb
lds
test
repz
pop
jmp
cld
scas
mov
push
add
insb
addb
mov
sbb
adc
call
push
jecxz
ja
cmc
sbb
in
nop
sbbb
mov
push
movsl
sbb
inc
std
mov
dec
push
pushf
aam
jae
daa
inc
rorb
jmp
call
and
pop
mov
sbb
push
sbb
imul
mov
imul
in
pop
leave
popf
lods
mov
aam
imul
mov
sbb
into
mov
xor
daa
outsl
leave
popf
dec
das
mov
mov
jmp
jo
mov
icebp
das
aad
adc
xor
jae
addl
push
cmp
addr16
insl
adc
push
das
mov
add
adc
and
add
into
out
aaa
scas
mov
or
popa
cmpsl
or
mov
and
mov
notl
mov
aaa
rcrb
inc
lret
jnp
fimull
adc
push
insb
pusha
lret
ret
xchg
fcmovnu
bnd
repnz
pusha
stc
pop
push
jp
mov
cs
enter
lahf
outsb
faddl
sub
dec
clc
aad
out
fbstp
aam
inc
inc
cld
push
sub
xchg
or
jb
mov
mov
lcall
cmp
cli
gs
adcb
movsb
jg
or
int
sbb
xor
cmc
mov
jb
inc
lret
dec
test
mov
mov
int3
cmp
lock
loop
sub
inc
lahf
cmp
out
sbb
pop
and
pushf
pop
sbb
out
lods
xchg
nop
aam
adc
subl
daa
les
ss
lock
rcll
jae
out
xor
and
xor
push
scas
push
je
scas
out
lods
lret
mov
pop
outsb
jmp
dec
xchg
iret
outsl
push
lret
xor
cmpsl
js
sbbl
testb
cmpsb
sub
hlt
ja
jp
jge
imul
addl
mov
or
adc
or
ja
lods
test
aaa
mov
mov
mov
push
cwtl
pop
test
mov
orb
fstpl
jo
jl,pn
and
mov
pop
mov
xchg
xor
sub
push
push
incl
pop
dec
rorl
int
sti
popf
push
sahf
add
clc
aam
dec
xchg
or
push
out
neg
mov
ds
xchg
jne
cld
fistpll
jae
xchg
sbb
and
or
add
push
outsb
sub
sub
leave
or
jo
and
movsl
xchg
inc
test
test
jbe
icebp
fsts
push
dec
and
xor
mov
mov
pop
mov
jp
add
test
sub
leave
mov
iret
pusha
xchg
xlat
dec
jno
lock
fbstp
or
cmp
stos
or
sti
push
les
adc
aas
cmp
les
xor
or
push
cmp
lds
xchg
nop
sub
inc
cmp
cs
nop
add
mov
lea
out
cmc
jne
jae
push
inc
outsl
jg
sbb
clc
loopne
gs
inc
pop
mov
popa
push
pop
xchg
pusha
jp
in
mov
aam
and
jne
push
sbb
add
data16
into
inc
adc
fsubrl
adc
xor
hlt
imulb
mov
sbb
adcb
pop
dec
xchg
aaa
fs
cs
sub
or
push
movsb
xor
imul
imul
xor
xchg
sbb
mov
mov
in
ds
dec
sub
or
pop
and
into
int
ret
jb
lcall
pop
jecxz
and
pop
xor
push
inc
push
or
dec
aad
adc
fdivl
test
add
lods
imul
mov
sub
add
push
cmp
pop
jg
ss
imul
out
push
je
mov
jo
fld
mov
outsb
pop
outsl
inc
sub
cmp
lock
pop
aad
jmp
and
out
mov
or
xchg
roll
add
jno
mov
faddl
adc
ss
cmp
add
push
jle
add
xchg
rclb
sub
mov
outsl
mov
xchg
ret
cltd
adc
push
xchg
push
idivb
loop
fdivrl
xor
out
fs
movsl
dec
mov
fmuls
push
sub
dec
dec
je
inc
mov
sbb
rorb
sti
loopne
sub
sub
xchg
movsb
imul
sbb
out
and
enter
out
or
sbb
or
push
add
rcll
sbb
xchg
aaa
sbb
lcall
test
inc
test
out
sbb
push
sub
inc
jne
arpl
xchg
xchg
or
and
ja
adc
inc
sub
ret
mov
jle
mov
je
lea
out
xlat
mov
xor
mov
sbbb
push
subl
xchg
dec
fadds
test
push
add
aam
lahf
aaa
push
jmp
lods
faddl
mov
pushl
js
insb
insb
xor
cmpsb
inc
js
scas
pop
fwait
mov
lods
jl
and
cmpsl
shll
out
and
jne
dec
inc
lods
pop
sti
imul
aad
xor
xchg
mov
sub
sbb
les
in
dec
push
sub
jl
in
cwtl
pop
ja
jns
insb
mov
pusha
in
jmp
jmp
cmp
push
mov
iret
push
inc
jo
lea
jno
jl
mov
or
push
sar
negb
cltd
mov
xchg
movsl
fiadds
push
add
sub
sbb
out
push
dec
and
loope
sub
cltd
mov
cs
fwait
mov
or
push
pop
adc
sub
jmp
lret
cld
lea
xor
cli
cmp
lcall
iret
cmp
jge
and
cmpsb
push
mov
xchg
icebp
jle
ret
xchg
orl
into
int
mov
inc
add
jns
lods
adc
xchg
arpl
push
jp
adc
mov
movsb
xchg
icebp
or
mov
sbbl
jge
imul
cmp
mov
xchg
and
push
orb
rol
stos
out
test
or
dec
inc
mov
mov
pop
mov
stos
xchg
cmpsl
mov
mov
jmp
enter
jl
add
mov
leave
popa
gs
lret
leave
add
pop
xchg
cli
dec
sbb
sbb
xor
ja
leave
outsb
push
pushf
xor
push
aam
into
sub
pop
jle
hlt
cld
repz
sbb
scas
mov
jno
in
push
jae
incl
cmp
arpl
mov
jecxz
sbb
lds
mov
jae
pop
inc
cmp
xchg
sub
add
in
ds
adc
imul
ret
sbb
cltd
xchg
jbe
push
fucom
cs
rorl
mov
js
call
dec
cmp
and
iret
iret
loopne
movsl
fs
inc
int3
cmp
pop
push
adc
xchg
or
lcall
scas
add
pop
xchg
faddl
pop
pop
cwtl
pop
sbb
jae
sar
xor
shlb
stc
mov
mov
cmp
pop
lret
or
aas
fmul
test
pushf
movl
imul
hlt
cli
jecxz
ss
jge
fsts
cmp
rcr
dec
popa
lahf
rep
daa
mov
xchg
dec
sbbb
pop
jnp
mov
jnp
cmc
mov
push
lea
dec
push
cmp
fsubrs
xchg
outsl
lret
int
movsl
sub
cmp
mov
push
sbb
lods
enter
mov
unpcklps
mov
cwtl
fs
mov
mov
pop
mov
or
scas
rclb
pop
repz
cmp
pushf
and
andb
lea
jne
in
mov
jg
les
dec
sbb
sub
ss
mov
cmpsl
and
xor
cs
inc
ret
or
sub
mov
or
xor
cmp
mov
jno
mov
repnz
xchg
test
inc
lds
in
pop
adc
xor
cmpb
mov
movb
mov
lahf
or
es
push
jl
lods
mov
repnz
loope
cmp
adc
cmc
lcall
xchg
push
out
or
lfs
or
aaa
test
pop
fcmovnbe
and
adc
jmp
divb
cmp
sub
inc
cli
lds
sar
jno
and
pop
pop
push
cwtl
jbe
mov
fdiv
jns
pushf
call
sbb
jmp
test
xchg
ret
push
adc
or
mov
das
dec
lret
push
popa
neg
addr16
inc
push
mov
jbe
pop
in
punpckhbw
pusha
faddl
and
mov
add
push
and
mov
cmp
jnp
mov
mov
xlat
call
pop
aam
sbb
mov
push
shlb
mov
adc
pop
lcall
cmpsl
jecxz
inc
int3
inc
dec
pop
mov
mov
in
push
roll
mov
mov
pusha
and
inc
and
and
and
mov
fiaddl
inc
orl
rorl
scas
lret
add
sbb
stos
fisubl
rorl
sub
popa
push
test
or
add
in
cwtl
xor
inc
call
lret
jb
xchg
mov
lock
lcall
adc
sbb
pop
cmp
or
scas
pop
cli
rcll
int
pushf
mov
sbb
lcall
cld
ja
fldenv
je
lret
lcall
neg
cmp
mov
fidivl
xor
out
andb
in
jo
jns
adc
jo
jb
repz
xlat
adc
jno
les
mov
xlat
lahf
sub
fiaddl
jle
dec
mov
test
dec
lret
std
rcr
sub
subl
jle
call
adc
in
loopne
lret
aad
mov
inc
mov
push
pop
dec
push
in
push
mov
icebp
cmp
jbe
jbe
lock
sub
out
lods
xchg
xor
mov
jle
adc
and
xchg
std
ds
mov
mov
iret
aaa
sbbb
sbb
cmc
mov
mov
lret
push
jmp
add
mov
enter
sbb
pop
cmp
sub
xor
std
das
xchg
jbe
xchg
jle
adc
outsb
fwait
inc
and
and
push
cmp
hlt
ficomps
or
mov
lock
push
mov
scas
insb
mov
aas
mov
xchg
mov
in
sti
jecxz
adcl
scas
mov
pop
loope
arpl
fs
jb
mov
xchg
test
dec
aaa
ljmp
scas
lea
dec
or
xchg
pusha
xlat
negl
mov
and
or
mov
jnp
or
sbb
aaa
sbb
fwait
xchg
popf
push
js
xor
xchg
stos
stc
or
out
hlt
jecxz
push
cli
ficompl
push
dec
lret
push
mov
add
lea
fsub
inc
hlt
arpl
ljmp
lret
insl
xor
xor
pusha
and
fsubs
sub
jnp
popa
test
subl
ffree
xchg
xor
lods
cld
in
mov
inc
jns
inc
ficoml
mov
pop
mov
cltd
add
add
mov
sbb
jnp
push
pop
rolb
shrb
pop
lahf
mov
cmpsl
jge
aad
pusha
out
sub
lret
jns
lcall
insb
lea
push
bound
dec
scas
pop
push
icebp
lds
mov
sub
stos
aas
jo
push
xor
lods
pop
and
repnz
mov
cwtl
shlb
jge
jns
and
leave
lods
jecxz
or
ja
mov
push
inc
jae
cwtl
mov
add
jno
cmp
loope
mov
jo
je
push
push
jge
cmp
in
fs
repz
inc
jb
adc
dec
popf
dec
ret
inc
pop
pop
push
lret
and
mov
pop
mov
das
das
push
outsl
push
mov
cs
jns
cmpsl
mov
subb
inc
or
mov
lcall
jmp
dec
pop
adc
or
rol
imul
mov
int
dec
jbe,pt
int3
outsb
out
jle
mov
imull
xchg
and
bnd
cld
js
xchg
ja
cmpsb
xchg
dec
inc
dec
inc
shlb
xchg
mov
add
push
shrl
jo
fldcw
sub
xchg
jecxz
cltd
cli
push
xor
in
insl
mov
inc
jmp
jp
mov
test
lcall
in
cwtl
es
fucomp
pusha
mov
fimull
add
jnp
incb
pop
out
inc
push
add
lock
mov
dec
or
popa
xchg
test
mov
out
imul
jecxz
push
mov
push
mov
sub
ljmp
cld
cs
js
out
jb
fsubrs
leave
in
stos
inc
hlt
orb
movsl
das
jg
or
cli
inc
aaa
and
push
cs
movsb
push
xchg
cmp
and
jg
pop
movsl
jno
mov
repnz
jl
pop
addr16
es
mov
push
test
fldcw
addr16
andb
mov
inc
xchg
jo
rolb
nop
shlb
sub
arpl
jne
test
add
sub
push
xchg
leave
out
lods
mov
cmpsb
pop
inc
sbb
add
jo
and
and
fwait
push
pop
rolb
mov
hlt
mov
mov
rol
cmp
xchg
in
push
scas
ret
clc
imul
dec
popa
lret
sbb
movsl
int
push
mov
sahf
fldenv
repnz
pushf
icebp
jg
int
stos
ja
xorb
push
clc
push
les
mov
dec
aas
data16
sbb
push
inc
mov
jnp
sub
sbb
les
sub
mov
xor
cmp
aas
xor
in
mov
pushf
sub
out
jnp
into
add
lea
stos
lods
xchg
in
lret
out
inc
pop
mov
insb
lret
mov
int3
scas
idiv
pop
sub
inc
mov
and
and
in
jecxz
jnp
sahf
jae
test
movsb
enter
aas
stos
loopne
and
into
pusha
mov
sbb
fldt
and
movsl
insb
xchg
sarb
xchg
mov
and
in
adc
enter
mov
pop
cli
addl
cmpsl
mov
addr16
sti
add
insl
mov
jge
dec
xor
frstor
test
insb
xor
or
inc
mov
lcall
out
pop
and
add
mov
pushf
call
stos
dec
or
into
inc
loope
xor
jg
lcall
cmp
repz
popa
cld
scas
pop
xchg
in
xchg
pop
jp
nop
inc
mov
add
fiadds
xchg
xor
mov
lcall
xchg
lods
test
mov
xchg
dec
iret
jp
jge
ds
xor
mov
push
add
pop
rolb
mov
shr
cmp
inc
push
and
testb
xor
xchg
dec
and
mov
aas
mov
mov
dec
adc
lock
int
mov
push
xchg
clc
or
into
xlat
dec
popl
addr16
adc
jno
enter
fwait
loopne
mov
xlat
push
inc
icebp
mov
call
lahf
outsb
or
imul
or
sbb
mov
lea
fimuls
arpl
jle
add
or
std
ds
xorb
popa
mov
jne
add
adc
adc
in
std
mov
dec
xchg
js
in
jmp
icebp
push
scas
push
mov
pushf
mov
lahf
pop
xor
add
cmpsl
mov
pop
aad
and
fld
fidivrl
pop
mov
decb
xchg
add
jg
push
pushf
fdivrl
adc
andb
pop
inc
pop
imul
lock
push
stos
shrl
lods
out
nop
aaa
push
inc
mov
pop
leave
adc
sub
into
push
cmpsl
sbb
js
iret
notb
rolb
incb
or
imul
adc
pop
pop
or
xchg
cmp
mov
dec
jno
add
mov
arpl
ds
cmp
add
cmovle
shl
ja
push
ljmp
js
scas
xchg
adc
push
pop
xchg
dec
add
or
cltd
cltd
repz
push
jns
stos
adc
test
xor
pop
cmp
jnp
dec
dec
aam
call
dec
rcrb
or
cmp
aas
cli
adc
or
or
pop
fdivrs
mov
ljmp
es
pushf
or
cmp
pop
es
mov
mov
roll
push
in
nop
jle
mov
add
xchg
ja
sbb
negb
cli
hlt
cltd
iret
or
stc
leave
xor
and
mov
pop
mov
add
and
xchg
xor
sbb
sbb
into
add
test
xchg
pushf
jmp
or
je
notl
and
mov
insb
mov
cmp
mov
sbb
popw
jnp
imul
jg
jb
and
pop
aas
loopne
jno
mov
xlat
in
stos
aaa
fmull
mov
in
test
mov
inc
and
mov
jb
mov
mov
mov
jp
sub
lret
sbb
mov
mov
mov
or
adc
pop
pop
bound
add
and
or
call
or
push
xor
addr16
lock
fidivl
fnstsw
ffree
loopne
push
jle
cmovnp
push
orl
add
lods
fidivl
dec
div
bound
pop
popf
xlat
std
sub
dec
rorl
sbb
cwtl
imul
aam
test
mov
arpl
enter
inc
mov
ja
xlat
cmpsl
xchg
xor
imul
outsb
inc
mulb
push
and
pop
jecxz
bnd
es
mov
cmp
inc
xchg
movb
pop
cmp
repz
cwtl
cmc
sbb
jmp
call
jecxz
cli
leave
push
xchg
test
sbb
jmp
cmp
sub
mov
adc
arpl
inc
je
scas
xor
das
sahf
push
hlt
popf
add
mov
xchg
xchg
or
js
mov
mov
imul
sbb
aam
ljmp
dec
cmp
jecxz
dec
imul
subl
xlat
xchg
lds
cwtl
stos
scas
mov
ljmp
push
repnz
mov
outsl
ss
and
jge
sbb
mov
pop
fstps
dec
mov
or
xor
loopne
mull
arpl
adc
btr
and
inc
ror
leave
repz
int3
mov
mov
mov
adc
dec
out
dec
ja
mov
test
mov
or
loop
testl
leave
jge
fdivl
adc
out
cmp
cmp
les
pushf
cltd
mov
imul
mov
dec
fstps
into
adc
sub
out
cmpsl
add
and
add
sarb
repz
xor
int3
jp
and
xor
xabort
push
sub
leave
sti
mov
push
fcoml
dec
out
xor
push
jb
xchg
scas
pop
popa
mov
pcmpgtd
cmpsl
imulb
ja
movsl
insl
add
add
movl
sbb
cmp
cmp
pop
cmpsb
cmpsb
lret
xchg
jp
lock
inc
in
imul
rcrb
mov
pop
jne
inc
xchg
fdivs
fdivrs
push
lret
fsub
outsl
add
mov
icebp
je
lods
in
pop
mov
rclb
mov
mov
call
icebp
mov
mov
fwait
cmp
sti
jmp
mov
cltd
jmp
sub
lret
pop
out
leave
push
adc
pop
es
imul
inc
inc
add
push
cmpsl
pop
cmp
subb
xor
imull
aam
dec
arpl
jnp
roll
cmp
xchg
xor
mov
push
lret
shlb
mov
inc
ss
xchg
aaa
icebp
in
pop
loope
add
xor
adc
mov
mov
fcomps
sbb
fiaddl
daa
pop
jns
dec
ja
fwait
jge
inc
je
cmp
lods
ret
and
fisttpll
mov
xchg
xor
mov
test
sbb
ret
in
in
loopne
push
mov
adc
jl
mov
or
lahf
or
add
add
sub
pushf
out
dec
bound
jl
testl
jmp
jp
xor
lock
test
sub
in
or
es
movsb
mov
popa
sub
push
mov
xchg
leave
xor
or
pusha
lods
push
sub
xchg
in
loope
cmpl
sbb
iret
inc
and
dec
and
mov
xor
aam
pop
mov
cltd
push
add
xrelease
push
popf
and
js
mov
inc
shl
jecxz
jb
scas
outsb
mov
fst
data16
lcall
inc
pop
rorl
push
xchg
jae
mov
test
lret
sbb
aad
je
faddl
sbb
mov
push
lahf
adc
imul
jns
sub
imul
dec
fdiv
lret
xchg
mov
dec
pop
mov
repz
popf
add
cli
xorb
and
mov
xlat
xlat
arpl
cmp
xchg
add
pop
sti
mov
mov
aas
divb
jbe
cmp
shrl
mov
and
rcrb
cmpsl
ret
dec
sti
or
push
stc
inc
jg
cli
or
mov
push
dec
sub
add
inc
out
aam
out
neg
xor
sbb
xchg
lock
jmp
sbb
daa
add
lods
inc
enter
or
mov
xchg
ljmp
imul
xor
test
inc
jbe
dec
or
push
mov
push
and
imul
aas
lods
push
cmp
pop
cmpsl
test
rcll
or
add
movsl
adc
mov
mov
pop
push
mov
insb
inc
jnp
and
notb
pop
stc
pop
das
jp
xchg
xchg
out
or
ret
jb
mov
in
dec
ds
jnp
cltd
call
push
inc
mov
sbb
pop
push
jp
in
adc
imul
aad
ljmp
mov
popa
cmp
mov
xor
fs
mov
sub
aas
cmp
lahf
inc
jge
ficoms
lahf
ret
dec
jp
xchg
pop
mov
lret
in
aam
push
call
jg
push
test
ja
inc
test
test
insb
stos
lods
andb
adc
fcomp
ss
mov
insb
inc
icebp
xor
inc
loopne
add
cmp
test
lcall
test
push
insb
and
mov
ds
mov
clc
xchg
xor
inc
xchg
mov
shrb
in
movsb
sahf
ljmp
notl
in
mov
push
cli
mov
push
xor
and
arpl
and
ret
jb
add
das
cmpsb
cltd
xchg
sbb
push
cmp
lods
xlat
mov
pop
push
sarl
ljmp
sbb
jp
jecxz
scas
ss
adc
push
je
lss
test
mov
aas
sub
sbb
push
pop
mov
cwtl
pop
fsubrl
test
in
cmp
mov
dec
mov
mov
mov
jns
adc
inc
jne
sbb
cmpsb
and
pop
pop
pop
mov
or
or
jno
repnz
xorl
fsubrs
xor
minps
out
in
addr16
in
xchg
add
mov
fidivs
inc
in
pop
ds
ret
enter
insl
mov
push
push
sub
stos
xchg
push
add
out
push
mov
dec
iret
mov
mov
movsl
and
fdivrs
xlat
mov
pushf
xor
push
cmc
or
outsl
xchg
icebp
xor
dec
subb
jo
xlat
cmpl
loope
push
pop
xchg
fildll
mov
test
bound
repnz
dec
es
dec
mov
mov
xorb
arpl
ljmp
std
xlat
push
mov
mov
and
sub
pop
call
push
mov
mov
scas
ret
sbb
xor
into
out
mov
in
cli
ret
add
test
inc
inc
fidivs
jbe
pop
jge
scas
int3
and
xchg
mov
mov
nop
add
pop
nop
dec
push
decl
sbb
xchg
cmpsl
pop
or
int3
add
inc
add
sub
in
pop
test
pop
push
jg
mov
fdivs
cmp
out
in
pop
or
cmpb
push
std
lods
mov
sti
xchg
xchg
movsb
add
mov
push
mov
repnz
pop
fidivl
ret
test
and
lret
mov
les
js
inc
jecxz
mov
push
mov
shrl
cmc
adcb
inc
push
std
arpl
aaa
pop
loop
out
adc
pop
popf
test
fldl
mov
in
out
loopne
into
add
fwait
mov
pop
mov
sar
xchg
nop
std
outsb
or
mov
outsb
xchg
jne
push
add
jmp
cmp
mov
pusha
sbb
cmp
enter
add
negl
push
dec
imul
dec
fimull
stc
sbb
pop
mov
and
iret
test
movsb
call
arpl
push
cwtl
inc
push
or
mov
scas
clc
jp
gs
inc
aaa
pushf
jmp
cmp
cmp
stos
call
push
push
stc
aad
xor
inc
loopne
and
sub
arpl
movsb
mov
pop
sub
and
sahf
dec
cltd
inc
jg
cmp
daa
inc
gs
lds
ljmp
or
aas
push
stos
fcmovnb
filds
mov
mov
arpl
repnz
ret
fucomip
cltd
jb
add
inc
arpl
jle
xlat
test
outsb
push
adc
pushf
mov
arpl
clc
imul
inc
xchg
xchg
pop
pop
mov
add
shrl
stos
and
mov
inc
or
xchg
pop
fiaddl
hlt
syscall
in
sub
fldl
stos
rcrb
bound
jae
and
rol
push
js
lock
or
aad
xchg
or
jnp
cmp
mov
jnp
jp
cmc
push
jne
mov
mov
jnp
in
jmp
fldenv
and
test
sbb
mov
cmpb
fwait
lea
mov
xor
jp
xchg
aad
mov
jle
xor
aam
data16
jb
add
cmp
in
jge
insl
cmp
xchg
stos
lock
nop
adc
sbb
mov
xor
push
or
adc
in
fiaddl
es
jl
pop
stc
sti
in
cmp
icebp
add
js
xor
sti
mov
push
add
or
nop
cmpxchg
insb
cmp
cmp
xchg
or
push
jle
fiaddl
incb
add
cmp
jne
aas
or
std
or
scas
sub
repnz
insl
push
shlb
push
rol
loopne
pop
inc
repz
and
pop
push
jb
pop
das
inc
sar
sbb
in
push
add
insb
int
xchg
sbb
pop
mov
addr16
push
repz
xchg
sbb
aad
ja
push
jmp
pusha
xchg
das
xor
mov
cmp
dec
sub
into
cmp
pop
insl
aad
dec
add
mov
sbb
push
cs
add
dec
mov
test
rcl
enter
in
fwait
jo
lea
addr16
inc
push
mov
jmp
in
sbb
jno
aas
cmp
lock
dec
sub
lahf
adc
aam
add
cmpsb
pop
cmp
xchg
cmp
push
insl
sbb
xor
and
push
jmp
jns
xchg
pusha
scas
divl
int
xchg
inc
and
mov
fildl
roll
mov
inc
repz
lea
push
mov
adc
jbe
cld
xor
leave
test
pop
push
pop
out
adc
cli
or
mov
inc
jg
out
popa
adc
std
in
adc
not
lods
mov
mov
fwait
sbb
add
cmp
add
add
dec
shrb
jmp
aam
fs
and
xchg
mov
jmp
push
pop
add
in
adc
mov
cmpsb
and
mov
jl
fisubrs
popa
push
mov
fs
sub
jmp
lret
xchg
xchg
add
mov
lcall
push
dec
icebp
jne
ljmp
cltd
loope
sbb
inc
push
rcll
std
sub
lods
sbb
jb
in
into
jno
cli
imul
aad
popa
lcall
jbe
adc
out
jbe
outsl
movsl
xor
iret
xchg
cld
flds
add
loope
outsb
mov
fimull
cmp
jl
xchg
clc
push
imul
and
iret
mov
pop
mov
xor
out
cmp
push
imul
cwtl
cli
pop
lahf
xchg
clc
add
push
mov
cmp
xchg
js
mov
or
xchg
jmp
push
pop
cmp
imul
mov
xor
jne
les
push
sub
cmpsl
std
pop
adc
faddl
imul
fwait
rclb
in
pop
jle
hlt
dec
movsb
insl
xchg
mov
push
xor
jle
cmp
gs
mov
out
jmp
xor
mov
stc
rcr
addb
aam
and
jne
lds
add
ret
aas
pop
mov
loop
fwait
out
mov
aas
dec
ljmp
xchg
xchg
inc
sbb
and
adc
adc
rolb
jnp
pop
leave
adcl
mov
cmpsb
add
jae
rcr
jb
push
push
xchg
stos
out
dec
stos
pushf
fcoml
stos
add
popf
cli
adc
sub
push
dec
test
das
enter
test
rolb
dec
leave
je
int3
inc
mov
jl
fbstp
dec
inc
cs
sbb
pop
mov
push
xlat
in
fisubrl
addr16
sbb
push
popf
sarb
dec
es
sahf
sub
ja
xchg
xorl
add
xchg
adc
movsl
cmpsb
dec
inc
aad
pusha
cmp
xor
aas
fcomip
cwtl
lcall
fucomip
adc
insb
xchg
mov
xrelease
and
inc
push
outsl
movsl
movsb
jnp
mov
inc
adc
jne
fidivl
popa
aam
repnz
insl
jbe
xor
lock
sbb
pusha
out
sbb
mov
stc
cli
pop
mov
insb
fimull
ret
xchg
in
mov
jno
loopne
xor
xchg
shl
gs
inc
push
iret
dec
out
into
mov
add
mov
fbstp
je
and
leave
mov
mov
loopne
orl
mov
int3
inc
dec
inc
aam
push
mov
push
movsl
leave
mov
sti
add
addl
xchg
pop
xchg
out
cmpsl
mov
add
push
fxch
pop
fimull
ret
jl
xor
dec
imul
add
mov
pop
dec
popf
imull
and
push
das
cli
nop
adc
add
cli
mov
jns
cmpsl
push
sub
cs
imul
shlb
dec
cmp
cs
xor
stos
add
mov
lcall
les
jecxz
xor
jge
push
lods
xor
inc
fucomi
pop
add
lret
mov
enter
inc
lret
repnz
mov
in
bnd
in
add
hlt
mov
jle
mov
lcall
cmp
popa
mulb
fadds
les
leave
pop
or
dec
mov
or
and
jle
and
addl
inc
push
sub
addr16
test
es
das
cld
iret
push
int
jo
insb
mov
mov
pop
adc
clc
dec
iret
into
push
mov
out
jbe
pop
pop
movsb
adc
push
xor
outsl
daa
es
fsubr
sub
shll
jae
jg
cmp
js
lds
inc
inc
jge
repz
int3
mov
mov
cmpsl
and
mov
inc
push
or
dec
xchg
lea
movsb
mov
mov
daa
jo
dec
jle
ja
adc
adc
std
push
xchg
cltd
mov
enter
cld
cli
in
mov
xchg
imul
in
cwtl
fmuls
test
test
mov
mov
sbb
orl
mov
mov
add
int3
hlt
lds
ljmp
adc
test
cmp
sbb
dec
pop
mov
mov
add
movsl
sub
test
inc
test
mov
or
mov
push
adc
jb
mov
add
sbb
adc
fwait
out
iret
or
xor
add
and
sarl
jmp
cmp
fldcw
sub
jb
scas
inc
push
xchg
lret
in
sbb
into
mov
stos
ss
pop
outsb
out
and
pop
repz
into
push
aaa
scas
in
push
inc
ljmp
ljmp
out
dec
xchg
sub
inc
fisttpl
test
sub
inc
lret
adc
or
rorl
insb
rol
inc
jmp
adc
jnp
leave
bound
inc
pop
and
adc
out
test
ret
and
ds
jno
push
sarb
test
cmpsb
pop
or
add
sub
sbb
mov
pop
push
mov
jmp
loopne
push
mov
add
in
mov
into
mov
adc
xchg
pop
jae
jns
les
into
inc
sub
add
sqrtps
icebp
adc
push
cmp
cmp
stos
adc
xorb
pop
mov
xor
out
enter
lret
dec
adc
mov
xor
dec
push
inc
scas
testl
sbb
ret
sbb
push
xchg
fsub
xchg
aad
pop
subb
flds
mov
data16
insb
cmp
and
xor
cmpsl
sub
or
lods
sbb
jg
push
jo
mov
mov
pop
push
iret
add
dec
cld
mov
ljmp
push
sub
xlat
mov
imul
ret
add
and
jae
movsb
cwtl
cmp
inc
and
out
push
mov
fidivrl
xchg
or
xchg
or
sub
dec
aas
adc
cmp
add
pop
call
nop
xchg
adc
stos
jbe
sub
aas
cmp
iret
repnz
mov
out
inc
and
outsl
or
jbe
cmp
pop
mov
data16
push
arpl
test
addr16
inc
jg
in
loope
sbb
aaa
jmp
mov
and
les
mov
subl
out
insl
outsb
stos
jnp
mov
sbb
add
mov
xchg
mov
or
lahf
inc
lahf
into
inc
pop
push
mov
cmp
sbb
mov
in
sub
loopne
loop
xchg
cli
mov
sarb
rcrl
test
adc
or
sub
ss
lret
push
fildll
adc
jns
pop
pop
sub
add
pop
insb
loope
jg
or
rorl
xchg
out
inc
jae
mov
jo
inc
sbb
adc
pop
mov
inc
fwait
xchg
mov
mov
cmp
xchg
mov
xchg
fmul
adc
push
cmpsl
xchg
mov
sbb
cmp
scas
adcl
popa
in
xchg
pushf
push
das
inc
stc
xor
push
sbb
mov
movsl
cmp
leave
imul
and
inc
and
cmp
xchg
xchg
ret
aas
jo
mov
cmc
mov
or
mov
jg
sub
movsb
sbb
mov
subb
int
ficompl
les
ret
adc
sbb
add
cmp
cmp
push
icebp
test
cltd
aad
inc
inc
das
xchg
inc
loopne
adc
stos
jno
jg
orl
xor
dec
push
loopne
push
enter
js
aam
les
dec
inc
test
cmpsb
sbb
fiadds
jl,pt
pop
mov
or
aaa
addr16
jb
push
imul
or
xchg
mov
call
push
loop
dec
lea
fnstenv
aas
push
ds
ret
push
addb
sahf
or
sbb
ret
dec
stos
cmp
push
outsl
lods
outsb
das
les
pushw
out
fwait
jae
mov
loope
mov
lret
repnz
into
lcall
rclb
ret
jl
sbb
daa
xor
test
xor
push
shl
jl
mov
stos
mov
pusha
lds
dec
cld
jo
xchg
xor
nop
mov
clc
dec
sbb
ror
sub
pop
fmuls
out
in
mov
adc
inc
dec
arpl
sub
in
inc
cld
cmp
ljmp
inc
jge
aas
test
pop
xchg
mov
popf
dec
jns
pop
mov
mov
fwait
jp
enter
adc
or
leave
mov
fmul
daa
mov
inc
cmp
insl
add
mov
out
insb
or
jp
pusha
sbb
hlt
int
cmp
sahf
pop
dec
add
iret
adcl
cmp
mov
lock
fdivrl
cltd
cmp
jbe
clc
subb
clc
je
ficoms
mov
iret
add
push
jne
stos
aad
lahf
es
push
cli
cmp
dec
std
lret
cmp
jb
dec
push
mov
pushl
insl
jb
repz
ds
imul
push
mov
adc
test
push
call
cmp
or
mov
call
popf
inc
adc
testb
in
push
push
scas
mov
inc
ret
mov
aaa
jmp
xchg
cmp
push
test
sbbb
in
mov
lds
insl
mov
roll
orl
and
mov
mov
into
bound
push
cmp
jo
in
lahf
push
inc
xchg
test
enter
jg
out
inc
fldl
decb
imul
mov
jg
ja
xchg
xor
cmp
test
xor
inc
lret
xor
sbb
cltd
sbb
ret
ret
xor
inc
fldenv
or
mov
jecxz
jb
pop
movsb
push
int
insb
arpl
pop
pop
jl
lret
cmp
mov
xlat
xor
xor
int
mov
mov
mov
bnd
les
mov
push
andb
outsb
nop
jo
pop
inc
mov
ljmp
jae
in
pop
xchg
sbb
lock
push
rclb
push
lcall
loop
rol
call
jno
loop
pop
push
lahf
arpl
test
mov
pusha
push
cmpsb
push
rorb
lods
mov
nop
bound
icebp
mov
cli
repz
mov
mov
cld
fistpl
sub
sahf
sar
aad
xor
lret
jnp
into
pop
arpl
push
fisttps
shrb
int3
cltd
inc
imul
daa
rcr
fs
sarl
xchg
add
shrl
push
pop
cmp
test
ret
mov
out
es
cmpsb
mov
pop
gs
idivl
stc
sbb
nop
ret
insl
jle
leave
mov
sbb
pop
inc
mov
popa
or
sbb
mov
fstp
aad
call
pop
or
aas
mov
popa
les
mov
insb
mov
pop
sbb
lahf
or
dec
dec
jns
or
dec
mov
add
es
or
mov
xor
jg
sbb
jmp
fdivrs
inc
negl
xor
repnz
pop
fnstcw
pop
and
daa
and
sbb
inc
int3
mov
sbb
mov
sbb
fwait
popf
and
arpl
loopne
sti
jnp
push
pop
jle
repnz
shll
gs
idivb
lcall
push
pop
je
push
fwait
jne
mov
dec
dec
cmp
or
outsl
mov
das
mov
loop
mov
fsubs
fs
icebp
mov
jle
test
cli
repnz
xchg
jae
fwait
out
push
xchg
in
inc
mov
pop
pushf
test
repz
push
fucomi
xor
dec
push
push
das
sbb
dec
dec
or
ja,pt
frstor
and
enter
mov
inc
scas
out
cmp
insb
xchg
push
lds
cmp
testl
inc
sbb
aas
or
dec
test
sub
loopne
aad
pop
and
push
es
xor
insl
jle
out
dec
mov
aam
mov
cs
call
add
enter
add
sbb
xor
enter
lcall
push
cmp
call
fwait
mov
in
cli
push
stos
dec
push
fdivl
push
insl
bound
outsl
jno
fildll
sbb
and
insl
add
das
or
lock
cmp
stos
std
push
loop
cwtl
mov
or
sub
xchg
xor
loop
cwtl
dec
sarb
pushf
in
push
mov
mov
xor
xchg
lock
mov
jl
sbb
es
ljmp
dec
push
add
jns
pop
addr16
mov
cmp
lock
out
rol
lock
xchg
sbbb
hlt
xchg
push
fidivs
fldt
cmp
scas
add
pop
fcmovu
scas
mov
fbld
and
push
test
xchg
push
into
xchg
inc
xor
pop
cld
jo
rorl
and
addr16
testl
or
cmc
adc
test
adc
pop
into
outsl
loop
movntps
mov
loop
sbb
cmp
xlat
shr
mov
fisttpll
mov
adc
push
sub
push
daa
mov
into
sbb
lds
or
mov
or
cltd
jne
jns
jecxz
pushf
xlat
cmpsl
pop
ljmp
jecxz
fidivs
ficompl
popf
fnstsw
lock
jecxz
das
push
inc
call
pop
lahf
pushf
lret
mov
outsl
or
aad
scas
stos
int3
lds
in
daa
les
icebp
add
out
fidivl
fsub
les
jnp
lcall
sub
mov
dec
nop
inc
xchg
rclb
dec
xchg
pop
fldz
mov
and
mov
push
mov
lcall
push
mov
in
mov
or
dec
lock
mov
jg
das
or
push
out
scas
ljmp
adc
mov
lods
jnp
les
mov
cmp
dec
cmp
shlb
popf
pop
pop
and
mov
aam
jg
divl
xor
xlat
sbb
in
or
pop
inc
fiadds
jns
addr16
xchg
pop
test
jge
imul
popf
cmp
push
adc
sub
icebp
dec
ds
xchg
leave
adc
push
xchg
inc
arpl
aad
sbb
mov
mov
shll
orl
xchg
rcrl
daa
mov
mov
cmpsb
pop
jno
inc
xor
insl
test
jb
iret
push
das
dec
pop
dec
dec
jp
sbb
push
pop
daa
lods
cmpsl
movntps
inc
xlat
mov
int
mov
mov
movsl
scas
dec
andb
dec
xor
les
cld
mov
xchg
stos
clc
cltd
rcrb
cmp
movsl
mov
ss
mov
inc
jo
inc
sub
jne
loopne
test
addr16
mov
adc
sahf
sub
inc
ficompl
push
mov
les
bound
popa
dec
aam
test
dec
insb
cld
and
push
pop
in
pop
mov
push
mov
pavgb
xchg
or
out
icebp
mov
adc
mov
or
adc
cmp
xor
inc
lock
js
sub
repnz
lahf
pop
imul
xchg
sub
jmp
repz
or
xlat
mov
or
mov
iret
mov
sub
add
cmc
xor
test
sbb
lods
jb
push
movsl
xchg
jmp
hlt
ficoms
cltd
push
pop
and
mov
gs
inc
cmp
pop
aam
adc
or
je
jmp
xlat
dec
je
push
lret
mov
cmp
mov
popa
cmc
clc
mov
adcl
dec
sub
dec
test
daa
or
add
adc
jmp
inc
adc
jg
fldl
in
bound
push
pusha
pop
stc
mov
sbb
mov
jns
xor
rcr
scas
sarl
mov
cmpsl
les
dec
jmp
int3
test
fxch
outsb
mov
adc
sbb
adc
mul
jo
movsl
push
lods
push
jne
or
loopne
stc
fcoms
outsl
cli
dec
fbld
push
in
lock
fcmovu
xchg
fidivl
jg
and
dec
inc
imull
daa
adc
movsb
xchg
sub
ljmp
jno
jno
ss
ljmp
jp
repnz
das
sbb
call
inc
jge
test
push
fisttpl
jno
shll
jno
lods
xchg
or
mov
shr
imul
cmpsb
xor
sahf
xor
xor
aad
mov
repz
jle
stc
and
and
insl
cmpsl
ljmp
sti
fsubrl
mov
pop
iret
pop
xlat
gs
insb
inc
mov
or
lea
sbb
push
or
push
mov
push
jle
outsb
in
data16
pusha
ljmp
jbe
xchg
push
icebp
sbb
leave
xchg
outsl
loopne,pn
mov
in
jno
ret
push
js
and
xchg
and
mov
xor
dec
or
lret
cltd
mov
int
shlb
add
sub
out
or
dec
cmp
mov
cli
push
mov
adc
fdivs
jnp
and
repz
pop
leave
cwtl
mov
ds
pop
jno
insl
and
popa
inc
jmp
lds
mov
pop
test
sub
sbbb
popa
jnp
sub
mov
lcall
mov
jecxz
mov
xchg
mov
mov
movsb
imul
add
int3
pop
cmpsl
mov
cmpl
addr16
loope
sbb
out
cld
push
mov
pop
or
scas
mov
scas
jae
cmpsl
fmuls
mov
mov
dec
data16
movsl
cmp
cmp
popf
fldenv
jmp
inc
sub
cmpsl
lods
js
outsb
enter
ja
jg
fisttpl
sub
cmp
insl
out
fcomp
dec
or
popf
xchg
in
mov
sbb
in
dec
jg
cmpsb
jae
or
cmpsb
mov
xor
mov
test
rol
das
adc
imul
mov
call
shrb
add
dec
nop
xor
lea
lods
scas
outsl
aas
pusha
loop
into
pop
rcl
xchg
enter
pop
adc
mov
cmp
popa
sub
mov
jb
sbb
andb
add
jae
shrb
mov
jmp
cmp
les
cmp
inc
lahf
jb
in
repz
dec
pop
mov
dec
in
or
pop
lea
jl
das
ljmp
call
je
or
ret
jnp
mov
pusha
or
mov
jl
jbe
dec
fdivr
sub
xchg
pop
or
ficomps
ret
or
dec
sbb
ret
call
test
ss
cmp
or
cmp
pop
adc
repz
in
dec
mov
push
sbb
repz
xor
ret
push
push
call
or
clc
xchg
test
decb
and
rolb
inc
mov
mov
aas
stos
pop
shrl
mov
jmp
mov
mov
lret
aad
imul
jle
mov
push
ljmp
cmpsl
jg
pop
lahf
sti
sbb
scas
pop
insl
aam
xorb
dec
pop
cmp
insb
sahf
aam
jbe
jns
imul
dec
jmp
dec
mov
negl
outsb
sub
mov
xor
in
mov
and
jno
lret
aam
loope
insb
outsl
inc
push
testl
ljmp
sub
es
scas
in
fwait
dec
bnd
inc
fst
xchg
mov
jle
mov
idiv
mov
int3
ret
lods
sbb
popf
mov
arpl
repnz
jle
pop
lret
outsl
add
addl
sahf
jae
outsl
fcompl
pop
int3
into
movsb
aaa
dec
mov
daa
push
scas
push
decl
mov
lcall
push
and
adc
idivl
push
test
pushf
cmpsb
scas
lds
loop
xor
nop
int3
ret
ficoms
pop
jb
iret
ror
sub
test
mov
inc
pop
pop
cmp
sbb
sub
inc
or
into
pushl
xor
cmp
dec
test
imul
jle
sub
enter
inc
outsl
fstps
int3
sub
pop
addr16
and
xchg
pop
lret
mov
add
xchg
vmptrst
jp
fldl
fnsave
xlat
lcall
pop
lds
hlt
adc
iret
sbb
dec
icebp
dec
mov
mov
rolb
mov
push
loope
sti
and
int3
pop
add
add
xchg
test
push
dec
adc
popf
xchg
jmp
inc
mov
or
jns
dec
jb
bound
xchg
pop
sbb
scas
aam
push
add
in
sarb
aam
mov
jle
sbb
jo
push
dec
inc
jl
sbb
cmp
faddp
bound
mov
mov
stos
push
imul
out
cs
push
lods
roll
dec
scas
cmp
adc
gs
scas
mov
mov
js
daa
sarb
pusha
mov
les
and
sbbl
cwtl
or
call
xchg
ljmp
dec
jne
push
push
xchg
or
cmc
leave
jne
push
xchg
in
popf
fdivp
push
xchg
in
insl
test
cwtl
insl
jecxz
out
push
pop
or
xchg
inc
mov
inc
or
jns
addr16
rorb
mov
dec
adc
fwait
cmp
jno
aaa
cmc
repz
and
jl
sbb
jle
out
xor
cmp
xchg
mov
outsb
jnp
ret
sti
push
push
test
icebp
orl
mov
xor
insl
pop
pop
mov
sar
out
sbb
paddb
test
push
and
sub
and
mov
lahf
mov
fimuls
stc
and
cmp
mov
andb
repnz
xor
xor
addl
jno
fiadds
pop
xchg
outsl
lret
imulb
mov
pop
fisubrs
sti
iret
push
fcomps
mov
or
fdivs
and
ljmp
aaa
ja
cmp
lea
or
mov
sahf
add
incb
addr16
add
mov
sub
repnz
std
add
cli
pop
jno
push
jg
adc
sub
repnz
push
sbb
mov
or
dec
lods
cmp
xchg
ret
fsts
and
mov
adcb
xchg
xor
cmp
mov
les
aam
cmpsl
ja
and
sbb
incl
jne
mov
or
inc
int3
sub
jno
push
inc
dec
or
mov
lret
mov
sahf
mov
cmpsb
mov
jb
xor
iret
sahf
or
call
and
cmp
stc
pop
cmp
mov
aaa
dec
inc
jp
lock
mov
fs
mov
call
setns
or
mov
adc
call
shrb
popf
cmp
mov
bound
adc
ja
jge
mov
mov
fstps
cmpsl
flds
enter
or
mov
int3
cwtl
mov
xchg
sbb
jno
mov
pop
cmp
pop
cmp
xor
or
jge
jmp
push
in
lret
data16
subl
or
fwait
outsb
xchg
loopne
push
insb
subb
jl
ret
cmp
addr16
mov
je
stos
out
pop
pop
pushf
scas
repnz
dec
call
jne
icebp
jl
int3
repz
dec
sub
imul
pop
jnp
inc
scas
repz
insl
sub
xor
pop
clc
fistl
xor
add
movsl
inc
dec
imul
sbb
xchg
rclb
imul
and
xchg
push
mov
cwtl
lea
fs
inc
lods
lea
aaa
xchg
cmp
sbb
mov
mov
xor
test
cli
mov
icebp
leave
push
jbe
and
ss
popf
je
lcall
test
testl
repnz
mov
pop
cld
cmp
cmp
mov
sarb
push
pop
aas
mov
nop
pop
mov
mov
inc
or
setg
out
test
lds
lea
aas
pop
les
testb
pop
fimuls
inc
xchg
xor
es
or
fbld
inc
shrl
pop
enter
fistps
sub
mov
xor
cli
or
and
mov
or
cmpb
or
sbb
xor
fisubl
and
cli
in
nop
pop
inc
mov
sbbb
jb
or
mov
cmpsw
sub
mov
or
push
addr16
pop
or
ficoms
or
mov
lret
xor
dec
notb
mov
ret
xor
and
shrl
and
add
pop
pop
cmp
fists
fstps
jg
popf
xchg
pop
in
jae
enter
xor
xor
mov
cmp
pop
inc
outsl
aad
pop
xor
insb
adc
xchg
stc
ljmp
pop
dec
nop
xchg
mov
cld
ret
shll
lods
sub
pop
rcrb
lds
push
add
mov
icebp
lock
mov
fmuls
add
outsl
cli
mov
rcrl
out
mov
jnp
add
sbb
jae
pop
sahf
inc
ljmp
je
push
shlb
addb
in
push
cmp
loope
sbb
xchg
lock
mov
in
add
mov
lahf
add
inc
ror
xor
xchg
lahf
hlt
lret
pop
pop
adc
filds
jl
xor
mov
dec
sub
xchg
xchg
cwtl
sbb
outsb
mov
dec
mov
jge
xor
or
jecxz
jo
or
in
pop
out
lret
push
stc
xchg
xorl
popa
clc
inc
in
and
xchg
adc
movsl
js
and
stos
dec
mov
mov
xchg
sbb
pop
mov
jle
pop
out
fsubr
mov
arpl
outsb
repnz
loopne
xor
push
test
repz
push
inc
xchg
mov
scas
test
or
jmp
adc
inc
aaa
es
xchg
movsb
xor
xor
loope
xor
test
fistl
push
add
xchg
sub
dec
out
ret
jne
xchg
xor
pushl
and
outsb
cpuid
fsts
pop
decb
or
ror
sub
add
pusha
pop
and
push
mov
lret
lcall
mov
sub
pop
loope
int3
jno
cmp
xor
push
ds
pop
fisubl
jne
aas
sbb
dec
lods
inc
std
mov
dec
enter
xchg
mov
fstl
fstpt
jle
scas
bound
mov
in
mov
mov
clc
mov
pop
pop
lret
mov
out
xor
xor
ret
das
jb
add
xor
push
jb
movsl
ret
addb
adc
pop
mov
fstl
dec
and
sub
cmpsb
negb
xor
test
test
cmpsl
xor
mov
mov
fldln2
sub
adc
aas
testl
pop
idiv
ja
ds
mov
loope
es
pop
push
fwait
jl
or
inc
fsubs
xchg
lret
mov
repnz
scas
dec
adc
unpckhps
cmp
cmp
mov
leave
adc
mov
or
add
lret
ficoms
loopne
push
adc
push
fistps
inc
xorb
and
sti
adc
mov
rcr
repz
out
xchg
add
std
push
mov
add
mov
mov
dec
lea
cltd
xor
jp
and
cwtl
xor
addr16
xlat
push
push
push
stc
out
jge
rorl
jl
jae
pop
in
or
pusha
xchg
mov
inc
cwtl
jne
adc
inc
loopne
or
in
push
sarb
lret
jo
rcrl
sbb
fidivl
stos
lea
lret
ja,pt
mov
leave
push
add
jns
pusha
mov
and
dec
sbb
xchg
or
cmp
out
aad
test
inc
cmp
jmp
cmp
iret
movsl
pushf
lea
orb
xor
xchg
cmp
mov
mov
dec
sub
cwtl
or
aas
jnp
jg
or
bound
push
aas
popa
je
js
dec
xchg
dec
adc
test
pop
sahf
pop
jnp
xchg
add
push
pop
mov
loope
je
andl
pop
pop
repz
cmpsb
cld
dec
enter
cli
fisttps
insl
push
adc
ror
fadds
das
inc
jbe
mov
aas
rcpps
out
insb
add
pusha
test
jo
xchg
popf
pop
test
push
xor
bound
inc
rolb
shll
sbb
adc
outsl
cmp
call
sbb
scas
pop
stc
fisubrl
shll
sahf
adc
pusha
pop
mov
mov
jo
scas
repnz
aad
jo
aam
mov
scas
or
in
jge
pushf
adc
scas
xor
in
xchg
dec
fwait
in
je
and
add
stc
inc
lods
pop
test
sar
addl
ds
lcall
push
es
scas
sub
and
inc
mov
lahf
fstpl
out
or
dec
cmpsl
push
leave
fisttpl
push
push
mov
fisttpll
mov
outsl
pop
lods
std
push
inc
and
insl
pushf
movsb
sub
lret
xorb
sub
cmp
pop
mov
jbe
dec
sub
fdivl
jne
imul
xor
lock
cmpsb
ret
jle
shrl
xchg
pop
addl
push
cmc
ret
xchg
cmp
inc
icebp
sub
fisubs
mov
pop
int3
ret
int3
aaa
mov
clc
iret
push
mov
mov
push
cmpsl
mov
js
aas
inc
lods
arpl
daa
dec
pop
xlat
xchg
or
shll
lods
outsl
in
outsb
inc
cmp
lods
test
xchg
in
fildl
mov
inc
dec
push
movsl
icebp
cmc
xchg
xchg
mov
das
xchg
or
lods
insl
leave
sub
into
outsb
cmpsb
addb
popa
cmpsb
and
sub
lahf
mov
stos
push
lret
push
mov
dec
ret
js
inc
jb
push
sub
inc
push
adc
mov
push
xor
and
push
xor
add
iret
lods
test
cld
add
gs
enter
scas
and
push
jae
mov
add
in
sbb
cmpsl
mov
pusha
adc
loope
leave
fs
inc
jnp
cmpsb
cltd
cs
into
or
cmp
fmull
lods
insl
icebp
lret
and
das
mov
xchg
popw
mov
pop
clc
shrl
push
rolb
orb
ds
movsl
mov
pop
jb
shrl
std
sbb
shlb
je
mov
sbb
xor
pusha
cli
fists
ljmp
push
loopne
es
pop
ss
push
popa
cmpsl
mov
add
lods
push
jne
out
fstpl
test
pushf
mov
inc
mov
js
mov
movsb
pop
xchg
pop
lret
mov
xor
arpl
mov
fsub
add
push
inc
insb
sbb
xor
dec
xchg
into
add
imul
cmc
icebp
jg
inc
dec
movsb
fadds
and
sahf
jmp
outsb
cmp
fcoml
sahf
jle
mov
pop
and
addr16
outsb
jmp
lds
push
shlb
xchg
clc
xor
dec
jmp
cmp
xchg
jle
lcall
dec
arpl
push
sub
or
jecxz
mov
jmp
lret
stos
orb
out
mov
mov
inc
adc
push
mov
or
dec
stc
popf
and
mov
cmp
ret
fisubrs
jmp
jmp
mov
mov
cltd
and
pop
pop
shl
leave
andb
stos
fcomip
push
ret
cmc
inc
sub
inc
incl
ja
shrb
jne
orb
jmp
repnz
add
mov
lret
jp
imul
sub
xchg
not
into
fistps
rclb
dec
add
xchg
mov
fnstenv
stos
shl
mov
push
inc
sub
and
loop
sub
call
mov
rcrb
out
pop
add
mov
mov
cs
test
mov
pop
adc
push
sbb
pop
aad
pop
ljmp
pop
mov
pop
decl
in
xchg
stos
addr16
jg
mov
mov
jp
mov
dec
cmpl
xchg
fs
mov
les
cmc
shrb
mov
dec
xchg
into
and
and
lds
movsl
cwtl
fnstcw
pop
cltd
sbb
jl
or
cmp
shlb
int
daa
cs
jmp
cmp
sub
jbe
push
stos
or
lcall
mov
mov
mov
imul
add
movl
adc
xchg
insl
test
ljmp
and
loopne
sbb
lcall
mov
js,pt
xlat
mov
ret
lock
bound
cltd
adcb
out
or
sub
rorl
mov
ljmp
lea
push
icebp
add
pop
stos
inc
xorl
inc
push
xlat
sub
test
add
cltd
lahf
xchg
or
cmp
sub
pop
dec
mov
in
test
lcall
add
jmp
xchg
jl
scas
sti
adc
inc
and
cli
xorl
das
add
push
aaa
fcomps
and
adc
popa
or
push
fisttpll
cwtl
pop
mov
inc
out
insl
inc
inc
aaa
aam
loopne
mov
cltd
mov
fwait
rcl
outsl
paddb
lods
outsl
stos
push
pxor
in
fldcw
sbb
repnz
sub
fucomp
into
cmp
call
cmp
jecxz
insl
xor
cmp
or
add
nop
jae
xchg
in
mov
jl
pop
std
fwait
inc
hlt
dec
rcr
scas
mov
in
xchg
cmp
mov
sahf
pop
leave
xchg
fucom
enter
cs
popa
sub
pop
imul
out
js
sub
mov
push
mov
jno
inc
xor
arpl
bnd
ljmp
sub
push
shr
nop
mov
mov
sti
mov
pop
inc
push
add
mov
jo
xchg
fdivrp
js
sahf
imul
mov
and
xor
aad
jmp
pusha
or
rcrl
gs
in
jg
jbe
mov
dec
pusha
fldenv
cltd
mov
ffreep
sbb
inc
jne
les
xchg
mov
mov
imul
dec
loopne
sbb
lcall
pop
je
and
fs
arpl
and
imul
add
or
shlb
mov
popf
mov
push
mov
add
pop
sbb
or
lahf
mov
inc
xchg
push
cli
mov
imul
push
icebp
and
out
in
or
push
movsl
cmp
movsl
test
jle
jge
cmp
mov
and
jle
mov
clc
out
and
std
into
inc
pusha
jno
std
mov
call
icebp
shrb
mov
push
cmpsl
mov
inc
out
cmp
hlt
adc
jmp
in
inc
add
mov
and
pop
adc
popa
mov
cli
and
and
mov
adc
mov
rcrl
push
add
push
mov
pop
in
dec
ja
cmpb
or
add
loopne
mov
xchg
sbb
mov
loop
dec
ds
aad
sub
cwtl
cli
cli
xor
and
cltd
xor
xor
jmp
mov
push
pop
dec
sub
ret
dec
in
faddl
xlat
push
mov
jl
arpl
sbb
jns
mov
or
jns
push
or
sub
lds
dec
test
data16
dec
out
fnsave
push
pushf
adcb
adc
in
add
sti
mov
jl
not
outsb
jecxz
mov
push
mov
mov
dec
sbb
dec
pusha
loopne
gs
jle
jo
lock
fists
dec
test
pop
push
sbb
jge
shrb
cwtl
ror
lret
lock
inc
inc
lret
insb
insb
frstor
lcall
insl
repz
inc
pop
lret
daa
sub
jg
arpl
sbb
push
mov
pop
xchg
testb
add
jno
or
inc
nop
pop
dec
xor
loopne
loopne
inc
push
and
or
and
rorb
xchg
in
and
jp
xor
andb
push
sub
pop
lods
insb
loop
or
jne
mov
add
add
jnp
fldl
xor
lret
or
jecxz
int3
iret
scas
xor
fnstcw
lods
sub
daa
xor
cmp
pop
pusha
xchg
pop
xchg
xchg
xlat
testb
jle
adc
ret
jo
or
fbld
iret
and
jb
sbb
xchg
and
push
or
pop
and
dec
add
icebp
jae
add
es
pop
mov
test
jge
out
mov
lahf
aaa
orb
cmp
pushf
or
cwtl
or
ss
iret
xchg
ficoms
in
jne
fwait
cltd
gs
mov
das
xchg
jl
cs
in
lcall
aas
sbb
and
mov
fnsave
jl
test
shll
stc
jmp
popa
mov
sub
subl
orb
jne,pn
std
imul
cwtl
cmc
push
sbb
xlat
dec
rcrb
test
mov
pop
call
push
ja
out
jno
push
inc
add
xchg
fst
iret
insb
int
icebp
jecxz
mov
dec
jnp
xchg
xor
and
andb
sbb
rcll
inc
lods
push
pop
test
ficompl
cmp
xor
test
mov
cmp
push
sub
mov
mov
iret
es
or
fisttpll
fwait
std
andb
int3
mov
add
jge
scas
mov
lock
and
pop
fisubrl
data16
jp
outsl
mov
lock
push
out
jb
cltd
mov
mov
push
jne
out
ja
add
mov
fwait
push
inc
ficoml
jae
cmp
lods
lods
pusha
xchg
mov
jo
js
fcmovu
mov
cli
adc
xchg
jns
dec
bound
xorb
pushf
add
jb
aad
and
gs
push
add
out
jle
lea
sub
jb
cmp
push
xchg
fmull
pop
shl
fsubs
dec
mov
pushf
and
sbb
gs
add
push
orl
pop
pop
sahf
in
cmpsl
rcrb
stos
lret
push
stos
ret
sub
ja
mov
push
inc
inc
movsb
dec
inc
insb
pop
test
call
shlb
adc
sahf
cmp
pop
pop
das
jo
xchg
cmpsb
lahf
lods
xchg
xchg
jo
push
xchg
mov
lods
push
mov
repnz
movsb
mov
xorb
pusha
pop
mov
int3
shl
cmpps
call
xor
imul
aam
pop
in
xchg
xchg
add
sub
fsubrl
fidivs
xlat
jle
dec
pop
mov
lods
sbb
jnp
xchg
test
mov
inc
lods
aaa
mov
jns
xor
out
push
scas
xchg
out
push
sbb
mov
push
test
cld
aas
nop
lea
mov
imul
test
stos
and
int3
aad
pop
add
mov
sarl
es
pop
adc
dec
cmp
mov
push
call
out
xchg
xor
movsb
dec
fs
mov
xchg
lret
aas
jno
xchg
cltd
int3
test
adc
shl
mov
xor
orl
movsb
mov
shr
mov
in
add
dec
dec
lds
in
pop
jp
add
adc
test
or
mov
push
mov
test
add
push
push
mov
fs
cmp
movsl
stos
push
ds
rorl
and
in
mov
addb
xor
rcrb
push
cld
jae
lret
push
xchg
clc
insb
lahf
mov
add
lods
mov
imul
test
sub
insb
clc
inc
int3
mov
push
je
pop
add
test
call
jae
clc
jg
test
mov
ss
dec
xor
push
in
imul
test
jle
xor
xor
xor
jle
jmp
out
dec
sahf
in
mov
push
or
shll
divl
lods
movl
jno
pop
lea
add
mov
aad
inc
or
xchg
daa
jp
mov
mulb
sbb
mov
movsl
mov
adc
loope
das
lcall
xor
repz
stos
push
pop
and
mov
pop
aaa
lcall
push
ds
jge
iret
or
mov
xor
shrb
jg
fwait
and
insb
int3
or
cmc
insl
into
sub
jp
push
out
aam
sub
jmp
scas
mov
cltd
lcall
pop
xchg
inc
out
dec
shll
pop
cmp
cmc
popf
jns
int3
or
iret
pop
mov
and
nop
mov
cmp
sub
call
pushf
fnstcw
popl
enter
inc
xlat
jo
out
popf
jge
push
sub
mov
rcl
mov
or
loopne
lock
xchg
adc
ret
add
out
dec
push
and
mov
cwtl
add
xchg
dec
scas
out
dec
das
mov
mov
inc
sbb
fildl
adc
mov
into
out
push
mov
pop
daa
adcl
aaa
ficoml
sub
in
push
sub
jl
ret
movsb
addr16
scas
and
insb
fs
leave
dec
jbe
inc
sbb
mov
pop
xor
rorb
popf
sahf
jns
and
addr16
movsl
jg
addr16
stos
iret
stos
leave
call
mov
pop
daa
jbe
call
pop
mov
stos
popf
lret
xor
cmc
lds
jl
in
repz
or
outsl
clc
mov
nop
mov
daa
mov
mov
sub
fcom
cmpsl
repz
adc
andl
or
aam
cmp
call
and
fdiv
inc
jbe
cmpsb
adcl
out
lret
jp
pcmpgtb
xchg
push
outsb
ljmp
mov
aad
mov
push
pop
outsl
push
fistps
cmp
xchg
mov
lret
dec
int
jge
lahf
push
gs
xchg
cmpsb
adc
inc
arpl
int
hlt
push
pop
mov
mov
sahf
sub
out
push
test
lret
jo
lahf
jl
adc
dec
add
jae
std
adcb
ficoml
in
mov
dec
xchg
dec
mov
mov
lret
mov
mov
cmp
mov
out
ret
addr16
pop
addps
fisubrs
mov
add
or
repnz
or
jnp
shrb
enter
sub
sub
orb
xchg
adc
aam
in
addr16
fcoms
xchg
jns
mov
push
out
xchg
stos
movsb
push
xorb
ret
jl
cli
or
int3
sub
loope
rolb
adc
jge
in
pusha
stos
lret
inc
lds
sti
inc
cltd
inc
fistpl
pop
cmpsb
in
mov
lea
push
jno
ds
rcll
fsubs
add
loopne
rolb
nop
repnz
data16
hlt
jbe
scas
pop
roll
cs
mov
dec
mov
and
lret
shll
mov
mov
cmp
dec
jae
and
popf
test
cmp
sub
sub
decl
pop
xor
mov
jne
pop
inc
cwtl
or
mov
jmp
push
push
push
add
pop
cwtl
push
sbbb
jnp
test
je
jae
xor
pop
cli
js
in
lds
addr16
int
mov
pop
stos
decb
mov
mov
in
add
gs
ficomps
xchg
int3
jl
push
mov
mov
cmc
imul
mov
lcall
or
imul
aaa
adc
das
out
mov
cmpsb
dec
and
mov
mov
sbb
sti
scas
xor
push
stc
add
add
and
jb
sahf
and
je
cmp
pushf
sub
adc
inc
and
jae
ss
push
pop
nop
jl
mov
sub
movsb
in
stos
aad
fnstenv
outsl
pushl
std
imul
lods
xchg
lret
insl
int3
out
jo
in
rcrb
leave
rcrb
fists
sbb
or
jle
cmpsl
incb
inc
ds
out
mov
push
mov
inc
pop
push
and
add
dec
add
pop
movsl
cmp
shrb
pop
aam
pop
aas
jecxz
popf
fabs
jmp
mov
fsubs
mov
test
cld
ljmp
mov
xor
adc
adc
sbb
inc
push
negb
rcl
lret
push
sahf
in
xor
and
mov
cmpsl
pop
lcall
cli
push
aad
mov
mov
or
xchg
and
mov
mov
cmp
pop
pushf
mov
add
mov
ss
sbb
ds
rolb
xor
icebp
or
fcoml
sarb
iret
push
dec
iret
cmc
ret
adcb
inc
cmp
aad
jb
test
push
and
adc
rolb
icebp
xchg
xchg
loop
mov
in
in
lds
nop
out
sbb
and
pop
lret
jecxz
push
dec
loope
add
or
sub
xlat
jno
into
mov
les
cmpsl
mov
sbb
xor
shrl
gs
mov
ret
fsubrp
push
mov
xor
aaa
outsb
mov
ret
dec
adc
mov
fwait
add
clc
inc
sub
xor
cmp
sub
xchg
jg
adc
jp
fnstsw
popf
mov
lods
adc
mov
pop
xlat
stos
mov
sbb
xor
dec
sbb
push
push
cmp
shr
lea
xchg
aas
add
adcl
jnp
outsb
mov
arpl
xchg
mov
or
mov
fs
sti
and
pushf
push
cmpsb
adc
ss
dec
hlt
inc
xor
clc
or
imul
xchg
jmp
mov
mov
cltd
xchg
and
cltd
push
rorl
sbb
jmp
mov
xchg
fs
add
xchg
aad
test
mov
mulb
cmp
cli
adc
enterw
push
lods
jecxz
cwtl
addr16
and
xchg
mov
dec
jl
int
mov
cmp
sub
lock
loopne
mov
jmp
icebp
mov
xchg
test
sbb
dec
bound
loopne
xchg
jnp
or
push
sbbl
jl
roll
lahf
or
sti
testl
mov
xchg
movsb
sbb
push
dec
movsb
call
mov
fdivr
dec
pop
mov
out
and
mov
add
sub
jbe
loopne
mov
lcall
mov
aas
loope
imul
scas
xchg
fsub
movsl
into
mov
in
jmp
adc
dec
in
les
or
fwait
push
mov
je,pn
cmp
repz
and
movsb
push
inc
je
icebp
lock
mov
cmp
dec
push
xchg
sbb
add
lea
jge
push
repnz
jmp
mov
jle
mulb
jno
inc
jns
scas
icebp
xor
sub
push
loop
push
add
mov
lret
fsubs
dec
xchg
in
xchg
jp
mov
cmp
sbb
cwtl
pop
inc
sarb
repnz
adc
js
nop
xor
jg
pop
fmulp
jb
andb
js
scas
fcmovne
add
sbb
lods
dec
cmp
sbb
int
pop
push
jp
cld
cmp
inc
mov
lds
fldl
fwait
sahf
push
add
push
dec
shll
cwtl
out
das
fsubr
mov
scas
xchg
xchg
lds
aaa
push
mov
mov
sbb
je
jmp
arpl
pop
mov
push
cmc
cmp
bound
push
repnz
stos
ret
imul
jle
xchg
inc
sub
cmp
inc
das
pop
iret
lds
dec
cmp
push
je
popa
mov
mov
insl
daa
push
cmp
inc
in
ret
and
lret
rclb
jp
cmpsl
push
lea
add
mov
outsl
push
sar
insl
xor
ret
inc
lcall
add
push
add
mov
pushf
cli
and
aas
nop
cs
xchg
xchg
jmp
sub
add
and
add
imul
fidivs
js
daa
cmp
cmp
lea
dec
xor
xchg
fbstp
in
adc
pop
add
rcrl
cmp
negb
call
jbe
xchg
adc
and
xchg
sti
cs
sub
mov
pop
call
and
test
pushl
xlat
shrb
lea
rcrb
push
dec
popf
add
rcll
mov
rcll
int
in
xchg
orb
cmp
sub
aaa
rorl
jecxz
loop
ja
rcl
adc
test
pop
mov
or
push
icebp
mov
xchg
xor
cmp
inc
inc
push
or
icebp
fwait
jp
inc
jp
push
jo
lret
fcomps
fucom
jle
mov
mov
push
mov
stos
dec
cmpb
mov
xor
insl
dec
mov
nop
inc
and
pop
push
pop
in
mov
mov
test
in
push
dec
cmpsl
and
pop
push
mov
test
xchg
sub
frstpm(287
outsb
mov
cmpsb
push
jmp
fldt
test
aad
cltd
xlat
insb
adc
cmp
and
pushf
jno
pushf
cltd
pop
mov
mov
jle
mov
pop
adc
or
cmp
mov
outsb
sub
out
jns
lcall
outsb
pop
inc
xchg
adc
mov
lds
xchg
scas
ds
cmp
adc
lods
mov
mov
fmulp
adc
xchg
xchg
aas
jnp
loop
xor
sub
enter
xchg
mov
das
mov
and
mov
into
std
or
and
repnz
stos
fcmovb
xchg
fbstp
inc
cmpsb
fsubl
xor
les
sbb
and
sub
push
out
add
lahf
out
xchg
xor
aad
xchg
sub
and
scas
data16
cmpsl
out
movsl
and
jp
pop
popf
fs
cli
inc
ret
addr16
fsubs
pop
lods
mov
in
loopne
adc
cltd
pop
xor
cltd
mov
jb
cmc
jae
imul
je
mov
jno
scas
orl
cmc
jecxz
push
jns
sbb
mov
aas
mov
leave
inc
push
mov
mov
mov
push
xchg
fmuls
decb
inc
inc
in
xor
jae
cmp
fildll
ret
pushf
outsl
enter
sbb
ja,pn
mov
sbb
repz
ds
mov
fidivs
dec
mov
loop
aam
fcoms
mov
shl
pop
lcall
mov
xchg
jmp
pop
pusha
lret
push
push
dec
adc
dec
pop
sahf
movsb
arpl
mov
add
das
fcom
mov
test
in
and
ljmp
rorb
and
pop
stos
dec
or
mov
sub
mov
adc
inc
jns
scas
inc
jae
xorb
in
cwtl
hlt
das
into
mov
push
outsl
jge
leave
inc
fistl
dec
rorl
clc
rcl
and
push
lods
call
stos
jg,pn
mov
jne
jecxz
dec
sahf
outsb
ja
jge
add
into
inc
add
loop
arpl
clc
fisubrl
push
pop
add
cmpsb
jmp
jmp
pop
add
nop
outsb
xchg
imul
lock
xchg
in
mov
fcompl
push
imulb
adc
mov
out
mov
out
xchg
out
divl
mov
jg
enter
adc
mov
xchg
lret
decl
mov
jnp
outsl
out
lods
adc
stos
dec
push
mov
adc
shl
arpl
cmp
cli
testl
push
pop
hlt
jp
push
push
shrl
sbb
xchg
jmp
rclb
fwait
sub
mov
pushf
xchg
push
mov
or
jo
mov
or
mul
pop
pop
mov
adc
sbb
add
jp
repnz
int3
mov
inc
jmp
or
insl
mov
orb
cmp
scas
ja
sbb
pusha
lea
mov
jp
scas
int3
jmp
dec
dec
stc
xor
adc
mov
xor
add
rolb
jle
pop
repnz
xchg
cltd
ja
mov
out
cmc
es
push
push
call
aam
dec
dec
imul
push
and
mov
mov
mov
jp
pusha
mov
or
iret
push
lods
or
imul
dec
call
jle
ds
fstpt
pop
cmp
add
inc
test
out
cld
sub
icebp
or
lods
jp
enter
aam
lret
stos
int3
cmpsb
xor
int3
pop
das
mov
out
cli
jb
data16
popl
xchg
jge
pushf
push
cmc
dec
in
cmpsl
adc
in
xchg
adc
lcall
and
sub
mov
aaa
aam
js
mov
inc
cmp
mov
inc
jo
fcmovnb
pop
cmc
lcall
in
es
push
cmovne
adc
sbb
fwait
inc
mov
jmp
add
rclb
push
in
ljmp
push
xchg
xchg
cmc
dec
cli
adc
inc
jne
inc
mov
in
outsb
cmovb
std
test
or
leave
push
jge
mov
fwait
into
add
xor
pop
inc
cmp
adc
iret
push
jbe
lods
movsl
adc
mov
cwtl
arpl
movsb
xchg
lcall
sbb
cmp
xchg
stc
push
aaa
sahf
scas
dec
shll
jmp
push
push
jno
xchg
mov
mov
enter
leave
rorb
xor
cmp
repnz
sti
pop
les
mov
gs
out
mov
int
cmp
shl
push
pop
insb
mov
add
cmpsl
sbb
jecxz
stos
dec
cli
iret
leave
push
cld
lods
mov
mov
pop
pop
pusha
xchg
aam
cmp
jo
addr16
lret
inc
jg
cmpxchg
ret
sbb
cmp
push
dec
xchg
gs
xchg
pop
pop
aaa
hlt
xchg
push
adc
or
mov
sbb
cmpsb
in
pop
push
scas
or
push
xchg
dec
insl
mov
lret
aam
adc
fucomip
sahf
iret
fcompl
scas
push
hlt
dec
sbb
movsl
and
lret
and
or
sbb
imul
mov
mov
xchg
or
sub
test
cmp
pop
push
add
out
push
mov
fmul
add
push
or
aam
daa
add
xchg
int
stos
and
mov
popa
imul
ds
sub
movsb
sbbl
scas
fisttpl
sbbb
dec
add
fcompl
jno
out
inc
mov
test
mov
out
nop
adc
das
push
xchg
jle
clc
ss
jp
aam
scas
inc
pop
int
jnp
inc
sbb
pushf
arpl
and
xadd
mov
outsl
lret
push
or
jg
cmc
pop
mov
cltd
mov
cltd
cmc
jle
cmp
jb
mov
int3
arpl
mov
push
pop
int
sbb
dec
test
inc
jp
daa
jne
sub
stc
mov
lods
fidivrl
fisubs
std
test
jae
ljmp
xor
std
adc
jl
je
pop
push
pushf
sub
inc
ds
sbb
popl
xor
out
push
idivb
mov
xchg
xchg
dec
ret
dec
add
divb
in
ss
push
add
push
repnz
ret
or
mov
int
mov
inc
nop
push
mov
pushf
jecxz
mov
outsb
dec
jl
sub
dec
testb
insb
loop
and
xchg
clc
jbe
pop
mov
mov
jmp
add
push
dec
loope
and
fcomip
je
jle
push
hlt
fwait
pop
and
cmpsb
and
or
lock
lcall
push
sub
out
testl
mov
ss
mov
jo
movsl
mov
mov
mov
pop
jbe
or
data16
add
jbe
mov
aas
nop
cmpsb
inc
sahf
stc
sbb
xor
loop
lds
push
ret
sahf
dec
add
mov
cmpsl
pop
pop
lret
lock
popa
jae
inc
cld
jmp
movsb
sbb
mov
insb
xor
lods
mov
sti
xchg
shll
insb
jne
push
sbb
pusha
int
add
xorl
fcompl
xor
xor
cli
mov
push
loopne
push
xorl
sbb
or
inc
in
cmc
out
sti
ldmxcsr
nop
and
inc
clc
xchg
lret
xchg
lods
dec
cltd
mov
push
ficoml
inc
push
orl
pop
mov
insb
cs
stos
popa
push
xchg
stos
mov
mov
fs
pop
clc
rcr
jl
push
xchg
enter
imul
mov
hlt
xchg
mov
aad
and
bound
fldenv
cltd
mov
mov
sbb
mov
jge
adc
cmp
mov
mov
fbstp
test
sbb
or
fcmovnu
mov
loop
fwait
and
dec
adc
jae
or
jp
cmp
jae
or
add
dec
outsb
cmp
inc
cmp
push
movsl
ret
sbb
cmpsb
jge
mov
push
in
mov
mov
sbb
cltd
fcoms
insl
sbb
xlat
incb
or
dec
lret
int3
jg
out
sub
test
mov
mov
inc
adc
jns
xchg
pop
xchg
movsl
cmc
bswap
sbb
cmpl
xchg
jbe
es
insb
test
int3
xlat
mov
lds
mov
pop
jae
loop
and
aaa
ret
sbb
int
mov
push
addr16
cmp
popfw
cltd
aas
sub
jecxz
jmp
adc
fcomps
mov
inc
mov
sbb
clc
bound
pushf
ret
gs
sub
mov
mov
adc
fisttps
out
xchg
test
inc
stc
xor
pop
adc
insl
repnz
and
mov
mov
sti
imul
xorb
adc
fcoml
decb
loopne
cld
dec
leave
test
xchg
xchg
push
rorl
inc
adc
push
mov
mov
cld
test
stos
imul
mov
fsubl
pop
sub
cmpb
popa
pop
cs
cmp
push
lret
scas
push
inc
dec
lret
rorb
mov
int
mov
mov
movb
movb
sbb
cmp
loop
mov
sarb
jge
aaa
ds
in
sbb
inc
iret
lock
pop
mov
jne
jle
mov
sub
out
int3
fdiv
mov
int3
and
popf
pop
jns
inc
mov
data16
mov
xchg
jb
js
in
pop
cltd
inc
xrelease
shl
mov
jne
lods
mov
ret
xchg
mov
inc
sbb
push
add
loopne
push
int3
pop
mov
in
xchg
mov
add
in
adc
add
ret
out
jp
or
mov
jne
add
cwtl
mov
adc
das
gs
sbb
fistl
fstpl
pop
fcoms
and
push
push
fildll
jne
in
and
int3
fdivp
sbb
pop
inc
sahf
jae
or
adc
call
cmp
shll
xchg
testb
movsb
cwtl
add
dec
aaa
mov
mov
sub
mov
sbb
lods
xorl
test
cld
cmp
jo
sbb
subb
pusha
mov
enter
roll
or
into
repnz
clc
in
inc
sbb
out
cmp
mov
into
test
popl
les
mov
in
outsb
fnstsw
imul
jno
mov
movsb
jns
les
movsw
jbe
aas
std
adc
out
gs
mov
sbb
add
in
insl
mov
xchg
mov
mov
adc
rorl
xor
xchg
push
xchg
or
mov
pop
push
incl
and
in
cmp
in
xor
and
dec
pop
and
jo
fnstcw
movsl
repnz
dec
push
pusha
call
or
adc
cld
imul
cltd
xor
das
outsb
push
ficomps
lock
sub
mov
jge
xor
sbb
sbb
inc
imul
xor
shrb
jnp
mov
push
aaa
popa
inc
sub
and
iret
dec
sbb
or
mov
lock
mov
push
fcmove
mov
sbb
pop
push
xchg
sub
cmc
jbe
inc
dec
cmp
push
mov
jp
fmuls
sahf
mov
pop
ds
jne
jl
add
xor
bound
stc
mov
xchg
insl
insl
repnz
in
loop
es
push
adc
sahf
lea
lret
fisttpll
mov
and
lret
inc
adc
imul
jnp
or
xchg
push
mov
or
dec
cmp
pop
fsubr
mov
pop
aas
and
rcl
mov
arpl
std
int3
push
mov
inc
aaa
aad
test
jl
and
cmp
int
or
ljmp
gs
xchg
sub
sbbl
hlt
fs
inc
aaa
xor
pop
mov
mov
lret
insl
or
xchg
jo
push
mov
imulb
mov
outsl
leave
out
adc
cwtl
in
adc
jecxz
cli
adc
test
das
loop
fs
ret
push
adc
outsl
jl
lret
sbb
cltd
xor
dec
push
or
push
clc
add
inc
jg
aad
mov
mov
adcb
addr16
cmpsb
cmp
xor
sub
or
repz
out
dec
mov
lcall
jg
and
jbe
out
mov
out
jg
repnz
xchg
adc
ss
pop
js
movsb
mov
es
shll
mov
dec
les
ficomps
sbb
jno
xor
fcoms
jbe
in
data16
cmc
pusha
mov
pusha
cltd
pop
mov
sub
sarb
or
jle
mov
gs
xchg
sub
mov
test
lea
and
mov
subb
adc
sbb
popa
dec
pusha
mov
aaa
fs
jbe
cs
push
jbe
aad
in
fwait
mov
icebp
push
dec
decb
cs
jno
mov
xchg
into
imul
mov
es
pop
mulb
adcl
mov
and
or
ss
aaa
mov
mov
or
cmpsb
pop
pop
pop
sub
fwait
aas
cs
inc
imull
test
stos
or
jns
je
cmp
loopne
or
pop
sbb
adc
ret
hlt
mov
jl
jae
xor
cmp
popl
lock
jbe
sbb
lea
mov
outsl
mov
mov
stos
in
jl
leave
sub
ds
and
adc
push
dec
and
mov
sarl
popa
je
push
outsb
sub
bound
pop
mov
pop
jp
xchg
test
or
shrb
push
mov
faddl
mov
xor
fucom
mov
add
je
sub
jmp
adc
or
pop
frstpm(287
cmc
mov
insb
inc
push
or
fcmovbe
ret
dec
and
popa
xchg
push
fmull
push
xchg
push
cmpsb
fistps
ret
xlat
cmp
mov
push
cmp
mov
mov
lds
pop
push
sub
sbb
adc
lock
das
hlt
adc
divb
mov
cmp
push
ret
pop
imull
int
mov
lahf
add
mov
push
arpl
int
in
or
mov
ljmp
stos
stos
add
dec
xor
mov
jl
push
jge
sub
pop
mov
mov
jmp
jmp
adc
adc
pop
jne
jmp
jge
xchg
loopne
jno
dec
and
dec
int3
test
inc
push
test
push
dec
ss
pop
push
imul
add
cmpsl
push
sbb
or
xor
xchg
cltd
jp
js
jge
cmp
xor
xor
pop
pop
mov
aam
or
icebp
sar
or
frstor
bound
jecxz
xchg
inc
lahf
xchg
push
add
loopne
mov
loopne
cmpsb
dec
inc
push
pause
test
test
xor
jl
push
mov
dec
mov
jbe
push
outsl
sbb
or
mov
lcall
idiv
test
sarl
mov
push
mov
jbe
fisubl
mov
imul
sub
xchg
mov
xor
call
fwait
xchg
add
mov
sbb
in
pop
in
les
mov
hlt
test
mov
cmp
stos
push
loopne
test
int3
xor
movsb
outsl
popf
xor
sbb
adc
xor
jb
icebp
inc
xor
pushf
jmp
inc
dec
sti
js
leave
in
testl
inc
out
imul
sub
jno
or
enter
test
sarl
jne
cmpsl
insb
lcall
dec
mov
and
mov
dec
push
in
push
ret
xchg
jmp
sub
adc
add
leave
rorl
into
cmc
push
mov
out
rcll
mov
aad
mov
cmc
jmp
popf
pop
xchg
dec
push
cmp
lods
in
loope
rcr
call
gs
xor
add
push
imul
into
add
dec
repz
lods
ja
pushl
xchg
inc
icebp
pop
data16
jmp
push
add
sahf
in
incb
das
in
pshufw
xor
mov
imul
xchg
pop
cmp
adc
test
xchg
xor
add
insb
pop
cli
push
add
xor
mov
jo
mov
mov
jmp
sub
call
mov
push
push
jge
scas
dec
xchg
add
popf
or
ja
cld
mov
repz
jnp
into
sub
cli
rorl
addl
push
lods
out
mov
ret
arpl
mov
mov
inc
dec
imul
mov
lods
imul
cmp
es
ret
scas
pushf
jno
int
fwait
repz
rclb
mov
cmp
shl
pop
jle
adc
inc
dec
stc
pop
test
fs
mov
pop
sub
jl
xor
aas
fimull
adc
popa
push
inc
push
outsl
call
inc
or
lahf
cli
test
imul
jge
ja
shlb
xchg
pop
jns
mov
test
insb
enter
xchg
mov
jp
pop
test
ret
daa
bound
or
dec
jbe
adc
outsl
xchg
xor
fisubl
dec
call
mov
xor
dec
stos
sub
nop
push
xchg
lea
enter
call
popf
push
cwtl
mov
pop
int
arpl
cwtl
aam
popf
mov
cmp
out
inc
xor
mov
push
data16
shlb
mov
cli
xor
mov
int
ja
xchg
scas
or
rorl
loop
addr16
repz
scas
in
xor
fistl
hlt
mov
or
xchg
cmp
faddl
pop
notb
pusha
outsl
push
pop
cmp
xchg
test
outsb
xlat
or
out
shll
sarb
mov
cld
sub
es
mov
xchg
outsl
dec
sbb
pop
mov
stos
mov
mov
sub
fstpt
pop
cmpsb
mov
inc
jno
xchg
xor
stos
mov
adc
aad
ret
cld
fistps
int3
pushf
in
movsl
mov
out
enter
jae
inc
rorb
sbb
cwtd
push
in
lahf
daa
and
inc
xchg
aas
jle
in
xor
xor
movsl
sti
rcl
sahf
dec
adc
sbb
faddl
aam
sub
and
arpl
jge
aam
xchg
repnz
aad
mov
ljmp
loope
mov
pop
xlat
ds
scas
lods
add
sar
and
add
inc
push
mov
std
pop
push
sub
mov
push
sbb
mov
xchg
mov
lods
mov
mov
jo
pop
inc
xor
mov
dec
sbb
das
jge
fsubr
popf
les
cwtl
sbb
sbb
cmp
into
mov
inc
std
addr16
mov
call
jge
test
pop
mov
dec
mov
lock
insl
iret
mov
push
cmpsl
or
das
into
push
xor
dec
call
in
divl
cld
fs
mov
pusha
ja
rclb
cmp
jp
sub
xor
and
xchg
jmp
cwtl
push
sub
gs
leave
mov
cli
loop
mov
sbb
popl
xchg
adc
and
xor
xchg
add
lods
push
mov
adc
dec
outsl
sarb
pushf
cmp
cld
jae
das
inc
jge
push
cmp
cltd
out
data16
and
push
daa
addr16
sub
xor
push
sub
cmpsb
int
sbb
xchg
movsb
mov
jno
add
gs
mov
shr
xchg
add
push
or
mov
call
push
rol
and
call
lret
xchg
mov
test
jmp
pop
incl
fdivrp
xor
out
cmp
ret
aas
mov
jge
inc
inc
sbb
xor
cmp
mov
push
mov
sahf
xchg
sbb
add
push
out
mov
pusha
call
push
cmpsb
mov
imul
adc
ja
jp
pop
xchg
outsb
dec
lds
out
adc
cltd
repnz
cmc
cmc
mov
in
call
repz
adc
sbbl
repnz
lcall
int3
jmp
aaa
sbb
sarb
xchg
fnstsw
adc
adc
cld
pop
loope
loop
rol
scas
scas
mov
add
test
inc
aas
jae
add
insb
cmpsl
xor
jecxz
jmp
jnp
fdivrp
rcll
int
sub
push
icebp
fdivrl
in
xchg
stos
je
lods
ret
or
and
add
fs
loopne
xorl
int3
pop
sbb
inc
in
scas
insl
fs
fs
ja
dec
or
sub
xchg
movsl
scas
inc
loope
add
das
subb
cmp
sbb
movsb
shrb
xor
fldt
mov
lcall
je
add
clc
test
aaa
cmp
add
out
sarl
int3
ljmp
mov
mov
loop
cltd
js
jbe
inc
rcl
push
cmp
outsb
xchg
cmp
and
pushf
out
add
mov
addr16
ja
pop
inc
call
mov
jge
pushf
inc
sbb
xchg
pop
arpl
sub
adc
mulb
mov
jnp
xchg
fdivrs
mov
les
int3
test
add
movsl
das
data16
xchg
idivb
mov
xchg
daa
sbb
jecxz
in
push
stos
mov
sub
stc
rcrb
icebp
cmp
cmp
mov
mov
nop
push
fadds
incb
movsl
jl
jp
sbb
or
sub
inc
in
rorl
call
repnz
jbe
xchg
or
sbb
es
adc
mov
fcomi
mov
pusha
xchg
add
int
jl
pop
out
add
inc
jb
xor
imul
imul
push
push
ss
or
shlb
dec
icebp
inc
movb
push
leave
inc
ja
push
shlb
cmp
adc
and
ss
pusha
out
mov
insl
push
ds
jo
and
leavew
cwtl
mov
push
cmpsl
inc
lcall
jo
xchg
xchg
add
sahf
icebp
in
xchg
inc
sti
jle
mov
adc
mov
fcmovbe
sbb
outsb
std
bound
in
insl
lret
sub
mov
repnz
mov
daa
cs
mov
push
sbb
movsl
lock
test
aad
add
cs
daa
rcl
sub
jae
scas
xor
scas
lret
mov
jg
xor
into
xor
pop
sbb
pop
push
in
daa
sbb
outsb
fwait
sub
pop
xor
test
push
aaa
pop
push
cmp
sbb
add
or
add
loop
repz
adc
add
daa
repnz
mov
jecxz
xchg
pop
ja
addb
mov
jns
repz
adc
sbb
sub
mov
adc
push
mov
push
sub
push
or
xor
arpl
jg
cmc
push
xchg
aaa
add
mov
add
fdivrl
fnstcw
cmc
repz
pop
xor
lcallw
stos
popf
sbb
es
mov
push
inc
popf
push
dec
sub
aam
mov
dec
xor
mov
bound
sbb
or
pusha
mov
cmc
mov
xchg
jnp
mov
movsl
mov
cli
pop
mov
lods
je
adc
mov
mov
iret
or
or
out
das
adc
inc
mov
cmp
in
pop
stos
adc
insl
sub
fistps
xor
mov
jl
inc
ljmp
jne
xor
clc
sub
aam
lods
in
lods
int
je
xor
sub
lock
mov
mov
xor
xor
shl
das
push
stc
scas
stos
and
in
pop
jnp
xor
repnz
sbb
pop
push
in
hlt
lods
mov
xor
push
and
jle
test
dec
inc
cmp
fiadds
dec
fnstsw
jnp
insb
pop
gs
adc
out
lods
fs
enter
mov
dec
inc
push
outsb
sub
jbe
jnp
sub
fldcw
xor
mov
outsb
fistl
ror
mulb
int
and
lock
add
push
inc
bound
sub
sub
testb
lahf
ja
movsl
jl
in
fadd
jo
adc
shlb
sbb
mov
and
cmp
cmpxchg
andb
fmull
or
loopne
outsl
inc
pop
repz
sbb
cmp
fsubs
pushf
and
and
test
push
inc
inc
sbb
lea
fsubrs
test
add
icebp
mov
mov
outsb
icebp
loopne
repnz
into
loopw
fbstp
pusha
jne
jge
dec
or
xor
pop
mov
mov
xchg
scas
stc
adc
add
into
das
pop
adc
dec
jecxz
js
add
outsl
adc
aam
jae
and
imul
mov
dec
rorb
and
push
in
pushf
jo
and
je
jp
sbb
pop
test
dec
xchg
cmp
lds
outsl
out
mov
inc
cwtl
ret
imul
mov
daa
fnstcw
jno
mov
cmpsl
test
jecxz
and
push
mov
jnp
xor
push
mov
jo
mov
js
and
icebp
dec
mov
xchg
jno
mov
std
cld
xchg
and
cmp
mov
dec
inc
xchg
mov
jl
lock
pop
lock
add
push
ret
adc
push
enter
insl
add
mov
sub
pop
in
inc
add
daa
outsl
xor
mov
pop
scas
xor
or
stos
pop
mov
xor
lahf
arpl
lea
and
scas
xor
shll
mov
ret
sub
mov
xchg
xchg
sub
stos
es
adcb
push
mov
mov
daa
ss
xlat
aad
sbb
sbb
mov
lahf
mov
out
push
loope
popa
in
daa
mov
push
test
std
ret
pop
mov
ljmp
push
jbe
pop
popf
out
jmp
mov
stos
outsl
adc
pop
cli
and
cmp
testl
movsb
mov
adc
pop
test
sarb
push
mov
test
loopne
jge
inc
cmp
jl
int3
jno
das
fwait
mov
xchg
xor
or
outsb
sub
xor
xor
jo
lcall
in
adc
scas
dec
jecxz
inc
stos
jmp
add
daa
jne
in
mov
sbb
in
mov
jb,pn
push
stos
int3
sbb
push
xchg
and
pop
bound
lods
stos
xchg
orl
adc
jmp
inc
roll
rcrl
pusha
pop
adc
enter
leave
hlt
filds
icebp
shl
js
imul
cmp
out
sub
push
cli
insl
sub
xor
xorl
fsubl
xorl
ss
loop
inc
mov
in
adc
add
mov
jle
add
mov
test
and
repz
jbe
cmp
shlb
cmp
mov
rcll
sub
push
lock
jnp
in
xchg
daa
push
nop
stc
jae
cld
cmp
ss
sub
into
inc
out
jns
int3
mov
aad
jnp
xor
leave
cli
pop
xchg
iret
icebp
les
orl
pop
clc
hlt
mov
arpl
mov
inc
fsubs
testl
lds
je
or
xchg
test
popf
nop
lds
daa
dec
add
jae
mov
jg
lds
add
sti
sbb
fs
in
test
bound
call
cmp
or
inc
xor
sbb
pop
push
loop
xor
cmp
mov
enter
loop
roll
out
or
adc
jge
insl
loope
jle
ss
iret
aam
jp
es
mov
sbb
insb
out
into
adc
push
or
sbb
int
push
xchg
sbb
jge
add
mov
mov
fidivl
lahf
and
xor
mov
ret
jnp
push
and
stos
jne
lret
scas
or
inc
inc
pusha
repnz
aad
xchg
inc
iret
in
push
cmpsl
subb
lret
inc
lcall
and
cmp
out
inc
dec
les
lds
pop
leave
stc
inc
adc
insl
in
outsl
and
adc
into
fildll
xchg
and
inc
test
push
sbb
push
into
mov
jmp
lods
mov
out
push
je
jae
das
push
mov
imul
cwtl
ds
push
outsb
inc
fs
lahf
lret
sbb
jmp
popf
addw
das
mov
mov
cmpsl
mov
jg
push
outsl
popf
into
jmp
add
mov
addl
inc
js
mov
das
arpl
xchg
jge
pop
ret
fildll
out
cmp
dec
push
adc
xor
das
sbb
lcall
insl
mov
outsl
inc
ljmp
pop
outsb
pop
arpl
xchg
sbb
dec
jo
sbb
lods
pop
addb
push
int3
push
mov
dec
cmp
pop
sub
pop
hlt
and
hlt
mov
mov
out
xor
add
in
aad
leave
rdpmc
jnp
test
cmp
std
int
aas
stos
or
cmp
popf
jmp
daa
jae
and
pop
lods
iret
fdiv
inc
xor
fnstcw
repnz
xor
test
xor
mov
rclb
push
sub
and
mov
or
xchg
cmp
notl
fcomp
xchg
mov
subl
ficoml
es
pop
out
pop
push
add
cs
daa
add
cmc
and
xchg
cld
ds
jnp
insb
lods
jae
jns
rcll
sub
inc
int3
mov
add
mov
mov
test
push
ds
jp
sar
push
lods
add
mov
add
xor
mov
maskmovq
idivl
add
fwait
pop
dec
bound
inc
push
push
push
sbb
je
jl
inc
es
add
scas
inc
testl
cmp
sbb
and
push
andb
inc
cwtl
lret
mul
dec
jp
cmp
addr16
ds
xchg
lods
ljmp
rorl
lods
fmul
mov
stc
fsts
loope
mov
cs
mov
fstl
sbbb
ret
pushf
sarl
filds
lods
inc
loope
jne
rclb
jae
shr
in
daa
sahf
flds
adc
inc
sahf
mov
pop
scas
xor
out
adc
fidivrs
xchg
pop
jne
xor
sbb
dec
inc
in
outsl
jge
aad
frstor
jg
adc
mull
loope
mov
insl
mov
movsl
adc
mov
mov
mov
in
cmc
mov
ja
xchg
into
icebp
ret
xchg
out
ds
flds
mov
bound
dec
pusha
into
ret
jnp
push
xchg
loopne
std
adc
mov
test
ja
pop
dec
inc
inc
add
jbe
mov
pop
pop
js
pusha
faddl
mov
rorl
leave
jecxz
pop
iret
fidivl
inc
icebp
sub
pop
adc
es
repnz
imul
ljmp
pop
bswap
fs
dec
roll
dec
cld
arpl
push
jae
mov
mov
clc
dec
or
jo
stc
mov
in
ret
inc
pop
fcompl
repnz
popf
sbbl
mov
gs
mov
js
pushf
inc
cmp
mov
mov
lds
adc
pop
es
jecxz
fldcw
in
cld
xchg
fcmovnbe
push
or
mov
lret
sub
cld
adc
das
add
repnz
sbb
adc
pop
outsb
fsubs
cltd
dec
push
rclb
addb
cmp
sub
mov
gs
push
mov
movsb
loop
mov
sub
jne
sahf
dec
hlt
xor
jne
addb
cmc
sub
fsubrs
cmp
popa
pop
fistl
dec
rcll
lods
pop
fs
or
add
add
xchg
scas
cmp
shrl
lret
aam
push
cmp
push
lock
sbb
push
add
fwait
pop
fldl2t
cltd
fnstenv
jmp
and
jo
testl
xchg
add
rcr
cmc
and
xchg
popa
jmp
sub
loopne
sub
inc
mov
inc
inc
imul
out
sahf
notb
xchg
mov
cmpsb
add
les
add
ja
adc
aaa
shlb
pop
xor
xor
push
push
sbb
jno
ret
push
cmp
lock
in
lret
fisubl
in
xlat
mov
movsb
add
fimull
enter
xor
cltd
jle
and
gs
rorb
popa
pop
mov
ds
lret
loop
jbe
add
pop
and
pop
dec
mov
mov
ljmp
test
mov
inc
adc
lods
mov
das
out
jmp
pusha
xchg
gs
es
js
pop
in
hlt
jnp
adc
sub
inc
sbb
or
das
popf
jb
lock
lods
mov
shl
pop
in
xor
rolb
xchg
out
test
in
cmpsl
push
out
out
in
gs
push
mov
push
dec
sub
loop
cmpsb
push
sub
jne
push
in
enter
movsb
adc
add
ljmp
scas
mov
jl
mov
rcr
int3
ret
xchg
mov
xor
aaa
orl
int3
icebp
outsb
out
sbb
aaa
lcall
pushf
jnp
xchg
faddl
mov
pop
push
xor
push
iret
jg
enter
mov
dec
sahf
ja
jne
mov
pop
sbb
or
incb
in
xchg
xlat
fdivr
fs
and
scas
idivl
lahf
icebp
xchg
xchg
dec
dec
mov
sub
lock
bound
xchg
stos
jne
das
push
fcomp
fwait
ja
cmpsl
mov
xchg
popf
ss
fs
lret
ljmp
movsl
nop
mov
loop
cmp
inc
xchg
lcall
pop
fisttps
shl
dec
cmp
ss
sahf
icebp
int3
xor
xchg
movsb
mov
add
out
pop
pop
inc
cmp
sub
sub
or
mov
imul
arpl
stos
dec
xor
jbe
cmpsl
xor
xchg
jns
jne
xor
int
test
testl
push
je
shlb
mov
andb
sub
adc
add
adc
xor
pop
sub
add
and
adc
into
and
and
mov
mov
jne
fwait
loope
insb
lahf
in
stos
push
pushf
dec
inc
pop
hlt
xchg
add
cli
fisubs
and
jb
or
iret
jb
movzbl
mov
js
out
push
dec
lock
mov
jge
mov
jne
loopne
ds
ljmp
dec
frstor
and
and
iret
es
test
loope
xchg
jne
inc
stos
push
pushf
cmp
or
or
push
arpl
addr16
sbb
mov
mov
add
out
pusha
mov
mov
pop
inc
sub
mov
pop
not
iret
jecxz
dec
pop
adc
ds
jno
cmp
test
dec
into
xchg
ret
cmpb
in
test
scas
mov
mov
or
xchg
aaa
xor
pop
add
pop
pop
clc
dec
shl
xchg
dec
add
dec
stc
pushf
faddl
mov
add
jo
aas
movb
cmp
jne
dec
mov
mov
shlb
fs
jo
popa
insb
inc
xchg
jno
hlt
mov
lods
test
mov
sbb
mov
negb
jae
push
mov
insl
add
dec
mov
sbb
std
cli
xor
rclb
rcll
pop
pop
mov
loop
imul
or
sub
data16
adc
mov
add
in
aaa
push
jmp
dec
inc
pop
xchg
stos
push
xchg
out
add
mov
gs
and
shll
xchg
dec
test
nop
cmp
dec
mov
xchg
lcall
mov
or
aaa
adc
int
in
aaa
xchg
adc
mov
dec
aad
push
insb
and
mov
in
test
mov
divl
push
int3
sub
test
pusha
negl
movl
add
fists
xor
sub
in
mov
mov
cmp
movsl
enter
fbld
iret
mov
xor
pushf
fdivrs
mov
mov
lods
push
fimuls
jno
in
jmp
mov
out
xchg
cwtl
into
out
mov
mov
test
aas
fiaddl
cmp
xor
daa
cmp
enter
dec
mov
hlt
popa
scas
gs
jno
in
mov
ret
ficomps
xchg
push
out
jmp
mov
cmp
pushf
lock
repz
pop
dec
insl
jg
scas
jbe
push
gs
adc
adc
mov
push
and
iret
in
insb
arpl
adcl
jmp
call
test
push
outsl
mov
insb
jae
jno
push
outsb
xorl
mov
mov
inc
push
cmpsb
push
sub
pop
stos
jl
fildl
mov
push
insb
cmpsb
or
sbb
xchg
leave
cmpsb
lods
ret
aaa
dec
leave
and
outsl
mov
cwtl
invd
pop
add
test
push
cmpsl
xlat
out
ja
mov
mov
push
hlt
popa
stos
scas
cmp
iret
pop
mov
mov
jnp
cmp
and
sbb
cli
imul
loope
ss
shl
and
xchg
fnstenv
daa
inc
cs
mov
ret
into
jmp
cmpsb
lcall
lods
sbb
jl
div
call
adc
stos
sub
sahf
out
sbb
stos
stos
sub
rol
imul
or
xlat
jne
sbb
into
ds
xchg
jbe
xchg
imul
sti
fwait
inc
fwait
pop
imul
pusha
xchg
test
xor
jae
test
xchg
jbe
or
mov
mov
ret
out
imul
popf
push
pushf
and
mov
mov
mov
mov
push
pushf
scas
mov
pop
push
out
add
flds
or
sti
sbb
jp
xchg
loop
dec
jmp
int3
test
xchg
addr16
xor
aam
movsb
dec
cmp
xor
aam
incb
or
pop
pop
inc
mov
mov
scas
inc
xor
fcomp
pop
inc
mov
xchg
outsl
cld
lcall
cs
cwtl
pop
mov
adc
fmul
jae
mov
lret
add
jno
enter
xchg
jb
or
and
mov
xchg
add
aas
lret
push
adc
mov
and
cmp
xor
test
pushf
stos
push
mov
and
outsb
nop
out
or
or
adc
jle
aas
in
xchg
outsb
dec
push
mov
add
addr16
daa
scas
hlt
movsl
nop
sbb
mov
scas
popl
mov
mov
sub
mov
out
loopne
mov
dec
aas
arpl
lods
jp
jae
addr16
loope
push
xchg
push
out
push
iret
sbb
sub
mov
add
sub
sub
ud0
test
pop
sub
and
xchg
bound
mov
and
xchg
or
and
ret
pop
pop
out
push
lock
sub
or
lahf
fwait
les
sahf
xor
test
rol
dec
movsl
xchg
outsb
or
sub
jnp
or
movsl
xchg
or
aas
aaa
inc
enter
aad
hlt
shrl
push
sbb
jbe
cmpsl
xor
lods
repnz
rcr
add
fst
push
icebp
jle
movsl
pop
cmova
pop
repnz
mov
in
nop
xchg
lds
lods
out
and
shlb
add
lret
iret
pop
imul
and
inc
pop
test
inc
fmull
push
in
mov
jl
jecxz
loop
int
outsb
or
je
test
lock
cmp
and
les
jae
arpl
cmp
gs
ss
clc
iret
xor
cmp
out
mov
gs
sbb
mov
mov
push
test
out
jl
cwtl
into
les
mov
add
push
fnstsw
scas
cmpb
xchg
ds
inc
mov
pop
daa
call
jecxz
lods
imul
lock
notl
mov
sti
dec
adc
push
push
jbe
repnz
out
jnp
mov
lcall
and
adc
mov
add
stos
repnz
mov
sub
jno
push
rcll
cld
cmpxchg8b
jg
mov
jp
int3
fnclex
pop
cmpsb
das
mov
leave
aam
pop
das
jl
leave
test
and
test
jae
mov
sbb
lds
mov
fildl
push
sub
punpcklwd
stos
cwtl
cld
or
mov
dec
mov
add
pop
hlt
push
jl
and
ret
cmpsl
mov
sti
or
push
push
push
xorl
imul
loope
cmpsl
jmp
sbb
mov
scas
jle
pop
and
mov
adc
cli
jae
lods
lcall
mov
out
add
pop
dec
fsubs
imul
xor
rolb
in
ret
mov
pop
rorl
cmp
rolb
inc
mov
cmpsb
cmp
jmp
xchg
dec
fsubs
loope
inc
stos
jmp
cmp
mov
sbb
push
rolb
mov
arpl
fbld
jno
dec
xlat
ss
rcrl
iret
xlat
out
or
out
sahf
movsb
rcrb
cmp
divw
stc
add
test
arpl
mov
dec
nop
int3
sbb
mov
mov
imul
jmp
and
addr16
sub
mul
jne
jg
shr
test
and
inc
addl
int3
imull
sbb
leave
adc
mov
aaa
aas
add
fmul
jo
cmc
sbb
push
push
add
das
ljmp
cmp
pop
xlat
or
stc
mov
into
adc
sbb
adc
bound
lcall
jecxz
ret
dec
mov
mov
jbe
popa
push
dec
out
jg
test
or
loop
mov
outsb
decl
rorb
out
lds
stc
outsb
add
test
inc
clc
stc
jg
dec
mov
aas
jg
or
mov
aam
int
popf
fildll
popf
push
repnz
js
push
shll
xchg
xchg
fcoms
inc
pop
jmp
fcmovbe
data16
push
jae
jecxz
call
sbb
push
xchg
sbb
xor
lock
or
push
and
cs
fdivl
std
or
and
cwtl
xor
jne
mov
push
cmp
cmpsl
add
cmp
sbb
data16
adc
pop
inc
ror
adc
mov
xchg
mov
jp
sub
mulb
orl
aaa
or
mov
decl
cld
and
cmc
inc
int3
inc
jp
adc
sahf
data16
dec
jl
mov
inc
pushf
inc
popf
cmp
into
jp
mov
aaa
pop
xor
xchg
enter
or
lock
insl
clc
mov
je
jmp
ja
loope
mov
loopne
jno
pop
xchg
xor
push
mov
scas
dec
push
pop
xor
fidivrs
clc
out
xchg
pushf
test
insb
mov
jecxz
loope
or
insb
xchg
stos
xlat
cmpsb
les
imul
mov
xor
stos
push
add
xor
movsl
mov
and
popa
aaa
jbe
xchg
pop
mov
cvtpi2ps
clc
sub
fcoml
js
inc
incl
loopne
fdivl
test
sbb
mov
les
std
lock
cmp
pop
adc
push
test
and
loop
js
inc
addr16
inc
mov
push
mov
cmp
fdivrs
insl
push
adc
add
mov
aas
pop
pop
pop
leave
aad
sar
jae
sbb
push
mov
iret
sub
jnp
arpl
mov
sub
sbb
xchg
pop
mov
fldenv
data16
iret
je
rorb
and
mov
or
es
leave
loop
xlat
mov
sub
arpl
ret
int3
dec
iret
fidivl
jp
iret
jo
push
jnp
scas
sbb
lock
pop
les
jp
mull
dec
mov
outsl
jg
jge
jno
jnp
push
sbb
rol
adc
fsts
repz
ss
pop
xchg
push
xchg
scas
jb
add
or
pushf
mov
mov
sub
mov
je
mov
pop
mov
in
fisttpll
lock
neg
adc
lret
inc
mov
adc
mov
push
and
jbe
and
jmp
cltd
cmp
rorl
inc
fsubrs
jge
mov
push
repz
push
xchg
jg
jl
stos
add
dec
pcmpeqd
jecxz
xor
popf
adc
sub
clc
jnp
hlt
dec
jb
repnz
pushf
adc
std
xor
push
cmp
movlps
mov
sub
sbb
mov
inc
adc
inc
inc
mov
cmp
mov
and
push
popf
and
fcoms
popf
mov
in
rcrb
xor
inc
sbb
inc
cmc
in
pop
ret
imul
popf
or
mov
hlt
inc
push
add
push
fsqrt
cli
mov
popa
fwait
out
xchg
fisubs
sbb
fimuls
outsb
xor
mov
arpl
pop
sub
cld
mov
add
ret
testb
pop
pop
xchg
jns
xor
or
insl
sub
add
sahf
insl
cmp
jne
insb
fwait
out
adc
stos
test
sbb
pop
pop
mov
jo
jmp
inc
push
xchg
fwait
sub
or
push
fimuls
jbe
lock
push
xor
jnp
push
add
iret
cmp
sti
pushf
cmp
inc
push
cmp
sbb
jne
icebp
inc
and
mov
cltd
adc
jp
xchg
test
clc
pop
inc
lods
and
loopne
xchg
cmc
and
mov
ficoml
mov
lret
mov
mov
popa
or
fisubl
mov
fwait
inc
sahf
mov
or
jl
lret
leave
mov
xchg
and
mov
les
push
add
dec
test
loopne
or
pop
jl
pop
xor
jg
loopne
xor
cmp
mov
add
loope
jns
dec
push
fisubrs
cmp
add
and
jbe
stos
dec
xchg
insb
xchg
les
cmc
mov
es
clc
cs
pop
insb
insb
loop
inc
mov
ljmp
push
out
inc
scas
repz
int3
loope
lret
push
rclb
sub
in
stc
inc
fistpll
in
jae
adc
mov
add
xor
andb
pushf
ljmp
xchg
pop
rorl
xchg
enter
adc
sti
popf
jno
jo
add
add
xchg
std
je
jns
popf
out
outsl
push
xlat
push
roll
add
xor
xor
xchg
mov
pop
dec
fisttpl
div
pop
lret
icebp
dec
sub
jle
cli
sbb
xchg
popf
xchg
popa
out
xor
test
mov
xor
sub
xor
xchg
les
cmp
pop
repnz
ljmp
subl
mov
jbe
dec
xchg
pop
mov
push
inc
mov
loope
xchg
insl
dec
xchg
loop
dec
add
cmc
cld
inc
bswap
inc
mov
cltd
mov
pop
insb
negb
mov
mov
adc
mov
aam
dec
outsb
in
cmp
jmp
jnp
sub
adc
lret
pop
and
fcomps
das
dec
ret
hlt
push
lods
jg
push
movsl
jne
pop
pop
ret
dec
lahf
xchg
cld
pop
pop
and
mov
idivl
loop
ja
ja
mov
jp
out
and
inc
xchg
add
ljmp
cmpb
mov
lock
mov
popf
cli
lret
dec
dec
mov
add
in
mov
int
and
loopne
cmpsl
aad
xchg
scas
iret
push
popa
shr
dec
leave
dec
jge
and
mov
xor
gs
add
sub
lods
lods
data16
jne
insb
adc
stos
add
dec
add
sbb
mov
mov
repz
mov
in
dec
pusha
cld
sbb
idivl
or
mov
fidivl
push
jmp
rcl
jae
cmp
adc
push
clc
ja
imul
jl
sub
loop
cli
aad
pop
pop
popa
sub
aas
sbb
xchg
int
mov
sbb
rclb
mov
xor
push
dec
or
cld
mov
stc
jnp
outsb
pop
adc
aas
popf
stc
xchg
add
negl
jl
xchg
into
insl
sub
jp,pn
xchg
in
push
push
ds
jg
cli
ljmp
imul
enter
test
mov
repnz
sub
outsl
lea
movsb
movsl
jle
bound
jae
inc
arpl
dec
cmp
jo
jbe
nop
jae
lahf
sub
xchg
pusha
cmp
sbb
rcrl
mov
iret
pop
mov
fmul
and
insl
xor
mov
pushw
dec
iret
xchg
in
leave
jmp
add
push
sbb
loope
mov
pop
push
fcomps
lods
stos
in
cwtl
dec
bound
mov
mov
xchg
push
push
aam
sub
inc
insb
pop
jae
add
outsl
outsb
adc
mov
pop
fldl
inc
fldt
in
xchg
mov
dec
aaa
fucom
fcmovbe
call
sbb
ret
icebp
pop
jae
pop
inc
xchg
stc
iret
fstpt
jo
push
cmpl
lret
and
aam
xchg
sub
outsb
inc
out
lcall
addps
mov
cmp
jmp
mov
push
pop
aam
pop
cmp
sahf
adc
lret
pop
lcall
ret
adc
daa
cmp
and
je
aaa
or
cmpsl
jmp
pop
add
mov
add
or
in
add
sub
sub
dec
or
pop
and
cld
iret
xchg
ret
push
in
mov
xchg
js
ljmp
and
out
mov
pop
pop
repnz
arpl
icebp
ljmp
leave
mov
sub
push
sbb
fidivrl
je
lods
mov
pop
mov
cmp
inc
in
sbb
mov
daa
cmp
test
lock
daa
out
lods
sub
jae
pusha
adc
das
jg
dec
ss
xchg
mov
mov
adc
pushl
ja
add
aas
jnp
pushf
pop
aad
lcall
or
cmp
and
fstpl
dec
xchg
ds
mov
ror
inc
adc
sbb
icebp
jmp
fsubp
lahf
and
cmc
push
lret
mov
push
xor
mov
addr16
shrl
mov
stc
mov
mov
xchg
prefetch
sbb
mov
shrb
push
mov
xor
outsb
lcall
xor
jecxz
jg
cmp
ret
mov
ret
xchg
push
jle
and
sahf
or
push
sahf
mov
fmull
data16
cltd
add
pop
shll
int3
mov
imul
and
nop
ds
mov
inc
pop
pop
xchg
pop
pop
iret
data16
push
sub
lods
mov
shll
fimull
pop
push
je
hlt
push
ss
es
clc
dec
inc
push
mov
es
xchg
mov
jns,pt
pushf
pusha
mov
test
push
mov
call
cltd
adc
xlat
push
xor
mov
xchg
ret
int
mov
out
into
addr16
jg
stc
movsl
jl
scas
push
lret
and
sbb
call
aad
mov
daa
ficoms
dec
shl
cmp
or
les
test
js
cmpl
pushfw
gs
fidivrl
inc
cmp
push
pop
push
dec
in
aaa
jne
scas
xchg
popl
cltd
sub
pop
dec
outsl
mov
mov
adcb
add
and
pop
dec
jae
sbb
mov
addl
pop
aam
fcoml
push
mov
jmp
inc
sub
insb
push
xchg
outsb
add
ret
cmpsb
pavgb
stos
or
sbb
push
and
js
or
shlb
stos
fists
jno
push
jle
fwait
xchg
icebp
addr16
pop
mov
pop
dec
mov
dec
cmpsb
mov
xchg
imul
cmp
inc
pop
xchg
jmp
or
xor
pop
sahf
mov
aas
daa
in
adc
inc
imul
fcomps
or
jmp
push
cmpsb
cmp
popa
adc
stc
lea
in
jne
insb
add
xchg
sarb
jae
xchg
std
inc
or
mov
enter
gs
inc
addb
orl
ret
push
out
pop
lret
sahf
scas
xor
test
popa
subl
test
insl
pop
inc
lahf
repnz
ror
push
add
xchg
push
scas
idivl
xor
sarb
mov
xlat
scas
icebp
cmp
dec
and
out
adc
or
push
ds
insl
fldln2
mov
movsl
bound
xchg
push
and
dec
dec
mov
push
mov
xor
ljmp
pop
mov
aam
and
dec
imul
pop
mov
mov
or
lahf
or
nop
fs
insb
push
dec
lods
gs
insb
loopne
cmp
fsubl
mov
mov
test
xchg
outsb
sbb
xor
rcll
pop
into
sbbb
pop
jecxz
push
push
mov
fisubl
adc
in
add
mov
add
pop
jb
sahf
inc
and
nop
jne
mov
cmp
lret
cld
dec
mov
and
cmp
sbb
inc
leave
lret
test
dec
and
add
je
pop
popf
sbb
cltd
pop
repz
imul
mov
xchg
inc
fcmovu
hlt
fidivs
xchg
rcrl
hlt
jne
les
adc
push
inc
push
adc
jmp
addr16
xchg
xor
sub
ja
add
daa
inc
xchg
sub
or
test
mov
cmp
fs
cltd
mov
cmpsb
jp
jg
inc
fwait
xor
xor
jno
or
out
adc
mov
mov
or
mov
aam
mov
movsl
mov
outsl
loope
and
and
xchg
jle
sbb
xchg
loope
imul
rcr
fmull
test
mov
mov
inc
nop
pop
and
push
mov
dec
adc
loop
in
cmpsb
push
push
clc
test
shrl
data16
pop
jo
outsl
pop
cmp
shll
adc
rclb
scas
frstor
arpl
shrb
lret
and
outsb
xor
sub
mov
pushl
push
pop
pop
leave
test
cmp
xchg
add
add
adc
mov
xchg
test
adc
pop
lcall
lods
nop
adc
lea
data16
jbe
test
pop
pop
sarb
pop
or
arpl
movsl
mov
mull
fnstenv
add
es
mov
sub
and
jnp
cmpsl
call
jmp
movb
ds
push
lahf
sub
pop
cmc
test
int3
mov
pop
and
cltd
insb
xor
inc
jne
mov
inc
and
jp
cs
es
imul
in
mov
push
decb
pop
dec
xor
sub
outsl
test
fidivl
aas
aam
jns
call
sbb
inc
xor
dec
cmpsb
stos
mov
cmp
or
in
in
loop
aad
pusha
inc
add
shll
inc
fwait
mov
iret
in
sub
lcall
arpl
pusha
jg
js
push
outsb
ss
cmp
rclb
lret
add
jae
xchg
fnstenv
sub
nop
sbb
jmp
sahf
jmp
mov
sub
mov
push
or
dec
mov
dec
stos
bswap
cmp
xor
fs
and
sar
loope
into
sti
fcomip
sbbb
xchg
mov
inc
sub
dec
dec
xchg
pop
pop
mov
rolb
lea
sahf
dec
mov
pop
mov
daa
pop
ds
sub
lret
pop
xchg
imul
pop
mov
xor
jg
push
mov
dec
outsb
push
dec
jmp
push
lds
imul
test
sub
sub
or
mov
xor
in
je
sbbb
pop
negb
test
cmc
hlt
xor
jno
mov
and
push
test
loope
sarb
cmc
pusha
repz
lret
mov
lods
mov
cmp
leave
mov
rorb
in
mov
es
xchg
push
icebp
shr
movsl
and
ss
int3
jo
test
mov
roll
cwtl
ja
divl
push
movsl
fcomps
out
pop
inc
push
cmp
dec
mov
fcomps
repz
in
mov
add
mov
and
mov
jns
mov
bound
sbb
test
add
inc
bnd
ret
xor
inc
imul
mov
add
mov
push
pop
inc
pop
pushf
pop
test
jmp
lods
mov
arpl
cmpsb
xor
scas
addr16
pop
adc
stos
or
lcall
shrb
andb
sbb
stc
inc
aaa
lods
adc
inc
push
pushf
rolb
int3
roll
pop
jns
mov
div
jmp
test
xchg
loopne
mov
cmc
movsl
mov
aam
out
nop
enter
iret
jp
push
outsb
mov
das
gs
adc
and
clc
inc
cld
xor
adc
test
cltd
sbb
insl
sbb
cmp
aas
push
das
xor
aas
je
or
divb
jg
add
mov
sub
rorb
inc
jo
cmp
add
sub
test
jnp
push
inc
jg
dec
sub
push
movsb
cli
scas
aad
cld
xor
pop
sbbb
lret
mov
add
jbe
cmp
test
ret
loopne
jecxz
shll
js
dec
fs
fistpl
and
add
imul
xor
sahf
mov
fldenv
jmp
mov
fcmovnbe
rclb
dec
stc
arpl
outsb
mov
adc
outsb
ret
jl
imul
mov
enter
xor
xchg
movsb
dec
mov
je
les
cmc
sub
xor
pop
pop
cmp
imul
ja
mov
add
mov
in
idivl
movsl
test
ss
xchg
sbb
lcall
xchg
lahf
pop
and
push
in
shlb
mov
mov
or
callw
jmp
je,pn
xchg
mov
fcomp
dec
insl
mov
loopne
push
fcmovbe
mov
push
stos
push
inc
mov
test
jbe
stc
xchg
repz
daa
popf
sub
xlat
jne
test
int3
jecxz
mov
cmp
aam
stc
and
push
and
lds
adc
mov
test
into
sarb
andl
lahf
mov
mov
cmp
clc
loopne
dec
iret
pushw
addr16
lret
jp
cli
lcall
pop
leave
lds
std
aas
cwtl
push
fwait
xor
stos
inc
in
out
popa
dec
mov
mov
imulb
xor
gs
sbb
and
and
das
lret
ds
negb
or
cmp
push
loope
fisttps
mov
push
mov
sbb
popfw
or
mov
xor
cmp
loopne
push
out
pop
mov
insb
in
cltd
pop
mov
pop
fistpl
dec
frstor
in
sub
rcrb
dec
popa
mov
add
sbb
pop
repnz
test
xor
lods
jns
dec
inc
sarl
test
xor
jbe
lods
in
and
into
mov
movsb
mov
mov
sbb
push
mov
rol
sti
test
inc
mov
dec
xchg
dec
outsl
ret
mov
out
fldenv
and
jae
js
cmp
pop
xchg
mov
test
or
pusha
push
dec
xchg
cbtw
mov
icebp
cmc
push
frstor
cld
mov
xchg
fwait
mov
sub
popa
xchg
int3
push
mov
sub
mov
out
adc
shll
adc
xlat
test
push
sar
pop
scas
inc
jp
xchg
in
pop
insb
or
push
pop
and
xor
xor
or
add
repnz
dec
test
mov
xchg
push
pop
repnz
shrb
loopne
bswap
std
mov
outsb
data16
imull
cwtl
and
sub
jmp
outsl
push
and
and
mov
jb
mov
or
pop
mov
mov
mov
lahf
test
adc
dec
fbld
jp
clc
push
mov
push
stos
sti
jo
je
sub
dec
xchg
jg
and
xor
jmp
jbe
sti
cld
ljmp
dec
stc
xchg
sub
daa
dec
pop
jp
adc
out
cli
out
int3
sahf
ljmp
add
jb
cld
jp
aaa
out
arpl
pop
shr
mov
aam
lret
es
cld
icebp
adc
imul
rcr
outsb
sub
pop
into
mov
rorl
iret
adc
testl
inc
pop
sub
push
mov
leave
mov
lcall
inc
pop
sbb
mov
jnp
stos
stc
insl
or
inc
scas
sbb
inc
push
xor
add
gs
sarb
jmp
pop
push
ja
sarl
and
and
pop
mov
cmpsl
vpcomub
cld
lahf
dec
add
loopne
jnp
xchg
push
loop
mov
push
pop
xor
jl
in
push
pop
dec
mov
mov
adc
jb
xchg
and
in
or
out
call
jb
inc
sub
jmp
das
mov
adc
lock
dec
iret
icebp
mov
pop
mov
or
jecxz
sbb
gs
pop
mov
in
ljmp
inc
sti
mov
sbb
das
out
xchg
add
sub
sbb
rolb
popf
lods
cmp
push
in
pop
lods
aas
inc
mov
xchg
js
addr16
mov
cmpsb
pop
out
sub
mov
pop
cld
call
xchg
popf
pop
jno
pop
lods
dec
or
in
lret
fnstenv
xchg
mov
push
mov
push
cwtl
sub
aam
scas
insb
mov
hlt
stos
adc
test
adc
lea
push
xor
aam
pop
movsl
cmc
and
loope
clc
pop
or
xor
dec
shll
movsb
add
cmpsl
imul
pop
or
mov
sahf
pop
in
push
inc
mov
pop
jb
push
sbb
fidivl
jae
orl
std
rorl
cmc
pop
loope
push
dec
shrb
mov
sahf
iret
adc
add
mov
subb
xor
sub
sbb
pop
and
adc
xor
xchg
push
rclb
dec
adc
out
or
add
ret
pop
and
sub
imul
repz
outsb
fnstenv
test
negb
pop
stos
out
push
pop
lahf
mov
inc
sub
in
cltd
hlt
cmp
sub
stos
int3
xchg
jl
adcl
inc
add
stc
shld
xor
ss
movsb
sbb
test
call
xlat
loopne
lret
push
call
pop
inc
iret
sbb
cltd
fsubrl
jae
lock
lret
cmp
std
mov
lock
fbstp
js
icebp
es
fistpll
pusha
test
in
out
sub
adc
and
arpl
or
clc
les
or
mov
outsl
mov
xor
xorb
mov
dec
push
aas
insb
shrl
sub
mov
jb
cwtl
sub
fnsave
fidivl
incb
pop
mov
xchg
addl
mov
jg
or
sub
push
aas
or
xor
cmp
aaa
jl
mov
fs
sbb
repz
popa
call
out
es
push
fldt
loop
repz
mov
sarb
ja
loope
sub
cltd
push
filds
xchg
enter
pop
inc
inc
pop
fnstsw
rclb
inc
xor
sbb
popa
pop
test
gs
outsl
scas
mov
das
inc
cld
insb
xchg
mov
xor
idiv
cs
scas
cmp
adc
out
inc
push
mov
mov
adc
lods
fs
dec
push
dec
fcmovbe
push
mov
sarb
shlb
sbb
jl
call
jl
jb
pop
adc
in
fnstcw
sbb
mov
aad
xchg
sub
scas
pop
cli
lret
jo
cmpsb
mov
or
push
xor
inc
jp
jecxz
sbb
or
jnp
enter
cmp
out
fwait
add
loop
repz
loopne
scas
imul
fs
cmc
outsb
fldt
repnz
add
pusha
or
lahf
and
add
and
lods
push
or
xor
lods
repz
mov
lret
add
out
inc
xchg
push
fcmovbe
pop
inc
rcrb
dec
imul
bound
xchg
pop
jp
mov
dec
and
inc
pusha
fnstcw
int
dec
cli
shll
shr
sbb
push
sahf
mov
xor
std
arpl
enter
and
cli
jns
ret
test
push
push
ret
in
or
cmp
adc
jle
xorl
inc
subl
inc
sarb
or
loopne
shr
jge
mov
pop
repz
cmp
push
adc
std
lcall
xor
sub
add
es
jecxz
iret
fs
sub
enter
stos
dec
scas
subl
dec
pop
and
cmp
xchg
daa
push
and
movsl
mov
xchg
pop
and
push
push
mov
aas
aas
push
lods
inc
in
repz
out
jno
and
pop
sbb
sub
stos
mov
push
jge
dec
out
jle
cmc
mov
dec
and
call
jmp
call
inc
sbb
mov
outsl
popaw
dec
jl
jne
int
adc
sub
nop
xor
clc
mov
shll
sarb
add
mov
jb
add
stos
jl
fstpl
pop
or
mov
jne
cmp
lea
mov
scas
sbb
lock
test
or
in
xor
sbb
lret
mov
sub
adc
cmp
mov
aaa
inc
push
pop
std
push
cmpsl
popa
mov
sub
jnp
cmp
fs
and
push
enter
dec
mov
std
lahf
xlat
inc
dec
xchg
mov
lock
jle
cmp
sahf
push
cmpsb
cld
jg
sub
in
ss
jg
and
xor
ds
jecxz
sub
push
pop
fisubs
jne
xchg
loopne
pop
hlt
mov
in
ror
mov
add
test
push
pop
push
cld
call
pop
pop
push
fdivrs
sub
in
adc
inc
sahf
cld
jp
pop
leave
insl
add
rdmsr
sub
idivl
mov
js
pop
std
popa
add
pushf
and
adc
addr16
and
xchg
data16
movsb
rclb
xchg
mov
adc
adc
push
mov
and
pusha
xorb
sub
push
or
push
fs
and
call
xchg
fwait
popf
shlb
inc
iret
popa
movsb
pop
push
and
test
pop
iret
mov
fimull
xchg
adc
ds
std
lds
mov
push
lcall
mov
push
push
das
mov
cld
push
xlat
adc
inc
in
in
xor
mov
jecxz
out
aad
aas
movsb
sti
je
and
mov
mov
and
mov
leave
ret
sub
and
mov
inc
xchg
add
xchg
rorb
je
insb
ljmp
adc
sbb
push
fidivl
push
lahf
mov
test
push
out
les
mov
or
jg
das
popf
sub
imul
mov
sub
out
arpl
aas
push
cmpsb
xor
sahf
mov
sbb
xor
and
in
stos
sub
je
pop
push
xor
imul
push
neg
mov
pop
gs
mov
out
xor
mov
jns
mov
inc
sbb
pop
sti
or
outsl
sbb
adc
std
fcompl
out
sar
cmpsl
dec
push
bound
sahf
cmp
push
enter
xchg
add
pop
cmpsb
stos
sbb
mov
dec
jp
insl
lret
aam
push
push
int3
xchg
or
push
sahf
inc
cmc
mov
aad
mov
fidivrs
push
push
movsb
adc
xor
and
out
inc
adc
push
and
loop
imul
pop
xor
mov
adc
add
push
sbb
mov
add
mov
and
jmp
inc
mov
lods
aaa
jmp
test
into
mov
xchg
stos
mov
js
out
jbe
movsl
pop
jnp
not
popa
cmp
scas
aas
test
or
sbb
je
cli
mov
les
mov
lret
stos
inc
mov
repnz
test
jns
push
add
dec
cmp
add
dec
subb
mov
test
test
gs
in
pop
inc
cmpsb
pop
adc
and
nop
imul
loopne
shlb
xor
push
add
pop
xor
outsl
rcrb
insl
inc
test
outsb
cmp
in
cmp
fnstenv
push
test
test
bound
xlat
lahf
push
cmc
loope
add
lods
add
movsl
jbe
xor
cwtl
push
cwtl
into
cmp
add
pusha
xchg
push
pop
in
mov
adc
add
fnstcw
xor
sbbb
rcr
fists
repnz
dec
cmp
popa
mov
shlb
ss
divl
push
dec
into
sub
stos
mov
jle
inc
sbb
or
adc
xor
push
scas
jle
or
mov
sbb
pushf
lock
stc
lods
mov
decb
push
dec
test
cmc
pop
out
cmpsl
mov
loope
fcomps
mov
imul
and
lds
sbb
push
pop
mov
into
push
aad
and
and
cmp
lods
xor
mov
dec
rolb
push
add
hlt
rorb
add
dec
pop
adc
dec
lahf
mov
cmpb
or
push
arpl
test
ja
xchg
lahf
lret
push
inc
leave
outsb
sbb
outsl
in
aam
imul
mov
in
loope
jno
in
mov
push
or
cmp
loopne
sbb
mov
push
in
gs
inc
cs
cmpsl
out
push
js
and
jl
out
cmp
dec
stos
lods
mov
dec
inc
orb
add
push
add
insb
popa
jmp
lret
mov
mov
jmp
jp
movsl
pop
loope
jecxz
and
and
push
fsubs
xor
mov
and
mov
mov
cltd
adc
xchg
jnp
jg
push
movsb
leave
std
pop
xor
and
jmp
mov
call
outsl
jg
jge
test
ja
fsub
push
xchg
inc
les
cmpsl
shr
jbe
mov
and
and
pusha
jg
mov
shrl
cmp
mov
pop
add
inc
in
fnsave
xchg
pop
sti
push
loope
pop
or
ljmp
xchg
imul
addl
je
enter
dec
add
ficoml
sub
enter
fcoml
jne
inc
add
insl
sbb
mov
sub
insb
movl
sub
pop
xchg
lret
movsb
xchg
sti
pop
pop
lea
lea
pop
scas
sbb
es
and
aaa
aam
mov
movsb
xchg
js
adc
daa
push
jmp
cmp
cs
mov
dec
mov
mov
mov
fwait
sti
adc
js
ret
mov
dec
xchg
movsl
mov
xchg
sub
shrb
lods
xorb
mov
cmp
jno
jnp
int3
add
and
fidivrl
jbe
xor
mov
sub
mov
mov
push
ss
and
aam
xchg
mov
push
out
jno
pop
add
cmp
popa
stos
jecxz
out
out
xchg
mov
mov
xor
jbe
xchg
xorl
lock
andb
adc
pop
test
movsl
push
jmp
push
mov
sub
dec
lods
sbb
aaa
inc
jmp
push
mov
jmp
lret
cmp
sbb
inc
out
aas
pop
sbb
mov
lock
xchg
mulb
push
fbstp
movsl
je
cmc
push
xchg
pop
mov
dec
popf
mov
jnp
aad
lcall
test
inc
int3
push
sarb
pop
jne
in
cs
cmp
sbb
incl
aas
mov
cmp
dec
test
jne
xlat
loop
mov
mov
mov
enter
inc
fadd
xor
jmp
mov
fwait
dec
addr16
mov
loop
shl
aam
cmp
mov
lds
jnp
repnz
pop
sub
sbb
popf
subl
sahf
ljmp
into
aaa
in
sub
xchg
stos
mov
mov
stc
into
je
mov
fnsave
pop
cmpsb
jnp
jecxz
repnz
sti
testl
cmc
fwait
add
mov
mov
adcl
push
push
aaa
dec
test
es
ret
jb
dec
push
out
inc
xchg
aaa
je
pop
adc
xchg
ja
cmp
outsb
sub
push
das
or
inc
dec
je
mov
or
mov
pop
mov
movsb
mov
sub
or
inc
cld
stos
icebp
jne
iret
dec
popa
xchg
cld
adcb
popf
mov
inc
xchg
jmp
xor
xorl
sbb
dec
xchg
cmp
xchg
xchg
lret
fisubl
dec
xchg
and
mov
jb
inc
xchg
fs
or
shll
push
sbb
push
sbb
sti
inc
stc
cltd
adc
fiaddl
sbb
cmp
cmpsl
add
jb
fwait
in
cli
or
jp
and
fmull
movsb
add
xorl
inc
sub
pop
arpl
or
inc
pushf
push
fdivr
dec
lret
pop
repz
jge
shrb
scas
push
xor
mov
push
adc
xor
xchg
jae
inc
jmp
lcall
dec
sub
mov
dec
pop
mov
push
dec
loop
imul
pop
mov
jg
lods
xor
sbb
loopne
mov
out
cltd
fmull
bound
cld
jne
pop
sub
sub
jp
mov
insb
dec
cwtl
jmp
int
sbb
mull
cld
test
fidivs
add
js
cwtl
sarl
out
mov
adc
xchg
nop
aad
mov
and
dec
out
fwait
fs
es
adc
or
aas
mov
push
xor
mov
add
push
movups
mov
cmp
mov
inc
hlt
xchg
sub
pop
inc
add
inc
xor
fmulp
cmp
pop
sti
sub
data16
pop
aam
jb
dec
sbb
imul
ret
in
scas
rolb
dec
test
jno
pop
test
or
mov
cmp
mov
mov
or
rorl
mov
inc
js
out
out
add
mov
pop
jns
and
mov
loopne
pop
mov
iret
addb
cltd
jl
xlat
lods
add
xor
mov
and
movsb
out
push
pop
stos
jns
mov
adc
rol
and
pop
mov
sahf
jmp
fsubs
xor
addr16
cmp
fisttpl
mov
mov
and
xor
mov
lcall
sub
push
and
out
test
inc
xor
dec
stos
sub
mov
outsl
stos
cmp
inc
nop
imul
or
adc
fdivs
pop
fsubrp
aam
mov
or
sbb
sahf
lcall
mov
inc
lds
push
dec
inc
imul
push
call
cwtl
pop
lret
notl
adc
dec
out
mov
fbld
enter
rorb
push
cmp
gs
movsb
rclb
pop
jp
inc
adc
lret
jecxz
fcoms
xchg
inc
push
in
sub
push
push
lods
jecxz
popa
pop
jno
add
pop
aaa
ljmp
push
stos
and
popf
jecxz
ja
mov
mov
inc
fcoml
test
pop
repnz
test
jno
jge
push
aam
xchg
pop
aam
sub
popf
or
inc
jb
jg
or
lret
outsb
test
jle
cmpsl
xor
in
stc
imul
bound
or
pop
xchg
adc
push
insl
int
int3
or
orl
mov
and
faddl
cmp
lret
mov
push
dec
cmp
or
sbb
mulb
inc
inc
and
xchg
mov
add
mov
das
dec
mov
add
leave
repnz
subps
call
mov
aas
lds
push
add
bound
lds
outsl
repz
mov
or
jle
icebp
jbe
mov
dec
sub
mov
sbb
cmpsl
or
adc
mov
push
addr16
test
pop
in
jmp
pop
jg
leave
dec
cwtl
lret
inc
jae
outsb
and
add
mov
inc
dec
mov
fistl
adc
shll
lock
fiadds
mov
bound
das
test
jmp
xor
rcr
je
test
pop
call
maxps
outsl
dec
sbb
push
dec
test
push
in
pusha
icebp
loop
lret
sub
imul
add
jle
and
cs
shrb
pop
les
dec
push
xor
setb
aaa
test
sub
sub
subb
xchg
cmp
mov
add
ljmp
adcb
or
loop
mov
jae
jo
cmp
push
xor
out
pop
push
xchg
outsb
fsub
adc
mov
movsl
loop
insb
fidivs
minps
stos
sub
xchg
cmp
cltd
mov
mov
add
jns
into
push
mov
inc
pop
add
lods
cmc
cmp
mov
aam
push
hlt
outsb
pusha
insl
sbb
pop
xchg
addr16
insb
lahf
roll
ret
cmp
push
sbbl
lds
and
mov
mov
cs
ds
cmp
mov
sbbb
xor
sbb
cld
mov
fstps
mov
in
xor
inc
cld
shrb
cmpsb
jecxz
mov
repnz
or
stos
xchg
int3
in
jo
lods
and
dec
pop
sub
add
jmp
mov
inc
xchg
int3
jae
ret
stos
test
mov
xlat
leave
lcall
jno
mov
lods
repz
rorl
and
dec
cmpsb
out
adc
pop
scas
lahf
lods
add
loope
lret
mov
mov
dec
das
arpl
out
add
sbb
fcoml
je
rcll
xor
jecxz
rcll
mov
push
ja
hlt
loopne
jp
xchg
outsb
inc
add
jo
mov
cmp
sub
dec
sub
push
sti
fstl
sub
arpl
jl
das
jo
xor
out
loopne
pop
ljmp
mov
xor
sti
testl
xor
aad
icebp
inc
cld
mov
inc
jno
fdivs
sbb
cmpb
mov
or
jno
addr16
cli
inc
lahf
dec
mov
mov
loop
mov
and
add
and
lahf
enter
cmp
add
adc
mov
cwtl
mov
aaa
push
loope
push
js
movsb
or
das
cmp
xchg
add
add
stos
xchg
and
pop
cmpsb
stos
loopne
add
sub
lea
inc
adc
adc
push
jecxz
sub
sbb
orl
jle
aam
xchg
pop
mov
daa
popf
add
dec
adc
mull
fcmovnb
mov
xchg
and
inc
and
xor
sub
out
jno
xchg
pop
iret
das
fistpll
xchg
cmp
mov
out
jns
inc
pop
roll
hlt
cmp
push
or
ret
fs
cli
jnp
mov
aaa
xor
icebp
push
sbb
ja
dec
adcb
iret
inc
loop
je
xchg
mov
fstpl
mov
mov
nop
pop
fisubrs
mov
mov
repnz
and
mov
sbb
cmp
icebp
insb
jge
mov
das
mov
es
shll
and
mov
mov
movsb
movsl
stos
inc
call
stos
mov
push
dec
jne
ds
add
cmc
inc
xchg
inc
clc
mov
test
sti
in
fimull
xchg
stos
insb
sub
loope
out
testl
jne
repnz
jg
push
xchg
jecxz
adc
in
pop
jp
sahf
mov
jno
adc
xchg
dec
test
loopne
inc
add
sbb
nop
pop
jo
pop
push
cmp
std
mov
add
fwait
out
lcall
mov
and
nop
hlt
cltd
add
or
mov
push
xchg
xor
push
add
test
in
shlb
xor
sbb
negb
jo
ret
stc
jmp
push
out
ret
dec
pushf
repz
xchg
lea
enter
popa
push
mov
cmp
or
jmp
mov
xorb
data16
addr16
fs
imul
fdivrl
repnz
clc
push
icebp
mov
pop
xchg
xchg
pop
xchg
pop
cmp
mov
xor
adc
mov
and
outsb
loope
popf
sbb
pop
sub
xor
xchg
mov
lret
jb
sub
dec
mov
pop
or
out
and
sub
in
and
add
or
pop
in
jle
ud0
or
mov
out
in
outsl
mov
int
jne
nop
popf
and
mov
cmp
pop
jbe
mov
mov
add
push
test
jl
movsb
pop
adc
ret
cmp
add
pop
xchg
jge
pop
jle
in
incb
std
pusha
jmp
int
xchg
pop
clc
mov
stos
out
mov
pop
push
adc
mov
push
or
mov
je
xor
sbb
lds
ss
jmp
or
push
std
das
stos
jnp
rcrb
pop
cmp
jnp
adc
xchg
mov
shl
loop
lds
in
push
je
rorl
gs
xchg
xor
cmp
repz
push
mov
sub
jb
fildl
mov
loope
arpl
cmpsb
pop
jmp
push
adcl
xchg
push
pop
dec
in
ds
pop
fisttpl
roll
sti
test
mov
pop
int
push
ljmp
cmp
adc
add
out
mov
pop
shll
push
jne
nop
in
xor
cmp
mov
mov
adc
add
xchg
mov
aad
enter
add
xchg
arpl
and
add
xchg
leave
and
inc
pop
loop
inc
mov
sbb
arpl
push
sbb
mov
add
popa
shll
sahf
push
jmp
sub
push
mov
add
in
push
pop
xor
jae
faddl
fiaddl
je
jno
insl
pop
test
jae
cli
das
mov
pop
jo
jno
je
iret
lock
fists
adc
xchg
cli
aam
mov
mov
leave
out
hlt
push
pusha
xor
bound
loop
les
cs
leave
xor
jb
pop
hlt
sbb
je
xchg
shlb
aas
stos
cltd
jbe
dec
neg
push
xchg
je
loop
push
call
insb
cmpsl
int3
xchg
adc
insl
cwtl
les
icebp
jp
pop
jle
in
rclb
fcoml
rcl
push
rorl
aas
repnz
cld
aam
jle
sbb
jne
mov
cmc
cmovo
mov
add
xchg
add
pop
dec
jecxz
inc
gs
fdiv
jns
outsb
cmpsb
icebp
cmp
fmuls
and
pushw
int3
pop
test
push
mov
loope
xlat
ds
xor
pop
cwtl
das
mov
adc
test
ret
and
icebp
mov
ret
jmp
shl
out
inc
mov
adc
es
jne
into
jg
sub
and
lock
in
sbb
add
dec
add
in
stos
test
ds
sub
cmp
push
pop
movsb
xchg
ds
je
test
shlb
push
das
or
mov
in
lock
sbb
mov
add
cmp
shll
mov
stos
aas
inc
push
jnp
data16
cwtl
mov
mov
fsts
movsl
dec
outsl
js
test
xor
js
shrl
mov
push
cmp
xor
sarb
pop
pop
cmp
js
lcall
sbb
mov
je
pop
icebp
or
stos
lods
mov
sti
mov
add
cmp
mov
jbe
iret
xchg
int3
dec
fisttpll
cld
pop
jne
dec
mov
jne
inc
subl
out
jmp
insb
aam
cwtl
mov
cwtl
movsb
mov
mov
jbe
rcll
mov
mov
xor
add
popa
das
xor
inc
jno
sub
sub
jne
imul
sbb
fbstp
inc
and
mov
sbbb
movsl
es
outsl
and
xchg
cmc
jmp
jnp
jne
cmpb
and
jmp
xchg
mov
mov
mov
clc
rolb
or
jae
pop
xchg
fs
cld
mov
hlt
xchg
jno
add
mov
lahf
gs
jns
or
and
adc
call
insb
fildl
dec
pop
icebp
cmp
pop
inc
pop
movsb
into
stos
add
mov
xchg
mov
cmpsb
mov
out
sub
add
call
inc
or
xchg
js
dec
push
push
cmpsb
cmp
cmp
xchg
ret
dec
mov
clc
mov
into
icebp
sub
clc
popa
call
mov
in
lock
inc
aam
hlt
cli
test
repnz
test
jecxz
mov
repnz
mov
inc
int3
cmpsb
test
pop
int3
sub
mov
jmp
jb
sub
xor
dec
cmc
icebp
scas
lods
jb
les
cmp
movsb
mov
jg
jb
or
aam
cmpsl
sub
adc
or
cmp
fisttpll
push
dec
dec
pop
dec
aad
jecxz
pop
xlat
stc
add
pop
adc
out
in
jmp
mov
adc
push
mov
mov
cmc
adc
scas
inc
iret
fsubs
aas
xlat
add
sub
test
in
jl
gs
movsb
xchg
mov
insl
inc
inc
and
test
test
insl
sbb
pop
ss
or
sti
cmp
push
mov
aam
add
bound
repz
xor
sbb
push
es
outsl
inc
mov
xor
loopne
lods
cmp
movsl
cld
das
dec
gs
and
das
jp
inc
clc
inc
inc
cmp
dec
outsl
adcl
mov
fiaddl
je
fistpl
loopne
shlb
mov
mov
xchg
nop
mov
sub
stos
fs
mov
les
or
aad
loopne
sub
jle
cmp
loope
push
jno
in
lret
int
or
xchg
mov
cwtl
fndisi(8087
sahf
dec
pop
or
mov
jb,pt
lods
lock
adc
push
rol
lret
loopne
paddq
push
insb
push
repz
xchg
jns
aad
aam
popf
call
outsb
add
xor
jo
adc
jecxz
sbb
insl
stos
adcl
insb
mov
inc
dec
inc
pop
dec
orl
pop
daa
cmc
push
fucomi
outsl
test
inc
imull
add
cmp
aam
inc
ljmp
cmp
mov
js
push
xchg
lea
addr16
jecxz
jle
pop
and
stos
xchg
sub
xchg
and
stos
mov
jno
pop
dec
pop
scas
inc
cmpsl
and
cmpsl
ss
fadds
dec
fnstcw
fisttpl
push
or
lods
pop
xchg
icebp
mov
mov
xor
lret
in
xchg
dec
dec
repnz
adc
jnp
sbb
stc
xchg
test
push
push
dec
or
addb
cs
and
enter
in
icebp
shll
mov
lock
mov
fdivp
es
mov
ret
xor
dec
push
lret
or
mov
and
test
int
ret
or
fnclex
icebp
xchg
push
js
jbe
push
in
and
pop
push
test
scas
sti
div
xor
jbe
stos
ret
adc
sarl
xchg
sbb
xchg
subb
sub
movsl
xchg
js
xchg
mov
icebp
push
out
or
add
fcmovnu
jno
mov
and
cs
inc
in
fisubl
cmp
pop
xor
loope
mov
divl
or
sub
ficoml
mov
subb
push
pop
xchg
fnstcw
ss
jl
inc
loopne
lock
cmc
pushf
pop
pop
repz
mov
pop
lret
cmpsb
mov
mov
push
out
xor
inc
test
andb
inc
rcrl
stos
xchg
cwtl
shrl
or
out
fwait
lahf
xchg
into
mov
clc
sub
gs
mov
xor
out
inc
xor
dec
pop
arpl
mov
nop
movsl
xor
cwtl
popf
and
jle
lret
xor
mov
xor
mov
mov
pop
add
movsb
mov
shll
gs
push
in
inc
push
lds
xchg
repnz
in
xor
mov
sahf
fiadds
adc
sbb
in
inc
add
stos
or
or
sub
sub
push
cmpsl
imul
in
pop
mov
das
xor
or
cmp
pop
testl
mov
push
stos
repz
jne
jmp
pop
stos
mov
xchg
xchg
out
mulb
popa
cmpsl
and
mov
mov
fbld
pop
scas
loope
cmp
mov
lock
mov
div
sbb
icebp
sub
push
out
inc
movsb
jl
stos
sbb
ss
pop
lea
in
inc
dec
pop
sub
aas
mov
sub
inc
pushf
xchg
mov
dec
or
jno
adc
fwait
ljmp
movsl
mulb
push
jecxz
cmp
jb
cwtl
int3
jne
pushf
aam
cmp
fwait
andb
ja
cs
push
leave
dec
test
js
push
aad
and
adc
push
pop
test
test
add
push
pop
lods
idivl
xor
loope
dec
pop
or
add
insl
push
stos
sbb
mov
xor
cltd
inc
mov
pop
pop
sub
jno
mov
pusha
cmp
sub
mov
ljmp
lcall
fs
lds
jecxz
shll
and
dec
cli
sbb
fistpl
pop
mov
mov
jmp
xchg
fnsetpm(287
cmc
hlt
fnsave
push
mov
movb
js
cld
mov
and
fs
mov
cld
push
leave
sbb
ret
cmp
ja
jmp
inc
push
mov
divb
pop
ds
icebp
sbb
sub
xor
lods
and
out
inc
mov
gs
push
or
inc
testl
leave
pop
dec
cmp
insb
imul
loopne
loope
push
inc
dec
jo
xor
call
scas
xor
dec
insb
xchg
pop
cmp
cmp
xchg
inc
aaa
ret
lock
sbb
and
mov
mov
insb
sbb
rorw
in
mov
pop
cmpxchg
lods
lcall
xchg
imul
out
roll
hlt
cmpsl
push
xchg
les
fninit
mov
dec
dec
data16
dec
and
icebp
mov
mull
mov
xchg
push
pushf
xor
mov
adc
push
mov
mov
add
cmp
cmp
shll
fdiv
cmp
jmp
pop
jb
inc
jo
loope
imul
cld
cmc
inc
arpl
push
fildll
or
lock
ljmp
xchg
gs
rol
and
adc
xor
stos
movsl
fcoms
xchg
xchg
je
add
mov
rcrl
orb
adc
mov
out
imul
or
lahf
enter
xchg
cmp
enter
xchg
pusha
xor
mov
jae
stc
sub
movsb
cmp
test
and
mov
popa
outsl
and
int
dec
arpl
adc
xor
cld
iret
sbb
mov
fidivs
nop
aaa
and
into
mov
imul
lret
pop
mov
in
mov
into
jp
or
inc
sbbb
push
cmp
or
lock
sbb
jmp
add
fs
sub
nop
dec
lods
add
pop
adc
les
insl
imul
movsl
dec
push
mov
subb
jp
push
mov
or
mov
repnz
les
insb
sub
pop
repz
arpl
ds
cld
cmp
das
pop
popf
ret
loope
push
push
pusha
push
mov
xchg
sbb
jge
cmp
mov
push
jae
sub
outsb
out
and
in
or
pop
int
cmp
fildl
nop
jg
and
mov
stos
mov
fisubrs
xchg
jae
dec
notl
fisubl
xchg
leave
xchg
xor
sub
ret
out
mov
mov
mov
adc
repz
outsl
imul
pop
jne
push
mov
xor
pop
fnstenv
and
dec
jmp
iret
lea
jae
call
jo
xchg
loop
mov
sub
adc
mov
rol
mov
jbe
sub
mov
outsl
scas
addr16
pop
pop
sub
pop
lods
cmp
cmc
popl
xlat
mov
lock
add
and
test
add
aas
dec
cltd
data16
jp
int
sbb
and
add
adc
pop
mov
aad
mov
inc
imul
imul
jle
push
and
ljmp
aas
cmp
aad
jge
add
pop
ss
xor
xchg
dec
mov
in
sbb
xchg
sub
xor
ret
fsincos
int3
xchg
icebp
mov
lods
das
movsb
lds
jb
xor
cmp
repnz
icebp
out
jno
jl
cmc
int
data16
mov
hlt
mov
pop
lahf
sub
mov
lret
lods
inc
adc
xchg
out
pusha
jmp
mov
call
ss
or
loopne
hlt
and
cs
add
sub
inc
cmp
shr
stos
mov
stc
xchg
and
ljmp
dec
sti
aad
jae
inc
jbe
sub
sub
leave
sub
negl
out
fmull
mov
xor
stos
cmp
or
ret
or
mov
out
stos
push
lds
out
xchg
adc
mov
psubsb
cmpsl
lahf
jmp
jne,pt
in
add
neg
mov
in
popa
push
test
jno
adc
lods
inc
xchg
jmp
xchg
cmp
dec
dec
arpl
push
lock
mov
jg
mov
jmp
push
les
movsb
cs
lea
mov
lods
mov
lods
scas
jp
dec
outsb
adc
mov
sbb
inc
or
xchg
push
xchg
pushf
into
xorb
shll
xchg
in
cli
xor
cmpsb
xor
sti
mov
cmp
dec
push
and
test
xchg
in
inc
test
psrad
rolb
lock
out
mov
or
push
or
sahf
inc
mov
into
inc
sahf
mov
adc
leave
jns
ret
into
fptan
sub
jl
xchg
outsb
inc
adc
dec
sbb
add
mov
fcmovnbe
cmp
inc
jnp
mov
dec
fidivrs
loop
out
dec
pop
add
pop
mov
xorb
ret
push
inc
cmp
out
ljmp
push
jmp
jne
mov
out
sbb
pushf
mov
add
mov
repz
mov
movsb
mov
dec
mov
xchg
popa
adc
incb
in
mov
fldl
aad
inc
cwtl
push
mov
cmpsl
nop
sbb
xor
mov
out
ficoml
mov
sahf
repz
xchg
pop
sub
dec
out
xchg
inc
adc
loop
cmp
push
popf
adc
mov
sub
cmp
xchg
jge
sti
jbe
add
dec
andl
push
xor
pop
xchg
pop
xchg
lods
fists
mov
adc
xchg
scas
jo
pcmpeqd
loopne
xchg
xlat
mov
mov
shl
add
xor
bound
dec
insb
dec
stc
jnp
cmp
std
mov
in
sub
enter
mov
inc
xchg
insl
shrb
xchg
lret
lds
in
cwtl
push
in
call
pop
xor
mov
pop
lds
pop
mov
flds
xchg
mov
jno
loope
mov
jne
shlb
push
shll
imul
fxch
nop
movsb
cmp
jp
mov
enter
inc
aam
imul
mov
sub
out
mov
xor
imul
inc
lcall
jl
push
addr16
inc
rol
dec
push
xor
inc
jo
insb
lods
push
pop
flds
pop
cmp
lods
cmpsb
mov
cwtl
in
pop
call
pop
jns
test
pop
inc
cmp
negb
ret
bound
mov
les
lea
jnp
in
push
adc
imul
xchg
add
cld
imul
aas
mov
out
mov
shr
push
xor
movsb
fidivrl
imulb
jge
fmulp
mov
cmp
jo
sbb
leave
fs
jge
jle
loope
sahf
iret
popa
push
popf
imul
js
ficomps
push
pop
jg
lahf
inc
stos
or
mov
outsb
xchg
pop
jecxz
in
inc
pop
call
and
push
add
cmp
fdivrl
jae
shll
enter
adcl
clc
sarb
xor
scas
repz
adc
push
mov
pushf
ja
leave
cvtdq2ps
out
das
jecxz
repz
fistpll
and
xchg
push
icebp
imul
in
sbb
into
cmpl
push
xor
mov
sarb
lahf
dec
stos
imul
sub
xchg
cmc
jg
scas
ss
movsb
or
mov
loope
out
mov
in
jl
mov
jl
insl
ds
loop
je
cmpsb
jbe,pn
mov
sub
lret
and
lock
and
pop
int
in
cli
xchg
aas
push
and
inc
xchg
push
sub
lock
roll
mov
xchg
pop
outsl
imul
mov
or
inc
cmp
push
push
push
pop
lcall
cltd
mov
je
jle
fildl
lret
addr16
fisubrl
sub
lret
push
icebp
inc
pop
daa
xor
lds
mov
mov
aaa
notb
lock
scas
stos
cmp
outsl
xor
out
icebp
pop
mov
dec
pushf
jp
mov
cmp
lds
xchg
pusha
into
cmp
adc
insl
and
xchg
push
sub
push
jle
das
or
jne
lods
push
cmpl
xchg
cmc
adc
inc
mov
ret
pop
xchg
pop
fwait
in
xor
cmp
mov
and
cmp
daa
push
push
arpl
insb
cmovns
mov
aaa
out
add
sbb
push
fdivrp
xchg
flds
mov
cmc
xchg
les
scas
mov
enter
and
mov
jae
push
xrelease
cltd
stos
imull
ret
or
sahf
pop
bound
lods
adc
mov
dec
cltd
mov
inc
stos
dec
notl
cs
imul
sub
xor
int3
sbb
jns
add
leave
insl
sbb
or
jbe
mov
rcrl
xor
adc
mov
int3
lret
inc
loopne
sub
ret
jns
jg
cmp
inc
push
insb
mov
sbb
loop
cmp
outsb
inc
aas
jae
out
paddusb
mov
mov
in
sub
pop
sbb
out
das
lret
jge
pusha
aaa
sbb
or
cmp
sub
inc
jae
adc
and
imul
fdivs
ds
mov
out
aaa
dec
js
xlat
or
dec
add
and
add
fwait
jae
decb
xchg
jno
movl
ljmp
xchg
jmp
lret
inc
data16
pop
pop
rcrb
xor
aad
pop
xor
lock
mov
jp
dec
mull
shrb
clc
adc
stc
xor
sbb
mov
out
mov
push
push
xchg
inc
cmp
pop
cs
push
aaa
aad
cmpsl
subl
xchg
jns
pop
adc
lods
lea
leave
or
cs
stos
cld
jb
imul
add
int3
push
repnz
andl
adc
sub
pop
sbb
dec
jo
push
aad
mov
inc
cwtl
stos
jnp
aam
jo
ret
dec
mov
dec
inc
aas
out
mov
outsl
xor
or
xor
popa
cmp
popf
cmp
pusha
movl
mov
dec
repz
andb
xchg
icebp
jno
sub
sub
pop
cpuid
pop
sbb
jmp
hlt
cmp
cmp
mov
sbb
push
out
dec
xor
xchg
int3
xor
xchg
inc
fistps
in
addb
mov
dec
shlb
sub
adc
movl
cmc
adcb
mov
aad
push
add
pop
inc
xchg
mov
and
or
sub
jl
add
cmpb
into
mov
mov
fiadds
lahf
in
ret
ljmp
movsb
lahf
mov
mov
cmc
push
pop
leave
dec
daa
repz
xchg
daa
in
mov
popa
dec
mov
das
xor
lds
cmp
fdiv
insb
mov
pop
push
jge
pop
pop
add
shrl
test
fildll
out
cld
mov
ss
jp
add
test
out
sub
cmp
movsb
pop
dec
insb
insb
adc
sub
adc
in
icebp
add
mov
aas
les
inc
lret
hlt
aam
adc
mov
mov
lods
in
popa
movsb
std
push
lahf
xor
mov
jbe
in
mov
jno
mov
movb
iret
cld
cmp
fistps
or
out
loop
xor
cmp
clc
sub
lahf
sarl
jb
xchg
icebp
daa
add
mov
sub
ss
bound
mov
pushf
shr
arpl
repz
stos
and
push
loope
mov
roll
jnp
cmp
dec
out
cs
pop
cmp
roll
sbb
dec
repnz
jg
rcrl
pop
addr16
call
jmp
nop
mov
dec
pop
xorl
sub
rcrb
jp
add
jp
add
jo
xor
jge
stos
xor
adc
and
imul
dec
lods
inc
dec
in
add
pushf
imul
mov
cmp
out
movsl
mov
dec
mov
adc
arpl
fcoms
fidivrs
inc
mov
dec
mov
and
pop
and
mov
and
aas
pop
in
push
mov
jo
sbbb
dec
cmp
aam
push
jg
mov
pusha
scas
xor
ja
pop
mov
hlt
and
icebp
sub
test
jae
mov
xor
sbb
add
sub
push
in
imul
and
lea
jb
lods
sub
ljmp
bound
jno
int
xchg
push
pushf
orb
in
es
outsb
jo
scas
fwait
mov
pop
mov
cmpsb
sub
fisttpll
test
insl
cli
and
xlat
push
inc
or
in
subl
idivb
sbb
repz
or
iret
ss
aas
pop
decl
arpl
les
add
push
mov
fildll
mov
mov
roll
imul
xor
test
jae
xor
adc
pop
and
push
jnp
adc
mov
jae
inc
das
insl
and
imul
and
and
sbb
cli
mov
mov
flds
add
scas
push
call
imul
cmpsb
lods
or
mov
pop
sbb
mov
lock
adc
add
lods
sbb
or
push
fstpl
leave
lret
pop
mov
jecxz
xor
test
addr16
or
lcall
fidivs
and
jnp
iret
inc
jo
adc
push
jmp
or
cmp
xchg
add
mov
add
aaa
call
dec
jnp
sbb
dec
cli
mov
push
dec
jp
jne
into
mov
sti
mov
daa
daa
arpl
in
adc
mov
and
scas
adc
lret
pop
dec
sysret
lcall
mov
insl
movsb
cmp
jo
xor
jno
adc
add
jecxz
sbb
rcrl
xchg
in
in
sbb
push
hlt
sbb
sub
fmul
ret
in
ret
mov
push
add
fcoml
xor
jo
xor
dec
mov
jmp
loope
js
mov
aam
pop
dec
ds
push
fwait
ljmp
sahf
xor
rcrl
inc
push
inc
iret
pop
xor
dec
lret
dec
ret
cmp
daa
pop
pop
xor
nop
sarb
and
push
stos
jbe
fs
stos
movsl
shll
dec
lret
lret
push
sti
mov
adc
int
enter
and
xchg
mov
lret
loope
rcrl
jmp
aad
pop
mov
pop
dec
cmpsl
sarb
ror
mov
sub
xorl
and
xchg
mov
jae
stc
jbe
mov
adc
orl
or
dec
xorb
sahf
cmc
mov
pop
sbb
sti
outsb
sbb
push
add
adc
inc
mov
inc
and
nop
lods
pop
loop
sbb
femms
mov
xor
mov
dec
loopne
or
cmovne
jmp
in
shrb
gs
mov
mov
subb
add
jmp
psraw
add
adc
push
dec
push
cwtl
stc
loopne
jae
mov
std
mov
loopne
mov
push
mov
pop
pushf
push
rcl
push
cli
jne
arpl
es
test
ds
jge
jmp
out
gs
das
andb
leave
test
pop
sysexit
sti
adc
mov
loopne
pop
xor
jmp
fsubl
xlat
sbb
fs
out
hlt
in
add
out
imul
mov
mov
in
loope
stos
gs
mov
fs
mov
xchg
cmpsl
xlat
ja
ret
or
add
lods
add
inc
jo
jmp
dec
addr16
cmc
mov
jo
and
enter
outsl
iret
arpl
mov
nop
out
add
and
imul
ss
adc
stos
push
and
sub
xor
rorl
outsb
pop
xchg
adc
rcll
std
in
mov
sub
jle
dec
mov
leave
cmp
lods
cwtl
lock
test
loopne
push
dec
pop
popf
adc
pop
mov
je
and
lods
adc
cmp
cmp
jno
insl
loope
int3
xchg
or
mov
cmovb
inc
lea
lahf
add
imul
jno
adc
jmp
mov
xchg
sub
push
mov
out
jmp
dec
xor
add
aad
pusha
mov
divb
aad
repz
mov
jmp
push
sub
andl
in
push
in
mov
add
and
icebp
xor
cmp
mov
loopne
push
or
jle
cmpsl
cwtl
ret
rolb
xchg
cmp
mov
or
sbb
jge
scas
add
mov
or
lods
xor
fiaddl
mov
mov
inc
lds
jp
or
push
mov
push
mov
cmc
adc
and
cmpl
xor
stos
dec
sub
jne,pn
repz
and
and
mov
in
ds
push
mov
stc
mov
push
push
fimuls
in
pop
cmc
jecxz
andb
mov
inc
mov
adc
leave
push
sbb
pop
cmpsl
leave
mov
push
dec
out
inc
mov
loop
cld
xchg
add
sbb
hlt
pushf
push
mov
mov
add
imul
lods
sub
cld
sub
cmp
stos
or
aas
je
push
mov
sti
out
into
in
aam
lahf
sbb
pop
imulb
add
std
in
push
icebp
mov
sub
mov
or
outsb
xor
add
or
push
fdivrl
divl
clc
xchg
fucomip
xchg
add
nop
cltd
lret
lods
gs
xor
test
mov
adc
cld
sbb
not
xchg
ds
inc
sbb
push
fidivs
cmp
mov
sbb
and
mov
mov
scas
sbb
popf
pushf
out
cmp
aas
pop
xor
sub
xor
sub
int3
sti
xor
dec
lock
xchg
sub
lcall
xor
sbbl
mov
fidivs
sub
les
cmpsl
mov
aad
sbb
arpl
shll
sarb
cmpl
mov
jmp
aam
or
adc
jno
aaa
ret
aas
fdecstp
sub
clc
lahf
push
iretw
add
gs
xorb
adc
cld
test
inc
sti
or
push
add
mov
add
notl
xchg
or
or
pop
in
fistpl
adc
fnstsw
jo
lcall
movsb
nop
dec
pop
xor
test
aas
sbb
sbb
adc
loope
cmp
stos
fwait
xor
andb
imul
sbb
jmp
aas
aaa
repz
xor
xor
lret
or
mov
test
push
xlat
out
jl
dec
es
daa
pushf
into
addr16
int3
outsb
in
and
scas
and
aas
mov
mov
cmp
icebp
pop
outsb
xlat
or
int
inc
and
pop
sub
movsb
mov
sahf
out
add
inc
dec
sub
nop
sub
dec
jb
clc
xchg
add
xor
out
ljmp
shrb
icebp
sbb
inc
mov
fmull
inc
sub
hlt
adc
adc
xchg
outsb
divb
mov
insl
xchg
jo
lret
sub
inc
jg
xchg
int
fadds
xlat
sbb
arpl
xchg
sarl
fimull
repnz
imul
dec
xor
in
sub
addr16
lcall
push
mov
sar
sub
das
lock
enter
shr
mul
mov
jmp
push
cmp
xchg
dec
add
loopne
sub
test
mov
ljmp
ljmp
sub
int
mov
loope
and
call
dec
sbb
lret
imul
xchg
mov
mov
fisubs
data16
aaa
lds
imul
ret
push
pop
xchg
sbb
leave
xchg
xchg
jl
mov
mov
outsl
sti
js
dec
addr16
fs
aas
ret
aas
outsb
sahf
xor
mov
mov
xor
scas
pop
dec
int
rorl
and
mov
inc
or
xor
sub
push
loop
out
pop
sub
lret
dec
sbb
popf
and
cli
je
fsubs
xchg
push
in
sbb
mov
pop
dec
in
add
sub
xchg
push
inc
inc
cmp
lods
pushf
sbb
outsb
fdivl
sub
aaa
aas
sti
test
out
aas
inc
adc
add
int
ja
mov
stos
loope
stos
jne
aaa
popl
loop
stos
or
xor
sahf
cwtl
sbb
enter
flds
leave
movsl
ja
jo
mov
and
pop
int3
sbb
dec
lret
and
add
push
mov
xchg
fisttpll
mov
test
clc
adc
out
and
shlb
stos
add
into
daa
mov
insl
dec
aam
call
mov
or
adc
xlat
pop
add
fsubl
jb
push
out
dec
pop
imul
clc
call
imul
lock
add
lds
inc
jbe
fcoms
lahf
inc
enter
push
mov
mov
clc
data16
sbb
xchg
pop
lret
iret
ret
pushf
xchg
lods
fcomip
sahf
or
stos
xlat
jo
mov
adc
arpl
pop
mov
popa
push
mov
push
xor
call
and
push
and
nop
loope
fsubrs
int3
enter
stc
out
xlat
mov
mov
nop
aas
xor
mov
jecxz
shrb
adc
out
add
cmp
ficoms
inc
leave
ja
icebp
icebp
cmp
mov
stc
lret
sahf
movsb
ljmp
mov
fsubrs
stc
std
sbb
dec
mov
mov
push
daa
daa
rcrb
dec
stos
jmp
cwtl
adc
dec
mov
loop
imul
jb
pop
dec
shll
push
mov
ret
and
iret
decb
rol
cltd
loop
lock
xchg
mov
xchg
lods
rorl
xor
jae
scas
mov
aad
insl
jb
outsb
and
adc
stc
add
jae
sbb
jg
imul
cmpb
mov
js
scas
xor
repnz
mov
adc
push
dec
dec
fxch
iret
daa
std
in
xchg
or
mov
in
ds
pusha
in
arpl
push
xchg
repnz
pop
test
adc
inc
lcall
fbld
sbb
addb
mov
jge
sbb
loopne
dec
adc
lods
pusha
and
cmp
push
stc
stos
xchg
aas
movsb
mov
repz
inc
pop
imul
das
mov
ja
pop
daa
testb
sti
test
jmp
mov
sub
int
shr
lea
add
lods
xchg
shrl
cmc
sub
mov
sub
addr16
mov
fdivp
negl
lea
mov
push
or
in
out
aaa
pop
lcall
sub
push
cmp
dec
aam
cwtl
in
and
lods
stc
outsb
inc
les
and
push
xchg
and
sti
shl
int3
xor
subl
ljmp
push
add
mov
repz
aam
pop
in
daa
jge
sbb
sbb
cmp
fsubrl
push
into
das
pop
xchg
jl
out
xchg
fwait
inc
repnz
fisubrl
add
in
xchg
push
or
pop
pop
pop
cmp
fsubs
cmp
adc
jle
and
jecxz
push
aam
call
jmp
into
push
or
inc
jb
and
xchg
roll
pop
lods
jg
add
aam
cmc
mov
xor
popf
xchg
add
mov
lea
push
push
push
add
stc
fidivrs
in
mov
mov
jns
adc
cli
fisttps
in
push
mov
lock
xchg
inc
mov
dec
out
mov
out
sub
sbb
movsbl
lcall
add
push
adc
test
push
pop
rclb
jg
andb
sub
dec
cmp
cmc
fadds
sub
xchg
mov
test
fs
dec
xor
ret
mov
out
mov
data16
in
mov
lret
aad
clc
dec
in
mov
dec
js
leave
and
jl
jge
pop
pop
jg
inc
ljmp
jno,pt
in
cltd
out
stos
add
or
mov
jnp
lods
add
scas
aam
and
xor
adcb
lea
arpl
mov
mov
mov
mov
ficomps
push
lahf
or
pop
outsb
aam
add
addb
lods
ljmp
jne
and
pop
into
xchg
loope
jno,pt
sub
frstor
mov
mov
mov
adc
sar
or
hlt
inc
iret
lcall
inc
inc
imul
ret
popf
xchg
scas
stc
out
out
movsl
aaa
push
ljmp
xor
dec
fadds
loope
cmp
ret
inc
outsl
pop
dec
inc
je
lcall
andb
in
dec
shrb
out
adc
push
subb
mov
ret
jne
jns
sub
pop
mov
js
sub
movsb
test
sarl
cmp
xor
adc
fistpll
add
roll
fsubs
push
jnp
jp
outsb
leave
lock
mull
pushf
inc
mov
aam
add
sub
mov
imul
pop
in
stos
pop
roll
insl
test
jl
sahf
sbbb
test
arpl
popa
in
negl
out
adc
xchg
cmp
and
sub
scas
sub
mov
mov
icebp
dec
cs
hlt
or
jne
pop
xchg
icebp
aam
pop
dec
test
cmp
sbb
sbb
divl
and
push
jbe
nop
mov
pop
push
out
pop
movsl
mov
je
pop
dec
push
push
mov
cmp
mov
movntq
push
ficomps
sub
or
xlat
push
jmp
inc
xor
xor
pushf
loop
mov
pop
es
or
cwtl
in
dec
shlb
repnz
sub
subl
xor
xor
lea
loopne
ds
lret
mov
jl
mov
fld
push
lods
je
mov
inc
in
das
add
mov
and
jmp
inc
insb
mov
xor
mov
mov
push
cmp
mov
cmpsb
and
cmp
negl
or
cmpsb
enter
shrb
xchg
cmp
sub
mov
push
mov
test
adc
rcl
stc
pushf
mov
jne
in
fmuls
push
aam
sbb
cmc
xchg
mov
or
not
leave
std
neg
fbstp
icebp
iret
idivb
mov
and
pop
ret
cmp
mov
add
stos
movsl
sbb
cmp
adc
daa
push
dec
insl
cld
pop
inc
inc
and
fcompl
pop
test
jmp
clc
subl
cmp
sahf
mov
out
es
daa
mov
ja
mov
or
dec
push
nop
cmpsl
int3
mov
mov
or
or
sarb
mov
sub
mov
jne
pop
push
loope
cltd
cld
xchg
sub
jno
jbe
xlat
ds
stc
and
or
jae
mov
dec
sbb
fimuls
out
cmp
scas
rclb
shll
xor
imul
fildl
mov
mov
dec
int3
jge
ss
add
ja
and
dec
jnp
mov
jl
sbb
sbb
in
or
sub
scas
out
adc
or
push
outsl
jno
sbbl
dec
stos
pop
xor
aas
mov
lcall
push
es
lcall
xor
mov
or
push
push
les
fwait
mov
lods
or
pop
and
add
ljmp
movl
inc
push
pusha
rclb
fwait
dec
dec
sbb
cmp
mov
xor
lock
mov
shl
dec
add
inc
or
lods
test
sbb
mov
movsl
jmp
imul
xchg
add
xor
mov
mov
mov
sbb
lods
fimuls
mov
out
cmpb
ds
sub
sbb
in
mov
rolb
jbe
fnstenv
add
push
mov
xor
les
popa
xor
test
fstps
insb
push
cmp
pushf
xchg
push
je
push
jbe
repnz
gs
xchg
cmpsl
mov
outsb
cmpsl
jb
in
dec
jg
fimuls
ss
sub
ret
adc
jge
mov
cmp
ljmp
insl
out
sub
fdivrs
ret
std
cld
xorl
cmp
ljmp
cli
xor
hlt
ds
arpl
repz
pop
outsl
jl
push
js
fdivrs
dec
push
in
adc
mov
jns
jo
jno
xchg
mov
aad
jae
adc
in
jecxz
movsl
mov
mov
cs
ror
int3
bswap
lret
leave
sub
sub
pop
mov
roll
mov
adc
cmp
insb
mov
dec
pop
mov
or
fcomp
inc
jecxz
test
stc
ss
in
dec
outsl
movsb
bound
push
fcmovnbe
xor
xor
pop
and
lret
outsb
test
xchg
or
add
mov
mov
insb
call
rcrb
out
dec
shlb
jb
mov
xchg
pop
cpuid
inc
loope
rcr
test
add
dec
cmpsl
testl
test
fscale
mov
xchg
sbb
sbb
pop
xor
and
or
mov
inc
ds
mov
addr16
pusha
stos
je
test
lret
ror
out
int3
lcall
ret
call
pop
stos
das
jno
inc
fmulp
test
sub
rcrl
aas
fisubrl
inc
mov
les
ja
lds
nop
pop
inc
and
sbb
mov
lock
lock
cmp
jmp
bound
mov
add
adcb
sbb
xlat
mov
mov
scas
stos
inc
xchg
cmpsb
adc
scas
and
mov
jp
cmp
addr16
add
out
cmp
stc
jae
add
cwtl
pop
test
movsb
sbb
dec
in
mov
sub
mov
cmp
mov
mov
sbb
fmul
xor
mov
addr16
adc
popa
or
dec
cmp
and
movsl
dec
xchg
cld
inc
pop
cwtl
adc
mov
mov
arpl
dec
or
fidivrs
mov
test
or
xchg
adc
jmp
fsubrp
aas
stos
std
xchg
mov
and
repz
cwtl
outsb
inc
sub
jb
push
mov
imul
xor
dec
in
fs
mov
imul
push
punpcklwd
dec
stos
sub
imul
inc
dec
mov
shlb
pop
faddp
xorb
call
mov
fstpt
in
mov
insl
rol
outsl
sbb
pusha
mov
sahf
outsl
mov
mov
nop
in
push
mov
int3
fbld
sub
push
mov
sbb
xchg
imul
ss
mov
negl
jp
xor
lods
subb
inc
xor
pop
clc
dec
pop
mov
lret
stos
mov
mov
mov
push
mov
icebp
mov
jb
in
inc
dec
push
es
insb
inc
jo
xor
shrl
cmpsl
sub
push
leave
xor
inc
lods
lods
xchg
xor
adc
jnp
jl
in
xchg
imul
pop
sbb
lea
iret
inc
push
rcrl
out
mov
mov
dec
test
xor
lret
cltd
and
jge
fs
outsb
sub
stc
mov
shrl
lods
and
mov
and
pop
or
push
test
jae
jb
out
loopne
xlat
jl
pop
negb
pop
bnd
cld
mov
push
dec
leave
subl
sub
mov
xor
mov
rcrb
jle
shrb
in
cmc
mov
daa
pop
aaa
hlt
fisttpl
inc
repnz
lds
jae
stos
mov
mov
fisttpll
imul
in
adc
or
dec
les
xor
mov
dec
cmp
cmc
int3
jp
mov
dec
lock
call
test
jg
sbb
xchg
dec
testl
xor
int
orb
shr
push
ficomps
adc
mov
mov
shr
shlb
shlb
xor
jae
into
je
and
lea
mov
cmp
scas
mov
mov
sbb
mov
movsb
inc
sub
inc
lret
push
or
in
sub
xor
scas
dec
clc
loope
out
movsl
pop
mov
mov
mov
lahf
adc
add
lods
aam
pop
dec
sbbb
pop
lahf
cli
in
cmpsl
adc
jo
lea
dec
lret
mov
movsl
inc
mov
daa
xor
test
inc
das
stos
or
popl
cmc
mov
pop
sarb
jbe
out
and
lret
inc
add
cmp
pop
in
fcomps
lock
test
loope
mov
pop
mov
shlb
jbe
andb
pushf
xchg
mov
repz
pushl
es
adc
inc
nop
and
cmpsb
std
sub
adc
mov
mov
dec
cli
lds
aaa
jnp
adc
pusha
push
nop
gs
fwait
jmp
decl
loopne
pop
mov
inc
add
inc
cld
sbb
iret
sub
sub
stos
mov
add
jg
adc
dec
sub
jmp
push
jg
adc
leave
rol
and
jo
enter
xchg
in
bound
pop
dec
jmp
fs
adc
mov
fwait
add
or
jb
decl
into
jbe
jno
xor
out
arpl
enter
xor
pop
push
push
cmp
mov
xchg
out
leave
xor
loopne
in
mov
js
int
mov
cmpsl
lret
fsubr
or
rcrb
fdivrl
mov
and
mov
test
pusha
scas
dec
sbb
stos
mov
cli
cs
or
inc
outsb
test
sti
mov
adc
pop
sbb
mov
inc
add
insb
and
xchg
lret
cmp
or
inc
mov
movl
nop
sub
sbb
pop
jmp
xor
fneni(8087
push
aam
adc
and
lock
push
frstor
inc
pop
enter
mov
xlat
dec
inc
adc
dec
cli
jecxz
pop
sub
adc
negb
lahf
inc
adc
scas
cmp
add
rcll
jne
lock
ret
lret
push
lock
popf
mov
or
push
fisttpll
addr16
sti
outsl
xorb
mov
loope
jb
ja
pop
push
fldenv
ljmp
jecxz
in
ja
pop
lahf
pop
xor
fldenv
push
dec
testb
dec
iret
mov
inc
push
jnp
stos
add
icebp
jb
imul
adc
adc
dec
sbb
xchg
jae
test
jo
jmp
jge
or
sub
jbe
pushf
rcll
adcb
add
in
ret
and
xor
and
lods
stc
rcl
dec
shl
pop
pop
inc
push
icebp
in
inc
shlb
div
xor
jle
out
push
xor
lods
and
ret
inc
push
sub
xchg
iret
jb
add
imul
cli
test
sarb
int
xor
in
inc
sbb
cld
shll
dec
mov
cmpsl
sub
xor
or
test
mov
pushf
sbb
insb
iret
or
cmp
arpl
lret
xor
jo
lods
nop
pop
flds
sbb
inc
aaa
daa
aaa
outsl
jbe
add
aam
push
out
scas
sub
xor
sub
mov
lock
sbb
das
sbb
jnp
stos
andl
dec
cmp
or
jg
mov
iret
inc
inc
out
scas
ljmp
xchg
sbb
shrb
xchg
add
outsb
fimull
inc
shlb
adc
add
repnz
or
push
sahf
cmp
push
in
pop
pop
aad
rcl
sbb
pop
stc
add
sub
outsb
imul
mov
push
inc
mov
cli
push
shrb
aam
mov
xchg
sbb
pop
mov
mov
push
fstps
mov
mov
into
dec
bound
jb
inc
dec
sbb
out
mov
outsb
das
xlat
mov
inc
pop
cmp
cmc
sub
ss
pop
movsb
insl
sti
mov
mov
inc
rcr
imul
shrb
movsl
push
adc
ds
clc
mov
jbe
mov
cmpsl
stc
ja
mov
sub
movsl
inc
in
scas
into
xor
out
adc
cwtl
leave
dec
and
shl
fwait
std
jo
clc
int3
ss
push
int
mov
inc
pop
out
cmp
into
test
arpl
lods
push
repz
mov
adc
sbb
movsb
int3
jo
dec
xchg
sbb
or
lods
add
dec
ss
inc
dec
dec
cmpsl
mov
dec
aaa
into
ja
fisubs
call
dec
movsl
pop
gs
sti
adc
pop
data16
imul
aas
aad
ss
sbb
shlb
lea
testb
sbb
mov
dec
out
incb
ja
jo
pop
out
xchg
loop
cmp
lahf
subb
out
shrb
jmp
nop/reserved
push
scas
and
cli
test
les
dec
lods
lea
pop
jno
call
arpl
jecxz
fwait
cmc
mov
fs
lods
jo
mov
xor
int3
popa
das
movsl
movsl
loopne
test
jp
xlat
add
and
mov
pop
jns
cltd
call
out
insb
loopne
mull
adc
pushf
sahf
or
adc
stc
xchg
jp
cmp
in
jae
push
iret
call
aad
pop
loope
arpl
jl
pop
gs
leave
mov
and
fisttpl
loop
push
sub
mov
mov
pop
mov
add
ja
and
leave
push
sbb
push
int3
add
push
lods
xchg
cmp
stos
push
cltd
repnz
pushl
jbe
jno
js
push
xor
jbe
aaa
lods
xchg
mov
or
lahf
lea
cmp
or
add
repz
fcomip
sub
les
jbe
mov
add
mov
cmovle
and
sbb
and
push
jae
dec
in
std
rcl
mov
or
negl
lcall
aas
mov
adc
lret
sub
insb
lods
jnp
roll
scas
ficoml
jns
xor
adc
pop
outsl
mov
push
insl
scas
icebp
fwait
repnz
nop
mov
gs
repnz
les
push
jp
sbb
mov
iret
cmp
dec
iret
sub
push
out
cmp
js
jne
sti
mov
lret
in
movsb
iret
addb
ret
inc
or
mov
dec
jo
xchg
pop
cli
xor
lret
repz
arpl
inc
repnz
and
push
push
mov
push
dec
ds
aam
int
lods
in
pushf
fwait
jnp
shrl
popa
pushf
gs
or
inc
push
sbb
mov
neg
rorb
sbb
and
pushf
jae
pop
movl
cmpsl
popf
inc
leave
icebp
add
mov
aad
add
xor
pop
loope
mov
repz
jb
adc
testb
push
dec
pop
sub
ljmp
lret
out
lahf
enter
dec
lods
xor
adc
jbe
stos
and
cmp
and
mov
lahf
sub
movsb
cmp
repnz
es
and
adc
adc
cmpsb
imul
mov
aad
push
fdivs
pop
imul
xlat
test
je
ret
daa
mov
mov
mov
ud1
int
shlb
daa
test
sbb
stos
repz
aad
jae
jl
lahf
mov
aam
and
mov
push
or
sub
fildl
adc
shl
call
adcl
add
xchg
dec
mov
sub
or
gs
add
roll
fildll
inc
jl
iret
mov
fidivl
xor
cli
or
add
and
clc
int3
add
mov
or
add
mov
and
daa
mov
popf
loop
and
rclb
scas
out
mov
es
clc
mov
fnsave
test
mov
test
in
sbb
and
aas
jb
mov
daa
fsubr
pop
jecxz
and
or
jno
pop
jp
shlb
daa
push
rorl
imul
mov
popa
pusha
jb
push
sbb
lods
test
sub
dec
popf
pop
xchg
enter
cmp
mov
movswl
leave
cmp
mov
push
xor
movsb
out
sbb
cli
pushf
mov
inc
push
adc
inc
and
and
sbb
mov
xor
cmpsb
mov
pop
mov
sahf
xchg
popf
mov
dec
cmp
push
xchg
mov
mov
aad
call
and
dec
sahf
lahf
rclb
sbb
ret
pop
fs
inc
inc
cld
jle
mov
sub
pop
sbb
scas
jg
push
es
inc
clc
sub
mov
fld
mov
dec
les
arpl
mov
stos
sbb
and
loope
scas
pusha
stos
and
pop
xchg
in
into
inc
fwait
and
incb
lds
loope
inc
sbb
movsb
cmp
or
jg
bound
xchg
pop
push
nop
sbb
repz
gs
cmpsl
pop
pop
xchg
jecxz
cs
gs
ljmp
aas
scas
fsubrs
mov
addr16
pushf
jge
adc
xor
xchg
cs
rcl
pop
lahf
imul
sbb
add
sbb
lds
lcall
fcmovnb
imul
repnz
push
jle
pusha
bound
mov
xor
pop
roll
fsts
out
add
push
jns
es
data16
push
fs
push
mov
inc
cmpsl
loope
jmp
repnz
pop
xor
cmc
cli
call
ja
inc
ret
popf
rclb
adc
jmp
xchg
xchg
or
or
xchg
mov
cmc
mov
sub
fcmovu
popf
ljmp
sbb
or
call
or
fcom
adc
inc
repnz
sahf
push
inc
lock
xchg
push
or
xchg
seto
into
dec
pop
data16
iret
iret
ss
cmp
enter
adc
adc
bound
je
sbbb
loop
mov
add
xor
pop
cmc
lds
cmpl
push
inc
push
scas
jne
xchg
mov
adc
test
inc
and
jecxz
daa
pop
fs
jmp
stos
and
in
stos
pop
xchg
in
pop
fnstcw
in
adc
inc
mov
push
inc
push
out
stc
lods
mov
mov
cs
jae
mov
les
insb
jg
sbb
dec
cmc
xor
adc
das
inc
xor
jne
push
mov
insb
pop
dec
lret
cltd
outsl
insb
js
or
fimull
sti
mov
or
mov
xor
cmp
or
cld
adcb
push
stos
mov
and
ljmp
mov
popl
sti
jl
das
outsb
jge
iret
mov
mov
pusha
insb
jns
pop
inc
adc
adc
fdiv
and
mov
fwait
test
push
mov
adc
gs
repz
data16
jl
and
insb
test
push
cmpsb
ja
adc
repnz
xchg
mov
loop
sub
add
lcall
add
sub
decl
cmc
mov
push
leave
cld
add
in
sbb
dec
ds
adc
mov
dec
xchg
fs
insl
or
mov
lcall
sub
mov
shll
mov
outsl
lret
js
gs
pushf
mull
mov
mov
jnp
nop
testl
arpl
and
mov
sbb
popa
in
mov
lret
out
jbe
lret
mov
or
icebp
cmc
js
cltd
ficoml
das
jmp
mov
test
mov
mov
lcall
push
in
xchg
add
sub
jge
lods
jecxz
popl
rcll
fs
pop
pop
stos
xchg
xlat
add
lret
adc
movsl
arpl
sub
xchg
aad
notb
bnd
test
mov
into
jp
pop
es
pop
mov
mov
and
mov
stc
xor
out
push
mov
sbb
lret
outsl
aad
xchg
sbb
push
dec
shll
int
mov
inc
cmp
adc
and
or
cmpsl
daa
sbbb
aas
push
or
pushf
testb
push
xchg
fisttps
dec
sub
cli
add
xchg
insl
int3
test
int3
lods
popf
jb
mov
or
test
jg
bound
in
pop
out
sbbl
sbb
mov
push
jmp
or
or
adc
jge
mov
mov
dec
mov
mov
mov
fidivrs
daa
push
cmp
push
std
jo
sub
stc
mov
test
add
neg
test
loop
repnz
jae
inc
nop
out
mov
fisubs
cli
jbe
jno
lods
mov
pushf
stos
repz
lret
gs
xchg
fsts
fcoml
or
mov
jae
movsb
push
adc
decl
fdivrs
clc
adc
mov
cltd
stos
cmp
gs
pop
push
loope
dec
fs
sub
stos
mov
cmc
xchg
ljmp
in
mov
cmp
push
in
aam
adc
lret
mov
push
xor
push
push
movsb
mov
test
cli
aam
imul
pop
xchg
es
jle
pop
fadd
inc
xchg
popf
loopne
push
pop
es
gs
sub
andb
cmpsb
test
arpl
mov
push
push
inc
adc
adc
lods
sbb
cmp
sbb
xchg
xor
sub
mov
mov
push
cmp
cmp
in
xor
mov
lret
jl
shrl
or
pusha
add
ret
scas
in
push
dec
pop
and
lret
imul
nop
add
dec
aam
lahf
or
inc
and
mov
sub
add
movsl
out
and
jmp
push
cmp
cmc
popf
inc
mov
fwait
mov
sbb
lret
cmp
jns
jne
jbe
sub
rcl
aas
lea
push
cmp
dec
adc
sub
dec
and
imul
es
loope
pop
orb
js
dec
cwtl
dec
adc
mov
testl
push
int3
cmpsb
in
rcl
pop
push
inc
ds
ljmp
in
xor
or
lds
jbe
or
add
lcall
cmp
repz
mov
jl
mov
cs
pop
and
mov
xlat
push
jae
pop
inc
push
cmpsb
je
ds
push
aam
push
cmp
mov
jmp
stos
cld
dec
sbb
sub
jns
cmpsb
push
data16
sbb
iret
push
xchg
je
jo
xchg
xor
out
mov
lret
sbb
jb
mov
cwtl
xor
and
sub
cmpsl
fs
mov
enter
pop
cwtl
idivl
xor
jns
push
pusha
movsb
ret
add
jns
cmp
movb
pushf
call
dec
mov
test
mov
arpl
or
lods
enter
bound
or
out
js
insb
sub
inc
mov
lods
stos
xchg
mov
or
adc
xchg
imul
outsl
sarb
aam
insb
sbb
jae
sub
fbstp
arpl
pop
aaa
xchg
adc
or
or
sti
pop
mov
in
mov
imul
push
jnp
pop
mov
sub
gs
je
sbb
loopne
sbb
imul
sbb
cmp
repz
imul
sbb
sbb
movsb
call
sbb
ja
mov
cmp
pop
or
andb
dec
cmc
insb
popa
bound
inc
push
aaa
mov
xor
out
es
jl
jbe
insl
sysenter
push
movsb
mov
dec
roll
stc
fsts
shlb
pop
push
dec
xor
jecxz
dec
call
jae
ljmp
aam
ret
les
std
fucom
xor
sub
ss
imull
cld
addr16
in
jge
sti
cmp
fidivl
icebp
mov
mov
js
ret
jne
mov
push
mov
movsb
iret
mov
adc
cli
pop
sub
popf
sbb
lcall
sub
bound
pop
sahf
jno
jle
aad
xlat
sbb
mov
ficompl
movsb
mov
leave
stos
inc
pushf
add
arpl
and
idivl
inc
pop
add
jle
cwtl
xor
sbb
mov
or
sub
std
mov
push
out
push
sub
test
bswap
xchg
cmc
arpl
xor
in
or
arpl
push
insb
xor
faddl
jg
push
xchg
add
repz
in
mov
mov
push
fcmove
lcall
cld
xchg
jae
mov
fisubrs
mov
stos
popf
pop
call
hlt
or
fmull
out
test
push
test
sub
add
test
js
test
inc
std
or
lret
and
pop
lcall
sarb
inc
mov
lods
test
mov
mov
sti
test
or
dec
dec
leave
mov
imul
add
shrl
inc
mov
loopne
sub
jb
sbb
fs
arpl
jl
mov
xlat
inc
dec
xchg
daa
shl
cli
or
aad
fwait
xchg
clc
out
ds
inc
fisubrs
lds
mov
arpl
js
test
sub
cwtl
lea
loope
in
push
in
mov
out
rcll
jp
push
mov
test
psrlw
sti
jno
scas
pop
cmp
cmp
add
mov
push
inc
repz
sbb
stos
inc
dec
sub
inc
sub
jbe
pop
daa
jle
pop
out
sub
cmp
pop
pop
sti
arpl
in
and
int
jmp
ja
push
pminub
xchg
in
mov
add
inc
ljmp
xor
out
push
mov
cmp
add
ljmp
mov
add
or
adc
dec
mov
loopne
mov
ss
cltd
pop
scas
mov
pusha
out
jp
and
xchg
fdivrs
pop
jecxz
dec
adc
mov
inc
pop
in
sub
rcrl
push
test
mov
adc
movsl
or
ljmp
mov
or
and
cld
data16
lret
push
mov
arpl
rclb
jg
push
stos
push
pop
fmull
repz
gs
sub
mov
cbtw
inc
cmc
fucom
pop
outsl
rorl
add
mov
pop
dec
and
jg
pop
hlt
sub
test
jne
add
add
inc
in
lahf
sub
xchg
stos
inc
out
mov
jmp
push
wbinvd
mov
dec
cld
imul
mov
out
stos
push
inc
or
pop
xchg
push
cmp
repnz
sub
push
push
stos
fwait
pop
out
cmpsl
mov
fcmovb
sbb
and
mov
test
jg
lret
xor
call
sarb
jl
cld
and
shr
dec
cli
sbb
scas
data16
in
in
pop
jno
adc
push
mov
sbb
inc
test
cmc
movsl
bound
xor
dec
rorb
imul
stc
stc
push
mov
scas
rcrl
rorb
cli
aad
push
cs
sub
leave
call
in
mov
push
out
fsubs
mov
sahf
cmp
push
loop
int3
mov
add
loop
jbe
dec
js
je,pt
sbb
mov
lcall
dec
repz
aad
push
int
loope
add
sub
mov
nop
push
sbb
push
cwtl
adc
icebp
aam
push
idiv
pop
pop
into
mov
mov
repz
in
std
jmp
iret
xchg
shll
movsl
dec
or
push
xchg
cmp
pop
lahf
xchg
sub
shll
push
and
mov
cld
dec
addr16
cmp
imul
arpl
ljmp
jne
fwait
dec
xor
fcmovnb
inc
or
mov
cmp
and
sahf
mov
leave
in
sahf
mov
scas
adc
and
pop
rcll
or
in
sbb
mov
aam
or
or
lahf
leave
ss
int3
cmp
lock
movsb
mov
test
cmpsl
test
dec
in
cs
pop
and
and
aas
pop
push
stc
fsubrl
add
mov
imul
cs
clc
loopne
pop
push
lock
dec
sbb
jno
ret
cltd
ds
sahf
pop
lcall
insb
in
xchg
push
push
and
cmp
shrb
mov
push
xchg
hlt
mov
stos
dec
and
add
sahf
push
nop
sbb
cmc
or
in
inc
jl
or
xchg
jb
xchg
jne
out
mov
arpl
repnz
adc
push
ds
adc
sub
cmp
fidivs
int
insb
adc
pop
pop
test
fs
call
lret
stos
and
dec
jl
jg
pop
sub
popa
test
sub
mov
in
scas
cmp
add
sbb
push
ljmp
sbb
jmp
mov
add
ret
and
pop
roll
dec
iret
rcrb
das
je
negl
sub
jmp
stos
sahf
leave
sbb
push
pop
hlt
scas
cli
insb
pop
mov
cld
sbb
repz
sti
idivb
filds
pop
pop
ret
inc
mov
out
sub
cmpsl
add
test
subl
mov
or
out
sbb
clc
jecxz
push
jns
lret
cmpsb
dec
add
sub
loop
pop
lods
repnz
sub
inc
jne
pop
xchg
push
iret
shl
mov
push
ljmp
push
cmp
sub
xor
push
pop
pop
pop
aad
fisubl
xlat
and
dec
ficomps
push
xchg
call
cmp
stos
out
jb
mov
push
xlat
push
inc
nop
aam
xchg
inc
mov
or
vmovsldup
test
cltd
sahf
gs
pop
push
shlb
sbb
and
mov
xchg
sub
mov
clc
out
cmp
int
jnp
mov
add
adc
inc
clc
aad
push
jge
adc
aas
lcall
jmp
icebp
cmp
stos
inc
cmp
dec
xor
jle
aad
inc
loopne
xor
fstl
sub
push
sbb
aaa
scas
negl
test
sbb
mov
xchg
mov
jmp
stos
adc
out
mov
adc
xorb
std
stos
leave
dec
push
push
fisttpll
inc
shl
xchg
jp
cmp
dec
cwtl
mov
fildll
sub
test
movsl
sbb
adc
popf
add
adc
cmpsl
sbb
rcrb
fiaddl
or
and
pop
fisubrs
mulb
test
cmp
dec
aas
sub
stos
xchg
mov
and
sbb
daa
hlt
loopne
adc
test
scas
into
cltd
scas
in
pop
ljmp
movsl
negl
sub
popa
or
mov
push
sub
or
mov
lock
sub
mov
inc
adc
cmpsl
sub
mov
test
or
inc
xchg
add
in
cmp
mov
repnz
bound
lods
xchg
pusha
jo
jl
mul
cmp
xor
push
push
aaa
xor
push
add
mov
rcll
fildl
jmp
mov
popf
mov
sbb
rol
sub
xchg
pop
xchg
pushf
stc
out
sbb
adc
fistpll
imul
jecxz
adc
cvtpi2ps
inc
push
jnp
call
pop
mov
ret
add
insl
mov
bound
and
das
adc
popf
pop
xor
push
mov
mov
sbb
lea
mov
inc
imul
mov
cmp
stos
dec
mov
jp
lods
ljmp
mov
mov
xchg
push
xor
push
xchg
out
jmp
lahf
fildll
lret
xchg
jmp
dec
pop
jp
loop
aas
sub
sbb
pop
or
pop
adc
pop
stos
add
fiadds
xor
mov
cmp
xor
dec
inc
imul
push
aaa
call
or
jmp
adc
subl
pop
push
mov
inc
lret
and
cmp
inc
mov
ret
jne
push
cltd
xlat
movsb
dec
xchg
or
lret
out
dec
xor
jne
divb
subl
inc
cmpsl
out
pop
inc
test
mov
mov
flds
add
push
test
stos
dec
inc
test
mov
cmp
or
xor
icebp
pushf
fsubl
adc
fwait
test
or
scas
lret
shl
adc
mov
xchg
outsb
inc
outsl
aam
or
sbb
std
mov
adc
jecxz
inc
push
ret
xor
int3
imul
or
and
out
xlat
xchg
add
mov
adc
call
or
lret
xlat
pop
ret
mov
sub
jae
jo
or
push
ret
and
xor
dec
mov
mov
cwtl
xchg
shl
jp
add
push
pop
mov
cltd
repnz
pop
mov
mov
push
xorb
jl
sub
adc
daa
lahf
addb
fdivl
into
jnp
or
sub
push
xor
sbb
shll
shr
std
fwait
sbb
push
jl
push
mov
pop
testl
dec
adc
das
cli
dec
daa
lret
adc
lahf
imul
ret
fistps
outsl
jnp
cltd
jp
pop
outsl
lods
fisttpll
push
fimull
stc
jo
jle
fcoms
inc
cmp
es
fwait
scas
clc
jge
iret
mov
inc
pop
mov
sbb
xor
jno
adc
ss
in
ret
pop
and
jnp
inc
in
pop
xchg
in
rcl
cmpb
in
subb
call
stos
pop
inc
xchg
and
or
rorb
lock
mov
sbb
movsl
les
ljmp
aad
jnp
jle
loop
adc
outsb
cwtl
iret
jne
nop
xchg
pushf
jge
js
test
lods
push
mov
or
jp
incb
pop
push
push
inc
mov
cmpsb
mov
dec
clc
sub
cmp
aam
aas
sbb
int3
jg
push
mov
imul
adcl
aam
leave
int3
movsb
adc
add
mov
aas
les
daa
outsb
and
mov
arpl
add
repnz
jp
mov
rclb
push
mov
rclb
push
adc
les
fildll
push
or
lret
movsl
aam
xor
fmulp
idivl
repnz
out
inc
xchg
mov
aaa
popf
and
mov
es
in
push
cwtl
insl
movsl
sub
mov
stc
mov
xchg
xchg
sub
cmpsl
jge
test
rclb
pop
xchg
lret
scas
cli
mov
and
addr16
xor
xchg
mov
xchg
mov
jae
xor
clc
pusha
xchg
sbb
pop
push
mov
mov
sub
jb
jp
cmp
lahf
sbb
pop
or
addr16
aad
sarb
adc
lods
jnp
hlt
insb
add
cmpsb
adc
lods
mov
repz
xor
xchg
add
aad
shlb
push
jg
aam
mov
aaa
test
and
jbe
arpl
mov
push
ffree
mov
mov
add
or
mov
data16
test
xchg
mov
decb
sarb
inc
mov
fcmovnb
xlat
cmp
pop
sub
enter
jge
pop
cmp
hlt
push
dec
pop
shlb
in
push
push
lods
inc
jnp
iret
je
pop
test
push
outsb
jp
sub
lock
pop
cmp
mov
and
adc
movsb
shll
xor
inc
iret
je
outsl
insl
jne
ja
jne
cmp
mov
addr16
rorb
mov
sar
aad
fsubs
dec
xor
popa
jp
lods
lret
sub
test
cli
jp
adc
sti
aaa
sbb
pop
pop
mov
es
cwtl
jbe
jns
cmp
in
iret
pop
jl
movsb
inc
xchg
mov
or
and
sub
cmp
testb
icebp
loop
add
xchg
lds
jo
je
mov
lret
jbe
aaa
jb
push
jle
sub
xchg
and
add
add
fwait
sahf
or
fdiv
inc
and
inc
jl
xor
dec
sti
push
rcrl
fdivr
sbb
jns
pop
stos
pop
sub
or
pushf
dec
or
ja
cmp
xchg
sub
and
xor
icebp
leave
jge
pop
outsb
test
xchg
pop
push
dec
sti
mov
inc
push
sbb
lds
call
jns
imul
pop
sbb
xor
push
or
sti
test
out
mov
jmp
push
or
cmp
sbbl
fwait
mov
pcmpgtd
push
adc
cs
inc
push
aas
cmc
cmpsb
pop
pushf
mov
mov
testb
les
or
imul
adc
sub
jae
or
xor
ja
xchg
mov
ficomps
fldenv
arpl
mov
jns
lret
shll
adc
pusha
pop
or
andb
aas
xchg
aad
and
inc
test
sub
inc
mov
sbb
add
xlat
sbb
jp
frstor
cmp
adc
aam
push
sbb
jecxz
fs
adc
scas
jge
pop
dec
jb
pop
and
xchg
fidivs
jb
in
adc
jnp
insb
jle
stos
bound
push
sahf
push
fnstsw
mov
in
jl
add
mov
sub
cwtl
rcrb
lods
xchg
push
mov
icebp
stc
ficoms
push
loop
jb
lea
xchg
lods
aaa
testb
lds
mov
jl
or
call
addb
out
dec
aad
sbb
adc
inc
dec
jne
aam
and
inc
pop
ja
pop
pop
adc
int3
inc
cmc
pop
cmp
sbb
shr
stos
xlat
cmp
and
cmp
lods
jge
test
int
clc
ja
sbb
mov
or
push
fcoml
dec
sti
rcrl
xchg
rcrb
mov
mov
mov
jbe
out
cmpsl
shll
es
mov
xchg
pop
sqrtps
leave
test
cmp
xchg
fbld
jne
int3
iret
mov
hlt
or
inc
lock
cmp
bound
push
es
mov
adc
lret
outsl
cmp
sbb
imul
cmc
or
pop
rorb
xchg
mov
cwtl
jp
out
fnstsw
pop
sbb
jo
mov
cmp
in
mov
mov
shl
push
add
iret
je
movl
xchg
mov
dec
and
mov
add
test
or
ds
je
shl
pusha
gs
xor
lea
enter
push
sub
ss
lret
fistl
pusha
xchg
xchg
push
push
inc
xlat
cmpsb
or
sub
xor
push
cltd
sub
into
mov
insb
or
aas
xor
notb
inc
lds
mov
dec
and
sbb
push
ss
xlat
movb
sub
shll
or
mov
push
int3
pushf
lcall
std
push
imul
xchg
push
add
fcmovnbe
push
cmc
mov
in
pop
cmp
push
and
adc
pop
sub
mov
cmp
outsb
xlat
sub
sbb
fisubs
in
jle
push
jno
daa
aas
jl
ja
daa
xchg
add
mov
mov
mov
sub
jns
push
int
fxch
inc
pop
cmpsl
sahf
test
xchg
fs
jo
fdivrp
sub
cs
jnp
sti
shl
movsl
div
push
in
push
imul
pop
push
movsb
in
cmp
out
mov
jp
stc
out
xor
jle
or
xchg
cltd
inc
mov
mov
icebp
mov
cmp
add
jp
dec
mov
push
out
orl
or
add
lret
in
hlt
insl
lea
outsl
scas
in
sub
mov
into
mov
pop
imul
add
mov
add
std
jae
lret
int3
add
mov
pop
cmp
jmp
mov
mov
adc
push
out
aas
inc
adc
xchg
push
mov
sbb
inc
stos
sbb
repnz
ret
cmpsb
movsb
les
mov
fs
subb
outsb
ret
insb
jge
or
popf
sub
scas
push
xchg
hlt
push
xchg
sub
sub
jne
inc
jle
xchg
and
dec
aas
imul
movsl
pop
retw
xor
hlt
push
or
sub
ljmp
sub
int
mov
push
test
pop
in
jg
sub
xchg
imul
or
and
xchg
push
push
push
lret
sub
jecxz
sbb
fistps
dec
fstpl
pop
cmpsb
and
jbe
fisttpl
loopne
shlb
imul
fs
sbb
cmp
sub
inc
push
lret
adc
jl
test
pop
clc
add
icebp
cvtps2pi
xchg
xchg
cmpsl
jecxz
cmc
mov
or
addr16
jmp
adc
jnp
lahf
js
mov
test
cmc
push
and
andb
push
dec
or
mov
sub
dec
add
hlt
adc
into
sbbl
or
mov
push
in
dec
lods
mov
dec
push
outsl
pop
sub
pusha
mov
jbe
lret
sub
aas
cmp
ds
adc
daa
movb
xchg
sbb
fmull
jecxz
xchg
shlb
sbbl
sub
loop
aas
sub
dec
int3
push
pop
scas
xor
aaa
test
sarl
dec
sub
and
add
decl
sub
xchg
cmc
xor
mov
xlat
ja
scas
aaa
mov
dec
add
or
in
cltd
nop
push
outsb
mov
daa
jmp
int3
negb
sbb
stos
addb
sub
inc
xchg
mov
lret
pop
mov
mov
jno
pop
dec
xor
jle
and
out
out
ja
ret
cwtl
andl
loop
pop
and
rcll
cwtl
mov
scas
ljmp
cwtl
nop
jne
leave
jae
sbb
push
or
pop
popf
cmp
xchg
xor
test
push
add
cmp
cltd
scas
or
out
test
mov
es
pop
fimuls
mov
and
push
adc
inc
lock
push
aas
mull
adc
adcl
inc
jle
sbb
fistpll
xchg
xor
fs
jb
cmp
push
or
neg
mov
inc
pop
xlat
idivl
lock
mov
push
sbb
arpl
test
daa
enter
orb
mov
aaa
mov
bound
jg
add
inc
adc
xchg
aam
mov
arpl
das
les
addr16
xchg
insb
mov
fs
fistpl
mov
sbb
inc
out
adc
inc
int
shrb
xlat
fcmovnb
fbstp
sub
test
cli
cmc
dec
adc
cmpsw
xor
gs
cmp
pop
cmp
data16
aad
mov
imulb
push
mov
gs
ljmp
pop
std
inc
ffreep
lods
mov
cmp
jge
cmp
in
frstor
sub
loopne
and
lret
push
in
hlt
in
mulb
es
mov
sbb
mov
mov
dec
nop
lock
lcall
mov
inc
xor
rcrl
sbb
push
aam
push
scas
test
in
ja
ds
out
aaa
cli
add
insb
lcall
int3
inc
out
js
popf
sbb
lahf
jae
mov
jle
and
adc
loope
in
lcall
je
mov
cmp
add
sub
add
xchg
inc
loopne
inc
push
cmpsl
out
push
data16
fiaddl
pushf
out
movsb
subb
add
mov
loope
sti
push
inc
pop
int3
stc
cli
push
in
adc
aam
sbb
inc
mov
adc
sbb
cmc
cmpsl
cli
push
les
jnp
jo
jp
jo
test
pop
mov
and
inc
stos
pop
add
pop
add
pop
lods
dec
mov
adcb
gs
int3
pop
jle
call
cmc
add
and
jecxz
dec
jl
xor
lods
rorl
add
in
sbb
rorl
push
addr16
js
les
sub
mov
xchg
dec
bound
xchg
iret
aam
add
or
and
and
jne
jp
test
pushf
syscall
cmp
test
call
add
or
cmp
and
popl
out
mulb
mov
sbb
xchg
aam
inc
sahf
repz
insb
mov
lcall
mov
xchg
mov
pushf
sbb
jo
jecxz
cmp
fcoml
aas
lods
es
and
call
hlt
push
lret
dec
sbb
fcmovbe
cld
enter
xchg
inc
test
xor
pop
rclb
sbb
cmpsl
mov
mov
cmp
jl
inc
imul
xor
and
icebp
popa
mov
leave
lea
jb
out
das
jp
mov
xor
stc
les
cs
sub
lods
push
les
rol
std
inc
je
adc
daa
out
push
mov
mov
jne
sbb
mov
dec
push
or
mov
test
jns
or
mov
test
arpl
add
aaa
sub
leave
or
shlb
loope
jp
popf
mov
je
cwtl
inc
addr16
lcall
lods
out
nop
mov
mov
mov
inc
dec
mov
stos
adc
sub
fstps
mov
adc
mov
adc
or
xlat
int3
cmpsb
das
xchg
push
push
add
loopne
mov
xor
cmpsl
or
sub
or
enter
inc
sub
popa
repnz
adc
push
xor
outsl
scas
push
jb
fwait
out
xchg
and
mov
fmul
lods
pop
pop
bound
mov
int3
push
jle
sti
cmpsl
mov
int
in
cwtl
into
mov
movb
rcll
or
test
push
mov
or
pop
jp
fsubl
fcmovnbe
lret
cmc
jnp
dec
lahf
xchg
pop
xor
in
mov
sub
mov
lahf
adc
sbb
test
or
sbb
lret
repz
lret
xchg
int
imul
inc
out
mulb
lods
out
fimull
es
out
push
cmc
je
xchg
ja
xchg
inc
pusha
repnz
jmp
push
mov
rolb
xchg
sti
xchg
xor
pop
push
cmp
push
push
dec
lahf
jbe
pop
fcoml
xor
cmpb
je
idiv
scas
mov
mov
push
out
mov
fists
jnp
push
nop
test
xorl
adc
das
jge
cmp
xlat
mov
enter
xor
les
push
pop
or
addl
inc
test
and
dec
out
pop
test
aaa
sub
push
ja
lret
les
roll
or
cmp
xorb
fsubl
lret
insl
sbb
inc
or
and
lock
sarb
add
sbb
xor
testb
add
aas
pop
pop
imul
fistps
in
imul
cmc
mov
mov
and
lret
mov
jne
jecxz
dec
out
push
push
add
and
loopne
shrb
push
add
jns
xchg
inc
in
roll
in
inc
push
arpl
je
std
pop
sub
gs
jne
mov
in
fdivrp
repz
and
add
imul
mov
movsb
mov
out
dec
test
cmp
xor
xor
lahf
push
push
das
popa
push
jne
adc
sbb
sbb
call
push
dec
sbb
imul
push
test
and
sbb
leave
pop
inc
sbb
loop
insb
cmpsl
imul
pop
xorb
or
mov
pop
movsb
xchg
sub
mov
in
mov
mov
inc
mov
shll
xchg
mov
popf
mov
push
jo
stos
cltd
ror
sbb
mov
js
adc
and
xor
xchg
ds
sub
xchg
es
inc
push
int
adc
xor
dec
xor
inc
imul
sub
mov
lahf
jl
xchg
int3
in
test
rcrl
jl
outsb
push
add
pop
mov
fisubs
hlt
pop
jb
jg
ss
out
jmp
jl
pushf
mov
ja
stos
lods
imul
fdivrl
shlb
cmpsb
sbb
cmc
addb
out
mov
cmp
mov
insb
jb
mov
adc
imul
pusha
and
sti
vmread
shlb
xor
mov
sbb
and
lods
clc
ror
xor
pop
adc
cmpsl
sti
out
and
dec
sysenter
xorb
or
sahf
and
imul
push
push
lret
cmp
into
loop
xchg
mov
btr
add
xor
icebp
hlt
ja
inc
mov
jne
fwait
bound
repz
stos
sbb
stos
call
jns
nop
leave
sub
popf
fstpl
aas
jo
xor
push
bound
sbb
cwtl
dec
ss
gs
push
mov
or
in
add
sbbb
jg
arpl
jl
add
lret
fmul
andb
lahf
lods
add
xchg
adc
sub
shlb
fbstp
xor
push
shlb
dec
sbb
shrl
scas
lods
repnz
mov
test
xor
cmc
dec
je
scas
inc
jae
outsl
mov
and
cmp
push
cs
jg
mov
adc
repnz
pop
out
repnz
or
mov
lret
sbb
jno
add
out
mov
push
test
pop
test
or
hlt
xor
mov
fiadds
jg
cmpsl
jmp
jb
sahf
jle
in
popa
xchg
sbb
cld
clc
je
arpl
xchg
cs
icebp
mov
je
add
xor
xchg
inc
jl
jb
arpl
stos
add
jecxz
mov
out
addr16
mov
fbld
pop
jns
mov
mov
mov
xchg
push
andb
cmp
cli
std
fmuls
lcall
sahf
int
cwtl
in
divb
pop
push
stos
inc
dec
ret
arpl
push
mov
cld
push
movsb
mov
jge
fidivs
divl
mov
inc
in
mov
aas
mov
cld
mov
and
lret
in
pop
aam
inc
sbb
xchg
sbb
dec
xchg
push
out
mov
mov
scas
fstl
into
movsb
mov
xor
mov
inc
and
cmp
jp
push
call
into
int
rcrb
addr16
jo
dec
daa
xor
punpckhwd
pop
mov
inc
pusha
adc
aam
shll
fcomps
dec
xor
cmp
and
inc
xchg
pop
ja
iret
mov
fcmovne
mov
xchg
int
mov
mov
popf
aaa
xchg
iret
inc
sahf
ret
xchg
or
xor
xor
inc
std
add
xchg
dec
inc
push
add
and
dec
mov
insb
add
mov
adc
push
sub
push
pop
jmp
cli
out
adc
dec
pop
in
jg,pt
inc
xlat
push
cmc
fsubrs
and
rorb
xchg
fnstcw
mov
pop
ds
push
jl
into
je
test
dec
xor
pop
mov
jp
mov
sub
or
mov
or
insb
loope
shll
cli
jp
xor
pop
leave
pop
mov
sti
arpl
fidivrl
je
or
in
fucomip
xor
push
jge
je
and
sbbl
faddp
mov
cmp
bound
push
cmp
mov
in
fdivrs
jg
pushl
mov
cmc
clc
and
out
pop
pushf
mov
mov
icebp
outsb
pop
imul
fdivl
sarb
xchg
sbb
xchg
mov
arpl
out
jg
push
out
fwait
add
dec
pop
fwait
sbb
push
leave
rclb
mov
or
test
out
ficoml
clc
mov
or
push
inc
cmpsb
test
arpl
imul
pop
les
insl
or
mov
mov
enter
jo
mov
cld
sbb
push
sti
test
xchg
pop
and
not
sti
cld
sbb
int3
or
popa
inc
enter
js
pop
sahf
and
aaa
es
mov
outsb
pop
pop
cmp
mov
imul
inc
je
mull
loop
dec
ss
jo
pop
mov
sarl
lds
adc
sub
push
fnstenv
imul
jne,pn
mov
inc
scas
fbstp
mov
and
fsubp
addl
or
fs
ss
or
into
mov
test
std
cmpsl
mov
pop
insl
out
bound
xchg
out
adc
dec
aaa
pushf
sub
push
mov
add
jmp
sahf
jno
xchg
jne
mov
mov
adc
outsl
xchg
insl
stos
addb
cld
adc
adc
push
shrb
jo
ss
xchg
xchg
push
lahf
push
cwtl
pop
mov
or
ljmp
mov
imul
and
cwtl
cmp
cmc
nop
adc
push
lret
subl
cmp
add
dec
pusha
add
sbb
subl
imul
mov
lahf
and
pop
sahf
adc
das
into
pusha
lret
out
cmp
scas
lock
inc
test
xor
stc
ffree
mov
cmpsl
clc
fbld
jo
imul
lret
sti
jle
cmp
sub
add
aaa
cmpsb
push
outsl
out
mov
add
lock
aas
pop
lret
std
mov
mov
cmpsb
lret
xchg
testl
dec
rorb
mov
dec
negb
loop
jno
call
frstor
pushf
lds
pushf
xchg
leave
das
or
inc
aad
pop
shlb
add
repnz
idivl
ret
add
pop
or
push
push
xchg
cmp
mov
dec
xchg
push
dec
jno
int
iret
pop
loop
lahf
lea
insb
mov
mov
sbb
shlb
scas
sub
cmova
mov
out
jmp
sbb
xchg
mov
jbe
idivb
repz
int
movsb
add
xor
mov
xchg
xor
inc
stos
jg
jbe
rcll
mov
adc
mov
lods
pop
dec
sbb
pop
cld
xor
out
mov
pushf
das
sbb
push
push
sbb
inc
addr16
dec
dec
call
out
mov
inc
adc
les
and
sub
and
xor
mov
mov
inc
mov
notb
test
lea
leave
out
in
test
jp
sub
ficompl
mov
insl
jge
aam
adc
sbb
out
inc
push
adc
ss
sub
les
or
push
loop
rorb
sub
popf
mov
xor
movsl
nop
push
fwait
xchg
insl
pop
dec
mov
or
std
testb
popf
dec
push
out
stc
dec
aam
cmp
lcall
outsb
cmp
xor
jg
dec
popa
outsl
lea
add
adc
mov
jle
fcompl
push
movsb
ret
or
push
insl
adcl
cmp
loope
repnz
jl
repz
dec
shlb
or
inc
jmp
sbb
push
xor
int3
cmp
sbb
or
adc
aad
inc
rcrl
mov
mov
jmp
test
pop
and
hlt
insl
aaa
mov
jp
push
xor
mov
jmp
enter
add
int
jle
mov
lcall
call
mov
pop
push
and
mov
jnp
sub
ljmp
insb
pop
sbb
fsubs
xchg
loopnew
mov
sub
and
repz
ja
mov
or
jo
and
adc
and
lea
jno
cli
and
sti
add
imul
lret
insb
insl
xor
stc
movsl
add
cmc
or
in
jmp
xchg
iret
inc
jne
cmc
sti
or
paddsw
scas
movsl
sbb
add
inc
xchg
add
insb
std
fmull
adc
lcall
adc
rcll
clc
jp
lods
out
xchg
adc
pop
pop
call
hlt
fsubr
loopne
dec
fstpl
jo
sahf
xchg
jg
xor
sarb
aas
push
mov
xchg
lds
pop
adc
add
fistl
cwtl
test
cmp
or
mov
add
lods
in
insb
xchg
mov
adc
lahf
fistpll
mov
aaa
cmpsl
outsw
jne
push
out
push
mov
dec
pop
lcall
jns
mov
dec
or
fisubrs
sub
inc
inc
mov
rclb
adc
mov
cmp
xor
in
shl
inc
jg
sbb
sub
or
int
mov
sbb
pusha
lea
popa
adc
jbe
icebp
inc
xchg
aad
dec
add
leave
and
or
enter
ret
inc
and
xchg
in
dec
popf
icebp
mov
and
fwait
jnp
jns
pop
cmpsb
cli
mov
push
es
and
fdivrl
pusha
loopne
mov
add
jb
icebp
ss
lock
push
jne
and
clc
mov
std
adc
or
mov
mov
mov
lret
dec
into
das
fiaddl
mov
jae
pop
rcrl
pop
xor
popa
scas
in
ret
dec
jp
and
aaa
loope
adc
sbb
or
cmc
icebp
pop
pop
movsb
jne
mov
mov
cld
es
push
subb
dec
xchg
rclb
lret
adc
and
xchg
and
dec
pop
jns
mov
mov
int
and
mov
in
leave
push
dec
ds
fnstenv
mov
dec
roll
ljmp
add
jge
lret
aas
xchg
mov
cmpsl
xchg
sub
jg
adc
leave
sahf
cltd
paddusb
sbb
test
sbb
sbb
mov
mov
negl
ret
into
or
popf
push
push
dec
stc
cli
mov
outsl
cltd
jno
and
test
hlt
inc
imul
rcrl
sbbl
cmp
pop
add
jbe
fldl
push
and
adc
movsl
sbb
sbb
sti
ljmp
or
push
out
jne
and
dec
js
loop
xchg
outsl
hlt
push
out
adcb
mov
fistl
es
adc
mul
shlb
cs
ret
pusha
rcrb
push
lahf
mov
push
jbe
mov
jae
sub
insb
push
dec
jnp
jae
or
inc
sub
cmpsb
sbb
hlt
fiadds
sbb
push
aas
mull
push
or
mov
cs
cli
cltd
sub
cmp
test
xor
mov
popa
lcall
addl
jns
jp
sahf
loope
mov
arpl
mov
js
mov
and
movsb
sbb
dec
repnz
lret
inc
iret
sub
int
hlt
and
cld
pushf
das
mov
xchg
cmp
and
fdivs
sub
adc
cli
lret
cmc
inc
pop
dec
int3
shll
cmp
aaa
int3
jbe
mov
xchg
dec
cmc
testl
pop
rolb
add
fwait
out
sub
jg
fcomi
jnp
push
push
dec
adc
mov
sub
arpl
imul
fs
lret
test
and
jno
or
sbb
mov
rcr
mov
add
ja
addb
jb
popf
in
pop
push
inc
hlt
dec
xor
test
add
in
xchg
or
add
push
or
or
xlat
push
pop
fdivrs
push
pusha
jmp
shrl
sbb
mov
push
push
add
in
jns
shll
outsl
int
fmull
adc
mov
push
insl
jne
ljmp
jno
mov
fidivrl
lods
pop
test
pop
cmp
sub
sti
mov
repz
jmp
addl
jns
insl
jbe
out
push
sub
lret
adc
cmp
sbb
sub
das
dec
xor
loop
lahf
and
dec
or
gs
cmpsb
jo
cli
cmc
cwtl
lods
movsl
or
imul
and
out
jnp
mov
pop
xor
call
movsb
test
in
popa
popa
adc
cmp
hlt
pop
inc
mov
or
cmp
filds
mov
movsl
add
dec
xchg
dec
ss
stc
push
ror
int
ja
sahf
xor
mov
fadds
jno
ja
cmp
jl
sahf
sub
lahf
cmpb
inc
enter
sbb
es
sbb
out
call
jg
jge
mov
rorb
call
in
ret
dec
sbb
pop
xor
cmp
rcr
imul
inc
add
in
pop
lahf
inc
push
inc
adc
jne
in
sub
dec
sub
dec
ss
inc
sub
roll
out
mov
jns
mov
rorb
dec
mov
dec
lock
in
aad
xor
lret
and
movsl
and
fnstsw
mov
pusha
jno
or
cli
add
xorl
inc
stos
daa
stos
mov
add
std
nop
mov
jle
iret
xchg
popf
outsl
test
aas
loopne
inc
pop
les
sti
dec
push
mov
into
jbe
popa
int
mov
out
icebp
dec
push
mov
mov
push
pop
xchg
insb
pop
dec
shlb
dec
out
mov
add
or
cmp
movsb
xchg
sub
or
cmp
inc
push
faddl
mov
inc
jo
pop
cmpsb
pop
add
insl
mov
scas
lock
hlt
inc
cmp
xor
imul
push
mov
movsl
mov
cmp
mov
adc
inc
aad
mov
sbb
negl
pop
rorb
dec
sub
inc
sbb
nop
cmc
in
popf
test
dec
lds
ficomps
mov
fdiv
lods
add
stos
out
dec
hlt
pusha
test
pushf
mov
sti
dec
inc
sbb
pop
jg
mov
je
or
xor
popf
daa
dec
outsb
cmp
mov
notb
mov
and
jl
gs
pop
aaa
aas
lods
lods
jno
popa
movsl
stos
imul
addl
loopne
mov
xor
jbe
and
fyl2xp1
mov
xor
push
mov
cs
popf
inc
push
aad
into
or
push
add
xlat
xchg
xchg
fcmovnu
imul
mov
cmp
fisubs
popa
xor
fisttps
int3
orb
loopne
test
imul
cltd
aam
or
mov
xor
scas
jae
xor
shll
scas
mov
mov
mov
lret
push
enter
into
cli
arpl
mov
aaa
call
ljmp
mov
push
inc
jmp
mov
mov
mov
mov
addr16
pop
ret
ret
or
or
stos
stos
or
shlb
std
pop
sbb
nop
sbb
or
sub
in
leave
xchg
loop
lods
pop
fldenv
incb
or
sub
mov
pop
xor
inc
fsub
cmp
mov
cmp
mov
fcomps
mov
ss
pop
add
movsl
outsb
loop
add
test
xchg
xchg
pop
cltd
mov
jns
jmp
sti
inc
rcrl
dec
cmp
pop
add
jno
bound
int3
mov
add
mov
add
sti
mov
mov
mov
jo
fs
ja
and
cmc
push
fsubrl
es
arpl
fisubl
pop
cmp
out
add
outsl
das
arpl
add
push
and
adc
insl
xchg
lret
xchg
sti
insl
call
fstl
cld
jmp
mov
xchg
fnstcw
xchg
lds
push
add
add
adc
jmp
leave
cmc
pop
push
jge
aaa
clc
ja
test
and
xchg
movsl
xchg
adc
in
cld
movsb
sbb
pusha
ret
jbe
add
mov
lcall
fistl
outsb
jp
jno
daa
cld
fstl
leave
mov
enter
xchg
mov
jnp
outsb
nop
movsl
sub
add
icebp
and
aad
leave
xchg
mov
jp
fwait
in
fcmovnb
push
pop
fwait
lret
mov
out
gs
inc
pop
cmpsl
stos
push
cwtl
std
out
aas
jae
cmp
xor
dec
or
lea
loop
imul
out
test
notl
pop
movswl
lds
ja
into
fiadds
dec
pop
popa
bound
dec
or
lock
sbb
hlt
iret
insl
jno
pushf
lahf
jl
xor
popa
mov
mov
push
loop
out
or
outsl
dec
fcoml
adc
adc
roll
outsl
in
push
lret
cli
dec
shlb
xchg
jge
cli
mov
push
mov
in
stos
lods
add
and
xchg
xor
jnp
jecxz
adc
bound
xor
sbb
xor
sub
insl
divps
aaa
or
pop
mov
je
lret
inc
sbb
mov
xchg
mov
mov
movsb
mov
and
int
cmp
dec
pop
sti
push
xor
jnp
shl
les
xchg
sbb
out
push
xchg
xchg
mov
sbb
push
into
aaa
cmp
mov
mov
hlt
push
inc
scas
popf
xchg
mov
xchg
jno
adc
clc
les
icebp
adc
sub
mov
sbb
xor
pop
fbstp
das
je
fsts
mov
ds
add
inc
cmp
out
xor
inc
and
xchg
loop
cs
mov
inc
or
push
jbe
inc
mov
adc
cmp
or
mov
jle
insb
jg
mov
stos
and
loope
xchg
lock
push
out
fimuls
jbe
movsl
jmp
filds
js
mov
mov
imul
and
lret
sub
aas
adc
fisttpll
adc
sbb
in
adc
fmull
pop
sub
aaa
cmp
sbb
cmpsl
push
sub
or
je
jecxz
push
xor
sub
ljmp
mov
jno
mov
lret
test
lods
or
in
sub
out
jno
fstl
insb
mov
fiadds
dec
int3
mov
add
call
or
pop
mov
mov
add
cmp
adc
dec
inc
sub
rcr
push
jl
fincstp
adc
lods
jo
test
ljmp
outsl
push
mov
fcmovnb
mov
popa
add
add
jne
cmp
in
lahf
out
mov
mov
push
jne
into
mov
dec
sub
mov
mov
push
mov
repnz
in
pop
mov
mov
fisubl
sbb
mov
push
scas
fnstenv
inc
imull
fdivrs
sub
jg
addb
push
push
add
mov
cmpsl
stos
pop
fisttpll
mov
dec
rorl
ja
jbe
lock
adc
test
bound
or
pop
pop
mov
mov
adc
xchg
jle
stos
icebp
jne
clc
lret
push
out
scas
imul
or
hlt
inc
movsb
lcall
fisubl
aas
cmpsl
or
fistpl
loopne
adc
lods
fimull
loop
cmpsb
adc
cmp
push
mov
mov
or
mov
shr
xor
ret
dec
mov
int3
ffree
inc
aas
fistpll
adc
adc
cwtl
inc
ja
mov
mov
repz
cld
dec
and
lods
xchg
mov
rorl
cmp
insb
xchg
pop
pop
ja
xchg
outsb
xchg
andl
fadd
fcoml
outsb
call
jge
into
jle
rcll
cmp
push
sub
scas
cmpsl
inc
add
sbb
stc
imul
stos
in
xchg
outsb
and
adc
adc
xor
mov
ss
ret
sub
dec
add
mov
insb
jns
push
cmp
cmp
out
lods
aam
mov
jmp
jne
push
insl
dec
pmuludq
jno
jecxz
rcl
and
mov
test
push
daa
sbb
aas
lret
inc
and
loope
jp
sbb
in
test
sbb
ja
lahf
lret
pop
xchg
aam
imul
loope
loope
mov
dec
clc
inc
cmp
cld
cmp
cmp
dec
loope
lock
rol
icebp
xchg
xor
mov
lahf
push
inc
mov
jnp
lret
je
andb
or
out
orl
pop
popa
testl
int3
xchg
out
mov
lds
pop
ds
scas
jl
rcll
jge
cmp
mov
mov
jns
aas
incb
adc
stos
inc
fmul
xchg
dec
mov
movsl
push
mov
mov
in
or
sti
mov
sbb
loope
mov
adc
mov
adc
or
ret
push
cmp
or
in
dec
int3
std
adcb
test
jecxz
xor
ljmp
xchg
aad
ror
outsl
or
std
into
mov
stos
arpl
dec
aaa
or
or
add
xchg
jecxz
jb
orb
push
cs
cmp
sbb
and
xor
iret
outsb
aaa
sub
daa
pop
mov
xchg
inc
add
insb
int
xor
adc
xchg
sub
ja
lods
push
jge
lcall
test
inc
pop
movq
pushf
sbb
pop
add
cmp
mov
lcall
xchg
pop
mov
inc
mov
xchg
mov
xchg
or
cwtl
mov
mov
ret
arpl
negb
stos
pusha
popa
xchg
jne
sub
push
lods
xchg
push
push
lods
pop
pop
movsl
cmp
and
and
ret
ficoms
movsb
lods
outsb
pusha
mov
popf
sti
cmpsb
sbb
ja
push
ret
or
js
xchg
dec
dec
fs
pop
hlt
sub
push
pop
jecxz
pop
jo
pop
inc
imul
fsts
add
lock
cmp
adc
dec
adc
push
xor
inc
pop
sub
cmp
push
and
mov
xchg
jnp
fstpl
xor
fists
and
cmp
xchg
pop
mov
je
jo
pop
dec
adc
xlat
jae
xchg
mov
adc
lock
push
pop
adc
clc
xor
adc
dec
xchg
jb
pushf
mov
xchg
scas
jne
inc
sub
loopne
push
das
inc
pop
mov
es
inc
pop
sub
jno
lret
push
mov
sub
lods
and
popa
inc
pop
int
dec
les
lret
fcoms
out
sbb
es
xchg
in
sahf
test
and
adcl
dec
imul
ror
scas
leave
mov
jbe
mov
cmp
data16
outsl
sub
test
ds
cltd
push
push
add
dec
leave
sub
inc
scas
or
mov
mov
or
out
adcl
outsl
and
sub
cmp
stc
ss
mulb
test
stc
es
jecxz
xchg
or
addr16
rcr
jle
hlt
xor
gs
dec
nop
or
fstl
rcr
fidivrs
sbb
push
dec
push
push
cmp
lods
iret
fimuls
ja
repnz
or
sub
lds
xchg
arpl
mov
mov
aad
stc
bound
push
xlat
cmp
jge
daa
pop
cmp
test
xchg
ds
pop
jbe
dec
inc
add
imul
cmp
lds
push
sub
out
mov
aam
cmc
adc
add
add
mov
sarb
sub
aam
das
add
dec
cli
lds
cmp
mov
fmuls
adc
xchg
repz
clc
aam
je
imul
push
sub
mov
call
jl
dec
cs
push
in
bound
mov
insl
xlat
rcrb
negw
repnz
dec
mov
incb
loopne
ret
push
adc
stos
push
cs
sti
add
add
data16
and
shlb
enter
cmp
pop
out
ret
outsb
push
mov
aad
fsubl
in
adc
jno
stos
xor
loopne
iret
xchg
xchg
jnp
popf
or
or
rorb
xchg
das
int
nop
xor
stc
jne
cmp
and
push
leave
stc
mov
pop
sub
mov
cmpb
pop
loop
jnp
lcall
or
lcall
inc
fstps
fwait
sub
bound
pop
push
mov
inc
inc
xchg
in
add
dec
mov
sbb
jmp
lea
mov
icebp
arpl
ficoms
xor
mov
inc
jmp
pop
mov
or
and
cmpsl
leave
sbb
add
or
cmp
or
xlat
push
xorl
js
mov
sbbl
in
pop
icebp
js
push
sub
adc
mov
and
cmp
push
sbb
inc
pop
xchg
clc
rclb
out
leave
mov
popa
sub
push
movsb
les
iret
dec
ss
in
dec
sub
ljmp
mov
mov
in
addr16
nop
add
dec
dec
fimull
push
in
daa
pop
inc
pop
jo
popf
shl
in
xchg
loopne
pop
fstps
mov
leave
testb
rclb
and
jb
adc
xlat
lahf
add
sub
sbb
lret
test
lcall
mov
icebp
in
movsb
pop
add
inc
cli
jnp
movsb
stos
and
out
mov
cltd
xlat
push
xchg
jle
test
aas
mov
inc
and
stos
jo
mov
push
mov
fiadds
or
push
sti
test
adc
enter
addb
pushf
adc
adc
pop
test
push
lods
jecxz
jmp
stos
lahf
xor
sahf
add
xor
xor
pop
mov
int
loope
and
xor
loop
lret
adc
rcll
dec
out
lock
bound
cmp
mov
xchg
adc
xchg
aaa
sbb
xlat
mov
fstps
repnz
ss
push
imul
xlat
pop
sub
lea
dec
adc
in
and
movsl
mov
jle
cmp
loopne
ret
pop
lods
adc
outsl
nop
cli
test
shlb
in
cwtl
negb
rcll
sbb
lahf
lods
add
nop
fdivrs
xchg
aam
pusha
movl
fwait
mov
and
jae
and
and
pop
and
pushf
pop
pop
mov
lods
lahf
mull
std
push
xorl
loope
mov
cmp
andb
pop
mov
inc
push
jbe
mov
int
pop
movsb
xchg
fimull
add
mov
or
sbb
ja
dec
adc
pop
xlat
imul
loopne
pop
inc
cmc
pop
in
jecxz
outsl
insb
xor
es
and
xor
aaa
inc
pop
push
push
xchg
sbbb
stos
in
out
or
rorb
inc
in
xor
test
mov
mov
xor
jge
lea
lods
cmp
mov
add
inc
xor
cmp
sbb
mov
xlat
lods
and
sub
jmp
ficompl
fpatan
iret
pop
mov
or
test
add
and
add
sub
mov
jb
scas
and
sub
sbbl
or
imulb
ret
mov
int
or
mov
dec
jecxz
filds
in
xchg
nop
pop
mov
popf
xchg
sbb
xchg
pushl
xor
in
std
mov
lret
sbbl
loopne
pop
js
outsb
sub
in
enter
sub
sti
js
cmp
add
xchg
addb
mov
shlb
aad
and
cld
adc
xor
adc
pusha
lods
loop
lcall
inc
inc
shrb
fisubrl
jmp
sbb
push
gs
sub
fimuls
jecxz
pusha
jle
inc
jge
pushf
in
pop
sbb
sbb
cmp
in
aaa
sbb
xchg
add
hlt
jge
jge
mov
in
dec
scas
cmpb
cmc
add
inc
and
rcl
out
pop
and
xchg
orl
xchg
fxam
and
mov
clc
adc
cwtl
xchg
fldt
es
mov
pop
pusha
sahf
dec
push
lods
ljmp
cwtl
mov
xorl
enter
stos
dec
lret
js
cwtl
insl
int
and
inc
adc
xor
xchg
fwait
jg
shll
dec
lahf
or
in
pop
out
mov
inc
and
inc
and
loope
dec
aas
mov
pusha
lea
ja
lea
je
jmp
mov
and
inc
pushf
addr16
add
xor
imul
nop
aad
push
sarl
loopne
jecxz
sub
js
hlt
sub
fdivrl
cmp
fcompl
sub
cwtl
mov
jge
jno
push
sbb
dec
outsl
lcall
fisttpll
add
out
mov
ja
sarb
repnz
mov
xor
xchg
inc
cld
inc
js
dec
adc
xchg
cmp
dec
dec
push
push
fadd
xor
add
out
xlat
movsl
int3
ficoms
jne
mov
or
lods
ja
shl
dec
sahf
adc
cmovne
fcomps
xor
xlat
xchg
xor
adc
gs
int3
stos
push
sub
sbb
fdivr
subl
pop
repnz
out
add
adc
sub
jmp
pop
sub
pop
mov
dec
sub
jp
xor
add
xor
leave
jmp
inc
adc
adcl
sbb
jbe
adc
imul
jns
fsubl
pop
jle
out
movsb
and
gs
outsb
insb
dec
dec
jns
and
xchg
ret
dec
lds
pop
adc
popa
jnp
in
sub
pop
out
lds
mov
outsb
or
xor
insl
xchg
pop
xchg
loop
call
in
aad
jg
mov
icebp
call
xchg
mov
jbe
sbb
mov
xchg
push
orl
or
insb
rcr
aas
xchg
test
sub
xchg
daa
cmp
repz
xchg
arpl
cmpsl
push
adc
jne
cli
sbb
ss
inc
pop
jmp
in
pop
in
push
inc
push
dec
dec
and
out
mov
imul
inc
push
mov
cmp
es
inc
in
mov
stos
pop
lock
mov
jmp
push
hlt
inc
pop
and
xor
and
mov
xor
loope
fiadds
sbb
ja
imul
negl
fsubrs
mov
xor
xor
dec
adc
aad
sarb
mov
add
insl
mov
sbb
out
test
sahf
jl
loopne
adc
xchg
mov
or
xor
push
pop
xlat
cmpsl
mov
sub
and
xor
lds
jns
test
popa
sbb
pop
add
cmp
mul
fsts
sub
sbbb
ds
lods
imul
jae
ffree
dec
mov
mov
outsb
add
sub
xor
xchg
fsubl
insl
sbbl
cs
lods
rcrb
cli
out
test
test
cld
sub
sahf
fistps
lea
push
mov
xor
rolb
fistps
xlat
cmp
jno
mov
cmp
pusha
into
jge
stc
cmp
popa
sbb
dec
hlt
hlt
cmp
fucomi
push
dec
lds
aad
xor
mov
lods
inc
insb
cmp
cmc
push
sbb
insb
push
inc
add
sub
data16
adc
xchg
xchg
lods
and
cmp
pop
cmpb
les
mov
push
lods
cwtl
test
aas
and
xchg
or
pop
in
daa
cmp
pop
jb
and
push
repz
fnsave
jno
fcmovu
cwtl
dec
ret
mov
push
xor
sub
aas
add
lcall
test
jge
test
sub
xor
cmp
xchg
outsl
push
movsb
add
push
jnp
mov
lds
cmp
orb
jae
mov
dec
jnp
push
sbb
jmp
push
and
add
sbb
pop
add
jb
js
add
xor
fucomip
sub
insl
in
push
fldt
xchg
test
imul
sbb
inc
dec
jmp
jne
fadd
mov
sbb
sbbb
outsb
dec
pop
leave
mov
sbb
cli
aaa
stos
mov
inc
aam
add
ljmp
sarl
aas
loop
cwtl
cld
dec
sbb
in
cli
ja
pop
repnz
leave
cltd
xchg
loopne
out
sahf
mov
enter
push
mov
inc
cmp
scas
jbe
xor
xchg
push
adc
push
ret
dec
fs
pop
push
leave
icebp
sub
mov
and
sub
mov
dec
lds
jmp
mov
sub
and
stos
outsb
leave
pop
sub
sub
call
stc
adc
push
push
cli
dec
sbb
push
add
aaa
jmp
xchg
aas
int
insb
out
pop
pop
mov
jge
iret
aaa
loop
popa
add
mov
sarb
std
jp
sbb
jg
repz
loop
jns
js
pop
mov
push
roll
push
test
jg
fisttps
fisttpll
mov
sbb
sub
stos
push
sub
outsl
add
inc
repnz
roll
jge
lods
lea
pusha
imulb
out
lcall
stc
lret
out
sbb
push
mov
xchg
mov
push
pop
data16
leave
lds
iret
cwtl
jge
dec
out
out
xor
mov
cs
jno
imulb
lock
sub
and
int
lahf
push
iret
or
daa
hlt
out
ficompl
add
push
xchg
jbe
test
das
xor
sti
adc
mov
loop
in
sarb
mov
js
and
incl
mov
loop
push
mov
shr
into
adc
xchg
cmp
test
push
in
sub
das
iret
pop
cli
mov
popl
mov
stc
dec
inc
test
jg
or
mov
rol
lods
add
xchg
leave
fists
repz
mov
adc
add
or
push
mov
dec
mov
mov
jne
icebp
jne
sub
dec
push
sbb
jecxz
adc
or
pop
test
loopne
jno
inc
mov
popf
cltd
in
iret
add
jo
int3
cld
jns
rorl
mov
mov
mov
jnp
jmp
sbb
int
sbb
lock
shlb
mov
daa
inc
sbb
dec
push
out
not
clc
fdivl
add
sbb
xlat
lret
outsb
push
ljmp
jbe
jb
push
loopne
stc
or
jae
inc
aas
aaa
out
adc
or
inc
in
push
add
out
add
rorb
add
nop
cmpsl
mov
dec
xor
ljmp
pop
fdiv
call
cmp
pop
xor
jg
rorb
mov
push
or
cltd
mov
pushf
jge
fsubrs
xor
sub
jae
fstps
jbe
in
pusha
sub
and
jg
mov
test
js
inc
xor
test
gs
add
cmp
fdiv
pop
fidivrl
adc
adc
push
aaa
push
inc
stos
xchg
push
xlat
inc
test
dec
push
popf
sbb
int
pop
jns
fdiv
push
push
out
pop
imul
lock
pushf
cld
push
xor
sub
fcompl
movsb
lret
adc
pop
xor
push
and
push
add
mov
dec
inc
xchg
push
sub
sub
outsl
cltd
dec
sbb
lret
mov
mov
push
shll
das
aam
xchg
fbstp
push
xor
lret
adc
out
inc
sub
repnz
mov
das
cwtl
daa
pushf
rolb
xlat
les
test
loope
jge
setnp
adc
adc
push
pop
test
fldt
jecxz
mov
jl
or
in
sbb
cwtl
cld
jno
stos
mov
insl
xchg
mov
fs
pop
fdiv
in
mov
jmp
inc
and
push
aas
out
outsb
sbb
xor
jne
ljmp
and
ret
xchg
gs
jge
lock
mov
xor
jns
jg
test
int
cltd
pop
repnz
or
jmp
dec
xchg
add
sub
pusha
imul
cli
fnsave
push
pop
push
int
jns
adc
lcall
inc
cwtl
loope
ja
sbb
xchg
shll
adc
shlb
cmc
jmp
cmpsl
aaa
loopne
nop
jp
add
scas
sub
cmp
xchg
sbb
test
ss
mov
repnz
and
std
push
dec
sub
sub
mov
aad
push
dec
mov
sub
cs
xchg
sahf
fiaddl
lods
fisubrl
push
mov
addr16
mov
repz
jecxz
sbb
sub
push
shl
or
and
inc
pop
pusha
aaa
jb
add
insl
and
movl
fsts
je
inc
lret
repz
push
imul
outsl
mov
jecxz
mov
test
sub
sub
xorb
xchg
lock
lock
stos
movsl
sbb
inc
mov
mov
mov
and
loopne
jmp
ret
lcall
mov
inc
out
xchg
cmp
std
nop
push
jle
loope
push
inc
hlt
cmp
fidivs
arpl
xor
cmp
jae
popf
jns
iret
mov
sub
je
add
jb
fsubp
adc
repz
aam
push
lds
movsl
out
pop
push
and
jecxz
pop
insl
sti
add
mov
cmp
jae
jo
dec
icebp
jecxz
repnz
inc
fcmovnu
jo
and
xchg
mov
sbb
jl
xchg
dec
inc
pop
or
ficomps
out
push
mov
outsb
int
xor
stos
inc
fisubrs
cmp
repz
jmp
xchg
xor
iret
xor
jne
jo
insl
inc
int
or
mov
sub
xor
push
std
stc
push
in
dec
subb
cmpsl
add
mov
pop
js
pcmpgtd
jg
fs
xchg
jl
cmp
sbb
stos
adc
mov
mov
scas
jbe
jno
test
addl
mov
add
or
aaa
mov
inc
and
adc
aas
or
jg
jl
ret
gs
gs
ljmp
or
xchg
push
mov
xchg
mov
insl
stos
ficomps
jp
jnp
add
adc
ja
daa
xchg
or
dec
sbb
add
mov
add
inc
repz
stos
push
pop
sahf
clc
rcl
pop
enter
xor
cltd
movsb
pop
insb
clc
xchg
notl
icebp
xlat
jp
cltd
fcoms
xchg
add
add
pop
bound
add
je,pn
stos
insb
xchg
ljmp
sbb
shrl
dec
dec
sbb
sub
jmp
xchg
std
push
sbb
outsb
xor
clc
inc
mov
mov
pop
pusha
push
jp
mov
cmp
jo
sahf
and
rcl
punpcklwd
fsub
in
out
cmp
loop
mov
into
ret
or
js
dec
call
daa
data16
das
xlat
repz
push
add
or
push
stos
push
mov
mov
mov
dec
out
ss
cli
pop
adc
cs
rcrl
lods
repnz
cmpsb
rolb
mov
movsl
mov
jmp
or
nop
popa
out
mov
outsl
adc
aaa
test
and
inc
fisubs
jecxz
and
inc
lock
jb
imul
fisubl
jl
xor
mov
xchg
add
filds
mov
xchg
jo
rcrb
push
fimull
jo
insb
icebp
int3
js
mov
dec
add
jle
lahf
lret
adc
mov
mov
movsb
iret
sbbl
jl
mov
push
adc
cmpsb
jecxz
aas
cmp
fcompl
out
mov
push
iret
bound
mov
nop
inc
mov
into
shrl
mov
out
into
xorl
lahf
outsl
daa
push
mov
and
jnp
push
jmp
add
add
dec
mov
xor
jle
dec
daa
pop
stos
sbb
jno
push
sbb
jns
fildl
decl
imul
sub
dec
inc
cvtps2pd
pop
stos
push
mov
xor
push
ret
jo
or
mov
inc
xor
jmp
mov
dec
and
cmp
mov
lods
or
jae
jno
mov
clc
mov
icebp
clc
je
sub
sbb
jmp
ja
sbbb
xchg
sub
pop
xchg
lcall
lret
mov
test
inc
jge
push
sbb
xchg
popf
loopne
mov
sub
xor
outsl
add
pop
fdivr
pop
dec
xor
push
jge
fstl
popa
jecxz
push
or
popf
jmp
add
aad
cli
insl
mov
fwait
adc
jle
cs
sub
shlb
negb
pop
inc
jae
arpl
or
add
sarl
sub
test
or
pop
imul
or
push
rcrl
dec
sbb
shlb
arpl
add
dec
push
out
cs
popf
mov
in
cmc
stos
in
movsb
xchg
xchg
jae
movsb
ror
mov
push
xchg
and
inc
fnsave
inc
loopne
fucomi
loope
pop
xor
inc
xchg
mov
push
fnstsw
mov
mov
pop
loope
arpl
and
cmp
dec
scas
pop
mov
xlat
fsubrp
fcmovnu
loop
fldt
adc
lods
pushf
out
rcll
jns
insl
sahf
cs
mov
cli
fildll
push
icebp
cld
or
pop
adc
jmp
incl
jecxz
mov
cmpsb
fildl
fldcw
jnp
fwait
pop
insb
dec
orb
mov
rcl
jle
adc
mov
int
push
stos
and
sub
sbb
int3
lcall
add
gs
loopne
xor
gs
or
clc
fidivs
out
xchg
fxch
pop
ret
insb
fdivl
inc
icebp
dec
xor
mov
adc
sub
and
adc
mov
inc
movsb
sub
xchg
inc
xor
jecxz
push
dec
cmp
aam
ljmp
ds
push
cmp
lea
cld
push
xor
into
fwait
sbb
jle
cmpsb
pop
inc
dec
cmp
cmp
pop
sbb
cltd
stos
leave
sub
sub
mov
loope
jge
orl
jno
in
add
pop
aaa
mov
adc
adc
int3
push
cld
lcall
cmpsb
push
je
dec
sbb
ds
pop
cmp
mov
adc
loop
mov
or
stc
xchg
adc
stc
fstps
mov
mov
movsl
jmp
lret
mov
xor
iret
xlat
inc
out
or
inc
sub
adc
mov
inc
lods
push
inc
imul
mov
mov
push
xor
fwait
mov
jno
andb
lret
pop
dec
mov
sbb
movsb
add
or
test
in
hlt
enter
sub
mov
lret
cmpsb
push
push
ret
cmp
pushf
shrb
pop
push
fwait
sub
sahf
push
jmp
ja
jg
lret
lods
sub
insl
sub
mov
xchg
add
shll
pop
loope
stos
mov
fisttpl
push
pop
data16
or
js
testl
sbb
push
nop
inc
stc
pcmpgtb
adc
inc
lcall
mov
bts
add
lods
add
rorl
pop
cmc
push
fcoms
jno
icebp
add
sub
outsl
fidivrl
rep
pop
dec
mov
imul
add
into
xlat
hlt
mov
adc
pop
lahf
out
inc
mov
jge
dec
xchg
mov
ficompl
int3
je
in
ret
dec
adc
lret
ficoml
xchg
cmp
mov
jmp
push
popa
ret
xchg
lods
insb
pop
dec
std
mov
jae
xchg
insb
fcmovnb
dec
sbb
push
inc
insl
sbb
dec
pop
or
push
lds
dec
aad
movsb
mov
fs
int
dec
cmp
push
inc
add
or
mov
faddl
mov
xchg
sbb
jbe
jae
out
fcoml
nop
popa
sbb
pop
sbb
cmc
mov
rcrl
adc
and
lcall
jg
add
jns
xchg
pusha
mov
pop
lods
jg
mov
imul
push
inc
lods
in
inc
test
mov
cmc
add
sbb
push
fldt
arpl
scas
dec
mov
mov
vpacksswb
xchg
mov
add
sub
std
cmp
and
inc
jne
daa
lods
mov
pop
cmp
dec
pushf
sbb
in
inc
mov
mov
jg
inc
sub
roll
nop
push
mov
push
in
movhps
sarl
out
ficoms
fsubs
push
jno
mov
xchg
jae
popf
mov
stc
mov
cli
and
gs
out
fwait
popa
js
jle
lret
stos
xchg
dec
xchg
lock
add
xchg
push
test
cmpl
xchg
lret
xchg
mov
sub
loope,pt
pop
add
lret
cld
gs
mov
mov
push
mov
pop
jl
cli
aas
sti
lds
push
push
lods
xor
or
cmp
dec
mov
fcomps
daa
xchg
mov
push
in
stos
imul
cmp
in
movsb
jle
adc
or
xor
ret
xor
data16
int3
rorb
negb
adc
xor
jge
aad
jbe
js
mov
loopne
push
js
lods
sti
pop
mov
push
rorb
mov
sub
pop
outsl
clc
sbb
popa
aas
xor
push
dec
xor
fwait
jmp
mov
test
test
mov
cmp
sbb
sub
mov
and
imul
test
mov
mov
dec
mov
lock
movsl
push
xchg
sub
movsb
mov
push
stos
mov
lahf
mov
and
mov
out
pushf
repnz
hlt
imul
imul
int3
aaa
nop
sti
ja
pop
jne
mov
dec
fs
insb
sahf
sub
push
xchg
dec
and
or
lock
xchg
pushf
sbb
xor
cmp
jb
pop
js
aad
mov
dec
mov
jne
pop
sahf
mov
push
mov
inc
nop
or
popa
cmc
xorb
imul
fadds
push
cmpsl
in
shll
jg
adc
push
scas
and
inc
gs
outsl
xor
mov
mov
shl
or
mov
pop
out
aad
pushf
sub
negl
aad
js
or
xchg
lcall
in
popf
icebp
or
adc
outsb
push
xor
xor
mov
jle
out
pop
cmp
xchg
mov
std
xchg
movsb
cli
add
jg
sub
push
xchg
jmp
push
insl
out
push
inc
sub
mov
pop
jmp
inc
out
sahf
xchg
popa
adc
stos
fistps
push
test
adc
cmpsl
pop
hlt
js
adc
vpcmpgtb
stos
stc
rolb
js
adc
xchg
jp
xchg
xchg
sti
push
xor
clc
dec
int3
jge
add
aaa
lea
sbb
shl
ret
push
icebp
sbb
rcrb
nop
pop
adc
cli
push
dec
inc
cltd
xchg
jno
pop
cs
cmp
stos
js
negb
jae
jno
pusha
add
iret
rcl
rolb
es
enter
imul
loopne
sbb
shl
mov
cli
mov
int
jl
or
inc
lods
jp
dec
ds
int3
push
sbb
mov
adc
sub
dec
add
test
xlat
out
mov
jo
hlt
sub
inc
outsb
xchg
add
fwait
subb
ret
shll
xchg
orb
cmp
push
fimull
adc
or
cmc
mov
loopne
sahf
push
fildll
mov
insl
jno
scas
xchg
or
or
adc
mov
xor
ja
movsl
mulb
lret
in
jne
movsl
xor
inc
jge
xchg
cmp
jbe
jle
pop
jg
shrb
mov
arpl
les
inc
lods
add
inc
mov
lret
es
pop
loopne
cmpsl
pushf
ds
and
call
test
fidivrs
ret
xchg
or
jns
fldl
adc
lcall
in
lock
es
lcall
mov
jecxz
lds
jns
pop
std
movsl
sbb
iret
dec
out
repz
push
sbb
pop
xchg
jge
xchg
inc
scas
out
inc
cltd
leave
pop
loope
movsb
js
cmpxchg
mov
sarb
jo
es
push
xlat
and
pop
jp
negl
xor
mov
js
mov
fs
pop
sbb
test
jg
insl
movsl
call
in
dec
pop
dec
mov
pushf
mov
mov
mov
jp
inc
andb
pop
cmp
or
ffree
sbb
sti
stc
push
cltd
pop
jge
scas
mov
jmp
mov
xchg
push
inc
fwait
hlt
out
js
push
xor
ret
aam
hlt
stos
cmpsb
and
loopne
sbb
shlb
mov
sahf
scas
dec
push
dec
clc
adc
add
cmpsb
add
xor
jp
jo
popa
insb
aad
cld
cmp
mov
stos
loope
in
loopne
orl
lret
sub
cmp
pop
add
out
enter
push
and
in
cli
sub
xchg
stc
xchg
xchg
adc
mov
stc
pusha
adc
add
lea
adc
cmc
hlt
in
ret
inc
xchg
outsb
sbb
sti
cmp
jle
iret
add
add
jb
fistpl
push
pop
in
mov
inc
sti
or
fwait
lcall
xor
sub
sar
fcoml
push
std
call
stc
aaa
adc
mov
jne
out
sahf
or
sahf
leave
xor
sbb
shr
add
jb
sbb
or
and
push
clc
adc
push
push
leave
jg
dec
sbb
jo
lods
inc
and
out
mov
int
sub
add
mov
push
xor
pop
fs
inc
mov
mov
mov
jbe
add
xor
cmp
inc
lcall
pushf
loopne
mov
shlb
jbe
stc
jne
stos
xlat
mov
sbb
pushf
add
mov
fiadds
push
out
sub
dec
push
data16
sub
mov
jg
movsb
xor
sbb
jecxz
push
lcall
notb
xor
out
lds
aam
mov
insl
in
mov
mov
xchg
xchg
into
cld
loope
adc
inc
xchg
and
jmp
cmp
lods
cmp
wbinvd
push
aad
xlat
or
jb
add
xor
mov
aad
sub
std
pop
outsl
pop
negb
mov
adc
sub
jae
shll
inc
add
jl
mov
add
cmp
mov
mov
lret
jae
sbb
and
cltd
rcrl
push
cmp
add
xor
or
jbe
inc
scas
out
rclb
xorl
sarl
cmp
push
xor
fsubp
movsl
pop
dec
cli
xlat
enter
int
xor
fcompl
jle
xchg
mov
lds
xchg
ret
rorb
pushf
pop
lds
mov
xlat
ja
imull
push
bound
movsl
inc
cld
sbb
jbe
dec
stos
inc
cmp
inc
enter
sub
movsl
mov
shlb
test
mov
leave
leave
push
data16
push
add
push
push
pop
cmp
xor
pop
dec
jb
stc
loopne
pop
push
jmp
out
jmp
nop
dec
mov
cli
ret
imull
cmpsb
icebp
dec
mov
inc
fstpl
dec
pushf
fisttpl
mov
xchg
es
hlt
adc
or
xchg
shlb
sub
lea
push
out
adc
sub
add
xor
push
insl
pusha
push
cmp
push
js
fdiv
call
jne
sbb
push
mov
loope
sub
addr16
jp
and
jg
scas
jle
push
mov
jp
xchg
mov
xchg
jnp
and
fnstcw
jle
pop
pop
movsl
xchg
mov
daa
loope
jne
inc
les
push
popa
mov
xchg
sbb
lds
mov
inc
shll
push
iret
sti
pop
sub
adc
jmp
push
sub
in
in
sbb
test
notb
pop
call
push
add
jae
repz
add
outsb
into
xor
aad
gs
xor
adc
cwtl
cmpsl
inc
or
xchg
daa
cmp
push
sub
cmc
hlt
shlb
sti
aaa
inc
enter
cltd
jl
fsubr
inc
loopne
xor
mov
xchg
xchg
out
outsl
aam
pop
jmp
in
js
call
je
adc
aaa
sub
inc
adc
lret
ret
mov
sub
orl
sub
pop
daa
adc
and
leave
divb
hlt
stos
xchg
push
fadd
add
add
pop
jmp
cmp
in
cmp
fwait
adc
dec
jl
jecxz
xor
stc
mov
adc
aad
out
adc
jae
fisttps
and
out
cmp
loop
pop
xchg
jns
jle
mov
dec
shl
cmp
mov
sahf
and
ret
adc
ja
xor
js
loope
add
mov
mull
int
popa
fs
mov
arpl
js
mov
femms
jge
mov
out
lret
loop
fsqrt
cmp
fdivl
lahf
dec
pushf
or
cmp
jae
mov
jmp
daa
jb
aad
cmp
and
mov
lods
iret
stos
xor
negl
mov
scas
add
es
lret
or
pop
subl
adcb
orb
test
jg
faddp
push
sbb
mov
scas
jmp
out
adc
mov
pop
ret
pop
mov
and
push
jmp
xchg
sbb
mov
fsts
nop
rcr
add
fimull
xchg
mov
add
xor
jge
inc
shll
lods
or
icebp
adc
mov
xchg
das
shr
ljmp
lods
popf
or
jbe
mov
lcall
addl
jb
in
add
shrl
clc
xchg
pop
test
out
push
or
rolb
pop
inc
out
out
int3
or
sbb
je
ljmp
and
cmp
jl
lret
sub
mov
jge
pusha
incb
mov
xchg
jnp
xchg
in
mov
sbb
xor
sbb
and
dec
stc
lcall
and
push
mov
push
dec
jp
cmp
and
dec
cli
mov
scas
dec
mov
lods
fdivrl
cmpsb
xchg
dec
xchg
js
jne
pop
xchg
cmc
loope
call
rcrb
in
div
rorl
dec
mov
jne
lods
lock
ret
lcall
add
sti
repnz
mov
xorb
mov
movsb
xor
xor
sbb
pop
or
sub
orb
sub
mov
cmpb
fwait
shll
jp
adc
pop
xchg
mov
jmp
movsl
push
jo
iret
jnp
pop
into
roll
lahf
lds
out
mov
outsl
sbb
dec
jbe
and
sub
cmp
xchg
addr16
outsl
repnz
pop
fbstp
sub
gs
mov
test
leave
push
pushf
or
adc
jo
popf
jo
loope
mov
mov
mov
or
xor
adc
call
repnz
in
lods
int3
lea
sbb
dec
and
stc
mov
xchg
adc
es
dec
movsl
adc
and
dec
lret
shl
arpl
daa
sub
outsl
fstps
mov
cmp
iret
pop
leave
adcl
movsb
jp
or
cs
jl
cld
mov
cmpsl
shll
or
push
and
ficoml
scas
out
fwait
xor
arpl
repnz
inc
es
mov
xor
xchg
inc
aad
push
das
jne
ds
mov
and
cld
push
jp
scas
shll
dec
dec
sub
pop
ds
cmp
xchg
std
pop
daa
adc
bound
mov
shlb
mov
cwtl
mov
fsubs
jne
daa
roll
inc
mov
push
int
repnz
call
loopne
insb
imul
or
jae
insl
fists
cmpsl
and
mov
lock
mov
sar
dec
adc
dec
xchg
mov
mov
std
and
add
mov
mov
add
imul
stos
loope
add
jecxz
pop
xchg
inc
cmpsb
inc
push
cmp
aam
mov
orb
das
fxch
fimull
jns
jns
pop
add
daa
xchg
mov
js
and
dec
adcb
mov
out
add
pop
fnstcw
mov
push
arpl
stos
mov
cmc
lds
cmpsl
mov
dec
mov
ds
and
bound
mov
dec
pmulhuw
cmp
or
ljmp
dec
cltd
cltd
mov
pop
mov
outsb
sbb
push
and
jb
lods
push
std
push
push
xchg
push
mov
mov
int3
outsl
mov
jnp
popf
mov
les
and
lock
movsb
or
mov
popf
int
xchg
lcall
sbb
add
jo
mov
mov
int3
adc
lock
cltd
cwtl
lock
int3
faddl
imul
inc
mov
subl
cld
mov
xlat
mov
push
sbb
add
xchg
dec
inc
adc
xchg
nop
pop
out
ja
test
xor
adc
in
lret
xchg
adc
jns
sub
jo
xchg
pop
cmpsb
sbb
xor
xor
cmc
sbb
das
aas
fiadds
ret
decb
add
xchg
sub
push
mov
push
bound
or
js
outsb
daa
lea
sbb
push
push
inc
cmp
ja
xchg
sti
test
add
mov
mov
call
xor
mov
test
and
adc
pop
jle
xor
pop
jecxz
xchg
insb
outsl
sub
enter
movsl
pop
mov
add
int
test
out
push
movsl
bound
jno
xchg
push
outsb
push
cwtl
les
pop
int
cmp
lcall
lock
mov
cli
imul
ss
add
mov
imul
in
ljmp
icebp
push
arpl
sbb
filds
jnp
mov
sbb
cmp
jne
call
fs
fs
rclb
repnz
inc
leave
imul
or
inc
inc
shlb
jg
test
jmp
int3
sub
cld
pusha
cmpsl
and
ret
push
pop
adc
cmp
pop
xchg
mov
in
push
int
sub
push
or
aam
cwtl
jno
mov
pusha
pop
cld
adc
outsb
jle
into
int
or
mov
sub
popf
push
jae,pt
cwtl
es
xchg
inc
sbb
rorl
imul
out
dec
loopne
jno
push
test
sbb
mov
mov
jns
sar
adc
xor
gs
fistl
sbb
mov
je
jg
inc
dec
lea
jmp
pop
jns
repz
jbe
add
xor
mov
mov
dec
pop
loop
call
daa
mov
inc
and
adc
mov
push
shlb
fisubl
push
push
in
int
pusha
inc
les
pop
aas
push
fwait
out
push
xchg
gs
cmpsb
sbb
mov
push
add
adc
ds
int3
dec
adc
sbb
xchg
cmp
rcll
cmpsl
and
lds
dec
scas
jnp
fdiv
popa
jg
out
sahf
shr
mov
sbb
mov
pmaxub
mov
mov
dec
int
jg
test
adc
xor
or
rcrb
mov
push
pop
int3
dec
das
std
adc
xor
sub
clc
fiaddl
int3
cmp
xchg
or
sub
mov
stos
mov
ja
cmp
test
sbb
add
movsl
mov
das
nop
stos
loop
outsb
pop
scas
cs
rclb
lea
inc
or
mov
and
xor
pop
clc
inc
xchg
xlat
cmp
shr
push
and
lret
xchg
aam
cltd
or
lock
xorl
in
test
inc
push
mov
jnp
and
cld
lock
fwait
and
jg,pt
sti
add
lea
popf
ret
push
loop
loope
and
or
mov
dec
push
inc
hlt
aam
push
cwtl
mov
pop
in
dec
data16
adc
sbb
out
xorl
lea
add
fwait
into
imul
push
jg
and
cmp
call
or
stos
xor
imul
sbb
loop
push
rol
loop
push
cmp
imul
stc
into
xorb
or
loop
lds
mov
cmp
xlat
inc
push
sub
adc
cmp
pop
cmp
dec
push
loopne
into
aad
sbb
call
push
mov
addr16
cli
lahf
jp
jae
pop
add
pushf
test
and
jo
jecxz
into
insb
cli
lret
mov
mov
fwait
xor
ja
pop
push
jl
add
add
jge
cli
icebp
pushf
fldcw
fisttpl
mov
jnp
call
sarl
mov
dec
leave
dec
inc
lret
ja
adc
xchg
lds
aad
movsb
xchg
out
inc
sarl
sub
jb
jnp
outsl
mov
scas
repz
fldcw
mov
stc
mov
mov
sbb
fiaddl
dec
sub
addr16
in
xor
or
cltd
lea
inc
enter
fcompl
pop
mov
xor
mov
xchg
mov
mov
pop
les
test
xor
fcmovb
xor
pusha
mov
xchg
and
mov
lcall
jg
shlb
mov
adc
fisubl
mov
adc
enter
les
push
jecxz
fcomps
adc
push
je
sbb
jle
daa
dec
push
popa
and
mov
xchg
xor
sti
dec
leave
or
movsl
out
cmc
std
mov
sub
jmp
ja
divl
mov
push
mov
cmp
dec
pop
jp
scas
fcmove
pop
outsb
mov
jbe
inc
icebp
xchg
lods
das
dec
jb
pusha
jge
pop
in
pop
cld
xchg
std
inc
dec
orb
jae
push
scas
jp
dec
stos
and
lret
int3
mov
stos
xor
gs
mov
setno
lea
mov
lock
sti
lock
ljmp
fwait
and
add
mov
dec
add
sub
ret
movsw
mov
icebp
hlt
inc
xchg
inc
insl
adc
cmpsb
jge
ret
cmp
jae
fisttpl
xchg
aas
mov
clc
or
jge
cmp
or
xor
cmc
jns
fs
movl
xchg
mov
cli
out
mov
push
pushf
in
mov
cld
js
cld
pop
push
in
mov
out
fwait
or
and
mov
xchg
pushl
cmc
int3
sub
xchg
pushf
sub
out
cwtl
sahf
xlat
push
fucomi
xor
lret
or
xchg
ljmp
sub
filds
pop
mov
mov
in
lds
sub
sub
jae
inc
dec
lahf
icebp
imul
mov
subb
jnp
inc
jecxz
add
adc
cmp
push
mov
dec
shl
addb
xor
mov
sub
inc
rcrb
jmp
test
mov
pop
jns
sbb
mov
ret
int
dec
mov
pop
fwait
pop
fistps
push
jo
push
and
and
jo
adc
or
jg
mov
mov
pop
xchg
hlt
add
out
popa
aaa
or
push
mov
add
cli
pushf
ljmp
fistl
mov
scas
lds
pop
fidivl
or
push
sub
and
xor
sbb
mov
add
aas
lods
dec
push
repnz
inc
mov
test
mov
mov
and
leave
dec
pop
xchg
movsb
fwait
add
push
loopne
outsb
cli
loope
scas
mov
push
add
mov
repnz
mov
bound
iret
sti
pop
and
mov
mov
fdivl
and
lcall
sahf
jle
cli
imul
and
mov
ret
lret
inc
gs
add
push
mov
outsb
bound
je
pop
fists
scas
imul
mov
repz
xchg
nop
popa
sbb
mov
stos
adc
xchg
push
cmp
mov
inc
push
dec
xchg
imul
popf
inc
mov
and
add
add
jbe
mov
cmp
mov
jns
push
call
sbb
outsl
lret
jge
fldcw
ror
adc
push
jg
fmuls
sbb
aas
cwtl
fldenv
adc
jne
loope
mov
and
test
stos
mov
out
mov
scas
call
xlat
fists
sahf
sbb
adc
jnp
pop
mov
mov
mov
xchg
xchg
push
adc
imul
outsb
popa
inc
push
fcoms
pop
add
int3
mov
lods
sub
push
mov
mov
mov
add
ficoml
dec
rolb
xchg
mov
push
sti
outsl
or
or
movsl
pop
divl
push
adc
xorb
xor
icebp
shlb
sbb
or
jle
loope
lahf
in
and
cmp
adc
dec
inc
lret
adc
dec
xchg
or
inc
fnsave
sbb
bound
sub
mov
xchg
add
jns
rol
paddq
les
imul
movsb
push
sub
shrb
xor
daa
pop
ja
js
leave
push
xor
lret
xor
or
popa
and
imul
sub
pop
mov
not
sahf
pop
add
jo
pop
adc
push
bound
mov
xor
mov
mov
daa
cmp
adc
and
jnp
fs
cmp
mov
jg
mov
popf
push
dec
mov
dec
cld
loopne
sub
sbb
mov
mov
push
lods
ss
and
lods
adc
push
lcall
adc
scas
cmc
fsubrl
pop
jbe
shrb
leave
jbe
addr16
mov
inc
out
stos
xchg
movsl
and
and
dec
mov
add
push
add
call
cmp
iret
ret
and
nop
out
popa
sub
jne
lret
es
cmc
xchg
les
fwait
test
out
in
xchg
mov
cmp
and
jp
pop
test
aad
or
mov
sub
push
jno
shufps
aas
push
add
push
loopne
pop
pop
pushf
sahf
jle
ret
fs
sbb
repz
pop
outsb
sbb
imul
sbbb
cld
sahf
xchg
pop
dec
cmpsb
cld
or
inc
icebp
shrl
imul
cmp
subb
or
subl
mov
or
out
xor
xor
fwait
sbb
xlat
add
sub
push
aad
mov
adc
sbb
loop
mov
mov
mov
lcall
insb
sbb
fsqrt
call
jg
dec
inc
cmc
xchg
cmp
cmp
hlt
hlt
std
aad
enter
mov
test
fsubrs
pop
sub
in
adc
mov
leave
sub
leave
cmp
inc
cmovno
imul
and
mov
cmp
or
dec
test
dec
out
clc
mov
pop
cltd
filds
sbb
scas
mov
in
mov
rorb
lret
xchg
or
add
sub
ljmp
lret
scas
int
ja
movsb
mov
popa
les
cmp
mov
idiv
mov
mov
test
sbb
sbb
adc
add
pop
outsl
cmc
ret
dec
jecxz
lret
cmp
sbb
or
xchg
ja
xchg
jmp
shl
inc
pop
push
fwait
aad
mov
leave
mov
inc
int
jl
or
mov
push
xor
add
cmpsb
fidivrs
pop
cmpsb
pop
or
xchg
ljmp
pusha
jecxz
pop
pop
ret
mov
cltd
dec
sub
cld
jp
jns
jecxz
mov
xchg
decb
aaa
add
sub
xchg
call
cwtl
inc
mov
jbe
insb
cmp
dec
jmp
pop
or
je
pop
sub
xchg
sub
jo
xor
pop
jp
pop
loope
mov
mov
movsb
cmpsl
mov
lret
in
popa
xor
andl
outsl
mov
pop
push
lods
xchg
fcoml
mov
and
insl
jl
outsl
fdivrs
inc
push
cwtl
push
sub
ret
mov
les
mov
or
cmpsl
sub
pop
dec
loope
inc
push
enter
jg
cmp
out
and
iret
jecxz
test
add
jmp
rol
inc
fdivr
jb
jne
stos
aad
repnz
imull
movsb
sub
cmp
addr16
mov
xchg
xor
and
inc
and
std
cmp
pop
in
mov
data16
repz
fs
jo
lea
cld
pop
mov
sub
out
jo
in
test
in
lds
add
adc
or
loopne
cmpsb
pop
test
subl
mov
aas
out
dec
test
pop
mov
mov
out
pusha
mov
push
jge
out
xchg
daa
mov
ret
leave
jae
lods
jge
push
scas
out
sbb
pop
mov
add
into
add
mov
ljmp
test
add
cld
xor
loop
jb
xor
lods
fsubl
xchg
aas
sub
xor
pop
jecxz
push
aam
or
dec
decl
sub
in
mov
mov
int3
test
ds
cli
loope
sub
xor
and
addb
cmp
pushf
gs
aad
sbbl
xchg
test
mov
out
cmp
jb
cld
add
sub
inc
dec
cwtl
sub
ret
ja
rcrl
jb
sbb
mov
mov
jl
mov
xorb
mov
jecxz
data16
push
sti
adcl
loope
aaa
cmp
mov
sub
cmpsb
jg
mov
xchg
inc
and
bound
push
je
adc
inc
popf
ret
es
fists
std
adc
xor
jbe
xor
mov
pop
shlb
rol
sub
mov
fldenv
xchg
xchg
or
pop
sbb
sahf
fdivrp
mov
add
push
bound
sub
mov
pop
dec
daa
js
lods
lcall
in
pop
sub
mov
insb
and
and
cmp
push
repz
jne
cltd
arpl
outsb
mov
out
cmc
jmp
testb
movq
push
mov
fs
push
cli
xchg
jns
pop
inc
mov
fstpt
and
sbb
test
sub
jno
mov
in
xchg
push
imul
aad
xchg
sbb
test
loop
pushf
loope
jo
mov
sti
insl
rorl
push
idivl
ficompl
test
movsl
mov
mov
push
outsb
scas
or
pop
pushf
lret
pusha
push
mov
lods
lods
addl
sub
fsubrl
cmp
pop
jp
sti
test
test
jbe
dec
repnz
sbb
pop
sbb
mov
cmc
out
xor
xor
fimull
ljmp
xchg
push
jecxz
shl
scas
imul
in
mov
add
cmp
push
shrl
inc
pop
mov
push
add
insb
enter
push
repnz
outsb
inc
xchg
fistl
fldenv
addb
jp
adc
aam
add
shl
mov
cmc
into
ret
fildl
daa
out
xor
scas
jg
inc
das
jne
xchg
and
xchg
jb
jnp
cmp
dec
pop
push
shll
cs
or
aam
test
or
xor
xor
pop
fcompl
insb
fwait
xchg
movsb
mov
xchg
cmp
fs
ret
mov
in
clc
add
pop
in
int3
out
in
pop
sbb
out
sarb
ret
sbb
pushf
rcrl
sahf
cmpsb
push
je
xor
test
scas
ffreep
ret
inc
imul
xchg
xchg
add
cwtl
in
fisttps
and
pop
push
popf
hlt
push
rcrl
pop
push
sahf
adc
add
leave
xor
pop
test
mov
pop
jle
popf
lods
sbb
jne
add
in
lcall
imul
fistps
xchg
push
int3
inc
lcall
psubw
or
mov
inc
jo
jae
push
mov
or
and
outsl
cld
inc
xchg
push
repz
pop
sti
jmp
outsb
pushf
fisubs
es
scas
imul
xchg
xlat
adc
jp
arpl
push
xchg
sub
adc
into
jb
testb
sub
arpl
push
loop
and
std
into
xor
lret
mov
jbe
negb
pop
or
sub
mov
repnz
lcall
hlt
in
mov
pop
mov
sub
pop
les
icebp
dec
xchg
inc
jmp
andb
dec
xlat
mov
pushf
int3
aad
mov
mov
nop
mov
cmp
mov
add
pop
stc
cmpsb
push
mov
add
cmc
jg
enter
xor
jle
push
jno
cmp
movsb
aas
rolb
cwtl
push
aaa
cmp
jnp
mov
adc
fstl
int3
popa
movsb
sbbl
mov
xor
subb
adc
push
pop
sub
loope
xor
jmp
adc
outsl
xor
mov
sti
mov
dec
fcoml
jbe
push
xchg
insb
pop
sub
pop
sar
jmp
adc
inc
add
inc
cltd
adc
push
inc
xchg
mov
adc
repz
fwait
adc
push
or
mov
mov
pusha
lret
sbb
nop
xchg
scas
xor
sbb
fyl2xp1
adc
and
out
add
cmp
cmp
lea
out
mov
popf
jb
je
sub
ja
insb
sahf
push
mov
or
sub
fwait
aad
mov
pop
inc
mov
mov
out
fs
mov
lahf
test
test
inc
sub
push
inc
xchg
rolb
cmp
add
cmp
jl
inc
clc
mov
jns
nop
mov
lods
pop
lahf
and
xor
jg
mov
ja
push
xchg
ficoms
xchg
fists
mov
or
mov
aam
shr
inc
sbbb
int
stos
sub
test
xlat
inc
sbb
cmp
repz
faddl
movsb
mov
or
push
fmuls
mov
fnstcw
xchg
or
ret
pop
pop
daa
xor
inc
dec
sub
adc
roll
daa
inc
push
aas
mov
loope
clc
mov
movsl
cmp
test
pop
sub
inc
loop
neg
jns
leave
stos
sbb
cld
out
cld
movsl
mov
mov
mov
int
divl
mov
dec
and
leave
arpl
pop
stos
out
stos
xchg
mov
sarl
mov
xchg
dec
daa
sbbl
cwtl
test
mov
out
setle
mov
cld
or
pop
mov
cmpsb
mov
cmp
dec
dec
mov
mov
xchg
inc
popf
repz
push
rcrb
in
mov
cltd
sarl
fs
mov
xchg
call
add
pop
push
clc
mov
or
jb
ror
mov
shl
xorb
and
cltd
and
movsl
jae
or
loop
push
aad
push
adc
subb
xorl
xchg
pop
cli
cmpsl
enter
push
cmp
dec
sti
xor
insb
in
sub
sbb
mov
adc
jl
ja
sbb
add
jae
out
dec
inc
fsubr
loope
jg
gs
or
dec
sbb
mov
xchg
dec
and
loope
xor
outsl
push
or
cmp
pop
sub
mov
mov
xor
mov
sub
mov
inc
dec
dec
and
adc
xchg
adc
test
sbb
push
mov
mov
sbb
xor
imul
mov
mov
rolb
fwait
mov
loope
stos
dec
test
inc
pop
or
js
pop
ja
pop
loopne
repz
call
xor
loopne
cmp
inc
insl
insb
xchg
mov
jl
adc
adc
outsl
push
add
xor
fdiv
leave
jg
movsb
popf
decl
inc
in
mov
jnp
xor
xor
fdiv
sub
pop
bound
pop
sbb
data16
jbe
imul
test
pop
xor
cmp
out
add
pop
xlat
pop
mov
and
std
out
push
inc
into
imul
xor
mov
lret
test
xchg
jno
lea
add
dec
nop
and
ss
push
mov
and
stc
and
jo
icebp
les
ds
les
sbb
test
negb
out
jg
jo
sbb
mov
pop
scas
jns
out
pop
mov
mov
add
jnp
jp
negl
stos
mov
loope
sub
imul
fsubrs
pop
cld
test
sti
mov
sbb
rclb
mov
lret
clc
sbb
divb
icebp
jmp
add
lds
nop
mov
push
lods
dec
adc
lea
cmpsb
aad
leave
mov
sub
pop
cmc
sbb
jp
xor
sbb
push
test
lret
or
jg
clc
je
jge
add
or
aas
ds
sub
daa
and
scas
mov
cmp
fst
fcompl
stos
mov
loopne
shlb
sbb
xor
das
outsl
or
incl
testb
ffree
inc
pop
mov
sbb
int3
dec
das
push
dec
mov
ljmp
and
push
out
les
pop
outsb
xchg
sarb
xchg
mov
lahf
mov
das
shll
les
shr
cmp
sub
xor
clc
out
insl
ljmp
mov
mov
mov
mov
pop
push
scas
xor
cmpb
jp
lret
mov
loop
ss
testb
hlt
mov
inc
cmp
mov
xchg
dec
adc
adc
loope
repnz
add
sub
mov
jl
pop
in
fstl
jmp
push
test
dec
cmp
fxch
addr16
jmp
sbb
repz
lahf
pop
mov
pop
cli
xorb
mov
mov
mov
add
out
mov
inc
inc
cwtl
dec
mov
sbb
cmpsb
popf
popa
fisubrl
repnz
in
outsb
pushf
aas
mov
and
dec
mov
xchg
iret
sbb
sarb
ljmp
mov
ret
xor
ja
cld
dec
aas
jbe
pop
inc
popa
adc
pop
sbb
es
cltd
lahf
dec
fsubrl
inc
fadds
icebp
cltd
rclb
inc
lock
and
shll
mov
sarb
push
push
es
mov
scas
mov
xor
and
xor
sub
imul
xchg
dec
cli
cmpsb
add
mov
ffree
pop
mov
faddl
mov
aas
arpl
int
xor
cmpsl
js
mov
das
hlt
pop
adc
ret
dec
fldt
aad
add
dec
mov
xor
popa
adc
jnp
in
mov
pop
je
pop
mov
mov
push
sub
push
jge
jle
or
mov
mov
in
inc
ficomps
pop
mov
insb
cmc
lods
adc
and
push
mov
outsb
add
pop
pop
xchg
jb
or
xor
cmpsl
neg
lods
or
mov
insl
adc
mov
pop
mov
mov
dec
scas
je
push
jb
push
fwait
lods
cmp
cmp
or
mov
outsb
dec
in
in
les
sahf
mov
dec
inc
inc
dec
mov
mov
add
fstl
cmp
mul
stos
push
push
sub
mov
aad
aad
adc
je
push
out
mov
and
sarb
movsb
mov
cmp
cmp
jno
nop
cmpsl
sub
gs
je
outsb
fldcw
mov
xchg
mov
test
sub
xchg
popa
xor
sub
jge
mov
inc
xorb
fstpt
mov
popf
jo
mov
xchg
xchg
jmp
add
cmpsl
adc
mov
je
out
push
shrb
xor
xlat
jp
or
sub
mov
sub
jo
pop
ret
dec
inc
bswap
lock
xchg
scas
mov
lret
mov
enter
mov
mov
mov
xchg
sbb
cld
push
dec
nop
arpl
and
push
scas
dec
scas
xlat
insl
push
rcrb
test
pop
inc
ret
movsl
mov
mov
loop
mov
and
and
add
add
dec
xor
cltd
sub
xor
pop
mov
outsb
lret
cmp
mov
or
repnz
or
push
adc
cmp
cmp
icebp
and
ret
mov
enter
dec
shrb
loop
int
lcall
ja
mov
adc
add
cmpsl
push
pop
rcll
push
or
push
dec
xchg
sub
repz
and
lahf
xchg
mov
push
mov
dec
frstor
and
outsb
mov
jo
or
fs
mov
inc
jle
test
mov
leave
fcmovb
add
cli
outsb
das
rcl
pop
test
jecxz
cmp
pop
movsb
add
inc
sub
sti
loope
jg
mov
andb
mov
lahf
scas
call
mov
pop
pop
es
push
add
mov
mov
mov
or
dec
mov
inc
push
mov
mov
outsb
push
lods
inc
inc
or
std
xchg
fldl2e
jmp
aaa
inc
leave
in
loopne
xchg
adc
fisttpll
jbe
jp
inc
pop
add
jne
push
sbb
pop
mov
mov
cmc
cwtl
std
mov
ret
fs
jae
outsl
or
nop
inc
dec
xchg
fisubrs
es
or
arpl
pop
dec
and
inc
mov
pop
add
dec
and
inc
or
pop
sbb
test
lahf
push
push
stc
out
bound
shrb
lock
xor
dec
jbe
popa
dec
rcrl
or
movsb
rcll
out
xchg
enter
add
mov
rclb
hlt
push
mov
std
mov
outsb
xor
pop
add
iret
nop
mov
hlt
mov
jl
push
dec
mov
je
pushf
cltd
dec
pop
xor
clc
adc
xor
adc
pop
nop
mov
leave
jp
sub
js
popa
xchg
sbb
pop
lcall
lret
test
cltd
adc
mov
push
in
pop
push
fstpt
add
xor
mov
mov
mov
sub
arpl
dec
inc
inc
mov
sub
in
lea
sub
sbb
cld
mov
in
in
xchg
testb
cmp
ljmp
push
aam
mov
mov
mov
xchg
rcrb
test
movsl
cld
sarl
fldl2e
mov
add
test
jecxz
sub
jecxz
rcrl
jl
std
cmp
xorl
push
push
stos
jne
shrl
xchg
jns
faddl
lea
loop
jne
insl
inc
test
xor
div
add
sbb
ret
push
lret
cmpsl
aaa
out
fcoml
push
pop
xchg
lods
jmp
and
push
fsubrp
inc
cmp
into
aas
push
jo
jae
sahf
stc
xor
shlb
lret
in
xor
dec
xchg
add
and
push
ljmp
push
cmpsb
push
sbb
popa
test
daa
movsl
movsb
scas
add
imul
cmp
pop
add
data16
xchg
xchg
test
sub
adc
cmp
enter
pop
push
jo
mov
adc
movsl
dec
xchg
lea
out
mul
repnz
pushf
jne
cmp
or
sbbb
notb
jnp
les
int3
or
ret
mov
fwait
movsl
xor
xchg
test
sti
rcrl
and
loope
mov
inc
fst
mov
mov
and
or
and
sbb
dec
cmpsb
xchg
test
dec
jnp
fnstcw
and
adc
mov
jns,pt
or
in
scas
or
shlb
and
aas
adc
pop
cwtl
fcoms
jbe
fsubs
fldcw
cld
cmp
jmp
push
outsb
mov
xchg
mov
jb
xor
xchg
and
subl
fstl
and
dec
out
jne
incl
sbb
imul
push
cmp
mov
shll
fcmove
orl
mov
mov
add
fs
push
dec
adc
in
pop
jp
jb
stos
getsec
push
ret
gs
add
cltd
mov
sbb
movsl
fidivrs
faddp
dec
push
sub
pop
lods
aad
jae
idivl
and
add
sahf
dec
lahf
sbb
xor
imul
mov
jmp
dec
or
xor
mov
adc
mov
fisubs
ds
je
cmpsb
out
dec
xchg
adc
jp
flds
jne
mov
sti
outsl
adc
stos
jecxz
xacquire
movsb
mov
pop
jmp
mov
xor
imul
movsb
pop
nop
and
pop
and
das
dec
push
fstpl
sub
repnz
jne
xor
aam
ret
push
fsubrs
cmp
lods
in
stos
or
int
push
loope
add
fdiv
lret
mov
xchg
and
add
dec
ret
roll
cmp
xchg
into
fmuls
and
push
bound
dec
adc
push
adc
xor
and
add
jl
pop
fcmovne
sub
push
js
ja
jns
mov
movsb
xchg
xor
or
jo
sbb
icebp
in
mov
clc
mov
ret
or
es
add
aad
mov
ja
mov
jp
mov
jae
arpl
xchg
mov
nop
add
and
sbb
xor
test
adc
int
pop
unpcklps
rclb
sbb
inc
xor
xor
xchg
adc
scas
or
repnz
jmp
insb
cmpsb
inc
nop
inc
mov
icebp
pop
fs
shrd
pop
ja
lea
mov
jno
js
sbb
mov
sbb
mov
sub
loop
aad
imul
fbstp
add
adc
sbb
xor
cmp
sbb
in
pop
xchg
pop
pop
movsb
xor
sbb
xor
mov
ficoms
mov
xor
fisubrl
adc
mov
inc
subl
mov
sahf
lds
lret
jne
aad
shll
sub
imul
adc
adc
movsb
ds
xor
mov
jo
lods
push
addr16
sbb
add
mov
sbb
daa
xchg
les
mov
ja
inc
shll
mov
cmp
dec
cmp
or
ss
and
xchg
push
or
imul
fs
lret
pop
insl
lods
mov
sub
and
call
xchg
cld
movsl
push
push
test
push
outsl
je
fs
movsb
js
clc
cmp
mov
cmpsb
adc
push
adc
mov
and
stos
jge
addl
push
iret
lea
inc
jb
push
in
pop
and
mov
adc
cwtl
pop
mov
xor
sbb
jne
shrb
sbb
test
inc
push
cmp
fucomp
in
inc
mov
loop
pop
sti
add
fld
ret
fisttps
push
not
push
into
mov
xchg
mov
add
xor
shlb
push
icebp
push
adc
push
pop
xchg
subb
adc
sbb
cmp
and
xchg
xor
mov
movsl
pushf
fwait
sub
std
ficoms
cmc
jg
cs
add
xor
insl
ss
xchg
pop
jno
push
lock
push
inc
movsb
cwtl
pop
testb
sbb
je
fimuls
nop
dec
adc
inc
jp
out
and
pushf
repz
xchg
test
aad
enter
or
mov
lock
jmp
mov
fs
mov
cltd
call
jl
xchg
scas
dec
es
add
and
jg
mov
xchg
push
pusha
xchg
leave
notl
lret
sub
push
mov
orb
xchg
sbb
fwait
mov
inc
iret
cmp
pushf
test
add
push
pop
imul
int3
scas
mov
mov
cmc
sub
mov
mov
scas
mov
cmpsl
aam
xlat
jmp
mov
sub
xchg
pushf
mov
insb
inc
mov
cmp
dec
pop
test
jmp
ja
sarl
mov
nop
add
es
lods
xchg
adc
out
fimull
lret
xchg
push
clc
mov
enter
add
push
dec
arpl
repz
adc
adc
pop
bound
je
test
inc
in
mov
or
push
in
add
inc
fcompl
aad
iret
in
mov
adc
mov
jle
mov
jg
or
jne
or
arpl
adc
push
inc
lret
and
mov
repz
sub
or
xor
jmp
dec
and
push
dec
jle
xchg
jnp
popf
cli
insb
or
loope
mov
dec
insl
xchg
je
push
xchg
adc
sbb
lcall
fcomps
jmp
jge
in
or
rol
fcoms
or
dec
jbe
out
out
punpckldq
test
sbb
adc
cltd
pop
sbb
or
sbb
ror
and
cmpsl
jmp
jge
or
cmp
mov
cltd
jb
push
mov
cmp
lock
aaa
push
xchg
sbb
jae
cmpl
mov
aaa
je
popa
mov
dec
outsb
aaa
mov
clc
or
add
int
mov
sub
adc
push
stos
ss
call
sti
push
nop
hlt
popa
lods
or
or
stos
add
insl
cld
test
lock
sub
aad
and
xchg
adc
add
mov
xchg
push
ja
cwtl
inc
xchg
push
and
sti
repz
inc
loopne
xor
sbb
aas
pop
int
mov
sub
popl
mov
cmpsl
stos
xlat
mov
fcmovnb
add
loop
aam
and
or
orl
stos
arpl
in
in
push
xchg
jb
push
rolb
mov
push
shl
into
and
mov
cmp
fldenv
push
pushf
mov
mov
in
stos
test
ss
and
lock
and
pop
daa
fwait
push
xor
push
inc
shll
aas
stos
arpl
xchg
ret
ret
in
xor
shrl
pop
pop
adc
pop
inc
jecxz
aam
loope
fimull
sahf
cmp
pushf
dec
stos
dec
jne
add
inc
jmp
adc
ja
arpl
and
jb
and
push
sbb
fisubs
sub
sub
mov
mov
push
inc
xchg
jae
in
cld
mov
jnp
roll
ret
lahf
sbb
gs
add
cwtl
inc
test
mov
sarl
ss
call
scas
cwtl
mov
cli
mov
inc
adc
push
loop
inc
adc
jp
enter
pop
push
shrb
inc
div
push
push
icebp
lods
cltd
dec
dec
xchg
pushf
cmp
add
xor
pop
icebp
repz
jb
dec
les
popf
addl
notb
in
dec
pcmpgtd
pushf
jg
sbb
imul
dec
aas
pop
mov
pop
jmp
lods
sbb
pusha
jmp
cmp
fcoml
xchg
mov
loop
fstps
fsts
pushf
neg
pop
adc
into
jns
dec
int3
xor
sbb
mov
dec
insl
sub
pushf
inc
jmp
push
or
and
jno
pop
lods
jmp
lea
pop
loope
jge
sahf
xor
and
lret
pop
addr16
mov
sub
insb
jb
in
cmpb
xchg
push
mov
in
std
cmp
jge
leave
inc
lods
or
lds
roll
jecxz
adc
movsl
push
mov
jp
xchg
ficoms
movsl
pop
mov
movsl
add
shll
fadd
rolb
lods
test
cmp
out
frstor
mov
sbb
leave
lock
mov
movsb
ret
cmp
outsb
jno
xchg
adc
sahf
mov
cmpsl
std
or
xor
push
ret
in
es
data16
jp
cli
xor
test
cmp
clc
sbb
ja
mov
xor
loop
mov
aad
mov
roll
mov
xor
clc
sbb
sub
pop
outsl
cmc
lods
cmp
dec
mov
mov
cltd
jb
push
dec
stos
fidivrs
xchg
sub
jne
shl
jmp
fisubrs
hlt
jge
adc
sub
repnz
fldt
sbb
les
inc
sub
xor
xor
scas
sbb
iret
mov
ss
dec
mov
inc
in
pusha
or
jmp
dec
sub
inc
dec
ljmp
add
inc
sahf
adc
int3
mov
decl
xchg
cmp
lret
call
dec
movsl
mov
ror
jb
mov
ja
inc
in
xchg
std
loope
mov
pushf
mov
aas
dec
addb
je
std
loop,pn
in
pop
push
lcall
pop
sub
lret
add
fcmovne
loop
ljmp
push
cld
int3
xchg
mulb
mov
movsl
scas
fs
adc
rorl
dec
fistps
icebp
inc
enter
xchg
js
data16
scas
les
inc
xchg
jno
inc
inc
andps
mov
add
or
test
mov
andb
xchg
jmp
outsl
aam
scas
xchg
mov
mov
fstp
fmul
sub
xchg
lock
aas
lahf
stos
pop
adc
test
sub
sahf
nop
aad
mov
push
mov
les
jns
enter
std
fadds
mov
adc
repnz
mov
or
out
std
push
sti
or
testl
and
fcmove
sub
pop
mov
xchg
mov
mov
out
adc
or
xor
push
xlat
dec
sahf
dec
xorl
jo
inc
in
add
loop
inc
push
mov
pavgb
sub
call
ja
add
insb
jo
sub
popf
daa
and
repnz
jle
cltd
mov
rol
pop
xchg
mov
mov
in
subb
fwait
sahf
sub
out
sub
fcomps
faddl
lods
or
loopne
inc
mov
dec
cli
aaa
orb
loopne
adc
repnz
jae
addr16
pop
test
aam
push
jge
cmp
push
jb
sbb
inc
push
cmp
jecxz
dec
or
fisubl
sbb
and
adc
lds
cmpsb
aad
and
pop
neg
jns
sbb
ret
pop
jb
xlat
push
rcl
in
test
mov
adc
orl
dec
pop
ljmp
dec
jecxz
xor
xor
sbb
hlt
dec
jbe
stc
les
scas
pavgw
push
sbb
cmp
hlt
mov
movl
lret
and
lea
fwait
and
ror
sti
lret
jge
adc
out
xchg
sub
push
add
push
mov
mov
imul
into
in
inc
jne
sub
cmp
mov
dec
push
adc
je
into
dec
push
add
push
sbb
inc
push
sub
jb
stos
jno
pop
mov
insl
dec
mov
jno
mov
jg
clc
pop
ret
mov
in
add
pop
inc
cli
mov
lret
mov
outsl
cld
es
cmp
inc
push
sbb
dec
sbbl
fcomp
mov
nop
in
pop
lret
into
cmp
mull
pop
mov
scas
dec
or
xchg
mov
adc
insb
neg
mov
jle
popf
add
or
imul
xchg
pop
jg
ds
add
ret
das
ja
shrb
mov
mov
mov
inc
mov
add
daa
or
xchg
lock
sub
into
out
popa
into
jp
add
pop
ds
loop
mov
iret
call
xor
dec
mov
push
idiv
jae
test
mov
cmp
or
jecxz
mov
out
adc
push
push
ds
shll
or
popf
lret
ret
cmp
mov
cmp
xchg
jno
xchg
mov
inc
lock
ret
xchg
push
push
incb
lods
adc
les
mov
jb
push
filds
rcll
lods
in
mov
jbe
adc
pop
add
in
imul
inc
cwtl
mov
pop
scas
rorb
jo
or
jge
mov
dec
cmp
push
lahf
lret
adcb
cli
out
cmp
or
pop
fs
pusha
mov
mov
jo
aaa
mov
mov
loope
addb
cmp
cltd
sbb
out
lock
fcmovu
es
or
loopne
jecxz
sbb
xor
adc
push
mov
out
ljmp
sub
hlt
jl
dec
lea
imul
inc
sbb
clc
mov
filds
out
adc
push
pushf
mov
repz
lock
jmp
inc
data16
mov
jge
testl
iret
ret
jnp
cmp
jl
xchg
mov
mov
lods
mov
in
les
shrb
bswap
sti
lds
cmc
xor
pusha
out
or
mov
popf
fistpll
repnz
xor
mov
push
pop
adc
outsb
push
mov
subl
xor
pushf
ja
jmp
or
int
fsubrl
icebp
imul
subl
ficoms
mov
inc
lods
mov
ficomps
rorb
rorb
add
push
lret
xchg
cs
xor
mov
add
test
dec
jge
inc
inc
mov
rol
leave
sbb
out
stos
icebp
jp
xchg
push
es
lock
xchg
call
roll
cmc
inc
fistl
ror
cmp
fsubp
pop
sbb
xchg
and
int3
rcrb
rorb
std
mov
pop
testb
je
int3
dec
mov
rcll
cmpl
ret
iret
jp
ffreep
std
mov
cmp
addb
cmpsb
pop
lret
or
ja
movb
idivb
mov
mov
fnsave
or
setns
sbb
xchg
repz
leave
jo
xor
push
pop
je
sti
inc
ret
xchg
xorb
dec
sbb
inc
push
cmp
enter
mov
jecxz
cmc
sbb
pop
xor
out
adc
shr
das
xor
cmp
mov
pop
xchg
in
sub
sub
or
jge
adc
jp
shlb
lea
or
xchg
mov
sbb
sub
mov
or
movlhps
fdivrs
fstpt
pop
iret
or
popl
jge
and
inc
xchg
pop
sub
pop
js
and
arpl
xchg
fidivrl
das
mov
daa
dec
clc
daa
sub
stos
test
pop
mov
imul
pop
or
pop
sahf
out
jmp
fadds
lods
pop
std
and
sub
dec
movb
sbb
push
push
dec
mov
mov
int
loope
roll
cmc
shll
icebp
pop
xor
push
xchg
jl
fcmovnu
js
mov
pop
pop
mov
pop
mov
add
or
or
mov
mov
jae
sbb
jnp
ja
xor
pop
dec
add
xchg
sbb
push
repnz
mov
les
xor
xor
subl
mov
mov
cmpsl
jb
mov
adc
push
loope
gs
cmp
lret
lcall
bound
xlat
aaa
test
push
test
cmp
mov
jno
in
rorb
dec
pop
push
jge
inc
lahf
dec
push
ret
gs
icebp
add
mov
test
xchg
sbb
shr
mov
push
lods
push
xlat
xchg
daa
insb
adc
dec
aad
push
and
or
push
inc
jo
fimuls
ljmp
ds
adc
arpl
fwait
inc
pop
mov
mov
into
dec
pop
stos
mov
pop
addl
aas
sbb
fstps
aas
insb
lea
sti
sub
jge
add
push
sub
rorl
cmp
mov
lahf
pop
or
aam
jbe
cmp
adc
nop
and
in
xlat
mov
test
inc
bound
sarb
and
test
fldcw
sbb
ja
lret
pop
push
fldenv
push
sub
in
xor
loopne
dec
jb
jle
dec
push
xor
movsl
aas
xor
inc
cli
outsl
push
outsl
xchg
pusha
pop
sbb
scas
loop
out
push
shlb
addr16
sbb
or
lahf
push
push
mov
mov
sbb
cmc
jnp
out
pop
in
imul
push
lret
div
jnp
push
xor
sbb
and
mov
repz
push
aam
pop
shll
into
mov
mov
pop
pop
xor
iret
jo
or
adc
cli
insl
or
push
mov
daa
lock
add
add
jecxz
mov
aas
mov
es
not
sbb
mov
fs
test
hlt
xchg
in
fiadds
push
inc
or
pop
insb
dec
pusha
repnz
adc
out
xor
dec
or
cmpsb
pop
jmp
out
arpl
addb
sahf
iret
xchg
in
cmp
push
aam
push
dec
inc
je
pop
lret
pop
loop
lods
roll
inc
lods
mov
mov
dec
scas
jge
and
jg
mov
cwtl
jno
dec
push
fwait
testl
jo
cmp
hlt
insb
lahf
sbb
in
or
add
lahf
inc
hlt
clc
xchg
out
cwtl
mov
inc
jae
add
fisubrl
mov
cld
lock
and
jl
imul
add
imul
xor
fstl
dec
add
fbstp
pop
in
lods
rcr
cmp
notl
loope
or
mov
popf
jnp,pt
jmp
push
scas
pusha
mov
scas
cmpsl
out
add
mov
jnp
leave
lcall
ja
lock
out
loop
hlt
adc
int
jmp
rorl
pop
pushf
xor
hlt
ret
push
popf
jecxz
out
loope
lea
mov
fldt
mov
jns
cmp
cltd
mov
sti
add
aam
xchg
or
nop
pusha
mov
out
sub
cmpl
push
cmpsl
lea
push
sti
xlat
daa
orb
repz
fsub
jle
mov
pop
add
fnsave
sahf
rol
mov
nop
scas
sbb
add
jl
inc
movsl
subl
shlb
and
push
shrb
xor
ret
xchg
out
mov
add
popf
mov
or
popf
arpl
jp
insl
pop
out
and
aas
in
mov
ret
cmpsl
icebp
lods
jmp
hlt
notb
adc
fnstsw
nop
inc
fldl
dec
pop
dec
test
mov
push
cmp
pop
cmpsb
xchg
imul
mov
data16
repz
ss
sbb
push
repz
sbb
mov
test
push
jns
cwtl
mov
inc
inc
or
xor
push
scas
iret
loop
push
adc
lea
nop
in
ds
sub
inc
out
push
loopne
ljmp
int3
jl
daa
push
movsb
repz
pop
ficompl
jne
pop
bound
subb
out
push
jae
call
movsl
add
sahf
stos
cmp
xchg
shlb
jl
xchg
fcompl
mov
pop
lret
adc
mov
adc
stos
bound
push
jno
nop
pop
popf
cwtl
in
sbb
xchg
jge
push
sbb
popa
pop
and
scas
int3
sub
ss
bound
pop
jg
call
stos
and
dec
add
push
packsswb
dec
aam
out
cmp
fwait
jle
inc
dec
in
pop
xor
std
ficompl
pop
mov
fnstsw
mov
int
and
push
movsl
pop
jl
mov
inc
cmp
pop
mov
stc
sbb
cmp
les
ret
movsb
mov
hlt
mov
ret
xor
xor
sahf
or
xor
xchg
and
out
adc
adc
mov
movsb
dec
cltd
inc
js
or
xchg
mov
dec
leave
jne
dec
daa
fwait
sub
bt
cmp
dec
add
jnp
xor
mov
orb
pop
mov
shrb
xchg
push
jg
cmp
shlb
repnz
mov
add
repnz
push
xchg
sbb
inc
cmp
les
sahf
adc
fsubs
ret
cmp
nop
xor
iret
ret
gs
aad
pop
mov
push
sub
imul
pop
nop
xchg
mov
mov
aas
adc
cs
pop
adc
pop
add
in
lods
cmpsl
add
push
mov
add
push
fistpl
les
or
cmpsb
cmc
xchg
mov
jno
dec
cmp
mov
xlat
push
sbbl
xor
sbb
sub
out
hlt
fldt
loop
add
aam
mov
into
aaa
add
mov
ret
fwait
cmpsb
in
ret
push
dec
dec
lcall
repz
shr
mov
loopne
orb
sbb
cli
shl
xchg
xchg
ja
inc
stos
popf
and
or
mov
pop
mov
xor
pop
outsb
adc
adc
pop
mov
cli
aam
sarb
xchg
adc
xor
adc
sbb
daa
enter
xor
test
sbb
test
mov
jns
cli
loope
cmpsl
cltd
push
pushf
ret
and
mov
test
jo
mov
jb
mov
adc
out
or
sub
mov
dec
jecxz
mov
or
mov
ret
sub
rorb
shrb
pop
push
fwait
pop
cmp
mov
cmp
mov
pop
push
inc
add
ljmp
shrb
test
sbb
nop
mov
mov
mov
ja
sbb
or
mov
fwait
loope
mov
pop
or
cmp
cld
cwtl
rorb
daa
xor
in
pusha
icebp
and
jb
pop
cmp
ds
mov
push
cmp
xor
loope
fsubs
ficoms
push
mov
dec
jg
imul
jecxz
fmuls
xchg
mov
or
or
push
xchg
add
adcb
stos
sbb
add
cmp
add
out
mov
shll
mov
jg
jne
cwtl
jecxz
sbb
cwtl
xchg
outsb
mov
das
cmp
cmpsb
aad
mov
push
adc
inc
adc
int
notl
std
addb
xchg
ss
push
push
aaa
mov
xchg
fsubl
adc
aas
fcmovnu
or
fwait
lock
lock
mov
mov
sub
aaa
add
inc
enter
fisubs
cmp
lea
and
or
fcmovnbe
adc
cmp
ret
cmp
add
movsl
jge
stc
insl
sahf
inc
orl
js
push
subl
adc
pop
jl
sbb
or
clc
ret
add
xchg
xlat
iret
lcall
xchg
add
push
fwait
ja
pop
jb
add
jle
inc
je
xor
pop
xor
jb
lahf
ljmp
pop
repz
mov
test
add
leave
or
lahf
ss
repz
sahf
cmpsl
lcall
dec
push
mov
jae
pop
mov
or
mov
aas
mov
mov
pop
bound
out
in
cmp
inc
push
fmull
and
out
or
adc
in
dec
cmp
stos
mov
cmp
mov
loopne
fxch
sbb
inc
jl
cmp
adc
add
pushf
inc
lea
inc
mov
data16
movl
cli
xchg
mov
dec
test
ja
mov
loopne
lea
mov
sub
mov
ds
sub
jns
inc
sub
fwait
mov
jbe
ljmp
cmp
sbb
subl
jbe
mov
mov
pushf
shll
jo
rclb
test
xor
sbb
inc
cmp
je
sbb
lcall
pop
xor
movsl
insl
enter
enter
outsb
push
lret
sbb
movsl
ja
push
pop
repnz
mov
ja
cmpsl
test
sub
cltd
cs
inc
into
idivb
repz
push
sbb
adcb
fsubs
stos
stos
jne
mov
leave
lock
pop
int
jnp
ret
or
jmp
adc
jno
mov
add
out
adc
or
cld
add
lea
or
cmc
push
lahf
hlt
adc
sbb
scas
scas
sub
aad
jle
mov
mov
out
jb
out
sarb
fmul
inc
jecxz
call
insb
add
movsb
cmp
add
cli
stos
and
imul
push
or
and
aad
inc
jno
xor
sub
push
insb
cmc
les
stos
inc
mov
push
aam
int
testb
loop
mov
jne
ss
cmp
jge
shlb
mov
push
sarl
jnp
int3
mov
aad
push
mov
xor
andb
in
addl
stos
mov
sub
jp
in
mov
fisubl
jg
movsb
inc
add
inc
dec
xor
pop
sub
lcall
jp
popf
xchg
or
ret
fsubr
xor
or
stos
repnz
pop
adc
movsb
arpl
dec
mov
push
mov
xlat
addl
xor
lods
fs
pop
imul
mov
adc
inc
std
mov
dec
or
aas
push
in
into
lea
outsl
mov
test
cwtl
jae
sbb
mov
sbb
repnz
loope,pt
sbb
push
push
adc
pop
aaa
lret
mov
xor
xlat
repz
pop
subb
lods
test
ljmp
lcall
lret
test
out
sub
mov
mov
dec
xchg
sub
ret
push
into
mov
js
pop
xchg
test
js
fstl
adc
dec
rcr
icebp
cld
dec
adc
cs
repnz
movsb
loopne
jmp
jae
sti
lahf
mov
je
add
sti
dec
and
xchg
pop
push
sbb
rcl
sti
sti
mov
sti
lret
xlat
imul
xchg
and
icebp
repz
and
jnp
bound
cmp
mov
fstpl
jle
dec
js
and
xchg
mov
bound
iret
pop
jae
add
xchg
pop
add
movsb
sbb
jne
cmp
mov
or
add
arpl
xchg
cmp
dec
push
inc
cmpsl
or
out
mov
rclb
dec
out
sbb
jno
xchg
xor
cmp
pop
ret
adcb
mov
mov
icebp
pop
les
push
sub
jno
shl
shl
pop
fcomps
push
mov
aad
cltd
sub
mov
pusha
pop
xchg
mov
or
mov
dec
lods
inc
adc
insl
mull
jp
lret
test
add
cmpl
jg
test
mov
cmp
push
stos
lahf
loope
sbb
fwait
sahf
and
jmp
out
pop
mov
je
mov
sub
inc
pop
pop
sbb
imul
and
jl
push
xor
in
jns
in
push
mov
dec
adcb
insb
dec
or
xchg
fldz
dec
test
dec
xor
push
add
xchg
dec
jo
xor
faddl
jge
jmp
xchg
stos
xchg
in
sbb
cwtl
mov
lret
ret
lret
loopne
fistl
aas
jle
dec
pop
fadd
xor
iret
add
mov
stc
sbb
or
ret
mov
sbb
or
xchg
loop
sub
sahf
divb
mov
lret
daa
hlt
pop
mov
or
cmc
lods
xchg
push
xchg
jg
dec
push
push
imul
movl
lcall
pusha
push
inc
xchg
sahf
gs
xchg
jae
adc
imull
outsl
leave
xchg
xor
add
cmp
mov
je
jmp
sahf
fstps
add
out
loope
push
daa
out
leave
enter
mov
push
in
aam
pushf
mov
rcl
ret
lret
pop
rorb
lods
sub
pop
mov
and
add
cmc
test
aas
fidivrl
in
cmpsl
xchg
sub
lds
adc
int3
xchg
jnp
inc
add
imul
push
dec
mov
or
dec
stos
lds
cmp
aaa
push
lret
sub
mov
leave
push
scas
loopne
addr16
test
adc
pop
push
mov
cld
mov
mov
add
sub
test
imul
mov
inc
ss
out
in
mov
or
orb
bnd
stc
mov
pop
add
or
popa
or
fnstcw
ljmp
or
int
pop
xchg
in
and
inc
pusha
aaa
icebp
mov
adc
jge
pop
jmp
movntps
push
mov
add
ret
rcll
push
xchg
js
mulb
das
add
pop
addr16
mov
mov
mov
repnz
mov
dec
ret
mov
add
inc
shlb
sbbb
inc
cmp
sbb
pop
stos
shlb
aam
xchg
ret
daa
subl
loope
nop
lret
cmpsl
dec
cli
dec
stc
sti
push
jno
outsl
enter
push
mov
cmpsl
scas
cltd
add
fstps
xchg
or
les
mov
sub
in
cltd
scas
sbb
imul
push
cmp
xchg
sub
mov
xchg
push
mulb
hlt
rorb
mov
fnstcw
pop
sbb
mov
movsb
jne
test
stos
sub
push
dec
sub
stc
and
sti
pop
mov
pop
addr16
test
sub
roll
ret
mov
dec
mov
mov
fucomip
and
incb
sbb
mov
jo
cmp
cli
movsl
daa
test
lcall
in
mov
cs
dec
add
test
push
jbe
dec
sahf
hlt
dec
sub
cmp
mov
sahf
inc
sbb
cmp
imul
push
push
jne
mov
aad
in
lods
jle
repnz
incb
xchg
das
divb
mov
mov
mov
int3
ljmp
jne
imul
les
in
movsb
ljmp
xor
xor
gs
scas
jge
out
int
in
xor
rcrl
cltd
adc
jle
sub
adc
ljmp
mov
jle
sub
xchg
in
and
jb
popf
mov
cs
pop
mov
insl
xorb
jno
pop
call
wrmsr
mov
faddl
cs
sub
dec
fs
push
lret
xor
frstor
sbb
bound
imul
test
fcmovbe
gs
test
jg
aad
fcomip
or
dec
pop
mov
or
mov
call
in
ret
sub
cmp
sub
mov
lret
adc
das
inc
fs
dec
loop
test
daa
aas
ljmp
mov
cmpsb
popf
xchg
into
outsb
lea
in
mov
add
xlat
shlb
jo
test
imul
adc
and
lcall
add
int3
inc
pop
mov
inc
sub
adc
movb
loope
lods
addb
mov
lds
cmp
mov
jo
movsl
ds
lock
jno
out
inc
mov
mov
aaa
mov
and
adc
xchg
popa
leave
inc
and
jb
rorb
fidivrs
xchg
in
xor
cmp
out
xchg
jmp
add
mov
or
xchg
mov
cmp
jecxz
in
sti
add
lods
push
cmp
xchg
cltd
fimull
rol
and
test
jns
push
pop
stc
or
push
mov
xor
into
in
loop
popf
lea
mov
cli
push
std
mov
fistl
add
mov
or
scas
stos
ret
pushf
xor
adc
idivl
or
stc
test
push
xchg
pop
insb
cs
movsl
std
in
sub
ja
ss
xchg
adc
mov
sbb
jle
xchg
xor
add
testb
push
mov
clc
mov
adc
sub
in
xor
lret
or
mov
repnz
adc
sub
push
pop
dec
pop
mov
and
inc
pushf
stos
inc
jno
add
mov
test
fwait
mov
pop
pop
lcall
and
cmp
cltd
loope
icebp
js
mov
test
scas
stc
xor
subb
cmp
push
cmpsl
and
insl
cmpsl
or
mov
xchg
mov
adc
cld
pushf
lods
jmp
jp
cmp
insl
and
das
push
or
shl
adc
stos
jo
dec
imul
xor
fidivl
ja
or
jge
repz
xchg
lea
add
push
fiadds
xchg
int
ds
in
pushf
mov
mov
and
xchg
insb
inc
mov
scas
and
pop
mov
mov
mov
inc
or
mov
jo
sbb
dec
outsb
xchg
pop
push
lcall
mov
xchg
hlt
out
push
insl
out
sbb
es
push
cmpsl
out
dec
pop
and
mov
pop
mov
xor
mov
pop
push
lcall
cli
jnp
stos
outsb
pop
mov
ret
mov
push
or
pop
dec
sub
xor
clc
mov
cwtl
add
mov
cli
push
jg
or
cli
mov
adc
icebp
push
mov
aaa
shll
stos
sbbl
cli
mov
push
push
cli
jge
es
pop
loop
and
jnp
adc
pop
popf
pop
push
pmaxub
mov
fldl
push
add
std
mov
cmp
sbb
cmp
cld
es
jle
xor
shlb
imul
mov
mov
and
dec
jo
das
bound
stos
or
fstp
mov
mov
mov
std
inc
mov
fcmovnb
sub
sub
inc
cmp
es
sbb
stc
push
arpl
dec
enter
sbb
cmpsl
dec
and
iret
and
adc
xchg
in
clc
push
sbb
cltd
jg
xchg
cs
lret
loope
cmpsb
test
adc
push
out
iret
mov
xchg
inc
outsb
push
test
cmpl
mov
imul
push
test
dec
cmp
mov
or
stos
mov
jge
and
mov
cmc
cmp
push
cs
jg
or
mov
sbb
lcall
dec
shlb
mov
cmpsb
or
jmp
add
pop
sti
ret
aaa
pop
mov
mulps
jle
xor
out
out
xchg
pop
cld
test
test
sti
adc
adc
jecxz
jns
ret
arpl
in
int3
mov
arpl
pop
popa
loope
loopne
pop
mov
aaa
loopne
mov
ds
jo
adc
mov
jmp
xchg
lock
cld
inc
inc
mov
sub
mov
add
movsb
pop
jp
es
sbb
inc
mov
rcrb
fisttps
fwait
psadbw
mov
js
fsubrl
add
aas
pop
jmp
mov
sbbb
in
fists
test
mov
jle
mov
mov
and
sti
mov
in
lock
push
leave
test
stos
push
pusha
push
cli
sub
push
or
int
pop
jne
and
es
out
mov
adc
add
out
notb
insl
in
push
mov
dec
cmp
and
in
rorl
mov
pop
or
sub
and
les
sub
stc
push
les
jns
lret
jnp
inc
lcall
pop
xor
add
es
or
xchg
xor
pop
mov
jmp
cld
movsb
mov
lret
jae
test
jnp
pop
js
lods
xchg
hlt
shrl
out
xor
in
cmp
scas
mov
dec
or
xor
rorl
es
out
fwait
cmp
gs
inc
add
cmp
into
iret
fwait
into
pop
pop
adc
hlt
cwtl
loop
sub
stc
xchg
and
jnp
es
aaa
ret
xor
jl
les
and
lret
add
sti
pop
adc
push
xchg
into
movsb
loopne
mov
jnp
mov
adc
push
cmp
insb
pushf
push
lahf
stc
mov
aas
jbe
cmpsl
fs
test
ret
push
ds
push
dec
pop
test
ds
sub
add
out
popa
sbb
clc
and
dec
sub
push
adc
and
jne
repnz
mov
adc
fidivs
popf
ja
lret
cmp
and
loope
or
fistl
mov
cmp
fadd
xchg
daa
js
push
gs
adc
loop
cs
inc
loopne
mov
dec
xchg
add
push
mov
sub
out
add
sti
lret
rcll
jne
lret
movsb
out
inc
or
clc
mov
jnp
subb
iret
inc
scas
sub
or
xchg
xchg
jno
and
cmpsl
shlb
xor
jl
cld
jmp
push
inc
insb
cmpsl
xchg
push
jle
je
sti
add
and
xor
mov
fcmovnu
fldl
lock
rcll
clc
push
in
lock
or
insb
pop
adc
cmpsb
je
jg
rclb
or
and
mov
shr
lcall
stos
mov
daa
stc
add
cmp
xchg
push
xor
rolb
ss
out
xchg
fstps
insb
popf
leave
add
xchg
movsb
jge
shrl
mov
lret
out
in
xchg
jp
add
inc
sbb
int3
in
call
pop
shr
xchg
adc
adc
div
incb
lcall
das
mov
repz
mov
dec
ret
adc
xchg
xchg
fistl
dec
stos
mov
jge
in
mov
add
lcall
pop
filds
in
sbb
jnp
dec
adcl
and
add
subb
sub
fmulp
fidivl
fidivrl
mov
jno
xchg
dec
repnz
std
in
cmpl
jecxz
mov
ror
stos
and
dec
frstor
push
inc
inc
xchg
daa
and
add
push
test
rcrl
adc
ret
pushf
jns
xchg
xchg
mov
ja
sub
imul
mov
xchg
and
add
sub
adc
mov
insb
fidivrl
stos
jecxz
xor
ljmp
rclb
inc
faddl
iret
push
or
aaa
jge
insb
scas
jnp
pushw
rcrl
jl
jae
fstps
fsubs
jno
add
cltd
sub
sub
push
xor
jmp
cmpsl
bound
xchg
mov
xchg
mov
xchg
lods
mov
call
push
clc
insb
push
sub
xor
dec
cmpsb
and
jo
rorl
or
or
cmp
mov
push
sub
adc
mov
sub
fsubrl
fisubl
in
lcall
pop
imul
ss
pop
xlat
adcl
jbe
pop
out
sub
js
pop
cmc
jecxz
dec
mov
data16
inc
outsl
loopne
std
scas
lds
xchg
jl
sbb
adc
test
fwait
push
dec
in
mov
jns
arpl
cli
mov
sbb
sub
xor
lahf
les
popa
jp
cmp
and
shll
popa
test
sub
cmc
lock
xchg
mov
outsl
decb
setb
icebp
jb
sub
lods
imul
or
sub
or
sbb
nop
push
adc
dec
push
les
cmpb
and
js
pushf
push
or
inc
mov
jne
jge
pop
jne
sub
xorb
mov
loopne
dec
or
jmp
mov
outsb
push
pop
push
loope
push
pop
cmp
inc
xchg
idivb
movsl
and
xchg
xchg
arpl
or
inc
mov
sti
cltd
inc
dec
adc
mov
out
pop
jns
jle
lret
rclb
call
inc
stos
push
lods
insl
dec
fnsave
scas
out
in
arpl
insb
mov
push
sbb
mov
cmpsl
test
in
xchg
leave
jo
add
cmp
fistpl
xlat
add
cmp
mov
aaa
out
dec
orl
dec
loopne
mov
jl
test
push
sarl
scas
ret
adc
outsl
int
fs
outsl
add
movsl
cmp
gs
add
mov
xor
push
xchg
sbb
fwait
pop
cmp
xchg
scas
jns
fstl
ja
lods
mov
mov
loop
mov
cmp
inc
mov
cmpsl
aam
mov
dec
ficoms
loope
scas
jns
int
and
les
sub
in
ja
popa
pop
xlat
and
sub
jmp
cmp
adcb
sti
adc
cmpsl
out
push
fcmovbe
mov
stc
sbb
stos
inc
in
loop
cmp
repz
jo
scas
jno
mov
rolb
xchg
xchg
sbb
movsb
push
mov
pop
cmp
cmpsl
pop
sub
loopne
test
outsb
add
jmp
cwtl
add
pop
and
sbbb
fnstsw
push
add
sbb
xor
ficoml
and
cmp
enter
fdivl
enter
lahf
subl
aam
add
mov
fidivrl
jle
pusha
cmp
mov
movsl
xchg
xor
jg
or
push
add
fwait
jl
addb
ljmp
push
xor
in
pop
ror
xor
mull
test
cltd
sub
shlb
fstps
inc
ret
pop
pop
jae
add
outsb
shll
mov
and
ja
mov
xor
xor
repnz
mov
xor
pop
mov
adc
add
add
in
jno
call
vmovhpd
repz
faddl
fcmovnbe
sbb
push
addr16
js
xchg
cmp
and
dec
pop
fiadds
lods
cld
push
xchg
stc
repz
inc
enter
into
sbb
ror
and
adc
push
dec
mov
jbe
sets
pop
xchg
test
loopne
loop
xor
or
mov
int3
stos
inc
insb
mov
lds
pop
stos
int3
mov
enter
gs
pop
and
push
add
sbb
lock
cmc
in
stos
mov
dec
push
stos
add
sub
lcall
mov
add
mov
or
nop
pop
sub
lods
inc
sbb
jg
pop
inc
orb
adc
sub
pop
lret
xor
and
outsb
jno
dec
dec
sbb
repnz
xchg
addr16
xchg
mov
leave
lret
lea
xchg
addr16
pop
inc
push
ja
xor
push
add
fldcw
lods
cmp
mov
sub
jl
cs
and
xchg
into
or
push
inc
jb
jnp
dec
xorb
out
adcl
push
out
cs
cs
sub
sbb
movsb
pop
loop
pop
jae
addb
pop
iret
insb
mov
rorb
lds
mov
fnstcw
in
js
hlt
rcll
insl
mov
push
jmp
cmpsl
test
pop
xor
out
sbb
stos
jo
mov
pop
and
je
aad
popa
xlat
arpl
pop
add
add
dec
cmc
clc
lds
xor
sbb
pushl
adc
sti
adc
add
inc
and
jb
xor
popa
mov
add
and
into
add
push
inc
out
xchg
clc
adc
sub
fbld
pop
in
push
adc
fistl
xor
or
in
add
ja
loopne
jo
test
daa
xchg
pop
rcrb
xchg
pop
pop
mov
ja
imul
pop
cld
push
fsts
fildll
andps
push
jecxz
andb
mov
adc
jmp
push
ljmp
pop
push
loop
stc
cmpsb
loope
enter
rorl
dec
mov
sub
xor
sbb
lcall
cwtl
das
sti
addl
fisttpl
pop
jecxz
mov
add
jp
aam
roll
sub
push
data16
push
sub
jne
xor
arpl
add
pop
add
insl
and
jb
nop
dec
and
movb
mov
cltd
test
fadds
adc
push
pop
addl
lock
pop
bound
push
ret
hlt
dec
arpl
adc
push
test
jb
mov
cmp
fistl
adc
mov
mov
fwait
arpl
in
xchg
adc
cld
mov
dec
rol
mov
sub
hlt
lahf
mov
hlt
stos
imul
repnz
push
mov
imul
mov
loope
jecxz
cmp
test
push
movl
cmp
inc
popa
cmp
mov
dec
out
jmp
cltd
push
test
imul
negl
adc
daa
sub
mov
push
mov
sti
fidivrs
and
ss
xchg
lcall
add
pop
cs
inc
ljmp
push
stos
scas
adc
arpl
out
push
jns
dec
add
mov
sub
negl
hlt
test
pop
sbb
and
das
cmp
pushf
mov
lea
push
stos
lds
mov
sarb
mov
jge
shlb
lods
mov
adc
mov
adc
lret
shlb
ja
lret
push
inc
call
fisttps
dec
sbb
dec
mov
ret
out
pop
adc
inc
pop
fs
sub
mov
sub
ljmp
notl
incb
mov
pop
stos
leave
leave
lret
cwtl
ret
pusha
lret
fcoml
or
into
rclb
dec
add
mov
pop
pop
adc
inc
or
pop
scas
repz
lock
dec
xchg
jbe
lods
fwait
mov
sbb
xor
fidivrs
in
icebp
out
dec
sub
mov
arpl
mov
lea
into
leave
sbb
pusha
mov
sti
in
inc
mov
xchg
lock
dec
or
and
daa
mov
mov
ss
mov
aam
add
insb
mov
cmpxchg
inc
push
push
insl
mov
sub
pop
push
pop
mov
jle
inc
cmpsl
movsl
cmp
enter
mov
popf
or
cmp
in
xor
lock
sti
and
pop
inc
icebp
xor
outsl
inc
pop
or
add
add
das
in
xchg
jnp
push
push
pop
rol
inc
and
sub
xchg
jl
mov
mov
xchg
dec
push
repz
push
sbb
mov
rolb
adc
dec
test
cmp
outsl
jns
in
mov
sbb
stos
pop
movsb
jmp
fnstenv
daa
push
std
pop
out
push
adc
mov
xor
jo
mov
xchg
mov
shrl
insb
jbe
mov
sub
jmp
push
std
xchg
xchg
mov
loope
mov
into
pop
add
xor
push
mov
mov
xchg
jae
mov
push
js
pop
out
scas
jmp
sbb
jne
or
xor
dec
sub
pop
aas
out
stos
bnd
inc
repz
cmp
cmpsl
sahf
insl
push
aam
cmc
mov
add
mov
aaa
sub
nop
fdivrs
mov
push
inc
stos
addr16
in
fisttpl
vpmaxsw
push
mov
xchg
push
xor
mov
js
sar
jecxz
inc
cwtl
jp
lcall
mov
sub
and
arpl
test
inc
and
loope
and
ds
xchg
les
ds
or
mov
xchg
pop
cmc
adcl
outsb
pop
push
insl
ds
or
cwtl
adc
fdivl
cmp
out
jbe
rolb
dec
pop
push
push
loop
jmp
sbb
or
inc
stos
rorl
push
adc
mov
icebp
xorl
pop
or
mov
push
lret
mov
lahf
outsb
mov
xchg
int
hlt
inc
and
and
andl
or
mov
xchg
imul
cwtl
xchg
lahf
icebp
lds
cwtl
cmpsb
lods
jle
cld
je
pop
inc
test
xchg
pop
push
sub
or
pop
or
fmull
cli
xchg
sub
pushf
int
andb
push
test
push
scas
fbld
dec
das
lcall
orl
mov
xor
inc
push
cwtl
loope
je
xchg
push
sbb
cmp
and
cmp
shrb
shrl
in
testb
add
push
das
inc
and
mov
cltd
out
adc
cld
xchg
mov
fiaddl
xor
ljmp
sbb
add
add
out
add
clc
fdivrs
inc
push
mov
clc
xor
sub
push
sbb
mov
push
inc
cmpsl
out
push
shrl
out
js
push
aas
sbb
jno
std
idivb
lret
pop
lret
push
adc
test
ficompl
add
lahf
pop
push
fsubs
push
incl
int3
jmp
loop
and
adcl
jo
inc
test
xchg
sbb
pop
pop
pusha
out
sbb
mov
mov
mov
out
stos
lea
dec
or
push
vcvtss2si
cmp
lret
test
adc
push
loope
mov
test
lret
aam
cwtl
cwtl
ret
subb
cmc
adc
and
cld
push
call
push
add
fnstcw
cli
outsl
aad
fistl
add
and
xchg
jns
movsb
gs
iret
divl
ret
sub
add
sti
jb
rcl
sbb
jae
mov
mov
pop
ss
pusha
fldcw
lds
adc
jno
jb
mov
jnp
or
cmpsb
push
xchg
sub
nop
data16
movsl
negb
rclb
push
mov
or
jns
xchg
mov
mov
sahf
into
xchg
enter
js
add
mov
mov
aad
cmpsl
dec
fldt
xlat
push
add
movsb
nop
jp
pusha
shlb
add
fmuls
ret
movl
xor
mov
xor
aad
push
aad
out
mov
sub
and
les
inc
xchg
in
xor
or
mov
push
sub
roll
jmp
inc
ficompl
push
test
push
or
notb
lret
out
mov
xchg
pop
mov
mov
cmp
mov
sbb
pop
xor
add
jb
mov
mov
add
insl
and
jae
adc
xor
lea
push
sub
push
insb
jecxz
repnz
pop
outsb
notl
leave
sbb
xorl
test
aad
stos
pop
lret
ret
lret
dec
mov
and
std
sbb
xor
gs
lret
sub
faddl
imul
into
mov
or
adc
jno
movsb
ljmp
adc
inc
pop
lret
sub
and
pop
rcrb
fwait
pop
mov
xchg
mov
mov
fwait
cmp
mov
adcb
lods
xchg
outsb
push
gs
or
xorl
jbe
pop
push
popf
imul
insb
sti
in
cli
dec
aam
out
mov
aam
and
movsb
xor
and
cmp
pop
cltd
mov
js
jp
stos
inc
jne
mov
inc
and
outsl
xor
ret
adc
pop
adc
pop
scas
xorl
test
pop
stos
cmp
mov
into
test
add
lahf
pop
lcall
xor
cmp
pushf
xlat
hlt
add
mov
mov
inc
cld
adc
jg
rclb
lahf
pop
in
xchg
movsl
mov
ficoms
out
imul
hlt
mov
sub
mov
enter
andb
jp
jge
mov
out
dec
daa
out
inc
out
push
scas
jo
mov
or
push
jne
inc
mov
mov
in
lock
jae
rorb
fwait
imul
push
idivl
ja
dec
cmp
pop
inc
add
and
mov
jno
js
cmp
jp
sahf
inc
ficoml
icebp
mov
aas
test
fstps
xchg
lret
dec
cmp
push
lock
movsb
sbb
sub
loope
sub
and
sti
push
inc
bound
or
pop
mov
pop
dec
popf
adc
sarb
dec
sbb
sub
jae
mov
add
jg
sub
sbb
int3
push
stos
sahf
push
jno
icebp
jle
push
ss
dec
jne
mov
fisttpl
fisttpl
hlt
gs
roll
inc
pop
mov
fwait
mov
das
sbb
ja
mov
or
in
mov
mov
mov
xchg
jle
ljmp
int
insl
push
add
scas
bound
mov
jmp
rcr
jge
jno
aam
shl
ret
inc
push
shll
lds
add
push
imul
jle
cwtl
in
jne
add
inc
fcoms
xchg
jg
loope
out
xor
mov
xor
jecxz
out
repnz
call
mov
mov
xor
sub
dec
mov
push
mov
pop
les
stc
jno
adc
pop
jmp
lahf
push
add
ds
jmp
repnz
xor
pop
insb
mov
mov
dec
lret
ja
les
xlat
flds
fldcw
push
jge
jne
pop
inc
iret
sub
je
subl
icebp
js
xor
push
test
mov
add
mov
rcll
fimuls
or
mov
xchg
push
mov
iret
pop
fistps
popf
fbstp
mov
scas
jmp
xchg
xchg
sbb
sbb
filds
mov
cmpsb
cmpsl
pushf
cs
mov
mov
fnstcw
or
pusha
mov
push
imul
lea
jne
and
mov
cltd
jmp
daa
sbb
aad
cmp
aas
jne
mov
call
sysenter
push
push
shr
out
inc
mov
insl
mov
loop
stc
mov
out
sbb
clc
pop
ljmp
cli
int
or
fmull
mov
loope
xor
sub
leave
gs
xchg
jns
leave
cmp
notl
mov
mov
mov
dec
xor
lret
in
add
adc
mov
xor
inc
sahf
shlb
xchg
icebp
push
clc
xchg
ljmp
leave
pop
xchg
inc
gs
lds
aaa
fisubs
push
sub
aad
gs
and
clc
aaa
lods
or
pop
loopne
add
mov
jb
orb
test
mov
rorl
subb
mov
push
and
popa
fxch
jnp
mov
jl
pop
loopne
sub
mov
out
xor
push
jb
fs
stc
xor
sahf
in
adc
push
fstps
repnz
pop
adc
loop
repnz
stos
jae
mov
inc
adc
fwait
mov
orl
cmp
bound
add
mov
mov
push
xchg
push
mov
stos
fwait
xchg
and
imulb
jne
test
or
jp
call
int3
ja
in
into
inc
insl
call
insl
add
jmp
lea
lcall
add
lret
dec
insl
neg
js
xchg
or
and
sub
adc
fcomip
pop
cmp
fsubr
movsl
mov
ret
jae
jle
iret
dec
repnz
mov
rol
sarl
add
stos
cmp
andl
mov
pop
lods
pop
nop
je
mov
inc
sbb
repz
or
jge
ficoml
jle
pop
and
mov
cli
jp
sbb
jns
jp
testl
inc
cmp
test
or
cmc
mov
int
mov
mov
std
pop
lods
shll
mov
jp
fsts
jge
push
xchg
cli
xchg
movsl
ret
stos
cmp
mov
add
shlb
std
inc
dec
nop
mov
fidivl
sub
sub
xor
mov
jg
inc
pop
mov
sub
out
roll
sbb
add
aam
and
lock
sbbl
add
sub
mov
lcall
cmp
lock
and
xchg
js
popf
add
rclb
adc
add
icebp
inc
push
into
cmp
stos
mov
jnp
jge
mov
jmp
jae
and
ret
cmp
push
pop
pop
imul
lret
or
hlt
stos
sub
lcall
push
adcl
daa
xchg
jo
dec
rcrl
mov
sub
jo
icebp
mov
push
xchg
pop
shl
mov
mov
ret
idivl
dec
aaa
rorb
inc
jae
ja
push
inc
mov
sub
shlb
inc
dec
mov
mov
imul
mov
js
jbe
xor
dec
sub
mov
cld
test
outsl
lds
add
mov
lcall
xor
movsl
inc
mov
jne
gs
stos
xchg
leave
fisttps
repz
ficoms
fs
jmp
sti
push
and
xchg
jmp
and
and
hlt
out
movb
icebp
sub
and
jno
xor
sub
inc
std
mov
lret
xchg
fcoml
ljmp
cmpsl
or
jne
mov
jl
test
sbb
cmp
dec
sub
jbe
aas
mov
stos
xor
push
push
jo
push
sub
fbstp
data16
cmc
repz
push
cmp
sub
xchg
mov
mov
out
shll
js
sub
or
mov
pop
addl
xchg
or
cltd
mov
pop
test
cld
pop
push
ret
add
popa
sbb
and
cmp
pop
test
addl
outsb
inc
stc
and
mov
je
out
fs
movsl
cmp
test
icebp
jl
or
and
adc
and
add
stos
or
shl
mov
in
rclb
cmp
mov
sub
dec
sub
mov
sbb
jle
test
test
repnz
mov
test
jp
lcall
pop
fsubrs
pop
not
mov
nop
shl
and
nop
dec
shl
push
adc
notb
jmp
or
clc
jp
mov
mov
roll
notl
aam
xor
cltd
aad
cmp
andb
cmpsl
jmp
adc
cli
xor
mov
adc
or
arpl
cmc
jno
into
mov
xchg
jmp
pop
xchg
inc
push
jl
add
in
inc
push
add
inc
cmpsb
rcr
mov
xlat
xchg
mov
lret
imul
inc
cmp
pop
pop
ljmp
test
lcall
jmp
rol
add
aad
xor
xor
add
jo
aad
pop
aam
sbb
lods
test
adc
mov
mov
jp
jo
fwait
das
andb
sub
fidivrl
stos
and
out
les
push
mov
pop
dec
aam
aas
cld
movsl
stc
mov
cmp
fnstcw
mov
mov
pop
out
and
sbb
jae
sub
outsl
cmp
out
int3
mov
push
insl
mov
mov
outsb
sub
sub
or
jmp
xchg
cmp
and
nop
mov
mov
popf
push
xchg
pop
adc
push
enter
cmc
dec
cmc
pop
imul
xchg
xor
mov
jb
pop
pop
daa
fstpt
out
mov
jp
daa
adc
pop
cmp
js
pop
movsl
leave
movsl
add
xor
insb
and
push
out
out
call
xor
adcb
or
mov
mov
insl
clc
lret
push
jl
xchg
pop
clc
test
bound
mov
pop
pop
jne
mov
aas
pop
pop
mov
sub
je
mov
or
flds
out
rorb
dec
inc
cltd
add
scas
mov
lret
sub
add
fimuls
lret
sbb
testb
add
lret
sub
ja
adc
mov
xchg
iret
xchg
mov
hlt
fstl
jge
aaa
loopne
pop
stos
loopne
cs
xchg
ss
cli
es
adc
mov
xbegin
add
outsl
sub
mov
ds
and
je
mov
mov
pop
lahf
jmp
sub
sar
pop
loop
or
leave
maxps
cmp
movsb
mov
fcom
push
dec
pop
out
dec
iret
aad
xchg
dec
and
xor
dec
jmp
fstl
pop
dec
fbstp
pushf
pop
loope
sub
hlt
ss
ficoml
scas
or
in
pop
addr16
cmp
jecxz
dec
mov
scas
stos
inc
mov
leave
lret
mov
and
push
mov
and
shrl
adc
jae
out
dec
daa
jecxz
cmpsb
and
outsl
xchg
stos
jmp
xorb
sbb
jmp
mov
sti
xchg
fs
adc
add
jge
xchg
insl
popf
inc
fs
push
mov
dec
mov
lods
mov
rcl
iret
nop
insl
dec
icebp
pop
add
lahf
adc
lea
push
pop
in
hlt
jns
pop
inc
sbb
in
popa
jle
jae
je
rorl
out
loop
dec
mov
in
and
out
das
addb
es
imul
subb
cli
fwait
ror
cmp
pop
movb
mov
cltd
stos
mov
mov
cmpsb
sub
enter
sub
sub
mov
sbb
pop
mov
xchg
xchg
push
and
pop
rcrl
fisubrl
push
icebp
lret
aam
cmp
das
ljmp
ja
sub
pop
je
movsl
jge
add
icebp
add
in
add
push
ljmp
ljmp
xor
dec
add
xor
test
cmp
cmp
mov
es
mov
add
mov
repnz
push
ret
pop
mov
in
lret
jmp
pop
jb
pop
inc
push
out
std
jns
test
adc
jmp
icebp
push
outsb
xchg
ficompl
and
xlat
pusha
xchg
add
enter
cld
inc
pop
es
ret
aaa
sbb
pop
mov
push
jmp
jge
stc
mov
jns
mov
mov
jmp
jp
xchg
add
test
pushf
add
mov
pop
xor
mov
cmp
and
pop
daa
jmp
aam
outsb
negl
push
fldt
in
pop
movsw
rcrl
fdivr
bswap
enter
cmp
addr16
stc
inc
and
shl
in
pushf
punpckhwd
jl
lahf
inc
lret
and
pop
or
push
cmp
test
icebp
sub
mul
inc
subl
testl
stc
or
sbb
pop
push
xor
lock
stos
adc
pusha
fdivrl
jle
adc
add
repz
scas
lock
sbb
dec
je
or
cmc
in
adc
adc
inc
lahf
test
das
pop
cld
sar
nop
fistpll
mov
repnz
pop
rcll
mov
adc
fucomp
lret
sub
jge
mov
cmp
xor
xchg
cs
sub
daa
inc
add
cld
jo
push
jnp
mov
add
outsb
add
daa
jno
arpl
and
fbstp
out
sahf
out
mov
stos
addr16
imul
jl
clc
int
mov
sti
xor
pop
and
lret
jecxz
pop
jns
pushl
push
mov
cmp
cmp
imul
inc
jno
cmpsl
fstps
mov
or
jbe
popl
mov
aas
push
jae
js
jo
pop
and
sub
or
add
lds
sub
in
sub
mov
inc
lahf
dec
and
add
cmc
jmp
fstpl
xor
ljmp
inc
mov
cmp
pop
outsb
lock
dec
xchg
push
mov
aas
lret
push
aas
pop
jb
stos
jg
xchg
mov
push
push
mov
mov
fnstcw
test
mov
ret
pop
imul
jg
or
pop
mov
loop
outsb
adc
push
mov
nop
leave
add
sbb
inc
sub
repz
xor
inc
xor
cmpsl
cmp
ror
in
sub
and
ret
add
stos
dec
mov
mov
pop
incl
pop
mov
ret
in
out
mov
icebp
xchg
xchg
xchg
push
lret
addr16
and
xor
jl
jae
dec
lahf
outsl
push
inc
inc
popa
lods
ret
in
or
push
and
sbb
out
push
aad
ret
ljmp
es
push
add
push
or
push
test
push
and
mov
jbe
das
movsb
mov
mov
cmc
test
aad
shrl
pop
imul
xor
cmp
fnstcw
sbb
mov
jb
clc
fstpl
xchg
imul
jle
sub
aas
mov
cmp
in
fistps
leave
pop
and
lds
cmp
sbb
shlb
and
sahf
imul
push
insb
scas
fwait
mov
addr16
mov
lahf
mov
inc
add
push
repnz
mov
unpckhps
out
adc
cmc
bound
sub
and
ret
sahf
fistps
arpl
cmp
pop
cld
ficoml
add
push
cmc
les
into
jp
loope
mov
pop
lret
dec
and
or
cmpsl
dec
and
sahf
xchg
adc
ja
loopne
adc
inc
das
inc
das
inc
xchg
insl
fdivp
movsb
adc
lret
rclb
cs
pop
sub
pop
in
sahf
call
mov
movsl
xchg
or
rorb
xchg
call
add
dec
xchg
mov
pop
js
mov
jle
stc
or
rorb
out
movb
mov
inc
nop
and
stos
inc
pushf
push
cwtl
ret
iret
shrb
add
and
jbe
repz
dec
out
pop
into
std
aam
or
arpl
sub
insb
pop
adc
push
outsb
or
cmp
jbe
push
test
adc
add
mov
subl
add
fwait
pop
test
or
dec
negb
mov
add
or
or
pop
jnp
mov
out
cmp
jno
add
daa
and
mov
popf
mov
popf
insb
loopne
xchg
add
push
enter
shlb
xchg
sub
fs
cmp
cmp
ss
add
jg
fnstsw
inc
push
adc
push
pop
dec
es
inc
pusha
icebp
lods
sub
xchg
xchg
dec
incl
push
jo
int3
jo
xlat
jae
adc
and
sbbb
xlat
les
fwait
loope
jae
mov
shlb
and
cmp
push
mulb
dec
add
pop
lea
out
push
pop
dec
jbe
inc
cmp
lret
xor
sub
cmpsb
sub
add
add
jne
movsl
sti
pop
cltd
cmpsb
xor
int3
js
mov
sbb
lods
scas
jmp
out
into
pusha
in
xchg
fcmovnb
and
repz
ss
jg
inc
sub
push
sbb
add
push
stos
sub
stos
or
mov
stos
orb
jecxz
jecxz
lock
or
and
pmaxub
movsb
outsb
data16
stc
mov
inc
inc
push
inc
inc
mov
test
addb
pop
shr
lea
rcrb
cmp
movsb
push
aas
cmp
cli
outsb
test
bswap
rorl
sti
push
mov
pop
rcll
mov
mov
dec
dec
test
xchg
mov
mov
pop
jae
jg
ljmp
inc
sbb
imul
cltd
dec
ret
ror
outsb
or
imul
cmp
nop
int3
adc
and
xlat
mov
push
or
ja
imul
and
call
out
pop
jg
xlat
out
jl
push
inc
dec
push
inc
jl
movsl
jl
xchg
pop
pop
xor
out
push
lret
jmp
call
leave
movsl
cwtl
lds
lcall
pop
dec
inc
nop
push
jl
lret
xchg
mov
ret
testl
push
sub
int3
es
sbb
popa
push
jns
outsb
mov
cmp
add
mov
mov
mov
aad
and
sti
adc
test
mov
push
or
mov
cmpb
jmp
push
mov
add
add
fiadds
adc
push
gs
test
or
jae
xor
in
push
xchg
jno,pt
mov
iret
ficoms
movsl
xor
push
xchg
test
push
push
jb
int3
rclb
js
sbb
fcmovbe
in
imul
xor
add
test
mov
push
inc
test
dec
outsl
call
fnstenv
outsb
mov
repz
pop
pop
mov
jge
jmp
inc
push
fbld
sub
jle
sbb
mov
xor
fsubl
push
sbb
sub
shlb
cmc
mov
add
add
fildl
sub
aad
fs
push
pusha
lret
cmp
fs
sub
inc
jnp
dec
push
sbb
dec
bound
add
cmp
push
in
mov
xlat
dec
roll
test
fnstcw
push
sub
repz
out
shl
popf
pusha
pop
pushf
sbb
out
outsb
mov
xchg
cmp
fs
lds
int3
ficompl
daa
hlt
inc
dec
stos
out
push
dec
adc
scas
mov
scas
pop
lahf
mov
sub
xor
mov
jmp
int3
mov
add
iret
pop
test
in
mov
shll
xorl
addr16
test
dec
mov
aas
pop
mov
jge
lock
lock
xchg
punpckhbw
repnz
in
out
test
xlat
xchg
aas
testb
cmpsb
fs
push
rolb
and
xchg
mov
and
add
test
mov
and
inc
adc
inc
and
pusha
jecxz
popa
jp
sub
imul
leave
in
jne
pushf
xchg
or
insb
mov
stos
xchg
addr16
incb
inc
mov
pusha
xor
pusha
jmp
loopne
outsl
mov
sub
push
adc
add
push
adc
sbb
insb
ret
pop
xchg
sahf
lock
out
jnp
jne
push
stos
pushf
es
pop
out
mov
call
jecxz
or
dec
sub
dec
dec
mov
ljmp
stos
dec
stos
cmp
in
pop
dec
dec
xor
lret
push
mov
les
xchg
sub
lods
jno
dec
jg
sbb
fstl
mov
into
adc
push
fistpll
add
sbb
cmp
add
mov
add
test
jge
mov
out
pop
xchg
inc
rcrl
mov
mov
mov
addr16
and
mov
stc
and
int3
add
and
xor
adc
push
sbb
ja
and
test
xor
dec
lods
fcomps
push
push
pusha
or
jb
scas
rol
adc
lretw
xor
ljmp
mov
hlt
xor
call
in
pslld
add
push
cltd
dec
and
popf
sbbb
das
push
rorl
xor
add
pusha
mov
jo
and
fstps
cmp
cmp
ret
sbb
pop
jns
dec
xor
xchg
movb
add
push
dec
or
js
stos
cmc
loop
popf
push
out
cmpsb
xor
fsubs
xchg
sbb
jo
rol
jg
xor
sub
scas
cmp
test
fisubrs
test
sub
stos
pop
ds
pop
push
xor
xor
cmp
xchg
std
aam
aad
inc
add
mov
lcall
mov
pop
fwait
and
dec
sbb
jae
test
popf
mov
dec
scas
mov
lods
je
pop
lea
incl
push
xor
int
add
mov
push
adc
aas
int3
xlat
jb
pop
add
fwait
ror
fnsave
pop
stc
insl
fwait
outsb
mov
loope
mov
adc
cmp
adc
stos
dec
push
fistpll
xor
lea
sahf
add
add
and
jnp
pop
add
xchg
mov
dec
mov
cltd
mov
adc
add
sbb
aad
add
lret
add
std
mov
test
insb
pop
or
mov
mov
mov
aaa
clc
pop
cmp
dec
jp
dec
lret
dec
out
shlb
jne
sbb
nop
mov
aad
icebp
test
xchg
aaa
mov
and
shlb
jg
or
or
add
and
jl
adc
xchg
mov
xchg
adc
lds
negb
add
aam
mov
repnz
call
shl
mov
sub
insb
pop
das
sti
fistpl
cmp
movsl
fcmovnu
and
sbb
clc
iret
push
adcl
adc
mov
mov
dec
xor
sub
frstor
adc
jns
lret
ds
mov
inc
mov
jbe
shll
sarb
or
or
cmp
or
mov
pusha
push
mov
sub
rcrl
addr16
icebp
out
daa
pop
fnsave
lods
subl
fsubl
int3
cmpsb
lcall
clc
lret
add
cmc
test
outsb
sbb
xchg
les
push
sbb
aam
stos
add
outsl
sbb
outsb
fwait
jb
pop
std
mov
jmp
adc
test
data16
jo
or
cmpsb
sbb
out
and
lods
cld
gs
fwait
aas
xor
pushf
and
inc
imull
cmpsl
das
fst
cmpsl
inc
jno
add
jmp
dec
pushf
sbb
push
test
icebp
xchg
xchg
shrl
pushf
cli
pop
jns
imul
xor
out
sti
cmp
daa
insl
and
xor
push
inc
fisubrl
and
push
lock
xlat
push
mov
lods
lods
add
bound
push
inc
popa
mov
jnp
pop
stc
repz
cmc
scas
lds
xchg
test
mov
pop
lahf
daa
push
sbb
xrelease
outsb
xor
jg
add
fisubrl
dec
push
lret
cmc
sbb
sub
int3
sahf
add
punpckhdq
and
jecxz
mov
dec
cmp
dec
add
sarl
dec
xor
and
push
sbb
mov
ja
test
and
xchg
add
sti
aad
stc
xor
mov
cli
and
jmp
sub
jge
xlat
mov
in
cmp
cmp
dec
repnz
xchg
clc
adc
sbbb
jae
lods
int3
dec
push
ficoms
aas
sub
xchg
popa
jge
fisttps
mov
xor
in
mov
adc
mov
xchg
jns
aaa
mov
insl
ds
xchg
ds
push
aad
add
fisubl
sbb
jbe
pop
or
stos
leave
jmp
hlt
popf
gs
fisttps
das
jg
inc
enter
adc
insb
pop
push
cmp
lods
sub
lret
sbb
rep
lods
push
lret
mov
push
mov
push
inc
lret
enter
pop
pop
fs
mov
push
inc
popa
sbb
fildl
sub
push
jae
ja
repnz
add
push
xchg
push
int
daa
gs
frstor
ljmp
lret
jp
fstps
sbb
inc
ret
cltd
cli
bound
sti
mov
inc
mov
sbb
and
pop
das
pusha
ds
jmp
js
and
movsb
out
or
scas
lock
mov
pop
call
test
sub
dec
in
ljmp
stos
cld
inc
fwait
inc
push
mov
loop
add
jle
scas
clc
add
xor
mov
jg
rol
rcrl
xchg
add
jo
loopne
bound
inc
or
repnz
cpuid
cmc
dec
add
cmp
pop
dec
out
adc
inc
rcrb
xor
pop
and
push
pop
xchg
mov
data16
inc
mov
inc
push
jb
jl
fistl
pop
jg
jge
push
lahf
mov
jecxz
push
xchg
mov
or
stos
mov
test
pushl
pop
jmp
in
fisttps
or
scas
xor
inc
lret
in
lods
lods
push
aam
push
inc
dec
imul
cwtl
movsb
mov
adc
cmpsb
pop
add
imul
in
jp
cmpsl
add
push
movsl
sub
in
cmc
ds
popf
test
lcall
mov
pop
dec
sub
ss
pop
mov
or
ficoms
lcall
or
in
lret
in
jno
cmp
push
jb
xor
mov
dec
and
aas
push
push
cli
mov
loope
das
mov
fisubl
bnd
in
ficoms
push
lods
jmp
sbb
adc
lret
fwait
inc
pop
daa
pusha
gs
cmp
jo
jle
lret
and
nop
sbb
and
jge
into
pop
jae
mov
into
js
pop
aam
pop
jnp
sbb
xchg
out
adc
nop
je
nop
mov
mov
xchg
and
lock
test
xor
and
mov
test
ljmp
dec
mov
push
cwtl
divl
cmpsl
lock
adc
pop
movsb
aas
push
and
lret
and
test
jno
mov
xor
mov
pop
mov
and
sub
dec
fnstenv
icebp
loopne
shlb
dec
lahf
out
xor
push
pop
mov
daa
dec
mov
mov
imul
lret
or
fsub
daa
sub
into
fistps
ja
pop
sbb
out
sub
lock
into
cmpsb
mov
je
aas
xor
sub
push
push
cmpsl
ffree
cmp
push
xor
cld
cmp
adc
add
out
sub
or
inc
rcl
jl
lahf
push
sbb
and
in
ds
nop
call
icebp
sub
daa
in
mov
ss
jb
das
push
sub
add
in
js
jo
mov
jmp
cmp
mov
mov
xor
outsb
test
jecxz
insb
test
lods
insl
scas
loopne
mov
xchg
lods
clc
gs
push
insl
nop
addl
xchg
mov
fucomip
pop
addl
mov
push
mov
ja
sub
scas
je
push
mov
outsb
daa
aas
out
mov
xchg
sub
or
ficompl
in
repnz
lret
fistpll
test
xor
or
and
push
decl
es
inc
dec
outsb
clc
daa
je
fistl
xor
imul
rorb
add
pop
mov
insb
fdivs
test
fistps
cmpsb
int3
mov
clc
lea
dec
imul
and
decl
outsb
fucomp
cmp
popf
cmc
hlt
xchg
mov
and
enter
dec
adc
and
mov
imul
mov
pop
adc
les
addr16
sbb
push
clc
fldenv
shrb
data16
or
and
andb
sbb
pop
adc
or
mov
cmp
pop
adc
dec
fcmovne
or
xchg
fs
icebp
push
add
adcb
mov
es
ja
iret
mov
cwtl
add
hlt
iret
pop
mov
je
pop
mov
lea
sub
add
aad
popf
jecxz
repz
je
test
sub
xlat
mov
or
aam
cmc
xchg
or
or
hlt
icebp
dec
cmpsl
dec
popl
mov
push
cmc
mov
lret
cmp
in
pop
jb
lds
mov
sub
sub
xchg
pop
movsb
ret
sbb
aaa
push
sti
test
or
jne
cmp
lcall
sub
fwait
movsb
ret
push
push
inc
adc
mov
dec
in
sub
push
ss
stos
adc
cmpl
mov
adc
mov
popf
xchg
jle
xor
aaa
cs
in
xchg
lods
je
or
push
mov
jnp
jnp
and
mov
push
jmp
mov
cltd
lds
sub
xlat
adc
orb
cltd
outsb
and
pop
push
cmp
fwait
int3
cmpsl
lds
jns
or
cmp
jo
inc
testb
mov
inc
and
or
push
lret
mov
inc
nop
mov
xchg
jb
inc
push
hlt
adc
aad
xor
stos
pop
push
dec
add
xlat
jno
icebp
add
cs
add
sti
addr16
mov
and
clc
lods
in
movsb
aaa
daa
popa
mov
fsubrs
cld
jae
inc
jge
addb
and
rcrb
mov
ja
push
pop
mov
out
mov
fcoms
xor
inc
popa
lds
adc
scas
ds
sbb
shl
pop
xlat
lods
jb
fsubrs
mov
mov
add
xchg
jae
adc
push
jle
pop
fidivs
mov
or
loope
ss
xor
xor
mov
push
loopne
sub
call
pusha
pop
js
sub
push
adcl
or
rorl
lret
leave
scas
iret
lods
cmp
xlat
cld
xorl
cld
adc
add
pop
jae
adc
push
bound
jne
mov
adc
jle
std
ja
lret
dec
and
inc
aas
loop
xchg
jo
push
jl
mov
jmp
loope
out
repz
and
andl
lcall
push
out
push
mov
cmp
in
mov
outsl
sub
mov
jp
sbb
lds
sti
xchg
insb
push
mov
std
inc
push
test
inc
sbb
xchg
cmp
mov
and
cmc
and
int3
popf
lea
addb
xor
in
leave
in
test
mov
lahf
lods
xchg
mov
std
imul
outsl
fmul
mov
out
es
std
loope
je
sahf
int
jns
sub
push
mov
adc
incl
rolb
ficoml
adc
frstor
loop
nop
jmp
cwtl
enter
mov
cld
loopne
xchg
xchg
cmp
dec
jmp
int3
icebp
lret
stos
sub
add
push
popf
add
arpl
cmp
cwtl
subl
pop
pop
out
lds
orl
pusha
sub
into
xor
lcall
out
xchg
jmp
sub
icebp
fbstp
loope
ret
lds
mov
int
mov
dec
xchg
mov
xor
jl
inc
fmull
inc
xor
sub
add
mov
add
stc
pop
add
leave
jmp
out
push
aam
or
stos
jecxz
outsl
and
adc
or
mov
mov
test
add
subl
js
aad
add
daa
mov
in
pop
fs
xor
or
push
inc
jg
pusha
aaa
mov
int3
cli
ret
stos
daa
or
dec
push
std
out
pop
xchg
test
fdivrs
jae
adc
shl
fcomip
jg
gs
jb
int
dec
das
xchg
mov
or
fcmovnu
xor
jecxz
or
lea
xchg
lahf
mov
mov
mov
jg
jp
lahf
mov
lahf
in
jmp
mov
add
out
cld
cwtl
jmp
pop
out
jnp
jp
xchg
dec
sbb
pop
repnz
push
pcmpgtb
add
sub
push
es
idivl
pop
aas
shlb
pop
dec
xlat
or
outsl
or
push
test
and
test
orb
xlat
lahf
pop
mov
mov
enter
addr16
mov
call
pop
cmc
sbb
sbb
mov
int
test
mov
xchg
in
sbb
xorb
sarb
jecxz
ret
cmp
mov
loopne
xor
stos
inc
ja
inc
js
out
or
mov
in
sub
cmp
jl
fdivl
imull
sbbb
xlat
cmp
ret
cmpb
repnz
xor
xchg
push
stos
aas
jp
jp
xchg
les
cli
and
cltd
sub
subl
arpl
lret
xchg
fwait
add
insl
cs
nop
in
addl
std
add
or
xor
jb
pop
adcb
mov
push
dec
jge
mov
popa
xor
mov
jecxz
xor
xchg
jne
jge
je
pop
arpl
dec
add
sub
int3
popf
ljmp
sahf
in
outsb
jnp
les
loope
loop
adc
lds
sbb
cltd
and
das
add
out
dec
inc
push
push
pop
pusha
std
divl
lcall
pop
int3
push
add
cmc
push
das
pushf
sbb
push
mov
mov
nop
inc
push
jne
dec
cmpsb
pop
imulb
xor
lea
in
fisubl
rclb
jbe
ljmp
sbb
scas
and
inc
out
mov
add
jb
jmp
sbb
mov
mov
imul
mov
push
jae
xchg
mov
cmp
aaa
adc
mov
push
out
mov
pop
mov
sbb
add
cmpb
jnp
orl
adc
mov
inc
push
bound
es
mov
movsl
test
push
out
xchg
add
push
shll
adc
lock
out
add
jo
dec
test
mov
sbb
insl
repnz
xchg
pusha
inc
mov
inc
jae
clc
dec
or
stc
into
inc
fidivs
sbb
test
sub
aad
nop
cmp
adcl
xchg
sbb
push
aam
jns
jno
adc
ss
nop
xor
flds
cmc
pop
pop
loopne
pop
cli
xchg
sub
fidivrl
lret
sbb
sbb
in
cltd
out
sbb
pop
jae
dec
pop
xchg
insb
mov
adc
pop
aad
xor
stos
fs
mov
les
mov
and
dec
mov
cmpb
pop
call
cmc
aad
fildll
sub
loop
inc
test
inc
inc
jmpw
xor
push
jae
mov
xor
sbb
sti
addl
fstpl
clc
in
sub
cs
out
sbb
sub
xchg
mov
fstps
or
sbb
lret
in
cmc
push
pop
gs
adc
jp
push
outsb
cmp
push
or
jbe
dec
pop
xlat
xchg
int
insb
sbb
out
lret
ret
sbb
je
insb
fs
cmp
xor
and
cmp
das
xlat
mov
ror
imul
rorb
iret
inc
les
dec
mov
adc
mov
cld
arpl
sub
test
sub
jb
shrl
sti
stos
repz
xchg
inc
ret
jmp
fistl
or
ja
sbb
shll
xchg
cmc
lret
cli
add
hlt
lret
sbb
or
int
xor
data16
popf
xchg
push
sbb
ss
ja
push
and
sub
lea
sub
or
mov
inc
dec
sbb
insb
jecxz
cmp
cmp
dec
shll
aas
es
popf
ds
jg
lahf
stos
xor
loope
push
mov
in
jne
outsl
xchg
pop
cmp
push
jp
push
sti
out
mov
add
imul
sub
xchg
or
out
dec
dec
adc
pusha
roll
rcl
xchg
mov
mov
mull
pop
mov
loopne
imulb
and
gs
mov
push
fmul
je
into
leave
dec
sti
enter
add
sarb
rcrl
xchg
push
sti
cmpb
add
pusha
inc
aam
out
push
jmp
push
pop
mov
adc
mov
sbb
test
sahf
aas
in
imul
scas
xchg
shrl
or
pop
pushf
mov
clc
jbe
hlt
mov
js
mov
inc
aaa
adc
pop
lock
int3
jmp
xchg
hlt
sbb
inc
add
fcmovbe
xor
pop
lds
mov
sbb
movsb
xor
mov
adc
pop
mov
push
fcompl
out
rcll
into
xchg
das
aam
or
imul
sbb
es
jne
and
push
and
arpl
outsb
dec
inc
mov
pop
fnstcw
adc
loopne
jno
jg
loopne
test
mov
push
in
sti
xchg
test
in
xchg
add
aam
mov
iret
js
pop
ret
jbe
cmp
and
and
adc
rorl
dec
hlt
jl
das
xchg
cmp
add
lock
das
xchg
add
fistps
movhps
lret
fdivrl
faddp
adc
sub
push
and
sbb
or
dec
ljmp
pop
scas
sbb
les
into
adc
push
gs
imul
nop
jo
ror
out
int
xor
aad
cmpsl
sbb
sbb
jle
xorb
and
popa
por
cmc
aad
andl
push
sbb
loope
add
dec
repnz
mov
gs
xchg
cmp
xchg
incl
rolb
rol
mov
fildll
rcll
lds
jo
outsl
out
or
sahf
jno
mov
outsl
adc
jl
xchg
movsb
fnstenv
scas
test
and
lock
xchg
clc
pushf
jnp
xorb
push
or
pop
movsb
mov
jno
add
testb
mov
dec
add
mov
sti
sub
lea
mov
sub
add
repz
subl
cmc
cmp
push
jo
imul
into
jg
pop
inc
stos
ja
int
sbb
loopne
sti
loope
shl
aam
insl
push
xlat
mov
cmp
rcrl
jmp
jl
les
dec
mov
xchg
es
add
aaa
rorl
push
aas
in
test
andb
and
lods
jae
mov
dec
data16
jp
xchg
fwait
shl
and
cmp
mov
shl
adc
cmc
stc
sbb
mov
fwait
add
pop
xchg
pushf
push
cmp
or
push
jbe
inc
leave
rol
xchg
pop
fists
cmp
in
popa
xchg
sbb
not
loope
mov
or
or
out
pop
shll
test
xor
add
fsubrl
jae
lcall
push
add
mov
fs
and
jl
int
sbb
imul
lret
subb
cmp
fldt
repnz
mov
cwtl
cli
mov
mov
mov
imul
xchg
addr16
add
jbe
in
ret
and
adc
mov
in
lea
popa
orl
repz
fmull
cltd
loope
jnp
add
repnz
jge
xor
add
ror
cmpb
mov
inc
aam
dec
pop
inc
fnstsw
mov
jge
adc
dec
add
xchg
lea
pushf
push
push
sbb
nop
cmp
js
cmp
iret
jbe
sbb
pop
and
and
inc
repnz
out
popf
rclb
loop
adc
adc
in
adcl
imul
mov
loop
loope
sbb
push
repnz
jle
xchg
push
xchg
fistpll
or
js
test
add
hlt
js
inc
pop
mov
mov
sub
test
jo
sti
or
movsl
mov
fildll
mov
mov
out
add
adc
mov
xchg
cmp
jo
test
mov
mov
in
ljmp
push
rorb
insl
push
mov
xchg
and
dec
rcrl
out
push
ret
rcll
std
push
gs
mov
lcall
jmp
add
jecxz
repnz
lods
dec
jmp
cmp
mov
dec
outsb
jmp
push
mov
xorl
inc
xor
mov
mov
jmp
hlt
jmp
xor
rorb
arpl
sub
fdivs
pop
or
popa
xor
add
inc
stos
or
scas
jnp
cmpsb
xchg
imull
ss
push
and
loopne
test
pop
jno
arpl
leave
cmc
cmpsb
scas
repnz
xchg
push
popf
push
cmp
call
pop
dec
data16
mov
test
and
in
adc
fwait
add
sub
pop
icebp
push
mov
mov
imul
nop
imul
imulb
dec
jl
push
jp
xchg
and
out
mov
xchg
or
scas
nop
cld
pop
xchg
mov
fs
hlt
nop
add
movsb
fcmovnu
lahf
cltd
clc
and
movsl
push
and
push
outsl
push
mov
dec
mov
filds
shlb
xor
sub
sarl
outsl
in
pop
inc
push
or
cmpsb
and
push
movsb
shrl
adc
mov
xchg
testb
mov
ds
shrb
andl
mov
outsl
gs
sub
push
enter
pop
sub
jmp
rcrb
pop
inc
jmp
fldl
adc
xor
push
push
add
ja
mov
pop
popf
sbb
leave
pop
cmp
inc
repnz
sbb
inc
ficomps
pop
inc
lods
push
jg
pop
aas
mov
xor
arpl
test
pop
add
adc
dec
jecxz
sbb
adc
jno
add
mov
das
sarl
and
inc
xchg
loop
push
xchg
cmp
outsb
ret
pop
nop
cmp
mov
add
adc
sub
inc
add
mov
mov
ljmp
mov
jbe
icebp
adc
cli
mov
fldt
insb
stc
aad
bnd
test
movsb
mov
mov
xchg
mov
clc
adc
push
sub
adc
push
ret
add
movsb
inc
jecxz
inc
das
pop
sbb
jb
pushf
mov
pop
arpl
mov
call
out
repnz
lds
adc
cmp
xchg
int3
pop
add
ret
push
loope
pop
repnz
ret
cli
ds
push
out
mov
add
fdivr
in
loope
repnz
out
mov
mov
call
and
mov
lock
mov
ljmp
mov
cwtl
pop
inc
add
cmpsl
fs
push
mov
aad
and
mov
pusha
ret
sub
add
dec
sbb
inc
mov
xchg
xor
test
out
adc
cwtl
inc
inc
clc
cli
out
sbb
pusha
sahf
popa
xchg
jmp
push
dec
dec
cmp
or
in
jb
push
stos
ret
stc
in
in
pop
icebp
xchg
xchg
addr16
mov
mov
or
outsl
out
gs
lock
std
jmp
fwait
icebp
and
pop
inc
pop
lock
repz
xor
cli
jb
pop
dec
dec
addb
inc
and
jo
ljmp
fidivrl
scas
shrb
add
cmp
scas
mov
jge
or
xchg
pop
aam
fdivr
ja,pn
aaa
push
movl
push
add
outsb
lock
jno,pt
out
int
inc
fdecstp
imul
xchg
subb
ja
mov
xor
sbb
pop
gs
and
push
sbb
inc
out
mov
push
testl
add
fwait
and
fimuls
ret
repnz
subl
loope
out
dec
in
mov
jmp
data16
icebp
inc
rcrl
xor
xchg
and
dec
mov
push
adcl
into
mov
in
es
in
outsb
xor
pop
enter
js
pop
jg
xchg
hlt
sbb
pop
pushf
mov
lahf
inc
es
ljmp
jmp
add
dec
sbb
daa
out
push
or
insb
push
mov
loop
fcmovnb
mov
adc
sub
cs
xchg
sub
lock
xchg
out
enter
dec
mov
ja
cltd
push
rcll
push
push
ja
mov
lea
xor
scas
adc
xor
lret
dec
jmp
jl
cmp
jecxz
cs
movb
dec
addr16
or
xchg
lcall
sub
push
lcall
pop
lods
fwait
test
cmpsl
inc
push
stc
outsl
fwait
push
adc
pop
ja
add
bound
sub
adcb
mov
jle
add
add
jns
lods
xor
cmp
and
and
jo
jecxz
push
int3
loop
jecxz
and
mov
lods
sbb
fwait
pushf
sub
dec
in
pop
inc
jns
stos
push
push
adc
push
addl
cld
add
add
and
adc
dec
mov
dec
leave
sub
cmpsl
jae
jge
sbb
xor
cmp
mov
sbb
outsb
and
les
stos
add
leave
call
sbb
or
cmp
pop
imul
jmp
or
dec
repz
push
jmp
out
cltd
xlat
sbb
mov
cwtl
pushf
bnd
jl
push
stos
nop
fildl
or
das
cld
cmp
or
jno
mov
jmp
mov
jge
xor
scas
fwait
pop
and
pop
xor
and
mov
mov
ljmp
rorl
sub
add
xor
pop
punpckldq
mov
movsb
jp
inc
jnp
adc
mov
sub
jne
data16
adc
mov
adc
jo
insb
lock
adc
xor
and
sub
push
jge
add
std
rcrl
add
ja
insb
mov
jns
sbbb
xchg
push
ljmp
sub
sub
sbb
cmp
xor
push
faddl
mov
mov
push
mov
cmpb
or
pop
pop
xchg
xchg
push
rcl
das
push
outsb
push
cwtl
push
add
daa
mov
fwait
cmp
xchg
lds
jp
dec
jmp
pop
xchg
and
push
push
xor
in
adc
fbstp
dec
testb
test
xor
mov
dec
push
jns
psubusb
inc
jnp
sbb
dec
push
cmp
cmp
add
ljmp
fildl
dec
push
pop
adc
fimuls
mov
popf
test
mov
scas
jbe
jecxz
aas
inc
mov
dec
dec
imul
sub
rcll
add
ret
ret
sbb
xor
xchg
aaa
pop
inc
sbb
xor
negl
add
sbb
iret
push
mov
je
insb
lahf
rorl
leave
scas
adc
pop
push
dec
out
ret
insb
lods
cmp
je
gs
leave
rclb
sti
lods
daa
or
mov
xor
stos
push
setne
flds
xchg
test
and
outsl
scas
sub
sti
inc
arpl
inc
adc
sub
lahf
adcl
add
pop
gs
lock
and
data16
scas
mov
popa
and
movsb
xchg
repz
lods
shl
cmp
mov
or
mov
cmp
div
sbb
jg
cmp
jnp
xchg
ds
cmp
jb
sub
sbb
mov
inc
stos
mov
scas
push
push
add
lea
xchg
pop
aas
push
movsl
jp
and
mov
xor
ds
or
leave
jp
cmp
cmp
pop
ja
in
sbb
pop
ret
pop
imul
popf
loopne
fidivs
aad
inc
push
xchg
pushf
lods
inc
mov
mov
sbb
lods
xlat
jecxz
into
jg
scas
aaa
int
fbld
pusha
enter
nop
jbe
rcrb
mov
pop
outsl
push
repnz
aam
pop
lods
mov
data16
adc
iret
and
int
dec
fs
cwtl
push
test
jae
enter
xchg
jbe
pop
dec
in
jb
inc
in
lea
add
pop
jp
pandn
push
dec
leave
pushf
jne
int
sti
xlat
daa
mov
scas
and
pushf
inc
cmpsl
mov
adc
xlat
stc
jae
push
popa
and
inc
adc
and
std
int
or
jnp
mov
pop
lea
call
add
add
adc
fldenv
addr16
xor
mov
cmp
into
sti
clc
or
icebp
dec
adc
stos
in
lret
lret
sarb
jb
scas
mov
shrl
mov
jbe
pop
insl
add
cli
in
cmc
hlt
int3
and
push
pop
popa
popf
in
xchg
in
movsl
jb
int
jb
mov
pop
test
add
jge
sub
sarb
movb
aas
sbb
pop
sub
or
mov
adc
lret
and
test
pop
fs
lret
loope
rorl
shll
xor
pushl
xor
in
sub
jmp
inc
dec
sbb
addr16
push
sti
adc
jb
sub
xor
pop
dec
jecxz
inc
mov
and
mov
adc
in
mov
cmp
mov
pusha
and
sti
fwait
repnz
push
push
shr
in
dec
cmp
and
pop
sub
outsb
adc
pusha
xchg
inc
mov
dec
notl
jecxz
mov
outsl
stos
inc
lods
inc
adc
sub
out
and
inc
test
popa
hlt
or
mov
add
cmp
pop
dec
jecxz
pop
popa
adc
lock
adc
in
test
mov
lock
fmulp
movsl
add
mov
jb
popf
loop
incb
xchg
pop
outsb
lods
jg
rorl
ljmp
jb
out
gs
inc
inc
loopne
or
in
das
pop
push
xchg
or
vphadduwq
dec
cltd
add
icebp
stc
cmpsb
or
insl
mov
jge
icebp
jecxz
add
cmc
outsb
jae
adc
pop
insl
mov
pop
rorb
cld
rcll
inc
xor
push
cmp
mov
and
cld
test
sarl
aad
dec
divl
lds
xor
lcall
ds
in
scas
push
inc
pop
xchg
outsl
and
lret
and
repz
cmp
enter
add
lea
sbb
xchg
int
icebp
jne
sub
fistps
scas
outsb
xor
scas
test
pop
lods
les
sbb
dec
dec
mov
lret
xchg
jge
js
cltd
js
xchg
cmp
and
xor
cwtl
pop
prefetch
leave
add
add
mov
ficomps
scas
pop
jge
jne
dec
insl
cmpsl
mov
insl
pusha
scas
outsb
push
imul
gs
pop
and
dec
xor
mov
repz
test
hlt
mov
addr16
pop
cmc
push
add
mov
adc
sub
sbb
ret
lret
gs
mov
stos
pop
lock
fstps
add
sbb
cmp
cltd
cmp
outsl
cmp
and
inc
lahf
fs
enter
scas
fistpl
mov
cmp
inc
rcll
push
pop
push
aaa
mov
inc
add
fildl
push
clc
adc
loope
mov
pop
adcb
icebp
jg
mov
lds
xor
push
call
out
push
mov
inc
xor
mov
fsubrl
call
jns
adc
test
ret
je
sti
xor
dec
out
xchg
jbe
mov
loopne
iret
add
mov
jno
repnz
mov
push
push
add
push
fnstsw
push
adcb
fisubrs
cltd
jg
dec
js
fstp
and
cmp
testb
pop
mov
ja
pusha
mov
lods
mov
push
lcall
incl
rorb
xor
outsb
cltd
lahf
jns
or
xor
sbbl
enter
mov
test
mov
out
mov
add
das
lcall
repnz
lds
sarl
paddw
decl
pop
aam
mov
test
imul
and
xchg
pop
sbb
into
insl
mov
mov
jae
inc
dec
test
dec
inc
ret
rclb
cmp
dec
xor
mov
xchg
mov
mov
inc
cmp
jo
mov
gs
into
fwait
adc
xor
and
sub
icebp
cmp
insb
xor
dec
in
imul
insb
mov
push
mov
inc
sbb
mov
cltd
mov
ficoml
dec
or
sahf
pop
inc
jl
movsl
add
sahf
pop
rol
cmp
add
adc
sbb
daa
in
xlat
shr
fwait
cli
sbb
pop
xchg
jge
add
sbb
pop
addr16
ret
test
cmpsb
sbbl
add
std
dec
inc
lea
scas
mov
push
lods
js
out
clc
and
aaa
icebp
sub
int3
jmp
mov
test
sub
adc
shlb
cmp
dec
mov
cmp
rcrb
adc
fstpl
mov
jnp
ljmp
jae
sub
xor
fucomip
syscall
or
lea
adc
sub
repnz
fisubrs
dec
dec
sti
fldcw
mov
and
das
cwtl
sub
test
add
sub
pop
xchg
cmp
xchg
lcall
xchg
lret
and
lcall
mov
push
sbb
loopne
mov
addr16
lea
ficoms
insb
popa
aas
cmpsl
shll
mov
inc
mov
insb
cmp
sub
push
lret
out
mov
clc
gs
xchg
add
inc
lcall
mov
dec
xor
enter
pop
mov
jne
xor
add
nop
mov
movsb
mov
mov
imul
push
stos
pop
inc
jle
lret
dec
inc
fs
push
jnp
mov
inc
add
lret
push
adc
sbb
or
mov
ret
add
mov
jb
shrb
cmp
cmp
mov
xchg
xchg
jbe
push
sbb
roll
lods
cmp
add
ss
or
les
subl
jnp
mov
in
ret
mov
adc
loopne
psllq
fcompl
mov
cs
out
and
push
test
es
lahf
in
inc
pusha
xor
popf
inc
mov
push
repz
daa
cli
add
xor
push
and
shll
inc
mov
cmp
xchg
nop
dec
push
cs
push
in
iret
scas
pop
lock
lock
mov
sbb
jnp
scas
mov
enter
cmp
js
cmc
in
in
push
pop
scas
lods
mov
add
es
hlt
sarl
call
sub
jne
mov
jp
jnp
or
push
or
repz
cmp
loope
xchg
fs
push
shl
lods
add
mov
dec
jo
cmp
mov
add
ja
fcompl
jns
sub
sub
mov
enter
dec
aaa
sub
fcomp
xchg
cs
movsl
lcall
adc
pop
add
shlb
bound
jae
add
add
shl
push
cmpsl
mov
dec
mov
or
out
mov
lea
cwtl
lret
inc
lea
xchg
rorl
or
mov
dec
jmp
cmc
dec
xor
pop
nop
scas
int3
loop
movsl
clc
dec
push
jno
cmovne
imul
ficoml
insl
sub
stos
xor
sub
out
mov
lahf
mov
ja
ljmp
test
add
sub
add
sbb
cmc
imul
mov
jmp
mov
lcall
rcrl
sti
jb
sbb
add
xchg
pop
mov
inc
out
repnz
pushf
call
mov
jle,pt
les
and
jl
sub
lcall
pushf
movl
dec
fs
shlb
add
pusha
aad
ljmp
negl
lods
je
inc
test
ss
rorl
jle
mov
ret
mov
mov
outsl
jmp
pop
and
lods
stos
test
in
add
lcall
imul
ret
jge
enter
push
int3
inc
push
arpl
movl
or
adc
enter
lret
inc
iret
cs
and
push
or
push
adc
xor
loopne
in
pushf
push
inc
fs
shlb
cltd
push
insl
mov
cs
dec
fdivrs
bound
lret
mov
je
mov
insb
sbb
cmpsb
add
das
xlat
push
lods
movsl
cmpsl
mov
dec
imul
fstps
pop
push
mov
cld
xor
or
fidivl
push
fucompp
mov
add
js
dec
xor
stos
sarb
sbb
fcmovne
sti
pop
push
sub
mov
out
out
lret
xchg
fiaddl
lock
pop
jecxz
in
test
cmp
arpl
xor
js
adc
dec
loopne
mov
mov
int3
xor
mov
jmp
cmp
in
jg
pop
incl
mov
ret
sarl
adc
aaa
sub
imul
sti
hlt
jle
test
xchg
orb
cli
add
jnp
inc
jo
mov
mov
dec
xchg
mov
fstl
subl
mov
sbb
loope
cld
leave
cwtl
mov
daa
sti
lock
pop
fstpl
inc
pop
mov
inc
cmp
fwait
jle
mov
adc
popf
xor
dec
inc
clc
push
push
add
dec
jp
hlt
jnp
test
pop
jae
mov
mov
mov
adc
add
and
jmp
xchg
and
outsb
pushf
fsts
add
lds
jmp
jl
incb
mov
out
jp
mov
bswap
dec
test
lock
xor
pop
xchg
or
xchg
int
xor
or
sti
adc
cmp
dec
sbb
cmp
notl
jle
sti
mov
test
lds
push
inc
inc
ret
jnp
ret
pop
or
adc
xor
sub
pop
push
mov
xor
stos
jae
xchg
ret
xchg
loope
fdivrl
jp
popf
imul
iret
cmc
pop
sub
xorl
mov
inc
sti
mov
jl
or
sbb
popa
sbb
mov
loopne
cmp
scas
cmp
scas
out
xchg
xor
in
mov
mov
xor
sbb
addb
dec
in
ret
jmp
pop
xor
in
test
or
pop
test
jg
sbb
clc
mov
sbb
pop
cmpsb
jmp
lock
jae
xor
cmc
iret
ljmp
inc
out
popa
xor
cmp
mov
sbb
or
sbb
out
fstpt
call
sarl
inc
add
pop
mov
or
adc
adc
mov
adc
cld
inc
lahf
mov
pusha
call
sbb
mov
or
and
mov
add
inc
or
stc
iret
aas
arpl
nop
inc
inc
rclb
push
dec
cli
inc
jo
clc
loop
adc
push
fwait
in
pop
mov
mov
lds
mov
scas
insw
cmpsb
push
dec
test
add
bound
in
jae
imul
int
cld
int
insb
adc
push
adc
pop
cmp
mov
cmpsl
xchg
inc
aam
aam
pop
lahf
mov
pop
sub
sub
lds
adcl
test
push
daa
incl
cltd
xchg
xor
hlt
pop
out
cmp
mov
cmp
addb
push
fidivrs
sbb
decl
xor
test
mov
or
mov
loope
push
notl
dec
ss
inc
fisubrs
push
dec
popf
jge
mov
jmp
movsl
in
cmpsl
adc
jne
and
push
dec
mov
out
fiadds
xchg
or
notb
enter
dec
sub
pop
push
and
xchg
pop
sub
jmp
cld
ja
push
cmp
fsubs
sahf
pop
pop
les
add
mov
mov
fisttps
mov
push
ret
jp
and
cld
shrb
gs
fidivrs
push
and
fildll
xchg
std
inc
imul
andnps
dec
mov
jne
push
ds
insl
cmpsb
fldcw
enter
push
in
ja
mov
mov
jo
insb
test
jno
jp
xor
cmp
jbe
mov
aad
mov
mov
aaa
data16
inc
xchg
jge
rcrl
cmp
or
in
jmp
iret
repnz
mov
and
xchg
sti
leave
cmpsb
in
dec
into
add
shr
and
pop
adc
sbb
clc
and
sub
fisttpl
sub
pop
mov
imul
mov
pop
add
jbe
adc
mov
xchg
stos
xchg
mov
xchg
ds
sahf
xchg
sbb
xor
sbbl
jo
decl
ja
fidivs
dec
xchg
cmp
and
call
sbb
clc
fimull
faddl
cmp
mov
jb
add
ja
daa
imul
jg
in
and
adc
xchg
movsl
inc
sub
and
out
lods
inc
insl
push
mov
insb
pop
movb
push
add
fistpll
mov
adc
add
jmp
mov
jne
les
push
xor
pop
inc
and
inc
fiadds
inc
add
mov
in
pop
push
repz
loopne
cmpsl
movb
fdivp
pop
xor
insb
push
mov
mov
xchg
data16
dec
popf
push
loop
insb
fmulp
cwtl
insl
daa
lods
mov
call
dec
mov
jbe
add
pop
mov
lods
sbb
sbb
jp
jne
mov
sub
jle
mov
mov
jle
or
adc
jo,pn
out
cld
jns
cmp
inc
cmp
and
jbe
sub
sub
mov
out
jns
xchg
cmp
cmc
notl
daa
jbe
sbb
inc
outsl
jl
and
fidivrl
gs
stc
addr16
mov
outsl
mov
aad
icebp
or
jne
xchg
sti
shl
icebp
fadd
push
icebp
mov
dec
mov
jecxz
lock
testl
push
mov
sbbb
rcll
andl
pop
push
clc
xchg
incb
lahf
orb
arpl
adc
pop
rorl
and
push
mov
in
push
inc
jne
push
mov
and
adc
cmp
repz
jbe
std
pop
mov
cmp
subl
mov
testl
movsb
jp
add
fsts
js
in
faddl
sbb
mov
roll
out
fnsave
popl
mov
dec
nop
icebp
dec
pop
cwtl
mov
xor
sarl
imul
jg
sbb
lods
push
cmp
out
add
inc
or
and
daa
scas
cmc
push
cmpsl
push
lea
imul
jno
sarb
jb
push
cld
adc
ret
scas
stos
dec
jle
enter
test
fnstenv
addb
mov
jg
pop
mov
ss
cmc
addb
leave
repz
lcall
and
cmc
les
daa
dec
sub
sub
movsl
insb
xchg
inc
lea
sbb
sbb
adc
and
cwtl
in
inc
lret
imul
in
movsb
and
stos
test
fs
loopne
xchg
in
lods
inc
in
mov
orl
inc
add
mov
sbb
push
popa
lds
pushaw
jecxz
push
xchg
mov
jg
adc
pop
sbb
int3
je
push
popa
leave
iret
jp
repnz
lods
push
mov
pop
push
stc
cmc
mov
adc
sub
stos
gs
mov
cwtl
jo
pop
outsl
push
mov
mov
push
mov
cmp
xor
xchg
sbb
lods
jl
cltd
rolb
mov
xchg
xchg
cmp
arpl
call
push
adc
inc
iret
sbb
pop
into
repnz
pop
in
sahf
outsb
ror
leave
ljmp
xor
pop
cmc
mov
lea
roll
adc
cli
insb
inc
notl
or
dec
aas
out
inc
rol
repz
int
sbb
gs
in
popa
adc
lea
ret
cmp
sub
shll
mov
xor
dec
fstpt
adc
andb
jb
fisttpll
sub
push
test
cmc
add
adcl
push
and
sub
inc
out
jmp
inc
dec
mov
int
testl
pushf
aad
lds
sbb
and
mov
mov
xchg
aaa
lcall
lcall
sbb
ljmp
xor
xchg
icebp
push
outsb
xchg
ja
and
or
jno
jb
push
aad
movb
sbb
test
cltd
push
push
push
pop
and
scas
sahf
pop
cmpsb
gs
push
cmpsb
mov
push
adc
dec
mov
mov
add
adc
inc
mov
bound
iret
test
cwtl
lods
cli
inc
decb
enter
inc
sub
mov
int3
andl
xor
fst
leave
loop
test
xor
dec
sbb
jmp
jle
cmc
movl
mov
lcall
ss
cmpsl
out
push
imul
dec
aas
sarl
popa
dec
sahf
push
adc
xlat
repz
lret
pop
mov
xor
popa
adc
insb
std
and
push
cmp
out
mov
xor
sub
mov
sub
dec
repz
dec
push
sub
insb
testl
cltd
jo
push
adc
cmpsl
cmc
or
aam
in
jg
cmpsb
xchg
sub
dec
mov
jo
int3
push
cmp
idivl
or
sbb
gs
gs
sbb
jno
cltd
and
inc
int3
xchg
cld
movsl
and
xor
push
loop
scas
cmp
data16
nop
push
mov
cmp
in
and
inc
ds
add
out
adc
xchg
or
loope
xchg
rorl
pop
into
pop
mov
push
aaa
cmp
and
xor
test
sti
jno
sarl
sar
loop
nop
fisttps
xchg
push
add
fmuls
add
ja
scas
xchg
loopne
sbb
lds
lcall
aam
pop
sahf
jle
arpl
push
stc
aad
adc
aas
stc
add
js
repnz
sub
sbb
sub
repz
sbb
stc
jbe
cmp
outsl
and
aaa
sbb
add
xchg
dec
sbb
test
pop
mov
mov
shl
stc
jo
pop
fst
fdivs
stc
rcrb
je
das
fiaddl
rclb
stc
inc
ret
hlt
jp
xor
mov
inc
add
mov
popf
add
outsl
sbb
sahf
sbb
mov
adc
cwtl
pop
add
adc
test
adc
in
dec
xchg
pushf
stc
fsub
cld
and
stc
rorb
call
sub
pop
js
cs
incb
in
fwait
test
cwtl
push
loopne
inc
mov
data16
aas
test
sbb
cmc
push
decl
pop
das
mov
xor
or
pop
out
add
mov
ffree
imul
push
mov
pusha
mov
xchg
clc
push
sub
cmpsl
cmpsb
pop
mov
and
xchg
inc
cld
sub
push
adc
or
pop
inc
int3
sti
and
add
out
push
fcom
adc
data16
mov
in
xchg
push
pushf
scas
dec
jmp
dec
push
lahf
lcall
int3
outsl
sbb
clc
arpl
inc
mov
outsb
mov
mov
fstp
inc
fistpl
adc
mov
test
push
push
xor
aas
test
js
jmp
out
xchg
iret
push
int
arpl
arpl
jge,pn
inc
mov
xlat
lods
push
add
jne
xor
icebp
sti
int3
out
jb
push
xchg
mov
mov
pop
lcall
rcrb
lret
xlat
stos
mov
dec
fmulp
call
push
fdivs
cmp
sbb
inc
stc
jnp
xor
dec
das
bnd
fisttpll
lret
fmull
pop
out
rcrb
mov
xchg
dec
inc
andl
decb
cmp
inc
imul
pop
inc
in
mov
popf
pop
mov
jno
push
imul
xchg
movsb
test
xrelease
xor
stos
xor
sub
in
sti
jbe
cmpsl
jecxz
call
lcall
sbb
add
jmp
mov
xchg
push
stos
orb
or
jnp
or
sub
inc
cmp
jle
jle
shlb
adc
js
push
push
xchg
add
jle
push
shlb
dec
lock
dec
pushf
xor
push
adc
lret
push
jmp
loope
shlb
lret
rclb
addr16
insb
dec
aas
jmp
lock
es
leave
lock
mov
jo
or
adc
sub
push
jns
ljmp
ljmp
or
pop
add
outsb
push
cmp
adc
sub
sbb
add
adc
and
pushf
or
les
and
push
stos
gs
sbb
nop
sub
cli
or
cmc
jmp
mov
lret
dec
mov
pop
mov
movsb
lret
and
scas
das
loope
mov
xchg
dec
xor
or
xlat
add
lahf
inc
lahf
or
push
sub
cmp
les
ss
and
and
sub
popf
int3
mov
ficoms
mov
pop
outsb
mov
mov
xchg
mov
lea
out
aaa
cmp
mov
add
xchg
xchg
jne
cmp
push
insl
mov
fisttpll
addr16
pop
scas
add
inc
scas
rcl
push
imul
mov
shl
lock
mov
aaa
repz
fisubs
aam
and
push
faddl
aam
loopne
xchg
jl
loope
pop
jp
adc
in
in
shlb
or
movsl
fidivs
ret
xor
popa
lods
or
push
cmp
test
cmova
fcomi
xor
mov
lahf
jnp
rcll
xchg
movsb
inc
mov
mov
nop
notb
lds
add
int3
mov
pop
nop
mov
call
adc
std
mulb
stc
xchg
push
add
pushf
ja
adc
jle
icebp
sbb
push
or
movsb
cmp
aaa
das
inc
lea
std
outsl
cwtl
push
sar
sub
jae
push
pop
pop
push
inc
mov
inc
hlt
sbb
gs
dec
cmp
stc
add
lret
test
js
pop
out
imul
js
jecxz
mov
fcoms
jo
mov
cmp
dec
sub
outsl
fmul
inc
jle
or
shr
hlt
push
mov
dec
mov
fdivs
pushf
leave
jo
or
hlt
sbb
cmpsl
ja
lret
jecxz
jp
js
push
stos
cmp
dec
jl
adc
adc
add
xchg
and
or
and
gs
add
adc
test
lea
xor
lea
in
js
data16
aad
mov
jno
inc
addr16
int
pop
mov
xor
mov
or
mov
jecxz
outsl
ffree
cmp
stos
icebp
jg
shrl
and
adc
test
mov
and
aam
inc
stos
mov
xor
pusha
cmp
cmp
outsl
add
in
xchg
pop
das
or
xchg
aad
pop
repz
pop
adc
mov
lcall
pop
cmp
cld
ljmp
mov
and
notl
test
push
push
aaa
and
clc
dec
and
insl
xchg
push
rclb
enter
xchg
sub
mov
inc
and
push
or
aaa
std
xor
xchg
ja
out
arpl
mov
rolb
out
xchg
jmp
jnp
push
sub
cmp
xchg
or
sub
lods
in
sbb
jmp
sbbb
scas
add
sar
divl
add
out
sub
xchg
in
push
jns
lcall
ds
cmp
dec
int
das
int3
mov
pop
jbe
jecxz
mov
sbb
out
dec
adc
stc
xchg
xlat
popf
mov
dec
fidivl
inc
out
sbb
mov
sub
xchg
mov
dec
add
xor
dec
adc
cmp
mov
push
xor
dec
pusha
inc
icebp
fsts
gs
into
dec
and
and
sub
pop
pop
jbe
or
jp
aaa
mov
movsl
mov
push
and
sti
and
fs
ret
mov
out
inc
fldl
popl
push
lret
mov
lods
rorl
mov
in
pop
mov
or
mov
aam
popf
js
jle
pop
add
cli
dec
xor
or
rcl
sbb
out
outsl
inc
mov
sbb
xor
jecxz
je
outsb
fwait
arpl
repz
adc
pop
in
cmp
addr16
adc
out
mov
cli
aam
adc
insl
test
or
cmp
andl
je
mov
ljmp
and
les
test
imul
fwait
push
ret
pop
cmpsl
imul
lock
orb
outsl
aas
push
ret
inc
int3
subl
xor
push
loopne
xor
xor
fbld
out
rol
pop
push
insb
andl
pop
mov
pusha
pop
negb
scas
lods
inc
gs
cwtl
outsb
fimull
lods
inc
dec
arpl
pextrw
lret
pop
insb
iret
and
pop
inc
push
cli
divb
fucomip
mov
stos
push
shrb
insb
cmp
nop
xor
loop
push
cmp
popa
xchg
fucom
mov
pushf
repz
inc
fwait
and
call
xor
ret
and
lcall
add
dec
or
inc
ss
outsl
pop
rorl
jmp
pusha
xlat
inc
mov
popf
sbb
int3
mov
scas
mov
shl
das
test
fdivs
adc
mov
xchg
inc
sbb
data16
shl
ret
push
jbe
iret
mov
add
das
icebp
cmp
inc
adc
rcrb
and
je
test
outsl
sub
or
and
in
inc
xchg
xchg
ror
mov
dec
cwtl
nop
movsl
das
xchg
pop
out
out
adc
rcl
daa
imul
and
xor
pop
cmpl
push
xchg
popf
adc
loope
insl
pushf
andb
loop
fnstcw
fwait
adc
je
movsl
notl
xor
sbb
repnz
cmp
je
js
xor
faddl
or
adc
xchg
std
lahf
push
cmc
loope
xchg
inc
pop
shlb
sub
enter
sbb
sub
cmp
jo
mov
jae
mov
rcrb
popf
or
addl
or
dec
imul
out
test
or
cli
loope
flds
shlb
cmp
mov
jo
cmp
add
test
movb
cmp
dec
lds
and
fs
repz
insb
sbb
xor
pop
mov
clc
adc
les
negb
cmp
pop
in
repnz
cmp
sub
xor
push
add
ret
push
adc
push
add
mov
stos
dec
ret
out
dec
push
lahf
xchg
mov
ljmp
sarl
jl
pop
dec
js
insb
cmpsl
rorl
cmpsl
loope
jge
sahf
mov
sbb
xchg
fldt
iret
test
jle
popf
inc
cmc
dec
and
mov
stc
or
lods
lods
dec
jg
int3
adc
fnstcw
add
add
mov
push
test
xor
outsl
or
pop
jno
jl
dec
ja
mov
pop
lds
xchg
xor
nop
sub
es
fwait
mov
fwait
pop
shll
or
mov
pop
pop
sub
int3
pop
lret
int
xchg
pop
cmpsb
fidivs
add
lods
adc
push
pop
movsl
gs
jnp
mov
test
dec
jne
cmpsb
pop
push
push
push
jnp
or
dec
sub
bound
sbb
sbb
cltd
dec
rclb
std
out
inc
jb
lea
cld
std
cmpsb
jp
ret
adc
push
xchg
cmp
outsb
mov
out
jbe
arpl
inc
lcall
sbbb
cmpsb
jmp
xchg
rorb
rol
sbb
cmc
sub
and
in
or
sub
pop
mov
mov
jb
repz
in
outsl
je
push
jl
push
jne
cmp
lret
scas
adc
mov
cmp
dec
cs
jg
int3
xor
push
mov
xor
mov
xor
pop
pop
jmp
pusha
idiv
push
in
pop
into
dec
lock
test
mov
mov
lret
popf
repz
dec
test
mov
dec
pushf
cmpsl
aad
lods
fmuls
enter
inc
push
xor
outsb
and
sub
mov
int3
loopne
cmp
out
xchg
sbb
movsl
scas
xchg
mov
insb
inc
shl
jo
and
gs
pop
jo
inc
cwtl
adcb
cltd
cmpsl
mov
aam
in
sub
ficoms
rorl
ss
adc
add
mov
pop
clc
xchg
or
fcomps
mov
jne
push
popf
outsb
sbb
mov
fidivrs
jnp
shl
xchg
push
lods
sub
aaa
or
jb
testl
imulb
sbb
pusha
loopne
andl
cmpl
out
fucomp
es
push
xor
fiadds
mov
sbb
mov
dec
es
rol
and
arpl
add
stc
ficoml
jb
jecxz
mov
sub
aas
lahf
pop
sarb
xor
xchg
call
int
and
add
outsl
adc
lret
adc
mov
rclb
popa
mov
xchg
stos
mov
icebp
neg
fs
jl
pop
dec
pop
xor
xchg
xor
xchg
negb
and
daa
not
mov
insl
inc
push
push
test
hlt
cmpsl
jmp
xor
imul
inc
cmp
cmp
fisubl
sbb
sbb
push
mov
popa
sbb
jg
and
xchg
mov
test
ss
mov
inc
out
aam
and
mov
jmp
or
out
sub
adc
dec
nop
xchg
test
jge
dec
lret
xchg
inc
ucomiss
lret
xor
cmp
push
out
push
dec
xchg
scas
jbe
enter
rsqrtps
cmp
inc
outsl
int3
loop
inc
scas
mov
push
lods
rcr
or
sub
dec
pop
insl
add
pop
xorl
sub
out
add
dec
mov
jno
cltd
stc
or
push
inc
arpl
sub
or
xchg
insl
arpl
adc
mov
or
aas
add
inc
cmp
imull
int
push
mov
dec
mov
and
sbb
sub
jb
xchg
insl
xor
outsb
lret
test
sbb
fs
mov
notl
adc
les
gs
jmp
xchg
out
scas
push
push
sub
pop
mov
pushl
ror
stc
mull
inc
sub
les
pop
fs
dec
insb
data16
mov
ljmp
outsl
repz
lods
mov
pop
jg
daa
jo
mull
or
inc
jle
repz
pusha
adc
inc
jb
mov
in
sbbb
mov
xchg
push
jmp
dec
push
add
andl
pop
add
dec
ds
push
lret
fs
jnp
psubsw
leave
mov
xor
addr16
fisubrs
loop
loop
mov
subl
xor
and
inc
xchg
imul
cltd
lahf
ret
mov
mov
jl
loopne
shlb
xor
mov
add
test
adc
add
aaa
testl
inc
dec
repz
adc
mov
cmp
sar
jnp
cltd
stos
cmp
or
add
pop
fsubr
mov
pop
jge,pt
fmuls
xchg
or
cs
clc
xchg
push
pop
mov
mov
ss
push
xor
cmp
es
out
add
inc
jge
push
lods
test
out
jae
or
mov
add
jo
fidivrl
addr16
int
mov
int
adc
je
shlb
sbb
mov
ja
shll
sarl
ss
sti
add
cmpsl
arpl
or
shl
adc
enter
fwait
add
and
xor
int
mov
mov
mov
sbb
jo
xor
adc
imul
push
sbb
insb
pop
cmp
xchg
dec
push
rol
inc
fistps
pop
sbb
xchg
xchg
test
xchg
sbb
inc
int3
adc
xor
adc
icebp
add
gs
dec
cmpsl
sbb
push
add
into
jp
xchg
jl
stos
or
lods
insb
dec
divl
mov
xchg
inc
jbe
out
jns
ljmp
mov
jg
pop
cltd
and
and
mov
jno
shrl
fdivr
daa
into
push
sub
add
mov
lea
sbb
pop
pop
push
push
xor
cltd
testb
lahf
ficompl
adc
in
mov
jg
fldt
inc
je
push
js
scas
sub
jl
stc
add
pusha
inc
jbe
js
cmpb
out
out
xchg
stos
or
sar
int3
clc
mov
nop
hlt
mov
xchg
pop
dec
testl
stos
inc
in
pop
inc
add
sarb
mov
sub
jbe
adc
mov
push
mov
rcrl
jbe
out
popf
test
cmp
lret
mov
iret
in
ret
pop
pop
jno
sahf
out
pop
sub
jl
scas
int
dec
adc
push
testb
or
outsl
fisttpll
mov
xor
call
movl
ret
push
aaa
push
pusha
pushf
jg
xchg
leave
notl
push
mov
test
pop
ret
pop
jl
sti
adc
sub
arpl
bound
jp
data16
cld
cli
hlt
xor
out
cmp
cs
xor
shrl
sbb
pushf
stos
je
or
jp
ret
mov
and
jb
cmpsb
ja
mov
pop
pop
ret
loope
pushf
xor
mov
inc
dec
inc
shlb
addr16
repnz
mov
xchg
xchg
nop
fst
or
out
jbe
mov
fcompl
jmp
loopne
cmp
xor
mov
adc
mov
fistpll
aad
orl
lods
adc
leave
pushf
into
popa
and
mov
or
inc
aaa
sbb
pop
scas
dec
lret
cmp
cld
adc
test
jae
stos
inc
mov
aad
mov
fistpl
stos
inc
insb
push
stos
or
sbb
push
rcrl
out
mov
subl
test
dec
loope
inc
mov
sarb
loop
aaa
ret
int3
out
cli
dec
stc
push
in
push
in
rcrl
cli
jecxz
dec
or
popf
movsb
cmpsb
cwtl
push
inc
mov
pop
or
je
movsb
fnstsw
xchg
mov
repnz
xchg
loop
subb
push
fcmovnb
lahf
addr16
mov
ljmp
mov
test
pop
mov
notb
lret
popa
outsb
rclb
push
xor
subb
xor
dec
mov
dec
stc
xchg
or
cmpsl
sar
mov
mov
not
and
lea
cmp
cmp
lock
jp,pn
rcll
pop
jge
lods
outsb
push
jnp
lret
push
pop
iret
daa
mov
cmp
not
sbb
fwait
test
fidivrs
and
loop
dec
lahf
jg
mov
push
addr16
adc
test
ds
les
ror
rcll
mov
stc
push
cmpsl
scas
popl
in
scas
push
test
add
outsb
xchg
jl
xchg
insb
xor
add
pop
adc
sbb
ret
cli
idivl
ljmp
leave
pop
mov
int3
outsb
inc
inc
addps
fs
jl
dec
int
and
mov
push
mov
movsl
aas
bound
jne
jmp
test
fwait
push
push
cld
lods
movsl
xchg
lahf
and
sti
mov
lahf
mov
xorb
mov
mov
add
stos
arpl
jns
mov
inc
jns
dec
push
mov
scas
and
ljmp
mov
fs
popa
inc
sarl
scas
ja
bound
sub
popf
in
test
sub
loope
sarb
stos
cmpsl
hlt
cmp
aam
test
xor
imul
ds
stc
notl
movsl
movsb
lret
imul
jg
cmp
aam
fistl
inc
mov
cltd
jb
add
xchg
adc
mov
popf
xchg
mov
pop
sbb
sub
adc
jp
cmp
outsb
cld
in
jecxz
addb
dec
inc
jne
cltd
sbb
sub
xchg
add
sbb
movsb
fcomps
lahf
mov
inc
movb
or
mov
mov
sti
out
xor
fstp
insb
aaa
cs
shl
xor
and
mov
loope
addr16
stc
pushf
scas
xchg
xor
shrb
jecxz
cmp
repz
ss
hlt
jge
xchg
add
or
shrl
rol
popf
xlat
dec
decb
push
xchg
xchg
lds
push
xlat
push
mov
jecxz
or
sub
add
adc
jge
inc
pop
xchg
popf
lock
cmp
mov
lret
je
pop
popf
aaa
xchg
cs
daa
push
jbe
mov
and
inc
inc
lahf
mov
arpl
add
movsl
cmpsl
cmp
fmull
das
idivl
hlt
mov
insb
sub
data16
mov
aad
cwtl
push
test
rorb
inc
outsl
inc
or
inc
and
mov
or
or
sub
movsb
or
mov
jg
push
push
andl
pop
data16
mov
cmpb
pop
fstps
test
in
mov
aam
lods
ja
enter
out
sbb
shlb
adc
push
fcoml
out
jecxz
scas
sbb
jbe
xchg
and
add
push
es
lret
mul
ss
push
repnz
cmp
mov
mov
ja
in
xchg
cmp
enter
fisttps
add
insb
loop
pop
ja
adc
add
leave
cmp
mov
out
jb
aam
adc
lret
jp
pop
jp
dec
mov
sbb
stos
icebp
sbb
shll
icebp
dec
jns
xor
lods
pop
addr16
push
add
pop
call
cli
into
inc
rclb
and
icebp
jp
insl
call
mov
and
repnz
push
int3
mov
and
sbb
cmp
pop
pop
out
nop
mov
subl
cs
dec
xor
push
inc
jo
mov
dec
lods
jp
rcl
push
mov
out
pop
xor
mov
sub
mov
mov
pop
pop
sbb
out
stos
jnp
aad
in
fnstsw
call
mov
mov
inc
loopne
push
test
or
or
lock
pop
lea
jnp
pushf
mov
inc
enter
popf
outsb
mov
push
dec
in
hlt
and
jns
push
mov
pop
fcmove
adc
mov
adc
jge
push
mov
dec
add
test
xlat
std
mov
lds
mov
scas
jb
movsb
ja
loope
cli
mov
or
js
std
cmp
sti
cmp
mov
xor
pop
imul
pop
popa
add
push
or
or
adc
pop
adc
push
or
cmp
ficoms
dec
or
leave
aad
cmp
mull
dec
ret
xor
pop
mov
lret
cwtl
mov
outsl
cmc
xchg
lret
repz
test
scas
cld
xlat
test
es
and
les
fiadds
hlt
jns
dec
xchg
lahf
push
push
imul
and
in
ret
pop
loope
adcl
fildll
fwait
sahf
inc
xchg
rcrl
ja
or
dec
ss
inc
xchg
jecxz
mov
inc
sub
into
xor
pop
cwtl
fcomi
aad
dec
das
bound
or
mov
and
loope
mov
popa
jmp
ljmp
mov
push
rcrb
in
stos
es
int
ds
lds
cs
insb
mov
ss
pop
mov
jbe
cmpsl
mov
add
mov
jnp
sub
cwtl
lds
mov
adc
andb
add
xor
std
or
push
pop
or
or
jle
jmp
and
dec
push
in
dec
or
mov
pop
sarb
hlt
jno
ficoms
dec
outsl
xchg
mov
push
inc
push
push
mov
xor
pop
scas
jo
mov
xchg
sub
pushf
cmp
inc
in
add
jl
push
movsl
fcmovnbe
push
push
orb
jns
mov
inc
call
arpl
add
test
in
xorl
cmp
push
test
cltd
mov
fstl
es
ret
sub
enter
and
adc
mov
cmpsb
ljmp
inc
cs
popf
xchg
sbb
cli
gs
mov
shr
add
xchg
dec
sarl
aam
jmp
push
enter
fiadds
daa
inc
dec
pop
push
or
les
out
sub
into
fsubrs
enter
fwait
arpl
mov
faddp
xchg
insl
daa
into
cmp
mov
cld
es
data16
aad
sar
aas
xorb
cmpsl
mov
addl
push
notb
call
mov
xor
loope
leave
sbb
mov
int3
cmpl
aaa
push
cmp
fidivl
pop
shrb
icebp
mov
loope
push
shlb
lret
cmpl
add
add
push
mov
cmp
aam
add
outsl
call
not
es
push
sbb
insb
fwait
mov
nop
out
cmp
aam
sahf
adc
or
arpl
xor
mov
add
jmp
dec
loopne
pop
or
mov
addb
push
mov
pop
cmovbe
mov
push
dec
js
mov
loop
jle
add
xor
inc
push
daa
or
stos
out
cmp
icebp
clc
nop
cmp
fistpll
in
les
pusha
dec
or
mov
loopne
adc
data16
loop
xchg
fbld
lret
cmp
stos
pushf
jge
inc
add
aaa
sub
lock
fcoms
or
test
mov
movswl
subl
mov
xrelease
push
adc
test
in
push
xchg
add
cmp
mov
mov
arpl
inc
pop
dec
or
lods
xchg
test
hlt
rol
pop
mov
mov
jo
jg
das
mov
dec
push
cmpsl
or
leave
fcoms
scas
mov
loopne
add
mov
sub
push
pop
pop
jp
xchg
add
cmp
into
imul
or
nop
xor
inc
jl
mov
das
sub
fisttpl
jecxz
mov
push
add
mov
mov
repz
call
into
cs
pop
xchg
push
jle
iretw
dec
sarb
mov
xchg
xchg
push
pop
imul
mov
lret
pop
mov
addb
out
mov
jmp
xchg
fwait
pop
xor
ds
mov
ficomps
ljmp
mov
mov
fadds
bound
scas
pop
ficoms
xchg
mov
jge
xchg
sbb
loopne
sti
pop
das
adc
mov
out
cmpsb
sbb
repz
mov
bound
outsb
pop
in
inc
fdivrs
xor
mov
xor
dec
into
stos
jecxz
arpl
dec
enter
into
lret
dec
mov
popf
sub
insb
insb
int3
scas
sti
add
push
mov
add
stos
mov
jne
movsl
popf
aam
and
inc
lods
enter
xor
sub
add
cltd
sub
inc
rol
jae
or
mov
out
fstpt
bound
xchg
pop
and
sbb
push
inc
add
xchg
mov
and
pusha
adc
xor
mov
inc
ss
xor
insb
xchg
rcrb
pop
push
and
and
cmp
add
sahf
ss
fldenv
mov
fadds
xchg
outsl
lcall
and
mov
andb
ret
cmp
sub
into
ds
and
rclb
xor
push
mov
push
sub
cmp
rcll
cmp
or
pop
push
and
cmp
push
inc
pushf
fs
addr16
jg
int
xchg
jmp
popf
fidivrs
pop
and
repz
push
jnp
leave
sarb
sbb
pop
fs
out
xor
mov
lock
adc
cli
cmp
xor
jp
cli
sbb
pop
or
mov
inc
data16
lret
dec
push
jle
rol
jg
inc
mov
or
adc
dec
rorb
sbb
mov
push
xchg
popa
push
mov
mul
push
push
sub
and
fwait
jae
inc
ss
mov
data16
aas
inc
push
add
fwait
push
mov
mov
out
daa
jmp
pop
loop
sti
push
dec
in
jge
mov
lods
imul
mov
dec
sub
jecxz
adc
scas
sbb
mov
mov
dec
shlb
enter
lock
push
push
movsb
mov
push
xor
fldcw
dec
jg
leave
cmpl
sahf
pop
jmp
fdivs
adc
fimuls
jo
mov
mov
aam
pop
cmpsl
in
mov
hlt
lcall
adcb
sub
in
jns
add
sbb
mov
je
jo
adc
fbstp
mov
mov
sbb
nop
cltd
xchg
mov
jl
cmp
jp
push
scas
xchg
mov
icebp
int
mov
into
adc
or
scas
mov
fdiv
dec
mov
pop
aad
stc
xor
outsb
pop
test
push
fildl
imul
pop
adcl
scas
test
add
jge
test
ja
cmp
xchg
enter
pushf
std
sub
pusha
ficoml
jbe
lcall
call
and
sahf
xchg
mov
xchg
outsl
cmpsl
cmpsb
or
push
dec
out
rorl
cmp
xor
jno
mov
call
loop
push
and
push
push
cmp
sbb
mov
jnp
js
fmull
pop
pop
gs
bound
ret
lock
xchg
mov
inc
repnz
lret
rclb
push
cmp
jns
mov
cmp
jecxz
adcl
clc
sbb
sbb
and
test
leave
ss
mov
insb
adc
mov
pop
add
test
jnp,pt
dec
lret
fld1
pushl
rcll
or
and
and
mov
inc
and
pop
mov
fdivrp
test
sbb
sti
arpl
or
xchg
stc
cmpsl
fldpi
lods
sbb
mov
pop
sbb
gs
int
out
push
xchg
jle
and
xchg
mov
enter
enter
or
test
addr16
sbb
jp
xchg
popw
outsb
adc
mov
fidivrl
sbb
and
push
es
mov
loop
lods
iret
mov
dec
mov
mov
adc
adc
sub
out
fildll
fwait
pop
push
xchg
dec
aam
lret
je
cmpsb
out
lds
scas
push
int
cmp
fsubrl
adc
nop
hlt
sbb
mov
cmpsb
cmp
or
xchg
imul
xchg
and
cli
pop
mov
daa
popl
shrl
ss
icebp
mov
mov
icebp
cwtl
add
or
cmp
xor
xor
xor
xor
aas
add
add
rolb
xor
add
add
inc
inc
add
out
inc
inc
incl
add
jg
xchg
sub
jg
call
jg
std
inc
mov
or
and
jbe
lds
fmuls
call
jns
lock
jno
mov
pop
sub
in
lea
call
mov
xchg
sub
sub
or
icebp
pop
test
leave
jp
pop
loopne
mov
xor
dec
inc
pop
enter
mov
scas
dec
test
les
hlt
adc
mov
inc
xor
aas
daa
mov
and
fmul
insb
mov
loope
adc
daa
fistps
inc
fnsave
daa
push
inc
push
icebp
jmp
clc
push
incb
add
pop
push
ss
jg
fdecstp
inc
in
and
xor
mov
push
fs
aas
ret
lret
nop
lcall
cmp
fdivrs
add
fisttpl
xchg
pop
pop
lock
subl
lds
adc
in
insl
mov
in
test
jns
mov
mov
outsb
dec
cmpsb
out
pusha
test
push
scas
mov
mov
mov
repz
js
mov
sti
jp
sub
pop
mov
cmp
cmp
push
ss
loopne
pop
mov
fs
sbb
lahf
jg
outsb
fmull
loop
test
xchg
test
pushf
pop
loop
push
std
aas
push
mov
in
xchg
out
mov
aad
mov
lea
out
add
pop
dec
or
lock
addb
xchg
add
cmp
lret
jecxz
mov
aas
mov
xchg
push
mov
xor
inc
cmpsl
rolb
adc
fwait
into
mov
pop
add
jmp
clc
shrb
pop
xlat
imul
lds
cltd
pop
inc
lods
ljmp
or
jl
sub
outsl
int3
fwait
mov
cmc
test
int3
pop
gs
dec
jno
inc
push
xor
jno
imul
fsubs
and
mov
mov
push
insb
cltd
and
or
dec
mov
mov
loope
sbb
cmpsb
jns
mov
jne
cmp
cli
movsb
ficoms
cmpsl
jg
repz
jae
dec
mov
xlat
imul
mov
cmp
dec
dec
lock
cmp
xlat
dec
dec
aad
xor
sub
loopne
dec
xor
scas
push
and
xlat
add
aaa
movsb
rcr
arpl
dec
adc
mov
jb
inc
outsl
negl
and
push
dec
dec
or
das
xchg
in
sbb
cmp
mov
push
add
push
xor
call
int3
lret
push
mov
gs
mov
inc
and
sbb
movsb
dec
push
scas
iret
das
dec
lock
and
cltd
xchg
movsb
or
sbb
adc
call
sub
insl
arpl
enter
inc
ss
dec
add
mov
ja
pop
jmp
incl
ds
sbbl
aad
outsl
jno
sbb
sbb
sub
push
mov
ret
dec
aam
pop
and
cmp
inc
lods
call
xor
xlat
mov
cwtl
std
xchg
xchg
clc
mov
push
nop
cli
xchg
call
subb
fs
mov
fwait
mov
mov
fstpl
mov
ja
and
or
lahf
push
scas
xchg
test
pop
sub
pop
sbb
pop
divb
mov
js
pop
mov
dec
inc
xchg
jmp
dec
shrb
sbb
popf
shl
scas
in
jp
mov
xchg
jns
fwait
mov
imul
bound
adc
sub
pushl
dec
add
mov
cmp
pop
arpl
fsubs
das
adc
sbb
or
shlb
dec
sbb
shl
mov
int3
or
cli
jp
mov
mov
cld
aas
push
jp
sub
adc
adcl
faddl
insl
mov
adc
test
icebp
in
pop
pop
mov
mov
data16
inc
xor
or
repz
cmp
adc
sti
mov
push
or
stos
xor
adc
cld
mov
movsl
xchg
xchg
mov
and
mov
mov
or
inc
jae
jp
mov
data16
daa
int3
stos
sbb
and
jmp
out
loope
mov
inc
arpl
mov
jns
loop
hlt
mov
pop
lahf
aaa
aaa
loop
les
add
and
jl
xor
cmp
rcrl
arpl
adc
push
repnz
mov
push
sub
or
clc
mov
fmull
mov
lods
jne
ret
jecxz
mov
inc
adc
fcomip
mov
in
stos
xchg
pop
adc
xchg
aaa
stos
inc
scas
imul
mov
test
movsb
mov
aas
je
xchg
mov
mov
aam
ljmp
cmp
insl
rcrl
insb
jmp
ja
lods
test
mov
xor
je
icebp
sub
lcall
in
xchg
enter
aas
pushf
xchg
lds
push
cmpsl
xor
inc
fwait
test
and
int
pop
mov
or
and
jb
movsb
sti
add
cmp
int3
bound
clc
ret
mov
push
jle
mov
fldl2e
push
jae
mov
arpl
pop
push
js
pushl
mov
add
lahf
xor
cs
pop
xchg
cmp
pop
inc
insb
out
add
loop
test
jge
gs
ss
pop
lcall
lret
mov
lcall
or
lock
push
adc
call
inc
fcomp
xchg
dec
pushf
and
mov
repnz
jg
je
dec
jb
out
call
jnp
inc
lret
push
adc
into
aad
test
int3
mov
ret
mov
add
imul
xchg
dec
rolb
sub
fld
inc
push
lods
clc
in
cmpl
push
fsubp
cmpsb
pop
xor
sub
jle
and
mov
xchg
outsl
sarb
ret
push
popf
mov
imul
inc
mov
arpl
adc
inc
hlt
in
inc
push
sarb
dec
mov
lds
adc
repnz
xor
pop
fstpl
xlat
cmp
aam
mov
dec
mov
adc
cwtl
popa
sub
and
and
lahf
and
ret
shrl
cmp
adc
mov
push
sti
or
mov
sbb
jle
jl
rcll
jl
push
popf
mov
push
iret
sub
inc
imul
sub
mov
iret
or
xchg
int3
inc
sbb
adc
pushf
cli
jmp
dec
outsb
lods
xor
mov
dec
mov
in
xor
mov
push
add
sbb
cmpsl
negl
movsl
stos
xchg
mov
in
in
mov
jbe
jle
mov
inc
push
cmpb
sub
mov
repz
or
pop
xchg
or
push
cmp
pop
push
loop
adc
add
jo
sub
dec
aad
shlb
cld
lds
outsl
dec
and
pusha
imul
pop
cmp
mov
jmp
sbb
ret
mov
daa
es
add
adc
movsl
and
mov
in
pop
push
sti
mov
or
popf
dec
int
dec
lret
std
hlt
es
mov
pop
imul
adc
add
sbb
mov
xor
repnz
call
jns
jle
fbstp
xchg
outsb
fs
ljmp
in
lds
jl
pushl
push
test
pop
test
in
in
lods
out
popa
pop
jno
rol
xchg
aas
int
push
pop
add
int3
sub
inc
push
sub
pop
mov
lods
mov
je
mov
sub
add
cli
dec
mov
ss
fwait
loop
js
push
jne
daa
stc
loop
mov
add
pop
inc
movsb
dec
or
stos
stos
lahf
dec
scas
xchg
inc
pusha
into
jbe
and
icebp
fsubs
stos
cwtl
jae
adc
mov
jmp
inc
adc
inc
repz
xor
jg
jbe
sti
xchg
mov
pop
fnstcw
sbb
xchg
js
add
repnz
xchg
mov
inc
and
fmull
jns
sbb
aas
mov
pop
xlat
scas
in
pushl
pop
jge
cmp
call
mov
inc
cmpsl
mov
push
js
fcomps
int
mov
xlat
out
sub
cld
push
hlt
loopne
or
inc
and
fcoms
sbb
fnstenv
mov
push
lods
lds
adc
pop
scas
clc
inc
lahf
sar
pop
cmp
inc
rol
push
mov
cmp
xor
popf
rcl
fs
sub
data16
inc
hlt
sbb
insl
sbb
leave
mov
sbb
xchg
fistl
add
cmpsb
outsl
lds
jno
mov
test
mov
pop
fiaddl
sbb
xor
and
sbb
and
stc
sarb
xchg
das
repz
push
pop
xchg
mov
xor
fimuls
pop
popf
ja
push
adc
sub
xchg
mov
pop
pop
cltd
arpl
lds
mov
mov
sub
cmc
xor
xor
jl
int3
cs
fdivs
test
jne
fimull
sbb
xor
inc
test
hlt
mov
fidivs
sbb
xor
mov
jno
fwait
push
or
ja
xchg
faddl
movsb
or
cmpsb
xor
or
dec
out
iret
dec
push
inc
adc
adc
mov
filds
cmc
push
pop
ds
inc
jp
xchg
mov
dec
push
or
loope
sub
mov
dec
movsb
out
dec
adc
push
nop
sub
pop
pause
xor
fsubs
in
sti
stc
mov
sbb
mov
adc
cmp
inc
imul
or
mov
test
mov
mov
jmp
pop
or
out
xchg
shrb
or
mov
jo
idivl
adc
scas
or
leave
push
js
repz
inc
cltd
adc
iret
mov
push
jne
nop
test
xor
inc
fnstsw
cmpsb
push
scas
pop
outsl
mov
cmc
jg
pop
loopne
xchg
push
pop
fmul
mov
adc
inc
jo
mov
dec
sub
and
dec
ljmp
xlat
enter
mov
jmp
call
lret
mov
jno
repz
inc
inc
scas
xor
inc
lahf
adc
cwtl
inc
lcall
sub
sahf
push
ret
pop
ljmp
adcb
es
cmp
fs
xor
sbb
push
push
ljmp
jge
lods
jbe
in
and
pop
das
push
pusha
movsl
or
rorb
cmp
push
push
test
ret
push
or
repnz
fidivl
inc
jno
xor
sub
push
sbb
cli
sbb
add
jecxz
add
mov
loope
jecxz
mov
loop
cmpsl
in
lods
mov
pusha
inc
loopne
dec
fcomps
ret
ds
andb
fstpt
adc
cmp
pop
test
ds
sbb
mov
pop
xor
add
or
xchg
xchg
pop
movsb
xor
add
cmpb
imul
int
pop
testb
dec
jbe
sbb
mov
pop
pushf
jecxz
insb
shrb
push
je
add
loop
in
sub
shll
add
out
sub
cmp
mov
or
push
loop
push
les
pop
xor
mov
shlb
pushf
xor
and
add
mov
out
inc
pushf
cmp
scas
in
xchg
scas
mov
pop
xor
mov
into
dec
rorb
mov
in
cmpsl
dec
bound
jb
push
mov
or
mov
jb
jmp
jae
loopne
push
fcoml
dec
sarl
iret
dec
mov
cld
imul
xchg
into
and
mov
imul
pop
add
mov
push
sahf
shl
arpl
jecxz,pt
insb
roll
xor
add
mov
sti
xchg
jns
add
call
sbb
ret
mov
rorl
jns
ljmp
inc
loop
push
enter
in
mov
cmpsl
mov
mov
cwtl
cltd
inc
repz
jp
xchg
jnp
push
in
sbb
test
pop
or
sub
xchg
sub
out
xchg
or
cmpsb
and
cmp
in
xchg
jl
and
sti
shlb
fwait
mov
stos
and
and
jo
lret
loop
pop
aad
jnp
shll
out
bound
into
sub
testb
pop
movhps
add
dec
std
lret
mov
hlt
test
les
jbe
dec
aam
inc
mov
mov
fmuls
mov
out
dec
xchg
loopne
push
jno
pop
daa
dec
jmp
pop
sub
inc
cmp
jo
dec
in
mov
xor
test
inc
inc
dec
bound
dec
hlt
test
xor
call
test
xor
inc
and
cmp
mov
add
inc
xchg
ret
lock
hlt
in
mov
push
xor
shl
adc
es
inc
jne
jg
mov
out
stc
sbb
mov
movsl
and
mov
stos
jmp
ljmp
stos
push
adc
fstpl
jne
sub
jno
stos
jnp
mov
inc
sub
arpl
inc
data16
cmpsl
mov
cmp
jne
sbb
ret
or
int
dec
mov
mov
sti
fiadds
cmpsb
sbbl
shl
mov
loopne
setg
out
test
jno
in
cltd
scas
ret
loopne
pop
out
jns
mov
data16
xchg
push
jno
sbb
jno
and
add
lret
andb
aaa
cmp
and
aad
push
mov
xor
leave
and
jns
pop
jecxz
cmp
pop
fadd
ljmp
fadd
mov
gs
testb
scas
push
into
mov
dec
pop
adcb
nop
into
mov
sbb
mov
mov
pushf
es
xchg
mov
jno
push
xor
mov
xchg
cltd
call
aam
icebp
shr
cmp
mov
dec
lock
repnz
push
dec
sbbl
les
dec
rcrl
aaa
xchg
add
xlat
sub
adc
jae
les
stc
rep
mov
outsb
xchg
pusha
cmpsb
enter
movsl
insb
mov
xorl
jne
sub
mov
pop
loopne
iret
push
insb
jns
fstps
sub
fisubl
icebp
leave
mov
push
negl
sarl
pop
dec
shlb
add
pop
ret
orl
hlt
mov
icebp
in
stc
test
ja
cmc
xor
rcrl
dec
call
dec
jmp
scas
iret
jae
mov
push
js
cmc
mov
push
ds
out
out
inc
call
push
enter
jp
pop
int
imul
jecxz
leave
dec
adc
hlt
lahf
dec
sub
push
or
sub
hlt
inc
push
insb
pop
sbb
imul
hlt
stos
ret
xor
lcall
adc
mov
and
out
fwait
push
xchg
adc
push
pop
stos
jecxz
xchg
lcall
and
cmp
push
lock
sbb
mov
aad
js
mov
push
hlt
cli
sbb
sti
roll
push
xchg
fsts
cmp
add
mov
and
sub
inc
xor
mov
outsl
fldcw
sbb
mov
mov
cs
inc
push
and
es
inc
or
or
dec
out
add
ret
mov
push
lds
cmp
dec
rcrl
stc
inc
aam
nop
js
mov
xchg
and
fldt
je
out
cld
mov
sub
cmp
data16
xchg
hlt
sbb
mov
push
ja
push
sbb
pop
imull
movsl
test
push
int
int3
das
sti
mov
repz
pop
loopne
lret
out
ljmp
push
jecxz
mov
ss
fwait
jae
mov
pop
mov
faddl
jne
cltd
ret
pop
ljmp
xor
pop
xchg
stc
mov
repnz
sub
pop
jbe
in
and
lahf
out
jbe
aam
sub
xor
and
fisttps
push
pop
orb
inc
pop
mov
ljmp
iret
mov
jno
and
xor
in
mov
inc
push
and
push
js
std
mov
scas
scas
dec
sbb
sub
mov
ret
pop
test
push
ss
jecxz
movsb
mov
scas
cmp
aas
ret
xor
rclb
push
popf
jne
inc
test
loop
sbb
je
mov
sbb
test
jns
lods
push
xchg
testl
push
pusha
loop
cmpb
xchg
enter
dec
divl
xor
xlat
enter
sub
xlat
xchg
cmp
stos
mov
call
fdivs
xor
nop
sub
bound
jl
scas
and
add
mov
ds
mov
jo
add
and
ss
js
mov
and
cmpsl
and
sbb
jp
lea
shll
cmpsb
leave
xchg
push
sti
cltd
into
movsb
mov
movb
loopne
int
cmc
outsl
mov
pusha
mov
xor
lods
xchg
orps
icebp
mov
pop
pop
add
push
pop
xchg
test
inc
inc
add
hlt
xor
imul
es
ret
inc
pop
dec
mov
jo
es
add
pusha
les
mov
out
push
popf
push
mov
popa
ja
push
push
sub
cmp
pop
es
mov
aad
es
aam
dec
or
lods
adc
push
jne
xor
xchg
nop
fcmovnu
cmp
push
jecxz
hlt
aad
dec
fmull
lock
fimull
inc
mul
add
sahf
xor
xchg
frstpm(287
call
jb
add
insb
mov
dec
xlat
xchg
mov
cli
ret
mov
cmp
shl
xchg
inc
outsl
mov
adc
add
jne
add
leave
dec
jg
xor
jecxz
and
mov
add
push
sti
sbb
ret
sbb
sub
pushf
mov
xlat
jae
sub
pop
sahf
jp
lret
mov
int3
test
sbb
pop
ss
je
dec
or
sti
cltd
aad
into
adc
in
aaa
xchg
popa
je
testb
add
add
daa
aam
into
push
mov
cmp
push
movsw
or
inc
sbb
xchg
and
mov
je
ss
sub
cmp
andl
add
add
ljmp
inc
xorl
xor
inc
sti
insb
stc
cld
stos
cltd
dec
in
pop
add
imul
adc
push
les
in
mov
cmp
cmp
cs
mov
stos
sub
mov
sbb
repz
cmp
fdivrl
insb
arpl
sbb
and
test
dec
test
cld
push
sub
sub
flds
mov
inc
mov
pop
adc
cmp
sub
cmc
rcll
fnstsw
and
mov
lock
mov
fsts
dec
lcall
sbb
dec
fucomi
clc
mov
out
cltd
jbe
cmpsb
pop
mov
or
add
mov
movsb
mov
hlt
jp
dec
movsb
lds
sub
pusha
inc
aad
imul
jge
mov
cmp
sub
cltd
mov
jne
pop
mov
push
mov
fdiv
dec
cmc
push
notl
cli
mov
pop
sub
fs
inc
fs
xchg
aam
dec
dec
sub
mov
out
fstpt
and
xor
imul
mov
in
data16
mov
pop
cmp
add
dec
jae
psrlq
pop
adc
mov
or
fstpt
ja
inc
push
sbb
and
push
pop
test
mov
sub
adc
xchg
adc
ds
jns
push
sub
jb
sbb
aad
mov
call
inc
stos
dec
pusha
js
shrl
pop
mov
mov
adc
xchg
imul
push
cmp
adc
sub
call
fnstsw
jnp
xchg
lods
lret
and
scas
mov
in
repnz
nop
adcl
xor
sarb
xor
jbe
mov
xchg
sub
cli
lcall
int3
mov
jge
dec
xor
push
jl
jnp
push
mov
into
out
and
push
cmpsl
sub
jae
sub
mov
shlb
inc
or
out
je
lret
aas
adc
adc
push
and
inc
int3
cmp
mov
clc
mov
rorb
adc
clc
cli
push
sti
fs
xor
push
xbegin
lods
test
jmp
js
imul
dec
pushf
pop
aas
xchg
icebp
fld
cli
jne
sub
dec
inc
cmp
xchg
fsubrs
lods
out
mov
xor
adc
je
pop
mov
adc
repz
cmp
dec
fisttps
cmp
clc
mov
adc
addb
mov
jbe
incl
popa
aad
xchg
inc
loopne
jno
and
leave
push
aam
inc
push
add
sbb
push
lds
bound
out
iret
repz
lods
jle
lahf
cmp
fildl
or
adc
cld
sbb
mov
inc
outsb
popa
dec
shll
bound
or
add
enter
dec
imul
inc
sub
xchg
add
and
xchg
test
js
add
mov
adc
js
mov
shr
jns
rorb
mull
push
stos
add
push
add
dec
divb
sbbl
xor
adc
inc
mov
xchg
lahf
xor
or
sub
xor
jb
adc
lahf
and
and
add
or
pop
test
jnp
mov
mov
sbb
les
add
test
bound
pop
xor
cwtl
sbb
add
loope
aam
arpl
push
mov
sub
ret
push
scas
mov
push
insb
jmp
in
adc
insb
jl
push
mov
inc
push
pushf
lahf
mov
ljmp
loopne
adc
mov
xchg
cwtl
cmp
lds
clc
int
mov
gs
loope
cwtl
sbb
gs
and
and
add
jmp
addr16
scas
repnz
jp
push
in
push
mov
lret
data16
push
add
movsb
cli
mov
xchg
cmc
sub
or
aaa
sbb
shrb
fs
aad
in
lahf
scas
mov
xchg
es
dec
jns
loope
loop
ljmp
fs
cmp
xor
in
sti
and
inc
aam
les
sets
mov
dec
test
mov
out
out
xchg
xor
cltd
out
dec
sbb
ljmp
or
cs
sbb
pop
push
sbb
xor
fs
jb
out
hlt
fldl
jb
mov
popf
lods
lahf
into
push
mov
daa
sbb
xchg
mov
shl
cmpsl
add
dec
adc
pushf
inc
xchg
in
fstps
jmp
mov
push
jge
jne
fs
mov
lods
in
jns
xchg
dec
and
add
lahf
js
jmp
addr16
test
arpl
dec
add
sub
gs
movsb
ds
inc
cmp
xor
sbb
push
loopne
movsb
dec
leave
ja
dec
fiadds
dec
jno
inc
repz
sbb
int
mov
ficoml
lods
jb
dec
or
scas
into
sub
lahf
sbb
arpl
push
aad
fs
dec
sub
mov
test
repz
int
and
jl
or
pop
incb
out
shl
mov
ss
add
sub
shr
sbb
inc
pop
call
dec
lret
imul
mov
daa
inc
aad
pop
out
int
arpl
sbbl
and
aas
dec
adc
mov
adc
inc
and
mov
outsl
fsub
fldcw
lods
imul
xchg
lock
cs
test
adc
int3
shll
aam
xchg
cld
clc
cmp
lea
icebp
rcr
jecxz
scas
clc
jg
pop
rolb
movsb
xchg
add
mov
mov
inc
sbb
icebp
push
imul
xchg
popf
push
les
jo
mov
aaa
push
fldt
bt
cmpl
push
pop
aam
cwtl
scas
clc
test
jle
mov
sbb
cmp
add
mov
sub
and
repnz
mov
inc
sub
push
lea
rol
push
xchg
or
pop
mov
jnp
xchg
or
lahf
sub
add
or
int
lods
dec
dec
pusha
mov
ss
rcrl
adc
add
roll
sbb
pop
pop
inc
mov
add
jge
andps
fistpll
ficomps
aam
mov
or
icebp
inc
jmp
in
cmp
push
xor
cmp
adc
movsb
sub
lret
or
dec
in
add
inc
mov
push
jno
pop
leave
outsl
aam
mov
push
loop
lods
jno
dec
mov
and
jmp
mov
fcmovnu
inc
lret
mov
or
xor
cmpsl
mov
pop
cmp
inc
xor
movsl
aad
lock
das
and
enter
test
in
pusha
outsb
iret
fmuls
push
xor
test
shlb
jmp
andl
push
push
push
incl
xchg
movsb
jp
cmpsl
dec
sbb
cmp
add
rcr
lea
sbb
hlt
xorl
mov
mov
adc
pandn
cmp
shrb
loopne
cltd
fwait
lock
or
push
or
loop
roll
insb
fsubrl
jns
pop
cmp
aas
lret
mov
rolb
xor
mov
cmp
les
arpl
jb
loope
sbb
mov
mov
in
mov
imul
mov
add
mov
add
cmp
pop
mov
inc
adc
xchg
mov
fistl
aad
dec
xchg
mov
insl
pusha
mov
sub
andl
cmp
mov
mov
xlat
loopne
push
ljmp
ret
push
pop
scas
add
pop
inc
into
mov
sub
shlb
cmp
pop
sbb
addb
gs
add
les
clc
call
lock
xlat
xlat
pop
push
cmp
mov
mov
pop
mov
mov
xchg
jmp
pop
movsl
or
xchg
fistps
int
inc
je
or
inc
and
out
and
adc
icebp
pop
mov
in
ud2
or
insb
sahf
lods
xor
push
aas
das
sahf
mov
or
cmp
pop
gs
idivl
ficoms
ljmp
and
popa
add
cmp
lock
jmp
jae
xchg
mov
xor
mov
cmp
mov
cli
mov
cmpsl
call
test
xlat
jge
pushf
jmp
pusha
dec
push
mov
xchg
js
xchg
into
xor
cmp
inc
les
xor
sbb
push
lret
jg
arpl
dec
sbb
pop
arpl
jne
dec
mov
inc
mov
sub
lods
push
int3
xchg
push
pop
jg
jp
cwtl
loope
add
jmp
insb
sahf
testb
or
xchg
jo
or
jne
loope
rclb
test
faddl
pushf
pop
sub
imul
pop
or
gs
sbb
cld
push
xchg
fdivs
shl
jecxz
jns
or
pusha
sarb
adc
pushf
mov
fildll
jmp
test
out
jnp
push
jp
inc
xchg
mov
pop
push
jmp
clc
push
mov
icebp
jle
adc
push
stos
xchg
add
pop
push
stos
xorl
jp
bound
push
aam
out
jle
cmp
and
int
rorb
jge
clc
cmpsl
jg
dec
jp
adc
mov
mov
dec
jmp
sbb
shlb
xchg
push
push
mov
jge
or
cld
adc
xchg
pop
aad
jle
cmp
push
dec
mov
sub
jge
jnp
adc
decl
imul
pusha
mov
and
out
daa
clc
cld
ja
xlat
jne
insb
xchg
imul
sub
jmp
xchg
ret
clc
add
adc
mov
or
les
stos
test
aas
cmp
xor
push
xchg
adc
inc
push
dec
outsb
xor
push
pop
mov
pop
test
pop
out
andb
inc
cs
repnz
pop
dec
push
add
jae
adc
adc
popa
shrb
andl
push
xchg
xchg
repz
bound
or
cs
or
mov
aaa
add
lret
xchg
mov
cmpsl
adc
add
cmp
adc
dec
or
pop
add
mov
xorb
inc
xchg
cmp
outsb
xchg
out
xchg
mov
inc
imul
mov
pop
out
mov
imul
jo
popf
gs
fwait
mov
scas
cmp
aam
dec
adc
inc
sub
movsl
jno
sub
orl
daa
or
mov
fwait
out
fnstenv
push
xchg
mov
and
dec
das
xor
pop
inc
ffree
push
sub
xor
dec
and
sbb
mov
sbb
sbb
xchg
inc
xorb
pop
addl
cmp
inc
jns
mov
sbb
sub
mov
out
xor
icebp
imul
jb
xchg
adc
adc
in
test
shlb
repnz
mov
mov
xlat
push
mov
or
sbb
inc
ljmp
mov
cltd
sub
lret
pop
sub
add
out
fstl
xlat
test
jg
ljmp
jbe
add
gs
pushf
mov
push
pop
out
dec
call
lods
andl
fmuls
sub
cmpsl
cmp
xor
lds
add
xchg
mov
mov
rol
mov
test
add
push
sub
mov
cmpsb
in
ja
mov
dec
inc
sbb
add
sbb
in
test
inc
scas
inc
scas
stos
ja
pop
mov
movsb
jp
and
mov
push
sbbb
inc
dec
sub
inc
inc
dec
lock
cmp
testb
and
add
out
add
mov
int3
sbb
aad
out
pop
dec
push
pop
cld
xchg
inc
jle
mov
mov
xor
cwtl
movsl
and
fistpl
jecxz
mov
test
fcmovb
sbb
mov
push
or
and
xlat
int3
stos
popa
adc
xchg
loope
dec
or
mov
pop
fdiv
sub
mov
popa
dec
mov
add
bound
cmp
jbe
idiv
lock
inc
add
test
aaa
test
pushf
arpl
or
popa
sbb
jo
mov
push
sub
sub
rcrb
imul
jge
pop
mov
andb
shlb
xorl
pop
insb
inc
aas
lret
xchg
and
sbb
fadds
jno
lcall
aaa
cld
xchg
inc
imul
sbb
jle
sti
stos
pop
cltd
and
cmc
scas
adcb
dec
call
sbb
andl
dec
pop
clc
and
sbb
lret
pop
jecxz
loop
addr16
in
jg
in
imul
mov
push
out
adc
out
scas
xchg
negl
and
jb
enter
hlt
add
adcl
xchg
in
outsb
push
dec
enter
clc
mov
jno
clc
test
mov
cmp
xchg
cld
js
xor
shll
jge
test
adc
adc
and
daa
cmp
scas
in
ret
sbb
mov
enter
in
les
adc
cmp
and
or
inc
addl
loope
aad
sti
push
shll
leave
ds
push
cmp
push
add
stos
hlt
sbb
stos
dec
fidivs
xchg
push
mov
adc
adc
bound
fldcw
mov
inc
xchg
cmp
or
dec
fxch
cli
xor
pop
int
add
dec
popf
pushw
adc
movsb
lea
stos
call
nop
adc
adc
adc
insl
mov
sbb
sti
push
fimuls
jp
loopne
ret
xor
mov
bound
fcoml
or
pop
loopne
jecxz
push
xchg
add
push
incl
rcll
std
inc
mov
pop
mov
sub
pop
fs
outsl
out
scas
mov
aam
sbb
stc
push
rcr
xor
fucomi
mov
cmp
or
mov
sbb
push
xor
mov
xchg
jno
cmp
sti
cwtl
ljmp
das
lock
adc
and
out
jle
ret
or
xchg
add
mov
cmp
add
xchg
sbb
out
or
hlt
jbe
sbb
cmp
mov
fiaddl
mov
js
gs
fisubrs
daa
mov
xlat
mov
sti
sub
add
outsl
aam
not
sbb
xchg
ret
mov
xorl
fsubl
aaa
roll
dec
stc
mov
hlt
test
or
push
arpl
arpl
in
int
loop
fisttpll
pop
out
test
test
cltd
dec
mov
das
dec
in
add
bnd
or
lret
divb
jge
push
mov
or
fs
fs
mov
mull
inc
xchg
sbb
cmpl
stc
push
cmp
and
pop
jl
in
out
aam
sub
and
pop
cmpsb
subl
daa
and
imul
mov
xor
mov
pop
sub
pop
xchg
push
mov
adcl
cmp
mov
rcrb
pop
xchg
add
mov
dec
aaa
mov
mov
dec
inc
lock
out
jmp
fidivs
mov
and
fcomps
add
ds
out
push
cld
add
jae
scas
sbb
insb
xchg
jbe
pop
dec
inc
fwait
xchg
or
gs
shrb
mov
push
inc
popf
cli
aam
jmp
add
jno
mov
lret
adc
mov
mov
aam
or
je
push
cltd
adc
jo
aaa
scas
loop
push
sub
xorb
jmp
jecxz
cmp
add
dec
jp
lret
loope
imull
mov
bound
mov
adc
shlb
and
jmp
push
add
in
cli
mov
popa
call
sub
cmp
sub
iret
aam
cmpsb
push
imul
imul
and
mov
mov
xor
or
push
push
adcb
xchg
imul
push
sub
inc
add
imul
lds
xchg
inc
mov
sub
data16
int
jmp
fbstp
pop
faddl
iret
out
sbb
int
xor
push
data16
pop
cmp
fisttps
push
or
jo
push
and
std
pop
pop
cmp
xchg
test
lea
jne
sbb
sub
mov
jae
cld
into
dec
or
outsl
mov
jbe
fwait
pop
shrl
adc
fisubl
mov
and
sbb
in
dec
jno
lock
inc
cmp
xor
mov
shrl
cld
in
sub
cmp
rorb
pop
mov
pop
and
inc
sti
cmp
setl
imul
mov
outsb
cvtps2pd
xchg
cmp
sbb
push
movsl
sti
inc
add
mov
int
data16
shll
ds
fisubrs
xchg
mov
add
mov
gs
jp
lahf
mov
out
mov
das
push
xor
pushf
inc
xor
dec
sub
mov
ds
pop
out
cmp
sub
mov
lret
mov
js
sbb
ljmp
sti
jmp
dec
xor
sub
daa
mov
aaa
and
cli
add
mov
push
mov
add
les
repz
xor
cmp
jmp
lods
sbb
sti
xchg
out
add
inc
sub
movsb
lds
jmp
cltd
popa
ljmp
xchg
imul
inc
das
ja
add
arpl
stos
aaa
jmp
pusha
pop
ficomps
inc
xchg
sbb
scas
sub
xchg
and
adc
sbb
inc
inc
push
mov
gs
xchg
xchg
push
lds
jge
mov
adc
mov
sbb
jge
jmp
call
clc
stc
insb
lret
out
mov
enter
pop
sahf
movsb
mov
dec
jbe
jns
bound
ja
icebp
loope
inc
inc
sti
adc
movb
leave
lock
and
lods
scas
cmp
xchg
js
mov
mov
jb
cmpl
loopne
mov
insb
mov
imul
pop
cmp
dec
std
in
cld
or
xchg
add
pop
dec
inc
adc
out
das
mov
inc
popf
std
xor
jno
loopne
js
mov
lods
inc
push
cmpsb
movl
maskmovq
rcrb
or
mov
xchg
xor
scas
ror
aas
mov
sub
xor
sub
into
cmp
cmpsb
mov
ljmp
daa
adcb
ss
pop
incb
loopne
jle
fdivs
out
xchg
jo
cmp
dec
out
dec
loop
orb
inc
xchg
mov
jge
mov
xchg
imul
arpl
mov
push
sbb
fs
mov
mov
push
jge
lods
push
adc
shlb
or
jne
sarl
lds
add
int
fiadds
outsl
mov
cld
sub
push
and
mov
sub
jl
dec
mov
push
mov
push
xchg
ret
sub
mov
cli
cmp
outsl
inc
cmpl
dec
popf
pop
pop
adc
inc
hlt
inc
and
and
aam
dec
movsb
iret
in
call
mov
jle
xor
mov
stos
adc
enter
xchg
popf
shrb
mov
les
aam
in
and
insb
jne
xchg
push
js
jbe
cmpsl
scas
out
int3
in
lods
cmp
add
clc
in
scas
cmpsl
sub
in
sub
inc
sbb
jnp
jbe
dec
test
mov
cmp
es
leave
xor
inc
outsl
scas
imul
js
fildll
enter
lahf
movsb
add
sbb
leave
jo
xlat
sar
adc
sahf
insb
and
and
mov
call
mov
cmp
jge
or
add
icebp
out
roll
mov
adc
fs
ljmp
lcall
fbld
mov
push
clc
out
cli
filds
mov
dec
scas
test
arpl
cld
scas
jo
cmp
scas
ja
push
fnstenv
and
push
inc
push
xor
das
add
clc
into
repnz
xor
test
fisttpll
movsb
ds
mov
pop
cmp
mov
sbb
inc
push
dec
fcoml
andl
add
les
sub
dec
mov
xor
loope
imul
adc
fcmovnb
mov
filds
inc
mov
push
xlat
dec
pop
int
dec
enter
adc
dec
out
inc
icebp
sbb
adc
movb
test
mov
xchg
xor
cmpsl
or
arpl
adc
xchg
into
sbb
popa
in
idivl
add
popa
fld
fisubrl
mov
repz
add
xchg
mov
pusha
sbb
jnp
fs
sahf
xlat
pushf
mov
or
jne
into
jmp
ljmp
adc
mov
pop
lret
pop
sub
orb
stc
jb
adc
rcll
mov
ret
or
dec
pandn
mov
push
dec
mov
decl
pop
dec
jb
or
and
push
ror
xchg
leave
jecxz
jae
mov
aaa
push
gs
mov
es
or
jmp
mov
xchg
sbbl
repnz
sti
jmp
add
xorl
add
lcall
mov
je
mov
xorl
mov
incl
jne
imul
pop
pushf
insl
mov
adc
add
call
lea
mov
sbb
fisttpll
aaa
jnp
aad
in
pop
mov
outsb
das
rcll
sar
cmp
and
push
adc
pop
and
addr16
push
jb
ret
mov
fstpt
add
push
or
testl
push
cmpsb
inc
fdivr
ret
sub
sub
push
jo
jp
jle
test
fdivp
jp
or
dec
int
inc
mov
test
in
stos
push
jbe
loope
sbb
aas
mov
daa
hlt
push
or
in
push
cmp
movsl
pop
inc
scas
push
mov
repnz
ds
ret
data16
mull
ror
pop
and
dec
fstp
lods
mov
xchg
xchg
jecxz
xlat
adc
imulb
clc
inc
add
mov
or
xrelease
aad
cmp
movsl
pushf
xor
dec
add
out
mov
xchg
xor
lods
pop
xlat
cltd
shll
int3
int3
dec
mov
xlat
pop
negl
dec
jo
cmc
mov
addr16
lock
lret
ret
sbb
in
in
call
dec
cmp
adc
adc
movd
imul
and
sbb
cmp
jo
mov
dec
insl
rcrl
inc
cmp
lret
xchg
lahf
leave
outsb
sub
arpl
into
jbe
inc
mov
cmc
dec
dec
int3
mov
es
mov
mov
cltd
cmc
mov
mov
subb
sbb
jle
push
addl
leave
and
rcrl
dec
adc
mov
imul
xor
dec
fs
and
adc
cwtl
push
cmp
sbb
test
enter
cmpsl
test
dec
stos
sub
or
jo
jno
jns
add
sbb
push
imul
stos
in
imul
jb
sub
mov
ja
insb
int
in
fistps
scas
push
sub
mov
iret
sub
int3
xor
jnp
loop
pop
and
xchg
or
imul
add
xor
dec
lock
inc
and
negb
mov
mov
jbe
daa
movsb
pop
sbb
out
loopne,pt
push
rcr
dec
addr16
pop
xchg
cwtl
mov
enter
inc
and
imul
or
ljmp
xchg
pop
test
sbb
and
cmp
jp
push
pop
push
mov
adc
push
addb
sub
pop
repz
mov
inc
in
test
loop
fyl2x
movsl
rcl
push
es
push
dec
mov
ds
jg
test
loope
add
sbb
cmp
leave
imul
cmc
aam
icebp
movsl
ffree
int3
mov
sbb
sahf
lock
imul
stos
dec
xor
inc
pusha
imul
push
pop
bound
mov
orl
cmp
jae
addr16
test
gs
add
rolb
add
and
pop
sarb
mov
testl
mov
push
push
mov
sbb
aas
mov
cs
or
mov
push
jno
pop
scas
leave
pop
lds
ss
pushf
dec
pop
push
test
jl
ss
push
cmpb
in
add
adc
je
js
jecxz
lds
push
insl
dec
pop
cmp
insb
cmp
loope
pop
mov
add
mov
inc
or
and
mov
dec
sbb
in
std
inc
lock
std
lds
and
and
or
mov
in
and
cld
mov
xchg
mov
outsb
xor
mov
les
inc
cmp
lods
call
cmp
dec
xor
shll
ret
rcrb
xchg
mov
hlt
scas
fbstp
dec
push
push
out
iret
push
ss
cld
cwtl
lcall
div
adc
inc
push
movsl
mov
ret
andb
jbe
adc
xchg
and
stc
push
outsb
lret
xchg
cmpsb
and
sub
popf
negb
and
or
fs
mov
or
jnp
mov
push
lret
imul
int3
add
sbb
insl
mov
inc
icebp
mov
push
insb
mov
add
add
sahf
jae
mov
xchg
fnstsw
jbe
xchg
pop
mov
adc
mov
leave
mov
xchg
xchg
cmc
sti
push
or
xor
lret
jb
push
sarl
inc
movsb
cmc
and
cmp
jmp
dec
xchg
inc
test
cmp
rcrb
fldl
and
sbb
xchg
inc
repz
addl
xchg
mov
cmpb
adc
stos
sbb
mov
and
std
aam
pop
pop
test
cmp
push
mov
mov
int3
in
or
rorl
loope
out
jb
xchg
and
loopne
js
push
pop
mov
ja
loopne
xor
sub
fs
rcll
shrb
adc
sti
aam
popa
push
popf
gs
adc
jmp
xor
cmp
cmp
or
dec
shrl
scas
or
cld
aas
in
mov
add
sbb
lret
nop
dec
sahf
nop
jbe
push
push
jp
daa
pop
addl
mov
lods
sub
out
addl
jno
outsb
xchg
jb
arpl
les
and
sub
add
pop
in
sbb
inc
mov
imulb
cld
in
stc
mov
std
pop
cmpsb
cmp
mov
add
popa
movsw
std
data16
cmpsb
test
sbb
push
ds
mov
cwtl
fmuls
push
jae
mov
movsb
add
pop
js
mov
dec
xchg
sub
movsb
iret
popf
sub
pop
movsb
dec
mov
fdivrl
lcall
lods
xorl
cmpsb
push
add
or
icebp
xchg
int
or
fld
mov
jge
decl
push
popa
sub
adc
negl
push
es
lock
frstor
push
mov
pop
imul
repz
lds
not
in
imul
loopne
aam
lahf
leave
xor
inc
inc
call
call
mov
hlt
decl
fnstsw
movsl
ds
fcoml
mov
and
xor
das
fdivrs
jnp
popf
popf
outsl
data16
imulb
inc
cmc
jb
or
movsl
mov
shrb
jnp
lahf
xlat
imul
enter
adc
arpl
outsl
mov
addb
pop
lea
movsl
mov
lret
pop
jg
pop
lret
or
in
push
mov
insb
xor
lahf
bound
stos
lods
xorb
iret
inc
xchg
jae
push
xor
in
shrb
fimuls
xor
ja
aam
sub
mov
inc
movsb
ljmp
leave
movsl
mov
xchg
inc
call
xor
leave
stc
pushf
scas
xchg
repnz
pop
pop
fnsave
jne
popa
lds
pushf
std
mov
loop
dec
call
stc
cmp
stc
push
jl
outsb
pop
aad
fmul
pop
add
scas
mov
jbe
iret
call
adc
leave
and
insl
dec
pop
lcall
mov
push
sub
outsl
add
mov
test
addr16
push
scas
out
dec
cmc
jmp
push
lods
mov
adcl
out
inc
mov
loop
xor
push
adc
push
jo
outsl
pushf
call
inc
xchg
sti
test
push
pop
adc
pop
fcomps
les
and
lea
xchg
mov
push
sbb
mov
clc
jno
or
out
movsb
dec
hlt
add
clc
adc
loopne
fldcw
xor
cmp
ja
jp
dec
fcmovbe
int3
loopne
ret
mov
jae
add
andl
lret
js
add
mov
ret
jp
fs
cwtl
mov
sbb
test
inc
das
ljmp
fdivs
mov
inc
aam
pop
loopne
add
cmp
jmp
push
repnz
and
mov
mov
lahf
mov
mov
adc
sub
js
mov
stc
sbb
push
icebp
sbb
add
int3
jns
mov
ret
sub
shl
fdivs
cli
add
cmp
loop
add
stc
pop
xor
mov
in
push
loopne
outsl
ret
test
sub
xchg
daa
mov
mov
mov
mov
aad
mov
lods
sub
jne
add
and
mov
dec
xchg
cmc
pop
stc
mov
icebp
shl
pusha
sub
fdivr
lea
es
xor
repnz
ss
pop
iret
rolb
or
nop
mov
in
lock
push
cmp
in
add
cmp
cmp
mov
mov
aas
cmp
mov
xor
dec
insl
dec
pop
popa
mov
inc
push
mov
ret
cs
imul
es
hlt
filds
lods
out
pusha
or
in
xchg
xor
pop
stos
inc
push
jae
cmp
ficoms
xchg
add
and
jnp
add
shl
dec
iret
or
sbb
repz
pop
popa
gs
lds
repnz
insl
jp
cs
ja
add
loope
mov
shr
mov
push
test
movsl
in
xor
pop
int
add
shll
js
fwait
push
jae
fbld
in
lahf
test
test
mov
sub
mov
les
cmp
lea
inc
pop
jp
fldl2e
mov
movsl
mov
jb
push
or
loop
mov
mov
xchg
into
jbe
int
in
lods
jmp
inc
nop
fidivl
cmpl
mov
sbb
stos
aaa
sbb
shr
fldl
sbb
in
mov
out
adc
inc
movb
rolb
out
jp
adc
pushf
dec
shrl
and
jmp
loop
pop
out
sub
movsl
int3
adc
dec
and
mov
sbb
pop
incb
stos
adcl
stos
leave
cmp
mov
fs
xor
dec
push
or
jecxz
xchg
cmp
scas
mov
test
insb
out
dec
inc
push
les
fldcw
rcrb
mov
fcomp
jns
flds
push
std
aad
cmpsl
mov
hlt
xchg
stos
cmp
sbbb
nop
aaa
sub
cmc
push
mov
cmp
test
ret
jmp
cmpsl
ja
stos
adc
mov
fmul
loope
jg
mov
sbb
adc
shl
fisubrs
jo
and
scas
jmp
mov
lods
popa
insl
outsb
out
pop
jb
int
pop
push
nop
test
add
jecxz
pop
insb
repz
jg
add
mov
mov
pop
adc
and
movsl
mov
mov
flds
jl
aas
adc
xorb
or
pop
sbb
fcmovnu
dec
rolb
in
xor
push
andb
notl
pop
stos
xchg
mov
add
xchg
ja
int
in
inc
in
push
hlt
fsubrp
nop
lret
outsb
bound
sbb
icebp
pop
shlb
ret
push
je
pushf
dec
sub
cld
dec
mov
fcomi
stos
xchg
jno
movsl
in
je
ja
add
aaa
in
or
xor
out
imul
lods
mov
sbb
idiv
nop
and
fdivl
inc
mov
jl
es
lock
int
inc
add
mov
mov
xor
sbb
jo
mov
dec
cmp
mov
sbb
add
je
push
outsl
sbb
lods
xchg
lds
adc
inc
not
ret
outsb
fs
or
stos
call
ljmp
aaa
xor
mov
xor
jl
jge
loopne
sub
and
not
out
aas
in
dec
xor
addr16
inc
aas
dec
jp
in
addr16
ljmp
and
push
jle
fmuls
ds
jle
sub
and
sbb
fiaddl
or
and
mov
mov
sbb
lods
xlat
pop
mull
push
in
xchg
inc
jne
xor
or
add
in
fs
stos
adc
and
fmuls
movsl
mov
movsb
mov
add
sbb
fwait
addr16
ret
int3
or
in
fidivs
jmp
mov
xchg
shlb
mov
arpl
int
jb
loope
add
shr
sbb
ret
cmp
aas
jae
push
cwtl
int3
jns
cmpsl
call
xor
xlat
test
ret
pop
or
fprem1
sbb
sub
mov
sub
jle
fs
scas
pop
lea
jecxz
lds
addr16
push
cmp
mov
sbb
mov
xor
push
shrb
jmp
push
and
inc
fnstsw
mov
mov
test
mov
and
mov
ret
add
mov
call
out
rorl
out
or
cltd
sub
sub
enter
fnstsw
out
popf
and
in
dec
notl
stc
xor
xchg
shlb
lret
xchg
adc
movsl
sub
movsb
ds
mov
popf
lcall
popa
jo
icebp
or
mov
popf
test
enter
xor
dec
fisubrs
pop
jb
lcall
add
call
out
push
fnstcw
mov
mov
add
cld
nop
ja
in
cmp
out
jge
xchg
push
addb
xor
int
pop
scas
mov
rorl
repnz
mov
lahf
stc
push
sub
lret
subl
or
outsl
repz
in
fdivr
dec
ljmp
add
lahf
imul
or
add
inc
jne
xor
mov
int3
sbb
nop
nop
popf
mov
pushl
mov
adc
mov
mov
addl
packssdw
jnp
xchg
dec
xor
faddp
dec
push
jle
test
cmp
xor
loopne
add
or
sbb
adc
rep
pusha
mov
xor
mov
add
xchg
es
jecxz
pop
sub
cmp
xchg
ret
js
push
add
xchg
push
jo
scas
pop
les
jbe
test
loope
cmc
mov
xor
xchg
call
je
pop
adc
fmull
jp
mov
mov
sbb
xchg
outsl
imul
mov
ljmp
movsl
sarb
push
and
je
mov
and
jmp
adc
sbb
outsl
add
sbb
cld
mov
mov
adc
enter
das
inc
imull
das
aaa
loop
es
test
adc
incb
lock
frstor
sbb
test
mov
mov
ret
out
std
dec
aad
inc
test
ds
xchg
xor
dec
popf
rcr
lods
mov
sbb
xchg
jae
addr16
sub
dec
xchg
and
in
jmp
rcrb
lods
clc
rorl
xchg
xor
or
and
mov
call
bound
sub
aas
or
shrb
cmp
inc
pop
rorb
pusha
jp
inc
push
mov
in
jmp
fstpl
mov
ljmp
jne
dec
sbb
or
push
xchg
pop
xchg
inc
mov
xor
fwait
mov
push
in
fwait
sbb
test
jl
push
iret
inc
mov
pop
xor
push
mov
ja
lret
out
xchg
scas
scas
loope
std
js
xchg
pop
inc
sub
lock
test
push
mov
sub
imul
out
adc
inc
movsl
out
adc
pop
mov
pop
mov
shl
int3
popf
pop
ljmp
cli
mov
lahf
repz
sub
push
xchg
clc
dec
out
jmp
jno
dec
add
ret
cli
stos
call
pop
fs
inc
in
push
std
or
inc
add
aas
cli
or
out
cmp
inc
mov
insb
mov
adc
test
pop
cmp
mov
pop
mov
mov
sbb
add
sbb
and
test
xchg
sti
jmp
xor
adc
push
pop
jno
out
jp
shlb
sbb
xchg
add
push
jb
and
cmp
adc
pop
and
mov
gs
mov
dec
jp
inc
pop
push
cmp
jle
pop
xchg
dec
loopne
fcoml
sbb
fucomp
aad
inc
push
sbb
ja
fildll
xor
call
call
push
ficompl
lret
pop
mov
rcrl
push
int3
inc
mov
pop
stc
mov
aad
pop
sub
mov
sbbb
mov
je
mov
negb
lock
or
mov
inc
jns
xchg
jae
mov
call
mov
out
mov
xchg
dec
jl
int3
cmp
jp
adc
push
mov
pop
xchg
scas
push
sub
cmpsb
jle
cmp
lock
mov
int
cs
std
lahf
fisubrs
mov
dec
out
stc
mov
push
popa
lcall
jne
outsl
mov
aaa
fisttpll
push
and
nop
das
incb
sub
daa
iret
f2xm1
add
lods
inc
fwait
sbb
lret
js
loop
xchg
mov
sbb
and
pop
dec
pop
dec
or
insb
pusha
push
insl
mov
or
fwait
mov
mov
cmpsl
stc
je
dec
pop
imul
mov
pusha
mov
adcb
push
outsl
sub
mov
mov
orb
les
std
out
adc
dec
jnp
lea
lret
pop
iret
or
int
adcb
popl
mov
adc
iret
or
xchg
cmp
in
jg
pop
xor
dec
add
movsl
in
pop
adc
mov
push
scas
int
push
sub
add
out
sbb
lods
pop
fisubrs
lds
ljmp
adc
cmp
fwait
add
lock
sbb
pop
push
cwtl
call
movb
pop
aaa
sub
aad
jecxz
call
test
and
cmp
hlt
add
loopne
add
or
jl
repz
add
inc
imul
fnsave
ficoms
ja
loope
jle
repnz
mov
jl
test
mov
mov
lret
dec
xchg
pop
mov
test
xor
or
push
roll
insl
and
xchg
dec
addr16
lret
mov
inc
fsubrs
inc
or
push
icebp
pop
sub
into
xchg
daa
sbb
test
lea
jae
icebp
jecxz
dec
or
mov
and
std
jo
std
inc
out
and
sbb
jecxz
addr16
push
push
imul
fstp
sub
les
cmp
mov
punpcklbw
addl
shrb
mov
sti
xchg
or
mov
cmpsb
jb
stc
mov
into
adc
out
aad
pop
subb
imul
lea
sbb
imul
jl
mov
ds
in
inc
dec
dec
adcb
imul
xchg
pop
sbb
subl
jp
pop
sbb
push
jne
out
mov
outsb
push
add
insb
aas
mov
pop
lock
test
inc
clc
sti
mov
fs
sbb
adc
cld
pop
stc
aad
lea
sbb
subb
pop
mov
jae
mov
xor
jg
lret
jo
arpl
mov
ds
sub
sarb
or
lods
cmc
push
adc
mov
and
scas
or
movsb
dec
aad
cmp
push
xor
cmpsb
and
cmpsl
cmpsl
fxtract
push
cmpl
and
rorl
stos
cwtl
mov
mov
mov
daa
pop
xor
xor
push
jbe
sub
fsts
ret
leave
inc
xor
sub
and
leave
in
orb
jae
mov
test
inc
sti
pushw
insl
sbb
cltd
cmp
stos
pand
xchg
mov
shll
cmpsl
and
out
mov
xlat
fistpl
test
popa
jnp
xchg
push
fucomip
hlt
pop
mov
out
mov
mov
mov
add
or
mov
scas
leave
cmp
xchg
pop
clc
inc
push
idivl
mov
mov
dec
jg
or
mov
inc
adc
testb
dec
lcall
sti
xor
add
xchg
jmp
cmpsl
cmp
mov
ljmp
and
ljmp
les
inc
push
pop
inc
mov
push
mov
mov
cmc
es
mov
jo
or
pop
stos
rcrl
mov
pop
mov
mov
pop
cli
mov
push
pop
gs
push
jne
les
aam
flds
cmc
leave
dec
jns
mov
mov
sbb
test
popf
sarl
out
loopne
mov
inc
pop
movsb
cld
imul
xchg
sbb
int3
inc
cmpsl
clc
xor
and
mov
mov
mov
sahf
mov
into
pusha
mov
shrl
hlt
mov
inc
pop
jo
jp
push
xchg
sbb
mov
xchg
ds
in
xchg
out
sub
int
jbe
psubw
cmp
xor
hlt
mov
mov
cmp
aad
aaa
cwtl
insl
das
jae
jl
js
ret
mov
dec
or
stc
les
jns
dec
mov
lods
or
push
dec
push
and
out
dec
cmp
out
sbb
and
mov
cltd
addr16
shl
sub
or
ljmp
xchg
inc
sbb
jbe
test
in
dec
lahf
or
jp
jae
push
pop
mov
inc
fs
cli
nop
dec
mov
pop
clc
xchg
filds
daa
in
fldl
pop
je
push
outsl
lds
add
mov
dec
scas
xchg
sub
xchg
idivb
inc
lret
and
jae
std
and
dec
ljmp
test
cmp
jmp
repnz
mov
or
jnp
sbb
imul
aas
cs
cmpsl
out
push
cli
push
sbb
dec
inc
lock
sub
inc
hlt
scas
in
sbbb
cmp
andl
mov
mov
push
iret
jle
ljmp
push
adc
aam
lea
sbb
lea
pop
jb
out
addr16
fs
mov
mov
mov
aaa
imul
push
sub
and
cmp
test
and
outsl
cwtl
loope
mov
sbb
xchg
sub
shrl
xor
push
push
pop
jnp
push
sbb
xchg
inc
adc
add
add
movsl
cli
cmc
lock
pop
add
mov
push
push
addb
push
rcll
dec
shl
orl
sbb
out
pop
sbb
jbe
mov
add
f2xm1
icebp
dec
mov
mov
dec
mov
jmp
jns
loop
rclb
jecxz
jecxz
pop
xchg
add
dec
or
mov
xchg
push
out
clc
out
sbb
repnz
mov
ljmp
into
pop
int
aas
ljmp
jle
adc
js
in
imul
les
mov
mov
adc
fidivrs
pushf
mov
ret
popf
jns
pushf
cmp
repz
int
imull
inc
stos
pop
mov
and
std
mov
xchg
cmc
pop
pop
xchg
lods
pop
fidivl
jns
stos
xchg
xchg
xchg
outsb
mov
xor
loope
hlt
inc
movsl
and
add
jmp
lock
pop
lea
xchg
shlb
js
inc
mov
mov
movsl
jb
insl
lret
pop
rol
lret
push
pop
sarl
lock
pushl
cmp
fsubs
mov
pop
mov
pop
roll
mov
mov
pop
stos
pop
add
cmp
jbe
push
mov
xor
int
repz
or
jo
xchg
push
test
push
mov
mov
std
loopne,pt
addb
add
xor
push
dec
arpl
aam
repz
push
adc
push
mov
les
aas
dec
mov
mov
lock
cld
or
gs
push
rorb
pop
dec
mov
movsb
push
dec
push
idivb
mov
nop
cmp
popa
cmp
je
fwait
xor
fcmovnb
adc
leave
pop
clc
aad
fcmovb
jb
stos
shr
pop
dec
xlat
pop
lock
out
leave
xor
and
es
adc
dec
fstl
ret
inc
insb
ror
add
lea
pop
std
cmp
std
add
leave
arpl
and
xchg
cmpsl
subb
sbb
lret
loope
in
xchg
mov
test
rcrb
bnd
adc
mov
push
and
std
jg
sahf
nop
test
xchg
sub
movsl
push
shrb
push
mov
mov
scas
or
outsb
out
repz
sbb
lcall
es
jmp
mov
sbb
push
ljmp
stos
jb
cwtl
stos
insl
jns
mov
mov
int3
xor
cbtw
imulb
shl
je
ss
jo
hlt
push
nop
mov
mov
int
add
or
inc
mov
sub
shr
jl
divb
pop
xor
lds
int
cmp
or
xor
xchg
and
in
sahf
add
pop
jmp
adc
cs
xchg
int3
pop
jb
out
movsb
leave
fisubl
out
arpl
fdivs
ljmp
xchg
inc
ljmp
jmp
xor
sbb
inc
pop
adc
test
dec
outsl
cmp
int3
imul
mov
push
mov
sbb
add
mov
push
jno
ffree
push
call
sarl
inc
jl
mov
sbb
aam
in
cmp
inc
int3
js
loopne
call
push
cmp
outsb
cmp
and
xchg
nop
mov
inc
ja
xchg
sarl
sbb
shlb
je
sbb
add
mov
shl
inc
xchg
and
aad
icebp
inc
dec
add
dec
jno
cmpsb
ja
mov
cmpxchg
xor
jmp
test
stc
inc
and
repnz
stc
cwtl
les
and
cmpsl
ss
ljmp
ja
pop
adc
in
mov
test
cmp
je
sarl
popf
cmpsl
cmpsb
mov
dec
aas
test
xchg
mov
dec
cmp
mov
inc
subl
inc
jne
jecxz
movsl
fcoml
out
sub
or
inc
sub
push
repz
and
decb
push
lods
pop
push
adc
xor
ret
data16
mov
xor
jle
ficomps
or
stos
and
sbb
jmp
pusha
cmc
enter
add
jb
lret
cli
outsl
jns
ds
push
adc
dec
push
adc
gs
adc
dec
in
mov
fldt
or
dec
sahf
xchg
je
insb
daa
inc
pop
mov
mov
xor
std
pop
into
xchg
nop
lret
mov
xchg
fdivrl
addr16
and
push
ja
repnz
xchg
lods
lret
xchg
std
bound
mov
adc
test
xchg
fs
ret
pop
lds
sbb
dec
xor
sub
fucompp
mov
and
pop
mov
or
cltd
sarb
shr
mov
cmc
cmp
jno
jecxz
adc
lcall
lret
in
pop
out
aas
orb
loop
add
cmp
nop
sar
xor
js
add
dec
add
fildll
in
mov
mov
into
cmpsl
xchg
or
sub
inc
and
iret
inc
lret
in
inc
inc
inc
cmpl
test
sub
aam
dec
mov
mov
and
add
mov
popf
xorb
std
sbb
pop
fsubl
sti
and
xor
lret
lahf
cmp
fistl
sbb
jns
movsl
inc
andl
mov
mov
xchg
js
out
cmp
insb
adc
add
popa
dec
mov
call
jo
jne
mov
in
cmpb
repz
jl
hlt
hlt
int
mov
fisubrl
cmp
inc
lahf
ret
pop
inc
inc
in
js
movntps
inc
in
test
aam
xchg
mov
xchg
ljmp
outsb
xor
push
lret
and
pop
and
subb
movsb
aaa
dec
test
cmp
xor
testb
cli
xchg
add
add
sbb
out
in
std
pop
or
outsl
sbb
adc
movsb
cs
jae
jne
mov
loope
adc
sahf
scas
xlat
int
sbb
out
test
jb
sbb
insl
xorb
ljmp
pop
jns
test
sbb
jne
mov
imul
mov
outsb
pop
dec
add
pop
pop
lds
sub
out
out
fadds
or
mov
sbb
mov
push
and
lock
push
mov
sbb
stc
mov
out
lcall
enter
mov
push
sbb
fdivrs
or
or
shlb
push
lods
aad
std
xchg
in
mov
icebp
add
adc
cmp
cmpl
mov
or
adc
ficomps
jb
sub
out
pop
pop
enter
add
mov
les
push
or
mov
int3
ret
mov
lods
addl
les
jmp
jo
adc
xchg
push
add
cs
and
aam
or
lods
push
movsl
xchg
mov
or
cmp
popa
xor
fiadds
fnstsw
mov
inc
pop
add
and
xchg
xlat
adc
adc
dec
ljmp
pop
clc
les
sbb
or
inc
jl
xchg
data16
fs
lret
shlb
or
dec
stos
jnp
rol
jno
shlb
push
testl
pushf
push
jns
into
dec
mov
or
xor
repnz
ss
xor
sub
icebp
in
cmp
xlat
mov
lahf
icebp
mov
pop
enter
mov
loopne
mov
iret
enter
xchg
adc
into
pop
sub
test
pop
sarl
pop
das
cmp
ss
pushf
mov
mov
sti
sahf
stos
mov
lods
je
jb
or
xor
mov
pop
repz
push
mov
xor
push
pop
fstpt
lea
je
xchg
and
lcall
adc
pusha
sub
in
pop
inc
push
jo
pop
cmpsb
cwtl
repz
lahf
out
pop
and
nop
jge
cmp
sub
sub
mov
rclb
cld
pusha
sarl
jb
cli
xchg
sti
push
mov
pop
push
xor
push
jno
movsb
subl
adc
stc
xor
push
idivl
adc
xchg
adc
ret
add
test
sub
jne
in
lret
dec
adc
test
mov
or
inc
leave
arpl
add
test
cmpsb
pushf
push
ret
ja
mov
rol
cs
xchg
and
sub
es
pushf
mov
sar
imul
mov
inc
jo
push
and
out
test
adc
and
or
sahf
jne
enter
into
push
inc
add
lcall
pop
push
popa
adc
push
std
test
int3
xor
pop
sub
sub
inc
inc
or
xor
sbb
std
mov
sub
xchg
fcompl
mov
popl
fisubl
ror
sbb
movsl
das
les
repnz
std
lret
and
ja
adc
xor
lahf
data16
pushl
push
or
sbb
movsb
outsb
testb
mov
jb
xchg
cmp
sub
shl
or
loop
in
lds
enter
mov
imul
scas
insl
mov
jg
mov
xchg
jo
mov
icebp
mov
jp
jns
loop
int
or
lds
push
inc
mov
push
popa
sbb
xor
ret
inc
hlt
jecxz
pop
ss
mov
daa
stc
nop
xchg
push
cmp
sub
jbe
insl
mov
jo
out
ror
outsl
lds
xor
bound
pop
or
add
push
shr
sbb
js
cmc
xor
adc
ret
out
mov
sti
and
cmpsl
push
xor
inc
adc
pop
pop
push
popf
mov
nop
loope
mov
stos
test
sti
or
loop
test
push
test
adc
add
into
sub
or
rcrl
fcomps
fbstp
inc
mov
pop
push
hlt
push
and
cmp
push
sbb
sbb
loop
loopne
call
xor
sub
scas
adc
xchg
pushf
push
repz
nop
push
sqrtps
jns
mov
add
cli
and
jo
ret
lods
dec
dec
xchg
sahf
repnz
mov
add
dec
inc
push
test
mov
movsl
imul
inc
das
mov
jmp
xchg
mov
fmul
or
inc
ret
cli
ret
ret
add
pushf
insb
xchg
repz
add
js
jl
add
or
dec
cwtl
outsl
icebp
insb
push
and
cmp
or
jge
jmp
adc
cmpsl
or
sub
mov
dec
dec
jae
test
repz
in
jno
mov
sub
xchg
in
sub
test
jp
movsb
dec
adc
rcll
mov
in
pop
cmp
xor
in
into
cs
sub
ja
dec
ds
pop
or
lods
daa
pop
mov
sub
incl
adc
das
sbb
adc
sti
in
pushf
or
sbb
add
cmp
cld
outsl
jo
pop
mov
xor
leave
stos
into
sahf
mov
pop
pop
js
shll
push
xchg
outsb
jle
add
jne
movsl
sbb
cld
adc
dec
mov
roll
cmp
xor
xor
push
push
lcall
add
push
lds
ret
mov
ljmp
sub
push
cwtl
inc
shll
clc
ror
inc
mov
push
sub
js
cmpsb
outsb
mov
es
lods
imul
lcall
call
repnz
mov
lret
push
adc
dec
jmp
sbb
xor
fs
cltd
es
lods
push
aam
or
cmp
outsb
and
movsl
pop
dec
xchg
vmread
es
addr16
push
das
rclb
sub
dec
repnz
aaa
imul
int3
test
jmp
fldt
outsb
mov
add
fcomip
out
xorb
cltd
adc
xchg
cmpsl
add
push
jl
fcom
dec
and
dec
mov
in
jmp
pop
xchg
arpl
testl
js
jge
pop
pop
repnz
dec
leave
stos
jmp
pop
hlt
rorb
fs
mov
lcall
cltd
jns
xor
in
lds
push
test
bound
ror
ljmp
inc
pop
aam
mov
dec
cmp
fdiv
pusha
mov
push
repz
lcall
in
jmp
je
sbb
fwait
movsb
imulb
mov
in
mov
jl
inc
xor
jno
sub
xchg
negl
sbb
mov
jno
fistpll
mov
mov
adcb
mov
push
push
jecxz
movsl
push
cmp
mov
add
cltd
cmp
les
lds
cli
fst
cmp
inc
or
inc
xorb
cmp
inc
adc
mov
sub
mov
jbe
daa
jge
out
xchg
cmp
mov
xchg
mov
add
xor
andb
jb
ds
arpl
cmp
fidivrl
jns
rorl
js
mov
arpl
cli
inc
adc
push
mov
fsubl
adc
mov
frstor
daa
out
pop
int
sbb
push
mov
imul
add
insl
cwtl
cmp
mov
mov
outsl
repnz
into
fwait
sbb
mov
sti
mov
cmc
imul
repnz
cwtl
daa
lcall
cwtl
mov
fisubl
xor
lods
jmp
bound
xlat
cmp
add
test
roll
add
add
cmp
test
fwait
aaa
xchg
mov
clc
jno
es
call
js
ret
xchg
mov
cwtl
push
sbb
cwtl
fsubr
sub
out
sbb
sbb
sbb
bound
shlb
jns
mov
sbb
dec
call
sbb
mov
movsl
dec
aaa
sar
jge
jns
int
cltd
push
shrb
dec
inc
inc
fldl
test
sahf
fidivs
mov
cmp
push
xchg
adc
shll
fldl
repnz
sbb
aas
mov
fld
out
jl
rol
clc
in
lea
inc
test
in
lods
outsl
or
mov
pop
fsubp
cmpsl
dec
xor
mov
sbb
fnstenv
and
add
popa
ds
sbb
push
ss
addr16
fs
popa
or
or
xchg
inc
push
and
mov
insl
xor
cmp
mov
cmp
mov
cli
aad
sbb
mov
insb
sub
insl
jbe
jge
clc
jno
insb
add
jae
jns
out
lods
pop
xchg
cmp
cmpsl
mov
enter
adc
pop
mov
inc
pushf
add
sub
and
and
push
mov
scas
ja
movsl
push
pop
mov
xor
testb
mov
ja
pop
popa
dec
or
scas
sbb
xor
xor
mov
sbb
repnz
jno
ret
aaa
add
fimuls
jo
push
inc
lret
push
repnz
lea
lods
adc
insl
mov
scas
scas
sbb
lea
out
dec
fiadds
xchg
push
sar
xchg
add
inc
ror
in
or
inc
pop
popa
push
jl
int3
cmp
movsb
fs
and
sbbl
cld
add
sbb
out
pop
cmp
xor
mov
jmp
pop
cmc
inc
outsb
lock
call
mov
movsb
loopne
xchg
and
xor
pop
add
fisttpll
pop
push
mov
inc
mov
test
dec
add
leave
cli
ret
xchg
call
ja
or
sub
movsl
int
sub
stos
lds
push
in
addr16
adc
pop
rclb
lret
lock
mov
adc
in
mov
add
mov
jg
mov
int3
inc
cmp
mov
adc
faddl
in
outsb
stc
pop
mov
inc
push
lahf
and
js
pushf
fwait
inc
call
je
rcrb
xor
push
int3
stos
dec
pop
cs
inc
sub
ret
mov
sbbl
bound
mov
loopne
jg
push
mov
stos
in
mov
arpl
test
mov
out
inc
shrl
sub
mov
iret
popa
push
xor
ss
rcr
or
in
adc
sub
sar
and
mov
stc
push
sbb
insb
lock
push
adc
aam
mov
enter
call
in
lods
rcrl
pusha
mov
notb
mov
inc
dec
repnz
sbb
movb
fnstenv
aas
arpl
addr16
push
xchg
add
fisttpll
jo
lea
sbb
xchg
test
test
pop
cltd
push
fistps
fistpl
scas
dec
sub
call
into
inc
lcall
mov
fcomip
sub
into
jecxz
orb
and
lds
call
inc
jb
sbb
loop
xchg
and
or
xchg
repnz
cltd
or
repz
xor
push
inc
popa
push
xchg
cmc
dec
arpl
in
setne
in
push
jbe
add
jmp
daa
xor
adc
adc
jg
push
push
rorl
and
lahf
xlat
push
push
sbb
lcall
dec
mov
idivb
pop
lds
xor
sub
aas
in
subb
cmp
popf
loop
jl
into
scas
sub
loope
lcall
pop
inc
fidivrs
cmpxchg
mov
int
ljmp
inc
lea
push
sahf
testb
dec
add
mov
push
jl
in
xchg
shll
and
imul
dec
out
lock
mov
fnstcw
out
mov
cmp
pop
add
push
daa
in
inc
and
outsl
aad
es
add
ud0
mov
rorb
shlb
jl
bnd
xchg
add
lock
sbb
jecxz
push
lods
pop
vaddsubpd
pusha
add
fs
xchg
ficoms
xlat
mov
mov
adc
repz
xchg
jns
inc
std
xchg
lret
add
repnz
insl
adc
out
aas
ficomps
idiv
fwait
jp
push
sbb
cmp
xchg
cmc
cmp
hlt
popl
mov
xor
add
iret
pusha
mov
loop
xchg
mov
xor
xlat
adc
mov
pushf
js
jne
adc
pop
mov
and
adc
call
mov
cmp
adc
idiv
je
push
fiaddl
jb
mov
fdivrp
pop
xor
or
adc
add
adc
pop
loop
fs
repnz
mov
pop
clc
test
lea
jge
aad
in
aaa
add
adc
subl
repnz
pop
jge
push
inc
ret
pop
inc
mov
js
mov
fdivrl
mov
cmp
lret
in
fldcw
mov
adc
js
shrl
repnz
xchg
pop
pop
ret
divl
dec
pop
cmpb
lods
mov
pop
test
jecxz
lods
push
stc
pop
out
jp
jg
push
pop
andl
pushf
mov
push
pop
subb
jg
add
fistpl
rorl
jb,pt
mov
leave
and
mov
out
mov
jmp
pop
adc
xlat
lods
adc
pop
mov
cmp
imul
xor
iret
mov
imul
mov
stc
pop
jl
fs
in
cld
push
or
mov
or
push
or
and
bnd
inc
repz
dec
and
pop
sub
test
adc
xchg
jo
mov
out
adc
inc
mov
jge
call
fcompl
and
incl
sub
lods
xor
shrb
ficoml
aaa
xor
lahf
rep
fdivs
sbb
cmp
jmp
mov
rorl
pop
lods
les
gs
mov
rcrl
pop
xor
xchg
jle
data16
xchg
sub
loopne
push
mov
inc
ja
xchg
out
jmp
sbb
sti
lock
std
pushf
out
popa
xchg
insb
pop
out
dec
jg
negb
js
repz
inc
xchg
jbe
ret
push
push
jb
pop
xor
lea
adc
loop
iret
inc
call
pusha
inc
lds
leave
mov
das
mov
jecxz
sahf
nop
jecxz
and
sbb
pop
jae
mov
inc
out
out
xor
pop
fcoms
pushf
insb
pop
sahf
jo
imul
cmpsl
fwait
and
adc
mov
pop
xchg
mov
nop
jbe
xor
mov
or
sti
push
test
sahf
xchg
mov
into
jl
aam
out
push
loopne
enter
sahf
push
mov
out
or
adc
stos
fst
enter
add
ret
xor
jne
test
in
inc
arpl
add
push
jns
jl
insb
xchg
imul
pop
add
cmp
push
idivb
sbb
das
push
jmp
jmp
aad
mov
in
inc
cld
push
int
inc
int3
mov
or
enter
iret
arpl
in
xchg
jb
xchg
lret
imul
fcoml
xchg
push
xor
lret
lret
cmp
pop
call
cld
inc
in
dec
lcall
jecxz
or
sahf
lret
cld
add
loop
jno
cmp
inc
fcompl
rorl
fadds
add
mov
xchg
xor
cli
push
dec
in
cmp
push
adcb
imul
enter
aas
mov
xchg
jmp
pop
stc
sbb
mov
pop
or
jo
stc
xchg
sti
cmp
out
xchg
inc
push
pusha
fld
mov
std
push
xchg
xchg
rcrb
repz
push
mov
dec
in
sbb
dec
ja
fsubrs
sub
pop
lcall
int3
scas
nop
js
push
xlat
inc
aas
and
xor
push
outsb
test
and
frstor
mov
xor
push
insb
test
jne
test
ffree
nop
scas
cli
or
sub
lcall
into
notl
fistpl
cmp
sbb
lds
cltd
dec
jg
cmpb
jmp
push
fcoms
push
pop
into
mov
add
and
add
adcl
dec
jne
test
insb
ret
loope
pop
mov
mov
jns
mov
popf
xor
leave
xor
mov
or
bound
into
xchg
in
mov
adc
arpl
enter
loope,pt
inc
dec
lock
sahf
scas
sub
mov
add
inc
fwait
in
inc
xchg
add
jns
mov
cld
and
leave
add
sbb
xchg
ret
lds
ret
inc
out
in
xor
push
call
dec
insl
loopne
mov
xchg
lds
mov
lcall
scas
push
sub
cs
push
cli
cmp
adc
xchg
orl
inc
jle
loop
inc
rorb
push
xchg
push
push
repz
xlat
push
xchg
sub
jae
imul
jge
test
mov
imul
jmp
push
cwtl
aad
nop
add
jge
andb
sbb
pop
popf
pop
add
mov
ret
push
dec
and
std
mov
cmp
mov
andb
loop
xchg
dec
mov
sti
loopne
sbbb
es
pop
fldenv
jecxz
arpl
adc
lcall
call
mov
and
push
cli
test
push
scas
scas
xchg
ss
call
dec
lret
jo
sub
add
xchg
in
jle
fistpll
sbb
inc
xor
ljmp
add
loopne
sbb
stos
stos
sahf
loope
jne
fwait
mov
pushf
push
xchg
xchg
shl
fcoml
pop
mov
xchg
cmp
stos
es
pop
leave
add
mov
lcall
daa
inc
sbb
mov
or
push
cmp
dec
out
sub
dec
jb
ja
call
out
jg
mov
adc
sub
sahf
cvtpi2ps
int3
lock
iret
pop
fstpt
popf
and
pop
and
out
jo
or
pop
jg
sbbl
jne
lods
aam
cld
push
mov
negb
ss
jbe
out
lcall
rclb
add
add
negb
push
out
out
inc
pusha
pop
imul
xor
cmpsl
inc
sub
xor
jge
jl
aam
orb
pop
je
rcrb
call
xor
jge
mov
mov
incb
les
sar
jp
mov
pushf
pop
jp
addr16
dec
icebp
dec
jg
int3
test
stos
inc
roll
push
sub
adc
mov
or
lahf
mov
int3
mov
imul
fidivs
lock
mov
ror
imul
mov
roll
mov
in
ss
lret
shl
flds
lea
pop
push
arpl
out
in
rcl
adc
scas
adc
cmp
jb
inc
mov
cmp
jo,pt
stos
inc
aas
sahf
jne
mov
cmp
lods
mov
push
or
jmp
out
movsb
cmp
daa
shll
add
push
dec
daa
std
dec
jae
ret
mov
mov
push
jg
mov
lods
push
jae
add
jecxz
in
aas
shl
xor
mov
xor
and
insb
imul
mov
mov
add
push
and
in
dec
loopne
add
stc
shlb
mov
lds
daa
or
inc
push
inc
jp
pop
mov
scas
push
out
and
icebp
sbb
lods
popa
push
hlt
mov
repnz
loop
push
dec
imul
in
fildl
dec
and
mov
jnp
jae
dec
mov
dec
or
push
repnz
mov
lret
inc
lods
aaa
test
xchg
jnp
adc
and
stc
popa
dec
gs
push
xchg
call
das
sti
mov
popl
aas
cmp
sahf
mov
mov
jmp
outsb
cmp
stos
ss
mov
lret
pop
inc
inc
adc
mov
lahf
jns
mov
cld
lock
cmp
stos
scas
xor
xor
jae
sbb
mov
jg
mov
mov
adcl
sbb
xor
or
nop
js
addr16
add
lret
testb
xor
rcrb
mov
jmp
loop
pop
sub
mov
mov
mov
loopne
into
adc
cltd
in
aas
call
xchg
and
into
inc
repnz
ljmp
push
orl
push
test
ds
je
push
mov
es
jle
add
dec
cmp
jae
xchg
imul
sub
pusha
mov
popf
and
lds
aas
popf
das
push
sahf
sbb
in
push
scas
and
sbb
icebp
mov
or
jbe
rclb
loope
cmpsl
scas
jl
xor
xorl
jne
xchg
xor
dec
dec
sbb
add
repz
xlat
inc
jb
gs
orb
movsb
movsb
dec
outsb
sub
and
int3
pop
std
lods
adc
push
out
sbb
scas
xchg
pop
xchg
mov
push
fsts
lret
mov
js
lret
popa
loop
inc
imul
sbb
enter
push
ja
push
adc
mov
imul
mov
test
pop
mov
jp
mov
add
mov
mov
enter
mov
fistl
imul
in
cld
pop
inc
gs
dec
mov
into
or
arpl
pushf
push
cmp
ret
fdivrs
enter
mov
mov
push
addl
sbb
iret
mov
imul
mov
nop
cmc
adc
jbe
stc
fildll
inc
sbb
pop
es
cmpsl
jae
imul
xlat
inc
pop
ret
xor
lcall
jo
cmp
in
pop
dec
jecxz
rclb
addl
shr
sub
jmp
pop
in
jp
xlat
and
scas
and
adc
push
sbb
push
clc
add
sar
dec
ss
push
mov
push
iret
popf
sarl
jp
cmp
addb
movsb
push
je
cltd
call
stc
fs
xor
fidivl
call
mov
fbld
xchg
in
pop
add
xchg
rcrl
dec
dec
inc
pop
popf
pop
dec
xchg
arpl
or
stc
popf
incb
sub
shr
push
mov
mov
xchg
mov
xchg
outsl
ret
cmp
ds
adc
cltd
xor
jecxz
dec
xor
push
lret
adc
aas
enter
ret
andb
fmull
sbb
mov
cltd
push
stc
lods
js
test
dec
in
sbb
decl
ficoms
lret
push
push
and
sbbl
ret
daa
or
fwait
jmp
andl
lods
or
and
mov
mov
mov
cmc
cmpsb
sbbl
hlt
loopne
jecxz
jmp
xchg
xchg
mov
sub
shlb
clc
push
cmp
mov
inc
push
jb
lcall
pushf
scas
mov
call
adc
insb
lds
jmp
or
daa
cmp
scas
cmp
in
mov
scas
mov
fstps
sti
inc
pop
inc
ja
inc
xor
in
pop
mov
scas
jne
fdivl
cli
lret
addr16
rol
test
push
push
fs
dec
out
inc
repz
jne
les
xchg
jp
push
lods
and
adc
pop
inc
sub
aaa
or
jp
nop
sti
add
lret
iret
pop
push
ljmp
push
push
mov
fs
push
ret
dec
daa
or
adc
movsb
and
cli
aaa
outsl
adc
mov
or
sbb
popf
hlt
jmp
mov
pop
pop
xchg
or
xor
inc
call
mov
filds
jno
or
adc
lcall
add
sub
xchg
in
cld
stos
pop
mov
shl
in
test
shrb
cmpsl
jnp
sbb
push
xchg
rorb
int
ret
leave
mulb
xchg
sbb
or
inc
arpl
in
scas
push
or
aam
pop
push
xchg
adc
cmp
add
and
dec
cmpb
xchg
pop
lods
aaa
repnz
insb
dec
cs
repnz
daa
mov
push
arpl
adc
jmp
pop
sbb
adc
idivb
sbb
and
xor
push
out
and
leave
iret
outsb
and
iret
lcall
addr16
popa
negb
or
mov
cs
shl
cli
pop
sub
or
iret
push
int3
sub
and
stc
inc
pop
push
lahf
out
xor
jmp
cltd
ljmp
out
sahf
mov
xchg
dec
jb
cmp
mov
cwtl
sahf
adc
sub
stos
call
sub
idivb
or
xor
test
mov
mov
sbb
jmp
xchg
pushf
filds
ret
jmp
xor
les
jb
gs
aam
dec
jnp
lea
dec
xchg
jo
lock
lret
push
dec
mov
or
mov
sub
mov
mov
push
cmc
mov
hlt
loop
mov
das
mov
in
int3
cmp
mov
in
sub
mov
out
iret
sbbl
pushw
sub
sbb
add
lahf
mov
mov
jge
sti
push
jno
jb
push
push
mov
inc
and
pop
jecxz
repnz
ljmp
jno
bnd
cmp
int
fadds
dec
and
shlb
or
inc
aad
mov
cmpsl
stos
inc
jne
movsb
cmp
mov
dec
fcomps
adcb
ja
dec
icebp
rclb
mov
sbbl
jecxz
mov
or
ret
in
lea
xor
sub
mov
enter
jb
xchg
xor
xor
mov
sub
and
ljmp
lea
fcoms
mov
dec
popf
addr16
push
cmp
pop
out
xchg
mov
lret
idivb
scas
cmp
push
mov
push
lcall
outsb
js
jnp
push
or
mov
add
xchg
sbb
xchg
or
xor
pop
stos
into
test
test
inc
mov
bound
in
std
mov
gs
adc
and
ja
aam
sahf
test
or
pusha
rol
icebp
out
sahf
jne
sbb
jl
rep
imul
xchg
adc
or
inc
inc
lea
lods
jmp
jmp
out
loop
dec
push
jb
test
dec
sbb
mov
jbe
out
inc
fwait
and
jo
lret
out
aaa
fidivrl
mov
sub
push
es
push
ret
addl
pop
sbb
mov
jb
and
push
mov
hlt
dec
xor
rorb
mov
mov
sub
and
or
scas
enter
mov
ret
dec
or
push
push
sbb
mov
jg
mov
insl
xor
stc
mov
cmpsb
or
mov
sub
faddl
repnz
adc
cmp
lods
test
imul
xor
cltd
cmp
insb
sbb
jns
lea
push
fwait
push
cmp
mov
andb
xlat
pop
mov
fwait
push
jae
paddsb
sahf
xchg
sarl
push
mov
fstpt
xchg
popa
pop
popf
cs
push
mov
sub
call
cs
push
shlb
mov
fdivl
pop
sbb
in
inc
pop
xor
inc
bound
in
fisubrl
rorb
adcl
in
lock
rcr
hlt
lods
jno
add
adc
sti
mov
xchg
loopne
jb
imul
cmp
mov
xchg
mov
testl
jl
test
adc
sub
dec
jns
cli
scas
int
inc
addr16
dec
xorl
jbe
cmpb
leave
inc
loope
fwait
push
jmp
in
aaa
adc
mov
fsubl
test
stos
les
xchg
adc
fsubrp
fcmove
std
daa
or
mov
scas
popf
test
xor
add
mov
shll
xlat
cmpsb
rolb
sub
aad
pop
xor
pop
incl
jmp
and
mov
shll
fcmovnu
ficomps
lcall
dec
jl
dec
rcrl
push
imulb
rcll
test
dec
in
addl
insb
leave
arpl
enter
lods
popaw
lcall
push
inc
not
xor
pusha
adc
hlt
mov
cmp
xor
ljmp
pop
psubb
push
push
iret
push
fdivrl
mov
dec
cmpsb
dec
dec
push
mov
xor
gs
push
mov
lcall
jmp
repz
gs
clc
pop
sbb
and
dec
rcl
out
pop
mov
clc
dec
pop
test
push
jo
add
fxch
push
iret
lahf
jge
cmpsb
xchg
xor
cld
or
adc
or
imul
xlat
push
jne
shrl
pop
push
sbb
or
push
dec
cli
dec
out
stos
xlat
stos
add
les
outsb
das
dec
xor
lock
leave
jg
or
sbbl
enter
dec
push
popf
push
jg
mov
sub
stos
push
pushf
dec
xor
out
xorl
add
mov
xchg
sbb
adc
shrb
ja
leave
in
mov
scas
and
inc
rol
pop
cmp
mov
call
adc
nop
push
test
out
lods
popa
repz
sbb
loopne
push
sti
dec
sbb
lret
stos
mov
push
sbb
test
scas
outsb
jnp
or
je
sbb
stos
out
jecxz
sub
and
nop
xor
test
or
dec
inc
mov
jmp
lcall
cmp
xchg
jbe
adc
adc
cmpsl
pop
imul
push
mov
lret
mov
and
fistl
push
sbbl
jno
xor
mov
daa
adcl
into
insl
mov
lea
pop
or
sub
mov
add
or
lods
out
in
imul
call
mov
cmpsl
inc
ret
fstpt
out
inc
outsl
cs
in
pop
mov
xor
fists
sbb
dec
cmpsb
fsubrs
call
sbb
icebp
cmpsl
cmpsl
xchg
pop
adcl
fisubs
jns
lock
loope
filds
or
xchg
bound
sub
xor
mov
iret
ret
mov
fsubl
stos
rcr
mov
hlt
or
sub
lea
addr16
arpl
insb
cmp
xor
gs
jnp
mov
push
int
sub
lret
je
jp
hlt
gs
cs
and
sti
rorb
bound
and
sbb
imul
cmp
shl
test
jle
sbb
test
push
pop
or
lahf
and
nop
pop
pop
pushf
in
in
cmc
rolb
mov
xchg
shlb
jnp
iret
cmpsl
lahf
mov
or
xorl
mov
push
call
add
out
adc
aad
push
xor
ficoml
xchg
adc
das
adc
push
pop
ror
xor
test
lcall
gs
les
mov
jecxz
cmp
stos
mov
mov
pop
pushf
sti
push
repnz
cmp
cs
pushf
arpl
mov
mov
out
shl
push
dec
shrw
lock
adc
mov
scas
xchg
int3
repnz
fnstsw
or
mov
jb
div
mov
out
push
xchg
inc
push
sub
xchg
cmp
loope
lds
test
or
out
push
jmp
sbb
add
xchg
mov
nop
or
or
cmp
mov
push
jp
stos
idiv
sbb
imul
in
fbstp
shrl
aaa
jmp
sub
js
popf
or
dec
repnz
adc
sub
inc
cmp
pushf
stc
out
je
cmp
sub
scas
out
pop
add
jns
push
subb
arpl
and
scas
mov
enter
xchg
in
dec
aam
mov
push
iret
shr
movsb
push
sar
lock
jge
mov
inc
mov
outsb
aaa
iret
aam
cmp
fwait
inc
sub
sub
lds
aad
dec
in
mov
faddl
fdivs
fmull
loope
sub
daa
jne
ljmp
push
sbb
jno
sarl
rsqrtps
cmp
hlt
push
lahf
mov
outsb
fucom
iret
mov
mov
test
dec
test
cltd
mov
push
sti
in
enter
lock
xlat
loop
test
push
mov
pushf
mov
aaa
mov
aam
pop
mov
xchg
lds
sub
jle
jmp
cld
cmpsl
cld
inc
lret
lods
pusha
pushf
push
push
loope
mov
or
addr16
jmp
ret
sbb
pop
pop
pop
stos
movsl
stos
xor
push
mov
pop
mov
mov
pop
test
mov
xchg
out
pushf
insl
inc
mov
loope
adc
imul
and
dec
add
cmpb
push
js
enter
mov
imul
jno
and
movsl
and
cmp
mov
dec
outsl
data16
sub
xchg
aad
bound
pop
leave
cld
pop
push
in
lcall
int
push
or
orl
xchg
add
in
popa
cmp
push
mov
adc
mov
mov
repnz
fs
dec
clc
mov
jbe
out
cli
xor
aas
in
inc
sbb
inc
and
sbb
sbb
and
movsl
dec
les
pop
xchg
push
addr16
adc
stos
mulb
inc
mov
or
test
jle
es
pop
in
add
out
mov
test
mov
mov
insb
or
sbb
pop
add
dec
shrb
stos
data16
dec
pop
inc
xchg
das
fistpl
addr16
addr16
ds
mov
push
sub
sub
pop
incb
fdivrl
aas
cmp
xor
push
adc
lea
mov
ret
or
mov
ss
jg
aas
mov
pushf
out
mov
and
je
dec
sub
xchg
iret
sarb
jns
xor
pop
dec
mov
dec
xor
push
out
push
in
push
cmp
jno
arpl
pop
xchg
add
sahf
sub
negb
rclb
jmp
inc
cmp
ficompl
adc
insl
sbb
push
or
and
ds
int
add
mov
sbb
inc
or
push
and
popf
jo
jbe
mov
push
jle
iret
jmp
ds
in
sbb
daa
push
jmp
cli
test
add
shr
or
aam
dec
jbe
xor
movsl
xor
dec
cmpsb
mov
cwtl
push
je
and
dec
push
scas
in
sub
jae
or
gs
or
cmp
mov
scas
loop
xchg
xor
hlt
add
xchg
push
adc
push
push
mov
ds
sbb
outsb
pop
repz
fsubs
mov
leave
cmp
xor
xchg
jge
imul
xor
mov
xchg
subb
test
cmp
test
ss
sub
cmp
cli
mov
push
sub
ret
pusha
mov
inc
int3
push
cwtl
push
call
test
imul
and
jne
xchg
stc
xchg
and
mov
ds
mov
es
lods
cmp
daa
mov
imul
es
rcrl
push
lahf
mov
stc
jmp
fisubs
inc
xchg
and
out
pop
mov
lret
les
push
adc
enter
adc
jnp
mov
pop
aam
sti
adc
add
jns
adc
call
push
add
jnp
mov
out
call
testb
shlb
push
pop
sub
cwtl
mov
xor
xchg
dec
pop
lret
xor
aas
stos
lret
mov
jge
xor
add
test
std
add
cli
or
mov
cmp
pop
sbbl
stc
push
mov
sub
sbb
inc
data16
mov
or
cmpsl
fisubrl
in
cmpsb
push
fs
cwtl
jmp
mov
das
shll
in
pop
popa
pop
dec
test
sub
push
cltd
std
sub
loop
inc
and
test
mov
push
lds
adc
or
sub
xchg
movsl
and
adc
cmp
das
and
outsl
fsts
mulb
pop
mov
int
add
ret
bound
jmp
pop
and
sub
fmuls
pop
rorl
inc
jecxz
jge
ja
sbb
push
inc
sub
repz
cmp
push
jbe
and
mov
push
jp
mov
lock
xlat
rcr
cmpsl
cmp
subb
aaa
cmp
push
inc
mov
repz
cmpl
mov
cmp
pusha
mov
push
ffreep
inc
adc
jno
fucomp
pop
out
pop
cmc
push
jbe
ja
push
cmpsb
insb
sub
jecxz
adc
pop
xchg
lret
ljmp
insb
xchg
int3
and
jbe
in
pop
push
scas
popa
inc
jge
jnp
jne
in
cwtl
inc
add
mov
sbb
jae
imul
mov
addr16
push
mov
bound
jo
mov
les
daa
popa
and
fisubrs
je
rorl
xlat
mov
dec
inc
js
xchg
shr
push
in
add
lahf
aad
mov
inc
pop
mov
and
cmp
stc
lds
lods
sub
sahf
jge
fwait
dec
cli
sbb
ds
jge
mov
ret
fstps
cmp
cmp
pop
add
std
or
mov
cwtl
cmp
push
add
sahf
cli
lds
mov
test
sbb
xor
loope
mov
mull
mov
je
addr16
mov
adc
in
push
test
push
sbb
dec
jp
bnd
int3
loope
in
and
orb
cltd
push
or
leave
push
add
dec
lods
adc
pop
fwait
lahf
push
aam
insl
out
xchg
aad
pop
cld
std
in
dec
pop
lods
rcrl
push
and
test
xor
xchg
cmpsb
mov
sbb
jne
shrb
and
fsubrl
push
sub
sub
xchg
popa
xor
or
rcrl
ud1
js
mov
mov
adc
push
xor
pop
lods
push
movsl
cmp
push
js
insl
sbb
adc
fstl
cmp
imul
shl
les
or
stc
xor
loope
lock
jg
push
sub
cld
sbb
mov
mov
inc
iret
sbb
jecxz
scas
int
sbbl
push
cmc
cwtl
add
insb
lahf
rcll
loop
jmp
arpl
lock
mov
xlat
lea
mov
lcall
xchg
in
xchg
popa
test
fwait
mov
popa
insb
jbe
jg
je
je
mov
lods
xor
pop
lcall
xchg
les
fnstcw
cmp
repnz
shll
dec
js
bound
mov
cmc
out
aam
imul
add
push
out
dec
out
sbb
pop
inc
pop
cld
out
cmpsb
in
lock
mov
add
leave
add
fs
nop
jle
ret
mov
mov
andl
and
push
inc
popf
add
xor
xor
adc
jno
in
fidivl
pop
cltd
adc
push
stc
dec
add
jecxz
inc
cmc
fidivrs
scas
pop
loopne
pop
shlb
lods
pop
cwtl
adc
dec
push
inc
mov
mov
aas
ljmp
adc
or
lock
xor
adc
stos
icebp
dec
pusha
adc
pop
call
pop
int3
pop
popa
inc
adc
js
fistpll
dec
mov
jl
or
jnp
inc
lret
mov
fidivl
test
les
mov
movsl
mov
cltd
inc
js
xchg
arpl
fwait
insb
stc
xchg
movsb
int3
or
pop
ret
fidivrl
aam
push
je
ja
mov
mov
dec
pop
ss
lahf
xor
scas
dec
repnz
sbb
cmp
add
inc
lods
xor
leave
ret
repz
popf
add
jl
cwtl
xchg
mov
int3
outsb
out
or
xchg
mov
sbb
push
or
int
fdivrs
dec
pop
xor
mov
dec
inc
test
cmpsl
lahf
ficoml
add
int3
or
rolb
adc
leave
cmc
int
cwtl
xor
push
les
inc
mov
cltd
loopne
and
cmp
adc
mov
shrl
mov
fisubs
lret
int3
std
fcompl
insb
inc
pop
xor
push
xlat
int3
mov
xchg
mov
push
lret
mov
fstl
xlat
xor
cmp
adc
mov
xor
not
lea
or
mov
and
rolb
and
inc
int
sub
fwait
aas
or
fmuls
mov
xchg
lret
sub
test
mov
clc
cmpsl
push
or
sub
clc
inc
xor
leave
xor
or
sub
jge
rcll
mov
mov
inc
jne
mov
rolb
lods
or
add
sbb
int
sub
jge
push
mov
sbb
imul
add
xor
mov
ret
insl
sahf
cmpsl
push
jae
into
repnz
fdiv
scas
call
and
sub
adc
outsl
aas
inc
xor
inc
and
aam
lret
sarl
sub
mov
popa
dec
push
dec
xchg
shlb
jae
std
idivb
inc
decb
mov
sti
jae
jge
lret
mov
jns,pn
jecxz
xchg
in
xchg
add
cmp
mov
ljmp
mov
js
insl
sbb
stc
movsb
js
mov
lret
inc
xchg
mov
dec
and
or
mov
mov
or
adc
aaa
cld
test
sbb
push
push
shrd
and
pop
lods
mov
add
mov
repnz
popa
pop
xchg
ja
xchg
ja
pop
cs
enter
test
andb
and
cmp
cmp
or
adc
pop
inc
movsb
xchg
mov
mov
outsl
hlt
lahf
push
int3
pop
dec
jl
push
push
xchg
shll
js
mov
jo
xchg
stc
inc
stos
jmp
push
fsts
lret
data16
into
loope
loopne
fistl
fwait
sub
cmc
fld
jns
cmp
and
call
inc
scas
call
jp
adc
shr
mov
xchg
pop
loop
es
dec
mov
js
es
sub
sbb
sub
push
cmp
mov
cmpsb
jg
adc
std
xor
xor
in
cmpxchg
jmp
dec
lds
sbb
jb
adc
xor
lock
iret
popf
and
or
sub
shlb
lods
into
pusha
push
lods
in
push
out
paddb
test
arpl
mov
jmp
inc
adc
inc
sub
jo
mov
fistl
rcll
xchg
je
and
dec
movsl
jle
dec
clc
aas
jmp
daa
arpl
jmp
es
mov
enter
mov
addr16
xchg
leave
shll
xchg
xor
repz
sub
add
fs
out
pop
popf
cwtd
pop
jmp
sahf
scas
jnp
enter
movsl
mov
sub
adc
loope
incb
jmp
dec
jp
mov
cld
mov
mov
lods
mov
xchg
out
mov
cmp
das
inc
add
cli
xor
adc
pop
adc
mov
xor
sub
lods
std
push
sub
sbb
into
or
test
cmpsl
repz
into
inc
loopne
ss
xor
jle
pop
daa
xor
xor
hlt
cli
and
inc
stc
fcoml
dec
push
ds
xor
repz
lea
insl
xor
mov
pop
mov
and
inc
pop
outsb
push
repnz
or
std
int
mov
xchg
ljmp
sbb
or
ljmp
mov
inc
dec
arpl
lods
jg
test
out
sub
mov
sub
ficoml
inc
jns
test
pop
decb
ret
and
mov
sbb
jo
fldcw
mov
lods
sub
scas
adc
mov
movsl
push
or
cmc
scas
cmpsb
ficomps
hlt
icebp
repz
xchg
insl
fwait
xor
pop
les
sub
ret
loopne
test
inc
jge
inc
jle
mov
mov
fimull
test
add
ja
cmp
cmp
inc
sbb
jmp
repz
je
leave
movsl
rcll
sub
xor
mov
add
outsl
sub
jp
icebp
repnz
sbb
mov
hlt
daa
jb
aaa
rcll
inc
ret
lret
xor
xchg
pop
test
inc
push
push
or
pop
jge
sahf
inc
inc
je
cmp
shl
lds
and
xor
adc
xor
cmp
pop
imul
ret
inc
sub
filds
sti
pop
pop
pop
cli
jle
adc
xchg
or
fdivrs
adcl
out
dec
pushl
sbb
xchg
push
addr16
and
mov
aam
stc
test
add
cmp
ss
lret
ret
nop
inc
sbb
add
xchg
pop
mov
and
cs
int3
dec
mov
aad
add
cmp
add
aaa
cld
sub
out
add
stc
fs
imul
mov
leave
mov
ror
fs
mov
jge
loopne
clc
scas
aas
xchg
push
mov
ja
sbbb
lahf
push
mov
sub
xchg
jmp
jecxz
das
dec
xor
mov
sbb
cli
lahf
or
add
pop
dec
out
test
testb
adc
jbe
mov
popa
push
aad
inc
mov
push
push
cmp
fdivrp
xor
jg
xor
or
dec
test
je
inc
jns
push
add
mov
adc
out
push
out
gs
bound
fcoms
cmpsl
insl
adc
xchg
xor
test
add
das
push
dec
filds
ret
test
ja
iret
sbb
es
daa
or
clc
mov
fists
jle
shlb
jecxz
sahf
lock
pusha
fistps
sbb
mov
lods
je
inc
push
fimuls
leave
aad
jo
js
cmp
fistpll
pop
pop
push
mov
pop
sahf
adc
cld
imul
outsl
inc
andb
inc
out
or
das
fwait
sbb
out
push
jnp
add
rcr
js
popa
xor
incl
inc
mov
pop
fldt
rcpps
outsl
xchg
arpl
out
insb
addr16
hlt
rcr
jae
add
sbb
repnz
inc
pop
and
xor
jae
test
adc
loopne
xor
cmp
dec
mov
jne
js
std
xor
inc
in
adcb
fisttpll
orb
lahf
cmp
cmp
cmpsl
sbb
imul
and
mov
fcmovu
sub
fwait
push
aaa
imul
fiaddl
jl
rcrb
lret
aas
lods
fwait
lcall
xor
imul
jg
addr16
fcmove
pop
mov
mov
aas
int
push
fs
xorl
xchg
lahf
int
push
cmp
leave
and
scas
pop
lea
add
mov
inc
xor
mov
xor
mov
push
test
adc
ret
dec
movsl
xlat
jecxz
aad
sarl
into
gs
daa
repz
or
sbb
lds
loop
push
dec
jecxz
mov
mov
cmp
test
dec
dec
outsb
and
rcl
dec
cmp
ss
fs
insb
lds
div
sub
dec
cld
jo
leave
sti
adc
test
clc
dec
test
pop
sub
add
pop
lock
pop
pushf
faddl
jl
or
pusha
lods
add
adc
sub
mov
out
mov
xchg
unpcklps
xchg
xor
mov
iret
and
push
test
test
push
mov
xchg
inc
fimuls
cwtl
adc
divb
movsl
mov
cld
andl
xchg
mov
clc
lock
rol
sub
gs
jae
pop
cwtl
out
inc
mov
inc
jecxz
shrb
std
jp
popa
daa
jg
push
adc
mov
pop
imul
test
jno
les
icebp
ja
das
loop
mov
add
pushf
sub
push
les
pop
cmp
mov
mov
xchg
inc
lock
lcall
dec
push
xor
iret
push
ret
popf
sub
cmpsl
enter
pop
setp
mov
shlb
pop
mov
xchg
nop
aam
add
dec
enter
mov
cld
rcr
es
test
jne
inc
ljmp
sub
sbb
loope
orl
movsb
gs
es
adc
cld
xchg
scas
lret
test
into
test
pop
jl
jmp
outsb
push
ljmp
nop
not
imul
push
lret
lcall
fs
ljmp
push
shrb
mov
lret
js
adc
enter
sbb
cmc
fimuls
pop
gs
out
into
out
jge
fpatan
mov
and
and
dec
and
jnp
xorl
aaa
stos
aam
stos
pop
cmp
out
mov
aaa
stos
outsl
ljmp
sarb
cmc
iret
in
mov
outsb
dec
dec
test
rorl
mov
cmp
ja
les
inc
pusha
jno
mov
and
xor
fcom
mov
iret
push
lds
add
mov
mov
hlt
xchg
ja
outsb
xchg
xor
mov
xchg
pop
inc
jo
rcrb
mov
test
push
ja
sub
and
xchg
loope
inc
fsincos
mov
jg
dec
jb
mov
in
mov
xorb
in
fdivrs
xchg
test
cld
movsl
out
mov
sub
addl
sub
sbb
xchg
push
lcall
cmp
loopne
lock
and
xor
test
ljmp
lahf
jnp
adc
jmp
scas
js
sub
loop
push
fidivl
jle
js
jae
cmp
roll
les
cmp
add
cmp
xor
sahf
push
mov
xchg
inc
xchg
xchg
icebp
sbb
pushf
mov
cmp
mov
xchg
jo
subb
jmp
nop
clc
daa
jns
xor
sub
push
inc
pop
lods
add
sub
push
mov
lea
push
push
ljmp
subb
fdivrl
mov
jb
xchg
adc
ss
jns
imul
mov
imul
lea
sbb
push
fwait
jle
jbe
dec
push
or
sub
inc
frstor
push
loopne
loop
test
adc
daa
pop
cltd
stos
jbe
cmpsb
pop
bound
jmp
mov
out
sbb
jle
or
cmpsb
cmp
pop
jg
or
movl
incb
and
loop
cs
std
push
mov
nop
jecxz
ret
shll
pop
jmp
add
cwtl
jmp
enter
xchg
aad
add
fwait
push
xchg
je
sbb
fstl
addr16
xchg
mov
cltd
mov
lods
cld
loop
ds
mov
aad
scas
sub
mov
das
cmpb
dec
inc
loopne
gs
push
jmp
fdivl
decl
cld
jb
and
aas
out
arpl
sbb
pusha
xor
popa
sub
mov
das
std
test
in
dec
enter
jecxz
xor
call
daa
rcrl
leave
inc
add
clc
sbbl
pop
pop
sbb
cmp
idivb
stos
dec
mov
int3
test
dec
sbb
jbe
cmp
mov
aam
pop
dec
ret
mov
test
pop
gs
je
clc
jp
divl
push
outsl
daa
jecxz
enter
je
adc
fwait
das
xor
dec
vmread
lock
lods
adc
push
loopne
lahf
rcrb
mov
xor
ljmp
stos
rcrb
pop
popa
push
push
push
dec
ds
imul
popf
into
mov
mov
sub
fcomps
and
sti
scas
sub
or
sub
inc
es
nop
adcb
push
loope
jae
stos
dec
out
fcompl
test
push
xlat
in
push
arpl
inc
roll
scas
movsb
dec
or
fnstenv
sbb
mov
test
inc
sub
and
mov
dec
pop
and
outsl
out
push
out
in
fimull
adc
cmpsb
add
sub
jo
push
xor
les
popa
call
addr16
stc
lret
mov
stc
shlb
sub
fimuls
cld
jmp
inc
or
or
cld
ret
inc
shlb
popf
stos
adc
add
cld
ret
inc
jl
xchg
ret
mov
fs
test
lret
pop
jns
xlat
mov
jmp
fs
sbb
push
rcrl
inc
pushl
cmp
roll
cmp
mov
xchg
sbb
cwtl
popa
ja
out
mov
ret
xchg
inc
and
aaa
adc
mov
pop
push
dec
push
or
incl
xchg
or
jge
mov
adc
adc
loope
dec
cmpsb
test
jb
leave
and
dec
iret
jecxz
fsubrl
and
in
jbe
jle
inc
xchg
out
loopne
cmpl
cmp
pop
inc
cli
movsl
shlb
movsl
lret
pop
shr
out
cld
pushf
ja
fwait
xabort
dec
aam
sar
fdivrl
xchg
push
xchg
mov
fiadds
cwtl
xor
jbe
sbb
clc
lea
loopne
in
lods
xor
add
in
push
inc
sbb
xor
add
cs
rcll
xor
pop
dec
or
cmp
cmp
or
dec
daa
and
xchg
nop
add
xchg
je
fmulp
inc
mov
pop
mov
insl
pop
lret
inc
mov
mov
sarl
movsl
jge
cmc
adc
loopne
clc
shll
inc
push
js
mov
int
adc
es
fildl
push
andl
es
xchg
jecxz
into
mov
xchg
in
ss
loop
popf
and
sbb
inc
sub
xor
dec
lret
fstl
into
and
sahf
cmpl
nop
jg
pop
mov
jae
dec
push
and
jne
or
incl
in
out
fsubrp
push
mov
rcrl
mov
or
jecxz
pop
sub
pop
jp
mov
xchg
ljmp
adc
adc
arpl
pop
jo
mov
std
dec
loopne
cld
ljmp
nop
shlb
dec
mov
loope
push
jl
dec
pop
mov
sub
aaa
push
or
jle
ds
jmp
mov
rorb
jo
dec
pop
add
cli
cmp
cmovbe
jne
sbb
std
xchg
pop
inc
fisubl
jno
inc
cltd
mov
cmp
in
sub
sbb
wrmsr
mov
and
js
jns
lods
andl
and
int
cmp
or
pushf
jp
or
sbb
add
filds
mov
out
pushf
inc
fistl
xlat
lahf
lods
add
arpl
push
cmp
xor
add
inc
xor
inc
add
insl
bound
or
lret
enter
js
loopne
pop
mov
jecxz
mov
cmp
in
decl
jmp
addl
add
mov
push
sub
mov
mov
mov
imul
or
lea
outsl
fs
pop
pusha
cwtl
jbe
push
or
mov
mov
inc
mov
and
pop
rorl
inc
xor
mov
in
bnd
ds
mov
sub
dec
jmp
pop
aad
and
or
repnz
jecxz
js
pop
sbb
cmp
inc
xor
enter
movsl
xchg
mov
jbe
push
mov
lock
mov
incb
xlat
divl
sahf
stc
stos
out
mov
add
mov
fisttpll
lods
fwait
inc
mov
xor
cli
cltd
sar
or
push
sahf
rcr
fbld
xchg
js
inc
xlat
sbb
arpl
arpl
frstor
adc
inc
xchg
push
into
in
mulb
push
jno
add
sbb
inc
daa
add
fisubl
jo
add
dec
push
outsb
mov
pop
jge
bound
xchg
test
mov
cwtl
mov
sbb
out
push
jne
jg
in
mov
gs
jne
cmpsl
out
addl
das
mov
inc
cmp
sbb
inc
jns
in
sbb
int
xor
lock
mov
sub
inc
dec
cltd
je
into
hlt
jb
cwtl
int3
stos
sbb
push
cld
lcall
inc
aaa
les
xchg
inc
sub
je
fists
jmp
add
jmp
inc
mov
inc
dec
in
stos
push
mov
cmp
mov
jecxz
and
fiadds
push
aaa
add
ficompl
xchg
fisttps
loop
loop
or
fmull
cmp
outsb
les
or
dec
push
ss
lea
cltd
movsb
movl
jns
ljmp
insb
je
dec
inc
aam
in
dec
pop
xor
push
dec
add
inc
jns
mov
cmp
add
sub
add
in
push
frstor
js
push
cld
scas
cmp
dec
out
mov
push
js
shr
gs
nop
add
pop
xchg
ficoml
fdivl
lds
mov
fld
mov
pandn
dec
push
shrb
cmp
adcl
movsb
mov
rorl
imul
test
iret
ficompl
sbb
jle
jl
mov
jle
out
mov
scas
out
xchg
repnz
jp
mov
mov
sarb
mov
ja
push
je
xlat
and
mov
insl
sub
sub
inc
and
subl
xchg
push
push
xchg
dec
and
pusha
jbe
loopne
imul
inc
jne
sbb
icebp
fsubrp
imul
push
shrb
mov
gs
or
bound
out
push
int
repnz
out
fdivrl
push
ljmp
dec
clc
dec
mov
push
mov
add
jg
and
cmp
loop
inc
xchg
dec
cltd
ss
sub
test
idivb
aas
pop
rolb
loope
cmp
jae
loopne
lds
or
adc
or
sub
pop
mov
adc
and
dec
dec
mov
adc
cmp
scas
inc
fadds
stos
jg
and
fistps
leave
daa
xchg
dec
cmp
inc
addr16
mov
ficompl
cltd
lods
addl
mov
inc
jbe
fstpt
jmp
aas
xchg
xchg
mov
sbb
test
shrl
pop
fs
adc
imulb
test
in
add
sub
jmp
xor
stc
sbb
ljmp
or
sub
cmp
clc
insl
jbe
lods
sahf
pop
loopne,pn
mov
cmp
subb
sbb
leave
mov
arpl
lods
ret
add
mov
ret
dec
xor
lahf
insl
inc
jle
pop
mov
add
movsb
jmp
and
int
ja
loop
push
std
lcall
cmc
xor
adc
and
ljmp
jbe
push
pusha
fsub
dec
jp
mov
scas
add
sub
aas
pop
add
add
mov
mov
xchg
and
jne
jno
iret
das
sub
sub
cli
jb
sub
sub
sub
iret
cld
subl
pop
jp,pn
mov
cli
pop
push
hlt
lds
fwait
adc
mov
jl
test
mov
scas
pop
sub
sub
inc
ljmp
shll
or
add
movsl
pop
enter
adc
cmp
lret
or
scas
fistpll
or
mov
inc
cmpb
negb
pushf
adc
je
test
cli
test
xchg
dec
mov
fidivs
shrl
in
pop
mov
push
jae
cmp
icebp
jge
jnp
pop
lds
inc
idiv
movsb
pextrw
lahf
repz
mov
int3
test
test
movaps
jmp
pop
mov
in
lcall
rclb
inc
xlat
xlat
inc
and
cld
fnstenv
cli
insb
jecxz
bound
cmp
sbb
hlt
sub
lret
test
pop
jbe
push
add
stc
neg
dec
out
mov
rol
jo
lods
adc
jecxz,pt
inc
dec
push
adc
mov
mov
ja
mov
sub
aaa
in
call
shl
add
clc
arpl
fnstsw
andb
cmpsb
jl
test
cmp
shll
stc
lahf
push
xchg
test
mov
cld
sarb
cmpsl
jp
xchg
orb
mov
shlb
adc
sbb
cmp
data16
std
or
push
sbb
test
add
xor
daa
inc
fsubl
mov
sub
jne
popa
push
mov
popf
dec
sub
sbb
mov
sub
sbb
push
inc
lret
sub
test
jns
into
fistpl
xchg
test
mov
cmp
test
push
adc
push
std
daa
fstl
mov
js
sbb
nop
test
fdivl
rcll
stc
mov
scas
xchg
mov
stos
orl
fldt
add
xchg
pop
inc
and
add
outsb
aad
fnstsw
fcoml
jns
dec
xchg
jb
xchg
pop
jae
push
ret
xor
std
test
shll
pusha
cmc
fdivl
and
in
inc
clc
mov
comiss
ret
adc
mov
lcall
mov
lret
inc
mov
mov
andl
out
mov
pop
sbb
lea
aas
aaa
iret
inc
push
sbb
jo
out
cli
xchg
lcall
das
dec
and
hlt
data16
loope
clc
repz
ret
and
jecxz
js,pn
notl
inc
fwait
push
pop
sbb
addr16
pop
xchg
rol
jb
sbb
shrl
lock
aad
mov
stos
dec
dec
std
push
cli
adc
cmc
jge
mov
sub
cmp
xchg
addr16
mov
pusha
shll
mov
jl
lret
out
mov
jne
xchg
cltd
ret
test
xor
pop
push
lock
xchg
dec
ss
in
and
xor
push
adc
fsubs
mov
xor
and
mov
mov
adc
insl
insl
pushl
mov
sub
cmp
mov
mov
xlat
inc
sub
adc
mov
sub
push
xchg
repz
mov
das
xchg
sub
mov
sbb
pushf
sub
notl
std
pop
and
and
mov
push
cmp
add
mov
add
or
into
stos
jns
loopne
mov
setae
or
jne
das
push
mov
sbb
sub
lods
jle
rcl
dec
jmp
out
out
test
mov
inc
clc
fmuls
push
mov
mov
testl
imul
cmp
xor
mov
jae
xor
pop
aad
push
sub
xchg
mov
or
das
mov
gs
xor
cmc
js
negb
cs
mov
loope
add
jge
pop
jle
lret
insl
leave
mov
pop
stos
addr16
push
int3
scas
adc
sbb
xor
mov
fldcw
push
mov
nop
or
mov
mov
inc
dec
lds
cmp
pop
xor
lock
lret
pop
sti
push
xor
sbb
cld
loope
cli
dec
pop
pop
inc
in
jecxz
roll
imul
mov
mov
aad
das
cmpsb
sub
cmp
cmp
movsl
out
or
or
dec
rcrb
jne
mov
lcall
pop
sbb
bound
mov
outsl
movsl
jge
scas
shrl
mov
in
into
mov
daa
sub
adc
and
ret
jae
aad
scas
jae
lahf
inc
lods
mov
adc
mov
pop
push
icebp
pusha
inc
sbb
inc
inc
test
push
and
sub
das
mov
leave
aaa
adc
pop
fistps
out
nop/reserved
push
mov
jg
cmpsb
sub
mov
inc
rolb
and
fcomps
je
cmp
repnz
dec
roll
mov
sti
or
aaa
mov
clc
mov
inc
mov
and
add
jmp
xchg
or
popa
mov
repz
daa
inc
orl
cs
push
pop
or
xchg
or
pop
add
or
xlat
out
dec
stc
inc
stos
fdivrp
lods
fidivrs
mov
mov
cmpsb
in
add
scas
sub
enter
cltd
call
adc
add
mov
fneni(8087
setns
in
jmp
or
add
jo
mov
inc
mov
lds
fidivrl
inc
ficoms
sbb
gs
mov
and
or
lret
xchg
daa
push
fisubrs
xchg
inc
xchg
push
and
cmp
adc
fcompl
sti
stc
mov
enter
lods
jge
sbb
ficoml
push
xor
xchg
cmp
adc
jl
clc
pop
mov
iret
cmp
fldenv
inc
pop
sub
lods
lock
sub
mov
data16
add
or
fs
cwtl
lea
add
mov
jns
mov
jp
js
fs
adc
mov
push
fcmovbe
pop
and
add
dec
or
aad
add
loop
inc
and
mov
sbb
lock
daa
mov
mov
arpl
fidivrl
imul
xchg
jecxz
dec
dec
sarl
sar
cmpl
and
mov
in
inc
jecxz
into
dec
push
mov
jae
sub
fs
xor
dec
out
sub
and
dec
and
pop
outsl
push
mov
jns
mov
mov
outsb
scas
je
in
cld
cmp
add
and
mov
jmp
bound
aas
xlat
mov
es
inc
data16
loopne
mov
data16
cmp
cmp
lds
jmp
xchg
jmp
cli
push
fisttpl
cmp
test
ds
xor
popa
and
outsb
fbld
aas
scas
cs
cmpl
lret
adc
inc
fs
mov
enter
lock
sti
shlb
jp
stos
sti
push
and
or
jns
aas
daa
in
push
sub
in
xchg
jae
add
jo
cltd
ror
dec
aaa
xchg
mov
rcrl
and
jo
into
add
mov
in
xor
cmp
popf
nop
ret
stc
clc
push
mov
mov
andb
cmp
arpl
gs
out
sub
sub
pop
xor
cmc
test
mov
stos
add
and
imul
mov
lods
dec
mov
test
sbb
fists
aad
cmp
out
push
ljmp
mov
sub
sarl
arpl
lcall
inc
pop
scas
jecxz
outsb
inc
sub
cmp
out
sbb
adc
xor
push
dec
negb
int3
in
gs
add
shl
push
push
js
xor
addb
mov
mov
jg
loop
add
mov
add
and
pop
test
add
or
mov
mov
out
adc
dec
cmp
dec
ret
jecxz
sub
int3
rcr
adc
pop
sbb
push
mov
rorb
mov
jmp
mov
mov
mov
int
or
outsl
aas
clc
sbb
mov
lods
sbb
mov
test
dec
fwait
xor
jo
mov
stos
xchg
ss
pmaxsw
cmp
xchg
ds
inc
mov
xchg
xor
sbbl
and
cmp
out
add
cmpsl
shrb
fsubrp
imul
loop
xchg
xchg
mov
sbb
subl
lods
jmp
lds
cmp
jns
cmp
or
icebp
cmp
inc
aas
adc
aas
sbb
out
mov
dec
jno
lods
clc
dec
mov
jae
and
sbb
sti
in
fsubp
xchg
lahf
lret
add
js
iret
cltd
das
adc
push
fists
jns
subb
pop
imulb
pusha
xor
cwtl
std
adc
lahf
loop
dec
ljmp
fcmovnb
jno
mov
inc
lahf
rolb
aas
out
dec
pop
mov
push
scas
pop
xchg
mov
faddl
xor
test
mov
outsb
test
sbb
or
cmp
out
xor
movsl
mov
pop
int3
loop
sub
jo
inc
and
mov
add
jmp
mov
popf
lcall
pop
adc
repnz
sbb
fs
push
push
and
add
sub
lcall
mov
push
fbld
sub
adc
push
scas
je
mov
mov
xchg
loopne
es
jo
jae,pt
sub
cli
les
xchg
push
pop
lods
adc
inc
push
arpl
js
mov
fwait
notl
fldt
mulb
pushf
insb
push
sub
cwtl
fs
inc
data16
xchg
mov
inc
lcall
mov
ret
jbe
ljmp
fmuls
dec
jmp
adc
sub
decl
clc
xchg
add
pop
inc
lds
call
add
inc
add
jecxz
mov
pop
sbb
iret
mov
lcall
cmpsl
aaa
push
pop
add
cmc
xlat
insl
fwait
aas
cmpsl
adc
mov
insl
lock
fistpl
xlat
mov
dec
seta
insl
or
subl
inc
xchg
fists
shll
notrack
mov
inc
dec
and
imul
mov
fs
mov
rorl
gs
in
decl
inc
pop
cmp
clc
fwait
lods
movsb
sub
or
inc
outsl
push
inc
pop
and
inc
data16
pop
mov
add
adc
aaa
dec
loope
mov
adc
sbb
inc
testb
cmc
arpl
insb
je
aas
pop
pop
test
iret
mov
lret
xorl
fiadds
insb
sti
sbb
mov
setno
sbb
xor
or
dec
loopne
jl
mov
pop
sbb
rorb
hlt
subl
or
mov
outsl
scas
mov
ss
add
das
pop
stos
mov
mov
xor
mov
rcrl
adc
xor
mov
das
cmp
jmp
sbb
sbb
aam
leave
mov
xor
rcll
in
cmpl
cld
daa
mov
in
push
scas
fucomi
push
test
push
and
hlt
push
xchg
aad
cwtl
lahf
enter
push
sbbb
or
pop
add
mov
repz
mov
sbb
cmp
inc
jb
mov
aas
inc
xlat
jns
fisubs
in
bound
xor
mov
push
je
nop
jg
cmp
aam
rolb
pop
pop
mov
lahf
das
cmpsl
out
pop
cmpb
xchg
repnz
in
pushf
roll
xor
xor
pop
dec
movsb
in
push
xchg
stos
push
hlt
push
jo
test
mulb
adc
int3
iret
not
sub
sub
xor
push
in
gs
aam
std
xor
pusha
mov
xchg
es
mov
mov
mov
mulb
cmp
repz
ss
loopne
pop
shrl
lods
shll
jle
and
test
push
jg
ss
add
ds
test
addr16
push
lods
xor
das
and
js
dec
shrl
in
mov
stos
imul
pop
push
cmpsb
ret
jo
or
dec
pushf
lock
jno
or
rorl
gs
or
pop
es
jmp
ja
imull
icebp
inc
lcall
cltd
jae
push
in
pop
mov
lea
or
nop
cmc
je
push
mov
sub
repz
jle
pop
pcmpgtw
add
sti
or
or
shll
data16
push
fbld
ret
repz
fnstenv
std
loop
push
fidivs
in
dec
bnd
lret
cld
nop
sub
push
adc
jo
rol
stc
push
shlb
mov
adc
inc
xchg
xor
cmp
hlt
pushf
jmp
sbb
stos
loope
mov
scas
mov
lcall
movsl
pop
xchg
mov
and
lods
or
insl
sub
pop
orb
mov
pop
repnz
rolb
mov
jp
dec
sbbl
xchg
test
and
dec
orb
mov
rdtsc
pushf
repnz
stos
add
leave
fldenv
cli
push
mov
or
into
sahf
shl
jecxz
movsl
push
dec
jg
mov
sti
mov
sub
lret
rcrl
cmpsb
and
push
adc
ja
push
or
cmp
fsubl
ss
xchg
sarb
lret
push
in
cmp
or
or
dec
adc
xchg
ljmp
or
xchg
xor
adc
and
jg
mov
cld
pop
mov
xchg
incl
popa
aad
mov
adc
add
mov
push
insb
pop
sub
mov
push
rol
stos
mov
inc
add
xchg
jg
outsb
mov
std
stos
add
xchg
mov
decb
aaa
xchg
fwait
and
outsl
jge
inc
fmul
fidivl
and
ret
out
mov
test
jno
test
rcll
xor
sub
cmp
int3
add
dec
insl
mov
sti
xchg
adc
mov
xchg
add
sub
outsb
pusha
pop
test
cmc
push
push
ss
sbb
shr
stc
leave
add
mov
pusha
pop
mov
mov
rcl
insb
inc
xchg
loop
or
xlat
rcpps
gs
in
mov
push
cld
push
push
mov
cmp
call
add
fisubs
push
and
iret
test
shlb
xchg
out
cs
and
cmp
adc
sub
mov
fcmovbe
es
addr16
out
fnstenv
sub
popa
or
or
mov
scas
aas
push
dec
push
inc
xchg
xorl
mov
mov
xor
shlb
pop
jno
xchg
mov
mov
sbb
add
scas
xor
cmc
xchg
fs
out
push
jo
rcrb
xchg
xchg
adc
out
shrl
dec
std
and
inc
sub
cwtl
addr16
addr16
mov
mov
pop
mov
inc
in
jb
hlt
dec
neg
outsl
out
icebp
outsb
sbb
adc
sub
insl
fs
fidivrs
dec
add
mov
out
popa
loop
mov
jmp
xchg
test
neg
sbb
test
sbb
cmpsl
sub
jmp
add
scas
push
adc
aad
adc
dec
and
les
aad
or
jns
mov
bound
int
sbb
push
xchg
xor
adc
fisubl
andb
jnp
mov
mov
adc
cmp
fs
lds
pusha
lock
enter
stc
xchg
cmp
inc
push
movsl
dec
fdivs
mov
mov
addr16
lcall
jno
movl
fnstcw
inc
je
jg
adc
adc
scas
jmp
pop
stos
and
out
repz
add
enter
test
ljmp
push
das
int
test
adc
xor
and
cmpsl
mov
mov
jo
mov
inc
sahf
inc
jns
adc
mov
mov
mov
pop
cmpsl
mov
sbb
cmpsl
mov
aad
out
sub
cli
mov
or
popf
inc
mov
addr16
aaa
cmp
mov
in
scas
imul
pop
mov
mov
push
test
add
add
push
fildll
cmc
in
fisubl
popa
lahf
push
scas
jo
lds
pop
lds
in
lahf
and
popa
pop
adc
mov
jg
shr
es
pop
fidivrl
subl
pop
mov
xor
ficompl
add
add
sbbl
mov
loope
mov
shrl
mov
inc
jge
inc
sbb
popa
jge
shrl
out
sub
fildl
xor
jecxz
add
mov
sarl
cmp
std
into
pop
pop
stos
mov
testl
out
in
scas
push
ljmp
xorl
in
cmp
lret
js
imul
or
mov
add
sbb
cltd
push
hlt
mov
lret
xlat
xchg
adc
mov
add
loope
push
sbb
xorb
xorl
dec
push
ffree
lea
add
or
push
fnstcw
mov
or
jmp
popf
inc
jae
aas
ss
jns
pushf
lods
int
je
mov
xor
adc
leave
out
icebp
ss
push
movsb
das
add
push
aaa
fs
cli
fildll
and
fadd
mov
shlb
inc
dec
mov
push
outsb
or
aam
push
lret
scas
and
jecxz
sti
and
fdivrl
and
jmp
pop
xor
sbb
int
fwait
mov
xchg
xor
sub
jb
scas
push
sarb
and
stos
xchg
jae
pop
sub
inc
xor
lock
sbb
cmp
xchg
lea
mov
repnz
lcall
out
std
shufps
int
xlat
gs
fcmovbe
out
mov
into
or
or
scas
or
stc
adcb
repnz
jge
dec
in
pop
rcr
ja
testb
inc
mov
push
push
push
mov
sbb
je
pop
mov
cmp
pop
mov
sahf
push
ljmp
in
stos
fldt
lds
or
sahf
mov
sub
stc
ds
adcl
add
add
incb
aas
dec
jb
cltd
or
scas
inc
lea
mov
jb
in
and
mov
lock
sub
push
and
pop
xchg
in
xor
iret
fdivrl
fnstenv
pop
into
test
xchg
fimuls
mov
adc
mov
xor
jg
movsb
ja
xchg
enter
mov
xor
push
dec
clc
faddl
push
clc
sbb
mov
loopne
push
jl
jp
adcb
xchg
push
mov
ss
or
mov
fldt
mov
and
mov
pop
sub
sbb
mov
and
cs
sbb
jo
aad
int3
inc
xchg
sub
sub
mov
dec
dec
rcr
jbe
push
and
fsubrs
call
call
and
test
sbb
int3
std
imul
jge
dec
xchg
adc
mov
stc
outsb
pop
cmp
lahf
add
test
and
jae
cld
fsubrp
pmullw
popa
cmp
fs
adc
data16
and
mov
mov
lcall
shlb
adc
push
fiadds
add
cmp
mov
nop
scas
jecxz
mov
arpl
mov
into
push
jmp
out
cmp
pop
xorl
adc
rcll
adc
xor
data16
mov
dec
in
daa
lds
call
mov
push
adc
jecxz
mov
adc
jnp
mov
aad
pusha
jno
push
jg
adc
inc
add
adc
xor
add
jns
leave
cmpsl
cmp
sub
jbe
inc
push
cltd
scas
mov
push
push
mov
dec
pusha
push
jg
call
mov
ds
pusha
mov
test
pop
and
insb
insl
clc
inc
lahf
jl
sahf
stos
xor
movsl
pop
xchg
mov
cmp
push
and
mov
ss
sub
dec
push
test
popf
mov
fbld
dec
leave
ds
lret
ja
and
call
stc
mov
in
fnstenv
imul
push
xchg
cli
pop
push
call
adc
sahf
lahf
mov
push
adc
lds
ds
shll
pop
push
mov
dec
xor
jae
fstpt
jns
cld
test
and
repz
xchg
adc
mov
fnstenv
sbb
push
int
les
xor
jmp
mov
loope
push
sbb
jo
mov
imul
mov
fstps
lcall
sahf
lea
in
stos
jle
inc
xor
ret
sub
mov
scas
insl
xlat
push
mov
jp
mov
jo
xchg
inc
adc
shld
push
and
mov
loop
gs
aas
mov
repz
fs
mov
pop
dec
icebp
jl
dec
inc
push
mov
cli
mov
and
push
xchg
pop
fs
sub
pop
jge
pop
mov
or
scas
mov
push
out
imul
lret
lock
stc
fldcw
push
scas
inc
mov
insb
pop
adc
mov
bswap
sub
fwait
push
dec
mov
mov
mov
movsb
ss
mov
xchg
cmp
jmp
push
mov
mov
aam
xchg
paddsb
add
sub
test
in
adc
addr16
jae
movsl
add
adc
pushf
adc
cmpsb
cli
push
lret
push
stos
data16
jne
aad
out
sbb
inc
fidivrl
ja
add
xchg
jmp
aas
xor
ljmp
data16
cmp
loope
fadd
cmc
adc
lea
ret
addr16
add
out
xchg
cld
mov
jno
psllq
mov
sub
sub
dec
orl
pop
fbld
mov
movsb
mov
stc
inc
push
push
and
rcrb
outsl
or
pop
mov
loop
mov
push
xchg
sar
jae
dec
pushf
and
add
fmull
in
mov
and
loopne
ss
or
sahf
in
into
xchg
imul
inc
jae
mov
or
xor
mov
mov
jg
cs
fsubrl
cmpsb
pusha
lds
xor
or
fsubs
push
mov
xor
jge
mov
inc
data16
aaa
push
push
sbbb
fcmovu
mov
iret
ret
iret
or
mov
mov
add
add
xchg
jne
and
nop
push
dec
pushf
jnp
aaa
ja
adc
mov
jb
dec
lds
pop
push
sub
outsb
movsl
nop
adcb
imulb
cmp
loopne
or
lods
inc
in
call
xor
xchg
mov
push
loope
ss
push
xchg
mov
pushf
ss
sbb
sub
filds
adc
push
leave
cmc
imul
movsl
aad
or
xchg
adc
mov
mov
add
xchg
mov
push
jmp
repnz
aad
leave
cmp
call
pop
aas
push
pop
push
pushf
xchg
ret
sub
in
jge
fadd
rep
fsubrl
cltd
scas
and
sbb
in
aad
into
cmpsl
shrl
lds
mov
popf
es
out
lods
out
outsb
test
mov
cmp
and
fs
mov
push
repz
lods
cld
and
movb
out
mov
pop
outsl
and
jae
imul
aam
xlat
pusha
gs
addr16
jmp
xor
xor
imul
xor
push
push
and
popa
jmp
gs
lock
test
push
mov
adc
cmp
add
adc
data16
lock
push
in
sub
dec
and
or
xor
xor
in
push
mov
cltd
adc
cld
mov
cmpsl
out
lret
repz
inc
hlt
icebp
fdivs
and
int
push
or
xor
insl
cmpb
orb
pop
lcall
shrl
jg
cmp
jnp
push
dec
mov
mov
testl
xchg
fistl
mov
mov
mov
dec
subl
mov
xlat
mov
test
lods
lahf
jo
push
cmpsl
scas
push
ret
clc
xor
xor
xchg
nop
lahf
inc
jne
in
jno
orl
iret
repz
or
mov
dec
jb
mov
cltd
mov
icebp
mov
add
test
adc
sub
movsl
ja
stos
repz
movsl
dec
int
mov
xor
jae
mov
jb
mov
cmc
xchg
push
loopne
pop
je
movsb
push
xor
test
and
in
mov
cmpsl
or
lret
dec
or
or
jae
stos
filds
push
cmp
adc
sbb
imul
xor
icebp
add
push
jp
call
mov
arpl
out
mov
test
pop
cs
or
inc
lea
and
jmp
fs
mov
mov
adc
sbb
pop
pop
in
xchg
mov
xchg
inc
dec
and
jge
andb
cmp
dec
aas
cmp
mov
cmp
xchg
pop
ds
in
int
or
sbb
stos
subb
push
dec
or
shl
or
aam
rclb
dec
daa
or
stos
test
fs
aas
or
sbb
jae
mov
ljmp
lods
mov
data16
sbbl
pop
push
push
or
jp
pop
or
sbb
push
jp
xor
jnp
loope
inc
stos
mov
dec
push
dec
fs
mov
sbb
push
movb
lret
mov
arpl
das
cld
outsb
mov
sbb
ret
xor
lret
or
pushf
xchg
pop
xor
jno
xchg
ret
or
ja
ljmp
sub
outsb
loope
dec
sbb
xor
pop
push
mov
fsubrl
sbb
sub
outsb
and
push
addr16
inc
mov
in
dec
or
test
mov
sarl
ret
popa
mov
dec
call
cmp
dec
mov
lds
mov
insl
jns
pop
testb
int3
jb
aad
sarl
add
cmp
add
jae
push
sub
adc
mov
call
cmp
inc
and
sbb
fadds
dec
adc
jge
inc
in
cli
mov
rolb
or
pushf
pop
mov
test
imul
push
dec
loope
dec
jb
incl
lret
and
sub
in
cmp
lds
mov
pop
mov
loope
repnz
ss
in
cwtl
sarb
dec
or
data16
mov
hlt
fstl
push
cld
out
iret
and
outsl
cmp
xchg
mov
scas
popa
pop
shlb
icebp
or
pop
cmp
addb
and
out
outsb
and
cmpsl
adc
mov
daa
sahf
jae
fiadds
mov
rorl
std
mov
stos
fcmovne
and
push
cli
ficoml
jnp
les
sahf
ljmp
jg
lds
push
xchg
fists
cmp
push
push
scas
pop
jle
dec
mov
push
dec
xlat
inc
pop
iret
push
scas
cli
mov
xchg
les
or
xchg
aas
xor
das
or
push
push
xor
pusha
movl
sbb
loop
repnz
jmp
ds
add
movsl
mov
aad
mov
and
add
add
adc
ret
int
fs
cmp
dec
lods
pop
or
movsl
dec
scas
fs
scas
xlat
pop
mov
push
out
add
stos
mov
rcll
and
insb
xor
mov
xor
push
mov
shr
mov
fs
addb
jg
fisubs
hlt
lock
loop
popa
mov
cmc
pop
orb
lahf
or
gs
cmp
cmpsb
mov
jge
outsb
push
enter
js
or
push
aam
jb
int3
mov
int3
imul
ret
and
mov
shlb
sahf
or
je
push
and
fsubrp
sbb
push
pusha
jp
xchg
aaa
pop
dec
push
and
lahf
cmp
subl
mov
out
jg
adc
jge
cli
adc
sub
jno
fisubl
push
inc
inc
or
cmpb
testl
imul
and
pop
mov
sahf
fcoms
imul
adc
sub
idivl
dec
cwtl
inc
sub
rcl
xchg
dec
jge
push
pop
pop
cwtl
into
jno
push
std
add
in
test
push
ror
leave
adc
push
mov
cmpl
stos
sbb
pop
out
push
pusha
jle
neg
bound
dec
sbb
mov
inc
cltd
arpl
dec
jns
testb
ss
mov
adc
push
mov
loope
jge
test
ds
jmp
imul
sarl
pushf
cmp
int
cwtl
add
cli
ljmp
fcoml
ja
xchg
push
push
mov
pop
call
mov
or
and
in
mov
mov
cmp
idiv
jns
inc
push
fbstp
adc
leave
out
mov
mov
inc
lret
jl
jmp
add
lea
push
inc
or
sub
jo
mov
xchg
sbb
enter
in
in
mov
std
outsl
xchg
push
xchg
sbb
imul
push
sbb
fidivrs
push
jg
sbb
xchg
mov
or
rclb
fmuls
xor
ja
sub
fiaddl
cmpl
jb
mov
mov
pop
mov
repz
jb
cmc
arpl
test
push
stc
and
jns
test
xor
loop
dec
push
mov
jno
mov
rcrl
es
sub
lods
pop
push
xchg
or
xchg
inc
mov
push
mov
add
xchg
int3
xor
stos
jecxz
jp
xchg
push
movsbl
sbb
xchg
push
push
fwait
outsl
fisubrs
mov
pushf
xor
test
xor
mov
push
cmp
bound
mov
fadds
sub
or
inc
push
aaa
nop
sub
mov
xchg
lods
fimuls
popf
je
sahf
ret
lods
lods
movsl
shll
or
and
int
or
inc
fmull
rorl
adc
adc
push
push
jg
push
imull
lods
sbb
xchg
jbe
mov
jno
jmp
mov
aas
cltd
xchg
push
sbb
and
and
xchg
mov
popa
mov
les
lret
iret
jb
push
jmp
mov
repz
aas
xchg
jl
lods
adc
sub
into
push
sub
pushf
mov
or
jno
dec
fimuls
fbstp
aad
add
push
push
mov
inc
add
fcoms
movl
ret
xor
mov
and
lcall
xor
fstps
lds
mov
cmp
or
mov
pop
lock
lock
xor
or
and
ret
jp
mov
push
mov
lea
in
sub
popa
sub
push
mov
cwtl
insb
jecxz
push
inc
inc
out
sbbb
mov
xchg
cmpb
push
sbb
lods
aaa
adc
lret
outsl
sahf
cmpsb
xor
fstl
inc
cltd
test
jbe
adc
push
lds
outsl
pusha
pop
xor
jmp
loope
loope
mov
push
sub
std
mov
jae
gs
sub
faddl
sbb
or
imul
sub
mov
daa
in
push
xchg
push
aad
pusha
mov
lret
invd
iret
enter
push
or
xchg
adc
sahf
adc
mov
jo
xor
jg
ret
lcall
incb
cs
sbb
xor
jnp
mov
inc
jbe
cmpb
dec
and
sub
inc
mov
testb
and
jne
int
div
pop
xchg
mov
sbb
adc
ds
adc
cmpsl
mov
gs
push
flds
add
ja
insb
xchg
inc
in
and
mov
dec
outsb
add
loopne
cwtl
fdivl
cmpsl
scas
jbe
ficomps
cmp
into
jb
cltd
in
js
pop
andps
cmp
inc
xlat
jg
lods
cmp
outsl
sub
xchg
shrl
mov
inc
in
fsubrl
sbb
dec
mov
adc
xlat
jns
out
jae
xchg
lret
push
mov
push
push
out
jle
jecxz
stos
rol
cwtl
leave
or
bndstx
push
or
add
xchg
inc
ret
cmp
dec
hlt
insl
jle
pushl
mov
sti
cmp
nop
or
push
mov
cmc
fsubs
movups
call
xchg
data16
push
mov
ss
xchg
push
xor
stos
adc
jmp
lret
sbb
stc
pop
sbb
xor
push
js
dec
ja
neg
push
rcrl
xor
sahf
lret
or
adc
or
fwait
push
push
mov
rep
lds
faddl
mov
and
mov
xchg
insl
scas
inc
dec
xchg
pop
mov
rcrl
and
dec
clc
jmp
cmp
and
aas
jns
int
inc
mov
push
orb
cmp
stc
notb
sub
dec
mov
adc
push
stos
dec
inc
pop
test
sbb
loop
jo
lods
pop
cmp
xor
mov
test
orb
incl
mov
lret
ret
mov
pop
sub
xchg
adc
hlt
adc
hlt
out
test
dec
xor
mov
fdivl
pop
xchg
movsl
push
sbb
inc
dec
pop
dec
jl
mov
hlt
mov
inc
popa
sub
xchg
ss
test
jns
add
adc
and
sub
cmp
not
mov
xor
inc
lahf
cltd
jo
pop
outsb
jno
rorl
inc
push
mov
sahf
lahf
jo
cmp
jnp
call
jl
mov
shll
mov
xor
inc
add
xchg
jge
mov
clc
or
cs
int
mov
mov
pushf
jo
ljmp
dec
sub
jbe
lret
movsb
shlb
cmpsl
lcall
in
cmc
xchg
popf
mov
cmp
or
data16
push
xor
or
pop
pop
mov
fdivl
xlat
inc
cmp
call
mov
jnp
shrl
add
dec
mov
dec
jecxz
js
sahf
in
repnz
ret
popf
add
or
pop
popf
jnp
nop
jmp
aas
add
in
gs
jmp
add
inc
add
cmp
cmpsb
adc
and
jmp
scas
push
pop
mov
mov
ror
push
popa
jne
pop
inc
movsb
or
adc
sbb
cmpsb
mov
mov
xor
fwait
in
in
data16
jmp
mov
inc
pop
or
sub
or
imulb
add
sbb
add
js
dec
ret
push
addl
pop
shrl
mov
add
stos
clc
hlt
mov
add
sbb
jmp
jbe
scas
and
jne
and
xchg
daa
pop
pushf
adc
jl
test
lods
pop
push
and
dec
ss
sti
and
cmpl
test
daa
xor
pop
mov
cmp
daa
push
outsl
loope
jbe
pop
cltd
lret
and
lea
xchg
sbbl
gs
jno
stos
or
and
pop
test
mov
adc
mov
push
pushf
and
mov
movsb
out
inc
out
xor
and
mov
inc
insb
pop
ds
leave
repz
test
and
out
jmp
mov
fsub
adc
inc
in
sub
icebp
jle
addb
cmp
and
xchg
mov
fdiv
sarl
cmp
inc
je
jg
add
dec
xor
mov
jnp
pushf
sub
dec
fbstp
outsl
outsb
jp
es
mov
bound
adc
aas
fadds
mov
xor
and
and
loop
das
repnz
dec
sbb
lret
enter
xor
jge
cmc
jg
xor
movsb
sub
cmp
ret
repnz
inc
ja
push
pop
cmp
fsubl
das
add
rorb
xor
mov
jl
cmp
pop
mov
popf
or
jecxz
mov
adc
test
fidivl
sahf
lret
sub
pop
int3
xorl
fs
fbld
cltd
fists
push
leave
stc
cmp
jo
xchg
or
fdivl
sub
dec
or
cmp
loopne
jge
jg
inc
xchg
jle
stc
cmp
xchg
sub
scas
add
int
pop
imul
mov
mov
out
push
adc
pop
pop
push
push
call
stc
outsl
sub
xchg
jae
or
dec
dec
lcall
lods
cmp
push
or
scas
push
inc
pop
jnp
inc
push
dec
outsl
sti
mov
in
jle
iret
jecxz
push
sbb
pushf
daa
jo
pop
cmp
mov
out
or
enter
ret
pop
in
lret
lfs
and
aaa
sbb
cmpsl
mov
or
pop
cltd
addr16
fsubr
mov
jmp
rcrl
out
icebp
mov
sub
inc
ds
std
shlb
xchg
cmc
ret
cs
rorb
cmp
in
das
ds
mov
jecxz
sub
push
mov
push
cmp
push
sbb
jae
xchg
pop
cmp
adc
in
cmp
pushf
pop
out
jg
daa
dec
repnz
in
sbb
fnstsw
fwait
xor
imul
xchg
call
sub
daa
pop
inc
data16
ss
push
aam
popl
jnp
cmp
xchg
and
mov
jnp
fwait
orl
mov
inc
cltd
xor
pop
mov
push
dec
adc
or
mov
aas
scas
arpl
sub
mov
mul
adc
ret
jne
mov
aas
mov
dec
cwtl
or
cmpsl
mov
iret
cmpl
lods
mov
cli
out
das
push
sub
push
push
imul
inc
call
lods
iret
fwait
daa
pushf
mov
pop
mov
sbb
in
mov
test
daa
xor
mov
lock
jb
fsts
push
adc
aas
push
lea
mov
stos
movsb
push
arpl
stc
xchg
jmp
sahf
and
cmp
xchg
add
xchg
lds
mov
je
cmp
into
jle
clc
scas
lds
and
mov
sub
jnp
inc
and
push
fs
mov
in
cmpsb
repnz
add
adc
repz
sbb
jle
sbbl
dec
push
mov
in
push
jg
int
out
or
mov
xchg
sub
sbb
and
mov
inc
aad
ret
push
and
adc
add
int
sbb
hlt
in
push
cmp
fsub
mov
add
hlt
jl
stc
lcall
push
stc
inc
pusha
movsb
dec
mov
idivb
cmp
adc
stos
adc
push
xor
shl
pop
jnp
inc
mov
arpl
lret
cmp
sbb
dec
push
jmp
ss
aad
xlat
stos
nop
scas
jecxz
xor
mov
lods
xor
pushf
ror
sub
outsb
mov
sub
or
enter
sbb
loope
mov
aaa
loop
adc
call
iret
push
stos
les
rolb
sub
jg
mov
push
jo
lods
lods
cwtl
adc
test
sub
mov
iret
jmp
outsb
mov
sub
repz
or
in
xor
and
dec
jae
shll
into
fsubrl
fisubrs
dec
inc
cwtl
repz
imul
xor
jns
pop
mov
imul
fdivl
xchg
dec
int
add
je
push
mov
popf
push
cmp
fsts
ret
pop
xor
add
or
jnp
adc
mov
fwait
mov
and
xor
sub
lret
push
push
enter
leave
scas
mov
sbb
ficoml
inc
xor
rolb
xchg
inc
xchg
xchg
popl
adc
xor
pop
cmc
mov
sahf
lret
jno
decb
pop
adc
jo
arpl
sbb
xchg
imul
sysret
or
aas
fsubs
sarl
adc
dec
les
popf
pop
cmpb
jnp
cmp
bound
add
add
arpl
in
mov
sti
leave
adc
mov
test
adc
cli
arpl
or
pop
arpl
mov
out
testl
ret
or
mov
xor
popf
divb
cmp
push
xor
mov
and
notl
push
xchg
outsl
lods
sbb
pop
int
dec
and
jnp
test
sbb
mov
rorl
mov
iret
in
jbe
mov
test
bound
mov
fwait
in
jecxz
cs
gs
inc
push
jb
xor
mov
pop
mov
inc
pop
cmpsb
mov
outsb
popf
dec
mov
sar
cmp
inc
addb
xchg
mov
jge
shlb
into
add
push
push
jmp
xor
les
pusha
nop
mov
mov
adc
mov
sbb
mov
decl
iret
sub
dec
cmp
hlt
mov
jecxz
xor
lds
xor
add
fcom
xor
sarb
xchg
into
mov
inc
push
mov
cmp
stos
mov
scas
dec
push
jge
or
int3
mov
fimuls
aam
shrl
inc
push
fwait
lret
jecxz
lcall
loope
or
pop
mov
adc
ficompl
pop
sub
in
dec
push
insl
sbbb
adc
xchg
lock
sbb
xor
hlt
dec
arpl
push
int
daa
xor
fisubrl
and
into
mov
push
inc
xor
cmp
fcmovnb
mov
arpl
pop
jecxz
fs
inc
mov
dec
add
push
cli
lahf
push
adc
push
pop
and
psubsb
sub
std
jle
mov
mov
or
or
out
lahf
adc
jnp
cwtl
insl
or
sarl
sub
imul
inc
adc
and
scas
scas
push
sbb
add
test
ror
lods
mov
jno
ds
lock
jbe
add
xor
mov
add
fcom
movsb
pop
repz
or
nop
push
clc
popf
je
xchg
clc
pop
leave
testl
sub
add
pop
pusha
cmpsl
push
mov
add
mov
pop
push
cmpsb
jg
ljmp
mov
mov
jae
insl
fadds
sbb
flds
mov
in
cmp
sbb
xchg
test
add
cs
xchg
pop
ja
mov
outsl
lds
stos
jge
and
jmp
popf
push
insb
stc
nop
mov
xchg
ret
mov
mov
loopne
and
push
xor
push
aad
mov
aad
push
repnz
xor
mov
jbe
push
ret
int3
in
roll
xorb
outsb
mov
mov
jge
aam
hlt
jae
imul
xchg
in
dec
cwtl
jno
setne
subl
mov
inc
jl
fcom
imul
xchg
mov
mov
cmp
mov
adc
sub
fdivs
mov
or
rorb
sub
scas
ror
loope
dec
xchg
into
dec
xor
repz
pushf
mov
pop
arpl
loope
roll
test
rcl
xchg
mov
jg
or
leave
test
pop
add
cmp
mov
sub
mov
imul
loopne
jecxz
movsl
hlt
adc
mov
scas
int
push
ljmp
orl
push
mov
push
ret
out
mov
mov
or
sub
adc
adcb
mov
adc
sbb
pop
mov
js
leave
pusha
dec
add
add
inc
push
js
sbb
pop
mov
test
push
iret
pop
stos
pop
mov
pop
push
pop
cmp
scas
xchg
lods
mov
hlt
sbb
mov
out
mov
xor
xchg
jg
fcmovnbe
sahf
dec
mov
ror
push
fisttps
sub
cwtl
jp
jo
dec
popf
iret
add
jnp
idiv
cmp
inc
pop
imul
xchg
mov
push
es
xor
aad
insb
ja
and
xor
popf
hlt
fxtract
nop
cs
shr
in
xor
out
xor
ret
stc
cmp
sbb
clc
push
push
popf
cmp
jle
mov
add
fldl
lahf
xlat
and
jne
jge
sarl
add
lods
xor
clc
adc
sub
aaa
enter
add
sbb
es
popf
sub
inc
idiv
push
mov
push
pusha
jecxz
scas
cs
mov
dec
sbb
inc
in
sub
shlb
in
jbe
add
sbb
pop
outsb
xchg
cmp
addr16
out
adc
ss
lods
xchg
cmp
loope
push
testb
mov
mov
cltd
out
xor
xor
jbe
pusha
fstps
xchg
loopne
repz
mov
mov
jecxz
jl
daa
jnp
jecxz
xchg
push
xchg
inc
mov
push
mov
cmc
cmpsl
or
jecxz
mov
adc
and
and
ja
scas
loopne
inc
fildl
imul
xchg
fld
lahf
stos
ljmp
mov
xchg
jmp
pop
icebp
dec
paddb
fists
mov
and
push
jae
ret
pusha
pusha
outsl
mov
mov
adc
sub
pop
or
lret
ret
sarb
sub
aaa
mov
out
jl
mov
sbb
and
mov
pushf
addl
das
jno
mov
xor
ds
arpl
aas
inc
jbe
insl
or
pop
sub
xchg
popl
fcmovnb
sahf
insl
mov
cld
gs
sub
sahf
and
imul
or
inc
out
xor
and
pop
or
sub
scas
hlt
cs
mov
data16
hlt
xor
fwait
data16
scas
scas
adc
ja
mov
enter
stos
gs
cli
pop
jo
lcall
idivl
je
stos
xchg
test
mov
pop
jge
mov
xor
test
xor
cwtl
inc
mov
ljmp
sub
inc
ret
scas
mov
push
pop
and
stos
cmpsl
cmpsl
and
cmpsl
lods
in
dec
stos
push
ljmp
pop
jmp
data16
mov
mov
clc
or
push
push
insb
wrmsr
mov
iret
or
jns
xchg
adc
fs
jae
jno,pn
add
xor
repnz
ret
jl
and
in
and
repnz
dec
jo
sarl
nop
in
pushf
out
pop
into
call
mov
and
lods
bswap
jo
or
movsb
or
mov
xchg
cltd
mov
lods
imul
mov
jb
inc
add
dec
dec
and
lds
push
or
cwtl
and
aas
nop
cltd
dec
std
sahf
iret
adc
scas
imulb
cwtl
pop
cmp
jb
or
repz
je
mov
mov
hlt
mov
cwtl
mov
testl
dec
aaa
jge
cld
movsb
cmp
into
adc
in
stos
xorb
cld
xor
lds
jne
add
lahf
jne
pop
fimull
inc
imul
dec
outsb
and
mov
fcoml
test
addr16
pusha
jecxz
dec
push
or
aam
mov
jmp
push
leave
xchg
add
xchg
xor
outsl
push
push
mov
inc
aam
pop
mov
jne
nop
repz
add
push
ss
mov
or
pop
xor
adc
mov
mov
iret
mov
aas
inc
xchg
faddl
inc
add
gs
in
dec
data16
mov
and
xchg
adc
loope
pop
pop
xchg
cs
lahf
sbb
fiaddl
das
sahf
jmp
push
lret
insb
cmp
mov
orb
mov
call
pop
adc
fcomps
int3
xor
jo
frstor
outsl
and
mov
xlat
leave
and
lds
test
sti
xchg
cwtl
in
scas
jmp
mov
push
dec
mov
push
paddb
mov
mov
dec
push
fs
test
outsl
inc
stos
daa
xchg
inc
js
les
push
addr16
aaa
mov
adc
jne
pop
sub
add
push
dec
or
xchg
pusha
lret
outsb
pop
sub
repz
push
add
in
add
inc
out
shll
fsts
pushf
nop
cmp
insb
dec
jo
fisubl
jle
mov
mov
sbb
jecxz
cli
sbb
adc
bound
mov
ljmp
daa
jns
stos
lahf
cld
push
imul
and
pusha
mov
push
or
mov
or
fbstp
lea
push
jmp
xlat
sub
sub
cmp
sub
and
into
inc
pop
test
ret
sbb
cmpsl
dec
or
xor
hlt
or
nop
add
es
push
in
xchg
push
stos
js
sahf
dec
and
push
inc
pop
pop
fisubrl
mov
bswap
out
ss
shrb
rcl
les
fstpl
push
push
nop
inc
mov
cmpsb
lods
lret
dec
jle
sahf
test
leave
lds
dec
cltd
fs
cld
mov
in
sarb
push
inc
pusha
lods
lcall
fadds
push
or
dec
fdivl
jle
ret
jno
adc
mov
stos
out
jnp
sub
xor
mov
pop
imul
rol
xchg
mov
xor
sub
enter
mov
adc
sub
lock
jo
jbe
pop
frstor
repnz
jbe
ja
cmp
or
ds
xor
cmp
jnp
inc
hlt
addr16
push
ret
cmpsb
sub
pop
repnz
sbb
fidivs
fwait
mov
loop
jae
adc
stos
aad
push
outsb
jecxz
pop
dec
inc
and
sbb
stc
or
rcl
sbb
das
pop
stc
int
adcb
sbb
dec
xchg
iret
mov
aam
stos
nop
pop
pop
pop
sbb
inc
pushf
test
push
mov
dec
pop
sub
stc
xchg
xchg
and
inc
test
ja
sarb
stos
jnp
mov
lods
test
test
loope
dec
mov
sbb
lcall
adc
jo
mov
loopne
ret
sbb
mov
xlat
inc
jbe
popa
mov
ds
pushf
les
repnz
jne
sbb
push
inc
mov
xchg
xlat
stos
push
fcomps
ss
xor
pop
insl
add
mov
sbb
in
sub
mov
inc
and
xor
mov
stos
inc
test
out
aam
imul
and
dec
xchg
repz
andb
pop
mov
roll
pop
or
add
mov
stos
sub
cwtl
jl
pop
push
test
and
add
mov
ret
into
inc
adc
sub
incl
cs
arpl
lock
cmp
std
xor
repnz
pop
call
lods
arpl
cmp
push
das
inc
lods
sbb
cmpsl
mov
xor
les
lcall
leave
ret
pusha
pop
adc
xchg
mov
clc
jbe
dec
dec
push
cli
loopne
cmp
push
or
mov
xor
bound
mov
sub
in
iret
pop
mov
icebp
ja
inc
jmp
jle
filds
pop
mov
mov
dec
into
aas
add
adc
adc
pop
fadds
add
mov
ljmp
shr
pop
cli
cmp
pop
jns
xlat
mov
test
push
pop
jb
ljmp
sub
ljmp
pop
adc
pop
sub
fwait
adc
dec
sub
test
inc
inc
repz
pop
jns
fdivp
imul
jae
repz
xor
mov
mov
mov
push
jle
push
cltd
push
insb
call
test
mov
in
and
mov
fmuls
cmpsb
lcall
or
imul
mov
je
push
pop
xor
dec
and
movsb
push
pop
or
and
inc
iret
push
sub
pop
jl
mov
push
aad
xchg
jbe
loope
mov
test
fmuls
xchg
xlat
stos
int
mov
icebp
add
jge
das
mov
dec
pop
aaa
push
push
shlb
out
ljmp
mov
cli
jne
push
push
jbe
stc
or
aas
lock
movsl
stos
andl
insb
icebp
jl
sbb
pop
adc
and
inc
ljmp
xlat
mov
inc
jp
or
mov
es
jnp
imull
in
lret
mov
std
imul
pop
xorl
aaa
sbb
mov
stc
or
dec
scas
cmp
lods
push
cld
lock
mov
cmp
push
push
sarl
pop
imul
push
xor
iret
lcall
loop
ret
dec
std
fidivs
jmp
fildll
test
cmp
pop
inc
addr16
mov
repnz
shll
xchg
stos
add
dec
mov
in
push
push
xchg
test
pop
lahf
mov
add
mov
push
cs
outsl
push
sub
mov
inc
add
push
std
popfw
mov
push
jne
fcom
and
les
movsl
jbe
pop
add
pusha
test
imul
ret
jl
xor
popf
cmc
stos
rcll
mov
mov
jnp
jg
jb
dec
sti
xchg
pop
jno
lods
mov
pop
mov
repz
ja
pop
dec
mov
sub
ss
xchg
cmpsb
mov
sahf
les
mov
ss
sub
in
lock
dec
shr
out
pop
cli
jg
and
enter
sbb
and
hlt
jno
push
cmp
mov
mov
jnp
jno
ljmp
sub
xor
mov
pop
push
repnz
xor
dec
enter
test
mov
pop
inc
faddp
mov
mov
subl
orb
ror
pop
out
add
std
lahf
ja
psubsb
mov
jmp
cmp
dec
cs
scas
rcrl
popf
sarb
add
outsb
cltd
rcl
in
or
inc
xchg
and
push
xchg
bts
lcall
fisubs
cmp
and
adc
ljmp
mov
or
push
adc
gs
or
jmp
adc
sub
push
cltd
xchg
cmp
adc
dec
and
movsl
push
adc
mov
jo
pop
icebp
std
xchg
adc
jae
out
ret
out
div
dec
fimuls
cmc
fisubrl
mov
mov
mov
add
sbb
mov
repz
mov
iret
bound
or
sbb
in
push
sti
and
and
loope
jno
lahf
mov
sub
jmp
mov
mov
flds
mov
jno
lods
dec
dec
sub
mov
mov
mov
ss
xor
sub
fdivrs
dec
movsl
seto
xor
repnz
lods
jge,pn
lods
jl
jg
and
dec
jns
addr16
lahf
dec
mov
rorl
movsl
xor
cwtl
test
out
dec
pop
jo
sub
sbb
add
jae
sbb
addr16
jno
push
jmp
out
pop
or
xchg
loope
cmp
je
inc
popa
aaa
cmp
insl
inc
call
inc
testw
push
aad
call
pop
in
add
leave
sbb
shlb
lods
repz
dec
pushf
dec
dec
dec
or
popa
jnp
xchg
and
push
sub
movsb
jnp
fldl
mov
jae
sub
cs
out
aaa
mov
iret
mov
mov
mov
pop
sar
shlb
mov
or
push
into
sub
mov
fstpl
pop
mov
push
aaa
pop
imul
jl
jno
jecxz
pop
fimull
pop
mov
push
cmp
sahf
cli
or
data16
mov
jbe
hlt
push
mov
jne
push
int3
mov
xchg
xchg
push
jl
bound
pop
mov
ret
pop
clc
push
or
and
outsl
scas
push
inc
iret
outsl
jmp
shrb
test
sub
mov
jge
int
fsub
dec
mov
inc
fidivrs
leave
sub
lods
dec
ret
mov
test
adc
in
mov
add
push
or
movd
and
push
push
shl
xchg
rolb
sub
jge
repnz
sbb
roll
jo
jg
xor
lcall
rorl
xchg
mov
mov
ds
into
xchg
cs
inc
addr16
cltd
repz
cwtl
inc
mov
fstl
int
mov
xchg
out
repz
fldt
sar
imul
jge
pop
jmp
shll
jp
dec
stos
cmp
popf
or
add
addr16
inc
arpl
push
mov
loopne
loop
int3
addb
sub
jl
mov
xor
gs
adc
jo
fisubl
add
movsb
into
mov
icebp
out
bound
jmp
jno
mov
outsb
add
pop
test
cmp
xchg
pop
cmp
mov
xor
outsb
popa
adc
push
adc
push
cmp
into
testl
hlt
push
dec
inc
daa
xor
cmp
scas
push
dec
mov
ds
loop
lret
push
fnstsw
mov
ficompl
inc
inc
jge
sbbl
cmp
popf
outsl
mov
jecxz
push
dec
dec
push
cmc
push
pop
pop
sbb
push
pop
pop
mov
jecxz
push
addb
negl
das
enter
aad
jecxz
int3
sahf
inc
aaa
in
stos
pop
xchg
aam
xor
mov
pop
or
cmp
inc
add
hlt
mov
add
jnp
push
mov
out
inc
leave
lret
inc
dec
xchg
adc
cmp
pop
adc
popa
dec
cmp
daa
dec
movsb
sti
inc
mov
jle
popl
fisttps
and
or
and
cmp
xchg
cmp
es
push
xor
jno,pt
jmp
mov
jp
lock
repz
push
mov
sbb
pushl
test
xor
push
add
add
xor
fwait
mov
mov
mov
mov
sbbl
repz
addr16
mov
push
stos
jae
dec
inc
xor
mov
xchg
jp
cmp
testb
and
jmp
test
ljmp
addr16
dec
clc
cli
sub
jb
dec
pop
push
adc
jno
hlt
ljmp
mov
int3
add
inc
outsl
std
adc
xchg
out
lcall
stc
mov
fwait
mov
stos
stos
dec
outsl
lret
xchg
sub
aam
leave
pushl
mov
call
scas
inc
movups
or
sti
dec
mov
adc
add
cmp
popa
filds
sub
pop
jecxz
insb
pop
dec
push
gs
loopne
lret
insl
cld
lret
sbb
out
in
xchg
out
add
test
icebp
aad
sub
mov
outsl
leave
scas
adc
adc
push
dec
je
and
adc
adc
cs
sub
pop
xchg
cmp
jnp
mov
repnz
test
cmc
inc
push
je
xlat
repnz
js
jo
cmpsb
bound
test
xchg
test
icebp
inc
jns
stos
add
idivl
inc
lods
fwait
rcrb
or
sbb
dec
mov
cwtl
jbe
jne
ret
and
loop
sub
or
lods
out
fdivrs
xchg
in
dec
jmp
fmull
and
jne
or
jae
jb
mov
lahf
outsb
jecxz
add
mov
add
lret
loop
and
pop
sub
fistpll
sbb
lods
jp
jb
or
xlat
sub
icebp
cmp
int3
aad
cmp
into
lods
sub
cwtl
xchg
inc
mov
popf
xor
adc
dec
ja
inc
jno
mov
hlt
repnz
idivl
pop
repz
xchg
mov
jae
lahf
aad
ja
lds
xlat
adc
xor
xchg
ds
out
movsb
xchg
out
cltd
xchg
fcom
sub
icebp
fcomip
mov
je
xor
xchg
jge
jp
fdivrp
outsb
inc
fwait
push
mov
stc
idivb
mov
jmp
cmp
scas
jge
jo
inc
fcmovbe
pop
lea
lods
loopne
sti
test
push
pop
dec
jae
out
inc
push
mov
jge
or
popa
add
xorl
je
rcll
pusha
clc
movsb
es
jnp
hlt
push
loop
jae
or
xchg
mov
pop
add
push
into
dec
hlt
inc
call
jle
fstpt
sbb
or
jnp
das
jb
dec
je
jp
and
scas
insl
pop
cwtl
xor
or
es
popa
aas
cld
xor
sbb
sti
loopne
jl
or
cld
sbbl
rorl
roll
push
dec
xchg
scas
dec
xor
jnp
sbb
out
into
mov
xor
jns
jg
xor
jg
arpl
add
adc
push
xor
leave
mov
xchg
sti
cmp
jle
mov
cmc
mov
outsl
mov
jns
int
mov
stos
sbb
inc
dec
ret
decb
sub
xchg
jbe
aas
jne
aam
addr16
ret
cvtpi2ps
xchg
ss
in
inc
out
add
clc
mov
pop
and
jge
mov
mov
test
stos
in
roll
cmp
out
aad
pushf
fstl
push
in
push
jno
pop
or
setns
or
xchg
movsb
jno
sub
cld
std
ss
aad
outsl
scas
loope
testb
in
test
mov
or
xor
add
test
call
sbb
or
mov
movsb
dec
scas
push
inc
xor
jb
orl
xchg
imul
inc
dec
aas
in
lock
mov
mov
mov
jno
test
test
stos
hlt
mov
in
adc
adc
movq
dec
lret
xchg
test
int3
push
xchg
cld
and
sub
or
lock
insl
fdivr
sbb
or
cli
in
jne
pop
push
cmp
das
pop
sbb
pop
aad
xchg
inc
jl
and
jecxz
std
mov
stc
inc
xchg
xchg
andb
into
xchg
xchg
cmc
aaa
pop
xchg
add
add
cmove
and
ficompl
dec
pop
mov
movsl
sub
out
xor
mov
add
cmpsb
xor
ss
dec
xor
jge
inc
dec
mov
mov
stos
and
pop
add
subl
push
lcall
mov
mov
ljmp
pop
pop
or
adc
mov
int3
aam
jnp
incl
rcll
loop
lods
xor
ds
mov
add
adc
xchg
imul
jmp
mov
dec
dec
nop
jmp
inc
fmul
mov
push
lret
js
insb
add
pop
ret
fwait
and
jne
das
lods
sub
inc
cld
and
push
test
sbb
xchg
loop
stc
aas
xchg
rcrb
rcl
adc
ds
dec
lock
mov
mov
mov
out
jmp
ljmp
ja
xorb
cmp
sarl
cli
out
adc
rolb
pop
loopne
xchg
cmpsl
outsl
fs
je
cmc
test
andl
shl
jecxz
shlb
aaa
mov
in
arpl
lea
adc
jl
pop
cwtl
shll
in
fwait
or
movsb
movsl
xchg
and
mov
mov
addl
movsl
pop
jo
or
xor
xor
mov
xor
dec
ret
sbb
adc
sub
fstpt
leave
cmp
mov
xchg
push
mov
mov
int
stos
mov
push
jbe
push
dec
and
or
decb
mov
ret
mov
fcmovu
inc
sub
dec
and
scas
pcmpgtb
cs
scas
push
jns
outsb
add
cld
sub
jo
pop
push
shl
sub
cmp
lahf
cs
lea
or
clc
jecxz
imul
lcall
adc
jb
mov
arpl
mov
mov
in
lcall
stos
loope
add
sub
and
jne
sbb
mov
popa
call
in
push
fists
repnz
out
xchg
es
stos
push
add
inc
mov
dec
adc
out
add
or
popa
aaa
xchg
cwtl
es
outsl
and
pop
in
mov
mov
or
repz
xor
fsubl
jl
addr16
cmpsl
sub
aaa
lock
in
fidivrs
mov
push
dec
roll
cmp
in
je
lea
xorb
cltd
dec
push
rorl
cmp
loope
add
mull
pop
fildl
fdivrs
aam
inc
fcompl
xchg
and
aam
mov
and
add
add
mov
pop
xor
pop
mov
adc
into
jmp
mov
jne
mov
and
test
push
adc
cmc
push
stos
adc
fcomp
xchg
mov
add
std
adc
nop
push
pusha
mov
jae
add
shlb
jbe
hlt
insb
hlt
shr
xchg
adc
jae
fcomps
or
jno
movsl
jnp
sub
aam
nop
add
push
lods
jo
lret
sbb
cmpsb
dec
cltd
jmp
shr
xchg
cmp
push
insl
mov
mov
inc
insl
aad
pop
jecxz
dec
test
pop
ret
mov
sub
mov
in
mov
lock
jle
and
adc
loopne
nop
or
xchg
fwait
gs
int3
movsb
xchg
inc
xor
pop
inc
lret
movsl
stos
fldt
mov
out
dec
shll
fwait
movsb
hlt
jns
imull
or
xchg
jle
dec
xchg
inc
std
adc
fbstp
stos
sub
sbb
repz
jb
add
mov
sbb
cmp
cmc
sbb
mov
pop
fisttpl
and
pusha
or
arpl
inc
call
xor
lods
mov
faddp
and
cmpl
mov
test
arpl
nop
jmp
lret
or
xchg
cs
cmpsb
loopne
add
rol
out
add
jp
and
mov
jg
jp
or
je
pop
adc
les
in
mov
cmp
dec
lods
mov
icebp
and
mov
int
pop
jl
nop
add
mov
cld
lret
cmp
push
xlat
push
loopne
cld
dec
mov
les
sub
iret
daa
cltd
push
cmp
xlat
push
add
pop
or
mov
jno
insb
pop
jb
cmpsb
repz
in
andb
jp
ds
fcmovu
imul
sbb
add
sbb
xchg
dec
cmpl
fldt
mov
jge
rcll
mov
cmp
jmp
xor
mov
lahf
outsl
es
xor
lea
xor
int
daa
test
dec
sub
push
xchg
mov
push
pop
test
mov
dec
mov
rorb
popa
mov
popa
std
mov
mov
pop
push
repz
mov
cmp
xor
testb
and
adc
push
mov
xchg
lcall
xchg
mov
jne
ds
nop
pusha
je
lcall
and
aaa
xchg
jle
lds
add
mov
sbbl
and
or
leave
cld
gs
adc
jns
adc
push
push
mov
xor
pop
mov
jle
mov
xchg
jmp
inc
cmpb
gs
and
mov
mov
mov
test
push
jns
iret
in
or
sub
pushf
adc
mov
cmpsl
add
rcr
fwait
mov
add
and
jl
sub
pop
cld
mov
push
jno
sbb
inc
dec
mov
addl
jmp
dec
push
sbb
add
out
push
movsl
inc
fildll
pop
lret
lahf
lock
or
jnp
mov
xor
xlat
scas
adc
stos
popf
xchg
sbb
pop
mov
loopne
adc
xchg
and
shrb
mov
je
push
cmc
add
adc
inc
mov
push
imul
jns
sub
jno
cs
and
js
mov
xchg
push
jp
stos
and
adc
es
lods
jmp
popf
or
mov
mov
sbb
lods
mov
popa
insl
fists
inc
adc
mov
xor
push
xchg
icebp
dec
sub
and
je
test
in
lock
fxtract
xor
mov
popf
andl
pop
lds
stc
loopne
repz
mov
cmp
adc
enter
adc
pusha
icebp
mov
lret
and
inc
enter
xor
jbe
js
leave
decb
cmp
sbb
jnp
push
nop
adc
fdivl
test
mov
jae
sbb
pop
and
mov
jo
sahf
les
mov
cmp
in
rcl
test
insb
fsubrl
pop
xchg
shlb
mov
jle
adc
mov
sbb
push
xchg
loop
gs
xor
daa
pop
jne
adc
lret
mov
cmp
test
sub
and
imul
push
xchg
sbb
xchg
or
mov
fdiv
inc
sbb
push
add
ja
mov
insb
push
fld
lcall
addr16
mov
fstpt
in
das
mov
imull
xor
aam
pop
push
insl
sub
sub
sarb
fstpl
pop
enter
andl
sahf
dec
add
mov
jmp
cmp
mov
idivl
and
and
jg
repz
fcoms
ja
adc
sbbb
pop
bound
xor
and
cmp
cmpsb
pushf
test
mov
das
loope
inc
xchg
cmpsl
shlb
testl
fidivl
jmp
aaa
dec
pop
mov
enter
loopne
clc
push
mov
xor
xor
jmp
decl
sub
int
adc
pop
sbb
cld
push
sub
pop
aaa
xchg
or
adc
mov
mov
push
sbbl
out
lods
loopne
push
lret
gs
dec
mov
dec
sbb
mov
push
fs
sub
mov
add
cmp
xchg
pop
jle
stc
addl
and
mov
sub
mov
sti
in
jno
add
int
xorb
mov
ret
xorl
lcall
insl
fwait
push
xor
cmp
lods
adc
dec
addr16
shr
imull
pop
add
xor
xor
jb
add
aas
and
add
xor
fmuls
or
outsl
dec
clc
adc
loop
pop
aaa
cld
test
cs
pop
xchg
ds
xchg
pop
ljmp
mov
mov
cld
into
addr16
jne
pop
std
adcb
shlb
ret
int3
out
nop
enter
fstpt
ja
dec
dec
adc
jnp
xchg
mov
or
test
mov
into
adc
mov
cld
inc
mov
push
adc
test
cli
lea
mov
and
loopne
xor
cli
iret
xchg
push
movsl
stos
lret
xor
pop
inc
mov
lcall
add
cmp
dec
mov
mov
jp
xchg
nop
jae
or
lcall
or
scas
xor
xchg
or
lcall
push
push
push
fadds
jg
push
orl
out
dec
scas
fisttps
out
xchg
jecxz
scas
cmpsb
or
xor
dec
out
outsb
cmp
mov
pop
push
lea
std
sarb
cli
movsb
shll
sarb
xlat
pop
mov
jns
sbb
lea
in
arpl
mov
loope
jmp
xchg
enter
decb
mov
push
out
xchg
and
stos
jecxz
pop
notb
das
jecxz
xchg
mov
es
dec
sbb
inc
dec
test
pop
add
sub
sbb
dec
xchg
jle
int
aam
push
push
leave
or
stos
icebp
dec
or
xchg
mov
xchg
cmc
int
add
movl
or
fs
or
xchg
sbb
leave
mov
scas
xor
rcr
hlt
aas
sub
aas
mov
fisubrl
outsl
mov
jo
dec
out
inc
aam
jmp
adc
cmp
sti
das
and
sub
add
adc
sbb
sub
aam
adc
mov
push
aaa
sahf
out
xchg
in
jne
and
ret
jbe
pop
add
lret
xchg
fdivs
push
fiaddl
icebp
icebp
out
out
jns
pop
test
scas
in
or
rcr
push
fadds
in
incb
lods
cmp
jno
aas
adc
outsb
jl
and
fldt
scas
pop
cmp
movsb
inc
lea
jmp
sub
sbb
out
into
int
jecxz
xlat
pushf
push
cs
ja
xor
sarl
adc
sbb
sbb
stc
push
jb
les
test
test
cmpb
xor
aam
fnstenv
adc
stos
add
loopne
xor
or
mov
xor
mov
sahf
inc
shlb
mulb
mov
sbb
lods
aaa
adc
dec
fstpl
lret
jae
ljmp
cmp
popf
push
pop
cli
mov
outsb
aad
adc
xchg
xor
sbb
ret
stc
add
push
cmc
dec
mov
pop
mov
sbb
in
xor
push
adc
adc
jns
xor
xchg
mov
cltd
ret
leave
jg
std
jo
jno
xorl
leave
scas
jae
cmp
lea
mov
in
lock
add
nop
in
push
iret
lret
pop
mov
jns
mov
aaa
repz
sbb
into
cltd
shll
in
cmp
dec
cmp
fimull
inc
mov
adc
or
push
xchg
arpl
jb
jl
jmp
xor
imul
inc
cmovle
dec
out
icebp
aad
add
pop
fdivs
icebp
cmpsb
xlat
xchg
ja
out
fcoms
mov
gs
mull
and
mov
cwtl
cmp
jp
mov
sarb
pushl
add
jo
out
sub
insb
jbe
adc
push
add
call
in
dec
ja
cmp
adc
or
mov
mov
mov
push
adc
xorb
add
cmpsl
mov
adc
inc
lret
and
fists
dec
jne
xor
mov
pushl
and
inc
push
push
and
mov
arpl
popf
sub
mov
movsb
adc
sarb
xor
cmpsl
fmul
or
fcomps
cltd
mov
mov
xchg
mov
xor
ds
mov
ja
adc
and
stc
mov
pop
testl
mov
jg
test
or
mov
sbbl
push
je
push
pop
push
mov
sub
inc
add
cltd
cmp
js
cs
fildl
xlat
xlat
rorb
xchg
pop
add
mov
jmp
push
cli
mov
fcmovnb
push
movsl
repnz
push
xor
pushf
test
insb
ss
jne
stos
mov
outsb
shl
mov
xlat
mov
add
clc
mov
push
mov
ficoml
les
sbb
pop
rolb
or
bnd
sbb
dec
cmp
out
aam
mov
adc
rcrb
aas
adc
xchg
mov
sub
fldt
cmc
mov
out
mov
adc
push
pop
inc
lcall
in
sub
mov
ss
or
jmp
push
int
cmp
fisttpl
jmp
sub
rorb
mov
daa
and
jp
js
mov
lgdtl
add
jno
mov
imul
sbb
pop
enter
aas
pop
fnstsw
inc
xor
push
les
stos
dec
adc
inc
shrb
ds
mov
jge
xor
push
std
xchg
ljmp
mov
loope
fisttpl
cmp
in
fsubrl
int3
xchg
cwtl
repz
add
iret
xchg
loope,pt
xchg
rolb
ljmp
lcall
and
jmp
daa
sbb
dec
negl
cmpsl
mov
push
std
push
and
pop
add
cmc
inc
cmp
mov
bndldx
cld
stos
add
xchg
push
jae
or
mov
mov
ljmp
popa
and
jg
mov
shl
imul
ljmp
addr16
add
out
fs
rorl
mov
addr16
mov
int
hlt
inc
xor
xor
xor
scas
push
mov
data16
add
adc
cltd
mov
sub
aas
iret
sbb
in
fisubl
mov
adc
cwtl
dec
das
pop
rol
mov
fisttps
mov
xchg
jle
inc
cmpsl
inc
mov
fidivs
es
lcall
adc
aad
pop
jl
jmp
cmp
cmc
sub
in
xchg
inc
ret
test
mov
mov
testb
sub
mov
loopne
jg
push
repz
add
mov
fwait
rclb
adc
xlat
jp
jo
fwait
push
stc
lret
andb
iret
daa
inc
lret
cwtl
push
and
jmp
cmp
sbb
adc
leave
xchg
pushf
cmp
repnz
in
jmp
cld
fwait
int3
mov
add
fidivl
lret
adc
pop
incb
push
addr16
mov
inc
or
repz
loopne
mov
push
scas
xchg
les
or
mov
pop
mov
pop
pop
mov
push
xor
xor
dec
inc
cli
xor
push
mov
jg
and
or
in
lea
inc
mov
jae
sbb
subb
dec
pop
test
dec
inc
daa
aaa
cmp
pavgb
jle
mov
divb
push
leave
jb
lock
mov
push
pop
pop
mov
mov
pop
pop
fildl
jecxz
push
test
icebp
rolb
dec
jbe
xchg
js
fucomip
sub
push
enter
mov
jp
outsb
or
cli
call
xchg
mov
mov
adc
loop
mov
gs
jo
xchg
pop
sub
cltd
sub
jo
sub
xlat
andl
cmpsl
dec
xor
std
repnz
mov
aam
dec
imul
das
cmp
mov
in
pop
adc
inc
popa
xchg
cmp
xchg
xacquire
mov
fsubrl
in
mov
xor
cmp
inc
push
jae
jecxz
cmpsl
cmp
ja
mov
xor
xchg
out
and
ja
jge
int3
pop
sub
cli
fwait
xchg
xchg
or
sti
lret
icebp
cli
scas
push
mov
ret
rcr
inc
cmp
jbe
sbb
out
cmpsb
loopne
dec
dec
in
ret
addl
daa
and
jbe
fwait
sbb
push
xor
or
push
xchg
or
mov
mov
clc
shll
mov
add
add
pop
xor
jle
shll
sbb
stos
addr16
out
loopne
fidivrl
ret
cmc
fwait
test
xchg
je
xchg
xchg
mov
dec
mov
leave
sbbb
sub
fbld
flds
xchg
and
pusha
jge
pop
sub
or
jno
push
push
bound
mov
xchg
pop
mov
fcmovbe
dec
enter
in
in
fldcw
sahf
imul
mov
cmp
xchg
in
mov
xchg
or
push
pusha
inc
sbb
cmp
arpl
call
repnz
bound
push
cmpsb
sbb
popf
repz
or
notb
sub
mov
add
fstl
adc
mov
aas
inc
scas
mov
orl
sbb
pop
dec
jb
push
mov
pop
pop
sub
sahf
hlt
dec
mov
enter
push
mov
and
sub
or
add
or
cmp
xchg
push
push
hlt
mov
ret
fwait
dec
pop
decb
movsl
loop
sub
dec
add
insl
outsb
xchg
and
pop
jge
aad
pop
addr16
es
mov
cmp
insb
daa
dec
mov
pop
sti
movsl
test
andb
xor
fistpl
lds
add
movsb
xchg
mov
jl
fidivl
int
les
or
xchg
inc
cmp
cli
add
imul
sbb
jo
pop
in
mov
inc
data16
fildll
loopne
mov
inc
sbb
jmp
xor
inc
pop
sbb
stos
ret
out
outsl
in
xchg
aad
stos
fsubrl
lock
fs
adc
movsl
aam
test
and
lcall
push
pop
pop
push
lcall
faddp
mov
jo
dec
add
jp
test
incb
dec
xchg
cmpl
out
insl
sarb
mov
pushw
popa
and
add
popa
dec
mov
and
xchg
std
pop
int
add
sub
mov
push
in
movsb
pop
pop
add
jg
sti
lret
inc
pop
pop
inc
adc
push
icebp
lahf
cltd
aas
and
clc
lock
adc
jno
fcoml
cltd
pop
pop
dec
sub
pop
imul
jp
mov
loope
ljmp
decl
int3
fs
mov
int3
hlt
dec
out
and
or
xlat
lcall
daa
pop
push
jns
sahf
ret
cli
sbb
mov
jns
or
and
mov
cmpsl
test
out
mov
push
and
lods
jo
inc
and
lea
fmull
xchg
sbb
and
cmp
ret
fnstsw
fmull
test
lock
mov
xor
dec
daa
mov
xchg
mov
mov
imul
call
lods
pop
lahf
shll
xchg
sub
test
dec
fs
lods
inc
fsubrs
jg
loope
outsb
or
cltd
cli
test
mov
loopne
mov
testl
mov
int
lahf
andb
shlb
push
nop
cmp
add
ds
in
addr16
loope
jb
data16
mov
cmp
inc
add
inc
into
sbb
stos
mov
xchg
mov
dec
insl
nop
mov
xor
ja
pop
and
xchg
dec
push
mov
in
inc
fisubs
lret
mov
ljmp
jno
repz
nop
lret
dec
jnp
push
das
mov
shlb
mov
in
mov
mov
data16
push
mov
aas
mov
jo
pop
dec
icebp
and
inc
push
xor
lock
pop
or
sbb
loopne
jae
inc
test
movsl
mov
inc
push
push
sbb
inc
popf
dec
ror
lret
mov
or
push
pop
addr16
fldt
sbb
or
mov
adc
jecxz
and
loop
mov
push
jns
pop
dec
xchg
outsb
cld
test
insl
add
ds
dec
call
pop
push
loopne
push
xor
cmc
push
dec
outsb
mov
ss
sbb
push
sbb
es
ss
pop
ja
pusha
cltd
outsl
xor
aaa
test
data16
xchg
mov
sbb
popa
bound
repz
xchg
out
rclb
daa
xchg
fistpl
pop
add
cmpsb
push
cmp
fstl
inc
push
std
and
adc
add
and
leave
pop
cmp
lds
xor
push
jmp
push
es
mov
push
mov
int3
es
cli
push
xchg
and
and
add
push
fcmovnu
je
xor
mov
cmp
and
les
adc
xor
imul
jb
out
jge
mov
and
mov
cli
add
mov
push
jb
mov
sbb
mov
mov
imul
push
jl
dec
rolb
sarl
xor
mov
and
fstl
call
icebp
add
cmpsb
push
inc
cmpsb
pop
push
and
or
loope
int
xor
in
cmp
lea
sub
daa
pop
in
xor
fsts
cmc
lret
jae
jg
inc
jge
lods
inc
lcall
adc
les
adc
add
loopne
adc
mov
add
scas
pusha
enter
sbb
xchg
and
fs
lods
test
repz
int3
fwait
test
mov
icebp
jmp
shlb
xor
test
xchg
cs
jns
inc
sti
ds
popf
daa
cs
dec
inc
mov
mov
inc
dec
inc
fisubs
in
nop
repz
push
xlat
mov
xchg
or
aam
inc
sub
clc
add
out
loope
shl
xchg
mov
lret
jae
lods
xchg
call
adc
add
into
pushf
test
rorl
loopne
stc
loopne
repnz
dec
mov
jbe
mov
and
gs
inc
push
xchg
sub
loop
jo
stos
jae
mov
dec
mov
dec
pop
clc
mov
or
xor
mov
fisubs
push
or
push
push
sti
or
and
mov
in
mov
hlt
rcrb
aas
mov
dec
std
xor
das
lea
and
dec
jno
or
or
mov
adc
popa
add
or
mov
pop
pop
mov
jne
in
or
xor
mov
mov
arpl
inc
jae
jne
mov
cs
inc
push
fdivr
push
jno
imul
dec
pop
mov
mov
jge
inc
adc
mov
enter
jbe
jo
repz
lock
jae
je
inc
in
lahf
sub
dec
xchg
clc
and
mov
repz
or
hlt
xor
or
daa
jg
rclb
out
jae
test
daa
mov
xor
xlat
ret
lods
repnz
iret
push
fnstenv
mov
sbb
cld
dec
cmp
fimull
add
jp,pn
iret
dec
daa
clc
cmp
outsb
sub
and
loope
xchg
add
push
jmp
jp
fs
test
orl
inc
dec
adc
loopne
xor
sbbb
flds
jae
dec
jb
outsb
sbb
fnstenv
loope
add
cli
cwtl
rcr
sbb
pushf
sti
imul
pop
sarb
inc
add
dec
loopne
fsts
lret
popa
xchg
xor
imul
pop
stc
sub
data16
cmp
pop
testl
jge
push
mov
in
cmp
jge
call
repz
rcl
rorb
sbb
jo
inc
mov
gs
test
xor
cmp
xor
cmp
aam
arpl
repz
sbb
push
jbe
jecxz
stc
int
pop
mov
xchg
aaa
ds
sub
mov
or
xor
jo
lahf
add
inc
fildl
movsb
shrb
scas
push
lods
sub
push
lock
mov
hlt
loop
arpl
pop
fidivs
das
add
std
mov
inc
out
jnp
sarl
pop
ret
mov
add
repz
rcl
xlat
stos
inc
mov
push
std
inc
mov
ret
insl
pop
push
aaa
imul
enter
mov
sarb
jecxz
xchg
rcll
neg
scas
pop
add
stc
xorl
stos
jae
mov
mov
pop
or
divl
sub
jnp
jmp
neg
shlb
repnz
jp
test
or
aad
push
mov
inc
outsb
cmp
test
push
xchg
sub
arpl
into
or
cs
push
fbstp
out
sbb
cmp
out
xchg
das
loope
rcrb
shll
mov
call
jo
xor
inc
or
dec
rcll
pop
inc
and
icebp
dec
or
add
aas
bnd
mov
push
push
aaa
bound
or
scas
cmp
mov
adc
cmp
icebp
hlt
xor
add
adc
push
jbe
pop
mov
inc
jl
sbb
push
mov
jbe
aas
fwait
push
push
mov
mov
shl
push
ret
pop
mov
adc
test
mov
insl
std
xchg
lret
or
jle
mov
dec
jecxz
push
push
or
movsl
fsubs
pop
adc
movsl
and
jmpw
lods
orl
fsubrl
les
mov
jnp
push
mov
cmp
fistl
fisubrl
jae
add
loopne
cmp
add
cmp
xchg
leave
decb
mov
stos
jbe
and
jmp
sub
jne
mov
scas
stc
xchg
pop
cs
insb
data16
test
int
mov
push
stos
cmpsb
add
dec
mov
or
or
mov
and
push
pop
cmp
es
lds
in
xchg
cmp
test
xchg
lahf
jl
mov
or
pop
mov
cmp
outsl
fwait
mov
push
negb
nop
and
mov
pusha
in
push
mov
sbb
xchg
lods
mov
scas
inc
pushf
push
pusha
add
shlb
sub
daa
ret
popa
cli
add
mov
and
cmp
xchg
inc
scas
rclb
push
cmp
mov
arpl
jno
divb
cmc
ss
shr
jbe
imul
jle
cwtl
xor
jb
mov
shll
decl
fsubs
jp
repz
daa
fbld
test
add
xorl
dec
adc
and
pushf
adc
xchg
adc
adc
fwait
sbb
xor
mov
inc
push
std
mov
sub
sti
lcall
fildl
push
les
out
pushf
push
pop
inc
daa
jg
pop
arpl
cmp
adc
add
jb
testb
cwtl
mov
mov
cmp
cmp
ds
rcrl
sub
xor
dec
jae
leave
in
cmp
aas
mov
mov
iret
pushf
movsb
adc
pop
das
sub
idivb
cli
dec
mov
out
add
std
pop
mov
mov
dec
jle
insl
rol
pushf
loope
jno
push
into
pop
fists
mov
mov
push
repnz
insl
add
adc
add
sbb
outsb
push
das
insl
dec
addr16
scas
push
shrb
sahf
vpshufd
mov
and
movsb
lods
stos
pop
std
fs
inc
pop
rolb
inc
dec
sbb
mov
rcrl
roll
inc
cli
cltd
mov
push
outsl
iret
ljmp
imul
dec
add
xchg
jle
or
dec
lret
inc
ret
adc
popa
sub
inc
mov
add
outsl
stos
push
pop
aam
sub
mov
inc
mov
push
loop
add
sbb
and
pushf
add
into
mov
mov
cltd
js
nop
test
inc
lods
fstpl
sub
adc
sub
xchg
into
xor
scas
lcall
mov
and
xlat
test
lods
or
jmp
push
jae
out
lods
and
clc
dec
fmuls
mov
inc
jnp
jg
data16
jp
scas
int
inc
add
mov
adc
adc
leave
mov
cmp
cs
jne
cwtl
imul
and
movsb
shll
adc
dec
xor
and
and
clc
popf
push
movswl
movsl
pusha
cli
loop
or
cmp
dec
inc
gs
cmp
ljmp
mov
mov
sti
rorl
fisubl
lods
stc
nop
xor
cs
xchg
jecxz
js
jae
sahf
inc
pop
outsl
pop
xor
dec
loope
cmp
or
pop
cwtl
dec
sub
dec
pop
jmp
cmp
dec
movsl
fimuls
cmp
es
adc
sbb
add
push
shrl
add
pop
addl
jno
sti
and
mov
ljmp
or
add
pushw
js
inc
das
into
add
stos
ja
int
mov
lods
iret
xchg
cwtl
in
rorl
fcompl
jecxz
enter
push
and
jp
jae
fadds
and
mov
add
sti
jmp
movsb
mov
dec
and
fmul
faddl
or
iret
leave
lret
and
and
dec
rcrb
mov
out
shll
xchg
jb
xor
mov
in
dec
aam
mov
nop
movsl
ss
lods
out
fs
cmp
lcall
cmp
iret
test
sbbl
mov
repz
in
jnp
pusha
add
or
inc
sti
sub
das
leave
lret
leave
pushf
lock
push
lcall
nop
iret
mov
xor
cmc
pop
xchg
insb
mov
iret
jle
fdiv
add
cltd
and
out
and
lods
pop
repnz
mov
jmp
jg
pop
mov
stos
fwait
sub
sub
xchg
adc
int
outsl
lods
andb
jae
add
push
mov
out
data16
adc
call
mov
xorb
fwait
jbe
test
pop
pop
shlb
insb
sbb
push
sbb
cwtl
sbb
jge
insb
jecxz
xchg
push
push
pop
popa
push
or
mov
mov
test
add
cmpsl
xchg
loop
js
inc
cmp
adc
cmp
in
and
mov
sub
les
mov
xadd
ror
shlb
ljmp
fnstsw
cmp
cmp
enter
adc
inc
aaa
negl
gs
mov
adc
jg
pop
outsl
sbb
mov
stos
mov
gs
jnp
into
loop
push
push
mov
je
xchg
mov
mov
lock
in
rol
sbb
lea
cmp
add
adc
imul
mov
sub
sbb
inc
js
fisubrs
cmp
mov
mov
jle
pop
stc
add
jecxz
test
push
mov
iret
mov
dec
sbb
push
outsl
andb
mov
loopne
sub
jne
pop
es
push
sub
jo
popa
or
push
mov
jecxz
mov
movsl
cltd
sub
decb
leave
adc
popf
xsavec
decl
xor
dec
dec
int
push
leave
leave
insb
pushf
cmp
call
lahf
dec
xor
pop
scas
mov
jg
adc
mov
stc
add
lods
test
in
mov
daa
clc
out
es
xor
xor
mov
aam
std
sbb
cwtl
int3
jns
sbb
cmpsl
mov
push
pushf
xchg
mov
pusha
lods
dec
out
cmp
js
mov
aas
add
add
mov
cmc
adc
mov
mov
dec
jge
int3
inc
ljmp
xchg
sbb
mov
or
add
mov
sbb
movsb
fsubrs
mov
mov
or
aam
test
test
and
ret
mov
lods
test
call
test
xchg
push
sub
mov
lods
push
cld
xchg
add
je
cmp
aam
mov
jl
adc
fdivrl
inc
insb
lock
loope
jmp
jecxz
ljmp
xchg
into
sub
loope
push
aas
and
out
jle
dec
xor
push
mov
mov
mov
push
icebp
jae
lret
mov
stc
iret
sbbl
shl
mov
cld
add
mov
loopne
xor
jecxz
shl
test
sbb
xchg
push
fsts
jmp
adc
jns
rcll
sub
sbb
xorl
mov
sub
pop
inc
nop
not
scas
jns
dec
mov
mov
mov
out
insl
jg
xor
xor
or
mov
or
and
add
xchg
add
push
add
or
int
jmp
adc
test
cmp
push
add
test
sbb
jns
fisubs
mov
imul
inc
pop
lea
pop
mov
push
pop
jl
sbbl
pop
pop
mov
inc
pop
add
aas
mov
cmp
out
add
into
imul
adc
cmc
icebp
pop
cs
fs
inc
ret
daa
sbb
out
inc
aas
loope
adc
xchg
sahf
fs
repz
sbbb
fdivl
xchg
xchg
push
aaa
mov
sar
loopne
and
subl
sbb
rorl
outsl
rorl
rclb
inc
out
push
sbb
xchg
dec
ds
les
xchg
and
xor
mov
push
cltd
nop
xchg
and
addb
inc
pop
xorb
iret
cli
insl
mov
jg
inc
loope
sbb
xchg
fmuls
mov
bound
sbb
cmp
movsl
repz
mov
enter
cmc
out
inc
out
sub
out
fs
sarb
inc
movsl
xchg
dec
pop
int
mov
arpl
fiadds
in
sahf
inc
cld
cmp
mov
in
xor
cmpsb
dec
data16
mov
and
lea
or
adc
add
mov
cld
popa
leave
stos
in
repz
sub
jge
mov
popf
push
mov
call
mov
mov
mov
mov
pop
dec
int
fsubl
movsb
je
dec
cmp
jl
xchg
loope
mov
xchg
sub
inc
push
out
add
in
aam
lahf
jnp
add
movsl
inc
dec
stos
sub
xlat
push
and
std
imul
popf
test
fiadds
cmp
jmp
rcl
mov
nop
pop
jl
cmp
int3
mov
iret
mov
pop
adc
add
loopne
pop
jp
cmpsl
jb
in
sbb
push
cmp
cld
loop
loopne
mov
dec
shlb
sub
push
mov
sub
pop
lds
add
daa
hlt
lock
sti
loopne
mov
xchg
movsb
out
or
cmp
test
sbb
cmpsb
jo
push
repnz
movsb
ret
mov
xchg
mov
mov
or
in
mov
mov
addr16
inc
loope
or
push
pop
ss
ds
inc
in
add
and
sbb
cmc
aad
outsb
mov
dec
xor
push
mov
mov
mov
dec
out
cltd
mov
ret
sub
push
fwait
stc
ja
push
cmpsb
push
cwtl
test
rorb
stc
xor
fwait
mov
arpl
decb
pop
mov
xor
dec
pop
pusha
rclb
push
mov
ja
cli
das
insb
mov
or
cmp
inc
or
lret
sbb
sbb
jo
cmp
cmp
and
daa
notb
xor
push
jo
jno
add
cmp
mov
cmc
rclb
scas
lods
gs
daa
sets
subb
and
and
sub
dec
mov
mov
addb
loope
bound
push
adc
jl
and
jp
mov
pop
mov
daa
mov
cld
sbb
sub
mov
push
lcall
push
mov
xor
jo
leave
jp
sbb
ja
outsl
pop
movsb
cmp
fldt
ja
jnp
test
adc
add
mov
outsl
mov
aaa
mov
leave
cltd
jle
ja
fld1
push
mov
adc
pop
sbb
xor
push
fs
cli
xlat
fistpll
and
mov
fcoms
jns
pop
mov
mov
je
add
xchg
leave
cmp
fdivl
add
out
inc
popf
cmpsl
add
and
or
push
push
movsl
ds
pop
loopne
lock
mov
sbb
aas
mov
sarl
mov
jne
cmove
sub
xor
sub
out
in
inc
pop
mov
cmpsl
repz
and
jbe
sub
ljmp
out
test
imull
adc
jle
cmp
arpl
in
jae
add
dec
mov
and
push
movsl
lret
stc
fstpt
insb
jecxz
lret
cmp
bound
and
cmp
sahf
lret
in
jb
daa
xor
mov
sbb
adc
dec
fcmovbe
jnp
or
mov
xlat
sub
fdiv
push
add
aam
lahf
adc
lahf
and
lahf
jnp
lahf
dec
jbe
jb
mov
rcrb
cmp
dec
xchg
cmp
cmp
orb
mov
aas
testl
jbe
dec
imul
in
testl
mov
inc
cwtl
xchg
fldcw
mov
and
fildll
jl
loopne
add
inc
bound
jl
ret
mov
rorb
repnz
sbb
pusha
loop
add
dec
faddl
out
fsubrl
inc
loopne
dec
inc
mov
mov
stos
addr16
mov
mov
dec
push
clc
je
out
out
cmpl
ds
pushf
icebp
mov
orb
pop
jbe
lods
mov
and
lret
pop
push
and
pushl
sub
enter
mov
sti
imulb
xchg
mov
xlat
aaa
sbb
mov
dec
shll
xchg
sbb
or
sub
sbb
stos
mov
scas
jg
mov
pop
mov
pop
bound
jb
aas
jns
or
cs
pushf
add
xchg
lcall
mov
push
mov
pop
push
cltd
and
inc
sbb
and
lods
in
dec
out
mov
jp
dec
cld
nop
lods
xor
loopne
lds
mov
cmpl
mov
fsubrl
fidivrs
add
es
adc
add
adc
std
xchg
push
mov
and
loope
test
mov
jle
std
dec
ret
xor
pop
testl
xchg
xchg
sarl
aas
sbb
pop
in
ror
mov
in
dec
aas
in
insl
andb
xchg
xor
es
mov
addr16
pop
inc
in
test
les
adcl
call
pusha
push
jns
out
cmpsl
sbb
jl
cltd
lret
fisubrs
push
adc
scas
cmpsl
inc
xchg
mov
and
sahf
jmp
pop
gs
cwtl
dec
movsl
and
sub
mov
icebp
addr16
push
xchg
call
cmpsl
mov
insb
test
sbb
jmp
sbb
adc
ja
scas
lahf
decb
dec
sub
push
mov
insl
data16
mov
gs
fdiv
cmp
mov
inc
mov
mov
cli
and
in
mov
repnz
xor
and
fwait
shll
lds
sti
pusha
mov
sub
mov
fs
sbb
mov
insl
mov
xchg
pusha
stos
inc
test
repz
adc
test
daa
cmp
fcomi
ret
and
mov
mov
shll
adc
jecxz
insb
sbb
sbb
imul
mov
cmp
std
or
push
test
pop
ss
mov
add
sbb
or
adc
into
jne
leave
popf
cld
jmp
pop
into
xor
dec
out
pmullw
and
add
mov
pop
pop
cld
fdivrp
mov
inc
xchg
jbe
xchg
es
out
mov
cmpl
out
bound
out
sub
and
sar
jmp
cmp
mov
mov
pop
in
fwait
or
inc
jb
inc
jb
orb
icebp
negb
repz
cmpsb
aam
lock
sub
sarl
mulb
out
mov
ja
dec
mov
jae
nop
jno
mov
imul
sbb
loop
pop
mov
xor
ds
push
sarb
pop
call
scas
adc
inc
pushf
inc
cltd
and
mov
mov
out
je
cs
repnz
inc
push
pop
cmpsb
test
rcll
push
out
push
scas
cmp
mov
inc
mov
jl
mov
cltd
or
cmp
pop
test
xchg
push
xorl
sbb
xor
inc
pop
dec
in
push
loope
jecxz
and
dec
mov
push
pop
and
ljmp
fiaddl
cmp
stos
mov
cmpsb
and
mov
adc
jb
adc
pop
cmp
mov
add
pop
cltd
mov
xor
shlb
adc
push
cmp
lret
xorl
clc
pop
pushf
pop
aas
fildl
or
testb
inc
sub
push
movl
pop
sti
mov
les
popf
lock
in
adcl
enter
cmp
pop
jecxz
pop
lea
jae
cmp
adc
or
lahf
cmp
dec
cwtl
jp
fimuls
adc
std
loope
cmp
mov
cs
mov
cmp
movsl
int3
sub
loope
mov
fldt
cwtl
call
scas
sub
lods
xlat
je
test
lock
stos
pop
pop
fadds
mov
pop
shr
lods
cmp
repz
mov
sbb
in
mov
ret
pop
and
pop
inc
mov
mov
sbb
sbb
popa
jle
xor
mov
imul
push
inc
test
cmp
es
pop
cmpsl
or
mov
mov
inc
mov
pusha
push
pop
mov
loop
pop
xchg
cmp
and
cmp
cmpsl
stos
sbb
into
out
or
mov
mov
lahf
or
fwait
pop
loop
call
dec
out
jno
push
cmp
cmp
sbb
jo
cld
xor
imul
in
inc
repz
cltd
sub
fiadds
push
sub
mov
outsb
sbb
nop
sub
pop
inc
jge
je
jnp
or
adc
fistps
pop
aas
sbb
shll
ret
pop
adc
cli
in
subl
lds
cmpsl
in
inc
push
cmp
jae
in
mov
xchg
add
sub
xor
pusha
jl
push
xchg
xchg
int3
fsin
add
jnp
cld
mov
jno
pop
xchg
fidivrl
xor
mov
repnz
push
movsb
mov
pop
int
xchg
inc
cld
dec
inc
fildl
mov
xor
rorl
or
js
lret
lods
test
pop
mov
mov
sbb
loopne
cmp
arpl
stc
aaa
mov
and
mov
jae
add
push
jmp
cmp
push
cmp
inc
sub
inc
sub
pop
sub
js
push
imul
push
fptan
push
mov
cwtl
and
fsubp
pop
cmp
cmpsl
insl
or
movsl
mov
xchg
xchg
or
sbb
enter
cmp
mov
movsb
push
sbb
or
mov
insb
addr16
cmp
lret
mov
cwtl
test
in
xchg
loopne
and
jle
popf
outsb
xchg
das
out
adc
lcall
fidivs
adc
sub
xor
inc
push
pop
mov
push
imul
andl
mov
xlat
add
out
lods
sub
out
add
popa
inc
mov
fidivl
aas
cld
clc
mov
loopne
test
lret
or
mov
jp
push
xchg
xchg
imul
in
dec
xchg
sub
mov
mov
rcr
aad
mov
inc
lock
insl
fcomip
pop
popa
pop
adc
xorb
lret
cwtl
jo
es
scas
add
jg
test
ficomps
add
les
jne
inc
mov
repz
cld
xchg
pusha
jnp
sub
movsl
mov
and
pop
sbb
loopne
adc
sti
mov
lahf
pusha
xor
inc
and
insb
push
test
jns
leave
push
push
xchg
jle
bound
adc
jne
imul
jecxz
scas
fstps
hlt
cmp
mov
mov
mov
pusha
addr16
filds
push
negb
mov
sub
sbb
cmp
jnp
les
jp
ret
lods
shr
jl
mov
jg
mov
cmp
sti
cmp
cmp
subb
lock
call
add
xchg
sbb
push
jmp
iret
or
sti
mov
int3
jbe
enter
loope
sbb
jg
je
out
xor
mov
pop
cmpsb
dec
fisubs
mov
into
sete
movsb
adc
jno
sbb
sub
aaa
sbb
sub
movsb
imul
pop
shr
loop
pop
xchg
fidivrl
add
test
in
push
pop
popf
push
inc
add
cmp
test
dec
adc
lock
repz
mov
or
mov
pop
daa
sbb
rcrb
jge
fcomps
rorl
mov
rorl
dec
movsl
pop
add
std
sbb
jo
pop
repz
dec
lds
in
inc
mov
mov
xor
testl
xor
into
cmp
cltd
and
mov
mov
add
icebp
jno
push
dec
add
dec
push
inc
loop
fucom
adc
fwait
xchg
les
rcrb
inc
xchg
cmp
pushf
xchg
lcall
outsb
dec
je
call
add
sub
adc
or
sub
push
mov
test
lods
fidivs
lea
add
scas
shll
jb
fcoml
xchg
out
jns
and
sbb
out
or
mov
dec
mov
push
or
insb
mov
cmp
in
out
and
jp
xor
mov
push
cltd
insl
mov
inc
lds
push
ficoml
adc
loope
out
movsb
and
popf
cmp
insl
xchg
mov
xlat
outsl
xchg
adc
int3
stc
and
out
mov
pusha
sarl
push
and
mov
jmp
jae
pop
nop
rorb
mov
fs
lahf
rcl
dec
test
push
push
lcall
xchg
xlat
sahf
jle
add
adc
enter
push
jecxz
movsl
outsl
push
cwtl
jle
mov
js
ret
insl
push
insl
xor
aas
icebp
cmp
cld
sbb
or
loopne
js
les
inc
pop
xchg
rcr
jp
mov
cld
cwtl
pushf
fs
rcrb
test
scas
add
dec
jle
faddl
pushf
jmp
xor
call
jbe
jmp
mov
or
lods
mov
xor
add
in
jg
test
daa
or
xchg
int3
inc
imul
cmp
test
addr16
jb
stos
mov
lods
push
stc
jb
adc
sub
scas
push
pop
cmp
push
in
into
pop
inc
jno
repz
dec
push
sub
clc
cmpsb
add
or
xchg
or
scas
inc
ja
mov
cmp
pop
push
test
out
pop
or
mov
xchg
mov
dec
cmp
mov
je
faddl
in
adc
add
cmpl
popa
aas
push
ljmp
dec
out
pop
repnz
pop
in
orb
sub
repnz
das
ja
lea
xorb
addr16
pop
lret
cmpsb
mov
mov
int3
xchg
sbb
cltd
pop
shll
dec
inc
mov
fbstp
mov
mov
adc
or
insl
scas
or
in
mov
aad
inc
shlb
add
adcb
and
stos
xor
mov
add
sub
push
xchg
cli
ret
rorl
mov
mov
punpckldq
push
incl
loope
mov
fwait
xchg
add
stc
or
shrl
mov
jae
jae
test
sub
sbb
cli
add
xor
rclb
add
sub
xor
inc
in
mov
mov
loope
xchg
fistps
sub
xchg
cmp
f2xm1
fstl
inc
jne
mov
stos
data16
jle
test
add
xchg
ja
sub
sbb
or
in
cmc
bound
push
pop
cltd
xor
mov
ja
mov
fstps
mov
shlb
fidivl
mov
addb
xchg
test
xchg
jno
adc
aad
pop
xor
cmc
pop
xchg
add
cmp
pmuludq
cmp
stos
cmp
movsl
int3
test
imul
jle
pop
sbb
movsl
movsb
aas
xchg
xchg
push
fimuls
addl
adc
add
enter
loopne
shrb
pop
fdivrl
out
imul
pop
scas
xor
inc
das
pop
adc
das
dec
je
addb
xor
sbb
shll
int3
enter
lret
cwtl
fistl
mov
inc
or
hlt
sub
mov
fs
mov
sub
jle
jns
or
mov
push
outsb
enter
pop
sub
incb
push
xor
and
mov
push
add
mov
jg
mov
push
xchg
pop
jp
mov
mov
fdivrl
lds
mov
aad
daa
mov
stos
out
and
xchg
ret
sub
mov
sbb
sub
cmpsb
popa
scas
test
jbe
mov
and
mov
pusha
stc
out
test
sbb
push
cmp
inc
or
add
movsb
add
or
aam
mov
adc
call
dec
fsubl
mov
push
push
outsb
xor
aam
jno
mov
xchg
push
outsl
and
test
addr16
dec
sub
imul
scas
fcomp
rcl
ret
pusha
lcall
inc
call
cltd
mov
sub
cwtl
mov
shll
adc
adc
jne
mov
incl
push
sbb
int
cmp
insb
decl
addr16
sub
fcomps
testl
mov
xchg
lahf
outsb
sbb
mov
push
pusha
pushf
mov
jno
jg
imul
les
sbb
data16
test
jmp
add
rcrb
inc
jle
mov
sub
pop
jl
jns
and
lock
out
mov
xchg
jbe
fdiv
imul
and
ffreep
mov
pop
sti
mov
outsl
mov
scas
sub
or
pop
gs
ss
or
sub
lods
iret
out
jo
mov
fs
clc
ret
in
das
cs
mov
stos
arpl
jno
sbb
popa
popf
rol
dec
sub
lret
and
or
int3
inc
jecxz
fistpll
iret
in
xchg
pushf
inc
jne
inc
dec
sbb
mov
lret
lds
stos
mov
pop
sbb
sub
insl
xchg
lret
sbb
ret
pop
jecxz
and
xor
cli
gs
nop
jae
sbb
enter
mov
das
and
scas
mov
shl
xchg
dec
mov
mov
xor
mov
je
push
adc
sbb
in
jmp
and
das
sbb
stos
rclb
add
mov
jge
fst
lcall
orb
in
mov
movsl
nop
rclb
xor
lahf
xchg
das
subb
mov
mov
dec
push
xor
repnz
add
jbe
aad
adc
dec
push
ds
outsb
cmpl
popa
adc
stc
aaa
rclb
addr16
lret
je
test
push
lcall
lret
rcr
movsb
mov
cmpsb
pushf
rep
mov
or
test
or
jae
enter
insb
loopne
xor
sbb
xchg
fildll
push
jne
dec
xchg
das
pop
push
rcrb
dec
gs
loop
sub
daa
stc
pop
mov
sub
pop
test
dec
inc
int
mov
movsb
add
push
push
std
push
lcall
mov
out
push
cmpsl
cmpb
mov
add
adc
mov
mov
popa
repnz
loope
ret
mov
arpl
sbb
scas
repz
stos
sub
call
jae
lcall
das
cmp
xlat
test
fsubl
loop
aam
mov
rolb
test
mov
mov
mov
ret
or
push
jle
frstor
es
inc
bound
xor
fwait
jmp
xor
sbb
inc
add
sub
incl
lahf
mov
mov
movsl
into
ja
add
mov
mov
or
inc
es
rcrb
lcall
inc
mov
pop
add
insl
mov
insb
and
mov
jo
push
mov
mov
aad
insb
lds
lret
fs
and
lods
mov
cld
test
dec
inc
xchg
imul
xchg
int3
rcl
or
push
mov
xchg
xor
cmpl
inc
xchg
mov
popa
js
xor
andps
int
xor
arpl
jle
adc
loop
mov
dec
lock
mov
decb
mov
in
push
popa
adc
jbe
add
lods
aam
fsubrl
je
sub
mov
pop
test
das
mov
popl
jnp
push
lret
mov
in
addr16
push
mov
test
into
mov
daa
vprotd
fcoml
int3
adc
mov
out
movsl
cmc
xor
cwtl
pop
push
fisubl
bound
loop
scas
mov
mov
jo
xchg
mov
xchg
xchg
aad
fdivrl
inc
sti
in
sarb
adc
push
mov
mov
scas
dec
add
dec
sub
or
call
ja
icebp
pop
cmp
push
adcl
hlt
pop
int3
fisubs
xor
or
clc
sbb
sbb
std
lret
pop
fsubrs
mov
sbb
pop
std
sbb
clc
xchg
popf
and
loop
cmp
xchg
jnp
cltd
shlb
ss
mov
shr
cmp
mov
shll
pushf
fidivl
xor
sub
and
imulb
xchg
or
dec
mov
add
inc
mov
icebp
mov
je
cltd
hlt
mov
dec
cs
adc
cltd
roll
test
out
or
pop
jns
mov
sub
neg
inc
enter
je,pt
sub
cmp
in
out
in
bound
sbb
pop
rolb
jl
stos
xchg
xchg
daa
xor
mov
xchg
push
out
or
mov
dec
dec
or
shl
ficoms
cmpsb
test
iret
clc
mov
notb
cmpsl
xchg
movsb
adc
repnz
dec
push
lret
sahf
loopne
fsubrp
xchg
rcl
inc
mov
xchg
dec
mov
sub
ljmp
adc
pusha
fildl
lret
sbb
stos
in
jns
sbb
jnp
pop
jnp
lock
popa
mov
dec
jge
add
mov
sub
out
mov
xor
inc
sbb
add
or
jp
xchg
inc
mov
jne
lret
add
in
jmp
pusha
dec
xor
or
mov
jnp
xor
rclb
push
jp
stc
int3
leave
cmp
xorl
adc
ffree
cmc
add
or
mov
adc
mov
jl
cwtl
test
stos
pop
jle
adc
clc
cmp
icebp
cmp
arpl
je
push
and
call
cltd
hlt
cwtl
les
mov
mov
dec
push
xchg
xor
cwtl
pop
loop
push
pop
es
or
arpl
push
jnp
mov
lahf
mov
ljmp
xchg
adc
fiaddl
out
sub
lods
and
or
imul
mov
leave
ss
sub
cmpsl
repz
push
push
mov
das
sbb
fs
push
insb
add
test
mov
and
mov
sbb
scas
enter
cld
push
icebp
mov
cs
push
inc
sbb
aad
mov
xchg
xchg
test
fsubrl
mov
es
pushf
inc
repnz
loop
adc
jl
insl
pop
leave
push
cmp
lret
xor
ret
jno
pop
mov
xchg
sbb
xchg
mov
outsl
insl
jg
sahf
or
adc
enter
push
or
mov
pop
mov
add
push
xchg
and
lock
pop
pop
je
add
add
scas
jle
pop
popa
int3
andl
fidivl
mov
repz
pushf
sbb
insb
jae
imul
cmpsb
pop
sub
mov
mov
loope
nop
adc
dec
and
dec
pusha
xor
push
cli
pop
out
repz
xor
roll
add
cmp
sbb
push
xchg
ljmp
xor
jns
fs
mov
sub
stos
popf
mov
lahf
cmp
xchg
or
inc
push
sbb
jb
sbb
mov
push
sub
movsb
cmpl
adc
add
xlat
loop
add
jp
mov
mov
lock
cmpsb
and
push
jbe
fwait
jb
dec
and
lock
outsb
and
std
imul
xchg
pop
sub
ret
jmp
inc
cmp
ds
rolb
loop
adc
sahf
scas
cmpsb
mov
rcr
jno
jp
cs
mov
test
ficoms
xor
out
mov
repnz
cmp
out
sbb
jmp
int3
hlt
xchg
divb
jnp
test
sahf
sub
movsb
jns
xor
call
sarl
ljmp
arpl
jp
mov
and
push
fisttpll
pop
testb
data16
lahf
nop
into
xchg
movsl
push
nop
aam
int
stc
fsubs
lods
lea
pushf
xlat
sub
sbb
mov
mov
cld
cld
mov
push
sub
sbb
insb
dec
jg
lock
cmpsl
inc
mov
arpl
mov
fdivr
outsl
pushf
scas
mov
leave
mov
ja
push
add
lret
mov
jns
sub
xchg
lock
icebp
lahf
in
pop
dec
pop
push
push
mov
adc
cmp
or
dec
sub
mov
or
movsl
inc
pop
aas
popa
or
bound
sub
jbe
inc
sub
mov
movsb
ror
mov
ja
add
add
movsb
dec
pop
xchg
insb
ds
mov
daa
xchg
push
pop
push
gs
dec
and
cwtl
ss
lods
lahf
push
mov
arpl
dec
mov
jb
xor
or
rolb
dec
pop
xor
in
ljmp
push
pushf
ret
in
pop
subl
ret
cmp
ret
repz
mov
mov
jecxz
int
mov
popf
jl
dec
lcall
je
lds
inc
aad
in
enter
test
push
and
scas
pop
dec
mov
inc
out
sub
jl
test
push
xchg
cmp
push
and
cmc
unpcklps
sti
sub
lods
lret
cmp
inc
jae
test
mov
mov
inc
sbb
sub
xchg
jnp
pop
das
jg
sarl
es
jbe
sti
xor
cmp
in
xchg
mov
cmp
jg
ja
loop
js
les
mov
xchg
das
or
imul
inc
test
outsb
inc
adc
shll
ret
outsl
pop
aaa
testb
ficoml
adc
adc
xchg
sti
clc
push
mov
pop
push
in
mov
or
dec
sarl
sub
pop
insl
int
jp,pt
pusha
xor
xchg
shrb
mov
add
je
lahf
mov
mov
das
jge
popf
mov
dec
and
les
es
cmp
inc
ret
cli
xor
ds
in
movsl
sbb
xchg
je
pop
xchg
jnp
test
push
cli
mov
fistps
inc
idivl
stos
incl
xlat
aas
in
enter
add
gs
mov
cmp
add
or
out
lahf
movsb
xchg
jp
lahf
add
es
push
aam
shlb
mov
jae
sahf
lahf
lods
hlt
icebp
test
fs
sbb
inc
mov
adc
adc
pop
jg
mov
sub
xor
xorb
cs
mov
pop
aaa
or
or
test
mov
dec
pop
mov
ljmp
mov
pop
inc
popw
inc
adc
xchg
jge
push
aam
jecxz
xchg
out
or
out
dec
idivb
mov
ficompl
add
xchg
lcall
sahf
jno
pusha
fucomip
test
fdiv
loopne
mov
jno
push
mov
fistpl
cld
adc
add
mov
push
mov
jle
jb
jp
sub
add
enter
ja
repnz
push
pop
or
nop
divb
mov
xchg
ret
fldt
lds
scas
jae
mov
and
mov
sbb
ss
push
xchg
and
idivb
outsl
xchg
out
cmp
out
xlat
dec
mov
icebp
loop
loope
iret
lret
int
inc
cmp
shl
sub
or
outsb
cmp
push
mov
imul
add
std
iret
stos
and
pop
mov
pusha
or
cwtl
adc
popa
cltd
jbe
cmc
cld
daa
add
popf
shll
mov
push
pusha
inc
ret
stos
decl
mov
dec
jg
lahf
cmp
data16
and
jge
sub
loop
pop
jno
xchg
jne
lahf
mov
outsb
push
cs
cmc
nop
lods
or
xorb
pop
pop
rep
cmp
pop
daa
xor
adc
and
jmp
movl
gs
mov
and
ss
repz
jnp
insb
das
mov
pop
negb
pop
xorl
loopne
fcmove
cmp
pusha
lods
ja
jo
test
das
xor
std
arpl
lds
push
pop
adc
in
add
js
cmpb
stos
punpckldq
xor
jg
dec
stos
mov
cld
hlt
push
xchg
sub
test
mov
rorb
xchg
sub
stos
push
insl
test
imul
push
lcall
or
ss
iret
es
add
test
stos
test
cmp
xchg
roll
add
jmp
jge
xor
popa
fnsave
out
dec
push
mov
push
adc
inc
gs
push
jmp
cmp
in
pop
test
push
leave
pop
add
cli
in
and
and
pop
push
xor
insl
pop
iret
es
fbld
sti
sahf
fwait
push
fisubl
in
push
jnp
cmp
pusha
adc
jae
and
hlt
fimuls
cwtl
dec
loop
loop
cmp
mov
cs
pop
out
pop
xor
push
ret
push
add
push
jae
or
call
pop
inc
xor
xchg
pop
test
pop
dec
fistl
adc
sbb
leave
je
popl
neg
push
or
fsubs
stc
sbb
incb
in
notb
lcall
mov
xor
adc
jno
arpl
mov
push
daa
gs
mov
cmpsb
fists
mov
xchg
dec
addr16
mov
adcb
push
cmp
ljmp
int3
sbb
mov
test
imul
push
jmp
push
mov
out
jl
fs
lds
sub
or
pusha
push
iret
pop
xchg
lcall
mov
push
xor
shrb
stos
out
imul
cmpsb
addb
pop
mov
cs
mov
loop
mov
and
cmpsl
clc
sbb
sbb
in
or
and
jmp
sub
out
and
jge
mov
mulb
lret
lahf
daa
sahf
cld
test
je
push
mov
jne
orb
push
ret
es
jg
nop
or
lahf
outsb
imul
add
or
outsb
lret
loope
andb
cltd
jge
ljmp
fldt
xchg
add
sub
xor
rolb
pop
lea
push
push
cli
sub
test
adc
pop
xchg
pop
in
mov
fs
xchg
scas
mov
cmp
dec
sub
mov
xor
loope
mov
inc
mov
insl
xor
inc
out
adc
ljmp
int
in
sub
pushf
mov
sub
int3
movsb
ljmp
cmc
jo
arpl
adc
jecxz
paddusw
pop
sub
js
adc
adc
or
popa
pop
clc
imul
mov
in
xor
or
insl
fstpl
lret
movsl
jl
in
xor
je
outsl
adc
lods
in
cmpsl
xor
and
mov
dec
fcomp
push
fadds
jae
aaa
sub
cmpb
fisubrl
jae
jecxz
icebp
jb
push
insb
sub
xor
xchg
jb
jp,pt
inc
pop
mov
rorl
andl
cmp
lock
inc
xlat
and
aaa
jmp
cmp
arpl
sub
aad
adc
or
xor
out
lcall
stos
xchg
enter
cmpsb
inc
dec
daa
int
jge
imul
sbb
movsb
ret
stos
test
pop
push
inc
inc
mov
pop
icebp
add
addl
mov
outsl
das
add
enter
icebp
or
fnstsw
dec
sbb
pop
das
cld
aas
fldcw
inc
xor
cmpl
or
inc
jb
std
dec
mov
and
sbb
or
jg
mov
push
pop
cmc
add
insb
push
imul
xchg
je
xor
push
or
imul
dec
push
dec
dec
fdivs
push
xchg
sbb
push
pop
and
fstpl
jle
mov
fnstsw
adcl
loopne
pop
jae
jecxz,pt
dec
lock
cs
sbb
popf
mov
pop
cwtl
or
or
dec
and
xor
pop
push
fistpl
bound
mov
xchg
and
mov
adc
mov
pop
push
inc
adc
outsl
and
add
add
cmc
jle
xlat
in
lahf
cmp
hlt
out
sbb
jns
inc
dec
lock
lds
sbb
int
or
mov
fstpl
outsb
std
addr16
dec
arpl
cmp
dec
and
cs
add
repz
lret
or
sbb
lret
dec
adc
mov
hlt
pop
mov
adc
xchg
lods
test
mov
mov
mov
mov
jmp
fidivs
dec
frstor
sahf
cmp
pop
or
or
lret
add
test
push
add
pop
rcl
pop
jbe
int
insl
loope
xchg
xchg
shlb
loop
jbe
lcall
das
adc
nop
fwait
mov
adc
pushf
pop
mov
stos
out
cmp
and
aaa
add
lret
loopne
shll
out
dec
out
mov
fldenv
pop
popf
mov
xor
push
cmp
stos
rolb
insb
mov
in
stos
cmpsl
orb
inc
aam
repnz
push
add
inc
lods
sbb
outsl
out
adc
xchg
jno
add
jbe
inc
fs
mov
fnsave
sub
xchg
jg
push
imul
fstps
mov
add
out
neg
jno
div
popf
mov
mov
rorb
mov
insl
sub
lods
repnz
pushf
imul
shll
inc
jo
xchg
sbb
ret
or
mov
loopne
jmp
imul
std
test
arpl
lods
and
or
cs
mov
mov
negl
mov
add
and
outsb
aad
fisttpll
iret
movsb
bound
or
in
orl
movd
jmp
nop
inc
inc
ret
push
mov
outsb
cmc
enter
ss
pusha
leave
lret
cli
and
jno
arpl
data16
xor
xor
ljmp
cltd
inc
nop
insl
inc
xchg
enter
ss
mov
jne
shlb
and
lea
cmp
lcall
sbb
stc
aad
mov
dec
stc
pop
pop
mov
xchg
sub
mov
adcb
data16
pop
pop
iret
jl
fdivs
jno
jbe
mov
repnz
and
xchg
scas
jb
cld
inc
ja
add
dec
mov
ss
negb
aad
loope
fpatan
pop
cli
lcall
xor
test
push
je
decb
push
adc
loopne
cmp
aam
ja
push
clc
clc
jle
mov
loopne
jns
pop
mov
arpl
fisttpl
mov
push
push
int3
cmpsl
dec
fnsave
cmpsl
pusha
addr16
cmpl
test
cwtl
leave
add
cltd
dec
inc
jmp
int
arpl
push
dec
hlt
cmp
xchg
fwait
mov
xor
mov
popa
jl
aas
frstor
add
test
fidivs
mov
dec
cwtl
push
or
lret
repnz
jb
mov
filds
fldl
pushf
fsubrl
stc
aam
jecxz
shlb
lcall
fimull
dec
jnp
lods
mov
xchg
js
push
adc
lcall
mov
dec
ss
call
xchg
fs
jmp
mov
adc
std
lret
sbb
outsl
repnz
shll
add
cmp
insb
mov
iret
mov
inc
jne
nop
out
sbb
rorb
cmp
cmpsl
lahf
xchg
lea
jp
pop
out
inc
movsb
push
mov
shlb
or
test
shl
data16
inc
add
and
shl
popa
xor
push
adc
lret
shrl
adc
in
out
subl
pop
adc
std
ljmp
movsb
sarb
push
sbb
aad
xchg
out
mov
mov
xor
les
stos
add
push
xchg
imul
loopne
mov
pop
aaa
fadds
push
into
push
or
adc
xchg
adc
iret
fisttpl
bswap
push
ja
aad
mov
xor
cmp
or
sub
mov
jb
stos
rclb
adc
xchg
shlb
imull
push
pushf
roll
int3
xlat
pop
popf
pop
sub
add
out
cmc
sub
repnz
or
mov
mov
lcall
inc
cli
les
dec
fdivs
test
pusha
push
add
nop
mov
push
add
sbb
xchg
fdivl
lahf
sub
push
adc
sarb
int3
sbb
ss
dec
lret
lock
jo,pn
sub
mov
push
xor
out
call
inc
jae
and
outsl
or
les
addr16
je
out
sub
pop
mov
and
pminuw
inc
xor
jle
push
call
fisubrs
js
popa
outsl
jns
ljmp
rcrb
lock
jge
test
push
iret
sub
pop
mov
shrb
inc
xchg
adc
dec
stc
or
pop
aas
ffree
imul
iretw
cmp
sahf
adc
insl
jno
lret
dec
test
mov
xor
sub
cltd
in
cmp
xchg
adc
mov
daa
inc
jo
loop
add
inc
ret
sti
fcoms
repz
ds
add
push
cmp
pop
cmp
add
sbb
mov
mov
enter
sub
or
into
cmp
inc
dec
nop
push
hlt
mov
pop
sbb
scas
or
shl
mov
jge
pusha
or
or
or
divl
or
cld
add
das
pop
push
mov
dec
or
xor
dec
repnz
ficoml
pusha
push
mov
cmp
into
les
in
mov
cld
xchg
adc
and
fldenv
cmp
and
aaa
sub
je
jp
add
jmp
cmp
movsb
or
xor
movsl
cmpsl
in
jo
lret
mov
jb
cmp
adc
xor
cld
cwtl
pop
stc
push
je
mov
sbb
mov
xor
xchg
or
cmp
push
fsubr
mov
out
mov
push
mov
push
insb
or
pusha
mov
or
jmp
stos
movsb
jmp
shr
sbb
popa
jg
ljmp
test
sti
dec
sub
and
mov
inc
lcall
mov
mov
daa
or
lods
lods
mov
mov
mov
clc
jns
mov
push
cmpsb
imul
push
repnz
dec
and
push
mov
pushf
insl
shlb
ljmp
jbe
ja
push
ret
imul
cmp
jge
mov
imul
test
cmp
addr16
pop
lds
push
imul
imul
popf
inc
mov
cmpsl
loopne
pop
mov
push
adc
jbe
mov
dec
or
aad
push
mov
jl
pop
ds
jp
pop
mov
cmpsl
or
leave
in
mov
and
pop
adc
loopne
cmpsb
rcrl
add
loop
adc
inc
cmp
jne
push
aad
popf
in
mov
imulb
or
ret
xchg
xchg
dec
pop
or
lahf
stos
sbb
add
mov
cmp
push
cltd
inc
sbb
repnz
xlat
lds
out
pop
mov
aas
pop
push
inc
aam
loope
jb
rcrl
addr16
aas
mov
push
les
push
int
dec
push
jb
add
xchg
in
gs
fucomip
shll
aaa
dec
insb
inc
divl
dec
call
lcall
daa
hlt
or
incb
add
xorb
jnp
call
insl
adc
mov
sbb
call
mov
push
mov
push
fcoms
cltd
mov
adc
rcrl
pop
hlt
push
xor
lea
dec
sti
mov
jb
mov
push
cmp
or
fmul
aaa
lcall
pop
aas
add
xor
cmp
sub
lods
fcoml
in
rcr
mov
pop
xchg
jmp
pop
shrl
in
icebp
push
xor
jle
mov
xor
inc
xor
xchg
dec
gs
pop
test
mov
jl
and
cmp
mov
in
mov
push
and
rcl
pop
push
jecxz
jmp
or
inc
mov
mov
mov
loope
sub
test
test
inc
fs
pop
xchg
jns
xchg
mov
xor
fs
test
cmpsb
push
hlt
testl
fs
mov
xchg
test
or
inc
es
mov
scas
or
cmp
mov
rcll
repnz
mov
das
jne
add
adc
xchg
xchg
in
repnz
push
pop
cmp
adc
xchg
inc
shrb
pop
fcoml
jnp
lahf
mov
mov
push
jb
add
nop
xor
test
repz
dec
pop
adcb
jae
or
icebp
sti
xchg
shl
rcrl
jl
add
add
das
and
nop
test
into
popa
and
xchg
loopne
aas
loop
push
ss
inc
mov
loopne
ja
test
xchg
rcl
dec
pusha
cli
mov
jns
sbb
dec
out
cli
mulb
mov
jns
gs
data16
fcmove
dec
fdivl
test
adc
stc
adc
insb
xor
or
cmpsl
gs
into
mov
scas
xchg
cwtl
ficompl
jns
enter
scas
data16
add
ds
adc
push
lret
jl
jb
incb
push
adc
arpl
aad
sub
fisttps
rol
movsb
pop
aas
adc
shlb
cmp
inc
and
call
cmp
pop
pop
push
sub
cmp
push
mov
or
lds
mov
popf
mov
fcoms
jmp
sbb
std
popa
sti
pop
cmp
dec
rcrb
sbb
repz
loopne
add
std
xor
leave
into
in
xchg
add
lcall
push
sti
fsubs
fnop
xlat
repnz
dec
sbb
mov
pop
stos
fisubrl
cmp
pop
dec
rorb
sbb
insb
out
scas
adc
je
movsl
test
stc
push
data16
cmp
sti
dec
inc
sbb
bound
fcomps
lahf
dec
sub
das
and
dec
jmp
mov
pop
icebp
pop
test
fbld
xor
jns
sahf
xchg
bound
pop
mov
push
lret
jecxz
arpl
xor
cmp
mov
les
test
dec
repz
stos
sbb
out
out
dec
pop
xchg
push
std
aaa
jmp
in
lods
data16
jns
and
jns
and
xchg
push
push
es
dec
push
mov
cmp
jbe
adc
xchg
fisubs
cli
pop
xchg
and
lret
int
xchg
js
push
cmc
push
loopne
mov
mov
and
and
popa
pop
mov
pop
ss
fs
lret
and
add
insb
aad
add
mov
rcrl
fdivl
or
mov
and
in
pop
in
mov
cli
scas
pop
lahf
pop
mov
sbb
shrl
pushf
addr16
xor
js
aas
popl
sbb
cmpsb
shrb
push
jle
cmpsb
add
mov
aas
sahf
pop
test
mov
xchg
fstps
mov
cmp
test
add
push
or
mov
gs
inc
scas
inc
test
cmp
dec
inc
mov
pop
add
loop
insl
enter
in
les
fisubl
push
cmp
ficoms
xchg
inc
mov
or
sub
loop
pop
sub
sub
sar
fdivrl
inc
in
pop
or
inc
insb
les
cmpsl
jp
jmp
mov
lahf
mov
and
jl
inc
mov
shrl
adc
and
lcall
rol
and
cmpsl
les
pop
inc
inc
xor
jmp
lret
hlt
clc
clc
or
insb
repnz
sti
xchg
test
add
push
shrb
cld
cmp
mov
push
and
das
cmc
dec
je
in
ret
aaa
movsb
outsb
loopne
test
xor
push
mov
movsl
sub
enter
inc
fmul
or
outsb
cli
int3
push
mov
push
mov
mov
lret
popa
inc
ficoml
xchg
test
mov
out
loope
scas
shll
mov
fwait
adc
push
mov
pop
mov
pop
pop
add
cmpsb
sub
cmc
and
lcall
data16
xchg
cmp
mov
sbb
mov
mov
subl
mov
or
push
jbe
inc
xor
pop
or
add
iret
cmc
rcrb
pop
pop
popa
mov
popa
push
inc
shl
sub
jmp
ret
xor
xchg
add
sets
iret
mov
testb
or
shr
push
icebp
shr
fdiv
cld
xlat
nop
addr16
push
adc
push
cmp
cltd
dec
pop
push
nop
xchg
loop
sub
leave
jns
pop
jne
mov
lods
rorb
fbld
mov
push
fisubl
add
jle
lea
or
sub
faddl
push
das
pop
repnz
out
daa
push
mov
cmpsl
and
mov
cmp
xchg
pop
fldenv
cmpsl
test
insl
sbb
out
cld
sub
xor
mov
int3
lcall
imul
mov
aam
lock
daa
fidivl
mov
mov
jl
xor
xor
dec
ret
jge
add
sbb
adc
mov
cli
sbb
adc
rcrb
pop
jl
dec
popa
lock
punpckhdq
sub
sbb
inc
dec
inc
fsubrl
jne
xchg
mov
cmp
mov
push
mull
mov
push
pop
sbb
and
repnz
sub
lret
sbb
mov
fisubs
xchg
int3
je
push
jmp
push
out
mul
les
cwtl
popf
call
addr16
insb
sbb
ret
push
adc
daa
fcoms
sub
dec
nop
ljmp
jne
ja
cmp
mov
dec
in
lcall
sbb
push
icebp
addr16
xor
ret
enter
pop
add
sub
repz
pop
into
sub
rolb
popa
inc
icebp
in
pshufw
rorb
ja
mov
stos
adc
sbb
repz
dec
mov
popa
int3
sahf
out
aam
imul
shll
mov
test
push
js
fwait
andb
data16
adc
sti
rcrl
ja
data16
leave
lahf
dec
cmp
sahf
ja
pop
lret
dec
gs
sarb
jne
or
dec
push
push
add
test
pop
cwtl
sub
sbb
std
insb
push
xor
insb
repz
adcb
xchg
sub
mov
das
jmp
cmc
outsb
xor
mov
pop
xchg
mov
imul
in
cwtl
mov
push
lods
call
push
lcall
outsb
xor
aaa
cmp
popa
mov
fs
fsub
test
sub
push
sar
or
inc
enter
jp
jne
icebp
dec
or
pop
mov
enter
inc
stos
into
sbb
add
inc
test
cmp
ret
inc
in
ret
add
adc
dec
arpl
or
roll
or
xchg
es
inc
pop
xchg
pop
add
and
push
push
stc
xchg
pop
xchg
dec
add
out
cld
fistps
fld
mov
sahf
out
xchg
lret
push
repz
mul
sub
mov
ljmp
or
testb
or
lcall
mov
out
in
fildll
push
stos
sbb
idivb
pop
test
push
pop
mov
xorl
inc
fs
mov
push
add
inc
das
aas
fiaddl
push
ret
dec
cmpsl
push
dec
ljmp
mov
mov
dec
popf
dec
rcrb
mov
fwait
sti
xlat
js
mov
sahf
loope
dec
pushf
and
fldenv
ss
aaa
faddl
das
inc
loopne
call
mov
out
ret
and
adc
jp
dec
dec
jp
and
dec
push
adc
lods
into
into
pop
mov
xchg
lahf
aam
sub
or
int3
insb
add
cli
pop
push
incl
pop
negl
dec
inc
fbstp
hlt
jo
xor
js
fiaddl
aad
xchg
xchg
mov
mov
mov
push
dec
xlat
ret
add
pushl
pop
pop
push
pop
xchg
fldenv
mov
mov
cmc
and
push
rclb
bound
pop
je
inc
mov
stc
sub
and
pop
cmc
scas
adcb
mov
push
lods
ret
bound
es
rcl
jb
sub
rcll
jae
fcoms
push
sbb
lret
or
nop
movsl
jecxz
inc
ret
stos
add
aad
inc
call
mov
jmp
frstor
xor
push
add
cmpl
mov
fs
sbb
push
fprem
dec
js
lods
iret
lahf
push
test
push
xor
loopne
and
mov
call
fwait
sti
xchg
add
js
les
imul
dec
xor
cmp
mov
sbb
es
mov
repnz
sbbb
inc
shl
cwtl
adc
cmp
push
xchg
mov
mov
icebp
imul
or
inc
int
cmc
cmp
inc
outsl
add
imul
jae
ret
cld
pop
pop
hlt
sbb
pushf
inc
mov
fwait
cmpb
mov
adc
mov
leave
dec
gs
out
jns
scas
addr16
je
fisubs
lar
and
add
stos
pop
lcall
push
pop
xchg
inc
popf
inc
fs
push
test
xor
inc
jae
rorl
mov
sub
fsts
into
add
fwait
mov
and
popf
filds
pop
push
outsl
fstpt
pop
xchg
mov
dec
xor
mov
push
lret
fwait
cmpsb
scas
push
js
icebp
inc
adc
outsl
shr
icebp
loop
cmp
sub
push
cwtl
or
out
scas
and
sbb
add
xor
sbb
insb
dec
sarb
lods
sbb
test
ds
dec
cmp
aaa
pop
int
cmp
inc
xor
jno
jle
pop
dec
sbb
adcb
lea
pop
cmpsl
addr16
mov
mov
add
xor
loop
decl
ds
negl
jo
in
iret
push
add
dec
pop
test
mov
add
or
rcrb
cmp
push
jl
sub
int
out
jbe
sbb
push
loop
add
cmp
cmp
stc
push
dec
jp
shl
sub
jge
pop
pop
into
sub
pop
scas
dec
jno
dec
inc
lods
insb
mov
xorb
leave
int
xchg
mov
pop
shll
sbb
sbb
shll
dec
andb
rcrb
adc
loope
mov
dec
push
mov
loope
out
xchg
ds
data16
mov
cmp
cwtl
dec
inc
es
and
and
outsl
clc
push
mov
out
cltd
ret
mov
ja
jg
fistpl
in
mov
daa
push
repz
push
sti
pop
jle
fimull
lret
xor
stos
jo
xchg
out
jecxz
hlt
fisubl
sub
xchg
inc
sbb
in
pop
insl
mov
orl
jno
call
sahf
ljmp
movl
lahf
sub
daa
repz
mov
cmp
mov
icebp
dec
fwait
inc
ljmp
pop
decl
std
jnp
lea
sar
insb
in
je
fcmovne
sub
inc
sub
adcl
arpl
js
sbb
lahf
dec
fistpl
mov
es
mov
pusha
dec
daa
jne
inc
loopne
dec
in
sub
fisttpl
int3
sahf
cmpsl
cmpl
dec
push
xchg
outsb
mov
dec
pop
push
sti
call
sahf
jg
jle
sbb
jae
xor
call
fisttps
xor
test
dec
or
mov
cmp
add
xchg
jns
outsl
push
xchg
scas
sub
les
mov
pop
pusha
dec
sub
pop
inc
les
loopne
test
pop
add
lea
iret
xchg
jmp
cltd
xor
shlb
inc
test
mov
push
in
mov
jmp
rcrl
lds
stos
iret
aam
popa
xor
repz
in
or
cmp
test
mov
pop
test
sub
or
daa
lods
xchg
or
leave
xchg
and
insb
or
ja
ds
pop
test
hlt
or
icebp
aas
insl
or
test
xor
movsb
xlat
and
shrl
sbb
dec
xor
push
push
shl
rorb
and
loope
adc
jg
inc
dec
jp
sub
adc
or
fists
mov
fadd
dec
fdivs
sbb
pop
jmp
dec
loope
clc
outsl
pop
mov
xor
popf
xchg
mov
sbb
je
bound
push
pop
sub
add
mov
lcall
lcall
xchg
movsb
add
jnp
sub
js
jle
arpl
jbe
jbe
jne
js
mov
inc
sbb
sub
pop
lea
add
mov
push
push
add
arpl
jle
std
mov
test
stc
mov
cltd
mov
arpl
insl
fdivl
loope
pusha
or
xchg
push
xchg
fs
movsl
test
mov
mov
sub
movsl
ss
dec
xchg
mov
mov
xchg
outsl
scas
negb
rcrb
out
stos
xchg
inc
pop
or
sub
mov
sbb
adc
shll
pop
xor
push
std
bound
add
dec
xorb
jnp
orb
jb
popa
cs
push
repz
mov
adc
popa
jae
jne
lahf
std
push
add
sbbl
rcrb
dec
hlt
pop
fidivl
sub
call
sub
xchg
sub
insl
lret
adc
jne
into
sbb
aaa
mov
je
roll
jl
pop
adc
push
fwait
mov
shll
push
imul
pop
inc
push
xor
enter
enter
xchg
fiadds
mov
test
cmp
mov
sub
lds
sbb
and
push
popf
cmp
imul
cli
inc
push
jns
ss
sbb
inc
push
adc
mov
call
repnz
inc
fwait
aaa
lcall
movsb
push
mov
sbb
push
popa
sti
testl
out
or
outsb
pop
xchg
lock
jo
mov
icebp
mov
aas
cmp
psllw
pop
xor
pop
mov
nop
shll
or
inc
xchg
lea
sbb
mov
iret
xchg
cmp
leave
xorl
aas
popw
fcoms
jmp
dec
mov
and
inc
out
mov
ss
aas
test
lods
ficoml
sarl
xorl
xchg
and
or
gs
cmp
cmp
daa
jle
mov
sub
sarb
mov
jbe
je
imul
lret
or
out
movsb
clc
mov
fstpl
out
lods
cmp
push
jp
out
fiaddl
int3
insl
in
icebp
add
add
pcmpeqd
pushf
frndint
out
fwait
mov
mov
data16
sbb
pop
and
jl
rcll
lret
xchg
mov
mov
popa
int
nop
inc
push
lret
xchg
or
dec
pushl
cltd
fcoml
dec
cld
lcall
fbstp
icebp
aad
mov
push
add
adc
and
jl
xor
lods
mov
cmp
pop
lea
out
bnd
or
cmp
pop
pop
lock
xchg
scas
hlt
pusha
xchg
loop
add
inc
or
sub
arpl
cmp
and
adc
fisttpll
inc
mov
lods
loope
outsl
dec
mov
cli
push
js
ret
xor
push
jnp
lods
pop
mov
or
jnp
in
jns
iret
test
or
out
mov
dec
insl
addr16
mov
mov
lods
dec
pop
sbb
sub
or
sub
mov
and
repz
and
sti
push
xchg
xchg
xchg
ja
cmp
pop
xchg
xor
pop
sar
pop
add
adc
jbe
hlt
mov
cs
cmpb
loop
push
or
shrb
dec
sbb
mov
jnp
sub
jo
insl
sub
mov
scas
movntps
das
mov
mov
fstps
cli
popf
push
movsl
daa
inc
je
mov
xchg
pop
cmp
jbe
leave
adc
xor
push
or
dec
shl
mov
mov
xchg
xor
aaa
sarl
js
or
mov
into
sbb
movsl
xchg
inc
push
adcl
test
jle
cbtw
clc
sub
adc
cmp
jle
jecxz
js
aad
aas
cmp
je
mov
lock
sub
dec
mov
jbe
jmp
lods
adc
scas
rclb
js
rorl
test
faddp
cs
xor
std
fisubrs
dec
push
pop
rcrl
gs
xchg
jo
rcll
xchg
push
mov
sub
incl
mov
repnz
sbb
icebp
bound
xor
cmpsb
pop
mov
mov
movsl
fdiv
pop
out
push
cmp
mov
out
or
test
sar
inc
out
cld
inc
sbb
xchg
and
mov
xchg
or
sbb
ds
cmp
sbb
dec
cmp
mov
dec
fucomp
out
arpl
sbb
ja
and
inc
and
mul
mov
xchg
sub
stc
aas
push
bound
pop
orl
mov
push
popa
pop
sbb
mov
ljmp
outsb
imul
pop
ss
test
pusha
pop
cmp
in
enter
inc
jbe
dec
in
or
repnz
jbe
xor
out
pop
out
jl
les
xor
sti
xor
inc
outsb
testb
jae
cs
push
xchg
push
daa
xlat
rorl
stc
ret
sbb
repnz
arpl
hlt
pop
in
dec
pusha
adc
ljmp
imul
in
fwait
jbe
xor
and
mov
sbb
popa
ss
mov
lcall
and
test
call
inc
int3
mov
out
mov
push
stos
lods
sahf
xchg
mov
push
js
jmp
mov
jp
push
inc
xor
arpl
pop
and
xor
add
jno
ret
shll
fisubl
pusha
cmpsl
or
dec
pusha
popa
pop
test
sub
int3
int3
out
xchg
mov
dec
rorl
jnp
cwtl
mov
hlt
fbld
push
dec
lret
mov
scas
cmpsl
xor
dec
test
f2xm1
push
fcoms
ja
xchg
lods
and
fxch
push
mov
shlb
pop
jne
or
push
adcb
cltd
xor
cmp
cmp
shrb
inc
leave
mov
dec
jne
mov
dec
push
jbe
adc
dec
pop
pop
sahf
mov
cltd
adc
in
xchg
sahf
mov
adc
jae
pop
push
icebp
dec
call
jno
inc
sub
jg
pop
mov
lahf
pop
push
pop
popa
nop
jl,pt
insb
jle
dec
push
mov
sub
fwait
xchg
mov
xor
js
mov
fmull
mov
dec
ljmp
jns
ja
test
pop
add
push
xchg
lods
lods
dec
push
loop
lgs
lods
cmp
es
mov
data16
jge
in
outsb
fists
push
loopne
mov
jle
pop
lock
xor
test
sti
push
pop
icebp
outsb
iret
jg
movsl
faddl
cmp
mov
inc
adc
negl
inc
sub
es
jmp
repz
push
sub
sbb
in
add
inc
lods
jno
fsubl
mov
or
push
mov
sbb
fdivrp
and
mov
cmpsb
into
stos
movsl
add
testb
jp
dec
fidivrs
add
bound
jl
mov
jle
mov
pop
add
outsl
add
test
rolb
je
dec
mov
xor
lods
es
mov
arpl
out
cmpsw
sub
mov
into
mov
adc
mov
outsb
das
push
lahf
sbb
xchg
shl
cmp
scas
in
lcall
je
aas
mov
cmp
xor
push
xchg
push
push
add
lock
push
nop
xchg
scas
xchg
repnz
int
mov
sub
cmp
ss
mov
dec
sbbl
outsb
out
sbb
pop
aad
jb
lods
add
sbb
movsb
jmp
add
jnp
mov
leave
xor
std
inc
faddl
leave
popf
sbb
cmc
inc
outsb
cmp
adc
xor
loop
in
xorl
data16
int
sarb
repz
xchg
jmp
lods
lods
ljmp
and
ret
loopne
mov
repnz
sub
insb
jno
insl
pop
int
mov
and
jne
push
inc
stc
sahf
arpl
jo
test
icebp
or
xor
jo
cmpsb
lcall
gs
jle
and
ds
shrl
fisubl
pop
pop
jecxz
sbb
out
dec
inc
xchg
push
ds
xchg
mov
inc
sub
push
sahf
dec
sub
push
and
xchg
aaa
mov
cmc
mov
pop
ds
mov
xor
and
xchg
rol
mov
out
xchg
push
insl
dec
loopne
icebp
in
decl
mov
gs
pop
outsl
lds
shlb
dec
sbb
rorb
jg
xor
push
mov
enter
pop
pop
ljmp
aad
xor
sub
xor
adc
mov
scas
sbb
fisubrl
je
sbb
mov
lea
push
inc
pop
in
and
jp
out
push
popl
mov
cmp
cwtl
insl
inc
pop
es
pop
mov
push
fisubrl
outsb
xchg
xchg
les
mov
es
call
fists
test
and
adc
push
ds
jge
hlt
hlt
jl
cmc
test
cmp
cld
mov
icebp
pop
pop
mov
jbe
pop
call
adc
sahf
shll
xor
lods
gs
fisttpl
inc
sub
lret
gs
sbb
mov
les
mov
out
jp
xchg
cwtl
xor
push
lret
das
mov
outsb
sub
insb
push
or
mov
xchg
jne
stos
xchg
mov
xor
and
push
xchg
sub
fildll
mov
xor
xchg
mov
and
outsb
lcall
jmp
mov
xchg
ss
jo
rol
xor
fldl
dec
cli
int3
fcoms
ss
xchg
dec
aad
push
shrb
xchg
aad
pop
fcmovbe
enter
cmp
loopne
pop
mov
out
inc
add
mov
lret
or
loop
inc
insb
mov
cmpsl
push
xchg
iret
sti
mov
xchg
mov
add
xor
or
or
dec
mov
cmpb
xor
shll
es
repnz
xchg
mov
mov
mov
shr
addr16
fs
sbb
int3
adc
sbb
or
mov
mov
xchg
fisttpl
out
fidivrl
ja
js
int3
ror
int3
mov
fidivl
ja
orl
or
sub
xchg
mov
pop
ja
outsb
mov
adc
cli
mov
mov
xchg
scas
pop
or
pop
mov
dec
testl
inc
add
mov
insb
adc
out
mov
shlb
nop
jae
insl
jecxz
mov
dec
cmp
es
out
lds
mov
add
jge
push
stos
out
lahf
repnz
add
fisttpll
sub
pushf
and
adc
xchg
adc
icebp
mul
call
neg
mov
lcall
ja
sub
test
dec
cwtl
or
sub
and
or
mov
repnz
test
shll
rclb
adc
mov
cmp
push
sub
or
cld
push
mov
push
icebp
or
inc
add
sbb
push
push
lcall
jge
shlb
lret
aad
jmp
add
sub
push
aad
aas
jbe
mov
ja
sbb
pop
fwait
shrl
ss
mov
add
xchg
sahf
fistl
imul
cwtl
js
shll
icebp
push
jo
mov
pop
sub
jcxz
mov
mov
lahf
pop
mov
rcrl
push
inc
imul
inc
pop
add
xchg
jns
mov
cmpsb
add
popa
mov
lahf
mov
push
add
arpl
xorb
mov
push
and
mov
cmpsb
add
jp
arpl
push
ljmp
adc
adc
mov
popf
sahf
stc
add
sarb
scas
lret
pop
fstl
int3
std
xor
aas
divb
pop
cmpsl
shlb
clc
inc
hlt
pop
and
jns
mov
jo
mov
stos
dec
jmp
fcom
adc
jge
out
pusha
lods
mov
mov
gs
mov
jge
push
cltd
pop
andb
cmp
dec
mov
std
subl
push
jg
pusha
push
lea
push
ljmp
pop
push
xor
sub
in
sahf
sarb
add
jecxz
int
stc
jl
xchg
jmp
dec
js
mov
nop
iret
add
dec
movsl
jp
mov
pop
dec
in
or
mov
cmp
dec
jmp
pop
fldl
movsb
in
and
inc
mov
and
in
mov
cs
mov
dec
push
cld
dec
push
or
or
xchg
aaa
sahf
cli
xchg
cmp
push
mov
popf
sbb
jmp
pop
sbb
jp
push
call
arpl
pop
inc
orb
lret
stos
scas
xchg
xor
cmp
xchg
push
mov
outsb
js
mov
or
sbbl
adc
add
add
fmuls
and
cltd
cmc
fnstcw
stos
icebp
mov
add
scas
cld
fiadds
lret
sbb
adcl
inc
test
inc
lahf
jo
or
xlat
pop
cltd
es
mov
lcall
lahf
stc
ds
jae
fimull
icebp
xchg
test
push
jb
jbe
gs
sbb
bound
mov
xchg
mov
cli
in
popa
pusha
lock
lret
sbb
clc
adc
cld
jb
lcall
faddl
loop
adc
in
cld
cmp
jmp
xchg
mov
jmp
es
out
mov
daa
push
xchg
push
in
movsl
sub
ljmp
push
push
adc
orb
int3
xchg
or
or
and
mov
push
jecxz
int3
out
sbb
lahf
or
shll
jo
and
dec
fdivrl
pop
mov
jno
aam
fmulp
add
sbb
addr16
ret
test
std
loop
inc
pop
cmpl
out
and
pop
aas
cmp
vunpckhps
test
jecxz
mov
mov
dec
mov
aaa
stos
sbb
iret
cs
or
push
push
or
lea
adc
and
sarb
xchg
pop
jecxz
mov
xor
lds
jo
xchg
adc
mov
fldl
inc
cltd
mov
push
pushf
lea
add
push
out
xchg
pop
cltd
jg
cmp
sbb
test
xor
adc
lret
jnp
les
jae
test
sub
push
mov
neg
jmp
jge
sbb
and
ja
stc
rolb
mov
push
loope
imul
inc
jl
jb
cli
mov
cltd
adc
mov
jae
es
xor
scas
rcrl
mov
xchg
dec
aaa
add
lods
add
jno
and
test
sarb
es
pop
xchg
adc
pop
pop
xor
stc
sbb
loop
rorb
mov
in
mov
push
cmp
cmp
sbb
stc
inc
xchg
push
sub
dec
bound
sarl
nop
rcr
dec
lcall
stc
lods
adc
xchg
dec
lods
dec
mov
daa
arpl
adc
iret
push
add
cmp
jl
xlat
jecxz
dec
jne
adc
or
lcall
mov
jbe
js
inc
cs
pusha
ret
cmp
mov
scas
gs
jb
in
jo
mov
jo
mov
iret
jg
mov
decl
add
out
movsl
or
pop
mov
jp
scas
jp
inc
add
in
mov
mov
ret
mov
sbb
add
mov
or
jp
pop
mov
iret
std
mov
out
mov
sbb
or
mov
stos
rolb
mov
sarl
pop
pop
mov
dec
stos
aad
mov
out
pop
xor
push
inc
data16
push
add
or
ret
adc
pop
mov
inc
fadds
adc
mov
stc
outsl
pop
aas
pop
jne
cmp
mov
push
xchg
ljmp
ss
jecxz
or
mov
repnz
or
push
into
lock
rolb
ret
xor
push
jb
xlat
icebp
lret
jl
dec
int
repnz
fwait
in
loopne
aas
jl
sbb
ret
lods
and
mov
ret
mov
js
jae
out
sbb
adc
add
movl
mov
subb
pop
mov
pushf
rolb
dec
call
push
adc
nop
imul
mov
xor
jecxz
lods
es
imull
pop
sub
ds
arpl
mov
mov
movsl
xor
rcrb
daa
cmp
jp
jno
cmp
out
addr16
iret
les
test
or
cmpsb
imul
and
mov
push
adc
xchg
hlt
sub
in
inc
hlt
cmp
iret
test
sub
loope
cltd
mov
cli
repz
scas
mov
lahf
stos
mov
lret
and
cmpsb
cld
frstor
mov
adc
push
sub
mov
mov
sbb
mov
sbb
sbb
outsl
bound
dec
mov
outsb
std
xor
push
test
jge
test
inc
push
push
fdivrl
dec
push
repz
in
lret
fucompp
iret
sbb
pusha
cmp
cli
shrl
std
inc
std
mov
sbb
insl
cmp
jbe
aad
ljmp
sbb
arpl
popf
into
or
fnstenv
popf
nop
loop
fnstenv
mov
pop
lcall
aad
inc
in
das
sub
mov
scas
xor
mov
mov
dec
cmovno
fiaddl
xchg
dec
xchg
jle
inc
ret
mov
shl
cmp
setns
jnp
aas
and
xor
mull
sub
and
inc
lock
mov
dec
push
aad
jp
jecxz
jg
inc
mov
stos
mov
inc
lahf
sbb
ss
mov
mov
sub
mov
xor
cmp
ficompl
pushl
leave
cmp
fdivrl
js
or
mov
lea
mov
jmp
push
lcall
stc
xchg
pop
ja
cltd
sub
daa
mov
jb
inc
cltd
dec
mov
fwait
pop
inc
xchg
popf
adc
jne
mov
pop
testb
pop
ja
fdiv
hlt
repz
lods
out
xor
mov
loope
rclb
ret
sbb
jge
xor
cli
dec
out
mov
lock
filds
push
cmp
movb
mov
jae
dec
fimull
sti
adcl
pushf
or
xor
adc
insb
jno
xchg
xchg
push
insl
pop
repz
push
push
ljmpw
cld
jp
add
aad
push
scas
push
int
jp
and
xor
arpl
push
scas
push
mov
andl
and
aam
pop
xchg
cmp
mov
xor
pop
mov
int3
movsl
enter
xor
call
fcoms
out
sti
repnz
xchg
mov
repnz
mov
or
insb
popa
adc
xor
aam
sub
cmpsb
xchg
xor
adc
and
jno
clc
dec
or
xor
inc
call
mov
push
ret
xchg
ret
jl
arpl
inc
lock
insb
push
pop
mov
cmp
pop
jo
and
hlt
mov
fisubs
xchg
and
clc
test
cwtl
mov
add
in
cmp
out
mov
aad
adc
inc
clc
mov
add
iret
test
push
jmp
fdivl
ret
mov
aas
pop
aam
sub
mov
icebp
daa
xchg
or
push
repz
push
cmpsb
std
jbe
and
inc
test
fs
sub
fmuls
jo
push
cmp
cmp
xchg
popa
push
dec
cmc
sbb
mov
xchg
xor
call
xchg
xchg
sbb
mov
test
mov
data16
iret
dec
stos
cmp
pop
push
mov
mov
or
mov
fldt
and
add
std
cmpsl
pop
jae
scas
shlb
push
out
mov
je
mov
pop
shl
incb
push
and
xchg
cmp
cmpsl
leave
sub
xor
fisttps
nop
adc
or
xlat
cmp
xchg
sbb
fidivrs
cmovo
jmp
shlb
pop
cmp
pop
shrb
mov
mov
inc
push
lcall
jmp
xchg
jo
adc
mov
js
cmp
les
and
test
cmpsb
sbb
test
scas
mov
jle
pop
ds
inc
dec
dec
fmull
insb
into
mov
je
shl
sub
jne
cli
je
push
repz
xchg
pushf
add
mov
lea
sub
dec
subl
ret
nop
push
pusha
inc
add
aam
jo
add
lds
mov
lret
fsts
pop
cmp
fistpll
jns
mov
mov
push
inc
fs
xor
je
mov
and
jae
add
adc
add
test
jmp
cmp
jle
std
and
cmp
jmp
hlt
pop
push
mov
test
hlt
adc
test
ret
sub
push
xchg
into
sbb
cmp
shlb
or
jge
stos
mov
int3
and
pop
pushf
enter
xchg
aas
mov
xlat
fimull
lock
shrb
cwtl
pop
fs
in
lret
inc
imul
test
and
and
pop
dec
dec
xchg
push
or
mov
push
push
pop
mov
in
cli
sarl
push
hlt
xor
nop
sbb
xor
lods
adc
cs
mov
out
test
push
or
imulb
add
ret
inc
dec
imul
outsl
xlat
cmp
inc
negb
mov
cli
lret
shll
loop
mov
jg
push
dec
pop
xchg
add
jl
sub
mov
in
sub
pop
add
cli
mov
in
insl
push
iret
push
xor
push
idivl
daa
and
inc
add
loopne
clc
in
jb
pop
jns
pusha
std
imul
xor
sub
shlb
test
repz
int3
fidivl
xor
mov
pop
or
lods
mov
xchg
cs
xchg
xchg
loopne
cltd
xor
lea
mov
lret
lds
cmp
jmp
mov
mov
and
or
sti
xorl
inc
cmp
or
fstpl
jge
das
cld
stc
add
neg
and
add
xchg
xlat
ja
inc
jecxz
push
fstpt
das
mov
xchg
lret
ret
out
bound
std
sbb
fs
sbb
in
mov
rcrb
roll
jle
add
add
cmp
pop
frstor
mov
push
mov
orl
xor
cmc
xor
push
aad
push
or
sub
and
mov
pushf
aam
cmpsb
dec
dec
or
loope,pn
loopne
sarl
test
pop
adc
decl
out
jp
xchg
adc
pusha
cmpsb
mov
out
sbb
sub
fldcw
and
or
mov
inc
and
movsb
cld
mov
negl
cmpsl
jno
rclb
adc
sbb
pusha
in
cmp
icebp
pop
inc
and
je
jg
pop
cltd
lret
ds
jo
xchg
lea
inc
jl
pop
pop
mov
ret
outsb
mov
out
xchg
ljmp
mul
dec
out
ss
pop
mov
stc
add
sub
les
push
adc
addr16
or
in
dec
jg
loope
cmp
lcall
mov
push
add
push
mov
mov
scas
adc
and
pop
mov
movsb
test
mov
xchg
repz
enter
mulb
xchg
aad
ss
or
jbe
jmp
inc
jecxz
ja
sbb
push
cmp
adc
mov
scas
in
aas
in
push
add
xchg
pop
add
sar
and
sub
jnp
stos
or
subb
push
sbb
cwtl
and
push
bswap
or
call
loope
adc
pop
pop
cmp
jo
out
imul
ja
inc
lahf
xchg
les
jecxz
sti
sub
push
lcall
mov
sti
mov
pop
push
flds
mov
test
in
dec
cmp
adc
xchg
push
dec
iret
daa
popf
mov
mov
add
inc
mov
sub
xor
cmp
or
mov
ljmp
mov
sbb
imul
cmp
pop
subb
mov
jp
fbstp
shl
aam
adc
and
dec
inc
add
popa
push
fsubrs
mov
out
adc
or
cmp
stos
out
outsl
mov
lret
shl
rorb
filds
push
inc
mov
out
fstps
jl
lret
cmovae
lahf
mov
add
mov
outsb
insl
aad
mov
testb
jmp
shrb
sub
inc
xlat
in
xchg
das
and
pop
pusha
arpl
ss
aad
add
gs
and
mov
and
hlt
rcrb
sub
adc
sub
mov
mov
sbb
leave
dec
fwait
or
in
xor
mov
dec
xor
insl
dec
aas
sbb
lods
test
and
lret
fs
sbb
mov
mov
arpl
mov
lahf
xchg
fs
into
in
mov
adc
sub
int
sub
push
or
sti
test
dec
fsubp
filds
lea
mov
xchg
mov
sbb
cmpsb
or
stos
test
and
push
jne
push
or
cmc
adc
jb
cmpsl
lea
std
fistl
inc
rcll
shll
push
addl
xlat
pop
mov
push
add
push
ror
add
inc
push
xchg
les
mov
loop
call
inc
mov
imull
xchg
sarl
or
and
test
push
jmp
and
push
inc
repz
inc
jp
sub
xor
push
or
sbb
outsb
rolb
push
lret
sub
lods
cmp
mov
filds
xchg
push
xchg
ret
mov
pop
aaa
arpl
stos
fs
dec
repnz
test
scas
adc
inc
mov
js
add
neg
mov
xchg
jecxz
nop
stos
xor
movsl
push
inc
shll
push
lds
into
popa
pop
xor
xchg
loop
dec
or
dec
nop
lock
or
push
or
fidivrs
cmp
cmpsb
gs
cmc
xchg
mov
repnz
or
and
and
les
xchg
pop
or
pop
clc
xor
hlt
outsl
lret
add
dec
loopne
xchg
mov
in
stc
xchg
jae
dec
data16
and
sub
test
jmp
lods
mov
sub
or
lret
lcall
add
or
add
std
push
jo
cltd
or
xchg
jp
dec
xchg
lahf
ljmp
push
repz
imul
test
add
jmp
fiaddl
jecxz
xchg
jg
or
sbb
and
or
sahf
push
add
loopne
fimull
inc
or
add
cmpl
jnp
in
add
aaa
dec
lods
jae
xchg
mov
aad
repz
push
xor
test
lods
pop
sub
push
mov
loopne
xor
inc
xor
lret
inc
lock
cmpsl
push
arpl
movsb
std
ja
cmp
dec
dec
add
shrl
cmp
adc
fwait
sbb
je
lds
and
repz
cmc
sub
out
cmp
mov
daa
or
repz
fdivl
jl
lock
jno
jnp
or
in
sbb
inc
or
outsl
mov
push
cwtl
pop
mov
sub
jmp
jbe
or
aaa
imul
xchg
sbb
inc
mov
mov
and
cmpb
lods
shlb
dec
scas
daa
stc
popf
and
arpl
and
cs
ror
ljmp
dec
add
mov
pop
stos
lock
rorl
and
mov
nop
stos
and
mov
imul
adc
mov
xchg
inc
jnp
push
push
test
pop
cli
add
inc
adc
aaa
pop
push
xor
push
pop
pop
or
inc
int3
cmpsl
jo
test
sub
add
fwait
xchg
das
clc
int
jl
shr
sub
dec
movsb
xor
mov
adc
sub
sbb
aam
mov
cmpsl
xor
das
mov
int3
lahf
jnp
jns
cld
mov
daa
inc
in
mov
jmp
or
xor
pop
sub
adc
inc
xor
xor
insl
pop
dec
ret
scas
cmp
push
dec
and
mov
xchg
icebp
test
adc
and
mov
arpl
adc
cwtl
mov
dec
and
les
aas
aam
mov
test
xor
dec
xchg
add
insl
adc
push
lret
xor
addl
mov
lret
dec
inc
cmp
imull
lock
cmp
inc
fs
dec
inc
push
push
mov
push
and
pop
push
sub
adc
xor
mov
xor
xchg
loopne
add
sarb
jbe
xor
sbb
cmp
cmp
mov
jge
xor
and
push
mov
inc
imul
mov
add
pop
cmc
hlt
in
jnp
sub
sub
icebp
scas
fcoml
adc
ror
shl
and
push
outsl
cmc
inc
rcrb
add
mov
jbe
in
pop
or
and
aaa
movsl
inc
movsl
test
jne
aaa
iret
mov
sbb
xchg
nop
fisttpl
shrl
popa
mov
test
inc
fwait
or
outsl
cli
test
mov
les
push
outsb
outsb
roll
stos
mov
or
sbb
inc
arpl
jge
mov
mov
iret
sub
xchg
insb
jae
xor
maxps
mov
decl
scas
sub
stos
inc
fucom
stos
push
push
inc
pop
mov
ret
jnp
push
sub
xor
pop
cs
dec
pusha
lcall
mov
cwtl
fsubl
in
popa
and
inc
arpl
push
ss
cmc
outsl
mov
lcall
test
jecxz
adc
iret
push
inc
push
inc
inc
add
ja
fbld
mov
or
push
xor
in
inc
dec
scas
outsb
loop
imul
decb
movsb
fs
or
test
rcl
and
cmp
mov
adc
cwtl
dec
stos
out
enter
in
add
sbb
or
pop
xor
jne
enter
repz
add
push
sti
pop
ds
test
pop
in
dec
add
and
mov
pop
aas
dec
xor
aaa
ret
cs
int
test
movsl
dec
xor
pusha
emms
data16
rolb
cmpsl
push
fbld
fadd
stos
in
jmp
inc
dec
test
pop
push
push
add
movsb
push
daa
out
rcr
int
pop
xor
pop
movsb
mov
dec
pop
lea
shlb
scas
adc
sbb
cs
fsubr
push
mov
jl
add
push
xchg
repnz
cmc
icebp
lcall
out
xor
subl
mov
pop
push
cltd
aas
fsubs
or
jb
dec
ljmp
mov
rcll
jnp
xor
inc
pop
scas
aad
cmp
mov
in
xor
sahf
mov
sti
je
fwait
cmp
xor
repnz
adc
data16
pushf
jae
fmul
push
cwtl
xor
jbe
aas
push
ss
push
cld
popf
out
scas
mov
pop
jno
nop
bound
xlat
aaa
rolb
out
out
pop
adc
mov
xchg
push
sub
cmc
rcrb
sbb
lret
clc
xor
shlb
xchg
imul
in
repnz
xor
pop
loopne
xor
popf
stos
inc
pop
inc
dec
ret
fdivrl
clc
es
xchg
xor
sbb
cmp
add
test
jmp
outsb
sub
loop
insl
push
fsincos
cltd
lds
cmp
fcompl
lods
push
fcoms
imul
inc
loop
mov
mov
mov
jle
sub
mov
and
enter
and
dec
mov
xchg
fwait
bound
stos
inc
adc
add
pop
stos
mov
push
rolb
push
pop
popa
les
dec
daa
adc
jp
xchg
test
mov
add
xor
adc
hlt
inc
out
adc
mov
fcmovbe
aas
sahf
push
xor
add
xor
enter
cwtl
jnp
lods
fidivl
flds
dec
or
jmp
fwait
or
add
xchg
test
or
lahf
cmp
add
jb
lock
push
mov
loopne
jbe
pop
jns
adc
or
xlat
xor
outsb
mov
movsl
mov
adc
ret
hlt
ds
scas
inc
xor
inc
pop
test
cmp
and
fsubrs
insl
cli
mov
std
dec
pop
shll
dec
inc
jge
stos
and
nop
and
fcompl
out
and
jl
or
dec
mov
leave
ss
or
mov
jg
std
lret
add
aaa
fs
lcall
jne
leave
repnz
repz
adc
lcall
jne
lods
cs
incl
imul
add
xor
mov
jnp
push
test
sbb
pop
and
addr16
mov
sbb
scas
jb
add
in
mov
add
jl
sub
ret
pop
sub
repz
nop
testl
xlat
fsts
adc
cmpl
xor
inc
cmp
icebp
push
and
ljmp
test
lods
je
sarb
mov
adc
mov
mov
sahf
subl
mov
jbe
lods
cmpsb
or
lea
sbb
ret
jns
sub
aaa
push
xchg
popf
movl
lock
ficomps
jle
out
jl
mov
arpl
loope
jno
jne
xor
and
out
aad
hlt
add
jmp
dec
popf
pop
cmp
xchg
xchg
test
divl
mov
cmp
jl
mov
adc
ret
jmp
inc
loop
fistl
cmp
jns
push
jno
sub
cmp
adc
pop
jge
in
pop
inc
jge
ss
inc
and
clc
pop
neg
scas
insl
push
jns
into
jecxz
cmp
dec
out
out
or
or
rolb
insl
cli
popa
inc
fldt
js
mov
pop
into
sarl
jge
lds
cmp
cmp
push
jno
push
dec
xor
notb
sub
es
insb
xor
daa
cmp
add
jns
push
dec
xchg
nop
add
insl
mov
pop
adc
cmp
add
notb
leave
popf
cmp
sti
in
lcall
sub
mov
pop
dec
adc
orb
mov
jo
sti
xor
imul
xchg
es
xor
ds
sub
cmp
dec
stos
adc
cli
push
adc
enter
dec
sub
insl
ret
xor
arpl
scas
repnz
adc
add
out
dec
rol
movsb
inc
xor
and
cmpsl
inc
xor
cmp
lahf
roll
lcall
inc
mov
adc
inc
xchg
les
into
and
insl
lcall
dec
pop
jle
xlat
add
pop
data16
fld
and
xor
and
or
add
jg
lock
mov
les
inc
nop
or
or
adcb
adc
push
movl
or
inc
jmp
mov
jle
lahf
insb
int
out
cmpsl
das
xor
xor
movsl
sbb
cs
pop
xchg
fadds
adc
pusha
in
idivl
movb
stc
push
sub
sbb
sbb
movsb
mov
das
jb
hlt
add
in
stos
aas
repnz
cmp
and
clc
mov
jnp
or
lcall
mov
lret
pop
inc
sbb
xchg
mov
xchg
and
xchg
cwtl
in
add
test
inc
repz
add
ss
push
filds
dec
test
inc
out
aas
mov
stc
xor
daa
jae
and
shlb
fnsave
and
out
loopne
fcmovnu
jp
loope
lcall
out
es
int3
xchg
mov
pop
cli
addr16
push
leave
pop
icebp
jecxz
dec
ja
pop
shl
fisubs
push
push
cwtl
jne
sti
pop
mov
mov
push
lds
loopne
push
jle
xchg
pop
aas
lret
push
or
sub
push
adc
and
adc
push
std
dec
mov
cmpb
aaa
inc
sub
xor
pop
ret
out
jecxz
into
dec
lcall
sub
pusha
out
loope
rolb
out
imul
mov
xchg
aam
in
sahf
sbb
fistl
mov
cmp
sahf
or
adc
imul
lret
imull
loop
adc
jecxz
call
xchg
mov
in
ret
rcrl
pop
outsl
and
dec
sub
das
arpl
shl
and
sarl
sarl
push
push
mov
cmp
pop
lcall
in
xchg
dec
call
or
sub
dec
adc
sbb
hlt
lcall
iret
pop
mov
jae
pop
push
ror
jne
dec
insb
nop
jbe
test
icebp
pop
mov
int
test
clc
jno
arpl
fsubrl
jb
lods
mov
or
mov
mov
and
push
adc
cld
pop
rcrb
xchg
xchg
or
pop
mov
mov
cs
jbe
jbe
xor
xor
dec
outsb
push
lcall
inc
std
sub
fcomps
jno
adc
sbb
ds
scas
mov
jnp
ja
ds
push
das
jno
jb
push
jmp
xchg
fucomi
cs
aaa
in
aas
sbb
pop
jl
cmp
leave
insl
cmp
cmpl
jg
insb
xor
pop
mov
xor
fistpl
xchg
xorb
test
xchg
in
or
xchg
mov
sub
mov
std
mov
mov
in
cli
jno
loope
fbld
or
mov
xchg
jnp
mov
jb
repnz
cmp
mov
xchg
movsb
xchg
dec
cmp
cmp
aam
les
pushf
xor
push
lods
ja
cmp
sub
push
adc
and
xor
je
dec
cmp
ret
or
push
andl
fsubrs
mov
lods
fcomp
push
sub
addr16
jne
mov
cmc
xlat
in
cmp
cmp
minps
lret
inc
sbb
jp
dec
mov
xchg
mov
jmp
inc
rclb
and
mov
pop
movsl
lods
sbb
pop
hlt
into
sahf
loopne
fimuls
test
or
ss
sub
fs
cmc
push
aas
jae
insb
add
test
pop
int3
shl
cmp
outsb
push
add
ja
dec
repz
popf
inc
nop
fcom
mov
mov
add
mov
bound
int
in
mov
mov
cmpsl
repz
pop
mov
imul
call
mov
cmp
inc
xchg
or
lcall
push
insb
push
jb
shlb
jae
fidivl
gs
test
cltd
lret
push
cltd
aam
mov
lcall
pusha
jbe
pop
iret
cmpsb
movl
jno
adcl
scas
xchg
fldenv
inc
in
jb
dec
das
sti
mov
adc
addr16
cmp
dec
xorl
adc
test
cwtl
imul
sarl
shrl
daa
stos
adc
ret
lcall
fs
xor
enter
jecxz
das
pop
clc
add
shl
iret
mov
dec
jmp
mov
fmuls
insl
push
sahf
or
mov
repz
rcrl
arpl
mov
movsl
clc
jle
xor
adc
jbe
and
and
xchg
jle
movsb
cmp
mov
data16
jg
mov
test
mov
mov
jmp
shr
dec
sbb
lret
popa
jae
add
pop
inc
loop
push
cmp
pop
push
rolb
adc
outsl
loopne
and
cvtdq2ps
ss
pop
mov
inc
push
lods
sahf
sbb
daa
xor
movsl
xchg
hlt
pop
imulb
out
int3
inc
nop
outsb
mov
pop
add
push
add
ret
int3
js
pop
test
test
je
or
in
fisubs
xchg
or
add
bound
mov
outsb
sbb
mov
stc
cld
mov
or
mov
cmp
inc
xchg
mov
pop
mov
push
cld
je
push
pop
push
add
pop
mov
fcmovnb
in
cmpsb
cmpsb
cmp
add
int3
adc
sbb
xchg
pop
lock
pusha
test
sub
jg
push
out
mov
and
dec
mov
mov
mov
mov
xchg
out
fcoms
xchg
push
jo
and
sbb
call
out
mov
xchg
adc
repz
or
mov
xlat
fsubp
insb
test
lds
fidivs
mov
mov
sahf
sahf
std
imul
mov
jo
mov
mov
mov
stc
enter
push
fimull
in
test
fcom
mov
rep
jne
sarb
adc
jg
lea
xchg
das
pop
iret
sbb
adc
sub
push
lea
add
popf
fnstenv
push
mov
pop
sub
call
push
stos
cmp
insb
mov
xor
cmpsl
cmpsl
std
cli
lock
bndstx
cmp
xchg
lahf
int3
xchg
mov
sbb
sbbb
inc
add
roll
cmp
pusha
sbb
je
aam
mov
push
xchg
xor
add
or
je
pusha
inc
mov
xor
movsb
xchg
ja
xchg
xchg
out
das
push
dec
cmp
sarl
xlat
imul
jbe
mov
add
mov
sub
xor
lret
loope
mov
aam
lahf
add
mov
enter
xchg
jge
cs
sub
icebp
xchg
out
inc
das
mov
insl
int
data16
cmpsb
lock
adc
rol
neg
jl
and
and
rcll
jb
sub
cmp
mov
sub
pop
stos
out
mov
push
pop
sbb
jmp
cmpsl
inc
push
clc
adc
es
push
lcall
mov
add
cmp
push
fsubr
inc
xchg
lret
ret
and
pop
and
pop
adc
xor
inc
xchg
popa
int
xor
fs
flds
cmp
pop
nop
test
fcoms
add
sbb
pop
push
pop
xchg
add
pop
fwait
imul
in
mov
pop
mov
push
jns
cmpsb
clc
fs
mov
jp
xchg
mov
out
cmpsl
sub
push
negb
out
mov
ljmp
inc
lret
in
imul
lods
cwtl
pop
aaa
add
fucomi
adc
mov
daa
jb
add
movsl
push
dec
adc
pushl
mov
inc
lods
gs
pop
mov
jge
arpl
sbb
mov
sub
mov
and
sti
out
adc
out
lds
ds
sub
je
lret
push
shll
inc
das
add
push
inc
inc
test
addr16
mov
aas
sti
in
add
inc
mov
aam
xchg
xchg
ljmp
in
loopne
add
nop
and
mov
ljmp
aad
lds
cmpsb
pop
test
iret
lcall
xchg
cmp
loopne
mov
mov
sbb
pmuludq
ljmp
push
pusha
mov
mov
jmp
insb
or
iret
lock
js
inc
iret
push
push
mov
es
inc
sti
jnp
sbbb
mov
or
jp
call
cmp
pmaxsw
aaa
enter
in
cmovnp
aad
aaa
mov
ss
sub
cmp
outsl
lretw
popf
sub
and
or
push
popf
jl
out
xchg
dec
push
mov
rcr
inc
xlat
enter
in
dec
ljmp
cltd
fs
sub
add
jae
sbb
pop
cmc
out
xchg
jae
pop
cltd
inc
pusha
dec
jno
inc
jmp
sub
lods
insb
pop
int
dec
xchg
test
inc
or
aad
mov
ds
in
jne
lahf
inc
cmc
iret
scas
js
mov
mov
inc
roll
dec
pusha
sahf
enter
out
pop
lods
jecxz
or
sbb
push
jnp
aas
pop
push
shrb
push
sarb
inc
mov
push
cli
lock
inc
jge
add
sub
jg
cmp
and
iret
push
gs
jecxz
and
filds
jbe
mov
or
add
cmp
sti
sub
imul
inc
jno
jg
dec
or
mov
pop
ret
stc
stc
test
out
rolb
out
inc
cmpsb
fldl
xchg
inc
push
add
mov
shrb
loopne
jo
inc
ret
fnstsw
int3
sti
idivl
dec
in
fsubr
stos
sti
roll
cs
lds
inc
das
rorl
call
inc
sub
adcb
sbb
cmpsb
arpl
icebp
ret
adc
jo
repnz
ja
fistps
aas
mov
xor
pop
pusha
sbb
repnz
loop
test
mov
jle
push
pop
and
sub
daa
data16
pop
mov
xor
pusha
std
pop
jae
sub
pop
mul
jb
cmpsb
cmp
fadd
jns
mov
aad
pop
nop
fs
jbe
fwait
jae
movsl
test
ds
and
cmp
rcr
push
mov
adc
or
mov
out
or
xchg
popf
int3
fstpl
inc
sahf
mov
inc
cmp
loopne
fstps
imul
sbb
xor
call
lds
push
aaa
das
fdivl
push
cltd
outsb
daa
or
and
xchg
sahf
popa
cmp
je
mov
jbe
cld
insl
outsl
cld
pop
mov
inc
aam
outsb
push
adc
negb
sbb
test
aas
fldenv
inc
lahf
jge
jmp
nop
hlt
cmpsb
jbe
xor
dec
xor
lret
push
sbb
jne
faddp
jg
ljmp
and
pop
imul
in
and
push
icebp
pop
xchg
cmpsb
lds
es
sub
and
in
xor
pop
test
mov
rcll
bound
sbb
or
fldl
lods
shlb
inc
sti
out
dec
dec
adc
mov
aam
imul
xor
jp
mov
das
xor
pop
cmc
lret
movsb
pop
ret
or
or
in
daa
cmp
testl
or
repz
jnp
mov
inc
fsubl
xchg
movsl
add
je
push
xchg
xchg
movsb
inc
push
pop
sarl
into
inc
data16
push
and
notl
bound
mov
in
out
ficoms
xchg
rcrl
jbe
push
push
cs
and
push
inc
mov
mov
cmp
cs
pop
scas
in
loop
sarb
sub
lea
sub
jae
jp
push
pop
dec
fnstcw
lret
sub
pop
jno
aaa
loopne
mov
sub
adc
add
dec
add
add
mov
test
insl
fcom
xor
jae
andl
mov
arpl
and
inc
out
sbb
add
xor
aaa
and
bound
pop
idiv
mov
cltd
sub
stc
adc
mov
sub
sbb
cmp
mov
dec
fbstp
pop
pop
push
lcall
cmpsb
push
sbb
les
sti
pusha
xchg
xor
pusha
add
adcl
or
push
roll
and
pop
lret
xchg
lret
rcrl
inc
cmpsl
adcl
mov
loopne
pop
mov
sub
cmp
mov
out
or
movsl
aam
andb
dec
lret
jg
pop
sub
fwait
iret
push
iret
ret
testl
mov
loope
sbb
adc
ficoms
cmpsl
cmp
lods
cmpsb
jle
in
adc
or
es
fdivrl
and
scas
into
xchg
xor
test
ficompl
mov
jecxz
inc
lods
mov
sbb
outsl
pop
mov
gs
jne
sub
arpl
sub
ss
mov
inc
aaa
and
xor
pop
inc
add
mov
dec
and
aam
call
sub
adc
nop
lret
cmp
add
pop
iret
data16
and
jo
and
arpl
cmp
sbb
ret
sub
cwtl
pusha
pop
mov
add
cmpl
or
pop
out
dec
rcr
adc
jmp
cs
int
enter
out
pop
je
fldl
cmc
mov
fcomp
ljmp
jge
adc
out
call
lahf
dec
lret
js
and
inc
inc
or
adc
inc
outsb
xchg
ret
icebp
popa
pop
je
cmp
or
push
mov
shrl
mov
jge
jp
das
test
cs
jbe
bound
ror
test
mov
leave
fadd
stos
imul
addl
test
lock
push
cmp
ljmp
std
rcll
add
cmpsl
iret
cmc
sarb
in
popf
xor
call
mov
daa
lret
or
fdiv
pop
test
mov
sahf
push
ljmp
rorl
test
stos
mov
movb
push
sbb
xor
xchg
out
mov
mov
stos
add
and
mov
out
adc
pop
js
lcall
mov
test
sar
popl
add
or
sbb
leave
aad
cltd
cmp
jle
mov
adc
fsubl
adc
sub
adc
dec
mov
subb
shrl
mov
inc
add
pop
dec
jb
xchg
iret
sub
data16
pop
fwait
pusha
in
add
pop
in
xchg
xor
push
add
add
mov
push
andb
mov
clc
jo
mov
pushf
inc
sbb
leave
aad
hlt
movl
scas
lock
orl
add
ljmp
jge
or
lcall
or
out
xor
adc
jl
stos
and
je
pop
add
pusha
and
mov
pop
in
insl
cs
mov
pop
lret
sbb
jno
pop
add
fwait
call
pop
push
pusha
push
sbb
and
dec
mov
fdiv
jge
js
pop
into
pop
rorl
mov
incb
shrb
jmp
push
jmp
fs
loopne
loop
adc
cltd
mov
ds
lds
mov
cs
inc
dec
xor
adc
xchg
shl
pushf
stos
push
test
in
push
outsb
sub
out
fwait
mov
aad
in
and
dec
sti
imul
mov
in
enter
in
push
cli
cmpsl
lock
in
add
pop
add
jle
shlb
aaa
push
pop
push
mov
orl
popf
fwait
popf
jnp
dec
ret
pushf
push
push
jns
inc
outsb
or
jnp
jno
call
idiv
int3
cs
sbb
add
xchg
cs
out
lds
insb
je
test
and
lock
jae
popl
insl
test
dec
ljmp
das
into
out
ja
mov
dec
mov
push
fidivrl
mov
cmp
push
add
lret
inc
dec
pop
cmp
or
mov
push
leave
cmp
pop
mov
or
mov
push
push
aam
push
jb
xor
ficoms
stos
jnp
mov
xor
cli
dec
fdivl
movsb
fidivl
and
cmp
cmpsl
adc
inc
movsl
push
cmp
push
xchg
in
jo
and
je
loope
es
mov
inc
ss
scas
insb
mov
repnz
aam
xor
xchg
dec
andb
jle
adc
repz
lea
scas
in
add
test
xchg
adc
imul
arpl
or
nop
insl
add
mov
ljmp
push
inc
mov
js
ret
int3
insb
xchg
xor
and
xchg
or
daa
sbb
xor
andb
dec
dec
push
jmp
pop
mov
push
add
imul
mov
mov
sub
imul
push
xchg
mov
clc
push
popf
ss
add
inc
mov
stc
add
mov
int
cltd
xor
lahf
fldl
pushl
fwait
icebp
jnp
pop
stos
ds
xchg
test
sub
adc
loopne
add
lahf
jl
push
std
cli
in
das
test
adc
in
lds
dec
xchg
outsl
out
mov
cmp
pop
sub
sbb
add
aad
ljmp
push
pop
jnp
mov
clc
out
cltd
out
and
jne
xchg
cltd
cmp
add
sbb
pop
add
in
xchg
bnd
subb
mov
sahf
cmc
or
cltd
mov
and
inc
jp
in
pop
in
push
mov
daa
mov
ljmp
mov
cmpsb
fnstenv
fcompl
fdiv
das
mov
gs
loope
mov
pop
mov
adc
loope
mov
jae
mov
sub
push
and
and
lds
nop
push
aas
and
testl
pop
sub
add
iret
mov
test
dec
pusha
rcll
xor
cwtd
sbb
and
sarb
fstpl
mov
sub
sub
cmp
out
sahf
fadds
pop
adc
pop
addr16
jmp
ret
jb
dec
jno
lret
clc
cli
inc
push
sub
addb
imul
mov
xor
in
movsl
jmp
lret
jae
outsb
loop
cwtl
or
sub
jns
mov
push
jo
sbb
mov
mov
mov
mov
out
pop
call
push
xchg
xorl
push
push
in
js
shr
sbb
mov
aam
adc
lds
fldt
loope
and
pop
cmpl
xlat
xorb
lahf
outsl
lds
or
push
std
inc
jne
aas
aas
jl
imul
sbb
add
pop
xchg
aam
fldcw
outsl
fwait
or
lcall
icebp
cmpsb
add
jbe
clc
cmp
shrb
mov
mov
mov
cwtl
fs
insb
push
xchg
and
insb
inc
popa
cmpb
xchg
sbb
lcall
es
flds
xlat
movsl
addr16
stos
push
repz
in
add
mov
cmp
stos
insb
lods
cmc
mov
adc
fldl
push
and
lea
outsb
mov
in
jno
mov
movsb
je
mov
mov
mov
cltd
cmp
add
mov
repnz
jbe
loopne
pop
mov
xor
and
ja
test
or
mov
lds
mov
mov
inc
lret
add
sti
ffree
insl
or
in
mov
fsubrl
pop
xchg
pusha
ret
mov
xor
daa
subb
cmpsb
ja
pop
movsl
cs
jae
enter
divl
sbb
fs
or
xor
sub
fdivrs
data16
mov
scas
flds
mov
testl
or
ja
jo
mov
repz
xor
sbb
push
pushf
mov
adc
icebp
add
rolb
imulb
mov
pop
jnp
mov
mov
push
loopne
cmp
push
jge
push
cli
ret
pop
xor
mov
aaa
movsl
push
jno
popa
xchg
lock
rcl
out
popa
push
push
mov
fisttps
mov
out
std
push
pusha
call
in
pop
notb
inc
fimuls
and
std
lret
push
add
shl
push
test
ret
int
test
repz
shll
int
lods
subps
mov
out
xorl
add
pushf
mov
rolb
incb
out
in
std
jae
mov
out
jno
mov
mov
fcom
or
lret
mov
cmp
movsl
lahf
int3
in
das
or
xchg
cmp
sti
and
and
push
fisttps
stos
jecxz
ret
xor
test
hlt
mov
imul
mov
leave
push
lcall
ret
lods
jg
dec
mov
jp
inc
fdiv
sub
nop
popa
dec
push
mov
push
lock
shl
imul
pop
sbb
lock
cmp
test
ss
inc
inc
jge
ret
ret
xor
push
or
inc
iret
mov
cmc
adc
call
cmp
dec
inc
scas
add
leave
jae
out
mov
mov
loop
lods
sarl
popf
cmp
lods
cltd
push
jnp
test
cmp
loop,pt
sbb
testb
pop
dec
fadds
sub
xchg
inc
or
rcll
insb
test
popa
and
mov
cmc
or
inc
cmp
dec
sahf
push
insb
xchg
cld
mov
scas
cmp
jg
mov
and
aas
pop
sbbl
and
pop
dec
adc
or
dec
mov
xor
aas
ror
lods
das
jmp
aam
gs
test
fwait
or
sub
cli
or
push
fs
pop
mov
cmp
mov
mov
push
inc
cld
xor
push
aam
mov
out
lret
scas
jo
or
mul
test
pusha
cwtl
fldcw
movsb
push
ficompl
cmp
or
ljmp
rorl
and
cmpsb
push
mov
inc
pop
dec
push
and
jae
cmp
call
orl
mov
and
loope
mov
jecxz
shlb
jns
jmp
mov
sub
lahf
call
in
out
mov
adc
arpl
movsb
fnstsw
in
clc
add
push
sbb
sub
neg
mov
mov
adc
lods
mov
push
adc
bound
out
das
fists
ret
dec
je
mov
dec
aaa
push
movsb
lret
dec
cltd
mov
sub
dec
sbb
mov
push
movsb
jmp
mov
js
jb
sbb
pop
out
popa
shll
rcrb
cmp
repz
in
in
xor
out
dec
jbe
pop
and
or
idivl
push
cmp
xor
cmp
mov
mov
mov
subl
adc
xor
nop
xor
sbb
inc
dec
fmul
and
inc
loop
mov
movsl
mov
and
icebp
mov
loope
out
adc
cltd
cwtl
mov
sbb
ret
or
or
xchg
dec
xchg
pop
icebp
xor
mov
pop
int3
lret
in
es
test
xchg
pop
std
add
xchg
mov
inc
mov
sbb
jae
in
les
sbb
outsb
cmp
stos
push
and
and
out
mov
shll
jo
inc
insb
repz
mov
movaps
mov
dec
pop
dec
faddl
lret
lods
pop
mov
pop
scas
sbb
xchg
jns
aam
rcrl
inc
arpl
push
repnz
stos
add
out
push
jmp
jl
int3
pop
and
sub
xor
ja
mov
push
fcomip
dec
and
xchg
pop
fucomi
cmp
das
aad
dec
cmp
mov
cmp
add
sub
sbb
repnz
jbe
xlat
rorb
xchg
jecxz
out
repz
mov
and
sbb
and
jl
data16
inc
sbb
jne
mov
repnz
in
fcoml
mov
divb
rorl
push
lahf
cmc
mov
iret
push
jns
repz
adc
nop
ret
lahf
stos
lds
cmpsl
mov
push
test
add
xchg
sub
sub
dec
dec
sbb
dec
mov
fmull
addl
test
pusha
mov
daa
inc
or
addr16
mov
in
sbb
lahf
lcall
add
sbb
je
jb
repz
in
cld
add
jmp
cmc
or
and
fdivr
adc
test
and
stc
mov
outsb
mov
xor
popf
dec
loope
adc
fstpt
lcall
mov
add
push
mov
lret
imul
clc
inc
push
xor
pop
jbe
xor
fmuls
lcall
jp
movsl
lret
cmp
imul
jns
pop
mov
push
or
xor
adc
add
pop
movsb
fwait
std
add
sub
push
pushf
jae
or
and
dec
mov
addl
jae
sbb
lcall
sti
mov
adc
dec
mov
icebp
aad
mov
push
popa
inc
and
iret
in
push
dec
and
or
cmpsl
ja
popf
inc
rcrl
jp
shrd
in
and
mov
xor
jl
xchg
dec
cs
adc
lret
cmp
jecxz
mov
push
push
add
adc
ffreep
les
arpl
add
adc
jb
mov
pusha
lcall
xchg
jg
and
enter
fisubrl
roll
pop
rolb
rclb
pop
dec
out
add
pushf
mov
movsb
xchg
xchg
mov
aas
icebp
dec
insl
fs
mov
adc
xor
fstpt
dec
sarb
rcll
dec
inc
xchg
inc
jg
push
xchg
ret
dec
dec
mov
std
push
and
pop
in
push
cmc
pop
scas
rorl
in
xor
shrl
pop
inc
addb
popf
orl
xchg
cmp
dec
mov
mov
mov
push
and
hlt
div
pop
jnp
orb
data16
outsl
cmpsl
clc
aam
pusha
test
ss
mov
dec
adc
or
nop
push
cmp
mov
icebp
sar
test
dec
cwtl
add
pop
cmp
ret
lret
inc
xor
jnp
mov
and
outsb
dec
cld
xchg
leave
mov
cmc
push
fldt
add
push
sub
or
adc
aam
out
jecxz
lahf
push
xchg
sub
xor
cmp
inc
xchg
cs
or
inc
or
cltd
sub
mov
insb
jl
mov
shll
ss
adc
cmc
addb
in
outsl
aam
mov
dec
add
sahf
push
add
aad
dec
push
mov
daa
cmc
in
jae
or
dec
pop
jmp
popf
inc
jbe
das
fbstp
dec
repz
add
or
into
inc
xchg
test
mov
jmp
push
nop
adc
and
mov
and
addr16
loopne
sti
dec
sbb
push
mov
popl
jmp
xor
sbb
test
push
jmp
jl
add
call
daa
repz
jle
dec
xor
cmp
out
cld
mov
iret
push
xchg
mov
scas
xchg
push
jo
jmp
dec
mov
sub
sbb
mov
test
cld
subl
push
sub
scas
aam
mov
push
ret
insb
sbb
scas
mov
add
cmp
pop
sbb
or
xchg
repnz
pop
mov
ss
pushf
lret
into
scas
jo
les
addr16
dec
lret
loopne
shll
gs
mov
aaa
or
jns
int3
sbb
lods
repnz
popf
movsb
mov
cmpsb
orl
dec
sub
ja
sub
sbb
cmp
aam
fstpl
add
add
repnz
jmp
and
xchg
inc
xor
fldl2e
rolb
dec
into
mov
ja
inc
jns
neg
xchg
cmp
mov
int3
mov
jl
dec
adc
lds
mov
adc
cmc
mov
lods
pop
mov
sti
push
mov
movsl
lods
lahf
dec
dec
sbb
inc
mov
aas
mov
fwait
insb
mov
mov
loop
mov
outsl
icebp
lret
jecxz
jg
mov
mov
aaa
mov
lret
gs
xor
and
stc
mov
jb
cmp
or
mov
pop
xchg
jne
je
sub
pop
pushf
cmp
push
lods
mov
add
jbe
cmpsb
and
loope
pop
sti
push
addb
push
mov
js
or
and
sar
inc
mov
xor
adc
jbe
int3
test
pop
fmuls
stos
push
in
test
and
fbstp
pushf
xor
xchg
or
fstpl
imul
adc
inc
ficomps
out
inc
pusha
sub
mov
inc
mov
sbb
jle
popa
xor
pushf
xchg
or
cld
push
xchg
push
xchg
rep
out
outsl
mov
cmp
mov
push
cmp
cmp
jmp
jg
and
nop
out
je
icebp
sbb
sbb
pop
pop
adc
lret
push
lock
or
sbb
mov
into
movsb
shll
xor
or
dec
xchg
mov
mul
outsl
dec
mov
push
cmpsb
daa
cmpsb
cmc
pop
dec
or
orb
cmc
dec
pop
push
adc
cmc
ret
add
sbb
popf
dec
mov
xchg
add
insl
jmp
sbb
pop
add
out
shlb
adc
xchg
mov
fidivrs
sbb
clc
js
repz
aam
push
test
push
xchg
inc
mov
lods
pop
cwtl
and
pop
add
lods
push
jnp
dec
into
popf
aaa
popa
cltd
dec
jge
push
out
push
stc
xchg
scas
adc
divl
xlat
adc
daa
mov
sub
push
inc
ljmp
jns
mov
shrd
ljmp
fdivl
dec
imul
fsubs
push
pushf
mov
mov
xchg
xchg
push
stos
imul
stos
enter
outsb
sub
push
mov
es
insb
jecxz
outsl
les
mov
mov
call
lret
push
dec
push
pusha
sti
mov
push
pop
mov
popf
jno
push
sbb
movsl
aaa
jl
sbb
jecxz
mov
ljmp
cltd
push
xchg
dec
lea
sbb
lock
mov
sahf
push
lods
cwtl
lods
rolb
int3
ds
jo
add
or
hlt
xchg
and
fsincos
lret
mov
test
mov
and
stos
ret
in
jmp
sub
mov
in
dec
int
call
sub
shll
inc
mov
xchg
lea
inc
push
xor
jno
mov
dec
fs
add
xor
in
adc
lahf
sbb
lcall
jns
scas
inc
outsb
aam
decl
sub
mov
stos
cwtl
addr16
cld
jns
std
loopne
aaa
jg
sub
loopne
testb
jmp
fsubr
int
cld
mov
cltd
popf
push
loop
adc
sbb
adc
cwtl
in
dec
repnz
jbe
cltd
js
xchg
mov
inc
imul
sbb
pusha
and
jae
stos
dec
xor
ljmp
pop
rolb
icebp
and
pop
add
pop
add
sbb
nop
jne
pop
inc
add
negl
and
pop
movsb
xchg
jl
shll
cmp
inc
orb
xchg
pop
scas
fiaddl
enter
sub
mov
adc
push
adc
jne
enter
mov
cmp
xlat
and
cmp
xor
mov
adc
rclb
xor
fildll
jne
mov
pop
push
dec
push
push
stc
lret
jb
pop
mov
fs
lret
inc
sbb
adc
adc
loope
and
inc
test
out
aaa
lret
add
dec
inc
or
ds
cmp
je
sbb
cmp
pushf
add
cmp
push
or
mov
aad
adc
roll
mov
es
cltd
insl
or
lret
jno
add
mov
lahf
xchg
push
dec
xor
cmp
pop
mov
scas
cmpsl
mov
push
nop
shrl
fidivs
loop
sbb
mov
imul
inc
idiv
jl
mov
repz
sbb
mov
cmp
add
jecxz
or
sbb
ret
xchg
add
push
pop
mov
inc
dec
adc
jnp
mov
jmp
push
arpl
push
or
xchg
je
push
popa
add
sub
cmp
fs
je
ret
mov
and
mov
cmp
xchg
fstpt
lret
pop
test
repz
jb
jnp
loopne
pushf
test
xor
scas
xchg
out
inc
fbld
inc
and
sub
inc
xor
jl
mov
flds
and
scas
lret
mov
loop
and
cmp
or
xlat
xor
sbb
andb
push
pop
ret
cmpsb
in
push
pop
jno
iret
ja
jnp
or
aaa
add
mov
adc
jbe
xchg
addr16
adc
sahf
into
lcall
jae
mov
push
sub
xchg
sbb
adc
push
mov
ljmp
test
jnp
lods
or
mov
mov
icebp
adc
sbb
icebp
jp
popf
jge
lods
jmp
mulb
sub
mov
mov
idivl
cmpsb
cmp
testb
lock
popa
mov
bound
inc
stos
or
or
stc
adc
mov
jg
gs
push
inc
ret
test
out
je
ds
xor
movsl
pop
xor
imul
jp
sbb
call
add
sbb
outsb
sub
pop
mov
mov
testb
inc
jo
inc
mov
outsb
add
mov
rcr
pop
testb
clc
testl
or
enter
cmpsl
push
nop
or
lock
jg
loopne
call
rsqrtps
ja
push
pop
out
loopne
mov
cli
cmp
xchg
iret
mov
mov
sti
nop
mov
lahf
rclb
add
cltd
xor
es
mov
cmp
mov
mov
xchg
or
dec
loop
fs
rclb
icebp
jp
xor
jmp
movsb
mov
mov
outsb
out
mov
jmp
dec
in
les
test
hlt
sbb
inc
mov
enter
int
sbb
add
mov
pop
mov
ljmp
loopne
lcall
xor
xchg
jl
push
notb
sub
inc
jle
cmp
xchg
popf
xchg
ljmp
lods
lock
rcll
inc
cld
mov
ret
test
loopne
pop
xor
sbb
inc
mov
mov
xchg
scas
test
fcompp
mov
push
outsl
aad
pop
leave
adc
xchg
pop
xchg
dec
xchg
in
cmp
ret
xchg
mov
aam
cltd
xor
mov
push
out
and
sub
lods
fstp
js
sbb
push
cwtl
lret
out
sbb
mov
dec
loopne
call
xchg
rorb
repz
mov
jbe
jne
arpl
mov
add
cltd
out
sub
inc
jb
sub
push
add
mov
mov
idiv
xchg
xchg
adc
out
sub
dec
rorb
xlat
sbb
adc
cmpl
sbb
jle
fcoms
cmpl
push
out
jne
addr16
push
ljmp
sbbb
and
and
movsb
dec
mov
inc
mov
scas
orl
pop
bound
std
stc
inc
jb
push
cli
and
jmp
fs
dec
fimuls
mov
cmp
jb
imul
rcrb
mov
repz
mov
cs
adc
xor
insb
imul
pop
aaa
xchg
sti
jne
arpl
inc
mov
adc
lods
stos
mov
push
sbb
or
pop
push
mov
mov
push
dec
jecxz
scas
pop
xchg
cmc
xchg
movb
fildl
icebp
iret
es
pop
pop
aam
jno
adc
xchg
xor
or
xor
cmp
fisubrl
and
cmp
cld
les
fwait
sub
rclb
pop
mov
mov
cmova
icebp
add
jns
cld
mov
mov
loopne
push
push
ret
push
orl
cmpsl
and
std
adc
and
or
sub
pushf
sub
notb
sub
mov
jo
incl
xchg
fiaddl
push
int3
dec
ljmp
lret
into
divl
jge
test
push
mov
scas
xor
push
flds
jge
in
mov
mov
insb
sub
cmp
pusha
and
mov
shll
scas
push
mov
out
int3
out
mul
push
insl
xchg
leave
sahf
daa
sti
push
inc
inc
add
jns
push
inc
sub
xchg
xchg
xlat
out
xor
data16
clc
mov
inc
mov
insb
xchg
sbb
fstpt
arpl
bound
test
rcrl
adc
shll
aam
and
jecxz
jae
aas
mov
mov
leave
push
xlat
call
or
in
nop
ss
xchg
mov
push
push
mov
xchg
inc
mov
xchg
sub
shr
adc
sbb
ja
daa
js
rcrb
enter
rcll
mov
xchg
mov
out
sub
ja
clc
jne
fldcw
mov
out
test
or
sbb
jge
xchg
inc
mov
daa
sub
cmpl
cmp
jno
pop
cmpsb
outsl
mov
imul
nop
jne
jae
mov
in
adc
push
jne
mov
mov
xchg
leave
dec
les
addb
jge
pushl
push
dec
cmp
and
decl
call
bound
ss
sbb
or
lret
bound
pop
pop
mov
inc
mov
cmpb
xchg
cmp
mov
push
xor
mov
outsl
pop
adc
adc
sbbb
mov
lods
shlb
mov
lcall
mov
dec
hlt
xor
mov
sbb
adc
rclb
cs
jmp
inc
repnz
jp
push
and
jge
imul
cmp
in
out
jb
orb
popa
daa
push
cmpl
dec
loop
jg
and
cmp
lcall
in
add
ss
pop
or
adc
jae
sti
sarb
xchg
inc
jg
dec
lds
scas
stos
lahf
imul
iret
xor
popa
add
cwtl
mov
daa
pop
or
movsl
jo
inc
pop
push
icebp
push
sbb
out
test
inc
stc
js
pop
sar
push
shl
hlt
aad
test
hlt
xorb
aad
lret
xchg
lock
lret
jg
cmp
data16
arpl
test
inc
xor
jns
outsl
push
pop
pminsw
mov
rolb
or
adc
rorb
jbe
jae
xor
jo
out
dec
adc
xor
dec
cmp
scas
fs
aas
repnz
bound
mov
inc
xchg
cmp
scas
daa
fldlg2
ja
arpl
sbb
pusha
outsl
testl
and
scas
fnstsw
mov
test
sub
mov
mov
inc
lret
jl
mov
loopne
cmp
cwtl
jge
das
arpl
or
andb
dec
pop
in
pushf
xchg
imul
mov
jo
mov
mov
cmp
or
push
inc
mov
jmp
pushf
dec
lds
iret
call
mov
and
adc
mov
fmuls
sbb
shll
sub
enter
mov
dec
lods
cmc
pop
sbb
imul
pop
xchg
xor
lods
xor
stos
dec
inc
ljmp
es
lret
sti
xor
test
cmp
int3
or
pop
jge
ss
sub
jl
jns
jne
or
mov
inc
shrb
lods
add
js
mov
orl
movsb
add
or
leave
sbb
mov
push
hlt
push
mov
inc
jg
ljmp
xchg
inc
sub
call
mov
lock
cmp
jge
out
xor
gs
inc
cld
add
cmp
test
sbbb
enter
out
sub
outsb
xchg
push
ret
out
inc
movsl
fistpll
cmpsl
outsb
xlat
bound
lock
imul
adcb
neg
pop
fistpl
jg
aam
insb
push
ss
pushf
mov
cmp
jns
pop
mov
cmpsl
jmp
fcomp
adc
mov
ss
mov
jnp
repnz
test
pop
push
out
jge
dec
addr16
cmp
and
outsl
aas
inc
mov
in
rorb
data16
addr16
sub
or
rorb
mov
mov
and
iret
imul
loop
and
sub
js
cmp
je
push
or
cmc
or
xchg
mov
arpl
fwait
cmpsb
inc
xchg
bound
push
loop
pop
pop
jno
out
mov
inc
lock
stc
ficoml
test
imul
push
iret
xor
stos
in
loope
mov
xor
repz
aad
jae
push
aas
cmp
push
iret
daa
inc
fucom
aad
xchg
repnz
lods
jmp
test
popf
dec
xchg
add
dec
mov
pop
sbb
jle
call
mov
sub
aam
sbb
mov
das
jl
imul
inc
jo
ficompl
in
outsl
in
push
loop
cmp
mov
inc
inc
mov
imul
inc
cmp
out
pop
mov
mov
push
cmp
xchg
sbb
mov
addr16
adc
std
add
rcll
arpl
xor
push
aad
jae
divl
mov
xchg
mov
out
xor
mov
sub
cmpsb
xchg
lahf
cmp
mov
adc
add
out
insl
jecxz
add
mov
in
pop
inc
inc
or
or
ret
push
add
incl
add
pop
lods
enter
mov
fdivs
mov
into
pop
jae
pop
mov
outsb
xchg
push
popf
ficomps
mov
add
or
test
push
adc
add
push
xchg
cmp
or
add
inc
nop
dec
inc
mov
pop
jno
pop
cmp
pop
jae
and
cmpsl
out
and
mov
mov
cmpsb
jo
mov
mov
shr
push
std
xchg
cmp
daa
add
leave
shll
xor
sbb
xor
add
push
ljmp
cmc
cltd
push
out
dec
cmpsb
pop
push
add
pushf
inc
sbb
push
jnp
or
in
jns
lcall
xchg
cwtl
icebp
into
push
pop
loope
imul
sbb
fisubl
xor
dec
outsb
pop
fistl
ljmp
mov
ds
inc
ljmp
scas
icebp
dec
lret
ficoml
pop
inc
pop
mov
jp
lcall
sub
add
shrb
popf
je
mov
inc
fldl
or
jnp
ss
cltd
fwait
push
lret
movsb
out
sysexit
pop
jns
call
cmp
jae
testl
mov
push
adc
insb
das
dec
or
aaa
inc
or
mov
xchg
mov
jbe
mov
mov
decl
hlt
pop
jo
in
mov
add
and
es
and
movsl
jno
jge
sub
mov
push
test
inc
xor
push
mov
or
lahf
mov
mov
xor
push
pop
imul
sub
ja
mov
push
call
xchg
lock
dec
add
or
ja
fldl
movsl
push
popf
insb
mov
in
push
xor
pushf
mov
and
das
fidivrl
sbb
hlt
cmp
and
xchg
outsl
ficoml
cmp
aad
cwtl
or
push
sub
mov
pop
mov
dec
or
fwait
in
iret
add
adc
pop
pop
xor
in
cmp
sbb
mov
add
jle
dec
fldl
int3
and
pop
pop
mov
pop
mov
push
cmpsb
dec
add
movsl
inc
mov
in
mov
popf
insl
dec
int3
or
enter
mov
fidivrl
inc
mov
or
idivb
xchg
add
inc
sbb
sub
or
xor
lahf
fst
jno
mov
and
cmp
bound
jmp
mov
shll
rorl
dec
mov
jo
into
xor
mov
xlat
mov
add
add
pop
add
add
or
push
jbe
sti
jb
sbb
clc
mov
adc
mov
add
dec
push
xor
ss
or
sahf
scas
jmp
cmp
xlat
mov
stos
loope
xchg
xchg
mov
iret
xchg
inc
and
in
std
mov
paddd
cmp
add
dec
or
mov
loope
mov
rcr
push
jns
hlt
pop
mov
enter
xchg
int3
mov
test
pop
rcrb
pop
push
pop
sub
cmp
pop
imul
cmp
dec
jnp
das
lahf
mov
mov
adc
popf
xor
xchg
xchg
addr16
xor
scas
pop
and
jmp
out
push
dec
cmp
inc
aas
stc
sahf
ficoml
imul
mov
sbb
sub
push
push
mulb
stos
jp
mov
test
cmp
mov
or
cwtl
inc
sub
nop
cmpsb
pop
sub
xor
mov
pop
jno
push
test
test
aas
mov
gs
jne
cmp
pop
inc
lcall
icebp
mov
sbb
mov
je
stos
lea
inc
dec
adcb
jae
push
test
and
ljmp
cmp
dec
push
sahf
adc
push
shll
imul
adc
insb
xor
inc
jbe
in
lcall
xchg
cmc
push
adc
aad
cmc
mov
mov
int3
pop
in
test
test
mov
lds
sub
loop
cltd
sub
pop
ljmp
stc
pusha
push
push
mov
pop
ds
lods
sbb
or
and
rcrl
cmp
push
dec
pusha
xchg
xchg
sahf
pop
pushf
add
rcl
leave
sub
inc
xchg
cmc
aam
js
fsqrt
pop
inc
mov
std
push
mov
mov
mov
jne
ret
aaa
dec
xor
and
repnz
lds
inc
fmuls
and
jo
push
ljmp
fsub
pop
mov
mov
hlt
enter
scas
outsb
inc
movsb
or
or
movsl
push
mov
imul
mov
mov
adc
ret
roll
mov
daa
add
adc
push
pop
je
stc
inc
fistl
mov
cmp
repnz
sbb
or
mov
pcmpeqw
and
xor
orl
mov
sub
hlt
fdivs
outsb
inc
test
ds
sub
in
mov
and
stc
hlt
jl
sar
xlat
mov
cmp
in
inc
cmc
pop
fadds
orb
pop
rcll
popa
fnstcw
test
or
xor
filds
mov
std
mov
shll
ds
loope
or
test
push
mov
jno
es
sub
cmpsb
mov
mov
xchg
insl
add
push
or
dec
cli
xchg
sbb
fwait
sub
cmpsl
dec
lock
aad
push
sub
xchg
movsb
and
sbb
movsl
dec
and
lea
xlat
or
dec
and
out
loope
je
push
imul
mov
mov
push
out
fucompp
add
pop
fistpll
out
push
xchg
push
push
sbb
icebp
shlb
mov
jbe
jae
pop
sbb
adc
cmpsl
jle
xor
arpl
clc
test
mov
mov
mov
addr16
ljmp
fsin
inc
idiv
sbb
bswap
dec
dec
lds
jg
mov
faddp
cmp
pop
and
ja
sbb
jecxz
or
push
jnp
cmpsl
lahf
dec
mov
lret
jo
adc
push
xchg
push
ss
in
inc
mov
movsb
sbb
fildll
xlat
stc
mov
mov
stos
sbb
or
in
xchg
out
lock
aaa
les
pop
jp
rorl
push
mov
inc
cmp
xchg
dec
movsl
adc
fistps
out
inc
repnz
push
iret
cmp
data16
push
insl
push
jno
and
stos
add
cld
mov
fwait
mov
clc
jne
dec
jae
rorb
shll
fldenv
dec
adc
xchg
nop
out
andps
adc
mov
gs
cmp
inc
int
andl
pop
pop
loop
push
scas
int
insb
bnd
daa
xlat
mov
shrb
leave
out
cmc
fwait
mov
xchg
jne
mov
out
xchg
mov
lret
out
mov
pop
mov
mov
out
and
push
outsb
push
test
cs
xor
push
js
fxch
pop
pop
push
xchg
movsl
nop
rcrl
cli
jmp
and
sub
push
or
bound
lea
in
inc
or
into
add
mov
hlt
fnsave
fildl
cmp
sub
sbb
clc
dec
push
fs
iret
lock
test
leave
or
xlat
and
aam
xchg
faddp
lds
jmp
fisubl
sbb
push
cmpsl
cmp
xchg
push
fs
mov
sti
jg
dec
in
pop
jp
jl
loop
ret
add
add
pop
mov
mov
rol
aam
enter
mov
leave
lret
stos
xchg
aaa
or
nop
cmp
or
insl
adc
sub
cmc
sbb
faddl
push
inc
inc
xchg
sbb
pop
dec
pop
int3
push
pushf
adc
xor
loopne
lds
mov
adc
inc
adc
sbb
clc
cltd
fwait
ret
cmpsb
fwait
rol
lcall
inc
shll
mov
sub
sbb
imul
xchg
or
jge
sub
call
mov
mov
pushf
adc
or
inc
jp
or
xchg
mov
call
xchg
jb
sub
icebp
aam
in
lods
jp
adc
leave
or
or
lret
and
add
pop
lahf
imul
inc
mov
lds
sbb
and
mov
cmp
sbb
bound
push
cmp
aaa
es
xor
push
out
fistps
or
iret
jle
ljmp
mov
xor
push
sahf
or
xchg
push
clc
cwtl
or
xchg
mov
imul
cmc
stos
xchg
pop
mov
mov
push
and
add
cmp
dec
outsl
aad
xchg
rep
jecxz
in
or
stos
je
leave
out
imul
popf
out
jbe
dec
ret
cs
adc
add
mov
push
pusha
xchg
mov
iret
and
insb
push
add
mov
nop
jmp
cwtl
pop
sbb
sub
js
add
das
in
loope
jae
ret
negl
js
repnz
scas
xchg
jbe
jp
mov
and
adc
inc
shlb
pop
je
cmp
ja
cmp
sub
bound
lds
mov
rcrl
pop
clc
push
fcom
adc
pusha
mov
sub
stos
cli
cmp
push
cmp
insb
sub
stos
std
test
enter
pop
pop
push
adc
push
xor
adc
xchg
xchg
jg
mov
push
mov
jae
or
rolb
jecxz
in
jns
mov
in
pop
push
in
out
mov
fldcw
sqrtps
jp
push
cmp
dec
daa
cmp
xchg
jmp
sub
jne
mov
mov
data16
cmp
dec
mov
sarb
repz
dec
pop
xor
and
test
int
fs
xor
xchg
scas
cltd
sbb
mov
jae
or
and
fisttps
sti
sub
imul
aam
subb
in
clc
or
xlat
inc
sub
scas
popf
pop
jbe
ljmp
or
xchg
insb
aam
push
daa
adc
subl
dec
js
dec
mov
test
cmp
fisubs
scas
repnz
sub
push
jne
push
pop
insl
mov
out
out
inc
pop
jg
or
shr
sahf
into
stos
addr16
test
call
je
divb
pop
aas
fsubp
mov
pop
rcrl
pop
mov
shlb
ljmp
jecxz
xor
cld
fs
cmc
pop
dec
aas
or
imul
pop
or
adc
ljmp
insl
inc
jg
jb
hlt
subl
sbb
test
xchg
cmpl
push
and
pushf
or
xor
sub
roll
in
popf
in
xchg
imul
push
mov
test
insb
sar
test
ret
loopne
sbb
stos
leave
shlb
add
mov
or
pop
xor
lods
and
test
xchg
pop
mov
xchg
inc
mov
or
cmpsl
xor
shll
jmp
xor
dec
cmpsl
pusha
lret
int3
xchg
pop
xor
enter
scas
in
idivl
test
add
insl
loope
dec
mov
ljmp
mov
jg
repnz
aam
or
push
mov
push
testb
insl
in
push
jg
out
stos
and
lahf
mov
sbb
int
out
push
rolb
pop
int3
pop
adc
xlat
mov
in
jo
pop
dec
shll
ljmp
enter
jl
lock
sub
dec
fcmovne
into
and
sbb
adc
fwait
xor
cmp
cmp
scas
xlat
loop
insl
sub
jp
sbb
jb
sbb
or
in
cli
pop
pop
lahf
cmp
js
xchg
lods
out
fbld
sbb
mov
inc
gs
dec
jmp
push
cs
and
es
stc
in
jge
add
mov
hlt
sar
push
cld
js
imul
xchg
add
ficomps
jecxz
xor
cmpb
dec
mov
mov
andl
pop
jne
jle
rclb
adc
xchg
arpl
out
mov
lods
jno
or
das
es
and
bound
push
push
mov
pop
lret
cmp
test
imul
add
sahf
pop
fistps
xchg
pop
loop
inc
dec
div
es
in
out
inc
aad
dec
sbb
sbb
push
rclb
xchg
cmp
inc
test
je
mov
lcall
mov
aam
fcompl
and
sbb
hlt
call
jmp
ret
int3
jp
inc
xor
rol
loope
jge
add
imul
fimull
jnp
in
mov
fistps
xor
mov
mov
mov
lahf
push
test
mov
dec
adc
sub
cmp
push
mov
ret
dec
inc
jnp
inc
pop
push
push
sbb
dec
push
cmp
jl
xlat
jg
jne
lock
jns
lea
call
mov
jge
mov
mov
mov
daa
jmp
icebp
movsl
fneni(8087
shl
mov
pop
xlat
lods
xacquire
fcom
mov
js
std
xor
sub
inc
mov
shr
sub
fnstenv
xchg
iret
mov
gs
rcl
mov
test
iret
enter
test
into
aas
push
scas
pop
mov
lret
sub
xchg
cmpl
dec
pop
fwait
icebp
fmul
cs
gs
stos
loop
mov
xchg
imul
popa
jge
dec
daa
mov
push
jp
js
aam
or
adc
mov
repz
pusha
xlat
cmc
lods
ss
mov
sahf
dec
adc
pop
sub
and
sbb
pop
and
int
arpl
cmp
sub
sti
jg
enter
inc
mov
jo
cmc
inc
adc
bnd
lcall
inc
or
rdpmc
mov
lcall
cmp
repz
insb
out
rcll
xchg
sbb
add
aas
xor
push
jle
incl
out
sub
fcompl
sarl
daa
mov
adc
sbb
jl
add
aas
and
mov
jle
pushf
and
mov
inc
or
inc
fistl
push
ds
leave
repz
cmp
inc
xor
pop
jae
fsubl
pop
pop
fsubp
movl
dec
jnp
out
push
sbb
push
xchg
xor
rep
in
iret
add
rcr
sbb
push
cmpsb
roll
fsubl
stos
mov
imul
ss
repnz
push
and
sahf
add
stc
adc
ja
and
iret
mov
es
nop
xchg
cmp
in
gs
icebp
insl
ret
or
jb
push
jbe
jle
in
sti
jne
cmp
sarb
jp
xchg
pusha
xchg
scas
fisubrs
stc
sub
and
add
pop
clc
dec
jp
pop
orb
lock
jnp
xchg
mov
or
mov
or
imul
mov
add
js
roll
inc
jbe
dec
or
adc
cmp
inc
add
addr16
enter
xor
jle
xor
cmpsb
mov
cmp
inc
add
pop
push
push
xor
gs
das
jne
das
xor
dec
or
jne
add
mov
test
lahf
and
adc
movsb
addr16
test
std
hlt
out
cmpsl
shll
rcrl
adc
arpl
cld
mov
adc
scas
add
mov
lods
dec
add
pop
add
fwait
js
data16
leave
jbe
add
pop
movsl
and
mov
loop
lods
dec
insb
stc
lret
lea
push
leave
fwait
data16
sbb
sbb
mov
dec
popa
mov
mov
sete
test
push
int3
mov
inc
fs
cmp
outsl
cli
dec
mov
mov
sbb
les
adc
popf
xor
inc
inc
dec
pop
and
jne
clc
jl
cmp
mov
inc
pop
mov
sbb
push
cmp
call
loopne
mov
mov
dec
cli
push
call
xchg
push
or
add
les
adcl
aas
aam
fnstsw
fsubrl
pop
rolb
or
loopne
jmp
adc
nop
outsl
mov
cmp
out
roll
cmp
add
dec
or
adc
jbe
imul
icebp
and
enter
fstp
adc
cmpsb
testl
popf
mov
arpl
sbb
loopne
dec
clc
fnsave
sti
add
test
mov
mov
dec
stc
cmp
leave
mov
mov
jmp
dec
shrb
mov
add
mov
push
dec
fdivrl
inc
mov
ljmp
test
stc
mov
popa
daa
adc
inc
clc
scas
cmpsb
mov
push
jo
inc
mov
aam
outsb
add
mov
ss
jne
data16
push
cli
xchg
das
sbb
addps
adc
lods
movsb
dec
push
mov
pop
xlat
std
jne
clc
lcall
stc
xor
mov
sbbb
in
jle
or
es
push
cli
fstl
div
fcmovnb
clc
cmc
roll
sub
pop
lcall
lcall
or
test
mov
dec
inc
xchg
sbb
or
fistl
xchg
sub
mov
loope
mov
jecxz
fiadds
pop
xchg
inc
imul
pushf
xchg
rcrb
test
out
ret
cmp
dec
not
pop
subl
sbbb
ficoms
jo
sar
mov
loope
repz
shrl
cmpl
dec
cmpsb
sbb
ljmp
dec
jno
fcoml
inc
mov
pop
mov
inc
sbb
lods
dec
stos
jne
jmp
adc
mov
loop
xchg
rcr
push
int3
into
inc
lahf
sub
jp
adc
mov
data16
add
into
cld
es
mov
outsb
mov
fistpl
jl
iret
repz
lret
rcr
pop
icebp
or
push
mov
xorl
add
mov
adc
xchg
add
fcompl
shll
sbb
jg
push
sbb
mov
sub
or
es
xor
inc
sbb
or
insb
loope
cmp
dec
in
xchg
or
aaa
adc
ljmp
fstps
daa
outsb
mov
int
xbegin
mov
mov
or
mov
inc
mov
ret
dec
lock
sbb
dec
xchg
push
adc
inc
lea
cltd
int
clc
push
inc
or
cmpsb
and
loopne
mov
ds
adc
push
xor
pop
sbb
clc
inc
push
adc
mov
mov
lods
leave
inc
and
cmc
test
jl
out
mov
sbb
xchg
int
add
pop
xor
inc
inc
fildl
sub
mov
push
fildl
iret
dec
ljmp
fidivs
ljmp
movsl
pusha
push
bnd
cmp
sti
imul
aam
repz
jne
mov
je
adc
jg
lcall
ret
and
ss
mov
vmovq
sub
out
cs
pop
inc
xor
xor
cmc
jb
xchg
mov
mov
mov
cmp
mov
push
push
jbe
sub
mov
adc
push
dec
imul
outsb
fnstsw
lds
jno
push
push
jne
and
movsl
pushf
inc
cmp
pop
lret
div
lds
xchg
jge
rcll
lods
lahf
jmp
add
lahf
xchg
xorb
mov
in
ret
xor
sbb
ficomps
jne
xchg
fcomi
out
lcall
xchg
mov
rolb
push
mov
cmp
fisttpl
push
sub
sbb
and
adc
push
mov
lock
fcmovne
push
scas
insb
in
cld
les
mov
push
jp
cmp
pop
ljmp
test
test
or
pop
pavgb
pop
ficomps
add
cld
sbb
xchg
mov
aad
push
imul
pushl
jle
lret
jl
mov
fcmovne
mov
ja
out
jge
mov
out
mov
scas
sub
lods
in
sar
sub
xchg
lea
idivb
mov
or
pushf
xchg
jecxz
sub
fmull
and
js
add
cmp
sti
or
js
bound
xchg
pop
ds
pop
fmul
jne
or
fwait
push
dec
sahf
fisttps
jnp
imul
out
movsl
push
add
fdivrl
icebp
jmpw
scas
add
and
jbe
outsb
daa
call
cmp
dec
dec
addr16
push
dec
enter
add
push
sub
cmp
shll
sub
mov
and
movsb
pop
iret
bswap
ror
push
cmc
cmp
pop
adc
cmp
popa
imulb
aad
lods
rcl
mov
pop
dec
clc
outsl
sahf
test
mov
pop
loopne
out
add
xor
xchg
dec
adc
sub
sbb
pusha
es
and
push
push
push
dec
stc
out
cmp
push
jmp
in
dec
mov
lret
mov
out
mov
cmpb
js
into
xchg
lods
enter
fst
jae
pop
lret
fcmovnbe
in
sub
mov
push
push
mov
inc
fs
out
jge
mov
and
fnsave
jl
insb
inc
add
hlt
addr16
cmp
cltd
mov
das
cwtl
sti
push
pop
sub
arpl
dec
xchg
sub
aad
pop
cmpsl
push
lods
sbb
popl
inc
and
divb
and
aam
out
lret
daa
rorb
jmp
sub
xchg
pop
sub
jl
lcall
lea
fnstsw
xchg
or
dec
mov
in
ret
std
cltd
dec
repnz
aas
aaa
lods
pop
loope
loop
push
fimuls
jae
rorl
jns
add
mov
mov
mov
out
pushf
addl
mov
shrl
ja
scas
sbb
or
cli
pop
xchg
popf
add
fcoms
pop
nop
hlt
xlat
or
mov
or
lods
shl
sbb
ljmp
inc
aas
xchg
ljmp
imul
add
push
repnz
add
xchg
gs
sub
int
lods
xchg
je
add
add
les
rep
adc
fucomp
xchg
xchg
or
jge
test
call
pop
mov
or
mov
mov
pcmpgtb
sub
test
xchg
iret
jl
out
ret
stos
dec
outsb
rolb
cmp
cmpl
push
pop
inc
mov
insb
mov
cltd
add
jb
mov
mov
inc
inc
dec
popa
sti
fcmovbe
push
jl
cltd
sub
gs
les
jl
sub
mov
and
sarb
int3
mov
jecxz
popa
dec
das
ret
jbe
pop
mov
mov
insl
out
fdiv
shl
repz
sub
inc
push
add
dec
and
inc
jmp
mov
inc
push
iret
popf
add
and
add
jmp
pop
or
inc
aad
ret
seta
adc
fisubrl
in
leave
in
add
dec
out
adc
insl
sbb
scas
fistpll
and
sub
cmp
jg
pushf
push
or
xor
hlt
sbb
sar
fsubrl
mov
push
aaa
dec
sub
push
lods
sti
test
adc
cwtl
xorl
cltd
xor
es
inc
pop
or
push
xchg
out
das
mov
stos
mov
push
ss
jmp
mov
push
popa
popa
es
arpl
ss
mov
stc
mov
in
ficoml
testb
push
cmp
movsl
in
pop
xor
aas
ljmp
mov
pop
repz
test
adc
xchg
repz
std
pop
fsubp
mov
inc
and
cmpsl
lret
push
ss
mov
imul
push
xorb
loopne
int3
mov
mov
mov
xor
cmpb
decb
jmp
enter
fmull
cmp
pop
sbb
icebp
xchg
test
cmpsl
jns
pop
movsl
dec
ret
addl
mov
jne
mov
movsb
dec
push
mov
push
movsb
or
in
or
pop
mov
gs
jp
and
popf
or
dec
jns
xchg
outsb
arpl
dec
rcrl
lret
push
pop
push
cmpsb
addr16
aaa
daa
mov
in
es
int3
dec
aam
cmc
movsl
iret
imul
add
xor
or
leave
adc
leave
popf
cmpsb
test
divb
sbb
pop
pushf
cmp
cmp
jno
jne
add
adc
sub
enter
pop
stos
imul
imul
push
sub
xor
loope
scas
jmp
scas
fiadds
ja
add
hlt
xchg
std
mov
or
xchg
mov
pop
pop
inc
mov
hlt
fsubrp
scas
lcall
push
push
mov
and
mov
xchg
in
push
shlb
xchg
mov
inc
dec
xchg
mov
mov
dec
xor
xorl
jno,pt
fs
int3
mov
incl
pop
bound
mov
rclb
notl
ds
xchg
das
jae
dec
adc
push
addl
sbbl
mov
movsb
xor
cld
push
push
mov
subb
mov
fisubrs
push
ds
adc
mov
sbb
int3
testl
stos
imul
push
xor
xor
mov
cmp
push
jmp
mov
imul
iret
pop
mov
aad
sti
lds
int
mov
mov
mov
xchg
pop
fnstcw
es
sbb
mov
or
int
addps
mov
fidivl
jo
ret
mov
ds
cmpb
xchg
scas
inc
lcall
fistl
fwait
scas
out
loop
pop
mov
xchg
outsb
inc
mov
adc
and
cs
mov
sbb
adc
xor
adc
data16
mov
xor
mov
jmp
loopne
mov
out
mov
aad
repnz
into
dec
jmp
fisubs
aad
add
loop
mov
lods
fwait
cmp
hlt
rorb
int
pop
or
mov
jae
mov
outsl
pop
push
cltd
jae
push
and
mov
shrl
jnp
push
mov
mov
mov
mov
xor
jns
insb
mov
sarb
pop
mov
fnstenv
test
jge
push
push
jmp
out
xchg
sub
push
adc
sti
loope
xchg
jbe
in
lret
push
push
dec
sbb
clc
fwait
jp
push
into
outsb
mov
pop
loopne
sub
repz
call
std
cmpsl
and
pop
push
outsb
fstpt
jl
jecxz
add
repz
sub
lahf
pop
int3
push
sbb
pop
mov
icebp
js
test
gs
orb
mov
pop
jl
and
mov
repz
daa
pop
xor
ljmp
and
popf
loope
xchg
rcl
and
pop
adc
rolb
push
leave
sub
popf
xchg
outsl
xchg
imul
cwtl
jmp
and
test
cmp
sub
out
sub
std
sbb
xchg
mov
and
sbb
stos
inc
pop
add
or
shl
xchg
inc
daa
popa
stc
andb
push
aas
pop
mov
inc
jbe
cmp
mov
in
nop
sbb
bound
fs
cmp
rcrl
mov
pop
loop
jns
push
in
and
in
lret
pop
sub
add
mov
mov
push
out
int3
fmul
mov
mov
jl
mov
fidivrl
test
sbb
aas
jnp
out
gs
loopne
adc
iret
scas
movsb
jns
and
js
xor
and
mov
mov
or
mov
aas
jmp
mov
push
outsl
push
leave
loope
mov
cmp
outsl
lock
sahf
jmp
sub
xchg
mov
cltd
or
mov
out
jecxz
cmpsb
or
pop
add
xchg
sub
add
pop
lret
jp
push
les
adc
outsl
and
mov
cli
or
subb
leave
push
add
jae
aaa
pop
cmpsb
jo
les
hlt
push
in
jbe
jl
pop
mov
adc
push
jge
xlat
cld
cmp
pop
add
pop
xchg
ret
iret
jg
adc
fsubrs
aam
cmp
adc
int
mov
orb
nop
lods
stos
mov
jne
cmp
stc
das
cs
dec
fs
cwtl
push
mov
fsubl
call
dec
outsl
in
jb
ficomps
fsubr
push
add
inc
jmp
fmuls
rorb
aaa
pop
add
and
into
int3
ljmp
iret
lds
dec
cld
out
xor
dec
jmp
cmc
scas
mov
jno
pop
xchg
xor
movsl
popa
xchg
inc
inc
jl
pop
adc
xlat
mov
out
mov
sahf
fdivr
jle,pn
pop
adc
mov
or
sub
loope
adc
and
lret
fcomi
sti
jg
pop
pop
out
xor
mov
push
mov
repnz
mov
or
cld
lret
xchg
push
jae
xor
andl
enter
mov
popa
push
dec
push
pop
inc
and
xor
imul
and
or
sbb
push
push
mov
ljmp
rorl
mov
shll
outsb
js
jae
roll
adc
jl
inc
lods
in
jns
subl
pusha
dec
push
add
or
cs
pop
mov
je
loopne
cmp
popf
sbb
cltd
dec
pop
jmp
test
mov
push
xchg
inc
pushf
lcall
or
loopne
add
add
cmpsb
mov
js
insl
add
pusha
clc
xchg
inc
jge
sub
int3
icebp
cmpsl
inc
cli
sub
mov
jno
sbb
push
cltd
adc
xchg
dec
mov
pusha
xor
sub
ja
fucomip
repz
loopne
xchg
cli
mov
out
push
ret
sub
pop
in
nop
jecxz
jl
or
sub
jno
dec
fwait
push
in
mov
ret
adcl
pop
and
sbb
shr
int3
lahf
stos
sti
orl
cmp
jge
enter
flds
test
test
lods
popa
pop
cmc
jecxz
roll
js
pop
aas
adc
xchg
dec
and
or
xor
inc
loopne
pop
jg
xchg
sub
xchg
int3
in
jecxz
fmuls
fucom
sbb
push
out
pop
mov
in
cwtl
dec
pop
pop
push
or
in
mov
ja
jb
add
push
xor
push
es
shrl
mov
push
pop
xchg
clc
lret
pusha
jno
pop
testb
int
dec
dec
insl
cmp
aaa
sub
lods
pop
insb
cmp
into
mov
lods
add
pop
adc
out
sub
mov
loop
pop
xchg
mov
and
gs
dec
hlt
xchg
sub
lret
sti
fcmovnbe
xlat
xchg
aaa
xchg
outsl
push
jno
sub
lret
pop
sbb
pop
mov
dec
adc
inc
cmp
and
jle
dec
push
pop
sub
mov
stos
std
out
test
push
idivb
push
sbb
test
daa
xchg
int
repnz
out
jecxz
cwtl
repz
sbb
mov
push
pop
and
popa
loopne
mov
jge
push
jae
fwait
xorb
lahf
sbb
or
xlat
dec
in
jmp
sub
adc
adc
mov
mov
pop
pop
sub
sbb
test
add
and
dec
xchg
nop
fcomi
push
mov
mov
jecxz
ja
xchg
push
fwait
pop
leave
inc
jg
mull
cmpb
andb
sub
in
mov
sbb
sbb
xor
push
stos
cmp
ljmp
subl
mov
fidivs
cmp
int3
xor
cmp
cmp
mov
sbb
or
and
scas
fidivl
jne
es
mov
shlb
movsb
inc
add
push
insl
push
pop
cli
sub
addr16
mov
adc
outsl
sbbl
cltd
dec
add
xchg
xchg
gs
push
xchg
inc
stos
call
mov
or
xor
loope
test
pop
cltd
jl
or
sub
add
jp
mov
int3
out
sbbb
sub
insb
mov
pop
xlat
mov
test
pop
cwtl
adcl
test
rorl
jo
cld
cmp
sbb
mov
fldln2
lret
imul
pop
in
loop
xor
lret
sub
or
xchg
sbb
rcrb
mov
mov
jmp
xchg
inc
xor
imul
das
xchg
fnstenv
push
sub
lock
in
cmpsl
push
lds
into
cltd
add
mov
inc
pop
repz
sbb
ffreep
jge
bound
sub
mov
sahf
sub
and
push
inc
pop
lcall
movsb
loope
jo
leave
sbb
cli
xor
std
xor
aaa
stos
adc
inc
jae
pop
or
fmuls
and
xchg
addl
xor
decb
jnp
bound
data16
or
jg
mov
andl
add
xor
or
xor
test
sarb
push
into
inc
leave
fstps
jl
push
inc
cmp
push
mov
dec
ror
stos
aaa
xchg
inc
imul
lea
xor
pop
cmc
sbb
push
push
mov
xchg
clc
inc
pop
push
mov
jbe
xchg
pop
lds
dec
xor
mov
jne
ret
add
push
inc
stos
jne
imul
fimuls
js
je
xchg
inc
popf
xlat
subl
sub
fcompl
jmp
mov
mov
in
out
push
mov
push
loope
scas
out
jecxz
inc
xor
or
gs
sti
test
xlat
mov
insb
xchg
in
stos
xchg
adc
data16
and
nop
addr16
stos
nop
mov
jmp
dec
pop
pushf
push
jbe
pop
pop
inc
data16
pop
imul
sub
xchg
lods
sbb
cmpl
add
pushf
leave
ja
lods
xor
in
mov
mov
jns
add
jo
dec
out
out
and
movsl
insl
aaa
lods
xchg
nop
fisttpll
shlb
inc
mov
inc
jno
pop
push
das
dec
mov
in
mov
jp
bnd
cltd
pop
add
push
cmp
dec
or
mov
or
and
inc
stc
cltd
cld
rcl
incb
pop
mov
sbb
movsl
in
xchg
dec
xor
outsb
cmp
lods
jnp
lcall
or
out
jp
out
ret
cmpsb
insb
mov
shl
push
hlt
xor
iret
scas
dec
or
inc
add
movb
movsb
or
mov
or
lcall
lods
mov
push
sti
mov
ss
ret
sub
int
lods
mov
mov
fisttpll
movl
shll
lahf
sbb
cmp
xchg
jp
arpl
sbb
inc
add
scas
fcmovnu
sbb
clc
cmp
roll
dec
xchg
sbb
cmp
and
addr16
into
std
and
test
dec
xchg
jne
rcrb
rcll
aad
test
fstps
es
into
mov
and
mov
loopne
nop
mov
repnz
cmpsb
jmp
in
fsubrl
or
or
aad
aad
lods
or
mov
mov
mov
mov
fwait
jns
dec
jns
arpl
add
cmp
and
push
jle
cltd
xchg
insb
cld
pop
xchg
loope
movsb
lcall
xor
jp
aad
imul
adc
fmull
mov
sbb
out
movsl
rcll
cmp
std
push
bound
into
sub
push
or
enter
xor
cmp
xor
and
movl
pop
imul
loopne
mov
jns
or
inc
mov
xor
and
push
xchg
fwait
aam
mov
sti
or
and
iret
dec
add
pop
mov
and
inc
cmc
lret
dec
xchg
add
scas
lahf
imul
mov
add
aam
call
jg
xchg
rolb
dec
test
sub
dec
addl
push
and
lret
in
fldenv
push
mov
cmc
xor
cmp
scas
pop
ficompl
lret
inc
in
leave
shlb
jmp
icebp
pop
lret
sti
scas
cmp
push
or
xor
xor
js
int3
pop
xor
imul
sbb
and
xchg
push
push
jle
roll
loopne
int
sbb
inc
test
xchg
or
imul
mov
test
lods
push
mov
leave
test
imul
repz
iret
int3
adc
push
mov
ret
sub
das
jae
cmp
xchg
push
adc
movsb
jo
adc
xchg
inc
add
adc
xchg
jno
push
jo
xchg
in
jb
rcll
imulb
inc
add
pop
pop
in
daa
add
inc
pop
fcoml
lret
mov
or
jo
shrb
shld
cmc
mov
sub
cld
mov
xchg
inc
push
rcrl
test
lea
fstl
outsl
mov
mov
adc
push
out
stc
popa
daa
jg
ds
pop
xchg
mov
outsb
addr16
lods
mov
adc
test
aam
test
punpcklwd
ja
loopne
rclb
xor
cmp
push
xor
xchg
insl
shl
xchg
test
mov
jno
mov
stc
jg
mov
mov
mov
mov
lea
cs
test
push
push
pop
stos
adc
dec
into
sbb
imul
lahf
inc
ret
cmp
clc
sti
popa
cmp
xor
das
mov
sub
cmpsl
add
aaa
pop
sbb
xor
fdivr
or
or
movsl
xor
das
pop
test
dec
mov
mov
frstor
ffreep
xchg
frstor
mov
lret
leave
cmp
leave
pop
lcall
mov
loopne
bound
idivl
jmp
js
sarl
mov
cmc
aas
movsb
ror
jp
repnz
leave
mov
loopne
aaa
loope
or
add
sbb
mov
pop
mov
in
xor
mov
or
sbb
fcom
mov
adc
inc
fnstcw
fucomp
cli
or
jnp
cwtl
sub
jnp
mov
jo
aaa
sub
lea
aad
fdivr
adc
movsb
dec
int3
sub
lcall
xor
push
cmp
add
mov
mov
out
fldl
mov
xor
xchg
daa
aad
ret
movsb
popa
outsb
in
pop
and
js
dec
xor
cmp
inc
xor
test
iret
rclb
arpl
je
movl
xchg
mov
test
jno
and
jmp
ficompl
cmp
mov
pop
xchg
sbbl
push
push
aam
in
dec
popa
sbb
fs
push
cmp
ret
inc
not
push
outsl
mov
andl
xor
lahf
push
in
out
xchg
int
lret
mov
test
cltd
push
push
out
mov
jne
scas
mov
insb
fimull
orl
and
or
adcl
std
ret
push
push
xor
jmp
xor
jnp
ljmp
scas
jg
mov
push
mov
mov
icebp
jmp
jmp
sub
repnz
mov
in
cmc
or
lea
push
rorl
stc
ret
dec
dec
rorl
fstl
mov
insb
ds
dec
mov
sbb
in
mov
shl
push
lock
fs
inc
jmp
push
sbb
lods
jle
fnstcw
mov
out
push
mov
jmp
mov
fsubrl
push
rolb
daa
push
fldz
xchg
in
inc
lcall
xlat
lds
lcall
divl
rcll
mov
jge
flds
inc
jne
jp
aas
out
mov
bound
and
xor
sub
xchg
lods
xor
orl
mov
sbb
cmp
cmp
in
aam
int
sbb
cltd
loope
imull
fsubrl
lds
adc
rcrl
ret
mov
sbb
lods
dec
imul
lock
jge
push
dec
ss
mov
fst
mov
call
test
insb
jae
cmp
push
jp
test
xlat
cmp
lret
in
arpl
out
sahf
es
lret
ljmp
add
xchg
in
ljmp
int
dec
push
int3
inc
out
or
clc
pop
loopne
push
fdivrs
jg
subl
or
and
enter
scas
mov
test
mov
sbb
push
sub
cli
movsl
fstp
or
jb
adc
xchg
or
pop
fstl
dec
mov
jmp
cli
aaa
push
fwait
pop
subb
mov
jmp
pop
rcr
inc
not
out
test
jnp
cli
in
bound
mov
in
loop
xchg
sub
scas
mov
inc
imul
insl
ret
add
mov
repnz
sti
je
in
out
fcoms
adc
mov
jb
and
adc
cltd
stos
mov
mov
dec
sbb
push
and
mov
mov
push
shrl
fsts
inc
dec
cli
lods
inc
sub
orb
inc
pop
pop
enter
bnd
das
pop
xor
xor
sub
jne
lret
inc
mov
jge
out
inc
adc
loopne
and
push
jg
in
rcrb
and
mov
imul
sub
rorb
movsl
lret
loopne
jb
push
pop
dec
ret
mov
push
mov
xchg
pop
lods
es
sbb
int3
cli
repz
adcb
sbb
andb
pop
xchg
xor
inc
lds
aad
adcl
push
inc
addr16
movsl
inc
adc
lahf
add
mov
jmp
xchg
dec
add
xlat
movsb
inc
push
jo
fwait
push
jne
fs
cli
sub
clc
mov
icebp
or
add
inc
test
iret
or
push
xchg
insl
arpl
cs
mov
rorb
arpl
dec
jecxz
in
mov
faddl
mov
push
sub
cltd
mov
pop
movsl
mov
dec
ljmp
aaa
dec
cmp
pop
insl
inc
add
mov
xor
push
pop
out
inc
aad
int
fidivl
adc
add
add
mov
movsl
mov
stos
xchg
mul
ficoml
loop
xchg
mov
cmp
dec
jg
jmp
cmp
pop
mov
stos
mov
ljmp
jmp
adc
lods
xchg
lahf
aaa
add
adcb
movb
pop
pop
adc
pop
push
pop
add
ljmp
inc
bound
test
inc
inc
mov
js
movsl
or
jns
push
push
and
mov
adc
pop
aam
lret
ss
inc
mov
sarl
add
repz
loopne
xchg
dec
daa
jg
lret
es
lcall
in
jmp
sub
dec
imul
int3
cs
enter
sbb
sub
mov
out
icebp
push
loopne
pop
jl
test
and
sti
bound
in
imul
adc
mov
jb
jbe
inc
ret
inc
sub
and
js
and
call
mov
jb
movups
cmp
mov
mov
cmpsb
lret
dec
mov
add
cmpsl
add
insb
pop
xor
pop
nop
adc
das
xchg
or
or
or
adc
pop
nop
shrl
je
jp
cmp
jmp
nop
aas
add
lcall
or
fmull
adc
jbe
add
pop
add
inc
mov
mov
cld
test
cmp
xchg
out
adc
mov
inc
aas
cwtl
filds
add
aad
adc
adc
bound
ljmp
push
cmpsl
imul
mov
xor
push
and
mov
sahf
or
lds
xor
mov
fninit
mov
cmpb
cmp
adcl
int
mov
les
jge
mov
mov
dec
out
mov
pushf
add
jo
pushf
xchg
push
outsl
jo
aas
add
rolb
mov
int3
xchg
pop
mov
repz
scas
xor
add
mov
adc
loopne
fnstcw
push
xor
push
mov
mov
popf
cmp
xor
fwait
cltd
pusha
mov
xlat
jae
ret
fs
mov
scas
xor
aaa
xchg
jno,pn
sub
roll
jge
inc
dec
adc
fcoms
push
lcall
je
mov
lods
cmp
pop
orb
cmp
xchg
pusha
sub
cmc
cmc
or
loope
mov
loope
mov
jae
pop
stos
mov
xchg
in
outsl
rcll
jecxz
out
sub
sti
test
push
cmp
xchg
mov
jnp
ret
lahf
mov
adc
iret
or
cmpsl
ds
sbb
arpl
andl
mov
push
fisubs
dec
pop
jo
imul
xor
ja
testb
aaa
sub
pop
in
pop
ret
sahf
bound
adc
int
push
inc
aas
icebp
xchg
fnsave
in
jns
aad
push
adc
scas
movsb
mov
or
xchg
xor
mov
cmp
cmp
shll
in
sbb
xor
sar
in
or
aas
jb
jne
jne
jb
out
loopne
imul
stc
cmp
lods
add
js
mov
cli
bound
jmp
mov
or
shlb
fsubrs
shlb
add
shlb
add
cmovns
test
bound
xchg
adc
ficoms
mov
mov
xor
and
mov
xchg
mov
push
daa
xlat
aaa
out
enter
imul
cmp
push
push
insb
hlt
test
push
jbe
fwait
pop
jecxz
rol
lcall
mov
mov
pop
push
jg
pop
cld
push
push
jnp
fwait
data16
or
icebp
sub
xor
pop
popa
add
mov
inc
pop
xor
push
hlt
call
ret
inc
scas
bound
leave
pusha
dec
mov
jo
mov
rclb
xchg
lods
jns
cwtl
xchg
dec
adc
sbb
jl
pop
call
mov
or
or
or
xchg
popa
ja
in
daa
sub
mov
dec
sbb
lods
test
mov
enter
stc
inc
and
pop
pop
std
jno
ss
into
jl
dec
gs
adc
add
std
inc
mov
jb
lret
inc
inc
xchg
mov
call
sub
ljmp
hlt
mov
sbb
fisttps
mov
negl
lahf
popa
add
xchg
nop
aam
cmp
pop
mov
mov
fldenv
jl
cmp
xchg
xchg
pop
xchg
js
inc
xor
icebp
mov
mov
pop
xor
xchg
pop
push
icebp
daa
in
mov
adc
jg
inc
shll
adc
notl
and
sub
adc
jb
push
xor
test
push
push
pop
imul
leave
xlat
jg
inc
cmp
mov
add
mov
sbb
or
mov
sbb
push
jle
or
jns
sarb
in
xchg
add
pushf
lret
daa
frstor
mov
xor
xor
or
addr16
xchg
xor
push
jae
sarb
in
push
out
cmp
shll
pop
bound
enter
bound
testb
jge
mov
les
cs
out
ret
ds
cmpb
lods
out
jl
ja
in
sbb
sbb
xchg
pushf
dec
mov
mov
mov
fldcw
ja
sbb
sub
mov
daa
jge
add
ss
test
loope
mov
xchg
mov
cwtl
test
mov
mov
push
fnstsw
lahf
je
movsb
pop
adc
sbb
mov
pusha
pop
push
rclb
fistpll
push
pop
mov
lods
sbb
adc
push
push
hlt
or
enter
add
je
arpl
xor
scas
add
fisubl
jle
adc
pop
pop
cmc
arpl
inc
sub
sbb
aaa
outsb
je
std
pusha
mov
repz
mov
in
fstpt
adc
xchg
out
mov
call
stos
inc
ficompl
cmp
dec
jbe
jo
sahf
cld
and
ficoml
mov
mov
mov
sti
imul
mov
cld
add
pop
mull
stc
loop
xchg
test
imul
xchg
inc
out
xchg
and
insb
mov
mov
cmp
in
inc
bnd
test
adc
jo
mov
xor
push
stos
cmp
push
in
cmpsl
fwait
mov
aam
push
xor
cmc
add
pop
xchg
rclb
pop
sub
mov
pop
iret
add
das
repnz
dec
scas
mov
sbb
pop
adc
xor
out
mov
push
inc
mov
test
mov
xor
add
jmp
mov
stos
shl
jle
or
insb
stos
pop
std
and
xchg
movsl
je
pop
dec
xchg
mov
popa
cmp
fnstcw
dec
xchg
dec
add
adc
enter
and
subl
adc
imul
and
sbb
add
pop
or
jge
mov
rorb
or
clc
mov
and
lods
sub
sub
or
wbinvd
mov
insb
insb
bound
lods
lods
aad
or
repnz
sub
test
mov
inc
inc
addr16
inc
sub
sub
pop
push
je
xor
push
scas
rcrl
pop
adc
popf
lods
scas
ret
adc
or
aas
dec
in
lea
adc
inc
mov
inc
gs
jge
fiaddl
add
frstor
cmp
mov
stc
cld
xchg
lock
jge
fstl
out
fidivs
pop
add
aas
mov
psubq
out
test
icebp
shll
hlt
in
add
nop
inc
inc
ret
sub
jle
in
pop
cltd
cwtl
lds
hlt
sbb
addr16
je
push
pop
mov
stc
mov
mov
das
xor
gs
sbb
es
dec
jle
jns
add
int
in
mov
push
xchg
mov
inc
sbb
std
jl
ss
jnp
pop
jp
push
shlb
mov
fsubs
add
push
mov
mov
jge
dec
ljmp
in
sbb
and
test
popl
lods
jo
sub
mov
or
imul
insl
xlat
pop
xchg
clc
xor
call
pusha
pop
or
sub
das
and
and
call
stos
xlat
jae
mov
sbb
je
jge
push
cmc
clc
push
outsl
stos
xor
xchg
lret
sub
inc
pop
subps
stos
dec
inc
std
and
mov
pop
imulb
cmp
push
add
sub
idivb
bound
inc
sub
or
and
and
pusha
sbb
or
add
stos
data16
mov
dec
or
stos
inc
sbb
outsl
jbe
test
test
or
adc
imul
jo
test
flds
pop
fldl
sbb
or
jns
insb
xorb
xor
lock
fcoml
add
fmuls
ja
out
mov
adc
fwait
xchg
negl
addb
pop
in
jns
mov
pop
cs
cmp
sub
lds
lds
cmp
xchg
adc
movsb
hlt
pop
pop
sbb
add
push
sahf
jl
aad
je
cmpb
loop
outsl
cmpsl
cmp
sub
je
push
sub
fucom
inc
inc
jae
push
ja
and
pop
push
sbb
cmp
pop
cmpb
jmp
idivl
jo
data16
scas
lds
mov
fcoms
lahf
stos
mov
cmp
fmuls
mov
jae
orl
inc
and
arpl
ret
xchg
inc
outsl
lea
xchg
repnz
lock
mov
inc
sbb
pop
test
imul
fldenv
nop
pop
jo
mov
mov
mov
repnz
add
mov
mov
je
jne
enter
jge
pusha
xchg
and
and
push
shrb
lret
jne
lahf
pop
enter
repnz
sub
sbb
movsb
mov
or
inc
mov
shr
inc
call
or
mov
loop
mov
scas
movsl
dec
int3
mov
movsb
jbe
or
repnz
movsb
or
jnp
jl
mov
outsl
jo
jg
and
mov
mov
loopne
fdivl
ljmp
mov
es
data16
push
aas
inc
mov
mov
cmp
dec
dec
pusha
mov
ret
stc
mov
lock
cwtl
xor
mov
and
and
cmpsl
mov
mov
dec
xchg
xorb
mulb
mov
or
pop
lret
or
jne
inc
xchg
push
push
outsb
imul
ja
push
push
mov
mov
fs
mov
pop
lds
outsl
fmull
sub
lret
push
pop
sahf
mov
jp
jmp
jno
lods
xchg
add
adc
fcmovne
or
jp
push
pop
push
push
sbb
stc
les
incb
aas
push
sbb
out
loop
imul
xor
add
mov
js
es
cs
xorl
loopne
stos
in
jb
clc
rol
mov
mov
adc
arpl
mov
popa
and
stc
out
fistpll
mov
push
xchg
xlat
cld
xor
lds
dec
adc
in
filds
rolb
cwtl
stos
pop
ljmp
bound
mov
or
scas
andb
mov
into
push
mov
out
scas
scas
mov
mov
push
mov
sub
adc
jg
ds
sbb
cmpsb
lods
mov
add
dec
inc
mov
aas
adc
xchg
push
notb
packssdw
jg
mov
subl
dec
rorl
mov
pop
xchg
scas
adc
cs
leave
mov
xor
mov
ret
jb,pt
inc
outsl
xor
iret
rclb
outsb
or
movsl
cmpsb
or
jecxz
loop
roll
mov
mov
outsb
xor
cwtl
ja
mov
inc
mov
gs
lods
mov
and
sbb
add
jns
rolb
stos
mov
dec
pop
adc
les
add
pop
dec
push
or
xchg
lret
push
mov
aaa
sahf
cli
je
sub
nop
jg
mov
xchg
sbb
popf
cmp
pop
mov
pop
mov
ljmp
xor
push
adc
popl
mov
or
das
inc
cmp
test
xchg
push
icebp
lret
push
ljmp
notb
in
fisttps
mov
stos
adc
icebp
test
xor
or
pusha
inc
inc
lock
mov
xor
pop
arpl
add
inc
fimull
ret
mov
outsl
xlat
push
sbb
je
dec
idivb
jae
adc
sbb
sub
aas
mov
mov
ss
cmc
xchg
enter
enter
daa
jns
leave
jnp
leave
gs
je
mov
rcrl
mov
jge
jp
sub
lret
bound
nop
and
pushf
insb
int3
mov
mov
scas
into
fistl
roll
outsb
adc
in
shll
inc
jl
stos
xchg
loop
sub
sub
bound
sbb
test
das
je
add
dec
fldenv
imul
xchg
mov
mov
ljmp
or
daa
add
mov
popf
loop
add
out
stos
push
xlat
mov
and
cmp
xor
push
adc
sbb
ret
mov
aam
outsb
pop
fldenv
adc
pop
out
and
loope
ss
jmp
dec
mov
cmc
shlb
xchg
mov
popa
test
or
les
or
ret
js
fnstsw
loop
cld
fisttpll
fisubrs
cmp
jl
adc
push
sbb
or
mov
pop
push
xchg
cmp
neg
rcrb
xor
pop
mov
pop
adc
inc
fsubs
aam
and
inc
scas
add
in
sti
adc
ror
mov
pop
shlb
add
lock
out
in
push
cmp
push
rcrb
out
jge
repz
insl
popf
repnz
pop
push
int3
sub
mov
sahf
cmp
pop
cmp
andl
out
test
and
fs
push
sub
cli
insb
andl
out
pop
pop
jo
call
scas
hlt
out
push
pusha
jmp
or
sti
push
fdivrl
popf
add
or
mov
jnp
xchg
inc
decl
jno
inc
sbb
les
lahf
shr
xor
xchg
arpl
pusha
addb
lock
cmpsl
jp
lret
mov
stc
pop
pop
xlat
inc
sub
mov
xor
pop
jge
xor
in
lea
into
outsb
jl
std
mov
aaa
push
mov
ja
jecxz
rcrb
mov
cmp
shll
in
pop
xor
js
rclb
rcrl
arpl
adc
jno
test
shl
sub
mov
and
adc
test
hlt
push
push
pop
xor
ss
ss
lock
aad
outsl
pop
sub
jnp
arpl
cmc
enter
rcrl
out
stc
fdivr
sub
addr16
mov
rcl
dec
cmp
mov
pop
fnstcw
xchg
aas
cmpsl
insb
sub
push
das
mov
push
and
adc
and
js
aas
repz
add
ret
ret
dec
mov
jecxz
addr16
arpl
jmp
icebp
ljmp
push
cmp
pusha
sbb
dec
bound
fsts
das
xchg
pop
xor
out
adc
xchg
mov
mov
roll
pop
and
cmc
stos
add
pop
aaa
js
std
out
pop
jmp
sbb
pop
loopne
rcrb
int3
ds
scas
mov
lea
loopne
add
push
mov
dec
push
xor
mov
adc
adc
xchg
xlat
add
test
in
fidivrs
or
fcmovnbe
pop
pop
lds
cli
jo
repnz
mov
aas
icebp
or
sti
lds
cmp
xchg
inc
jmp
std
popf
test
push
jg
mov
loopne
inc
xchg
mov
loop
xchg
mov
mov
sub
push
push
mov
mov
dec
cmp
aad
jp
in
pop
in
shr
cmp
ret
jne
push
je
repz
push
sub
mov
flds
mov
rolb
push
in
test
repnz
xor
loop
mov
test
jl
ljmp
shlb
cmc
inc
xchg
xor
adc
in
dec
enter
imulb
gs
push
jl
mov
scas
mov
icebp
push
test
xorl
dec
pop
ljmp
stos
and
mov
fiaddl
xchg
jnp
pop
sbb
jbe
inc
stos
dec
test
sub
dec
xlat
cmp
pushf
mov
cltd
pusha
sbb
ret
imul
sbb
sbb
testb
in
out
mov
mov
sbb
pop
inc
outsl
cld
push
icebp
sbb
jbe
popa
pop
std
insl
sub
xor
bound
cmp
ret
dec
adc
int
and
push
mov
stos
test
aad
mov
sub
inc
push
nop
inc
sti
fsubl
adc
pop
xchg
add
pop
push
and
xor
adc
test
gs
cwtl
xchg
cld
lea
inc
notb
cmp
xchg
bound
mov
arpl
add
ljmp
or
push
jle
push
pushf
ret
cmpsl
xchg
subb
dec
mov
fs
mov
inc
idivl
pop
mov
sbb
adcb
idiv
or
fisubrl
out
mov
mul
movb
xchg
mov
mov
xchg
out
das
sub
xor
push
or
add
sub
subb
outsl
pop
pop
loope
aas
out
or
loop
aam
jge
gs
aad
fisubs
ljmp
adc
in
cwtl
xor
ret
aam
pop
mov
push
mov
jg
adc
jmp
mov
es
icebp
xor
adc
cmp
xchg
mov
cmc
or
xchg
cld
xor
ficomps
xchg
or
inc
mov
bound
test
or
ja
and
mov
fbld
mov
xlat
loope
add
aad
cltd
or
cwtl
sahf
dec
mov
add
pop
sar
mov
mov
cmp
sbb
xchg
pop
pop
ss
mov
mov
dec
xchg
test
dec
xor
pop
xlat
push
test
orb
jmp
jle
loope
popa
imull
out
mov
test
rcrb
gs
adc
push
dec
cmc
loope
ret
xor
daa
push
cmp
mov
movsl
hlt
rep
or
rorl
dec
jmp
mov
dec
repnz
lcall
popa
lcall
scas
in
and
inc
xor
shl
insl
scas
jb
dec
or
cld
pop
and
jne
xchg
pop
in
jge
inc
cwtl
mov
cmc
mov
mov
xorb
sbb
or
jne
out
push
lods
dec
arpl
arpl
das
push
mov
dec
sbb
out
imul
pop
xchg
mov
xor
xchg
aam
test
cmp
lods
imul
push
add
mov
mov
int
mov
pop
lods
push
inc
clc
outsb
jae
pop
cwtl
hlt
add
sbb
mov
push
fsubrp
jo
pusha
mov
mov
dec
cmp
xchg
push
je
inc
test
movsb
mov
enter
or
lcall
cmpsb
or
in
push
cmp
and
sbb
pop
inc
in
ficompl
jg
inc
fcomps
ret
gs
daa
xchg
shlb
lret
mov
xlat
movsb
inc
lahf
fcoml
rcrb
imul
inc
shll
shr
pop
xchg
gs
lret
scas
mov
call
or
dec
call
sahf
push
adc
cmc
xsaveopt
fmull
add
mov
pop
inc
mov
jp
test
rorb
out
add
sbb
out
xorl
insl
out
push
jne
pop
fs
sbb
mov
cmp
popf
pop
cmp
sbb
rcll
dec
add
leave
das
push
or
push
mov
push
dec
xor
pop
test
xor
jg
sbb
imul
sub
cmp
dec
stc
fdivrl
push
inc
out
es
in
mov
sar
hlt
pop
or
shrb
fnstsw
std
pop
adc
mov
pop
into
shr
xor
and
into
in
popf
mov
dec
push
xchg
lcall
adc
shlb
dec
adc
int
jnp
dec
out
insl
jns
in
xor
outsb
mov
push
mov
test
cltd
cmpsb
daa
add
stc
or
ss
mov
clc
mov
dec
jno
roll
mov
data16
jae,pn
and
cmpb
dec
push
aam
dec
shrb
pop
xor
enter
leave
mov
or
int3
sbb
bound
lock
addb
outsl
mov
test
aad
or
xor
sbb
xor
mov
aad
xor
sahf
rolb
xor
jns
mov
lret
inc
adc
repnz
arpl
push
jo
push
pop
jl
jo
sbb
push
push
dec
add
in
out
dec
imul
push
inc
mov
addr16
rorl
test
sbbb
push
mov
loop
in
leave
xor
push
xchg
cmc
loop
push
xor
repnz
pop
fwait
pushf
cmp
add
jmp
ljmp
loop,pn
xchg
push
jne
data16
xchg
stos
push
testb
push
sub
xchg
sbb
xor
outsb
push
jl
jne
scas
and
inc
rclb
jnp
jg
pop
mov
push
leave
and
daa
lds
jecxz
or
xlat
ret
cmc
and
outsl
outsb
ret
fistpll
adc
clc
sub
leave
xchg
pop
push
jg
or
dec
sbb
push
add
fmul
call
fimull
pusha
lret
cmp
lods
cwtl
and
arpl
or
fldl
je
dec
sbb
mov
xchg
out
sub
dec
mov
subb
add
cli
cs
fsts
jge
inc
fists
bnd
lea
mov
std
pop
jns
jnp
aad
push
sub
mov
xchg
scas
out
pop
jbe
sbb
sahf
jle
jg,pn
or
sub
mov
xor
sbb
adc
in
jge
pushf
mov
mov
inc
pop
js
push
pop
add
insl
add
mov
imul
loopne
add
dec
shl
mov
xlat
jecxz
fldcw
call
mov
mov
jo
jns
cs
mov
mov
aaa
das
pop
lahf
push
mov
adc
xchg
js
lahf
jp
adc
scas
aad
dec
and
aad
mov
xchg
mov
call
inc
cld
xor
inc
xchg
enter
pusha
enter
xor
cmp
jns
mov
shrl
dec
pop
sub
mov
push
dec
es
jno
push
psubb
arpl
mov
jle
xor
jo
dec
jbe
shll
in
jle
es
gs
mov
test
sbb
sbb
inc
stos
icebp
pop
cmp
inc
cs
jge
outsl
insl
push
or
fwait
jl
stos
subl
aaa
std
ja
outsb
shrl
daa
dec
imul
shll
data16
mov
lea
jb
lea
loop
pop
inc
mov
mov
xlat
lods
sbb
popf
adc
in
or
push
push
lahf
sbb
mov
aam
ds
aam
popf
push
fscale
mov
scas
notl
cmp
ret
mov
scas
in
nop
push
popf
dec
leave
es
in
loope
push
mov
inc
dec
mov
mov
in
or
jno
ss
aad
or
movsb
cld
xor
in
or
leave
addr16
andl
pop
mov
xorl
push
mov
inc
add
lret
sahf
dec
cmp
testb
outsl
jge
mov
movb
jno
inc
insl
es
jecxz
iret
jg
add
testl
mov
dec
and
pop
sar
ds
out
out
mov
ss
es
pop
inc
jle
and
push
movsb
out
push
adc
jo
out
test
inc
out
sar
dec
cmp
sbb
dec
mov
fistps
xor
inc
and
sbbl
pop
mov
xchg
add
cmp
call
mov
cltd
pop
cltd
and
add
adc
inc
rcrl
or
add
fnstsw
push
loope
inc
and
fidivs
cmp
lock
cmp
sbb
insb
push
outsb
loopne
stos
test
ror
xor
call
cmpsb
lock
inc
adc
loop
sub
fdivl
lods
sub
pop
sub
cmp
test
jbe
out
pop
add
sbb
in
out
mov
mov
xchg
dec
es
mov
fstpl
mov
cmp
xor
push
and
jnp
xchg
ret
jl
push
push
sub
xchg
mov
pop
or
adc
in
xchg
hlt
pop
mov
inc
mov
in
hlt
in
call
mov
orb
add
movsb
sub
aam
das
lods
es
push
cli
bnd
scas
int3
sar
xor
and
mov
and
mov
stc
push
or
push
adc
mov
sbb
mov
and
inc
mov
std
outsb
movsb
or
jo
adc
leave
add
jnp
xchg
sub
mov
clc
cld
push
sub
lcall
loopne
rcrb
and
mov
mov
cmpl
mov
subb
cltd
insl
fs
add
mov
jns
test
orb
push
aas
sub
mov
cs
insb
cmp
sarb
test
in
xor
xchg
cmp
xchg
add
pop
dec
push
push
aaa
add
mov
rcl
add
or
adcb
dec
jbe
sub
subl
dec
into
out
jae
daa
inc
iret
daa
push
pop
jge
add
sbb
xor
jbe
sbb
mov
cltd
and
xchg
jnp
call
fstpl
mov
jb
sub
fidivl
das
into
out
sbb
lcall
xor
shl
ret
xor
out
ljmp
insl
adc
and
xor
mov
pop
xor
repnz
sub
and
pop
xchg
sub
xor
jae
dec
adc
dec
ja
xchg
sti
out
out
lods
or
addb
fistps
jae
adc
call
adc
loope
xchg
xor
popf
inc
dec
mov
sub
jbe
lds
push
bound
push
cmp
cli
in
cli
enter
push
add
xor
pop
rcrb
mov
sbb
inc
jge
mov
jbe
inc
imul
jb
cli
pop
jnp
aas
out
int
into
xor
push
enter
sbb
pusha
inc
jmp
out
sbb
mov
push
mov
cwtl
out
pop
dec
sub
mov
call
bound
jo
push
loop
push
or
adc
jp
add
loop
xchg
add
jmp
fstpt
mov
adc
add
aam
test
jb
mov
cmp
insl
mov
add
mov
mov
and
and
inc
dec
popf
adc
push
ret
sbb
in
cltd
xchg
xor
xor
test
mov
jp
daa
es
jp
push
aam
xor
jno
bnd
add
adc
dec
sbb
mov
movsl
aaa
mov
stc
adc
adc
add
lahf
inc
cmp
clc
push
stos
push
sarb
stos
cwtl
fucomip
mov
outsl
push
cmpsb
cmp
das
out
stc
aam
test
arpl
aaa
mov
adc
xchg
jbe
imul
sub
sub
or
aaa
dec
jno
nop
outsl
pop
inc
mov
adc
sbb
test
pushf
lret
loop
movsl
movsl
xchg
clc
pop
and
pop
mov
adc
shlb
jbe
pop
jne
into
fsubrl
pop
xchg
pusha
mov
stos
push
xor
xor
push
popf
stos
jg
sbb
add
and
test
jle
dec
insb
inc
sub
cs
scas
lret
aas
pmaxub
lods
mov
js
sbb
xchg
jno
iret
shrl
shlb
lret
mov
cmp
mov
sub
xchg
lahf
aaa
pop
push
adc
pusha
mov
mov
xor
out
adc
cmc
dec
sar
call
add
sub
cmp
shrl
adc
aas
add
add
push
push
data16
mov
mov
pop
mov
faddl
pop
loope
fisttpll
pop
adc
cmpsl
jmp
iret
xor
xorl
cmovbe
es
rcrb
arpl
inc
sub
lret
decl
testb
mov
adc
push
orps
sbb
jbe
mov
xlat
cmpsb
outsb
ret
repz
inc
cmpsb
push
les
clc
xor
repnz
pushf
dec
mov
cwtl
mov
jp
iret
pop
push
cltd
es
sbb
jno
and
es
dec
outsb
shll
add
aas
aaa
test
clc
leave
ja
loope
sahf
and
adc
inc
xor
cmpsb
iret
xchg
pop
sub
loope
inc
add
test
sub
jns
in
jge
cli
mov
inc
sbb
pop
xchg
pushf
call
clc
leave
add
xchg
cmc
ljmp
sub
inc
xor
les
or
js
xchg
mov
xchg
push
jmp
fimull
idivb
xchg
mov
add
sarb
push
jno
addl
jno
fs
das
pushf
xchg
test
xorb
xor
aas
jge
dec
push
or
add
push
cmpsb
cld
xchg
lret
mov
push
clc
jo
in
outsl
mov
loopne
fsts
add
sbb
enter
cmp
aas
dec
xchg
call
inc
push
pop
mov
ror
sbb
mov
mov
dec
mov
cmp
stos
jnp,pt
addr16
stc
xchg
mov
inc
mov
adc
cld
sahf
insl
test
jge
in
inc
add
stos
mov
test
cwtl
sbb
sbb
movsl
sbb
dec
sub
jbe
paddd
xchg
xor
lods
enter
mov
mov
sbb
mov
lcall
xchg
cmp
ljmp
movsl
pop
push
dec
push
inc
pop
out
mov
add
pushf
push
in
pop
dec
imul
xchg
adc
xor
popf
dec
mov
js
daa
mov
lret
into
xchg
mov
dec
jbe
xor
js
mov
dec
lahf
add
add
lret
cmc
adc
sbb
mov
loop
mov
sbb
sbb
sti
push
xchg
sub
das
push
push
enter
in
adc
daa
cmp
sarb
inc
jle
mov
pop
cmc
daa
repnz
dec
jl
lcall
arpl
push
jnp
das
lds
push
rorl
adc
push
shlb
testl
leave
aas
sub
loope
dec
and
push
into
mull
and
fbld
pushf
sub
into
test
out
scas
mov
icebp
cwtl
adc
adc
scas
mov
adc
inc
mov
push
in
mov
xchg
cmpsl
cmp
xlat
test
sbb
xor
js
arpl
jmp
out
and
adc
sub
fcom
mov
pop
lods
leave
dec
lahf
addl
fstpt
xor
lods
inc
out
incb
int
mov
sbb
repnz
cmp
cmp
inc
pusha
cltd
mov
mov
pushf
sbb
stos
cmpsl
or
loope
xor
stc
xchg
hlt
and
add
jo
mov
call
test
mov
mov
jp
xchg
aad
add
mov
adc
outsl
mov
pop
out
mov
xor
jne
or
shll
rolb
sub
andl
mov
repnz
je
rorb
xchg
mov
jnp
mov
repz
jnp
push
insl
orb
xor
pop
xor
jb
push
mov
adc
xor
inc
ret
mov
in
sete
les
and
les
xor
xlat
adcb
pushf
push
sub
inc
cmp
sub
mov
cmpsl
into
pop
sub
inc
sbb
mov
cmp
fists
int
sbb
dec
int3
loop
xchg
loopne
daa
lcall
in
cmp
xor
mov
cmc
xor
mov
ds
xor
lods
cmpsb
inc
mov
mov
push
je
push
push
cmp
xor
sbb
lods
stos
scas
scas
lea
jnp
inc
mov
and
or
loope
nop
enter
push
ret
pop
shrl
sbb
lods
mov
and
inc
inc
mov
sub
add
inc
jnp
aas
xlat
stos
adc
adc
jmp
lret
mov
movsb
and
rcll
test
lods
jne
hlt
add
mov
jg
lret
lods
fs
push
jge
dec
and
daa
outsb
jbe
inc
repz
pop
leave
xchg
ret
sahf
insl
jmp
pushf
push
aad
mov
outsl
psubusw
pop
xchg
cwtl
daa
in
cmp
pop
fstpl
push
test
pop
out
icebp
push
pushf
push
insl
cmp
jb
adc
inc
jecxz
insb
xor
xchg
test
lret
pop
sbb
mov
or
mov
leave
ja
cli
adc
jecxz
call
lock
popa
adc
xor
sub
aad
mov
adc
lods
jb
pop
add
xor
mov
jge
inc
push
and
xchg
push
cmpsb
xor
inc
lea
hlt
mov
push
or
sub
outsl
and
mov
loop
or
and
jae
push
mov
add
sahf
and
xor
mov
push
inc
scas
loop
jmp
jmp
and
mov
cwtl
fs
sbb
jge
mov
insb
xlat
xchg
and
arpl
pushf
icebp
push
decb
arpl
and
int
and
add
clc
mov
push
les
inc
lock
mov
mov
es
jecxz
sbb
ret
cwtl
pop
fld
aaa
xor
imul
insb
add
in
out
mov
mov
xchg
jnp
dec
adc
pop
cmp
cltd
loopne
lock
movsb
sbb
cwtl
rcrl
shrl
fldcw
inc
insb
inc
divl
in
ds
push
std
shll
xchg
xlat
js
insl
jmp
lret
jp
aaa
and
sub
les
push
xchg
int
mov
in
push
std
rorl
adc
cld
icebp
mov
sbb
add
idivl
pop
push
xor
mov
shrb
mov
fisubrs
ljmp
push
or
fsubrl
cld
jb
cli
insl
rorl
shll
inc
shlb
inc
adc
in
mov
in
inc
dec
cmp
addr16
aad
fisttpll
shlb
jbe
test
dec
pushf
test
outsb
cmp
jo
repz
cmp
ss
fwait
xchg
pop
lret
sti
push
nop
inc
pushf
dec
out
pop
inc
mov
dec
rorb
movsl
xor
dec
xchg
mov
jns
gs
lret
dec
mov
mov
add
and
mov
int
pop
mov
scas
or
test
xchg
jae
push
jno
push
cmc
leave
sub
sti
lods
js
or
push
jno
sbbb
pop
mov
outsb
xchg
scas
lods
fistpll
xchg
icebp
and
lret
insb
pop
sbb
into
mov
testl
leave
sub
hlt
cmp
xorb
shll
xor
aam
arpl
iret
jo
cmp
out
mov
mov
movsbl
divb
add
lds
cmp
and
push
push
jbe
punpckhbw
sbb
addr16
inc
add
and
das
xlat
inc
cmp
aam
add
int
imul
mov
pop
mov
cmp
pop
push
adc
sub
xor
jo
and
mov
es
jo
or
ret
std
push
dec
xor
pop
cmp
mov
mov
test
movl
jecxz
and
cmp
popf
xor
scas
outsb
mov
xchg
pusha
sbb
dec
jp
push
mov
icebp
mov
hlt
jno
or
es
cli
xchg
jmp
add
test
outsb
repnz
and
jle
xchg
int3
dec
push
pusha
xchg
repz
dec
pop
jl
pop
scas
je
xchg
sub
add
dec
and
jl
lods
stc
inc
jl
aaa
rorl
xchg
fisubrl
or
test
push
pop
dec
imul
xlat
imul
mov
jg
out
repz
adc
iret
dec
sub
popa
mov
stos
mov
push
jne
jnp
sti
and
xor
call
add
mov
mov
sub
xor
pop
faddl
xchg
lret
loope
jmp
lods
mov
imul
inc
sub
into
outsb
les
popf
fsubs
mov
sbb
ss
das
aaa
fwait
loopne
mov
pop
push
dec
test
test
jg
mov
cli
mov
mov
negb
inc
aaa
mov
add
mov
bound
je
inc
dec
lods
addl
jae
dec
pop
mov
xchg
stos
jle
adc
jmp
je
clc
shrl
and
loope
sub
mov
outsl
and
xor
aam
or
pop
out
xchg
test
xor
and
inc
push
dec
sub
xchg
cmp
int
sub
and
sbb
xchg
inc
cli
stos
mov
dec
or
mov
sbb
mov
fadd
inc
popa
and
fsubrl
add
popf
repz
adcl
adc
sbb
adc
jne
stos
add
jmp
mov
mull
push
sarb
iret
cmp
aad
in
xor
dec
pop
movnti
xchg
dec
xor
xor
les
xchg
sub
jmp
inc
lods
pop
out
loop
mov
std
sub
push
imul
daa
jns
loopne
cmp
outsl
shll
pop
stos
push
adc
cmc
addr16
loop
mov
int
arpl
sub
dec
and
xchg
sbb
mov
add
jg,pt
js
jecxz
jl
aam
dec
cld
rcrl
inc
add
pop
jg
ret
sbb
out
mov
mov
mov
clc
imul
xor
imul
dec
imul
subb
pushf
xor
popa
stos
push
cltd
int
pop
jbe
sub
clc
push
test
adc
jnp
fisubrs
mov
and
add
test
push
xchg
rol
adc
popa
push
daa
sub
inc
repz
mov
add
xor
lds
imulb
cwtl
rol
cmpsb
loope
fcmovnbe
imul
testl
and
dec
mov
and
push
push
and
dec
jns
gs
mov
repnz
jl
dec
and
test
xchg
xchg
stos
add
sbb
sbb
daa
sahf
push
aam
push
pop
xchg
jecxz
xchg
jp
pop
jns
inc
mov
mov
ljmp
mov
pop
aaa
andb
or
xchg
mov
or
xchg
or
mov
pop
sub
clc
mov
mov
pop
or
xchg
jnp
dec
sbbb
sub
mov
mov
xchg
adc
ja
dec
sarl
testl
incb
in
pop
push
fwait
daa
and
imul
fcomps
or
dec
mov
scas
sbb
stc
dec
cwtl
leave
xchg
cmpsl
daa
jecxz
or
cmp
fbstp
into
xchg
in
out
sbb
outsb
movsl
mov
nop
popa
lcall
jge
into
popa
and
xor
mov
imul
ds
jmp
imul
xchg
in
pop
or
enter
adc
xor
mov
stos
or
mov
jp
ret
adc
add
inc
push
shll
lds
cltd
fbstp
imul
lcall
jae
mov
rcrb
lret
fnstenv
xor
outsb
loop
adc
ret
rcl
and
or
repz
imulb
ficoms
mov
cwtl
xchg
insl
pusha
cmp
mov
xor
daa
dec
mov
es
mov
movsl
sbb
cmp
push
adcb
pop
add
test
adc
dec
cltd
sub
or
mov
add
je
movsb
data16
icebp
jg
rolb
dec
enter
mov
test
mov
outsl
pushf
out
movsl
cmp
dec
lcall
mov
shll
frstor
sarb
mov
loope
out
pop
das
pop
jbe
jp
push
jns
mov
cld
and
xchg
lods
das
insb
or
test
popf
sub
in
cmp
lods
mov
fwait
mov
lret
xlat
jo
push
ret
cmpsl
jmp
mov
movsl
hlt
push
stos
fidivl
aam
stc
mov
sub
xchg
adc
inc
push
inc
and
lret
adc
nopl
dec
jp
xor
shll
xor
arpl
enter
rcrl
clc
leave
cmp
cmp
pushl
mov
add
dec
jns
mov
shl
pushf
push
add
jnp
push
pop
insb
ja
push
iret
insb
sub
and
in
cwtl
cmp
xchg
rorb
push
loop
push
dec
dec
mov
dec
popf
scas
mov
out
jge
jl
lods
add
sub
sub
sub
mov
sub
fildl
movsl
cmp
xchg
jmp
mov
out
popa
aam
jl
scas
cmp
scas
jno
xchg
jae
mov
das
pusha
out
popf
sbb
lods
pop
rcll
xor
ja
push
adc
lock
loop
fnstcw
or
adc
enter
and
cmp
test
pmaddwd
pop
mov
push
xchg
das
icebp
rorl
jne
add
clc
inc
hlt
mov
adc
pop
fxch
add
inc
jae
push
push
lds
and
xor
fbstp
mov
inc
std
xchg
pop
add
pop
inc
xchg
mov
dec
adc
add
repnz
gs
xlat
add
inc
dec
imul
add
js
xchg
add
push
not
adc
lods
add
arpl
std
js
mov
bound
sbb
sbb
incb
cwtl
add
out
insl
fisubrl
dec
sub
sub
int
lea
dec
xchg
push
rclb
ljmp
pop
mov
mov
pop
jecxz
and
rolb
into
popf
xlat
lret
and
push
dec
sti
cmp
mov
hlt
pop
lahf
push
movsl
mov
sbb
and
cmp
aas
jmp
outsl
mov
lret
std
mov
or
and
inc
jbe
jno
mov
aaa
lret
mov
jge
push
or
jle
sbb
add
mov
fstps
das
loope
popf
xchg
jmp
pusha
push
xor
fucom
pop
add
push
popa
pop
and
das
push
pop
cs
rorb
dec
les
data16
push
leave
fmull
icebp
mov
push
sbb
pusha
lods
pop
flds
les
filds
inc
frstor
mov
xchg
pop
push
mov
movsl
addr16
push
sbb
add
nop
adc
xor
std
sub
dec
push
movsl
ficompl
int3
int
jle
ja
inc
shl
sbb
mov
pop
push
sub
dec
repnz
push
filds
adc
and
scas
jecxz
and
insl
jns
or
fistpll
sti
addr16
xchg
dec
jno
or
aam
jno
sbb
daa
or
in
icebp
lcall
lret
in
cmpsl
adc
jecxz
rorl
jl
mov
insl
jae
push
bound
addl
jo
sbb
push
pushw
mov
inc
imul
mov
sbb
imul
push
jg
and
jne
jge
lret
sub
push
out
insl
adc
sub
lea
inc
daa
je
js
int3
and
pop
cs
dec
out
inc
cmovae
enter
push
or
andl
out
dec
sub
imul
jg
rcl
cmp
mov
mov
mov
sbb
sbb
mov
xor
inc
divb
sbb
popa
sub
jg
dec
les
xor
fsubl
out
pop
cmp
push
orb
mov
jg
dec
into
es
repnz
call
das
loopne
sbb
pusha
or
push
cs
rclb
adc
pop
sbb
inc
lcall
cwtl
fistps
repz
or
sub
arpl
sub
aam
push
inc
xor
adc
or
loop
cld
rolb
fmull
and
fwait
adc
pusha
jge
push
adc
aad
and
cmp
mov
jge
js
mov
repnz
popf
je
outsl
orb
sbb
mov
clc
dec
jl
jbe
mov
mov
mov
xchg
shrl
jmp
jno
loop
stc
cmp
shll
fimull
or
fimuls
lret
dec
pop
das
ret
jl
push
mov
adc
mov
int
dec
add
movsb
dec
scas
rorb
lahf
test
dec
lcall
jns
push
cmp
sbb
cld
pop
push
ret
xorb
lret
mov
test
mov
push
xorl
mov
imul
sub
cmpsl
dec
lock
inc
bound
lock
xlat
pop
je
divl
push
fdivrl
mov
pop
popf
mov
push
dec
push
xor
jle
test
add
test
int
dec
shll
fs
mov
sub
lea
ljmp
cli
xchg
jle
xchg
ficoms
pop
cwtl
or
cltd
sub
and
mov
pop
push
aam
mov
int3
or
jmp
scas
xchg
push
call
rcrb
std
jp
stos
push
pusha
ret
fwait
jecxz
xchg
add
dec
jl
mov
loope
adc
lock
insb
inc
lods
xor
inc
data16
cmp
mov
fmull
in
adc
add
ret
gs
pop
jb
cmc
cltd
out
adc
aaa
lret
dec
mov
int
pop
or
sbb
inc
or
pop
cmp
xchg
iret
mov
sbb
es
test
sar
mov
mov
popa
enter
add
adc
test
mov
dec
or
out
ljmp
ret
dec
adc
fs
and
cmp
xchg
mov
sub
cmp
mov
mov
mov
ja
js
call
das
test
or
inc
push
testb
add
mov
addr16
scas
pop
dec
addb
mov
xchg
sub
mov
imul
loope
push
enter
ljmp
fldt
insl
divl
cld
inc
push
clc
mov
fldcw
fstpl
sub
bound
stc
and
pop
mov
lds
push
lea
add
cs
adc
addr16
pop
mov
bound
in
and
out
sbbb
pop
in
pop
or
shlb
fwait
jmp
push
add
loop
pop
cmp
jo
dec
sub
int3
jbe
mov
sbb
ret
add
lret
mov
popa
pusha
inc
jnp
call
dec
cmpsl
daa
icebp
sbb
ret
xchg
test
and
jecxz
xor
mov
mov
cwtl
jno
clc
adcb
push
and
enter
movsl
int
int3
cmc
xor
ret
pop
fstps
lahf
in
mov
lcall
imul
mov
jmp
add
outsl
or
cmp
pop
es
popf
lret
mov
fs
jp
adc
jl
vmovss
adc
cmp
shl
imul
int
les
or
test
cmpsb
push
mov
inc
inc
fwait
push
test
cwtl
ds
fldcw
jl
icebp
push
push
ss
out
and
dec
and
inc
push
dec
cli
movsb
push
cli
fidivs
lods
leave
mov
push
jb
int3
sub
ror
push
out
push
xchg
insb
jnp
and
push
gs
inc
mov
adc
mov
xchg
out
test
arpl
mov
or
lahf
dec
mov
popa
js
out
xor
outsb
icebp
out
loopne
sbb
xor
push
lock
in
inc
lea
cmp
and
mov
lret
xor
test
popa
fidivrl
inc
inc
repnz
ds
inc
mov
mov
jecxz
dec
or
scas
inc
clc
adc
sbb
xor
adc
mov
mov
dec
xor
dec
clc
aaa
in
xor
push
xchg
int
cltd
ljmp
ljmp
xchg
mov
pop
mov
fs
xor
mov
dec
or
repz
xchg
ds
pop
sub
add
in
lret
mov
xor
xchg
xchg
or
sti
mov
cld
ret
dec
rcl
mov
addl
mov
cmpsl
shrb
push
sahf
and
fmulp
addr16
data16
cltd
outsb
ret
xor
and
ret
xorl
mov
sarl
rorl
lea
ljmp
call
mov
push
ret
shlb
xlat
xor
or
inc
xor
cmpsb
cwtl
adc
mov
sub
pop
xchg
mov
and
push
dec
mov
mov
inc
sub
divb
push
negl
stos
scas
aas
pop
out
mov
cmpsl
xchg
lods
insb
aad
popf
ss
mov
cmpsb
dec
and
sbb
sub
inc
mov
in
cld
loope
out
dec
xchg
shlb
in
test
sub
mov
shrb
orb
nop
outsl
add
add
cwtl
pop
mov
loope
popf
adc
and
or
sub
outsl
sti
in
adc
sub
popa
daa
addr16
js
roll
adc
dec
dec
inc
jg
pop
mov
mov
xlat
das
or
repnz
push
pop
push
pop
dec
lock
cmp
in
outsl
dec
arpl
push
pop
das
xchg
aas
mov
mov
sub
xchg
adc
outsb
cmc
test
hlt
and
sbb
or
movb
jae
inc
ljmp
and
xchg
call
test
dec
popa
pop
lods
xor
xor
popa
stos
inc
jg
mov
pusha
push
mov
sbb
scas
call
cwtl
cs
lret
xchg
jo
or
mov
push
sub
sbb
mov
pop
imul
cmp
jb
jmp
pop
sub
push
xor
movsb
inc
lea
adc
mov
ss
pop
pushf
movl
mov
out
jbe
sbbb
xchg
jmp
fiaddl
sub
jb
mov
dec
lods
mov
loopne
sahf
jge
xchg
subb
jg
jge
mov
pop
stc
sbb
xchg
xlat
aas
jne
sbb
movsl
lock
loop
xchg
mov
fwait
daa
pop
rorl
arpl
nop
sub
dec
sbb
inc
add
jb
push
inc
cmpsl
inc
sahf
push
push
scas
fisttps
pop
fwait
mov
stos
shrl
movsb
rorb
add
jmp
dec
xor
cmp
imul
or
push
or
mov
xchg
sti
ret
fisttpl
or
lcall
jge
push
fdivl
mov
adc
lret
sub
and
mov
in
and
inc
cmp
ror
or
int3
add
pusha
popa
mov
divb
push
lcall
adc
mov
push
mov
daa
pop
add
iret
jl
jno
push
xor
rorb
mov
push
push
call
cld
ret
aam
sbb
jmp
xchg
or
inc
test
js
sti
sti
imul
fucomip
push
es
inc
movsl
push
or
sbb
pop
out
gs
sbb
pushf
out
and
xor
movsl
cmp
stos
pop
pop
clc
mov
ss
ds
dec
std
push
dec
gs
pop
inc
fisubs
pushf
jge
call
jmp
dec
bound
vpaddb
xchg
dec
pop
xchg
inc
or
or
loop
rcrl
dec
lahf
icebp
xor
lahf
enter
or
sbb
push
dec
pop
mov
jmp
aaa
test
and
xchg
fcmovnbe
jmp
pop
push
push
rolb
clc
lahf
lods
pop
popf
adc
mov
xchg
push
loope
cltd
lret
imul
or
cmc
pop
setb
sub
movsb
mov
xchg
and
push
inc
sbb
mov
cmp
cs
and
jl
in
and
cmpsl
insb
out
mov
lods
int
push
sub
mov
xor
les
adc
aam
push
out
enter
mov
sahf
roll
cmp
loop
add
mov
imul
mov
inc
jle
jg
enter
fs
fadds
mov
dec
lock
movsb
cld
jae
mov
mov
xchg
xchg
sbb
arpl
xor
push
ror
fadd
adc
loopne
aaa
sar
pusha
xchg
out
sahf
das
adc
leave
movsl
stos
add
mov
pop
cmpl
dec
xchg
jb
sub
imul
rclb
xchg
lcall
fmuls
inc
insb
inc
push
jnp
out
insb
mov
fwait
test
testb
inc
into
push
or
jb
and
xchg
mov
fadds
push
jb
fdivs
test
icebp
ss
ja
jp
mov
dec
repnz
cmp
test
inc
pop
xlat
ja
mov
lret
sub
scas
cs
xor
push
or
fwait
std
lods
and
ds
das
xchg
sub
pop
mov
rclb
or
scas
and
stc
adc
pop
mov
cwtl
dec
inc
jae
add
movsb
jecxz
mov
test
push
push
test
xor
pmulhuw
push
sub
int3
push
mov
mov
xchg
or
or
into
insl
ljmp
lret
dec
inc
imul
sub
xchg
mov
dec
fyl2xp1
and
xchg
mov
or
mov
cmc
lret
mov
cmp
mov
movsb
nop
jle
shll
setb
push
jo
bound
sbb
pop
andl
int3
sbb
fstps
inc
adc
test
push
lret
outsb
cs
jb
out
xchg
pop
cmp
push
pop
data16
lret
lea
and
jle
out
xchg
test
pop
mov
mov
fnstcw
insl
add
movsb
repnz
dec
mov
and
xchg
sbb
mov
loop
js
daa
inc
sbb
add
repnz
pop
sbb
mov
mov
sarb
xchg
mov
and
inc
mov
add
mov
xor
test
xorl
mov
add
inc
or
cmp
icebp
lret
nop
data16
loop
idiv
inc
mov
imull
xorps
adc
push
push
xchg
push
inc
sub
push
daa
adc
inc
sub
push
ljmp
lock
sti
push
cwtl
repnz
mov
in
les
jne
cmp
add
sbb
aam
jae
mov
pushf
or
push
mov
je
and
mov
pusha
pop
icebp
pop
je
adc
fistps
decb
or
mov
dec
cmpsw
mov
pop
or
paddsw
test
mov
push
cmp
inc
mov
ljmp
mov
dec
mov
pop
mov
popf
outsb
mov
pushf
cld
sbb
hlt
loop
insl
mov
adc
mov
jle
js
fmuls
mov
add
jns
xor
xor
arpl
dec
pop
mov
jbe
loope
dec
xchg
ja
adc
mov
shr
xchg
and
fcmovnb
and
xchg
jg
into
pmulhw
cmpsl
xchg
add
out
add
dec
loope
pushf
sbb
mov
adc
in
jo
pop
inc
sarl
imul
jp
movsl
repnz
pop
bound
and
push
mov
push
loope
arpl
inc
mov
testl
nop
into
xor
jecxz
or
xchg
mov
cld
out
mov
shll
mov
and
and
sub
sbb
or
and
rorl
jmp
inc
sbb
inc
stos
rcr
push
xor
mov
ror
and
xor
lods
adc
pop
jb
mov
andl
negl
test
jmp
arpl
stos
loop
jle
aad
xlat
sub
jb
push
out
imul
mov
mov
addr16
mov
lods
inc
push
std
mov
dec
int
fcoms
movsb
int3
in
shll
decb
jecxz
ja
cmp
dec
testb
in
outsb
cwtl
movsb
out
jl
repz
pop
stc
out
rolb
or
adc
mov
popa
mov
addr16
xchg
enter
cmp
or
out
and
aas
fcomps
out
imul
loopne
add
mov
sub
adc
sahf
jb
push
mov
jl
movl
std
lahf
pop
dec
sbb
int3
icebp
test
outsb
movsl
cmc
and
mov
mov
imul
sub
cli
cmpsl
mov
mov
js
jnp
xchg
je
xchg
or
inc
sub
movsb
cld
lahf
rol
xchg
movsb
pop
or
int3
sub
pop
inc
mov
fsubs
push
inc
cs
cmpsl
pushf
and
lcall
mov
mov
dec
cltd
shl
mov
pop
shr
jb
push
mov
dec
pop
clc
add
fs
mov
idivb
ja
pop
mov
orb
in
in
repnz
xchg
fdivr
dec
and
mov
cwtl
and
nop
pop
dec
adc
lahf
mov
lods
std
mov
adc
lods
jle
jns
add
mov
add
add
lods
mov
ret
inc
sub
cmp
rcll
xor
jecxz
pop
ficompl
testl
leave
inc
pop
mov
inc
inc
enter
cld
not
lahf
xchg
lret
inc
jmp
xor
loope
push
test
test
data16
fimull
cwtl
or
jnp
pop
cmpsl
inc
mov
arpl
movsl
leave
cli
xor
testb
mov
and
mov
out
nop
pushf
or
stos
int
enter
jne
sub
mov
dec
and
mov
lods
mov
jmp
leave
inc
dec
mov
jge
clc
mov
adcb
shl
fs
in
lret
fucomip
shll
jecxz
sbb
add
cmp
sbb
jne
inc
mulb
sub
mov
rorb
fabs
movsl
xchg
push
or
fldt
dec
cmc
cli
jnp
bound
xor
jae
cmp
clc
lcall
push
fs
lds
les
enter
and
jo
pop
jns
lock
dec
xchg
test
enter
sti
xchg
dec
jg
mov
repz
and
xor
imul
dec
mov
movsl
test
leave
lods
inc
inc
cld
flds
outsl
mov
jecxz
in
sbb
xchg
enter
jp
daa
xor
dec
in
rorb
frstor
push
mov
xchg
jnp
ja
iret
test
dec
push
push
xchg
sub
shlb
jmp
aam
mov
adc
out
repz
iret
mov
jno
out
gs
mov
pop
fs
into
dec
sbb
xor
mov
inc
xlat
dec
push
cs
orb
xchg
outsb
mov
jl
outsl
movsb
pop
outsb
mov
loop
adc
xchg
std
mov
and
roll
sub
mov
mov
mov
push
pusha
loopne
stc
mov
or
fs
test
xchg
divb
bound
jge
aam
sub
cmpb
mov
push
cmp
inc
jae
mov
roll
dec
sbb
and
cmpsl
lds
cmpsb
imul
xchg
jmp
orb
cmp
sub
xchg
cmp
rol
and
xor
dec
or
or
in
out
ret
mov
imul
pop
jne
lret
sbb
sub
aas
cwtl
shrb
xchg
lcall
cwtl
loope
jno
add
dec
cmp
rcl
popa
cmp
xor
xchg
sub
adc
bound
pop
xchg
dec
leave
fbld
aas
lahf
cmp
and
nop
dec
aaa
cs
jae
imul
and
dec
decl
mov
imul
pop
mov
sbb
leave
jl
xor
pop
jge
jge
sub
add
push
mov
shll
pop
sub
and
psubsb
std
cs
push
push
sub
jp
fs
and
mov
es
push
negb
mov
dec
inc
ss
fstpt
add
ja
and
jns
and
dec
lods
jnp
push
in
push
clc
addl
push
lock
jne
xchg
adc
xor
add
jecxz
mov
lahf
mov
movntq
out
lea
inc
push
cmpsb
in
pop
adc
ss
jecxz
jmp
mov
xor
sub
in
and
and
mov
mov
lods
into
fdivp
dec
and
xchg
sub
test
lods
push
cld
xchg
shlb
pop
push
jp
jp
mov
mov
std
and
push
dec
lcall
inc
test
mov
iret
insb
mov
in
inc
sub
add
mov
repz
aad
sarb
shrd
incl
out
stc
shll
out
or
jecxz
incl
sub
sbb
test
dec
into
dec
jle
stc
or
je
int3
in
inc
add
mov
js
push
dec
sub
and
mov
out
jno
cmp
push
sub
fstpl
js
sbb
jge
shlb
pusha
es
jne
mov
sbb
pop
mov
or
in
mov
lret
adc
push
jae
sub
test
dec
pop
cwtl
sub
adc
adc
jnp
jle
or
push
mov
xchg
pop
xchg
push
sub
subb
aas
lock
jb
xchg
and
pop
loop
movsb
xor
push
test
test
or
pop
scas
movl
stc
jecxz
repz
or
call
arpl
mov
ret
mov
fldt
aas
rcll
jne
push
xor
pop
cli
cld
and
ljmp
or
mov
loope
sub
sbbl
mov
mov
adc
or
mov
jb
xorb
xchg
push
test
pop
adc
push
int3
pop
into
enter
inc
dec
add
cmp
mov
sub
xchg
or
jg
fldcw
xor
and
jo
sbb
xchg
mov
sbb
pop
mov
ss
aad
adc
scas
loop
cld
push
stos
cmpsb
mov
push
mov
loope
cmp
adc
push
pushf
sbb
dec
jmp
pop
ret
mov
lods
cmc
dec
ljmp
test
loope
loopne
icebp
out
mov
sub
inc
or
add
mov
ljmp
movsl
sahf
lahf
gs
adc
dec
jmp
fistl
inc
push
inc
inc
or
arpl
jnp
negl
in
lock
add
sahf
bound
ljmp
ret
shrb
subl
movsl
sbb
add
pop
or
jnp
jg
lcall
sbb
lods
arpl
cltd
fmul
shrl
faddl
add
movsb
xchg
add
sbb
xchg
sbb
lea
add
jp
insb
cmp
xor
and
test
clc
test
sbb
mov
xchg
mov
inc
push
out
jl
hlt
cmpl
cld
push
push
int
jbe
out
adcl
push
xor
in
xor
jb
mov
ljmp
jmp
add
leave
inc
xor
add
scas
inc
cmpb
mov
clc
or
lahf
add
out
jb
push
pushl
lea
xchg
and
enter
jle
js
sbb
dec
mov
cltd
mov
sbb
iret
inc
push
xchg
out
int
sbb
and
lea
test
cs
icebp
int3
inc
ret
sub
mov
cwtl
test
xchg
or
xor
out
arpl
insl
stos
or
popa
sub
pop
or
or
mov
adc
xor
xchg
pop
vcmppd
jecxz
mov
xor
loopne
in
mov
mov
divb
lcall
inc
mov
outsb
mov
stos
pusha
ljmp
jl
dec
shlb
cmp
lcall
xchg
jne
inc
icebp
inc
pop
cmp
add
lret
insb
mov
shr
in
fsubrl
std
sbb
mov
jg
push
das
pop
mov
sub
sub
cmp
cli
pop
pusha
xchg
and
or
pop
ret
ss
sub
mov
push
push
sub
fstps
sahf
push
mov
sbb
fmuls
rol
shll
sbb
in
imul
cmp
xchg
or
leave
mov
mov
add
pop
xorb
lock
loopne
add
fisubl
call
loop
or
subb
add
mov
pop
push
lcall
js
or
pop
dec
jmp
pop
sbb
sub
loope
cld
cmp
insb
cmpsl
aas
cld
pop
cmpsl
loop
addb
aam
fcmovb
cmc
cli
and
popf
fdivs
sbb
mov
cld
js
mov
enter
imul
stos
in
inc
bound
lcall
fisttpll
jl
mov
cmpsl
inc
xchg
xor
je
add
clc
xchg
xchg
outsl
frstor
mov
xchg
fs
negb
enter
mov
test
lcall
test
push
pop
dec
pop
sbb
adc
sub
test
dec
lds
inc
jmp
rolb
inc
iret
push
adc
fxch
out
ret
xchg
shll
dec
xchg
insl
in
and
cmp
sti
cmpsb
cmp
adc
addb
jns
inc
clc
mov
shl
in
loope
stos
and
ljmp
aam
outsb
push
jp
push
fsub
xchg
mov
jo
adc
push
in
ret
push
nop
call
jmp
mov
ret
adc
into
pop
clc
fs
shlb
xchg
outsb
std
out
stos
xchg
cld
jno
cmp
cltd
pop
out
insb
dec
mov
or
jno
xchg
add
jns
inc
loopne
dec
cmp
sahf
lcall
aam
stos
push
shlb
sbb
repnz
ret
call
push
add
mov
dec
imul
xchg
in
insl
push
cmp
and
jb
push
stc
data16
mov
test
les
sbb
mulb
lods
jb
stos
push
jmp
jmp
repz
jns
jle
out
imul
or
cmpsb
stos
push
dec
pop
test
jge
enter
sbb
idivl
scas
mov
adc
andb
hlt
imul
shlb
rcrl
adc
in
rcrb
sti
das
inc
sbb
addl
dec
mov
sub
lret
out
gs
popa
sbb
or
mov
xchg
int
dec
lods
pop
mov
pop
popf
int
dec
out
stos
sbb
sbb
or
adc
adc
fwait
pusha
stc
data16
mov
push
jl
cli
cltd
mov
jbe
jo
jg,pn
sbb
push
or
mov
stos
xchg
xchg
cmp
in
sbb
cmp
cmp
rcr
pop
nop
enter
cwtl
loopne
cld
cmpb
gs
movsb
iret
shlb
mov
sbb
inc
cmc
sub
push
insl
dec
nop
decl
cld
andb
lock
ret
jg
stos
push
and
test
jl
cmp
sub
test
cmp
xchg
outsb
scas
push
test
cmp
in
mov
sarb
cmp
je
jo
daa
out
push
ds
fsubrs
jle
pop
inc
and
popf
xchg
cmpsl
iret
lea
add
jp
ret
mov
pop
adc
cmp
cld
inc
and
lods
xchg
rcll
cmp
jle
jp
pop
popa
sbb
mov
push
sub
lea
dec
mov
pop
popf
sub
mov
fsts
sub
out
dec
xor
push
push
mov
orb
adc
ljmp
dec
xchg
jbe
in
int
mov
xchg
or
mov
sub
pop
lcall
test
push
fst
mov
out
fs
or
daa
call
mov
adc
push
test
jns
in
ret
fucomip
test
cltd
sahf
leave
pop
std
pop
scas
mov
les
js
xor
pop
xchg
sub
cmp
jge
cmp
and
dec
out
push
cmp
jp
jmp
jle
xchg
or
xchg
aam
mov
xchg
shll
icebp
stc
and
jl
dec
push
cmp
loop
loope
jmp
dec
pop
scas
sub
jae
or
or
xlat
outsb
stos
mov
fiaddl
dec
xor
jmp
push
leave
pop
aas
leave
test
jle
hlt
or
mov
adc
cmpsb
sub
inc
mov
out
sahf
mov
adc
or
lock
imul
xor
insb
cmp
ror
pushf
jae
test
jge
and
repnz
out
mov
pop
scas
js
cmp
mov
xchg
jmp
push
or
pop
dec
popl
sub
repz
sbb
mov
ja
mov
aam
iret
ds
add
sub
andb
out
aam
aad
jecxz
mov
stos
push
rcrl
scas
push
mov
aam
xchg
cltd
xor
stos
cs
or
mov
lea
fs
sbb
push
or
ss
inc
mov
bound
ljmp
and
fimuls
cmpsb
jecxz
xchg
jns
or
inc
sbb
lahf
cmp
vpmulhw
mov
cmpsl
cmp
repnz
jmp
iret
jge
fildll
int
bound
sub
mov
xlat
mov
jecxz
inc
or
fstpt
icebp
out
add
dec
and
ss
jbe
xchg
aam
fdivs
mov
and
mov
frstor
mov
mov
or
or
fwait
xor
cmp
lret
push
or
cmp
cmp
ds
dec
sub
sbb
cwtl
push
stos
dec
push
das
cli
push
lcall
add
sbb
mov
js
stc
xchg
jecxz
mov
adc
mov
movb
jp
mov
enter
ret
adc
mov
shr
lds
and
or
jp
xchg
testb
das
cmp
jmp
cli
mov
rol
jo
xchg
jnp
push
ljmp
sub
lea
lret
sub
mov
lret
pushf
or
dec
or
rep
add
aad
mov
sub
dec
test
scas
bound
aad
xchg
fs
sub
leave
or
pop
int3
les
mov
push
push
aam
cltd
pop
sub
addr16
jb
imul
stos
test
push
lea
in
popf
inc
jnp
ds
xor
fstps
mov
sbb
fldenv
in
js
scas
push
push
fimuls
xlat
mov
mov
mov
jle
mov
je
xor
sbb
mov
icebp
pop
xor
lock
jne
jns
les
cmpsb
inc
push
sbb
fldt
test
insl
push
add
add
sub
push
stos
and
dec
and
popf
clc
mov
pop
cmp
in
divl
aas
inc
js
lret
xchg
dec
hlt
jle
jl
call
jns
fbld
fisttps
jmp
mov
or
ror
bound
pop
jnp
lret
adc
pop
imul
out
mov
push
and
pop
stos
outsl
sub
xchg
jbe
or
cmp
mov
sub
jns
push
mov
stc
jbe
jns
xchg
xchg
push
jne
jae
outsl
testl
inc
push
mov
mov
adc
shrl
or
mov
out
push
push
xchg
pop
scas
push
fidivs
sahf
clc
cli
cld
leave
lret
sub
test
neg
or
pop
adc
popa
icebp
gs
inc
pop
and
jb
ss
fcmovbe
jge
cld
jl
cmpsl
mov
dec
pop
cmp
adc
cld
jmp
test
out
hlt
cmp
add
outsb
jb
adc
lahf
test
dec
and
add
jmp
enter
sbb
iret
sarb
cmpsl
push
and
push
imul
dec
leave
not
push
rcll
and
mov
daa
xor
and
pop
je
pop
pop
and
lock
out
fs
mov
push
mov
add
mov
cmp
jo
jbe
out
push
aas
out
scas
mov
dec
sub
pop
test
push
and
int
nop
in
dec
mov
adc
mov
push
xor
sahf
sbb
stc
xor
gs
lea
popl
sbb
aad
push
cmp
cmpsl
ja
ds
add
add
push
cmp
aas
xchg
cmc
mov
sbb
fcmovu
mov
xlat
aaa
inc
cmp
imul
xchg
aam
push
jmp
insb
mov
lods
or
fistl
jae
mov
mov
call
movsb
stos
dec
ret
mov
jmp
jo
sub
test
push
notb
fldt
pop
cmp
add
cld
ret
sub
jae
js
sar
add
pop
insb
das
add
and
sbb
inc
outsb
stos
mov
cmpsl
nop
xorl
sbb
mov
push
out
mov
adc
xor
ret
aad
xor
out
dec
push
repz
adc
cmpsb
push
sbb
out
cmp
mov
and
fcomi
pop
js
sub
lea
adc
or
push
sbb
call
and
aaa
or
push
scas
adc
mov
sub
push
add
aas
lret
xchg
sub
mov
icebp
jl
push
push
in
in
aaa
cmp
lods
mov
mov
aaa
push
into
into
pop
div
xorb
decb
mov
and
out
fdivs
push
dec
xchg
iretw
inc
out
add
xchg
in
xchg
mov
iret
xchg
clc
into
xchg
ss
loope
add
out
outsb
jb
addr16
jl
mov
inc
dec
fwait
cmpsl
dec
icebp
pop
fcoms
adc
incl
dec
addb
sbb
adc
xchg
dec
jg
sbb
negl
xor
pop
sbb
loop
out
mov
mov
fwait
sbb
andb
xor
jg
cmp
push
and
sbb
lcall
xchg
fs
inc
jb
or
sub
jecxz
loop
push
add
jg
sub
mov
out
xor
cmp
xlat
jns
repz
xor
ret
clc
std
sahf
sub
xchg
jecxz
lds
loopne
movb
out
push
xor
rcrl
sub
inc
lret
adc
in
and
cmp
imul
pop
pop
repz
sub
insb
int3
mov
sub
push
vmovd
pcmpeqw
mov
outsl
xchg
xchg
sbb
lahf
iret
out
movsb
jmp
fsubp
inc
adc
call
int3
fsubs
cs
out
jmp
mov
jnp
cltd
jmp
jne
dec
dec
push
scas
or
xchg
fildll
loopne
insl
loopne
lret
cwtl
enter
lret
in
push
jnp
lea
or
sbb
mov
pop
arpl
jmp
pop
jge
hlt
mov
cmp
xor
je
dec
fwait
lret
jge
jnp
add
xor
jl
filds
add
imul
cmp
in
out
mov
fdivr
ret
sbb
icebp
xchg
stos
and
mov
sarl
and
unpcklps
icebp
shll
push
xchg
adc
insb
test
fsubrl
cmp
movsb
popl
lcall
pop
fwait
push
int3
stos
inc
out
push
in
xchg
or
push
out
cmpb
sbb
es
test
mov
xor
sbb
push
mov
mov
pop
ret
cmc
mov
push
and
xchg
and
je
arpl
call
jp
testl
and
aas
xchg
ss
jae
sti
mov
mov
lock
jge
mov
and
insb
orl
jp
add
or
gs
into
mov
push
jns
inc
in
cmpsl
mov
es
dec
in
xor
loope
push
add
adc
aaa
pop
mov
bound
dec
arpl
in
mov
mov
shll
jnp
pop
ret
into
add
push
mov
lcall
movsb
jo
adc
sbb
dec
lahf
xchg
lret
add
mov
aaa
dec
loop
nop
jo
imul
fs
in
push
std
jg
jge
pop
xchg
aam
adc
pop
hlt
add
inc
imul
dec
je
sti
movsb
sbb
mov
push
insl
pushl
cmp
or
dec
fdivr
into
sub
mov
cmp
jnp
shrl
xchg
pop
sub
mov
fnstsw
test
cmc
fidivs
sub
mov
cmp
mov
cli
xchg
mov
sahf
int3
mov
in
ret
sbb
and
dec
mov
ds
mov
inc
pop
mov
lret
fidivrl
sub
lods
into
push
jbe
stos
testb
inc
pop
aad
pop
aad
lret
std
aas
fwait
jne
into
or
int
or
xor
mov
sahf
cmp
iret
push
jl
call
faddl
call
dec
mov
sbb
mov
call
dec
mov
out
daa
fldl
xor
add
in
dec
mov
aas
subb
rorb
test
les
icebp
and
ljmp
lods
movl
mov
push
or
std
idivl
cld
jae
xchg
sub
dec
xor
xchg
cmp
adc
sbb
je
fwait
into
push
mov
inc
adc
sub
aad
jmp
int
mov
cmp
lret
add
cmpsl
clc
mul
cmpb
cmp
jg
int
fs
xor
mov
in
clc
push
cmp
push
clc
repz
dec
xchg
mov
sahf
scas
mov
pop
nop
jle
sub
mov
sub
xchg
xchg
jg
pop
mov
into
xchg
jg
mov
rorl
imul
sbb
decb
cmp
data16
mov
ss
cld
push
lods
cld
aaa
xchg
inc
pop
call
hlt
movsl
insb
cmp
out
mov
sbb
and
mov
jecxz,pn
fisubs
jge
jmp
mov
push
jecxz
rcrl
pop
pop
inc
cmp
dec
push
out
lods
sub
aad
lds
ret
addb
ret
mov
pop
xchg
xchg
cmpsb
imul
mov
and
addr16
xor
inc
xchg
dec
imul
das
adc
xchg
fldt
ret
pusha
shlb
mov
sbb
and
jmp
and
sub
dec
out
shll
and
je
mov
pop
pop
cmp
cmpsl
mov
push
mov
jne
mov
dec
lahf
enter
push
inc
push
scas
nop
fiaddl
insb
push
inc
scas
add
loope
mov
mov
sbb
lods
loope
ljmp
sub
dec
daa
mov
ret
test
rclb
inc
xchg
flds
out
xchg
mov
ja
out
cmp
andl
sub
and
sub
pop
loopne
mov
in
daa
leave
cmp
jg
pop
ret
es
cwtl
pop
mov
mov
cli
mov
dec
test
add
pop
outsl
jge
into
lds
mov
push
adc
sti
dec
mov
xor
push
out
jnp
leave
xor
lds
icebp
xchg
jp
inc
repz
stos
in
ss
pop
xchg
jl
inc
pop
sarb
loope
int3
outsb
sbb
cltd
xchg
mov
loopne,pt
cmpsb
out
cmpb
js
cmp
pop
std
cmp
fwait
push
jbe
sub
xor
pop
dec
mov
xor
jmp
arpl
mov
pop
nop
sbbl
fisttpl
push
mov
mov
cld
and
cmc
pop
jne
inc
sbb
add
or
loope
or
mov
cmpsl
test
sti
dec
mov
mov
ror
loopne
adc
cld
add
mov
mov
cmp
ret
mov
pop
outsb
popa
into
adc
xor
push
fscale
adc
aas
mov
test
stos
push
mov
push
aas
mov
push
shrb
test
fs
hlt
popw
cli
push
cmc
xchg
adcl
lods
decl
dec
cmp
push
idivl
pusha
test
adc
insl
sbb
cli
push
loopne
mov
dec
jo
repz
iret
movsl
cmp
scas
mov
xchg
std
pop
inc
jl
vmread
lret
icebp
mov
aam
sbb
mov
outsl
in
test
loope
pop
lcall
xchg
mov
and
jle
jae
sub
push
fxch
cs
leave
popa
push
insl
jg
push
mov
repnz
mov
and
push
push
in
xchg
stc
sbb
daa
fsubl
sub
rcrl
pushf
dec
sarl
mov
xor
out
std
iret
pusha
enter
pop
inc
dec
xor
xchg
inc
les
cs
mov
push
std
add
adc
repnz
call
leave
addr16
and
jge
in
out
xchg
shl
or
loop
hlt
std
inc
adcb
dec
outsl
orl
jo
ss
icebp
sbb
xchg
adcl
gs
jo,pt
add
sbb
out
pop
mov
icebp
daa
pop
rcrl
popf
sti
cmp
daa
gs
push
push
mov
out
aam
pop
out
sub
and
push
fcom
jne
pop
test
inc
add
fidivrs
push
mov
cmp
push
pop
lods
dec
sbb
pop
push
pop
inc
jge
inc
mov
dec
jmp
xchg
aad
ja
jg
mov
cmp
mov
push
adc
mov
sub
inc
out
add
push
cmp
cmp
divb
nop
push
and
aas
sub
outsl
enter
loop
jae
adc
fstpt
ja
xchg
cmpsb
and
cli
addr16
mov
mov
nop
loopne
adc
notl
mov
into
lret
cmp
enter
fisubrs
mov
arpl
decl
in
add
iret
push
lds
jnp
cmc
daa
mov
dec
inc
adc
pop
xlat
jno
daa
push
insl
mov
mov
loope
or
xchg
imull
hlt
cmp
cmp
sub
scas
mov
add
test
push
push
jp
les
and
movsl
and
loop
sbb
push
je
imul
dec
cmove
inc
cwtl
outsl
adc
ds
push
xor
xchg
mulb
nop
rcr
sub
mov
dec
int3
sub
stos
dec
push
xchg
cmp
xlat
push
pusha
cs
repnz
js
aad
mov
hlt
sarl
sbb
outsb
sub
jge
aas
in
sbb
add
jo
xorb
or
push
adc
pop
inc
adc
fucomi
or
add
push
lea
addr16
sbb
inc
jbe
cld
xlat
inc
jl
hlt
fldcw
lret
xchg
lahf
mov
sbb
outsb
push
idivl
fildll
int
push
jnp
dec
cmp
mov
pushl
inc
and
push
outsb
cmpsb
stc
sub
jmp
dec
xchg
data16
loop
mov
jecxz
mov
popa
rolb
sarl
lret
data16
mov
sbb
push
mov
lods
fildl
mov
push
cmp
rcll
bound
adc
add
sar
sti
orl
ret
gs
fadd
lret
mov
pop
inc
fs
push
icebp
fisubrl
xor
mov
out
pop
lcall
pop
arpl
lahf
loope
mov
enter
cmp
lds
sub
lock
mov
cmpsb
mov
adc
jb,pt
mov
adc
inc
sarl
aad
into
dec
movsb
fistpl
icebp
adc
mov
outsl
cmp
mov
test
out
inc
cli
xchg
lret
lods
mov
aas
cmc
lock
cs
in
xor
lret
es
add
pop
daa
xchg
ret
push
adc
xchg
dec
jns
mov
mov
push
cld
in
mov
mov
mov
xchg
loope
add
mov
push
mov
lds
or
jp
add
mov
adc
aaa
adc
cmp
dec
adc
dec
dec
aas
in
jbe
out
xor
imul
fucom
mov
decb
inc
fimull
int3
push
or
sub
jne
aam
pop
mov
pop
pop
dec
mov
or
int
int
jecxz
pop
jle
sbb
pop
in
rclb
push
jnp
repz
test
mov
xchg
inc
cmp
mov
sub
push
or
lcall
xchg
inc
daa
add
xchg
shlb
test
cmp
sti
enter
sub
andl
adc
sbb
pop
pmullw
jnp
scas
sbb
loope
pop
fdivs
fs
je
repz
out
test
pop
mov
inc
in
pop
inc
sahf
jne
fimuls
cmp
add
push
inc
xchg
pop
in
pop
subl
push
clc
or
call
mov
and
aaa
cmp
sbb
rorl
fcos
dec
sub
mov
push
mov
sti
mov
into
mov
rcrl
hlt
icebp
fcomps
cmp
xchg
sarl
out
jns
rolb
es
test
test
popf
jle
arpl
lock
aas
or
mov
dec
sbb
and
and
shll
fistpll
outsl
cld
sbb
aaa
jno
loope
inc
push
movsl
cwtl
inc
mov
call
jl
adc
imul
dec
mov
and
ret
jno
test
cmp
sarl
cmp
jg
in
lcall
roll
dec
jle
je
mov
jbe
push
setno
pushf
sti
test
repz
fistps
pushf
in
mov
loopne
sub
adc
test
mov
xchg
in
dec
imull
shlb
jb
push
dec
in
nop
adc
call
movsl
pop
mov
out
add
push
mov
scas
jl
out
addr16
adc
addl
dec
sbb
cld
pop
dec
xchg
cmpsb
movsl
and
sub
ret
imul
ror
or
pop
mov
addr16
and
pop
mov
int3
jmp
jge
outsb
sbb
xchg
ss
mov
inc
mov
sbb
push
xor
aad
lods
push
add
out
data16
dec
jge
repz
xor
push
xchg
xor
mov
jae
inc
and
mov
ret
nop
xor
addr16
push
dec
sar
and
test
mov
lret
imul
push
rcrl
cli
cmpsl
in
repz
out
sub
int
pop
dec
or
mov
adc
pop
sbb
fxch
cmp
and
loope
cmp
push
inc
mov
xor
daa
cmp
call
add
imul
inc
out
ja
testl
pop
or
movsl
mov
mov
mov
dec
push
fwait
cld
cmp
lahf
jg
movsb
jnp
rclb
fsubrl
push
sbb
jnp
imul
push
add
cmp
scas
lods
roll
jno
addr16
add
xchg
or
addr16
sub
and
sub
nop
adc
sbb
mov
pop
repz
or
mov
mov
jmp
aaa
popf
push
out
add
jns
call
lea
test
mov
push
std
cwtl
mov
mov
sub
xchg
pop
jno
gs
mov
adc
ds
shrl
xorb
mov
movsl
sub
clc
mov
daa
push
dec
bound
push
repnz
jecxz
mov
mov
int
jnp
rdpmc
inc
pusha
aad
pop
lahf
push
sbb
pop
add
xchg
xchg
lret
fildll
ss
pusha
mov
xor
sub
rclb
cmp
sbb
inc
fisttpl
pop
or
xchg
mov
in
arpl
leave
xchg
pusha
lcall
add
push
aam
jmp
cmp
mov
repz
not
xchg
adc
push
sbb
jnp
inc
cwtl
roll
mov
sarl
mov
jb
jecxz
and
add
mov
mov
aas
sarl
adc
add
or
scas
sbb
jge
xchg
addr16
lea
insl
or
icebp
jg
sbb
adc
pop
mov
pop
and
jecxz
jns
ficoms
aam
scas
test
ss
xchg
in
mov
cs
jl
mov
in
pop
and
fs
sub
push
push
leave
aam
mov
movsb
movsl
lods
cmp
bound
or
aas
mov
push
mov
outsb
adc
imul
adc
daa
add
mov
pop
dec
sbb
or
repnz
jmp
inc
sbb
ds
outsl
dec
pop
ss
adc
fxch
add
xchg
sbb
jle
clc
xor
cmp
pop
xor
and
jb
push
stos
iret
sub
dec
cs
add
sahf
test
lcall
and
and
ds
cmp
icebp
gs
push
mov
shrl
sub
sub
xchg
pop
mov
icebp
test
mov
pop
enter
xor
jge
cwtl
out
ret
push
add
rol
xor
cs
mov
fcmovbe
das
roll
lcall
popa
stos
jge
js
pop
and
mov
push
xchg
mov
lds
jnp
push
lea
rcr
sub
je
jmp
jae
es
mov
adc
and
rclb
mov
aaa
test
ja
jp
mov
sbb
lret
jecxz
incb
and
out
test
aad
cltd
cmp
push
sbb
out
lahf
jp
add
push
mov
inc
out
std
cwtl
pop
std
sti
mov
pop
jl
jnp
cltd
stos
lods
call
addr16
inc
stos
lods
jbe
sarb
fsubl
mov
negb
out
push
lcall
loope
into
test
and
loopne
out
pop
adc
add
mov
xchg
sahf
adcb
mov
jae
aaa
push
ret
ret
insb
mov
add
pop
push
push
adc
jecxz
push
jle
clc
adc
jle
shl
lock
lret
fnstcw
cld
add
cmc
fnsave
subb
sbb
std
sub
shll
and
mov
mov
outsl
push
testb
mov
stc
jns
jnp
gs
jl
inc
data16
sbb
add
mov
pop
pop
mov
shl
or
xchg
and
mov
cwtl
add
inc
dec
dec
cmp
popa
adc
out
scas
sbb
add
sub
adc
rclb
cld
scas
or
xchg
mov
mov
mov
outsl
push
jne
aas
js
mov
outsl
push
idivb
andb
xchg
in
js
setno
mov
jns
xor
hlt
test
inc
movsb
inc
jns
add
bound
ljmp
je
dec
mov
loop
outsl
and
xchg
xchg
in
mov
clc
lret
push
cmp
cmp
cwtl
xor
movsb
cmp
mov
aad
inc
adc
dec
sub
cs
push
fsubl
fs
mov
mov
sbb
cmp
cld
sub
ljmp
sub
dec
jno
jns
add
mov
lods
fmuls
push
out
scas
inc
lock
mov
inc
sbb
push
adc
xchg
orl
xor
xor
js
sub
xor
or
and
aad
sti
aas
sbb
push
int3
sub
push
adc
pop
mov
jnp
jg
movsl
pop
xchg
ss
lret
dec
mov
pop
push
jle,pn
pop
adc
test
mov
es
movsb
lret
cmpl
aaa
out
cwtl
rcrb
flds
inc
shlb
jle,pt
pop
pusha
fdivr
movsb
insb
cmp
jl
inc
mov
inc
push
jns
cmpl
incb
int
sti
jo
mov
xorl
and
fndisi(8087
js
ss
pop
nop
push
mov
and
add
out
xorl
adc
sub
aas
outsl
ret
sahf
sahf
cmp
push
adc
add
rorb
out
int
push
cmp
sub
popf
ds
adc
sarl
loop
xor
in
mov
inc
femms
ja
dec
cmp
add
clc
mov
stos
push
jbe
test
stc
or
mov
imul
xchg
mov
lcall
xorb
dec
js
cmpsl
mov
sub
add
sbb
outsb
xchg
nop
cmp
mov
mov
loope
sbb
jp
push
lea
cwtl
add
sti
jae
mov
sub
rcrl
sub
dec
push
ret
cmp
or
clc
ret
std
and
xor
dec
movl
add
stc
xor
cli
xor
mov
lock
jecxz
out
lret
pop
add
lcall
or
in
cmc
dec
adc
add
cwtl
call
sub
cwtl
xor
add
jnp
fiaddl
adc
or
in
ja
call
repz
imul
jno
cmp
mov
mov
out
xor
or
stc
fcoms
jne
mov
ret
in
das
shrl
jbe
lds
mov
add
int
fmull
dec
rep
cmpsb
push
or
mov
jb
repnz
call
and
lahf
sub
jb
push
jmp
mov
ss
fstpl
adc
sub
jmp
sahf
loopne
inc
ljmp
mov
les
jo
test
push
mov
mov
pop
mov
push
mov
iret
stc
mov
fcom
cs
pop
fbstp
movl
lods
leave
inc
cmp
jne
scas
inc
imul
fcmovb
sbb
jns
mov
sbb
xor
mov
lea
push
add
xor
jecxz
mov
pop
rorb
outsl
cmp
cmp
or
fcomip
xchg
cmp
mov
push
popf
mov
jo
stc
loope
inc
out
and
into
add
flds
ret
sahf
mov
pop
in
cmp
cli
addr16
bound
push
sub
push
addl
test
int
mov
imul
int
pop
out
add
out
aad
adc
add
jp
fimuls
ja
shll
mov
inc
pop
inc
imul
adc
hlt
loop
pop
add
fisttpll
xor
and
into
dec
scas
pushf
dec
xchg
add
or
adc
adc
push
dec
addr16
rorl
bound
xchg
dec
jmp
and
xor
insb
insb
movsl
mov
sub
xchg
ss
aad
mov
mov
inc
cmp
and
inc
stc
push
or
and
sbb
shl
bswap
push
outsl
pusha
mov
jl
inc
sar
cmp
rcr
inc
gs
insl
cmp
cmc
cmp
inc
add
sbb
lret
incl
mov
movsb
xchg
xchg
into
mov
sub
and
in
xchg
xor
jb
push
movsl
lret
push
cmp
aaa
mov
pop
push
jp
cmpsl
pop
lahf
test
jl
ficoml
sub
jmp
jno
push
adc
mov
imul
fistl
sub
cwtl
inc
ret
lea
xchg
mov
pop
jle
pop
dec
xchg
test
mov
je
das
and
call
add
repnz
and
sub
mov
mov
and
aad
call
lock
fdiv
inc
repz
pop
mov
shlb
mov
mov
les
cwtl
outsb
or
pop
pop
dec
cmpsl
inc
iret
jge
cmp
mov
frstor
cld
int
mov
nop
or
leave
mull
push
fsubrs
fwait
xor
cmp
lods
rcll
shrl
pop
fwait
call
adc
cmp
jb
pop
and
pop
arpl
push
popf
imul
movsl
outsb
test
mov
xchg
in
leave
xor
pop
or
lock
pushf
popl
mov
push
mov
lods
es
sub
ss
in
xchg
dec
cmp
push
push
and
sub
das
hlt
xchg
push
mov
xchg
adc
xchg
jae
xchg
shll
adc
lret
shrl
adcb
and
or
frstor
add
cltd
inc
fstpl
adc
pop
mov
fs
stos
xchg
xchg
inc
mov
call
push
mov
lods
cmp
mov
cmpsl
push
movsl
int3
scas
adc
push
mov
lret
std
add
in
lea
mov
iret
xchg
aaa
jg
das
pop
fldenv
push
movsl
ret
pop
sub
add
cmp
setb
mov
dec
jae
jecxz
cmpsb
sti
sub
in
fcmovbe
add
iret
pop
mov
notb
sbb
or
cmp
or
test
popf
or
dec
movsl
push
pop
mov
ficoml
xchg
rorb
fadd
hlt
push
loop
push
clc
ss
hlt
sub
in
arpl
push
cmpb
nop
inc
adcb
mov
inc
xchg
sub
mov
hlt
xchg
lahf
dec
adc
int3
fs
andb
lahf
dec
mov
sub
and
add
sbb
mov
cmp
stc
or
push
jbe
stc
pop
rorl
sbb
push
push
dec
ja
daa
sbb
jb
lahf
sub
lahf
out
add
cmp
sub
subl
or
mov
icebp
movsl
out
jb
imul
sbb
and
inc
dec
pop
mov
dec
adc
ret
or
in
push
dec
xchg
and
repz
push
dec
xchg
push
xchg
sub
daa
pop
es
fstps
sub
mov
xor
xor
mov
pop
mov
adc
inc
and
push
stos
pop
jnp
or
rcl
xor
add
std
stos
and
loop
movsb
jnp
jne
mov
sbb
xchg
loope
cld
cmpsl
xor
sbb
mov
lock
fcomps
inc
je
cli
pop
mov
mov
adc
ret
js
sti
test
adc
clc
scas
call
inc
xchg
sub
push
inc
sahf
das
lret
lods
mov
pop
popa
subb
or
adc
sbb
mov
lock
jmp
jae
push
and
push
jmp
sahf
sub
stos
xchg
push
aas
aam
into
mov
das
cmpl
xor
sub
rclb
jo
pop
push
inc
and
xor
in
cmc
push
and
mov
shrl
mov
scas
cmp
cmp
adc
and
cwtl
ret
scas
xor
arpl
dec
mov
adc
sbb
and
imul
push
cmp
pop
cmp
dec
jnp
movsl
data16
ret
or
std
or
test
push
pop
mov
fsts
iret
loope
ljmp
sbb
test
call
decl
cmpsb
mov
jg
pushf
andl
sarb
repz
jbe
sub
rcrb
cs
xchg
sub
inc
test
push
outsl
sub
cmp
lea
or
mov
out
in
xchg
lea
js
add
int3
shlb
pop
adcl
lods
aas
rolb
fcmovnb
loope
sub
aad
sbb
sarb
xor
ficoml
cmpsb
clc
and
test
or
push
and
push
mov
xor
bound
in
fwait
and
inc
xchg
jns
mov
mov
mov
cmp
int3
in
inc
xchg
adc
lahf
outsl
clc
out
push
push
inc
xchg
inc
shr
scas
pushf
gs
add
insb
xor
and
jae
ja
add
fdivr
jae
mov
and
ja
sbb
dec
dec
cmc
ss
fwait
pushf
jnp
pushf
mov
bound
dec
jo
int3
testb
sbb
mov
ret
aad
push
or
or
push
push
fcomip
insl
mov
mov
shrl
in
aas
shll
jge
pop
xor
decb
rcll
jbe
orl
or
push
lcall
and
pop
frstor
loop
dec
mov
xor
add
arpl
xchg
xlat
sub
sub
mov
imul
lods
not
cltd
mov
nop
mov
subb
jnp
inc
popf
in
mov
leave
insl
or
and
dec
inc
inc
xlat
or
movsb
sub
fstpl
pop
add
pop
add
dec
xchg
add
hlt
pop
mov
ljmp
rcrl
dec
mov
and
cld
stos
mov
xchg
ret
sti
fisubrs
movsl
xorl
stos
repnz
inc
leave
push
mov
ljmp
dec
mov
mov
jb
mov
pop
mov
popa
sbb
mov
adc
xor
fsub
leave
or
lods
stos
je
sub
enter
dec
je
xor
arpl
std
or
mov
mov
push
sub
push
push
decl
std
aad
lods
rcll
jp
jg
sub
testb
dec
icebp
adc
jge
lcall
inc
sbb
add
or
or
ds
and
in
adcl
sbb
ret
scas
add
repz
cmp
cmpsl
stos
add
and
jecxz
dec
mov
loop
xchg
pop
mov
daa
jge
stos
mov
loop
jns
ljmp
loop
insb
xchg
or
xchg
sub
ds
ret
out
out
pop
test
xor
push
mov
out
sub
in
das
fwait
sbb
fildll
bound
cmp
cmpsl
loope
jp
xchg
pop
mulb
pushf
incl
xor
mov
push
adc
adc
add
add
fimull
addl
cmp
test
adc
lods
repz
xchg
sub
ret
ret
or
cmp
ljmp
mov
fisttps
leave
mov
rorb
or
mov
inc
lret
jo
add
cmp
pop
in
addr16
jbe
cmp
add
sub
dec
xor
lret
jge
xchg
dec
cli
inc
and
popf
pop
mov
sbb
loopnew,pn
inc
mov
fcos
adc
lret
sub
push
js
mov
das
mov
and
movsl
imul
outsl
mov
movb
mov
stc
jne,pt
and
dec
cwtl
mov
mov
fnstcw
mov
test
lret
cs
inc
cmp
and
fsubl
fildll
dec
notb
les
dec
cmp
push
int
mov
sbb
jns
pusha
inc
jp
jae
cmp
jae
std
pop
ret
psubd
iret
rorl
mov
and
jge
in
xchg
sti
adc
aas
jns
sub
xor
sbb
mov
mov
adc
imul
mov
mov
xor
addl
stos
add
pop
imul
xchg
ret
jg
fnstsw
fbstp
cmpsl
inc
jbe
mov
call
mov
std
fdivl
int
shl
in
test
or
dec
leave
adc
lahf
negl
cmpsb
movsb
aam
or
sbb
xchg
in
adc
and
mov
mov
adc
inc
clc
rcrl
cwtl
jne
mov
pop
adc
cmpsl
adc
push
dec
test
sbb
outsb
add
cmp
sub
pop
scas
stos
shlb
or
mov
sub
aas
sti
enter
mov
lcall
push
fsub
inc
fistps
xor
cmc
pop
cli
xchg
xchg
idivb
pop
lock
adcb
xchg
insb
push
ljmp
sti
jg
push
mov
mov
mov
outsb
mov
push
cmp
jo
dec
movsb
mov
sbb
in
lods
into
adcl
mov
daa
xchg
mov
sbb
push
pop
dec
cmpsb
gs
push
lcall
dec
cmp
sbb
sub
mov
pop
int3
loopne
cmp
dec
jnp
or
jmp
and
hlt
adc
pop
ss
test
scas
mov
scas
dec
pinsrw
ret
mov
mov
mov
notl
mov
adc
mov
lods
ret
inc
mov
push
adc
js
in
pop
push
jl
inc
jge
xchg
lret
pusha
ljmp
jne
je
sbb
daa
xor
push
scas
dec
lret
cli
add
or
inc
ja
movsl
out
cmpsl
sahf
jecxz
pop
push
mov
divl
dec
shrb
into
ss
or
out
lods
push
repnz
shll
mov
mov
fldcw
xchg
iret
mov
xor
cmp
jp
or
push
int
cmp
sahf
or
add
data16
mov
adc
mov
adc
cmpsb
jno
push
push
mov
cmp
je
sub
xchg
movsb
mov
mov
mull
jno
xor
add
js
mov
or
xor
adc
sbb
fsubrp
mov
cmp
jl
pop
icebp
or
pusha
jb
sub
adc
pop
jl
imul
mov
adc
sub
xor
push
dec
push
or
jbe
inc
push
ja
mov
mov
das
sbb
cmp
adc
xchg
add
push
lret
xlat
sbb
and
inc
inc
in
test
push
add
xor
or
jno
pusha
lods
ror
js
out
es
mov
cld
ret
fstpt
loop
adc
xchg
push
xor
xor
add
mov
push
mov
popa
pop
bound
out
pop
add
jnp
lea
sub
xchg
cmpsb
std
xor
dec
movsl
ret
out
cwtl
sbb
cltd
mov
xor
imul
mov
pushl
popf
icebp
inc
ljmp
inc
xor
mov
addr16
mov
jg
mov
int
inc
xor
insl
sbb
pushf
dec
rcrl
bound
cmp
es
nop
lret
pop
pop
dec
mov
pop
imul
ja
aas
rep
lods
xor
lods
xor
sarb
icebp
xchg
pop
ror
add
mov
insl
inc
bound
das
fdiv
add
mov
adc
inc
dec
out
aam
xchg
cmpsl
mov
or
inc
cmc
pop
test
aam
es
or
out
fisubrl
ja
in
aaa
leave
or
xchg
xchg
in
sahf
inc
test
fstpl
mov
ljmp
movsl
jbe
cmp
jg
mov
cld
dec
mov
in
inc
pop
into
xor
cld
lock
mov
and
cmp
data16
ficoms
call
dec
fisubrs
xor
icebp
in
stc
mov
or
sbb
inc
repz
cwtl
and
sub
adc
rcl
in
mov
cmpsb
dec
add
xor
das
xor
in
xor
loop
loopne
cmp
jbe
jne
pusha
fs
shrw
xchg
ror
mov
sbb
adc
insl
mov
jmp
leave
cli
in
push
test
insl
lret
int3
popa
popf
xchg
cltd
loope
mov
xor
mov
fidivs
mov
cmpsb
add
out
adc
lds
fs
arpl
or
cmp
icebp
repnz
xor
ret
mull
out
pop
sbb
lret
mov
addr16
mov
repz
mov
cld
or
push
xchg
sbb
sub
mov
lret
call
adc
inc
add
xchg
add
in
pop
pushf
les
pop
cld
loopne
jnp
jne
mov
outsl
pop
or
push
cmc
mov
shlb
rorb
adc
stc
adc
into
xor
mov
xor
test
mov
lds
sub
mov
mov
paddd
rcrb
out
jmp
xchg
adc
add
add
ja
push
sbb
into
fnstenv
or
sti
jge
ret
dec
and
imul
adc
call
or
in
pop
pop
notl
rcr
mov
sub
test
jbe
mov
mov
push
fsubrs
fadd
jmp
inc
mov
sbb
lahf
push
add
icebp
mov
imul
ja
out
ret
aas
cld
xchg
sub
cld
xchg
mov
je
push
call
adc
fldl
mov
lea
adc
inc
daa
fcmove
pushf
jo
jge
mov
add
cli
jge
sbb
or
pusha
cmp
scas
mov
popa
mov
cltd
data16
jecxz
sbb
fsubp
inc
pop
mov
ret
add
sbb
cmp
jge
adc
ds
pusha
pop
mov
xchg
lret
into
add
adc
pop
push
or
jo
inc
jno
test
mov
testl
mov
pop
dec
jl
pop
fsubr
inc
dec
mov
inc
jns
dec
stos
xor
pop
mov
test
inc
jae
lods
out
fstpl
mov
inc
iret
mov
dec
xor
mov
sbb
add
sarb
or
imull
sub
cmp
or
inc
in
dec
aaa
mov
movsb
mov
dec
xchg
lods
sub
insb
outsb
cmp
mov
mov
cmpsl
mov
mov
cmp
sub
xchg
lods
lods
scas
les
pop
aaa
mov
lock
sub
push
cmp
cmp
mov
dec
jp
cli
cli
dec
or
roll
add
inc
and
scas
sbb
sub
dec
fcoms
dec
and
sub
xor
xor
adc
adc
std
iret
cltd
popa
sbb
fiadds
pop
stos
cwtl
out
ret
data16
clc
in
mov
imulb
test
lahf
jae
movsl
icebp
jge
sbb
jge
addl
daa
adc
push
mov
mov
cwtl
inc
lret
dec
ret
dec
lods
cmc
xchg
stos
jl
in
es
pop
push
mov
call
fucomi
dec
imul
out
xorb
lcall
mov
xchg
movsb
fcoml
xchg
pushf
ret
add
lds
repnz
add
push
pop
into
cmp
pop
adc
data16
fwait
xor
fwait
in
lcall
lret
dec
pop
rclb
aas
dec
test
pop
sbb
cltd
add
mov
mov
repnz
sete
add
icebp
pop
ja
leave
and
ljmp
inc
mov
ja
pop
mov
iret
adc
pop
hlt
mov
mov
push
pop
jle
lods
clc
pushf
xchg
sbb
mov
push
ds
repz
xchg
hlt
or
cli
or
adc
xchg
dec
cwtl
add
mov
cld
andb
addr16
cmpsl
fsubrs
jg
xchg
cmp
jae
out
in
push
xchg
stos
pop
xlat
std
sub
dec
xchg
xor
jle
aaa
jle
dec
or
outsb
sbb
insl
jo
lock
scas
js
rclb
push
movsl
test
add
sub
test
fdivr
xor
and
jg
je
or
xchg
into
push
popa
pop
add
sbb
fwait
aam
lds
movsl
fisttpll
inc
inc
ja
cs
xor
jbe
out
ds
fnstsw
xchg
and
pop
loope
push
jl
aam
mov
inc
mov
sahf
mov
mov
mov
mov
pop
push
adc
int
fcomps
push
rorl
pop
cld
push
leave
sbb
shl
mov
aad
lds
nop
jbe
lcall
jae
and
sub
jmp
out
adc
pop
mov
xor
out
ja
mov
cs
out
das
and
int
and
loopne
gs
orb
mov
loopne
xor
xor
lock
aad
repz
mov
popa
sub
js
clc
shr
pusha
ds
or
pop
and
repnz
add
and
loope
and
rcrl
imul
mov
sub
nop
orb
lret
xlat
mov
push
jg
mov
xor
imul
dec
sub
pop
lret
mov
shlb
lods
mov
sbb
subl
hlt
adc
pop
cwtl
div
notl
xor
shrl
mov
jg
or
cmpl
jecxz
mov
cld
mov
outsl
insb
outsl
mov
dec
outsb
pop
mov
push
shl
ja
popa
and
mov
loope
stos
or
inc
sarb
and
xchg
inc
imul
in
or
mov
mov
jnp
mov
das
pop
imul
fmul
xchg
xchg
aas
jle
repz
test
dec
adc
scas
aaa
mov
mov
pop
mov
or
pop
test
je
ljmp
mov
daa
pusha
out
fcomps
cmp
dec
in
mov
rorl
mov
sub
sub
sub
aad
dec
sub
pop
xor
lds
xor
dec
sub
xor
lds
mov
arpl
es
arpl
and
lahf
jns
call
dec
testb
mov
lret
scas
sbb
cmpb
imul
mov
mov
or
out
enter
popf
sahf
xchg
and
cmp
subb
out
jmp
push
mov
popa
inc
xor
call
push
lahf
ljmp
or
push
pop
insl
outsl
rol
add
and
fisubrs
inc
outsw
test
cmp
sub
and
mov
sbb
ds
lret
movl
fistps
cltd
clc
je
mov
rcrl
adc
es
test
dec
and
dec
imul
test
mov
adc
fs
sub
andl
adc
lods
xchg
dec
mov
rcrb
cmp
rorl
call
test
daa
or
scas
lods
leave
nop
cwtl
add
out
xor
ds
fstps
push
je
xchg
inc
test
insb
sbb
add
aam
cmp
lahf
aas
sbb
inc
mov
into
cmpsl
dec
pop
inc
add
push
lahf
dec
adc
out
lret
mov
test
jp
add
fsubr
sub
popf
pushf
loopne,pt
dec
fst
ds
jl
ret
dec
imul
and
push
cmp
jmp
mov
insl
mov
xor
bndldx
arpl
lock
insl
xchg
fistpll
in
arpl
orb
notb
mov
imul
mov
sub
out
sub
outsl
int3
push
fst
sbb
rcrl
xor
adc
jae
sub
stos
fldt
shr
mov
inc
adc
in
jg
jl
cwtl
outsb
adc
fs
cltd
in
test
xchg
hlt
mov
adc
inc
push
jne
dec
mov
rorl
repz
pop
fwait
enter
add
rclb
cmpsb
gs
xchg
addr16
leave
dec
cltd
sub
inc
clc
ret
loope
movsb
xor
daa
js
push
mov
pop
xor
mov
aas
or
movsb
pop
jnp
outsl
xchg
pop
pop
push
inc
jmp
dec
jne
adc
push
pushf
sbb
pop
or
jne
jnp
push
push
repnz
adc
stc
xchg
xchg
push
fdivl
outsl
xchg
mov
cmp
rorb
pushf
popa
jmp
jnp
or
xor
ja
xchg
test
or
pushf
mov
push
decb
inc
and
aad
add
adc
fadds
rcl
dec
fmul
in
iret
cmp
sub
cwtl
fists
test
in
mov
sti
pushf
daa
fsubrp
fsubl
adc
or
push
dec
sbb
mov
repnz
and
lds
not
clc
pop
adc
sbb
push
push
cmp
mov
int
xor
xchg
xchg
inc
enter
pop
addl
loopne
push
inc
cmp
push
in
pop
push
xchg
pop
lods
shlb
inc
lea
aaa
seto
lret
ljmp
fs
inc
or
mov
sub
nop
ds
cmc
xor
cli
mov
loop
hlt
mov
and
clc
or
popa
in
sbb
ss
sub
jecxz
push
dec
add
scas
push
sub
push
les
icebp
jmp
add
and
vaddps
xchg
xchg
movsb
or
lahf
fs
icebp
aam
outsb
aaa
jg
out
and
sarb
jge
mov
mov
fisttps
xor
aas
insb
mov
fwait
pop
xor
rorb
scas
push
jno
ret
inc
test
lcall
dec
push
jne
test
scas
cmpsb
lock
cmp
dec
push
imul
sub
scas
mov
add
mov
dec
xor
test
mov
jecxz
stc
cld
pop
sub
popf
lods
cwtl
js
fcompl
xlat
cmp
inc
jmp
call
aad
fiaddl
loopne
pop
mov
in
imul
jle
and
iret
sbb
lods
test
lret
push
out
test
add
jne
aas
xor
or
cmp
lahf
xchg
dec
scas
cmp
pop
push
test
sbb
fidivrl
aam
sub
sbb
xchg
adc
and
fwait
mov
push
mov
jmp
mov
push
dec
push
cmp
xor
aam
fidivrs
addr16
pushf
mov
adc
out
out
add
loope
pop
lcall
hlt
or
add
lahf
in
xchg
jg
inc
icebp
jge
cwtl
out
pop
sti
scas
inc
dec
cmp
icebp
ss
sub
rclb
iret
push
or
adc
mov
out
push
add
pop
mov
stc
and
sbb
loope
sarl
inc
xor
lea
sarb
scas
dec
inc
out
sbb
sbb
mov
pop
pop
sbb
enter
xor
mov
fstp
daa
cmp
mov
pop
xchg
outsl
jmp
lret
xchg
js
insl
test
cmp
push
das
mov
repnz
jne
lods
clc
push
push
mov
cmp
push
add
add
xor
and
add
int
mov
pop
sbb
dec
sbb
daa
cmp
add
jle
sub
stc
cmp
fidivrs
out
sub
jecxz
push
mov
adc
dec
insb
or
in
jmp
addr16
rclb
push
enter
xchg
insb
xor
aas
xor
cmp
icebp
inc
add
js
mov
lahf
and
negl
jge
subb
mov
add
cmc
roll
xchg
dec
cmp
in
adc
cmp
add
jge
sbb
lods
sete
sti
scas
pop
dec
inc
rcrb
mov
outsl
mov
sub
shll
mov
lds
adc
mov
pop
xchg
hlt
lret
dec
pop
xchg
cmpsl
jno
leave
mov
aam
movsb
out
call
popf
mov
pusha
or
out
cmp
cmp
jns
sbb
loope
mov
lock
push
mov
xor
jns
nop
je
lahf
int
loopne
sub
jmp
and
cmpsl
xor
add
call
push
gs
call
mov
jo
popf
arpl
cmp
ss
dec
jle
jnp
pop
cmp
pop
mov
xchg
into
sarb
aas
add
fistpl
iret
add
adc
xchg
mov
jne
add
sbb
jo
and
outsl
sub
movsb
mov
push
sub
and
xchg
out
in
cwtl
and
shl
pop
jno
popl
add
int3
mov
iret
fiadds
mov
sarb
xchg
xor
imul
sub
dec
lret
mul
in
pop
mov
mov
or
xchg
or
hlt
lds
outsl
mov
mov
cmc
pop
cmc
jne
mov
hlt
mov
inc
std
andl
sti
cltd
gs
and
shrl
jge
pop
xor
sbb
or
stos
out
xchg
or
and
jmp
nop
sbbl
cltd
clc
add
fwait
repnz
std
jmp
loope
cmpsl
stos
orl
or
lods
push
push
mov
mov
fs
in
fnstenv
mov
mov
inc
xor
inc
testb
stc
adc
mov
mov
aaa
out
inc
xchg
imul
mov
xchg
jbe
xchg
rorb
pop
cltd
insl
cltd
cs
xchg
jecxz
sub
or
adc
ret
and
cltd
add
adc
jp
in
jge
xor
lea
mov
add
xlat
mov
mov
and
lds
lret
jp
int3
add
mov
adc
or
push
push
imul
loop
sub
fs
and
scas
ret
loopne
rcll
push
sbb
fnsave
mov
mov
pop
or
je
and
ljmp
lcall
xor
xor
cmp
inc
push
aam
jo
jle
dec
out
pop
int
imul
in
stos
and
push
insl
in
aas
cltd
js
xchg
mov
push
mov
dec
ret
pop
jmp
adc
xor
mov
repnz
not
scas
jne
fwait
int
xchg
cmp
cltd
pop
testb
xor
or
xlat
and
out
ja
xor
sbb
push
leave
sbb
lock
xor
xor
fbld
push
mov
add
popa
add
xchg
js
out
cmpsl
movb
faddl
popw
jbe
sbb
mov
js
sub
pusha
pop
fiadds
mov
push
add
dec
ret
stc
add
mov
into
dec
std
cwtl
dec
dec
cmc
mov
pop
push
inc
mov
mov
dec
pop
adc
out
cmp
pop
mov
pop
imul
out
test
fidivs
loope
pop
mov
push
push
mov
fsub
cmc
adc
and
xchg
popf
push
xchg
ja
push
jb
cmp
mov
and
insl
clc
lods
test
lcall
out
scas
jge
pop
jge
leave
mov
mov
fs
sbb
out
adc
mov
loop
es
repnz
icebp
xor
mov
insl
lods
dec
scas
sub
data16
aaa
aas
jg
push
mov
out
jmp
mov
int
add
lea
adcl
jmp
stc
ret
sahf
sbb
mov
sbb
lods
vdivps
add
sbb
test
into
std
jg
sbb
std
out
inc
dec
or
popf
std
jmp
sub
cmp
push
pop
ret
mov
lcall
inc
out
pop
jge
push
mov
lret
popf
loopne
lea
xchg
jno
push
xor
fidivl
lods
sub
jbe
faddl
lret
mov
jno
jne
cli
cmp
jecxz
test
movsl
ret
lcall
cmp
push
sarl
lds
int3
pop
mov
std
or
jne
cmc
int
jae
fwait
mov
pop
lahf
xchg
or
rcll
addl
fmuls
inc
divl
daa
repz
rcr
jnp
push
fsubs
insl
inc
out
pop
sub
jg
or
leave
iret
cmp
mov
push
or
pusha
int3
ret
in
mov
in
xor
mov
xchg
loopne
in
movsl
daa
jp
pop
out
and
sub
mov
mov
adc
adc
jo
stos
add
lret
shlb
sahf
push
add
mov
nop
int
outsl
andl
lock
pop
lret
dec
xor
push
and
and
inc
cwtl
cld
ficomps
je
aas
add
pop
cmp
xor
or
add
mov
sbb
mov
sahf
cmp
sub
fldcw
inc
lahf
add
ficoml
jne
div
mov
gs
cmp
loop
jge
push
push
or
test
inc
mov
jecxz
dec
push
mov
sbb
adc
es
stos
push
in
sub
ds
xor
leave
cmpsb
out
loopne
int
mov
mov
xor
cmpsl
pop
mov
movsl
lahf
mov
adc
imul
pusha
xchg
mov
shlb
aaa
shrl
add
jnp
jmp
xchg
mov
rcl
xlat
add
inc
xchg
fwait
lahf
arpl
adc
mov
test
hlt
loope
loop
bound
push
lret
or
mov
cmpb
ror
or
lcall
sub
adc
addl
pop
popa
cmpsb
cwtl
mov
xor
push
push
int
cmpsb
rcl
push
jns
sahf
clc
mov
jnp
icebp
popf
arpl
pusha
xor
sbb
mov
arpl
xor
imul
push
xchg
inc
inc
cmp
mov
adc
push
enter
mov
mov
cmp
mov
jmp
adc
or
repnz
fwait
dec
scas
in
push
in
mov
and
scas
inc
mov
fmull
ret
mov
pop
popa
ja
lea
and
add
ljmp
jo
outsl
je,pt
and
cmc
cltd
fists
sarb
add
pop
int3
stos
movsb
scas
push
fwait
orl
mov
and
outsl
push
add
jne
jle
pusha
in
imul
rcrb
adc
pop
loopne
sub
xlat
fmull
pop
sbb
cwtl
cli
aaa
out
addb
dec
xchg
dec
xor
jp
xor
ljmp
adc
loop
pop
sarl
push
xchg
push
fnsave
mov
ret
lret
clc
sbb
andl
int
xchg
xor
repnz
dec
dec
add
pusha
fmuls
xchg
xor
xor
out
sub
adc
sbb
not
es
or
mov
sahf
lret
xor
int
adc
add
aas
mov
inc
dec
dec
fstp
ret
pop
fadd
mov
rcrl
sub
mov
lret
sti
int
sub
jno
xor
rcrb
pushw
mov
setbe
cmp
sbb
aad
je
std
rclb
add
smsw
xor
sbb
sbb
mov
sarb
fstpt
cmpsb
cmpsl
out
jp
adc
lods
js
pmullw
out
adc
add
jno
out
sbb
scas
fdivrl
fwait
xor
pop
aas
ficoms
je
in
fsubrp
push
xorl
scas
out
fs
and
xchg
daa
dec
push
fcomps
jg
in
mov
jmp
lahf
inc
push
push
add
mov
sbbl
enter
sub
in
sbb
sub
mov
cmc
jo
adc
push
dec
lcall
in
pop
and
fsubs
cmpsl
popa
adc
cmp
xor
cmp
push
loop
pop
ja
ljmp
push
xchg
dec
xchg
sub
and
or
mov
inc
push
sbb
ja
push
incb
xor
mov
lea
les
cld
or
mov
js
mov
loope
aas
nop
mov
into
in
xor
arpl
or
pushf
inc
push
sub
arpl
es
bnd
dec
sbb
xor
add
jp
es
test
mov
lahf
and
xchg
pop
test
jl
jecxz
and
and
mov
lret
pushf
pop
repnz
mov
jl
sar
xor
divb
insl
vpmaddwd
test
bound
mov
xchg
add
jno
out
push
js
mov
shlb
scas
mov
xchg
xor
xor
mov
out
cs
mov
in
dec
push
sub
mov
nop
inc
mov
cld
outsl
jbe
lcall
mov
popf
imul
fstpl
pop
mov
outsb
in
ja
adc
pop
mov
mov
jns
sub
popa
ds
pop
fcomi
adc
jne
sbb
movl
jb
add
scas
mov
jb
cmp
cmp
test
addr16
mov
push
nop
ret
lahf
push
ja
add
fs
sbb
mov
nop
enter
sub
daa
movsb
roll
cltd
cmp
mov
stc
pusha
stos
cli
or
aad
pop
pop
add
jbe
or
mov
mov
loope
gs
lea
mov
imul
jp
pop
lahf
jl
dec
cmp
push
push
aam
fdivrs
xor
mov
jnp
std
xchg
xor
or
pop
lock
pop
loope
jle
pop
fimull
call
negb
mov
fwait
mov
div
mov
jb
lods
and
test
add
xlat
test
mov
test
sbb
dec
sti
xchg
xor
test
mov
test
adc
sub
shlb
daa
push
push
popa
push
into
push
fxch
cmpsl
jp
clc
xor
inc
xlat
int
ljmp
test
call
pop
sbb
dec
jbe
ret
mov
inc
addl
testb
ret
aaa
cwtl
pop
adc
mov
mov
mov
ljmp
pop
das
push
mov
inc
shr
aas
xchg
xor
ficompl
pop
gs
loopne
fsubrs
inc
rclb
jno
daa
mov
pop
jo
ss
jbe
and
popa
mov
fsubrs
icebp
leave
test
inc
mov
mov
data16
lods
mov
jns
imul
jp
test
xchg
lret
imul
adcb
mov
shrl
xchg
rol
repz
scas
fsubs
add
sbb
cmp
outsb
mov
sbb
jmp
push
imul
pop
xchg
sbb
pop
repnz
xchg
and
iret
in
sub
xchg
push
imul
orl
fidivl
xor
and
or
inc
fisttps
mov
mov
cld
cmp
add
stos
add
add
xor
mov
mov
xor
and
test
es
daa
test
adc
xor
xchg
ret
fistps
data16
mov
pop
test
sti
int3
lock
or
fxch
sbb
subl
inc
pop
mov
push
or
jg
push
add
icebp
dec
lods
or
dec
adc
leave
push
jp
dec
xor
ljmp
add
jae
adc
pusha
or
out
test
js
add
dec
mov
mov
loope
mov
jb
es
lcall
lret
push
adc
cmp
fisubl
fwait
cwtl
inc
pop
xchg
inc
cmp
mov
iret
out
iret
pop
add
lods
sbb
xorl
repnz
clc
xor
jae
in
push
gs
jb
dec
pushf
inc
inc
and
sahf
out
ficompl
push
data16
movsb
adc
rcll
push
sarb
xchg
xchg
fmuls
jne
fsubp
inc
xor
pop
inc
aam
imul
cmpsl
in
ljmp
pop
sbb
xor
cmp
pop
mov
stos
push
adc
aad
push
xchg
mov
lock
xlat
adc
test
rorb
cli
sbbl
xlat
or
stc
xchg
mov
cmp
sub
dec
ljmp
in
cli
into
pop
cmp
rorl
fstp
mov
and
fstp
fdivl
add
cs
adc
sbb
jo
mov
mov
and
jmp
or
jne
inc
pop
mov
mov
inc
cmp
addb
into
push
loopne
in
push
ret
mov
and
insl
loopne
and
jle
popa
dec
dec
sub
pop
cmpsl
mov
xchg
sub
jle
xor
movsl
add
inc
or
or
outsl
call
daa
adc
shrb
cmp
js
mov
mov
cld
pop
dec
ret
addb
add
mov
sub
sbb
fs
lea
push
xor
xchg
mov
scas
mov
icebp
test
imul
mov
pusha
xchg
cmp
dec
insb
in
mov
or
stc
ficompl
jne
mull
sub
xchg
mov
insb
sub
outsb
or
pushf
cmp
xchg
adc
arpl
cmpsb
loope
cmp
push
pop
pop
pusha
add
mov
cld
lret
outsl
jo
ret
popa
lea
adc
data16
mov
mov
ss
cmp
pop
nop
mov
rcll
sahf
xor
xchg
loope
out
js
gs
add
test
xor
xchg
adc
or
jle
lret
aam
outsb
dec
lret
xchg
jae
frndint
pop
scas
jl
fwait
jg
scas
iret
mov
mov
les
leave
shll
inc
xchg
xchg
push
aam
xchg
mov
clc
dec
dec
jnp
jp
in
dec
push
fnstenv
in
xor
rolb
aad
jbe
push
sub
pop
jl
sbb
push
sbb
jae
fisubrs
stc
gs
out
sbb
inc
mov
ficoml
jae
test
scas
adc
inc
and
lcall
ror
pop
mov
in
pop
jb
insb
fstpt
and
xchg
jns
mov
xor
adc
xor
mov
sub
jno
fs
xor
test
pusha
pop
jns
insb
mov
cmpsl
inc
pop
sub
sbb
rcrl
int
mov
inc
inc
push
jne
js
xor
mov
ret
cmp
push
pusha
jl
or
or
pushf
push
mov
cmpsb
xchg
xchg
aad
mov
in
sahf
andb
mov
in
jecxz
stc
or
outsb
lea
movsl
add
lods
xchg
xchg
pop
mov
fstl
cli
inc
imul
push
cmpsl
adc
loope
push
push
adc
inc
popa
mov
shlb
mov
int3
pop
add
or
ss
mov
add
jbe
sahf
mov
push
mov
xchg
cmp
mov
sbb
add
jns
sbb
cld
lret
ret
rolb
outsb
mov
addb
mov
mov
adc
popa
adc
mov
test
loop
ret
scas
pop
mov
mov
stos
add
rcrl
sti
mov
dec
mov
ss
mov
leave
addr16
shl
int3
xchg
dec
imul
jmp
mov
insl
pop
inc
mov
dec
mov
dec
loop
nop
faddl
jg
sub
fwait
jo
ret
fmull
stc
xor
stos
xacquire
paddb
cmp
cmp
xor
mov
cltd
cmp
mov
aas
cmp
repnz
jge
cmp
repnz
cmp
add
and
add
stc
mov
adc
subb
or
rcl
outsl
adc
fisubrs
xlat
out
pop
push
xlat
push
mov
fwait
lock
jne
push
lods
xchg
inc
sbb
lahf
repz
and
push
rep
push
andb
cltd
pop
jae
mov
mov
test
sbb
ds
aad
aas
repz
bound
ret
insb
movsb
dec
cmpl
sahf
popa
and
cwtl
rorl
cmp
pop
xchg
arpl
jmp
lock
orl
mov
mov
cmp
dec
mov
mov
pop
inc
imul
inc
outsl
and
jp
add
mov
or
fwait
lret
sbb
leave
adc
movsl
paddsb
jle
xor
sbb
outsl
jecxz
test
scas
dec
rcll
mov
out
cltd
inc
xchg
popa
push
nop
mov
mov
lock
xor
and
cmpsl
jnp
ja
cmpsb
pop
push
andl
sti
xchg
pushf
aas
rorl
scas
pushf
int
decb
inc
fstpt
std
pusha
inc
scas
pop
add
push
leave
jne
inc
dec
fcmovnu
sub
cmp
jo
addr16
shl
popa
mov
shll
xchg
imul
mov
hlt
js
push
imul
imul
adc
pop
xor
and
ret
xchg
add
push
mov
out
push
adc
jns
and
cmp
movsb
pusha
inc
dec
sub
sbb
adc
cmp
cmpsb
cmp
popf
jo
push
and
pop
fcmovbe
outsl
stos
bound
jmp
fwait
icebp
lahf
fiaddl
sarl
fsts
jge
xchg
mov
xor
mov
aas
mov
mov
imul
jb
mov
dec
cmp
mov
movsb
inc
sub
sarb
nop
cmp
lcall
or
popf
mov
lods
push
xchg
sub
ret
into
inc
lcall
add
xchg
cltd
mov
dec
fcompl
fwait
push
cmp
add
lea
pop
mov
fists
mov
cld
add
rorb
gs
nop
cld
mov
inc
test
push
or
add
fnstenv
mov
sbbl
outsb
pop
jp
lret
cld
pop
testb
pop
mov
imul
sub
and
mov
stc
pop
pop
inc
inc
xlat
cs
movsl
jo
loop
lret
shr
test
sbb
jb
fld
es
cs
pusha
adc
lahf
je
lret
inc
and
loop
inc
push
add
fisubrs
outsl
fimull
fs
movsl
xchg
jle
inc
mov
jp
ret
aad
fisubrs
add
add
test
and
sub
push
xchg
mov
shlb
arpl
aam
jns
sbb
sub
bnd
push
jmp
push
adc
in
insl
jae
and
push
cltd
mov
sub
xchg
xchg
pop
loope
mov
sub
movsb
sub
adc
adc
lcall
xorb
mov
xor
sbbl
loopne
aas
std
inc
mov
negl
into
stc
mov
xchg
lahf
fwait
lock
pop
scas
mov
mov
cmp
ljmp
and
adc
xchg
xor
lods
and
mov
test
sbbl
popf
cltd
test
dec
ret
loope
into
loope
sub
mov
sub
repnz
cli
xchg
fnsave
insb
pop
sbb
mov
lahf
pop
add
xor
dec
cmpsb
sbb
mov
movsb
test
test
jge
jne
rcrb
imul
sbb
stos
std
adc
cli
sub
in
fdivs
adc
adc
pop
xchg
fwait
inc
pop
mov
mov
mov
adc
and
data16
ljmp
aad
fnstenv
lods
xlat
or
stos
shr
clc
shl
ret
jb
or
push
pop
imul
lods
dec
push
push
into
shll
aad
cwtl
dec
out
in
lcall
aad
cmpsb
mov
push
push
mov
mov
insl
pop
pop
mov
cmpl
push
dec
imul
push
sahf
push
sbb
sbb
int
sub
push
xchg
lret
arpl
repnz
cwtl
pop
aaa
into
xchg
aaa
icebp
add
xchg
ret
pop
adc
mov
jp
aam
jge
inc
enter
jns
lahf
mov
pop
popa
loope
xor
or
cs
jnp,pn
add
icebp
mov
gs
arpl
out
adc
dec
inc
jl
lock
pusha
cmpl
lods
inc
mov
dec
sti
movsb
in
int3
or
mov
sbb
xor
mov
nop
iret
pop
bound
mov
xor
pushf
push
sbb
fisttps
jg
jns
fwait
lea
popa
aad
or
dec
sub
push
loopne
sub
cmp
add
and
xlat
xor
mov
rcrb
jmp
dec
cmp
push
jge
adc
cmp
into
pop
cmp
or
aad
adc
imul
les
fisttpl
into
inc
or
mov
stos
mov
dec
mov
pop
cs
mov
and
jg
jo
and
clc
out
add
enter
mov
ljmp
lret
mov
xchg
lret
leave
ja
xor
orl
add
or
mov
lods
into
sub
jp
dec
cmpsl
cmp
int3
sub
gs
pop
in
lds
lret
out
lret
xchg
sbb
mov
dec
bound
mov
mov
leave
sbb
mov
jnp
aas
gs
and
add
ljmp
stos
lcall
jb
shl
and
pop
and
jge
ljmp
repz
loopne
and
in
jl
mov
mov
push
push
bound
je
add
push
push
sbb
out
mov
jbe
fisttpll
popf
jo
scas
mov
sub
popf
xor
mov
bound
imul
rcll
and
negb
stc
jnp
push
mov
fwait
push
pushl
rorl
lods
call
outsb
mov
bt
jb
pop
add
inc
bound
test
xor
popa
jp
pop
xchg
enter
lods
mov
cmpb
outsl
fiadds
adc
insl
in
cmp
jnp
mov
shrb
jg
mov
test
pop
adc
std
jbe
push
mov
mov
xor
test
sbb
push
sub
sbb
fsubrl
clc
xchg
rorb
jmp
mov
es
insl
mov
loopne
les
dec
inc
mov
adc
jne
dec
incl
clc
in
mov
es
aam
icebp
push
in
or
pop
push
fstl
sbb
sub
clc
je
stos
es
jge
or
movsl
ljmp
insb
sub
xor
repz
insl
aaa
cmp
jge
imul
sub
and
sahf
outsb
inc
lret
lcall
inc
add
lahf
filds
pusha
mov
leave
hlt
clc
dec
in
push
jo
pop
sub
fmuls
cmp
test
nop
inc
or
pop
addr16
mov
mulb
int3
mov
sahf
test
push
cmp
sbb
push
push
lahf
mov
test
xchg
dec
stc
dec
stos
decl
xor
gs
push
jge
xchg
fisubl
fildll
xchg
jge
dec
jmp
fdivrl
in
xchg
dec
or
mov
xlat
xchg
jno
test
or
add
push
je
insl
stos
inc
je
stos
mov
and
lcall
inc
jae,pt
or
xlat
inc
add
dec
push
sbb
les
dec
lea
mov
xchg
jb
mov
clc
ret
scas
xchg
cmp
add
pushf
add
subps
mov
jle
or
push
mov
cmp
sub
divb
jg
or
data16
in
jbe
insb
push
test
inc
jns
outsl
movl
ror
sub
adc
push
bound
pushf
cld
mov
pushf
adc
cltd
adc
fisttps
in
xchg
mov
outsb
andb
adc
lods
fwait
jnp
add
fisubrl
lret
adc
test
loop
inc
xchg
stos
std
pop
push
daa
stos
mov
ljmp
mov
lock
out
xrelease
mov
repnz
inc
daa
rcll
mov
shr
out
mov
call
imul
nop
mov
pushl
or
mov
inc
push
cltd
cmp
pop
out
inc
cmp
or
into
into
icebp
cmp
sbb
into
ja
in
jg
push
sbb
lds
or
xchg
add
jnp
xlat
and
je
in
cmp
fildl
clc
push
mov
push
aad
pop
sbbb
mov
ret
jne
dec
xchg
test
aaa
inc
jae
fistps
sar
stc
hlt
movsl
inc
mov
orb
xlat
mov
stos
jmp
xchg
push
adcb
cmp
sub
xchg
out
cli
imul
mov
xchg
aad
adc
mov
lods
aaa
adcb
loop
je
scas
stos
xchg
sub
dec
ficomps
mov
lret
and
push
loope
je
mov
test
movsb
ret
mov
int
xor
xchg
loopne
pop
iret
push
add
xor
aam
addr16
adc
mov
jge
cmp
xchg
mov
sbb
fimuls
jns
or
scas
aad
sub
mov
popa
in
aas
scas
mov
loopne
imul
jecxz
pop
ret
lahf
sar
mov
cmp
pop
jmp
sub
cmp
mov
pop
jmp
mov
clc
lea
int3
mov
cmp
or
mov
nop
movsl
ja
pop
mov
cld
stc
daa
mov
shll
nop
jno
mov
sbb
pop
divl
les
inc
pop
mov
sbb
push
rcl
jmp
or
sub
insb
stos
mov
insl
scas
jae
jecxz
adc
mov
or
sar
xchg
mov
mov
add
fadds
mov
adc
add
shrl
push
jl
divl
or
mov
out
stos
in
xor
pop
cmpsl
push
add
jo
arpl
imul
test
lock
insl
xchg
sahf
adc
and
sbbb
ja
pusha
imul
out
and
bswap
and
pop
dec
or
push
repz
sti
jnp
jns
cwtl
push
jo
mov
into
fsts
cmp
divb
mov
cwtl
out
mov
insb
mov
inc
loop
or
lret
mov
or
fstpl
mov
or
jge
push
sbb
pop
pop
hlt
jmp
insl
fwait
sub
jecxz
lea
mov
xor
pop
adc
fdivrs
dec
dec
xchg
aas
pop
loope
xor
or
jno
push
ss
cmp
test
xchg
rclb
jg
mov
push
loope
adc
sub
mov
and
repz
outsl
hlt
mov
sub
mov
loope
ljmp
repz
out
pop
es
in
push
jo
movsl
cmp
mov
cmp
xchg
inc
push
lock
jne
std
jbe
sti
mov
data16
mov
inc
jmp
in
jne
mov
es
adc
test
mov
out
dec
loop
jne
in
loope
stc
inc
pop
inc
flds
add
popf
jno
inc
jle
movsb
mov
push
outsl
dec
lea
shrl
push
xlat
ret
pop
fucomp
xor
les
xor
ds
inc
adc
into
inc
outsl
aam
add
rcr
pop
ret
cmp
inc
jnp
and
pop
push
jae
xchg
sbb
data16
clc
pop
sahf
push
adc
jnp
adc
in
movsl
outsl
push
imul
push
test
mov
xchg
xchg
xchg
pop
addr16
dec
add
cmp
mov
ja
jmp
mov
sarl
pop
sub
mov
cmp
shrb
dec
mov
mov
add
dec
repnz
adc
xorb
jecxz
xchg
mov
inc
fnstsw
movzwl
sub
and
dec
jo
push
aas
test
add
out
lahf
lods
js
cli
lea
xor
dec
inc
es
dec
or
test
pop
test
rorb
pop
fisubrs
cmc
cs
push
xchg
addr16
add
cld
dec
push
test
push
adc
out
sub
out
das
arpl
fld
sub
sub
cmp
aaa
pop
jno
js
jb
movsb
or
scas
cmp
cli
dec
mov
mov
ss
jns
rcll
jp
xchg
lods
fs
mov
vorps
push
pop
pop
in
lods
xchg
pop
sbb
mov
std
jb
cli
dec
dec
pop
aas
into
xor
add
xor
cmpsb
out
aas
xlat
test
cs
out
mov
sbb
cmp
loop
and
sub
xor
dec
or
xor
xor
fadd
mov
mov
push
jecxz
fcoml
and
push
repnz
sbb
call
add
lahf
cmp
pop
movsb
inc
pop
iret
faddl
stos
lock
pop
shlb
sti
mov
mov
adc
aad
inc
cli
add
sbbl
push
xchg
sbb
fldenv
mov
or
xlat
adc
mov
cmp
sbb
cmp
push
mov
jae
xor
andl
imul
sbbb
sbb
mov
mov
cmpsl
pop
jp
xchg
fcomps
sarl
in
mov
xchg
push
pop
imul
dec
lods
adc
in
push
jae
dec
xchg
ret
push
and
push
sub
cmp
and
or
icebp
pop
jb
add
mov
or
mov
scas
pop
iret
out
fsubs
shrl
pushf
push
pop
je
jns
push
inc
dec
adc
and
xor
add
cmp
cld
movsb
pop
lret
outsb
push
push
jmp
xor
adc
push
ds
cmpsl
xchg
cmp
rclb
jbe
nop
push
add
jnp
push
dec
add
cld
or
cmc
adc
sub
ja
inc
cld
nop
outsl
and
fwait
lods
inc
add
ljmp
rorl
cmpsl
cmp
or
add
into
push
xchg
push
adc
push
into
mov
cmp
pushf
xchg
sahf
mov
pop
iret
push
mov
xchg
arpl
in
adc
mov
or
mov
rcrb
adc
repnz
jnp
imul
add
leave
mov
lret
lret
outsl
lret
pushf
adc
xor
outsb
mov
rcll
dec
push
enter
jne
dec
mov
fs
js
lea
cmp
pop
push
push
cmp
ret
mov
in
es
fnstcw
ret
sbb
aam
jne
enter
xlat
shr
lret
imul
add
push
jecxz
jp
jg
xor
aas
call
inc
push
clc
cld
sbb
arpl
xchg
mov
pop
movsb
aam
stc
lock
or
adc
jbe
aad
jb
push
shll
mov
clc
cwtl
adc
lcall
sbb
dec
pop
or
cli
dec
jnp
push
addl
push
aam
push
pop
cmpsb
in
insl
stc
ss
dec
add
push
mov
enter
addr16
je
adcl
xchg
cwtl
data16
pop
xchg
into
cmc
push
stos
mov
in
sbb
dec
out
or
insl
out
das
test
sti
xlat
rol
sbb
std
dec
push
insb
sti
jae
xchg
xchg
jno
popa
sub
js
sbbb
dec
add
sub
jmp
push
jnp
jmp
testl
pop
sbb
cmpsb
dec
cmp
es
xor
pop
inc
lret
setnp
iret
cmp
xor
mov
or
xlat
subb
clc
fnstsw
iret
pop
mov
cmpsl
adc
fbld
cwtl
inc
cmp
xor
mov
inc
cmp
jp
testb
mov
and
out
mov
jg
cwtl
mov
xchg
cmpsl
jo
or
adc
and
outsl
inc
aam
in
mov
flds
inc
jg
add
mov
pop
js
adc
aam
mov
loop
test
jp
in
jae
jecxz
sbb
data16
pushf
scas
in
jg
inc
jbe
les
test
adc
sub
and
pop
pop
arpl
outsb
clts
cmc
movsl
push
enter
cli
sbb
jecxz
repnz
rolb
xor
push
push
inc
adc
inc
fs
sub
loope
jge
xor
add
pushl
movsl
aaa
roll
xorl
sbb
push
xor
cmc
push
sti
pop
push
cmpsl
jle
popa
dec
xchg
shlb
sub
cli
pop
add
outsb
ret
mov
fbld
cmpsb
ds
pop
xchg
nop
jnp
gs
ret
lcall
mov
xor
jne
xchg
dec
and
insb
fdivrs
sub
scas
pop
scas
lret
push
fdivs
lcall
sahf
cltd
mov
imul
inc
cmp
clc
in
and
mov
in
std
loop
nop
inc
jecxz
std
ret
in
repz
jmp
repz
mov
cmp
rcrl
xor
dec
add
sbb
mov
mov
xchg
repnz
call
mov
sbb
stos
in
fistpl
je
adc
dec
mov
or
mov
mov
sahf
xchg
out
mov
mov
test
out
cmc
insb
sub
jb,pn
push
testb
push
sti
ljmp
pusha
and
pusha
int
icebp
lods
jle
add
lods
aad
dec
push
mov
adc
or
aaa
inc
stos
push
cmpsb
push
imul
stos
pop
pop
test
dec
int
pop
in
subl
dec
mov
xchg
out
mov
sti
sbb
sbbl
or
xchg
mov
enter
data16
aad
push
stos
sti
int
sti
jb
sub
or
out
mov
test
ss
rclb
cmpsl
xchg
cltd
aad
adc
loopne
imul
pop
lahf
es
in
mov
push
and
aad
sbb
mov
lcall
push
adc
repnz
mov
mov
or
lds
in
xor
sub
add
popa
sub
jnp
cmp
xchg
xor
mov
loopne
sbb
sub
adc
addl
rolb
lods
lods
lcall
and
or
xlat
test
out
in
sbbb
jno
or
call
mov
in
ds
stos
pop
repz
adc
insb
push
jmp
fidivrs
sub
adc
and
mov
fnsave
sub
cmpsb
cmpsl
push
adc
out
rcll
into
inc
inc
jbe
mov
out
ss
fdivrp
dec
scas
fwait
mov
in
lret
lret
adc
ds
add
shl
xchg
iret
mov
jae
jb
xchg
and
fidivs
je
out
ljmp
nop
mov
jmp
add
inc
dec
movsl
icebp
fmuls
mov
or
fs
mov
sbb
int3
and
sbb
xchg
ret
dec
cmc
xor
pusha
mov
or
fldenv
mov
push
mov
sahf
ja
jb
and
ret
out
je
jmp
mov
gs
xchg
iret
add
jl
pop
lret
insl
es
jo
out
push
popa
pop
xchg
mov
adc
imul
xchg
mov
lahf
jecxz
mov
add
pop
or
and
out
out
in
jne
shrl
je
testb
loopne
out
dec
pop
iret
lds
cmp
cwtl
mov
sbb
pop
jp
pop
xor
cli
and
mov
adc
pop
cld
aaa
mov
inc
cmpsl
pop
scas
push
mov
or
xorb
int
repz
test
ja
rclb
dec
mov
cmp
xchg
lds
cmp
add
adc
insb
insb
jmp
push
sub
rclb
shl
xor
fmulp
cmp
lahf
iret
mov
mov
jno
and
mov
mov
cmpsb
popf
or
push
fadd
pop
pop
adc
mov
sbb
mov
adc
mov
clc
push
ret
add
addr16
sti
add
mov
lods
test
or
aad
mov
rol
jbe
mov
in
mov
leave
sub
adc
mov
push
insb
jae
sub
adc
push
movl
outsl
mov
cld
ss
loope
nop
mov
push
je
cmp
mov
dec
inc
push
scas
sub
adc
jl
xchg
sbb
adc
push
jbe
xchg
pop
inc
dec
xchg
push
sbb
xor
pushf
loopne
fsubl
aas
push
imul
xchg
mov
fs
or
ljmp
mov
pop
mov
nop
inc
in
stos
loopne
pusha
test
enter
xor
mov
or
test
es
sub
ds
enter
cmpsl
cmp
sbb
add
cmp
repnz
xlat
loope
lds
movsl
fdivrs
outsl
andb
das
jl
xlat
rcl
call
int3
pop
es
lret
out
int
xor
in
xchg
clc
and
lea
add
mov
inc
push
pusha
jno
mov
add
dec
addr16
push
enter
pop
lods
cmp
jecxz
pop
add
xchg
sbb
mov
mov
loopne
in
cltd
jl
add
ret
es
outsb
pop
lock
xor
sub
dec
into
call
div
in
jbe
into
mov
mov
inc
pusha
cld
jle
lods
adc
stos
daa
xchg
popf
aaa
cmpsb
mov
cmp
repnz
insb
fdivrl
xchg
int
clc
in
mov
outsb
dec
into
shll
test
cmp
hlt
pop
push
lods
popf
cmp
sbb
sub
mov
cmp
jae
jb
orl
testb
or
sbb
mov
test
mov
stos
aas
add
lret
mov
jle
pop
fisttps
adc
stos
jmp
sub
out
jmp
adc
push
ja
addr16
icebp
rorb
ret
xchg
cmp
add
mov
pop
cmp
cltd
pusha
dec
xchg
fwait
imul
cmpb
xor
popf
insb
cwtl
dec
shll
sahf
push
inc
jge
mov
adc
jmp
lcall
add
xor
mov
cli
jno
scas
inc
pop
leave
push
sbb
fistpl
adc
clc
shlb
inc
jmp
loope
notl
xor
xchg
jmp
add
and
adc
cmpsb
push
or
mov
sub
mov
in
push
aad
ljmp
out
dec
lock
or
xadd
sbb
ja
rcrb
in
add
cmp
and
hlt
jp
dec
mov
add
pop
shl
sbb
lahf
cmp
push
mov
mov
loopne,pn
sti
inc
mov
data16
pop
sub
ds
xchg
mov
pop
shlb
pop
fnstenv
mov
cmp
mov
into
mov
pushf
mov
cmp
inc
or
arpl
jne
addr16
stc
loop
cmc
loope
jecxz
ds
iret
adc
push
xlat
jb
mov
idivl
xor
jns
insb
pusha
pop
loop
jnp
pop
cmp
xor
adc
lds
inc
jge
inc
std
mov
test
imul
fidivrl
sarb
sub
mov
push
inc
fldl
jmp
shl
xor
mulb
out
jns
ficompl
sbb
pop
add
test
push
loope
xchg
lret
lret
mov
fstpt
mov
cli
jne
ficompl
xchg
push
cmp
add
xchg
loope
adc
mov
mov
pop
notl
test
sbb
and
dec
xor
pop
pop
dec
std
enter
sub
mov
xor
in
jl
xchg
push
sub
aam
outsl
addr16
jno
in
inc
inc
xchg
imulb
in
sbb
cs
sti
xor
mov
cmp
adc
data16
mov
xlat
int3
shr
movsb
aaa
stc
fisttps
mov
cmpl
sub
hlt
mov
cmpsl
cs
mov
call
add
insl
lcall
xor
xor
clc
push
push
iret
aam
subb
push
adc
out
xchg
es
sub
mov
add
push
aam
in
popa
jg
stc
cld
and
inc
sub
popa
dec
mov
loopne
test
mov
jne
loope
adc
imul
es
cmp
add
scas
lea
xchg
movsb
sbb
lea
push
xchg
lds
sbb
pop
cmpsb
negl
shl
xchg
rcrl
lods
in
data16
xchg
ret
sbb
das
in
inc
cmp
sbb
cmp
push
loopne
mov
pop
push
add
sbb
xchg
xchg
loope
ja
ja
arpl
scas
into
push
mov
adc
mov
adc
sbb
cld
push
mov
imul
les
imul
imul
and
ret
adc
adc
fcmovu
jecxz
jne
xchg
xchg
cmp
gs
cmpb
mov
mov
pop
aaa
dec
or
jbe
jmp
push
push
stc
mov
inc
or
imul
shll
bound
sbbb
leave
ret
test
addr16
shlb
mov
add
add
and
push
sahf
xlat
push
adc
cmp
repz
jne
hlt
jg
xchg
mov
idiv
call
dec
leave
mov
fisttps
pop
mov
push
lcall
imul
inc
aas
mov
ja
jecxz
inc
jecxz
xlat
aam
adc
imul
idivl
xchg
mov
fcmovu
addl
cli
mov
psrad
subb
inc
es
or
mov
push
pop
dec
dec
aam
lea
dec
mov
push
and
pushf
shr
pushf
out
sub
pop
pusha
out
sub
outsb
or
mov
mov
adc
xor
pop
imul
inc
in
addr16
test
pop
roll
inc
lea
insl
cmp
pop
jl
xlat
push
dec
and
xchg
stos
ret
cs
out
inc
jle
movsl
pop
incl
sbb
mov
push
ror
mov
out
cmp
xchg
pop
pop
outsl
fucomip
jb
mov
mov
xchg
decl
mov
lock
test
sbb
sbb
dec
roll
repnz
mov
dec
push
data16
mov
jo
and
imul
out
out
outsl
scas
out
sub
fistl
pop
jb
int
jp
std
loopne
xor
mulb
daa
shlb
in
stc
stos
bound
loop
and
mov
mov
xrelease
ljmp
fsub
push
jbe
cmp
adc
scas
mull
mov
int
add
es
cmpsb
out
iret
lcall
je
fwait
cwtl
inc
mov
sub
jl
cwtl
mov
mov
outsb
or
xchg
mov
mov
mov
mov
lret
push
dec
call
xchg
or
add
xchg
push
adc
imul
mov
cld
sarb
or
stc
xchg
cmc
add
jbe
cmp
sub
mov
stos
or
mov
mov
nop
push
mov
jnp
xchg
mov
mov
es
das
push
ljmp
xorb
out
push
sarl
lods
cmpsb
mov
mov
fcoms
pop
ret
ret
stc
lcall
jmp
pop
orb
stos
movl
ret
push
adc
rorl
or
sahf
jbe
iret
sbb
imul
push
subps
cmp
cwtl
pop
cmp
sub
adcl
cmp
lret
adcl
cmp
cmp
push
iret
sbb
inc
addr16
xchg
fcoml
cmp
test
xor
push
ret
scas
addb
pop
sbbb
and
mov
or
fldt
rorl
xchg
pop
sbb
loope
outsb
xor
or
mov
pop
adc
jnp
pop
mov
mov
mov
lret
mov
ret
in
cmp
mov
ror
or
cmp
fidivl
dec
or
and
lods
cmc
mov
call
mov
cmp
bswap
cli
inc
cltd
lock
arpl
in
jle
clc
jo
adc
pop
scas
ja
cmp
call
mov
insl
add
imull
cmpsb
jno
jne
pop
or
and
incl
sbbb
sub
xor
mov
and
jecxz
mov
mov
mov
xor
add
inc
push
es
add
mov
mov
mov
std
xor
jle
adc
int3
jne
leave
add
sbb
push
mov
dec
jmp
dec
repz
xchg
pop
repnz
out
add
xchg
dec
jge
jmp
fcomi
push
ss
jp
adc
and
pop
mov
sub
cwtl
jae
pop
bound
push
sbb
push
mov
sti
xacquire
sahf
mov
cs
add
add
outsl
and
pop
rcrb
loope
and
repz
push
in
mov
scas
mov
cmp
popf
dec
aam
push
adc
ljmp
les
daa
mov
and
jns
aas
js
or
sub
xorl
jl
mov
insb
xchg
sub
divb
stos
push
dec
add
adc
sub
inc
mov
jb
push
cmpsl
je
out
jle
jmp
cltd
into
sti
sahf
test
xchg
xor
or
mov
pop
adc
daa
sub
fucom
jnp
or
lret
lods
lock
jbe
daa
pop
jnp
insb
inc
inc
sbbb
js
xor
stos
push
test
xlat
and
push
pop
push
stos
xor
outsb
or
fwait
xchg
pushf
cmp
xchg
lock
in
std
sbb
jbe
sub
and
xor
into
adcb
scas
fimuls
push
push
imul
mov
mov
lods
mov
mov
mov
mov
push
ds
popa
push
mov
data16
xchg
nop
dec
lock
incb
ret
jecxz
cmc
popf
cwtl
loopne
mov
jnp
aaa
or
mov
imul
lret
std
mov
fldt
movsb
xor
mov
mov
addr16
inc
mov
leave
inc
bound
movsb
xlat
xchg
cli
inc
cmp
lock
testb
aam
jne
push
mov
inc
push
addr16
mov
inc
fadds
movsb
neg
mov
mov
sarb
subl
daa
jge
adc
pop
xor
lahf
js
add
cmpsb
rcrl
pop
nop
dec
negl
into
push
add
gs
arpl
jbe
out
ljmp
jg
ret
and
daa
andl
test
in
jbe
outsb
push
push
repz
mov
dec
into
scas
xor
or
call
push
dec
icebp
push
sub
sbb
mov
nop
gs
dec
stos
mov
xchg
pop
add
enter
fiadds
shrl
test
cmpsb
insb
mov
cmp
adc
cmp
push
cs
xlat
pop
pop
mov
enter
cmp
mov
push
aaa
pop
stos
shll
das
cmpsb
or
hlt
addr16
mov
sub
and
inc
mov
fnstsw
mov
cmp
mov
sti
mov
sub
and
cmp
repnz
adc
jg
popf
dec
lcall
inc
push
pop
movsb
popf
mov
test
push
xchg
mov
dec
or
pop
lea
inc
popa
pop
push
adc
mov
scas
mov
xchg
hlt
fidivl
fsubp
lret
leave
mov
jns
int
jns
mov
rcrb
aam
leave
scas
add
jae
jecxz
adc
mov
mov
jbe
mov
clc
adc
jmp
xlat
inc
mov
pop
inc
decl
into
inc
mov
dec
icebp
xor
out
sub
or
les
std
insl
daa
insl
mov
lahf
lea
pop
xor
dec
jnp
stos
lods
inc
cmp
std
aad
dec
ret
xchg
fistpl
or
out
push
les
lahf
mov
pusha
insb
movsl
add
cmp
and
fcmovnu
in
shll
ljmpw
adc
dec
push
or
out
adc
xchg
out
mov
and
cwtl
scas
or
dec
push
push
cmpsb
adcb
add
cmp
popa
mov
mov
push
fildll
fwait
mov
inc
sbb
push
lcall
movsl
enter
ljmp
das
dec
adc
aas
jno
cwtl
imulb
fistps
sub
in
sub
aas
xor
dec
dec
das
les
mov
stos
out
lods
add
cmc
sbb
add
mov
sub
xchg
mov
sbb
roll
dec
jno
mov
scas
mov
and
sub
out
and
subl
int3
jb
cwtl
popa
pop
shrb
dec
out
sub
sub
nop
cwtl
popf
ljmp
inc
or
dec
add
mov
ds
call
cli
les
or
mov
rcrb
fldenv
testb
fsubrs
sahf
cmp
movsl
jp
cltd
jge
lret
add
jnp
sbb
mov
mov
jp
pop
push
cmp
cmc
dec
jns
lahf
inc
push
add
pop
xchg
fstpl
or
imul
pushf
imul
jo
shll
add
stos
pop
pop
and
xorl
adc
add
push
mov
aam
cmp
sar
inc
mov
cmp
in
test
inc
push
arpl
jo
pop
push
in
mov
gs
mov
cld
aas
push
cmp
mov
push
pushf
scas
cmp
inc
jmp
ljmp
arpl
inc
cmc
cld
and
xchg
pop
decl
and
dec
pop
cmp
iret
out
push
fists
xchg
fwait
pop
cs
sahf
inc
xchg
pop
mov
cmp
js
pop
jae
data16
iret
js
jno
sti
ficoms
jbe
push
loopne
cmp
push
imul
mov
cs
gs
outsb
push
push
pop
test
cmp
mov
in
jmp
xchg
mov
add
ret
icebp
shr
insb
or
and
int3
unpckhps
fldcw
ret
je
outsb
mov
mov
loopne
mov
and
add
add
mov
xchg
lret
mov
mov
icebp
sub
mov
iret
dec
addb
inc
jge
shr
repnz
testl
js
inc
push
inc
pop
jge
dec
scas
adc
xor
pop
cmp
test
push
dec
inc
out
fcom
and
dec
cltd
popf
imul
xchg
fidivl
div
sbb
inc
dec
or
pop
sub
fildl
jmp
lcall
push
fucomi
sbb
sub
jecxz
pop
ret
mov
ja
stos
dec
in
fmuls
push
stos
add
cmc
loopne
xor
stos
in
pusha
cmp
ret
jns
sub
mov
add
mov
repnz
jne
loopne
cmp
adc
in
add
out
test
ret
jge
push
jmp
add
dec
cltd
adc
pop
pop
mov
lahf
test
pop
lret
je
sub
add
push
xchg
xor
and
ret
adc
inc
imul
xor
cli
jmp
or
xchg
xlat
inc
add
lock
je
fmul
add
dec
fsub
jmp
jae
lods
jo
fs
push
in
cmp
shrb
jnp
std
sub
xchg
cmpsb
outsb
pop
jae
or
mov
aam
push
sbb
stos
pop
scas
hlt
sub
int3
sbb
mov
icebp
dec
inc
cmpsl
inc
cmp
out
and
xchg
repnz
inc
ds
adc
out
xor
pusha
dec
shlb
sar
pop
std
mov
fcoml
or
mov
sub
iret
push
out
jle
aad
shrb
sti
dec
pcmpgtw
out
lret
xchg
rolw
aas
sub
les
cltd
jg
ljmp
mov
and
ss
test
in
push
loope
or
inc
pop
jnp
sub
fmuls
xchg
repnz
repnz
repz
data16
xchg
insb
push
lret
xor
mov
les
aad
es
and
mov
cltd
aaa
jnp
data16
arpl
js
or
leave
xchg
les
ja
bound
mov
ljmp
lret
push
dec
sahf
sahf
pushf
push
pop
icebp
fiaddl
cmpsb
mov
xchg
aam
push
ja
addr16
stos
dec
and
pop
fs
push
cmpsl
cmc
ljmp
mov
dec
push
xchg
jns
xchg
dec
jg
mov
adc
dec
aam
pushf
mov
je
or
aas
push
jp
pop
aaa
xor
vmovaps
lahf
xor
stos
sub
dec
xlat
ja
fwait
mov
dec
push
movsb
push
dec
pop
imull
jnp
fs
subl
enter
xchg
aas
ss
push
mov
pusha
push
pop
cltd
lret
testl
mov
js
add
test
mov
sub
ljmp
sbb
mov
and
pop
subb
and
out
lcall
inc
xchg
dec
outsl
out
mov
ret
ljmp
int3
nop
sbb
or
addr16
fwait
mov
inc
push
push
stc
mov
mov
adc
add
push
stos
dec
and
add
or
jp
mov
adc
imull
clc
dec
cmpsb
je
pop
lahf
and
mov
sbb
push
ret
sahf
mov
lods
sti
les
sbb
mov
dec
testl
cld
je
xor
or
mov
jmp
inc
imul
sbb
sbb
and
pop
dec
dec
pop
jnp
dec
mov
lock
movsb
in
shl
cwtl
js
pop
xchg
out
mov
mov
cmp
dec
sbb
jnp
rclb
lods
inc
inc
xchg
inc
addb
lahf
test
pop
jg
call
and
aas
add
pop
loope
aam
mov
cltd
pop
mov
push
leave
pop
add
clc
ds
ret
rorb
push
out
pop
xor
mull
out
cs
lcall
sub
jne
sbb
mov
jae
pop
cmp
std
and
ret
lret
inc
dec
out
dec
rol
test
or
cmp
xlat
mov
shl
push
xchg
push
mov
xor
pushf
fsubrp
loop
shrl
je
sarl
pop
outsl
mov
jecxz
pop
imul
pop
push
adc
in
pop
decb
test
jae
out
inc
outsl
adc
cmpsb
jae
int
stc
jmpw
add
cltd
mov
pop
pop
push
enter
sub
dec
jbe
xchg
notb
int
adc
adc
nop
push
mov
icebp
outsb
pop
mov
cmp
mov
pop
pop
hlt
pop
ret
lea
in
rclb
xor
test
jno
stos
push
push
jecxz
dec
out
mov
loope
outsl
push
shrl
mov
pusha
push
pushf
pop
fs
adc
add
mov
addr16
aad
cmpsb
cwtl
int3
test
sbb
push
sub
out
jg
jno
xchg
lds
dec
std
test
inc
jmp
movsl
lds
out
out
sub
jl
stos
xor
xchg
inc
in
inc
xchg
je
dec
push
loope
mov
leave
xor
or
lret
pop
sub
divb
mov
aam
gs
imul
mov
loope
out
hlt
sbb
pop
and
decl
inc
test
or
ror
mov
cmpsl
jae
mov
push
adc
cli
mov
test
stc
jns
mov
xor
mov
mov
push
clc
adc
shlb
mov
push
push
adc
hlt
jge
push
jle
mov
repnz
sub
push
pop
dec
rorl
rcrb
ja
sub
push
es
pop
xchg
pop
jno
call
mov
enter
and
nop
outsl
addr16
jne
loop
outsb
xchg
jb
lret
jae
mov
xorl
loop
insl
jns
sar
and
dec
xchg
imul
outsb
add
es
fwait
repnz
divb
or
jmp
sbb
mov
xchg
out
mov
sbb
jg
push
xchg
jge
jno
scas
outsl
dec
addr16
mov
xchg
aas
push
movsl
scas
add
pop
mov
xor
and
xor
sub
cmp
mov
testl
inc
iret
add
push
or
mov
addr16
mov
mov
aaa
sub
rorb
xchg
add
subb
and
shlb
icebp
rorb
adc
add
int3
cmp
jb
imul
aas
pop
xor
outsb
and
cmp
sub
negl
add
loopne
outsl
mov
add
daa
aas
xor
lock
mov
dec
aaa
push
int3
mov
imul
mov
enter
lods
fwait
mov
add
daa
dec
pop
adc
fsubl
or
nop
mov
int3
xchg
mov
xorl
dec
sahf
mov
test
mov
fmull
add
mull
lahf
adc
push
stc
xchg
jle
xchg
popf
in
lret
ds
lods
and
ss
std
xor
xor
scas
sub
lea
xchg
ss
sub
push
aaa
sub
lret
push
or
pop
cmp
imul
mov
in
outsl
sbb
push
mov
mov
aas
jl
frstor
jl
sti
data16
rcrl
andl
and
into
das
ds
bound
xchg
pop
test
jb
outsb
les
rclb
xchg
jae
sub
xlat
test
pop
mov
dec
cmc
inc
add
test
in
stos
mov
or
mov
adc
inc
cli
rorl
mov
movsb
inc
popf
mov
or
movsl
cli
and
rclb
pop
jle
cwtl
ja
fmull
loopne
cld
mov
lds
loope
mov
fwait
mov
hlt
xchg
add
jns
rorb
sbbl
pushf
push
ljmp
push
in
loop
inc
imul
imulb
fwait
add
inc
outsl
je
imul
fwait
cmp
xor
mov
aas
pop
test
cmp
xchg
fimuls
dec
iret
or
push
xor
adc
nop
out
stc
dec
mov
mov
mov
mov
mov
ljmp
test
jbe
mov
scas
bound
movsl
bnd
mov
rorl
lods
mov
pop
mov
mov
data16
negl
pop
lcall
add
arpl
mov
gs
inc
lea
daa
push
das
pusha
fucomi
xchg
mov
add
or
repnz
idivl
imul
xor
add
pop
pop
adcb
lcall
xchg
push
out
jecxz
bound
lret
or
repz
push
cmc
rcrb
adc
insl
stos
cmc
and
push
loopne
push
add
mov
sub
mov
test
dec
int
or
or
mov
mov
dec
into
mov
in
test
xor
scas
scas
jmp
xor
imul
js
jmp
das
cli
in
jne
std
jne
scas
out
ret
and
jp
push
sbb
mov
ret
lcall
imul
sub
add
mov
call
lea
test
mov
scas
dec
inc
in
adc
or
mov
shlb
xor
popa
stos
rcr
add
cltd
sub
jo
pop
sbb
adc
mov
mov
xchg
push
rcrb
adc
punpckhdq
adc
mov
push
sbb
xchg
arpl
add
cmp
pop
rcrb
sub
mov
xlat
imul
sahf
and
sti
mov
movsl
pushf
and
aam
cmp
sub
mov
in
fwait
icebp
or
leave
fsubrl
mov
lret
pop
pop
inc
or
and
inc
or
nop
or
pop
inc
mov
insl
or
shrb
gs
ljmp
and
mov
ljmp
fdivs
inc
dec
popf
jg
dec
out
clc
hlt
rcll
lods
xor
rep
int
data16
into
in
loop
out
dec
xchg
movsb
outsb
cmp
imul
or
cmp
mov
xor
add
sbb
push
add
leave
push
xlat
cmp
adc
pop
adc
jne
xlat
adc
insl
xor
test
imul
xchg
mov
xchg
test
push
clc
sahf
out
aas
les
jnp
pop
adc
popf
js
xchg
ss
mov
push
scas
pop
cmp
cltd
sti
adc
fadds
xchg
or
test
lret
jb
scas
add
fadds
mov
fiaddl
jecxz
jo
sbb
xlat
adc
gs
inc
dec
pushf
stos
cmpb
jmp
mov
addl
aas
scas
add
jmp
lea
cltd
out
ja
pop
lods
negb
cwtl
enter
jecxz
int3
cmp
mov
call
push
cmp
and
add
xor
lcall
iret
and
cmp
fistl
cmpsl
or
jno
repnz
adc
jae
icebp
fsubs
sbb
sbb
cltd
outsl
adc
iret
push
idivb
in
scas
xchg
negb
jo
dec
dec
int
pop
sub
fbld
add
cmp
or
lock
mov
xor
stos
scas
enter
movsb
cmpl
xchg
cmp
movl
std
ljmp
cmpsb
shlb
sub
lcall
aas
out
mov
add
and
int
jae
repnz
mov
xor
cmp
lahf
jbe
inc
ret
aaa
mov
mov
mov
loopne
ss
adc
mov
shrb
loopne
loopne
xchg
hlt
fincstp
arpl
mov
inc
int
in
dec
shlb
outsb
jle
dec
rcrb
jne
nop
into
xchg
fimuls
xor
inc
mov
std
frstor
fisubrs
mov
xchg
xchg
js
dec
pop
fsubrl
insl
rcrl
addb
mov
lods
addl
push
or
popf
sbb
mov
xlat
rolb
dec
pop
sti
cli
call
aaa
jns
and
daa
pop
push
movntq
out
xor
jb
aad
inc
scas
pop
fwait
cmp
mov
stos
mov
mov
repnz
add
and
dec
mov
or
cld
mov
fwait
dec
test
pop
dec
xlat
push
cltd
sbb
pop
loope
xchg
jecxz
pop
pop
or
or
push
sub
mov
add
test
out
sub
mov
outsb
arpl
in
jb
fstpl
std
and
ds
out
insb
push
dec
pop
or
xor
push
mov
mov
cmc
pop
cmp
fwait
orb
stos
adcl
ret
inc
mov
movsl
mov
dec
out
sbb
incl
inc
repz
xchg
in
push
outsb
dec
or
loope
lods
push
les
sub
stos
xchg
pop
sbb
pop
rolb
xor
cmp
addr16
je
cs
lock
pop
cmp
stc
dec
imul
push
cli
mov
adc
loopne
cs
sbb
or
stc
or
fstpt
pop
sbb
ret
sti
ficompl
arpl
push
lds
lret
aaa
cwtl
mov
and
push
sbb
jp
rorb
sarl
popa
mov
add
xchg
hlt
aad
sbb
pushf
mov
add
mov
xchg
sbbl
repz
sub
jo
insl
mov
dec
ljmp
push
out
xchg
jmp
cmc
imul
xor
fiadds
jo
punpcklwd
xchg
xor
add
or
xor
xor
mov
xchg
xchg
mov
fistpl
out
mov
lret
mov
mov
and
mov
mov
out
pop
in
and
mov
sbb
dec
negb
stos
in
je
cmpsl
pop
addr16
add
mov
jae
jl
popw
shr
cmpsb
dec
out
jbe
repnz
std
lret
in
add
insl
lcall
mov
mov
fidivl
pop
scas
cmp
lret
jb
stos
in
and
test
push
jbe
inc
jne
out
cltd
das
scas
pop
mov
adc
pop
mov
in
aad
push
pop
jbe
out
bound
aad
sub
xchg
lret
or
scas
movsl
dec
sbb
hlt
and
xchg
ss
mov
cs
out
jbe
jb
inc
add
jmp
inc
ljmp
jecxz
iret
pop
inc
out
jae
insb
cmc
sub
sbb
test
rorb
jle
mov
lods
xchg
xor
xor
mov
ja
sarl
data16
mov
and
mov
xor
subl
cmpsb
push
and
call
jge
or
sbb
dec
add
gs
and
stos
fucomip
pop
clc
mov
outsl
scas
jae
pop
inc
stos
adcl
mov
xchg
add
outsl
ss
pop
sub
push
pop
clc
repz
dec
sbb
insl
xor
enter
sahf
xchg
rcrl
popf
mov
mov
in
jg
pop
flds
mov
sbb
sahf
lods
xchg
stos
lock
lahf
mov
adc
shll
pop
pop
jle
jp
cmc
xchg
push
push
popf
push
jmp
dec
incl
imul
mov
mov
cli
jle
popf
aaa
cmpsl
xchg
movsl
push
in
lds
push
lea
mov
jae
addr16
daa
push
and
xchg
scas
addl
jmp
enter
dec
inc
inc
ljmp
jo
inc
sbb
movsb
test
pushf
pop
ret
clc
lea
inc
sub
xor
push
lret
sti
mov
repnz
push
stos
inc
fldl
mov
cli
scas
pop
push
icebp
out
jbe
int
sbb
ds
sub
pop
pop
xchg
inc
into
aas
sub
adc
fcoms
mov
shrl
je
in
lea
jl
jne
adc
data16
push
inc
je,pn
push
lea
add
mov
add
cld
mov
iretw
icebp
or
mov
sub
and
imul
push
lea
jb
xchg
lea
dec
gs
jae
add
fwait
icebp
movsl
cmpsb
xlat
mov
data16
enter
add
xchg
xor
roll
jae
repnz
xor
mov
scas
test
jmp
cmpsb
and
sbb
shl
adc
cli
je
cmp
xor
loop
in
mov
inc
xchg
or
mov
sti
mov
jnp
lcall
addb
insb
push
in
mov
sub
sub
nop
sbb
dec
or
or
sbb
cltd
in
pop
data16
adc
repz
idivb
int
rolb
call
xor
sbb
fnstcw
mov
mov
xor
sahf
shlb
fwait
dec
lcall
and
push
inc
push
lcall
mov
cmp
pop
in
enter
in
pop
lcall
pop
ljmp
and
pop
or
jo
dec
and
sub
lahf
mulb
data16
lods
cli
ljmp
inc
lock
or
rcll
or
and
jg
xor
repnz
lcall
arpl
xchg
loopne
push
shrb
imul
jno
mov
adc
test
pmaxsw
movsb
enter
je
lds
dec
dec
clc
sti
or
in
mov
mov
lret
jns
fwait
jo
ljmp
iret
call
aam
lods
enter
lahf
lret
hlt
out
mov
movsb
adc
pop
stos
test
stc
mov
ja
icebp
call
movsb
mov
sbbl
mov
sarb
pop
adcl
rcrb
adc
divl
pop
imul
movl
jbe
mov
cmp
cmpsb
adc
and
icebp
aad
cmpsl
jmp
mov
in
ret
cwtl
sub
pushf
ds
adc
inc
mov
out
pushf
stos
xorl
mov
and
jne
std
mov
stos
sub
adcb
pop
push
xor
out
sbb
les
std
cmp
mov
sub
push
dec
mov
cmpsl
ljmp
push
aad
in
pop
out
leave
xchg
jmp
cmpb
insb
ds
rcr
scas
sub
data16
xchg
imul
fdiv
xor
add
add
lahf
jge
fsubr
cli
aas
add
pop
pushf
xchg
pop
std
pop
cmp
fisttps
xchg
fildll
adc
leave
pushf
rol
enter
xchg
sub
loop
fldl
dec
sub
in
sub
bound
fbld
adc
mov
test
add
jmp
repnz
incl
mov
fistpl
loopne
mov
jbe
mov
sub
cmp
adc
dec
mov
inc
mov
int3
sbb
fmul
pushf
adc
xchg
sbb
mov
fdiv
call
adc
or
sub
or
pop
pop
js
ja
imul
sbb
movsl
out
mov
and
pushf
insb
shrb
shl
sbb
sbb
add
fldt
and
push
pop
sbb
xor
fsts
cld
push
repnz
fsin
dec
ror
cmp
sub
out
fiadds
mul
inc
mov
jmp
mov
dec
lea
push
lock
in
jg
rcll
cmp
mov
orl
xor
jbe
shrb
sbbl
loop
orb
jmp
mov
cmp
mov
pop
xchg
inc
xchg
dec
inc
scas
sub
clc
jae
popa
jle
leave
xchg
testl
dec
inc
pop
add
or
stos
xchg
cwtl
push
ljmp
mov
dec
popa
add
fld1
xchg
xchg
fidivl
push
shlb
shrl
std
jg
mov
aas
add
nop
cli
cmp
fidivl
xlat
adc
xor
or
and
fwait
fwait
stc
ljmp
sti
pop
inc
call
sahf
pop
outsl
aam
negl
cmpsl
xchg
xlat
mov
and
jb
xchg
xor
xlat
iret
mov
ret
repnz
mov
loopne
cmp
xchg
or
cmp
out
icebp
movsb
or
lock
xchg
xlat
shl
jecxz
cmp
bound
shrl
adc
inc
cmp
loopne
xchg
inc
mov
mov
arpl
lds
mov
mov
aaa
sub
inc
out
push
insl
lahf
lret
sub
cmp
or
xchg
xor
mov
std
test
sbb
cwtl
mov
loopne
dec
sahf
push
adc
or
mov
je
cmp
lahf
xchg
das
add
lods
push
jecxz
les
mov
mov
testl
push
jbe
test
repnz
int3
repnz
imul
insb
pop
lds
stos
pushf
mov
sub
imul
sti
call
jge
rcrb
add
or
push
dec
jno
add
out
sbb
stc
cmp
inc
fbld
daa
roll
xchg
int
lods
xor
mov
inc
jo
xor
and
and
div
xchg
mov
shll
mov
dec
cli
cmp
ret
xor
adc
int3
push
jg
pop
in
add
mov
push
push
pop
mov
loopne
dec
dec
sarb
popf
aaa
daa
mov
mov
lock
ret
push
sub
nop
enter
loopne
or
rcrb
xchg
ret
sbb
fisttpl
add
mov
dec
out
cmp
test
outsl
sar
aaa
and
adc
cmp
add
in
icebp
add
lods
in
xchg
dec
and
and
pop
add
lods
inc
mov
in
cmpsl
ret
shrb
test
mov
aam
fisttpll
scas
negl
popf
mov
lret
aaa
mov
mov
jle
push
dec
inc
sbb
mov
mov
adc
dec
xlat
fbstp
add
sub
std
fists
add
outsb
push
adc
adc
dec
mov
and
dec
outsb
jp
mov
inc
cmp
test
lock
sbbl
mov
movsb
cmp
pop
scas
jb
cmpsb
inc
insb
int3
sti
dec
mov
adc
push
and
pop
jnp
pop
imul
rcr
xchg
adc
adc
xchg
mov
add
push
xstore-rng
cmpsl
xchg
sbb
sub
xchg
and
jp
ljmp
mov
scas
mov
pop
das
pop
sbb
jmp
enter
or
sbb
fdivs
fldt
jg
xlat
adc
sti
jl
decb
mov
testl
and
out
sub
lahf
shrb
and
jecxz
dec
pop
mov
enter
loope
cmpsb
iret
mov
adc
mov
push
cmpsb
mov
daa
or
xor
dec
xor
cs
mov
pusha
mov
int
mov
pusha
ss
mov
loopne
push
fisubrl
xchg
jl
ret
cltd
add
js
mov
jo
and
mov
test
fwait
mov
pop
sub
leave
or
xor
xchg
push
adc
sbb
push
daa
testb
test
pop
popa
cmp
or
cmp
mov
jb
and
or
push
xchg
cmp
mov
rclb
and
daa
mov
push
push
xchg
insb
jmp
aam
mov
into
inc
xor
popa
jnp
pop
jmp
mov
mov
fisttpl
stos
inc
sbb
pop
stc
adc
jle
mov
add
data16
mov
mov
addr16
xor
xor
je
ss
mov
sahf
mov
xor
dec
in
adc
inc
mov
adc
push
dec
adc
pushf
aad
or
xor
shlb
iret
ret
mov
xchg
or
mov
rcrb
loop
push
cmp
mov
enter
les
jne
outsl
leave
pop
jne
sub
push
repz
std
sbb
ret
outsl
cmp
push
pop
in
pop
shl
and
out
outsl
mov
pop
rdtsc
lret
das
mov
push
xchg
jmp
fcmovnu
outsl
mov
mov
pop
pop
sbb
or
mov
or
jae
test
pop
cmp
movsl
scas
movsl
aad
xchg
lgs
fistpl
xchg
sub
movsl
mov
mov
sub
dec
mov
inc
mov
cwtl
aaa
pop
mov
inc
mov
mov
rclb
les
aaa
jecxz
out
arpl
sti
cmp
adc
das
aaa
aad
mov
shll
les
into
cmp
or
aaa
adc
orb
sub
sub
ds
sub
pop
lock
ljmp
ficoms
mov
test
stos
push
loop
popa
enter
xchg
in
or
leave
repz
fld
imull
add
sbb
xchg
je
std
jns
je
sbbl
jno
lock
dec
sub
adc
es
std
mov
in
jge
fisttpl
mov
lea
test
aas
sub
mov
xchg
lods
es
bound
and
fmull
nopl
xchg
xor
into
xor
rcr
mov
push
xor
icebp
dec
decb
stc
aaa
pop
out
cwtl
or
or
sarl
pushf
nop
test
dec
addr16
loop
sti
clc
adc
mov
fisubs
dec
pop
sub
imul
jmp
rcll
imul
mov
mov
aas
adc
loope
ss
sbb
cmp
cmp
shll
cmc
test
inc
in
or
push
lea
xor
repnz
ja
cmp
inc
cmp
mov
sub
lods
dec
jle
lcall
xor
or
xchg
adc
cmp
jae
fstpl
lods
iret
xchg
push
mov
out
cmp
or
aad
scas
jns
xor
jge
and
or
pop
iret
fs
adc
fwait
push
inc
dec
lcall
je
popa
mov
mov
xchg
push
dec
xor
mov
ud2
and
push
sub
adcb
sub
mov
or
and
pop
idivl
jnp
or
int3
iret
ret
xchg
and
cmp
rclb
mov
or
cmp
out
sbb
adc
cmpsl
call
arpl
sahf
inc
cmpsb
jle
cmp
and
popa
outsb
mov
sbb
add
mov
pop
adc
ret
outsb
das
test
adc
xchg
push
js
lds
aaa
stc
adc
out
xchg
je
sub
push
cmp
pushf
dec
xchg
mov
pop
in
aad
fs
loopne
cmpsb
ljmp
add
sub
movsb
popf
mov
fwait
inc
sbb
dec
clc
test
mov
ret
xor
adc
xchg
insb
movsb
fs
jnp
sub
lret
mov
or
movsb
ss
orb
mov
call
xchg
push
cmp
sub
xlat
ret
adc
jle
xor
out
inc
xor
pusha
aam
jp
add
cmp
shll
sbb
push
or
ja,pt
leave
test
mov
push
scas
dec
fcompp
aaa
adc
inc
mov
dec
push
outsb
mov
sarl
inc
rorl
sbb
add
cmp
sahf
sub
aam
jno
push
xlat
cmp
push
and
lds
cmp
xor
add
xchg
sbb
cmpsb
pop
ret
mov
int
xchg
ret
or
insl
imul
sahf
jbe
inc
sub
cmp
enter
daa
inc
mov
pop
add
popa
dec
xchg
mov
jb
call
in
call
clc
imul
add
add
cmpl
adc
ss
imul
loopne
add
mov
fisubrs
es
inc
shr
addl
pop
lods
repz
sarb
xchg
push
enter
ss
hlt
inc
das
dec
fstp
mov
mov
lea
mov
xchg
addb
xchg
das
ffree
fcoms
jge
movsl
lods
imul
cmpsb
xchg
adc
cs
pop
cld
push
pop
push
mov
imul
push
lcall
fwait
mov
mov
mov
add
in
sub
iret
or
daa
sbb
push
fiadds
mov
and
in
jle
pop
les
fwait
jbe
lahf
into
and
insl
mov
mov
pop
jno
call
mov
inc
lahf
lods
and
lock
mov
loop
inc
out
lds
cmp
inc
das
sbb
shlb
pop
pop
mov
pop
mov
int
stos
test
decl
fwait
sahf
movsl
int3
inc
out
arpl
movsb
add
push
fmuls
push
mov
insl
cmp
sarl
insl
loop
unpcklps
cmp
xorb
jb
lods
mov
and
aad
mov
dec
cmp
jecxz
xor
scas
lods
cmp
adc
daa
xor
jns
insb
pop
je
movsl
insl
adc
rorl
scas
xchg
mov
out
mov
jmp
xlat
paddsb
cmp
fwait
imul
push
push
cmpsl
gs
push
jle
jg
xor
jno
adc
push
jmp
ljmp
pop
mov
cmpsl
shl
mov
mov
jne
sarl
icebp
insb
or
inc
stos
iret
aad
ss
scas
xor
iret
stos
in
push
rol
jle
les
inc
stc
sbb
test
mov
cs
shlb
cmp
repnz
cli
ficompl
jecxz
iret
jge
push
repz
std
leave
fcomps
xor
outsl
jge
xchg
cmp
fbld
cli
fcoml
add
insb
push
fnstsw
js
jo
add
les
lods
sahf
or
mov
mov
xchg
jg
test
fcompl
ret
and
push
out
pop
popf
mov
inc
mov
lahf
cmc
test
mov
cltd
cld
pop
sbb
jg
sahf
sub
cmp
lret
in
xchg
xchg
sbb
sub
imul
push
lea
fstps
sub
push
int3
das
orl
outsl
out
dec
adc
mov
pop
adc
loopne
mov
out
mov
add
or
push
movsl
ret
jno
mov
rcrl
js
xlat
loop
lods
or
lds
jp
mov
arpl
shlb
jae
adc
fistpl
cmp
into
cmpsl
push
je
jbe
mov
movsl
aas
jo
imul
inc
imul
cmp
icebp
in
jmp
sub
pop
roll
xchg
or
fwait
loop
negl
jbe
daa
aad
call
loopne
jecxz
dec
mov
and
ret
movsb
dec
cmp
cs
lock
jle
push
or
pop
pushl
adc
arpl
ss
mov
jl
pop
scas
into
aaa
xor
xchg
jge
mov
or
cmpsl
repz
call
imul
fistpl
xor
fists
stos
jbe
enter
adc
or
dec
ret
aas
subl
mov
stc
jle
lods
in
xorb
sbb
mov
imulb
icebp
push
leave
push
and
int3
add
add
in
xchg
aas
and
mov
and
in
jo
rclb
les
aam
xor
xlat
ja
or
ja
push
fsubs
push
dec
in
das
adc
mov
add
pcmpgtw
mov
push
cs
sub
dec
jl
cli
mov
xor
in
push
add
sub
sbb
lods
cwtl
add
rcll
push
fidivs
fs
leave
cmc
push
mov
inc
aad
mov
ja
lret
pop
fcmovnbe
xchg
sbbb
in
dec
jns
sbb
lds
mov
or
add
and
sbb
jg
sub
sbb
loope
rolb
jp
dec
sub
push
jo
push
es
xor
shlb
jo
imul
adc
lahf
cltd
and
push
nop
jae
fwait
cmpsb
dec
fistpll
push
push
push
daa
in
cmpsb
popf
fcomip
in
jo
dec
pshufw
insb
rorb
mov
test
mov
arpl
das
std
lret
and
cmp
aam
jl
inc
ljmp
test
aam
xchg
xchg
lahf
inc
data16
adc
aas
pop
repnz
fwait
dec
push
add
fnstcw
adc
pop
mov
push
xor
sti
mov
and
je
adc
repz
ret
pop
pop
inc
pushf
push
stos
outsl
adc
pop
scas
test
mov
push
mov
add
lret
adc
and
arpl
cmp
adc
jge
ficoms
int3
pop
ja
cmp
adc
sbb
fmuls
push
test
jae
jo
mov
mov
js
call
cmp
cmpsl
scas
ljmp
push
and
lret
pop
aad
incb
dec
xor
lds
ret
mov
jno
add
jmp
mov
insb
lds
or
lods
mov
fstl
sub
mov
add
jge
or
lahf
adc
lods
fwait
lret
pop
lcall
push
jmp
jno
jae
lcall
pop
pusha
stc
pushf
xchg
add
push
inc
jns
test
fs
imul
or
add
cmp
jge
push
cmp
xchg
sub
lds
pop
mov
lock
rorb
mov
cmp
rorl
add
imul
inc
xlat
or
movsb
icebp
push
sub
punpckldq
jmp
xor
scas
andb
ret
mov
pop
enter
lret
sub
dec
test
dec
pop
fisttpll
jbe
es
inc
adc
add
jmp
sbb
scas
cltd
rcl
mov
pop
aam
hlt
cmpsl
mov
movsl
inc
dec
iret
sbb
push
stos
mov
dec
stos
bound
je
fdiv
or
in
mov
loop
xchg
ret
cmpsl
adc
lahf
rclb
mov
loope
jne
cmp
test
push
mov
stc
lea
add
mov
fxch
mov
cmp
mov
cmpsl
fsts
add
cltd
shlb
cmp
mov
adc
xchg
arpl
mov
loopne
push
sbb
rcll
mov
fcomp
mov
insb
jecxz
daa
int
jb
sub
cmp
xor
loop
xlat
mov
jle
icebp
xlat
jae
jle
jle
jo
push
lea
xor
adc
popa
fldl
call
ss
adc
outsl
inc
aas
rcrl
jge
push
aad
leave
dec
in
fadds
js
out
divb
pop
mov
dec
jae
fimull
inc
scas
test
sub
pusha
jmp
out
lret
xor
jns
xchg
mov
popf
mov
lahf
mov
je
jle
cld
mov
mov
ror
push
in
xor
ret
mov
push
scas
xor
pop
call
in
or
clc
popf
mov
push
sarl
xlat
push
out
sbb
insb
call
insl
mov
jl
jns
push
test
jp
aaa
inc
icebp
sti
mov
fwait
cmp
add
cmp
or
jb
xsha1
cmpsb
dec
std
cmpsb
mov
les
jae
mov
loopne
dec
std
and
sub
scas
int
and
jmp
cmp
aas
or
jbe
inc
aad
xchg
clc
push
jns
cli
popa
mov
aam
int
fld
pop
push
jmp
xlat
pop
mov
mov
sub
hlt
inc
cmp
and
inc
popf
sub
dec
lcall
js
or
pop
shl
lea
adc
jns
ficompl
add
and
push
call
xchg
adc
test
adc
mov
out
pushw
mov
dec
sbb
insb
mov
insl
dec
sub
cltd
add
xlat
dec
rcrl
negb
mov
lcall
insb
push
mov
and
or
push
rol
add
stos
fildl
xor
push
mov
js
cmp
push
xchg
jo
cmp
xchg
pop
mov
fidivs
mov
fs
orb
scas
dec
test
pop
dec
mov
out
mov
xor
psrad
xor
ljmp
pop
das
jae
test
imul
mov
mov
mov
add
stos
les
fidivl
mov
into
mov
ja
push
cmp
cmp
cmp
stos
lret
and
inc
fistps
push
lret
test
sbb
idivl
mov
stc
ljmp
arpl
push
dec
jnp
add
sub
cmc
popf
test
fs
mov
pop
into
cmpsb
stc
popf
sub
cmp
ja
pop
mov
clc
mov
daa
mov
push
add
dec
shrb
cmp
cmp
repz
push
dec
cmp
mov
stos
inc
movhps
mov
mov
adc
shll
pop
mov
fst
outsl
pop
test
mov
cltd
cmpsl
push
mov
js
aaa
xchg
std
loope
mov
cwtl
dec
xchg
loopne
push
mov
sbb
mov
inc
mov
xchg
sub
xchg
pop
mov
test
mov
addr16
movsb
add
jne
mov
movl
jbe
in
das
mov
lock
xor
jle
inc
sti
jb
push
lods
mov
jbe
and
dec
mov
jp
inc
mov
mov
andl
xchg
out
in
ffree
mov
push
mov
xor
push
popf
push
or
xor
mov
or
sbb
hlt
pusha
sbb
scas
or
icebp
cmp
repz
xchg
mov
jnp
and
xchg
xchg
xchg
ret
lds
lods
enter
filds
add
movsb
lods
test
cmp
push
xchg
hlt
xchg
cltd
lcall
enter
cmpb
sbb
push
mov
les
mov
nop
incb
in
jnp
mov
pop
out
lds
push
xor
mov
nop
shrl
out
lcall
dec
aam
sarl
mov
mov
loop
outsl
push
cmp
nop
push
repz
pop
add
mov
jg
mov
loopne
in
push
or
out
mov
rcll
mov
mov
sbb
sbb
lahf
popa
inc
sub
lcall
std
mov
xchg
mov
add
clc
cmpsl
mov
inc
pop
loop
xor
fwait
iret
test
in
xchg
test
dec
fsubl
in
sub
in
mov
inc
xchg
jb
jle
or
mov
xor
push
mov
xor
mov
repnz
dec
xor
outsl
pusha
loopne
fstpt
or
loopne
ss
xchg
pop
aaa
sarl
jmp
adc
mov
inc
mov
imul
je
gs
ja
sub
cmp
fstpt
push
sarl
xlat
flds
or
out
loope
xchg
cli
or
mov
xchg
xchg
mov
mov
js
push
and
out
xchg
mov
pop
shll
shrb
jne
test
mov
push
add
adc
stos
dec
std
cli
cs
jle
rorl
imul
ret
push
rcll
stos
mov
orb
ret
loope
push
inc
sbb
stc
jecxz
mov
ljmp
xchg
loope
adc
roll
out
or
xchg
jle
jb
int
loopne
lret
mov
mov
iret
xor
adc
or
sbb
inc
cmpl
imul
sbb
insb
out
lret
insl
xlat
sub
test
inc
mov
mov
push
sbb
lcall
cmpsl
add
scas
sub
nop
pushf
gs
insl
push
movsl
popf
xchg
lods
loopne
mov
sub
cltd
test
or
in
enter
loop
fdivl
incl
or
inc
test
ret
movsb
lock
push
adc
fldcw
test
lcall
decb
movsb
jg
insb
popa
mov
loop
jmp
xor
imul
pop
sub
xor
or
pop
insl
or
xor
xorl
sarb
or
jns
repz
xchg
and
and
xchg
mov
icebp
push
cmc
cmp
cmp
shrl
dec
lds
fdivl
shll
addr16
outsl
stc
leave
lcall
adc
push
ljmp
sahf
push
xor
cmpsb
cs
cwtl
add
outsb
sub
push
pop
stc
jge
lock
bnd
pop
in
clc
sbb
sbb
mov
and
dec
mov
pop
pop
jne
adc
sti
jp
repz
lea
lods
mov
xchg
imul
dec
inc
sub
aam
rcl
adc
fs
adc
adc
mov
dec
sbb
divb
popf
outsb
lds
xor
data16
neg
adc
repz
xor
mov
cltd
fbld
dec
sar
arpl
adc
sub
popa
pop
mov
aaa
stos
xchg
push
iret
addr16
lods
adc
jge
std
jbe
dec
fwait
jp
in
pop
dec
xchg
popf
mov
out
adc
mov
sub
ds
cmpsb
ret
sti
inc
stc
mov
ja
dec
sub
icebp
jmp
cmp
movsb
or
in
cmp
mov
lahf
cmp
pop
push
pop
xchg
pop
repz
add
shr
jne
and
insl
inc
sbb
sub
call
ret
sbb
outsb
pop
dec
xchg
inc
mov
mov
imul
divb
jnp
aam
ret
cmp
lock
stos
or
orl
adc
lahf
lods
fcoms
fwait
and
jno
je
push
jae
aas
out
testb
leave
jbe
mov
call
add
jg
inc
call
and
mov
icebp
shr
inc
jecxz
into
daa
xor
inc
jmp
loopne
lock
sub
js
sbb
xor
ljmp
aas
xchg
inc
pop
leave
inc
cwtl
lcall
dec
gs
movsb
dec
lcall
test
loopne
dec
leave
xorb
rorb
inc
push
sbb
mov
hlt
cmpsl
ret
sahf
jnp
inc
testl
dec
push
cmp
loope
cwtl
lcallw
subb
xchg
dec
rcrb
xchg
movb
dec
movsl
cmp
iret
sub
fcoms
jne
sub
xchg
popl
or
stos
pop
orb
mov
aad
mov
jp
popa
inc
pop
icebp
jbe
mov
jo
dec
cs
test
movsb
and
push
idivl
addr16
and
jns
push
and
mov
test
stc
dec
mov
xchg
pop
or
and
mov
rcll
call
jo
call
pop
into
mov
cmp
or
jno
fdiv
jmp
jg
dec
push
mov
out
jmp
cmpsb
lods
xor
inc
mov
or
cs
push
test
leave
sub
inc
ret
xlat
aam
sbb
fcmovbe
and
sbb
jecxz
hlt
enter
aam
es
pop
in
sub
dec
and
popl
pop
mov
nop
xchg
inc
insb
fwait
enter
idivl
and
pop
loope
mov
je
jmp
out
inc
mov
cwtl
rcrb
nop
icebp
lret
imul
jecxz
outsl
inc
push
push
cmp
add
cmc
xorb
das
shll
inc
cmpb
mov
test
mov
xlat
notl
pop
jp
cmp
movsb
fistpl
push
xchg
cmpsl
cmp
mov
sti
bound
and
xchg
mov
xchg
popf
push
mov
push
push
fnstenv
mov
adc
mov
push
addr16
adc
orb
sub
dec
adc
adc
scas
decb
adc
mov
mov
les
ficoml
adc
into
ds
inc
add
fwait
jge
popf
mov
enter
mov
jl
or
test
insb
sti
push
add
and
outsb
dec
jo
sub
leave
sub
dec
shll
mov
sub
cld
ficoms
push
out
cld
lret
pop
jae
pop
xor
call
scas
in
sub
inc
mov
inc
sbb
push
push
addr16
ja
cvttps2pi
pop
adc
ss
push
and
or
enter
insb
add
sbb
daa
ds
adc
or
cld
divb
mov
inc
mov
mov
arpl
movl
cmp
and
popa
adc
dec
pop
popa
fwait
or
adc
push
shl
push
nop
push
xor
add
push
add
aam
sbb
xor
inc
mov
jns
xchg
mov
iret
adcl
mov
sbb
inc
rorb
mov
outsb
dec
std
pop
test
pop
xchg
mov
fdiv
jae
push
mov
ret
jle
into
cmpsb
leave
cmpsb
xlat
adc
push
sbb
inc
mov
lea
daa
push
push
add
movsb
in
add
aas
subb
sbb
jae
stc
test
test
in
jo
sub
pusha
pop
clc
sbb
call
lods
mov
cmp
imul
adc
mov
outsl
xorb
bswap
popa
sbb
lea
scas
jge
ret
fistl
cmp
mov
push
fcmovnu
xchg
and
mov
int
mov
filds
fisttpl
mov
or
fildll
mov
ljmp
xchg
mov
fsubr
sub
sti
push
shlb
mov
push
pushf
mov
add
and
mov
adc
lret
fdivrs
andb
addr16
inc
test
popa
insl
xchg
outsl
in
loop
adcl
int
out
cmp
pop
icebp
xlat
add
xchg
mov
xor
jg
sbb
push
std
add
insl
xchg
add
cmp
fwait
xchg
es
and
shlb
push
adc
hlt
pushl
mov
lahf
mov
and
xchg
out
add
scas
test
mov
loope
rcrb
cmp
or
add
out
daa
jns
stc
in
ret
mov
mov
adc
and
popf
pop
cs
rolb
mov
mov
mov
lods
cmpsl
nop
ljmp
or
push
push
mov
fisubrl
push
in
pop
nop
mov
dec
hlt
adc
aaa
and
rcll
cmpsl
pop
xor
jmp
lods
lods
xor
jns
sub
mov
jmp
cmpsl
inc
orl
ljmp
xchg
mov
xor
xlat
cmpsb
inc
sbb
fldcw
xchg
and
push
dec
iret
or
dec
inc
negl
loopne
shlb
enter
add
and
push
in
xor
addr16
mov
insl
aas
test
add
pop
ljmp
sub
lods
sub
pushf
aaa
ds
sub
xchg
loope
pop
std
pop
aas
adc
daa
pop
cwtl
loope
repz
sbb
mov
xor
xchg
sub
xchg
add
xchg
aas
pop
int
add
mov
dec
dec
jb
pop
sub
test
cli
div
dec
pop
cli
daa
jg
addr16
lret
repnz
insb
or
and
sbb
cltd
xchg
add
cmpsl
rclb
push
pusha
test
call
arpl
movsb
or
test
enter
dec
daa
out
jne
andb
sbb
cmp
or
or
pop
cmpsl
pop
in
addr16
adc
out
leave
out
fistps
jg
loop
dec
in
aad
inc
test
test
adc
cmp
mov
sbb
movsl
iret
sub
inc
add
mov
or
in
mov
jo
rcrl
fs
lret
testl
fisttps
pusha
or
mov
mov
rcrl
aad
xchg
xchg
pop
xlat
jmp
adc
cmp
cmpsl
out
scas
mov
daa
pop
jmp
mov
in
icebp
push
xor
adc
test
sbb
xchg
and
lcall
mov
sarb
sub
test
or
in
dec
adc
jb
enter
lods
repz
cmpsb
sbb
sub
in
adc
fs
sub
in
frstor
sub
lahf
xchg
cld
mov
cmp
mov
adc
jne
push
push
lcall
lds
call
js
xchg
dec
test
or
mov
daa
xchg
sbb
sub
push
and
or
jnp
mov
xlat
or
ror
sub
out
pushf
data16
nop
mov
push
dec
mov
add
push
jbe
sbb
inc
nop
loop
cmp
insb
jo
lock
or
movsb
adcb
or
nop
insl
in
mov
pop
jmp
lcall
sub
subb
rolb
sub
imul
test
sti
scas
jmp
mov
jge
test
inc
xchg
mov
fisttpll
daa
into
cmc
das
pop
and
ss
dec
pop
fidivl
sahf
inc
icebp
dec
cli
mov
subb
lds
and
pop
cmpsb
adc
push
jnp
addr16
out
test
sti
popl
push
mov
orl
out
add
arpl
ja
hlt
out
push
cmpsl
inc
gs
inc
jbe
add
cmc
mov
push
pop
fcomps
add
jecxz
sub
sub
mov
pop
rorl
fidivl
icebp
imul
add
std
aas
or
or
xchg
mov
xchg
dec
insl
xchg
adc
inc
pop
ljmp
lock
or
bound
lods
jae
hlt
popa
in
lcall
mov
lods
xor
xchg
dec
fidivs
mov
inc
jae
mov
add
push
insb
or
mov
push
aas
ss
jae
repnz
psubq
aad
cmpsb
push
ljmp
mov
adc
cltd
push
rcr
js
pop
and
stc
out
fcoml
pmuludq
or
popa
push
lret
or
das
hlt
enter
loope
push
testb
inc
dec
bound
adc
jmp
mov
dec
pop
adc
and
stc
dec
das
lods
xchg
cwtl
cmp
test
cwtl
mov
dec
jl
jns
jns
cmpsb
sub
inc
int3
mov
xor
popa
gs
in
dec
lret
dec
pop
ja
roll
add
jge
mov
push
or
xorb
cmp
cmp
or
inc
insb
xchg
dec
movsb
psllw
inc
loopne
cmpsb
movsb
iret
pop
out
testb
cwtl
andb
call
push
std
popa
shl
mov
jl
call
stc
xchg
or
lods
mov
fs
in
mov
xor
xor
sbb
lock
push
cmc
push
loopne
pop
dec
lret
xchg
or
jb
jo
stos
mov
pusha
hlt
adc
add
add
xchg
pop
xchg
sub
xchg
pop
incl
sti
dec
fwait
test
stc
lods
push
daa
cmp
cltd
popl
jb
mov
mov
ds
mov
xor
xor
sub
popf
xchg
inc
pop
mov
adc
jns
sbb
sub
in
add
scas
and
push
outsb
dec
sub
cmc
dec
push
fisubrs
mov
int3
inc
or
push
cmp
sbb
cmp
push
fs
ret
jg
pop
jmp
push
aas
ret
adc
rclb
imul
push
mov
cmpsb
fiaddl
xchg
or
cs
faddl
pop
mov
cwtl
lock
cli
cmpsl
push
pop
inc
and
push
push
inc
cmc
aad
movsb
hlt
rcrb
or
xlat
inc
mov
hlt
push
mov
fucomp
sub
scas
sbb
int
ds
cmp
inc
pusha
dec
mov
jb
pop
mov
into
pop
xchg
xor
aam
jbe
inc
into
sbbb
jb
jle
pusha
in
mov
jo
pop
daa
dec
fstps
call
mov
ds
jg
and
mov
xchg
mov
loopne
push
mov
in
in
loopne
push
gs
lea
ds
leave
jmp
shld
inc
mov
push
mov
sub
jb
cmpsb
arpl
fwait
jle
push
cmp
pop
mov
ja
mov
loopne
mov
xor
lahf
sub
loopne
rol
and
cmp
xor
add
ret
xor
hlt
lret
andl
cs
mov
mov
cld
pop
xchg
aam
out
int
rcrb
imul
sti
jmp
lds
push
sub
ficoms
mov
add
mov
mov
in
pop
mov
fiaddl
dec
inc
lods
xlat
pop
pushf
push
xchg
cmpl
fs
fcoms
stos
movsb
xchg
mov
inc
lret
sbb
push
lret
test
or
lock
dec
add
dec
loopne
pop
sbb
movsb
add
and
scas
cmc
cld
jae
and
test
faddl
or
ret
xor
pop
fldl
in
jle
leave
add
jae
dec
test
int3
jb
insl
loope
lret
out
sub
dec
dec
mov
test
jb
xchg
cs
cmp
and
sar
sub
sbbb
jo
lds
sbb
outsl
dec
xrelease
inc
dec
xor
xor
push
jno
pop
cmp
jmp
test
dec
and
in
test
mov
in
mov
jg
push
cmp
mov
sahf
sub
adc
cs
inc
and
mov
ss
movsl
push
cmp
xchg
aam
dec
stos
in
jnp
pop
pushl
mov
cmp
mov
rcl
sub
jecxz
xchg
dec
cli
xabort
push
sub
pop
pop
shlb
enter
scas
push
mov
fildl
shlb
jl
jbe
jno
out
mov
imul
fwait
insb
int
cs
adc
js
pushf
mov
lods
outsl
adc
dec
mov
sbb
mov
inc
popf
push
push
lahf
fs
outsl
add
pop
rorb
movsl
jo
ss
bound
jmp
mov
xor
lahf
fnstcw
and
push
je
mov
sbb
and
cwtl
push
incl
xchg
in
test
push
mov
push
jecxz
aad
jl
dec
jne
dec
jb
ljmp
jle
test
mov
pop
xor
ret
cmp
jp
dec
jmp
cmpsl
repnz
sub
xchg
dec
or
push
fwait
and
call
bound
adc
aad
mov
inc
movsl
lret
stos
and
pop
sub
and
das
bound
inc
push
adc
jp
lds
fs
popa
sub
and
mov
cmp
jns
sbb
push
hlt
xlat
pop
cld
jae
cmp
xchg
pop
or
xor
lods
cs
ja
nop
mov
push
ret
fnstsw
loopne
jb
popa
mov
in
xchg
aaa
ds
loop
or
sub
inc
je
shlb
add
movsb
add
pop
xchg
fstps
mov
pop
in
and
mov
jae
pushf
pop
or
shll
add
scas
jmp
add
das
push
loope
mov
pop
mov
lahf
mov
bound
and
int3
notb
clc
push
xor
push
mov
cmp
sbb
pop
xchg
inc
sbb
or
sub
pop
dec
mov
fdivr
or
testb
push
pop
add
in
xlat
lea
lret
pop
test
pop
aas
pop
pop
test
mov
mov
mov
lock
pop
lret
arpl
inc
push
test
xchg
lret
push
adc
inc
cmp
jb
xor
test
pop
ret
out
sbb
shl
sub
sbb
call
add
aaa
mov
xchg
inc
das
dec
addr16
push
inc
xchg
jbe
mov
mov
sar
repz
sbb
pop
fwait
data16
mov
adc
scas
aaa
push
ljmp
mov
gs
sub
or
fnstcw
aaa
mov
sub
out
push
mov
pop
cltd
xchg
sub
lods
repz
ret
xor
pop
sti
add
call
push
jecxz
mov
mov
insl
cmp
inc
mov
cmpsb
fsubrl
cmc
adc
jp
pop
popa
mov
scas
addr16
mov
movl
sbb
cmc
jecxz
insl
aas
test
pop
dec
jbe
popf
dec
dec
add
mov
int
movsl
cltd
or
imul
push
fisubrs
add
loopne
ret
or
test
fwait
jae
fwait
loope
sbb
cmpsb
jmp
jns
mov
cltd
decb
xchg
das
mov
adc
sbb
cmp
mov
jmp
mov
cmp
sub
jbe
dec
clc
cmp
clc
je
sbb
lds
xchg
push
insl
insl
adc
inc
xchg
stos
imul
sbb
rcll
pushf
inc
into
pushf
pop
and
jecxz
popf
mov
push
and
enter
mov
aad
aas
add
lret
adc
add
jo
jnp
fildll
imul
push
adc
imulb
inc
push
repnz
push
outsb
xchg
rol
repz
in
push
jecxz
sbb
mov
mov
add
cmp
push
jg
jno
ja
loope
sbb
add
test
and
pop
cld
mov
jae
cmpsl
push
stc
lret
sub
lods
loop
jge
addr16
pop
int3
adc
loope
pop
js
cltd
cwtl
mov
test
subl
and
mov
cmpsb
cld
add
adc
sub
xchg
clc
aaa
pushf
mov
xor
mov
mov
dec
cld
fwait
jmp
movsl
jmp
aad
xlat
add
je
ljmpw
dec
cmp
cwtl
imul
add
lds
hlt
mov
xchg
pop
push
in
adc
add
or
jne
push
loopne
sub
cmpl
xchg
or
daa
insb
pop
lds
adc
or
inc
nop
movl
cmp
cli
jge
mov
xor
imul
test
pop
out
jne
sbb
pop
sbb
xlat
xchg
jg
ja
pusha
mov
test
cmp
and
xor
and
xchg
mov
xchg
and
add
mov
lcall
lods
adc
jbe
jl
repz
xchg
ret
int
insl
push
aad
lods
pop
into
out
xor
jb
scas
adc
adc
pusha
add
xchg
lds
jns
cmp
jae
pushf
xor
mov
xchg
add
gs
outsl
xor
sbb
push
addl
cli
fs
test
mov
cmp
mov
test
mov
inc
xor
inc
jno
sub
and
call
jnp
dec
cmp
test
mov
ss
fucomp
in
push
jbe
in
dec
movsb
movb
inc
sbb
xchg
ja
insb
out
fdivl
inc
jmp
push
and
cmp
test
add
mov
scas
scas
lods
pop
adc
inc
lock
repz
dec
cwtl
loopne
mov
push
mov
sbb
mov
andb
in
pop
mov
fsubrl
add
addr16
dec
xor
cmp
xchg
push
test
push
cmc
fnstenv
repnz
mov
nop
xchg
sub
stc
mov
pop
mov
iret
inc
dec
or
insb
xor
cmp
mov
push
fcmovnu
test
or
notb
pop
xchg
mov
popf
addr16
sub
cwtl
mov
sti
add
jmp
sbb
xchg
mov
repz
pop
pop
in
cmc
fnstcw
movsb
shrb
cmpsl
adc
stc
int3
cmp
mov
fs
lret
shlb
push
mov
sbb
out
loop
es
inc
testl
pop
and
stc
mov
pop
sti
hlt
dec
sahf
lahf
xor
lock
imul
xor
cli
adc
outsb
cwtl
mov
xor
mov
imul
pop
aam
ds
xchg
into
xor
pop
jecxz
rol
or
lods
xor
sbb
lods
loope
rcrb
cld
mov
push
loopne
xor
inc
arpl
xchg
mov
mov
negb
sbb
in
pop
out
or
sub
mov
mov
pop
xor
push
ljmp
fnsave
pop
loope
jmp
jg
xchg
pop
and
clc
cwtl
dec
fildll
push
xchg
sub
adc
sahf
mov
dec
icebp
dec
loopne
call
cmpsl
xchg
sarl
sbb
daa
scas
push
lret
mov
idivb
sbb
push
fmull
add
or
jecxz
out
lea
mov
inc
mov
jae
push
cmp
mov
fdivrl
jo
repz
es
add
dec
aas
mov
int
sbb
add
add
ja
and
cmp
inc
inc
fiaddl
mov
push
xchg
loope
xchg
les
add
sub
jno
andb
pop
adc
jns
cmp
jbe
pop
fs
sbb
sbb
mov
jbe
or
pop
dec
fisttps
jecxz
push
add
pop
jb
mov
aam
sbb
lds
in
icebp
xchg
lret
push
inc
call
mov
cmpsb
addr16
aaa
and
pop
shl
xorb
das
jp
xor
fisttps
rcll
andb
and
xchg
jle
dec
iret
add
mov
push
mov
mov
sub
xchg
adc
mov
xchg
mov
sub
xchg
jmp
sub
mov
add
mov
or
sbb
jae
sub
xor
push
add
enter
lock
xor
push
xor
pop
xor
arpl
cmc
lret
jl
shlb
cmp
mov
xchg
dec
lret
dec
pop
inc
out
cltd
or
fucomi
jmp
daa
push
fdivl
push
pop
push
add
repz
scas
loopne
xor
cmpsb
sbb
jnp
sbb
ret
lcall
fmuls
push
cmp
xlat
lret
stos
lds
in
xor
lea
leave
das
mov
add
cmp
test
sub
cld
scas
jp
push
rorb
pop
jno
push
jge
pop
jmp
in
fsub
sbb
into
shll
adc
loopne
lahf
push
ret
cld
adc
daa
xchg
or
loop
xchg
in
aad
push
sub
call
mov
jl
insb
ret
cmp
adcb
dec
sbb
sub
push
testb
testl
lret
adc
xor
movsb
xor
adc
cmp
insb
mov
shlb
sti
inc
sub
jo
hlt
out
adc
inc
out
add
xor
push
add
out
shll
mov
pop
mov
mov
cmp
hlt
outsb
leave
xor
mov
jge
sbbb
jae
pop
iret
pop
and
js
sbb
or
lods
fstl
daa
in
scas
orb
mov
add
cmp
mov
mov
xchg
out
sub
xchg
mov
int
mov
jecxz
outsb
push
insl
js
push
test
mov
aaa
popf
js
and
lret
lcall
and
in
sub
addl
cli
shll
mov
push
sbb
xchg
dec
or
fs
cld
adc
data16
inc
xor
movsl
sbb
xor
imul
pop
dec
or
inc
arpl
adc
or
dec
es
mov
jge
in
outsb
add
mov
or
mov
dec
sub
sub
dec
inc
inc
mov
adc
jp
lock
hlt
xor
ja
ds
rorb
lds
pop
test
inc
mov
xchg
xor
xchg
daa
test
cs
push
xor
push
cmp
sub
ja
inc
xchg
add
nop
and
and
or
int
repz
gs
sbb
cmp
out
aaa
push
lcall
scas
push
loope
lea
sub
jmp
nop
loop
loope
jle
jbe
add
dec
mov
rcll
inc
dec
sarl
mulb
arpl
add
scas
mov
imul
cwtl
fisttps
cmp
imul
sbb
lds
cmp
scas
xlat
and
enter
mov
sbb
lcall
jge
pop
add
aaa
inc
sub
xchg
leave
mov
xor
sub
sub
fs
jl
mov
xchg
clc
mov
mov
cmp
mov
jns
dec
cmp
popf
iret
sub
aaa
adc
xor
lret
add
cld
addr16
inc
popa
push
aaa
ret
cmpsb
stos
sub
sahf
int3
fdivs
imul
dec
mov
jne
in
test
fstp
xor
mov
jo
xor
sub
push
fidivrl
inc
cmp
pop
lret
xor
test
jo
xchg
push
push
cmp
add
test
out
sbb
lret
and
imul
mov
imul
ja
aas
add
mov
lret
dec
and
dec
orb
adc
sahf
or
data16
mov
push
fs
fnsetpm(287
lret
test
push
mov
jne
push
xor
jmp
jge
xor
pop
clc
in
ret
out
push
insb
push
and
or
cmp
sub
mov
jecxz
lds
mov
out
and
jmp
cmpsb
enter
pop
and
push
or
mov
repz
bound
dec
dec
repz
repz
sub
mov
stos
sti
stc
std
lods
imul
inc
jge
repz
push
mov
push
sub
leave
jo
clc
mov
das
mov
pop
sub
xor
cmp
inc
mov
shrb
and
aad
pop
outsb
adc
aad
adc
in
adc
loop
aaa
adc
pushf
mov
mov
xchg
ret
hlt
mov
rol
xchg
outsb
daa
cmc
jg
mov
shlb
cltd
out
popa
add
jl
call
or
loopne
mov
sub
adc
fst
lock
jecxz
test
popf
inc
dec
mull
cwtl
or
sbb
xchg
adc
je
imul
rorl
pop
sarb
push
xor
or
lret
dec
leave
leave
pop
cmpsl
push
test
inc
sbbw
jo
jo
and
shlb
lahf
ds
mov
mov
mov
or
jmp
sbb
ds
insb
jo
push
lret
shlb
popa
ja
xchg
push
scas
aaa
sub
dec
enter
lods
sahf
fisubs
cld
insl
cs
sub
sbb
adc
inc
jbe
fadds
adc
insl
add
cwtl
jmp
sbb
add
int3
jmp
inc
ficoms
std
sbb
inc
fs
addr16
sub
mov
sub
mov
cmp
out
int
cmp
negl
and
mov
ss
sti
insb
leave
insb
sub
xorl
loop
adcb
nopl
in
push
jg
and
sbb
out
cli
xlat
lods
or
enter
mov
subb
movsl
test
jo
xchg
outsl
idivb
jg
orl
mov
sbb
int
cltd
xchg
add
jmp
add
fwait
add
fwait
push
clc
dec
stos
arpl
sbb
idivl
and
out
neg
popf
ret
fnstenv
pop
fiadds
fstl
add
outsl
jb
cmp
pop
push
dec
hlt
mov
adc
clc
push
aas
les
repz
mov
and
mov
ja
dec
jae
adc
hlt
movsb
data16
aas
pop
and
fldl
cmpsl
ja
cs
jb
mov
inc
xor
push
nop
xor
lock
push
cmp
or
push
stc
xchg
push
std
inc
rcrl
push
sbb
mov
loope
add
xor
out
lea
test
sti
pop
fisubs
gs
xchg
sbb
mov
cmp
mov
add
xor
mov
les
hlt
rcrb
inc
scas
shlb
mov
sub
push
call
push
adc
out
loop
fbld
mov
push
xor
mov
fidivrs
add
stos
in
push
popf
xchg
xchg
sbb
mov
sbb
insb
jno
lods
push
push
clc
or
mov
cltd
mov
call
push
add
repnz
xor
test
stos
pop
cwtl
xor
xor
xchg
pop
pop
and
jge
xchg
jecxz
jno
push
scas
add
mov
xchg
push
cld
mov
stos
fcoml
cmp
popl
hlt
mov
jmp
dec
arpl
inc
xchg
in
inc
fcmovnbe
loopne
push
incb
push
xlat
fcoms
cs
xchg
lret
lock
jno
adc
mov
jle
or
fs
push
js
fistps
add
mov
aas
mov
mov
in
sti
ror
or
mov
cmc
ljmp
out
ds
inc
sbb
jg
aas
fisubrs
clc
push
xchg
mov
in
pop
and
mov
add
pop
jg
push
add
mov
sbb
mov
push
and
ret
out
mov
xorl
cmp
sbb
sahf
inc
push
stc
jp
mov
iret
dec
movsb
cmpsb
mov
push
ret
into
roll
stc
lock
outsb
inc
lret
loopne
pop
sbb
jbe
ficomps
scas
loop
and
jmp
mov
cmpsl
jo
push
divb
cmc
je
xor
jae
inc
sar
push
and
cmpsl
or
repnz
add
jmp
enter
adc
sub
jl
bnd
shld
sbb
xorb
push
lock
dec
xchg
aas
inc
gs
outsl
push
dec
movsb
pop
adc
add
or
xchg
mulb
inc
or
xchg
rolb
aad
pop
daa
xchg
aas
inc
cmp
pop
call
add
les
xor
jno
pop
pop
lods
inc
xlat
jae
fdivrp
pop
das
mov
cmp
sub
or
clc
jbe
test
xor
adc
movaps
inc
xchg
insb
into
ficoml
int
mov
loop
es
push
add
sbbb
loop
sahf
shlb
jno
imul
gs
add
les
js
cmp
in
aaa
jmp
js
fiaddl
dec
mov
xchg
and
insl
jno
imul
aad
pop
shl
jmp
cmp
mov
repz
sbb
or
mov
xor
int
mov
or
adc
and
mov
test
movsb
xor
push
jmp
out
and
clc
dec
pop
in
or
mov
inc
psllq
pop
mov
test
loopne
notl
bound
enter
test
das
movl
mov
jns
les
jno
incl
adc
jne
push
clc
leave
test
imul
in
test
adc
scas
sbb
xor
movsb
shll
inc
aas
fimuls
mov
dec
inc
xor
push
neg
mov
xor
mov
aaa
dec
ljmp
ljmp
callw
sub
fcomps
subl
mov
leave
ljmp
lock
lcall
es
je
add
sbb
sub
lods
cmpsb
mov
outsl
add
xor
shrb
mov
bound
jns
ja
shrl
in
jb
hlt
mov
adc
sbb
cmpsb
inc
push
js
int
mov
dec
dec
push
cmp
cmp
scas
movsl
mov
add
scas
and
les
mov
dec
sbb
cmove
sub
lea
gs
and
sbb
stc
inc
imul
jae
movq
and
dec
push
outsb
cli
fstpt
mov
mov
or
lahf
xchg
mov
rolb
lcall
cs
sbb
xadd
inc
in
call
mov
insl
and
sub
mov
cmp
add
and
fidivrs
ret
sbb
sub
cmp
add
cwtl
loop
daa
sbb
sti
out
fmull
mov
shrl
push
or
sbb
nop
and
xchg
out
mov
pop
rol
mov
xor
pop
jg
sarb
lret
xchg
and
xchg
ds
das
xchg
aas
insb
je
mov
je
fwait
dec
sbb
stc
jl
stos
jle
sahf
gs
dec
rcrb
sbb
insl
clc
mov
lock
iret
enter
insl
xor
push
push
pop
push
pop
pop
mov
sbb
mov
out
test
jecxz
mov
sub
sbb
mov
pop
push
pop
mov
fbld
jnp
leave
scas
cmc
or
mov
lret
rolb
mov
std
mov
rol
daa
ficompl
aam
pop
popa
gs
add
mov
push
mov
sub
stc
dec
mov
cs
js
xchg
scas
push
mov
insl
ja
pop
loope
xchg
hlt
insb
jb
lock
shll
movsb
imull
push
in
fists
and
push
cltd
fcmove
inc
adc
ret
rorb
xchg
xchg
dec
test
inc
pusha
fstps
iret
je
jge
ja
cmc
or
inc
cld
cmp
pop
inc
sub
lock
pushf
test
fs
aam
fisubl
aad
inc
push
fwait
lret
out
test
std
inc
adc
adc
sbb
sahf
cmp
inc
xchg
clc
gs
push
shll
mov
pop
mov
sub
push
loopne
test
mov
jmp
and
imul
sub
xor
xchg
mov
lcall
ficomps
popf
mov
call
in
pop
xchg
bound
or
xor
out
cmp
lcall
in
out
inc
orb
jecxz
xlat
mov
hlt
movsb
lods
aas
test
or
outsl
outsb
ljmp
test
or
or
repz
add
arpl
nop
adc
mov
sti
rcl
ja
xchg
mov
push
push
mov
mov
adc
mov
jl
arpl
in
cmc
scas
push
fstps
clc
add
jno
add
xor
pop
cmpsb
jle
inc
ljmpw
xor
sub
jno
sub
fs
inc
lretw
lock
mov
jae
inc
test
lahf
shll
call
sub
rcrl
adc
cli
xchg
sub
jae
test
push
push
mov
aas
div
loopne
dec
dec
in
xchg
pop
inc
mov
xchg
call
das
loop
sub
data16
pop
dec
inc
cmc
addr16
and
pop
or
andb
ficoms
cs
sub
xchg
jle
stos
scas
pop
jecxz
pop
push
jle
ret
enter
fs
sbb
stos
adc
inc
popf
pop
adc
jns
aaa
dec
sub
jmp
mov
aas
and
ret
or
mov
loope
inc
lods
in
xchg
jmp
pop
insl
mov
and
and
xor
pop
mov
shl
adc
xchg
jl
or
or
pop
popa
add
jmp
call
mov
aaa
std
rol
jno
mov
add
mov
pop
ljmp
out
inc
add
push
lock
popf
sti
push
lea
mov
out
in
fildll
ret
mov
sbb
push
cmp
jle
xchg
rclb
mov
into
pop
jbe
mov
test
jbe
addb
insb
inc
inc
fists
pop
js
xchg
add
mov
mov
jne
push
enter
xchg
mov
mov
sub
xchg
sbb
imul
dec
sbb
in
shl
inc
addb
data16
xchg
cmp
sbb
out
xchg
xchg
pushf
pop
mov
mov
sub
hlt
andb
ficoml
divl
pop
repnz
fsubrs
push
dec
push
mov
or
test
xchg
mov
jbe
loopne
jne
ret
lods
ror
loop
push
push
mov
dec
sbb
pop
loopne
fldenv
or
movl
js
sub
sub
jle
pushf
mov
jnp
cmp
cmpsb
pop
out
popl
cld
ret
and
ds
fdivs
pop
stos
dec
ljmp
outsl
fnstenv
jae
xchg
xor
andb
lcall
je
repnz
fldt
xchg
into
pop
jb
inc
mov
int
pop
daa
jge
xchg
sub
xchg
lea
loopne
or
jp
insb
das
rolb
mov
lods
stos
cmc
les
ljmp
sub
repnz
and
and
jecxz
adc
pop
sbbb
ret
jne
cmp
inc
mov
or
inc
aaa
mov
divl
add
ret
pop
mov
pop
fnsave
cmp
test
popf
test
pop
pop
add
fcmove
adc
mov
pop
outsl
xor
out
dec
rcl
adc
call
jno
sub
mov
inc
add
aad
jmp
jmp
inc
mov
or
int
adc
adc
adc
pop
jle
loopne
xor
mulb
out
xchg
loopne
mov
mov
add
push
sub
jnp
addl
push
out
gs
lret
rcrl
add
xchg
test
jl
pop
gs
call
fistl
inc
sbb
lcall
push
cli
xor
lret
cmp
push
pop
sahf
xchg
aad
cs
jb
aaa
ret
cmp
or
cmp
sub
jmp
gs
mov
mov
ljmp
jp
repz
push
push
es
mov
xchg
push
adc
sub
dec
mov
repnz
dec
push
push
fwait
stos
cmpsb
out
adcb
inc
dec
mov
subl
jbe
add
inc
pop
mov
sub
cmp
test
hlt
inc
subb
cmp
lcall
xchg
mov
es
mov
insl
jl
xor
jg
ret
sub
dec
mov
iret
subl
lret
jl
inc
outsb
loopne
push
xchg
xchg
negl
cmp
enter
repnz
add
outsl
xor
pop
imul
xchg
shl
mov
pop
movsb
insb
aad
sub
pop
sub
mov
sbb
sub
or
xor
jno
dec
outsb
add
cmp
ror
cld
dec
push
xchg
mov
xchg
fmuls
jb
dec
sarb
mov
test
or
xor
clc
and
cmpl
or
or
fcom
imul
cmp
and
mov
pop
jo
xor
cli
std
pop
cwtl
xor
sub
add
inc
cmp
cmp
lret
nop
inc
inc
loope
pop
inc
addr16
test
cmp
dec
and
adc
mov
leave
and
sarb
lea
ds
mov
out
add
dec
xor
add
pushf
ljmp
sbb
gs
xchg
or
lock
jp
test
dec
pop
clc
xchg
es
enter
jge
movsl
adc
pop
push
xlat
dec
popa
hlt
xchg
std
pop
shll
inc
adc
loopne
cmc
push
pop
loop
sbb
jl
jmp
push
or
or
push
pushf
sbb
jo
pusha
sbb
clc
push
mov
jne
popa
mov
or
pop
into
sti
bound
adcb
lahf
mov
out
push
mov
xchg
aam
adc
stos
gs
sbb
dec
cmpsl
cltd
and
int
or
or
mov
sub
push
sbb
jl
aas
pop
inc
aas
div
push
loop
aas
lret
dec
rclb
mov
mov
and
repz
pusha
dec
gs
jg
outsl
aas
jp
push
nop
out
mov
cmovno
inc
push
jns
jb
jg
test
sbb
idivl
lcall
psadbw
ficoml
add
push
jmp
mov
mov
add
mov
xlat
mov
sbb
loopne
mov
mov
cmp
mov
add
scas
nop
movsl
mov
in
jmp
mov
mov
or
imul
jp
out
add
scas
sar
push
shlb
ds
xorb
in
fcoms
adc
inc
adc
inc
out
jg
shlb
in
pop
fldl
adc
jecxz
test
jbe
add
das
aam
outsb
xorb
xor
out
fstl
out
fdiv
repnz
dec
imul
lret
enter
rolb
insl
int
mov
push
jne
scas
adc
sarb
loopne
jb
adc
insl
inc
fwait
repnz
cld
insb
mov
jecxz
mov
push
sbbl
ret
xchg
xlat
insl
gs
rcrb
sbb
sti
inc
push
std
mov
mov
jns
insb
cli
fldt
xlat
cld
cmpsb
roll
pop
in
aaa
lea
lcall
sti
jl
pop
adc
movsb
iret
std
clc
xor
fdivl
dec
ret
fucom
out
sbbl
xlat
mov
je
cmp
jmp
fwait
aad
loop
xor
sbb
and
enter
lods
repnz
sbb
lret
lea
push
or
roll
or
popa
push
mov
inc
insl
xchg
ss
jbe
icebp
xchg
ret
fbld
sbb
xchg
and
sbb
repz
inc
iret
sarb
xor
mov
ficomps
ljmp
lods
cmpsb
leave
aaa
sub
sub
cmp
and
mov
mov
movsl
mov
mov
mov
popf
cmp
fstpt
je
or
pop
testl
das
mov
adc
xor
mov
jne
shlb
sub
jae
fiaddl
sub
outsl
lock
outsl
xchg
dec
pop
enter
sub
in
fstps
leave
cmp
fucom
push
aas
aaa
movl
gs
in
push
hlt
adc
movl
mov
adc
in
stc
mov
add
mov
jns
and
jnp
push
adc
insl
divb
sub
mov
mov
pop
cwtl
adc
mov
in
mov
inc
sbb
in
leave
dec
xor
es
adc
test
sbb
and
fldl
mov
add
ja
inc
std
repz
push
mov
jecxz
fwait
dec
sub
nop
mov
fstps
outsl
mov
lods
call
mov
or
push
cmpsb
loopne
mov
iret
cld
push
and
jg
scas
outsl
fildl
xor
sub
pop
sub
aaa
ret
xchg
sbb
push
lcall
sub
xlat
into
mov
sbb
or
leave
adc
aad
or
mov
or
xor
test
int
lahf
sbb
out
jg
mov
adc
jmp
enter
jl
push
sub
outsb
popf
cmpsb
add
sarb
std
sbb
xchg
out
or
out
cmpsb
out
mov
pusha
dec
cmp
jmp
pop
lcall
inc
or
pop
push
lock
rorb
adc
jbe
pop
and
and
out
adc
sbb
decb
in
jo
xchg
in
jnp
cmp
push
and
sahf
xor
ljmp
sub
pop
andb
jmp
shll
js
idivb
jmp
insb
lea
out
aam
cmp
xchg
push
xchg
test
pusha
iret
ret
shr
pusha
xlat
mov
cmp
push
cmpsb
jle
stc
dec
pop
sub
inc
fnstsw
jge
js
mov
sbb
mov
inc
and
add
repz
jmp
sbb
mov
xor
sub
mov
pop
sub
pop
dec
aam
pop
lods
pop
push
test
cmpsl
mov
or
mov
stos
or
ror
jnp
jge
addr16
nop
lea
jge
push
xchg
inc
jnp
shl
scas
ds
outsb
cmp
mov
xchg
pushf
push
movl
ret
mov
mov
dec
mov
jmp
popa
loopne
test
das
and
sahf
mov
fmuls
lods
sub
jg
cmpb
fmuls
xor
cmovge
bound
mov
in
mov
fstl
orl
rcr
in
iret
jp
inc
dec
add
cmp
mov
divb
add
dec
pop
lahf
out
pusha
mov
jns
popf
clc
loope
stc
lea
inc
cmp
stos
insb
push
xorb
insl
aaa
dec
and
pusha
scas
adc
test
rorb
repnz
sub
hlt
add
mov
mov
xlat
cmpsl
out
jl
mov
shlb
jnp
pop
mov
push
cld
xor
inc
out
enter
aad
sub
mov
mov
inc
movsl
ret
push
cltd
cmp
pop
add
ja
shr
and
imul
cmp
or
stos
and
sbb
xchg
add
outsb
fwait
pop
rcrl
mov
cmp
int3
push
cmp
or
mov
loop
in
push
xchg
aam
test
jmp
lea
adc
lret
je
fisttpll
or
pop
fisubrs
out
data16
and
sub
jmp
dec
fwait
daa
jge
push
les
jl
ja
out
iret
rclb
cmp
mov
fisttps
js
inc
cmp
push
rorl
cmp
arpl
inc
jno
bound
sub
xchg
dec
mov
into
sub
or
lcall
lahf
lds
mov
xor
push
xor
push
dec
pop
popf
or
push
and
and
add
jae
aas
lods
add
cs
xchg
jbe
iret
cmp
nop
mov
loope
mov
ljmp
adc
pop
in
mov
adc
cmpsl
pop
lock
repnz
cmc
lret
pop
xor
mov
adc
repz
testb
sub
bound
subl
jg
add
mov
sub
dec
movsb
push
push
arpl
test
cmpsb
ret
xchg
in
in
sub
pop
or
leave
inc
ror
popf
adc
je
icebp
pop
je
fildll
cmpsb
cltd
xchg
fisubrl
sbb
add
jg
mov
popa
ficomps
syscall
push
lea
es
pop
mov
jle
xor
int3
daa
pop
cmp
shrb
mov
cmp
mov
fstps
mov
pop
enter
xchg
sbb
add
jmp
jp
sbb
lret
push
mov
aas
jge
sahf
dec
hlt
out
add
dec
inc
mov
or
cmp
cltd
jmp
cmp
orl
call
inc
hlt
sub
mov
xlat
add
xchg
sbb
shrb
fisubrs
xchg
push
scas
std
push
pop
push
out
pop
fiaddl
aas
fadds
shrl
addr16
xor
sub
out
xchg
sbb
lods
fwait
add
arpl
or
jecxz
push
std
xchg
aaa
mov
jns
inc
cltd
lahf
mov
mov
add
arpl
mov
test
or
ds
sbb
lret
or
int
mov
pop
test
mov
mov
fs
rclb
dec
push
cmp
shl
push
xchg
sahf
sbb
daa
xchg
jno
pop
aam
lds
pop
int
mov
ja
lods
lret
les
enter
in
and
pop
aaa
inc
jle
sub
mov
add
ds
fs
xor
or
divb
lea
aaa
sbb
pop
outsl
dec
xchg
or
pop
rcll
pop
xchg
imul
inc
pop
or
jne
stos
data16
sti
les
push
popf
jnp
cld
pop
sbb
sbb
and
sub
insb
push
mov
das
jb
mov
push
jge
cmp
dec
pushl
mov
inc
lds
mov
jbe
les
enter
or
out
cmp
loop
jp
xchg
pop
inc
lds
xor
shll
dec
aaa
or
adc
dec
cli
or
gs
and
imul
movsb
and
int3
or
pop
push
dec
fisttpl
sub
xchg
sub
dec
mov
testl
and
jns
cli
test
sti
pushw
cli
pop
call
aas
mov
aaa
mov
xchg
ret
mov
mov
jns
test
test
lds
or
scas
adc
filds
in
push
loop
dec
add
mov
jmp
xor
test
ljmp
adc
movsb
pop
movsl
rclb
mov
mov
bound
or
adc
test
fs
aad
pushf
adc
jbe
xchg
fs
sbb
leave
or
dec
jecxz
jge
dec
cmp
fdivrs
mov
dec
xchg
mov
adc
push
xlat
sbb
cmp
ljmp
cmp
sub
adc
dec
pop
add
jnp
mov
clc
pop
and
jnp
pop
or
iretw
je
mov
jle
daa
sub
movsl
push
filds
std
adc
dec
loope
bound
jb
push
les
mov
aad
std
nop
xorb
es
pushf
and
pop
cmp
sbb
adc
xlat
mov
sub
movsb
cmp
cmp
push
mov
xlat
push
jbe
out
add
loope
out
pop
rol
push
xchg
stos
mov
add
sbb
jb
pop
push
pop
mov
mov
adc
gs
out
xor
add
pushf
lahf
xor
jle
aas
push
xchg
cmp
rclb
popf
sbbb
dec
and
mov
pop
pop
jne
push
pop
sbb
aaa
ret
subl
inc
std
sub
js
and
addr16
push
xchg
mov
scas
cltd
aad
and
cmp
cltd
inc
das
arpl
adc
into
mov
repnz
inc
pop
fcomps
std
outsb
and
ret
sub
inc
lock
and
xchg
scas
lret
or
xlat
aaa
mov
scas
insb
mov
sbb
out
movsl
sbb
in
sub
xchg
pushl
dec
arpl
adc
int
stos
les
es
adc
cwtl
in
or
or
test
inc
popf
cmpsb
inc
fs
pop
jb
jp
insl
xor
call
mov
xchg
dec
iret
push
jp
clc
rcll
pop
dec
jnp
movsl
lods
out
inc
rcll
stos
sub
repnz
lret
icebp
vphaddsw
out
aad
sub
hlt
pushf
bound
adc
mov
xchg
or
mov
mov
icebp
scas
xor
add
pop
arpl
jae
jecxz
scas
mov
shlb
adc
mov
sbb
movsb
sbb
out
dec
cmp
sub
mov
jns
mov
push
mov
int
fwait
cmp
jnp
shl
pop
pop
inc
out
mov
xchg
add
bswap
test
xchg
push
mov
ja
popf
mov
stc
insl
pop
fucomp
int
aaa
leave
addr16
xchg
cmc
ret
inc
xchg
ficomps
addr16
sti
mov
jnp
lcall
daa
in
aaa
mov
mov
xor
mov
testl
int3
mov
cmp
mov
add
jle
fldt
push
sarl
mov
add
movsl
into
test
imul
inc
xlat
dec
or
pop
aad
dec
adc
mov
and
mov
hlt
jo
mov
dec
dec
pop
cmp
test
mov
dec
aas
jbe
dec
push
push
jle
lea
sbb
lods
mov
out
in
rcrl
inc
out
movsl
call
lds
pop
popf
lret
test
nop
shlb
ret
xor
movsb
sub
sub
lock
fxch
push
inc
movsb
mov
jne
scas
stos
mov
sbb
push
sub
xchg
jno
mov
inc
adc
mov
adc
jge
xor
lret
out
clc
inc
je
mov
xor
push
cmc
sbb
jae
cmp
stos
lock
nop
scas
sbb
xor
inc
push
addr16
adc
mov
sub
mov
mov
fwait
gs
push
sahf
imul
mov
pop
clc
psllw
mov
shll
xor
jmp
faddl
cltd
call
aad
pop
ficoms
mov
enter
mov
jno
in
pushw
int3
fldcw
dec
mov
movsb
aad
cltd
lods
jl
das
pop
xchg
jns
sub
cmpsb
aad
fldcw
pusha
xchg
shrb
pusha
daa
decl
mov
or
inc
mov
sahf
sti
sarl
xchg
push
jge
cmp
imul
rol
cmp
insb
add
xchg
inc
adc
push
scas
call
call
lds
ss
and
std
xor
pop
rcrl
nop
mov
mov
test
cmc
pusha
cltd
fimuls
sub
cmp
dec
lock
ljmp
lds
cmp
inc
mov
iret
jno
cwtl
dec
pop
cmp
jne
adc
xchg
mov
aad
sbb
aad
test
rcrl
pop
mov
mov
scas
ss
divb
dec
ret
mov
xor
or
push
add
jne
fdivl
xchg
repnz
mov
lret
sub
and
repnz
or
cmovo
cmpl
cmpsl
aas
mov
ss
pop
fdivl
int
fstps
xor
pushf
push
pop
mov
movsl
es
or
aas
xor
mov
sub
jbe
mov
xor
and
gs
fstpt
sub
cmpsl
and
int3
adc
ret
lea
add
dec
fistpll
cld
sbb
xor
das
insl
push
push
call
pop
sti
push
icebp
push
mov
aam
jge
mov
jmp
or
fucom
cmp
addr16
cmp
and
int3
cmp
xchg
cmp
or
mov
lods
dec
mulb
jmp
xchg
ret
xchg
pop
xchg
dec
jp
das
jle
push
cmp
addl
js,pt
mov
fildll
or
popa
scas
stos
dec
pop
fs
loop
test
cmpsl
pop
iret
into
ja
xchg
pop
pop
push
ss
jecxz
rol
iret
sti
jns
das
mov
add
ljmp
cmpb
dec
fcompl
iret
ret
jge
mov
mov
pop
dec
ljmp
xchg
sub
mov
movsl
fcoms
in
lods
fcoml
test
shll
sub
push
lods
shlb
ret
dec
and
xchg
ret
add
mov
lcall
add
xchg
add
inc
mov
jle
mov
scas
sub
repz
es
mov
pop
xlat
add
out
aam
call
scas
xor
pop
add
push
xchg
pop
pop
cmp
push
push
out
mov
xchg
mov
pop
pop
mov
test
jne
and
int
mov
lods
lret
rcrb
out
addr16
inc
mov
pop
inc
ss
cmp
adc
in
jb
lds
inc
mov
ret
and
rclb
xor
inc
xchg
lods
insl
sub
outsl
xlat
mov
fstps
mov
inc
aaa
fisttps
daa
dec
ret
mov
call
cwtl
js
sbb
cmp
xor
fcomip
and
inc
pop
and
and
jns
lahf
add
inc
dec
test
ds
push
xchg
out
fwait
lds
ljmp
pop
out
mov
js
fcompl
pop
adc
in
xchg
aam
push
inc
mov
sbb
int3
sub
mov
sbb
push
push
stc
sbbl
cmpsl
sbb
aam
jb
lret
pop
test
cmp
sbb
std
xchg
and
push
add
mov
int3
jnp
jge
mov
or
or
or
in
sbb
pop
pushf
xor
mov
loopne
mov
loop
and
inc
aaa
add
xchg
outsl
mov
or
pushf
or
mov
je
xor
rorb
dec
sbbl
aam
dec
cmovno
push
dec
cmp
popa
jne
stos
xor
mov
out
cli
push
js
adc
das
mov
lods
addr16
stc
push
xchg
jnp
jae
les
aas
mov
dec
mov
and
cvtpi2ps
pusha
or
lds
xchg
mov
imul
adc
out
inc
aad
cli
xor
mov
movsl
mov
imul
and
dec
sub
push
iret
jle
or
mov
das
add
es
mov
and
negl
in
mov
test
gs
xor
stos
push
adc
xchg
aas
movsb
mov
rorb
xchg
pop
mov
dec
call
out
add
call
mov
mov
push
push
addr16
push
jnp
fisubl
and
lea
jo
xchg
cld
ret
sub
inc
inc
sbb
sbb
pusha
into
push
jo
pinsrw
adc
adcb
div
push
popf
rolb
inc
push
mov
mov
mov
dec
int
in
jp
cmpb
xchg
push
sbb
inc
mov
ljmp
pop
aaa
fisttpll
adc
sarl
fwait
xchg
outsl
mov
jne
sbb
bound
push
mov
adc
mov
sbb
inc
xchg
out
pop
pop
adc
adc
pop
stc
mov
into
push
mov
adc
xor
xlat
inc
repz
fcomps
xchg
inc
lret
pushf
mov
jns
test
or
out
fcmovbe
int
pop
lret
pop
outsl
cwtl
ds
mov
rolb
dec
dec
call
sbb
int
lahf
xchg
add
mov
mov
lds
dec
imul
lret
pop
jns
xor
scas
ljmp
int3
and
and
repnz
dec
out
xchg
and
lock
adc
dec
stc
imul
and
sbb
xor
out
xchg
cmc
xchg
sub
sbb
and
mov
add
mov
insl
loop
mov
xor
out
fsts
push
outsb
xor
add
adc
jnp
xchg
dec
xchg
pop
into
sbb
inc
mull
je
insb
aam
xchg
aaa
mov
sbb
pop
out
in
movb
ss
lcall
popa
mov
mov
aas
and
orb
mov
addl
popa
sub
icebp
dec
push
pusha
outsl
popf
in
mov
pop
popl
sar
jbe
lds
pushf
jle
ja
jmp
mov
shll
add
pop
add
enter
pushf
mov
add
imul
out
out
orb
and
sub
sub
mov
out
dec
mov
sub
lds
or
cmp
add
xchg
fdivr
stc
jae
sbb
nop
mov
fs
cmpsl
aas
std
js
dec
xor
sbb
pop
xor
aaa
jl
rcl
arpl
sub
inc
pop
stos
xor
sub
pop
and
scas
pushl
scas
repz
and
ret
inc
cmpsb
in
mov
std
xchg
in
mov
out
or
icebp
sub
sbb
lds
pop
out
std
fistpll
cmp
inc
cmpsb
pop
shlb
cld
and
shlb
cmp
adc
pusha
push
stos
mov
mov
pop
addr16
sbb
cwtl
jp
mov
int
mov
mov
rolb
mov
cmp
stos
push
pop
pusha
xchg
arpl
and
mov
idivl
filds
mov
pop
int
in
or
mov
mov
rorb
add
or
mov
mov
ja
xchg
mov
jns
lods
mov
insb
das
push
pop
sub
cwtl
and
add
stos
popa
out
mov
or
adc
sbb
or
scas
lret
and
js
mov
insb
in
sti
adc
pop
loope
lods
sub
or
jl
adc
push
test
popa
pop
ficomps
jnp
adc
cmp
jmp
push
lods
jmp
repz
pop
outsl
aad
test
sub
push
mov
pop
sar
adc
icebp
lods
stos
or
add
dec
sbb
in
stos
and
icebp
ret
movsb
in
mov
and
enter
cmp
mov
jle
ds
ds
scas
mov
push
mov
mov
xchg
test
sub
xor
push
mov
push
sub
cmpsl
fmull
out
bound
add
xchg
push
mov
sbb
loope
sbb
pop
movsl
out
int
out
pop
dec
and
test
adc
jecxz
adcb
inc
or
sarl
hlt
push
push
sbb
cmpsl
mov
les
ror
dec
gs
add
mov
mov
and
outsb
mov
data16
roll
xor
mov
mov
lcall
or
iret
iret
push
sub
outsb
out
jmp
and
mov
adc
lea
lea
fwait
popf
pop
jmp
movsl
jmp
mov
or
dec
out
lcall
mov
test
xchg
mov
xor
dec
fiadds
ljmp
lcall
sbb
test
ljmp
mov
dec
aam
cmpl
fidivs
cmp
repz
mov
pop
pop
xor
mov
dec
popa
sub
out
add
lahf
in
data16
sbb
or
add
das
mov
loopne
dec
pop
pop
sbb
loope
mov
mov
clc
popf
push
xchg
push
insb
out
loopne
aad
inc
cltd
popf
jnp
lcall
lea
clc
mov
test
lods
ret
mov
sbbl
cmp
xor
pop
popf
add
iret
adc
imul
scas
fiadds
fisubs
or
repnz
and
adc
xor
arpl
insl
pop
ret
sbb
pop
repnz
iret
imul
enter
mov
cmpsl
loope
ja
cs
xchg
add
dec
addl
mov
mov
out
pop
and
adcl
mov
repz
add
int3
sbbb
mov
and
dec
and
sti
iret
push
pop
mov
lods
xchg
or
cmpsl
movsl
das
inc
ljmp
jae
lds
nop
cwtl
xlat
popf
ret
adc
push
mov
jle
ret
out
repnz
fmull
insl
sub
shlb
inc
jle
lcall
je
ret
jmp
and
fs
fnstsw
movsl
or
push
in
cmp
sub
dec
jmp
mov
dec
fadd
mov
jecxz
xchg
mov
gs
movl
stos
xor
fstl
fs
adc
sub
sub
cmc
out
insb
xor
pop
sbb
sbb
roll
inc
push
cmp
pushf
xchg
imull
sarl
mov
std
cli
adc
push
xor
mov
sbb
cmp
shl
or
ret
lods
xor
jmp
es
cwtl
mov
out
push
push
outsl
les
pop
adc
adc
push
mov
cld
xor
lock
jae
pop
lret
push
xchg
add
pop
mov
pop
sbb
cmpsl
das
mov
mov
xchg
rorl
pop
addb
scas
lds
xchg
mov
and
dec
jmp
ss
jg
movsl
pop
mov
or
and
lds
test
jb
lret
loope
push
test
cmp
lock
inc
mov
rcr
popa
sti
sbb
jnp
jp
push
insl
aas
mov
dec
cmp
mov
js
icebp
mov
in
cmc
mov
xor
cmp
lahf
fs
sub
mov
imul
scas
cmp
sbb
dec
mov
in
insb
sbb
xchg
test
and
testl
lods
subb
fimull
add
mov
mov
cmpl
xchg
add
and
ret
sbb
dec
loope
push
push
pcmpgtb
mov
hlt
scas
jnp
out
fildl
pop
push
lea
clc
dec
pop
stc
jl
jns
dec
add
cld
ret
shl
mov
jae
into
mov
fisttpll
aas
push
rorl
dec
xor
inc
ljmp
or
inc
sub
jge
jne
outsb
jne
lret
xchg
aad
lcall
popf
lahf
jb
movl
jae
daa
je
sub
int
gs
jmp
lahf
aas
push
pop
bound
and
pop
pop
sub
outsb
cmpsl
mov
jl
jge
cmc
push
imul
mov
mov
jno
jnp
cmp
jns
outsb
add
scas
daa
rol
push
mov
dec
lcall
xor
das
pop
push
repz
jnp
inc
push
sbb
mov
pop
pop
mov
rcll
push
mov
push
dec
sbb
fisttpll
or
mov
out
rcl
daa
mov
and
aas
cmp
push
loop
xor
cwtl
out
call
sbb
jns
push
mov
cmp
popf
mov
fs
jne
cmp
inc
sbb
or
adc
mov
push
inc
aas
int3
sub
adc
dec
jl
inc
mov
lahf
and
stos
inc
loopne
lret
int3
movsb
cmp
dec
xor
fisttpl
loope
inc
jno
imul
mov
cmp
inc
xorl
pop
inc
or
aas
nop
movsb
jb
ret
test
addr16
add
mov
jo
rclb
mov
int3
pushf
mov
lds
xchg
pop
repnz
data16
xchg
movl
dec
inc
fimull
mov
mov
sub
mov
adc
sub
cmpl
pushf
sar
movsl
and
mov
xor
jp
pop
and
xor
add
xlat
lahf
or
xlat
adc
int
push
push
addb
jno
push
adc
fsubs
mov
pop
dec
xorl
jne
adc
test
xchg
mov
testb
ds
jne
clc
cmpsb
clc
fs
repnz
mov
std
push
push
adc
and
jl
and
add
test
mov
jnp
js
cld
sbbl
jae
lea
xchg
jns
inc
shlb
out
jne
aas
sub
lcall
inc
or
inc
xchg
inc
outsl
out
add
adc
adcl
adc
lret
lods
dec
push
or
add
adc
data16
cmpsb
mov
adc
mov
jo
enter
bound
xor
pop
and
je
je
mov
lcall
add
pushf
fcoml
xor
add
daa
dec
incb
push
jnp
lock
xorl
push
shr
pop
cwtl
outsl
pop
mov
pop
dec
aam
fildl
imul
or
xchg
bound
add
jb
sbb
push
mov
clc
popa
jge
movsl
sub
and
pop
fs
cmp
lods
stc
bound
pop
jnp
mov
aad
mov
jmp
out
jge
xor
mov
dec
dec
fs
ljmp
and
and
rol
inc
test
rorb
mov
push
push
sbb
ret
add
inc
xchg
xchg
addb
addr16
lods
sub
je
mov
fistl
scas
in
in
cmp
xchg
jns
into
stos
xlat
mov
sbb
pop
fldenv
hlt
shll
dec
fisubl
mov
test
shlb
jne
mov
adc
mov
cltd
cmpsl
mov
inc
sub
rcll
mov
push
inc
popa
inc
inc
xchg
sub
rcr
push
mov
nop
fidivrl
pop
or
iret
or
ljmp
mov
cmp
xor
in
push
test
std
mov
xor
xor
rcr
lret
xor
mov
xchg
scas
mov
sbb
xor
popa
test
or
movsb
testb
sbb
xchg
adc
sbb
push
sbb
sub
xorb
xor
push
mov
int3
pop
jge
in
call
xor
imul
sbb
fiaddl
push
mov
mul
int
pushf
or
into
pop
stos
sbb
test
adc
out
addr16
pop
mov
or
jne
push
out
out
stos
shll
addb
xor
out
mov
sub
test
aad
out
cmp
pop
dec
and
aad
sub
in
adc
das
loopne
xor
jle
sahf
loope
cmp
mov
push
xor
xor
dec
imul
jg
inc
xlat
inc
sub
mov
into
jnp
cltd
xlat
shr
dec
in
inc
jl
jmp
lds
test
daa
xchg
mov
jne
xlat
dec
iret
repnz
jecxz
xlat
out
nop
add
mov
adc
pop
iret
or
sbb
stc
mov
pop
movsl
lahf
mov
scas
and
mov
push
xchg
fadds
shrb
loope
mov
das
pop
and
pop
sub
es
fisttpll
xchg
mov
lret
mov
insb
repnz
xchg
enter
mov
jmp
lret
mov
dec
clc
test
sbb
mov
shll
repnz
dec
sahf
loope
inc
mov
movsb
mov
outsb
lcall
mov
lcall
or
scas
dec
inc
enter
xchg
stc
es
popl
push
pop
xchg
ret
xchg
fcmovbe
adc
mov
divl
mov
int
cltd
lods
pop
mov
decb
pop
cld
dec
push
fsubrs
and
cmp
mov
shl
rol
je
and
mov
dec
jno
push
cmp
mov
inc
mov
pushf
inc
pushf
mov
loopne
dec
ljmp
test
push
hlt
pop
test
xchg
clc
jnp
imul
mov
popf
fistl
fimull
xor
pop
inc
push
pop
push
mov
jbe
jne
or
mulb
fisttpl
push
mov
cmp
xor
cmp
mov
aad
sub
cld
add
les
sbb
in
mov
js
lcall
sub
xor
lea
int
lds
adc
rclb
xlat
ret
push
add
popf
add
fisubrl
cmc
dec
cmp
push
dec
pop
jl
add
or
fcmovbe
daa
out
mov
pop
cmp
aas
xor
mov
cli
lods
xor
aam
arpl
mov
ficomps
out
sub
mov
ret
push
lahf
pusha
cmc
repnz
jno
test
add
or
push
mov
inc
adc
xchg
aas
xchg
mov
pop
cmp
outsl
lods
sub
dec
xchg
inc
in
test
mov
rclb
sbb
mov
out
das
mov
imul
xchg
jge
sub
adc
cmp
arpl
bound
adc
jmp
xor
xchg
and
cwtl
dec
enter
sub
add
mov
xor
lahf
into
xchg
sbb
shlb
pusha
mov
push
test
lds
pop
es
sub
or
jmp
dec
int
inc
ja
test
aas
js
ret
movsl
cs
rol
mov
mov
pop
cmp
pushf
scas
loop
addr16
outsl
fwait
test
pop
rcl
and
push
test
data16
xchg
movsl
ja
outsb
stc
fnstcw
jge
retw
outsl
mov
pushf
fisubrs
pop
data16
jle
test
xor
mov
inc
cmpsl
jno
and
gs
cs
jle
xor
fdivr
xor
lret
add
or
xor
xchg
cmp
adc
add
lock
mov
dec
dec
jo
or
lret
daa
xchg
mov
fstpt
adcl
push
add
sub
in
jmp
sub
cmc
mov
push
pop
lret
jns
repnz
loopne
push
pop
add
call
cmp
xchg
fcomps
fstpl
loope
inc
dec
jno
test
arpl
sub
shlb
outsb
outsl
lret
add
sahf
stos
ja
push
mov
jnp
mov
out
inc
mov
mov
push
jecxz
pusha
sbb
jo
outsl
lahf
sbb
cmp
lea
cmpsb
andl
gs
mov
jbe
pusha
sub
mov
bound
or
or
push
cmp
imul
mov
add
stc
mov
xor
xchg
scas
sar
dec
insl
jae
mov
xor
ss
daa
shrb
or
out
out
jecxz
les
or
adc
push
dec
xor
inc
sub
and
jno
test
mov
mov
or
adc
test
mov
dec
xor
mov
aam
mov
sub
mov
inc
adc
jp
cs
out
or
adc
push
decl
leave
bound
cmpsl
pop
inc
addl
xchg
jo
cmp
pop
push
push
insl
xchg
mov
test
in
fnstcw
hlt
out
fmuls
outsl
shlb
cld
and
mov
cmpsl
aaa
xchg
push
dec
sub
mov
cmpsl
sbb
mul
ret
lret
mov
push
xlat
mov
div
push
inc
iret
rcrl
mov
add
sub
fistpll
fwait
arpl
xor
jbe
int
test
mov
mov
add
in
mov
cmc
jmp
pop
scas
push
mov
add
sbb
mov
push
mov
sbb
fimull
and
loop
fsubrs
mov
cmc
rorl
add
stc
pmulhuw
and
inc
les
loop
sub
jg
lcall
ret
shlb
mov
addr16
in
cwtl
cli
into
in
outsl
cwtl
outsl
xlat
push
push
pushf
push
roll
test
adc
pop
jnp
subb
std
roll
mov
xor
inc
push
jle
addr16
mov
notb
mov
fs
mov
xor
jno
mov
loope
mov
push
add
cmpsb
movb
inc
cmp
mov
mov
call
inc
adc
sub
mov
push
xchg
mov
mov
inc
mov
fsubr
and
scas
dec
addr16
es
shlb
int3
shl
pushf
mov
addr16
shrl
xor
rcl
xchg
enter
das
push
jmp
fsub
lods
mov
jmp
ror
cmp
bound
add
repz
or
movsl
cmc
jg
add
jnp
les
test
xor
pop
out
mov
jge
mov
sahf
shll
xchg
mov
int3
test
iret
int
add
stc
lret
jo
dec
jp
mov
jmp
or
push
flds
push
sbb
insb
cmp
fidivrl
jno
pushf
cmp
sti
mov
gs
sbb
inc
dec
xlat
fstl
push
fmulp
addr16
and
inc
fwait
js
cmpsl
push
pop
and
out
dec
pop
call
add
dec
loopne
test
loop
or
inc
test
outsl
in
loopne
push
xor
or
mov
pop
insl
outsb
mov
std
mov
pop
inc
xor
insl
xor
mov
dec
out
pop
out
cwtl
out
inc
cmpsl
sub
adc
movl
push
dec
inc
shlb
popa
xchg
inc
std
scas
lcall
pop
cmp
sbb
or
fmull
fcompl
add
cmp
testl
mov
pop
fnstenv
pop
mov
in
in
mov
adc
js
or
push
mov
pop
dec
mov
sti
es
or
cltd
jle
loope
mov
xchg
movsb
sub
pop
push
out
jg
lea
ret
xor
ret
pop
add
fimuls
adc
shlb
mov
or
jbe
into
lret
cmpsl
push
inc
push
stos
pop
xchg
repnz
hlt
stos
add
adc
cmp
sub
cmp
fdiv
pop
jmp
dec
mov
enter
mov
lea
jne
flds
xlat
jecxz
cmpsl
inc
or
inc
lret
hlt
sahf
test
mov
mov
test
arpl
jmp
loope
mov
pop
inc
xchg
xchg
xchg
pop
cmp
push
xchg
pop
outsb
push
sbbb
xchg
daa
es
iret
int
add
outsl
test
sbb
jne
inc
xchg
cmc
push
adc
adc
and
add
inc
aad
lret
mov
add
add
stos
mov
andl
sub
pop
pop
dec
pop
arpl
mov
add
lret
adc
mov
pop
dec
loopne
add
or
sub
arpl
inc
stos
rclb
enter
push
mov
sbb
push
mov
sbb
test
ss
js
pop
xchg
push
cwtl
icebp
mov
gs
aas
cli
mov
daa
lods
shll
lds
lods
sbb
shlb
fisubl
daa
sbbb
sbb
fnstenv
cmp
es
add
shr
mov
pop
adc
mov
jp
cs
repz
lcall
and
ja
clc
mov
push
int
sub
push
cmp
sub
rorb
pop
mov
fistps
insl
cmpsb
cmp
loop
ljmp
sub
popf
lret
cmp
sbb
insb
sbbb
inc
push
es
test
pusha
fistpl
outsl
sbb
in
inc
adc
hlt
std
mov
mov
jg
outsb
aad
lcall
push
das
mov
mov
loop
std
mov
sbb
sub
in
lea
push
cmp
call
mov
jnp
or
lret
nop
cmp
insl
ss
cmc
out
lahf
jmp
add
and
xor
mov
out
shrb
dec
pop
fwait
add
adc
xor
xchg
ret
mov
or
clc
add
jge
pop
daa
or
sarb
jmp
sahf
and
dec
test
jo
stos
sbbl
iret
idiv
pop
ja
outsb
mov
fnsave
leave
inc
and
lea
out
mov
pop
cs
cmpsl
jmp
icebp
test
inc
icebp
fwait
aas
push
fwait
outsl
xchg
mov
int3
cmp
jnp
idivb
add
bound
bnd
xchg
jb
cld
sub
pushf
inc
adc
movsl
mov
dec
jmp
fstl
mov
in
jg
mov
mov
lahf
push
fdivrl
cltd
jle
push
hlt
fucom
add
sarl
das
pop
repnz
sub
data16
outsl
neg
inc
mov
mov
push
xlat
mov
xor
loop
adc
push
out
cmp
out
mov
fwait
adc
fucomip
push
ret
out
les
jl
pusha
lret
pop
or
popa
xchg
repnz
mov
stos
push
in
adc
imul
inc
sub
fnstenv
inc
lock
xlat
push
and
xor
add
add
mov
iret
stos
enter
loope
insb
mov
aaa
dec
fimull
repz
fs
or
and
pop
lret
mov
aam
or
inc
js
lret
loopne
jbe
dec
fcoml
adc
ret
inc
js
xchg
and
jl
xchg
jmp
mov
aad
call
cmp
fcomip
adc
sbb
pop
out
xchg
lods
nop
mov
outsl
push
lret
add
push
mov
jo
ret
iret
test
jge
push
push
inc
pop
cmp
jle
notl
fnstenv
lds
inc
jb
jne
adc
inc
add
mov
pop
addr16
mov
xchg
push
roll
out
dec
add
jnp
adc
cmp
lds
sub
mov
jmp
insb
fisttps
in
jl
cmc
das
push
lods
outsl
rol
imul
pop
sbb
xchg
movsb
pusha
dec
jge
and
fs
cmpsl
lock
dec
lods
cmp
arpl
dec
or
aas
icebp
fs
out
mov
sbb
jbe
cmc
or
xor
dec
push
insb
pop
dec
adc
movsl
add
ret
jmp
in
adc
fldenv
jl
lahf
jb
ficoml
dec
push
js
xor
xchg
jae
dec
mov
jnp
or
adc
xor
mov
add
adc
js
scas
add
jge
cmp
lret
fadds
xor
xor
data16
cmp
pop
pop
pop
jbe
adc
int3
mov
call
sub
xchg
lods
mov
xlat
mov
lods
sar
mov
ret
mov
pop
cmc
addr16
push
dec
or
test
cmp
lds
fwait
idivl
push
jno
push
dec
xor
addb
loop
dec
adc
sub
clc
movsl
mov
xchg
cmpsl
idivl
daa
jle
jmp
cmp
aaa
mov
je
or
mov
out
xor
mov
int3
jg
or
and
rclb
or
cmc
jo
js
sbb
inc
es
and
sub
lds
pop
lret
mov
mov
sub
lock
sbb
and
es
int
mov
and
dec
out
mov
xor
bound
pop
add
dec
ret
outsb
cmp
jnp
sub
jns
test
push
push
dec
push
push
insb
lret
adc
jl
add
mov
push
test
inc
aaa
fistpl
pop
jae
repz
jmp
xchg
xchg
mov
jge
scas
ss
scas
cmpsb
out
cli
or
in
pusha
and
and
dec
test
xchg
xor
pop
aas
mov
xor
lcall
out
cmp
aaa
add
pop
lea
jge
add
testb
pop
jae
cld
shl
sbb
push
data16
into
mov
adcb
pusha
jb
cwtl
rorb
xchg
fs
fmuls
les
xor
roll
test
xlat
mov
ds
or
scas
and
aam
sbb
jg
addr16
xor
cmp
pop
sti
mov
jae
movsl
fdivrl
popa
aad
cmp
ss
js
cmp
call
out
aam
ljmp
dec
lcall
inc
push
testl
sub
mov
ds
int3
lock
je
jmp
xlat
xchg
in
push
sub
xor
imul
cmpb
pop
mov
cltd
test
or
sbb
mov
xchg
pop
or
imul
inc
mov
lds
mov
sbb
scas
pushf
or
clc
mov
push
out
pushf
pop
fisttps
fwait
sub
mov
iret
adc
pop
mov
cmp
jmp
mov
mov
ret
aaa
sbb
pop
or
test
shl
fwait
cwtl
mov
push
xor
xchg
fdivs
sub
cwtl
dec
jno
jl
dec
cmp
lock
les
andl
mov
jae
and
fidivl
es
vmovsd
adc
dec
xlat
pop
dec
push
push
jecxz
std
mov
flds
adc
repz
adc
mov
push
andb
inc
sub
mov
push
std
mov
repnz
xor
mov
xchg
loopne
jge
add
mov
rcrw
pushf
pop
lret
add
addb
dec
mov
lods
cmp
mov
mov
mov
imul
mov
iret
mov
out
adc
enter
adc
inc
mov
mov
sbb
sub
inc
add
out
xor
xchg
pop
inc
or
push
test
add
mov
leave
xor
cltd
jmp
outsb
sbb
fwait
xchg
dec
sbbl
push
fs
sub
cmpsl
test
mov
push
pop
ja
mov
es
lods
inc
pop
dec
xor
jbe
inc
inc
xor
sbb
mov
push
lds
divl
out
data16
clc
call
jne
jmp
xchg
inc
mov
insb
rcrl
lcall
pop
pop
sahf
pop
cmpsl
jmp
xlat
cmp
pop
xchg
flds
outsb
stc
cmp
xchg
insb
mov
xchg
repz
ret
cmp
fcoms
mov
ja
sub
test
out
cmp
mov
mov
inc
mov
shrb
testb
jne
adc
sbb
jg
pop
lret
push
jbe
movsl
push
cs
jnp
sbb
out
cmpsl
or
inc
icebp
in
cs
hlt
inc
cmp
mov
cmp
push
sub
mov
dec
mov
sub
ja
sub
sbb
popa
add
pusha
sub
sbb
push
lahf
inc
arpl
rcll
addb
arpl
lds
dec
sub
aam
mov
jge,pt
push
pushf
cltd
rolb
sub
aas
xor
push
xorl
adc
adc
stos
leave
pop
sub
sarl
ljmp
mov
sub
mov
test
cmp
aad
mov
sbb
movsl
out
movsb
out
mov
mov
sahf
jg
xor
lea
or
or
sahf
sub
daa
rcll
or
int
shrb
mov
add
xor
je
dec
xor
aad
stos
fisttpll
lods
shrb
xor
lock
aaa
pop
dec
setae
xchg
mov
lret
scas
clc
dec
cmp
data16
adc
test
insb
fsin
mov
inc
dec
jb
sub
sub
pushf
or
jecxz
mov
outsl
lret
popa
test
sub
pop
je
lahf
cltd
jo
mov
imul
test
sub
sub
stos
dec
rcrl
fldcw
nop
lret
in
fldt
fxtract
mov
push
sti
sahf
push
les
aam
mov
lea
movsl
inc
jno
mov
fiadds
idivl
push
lock
insl
xlat
in
cs
and
fisubrl
dec
pop
into
test
outsl
mov
adc
movsl
cmpsl
int3
sub
insb
cmpsb
pop
loopne
fidivs
sub
popf
mov
push
cwtl
mov
pop
and
inc
mov
fmull
xchg
in
adc
aaa
xchg
lahf
rorb
js
mov
aaa
dec
sti
mov
lods
sub
mov
loop
push
out
ljmp
jne
data16
xchg
or
outsb
add
mov
xor
jl
adc
lahf
out
pop
cmp
adc
inc
imulb
jle
jg
das
cmp
lock
jle
mov
push
dec
inc
das
pop
adc
test
int3
push
scas
adc
leave
mov
xchg
sbb
mov
enter
fs
mov
push
jns
out
hlt
jb
adc
mov
ss
nop
mov
test
add
inc
mov
xlat
and
xlat
xchg
jg
test
icebp
mov
and
stos
add
and
cmpsl
lret
js
mov
gs
cli
movsl
movsl
push
or
lret
loop
xor
mov
fwait
jno
imul
mov
pop
daa
adc
inc
pop
xchg
jb
jg
xchg
add
inc
adc
or
jmp
cmp
dec
in
inc
inc
lea
arpl
out
push
out
cmp
ljmp
fwait
push
adc
inc
inc
push
pop
mov
cli
ss
mov
xchg
icebp
aas
jle
mov
test
lods
add
sar
jg
mov
mov
fcoms
in
mov
nop
fadd
jmp
pop
ja
push
or
sub
cmp
mov
stos
pop
cmpsb
fwait
and
jge
fstpl
jp
std
and
mov
test
stos
out
test
xchg
iret
jle
jo
out
sti
mov
cmp
mov
pop
pop
xorb
out
mov
xor
test
push
clc
and
loopne
adc
fs
popa
dec
aaa
das
icebp
jp
xchg
inc
aaa
push
loop
jmp
mov
mov
mov
cmp
sahf
jmp
mov
out
mov
shlb
jp
jne
repnz
mov
insb
ret
inc
aam
ja
into
and
inc
xchg
or
lret
add
out
js
dec
leave
testb
cmp
movsl
cmpsl
mov
mov
mov
cmc
test
push
scas
scas
clc
jae
adcb
fwait
jl
dec
mov
push
and
in
add
loop
test
xchg
lcall
mov
imulb
es
lods
cmp
cmp
scas
popf
xchg
push
ljmp
cld
xchg
ds
jnp
xor
sti
lret
xor
and
hlt
push
insb
mov
popl
andb
jge
popf
ja
mov
pop
and
jecxz
ja
cmp
dec
sub
fst
lcall
pop
mov
sbb
xor
sub
popa
mov
push
dec
jle
push
mov
repnz
divb
push
pushf
subb
cltd
lods
add
mov
cs
mov
xor
test
cmpsl
jo
les
push
into
sub
fmuls
stos
push
push
dec
sub
jge
cmp
es
add
or
adc
subb
hlt
pop
lar
pop
scas
and
rcl
or
cmp
and
pop
xchg
popa
pop
pop
dec
je
cwtl
aaa
mov
sbb
stos
cs
sti
jg
cmc
ja
cld
xor
pushf
xor
push
ret
push
aaa
in
sbb
mov
in
in
mov
loopne
ljmp
mov
cmp
std
xchg
push
push
push
inc
cmc
aam
sbb
and
xchg
push
xchg
movsl
dec
push
jbe
add
mov
dec
aad
bound
xchg
jnp
cmp
in
popa
xchg
inc
inc
addb
jle
xchg
cli
adc
lahf
cltd
or
stos
aaa
movsb
mov
es
in
int
mov
clc
sub
jmp
bound
int3
inc
lahf
jmp
push
fimull
adc
pop
repnz
popf
pushf
inc
or
mov
test
mov
mov
add
jmp
out
or
pop
hlt
push
or
aas
rolb
mov
fstps
jmp
and
out
mov
jecxz
je
out
push
outsb
cwtl
add
cmp
fstps
in
xchg
in
sahf
bsr
fwait
sbb
out
xor
ret
into
dec
lods
mov
lret
add
jbe
xchg
sub
ja
out
mov
mov
stos
fiadds
xor
add
movsb
insb
push
aam
or
scas
in
pusha
add
mov
call
push
and
mov
pop
lret
sbb
mov
sub
jp
cs
cmp
arpl
sbb
repz
xchg
imul
decb
pop
pop
xchg
mov
mov
mov
sbb
xchg
test
pop
cmpsb
push
adc
test
mov
push
jns
mov
lds
jo
mov
dec
sbb
mov
push
cmc
clc
sbb
arpl
and
pop
dec
sbb
gs
orl
pushf
roll
negl
xlat
add
jmp
jecxz
xlat
dec
loopne
jnp
push
jbe
jmp
pop
addr16
add
icebp
je
mov
mov
sbb
xchg
lock
sbb
xor
popf
fists
hlt
mov
adc
cmp
xchg
lock
inc
fwait
movsb
neg
out
xchg
adc
pusha
out
cmp
jbe
dec
je
out
jnp
out
pop
negl
enter
jne
push
ja
int3
cmp
lods
and
mov
in
fidivs
jg
dec
push
repz
ret
lahf
repnz
insb
dec
cmp
aam
adc
and
push
mov
loopne
fldcw
cmp
decb
popf
adc
add
filds
xorl
mov
stc
and
jne
movb
jp
shlb
pop
leave
icebp
clc
push
sub
lds
mov
sub
dec
movsl
pop
push
or
repz
add
adcl
or
and
ja
cwtl
pop
in
jo
push
test
fldenv
add
adc
lcall
out
popa
and
fbld
push
xor
rolb
mov
mov
fcmove
jnp
cwtl
xor
xchg
mov
ljmp
or
adc
aad
dec
mov
lret
xchg
lods
jg
xchg
add
out
jecxz
fsubrs
loope
mov
int3
mov
repz
mov
leave
xlat
aas
push
iret
fimull
xor
or
sbb
jno
jbe
inc
cmp
mov
cwtl
out
mov
mov
mov
scas
test
xor
cld
sbb
addps
sub
pop
jns
xor
mov
jno
cmc
sub
xchg
mov
mov
test
cmpsb
sahf
add
sub
imul
mov
int3
fidivrl
shrb
mov
lret
loope
addr16
scas
arpl
lock
btc
and
inc
ret
jnp
jae
sub
psraw
bound
adc
lahf
icebp
dec
push
cmp
outsb
sbb
xor
shll
or
or
sti
jbe
push
ds
push
je
cltd
dec
into
lds
pop
and
xchg
mov
insl
jne
sub
xchg
ret
lods
jns
aaa
rcr
pop
inc
mov
cmp
jne
sub
sub
dec
pop
dec
inc
push
cmp
dec
cs
mov
sarb
lods
push
cmc
je
addr16
add
dec
icebp
aad
mov
ficomps
mov
push
loopne
popf
scas
mov
jmp
les
xor
pop
adc
mov
dec
add
fstpl
lods
into
or
mov
shr
cmp
mov
repz
push
cmp
scas
sbb
int3
or
icebp
mov
dec
lods
es
jb
sub
sarb
xchg
push
mov
sub
fmull
xchg
xor
shlb
out
es
cwtl
inc
add
stc
cmp
sub
shl
in
enter
push
rcll
mov
jb
jg
pop
mov
and
dec
out
hlt
push
lcall
flds
sub
and
inc
into
lods
add
push
sbb
dec
pop
sbb
rolb
sbb
or
pop
in
repnz
sub
inc
adc
or
idivl
jecxz
mov
ja
xchg
dec
outsl
jo
jae
cmc
in
sbb
jl
jge
or
rclb
stos
xchg
scas
xchg
push
mov
imulb
dec
inc
out
pop
cmp
int3
mov
xor
fisubrl
fdivr
stos
pop
pop
dec
pop
ljmp
dec
sahf
mov
pop
ljmp
into
jne
addb
sub
push
adc
adc
adc
enter
mov
daa
mov
negl
or
push
out
ja
in
adc
sti
mov
fwait
push
sub
repnz
lahf
jnp
inc
cmp
sbb
int3
mov
lea
jle
sbb
or
sti
ljmp
stos
int
xchg
call
xchg
icebp
in
jno
xor
bound
in
ss
loop
dec
insb
int
daa
sub
xor
outsl
and
jecxz
clc
sbb
sbbl
or
lcall
int3
xor
mov
lahf
out
xchg
pop
testl
jle
in
jmp
cmp
xlat
sbb
les
mov
mov
xchg
mov
stos
pop
stos
jmp
cmpsl
cmc
sbb
xor
sbb
scas
xor
dec
pop
test
inc
mov
or
mov
ret
dec
mov
pop
dec
jp
jae
lcall
mov
sbb
mov
leave
pop
ret
mov
lock
imul
jle
sbb
dec
cmpsb
adc
std
sub
add
mov
pop
andb
stos
mov
mov
mov
je
cltd
or
fisttpll
out
in
and
pushf
cmp
daa
adc
add
cwtl
popa
and
cmp
pop
je
mov
cs
dec
rorb
dec
int3
hlt
mov
adc
fisubl
mov
fstps
ja
mov
xor
imul
jae
inc
sbb
dec
inc
data16
int3
add
aas
in
inc
pop
movsl
inc
int
test
inc
jmp
pushf
adc
mov
push
ja
ja
sti
mov
push
xor
dec
dec
rcrl
lods
mov
lods
inc
popf
jmp
or
push
lahf
pop
mov
jl
cmpsb
push
mov
fbld
mov
mov
cmp
pushf
cs
jb
loope
pop
hlt
loope
fidivl
test
ja
das
sar
xchg
cwtl
insb
xchg
inc
cmp
popf
xor
mov
test
sub
imul
cmpsl
sub
sbb
pushf
rcr
subb
imul
mov
and
mov
cmp
push
addr16
aam
sub
loope
inc
int
or
lds
cmpsl
popf
test
mov
pop
jle
pop
lods
sbb
mov
cmp
inc
dec
and
bound
loope
ja
fcompl
inc
enter
mov
pop
add
add
xor
cli
add
cmp
push
sbb
pop
fwait
mov
cmpsb
stos
jno
xchg
mov
repz
testb
mov
outsb
lods
mov
ret
or
xor
test
stos
ret
mov
push
jne
xor
xor
lret
mov
push
mov
xchg
mov
inc
sub
enter
cmp
ja
pop
iret
repnz
xlat
jb
js
movl
mov
iret
push
mov
cmp
fs
mov
ret
sbb
pop
jle
out
enter
outsl
inc
mov
pop
imul
shl
and
stos
test
fldcw
adc
xchg
fstpl
hlt
cmc
mov
push
inc
sub
iret
sub
jle
addr16
dec
stos
loope
jb
fwait
arpl
test
cltd
mov
call
loop
adc
mov
lret
fildll
mov
mov
rorl
xchg
adc
jp
insl
cli
dec
sub
out
aad
fcompl
sub
push
pop
pop
push
sub
cs
and
dec
int3
push
dec
out
mov
xchg
mov
stc
pop
aam
insl
adc
stc
xchg
dec
xlat
fnstsw
sub
rol
ftst
xchg
jns
xchg
sbb
stc
push
mov
mov
pusha
sub
outsb
lahf
and
add
je
push
fistps
jecxz
mov
or
pusha
mov
inc
mov
mov
jl
inc
jle
into
or
mov
ja
cld
sub
xor
dec
xchg
jmp
fldt
fnsave
or
push
repz
loopne
rorb
adcl
stos
adc
mov
sbb
lock
sbb
jne
mov
cmp
addl
rcrb
cs
mov
movsb
cmp
scas
xchg
das
inc
or
ret
leave
hlt
lods
xor
cmp
nop
xchg
xor
push
inc
xchg
or
cmp
dec
imul
jle
inc
add
sbb
lcall
in
icebp
pushf
jle
aam
cmp
and
les
scas
xor
stc
lahf
xchg
lret
movsb
inc
mov
div
test
loop
push
push
pop
jecxz
mov
jae
mov
add
mov
nop
negb
shrl
push
inc
mov
xor
mov
jns
shr
mov
aas
shlb
pop
add
rcr
push
push
adc
cmpsl
cmp
call
add
cmp
jge
sbb
cmpb
or
pop
push
jge
push
lds
rolb
add
push
push
cltd
out
mov
mov
push
push
jae
sarl
inc
lds
xchg
in
mov
xchg
cmpsb
push
or
sbb
mov
stc
pop
fstpt
rorb
cmp
decb
mov
mov
repz
xlat
movsl
pop
cmpsl
mov
repnz
jbe
mov
sarw
mov
stc
xlat
icebp
stos
xlat
paddb
xchg
pop
call
mov
and
test
enter
dec
pop
cs
fs
mov
push
pushf
push
pushf
jo
mov
mov
mov
test
pop
cld
push
and
adc
inc
insl
mov
jecxz
jbe
jmp
xchg
call
and
sbb
pop
and
mov
sub
adc
jmp
sahf
mov
pop
cmpl
cwtl
repnz
inc
sbb
pusha
lods
push
sti
pop
shll
pushf
cmp
jmp
inc
inc
cli
xchg
sbb
mov
repz
xchg
or
cmp
push
mov
cmpsl
test
push
add
dec
push
add
dec
test
push
jp
mov
jo
inc
add
mov
mov
out
push
ds
scas
aad
sbb
movsb
jmp
xchg
loope
pusha
and
fwait
cmpsb
icebp
mov
lret
and
inc
vfnmsub132sd
daa
xchg
push
loopne
dec
loopne
pop
mov
rorl
push
sar
dec
xchg
clc
xchg
mov
sbb
xor
pop
push
jle
jnp
and
das
dec
and
in
push
mov
cmc
cwtl
adc
pushf
call
mov
clc
test
scas
movsl
sub
mov
andl
in
inc
lods
or
sub
sub
mov
lahf
or
ljmp
arpl
mov
jbe
sbb
loopne
ret
mov
aaa
inc
jecxz
rolb
and
cmp
xor
popf
pop
and
fistpl
int
xchg
testb
and
and
fs
sbb
push
fst
mov
mov
jne
dec
fs
lock
imul
shl
pop
shlb
outsl
cmp
adc
insb
sbbb
call
mov
dec
in
fdivl
mov
xor
dec
or
push
enter
loop
dec
test
mov
add
in
or
inc
mov
es
push
mov
ret
sbb
mov
lods
xchg
dec
mov
imul
mov
es
in
lret
clc
insb
jb
sbb
addb
stc
call
sarb
call
push
fsubs
jno
push
ja
mov
xor
stc
cmp
sbb
insb
sub
mov
ret
add
daa
imul
int
jne
cld
fisubl
mov
add
push
ret
sete
add
leave
hlt
inc
fisubrl
std
sbb
aas
add
mov
mov
cmp
movsb
test
test
push
mov
sub
sbb
pop
inc
sub
push
in
or
fnstsw
mov
mov
ds
cmpb
and
dec
fnstsw
sbb
xlat
in
mov
and
jne
sbb
aad
or
sbbl
inc
pslld
rep
lret
lcall
xchg
adc
call
sub
leave
jg
pop
jmp
mov
mov
sub
mov
add
pop
pop
ljmp
pop
shll
shll
lods
das
push
jnp
jg
test
int3
push
dec
subb
add
jb
lds
add
jnp
dec
push
aas
xor
sub
sbb
jg
mov
inc
and
or
inc
je
das
mov
js
and
js
sub
call
popa
fwait
stos
rorb
mov
les
ret
pop
das
sub
jecxz
in
dec
lea
adc
movsl
sub
adc
or
out
mov
testb
pop
pop
out
out
call
test
push
incl
mov
mov
cli
mov
sub
outsb
dec
or
pop
insl
add
subl
mov
ret
mov
mov
in
mov
jno
data16
sbb
add
adc
push
pop
int3
rorl
das
lret
fmulp
pop
pop
push
jbe
aad
dec
lock
out
jle
fcmovnbe
mov
jecxz
ja
xlat
add
lds
dec
add
into
adcl
gs
lds
negb
push
mov
cmp
jnp,pt
test
out
pop
pop
or
or
cmpsl
cli
cwtl
inc
adc
cmc
lret
push
ss
sbb
lret
out
or
sub
loope
in
and
int3
divl
cltd
mov
sbb
pop
or
fldcw
pop
orl
jb
add
sbb
push
and
in
cli
cltd
movsl
mov
mov
dec
cli
addl
jmp
mov
neg
rcl
test
xor
sub
push
test
lcall
xchg
mov
rcrb
int3
ficompl
cmpsb
push
ret
repz
sub
cmp
sbbb
sub
testl
add
aas
scas
icebp
push
les
pop
mov
mov
mov
mov
pop
addr16
daa
rcl
in
pop
mov
shlb
add
sti
int
pop
loop
sbb
lret
mov
nop
fildll
and
cmp
rorl
mov
inc
xor
lods
movsb
lods
sbb
push
mov
jp
push
sti
repnz
loop
rcll
popf
xchg
jns
int3
dec
or
scas
imul
ljmp
push
push
cmp
imul
fsubrl
vmread
pop
add
mov
pcmpgtb
pop
aad
outsl
hlt
gs
outsl
movsl
mov
jnp
jle
pop
les
lods
test
sub
sahf
push
xor
fs
mov
lret
cmp
test
jbe
dec
nop
xchg
or
dec
scas
mov
in
xor
shlb
push
pop
sti
pop
not
xchg
mov
daa
adc
and
pushf
xor
out
out
add
cmpsb
and
filds
pop
mov
adc
jmp
xor
jle
xor
das
orl
cmp
inc
in
pop
adc
ret
fisubs
and
outsb
popa
and
leave
mov
repnz
jno
jns
rcrl
pop
sub
movsl
hlt
movsl
pop
daa
lods
lock
and
lret
jecxz
enter
xor
and
clc
push
bnd
call
leave
scas
movsl
jl
nop
jecxz
inc
out
mov
loopne
mov
int
stos
repz
push
out
pop
mov
ret
or
aaa
mov
ret
fld
cmp
cli
cmp
xchg
sbb
icebp
add
jge
std
test
movsb
insb
mov
push
mov
stc
xchg
mov
data16
ret
and
loopne
xchg
fwait
xchg
call
jb
movsl
and
in
pop
mov
xor
fsubr
in
popa
lcall
jno
aad
cmpsb
mov
mov
and
lods
adcl
lahf
outsl
cmp
mov
adc
and
iret
push
or
dec
pop
add
mov
push
jne
arpl
sarb
adc
lahf
pop
js
enter
add
dec
rol
mov
xor
outsb
add
out
out
aas
andb
int
or
andl
xor
sbb
mov
cmp
pusha
bound
pop
cmc
mov
cmp
jmp
dec
roll
mov
iret
arpl
mov
nop
sub
pusha
pop
mov
outsb
mov
xchg
xor
flds
negl
dec
xor
cld
int3
mov
in
leave
leave
lcall
dec
push
clc
sbb
sti
pop
inc
lret
into
das
dec
cmp
int3
insb
lods
fdiv
mov
das
push
xchg
shrb
jmp
lcall
or
out
pop
add
imul
xchg
sub
cmc
xor
ss
inc
cmp
out
push
sbb
cmpsl
cmp
fsub
xchg
push
cmp
outsb
add
test
mull
shlb
ja
scas
pop
push
xchg
fldt
in
in
xor
xor
pop
icebp
or
stos
pop
shll
pop
scas
adc
fcoml
mov
pop
or
pop
xor
in
mov
fwait
xor
jns
negb
outsl
cmpb
jl
cwtd
mov
cmp
jnp
xchg
ficompl
push
incl
jl
test
add
shlb
cmc
push
pop
push
ds
roll
int3
pop
cmc
sbb
mov
mov
inc
ret
popa
pop
packuswb
popf
data16
mov
mov
add
lea
cmp
jne
fcmovne
pop
and
cmp
in
ljmp
or
xor
mov
mov
in
mov
xchg
pop
fdivp
daa
sbb
cld
stos
lret
push
neg
arpl
scas
mov
xor
xor
dec
adc
or
outsl
pop
xlat
dec
jp
vpabsb
fistl
cmpsb
mov
lret
mov
in
cld
subb
fildll
jbe
xor
sahf
movsl
pusha
push
cmp
clc
mov
push
add
cli
cmc
push
mov
xchg
adc
nop
dec
cltd
push
loop,pn
add
mov
inc
jne
rol
push
outsb
inc
cld
pop
lret
sbb
mov
in
sub
sbb
jl
test
add
mov
sbb
xchg
cmpb
loope
mov
lcall
add
xlat
lods
or
stos
sub
fs
hlt
pop
adc
loope
pop
push
sbb
cmc
jae
adc
pop
or
sub
int3
fs
cld
cmpsl
jge
push
mov
imul
sahf
sub
pop
push
repz
aad
aas
ds
xor
jae
stc
cmp
sbb
xchg
icebp
pop
outsl
lret
ret
fcos
sti
jo
pop
xlat
std
rcr
and
pushl
shrb
popa
or
mov
xchg
pop
and
xchg
mov
push
aad
jp
movsb
outsb
and
ficoms
mov
fsts
and
and
pusha
movsl
pop
dec
or
popa
push
mov
sub
xor
jle
jecxz
scas
scas
outsl
mov
add
sub
xor
call
test
sbb
cmp
roll
dec
adc
dec
stc
leave
cli
mov
stos
add
lahf
cs
in
rorb
mov
arpl
mov
mov
call
sub
mov
cmp
icebp
jg
dec
jo
dec
cmp
enter
pop
aas
mov
xchg
icebp
pop
enter
das
sub
mov
pop
xor
dec
out
fsubrs
push
lahf
js
shlb
mov
cmp
sbb
add
call
ret
mov
out
sar
cmp
jbe
pop
mov
inc
adc
sbb
adc
mov
shl
xchg
loope
insl
aad
push
sar
add
add
inc
pop
xchg
sahf
hlt
pop
shrl
shll
scas
pop
mov
add
frstor
ret
loopne
pop
dec
lret
mov
aaa
pop
cltd
test
mov
add
rclb
addr16
repz
cmp
dec
or
cmpsl
sub
push
pusha
lahf
mov
jmp
ficomps
js
pushf
sub
lret
pop
push
inc
fldcw
mov
cmc
dec
test
stc
xlat
ss
sub
int3
push
xchg
and
pop
dec
add
ss
addr16
sbb
pop
in
scas
roll
aas
add
cmpsl
iret
xor
push
in
sti
scas
push
inc
shrb
rcrl
insl
mov
jb
or
int
jmp
cs
cmp
mov
add
or
mov
icebp
call
scas
sub
orl
daa
les
in
or
xchg
test
in
lea
jb
bound
or
mov
add
mov
or
inc
orb
mov
xlat
and
fisubrs
test
aas
mov
iret
sub
and
adc
jnp
fbld
rcrl
pusha
pop
cld
add
and
fsubrl
push
pop
sbb
movsl
decb
cwtl
push
jb
fst
in
insb
push
mov
scas
sub
js
and
das
pusha
movsb
or
mov
enter
lret
into
int3
add
fadds
sbb
mov
loopne
clc
push
add
and
shrl
add
dec
xchg
push
mov
out
push
inc
pushl
hlt
cmp
scas
inc
pop
xchg
inc
cld
push
or
dec
or
adcb
out
push
divl
xor
and
inc
or
pop
loop
and
adc
arpl
push
movb
jb
add
mov
mov
test
xchg
pop
dec
push
lock
jne
sub
repnz
cmpsl
jp
xchg
outsl
jle
cmp
or
inc
mov
stc
mul
out
sub
pop
or
jmp
loopne
outsb
xchg
pop
movl
xchg
out
sub
pop
adc
sbb
leave
sbb
loope
xchg
fisubl
inc
adc
adc
lea
mov
test
movl
adc
mov
and
scas
aad
out
push
cmp
adc
adc
lahf
scas
in
jge,pt
ds
and
cmpsl
xchg
shl
ja
add
xchg
sub
cmpb
or
push
fs
mov
inc
mov
mov
fidivs
push
repz
push
push
mov
movsl
leave
call
fisttps
pop
add
aaa
inc
in
das
imul
add
push
es
jg
dec
xor
inc
rolb
sar
xchg
pop
jo
out
mov
pop
sub
sti
xchg
lods
popf
sti
dec
xchg
dec
clc
sub
adc
clc
les
outsb
cmp
jbe
testb
push
in
push
outsl
arpl
cmp
xchg
in
jp
adc
daa
xchg
jno
xchg
xor
mov
and
imul
sbb
push
sbb
hlt
and
ljmp
mov
mov
cmc
sub
push
nop
sub
call
jp
push
add
or
pop
jp
pop
lahf
jge
sbb
mov
pop
cmp
xlat
pop
push
sub
mov
into
sbb
and
pop
push
cmp
mov
xchg
loope
mov
leave
sub
jo
and
add
pop
fisubs
xor
mov
dec
gs
push
scas
push
cmc
dec
push
data16
push
push
adc
fcompl
and
cs
add
inc
ss
popa
jg
mov
bound
fmul
ja
pop
pushf
aam
lock
popa
add
in
dec
leave
add
mov
jne
or
or
push
pusha
push
scas
mov
test
sub
jnp
or
sti
dec
test
loope
and
push
lods
or
gs
outsl
std
pop
dec
jg
into
js
dec
mov
push
ljmp
es
leave
out
mov
cmp
mov
bound
aaa
add
and
popf
adc
push
mov
test
cmpsl
movsl
dec
pop
push
mov
and
push
fisttps
xor
test
in
dec
insl
clc
jp
push
sbb
aad
mov
lock
push
scas
xchg
or
dec
xlat
fistl
nop
mov
cmp
push
and
mov
icebp
pop
sub
lcall
push
inc
pushl
andb
mov
imulb
dec
ror
fs
insb
and
sbb
xchg
imull
add
xchg
ret
push
pop
jo
adc
sahf
adc
fldl
pop
imul
ja
xor
pop
cmp
mov
ffree
cmp
add
adc
arpl
test
mov
add
inc
test
xchg
pop
xchg
add
xor
in
mov
fmul
lahf
inc
mov
mov
int3
stos
les
sub
jle
pop
inc
jb
mov
push
push
cmpsb
jne
or
dec
popa
lods
cmpsb
mov
mov
mov
fists
sub
pop
cmp
mov
ljmp
lods
into
xlat
movsl
jb
push
xchg
mov
or
cltd
cmp
scas
pop
enter
lcall
clc
cmp
adc
ret
mov
lea
sbb
cmpl
xchg
inc
test
pop
xor
pop
or
pushw
mov
sbb
add
xchg
cmc
add
mov
popl
shl
push
add
and
imulb
les
and
cmpl
or
bound
aam
out
imul
test
inc
adcl
sub
inc
sbb
mov
push
das
pop
push
fisubrl
dec
into
gs
sub
insb
push
faddl
mov
movsb
nop
imul
push
sti
push
adc
xor
mov
dec
pop
out
push
test
addr16
cmp
arpl
xchg
or
ss
xchg
fisubl
mov
stos
and
mov
jo
imulb
lcall
sub
mov
push
xlat
pusha
leave
and
or
aaa
insb
cwtl
cld
pop
and
mov
mov
mov
or
aas
xchg
lods
jns
arpl
shrb
mov
enter
cmp
xlat
inc
imul
xor
mov
fsubs
mov
ja
cmp
push
mov
adc
and
mov
push
and
icebp
jns
dec
xchg
outsl
subl
repnz
movsl
pop
hlt
lahf
xchg
outsb
xor
dec
nop
das
dec
call
inc
cltd
insb
adc
xchg
insb
mov
lods
ret
rcrb
stos
mov
mov
push
jle
in
push
lahf
jbe
or
hlt
adc
inc
fldt
ret
loop
int3
leave
icebp
mov
jno
aas
and
pop
outsl
sti
loopne
cld
pusha
out
dec
xor
sahf
test
imul
movl
dec
jmp
dec
cmpsb
daa
push
sbb
xor
int
mov
or
leave
std
daa
fisubrs
imul
xor
dec
lahf
pop
les
push
rcll
mov
cmp
inc
inc
push
jmp
insl
sbbb
out
icebp
lea
xchg
add
mov
outsb
xor
cld
jecxz
or
mov
aam
mov
ror
stc
ret
dec
enter
rcrl
sub
sub
xchg
dec
mov
test
fisubs
iret
adc
inc
push
push
int3
sbb
dec
sti
sub
inc
cld
adc
add
push
push
and
fcomip
clc
dec
stc
test
sbb
xchg
inc
add
mull
or
sub
lret
inc
inc
addb
mov
push
shl
outsb
cld
cmpsb
loop
lods
ljmp
loope
inc
fmull
dec
sbb
cli
and
jg
test
mov
out
addl
pop
cmc
add
rcll
xor
jbe
mov
sti
dec
icebp
inc
jg
notl
sbb
and
in
xor
xor
adc
sbb
xorb
in
sub
jnp
sbb
or
fldcw
cmp
mov
adc
mov
or
and
xchg
mov
imul
cmp
shll
push
js
outsb
fsubs
jl
repz
dec
cmc
lret
xor
cmp
jne
addr16
imul
and
addr16
or
mov
mov
dec
lcall
pop
cmp
inc
sbb
cmp
call
adc
pop
fisubl
leave
push
es
jmp
jae
jae
mov
mov
sub
adc
addl
mov
or
mov
mov
iret
push
push
xchg
xchg
into
xor
test
bound
shr
add
cli
push
xor
push
add
popa
mov
sub
aam
add
mov
sar
adcl
fistpl
push
lods
or
mov
bnd
jnp
inc
mov
mov
add
jle
jecxz
pop
lods
pop
out
cmp
and
jae
test
repnz
lahf
lods
dec
xor
mov
adc
js,pn
push
cmp
or
movsl
cmpl
out
xchg
push
cmp
lret
in
cmp
pop
daa
stos
mull
pop
stos
outsl
and
jecxz
cltd
test
imul
mov
lock
pop
cmp
push
xor
dec
neg
sbb
bound
mov
sub
std
cld
in
push
push
fsts
inc
mov
mov
jmp
sub
movsb
mov
idivb
mov
xor
ficoms
fs
sub
xchg
mov
jecxz
and
adc
adc
aas
lock
or
and
mov
rorb
mov
add
add
int3
andl
adc
in
inc
bound
sti
mov
xor
je
mov
sbb
out
rorb
mov
fsincos
dec
adc
pop
jle
sbb
xchg
popf
cmp
ret
inc
xlat
xchg
mov
roll
adc
filds
out
sarb
cmc
pop
es
pop
and
sbb
sub
dec
bound
aaa
mov
dec
jnp
mov
and
sub
out
lea
nop
out
jae
popf
sbb
adc
in
pmovmskb
scas
mov
stos
inc
mov
lret
push
lret
dec
aad
fistl
cli
insl
sub
xor
jno
inc
ds
adc
xor
ss
adcl
xor
adc
jb
sub
lock
das
loope
sti
adc
sbb
push
inc
out
mov
mov
fs
mov
pop
hlt
add
jecxz
jl
inc
add
int
or
mov
test
xor
faddl
gs
jnp
mov
popa
sti
push
xor
sti
adc
fimull
inc
and
ljmp
cmp
push
cmp
cmp
mov
addr16
add
shrl
sub
es
adc
in
jge
lock
mov
mov
mov
insb
mov
outsb
movsb
addr16
and
mov
lods
clc
mov
in
fsts
daa
cmp
push
loope
ljmp
sbb
push
test
test
test
xor
mov
sbb
ljmp
cwtl
jmp
ljmp
cli
std
stc
out
pop
pusha
dec
cmpb
sahf
inc
in
cmpsb
add
mov
sbb
adc
jae
sbb
stc
pushf
jbe
lahf
mov
or
mov
and
sub
out
mov
repz
xor
push
lcall
inc
xchg
cmpsl
jns
out
les
je
push
xchg
jmp
push
mov
push
test
mov
fwait
jmp
xchg
jbe
adc
cmc
sti
push
inc
das
inc
pop
sub
iret
enter
aas
shl
aas
mov
leave
inc
pusha
aad
movb
gs
popl
aam
outsl
lods
loope
cmp
test
data16
shl
rcrb
int3
scas
int
shll
mov
es
shlb
pop
dec
idivb
dec
sbb
jp
mov
lock
popa
in
lock
xor
wbinvd
popa
add
test
cmp
add
in
movsb
push
mov
xchg
mov
pop
lock
sti
mov
insl
mov
cmp
and
nop
adc
mov
xchg
xchg
into
and
xchg
sbb
xor
rcl
push
cmpsb
cmp
jnp
fsubl
getsec
mov
jl
or
xchg
scas
jno
insl
pop
pop
or
push
push
xor
or
pop
xchg
ror
call
jg
adc
cmp
push
adc
hlt
pop
xchg
pop
cmp
clc
sbb
jle
sbb
mov
call
mov
popa
jp
mov
out
lret
data16
push
sub
xchg
jo
out
jge
mov
pop
jb
dec
nop
cli
inc
ja
push
sub
cld
aas
aaa
cli
inc
sbb
sahf
mov
inc
push
dec
xlat
leave
cmp
cmpsl
pushf
push
jbe
insb
test
popf
mov
dec
lea
sub
mov
lock
pop
pusha
dec
xchg
mov
mov
mov
sbb
jp
inc
das
and
sbb
mov
push
xchg
xor
mov
mov
push
aas
pop
mov
aaa
add
inc
pop
clc
or
popf
out
jge
insb
and
push
mov
jae
enter
jns
jns
pop
repz
call
cmp
sbb
inc
pop
jb
cmpsl
adc
punpckhbw
push
xchg
fmuls
adc
jb
push
sub
arpl
dec
push
loopne
adc
xor
or
jmp
adc
or
adc
mov
das
rclb
aad
jg
mov
mov
int
jge
jnp
addr16
inc
dec
test
push
ret
ficoml
mov
sbb
mov
mov
call
cld
mov
and
dec
cmpsl
pop
push
mov
insb
ret
in
xchg
dec
inc
sbb
push
cmp
div
xchg
mov
fdivs
mov
xchg
negl
push
enter
mov
push
dec
pop
xchg
mov
mov
arpl
rolb
hlt
mov
add
cmp
pop
orb
jge
sub
push
mov
lret
xchg
sti
sbb
or
inc
push
mov
inc
shr
inc
cmp
outsb
insl
stos
sbb
or
mov
ds
clc
call
clc
xchg
in
shl
push
call
ja
push
aaa
fldenv
lret
ja
xor
and
pop
stos
fs
cmp
mov
adc
mov
or
sub
jle
push
mov
mov
iret
fwait
fwait
test
popf
mov
lret
outsb
out
ret
inc
xor
add
les
xchg
lods
mov
int3
xchg
fcompl
push
dec
mov
outsb
loopne
test
push
add
inc
mov
mov
xor
repz
inc
cmc
push
add
das
popf
ret
aas
xchg
sub
ret
jecxz
xor
mov
adc
dec
pop
packsswb
movsl
push
or
pushf
popa
nop
sub
sub
ret
inc
mov
in
pop
arpl
mov
imull
ss
sbb
cld
pop
repnz
mov
ret
fcmovnbe
dec
add
and
mov
subl
ret
sub
insl
add
xchg
lea
test
arpl
outsb
xor
pop
xchg
std
push
icebp
add
jp
or
stos
enter
jg
sbb
roll
ss
xchg
test
mov
lods
dec
leave
sbb
jns
stos
lret
jmp
bound
dec
loopne
xor
jp
test
adc
test
adc
dec
sbb
xor
sbb
data16
ja
xor
fucomip
push
sub
push
scas
rclb
addb
rolb
or
push
jo
jo
data16
lcall
test
jle
loopne
stos
dec
test
adc
into
jecxz
cmp
mov
pop
fstps
xor
out
flds
add
jp
and
dec
mov
hlt
lods
arpl
rcrl
aaa
jle
add
scas
xchg
ja
adc
dec
cmpsl
repz
popl
in
lcall
sub
fbstp
sti
push
clc
pop
push
xor
pop
nop
adc
scas
adc
sbb
fwait
data16
nop
test
mov
adcl
sbb
or
pusha
popa
frstor
jno
xor
rcll
sbb
cmp
mov
xor
mov
jl
in
dec
ljmp
or
jne
leave
in
fdivp
jp
xor
sbb
inc
pop
adc
xor
add
ffree
or
call
and
adc
pop
sbb
sub
mov
std
adc
push
in
addr16
pop
icebp
sbbb
sub
pop
inc
cmp
jae
and
mov
push
fsubs
scas
and
or
xlat
and
jmp
stos
movsl
mov
sahf
test
or
inc
mov
xchg
lret
xlat
fisttpll
sub
test
call
das
dec
je
sbb
sbb
mov
lret
cmc
je
add
xor
stos
and
ss
add
xchg
imul
std
mov
mov
add
xor
repnz
dec
cmp
es
sti
fidivrs
ja
nop
mov
faddl
jmp
push
and
inc
inc
and
pop
jnp
xor
xor
pop
movsl
dec
cld
popf
adc
cmp
insl
mov
test
in
mov
loope
xchg
mov
jle
aad
jl
stc
adc
mov
or
notl
push
divl
dec
sub
daa
xor
jns
xlat
add
and
mov
cmp
fcmovb
roll
lods
add
sbb
mov
push
and
inc
movl
dec
jmp
lds
insl
xor
xchg
push
xchg
in
xchg
les
mov
inc
cmc
mov
cmc
jecxz
push
pushf
rep
mov
fistpl
pop
lcall
or
dec
pop
mov
sub
jns
add
incb
and
inc
lods
cmc
xlat
das
test
das
pop
xchg
xor
xchg
mov
jmp
pop
and
inc
inc
insb
mov
test
insb
lret
stos
rcr
or
cltd
jb
xor
push
fbld
movsb
fsub
cwtl
jns
mov
pusha
les
mov
add
xchg
mov
push
fcmovb
mov
inc
cli
aaa
test
jbe
jo
xchg
sbb
in
push
ds
xchg
repz
cltd
lret
mov
add
shlb
popa
into
push
push
imul
in
push
adc
adc
push
push
inc
adc
mov
jns
fwait
stc
leave
pop
jge
sub
lahf
cmp
mov
inc
jnp
in
in
inc
sub
push
fidivl
sarb
or
repnz
jp
mov
mov
fnsave
jb
ret
inc
pop
addb
inc
lock
mov
mov
gs
jmp
lock
cli
cltd
cwtl
and
adc
xchg
aad
and
inc
push
in
cmp
inc
xchg
repz
xchg
inc
sub
daa
and
clc
sub
addb
jmp
out
dec
add
testb
ror
sbb
in
xchg
xchg
fildll
xchg
ficomps
imul
sbb
ret
pop
aam
mov
mov
lods
mov
sahf
xor
inc
pop
lock
pop
mov
mov
dec
mov
inc
pop
jecxz
sub
jmp
shl
mov
loopne
ret
outsl
adc
xchg
dec
or
lods
pop
cld
pushf
dec
mov
mov
loop
mov
cmpsb
insb
out
adc
or
out
and
xchg
or
push
mov
int
js
adc
std
inc
or
cld
and
sbb
sub
jg
mov
in
ret
test
les
aas
cs
mov
or
ja
in
mov
xor
and
mov
jne
enter
sbb
jecxz
jbe
data16
pop
popf
pop
mov
jo
mov
mov
mov
mov
ds
push
lock
movsb
push
dec
scas
xor
sbb
scas
lock
push
or
and
inc
call
pop
mov
lock
and
stos
mov
and
push
add
rorl
adc
xor
mov
jae
rcrb
clc
std
jp
adc
add
adc
xor
dec
sbb
sar
inc
xchg
xorl
or
cmp
repz
mov
cmp
fadds
jns
jnp
xor
incl
aaa
test
push
inc
rcrb
inc
cmp
dec
jae
sbb
and
outsb
ret
fldcw
es
or
aas
xchg
imul
xchg
incb
add
fiadds
in
sbb
into
or
sahf
mov
clc
add
loop
rorl
das
shlb
jge
mov
dec
cmpsb
leave
or
ja
mov
les
cmpb
and
adc
andb
jne
pop
aas
xchg
add
sbb
sub
ja
mov
xchg
jg
push
add
jne
adc
cmpsb
jnp
jbe
aam
popf
pop
mov
cmp
pusha
pop
jecxz
xchg
and
cmp
sbb
hlt
mov
stc
ret
mov
xor
insl
add
sar
inc
insl
mov
leave
inc
push
mov
adc
sub
push
movsb
sbb
adc
pop
add
sub
imul
and
inc
mov
adc
inc
pop
pop
inc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ss
add
push
jae
daa
test
mov
xchg
cmp
nop
clc
dec
insb
mov
and
sub
paddd
xor
or
lcall
mov
pop
fmuls
fisttpl
hlt
lahf
bound
mov
cli
push
pop
arpl
xor
filds
out
push
call
ja
inc
loope
add
mov
push
xchg
cmpsb
shrl
dec
xlat
out
inc
dec
dec
pop
je
add
pop
rcrb
pop
mov
out
xor
mov
fistpll
test
fstp
aaa
loopne
add
fimull
jae
gs
or
cltd
push
push
stos
inc
jge
pop
les
jo
push
test
cmp
push
in
cmpsb
mov
mov
xchg
push
fimuls
imul
cwtl
outsl
out
jge
dec
jns
jnp
stos
sbb
xchg
pop
or
testl
adc
pushf
or
or
movlps
sub
pop
enter
or
clc
cli
jb
ja
inc
xchg
lods
mov
inc
xor
and
fwait
hlt
jecxz
pop
outsb
dec
dec
jmp
pavgb
mov
or
or
sbb
cmp
stc
pop
lods
hlt
add
add
jno
fwait
lahf
mov
repz
popa
xchg
and
shrl
mov
fstpl
push
adc
lods
mov
lea
jae
mov
mov
popa
jo
mov
pop
jo
insl
dec
cmp
roll
add
push
add
sbb
movb
stos
dec
or
shr
xchg
lods
dec
fwait
jp
les
mov
stos
fimull
bound
imul
push
dec
sbb
and
jnp,pt
and
movsl
or
lahf
test
push
inc
mov
lods
or
mov
mov
push
push
aaa
dec
cmp
in
divl
mov
xchg
pop
sub
adc
dec
aad
lret
dec
imul
bound
push
insb
mov
push
cld
lds
fbstp
test
imull
jo
and
ds
jnp
push
push
and
cmp
dec
lcall
push
fwait
lret
push
push
inc
dec
insl
out
jecxz
cmp
out
dec
xchg
sub
cmp
xor
jg
push
iret
dec
jne
cld
xor
das
cmp
sub
mov
in
sub
repnz
mov
xor
lea
pop
ss
jnp
iret
test
push
inc
push
pusha
lret
shrl
lea
adc
fisttps
shll
repnz
jns
jecxz
icebp
and
jp
mov
cltd
data16
jecxz
fsubs
insb
ficompl
cs
mulb
out
mov
hlt
scas
nop
xchg
inc
cli
test
repz
fsubs
cltd
ss
jmp
nop
jge
lds
arpl
and
pop
jns
arpl
sub
sahf
insl
inc
adc
scas
dec
and
xor
ljmp
jecxz
mov
or
les
sbb
xchg
xchg
loope
mov
mov
add
outsl
out
sbb
ds
stc
dec
fists
add
test
sti
addl
adc
mov
std
stos
xlat
push
dec
cli
dec
cmp
push
ljmp
call
mov
pop
scas
std
jg
inc
outsb
cli
insl
sub
dec
jmp
jp
xchg
jbe
mov
arpl
ret
cmp
sbb
inc
sti
fsubrs
stos
arpl
mov
outsb
xchg
pop
lods
mov
lods
idivb
sbb
inc
jno
inc
pop
fwait
cli
repz
adc
scas
mov
mov
xor
sub
gs
cmp
pop
jmp
xchg
pop
inc
push
out
fnstsw
jnp
jns
push
popf
jmp
sub
inc
lret
cmp
sbb
xchg
dec
cmp
lcall
push
pop
shll
movsl
cmpb
std
popf
mov
pop
fwait
movsl
enter
xchg
dec
or
jge
push
fs
outsb
push
xor
in
shl
fsts
fisttps
xchg
loop
cmp
repz
push
sarl
fnstsw
mov
xor
jbe
pushf
ss
in
jns
popf
imul
js
sbb
push
inc
andb
shll
insb
sub
fdivs
js
and
jecxz
dec
xor
pop
xor
ret
incl
push
int3
mov
hlt
test
adc
pop
sub
jmp
aaa
push
pop
dec
loop
dec
das
jl
out
ficomps
cmpsb
ja
lds
aad
lea
adc
test
call
push
test
test
push
and
inc
cmp
mov
lret
push
xor
push
lea
popa
data16
sub
xchg
iret
pop
sahf
je
xor
sub
out
enter
mov
mov
xlat
inc
jp
pop
in
je
add
clc
jns
pushf
push
aam
lret
pushf
or
decb
push
mov
pop
rorb
imul
cmp
or
sub
rcpps
adc
adc
adc
lods
cs
mov
jo
add
por
data16
push
ds
lock
jmp
pop
cmpsb
xchg
adc
sarl
pop
popf
jnp
rcrb
mov
test
fs
mov
xchg
in
pop
arpl
mov
inc
std
repnz
pop
pop
xchg
xchg
or
mov
les
pop
jnp
xchg
ss
push
sti
xor
inc
ljmp
imul
lahf
stc
cltd
sub
das
xor
cld
pusha
mov
mov
fidivl
or
push
or
aad
inc
mov
cmp
inc
fldl
imul
or
ljmp
push
out
sub
dec
mov
daa
movsb
addr16
icebp
imul
ss
in
popa
in
mov
push
ret
leave
cmp
enter
sbb
xor
sub
js
cmp
lods
js
push
stos
sbb
cmpsl
mov
mov
fadd
ljmp
popa
pusha
mov
out
push
fwait
mov
jp
mov
das
shlb
aad
fcmovbe
cmp
lret
add
inc
cmp
sbb
cmpsl
cmpsb
scas
adc
bound
dec
flds
jb
stos
in
or
in
push
pop
cmpsb
addl
mov
scas
repz
and
pop
iret
loopne
xor
outsb
sub
sbb
jo
inc
or
pop
mov
pop
and
inc
mov
xchg
jne
cwtl
xor
data16
roll
jbe
cmp
xor
movsl
xchg
std
adc
push
adc
in
and
ret
movsb
mov
push
bound
sarl
rorl
pop
jo
pushf
les
dec
add
mov
push
xchg
aas
call
cmpsb
lods
rolb
jl
je
in
movb
movsl
jp
add
cld
jp
or
dec
xor
dec
jo
and
sub
mov
add
data16
and
loopne
movsl
aas
jbe
scas
adcb
shll
mov
cli
aad
leave
and
sub
mov
jne
push
sahf
mov
push
jo
add
push
in
pushf
mov
lret
sbbb
les
mov
mov
into
xchg
pop
aas
movd
test
mov
inc
test
sahf
aaa
imull
mov
rol
mov
data16
cmp
es
lret
jl
sub
jg
incb
and
outsb
punpckhwd
adc
test
mov
mov
dec
mov
jnp
call
scas
cmp
sbb
stc
xor
xchg
or
sub
test
sbb
mov
mov
je
lahf
sahf
insl
cmp
sub
stos
jae
dec
mov
xor
cmp
clc
outsl
inc
inc
scas
insl
inc
aaa
enter
rcll
adc
adc
push
les
mov
push
gs
and
pushf
ds
into
adc
cmp
ret
lds
enter
test
mov
aam
popf
stos
out
sub
or
push
mov
out
xchg
stc
rcrl
dec
push
mov
aaa
ja
lds
aad
lods
rorl
shlb
popa
or
inc
rolb
push
pop
rol
jp
cli
incl
gs
fsubs
inc
mov
les
je
call
push
js
cs
test
sbb
sysret
mov
jo
loope
mov
xor
sbb
mov
mov
mov
or
push
xchg
xor
dec
push
dec
sbb
inc
fdivl
inc
mov
and
mov
loopne
mov
cltd
cmp
scas
add
xchg
std
sub
adc
and
add
je
in
addl
pushf
jg
adc
repz
addr16
cmpsl
cmpsl
repz
mov
test
adc
lds
stc
push
pop
cltd
mov
ret
aas
subb
mov
pop
cmp
or
jo
mov
adc
inc
xor
add
dec
cmp
mov
jp
repnz
xchg
loop
push
mov
fsub
ljmp
mov
inc
test
mov
mov
lcall
sbb
dec
rcrb
shl
inc
fstl
jo
aas
insb
pop
out
movsb
iret
repnz
movntq
daa
les
lret
insb
mov
cli
push
andb
add
inc
lods
and
leave
mov
mov
nop
nop
mov
push
sbb
mov
popf
and
dec
loopne
mov
jle
jo
ret
int3
push
mov
repnz
in
hlt
or
loope
or
ljmp
shrb
mov
jl
push
mov
movsb
outsb
leave
xchg
and
scas
cld
flds
sbb
loopne
jae
jecxz
aaa
xchg
inc
push
mov
test
xor
push
or
jbe
push
add
mov
xor
cwtl
leave
dec
push
cmc
sub
cli
push
and
sbb
and
jmp
push
jge
pop
into
xchg
jg
icebp
les
push
mov
pusha
lods
push
pop
cmp
popf
pop
insl
lds
shlb
mov
int
and
adc
scas
jnp
sbb
aad
fs
and
test
jae
or
sbb
lods
adc
test
pop
js
addb
stos
popa
cs
insb
sub
fidivl
fmuls
add
movsl
into
cmc
fcmovnu
incb
inc
pop
je
sub
add
aad
cltd
inc
push
sbb
cli
jmp
xchg
push
insl
mov
push
sahf
xlat
inc
iret
dec
dec
test
cli
xor
scas
pop
rorb
or
pusha
rcl
adc
in
scas
data16
mov
lret
test
xor
mov
cmc
push
sub
push
mov
icebp
mov
pop
addl
cmc
mov
sub
pop
mov
adc
push
addr16
iret
sbb
aad
cmp
scas
mov
lcall
jl
and
ja
je
call
js
inc
std
enter
ffree
fnstcw
sbb
pop
push
push
mov
jg
clc
sub
outsl
cmp
xchg
andb
pop
xchg
add
xor
sbb
fisttpl
lret
sahf
mov
stos
inc
out
cmp
ret
mov
ss
stos
xor
stc
mov
into
sub
pop
test
fwait
jne
push
dec
stc
push
sbb
dec
dec
in
jns
ret
clc
cld
stos
fisttpll
outsl
push
mov
pop
mov
ret
xor
add
sub
call
cltd
mov
pop
lret
push
pop
jmp
cmp
rcr
sub
push
xchg
xor
dec
xlat
mov
sub
and
inc
popa
pop
mov
std
jae
xor
mov
cmp
das
call
push
mov
adc
adc
fadds
add
xor
xor
pop
sub
cmpsb
xchg
or
nop
mov
mov
in
adc
outsb
mov
rcrl
outsl
ret
in
mov
dec
jecxz
shl
mov
jne
outsl
xor
call
mov
dec
out
push
sbb
std
rcl
mov
dec
mov
pop
xlat
push
xchg
cmc
sbb
jg
push
fwait
repz
inc
out
push
sbb
dec
push
cmpsl
adc
rolb
sahf
aas
sub
cmp
xchg
fmul
xchg
xchg
fistl
sub
xchg
adc
je
push
fwait
push
fsubl
out
int3
mov
jae
test
fsubl
mov
scas
ja
arpl
push
sub
loope
dec
lds
add
aam
pop
sarl
sub
insl
mov
and
out
push
in
mov
sub
push
loope
sbb
cmp
push
add
popf
sub
fwait
inc
mov
sub
jae
jp
les
pop
daa
or
jmp
rolb
and
rclb
psubq
or
popa
out
push
push
fxch
xchg
repz
jmp
push
call
pushf
loopne
pop
nop
mov
shrl
dec
mov
cmp
push
pop
not
cmc
cmpsb
mov
mov
jl
or
rolb
icebp
rcll
xor
jne
rcll
jp
or
sarb
add
scas
add
jbe
das
loop
xchg
dec
adc
shlb
push
jecxz
sub
insb
out
xchg
lcall
xchg
adc
data16
out
insb
icebp
fdivp
decb
jb
mov
push
pop
loop
mov
jne
sbb
adc
movb
in
pop
jp
mov
and
mov
mov
rcll
sub
loopne
sbb
adc
ffreep
push
movsl
iret
push
pop
mov
mov
cmp
mov
inc
shll
std
jg
mov
imul
loope
mov
xchg
movsl
mov
mov
mov
jmp
movl
inc
packsswb
xor
dec
hlt
sahf
aam
andl
out
adcb
std
add
xor
xor
xor
xor
xor
