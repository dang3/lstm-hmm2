add
lea
push
push
push
call
add
cmp
je
sub
pop
neg
sbb
pop
and
pop
add
pop
add
ret
push
push
call
lea
push
push
push
call
add
cmp
jne
pop
pop
pop
mov
pop
add
ret
cmp
jne
lea
push
push
push
call
add
test
je
mov
pop
sub
pop
neg
sbb
pop
and
pop
add
add
ret
cmp
jne
pop
pop
pop
mov
pop
add
ret
push
push
call
lea
push
push
push
call
add
cmp
je
pop
pop
pop
mov
pop
add
ret
cmp
jne
lea
push
push
push
call
add
test
je
mov
cmp
jne
push
push
call
mov
lea
push
push
push
push
call
add
test
je
cmp
je
lea
push
push
push
push
call
add
test
jne
cmp
jne
push
push
call
mov
push
dec
call
mov
add
test
je
lea
lea
push
push
call
mov
mov
mov
xor
add
cmp
mov
mov
and
inc
add
add
js
dec
jl
add
and
cmp
dec
lea
push
push
push
push
call
add
test
je
cmpw
je
lea
push
push
push
push
call
add
test
jne
cmpw
jne
mov
mov
mov
pop
pop
pop
pop
add
ret
cmp
jne
push
call
mov
add
test
je
lea
lea
push
push
call
mov
mov
lea
add
test
movl
movl
movl
mov
je
mov
lea
push
push
push
push
call
add
cmp
je
cmp
jne
mov
lea
jmp
cmp
jne
mov
lea
jmp
cmp
je
lea
push
push
push
push
call
add
cmp
jne
pop
pop
pop
pop
add
ret
mov
mov
pop
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
mov
xor
mov
test
je
mov
inc
test
jne
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
xor
mov
test
je
cmpl
jne
inc
mov
test
jne
ret
nop
nop
nop
nop
nop
mov
xor
mov
test
je
cmpl
jne
inc
mov
test
jne
ret
nop
nop
nop
nop
nop
mov
push
lea
push
lea
lea
push
push
push
push
movl
call
push
mov
call
add
cmp
mov
ja
mov
pop
pop
ret
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
mov
push
mov
xor
mov
test
jbe
test
je
mov
inc
cmp
jb
xor
cmp
setne
dec
pop
and
ret
nop
nop
nop
nop
nop
nop
push
push
push
call
mov
xor
add
cmp
jne
pop
xor
pop
ret
push
call
add
cmp
mov
jne
push
call
add
xor
pop
pop
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
movl
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
push
push
call
push
mov
call
mov
mov
add
mov
test
jbe
mov
push
push
call
add
dec
jne
push
push
call
lea
push
push
mov
call
mov
add
test
jne
push
push
call
add
jmp
xor
push
push
call
mov
add
test
je
cmpl
jne
push
push
call
lea
push
push
call
push
push
call
mov
mov
push
testl
mov
add
add
mov
add
cmp
jae
mov
cmp
add
push
call
add
test
je
mov
push
push
push
push
call
add
test
je
mov
jo
inc
add
add
mov
add
cmp
jb
push
push
call
add
inc
push
push
call
mov
add
test
jne
mov
test
jne
push
push
call
mov
add
jmp
pop
pop
pop
mov
pop
add
ret
push
push
call
mov
add
mov
test
je
xor
push
push
call
add
test
je
cmpl
jne
lea
push
push
push
call
add
test
jne
inc
push
push
call
add
test
jne
mov
test
je
mov
test
je
test
jbe
mov
push
push
call
add
dec
jne
push
push
call
mov
push
push
call
push
push
call
add
xor
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
push
push
push
mov
push
mov
mov
mov
xlat
loope
add
call
mov
pop
rolb
sldt
mov
add
cmp
jae
mov
mov
cld
inc
add
push
push
push
call
add
test
je
mov
test
je
mov
cmp
jae
mov
mov
mov
xor
inc
add
add
dec
sldt
mov
add
cmp
jb
mov
test
je
mov
cmp
jb
pop
pop
pop
mov
pop
ret
movw
mov
inc
pop
pop
mov
pop
xor
pop
ret
nop
nop
nop
nop
nop
push
mov
push
mov
lea
push
push
push
push
movl
call
add
test
jne
mov
pop
pop
ret
mov
mov
push
mov
push
push
push
push
call
add
pop
pop
ret
nop
nop
nop
nop
nop
push
mov
push
push
movl
movl
call
mov
add
test
jne
pop
ret
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
xor
cmp
mov
mov
mov
mov
je
mov
dec
mov
jmp
mov
mov
push
push
call
mov
add
cmp
jne
mov
mov
mov
mov
inc
cmp
mov
mov
je
mov
pop
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
call
mov
add
test
jne
pop
ret
mov
lea
push
push
call
mov
movl
movl
movl
lea
mov
add
mov
test
je
lea
mov
test
jne
mov
mov
pop
ret
nop
nop
nop
nop
push
push
mov
test
movl
jne
lea
mov
cmp
jne
xor
pop
pop
ret
test
jne
mov
lea
mov
test
je
mov
lea
test
mov
jne
mov
test
je
jmp
mov
test
je
mov
jmp
mov
lea
test
mov
jne
mov
test
je
mov
cmpl
jne
movl
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
push
push
push
push
mov
movl
test
jne
lea
mov
push
push
push
call
mov
add
test
je
mov
lea
push
push
call
add
test
jne
cmpl
je
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
pop
ret
mov
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
push
call
mov
add
test
je
mov
lea
push
push
call
add
test
jne
cmpl
je
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
ret
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
push
push
mov
push
lea
push
mov
lea
push
push
push
push
movl
call
mov
add
test
jne
push
call
mov
add
test
jne
pop
pop
mov
pop
pop
ret
lea
push
push
call
movl
movl
movl
mov
mov
add
mov
mov
mov
mov
mov
movl
pop
pop
xor
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
lea
push
mov
lea
push
push
push
push
call
add
cmp
jne
pop
ret
mov
mov
mov
push
mov
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
xor
push
mov
lea
push
push
push
mov
call
mov
add
cmp
je
push
call
push
call
lea
push
push
push
call
mov
add
cmp
jne
mov
pop
pop
xor
pop
pop
ret
nop
nop
mov
add
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
je
xor
ret
mov
add
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
cmp
jne
push
mov
or
xor
repnz
not
dec
pop
mov
push
mov
lea
mov
movl
cmpl
je
mov
pop
ret
lea
lea
push
push
push
push
call
add
adc
mov
pop
ret
push
call
mov
add
cmp
sbb
pop
neg
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
movsb
jmp
push
push
mov
lea
push
push
push
push
movl
call
mov
add
test
je
mov
mov
lea
lea
push
push
push
push
push
movl
call
add
test
jne
mov
lea
push
push
call
add
test
je
lea
push
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
add
mov
pop
pop
add
movsb
out
inc
add
mov
push
dec
push
push
cmp
push
ja
mov
mov
mov
mov
jmp
mov
push
push
push
push
push
call
add
test
jne
push
push
call
mov
add
test
je
mov
push
push
push
push
call
add
cmp
jne
xor
pop
pop
pop
pop
ret
mov
mov
mov
push
mov
push
mov
push
push
push
call
add
mov
mov
pop
pop
pop
pop
ret
cmp
and
cwtd
and
and
in
sub
add
push
mov
push
mov
push
push
push
call
add
test
je
push
lea
push
push
call
lea
push
push
movw
call
mov
add
test
je
lea
push
push
call
add
test
je
mov
mov
movw
movw
add
push
mov
push
lea
push
push
push
push
call
add
pop
pop
pop
add
ret
mov
dec
cmp
ja
jmp
mov
push
push
call
add
test
jne
pop
pop
pop
add
ret
mov
push
push
push
push
call
add
test
jne
pop
pop
pop
add
ret
mov
push
push
push
push
call
add
test
jne
push
push
call
add
test
jne
xor
pop
pop
pop
add
ret
lea
pop
lcall
jnp
and
sahf
lcall
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
inc
add
insb
and
test
push
jne
push
call
mov
add
test
je
mov
push
push
call
add
mov
test
jne
cmp
je
mov
push
push
push
push
call
add
pop
pop
pop
add
sub
cmp
jl
cmp
jg
add
push
mov
lea
mov
shr
rep
mov
and
rep
mov
movw
lea
push
push
push
push
call
add
test
pop
je
mov
push
add
push
push
push
call
add
pop
pop
pop
add
test
pop
add
inc
add
nop
nop
push
push
push
push
push
call
mov
xor
add
cmp
je
mov
xor
mov
push
rep
mov
push
cmp
je
mov
push
mov
push
push
push
push
call
push
mov
call
add
cmp
mov
je
mov
mov
movl
mov
mov
mov
mov
mov
mov
jmp
mov
push
mov
push
push
push
push
call
mov
mov
cmp
jne
push
call
add
pop
pop
xor
pop
pop
ret
push
push
call
push
mov
call
add
cmp
mov
je
mov
lea
push
push
mov
push
push
push
mov
call
test
je
mov
mov
cmp
jne
enter
pop
pop
pop
pop
ret
nop
push
push
push
push
mov
xor
cmp
je
cmp
jne
lea
mov
push
push
push
call
add
push
push
call
add
cmp
jne
mov
jmp
mov
push
call
mov
add
cmp
jne
mov
jmp
lea
push
push
push
call
add
push
push
call
add
test
je
mov
jmp
mov
push
push
push
push
call
mov
cmp
jbe
mov
push
lea
push
push
mov
or
xor
mov
repnz
not
dec
push
push
push
call
test
pop
je
mov
cmp
jbe
mov
dec
cmp
je
mov
mov
push
call
push
call
add
push
call
push
call
add
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
mov
test
je
mov
push
call
add
mov
test
je
push
call
add
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
call
add
ret
nop
mov
push
call
pop
ret
nop
nop
nop
mov
mov
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
cmp
jb
cmp
ja
mov
ret
cmp
jb
cmp
ja
mov
ret
cmp
jb
cmp
ja
mov
ret
xor
cmp
sete
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
jbe
dec
mov
xor
ret
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
add
push
call
add
ret
mov
add
push
call
add
ret
nop
nop
nop
nop
nop
nop
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
inc
mov
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
mov
cmp
je
cmp
jne
mov
cmp
jl
cmp
jg
mov
movsbl
sub
mov
mov
ret
cmp
jne
cmp
jl
cmp
jg
movsbl
mov
sub
mov
mov
ret
cmp
jl
cmp
jg
mov
movsbl
sub
mov
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
mov
push
push
push
push
call
add
test
je
mov
mov
test
je
cmp
je
cmp
je
cmp
jne
lea
push
push
call
add
test
jne
pop
pop
xor
pop
add
ret
lea
push
push
call
add
test
jne
pop
pop
pop
add
ret
cmpb
jne
lea
push
push
call
add
test
jne
pop
pop
pop
add
ret
mov
cmp
je
cmp
je
push
call
add
mov
jmp
mov
lea
xor
push
push
call
add
test
je
mov
cmp
je
lea
push
push
push
call
add
test
je
imul
mov
lea
push
push
add
call
add
or
pop
xor
pop
add
ret
mov
pop
mov
mov
pop
pop
add
ret
push
call
lea
xor
push
push
call
add
test
je
mov
cmp
je
mov
inc
cmp
jae
lea
push
push
call
add
test
jne
pop
pop
xor
pop
add
ret
cmp
je
pop
pop
xor
pop
add
ret
lea
movb
mov
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
pop
movw
mov
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
cmp
jne
mov
pop
pop
mov
movw
pop
add
ret
mov
pop
movsbw
mov
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
test
mov
push
push
je
add
push
call
add
ret
add
push
call
add
ret
push
mov
push
mov
push
mov
push
push
push
push
call
add
test
je
cmpw
jne
push
push
push
push
call
add
test
jne
pop
pop
pop
ret
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
mov
ret
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
mov
mov
mov
ret
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
test
je
mov
mov
push
push
push
call
add
test
jne
mov
add
test
jne
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
add
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
push
push
push
call
push
push
call
mov
mov
push
push
mov
lea
push
call
add
test
je
mov
pop
ret
push
push
call
mov
add
mov
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
test
push
push
je
mov
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jb
cmp
jbe
lea
push
push
call
add
lea
test
jbe
mov
sub
and
shr
mov
mov
mov
jne
mov
lea
push
push
push
call
add
pop
pop
add
ret
mov
mov
mov
mov
inc
cmp
mov
jb
mov
test
jne
movl
pop
xor
pop
add
ret
mov
lea
push
push
call
add
test
jne
pop
mov
pop
add
ret
mov
mov
mov
mov
mov
pop
mov
mov
inc
mov
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
test
mov
push
push
je
add
jmp
add
push
call
add
test
jne
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
push
push
push
push
push
call
mov
add
test
je
aas
testl
mov
mov
lea
mov
push
push
push
push
push
call
add
test
jne
test
je
push
push
call
add
test
jne
push
push
call
add
test
jne
mov
push
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
ret
mov
test
je
mov
push
push
call
add
mov
mov
test
je
mov
pop
pop
pop
mov
pop
ret
nop
nop
sub
mov
push
push
lea
push
lea
push
mov
push
push
push
push
movl
call
add
test
jne
mov
add
add
add
mov
lea
push
push
call
add
test
je
add
inc
cmp
jl
pop
pop
xor
pop
add
ret
mov
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
mov
pop
pop
mov
ret
push
push
call
add
cmp
je
mov
pop
pop
movl
xor
ret
mov
mov
push
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
mov
pop
pop
mov
ret
push
push
call
add
cmp
je
mov
pop
pop
movl
xor
ret
mov
mov
push
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
mov
pop
pop
mov
ret
push
push
call
add
cmp
je
mov
pop
pop
movl
xor
ret
mov
mov
push
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
pop
pop
ret
push
push
call
add
cmp
je
pop
xor
pop
ret
mov
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
push
call
mov
add
test
je
push
push
call
add
cmp
je
xor
mov
dec
cmp
ja
jmp
test
jne
push
push
push
call
add
pop
pop
pop
pop
ret
test
je
mov
pop
pop
pop
pop
ret
pop
pop
pop
xor
pop
ret
lea
ret
test
and
test
and
test
and
test
and
mov
push
push
call
add
test
jne
mov
push
push
call
add
neg
sbb
pop
inc
ret
cmp
jne
mov
pop
ret
mov
sub
sar
push
push
push
call
add
neg
sbb
pop
inc
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
cmp
push
mov
jbe
pop
pop
pop
xor
pop
ret
mov
mov
mov
push
push
push
call
mov
add
test
jne
push
push
call
mov
add
test
jne
pop
pop
pop
pop
ret
mov
push
push
push
push
call
add
test
je
xor
mov
cmp
ja
jmp
cmpl
jae
xor
jmp
mov
mov
push
push
push
push
call
add
test
je
xor
jmp
mov
push
push
push
push
call
add
test
je
xor
jmp
mov
mov
push
push
push
push
push
call
add
test
je
xor
jmp
mov
push
push
push
push
call
add
test
je
xor
jmp
xor
test
jle
mov
push
push
push
push
call
add
test
je
xor
pop
pop
mov
pop
pop
ret
lea
subb
and
stos
and
and
and
inc
stos
and
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
push
mov
call
mov
add
test
jne
pop
pop
ret
mov
push
mov
push
push
push
push
call
add
test
je
xor
mov
push
push
push
push
call
add
test
pop
je
xor
mov
pop
neg
sbb
and
pop
ret
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
lea
push
mov
push
push
lea
push
lea
push
push
push
push
push
movl
call
add
test
je
mov
mov
add
push
push
call
add
test
je
lea
lea
push
push
push
lea
push
push
push
push
push
call
add
test
jne
pop
pop
pop
xor
pop
add
ret
mov
pop
pop
pop
pop
add
ret
nop
nop
push
mov
push
call
add
test
je
push
push
push
push
call
add
test
je
mov
push
push
push
push
call
add
neg
sbb
pop
inc
ret
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
call
mov
test
je
push
push
call
add
test
je
push
push
call
mov
add
test
je
mov
push
push
push
push
call
add
test
jne
mov
push
push
push
push
call
add
test
jne
push
push
call
add
test
je
mov
test
je
mov
mov
test
je
push
push
call
add
mov
pop
pop
ret
push
call
add
pop
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
call
mov
test
je
mov
mov
push
push
push
call
add
test
jne
push
call
add
test
je
push
push
push
push
call
mov
add
test
je
lea
push
push
push
push
call
add
test
jne
lea
push
push
push
push
call
add
test
jne
push
push
push
push
call
add
test
je
mov
test
je
mov
mov
mov
test
je
mov
mov
mov
test
je
mov
mov
pop
pop
add
ret
push
call
add
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
push
push
push
push
mov
xor
mov
test
je
mov
mov
push
call
push
push
call
add
test
je
sub
add
sar
shl
or
mov
mov
test
jne
mov
pop
mov
pop
pop
mov
pop
ret
pop
pop
pop
xor
pop
ret
push
mov
push
mov
xor
lea
movw
mov
sub
and
shr
mov
mov
je
inc
cmp
jl
cmp
je
push
call
lea
push
push
push
call
add
pop
pop
ret
mov
sub
lea
push
push
call
mov
mov
lea
push
mov
push
push
push
call
add
ret
nop
sub
mov
lea
lea
push
mov
push
mov
push
push
push
movl
call
add
test
jne
mov
lea
push
push
call
add
neg
sbb
inc
add
ret
nop
nop
nop
nop
nop
sub
mov
push
push
push
push
mov
mov
xor
lea
mov
rep
mov
mov
stos
stos
mov
mov
xor
lea
rep
lea
stos
push
lea
push
push
push
push
call
add
test
je
lea
push
lea
push
push
call
mov
mov
lea
push
mov
push
push
push
call
add
pop
pop
pop
pop
add
ret
mov
test
jne
pop
pop
pop
mov
pop
add
ret
mov
push
call
mov
add
test
jne
pop
pop
pop
mov
pop
add
ret
mov
lea
push
call
mov
add
test
jne
push
call
add
mov
pop
pop
pop
pop
add
ret
movb
movw
mov
lea
push
push
push
push
push
call
add
test
je
mov
push
push
push
call
mov
mov
mov
push
push
push
push
call
add
mov
jmp
mov
push
mov
call
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
push
push
mov
mov
xor
lea
rep
mov
mov
stos
stos
mov
mov
xor
lea
rep
mov
lea
stos
mov
lea
push
push
push
push
push
movl
call
add
test
jne
lea
push
lea
push
push
call
mov
mov
lea
lea
mov
push
push
push
push
push
call
add
test
mov
mov
je
pop
pop
xor
pop
add
ret
test
jne
test
je
pop
pop
xor
pop
add
ret
lea
movl
push
push
push
push
push
call
add
cmp
jne
pop
pop
pop
add
ret
mov
mov
push
call
mov
add
test
jne
pop
pop
mov
pop
add
ret
mov
lea
push
call
mov
add
test
jne
push
call
add
pop
pop
mov
pop
add
ret
mov
movb
movw
mov
lea
push
push
mov
mov
push
push
push
push
mov
call
add
test
jne
mov
push
push
push
call
mov
mov
lea
mov
push
push
push
push
push
call
mov
add
neg
sbb
inc
mov
mov
test
mov
jne
test
je
xor
push
mov
call
push
call
add
mov
pop
pop
pop
pop
add
ret
sub
push
mov
push
mov
push
push
push
lea
call
mov
add
cmp
jbe
lea
push
call
mov
add
test
jne
pop
pop
pop
mov
pop
add
ret
inc
push
push
push
call
add
aad
cmp
push
push
push
call
mov
mov
mov
push
push
push
push
push
call
lea
add
cmp
mov
je
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
push
mov
cmp
jbe
dec
mov
mov
mov
mov
lea
shl
mov
mov
push
mov
push
push
push
push
call
add
test
jne
mov
shr
test
mov
je
lea
push
push
push
call
mov
add
movw
pop
xor
pop
ret
pop
mov
pop
ret
nop
nop
nop
mov
sub
cmp
push
push
push
push
jbe
dec
mov
jmp
mov
xor
test
jbe
mov
mov
lea
push
push
call
add
test
jle
mov
mov
lea
rep
movsw
mov
mov
mov
rep
movsw
mov
lea
mov
rep
movsw
mov
mov
mov
dec
mov
jne
test
jne
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
mov
push
xor
cmpl
jbe
mov
push
push
call
add
test
je
mov
inc
add
cmp
jb
push
lea
push
push
call
lea
movw
push
call
mov
lea
push
lea
lea
mov
lea
push
call
mov
add
inc
mov
pop
pop
pop
pop
add
ret
nop
nop
push
mov
test
jbe
push
mov
push
mov
push
mov
push
push
push
call
add
add
dec
jne
pop
pop
pop
pop
ret
nop
nop
mov
push
mov
push
push
push
mov
cmp
jae
mov
xor
test
jbe
mov
push
push
call
add
test
je
mov
inc
add
cmp
jb
mov
push
lea
lea
mov
lea
push
call
mov
add
inc
mov
pop
pop
pop
pop
ret
nop
nop
nop
push
push
mov
push
push
mov
test
jbe
xor
test
jbe
mov
mov
push
push
call
add
test
je
mov
inc
add
cmp
jb
mov
cmp
je
inc
cmp
jae
mov
lea
lea
lea
lea
mov
mov
inc
rep
movsw
mov
add
cmp
jb
decl
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
xor
test
mov
jbe
mov
push
mov
push
push
sub
lea
mov
mov
inc
rep
movsw
mov
add
cmp
jb
pop
pop
pop
pop
ret
nop
nop
nop
sub
push
push
push
push
mov
xor
cmpl
jbe
mov
xor
lea
push
push
mov
mov
add
push
call
mov
add
test
je
mov
lea
push
push
call
add
test
je
mov
inc
add
cmp
jb
pop
pop
pop
xor
pop
add
ret
pop
pop
pop
mov
pop
add
ret
mov
mov
push
mov
push
push
push
call
mov
push
push
push
call
add
test
jne
mov
mov
mov
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
push
push
push
call
mov
push
push
push
call
add
test
je
mov
mov
mov
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
mov
push
push
push
call
add
ret
nop
nop
nop
mov
mov
mov
push
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
mov
push
cmp
jbe
mov
mov
mov
mov
shl
test
jne
inc
mov
mov
cmp
ja
mov
mov
cmp
jb
pop
pop
xor
pop
ret
mov
test
je
mov
push
shl
push
add
push
push
push
push
call
movw
mov
pop
inc
mov
pop
mov
pop
ret
push
push
mov
push
push
mov
xor
push
lea
push
push
push
movl
call
add
test
je
push
lea
push
push
push
inc
call
add
test
jne
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
lea
push
mov
lea
push
push
push
movl
call
add
test
je
push
mov
push
mov
add
testb
and
lea
push
push
call
add
test
je
inc
add
cmp
jb
mov
mov
push
lea
push
push
call
add
mov
lea
push
mov
lea
push
push
push
call
add
test
jne
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
call
mov
mov
mov
add
mov
add
test
je
push
push
call
add
add
mov
mov
test
je
push
push
call
add
add
or
mov
cmp
jbe
mov
mov
lea
lea
movl
shl
push
call
mov
add
test
mov
jne
pop
pop
pop
xor
pop
ret
mov
push
push
push
mov
push
push
push
call
mov
mov
mov
push
push
push
push
call
mov
mov
push
push
call
mov
add
test
je
movl
mov
xor
test
jbe
xor
mov
mov
add
push
push
call
add
test
jne
mov
movl
mov
inc
add
cmp
jb
mov
cmpl
je
mov
movl
test
jbe
mov
mov
push
push
push
call
add
add
dec
jne
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
sub
mov
mov
mov
push
push
mov
push
mov
push
mov
push
mov
push
push
lea
push
mov
lea
push
mov
push
xor
push
push
mov
mov
call
add
test
jne
pop
add
ret
mov
mov
push
mov
push
xor
cmp
mov
jbe
push
mov
mov
lea
push
call
add
test
jne
mov
movl
jmp
test
je
mov
lea
push
push
call
add
mov
inc
add
cmp
jb
pop
mov
test
je
mov
push
call
add
mov
pop
pop
pop
add
ret
mov
test
je
push
call
add
mov
mov
mov
mov
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
jmp
mov
jmp
push
push
push
mov
push
call
movl
mov
pop
ret
push
mov
call
testb
je
push
call
mov
pop
ret
jmp
push
call
pop
ret
mov
jmp
mov
call
push
push
push
lea
call
pushl
andl
pushl
pushl
pushl
call
mov
mov
mov
mov
mov
leave
ret
mov
ret
push
mov
push
push
cmpl
push
jne
push
push
xor
mov
call
call
push
push
push
mov
pushl
mov
call
test
je
call
mov
test
je
mov
mov
call
test
jne
mov
mov
call
call
jmp
pushl
mov
mov
push
call
push
call
test
pop
je
push
push
mov
call
movl
mov
call
pushl
call
mov
pop
pop
jmp
cmpl
jne
push
call
mov
call
mov
call
mov
test
je
mov
mov
call
call
push
call
call
push
push
call
jmp
cmpl
jne
push
lea
call
call
push
call
pushl
call
mov
mov
mov
push
pop
pop
leave
ret
cmpl
jne
push
push
call
test
je
push
push
call
call
push
mov
call
mov
pop
jmp
cmpl
jne
call
pushl
call
push
pop
ret
int3
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
cmpl
jne
pushl
call
pop
ret
push
push
pushl
call
add
ret
pushl
call
neg
sbb
pop
neg
dec
ret
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
div
mov
xor
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
xchg
mull
add
jb
cmp
ja
jb
cmp
jbe
sub
sbb
sub
sbb
neg
neg
sbb
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
mov
test
jne
cmp
jle
decl
mov
cmp
mov
mov
jne
push
call
test
pop
mov
jne
xor
jmp
andl
mov
push
push
mov
call
incl
pop
pop
jmp
test
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
mov
sub
jmp
push
call
andl
pop
pop
push
pop
ret
push
mov
push
mov
push
mov
push
mov
test
jne
cmpl
jmp
cmp
je
cmp
jne
mov
test
je
push
push
push
call
test
je
push
push
push
call
test
jne
xor
jmp
push
push
push
call
cmp
mov
jne
test
jne
push
push
push
call
test
je
cmp
jne
push
push
push
call
test
jne
and
cmpl
je
mov
test
je
push
push
push
call
mov
mov
pop
pop
pop
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
push
mov
push
mov
mov
mov
lea
push
ret
int3
jmp
jmp
jmp
int3
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
add
push
decl
aam
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
add
dec
decl
aam
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
lea
jmp
mov
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
add
dec
in
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
add
and
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
push
call
pop
ret
mov
jmp
int3
int3
int3
lea
jmp
add
jmp
and
fdiv
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
push
push
mov
push
mov
push
mov
push
push
mov
push
push
mov
call
lea
movl
mov
call
push
mov
movb
movl
call
mov
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
mov
add
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
nop
nop
mov
push
push
call
ret
nop
nop
nop
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
xor
push
mov
push
push
mov
call
lea
mov
mov
call
mov
movl
movl
mov
mov
mov
movl
mov
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
call
lea
mov
push
push
push
push
push
push
push
push
call
test
je
movl
jmp
mov
test
je
cmp
jne
push
push
mov
call
mov
call
push
push
call
push
call
test
jne
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
mov
pop
pop
ret
push
push
push
push
lea
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
pop
mov
pop
pop
ret
nop
nop
nop
mov
push
test
push
mov
je
mov
mov
push
mov
mov
mov
mov
mov
mov
lea
lea
push
push
mov
call
mov
add
mov
pop
pop
ret
mov
push
mov
mov
mov
mov
mov
mov
mov
lea
lea
push
push
mov
call
mov
mov
add
mov
push
call
test
je
push
mov
call
pop
pop
ret
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
lea
call
lea
movl
call
add
inc
and
add
jne
add
push
lea
call
mov
mov
push
push
push
mov
call
cmp
jne
mov
push
mov
push
push
push
call
push
mov
call
call
mov
call
lea
mov
push
push
push
push
push
push
push
push
movb
call
test
je
movl
push
lea
call
push
lea
call
mov
mov
push
push
push
mov
call
movb
call
mov
call
push
mov
call
mov
push
push
push
call
pop
lea
movb
call
lea
movl
call
mov
pop
mov
add
ret
mov
test
je
push
lea
call
push
lea
call
mov
mov
push
push
push
jmp
push
push
mov
push
mov
sub
push
mov
push
lea
call
lea
movl
mov
call
lea
movl
call
lea
movb
call
lea
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
lea
movl
call
lea
movb
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
push
call
lea
mov
push
push
push
push
push
push
push
push
push
movl
call
pop
ret
mov
push
call
pop
ret
nop
nop
call
mov
jmp
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
push
push
mov
push
push
mov
call
lea
movl
mov
call
movl
lea
movb
mov
call
movl
lea
movb
mov
call
lea
movb
mov
call
lea
add
add
lret
call
lea
movb
call
push
mov
movb
movl
call
xor
push
mov
mov
mov
movl
mov
call
push
mov
call
mov
mov
movb
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
lea
add
add
into
xlat
add
lea
movb
call
lea
movb
call
lea
movb
call
add
movb
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
add
repz
add
add
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
mov
movl
test
je
mov
lea
mov
xor
lea
rep
mov
mov
mov
mov
mov
test
setne
lea
mov
mov
push
lea
mov
call
mov
mov
push
push
ljmp
push
call
mov
add
imul
add
lock
add
jnp
add
call
mov
mov
add
add
mov
push
mov
add
push
push
push
lea
push
push
push
push
lea
push
call
popl
mov
jo
fsubl
aad
aam
add
add
lahf
add
stos
add
jnp
scas
fs
add
in
add
add
rolb
scas
into
jb
add
add
jmp
pop
jl
stos
loope
mov
add
stos
hlt
mov
add
fstps
cltd
scas
sub
pop
popl
push
push
push
call
xchg
scas
jne
scas
push
mov
add
fs
mov
mov
pop
movsl
jbe
cwtl
add
add
cltd
loop
movsl
in
pop
test
cli
mov
clc
stc
xchg
add
add
lock
add
add
add
mov
mov
add
leave
add
push
rorb
push
push
push
push
push
push
push
lea
push
lea
push
push
call
loop
add
enter
add
iret
icebp
in
add
xchg
sahf
out
fcom
add
icebp
add
add
popf
mov
imul
add
push
test
add
push
push
push
lea
push
push
push
lea
push
push
push
push
call
lcall
pop
movsb
popf
lahf
lret
mov
cli
rcrb
add
lcall
add
add
mov
scas
xchg
ret
push
add
add
addb
mov
rolb
add
push
push
push
call
ljmp
mov
addr16
pushf
add
icebp
pusha
lock
in
add
add
aam
add
nop
push
add
add
mov
add
sub
pop
push
push
push
call
add
add
mov
add
add
add
add
jne
push
jne
add
movsb
cli
andl
jl
xchg
pop
add
lret
ret
mov
add
jne
push
xchg
jle
nop
add
add
in
clc
lcall
mov
add
push
push
lea
push
push
push
call
cld
test
add
mov
push
pop
imul
add
add
add
cli
add
bound
add
add
in
mov
jl
add
mov
xchg
add
sti
add
sub
pop
call
push
push
push
push
push
push
push
push
call
add
filds
in
or
add
add
add
mov
jnp
roll
mov
int3
popl
loope
popa
icebp
js
add
add
add
mov
nop
fidivs
fst
pop
jno
add
xchg
fdivl
add
xchg
jnp
in
push
add
mov
stos
mov
loopne
push
call
push
push
lea
push
push
push
push
call
mov
icebp
ret
mov
add
mov
fcmovnbe
outsl
add
add
add
lcall
fldl
add
pusha
add
mov
pop
jl
mov
add
mov
lcall
lret
add
fsts
push
push
call
iret
add
add
enter
nop
mov
pop
add
lret
hlt
add
add
add
add
mov
bound
mov
add
add
add
xorl
add
cmpsb
fiaddl
js
add
mov
push
in
add
add
add
data16
movl
push
push
push
call
out
add
jo
clc
add
add
testl
xchg
roll
add
repnz
cmpsb
mov
add
add
add
cmc
arpl
mov
gs
out
add
lcall
inc
hlt
mov
push
lea
push
push
call
add
add
fsubrs
add
in
mov
add
xchg
add
add
add
mov
add
imul
lret
aad
add
roll
into
negl
push
loopne
mov
mov
cmpsl
add
sub
pop
add
push
lea
push
push
lea
push
push
lea
push
push
push
call
mov
out
imul
pushf
add
push
hlt
add
cmpsb
mov
add
jmp
add
les
jp
add
fiaddl
fmul
into
mov
pop
jb
pop
add
int
jae
into
add
add
pop
mov
pop
rcll
push
add
add
add
imul
pop
add
push
push
push
lea
push
push
push
push
call
add
add
jo
jp
cmpsb
add
xchg
mov
rolb
sarl
cmpsb
lods
ja
add
xchg
mov
out
add
add
jnp
inc
sub
pop
add
push
push
push
call
jns
add
roll
stos
add
add
fwait
repnz
add
add
add
add
mov
add
pop
add
repz
adc
rclb
or
inc
add
add
sub
shr
xor
sub
pop
shr
pop
push
push
push
push
push
lea
push
push
push
push
push
call
add
jne
in
xchg
test
popf
add
add
stos
add
xchg
add
addr16
pop
add
int3
mov
mov
add
loop
jle
add
in
fdivr
lcall
jne
push
push
push
lea
push
call
lea
mov
jae
mov
lret
jnp
popa
add
add
movsb
add
add
pop
add
je
hlt
push
add
fistpl
mov
arpl
add
add
add
stos
mov
call
mov
add
add
out
add
mov
add
lcall
inc
bound
add
pop
push
push
push
push
push
push
push
push
push
call
in
push
xchg
add
rcrl
add
add
add
add
add
add
add
mov
clc
lahf
cmpsb
add
add
movl
push
push
push
push
push
push
push
call
push
add
lahf
add
fiadds
add
jmp
add
icebp
scas
add
sahf
add
jno
mov
add
mov
mov
push
jns
subb
lcall
in
lcall
inc
call
mov
push
push
lea
push
lea
push
call
aam
add
add
clc
lds
roll
add
add
lret
add
in
jmp
add
add
movsb
sub
pop
push
pushl
push
lea
push
push
lea
push
push
call
scas
iret
add
lds
push
fildl
add
vxorps
add
loop
add
in
loopne
add
cmpsl
mov
mov
iret
add
push
jp
out
add
mov
out
pop
sub
pop
pushl
call
push
push
push
lea
push
push
push
lea
push
call
in
loopne
xlat
mov
movl
loopne
hlt
push
add
jecxz
xchg
movl
xchg
repnz
add
insb
fadds
imul
add
add
clc
add
add
fsubrs
add
fiaddl
rolb
int
add
pop
add
out
sub
pop
pushl
pushl
push
push
push
lea
push
push
call
mov
pop
add
jp
mov
mov
je
add
add
add
hlt
repnz
push
jle
enter
jne
add
add
add
push
fists
gs
lcall
in
pop
add
xchg
xchg
sar
stos
jbe
in
bound
add
pop
call
push
push
sub
shr
push
push
pop
add
xor
sub
lea
pop
shr
pop
push
push
push
lea
push
lea
push
push
lea
push
call
pusha
mov
out
add
rolb
int3
push
icebp
xchg
les
add
add
div
leave
xchg
mov
std
add
sub
pop
pushl
push
push
push
call
jp
pop
orl
add
loope
jno
loopne
pop
mov
lret
std
mov
add
out
push
add
push
mov
push
add
call
mov
cmpsb
lret
add
add
add
push
bound
popa
sahf
test
jmp
add
mov
test
add
add
jp
rolb
in
add
push
push
push
shl
push
or
inc
add
shl
sub
shl
xor
sub
xor
pop
sub
pop
push
lea
push
push
call
stc
fidivrl
push
add
push
pop
je
add
fcoms
add
popa
xchg
out
add
fildl
sub
pop
push
push
push
push
push
call
imul
in
add
xchg
add
add
faddl
mov
insb
xchg
movb
aam
add
mov
movsb
pop
mov
popf
std
add
add
add
xchg
fstpl
lcall
add
cltd
push
lea
push
push
push
push
push
push
call
mov
add
add
jl
add
add
add
add
jns
add
add
push
xchg
add
scas
jbe
pop
fildl
mov
mov
add
aad
in
out
pop
add
sub
pop
call
mov
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
loopne
lods
mov
neg
add
push
cmpsb
jo
add
xchg
mov
gs
add
shrl
mov
push
aad
je
add
add
pop
sarl
in
loopne
lcall
push
push
lea
push
lea
push
call
add
movl
mov
add
pop
push
add
mov
js
lahf
push
roll
outsl
lcall
push
push
lcall
hlt
lcall
pop
hlt
add
push
lea
push
push
push
push
call
jmp
lret
mov
addl
add
div
add
into
enter
imul
sarb
add
filds
push
mov
add
add
add
pusha
xchg
out
pop
jns
fiaddl
add
add
push
add
int
add
rcll
add
lcall
ret
add
add
add
push
push
push
push
call
outsl
add
add
add
andb
data16
scas
pop
mov
nop
mov
cltd
jle
in
mov
nop
add
add
into
scas
sahf
addr16
add
add
add
js
pop
scas
in
idiv
roll
add
xor
jno
adc
mov
outsl
xchg
mov
push
push
push
push
lea
push
push
call
mov
xchg
mov
out
push
add
xorb
in
loope
loopne
loope
int
mov
jae
add
leave
loop
sub
pop
xor
push
push
push
lea
push
push
push
push
lea
push
call
push
add
mov
xchg
add
push
add
mov
add
add
fiadds
push
addl
in
loopne
add
push
push
push
push
push
call
jne
or
xchg
clc
les
add
jl
scas
add
aad
jle
cmpsb
sahf
lcall
add
add
add
add
push
add
std
add
mov
jge
add
addr16
fdivrs
gs
add
add
divb
loop
push
call
movsl
mov
sub
pop
add
push
lea
push
push
push
push
push
push
push
call
push
add
add
in
jmp
mov
jge
add
add
mov
add
mov
out
add
lods
add
jo
out
add
add
sti
jbe
aad
add
lods
test
pop
add
lds
mov
push
push
push
push
push
push
call
sahf
imul
jl
add
scas
mov
cmpsb
test
add
push
loopne
out
loope
arpl
mov
fs
pop
hlt
add
push
add
add
add
add
add
test
add
mov
xlat
mov
add
add
add
fsubrl
mov
sub
pop
mov
push
push
push
lea
push
push
push
push
lea
push
push
call
fisttps
mov
add
xchg
add
mov
fstps
add
mov
add
add
lcall
lods
add
jl
add
add
pop
xor
push
push
push
lea
push
call
pop
addb
add
mov
call
jo
imul
add
int
add
pop
out
cli
pushf
cld
lahf
les
faddl
add
movsb
add
test
add
test
mov
mov
add
jge
jno
sub
pop
add
push
lea
push
lea
push
push
push
lea
push
push
push
push
call
hlt
add
rolb
add
add
add
ror
pusha
test
shlb
add
add
jecxz
add
popa
out
add
mov
add
add
sub
pop
add
push
push
push
push
push
push
push
push
push
call
movsb
add
jge
in
push
add
fwait
pushf
mov
lds
ljmp
nop
fdivrs
add
push
push
add
cltd
add
pop
jle
in
js
add
sbb
add
mov
loopne
fs
add
xchg
sub
pop
pop
mov
push
push
push
push
push
push
push
push
call
jo
add
movb
add
add
pop
rolb
add
mov
hlt
fldl
add
popf
lea
pop
add
sub
pop
xor
push
push
call
push
add
add
mov
addl
xchg
xchg
mov
add
cltd
mov
add
scas
sub
pop
add
push
lea
push
push
push
lea
push
lea
push
call
scas
data16
add
add
into
add
popf
add
add
add
add
add
add
pushf
fidivl
adc
roll
jmp
sahf
mov
add
add
int
cld
add
mov
sub
pop
push
push
push
push
push
push
call
add
jo
stc
rclb
fildl
mov
iret
pop
cmpsl
jnp
add
out
int3
jb
sti
pop
add
pop
test
lret
add
add
pop
movsl
add
mov
push
push
mov
add
filds
xchg
filds
fiaddl
mov
fs
pop
mov
xor
push
push
push
push
push
push
push
push
push
push
call
test
mov
leave
int
add
cltd
loopne
push
add
jge
mov
push
in
out
add
lea
sub
pop
sub
pop
push
lea
push
call
push
add
lret
in
push
jge
jp
ror
jecxz
add
add
pop
add
pushf
add
pusha
xchg
add
add
jp
xchg
add
xchg
out
call
clc
pop
rep
pop
push
push
push
push
push
call
pop
lds
lods
cmc
mov
fildl
insb
orl
add
cld
add
mov
push
mov
fbstp
filds
add
int
arpl
cltd
add
sub
pop
mov
add
push
push
lea
push
push
push
call
gs
mov
add
loopne
push
mov
add
stos
cmpsb
imul
add
popa
mov
add
rolb
add
mov
lahf
into
mov
add
push
push
push
lea
push
call
add
fldl
sbb
mov
out
add
mov
add
lock
mull
xchg
rolb
sti
js
xchg
mov
lds
add
in
out
cli
add
rclb
ja
pusha
xchg
lcall
lcall
ret
adc
add
mov
xor
push
push
push
push
call
add
add
stc
add
add
add
imul
add
mov
add
mov
push
add
jnp
mov
lea
add
cld
pop
vpshldw
lock
mov
push
push
push
push
push
lea
push
push
push
call
mov
add
add
scas
mov
fisttpl
mov
gs
add
push
jo
sahf
add
add
mov
add
add
scas
jns
mov
jae
xchg
push
adcb
push
pusha
fldl
sub
pop
xor
push
push
push
push
call
hlt
xchg
add
mov
out
sti
mov
incb
xchg
mov
out
add
arpl
add
test
jnp
fistpll
mov
mov
add
add
add
lds
xchg
popa
add
mov
addb
les
iret
pop
xlat
sub
pop
add
push
push
call
aam
pusha
lods
fadds
push
insb
xchg
jno
fwait
add
stos
scas
shl
pushf
fwait
test
add
add
in
xchg
mov
aad
add
lds
jb
add
stos
add
push
mov
lea
lcall
dec
sub
adc
call
add
jb
add
push
add
jae
add
add
jne
jmp
jbe
add
aad
add
add
nop
ljmp
clc
lcall
ret
xchg
sub
push
push
lea
push
push
lea
push
call
fildl
repnz
xchg
std
add
sbb
ja
add
add
jle
jns
add
int
add
jp
fldcw
mov
in
add
lods
add
pop
add
jecxz
push
jne
push
out
add
out
mov
add
mov
mov
lret
scas
add
jne
data16
rcrl
pop
add
push
push
push
lea
push
lea
push
lea
push
lea
push
call
orb
rol
mov
fsubs
insb
add
mov
iret
stos
mov
add
add
push
add
jmp
stos
add
into
push
add
pop
add
mov
add
popa
in
sub
pop
mov
push
push
dec
add
push
or
inc
add
add
shl
sub
ror
add
pop
dec
shl
ror
dec
pop
push
push
push
lea
push
call
jne
pop
pop
int
ljmp
add
add
add
add
add
jae
mov
in
ljmp
push
add
cli
add
fdivrl
jno
sti
add
mov
lret
add
add
xchg
add
add
add
add
add
jne
push
push
push
call
add
add
add
add
push
loope
ja
add
push
mov
pop
add
lods
fwait
addl
xchg
push
add
aad
add
cmpsb
popa
movl
xchg
mov
adc
mov
scas
mov
add
outsl
add
mov
out
fisubrl
add
mov
add
ffree
add
call
push
push
push
dec
not
push
or
inc
add
sub
sub
add
pop
sub
dec
shl
pop
push
dec
pop
push
push
push
xor
pop
call
mov
push
push
lea
push
push
push
push
push
push
push
call
iret
clc
stc
add
xchg
xchg
popa
arpl
add
pop
add
test
mov
in
add
mov
add
add
jl
mov
data16
jo
add
cli
push
push
add
add
rol
pushf
repnz
push
add
add
add
jno
jns
movsb
idivl
clc
mov
mov
rcl
add
add
sub
pop
push
push
rol
xor
ror
dec
pop
push
mov
push
add
add
pop
add
push
push
push
lea
push
push
call
jae
add
add
add
add
add
std
arpl
lahf
add
lods
and
mov
jmp
add
hlt
cli
add
lea
add
add
sub
pop
add
push
push
push
call
int
ret
add
fiadds
add
add
push
jbe
mov
icebp
add
je
mov
xchg
jp
add
cli
add
ficoms
xchg
add
out
pop
cmpsb
je
sub
pop
add
push
pop
mov
push
push
lea
push
lea
push
push
lea
push
push
push
call
add
add
add
add
add
add
mov
add
add
add
jbe
sub
pop
xor
push
push
push
call
push
xchg
in
shl
add
mov
pusha
fsubrl
lods
mov
add
add
mov
js
repnz
push
pop
mov
push
add
cmc
add
test
out
add
add
add
add
test
add
jb
add
and
cld
cmpsb
ffree
add
fiaddl
cmpsb
xchg
sub
pop
add
push
push
push
push
call
faddl
xchg
sahf
shr
add
loope
xchg
adcl
lds
std
in
jle
add
mov
add
add
lods
mov
outsl
fsubrl
arpl
in
lock
lcall
jne
push
dec
shl
dec
pop
push
push
push
push
push
lea
push
lea
push
lea
push
push
push
call
mov
push
add
add
xlat
mov
pop
rolb
mov
jbe
add
js
push
push
add
sahf
sti
lcall
stc
add
jl
repnz
add
add
sub
pop
mov
xor
push
shl
sub
pop
add
push
push
push
push
push
lea
push
push
push
call
add
outsl
les
add
mov
add
imul
out
add
jns
fwait
imul
lret
xchg
ja
jl
int
popf
xchg
jo
iret
jge
mov
bound
add
xchg
add
cmpsb
add
add
add
add
shl
sub
pop
pop
mov
push
push
lea
push
push
push
push
push
push
push
push
push
call
test
add
jecxz
mov
imul
add
add
cli
add
mov
mov
mov
add
ljmp
pop
xor
push
lea
push
lea
push
push
push
push
push
push
push
push
call
mov
shlb
add
lret
fnstenv
add
mov
add
add
add
loope
jne
lcallw
add
cwtl
pop
lock
add
stc
add
add
mov
add
add
add
sarl
jae
mov
fdivr
lcall
les
inc
shr
pop
rep
push
xor
xor
pop
mov
push
push
lea
push
lea
push
push
push
lea
push
call
ja
add
add
add
add
add
push
lret
add
add
fidivrs
mov
add
add
stos
outsl
imul
lahf
add
imul
call
pop
xor
push
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
pushf
add
loop
out
add
add
add
mov
pop
mov
imul
add
pop
call
jns
add
add
jns
rolb
movsl
mov
xchg
add
lahf
add
rcrl
lcall
les
push
call
out
push
nop
mov
add
add
in
arpl
jle
mov
stc
stc
push
stos
add
mov
add
jge
sbbb
add
jns
add
mov
sub
pop
or
je
push
push
push
lea
push
call
push
shl
add
mov
jne
je
add
out
jno
in
add
cwtl
scas
add
cli
xchg
cmpl
pusha
mov
cmpsb
lods
sub
pop
mov
push
push
push
call
rorb
add
add
mov
add
mov
add
add
pop
icebp
jne
jl
add
add
lcall
xor
push
push
push
call
iret
add
fsubrl
mov
xchg
add
add
push
add
add
stc
fucom
add
mov
add
add
add
out
add
add
jl
add
add
add
push
add
xchg
mov
pop
push
in
xlat
add
icebp
push
add
add
push
sub
not
pop
mov
xor
push
push
push
push
push
push
lea
push
push
push
call
add
add
jp
out
bound
add
add
movsb
mov
xchg
lahf
pop
adcl
add
clc
add
into
test
pop
pushf
lods
notl
int
mov
sahf
add
mov
loop
add
sub
pop
add
add
push
ror
shr
pop
push
push
not
not
add
pop
mov
xor
push
sub
pop
add
pop
push
xor
pop
rep
push
inc
pop
mov
push
push
lea
push
lea
push
push
push
push
push
push
call
cld
add
add
pusha
shll
lcall
add
fidivs
scas
clc
add
push
mov
xchg
mov
mov
add
add
add
add
add
js
add
nop
pushf
add
scas
outsl
into
pop
call
loopne
xor
push
push
push
push
call
push
push
je
cli
cmpsl
add
mov
add
stos
out
jb
jnp
push
popf
xchg
add
stos
xlat
push
add
cltd
loop
push
jb
mov
add
add
imul
mov
test
xchg
repnz
jb
xchg
addl
enter
or
je
push
push
call
stc
lods
pop
add
mov
add
nop
js
add
add
add
add
push
add
loopne
bound
in
push
pop
loop
xchg
add
add
mov
add
add
push
scas
fldl
jb
stc
roll
xchg
add
pop
add
xchg
sub
pop
mov
add
push
inc
shl
shl
add
pop
add
rep
push
ror
inc
ror
pop
pop
push
push
shl
xor
shr
rol
push
push
pop
add
shl
shr
sub
rol
shl
pop
rol
not
xor
pop
push
push
push
push
push
push
call
subl
add
out
add
scas
loop
in
add
add
out
add
adcl
add
frstor
xchg
add
mov
mov
push
push
sub
pop
pop
push
push
push
push
push
push
push
push
call
sbbl
pop
sahf
add
add
pusha
out
add
xchg
jo
mov
add
popf
add
lcall
add
cltd
add
add
out
stos
xchg
loopne
fwait
add
push
xchg
loop
xchg
xchg
fadd
out
faddl
mov
lcall
jne
mov
push
shl
rol
shl
add
pop
mov
push
xor
rol
dec
pop
jmp
push
push
add
pop
mov
add
push
push
push
call
in
xchg
loope
int
mov
mov
stos
push
pop
add
ror
stos
pop
outsl
add
out
addl
add
faddl
rcll
sti
push
pop
add
add
sub
pop
push
push
not
sub
sub
pop
push
push
lea
push
push
push
push
push
call
mov
xchg
jl
add
lods
jmp
add
add
outsl
push
add
add
fmulp
add
fs
hlt
sbbl
add
rorl
ficomps
flds
mov
data16
add
call
jp
dec
sbb
cmp
push
push
push
call
mov
add
add
mov
movsl
mov
mov
add
add
cmpsb
add
mov
push
fwait
cld
push
adc
add
add
jnp
addl
push
shl
in
cli
push
add
push
out
add
pop
sub
pop
push
mov
push
sub
pop
pop
pop
push
add
lea
rol
pop
pop
push
add
ror
pop
pop
push
push
lea
push
push
lea
push
push
push
push
push
call
add
add
add
add
in
add
xchg
fcoml
xchg
mov
push
mov
add
fldl
add
add
add
stc
loop
add
add
add
add
stos
xchg
add
jbe
add
mov
sub
pop
leave
ret
push
push
push
lea
push
call
iret
loopne
aam
movsl
add
incb
add
add
icebp
add
jo
pop
movsl
call
lds
fwait
add
add
nop
xchg
add
pop
add
movsl
mov
add
pop
fld
xchg
les
popa
jecxz
add
jecxz
iret
filds
add
lcall
push
push
push
lea
push
push
push
push
push
push
lea
push
call
popf
sahf
aam
mov
jb
roll
jae
test
add
add
add
xchg
aad
mov
std
add
add
fisttpll
push
add
mov
add
add
lcall
in
push
push
push
call
xchg
mov
ljmp
out
fs
add
add
imul
push
add
ror
ljmp
pop
pop
ja
add
loopne
lods
add
add
jp
mov
add
xchg
add
add
lcall
clc
push
dec
lea
lea
pop
push
push
sub
pop
push
push
lea
push
lea
push
call
addl
add
add
movsl
add
add
lea
add
push
xchg
nop
add
repnz
repnz
push
shl
add
mov
lcall
push
push
push
push
call
add
mov
add
stos
incb
pusha
mov
mov
push
mov
add
fs
in
ljmp
mov
add
add
fldcw
xlat
add
cltd
rol
mov
mov
add
mov
lock
push
push
push
push
push
push
push
push
push
push
push
call
xchg
jbe
testb
js
add
add
xlat
add
jns
xchg
shll
out
add
add
add
pop
add
jmp
outsl
out
jne
insb
add
add
or
add
mov
pop
ja
add
sahf
enter
xorb
push
lods
lcall
in
fcomps
inc
cld
add
add
push
push
push
push
push
push
call
add
mov
cltd
jmp
add
int
add
add
loope
add
sbbl
jne
add
add
add
loop
add
add
mov
pop
add
jmp
lods
fcoml
sub
pop
addl
push
lea
push
push
push
push
push
push
push
push
push
call
enter
fmul
add
pop
mov
add
pop
pusha
add
xchg
jge
add
repnz
add
std
in
faddl
insb
lahf
lret
xchg
enter
std
sub
pop
test
je
push
lea
push
push
push
push
lea
push
push
push
call
std
add
imul
mov
je
out
nop
push
mov
add
pop
lds
xchg
pusha
out
xchg
je
xchg
out
pop
add
add
push
add
out
add
add
int3
add
repnz
pop
mov
push
dec
rol
lea
pop
pop
push
xor
add
dec
pop
pop
pop
push
ror
pop
pop
leave
push
shr
pop
ret
push
push
lea
push
push
push
call
add
pop
stos
jns
xchg
add
add
jb
mov
mov
add
push
mov
xchg
mov
add
mov
push
push
push
push
push
lea
push
push
push
push
lea
push
call
rcll
add
jns
cmpsl
add
mov
icebp
add
fcompl
mov
mov
push
xchg
ljmp
push
stos
hlt
add
sub
pop
add
push
push
lea
push
push
call
movsb
int
pop
add
xlat
jl
bound
fimull
mov
jnp
iret
mov
ja
add
add
mov
rolb
popf
fildl
add
int
addb
jno
cmpsl
sub
pop
push
push
lea
push
push
lea
push
push
push
push
call
in
movsb
andb
xchg
add
test
push
add
add
xchg
xchg
lcall
cwtl
push
test
data16
cli
lods
out
mov
add
into
cltd
stc
mov
cmpsb
add
sub
pop
push
push
push
add
pop
testl
push
ror
inc
dec
pop
addl
push
push
push
push
lea
push
lea
push
push
push
push
call
enter
add
push
je
scas
pop
add
hlt
rclb
outsl
test
add
add
add
add
test
push
push
dec
rol
add
pop
call
push
inc
rol
lea
add
pop
mov
push
lea
push
push
push
push
lea
push
push
call
add
add
add
cwtl
fwait
push
add
add
mov
add
push
stos
subb
add
add
add
movsl
pop
sub
pop
pushl
push
push
lea
push
push
lea
push
push
lea
push
push
call
cwtl
mov
push
in
pop
add
add
adcl
roll
add
test
add
rcrb
cmpb
aad
add
in
jns
cmpsb
xchg
rorb
in
loopne
lcall
call
jp
mov
push
lea
push
push
push
push
push
call
rcrb
mov
add
addb
xchg
pusha
mov
add
add
pusha
add
add
add
xchg
add
into
add
lcall
pop
push
push
lea
push
push
lea
push
push
lea
push
call
add
clc
mov
mov
mov
cwtl
mov
push
add
mov
add
addb
in
add
loop
push
lods
mov
jne
jb
loope
add
int3
jle
int
add
cmpsb
mov
mov
add
jo
add
addr16
in
call
call
push
push
push
push
push
push
push
push
call
stos
popf
sti
popf
mov
mov
add
add
sbb
insb
jne
scas
in
add
nop
add
addl
push
add
cmpsb
mov
add
add
mov
sar
add
add
out
jae
mov
fistl
add
pushf
test
add
add
in
mov
lcall
jge
add
test
call
cmc
pop
pop
pop
push
rol
pop
pop
push
push
lea
push
push
push
lea
push
lea
push
call
movsl
xchg
call
cltd
insb
std
jo
out
lcall
add
pop
pusha
add
mov
mov
mov
test
lds
add
add
test
lcall
push
dec
sub
pop
leave
ret
push
not
not
pop
push
mov
push
push
push
push
push
call
add
stc
stc
gs
add
fdivrl
mov
ficoml
add
xchg
xlat
xchg
les
jns
add
sti
add
arpl
out
test
mov
in
mov
add
add
test
mov
add
push
push
add
in
in
pop
add
push
push
sub
rol
add
rol
pop
push
push
push
inc
shl
pop
push
movl
push
shl
pop
push
push
push
push
push
lea
push
push
push
lea
push
push
call
mov
test
lea
out
mov
xchg
ljmp
std
add
add
add
aam
out
pop
sub
pop
call
push
lea
push
lea
push
push
lea
push
push
push
push
push
call
xorl
hlt
push
add
jmp
add
lcall
rcll
mov
xchg
add
lock
faddl
or
xchg
cli
call
jmp
pop
subl
push
add
lea
sub
add
pop
cmpl
jne
push
push
push
push
push
push
push
push
call
add
add
add
add
add
add
int3
lea
jecxz
addb
ficoml
fists
lcall
push
push
push
push
lea
push
call
add
outsl
add
pusha
mov
add
xlat
cltd
fiadds
fadds
fldcw
add
jle
mov
lcall
push
sub
rol
sub
pop
pop
pop
push
add
add
pop
leave
push
ror
rol
sub
pop
ret
push
lea
push
call
popf
add
add
mov
fldcw
add
add
add
mov
les
add
test
add
lret
mov
push
pop
int
pop
mov
add
add
stc
into
std
pop
add
lcall
push
sub
pop
mov
push
push
push
push
call
movsl
jge
int3
add
fstpt
pop
mov
mov
mov
add
leave
add
add
int3
jmp
jb
add
stos
imul
add
fwait
mov
js
jne
add
add
add
add
jmp
pop
in
cltd
add
mov
pop
add
push
push
lea
push
call
cli
add
out
add
mov
add
add
add
add
add
mov
jb
out
fwait
lods
mov
popl
leave
mov
xchg
add
ja
test
add
lcall
push
sub
pop
push
push
lea
push
push
call
push
out
xlat
add
push
mull
add
mov
add
jle
mov
data16
add
movsl
testl
notb
add
add
mov
shrl
jge
add
test
mov
nop
loop
rclb
mov
sub
pop
push
push
lea
pop
push
push
dec
shl
pop
mov
push
push
call
mov
push
add
add
pop
add
in
add
clc
add
add
out
lds
add
add
mov
addl
clc
lods
lret
cwtl
push
mov
in
clc
lcall
inc
cmp
push
push
push
push
call
mov
add
add
mov
push
add
rolb
add
andb
add
lcall
push
push
push
out
add
add
lock
pop
sub
mov
push
push
push
push
lea
push
lea
push
call
fs
insb
push
lods
outsl
test
push
add
add
add
lret
call
outsl
add
add
pop
fists
in
bnd
add
mov
js
mov
lods
popf
subl
in
call
push
push
push
push
push
push
call
add
push
jecxz
mov
add
add
mov
mov
add
aam
add
xchg
jns
test
fmul
jb
push
add
mov
jbe
call
rcr
movl
test
sarl
lcall
inc
or
push
lea
push
push
lea
push
push
lea
push
push
lea
push
call
pop
int
mov
in
cmpsl
add
outsl
hlt
add
xchg
cli
rolb
add
mov
cwtl
add
add
add
add
push
sarb
ja
lret
add
mov
fiadds
add
add
add
bound
stos
push
xchg
add
add
add
roll
lea
lcall
inc
cld
push
pop
mov
push
shl
add
ror
pop
add
push
lea
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
popf
mov
inc
add
out
popa
shrl
fidivrl
add
xchg
add
fisttpl
jo
cltd
lret
testb
add
add
mov
xchg
je
in
fcomps
shlb
inc
add
add
out
insl
pop
mov
push
add
shl
pop
cmp
jne
cmp
jne
push
push
push
push
push
lea
push
call
out
mov
add
testl
fsubs
cmc
add
mov
movl
test
cwtl
add
call
movl
push
pop
jmp
mov
push
lea
lea
inc
pop
mov
sub
jne
push
push
push
lea
push
call
add
pop
add
add
pop
mov
add
loopne
jbe
fiaddl
add
insb
lret
cld
mov
xlat
mov
xchg
rorl
add
cltd
cwtl
add
mov
addl
mov
faddl
mov
cmpsl
mov
mov
pop
mov
movl
push
push
push
push
push
lea
push
push
push
push
call
cmpsl
out
aad
popa
add
xchg
cld
jno
orb
add
mov
mov
add
hlt
loope
add
loop
xchg
imul
enter
push
sub
pop
jmp
push
push
lea
push
lea
push
lea
push
lea
push
push
push
push
push
call
hlt
add
lods
add
mov
lcall
mov
ljmp
mov
lds
testl
add
icebp
add
addl
add
std
add
out
add
cld
data16
pop
pop
sahf
hlt
out
in
fdivr
lcall
inc
cld
push
push
push
push
push
lea
push
lea
push
call
jae
xchg
fiaddl
add
add
idivb
add
in
stc
nop
imull
cli
xchg
mov
movsl
add
pop
lods
in
ljmp
add
add
add
add
addb
add
mov
pop
add
xorl
in
in
mov
push
push
call
xchg
mov
push
mov
jo
pop
add
jnp
add
cwtl
lea
lods
push
lods
std
add
mov
add
cmp
push
icebp
add
les
add
mov
test
jae
xchg
icebp
mov
mov
add
flds
add
incb
pop
add
jns
in
clc
lcall
cli
add
test
add
add
add
orb
xchg
push
push
push
lea
push
push
push
call
leave
in
push
mov
jae
imul
add
jae
mov
mov
subb
xlat
add
add
add
mov
jp
pushf
push
in
add
jo
push
add
out
mov
lcall
inc
adc
add
add
add
addr16
push
lea
push
push
push
push
call
sahf
add
add
add
add
fldl
add
clc
in
cli
add
add
adcb
xchg
aam
lcall
lcall
fwait
push
add
pop
add
mov
push
add
add
fldenv
sub
pop
jmp
push
push
push
call
lea
pushf
fs
aam
xchg
jns
xchg
add
sarl
ljmp
add
stc
popf
iret
add
loope
add
add
add
insb
add
mov
add
mov
mov
mov
add
inc
cld
push
lea
push
push
push
push
push
call
cmpsl
movsl
add
add
nop
add
lods
js
push
mov
imul
in
jno
mov
add
pop
mov
mov
fadds
add
pop
cmpw
jne
mov
push
lea
push
push
lea
push
push
push
push
push
push
call
add
test
clc
add
mov
arpl
test
add
pop
add
add
mov
push
add
add
into
rolb
jle
loop
add
push
mov
movsb
subl
add
rolb
xchg
add
push
jno
je
in
fcompl
add
shl
pop
jmp
push
push
push
lea
push
push
push
lea
push
push
call
add
fs
mov
xchg
repnz
jae
cmc
fwait
xchg
jae
add
lods
mov
mov
push
add
add
add
mov
roll
push
add
testl
test
imul
mov
add
add
cmpsb
mov
in
loopne
lcall
pushl
push
push
push
push
push
call
mov
add
mov
add
aad
mov
add
add
add
add
add
out
xchg
push
add
add
pop
xchg
add
cld
scas
jmp
add
add
rorl
add
in
in
pop
pop
mov
push
push
push
push
call
add
pop
add
add
mov
arpl
add
add
mov
add
in
lock
lcall
inc
sbb
lea
push
push
call
cmpsl
mov
add
addb
mov
test
pop
lret
out
rcll
cmpsb
pop
pushf
std
lock
frstor
sti
cwtl
add
jnp
test
add
add
mov
mov
popa
push
js
jecxz
js
les
out
out
add
in
hlt
lcall
push
or
enter
dec
dec
rol
add
push
and
add
sub
dec
pop
inc
xor
pop
push
xor
xor
xor
inc
pop
push
push
push
push
lea
push
push
call
add
add
add
add
add
les
add
fwait
ret
js
bound
ja
add
xchg
loop
data16
add
iret
hlt
add
enter
add
add
cmpsl
scas
faddl
xchg
outsl
mov
jmp
add
cmc
xchg
add
xchg
sub
pop
call
cmpl
je
push
push
inc
shr
shl
push
sub
add
sub
lea
pop
lea
add
rol
pop
push
shr
pop
push
call
push
lea
push
call
loope
push
arpl
jle
add
ljmp
mov
lcall
mov
add
popa
fisubl
mov
ja
xchg
movsl
jmp
ja
lods
xchg
xchg
add
add
mov
add
jle
add
add
jp
add
lcall
js
int3
fldz
ret
jbe
add
push
push
xor
sub
push
and
add
sub
add
dec
pop
dec
inc
not
lea
pop
push
not
dec
lea
pop
push
push
push
push
lea
push
push
call
add
add
fs
add
add
add
add
hlt
mov
add
add
add
add
ja
jbe
xchg
mov
popl
lcall
cmp
ret
int3
je
push
push
sub
inc
push
and
add
add
sub
sub
xor
pop
add
xor
pop
push
dec
inc
pop
push
push
not
pop
call
push
not
shr
sub
pop
cmpl
je
push
push
add
push
sub
add
add
shl
sub
add
pop
shr
pop
push
lea
ror
add
pop
push
push
lea
push
push
push
call
mov
xchg
mov
push
cld
repnz
add
add
jle
movl
into
cmc
add
enter
testb
sti
add
mov
into
add
add
xchg
repnz
test
movb
sub
pop
call
cmpl
je
push
push
shl
rol
push
push
pop
add
rol
xor
add
sub
not
ror
pop
xor
shl
pop
push
push
call
push
push
fcmovne
jmp
int3
add
add
lods
add
add
push
stc
lods
add
addl
add
add
lcall
add
mov
repnz
add
rclb
add
in
clc
lcall
push
dec
shl
rol
inc
pop
call
cmpl
je
push
push
shl
push
push
pop
add
sub
xor
sub
sub
add
inc
pop
rol
pop
push
xor
dec
pop
push
push
push
lea
push
call
stc
add
add
movsb
in
mov
sbbl
add
rolb
jns
push
xchg
add
incb
add
add
add
test
add
roll
rcrb
sub
pop
call
push
push
push
lea
push
lea
push
lea
push
push
push
lea
push
call
enter
loope
imulb
push
lret
add
int
add
add
test
add
add
add
mov
pusha
add
cmp
or
int3
je
push
push
dec
shl
push
or
not
add
shr
sub
lea
pop
rol
lea
add
pop
push
push
push
call
xchg
push
add
idivb
mov
add
push
fst
jo
add
add
jecxz
repnz
bnd
sahf
pop
add
xchg
pop
cli
add
add
mov
icebp
aam
sti
addb
push
add
add
js
mov
stos
in
icebp
add
push
lea
not
pop
call
push
lea
push
push
lea
push
lea
push
push
push
push
call
jge
popf
add
add
js
jns
mov
add
out
movsb
mov
icebp
scas
mov
xchg
add
mov
out
jge
xchg
add
xchg
sahf
add
imul
add
mov
add
subb
add
std
add
js
jmp
sub
pop
cmpl
je
push
push
shr
shl
push
and
add
ror
sub
shl
add
pop
sub
xor
pop
push
xor
dec
add
pop
push
push
shl
shl
pop
call
push
sub
dec
pop
cmpl
je
push
push
sub
sub
push
xor
add
sub
dec
dec
pop
rol
not
pop
push
sub
add
dec
pop
push
push
dec
lea
shr
dec
pop
call
push
push
push
lea
push
push
push
push
call
add
scas
std
xchg
out
add
scas
push
repnz
icebp
add
jno
jno
mov
add
push
mov
jno
add
add
js
jge
rolb
mov
add
pop
popa
test
rol
add
test
add
aam
xchg
xchg
scas
push
mov
add
sub
pop
cmpl
je
push
push
add
push
and
add
xor
xor
shl
sub
sub
inc
shl
pop
rol
sub
pop
push
lea
shl
pop
push
call
push
push
push
push
push
call
add
xchg
scas
pop
je
js
add
add
mov
jb
shr
add
add
add
ret
add
clc
add
xchg
push
pop
push
ja
lds
add
mov
cld
add
add
push
mov
xchg
jae
push
jns
in
in
pop
cmpl
je
push
push
rol
dec
push
or
not
add
dec
dec
rol
sub
not
not
not
sub
pop
shr
inc
ror
lea
pop
push
push
push
push
call
add
lahf
add
ljmp
repnz
add
std
aam
insb
jae
add
je
push
filds
xchg
sti
cltd
lea
jb
in
lock
push
push
not
add
shl
pop
call
cmpl
je
push
push
sub
push
xor
add
lea
sub
shl
xor
inc
pop
pop
push
xor
not
shl
pop
push
push
shr
dec
add
pop
call
push
shl
pop
cmpl
jne
push
lea
push
lea
push
push
push
call
scas
lret
into
add
mov
stos
bound
jl
pushf
roll
gs
cmc
in
fildll
add
repnz
add
add
int3
imul
adc
add
add
add
ret
xor
jmp
push
push
push
push
lea
push
push
push
call
add
add
add
add
popf
mov
mov
add
add
add
mov
cmc
in
xorb
aad
addb
addb
add
arpl
add
data16
pop
out
scas
xchg
xchg
add
loopne
pop
popf
faddl
lcall
rclb
test
pop
pop
push
push
call
ja
sahf
add
jns
mov
add
ja
add
mov
rolb
add
popf
cmc
add
mov
jmp
clc
not
pop
add
add
xchg
out
add
add
lods
insb
add
add
add
add
rol
mov
add
mov
testb
jnp
push
xchg
ja
jb
in
lock
lcall
push
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
stc
push
add
ror
add
rorl
add
outsl
lods
add
movsb
popa
add
movsl
jp
lock
mov
add
push
add
add
sub
pop
pop
pop
push
sub
shl
pop
pop
push
xor
dec
pop
leave
ret
push
push
lea
push
lea
push
push
lea
push
call
mov
add
movsb
add
out
add
clc
add
mov
test
jbe
jnp
sahf
add
add
add
iret
xorl
mov
test
add
push
push
xchg
mov
add
loopne
in
call
iret
xor
pop
mov
push
push
call
add
add
add
fwait
jb
add
mov
jae
mov
mov
push
rclb
stos
add
shll
push
add
cmpsb
push
add
mov
add
xchg
mov
cmpsl
mov
add
lds
fiaddl
lret
repnz
mov
repnz
add
add
add
sub
pop
add
push
pop
cmpl
jne
push
push
sub
push
xor
add
lea
add
not
sub
rol
pop
shr
rol
ror
add
pop
push
push
push
lea
push
push
push
call
cmpsb
add
add
lahf
fnstcw
je
xchg
jle
add
cld
mov
stc
pop
mov
add
fcompl
out
pop
add
testl
add
add
hlt
rol
lods
add
add
xchg
test
addr16
push
in
fadds
mov
lcall
pushl
push
push
push
lea
push
push
lea
push
push
push
call
in
add
add
loop
jo
add
add
add
sbbl
xchg
add
push
lea
fdivs
add
in
loopne
call
push
push
push
push
push
push
lea
push
lea
push
call
int
add
add
call
mov
add
mov
add
clc
push
mov
add
data16
pop
add
xchg
push
jnp
sub
pop
push
call
push
shr
pop
jmp
push
sub
shr
pop
cmpl
je
push
lea
push
call
mov
push
leave
pop
add
add
scas
add
jmp
ffree
lds
mov
ficomps
jle
add
cmpsl
movsb
fldenv
mov
mov
loope
add
js
je
mov
movsl
mov
bound
stos
out
add
roll
enter
pop
cmpl
jne
push
push
push
push
push
push
push
push
call
jno
add
pop
add
cmpsl
rcl
lods
add
aam
mov
add
add
repnz
push
add
add
fisubl
popf
jb
add
add
add
push
add
sub
mov
add
push
add
add
add
jge
add
inc
or
call
sbb
add
jge
lahf
push
lea
sub
rol
add
push
or
inc
add
sub
rol
sub
xor
add
pop
add
shl
inc
lea
pop
push
dec
shr
shl
pop
pushl
push
push
push
lea
push
push
lea
push
push
push
push
lea
push
call
clc
repnz
jns
mov
cmpsb
rcl
loop
mov
add
mov
push
xchg
add
mov
add
add
add
data16
add
push
js
add
les
jno
in
fdivr
lcall
shrl
add
push
lea
push
push
lea
push
push
push
call
mov
add
aam
pop
add
add
add
loop
add
jae
jl
arpl
add
push
add
add
jb
pop
sub
pop
lea
push
lea
push
push
push
lea
push
lea
push
lea
push
call
add
add
jb
dec
jbe
in
jl
push
loop
fmul
jge
add
push
add
ficompl
add
testl
out
add
add
mov
rolb
add
add
add
fwait
mov
in
in
lcall
push
lea
push
push
push
call
mov
cltd
push
add
call
add
add
cmpsl
addb
jge
add
fimull
enter
add
mov
pop
sbbb
bound
add
add
add
add
add
jge
fnstenv
in
fwait
arpl
insb
ret
pop
jbe
sub
pop
push
push
push
push
lea
push
push
call
scas
enter
xchg
xchg
xchg
outsl
add
cmpsb
add
pop
lods
je
rol
call
lret
add
popa
cwtl
faddl
mov
loope
out
stos
flds
lds
add
fisubrs
mov
add
gs
add
test
pushf
mov
lcall
add
movl
rcrb
rclb
add
sub
add
not
cli
fnsave
in
call
add
je
add
add
js
lcall
lcall
jmp
push
ror
pop
cmpl
jne
push
push
shr
inc
push
and
add
inc
sub
dec
sub
pop
xor
pop
push
push
push
push
call
xchg
add
add
add
loopne
push
jp
int3
cwtl
pop
xchg
fs
add
add
xchg
add
add
add
add
add
lcall
sub
pop
pushl
call
push
add
pop
push
call
push
lea
ror
pop
jmp
cmpl
jne
push
lea
push
lea
push
push
call
add
add
arpl
test
add
sahf
test
movsl
clc
scas
push
jecxz
add
into
stos
testl
cmc
ret
jne
add
add
out
jns
add
jp
cwtl
add
testl
pop
add
mov
int
jbe
je
xchg
xchg
add
lock
mov
push
shr
add
inc
pop
mov
push
push
push
lea
push
push
push
push
push
push
push
call
jp
pop
stos
xchg
add
js
add
stos
add
push
icebp
fwait
add
add
lcall
add
mov
add
stc
jo
data16
mov
into
hlt
mov
jle
add
test
add
add
add
mov
sub
pop
push
push
shr
pop
jmp
push
push
not
sub
inc
push
sub
add
rol
add
rol
sub
add
xor
add
pop
shr
rol
shl
lea
pop
push
shr
pop
pushl
call
push
lea
push
call
jno
faddl
add
ljmp
add
add
not
jl
push
push
jge
int
add
popf
loope
add
add
mov
add
enter
jmp
iret
add
sub
pop
call
push
push
add
add
push
xor
add
inc
rol
rol
sub
add
dec
pop
add
pop
push
push
push
lea
push
push
lea
push
lea
push
push
push
lea
push
call
add
std
push
add
add
add
out
add
push
xchg
mov
add
ljmp
push
add
std
add
add
add
add
pop
ljmp
jmp
xchg
cltd
add
sub
pop
pushl
call
push
sub
lea
not
pop
call
push
push
ror
shr
push
or
inc
add
sub
sub
add
sub
sub
shr
pop
xor
dec
pop
push
sub
add
pop
pushl
push
dec
shl
dec
pop
call
call
push
push
rol
push
sub
add
rol
not
add
sub
add
lea
dec
pop
lea
add
sub
inc
pop
push
not
inc
pop
pushl
push
push
lea
push
push
push
push
push
lea
push
push
call
imul
jbe
les
jne
add
pushf
add
popf
add
fildl
xchg
icebp
add
add
add
jp
lahf
add
add
add
scas
add
add
add
test
add
adcb
mov
add
test
add
mov
jl
add
jo
in
fcompl
aam
add
push
lea
pop
lea
push
lea
push
push
push
push
push
push
push
call
add
fsubrl
add
pop
add
incb
bound
fsubrs
add
jae
add
jbe
scas
stos
add
add
and
add
roll
jo
decb
ljmp
add
pop
loope
add
add
add
push
rol
pop
call
push
push
rol
add
push
xor
add
dec
sub
sub
shl
pop
ror
dec
dec
add
pop
push
shl
pop
pushl
push
sub
sub
pop
call
call
push
push
sub
add
push
push
pop
add
xor
sub
inc
pop
sub
shl
pop
push
shr
sub
pop
pushl
push
push
call
add
lods
mov
add
movsb
mov
add
add
addr16
aad
cwtl
stc
add
ja
aad
enter
xchg
lea
pop
xlat
mov
lahf
push
xchg
add
mov
add
shrb
add
lods
mov
cmc
add
incb
add
push
fildl
int
push
add
in
clc
pop
call
push
lea
push
push
push
push
lea
push
call
hlt
in
hlt
add
add
pop
xchg
faddl
rolb
xchg
pop
add
clc
mov
add
add
push
pop
out
outsl
sar
lret
lea
jno
add
repnz
aam
movsl
add
lds
add
mov
add
jns
add
mov
xchg
sub
pop
call
push
push
not
xor
push
xor
add
dec
sub
xor
dec
pop
lea
pop
push
push
push
push
call
add
pop
mov
add
out
mov
xchg
je
test
mov
jl
std
add
fistpl
out
mov
clc
repnz
add
jae
ja
aam
add
jge
nop
add
add
sub
pop
pushl
push
lea
push
push
push
push
push
call
aam
add
cli
push
add
push
arpl
add
mov
mov
mov
enter
fdivs
inc
add
mov
add
int3
pop
call
lea
push
push
shl
ror
xor
push
or
inc
add
lea
sub
rol
pop
shr
shr
pop
push
shl
pop
pushl
push
shr
lea
pop
call
push
push
push
push
lea
push
push
push
call
in
jne
leave
push
jns
sar
test
movl
jo
pop
mov
aam
faddl
add
add
add
mov
sar
ljmp
scas
std
add
mov
add
push
in
add
xlat
je
add
sti
mov
pop
lret
xchg
add
mov
call
call
push
push
sub
rol
lea
rol
push
and
add
add
not
sub
sub
add
pop
dec
sub
add
lea
pop
push
not
sub
shl
lea
pop
pushl
call
push
push
lea
push
lea
push
push
lea
push
push
push
push
push
call
add
push
fcmovb
cmc
jnp
pop
mov
stos
jno
fwait
add
out
lcall
mov
icebp
add
fs
sahf
scas
pop
push
push
mov
push
add
test
popa
add
cmc
add
lds
sub
pop
call
mov
push
push
shl
sub
push
sub
add
dec
dec
sub
shr
ror
pop
rol
lea
rol
pop
push
shl
shl
lea
ror
pop
pushl
push
inc
shr
rol
inc
pop
call
push
push
push
lea
push
push
call
jns
cmpsb
fwait
stos
add
xchg
add
xchg
mov
add
lea
ror
add
add
xchg
cltd
add
push
jmp
add
int3
icebp
add
add
add
rolb
xchg
add
mov
int3
add
jae
add
push
jo
out
pop
add
mov
lds
add
add
add
jle
add
sub
pop
push
push
rol
sub
dec
pop
pushl
push
push
lea
push
lea
push
push
push
push
call
add
add
out
push
ja
mov
add
jl
add
fdiv
add
test
push
add
rcll
add
outsl
add
fisubs
add
rorl
jbe
jno
rolb
add
add
ljmp
add
out
push
out
mov
in
in
call
push
push
xor
push
xor
add
xor
sub
sub
xor
not
pop
ror
pop
push
xor
rol
pop
pushl
call
push
push
add
rol
push
or
inc
add
sub
sub
inc
sub
shr
pop
pop
push
push
ror
push
xor
add
not
shr
sub
dec
add
lea
ror
pop
sub
sub
pop
push
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
mov
add
push
loope
add
fstp
add
mov
add
loop
mov
add
sti
add
add
push
jo
add
mov
lods
jno
add
add
addl
add
push
call
cld
fstpt
mov
shrb
iret
jae
push
ror
add
push
or
not
add
lea
dec
sub
xor
sub
pop
dec
inc
add
sub
pop
push
lea
inc
add
pop
pushl
call
push
add
dec
pop
mov
push
lea
pop
lea
lea
push
add
pop
push
push
push
push
push
push
push
lea
push
push
lea
push
call
xchg
les
fadds
mov
add
mov
xchg
add
ljmp
lahf
shll
add
stc
add
popa
add
int3
add
lea
add
add
jecxz
add
insb
addr16
sahf
loop
cmpsl
hlt
scas
add
testb
mov
loopne
push
push
inc
lea
pop
push
push
push
shl
pop
push
push
inc
xor
sub
dec
pop
push
push
push
push
call
clc
jl
jne
pusha
cltd
loopne
aam
mov
add
pop
stc
std
mulb
mov
bound
add
add
mov
xchg
shlb
mov
add
roll
add
jne
imul
ljmp
pushl
push
shr
pop
push
call
push
push
rol
shl
push
push
pop
add
inc
ror
sub
sub
xor
not
pop
sub
pop
push
push
lea
push
push
push
push
call
mov
add
add
xchg
call
add
jp
stc
jo
mulb
mov
add
sahf
jb
add
addl
add
aad
jns
loop
jae
add
add
cmpsl
mov
pushl
push
sub
sub
inc
pop
call
push
push
push
push
push
push
call
insb
add
cwtl
add
stos
in
xchg
in
insb
adc
jle
mov
repnz
incb
add
jne
cli
mov
shlb
mov
add
shll
add
add
mov
add
movb
sub
pop
call
push
lea
push
lea
push
push
push
call
xlat
stos
xchg
mov
cmpsl
pop
cwtl
aam
icebp
add
push
in
lock
xchg
add
add
iret
add
addb
add
pop
add
push
add
movsl
add
leave
sub
pop
mov
pop
push
push
call
add
rcl
add
sarl
jbe
arpl
add
add
xchg
xchg
cmc
jl
add
pop
add
call
js
xlat
mov
je
pushf
mov
pusha
rolb
jno
loop
xchg
in
xchg
add
loopne
fidivrl
add
lcall
jne
push
lea
shr
add
shl
pop
jmp
call
push
push
shr
push
push
pop
add
shl
rol
sub
xor
add
sub
pop
rol
shr
pop
push
push
call
add
js
lret
add
cmc
mov
jge
push
out
xchg
fcoms
add
icebp
iret
add
jb
faddl
sub
pop
pushl
call
push
lea
push
push
push
push
push
lea
push
push
push
lea
push
call
add
fldl
add
jae
mov
pop
out
add
add
loopne
mov
jp
pop
add
add
add
int
add
mov
jno
add
jno
jne
add
add
mov
mov
jp
xchg
nop
add
add
popl
call
push
push
push
lea
push
push
call
push
data16
gs
add
add
add
add
aam
add
shr
sarl
sub
pop
mov
lea
push
push
sub
push
sub
add
shr
shl
dec
ror
sub
shl
inc
sub
shr
pop
inc
inc
inc
shl
pop
push
push
push
push
push
push
push
push
push
call
xchg
mov
add
jno
add
fucomp
les
add
mov
mov
add
jp
xchg
mov
xchg
add
add
cld
cld
addr16
pop
jns
imulb
int3
pop
add
add
flds
mov
int3
popa
scas
mov
mov
lcall
jne
push
push
push
push
push
push
lea
push
lea
push
push
call
push
add
imul
aam
pop
add
push
add
add
stc
add
add
test
push
cld
xabort
jp
pop
mov
add
call
in
add
fucom
faddl
icebp
mov
fcompl
mov
add
push
push
push
push
lea
push
call
shll
mov
push
add
push
add
add
add
gs
add
cmc
jp
movsb
push
add
ret
imulb
add
add
add
jae
pop
stc
roll
add
imul
mov
add
in
in
pop
push
push
lea
push
call
mov
xlat
je
adc
add
add
pop
add
add
mov
jo
jmp
mov
push
int3
test
movl
int3
filds
in
xchg
add
lcall
mov
pop
je
adcb
clc
pop
call
push
push
rol
sub
push
xor
add
xor
sub
shl
ror
not
pop
xor
pop
push
add
sub
rol
lea
pop
pushl
push
sub
pop
call
push
rol
pop
call
push
push
push
push
push
push
push
push
call
add
popa
pop
push
add
add
add
xchg
cld
push
shrb
les
add
add
add
add
test
xchg
fdivrl
lahf
mov
mov
add
lcall
add
test
mov
inc
cld
lea
push
push
inc
push
and
add
xor
sub
shr
pop
shr
pop
push
push
push
push
push
push
push
push
push
call
add
scas
add
mov
into
jp
fwait
icebp
push
add
add
add
add
jno
stc
xchg
push
add
add
cli
add
incb
lcall
jne
call
push
push
push
lea
push
push
push
push
push
lea
push
call
add
add
jecxz
aad
add
push
out
lret
mov
into
xchg
jmp
mov
jle
add
lds
out
add
add
push
add
add
add
nop
jnp
add
shll
add
ja
add
pop
push
cli
lods
sub
pop
lea
push
push
sub
not
shr
sub
pop
push
push
add
inc
pop
push
push
lea
push
push
call
pushf
add
mov
imul
pop
add
add
push
aad
push
jo
jbe
cli
add
mov
lahf
add
add
add
add
jle
add
in
cbtw
in
add
add
add
hlt
lcall
add
mov
hlt
pop
pushl
push
push
xor
ror
rol
push
or
not
add
sub
lea
pop
lea
add
pop
push
push
push
lea
push
push
push
push
lea
push
call
std
jb
mov
fcmovu
ja
add
lds
pop
xchg
add
in
add
xorl
insb
pop
add
loop
add
in
jnp
add
out
hlt
sub
pop
push
push
dec
dec
rol
pop
call
push
push
ror
rol
dec
push
xor
add
ror
shl
sub
inc
sub
ror
pop
shl
sub
sub
xor
pop
push
push
push
push
push
lea
push
push
push
push
call
add
add
mov
sub
cwtl
add
fst
fiaddl
pop
jp
add
add
push
add
test
pushf
loopne
mov
push
addl
add
mov
data16
add
add
add
sub
pop
pushl
push
push
push
lea
push
push
lea
push
push
call
xchg
lret
jmp
pop
mov
add
push
fs
imul
jno
subl
pop
fs
pop
hlt
add
aam
add
add
jmp
add
incb
int
xchg
jl
add
pop
add
add
add
add
in
lcall
fsts
add
push
sub
pop
push
push
lea
push
push
lea
push
call
add
mov
add
add
enter
scas
push
add
lret
mov
add
cmc
lahf
add
testb
cli
icebp
add
fldl
outsl
add
add
add
pushf
roll
lahf
mov
loopne
test
push
lahf
add
push
movsl
flds
lcall
shrb
mov
repnz
push
or
inc
add
lea
dec
lea
sub
shr
dec
not
pop
add
pop
push
push
lea
push
call
je
jmp
notb
mov
mov
fadds
jl
xchg
push
test
add
popf
cmc
add
push
repnz
pop
add
mov
jle
test
sub
pop
pushl
call
push
sub
add
add
pop
call
push
inc
pop
jmp
push
sub
pop
pushl
push
push
call
jns
hlt
jae
push
call
jbe
xlat
ljmp
sarl
add
add
add
add
cwtl
add
gs
add
mov
push
shr
pop
jmp
push
push
sub
push
or
inc
add
add
sub
xor
sub
ror
ror
pop
not
sub
rol
pop
push
add
inc
sub
pop
pushl
push
push
push
push
push
call
add
add
out
add
add
js
add
add
add
jo
jo
jb
fnstsw
push
out
push
add
add
add
nop
fiaddl
add
add
add
faddl
xchg
cli
add
push
add
jmp
in
lcall
mov
shl
shl
add
pop
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
xchg
movsb
sti
add
mov
add
mov
add
jne
cmpsb
iret
in
mov
mov
aad
push
xchg
add
add
add
add
rol
mov
add
xor
add
imul
add
je
ret
mov
jbe
sub
pop
call
push
push
inc
push
and
add
sub
shr
sub
xor
pop
not
inc
dec
pop
push
inc
add
not
pop
pushl
push
sub
pop
call
push
lea
push
push
push
push
call
bound
add
add
xchg
mov
lcall
mov
lds
add
in
mov
jo
push
jecxz
mov
in
pop
push
call
push
push
lea
push
call
lahf
js
pop
les
add
add
jmp
je
movl
add
cmpb
add
xchg
int
pusha
push
addb
add
add
add
add
pushf
bound
add
out
movl
add
in
filds
lock
in
hlt
pop
leave
push
push
push
push
push
push
call
push
popl
lret
aam
add
popl
mov
in
fcmovne
scas
mov
testl
add
add
add
lcall
les
push
pop
pop
pop
push
inc
pop
pop
push
push
lea
push
call
add
mov
test
mov
adcb
xchg
fldln2
aam
add
jne
flds
xchg
mov
lahf
lods
push
jecxz
test
mov
fnsave
add
jmp
shr
add
fistps
arpl
in
jns
pop
jle
add
out
shr
in
hlt
pop
pop
push
shr
pop
leave
add
push
sub
sub
dec
add
pop
ret
leave
push
lea
push
push
push
push
push
push
push
lea
push
lea
push
call
subl
add
add
ret
mov
add
add
arpl
mov
lods
sub
pop
ret
push
push
push
push
push
lea
push
lea
push
push
call
xchg
mov
add
js
add
enter
mul
jns
add
add
add
add
les
mov
add
push
rcl
add
jecxz
add
pop
add
mov
jns
xchg
mov
popa
pop
mov
sub
pop
mov
push
push
lea
push
call
sbbb
pop
add
add
add
int
add
add
jbe
add
add
add
testl
ja
add
add
jo
sub
pop
cmpl
jne
push
shr
shl
shr
shl
pop
mov
push
dec
pop
jmp
push
pop
mov
push
ror
not
rol
pop
and
push
shl
pop
xor
xor
push
push
push
push
push
push
push
lea
push
call
add
add
insb
stos
jp
add
mov
insb
xchg
add
clc
fnstsw
nop
add
loope
mov
add
in
loopne
add
push
pop
xor
push
push
push
push
push
push
push
push
lea
push
push
call
mov
in
in
cli
add
add
mov
scas
mov
add
sti
mov
add
mov
add
add
repnz
add
lcall
sub
push
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
xchg
int
xchg
mov
add
add
add
imul
push
addb
pop
scas
data16
mov
add
jl
add
in
mov
icebp
rclb
add
push
jns
repnz
mov
add
rcl
sub
pop
jmp
sub
push
lea
add
pop
pushl
push
lea
sub
pop
pop
push
push
push
push
push
push
push
lea
push
call
mov
fildl
pop
add
add
push
sti
icebp
popa
push
test
add
pop
push
cld
add
loop
xchg
jno
add
add
in
add
hlt
lret
add
add
add
lods
add
cmpsb
lods
jge
add
add
add
mov
outsl
gs
add
mov
rorl
push
add
sub
pop
sub
cmp
jne
push
push
push
push
push
push
push
push
push
call
mov
scas
add
pop
enter
push
enter
fbstp
fiadds
add
add
add
out
js
mov
add
add
fs
add
add
aad
hlt
popf
jno
arpl
add
lret
fildl
xlat
mov
add
fcoml
aad
cmpsl
add
add
lahf
xchg
testb
add
sub
pop
mov
push
push
push
lea
push
push
lea
push
lea
push
push
lea
push
push
call
jo
stos
add
add
jne
fiaddl
rolb
cmpsb
mov
add
add
lea
xchg
push
add
pop
add
add
nop
add
scas
popa
cli
mov
add
lea
add
cli
add
test
into
add
cwtl
add
mov
jle
add
xchg
cli
add
mov
in
iret
testb
sub
pop
lea
push
add
sub
pop
sub
push
add
add
pop
mov
push
lea
push
push
push
push
push
push
push
push
call
jp
add
add
add
mov
data16
add
imul
add
int3
add
imul
test
add
mov
sub
pop
shr
push
push
push
push
push
push
push
push
call
add
cld
stos
jno
mov
add
add
add
add
add
jnp
lods
stc
add
mov
add
shll
jl
repnz
xlat
add
mov
add
test
add
add
mov
jle
in
add
add
pushf
add
sub
pop
add
push
inc
lea
pop
sub
push
add
dec
pop
pushl
push
xor
sub
shr
pop
pop
push
ror
lea
add
add
pop
shr
push
push
push
push
call
test
push
mov
add
addl
add
clc
lret
lds
add
jl
xchg
shr
notb
out
add
add
jbe
pushf
add
add
in
lock
lcall
loope
incl
add
rol
rorb
xchg
push
lcall
add
push
push
call
xchg
add
movsb
shlb
shl
out
add
icebp
cmpsl
mov
addb
mov
push
mov
pop
add
lea
sub
pop
cmp
jne
push
add
pop
leave
push
push
push
call
stos
andb
add
jle
add
insb
mov
fsts
sti
add
mov
mov
jb
add
pop
int
add
roll
add
mov
add
jno
les
clc
insb
xchg
fldl
add
loop
pop
enter
in
in
hlt
pop
ret
push
ror
add
rol
pop
push
mov
push
shl
pop
add
push
push
lea
push
push
push
call
orb
lret
add
jnp
mov
mov
add
add
add
popl
mov
test
add
fwait
mov
arpl
jle
pop
xchg
mov
add
add
add
stos
mov
addb
mov
lods
jmp
mov
add
add
lcall
push
push
push
push
lea
push
push
push
push
lea
push
call
add
add
add
xchg
hlt
add
pop
add
out
out
test
add
faddl
subl
add
enter
add
push
popa
aad
sub
pop
push
push
add
sub
pop
push
push
push
call
add
out
add
add
xorl
push
add
add
add
add
scas
fadds
push
jb
gs
fs
loope
push
loopne
add
add
add
mov
push
push
add
shl
pop
mov
push
not
pop
lea
push
add
inc
dec
pop
sub
mov
push
push
lea
push
push
push
lea
push
push
push
push
push
call
add
add
add
mov
add
add
insb
out
cmpsl
test
add
add
mov
add
add
push
lret
xor
test
mov
add
mov
add
push
in
fdivr
lcall
ljmp
sub
jle
fcmovbe
push
push
push
push
push
call
push
add
popf
add
test
mov
leave
mov
mov
push
std
faddl
test
add
mov
add
out
add
add
testl
add
add
sub
pop
add
push
push
push
push
push
call
xchg
add
mov
mov
lds
add
mov
xchg
mov
hlt
addl
add
add
add
andl
aam
add
incb
add
jl
add
push
mov
fisubl
add
fiaddl
sahf
sub
pop
mov
push
ror
inc
pop
add
push
push
push
push
push
push
push
call
jae
mov
add
in
mov
add
jns
add
push
mov
add
loopne
ficomps
ret
push
iret
mov
add
iret
add
icebp
sti
jbe
add
aad
fiadds
add
add
movsb
push
rcll
add
add
repnz
pop
mov
add
push
sub
ror
sub
pop
xor
mov
push
sub
lea
pop
and
rol
push
add
pop
rol
push
lea
push
lea
push
push
push
lea
push
push
push
call
add
scas
mov
mov
fwait
pop
out
rcrl
repnz
cmpb
pop
rolb
xchg
push
add
xchg
call
movsl
imul
ljmp
jecxz
cmpsl
add
fwait
add
xchg
push
add
push
scas
add
pop
scas
iret
mov
mov
sub
pop
xor
push
sub
shl
pop
inc
cmpb
jne
push
dec
lea
pop
add
cmp
je
push
push
lea
push
push
push
push
push
lea
push
call
add
add
pop
add
add
add
pop
xchg
add
jno
call
testl
add
mov
clc
scas
mov
add
add
sub
pop
add
push
dec
xor
pop
cmpl
jne
push
push
push
lea
push
push
push
lea
push
push
call
add
add
add
add
mov
movsl
add
fldl
add
lds
pusha
jp
test
fiaddl
add
mov
mov
mov
mov
loopne
xor
push
not
lea
sub
xor
pop
pop
push
not
pop
pop
pop
push
shr
lea
add
pop
pop
push
push
push
lea
push
push
push
push
push
call
stos
decb
add
push
add
add
add
bound
add
fsubrs
in
call
add
xchg
subb
add
push
add
dec
lea
pop
leave
push
shr
pop
ret
mov
push
sub
ror
lea
pop
add
mov
push
shr
shl
pop
push
testb
push
shl
pop
pop
push
push
push
lea
push
push
push
call
mov
add
aad
add
add
mov
hlt
jle
add
pusha
add
xchg
test
push
add
mov
cmpsl
insb
push
add
imul
add
ffreep
add
xlat
add
mov
xchg
add
fucomi
add
fldl
add
mov
arpl
enter
push
push
pop
call
push
push
lea
push
push
push
call
out
add
add
add
cmpsb
add
add
jne
fs
fnstsw
arpl
add
subb
lcall
xor
pop
push
add
sub
sub
pop
pop
pop
push
sub
pop
pop
pop
push
xor
shr
pop
leave
ret
push
push
push
push
push
push
push
lea
push
call
add
scas
add
mov
cltd
add
in
add
mov
add
out
in
loop
fyl2xp1
add
add
add
mov
add
add
mov
imul
outsl
mov
addl
in
push
push
push
lea
push
push
push
push
call
add
jo
flds
pop
push
add
add
in
mov
pusha
arpl
add
add
add
test
xchg
jmp
add
add
mov
add
lret
lock
movsb
mov
out
jns
jb
pop
jno
mov
stc
rcr
sub
pop
add
push
push
call
add
add
fcompl
into
push
jmp
in
in
cmpsb
pop
mov
fwait
add
add
xlat
add
add
cltd
lods
jmp
imul
pop
pop
aam
ret
pusha
pop
cwtl
jnp
add
add
mov
push
push
push
push
push
call
mov
pop
movb
add
add
roll
add
ja
test
push
add
mov
mov
roll
add
add
idivb
jne
push
mov
in
sub
pop
push
push
push
dec
add
pop
mov
push
push
push
push
call
fimuls
add
lods
cli
mov
add
jb
add
push
cltd
scas
add
movsb
add
filds
mov
iret
icebp
loope
add
lahf
add
push
lahf
lret
in
lock
lcall
push
lea
push
push
push
push
lea
push
push
push
call
add
bound
add
push
add
add
add
cld
xlat
mov
stos
fidivl
in
add
pushw
add
lods
add
in
loopne
pop
lea
push
lea
push
push
push
push
call
cmpsb
cltd
add
ja
mov
add
add
in
add
add
mov
bound
in
lcall
ljmp
ja
push
lea
push
push
push
call
int3
add
add
stos
lret
add
mov
hlt
mov
mov
add
add
incb
add
fxch
jo
add
out
add
add
add
add
rolb
xchg
mov
lea
add
sub
pop
mov
shr
push
push
push
lea
push
push
push
push
lea
push
push
call
add
scas
cwtl
imul
cld
fsts
add
fs
cmpsl
add
add
xchg
jnp
call
fadds
xchg
add
cwtl
add
fistps
add
mov
mov
add
add
mov
add
nop
mov
add
xchg
movsb
add
popa
lock
sub
pop
add
mov
push
xor
pop
add
push
rol
rol
sub
pop
pushl
push
pop
popl
push
push
push
lea
push
push
push
push
push
push
push
call
fildl
jne
js
add
add
add
lahf
jge
mov
add
add
mov
add
add
fdivrl
cltd
push
mov
xchg
fiaddl
addl
and
dec
pop
and
push
push
lea
push
lea
push
push
push
call
addl
mov
lods
lds
mov
jb
stc
popa
sti
add
arpl
pop
popl
int3
add
add
mov
xlat
lret
sub
pop
add
push
add
ror
ror
pop
xor
lea
push
add
add
xor
pop
mov
add
push
rol
add
pop
xor
push
pop
rol
nop
push
push
push
push
lea
push
call
mov
je
add
into
xchg
iret
add
push
mov
add
add
data16
jmp
mov
faddl
cmpb
add
add
lcall
push
add
pop
xor
nop
push
dec
xor
add
pop
nop
push
ror
sub
shl
pop
inc
nop
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
jne
jae
mov
xchg
pop
xchg
loopne
lods
shl
cli
add
add
pop
add
lods
stos
enter
loop
pop
cmc
lock
add
imul
add
bound
push
lea
push
call
mov
add
ret
test
lret
stc
ror
sar
lahf
add
jbe
aad
push
add
fldl
add
shrl
mov
in
clc
pop
cmpb
jne
add
push
lea
push
push
push
push
push
push
push
call
add
xlat
add
add
pop
filds
add
pop
mov
xchg
add
add
pop
addr16
scas
add
ficompl
mov
aad
add
nop
push
push
push
push
push
lea
push
push
lea
push
push
lea
push
call
in
add
pop
add
add
mov
clc
mov
jmp
pop
add
iret
add
scas
lahf
cmpsb
shlb
mov
icebp
movb
add
mov
add
in
mov
xchg
mov
add
data16
in
fcomps
inc
or
test
add
add
lret
rorb
faddp
lret
les
push
add
lea
shr
pop
nop
push
add
rol
sub
pop
inc
nop
push
lea
push
lea
push
call
mov
sarl
add
loop
je
rolb
loope
add
add
mov
popf
lret
add
lret
jle
fldl
mov
sahf
mov
add
jmp
in
hlt
pop
nop
cmp
jb
push
ror
add
ror
pop
xor
push
lea
push
push
call
mov
lret
add
add
mov
xchg
nop
add
add
add
add
mov
faddl
cld
add
mov
movsb
jb
add
cwtl
mov
push
add
pop
mov
xchg
pop
jnp
add
stos
add
add
mov
jl
add
jb
sub
pop
jmp
mov
push
add
pop
add
movzwl
push
rol
pop
mov
push
push
push
push
lea
push
push
lea
push
call
push
mov
outsl
mov
add
add
add
cltd
addl
add
xchg
add
andl
add
sti
push
add
int3
loopne
out
fwait
movl
lcall
rcll
mov
lds
dec
hlt
push
add
add
pop
xor
xor
push
push
push
push
lea
push
call
mov
add
jnp
add
add
out
aad
imul
add
mov
ret
add
aam
test
sub
pop
shl
push
push
push
push
lea
push
lea
push
push
call
lods
loop
add
jae
add
add
jnp
add
jne
sti
add
outsl
jns
jle
aad
add
rolb
stc
add
idivb
fwait
movsl
add
icebp
faddl
cmpsb
add
pushfw
push
jp
add
mov
add
stos
idiv
pop
bound
aam
sub
pop
xor
push
xor
sub
pop
shl
push
rol
not
add
add
pop
xor
push
push
push
lea
push
push
push
push
push
push
call
cmpl
add
add
imul
add
incb
jge
scas
iret
mov
mov
add
jge
add
arpl
pusha
mov
fcompl
loope
push
lea
shr
inc
pop
xor
push
lea
push
call
add
add
mov
stos
add
mov
pushf
jbe
add
imul
add
test
add
add
cltd
lods
add
jbe
pop
add
add
roll
add
mov
pusha
loopne
add
out
xchg
sub
pop
mov
push
xor
shr
pop
add
push
rol
add
dec
dec
pop
pop
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
push
push
call
shll
xchg
cmpsl
out
add
add
add
mov
mov
int
jp
add
add
add
mov
ror
xchg
leave
add
cli
add
add
push
cmc
add
add
add
in
mov
add
rolb
imul
pop
test
mov
test
jecxz
in
fcompl
push
add
add
sub
pop
pop
pop
push
sub
sub
pop
leave
push
pop
ret
push
push
lea
push
push
lea
push
push
push
push
lea
push
lea
push
call
mov
pop
add
gs
jbe
add
jmp
in
add
add
jne
outsl
test
jno
mov
jle
mov
add
add
pop
in
jo
in
fdivr
lcall
in
push
lea
push
push
lea
push
lea
push
push
push
push
lea
push
call
add
jnp
push
add
jmp
xchg
cmpsl
add
pushf
mov
xchg
add
mov
sub
out
add
lcall
add
stos
imulb
add
jae
add
add
add
add
mov
mov
push
shrl
lcall
push
push
lea
rol
sub
pop
push
push
not
pop
push
push
not
not
pop
mov
push
not
pop
mov
push
not
xor
dec
pop
mov
push
push
push
push
push
push
call
add
popl
data16
add
add
cmpsl
add
xor
add
shrb
add
pop
add
pop
mov
add
add
xchg
add
add
add
add
imul
add
add
loopne
in
call
test
jno
push
lea
push
call
add
in
xchg
add
mov
lea
add
in
clc
add
fdivs
fstp
cmpsb
xchg
lods
mov
add
add
add
testl
add
sub
pop
test
je
push
lea
pop
mov
push
push
push
push
lea
push
push
push
call
mov
jne
add
add
add
add
pop
icebp
add
xchg
ja
aad
pop
xchg
mov
cli
mov
jno
int3
add
int
add
mov
lcall
add
add
sub
pop
mov
mov
push
lea
push
push
call
iret
mov
add
jmp
imul
imul
out
mov
enterw
add
fwait
out
cld
bound
add
xchg
push
addb
xchg
lcall
cmp
je
push
lea
push
lea
push
call
mov
add
add
add
add
add
add
xchg
in
pop
xchg
mov
add
xchg
icebp
arpl
pop
push
leave
xchg
add
test
lret
int
iret
mov
add
lcall
rorb
popf
add
add
xor
cmp
subl
in
push
push
push
call
lds
mov
aam
fildl
js
add
mov
mov
xlat
add
add
into
movsl
movsl
filds
add
popf
mov
add
addl
iret
call
shl
add
add
enter
loop
add
add
jae
fmulp
jo
mov
aam
add
sub
pop
mov
inc
push
push
push
push
push
call
scas
repnz
lret
cmpsl
andb
cwtl
add
add
add
mov
push
lods
xchg
clc
add
jbe
add
scas
push
rol
mov
add
sub
pop
cmp
je
push
push
call
cld
fiadds
push
imul
mov
mov
lahf
mov
testb
add
test
imul
add
push
aad
mov
scas
je
icebp
xchg
mov
xchg
add
lcall
rorb
pop
call
ret
push
push
push
push
push
push
push
call
xchg
fldl
xchg
les
jle
test
add
mov
std
in
add
stc
nop
add
jo
movsb
into
add
add
call
xchg
add
add
add
push
sub
mov
add
sub
pop
xor
push
dec
dec
sub
pop
pop
push
rol
pop
pop
pop
push
lea
push
push
push
lea
push
lea
push
push
call
movsb
push
pop
cld
pop
roll
cmc
add
add
add
in
add
add
bound
pop
add
add
mov
stos
lahf
push
jmp
add
add
stos
pop
lret
add
test
mov
push
pop
movb
mov
add
add
push
pop
lods
leave
lea
mov
add
add
in
lcall
push
add
xor
pop
leave
push
sub
pop
ret
mov
push
add
add
sub
pop
inc
cmp
jne
push
lea
push
push
push
push
call
pop
data16
nop
add
lods
call
test
mov
and
nop
fsubr
xchg
pop
add
xchg
add
add
flds
icebp
jbe
sub
pop
lea
push
ror
pop
mov
push
sub
ror
rol
pop
test
je
push
push
push
push
lea
push
push
push
call
add
add
pop
add
add
xchg
cli
add
popf
mov
fmull
push
add
add
cmpsb
out
shl
mov
mov
jb
add
mov
add
add
enter
testl
lret
add
adcl
in
lcall
push
push
shl
rol
add
shl
pop
add
push
shl
sub
ror
pop
cmp
jne
push
ror
add
pop
mov
test
je
push
sub
rol
pop
mov
add
push
ror
pop
cmp
je
push
push
push
push
push
push
lea
push
call
fcmovbe
scas
add
add
pop
push
mov
test
pusha
ljmp
add
jmp
push
add
lock
add
add
add
ja
cwtl
je
add
mov
lods
xchg
sar
pushl
rclb
mov
shl
rol
call
xor
pop
pop
push
push
call
add
xchg
mov
add
add
lret
add
jp
shr
loop
mov
add
add
jecxz
sub
pop
pop
push
push
push
push
push
push
call
mov
add
jp
mov
lods
add
add
jns
mov
enter
add
push
mov
xchg
add
sub
pop
leave
push
sub
shr
pop
ret
lea
push
xor
inc
pop
pop
pop
push
push
lea
push
lea
push
push
push
push
push
call
pusha
lret
mov
mov
popa
fsubr
add
insb
add
fcoms
aam
pop
mov
mov
out
int
test
xlat
xchg
add
in
loopne
lcall
push
shr
add
pop
pop
leave
push
xor
dec
pop
ret
push
lea
pop
mov
push
rol
shr
lea
pop
pop
push
push
call
add
add
add
mov
jns
mov
add
mov
stc
mov
fmul
mov
stos
outsl
mov
push
roll
js
sub
pop
pop
pop
push
push
push
lea
push
push
call
sbb
add
add
add
cmpsb
popf
xchg
bound
shl
pop
out
add
lods
mov
fstpl
add
cwtl
iret
imul
add
movsl
int
in
rol
roll
add
xchg
add
imul
add
sahf
mov
push
push
call
incb
push
mov
out
jo
jbe
mov
je
ret
add
test
ja
add
add
push
stc
mov
movsl
push
add
add
fwait
movsl
shlb
in
clc
pop
leave
push
push
push
lea
push
push
call
add
add
in
clc
movsl
fwait
add
add
mov
mov
push
sti
test
mov
add
popf
jo
jne
jne
add
mov
cmp
add
xchg
add
repnz
pusha
jns
mov
fwait
add
icebp
xchg
mov
add
cli
xchg
push
sub
pop
ret
xor
cmp
push
inc
cmp
xor
adc
and
adc
cmp
jmp
cmp
xor
adc
jb
adc
cmp
loopne
mov
shll
or
add
sbb
mov
sub
inc
leave
xchg
shrb
push
lcall
into
or
adc
push
fnstenv
aam
mov
adc
loope
push
in
notb
ficomps
and
in
xor
jns
addr16
jne
xchg
je
jno
call
imul
cmpsl
test
in
cmp
lahf
mov
addr16
xor
dec
ret
or
add
pop
test
xchg
lock
icebp
rcr
sbb
daa
bound
xor
xor
outsl
test
add
ds
jns
lods
push
push
addr16
mov
or
arpl
adc
cmp
jnp
lea
xor
repz
sub
outsl
add
test
or
lret
ja
or
outsb
xchg
aam
loop
mov
mov
movsl
or
cmp
mov
call
cmpb
sti
outsb
mov
lcall
hlt
ds
push
popf
dec
test
push
fwait
les
sbb
xchg
lods
push
adc
int
or
lds
rolb
mov
imul
sub
imul
mov
fldenv
mov
call
push
call
xchg
sub
and
inc
pop
mov
outsb
dec
in
pop
cmpsb
xlat
ficompl
ss
sahf
adc
in
lea
cli
or
inc
xchg
add
mov
xchg
jb
gs
xchg
dec
mov
rol
dec
jbe
out
and
pop
xor
mov
adc
ret
sarb
push
push
rorl
fs
out
and
icebp
sub
push
jmp
mov
bound
mov
stc
jge
xor
add
addr16
sbb
adcl
or
leave
push
jbe
shl
imul
xchg
dec
adc
jno
ja
ljmp
jl
fistl
and
pop
loopne
sahf
pop
lea
adc
std
sub
cmpsl
pop
out
aam
jge
scas
lret
mov
add
xor
bound
add
outsb
lods
jns
cltd
clc
push
mov
rol
int3
inc
stos
xchg
mov
pop
dec
sub
pop
and
jnp
sbbb
ljmp
xor
mov
scas
jo
cld
mov
insl
push
es
jmp
bound
cwtl
pusha
test
sahf
shlb
push
mov
leave
jo
imul
jns
rorb
ds
and
aam
add
add
hlt
sub
and
pop
mov
test
cltd
or
or
xchg
movsl
addl
sti
fnstsw
ds
pop
pcmpeqb
xlat
cs
push
sub
int3
mov
stos
jl
xchg
pop
mov
sbb
cwtl
adc
jno
shll
sub
xchg
lods
jle
xchg
out
mov
stos
adc
std
or
dec
inc
sti
push
fs
xor
sbb
out
mov
add
push
push
repz
inc
aaa
stos
cmp
loope
and
insb
xor
dec
clc
stos
pusha
xchg
out
cmp
jl
repnz
or
fnstsw
out
ret
jmp
outsb
jle
inc
shlb
push
xchg
subl
inc
movsb
mov
sbb
jg
loopne
push
or
jecxz
aam
call
and
rcll
jno
jne
jns
jg
cli
jmp
or
pop
fmull
pop
out
mov
les
ret
xlat
mov
les
int
test
call
in
lods
fwait
sub
jnp
or
stos
int
add
cmc
cmc
mov
leave
dec
mov
cs
adc
push
rclb
mov
push
aad
cmc
jb
mov
pop
bound
insb
xor
filds
dec
aaa
gs
sbb
movsl
mov
arpl
lds
push
xchg
enter
or
xchg
lods
xchg
jle
adc
ljmp
repz
mov
out
or
jae
lock
mov
lods
iret
fdivl
xchg
clc
and
std
addr16
lock
ljmp
cmp
xor
movsb
lock
or
pop
les
in
pop
pusha
mov
dec
dec
inc
mov
test
ret
mov
rcrl
mov
sub
shll
cmc
je
adc
fisubrl
mov
movsl
ja
cmp
xor
data16
jo
mov
push
stos
sub
pop
push
test
cmp
lds
sahf
ja
imul
and
stos
sub
inc
shl
movsl
fwait
outsl
and
cltd
ljmp
add
adc
frstor
xor
mov
mov
sbb
loop
js
adc
pusha
fs
mov
jle
push
mov
cmpsl
jmp
pop
cmp
add
sub
mov
cs
ret
add
pushf
jecxz
test
adc
test
pop
pop
orb
out
loop
xchg
leave
mov
aam
js
push
pop
lods
test
ljmp
dec
repz
andb
jno
gs
scas
mov
cmp
lock
aas
nop
cmp
and
sbb
fwait
lea
dec
roll
sbb
lcall
or
adc
push
push
mov
rol
movsb
movl
data16
fstpl
cli
scas
call
out
loop
cmp
pushf
cmpsb
pop
or
mov
inc
jbe
mov
dec
xchg
jecxz
stos
loopne
int
xchg
pusha
push
or
stc
seto
cwtl
in
mov
pop
push
jns
stc
movsl
aam
ds
sahf
scas
andl
pop
push
pop
fldenv
jb
xchg
push
dec
js
jg
add
xor
arpl
lcall
test
aas
test
testb
sbb
mov
or
inc
jbe
cmc
aaa
xchg
mov
push
repz
insb
mov
push
test
int
sub
xchg
cltd
sbb
int3
daa
cmp
movsl
out
or
jo
add
outsl
xor
out
cmc
test
fcomi
idivl
imul
push
adc
cwtl
mov
adc
std
or
outsb
push
imul
add
rcrl
mov
in
jb
lret
mov
sub
je
out
dec
insb
or
jnp
int3
loop
sbb
js
sub
xchg
xchg
mov
inc
mov
xchg
fistpl
jb
insl
gs
movsl
mov
addr16
fs
xlat
and
cmp
mov
fs
adc
idivb
jo
inc
stos
push
jno
push
sub
stc
fsubl
dec
sub
xchg
pop
cmp
pop
outsb
popa
and
xor
loop
jbe
mov
jne
dec
cmp
sbb
jae
sub
loop
mov
or
fiaddl
mov
lcall
gs
lret
inc
pop
cmp
jp
xchg
dec
loop
rcll
mov
fildll
mov
pop
in
pop
lea
imul
adc
test
inc
outsb
xor
cmpsl
imul
ja
add
add
jle
xor
sbb
and
sbb
aas
je
push
xchg
mov
xchg
jns
jp
stc
and
sbb
push
aaa
roll
adc
and
psadbw
jns
test
or
iret
push
aad
xchg
adc
mov
adc
push
or
out
sbb
aaa
mov
sub
xrelease
add
pop
pop
push
stos
pop
cmpsl
adc
cmp
std
push
and
push
test
insl
fidivl
pop
inc
popf
aad
push
pop
mov
pop
sarb
sbb
aam
xor
jmp
jo
mov
lcall
or
jg
add
sete
xor
jmp
lret
sub
add
xor
add
mov
fwait
adc
adc
out
dec
pop
dec
subl
lret
jl
sti
outsl
popa
dec
enter
pop
out
add
add
pcmpgtd
pop
pop
cld
dec
pop
push
sub
gs
xchg
lea
sub
test
mov
das
stos
pusha
js
fs
dec
stc
push
std
pusha
adc
outsl
lds
loopne
data16
loope
push
loope
inc
jmp
stc
pop
int
jbe
or
mov
cwtl
add
push
jno
xchg
mov
lock
xor
mov
pop
scas
out
popa
repz
mov
inc
mov
mov
negl
sub
dec
les
stos
stos
jno
inc
movl
and
inc
xor
or
outsl
dec
ljmp
shlb
pop
jbe
es
inc
cmc
xchg
push
adc
mov
mov
jecxz
shll
dec
jg
aas
std
pusha
aam
fists
stos
xchg
cmpsl
sbb
pop
fsubrp
mov
test
movsl
and
jp
ficompl
int
ss
or
mov
test
mov
daa
or
pop
std
mov
sarl
fwait
sbb
jl
sub
test
je
rclb
addr16
loop
hlt
ja
out
enter
ja
inc
mov
fcmovnbe
mov
jp
ds
pop
or
sar
mulb
or
jns
adc
xchg
ds
cs
test
subb
xor
adc
in
aad
pusha
call
in
mov
push
push
lds
inc
jmp
dec
arpl
arpl
sahf
pusha
or
jno
and
jbe
test
sti
and
adc
dec
cmpsb
mov
xchg
cmc
jae
push
mov
inc
outsl
or
insb
clc
pop
rcrb
or
mov
adc
and
push
sub
mov
in
fcompl
or
inc
dec
ret
push
sub
out
in
daa
in
sub
pop
jl
adc
push
xchg
mov
adc
lahf
rcrb
rcrb
arpl
dec
xchg
mov
test
xchg
cmp
add
mov
fwait
mov
xor
test
dec
adc
cwtl
pop
nop
movl
ljmp
xor
in
cmp
stos
sarb
cmp
dec
sbb
xchg
sub
pop
out
push
icebp
dec
mov
cli
mov
dec
rcll
repnz
lret
add
rolb
mov
jg
cmp
jmp
add
mov
cmp
test
addl
and
pop
xchg
or
inc
int3
pushf
sarb
mov
loopne
sbb
adc
pop
xchg
jmp
cltd
addr16
loopne
sub
cld
xchg
add
ljmp
repz
aas
inc
dec
push
fistpl
outsb
jnp
loope
pop
lret
push
fwait
mov
inc
lock
lret
mov
jne
inc
adcb
outsl
jecxz
xchg
pop
out
jno
cmp
andl
pop
pop
pop
fucompp
inc
daa
mov
xor
jo
push
sub
or
jp
js
call
aaa
leave
ljmp
dec
mov
stos
jle
or
fiaddl
add
jge
out
fcmovnbe
mov
sbb
fists
jl
pusha
jbe
test
xchg
bound
out
push
clc
dec
sub
dec
xor
or
aaa
test
and
in
ret
mov
cmp
mov
in
xor
mov
sbb
sbb
sti
push
inc
mov
jb
cwtl
andl
stos
ljmp
mov
xchg
insl
vpaddd
fisttps
jns
mov
dec
pushf
mov
sub
cmp
fcmovnb
dec
clc
in
repnz
daa
mov
icebp
loopne,pt
scas
mov
out
xchg
addr16
int3
fldcw
into
inc
testb
in
push
ljmp
psrad
xorb
jbe
push
ja
imul
jnp
push
mov
add
out
test
push
mov
jle
std
mov
fstpl
inc
sub
jno
push
push
pop
imul
test
xor
fstpl
inc
push
dec
cmp
ret
test
xchg
or
cli
mov
cmp
inc
cmp
sbb
sbb
cmp
rcrl
sub
pushf
push
jecxz
cmp
fmulp
push
sbb
fs
data16
je
or
ss
jno
test
inc
lock
cmp
mov
mov
adc
aam
fisttps
add
sbb
adc
ds
jg
fisttps
jbe
adc
scas
fwait
shrb
popa
mov
jo
iret
mov
adc
mov
xorb
xor
mov
out
fsubs
shlb
cld
in
mov
fistpll
pop
dec
inc
xor
lret
ss
dec
hlt
xor
mov
je
xchg
aas
fcomps
xchg
add
push
cmp
in
sub
adc
int
test
cmp
sub
mov
lret
dec
out
xor
mov
lret
int3
in
in
or
cmp
mov
lea
jns
jecxz
ret
pop
or
inc
mov
cmpsb
push
dec
or
mov
cmpsb
mov
sbb
in
push
in
jg
jo
int
xor
insl
aad
ljmp
repz
loopne
cmp
and
adc
jne
mov
dec
fistps
sbb
xchg
pop
rcl
push
int
out
mov
cmp
cmc
lods
pop
and
push
je
js
sahf
in
or
mov
mov
jecxz
test
dec
mov
dec
daa
int3
push
mov
iret
push
jns
iret
lock
or
daa
sbb
xor
xchg
mov
ss
push
icebp
sbb
pop
mov
cmc
rep
mov
neg
ficoml
je
dec
cmp
add
and
push
mov
sbb
lahf
pop
es
lock
ljmp
lock
pop
repz
popl
insl
mov
jecxz
movsb
mov
xlat
dec
std
sub
fdivrs
ficoml
ja
std
imul
loope
shl
int3
mov
adc
mov
out
ficoml
mov
jno
les
sub
mov
cmp
movsl
push
sbb
or
mov
push
mov
sbb
outsb
pop
sbb
test
sarb
cs
jnp
andl
punpckhbw
js
lea
sub
sub
mov
in
fwait
inc
pushf
xlat
xchg
pushf
jg
xor
cmp
testb
hlt
mov
stc
pop
lcall
mov
sub
adc
push
subb
aam
mov
sub
ret
xor
xlat
and
andb
push
xchg
call
pop
cmc
xchg
scas
xor
inc
push
sub
lretw
ss
dec
push
or
stos
pop
cld
stc
cmp
loopne
loope
mov
lds
adc
addr16
inc
dec
mov
outsl
iret
lcall
xchg
addb
and
shll
push
lret
mov
rcll
or
pop
call
pop
sub
test
xchg
pop
cmpsl
inc
sub
imul
inc
and
push
js
fwait
and
xchg
jp
cld
cli
loope
and
out
push
pop
pop
dec
inc
adc
jge
inc
mov
dec
sahf
rcrl
arpl
test
int
mov
js
mov
mov
add
jo
cwtl
and
dec
shr
mov
sti
std
mov
adcl
jmp
dec
movups
pusha
pop
out
into
jns
mov
pusha
dec
pop
in
inc
add
out
movsb
aas
push
cmc
setle
jno
aad
dec
xchg
xchg
pop
jno
lods
bound
stc
push
mov
cmp
jg
fwait
cmp
adc
push
dec
adc
outsl
fwait
adc
mov
and
sub
add
repz
pop
insl
cmp
xor
scas
pop
and
mov
adc
das
xor
jmp
mov
fldenv
jo
jmp
add
pop
test
in
nop
push
mov
ret
push
mov
std
fimull
cld
mov
mov
jmp
xchg
push
loope
clc
fnstsw
sub
fs
push
cs
xchg
clc
xlat
aad
fwait
jl
icebp
pop
jl
pop
scas
sbb
and
arpl
mov
in
repnz
mov
imul
out
sahf
xchg
repz
adc
stos
popf
or
into
add
es
cmp
jnp
jmp
pop
mov
daa
rorb
cmp
sub
test
ret
cld
inc
push
mov
leave
push
dec
mov
in
pop
ficoml
and
aaa
xchg
mov
inc
xor
sub
mov
negb
in
inc
das
mov
int
cmpsl
aaa
jg
xchg
jne
in
lods
dec
pop
rol
imul
mov
mov
std
call
inc
push
out
popl
out
xchg
int
lods
ja
repz
je
sbb
xor
lret
ret
mov
dec
add
movsl
or
sbb
jo
mov
out
dec
sbb
frstor
cld
xorb
jg
int3
lret
jg
nop
test
aas
mov
repnz
loope
inc
in
cli
or
fcos
or
mov
lcall
lret
cmp
push
les
lret
pushf
pop
inc
dec
cmp
sub
out
mov
mov
inc
inc
mov
push
leave
sbb
pop
mov
clc
sub
dec
or
mov
push
push
sbb
shll
jle
xor
and
scas
ficomps
push
sti
jg
sub
pop
or
mov
inc
arpl
rcrb
mov
testb
ja
adcl
xor
outsl
push
sbb
stos
in
insl
test
dec
or
cmp
enter
push
leave
xor
inc
and
faddl
je
jecxz
cmc
sub
mov
add
xchg
addr16
das
push
icebp
jns
test
dec
mov
adc
iret
push
mov
sub
lds
push
cld
cli
es
dec
push
cmc
nop
pop
push
popf
jbe
cmp
mov
insb
movsb
nop
leave
mov
test
jne
xchg
jne
sub
cld
adc
inc
lock
mov
adc
sti
sbb
and
mov
xor
inc
pop
frstor
fnstcw
fmul
sub
out
and
test
push
js
xchg
in
xchg
int
repz
sub
xorl
idivl
mov
adc
shlb
and
int
dec
ret
clc
or
adc
iret
jmp
mov
fwait
mov
jo
and
mov
push
push
cmpsb
mov
ljmp
out
dec
shlb
adc
push
lods
dec
pop
ret
ficomps
outsl
enter
jnp
or
imul
jle
inc
cmpsb
jge
xlat
mov
iret
popa
sti
inc
andb
push
or
int
xor
inc
mov
fwait
in
dec
push
mov
outsb
push
sbb
and
jns
repz
add
bound
loop
xchg
loopne
imul
mov
xlat
jnp
xchg
out
cmp
out
loopne
lods
sti
add
mov
shrl
cmp
insl
cmpsl
add
xchg
push
xor
push
inc
fistpl
or
cmp
xchg
data16
movsb
push
sti
jb
pushf
jns
not
push
dec
iret
imul
inc
in
mov
sbb
push
test
cli
push
and
inc
mov
fisubl
dec
and
daa
push
fists
jmp
rclb
fadds
subl
and
and
adc
mov
jecxz
add
mov
inc
es
test
test
hlt
pop
adc
fxch
inc
nop
sbbl
pushf
jmp
ljmp
pop
faddl
mov
mov
push
scas
dec
add
sub
rclb
sub
inc
jns
mov
push
addb
cmp
xchg
test
pop
push
cmp
in
test
mov
dec
mov
pop
mov
je
pop
xor
pop
ret
mov
mov
scas
lret
out
loop
xor
xchg
scas
mov
loopne
sub
cli
aas
pop
mov
ds
les
cmpsb
jns
fisubrs
mov
into
push
jg
mov
imul
jns
push
xchg
out
sub
je
mov
mov
add
call
mov
jbe
ja
stc
sub
and
adc
add
out
add
cli
xchg
mov
or
jge
ret
xchg
mov
daa
daa
mov
lods
fstl
ss
aad
dec
fisubl
mov
shl
xlat
lret
daa
inc
mov
and
lret
inc
jo
loope
push
and
cmp
loope
mov
adc
cmp
mov
sahf
mov
outsl
les
push
push
xchg
shlb
push
mov
inc
adc
lcall
push
mov
out
rorb
std
movsb
push
movsl
cmp
xchg
jns
ficompl
mov
daa
add
mov
inc
dec
out
cltd
sbb
loopne
into
or
sbb
sub
xor
mov
arpl
dec
fdivrs
cld
int3
outsb
mov
loop
mov
pop
cmp
jae
pusha
lret
lea
aam
es
dec
sub
dec
int3
xchg
mov
aam
out
icebp
mov
or
sub
jecxz
arpl
mov
sahf
mov
pop
pop
aad
dec
loop
addr16
pop
movsl
out
and
and
or
push
fnstenv
add
test
pop
pop
sbb
mov
xor
cmpsb
test
mov
mov
fdivrl
and
ffree
jl
xchg
call
inc
sbb
movb
push
imul
test
addl
movsb
leave
jbe
xor
dec
cmp
push
xor
les
aam
imul
sub
xchg
std
adc
ret
fdivrs
mov
lods
gs
ficomps
xchg
jmp
js
sbb
std
inc
adc
movsl
out
pop
subb
add
xor
aaa
pop
lods
dec
je
mov
aad
cmp
shr
fwait
and
cmp
jb
rcll
lods
orl
jp
push
inc
cmp
push
sub
sub
push
ret
dec
lret
int
pop
fbld
adc
fsubrl
addr16
lret
cli
inc
test
inc
movsl
push
cmp
xor
mov
push
data16
sub
cmp
adc
push
xchg
arpl
sbb
arpl
jno
ret
dec
notl
cmp
push
fstpt
and
cmpsb
repnz
lea
repnz
xor
mull
test
and
adc
testl
lods
orl
mov
push
js
repnz
imul
cmpsb
lahf
insl
decb
ljmp
cmp
jno
les
dec
mov
call
jmp
repz
dec
push
and
or
push
mov
arpl
push
loopne
stc
iret
mov
pusha
xchg
arpl
sub
push
or
pop
or
mov
stos
mov
mov
outsb
in
dec
mov
push
jmp
jne
gs
icebp
or
jmp
cld
test
and
dec
hlt
jmp
add
mov
sbb
jns
fsubrs
dec
inc
scas
test
outsl
shll
push
sub
and
iret
add
orb
jnp
repz
inc
lods
or
shrb
pop
cs
dec
lock
lds
dec
in
dec
notl
and
mov
fucomip
mov
adc
push
push
add
out
cld
inc
or
dec
mov
loope
das
fdivr
push
outsb
je
ljmp
lcall
test
mov
sub
shll
add
mov
sbb
push
loop
fucomi
inc
mov
sub
lret
ljmp
lods
cmp
push
push
xor
dec
pop
les
pop
in
mov
negb
aas
push
mov
sub
cmp
loopne
pop
rcrb
clc
lret
daa
subl
xor
push
in
dec
add
in
jns
push
lcall
iret
cmp
fcoms
fwait
cmp
jo
cmp
clc
ret
mov
pop
push
inc
lcall
adc
test
fwait
cmp
xor
int3
add
fisttps
or
pop
adcb
push
mull
loop
addl
cli
fnstcw
fwait
rcl
cmpsl
xor
push
dec
out
cld
push
push
out
push
xchg
inc
sub
pop
or
cmp
std
icebp
int3
xor
mov
lret
xlat
push
xchg
das
cmpsl
mov
and
and
nop
sbb
sub
out
loope
cwtl
or
cmp
push
out
mov
mov
mov
cmp
das
clc
in
cmp
aaa
mov
jmp
stc
add
sbb
push
push
outsl
leave
sub
fimull
sahf
mov
xlat
sbb
adc
sbb
xor
leave
adc
jge
outsb
adc
pushf
shll
fldt
ljmp
xchg
or
nop
shll
pop
lods
mov
xor
aas
cwtl
sbb
or
fsubl
loopne
or
mov
xor
es
and
cmc
cmp
push
xchg
adc
mov
enter
shll
insl
enter
cld
rcl
add
cs
mov
add
dec
stos
lods
lcall
xor
adc
and
rorl
fxch
in
cltd
in
xchg
sub
adc
push
push
xor
in
pop
ror
jp
push
clc
cmp
mov
add
lods
push
and
xchg
mov
fsubl
jmp
ss
in
gs
loop
lods
cmpsl
add
es
mov
sti
scas
pop
out
lods
cmp
or
inc
dec
test
div
dec
mov
imul
les
dec
pop
mov
outsl
rcrl
inc
jge
jnp
mov
sarl
bound
adc
faddl
mov
add
imul
sub
int
push
mov
mov
sub
call
cmp
fldt
subl
adcb
test
inc
rolb
xchg
sarl
push
xchg
sbb
pop
jle
mov
push
inc
dec
mov
inc
out
mov
mov
nop
fs
mov
movsb
xchg
out
iret
add
push
xor
int
xlat
inc
mov
mov
enter
or
dec
push
out
aad
cli
testl
mov
sub
clc
push
adc
pop
sbb
in
sbbl
je
mov
xchg
pop
call
xchg
xchg
lods
sub
push
loop
xor
ja
mov
cmovns
xor
leave
xor
mov
stos
loope
jg
cmp
push
outsl
sub
test
push
inc
stos
cmp
in
push
jns
lds
pop
sbb
imul
pop
and
inc
lret
das
lods
mov
adc
inc
je
add
cltd
jo
test
mov
pop
nop
pop
pop
mov
cmp
hlt
rorb
or
xchg
aad
gs
mov
mulb
pmullw
pop
xchg
push
jo
cli
dec
mov
in
mov
cwtl
aas
mov
notb
lret
les
pop
dec
nop
sub
jge
cmp
arpl
int
lds
lods
nop
ja
lds
mov
cmp
cmc
sbb
pop
aaa
and
daa
ficompl
aam
fmull
sbb
add
es
xchg
cmp
jl
jno
jo
loopne
sbb
into
mov
pop
in
adc
and
fcoms
inc
fwait
aas
dec
add
xchg
pop
fisubs
mov
add
cmpsb
mov
jmp
inc
les
insl
pop
mov
fldcw
pusha
pop
popa
lods
popl
sub
addr16
insb
lahf
xlat
dec
push
loopne
pop
clc
push
ret
nop
or
lcall
test
xor
mov
jmp
sbb
mov
pusha
or
mov
rorl
clc
jnp
movsl
pop
jmp
mov
bound
mov
push
sbb
jo
lcall
mov
dec
es
cltd
xor
icebp
mov
repz
jae
dec
nop
sub
add
cmp
in
jle
aaa
hlt
jne
outsb
push
insl
xchg
aaa
pop
int
arpl
in
jg
inc
inc
and
push
ficoml
mov
and
xchg
mov
add
or
ret
loop
dec
jo
mov
dec
movsl
push
dec
push
xchg
mov
xor
xor
out
mov
out
lds
imul
xrelease
insl
cmpsb
fdivrs
bound
mov
xchg
cmp
sbb
sbb
addl
fs
ljmp
jg
dec
dec
outsb
inc
loop
pop
int3
daa
mov
andb
mov
mov
sbb
adc
out
xor
cmp
xchg
movsb
icebp
rorl
sar
mov
pop
mov
xchg
push
nop
enter
and
xor
jns
add
dec
cs
cli
in
dec
mov
movsl
xchg
adc
sti
fistpll
pop
push
push
mov
stos
and
es
sbb
psubw
mov
scas
push
aad
mov
and
rcrl
inc
pop
fs
dec
jnp
sbb
pop
lods
lea
mov
pop
sarb
scas
jae
cld
adc
movsl
cwtl
insb
mull
mov
sbb
scas
jmp
outsl
push
cli
mov
das
out
and
xor
push
fisttps
mov
lods
dec
sbb
dec
jae
add
ljmp
shrb
mov
ficoml
testl
int3
push
mov
xor
sbb
rol
inc
sarl
or
add
inc
jb
js
in
dec
mov
dec
dec
fisttps
inc
add
xor
xor
js
cmp
xchg
jo
mov
bound
outsl
xor
mov
data16
adcb
imul
pop
fdivrs
xchg
xor
in
imul
pop
or
fistps
scas
sbbl
xor
lods
add
jmp
mov
loopne
dec
repnz
shl
xchg
mov
sub
mov
xor
int
shr
int3
fwait
add
mov
fs
dec
sbb
test
or
pushf
inc
mov
pop
xlat
xlat
sbb
cwtl
pop
jbe
aaa
sub
pop
mov
test
in
repz
pop
leave
mov
mov
andl
mov
dec
cltd
cwtl
pusha
insl
fbstp
call
mov
push
mov
repnz
xchg
or
push
rcl
divl
decb
ret
mov
cwtl
lods
inc
xchg
pop
jp
test
sub
lds
test
mov
xchg
add
adc
movsl
psraw
jne
cmp
clc
rep
xor
mov
mov
mov
cld
and
jecxz
pop
push
pusha
fdivl
clc
ret
mov
lds
add
loop
dec
jb
daa
pusha
jae
hlt
jmp
dec
push
xor
pop
sbb
in
pop
cmpl
add
add
int
xchg
xchg
int
dec
push
rcrb
push
fisubl
adc
xor
dec
xorb
shlb
cmp
jae
outsl
fildl
mov
push
or
cmpsl
insb
cmp
hlt
mov
cld
jge
push
or
xchg
fwait
cwtl
mov
out
out
std
in
jecxz
inc
outsl
mov
add
add
or
xor
scas
mov
xor
dec
sbb
push
add
aaa
mov
jns
xchg
orb
out
pop
aad
les
nop
and
aas
dec
mov
test
aam
or
xchg
inc
in
dec
sub
fdivrl
xor
mov
xorb
push
roll
inc
pusha
es
fnstsw
jl
pop
jnp
inc
mov
enter
mov
subb
sub
jl
call
xor
xor
in
and
pop
fcompl
lods
mul
scas
pop
stos
push
andb
imul
stos
add
test
push
pushf
jle
and
bound
push
inc
aaa
gs
hlt
cli
and
cld
movl
in
sar
aaa
fimuls
inc
test
rcll
lcall
jge
jge
lahf
jmp
mov
mov
lret
dec
out
xchg
inc
sqrtps
aas
xlat
mov
mov
jecxz
jge
insb
rcr
jne
adc
xor
jnp
mov
jo
push
imul
dec
out
in
jns
fxch
test
push
ljmp
cmovg
mov
cmpsb
fwait
fcoms
insb
sti
enter
push
icebp
inc
or
dec
inc
xchg
add
and
jle
xor
jo
inc
fadds
fdivrl
lret
cltd
cs
mov
adc
dec
add
data16
and
int
in
fiaddl
sti
jne
cmp
lock
mov
lods
cmc
cmp
int
sbbl
enter
jno
or
push
std
leave
pop
test
mov
mov
dec
jb
int
test
fldenv
mov
outsb
xchg
les
push
cmpsl
sbb
push
ljmp
aad
das
sbb
repnz
sub
xchg
out
push
add
mov
inc
je
fidivs
pusha
adc
leave
jbe
imul
jno
dec
pushf
jb
push
mov
scas
mov
adc
pop
push
adc
jae
mov
jp
pusha
addr16
iret
stos
mov
mov
jecxz
xchg
loop
int3
js
lea
dec
pushf
pusha
sbb
xchg
or
cs
mov
gs
push
adc
mov
or
fwait
jno
or
dec
mov
xchg
cmp
and
lcall
icebp
and
inc
popa
inc
fidivrs
xor
les
aas
out
ret
dec
in
xlat
imul
push
xor
or
adc
out
dec
add
out
fcoml
jo
pop
pop
jmp
dec
clc
scas
pop
sbb
jne
jno
enter
mov
sub
dec
pop
jno
push
hlt
push
sbb
fwait
test
fdiv
outsl
pusha
push
jnp
sub
sbb
stos
inc
mov
mov
jae
les
mov
mov
test
jbe
xor
and
sbb
mov
pop
push
jbe
push
das
jmp
xor
movsb
cmp
push
out
push
or
sub
add
in
ret
sbb
clc
fisttps
mov
dec
int
sarb
test
cmp
cmp
fadds
imul
sarl
push
mov
dec
inc
sub
push
icebp
add
jb
xchg
mov
cmp
jge
lret
push
inc
xor
jne
adc
xchg
nop
pop
mov
push
int
stos
dec
pop
es
and
jecxz
jecxz
mov
sub
addr16
xchg
xor
ret
push
sti
fwait
popa
sbb
jo
scas
pshufw
mov
hlt
cmp
imul
sti
add
repnz
mov
addr16
icebp
sarl
int
xchg
out
adc
pop
ljmp
stos
adc
push
add
pop
rorl
adc
repnz
fidivrs
cli
rorl
fstps
mul
das
sbb
bnd
dec
les
mov
mov
xchg
mov
fistl
popa
pop
iret
lret
push
sub
xchg
test
mov
mov
or
add
ret
mov
jp
in
push
jo
sub
sbb
loop
mov
jecxz
lods
clc
inc
sub
xor
mov
mov
cmp
jmp
ret
mov
jb
pop
popf
mulb
jecxz
adc
ret
data16
mov
ss
scas
sbb
outsb
stc
pop
mov
lea
and
jns
adc
fdivrs
sub
jge
or
add
xchg
lret
ret
xlat
shrb
inc
sub
dec
mov
aaa
xchg
pop
aad
add
aad
gs
popa
jno
nop
jo
inc
test
rolb
mov
push
pop
mov
ja
sub
aad
mov
push
daa
mov
cmp
addl
popa
mov
lahf
rcr
adc
andb
arpl
flds
sahf
movsl
xor
je
adcl
loopne
stos
testb
leave
mov
enter
out
sbb
movsl
xchg
push
popf
rolb
adc
cmpl
das
sub
insb
jecxz
ja
addr16
fcom
aas
mov
aad
jmp
push
xchg
and
dec
xor
mov
enter
imul
cltd
xchg
in
mov
add
lahf
pop
icebp
subb
adc
pop
push
movl
movsl
fnstcw
cmp
sahf
inc
mov
sbb
sbb
out
jp
pushf
fwait
mov
xor
loopne
rolb
dec
clc
and
cmp
out
sbb
xor
enter
jns
jp
mov
dec
mov
mov
push
aad
out
dec
jmp
sub
and
movsl
int
ljmp
cld
push
test
stc
aad
cmp
ss
repnz
mov
test
test
dec
test
int3
insl
cmpsb
pop
mov
fnstenv
cmp
or
in
fnop
into
push
jno
jmp
mov
and
sub
test
mov
mov
orl
data16
sub
movsl
lods
andl
pop
test
mov
pusha
dec
push
cmp
movsb
inc
or
xchg
cmp
popf
push
inc
dec
loope
cmp
jl
loop
adc
std
xchg
es
shll
mov
pop
adc
dec
cmc
dec
aas
lcall
inc
xor
jmp
ljmp
addr16
pop
fnsave
test
insl
call
in
inc
xlat
lcall
ss
lods
cmp
push
mov
orl
or
inc
push
addl
lret
movsb
sub
add
push
into
clc
icebp
stos
add
pop
lds
rep
xchg
add
enter
testb
xchg
roll
jne
ss
enter
pop
js
jo
dec
repnz
push
mov
test
pop
xchg
rclb
fists
sti
push
clc
add
adc
add
mov
dec
frndint
sahf
inc
jmp
shr
cs
jecxz
adc
jb
cmp
push
std
add
cmp
sbb
mov
sbb
ret
jecxz
dec
push
icebp
jp
cmp
std
dec
sub
sbb
loope
jae
adc
or
xor
mov
insl
mov
test
xor
push
loope
icebp
mov
ret
popf
dec
mov
xchg
int
or
inc
inc
idivl
cmp
and
ret
cmpsb
add
outsb
jb
mov
push
insl
mov
pushf
and
insl
mov
add
stc
dec
fdivrl
push
cmp
mov
fsubs
dec
aas
vsubsd
push
jb
xor
cs
addr16
lods
mov
subb
iret
mov
pop
mov
loop
jae
sbb
add
inc
and
xchg
adc
je
lret
in
xchg
mov
push
xchg
ficoml
mov
or
xor
xor
adc
and
leave
dec
pop
mov
pusha
cmpsb
dec
in
inc
mov
inc
insl
pop
sbb
test
out
adc
sbb
add
arpl
test
sarb
sti
inc
mov
xor
jmp
ficompl
fs
ret
pop
sub
pushf
jge
xor
test
pop
xchg
in
push
movsb
iret
rcr
sbb
push
pop
sahf
imul
adc
sub
inc
sarb
lahf
xchg
cmpsl
popl
jp
dec
cmpsb
xor
xchg
mov
movsb
or
testl
movsb
push
pop
pop
inc
jmp
jno
call
mov
xchg
pop
les
lahf
ljmp
mov
pop
adc
xchg
ja
jns
out
xor
cmp
lret
cli
and
dec
repnz
xchg
loop
mov
jecxz
adc
dec
push
popf
push
das
addl
pusha
jo,pn
gs
out
inc
jg
jp
call
push
adc
inc
pop
push
data16
jecxz
jmp
jl
push
xor
bound
xchg
mov
jno
inc
jg
jl
pop
mov
add
aaa
popf
test
lods
mov
lret
loop
cmp
adc
and
inc
aad
cmp
add
mov
aaa
insb
adc
call
call
sahf
mov
pushf
sbb
jl
push
fsubl
xchg
push
nop
scas
ret
xchg
out
nop
push
or
xchg
inc
je
push
pop
cmp
add
jecxz
push
pop
adc
enter
or
xchg
arpl
mov
and
adc
or
mov
sbb
push
arpl
push
push
std
dec
pop
xchg
inc
andl
call
stos
or
int
cmp
cmc
jo
inc
jne
jae
rorb
add
jmp
jae
jno
ret
out
xor
cmc
push
or
popa
push
inc
jmp
xor
push
xor
jns
sbb
aam
inc
pusha
xchg
lock
je
xlat
add
shl
mov
ret
pusha
xor
jl
jp
mov
cmp
and
call
pop
test
cmpb
addr16
leave
cmpsl
cmp
or
sbb
cmp
fstl
js
push
clc
hlt
stos
incb
cs
lret
add
into
adcb
xor
inc
clc
push
mov
movl
push
mov
xor
lahf
xchg
pop
xchg
and
inc
add
sbb
push
jecxz
loopne
stos
ficoml
insb
lcall
mov
fisttpl
xor
vpcmpeqd
insl
add
lcall
stc
shrb
mov
cmpb
jp
mov
cmc
lahf
hlt
dec
loope
pop
pop
imul
cwtl
jg
or
sub
cltd
mov
jae
jns
mov
jnp
stc
inc
sbb
das
cld
push
adc
sbb
pop
push
jno
testl
test
mov
pop
sub
pop
xor
jg
lcall
push
push
scas
les
int
mov
not
push
and
nop
in
xchg
cmpsl
sub
and
and
divb
ud1
add
mov
sub
inc
movsl
xchg
pop
jmp
add
in
dec
idivb
stos
int3
mov
or
cmp
movsl
mov
idivb
insb
push
add
cwtl
or
pop
sbb
imull
cmpsl
or
sub
shl
scas
sub
mov
in
jne
or
hlt
adc
dec
jmp
lea
faddl
lods
js
sub
sub
scas
jmp
data16
lds
ljmp
jge
mov
cmp
sub
adc
in
cld
outsl
xchg
add
xchg
adc
xchg
and
loope
insb
lds
xchg
xchg
fmul
clc
and
xchg
in
adc
push
test
inc
fimull
fnstsw
outsb
fbstp
push
aam
mov
dec
jge
inc
xchg
in
inc
bnd
cmpb
addl
int
aam
mov
mov
push
lods
test
inc
aas
repnz
xchg
gs
cmp
or
out
ficoms
mov
xor
push
dec
nop
and
mov
jl
jns
fisubrl
inc
pop
fbstp
mov
sbb
jne
jle
jnp
adc
in
leave
xchg
and
icebp
adc
adc
xchg
fidivrs
pop
imul
xor
daa
push
movsl
lret
cmp
ds
daa
mov
push
std
scas
inc
push
imull
fbld
mov
push
pop
dec
sbb
insb
cmp
inc
test
or
adc
mov
adc
and
nop
pusha
stos
fisttpll
dec
jecxz
in
xor
dec
jg
cld
out
ja
push
dec
dec
mov
arpl
out
outsb
fwait
test
mov
icebp
cld
cmpsb
icebp
pop
pminub
mov
jmp
sbbb
in
imul
inc
in
push
out
in
xor
int
push
mov
fsubrp
shl
adc
mov
imul
or
sub
popa
jns
arpl
sub
mov
jecxz
loop
aad
cmpsb
loop
or
sbb
in
mov
inc
out
loopne
js
loopne
pop
push
push
jns
rorb
insb
xor
push
in
xchg
xchg
jne
pop
ja
sub
jg
and
popf
lock
aam
insb
aas
pop
mov
mov
adc
fsubrl
jmp
loop
out
xlat
aad
adc
rcrb
xor
bound
lods
mov
jmp
stc
or
fbstp
jns
and
aad
loop
call
add
inc
data16
lcall
in
xor
dec
psrld
xchg
int
push
aam
xlat
aad
and
stos
rclb
push
push
popf
lcall
into
cmp
stc
add
int
dec
sbb
scas
mov
arpl
sub
test
lret
fisttpll
mov
inc
push
andb
and
jns
cs
je
jle
cmp
mov
or
aaa
dec
outsl
fdivr
sbb
popf
jb
dec
es
inc
icebp
das
outsb
or
push
repz
jno
bnd
popf
into
xor
std
scas
adc
int3
xchg
fistpl
fs
push
push
and
cwtl
sbb
mov
add
xor
xor
test
mov
pop
pop
adc
push
data16
popa
jg
mov
sbb
inc
rol
clc
sub
mov
test
lret
mov
aaa
cmp
std
stos
scas
mov
or
xchg
mov
movsl
cmc
jbe
loopne
fisubrs
lea
adc
add
xor
jle
xchg
cmpsb
add
pop
fiadds
daa
mov
cmpsl
jle
lods
jo
fcompl
xchg
jmp
adc
cmp
popa
stc
int
lds
jmp
and
dec
add
jne
sbb
mov
cmc
push
cmpl
aaa
outsb
repz
nop
and
sarb
jecxz
pusha
addb
imul
scas
xlat
add
inc
pop
dec
das
addr16
popf
in
inc
pop
sub
sbb
es
adc
fisubrl
and
subl
movsb
scas
cmpsl
dec
sbb
mov
xor
pop
inc
push
pop
loope
and
les
mov
pop
rorl
and
imul
imul
div
pop
das
rcrl
and
mov
jecxz
jle
push
test
clc
cli
loopne
and
sbb
fldl
imul
adc
shrl
movb
cltd
nop
std
add
ret
cmc
mov
mov
cmp
mov
mov
jl
loopne
incb
cmp
inc
loopne
sub
mov
jno,pn
popf
dec
mov
push
into
mov
lret
mov
cld
sahf
addb
adc
popa
inc
fsubs
insb
ret
pop
rcrl
lret
jnp
cmp
imul
pop
sub
mov
notl
push
dec
xchg
sti
sbb
sub
lods
pop
mov
shlb
out
icebp
sar
or
pop
cmp
out
sbb
mov
movsl
insl
aad
pop
xchg
std
jecxz
xorb
inc
repz
sub
in
andl
mov
fsubr
adc
addr16
jecxz
aad
xchg
out
inc
sahf
jmp
mov
and
lahf
pop
out
pushf
push
loop
sarl
stc
push
xlat
mov
push
inc
add
or
repz
ljmp
loope
jnp
ds
pop
mov
mov
and
sub
push
mov
in
sub
lods
fwait
jb
je
add
mov
ljmp
jbe
shl
pop
sbb
mov
cs
adc
xchg
dec
insb
gs
fs
jb
inc
jb
dec
pop
cmp
sbb
dec
mov
popfw
lods
enter
fistps
jl
mov
call
les
loop
jo
jns
cwtl
jb
in
arpl
sarl
lods
jp
ficompl
aaa
and
pop
push
mov
or
pop
mov
mov
js
add
mov
jno
dec
mov
inc
test
sub
xchg
cs
enter
mov
cwtl
daa
dec
pop
mov
push
inc
jbe
divb
push
push
or
mov
jns
jp
xor
test
lock
inc
pop
in
push
bound
cmp
orb
cmp
inc
mov
xor
mov
xor
lock
add
sbb
cmp
jmp
sahf
out
mov
cmpsl
sbb
mov
dec
mov
or
sub
xor
jno
idiv
arpl
cmp
jae
sub
or
pop
pusha
cmp
in
pusha
mov
inc
sbb
out
dec
jae
push
jl
ficoml
les
adc
and
cwtl
xor
mov
aam
insb
dec
dec
pop
mov
fldcw
lods
je
mov
jg
xchg
add
iret
mov
sbb
push
sti
sub
cmpsb
jge
mov
pop
fisttps
dec
sbb
xor
je
push
into
or
push
ja
cltd
mov
test
int
jb
mov
pop
mov
insl
pop
cli
mov
push
and
and
ss
into
incb
mov
mov
inc
cmp
stc
mov
and
cmp
mov
incb
sub
mov
ds
cmp
sub
and
add
daa
xor
hlt
repz
je
out
sbb
xor
addr16
mov
adc
lahf
jae
inc
mov
std
push
pop
fildl
icebp
cmp
xlat
std
ret
adc
push
push
inc
lret
mov
pop
stc
adc
movsb
jae
vmptrld
pop
loop
mov
add
ljmp
outsb
dec
xchg
rorb
sbb
xor
int3
cmpsl
mov
push
xor
inc
adc
and
or
and
ss
jmp
movsl
mov
mov
sbb
or
js
jb
mov
jns
addr16
arpl
jno
dec
mov
divb
daa
std
lods
sub
push
xlat
lret
jp
sub
mov
test
adc
nop
iret
jbe
sti
jae
inc
test
jle
dec
xchg
jbe
lahf
sbb
jg
xor
nop
fs
leave
cmc
fsts
in
cld
das
pop
mov
out
imul
jg
into
out
push
out
push
or
dec
jecxz
jg
nop
xchg
int
fwait
in
mov
fdivrs
mov
xor
dec
mov
mov
fsubl
sbb
out
fisubl
pop
int
aas
and
jmp
clc
or
mov
push
sub
mov
mov
mov
and
push
lods
mov
or
cmpl
push
dec
out
pop
fadds
scas
insl
and
sub
dec
or
lret
pop
xchg
or
push
sub
test
mov
pop
mov
or
mov
pusha
movsb
sti
outsb
data16
into
fwait
add
cmp
and
fistpl
adc
cmp
lods
jnp
incl
cmpsl
add
movl
fs
scas
flds
cmp
stc
in
sarl
mov
pop
leave
dec
out
and
into
int3
xchg
xchg
ss
in
sbb
sbb
lret
pop
rcrl
add
test
call
or
stc
vphsubwd
sbb
sbb
das
mov
sahf
xchg
addr16
es
pop
mov
sub
pop
ret
fidivrl
fistpll
daa
push
pop
xchg
testl
aaa
movsb
std
cli
nop
add
loop
out
push
push
sub
leave
cmp
outsb
in
fldcw
cmp
xor
sbb
rclb
sub
jb
jmp
mov
xor
dec
mov
cli
or
divb
and
or
or
add
jnp
push
xchg
decb
fbld
inc
add
or
je
sub
dec
mov
jne
in
add
repz
out
shrl
sub
das
roll
insl
sub
fwait
sub
jecxz
bound
stos
int3
loope
push
xchg
xchg
and
adc
fcmovne
repz
adc
stos
test
in
lods
lcall
call
ljmp
xchg
fmull
push
adc
pop
outsl
mov
int
jno
bound
mov
jae
shlb
push
cli
mov
jbe
scas
ja
lea
jecxz
xchg
or
ret
lods
xchg
xorb
enter
sbb
es
popa
xchg
jno
mov
xchg
decl
cmp
xchg
fists
insb
out
inc
pop
xor
mov
aas
lods
int
movsl
hlt
fs
mov
pop
xchg
xchg
lea
cltd
inc
call
aaa
push
cmp
dec
cmp
rorl
xchg
bound
mov
out
cmp
in
xor
mov
shll
cmpsl
in
lds
jle
and
jp
mov
mov
negb
push
or
adc
xchg
sahf
push
mov
xchg
push
addr16
cmp
inc
and
push
add
mov
test
ds
sub
pop
pop
ficompl
xor
mov
movsl
and
and
mov
and
repnz
sti
mov
jo
int
mov
cmp
cld
pop
out
ss
pop
mov
addr16
adc
orb
cmpsb
inc
scas
mov
push
xchg
dec
nop
cmc
jp
dec
xor
into
xlat
loop
and
das
insl
push
jecxz
xor
sti
mov
jle
mov
fbld
mov
mov
cmp
xor
fwait
add
inc
aam
call
cmp
sbb
xchg
adc
sbb
loopne
jge
cmp
cs
sub
into
xor
stc
and
dec
pop
sbb
ret
cmp
mov
push
pop
or
insb
loope
es
scas
pushf
sbb
cld
pop
int
fstl
pop
cwtl
incb
add
in
roll
nop
sbb
xchg
mov
lret
repnz
and
cmp
jns
es
xlat
mov
or
repz
dec
add
sub
dec
in
jnp
iret
dec
aad
mov
lea
jl
leave
movsb
mov
icebp
insl
xlat
lahf
hlt
xchg
inc
dec
cmp
inc
push
pop
imul
mov
lahf
stos
xchg
sub
repnz
lock
cmp
clc
hlt
test
int
mov
aad
inc
push
sbb
insb
cli
mov
sar
xchg
arpl
js
cmp
pusha
inc
cmpsl
aam
mov
cwtl
fisttpl
push
mov
xor
sbb
lea
inc
in
popa
cmp
rolb
fistpl
dec
jmp
push
pop
xlat
insl
cmp
inc
jecxz
jg
mov
adc
sub
les
jnp
xchg
insl
loop
sbb
xor
frstor
adc
add
add
aam
inc
xor
sub
and
add
mov
shlb
cltd
mov
loope
mov
and
mov
add
les
sbb
mov
pop
mov
xchg
xlat
xchg
mov
stc
loopne
mov
out
cmc
stos
and
xor
mov
mov
gs
mov
inc
push
pushf
lahf
int
ds
push
faddl
pop
fsubl
rclb
add
movsb
pop
js
sbb
out
cmpsl
mov
push
cmp
jno
ret
xchg
and
fistl
ret
imull
add
and
and
mov
add
cltd
fs
cmpsl
das
arpl
lcall
push
push
lods
push
xor
mov
fsubs
scas
ljmp
pop
adcb
lea
test
sbb
data16
jmp
mov
aaa
scas
notb
stos
pop
adc
in
mov
jp
add
lret
out
mov
xor
cs
dec
data16
xchg
dec
adc
mov
mov
pushf
mov
std
pushf
pop
outsl
cmpsb
aad
fwait
jb
div
adc
aaa
mov
xor
jbe
inc
pushf
ljmp
sbb
push
fs
icebp
dec
push
add
nop
xor
mov
out
push
mov
sub
loopne
sub
mov
fstl
mov
inc
pushf
cmpsb
mov
mov
loopne
cs
fisubrl
inc
fcompl
adc
push
dec
sub
in
xchg
add
ret
or
push
mov
pushf
jmp
lea
mov
test
lret
cs
mov
sti
jns
imul
pop
xchg
jle
or
adc
jp
sbb
cmp
insl
mov
xchg
and
inc
mov
imul
push
push
es
xchg
aam
enter
bound
inc
cmpsb
sbb
adc
or
iret
out
add
icebp
mov
pop
add
jno
and
dec
adc
xchg
int3
fldenv
xchg
addb
pop
jl
sbb
dec
push
inc
mov
mov
mov
and
push
jge
aam
dec
and
scas
inc
lahf
les
lods
pop
sbb
das
in
jmp
hlt
xlat
push
sti
lahf
mov
add
mov
test
jmp
xor
mov
and
inc
or
stos
addr16
or
pusha
mov
std
loopne
popf
push
mov
mov
add
mov
push
xor
jo
hlt
lock
cld
mov
mov
outsb
cs
mov
cltd
test
sub
fwait
or
inc
xor
fldt
cmp
test
xor
addr16
gs
add
jle
sub
sub
jns
repz
jge
pusha
jnp
nop
inc
mov
sbb
cld
cs
jo
or
mov
jle
adc
jae
aaa
xchg
cmp
sbb
adc
dec
and
xor
jnp
fsub
rcr
adc
mov
fwait
iret
pop
pop
sbb
lret
push
inc
pop
pop
bound
push
or
scas
push
sbb
fmul
stos
add
pop
dec
into
sub
inc
and
scas
out
mov
inc
loope
imul
fs
ja
dec
sbb
fs
mov
mov
cmp
adc
sub
ret
sti
lds
sub
mov
cwtl
imul
mov
nop
or
push
xor
sbb
ja
fisttpl
add
adc
xchg
jns
fsubs
negl
fadds
pop
pop
mov
jae
aas
lret
cli
test
fiaddl
jo
fisttpl
cli
in
sahf
cmc
aas
cmp
test
int
cld
int3
sti
hlt
xor
fwait
push
popa
popf
jae
xchg
dec
cmp
mov
xor
mov
and
lahf
aam
leave
cmp
inc
into
sarb
mov
pop
push
cwtl
dec
or
mov
ret
int
lret
xor
sub
push
xor
das
fcoml
mov
test
mov
popf
dec
imul
repnz
and
xchg
in
stc
test
push
push
inc
ja
enter
sbbl
xchg
fnop
shr
lods
push
sbb
xor
cmp
rcl
inc
clc
rol
inc
xchg
mov
sub
jmp
popf
mov
sbb
sub
aam
and
into
and
mov
cli
adc
adc
pop
and
xchg
leave
shr
fcmovbe
loope
ss
mov
mov
add
cmpsl
or
cwtl
inc
pop
sahf
lods
and
xchg
cwtl
adc
sahf
mov
pop
pop
cmp
mov
mov
iret
mov
or
roll
ret
je
ret
cli
or
sub
stos
add
lret
cltd
test
mov
pop
dec
mov
pop
push
jecxz
test
pop
rcll
std
cmpsb
jp
xor
sub
ret
inc
int
aam
pop
jmp
outsb
int
outsl
jl
aam
add
and
mov
add
mov
addr16
adc
out
pop
xchg
cli
xor
jns
mov
popf
ss
inc
mov
das
mov
lahf
jno
ds
sbb
xchg
cmp
sub
enter
loopne
xchg
movsb
das
mov
jmp
insb
cmpsb
mov
hlt
pop
xor
sub
gs
fadds
xchg
dec
or
xor
out
dec
pusha
dec
push
es
pop
lret
bound
dec
cmp
dec
imul
and
adc
cmp
cmp
jl
lock
add
mov
adc
cwtl
mov
and
fwait
lret
cwtl
sub
jo
inc
cld
fmull
sbb
sbb
ja
lods
mov
dec
sar
jno
lret
fimull
push
pop
push
add
pop
mov
push
das
les
push
cltd
add
decl
xchg
mov
nop
mov
mov
mov
rcll
mov
pop
out
mov
mov
sub
xchg
in
clc
cmpsb
frstor
mov
in
add
fcomp
out
and
push
lret
mov
cmp
mov
inc
por
mov
cmp
xor
ja
dec
repnz
in
ret
cs
pop
sub
inc
mov
xor
lahf
jne
scas
cmp
adc
cmp
add
inc
das
aaa
cmp
icebp
and
mov
and
scas
aas
stos
lods
into
mov
divb
js
fimuls
mov
mov
fwait
test
inc
sub
sub
xchg
push
ljmp
mov
sbb
out
xchg
pop
cmpsb
leave
mov
add
imul
xchg
mov
popf
xor
int3
push
add
pop
fcoms
mov
pop
push
pop
bound
sbb
xor
mov
mov
push
cwtl
std
xlat
xor
leave
adc
add
lcall
loopne
shl
cmp
jnp
mov
fs
add
cwtl
xchg
mov
jecxz
mov
cmp
cmp
add
nop
push
jmp
xchg
subb
inc
mov
mov
xchg
pop
mov
rcll
fstpt
pop
xor
out
lods
inc
sub
add
jne
sub
jecxz
pop
dec
and
inc
rcll
sub
pop
xor
sub
and
mov
mov
je
pushf
in
mov
movsb
lahf
in
ss
pop
push
adc
inc
or
sbb
icebp
or
and
push
out
dec
stc
int
test
xor
inc
ja
outsb
sbb
mov
mulb
sub
out
jmp
cmp
add
inc
out
ret
stos
jnp
xchg
insl
pop
xchg
rcrl
xchg
les
push
add
dec
inc
in
and
sbb
mov
fisubs
pop
imul
xorl
pop
stos
adc
xchg
jecxz
iret
aas
push
jnp
out
or
inc
inc
cmp
mov
movsl
test
arpl
push
or
flds
fdivr
stc
mov
in
jb
inc
clc
inc
fld
sub
sub
mov
mov
lret
lret
mov
pop
xchg
scas
and
cmp
fwait
mov
cld
enter
push
mov
out
int3
sti
push
ds
lods
lods
fs
mov
in
loop
icebp
cmp
lea
lcall
push
lret
and
popa
lock
xchg
and
je
pop
jae
jbe
fstpl
jge
aam
sbb
push
pop
mov
insb
jo
dec
sbb
mov
inc
sbb
cmp
dec
sub
sub
sub
cmp
pop
push
in
loop
push
sub
gs
inc
vpshab
fs
jb
fsubs
mov
subl
xchg
push
test
enter
cld
xchg
imul
adc
call
mov
mov
ret
mov
cmp
and
stos
jbe
mov
mov
shrl
stos
inc
mov
pause
xbegin
mov
out
sbb
jmp
and
jns
jb
popf
orb
sbb
in
cmpsl
mov
fidivs
pop
fcoml
cwtl
in
imul
xor
arpl
sub
aas
in
lcall
mov
and
adc
mov
pop
clc
mov
outsl
jb
dec
inc
inc
and
andl
xor
add
mov
cmpsb
cmp
nop
mov
sub
icebp
stos
scas
adc
or
mov
add
mov
repnz
push
push
addb
outsb
mov
repnz
push
rclb
push
clc
pushf
mov
xchg
notb
insl
jecxz
lahf
cwtl
jl
sub
ret
test
xchg
ljmp
sahf
out
lods
fimull
mov
or
or
scas
cmp
in
stos
and
ret
lods
xor
imul
mov
and
mov
fnsave
test
sbb
pop
pop
in
lock
popf
cmc
shll
sti
jmp
shrl
inc
cld
cmp
jg
pop
rcr
outsb
jnp
sub
je
jne
rorl
pusha
mov
repnz
xchg
out
sub
ds
outsb
test
mov
jp
add
xor
lcall
mov
dec
xchg
fistl
mov
pop
sbb
sbb
fs
sbb
sbb
cmp
sbb
dec
cltd
aas
sbb
or
jg
sbb
jnp
adc
push
sbb
cmpsb
push
cmp
loopne
testl
adc
cmp
lret
pop
pop
int3
insl
xchg
inc
push
rolb
sbb
test
xor
sarl
push
mov
aaa
lods
sub
in
mov
cmc
scas
outsl
test
icebp
jns
mov
jns
inc
hlt
stos
notb
sti
dec
lods
call
das
adc
notl
pop
add
lds
out
cwtl
jns
jge
push
jg
jno
call
pop
mov
inc
sbb
push
pusha
push
sbb
mov
stc
movsl
rorb
fists
rorl
mov
dec
fucomp
mov
mov
test
inc
movsb
fcoml
js
out
or
imul
dec
std
dec
in
mov
mov
aaa
adc
lock
cmc
cld
pop
or
adc
mov
jle
icebp
data16
push
test
std
ja
stos
mov
leave
and
mov
push
scas
or
aam
mov
mov
mov
xor
push
fcomp
and
dec
and
repz
xchg
imul
jmp
aam
inc
adc
mov
add
enter
dec
lcall
lahf
mov
pop
cmp
add
jge
cld
outsb
loope
inc
into
pop
enter
or
dec
mov
imul
pop
add
bound
shlb
rcrl
ja
sub
xchg
or
pop
cltd
fisubl
and
jl
inc
das
cmp
xchg
ja
rcrl
adc
shrb
xchg
or
or
xor
xor
mov
mov
mov
pop
jp
rol
xchg
out
pushf
push
jg
xor
enter
in
pop
xchg
mov
sbb
jmp
jecxz
rcrl
or
outsb
cwtl
push
cmpsl
sbb
pop
stos
es
lahf
mov
daa
pop
cli
xchg
jo
mov
leave
in
in
cli
or
dec
lea
dec
cmc
int
rcrb
in
jl
jmp
ret
pop
sub
outsb
rorb
lods
and
sub
test
jle
add
pusha
imul
dec
dec
and
pop
movsb
adcl
and
jle
lods
dec
sbb
xor
xchg
in
push
fbld
pop
inc
pop
ret
sbb
mov
pop
fdivs
test
add
pushf
xor
stos
xor
sbb
int3
and
or
dec
jnp
sbb
lods
movsl
jae
mov
and
popa
push
loopne
cmp
imul
sub
in
ret
mov
jae
loopne
lret
mov
pop
repz
cmp
rcll
ret
jnp
cs
mov
adc
call
ret
scas
adc
movsl
fidivl
out
dec
push
daa
inc
popf
or
fwait
mov
je
xlat
mov
or
cwtl
ja
pushf
dec
mov
adc
aaa
aaa
push
ud2
rcll
mov
cli
inc
jecxz
xor
fucom
mov
loope
add
addr16
inc
push
cmp
jnp
mov
inc
mov
out
or
enter
inc
test
or
xchg
std
rolb
mov
insb
mov
pusha
mov
mov
out
push
jmp
mov
fidivs
pop
push
movl
movsl
push
and
xchg
ret
add
out
insl
xchg
fldl
add
repnz
inc
lret
pop
mov
sbb
repnz
testb
and
and
jo
loop
and
push
xor
and
mov
ret
test
jae
fsubr
mov
lods
push
push
mov
push
lods
cli
add
pop
mov
and
jge
mov
mov
sub
movsb
aaa
or
jge
dec
sbb
stc
scas
mov
sub
mov
lods
adc
dec
leave
jmp
xchg
pop
ret
lret
add
adc
jae
addl
pop
sbb
sbbl
lahf
inc
sqrtps
xchg
enter
gs
test
or
sub
insl
mov
sub
mov
xor
inc
cld
dec
adc
in
enter
out
mov
add
xchg
rcll
cmp
std
xchg
in
dec
xchg
sbb
and
std
lea
or
dec
jb
call
or
mov
pushf
out
pop
pop
cld
aad
dec
dec
call
jp
add
jb
mov
pop
das
and
cmp
test
xor
cmpsb
loopne
adc
jne
loopne
jl
xchg
into
pop
sub
gs
cmpl
int3
xorb
es
flds
xchg
psrad
cmpsl
insb
mov
lods
push
jle
push
iret
aaa
push
loope
pop
dec
mov
in
fwait
inc
jecxz
loopne
cmp
adcl
test
std
into
push
shr
add
push
mov
inc
sahf
xchg
mov
out
pop
enter
xlat
call
cmp
push
sbb
xchg
iret
dec
imull
mov
cld
ret
nop
mov
push
cli
cmp
ljmp
cmpsb
or
stos
mov
dec
movsb
mov
in
and
daa
pop
js
push
sbb
lock
adc
rorl
ret
jne
lods
aad
jno
gs
lcall
xor
cmpsb
mov
ljmp
push
cmp
push
ret
or
scas
sub
and
cmp
and
jns
jmp
dec
sbb
pop
xchg
adc
push
dec
xchg
jl
lahf
inc
lahf
jbe
sbb
push
popa
inc
mov
pop
cmp
push
pushf
sub
cli
aam
inc
cmpsb
negl
lret
sbb
stc
mov
shrl
or
cmpsb
jns
sbb
xchg
dec
and
inc
xor
and
gs
push
scas
push
pop
mov
int3
and
in
test
sbb
ror
je
jmp
int
bound
xchg
lret
aaa
cmp
clc
cmp
sub
or
sbb
push
adc
adc
pop
cmp
add
mov
jno
push
and
testl
test
xchg
rcrb
popa
pop
xor
movsb
repnz
sub
jp
inc
lfs
adc
jb
mov
daa
js
adc
pop
push
testl
sbb
fnstenv
mov
adc
movsl
jo
and
test
adc
add
int
mov
imul
outsl
in
ja
arpl
mov
stos
or
add
repnz
icebp
jo
jp
mov
sbb
dec
divl
cmp
adc
outsl
sbb
out
add
dec
lcall
into
mov
movsb
xorl
cmp
loope
sar
and
xorb
xchg
shlb
inc
mov
xchg
inc
out
outsl
rcll
jecxz
stos
and
mov
out
xor
cmp
sarb
pushf
stc
sti
sub
or
push
push
gs
jp
sub
pop
dec
adc
pop
lret
das
out
push
in
hlt
in
sbb
out
mov
xchg
ss
call
mov
or
xchg
mov
fdivrs
inc
stc
push
jne
clc
push
jmp
outsl
fbstp
mov
mov
repz
mov
and
jmp
in
sub
sbb
jb
fmulp
jne
or
mov
outsb
lea
pop
aas
sbb
rcrb
cwtl
insb
lret
mov
pop
push
adc
nop
icebp
and
and
addl
dec
jno
sub
clc
sbb
inc
xchg
fsubp
call
int
and
in
ret
leave
test
sub
add
shr
js
imul
movsb
es
dec
xlat
jg
pop
push
mov
test
push
push
andl
movsl
jecxz
pop
clc
xchg
pop
pushf
cmpsl
jno
fildl
push
cmp
int3
xchg
adc
in
jecxz
add
bound
mov
fcom
adc
mov
fisttpl
test
enter
inc
into
aam
xlat
xor
jecxz
or
lods
imul
sbb
pop
mov
push
cli
loop
es
sub
jno
push
movsl
mov
int3
adc
rcll
lds
jno
inc
xchg
adc
pop
push
aas
fadds
push
test
xorb
pop
jnp
or
push
cmp
pop
inc
jb
xor
mov
lods
out
xchg
cmpsb
outsb
enter
push
mov
mov
cmc
nop
movhps
sbb
mov
nop
cld
push
daa
pop
in
mov
fisttpl
repz
mov
or
push
imulb
or
fstpl
pusha
push
cmp
push
sub
lea
pop
out
loop
repnz
ds
out
inc
xor
push
mov
decb
xlat
ds
push
mov
inc
test
imull
fnstsw
scas
sub
ret
mov
sub
mov
mov
sbb
mov
dec
xor
pop
cmove
int
jle
lock
mov
fstpt
xchg
and
orb
add
addb
les
add
sbb
inc
dec
push
ljmp
loopne
daa
cmp
fcomps
cmc
adc
xor
cmpsb
pop
mov
dec
shl
sub
lcall
js
repz
lods
adc
ret
in
add
pop
sbb
mov
imul
inc
int
jmp
int
sbb
cmp
jp
subl
in
dec
fstl
push
rcrb
or
imul
sbb
push
aas
filds
add
or
inc
jne
addr16
lcall
insl
stos
sbb
repz
inc
leave
xor
shll
inc
lret
cmp
ret
fwait
fwait
stos
dec
push
in
jb
ss
lret
add
fiaddl
pop
mov
neg
loop
or
cmp
sbbl
xchg
inc
push
fldt
or
sub
push
push
sbb
fmuls
cmpsb
hlt
mov
aas
pop
loopne
inc
push
lods
imul
call
or
sahf
popf
outsl
outsl
repnz
ret
xchg
lds
rcll
cltd
sub
pop
sub
jecxz
dec
fldt
jno
push
mov
jae
pop
testb
rclb
sub
mov
mov
sarl
push
insb
add
add
add
mov
xlat
test
push
movsl
jb
out
or
arpl
inc
lock
sub
outsb
cmp
and
mov
cwtl
ret
add
or
inc
adc
rorl
and
fcomps
dec
cmpsl
xor
mov
cs
fidivs
pop
lcall
test
mov
push
into
or
and
sbb
je
or
sbb
mov
adc
sub
test
adcl
adc
pop
and
arpl
sub
jp
sbbb
sub
adc
dec
pop
ret
lcall
dec
push
aas
push
jnp
sbb
push
testl
add
sub
xchg
pushf
dec
sub
enter
movsl
xchg
std
lcall
push
jle
pusha
movsb
icebp
cmc
push
jmp
bound
fnsave
mov
pop
and
dec
loop
dec
cmp
pop
jg
sbb
subb
loope
sbb
mov
movsl
sbb
hlt
cmpsl
in
sti
inc
lock
pushf
push
sbb
lock
mov
das
fidivl
testl
decl
test
scas
dec
jl
dec
dec
fstl
in
xlat
jae
jne
out
mov
inc
cmc
mov
xorb
jmp
push
fldenv
dec
sbb
fbstp
jl
sbb
in
pop
dec
out
push
pop
fwait
mov
das
nop
jmp
movsb
push
lret
insl
movsl
inc
aam
sarb
out
mov
mov
insb
pop
push
cwtl
pushf
test
out
inc
in
inc
and
or
incb
push
xorb
cltd
insb
add
push
lea
xchg
pop
mov
jns
and
cltd
xchg
jg
push
xor
cwtl
ljmp
outsb
lds
sbb
mov
enter
pop
jp
sub
mov
jnp
xor
mov
shl
stc
sub
sbb
shll
cmp
jp
psllq
xor
sub
sub
shrl
ds
push
ljmp
aaa
mov
and
arpl
inc
sub
cmpsb
inc
sub
jp
or
insl
sub
shrb
inc
enter
iret
cmp
mov
xor
pusha
push
inc
and
sbbb
push
call
or
jl
pop
jns
pop
je
mov
cmp
cltd
js
stos
orb
cltd
push
and
push
pop
pop
jecxz
popf
loop
add
fstps
shrl
std
lret
pop
add
mov
cltd
out
jne
sbb
dec
fdivrp
and
push
push
sti
adc
add
sbb
inc
sub
xlat
aad
mov
out
fldt
icebp
mov
sbb
and
push
lret
sbb
cld
xor
cld
mov
das
mov
mov
insl
cmp
mov
mov
add
sub
gs
adc
lods
call
mov
shrb
stos
mov
jp
jnp
add
dec
daa
jno
mov
mov
dec
cmpsb
stos
movsl
in
lret
xchg
sbb
jge
xor
push
ret
jb
inc
xchg
test
movaps
push
pop
mov
xchg
adc
data16
lret
rolb
mov
jno
sahf
mov
out
cmpsl
mov
imul
das
mov
subl
push
lods
pop
sub
inc
xchg
xor
mov
mov
mov
pop
lcall
cmpsb
std
data16
scas
fdivr
es
xor
sbb
mov
cs
jb
xchg
xchg
push
lock
test
stos
pop
and
mov
icebp
mov
clc
sbbl
mov
imul
inc
mov
pop
and
ret
pusha
sbb
hlt
out
cld
lret
inc
repnz
test
xchg
outsb
mov
adc
loope
lock
sbb
pop
sbb
fwait
mov
xor
jbe
sbb
mov
push
dec
cmp
movsl
sbb
loopne
das
ds
ficoml
lock
mov
xchg
rol
cli
loop
sub
data16
rorl
pop
sbb
int3
or
loope
pusha
mov
mov
xor
inc
xchg
push
push
inc
xor
lahf
iret
repz
cli
or
mov
sbb
jl
shl
mov
pushf
cwtl
push
cld
cli
rcrb
sbb
jle
jo
in
fstpt
addr16
shlb
pop
xchg
xchg
mov
sub
call
js
adc
and
int3
dec
push
inc
pop
ja
cmp
fimuls
cmp
insb
sbb
mov
add
lods
jp
mov
add
pop
push
pop
lret
or
idivl
xor
mov
das
push
subl
add
sub
sbb
imul
lahf
pop
mov
jle
cmp
in
enter
mov
movw
jbe
pop
in
insl
sub
inc
idiv
divl
pop
ljmp
add
fisttps
popl
add
and
lret
mov
lret
dec
add
dec
push
nop
fstpt
dec
mov
push
push
cmp
mov
sti
int3
add
shl
xchg
adc
inc
xchg
cmp
xchg
test
retw
aas
xor
pop
gs
in
dec
pop
cmp
adc
mov
dec
xlat
repz
or
pusha
jbe
rep
movsl
or
pop
push
test
jl,pn
ds
popa
mov
imul
cmpsb
mov
sbb
mov
icebp
lods
mov
enter
mov
xchg
gs
mov
mov
cmp
fsubl
mov
out
inc
xor
es
inc
sahf
push
inc
jns
iret
leave
pop
stc
cmp
js
cs
push
inc
xchg
mov
mov
pushf
inc
xchg
xchg
mov
cld
adc
or
pop
lods
jecxz
jnp
pop
sbb
cwtl
xchg
scas
adc
or
adc
mov
pop
cli
ja
inc
aas
jmp
int3
movsl
jne
mov
mov
or
dec
js
mov
je
xor
push
call
dec
popf
inc
dec
and
bt
xchg
jne
or
das
lea
jg
jb
pusha
mov
jne
outsl
stc
push
mov
fs
adc
bound
adc
inc
push
mov
sbb
lea
fcmovu
xchg
mov
fstpt
das
mov
mov
mov
adc
iret
cmc
movsl
fdivs
sbb
push
pop
lock
add
mov
and
shlb
test
stos
pushf
sbb
sbb
mov
leave
sarb
mov
nop
out
ret
aaa
sbb
push
repnz
mov
pop
inc
xchg
xchg
push
mov
into
es
inc
push
test
insl
mov
iret
icebp
sbb
or
pop
aam
ja
jns,pt
ret
jbe
jge
jl
mov
push
jecxz
cmp
mov
jmp
and
xchg
fs
add
adc
dec
cwtl
mov
mov
xor
push
clc
iret
add
lock
and
das
jo
arpl
pop
adc
shlb
jns
and
cmc
sub
cmp
addb
and
jo
pusha
mov
shr
mov
pop
adc
ds
lret
push
mov
push
insb
outsl
je
nop
push
or
test
or
xor
push
jge
mov
std
shl
jns
sbb
mov
fcmovnu
addl
mov
rolb
xor
bound
leave
pop
pcmpgtd
mov
add
sti
cltd
mov
fnstenv
decb
or
xor
push
fs
lcall
pop
or
in
pop
cwtl
imul
lea
mov
adc
lahf
bound
mov
in
sub
add
dec
stos
cmp
popa
aas
out
mov
xchg
mov
les
sbb
and
cmp
notb
xor
sahf
push
ss
inc
sub
xchg
jl
xchg
mov
pop
sub
test
bound
adc
push
out
aas
mov
repnz
mov
bnd
addl
push
ficomps
pop
mov
cmp
add
nop
ret
cli
xchg
jle
mov
lahf
mov
les
xor
cmp
and
cmpsl
xor
stos
rcrb
enter
and
xor
pushf
ja
jmp
arpl
jno
fs
into
testb
dec
je
mov
adc
cmpsl
or
jl
pop
bound
jge
stc
and
dec
bound
cmp
jae
or
lods
push
nop
lds
push
popf
lahf
cmp
insb
add
dec
xchg
icebp
fwait
jno
lods
sub
icebp
and
pop
test
pop
inc
in
loope
ds
xchg
test
pop
filds
sbb
int
jecxz
hlt
push
insb
xchg
in
sub
and
dec
loop
mov
sub
rcrb
xor
movsb
mov
mov
test
mov
and
lds
clc
in
sarl
call
nop
movsb
icebp
inc
movsl
je
dec
or
cmp
sbb
stos
icebp
imul
in
or
in
xor
xor
jp
add
aad
jbe
mov
jp
test
mov
test
lea
xor
cmp
daa
and
sbb
popf
pop
in
sahf
pop
iret
mov
lock
xor
roll
mov
push
adc
ljmp
or
push
int
cmp
dec
push
mov
fisttpl
out
cld
pop
test
roll
and
aad
fwait
sahf
lcall
lods
inc
aad
int
shl
into
or
and
movsl
push
scas
les
cmp
xchg
das
push
cmpsl
loopne
mov
sub
call
sti
inc
xchg
pop
mov
xchg
dec
neg
enter
xchg
mov
int3
lea
mov
dec
xlat
aas
mov
cmp
cli
xchg
and
sub
inc
testl
lret
inc
push
cmpsl
xor
mov
sbb
jle
xchg
imul
idiv
fldl
insl
add
aam
adc
std
xorb
jmp
add
xor
stos
sbb
into
dec
dec
dec
enter
das
cmp
mov
jno
leave
pop
out
add
inc
lods
add
mov
mov
push
lods
mov
pop
out
pop
cmc
dec
lods
icebp
push
inc
lret
lods
add
gs
lods
lcall
dec
inc
sbb
rorl
xchg
xor
in
rcrb
push
enter
jno
cmpsb
repnz
jbe
pop
psubw
cmp
cmpsb
loop
dec
cmp
dec
lret
lea
mov
aas
mov
daa
loopne
popa
mov
gs
out
arpl
mov
add
mov
pop
and
inc
imul
adc
sbb
repz
bound
sbb
dec
or
jl
push
fildl
or
decb
loopne
jbe
push
jo
arpl
and
int3
pushf
icebp
push
sub
sub
inc
inc
into
sbb
mov
pop
xor
add
mov
outsl
push
or
mov
je
sub
jle
cwtl
sarl
ds
mov
fistl
mov
bswap
or
cmpsb
pushf
mov
cmp
outsb
push
inc
sbb
lods
pop
mov
fwait
in
ljmp
cltd
push
mov
push
sub
and
out
sub
mov
inc
add
cmp
insb
or
xchg
out
lret
call
cmp
rcll
jbe
inc
das
xchg
and
sub
andl
xchg
cltd
push
stos
xchg
dec
add
jmp
stos
hlt
sbb
and
lock
push
out
loopne
mov
sahf
test
lods
inc
push
stc
dec
mov
dec
jp
jo
dec
in
xchg
push
jp
inc
daa
cs
icebp
and
sub
ffree
out
mov
incl
cmpsl
pop
imul
insb
push
xchg
movsl
or
test
stc
fwait
sub
sbb
jnp
pushf
lods
mov
mov
out
fistpll
sub
notl
xchg
sahf
xchg
es
mov
filds
aaa
test
jle
pop
lock
mov
xchg
jne
movsl
or
pop
cmp
xchg
mov
inc
or
mov
cmp
out
mov
push
cmpsb
mov
jb
mov
out
cmp
inc
push
push
xor
inc
imul
aaa
cld
inc
mov
lret
lea
mov
in
add
arpl
movsl
and
cmp
test
adc
ret
sbb
or
into
ds
les
sarb
loop
push
mov
jb
out
pushf
xlat
sbb
je
les
jnp
fisubs
repz
xor
and
mov
adc
stos
fcoms
xor
jle
pop
mov
mov
push
fdivrl
sahf
xor
test
adc
sub
in
mov
mov
cmpsb
mov
mov
push
and
sarb
ret
cmp
lods
jl
std
cmp
pushf
in
movsb
popa
cs
popf
lret
mov
sub
popa
sub
call
repnz
pusha
mov
mov
push
nop
stos
mov
mov
xor
mulb
hlt
push
pop
fimuls
movsb
and
addr16
jnp
push
jle
jmp
push
mov
xor
outsl
mov
push
or
movsb
cmp
sahf
mov
sbb
int3
xchg
cmc
shlb
test
decl
mov
data16
pushf
pop
lcall
jmp
sub
push
jne
movsb
int3
cmp
dec
push
push
nop
les
dec
popf
cs
insl
stc
repnz
and
aaa
mov
data16
sbb
xchg
or
jmp
mov
faddl
jp
xor
stos
hlt
dec
repnz
jl
in
xchg
mov
and
sub
mov
push
mov
jbe
cmp
aas
mov
aam
push
mov
pop
jns
inc
dec
popa
in
ret
inc
clc
sub
popl
inc
stos
xor
pop
add
xor
fnstsw
xchg
mov
sarb
xchg
adc
dec
adc
test
rolb
dec
insb
lods
push
xor
and
xor
imul
push
and
and
outsb
int
jns
pop
add
dec
ds
adc
mov
adc
imul
push
pop
fisubrl
fwait
mov
sarb
aas
jb
jmp
sahf
xchg
add
in
and
in
jg
jns
scas
pop
sahf
cmpsb
lcall
push
xchg
jne
pop
fldcw
pop
sbb
cmc
faddl
in
push
pop
pop
lcall
mov
jmp
cmp
rcrl
push
jbe
sub
jl
je
ret
pop
mov
stos
in
aaa
lods
lea
in
add
push
push
cmc
cmp
fucomp
repnz
std
shr
lods
adcl
loopne
mov
push
adc
pop
ficoml
sbb
mov
daa
int
iret
outsb
xchg
pop
stos
add
icebp
pusha
push
inc
out
arpl
data16
test
stos
mov
stos
jae
imul
addr16
or
mov
leave
je
xchg
mov
sti
ss
pop
fildll
lret
ret
jae
pop
push
je
roll
sub
inc
data16
mov
and
add
je
into
push
pushf
fimuls
sub
push
pop
push
xor
addl
shl
adc
lcall
cmp
mov
jo
aad
loop
sub
jns
jo
or
push
xchg
es
lods
jae
jecxz
cmpsl
test
push
aas
mov
or
fnsave
jg
push
push
out
mov
sbb
lcall
mov
lret
jnp
adc
cltd
mov
insl
aad
test
mov
shlb
jle
push
rcr
aad
and
insl
mov
pushf
test
cmc
in
mov
fdivr
mov
pop
hlt
stc
mov
imul
jo
int3
mov
mov
add
imul
jo
xchg
int
pop
dec
xchg
fimuls
xchg
xchg
sub
xchg
nop
gs
dec
lcall
push
je
xchg
add
pop
cli
and
add
loopne
or
sub
and
lret
mov
mov
rolb
inc
xchg
dec
sub
pop
adc
push
fs
push
sbb
rorb
ja
push
shl
loopne
test
cs
cli
pop
or
rcrl
loope
andl
xor
lods
cli
popa
cmpsb
push
jle
lcall
jecxz
pushf
cwtl
clc
rcrb
mov
lds
mov
leave
out
in
adcb
ja
jge
decl
aam
sahf
sub
inc
mov
sarb
enter
cmp
out
and
les
into
and
or
push
orb
add
gs
shrl
test
dec
jne
out
jbe
dec
lret
mov
inc
lahf
pop
add
sbb
pop
rorb
jmp
ret
xchg
mov
cmovae
adc
pop
in
sub
pusha
push
add
add
mov
mov
sbb
and
xchg
add
adc
and
sub
aas
pop
cmp
or
pusha
mov
sub
sti
std
and
and
push
cmp
mov
dec
sbb
aam
ljmp
pop
dec
cmp
test
push
je
rol
sbb
add
imul
fwait
or
cltd
mov
shrb
test
pushf
pop
cmc
adcl
sbb
adc
dec
and
es
cmp
lods
xor
pop
xorb
les
pop
jle
mov
jmp
ss
mov
sbb
sbb
cmpsb
jmp
adc
insb
sub
sbb
and
mov
mov
push
movsb
fldl
int3
inc
mov
cli
cmp
jno
test
insb
cwtl
ret
xchg
aam
cs
cmp
and
mov
mov
jg
mov
mov
add
movsb
mov
clc
test
jne
xor
les
sub
lods
mov
xchg
dec
mov
cmp
mov
sti
sub
cltd
pop
push
push
xchg
fadds
leave
lret
jae
sti
adc
pop
jle
int
lahf
cmp
pop
jmp
sub
push
ds
dec
mov
cli
jl
aam
sbb
stc
add
dec
lret
insb
in
aaa
addps
ja
cltd
mov
cwtl
push
and
decl
dec
inc
sub
aam
in
add
cmp
xor
ljmp
cmp
mov
or
jne
int3
mov
mov
sbb
fildll
dec
xchg
dec
push
pop
xchg
rcrb
adc
push
sbbb
scas
test
cmpl
mov
jbe
mov
mov
inc
out
push
inc
cmpsl
push
sbb
imul
int
movsl
mov
in
pusha
sbb
inc
scas
gs
ror
dec
lods
or
in
outsl
lds
add
clc
mov
outsl
outsl
mov
movsl
xchg
cli
pop
filds
stc
pop
mov
mov
daa
push
push
cltd
push
and
add
aam
mov
ret
dec
sub
dec
scas
xchg
or
add
xor
sbb
aas
nop
rolb
scas
xchg
pop
dec
nop
push
movsb
rolb
lret
mov
xor
idivl
loope
lods
adc
xchg
push
pop
cwtl
aad
test
iret
enter
push
std
int3
fsubs
xchg
dec
out
and
jmp
pop
scas
dec
adc
mov
jno
orb
ljmp
pushf
cs
and
jecxz
lods
das
lahf
mov
mov
inc
pop
movsl
pop
rolb
fidivrs
mov
pop
mov
adc
cmp
pop
repnz
adc
ss
xrelease
test
add
adcl
lret
xchg
out
xchg
fsubs
es
pop
es
or
add
and
lods
cmp
mov
pop
pop
aaa
jb
xchg
and
mov
or
mov
or
mov
push
push
pop
enter
scas
mov
pop
add
out
xor
xchg
lahf
fiadds
mov
test
dec
inc
sbb
mov
dec
divb
adc
testb
bound
xchg
xor
iret
fsubr
pop
add
cs
mov
sahf
dec
push
sbb
inc
decl
mov
cmpsb
xor
mov
notb
ja
repnz
shl
inc
jne
repnz
xlat
cmpsl
jae
loop
dec
cmpsl
stos
testb
sbb
out
sbb
lcall
and
test
out
fs
imul
lods
and
aam
push
jnp
mov
lods
xchg
call
mov
mov
mov
mov
stos
lret
cmp
jl
enter
xchg
aad
aad
loope
cld
lea
push
pop
out
adc
cmpb
pop
pop
or
pop
cmp
aad
jl
mov
popa
push
punpckhbw
clc
sbb
fistpl
stos
jno
pop
icebp
fwait
loop
ret
jp
pop
fmulp
mov
cltd
out
repnz
movsb
push
xchg
negb
inc
mov
test
sbb
xchg
in
loop
jae
inc
jecxz
call
roll
rol
inc
jg
and
popf
mov
pop
scas
mov
fwait
arpl
sub
shrb
jecxz
loopne
pop
add
sub
sbbl
mov
dec
sub
flds
into
mov
iret
sbb
leave
pop
out
bound
pusha
movb
bnd
pop
ret
lcall
sar
cltd
jp
popf
shlb
sti
loope
pop
shll
cli
test
adc
and
add
arpl
jp
dec
push
fstl
insb
outsb
daa
movl
stos
mov
mov
xor
movsl
xor
mov
iret
mov
gs
aaa
iret
fstl
mov
and
and
je
xchg
lcall
lcall
icebp
pop
mov
loope
lret
fucomp
dec
push
dec
mov
inc
fwait
lds
fisubrl
pop
and
clc
cmpb
jno
test
jp
imul
push
inc
adc
sub
mov
mov
outsb
inc
push
lret
popf
std
and
test
inc
das
dec
out
add
inc
adc
notl
add
xlat
movsb
cmpsb
and
cmc
xor
mov
insl
adc
mov
sbb
cmp
insb
nop
sar
dec
lds
pop
imul
insb
cmp
js
aad
mov
sbb
sahf
push
or
jbe
outsl
hlt
push
sub
push
lea
mov
shrb
int
std
ds
sti
orl
and
push
add
inc
out
leave
cmp
pop
cmp
fildl
jmp
xchg
sbb
and
xor
clc
test
repz
inc
jmp
adc
and
not
cmp
in
cmp
and
push
mov
inc
arpl
sub
pushf
int3
faddl
xor
imul
and
bound
pop
push
std
pop
fbld
or
fiadds
mov
mov
and
jmp
cltd
fcomps
fs
jg
dec
xchg
rclb
push
push
inc
ret
arpl
mov
subb
mov
jge
scas
testl
push
push
xchg
mov
inc
pop
leave
mov
leave
pop
outsl
stos
loopne
xchg
mov
add
mov
outsb
jge
or
scas
dec
xchg
nop
sub
movsl
cwtl
jbe
dec
cmp
jp
ljmp
or
inc
out
jle
fbld
mov
rep
push
in
lret
mov
cmc
aas
fstp
pop
pop
mov
ss
push
jle
dec
cwtl
pop
fs
cli
jne
pop
int
fcmovnbe
mov
push
insb
int
and
dec
cmp
int3
sahf
popa
dec
sbb
cmpb
jne
xor
xchg
stos
test
mov
idiv
cltd
inc
test
pop
sbb
ret
je
adc
mov
mulb
fisubs
and
fsubrp
sub
xchg
and
cmp
mov
jmp
inc
inc
ret
cmp
orl
push
sbb
cmc
jnp
mov
mov
ljmp
jg
inc
cmc
push
or
popa
lcall
outsl
add
lret
adc
mov
inc
lods
xchg
add
dec
in
insb
lea
push
fcmove
adc
ret
sar
mov
cmc
cmp
shr
jecxz
xchg
iret
inc
add
lods
sarl
push
push
mov
mov
lods
mov
ds
aam
loop
popa
mov
dec
cltd
jae
jb
in
mov
and
adc
sub
push
testl
mov
cwtl
outsb
jmp
xchg
sub
lods
cmp
mov
imul
mov
in
call
add
push
pop
sahf
mov
mov
filds
or
sub
mov
rol
pop
dec
pop
jae
insb
jb
lods
aam
mov
dec
adc
sub
bound
ljmp
out
xchg
rorb
movsb
rcll
inc
push
lds
movsl
or
rcr
sahf
clc
dec
mov
push
and
dec
mov
aas
xchg
mov
insl
lods
lock
add
or
pusha
insb
mov
pop
iret
in
arpl
cmp
push
sub
push
sub
sub
xchg
loop
mov
outsb
sbb
pop
test
sahf
cmpsb
loopne
pop
cs
in
loopne
pop
rorb
jo
fstpt
mov
add
mov
int
sbb
aaa
mov
sbb
inc
dec
jo
fimull
mov
mov
fwait
in
in
ret
fbstp
or
mov
push
add
and
lods
daa
shlb
cmp
mov
push
std
insb
fiaddl
adc
popa
sub
pop
mov
pushf
fwait
mov
aas
jo
jge
add
imul
aaa
adc
adc
or
jo
test
jb
sub
sar
mov
insb
lock
xor
in
and
adc
pop
jnp
adc
xchg
lcall
add
sbb
xchg
hlt
fsubl
add
and
sahf
cs
pop
and
dec
lods
loop
test
and
push
es
je
fisubl
imul
sub
scas
mov
pop
pop
and
dec
pop
jns
dec
dec
mov
mov
and
add
pop
sbb
out
push
pop
sub
mov
push
dec
pop
sub
sarb
cmp
xor
loop
xchg
test
pop
push
rol
inc
cltd
daa
popf
pop
mov
sbb
arpl
or
out
mov
push
and
inc
test
pop
nop
push
out
cli
out
push
xchg
cmp
adc
add
lahf
adc
dec
ret
jno
lods
jno
shr
or
ret
out
dec
sbb
scas
sbb
enter
outsb
pop
ficompl
loop
insb
jbe
stc
cwtl
push
mov
je
mov
and
insl
jmp
pop
les
shl
pop
orb
rcll
mov
dec
mov
idiv
movsl
xchg
cmpsl
cmp
push
test
mov
scas
push
sbb
mov
push
lret
test
subb
inc
nop
mov
mov
mov
mov
movsl
cmp
xlat
clc
pop
push
and
mov
stos
jb
jge
mov
lcall
inc
call
fdivl
insl
sahf
insb
xchg
gs
sbb
jnp,pt
inc
hlt
lea
loopne
mov
dec
push
lock
sti
dec
or
aas
clc
sbb
ds
push
mov
push
jb
xlat
out
adc
cmpsb
push
cmpb
inc
xchg
mov
push
outsb
jg
cmp
pop
pop
loope
dec
in
inc
jge
mov
inc
aas
push
inc
in
mull
adc
jne
or
mov
bound
fisubrl
int
xor
cld
inc
cmpsb
mov
mov
inc
std
cli
pop
stc
es
ret
mov
jecxz
mov
pop
sub
cli
sub
lds
inc
rcrb
lods
xchg
mov
xor
cmc
insl
leave
out
pusha
mov
in
push
jbe
repnz
in
call
adc
sbb
add
cwtl
sarl
stos
lcall
adc
cltd
test
push
push
aam
lods
jnp
lret
mov
cmp
add
or
cmc
inc
enter
sub
add
lock
mov
pop
sbb
adc
scas
jge
jae
cltd
dec
movsb
insl
push
ja
andb
cmp
push
pushf
inc
dec
sub
mov
cmp
jo
xchg
mov
shrl
xchg
mov
mov
fsubl
xchg
hlt
and
dec
test
repnz
pusha
mov
mov
adc
ds
inc
icebp
dec
shll
insb
cs
ret
out
arpl
into
fs
loopne
movups
pop
or
cmpsb
into
add
dec
mov
pusha
push
ret
in
mov
mov
lret
fs
ficomps
inc
sub
xchg
pushf
scas
sbb
fimuls
imul
or
cmp
dec
ret
mov
icebp
xor
bound
or
les
fnstenv
scas
pop
outsl
pusha
or
sbb
and
or
xor
and
xor
adc
shll
jne
mov
push
xor
cmp
lods
xor
xchg
pop
jns
call
cld
pushf
inc
jns
aam
das
pushf
mov
xlat
inc
pushf
xor
sbb
cmp
jecxz
push
fcmovnbe
cmp
je
rol
in
in
stc
and
mov
lret
jmp
shll
mov
xchg
adc
lods
and
dec
inc
mov
into
xor
and
popa
mov
fistl
jo
ja
negl
xor
cmp
cmp
or
data16
xchg
push
mov
push
fnstcw
xor
out
cld
lret
lock
add
movsb
ja
push
sbb
push
cmc
rclb
sahf
rcl
out
in
nop
lods
jnp
or
sahf
fwait
jo
cmp
cmpsl
es
mov
lds
push
ja
fistpll
sahf
jae
push
movl
jo
dec
mov
sti
lcall
fimull
fbld
mov
or
xor
cmp
dec
mov
daa
pop
inc
bsr
ja
inc
push
imul
cmpsb
mov
add
nop
ret
cmp
stos
sub
mov
cmp
iret
xor
clc
mov
push
bound
and
inc
pop
sarl
mov
mov
mov
pop
outsb
movsb
dec
sub
pop
test
jo
jno
xlat
clc
stos
std
insb
cmp
mov
adc
not
jns
pop
mov
push
and
push
hlt
push
xlat
mov
out
add
pop
clc
sbb
imul
ret
rcrb
jecxz
ret
fbstp
fdivp
xorb
orl
imul
lret
adcl
loopne
pop
or
mov
int3
rcl
inc
mov
and
xor
test
inc
jle
inc
xor
cmp
sarl
lret
in
imulb
adc
push
cmp
fnstsw
pop
stc
mov
test
jno
bound
mov
mov
ljmp
mov
stos
and
fsubrs
dec
loope
sbb
mov
incl
xchg
pop
fst
dec
sbb
sahf
and
imul
add
sbb
push
adc
push
shll
sarb
sbb
jno
cmp
pop
testb
iret
push
mov
sbb
lods
cmpsb
test
rcll
aaa
and
les
dec
jle
js
mov
mov
repnz
push
sbb
icebp
inc
aaa
orb
lea
rorl
dec
notb
test
or
std
jl
in
popf
daa
dec
sarb
into
mov
outsb
jle
pop
push
outsb
popa
in
jnp
lcall
pop
data16
sub
dec
je
lods
mov
gs
sub
mov
and
xor
add
lods
clc
jp
sub
fbstp
fwait
ja
xor
nop
push
in
mov
lret
fs
mov
xchg
cmp
jecxz
and
inc
loope
loopne
bound
loope
mov
leave
sti
xchg
pop
cmp
adc
cmp
push
xchg
ficoms
and
push
fs
out
mov
fdivrs
adc
sub
adc
out
jbe
add
sbb
dec
ss
or
mov
jmp
sub
out
sbb
push
rolb
data16
cmp
mov
lret
push
xchg
cmovge
mov
fisubrl
iret
cltd
lea
psubq
add
into
mov
aam
clc
push
sub
or
push
es
lahf
xcrypt-cbc
cmpsl
adc
xor
inc
cld
icebp
ds
out
xchg
or
jns
sub
push
xchg
pop
imul
xchg
cmp
lcall
add
mov
orb
pop
loop
shrb
mov
daa
js
fimull
andl
in
aaa
xchg
inc
pop
mov
ficompl
filds
std
xor
push
xchg
inc
push
xor
jo
test
jp
mov
dec
iret
mov
jge
ds
scas
push
scas
cmpsb
jge
xlat
and
aam
popf
mov
cli
mov
aad
mov
imul
hlt
sbb
cmp
or
pop
pop
test
cs
pushf
add
dec
iret
les
adc
leave
pushf
stos
out
aad
dec
cli
cltd
adc
bound
mov
call
jmp
xchg
mov
shll
aaa
loop
scas
jne
push
cmp
test
out
dec
neg
push
xlat
dec
iret
inc
pop
fisubrl
popf
xchg
jo
adc
std
mov
sub
mov
xlat
sarb
loope
popf
adc
pop
sub
mov
push
mov
mov
fsub
sub
xchg
lods
mov
mov
jecxz
push
pop
fistpll
js
imulb
cmc
xchg
in
cmp
sub
cmp
add
pop
jge
out
scas
xchg
sub
imul
cmpsl
sbb
hlt
add
mov
enter
mov
adc
les
dec
lods
pop
setge
fisubs
mov
and
xchg
push
imulb
sbb
ret
addr16
in
xchg
hlt
es
mov
dec
cmp
ljmp
popa
adc
ss
adc
xchg
and
pop
jbe
test
aam
bound
fwait
jne
lea
cld
leave
sbbl
test
stc
in
lcall
mov
fwait
sub
daa
or
jp
bound
mov
ss
adc
inc
xchg
les
lret
xorb
rcll
mov
and
loopne
mov
leave
mov
mov
pop
dec
int
enter
insb
xchg
imul
ds
push
pop
stc
inc
xor
je
outsb
inc
mov
std
xchg
leave
test
push
subb
and
into
sub
pop
scas
rcr
imul
sti
fcomps
cmp
xchg
hlt
or
idiv
inc
pusha
mov
ret
jbe
movsb
shrl
mov
inc
lea
add
rorl
mov
test
stos
aas
or
icebp
adc
inc
aam
and
lret
sub
xor
decl
sbb
push
pusha
inc
push
test
inc
pop
lods
aad
sub
push
rorb
neg
sbb
push
cmp
or
hlt
out
stos
and
xchg
popa
inc
or
cwtl
loop
repz
mov
mov
xor
call
bound
arpl
or
pop
xchg
jb
lock
or
jbe
mov
dec
sbb
jecxz
mov
lret
pop
test
test
rcll
jo
xchg
mov
les
sub
inc
mov
mov
push
mov
js
mov
mov
xor
js
push
dec
add
adc
sahf
out
and
mov
mov
xchg
clc
mov
jecxz
lret
out
int3
xor
ja
mov
test
mov
jmp
xor
loopne
xchg
xchg
push
les
in
and
iret
push
or
clc
lret
jecxz
jl
mov
jecxz
repnz
idivb
xchg
xchg
jge
pop
xchg
setg
push
jg
pop
std
sub
and
mov
pop
enter
movsb
jnp
mov
out
dec
insb
gs
xchg
das
fucomi
aad
sbb
lock
out
dec
xor
loope
inc
test
and
test
shl
pusha
mov
enter
adc
loop
xchg
mov
sbb
pop
xchg
pop
ret
mov
cmpsl
je
data16
mov
push
hlt
cmp
sarl
lret
xchg
int
imul
nop
sbb
jl
pop
dec
test
fisubs
add
add
jns
iret
insb
push
inc
out
pop
hlt
cmp
cmp
dec
sti
mov
sahf
mov
mov
repnz
sub
stc
sbb
stc
enter
cltd
mov
mov
pop
in
jecxz
push
clc
imulb
jp
add
or
in
inc
std
loop
jnp
fidivl
sbb
cmp
lods
ss
repnz
cs
jne
sbb
notl
mov
mov
add
or
aaa
dec
pop
sbb
aas
lret
jp
imull
lret
xorl
mov
stos
jle
int3
loopne
or
je
cmp
std
add
inc
mov
dec
pop
inc
sub
and
mov
inc
cmp
dec
mov
sbb
out
jmp
jno
addr16
outsl
sub
fs
mov
ss
mov
call
iret
add
sti
fistpl
test
out
jb
pusha
or
mov
enter
icebp
and
jp
sub
aaa
fidivrs
fucomi
mov
jb
lahf
fwait
xor
mov
dec
outsb
jnp
daa
sbb
mov
xchg
xor
pop
jnp
and
jno
xlat
ss
xlat
test
dec
adc
mov
insb
loope
sub
imul
into
stos
insb
hlt
xor
rcll
mov
popf
aam
cmp
test
jne
mov
sbb
xchg
leave
or
or
repz
fimull
mov
fisubs
mov
mov
fs
ljmp
ljmp
leave
loope
sub
or
repnz
scas
push
in
hlt
mov
jno
call
scas
push
int
lock
dec
pop
add
or
push
add
jb
mov
loopne
mov
jne
mov
movsl
jbe
stc
mov
jmp
xlat
jno
mov
out
sbb
and
push
mov
add
mov
mov
cmp
outsb
mov
dec
pop
repz
cmp
dec
mov
mull
add
clc
les
jb
add
in
pop
stos
bound
je
pop
movl
pop
std
xor
adc
pop
ret
scas
dec
andb
pop
dec
cmp
mov
aaa
inc
jo
cli
mov
fidivs
mov
jmp
ret
daa
adc
dec
jg
into
out
int3
inc
mov
aas
ljmp
fisttps
les
test
scas
popf
rorb
shll
outsb
ret
out
and
lret
dec
shlb
inc
add
pop
add
ljmp
in
lahf
xchg
in
insl
sub
sbb
cltd
aad
jno
cli
cmpsl
mov
fcoml
stos
and
shlb
cmpsl
and
mov
fldenv
adc
pop
lods
enter
pop
pop
or
mov
mov
pop
adc
xchg
out
daa
movsl
pop
stos
pop
aas
andb
xor
or
insl
xor
or
leave
cmp
mov
xor
cmp
dec
jbe
mov
inc
outsl
mov
pushf
sbb
sub
jno
cltd
pop
jge
push
shlb
loope
stos
jb
bound
pop
jecxz
mov
int3
mov
pushf
cmp
push
pop
pop
imul
fmuls
cmp
push
jb
mov
aam
mov
mov
push
out
mov
rcll
fiadds
push
aas
addr16
add
iret
jg
mov
dec
mov
xchg
add
mov
sti
push
push
cmp
shr
pop
xor
xchg
pushf
sub
xchg
out
icebp
outsb
test
jp
xor
jge
cmpsb
and
fimuls
sub
mov
add
test
mov
or
jl
loop
cmpsl
and
cwtl
xchg
adc
out
mov
add
mov
jns
jb
jmp
cvtps2pd
jecxz
and
and
xchg
jo
popa
cmp
or
jp
nop
or
lds
sub
cmc
popa
in
pop
lods
notb
inc
xchg
cmpl
push
test
pop
jmp
imulb
loop
popl
jecxz
mov
inc
subl
mov
or
nop
scas
hlt
lcall
fwait
hlt
stc
xchg
rep
cld
dec
out
insb
addl
mov
mov
dec
cwtl
imul
jecxz
scas
xchg
inc
mov
sub
int
clc
jne
push
addb
xchg
pop
sub
adc
mov
pop
aad
scas
sbb
leave
loopne
jecxz
pop
mov
fnsave
jb
jbe
jmp
xchg
dec
inc
in
into
cmc
lock
loope
inc
or
jp
xchg
rcrb
add
push
cmp
adc
shll
fmull
jb
xchg
sbb
dec
fisttps
sbb
add
push
repnz
adc
leave
scas
xor
jge
sar
div
movsl
divl
sub
std
mov
jle
icebp
jl,pt
cltd
out
fimuls
arpl
dec
sarl
push
iret
push
sub
push
out
test
mov
xor
lock
sub
mov
je
lds
mov
andl
pop
movsl
cld
fcoml
insl
mov
cmp
or
add
lock
sbbl
jmp
dec
adc
sub
fldcw
cmp
enter
pop
cmpb
loope
std
sti
pushf
ljmp
stc
adc
mov
add
xchg
insb
push
iret
xchg
fdiv
es
pop
mov
insl
inc
pop
test
rclb
sarb
inc
pop
lods
push
in
mov
pop
mov
adc
xor
jge
or
push
push
fnstenv
out
mov
aas
push
loope
fs
mov
fucomi
pop
sub
mov
sti
sub
dec
leave
add
mov
cs
cli
sbb
rcll
add
push
roll
adc
cltd
lods
lods
loope
movsb
stc
std
adc
sbb
gs
mov
sahf
push
lret
ficoms
orl
jo
mov
lods
sub
stos
mov
mov
lret
popf
jo
push
mov
add
arpl
fadd
lret
xchg
js
xor
jae
je
popa
pusha
pop
rolb
jl
pop
outsb
add
sub
ret
lahf
or
jge
mov
mov
add
mov
xor
lret
fwait
adc
pop
aas
mov
adc
xor
inc
cmpsb
cmp
lds
pop
xchg
sahf
or
cs
sbb
mov
jns
sbb
add
dec
pushf
xor
shlb
lds
mov
fcoml
nop
cld
ret
sub
mov
je
and
and
lcall
mov
xor
mov
in
fwait
or
push
test
xor
jmp
popa
shrb
js
push
movsb
ds
mov
fidivl
test
mov
scas
jle
daa
xor
adc
mov
call
lcall
adc
inc
call
fs
pop
sbb
fs
in
lret
cli
pusha
fcmovu
in
cmp
or
dec
es
jbe
mov
loope
dec
xchg
sub
dec
cmp
repz
lret
lcall
sbb
lcall
push
iret
test
cld
das
lahf
mov
jg
jp
mov
push
in
sarb
jbe
fisttpl
fisubs
or
and
adc
test
lahf
cmp
sbbl
xor
cmp
jae
shl
dec
inc
rol
ret
inc
jb
dec
mov
pop
push
clc
mov
std
dec
xor
mov
mul
jae
inc
test
mov
scas
adc
insl
jne
dec
je
cmp
cmp
stos
pop
popf
sub
mov
insb
mov
and
add
insb
jns
pop
dec
cmpsb
leave
repnz
jge
dec
fimull
imul
mov
inc
push
inc
stos
pop
inc
push
mov
pop
ljmp
jge
iret
jnp
cltd
pushf
daa
js
cltd
fcmovnbe
ret
pop
outsl
cmp
iret
cmpsb
add
cmp
shlb
push
jnp
shll
leave
push
jmp
sub
repz
mov
sbb
push
jo
pushf
insl
dec
in
js
sbb
mov
call
sub
dec
incl
inc
xchg
pop
xor
imul
and
popl
mov
or
addr16
xor
mov
mov
pop
bound
push
mov
pop
and
das
pop
cwtl
push
sar
pop
add
mov
dec
addr16
pushf
lahf
mov
mov
push
xchg
xchg
js
pop
and
dec
mov
fisubrl
pop
inc
xbegin
sbb
inc
xor
lods
mov
mov
adc
pop
aad
outsl
into
mov
outsb
jl
ljmp
bound
xchg
out
dec
adc
sbb
xchg
movsl
lods
gs
cli
roll
arpl
or
imul
pop
popf
mov
ja
mov
into
je
xchg
sahf
and
mov
fbld
subb
jle
in
jo
xchg
mov
in
cmpb
lahf
call
loopne
bound
fs
sbb
xchg
sbb
lods
and
jp
insl
loope
insb
test
ret
dec
fisubl
icebp
loopne
gs
pop
push
mov
pop
sarb
jecxz
push
jb
in
call
popl
es
add
jnp
or
mov
lds
jecxz
cli
scas
out
dec
add
pop
mov
stos
sub
sbb
xor
xor
cmc
push
rolb
dec
outsl
adc
push
mov
popf
into
int
mov
pop
mov
xor
adc
fistpll
jbe
incl
xchg
test
std
mov
dec
in
imul
xor
stos
push
mov
push
clc
push
xor
pop
mov
xchg
pop
iret
stos
lret
rclb
iret
jne
add
mov
call
pop
mov
sub
repnz
cwtl
scas
xor
repnz
dec
push
nop
or
lcall
mov
mov
setns
mov
repnz
dec
cmp
and
cmp
mov
test
push
int3
pop
inc
stos
inc
mov
add
xor
ficoml
scas
push
sub
pop
and
das
ljmp
mov
test
insb
xor
cmc
mov
or
or
dec
dec
or
imul
mov
pushf
mov
leave
adc
aaa
xorb
loopne
out
cld
aaa
pop
stc
cmpsb
push
inc
nop
mov
fidivs
dec
push
inc
pop
inc
cld
adc
das
mov
xchg
jp
and
or
xor
push
in
mov
cmp
push
mov
into
sahf
lret
sub
sarl
pop
mov
movsl
jno
enter
or
jg
lahf
jl
jl
das
cli
push
int3
xlat
mov
sbb
jae
test
fldcw
popa
cmovb
sub
sarb
in
call
xchg
insl
adc
and
icebp
cmp
clc
mov
in
dec
ljmp
mov
sbb
int
mov
cli
mov
cld
les
ret
mov
loop
sub
xchg
jmp
aam
lock
roll
loope
and
cmp
lret
pop
ja
test
cli
cmpsl
lods
repnz
push
in
pop
inc
or
nop
insb
loopne
push
fwait
dec
or
dec
std
or
sub
out
push
lahf
xor
clc
divb
aad
adc
div
xchg
jl
cmpsb
dec
iret
divb
xchg
cmpb
in
je
insb
repz
ss
sub
movl
data16
iret
jle
jb
xchg
add
push
sub
sbb
stos
add
sub
adc
movsb
test
notb
fcmovnb
sahf
cs
and
or
jge
out
xchg
out
or
lods
inc
mov
dec
xor
push
pop
les
add
mov
frstor
xor
xchg
ficoms
std
push
push
fs
mov
inc
cmp
stos
aad
inc
cld
xchg
jmp
insl
loop
sbb
ljmp
iret
inc
cwtl
ficoms
mov
xor
repnz
mov
pop
lahf
mov
cmp
jmp
popf
push
adc
xchg
test
or
pop
cmpsl
mov
mov
flds
in
mov
ds
pop
icebp
pop
cmp
inc
popf
in
imul
or
push
data16
or
lcall
jmp
pop
fiadds
push
ds
or
ja
clc
pop
arpl
dec
inc
xchg
pop
jb
mov
mov
test
jne
loope
pop
fldenv
sti
stos
lds
lds
loopne
lock
sub
sub
je
pop
icebp
mov
lret
jl
outsl
aad
rcll
pushl
fsubp
xor
pop
dec
jp
popa
fwait
jle
xor
xchg
cmp
cmp
push
loopne
sub
push
out
xorl
dec
xchg
dec
rcrl
xchg
leave
test
push
xor
stos
lret
cmp
push
or
js
mov
cs
or
mov
outsb
xchg
inc
lods
or
xor
mov
sub
shl
jae
repnz
pushf
in
insb
fcoml
sub
pop
xchg
cmpsl
xchg
sub
sbb
stc
cmp
stc
gs
stos
filds
mov
cli
fcoml
jmp
mov
dec
pop
test
sahf
mov
lods
enter
xchg
aam
out
iret
dec
inc
insb
cli
push
lds
filds
jmp
in
movsl
jno
inc
out
sbb
lods
test
ficoml
fsubs
and
mov
fistl
and
pop
mov
popf
push
and
or
mov
es
repz
sub
cmp
add
out
cmp
mov
or
and
xchg
dec
rcrl
jo
mov
sbb
lret
loop
dec
repz
pop
leave
sti
mov
add
movsb
cwtl
mov
mov
jnp,pt
cmc
add
shll
es
enter
pop
gs
add
dec
push
sbb
aas
push
loop
or
sbb
jnp
jnp
sbb
js
pop
sbb
sbb
mov
int
pop
mov
ljmp
popa
es
pop
or
sbb
mov
xchg
cmp
call
sub
or
sbb
xor
push
jle
dec
int
push
in
dec
scas
popf
xor
mov
arpl
and
stc
mov
and
sub
xchg
mov
pop
shrl
cs
jbe
movsl
sbb
orl
and
xor
dec
fcomps
ss
pop
dec
pop
popa
xor
and
fdivrs
mov
pushl
sarb
stc
loopne
in
inc
movsl
es
lcall
enter
mov
data16
gs
sub
pop
mov
xchg
insb
je
icebp
loope
sbb
ret
data16
mov
mov
gs
insb
xor
cmp
xchg
imull
inc
mov
test
fnstsw
mov
cmpsl
decb
cmp
adc
mov
mov
mov
sbb
stos
sbb
xchg
repnz
rcll
jns
cmpb
dec
jnp
fisubrs
dec
loopne
and
or
aam
inc
jno
jae
inc
jne
push
pop
jmp
out
cmp
mov
in
in
mov
repnz
mov
pop
rorl
mov
xchg
add
int3
push
inc
pusha
jl
xchg
jmp
jnp
lret
mov
in
clc
cwtl
or
stc
cmp
pop
negb
lcall
es
das
jo
jp
xchg
in
pusha
fwait
xor
inc
jg
mov
test
xor
and
aaa
adc
push
int3
xor
outsl
pop
faddl
out
xor
fs
jb
lods
sbb
pushf
mov
add
insb
fbld
testb
push
xlat
push
notl
sub
xor
cmc
xchg
lcall
inc
sub
mov
cmpsb
pop
xchg
jno
and
mov
mov
fcoms
std
ficomps
cmp
pop
movsb
stos
jbe
xor
pop
cltd
adc
sarb
and
pop
pop
enter
jae
scas
orl
rcrb
out
inc
push
out
push
adc
outsb
push
ja
mov
xor
ret
imul
jp
stos
outsl
insb
jae
mov
fadd
in
xchg
mov
adc
sub
mull
push
adc
pop
sbb
clc
aas
jbe
out
testb
pusha
lret
push
dec
stos
outsb
jne
xchg
fstpl
inc
cmp
mov
cmp
js
sbb
cmp
sub
jbe
iret
or
ja
jg
jmp
sub
rcr
mov
cmpsb
jecxz
out
xchg
aaa
movsb
push
xchg
ja
lea
leave
imul
stos
pop
mov
push
cli
xor
loop
mov
xchg
lds
cmp
fiadds
ja
stos
test
push
and
out
popf
sbb
jb
dec
dec
pop
jmp
enter
test
mov
jns
push
sti
lcall
test
mov
cmp
out
test
pop
push
shrb
lock
daa
loop
or
jne
xor
xchg
lahf
divb
cli
into
mov
ljmp
push
outsb
sbb
inc
mov
pop
jmp
adc
or
aaa
ds
dec
vorps
mov
push
gs
xchg
out
lahf
test
imul
dec
dec
or
inc
dec
gs
pop
call
adc
and
pusha
cltd
clc
lods
mov
aaa
aaa
push
test
pop
xchg
or
je
xchg
dec
leave
in
push
insb
popf
out
sar
sbb
shlb
jno
pusha
xchg
xor
clc
jo
dec
xor
js
dec
out
fnstsw
decb
pop
cmpsb
mov
jnp
xchg
jge
insb
imul
sub
dec
pop
icebp
sahf
adc
mov
adc
jb,pt
mov
xchg
cltd
outsb
mov
pop
dec
adc
lock
ja
push
push
pop
pop
and
push
in
pusha
jl
lret
or
fadd
iret
adc
lods
loopne
jno
popa
cmpsl
es
repz
xchg
ja
lcall
and
jnp
rclb
into
cltd
mov
mov
push
push
mov
out
test
mov
scas
ret
fildll
mov
dec
xchg
inc
push
repnz
mov
inc
sbb
jno
enter
mov
xchg
add
sub
cmp
mulb
pop
aam
push
lds
or
enter
scas
mov
xchg
mov
pop
bound
adc
lret
jne
fiadds
inc
mov
mov
movsl
test
subl
mov
insl
xor
mov
xchg
mov
and
in
addr16
ret
inc
sub
xchg
pop
lds
pop
out
aam
lret
sbb
andl
and
cmp
hlt
dec
mov
int
dec
fcomip
jno
lcall
adc
dec
xchg
lods
hlt
adc
sarl
pushf
cmp
mov
mov
cmp
inc
mov
push
mov
out
cmp
mov
add
xor
aaa
and
test
cwtl
xor
inc
fdivrs
test
push
sub
xor
dec
sbb
popf
sbb
sub
cmp
pop
push
adc
cmc
push
bound
lods
dec
pop
leave
pop
inc
xchg
fisubs
inc
fldenv
jae
cmp
xorb
mov
xchg
into
or
nop
cmpsl
enter
int3
ret
movsb
or
adc
and
aaa
xchg
mov
and
xchg
xor
push
iret
sti
les
hlt
lods
lret
arpl
fwait
jnp
rep
add
cmpsl
ja
aas
push
setnp
cwtl
mov
xlat
pop
sti
lea
ret
leave
scas
add
fisttpl
rcll
pop
mov
xchg
outsb
repnz
rorl
or
int3
lods
jb
dec
lods
in
push
iret
iret
jno
insb
and
notl
push
dec
cmp
adc
out
mov
add
push
pushf
insl
mov
and
fucomp
xlat
mov
je
dec
dec
ja
pusha
sbb
xchg
lahf
adc
push
divb
xor
sbb
pop
dec
push
mov
mov
xchg
cli
add
sbb
mov
notl
in
push
dec
lahf
fwait
or
std
mov
mov
and
dec
fisttpl
push
loope
jne
xlat
push
jge
sub
xor
roll
loop
adc
cld
xor
lret
xlat
adc
sub
sbb
pushf
sub
sub
xchg
daa
sahf
adc
pushf
dec
loope
sarl
jb
ret
adc
jb
outsl
daa
dec
xchg
mov
pusha
loopne
sub
jl
sbb
add
and
xor
data16
pop
sbb
mov
add
cmp
in
sub
push
cmp
lret
fldcw
je
nop
or
sub
scas
xor
cld
fs
stos
and
xor
sbb
push
cmp
shlb
cld
test
in
outsl
repz
cmp
in
xor
and
sub
push
out
lcall
popf
cmpsl
nop
test
xchg
xchg
jno
jbe
in
test
pop
adc
out
scas
push
mov
adc
out
pop
stos
out
out
push
or
mov
push
adc
icebp
lock
or
mulb
push
sbb
sbb
out
xchg
data16
adc
cmp
xchg
xchg
cmp
jmp
or
fisubrl
ret
loopne
jmp
lds
shlw
loop
dec
outsb
xchg
sub
mov
mov
inc
jg
push
popf
and
jb
loop
data16
sub
lret
adcb
add
ja
sub
lods
js
sar
repz
cmp
inc
stc
repnz
cli
xor
incb
ret
inc
int3
insl
rcrb
rclb
jbe
mov
xchg
decl
loopne
dec
mov
cmp
or
dec
mov
add
add
xchg
lods
leave
mov
push
push
pop
popa
inc
sbb
data16
add
xor
push
stc
scas
dec
outsl
cmp
dec
out
mov
pop
test
popa
xor
mov
test
mov
adc
out
lea
xchg
and
pop
lods
cld
pop
shr
xchg
rcl
out
xchg
pushf
pop
insb
pop
sub
and
cmp
testl
xchg
sub
adc
lcall
lret
not
das
jge
inc
xchg
xor
cli
push
mov
das
cmp
std
insb
iret
fisttpl
xchg
xchg
xchg
lahf
or
add
ficomps
jns
sbb
shrb
or
dec
sub
mov
mov
jnp
cltd
inc
pop
test
push
or
shll
mov
pop
and
inc
cmp
cmp
adc
jmp
adc
inc
lods
xor
jge
cld
mov
sbb
adc
mov
rcll
iret
pop
clc
push
jl
pushf
nop
stos
adc
subb
bound
or
cmpb
xor
push
fiadds
mov
leave
jmp
fwait
push
leave
mov
push
cmp
xchg
andl
imul
add
aaa
movsb
jp
call
clc
test
ja
inc
loopne
out
sbb
xor
mov
mov
sbb
int3
mov
arpl
stc
sub
jbe
mov
mov
jne
cmp
inc
ljmp
cmpsb
jnp
into
lret
test
xor
push
mov
push
mov
mov
mov
lahf
lock
sti
xchg
test
stos
in
or
or
int3
or
stos
inc
ret
sub
in
call
out
jae
or
adc
adcl
push
inc
mov
add
mov
testb
adc
stos
pop
rcl
push
adc
fiaddl
loop
cmc
fwait
jae
fimuls
inc
sub
jle
xchg
push
xchg
mov
fidivl
stos
roll
mov
jmp
xor
cmp
inc
nop
push
pushf
sbb
mov
outsb
sahf
pop
shl
movsl
dec
cmc
in
pop
push
mov
push
or
sbb
lret
cmpsb
cmp
sbb
and
das
mov
sub
mov
out
dec
je,pn
jo
cltd
cmp
adc
gs
mov
js
stos
xchg
divl
add
aas
movsl
lock
sahf
mov
ficoms
stos
or
movsl
arpl
repnz
jmp
mov
dec
adc
dec
and
sbb
sub
xchg
repnz
aas
mov
inc
sar
ljmp
add
out
mov
sub
mov
ret
icebp
fstpl
jmp
mov
scas
xchg
lds
sbb
sub
jle
xchg
les
or
notb
mov
sbb
xchg
add
ljmp
sbb
outsb
fstl
push
addr16
jae
sahf
inc
popa
lock
mov
inc
lds
out
jo
cmpsl
imul
jge
inc
mov
sbb
pop
adc
pop
xchg
out
lret
mov
cmpsl
push
das
addl
test
in
imul
xchg
push
add
xor
cli
mov
movsb
popf
enter
lock
scas
jmp
and
imul
mov
pusha
pop
adc
adc
das
sbb
mov
dec
dec
mov
xchg
dec
adc
xlat
movsl
call
adc
sub
inc
mov
icebp
dec
pop
mov
mov
adc
fsubrl
out
popf
call
pushf
add
adc
mov
shr
leave
iret
and
or
mov
jmp
mov
ficomps
mov
mov
decl
cmp
mov
dec
and
xchg
add
or
rcll
push
movsl
or
or
add
xchg
sbb
jl
sbb
adc
mov
dec
pop
hlt
push
sub
fmull
repz
cmp
xor
adc
pop
pop
call
inc
cwtl
xchg
push
mov
cmp
and
inc
dec
jge
sub
test
push
roll
lods
mov
mov
subps
mov
lcall
aas
inc
fldt
imul
add
dec
cmp
push
fs
pop
jg
nop
rcr
and
cmp
sub
les
fcmovb
xchg
ljmp
jmp
or
inc
push
pop
jle
or
push
jl
sarl
mov
ds
xchg
xchg
adc
rorb
lret
fisttps
fbstp
mov
jge
fwait
jg
fucom
dec
adc
inc
lret
leave
push
std
enter
imul
movsl
xor
jmp
add
jno
jb
inc
rcrb
xchg
jnp
dec
cmp
clc
test
pushf
pop
dec
sbb
test
xor
shrl
cltd
jl
and
xchg
jl
dec
sar
fwait
sbb
repz
insb
sub
inc
les
push
icebp
dec
leave
pop
push
insb
es
pop
xorl
pop
jl
das
addr16
daa
adc
fisubs
sbb
or
mov
mov
inc
test
aad
mov
int3
jg
addr16
xchg
add
or
es
fistl
dec
sub
das
xor
dec
cmp
andb
out
popf
and
xchg
pop
dec
inc
call
jno
adc
push
inc
add
cmc
cmp
sarb
mov
xor
lods
or
shrb
and
mov
jecxz
imul
jmp
xchg
mov
mov
stos
pop
das
or
mov
ret
pop
dec
sub
cs
je
cmp
adc
xor
push
adc
cli
jl
mov
mov
xchg
jmp
bound
jae
jo
cmp
imul
xor
negl
in
or
jnp
and
lahf
sbb
bound
cmp
int
adc
popa
mov
sahf
xlat
lods
xchg
jp
and
xor
rcl
mov
shll
testb
xor
mov
mov
sbb
inc
add
cmovbe
push
mov
cltd
in
repz
mov
cmpsb
add
xchg
lods
and
inc
dec
xchg
loop
inc
mov
fnstenv
adc
or
dec
push
jl
cmp
inc
jbe
icebp
loopne
add
and
jmp
cwtl
or
mov
jo
mov
out
leave
pop
sti
dec
push
and
adc
ss
out
fldcw
cwtl
xor
call
xor
movsb
scas
nop
push
nop
int
inc
jle
hlt
mov
std
add
fs
rcl
push
push
adc
ja
std
or
xor
inc
adc
rclb
cltd
hlt
cmp
sti
mov
adc
or
push
fsubrl
sbb
jbe
andb
jg
jae
xlat
jno
mov
push
mov
movsl
add
scas
cmpps
jbe
out
inc
cmp
dec
sub
inc
fstps
popf
adc
mov
ret
sub
incb
adc
push
mov
add
adc
mov
sub
pop
leave
iret
mov
mov
lods
and
jg
dec
xor
lods
mov
call
inc
xchg
sbb
dec
out
insb
sub
adc
gs
mov
mov
and
xchg
fstpt
fs
push
sub
pop
push
jb
jno
sti
mov
cmp
leave
loop
cmpsb
jns
test
ret
adc
jl
mov
jp
or
jge
sub
mov
jl
push
jmp
and
inc
cli
sbb
lods
inc
icebp
sbb
sbb
inc
shr
fstpt
stos
out
add
jmp
icebp
xchg
out
imul
dec
daa
or
pop
mov
sbb
popf
sub
mov
call
enter
pop
push
stc
mov
das
mov
std
xor
cs
jbe
push
test
faddp
sbb
xchg
xchg
dec
ficoml
add
push
sub
jmp
pop
repz
inc
arpl
mov
imul
test
mov
sub
mov
test
in
sub
add
lods
mov
jecxz
shl
pop
pushl
je
push
cmp
and
out
xchg
mov
sbb
or
imul
lcall
pop
out
aas
ret
loopne
add
lea
and
cmpsl
xchg
fldcw
in
outsb
pop
cwtl
sti
mov
arpl
loopne
pop
pop
imul
outsl
push
or
jmp
dec
in
scas
outsb
push
mov
cli
fmuls
fstpt
test
das
cmp
out
gs
mov
push
push
adc
test
arpl
jbe
inc
jbe
mov
into
xor
test
cs
xor
in
mov
int3
and
jb
data16
adc
lea
loopne
mov
add
inc
loope
movsb
xor
jb
dec
lods
sbb
iret
sbb
out
mov
sub
iretw
mov
sbb
cmp
loopne
xor
adc
pop
leave
test
lret
add
ss
xchg
jo
mov
mov
sarl
mov
jmp
cmp
rolb
imul
inc
jle
into
jmp
xchg
and
insl
fistl
mov
idiv
xor
mov
hlt
fucom
pop
lcall
pop
push
rorb
xchg
sub
in
rolb
ds
mov
adc
or
add
push
je
lods
inc
xor
dec
add
xor
pop
xchg
cmp
daa
fucomp
stos
mov
pusha
loop
jp
leave
sbb
faddl
or
fdivrl
nop
push
std
rolb
clc
mov
mov
mov
lods
and
pop
xor
test
inc
pop
jg
pusha
fs
nop
aas
mov
dec
cld
mov
enter
adc
jp
data16
divl
dec
data16
mov
mov
in
rcrl
push
xor
xor
mov
movsb
push
push
dec
stos
add
add
mov
pop
mov
fsubl
mov
int3
data16
push
fwait
ret
mov
xchg
jp
arpl
lods
xor
xchg
mov
pop
lret
push
aam
mov
cmp
xlat
jp
jo
sub
je
sbb
icebp
cli
push
xchg
mov
shl
mull
popf
mov
xchg
js
inc
sbb
mov
sub
pop
ljmp
fldl
pop
lret
leave
and
add
sbb
aam
mov
loope
inc
pop
in
icebp
mov
js
jp
sub
or
das
or
dec
push
dec
mov
sbb
pop
dec
xor
xchg
movd
in
push
sbb
mov
jmp
inc
jno
xchg
ja
repz
inc
aad
cli
mov
jge
ficomps
xchg
xchg
test
pop
outsl
pop
inc
clc
loopne
jns
xchg
adc
jp
mov
pop
cmp
pop
out
jo
ret
loop
cltd
inc
cmp
outsb
push
or
sahf
sub
mov
ds
jle
subl
mov
sub
mov
cld
sbb
test
fistl
dec
pop
cmp
andb
sub
div
ret
inc
jmp
or
movsl
test
movsl
mov
repz
in
sti
ficoml
incb
jne
fsubr
mov
pop
mov
daa
jno
dec
lock
lea
movsl
lcall
or
ret
popa
out
out
and
mov
popl
sub
mov
leave
stos
xchg
add
jo
jge
lods
cmp
jnp
xchg
ss
dec
mov
test
adc
jns
data16
cmp
cmc
mov
inc
leave
xchg
inc
push
or
fstpt
cltd
mov
mov
xchg
popf
daa
jecxz
sti
test
fiaddl
xchg
es
out
dec
push
xor
scas
leave
iret
inc
daa
mov
push
out
cltd
mov
mov
xchg
sub
int3
movsl
push
ss
cwtl
or
hlt
pop
dec
add
or
mov
fmuls
mov
lea
fcompl
jecxz
popa
mov
jae
pop
lds
call
xor
icebp
push
push
call
bound
pop
scas
dec
sbb
lcall
xor
addr16
or
mov
adc
mov
or
out
cmp
jb
out
in
xor
push
cmp
cmpsb
pop
xchg
pop
pop
mov
dec
adc
imul
das
sub
mov
and
hlt
out
out
cli
cmp
insb
add
setb
cmpsb
mov
fs
cmpsl
mov
fs
pop
repz
clc
xchg
add
sbb
dec
mov
pop
fs
jle
fdivl
stos
sarb
das
stc
mov
out
mov
idivl
jno
daa
pop
pop
xchg
mov
jb
mov
addr16
jbe
nop
push
lret
scas
mov
aam
and
flds
stc
inc
fbstp
push
xor
ljmp
jno
dec
insb
dec
das
dec
imull
inc
cmp
shll
insl
imul
dec
pop
fcomps
movsb
or
clc
loopne
inc
push
repz
stos
sbb
jae
gs
ret
packsswb
hlt
dec
cltd
dec
lahf
cltd
mov
xchg
popl
xor
jns
pop
arpl
arpl
add
orb
or
cmp
or
and
push
in
and
movsl
hlt
mov
inc
push
inc
jmp
mov
adc
sbb
fiadds
inc
mov
repz
fidivrl
mov
dec
les
gs
cmc
mov
inc
cmp
mov
jg
or
dec
cmp
cmpb
xchg
sub
pop
shll
mov
inc
es
and
mov
mov
repz
imul
out
inc
movsl
jl
jnp
imul
push
xchg
inc
es
es
jge
pusha
mov
push
cmp
jo
aas
roll
xchg
and
jnp
or
mov
xchg
rcrl
add
xor
push
add
outsb
fistpl
fs
inc
sbb
sub
jmp
stc
push
fnclex
push
sbb
out
xchg
popf
mov
jo
jge
sbb
mov
lret
cmp
cltd
mov
xchg
pusha
mov
lret
je
mov
sbb
inc
or
aaa
xchg
icebp
sbb
ja
jmp
cmp
push
pop
sub
out
and
mov
jp
fidivrs
in
push
push
sub
not
xor
icebp
leave
add
push
pop
add
push
in
lods
mov
scas
rol
adc
bound
inc
jnp
enter
insl
stos
mov
enter
mov
sbb
jle
pop
mov
inc
movsb
outsl
or
aam
inc
fidivrl
mov
nop
jno
lods
in
add
add
push
inc
push
adc
cmc
push
jle
test
lds
push
repz
xlat
push
or
out
add
mov
test
xor
in
pop
sub
les
gs
testl
push
int
jae
sti
sbb
push
loop
push
repnz
inc
rol
mov
ret
shlb
push
mov
and
or
in
loopne
int
mov
arpl
push
jo
jnp
aaa
ss
ffree
jae
sbb
stos
cmpb
int
or
sti
cmp
fsubs
subb
pop
ret
mov
test
jl
push
jb
mov
mov
mov
mov
cmpsb
lret
outsb
cmp
jge
ret
stos
mov
jno
pop
in
mov
mov
rcrl
icebp
mov
imul
mov
xor
dec
add
loopne
dec
cld
cwtl
mov
push
cmpsb
out
roll
sbb
sbb
jl
mov
add
leave
mov
xor
addr16
cmp
dec
xchg
cmp
push
push
fisubs
xor
inc
mov
adc
outsb
adc
popa
lret
ret
loope,pt
jmp
inc
lcall
fstl
jge
mov
mov
lds
pop
daa
xor
adc
shlb
movsb
cld
push
movl
ljmp
jns
fbld
mov
adc
iret
sbb
fidivl
xchg
mulb
inc
bound
repz
dec
xchg
pusha
push
ss
xchg
addr16
push
add
xor
mov
and
testl
rclb
popf
sbb
and
add
and
xor
pop
adc
int3
add
loopne
sub
lcall
jmp
xchg
loop
mov
dec
jmp
pop
mov
addb
fbld
ljmp
xchg
and
jle
in
inc
fs
fsubp
orl
jg
jmp
mov
fadd
arpl
sbb
std
jmp
jo
push
lock
mov
test
inc
insl
popa
inc
dec
dec
aaa
inc
xchg
cmpsb
ret
push
subb
xlat
jbe
adc
lea
and
jmp
sub
cltd
add
and
mov
jb
jg
mov
xor
imul
add
ret
int
out
stos
push
movsl
loope
or
pop
or
lds
testl
cs
adc
and
xchg
fisttpll
pop
clc
dec
dec
and
sbb
inc
jb
xchg
insl
push
inc
inc
lods
addb
jb
xchg
lret
lahf
fists
inc
or
loope
iret
jns
ret
sar
test
jno
add
mov
pop
push
mov
int3
lcall
aas
xchg
out
pop
in
cmp
pop
sbb
cli
pop
push
adc
sub
add
xchg
inc
clc
push
outsl
add
dec
mov
sub
mov
hlt
aam
lea
clc
orl
sbb
mov
in
fldcw
adc
repz
cmp
xchg
dec
xor
and
add
mov
sub
fcmovnu
sbb
sbb
push
cmp
nop
mov
push
shrl
lahf
pop
xlat
jle
jno
ja
push
xor
adc
push
dec
sub
sbb
add
sub
cmp
jb
sbb
pushf
cwtl
ljmp
lds
insb
dec
jns
clc
mov
push
push
insb
pop
push
lret
pusha
test
les
lds
mov
xchg
shl
xchg
stc
cmp
outsb
je
jg
xor
stos
ljmp
int
pop
inc
add
jmp
cli
mov
mov
mov
fistl
jb
loop
jnp
mov
sbb
jb
imul
jno
inc
push
movd
or
push
push
mov
jmp
push
ja
test
mov
jb
xchg
in
mov
jecxz
das
xor
adc
sub
xor
or
stc
fs
sbb
and
mov
dec
addr16
dec
out
pop
loopne
std
push
ret
mov
pop
insl
jmp
loop
xor
pushf
test
in
nop
iret
jg
add
push
clc
mov
mov
stos
inc
decl
cli
inc
jae
adc
xchg
fcompl
into
loopne
sub
out
mov
mov
pminsw
mov
repz
mov
pop
mov
daa
daa
adc
movsl
and
out
ret
fdivp
loop
dec
pop
popa
jno
add
fisubs
pop
lret
lods
cmp
xor
adc
mov
outsl
arpl
psubq
jp
test
subl
or
adc
sub
out
push
out
add
xor
jb
cmpsl
xor
add
push
push
push
pop
add
test
push
xor
repz
das
inc
out
cld
test
movsb
fucomip
mov
lea
loopne
sbb
cwtl
rcr
sub
pop
jae
movsb
pushf
aas
xor
pop
pop
push
or
cmpsl
stos
sti
movsl
jg
pop
pop
fnstcw
cmp
jp
mov
cmc
push
scas
xchg
push
clc
push
hlt
ss
dec
lahf
add
sub
pop
adc
lods
adc
add
mov
fsubl
jl
jbe
mov
aas
or
inc
push
lcall
mov
aaa
popa
das
mov
aam
stc
dec
sbb
cmp
push
aas
push
push
add
add
imul
or
jle
add
pop
imul
test
mov
jmp
adcl
dec
pusha
ja
gs
pop
insl
push
or
cli
scas
lods
pop
cwtl
mov
adc
and
dec
mov
leave
inc
inc
in
pop
sbb
and
sub
lret
inc
fildll
rcll
push
xchg
sti
mov
mov
mov
inc
and
jb
push
loope
cmp
jge
sub
popa
cmp
or
inc
add
imul
addr16
mov
jle
ds
in
insl
pop
cld
and
pusha
mov
push
pusha
test
insl
test
arpl
mov
jo
xlat
ds
daa
popa
shlb
mov
or
dec
scas
rcl
dec
add
fmuls
cmp
inc
rolb
mov
aad
mov
push
or
dec
jne
outsl
xchg
fucom
ja
js
mov
lret
push
pop
jecxz
lock
test
xor
mov
sub
and
inc
inc
mov
mov
sar
sbb
dec
scas
pop
jne
mov
jnp
mov
lret
out
addr16
cmp
sbb
xor
cs
movsb
subb
xlat
mov
add
pusha
in
jle
data16
cmp
jbe
xor
imul
lahf
xchg
icebp
mov
fs
dec
mov
xor
adc
fsub
js
jmp
inc
pop
xchg
sub
inc
leave
cmpsl
stc
scas
jbe
loopne
lock
mov
je
mov
mov
xchg
call
mov
mov
jmp
jns
out
and
and
out
mov
sahf
out
ds
cmp
push
int
push
notb
jmp
stc
add
test
adc
or
fwait
mov
lcall
pop
mov
lret
pusha
jno
xchg
movsl
jl
pop
sub
out
mov
fsubrs
pop
mov
or
jle
cmp
or
push
loope
dec
xor
push
pop
inc
add
lods
lds
jae
insb
add
fcomps
loopne
jnp
imul
push
aas
in
loope
popa
clc
sahf
test
clc
jl
cmovp
ljmp
outsl
scas
xchg
xchg
je
mov
ja
inc
fs
xlat
lods
push
jl
pop
in
jp
repnz
or
xchg
xorl
mov
xchg
mov
push
sti
sub
push
cmp
imul
push
test
stc
and
arpl
test
clc
pop
push
push
fdivl
pushf
adc
jge
lds
push
sbbb
call
fstpt
mov
mov
clts
jo
aas
push
movl
add
jb
ret
mov
mov
push
xchg
mov
cmc
mov
repz
outsl
lahf
or
dec
loope
cld
sub
iret
roll
stc
nop
loope
movsb
adc
fxch
fdivrp
jbe
jnp
adc
lret
xchg
pop
and
lods
out
adc
cwtl
lds
push
push
push
data16
push
fcmove
mov
or
mov
push
add
test
pop
sbb
jb
dec
cmp
push
pop
cwtl
pop
or
dec
pusha
sbb
rclb
inc
xor
inc
fldl
test
insb
out
ret
or
decl
lods
add
jl
pop
es
and
xor
sbb
addr16
push
cmp
jae
and
jb
xlat
shr
hlt
lcall
clc
shrl
addr16
ret
scas
xchg
or
out
or
xchg
cmp
jb
mov
add
adc
xor
xor
fidivs
cmp
out
or
pusha
mov
je
lret
divl
xchg
out
mov
fdivrl
mov
adc
sbb
mov
adc
rorl
cmpsb
inc
sbb
inc
push
jle
call
insl
push
xchg
outsb
fs
lock
sbb
push
or
mov
mov
shrd
in
add
inc
mov
fisubl
imul
adc
pop
dec
push
jl
mov
int
mov
les
mov
xchg
adc
ljmp
dec
rorl
pop
mov
inc
mov
xchg
fistps
movsb
jge
lock
shll
sbbb
ja
cli
sti
outsl
sbb
mov
mov
sub
les
ret
xchg
movsb
inc
pop
dec
scas
xchg
adc
pop
cltd
scas
stos
stos
push
push
mov
xor
push
sbb
aaa
and
add
cli
movsb
loop
rorb
dec
pop
imul
xorb
repnz
xchg
and
mov
popa
loope
adc
loope
mov
push
lds
cmpsb
cs
dec
lcall
adc
mov
dec
fldenv
repz
mov
pop
in
cmpsb
push
or
dec
and
cmp
cwtl
push
add
test
mov
sub
add
mov
sahf
je
out
pop
shrb
jg
inc
flds
sub
aaa
dec
xchg
dec
icebp
out
sbb
push
shrb
js
jg
pop
test
cmpsb
testb
add
jmp
je
cmp
mov
push
cmp
mov
sbb
xchg
fnsetpm(287
cwtl
xchg
stos
das
cmc
ret
pop
sbb
or
add
sti
std
add
xor
pop
out
add
pop
pop
pop
xchg
jle
xchg
push
test
or
sbb
out
mov
out
sub
out
data16
test
es
push
out
xor
mov
outsl
cmp
clc
cwtl
and
or
dec
inc
ficoml
xor
jle
repz
and
jno
sub
xchg
pop
cmp
sub
and
mov
jg
cmp
xchg
mov
cltd
pop
leave
ficompl
and
push
dec
stos
js
negb
or
dec
movsb
xchg
fwait
outsl
push
or
neg
jns
out
scas
popf
push
xor
addr16
inc
cwtl
inc
or
xchg
call
test
data16
lods
arpl
pop
mull
fstpt
insb
xchg
jecxz
addl
mov
push
std
mov
fs
popf
in
cwtl
and
repz
in
xchg
test
xor
add
stos
sbb
test
jge
add
adc
adc
sub
mov
mov
arpl
cmp
add
hlt
push
mov
jb
sbbb
popf
imul
cmp
sti
jmp
call
fldt
add
sbb
mov
jmp
faddl
insl
mov
in
mov
adc
mov
cmp
fmull
pop
add
pop
pop
add
cwtl
lret
lahf
js
popf
loope
lds
mov
xorl
adc
lret
andl
adc
fldl
adc
mov
mov
dec
mov
inc
pop
iret
rep
cwtl
in
cmp
lock
jle
mov
ljmp
cli
in
pop
stc
movsl
fldt
pop
cmpsb
fwait
dec
and
cmp
roll
adc
xor
outsl
in
xchg
les
les
dec
sub
addb
outsb
cmp
sub
mov
add
loope
test
inc
mul
iret
mov
loop
daa
inc
lcall
pop
hlt
es
out
push
movsl
loop
add
dec
aas
push
das
in
xor
mov
jge
rcl
cmp
add
je
jl
cmc
jno
xor
fadd
xchg
sbb
xor
insb
int
fnsave
les
movsl
inc
add
xchg
imul
dec
cwtl
ss
jns
clc
mov
mov
pop
or
mov
sahf
cwtl
cmp
mov
mov
ja
xchg
cmp
int3
stos
ljmp
jbe
repz
sbb
into
sahf
add
test
push
mov
out
push
dec
push
rcll
push
jns
rep
mov
dec
pop
push
xor
lds
sub
inc
movsl
mov
and
jae
in
scas
int3
pop
or
in
push
fwait
sub
pop
fsubrl
cmp
and
add
out
in
and
divl
mov
adc
push
test
js
mov
mov
clc
xor
sbb
jg
add
out
cltd
aas
push
cmc
adc
test
cmp
cli
test
cmp
pusha
jl
and
dec
push
inc
adcb
pushf
sbbb
outsl
pushf
inc
fistpl
push
daa
cmpsl
inc
adc
cwtl
xchg
jno
hlt
jge
push
push
clc
popf
mov
lock
xchg
mov
push
sahf
mov
movsl
xchg
xchg
cmpb
test
dec
shl
xchg
jge
in
pop
sub
stos
cmp
xchg
scas
das
sar
sub
pushf
fisttpl
loope
in
and
sub
insl
push
push
movsl
in
jno
mov
scas
repz
in
and
jecxz
hlt
mov
outsl
sub
les
inc
mov
ffree
icebp
adc
pop
push
and
cld
lret
lods
cmp
mov
push
mov
mov
push
cmp
push
call
fstpl
mov
cs
imul
jp
aad
lea
ret
int3
fiadds
and
or
cmp
fwait
sahf
rolb
cmc
jns
pop
pop
test
mov
pop
cmpsb
repnz
movsb
insl
cltd
jae
xlat
rorl
cmpb
pushf
jge
sbb
gs
lahf
mov
daa
out
mov
es
cmpsb
sti
push
mov
mov
mov
lods
sbb
mov
rol
hlt
popa
out
adc
or
mov
aad
xor
sbb
adc
push
mov
pusha
hlt
cmpsl
and
pushf
mov
mov
pop
pop
sarb
cld
ficoml
and
mov
jno
test
aam
fstps
xor
jmp
decb
clc
adc
mov
fistl
push
or
inc
movsl
lods
dec
jae
inc
pop
sbb
or
cmp
xchg
sbb
mov
push
scas
jmp
xor
xchg
fildll
inc
ja
lods
int
lods
testb
or
jp
lds
je
and
nop
popf
xor
jge
inc
pop
rolb
inc
and
cmp
test
repz
mov
lahf
cmp
cltd
jmp
jl
cltd
cli
dec
add
or
shll
stos
and
inc
scas
push
enter
push
pop
mov
dec
aad
cwtl
jns
aas
sbbb
jno
or
nop
stc
and
xor
add
push
ja
and
lods
leave
mov
notb
push
flds
jge
xor
out
jge
fwait
push
or
push
pop
ss
mov
arpl
stc
push
mov
insl
in
pop
push
pop
or
jne
movsl
sub
dec
mov
sub
test
xchg
mov
add
cmpsl
ret
dec
bound
sbb
cmp
lret
mov
test
mov
repz
sbb
sbb
adc
int
inc
es
movb
je
sbb
adc
xchg
imul
sbbb
pop
loop
jecxz
mov
lock
and
int3
mov
sahf
xor
stos
sub
jl
int3
dec
xlat
xchg
sbb
ret
std
repnz
sub
daa
daa
push
cmpsb
cmp
pop
xchg
les
xchg
mov
mov
andl
cmp
inc
sub
test
rolb
jne
lods
imul
jbe
fimuls
or
jmp
les
addr16
daa
pop
sarb
mov
mov
mov
es
mov
into
dec
call
lods
in
xchg
xor
addb
stos
or
inc
dec
dec
pop
mov
pop
or
mov
int
insl
inc
adc
std
nop
out
out
mov
mov
mov
jl
push
jno
lcall
cltd
mov
xchg
icebp
or
mov
push
adc
bound
or
fbld
jbe
jp
sti
xor
mov
xchg
jmp
sub
ret
in
out
add
adc
jmp
fbstp
push
sti
es
enter
sbb
cmp
std
mov
enter
adc
adc
mov
xor
jns
adc
xchg
mov
mov
test
pop
arpl
subl
jmp
adc
mov
daa
ss
mov
cli
and
mov
fdivs
mov
lret
jecxz
mov
test
xchg
js
mov
xchg
aaa
fdivl
xlat
jp
movsb
dec
push
inc
sbb
jnp
scas
jge
mov
mov
adc
pop
fs
testl
mov
mov
push
mov
insl
pop
pop
stos
jg
mov
push
jp
adc
call
cmp
scas
push
mov
jb
roll
cwtl
orb
gs
fcmove
adc
sahf
jmp
fidivl
ret
and
pop
push
push
sarb
das
mov
les
insl
icebp
push
push
pop
inc
daa
sbb
rorl
sahf
xchg
pusha
sbb
int3
enter
das
data16
xchg
add
sbb
test
pushl
in
repnz
lcall
inc
mov
jmp
push
adc
xor
inc
push
inc
push
mov
les
outsl
and
add
jge
fnstenv
mov
fistl
dec
gs
loopne
int
fcompl
cli
rorl
add
stos
mov
rorb
das
mov
or
loop
xchg
push
xor
xor
jmp
push
add
cld
sarl
or
mov
fadd
jge
cld
imul
subb
ds
xor
xchg
mov
fmulp
mov
push
int
sahf
cmp
test
sbb
iret
movsb
mov
cltd
add
sub
addl
dec
lods
xchg
mov
pop
stos
ret
int3
pop
fidivs
xor
in
ret
insb
insb
ret
sub
inc
idiv
fistpll
int3
inc
les
test
mov
and
mov
rolb
fsubs
fwait
or
xchg
push
ret
pushf
xor
in
mov
pop
enter
loop
sbb
adc
inc
loope
xchg
mov
popf
movsl
dec
adc
mov
les
mov
mov
jo
inc
mov
jns
subb
fs
push
mov
xor
movsb
in
rorb
sbb
icebp
xor
ja
and
adc
aam
push
and
mov
push
idivl
jp
inc
xor
das
enter
push
add
jmp
mov
test
enter
aam
loopne
ret
loope
inc
in
mov
sarl
test
fsts
pop
std
cmp
ja
and
rcl
xor
daa
sub
lcall
lods
mov
mov
inc
xor
or
test
bnd
nop
dec
or
imul
push
jp
xor
and
mov
xor
not
lcall
xchg
push
xor
lret
int
iret
adc
pop
mov
adc
into
mov
dec
jecxz
imul
sbb
push
xor
test
andb
movsb
jb
mov
xchg
xlat
xor
fldcw
mov
popa
jg
das
jno
push
dec
lret
test
sub
pop
dec
inc
push
mov
cmp
push
aas
lods
sub
inc
pushf
es
in
ret
les
repnz
stos
jbe
decl
out
mov
imul
push
cs
stos
fistpll
and
clc
xlat
lret
rolb
cmp
lock
stc
shll
mov
es
addl
and
fdivr
inc
loope
ret
mov
cld
sti
mov
cmp
aaa
jge
mov
ja
pop
pop
push
filds
inc
jns
sahf
adc
fimuls
pop
pop
test
aam
or
xor
in
enter
mov
xlat
addr16
xor
data16
mov
mov
cmp
or
jl
inc
pop
adc
pop
inc
arpl
push
fcompl
insb
add
xor
sbb
dec
dec
test
cwtl
xor
fwait
mov
rclb
push
repnz
sub
and
mov
test
aas
pop
jecxz
jmp
test
test
jo
cmp
xor
lock
nop
cld
jp
ret
repnz
sarb
ret
cld
repz
jge
inc
out
scas
outsb
or
mov
push
fistps
fsubrs
fs
insl
mov
push
and
shll
lret
ret
jae
xchg
insb
movsl
mov
pop
jmp
lcall
jnp
shlb
mov
cld
mov
cmp
adc
mov
ljmp
xchg
and
fisubs
stos
shll
std
mov
sbbl
mov
pop
adc
and
xchg
sbb
in
ss
mov
and
or
xor
decb
and
inc
insl
xchg
pop
ja
push
mov
mov
cmp
arpl
cmpb
cmc
pop
mov
pop
fs
sub
loope
lahf
mov
dec
bound
inc
mov
je
es
sbb
pop
dec
jmp
jmp
lahf
test
lods
bound
dec
mov
cmp
adc
mov
andb
rcrb
ss
ds
mov
and
push
jne
sub
test
xor
test
lods
or
scas
in
xchg
loope
dec
xor
push
push
jmp
pop
add
mov
shll
mov
mov
inc
jnp
test
loop
push
repnz
jmp
mov
rcll
jae
mov
jmp
popf
addl
sub
push
sbb
aas
popf
mulb
dec
stos
cs
shr
and
adc
sub
dec
mov
cld
out
hlt
jle
pop
outsb
aam
push
gs
mov
icebp
cmp
pop
inc
into
dec
fmull
subb
xchg
dec
test
mov
mov
aaa
jne
inc
ficomps
sbb
ja
sbb
lcall
mov
icebp
cmp
hlt
jg
mov
es
movsb
jge
fidivs
adc
ficoms
in
dec
mov
insl
iret
idivb
lret
mov
mov
fistps
lret
jnp
lods
xchg
jnp,pn
pop
and
and
push
outsb
mov
imulb
in
jae
xchg
cmpsl
scas
mov
mov
and
cmpl
out
or
pop
mov
mov
or
dec
cltd
cmp
jp
jge
pop
fs
inc
cli
adc
sbb
mov
xchg
mov
clc
je
or
adc
shrl
mov
js
popa
push
out
sub
mov
or
dec
dec
adc
pushf
test
jecxz
nop
dec
movsb
mov
mov
xor
cmpsl
rolb
jmp
insl
pop
ljmp
push
jns
mov
sbb
leave
push
add
test
lods
testl
cmp
iret
jl
das
hlt
bound
mov
sub
shll
scas
inc
add
int
push
das
xchg
ja
insl
inc
or
leave
push
movsb
js
int
aaa
pop
add
push
repz
imul
out
in
fisttps
popa
pop
shrb
sarb
push
stc
sahf
fnstenv
jl
in
mov
gs
mov
shlb
add
or
jnp
outsl
lods
pop
add
cmp
ljmp
adcl
push
jecxz
mov
adc
int3
mov
or
xorl
std
and
roll
adc
add
pop
push
loope
imul
adc
call
sarl
push
aaa
mull
hlt
or
cltd
cmpb
lock
das
add
mov
and
pop
pop
add
mov
pand
subl
pop
int
pop
add
add
dec
inc
jae
add
rcrb
xchg
push
adc
fmuls
mull
cmp
xchg
loop
repnz
ja
jmp
mov
jnp
jne
xor
out
push
xor
aam
add
cmpsl
es
mov
std
ffreep
sbb
jecxz
sub
popa
aas
arpl
pop
lcall
xor
cmc
daa
push
ds
mov
out
mov
inc
push
pop
rol
fld
and
xchg
lods
xchg
out
jmp
pop
lcall
daa
dec
sahf
cmp
movsb
mov
iret
push
dec
push
or
in
pop
add
pushf
rorl
sbb
lea
lahf
jecxz
mov
xlat
add
xchg
sahf
xchg
outsb
jmp
in
jmp
xchg
test
cmp
and
inc
xlat
mov
inc
cltd
mov
shrb
outsl
mov
repz
mov
push
sub
push
outsb
dec
sbb
or
push
in
lds
jnp
icebp
push
lods
jb
xchg
sbb
xchg
push
lds
xchg
je
xchg
adc
dec
push
push
mov
xor
subl
out
mov
sub
loopne
xchg
sbb
gs
push
call
dec
jnp
js
lock
scas
aas
inc
scas
leave
outsl
pop
lods
aad
or
sar
je
lods
mov
sbb
cmp
push
inc
sub
xor
in
ds
fistps
or
jo
in
or
out
add
test
outsb
mov
sbb
daa
adc
enter
imul
dec
cltd
loop
mov
inc
cmp
cmc
cmp
mulb
fsubrs
sub
lahf
jb
cmp
cld
and
out
jne
jmp
imul
mov
and
sub
and
cmp
sbb
add
jg
aad
or
mov
dec
lcall
loope
cmp
mov
je
aad
xor
xchg
mov
xchg
pop
fsubs
int3
push
dec
and
push
shrb
mov
sahf
cmp
repnz
adc
scas
pop
adc
dec
push
iret
mov
ss
lahf
mov
add
push
dec
xlat
test
sbb
adc
push
sub
xchg
xchg
xchg
sbb
aad
add
pop
xchg
ljmp
imul
fmuls
mov
test
or
jecxz
outsl
shll
xchg
loopne
mov
pop
adc
in
test
test
xor
outsl
out
aas
mov
int3
jbe
mov
lahf
dec
out
lods
sbbb
and
cmc
push
inc
test
fildl
jnp
mov
sbb
xchg
test
jle
clc
and
dec
fcomps
mov
sbb
mov
inc
popf
out
pushf
mov
pop
pop
sub
sub
enter
dec
fstpl
jmp
cltd
gs
in
gs
push
insb
repz
jmp
jae
rcl
xor
sub
sbb
cmp
fisubl
inc
pop
out
xor
push
mov
sbb
rolb
mov
sub
mov
aas
push
bound
mov
add
out
das
cmp
ljmp
adc
rclb
rcl
les
inc
ja
add
int
subb
lret
test
cmp
and
out
negb
add
mov
jg
or
in
xchg
pop
or
cmpsb
testl
sub
jo
gs
inc
iret
pop
mov
mov
les
repnz
call
sbb
andl
out
ficompl
or
enter
cmp
into
jle
xlat
cmp
aas
dec
inc
cld
sub
sbb
popa
add
sbb
fs
and
push
and
mov
aad
cmpsb
in
mov
rclb
push
mov
pushf
jbe
adc
rcr
mov
and
mov
cltd
dec
xor
pop
dec
cmp
fdivrl
dec
jp
cmp
les
and
cmp
inc
cmp
jae
dec
out
test
jg
pop
ss
mov
push
movsl
pop
push
jnp
push
stos
and
test
stc
dec
dec
push
push
sbb
loope
pop
rorb
into
cmp
out
jb
mov
in
divb
inc
mov
cmp
fmull
cmp
das
sahf
lret
je
mov
jg
or
test
fs
xor
pop
pop
jno
addr16
sub
pushf
xchg
scas
mov
les
mov
mov
ficoml
in
xorl
cmpsb
jns
js
pop
cmp
mov
xchg
push
xor
mov
insb
mov
jl
daa
aas
arpl
add
enter
mov
dec
or
sbb
fisttps
popf
mov
lcall
icebp
in
in
push
sbb
jge
xor
adc
push
xor
add
aaa
lret
iret
scas
pop
rcrb
ja
repz
pop
push
test
pop
hlt
jge
pop
mov
les
test
out
mov
xor
jmp
test
or
push
jo
sub
mov
mov
mov
dec
mov
in
lahf
ss
mov
fisubrs
cmp
adc
sub
das
test
insb
daa
mov
push
push
add
lcall
aaa
xchg
test
dec
pop
jns
les
sbb
sbb
cld
xchg
adc
pop
cld
xlat
popa
pop
pop
sub
scas
mov
fbld
cmp
push
sub
push
and
jo
xlat
nop
sbbb
leave
or
lea
xor
int3
movsb
aaa
pop
lret
mov
adc
fisubrl
sarl
out
lock
mov
sbb
cwtl
add
popa
cwtl
sub
jecxz
cmp
and
add
adc
and
stos
fstps
lds
test
stos
in
gs
out
mov
pusha
out
jmp
mov
sbb
cmc
jmp
mov
sti
or
jg
sti
xchg
inc
movsl
hlt
pop
and
inc
sub
dec
and
sub
inc
cmp
sbb
pop
cmp
int
stc
movsl
and
stos
aas
pop
adc
dec
sti
mov
jnp
sub
dec
enter
sbb
or
xor
fsubl
xor
inc
movl
push
dec
adc
jno
adc
xor
aam
scas
add
mov
jge
movq
inc
into
push
mov
repz
xor
scas
pop
shlb
je
pop
or
xchg
negb
cmp
mov
aam
daa
pop
ret
cmpsb
mov
je
es
and
into
add
psubw
stos
xor
pop
inc
adcl
and
mov
clc
scas
lcall
pop
xlat
into
xchg
xchg
cld
xchg
pop
sbb
or
add
gs
dec
insl
push
cmc
test
xchg
lret
sub
arpl
cmp
adc
jno
mov
mulb
cmpsb
das
in
pushf
and
cmp
jg
xor
and
stos
jge
mov
in
mov
xor
into
jne
fwait
aaa
and
xor
out
dec
dec
outsb
dec
dec
in
push
pop
pusha
xlat
scas
add
loope
loope
sub
mov
hlt
int
les
push
imul
dec
hlt
loop
inc
inc
xlat
das
jle
inc
aad
jg
push
jno
das
movsl
jp
inc
mov
nop
subb
push
mov
or
cmc
adc
in
mov
mov
std
inc
ja
test
subl
mov
pop
dec
sarl
outsb
stos
mov
sbb
xchg
and
imul
xor
pop
add
xchg
pop
orl
or
test
xlat
movsl
xchg
outsb
fs
mov
bound
push
push
aad
lret
insb
cmpb
pop
cmp
popa
test
mov
mov
ficoml
roll
and
arpl
addr16
jle
xchg
cwtl
cmp
ljmp
jne
outsl
adc
outsb
jb
dec
fucomip
push
sub
rorb
je
shr
add
enter
addr16
into
in
std
imul
sub
aaa
mov
and
scas
ds
in
cltd
add
xchg
into
neg
and
xchg
cmpsl
inc
or
repnz
or
mov
icebp
mov
enter
mulb
and
push
out
call
lock
icebp
jmp
sbb
mov
dec
dec
push
dec
hlt
scas
fwait
arpl
mov
test
push
pop
cmp
orb
mov
inc
lods
sbb
dec
lret
push
adc
imul
xchg
and
push
scas
sub
andb
cltd
jno
lods
cmp
mov
sub
mov
dec
push
jp
sbb
lds
je
cmp
scas
mov
sub
xchg
cmp
popf
imul
scas
test
mov
mov
out
sbb
mov
imul
xchg
and
popa
push
inc
adc
addb
pop
lcall
add
adc
add
sub
lea
add
add
imul
ss
adc
fnstenv
cmpsl
mov
jl
mov
adc
into
fsubs
stos
out
fnsave
fldcw
fnstsw
rcl
pop
adcl
inc
pop
mov
inc
jp
jne,pn
int
mov
out
mov
lcall
inc
data16
repnz
std
outsl
test
dec
imul
test
das
adc
add
jmp
jmp
movsb
fcmovnu
sub
jno
adc
pop
dec
cwtl
pop
dec
dec
push
cmp
fimuls
dec
sahf
fiadds
nop
aas
xchg
sbb
add
and
lret
inc
xrelease
jp
pop
inc
xchg
jg
mov
mov
push
mov
pop
xor
cld
icebp
jnp
sarb
push
cmpsl
enter
stos
and
arpl
shrl
out
movsbl
movsl
sub
into
rorb
std
add
pop
cld
std
lcall
cltd
and
in
les
cli
popf
das
popa
fdivl
test
test
and
sub
mov
and
jb
andb
loope
insb
sub
dec
xor
lock
xor
sahf
cltd
aad
clc
sarl
pop
mov
enter
dec
jno
sub
inc
call
test
test
out
xchg
insb
rcrb
faddp
jns
je
addl
in
insl
cmpsl
ss
lahf
xchg
fldenv
push
jo
or
dec
addr16
movsl
push
js
mov
mov
cmpsb
push
rcll
push
dec
jnp
rorb
ror
ljmp
inc
lods
or
cld
push
cmp
add
sub
adcb
hlt
addr16
or
sub
pop
push
dec
es
pop
cmp
data16
bound
adc
nop
or
pop
hlt
xor
ret
aam
fcomp
mov
push
fbstp
fdivl
push
cmc
xor
inc
push
cmp
cmp
jmp
xchg
xchg
test
pop
mov
push
xor
mov
dec
fidivs
push
ljmp
push
sub
test
xchg
in
jae
imull
enter
adc
shll
xchg
cmp
iret
mov
aaa
popf
les
jmp
cmp
xchg
and
das
imul
pop
fwait
pop
add
lods
pop
push
mov
add
jno
mov
xchg
ret
sarb
fbstp
mov
mov
and
inc
popl
sbb
inc
mov
arpl
inc
ret
ljmp
cmp
sahf
cmpl
jae
xor
add
xor
leave
pop
xchg
pop
testb
and
push
or
pushf
orps
jecxz
cwtl
test
or
fstp
repnz
cli
rcll
or
add
aam
scas
inc
jb
cmc
in
xchg
lret
xchg
lahf
call
inc
aad
inc
stos
add
mov
dec
push
or
out
in
pop
push
mov
or
scas
lret
mov
mov
scas
call
jmp
xor
mov
mov
movl
arpl
js
or
aas
push
mov
xchg
test
lret
jle
inc
adc
sbb
js
mov
ljmp
adc
push
inc
jge
cmpsl
movsb
push
stos
or
jbe
push
sub
xchg
bnd
push
xchg
xlat
xor
pop
cltd
out
sbb
dec
icebp
and
daa
inc
rcl
mov
stos
out
cmc
pop
ljmp
and
and
dec
js
xchg
lcall
fs
fidivrs
xchg
into
lods
dec
pop
shll
jmp
movb
insl
pop
cmc
pop
jge
xchg
orb
test
inc
cmp
test
add
xor
movsb
jo
and
xchg
push
pop
push
mov
jmp
fwait
dec
inc
in
mov
aad
adc
sub
xchg
daa
adc
lods
out
insb
adc
and
fwait
jmp
mov
repnz
xchg
push
fs
push
adc
add
outsb
lcall
dec
ret
cs
nop
mov
push
in
jne
jb
or
data16
orl
pop
addl
cmc
sub
push
adc
or
mov
adc
sbb
pop
pop
and
gs
ss
push
mov
inc
lods
mov
dec
fnstsw
fs
stos
dec
and
inc
iret
jp
in
out
dec
inc
out
lret
mov
sbb
lods
add
shlb
rcll
and
jne
jp
ficoml
add
repnz
mov
push
xchg
ja
test
dec
repz
sbb
ja
loopne
push
popf
inc
ja
xchg
fwait
shrb
lds
shll
addl
dec
movsb
cmp
and
lods
iret
test
ja
mov
ret
inc
dec
xor
test
stc
sbb
lock
stc
les
cld
sahf
cltd
mov
or
in
stos
jmp
mov
fldenv
fisttpll
ljmp
int3
lods
xchg
js
cmp
push
cmp
jle
inc
loope
dec
cs
gs
sti
out
jecxz
add
mov
mov
or
adc
xchg
into
lret
add
stc
jg
mov
fbstp
mov
into
das
jle
jo
cmp
aam
fwait
inc
pushf
fwait
mov
add
mov
outsb
shlb
mov
xchg
dec
mov
imul
sub
stos
lock
imul
test
adc
inc
cmp
inc
xor
dec
cmp
pop
push
pop
lods
adc
xchg
push
inc
popf
mov
pop
out
bswap
fstl
jecxz
lods
fadds
jle
push
sbb
xchg
sahf
std
pop
sub
mov
pop
stc
sbb
lahf
cmp
pop
mov
movsb
dec
sahf
icebp
ds
lret
xor
dec
mov
jne
jl
test
mov
sbb
aad
or
rcll
cltd
cmp
jl
orl
cltd
mov
ljmp
sahf
dec
mov
in
add
loope
movsl
aad
inc
lods
sub
mov
pop
loop
mov
int3
push
popf
or
xchg
push
orl
xchg
jnp
stc
jnp
fildl
or
push
sbb
add
sub
mov
xor
or
push
lock
scas
cli
out
pop
xchg
and
aas
aam
cs
loopne
nop
mov
cs
addps
add
jle
imul
pop
movsb
in
or
sarb
pusha
js
sub
lods
add
jl
cmc
test
and
and
test
rcr
out
sbb
cmp
xor
outsb
mov
sub
and
add
lret
mov
pop
or
push
out
pusha
adc
sub
das
mov
inc
adc
jnp
xchg
call
lret
adc
mov
outsb
addl
lret
bound
xchg
je
sbb
movsl
inc
mov
pop
incb
fdivl
sbb
gs
fidivl
inc
or
mov
insb
in
sbbl
cmpsb
adc
outsb
leave
jecxz
xchg
inc
cwtl
fcmovu
aaa
or
pop
je
sub
pusha
jg
or
mov
push
jb
mov
loopne
cmpsb
jl
dec
daa
subb
add
push
mov
fmul
xchg
mov
addr16
imul
popf
lds
ds
xor
adc
jl
int
xchg
lock
sub
js
loope
jns
mov
fstl
adc
call
pop
in
fistpl
jnp
std
inc
dec
repnz
or
jge
fwait
out
adc
cli
jecxz
sbbb
push
cmp
push
dec
out
outsl
mov
repnz
sub
pop
es
aaa
sti
arpl
inc
mov
jb
nop
stc
movsb
shl
jp
dec
add
cmp
cmp
inc
cli
add
jg
jb
arpl
stc
add
or
test
sub
mov
xor
jo
push
cwtl
add
and
sbb
test
mov
out
mov
push
xchg
ljmp
pop
dec
jge
outsl
jnp
sub
or
ret
push
ret
test
xchg
push
cwtl
ret
mov
inc
ffree
addl
or
mov
test
add
sub
icebp
aaa
or
add
jno
push
dec
outsl
and
xor
hlt
stc
inc
mov
dec
ljmp
jae
xor
in
mov
lds
mov
ret
cmp
ds
insl
cmp
sbb
sub
pop
push
arpl
fcomip
loope
ljmp
stos
negb
pop
xchg
sub
lods
push
xchg
sub
dec
dec
or
dec
inc
cmp
ret
aad
ret
aas
fimuls
getsec
add
ret
aaa
in
xchg
movsb
aaa
cmpsl
cld
out
xchg
into
out
mov
mov
mov
mov
mov
fcmovbe
push
shrl
lds
movsb
mov
mov
pop
sub
cmpsl
jmp
cmp
je
inc
fnsave
shl
mov
out
push
adc
mov
fwait
mov
fisttps
jno
inc
adc
addb
je
movsl
mov
sbb
and
and
pushf
call
rcll
sahf
and
cltd
test
loopne
mov
insb
lret
mov
mov
sbb
cli
arpl
mov
popf
inc
loope
xor
xor
mov
fisubl
sahf
sub
sub
inc
je
xchg
loopne
orl
imul
sbb
stc
adc
sub
outsl
dec
bnd
sbb
dec
sbb
mov
bound
jo
mov
cltd
jo
add
sub
dec
inc
sbb
inc
jo
pop
cmpsb
inc
notw
xor
mov
inc
cmpsl
cmp
xlat
call
inc
sub
pop
add
mov
insb
add
stc
and
lock
inc
aaa
pop
dec
jno
scas
push
xchg
mov
divb
imul
mov
fidivrs
scas
xchg
jbe
stos
cmp
mov
cmp
scas
lret
pop
mov
xor
jb
stos
loopne
stos
adc
mov
add
xor
cmc
sbb
in
dec
cltd
xchg
jl
adc
lods
jmp
or
push
dec
push
fs
pop
lods
sbb
test
test
shrl
mov
sbb
xor
pop
jae
push
arpl
fisubs
ja
jg
cli
mov
jbe
sbb
lock
ss
push
ret
aas
xor
gs
sbb
mov
arpl
sbb
cmp
mov
int3
pop
mov
repnz
std
test
sub
inc
ja
fldenv
popf
outsb
movsl
sbb
cld
and
dec
pop
out
loope
add
or
das
insl
lea
push
cmp
div
dec
push
mov
pop
mov
xchg
xchg
dec
out
int3
jg
icebp
sti
leave
add
popa
jae
xor
mov
imull
and
out
adc
rcl
jp
popa
or
arpl
push
lock
jbe
mov
stos
push
lds
jg
add
push
dec
mov
push
bound
cmp
rcll
aaa
in
mov
andl
fstp
xchg
mov
xchg
xor
std
repnz
mov
sbb
xchg
inc
mov
xchg
jbe
sarb
pop
shlb
mov
gs
test
movsl
stc
imul
das
mov
es
inc
fsub
in
add
call
cmp
in
mov
adc
das
jno
pop
push
jo
loope
pop
iretw
outsl
lods
cmc
mov
cmc
dec
xchg
rcrb
arpl
mov
pushf
cmpb
nop
mov
mov
mov
add
in
adc
dec
gs
js
out
in
pop
js
jecxz
aad
and
fmul
out
mov
xchg
mov
push
loopne
repnz
xchg
rcr
aas
outsl
dec
pushf
std
enter
push
std
add
ficomps
nop
lea
cmp
push
push
xorl
sbb
mov
jmp
cmp
push
xchg
out
push
ret
pop
pushf
xchg
lods
or
mov
and
ret
push
xor
insl
in
sub
std
mov
fcom
push
lds
cli
push
push
lds
scas
and
sub
and
xchg
add
mov
pushf
mov
jge
jb
mov
out
movsb
jo
sbb
movsb
mov
stos
xor
jo
ds
pop
pop
test
xchg
jne
or
adc
pop
mov
test
loopne
mov
or
mov
mov
movsb
push
mov
adc
jnp
orl
ret
lea
and
xchg
add
mov
jg
pushl
ljmp
pop
ljmp
xchg
jl
inc
jno
sahf
cmp
pop
xchg
in
lock
or
push
xor
dec
fists
jne
inc
mov
cli
and
pop
ljmp
add
and
mov
fsubs
dec
sbb
scas
lock
or
in
bound
mov
vandnps
in
and
sub
sbb
aas
imul
test
enter
jecxz
jae
inc
loope
sahf
repnz
out
lret
sbb
jl
sub
jge
lock
add
xor
cli
xor
xchg
mov
addb
sbb
push
cs
fcmovnb
add
and
inc
push
pop
push
imul
jbe
fs
jg
out
mov
xchg
mov
addr16
outsl
push
and
lods
andw
sar
xor
bound
into
cmp
cld
dec
sahf
mov
cmpsl
adc
jecxz
arpl
xor
cmp
cli
cmpsl
jo
je
adc
dec
test
pop
jns
sbb
rolb
test
std
dec
shrb
and
pop
push
scas
shl
add
dec
movsb
aad
push
cmp
jnp
push
inc
pop
cmp
dec
mov
out
xchg
shrl
sub
xor
mov
mov
fcomp
mov
add
arpl
cld
lods
dec
sub
stos
mov
stos
push
mov
addr16
mov
add
sub
js
lods
stos
jge
popf
les
icebp
cmpsl
scas
mov
jne
add
cmp
add
mov
and
decb
ret
xlat
cmp
pop
sbb
adc
or
adc
and
and
aas
mov
bound
push
aam
push
mov
icebp
shlb
shl
jp
push
xchg
mov
shll
fcomps
jg
outsb
lret
inc
push
push
fadd
rol
data16
jns
cld
inc
jae
jns
and
js
bound
mov
sbb
mov
lret
daa
insb
push
cmpsl
iret
cmp
scas
sbbl
popa
cmp
mov
pop
lcall
add
sbb
jne
bound
int3
outsb
jl
stos
dec
dec
mov
add
dec
xor
insb
nop
dec
inc
stos
jno
pop
mov
push
stc
fidivs
scas
dec
dec
mov
jns
int
gs
test
pop
gs
aas
xchg
inc
enter
add
sarb
add
inc
ss
pop
push
pop
sbbb
std
or
test
sub
scas
sub
jecxz
popa
adc
call
fcmove
mov
fistps
sbb
mov
cli
add
lods
loope
pusha
rclb
cmp
push
mov
xchg
ja
cltd
cmp
dec
hlt
xchg
xchg
pop
shll
pop
dec
lret
popa
xchg
mov
cwtl
inc
sub
sti
fdivs
hlt
popa
into
lods
outsb
jb
test
adc
frstor
xchg
mov
dec
es
add
lret
fisubs
pop
aam
sub
xor
mov
mov
std
flds
push
dec
adc
jmp
es
enter
dec
mov
mov
pop
cmp
repnz
xchg
dec
cmpsl
sbb
popa
adc
mov
call
test
mov
jge
xchg
lods
stos
outsb
xor
mov
aas
daa
test
dec
imul
enter
roll
divb
lret
fcmovne
inc
mov
sarb
out
loop
jmp
xchg
cwtl
cmpsl
cwtl
movsl
mov
add
add
lret
adc
xor
jnp
loop
out
mov
lock
daa
add
cld
and
sarl
xchg
ret
hlt
sub
push
int
pop
in
sbb
cmp
std
mov
sti
push
lea
enter
popa
and
int3
aam
mov
adc
loopne
cli
aam
inc
pop
cld
xchg
mov
fbld
xlat
mov
ret
fdivs
sub
pop
pushf
rcll
pop
int3
jnp
test
cs
mov
imul
mov
aam
pushf
pop
outsl
and
add
jle
hlt
iret
mov
fwait
negl
adc
or
test
sbb
lcall
hlt
pop
call
outsl
sub
icebp
aam
fldenv
push
adc
push
pop
fisubs
mov
aad
cld
or
dec
arpl
adc
cmpsl
sbb
mov
cmp
mov
out
aaa
mul
push
arpl
lcall
in
jl
add
adc
push
movsb
mov
mov
mov
lock
repnz
mov
sub
jg
fldl
sbbl
dec
dec
xchg
xchg
add
lds
dec
pop
jae
cmpsb
mov
lods
mov
mov
or
inc
dec
mov
fstps
adc
inc
sub
jmp
stc
mov
ja
sarb
lds
loopne
testb
or
fists
push
outsb
gs
push
mov
aam
dec
fstpl
aas
test
cmp
push
scas
fsubrl
dec
sub
jns
jns
mov
popf
ds
xlat
repnz
rclb
mov
iret
das
jns
xor
popf
jo
add
or
cmp
jle
xorl
movsb
stos
sbb
jecxz
sbb
ds
or
stc
outsb
jg
cs
push
ficoms
cmc
push
push
push
push
in
repz
dec
outsb
push
aam
adc
or
cwtl
and
mov
push
loop
mov
or
sti
xor
mov
xor
insl
pop
jge
lds
outsb
stc
idiv
cmpsl
out
sbb
and
adc
jnp
shl
outsb
push
xchg
push
inc
add
mov
mov
or
or
popa
add
faddl
xor
or
notb
push
adc
push
push
movsb
loop
and
push
in
mov
popa
out
inc
mov
cmp
jl
addl
cmp
fwait
loop
or
push
mov
mov
das
test
inc
inc
adc
cmp
pop
inc
arpl
jae
scas
push
sti
cmp
stos
and
jle
lods
push
xor
imul
addb
fildl
mov
addl
jbe
xchg
arpl
lcall
dec
pushf
popf
setge
daa
xchg
dec
and
int3
mov
iret
xlat
cltd
jmp
ss
jg
adc
cmp
or
in
lahf
test
mov
fistpl
icebp
in
and
mov
add
cs
push
imul
sbb
mov
fisubrs
mov
in
pushf
loopne
dec
out
cs
imul
add
stos
int3
add
jbe
mov
rcrb
sbb
fdivl
movsl
jns
jo
test
imul
mov
out
bound
and
adc
aas
int
int3
out
ret
cwtl
or
mov
clc
xor
push
inc
cmpsb
xlat
cmp
push
mov
cmc
out
dec
aam
mov
mov
mov
icebp
push
inc
test
sahf
xchg
nop
movsl
mov
jp
cli
add
mov
insb
push
test
cmp
sub
sbb
cmpsl
dec
ficompl
xchg
sbb
rolb
cmp
clc
test
mov
push
mov
mov
je
xchg
xchg
fsubrl
mov
adc
je
xchg
das
mov
int3
push
stc
dec
bound
les
lock
or
xor
mov
mov
push
into
inc
lods
and
insl
and
ret
push
inc
stc
stc
test
xchg
mov
dec
pop
inc
add
inc
mov
daa
aam
xor
inc
rcrl
xor
pop
loopne
int
mov
std
fistl
cmp
and
pop
mov
jne
fsts
mov
negb
sbb
push
add
jl
sahf
loopne
pop
cmp
lahf
repnz
aad
lcall
pusha
pop
push
xor
ja
xor
mov
cmpsb
inc
out
sbb
jo
inc
or
shrb
outsb
sbb
or
shlb
popf
mov
push
frstor
leave
push
inc
test
mov
xchg
xlat
or
push
xchg
sahf
mov
jnp
out
and
movsl
rcrl
lea
cmp
mov
vmwrite
int
arpl
loope
add
inc
es
lods
imul
or
push
data16
hlt
fmull
jb
jo
bnd
add
pusha
lds
roll
mov
ja
iret
es
pop
cmp
cmpxchg
in
jmp
push
test
loopne
mov
mov
push
test
inc
sbb
cmp
notb
test
mov
jnp
out
or
inc
add
sub
fsubs
cmpl
or
add
sub
or
arpl
loop
sbb
add
cs
mov
mov
lret
lods
sub
aad
pop
sqrtps
ss
cs
jmp
stos
or
or
scas
mov
es
outsl
push
out
inc
push
mov
stos
mov
gs
mov
popl
mov
clc
push
pusha
out
cmc
pop
sti
xchg
jb
inc
adc
jo
loopne
mov
and
dec
ret
mov
or
lcall
jp
cmp
cmp
dec
or
inc
subl
shll
fcmovb
fisubrs
add
jne
fiaddl
mov
cmp
icebp
je
xchg
and
das
pushf
lahf
pop
jnp
dec
inc
lds
es
mov
je
or
sti
push
test
or
sub
out
jae
out
mov
xor
imul
shrb
ds
aaa
push
cwtl
jle
out
mov
push
pop
mov
lret
mov
fisttpll
push
mov
mov
lods
jg
jbe
idivl
jae
cmp
jmp
int3
pop
repz
add
shl
jbe
jmp
dec
and
and
or
sahf
ja
rcrb
xchg
test
cmp
mov
das
inc
iret
out
aam
ret
dec
jp
mov
stc
xor
xchg
inc
mov
out
scas
jnp
paddq
lret
ret
xor
adc
push
sbb
mov
sbb
rorb
pushf
adc
in
xchg
cld
xor
lods
pop
movsb
insl
cli
pop
cmp
pop
imul
mov
adc
jns
xchg
in
lcall
inc
mov
sbb
repnz
ret
lret
xchg
pop
sub
dec
ret
sub
adc
dec
lret
xchg
or
jbe
push
jecxz
pop
pop
insb
enter
js
and
int
ja
shlb
icebp
or
jnp
movsb
rolb
repz
xor
jnp
lcall
std
jbe
push
fstl
pop
adc
mov
in
mov
jbe
in
push
in
dec
cmc
fcoms
lea
sbb
pop
lcall
push
fnsave
push
mov
mov
sbb
das
ljmp
imul
xchg
pop
in
fbstp
mov
je
cld
xor
sbb
outsb
push
jbe
or
adc
push
sub
arpl
rorl
sub
lods
xor
divb
xchg
nop
adcl
arpl
and
test
xor
pop
sti
fldt
adc
xchg
jne
ret
jb
insl
es
xor
adc
push
cmpsl
fidivrl
mov
mov
cmp
fistps
cltd
push
repz
push
xchg
lcall
int3
dec
loop
mov
hlt
cmp
out
push
inc
inc
add
or
popa
int
je
adc
xchg
andps
xchg
jg
mov
pop
das
arpl
sbb
loop
loopne
push
repz
pop
js
or
test
xor
adc
cmpsl
mov
jo
lea
jns
jmp
sbb
orb
dec
push
mov
jp
add
in
arpl
movsb
cmpsb
sbb
mov
js
push
pushf
dec
fs
loopne
sub
fwait
daa
mov
mull
ds
jnp
fwait
dec
bound
es
jns
sbb
aad
inc
addr16
fcomip
cmp
inc
insl
jle,pt
mov
leave
sahf
out
sub
aad
jnp
hlt
enter
xor
iret
lods
gs
js
ljmp
mov
addr16
icebp
sub
cmpsl
jl
push
es
dec
repnz
inc
sub
pop
outsb
lock
xor
mov
test
jo
ret
xchg
addl
lret
es
roll
mov
stc
pop
or
sti
mov
sahf
xor
or
in
in
fs
push
shll
add
and
leave
sbb
fwait
inc
sub
inc
hlt
push
xor
sub
jecxz
fwait
aad
test
xchg
dec
push
shr
cmpsb
xlat
cltd
mov
xchg
sbb
adc
pusha
adc
cld
xchg
sub
pop
dec
cwtl
jl
adc
push
inc
fwait
cld
pushf
fimull
mov
aaa
sbb
pop
insb
xchg
cld
outsb
sti
les
and
movsb
mov
pop
xchg
imul
push
jl
and
cmpsl
sbb
sub
js
repnz
sbb
push
mov
push
je
sbbb
mov
ja
mov
leave
pop
gs
jne
fstpt
xchg
jp
jmp
rcl
cltd
or
cmp
mov
pop
inc
das
xor
call
push
mov
imul
into
xor
outsl
pop
iret
out
mov
or
popl
ss
inc
mov
mov
cmp
ret
add
scas
pop
jno
sbb
pop
ds
rclb
sub
nop
insl
push
call
bnd
mov
movsl
push
repnz
iret
jmp
jnp
mov
dec
cmp
push
and
pop
outsb
out
or
outsb
shlb
sub
in
sub
mov
stos
aas
push
data16
xchg
xchg
push
pusha
jg
inc
popf
mov
pop
jb
add
sub
xchg
adc
pusha
ret
mov
xchg
xor
add
gs
inc
dec
into
xchg
adc
testb
xor
jg
mov
inc
inc
in
and
add
adcl
shr
stc
mov
or
jne
xchg
jne
nop
nop
das
xchg
bound
lods
adc
lods
mov
mov
sbb
addr16
gs
mov
das
inc
cli
dec
sahf
xlat
lods
imul
lods
adc
push
jnp
arpl
fsubrl
or
and
mov
movsb
std
mov
jle
push
sbb
ljmp
xchg
in
mov
mov
jbe
adc
decl
ss
and
xchg
call
and
fwait
fs
dec
xor
xchg
into
xor
addr16
shll
clc
stos
xorl
dec
push
fnstcw
ja
or
jle
jle
fwait
dec
hlt
fdivrs
adcb
loopne
cmp
cmc
aaa
mov
paddsw
and
cld
and
ror
adc
arpl
enter
lret
test
pushf
repz
and
faddl
out
sbb
jl
bound
sbb
sahf
in
scas
sbb
add
test
int
std
mov
dec
sub
pop
push
push
call
sbb
inc
popf
xchg
push
mov
push
int
jne
xchg
mov
out
mov
test
jae
dec
js
xchg
jp
daa
mov
mov
in
xchg
lods
addr16
notb
pop
or
or
shll
add
xchg
dec
shll
or
add
xor
xor
xchg
pop
pop
lahf
stos
imul
xlat
popf
mov
inc
jb
add
out
mov
push
sahf
daa
lods
clc
subb
into
dec
mov
or
mov
into
inc
push
daa
mov
inc
push
jae
shr
cltd
mov
xor
inc
ret
pop
xchg
pop
adc
inc
pop
xchg
pop
movsb
ret
in
sbb
lods
mov
ret
add
ss
cwtl
in
pop
cltd
outsb
push
ljmp
je
enter
sub
andb
les
jmp
jo
imul
scas
out
adc
jbe
test
jle
jbe
test
stc
pop
arpl
ljmp
out
cmp
movsl
inc
lret
sbb
jmp
insb
jecxz
mov
jbe
fldt
and
mov
mov
push
cmp
mov
cli
js
adc
inc
data16
rcrl
mov
scas
xchg
mov
push
inc
xchg
daa
add
mov
xchg
lods
cmp
bound
inc
imul
ljmp
mov
jnp
sti
stc
jge
cmp
cmc
addr16
bnd
outsl
sarb
repnz
lock
cwtl
push
arpl
jbe
jmp
call
sub
imul
or
and
das
mov
sbb
stos
and
inc
fs
lea
in
cmp
or
inc
pop
jecxz
scas
repz
cmp
js
jge
dec
sti
jp
xlat
xor
and
and
popa
stos
push
imul
gs
outsb
call
lahf
and
pop
cmp
jmp
sbb
rorb
repnz
dec
cmp
cmp
iret
dec
xchg
jbe
lea
inc
imul
or
lret
jne
addl
cmp
sub
jle
cltd
push
mov
add
cli
fistps
mov
lret
jae
loop
icebp
imul
fdivs
sbb
jns
pop
and
test
test
cmp
push
hlt
mov
dec
jl
xchg
pop
lea
mov
push
pop
pusha
dec
stc
shlb
testb
sub
xchg
test
arpl
imul
lahf
imul
push
jmp
xor
loope
rol
jmp
sub
repz
xor
ss
aam
movsl
push
cltd
pop
jo
mov
pop
cld
cmpsb
fidivl
scas
xchg
jb
adc
jp
addr16
push
adc
call
stc
mov
and
mov
pop
loopne
push
out
sub
lret
sbb
xchg
inc
and
scas
test
not
jo
rcr
push
pop
movsb
addb
in
pop
dec
in
jg
loope
adc
incl
call
ljmp
inc
js
loop
cmpsl
pop
adc
lahf
pop
sbbb
repnz
jle
les
sti
push
int
mov
clc
jg
ss
mov
test
lods
in
xchg
aas
mov
push
mov
dec
adc
cs
fs
mov
sbb
pop
into
sbb
int3
xchg
gs
repz
shrb
cmp
and
mov
sub
xchg
loope
xorb
test
pushf
popl
mov
dec
mov
xor
cmp
subb
dec
fidivrl
in
stos
lret
mov
popf
in
inc
jmp
ret
lods
jo
bound
in
lret
out
or
lds
cmp
cwtl
pop
fstpl
pop
aad
jp
rorl
into
sub
mov
cs
imul
xchg
movsl
fidivl
and
fnsave
or
push
out
idivb
mov
test
dec
notb
dec
pcmpeqb
mov
sub
mov
scas
jne
sar
pop
cmp
arpl
cmpsb
fidivrs
call
cli
jge
out
add
lea
add
jne
jl
or
lret
push
adc
andb
mov
mov
adc
mov
lea
jae
rclb
adc
sarl
js
rol
std
fs
jbe
repnz
fistl
in
and
jg
add
mov
jle
je
add
xor
aad
notb
pop
sbb
shll
cmp
out
in
or
cmp
jnp
mov
das
push
add
mov
mov
pop
mull
sub
repnz
sbb
fmull
push
xor
sahf
cmp
sbbl
inc
add
xchg
pop
js
mov
in
mov
dec
dec
flds
aaa
sbb
mov
and
gs
mov
sbb
scas
sub
test
stc
sbb
sub
imul
sahf
adc
dec
int
stos
push
ljmp
adc
pop
psrlq
gs
sub
ret
inc
and
sub
push
ja
decb
adc
push
dec
adc
aad
testb
cmp
mov
jne
adc
xchg
xchg
mov
mov
and
and
scas
sub
test
test
xor
pusha
enter
fsubs
pop
mov
aaa
in
imul
and
imul
jmp
hlt
lret
sahf
inc
and
je
int
bound
scas
jno
or
addr16
scas
scas
pop
mov
movsb
sub
jp
xchg
or
inc
sbb
daa
adc
jne
mov
or
push
hlt
cmc
sti
int3
mov
and
dec
cli
fdivl
dec
outsl
and
push
movsl
jno
in
aam
out
lods
xor
adc
xchg
mov
or
xor
mov
or
in
inc
inc
ljmp
ret
flds
sti
xlat
test
mov
mov
cmp
call
sub
aaa
cwtl
jecxz
lock
daa
inc
push
lods
arpl
cltd
mov
out
andl
ljmp
pop
jmp
ja
lret
xor
in
int3
lret
icebp
cltd
int
jnp
inc
js
stos
push
jle
ret
stc
cwtl
xchg
lock
xlat
aaa
jge
mov
and
and
xlat
jae
test
testl
xchg
orl
sbb
xchg
sahf
sbb
iret
popa
leave
and
das
xchg
int
add
push
not
in
test
push
mov
dec
fistps
push
in
xlat
dec
xchg
add
stc
jle
xrelease
dec
out
add
icebp
lea
push
jb
shrb
jb
sub
cmpsl
mov
mov
ja
movsl
nop
in
add
and
xchg
mov
popa
pop
add
repz
fmull
and
flds
ret
jo
jge
adc
mov
inc
xlat
cmp
loope
sbb
lcall
mov
add
aas
bnd
js,pt
pop
cmovae
or
jb
xlat
outsl
loope
stos
sbb
adc
int3
sbb
js
mov
mov
inc
jne
xchg
mov
cld
lods
mov
xor
cs
xor
hlt
popa
mov
sub
jg
xlat
icebp
leave
out
inc
pop
cmp
cmpsl
push
repz
adc
dec
cltd
mov
adc
cltd
pop
stos
or
cltd
rorb
mov
xor
pop
or
sbb
cmp
xchg
xlat
xchg
adc
daa
sbb
xchg
cwtl
jecxz
jge
cmpsb
sbb
les
add
repz
leave
jne
js
ja
mov
data16
inc
inc
les
pop
push
cs
sbb
pop
inc
inc
cmp
aad
pop
mov
hlt
adc
fmull
andb
stos
bound
lahf
shlb
xor
mov
adc
mov
xchg
mov
jae
cmc
bound
scas
icebp
fsubrl
testb
or
push
mov
jo
adc
cmpsb
adc
xor
cmp
repz
ljmp
enter
int
inc
addr16
or
jl
pushf
sbb
adc
mov
incb
mov
and
clc
cmp
mov
rcll
movsb
test
xchg
or
clc
xchg
ret
iret
inc
mov
mov
repz
fdivrl
icebp
jle
jno
data16
push
push
les
mov
push
add
fimull
dec
es
lahf
pop
mov
cmc
cld
aas
enter
adc
ds
inc
xchg
push
mov
inc
pop
roll
push
cmp
loop
pop
sbb
inc
rcrb
mov
das
inc
push
cs
aas
in
out
pop
push
xchg
decb
xchg
out
inc
or
mov
loopne
test
fists
or
add
les
lods
stos
mov
push
leave
push
out
into
leave
pop
sbb
pop
dec
xchg
mov
xchg
cmp
push
pop
pop
adc
imul
incb
cs
test
lods
push
fidivl
lods
shr
mov
inc
cwtl
pop
ret
or
test
mov
cmp
incl
sbb
xor
movsl
stos
ja
mov
jmp
fidivs
xor
shlb
jmp
pusha
cmp
mov
test
ret
jae
adc
repnz
mov
xor
das
decb
hlt
inc
sbb
mov
add
cmp
cmc
lcall
mov
mov
in
orb
cmp
mov
xchg
popf
shrb
pop
mov
or
mov
inc
fnstenv
cli
aad
jae
test
loope
jb
out
xor
pop
mov
pop
push
mov
in
shll
sub
sub
rcrl
shlb
icebp
std
sbb
pop
mov
and
popa
jg
in
mov
je
ss
js
out
mov
adc
pop
jbe
cli
stos
jge
push
loope
cmpsb
fldpi
imul
mov
and
inc
movnti
inc
mov
mov
inc
iret
lcall
and
ljmp
stos
aad
test
testl
mov
pushf
and
hlt
mov
cmp
mov
add
or
sbb
out
in
xchg
add
xor
cmp
repz
rcll
in
popa
imul
fdiv
pop
and
push
mov
call
push
filds
pop
xchg
sbb
loop
add
lock
into
clc
outsb
popf
sete
xor
mov
mov
xchg
imul
pop
ret
jmp
outsb
aam
sub
stos
pop
popf
xor
in
push
xchg
repnz
inc
les
sub
add
hlt
dec
mov
sbb
and
mov
cmc
addr16
mov
mov
loope
jle
pop
cld
mov
jo
pop
out
mov
mov
popa
out
ret
sbb
xchg
aad
mov
add
adc
ds
inc
pusha
sbb
pop
nop
cwtl
inc
icebp
nop
dec
mov
insb
mov
lods
mov
or
cli
jno
pop
inc
popf
push
pop
jno
hlt
jl
cmp
ror
nop
and
sub
push
std
sbb
mov
aas
sub
mov
push
inc
xchg
jb
mov
fiadds
test
or
jge
scas
lods
add
loopne
call
das
push
filds
cs
sub
fsubrl
dec
jmp
into
mov
inc
scas
fidivl
dec
push
insl
mov
mov
dec
push
idivl
mov
adc
loope
sbb
cmp
jbe
daa
pop
repnz
sbb
push
jne
fdivl
add
xor
dec
adc
jno
loope
jle
fsubs
jp
leave
ret
inc
jmp
lock
xor
jnp
enter
and
scas
out
pop
out
jae
push
add
push
shrb
mov
out
ja
subl
mov
sbb
sub
cmp
pop
or
test
or
lcall
in
or
cmpsl
mov
in
fs
mov
or
out
adc
flds
jl
cmc
lahf
repz
das
push
mov
push
mov
sbbb
add
adc
pop
ljmp
mov
loopne
cli
inc
dec
adc
insl
jno
xchg
lcall
mov
cli
mov
xor
das
pusha
adc
test
or
call
jecxz
in
add
aam
sub
nop
mov
mov
xchg
pushf
push
dec
repz
out
add
adc
cltd
mov
insl
lahf
fildll
jo
ret
fs
ljmp
insl
xor
mov
out
inc
hlt
call
leave
cli
sbb
clc
divl
aaa
jge
jns
scas
mov
icebp
mov
sub
arpl
jle
cmp
inc
add
add
push
imul
inc
scas
pusha
cmc
mov
aaa
mov
mov
dec
call
jo
aad
jbe
out
loope
cwtl
in
inc
cli
jmp
pusha
shr
lret
dec
xchg
add
push
sub
shll
movsb
push
ret
ficoml
dec
fdiv
leave
add
xchg
sub
push
insl
mov
icebp
shlb
sub
mov
rcll
push
lock
push
cmpsb
das
and
aad
sbb
pop
inc
xchg
mov
repnz
xor
mov
out
or
popa
pop
jb
sub
fdivrs
xor
fiaddl
sbb
fdivr
out
outsb
sti
test
jg
addr16
sbb
xor
pop
out
psubw
rol
dec
mov
or
sub
ja
mov
push
mov
add
and
mov
mov
xchg
adc
push
inc
in
stc
xchg
loop
mov
lcall
cld
jp
and
shlb
ficomps
adc
cmp
das
or
in
xor
fcompl
notb
jmp
shrl
pop
mov
or
pushl
push
adc
and
add
sub
addl
cmp
xchg
mov
mov
daa
out
movsb
pop
inc
dec
lcall
push
addr16
cli
loope
adcb
nop
mov
std
dec
push
test
or
fsubrl
bound
rorb
or
and
dec
and
jo
adc
push
inc
cmp
push
loopne
enter
out
rolb
pop
push
sub
cmp
shl
lcall
sbb
add
insl
xor
push
cmp
mov
add
and
and
or
push
push
loopne
xchg
clc
jb
cmc
xlat
repnz
mov
mov
lea
test
sub
int
jne
inc
js
repnz
stc
mov
and
faddp
test
movsl
adc
and
jge
jle
xor
insl
sbb
repz
pop
mov
jge
addr16
cmp
dec
mov
dec
shll
popf
sti
lret
mov
inc
stos
daa
adc
sub
into
or
repz
int
jp
mov
hlt
cmp
clc
adc
sub
sub
mov
or
jne
movsl
outsb
cltd
aaa
sarl
out
inc
mov
push
in
adc
add
testl
pop
fildl
dec
shl
outsl
sub
dec
jae
xchg
outsb
cmp
aaa
sbb
inc
loop
popf
in
adc
push
mov
inc
push
aam
repz
dec
or
jae
loop
mov
push
aam
aad
xchg
data16
shr
rcrl
push
mov
xchg
pop
cmp
lret
out
lcall
cmp
test
std
mov
dec
gs
push
inc
ds
or
and
insb
iret
pop
jecxz
scas
xlat
rcl
sbbl
shrl
xor
push
cltd
sti
add
fbld
rcl
imull
lods
pusha
jg
ror
lods
push
lds
xlat
imul
out
xchg
xor
push
mov
and
in
mov
in
xor
cmp
cmp
fmuls
cmp
jne
xor
dec
sbb
dec
fists
mov
adcl
lds
cmp
push
mov
sti
fidivs
sbb
ljmp
inc
in
adc
mov
or
inc
mov
adc
das
mov
subl
stos
pop
sti
cmc
mov
gs
push
cli
sahf
mov
repnz
xchg
mov
sub
test
iret
or
dec
mov
xchg
imul
sub
adc
add
cmc
fwait
aas
and
shlb
cwtl
adc
push
neg
xchg
shll
jbe
dec
xlat
and
mov
insb
mov
leave
or
dec
lea
mov
sbb
xor
adc
test
mov
mov
sti
push
or
or
dec
ret
movb
incl
add
mov
dec
and
orb
mov
or
pop
test
outsl
jp
mov
scas
mov
sub
inc
jbe
imul
lods
dec
rcll
in
inc
lret
sub
mov
enter
lods
dec
or
xor
sub
data16
std
imul
leave
mov
cld
and
pop
insl
push
jns
insl
adc
roll
sub
jl
mov
out
cmpsl
dec
xor
adc
and
xchg
test
sub
add
cld
push
mov
push
push
dec
bound
sti
push
notl
dec
sub
mov
xor
adc
addb
pop
ljmp
add
cmpsl
lret
and
scas
out
fs
pop
jo
fstps
mov
sbb
dec
andb
dec
xchg
sbb
jge
and
mov
jb,pt
xor
jae
sarb
mov
loop
mov
jb
loopne
or
mov
enter
fdivs
add
fsubp
ja
insb
add
orps
pop
jge
fiaddl
lahf
xor
imul
xchg
dec
adc
pop
fldl
xchg
mov
inc
pop
test
xchg
xorb
inc
psubd
and
mov
adc
dec
ret
dec
outsl
mov
mov
adc
mov
scas
sub
and
push
hlt
adc
cmp
cmp
pop
mov
ljmp
mov
dec
inc
pop
gs
xor
popf
lret
in
std
fstps
scas
arpl
pop
idivl
mov
mov
xchg
jne
imul
fisttps
mov
popf
jl
es
mov
das
pusha
ret
xor
sbb
mov
sbb
call
negb
add
mov
imul
lock
andl
push
arpl
call
ficoms
adc
popf
test
add
pop
and
rcr
sti
cmp
fcmovnb
mov
test
xorl
dec
adc
mov
cmpsl
sti
les
inc
sbb
leave
sub
xchg
repz
mov
clc
mov
stc
xchg
dec
sbb
inc
xor
insl
add
dec
mov
test
xchg
mov
mov
dec
push
imul
sti
mov
push
jp
call
ret
adc
int
inc
xchg
leave
jbe
push
push
xchg
push
mov
pusha
bound
xor
dec
mov
push
xor
adc
testl
add
pop
cmp
xchg
fistl
sbbl
jno
xchg
and
mov
rolb
push
jbe
xor
subb
repnz
pop
in
subb
adc
mov
or
lods
outsl
loop
cltd
ja
pop
mov
insl
sub
jp
mov
aam
sbb
scas
or
sahf
inc
test
pop
xchg
pusha
xlat
sarl
xor
sub
dec
inc
mov
inc
cmp
jno
dec
xchg
fxch
mov
scas
out
popf
std
inc
push
mov
add
pop
das
imulb
add
sub
pop
in
mov
rcl
or
jnp
in
fldcw
pop
sub
cwtl
mov
fdivrs
add
inc
notl
adc
xor
clc
fs
push
jp
mov
jle
mov
jp
jmp
and
movsb
outsb
xor
xorb
sbb
cmp
sbb
cmc
jne
stc
in
adc
loop
lea
lret
and
sbb
movsl
mov
out
cmp
stos
push
dec
push
wrmsr
mov
lock
roll
bound
shrl
mov
aam
shlb
jp
in
push
push
dec
lea
fdivrs
dec
cmp
fisubrl
movsb
mov
or
dec
in
loopne
orb
sti
inc
jmp
jo
adc
push
sahf
dec
stc
or
jp
gs
adc
insb
push
dec
enter
enter
divl
sti
add
repz
nop
sarb
jbe
loopne
or
fstpt
pop
dec
daa
push
add
push
aam
pop
inc
adc
push
dec
cwtl
jge
das
xchg
rcl
adc
xor
or
sbb
iret
imul
in
xlat
rcll
fs
leave
pushf
push
shlb
ss
cmp
xchg
cmpsl
mov
dec
push
mov
push
xchg
add
xchg
js
inc
xor
frstor
hlt
daa
xchg
fnstenv
or
lcall
lret
test
push
std
mov
leave
sub
and
leave
mov
mov
jo
addr16
cmp
sti
mov
std
lods
and
pop
mov
scas
adc
mov
inc
xchg
xor
pop
out
shll
jns
push
or
into
mov
fcompl
mov
sti
xchg
jnp
cmp
repnz
mov
mov
enter
xchg
jmp
jl
cmp
sti
fs
decl
xchg
and
mov
sbb
cmp
cli
xor
xor
inc
cld
push
js
xchg
jle
xor
add
pop
cmp
pop
xchg
inc
xchg
movl
sbb
cltd
mov
es
stc
mov
or
xchg
ret
icebp
sbb
push
cmp
jge
lret
mov
addb
or
dec
in
sbb
adc
and
out
xorl
lret
fucom
gs
in
scas
mov
xchg
and
mov
movsb
push
rclb
push
xor
popa
pop
aas
out
pop
lcall
push
cmp
and
inc
fbstp
mov
les
push
stos
in
fisttps
and
fcoms
xlat
mov
iret
cwtl
add
jns
cmp
data16
lods
cmp
es
push
ja
push
fcompl
lods
jmp
leave
gs
jmp
mov
outsl
scas
dec
je
subl
das
adc
mov
pop
pop
clc
or
fstps
pushf
cmp
pop
jl
lods
pop
mov
xor
mov
out
pop
scas
lock
mov
fstps
lock
adc
mov
push
or
inc
adc
testb
xlat
xor
jno
mov
rcrl
jno
fisttpl
ja
cmp
dec
call
pop
iret
xor
lahf
sbb
cli
xor
inc
popf
or
ret
subl
test
js
mov
dec
pop
jae
pop
test
ret
rol
mov
adcl
adc
hlt
fnstcw
jns
out
js
out
das
add
mov
mov
popa
bswap
in
idivl
push
int3
xor
jns
cmpsl
xchg
sar
insb
jp
movsb
std
bound
fiadds
mov
out
adc
sub
ficoml
or
push
daa
xor
dec
in
or
or
lds
data16
into
jmp
xchg
push
mov
cwtl
test
or
adcl
mov
sbb
idivl
pop
cwtl
notl
sbb
add
sbbb
aad
cmp
adc
test
inc
xor
in
xchg
fnsave
jo
cmc
icebp
cmpsl
mov
jnp
loopne
scas
shrl
pop
notl
or
jne
enter
jecxz
push
jp,pt
dec
out
push
test
hlt
aaa
movl
hlt
jae
iret
sbb
dec
cmp
ss
sbb
dec
mov
bound
inc
cmc
nop
and
repz
nop
ret
or
sub
scas
jg
xchg
je
movsl
mov
shll
sub
sbb
mov
xorl
ss
out
push
std
cmc
add
nop
mov
push
and
ficoms
sbb
into
cmc
roll
xor
jle
adc
leave
movsl
push
add
sbb
sub
jne
cltd
pop
dec
mov
ss
mov
sbb
popf
lcall
sar
in
int
xchg
lcall
sub
loope
rorb
out
xor
cltd
cmp
rcr
mov
add
out
pushf
divb
das
xor
outsl
jecxz
in
mov
mov
dec
jo
jp
inc
int3
pop
lds
aaa
scas
imul
lcall
into
add
jb
fs
cmc
jb
or
int
cmp
call
scas
lea
lods
xchg
and
cli
push
sbb
daa
and
iret
out
stos
and
push
jns
daa
pop
pop
cmc
ds
xor
dec
cmp
xorl
mov
mov
js
sub
adc
sahf
imul
int
mov
jg
xor
dec
xor
mov
push
shr
sbbl
int3
decl
sub
mov
insl
call
movsb
test
iret
cmpl
rol
in
jnp
mov
xchg
xchg
add
xchg
dec
mov
inc
loope
stos
jb
push
sub
sbb
mov
or
dec
lea
andb
dec
ljmp
jbe
mov
xchg
xchg
aaa
dec
mov
icebp
loope
jnp
push
mov
faddp
xor
movsl
sbb
leave
adc
pop
fsubp
jle
mov
leave
mov
jns
lock
jg
and
adc
das
outsl
das
push
lods
sahf
insl
filds
inc
fildl
adc
cmp
ljmp
inc
popl
mov
inc
sbb
dec
and
rcll
jmp
sbb
mov
fsubrs
or
cmp
mov
movsl
jg
into
lret
lds
push
and
cwtl
and
insb
jecxz
and
push
mov
jbe
and
inc
jb
mov
jge
aas
dec
into
ss
mov
sarl
out
mov
leave
dec
dec
jbe
flds
test
mov
inc
push
int3
sub
pushf
push
dec
bound
xchg
cmp
mov
and
xchg
mov
push
mov
orl
loope
dec
lods
xchg
int
push
mov
sub
movsl
call
fisubrl
int
pop
dec
pop
into
incb
in
mov
rorl
fcmovnb
cli
rep
xchg
or
ret
pop
mov
jo
repnz
push
pop
stos
pop
test
cwtl
in
repz
xchg
ret
mov
pop
push
mov
xor
cmp
push
ds
cs
lahf
push
gs
test
lock
inc
fnstsw
scas
test
or
scas
popl
rcrb
push
inc
xlat
cltd
sti
mov
mov
faddl
imul
pop
pop
gs
cmp
mov
add
mov
sbb
adc
mov
mov
mov
dec
or
push
dec
sbb
jmp
rclb
leave
mov
lret
xchg
or
mov
int3
cmp
in
iret
xor
jb
sub
ja
dec
mov
imul
outsl
jb
sub
icebp
sub
push
dec
fisttpll
test
filds
cwtl
mov
addl
idiv
mov
inc
in
mov
pop
or
xlat
mov
or
dec
test
popf
pop
xchg
cmpb
hlt
sbb
pushf
fs
cltd
sub
dec
scas
sub
jp
arpl
insb
aas
out
cld
mov
mov
sub
adc
arpl
inc
int3
mov
imul
clc
add
sbb
mov
jmp
fwait
sti
cmp
aad
popf
cmp
cmp
push
xchg
cmp
dec
fldl
mov
out
mov
lock
mov
dec
mov
jg
push
mov
cmc
shll
add
ljmp
add
mov
pusha
inc
mov
or
or
dec
push
pushf
das
loope
and
xchg
dec
xchg
pop
out
mov
test
stc
stos
mov
sarb
insl
lcall
rorl
out
pop
loopne
or
or
adc
sbb
cmc
shll
hlt
sbb
or
notb
sub
lcall
ja
push
xchg
aad
mov
push
loop
nop
lret
lods
int3
int
jne
xlat
mov
sti
mov
cld
int
xchg
repz
cwtl
or
addl
lods
and
mov
adc
cld
or
inc
icebp
out
push
fwait
push
out
or
inc
adc
shlb
pop
cmpb
mov
cwtl
es
test
aas
push
cs
xor
dec
lock
xchg
mov
ud2
sub
xchg
sbb
daa
inc
mov
jnp
mov
mov
and
mov
and
cmp
daa
jno,pt
mov
fnstsw
and
bound
and
pop
in
lea
mov
cmp
xlat
inc
pushf
or
hlt
xor
inc
dec
inc
movsl
jno
xchg
out
push
adc
xor
lahf
adc
fdivr
xlat
adc
mov
in
cmp
loopne
sarb
and
fs
lret
inc
ljmp
jp
mov
jl
and
push
jmp
hlt
addb
and
pop
dec
clc
nop
jmp
mov
jle
inc
leave
adc
xchg
mov
xchg
out
and
inc
inc
dec
insb
and
and
pusha
pop
jne
ss
ja
dec
jbe
out
fidivrs
push
ljmp
sbb
pop
and
pop
cld
inc
fstpt
es
imul
xchg
lret
or
in
es
popf
push
inc
loop
jg
out
std
scas
push
inc
lods
rcl
cmp
fsubrs
pop
push
sahf
mov
test
filds
xor
add
imul
and
and
inc
cmp
cmp
pop
imul
cmpsb
push
movsb
xchg
dec
out
lahf
mov
or
xchg
adc
ret
push
xorl
fisubl
inc
xlat
add
data16
scas
rorb
insl
mov
data16
mov
mov
cmpsl
xchg
and
cmpsb
ss
pop
jb
stc
xchg
mov
stc
jne
xor
in
pop
or
inc
inc
aad
mov
push
and
cmp
loope
xchg
push
xor
outsl
cmpsl
push
test
jns
je
xchg
sub
mov
add
push
push
sub
mov
xchg
iret
xchg
ljmp
icebp
out
in
mov
loopne
outsb
fucomi
daa
sub
xor
cmp
dec
cmp
test
inc
rep
jae
or
cld
mov
les
imul
jle
je
clc
pop
jecxz
mov
in
push
arpl
adc
jno
and
rcll
jl
loop
jno
jmp
enter
xchg
cs
ljmp
pusha
aad
jl
sbb
mov
cmc
mov
add
xchg
sub
adc
fdivrl
and
pop
jmp
dec
mov
pop
or
hlt
negb
sbb
push
loop
aad
push
jo
jns
sbb
mov
ss
mov
inc
jb
xor
cld
lds
fsubl
and
frstor
aas
out
aaa
shrb
in
fstpl
xchg
sbb
addb
sbb
out
or
inc
mov
push
mov
mov
lret
lds
sbb
sti
std
push
lea
cmp
sub
cmp
push
fidivs
je
scas
js
es
mov
shr
cmc
loope
or
adc
mov
lret
es
pop
jg
insb
push
cld
xchg
loope
rclb
jge
sbb
outsl
push
outsl
aad
loope
shrw
addb
rclb
popa
cmp
xor
imul
dec
cmpsb
loop
lea
dec
mov
cld
push
mov
pop
inc
mov
cmpsl
imul
das
movsb
in
hlt
or
or
add
out
dec
rcrb
pop
lea
sub
movsl
ljmp
fsts
cmc
das
fmuls
dec
imul
jl
add
mov
loop
fwait
mov
add
fmul
vlddqu
mov
mov
pop
mov
mov
xchg
dec
fnstcw
ds
popa
xlat
mov
xchg
repz
icebp
out
cmp
and
jns
std
loopne
inc
insb
push
iret
inc
lahf
insb
in
or
je
fcoms
mov
push
or
in
sbb
mov
xchg
andb
inc
jg
inc
rcll
mov
xchg
dec
movsb
ja
sti
mov
scas
jp
adc
ret
inc
mov
fcomps
jmp
mov
xchg
out
imul
push
push
xchg
shlb
xchg
outsb
imul
jo
test
add
sbb
xchg
add
jg
shl
xor
ds
mov
sbb
push
ret
enter
cmp
and
mov
fimuls
jp
fcmove
pushf
add
mov
neg
pop
mov
mov
cltd
sbb
mov
push
les
and
idivb
fisttpll
scas
pop
mov
dec
sbb
jnp
cmp
ljmp
pop
sub
cmp
push
mov
inc
in
xchg
sub
adc
insb
dec
sti
inc
jo
ljmp
and
mov
or
imul
ss
xchg
mov
dec
add
rolb
push
jne
repnz
daa
jbe
add
bound
pop
hlt
pushf
lods
adc
cwtl
in
dec
bnd
xchg
std
or
push
lock
int
int
repz
lret
mov
sub
or
push
es
jbe
fstpt
xor
adc
cli
cmp
sbb
or
dec
inc
test
lcall
xchg
mov
ljmp
imul
push
sbb
lods
sbb
mov
insb
inc
jae
pusha
jo
jno
sub
push
sub
jne
ret
add
add
and
cmp
mov
add
lcall
sahf
ret
jae
imul
mov
push
jg
out
jb
test
subl
jp
fstl
push
pop
lods
add
mov
cmc
inc
loopne
sub
pop
mov
sub
mov
or
push
leave
sbb
js
fistl
out
cmp
sub
inc
faddp
adc
mov
inc
dec
inc
leave
out
add
mov
hlt
push
test
loope
test
xchg
xchg
clc
push
add
xor
fldenv
jno
in
xchg
inc
mov
pop
sbb
jno
lahf
and
mov
inc
ret
inc
mov
loop
jl
std
pop
sarl
jne
sbb
sbb
sub
sub
addb
sub
mov
xchg
stos
clc
int
cmp
inc
mov
fisttpl
add
adcb
inc
xor
jbe
dec
test
int
or
cmp
or
jbe
into
lcall
ja
int3
lea
pop
mov
xchg
clc
mov
popa
push
repnz
inc
movsb
add
and
shrl
push
pop
xchg
cld
aad
cltd
jge
sub
jb
mov
stos
scas
mov
xchg
sar
or
jb
sub
push
and
mov
dec
or
imul
int3
scas
add
ret
push
js
mov
sti
cli
testb
cmp
test
or
cmp
pop
sub
or
pop
mov
or
popl
xchg
cmp
adc
push
shll
loop
fwait
mov
mov
sub
popf
sub
addr16
aaa
in
mov
mov
lea
out
xor
cmp
jl
pop
rcll
xchg
mov
roll
jle
dec
out
rorl
ficompl
insb
insb
orb
fcompl
nop
pop
cld
mov
enter
xchg
insb
fsubr
in
mov
dec
clc
orb
aam
cmp
pop
mov
fisubrl
js
xor
imul
rcll
mov
insl
sub
int
nop
add
addr16
and
test
dec
mov
daa
adc
js
jge
xchg
adc
aas
adc
out
xor
dec
inc
mov
cs
lahf
cmpsl
mov
std
xchg
imul
aam
aam
pop
sar
stos
cmp
fsts
add
cmp
jne
or
pop
cs
nop
mov
in
inc
pop
ret
pop
mov
inc
cs
mov
pushf
loope
xor
jp
pop
jl
push
divl
inc
bt
outsl
xor
call
ds
sub
sti
cmp
cmp
sbb
mov
push
les
cld
es
mov
pandn
inc
out
lock
xchg
xchg
adc
enter
ret
inc
repnz
dec
clc
outsl
mov
mov
xor
jle
mov
xlat
cs
or
adc
push
movsb
sbb
mov
adc
orb
cwtl
jge
div
or
push
mov
push
sbb
stc
cs
shll
mov
jp
xchg
sar
sub
lock
mov
sbb
mov
cli
rcrl
push
out
add
or
pop
fwait
outsb
outsb
enter
mov
xchg
addb
stos
xlat
push
inc
scas
mov
mov
sbb
mov
loope
shl
insb
sbbl
dec
and
add
jp
mov
cmp
dec
jo
into
loope
in
fdivr
inc
mov
sub
shrb
test
outsb
xor
loopne
repz
xchg
clc
xchg
pop
loopne
and
push
dec
lahf
addl
mov
fcoms
popa
inc
jae
pop
mov
xor
loope
aad
or
jne
mov
xchg
outsb
popa
mov
xchg
ss
xor
fwait
or
pushf
push
mov
aam
stc
aas
xchg
call
and
adc
jo
xlat
rorl
xchg
adc
pop
fisubrs
xchg
xchg
daa
idivb
sbb
jge
nop
fnstenv
stos
mov
xchg
push
ficompl
push
mov
sbb
sub
sub
lcall
movsb
lret
cli
pop
fnstsw
mull
cmpsl
or
dec
xorl
sub
stos
mov
xor
sub
inc
xchg
cmp
outsb
mov
data16
dec
sti
dec
lds
scas
fldl
push
and
sbb
sub
js
mov
call
adc
arpl
cmp
rcll
es
mov
add
xchg
filds
gs
pop
lock
jns
test
int
gs
cld
and
mov
and
js
icebp
mov
nop
sar
push
stos
rcll
mov
xor
shlb
pop
dec
jge
outsl
shrb
leave
lcall
adc
add
fimull
push
pop
addb
data16
cmp
push
loopne
jb
leave
inc
scas
loope
cmp
ss
jae
ja
push
and
xchg
or
mov
lahf
adc
add
push
jmp
mov
inc
aad
lahf
cs
je
xor
int3
mov
jge
inc
push
int
arpl
jns
jbe
or
loop
mov
jle
push
out
insb
mov
repnz
btr
scas
rep
mov
push
fistps
and
loopne
mov
dec
cmp
push
iret
test
xor
testl
rorb
xchg
lea
fucom
push
push
leave
mov
xor
std
mov
adc
dec
cli
insb
cltd
inc
push
adcl
insl
mov
mov
and
pop
dec
dec
test
sbb
dec
add
popf
push
mov
push
icebp
and
out
test
rcll
sbb
into
xchg
call
sbb
dec
gs
xchg
mov
and
inc
shll
pushf
inc
xor
fidivrs
push
ljmp
mov
iret
adc
lret
fwait
cmp
dec
push
fs
inc
aaa
mov
ret
ljmp
push
sbb
add
pusha
in
add
xlat
push
push
test
je
mov
mov
pop
addl
xor
jnp
adc
lea
aas
cwtl
jno
ss
mov
arpl
push
dec
inc
es
push
jns
push
pop
icebp
cmpsb
popa
fsubl
mov
jp
mov
in
push
dec
mov
jno
adc
xor
cmp
int
fcmovne
and
pop
iret
in
add
jns
sub
xor
ja
mov
insb
int
mov
in
jb
xor
inc
and
pop
popa
push
jo
pop
mov
test
loopne
insb
mov
cld
mov
movsl
xchg
loope
iret
les
mov
ds
sbb
in
shlb
cmp
push
lds
jg
stos
adc
rorl
fxch
inc
push
ja
mov
fisubrl
cmp
movsb
inc
jl
or
jmp
pusha
mov
or
or
mov
aad
imul
inc
sbb
sti
loopne
repz
imul
arpl
loopne
mov
jo
add
or
aam
in
sub
mov
push
inc
push
sbb
dec
bound
sti
jns
push
and
pop
jmp
das
js
bound
mov
and
jecxz
outsl
icebp
cmp
xor
daa
fistps
xchg
shll
fisubrs
lcall
xor
cltd
mov
push
xor
push
cmpsb
xor
repnz
push
inc
andb
sbb
pop
sub
add
jb
jne
loopne
sbb
sub
gs
sbbb
popf
jno
arpl
mov
je
out
mov
and
rcrl
cmpsl
cmp
daa
push
cmpsl
xchg
ret
xchg
fnstsw
inc
mov
sub
xchg
dec
pop
push
adc
shr
push
stc
xchg
imul
jg
fisttps
std
scas
push
rcrl
mov
sub
das
sub
lret
stos
lea
add
into
jns
nop
jbe,pn
fs
ljmp
mov
jo
jbe
mov
fcomps
ret
lret
into
arpl
fstl
push
push
add
lcall
or
mov
ljmp
push
cmp
pop
imul
bound
shrb
mov
ret
jnp
les
mov
or
dec
jmp
push
insb
push
sub
push
test
inc
add
add
pusha
add
mov
mov
popa
push
jbe
mov
mov
mov
in
mov
aam
int3
dec
mov
jle
xchg
xorb
repnz
cmc
fldenv
xor
lds
negb
cmp
or
inc
icebp
dec
push
stos
pop
xchg
adc
and
pop
push
shll
iret
into
sarl
mov
outsl
dec
int
xor
cli
das
mov
cmc
push
ret
insb
aad
or
repz
and
fisubs
cmc
sbb
scas
dec
xchg
test
pushl
in
cwtl
xchg
repnz
jge
dec
push
sbb
lea
scas
dec
int
inc
fistl
jl
sub
adc
cld
xor
pop
sahf
out
pop
xor
mov
rcrb
lret
repz
add
sbb
andb
sbbb
ljmp
xlat
jmp
push
mov
jp
and
testb
and
cmp
loop
sbb
pop
fsts
or
fs
gs
adcb
ret
xlat
incl
push
ja
lret
jecxz
stos
mov
iret
int
js
mov
ret
mov
add
stos
xchg
aas
or
add
adc
insl
inc
cmc
aad
dec
out
inc
negb
lods
dec
inc
adcl
in
popf
test
add
mov
sub
repnz
cli
fcmovb
lods
mov
adc
lahf
xor
and
cmpl
cltd
add
loope
std
cmp
cmpsb
fistpll
enter
ret
push
outsl
clc
dec
cmp
or
mov
fisubrl
out
movsl
jbe
or
popa
and
sbb
lea
inc
mov
adc
jmp
dec
pop
mov
outsb
xchg
pop
cld
xor
sbb
dec
cwtl
mov
stos
cmp
test
mov
sbb
stc
push
push
adc
int3
cmp
ja
lcall
cwtl
out
inc
sahf
int3
xchg
adc
scas
push
pop
pop
fadds
sub
sbb
mov
ror
jne
mov
and
lret
icebp
adc
jmp
xchg
and
js
pusha
sub
sti
cmpsb
pop
mov
insb
push
call
cmc
push
incb
ljmp
adc
mov
mov
pushf
stc
es
push
cmp
pop
movl
ret
std
or
sbb
or
push
lock
mov
xchg
lds
and
movsb
js
out
sbb
pushf
add
mov
add
mov
cmpsl
push
jp
fldenv
or
out
jge
mov
popa
stos
enter
xchg
lcall
pop
add
adc
xchg
mov
mov
jl
flds
mov
pop
pop
and
jl
jg
push
mov
jmp
fs
mov
loope
jmp
sub
repnz
arpl
lret
jmp
or
jmp
mov
psubd
fstpl
xor
jns
lds
add
test
sbb
push
and
sarb
nop
mov
jns
adcl
hlt
sarb
ret
xchg
jg
and
out
cmp
fisttpll
mov
rclb
mov
and
stos
lcall
cmp
sbb
loope
repnz
jg
mov
arpl
rclb
shl
push
mov
fmuls
pusha
and
lea
sub
pop
pop
xchg
adcb
outsl
cld
mov
xor
fbld
mov
mov
fwait
in
mov
pop
and
insb
xor
mov
repz
dec
jp
xlat
xor
xor
icebp
or
mov
pop
pop
adc
enter
in
lds
mov
mov
andl
add
fistl
leave
push
push
add
push
in
hlt
xchg
repz
mov
or
dec
mov
lea
mov
pop
inc
in
add
cwtl
fistpll
or
pop
aad
lret
inc
hlt
pop
xchg
jecxz
divb
out
stos
into
test
mov
fisubl
rcrl
jae
and
mov
mov
pop
repz
inc
mov
add
jg
sbb
mov
sbb
add
outsb
arpl
rorl
and
dec
mov
sub
cmp
dec
mov
ret
sbb
dec
cli
data16
adc
sub
aad
lret
jecxz
xchg
sbb
push
mov
out
lret
jae
mov
sti
fwait
daa
fimull
inc
mov
das
in
jae
xchg
outsb
ds
xchg
inc
or
cs
addr16
das
arpl
sahf
dec
addr16
inc
lds
icebp
aam
mov
cld
iret
lret
dec
jo
pop
in
imul
mov
dec
cmpsl
dec
je
mov
pushf
data16
dec
pop
repz
sahf
or
dec
mov
ljmp
mov
dec
sbb
andl
fisubs
pop
insl
xor
jae
inc
mov
dec
add
aaa
jnp
jp
cmpsb
xor
sbb
mov
mov
lock
inc
sahf
or
ret
nop
mov
es
outsl
sbb
fldl
punpckhwd
in
pop
es
xor
xchg
lods
add
aam
inc
jmp
cmp
or
inc
clc
cmpsl
mov
jb
das
push
sbb
lahf
popf
push
das
pop
xabort
adc
ret
pop
test
jp
int
add
sbbb
je
xchg
mov
and
add
iret
data16
adc
adc
dec
adc
or
jbe
ljmp
in
sbb
dec
jg
dec
mov
mov
out
and
xor
bswap
faddl
inc
mov
mov
popa
cltd
in
push
and
adc
pop
aam
jne
push
inc
loop
repz
lds
mov
ljmp
xor
stc
xchg
bnd
and
ss
jnp
rcrl
xor
arpl
xchg
pusha
vpaddq
push
dec
jnp
fistpll
pop
rclb
aaa
xchg
in
jnp
f2xm1
adc
lods
call
test
fcoml
sarl
scas
movsb
mov
sbb
jno
or
in
add
lds
bound
add
adc
mov
andb
xchg
xor
jg
sti
add
out
mov
stc
cmpsl
ffreep
sbb
test
inc
cld
arpl
bound
inc
jo
test
js
xlat
aam
and
sbb
nop
cmp
xor
bound
pop
and
das
or
out
imul
xlat
mov
cmp
push
sub
sub
xchg
jmp
push
xchg
mov
xchg
lret
into
or
cmp
dec
cmp
push
fnsave
sub
int
push
pop
lods
mov
out
rcrl
out
fwait
inc
and
jo
push
insb
jo
push
outsl
inc
loop
in
fistps
sbb
jmp
sub
sarb
sbb
xor
negb
cmpsl
cmovbe
sub
mov
scas
inc
add
sub
push
call
fbstp
jle
mov
mov
jge
jno
and
jno
and
dec
mov
jge
push
mov
loopne
mov
stos
in
daa
xor
sub
and
and
mov
sub
mov
cmp
aad
xchg
or
js
pop
aad
nop
mov
out
cld
icebp
mov
xor
ret
push
cmp
data16
dec
orb
push
dec
xor
movsl
cmp
sbb
js
je
testb
dec
jg
in
or
lcall
mov
or
xor
repz
sbb
scas
sbb
jno
and
scas
enter
aad
scas
sahf
jns
lret
data16
outsb
jb
and
mov
sub
and
xchg
mov
std
clc
ret
jb
push
add
mov
std
mov
cwtl
stc
mov
lahf
adc
sub
mov
push
mov
out
mov
jb
pop
cmp
push
push
or
leave
or
mov
mov
inc
mov
pusha
sub
sub
outsb
testl
xor
sbb
cmpsb
push
mov
fcompl
aad
or
pop
cmp
rcrl
jg
xorb
scas
loopne
and
int3
pop
test
mov
mov
jbe
mov
adc
push
insb
pop
testl
xchg
xchg
sbb
or
push
mov
lds
incb
pop
lock
insl
repz
rcll
sbb
push
cmp
sbb
repnz
adcl
sbb
decb
sbb
fldt
lods
sub
push
dec
cmpsl
xlat
addb
sbb
adcb
dec
mov
out
jle
xor
push
push
mulb
int3
fstl
push
repz
dec
rorb
int3
jmp
outsl
rol
adc
cmc
jb
je
add
cmp
add
fcoms
jae
nop
fildll
xor
lahf
inc
cli
sti
mov
mov
xchg
out
cmp
aaa
inc
cwtl
add
movsb
mov
icebp
or
xchg
pop
add
rcrl
out
mov
aaa
jmp
jno
push
push
jae
dec
pop
xchg
cltd
jne
aad
inc
cli
ret
jmp
pushf
ret
jmp
loopne
aam
xchg
xchg
mov
pop
jb
jbe
clc
fwait
outsb
repnz
sbb
fcompl
ja
mov
cmpsb
addb
sbb
int3
dec
imul
dec
sbb
dec
pop
scas
xchg
or
pop
pop
cli
bound
push
push
test
std
out
push
add
daa
dec
enter
add
divb
dec
pop
js
add
bound
inc
or
dec
adc
sub
mov
aas
push
or
nop
sahf
cmp
loope
push
push
fcmovnbe
jge
popf
dec
ljmp
mov
add
dec
cmc
inc
jns
cld
and
inc
aas
xchg
scas
fadds
stos
sbb
inc
std
xor
push
xchg
lds
mov
adc
and
push
and
add
cmp
lahf
and
arpl
xchg
jmp
cmpb
mov
into
loop
mov
rolb
mov
les
xor
bswap
dec
gs
sub
push
in
in
mov
sbb
xchg
sub
cmp
push
mov
pushf
mov
mov
das
fwait
mov
cmp
push
push
nop
shlb
xor
aaa
cmpl
mov
inc
mov
xor
xchg
adcb
ffree
lahf
cld
ds
mulb
mov
cld
inc
jecxz
in
sub
data16
sbb
test
std
or
mov
test
fbld
mov
jl
out
lcall
sub
addr16
pop
mov
aas
mov
gs
sub
add
cwtl
mov
and
adc
ja
sub
cmc
or
daa
lcall
pop
adc
sti
fbstp
cmpsb
cmp
jge
setl
sbb
add
jnp
loope
push
fldenv
jae
aam
adc
out
dec
fstl
mov
cmc
push
cs
jb
movsl
int3
jne
into
lock
push
in
mov
negb
repnz
mov
lock
fisttpl
mov
sub
mov
push
das
adc
cld
ja
loope
xchg
knotb
lcall
popa
incl
movsl
xchg
addr16
imul
insb
ds
mov
repz
sbb
sub
cmp
insl
mov
pop
in
adc
mov
mov
push
cmp
js
push
dec
add
ficoml
jb
pop
bound
sub
call
xor
or
in
das
out
rcrl
mov
out
loopne
xor
xchg
push
mov
mov
cltd
call
sbb
pusha
pop
mov
and
xor
adc
or
jo
sahf
dec
nop
jg
cs
scas
xor
int3
push
push
hlt
mov
loopne
stos
push
xchg
clc
push
mov
cld
outsl
shrb
sub
jecxz
sbb
sub
mov
push
sbb
stc
rorb
test
sti
jmp
out
hlt
loop
xchg
add
jo
mov
dec
mov
jo
cmp
arpl
jno
sahf
dec
inc
fmuls
and
sar
jb
fwait
testl
pop
fiadds
fs
test
int3
es
mov
shll
pop
push
loop
sbb
sub
call
outsl
jne
jo
dec
jecxz
popf
xchg
xor
in
jb
insl
jg
bound
imul
sahf
sarb
adc
enter
inc
and
lds
sub
cmp
in
aaa
stos
ss
shr
enter
lea
push
push
jl
mov
mov
push
dec
aam
adc
lcall
push
mov
jge
cmp
sar
je
scas
xor
add
cmp
outsl
negb
push
notb
push
clc
ret
pusha
dec
cmpb
bound
outsl
jns
xchg
sbb
mov
out
pop
insl
and
push
test
cmp
push
jecxz
insb
cmc
leave
cmp
mov
out
dec
flds
outsb
push
bnd
arpl
and
imull
jne
xchg
xchg
pop
stos
push
mov
js
fnstenv
inc
adc
lea
fisubl
xchg
rolb
scas
addr16
dec
gs
imul
fcoml
jno
push
ja
enter
fiaddl
iret
and
ss
xlat
xchg
jmp
call
mov
popf
cmp
sub
pop
ds
ss
fnsave
jns
hlt
daa
and
int
pop
popa
ret
test
jae
in
sub
inc
jnp
sti
jl
cmp
jbe
pop
int
inc
loope
mov
cmp
xchg
mov
push
ss
iret
adc
mov
pop
call
out
jno
fs
stc
inc
fcomip
jge
fs
or
test
mov
xchg
and
jmp
mov
bnd
into
inc
add
aad
jno
sub
jo
sbb
ljmp
jbe
xchg
fdivrs
inc
outsb
je
aad
mov
inc
cmp
sub
push
adc
out
dec
xchg
mov
imul
add
cmpsb
pop
test
fldln2
pop
hlt
cli
jne
loop
pop
pop
xor
fcomps
imul
stc
mov
mov
jb
jle
adc
lock
jb
fsubs
mov
mov
cli
jl
inc
popf
adc
leave
or
dec
ja
mov
iret
push
inc
mov
ficompl
dec
xchg
lret
adc
mov
push
mov
incl
adc
or
pusha
add
and
jl
jnp
mov
aam
pop
gs
mov
adc
xor
test
mov
or
dec
push
xchg
mov
push
pop
fs
push
les
test
push
jb
dec
cmpsb
mov
cs
jae
lret
sbb
or
pop
es
js
sarl
push
inc
sbb
mov
out
push
or
mov
mov
repnz
pop
daa
adc
mov
pop
call
sbb
push
stos
add
repz
and
mov
out
add
loopne
cmpsl
cmp
mov
sub
sbb
insb
jo
popa
aas
enter
loop
dec
ficoms
mov
xorl
pop
outsl
fistpll
lods
add
mov
lods
daa
movsb
mov
in
cwtl
stc
cmpsb
rcrb
lods
shrb
fldl
xlat
rolb
call
ret
adc
mov
cmc
jbe
imul
xchg
cli
stc
lods
dec
js
add
test
jle
inc
es
push
mov
rol
mov
in
loop
rcrb
sbb
pop
adc
xlat
mov
sarb
je
aas
cmp
pop
jne
mov
sbb
ljmp
inc
imul
pop
or
pop
shl
mov
inc
inc
fstpt
nop
adc
fwait
jmp
mov
push
les
das
lea
cli
add
pusha
jo
out
or
popf
ds
jecxz
je
add
sbb
jnp
imul
adcl
xchg
loope
push
add
mov
rcll
mov
or
inc
dec
leave
adc
mov
je
stos
icebp
iret
js
fcomip
add
shlb
jge
mov
repnz
inc
fsts
xor
aas
cwtl
in
movsl
insl
push
scas
popf
sarl
mov
fsubrs
adc
fstpt
fs
or
int3
fistl
ss
pop
fidivs
mov
sub
push
loop
std
dec
mov
push
cmc
dec
enter
repz
jmp
jge
jno
or
mov
push
addr16
xchg
and
inc
push
jae
dec
or
push
icebp
shlb
dec
xchg
inc
fdivs
add
xor
pusha
les
adc
test
push
inc
xchg
cs
sti
ret
xchg
mov
sub
pop
ds
addb
cmp
bt
mov
mov
pop
loop
and
push
out
in
popa
aam
lock
popa
repnz
mov
sub
adcb
fistpll
jecxz
mov
sahf
add
outsl
inc
mov
leave
nop
int
pop
pop
hlt
xchg
xorl
loop
pop
push
jg
push
cld
and
mov
and
adc
sbb
es
movsl
aas
mov
jg
enter
xchg
popa
mov
mov
fisubrs
add
lods
fs
jmp
mov
cmp
loop
bound
or
stos
lcall
xor
sbb
xor
in
adc
sub
xchg
inc
xchg
cmpb
sarb
add
cs
movsb
dec
or
fwait
hlt
pop
dec
ret
mull
loop
pop
mov
jge
sbb
pop
gs
pop
mov
in
and
pusha
inc
test
pop
dec
push
loopne
es
xchg
push
mov
into
jne
cld
pop
outsl
or
jne
insl
ret
jp
mov
ret
out
enter
scas
push
loop
xchg
je
push
loopne
sbb
fidivl
test
pop
std
mov
mov
mov
mov
sbb
ffree
pop
push
mov
add
ljmp
sub
add
cmp
cmp
mov
call
cmc
mov
ret
mov
and
out
cmp
or
jns
inc
pop
mov
out
push
repz
iret
sahf
dec
loope
fdivrl
xchg
das
push
or
rclb
mov
pop
mov
or
fidivrl
rolb
in
or
popa
loop
push
push
ja
add
lock
sbb
push
lahf
out
ss
sub
arpl
sbb
repz
xor
sbbl
fwait
adc
out
adc
mov
sbb
jmp
inc
sarl
lock
or
lods
and
xchg
es
shrl
mov
les
jbe
cmp
sub
push
bound
cmpb
int
sub
dec
roll
xchg
lahf
ja
xor
mov
cld
cmpsl
movsl
cwtl
pusha
mov
inc
push
lahf
mov
or
scas
add
jle
lods
ss
xor
pop
mov
lret
daa
mov
arpl
sub
sbbl
gs
sti
repz
movsl
mov
or
xchg
mov
pushf
in
dec
sub
mov
add
movsl
popf
jno
mov
add
enter
mov
inc
loopne,pt
inc
fimull
int3
std
inc
out
inc
push
hlt
negl
add
dec
mov
inc
fcmovu
scas
in
out
fbld
sub
loop
movb
inc
xor
pop
cmp
xlat
mov
push
and
mov
adc
shll
fistpll
sbb
adc
pop
add
push
pop
std
in
stos
cwtl
push
xchg
dec
or
insl
and
sar
pop
jno
add
sbb
or
test
sub
dec
lcall
sub
mov
jmp
sub
outsb
cmpsl
fists
push
in
mov
fldcw
add
inc
test
sbb
out
scas
outsl
inc
or
xor
push
nop
std
aad
pop
add
ret
insb
out
les
imul
and
rcl
leave
das
cmp
push
sbb
mov
sub
fsubp
outsl
mov
pop
mov
pusha
jnp
adc
xchg
push
test
add
lea
loop
push
andb
ljmp
sahf
mov
mov
popa
jmp
enter
bound
loopne
lahf
js
sub
adc
cld
fwait
lods
out
xchg
movsb
sbbl
push
sbb
into
imul
xchg
xor
icebp
sub
js
push
pop
cmp
push
push
and
inc
mov
pop
fnstsw
mov
xchg
pop
and
sti
aas
adc
ret
div
sbb
int
enter
and
mov
pushf
rolb
mov
mov
pop
jb
frstor
test
cmpsl
mov
shl
cmpsb
fcmovne
sti
push
dec
bound
shll
popa
lock
leave
sbb
sbb
dec
mov
mov
popa
into
pop
ret
jecxz
add
add
into
jae
cmp
rorl
or
cltd
cs
adc
aad
jne
mov
xlat
insl
icebp
inc
sub
cmp
mov
out
or
movsl
jmp
sbb
scas
aad
cmp
pop
cmp
cmpsl
jp
repnz
push
inc
pop
or
mov
jecxz
fadd
popf
mov
in
cmp
data16
mov
pop
lock
sbb
fidivl
mov
inc
mov
dec
idiv
or
jns
int3
cs
xchg
push
push
jbe
xchg
mov
dec
sahf
in
lods
call
ret
std
idivb
iret
int3
call
pusha
pop
dec
cmc
push
and
gs
sbb
jns
fs
lahf
pop
mov
mov
fsubrl
xor
or
mov
call
mov
add
mov
sarb
mov
sbb
cs
clc
aaa
push
sub
fsubrs
call
enter
mov
iret
stos
test
push
fstl
mov
add
sbb
out
fisubrs
jnp
fidivs
jno
das
fdivrl
and
lcall
stos
gs
sub
and
adc
test
pop
int3
pop
in
pushf
or
dec
or
xchg
test
inc
fistl
jecxz
mov
popf
xchg
sub
stc
and
cmpsl
mov
shlb
je
sub
lock
arpl
dec
cmp
mov
pop
mov
lea
cmp
lret
or
add
popa
push
popa
mov
mov
sub
stos
pop
inc
cld
jmp
adc
jbe
repz
test
cmc
ss
data16
notb
xorl
mov
stc
jno
enter
rol
add
lret
cmp
int
js
packuswb
and
popf
subb
or
mov
jmp
and
pop
add
pop
inc
jmp
insl
popa
js
push
je
xlat
pop
fwait
inc
pop
jo
cmpsb
push
dec
xlat
or
sti
lret
test
or
jg
ret
push
mov
leave
sbb
popf
push
pop
out
xor
push
inc
xchg
dec
push
testb
lret
lods
jbe
dec
or
sar
orps
pop
xlat
dec
adc
test
add
inc
ljmp
loopne
cmp
movhps
leave
bound
add
add
sbb
repz
inc
sbb
adc
lret
jg
mov
mulb
cmp
lods
leave
pop
into
xchg
iret
shrl
pop
mov
jbe
cmp
mov
jae
add
imul
andb
out
inc
pop
inc
test
loope
mov
lret
lret
pop
cmp
data16
aaa
lahf
adcb
popf
hlt
scas
vmwrite
sbb
clc
test
fninit
xor
enter
sbbl
int3
int3
cmpsl
nop
imul
in
cmc
adc
xor
inc
dec
xchg
mov
cmp
adcb
je
imul
ret
mov
mov
add
dec
lods
sub
ret
push
cs
jnp
cmp
mov
sbb
pop
es
jb
ljmp
add
cmp
and
sub
sub
repz
mov
pop
out
js
push
adc
mov
inc
fstl
mov
mov
xchg
mov
insb
jecxz
jo
nop
or
sbb
repnz
adc
and
pop
shll
ds
bound
das
fdivs
mov
dec
lcall
dec
mov
sbb
mov
dec
inc
mov
gs
adc
add
stos
mov
lock
sub
int
xlat
push
movsb
push
jg
xor
sbb
mov
hlt
jg
out
jno
push
adc
and
mov
in
mov
xor
dec
sahf
frstor
sub
mov
jmp
cmp
test
sbb
push
icebp
push
test
adcl
push
lret
mov
es
pop
adc
mov
imul
clc
insb
fiaddl
insl
sub
popf
clc
cwtl
insl
xchg
insb
pop
lret
push
inc
push
pop
imul
arpl
xchg
clc
mov
jnp
in
cmp
sub
mov
dec
cli
jl
sub
jmp
inc
or
sub
mov
lret
add
adcb
scas
push
ljmp
cwtl
out
ret
aas
sarb
insl
outsb
subl
add
fcmovu
push
scas
dec
mov
or
or
loopne
sub
pop
adc
lret
gs
decl
movb
cmc
rorl
xor
jae
add
sub
sub
xor
lods
loopne
cli
cmp
aam
jl
inc
lahf
fistpll
test
sbb
pop
pop
mov
sahf
lret
mov
movsl
leave
test
in
aas
xor
ds
fdecstp
push
mov
or
inc
inc
test
pop
aaa
mov
nop
daa
out
loop
or
jmp
cmpsl
iret
in
dec
js
clc
mov
stos
mov
fadds
mov
daa
bound
jmp
aam
insb
pop
pop
cwtl
or
sbb
xor
adc
add
pop
mov
scas
mov
mov
push
mov
adc
adc
cmpsl
xor
fwait
xchg
mov
mov
inc
jo
dec
fists
iret
push
add
xchg
int
ret
jo
ja
or
fidivl
cmp
lds
cltd
fmulp
popa
push
aas
insb
icebp
repnz
movsl
test
inc
adc
jnp
mov
cld
outsb
negl
rcrl
mov
in
out
xchg
out
adc
aad
sbb
hlt
push
mov
push
fsubp
mov
inc
out
add
nop
add
jge
mov
lods
popf
sbb
mov
repnz
cwtl
dec
jne
insl
cmp
jmp
adc
push
fcoms
insb
xor
jne
testb
ja
sub
je
mov
push
xchg
mov
sbb
cltd
hlt
xchg
push
fdivr
or
mov
dec
addl
lea
push
cli
test
outsb
xchg
mov
sbb
movsb
fcoml
mov
jge
clc
push
stos
sub
in
cltd
pop
movsl
jno
arpl
jecxz
pop
xor
out
shl
or
outsl
js
dec
movsl
test
iretw
lret
sbb
lods
imul
dec
stc
push
cmc
bound
scas
inc
inc
js
pop
sub
or
adc
mov
movsb
xchg
mov
xchg
andl
pop
dec
jnp
dec
rol
sub
dec
pushl
jge
mov
and
xchg
or
fnsave
sub
xchg
cs
cmp
fistps
xchg
jp
icebp
sbb
ljmp
fdivl
jp
mov
mov
inc
pop
rclb
imul
repz
sub
inc
orb
imul
imul
pop
ja
out
negb
mul
movb
subl
scas
mov
sub
test
or
mov
jmp
dec
cmpsb
je
pop
sub
and
pop
pop
xor
sub
out
push
inc
popf
xchg
cli
or
add
leave
adc
cmp
imul
rcl
bound
in
xlat
insb
mov
bound
cmp
out
imul
ret
jp
mov
mov
outsb
pop
repnz
pop
mov
lahf
clc
jecxz
cmp
fldcw
pop
inc
push
mov
insl
jbe
xchg
dec
loop
in
enter
aas
lcall
aas
add
push
mov
rcrl
mov
cmc
pop
fcmovnbe
shll
cmp
test
movsb
pop
mov
mov
pusha
outsb
push
mov
or
mov
in
test
pop
or
inc
call
stos
mov
sbbb
sahf
jb
loopne
xchg
push
inc
stc
mov
pop
jg
sbb
imul
cmpsb
cli
pop
mov
push
and
pop
nop
sbb
sbb
push
aaa
into
add
hlt
mov
icebp
pop
jns
mov
ficomps
add
pop
cmp
cltd
loop
cs
fs
pusha
sub
subl
mov
cmpsb
mov
mov
stc
xor
dec
and
cmc
imul
ret
xor
xchg
cmp
or
mov
fsubrl
xor
mov
lret
inc
sti
leave
xchg
test
mov
mov
mov
and
loop
xor
ljmp
xor
clc
push
xchg
push
xor
sbb
jle
iret
xchg
mov
pushf
mov
enter
lea
or
fdivrs
sbb
inc
push
inc
push
cli
or
mov
or
daa
cmp
mov
ss
mov
mov
aam
testl
and
adc
jae
nop
and
movsl
push
enter
insl
pop
test
mov
ljmp
fs
mov
rclb
dec
add
mov
lods
sub
cmp
push
inc
roll
push
inc
sarl
arpl
pop
movsb
dec
into
gs
xchg
inc
add
les
ss
filds
mov
push
push
jl
addl
add
fists
jo
ja
popa
lret
and
jmp
xchg
int
lahf
shll
imull
shr
out
pop
jo
out
sub
or
jmp
clc
xorl
ret
mov
inc
jae
dec
test
adc
and
imul
fwait
mov
jb
or
cmp
pop
lea
adc
repnz
jmp
xor
loopne
sub
xchg
lods
sbbl
push
xchg
movsl
xor
push
sub
cmp
and
mov
aaa
and
rcll
mov
pop
cmp
sbb
movsb
bound
dec
push
cmp
lds
clc
sub
xor
dec
push
rcr
dec
and
test
pop
insl
pop
jbe
push
xchg
push
mov
sbb
adc
int3
cld
push
mov
ds
mov
aam
int
add
nop
jno
pop
xchg
lock
mov
jno
inc
sub
lret
xor
xor
xor
adc
inc
pop
pop
repz
stc
loope
push
fwait
rcrb
in
icebp
shlb
xchg
push
pop
xchg
pop
dec
aas
or
cmc
xchg
fildll
or
in
loope
pop
cmp
enter
inc
sub
loope
push
mov
jp
fld
outsb
cli
mov
adc
lock
mov
xchg
inc
jnp
mov
xchg
cmovs
js
and
xchg
rorl
and
jge
xlat
mov
dec
pop
mov
dec
ljmp
lods
je
insb
xchg
bsr
stos
push
adc
push
popf
and
in
xor
ret
mov
loope
cmp
xor
repnz
inc
push
cmpsl
mov
sbb
int
mov
enter
ret
sub
lcall
cmp
push
mov
mov
pop
lcall
and
or
js
sbb
dec
dec
push
push
stc
ret
outsl
lret
sub
cmp
movsb
add
lods
inc
mov
imul
test
mov
xorb
stos
push
xchg
jecxz
roll
jb
popf
dec
mov
cmp
rolb
insb
jmp
stos
add
out
pop
mov
mov
pop
fmuls
sbb
cmp
sti
jp
mov
dec
aas
out
and
adc
inc
push
xor
xor
pop
inc
and
in
inc
adc
pop
test
inc
out
dec
sub
mov
xchg
in
test
pop
es
cmp
jnp
scas
cmc
outsl
push
dec
fnstsw
sahf
xor
js
std
mov
jno
ja
pop
xchg
in
push
fdivrl
stc
jne
push
pop
push
ljmp
jp
adc
sti
jb
mov
adc
xlat
inc
pusha
xchg
jne
rol
inc
dec
adc
mov
lds
dec
mov
and
or
ja
or
xchg
xchg
inc
cmp
inc
sub
dec
pop
mov
inc
lcall
into
push
in
xlat
adc
addl
lcall
xlat
cmpb
mov
cmp
aas
push
jge
in
mov
jns
adc
in
xchg
movups
test
and
gs
fistpl
ds
inc
mov
jecxz
pop
or
les
call
push
jecxz
enter
mov
jle
cli
je
insb
jl
mov
pop
movsb
or
adc
xchg
arpl
push
xor
ret
fldcw
push
add
leave
insl
jne
lret
or
fbstp
clc
lret
popf
jne
sbb
jo
add
subb
mov
jbe
leave
out
outsb
push
inc
pop
mov
std
pushf
jbe
mov
sub
lds
jo
add
xchg
xchg
or
repz
cmp
cmp
mov
das
pop
jg
pusha
test
pop
jae
xchg
push
lods
push
xor
or
add
mov
test
nopl
xchg
pop
sti
cmpb
leave
push
push
icebp
cmp
lret
mov
jns
jne
sar
gs
inc
out
call
and
add
mov
jg
nop
popf
mov
xor
dec
testb
insb
pop
fisttpl
adc
adc
and
loop
cmp
dec
cmp
mov
insl
or
mov
sahf
lods
das
popl
mov
mov
fsubrs
xor
int3
dec
dec
mov
sahf
out
clc
xor
cmp
jg
cmpsl
shrl
mov
fdivl
cmp
loopne
in
and
out
push
and
addr16
xrelease
std
dec
rcrl
adc
imul
in
dec
and
je
mov
lret
cmp
push
cmpsl
push
pop
scas
mov
stos
xchg
in
mov
or
jl
sub
insb
xchg
leave
xchg
mov
xchg
data16
add
outsl
dec
shll
mov
es
cmc
and
jp
mov
out
out
jnp
enter
test
jp
push
pop
sub
add
enter
sub
jne
sub
mov
mov
lea
xchg
mov
lea
sbb
cwtl
cltd
iret
xor
and
repnz
pop
or
testb
sti
xchg
push
jl
sti
sub
sbb
mov
mov
push
mov
pop
add
dec
cmp
dec
and
call
add
pushf
mov
jo
jae
pop
testl
push
scas
lret
ret
testl
jnp
iret
xchg
cmpsl
fdivl
rorl
or
add
lahf
lret
out
and
mov
or
add
xor
dec
pop
lret
out
dec
add
add
addr16
aas
cmp
lret
fs
inc
test
adc
ja
push
dec
inc
daa
push
xchg
inc
rcl
cld
adc
jae
mov
add
in
test
and
ds
repnz
mov
cwtl
inc
jl
push
pushf
movsl
mov
mov
imul
mov
stos
in
push
cmp
call
in
mov
jmp
mov
mov
out
pop
pop
sub
add
xchg
lds
in
testl
cmp
fistps
or
push
mov
xchg
into
bound
push
mov
ret
stos
jg
shlb
or
lea
or
fistps
add
add
dec
stc
lret
adc
cwtl
mov
popa
xor
pop
mov
mov
pop
mov
mov
cmp
and
jbe
mov
push
push
pop
mov
mov
lods
cli
jle
test
mov
and
sub
xchg
sub
ja
inc
mov
hlt
cmp
or
jns
aaa
fiadds
inc
sub
xor
aas
cmpsb
sbb
xchg
jbe
das
push
mov
lfs
xchg
jp
out
cmp
add
pop
dec
movsb
pushf
jl
or
clc
cmpsb
and
ret
and
adc
je
int
and
cmp
pop
test
inc
mov
mov
jp
adc
shlb
mov
out
cmp
pop
adcl
jge
jno
test
mov
mov
dec
mov
addr16
pusha
shrb
add
jl
addl
jl
mov
lret
and
scas
in
sub
mov
pop
daa
push
pop
pop
scas
out
shl
data16
aaa
and
sub
nop
fmull
adc
xor
fcompl
xor
jp
enter
fs
pop
lea
adc
mov
mov
mov
push
mov
les
mov
cmp
subb
xor
mov
or
cmp
or
cs
sub
out
and
cli
mov
add
mov
shld
xchg
lret
xchg
int
fucomp
lret
push
in
lret
aam
outsb
test
xchg
xchg
jne
mov
rclb
jo
negb
fldt
sti
jae
inc
push
jb
loopne
dec
mov
in
sub
mov
loope
pop
pop
sub
lahf
add
ljmp
jmp
mov
mov
fcoml
out
loopne
fmuls
sahf
cmp
cmp
insb
aad
mov
inc
test
insl
sub
cmp
nop
popa
xchg
mov
pushf
sub
sub
xchg
cmp
sub
push
cmpsb
pop
xor
xchg
cmp
or
pop
adc
sub
hlt
int3
adc
jno
push
dec
mov
orb
mov
sbb
cmc
lods
rcrl
in
out
loop
fisttps
jle
dec
adc
fnstenv
js
or
pop
je
mov
lds
add
lods
jno
xchg
rcrb
lret
push
pop
mov
popf
sub
andl
std
punpcklbw
pusha
mov
adc
into
cmpsb
clc
mov
scas
test
sbb
or
int3
dec
sbb
dec
push
aas
mov
add
jecxz
loop
cmp
enter
ret
in
sbb
aaa
mov
mov
data16
mov
movsl
call
mov
out
dec
push
data16
mov
shl
push
dec
dec
lcall
outsl
xor
cmp
push
lcall
or
pop
das
stos
cmp
pop
mov
xchg
jg
jae
outsb
or
lea
dec
add
lret
movsl
les
fimull
ja
jle
pop
push
pop
dec
sti
sbb
sub
enter
icebp
pop
js
jl
scas
cmc
idivb
clc
ljmp
jbe
xor
or
xor
pop
pop
inc
mov
add
push
lock
ret
sbbl
enter
fimull
das
dec
call
mov
push
push
nop
sub
insb
or
in
inc
test
rcl
pusha
jecxz
adc
call
inc
hlt
add
je
sbb
outsl
stc
test
mov
popa
mov
xor
test
fcoml
cmp
cmp
push
les
mov
inc
push
pop
mov
jo
mov
dec
icebp
out
xlat
mov
add
and
jae
test
cmp
js
jge
mov
les
loope
mov
jnp
cwtl
push
push
mov
xlat
popf
inc
bound
add
mov
pop
xor
sub
push
xor
xchg
xlat
das
cmp
mov
clc
cld
cwtl
mov
lods
or
test
iret
inc
cmp
aad
in
lahf
xchg
add
xor
pushf
or
and
into
cwtl
into
test
sub
outsb
loop
ja
dec
jge
xor
cld
sbb
les
outsl
mov
jb
arpl
inc
out
mov
jle
and
sub
nop
pop
xchg
loop
ds
add
jmp
xor
mov
inc
test
sbb
les
inc
pop
jmp
mov
mov
push
mov
outsl
negl
jb
xlat
jne
push
mov
fadds
pop
sub
in
dec
insl
out
fisubrl
enter
xchg
and
mov
cmp
pop
sbb
mov
pop
push
and
daa
arpl
lods
lret
out
dec
sbb
clc
das
push
cmp
dec
das
pop
shl
cmp
lret
pop
fcomps
jno
add
cli
add
cmp
rcll
jb
out
mov
inc
push
cmpsb
mov
mov
fildll
aaa
and
inc
mov
mov
mov
dec
out
mov
dec
xor
lret
adc
sub
imul
pop
adc
mov
aas
stos
mov
mov
sub
or
aad
pop
movsl
dec
jg
jmp
insb
add
sub
push
js
and
xchg
and
out
fs
cmpsl
and
lcall
push
mov
inc
inc
or
test
jge
or
enter
push
ljmp
imul
jl
bound
push
and
out
xchg
inc
push
add
test
cltd
jae
dec
int
mov
pop
and
inc
mov
push
jle
xor
nop
aaa
push
push
mov
xor
and
clc
adc
cmp
repnz
jb
add
sub
out
mov
insb
lods
hlt
sub
mov
iret
mov
inc
test
pop
icebp
shlb
ret
subb
jb
and
clc
xchg
pop
jbe
mov
iret
xchg
xorb
inc
push
ss
stos
out
pop
sbb
pop
pop
adc
dec
mov
adc
dec
int3
pop
sbb
cmp
or
int3
adc
and
sbb
daa
daa
in
jp
dec
mov
pop
lret
pop
push
test
or
add
sbb
popf
adc
int
js
out
cmp
ds
mov
lock
das
or
insl
cmp
jo
mov
loopne
fs
dec
xor
dec
or
adc
sub
pop
nop
ficomps
clc
out
fwait
test
pop
mov
aad
dec
push
sbb
fcomp
xchg
mov
cmp
sbb
scas
popf
test
adc
xchg
jecxz
jae
mov
inc
mov
in
stos
popf
sbb
arpl
movsl
cmp
std
lea
insb
pop
cld
push
xchg
push
insb
out
sbb
pop
inc
mov
lahf
repz
icebp
xor
xor
cwtl
sti
xor
dec
pop
or
sbb
fdivs
inc
mov
out
faddl
rcrl
jp
sub
fldl
fcmove
and
sub
loope
or
xlat
sbb
xchg
fiaddl
in
pop
mov
scas
adc
push
pop
arpl
cwtl
xchg
out
mov
icebp
or
ja
dec
pop
rcll
insb
cmp
dec
mov
cli
or
ds
lret
mov
xor
data16
ja
jp
push
stos
in
movsb
sar
iret
xchg
iret
out
sbb
xchg
xlat
std
mov
cmp
mov
fs
jge
test
and
add
sub
out
pushf
mov
rclb
scas
push
cs
fs
adc
fdivrs
popf
lea
je
testl
loope
mov
aaa
rcrl
pushaw
mov
hlt
pop
inc
addr16
and
test
push
mov
sbb
ds
xchg
sub
jg
mov
packssdw
loopne
stc
xchg
test
mov
mov
mov
mov
jo
push
mov
mov
test
inc
in
sub
fldl
jno
sti
and
adc
add
push
insl
ficompl
pushf
push
leave
testb
push
inc
enter
lret
add
sbb
xchg
ss
pop
pop
icebp
pop
jge
sahf
hlt
fwait
sbb
repnz
sbb
inc
mov
cmp
mulb
ret
or
cmp
repz
jle
jne
rorl
adc
daa
xor
push
fsubrl
or
push
mov
int
jle
adc
add
fs
in
mov
xchg
add
movsl
dec
aam
or
dec
and
sbbl
lock
or
mov
sub
ret
dec
or
ror
out
ds
je
push
dec
cmp
imul
add
pop
ljmp
into
push
xchg
dec
jmp
jle
and
jg
mov
fs
stos
fs
pop
nop
jne
movlps
nop
fbstp
cmovae
pop
out
test
in
push
out
inc
repnz
add
add
mov
mov
outsl
inc
testb
bound
add
sbb
jg
filds
mov
stos
mov
data16
inc
int
hlt
mov
mov
push
shll
ss
aam
ds
xchg
xor
arpl
mov
push
push
loop
clc
or
fcomps
dec
test
jae
ds
lret
inc
in
mov
cmp
cltd
add
inc
xor
dec
scas
push
mov
inc
dec
in
lret
imul
mov
imul
xor
ret
or
aas
jle
mov
hlt
cmp
pop
fiadds
xchg
mov
jecxz
movsl
jmp
idivb
sbb
pop
mov
mov
in
cmpsb
pop
push
lods
fdivrl
jns
add
cmp
inc
imull
sub
cli
push
in
pushf
adc
lock
push
sbb
rorl
test
cs
inc
sub
mov
mov
repz
sbb
out
mov
xor
jae
test
pop
into
xchg
cmp
fsts
mov
es
cmp
lcall
xor
add
shl
cwtl
jecxz
out
pop
add
pop
sub
xchg
ret
testl
outsb
movsl
xlat
mov
inc
mov
xor
outsb
add
scas
adc
jmp
nop
in
mov
adc
adc
ffreep
ret
add
inc
jp
sti
xchg
in
and
andb
push
xchg
jne
xor
rcr
pop
pusha
imul
nop
test
mov
iret
aam
xchg
loop
mov
mov
fiaddl
fldcw
inc
popa
out
lahf
insl
dec
sub
and
movsb
sbb
rcll
add
adc
repnz
or
xchg
aam
dec
imul
punpckldq
xchg
jecxz
fnsave
and
lods
shll
inc
dec
inc
xlat
in
push
nopl
mov
sbb
int
adc
insl
adc
fcomp
call
or
add
call
ret
mov
inc
sbb
sub
push
add
add
sbbb
push
in
in
mov
es
xchg
addr16
mov
pusha
cmpsl
imul
fstp
bound
xor
jge
loopne
push
jle
sbb
or
mov
jge
int
mov
push
xchg
or
dec
fisttps
mov
test
mov
push
push
insl
fmul
sub
insl
ds
shr
insl
data16
or
or
sahf
push
out
les
xchg
cli
jo
pop
mov
ds
pop
mov
or
aam
push
jmp
inc
push
sarl
mov
movl
out
enter
push
push
sbb
insb
ret
sti
add
movsl
jg
mov
je,pn
rorl
mov
aad
aam
inc
pusha
ds
jae
push
out
pop
push
jns
push
popf
lcall
mov
cmp
mov
dec
loope
inc
subl
out
je
jnp
cmp
sub
cld
cmc
push
push
cmc
in
push
sub
pop
test
jmp
aaa
push
sti
lods
ss
pop
pusha
mov
xor
jae
xchg
ljmp
xor
inc
adc
cld
rorw
repnz
xor
aaa
push
adc
insb
mulb
dec
adc
ja
addr16
xor
push
js
jns
add
mov
sahf
mov
shlb
or
or
arpl
in
jl
mov
xchg
ljmp
mov
mov
call
insb
andl
mov
ficoms
xlat
cmp
sub
daa
loopne
lock
rcr
test
addr16
test
sahf
cmc
test
movsb
test
dec
pop
push
popf
mov
in
addl
insb
dec
daa
sbb
push
jecxz
mov
addl
aad
fmuls
mov
insl
gs
push
jbe
je
pop
inc
fistpl
cmp
xchg
and
ficomps
or
mov
push
es
insb
ja
fdivr
repz
xchg
ja
and
sti
lods
ret
inc
sbb
lock
gs
out
lock
sub
sbb
inc
xchg
arpl
pop
imul
cmp
fs
xchg
ret
xchg
jecxz
movsb
aaa
adc
inc
incl
sub
and
dec
push
sarl
leave
push
scas
cmp
out
mov
movsl
add
xchg
inc
mov
cmpsl
cwtl
xor
aas
lods
int3
repnz
pop
and
pop
cmp
aas
in
adc
iret
mov
xorb
lds
out
xor
stos
mov
arpl
xor
popa
adc
xchg
xchg
cmpsl
sbb
jecxz
cmp
loope
fninit
inc
mov
aas
daa
sbb
sbb
lcall
ret
cs
pushf
fiadds
inc
add
cmp
lret
mov
mov
sbb
mov
subb
lods
jb
jecxz
adc
and
or
push
in
sub
mov
ja
cs
push
pop
jo
pop
enter
pop
push
mov
adc
popf
jmp
sub
xchg
xchg
lcall
cwtl
xor
push
leave
ret
jg
subb
jbe
leave
es
test
in
imul
stos
pop
sub
dec
std
outsl
aam
es
sbb
sar
mov
notl
sub
add
rolb
pop
dec
addr16
lahf
dec
addr16
imul
fadds
jbe
add
clc
test
mov
lods
xlat
jle
stos
mov
sbb
ds
das
fsubrs
adc
int
test
ret
xlat
ret
pop
es
cmpsb
xchg
ret
int
popf
loope
jnp
and
leave
xchg
jmp
xorb
test
push
jb
sahf
add
push
leave
jl
cmpl
test
xchg
imulb
mov
xchg
adc
lahf
xor
inc
pusha
jge
add
sub
mov
xchg
mov
cmpsb
cmp
cmp
fwait
call
imul
jg
dec
sbb
and
into
stos
or
subl
xchg
cmc
lods
inc
jecxz
ret
jae
mov
mov
xchg
or
fisubs
mov
outsl
pop
and
dec
mov
inc
sbb
xchg
dec
mov
test
inc
ljmp
pop
adc
adc
push
adc
adcl
xor
test
test
mov
push
into
mov
popf
dec
cmc
inc
push
fs
inc
adc
gs
mov
mov
insl
lret
addr16
call
xor
jnp
sti
ficoml
inc
rolb
and
sbb
mov
loope
push
inc
mov
fimuls
cmpsb
sub
and
ljmp
mov
push
in
dec
pop
lea
xlat
and
insl
test
sbb
mov
or
cmp
inc
imul
mov
out
shlb
and
push
push
xor
add
cmp
adc
pop
lahf
arpl
sbb
in
das
ljmp
stos
sarb
xchg
mov
or
xchg
jp
xor
imul
nop
or
das
push
xor
sub
fdivrs
cs
cli
call
mov
ficompl
xchg
push
jmp
mov
imul
jle
aad
ss
xor
mov
cltd
jecxz
mov
push
dec
mov
les
mov
aad
pop
or
or
mov
movsl
mov
sahf
push
js
lahf
mov
jl
xchg
dec
push
dec
xor
xchg
lea
push
sub
sub
jecxz
gs
xor
pop
mov
lock
sbb
imul
jl
pop
jmp
lahf
xor
sub
cmpsb
popl
shll
or
jo
in
dec
pop
test
cltd
hlt
add
sbb
xor
sbb
mov
jmp
pusha
jmp
cmp
ret
pop
pop
jnp
fs
dec
push
xor
pushf
add
cmpsb
push
movsb
xchg
lret
pop
pop
inc
cmp
xlat
pop
xchg
sbb
dec
cmp
or
sbb
mov
sub
popf
cltd
fdivs
mov
mov
sbb
imul
xor
imul
outsl
testb
push
xor
push
js
and
or
shlb
decb
addr16
sbb
inc
stos
mov
add
pop
fcmovnb
cmp
jns
cmc
xchg
rol
stos
mov
pusha
jo
andb
or
jno
xor
jmp
fs
dec
xchg
and
fwait
rclb
imul
xor
mov
mov
rolb
nop
push
sub
mov
add
mov
aad
push
xchg
xchg
mov
cmp
and
adc
or
enter
xchg
jae
addb
les
into
xor
jecxz
dec
xor
je
push
pusha
adcb
cmp
and
dec
test
sub
scas
and
sbb
movsb
sbb
stos
dec
sbb
xor
xchg
add
fs
push
movsl
fiaddl
inc
ret
into
out
and
clc
mov
mov
xor
xchg
sub
xor
sbb
and
xchg
fwait
bound
mov
in
jle
push
cmpsb
mov
orl
insl
add
movsb
call
mov
loop
fcompl
in
push
sub
lret
jecxz
jle
bound
out
add
repz
xchg
cmc
cmc
pop
loop
lcall
dec
test
daa
and
xchg
ljmp
scas
pop
into
jb
jmp
fbstp
inc
dec
cmp
ret
pop
fwait
fs
std
test
test
and
or
add
shl
insb
out
xorl
in
call
add
idivl
testb
mov
jnp
rol
je
std
out
aad
inc
push
aam
sbb
cmp
jmp
sbb
add
inc
cmp
cmp
jae
sub
jmp
and
aad
jne
arpl
cwtl
jl
or
or
inc
mov
aaa
sub
fcom
xor
rorl
mov
hlt
or
aad
rolb
mov
mov
ficoms
mov
idivb
jns
or
aam
aaa
push
arpl
dec
sbb
scas
or
in
or
out
jns
or
push
mov
inc
jno
fildll
adc
adc
daa
daa
test
mov
int
sub
ja
inc
inc
loopne
stos
ljmp
jb
xorl
xchg
addr16
cmp
mov
add
inc
leave
cwtl
lds
into
iret
cmpsb
loop
and
xor
xor
lock
stos
enter
mov
ret
filds
lret
cmpsl
fs
scas
sbb
mov
popf
xchg
pop
jb
adc
addr16
imul
aas
jo
add
fcmovu
ss
add
shrb
inc
test
insb
push
icebp
inc
clc
dec
adc
mov
jns
scas
aas
push
popa
addr16
test
jg
cmp
mov
aad
movsb
inc
mov
js
daa
ret
and
cmp
inc
shlb
shll
ret
inc
sbb
mov
pop
dec
cmp
inc
xor
pop
rol
arpl
out
adc
sbb
mov
lret
scas
ljmp
xor
dec
dec
mov
mov
xchg
pop
dec
outsb
arpl
fists
and
test
inc
repnz
add
sbb
sti
les
pop
adcb
ss
cwtl
sbb
inc
ss
and
popl
in
pop
out
enter
shlb
xchg
xchg
lahf
xchg
inc
hlt
loop
ret
aad
inc
and
jo
bound
jl
scas
cmpsb
mov
into
xchg
jl
pop
push
sub
sbb
adc
cltd
mov
xor
loope
das
mov
rcl
shl
xor
std
dec
inc
inc
out
arpl
es
and
jb
aaa
addr16
adc
push
shl
shrl
in
iret
outsl
mov
cmp
rolb
xor
adc
pop
lret
cmpsb
xor
inc
aam
xchg
mov
daa
fcoms
mov
push
mov
lret
sbb
leave
push
or
push
popf
fcompl
stos
pop
mov
popa
sbb
popf
not
in
jg
cmp
pop
or
pushf
icebp
or
xchg
push
cmpsl
inc
xchg
in
jl
es
cmp
mov
cmp
lcall
mov
push
jg
into
in
lods
aad
scas
loop
inc
movsl
cmpsl
sahf
lcall
mov
push
mov
test
pop
pop
orl
mov
andl
test
shl
enter
outsl
outsl
push
loop
inc
arpl
add
shrl
push
push
loop
inc
xlat
idivb
enter
xchg
mov
jecxz
bound
sbb
xor
mov
into
aad
nop
and
jne
xchg
and
jmp
aaa
ja
or
cmpb
imul
jp
fisubrs
inc
mov
mov
cmp
stos
and
popa
push
lock
add
out
push
icebp
jns
pop
mov
and
lret
loop
mov
inc
lcall
jae
cli
pop
cmp
inc
icebp
or
inc
icebp
clc
pop
clc
mov
push
pop
xor
xlat
inc
xor
aad
jmp
xor
cld
test
xorl
ret
dec
mov
cltd
jne
lods
pop
subb
sarb
xchg
movsl
arpl
scas
xor
adc
das
and
out
in
adc
inc
clc
xchg
ss
imul
jns
adc
daa
adc
loop
cli
pop
jae
fwait
mov
adc
push
ret
adc
in
pop
jecxz
popf
lret
push
sahf
pusha
xchg
dec
ret
lds
lret
inc
test
lcall
pop
jecxz
iret
hlt
mov
daa
inc
push
ds
outsb
mov
inc
and
dec
lock
lret
movsl
je
pop
scas
mov
std
sarl
ret
mov
shl
and
cwtl
push
popf
xchg
jno
loopne
cmp
es
stc
ja
imul
test
mov
xor
lods
sbb
sub
js
pushf
adc
sub
orl
mov
shrb
flds
or
jno
or
push
sub
jno
leave
cwtl
popa
push
in
jle
mov
test
decl
scas
pop
out
jae
mov
push
cmp
mov
fldt
xchg
mov
sbb
cwtl
in
imul
xchg
jge
mov
sbb
push
out
lock
cltd
xchg
jecxz
lcall
dec
cmp
push
push
inc
or
scas
pop
inc
cmpsl
je
mov
dec
sbb
adc
push
cmp
and
adc
pop
jb
cld
sub
dec
lret
outsb
pmuludq
ror
sub
insb
pop
lcall
adc
jnp
xor
pop
stos
mov
or
outsb
movsl
mov
js
sub
cmp
std
cwtl
fsubl
jno
std
in
mov
je
xor
mov
pushf
push
sbb
fiaddl
pop
sub
pop
mov
lahf
jmp
test
push
mov
mov
sbb
inc
add
out
dec
in
in
iret
cmp
cmp
test
shrb
ljmp
jle
adc
sub
icebp
add
adc
xor
dec
push
fadd
inc
jge
dec
inc
lret
push
adc
or
imul
xor
xchg
pop
ret
lahf
sti
sbb
das
repz
notl
xor
outsb
ret
enter
mov
sbb
cmc
fs
std
cli
imul
adc
inc
or
decl
pop
lret
shrb
je
fbld
sbb
pop
out
mov
inc
or
fsubrl
lgs
inc
test
sbb
push
or
jle
xchg
or
addb
push
mov
jne
or
movsw
jno
out
lods
aas
imul
sahf
inc
aad
mov
fstl
xor
aad
jg
pop
and
rorb
iret
insl
loope
sub
in
lea
rcll
mov
adc
inc
aas
jne
in
xchg
rol
jo
adc
pop
inc
fwait
pop
movsl
sbb
movsb
sub
stos
add
pop
addl
inc
adc
insb
xor
roll
popa
orb
push
popa
add
sbb
stc
lahf
popf
sbb
imul
sub
movq
cmp
push
loop
jne
xor
fsubl
pop
ss
scas
stos
imul
ret
out
ds
push
in
mov
repz
repz
dec
mov
clc
or
jmp
shll
popf
jb
dec
jns
cmp
xchg
adc
scas
add
xchg
pop
pop
pop
sahf
push
adc
push
test
mov
out
pop
xchg
clc
popf
mov
cli
loop
mov
hlt
mov
pop
jbe
inc
add
and
cmpsl
fldcw
xor
mov
fstpl
pop
inc
jge
lret
mov
pop
std
push
sub
int
jne
pop
mov
test
pop
xor
insb
in
nop
push
jno
or
or
rep
adc
xchg
in
int
sbb
jnp
and
fld
push
mov
pop
lret
in
push
clc
and
xor
jne
ss
out
cmp
scas
and
push
pop
aam
and
call
leave
ret
pop
push
pop
jnp
sbb
cmpb
jns
mov
cmp
stos
add
out
xor
jbe
outsb
nop
or
ret
cs
cmp
fwait
or
fsubl
inc
and
in
hlt
jg
je
mov
mov
jbe
lea
fmull
les
lods
jne
adc
cli
bound
inc
outsb
and
sub
ret
cmc
clc
adc
lods
push
movsl
xor
fstcw
dec
fstl
xor
emms
xchg
push
repnz
sti
std
das
mov
popa
das
inc
aad
fmull
and
popf
sub
xlat
leave
lret
loopne
mov
out
cmpsb
dec
mov
pop
mov
or
pop
jo
inc
lret
lcall
dec
sbb
sahf
rcrl
dec
rorb
jecxz
ja
add
lods
addr16
pop
sbb
jno
push
inc
mov
inc
cmp
shrl
ljmp
dec
push
shr
mov
mov
lret
je
add
inc
fisttpl
iret
fcmovnu
mov
mov
jecxz
sahf
out
lods
shll
and
call
adc
mov
cld
mov
xor
ret
test
jg
adc
fs
xor
loop
push
loopne
cld
push
inc
jno
push
sub
adc
ds
loop
lock
loop
mov
sub
or
inc
insl
push
insl
jle
movsb
pop
add
mov
std
ret
add
and
aad
dec
jbe
dec
pop
jae
dec
xor
testl
inc
push
adc
clc
sbb
inc
cs
ljmp
pop
and
mov
lds
pop
fnstsw
xchg
xor
mov
jae
fisubs
addb
rep
fsubr
inc
ss
aad
lcall
cmp
push
mov
mov
lcall
lret
jl
cli
fistps
push
out
jp
int3
push
ljmp
and
inc
out
inc
mov
in
aam
cld
sub
jecxz
mov
insl
and
push
inc
sti
sbb
mov
and
lods
mov
push
mov
repnz
loope
mov
sti
mov
insb
std
lock
push
dec
push
int3
ja
loop
mov
insb
pusha
pop
mov
clc
xchg
popa
testb
inc
cmp
hlt
mov
notl
test
faddp
cmpsl
stos
push
push
push
cmc
dec
pushf
xchg
enter
xor
sbb
and
jg
push
sub
or
std
mov
jge
imul
pushf
xor
out
jae
movsl
cli
movsl
jbe
sahf
push
xor
lahf
ficoml
push
shlb
push
or
adc
sahf
lret
iret
pop
and
fimull
das
pop
sbb
push
jecxz
dec
jg
bound
movsb
inc
lods
cmp
lds
cltd
push
loope
test
inc
jp
cmp
aaa
outsl
jle
std
mov
stos
mull
data16
jmp
in
xlat
xor
rep
cmp
dec
sbb
cs
mov
fmul
dec
add
std
or
sbb
dec
sub
inc
incb
cmpsl
subl
inc
jge
outsb
cmpsl
jb
shrb
sarb
imul
cmp
fnstsw
out
sbb
vcmpss
dec
rorl
push
scas
add
sahf
out
data16
cvtdq2ps
pop
fucom
xchg
test
insl
test
xchg
ret
xchg
sbb
sub
fiadds
enter
popa
ss
dec
aam
fidivrl
dec
shr
jo
pop
xchg
add
xchg
add
cmp
out
std
nop
push
dec
movsb
mov
js
xor
lret
clc
mov
push
cmp
dec
sub
outsb
sub
or
xchg
call
cmp
sbb
mov
int3
push
mov
inc
dec
loop
out
loop
mov
inc
insl
lret
sbb
rorl
ja
pusha
scas
ja
sbbb
push
pop
lods
call
cmp
dec
dec
dec
mov
sub
daa
xchg
outsl
loope
xchg
push
das
loope
add
adc
lds
push
cmc
out
xor
xor
out
sahf
fstpl
into
inc
test
mov
std
jle
test
push
dec
jae
xchg
jmp
in
dec
xchg
or
ljmp
push
add
cmp
insl
jo
jno
or
jmp
jb
dec
and
hlt
pop
inc
or
cld
or
jmp
xlat
es
scas
mov
dec
daa
dec
ljmp
lret
xchg
repz
imul
aas
repz
hlt
sub
push
repz
dec
imul
pop
aaa
cmp
mov
inc
into
xorl
or
rcrl
aam
shll
mov
je
aas
outsb
cwtl
adc
adc
or
sbb
aas
lods
stc
ja
dec
mov
dec
pusha
and
add
or
pop
push
mov
xchg
ret
xor
cmpsb
xchg
mov
inc
imul
mov
add
push
and
insb
adc
adc
in
cs
sarb
sahf
ljmp
pop
jle
mov
mov
inc
stc
lret
fistpll
sub
shl
imul
bnd
lock
lods
dec
dec
inc
jno
xlat
mov
xchg
or
xchg
and
cmp
fs
cmp
popa
pop
push
ret
mov
stos
lock
cwtl
test
adc
cmpsl
repz
adc
lcall
inc
pop
sbb
es
test
sbb
push
inc
mov
in
push
sbb
jp
fdivs
push
jle
aad
xor
push
jo
or
pop
data16
and
mov
sbb
cmpsb
popf
ret
sbb
sbb
int
lods
jnp
inc
and
xlat
fnstenv
jns
xchg
add
loop
es
pop
adc
rol
cmp
jbe
subl
mov
cltd
sahf
mov
or
enter
cmp
icebp
mov
pop
pop
xchg
pop
lock
push
sbb
fidivl
call
lods
push
fnsave
xorl
leave
lea
push
xor
dec
fisttps
out
lret
xor
loop
cs
insb
xchg
lea
cld
and
outsb
dec
mov
dec
aam
cld
pop
ljmp
icebp
andb
mov
arpl
xor
mov
push
mov
orb
dec
pop
sbb
sbb
sbb
mov
movsb
or
stc
and
or
push
out
ret
out
sbb
sti
cltd
loop
xor
enter
dec
xorb
xchg
aad
stos
icebp
mov
arpl
jl
jne
lret
shlb
int
and
sub
ret
cmp
jbe
in
sbb
push
mov
loop
addr16
dec
cmp
ret
mov
data16
push
pop
push
pop
rsm
test
push
clc
xchg
test
mov
dec
lcall
jbe
das
aam
test
mov
fidivrs
subl
in
add
or
push
inc
sti
and
push
rcrb
jecxz
outsl
mov
cwtl
and
or
stos
scas
xlat
cmpsl
or
push
les
dec
imul
pop
fidivrl
fists
ja
push
fwait
cmp
hlt
jae
arpl
mov
add
sbb
jl
pop
pop
push
and
mov
aaa
jo
frstor
mov
add
xlat
pushf
dec
inc
mov
ds
pop
dec
ljmp
rorb
test
imul
inc
cmpsl
xchg
rsm
rcl
mov
add
insl
and
dec
test
bound
add
xor
clc
loope
push
jp
jo
insl
scas
std
psubusw
and
and
pusha
sbb
loope
popl
adc
scas
in
cmp
mov
jmp
mov
mov
and
jle
insl
out
out
lret
pop
jns
push
dec
loop
scas
jbe
aaa
mov
pop
inc
mov
in
repnz
cld
pusha
sub
push
xchg
xchg
mov
pop
aad
xor
bound
xor
dec
stos
rcl
aam
dec
mov
push
faddl
or
scas
push
in
jg
les
xor
mov
push
lret
fildll
bound
scas
daa
pop
iret
push
add
xchg
imul
gs
aam
mov
jnp
dec
lock
mov
in
mov
nop
sbb
inc
or
xlat
out
fstl
mov
jo
xor
and
scas
inc
ja
mov
inc
jg
inc
jecxz
dec
xor
mov
jl
add
clc
mov
cltd
es
lea
imul
cmpsl
frstor
mov
sub
jmp
adc
mov
sbbb
outsl
mov
fistpl
sbb
movl
mov
hlt
sbb
adc
dec
dec
or
cmpb
insl
fcompl
popl
xlat
or
cmc
jl
imul
fsubrs
loop
cmp
push
cld
jg
mov
rorl
popw
mov
add
aam
mov
out
cwtl
repz
loop
subb
ret
push
push
cwtl
jae
adc
mov
shll
add
test
into
inc
xor
and
xchg
loop
shll
repz
jne
mov
adc
inc
scas
int
and
mov
add
or
negb
push
sahf
fsubs
pop
loop
test
jmp
jnp
dec
push
mov
aam
inc
mov
into
int3
mov
mov
pop
push
xlat
or
mov
and
add
sub
sub
test
and
ja
clc
orb
mov
mov
xor
cmc
xchg
mov
cmp
inc
bound
pop
xor
decl
mov
rolb
rcll
add
in
int
cmp
loop
popl
fsubl
mov
les
jae
adc
outsb
xlat
and
mov
fisubrl
sbb
push
push
or
outsb
int
insl
or
pop
mov
popf
lock
sub
adc
popf
aam
sbb
fisubrs
adc
mov
or
daa
mov
lret
add
sub
xchg
shrl
cmp
pusha
and
pop
or
ret
std
or
or
adc
fnsave
cmpl
icebp
in
gs
xchg
scas
sbb
and
xor
icebp
and
add
push
ret
rol
arpl
fisubrl
pop
fldt
push
fxam
xchg
xor
int
jge
fdiv
mov
cmp
pop
mov
cwtl
loop
pushf
scas
aad
jmp
dec
ret
inc
loope
mov
out
aaa
arpl
or
jbe
xor
jnp
pop
adc
fsubr
jbe
xor
dec
lock
pop
out
insb
stc
and
sti
cltd
fdivs
xor
xchg
int3
mov
mov
loop
or
pop
xor
jg
in
movsb
jg
jbe
sbb
and
aas
xchg
and
fidivl
rorl
jg
push
mov
mov
adc
sbb
lcall
mov
adc
sbb
jne
adc
popl
jo
popf
jmp
out
mov
ss
jo
jno
fldcw
das
fldt
popa
push
adc
add
pop
repnz
lock
pushf
lahf
cli
cmp
sub
orl
push
lret
int
imul
enter
adc
loop
xchg
imul
mov
mov
lods
xor
sub
addr16
dec
adc
sub
xor
mov
or
pmaddwd
sub
fwait
jle
loop
jmp
std
mov
xchg
mov
xchg
mov
and
mov
into
xor
lret
dec
jp
test
jne
ljmp
inc
popf
cmp
cld
mov
ret
repz
andb
cmc
sub
leave
mov
cltd
mov
sbb
mov
and
in
gs
or
mov
sbb
lret
test
popa
movsb
cli
daa
mov
sbb
sub
lret
cmp
ret
xchg
jge
ljmp
scas
aas
fcom
cmc
pop
inc
and
push
and
mov
jne
add
mov
sbb
mov
mov
jno
ficompl
cmpsb
dec
xor
mov
adc
jge
jo
mov
mov
into
scas
js
cmp
scas
add
sti
sub
inc
arpl
sbb
shll
scas
and
mov
sbb
stos
dec
xor
adc
aaa
push
jmp
les
in
mov
dec
pop
or
cmpsl
mov
sti
hlt
xchg
adc
outsb
pop
jnp
stos
or
cmp
cmpb
imul
lds
loopne
pop
or
mov
push
pop
inc
sbb
push
and
hlt
mov
sub
ret
inc
in
clts
sub
adc
xor
jo
into
pop
xor
fs
in
push
es
fwait
pop
divl
mov
cs
jne
out
xor
sbb
add
gs
lret
mov
or
add
cmpb
fucom
sbb
mov
jns
cld
loop
cmp
lods
les
dec
mov
push
sbb
push
pop
outsl
or
out
cmpl
sbb
push
jge
sbb
jl
adc
mov
insl
push
adc
push
mov
xchg
daa
inc
push
jns
or
std
popf
cmp
adc
mov
stos
into
mov
or
adc
jnp
mov
jnp
popa
fst
push
jp
shl
pusha
adc
loopne
mov
mov
jge
int3
jbe
pushf
sbb
mov
lods
mov
adc
cmc
inc
mov
shl
dec
dec
mov
sub
add
out
push
jg
cmpsb
mov
jne
or
ja
mov
sbb
loope
daa
pop
shlb
hlt
cmp
out
ja
xchg
aas
pop
loop
cmc
jge
pop
lock
xchg
dec
or
int3
pop
cmp
dec
psubusb
push
cli
leave
jo
dec
mov
push
jno
es
mov
aam
addr16
fimuls
push
inc
jae
cmp
fisubrs
ret
pop
ficoms
fistpll
fmuls
shl
jmp
int3
in
push
enter
sub
sbb
syscall
ds
pushf
dec
mov
mov
cli
jne
into
sub
and
sbb
xchg
pop
jae
je
xor
pop
ds
jns
mov
xchg
cmp
or
jnp
ja
mov
test
adc
cmpsb
hlt
jo
addl
mov
mov
jnp
test
bound
pop
mov
mov
pop
shrb
dec
xchg
or
call
nop
adc
xchg
data16
shl
mov
push
ret
pop
sbb
push
imul
mov
pop
ljmp
add
es
adc
mov
push
das
sti
inc
push
add
push
movl
jno
leave
lods
arpl
out
je
mov
movsl
scas
mov
dec
lahf
rclb
lret
dec
xor
lods
adcl
das
loope
mov
mov
mov
mov
mov
jp
arpl
pop
pop
or
push
arpl
fidivs
adc
aad
sbb
stos
ljmp
repz
xchg
stc
imul
mov
decl
add
std
push
cmpl
arpl
test
leave
in
out
into
and
nop
mov
in
lret
add
push
adc
popf
xchg
test
pop
xor
mov
xchg
js
jbe
mov
push
xor
or
jae
jp
outsb
mov
insl
mov
inc
push
jmp
adc
mov
pushf
push
es
cmp
add
iret
pushf
test
dec
jg
stos
scas
jo
ja
mov
cmp
or
jns
insb
mov
lret
hlt
jmp
fsubrl
repnz
lret
and
or
rorl
es
hlt
sarb
and
add
mov
add
clc
xchg
sbb
jecxz
cli
pop
mov
xlat
clc
imul
addr16
xchg
push
mov
and
fidivrs
sti
cmp
or
ffree
daa
in
sub
jecxz
pushf
pop
aaa
incb
cmp
xchg
insl
mov
loope
loope
in
in
pop
or
and
scas
pop
scas
mov
lret
ret
sbb
ss
jge
sbb
in
sub
push
into
aaa
xchg
push
dec
shrb
iret
push
cmc
pop
leave
mov
jle
push
ds
stos
fdivl
dec
jle
mov
je
push
xor
clc
add
push
dec
jl
pushf
sub
rcll
or
leave
cmc
fnstcw
cmp
int3
data16
sub
push
pushf
mov
loop
js
and
aad
mov
adc
sub
cs
addr16
push
xchg
mov
gs
add
lods
cli
cs
and
mov
jge
into
lret
popf
lods
cmpsl
inc
mov
cmp
push
sbb
aam
or
clc
push
jno
and
push
xlat
das
adc
orl
sub
xor
shr
pop
inc
sbb
cmp
repnz
and
sub
fcoms
push
xlat
in
stos
repz
sub
lret
sub
and
fmull
cmpsl
jnp
sub
push
jmp
xchg
lcall
les
xchg
pop
mov
inc
cmp
sub
addr16
mov
mov
mov
jnp
dec
je
adc
mov
jle
sahf
fstl
inc
imul
push
pop
imul
xchg
rorb
pushf
hlt
pop
and
or
pop
mov
push
sub
xlat
adc
in
sbb
dec
bound
pop
mov
mov
into
clc
adc
test
add
and
mov
pop
mov
sub
test
insb
mov
frstor
ret
fwait
add
mov
dec
rorl
lahf
popa
out
mov
push
mov
or
jb
push
scas
mov
push
aad
int
lods
cs
pop
sbbl
dec
hlt
mov
fsubs
popf
pop
insl
push
orb
mov
cmp
cld
leave
bound
pusha
push
jne
adcl
dec
repz
sbb
jo
sbb
pop
jns
decl
or
sub
mov
repnz
mov
or
push
idivl
pop
mov
or
inc
sub
adc
push
fdivrl
test
out
in
fisttps
jne
aaa
inc
mov
mov
pop
int3
fmulp
stos
pop
push
inc
in
jp
daa
and
sub
cmp
jmp
test
lcall
cld
data16
xchg
or
aad
es
dec
negb
mov
hlt
notb
jecxz
mov
cmp
movb
ljmp
es
and
pushf
xor
push
pop
call
mov
sub
pop
pushf
out
mov
stc
std
mov
pop
idivb
sarb
out
add
jmp
test
mov
hlt
mov
sub
jecxz
inc
jne
addr16
adc
imul
mov
jmp
mov
and
push
adc
xor
cmpsb
mov
dec
aam
sub
add
outsb
imul
add
roll
call
movsb
pushf
das
inc
and
jb
cmpsb
pop
aaa
xchg
std
mov
je
cmp
and
fistpl
ret
out
test
aaa
in
cld
lods
orb
cwtl
sbb
sub
testl
cltd
inc
and
hlt
dec
cmp
and
sbb
shrl
aam
cltd
push
jmp
pop
inc
adcb
fdivp
adc
adc
rcrb
mov
lds
loopne
aas
cmp
bound
xchg
dec
je
xchg
mov
ficoms
fs
push
adc
mov
fisubl
add
or
movsl
sbb
or
fs
xchg
inc
jge
sub
mov
mov
add
jns
add
fildl
lahf
push
inc
test
call
cmpsl
sbbb
fsts
cmpsl
ret
in
pop
call
cmovo
iret
cmpsb
mov
xlat
cmp
or
popa
add
push
cmpsb
shlb
daa
inc
rcrb
es
mov
pop
sahf
dec
negb
cmp
sbb
rcr
test
mov
call
dec
mov
test
add
pop
jae
mov
sbb
rclb
xor
add
jne
lahf
mov
aaa
test
mov
out
and
and
stc
leave
xchg
mov
jle
inc
xchg
push
mov
add
sarl
xor
call
and
push
mov
cwtl
adc
jge
mov
jnp
bound
clc
into
xor
and
push
mov
push
les
pop
mov
inc
mov
cmpl
sub
dec
in
push
rcrl
inc
jmp
aam
repnz
xchg
int3
pop
sub
lcall
sub
push
and
sub
sub
sub
rcrb
mov
add
setae
jmp
push
dec
cld
loopne
push
sub
dec
cmp
xor
xchg
leave
std
stos
mov
je
pop
or
outsl
sbb
push
out
inc
divl
sbb
inc
and
push
out
popf
insl
pop
repnz
daa
icebp
mov
stos
jmp
ja
icebp
pop
dec
pop
push
ss
into
push
inc
xchg
mov
mov
push
mov
movsl
lods
inc
shll
bound
xchg
repnz
lcall
mov
bound
cmc
push
out
aaa
orb
and
sub
cld
je
aad
and
aam
fmul
and
lret
lcall
cmp
cwtl
cs
mov
xlat
daa
push
or
enter
scas
cmc
aaa
sbb
imul
popa
xadd
mov
addr16
xor
lret
fstpl
cld
xchg
mov
ret
push
sub
dec
stos
sub
gs
adc
sbb
icebp
mov
shrb
ljmp
push
jmp
jnp
lahf
jg
mov
inc
push
jne
xor
add
adc
push
or
push
sbb
pushf
dec
shll
adc
mov
adcl
imul
loop
iret
out
popa
mov
mov
nop
or
cs
sub
fldl
adc
iret
xchg
cmp
sub
xor
cmp
popa
mov
out
jmp
ljmp
jne
push
cmp
sub
inc
inc
ljmpw
mov
mov
push
aad
and
pop
pop
adc
or
adc
xchg
and
inc
stos
ds
xchg
mov
sbb
in
cmp
in
ss
pop
adc
pusha
inc
enter
gs
hlt
adc
xor
mov
cmp
je
jge
adc
mov
add
pop
jns
sub
sbb
rorb
mov
pop
mov
push
jl
adc
xchg
fidivrs
xchg
lock
aam
inc
xchg
lds
mov
pop
outsb
cmp
enter
mov
dec
sbb
xorb
push
cmp
mull
jns
xorb
push
add
mov
jmp
jl
imul
out
loopne
sub
push
movsb
loop
dec
arpl
jecxz
inc
inc
out
mov
lds
ss
mov
push
pop
pusha
mov
iret
mov
roll
repnz
std
inc
jg
pop
mov
sahf
mov
rorl
inc
test
ja
stos
popf
or
jns
mov
fcomps
arpl
subb
xchg
mov
leave
lods
jmp
cmp
gs
xchg
inc
cltd
dec
push
pop
pop
pushf
mov
pop
mov
xchg
inc
inc
aaa
xlat
cmp
fadd
jae
es
lahf
daa
call
push
out
xor
imul
pusha
mov
cmovae
leave
rcrb
xchg
pop
test
ss
jnp
arpl
cmpsl
mov
jno
iret
aas
xchg
loop
outsb
sub
icebp
cmp
sahf
pop
jo
or
xchg
jmp
mov
test
movsb
imul
push
inc
lret
mov
push
pop
mov
pop
push
lcall
imull
add
dec
mov
or
jae
pop
fiaddl
jmp
das
inc
sbb
pop
lds
stc
pop
xchg
adc
iret
out
hlt
scas
je
adc
mov
pop
sub
lods
lock
rol
jno
call
out
arpl
call
inc
lods
jne
jb
push
ljmp
adc
arpl
inc
add
jae
jmp
mov
out
sbb
popa
cmpsb
xor
inc
push
cwtl
cmpsl
sub
push
movsb
repnz
push
inc
pop
jb
pusha
xor
notb
outsb
push
jnp
cmp
lds
xchg
ljmp
pusha
jmp
push
jbe
test
ss
jne
fsts
out
arpl
cmpl
lret
aam
mov
lea
icebp
push
sub
push
scas
xchg
jnp
add
call
push
ljmp
cmpsl
les
inc
mov
sbb
mov
xor
pop
push
and
and
ljmp
or
add
sarl
fisubrs
dec
sarb
jo
cld
xchg
mov
int3
or
js
jmp
jl
pop
mov
imul
jge
lret
sbb
cwtl
jns
gs
add
idiv
push
ss
stc
sub
clc
push
and
sti
push
repnz
dec
sub
mov
mov
jge
or
cmc
sub
insb
add
mov
insl
stos
fisubl
jae
lock
push
push
insl
and
je
inc
lcall
xchg
mov
inc
pusha
jle
dec
jno
sti
cmp
outsl
add
pushf
or
test
out
fdivl
xchg
sarl
fldl
jns
jae
xor
and
movsb
xchg
mov
pop
push
push
out
into
pop
jns
idiv
cltd
adc
repz
loop
sub
mov
mov
gs
and
and
fwait
mov
xlat
lods
dec
mov
dec
je
test
cmpb
mov
lea
mov
out
or
sub
repz
push
ljmp
nop
cmp
dec
jmp
jmp
rorl
into
dec
adc
inc
pop
mov
out
stos
call
into
fstpt
inc
nop
push
lods
sar
bound
pop
push
or
mov
inc
insb
fidivs
rcrl
shl
cwtl
dec
sti
dec
jo
lcall
adc
pop
sub
mov
jecxz
rcrl
sub
fisttpll
imul
mov
sbb
push
stos
in
or
inc
pusha
add
hlt
mov
jmp
sbb
ja
int
push
jg
add
sbb
inc
mov
mov
lds
mov
lret
dec
mov
pop
js
mov
in
and
ds
pop
orb
jmp
xchg
test
cmp
dec
add
jg
sub
adc
mov
xchg
adc
fmulp
sub
nop
sub
push
sbb
mov
xor
jle
outsb
repz
ja
add
jno
into
mov
popa
sarl
cli
dec
ljmp
ljmp
push
rol
mov
enter
fmuls
sbb
fcoml
je
arpl
daa
insb
mov
xchg
xor
dec
stc
sbb
shlb
sub
test
jae
in
cmp
pop
mov
pop
jl
push
mov
dec
mov
mov
insb
mov
mov
clc
xor
ds
mov
xchg
add
iret
cmp
inc
add
jns
push
aas
sbb
stc
xor
in
mov
clc
sub
ja
stos
hlt
imul
push
push
push
ficomps
mov
pushf
mov
sahf
mov
pop
push
inc
sbb
leave
sbb
incl
test
stc
jmp
add
xchg
in
pop
add
jp
mov
fcompl
mov
inc
dec
mov
jp
pop
pop
dec
pop
popa
repz
int3
rorl
cld
add
mov
dec
insb
xor
enter
push
mov
icebp
movsl
in
or
jg
insl
shrl
mov
out
sbb
lock
ret
cmpl
add
xchg
or
mov
push
mov
leave
jno
out
fbstp
mov
pop
mov
fdivs
pop
movsl
pop
push
add
div
jle
sahf
sbb
add
cwtl
adc
cli
mov
ljmp
sahf
push
mov
fsts
adc
add
and
mov
lahf
mov
mov
xchg
and
mov
test
cmc
jge
pop
jne
rclb
insl
repnz
add
pop
insb
in
repz
test
sti
pop
inc
insb
sbb
jb
and
iret
int3
ljmp
jmp
adc
incb
icebp
xor
pop
or
rcll
roll
pop
push
jge
inc
xchg
xchg
pop
mov
repnz
dec
xchg
push
jno
lock
inc
rol
jmp
cmp
sti
fwait
push
shld
add
or
in
jl
sbb
jle
inc
cmp
jge
nop
test
and
arpl
pop
sub
xchg
stos
scas
adc
cmp
dec
cmp
leave
dec
leave
add
sbb
cld
mov
aam
sub
ret
xchg
nop
inc
or
ja
shl
mov
inc
pop
nop
data16
xchg
push
rclb
xor
test
xor
pop
mov
addb
insb
sahf
in
lds
mov
fs
jp
stc
fbstp
pop
roll
or
mov
xchg
push
push
jp
xorb
and
out
out
sbb
jecxz
popf
movsb
cmp
ret
aaa
mov
sbb
or
inc
into
jbe
push
xchg
lea
push
test
bound
arpl
test
repnz
sub
fadds
bound
int3
and
sbb
imul
leave
sbb
jo
in
roll
jns
push
jnp
in
sbb
and
sbb
pop
cmpsb
cmp
les
es
in
cmp
das
movsl
popf
sbb
xchg
test
test
aas
mov
inc
ret
ss
fisttpl
push
jo
sub
mov
pop
sahf
jp
repz
pop
mov
dec
and
push
add
jmp
sbb
in
out
xlat
adc
pop
clc
mov
lea
mov
imull
ds
cmp
lret
hlt
mov
lret
xor
in
imul
sub
add
sub
imul
sbb
dec
push
push
sub
xabort
orl
cmovno
cli
imul
mov
and
fbld
nop
scas
scas
into
xor
add
sbb
cmpsb
ss
adc
stc
sahf
dec
jno
push
enter
shll
call
mov
jp
das
lret
dec
push
adcb
orb
sti
fsubrl
arpl
pop
testb
xchg
sub
cmpsl
adcl
xchg
and
and
stc
mov
imul
loop
lods
dec
mov
notl
rolb
fwait
sar
gs
cmp
mov
add
mov
aas
push
ret
lret
sti
adc
shll
jl
das
pop
dec
popa
jno
pusha
lods
adc
lods
cli
cmpsb
sub
sbb
cmp
arpl
sub
data16
call
adc
jbe
dec
daa
sub
sbb
xchg
dec
adc
ljmp
ja
jmp
mov
clc
dec
xor
mov
pop
lahf
xchg
andb
ficomps
lret
daa
cld
dec
pop
les
scas
outsl
jp
add
add
mov
or
mov
in
and
lods
fwait
mov
mov
andl
pop
inc
orl
sbb
in
movsl
cmp
lcall
push
popf
sbb
test
paddb
or
adc
jo
jg
fdivr
cmp
pusha
daa
adc
mov
xlat
andb
rol
jg
jno
xorb
or
movsl
inc
xor
fimuls
mov
stos
out
mov
adc
push
fsts
mov
roll
mov
push
scas
push
pop
jl
mov
jmp
sub
sub
jp
cmc
addr16
aas
pop
test
sahf
jle
in
and
or
push
in
cmp
xor
jnp
xchg
enter
add
imul
test
cltd
inc
xchg
cmp
inc
push
ficoms
hlt
jl
scas
mov
inc
test
repnz
mov
out
loope
jbe
inc
cmp
stos
call
cmovbe
repnz
sub
mov
mov
lea
adc
dec
bound
xor
or
hlt
mov
mov
into
add
inc
icebp
dec
mov
stos
sub
addr16
mov
xchg
cmp
fcmovnb
mov
or
jecxz
adc
sarl
mov
inc
aaa
inc
lock
fcomp
rcll
xor
inc
nop
fcomip
js
cmpsb
dec
jbe
push
or
mov
cmp
stos
mov
test
rorl
dec
sbb
mov
mov
lahf
scas
and
inc
dec
fstpt
mov
mov
inc
idiv
mov
imul
sbb
call
daa
push
mov
lea
or
pop
inc
and
aam
xlat
loopne
insb
dec
mov
idivl
mov
test
pop
jp
inc
or
adc
pop
lahf
cltd
je
ss
jle
push
xor
mov
pop
loope
xchg
sub
mov
sbb
icebp
mov
push
outsb
dec
leave
out
sbb
jmp
dec
std
lods
dec
shlb
fldt
xchg
inc
add
or
loop
add
and
or
sub
adc
adc
mov
xor
divl
sbb
inc
mov
fsubrs
sbb
dec
inc
push
xor
cmpsb
or
xchg
jmp
and
mov
pop
aad
adc
cmp
mov
sub
pop
rcll
sub
testb
and
mov
fidivrs
mov
xor
pop
bound
sbb
xlat
xchg
sbb
lods
roll
xchg
out
leave
xchg
in
inc
xchg
in
leave
adc
adcl
repz
jne
aad
sti
jle
rcrl
fisubrs
pop
dec
out
cmpsl
lcall
mov
out
xchg
hlt
test
dec
push
repnz
mov
push
es
mov
hlt
sub
repz
arpl
mov
cli
sbb
std
ss
add
mull
movsb
ret
push
jg
mov
rcrb
xchg
mov
mov
dec
out
ret
and
loop
movsl
cltd
sahf
roll
sub
pop
mov
scas
idivl
jmp
loopne
outsb
dec
loopne
add
dec
xor
dec
mov
js
flds
xor
push
inc
int3
mov
lret
sbb
int3
cmpl
jecxz
mov
add
jle
fcmovu
and
or
add
jo
xchg
adc
pusha
dec
and
ja
push
mov
in
movsb
inc
add
cli
js
outsb
ret
mov
lcall
cmp
scas
test
pop
shl
js
subb
pop
out
and
gs
sti
add
imul
movsb
push
or
dec
mov
aad
lcall
rol
inc
mov
jno
je
push
ret
mov
mov
mov
sarl
push
loopne
sub
dec
test
cs
cmp
cli
jp
cs
cmp
imul
jmp
mov
push
roll
test
fs
aas
inc
adcl
movsb
adc
stc
sti
xor
ja
adc
adc
dec
jnp
xchg
fs
inc
scas
loopne
imul
and
ror
imul
ror
xor
or
push
dec
outsb
cmpb
hlt
pop
push
mov
test
insl
addr16
adc
add
pop
xchg
lock
push
jns
pop
lret
dec
out
loope
pop
adc
imul
jecxz
pop
sub
cmp
xor
pushf
jge
xchg
and
jae
mov
addr16
push
mov
sub
xchg
pop
sub
push
pushf
hlt
ja
in
rol
mov
and
add
mov
out
aaa
je
fcomi
mov
dec
mov
cwtl
popa
mov
pop
inc
sub
testb
dec
jg
add
scas
mov
fidivrs
jle
fdivr
fyl2x
mov
es
stos
sub
out
scas
loope
sbb
in
or
pop
loope
jne
lods
xlat
mov
or
ret
jecxz
and
mov
pop
inc
out
push
call
sbb
push
jae
push
scas
jno
add
je
out
popa
insl
cmp
aam
sahf
nop
pop
and
in
xor
pushf
addr16
stc
sahf
cmp
jb
daa
and
lds
xlat
add
or
pusha
clc
push
das
orl
push
dec
and
pop
dec
xor
xchg
push
mov
pusha
mov
push
scas
leave
dec
mov
std
add
dec
sub
pop
faddp
jo
jle
jle
into
in
loope
mov
out
arpl
jge
fbstp
push
aad
mov
cli
mov
pop
and
dec
xchg
sar
mov
mov
fcoml
mov
push
mov
jmp
xor
adcb
enter
cs
test
mov
call
hlt
in
push
es
out
push
fidivs
adc
out
int
lcall
rcrb
ljmp
add
mov
out
adc
inc
adc
test
inc
push
sub
sahf
mov
xor
mov
sub
call
mov
sub
mov
mov
je
jge
mov
jl
push
outsb
push
jecxz
mov
mov
ret
test
addr16
repnz
push
lods
sbb
in
or
test
or
sub
int
shll
scas
lret
or
in
dec
xor
push
xor
out
and
aam
fwait
inc
add
out
pushf
adc
xor
xor
dec
mov
add
cmp
inc
movsb
loop
bound
sbb
cmp
mov
movsl
in
fstps
pop
mov
add
inc
push
lock
push
pop
out
inc
xor
daa
les
xchg
in
jo
mov
add
push
shlb
mov
or
jle
add
cmpsb
out
push
inc
test
pop
js
jp
in
mov
fwait
mov
push
ret
pop
jb
imul
mov
mov
inc
test
aaa
or
into
jmp
xor
and
push
cltd
in
jnp
loope
inc
xchg
stc
xchg
scas
addr16
pop
test
add
jno
jmp
icebp
sbb
push
dec
test
verw
loop
jbe
mov
and
mov
pop
lahf
out
xchg
out
cs
and
sti
xchg
aam
sub
or
sti
inc
pop
mov
xchg
mov
mov
or
sbb
daa
add
fcoms
jo
sub
cwtl
mov
xchg
shrb
sbb
out
fld
cli
push
movb
ljmp
addr16
fstpt
adc
in
mov
sub
call
test
stos
add
or
sub
add
xor
push
fs
roll
iret
les
dec
test
xchg
out
jmp
push
inc
aaa
aad
and
dec
add
cmp
push
sbb
mov
and
fisttpll
and
push
dec
es
mov
jmp
or
xchg
push
call
ret
das
xchg
aam
or
cltd
xor
add
adc
test
imull
pop
jnp
xchg
fcompl
lahf
icebp
jg
push
or
arpl
lret
push
imul
mov
out
lock
push
imul
addr16
pop
jb
loop
stc
ficomps
lcall
mov
pop
pop
mov
and
jbe
dec
les
divl
push
lret
dec
sbb
jo
std
in
inc
xor
xor
jnp
mov
sbb
add
xchg
and
sub
movsb
mov
cmp
mov
push
push
mov
and
sbb
fwait
cs
cli
ljmp
lahf
mov
jmp
cwtl
mov
jle
call
push
daa
and
xchg
scas
add
pmuludq
inc
mov
mov
dec
cmpl
ret
sbb
in
stc
cmp
lock
or
out
cmp
xor
loopne
gs
adc
sbb
pop
add
push
pop
mov
out
lret
pop
int3
fmull
popa
cmpsl
pop
adc
sti
mov
or
cmp
pushf
push
inc
mov
fistps
xor
out
jne
sbb
mov
loopne
dec
stc
imul
addr16
pop
int
xor
xor
pop
mov
pop
add
adcl
xchg
stc
orb
add
mov
inc
stos
sbb
sbb
loop
sub
fwait
shr
int
popf
hlt
mov
adc
in
cmc
adc
dec
cmpsl
in
mov
cmp
stos
stos
int
dec
sbb
std
insb
test
mov
push
fwait
mov
cmp
repz
sub
inc
dec
jmp
cmpsb
jno
int3
xchg
sbb
mov
movsl
push
pop
insb
cld
iret
mov
cmp
push
pushf
stos
xchg
pop
dec
jbe
mov
std
fst
test
imul
imul
test
es
cmp
movsl
out
and
xor
cmpb
sbb
icebp
popf
popa
pop
clc
push
repnz
xchg
xor
jge
mov
lret
fwait
and
rcll
addr16
mov
imul
out
mov
cmp
pop
adc
cmpsl
push
sub
fmuls
lcall
or
daa
imul
pushf
int
idivb
mov
loop
dec
sbbl
xor
cmc
std
xchg
fwait
push
sbb
push
or
xchg
arpl
mov
les
lds
outsl
jg
sbb
repnz
mov
xchg
rcrb
notb
pcmpeqb
stc
jle
mov
xchg
jp
ret
cmp
lcall
insl
jp
or
shlb
mov
and
jbe
repnz
aad
mov
jmp
push
dec
repnz
scas
or
dec
es
xor
mov
std
ret
ljmp
adc
cwtl
sbb
int3
or
xor
dec
fnsave
outsl
cs
arpl
sub
adcb
enter
mov
jb
jns
cmp
mov
jle
adc
stc
xor
mov
loope
repz
shll
int3
pop
mov
fstps
sbb
loop
dec
adc
fwait
pop
imul
shlb
sub
inc
push
or
pop
daa
fldt
xchg
adc
mov
pop
repnz
lea
mov
mov
mov
test
or
frndint
sub
jle
cltd
inc
push
popl
add
and
pop
bound
imul
insb
mov
in
test
fstpl
leave
lret
lods
fisttps
test
out
cli
int
cld
adc
pop
sbb
mov
adc
mov
test
xchg
lods
cmp
xchg
push
ljmp
loopne
mov
xchg
or
jbe
pop
ja
jbe
hlt
adcl
out
or
cmp
and
call
mov
mov
dec
cmpsb
mov
dec
mov
xor
imul
add
sub
sbb
aad
popa
jb
sahf
or
test
and
inc
popa
inc
or
mov
or
hlt
pop
sarl
xor
out
pusha
cmc
fiaddl
mov
jmp
in
out
fistpl
lahf
aad
mov
cmp
enter
test
sbb
sub
into
sbb
pop
xchg
inc
sub
lds
nop
xor
mov
jne
shll
hlt
adc
cwtl
adc
xlat
es
and
jp
push
ja
cmc
jno
sbb
into
adc
mov
movsl
mov
add
sbb
vmwrite
pusha
push
rcl
push
mov
inc
jecxz
and
xor
loope
add
incl
lds
mov
ret
in
add
js
gs
aaa
xor
cmp
dec
adc
inc
cmp
sbb
sbb
pushf
ds
and
in
add
or
mov
stos
imul
jle
mov
sub
icebp
xor
imul
xlat
inc
imulb
pop
bound
mov
mov
fildll
test
into
movsl
add
mov
mov
data16
sub
pop
inc
mov
cmpl
rcrb
inc
outsb
jb
cmpsb
adc
out
pop
sahf
ja
add
push
divb
xchg
mov
inc
mov
mov
add
aad
lods
pop
dec
stos
pop
addl
pop
dec
cmc
xchg
and
lods
jb
and
lret
jge
sub
sub
stc
sub
mov
lret
mov
xchg
sbb
shl
ss
gs
mov
scas
push
mov
dec
lcall
test
sbb
xor
lcall
cltd
add
call
dec
inc
mov
mull
movsb
ss
adc
movsl
and
or
jmp
loope
or
fimull
pop
movsb
sub
jae
test
dec
xchg
stc
movsb
cmc
jge
jb
imul
fiadds
cld
lds
pop
pop
iret
cwtl
dec
dec
jge
cmp
fwait
push
jae
mov
add
adcb
fdivrl
repz
xor
addr16
pop
push
iret
fsubr
ss
cld
lea
mov
leave
andb
mov
jns
test
mov
jo
push
jg
ret
sub
je
insl
arpl
leave
dec
pop
int3
ds
sbb
adcl
popa
xchg
sbb
sub
mov
fildl
ret
adc
in
imul
pop
xchg
call
out
xchg
and
jmp
mov
inc
enter
sub
and
xchg
xchg
jnp
and
and
sbb
sti
mov
bsf
ja
scas
cltd
or
dec
loop
fstp
stos
fnsave
xchg
je
lods
das
sahf
inc
out
xor
xchg
negl
imul
scas
repz
das
outsb
xchg
cmpsl
ficoms
sub
loope
ss
nop
or
pop
mov
pop
jp
pusha
mov
int3
je
call
xor
int
mov
in
fldcw
rep
cmpsl
fcom
test
jne
repz
mov
scas
push
in
add
addl
pop
clc
or
into
mov
cld
loopne
loop
shll
cmpsl
fdivl
pop
dec
rcrb
mov
cmc
lcall
subl
and
js
push
or
maxps
push
mov
mov
or
jl
aas
in
js
jnp
push
scas
cmp
cld
test
insl
ds
add
jb
stc
pop
cmp
mov
mov
pop
je
xorl
scas
sub
cli
enter
or
xchg
cmp
mov
cmpsb
push
mov
xor
cmp
jae
ljmp
ja
mov
mov
jl
into
scas
mov
sahf
frstor
adc
ja
mov
frstor
aam
movsb
xor
jge
sbb
in
popa
xchg
push
shll
dec
sbb
sub
cmp
sub
pop
push
adc
mov
xlat
sub
mov
pop
mov
adc
not
inc
insl
fs
repnz
orb
jne
inc
andl
insb
sub
dec
sub
or
subb
js
dec
loop
ret
test
jmp
push
imul
loope
sbb
and
stos
dec
out
fnsave
rol
js
cli
pop
ljmp
or
out
cmp
adc
addr16
insl
push
out
xor
dec
js
mov
sbb
push
push
jae
mov
add
sbb
sub
fnstsw
dec
cmp
pop
leave
int3
xchg
adc
add
pop
mov
jb
jo
imul
and
adc
stos
fidivl
push
mov
cmc
aad
inc
xchg
or
fcomi
lods
pop
leave
loopne
dec
fnstcw
fcompl
neg
adc
cltd
repz
shlb
xor
xchg
sub
aam
mov
jl
lcall
insl
fldenv
mov
pop
fstps
in
add
adc
mov
pop
mov
jmp
test
mov
iret
mov
pop
mov
nop
pop
test
adc
movsl
adc
push
cld
cmp
jne
mov
insl
imul
xor
inc
mov
and
mov
lcall
sahf
xchg
int3
pop
ror
xchg
sub
mov
add
push
rcll
and
mov
xor
fisubl
cmc
cmp
lahf
add
push
aam
stos
jb
xchg
mov
push
dec
es
loop
ret
movsl
clc
imul
fdivs
sub
jbe
fisttps
mov
test
pop
sub
adc
test
push
jp
mov
aas
fsubs
cmp
stos
lods
lahf
mov
lea
imul
cwtl
push
xor
xor
or
divl
and
mov
shlb
cmpsb
pushf
jp
sbb
dec
ficompl
mov
sbb
push
or
xchg
pop
cld
mov
pusha
dec
repnz
sub
pushf
cmpl
movsb
lock
mov
mov
mov
dec
jle
cmpsb
or
testl
sahf
mov
xlat
or
xchg
sub
mov
add
or
hlt
rcll
push
adc
aam
add
push
shl
pop
jns
jno
mov
rorl
call
fstpl
repz
mov
sbb
fs
fisttpl
sti
movsb
pop
or
xchg
sti
fmuls
aas
push
push
mov
push
adc
int
cmpsl
inc
push
push
pop
sahf
dec
jns
pop
xor
enter
movl
sbb
rcrb
jo
cmp
aad
jns
jle
xchg
popa
sbb
dec
xor
jno
cmp
cmp
idivb
inc
orb
cmpsl
mov
sub
and
rcr
shrl
in
pusha
push
pop
rep
add
dec
test
popaw
sub
jb
and
inc
jecxz
daa
shll
movsl
adc
jp
sbb
in
ret
aad
or
mov
sub
cmp
jnp
mov
and
mov
xor
imul
or
mov
int3
cltd
in
cmc
aam
push
push
mov
int
lahf
stc
dec
scas
mov
and
fisubrl
jns
aam
mov
inc
jbe
jae
add
stc
jns
cmp
pop
jns
dec
rorl
loopne
jl
das
lahf
dec
out
shrl
pushl
mov
test
mov
and
nop
mov
clc
xchg
or
fcomps
ljmp
ret
sbb
mov
imul
std
mov
outsl
pop
mov
sahf
je
stos
or
xchg
xor
js
inc
divb
or
fsts
lds
xchg
cmp
rclb
ja
cwtl
aaa
jg
sub
dec
jmp
lock
div
iret
dec
xchg
jbe
shll
icebp
fcmovbe
pop
sub
jge
sbb
cwtl
or
pop
clc
aaa
pushf
cmp
ss
adc
or
xchg
mov
adc
fmull
rclb
arpl
ss
inc
and
fisubs
lock
jp
inc
mov
add
ja
add
push
push
mov
pusha
in
mov
jge
and
or
sub
out
xor
mov
adc
mov
outsb
xchg
cmp
mov
ss
adc
adc
leave
sbb
imul
fdivr
or
push
ror
loopne
out
lea
mov
int
mov
or
pusha
sbb
ja
cs
push
mov
ucomiss
push
mov
xchg
lods
inc
dec
shlb
mov
cmp
inc
add
or
and
pop
clc
test
imul
stos
out
popa
xor
mov
leave
mov
ljmp
es
loopne
fwait
xchg
jp
aam
and
push
mov
pop
das
sbb
or
adc
lret
arpl
mov
gs
jmp
inc
dec
jnp
dec
std
daa
das
mov
mov
out
int3
dec
test
sbbb
xchg
pop
popf
outsb
add
inc
mov
xchg
ss
in
xchg
cmp
pop
sahf
test
mov
test
mov
daa
lret
adc
add
or
sti
rorl
sbb
aad
mov
dec
stc
repnz
mov
aad
xchg
test
bound
ret
lock
pop
jns
es
lret
movsl
stos
das
insl
je
stos
add
push
or
sahf
popa
test
lahf
xor
sar
or
adc
pop
xor
sub
out
add
rorl
es
add
das
lret
and
andb
and
cmp
cmp
add
loope
out
lods
jnp
ja
inc
daa
pop
loope
mov
cmp
cmp
cmp
dec
jno
pop
jbe
ret
insb
fwait
mov
movsl
and
pop
jbe
hlt
test
int
xchg
xchg
bound
pop
or
pushf
push
jbe
daa
clc
daa
pusha
mov
mov
movsb
int3
aaa
das
cmp
push
inc
dec
lcall
or
fadd
int
insl
mov
or
adc
dec
shrl
jns
push
fisttpl
xchg
addb
cmp
fcompl
cwtl
and
dec
int
add
mov
mov
loop
sbb
roll
push
mov
pop
shll
jmp
stc
and
push
pop
push
adc
mov
cmpb
push
sti
pop
in
and
push
int3
jp
test
aas
fdivrp
inc
xchg
jmp
mov
sbb
sub
sti
int
movsl
test
dec
or
addr16
push
call
jno
pop
adc
xor
call
cs
mov
jmp
mov
pop
mov
es
push
jg
xchg
sbb
mov
in
xor
lahf
cmp
pop
sarb
pop
fsubrs
mulb
mov
mov
inc
xchg
leave
shrl
mov
or
shlb
and
jbe
sti
iret
fstpl
sub
xchg
mov
mov
jne
jmp
inc
mov
dec
daa
shlb
pusha
fcompl
pop
and
sub
push
repnz
and
out
iret
ds
xlat
inc
sub
test
adc
ljmp
ret
and
into
in
dec
stos
outsb
push
pop
or
jl
pop
pop
psubw
rcrl
cmp
cmp
mov
mov
jo
dec
ljmp
bound
mov
roll
xchg
movsl
inc
mov
mov
imul
xor
cli
pop
daa
js
mov
xchg
jecxz
aaa
mov
outsb
mov
cmp
sub
xor
aas
int
add
inc
negl
cltd
mov
inc
fwait
xor
lret
mov
xor
bound
inc
dec
cmpsb
add
out
pop
scas
outsb
popa
mov
stc
test
mov
ret
jl
jecxz
pusha
out
lahf
jbe
leave
addr16
inc
lds
stos
pop
cmp
stos
enter
arpl
xor
dec
jno
imul
xlat
fcomi
out
leave
sbb
jno
arpl
mov
stos
mov
lods
jae
and
mov
xor
call
push
stos
pop
icebp
xchg
or
clc
shrl
mov
push
push
or
xor
sbb
mov
cwtl
icebp
das
negb
push
xchg
or
insb
sub
scas
out
mov
cmp
inc
pop
adc
jle
dec
movsl
fstps
jl
imulb
das
push
out
nop
and
call
cli
xlat
cwtl
imul
push
or
pop
sbb
ljmp
push
xchg
or
dec
jae
jecxz
out
or
shlb
movsl
jae
nop
test
lea
inc
fmuls
cmp
nop
lods
fwait
xchg
mov
les
dec
fcmovnbe
xor
xchg
inc
xchg
add
cmp
or
adc
ret
pop
xchg
addb
or
pop
mov
add
push
rep
cli
mov
adc
xor
aad
jge
lahf
and
cmp
xor
fsubr
lock
imul
das
mov
ret
fsubrl
stc
rclb
mov
js
iret
xor
dec
sbb
fcomps
or
cmp
cs
outsl
mov
in
popf
sub
add
jbe
xchg
and
pop
in
cmc
add
mov
out
mov
jl
or
out
roll
jmp
mov
int
inc
les
mov
sbb
stc
lock
mov
sub
xchg
dec
test
imul
pop
lods
push
dec
outsb
xor
sub
xor
negl
xchg
fs
push
xchg
jp
int
adc
data16
push
popl
mov
sti
jle
in
dec
fcomps
lsl
mov
mull
aad
ds
mov
inc
rcrb
push
xor
fcomip
into
add
sbb
out
jnp
pop
fwait
dec
mov
mov
push
lahf
or
cmpsb
add
ret
mov
out
enter
xor
or
jecxz
orl
or
xor
repz
mov
jno
int3
imul
ret
inc
test
pushf
or
ja
xchg
nop
jge
mov
jmp
mov
mov
jmp
adc
mov
dec
inc
into
add
add
decl
xchg
cwtl
inc
cmpsb
cltd
scas
test
arpl
add
dec
adc
sbb
cmc
and
push
mov
xor
in
sub
inc
imul
push
sti
inc
popa
bound
aad
stos
xor
loop
dec
mov
pop
icebp
jecxz
rcrl
dec
xchg
cld
dec
repz
cltd
mov
push
in
mov
int3
push
mov
push
dec
xchg
dec
xchg
lahf
sub
shlb
in
stc
ss
and
aad
shlb
mov
dec
jbe
push
mov
dec
mov
aam
lea
push
push
test
lods
stos
mov
insb
ret
lea
test
push
test
sub
pop
imul
xchg
jl
test
loopne
movb
xchg
stc
test
adc
xchg
cld
sbb
out
bound
aam
cmpsb
enter
inc
mov
dec
xlat
pushw
mov
das
xchg
add
and
xor
mov
jne
pop
mull
sbb
inc
mov
pop
test
popa
sbb
sbbb
or
adc
pop
mov
dec
iret
or
inc
ret
mov
xchg
sub
flds
add
sub
hlt
xchg
push
aam
js
sub
xor
mov
adc
popa
mov
into
loopne
ds
hlt
inc
addr16
test
or
add
arpl
sub
inc
cmp
sbbl
jmp
daa
push
lret
xor
roll
cld
dec
in
mov
movsb
ss
loopne
xor
inc
dec
lcall
js
dec
lds
mov
mov
mov
push
or
adc
into
popa
jle
in
sub
add
xlat
jge
pusha
sub
sub
inc
lcall
gs
insl
mov
jae
fwait
repnz
and
xchg
outsl
sbb
in
dec
xor
cltd
jmp
mov
shlb
arpl
addl
outsb
das
push
mov
pop
push
fidivrs
mov
xchg
dec
fs
dec
xchg
cmp
lds
pop
xor
push
subb
inc
loop
push
mov
pop
push
pop
mov
or
rcll
adc
ja
stc
aam
rolb
and
push
adcl
dec
xchg
movsl
jnp
repnz
lock
push
test
jge
jp
xchg
jae
iret
popf
xchg
push
jo
aaa
mov
int3
sub
loopne
lcall
jb
xlat
push
lods
dec
sbb
mov
cmpsb
xchg
xor
je
mov
pop
adc
cld
in
aad
push
mov
inc
imul
add
outsl
jmp
fnstsw
mov
or
mov
imul
inc
inc
popa
pop
outsb
mov
pop
ja
xor
sbb
rcll
nop
inc
cli
imul
add
push
or
dec
mov
push
imulb
mov
dec
mov
mov
inc
mov
lret
idivb
ss
jno
orl
cwtl
neg
sbb
xchg
cmpsl
adc
mov
mov
lahf
out
into
xlat
ja
jbe
popf
cmpsl
loope
or
inc
sbb
jo
jmp
rolb
and
add
xchg
fnsave
movsl
lock
stos
outsl
inc
mov
lcall
jo
adc
push
shlb
cmpsl
pop
xchg
mov
xlat
sub
pop
roll
sbb
ss
sbb
add
aad
adc
shll
jge
scas
shlb
sub
sub
dec
sbb
mov
mov
inc
mov
ret
xchg
inc
cmp
add
lods
or
cmc
push
pushf
lock
mov
adc
cmpsl
mov
sbb
xchg
int
jae
inc
cmp
aas
cmc
outsl
sbb
adc
or
jae
mov
xor
ljmp
fisubrl
lock
jne
mov
pushf
movsb
or
jmp
subb
ror
mov
flds
icebp
sahf
xchg
xchg
fisubl
xchg
lcall
sbb
repz
fucomi
mov
add
stc
dec
lret
push
lret
loope
popf
xor
loopne
jl
pusha
adc
pushf
mov
pusha
mov
ja
cli
and
sbb
sahf
rcll
push
xchg
jae
inc
mov
insb
mov
xchg
pop
xor
movsb
fwait
xor
pusha
adc
mov
jnp
adc
lock
jo
sub
sub
mov
xchg
xor
cld
xchg
fisubl
pop
lcall
loopne
xchg
shlb
out
mov
cld
xchg
scas
push
fwait
cmpsl
sub
in
popf
push
insb
adc
daa
mov
push
push
dec
mov
call
mov
cli
mov
ret
jmp
loope
adc
data16
dec
push
pop
nop
sub
inc
cmpl
dec
fbld
pop
cmp
xor
cld
add
daa
ljmp
test
movb
bound
out
paddq
cmpsb
mov
sub
and
je
in
ss
push
sub
pop
mov
lock
or
mov
lahf
dec
pop
jnp
mov
into
and
mov
xchg
adc
mov
fldt
lret
cmp
dec
sbb
loopne
mov
loopne
sbb
jge
adc
shll
dec
or
insb
call
xchg
shl
pop
inc
cmp
sbb
adc
pushf
and
xchg
in
mov
mov
sbb
xor
ret
mov
pushw
lods
adc
pop
and
adc
sti
icebp
or
pushf
dec
scas
je
mov
cs
fisttps
stc
leave
out
fbld
push
cli
mov
faddl
sbb
lds
or
xlat
addl
jno
xchg
clc
sbb
aas
sub
popf
movsb
mov
pop
push
add
sbb
fyl2x
ret
dec
dec
jge
lds
rorl
mov
mov
xor
xchg
es
push
xchg
std
push
and
sbb
mov
popa
fcmovbe
or
push
out
ja
inc
fists
imulb
in
cmp
loope
xor
mov
call
push
in
rcll
shlb
inc
addr16
outsl
cmpsl
dec
rolb
test
popa
jb
imul
dec
dec
inc
cwtl
sub
test
ja
pop
and
and
mov
std
repz
push
hlt
push
push
xor
or
shl
sbb
jb
rorl
stos
and
aam
dec
mov
rolb
sbb
movaps
ret
aas
or
loopne
in
cmp
cld
test
inc
mov
push
sahf
jmp
mov
adc
leave
adc
adc
ja
pop
movsl
in
mov
sbb
add
loopne
pusha
mov
mov
jl
mov
inc
in
fistpll
pop
push
xlat
lahf
xchg
adc
out
push
or
sub
fildll
pop
xchg
fs
or
int3
loopne
pop
xor
lds
das
stc
push
xchg
mov
mov
js
ljmp
mov
sbb
jne
rcll
xchg
out
xorl
mov
add
sub
imul
jp
mov
adc
jae
repnz
xchg
add
mov
xchg
adc
mov
rcr
in
sbb
lods
jp
push
mov
addr16
loop
mov
adc
fwait
xchg
outsl
cmp
mov
lock
xlat
jle
sti
ss
cwtl
push
mov
loope
in
ret
push
push
das
inc
xchg
enter
and
dec
frstor
fcmovbe
xchg
adc
cld
sti
shl
jge
push
mov
pop
leave
push
add
cli
add
and
sbb
pop
push
adc
inc
push
push
addr16
pop
pop
jnp
cli
or
ficoms
xlat
aaa
xchg
mov
loope
stc
mov
inc
arpl
add
jb
fld
cmpsb
jno
out
fnstcw
daa
adc
test
cmp
fs
inc
cmc
pop
in
out
cmc
mov
jp
test
mov
adcl
jp
cmc
push
add
aas
rorl
mov
rolb
cwtl
xor
sub
pop
faddl
lock
pushf
xor
add
adc
pop
popa
xchg
sbb
xor
fisttpl
cmc
ds
pushf
fstps
incb
add
hlt
push
insl
and
pop
inc
cmpsb
in
jae
je
sbb
hlt
pop
add
xchg
orb
mov
orl
int3
xor
and
rol
jecxz
mov
in
sbb
and
jae
loop
lahf
mov
xor
xchg
loopne
lods
jnp
incl
jl
jp
or
arpl
shl
mov
nop
mov
xor
js
mov
jno
incb
bound
out
pop
pusha
scas
and
inc
lea
xchg
popa
jns
fsubrs
daa
sub
jbe
xchg
cltd
dec
lcall
outsb
xor
dec
xor
das
mov
mov
hlt
enter
mov
stos
mov
sbb
fistl
xchg
mov
scas
pop
in
int
js
mov
xor
mov
sbb
stos
dec
cmp
ds
add
xor
xchg
ret
sub
xor
adc
jle
dec
int
sub
test
xor
jnp
nop
adc
enter
push
roll
addb
xlat
mov
mov
pushf
mov
mov
aaa
es
jge
in
sbb
mov
insb
fbstp
cmpsb
jg
pop
xchg
add
xlat
xor
in
mov
cs
lods
mov
jb
push
or
xor
shll
addr16
ret
cmp
shl
mov
jae
and
inc
ds
fstps
mov
or
pop
shll
int3
mov
push
dec
xor
mov
in
xchg
leave
js
aas
xor
mov
xchg
outsl
hlt
es
fildll
pusha
dec
rorb
xlat
pop
fs
jmp
fsubl
cli
dec
sbb
mov
push
push
iret
sti
mov
push
nop
push
jae
mov
ljmp
lds
sub
push
js
add
mov
pop
mov
add
sub
fidivl
out
int3
dec
jle
loop
std
mov
sub
xchg
push
gs
in
mov
sub
or
cmpsb
popf
push
sti
and
sbb
aad
cmpsl
mov
cmp
dec
mov
aaa
mov
add
pop
jno
outsb
xor
pop
adc
sarl
sub
xchg
dec
mov
dec
add
push
xchg
and
cmp
jmp
xchg
push
andl
adc
lret
cmp
jmp
jne
push
and
repz
xor
fidivrs
adc
cmpsl
xorl
mov
out
cmp
sbb
insl
mov
aaa
test
hlt
cmp
xchg
mov
sub
orl
push
outsl
mov
push
insb
add
xor
lods
pop
ficomps
lret
mov
push
mov
jb
xchg
jo
mov
lcall
xor
add
sub
jmp
mov
push
orl
push
mov
insb
lea
pushf
insl
sub
cmp
stos
inc
jge
push
int3
adc
sub
mov
dec
ss
fidivrl
shlb
hlt
nop
sarl
xchg
xor
rcr
loop
std
mov
ds
dec
call
in
xchg
pop
xchg
xor
mov
xchg
ds
mov
out
push
mov
inc
jl
loop
mov
shll
cmp
es
scas
mov
mov
in
sarl
mov
pop
shll
ret
inc
sbb
lods
mov
and
cmp
das
scas
mov
fs
jo
fidivl
sub
lea
push
test
test
xchg
xchg
loopne
xor
daa
mov
call
in
scas
pusha
loope
xchg
jno
push
push
sub
or
xchg
or
gs
pusha
xchg
sub
cmp
bound
test
sahf
inc
or
dec
push
mov
xchg
aaa
stos
mov
jg
fldl
cmp
mov
or
pop
fs
push
sbb
and
mov
fmulp
sbb
cmc
add
xchg
js
mov
jb
rclb
cmp
loop
adc
jb
mov
or
in
loopne
sahf
cwtl
cmp
xor
add
mov
inc
scas
or
push
fdivl
mov
cmc
dec
testl
fisttpl
mov
jg
hlt
pop
xor
stos
jg
dec
push
rorb
mov
inc
lret
cltd
rorl
add
ret
mov
pop
fdivrs
jg
pop
pop
xor
xchg
or
dec
xor
repnz
and
lret
pop
test
lods
pop
jno
xchg
fsubl
jae
fs
sub
push
cmp
cltd
xchg
lret
js
scas
inc
mov
enter
lock
and
push
gs
mov
mov
lcall
test
roll
fmull
sbb
adc
jne
mov
xchg
mov
mov
orb
sub
jmp
or
js
push
and
cli
icebp
jecxz,pt
mov
mov
add
insb
cltd
shlb
jbe
push
jl
xchg
sbbl
fldl
aam
test
xor
loope
js
aaa
stc
pop
mov
int3
mov
fadds
aaa
sbb
scas
popf
shl
lret
inc
xchg
cli
push
mov
push
inc
popf
mov
sub
push
jp
ret
push
mov
lcall
int3
shlb
aaa
jg
mov
jp
xchg
test
pop
bound
push
daa
xchg
popa
lea
hlt
stc
cmp
movsl
and
lret
push
push
mulb
ficoml
lock
dec
xchg
aas
in
fwait
push
pop
jae
xor
aam
pop
adc
out
lods
adc
push
rorl
stc
in
push
adc
xchg
xchg
cmp
cmp
cmp
mov
das
add
es
adc
dec
jne
xchg
push
fnstcw
push
testb
push
pop
insl
add
cmp
push
fnstcw
outsb
jae
notb
pop
and
mov
xchg
and
mov
dec
sbb
fimull
pop
push
cld
jmp
adc
imul
les
fcmove
popf
cmp
mov
xchg
imul
add
loop
repnz
out
ret
shll
pop
call
out
xchg
sbb
xor
pop
sbb
lcall
sbb
adcb
inc
mov
aas
test
imul
sti
dec
out
jo
test
inc
lods
xlat
push
fdivs
inc
push
std
cmpsb
push
call
push
inc
pop
pushf
add
cmp
dec
dec
dec
and
pop
sub
mov
xchg
scas
xlat
test
cwtl
pop
int3
sbb
jmp
loopne
daa
aaa
test
pop
sub
mov
pop
out
mov
ss
cmp
dec
adcb
dec
data16
jmp
mov
call
pushf
jge
cmc
cmp
sbb
shr
imul
popf
iret
lea
std
pop
and
adc
aas
xor
mov
xchg
sahf
pop
mov
std
mov
dec
mov
or
or
pop
and
mov
inc
add
push
fcoml
jae
adc
jb
sub
adcl
orb
xchg
andl
xor
xchg
in
add
ret
aas
stc
dec
sahf
jo
inc
mov
push
lret
cwtl
sbb
push
jno
out
hlt
in
dec
sbb
push
cmp
dec
daa
shrb
adc
popa
nop
jmp
xchg
push
lods
push
xorb
rorb
xchg
es
pmaxsw
push
or
outsb
movl
and
mov
pop
fldt
in
ret
gs
or
cmp
add
cmp
sbb
incb
adc
cmp
ja
add
push
mov
sbb
bound
test
fisubrl
mov
int3
aam
les
adc
ficomps
mov
pop
scas
mov
jge
insl
add
leave
mulb
sub
lahf
lea
push
ret
dec
rcr
xlat
and
add
adc
push
icebp
lods
mov
mov
cmp
fs
cmp
cmc
push
repz
sub
sub
xchg
jl
sbb
jae
xor
lret
inc
xchg
or
ss
push
mov
test
pop
out
cmp
shll
mov
lret
cli
hlt
fsubl
daa
jnp
cmp
and
cltd
das
jno
mov
adc
and
fldcw
lock
dec
cltd
fs
mov
clc
or
arpl
out
stos
stos
mov
jbe
out
std
pop
and
sbb
xor
rcl
enter
outsl
test
cld
xor
xor
call
xor
scas
xorb
psubusb
ss
pop
jo
bound
dec
xchg
dec
jmp
lcall
dec
jnp
jg
cld
icebp
dec
out
incl
lds
out
flds
je
jns
sub
ror
movb
and
negb
pop
out
aas
nop
int3
add
icebp
ljmp
inc
test
cmp
in
push
cmpsl
jne
pop
enter
sub
cmp
mov
inc
adc
cs
lea
lods
xchg
and
pop
jne
pop
or
into
repnz
imul
mov
mov
mov
es
jne
aam
sub
push
push
data16
adc
mov
test
dec
mov
sub
jne
test
jle
fsts
cmp
shlb
or
pop
mov
rcl
adc
dec
push
sub
into
ljmp
loopne
cwtl
pop
sub
xchg
into
pop
out
jne
xor
arpl
rorl
popa
stc
push
out
push
decb
sub
ljmp
jg
push
clc
sub
jo
jle
lea
loope
mov
sbb
jle
pop
fwait
imul
je
lret
out
mov
in
xchg
mov
or
fisubs
pop
bound
sub
rcll
sbb
and
stos
mov
hlt
insb
mov
popf
repz
vmwrite
xor
arpl
out
ret
mov
add
jb
scas
xchg
cmp
sub
mov
inc
imull
imul
adc
inc
add
and
cmpsb
xor
and
add
add
in
sahf
out
ret
jo
fs
pusha
jg
andb
xor
sub
or
inc
sbb
aaa
fsubs
icebp
dec
clc
inc
inc
test
in
inc
or
rcrb
pop
mov
movsb
xchg
pop
add
xchg
imul
inc
cmc
push
mov
inc
stos
leave
jae
mov
pusha
jmp
inc
aam
test
or
cmp
jns
push
xchg
imul
cs
adc
cmp
aam
sub
dec
out
xchg
outsl
popa
push
jb
dec
mov
jbe
jnp
std
pop
rclb
and
ds
je
dec
lea
iret
sahf
add
adc
mov
pop
loop
loope
bound
mov
ret
shrb
jb
bound
or
out
sub
rcrb
mov
scas
push
in
imul
and
jge
mov
adc
out
xor
ja
add
lock
je
out
and
inc
and
xor
cmpsb
push
xor
stos
jle
divb
in
loope
sbb
xchg
add
pop
jp
test
add
test
push
cmpsl
jecxz
xor
mov
scas
mov
cli
xchg
xchg
ss
notl
out
fucomp
xchg
into
hlt
out
rcr
out
xor
pushf
icebp
cmp
ds
sbb
or
and
leave
add
loopne
cli
lcall
push
add
sbbb
dec
sub
and
xlat
mov
cmpsl
jb
xchg
shrl
xorb
jno
adc
mov
sub
call
fisubrs
jo
jns
roll
pop
ljmp
push
adc
or
jl
repnz
jle
outsl
cmpsb
pop
lods
cmp
push
shrb
es
cmc
and
iret
or
int3
stc
stos
or
push
xchg
jae
jne
mov
shlb
clc
adc
mov
pop
repz
jp
xor
fcom
cli
jb
lods
and
xchg
mov
xcrypt-cbc
cmpsl
push
outsb
xchg
in
cltd
push
inc
popa
fisttps
dec
enter
lret
js
movsb
mov
jns
daa
sub
push
data16
adc
arpl
ja
fsubrl
ja
adc
sub
adc
inc
cli
cmp
adc
push
test
shl
xchg
scas
adc
cld
iret
pop
dec
jne
mov
mov
jg
test
into
mov
imul
into
mov
mov
dec
daa
movsb
dec
push
shlb
jge
xor
sbb
iret
repnz
pop
fcoml
jmp
fmul
scas
add
jb
fistpll
pushl
add
xlat
dec
or
mov
shl
outsl
xor
xchg
mov
pushf
clc
sbb
cmpb
mov
xor
jecxz
push
fdiv
pop
loopne
or
cmp
shl
scas
jbe
jns
mov
fsts
sahf
ljmp
jb
stos
popf
je
cmp
xor
scas
add
je
pop
mov
mov
cmp
jmp
popa
shll
add
jg
pop
pop
lods
je
js
cmp
sahf
or
mov
cltd
imul
cmp
orl
xor
push
jl
jl
xor
movsb
aaa
in
xor
sti
pop
lds
add
dec
xor
fwait
cld
xor
imul
rcl
cmc
adc
pop
cmc
dec
loopne
data16
outsb
jae
scas
mov
add
mov
mov
test
jne
sub
leave
rcr
mov
aas
enter
fildl
test
cmc
xchg
aas
aaa
mov
out
scas
fistpl
xchg
jle
movsb
cmp
push
fldenv
add
inc
mov
inc
xorl
dec
cld
xchg
push
inc
push
cli
xor
test
jge
ret
jecxz
insb
loopew
mov
sub
pusha
xchg
mov
push
dec
cmp
arpl
imul
xor
cmp
insb
stc
sbb
popa
hlt
lds
ret
mov
xchg
xchg
add
int
push
stos
sub
xlat
dec
xchg
mov
jb
push
jecxz
call
sbb
out
leave
xchg
pop
sbb
cmp
inc
sti
and
jnp
add
or
sarb
jmp
cld
jmp
mov
repz
inc
xchg
mov
sub
enter
lods
out
sub
xchg
aad
pop
push
mov
lock
add
xchg
pop
mov
push
dec
cltd
cld
in
add
fnsave
jecxz
add
out
mov
jle
lock
fstps
scas
jb
icebp
mov
lds
adc
lret
pmaddwd
mov
dec
and
shr
mov
mov
adc
inc
mov
jbe
jecxz
pop
cmp
clc
leave
je
sub
xor
leave
inc
mov
cmpsl
scas
xchg
stos
push
xchg
push
jg
push
mov
xorl
in
pushf
ss
jge
adc
xchg
bound
xor
lock
dec
mov
mov
jnp
lods
xchg
in
das
mov
jo
mov
mov
test
rcl
sub
mov
sub
fwait
rcr
push
and
stc
mov
jmp
push
pushf
imul
ljmp
xor
notl
cmp
out
xor
pop
rorw
loop
cmp
xor
adc
out
fldcw
aam
inc
pop
fdivr
cmp
cmpsb
leave
mov
or
xchg
adc
cmp
mov
sbb
fidivrl
mov
jae
push
adc
subl
aas
dec
jne
into
push
pop
pop
mov
lods
loopne
mov
iret
lods
enter
inc
cli
jae
rcr
imul
add
cli
int3
icebp
jno
fsubrs
pop
ficompl
inc
jns
cmp
rcrb
ljmp
sbb
dec
loopne
insl
push
clc
in
sub
jns
aam
lahf
int
or
or
mov
std
lret
push
in
adcb
pop
mov
lods
mulb
mov
xor
lock
cmc
dec
scas
je
sbb
lods
push
mov
fadds
js
dec
ss
or
cmp
xor
stc
cmpsl
stc
lods
lret
push
xor
cmpl
push
pop
xchg
and
mov
cmp
mov
mov
mov
jo
int3
push
outsl
and
push
sub
mov
adcb
movsb
lds
lahf
and
xchg
jp
scas
sbb
into
popa
jp
test
or
inc
lods
xlat
in
push
out
xlat
mov
sar
in
or
leave
jbe
dec
mov
xchg
dec
call
mov
mov
cs
hlt
push
jle
idivb
adc
xlat
out
lods
sahf
stos
and
sub
sub
in
pop
cmp
jecxz
add
shr
pop
shl
into
shl
sbb
pop
mov
or
mov
push
pusha
cmp
pop
popl
lahf
fxch
push
call
xlat
mov
inc
and
aaa
in
in
pop
push
cwtl
mov
popa
das
adc
jns
sti
fs
cmc
leave
insl
and
bound
dec
scas
dec
cwtl
test
dec
daa
and
std
and
fwait
clc
mov
jmp
inc
mov
orl
pop
subl
aad
arpl
stos
cmp
cmpsl
negl
sahf
and
daa
push
adc
cwtl
jne
sbb
and
sub
jge
mov
test
sahf
iret
add
subb
cmp
test
movsl
outsb
adc
loope
jnp
ret
loop
popa
dec
sub
mov
mov
dec
sar
js
call
jae
mov
ljmp
mov
inc
mov
mov
cmpsb
and
js
cmpsb
pop
bound
xlat
inc
scas
sbb
jb
and
pushf
xorl
mov
fistpl
xchg
fisubl
hlt
jle
jno
lahf
outsb
dec
loopne
leave
sbbl
pop
sti
ret
xor
xchg
inc
rorb
movl
pop
and
imul
iret
pop
inc
mov
jns
xchg
xchg
xchg
outsl
test
pop
push
std
sbb
scas
adc
push
cmpsb
xlat
stos
xchg
sub
aam
pop
lock
pusha
dec
cli
pop
cwtl
lcall
pminub
mov
ret
dec
aaa
gs
jle
mov
mov
sub
fsubrp
lods
das
fmuls
jge
pop
mov
push
mov
fmull
inc
mov
dec
xor
int3
push
jecxz
ss
or
add
aam
add
dec
sbb
jo
xchg
sbb
jmp
add
mov
pop
pop
imul
or
sbb
insl
xchg
std
std
sub
aaa
repnz
inc
addr16
sbb
pop
bound
jp
movsl
adcb
pop
ret
adc
sbb
sbb
mov
sbb
adc
cmp
add
mov
sub
and
inc
jecxz
and
push
pusha
popl
inc
sbb
sti
popf
add
xchg
in
mov
mov
push
xchg
cmpsb
adc
aad
lock
add
inc
outsl
push
imul
shll
lods
call
jae
mov
psubusw
daa
mov
negl
popa
gs
fsubrs
enter
sbb
xor
mov
dec
in
xchg
cmp
shll
inc
pop
mov
inc
jbe
test
jne
and
and
sbb
call
mov
out
test
mov
cmp
daa
mov
nop
clc
out
add
or
cmp
mov
mov
aaa
mov
mov
fiaddl
jge
add
and
adc
das
ret
mov
dec
loop
sbb
adc
addb
lock
jb
xchg
add
ror
jmp
lock
xor
adc
imul
add
int3
sarb
jae
inc
xlat
xchg
inc
mov
addb
mov
psrld
mov
xor
dec
test
and
adc
clc
mov
mov
xor
test
cld
cs
mov
or
shr
jbe
adcl
and
mov
fistps
js
out
std
negb
ljmp
mov
xor
mov
loope
mov
adc
rorb
out
cmp
imul
jp
xor
pop
inc
inc
das
mov
jbe
add
mov
jle
shl
push
stc
rorl
and
and
push
pushf
mov
sub
or
out
jmp
mov
in
cmp
dec
hlt
jl
add
pop
test
pop
dec
fstps
xchg
inc
xor
insb
dec
mov
jnp
insl
out
and
dec
and
mov
jmp
iret
jl
sti
adc
das
adc
pop
xor
orl
push
repnz
pop
stc
insl
lret
push
xchg
call
les
lret
stos
sub
xor
mov
xchg
mov
or
fs
pop
iret
jecxz
jno
pop
push
sbb
lds
ficoml
xor
lds
jb
adc
loopne
mov
xor
mov
mov
xchg
push
ja
cmp
push
lahf
pop
dec
pop
movsb
or
adc
into
ficoms
sbb
sbb
mov
dec
xchg
sahf
nop
pop
pop
ds
xchg
out
sub
and
les
cmp
xchg
daa
in
movsl
xchg
jns
mov
mov
testl
mov
jecxz
jmp
add
sahf
ljmp
xor
fildl
aam
sarb
mov
cwtl
call
cmp
jbe
xor
inc
jmp
out
cmp
cmp
push
inc
in
xorl
sti
outsb
out
cmp
popf
mov
xchg
inc
mov
cld
xor
xor
test
jno
xchg
cmpsb
mov
out
int3
cmc
xchg
cmc
or
push
negl
test
cltd
mov
stos
int
lret
cmpsb
jle
addr16
call
pop
adc
adc
jp
enter
inc
sub
mov
scas
pop
lds
ret
insb
in
data16
leave
pop
push
inc
pushf
inc
dec
push
ret
push
sub
clc
or
mov
or
xor
dec
pop
dec
call
scas
pop
and
movsl
lods
inc
xor
je
fs
jg
jmp
mov
outsb
pop
bound
jno
mov
push
sti
subb
and
adc
fimuls
les
subb
pop
sbb
mov
or
dec
and
imul
pop
lea
lret
pop
leave
pop
es
xchg
roll
js
xor
xor
cwtl
xchg
rclb
pop
cld
mov
fadd
inc
les
lahf
pop
sbb
jp
jne
es
pop
mov
dec
loopne
mov
push
sbb
hlt
push
mov
push
jnp
xor
inc
and
lret
xchg
xchg
aam
lret
and
mov
ret
dec
pop
mov
jp
ja
jne
test
xor
xchg
cmp
out
aad
xor
lods
fisttpl
je
and
iret
popa
cmp
arpl
and
inc
das
mov
push
insb
nop
jbe
push
sbb
sbb
xor
lock
fcompl
jl
xchg
out
push
sub
xchg
xchg
fcoms
es
stos
lds
repnz
in
pop
inc
repnz
popa
out
fsub
les
je
sub
scas
mov
push
subb
inc
nop
ds
test
mov
cvtpi2ps
push
popf
insb
push
lret
loope
jecxz
scas
cmp
cli
repz
cmpsl
cmp
inc
lods
jecxz
orl
mov
push
dec
dec
xchg
arpl
jb
or
leave
xor
jae
mov
adc
test
popa
std
mov
leave
xor
xor
cmpb
out
in
cmp
sbbb
enter
push
jbe
lcall
push
lahf
jns
repz
nop
scas
mov
xchg
mov
sub
adc
push
lods
mov
vmread
outsl
jmp
dec
dec
adc
movsl
sub
push
dec
repz
lret
outsb
mov
int3
mov
and
inc
adc
sbb
scas
imull
lret
pop
adc
pop
hlt
jle
lret
mov
out
inc
lea
xchg
jo
outsl
int
inc
xor
in
sub
movsl
sahf
mov
lret
mov
negb
inc
add
push
push
mov
xor
aaa
cltd
cmp
xor
mov
inc
call
sbb
insb
fdivs
pop
std
and
adc
or
lea
pop
daa
insl
inc
cmp
imul
sbb
xchg
call
push
rclb
sub
jl
andl
jg
popf
xchg
mulb
das
cmp
mov
push
adc
adc
and
jae
dec
test
xlat
jl
and
scas
jmp
mov
jmp
ficoms
pusha
adc
sub
mov
dec
jo
sub
jg
and
or
pop
in
pop
sbb
mov
insb
andb
mov
cs
shll
pop
mov
xor
cmpsb
mov
mov
or
mov
stos
lahf
cs
fldcw
sbb
push
jmp
loope
pushf
xor
mov
mov
sbb
lahf
add
leave
jb
shl
int
rcrb
mov
dec
in
nop
nop
js
lahf
adc
mov
mov
aaa
insb
xchg
movsb
adc
outsb
xchg
inc
mov
into
push
or
mov
jne
sub
lock
inc
hlt
and
sub
out
or
mov
jg
mov
mov
inc
inc
in
popf
imulb
in
cwtl
idiv
mov
in
sub
imul
pop
mov
pop
out
xchg
movsl
sbb
sbb
fistpll
dec
xor
rcrl
mov
shlb
xchg
mov
mov
mov
sbb
enter
inc
imulb
jmp
inc
mov
fldcw
or
in
fistps
sub
shll
mov
shlb
jb
pop
jp
pop
push
bndldx
mov
cmp
add
sbb
fldcw
mov
dec
data16
fadds
jnp
aam
int
cld
cmp
push
data16
lcall
out
jl
mov
call
sub
jo
ret
sub
scas
cwtl
aaa
mov
jmp
outsb
mov
loopne
dec
popa
mov
stos
scas
inc
scas
push
dec
push
cmpsb
pop
mov
arpl
jbe
rorb
push
ja
popa
adc
ret
shll
or
push
jb
xor
add
js
ljmp
jno
jne
jg
xchg
rcll
sub
push
flds
and
cmp
loop
les
addl
sub
les
popa
out
dec
test
sbb
mov
mov
mov
sahf
xlat
imul
lea
adcb
jb
cmpb
mov
mov
push
pop
test
mov
sub
and
sbb
imul
mov
mov
sbb
jno
call
sbb
and
sahf
loop
in
xchg
cs
pop
ret
mov
insl
cmp
mov
aas
popa
les
adc
inc
cmpsl
imul
inc
dec
adc
or
mov
ror
ljmp
mov
push
push
jne
and
gs
sub
gs
or
xchg
add
imul
mov
push
rcrl
test
mov
mov
rcrb
jle
nop
mov
inc
aas
mov
int
xchg
mov
mov
fadd
mov
lahf
xlat
push
push
sbb
dec
inc
adc
ret
pop
push
mov
pop
push
xchg
sub
cmp
push
fisubrs
xor
add
cmpsl
xlat
dec
add
and
iret
out
shl
pop
movsl
lods
jnp
dec
rorb
xlat
out
jmp
inc
subb
dec
jb
lods
mov
xor
mov
out
fdiv
subb
mov
cmpb
loopne
pop
xchg
adc
iret
and
outsb
shll
pop
stos
add
inc
xchg
dec
adc
cmp
jbe
dec
push
and
stc
sbb
in
mov
and
add
into
and
lock
cmp
aas
xchg
mov
fs
mov
inc
dec
bnd
adc
iret
jecxz
inc
cwtl
pusha
push
cs
popf
cmpsl
and
push
mov
cmpsl
push
pop
lock
int3
pop
mov
je
repnz
gs
fcomps
jo
push
das
sarl
fnstsw
inc
enter
out
mov
sbb
stc
pusha
jae
pop
inc
or
mov
popf
xchg
xchg
out
lcall
scas
xorl
cmp
dec
dec
fnclex
jg
pop
dec
insb
fucomip
pop
dec
ffreep
add
hlt
or
sbb
inc
shr
fnstcw
inc
shlb
or
test
enter
rolb
xchg
fs
adc
out
dec
stos
movsb
out
xor
mov
cmc
push
je
fsubp
push
xor
add
stc
xor
xchg
cmp
std
out
callw
sub
sahf
negb
flds
cs
jb
mov
and
inc
mov
orb
shrb
jle
insl
in
call
and
mov
mov
shrl
roll
push
scas
dec
adc
cmpsb
jae
and
sbb
inc
xlat
cmp
inc
jne
xchg
mov
pop
add
es
cmp
das
cmp
test
cmp
mov
fldt
loop,pt
pop
push
mov
add
in
mov
jnp
sbb
aam
test
mov
enter
jp
or
stos
lcall
inc
cmpsl
mov
xchg
mov
cmp
or
ss
pop
cli
jb
stos
push
push
mov
add
sub
lahf
in
mov
lret
test
stos
aam
mov
cmc
xor
dec
fsubr
mov
xchg
test
enter
push
dec
xchg
jg
ss
inc
xor
arpl
fsubrs
mov
enter
pop
lea
ret
andb
ljmp
jl
popf
fwait
mov
ror
mov
dec
in
aaa
das
pop
mov
push
in
sbb
sti
pop
sub
jns
incb
adc
add
loop
xor
mov
inc
mov
in
cld
inc
mov
test
mov
popa
inc
movsl
rcll
js
mov
repz
ret
loopne
cwtl
mov
xor
aad
inc
call
es
mov
mov
es
std
test
aas
lcall
fdivs
dec
mov
mov
cmp
jnp
cmpsl
push
mov
sbb
data16
pop
lret
pop
cltd
test
mov
outsl
inc
stc
lea
insl
fnstsw
fs
leave
stos
or
add
decl
insb
sbb
sarb
sub
xchg
dec
dec
test
pop
cmpsb
and
pop
jle
dec
in
dec
lret
push
out
jb
inc
xchg
stos
push
push
cli
and
xchg
mov
pop
dec
lret
xor
sbb
mov
xchg
ret
jae
int
and
push
xor
in
and
inc
in
cmp
out
ret
idiv
cs
mov
mov
or
xor
call
mov
jmp
adc
pop
push
repz
sbb
outsl
pop
cmpsb
bound
pop
cmp
push
pop
jns
cli
mov
sbb
pusha
loope
push
mov
or
ret
push
in
pop
insl
adcb
sub
ret
or
repz
push
mov
push
loopne
andb
roll
nop
mov
push
mov
xor
mov
ss
dec
dec
adc
rcr
adc
lret
pop
add
push
insb
int3
xor
ret
data16
or
xchg
push
or
pmulhuw
leave
dec
adc
xorb
inc
mov
jecxz
or
sti
popf
data16
dec
leave
sbb
fiaddl
imul
lock
sar
cltd
or
ret
xor
xchg
push
iret
in
mov
fistl
pop
addl
add
xchg
test
out
dec
cmpsb
call
mov
mov
out
xchg
jno
xchg
mov
pop
jo
or
dec
out
cmp
incb
mov
lods
inc
cld
jb
inc
inc
and
xor
fstpl
jl
cmpl
or
jg
in
dec
out
loope
fs
sub
jp
add
mov
jbe
cmp
inc
pop
iret
adc
sub
dec
fisubs
mov
jg
je
pop
adc
cmp
daa
pop
bound
and
sarb
xchg
xor
mov
in
mov
lcall
push
and
int
xchg
sub
or
jle
jb
inc
fcoml
pop
cld
jns
inc
push
adc
cmpsb
sub
cwtl
je
ss
push
sub
mov
test
and
inc
mov
andb
fwait
in
push
std
rcr
rolb
stos
pop
lret
jns
cmp
mov
imul
add
outsl
jge
xchg
clc
arpl
push
leave
push
and
jmp
mov
or
into
outsb
insl
fs
adc
and
pop
and
cmp
mov
xchg
add
jne
dec
adcl
inc
cltd
mov
push
test
outsb
add
sbbb
jbe
repz
in
pop
cld
sub
xchg
sbb
es
into
dec
add
push
mov
inc
jmp
stc
jne
dec
std
mov
int3
out
mov
xchg
mov
jbe
xchg
mov
mov
iret
pop
add
fldenv
sarl
add
adc
shlb
inc
push
rcr
push
sarl
or
or
scas
inc
jo
aad
xchg
sahf
jae
mov
adc
jne
loope
insl
enter
sbb
lods
imul
jae
add
fdiv
imul
push
ja
sub
or
data16
mov
imul
cld
sub
mov
cmp
mov
xor
out
push
adcl
loope
jne
test
jmp
mov
int3
repz
lods
pop
dec
test
push
insl
shrl
or
testb
or
neg
sbb
sbb
hlt
mov
inc
roll
sub
sbb
or
popa
ret
out
mov
daa
cmp
mov
gs
add
test
inc
cwtl
dec
jg
push
nop
mov
imul
insl
iret
jle
sub
inc
frstor
test
stc
loop
lahf
or
test
icebp
cmp
sub
mov
inc
push
sbb
mov
pop
mov
cwtl
pop
ficompl
cli
inc
rol
fdivs
xor
ret
pop
inc
fs
mov
sub
mov
mov
int3
xor
aaa
rcr
mov
add
pusha
push
in
add
push
mov
xchg
hlt
add
or
sbb
jne
pop
jp
push
stc
xchg
gs
and
call
insl
out
sub
cmp
jnp
ficomps
jmp
and
nop
add
pop
jo
mov
sahf
mov
fwait
in
adc
lods
lret
jbe
lret
dec
mov
fstps
jle
jno
cmpsb
add
or
sub
adc
nop
dec
andl
jno
cltd
fmuls
or
and
iret
dec
jg
into
gs
out
ret
aas
clc
jg
push
sbb
cs
sti
dec
mov
sub
imul
mul
cmp
sbb
clc
jae
jp
or
sti
in
testb
clc
out
stc
xchg
xchg
add
push
call
leave
xor
jmp
leave
or
outsb
cmpsb
xor
sarl
cmpl
sub
icebp
xor
iret
popf
outsl
adc
and
sbb
sbb
in
jae
xchg
int
xor
addl
cld
mov
mov
dec
cmp
idivb
orb
xor
popf
jne
cltd
push
aaa
int3
loope
lods
shlb
cmpsb
cmp
cmpsl
nop
popf
clc
mov
mov
lcall
stos
clc
sub
push
inc
push
mov
jp
xor
fistpl
pop
ret
mov
mov
xor
repnz
pop
pop
jae
add
lret
push
test
adc
mov
fidivrs
adc
xor
out
out
out
sub
jbe
gs
data16
adc
bound
outsl
mov
mov
cmp
js
leave
adc
push
inc
cli
xchg
fwait
or
cmp
inc
sbb
fildl
mov
sbb
mov
pop
and
leave
and
mov
or
sahf
fiaddl
das
xorb
mov
jle
data16
repnz
jp
add
pmullw
xor
cmp
mov
arpl
ret
shll
lret
xor
enter
insl
cmpl
and
mov
cmp
fcomp
mov
cld
lcall
mov
mov
pop
lret
xor
aad
adc
call
stos
incl
or
adc
std
movsl
insb
iret
into
leave
gs
mov
daa
or
add
pop
leave
cs
xchg
jle
pop
or
sbb
push
and
ds
adcb
pop
cli
ja
aad
bound
out
in
adc
cld
orb
xchg
hlt
jp
stos
ss
adc
in
xor
in
and
sbb
out
lods
stc
pop
and
lds
fldcw
jno
ret
or
push
pop
adc
cwtl
add
imulb
gs
mov
jp
sti
enter
rclb
lods
shl
jl
sarl
xchg
add
cmp
rclb
pop
nop
aaa
test
ficompl
sahf
andl
rolb
dec
test
test
clc
in
cmp
dec
test
lock
insb
inc
ret
pop
sub
cmp
mov
push
out
iret
inc
incb
and
push
je
jp
fildl
dec
jbe
cli
fidivl
xor
mov
fdivl
cld
lcall
pop
cld
in
xor
mov
mov
add
xchg
imul
sub
repnz
jbe
or
mov
daa
out
pop
xor
decl
mov
stc
cmp
adcw
dec
pusha
test
lret
mov
pop
shll
in
int
mov
mov
orl
add
icebp
sub
push
pop
iret
push
mov
lret
jmp
ficompl
push
pop
rclb
inc
mov
sbb
and
je
mov
or
pushl
pop
loope
mov
cmp
pop
daa
loope
lret
rcrb
add
data16
add
push
je
mov
imul
arpl
aaa
fldl2e
jl
xchg
pushf
inc
push
mov
pop
push
inc
dec
mov
ds
mov
xor
repnz
fwait
mov
push
int3
add
or
and
push
add
push
cld
out
lret
dec
cmpsb
gs
mov
pop
movsl
imul
xchg
inc
ja
call
fs
bound
pop
rorb
pop
in
adc
aas
mov
rcrl
sahf
add
out
xchg
jecxz
mov
dec
test
sbb
inc
sbb
pushf
push
dec
test
jle
repz
ljmp
das
push
ds
orb
cli
push
idivl
shlb
sbb
rclb
pop
insl
jae
aaa
ficoml
adc
pop
dec
mov
mov
dec
mov
outsb
cs
or
xchg
mov
rclb
push
cltd
fcoms
inc
std
pushw
jae
cltd
jge
inc
sti
das
loope
or
cmp
lret
xchg
push
imul
mov
arpl
mov
int
stos
popf
pop
jbe
dec
pop
mov
pop
mov
arpl
or
push
push
fcmovnbe
sahf
jns
test
cmp
jae
sbb
xor
popa
xlat
outsb
add
gs
push
add
out
bnd
jg
mov
mov
and
lret
cmp
push
movsb
inc
fldl
inc
xchg
lcall
mov
nop
inc
neg
and
cmpsb
sbb
cld
xchg
pop
lret
hlt
iret
rorb
jecxz
fdivrp
ds
test
push
icebp
pop
mov
rcr
das
stos
push
in
dec
into
in
subb
jg
cld
and
mov
or
testb
inc
dec
stos
and
inc
pop
inc
out
iret
ss
popf
jmp
lock
pop
mov
add
and
shlb
int3
clc
pop
sbb
xor
mov
enter
dec
or
xor
fnsave
fcompl
adc
inc
mov
hlt
add
jae
push
and
jmp
pop
push
in
out
aad
inc
hlt
jnp
sub
pop
mov
insl
xchg
insl
mov
and
aad
test
mov
jae
addr16
pop
mov
iret
stos
push
iret
or
add
dec
mov
mov
pusha
jg
repnz
incl
lcall
mov
test
ficoms
repnz
pop
gs
pop
and
bound
loop
adc
sub
dec
mov
dec
mov
out
fisttpl
cwtl
pop
loop
lcall
cwtl
jne
mov
fisttpl
xlat
cwtl
sbb
mov
mov
fs
and
sbb
mov
cmpsl
xchg
sub
sub
push
mov
pusha
rcrb
and
fwait
push
shrl
arpl
pop
xchg
outsl
adc
ds
sbb
addl
mov
or
xlat
cmp
cmpsl
jnp
xchg
dec
nop
sti
rcll
loopne
js
popa
or
and
push
int
pop
rcrb
lods
cmp
push
in
nop
cld
outsb
add
les
adc
add
testb
aas
out
jns
lss
test
es
lret
mov
dec
fcoms
dec
adc
push
hlt
cmpl
les
mov
das
inc
sbb
adc
mov
xchg
mov
inc
adc
pop
mov
fildll
dec
mov
sub
pop
sbb
mov
or
pop
adc
std
insl
inc
rcrb
repnz
mov
cmp
xchg
cmp
push
xchg
sub
mov
popa
push
pop
jl
pop
ljmp
aaa
cmp
test
loopne
cmp
inc
lods
aad
rep
inc
adc
inc
sub
push
cmpsb
iret
mov
dec
fisttpl
mov
sub
imul
jo
repz
mov
inc
mull
jl
lea
jnp
hlt
add
ja
cmpsb
inc
adc
and
outsl
pushf
mov
jns
js
sti
scas
cmp
jns
faddl
pusha
xchg
pop
leave
cmc
xchg
mov
test
mov
loopne
jo
cmp
inc
inc
add
push
jp
cs
int
dec
cwtl
call
push
lds
cltd
out
movsb
inc
test
test
or
pop
pop
inc
mov
jecxz
lods
out
jp
ss
stc
adc
sub
out
mov
xchg
sub
inc
pusha
xorl
jle
lods
pusha
sbb
leave
adc
icebp
cmp
add
push
idiv
add
xor
adc
xlat
repnz
mov
sbb
cld
cltd
add
cld
push
popa
push
pop
movsb
mov
cmp
mov
js
lret
mov
mov
jle
outsl
divl
fdivs
pop
lds
xchg
sahf
fcom
les
sbb
xor
lret
push
gs
push
inc
fidivs
cmp
aas
test
mov
fs
inc
gs
cmp
mov
lock
inc
rolb
inc
dec
je
sbb
push
cmp
fbld
insb
andl
mov
mov
mov
fildll
stos
dec
imul
lods
jp
sub
xor
xor
mov
cli
mov
cmp
or
push
jg
dec
mov
shll
ror
cs
push
mov
sbb
adc
testb
imul
cmp
push
push
nop
fcompl
mov
dec
push
and
pop
stos
inc
ror
sti
inc
push
sub
jbe
rcr
in
sub
mov
mov
pop
stos
dec
stos
pop
movsb
add
jl
mov
out
inc
jae
fisubs
or
les
or
sub
loope
lods
fstps
adc
mov
mov
push
sub
int
jmp
adcb
pop
pop
push
jns
or
add
std
ljmp
adc
sbb
sarl
test
cmp
andl
mov
cwtl
jmp
fisubl
aad
fisubrl
repnz
or
imul
cmp
cltd
xor
sbb
pop
cmpl
insb
or
popf
push
mov
jl
fisubl
add
mov
add
mov
insl
in
in
ds
pop
pop
sub
mov
in
pop
pop
shll
jb
xor
loop
adc
jns
scas
add
dec
es
add
push
cs
fsubs
pop
out
inc
xchg
imul
aam
cli
fnstenv
scas
sub
cmp
out
mov
ja
test
sub
inc
and
cmp
addr16
and
shl
dec
ds
cmp
xchg
dec
stos
dec
cmp
lods
outsb
sbb
fstpl
shll
sbb
jp
jns
push
cmpsb
sbb
subb
ficoml
out
loopne
popa
scas
mov
testb
cmp
sbb
les
push
mov
pop
inc
jle
inc
orb
in
adc
jecxz
mov
lret
nop
inc
js
sub
cli
cwtl
hlt
mov
rolb
inc
add
icebp
mov
xchg
mov
or
mov
push
and
jg
subl
scas
xchg
mov
xchg
ljmp
jge
mov
fsubrs
mov
mov
ret
fisubrs
jge
xor
mov
mov
cmpsl
jecxz
push
in
sbb
sub
cld
mov
add
das
mov
sub
popa
pusha
insb
mov
push
dec
aas
scas
testb
dec
xor
shll
or
out
inc
mov
adc
leave
cmp
cli
xchg
adc
inc
fwait
loope
and
xchg
pop
jnp
mov
ljmp
jp
xchg
sbb
icebp
xchg
lahf
mov
outsb
bound
ja
push
leave
test
aam
jno
jp
cmc
cmc
mov
lret
cmp
mov
push
push
mov
adcl
mov
xor
jno
icebp
out
cmc
jnp
pushf
jle
leave
movsl
mov
or
cld
jg
std
fsubl
pop
decb
rclb
in
dec
xor
mov
adc
scas
repz
icebp
sbb
xor
fstp
xor
out
fbld
push
ret
jbe
jns
ficoms
faddl
out
pusha
data16
xchg
mov
fisttps
mov
lods
sub
aaa
fs
jae
lret
pop
push
fistpll
notb
loop
mov
movsb
ja
push
jg
lea
lahf
mov
mov
shrb
jb
addr16
pop
std
popf
das
mov
and
mov
icebp
mov
inc
cli
inc
or
jg
xchg
inc
push
ljmp
mov
hlt
cmp
call
movsl
jo
in
pushf
repnz
ds
or
int
add
pop
fs
inc
xor
sbb
stos
das
sub
xchg
xchg
cmp
jae
test
ja
ds
test
fwait
das
lods
sbb
cmpb
cmpsb
adc
adc
add
in
push
pop
push
testl
fdivs
pop
shrb
add
xchg
jno
in
or
cmp
lods
xor
or
sub
out
std
dec
enter
data16
mov
xor
mov
mov
sbb
adc
or
cld
in
xchg
call
pushf
leave
imul
cmp
or
pusha
rclb
xor
push
pop
sbb
stos
jp
or
push
xor
jo
sub
mov
popa
jo
insb
lea
sbbl
xor
outsb
xchg
rcrb
mov
scas
and
adc
mov
dec
mov
add
mov
cmp
xchg
shrb
pop
fisubs
stos
fstl
fisubrl
cmp
fidivs
lods
or
mov
xchg
mov
stc
pusha
add
mov
mov
pop
or
sbb
add
push
xor
ljmp
cmp
lret
jecxz
sbb
and
je
movb
cli
dec
leave
mov
or
loope
xor
fnsave
ftst
stc
cmp
sbb
enter
mov
pushf
sbb
push
aas
adc
test
push
adc
out
ljmp
in
das
inc
xor
pushf
mov
aad
fdivrs
loope
xlat
mov
nop
hlt
lret
ret
rcrl
pop
stos
in
adc
jmp
pop
lds
mov
sbb
stc
popa
in
loopne
fwait
pop
gs
mov
nop
icebp
sti
push
lea
iret
loop
repnz
daa
mov
push
je
int
adc
sarb
push
gs
mov
popf
imul
sbb
imul
push
sbb
jp
lcall
data16
dec
loopne
popf
pop
sahf
inc
cmp
in
lods
daa
ja
push
push
push
adc
and
lods
insl
int3
xlat
pop
push
add
sub
shrb
jle
sub
jbe
xchg
rcrb
sub
aas
ljmp
inc
jg
and
mov
movsb
jbe
push
shlb
shrb
push
das
lret
xor
je
pop
cld
and
inc
jge
lret
jl
scas
xor
fucomip
inc
jb
mov
xchg
sbb
outsl
jmp
xchg
mov
mov
xchg
cld
dec
mov
jl
movsl
xchg
sbb
ds
out
xchg
xchg
insb
xor
incl
incb
ds
push
mov
mov
dec
out
push
shrl
sbb
call
xchg
imul
add
xor
cmpsb
inc
lahf
cld
jnp
jl
mov
pop
xchg
cmp
ds
cmp
loope
ffreep
mov
fstps
ret
rorl
mov
sbb
aam
ss
enter
ret
pop
and
or
adc
or
outsl
lock
adc
add
fwait
rol
inc
adc
das
mov
jbe
sub
sub
in
xchg
lods
inc
and
sbb
es
push
roll
out
jl
jp
xchg
fwait
mov
or
and
loope
dec
push
dec
push
and
test
aam
fcompl
sub
lcall
scas
in
xchg
add
repz
xor
or
or
pushf
pop
test
enter
sbb
and
xchg
mov
fcompl
xor
aaa
jnp
jno
jl
ljmp
rolb
leave
inc
adc
aas
push
fcompl
icebp
rclb
xor
cmc
push
fst
pop
pop
jbe
test
int3
or
mov
jns
xchg
xor
lahf
cltd
into
cltd
xlat
and
mov
imull
mov
lods
xor
xor
adc
arpl
cmpsb
pop
in
fldenv
bound
dec
test
ror
aas
xchg
xor
loope
rorb
inc
jl
mov
push
cmc
mov
adc
imul
mov
inc
jp
mov
fstps
add
lahf
xor
dec
adc
mov
mov
imull
or
fwait
pushf
jno
xor
jae
push
bound
mov
lods
outsb
jle
jle
adc
std
shll
jb
lret
or
xchg
movsb
sub
cli
mov
arpl
jge
les
inc
xor
shrb
ret
outsb
aas
and
mov
pusha
popa
cmpsb
inc
push
lret
sbb
movsb
nop
jne
sub
mov
into
rolb
sti
aas
push
cmp
sbb
dec
insl
scas
dec
and
dec
mov
popf
or
sub
cs
jbe
cmp
ja
movsb
cmp
pop
mov
lock
mov
testb
sti
subl
dec
pusha
mov
or
lods
inc
fcompl
fisubl
xchg
jnp
sbb
adcb
rorb
insb
cmp
outsl
rorl
scas
pop
out
insb
xor
xor
add
mov
in
jle
jnp
and
dec
not
and
outsl
cwtl
into
ljmp
xor
mov
push
imul
lcall
ret
fnstcw
rol
jg
xchg
dec
mov
push
or
movsl
mov
mov
ficompl
or
push
mov
lret
stos
dec
repz
adc
push
sub
cmp
cs
cmp
popa
pop
lret
pop
mov
push
sbb
or
shll
repz
jns
dec
scas
push
les
jbe
adc
test
pop
inc
fwait
mov
lahf
jl
testl
push
in
sub
repz
aad
mov
cli
sar
and
icebp
lods
sbb
adc
std
nop
out
sub
mov
test
outsl
lock
mov
mov
cmp
in
inc
or
int
scas
or
add
outsb
movsb
test
add
mov
rolb
mov
call
cmp
or
lret
andb
cmp
push
sbb
sti
daa
add
jge
leave
push
mov
mov
add
insb
dec
out
mov
daa
test
or
mov
movsl
push
dec
aad
mov
ror
fcmovnb
iret
lahf
cli
adc
call
push
in
pop
jp
arpl
fs
idivb
out
sub
je
dec
fildl
fimull
cmp
or
cmp
mov
pop
pusha
clc
add
mov
jne
or
cli
lock
decb
dec
xchg
adc
push
int
lret
lret
sub
ret
adcl
push
mov
sbbb
cmp
mov
sub
repz
mov
xor
js
jno
xchg
test
out
sbbb
sahf
clc
popf
push
push
insl
in
jnp
pop
or
and
rdpmc
xor
push
cmc
repnz
cmp
lea
mov
cld
loop
jb
imul
shll
lock
inc
pusha
push
or
mov
lea
add
jge
jge
lock
lret
mov
jb
lcall
push
pushf
shr
add
inc
pop
mov
mov
jmp
int3
insb
mov
movsl
mov
leave
pusha
add
in
fisubl
lahf
push
pop
mov
xor
scas
or
les
jae
ret
mov
cmpsl
pusha
mov
cmpsb
and
mov
add
outsb
jmp
adc
add
leave
pop
mov
mov
mov
add
cli
pop
lret
mov
enter
mov
jns
and
adc
test
sbb
dec
push
mov
mov
pop
nop
mov
ja
inc
pushf
xlat
push
xor
ja
int3
mov
cld
pop
ret
fs
xor
lcall
fcomip
add
jne
jmp
or
stos
xor
bound
movsl
mov
pop
mov
push
jmp
mov
shr
call
fistpll
push
jnp
xor
clc
sbb
hlt
js
nop
xchg
imul
fidivrl
sub
jg
lods
aam
shll
mov
pop
inc
popa
sub
mov
popa
outsb
and
sub
icebp
stos
bound
cli
cmp
push
inc
mov
inc
leave
add
lds
rcrb
pop
sub
sbb
xor
addr16
movsb
push
add
aam
jbe
push
mov
sahf
loope
sub
out
mov
repnz
inc
xlat
pop
data16
mov
sub
mov
xchg
clc
and
cmp
mov
das
xor
shlb
js
jbe
or
stc
test
mov
test
xchg
shlb
sbb
test
repz
inc
cmp
or
jo
lds
sbb
pusha
mov
cmpsl
ljmp
or
push
daa
fisttpll
sub
xchg
loopne
jnp
lcall
sahf
int
sbb
pop
or
call
lea
iret
mov
push
adc
sbb
add
daa
fistl
cmpl
test
push
push
insl
pop
push
gs
mov
mov
test
in
or
out
loopne
mov
fcomp
or
pavgw
fucom
sbb
scas
out
dec
loopne
insb
push
mov
fsubs
pushf
xchg
push
mov
mov
nop
jl
jle
dec
push
mov
jge
jne
lods
in
pop
inc
cld
je
mov
arpl
push
cmpsl
and
je
out
pop
sbb
xor
jae
in
outsl
fsts
cmp
out
imul
cmc
adc
push
inc
dec
or
movsl
insl
mov
out
scas
sbb
jb
xchg
jnp
mov
jno
xchg
push
test
popf
enter
mov
mov
pop
movsb
stos
lahf
stos
xor
jbe
mov
shr
mov
lods
xlat
dec
out
popl
mov
andl
daa
jle
cmp
aad
fsubp
test
stc
ds
push
out
xchg
shrb
mov
pop
loop
jo
adc
scas
stos
sar
pop
pop
pop
sbb
cli
popa
js
adc
ja
daa
or
jl
mov
and
lahf
adc
repnz
dec
mov
xor
mov
add
cmp
je
adc
mov
gs
lcall
fldl
dec
mov
push
popf
push
or
inc
sbb
xor
imul
je
data16
es
pop
cmp
add
or
data16
cwtl
pop
out
icebp
xor
lods
cs
fdivr
arpl
sbb
jl
xor
in
jno
sub
cmp
and
fcmovu
imul
iret
imul
insl
mov
pop
push
jne
inc
lds
ss
movsb
shrl
lods
pop
movsb
cmp
adc
addr16
xchg
or
std
ror
push
imul
add
sbbl
pop
and
add
fs
int3
or
push
xor
dec
mov
loope
addr16
out
mov
xchg
daa
stos
lods
push
and
cmp
cwtl
inc
sbb
xor
repz
in
xchg
dec
loope
xchg
inc
rcl
jg
mov
adc
xchg
jge
clc
ja
leave
lret
mov
mov
nop
pop
pop
jl
adc
sub
and
sahf
inc
and
mov
subl
pushf
xlat
or
sarb
pop
cmc
jnp
fscale
outsb
push
outsl
mov
rolb
push
mov
sub
xchg
fwait
aam
in
xchg
repnz
imul
pusha
add
push
lret
cmp
xlat
stos
gs
scas
fs
inc
push
inc
fstpt
mov
sbb
mov
pop
in
fwait
mov
fistps
jbe
pop
jnp
add
movsb
in
jns
dec
in
iret
pushl
out
inc
aam
sub
ja
pop
lds
cmp
movsl
add
jns
dec
xchg
sbb
xchg
cwtl
fidivl
das
clc
push
add
movntq
frstor
pop
xor
pop
in
cmc
cli
jl
cli
sarb
shl
sahf
icebp
rol
dec
popf
xchg
clc
inc
lds
mov
clc
add
mov
cmp
fcoml
jg
js
cmpsl
mov
ljmp
push
addr16
aam
and
cld
cmp
int
cld
and
xchg
cmp
or
fldt
mov
push
aam
add
sbb
ds
pop
push
sub
mov
pushf
dec
or
fldt
lods
sub
lock
mov
mov
pop
rol
and
jmp
cmp
rcl
push
int
mov
mov
and
mull
jl
les
movups
cmp
push
mov
add
jo
mov
jg
popa
jns
jb
jb
lock
inc
add
adc
pusha
hlt
mov
mov
fmuls
jle
xchg
jl
stc
pop
push
add
mov
int3
adc
mov
mov
cmp
inc
andl
or
out
out
mov
cld
jae
std
lahf
or
ds
mov
adc
and
popa
jne
xlat
pop
push
xor
icebp
stos
adc
sub
or
inc
and
sbb
pop
pop
in
xchg
inc
das
ss
add
push
mov
ret
test
fisubs
mov
inc
dec
sub
jl
jnp
fidivl
pusha
push
adc
adc
hlt
movb
cmp
mov
aad
cs
push
test
push
iret
ret
xchg
test
movsb
popf
outsl
xchg
xor
xchg
mov
pop
test
dec
and
sub
test
and
mov
mov
fs
test
lcall
mov
mov
add
xchg
cli
test
stos
mov
loopne
add
push
mov
mov
cwtl
adc
push
das
ja
sub
inc
and
sub
xor
int3
scas
daa
jmp
cmc
mov
xor
jecxz
test
or
and
push
data16
pop
inc
cld
shll
xor
in
mov
fxtract
xor
fsin
push
repz
xor
xchg
lods
sbb
mov
jmp
sarl
xchg
daa
xlat
js
movsb
repz
popf
sub
lods
push
rcrl
imul
pop
out
dec
cli
movsl
imul
in
hlt
gs
loopne
and
lret
push
xor
pop
and
adc
pop
sti
stc
sbb
fs
mov
jbe
shlb
cwtl
adc
sarl
scas
shlb
test
insb
js
lds
ja
adc
xor
in
adc
mov
inc
inc
xchg
dec
pushf
test
imul
inc
into
xchg
jp
sub
imul
aad
jg
lret
call
test
mov
pop
xor
scas
jmp
or
movsl
shll
and
adc
cmpsl
mov
push
mov
push
data16
xchg
xchg
ret
fcomps
sub
sub
ss
arpl
stos
outsb
lret
nop
lret
lods
jmp
nop
loopne
ret
xchg
push
mov
fldt
push
xchg
jg
xchg
mov
jne
mov
pop
or
or
stc
pshufw
sahf
xor
sbb
mov
cltd
xchg
roll
int3
or
stos
inc
mov
stos
adc
dec
push
pusha
sub
xorl
daa
xor
fidivrl
das
inc
push
xchg
jp
xchg
inc
jns
and
fsubs
scas
inc
icebp
pop
sahf
xchg
shrl
xchg
sbb
clc
aas
dec
pop
dec
xor
ficoml
sub
dec
cld
lcall
int3
loope
and
pop
dec
hlt
out
add
sbb
or
stc
cmp
rcrb
pop
subb
cmp
aam
dec
lods
mov
jle
pusha
and
sbb
mov
lods
mov
data16
cli
ret
mov
movsl
pop
in
sub
mov
ret
mov
rcl
mov
mull
pop
push
sub
adc
scas
and
dec
les
mov
fildll
jbe
push
jns
pop
movsl
mov
and
stos
dec
cmpsl
sbb
test
fldcw
jnp
xor
bnd
enter
jmp
dec
in
inc
sub
test
lea
dec
adc
cmp
btr
ret
xchg
sbb
dec
adc
iret
ljmp
xor
addr16
mov
movsl
mov
fs
mov
jne
pop
addr16
movsb
dec
test
lea
das
sub
mov
adc
jl
inc
das
and
les
mov
or
imul
jno
push
and
xor
mov
mov
daa
insb
dec
sbb
xor
mov
pop
and
ds
xchg
mov
aaa
test
inc
fstl
xor
sti
inc
fnstenv
movsl
divl
lret
in
addl
out
jae
nop
lods
mov
in
and
jno
pop
or
faddl
hlt
sub
iret
fdivr
or
push
pop
mov
mov
je
mov
repnz
sbb
and
outsl
mov
push
push
pop
and
jl
push
dec
sub
xchg
lods
in
popl
mov
fisttpl
and
pop
test
sbb
mov
adc
fdivs
in
jbe
bound
lret
mov
pop
xor
add
mov
sub
aaa
adc
leave
addr16
das
test
inc
mov
push
les
jns
dec
fwait
or
test
neg
cmp
ret
mov
dec
imul
pop
es
pushf
mull
jecxz
push
mov
int3
jo
inc
mov
scas
pop
imul
scas
xchg
fdivrp
enter
fwait
push
lods
in
mov
pop
mov
fdecstp
xchg
push
fiadds
sbb
sbb
mov
jge
xor
xchg
xchg
mov
ficomps
or
jmp
cs
test
xchg
jecxz
or
xor
mov
lea
repnz
in
inc
cwtl
nop
scas
mov
iret
pop
addr16
out
ret
incl
cmp
jg
test
cmp
leave
pop
mov
mov
test
push
aas
xchg
movsb
lds
inc
lods
jae
insl
divl
mov
stos
xchg
loop
mov
and
pop
shrl
xor
mov
inc
into
cmp
das
out
mov
pop
mov
inc
mov
jg
std
fisttps
imul
stos
sbb
cli
popf
loopne
adc
les
mov
and
adc
jecxz
icebp
push
imul
movsb
bound
aaa
adc
popa
dec
sbb
sbb
add
push
enter
cli
fildll
jle
jmp
mov
shlb
cmp
sbb
xchg
mov
mov
pop
xor
adc
jge
aam
jmp
xchg
daa
loope
xor
pop
inc
push
fstl
je
and
or
jp
jb
ficoml
mov
rorb
fists
jp
es
ljmp
repnz
sbb
jo
test
out
sbb
cwtl
je
test
xor
mov
xchg
ja
xchg
sub
pop
pop
jno
in
imul
ja
dec
or
cmp
jmp
pusha
ret
popf
cmp
add
jo
xchg
popf
mov
icebp
cmpsl
sti
popa
mov
jge
jnp
bound
sti
repz
out
fimuls
xchg
dec
adc
or
ficoms
sbb
fadds
fadds
cmc
mov
inc
fisttpll
mov
into
stc
dec
lods
push
and
pop
mov
mov
xchg
cli
cmp
pop
and
iret
pop
sbb
pusha
pop
mov
mov
lret
cmpsb
daa
fbld
hlt
push
jo
cltd
mov
daa
inc
ficomps
xor
xchg
mov
hlt
or
and
xchg
repnz
adcb
mov
adc
dec
jle
sub
jecxz
ljmp
insl
sbb
faddl
and
iret
dec
jno
movsb
cvtps2pd
mov
xchg
sub
sub
add
pop
jnp
xchg
xor
in
pop
fdivs
add
mov
sub
dec
or
sbb
rolb
aaa
jno
xor
push
iret
jbe
out
je
mov
dec
cs
fsubr
jmp
in
inc
xor
xchg
inc
fwait
or
xor
out
jecxz
cmpl
cmc
icebp
popf
out
out
sti
das
add
push
jns
jno
mov
stos
push
hlt
outsl
push
lahf
adc
adcb
into
nop
scas
cli
inc
mov
jnp
push
inc
or
loop
test
aad
fidivrl
stos
addl
mov
scas
test
repz
lcallw
ja
inc
in
rcrb
inc
mov
add
and
into
push
ss
test
jecxz
outsb
xchg
fldenv
push
dec
ds
jae
sbb
gs
jno
cmp
pushf
mov
and
or
mov
adc
rcrl
push
xlat
jl
push
pop
jo
enter
push
xor
xor
shll
pushf
inc
xor
mov
jb
sti
push
jmp
jle
aaa
stos
inc
int3
pop
xchg
inc
movsb
loope
rcrl
add
lcall
repnz
das
sbb
jl
inc
xlat
fistps
mov
dec
icebp
fsubs
aam
push
push
int3
add
add
mov
fucompp
inc
sahf
pop
jl
mov
sbb
mov
ja
mov
pushf
inc
outsb
sti
add
and
pushf
pop
mov
xor
push
pushf
sbbb
popf
adc
pop
imul
arpl
clc
ljmp
pop
cmp
ss
push
pusha
rolb
test
lcall
aaa
subl
pop
sub
andl
repnz
lds
pop
jecxz
mov
movsb
pop
loopne
jecxz
cltd
call
mov
out
mov
notb
add
adc
xlat
repnz
sbb
icebp
sbb
dec
cmpsl
arpl
xchg
fsubs
push
adc
or
outsl
inc
je
and
jae
jecxz
cli
jge
and
mov
push
mov
paddsw
std
arpl
lahf
sub
push
adc
cmc
es
add
or
mov
xorl
push
fwait
mov
push
std
scas
fptan
and
add
rcll
hlt
fcompl
jge
mov
call
add
push
xchg
mov
and
push
cli
pop
scas
das
test
mov
in
fildll
jns
push
sub
xor
nop
push
or
jb
iret
sub
fldt
pop
lret
or
scas
mov
sbb
and
mov
addr16
out
mov
into
divl
imul
pop
jle
rcrb
mov
mov
push
shrb
sub
pop
stos
xchg
lods
mov
xchg
int
adc
pop
mov
jp
clc
fcompl
jmp
cmp
lret
sub
dec
repnz
insl
dec
mov
lahf
push
cmpsl
and
mov
into
mov
push
packuswb
sbb
rorl
aaa
inc
sbb
rol
adc
iret
pushf
dec
or
mov
and
adc
stc
fcompl
lahf
jne
js
arpl
or
divl
or
out
aam
sub
pop
mov
lahf
and
out
fldt
sbb
popf
orl
xor
lods
mov
pop
loope
pop
jle
mov
xor
shll
ds
movsb
test
scas
es
jae
das
pop
ja
inc
lds
lcall
or
imul
es
lcall
jmp
adc
mov
sti
inc
movsb
out
int
icebp
mov
cmp
jge
rcrl
addb
jecxz
pushf
popa
test
xor
adc
insl
adcb
pop
out
xchg
gs
jne
lret
mov
pushf
aaa
sbb
notl
jmp
xchg
dec
fdivs
pop
or
mov
lds
test
int
lcall
or
sbb
shll
adc
cld
sub
enter
push
pop
add
mov
mov
pop
dec
mov
cs
into
add
and
inc
rcr
fwait
fs
orb
call
cmp
jecxz
xor
push
ljmp
xor
push
xor
cmpl
pop
dec
jmp
inc
push
or
mov
cli
out
jge
call
lahf
pop
or
sbb
push
push
cwtl
mulb
jnp
mov
je
popf
inc
outsl
xchg
cli
jne
pop
testb
iret
xchg
imul
hlt
mov
push
xor
and
mov
aam
movsl
jo
and
mov
adc
or
mov
add
jge
jge
mov
scas
jbe
subb
add
arpl
out
popl
sbb
faddl
je
push
out
ja
adc
lock
sub
dec
pop
mov
jle
inc
or
mov
mov
jge
notl
mov
scas
inc
ret
insb
dec
sub
push
cmp
inc
push
pusha
ds
testb
mov
popf
fs
sub
cmove
sbb
nop
movsb
rolb
xchg
cld
call
push
mov
pop
iret
sbb
fildl
or
into
mov
icebp
and
aad
andl
inc
out
enter
xor
mov
add
test
push
fs
addb
mov
rcr
in
cli
pop
lds
addr16
pop
fiadds
add
test
out
ljmp
push
push
enter
jle
leave
aad
sub
dec
into
mov
pop
adc
jmp
or
add
pop
ror
enter
imul
mov
or
mov
enter
jg
in
insl
push
aas
pop
mov
cmp
push
cs
mov
adc
iret
xchg
pop
mov
into
stos
sub
cmpsl
mov
add
add
add
out
dec
pop
xor
and
pushf
mov
xchg
xchg
push
aad
mov
dec
jg
loope
add
sahf
sar
dec
movsl
pop
hlt
movsb
jns
stc
aas
lahf
dec
out
mov
cmp
adc
fcmovnbe
addr16
arpl
out
xchg
sbb
sub
aad
lds
dec
mov
lret
jno
sarl
insl
shrb
test
jne
mov
js
mov
popf
fsubs
lahf
fwait
pop
mov
push
dec
push
push
add
into
cmpsl
and
repz
mov
jne
inc
stos
mov
adc
sub
lret
or
fldenv
sub
clc
add
jmp
sbb
fisubrl
loope
fisubrs
leave
dec
or
inc
jb
lds
out
cs
je
fwait
or
rclb
mov
cmpsb
mov
inc
inc
and
repz
dec
sub
int3
lret
fisttpll
sub
pusha
xor
mov
xor
adc
cltd
cmp
mov
addr16
inc
pop
sub
out
xchg
ffree
xchg
add
cmpl
sbbl
jecxz
push
lcall
stos
inc
cmp
xor
pop
add
out
cmp
push
xchg
sub
pop
ja
cmp
jbe
decl
xchg
mov
inc
dec
add
pop
fstl
cmpsb
xor
xchg
test
insl
ret
sbb
pop
cmpsl
lods
mov
mov
xor
fstpl
out
ss
loop
int
lods
push
outsl
inc
mov
mov
xor
stos
xor
adc
cmc
ret
and
das
push
insl
gs
lock
jge
inc
jmp
pop
mov
fmul
mov
sbb
dec
pushf
xor
xchg
inc
imulb
jns
ja
pop
movsb
daa
dec
mov
dec
ja
ja
adc
movsb
arpl
xchg
xchg
mov
mov
aam
add
or
xchg
imul
jp
adc
pop
into
mov
rcrb
jo
xchg
mov
adc
jl
and
ret
pop
mov
sub
movb
push
test
adc
cli
in
scas
in
sub
push
xchg
fwait
mov
mov
jae
subl
mov
jecxz
adc
push
fistl
adc
push
sub
inc
and
in
push
add
pop
jae
rolb
call
push
sbb
pop
stos
push
aam
and
mov
mov
inc
scas
pop
inc
dec
aaa
xlat
std
add
cld
mov
cmp
test
jns
data16
xorb
mov
cmp
lds
aas
mov
ror
or
adc
cltd
sub
call
add
test
push
js
dec
bound
loope
jns
pcmpeqd
sahf
sbb
mov
mov
xchg
pop
lahf
movsb
xor
dec
sub
sti
inc
jmp
pop
mov
xor
bts
lods
sbb
ficoms
mov
xor
xor
aaa
dec
ljmp
cs
rcrl
fwait
adc
xchg
xor
lock
jnp
pop
orb
imul
or
inc
xchg
lock
rcll
sbb
and
jbe
jl
repz
push
push
mov
jnp
jns
cmp
adc
sti
in
xor
inc
sub
fcoml
dec
aam
inc
stos
sub
push
aam
std
out
add
push
pop
sahf
sbb
inc
roll
push
and
std
or
test
xorb
xor
ds
aas
push
cmp
fcomps
insb
aaa
jns
and
inc
test
push
xchg
jmp
cmp
pop
jne
xor
shrb
xlat
inc
jns
lds
and
dec
mov
mov
mov
mov
xor
sbb
adc
mov
xchg
inc
scas
mov
sar
cmp
adc
push
and
daa
dec
inc
test
pop
jl
lahf
and
push
dec
in
mov
aaa
cmpsb
aas
and
and
aas
fwait
lahf
xlat
out
jge
cmp
mov
sub
jg
fiadds
scas
out
mov
mov
adc
sub
and
fs
push
imul
xor
add
jnp
leave
lret
insb
pop
in
pop
jecxz
fdivl
outsb
or
jae
cld
rcrb
cmp
lods
sahf
adc
rorb
out
adc
jo
xchg
cltd
mov
divl
test
cmpsb
sbb
add
into
in
mov
loop
stos
ret
jbe
or
pop
add
push
aaa
das
inc
sub
arpl
stos
xor
pop
pop
xorb
lcall
sub
lds
sbb
mov
ds
ffreep
add
lock
scas
insl
cmp
in
lcall
cmp
xorb
push
adc
iret
xor
je
push
in
mov
dec
in
xlat
fwait
cs
daa
xlat
xor
xchg
jns
movl
data16
mov
mov
leave
imul
mov
push
mov
xor
sar
bound
mov
stos
sbb
lods
cmpsb
xchg
aaa
cmp
jo
push
pop
cld
orb
push
cmc
xor
in
adc
fistpll
dec
inc
int3
loopne
add
and
dec
aas
pop
dec
jns
movsb
and
mov
pushf
popa
mov
xchg
adc
daa
xorl
adc
rcr
jecxz
cmp
jmp
push
cmc
sub
loope
mov
xchg
jb
lods
xor
gs
push
pop
dec
adc
int3
xchg
in
icebp
std
dec
xchg
xor
xchg
jge
sub
dec
or
movsb
inc
dec
inc
test
adc
push
mov
cmpsl
in
divb
ret
scas
aam
pop
xor
int
sbb
pop
jecxz
fiadds
cltd
mov
lock
les
cmc
push
push
je
cwtl
das
popa
icebp
inc
test
or
mov
xchg
fbld
shrb
and
cli
and
idivb
mov
pop
loopne
cmp
cmpsb
stos
or
add
iret
insb
mov
aam
das
scas
xor
mov
xchg
jl
inc
movsb
jmp
cmp
insb
std
xor
jne
lods
imul
dec
cltd
dec
cmp
pop
icebp
mov
loopne
push
sbb
dec
loope
mov
bound
mov
mov
push
pop
add
dec
jp
ja
mov
mov
sub
jmp
fstl
dec
push
cmp
rcr
sbb
lods
xchg
data16
call
add
cmp
aas
loop
retw
adc
cli
lods
shrb
mov
and
dec
mov
outsl
dec
ja
or
dec
dec
dec
test
arpl
xchg
cmp
sar
pop
push
mov
pusha
lock
adc
lret
mov
inc
sti
pusha
test
shll
mov
lcall
in
cs
add
or
test
add
jp
lock
add
jp
subb
scas
sbb
mov
lahf
xor
repz
and
fidivrl
sbb
dec
and
sbb
add
or
fbstp
call
ret
cmpb
pop
adc
icebp
into
insb
in
outsl
cmp
xor
mov
sbb
in
enter
and
inc
je
cli
inc
sbb
mov
mov
das
jbe
mov
mov
xchg
test
aaa
mov
mov
or
jae
mov
jl
pop
les
jnp
fidivrs
data16
lcall
jo,pt
lea
jo
shl
xlat
pop
lret
xchg
adc
xlat
cltd
insb
std
add
das
inc
sbb
cmp
jecxz
scas
or
jp
xchg
lcallw
pop
gs
lock
test
pop
jl
testl
cmp
mov
add
inc
aam
call
cltd
sub
fcom
lret
addr16
fwait
jb
mov
push
mov
aad
mov
jle
mov
lods
cmpsl
stos
xor
cmp
fcmovbe
inc
and
sub
mov
push
das
mov
pop
mov
jl
push
insl
add
je
add
stc
xchg
mov
dec
sbb
hlt
mov
bt
xchg
movsb
mov
loope
call
push
jg
sub
xor
add
and
test
das
mov
or
mov
fisubrl
fs
sub
adc
data16
or
jmp
mov
iret
sbb
pop
sbb
mov
jno
imul
ds
xchg
dec
mov
out
cltd
mov
dec
dec
inc
enter
push
dec
sbb
popa
jl
cld
test
add
cmp
jl
cmp
mov
fisubrl
loope
std
add
dec
cmp
dec
je
lret
mov
aad
int
mov
pop
mov
pop
xchg
dec
and
lds
lret
adc
and
aaa
mov
insl
push
sbbl
pop
push
push
sub
ss
or
sbbb
jmp
mov
jne
push
xlat
mov
gs
jb
popa
jbe
inc
test
pop
ja
icebp
xchg
push
insb
lds
repz
hlt
data16
add
into
out
cltd
lret
fistpll
add
stos
pop
call
call
inc
aaa
popa
mov
dec
fldcw
add
or
aam
in
and
fwait
cmpsl
fidivl
dec
mov
popa
inc
popf
int3
ret
inc
out
ja
fildl
xor
ret
divb
jb
or
stos
mov
cmp
add
les
movsl
jle
test
jb
xor
pop
mov
inc
and
enter
scas
outsb
aas
mov
rclb
cmp
jle
fisttpll
shll
adc
leave
cmp
ret
movsl
jae
jle
mov
jbe
xchg
push
cld
xor
jg
fimull
sbb
push
fsubrs
das
inc
addr16
jl
jns
mov
addr16
xchg
lods
fcmovu
xor
push
clc
sbb
pusha
mov
xor
lahf
scas
lcall
or
arpl
xchg
dec
mov
ljmp
bound
bound
adc
push
adc
in
push
inc
sbb
in
outsb
ds
cmp
ja
bsf
data16
hlt
mov
pusha
pusha
mov
add
inc
into
push
aas
mov
imul
pop
xor
dec
xchg
movups
or
sub
and
lcall
pushl
xchg
ficoml
in
cmpsl
cmpsl
pop
les
mov
data16
nop
ret
shlb
xchg
sub
cmc
or
xor
push
inc
fildll
jmp
pop
fnstsw
add
and
test
and
xchg
fildll
push
cli
sbb
aas
and
xor
mov
roll
lret
push
outsb
jno
mov
lods
jbe,pt
jecxz
sbb
fisttpll
mov
es
push
in
mov
and
adc
imulb
cmp
jl
iret
mov
cld
cli
mov
fimull
inc
into
pop
ss
pop
dec
jp
lcall
sub
sub
ret
cmpsl
int3
dec
mov
push
pop
add
cmp
sub
pop
sets
stos
adc
sti
shrl
dec
insb
shll
add
lret
sub
pop
mov
das
add
test
arpl
or
aas
pop
incb
jmp
dec
mov
mov
movsb
dec
and
mov
xor
sub
mov
es
in
and
mov
and
sbb
cwtl
mov
add
mov
mov
test
sub
imul
outsb
aas
aas
inc
mov
lods
popf
jp
lcall
push
jb
pop
lret
popa
inc
dec
popa
jae
movsb
data16
pop
jge
hlt
cli
adcb
cmpsl
jmp
enter
rolb
sahf
xchg
loope
cmp
dec
pop
enter
mov
xor
jno
mov
mov
or
jne
pop
arpl
icebp
or
inc
jp
or
jge
xchg
adc
sub
popa
adc
jle
orb
test
mov
mov
lds
cld
mov
mov
hlt
clc
lcall
mov
lods
push
pop
into
into
push
pop
popa
cmp
sub
jbe
lea
and
inc
arpl
icebp
push
xor
cmp
and
inc
jg
or
fimull
push
pop
pop
jae
mulb
hlt
add
jmp
sbb
jmp
pop
int3
mov
sub
and
insb
shll
sbb
cmpsl
sar
repz
gs
sbb
loop
insl
js
je
jl
mov
mov
jae
out
das
xor
cmpsl
lea
clc
lea
sbb
stc
andl
jp
xor
inc
orl
sbb
out
xlat
leave
add
xchg
js
rcl
fistps
sbb
pop
sbb
sahf
mov
cmp
adc
in
out
xor
xchg
adc
fdecstp
lock
divb
int
mov
pop
leave
lret
sbb
pop
xchg
cmp
push
insb
inc
out
xlat
scas
fnstcw
sbb
mov
push
add
push
push
and
aam
dec
or
in
rcll
lahf
inc
fldt
shll
or
rclb
xor
cmp
mov
jmp
shll
mov
rcrl
mov
aad
pop
push
jns
hlt
push
jns
jb
jecxz
xchg
mov
pop
jp
aad
addr16
jp
sub
ret
into
mov
cmp
dec
stos
mov
push
jne
dec
orb
shl
push
mov
jge
or
mov
sub
xor
pushl
push
cs
mov
ss
inc
jno
fdivrs
jle
daa
mov
sbb
mov
aaa
popf
xchg
cmpsl
lock
aam
cmp
sub
std
js
dec
push
ljmp
cwtl
adc
cmc
ret
inc
imul
stos
sbb
mov
and
jo
adc
or
or
stc
loopne
add
mov
xchg
add
popa
movsb
pop
jb
movb
out
movsl
imul
jae
inc
mov
jmp
fnstcw
xchg
xchg
pop
ds
sbbl
sbb
mov
push
mov
out
mov
insl
lods
cltd
idivl
xchg
shrb
pop
cmp
cmp
in
notb
push
or
addb
and
or
rol
call
xor
mov
sbb
pop
push
loope
lret
ljmp
push
in
xchg
repnz
ret
push
mov
inc
push
jg
sbbb
add
int3
mov
xchg
rcr
lcall
or
pop
pop
xchg
idivl
movsb
xchg
jge
xchg
sbb
lahf
sarb
mov
cmp
jecxz
xchg
inc
in
ret
xchg
ja
cltd
test
mov
dec
addr16
stc
fwait
xchg
jl
jne
cwtl
mul
add
out
push
xlat
add
pusha
or
mov
call
ret
int
xor
cmp
sub
push
pusha
sbb
icebp
into
ret
pop
das
push
loope
call
cli
pop
cmp
out
lea
sbb
dec
and
cmpsb
jp
insl
inc
or
popa
jns
arpl
inc
push
jne
pop
dec
lock
jnp
xchg
pop
aad
ja
pushf
adc
push
fcomps
jge
out
or
mov
add
pop
popf
xchg
cmp
lock
ret
sub
sahf
imul
adcb
notl
push
js
adc
xchg
or
adcl
cmp
orl
sti
xchg
push
and
adc
mov
dec
mov
xchg
xlat
xchg
and
sbb
negl
mov
bound
mov
fidivrs
movl
xchg
jle
popf
test
test
loop
subb
jmp
pop
xor
das
inc
movsb
stos
inc
ret
sbb
inc
push
jnp
cwtl
jecxz
ret
stc
scas
sbb
aam
xchg
in
je
inc
lcall
call
xchg
mov
cmp
dec
stc
xlat
ficompl
sbb
or
fwait
loop
add
lahf
jge
pushf
sti
pop
cmp
xchg
aad
or
cli
les
aad
mov
mov
sub
dec
adc
stos
jp
jb
imull
and
test
adc
lea
ret
mov
inc
push
popa
out
std
push
xor
out
lds
sbb
pop
out
push
scas
daa
faddp
pushf
movsb
fs
lock
inc
lret
sub
xor
imul
cmp
push
lret
es
dec
fldl
xchg
cmp
mov
iret
dec
into
jge
fidivrl
aam
sub
jae
punpcklwd
pop
mov
pop
gs
outsl
negb
lods
cmp
imul
pop
rclb
or
into
pop
pop
push
hlt
test
pop
shll
dec
scas
inc
mov
mov
shl
jo
pop
lods
roll
hlt
jbe
and
xchg
pop
in
roll
inc
notb
cmp
inc
insl
push
mov
ss
add
inc
add
mov
xchg
enter
mov
int3
loope
mov
pusha
insl
mov
xchg
test
inc
xchg
hlt
lcall
ret
sbb
je
test
jnp
mov
rcll
jle
loope
dec
push
iret
ss
sbb
mov
subb
filds
rcrl
std
jge
or
jle
pushf
movsb
cmp
packssdw
ljmp
ja
shlb
xorl
fdiv
mov
lret
xchg
lods
lock
sub
sub
sbb
jp
sahf
adc
mov
bound
fsts
push
in
aaa
mov
sbbl
mov
lahf
fstl
sbb
jno
ja
mov
jne
out
loop
mov
xor
or
push
cltd
lcall
and
dec
test
mov
inc
lret
fcmovnbe
int3
mov
dec
dec
les
sbb
jmp
call
jmp
xor
xor
in
push
mov
cmp
loop
xchg
xor
xchg
ss
mov
arpl
fcomps
sub
push
sub
and
mov
pop
push
xchg
xchg
out
sbb
js
dec
inc
sbb
mov
leave
cmovb
dec
cld
jno
xor
scas
movsb
mov
jne
xchg
cmp
cmpsb
arpl
jnp
out
jo
jp
ret
sub
cltd
pop
or
idiv
jp
stos
sbb
out
push
fisubs
cmpsb
push
mov
jge
mov
cli
movsb
cs
cmc
lea
ret
loopne
jmp
dec
push
and
daa
outsb
pop
push
test
imulb
mov
jne
or
inc
add
iret
jle
and
adc
push
outsl
je
ret
fimull
loopne
or
mov
sub
roll
lock
dec
into
pop
dec
cltd
je
jb
shll
and
pop
or
fucomp
shl
cld
cmp
and
jae
shlb
adc
dec
leave
sbb
call
cwtl
pusha
pop
cltd
sarb
ds
cmp
sub
adc
jbe
sbb
dec
cmp
movsl
cmp
pop
les
arpl
fs
aas
push
jnp
fidivs
cld
mov
into
shlb
call
jbe
cmp
fcomi
push
xor
mov
imul
pop
jg
ret
pop
sub
add
out
ret
inc
arpl
or
std
lods
fwait
jns
leave
mov
adc
ss
push
mov
add
hlt
cmc
mov
ret
in
xor
js
enter
ds
in
push
xlat
sbb
push
pop
in
sti
out
testl
orl
adc
repnz
dec
dec
or
mov
push
out
mov
cmp
push
int3
lods
movsl
mov
xchg
popa
push
add
add
clc
in
push
outsl
mov
xchg
inc
adc
jg
xlat
mov
push
mov
je
fsts
jg
call
adc
xor
fisttpl
adc
or
es
ret
sub
push
imull
pushf
push
push
mov
aas
mov
ljmp
push
pop
cmpsl
into
mov
pop
dec
xchg
dec
out
dec
jle
out
faddp
mov
mov
movsb
cwtl
orl
inc
js,pt
xchg
cmp
push
clc
clc
jge
xchg
lcall
lods
shlb
push
sti
cwtl
push
faddp
or
nop
cmpsb
sub
cmp
imul
xchg
add
jne
mov
pop
xor
jno
jl
je
adc
jmp
xlat
daa
jno
push
pop
push
hlt
outsb
mov
fwait
arpl
push
sbb
add
or
lea
pop
out
add
ds
sarl
das
lods
lcall
sbb
adc
add
pop
sub
xchg
es
dec
pop
cmpsb
and
cmp
test
outsl
lcall
notb
lcall
jbe
jecxz
das
xlat
imul
inc
dec
nop
lock
jae
into
int
lock
call
pushf
test
and
sub
cmpsb
hlt
mov
add
cmpsl
clc
cmp
inc
sti
out
or
xor
call
push
lods
int3
pop
jns
push
inc
add
clc
loopne,pt
repz
inc
push
lcall
mov
les
iret
roll
fldl
in
add
repz
call
das
aas
pushf
push
push
ss
movsl
push
sbb
inc
idivl
sub
decb
lock
fidivrl
lcall
jne
push
pusha
cmp
cmp
ficompl
nop
mov
gs
lods
push
sahf
inc
stc
repnz
sub
xor
addl
cltd
lods
negl
xor
xchg
leave
movsb
inc
mov
jge
dec
aaa
sub
loop
sub
mov
sbbl
test
outsb
icebp
sbb
arpl
daa
ficompl
or
test
in
cmpsb
mov
mov
insl
mov
ja
int
mov
arpl
lods
xchg
imul
cmpsl
in
pop
sbb
cmp
xor
rclb
jmp
xor
jp
dec
std
dec
jmp
push
cwtl
lea
mov
add
push
or
mov
fistpl
cltd
fnsave
and
mov
std
cmpsb
stos
insl
lea
insl
push
ror
mov
enter
fsubp
mov
cmp
bound
shrl
jnp
sub
mov
cmp
mov
insl
aaa
mov
fwait
das
aas
movsb
jne
adc
inc
sub
neg
sub
xchg
mov
xor
clc
push
loope
test
push
adc
xchg
adc
jmp
push
movsb
push
shll
mov
and
adc
test
pop
sbb
ror
ror
jno
cmp
push
lods
fwait
aas
inc
dec
inc
inc
std
roll
in
push
jecxz
leave
dec
sbb
add
mov
ret
out
loopne
in
addr16
test
xchg
out
jmp
out
test
inc
xchg
mov
mov
mov
decl
jmp
inc
push
mov
in
cmp
or
sub
dec
repz
pop
aam
or
mov
jg
std
dec
stos
cmp
es
sbb
dec
cmpsb
add
jp
jp
push
adc
cmp
jb
ficomps
jmp
and
out
cmp
push
mov
data16
shl
dec
and
lcall
adc
jmp
jae
test
xchg
mov
inc
arpl
insl
push
sbb
mov
jl
shll
xchg
cmp
out
mov
mov
pop
xchg
cmc
pop
out
add
enter
aad
iret
cmp
inc
lods
scas
pop
cs
pusha
or
adc
insl
mov
sub
movsb
adc
adc
mov
test
test
mov
sub
jbe
or
xchg
xchg
push
xor
into
in
and
leave
push
pop
xchg
mov
cmpsl
xchg
out
mov
gs
adc
sub
arpl
xchg
sub
outsl
shrl
push
movsl
dec
or
popa
imul
add
rcl
add
loop
or
add
popa
ret
add
sub
sub
sbb
clc
test
ja
cld
movsb
outsl
cwtl
push
sub
lock
std
cmc
xchg
xchg
xor
dec
outsb
loopne
mov
sub
xchg
xchg
add
dec
dec
mov
in
mov
adc
cmc
data16
mov
jp
lds
imul
inc
mov
push
ret
dec
lock
or
mov
mov
or
std
int
cli
adc
rcrl
fsts
shlb
sub
jae
and
mov
je
in
push
cmp
enter
pop
ret
push
sbb
xchg
ret
and
mov
lods
std
out
outsl
adc
sbb
mov
sub
test
adc
rclb
dec
jmp
pop
jo
mov
call
jge
sbb
stos
pop
das
divl
xor
aas
push
sbb
in
add
gs
xor
xor
clc
vprotq
mov
movsl
jns
out
jnp
sub
mov
mov
aaa
popa
add
mov
ljmp
cmp
lea
lds
xor
jns
cmp
cmp
xor
jne
jno
push
stos
cmc
cli
pxor
push
adc
sti
sub
pop
cmpsb
lret
jecxz
inc
aad
fmulp
sbb
shrl
xchg
mov
addl
jge,pt
dec
test
add
in
mov
sbb
cli
mov
jbe
push
aas
or
pop
xchg
ljmp
mulb
clc
push
leave
dec
push
push
pop
std
mov
fcoml
sbb
js
bound
mov
fucomip
push
push
das
jle
jns
shl
test
xchg
jl
incl
adc
std
rdpmc
das
xchg
push
fs
pop
adcb
and
sub
mov
add
imul
jg
iret
push
or
movsb
shrb
fldpi
xor
inc
std
out
push
xor
xor
inc
jl
add
sbb
sti
dec
bound
cs
pop
add
popa
testl
mov
sub
lock
sub
adc
arpl
and
test
inc
xor
aad
popa
ret
lods
call
dec
or
mov
js
movsb
stc
jg
in
lods
xchg
loopne
ret
dec
inc
adc
testl
aad
jno
push
sub
cwtl
cmp
scas
pusha
jl
fcomp
mov
push
sub
sub
pop
sbb
lds
inc
dec
sbbl
aaa
icebp
fisttpll
sahf
int3
cs
sahf
inc
in
ror
jo
mov
xchg
inc
popa
test
fiadds
cmpsb
mulb
ja
icebp
roll
and
loopne
ljmp
loop
aad
and
push
int3
cmpsl
and
out
pushf
xor
lcall
xor
bound
inc
ds
push
pop
mov
inc
into
call
mov
outsb
leave
ss
lcall
push
fmuls
lock
adc
cmp
fisubs
sub
pusha
xchg
int
push
sub
dec
mov
mov
in
and
inc
stos
sbb
push
loope
iret
xor
icebp
daa
jmp
ret
int
lret
pop
xchg
repz
sbb
insl
outsl
int
xor
testb
push
mov
stos
sub
adc
das
add
adc
pushf
mov
dec
adc
mov
sub
hlt
inc
jb
xor
mov
in
or
or
push
jno
mov
pop
and
pusha
fisubs
adc
imul
pop
pop
repnz
imul
mov
rclb
jae
outsb
rorl
dec
ljmp
cltd
mov
sbb
movsl
inc
sbbb
cmp
scas
jecxz
xor
loopne
mov
ds
jbe
pusha
xor
adcl
xchg
add
icebp
stc
test
inc
daa
shrl
lahf
leave
std
fwait
inc
pop
sub
ret
adc
or
xchg
sbb
push
js
pushf
dec
popf
std
push
sbb
repnz
icebp
lcall
jo
inc
es
jmp
xchg
rolb
insl
cmp
incb
dec
ret
cltd
fcoml
ret
movsl
pop
std
lret
inc
sbb
cmpsb
sub
mov
sbb
data16
inc
cmp
add
rcr
push
pop
xchg
out
fdivs
sub
loopne
jb
aad
mov
int3
adc
sub
pusha
xlat
jo
test
and
mov
in
pushf
pop
dec
insb
std
sbb
mov
mov
jnp
hlt
cmpsl
mov
pop
out
or
test
sbb
sub
addr16
mov
into
subl
mov
fisubrs
out
nop
out
inc
inc
fstps
addl
mov
sbb
xor
out
push
sahf
jnp
and
xchg
adc
sbbb
mov
std
pop
sti
jge
push
push
daa
lock
or
sbb
les
std
popf
call
neg
dec
dec
out
nop
sbb
xchg
xchg
jmp
lds
test
push
dec
loopne
mov
out
aas
sub
cwtl
fyl2xp1
dec
stos
addr16
pop
pushf
mov
add
fadds
test
scas
rcrb
jecxz
and
mulb
fldl
inc
push
lret
sahf
pop
imul
stos
and
rclb
cld
xchg
insb
scas
pushf
dec
lods
pop
inc
mov
cmp
pop
mov
cmp
mov
jg
or
push
ror
lahf
cs
mov
pop
int
sbb
and
les
mov
shll
or
popa
fistpl
xchg
adc
mov
gs
xchg
addl
sub
lret
fstpl
sbb
lock
repz
mov
sub
test
jg
imul
mov
outsl
mov
into
clc
cltd
into
add
test
mov
sub
and
xchg
shlb
outsb
je
aad
test
dec
cmp
dec
ja
sti
dec
mov
adc
lcall
imul
jb
jge
sub
push
mov
inc
mov
test
add
or
test
mov
push
jnp
mov
and
dec
push
jno
mov
mov
das
cmp
sahf
mov
shrb
test
dec
adc
or
mov
lahf
add
sub
test
int3
outsb
lock
mov
inc
mov
xchg
lahf
xchg
loope
addl
jle
pop
or
sbb
push
movsl
lods
lds
xchg
popf
push
jae
mov
pop
xor
shrb
les
mov
pop
outsl
lods
cmp
cmpsl
daa
shl
sti
popf
push
xor
push
mov
repnz
jno
addr16
dec
jge
daa
pop
dec
movsb
sarb
es
movsb
inc
mov
or
sbb
xchg
scas
jne
mov
xchg
xor
and
cmp
sti
out
dec
dec
push
mov
pop
subb
cmc
cmc
dec
xor
leave
test
mov
in
pop
cmp
inc
imul
xchg
adc
xchg
loope
dec
pushf
mov
repz
cmp
dec
mov
daa
loop
cmp
daa
jg
pushf
adc
cmp
ret
and
mov
lods
test
adc
aam
add
ret
cs
and
test
pop
repnz
mov
cmp
enter
push
sub
mov
mov
sub
clc
sbb
mov
pop
mov
cmc
ljmp
jecxz
mov
testb
cltd
adc
xor
shlb
sbbb
push
ret
push
sbb
or
pop
sub
mov
fsubl
or
dec
loop
push
cmp
int3
push
jmp
fs
mov
cwtl
test
push
or
cmpsl
je
popf
cmp
into
shr
pop
sbb
fstp
ret
xchg
mov
add
xchg
cmpsb
jbe
sub
xorb
sbb
mov
lods
out
xchg
ret
sbb
sahf
cwtl
aaa
jae
xorl
mov
sub
mov
mov
sub
in
bound
imul
dec
adc
sbb
or
adc
and
lods
xor
push
cmp
jne
ljmp
lret
mov
out
into
jp
xor
xchg
fcmovne
cmp
inc
into
orl
jle
jnp
pop
test
decb
and
mov
aam
add
arpl
insl
jl
sbb
inc
pop
xchg
dec
adcl
addl
outsl
cltd
mov
xchg
in
bound
lds
adcb
adc
addb
in
mov
mov
dec
or
aam
push
ret
rcrb
sub
lea
xchg
adc
jle
cld
inc
rcl
push
sub
push
sti
sbb
dec
mov
push
xchg
lret
mov
movb
mov
mov
test
repnz
cltd
popa
fidivrs
xor
stos
in
pcmpeqw
das
add
sub
xchg
mov
inc
cwtl
imul
sub
ljmp
imul
pop
push
sbb
sbb
inc
call
pop
mov
mov
cmpsl
leave
inc
sbb
push
adc
adc
bound
out
mov
dec
or
js
sub
and
popf
hlt
rorl
mov
popa
dec
mov
pushf
stos
in
or
ja
repnz
repnz
aaa
stos
or
mov
mov
push
daa
ss
jno
add
pusha
push
xor
xchg
fcoms
fwait
pop
into
sbb
outsl
rorb
push
lods
bound
sub
cmp
mov
sub
orb
imul
jmp
fdivp
dec
pop
adc
mov
push
mov
rcl
fcomps
sbb
push
popf
leave
mov
sub
xor
jle
das
test
sarl
imul
out
into
xor
adc
sti
es
hlt
sbb
pop
std
xor
out
cmc
dec
scas
mov
aad
xchg
cmc
jae
push
dec
xchg
lret
movsb
imul
mov
pop
jp
mov
nop
cmp
mov
js
scas
inc
aad
jge
inc
cmp
jl
push
pushf
lahf
cmp
out
bound
jns
inc
dec
pop
jb
aaa
push
dec
movsl
jge
popf
inc
aam
sub
out
xor
fcomps
xchg
mov
push
jbe
lds
push
int
ficoms
mov
iret
fdivrs
adc
out
push
sub
into
jne
mov
inc
cwtl
sbb
out
jnp
mov
push
add
cmp
scas
dec
jmp
fbld
cmc
les
mov
push
ds
les
sbb
lret
sbb
movsl
or
into
push
arpl
divb
imul
sbb
dec
jg
sbb
xor
fwait
push
mov
je
jno
jmp
dec
or
mov
loopne
or
xor
scas
mov
mov
cmp
jne
shrb
xchg
xchg
jg
out
mov
lcall
test
orl
std
adc
inc
push
adc
inc
cmpl
jns
push
daa
fnsave
mov
inc
xchg
jmp
inc
cld
inc
fwait
sub
adc
mov
xor
mov
int3
adc
push
hlt
jnp
out
popf
dec
or
and
test
jle
push
pop
in
pop
dec
dec
test
or
add
cmp
pushf
mov
pop
and
out
xor
in
sbb
rcrb
fcoms
dec
add
and
xlat
aam
cli
push
mov
xchg
call
arpl
and
add
xchg
rorl
push
mov
xchg
cmp
push
sub
enter
jb
xchg
lock
xchg
mov
xchg
push
sub
insl
sbb
mov
aam
lahf
or
dec
sub
push
arpl
out
andb
idivl
jb
iret
mov
pop
sbb
lret
je
in
mov
shrl
adc
and
mov
fwait
or
mov
nop
mov
orl
sbb
xchg
jle
mov
xor
inc
adc
in
xlat
xorb
mov
test
pusha
pop
sahf
mov
addl
push
dec
and
push
mov
or
rclb
inc
ds
jl
repz
sub
push
dec
idivl
into
sar
mov
repnz
mov
sbb
xchg
dec
pop
insb
jbe
pop
pusha
lahf
jns
push
jo
lret
int3
scas
lcall
stos
add
mov
mov
lahf
hlt
mov
popa
dec
pushf
mov
cmpl
fisubs
mov
dec
xchg
les
andl
mov
es
outsb
dec
fsubl
inc
add
into
test
jnp
inc
adc
xor
jbe
out
aad
jbe
addr16
sbb
xorb
sbb
mov
sbb
cltd
cmp
fwait
mov
push
das
pop
adc
push
push
dec
ret
fs
lea
pop
lods
jno
mov
sbb
rolb
xlat
jnp
fidivrs
adc
lods
out
std
frstor
and
jbe
lahf
cmp
xchg
mov
or
movl
in
mov
jbe
sub
fadd
mov
les
ret
bound
bound
sub
mov
data16
je
inc
fdivrp
into
insb
lcall
in
sahf
sub
push
sti
aam
ds
inc
and
jne
in
imull
push
push
pop
push
inc
dec
mov
mov
mov
adc
mov
adc
sbb
mov
enter
pop
scas
push
push
xlat
popa
inc
ds
lahf
ss
mov
cmp
push
jo
iret
push
dec
dec
sahf
pop
push
xchg
rcr
les
add
or
fnsave
jbe
imul
in
movsl
movsb
mov
push
fstp
xor
rcl
into
out
imul
push
pop
mov
pop
je
loope
pop
cmp
pop
cmp
cld
call
or
mov
clc
mov
sub
and
xchg
das
mov
in
cmp
xchg
add
sbb
mov
or
decl
ja
repz
push
mov
mov
jle
inc
jp
jb
fstps
push
das
cmp
cmp
psubd
xor
ss
orl
out
stc
in
incl
add
out
std
inc
stc
mov
and
pop
iret
pushf
gs
jae
cmc
scas
cli
lea
mov
mov
mov
mov
loopne
cmp
jg
cs
int3
xlat
xchg
xor
inc
inc
push
dec
add
xchg
mov
inc
cmpsl
mov
mov
je
mov
and
aad
stos
sbb
jnp
pop
push
dec
loope
inc
jnp
add
ret
xor
mov
cmpsb
or
cmpsb
push
les
arpl
mov
popl
xchg
pop
stc
add
lahf
add
rcrb
ret
sub
sbb
or
xchg
push
andl
fsubp
inc
mov
add
fisubrl
scas
xchg
and
adc
pop
push
mov
cwtl
jp
das
frstor
imul
pop
aaa
mov
test
jmp
mov
cmp
mov
imull
in
fld
pop
pop
outsb
out
dec
lret
mov
cmpsl
adc
jg
mov
loope
mov
out
dec
dec
mov
icebp
sub
or
std
mov
out
scas
negb
mov
push
pushf
mov
idiv
sbbb
ret
adcw
mov
arpl
jnp
loope
xor
jb
faddp
jb
stos
xlat
test
lahf
cmp
xchg
test
pop
cmpl
inc
sti
pushl
fiadds
ret
or
call
sbb
xchg
and
orl
dec
fisubs
pop
hlt
into
shlb
icebp
sti
pop
cld
loope
gs
xor
inc
cmp
loopne
pop
xchg
push
jbe
mov
icebp
ja
and
lahf
fs
xlat
push
and
mov
xor
insb
add
aas
lds
pop
jns
sbb
movsb
mov
push
inc
loope
cld
mov
sub
imul
pop
or
mov
adc
inc
mov
add
inc
cmp
push
repnz
inc
jmp
repnz
scas
insb
orb
push
cmp
xchg
adc
push
pop
jecxz
test
adcb
aaa
jl
jb
jecxz
in
add
inc
mov
inc
xor
or
add
push
pop
jmp
rcrl
jmp
mov
sbb
dec
ret
jns
dec
fstl
stos
movsb
lods
int
sbb
cmpb
mov
pushf
mov
fisubl
pushf
rcl
std
push
fsubr
mov
inc
add
lret
inc
out
mov
in
lcall
shrl
rorl
insl
pop
imul
inc
cld
pop
repz
push
mov
testl
jp,pn
inc
cmp
mov
lret
and
inc
icebp
in
rorb
notb
mov
inc
movl
ds
add
lea
push
mov
sub
scas
jmp
adc
push
cmpsb
add
mov
mov
xchg
bound
cmp
or
outsl
xorb
pop
rclb
adc
shlb
addb
loope
jno
lahf
loope
and
loopne
enter
xchg
and
stc
or
inc
inc
shld
stos
inc
mov
aad
add
ss
fisttps
icebp
sbb
fsubr
in
mov
test
cmp
xor
adc
mov
les
or
movsb
fwait
in
divl
dec
cli
inc
ret
jecxz
push
pusha
lcall
mov
jo
xchg
mov
sbb
aad
inc
shrb
xor
mov
icebp
xchg
out
dec
ds
cmp
fs
xor
fistl
or
push
inc
rcrb
sbb
pop
loop
cmc
movsb
or
mov
push
xlat
inc
or
xchg
js
lcall
pop
pop
mov
push
xor
mov
mov
jge
cli
addl
xor
loope
jo
int
lods
call
and
dec
mov
cmp
mov
sbb
push
mov
loope
iret
mov
mov
fcomps
or
fidivl
mov
pop
loope
push
sub
cli
pop
or
jecxz
sbb
cmp
cltd
fstl
or
mov
xchg
add
insb
xchg
addb
jle
rolb
mov
pop
mov
out
shl
pop
mov
mov
push
stos
mov
cmp
jg
sbb
inc
and
pop
cs
or
and
popf
fisubrs
dec
jg
mov
sbb
mov
pop
sbb
dec
mov
add
adc
test
inc
xor
aaa
adc
ret
cmp
adc
inc
add
addr16
mov
sub
or
movsl
push
jns
fnsave
inc
and
inc
mov
push
or
inc
test
ret
or
insl
ds
mov
icebp
mov
fs
jo
mov
sbb
int3
add
mov
rolb
enter
pop
test
ret
xchg
cltd
ja
xchg
pop
xchg
adc
pop
pop
xchg
push
pop
mov
idiv
int
pop
jmp
cmp
cmp
and
rcr
sub
xlat
icebp
adcb
ret
dec
mov
jne
hlt
test
push
shlb
mov
adc
and
ret
xchg
call
cmp
pusha
scas
inc
stos
sub
stos
jge
rorb
movsb
and
mov
test
cltd
mov
pushl
mov
sbb
mov
andl
loop
ds
xlat
rdmsr
movsl
pop
in
and
add
cmp
out
adc
popf
and
xor
pop
xchg
push
fdiv
aam
push
idiv
fsts
out
add
ret
cmp
cmp
in
pop
mov
xchg
arpl
shrl
hlt
daa
cmp
push
cmp
fcompl
jmp
je
mov
and
or
inc
imul
dec
mov
or
xchg
xor
pop
xchg
test
pop
cmp
jge
lds
mov
cmc
stos
cmpsb
mov
test
push
test
je
jae
jo
stos
xchg
dec
es
mov
mov
iret
pop
sub
sbb
scas
aad
mov
push
dec
sub
ret
cmpsb
and
outsb
pushw
aaa
cli
ds
sub
mov
pop
stos
cmpsl
imul
test
adc
shlb
test
mov
pop
addl
cmp
dec
sub
popa
add
ljmp
movsb
jecxz
add
aam
xchg
mov
or
mov
mov
subb
std
insl
mov
sbb
pop
outsb
mov
and
repnz
xor
mov
std
add
mov
and
mov
mov
jmp
mov
cltd
loope
insl
pop
enter
mov
xchg
imul
clc
push
es
stos
push
in
mov
ljmp
xchg
jnp
out
push
lret
mov
dec
mov
scas
pusha
outsl
arpl
sub
or
lret
sub
into
cmp
repnz
adc
add
xor
in
jl
aad
aaa
push
mov
push
adc
or
or
mov
inc
andl
fstps
lock
pop
nop
xor
into
loope
cmp
jbe
aas
fisttpll
stos
cs
nop
jo
or
fs
insb
xor
xor
fsubrs
push
movsb
and
nop
stos
mov
xchg
fcoml
pop
daa
adc
shrl
pop
xchg
push
mov
lcall
in
jae
leave
sub
idiv
and
push
sbb
add
ljmp
sub
lahf
nop
outsb
sti
pop
orb
mov
ja
or
test
sbb
and
in
scas
fstpt
xlat
mov
push
clc
sub
mov
fwait
lcall
sub
add
es
jae
sbb
xchg
sbb
pop
std
push
out
add
cmp
mov
shr
shll
cld
inc
push
mov
dec
aad
in
pop
leave
adc
jmp
sbb
ja
mov
push
pop
jo
cmc
ds
loop
stos
push
xor
mov
fldenv
adc
cmp
cmp
test
in
dec
push
push
je
push
adc
ret
leave
cli
jp
arpl
and
and
test
lret
sbb
dec
sbb
cmp
cmp
gs
leave
sbb
mov
xchg
shll
pop
inc
in
stos
movsl
lcall
sti
leave
out
push
sbb
out
mov
mov
sbb
filds
cmp
in
cmp
rorb
mov
daa
aam
inc
rcrb
mov
rcll
imul
mov
mov
lcall
mov
outsb
mov
push
or
sub
sbb
test
daa
stos
jmp
mov
rolb
jb
jne
pop
js
push
test
rclb
xor
sbb
mov
mov
jl
add
sti
sub
cltd
insb
sti
cs
in
mov
test
lods
push
addb
sbb
fsubr
cmpsl
mov
jb
aad
dec
sub
jns
out
mov
mov
cmp
das
sub
mov
cwtl
cmc
into
add
pop
xor
sbb
xor
pop
xlat
or
pop
adc
cmp
mov
mov
mov
mov
aam
imul
test
out
ja
cmpb
sahf
add
add
dec
in
add
js
int
mov
jae
add
ret
popf
ret
push
insb
inc
add
cld
jmp
scas
pop
jae
andb
mov
adc
jns
cli
or
sbb
push
lret
adc
mov
pop
fdivs
popa
call
pop
aaa
cmc
leave
ljmp
xor
mov
jae
and
mov
movsl
iret
mov
call
out
push
sbb
loopne
shlb
ss
cmp
dec
test
jl
push
hlt
sti
or
jecxz
sbb
xor
andb
add
xchg
mov
arpl
outsl
das
enter
mov
cmc
jle
pop
popa
pop
xchg
push
ja
add
js
jecxz
orb
std
dec
pop
int3
cmpsl
cmp
mov
inc
incb
cmp
insl
push
xchg
orb
in
andb
pusha
scas
sti
inc
dec
cmpsb
and
pop
daa
test
aas
mov
mov
push
jmp
dec
pop
jne
call
push
push
or
cmovne
aaa
andl
iret
aad
rclb
mov
popf
or
mov
fisttpll
sbb
popf
cmp
inc
dec
shlb
repnz
pop
out
cld
inc
mov
push
test
ss
xor
xchg
push
sarb
pop
adc
lret
or
sbb
movsb
push
and
nop
jns
adc
push
push
or
jge
pop
call
jmp
inc
iret
mov
xor
ss
adcl
es
mov
sbb
es
dec
xchg
sub
gs
decl
fwait
sbb
and
ss
leave
or
push
lret
sti
pop
test
rorl
ljmp
cmpsl
lods
and
push
das
pop
loop
sub
and
icebp
mov
int
push
jne
cli
sub
xchg
pop
test
jecxz,pn
sub
jl
push
aad
sbb
lret
jg
pop
loopne
jne
cwtl
fstps
xor
pop
fadd
daa
out
mov
or
idivl
js
push
push
scas
jmp
jl
jl
in
rclb
arpl
cli
sbbl
mov
sbb
cmp
jns
xor
testb
bound
sbb
pop
add
cmp
out
mov
push
sbbl
push
mov
sbb
xchg
in
shrb
dec
orb
inc
and
cmpsl
dec
or
push
pop
iret
sbb
add
icebp
inc
stc
lret
push
int
sbb
mov
outsb
mov
pop
sbb
subl
xchg
jno
in
xor
dec
mov
or
jbe
outsb
sub
sbb
xor
jle
inc
dec
fsubs
cs
xor
jp
fdivp
stc
arpl
inc
addb
cld
ficoml
sub
adc
pop
jb
cmc
aas
scas
les
cmp
xchg
jle
adcb
push
push
negl
lret
out
fisttpll
dec
jae
cld
add
ljmp
cltd
adc
dec
out
lods
repnz
test
cmpsb
outsl
loope
out
xlat
and
xlat
jl
inc
cmp
pop
or
dec
test
jb
nop
fildl
mov
lock
mov
sub
push
data16
out
sub
aas
iret
jno
aaa
cs
pop
dec
pop
pop
je
movsl
xchg
bswap
push
sbb
sub
lds
adc
cltd
outsb
xor
ret
adc
adc
mov
and
repnz
push
iret
xchg
iret
les
pop
push
xchg
mov
scas
fdivs
mov
xchg
ret
pop
mov
inc
jmp
nop
and
xchg
stc
push
pop
fs
pusha
addb
imul
ret
enter
push
scas
jns
jns
int3
test
xor
mov
push
mov
call
clc
imul
sub
mov
iret
shl
andl
movsl
repnz
or
jne
dec
jb
mov
sbbb
fildl
adc
xor
cs
cwtl
mov
arpl
out
mov
adc
pop
push
outsl
push
and
scas
xchg
call
ljmp
dec
imul
cmpsl
in
out
jno
push
pop
loop
stc
xchg
xor
icebp
insb
mov
imul
sub
add
pop
pop
stc
js
jecxz
addb
sbb
or
push
fnstcw
adc
jge
mov
and
lock
js
popa
movsl
cmp
xor
dec
clc
xor
mov
add
xor
push
pop
loop
ret
xchg
lods
mov
fmul
sahf
mov
push
xor
imulb
lea
scas
push
shrl
imul
gs
and
outsb
insb
inc
lds
mov
call
orl
jne
loop
nop
and
lcall
pop
mov
outsl
imul
jl
push
roll
lcall
xor
rol
es
push
shlb
stc
inc
xor
ret
jno
cmp
ss
andb
push
mov
sub
adc
xor
fucomi
cmc
outsl
fidivs
pusha
mov
adcb
mov
negl
repz
lahf
xchg
jle
add
xlat
loopne
cmpsb
jp
js
mov
or
or
xor
add
or
mov
sahf
lahf
aas
stos
test
bound
sub
enter
aad
jp
clc
rcrb
cltd
pop
nop
push
aad
push
inc
jns
mov
aas
cmp
jo
inc
std
inc
setl
mov
sbb
addr16
test
cmp
pop
ficomps
pop
scas
pop
sub
push
test
nop
imul
in
adc
adc
mov
pushf
xchg
iret
mov
data16
jo
adc
add
loopne
gs
xor
pop
ljmp
popa
jnp
adc
cmpsb
push
mov
jle
mov
mov
mov
pop
sub
mov
sub
mov
ret
sub
sub
outsl
mov
pop
rorb
mov
sbb
lea
or
xlat
pop
and
dec
out
jecxz
fwait
xor
movsb
dec
xor
cmp
lds
jp
inc
xor
mov
pop
xor
cmp
cli
scas
inc
jne
shlb
cmp
push
adc
xor
adc
notb
or
mov
scas
add
repnz
xor
lods
jne
test
and
mov
mov
cmpsl
xor
sbb
inc
xchg
and
xor
push
dec
popa
enter
bound
sub
mov
sbb
in
cmc
imul
xor
or
mov
sbb
xchg
inc
sub
jb
out
inc
sahf
jo
repz
popa
mov
inc
fnstenv
adc
jle
jno
mov
dec
dec
push
pop
cld
imul
sbb
pop
mov
jecxz
push
call
pop
cli
inc
jmp
icebp
imul
or
loope
sub
cs
jbe
fistl
sbb
cwtl
or
mov
cmp
jg
xor
ljmp
mov
jae
lock
push
outsb
loop
sbb
xchg
aam
cmp
xchg
stos
pop
cs
cwtl
rolb
notl
xor
out
and
jl
mov
push
jge
add
int
sbb
push
adc
daa
int
pusha
adc
clc
jmp
or
sbb
int
add
aaa
dec
bnd
xor
push
xchg
jecxz
bound
cs
mov
xchg
push
mov
mov
lds
xchg
dec
inc
xchg
into
pop
jo
je
fnsave
fmull
cld
out
loope
add
and
or
imul
mov
pop
jae
hlt
inc
mov
and
adc
jb
jo
ret
insl
les
lahf
lock
sbb
jecxz
stc
int
add
jg
and
mov
repnz
push
clc
aaa
repz
xchg
psubq
mov
cli
out
jp
sbb
out
jo
jbe
adc
sti
data16
out
lods
add
out
sub
and
pop
inc
fnstsw
xchg
sub
sbb
das
or
es
pop
jnp
jno
rdmsr
fsubr
adc
xorl
sbbl
sub
shlb
mov
pop
inc
cmc
inc
cmp
mov
out
mov
orl
add
cmp
sub
mov
dec
cmp
popf
lea
bound
das
sarb
xchg
fstpl
mov
clc
fstpt
ret
dec
fwait
push
icebp
out
imul
faddp
and
mov
sbbl
jp
icebp
inc
xchg
mov
cmp
out
inc
dec
insb
les
jbe
jno
or
jle
and
or
hlt
popa
insl
push
mov
jnp
sub
lahf
dec
out
lds
sub
int3
sbb
dec
push
pop
xor
xor
lahf
mov
inc
cmp
pushf
mov
sahf
fcoml
pop
movsl
and
adc
push
bswap
in
mov
cmp
mov
data16
or
xchg
ds
xchg
shrl
adc
pop
cmp
fiaddl
imul
add
xor
mov
push
mov
icebp
sub
push
pusha
insl
mov
push
pop
jl
fs
movsl
inc
or
fwait
pop
and
imul
xor
shll
sbbl
into
jo
lcall
mov
inc
jb
or
dec
roll
xchg
mov
in
sti
dec
mov
scas
and
or
xor
push
mov
push
int3
inc
mov
fnsave
xchg
psubusw
inc
imul
insb
inc
push
adc
int
mov
sub
add
aas
xor
in
ss
jp
rolb
xor
imul
mov
and
scas
push
lcall
jp
pop
or
xor
das
ret
pop
pop
aad
ficoml
popf
mov
lret
push
push
or
dec
cs
lcall
sbb
xchg
xor
jmp
add
arpl
mov
stos
je
fs
arpl
loope
or
aas
pusha
xchg
mov
cmp
cmc
jl
out
movsb
adc
cwtl
add
lret
pushf
ja
xor
ficomps
mov
fdivr
mov
shlb
jae
push
and
xor
shll
je
cmp
insb
add
arpl
xchg
add
gs
lahf
pop
push
dec
sbb
scas
xor
aam
ret
xor
hlt
xlat
aaa
enter
adc
push
inc
sahf
jmp
mov
dec
stos
cs
cmp
pop
repz
in
adc
add
lock
mov
add
mov
xchg
test
and
gs
or
insb
scas
sti
push
ja
test
mov
sbb
cli
in
jne
fistpl
jp
std
insl
not
and
jb
mov
and
stc
stc
xchg
adc
sbb
dec
and
insl
xchg
ja
xor
and
adc
movsl
mov
pop
jge
mov
mov
test
xor
xor
dec
inc
shrb
add
lea
insl
pop
bound
xchg
dec
xchg
sbb
daa
repnz
mov
lds
xchg
cwtl
push
mov
bound
fnstsw
adc
push
repnz
dec
and
xor
or
push
jae
or
and
das
sbb
push
mov
mov
mov
xor
and
add
or
jg
add
jns,pn
pop
xchg
pop
iret
cmp
cmp
aad
stc
or
rorb
stos
adc
cs
test
add
xor
imul
pop
out
shl
loop
jb
adc
cmc
popa
sbb
popf
mov
incb
lret
jnp
dec
sbb
aam
push
jno
or
xchg
pop
ja
xor
pop
mov
fdivs
cltd
fwait
xchg
lcall
out
push
mov
ret
jmp
or
iret
or
sub
xor
or
push
out
bound
add
mov
aad
loop,pn
sub
int
aaa
das
add
cmc
js
jge
rcrb
sub
push
mull
test
pop
mov
pop
push
xlat
fwait
ds
repz
nop
subl
js
mov
loopne
mov
mov
mov
daa
jg
lds
mov
int
scas
mov
outsl
xchg
or
jg
add
xchg
aaa
or
mov
rcrl
push
mov
orl
out
dec
shrl
ljmp
std
adc
inc
lcall
xor
std
cs
mov
jbe
clc
rcr
mov
or
mov
decb
and
sbb
jmp
test
in
leave
xlat
repz
pop
dec
sub
mov
mov
mov
xchg
mov
inc
sub
inc
fdivrl
fldenv
aas
ds
jl
or
push
ret
les
push
cmp
mov
push
insl
addr16
mov
and
or
and
out
sbb
mov
loop
mov
push
test
xchg
and
sbb
pop
jno
into
leave
lret
and
jae
inc
sbb
bswap
mov
xchg
lret
xor
push
les
in
scas
xor
push
sti
std
add
jmp
stos
mov
clc
das
in
mov
push
add
push
push
les
push
sbb
data16
js
out
add
loope
imul
sbb
and
xor
adc
mov
inc
push
fildll
cmp
push
push
mov
loopne
mov
mov
negl
das
mov
pusha
in
rclb
mov
int3
pavgb
sbb
arpl
imulb
int3
fdivrl
ljmp
xor
aaa
fucompp
aas
les
iret
add
loope
movsb
add
sti
lahf
jecxz
or
mov
and
cmpb
pop
lods
clc
sub
inc
bound
fmuls
lahf
int3
call
lret
fsubrl
je
cmp
nop
idiv
in
jl
neg
or
enter
mov
repz
test
pop
adc
xchg
pop
xchg
out
and
mov
pushl
add
inc
pop
test
xor
mov
sub
ror
outsb
enter
lret
out
leave
lahf
roll
xchg
out
or
push
cmp
xchg
inc
jns
adc
insl
push
dec
lock
mov
inc
or
aas
data16
aaa
push
xchg
inc
mov
xor
and
lods
dec
sbb
pop
cmp
or
aas
push
int3
lret
pop
stos
not
mov
mov
out
jmp
push
out
pop
jp
cld
pop
inc
xchg
xor
xor
inc
sahf
les
dec
xor
adc
jecxz
andl
stos
adcb
xlat
push
lret
pop
mov
es
fsubl
or
cmp
mov
inc
xchg
lahf
inc
xchg
mov
mov
mov
ljmp
dec
mov
aaa
cmc
dec
imul
add
jge
mov
or
les
inc
popa
rorl
sbb
ret
roll
daa
xlat
mov
sbb
sub
xor
flds
pop
and
or
jl
imulb
sub
pop
cmp
imul
test
dec
sub
jecxz
in
pushf
jne
mov
push
inc
adc
xor
sbb
mov
andl
jno
sub
icebp
mov
sub
pusha
xchg
mov
sub
cmc
mov
imul
pop
xchg
pop
addl
popf
jb
push
add
cmp
mov
adc
leave
xor
gs
and
mov
push
jne
pop
add
rorl
push
adc
sbb
divb
fdiv
mov
push
xor
loope
pop
pop
movsb
jmp
sar
or
jl
sti
inc
sahf
xchg
std
or
aas
out
mov
shll
dec
or
xor
dec
mov
jo
xor
sbb
push
pushfw
pushf
stos
adcb
cltd
inc
push
push
sub
mov
push
and
mov
xor
push
test
fsub
addr16
fldenv
lock
xor
add
cs
pop
aam
imul
aaa
mov
int
xor
scas
cmp
jmp
xor
pushl
dec
jmp
add
dec
out
xchg
dec
shll
xor
adc
out
insb
adc
dec
aam
jmp
loopne
or
jmp
cmpsl
inc
das
adc
xchg
jmp
imul
sarl
push
xor
or
jbe
mov
cs
mov
jne
jo
bound
xchg
icebp
cmp
sbb
and
xchg
inc
stos
add
cmp
cmp
jle
pop
mov
into
cmp
xchg
and
scas
bound
cli
mov
jmp
dec
or
cmp
pop
data16
sub
outsl
cwtl
into
mov
lods
pop
ret
stc
bound
xchg
aam
cltd
mov
enter
inc
jmp
popl
mov
adc
jnp
fnstcw
cld
inc
jne
or
xchg
xchg
js
cltd
inc
xor
mov
test
mov
add
and
xchg
pusha
mov
aam
dec
jb
mov
sahf
leave
out
dec
frndint
pusha
shrl
mov
sti
pop
and
out
cmp
sbb
mov
movq
mov
adc
movl
inc
inc
sbb
lea
ret
iret
pop
aaa
and
lret
test
push
mov
xchg
jecxz
ja
fnstenv
push
xorb
pop
shll
int3
fwait
or
sub
repz
cmp
imul
les
scas
out
insl
out
lret
xchg
xchg
push
into
xlat
xor
inc
and
aaa
orb
jb
jo
xchg
mov
jae
cmp
fisttpl
movsb
cmp
cs
xchg
mov
add
lds
orb
in
xor
pop
cmpsl
pop
sar
int3
je
or
mov
out
stc
call
jno
in
push
daa
mov
pop
in
sub
mov
jns
sbb
cs
fcomps
enter
fldt
jne
nop
cld
iret
scas
adcl
push
or
or
fs
clc
push
incb
sbb
or
xchg
push
push
lcall
jp
jnp
ss
mov
int
insb
inc
daa
scas
andb
mov
inc
outsb
push
pop
lea
mov
push
adc
cmpsb
mov
sahf
pop
inc
xchg
jbe
jl
test
add
add
push
test
push
add
xlat
xchg
fwait
std
pop
and
or
dec
pop
mov
mov
jmp
add
imul
mov
ror
adc
pushf
mov
call
jne
outsl
hlt
jecxz
aad
aas
cmc
push
in
add
ss
andl
cmpsl
clc
or
es
hlt
test
push
pusha
mov
jo
xlat
pop
lock
xchg
xchg
dec
xor
jo
sarb
loopne
sub
xchg
sbb
pop
cmc
jb
sub
fstl
sbb
push
lahf
pop
loop
pop
into
cmp
das
popf
out
out
outsb
push
clc
or
sub
movsb
dec
add
test
inc
sub
cmpb
ja
xchg
dec
in
xor
shl
or
std
xor
or
mov
in
daa
call
jns
test
mov
cmc
cmc
mov
les
fistpll
in
sub
call
and
xchg
movsb
popl
pushf
rclb
or
sarb
rolb
dec
lock
fs
xchg
insb
into
jns
pop
pop
pop
inc
jo
js
int
pop
push
mov
mov
js
cmp
push
imul
or
sub
adc
sub
fdivrl
in
clc
out
cmp
pop
xchg
inc
fcomps
cmp
call
push
push
bound
xchg
jnp
mov
mov
stc
sbb
rorl
dec
ja
xor
jae
daa
jg
out
xchg
leave
or
mov
movsl
sbb
es
addl
pop
ss
sbb
lret
pop
mov
test
fwait
js
and
ljmp
jbe
adc
insl
pop
xor
sbb
cmp
adc
inc
aam
cmpsb
popa
pusha
lahf
xchg
into
dec
mov
jne
mov
sahf
sub
inc
mov
mov
and
add
fcmovb
into
adc
mov
sbb
ret
cli
repnz
rclb
sti
sbb
mov
lcall
stos
lds
or
scas
mov
or
push
hlt
jp
push
sbb
adc
mov
mov
scas
lock
and
xor
out
cld
clc
int3
xchg
adc
jbe
or
jno
andb
loop
push
fisubrs
xor
push
lds
cmpsl
push
mov
leave
outsb
jnp
adc
shlb
mov
add
int
shr
inc
jae
jp
dec
mov
pop
cmp
es
test
out
sbb
xchg
es
lret
jmp
scas
iret
pop
sub
push
outsb
insb
sbb
and
xchg
sbb
es
xchg
or
inc
ret
in
jbe
mov
in
je
jns
cmp
add
add
dec
in
mov
dec
gs
xchg
jp
inc
mov
enter
push
hlt
cmp
push
add
mov
mov
into
stos
sub
jle
mov
pop
push
push
and
decb
out
pop
mov
shl
dec
mov
leave
lahf
xor
dec
out
das
sbb
scas
inc
daa
ljmp
ret
mov
mov
xor
xor
enter
ja
mov
test
call
shlb
sbb
sbb
xchg
mov
mov
cmc
adc
out
jne
mov
in
loope
mov
and
and
xor
xchg
mull
add
fmull
les
mulb
xchg
leave
inc
sbb
outsl
test
mov
data16
in
aas
ja
xor
adc
mov
ficoms
mov
ror
cwtl
jo
xchg
xor
and
sti
mov
ds
xchg
jl
pop
imul
and
repz
pop
jo
jecxz
iret
sub
cli
mov
insl
dec
adc
iret
xchg
xchg
pop
lea
xchg
sbb
outsl
mov
dec
cmp
jns
arpl
rol
insl
mov
mov
xchg
pop
dec
sbbl
imulb
sub
test
fs
cltd
jnp
xchg
testb
sub
gs
leave
mov
ret
xor
fwait
xchg
jbe
xor
xchg
mov
xchg
push
outsb
sti
push
sub
cli
js
add
adc
aaa
cwtl
adc
icebp
data16
sub
sub
sbb
imul
mov
jbe
pop
ss
cltd
jo
out
sbb
push
aam
addr16
leave
sub
shrl
push
or
xchg
push
je
cs
fisubrs
or
xor
adc
sbb
insb
out
mov
cmp
test
scas
mov
movsb
jae
and
popl
std
inc
les
cmpsb
sub
stos
hlt
repz
xchg
push
mov
add
xchg
dec
sbb
mov
mov
ret
cs
jg
shrl
inc
pop
jae
in
loopne
imul
aam
addr16
test
mov
test
sub
inc
or
xchg
sbb
dec
cmp
fdivs
aas
std
lahf
inc
aad
jbe
inc
xchg
mov
dec
pop
sub
cltd
lret
mov
inc
xlat
aaa
add
outsb
dec
xchg
bound
pop
jns
icebp
jmp
adc
rolw
dec
dec
je
sbb
sub
jb
jge
jle
adc
pushf
or
mov
enter
inc
lret
insb
fistl
xor
movsb
bound
adc
cmp
adc
adc
nop
push
das
mov
lods
test
inc
mov
push
fstps
test
mov
cwtl
jge
popa
popf
mov
pop
sub
mov
rcl
push
inc
fwait
adc
lds
push
repnz
xchg
lret
lret
jno
cmpl
in
sbb
sahf
mov
shl
orb
pop
adc
push
sbb
aad
outsb
jb
mov
add
jle
inc
bound
cmp
mov
dec
pop
cmp
ret
jb
mov
mov
xchg
add
hlt
or
jmp
mov
stos
into
mov
or
cli
mov
out
sub
pop
inc
inc
dec
insb
jnp
loop
insl
jp
subb
adc
pop
adc
mov
sarb
push
mov
aaa
fcoms
lcall
test
leave
pop
add
adc
pop
jne
pop
js
xor
addl
sub
and
and
js
lret
xchg
xchg
andl
loop
sti
scas
shl
popa
mov
pop
sbb
call
out
popf
sbb
push
xchg
jmp
cli
test
sahf
ja
mul
xchg
inc
sahf
dec
popa
xchg
sub
or
jae
jnp
stos
cmpsb
shlb
cld
js
pop
inc
xor
hlt
test
shr
out
popf
sbb
cwtl
icebp
icebp
in
push
mov
movsl
xor
rcr
dec
sub
shll
mov
lcall
mov
mov
xlat
incl
dec
adc
stc
add
rorb
dec
rcll
jns
enter
cmp
mov
sbb
dec
sub
stc
nop
stos
divb
cmc
nop
pop
repnz
jne
loop
dec
push
pop
pop
dec
sbb
sub
push
lret
arpl
cmp
add
ds
sub
add
test
dec
sub
dec
sti
repnz
inc
jbe
andb
jg
test
scas
sbb
mov
adcl
mov
in
daa
lahf
jbe
push
mov
xchg
leave
loopne
cmp
push
popa
pushf
out
and
lods
xchg
aaa
jg
and
mov
dec
add
pushf
mov
and
mov
mov
mul
mov
push
out
fildll
mov
mov
mov
xchg
mov
popa
lds
xor
cmp
call
inc
mov
mov
ret
cmp
xorb
mov
fs
cmp
inc
gs
sub
or
aad
inc
inc
rorl
or
jecxz
sub
iret
movl
add
shl
push
stos
and
and
mov
cmp
lahf
jp
and
xchg
jns
fisttps
pop
cmc
sahf
jo
push
mov
loope
xchg
repz
adc
roll
test
int
repnz
adc
and
and
out
sub
fstpl
xor
dec
shrl
push
test
div
rorl
aam
dec
sub
inc
mov
add
jle
cmp
dec
cmp
inc
js
dec
je
jns
adc
lds
inc
in
sub
cmp
test
cs
add
push
cmp
stos
xchg
xchg
aam
movsb
les
xchg
mov
lea
fwait
cmp
leave
popf
adc
leave
sti
pusha
pop
out
or
cs
jbe
scas
imul
inc
push
stc
movsb
frstor
test
push
ja
nop
push
xor
mov
push
push
adc
xchg
pop
aad
out
jl
push
fwait
push
lcall
add
fdivrl
push
nop
sub
fldenv
lds
int3
cmpsl
fcomi
icebp
insb
jge
or
imul
push
jo
pop
push
add
add
lds
or
pop
sbb
mull
mov
add
sub
into
mov
push
push
cmpb
inc
inc
data16
pop
daa
or
xchg
mov
fidivrs
mov
jecxz,pt
sub
imull
ss
adc
push
dec
mov
and
mov
and
cli
mov
cmc
sbb
fdivrl
jle
out
enter
test
push
bnd
sub
jb
scas
jl
pop
xor
xchg
push
clc
loope
into
add
movsb
outsl
aam
push
mov
das
mov
jl
mov
shlb
mov
ja
xchg
inc
clc
filds
fdiv
es
enter
mov
cmpsb
nop
vmwrite
xlat
cmp
add
cmpsl
test
packsswb
and
call
incb
inc
sbb
jge
jmp
dec
inc
incb
in
add
mov
and
sbb
pop
js
push
inc
and
ja
push
test
mov
and
pop
call
jne
dec
testl
mov
mov
shrd
mov
pop
fsubrs
sarl
push
lcall
mulb
dec
mov
xchg
dec
in
repz
inc
daa
cmp
fadds
ret
push
sbb
cmp
imul
and
or
jmp
add
jmp
pop
inc
loopne
jge
stos
je
cmp
or
std
jne
sub
lods
mov
mov
scas
fcomps
dec
jmp
rcr
pop
mov
or
call
insb
fs
push
inc
adc
lea
xchg
cmc
es
mov
dec
jo
inc
repz
fs
neg
ret
enter
mov
nop
add
aas
add
mov
out
mov
fldenv
cli
adc
mov
jmp
add
cli
fisttpl
sbb
xor
call
add
pop
mov
mov
push
hlt
shll
and
dec
xchg
lods
adc
mov
cltd
rolb
adc
fwait
arpl
movsl
popa
icebp
xor
rcll
mov
pushf
sbb
andl
fisttpll
sub
jno
shrl
add
in
stos
or
xor
mov
dec
mov
test
nop
pop
add
shll
push
movsb
push
xchg
cmp
je
jbe
cmp
xor
adc
xchg
pushf
xchg
cmpsb
mov
inc
xchg
popa
out
adc
jno
dec
push
jbe
cmc
out
lds
add
cltd
lods
mov
dec
out
jbe
push
adc
lcall
aas
and
jp
int3
arpl
pop
push
inc
test
ds
inc
clc
jmp
mov
enter
adc
push
mov
and
iret
aas
mov
xchg
test
aad
shrb
xor
outsb
xlat
dec
add
sbb
adc
push
scas
xor
fisubs
sub
into
push
loopne
or
push
inc
lea
mov
lods
xchg
std
and
test
xchg
jbe
sub
pop
hlt
shrl
movsb
sub
icebp
out
mov
push
pop
jbe
pop
pop
clc
dec
daa
scas
cmp
out
mov
mov
unpckhps
or
mov
cmp
mov
add
lret
call
les
shlb
daa
bswap
jge
xlat
scas
xor
int3
mov
and
cmp
aad
and
mov
sbb
insb
or
fnstenv
cmp
xlat
mov
sub
inc
mov
fwait
mov
lock
dec
lcall
jle
scas
mov
pop
negb
dec
inc
xor
rcrb
push
paddd
sub
push
dec
enter
stos
popf
popa
sub
cwtl
add
sub
das
mov
cmp
mov
cltd
pop
gs
sbb
out
xchg
int
mov
add
adc
push
int3
out
outsl
mov
pop
sub
inc
jl
test
jge
fs
xor
int
jl
xchg
jge
jns
ja
push
push
cmpsb
lahf
rol
nop
push
mov
fstps
adc
xlat
out
mov
add
push
dec
repnz
xchg
add
cmpl
lds
sarl
imul
mov
pop
data16
push
into
cmp
je
cmp
cmp
fistps
pop
inc
pmaxsw
mov
adc
mov
cltd
bound
call
das
arpl
mov
push
pop
fadds
lock
mov
or
loopne
and
cmp
loopne
or
movsl
sub
scas
pop
mov
ficompl
and
and
fimuls
leave
cmp
sbb
into
sub
pop
cwtl
loop
mov
insb
imul
js
xor
xchg
inc
inc
fdivr
xchg
mov
ror
rcrb
or
jmp
rcl
sub
out
pop
rorl
mov
pop
mov
test
mov
mov
mov
sub
loop
mov
or
popl
in
mov
fistl
pop
notb
mov
inc
sbb
inc
and
out
sbb
imul
iret
or
out
aas
out
loope
cmp
xchg
mov
sub
ds
and
mov
lods
xor
popa
mov
jmp
add
sub
cli
cmpsb
sbb
aas
pop
loopne
in
inc
add
mov
popa
add
les
dec
adc
enter
orps
add
sub
xor
mov
aaa
pop
jne
mov
push
cmp
cs
mov
movsb
imull
push
inc
sub
stc
cltd
ret
test
xor
push
pusha
cwtl
sti
pusha
xlat
not
les
pop
and
add
outsl
mov
subb
mov
lret
sub
pop
or
insb
pop
xor
xor
jnp
mov
loop
insl
mov
cmp
scas
add
or
outsl
iret
push
pop
incb
push
or
ljmp
cmp
ds
ljmp
insb
inc
jl
cli
enter
je
in
jp
xchg
xchg
loope
push
fists
adc
add
jb
lahf
cmc
aaa
jge
mov
inc
push
ds
sbb
or
jmp
inc
adcb
aaa
cmp
loope
popa
pusha
cwtl
pop
fs
std
fdivp
adc
sub
and
cmpsb
fisttpl
scas
and
push
pop
inc
push
aad
add
loopne
rcll
jp,pn
dec
xor
mov
aaa
lret
fdivrs
test
sbb
mov
dec
sbb
pop
xchg
push
dec
mov
test
clc
jecxz
inc
ja
mov
xchg
jle
push
jp
dec
push
xchg
xchg
mov
dec
mov
fdivrl
add
mov
insl
fsubs
test
cmp
daa
add
pop
push
sub
mov
lods
lret
stos
enter
inc
and
mov
lret
jo
sbb
push
aaa
jo
ss
pop
pop
test
in
hlt
in
xor
jmp
lds
mov
out
push
push
mov
push
lea
dec
add
sarl
adc
insb
sub
dec
lahf
lods
rolb
sbb
lock
imul
std
xchg
sar
sub
cmp
cwtl
xchg
sbb
lret
testl
sub
jbe
outsb
scas
push
cmc
mov
fisubs
mov
cmc
mov
adc
push
mov
inc
jl
lahf
xchg
lds
xlat
fdivr
cmp
push
add
mov
xor
ss
dec
cmp
out
xor
mov
mov
and
fdivs
lods
mov
cmp
in
repnz
xor
idiv
jmp
jmp
inc
xor
inc
xchg
pop
sbb
inc
jmp
call
xchg
mov
sbb
adc
jns
sarl
mov
cmp
and
inc
in
pop
inc
daa
jecxz
fsubs
dec
inc
xchg
int
insl
and
jp
and
adc
mov
adc
mov
outsb
mov
in
lret
notb
push
mov
sbb
je
or
fistl
jnp
and
mov
insb
push
imul
test
dec
pop
dec
out
cmp
loopne
lods
dec
or
inc
mov
nop
pop
pop
jle
cli
push
jmp
mov
lret
inc
xor
in
adc
ffreep
mov
or
mov
test
mov
push
loopne
fstps
mov
in
pusha
push
stos
sbb
xor
jg
cmpsl
test
lcall
push
ja
nop
ss
into
imul
call
sti
test
mov
sahf
pop
jmp
and
movsl
ret
pushf
inc
pmaxub
mov
mov
aas
jmp
movsb
adcb
pop
lods
push
out
pop
imul
xchg
and
cltd
mov
adc
loop
jg
jnp
lea
hlt
frstor
push
ljmp
add
subl
jne
jb
fwait
jb
jmp
movsl
sbb
adc
loope
dec
mov
adc
repnz
add
dec
fwait
lahf
mov
sub
loop
data16
fdivs
ficoml
xor
jecxz
stos
je
xchg
or
push
push
scas
ret
stc
and
jmp
jge
mov
mov
notb
dec
cmpsl
das
int3
ret
inc
cmc
in
or
xlat
mov
sub
rolb
inc
js
ljmp
adcl
mov
jp
int3
aas
inc
enter
leave
shll
lret
xchg
pop
outsl
mov
xor
aas
inc
aam
inc
ljmp
enter
pop
xchg
sbb
mov
insl
leave
jne
pop
outsw
dec
daa
outsb
cltd
call
sbb
insl
sub
icebp
lea
in
dec
subb
xchg
inc
mov
or
mov
popa
mov
xor
dec
cmpsb
mov
pop
mov
rorl
hlt
ror
addb
adc
popa
push
xor
shl
mov
mov
leave
std
and
xor
aam
sbb
cs
mov
sahf
lcall
xchg
fdivrl
pop
scas
add
or
and
icebp
mov
movl
pop
pop
sub
xor
pushf
sti
cmp
dec
xor
ret
loop
out
pop
or
jno
mov
shlb
lret
cmp
xchg
pop
add
sbb
dec
out
rcrb
push
sbb
sub
jo
in
lcall
subb
cmp
inc
and
sti
jnp
ret
xchg
jnp
push
push
push
cmp
or
test
sbb
push
lock
cmc
xchg
sahf
sbb
pop
cmp
cltd
mov
or
push
push
jge
add
cmp
lcall
mov
fldl
add
mov
or
in
dec
pop
cli
jl
lock
add
out
and
xor
imul
jnp
add
subl
aaa
or
or
sub
rorb
testb
loope
sbb
repnz
mov
push
stc
sub
adc
mov
lds
push
mov
xchg
arpl
aas
mov
add
in
mov
ret
adc
mov
xchg
jecxz
orl
inc
das
ficomps
jp
test
push
inc
push
repz
lret
mov
and
aaa
or
dec
nop
mov
mov
lock
xchg
insb
jp
push
subb
jns
cmp
insb
shr
mov
inc
jmp
fsubl
or
fnsave
test
in
and
jb
lahf
sub
and
mov
cmp
fbstp
pop
mov
jmp
outsb
pop
sbb
stos
mov
jno
fsubr
inc
or
rolb
inc
ficoms
cmp
fidivrl
mov
das
movsb
add
leave
out
imul
std
ret
icebp
mov
iret
nop
push
ss
sbb
icebp
repnz
adc
push
sahf
outsb
pop
les
test
mov
sub
pop
movsl
inc
mov
int
test
and
lods
inc
shll
out
sbb
cmpsl
jbe
jne
xchg
cmp
inc
stos
rclb
push
pusha
int3
or
js
insl
xchg
xlat
jnp
sub
std
mov
out
dec
ror
aam
out
push
out
jae
lahf
lcall
scas
mov
testb
repnz
push
imul
pop
into
xor
into
dec
icebp
adc
pop
test
dec
xor
dec
xchg
enter
add
push
leave
pusha
iret
jae
out
call
and
bound
xchg
sub
sub
mov
addr16
push
call
add
sub
out
stc
xchg
sub
mov
adc
lea
pop
mov
jge
adc
out
cmp
dec
push
cwtl
pusha
rcll
decb
pop
out
out
stos
xchg
or
cld
xor
add
jne
xor
push
xlat
pop
push
push
jno
and
stos
jge
push
cmpsl
sbb
inc
cmp
adc
adc
cmc
pop
jmp
xor
out
sti
scas
xor
shrb
stos
int3
sbb
jg
insl
dec
or
push
cmp
pusha
add
fstpl
sbb
sahf
mov
fnstsw
cmp
lcall
jl
lahf
dec
push
add
test
or
cmc
adc
pop
fcomp
mov
fstl
clc
mov
lret
clc
xor
lahf
lods
daa
outsb
fcoml
mov
fcoms
cmp
xchg
jo
jnp
aam
mov
push
mov
xchg
jae
outsl
xor
ja
fcmovu
sbb
scas
adc
mov
mov
jecxz
incb
inc
and
shll
daa
pop
call
mov
stc
icebp
dec
sub
jae
mov
iret
mov
dec
movsl
decb
cmpsb
je
sub
or
loopne
test
pop
test
push
and
and
iret
cmp
xor
inc
pop
sbb
push
adc
cmp
sub
cmp
inc
inc
mov
or
ja
mov
fs
push
xchg
adc
ss
adc
pop
mov
pop
popa
mov
fisubrl
nop
arpl
inc
mov
movsb
cwtl
or
jnp
in
jge
imul
test
dec
inc
jb
mov
pop
and
test
adc
lock
jle
xor
mov
ljmp
aad
cmc
icebp
lret
dec
xlat
add
push
mov
inc
decl
ss
aas
fldcw
jmp
shlb
push
std
lock
adc
push
cwtl
or
aaa
pusha
out
pop
hlt
and
mov
js
xchg
lds
xorb
sub
pushf
adc
mov
and
pop
pop
aad
popa
cwtl
mov
je
notl
out
adc
inc
addb
or
push
popf
dec
mov
lret
adc
stos
orb
movsl
sub
loope
lds
jns
sub
lahf
fndisi(8087
dec
rorb
inc
xor
add
call
repnz
lahf
xchg
cmp
push
mov
mov
lock
or
out
lea
push
xchg
ds
sbb
int3
aas
lea
or
in
xor
testb
adc
stos
xchg
xor
sub
lods
decl
xor
mov
jmp
call
icebp
out
xor
push
ffreep
dec
mov
fnstcw
adc
lahf
in
inc
push
ret
ljmp
rclb
imul
movsb
add
jns
xor
mov
add
enter
and
or
push
add
aam
outsb
fcomp
pop
and
pop
in
sbb
lods
sub
stos
add
aaa
xchg
jle
xchg
loop
cmp
mov
xor
test
sbb
add
pop
jno
push
popa
movsl
aaa
fidivrs
add
pop
js
jns
xchg
inc
jnp
sbb
popa
dec
sub
inc
and
arpl
adc
mov
xor
int
pop
xchg
lret
and
xor
out
mov
outsb
dec
das
arpl
push
outsb
inc
adcb
jb
jns
jo
mov
mov
jae
pusha
mov
jg
push
in
dec
aad
mov
shlb
sub
rcl
push
call
xor
clc
sti
sub
mov
lds
ljmp
sarl
cmp
xchg
cmp
adc
lock
fnstsw
sbb
adc
cmp
push
data16
sub
xchg
jbe
insl
test
mov
shll
cmp
push
aam
insb
cmp
pop
mov
add
pop
addr16
push
mov
rorb
sbb
sbb
call
xchg
shrl
cmc
scas
inc
in
nop
gs
out
push
pop
xor
sub
sbb
cli
lods
pop
loope
jbe
or
ljmp
stos
inc
fisubl
or
push
out
pop
sahf
hlt
aas
cmp
cmp
xchg
add
lahf
inc
sarl
mov
add
sahf
xchg
pop
pop
in
pop
and
loope
mov
xor
test
stos
sti
mov
loop
mov
into
mov
and
xchg
orb
lahf
sbb
dec
mov
or
xlat
in
mov
mov
or
sub
in
lcall
cli
test
mov
mov
gs
or
sbb
in
inc
mov
repz
mov
std
dec
scas
cwtl
stc
out
sub
in
mov
shll
les
and
aas
notb
sbb
and
insl
scas
mov
jle
mov
jne
cld
push
fdivrs
shr
cmpsl
cli
mulb
inc
out
dec
mov
xchg
cmp
add
inc
and
or
int3
pop
adc
in
and
pop
cmp
ss
xchg
pop
jmp
sub
mov
jg
pop
es
jmp
imull
movsl
sub
sbbb
in
outsl
push
jp
aad
mov
repz
insl
pop
out
cs
push
jb
rclb
sti
outsl
incl
cmp
xchg
jcxz
call
adc
jae
cmp
aam
cwtl
je
mov
jl
mov
jnp
push
jbe
pop
mov
imul
jb
test
ja
das
pop
hlt
out
mov
add
cmp
rcll
or
in
push
int
mov
cmp
sti
test
shlb
push
fdiv
lds
data16
jp
and
repnz
repnz
xchg
mov
mov
es
out
loop
ror
rorb
insb
shlb
inc
inc
pop
hlt
mov
daa
sbb
aam
push
pop
push
push
mov
and
sti
je
pusha
mov
pop
mov
mov
nop
into
sbb
sub
jns
lret
mov
dec
pusha
movsl
mov
jg
cli
out
shrl
sub
push
test
leave
in
cmpsl
mov
rcll
mov
pop
inc
std
decl
daa
aas
mov
cmp
xor
push
jmp
fsub
and
addl
lret
xor
int3
clc
add
insl
dec
ss
mov
dec
pusha
popa
cmp
push
fldl
insl
xchg
insb
das
push
movsb
push
jo
cmp
mov
movsl
stos
loope
bswap
lea
pushl
push
push
mov
jmp
add
mov
and
adc
inc
xchg
adc
scas
or
push
dec
out
mov
mov
lret
leave
xchg
lret
pop
bound
int
xor
push
push
cmp
adc
jmp
mov
adc
insl
mov
xchg
mov
pushf
inc
dec
add
aaa
insl
out
outsl
loopne
sbb
lods
mov
sub
add
sub
pop
rcll
push
aaa
rcl
mov
sbb
nop
inc
adc
jae
add
push
repz
in
bswap
sub
mov
xor
inc
mov
xchg
sbb
or
mov
push
imul
sbb
idivb
push
clc
std
sbb
pushf
iret
insl
xchg
jge
mov
add
nop
xor
dec
shll
in
inc
mov
xchg
lcall
or
aas
cmc
mov
xor
lods
mov
cltd
jno
popf
cli
push
ljmp
xchg
inc
je
popf
ret
or
or
inc
mov
call
xor
dec
jb
push
mov
fdivl
fisttpl
pushf
pop
test
cwtl
jae
inc
adc
out
sbb
mov
adc
or
push
sbb
in
mov
ds
or
insb
adc
pop
xchg
and
lcall
mov
xchg
pop
xor
aad
inc
push
es
loopne
les
in
sbb
lods
fwait
dec
lahf
into
pop
or
sbb
add
push
cmpsb
and
cld
out
mov
out
sbb
mov
scas
cmp
ss
pop
pop
add
and
insl
xchg
sbb
or
jl
lock
sbb
mov
pop
stc
fdivr
inc
jnp
outsb
xchg
xchg
lret
stc
adcl
sbb
icebp
iret
in
or
cmc
daa
out
arpl
out
sbb
add
lods
stc
cmpsl
add
cmp
mov
lret
push
les
sub
ds
data16
lahf
xor
or
cmp
inc
cmpsl
mov
lret
and
dec
es
andb
lret
lret
fildl
dec
adc
bsr
sbb
mov
xchg
mov
test
pop
sbbl
sub
or
loop
sub
shl
pop
stos
pop
cmp
xchg
jns
mov
add
xor
in
and
cld
filds
out
dec
pop
sahf
nop
mov
jg
mov
icebp
xor
xchg
ret
scas
cmp
lock
in
pop
ret
adc
stos
mov
outsb
dec
popa
dec
movsl
inc
adc
inc
adcb
lods
pop
aas
lods
xor
mov
pop
imul
sbb
xchg
dec
push
inc
jbe
or
mov
loop
rcll
ds
push
mov
adc
push
hlt
and
xchg
imul
int3
mov
inc
popf
push
inc
and
and
sarl
in
aas
js
stc
scas
stos
push
cwtl
mov
and
imul
sarl
in
or
push
das
sbbl
inc
sbb
jnp
fcompl
fmul
in
ds
sarb
das
jae
push
sbb
addl
arpl
push
jo
jle
das
test
aam
cwtl
mov
aad
mov
push
dec
jae
cwtd
jge
mov
shll
les
repnz
push
cs
imul
inc
ds
imul
arpl
aad
js
jp
jmp
mov
add
dec
add
movb
jo
lds
icebp
adc
dec
loope
lret
icebp
movsb
adc
out
dec
sahf
scas
sub
jae
mov
rorl
enter
mov
push
in
push
stc
xor
mov
pop
mov
outsl
mov
jge
xchg
mov
cmp
stos
js
subl
pop
je
inc
xor
jne
add
jl
lods
dec
clc
test
sub
mov
lock
insl
movsl
mov
push
in
cmpsl
sti
repnz
or
cs
in
or
out
lods
shll
cli
inc
mov
add
ljmp
add
movsb
fs
xchg
push
popa
iret
push
and
jo
lcall
lret
sbb
rclb
loopne
repnz
mov
std
cltd
popa
bound
jo
push
outsb
fildll
cmp
adc
pop
out
xlat
shll
mov
inc
int
xor
fmuls
or
outsb
add
xor
inc
incb
sbb
negb
sarb
adcb
lret
popl
daa
rcrl
pop
xor
pop
rcr
nop
or
fwait
cmp
data16
add
or
xlat
outsl
popa
fimuls
nop
mov
loopne,pn
cmp
cwtl
enter
bound
imul
mov
fsubl
pop
imul
dec
or
pop
clc
fdivp
ljmp
cli
sub
jmp
jns
shl
xor
cmp
push
push
test
stos
lds
inc
and
xchg
ljmp
sub
xchg
icebp
adc
int3
pop
movsb
pusha
jnp
cmp
xor
adc
ja
cmpsb
mov
rcll
leave
mov
lods
fcoml
enter
push
adc
mov
push
adc
dec
xchg
test
rolb
popf
cmp
out
or
mov
sub
cmp
and
imul
jo
insb
cld
dec
mov
push
add
or
out
rolb
aas
sbb
in
cltd
addr16
xor
loop
adc
push
jecxz
test
xor
push
add
int3
jle
and
pop
int
push
pop
push
adc
or
mov
cmp
repnz
notb
and
push
xor
push
cmc
cmp
sbb
push
orl
dec
or
out
sub
cmp
fbld
push
push
inc
xchg
shll
aas
mov
rol
jbe
stos
xor
popw
sbb
popf
ret
cmp
mov
mov
jo
cmp
jge
scas
fidivrs
adc
out
jno
xor
es
into
lds
inc
and
sub
fwait
dec
jbe
cmc
push
xor
out
xor
xor
and
sahf
jg
xchg
int
popa
mov
push
mov
xor
xchg
jae
movzwl
jl
push
pop
mov
daa
xor
aad
cs
das
mov
pop
pop
shl
cwtl
nop
fs
mov
jo
and
jae
push
mov
push
jecxz
push
push
leave
outsl
repz
fcom
xchg
mov
jmp
inc
popa
sahf
bound
stos
cli
lea
and
push
xor
cs
mov
sahf
xor
inc
data16
sbb
mov
mov
repz
jge
sbbl
sbb
hlt
daa
pop
cmpsl
out
enter
rcll
ret
jno
clc
sbb
mov
xchg
xchg
loope
mov
inc
jo
sbb
stos
add
lret
xchg
adc
inc
xor
mov
add
inc
pop
dec
xor
jnp
test
xchg
pop
rorb
andl
mov
cltd
sub
sbb
jge
add
mov
test
push
xchg
pushf
xor
push
inc
dec
and
aas
push
lret
cmpsb
mov
mov
cmpsb
fisubs
mov
fimuls
mov
pop
rorl
in
sub
outsb
inc
inc
movsb
int3
cmp
push
dec
jne
aam
jg
mov
lds
adc
das
bound
cmp
xorps
scas
cmp
jecxz
test
loopne
add
test
out
stos
or
ljmp
pop
adc
repz
inc
fcomps
xor
mov
je
and
jg
jno
stos
inc
aas
lret
mov
mov
inc
out
mov
sahf
loop
ss
xchg
and
fcompl
out
xor
addr16
popf
dec
subb
inc
sahf
add
jo
shlb
pop
loope
and
inc
lods
inc
push
out
pop
dec
loopne
cmp
or
cmp
pop
inc
mov
addr16
stos
movsl
dec
lahf
rorl
or
adcb
divl
adc
jge
add
arpl
sti
call
std
or
pop
lcall
sbb
mov
xchg
mov
sub
jmp
cmp
cmc
or
clc
aam
or
insl
sbb
hlt
sbb
out
leave
dec
in
pop
pushf
and
push
lahf
or
jg
sti
repz
ja
fadds
inc
jns
mov
lods
sbb
jo
dec
adc
int3
addr16
iret
clc
inc
pop
xchg
cmpl
mov
inc
outsb
inc
xlat
push
loope
js
nop
and
mov
inc
mov
sbb
pop
cmp
mov
add
iret
pop
insb
pop
rolb
cld
xchg
inc
inc
fiadds
frstor
inc
movsb
push
stos
mov
mov
add
xchg
or
cmp
jp
inc
out
lea
not
mov
sbb
roll
dec
pop
jne
nop
ret
add
in
out
ljmp
push
repz
add
cwtl
dec
outsb
stos
iret
leave
xor
add
jo
push
or
addw
clc
in
into
jae
or
lds
mov
insl
popa
sub
dec
and
mov
sbb
sub
pushf
andb
jne
xchg
push
or
xor
cmp
push
adc
mov
jb
jo
push
stos
mov
jle
mov
and
sub
insb
data16
inc
or
shll
jecxz
sub
dec
aas
sbb
outsb
mov
mov
adc
or
xor
jmp
rolb
imul
out
lock
icebp
stc
fidivl
in
jg
sti
inc
shlb
jo
rcrb
sbb
fmul
ja
pop
jp
ds
xor
jno
jae
mov
aaa
pop
fstpl
mov
sub
pop
jne
fwait
pop
bound
lcall
out
pshufw
adc
dec
fidivrl
push
inc
fdivrl
dec
xor
jae
sbb
add
in
inc
movl
and
jge
dec
insb
into
jne
mov
jmp
mov
mov
push
stc
je
daa
mov
imul
movb
popa
mov
sub
push
addr16
push
lret
xchg
dec
xor
out
andl
les
out
in
sub
push
call
add
int3
jg
add
ret
push
rcll
xlat
leave
sub
in
ret
les
js
inc
xor
mov
mov
js
push
decb
stos
push
mov
dec
lret
iret
fldcw
int
adc
ret
outsl
add
sub
inc
push
dec
into
push
push
int
or
or
test
in
sbb
jne
inc
xchg
push
popf
inc
leave
notb
push
push
leavew
popa
testl
fcmovnb
push
mov
xacquire
sub
cmc
les
ss
in
fbld
pop
mov
mov
mov
call
push
cmc
push
sete
xchg
jae
push
dec
or
sbb
pop
mulps
std
mov
xor
xchg
fisubrs
roll
out
push
cmp
dec
dec
cli
dec
in
xchg
inc
out
addr16
jp
mov
or
out
mov
loope
outsl
loopne
jecxz
inc
fisubrl
faddl
out
in
popa
mull
xor
add
call
hlt
fstpt
add
inc
adc
cli
test
int
dec
gs
add
repnz
push
incb
dec
adcl
repnz
pop
aaa
adc
mov
sbb
xchg
test
mov
jne
pop
mov
pop
cs
inc
pushf
bound
jmp
fistl
into
jecxz
mov
mov
dec
pop
sti
mov
mulb
rorl
add
or
lods
pop
shl
or
jecxz
jne
push
js
insb
push
dec
ljmp
jmp
mov
cmp
or
mov
pop
rcr
push
ss
das
or
sub
jecxz
mov
mov
call
test
mov
cld
and
outsl
mov
test
cmpsl
loopw
addl
jp
push
inc
jo
ja
pop
pop
divl
add
int
jl
icebp
pop
dec
sbb
rclb
sbb
push
xlat
mov
hlt
das
sbb
cmovbe
xchg
pop
ljmp
ret
cmp
and
lods
push
sarb
test
inc
dec
test
mov
xor
push
hlt
roll
sahf
loop
push
repnz
lret
xchg
loope
rcrl
pop
push
sub
out
fiaddl
in
std
xchg
test
dec
add
adc
lahf
rcrb
movsl
jb
lret
pusha
in
push
cld
add
into
rol
xorl
mov
xchg
push
jge
jle
push
xor
xor
insl
push
lods
or
hlt
cmpsb
mov
popa
stos
sarl
sub
jecxz
scas
popf
jo
sarl
sar
repz
jmp
adc
mov
mov
xchg
push
sub
jbe
lahf
jp
xor
out
imul
cmpsb
sarb
mov
stos
imul
stos
pop
jg
dec
jp
xchg
pop
push
pusha
shr
das
jle
mov
fidivs
fnstsw
clc
test
lret
sub
andb
pop
ljmp
not
out
mulb
cli
push
int3
sbb
clc
cmpsb
xor
add
fistpl
pop
lret
out
jmp
shlb
out
xlat
imul
push
push
mov
push
rorb
sahf
and
xchg
inc
in
mov
mov
lret
mov
xchg
repz
xorb
jno
mov
push
xchg
or
jp
jo
cli
pushf
push
jo
aam
insb
dec
cmpsb
xchg
pop
cmp
bound
mov
push
scas
push
sbb
ja
in
sub
mov
inc
dec
mov
mov
aam
cmp
inc
mull
ror
sahf
mov
fiaddl
jmp
mov
xchg
pop
cmpsl
inc
aas
adc
scas
fldt
lods
jnp
adc
mov
pop
dec
mov
cs
xadd
pushf
mov
push
nop
sti
lods
push
ss
ds
daa
push
subl
lea
leave
cs
xchg
mov
sbb
adc
out
dec
pusha
cmpsl
dec
ret
mov
mov
or
es
and
fwait
lock
cmp
cmp
or
pop
fwait
sahf
and
dec
add
test
cmp
cmpsl
lcall
push
movsl
and
or
rorl
push
pop
clc
or
mov
inc
xchg
dec
test
push
int3
aad
mov
and
sbb
fimuls
sub
cltd
mov
mov
ds
shlb
xchg
aad
xor
outsb
sbb
test
dec
add
pop
sysexit
stos
stc
adc
lahf
mov
das
test
or
inc
mov
xchg
cmp
or
rolb
jbe
das
jbe
or
push
out
xchg
adcb
nop
and
cmp
add
inc
rcll
clc
cmp
cmp
xchg
orl
push
sbb
add
sahf
fnstcw
and
sbbl
xchg
push
call
xor
mov
pop
mov
shlb
sbbl
mov
jge
aam
lods
mov
xchg
inc
shll
mov
dec
adc
fs
fs
mov
pop
fidivs
cwtl
xor
jmp
push
mov
dec
xor
nop
cli
xlat
mov
std
mov
cld
divl
out
cwtl
sub
jg
push
fcompl
jmp
call
adc
push
or
sub
mov
ret
ficomps
btr
xor
cmp
inc
in
hlt
mov
test
xchg
ret
sub
int3
and
cmpsl
and
shrb
inc
arpl
add
nop
movsb
lcall
int
test
cmpsb
xor
jp
jo
lods
icebp
test
loopne
xor
mov
sbb
cs
or
dec
stos
imul
sub
inc
cwtl
gs
sbb
push
sbbb
or
sbb
ret
mov
rorb
test
sub
das
or
ficomps
test
push
imul
loopne
in
push
adc
mov
es
xor
popa
fstl
push
lods
push
enter
xor
mov
cmc
int
out
push
xchg
mov
jp
xchg
out
hlt
shll
fwait
pop
push
sbb
xchg
frstor
mov
jp
test
stc
stc
filds
inc
lcall
jle
cmp
ret
or
les
lcall
sti
cld
lods
mov
ljmp
jp
push
push
mov
sbb
xchg
stc
dec
sub
out
jb
in
xchg
jg
jne
add
jno
add
mov
sbb
adc
pusha
test
lds
jle
push
cmpsb
lcall
inc
add
mov
sbb
mov
pop
cmpsl
or
ret
mov
push
add
xchg
dec
pop
daa
cmp
add
jns
push
ss
or
xchg
leave
popf
sbb
fcomip
pushf
mov
shll
xor
repz
cs
fistps
dec
mov
push
pop
les
xor
push
jl
clc
jb
adc
lret
jmp
xchg
enter
add
in
cs
inc
push
adc
inc
into
xchg
stos
inc
scas
dec
insl
dec
insl
or
jecxz
jnp
dec
dec
cmp
sbb
dec
repz
ret
add
mov
inc
testl
sub
movsl
pusha
outsb
movsb
add
xchg
sarl
hlt
std
mov
xchg
add
jb
ficoms
pushf
mov
jnp
rol
or
cmpsl
cmp
jg
sbb
int3
addr16
jmp
loope
rcrl
shl
push
icebp
leave
mov
sub
push
test
jbe
sbb
sar
addr16
push
loopne
inc
mov
ret
push
in
call
scas
push
jae
je
adc
dec
sub
or
or
xchg
into
aam
bound
push
sahf
sbb
or
jbe
jle
scas
or
loop
fwait
inc
test
fldenv
out
js
and
mov
loopne
pop
sub
mov
test
stos
add
out
cmp
out
je
push
sbb
add
fldl
mov
sbb
mov
ds
out
movsl
pop
aam
push
sub
shrb
xchg
jnp
mov
and
xchg
add
adc
jno
and
dec
insl
and
adc
sbb
repz
int3
mov
dec
outsl
sbb
and
adc
xchg
data16
shlb
inc
push
mov
pushf
fiadds
mov
shl
fdivs
mov
push
imul
pop
push
push
push
adc
or
cs
out
pop
or
xchg
and
inc
and
shrb
lods
jmp
mov
stos
repnz
imul
xchg
xchg
int3
add
cmpsb
jnp
inc
jnp
sub
leave
out
cmp
pusha
cmp
xchg
adc
mov
sbb
sbb
stc
fs
jns
jne
fs
adc
shlb
mov
mov
jg
push
dec
push
aaa
hlt
stos
mov
les
and
xor
enter
xchg
mov
iret
int
imull
aas
mov
add
test
sub
jecxz
pop
scas
dec
out
pusha
shlb
add
sbb
test
jae,pn
mov
ja
cmp
jo
movsl
adc
push
popf
cwtl
dec
cmp
add
and
js
out
and
xor
sbb
pop
dec
cmpsl
mov
cltd
lcall
js
mov
pusha
mov
repz
pop
inc
cmp
inc
push
es
call
ljmp
popa
mov
mov
inc
in
and
shll
inc
xchg
cs
jno
cmp
push
sahf
mov
loop
jne
clc
xchg
dec
mov
push
clc
pop
hlt
daa
sti
insl
xchg
jne
aaa
xchg
jno
sbb
fisttps
cmp
dec
mov
cli
in
mov
and
cmpsb
xchg
arpl
scas
inc
mov
call
mov
push
pop
cmp
push
int
ret
mov
adc
sbb
outsl
aam
jmp
pop
cmp
cmp
addr16
testb
cmpsl
pop
jmp
in
insb
mov
ja
adc
mov
mov
outsb
pop
aas
daa
mov
xchg
or
mov
mov
or
cld
fisubrl
sub
imul
mov
pop
in
mov
pop
or
mov
and
loope
mov
test
mov
push
shlb
cli
leave
testl
add
add
mov
cmpsl
filds
pop
sbb
and
aad
pop
in
fwait
inc
lahf
ss
dec
stos
lods
inc
gs
fs
cmc
clc
inc
fwait
repnz
cld
sub
out
movsb
push
shll
adc
jmp
stos
mov
leave
pop
fstpl
sbb
add
fnsave
adc
mulb
sub
push
ret
fimull
mov
sti
add
dec
cmp
stos
push
xor
add
xchg
out
daa
push
pop
pop
cmpsb
out
pop
sbb
mov
stc
push
int3
inc
mov
test
xchg
push
int
aam
pop
nop
or
dec
adc
imul
call
out
add
insl
stc
popa
dec
jnp
dec
pop
inc
jle
imul
inc
aad
addl
lret
sbb
jl
leave
out
or
add
sub
shr
or
mov
mov
int3
imul
std
mov
repnz
imul
mov
mov
pop
sbb
enter
jmp
inc
lea
into
dec
xor
movsl
lahf
lock
xchg
dec
gs
out
mov
je
js
lea
xchg
aam
cld
push
lods
addr16
out
pop
dec
xchg
icebp
iret
stc
sub
xor
xor
mov
xchg
rorl
mov
sub
jl
cmp
pop
lret
scas
cmp
xchg
and
lock
lods
mov
jp
movsb
sub
lods
lret
xchg
adc
cli
test
pop
pop
in
loopne
mov
pop
xor
test
jmp
mov
push
fsubs
dec
cmp
scas
mov
iret
test
or
inc
repz
pushf
ret
pop
arpl
ret
push
fidivrl
pop
das
and
add
shll
pop
dec
or
aad
adc
lahf
shrb
jne
fiadds
mov
ret
stos
sub
mov
jnp
pusha
leave
add
subl
sbb
inc
push
jae
sub
outsb
repz
jnp
mov
test
sti
dec
scas
xchg
data16
nop
push
movsl
adc
or
add
iret
loop
jmp
xchg
xchg
pop
mov
pop
dec
in
fwait
mov
repz
mov
fs
cli
cmpsl
adc
jecxz
push
insl
sbb
cli
jns
xor
movsb
out
push
mov
dec
pop
xchg
cmp
sbb
lret
jo
ret
lret
pop
popf
sub
xchg
sub
clc
xor
push
lock
cmp
es
pop
xlat
xchg
lret
mov
push
mov
cmpsb
repz
or
cld
sbb
pusha
lods
mov
adc
pop
jmp
jb
cmc
add
jo
adc
stos
inc
fs
mov
mov
ret
mov
andl
and
lea
aaa
mov
movsb
test
sbb
lret
bound
in
les
mov
pop
mov
sbb
jge
cmpsb
leavew
in
add
mov
stos
inc
stc
xor
xchg
jp
es
mov
xlat
das
orb
iret
jne
xor
stc
hlt
push
sahf
sbb
test
push
adcb
test
cmp
fsubl
mov
into
mov
adc
pushf
add
rcrl
xchg
out
inc
aad
fidivl
xchg
pop
sti
xlat
loope
xchg
out
dec
mov
mov
push
sahf
jmp
sub
rorb
cmp
in
nop
xor
push
adcb
jnp
aad
push
cmpsl
lods
stc
into
adc
outsl
popa
and
inc
push
pop
daa
mov
sbb
int3
jmp
mov
cmpsb
lods
je
imul
pop
bound
push
cltd
mov
jns
in
jns
stos
es
cltd
aas
sub
lret
add
and
xchg
shlb
adc
add
dec
inc
sub
cmc
and
push
es
sub
push
setl
push
xchg
xchg
mov
dec
inc
or
call
mov
adc
mov
repnz
scas
stos
aaa
in
push
and
push
fs
and
das
ljmp
add
shl
fs
test
call
leave
pop
es
jns
inc
mov
fstl
and
cld
fwait
call
int3
gs
repnz
inc
lret
push
push
icebp
inc
cmp
inc
lcall
dec
push
pop
cs
call
cs
ja
insb
jb
lahf
or
pop
sbb
out
and
mov
push
sub
popf
push
cwtl
es
push
out
push
inc
movsl
jb
xor
push
and
cmp
aad
out
xchg
iret
xchg
adc
pop
and
movb
iret
arpl
ds
lods
cmp
daa
or
sahf
ja
inc
xor
mov
mov
ljmp
inc
or
push
xor
sub
ret
loope
call
inc
and
lods
jg
cmp
jp
ss
jecxz
fwait
pop
mov
ret
mov
push
xor
dec
and
in
outsl
pop
out
inc
fnstsw
cld
loop
out
or
sub
cltd
inc
sub
xchg
jge
imul
and
into
xchg
fildl
popa
push
and
jns
and
jbe
lret
out
jbe
int
sbb
mov
dec
fs
sub
mov
adc
int
shrb
sub
and
movsl
clc
dec
decb
inc
dec
fwait
addl
push
icebp
mov
lock
and
mov
sub
sbb
scas
shll
in
inc
jns
movsl
and
xchg
ja
outsl
or
pop
js
pop
push
dec
and
fwait
je
xlat
mov
shlb
test
shrb
cmpsb
add
adc
push
mov
scas
repz
ljmp
in
aas
popa
clc
gs
gs
addr16
cmp
pop
lods
mov
ja,pn
and
loope
pop
sbb
jae
pop
addps
cld
cmpsb
dec
xchg
jp
sbb
jl
test
clc
ljmp
aam
add
int3
pushf
cmpb
push
cmp
loopne
out
rorb
aam
stos
or
imulb
sub
test
das
push
mov
adc
sbb
push
fwait
add
push
ds
arpl
mov
nop
fwait
adcb
or
sti
inc
pop
imul
inc
lret
cmp
in
push
xor
sub
dec
pop
jnp
ss
mov
aad
fs
mov
fcmovbe
cmc
imul
test
enter
adc
adc
sbb
into
iret
add
jp
pop
dec
out
mov
out
mov
pop
adc
movsb
movsb
push
lds
ja
jne
sub
mov
aaa
pushf
sub
and
pusha
pop
fisttps
daa
xchg
mov
mov
fcoms
xchg
int
pop
out
mov
repz
shl
add
test
sbb
jne
sbb
cmpb
aaa
mov
mov
repnz
dec
mov
adc
int3
hlt
xchg
push
xlat
add
or
jnp
jecxz
pop
mov
pop
cmp
push
stos
cmp
add
mov
jb
popf
icebp
loop
jb
mov
dec
xor
sbb
jae
inc
gs
test
icebp
xchg
ret
movsl
add
scas
ds
sub
inc
lods
inc
mov
pop
add
push
sub
dec
cmp
es
rclb
dec
push
cmp
jo
hlt
jle
adc
cs
hlt
xchg
inc
aas
lds
sahf
cmpsb
inc
rolb
cmp
popl
push
aad
fnsave
outsb
add
jnp
push
clc
stc
lods
cmp
outsb
and
xchg
jl
div
mov
rcll
test
ss
aas
leave
rcrb
inc
adc
rcl
mov
popf
aas
ret
je
mov
xor
scas
ret
aaa
mov
in
stos
sub
aaa
dec
mov
add
decl
and
push
ret
daa
bound
cmpsb
jp
cmpsb
mov
sbb
xor
mov
aaa
jae
outsl
in
test
test
or
mov
daa
rolb
jno
fldl
lods
jnp
mov
popf
into
pop
std
repnz
mov
sub
add
add
pop
jp
popa
mov
mov
or
push
sti
pop
loope
lcall
mov
jge
in
xchg
mov
movsl
pop
or
push
xor
aaa
dec
aas
mov
push
mov
stos
nop
sbb
push
push
cmc
scas
fdiv
add
clc
and
insb
xlat
popf
cmp
movsb
and
jle
mov
pop
mov
mov
scas
adc
mov
std
mov
sub
fiaddl
mov
jl
adc
adc
sub
inc
aad
adc
jmp
push
es
xor
in
mov
jbe
lock
inc
es
in
call
dec
call
loopne
inc
loop
mov
lods
push
cmpsb
out
loope
inc
xchg
cli
xchg
fs
test
sub
xchg
imul
scas
mov
sub
mov
lods
out
jbe
fisubs
jp
notb
ror
and
dec
add
lock
push
cmc
jecxz
inc
xor
imul
jbe
enter
mov
cmp
add
fstl
push
insb
add
jmp
movsl
mov
xchg
imul
push
xlat
and
and
push
mov
adc
jbe
mov
mov
cmp
hlt
movsb
inc
fs
pushf
or
add
movsl
imul
cmpsl
cmpsb
push
test
jl
call
push
push
and
xchg
adc
sub
cltd
xchg
enter
imul
pop
movsl
add
sarb
adc
add
pop
sbb
scas
adc
insl
pop
xchg
mov
sbb
mov
lcall
push
fisubrl
mov
adc
mov
rol
dec
mov
sbb
out
loop
mov
add
int
mov
addr16
sbb
lret
enter
sahf
loope
cmpsb
fldenv
adc
xor
mov
movsl
lods
out
mov
pop
jae
mov
out
js
adc
cmp
fcomp
mov
xor
movd
cmp
iret
sbb
add
mov
sbb
movsb
lahf
pop
pop
cs
pushf
or
push
inc
mov
popf
cli
cs
mov
fisttpl
cmp
inc
rcrl
cwtl
int
adc
mov
xor
das
nop
das
jbe
sbbl
scas
pop
mov
jns
jg
je
adc
push
rcrl
aad
and
mov
and
sub
scas
xor
push
jle
ret
outsb
jae
mov
jo
inc
inc
iret
mov
add
push
pop
mov
stc
loope
pop
lea
jne
pop
out
push
fucomp
push
adc
rorb
cmp
cmpsb
pop
shl
pop
repz
cmc
aas
call
fwait
sbb
das
sbb
pop
fldcw
sbb
jo
mov
pop
repz
fadds
repz
in
fisttpll
adc
rep
and
aas
enter
mov
push
push
jp
dec
mov
test
loop
ljmp
outsl
mov
push
scas
add
push
pop
movsl
call
xor
mov
sub
xor
or
int
ss
insb
lret
dec
movsbl
pusha
test
pop
push
pop
cmp
mov
or
inc
mov
xchg
cmp
ret
stos
mov
bound
xchg
mov
cmc
in
dec
mov
and
xchg
push
xor
addl
jns
pop
insb
jmp
outsb
popf
xor
lods
mov
jle
push
inc
xor
mov
push
scas
xchg
in
cmp
or
icebp
jae
outsb
push
jle
mov
cld
popf
mov
dec
mov
inc
sub
cmp
push
out
push
nop
ss
movsl
mov
mov
jne
xchg
inc
stc
sub
add
xchg
pop
xchg
mov
adc
push
shrl
dec
inc
sub
movsl
jo
stc
mov
sarl
push
lods
xchg
imul
fwait
loope
out
repnz
lret
jle
insb
out
lcall
insb
daa
inc
dec
je
xchg
pop
in
sbb
filds
test
ds
loopne
dec
mov
call
xorl
pop
shl
cmp
pop
lock
mov
stc
leave
decl
imul
into
shlb
xchg
out
cli
pop
sbb
xor
push
ds
mov
out
sub
mov
xchg
xchg
mov
jecxz
dec
cmpl
mov
jo
push
sub
adc
jnp
out
pop
arpl
pusha
add
cmp
add
jl
pop
mov
push
sub
divb
adc
mov
enter
js
cmc
sti
aam
add
pop
ds
lea
es
xchg
ret
jmp
sti
inc
push
cs
xchg
mov
cmp
jmp
dec
jb
neg
daa
stos
ljmp
bound
add
int3
fsubrl
mov
je
inc
filds
inc
sub
outsb
into
std
xchg
mov
hlt
aad
mov
aaa
lret
shrl
jmp
pop
mov
sbb
push
sbb
sub
movsb
inc
inc
out
mov
outsb
jne
jg
inc
aaa
stos
xchg
mov
pop
in
mov
cmp
sub
in
push
add
icebp
cmp
xchg
add
inc
inc
adc
or
rorb
xor
fsubrl
test
adc
mov
scas
pop
xor
xchg
insl
sub
push
mov
fidivrs
sahf
mov
mov
mov
mov
fstpt
arpl
fstpl
imul
push
fwait
cmp
test
pop
push
and
and
imul
dec
xchg
push
clc
loop
fs
rolb
out
call
xor
jmp
xchg
xchg
call
push
cmp
push
sbb
scas
mov
nop
cld
insb
fsubl
xchg
icebp
imul
loopne
inc
faddl
add
lcall
and
fcmovbe
cmp
inc
rclb
xor
test
in
xchg
dec
adc
mov
sub
sbb
pop
mov
dec
mov
adc
cmpsb
mov
hlt
push
addb
addr16
and
fdiv
dec
lret
lahf
cmp
adc
icebp
lea
mov
adc
dec
pop
test
in
lret
pop
aam
dec
outsl
cmpsb
pop
fnstenv
add
pop
sbb
dec
mov
xchg
cmp
daa
in
movsl
mov
push
stos
and
xchg
push
imul
in
fistl
enter
mov
mov
or
or
cmc
pop
shlb
call
push
mov
jae
or
test
fstpt
insl
mov
in
pop
loope
pop
ret
rclb
jo,pn
sub
xor
data16
repz
sarl
repnz
int
add
sub
lcall
pusha
fcompl
push
out
je
sub
bound
inc
js
mov
in
mov
push
xchg
lret
stos
inc
out
pushf
mov
mov
loopne
into
sub
xor
sbb
aad
adc
xchg
xchg
mov
and
pop
or
hlt
popl
in
repnz
or
mov
es
push
out
out
jmp
cmp
ret
inc
neg
pop
add
inc
xor
popf
rol
sti
jmp
or
sbb
movsl
xor
test
cwtl
push
pushf
jno
mov
or
and
ret
and
push
adc
sbb
push
pushf
je
iret
pop
push
mov
inc
out
inc
jg
add
xchg
pop
into
fidivrs
and
imul
push
aad
sbb
and
mov
stc
in
push
lds
adcl
pop
pushf
out
mov
cmp
fimuls
out
jg
test
arpl
mov
sub
ljmp
or
push
push
sub
cltd
insb
push
js
aad
inc
addr16
test
nop
jns
je
mov
xor
jno
add
jmp
subb
push
js
push
mov
or
push
cs
arpl
loope
pop
aaa
daa
pop
push
loop
sub
pop
ljmp
jg
lret
mov
xor
sub
xor
idivb
lds
mov
sbb
xchg
mov
cld
int3
test
mov
pop
loopne
lock
sahf
ffree
cmpl
into
or
loop
push
xchg
push
xchg
and
push
aam
subl
adc
xchg
cmp
adc
ss
repz
push
jb
mov
jnp
hlt
pop
xchg
cmp
add
das
dec
dec
adc
or
fisubrl
sub
push
shlb
cmpsb
sbb
inc
push
js
jg
sti
lret
mov
pop
add
cmp
nop
or
jg
mulb
inc
rolb
sbb
jno
test
add
out
ds
inc
xchg
subb
scas
rclb
mov
cmp
adc
aad
mov
loop
xor
jge
and
cmc
inc
clc
add
push
daa
cmp
test
out
xchg
sub
sub
add
push
dec
inc
orb
xchg
ret
xchg
cli
fisttpll
mov
mov
cmc
mov
ds
mov
lods
jecxz
test
or
lds
mov
sub
js
inc
push
xchg
cmp
jl
jp
lahf
xchg
jle
mov
aam
mov
roll
ds
mov
movl
xchg
mov
popa
pop
add
add
mov
jno
lods
negl
jl
ret
cmpsb
test
sub
stos
in
aas
mov
sub
jl
and
mov
subb
push
aaa
sub
dec
mov
xchg
mov
or
jnp
in
push
inc
test
xlat
sbb
out
shr
loopne
scas
sub
push
push
xchg
mov
mov
adc
xchg
xor
mov
pop
hlt
pop
pusha
xor
dec
movsb
rcr
jp
neg
push
pop
or
jg,pn
lock
cli
add
repz
or
cmpsl
sbb
inc
lahf
sbb
push
xchg
jmp
sahf
cli
imul
shrb
aad
pop
shld
in
mov
or
adc
mov
cli
movsb
pop
pop
pop
cmp
push
dec
push
sbbb
lock
jecxz
sbb
ljmp
push
pop
data16
pusha
xchg
cltd
mov
nop
out
subl
mov
pusha
jle
cmp
or
les
inc
mov
push
addb
mov
fnstcw
fsubs
jp
cmp
push
dec
xchg
mov
dec
lods
dec
mov
lock
into
mov
push
or
add
sub
sub
addr16
stos
mov
jmp
negb
pop
inc
push
insl
call
pop
scas
int3
jl
pop
pop
mov
popa
adc
push
sub
cltd
mov
ret
das
movl
push
dec
mov
fs
dec
nop
lahf
mov
xchg
sbb
and
jmp
fnstcw
mov
mov
std
mov
call
sbb
lahf
outsl
inc
sub
xchg
ja
and
cltd
stos
sub
pop
xor
sub
subl
fs
push
loopne
popl
push
dec
repnz
sub
fldt
xchg
jbe
ds
in
jbe
test
lahf
incl
call
fmuls
mov
jp
arpl
fucomi
test
int3
jnp
in
mov
sti
shll
ficoms
inc
int3
adc
popa
sbb
arpl
outsb
push
mov
or
mov
push
push
aaa
rcrl
lods
pop
or
shlb
pop
mov
jno
cmp
lea
enter
test
out
cmpsl
subb
insl
jno
mov
cs
dec
ficompl
ret
jmp
jno
sahf
cmp
or
inc
xor
outsb
fwait
sbb
int
ret
popf
push
jg
shrb
in
mov
xchg
bound
xor
stc
dec
test
loope
mov
je
cmp
jae
jno
jge
add
fistpl
sub
ds
cmpsl
outsb
add
push
sahf
add
leave
sbbb
xchg
xor
syscall
enter
inc
push
xchg
pop
mov
inc
or
mov
fwait
and
sbb
push
imul
pusha
cmp
sbb
xchg
sbb
jle
mov
cli
add
stc
popa
jmp
cmp
and
sbb
mov
loop
cwtl
stc
fidivrl
jne
jmp
add
mov
pop
lahf
push
test
push
inc
inc
mov
mov
dec
sbb
hlt
out
scas
loopne
inc
lret
push
inc
and
sbb
roll
mov
movsb
popl
outsl
add
cmp
pusha
int3
xlat
cmp
cmp
pop
fsubrl
jl
mov
rcl
push
notb
ficoml
outsb
inc
cmp
xchg
inc
sub
gs
fcmovnu
push
in
mov
mov
outsl
sbb
pop
rcll
mov
pop
mov
push
aam
pop
mov
aam
repz
pop
pop
pop
int3
push
push
xor
pusha
mov
adc
inc
sbb
mov
xchg
mov
movsb
inc
jmp
imul
pop
cld
cmp
cli
mov
aam
xchg
push
ret
insl
cmp
movsl
mov
add
xchg
adc
pop
in
pop
sahf
adc
push
sub
in
fnop
aad
mov
mov
xor
cmp
xchg
std
test
jns
incb
add
add
inc
cmpsl
test
mov
adcl
nop
in
aas
loopne
push
vmovdqu
mov
rolb
in
cmp
dec
pop
jp
cmp
sahf
ja
into
inc
xor
hlt
xor
mov
ljmp
jge
xchg
push
pop
scas
add
push
mov
mov
sub
add
xorl
pop
ja
add
insl
push
xor
pop
in
add
jb
push
into
add
test
std
and
xor
lahf
inc
cmp
cmp
fldt
int
addb
shrb
push
xchg
mov
stos
adc
add
imul
xor
insb
sub
sub
xchg
jecxz
sbb
sahf
and
cmp
into
pusha
dec
lcall
out
icebp
pop
xchg
mov
push
popa
iret
inc
jo
int3
in
jle
mov
sub
add
or
sbb
or
inc
mov
fsubrl
jo
xor
push
sbb
imul
into
pop
push
fisubs
in
insb
mov
pushl
and
jo
sub
fidivs
stc
pop
jl
js
add
nop
and
jne,pt
mov
stos
or
mov
cmp
cmpsb
inc
add
cld
mov
addl
cmp
push
or
xor
sahf
add
jae
dec
push
jmp
in
aas
loop
sub
jmp
test
stc
ror
push
add
mov
lret
jnp
aas
and
sti
rorl
jle
nop
sti
test
jae
mov
cld
rolb
xchg
sbb
enter
pop
insl
in
popa
push
xchg
jge
cmpsl
mov
and
pop
xlat
lods
xorl
sub
mov
ja
adc
inc
addl
ds
test
push
inc
mov
nop
and
pop
sub
mov
pop
aad
push
inc
inc
mov
mov
fnstcw
leave
addr16
dec
repz
out
negl
push
orl
and
jmp
push
push
jno
out
adc
jecxz
jge
jecxz
rolb
adc
inc
dec
adc
inc
repz
or
pushf
pop
loope
lcall
lcall
fcomps
lea
mov
dec
add
push
loope
pop
fdivrl
rsm
adc
sub
out
mov
inc
mov
xchg
sbb
loope
jo
std
xchg
es
ret
movsl
mov
add
push
push
xchg
push
cs
cwtl
loope
jo
mov
fistl
dec
in
fdivs
int3
das
inc
xor
incl
pop
sub
scas
cmp
ror
roll
mov
rorl
jp
mov
jge
mov
movsl
jnp
fs
das
pop
adc
adc
rclb
mov
scas
mov
fsubl
and
cltd
or
pushw
sub
addr16
insl
mov
xchg
mov
aad
pop
push
xor
gs
jne
jnp
xor
lock
jb
dec
jae
je,pn
ss
sub
std
pop
xchg
mov
mov
cwtl
xchg
fsubp
jo
aas
aas
push
in
les
inc
and
shr
sub
inc
rcl
addr16
sub
movsb
sub
dec
and
push
mov
xor
cmp
push
mov
dec
in
sbb
adc
xor
hlt
dec
inc
cmp
xor
out
incl
jo
out
dec
add
push
rorb
shr
sbb
mov
xchg
fdivrl
lcall
in
loopne
xchg
xchg
pop
or
xor
cmp
je
inc
sbb
sub
aaa
mov
pushf
daa
sbb
fsub
adc
cmp
sub
lahf
cltd
cmc
xchg
adc
mov
fimull
sub
pusha
dec
xchg
inc
push
mov
sub
pop
mov
dec
jp
movsb
adc
sub
inc
divb
mov
cmp
mov
and
jecxz
jae
adc
add
inc
cmp
mov
idivb
fmull
loop
addr16
add
cmc
push
xor
push
out
mov
mov
cmp
outsb
adc
sub
xlat
pushf
xchg
jb
fsubl
mov
and
lods
jecxz
adc
sbb
fwait
mov
ljmp
lcall
adc
iret
in
xchg
das
nop
call
mov
or
or
aaa
cmpsb
jmp
enter
mov
fistpl
fstp
in
xor
inc
jne
vcvtdq2pd
fs
mov
sub
insl
or
js
jnp
iret
cmp
xlat
and
inc
stos
sbb
adc
stos
out
inc
scas
pop
orl
clc
jae
idivl
dec
out
mov
dec
clc
loop
sbb
int3
rcrl
cmpsb
fcoml
ss
mov
sub
mov
xchg
cmpsb
movsb
push
pop
and
repz
and
roll
dec
jecxz
jl
and
jl
cs
push
inc
mov
inc
push
lods
fs
pop
jo
das
aad
imul
or
push
dec
or
mov
insl
mov
fsts
loopne
in
sub
loop
add
jg
add
adc
push
mov
cmp
enter
fwait
inc
cs
push
scas
push
jne
jmp
adc
mov
test
rcl
inc
and
roll
in
ret
mov
pop
or
jl
das
fstl
in
push
inc
loop
out
sub
aad
mov
add
test
rol
aas
jbe
notb
imul
int3
mov
pop
dec
and
push
add
sahf
sub
push
lods
mov
cld
and
push
test
mov
push
push
insl
scas
rolb
dec
in
cmp
lret
stc
sub
xchg
pop
mov
jecxz
and
mov
sub
add
and
cmc
xor
pop
repz
pushl
sbb
dec
or
mov
jne
fsubp
loope
les
mov
xchg
pop
lock
insb
out
imul
inc
test
shll
movsl
push
cs
sbb
push
pop
mul
out
pop
paddusw
int3
mov
mov
mov
xor
push
jae
adcl
xchg
lret
loop
push
push
xchg
adc
push
loop
add
repnz
mov
lds
addl
js
fcoml
icebp
fisubs
hlt
jl
dec
cmp
ja
cmp
orb
les
mov
inc
and
lock
arpl
pop
pop
add
out
adc
enter
pop
jle
call
lds
int
pop
pushl
jo
add
ss
scas
in
outsl
mov
shrb
mov
ret
pop
and
pushf
scas
dec
shl
jbe
lret
push
or
mov
test
sbb
mov
cld
cmpl
xchg
jp
sub
xchg
cmp
negl
iret
insb
sub
sub
sbb
dec
rep
popa
or
cmp
adc
jle
mov
mov
pop
push
pusha
sub
sbb
addl
bound
fucom
sbb
jb
mov
push
cmp
or
pop
stos
cld
inc
xchg
xor
pop
fimull
cmp
aam
push
sbb
fcmovnb
dec
scas
ret
jb
fdivrs
cmp
add
dec
or
rolb
sub
jne
dec
repz
mov
rcll
cli
push
call
pinsrw
dec
sti
push
out
repz
rorl
sub
push
inc
sub
sarl
xor
cmp
and
insb
jae
fst
fcomp
jb
fistps
fldl
in
sbb
mov
sbb
test
popa
or
sub
and
mov
xchg
xlat
adc
cltd
cli
ss
cs
push
jle
mov
loopne
test
mov
xor
cli
xchg
lds
lret
mov
add
pop
cmp
daa
jns
add
je
xchg
push
test
dec
int3
outsb
xchg
jmp
loopne
inc
adc
out
pop
cmp
js
sbb
pop
adc
cmp
lock
in
pop
fucomp
jne
out
sbb
jb
daa
xor
dec
mov
sbb
scas
jns
lods
pop
jne
shll
loopne
fmuls
adc
sub
sub
fs
or
mul
ja
jnp
jno
push
cmpl
stos
pushf
mov
mov
add
daa
xchg
dec
pop
sbb
mov
inc
lds
lods
jg
loope
inc
jbe
dec
cmp
cmp
fwait
push
fmuls
or
mov
imul
inc
pop
sti
mov
outsl
and
lock
lock
push
or
sbb
push
repnz
inc
pop
lea
xchg
push
aad
adc
imul
aam
xor
sahf
pushf
or
mov
fisttpll
hlt
add
shll
dec
or
dec
xor
test
cmp
idivb
fwait
dec
pop
mov
imul
cwtl
arpl
cltd
mov
scas
or
and
pop
loop
test
mov
ficompl
xor
sbb
dec
popa
or
xor
mov
pop
syscall
inc
cmp
int
adc
int3
inc
add
movb
push
and
and
dec
aas
in
mov
mov
stos
xor
inc
mov
mov
pop
je
push
sti
push
sarb
sub
pop
scas
dec
cmpsb
in
sbb
adc
jb
sahf
jnp
daa
stos
and
scas
lret
mov
add
jbe
mov
mov
mov
shrl
popa
xchg
xlat
cltd
xchg
nop
push
gs
lret
int3
inc
fstpt
test
push
inc
dec
add
inc
inc
sbb
data16
pusha
cmc
bound
js
pusha
iret
lahf
fsubp
mov
xchg
pop
leave
stos
adc
repnz
es
adc
xchg
ficomps
mov
fadds
cmp
dec
mov
jne
and
xchg
xchg
jle
xchg
out
mov
jp
test
test
jge
loope
fistps
repz
sar
insl
loope
and
test
push
push
push
gs
scas
test
pop
sbb
jo
notl
ljmp
mov
or
jbe
push
jg
pop
ljmp
dec
cli
aaa
pop
fcmovb
not
mov
rolb
popa
hlt
push
sub
jo
mov
dec
adc
cltd
xchg
repnz
cmpsb
test
mov
je
cmpsl
cli
in
arpl
cmc
pop
pop
js
sub
xchg
mov
sub
xchg
xor
xor
xchg
sbb
push
js
enter
fildll
popf
adc
xor
push
jmp
cld
aas
in
and
cmpsl
adc
cmpsb
adc
gs
adc
mov
rsm
and
iret
mov
roll
daa
lds
lcall
or
cmp
mov
cwtl
add
and
fwait
jne
je
outsb
icebp
loop
sbb
xor
test
out
lcall
repz
and
xlat
mov
sbb
jae
xor
sub
add
in
push
aaa
pop
addr16
jns
push
cs
popf
dec
inc
sbb
and
mov
xor
xchg
cmp
cmc
aas
lcall
insb
test
mov
jne
stc
cld
pushf
push
test
and
xchg
adc
xchg
ja
ds
sub
data16
pop
adc
out
stos
leave
push
aas
push
add
fcmovb
cltd
int3
arpl
dec
adc
xor
shr
mov
or
xchg
cmpsl
fnstenv
and
pop
xchg
roll
les
or
sti
scas
pop
xchg
and
pop
sbb
add
out
dec
or
mov
ss
xchg
movsl
in
add
xchg
enter
clc
in
push
cmp
es
repz
adc
lahf
nop
sbbb
jl
pop
xor
stos
pop
add
mov
out
mulb
cmp
lods
dec
add
add
orl
dec
mulb
xchg
mov
scas
mov
test
cmp
or
adc
out
dec
jne
test
je
outsb
xchg
repnz
push
xchg
jnp
xchg
in
mov
cwtl
lock
rorl
jg
jb,pt
arpl
or
lods
int
jnp
add
mov
push
sbb
aad
cmp
xchg
cmp
inc
cmpsl
and
dec
and
mov
into
jp
adc
aas
mov
jmp
popf
pop
mov
call
sbb
fabs
cmc
mov
ds
sbb
dec
dec
lods
mov
out
sahf
or
in
inc
leave
ss
scas
fisubrl
cmpsb
jmp
stc
addr16
jne
push
or
aam
jb
pop
insb
mov
jns
sub
xor
clc
push
xor
xor
add
adc
pop
dec
daa
arpl
dec
cmp
sahf
xor
add
jbe
pop
rcrb
iret
adc
rorl
lods
ja
pop
add
popa
xchg
push
in
popa
das
dec
mov
xchg
mov
lods
push
adc
rolb
mov
mov
mov
aaa
negl
push
fdiv
xchg
cmpsb
fnsave
cltd
sbb
jmp
mov
es
aam
adc
cltd
jb
int3
dec
lds
cmp
rorl
push
sub
mov
jno
sub
aad
dec
sbb
dec
jge
xchg
loope
pop
gs
in
cmp
ds
jbe
dec
fmulp
jecxz
dec
push
inc
pop
testb
cmp
sti
divb
jle
push
push
sub
push
out
in
bound
js
aad
fcompl
xchg
add
ret
std
xor
pushf
mov
inc
rclb
mov
jnp,pn
and
adc
addb
dec
leave
scas
lds
cltd
fisttpll
adc
xchg
lock
je
ret
aaa
insb
pop
sub
clc
jnp
adc
xor
jg
dec
shll
movsl
and
mov
movsl
xchg
test
or
sub
xchg
int3
xchg
lea
add
jb
mov
sub
div
jb
sub
xor
mov
xchg
jb
cwtl
adc
lret
cmpsb
mov
jle
jmp
push
cmp
mov
add
ljmp
ss
jns
stc
imul
lahf
jle
ret
mov
cmpsb
mov
out
mov
insb
loop
xorl
and
fwait
pop
subps
dec
dec
cltd
cs
pop
mov
scas
dec
mov
idivb
cmpsl
lods
sbb
ja
and
pop
dec
jbe
cmp
mov
pop
adc
push
clc
test
mov
hlt
ret
or
add
ja
push
mov
repz
mov
jg
sbb
jo
dec
andps
or
and
test
adc
call
adc
rorb
jle
mov
stos
adc
js
mov
xorl
mov
jg
mov
daa
lret
dec
inc
pop
xlat
push
or
dec
stos
xchg
das
mov
xchg
sbbb
data16
test
jg
cmc
or
or
sbb
adc
adc
sti
addb
shrb
fwait
popf
xchg
outsb
inc
inc
jp
and
jno
pushf
arpl
call
xchg
push
dec
push
sbb
push
mov
jg
pop
fmuls
mov
sub
loopne
jne
push
iret
jbe
sbb
push
stc
mov
mov
fcompl
sbb
jg
js
inc
aad
sahf
in
into
test
add
scas
outsl
mov
lock
lret
adc
and
rcl
sbb
ljmp
sub
xor
movsb
dec
outsl
sub
pop
fisttpl
fisubs
pop
aad
rclb
jb
sub
out
pop
sub
push
leave
cs
jae
icebp
sbb
or
rclb
or
aaa
mov
and
sub
stos
dec
and
inc
fs
je
fwait
les
aas
cmpsl
fmulp
sub
inc
inc
push
lcall
andps
cld
cltd
movsl
jbe
test
int
leave
popf
sarl
dec
push
cmc
mov
push
push
xor
mov
test
jns
int
pop
mov
popa
lods
fbld
inc
inc
push
pusha
insl
add
fwait
leave
das
jmp
rclb
dec
jmp
inc
adc
mov
sbb
pusha
incl
stc
xchg
test
mov
cli
mov
addr16
rsqrtps
mov
xor
int3
ret
add
icebp
fs
pop
mov
movsb
into
stc
cmpsl
lock
sub
inc
pushf
enter
insb
les
xor
mov
push
cwtl
imul
or
cmp
xor
dec
sbb
push
fdivl
adc
push
add
xchg
stos
jmp
inc
js
add
fistps
sub
mov
push
dec
push
add
ja
mov
pop
outsl
aas
pop
lock
xor
xor
test
mov
mov
sbb
stos
sbb
test
jge
and
mov
xor
or
jnp
int
divb
pop
mov
inc
imul
xchg
sahf
sub
push
movl
idivl
cmp
sbbb
xorb
mov
je
lds
int
jnp
dec
mov
pop
fsubrs
movsb
fs
pushf
fsubs
insl
inc
mov
dec
xchg
pop
mov
shll
scas
rcrb
movsb
jae
dec
xchg
xchg
xchg
lret
fcoml
and
or
sbb
and
xchg
stos
xchg
insl
inc
cli
mov
mov
cmpsl
movsl
jo
clc
sub
sti
adcl
std
fisttpll
push
loop
sbb
bound
loop
push
push
dec
jne
lods
pop
jno
aaa
iret
ss
aam
insl
and
mov
out
out
ja
xchg
ja
sub
movsb
push
shl
xor
inc
adc
data16
test
notb
fstpl
in
inc
push
xchg
in
ficoml
movaps
jl
ret
push
sub
and
push
push
das
jne
pop
xchg
lods
sarl
push
fidivs
ret
pop
lea
mov
mov
jmp
push
add
xor
rolb
mov
dec
out
jne
xlat
mov
cmp
add
and
in
rol
shll
movsl
xchg
scas
push
lret
jl
mov
jmp
movsl
sbbb
shlb
xchg
movsb
push
fsubs
add
inc
dec
pop
add
dec
xor
repz
loope
sub
push
sar
sarb
push
jl
or
inc
mov
repnz
push
stos
je
int3
subl
push
enter
scas
lock
out
dec
lods
push
std
and
lods
dec
repz
cs
sbb
jnp
ljmp
test
shrb
cltd
push
inc
mov
ret
pop
push
adc
xchg
inc
cmpsl
sti
test
fidivrs
jmp
lret
mov
pop
pop
and
ret
adc
jne
addr16
sub
jne
mov
fldcw
or
test
test
dec
jl
push
pusha
stos
js
mov
jbe
xorb
test
or
mov
mov
in
mov
lret
in
stc
add
xchg
xlat
ret
cmpsb
adc
mov
mov
push
cmpsl
sub
stos
test
call
fstp
int3
sar
jnp
inc
jnp
mov
nop
std
mov
pop
dec
mov
lods
testl
inc
inc
jmp
jae
jb
pop
and
mov
js
addps
in
mov
stos
and
sti
sub
arpl
inc
mov
mov
cld
ljmp
jp
push
pop
test
in
or
cmp
xor
jns
mov
mov
mov
cmp
and
push
push
jp
push
rol
sub
push
pop
repz
lock
mov
stc
mov
insl
xor
sbb
mov
ss
mov
xchg
add
push
clc
sbb
sub
jmp
and
imul
add
mov
call
xor
leave
mov
mov
inc
sbb
mov
inc
pop
adc
xor
mov
mov
lcall
pop
xchg
jbe
pop
arpl
jle
add
inc
fcomps
pop
ficomps
cmp
int3
ret
adc
into
addr16
out
pop
in
or
repz
and
imul
insl
filds
sahf
ret
fisubrs
into
cwtl
lock
or
pop
xchg
jnp
imul
xlat
add
mov
in
fldt
sbb
aaa
or
mov
xchg
lea
inc
lcall
in
pushf
pop
mov
or
clc
roll
and
cmp
mov
loope
call
jbe
orl
in
mov
idivb
dec
dec
clc
xchg
jb
pop
mov
sarb
or
mov
jecxz
mov
sti
add
icebp
fstp
insl
inc
and
int
fiadds
cmp
aas
mov
loop
jnp
sbb
rol
inc
sti
or
mov
push
shr
jno
sti
stos
and
jo
xorl
lock
and
movsb
and
sbb
or
and
mov
add
add
in
pop
hlt
push
push
xchg
sbb
inc
pop
sbb
pop
loope
out
push
add
sub
cmpsl
or
push
js
jp
pop
dec
jecxz
jnp
ja
mov
mov
scas
lcall
mov
sub
ficomps
dec
push
in
and
aam
stos
xlat
inc
xlat
lret
filds
les
sub
xor
cmc
subl
or
sub
mov
lock
loopne
pop
or
jle
inc
xchg
in
jl
ds
fadd
jnp
sbb
inc
pushl
loopne
xlat
in
test
mov
sarb
js
out
sub
fucomi
test
ja
push
pop
jle
xchg
sub
or
movsl
sbb
push
and
jmp
push
adc
or
es
aam
sbb
push
inc
add
jmp
std
pop
xchg
insb
mov
pop
sub
jmp
mov
shlb
movsl
out
xor
addr16
jmp
idivb
xchg
js
fwait
imul
cmpsb
mov
and
aaa
inc
xor
xorb
push
aam
pop
dec
add
sbb
jmp
add
arpl
nop
fsubr
in
cmp
adc
fsubrp
jmp
outsb
jg
mov
call
jno
mov
mov
int
sbb
rcrb
bound
dec
push
imul
dec
dec
push
xor
movsl
fmuls
xchg
push
int
jno
xchg
lret
pcmpgtd
insl
fimull
mov
and
push
inc
fstps
data16
lea
mov
push
ljmp
and
pop
mov
into
je
jp
sbb
movsb
ret
inc
int
mov
pusha
popa
mov
push
psubq
ljmp
out
enter
jae
sbb
es
push
inc
xor
mov
push
ret
or
or
push
fldl
aam
out
and
pop
inc
fstp
pop
mov
imul
pushf
mov
mov
pop
inc
push
arpl
loope
ja
push
div
mov
xchg
or
adc
pop
xor
lcall
adc
xchg
out
mov
lock
inc
push
cmp
jmp
xchg
xchg
lods
adcb
dec
pop
ret
divl
pushf
movsb
pop
jmp
cmp
jae
cwtl
adc
lods
jae
pop
call
inc
adc
pop
outsb
loopne
add
pop
push
sarb
andl
jg
mov
dec
dec
or
xchg
outsl
and
movsb
scas
nop
mov
addb
mov
not
jecxz
adc
jne
sub
aam
ss
gs
ret
daa
mov
loopne
and
and
fistpl
mov
mov
adc
addr16
mov
aam
dec
xchg
cmpsb
pusha
push
add
mov
lahf
insl
cld
call
daa
ljmp
mov
stc
jle
cmp
ror
cld
or
in
xor
shrb
push
adc
adcb
adc
ss
xchg
mov
mov
cmpsb
adc
fdivs
clc
and
add
std
push
mov
and
inc
repz
cmp
js
push
js
dec
pop
ret
imul
push
lahf
mov
push
out
icebp
cmp
cltd
mov
ficompl
std
rcll
jns
inc
das
sub
sub
cwtl
fnstcw
jge
rcll
inc
rorl
test
push
lods
mov
jns
xchg
mov
ret
mov
nop
mov
pop
inc
inc
inc
jge
shl
mov
mov
push
imul
jp
testl
lock
insb
lds
jb
or
stos
cld
mov
and
sbb
jle
cmp
adc
imul
sub
jp
aad
add
iret
sbb
adc
cld
push
xor
mov
sahf
jno
lcall
les
inc
push
xor
inc
pushf
mov
mov
sbb
pop
cmp
pop
iret
jecxz
add
cltd
sbb
testl
imul
notl
ds
jge
add
inc
sbb
mov
and
fs
sbb
dec
in
out
sbb
mov
mov
cltd
push
xchg
mov
mov
dec
mov
mov
nop
sub
and
in
cmpsl
xchg
cmpsl
push
pushf
mov
iret
fadd
popf
xor
jg
mov
and
popa
ret
lods
repnz
out
negl
rcrl
or
andb
mov
notl
test
or
add
dec
jne
outsb
clc
jl
sub
mov
push
nop
cs
jae
xor
pop
lret
mov
xor
mov
sub
add
and
ds
and
cld
mov
mov
ficomps
pop
xor
and
lods
jecxz
or
cmp
mov
xchg
shrb
mov
cmpl
push
shl
or
call
jl
aam
movsb
lret
dec
loop
addl
add
pop
sbb
loope
jecxz
mov
shll
adc
ss
pop
imul
jns
andw
cmpl
mov
stc
xor
pop
mov
mov
sarb
sarb
or
jbe
or
cmc
test
push
icebp
in
mov
dec
adc
xor
jp,pt
jg
pop
dec
std
xor
dec
int
add
adc
xchg
sbb
sbbl
mov
xchg
or
loopne
bnd
dec
fdivl
lahf
aaa
inc
arpl
jle
cmp
sub
int3
gs
dec
scas
addr16
push
cli
jns
xchg
cmp
lods
cmp
fwait
mov
lea
imul
and
aad
xorl
xchg
pushf
inc
adc
cmp
clc
or
adc
jecxz
add
mov
push
mov
in
push
inc
xchg
pop
adc
rcll
lods
adc
test
inc
sub
sbb
mov
push
outsl
mov
push
hlt
in
sti
push
ds
mov
ja
inc
mov
jecxz
out
shll
cmp
pop
loope
test
xchg
std
or
outsl
jne
lahf
rcrl
push
out
sub
push
out
or
cmp
jle
mov
mov
mov
push
ds
adc
fs
hlt
xor
pop
mov
pop
nop
nop
mov
cmp
push
aam
test
dec
jne
rorl
jno
pop
sub
jmp
inc
out
aam
cld
test
add
pop
outsl
fistps
mov
push
jg
mov
mov
mov
mov
mov
notl
scas
xor
mov
push
das
mov
dec
add
dec
adc
fwait
stos
out
movsb
ds
mov
pop
pop
outsl
sarl
cwtl
stc
sbb
js
push
mov
movsb
jl
cmpl
adc
aas
jb
jle
or
icebp
and
mov
cmp
inc
les
inc
mov
or
jns
and
mov
sti
or
stc
mov
jbe
fnstenv
push
pop
mov
or
mov
xchg
add
add
pop
xchg
loop
mov
insl
sbb
mov
push
imul
sbb
lods
in
scas
xor
leave
scas
repz
adc
mov
and
sub
mov
cmp
lret
inc
movsb
and
std
outsl
pop
jae
dec
jns
jecxz
cwtl
pusha
mov
idivl
dec
std
insb
lods
pop
mov
cmpsb
fwait
jl
lds
lods
adc
sub
pop
ret
mov
les
push
leave
fcompl
jbe,pn
popf
inc
push
fwait
adc
cld
dec
outsb
out
jae
sub
gs
cwtl
jp
pop
fiadds
mov
and
mov
xchg
xchg
cmp
jno
fcoml
sub
test
mov
push
jb
lea
sbb
roll
adc
mov
dec
add
cmp
adc
sti
sub
imulb
or
mov
mov
pop
sub
lahf
shrl
sbb
xor
fistps
mov
mov
jbe
mov
add
leave
push
mov
xor
cmpsl
mov
ds
mov
call
fisttpll
dec
inc
rcr
leave
mov
pop
inc
adc
jne
xor
fists
adcb
ja
xor
pushl
mov
int3
pushf
adc
xchg
push
sbb
xchg
test
adc
add
adcl
sti
repz
inc
or
push
push
add
mov
lods
adc
popf
inc
addr16
dec
add
xor
mov
adc
adc
pop
push
mov
stos
inc
ss
mov
stos
in
jecxz
aas
inc
xchg
popa
les
jmp
xchg
pusha
jae
xor
jmp
adc
dec
sub
sub
loope
popf
sub
stos
jne
and
cs
testl
adc
ret
cmp
push
stos
sahf
add
and
add
