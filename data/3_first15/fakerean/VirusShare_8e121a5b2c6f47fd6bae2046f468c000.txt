push
mov
sub
movl
cmpl
je
mov
mov
jmp
movl
mov
xor
divl
mov
mov
mov
mov
mov
mov
and
cmp
jne
mov
and
mov
mov
or
mov
mov
add
mov
mov
add
movzbl
movzbl
sub
mov
add
mov
jmp
mov
and
mov
mov
or
mov
mov
mov
mov
add
movzbl
movzbl
xor
mov
add
mov
mov
inc
mov
mov
shl
mov
shr
or
mov
cmpl
jl
xor
inc
leave
ret
push
mov
sub
movl
mov
imul
mov
mov
mov
pushl
call
mov
leave
ret
push
mov
sub
push
push
call
andl
push
push
push
push
push
call
cmp
jne
push
push
call
test
jne
movl
jmp
mov
xor
mov
mov
xor
push
pop
div
mov
mov
shl
mov
xor
push
pop
div
push
pop
sub
mov
shr
or
mov
mov
and
mov
mov
imul
mov
mov
add
mov
mov
mov
push
push
push
call
add
cmp
je
mov
mov
xor
push
pop
div
mov
mov
sar
mov
xor
push
pop
div
push
pop
sub
mov
shl
or
mov
mov
mov
jmp
movl
call
push
call
pop
pop
leave
ret
int3
outsl
popf
mov
divl
insl
test
addb
testl
lahf
or
and
loopne
movsl
rcrl
lret
cli
and
adc
cmpsb
iret
xchg
mov
test
je
adc
int
lret
cwtl
and
add
insl
fsts
lcallw
cmovae
inc
repz
add
pop
adc
iret
dec
ja
stos
int
loop
sahf
gs
cmp
adc
pop
xchg
add
inc
test
add
push
dec
inc
cltd
negb
into
aam
pushf
pop
xchg
dec
mov
xchg
sti
add
mov
and
push
and
or
loopne
mov
mov
mov
je
stos
in
push
adc
push
inc
xchg
stc
sbb
imul
clc
sub
xlat
popf
cli
gs
cli
stc
push
int
jmp
leave
xor
out
fmull
popa
in
mov
mov
xchg
xchg
xor
dec
hlt
add
inc
lock
and
adc
mov
sti
cmpsb
and
cmpsl
jmp
and
or
or
push
push
cltd
xlat
and
lret
push
push
ds
test
loope
sbb
popa
xchg
in
xor
mov
mov
push
shlb
mov
test
dec
dec
xchg
jp
fisttps
aad
mov
sbb
jmp
sbb
jbe
jp
cmp
rcrb
dec
rcrl
lods
inc
mov
addl
sbb
xor
jg
jne
inc
fwait
lahf
pop
inc
inc
xchg
mov
jmp
subl
pop
or
addr16
loope
mov
fisttps
and
arpl
mov
mov
das
xchg
dec
js
cli
mov
shlb
xchg
mov
negb
fdivrs
mov
fldl
cwtl
lahf
mov
imul
scas
cmpsl
ret
mov
sbbb
mov
jmp
mov
in
call
lods
xor
lahf
sbb
fidivl
shlb
inc
stos
mov
adcb
scas
movsl
divl
cmp
outsl
xlat
mov
sub
dec
aam
jb
sub
out
pop
enter
push
sbb
xor
mov
fnstsw
sbb
inc
jle
push
shrb
aad
cmp
cwtl
xor
mov
into
aaa
cmpb
inc
push
cld
loopne
mov
in
pop
outsb
scas
cld
rorb
ret
add
mov
aad
dec
in
dec
push
bound
mov
jle
mov
mov
pop
cmpsb
push
mov
adc
jo
mov
jp
lock
add
dec
inc
mov
out
mov
or
mov
dec
mov
mov
movsl
push
sahf
mov
outsl
dec
stos
xchg
lds
and
fucomi
push
sbb
jo
test
adc
mov
ret
xor
stos
ror
mov
mov
lret
push
mov
adc
lcall
call
pop
ret
imulb
inc
mov
sbb
outsb
lea
jns
push
inc
dec
scas
out
cmp
or
int3
les
test
jecxz
int3
lods
xor
jno
je
imul
xchg
bound
sub
out
cmc
cld
pop
out
add
xchg
push
cmp
fistpl
clc
loop
bound
sub
and
inc
js
testb
jnp
pop
orb
mov
adc
and
arpl
popf
or
ss
decb
jg
aaa
lret
inc
in
fdivrl
push
incb
popf
gs
pop
fistpl
xchg
std
leave
mov
fists
sbb
pop
xchg
and
or
push
in
cmc
inc
or
sbb
jo
mov
scas
imul
sub
pop
mov
test
xor
fwait
es
into
cmp
push
ss
cli
les
aaa
adc
jecxz
jno
idivl
mov
aad
or
repnz
aas
mov
dec
addr16
stc
xor
mov
inc
mov
cmp
mov
subb
xchg
hlt
std
loop
jge
pop
imul
and
scas
shr
fstpt
cld
cmp
sub
lock
cmp
mov
or
rcr
adc
movsb
push
pop
push
call
ficoml
sub
xchg
cmc
into
jp
das
mov
push
or
cmp
fisubrs
call
mov
jb
rclb
add
outsb
push
les
scas
ss
sarl
popf
or
int
in
in
dec
and
cmp
or
pop
jg
jmp
mov
sub
and
xchg
cmpl
dec
adc
sbb
cmpsb
cltd
in
push
xchg
lds
sbb
mov
inc
rclb
movsl
orl
loop
inc
call
popa
sahf
movsb
sub
jmp
out
sub
xor
bnd
inc
test
push
mov
repnz
jmp
sbb
ss
xchg
scas
xor
es
cmp
sbb
sbb
fldl
xor
pushf
ds
xchg
jg
add
sarb
mov
rcrb
mov
jbe
bound
xchg
pop
push
cmpsl
sahf
inc
pop
gs
or
or
xchg
cli
das
cmp
lahf
pop
leave
test
ror
mull
xchg
lret
gs
movsl
bndstx
test
mov
mov
push
stos
inc
insl
mov
or
mov
or
dec
lret
fcmovnb
xchg
test
cld
xchg
outsb
jg
in
cltd
cmp
push
test
fsts
rolb
ret
or
add
add
sti
pop
in
adc
lea
xchg
scas
into
hlt
xchg
sti
inc
fprem1
mov
adc
xor
mov
cmc
jl
gs
sub
int
and
jne
sub
xchg
std
and
inc
and
dec
inc
insb
es
pop
faddl
idivl
sti
xor
out
mov
stc
rorl
add
mov
adc
add
js
cld
pop
mov
gs
in
jl
add
push
mov
cmc
sarb
mov
sbb
inc
subl
push
push
push
push
movsb
cltd
lock
mov
imul
shll
adc
adc
loope
sbb
in
xchg
lret
add
dec
aam
addr16
shr
mov
mov
push
jecxz
cltd
insl
xor
adc
sub
jns
pusha
std
add
mov
imull
test
nop
xchg
push
and
mov
cmp
and
ljmp
test
shlb
mov
orl
test
xchg
andl
or
fsubrl
test
sbbl
out
xorl
stos
or
ficoms
xchg
je
ja
bnd
sub
sub
mov
lds
insl
and
add
sub
in
js
in
cmpsl
fld
nop
adc
dec
jb
xchg
mov
loope
stc
outsl
ja
adc
sti
adc
or
inc
sub
dec
out
sahf
jne
add
cmpsl
movsb
add
push
addr16
add
mov
xchg
mov
les
xchg
subb
aad
mov
cltd
pop
aad
or
mov
leave
stc
mov
fcmovnb
lock
add
adcl
push
arpl
inc
fistl
cmp
or
lods
cmp
cmp
mov
mov
lahf
mov
xchg
loop
adc
mov
aas
push
and
negl
call
jecxz
push
xchg
sbb
and
sarb
mov
mov
xor
add
fnstsw
js
and
aas
mov
lea
push
int3
pushf
mov
mov
inc
aaa
push
mov
pop
pop
push
andl
xor
xor
sbb
cmpsl
xchg
lret
xchg
xchg
mov
sbb
movsl
sbb
or
dec
sahf
mov
ss
inc
sub
je
adc
adc
cltd
aas
or
movsb
add
xchg
inc
insl
or
bound
pusha
idivb
hlt
dec
aad
mov
xchg
sbb
enter
jg
mull
jecxz,pt
les
aaa
push
xchg
push
xchg
sbb
aam
lret
xchg
jmp
add
hlt
int
cwtl
mov
mov
ret
daa
mov
xor
and
xchg
sbb
mov
adc
ficoms
mov
mov
or
push
in
std
fiaddl
inc
pop
pusha
adc
push
std
jle
imul
xchg
or
insl
insl
out
orl
dec
and
lahf
push
mov
aaa
add
push
jnp
cmp
data16
pop
mov
dec
mov
xor
popf
xchg
jo
std
movsl
roll
fldenv
mov
mov
out
mov
in
das
aas
xchg
aad
stos
mov
and
popa
xchg
insb
jns
mov
jle
or
inc
adc
cld
pop
leave
add
push
imul
bound
sbb
cwtl
ret
cmpsl
rorb
dec
cmp
add
adc
xchg
mov
cmp
cmpsl
mov
test
mov
or
lret
fiadds
jo
push
aas
adc
inc
repnz
lock
lcall
cwtl
sbb
decl
push
aas
inc
and
pop
push
xor
xchg
sbb
dec
jge
jmp
andb
adc
jecxz
std
xchg
push
lcall
push
cmp
and
std
rolb
mov
mov
in
adc
fildl
movsb
cmp
nop
enter
and
pop
pop
dec
dec
popa
lea
mov
stc
shlb
xchg
dec
insb
aas
mov
ret
pop
or
push
std
sub
cmp
and
inc
xlat
dec
lods
and
push
inc
int
ss
cmp
add
push
leave
xchg
xlat
cwtl
out
data16
jno
and
mov
pop
lods
and
mov
mov
cs
dec
or
jne
jmp
lret
in
fs
movl
test
push
movsl
pop
sbb
xchg
mulb
adc
push
cltd
inc
push
imul
jno
jp
mov
cmp
ss
insl
xor
dec
adc
mov
add
dec
ds
pop
and
fbld
fsubrl
sub
roll
mov
xor
test
into
jp
add
sbb
lds
dec
stos
jl
mov
add
xor
sbb
sbb
int3
sbb
sbb
pop
stos
loopne
mov
jns
ja
pop
and
jmp
stos
adc
and
dec
sti
aaa
aad
pslld
xchg
jp
push
mov
and
stos
push
lea
scas
mov
jp
adc
outsl
pop
dec
dec
sub
rolb
fwait
xor
xorb
in
push
sbb
aas
add
push
push
mov
add
push
hlt
repnz
jo
xor
cmp
mov
fistpl
sbb
mov
or
dec
stc
mov
mov
dec
sti
or
lods
or
fwait
in
outsl
xlat
inc
mov
mov
sub
js
mov
jp
popa
pushf
out
sbb
rorl
icebp
movb
scas
popf
push
les
fdivp
rorl
mov
dec
pop
mov
and
outsb
std
mov
xchg
fistl
decl
push
mov
cmpsl
or
iret
in
sub
sbb
rorb
movsl
cmp
add
mov
add
data16
repnz
sbb
bnd
adcb
inc
jbe
aas
inc
cld
sub
jge
mov
pop
filds
push
outsl
mov
dec
jb
inc
xchg
cwtl
xor
xor
ret
dec
mov
sbb
repnz
subl
sub
mov
outsl
xor
icebp
movsl
inc
jl
mov
cmp
insl
rorb
push
lret
push
sbb
sbb
call
loopne
movsl
pop
mov
and
push
add
and
xchg
shrb
xchg
jbe
cmovo
stos
jp
jb
cli
fdivs
add
or
ds
out
mov
mov
jnp
lret
and
negl
in
cmp
inc
subl
scas
ret
cmp
pop
and
xchg
jbe
mov
push
rol
inc
sbb
mov
and
popf
xor
cld
add
cmpsb
sbb
xlat
and
cld
fidivl
sbb
mov
jns
and
xchg
adc
das
pop
xor
arpl
insl
nop
inc
push
inc
ret
adc
xor
adc
and
in
jae
aas
mov
sub
in
outsb
daa
stc
adc
push
and
sbb
int
scas
push
or
or
mov
dec
clc
aaa
loope
and
xor
mov
cmp
adc
scas
sub
fcoms
es
and
sub
ss
sbb
or
sbb
loop
call
das
or
xor
jg
xchg
gs
fsubrs
stc
sub
ja
fstpl
jecxz
mov
sbb
xor
adc
je
xchg
lret
repnz
js
lret
stos
out
mov
cmpsb
dec
sub
xor
fs
js
sub
cmpl
mov
daa
mov
bound
push
in
and
cmpsl
test
jge
push
xchg
or
test
xlat
xchg
add
and
mov
fcmovbe
or
idivb
sbb
pop
rorl
test
mov
mov
push
jge
push
and
or
iret
cs
sbb
jo
jns
in
cltd
call
je
insb
andb
xor
adc
sub
inc
shrl
pop
or
cmp
cmpxchg8b
ret
inc
jp
daa
or
adc
scas
sbb
pushf
iret
loopne
mov
outsb
pop
out
push
dec
cmc
add
ss
pop
mov
push
or
scas
sub
leave
jnp
xchg
in
xchg
add
add
pop
xchg
jb
jnp
jns
movsb
out
sbb
push
movsb
scas
rolb
mulb
out
jmp
cmp
mov
mov
jne
std
push
add
add
xlat
call
xlat
fwait
push
daa
ret
movsb
addb
aas
mov
mov
pop
mov
inc
mov
jecxz
push
mov
xchg
xor
ret
mov
sbb
in
fsubrl
mov
pop
cli
xor
add
lea
or
insb
cmp
outsl
xorl
sbb
fisttpl
push
cmpsl
inc
sbb
xor
shrb
test
cmc
lods
sbb
mov
stos
pop
push
push
xor
mov
add
push
sahf
mov
mov
xor
clc
sub
mov
inc
addr16
xchg
xchg
sbbb
incl
arpl
add
mov
jecxz
pop
mov
mov
cmp
xchg
in
in
lods
xlat
push
je
jle
and
jecxz
and
and
jg
mov
add
loopne
leave
bound
inc
dec
sub
loop
test
adc
mov
loope
stos
mulb
ja
jg
mov
xor
fs
mov
add
imul
jo
xor
jae
outsb
out
cmp
fmulp
shr
cmpsb
cmp
icebp
jl
add
pop
jmp
out
mov
inc
pop
out
mov
je
mov
jecxz
js
inc
mov
and
mov
arpl
stos
mov
les
int3
or
mov
scas
ret
or
jnp
xchg
mov
push
cmpsb
lahf
xlat
mov
mov
xchg
and
in
xor
bswap
cli
push
dec
dec
fnstcw
icebp
dec
lret
and
cli
xchg
push
imul
pop
jb
mov
aam
int3
outsb
push
or
das
mov
mov
cmp
testb
pop
int
xlat
mov
xchg
jae
xor
stc
and
jbe
cmpsl
inc
ss
add
sbb
loopne
cltd
sbb
xchg
and
jo
mov
int3
neg
add
push
inc
shll
mov
in
mov
or
push
mov
dec
int3
and
sub
push
fidivrs
rcll
push
arpl
mov
lock
call
outsb
in
std
stos
xor
lds
in
enter
je
push
and
jge
pushf
popa
out
cmpsl
mov
pop
add
cld
and
jnp
cs
mov
aas
jno
lea
jbe
xchg
rcrl
jns
dec
faddl
dec
neg
or
pop
inc
mov
mov
loop
xor
in
mov
rcl
sahf
out
gs
and
andl
cmpsb
lret
dec
popa
push
push
fisttpll
cmp
repnz
out
pop
xchg
mov
jne
jne
sub
cli
lret
inc
sbb
clc
jbe
cmp
adc
js
out
jg
cmpsb
mov
pop
lds
add
mov
lock
hlt
xchg
pop
cld
xor
stc
ret
jns
xchg
sbb
cli
jp
in
rol
icebp
pop
dec
mov
or
aas
add
shlb
loope
into
das
push
aaa
loop
cmp
test
mov
push
lods
int3
inc
pusha
add
mov
scas
and
aam
inc
mov
cmpsl
mov
xchg
jb
dec
int
jg
mov
cmp
sar
jl
pop
mov
sbb
xchg
sub
clc
mov
cmp
cmpl
add
sub
cli
jmp
in
fiadds
xor
out
xchg
push
sbb
sub
push
mov
test
leave
loop
cmp
scas
inc
add
xchg
add
mov
loop
imul
mov
pop
loope
mov
and
add
cmp
ret
iret
push
jle
cs
mov
gs
pop
mov
fistpl
arpl
xchg
rcrl
cltd
dec
lret
cmp
pushf
sub
loop
pop
push
jmp
aam
sub
sub
frstor
pop
movsl
push
and
add
das
imul
psubsb
lcall
fiadds
jp
dec
lods
repnz
or
push
outsb
or
mov
add
shrl
xchg
mov
je
dec
pop
dec
sbb
roll
scas
adc
push
pop
and
xchg
and
mov
and
loop
loopne
sub
in
in
mov
fiaddl
je
pop
mov
lds
pop
int
lcall
arpl
in
cmp
hlt
roll
fs
jle
push
jns
std
xor
cmp
or
dec
mov
cltd
mov
addl
sub
bound
pushf
outsl
cmp
adc
jns
or
add
pop
and
add
int
aas
loope
jb
movsl
adc
testl
jp
stos
cmpsl
mov
aas
cli
ljmp
xchg
dec
shlb
mov
mov
inc
in
stos
inc
fnstcw
test
pusha
push
mov
mov
and
sbb
add
cltd
sti
cmp
aas
mov
lds
bound
das
add
ret
gs
pop
clc
hlt
adc
jmpw
pop
dec
ja
les
mov
mov
cmp
adc
adc
sbb
faddl
cld
adc
ljmp
pop
cltd
test
inc
or
decl
aad
adc
hlt
push
pop
cmpsb
out
mov
and
cmpsl
sbb
cmp
iret
dec
popa
xor
in
neg
adc
sbb
push
add
ret
sbb
mov
in
add
repnz
mov
clc
stc
bound
lds
jmp
dec
fdivr
mov
loop
ficomps
insb
and
stos
fstl
cmp
sbb
pop
xor
leave
mov
xchg
push
mov
nop
pop
lods
iret
inc
push
add
les
push
adcl
dec
fwait
dec
shlb
pushf
mov
sarl
jge
je
lahf
addr16
aas
pusha
dec
inc
adc
xchg
int3
std
push
lcall
xchg
pop
xchg
lret
cmovb
push
cld
mov
adc
cmp
push
pusha
mov
dec
add
aas
push
cmp
sbb
pop
jb
and
iret
sbb
addr16
cmp
adc
pop
pop
ja
push
clc
push
jge
inc
out
push
lahf
mov
fistps
xor
xchg
push
addr16
dec
stos
aad
into
and
int
aad
mov
imul
push
adc
push
mov
mull
xor
mov
sub
cmp
fwait
cmp
fcoms
mov
push
scas
imul
arpl
adc
jae
decl
mov
and
pop
insb
idivb
xchg
xor
fldenv
loope
jns
mov
push
or
sti
mov
mov
mov
sbb
pop
mov
insl
pop
lock
fisttpl
dec
sub
fwait
or
inc
or
xor
dec
dec
testl
sub
or
iret
cmp
pop
add
outsl
sarl
sbb
inc
mov
shll
scas
cmp
fdivs
enter
add
or
xor
and
push
loope
xor
sti
lea
inc
mov
in
pushl
je
insb
dec
jnp
jg
sub
mov
insb
pop
mov
scas
divb
outsl
mov
dec
cmp
push
loope
mov
rcrb
movsb
push
xchg
js
or
jmp
int
mov
fstpl
cmp
roll
pop
push
fstpt
ret
mov
sub
ret
cmc
cmp
inc
shll
cmp
outsl
test
xlat
out
mov
scas
xchg
int
bound
sbb
mov
inc
and
push
lret
xlat
inc
mov
jbe
sbb
repnz
dec
sbb
mov
adc
dec
push
dec
test
clc
push
fwait
cmp
push
jl
out
push
cmp
mov
xor
iret
xchg
pop
push
outsb
mov
subb
outsb
adcl
and
mov
repnz
jl
cmpl
push
mov
adc
pop
inc
adc
lahf
mov
jg
pushl
inc
sub
and
sub
pop
rcrl
mov
adc
cli
fldl
insl
xchg
sti
stos
imul
mov
cmp
jl
lods
pop
inc
call
mov
repnz
push
inc
cs
mov
mov
add
divb
lock
mov
adc
push
ja
xor
adc
pop
push
repnz
int3
and
mov
push
mov
loopne
or
dec
pop
sub
or
adc
or
dec
xchg
mov
in
push
subl
arpl
cmpsl
pop
xor
popa
je
pop
adc
movsb
mov
lods
jge
mov
scas
sbb
fisttpll
lahf
stc
add
xchg
xor
cld
shrl
ret
or
movsl
cld
mov
call
sub
push
xchg
ficomps
dec
leave
xor
xorl
test
orb
xchg
pop
mov
pusha
cltd
sub
add
fidivrl
cmp
icebp
lret
pop
jae
imulb
add
arpl
cli
cmp
sbb
rorb
repz
fwait
adcb
ret
xchg
in
fwait
iret
adc
lahf
push
cmp
mov
sbb
xchg
movsl
mov
cmp
inc
imul
hlt
sub
jae
arpl
jnp
nop
jb
add
adc
or
inc
dec
pop
iret
lds
dec
gs
imul
cli
jae
stos
popa
cs
imul
adc
rolb
ret
or
insb
dec
mov
popl
in
dec
adc
dec
xchg
je
adc
shrl
sub
subl
into
jge
sbb
outsl
dec
in
mov
jns
call
dec
sbb
idiv
cli
sbb
pop
mov
xor
lods
mov
popf
xchg
mov
mov
add
push
cmp
jno
inc
pop
lea
and
sbb
jo
scas
push
test
ljmp
shll
jnp
mov
loop
cmp
fstpt
or
ds
xor
adc
cmp
mov
lods
insb
pop
in
mov
loop
sbb
mov
cmp
lds
inc
inc
xchg
push
jle
push
cmpsb
push
sbb
cltd
mov
add
rorb
xchg
insl
pop
push
out
xchg
jl
or
out
jp
dec
sub
xlat
push
mov
dec
pop
dec
dec
jge
pop
jle
daa
inc
sub
xchg
popf
cmpsb
lahf
jb
stos
jno
inc
cltd
and
jae
jno
adcb
jns,pt
pop
test
lods
subl
xchg
xor
xor
rcll
bound
mov
pop
idivb
push
sbb
test
inc
sarb
pushf
andl
out
adc
mov
mov
pop
adc
in
lahf
insb
push
sbb
xchg
rorl
push
cmp
jmp
sarl
mov
inc
mulb
call
push
shlb
aaa
lods
xchg
sbb
les
cltd
pop
ret
cwtl
bound
cmpsb
and
mov
sub
mov
iret
call
and
mov
xchg
jecxz
pop
imul
and
fmulp
notb
pushl
in
fwait
lret
pop
fs
jbe
aam
int
es
mov
pop
adc
and
test
dec
jp
das
gs
push
nop
cmp
or
add
pop
bound
pop
fildl
std
repnz
aam
cmpsb
or
push
movsb
test
jecxz
sbb
into
sub
push
jns
out
pushf
mov
out
clc
mov
out
jae
dec
sub
imul
shrb
xchg
outsb
loopne
out
insb
mov
lret
shrl
aaa
push
stos
data16
xor
addr16
int3
add
arpl
cmp
rcr
pop
cmp
jne
dec
cltd
js
inc
add
push
std
xor
outsb
inc
fs
shl
push
xchg
sub
dec
pop
cmpsb
inc
mov
push
adc
pop
sub
or
stc
sbb
sahf
loope
stos
sti
inc
out
popf
pop
loopne
out
sbb
xor
push
adc
ss
repnz
sar
pop
sbb
aad
shl
push
xor
push
insl
inc
shrb
sarb
fs
jge
cli
jmp
mov
mov
idivb
mov
imul
sub
xchg
scas
add
push
lahf
xor
lea
arpl
or
fsubrl
dec
mov
sub
fwait
push
int3
sub
jmp
push
loop
xchg
mov
int3
pop
cmp
or
in
dec
push
ret
dec
adc
in
movsb
mov
push
push
xchg
mov
add
in
cmp
shrb
arpl
dec
jl
pop
pop
jno
mov
cmp
and
xchg
jnp
or
jge
fsubrl
fidivrl
testb
push
sub
shrl
xchg
test
and
or
cmp
push
xchg
push
ret
shrl
ja
movb
jmp
and
fisubrs
sbb
out
mov
ds
das
fcomps
sbb
lods
js
smsw
inc
cmpb
add
das
les
js
sti
cmc
pushf
cmc
fwait
jno
push
test
das
cltd
dec
jno
leave
cwtl
jo
sbbl
sub
push
gs
xchg
iret
mov
stos
sub
sarb
sahf
in
movsb
adc
mov
loopne
add
xor
inc
loopne
jl
dec
int
mov
xchg
adc
add
push
scas
inc
jns
xor
clc
je
js
hlt
aad
xor
xlat
jbe
or
cmc
pop
mov
add
push
out
out
cmp
jmp
aaa
sbb
dec
jecxz
in
push
cmp
push
lock
add
movsb
cmpl
xchg
pop
ds
xchg
and
push
dec
dec
in
push
jne
pop
inc
add
ret
sahf
loopne
out
xor
cmp
jnp
ss
xchg
outsb
and
dec
pop
or
loop
sub
ret
sub
jno
sub
out
mov
sub
leave
lods
mov
sbb
sub
outsb
ret
daa
pop
out
in
mov
stos
mov
out
shll
ljmp
inc
inc
dec
sahf
out
sub
outsl
movsl
aas
loopne
cmp
xor
or
sti
sbb
sub
testb
dec
jge
fcmovb
mov
pop
fdivs
inc
and
dec
push
movsb
add
and
jbe
xor
cmpsl
mov
inc
incl
pop
stos
scas
outsb
and
add
es
scas
add
xor
mull
and
xor
notl
jg
aas
or
scas
aam
ficoml
cmp
xor
rorl
out
jmp
jge
mov
cmpb
mov
pop
jmp
lock
sbb
add
pop
sbb
das
jg
enter
mov
fildll
sbb
js
cltd
cwtl
dec
push
cmc
xor
fildl
outsl
les
mov
sbb
cmp
mov
push
loop
lahf
test
daa
jno
or
std
cmpsl
push
cmp
jno
xor
add
mov
jp
ror
loop
mov
xchg
sub
filds
dec
cmp
inc
and
add
imul
repz
jg
pushf
inc
and
je
ljmp
out
sub
pushl
std
sbb
outsl
jae
pop
das
int
inc
add
mov
outsb
and
pop
into
iret
inc
movsl
mov
xchg
aad
out
jmp
pop
and
fsub
movl
mov
mov
rclb
rorb
aaa
orb
loop
and
divl
ret
and
notl
std
test
and
inc
loope
sub
inc
xchg
test
idivb
je
mov
cmp
mov
jbe
fwait
push
iret
mov
cmp
leave
fistl
pop
jne
adc
sub
scas
lret
push
dec
or
lcall
hlt
fsubr
repnz
lods
inc
mov
les
outsb
jne
add
fucomi
inc
fistpll
in
lret
adc
fsubrl
fnsave
lcall
xchg
jnp
jle
jle
das
repz
jne
test
out
iret
inc
jge
xchg
cmp
mov
sahf
mov
and
cmpsl
outsb
out
cmp
lock
add
sti
push
xchg
outsb
in
daa
jle
pop
push
enter
popf
inc
js
call
lock
sahf
in
in
inc
je
push
mov
cmp
pop
scas
xlat
addl
ret
lds
xchg
mov
into
dec
sbb
jl
adc
popa
int
mov
cmp
sub
fisttps
fnsave
pushf
jle
mov
adc
push
sbb
mov
test
cltd
adc
jbe
int
pop
push
addr16
push
mov
icebp
dec
cmc
fildl
adc
js
mov
shrl
daa
pop
dec
cmp
xchg
fdivr
fidivrl
cld
lods
fisttpll
or
insb
ds
mov
insb
mov
mov
xchg
dec
adcl
pop
sahf
inc
inc
nop
in
stos
sbb
lods
call
inc
mov
lret
xor
iret
push
mov
icebp
mov
jle
stc
mov
lds
cmpsb
ja
mov
push
cli
arpl
push
push
repnz
int3
stc
mov
xchg
stc
sbb
inc
cli
lods
jp
xorb
push
test
das
push
in
stc
lret
ja
test
out
or
push
data16
int3
leave
sbb
not
xor
push
jle
shrb
lods
xor
ret
jecxz
pushf
ret
push
rorl
push
arpl
out
in
lahf
pusha
inc
pop
test
lock
ret
out
pop
movsb
mov
xor
jbe
push
imul
mov
pop
pop
dec
mov
mov
js
mov
int
cmp
stos
fndisi(8087
std
addl
pop
mov
rorb
fisttpll
aad
inc
ret
add
stos
cli
test
fisubrs
test
fs
xor
mov
xchg
and
cmp
mov
adc
leave
jae
add
cmpsb
jge
aas
and
mov
push
dec
mov
jae
fisttps
push
rcrb
dec
movsb
addb
xchg
stos
dec
popf
sub
stos
mov
mov
add
adc
cmp
mov
sbb
pop
pop
pop
mov
fwait
pop
fdivrl
mov
repz
or
dec
pusha
cmp
push
or
cld
mov
in
and
xlat
mov
dec
imull
setb
ljmp
fdivr
sahf
les
je
push
mov
mov
test
xor
in
loop
dec
fadd
xchg
cmpsl
jle
sub
and
aam
adc
dec
dec
icebp
and
incl
add
jp
pop
or
shlb
fistl
sub
sub
pop
adcb
push
mov
dec
adc
aad
dec
push
ss
iret
hlt
adc
in
jo
mov
cmpsb
icebp
fwait
mov
lahf
jns
pop
cmp
ret
xor
pop
jge
inc
add
sub
pop
cs
int3
or
xchg
ret
and
stos
repz
mov
adc
jge
lea
std
shlb
push
rcll
jo
rorb
sbb
add
pop
subb
cwtl
cli
lock
aam
jns
es
fwait
mov
cmpsb
push
pop
mov
push
jmp
movsb
les
mov
xor
jno
lea
mov
mov
in
aam
mov
inc
dec
sbb
cli
ja
imul
repnz
xchg
fidivrs
sbb
push
mov
test
daa
xor
mov
mov
cmp
dec
or
sbb
movsl
rcll
sbb
xchg
pop
cld
cmpsl
lret
xchg
call
mov
shll
mov
mov
hlt
dec
push
ret
xor
xchg
add
stos
adc
mov
mov
mov
loop
lret
ljmp
ss
rorl
jle
fdivl
jge
mov
inc
xchg
mov
icebp
bswap
sbb
inc
mov
rol
mov
gs
into
inc
or
dec
mov
pop
sub
push
mov
jne
sub
fs
shl
imul
pop
jae
icebp
sbb
lods
push
xchg
and
dec
mov
sbb
js
pop
jns
subb
pop
lret
push
or
sbbb
decb
cmpsb
mov
dec
push
dec
sub
pop
pop
or
cs
push
imul
outsb
mov
add
cwtl
data16
ficomps
dec
stc
add
xor
mov
scas
loop
in
outsl
adc
fldt
adc
push
mov
lret
sahf
das
xchg
ljmp
mov
std
insb
dec
iret
gs
pop
sti
popa
outsl
rcl
cwtl
xchg
js
or
movsl
push
inc
pminub
subps
mov
sub
pop
adc
icebp
dec
rolb
inc
jno
xor
cmpsb
jns
or
hlt
or
dec
adc
mov
mov
es
xchg
rorb
ret
fisttpl
shlb
jne
push
arpl
mov
inc
adc
outsb
outsl
add
adc
jne
mov
inc
or
push
jns
inc
mov
and
and
xchg
push
and
clc
call
pusha
add
or
cmpl
pop
fsts
jmp
dec
stos
test
movsb
insl
aas
dec
test
xor
jle
mov
and
cmp
out
mov
adc
push
nop
pusha
int3
cmp
out
divl
xor
loop
mov
or
enter
cli
mov
jmp
es
mov
mov
cmc
bound
add
call
insb
hlt
pop
dec
xchg
cmpl
inc
in
dec
dec
pop
ds
xchg
jbe
shll
daa
notb
mov
xor
stc
icebp
xchg
sbb
jp
jbe
jge
cmp
push
cmp
mov
and
scas
aaa
cwtl
mov
testb
lea
pusha
cli
mov
mov
sub
xchg
out
out
dec
xlat
mov
mov
outsl
mov
movsb
and
call
scas
mov
shl
ret
pop
xlat
adc
sbb
sbb
stos
outsb
jns
cmp
push
mov
jbe
insb
testb
fwait
cmp
push
int3
call
lods
mov
std
in
cli
sbb
mov
jo
mov
into
lods
cli
mov
sbb
inc
lahf
and
scas
xchg
sti
lahf
out
outsb
shlb
int3
lods
push
clc
lcall
cwtl
fistl
push
int3
imul
mov
push
pop
es
loop
mov
mov
enter
cld
sub
scas
outsb
pop
pop
stos
loopne
cld
inc
loop
rcrb
and
inc
inc
aam
popf
push
imul
inc
mov
dec
mov
mov
mov
cmpsl
push
xor
add
out
xchg
bound
subb
mov
pop
ds
add
filds
test
adc
adc
ljmp
dec
std
pop
test
repz
push
lds
jns
mov
jb
call
clc
adc
sbb
je
inc
jecxz
mov
jp
lcall
std
push
mov
loopne
loopne
mov
cmp
jle
dec
aam
outsb
imul
andb
jnp
cmp
pop
incb
das
jne
movsb
daa
push
stos
int3
cli
xchg
xchg
and
push
xor
xchg
lea
sbbl
jno
adc
lods
pusha
sbb
sbb
mov
mov
mov
push
and
sub
xor
orl
inc
lret
pushf
cmp
cmp
es
xchg
ret
mov
ja
int3
dec
inc
fisttpl
pop
inc
or
lock
dec
or
xchg
movsb
pop
dec
jb
test
sub
adc
jnp
ljmp
pop
push
jae
inc
xlat
sbb
adc
sbb
dec
ja
mov
mov
xchg
cmp
sbb
jecxz
mov
mov
jp
xor
lea
mov
sub
out
pop
pop
hlt
mov
das
sub
xchg
mov
sbb
inc
mov
sub
mul
shl
pushf
enter
mov
xchg
loope
inc
add
ret
pop
arpl
or
sub
stc
mov
add
out
insb
xor
push
and
or
leave
mov
sub
out
push
inc
int
sub
mov
ljmp
pop
popa
sub
in
lods
fstps
xchg
adc
mov
fdivrs
mov
mov
out
adc
imul
pop
sbb
sbb
or
xor
out
cwtl
ds
dec
rcrb
clc
or
imul
shlb
push
aaa
sbb
jle
jecxz
ja
xchg
sbb
xchg
roll
stos
in
mov
leave
pop
hlt
jp
mov
jo
clc
xchg
inc
push
push
inc
mov
push
mov
test
call
or
cmp
inc
les
cmpl
loop
sbb
adc
pop
pop
repnz
movsb
shlb
jno
lahf
aas
or
adc
mov
bound
mov
xchg
mov
add
shll
add
iret
cmpl
aad
das
in
daa
pusha
cmp
mov
pop
stos
lea
enter
dec
xor
popf
popf
in
adc
cmp
xchg
in
ret
xchg
push
fdivs
lods
into
cltd
test
outsb
aad
cmp
push
add
cltd
add
fs
add
add
jmp
adc
mov
imul
dec
in
jecxz
mov
ja
xor
cmp
dec
push
call
jp
xchg
mov
ror
daa
sbb
movsb
xchg
cmp
jl
mov
mov
outsb
and
mov
cmpsb
mov
add
in
loop
lock
and
frstor
mov
adc
cmp
outsb
rcrb
gs
imul
lock
inc
aas
pop
xchg
jno
outsb
xor
daa
sar
cmp
pop
imul
mov
into
lahf
rorl
xor
jo
subb
xchg
and
test
push
in
jle
sbb
mov
pop
rcrl
sbb
push
or
pop
adc
imul
xchg
into
imul
and
pop
inc
cmp
je
sub
adc
stc
roll
loop
jnp
mov
lock
enter
adc
inc
xchg
hlt
jmp
inc
notb
ret
lock
in
je
cltd
jno
int3
clc
adc
sub
or
push
cltd
xchg
iret
adc
mov
mov
inc
sbb
lods
call
or
cwtl
jg
test
mov
aam
mov
lods
popf
cmpsb
lret
cmp
inc
jmp
fisubl
cmp
loop
add
mov
imul
mov
sahf
add
cmp
out
mov
or
pop
jge
out
add
sbb
fistpll
and
pop
mov
aam
scas
xor
mov
sarl
mov
mov
call
pop
sub
test
dec
scas
and
ja
inc
mov
stos
or
hlt
rcrb
sbb
rcr
and
push
inc
inc
cmp
pop
sbb
pop
lret
sahf
sbb
aaa
sub
outsl
cmpb
lret
mov
push
mov
gs
test
push
js
insl
push
sahf
loopne
push
fnstenv
xlat
ret
fmul
pushw
lret
inc
dec
out
loopne
ds
mov
xchg
mov
or
mov
inc
adc
mov
cwtd
stos
mov
fwait
push
push
div
cmp
popa
cmpsl
insl
std
lret
jns
jb
cmp
inc
and
push
sahf
stc
dec
repnz
push
std
sub
rcll
sub
in
add
sub
ljmp
mov
stos
adc
cmpsb
repz
fs
sub
mov
aad
push
rcr
movsl
pop
loop
xchg
stos
sub
inc
cmpsl
lods
sbb
pop
jno
adc
jns
add
xor
fisttpl
ja
mov
mov
jle
or
rorb
xor
pop
ret
sub
and
mov
cwtl
rep
fnstsw
xchg
xchg
ljmp
add
es
out
adc
mov
adc
ja
inc
cmpsl
test
add
roll
or
push
loopne
lahf
jmp
dec
insb
mov
loope
jae
push
lcall
cmp
test
xchg
cmpsl
les
add
cmpsb
cmc
ja
fidivrl
out
pop
dec
push
jp
mov
mov
int
sahf
push
pop
imul
inc
outsb
xor
clc
pop
das
cld
fdivrl
test
cmp
cmpsl
faddp
add
or
xchg
les
xor
push
lods
orl
std
movsb
pop
ds
cwtl
icebp
cltd
fwait
sti
call
jb
xchg
lods
xchg
lods
xor
jp
pop
add
adc
sbb
push
push
and
fildll
test
leave
push
shrb
pop
mov
mov
pop
fidivrl
mov
leave
mov
in
cwtl
jp
mov
dec
mov
mov
cmc
ret
push
scas
in
inc
outsl
mov
and
dec
mov
mov
mov
cmp
fdivrs
pop
mov
aaa
pusha
hlt
fcmove
or
ja
les
pop
movsb
xor
jo
cmp
popa
jns
pop
or
add
ror
fcomi
dec
ss
dec
mov
xor
sbb
ja
sbb
mov
push
sbb
fists
testb
xchg
outsb
or
test
jle
repz
or
cmp
imul
cltd
push
psrld
dec
out
pushf
repz
ss
xorb
pop
outsl
sahf
xor
jg
pop
xor
orb
movsl
jmp
dec
pop
stc
jnp
cwtl
fldcw
dec
jno
loopne
add
mov
sub
jle
ret
loopne
setno
shl
mov
mov
adc
stos
shl
add
push
push
sbb
adc
ss
mov
dec
xchg
jne
jl
mov
popa
je
adc
leave
sub
rcrb
cmpsl
mov
jp
pop
ret
add
and
push
test
pop
shlb
sbb
aas
inc
mov
sub
mov
ja
mov
inc
lahf
jp
jl
xchg
xor
push
insl
imul
sahf
fldcw
mov
or
dec
pop
repz
imull
outsb
lcall
mov
xchg
bound
mov
mov
aam
pop
xchg
int
nop
stos
addr16
fidivs
mov
or
insb
cmp
btc
mov
mov
aaa
pop
pop
inc
hlt
clc
sub
mov
test
icebp
loopne
ljmp
cmp
or
cmpsb
and
cmp
mov
shrl
pop
xor
pop
sub
jg
stos
push
xor
mov
mov
dec
sahf
jmp
mov
push
jb
push
xlat
subb
mov
hlt
sarb
xchg
out
mov
xlat
sub
pushf
jb
into
cmp
rcrb
jp
dec
aad
popa
xchg
sahf
adc
and
sti
sbb
fildll
mov
ds
lds
sub
decl
dec
mov
mov
jnp
add
and
mov
pop
stc
jo
pop
lahf
aas
shll
nop
mov
xchg
xlat
mov
out
mov
lcall
jne
cmp
popf
jae
add
push
mov
pop
mov
adc
cmc
out
testb
das
std
mov
clc
adc
xchg
push
xchg
das
mov
xor
mov
pop
fidivrs
mov
dec
adc
and
popf
int
movsb
in
push
mov
xor
out
push
js
mov
pop
push
dec
sub
jge
mov
imul
loope
push
push
lds
sbb
shrl
mov
das
iret
cmp
ds
ret
sbbl
fs
loopne
pop
cltd
and
loop
cmp
fildll
inc
mov
shlb
pop
rcrb
add
jmp
pop
mov
imul
int
dec
jg
cmp
push
fsts
mov
mov
enter
cmp
loopne
inc
out
pop
std
or
sar
call
xor
add
ss
mov
mov
pop
testb
mov
push
jno
pop
sub
jne
fidivl
stc
adc
scas
sbb
adc
scas
subb
ror
stos
adc
inc
inc
mov
mov
push
jp
gs
ljmp
push
inc
jg
add
fwait
push
jbe
push
outsb
inc
lods
mov
mov
mov
lcall
xor
fadd
xchg
movsl
mov
push
rcl
pop
push
lahf
push
push
jecxz
iret
fidivl
out
jmp
scas
add
jle
xor
addl
push
shlb
jge
xor
leave
push
sub
les
dec
jae
insl
outsb
adcb
inc
cmp
add
ss
ret
pushf
xchg
orb
mov
push
movsl
add
mov
sbb
pushf
sarl
jnp
mov
movsb
test
cmpsb
sub
mov
mov
dec
and
js
movsb
leave
push
popa
xchg
lds
dec
jmp
and
test
and
mov
lds
push
lods
push
pop
out
mov
jb
shlb
cmpl
and
push
out
aam
hlt
jo
daa
ljmp
inc
enter
pop
repnz
jae
scas
pop
cmp
repz
dec
lret
inc
push
roll
or
xor
aaa
mov
ja
or
js
ja
ljmp
mov
in
fnsave
cmp
test
cmp
add
xchg
daa
ds
fsubp
xchg
call
add
mov
addr16
hlt
dec
push
test
stos
out
cmp
in
xchg
repnz
dec
cmpsb
lea
jmp
sbb
stos
fbld
in
mov
repnz
insl
mov
jge
sahf
jmp
pop
push
cmp
add
add
lods
cld
jne
pop
or
pop
ret
cltd
lock
fidivrs
hlt
jp
inc
mov
int3
sbb
cmpsl
push
lock
sbb
fidivs
push
clc
ret
insb
rolb
incb
test
jae
jle
or
movsb
adc
xchg
aas
ret
fcompl
push
cmp
test
fnstcw
cmp
xchg
mov
test
daa
rorb
les
sub
int3
push
imul
adcb
or
or
in
jb
dec
out
shll
adc
push
pop
jnp
repnz
dec
fcomp
mov
insb
ds
jle
push
sbb
arpl
lcall
scas
std
adc
jg
pop
out
add
dec
leave
adc
cmp
push
std
cmp
jns
cmp
sub
and
sbb
scas
xor
ret
idivl
lock
xor
mov
inc
insl
mov
adc
jl
hlt
enter
repz
in
adc
fldl
xor
or
push
sbb
push
hlt
gs
roll
cmp
clc
imul
jp
cmp
inc
adc
xor
xlat
aam
subl
das
insl
or
sbb
cmp
push
jle
pop
sti
enter
mov
or
int3
lret
jge
lret
cmp
notb
xor
dec
loope
fnstenv
push
ss
inc
dec
and
das
xchg
mov
and
pop
or
pop
mov
adc
sti
mov
cwtl
out
cmpsl
aam
mov
lcall
fucom
bound
dec
repnz
sub
mov
xchg
mov
mov
mov
mov
mov
jmp
test
cli
push
pusha
dec
gs
mov
adc
sbb
pop
std
fst
push
clc
xlat
sbb
mov
sar
loope
js
int
setbe
xchg
popf
or
rcll
lock
cmpsl
dec
int
lods
cld
mov
pop
pop
dec
psubw
mov
repnz
xor
arpl
xchg
push
dec
es
sbb
cmp
inc
mov
pop
mov
and
or
sub
orl
add
movsl
dec
mov
xchg
add
xchg
call
sub
sbb
adcb
push
dec
xchg
adc
imul
sub
icebp
xor
jbe
mov
outsb
inc
mov
sub
mov
test
or
xor
mov
or
xlat
stos
cmc
or
fisubs
mov
aad
mov
aad
mov
mov
das
dec
push
and
stos
mov
cmpl
mov
cli
dec
push
jp,pt
inc
lahf
mov
mov
xlat
xchg
and
and
mulb
pushf
and
adc
or
out
rolb
insl
mov
sahf
adc
loope
movsb
jmp
test
ds
in
idiv
dec
xchg
lret
pop
xlat
cs
imul
jo
fldcw
lea
ret
jnp
adc
adc
lods
pop
scas
ret
pop
or
pusha
xchg
lock
ret
inc
insl
inc
bnd
fstps
lret
mov
mov
xlat
mov
loope
int3
addb
inc
pop
bt
xchg
fs
pusha
mov
xchg
xor
popa
pop
insb
stc
ja
mov
orb
in
mov
lods
sbb
stc
add
inc
and
adc
mov
arpl
mov
pop
add
sbb
idivl
cwtl
mov
sahf
in
into
add
leave
out
ret
fnsave
xchg
pop
pushf
lret
jno
lock
sbb
movsb
call
fisubs
pop
pusha
insb
mov
cmp
xchg
push
and
and
lahf
repnz
flds
push
mov
pop
xchg
scas
lds
jnp
mov
adc
sub
mov
leave
jmp
pop
or
sub
and
push
cmc
lods
aaa
jecxz
adc
dec
in
roll
dec
dec
and
lret
out
add
clc
jp
xlat
pop
data16
mov
stos
xchg
jne
repz
rcrb
inc
cs
cs
push
outsl
loope
rolb
push
cmp
add
outsb
jp
cli
push
and
sbb
aad
imul
int3
pop
and
or
dec
sti
arpl
push
push
int
and
push
mov
or
dec
roll
add
sbb
or
popf
movsl
dec
scas
dec
iret
push
das
add
push
pop
mov
adc
jl
jp
ficoml
cmpsb
leave
and
fcomps
mov
inc
inc
test
and
movsl
ficomps
inc
and
sub
inc
xlat
push
and
mov
mov
jno
push
aad
outsb
xor
xchg
pusha
notl
ficomps
rcrb
and
movsb
int3
sub
mov
hlt
pop
and
divl
adc
cmc
push
xchg
inc
mov
cmp
pusha
outsl
jge
dec
mov
xchg
push
cmp
mov
jl
sub
frstor
adc
dec
inc
aam
faddp
outsb
ljmp
add
mov
adc
xor
jne
or
fmuls
fildl
inc
cmp
cmp
sbb
mov
dec
xchg
push
cmp
ficomps
cmp
frstor
rcrl
sbb
out
sahf
stc
jge
insl
dec
sub
push
add
lods
lea
sahf
addr16
pop
outsl
std
add
mov
sbb
pop
roll
loopne
sbb
push
sub
pushf
je
push
lea
dec
pop
rolb
out
add
jns
cmc
out
xor
dec
les
out
ret
lods
or
andl
push
or
mov
add
ds
lcall
aad
mov
rorl
or
lcall
lea
dec
aaa
push
in
dec
icebp
sbb
inc
adc
mov
in
fsubp
pop
jle
add
sub
sti
mov
jl
dec
fnstcw
mov
add
iret
adc
and
cmpsl
mov
shlb
addr16
pop
daa
movsl
push
notb
and
mov
push
xadd
xor
cmp
cmp
cmp
dec
or
test
sbb
push
cld
test
out
sarb
sarl
and
sbb
loope
and
addr16
jge
mov
lret
stc
adc
jns
push
or
xor
loope
xor
mov
out
inc
dec
bound
add
mov
movsl
mov
ljmp
dec
push
es
dec
inc
pop
jle
scas
aam
ss
cmp
fsts
mov
xor
je
pop
pop
fidivl
clc
pusha
bound
shlb
jo
test
ljmp
add
or
stos
ljmp
cmp
out
int
sbb
testb
adc
ret
repz
movsb
bound
mov
and
int3
push
or
inc
mov
nop
jns
in
in
sahf
rcr
jp
daa
push
fisttpl
fidivrs
ss
cmc
sub
std
iret
bound
imul
lret
sub
fs
cld
mov
ror
jecxz
test
and
shlb
stos
shlb
stc
xchg
popa
push
jne
mov
movsl
mov
int
push
fsubr
test
pop
out
dec
and
pop
sbb
pop
sbbl
pop
inc
xor
cmp
adc
loop
or
iret
adc
bound
rcrb
fmul
dec
pop
das
cmp
inc
pusha
outsb
inc
mov
pop
in
popf
std
rclb
and
push
shr
in
dec
in
cmp
and
ds
and
mov
stos
pop
sbb
or
mov
mov
mov
mov
pop
je
pop
data16
test
xchg
shlb
insb
xchg
lret
lret
adc
out
jge
push
es
sar
inc
cmc
cmp
int
and
lahf
add
mov
jnp
push
jle
lock
or
cmp
push
pop
mov
repz
rcr
sbb
fcmovnu
jnp
adc
aas
xchg
cmp
and
rcrb
fs
mov
inc
insl
add
jne
pop
cltd
ret
icebp
add
push
and
adc
push
and
repz
in
shl
fcmovnu
inc
and
mov
push
mov
cs
in
cmp
adc
jmp
dec
sub
out
ljmp
fbld
dec
mov
test
ds
nop
xor
xor
out
mov
test
jle
fwait
lock
pop
sbb
jbe
data16
outsb
fiadds
jl
dec
sub
in
inc
or
mov
aaa
movsl
push
sub
mov
dec
add
or
push
push
test
pop
mov
es
xchg
mov
call
sbb
icebp
mov
or
fcomps
lret
mov
rcrb
sbb
in
popa
xor
sub
insb
sub
adc
jp
scas
add
mov
enter
and
aaa
pop
xchg
int3
lock
addl
jo
es
add
sub
mov
and
out
jecxz
nop
inc
and
xchg
aam
push
loope
cmp
xor
cs
lods
lret
sti
inc
fsubl
or
sub
fs
or
mov
xor
jno
sbb
jb
in
add
push
xchg
repnz
out
scas
outsl
cli
cmpsb
and
das
test
testb
jl
mov
out
sub
mov
or
xchg
fisttpl
push
sbb
push
repnz
add
xchg
mov
movsl
cmp
xchg
arpl
inc
pop
stos
jb
ret
fidivl
outsb
mov
ss
jmp
fistps
push
hlt
jno
stos
jg
sbb
sbb
test
or
and
xor
clc
rcll
sarl
push
lods
mov
fwait
pusha
adc
mov
cmp
jbe
cwtl
test
sbb
adc
xchg
out
push
xchg
or
loop
cld
notl
push
xlat
std
dec
jae
rol
imul
leave
adc
repnz
imul
cmp
dec
test
xchg
mov
push
xlat
ud1
fists
jo
jne
mov
cli
cmp
leave
popa
mov
daa
aaa
mov
lods
das
add
idivb
sub
cld
xor
push
pop
push
add
mov
nop
stos
and
cmpsb
xlat
out
scas
stos
nop
repnz
jnp
ret
add
jp
push
jno
hlt
xchg
push
and
aas
shrb
adc
pop
jge
pushf
mov
cmpsb
pop
mov
push
enter
dec
xor
pushf
xchg
push
fisubl
imul
aas
jnp
cmpsl
and
loopne
out
jne
dec
repz
mov
addr16
jae
loopne
insb
cmp
in
pop
adc
mov
xchg
sbb
ret
mov
jg
push
mov
xor
or
sbb
insl
mov
push
pushf
jbe
aaa
sahf
fbld
push
jnp
rorl
in
push
and
je
repnz
fwait
sbb
jns
and
mov
ret
mov
outsl
nop
loopne
aas
mov
pop
int3
xor
cld
outsl
push
aad
fs
movsb
hlt
test
jge
js
pop
jbe
mov
sub
xchg
adc
jne
in
mov
out
addr16
jecxz
sti
xor
cwtl
add
pop
jb
movsb
jmp
pop
in
pushf
cmp
sub
movsb
pop
mov
hlt
sbb
or
mul
pop
xchg
leave
inc
push
call
xorb
and
cmp
jecxz
ja
mov
push
cmc
aas
cmp
loope
cmp
xor
jp
lret
std
movsb
sbb
cld
fcomp
jmp
xchg
in
cltd
aad
xor
in
leave
or
xchg
fsubrl
xlat
cli
jle
sbb
rcl
fadds
and
movsl
mov
jne
sub
push
testl
sub
jo
xchg
stos
jl
call
scas
mov
icebp
pop
fdivs
insb
mov
sti
or
or
mov
repz
int3
outsl
push
std
clc
roll
sub
cmpsb
add
pop
shrl
dec
jecxz
and
clc
xchg
fstps
fs
mov
mov
out
outsb
mov
pop
inc
sub
out
decl
cld
mov
cmpsb
mov
int3
int3
outsl
push
cs
mov
or
in
xor
jo
dec
adc
jne
mov
sub
out
inc
inc
pop
push
leave
fmuls
outsb
jecxz
sub
out
mov
cmp
repz
imul
xor
call
push
loope
xor
sbb
cmp
not
lret
add
pusha
push
xor
and
add
xor
stos
shlb
pop
in
jl
fidivrs
insb
cmp
inc
lret
mov
and
mov
xchg
pop
cwtl
jl
cmc
cmpsb
stos
lds
lods
sub
xchg
lock
stos
test
sbb
idivl
jbe
push
jle
mov
mov
pop
in
cli
shl
jl
ss
roll
fnstsw
pop
xor
xchg
sub
sbb
in
lahf
fidivrl
mov
lods
lret
insb
pushf
cmpsl
imul
call
cmp
mov
add
cs
xchg
fcoms
cs
sbb
addr16
iret
les
jmp
leave
inc
jo
mov
adc
dec
idivb
aad
jae
xchg
lock
ret
sub
xchg
jl
or
sub
jl
mov
in
mulb
arpl
jne
mov
stos
add
stos
je
ret
cmp
pop
cmp
mov
dec
and
ja
xchg
mov
pop
mov
flds
stos
arpl
xchg
stos
mov
and
pop
or
aam
imul
and
dec
and
jne
jnp
jnp
outsb
adc
push
mov
test
add
fidivrl
adc
push
cmpsl
aad
dec
dec
jmp
cmp
and
dec
push
iret
int
testb
mov
sbb
daa
mov
xchg
and
xor
mov
sahf
lret
in
insl
scas
pop
repz
movsl
sub
add
les
ljmp
pop
addr16
jnp
lahf
inc
mov
jbe
pop
jp
jp
push
mov
fildll
rcrl
cmpsl
pavgb
jge
pusha
hlt
push
push
dec
pop
les
push
roll
push
jg
ljmp
rcrl
pop
adc
adc
movsb
cmpsl
dec
xchg
test
push
xchg
mov
xchg
pusha
mov
cmpb
jae
jb
pop
imul
inc
xchg
and
in
dec
aaa
mov
adc
xchg
imul
jecxz
sub
pop
cmpl
cmp
gs
imul
push
in
mov
xchg
jmp
sbb
mov
daa
aad
pop
sub
dec
fstpt
xor
xor
push
leave
xchg
dec
das
mov
jg
imul
jecxz
pop
lret
push
int3
mov
dec
subl
push
push
rorb
dec
fwait
pop
subl
mov
mov
out
mov
sub
push
pop
sahf
xor
fs
dec
jns
loop
pop
ror
and
pop
add
test
adc
subb
inc
popf
mov
xchg
xor
sub
je
push
push
mov
test
or
out
push
faddl
mov
cmp
imul
movsl
jae
adc
cmc
push
lcall
xor
shll
sbb
add
fcoml
sub
aam
insl
in
lds
shlb
iret
aad
test
mov
xchg
hlt
aad
mov
in
sbb
scas
jmp
icebp
cs
popa
adc
add
lds
pusha
jno
push
pop
pop
xor
xor
cmpl
adc
mov
jnp
adc
cmp
or
mov
sub
xorl
pusha
clc
clc
lods
enter
lret
cmpsl
ss
mov
fnstenv
sbb
pop
dec
push
lods
push
addr16
jbe
lods
icebp
subb
and
dec
insl
insb
push
xlat
or
mov
dec
mov
int
xlat
jge
pop
mov
xor
data16
push
pop
movsl
ret
arpl
inc
push
clc
xchg
shr
xlat
aad
add
inc
shll
flds
aas
jnp
add
movsb
cs
and
push
cs
cmp
mov
xchg
jmp
add
xor
stc
pop
mov
andb
into
iret
xorb
adc
and
adc
fbld
jo
shlb
sub
sbb
mov
mov
xor
imul
je
push
add
outsl
sahf
and
jl
push
repnz
loope
adc
push
test
mov
test
pmuludq
cmp
jg
stos
pop
xchg
fwait
ds
and
xor
test
hlt
out
cmp
mov
xchg
pshufw
cmp
scas
push
adc
nop
int3
bound
pusha
rcl
dec
or
adc
mov
xlat
push
rol
adc
stc
add
fs
mov
popa
testl
cmp
cmp
stc
xchg
sbb
lret
or
and
lds
stc
fbld
adc
xchg
xchg
daa
inc
scas
aam
pop
push
inc
test
pushf
push
in
adc
lahf
rorl
or
mov
fsubl
orl
ss
pushf
lods
push
cmc
pop
adc
rorl
cmp
shll
jo
xor
es
lcall
js
jae
cmc
xor
jecxz
cmp
aas
cs
jge
mov
xchg
sbb
add
mov
push
or
xchg
dec
dec
jb
aaa
loope
mov
or
push
dec
rorb
cmpb
sbb
inc
jmp
mov
xlat
pop
inc
jno
sub
out
mov
sbb
xor
jecxz
outsb
pop
lods
icebp
xor
outsl
dec
and
ds
movsl
fs
or
fs
lods
fldlg2
cwtl
pop
test
inc
xor
cltd
cs
pop
sbb
push
int
rclb
stos
mov
mov
sub
dec
and
cmp
incl
icebp
pushf
jno
enter
int
test
mov
cmpsl
jns
adc
into
leave
imul
mul
out
pop
pop
les
insb
pop
popf
rol
cmp
lods
add
jnp
sub
std
push
test
cmc
xchg
data16
xor
sub
cmp
xor
add
scas
fmuls
or
cmp
xchg
inc
notrack
dec
push
add
or
ret
sbb
push
pop
inc
int3
inc
in
and
cwtl
addr16
lods
inc
aas
jle
sbb
adc
cmp
mov
xchg
push
flds
sbb
push
jo
fisubs
sub
mov
faddp
inc
pop
xchg
add
sbb
test
mov
ss
sbb
loope
cld
push
xor
js
jmp
popa
push
popf
out
mov
inc
and
mov
cli
push
lret
xor
xor
mov
and
mov
cli
ds
sub
nop
mov
rcrb
aaa
cmc
and
fistpll
sub
push
jb
pop
jg
xor
push
or
int
inc
jmp
and
call
dec
inc
sar
xor
pop
dec
mov
mov
adc
dec
rcrb
out
xchg
sbb
add
insl
jo,pt
mov
cmpsl
adc
push
dec
sarb
push
jmp
das
icebp
add
test
adc
cmp
inc
push
in
push
inc
cmc
iret
jno
sbb
lods
mov
out
ffree
jge
cltd
or
mov
pop
pop
stos
inc
jns
mov
outsl
leave
jnp
mov
mov
sbb
xor
mov
mov
dec
test
paddusw
add
fisubl
imul
sub
mov
fcompl
mov
xchg
popf
or
mov
repz
sub
xlat
out
mov
dec
scas
push
push
ret
push
pushf
outsl
dec
or
test
repnz
rol
cwtl
jp
and
je
adc
fs
mov
sbb
cwtl
lds
call
or
test
sar
jl
fs
mov
fdivp
push
and
push
mov
xor
fadds
scas
xor
pop
stc
or
movsb
lock
pushf
test
lds
enter
sbb
insb
pop
testl
sbb
shlb
lcall
std
adc
push
add
dec
test
popa
scas
push
ja
mov
mov
out
data16
out
ljmp
cwtl
dec
ja
pop
aam
js
adc
mov
fwait
pusha
fstps
pop
sbb
mov
xchg
push
mov
push
pop
dec
mov
push
xor
push
stos
dec
and
jp
and
outsl
addl
aad
mov
stos
aad
pusha
idivl
adc
stos
aaa
add
push
fstpt
jp
xor
nop
lcall
pop
cmp
fcomp
popa
call
hlt
jle
test
mov
push
out
and
outsl
shl
and
push
daa
out
xor
sub
mov
push
test
push
push
cwtl
push
mov
int
xchg
push
ljmp
testb
fs
xor
mov
mov
mov
jecxz
fimuls
sub
mov
mov
shlb
jg,pt
cmp
jp
mov
cwtl
adc
jmp
mov
cmp
aaa
mov
sbbb
xor
push
add
fadds
xor
test
repnz
jle
or
inc
pushf
enter
pop
mulb
and
add
ja
jae
mov
jmp
push
adc
int
inc
loopnew
and
lret
and
push
xor
cmp
loopne
daa
nop
ret
adc
sar
adc
inc
fwait
adc
cltd
push
ds
push
push
rcr
outsl
arpl
insb
push
in
cld
fcoml
mov
mov
fldenv
das
enter
iret
jmp
or
mov
ret
xchg
out
mov
mov
xchg
or
mov
ja
and
sarb
push
jge
adcl
loopne
mov
rol
mov
popa
push
sub
pop
lret
push
ss
aam
jbe
fmul
jno
fmull
push
sahf
dec
xchg
xchg
gs
sub
arpl
xor
add
mov
sbb
jb
hlt
cwtl
clc
std
xor
inc
cmp
dec
xchg
daa
sbb
add
dec
mov
in
add
xchg
add
mov
inc
or
repz
pop
or
xlat
push
inc
fwait
out
xchg
pop
fwait
lcall
adc
test
push
es
push
in
stos
lret
xor
ja
add
stos
popa
dec
xchg
cld
add
xor
pusha
in
idivb
into
jno
mov
rol
xlat
xchg
mov
scas
cli
imul
mov
sub
iret
fsubr
ret
xor
xchg
xchg
int3
mov
sbb
and
xchg
push
cmp
insl
jp
out
mov
stos
lret
mov
jbe
xchg
and
inc
imul
push
sbb
call
mov
ficompl
push
das
lret
jbe
xor
xor
sbb
test
int3
popa
jle
out
add
jo
in
fs
xor
mov
cltd
cmpsb
mov
cmp
stos
sahf
cmp
add
sub
sub
inc
mov
xlat
add
xchg
dec
loope
fists
mov
lds
mov
je
push
jg
test
jecxz
cmp
mov
pop
mov
pop
aad
jns
aam
in
add
inc
inc
dec
xchg
cld
cmc
lret
stos
dec
pushf
je
lea
ficompl
test
push
je
roll
iret
inc
roll
mov
fisttps
sub
cwtl
stc
jmp
mov
push
cmp
add
sti
sbbl
cmp
inc
xchg
mov
or
in
mov
lret
nop
cld
dec
push
add
js
bound
sub
lock
mov
mov
adc
aaa
cmp
push
lret
mov
cmpl
imull
mov
sbb
lret
nop
add
addr16
lahf
jo
dec
inc
add
jno
cli
inc
icebp
mov
jae
lods
inc
adc
sub
insb
sahf
pop
in
popa
mov
or
je
or
xchg
jge
xlat
sbb
in
dec
stos
xor
negl
inc
loop
sti
lahf
fldenv
mov
sbb
rorl
jle
xor
les
or
loope
das
and
mov
add
jo
xchg
aaa
insl
jb
gs
aas
testl
cwtl
dec
mov
mov
mov
stos
in
add
sub
daa
icebp
lret
inc
and
mov
nop
pop
popf
movsl
sbb
pop
out
pop
pop
push
mov
pop
adc
movsb
push
js
mov
test
out
jp
mov
cmp
pop
dec
fisubs
sahf
jae
loop
mov
in
hlt
popa
gs
push
mov
ss
jno
push
adc
inc
int3
sub
adc
sub
mov
imul
adc
sbb
and
and
mov
inc
inc
xor
or
stos
inc
out
cmpb
pop
flds
nop
mov
out
mov
shr
jne
fwait
divb
cmp
jns
jb
pop
jge
stos
jo
lods
push
xchg
xlat
dec
sbb
call
mov
cmp
push
dec
jl
out
pusha
cmp
sbb
int
push
mov
pop
stc
pop
jo
lahf
mov
ficomps
popa
popf
push
movsl
aam
cmp
sub
dec
dec
sbb
dec
mov
sub
icebp
daa
xor
cmp
xchg
sub
sub
xor
js
in
jl
mov
jo
and
pop
mov
pop
add
not
mov
lock
mov
ds
divl
inc
dec
pop
jns
repz
cli
sbb
sbb
lea
xor
ja
shlb
in
fisttpl
xor
mov
mov
inc
push
add
and
cmp
pop
inc
xlat
aas
subl
or
cmc
xchg
fiadds
and
das
pop
test
push
pop
subb
mov
pop
outsb
movsb
cmp
jbe
jge
or
stos
in
into
xchg
or
hlt
dec
nop
xchg
pop
roll
out
adcb
push
cltd
dec
in
jl
mov
mov
mov
pop
and
loope
pop
pop
cmp
call
testl
mov
int3
pop
jmp
xorl
mov
jge
test
shrl
int
ljmp
push
inc
jae
sbb
sub
test
movsb
dec
pop
sbb
mov
imul
mov
repnz
sbb
jge
jb
outsb
or
lods
mov
push
or
dec
cmpsb
push
mov
mov
das
sub
fnstenv
imul
cmpsb
mov
jmp
ficomps
jns
iret
test
loopne
sub
mov
in
stc
imul
jp
insb
cmc
repnz
dec
cmp
in
cli
stos
and
adc
ret
fwait
insl
add
popa
fldcw
into
pop
icebp
lods
pop
mov
cmpb
pop
or
sbb
ss
or
jae
in
gs
loope
and
pop
call
hlt
dec
in
push
push
cvtdq2ps
lahf
imul
xor
int
add
lods
movb
lret
mov
addr16
cmp
fdivrs
pop
lock
dec
sub
push
in
lds
sbb
cli
or
fsubl
inc
cmp
ret
testb
pusha
call
jle
adc
stc
mov
mov
xchg
cmp
scas
xor
cltd
scas
xchg
lea
lcall
rol
lcall
add
shl
imul
fdiv
inc
mov
inc
movsl
scas
mov
and
and
pushf
test
enter
mov
add
mov
pop
loopne
push
sahf
fdivs
aas
xchg
add
xchg
iret
dec
pop
dec
inc
adc
in
or
shrb
rorb
hlt
sub
dec
testl
loope
imul
hlt
stos
jge
rcrl
sub
dec
rorb
leave
inc
movsb
pop
push
mov
aam
in
std
stos
ds
les
xchg
jno
testl
or
or
sbb
mov
ret
xor
xchg
sbb
add
aas
push
adcb
popf
fisttpl
add
addl
push
stc
divb
and
pusha
orl
sub
jns
and
adc
xorl
mov
push
push
je
cmp
xchg
fs
xor
mov
leave
popf
test
inc
mov
jecxz
scas
std
scas
fmuls
je
xchg
adc
je
sbb
mov
sbb
xor
xlat
lcall
xor
xchg
mov
sub
xchg
jg
rcrl
xchg
sbb
int
push
jmp
mov
incb
addb
xchg
outsl
aaa
cmp
pop
sub
xlat
sahf
sahf
mov
jmp
sahf
mov
mov
xchg
mov
push
xor
mov
sub
inc
shll
fidivl
mov
nop
lods
jp
mov
mov
ficomps
aaa
push
cld
sbb
add
push
fwait
mov
adc
dec
shll
outsb
outsb
sbb
sub
mov
jbe
xor
mov
pushf
cmpb
adc
or
inc
dec
scas
outsl
loopne
pop
cmp
fsubl
and
inc
xchg
or
fsubrp
sti
lods
mov
pop
xchg
lea
dec
pop
insl
or
mov
clc
fldcw
xchg
dec
cli
or
rcll
ror
push
mov
outsl
sbb
sbb
pop
clc
mov
fnstcw
loope
inc
ror
outsb
sbb
dec
sbb
pop
lret
aaa
push
jg,pt
or
xlat
aam
xchg
sbb
dec
ja
add
pop
xor
iret
inc
jo
clc
pusha
mov
cmp
in
cs
mov
adc
bound
inc
imul
mov
mov
loop
mov
imul
sbbl
div
out
push
xor
fs
imul
sub
jl
inc
xor
lret
cmp
es
jp
xor
notl
xor
xchg
out
sbb
stos
pop
push
push
in
lea
ret
movsb
sahf
jns
aad
push
xchg
ljmp
inc
push
jmp
cmpsl
mov
push
mov
mov
add
dec
pop
inc
push
inc
fnstenv
roll
sbb
pop
xor
mov
jl
pop
test
push
enter
mov
pop
popf
cmp
lods
add
cmp
mov
jmp
addl
das
lods
lret
add
fadds
mov
dec
sub
jmp
mov
in
mov
nop
ljmp
std
in
xor
cld
mov
and
xor
push
shll
cmp
mov
xor
or
mov
jns
xchg
into
dec
fsubrl
insl
mov
sbb
repnz
in
xchg
add
je,pn
mov
loope
xchg
fstpl
push
in
mov
adc
or
push
movsl
cmp
nop
add
cltd
testb
or
jmp
jne
je
mov
add
rcrl
adc
aas
push
dec
mov
xor
mov
out
insl
addl
ds
xchg
shlb
pop
cmp
mov
loopne
inc
mov
sbb
adc
inc
sbb
mov
add
jne
dec
cmp
shlb
sahf
mov
xor
xchg
xor
mov
jae
fyl2xp1
lahf
sub
in
or
popa
pop
lock
cmp
add
js
ret
xchg
out
jae
xchg
and
fucomip
lahf
rol
xchg
loope
or
xchg
std
flds
ja,pn
mov
and
push
shlb
mov
fnstcw
fwait
std
movsb
mov
adc
cmp
mov
or
push
sbb
mov
mov
sti
jbe
mov
jge
mov
insb
mov
dec
sti
shr
popf
jo
inc
xchg
or
pop
xlat
adc
jne
mov
lahf
push
jmp
js
sbb
or
cmp
pusha
xchg
bound
es
or
fs
popa
cwtl
sub
inc
insb
and
shr
mov
xchg
icebp
push
push
inc
push
pushf
std
outsb
sbbb
mov
pop
and
shl
insb
jno
xchg
dec
popa
adc
fwait
dec
es
lea
insl
daa
mov
shlb
or
test
leave
jg
lret
mov
vmwrite
xchg
bound
faddl
jns
jle
jne
xchg
adc
or
roll
lock
xchg
popf
inc
std
cwtl
mov
imul
stos
mov
in
mov
mov
daa
mov
xor
push
movsb
push
lock
in
adc
je
out
movsb
mov
push
imulb
or
xor
outsl
addr16
mov
mov
fimuls
dec
sub
and
mov
sub
cmp
fadd
jmp
fists
scas
sbb
movl
aaa
leave
addb
aam
mov
sub
cmp
xor
scas
fmull
mov
lcall
pop
mov
cmpsb
hlt
popa
fidivrs
ds
pop
fcompl
insb
ja
mov
cli
clc
jmp
cmp
dec
jnp
lock
lods
or
add
call
pop
out
fmuls
or
push
push
je
mov
push
out
insl
jmp
or
lret
scas
inc
inc
mov
cmp
mov
fsubr
sub
mov
lcall
insl
mov
xor
ds
xor
mov
aas
xlat
mov
js
cmp
adc
rcl
bound
cs
mov
mov
movsl
lret
in
ss
push
inc
mov
xchg
adcb
mov
cltd
pop
ja,pn
sbb
fidivl
pop
or
rcrl
push
cmp
push
lea
lods
push
fs
pop
jns
and
xchg
jge
mov
imul
scas
mov
cmp
xchg
cmp
mov
or
mov
pusha
arpl
ret
mov
rclb
enter
sarb
sbb
ret
ret
push
and
sbb
add
lods
in
fsubr
push
loopne
dec
add
add
xchg
roll
jmp
enter
icebp
out
enter
jbe
aaa
fimuls
fldcw
repz
pop
dec
cmpsl
out
push
pop
sti
loopne
dec
int
push
popf
add
jnp
ret
test
test
test
inc
incb
sub
push
add
or
jb
ret
and
pop
cmp
sbb
stos
sub
lea
mov
push
mov
xchg
in
hlt
pop
and
sub
rcrb
loopne
leave
sarb
jge
hlt
stc
scas
dec
sub
mov
mov
mov
mov
mov
shll
test
jmp
repz
push
sti
sbb
xchg
add
bound
loopne
pop
xor
mov
jge
lods
stos
pop
imul
xchg
sarb
aam
xorb
push
push
xor
dec
push
pushf
add
cmp
movsl
fldt
inc
jnp
stc
xor
sbb
mov
push
sbb
insb
nop
out
dec
filds
push
mov
sub
das
pop
sub
push
or
std
mov
jmp
ja
mov
stos
jecxz
jmp
cs
outsl
cmp
addr16
aaa
or
out
cld
iret
call
mov
mov
mov
cmp
jae
dec
mov
pop
pop
xor
mov
test
rclb
scas
bound
bound
ss
mov
jns
ljmp
call
ret
add
fiadds
loop
addr16
jmp
mov
xor
pop
inc
lret
jmp
inc
and
sti
inc
es
and
test
loopne
ja
xchg
pushl
xchg
adc
call
push
das
bound
sahf
inc
ja
sub
xchg
in
and
lods
mov
adcl
xchg
mov
jge
mov
stc
outsl
mov
jbe
jne
outsl
pop
push
loope
xchg
and
cmpb
jo
lea
adc
mov
cmpsb
jo
mov
sub
pop
insl
mov
mov
ret
lea
in
mov
push
lahf
shl
lahf
flds
cld
lret
es
add
sub
sbb
sub
std
aas
mov
cmc
fildl
mov
pop
aam
inc
xchg
cmpb
jg
dec
pusha
test
mov
enter
cmc
sub
add
and
mov
adc
lcallw
lds
seto
mov
jmp
mov
sbb
popa
cmp
lret
call
daa
and
aaa
inc
and
fistpll
int3
or
fcoms
test
repz
shl
jecxz
ja
jns
or
sub
mov
das
leave
cmp
mov
mov
xor
dec
inc
leave
mull
shlb
test
mov
fucomi
xchg
ds
jae
jo
divl
adc
cmp
movsl
adc
sahf
and
push
sti
addr16
add
data16
test
jnp
xchg
jns
xchg
jns
cld
push
jo
loope
push
sbb
roll
xchg
push
repz
dec
loope
fsubrs
add
or
xchg
stc
movsb
hlt
adc
rorb
in
sbb
xchg
and
ss
imul
sarb
jecxz
sahf
movsb
pop
repz
rorb
jge
mov
adc
cld
xor
fmuls
pusha
insl
call
nop
or
call
popa
mov
imul
xchg
stos
shl
xchg
sbbl
ja
jg
pop
mov
inc
adc
mov
jbe
mov
adc
add
push
fs
xor
sbb
inc
pop
lahf
xor
jle
inc
outsl
cmp
or
add
adc
or
mov
cmp
sbb
je
inc
mov
jecxz
add
int
rol
stos
jb
adc
adc
into
or
xchg
mov
and
hlt
sahf
sbb
mov
inc
scas
mov
jo
xor
xor
sbb
enter
pop
xor
push
push
in
int
movsb
pop
jmp
cld
sub
push
xlat
jge
jnp
mov
adcb
jnp
mov
aad
mov
out
cmp
sub
pusha
dec
orb
rcl
or
jmp
int3
push
cmc
fdivp
aad
ret
xor
pop
hlt
andb
dec
outsl
scas
mov
add
sub
pushf
movsb
js
scas
pop
sbb
outsb
lds
push
lock
f2xm1
jbe
int3
sbb
mov
sub
dec
out
sub
fiadds
mov
jecxz
cmp
fwait
jnp
std
dec
jbe
or
mov
shrl
push
jno
fdivrl
mov
inc
icebp
ljmp
sbb
push
pop
inc
xor
int
sti
jle
into
dec
jge
jns
lods
jg
das
add
pop
mov
movsl
pusha
dec
push
and
jno
jnp
mov
ret
ret
sub
jp
mov
mov
sub
push
testb
mov
push
or
inc
inc
leave
std
sbb
cmp
dec
mov
in
jae
cmp
xchg
or
push
mov
notl
dec
fnstenv
in
pop
pop
pmullw
inc
stc
lds
clc
jg
cmp
jge
rol
rcll
adc
sahf
dec
cmp
adc
mov
jle
insb
adc
out
popf
lds
rclb
clc
xchg
loopne
push
je
test
pop
dec
popa
leave
in
into
jge
add
pop
adc
int3
in
in
jnp
push
cld
xchg
aad
imulb
push
dec
dec
iret
into
jno
cmpsb
fs
adc
pop
cld
adc
test
subl
push
or
es
decb
cld
push
mov
call
fsubrl
and
cmp
jle
cld
pop
dec
setl
mov
pop
adc
mov
pop
arpl
cwtl
sub
and
sahf
mov
mov
insl
adc
add
jl
sbb
sbb
sahf
push
cmp
adc
sbb
xchg
add
ror
icebp
test
lahf
sub
clc
mov
pusha
push
inc
ret
jecxz
pop
xchg
rol
xor
mov
push
in
push
lods
jbe
arpl
sahf
repnz
cltd
movsl
lret
rolb
pop
nop
sub
fldt
jp
sbb
lretw
jmp
int3
push
nop
push
push
test
ret
ret
push
inc
push
jno
fsincos
cld
jbe
ja
fdivs
mov
add
cmp
aad
sti
add
lods
add
dec
scas
ret
jle
push
lea
jp
push
push
jecxz
dec
out
xor
dec
push
xchg
sti
add
cs
testb
fdiv
test
sbb
outsl
pop
jbe
cmp
in
dec
xchg
movsb
out
pop
popa
jns
cmp
fnstsw
out
inc
xchg
jecxz
jnp
push
mov
dec
mov
pop
fwait
mov
movsb
jae
popf
sbb
xlat
mov
mov
mov
ja
lock
lods
rclb
shlb
jmp
mov
stc
repnz
nop
jle
mov
sarl
jecxz
gs
jo
jo
mov
insl
xor
es
dec
xchg
mov
shll
mov
daa
xorb
stos
je
push
mov
aas
mov
mov
arpl
imul
mov
or
iret
pop
adc
push
jle
lret
sbb
xchg
jge
aaa
adc
push
shr
add
mov
jmp
xchg
fs
adc
scas
pop
mov
divb
add
ret
movsb
xchg
mul
push
jle
ja
inc
sub
clc
xchg
mov
fwait
mov
sti
arpl
rorl
jle
sbb
cmp
or
cmp
jge
fwait
push
imul
daa
inc
pusha
inc
mov
mov
dec
cmp
data16
xchg
or
fs
push
int3
add
and
mov
mov
leave
iret
fstp
fwait
ljmp
inc
icebp
and
mov
xor
dec
addr16
or
insb
in
cmpsl
cmpsl
mov
scas
and
cmc
jne
pop
inc
xor
into
pop
push
mov
int3
pop
jmp
push
xchg
dec
mov
push
xchg
aas
inc
pop
cmp
sbb
out
xor
add
cmpsl
cwtl
cmp
add
loopne
int3
fdivrp
mov
lods
int3
fs
adc
sub
je
xorb
cmc
sbb
inc
jae
sub
sub
xor
movsl
xor
or
mov
movsb
roll
push
jb
adc
sub
mov
and
loop
mov
xor
and
int
mov
jp
in
jmp
dec
add
dec
mov
lock
stos
test
imul
cmpsb
adc
mov
xor
push
cmc
push
shl
divb
mov
and
jg
andl
add
js
xchg
orb
xchg
jl
jae
push
pop
lahf
sbb
stc
mov
rorl
cmp
add
cmp
leave
decb
or
orb
xchg
xor
dec
dec
xchg
movsb
aas
outsb
adc
push
stos
movsb
push
cmp
xor
push
inc
adc
lods
xchg
xchg
insb
inc
mov
push
pop
push
in
pop
push
sbb
sbb
inc
sub
push
test
mov
jns
xor
in
stos
call
and
inc
iret
imul
iret
adc
sbb
adc
mov
pushf
push
fbld
inc
clc
arpl
or
pop
jg
sub
pop
dec
jecxz
hlt
repz
es
inc
xchg
das
jp
xor
jecxz
push
cmpsl
push
fcoms
outsb
jnp
dec
cmp
dec
jmp
mov
fadds
push
jo
jbe
scas
js
into
lds
hlt
pop
cmpsb
inc
test
loopne
pop
enter
sub
andl
push
inc
das
cmpsl
jb
pop
inc
push
add
jl
or
pop
dec
fstps
sub
xchg
inc
addl
ret
inc
cli
mov
inc
insl
cmp
idivb
push
or
in
icebp
sub
cltd
pop
jl
pop
popf
in
mov
add
mov
cmp
test
lea
and
jne
aam
push
jns
jmp
inc
mov
push
jb
pop
hlt
and
and
mov
jb
push
fists
sahf
std
loop
fs
jle
out
xchg
inc
lock
iret
mov
inc
sti
dec
out
dec
fcmovbe
xchg
mov
dec
into
xchg
mov
shll
cmp
mov
jns
sbb
mov
jbe
int3
leave
cmp
cmp
cmp
aam
xor
xor
adc
scas
fwait
stos
fwait
idivb
lret
add
fstps
psubb
mov
xor
adc
jl
and
xor
mov
lods
jecxz
js
sub
mov
xchg
movsb
lahf
xor
or
cmp
ljmp
jo
out
das
push
cmp
dec
sub
mov
movsl
outsl
andb
jge
xor
jnp
rclb
test
and
mov
cmpsl
lret
out
scas
inc
cmp
cltd
or
mov
cli
pop
push
aaa
lods
cmpsl
shrl
repz
insl
sbb
or
out
push
fs
push
and
in
dec
and
in
sbb
xchg
pop
std
outsl
adcl
shlb
or
jmp
mov
mov
xchg
ljmp
push
loop
dec
push
adc
bound
loopne
out
mov
aaa
xchg
ret
fwait
sarl
xchg
inc
pop
nop
sbb
jbe
lret
jnp
fs
mov
pop
inc
int
jmp
stos
pop
xchg
cmpsl
sbb
jle
dec
push
inc
insl
aam
or
adc
sbb
lock
shrl
inc
cmp
int3
sbb
insl
lcall
notl
fisttpl
mov
ret
inc
mov
dec
or
add
sub
in
or
push
mov
lcall
stc
pop
movsl
cmc
adc
jmp
je
push
add
push
sub
cwtl
add
add
divb
mov
cmp
push
mov
loop
push
nop
insl
sarb
push
jno
push
fisubrl
add
push
sbb
leave
test
lea
xchg
inc
mov
push
adc
cmp
xlat
and
enter
std
lahf
pop
or
dec
xor
dec
xlat
mov
add
dec
enter
gs
ret
push
adc
inc
repz
sub
jle
iret
pusha
dec
out
mov
mov
cwtl
push
dec
stos
pop
adc
mov
stos
sub
pop
mov
insl
imul
mov
sub
or
xchg
pusha
mov
mov
call
test
jo
pop
mov
movsl
dec
popa
mov
test
imul
inc
imul
mov
fcmove
xor
fdivl
aaa
add
pop
rcrb
pop
into
mov
mov
xor
imul
in
scas
decb
sti
mul
ds
inc
icebp
mov
adc
hlt
mov
or
pop
ja
popf
xor
adc
aaa
bound
ret
push
xchg
scas
mov
scas
lret
xchg
aam
test
push
add
andb
aaa
sbb
daa
pop
push
xor
push
nop
pop
xchg
add
inc
sub
es
hlt
hlt
xchg
push
out
popa
dec
xchg
je
idivb
lods
and
lret
mov
test
nop
jno
jbe
xor
in
lds
ret
xchg
or
idivl
add
and
adc
jnp
ret
add
xor
mov
push
jmp
ja
fstpl
add
sub
xlat
out
pop
fidivrs
sub
inc
push
xor
gs
xchg
scas
lock
sarb
sbb
jne
jge
xor
xchg
sbb
or
imul
in
pop
test
xor
les
or
dec
fwait
mov
mov
push
shlb
lcall
jo
hlt
pop
push
mov
sub
sub
inc
dec
dec
mov
mov
mov
rorl
loope
bound
popa
testb
rcrb
repz
ss
lods
add
fiaddl
xlat
pop
cmp
adc
cmc
xchg
or
bound
mov
push
mov
add
pop
stos
cmp
xchg
dec
arpl
sbb
stos
fiadds
clc
subb
push
es
sub
mov
sub
test
xchg
xor
mov
cs
sbb
mov
and
pop
lcall
cmpsb
in
fdivrs
lea
lahf
push
xchg
sbb
xchg
aam
gs
cmp
pop
leave
dec
lods
lods
repz
ljmp
icebp
sbb
repnz
xchg
rcl
sti
xor
test
popa
cmpsl
inc
es
xchg
ds
mov
sub
jae
adc
pop
test
pop
xchg
or
cmpsl
out
loope
out
xchg
aas
mov
add
adc
mov
repnz
cmp
rclb
and
jmp
and
mov
out
adc
xchg
fs
jb
sbb
cmp
jp
fadds
lea
fwait
mov
jno
dec
divl
jmp
mov
leave
icebp
and
xchg
push
xor
in
or
popf
rolb
cld
inc
imul
dec
mov
sbb
out
test
fwait
ret
mov
fs
mov
push
lds
movsb
stos
ds
jl
push
loopne
mov
lret
adc
or
ret
lcall
pop
inc
sbb
bound
mov
lret
fdivrs
jns
in
inc
divl
add
mov
jno
mov
add
rcl
cmp
dec
das
xchg
loope
xlat
jnp
xchg
fninit
mov
add
arpl
into
jne
les
lea
movsl
call
roll
xchg
aam
sub
xor
lahf
and
sbb
mov
std
jecxz
add
adc
pop
and
push
pop
cld
jmp
pop
cmp
jmp
and
sub
fildll
into
cmpsl
add
fistps
cmc
lods
popa
mov
push
mov
and
jl
push
ja
pop
push
scas
add
and
lahf
imul
mov
aam
leave
dec
dec
push
popa
movsb
push
aam
ret
and
sbb
cmc
mov
dec
lods
pushf
jb
inc
and
adc
dec
pop
fucom
push
mov
sbb
and
xchg
les
mov
int3
pop
ret
jo
lock
sub
test
je
decb
jmp
loopne,pn
fmull
sbb
jbe
cld
icebp
aas
jl
xchg
lahf
ror
cmp
inc
push
stos
rorl
out
bound
fisttpll
jl
lret
mov
mov
and
dec
dec
mov
cli
mov
jg
out
mov
pop
iret
cmp
out
addr16
lock
std
or
fidivrl
mov
xor
call
push
cmp
sbb
xchg
pusha
ret
pop
inc
arpl
add
leave
xchg
lahf
loop
mov
or
push
cmp
mov
aad
xchg
es
xchg
jno
mov
test
push
pusha
or
test
loop
push
inc
je
pop
test
mov
pop
cmp
aaa
ljmp
adc
jl
mov
stos
fs
aas
mov
fldl
out
fcompl
and
lret
xchg
hlt
mov
xchg
add
int
pop
fnsave
mov
popl
or
insl
push
push
mov
or
cli
add
pop
ljmp
lock
stos
dec
imul
add
scas
pop
aas
rolb
loope
call
sbb
test
insl
jno
insl
fimuls
mov
xchg
push
pop
and
add
xlat
push
jbe
scas
shll
xchg
xlat
mov
mov
mull
es
test
push
mov
sbbb
push
sub
cmc
addl
inc
xor
fimull
cmpl
push
imul
pop
or
or
dec
jno
loopw
inc
inc
outsb
mov
rcll
popa
xchg
push
xchg
arpl
xor
sbb
in
lods
adc
jp
inc
xchg
aas
push
sbb
jle
dec
loop
cs
cmp
jl
dec
pushf
je
push
std
popa
sarb
or
cmp
ss
mov
cmp
dec
nop
add
into
add
arpl
xor
xchg
xchg
sub
mov
shll
and
adc
push
jmp
dec
fsubrl
or
xorl
popa
ja
pop
popf
xor
mov
xor
adc
ret
jne
cli
aam
sbb
rolb
sub
int3
loope
mov
pusha
enter
jp
call
je
pop
jae
jbe
cltd
lahf
cmp
ror
mov
fs
sub
xor
inc
ret
xor
cmp
mov
lcall
sub
jmp
sbb
cmp
adc
push
xor
push
push
xchg
pop
jmp
outsl
push
inc
fmul
sub
inc
inc
push
out
popf
cli
sahf
loope
xor
mov
and
jnp
mov
movsb
jnp
mov
sbb
fdivrl
sti
shll
mov
test
ret
pop
not
add
jmp
sub
xchg
scas
jecxz
mov
push
sbb
push
mov
push
mov
push
roll
fistps
dec
and
les
ret
pop
in
sbb
mov
testl
xor
call
cmp
push
pop
leave
mov
addb
pop
loopne
stos
jnp
cltd
popf
or
mov
inc
sub
push
arpl
jl
test
adc
jl
adc
jae
add
pop
les
out
stc
pop
jbe
sbbl
in
cltd
inc
inc
inc
add
test
pop
fdivrs
test
stos
outsb
dec
mov
mov
mov
inc
leave
gs
mul
paddusb
outsl
xorb
dec
addl
jp
stc
adc
pop
aaa
push
lcall
sbb
lods
jae
xor
shl
jecxz
push
add
lahf
out
dec
xor
jge
dec
aas
insb
cmp
movsl
inc
or
jp
push
je
cmp
jp
fsubrl
adc
in
pop
mov
mov
push
adc
add
dec
fdivs
call
or
dec
fmuls
adc
pop
cs
mov
mov
cmp
aaa
leave
movsb
pop
subb
fidivs
test
jae
push
cmp
xchg
rclb
mov
mov
clc
pop
mov
mov
sbb
inc
xor
sub
xchg
jb
adc
aam
mov
mov
gs
jmp
dec
ss
rorb
mov
sbb
sub
shr
stos
sbb
aad
aaa
or
popf
pop
push
popa
sub
jecxz
and
dec
dec
cmp
das
cmp
fwait
pop
nop
sbb
add
out
or
pusha
mov
ss
push
sbb
mov
mov
aas
xchg
movsl
xchg
shll
imul
xor
int3
test
in
mov
and
lods
icebp
xor
jecxz
add
fcmovbe
std
fisubl
dec
les
popf
mov
addb
mov
adc
cltd
cmp
loopnew
xchg
insb
shlb
jns
mov
inc
rorl
pusha
cli
ljmp
fucomp
and
pcmpgtb
in
fistpl
imul
test
push
adcl
test
sahf
les
xchg
jns
dec
push
mov
sbb
mov
lods
fstps
movsb
les
add
cld
ret
or
cmpsl
scas
neg
cli
sbb
xchg
or
cs
arpl
mov
popa
mov
call
out
nop
mov
test
push
fidivl
es
inc
popf
daa
ret
aad
dec
pop
mov
repz
or
popf
xchg
mov
cmp
repz
ljmp
int
jns
cmp
data16
out
jle
loop
cs
ficoml
repz
idivb
lods
dec
push
fisubl
mov
push
out
daa
lock
adc
xor
mov
int3
aaa
imul
sbb
rcr
jnp
ret
fisttps
or
es
pop
das
push
push
jecxz
push
xchg
leave
jbe
rol
jb
add
in
mov
xor
out
sub
fldcw
xchg
jne
inc
stos
aad
pop
scas
fiadds
xchg
stos
cs
push
aad
call
cmpl
pop
cmp
mov
push
les
outsl
test
adc
leave
cmp
push
dec
mov
mov
add
int3
or
sbb
mov
lahf
mov
test
in
mov
cltd
fbld
test
or
std
fstpt
test
stos
jne
cmp
or
cmp
add
jmp
sbb
adc
mov
pop
test
mov
fcmove
addr16
sbb
popa
lret
mov
cwtl
sbb
rol
popa
add
lahf
sub
cmp
ficomps
ret
cltd
and
jne
mov
mov
fistps
arpl
sti
add
pop
push
into
ja
int
gs
je
call
repz
mov
add
call
or
cmp
pop
in
cwtl
mov
lret
inc
push
outsl
lret
mov
mov
push
cmpsl
xor
or
add
ret
lahf
aad
mov
mov
imul
xchg
mov
jnp
ja
push
dec
lock
mov
mov
adcb
negl
jo
out
inc
repnz
pop
int
fiaddl
cli
pushf
push
cmp
inc
mov
xchg
inc
ljmp
mov
pop
les
cs
or
icebp
jae
cmpsl
mov
cmc
ss
movsb
sub
add
aad
lret
mov
ds
add
rorb
xchg
lock
lods
mov
dec
lcall
dec
jg
dec
sub
cmp
xlat
xchg
popa
and
aam
mov
pop
jne
xor
in
in
rcrl
mov
pop
dec
shrl
sti
pavgw
shll
lea
and
sub
sbb
cli
stc
icebp
sbb
push
inc
mov
lds
pop
dec
add
stos
stc
orb
cmpsb
mov
out
mov
out
sahf
aam
adc
aas
call
test
sbb
push
fwait
in
adc
and
jno
fwait
std
dec
jecxz
mov
lods
fistpll
outsl
nop
ss
int
push
add
sti
js
dec
negl
cmc
add
sub
pusha
jo
mov
jecxz
in
movsb
cmp
add
xchg
sbb
xor
shl
xor
sar
push
das
out
mov
je
push
mov
pop
adc
sbb
or
rclb
das
sbb
aad
in
mov
xor
lds
push
popa
adc
cmp
pop
dec
adc
dec
jle
fistl
mov
dec
inc
repnz
test
repnz
popl
push
pushf
or
add
pop
push
loop
xor
lock
jns
jle
push
repz
aaa
movsl
xchg
pusha
pop
jbe
loope
and
movsb
sbb
mov
or
dec
sbb
mov
xchg
or
adc
in
daa
scas
jno
cs
cwtl
movsb
lret
fwait
mulb
lret
sbbl
or
loopne
cmpb
pushf
movsb
sub
sbb
mov
mov
dec
ret
pushf
xchg
mov
pop
les
xor
jb
dec
push
cmp
pop
cmp
push
ret
ret
std
fldl
pop
shrl
pop
es
dec
mov
iret
test
mov
and
out
dec
movsb
xchg
rorl
repz
rorl
cmp
movsb
dec
out
pop
data16
std
jp
in
in
rol
jnp
scas
gs
iret
icebp
das
xchg
sahf
xchg
imull
invd
cld
sub
stos
cmp
sub
lock
and
mov
push
inc
sbb
flds
or
inc
pop
jno
sub
push
das
pop
sti
or
jns
add
ss
push
mull
push
test
hlt
and
pop
addb
popa
out
mov
shll
sub
sub
add
out
es
adc
lahf
int
js
lahf
hlt
dec
pop
cs
loop
shrl
mov
loopne
mov
fsubrs
pop
jae
pop
lret
stc
jg
enter
inc
sub
inc
push
pop
push
ljmp
jl
or
or
cmp
sub
and
lods
jecxz
popa
or
sti
lods
or
adc
outsl
lods
mov
sbb
push
movsl
insb
int3
mov
es
sub
dec
aam
in
jns
pop
sbb
jo
test
push
mov
rcrl
cs
xchg
enter
xchg
adcl
test
or
fbstp
shlb
mov
mov
es
lret
adc
xchg
loopne
mov
sub
jp
sbb
add
enter
push
pusha
jge
xchg
lock
jne
cltd
clc
push
xor
pusha
mov
popa
cmp
rolb
jmp
sub
imul
in
cmpsl
dec
or
ret
push
cmpsl
push
andb
and
std
shll
xchg
mov
dec
mov
push
iret
enter
test
data16
adc
mov
daa
ret
lret
clc
addr16
ret
xchg
in
pushf
jbe
jecxz
mov
pusha
inc
pop
xchg
mov
ljmp
scas
sbb
pop
xor
fimull
scas
movsb
out
mov
lret
mov
out
clc
into
jge
imul
aaa
jmp
and
adc
pop
inc
mov
lcall
out
loopne
adc
in
jmp
xchg
sub
sub
cmpsl
subb
insl
fstpl
and
inc
cwtl
adc
dec
add
decl
loopne
ja
pop
pop
add
cli
in
mov
cwtl
adc
lret
cmc
or
inc
int
in
lods
push
mov
sub
rorb
xchg
cld
inc
pop
lds
or
xchg
ret
fstpl
push
push
mov
ds
add
scas
repz
daa
mov
sbb
push
pop
or
icebp
notb
push
int3
xor
xchg
lods
and
in
mov
out
mov
sbb
jmp
pop
cmp
and
fs
inc
sub
and
push
movsb
loope
mov
cmp
sbb
lds
lret
jecxz
adc
xchg
pop
push
sbb
aam
inc
andb
xchg
es
fistpl
push
aad
mov
and
jne,pt
push
mov
jmp
inc
aam
lock
aaa
mov
adc
cmp
cmp
cld
sub
int3
or
aaa
and
ret
test
mov
out
outsl
inc
rcrb
mov
loope
lret
filds
jmp
xlat
daa
or
push
pushf
dec
mov
loopne
lds
jae
sbb
inc
add
and
push
scas
imul
mov
or
out
in
or
pop
sbb
jle
jnp
pop
push
xlat
arpl
xor
scas
sub
sbb
ja
cmc
sbb
and
int
out
stc
fs
xor
mov
xchg
pop
outsb
cmpsl
and
mov
gs
sti
adc
movsb
in
dec
dec
and
cs
jae
ja
aas
xchg
and
or
outsl
sbbb
lods
lods
test
test
enter
in
cmp
pushf
mov
pushf
cli
jb
push
in
xlat
mov
jae
das
movsl
hlt
sub
aam
and
xlat
lods
in
in
inc
es
sbb
xor
sti
bound
int3
outsl
stc
jnp
mov
mov
jg
pop
cmp
into
and
push
ror
fs
insl
ret
jo
mov
mov
mov
mov
ret
xchg
outsl
imul
pop
ret
jmp
outsb
imul
js
outsl
lods
loopne
adc
gs
push
sbbb
je
mov
inc
inc
sub
lret
jae
dec
loope
popf
push
sbbb
fisubrl
mov
icebp
cmp
jge
xchg
push
cmc
xchg
mov
lods
jg
ds
or
xorb
sub
adc
movsl
insb
pop
popa
mov
es
data16
inc
roll
daa
in
aad
nop
pop
inc
xor
sub
push
out
dec
data16
rclb
inc
inc
jecxz
popf
lea
mov
mov
gs
inc
pop
rcll
and
fwait
xchg
add
out
dec
stos
lahf
nop
adc
sarb
mov
inc
push
inc
push
mov
xchg
fisubrs
mov
inc
inc
jbe
inc
pop
jno
xor
dec
push
fcomi
mov
div
mov
jbe
mov
movl
and
in
stc
fstpt
call
es
dec
adc
xchg
aaa
lret
test
dec
add
lods
or
mov
outsl
out
icebp
and
icebp
jns
mov
int
dec
sub
sub
mov
outsl
mov
pop
cmpsb
jae
or
sahf
je
gs
test
lods
into
dec
mov
aas
or
cmpl
mov
push
adc
cmc
ret
daa
icebp
lods
fcompl
ljmp
aas
mov
sahf
push
xchg
xor
dec
mov
xor
shr
lret
fdivl
xchg
test
test
adc
cmp
cltd
and
cmp
xchg
outsb
push
addr16
cli
mov
roll
test
imul
nop
insl
sub
add
pop
or
iret
push
dec
fidivs
adc
mov
and
imul
popa
out
iret
cmpsb
mov
inc
xor
aam
pop
arpl
sub
lea
pop
jo
shrb
cmc
or
in
test
ds
jl
jno
dec
popa
and
es
in
lcall
or
mov
jmp
or
sti
fwait
cmp
in
stc
xor
fisttpl
arpl
fldenv
mov
lock
jae
cmp
sahf
dec
add
pop
adc
es
or
pop
icebp
adc
inc
cmp
ljmp
add
cmp
and
xchg
into
pop
push
adc
ss
popf
sbbb
jle
xor
pusha
jge
frstor
std
jle
test
testl
and
dec
aad
xchg
and
call
or
bound
add
mov
shrb
and
icebp
mov
std
ds
adc
pushf
out
call
jo
cmp
jl
mov
fidivl
lock
and
in
inc
dec
or
jl
sbb
std
jg
ja
std
jge
adc
cwtl
adc
push
mov
sti
aaa
xor
mov
fcoml
xor
sub
inc
xchg
mov
and
mov
mull
iret
insl
xor
add
ror
jle
push
cli
aas
add
adc
lods
and
mov
dec
xor
cmp
aaa
adc
or
je
jnp
movsb
out
pusha
xorl
push
mov
xchg
sbb
add
insb
fs
aaa
and
shrb
jmp
aas
test
mov
cld
xor
pop
scas
test
cltd
and
fcoml
dec
and
imul
mov
mov
aaa
insl
sub
loopne,pn
inc
add
aad
sti
into
xchg
bound
inc
mov
and
lret
insb
pushf
lcall
cmovp
mov
das
jp
int3
adc
xchg
jne
rclb
fdivrp
stos
sahf
cli
leave
enter
jae
out
push
mov
std
sub
iret
fwait
xor
popf
mov
push
push
sbb
and
in
or
mov
push
push
rcrb
jnp
sahf
hlt
aad
cmpsb
bswap
stos
hlt
stos
rcll
pop
movsl
fstl
bound
test
in
cwtl
std
repnz
xchg
add
stos
push
mov
jmp
movsb
sbb
mov
cmp
mov
cmp
addps
lock
jnp
shrl
sub
fbstp
cmpsb
jae,pn
daa
rorl
inc
jle
dec
fs
adc
mov
dec
jno
lret
sub
test
mov
dec
jmp
cmpsl
test
rclb
push
mov
adc
fistl
mov
mov
and
mov
test
sub
aas
dec
mov
push
pusha
sub
cmp
sub
imul
cwtl
sbb
sahf
fiadds
popf
push
xchg
pushf
rcrl
mov
daa
jmp
and
rcrl
adcb
in
add
push
negb
lds
lods
mov
bound
jno
mov
mov
pop
movb
xor
fcmove
testl
fidivrl
ret
fildl
repnz
enter
arpl
pusha
dec
mov
cmp
addb
movsb
mov
testl
add
loope
cwtl
jb
mov
push
sbb
popf
pop
push
rorb
out
pop
mov
aaa
xchg
fdivrs
jae
fidivrs
aaa
mov
sbb
or
mov
push
arpl
fadd
mov
sbb
mov
rorb
test
xchg
pusha
mov
cmpsb
mov
std
pop
imul
cmc
or
push
ss
rorl
lods
cmp
lret
mov
push
dec
push
ror
addr16
mov
stc
js
xor
cmpsl
int3
mov
imul
xchg
inc
pop
mov
sub
inc
pop
or
mov
jns
in
scas
mov
dec
loope
xor
mov
call
stos
xor
ds
pop
pop
mov
clc
outsb
mov
test
shl
jns
cmp
jo
mov
adcl
xchg
inc
stos
inc
stos
lahf
in
nop
rcr
ds
sbb
xchg
mov
jnp
movsl
xlat
xor
faddl
mov
mov
cmp
xchg
shrb
loop
movsb
pop
cmpsl
test
pop
movsb
inc
inc
dec
outsl
out
dec
push
dec
xor
mov
cmpsb
cmp
pop
movsl
cltd
xchg
test
push
fiaddl
or
loopne
andl
test
add
or
push
cli
pop
gs
lock
jp
inc
out
shufps
push
test
push
jae
push
repz
lahf
adc
xlat
mov
aam
cmp
sti
jl
test
cli
mov
mov
xchg
aaa
rclb
enter
mov
jg
call
inc
std
and
mov
add
in
cmp
daa
sti
cmpsl
cmpsb
xor
mov
test
lret
and
push
pop
aas
cmp
mov
out
pushf
pop
cmp
popa
mov
and
jnp
rcll
add
int
or
nop
inc
lret
data16
adc
jmp
in
mov
pop
repz
inc
aam
or
push
mov
ljmp
incb
mov
mov
decl
sbb
sub
orl
and
sti
mov
adc
inc
test
jnp
sub
jp
insl
inc
mov
pushl
pop
cmc
sahf
mov
ss
jg
in
aad
leave
or
pop
jmp
popa
out
mov
test
icebp
cmc
rcll
mov
push
rcll
xchg
and
or
cmpsl
jecxz
mov
lea
xor
sahf
adc
ds
mull
adc
push
inc
jbe
fldl
mov
repnz
pop
lret
mov
mov
sbb
cmp
lock
xchg
fstl
mov
sub
push
in
addb
pop
mov
push
add
or
pushl
pushw
dec
stc
int3
inc
fsubs
sbb
cwtl
adc
mov
andl
and
cltd
and
jns
xchg
mov
lret
dec
ret
or
inc
inc
iret
inc
mov
insl
cmp
int
callw
jne
frstor
inc
push
dec
das
xchg
or
cmpsb
add
or
das
int3
jecxz
fmul
pop
inc
int
push
mov
pop
jle
xchg
dec
jecxz
jl
mov
outsb
sub
sbb
inc
ljmp
push
fsubrl
jo
shlb
mov
pop
jl
fisubl
sbb
cmp
je
xorb
xchg
dec
mov
popf
or
jns
loop
mov
idiv
cmp
lret
dec
jle
jmp
orb
jae
sub
jnp
add
add
push
and
sbb
jp
outsl
int
ss
add
push
mov
pop
aaa
jmp
sub
fdivl
mov
loop
mov
mov
call
sahf
xor
mov
push
fisttpll
lahf
mov
lahf
xchg
cmp
ficoml
push
mov
icebp
aas
lock
imul
push
xor
xorb
push
in
sbb
pop
or
sahf
xchg
push
paddw
mov
test
or
mov
xchg
mov
in
leave
xchg
add
sub
imul
inc
inc
mov
roll
mov
cmp
popf
adc
inc
test
jg
pop
popa
jl
aas
and
mov
hlt
int
push
sub
sub
not
adc
and
add
xchg
jle
mov
or
popf
in
mov
popf
mov
cltd
addl
add
lods
jae
sub
sbb
scas
repnz
scas
pop
push
inc
into
lret
pmaxub
iret
dec
cmp
subb
mov
dec
xor
lock
xchg
pushf
adc
adc
ss
test
mov
ret
stc
add
cmp
xchg
or
pop
jnp
scas
data16
imul
rcl
jecxz
sbb
adc
jbe
ljmp
push
push
push
push
jp
add
int3
sub
movb
jg
scas
dec
add
or
lds
nop
mov
inc
insl
xchg
mov
test
call
test
cmpsl
inc
sub
aas
pop
in
movsb
rorl
leave
inc
xchg
push
fs
cli
mov
sahf
pop
xor
and
add
lahf
dec
lret
inc
std
ja
sub
mov
int3
xor
ja
mov
mov
ret
mov
push
sub
rorb
mov
pop
fcoms
fisubl
jae
sahf
or
mov
in
test
add
adc
jb
mov
inc
push
ljmp
arpl
pusha
aaa
mov
pop
pop
lret
les
es
dec
sub
push
or
ficoms
jnp
adc
xchg
std
imul
xlat
or
mull
adc
sbb
inc
lds
and
adc
jmp
xor
fiaddl
push
sarb
dec
adc
cmp
add
mov
mov
sti
out
xor
outsb
inc
mov
in
popf
sbb
mov
adcl
push
fsubrl
xchg
repz
mov
movsb
lock
mul
shr
mov
pop
mov
push
nop
out
mov
pop
inc
and
fisubrs
sbb
cmpb
push
mov
loopne
xor
push
jmp
pushf
or
jo
jecxz
int
add
xchg
dec
jae
inc
js
or
fdivr
mov
aam
add
jmp
pop
insl
mov
mov
cli
dec
fisttpl
dec
aad
loop
int3
and
outsb
jg
jno
sbb
push
in
and
ss
nop
mov
out
xchg
es
mov
push
pop
test
mov
clc
test
test
pusha
push
add
stos
sub
pop
sahf
aaa
add
mov
adc
cwtl
push
ss
test
nop
stos
cmc
lea
jb
ds
js
stos
mov
pop
xchg
sub
fidivrs
cwtl
cli
test
pop
and
inc
sub
xchg
push
stos
lahf
pop
hlt
fidivl
mov
ja
pop
cmp
or
cltd
push
cmc
movl
fildl
sub
mov
into
xor
nop
outsb
out
aaa
dec
lods
mov
sbb
jbe
lock
and
test
mov
and
xor
popa
pop
mov
loope
xor
arpl
loope
dec
mov
ss
popa
or
dec
shrb
or
sub
and
clc
movsl
inc
in
add
mov
aad
addb
xchg
sub
and
push
js
cwtl
cmpsl
or
push
cmpsl
aas
lock
sbb
lahf
sbb
into
es
adc
jge
lret
fstps
out
xor
lods
adc
adc
push
jo
dec
adc
push
popa
sub
sub
or
pop
movsb
adc
add
fimull
push
mov
movsl
adc
mov
xchg
add
mov
repz
jge
push
cli
push
lahf
add
cwtl
push
roll
sahf
mov
push
lret
fdiv
je
popf
cmpsb
clc
jmp
sbb
mov
inc
addb
mov
inc
lret
idivl
or
mov
push
imul
cmp
out
filds
or
dec
gs
push
push
call
out
popf
out
mull
pop
xor
and
dec
inc
mov
sldt
sti
out
fists
sbb
add
aaa
xor
or
subb
lahf
js
mov
mov
pop
test
dec
jg
clc
sub
imul
inc
mov
shrb
jecxz
ret
movsb
or
adcl
sub
push
jae
jne
imul
enter
imul
mov
cmp
aaa
sahf
orl
xor
dec
jne
cs
mov
pop
pop
nop
test
pop
and
icebp
shll
into
test
iret
jle
mov
sti
push
shll
mov
stos
pop
test
mov
je
or
shrb
jp
inc
cld
dec
cmp
pop
nop
jmp
xchg
repnz
outsb
adc
sub
lea
fldl2t
pop
test
and
pop
jl
inc
outsl
int3
pop
or
nop
push
xchg
scas
fdivs
inc
push
adcl
mov
in
cmpsl
addl
sub
jmp
pop
rol
mov
add
fwait
dec
inc
xchg
sub
inc
xchg
xchg
ret
mov
xchg
pop
stos
ret
fs
jbe
rcrb
add
fildll
in
stos
jg
and
int3
popa
push
or
cmp
cmp
outsl
pop
testl
sbb
push
lret
mov
in
adc
push
and
aaa
jo
sbb
stc
xchg
rcr
in
lea
xchg
cmp
xor
dec
out
jle
cmp
xor
push
cs
inc
xor
push
push
add
popa
in
and
rcr
inc
mov
mov
inc
push
inc
mov
ret
fldt
push
mov
popf
fistl
int3
sub
movsl
out
add
add
loop
fidivrl
das
dec
xchg
adcl
pop
leave
loope
xor
adc
icebp
jp
xor
xor
and
xor
or
mov
jecxz
jle
xor
add
push
xchg
cli
push
adc
arpl
fdivrs
outsl
fisubrs
and
pusha
cltd
rcrl
xorl
push
mov
pop
or
mov
adc
fcoms
in
dec
cmp
push
cmp
dec
xlat
cmp
xor
cmpsl
rclb
xor
hlt
in
addl
fdivrp
in
lcall
notb
cltd
out
inc
js
pop
sbb
jae
mov
inc
testb
repz
sahf
nop
and
stos
sbb
sbb
sbb
pusha
dec
cs
cmc
jecxz
and
call
shl
setge
jle
push
and
mov
push
les
icebp
fdivrs
addr16
cli
pop
lahf
pop
dec
xor
mov
pop
incl
repnz
fwait
jmp
sbb
sub
sbb
xchg
sbb
xor
xchg
les
gs
xchg
fnclex
test
cld
test
xorl
adc
mov
add
cmove
and
jns
cmpsl
sahf
inc
inc
imul
xchg
mov
push
in
ss
sub
or
pop
aas
stc
xor
dec
scas
xor
test
mov
inc
sub
xor
push
les
push
sbb
das
cmp
mov
add
xor
repnz
sbb
aas
cmp
xchg
repz
sbb
js
pop
sub
lods
faddl
pop
lea
pop
lcall
lahf
data16
rolb
or
sahf
fdivl
es
dec
xchg
jns
xchg
add
out
das
xor
jmp
in
xchg
mov
lods
sbb
adc
out
adc
in
sbb
fcmove
push
adc
mov
adc
cmp
cld
jb
mov
sbb
das
cmpsb
cmc
mov
add
pop
push
pop
daa
cli
lret
mov
mov
mov
stc
dec
adc
cwtd
jge
push
out
mov
mov
lock
mov
daa
and
adc
cltd
cmp
adc
movb
ss
out
pop
and
push
sarl
sbb
jnp,pn
mov
mov
jmp
ret
int3
pop
in
out
adc
scas
and
mov
lea
mov
cmpl
adc
mov
cmp
mov
cmp
xchg
and
dec
enter
xchg
add
xor
mov
jnp
aas
mov
inc
jnp
jo
outsl
stc
imul
in
dec
leave
cmp
push
int
pop
mov
fdivrs
jae
and
jno
test
mov
test
fistl
dec
push
add
sbb
mov
movsl
mov
xor
cmpsl
out
rcrb
pusha
push
out
ficompl
mov
fisttps
jb
mov
push
shrl
jge
std
addr16
mov
sub
sbb
stos
loope
in
inc
jns
fsubl
shrb
insb
fwait
xchg
loope
fstl
and
pop
fucom
ret
xor
add
push
mov
adc
cmp
mov
jae
ljmp
fimull
cmc
sbb
mov
cmp
sub
rorb
adc
mov
jg
pop
inc
mov
add
push
loopne
cmp
dec
cmp
nopl
xchg
adc
mov
lahf
sahf
sti
mov
loop
mov
les
mov
jmp
fucomi
push
inc
mov
dec
and
fisubrl
push
inc
mov
sub
divl
dec
inc
cmp
push
rcrl
pop
je
movsl
xor
xchg
xchg
fwait
push
test
pusha
pop
cmp
mov
rorl
mov
int
aam
fsts
sub
arpl
ss
cltd
adc
jecxz
and
sub
in
in
outsl
fs
dec
and
outsl
test
data16
sub
movsb
pop
jecxz
outsb
xchg
adc
cmp
xor
push
lods
xlat
cmpsl
mov
arpl
insb
xor
xchg
fisubrs
or
lods
sbb
push
fwait
test
xchg
fnstcw
xor
push
inc
gs
inc
repz
pop
bound
icebp
inc
out
popa
icebp
jns
push
mov
fisttpll
or
jno
mov
jae
bound
inc
addb
repz
cmpsl
push
mov
enter
test
cld
mov
pop
or
clc
pop
pushf
mov
scas
push
loop
jb
xchg
repz
stos
cmp
pop
rcrb
sbb
insl
lods
repnz
dec
xchg
adc
int
test
mov
xchg
mov
loop
push
add
pop
push
addr16
test
xchg
mov
pop
push
mov
fs
and
mov
jb
cwtl
dec
gs
or
or
push
addl
add
mov
jno
lods
push
jmp
dec
mov
mov
mov
mov
push
lods
mov
sti
adcb
dec
aam
aam
sbb
shl
add
clc
in
push
inc
xor
adc
ficomps
cwtl
xchg
dec
outsb
cmp
pop
stc
fcoms
test
push
movsb
and
pop
or
adc
inc
adcl
daa
cmp
outsb
fxch
sti
mov
je
inc
mov
out
xor
push
jb
jecxz
into
dec
pushf
movsb
mov
inc
jnp
pop
into
repz
iret
xlat
or
jb
add
xchg
vpmovsxbw
dec
jmp
cld
adc
jno
push
std
xchg
mov
push
lea
int3
icebp
imul
push
das
hlt
nop
fucomp
xchg
mov
jb
cltd
ja
add
dec
cli
sub
lahf
jecxz
adc
ret
iret
ss
outsb
dec
cmp
cmc
mov
pop
mov
lret
out
int
and
mov
or
sub
repz
lds
add
sbb
sbb
adc
scas
or
push
push
jp
loopne
sahf
ret
xorb
icebp
or
jbe
jle
out
xchg
scas
mov
shrb
xchg
dec
jge
nop
pop
je
mov
xor
iret
push
cltd
js
insl
and
or
pop
aaa
add
sbb
mov
adc
fistpll
xlat
test
mov
mov
cmpsl
cmpb
ljmp
rorb
or
jg
nop
cmp
or
lods
or
rcrb
mov
repnz
mov
rclb
mov
cmpsl
sbb
dec
aaa
sub
pop
jmp
jns
push
jmp
jmp
jns
cmc
movsb
jne
lds
or
or
dec
dec
lret
js
mov
push
and
inc
lret
push
mov
add
sahf
xlat
or
aas
add
call
or
aam
jecxz
icebp
call
dec
fidivrs
enter
call
stos
push
adc
loope
cmp
mulps
aad
mov
inc
inc
fucomi
jnp
stc
ss
out
mov
jl
int3
adc
fnsave
sub
aad
std
pop
das
dec
and
sub
loop
add
jle
sub
loope
add
imul
std
pusha
rolb
push
push
aad
push
ds
xchg
iret
mov
pop
sbb
pop
lea
jno
mov
outsb
dec
out
jne
mov
aam
mov
mov
cmp
dec
icebp
pusha
sub
push
out
add
sbb
data16
mov
ficoms
repnz
imul
rol
xchg
adc
sub
inc
js
inc
push
pop
gs
mov
test
jecxz
cmp
mov
push
inc
imul
push
pusha
dec
fs
imul
and
or
imul
pop
mov
ss
mov
test
adc
shrb
not
out
repz
xor
mov
fstl
ret
mov
pop
inc
ja
aad
mov
fnstsw
dec
clc
push
sahf
pop
sbb
add
addb
arpl
sahf
adcl
xchg
scas
jo
fmulp
or
insl
fwait
subb
int
mov
fmul
sub
cmp
add
pop
aaa
xor
mov
das
or
pop
fldl
ljmp
cmpsl
and
xchg
sbb
cwtl
inc
sub
or
or
ret
fsubl
and
nop
lret
xor
sbb
jl
cld
outsb
add
sti
cmc
jne
pop
pushl
jp
sub
mov
sub
and
sbb
jno
lods
pushf
pop
sub
mov
sub
xor
mov
pop
or
stos
pushf
sarl
std
lods
xchg
add
jecxz
das
movsb
lock
sub
ss
xor
out
dec
in
sub
stc
test
xchg
lea
repz
pop
leave
shlb
sub
jge
mov
ror
ret
insl
scas
pop
inc
movsb
enter
push
data16
out
in
fisubrs
pop
lcall
pop
int
mov
mov
xor
lcall
xchg
loope
push
add
or
das
mov
mov
push
lods
je
push
and
mov
xor
ret
leave
xor
ret
addb
stc
or
mov
lock
hlt
cltd
push
mov
jg
lods
adc
push
in
jae
mov
push
lods
pop
fwait
inc
add
das
or
loope
push
pop
sbb
cmp
sbb
mov
sbb
mov
dec
jne
mov
lods
pop
int3
inc
pushf
pop
mov
enter
xor
adc
or
aas
push
mov
mov
jle
jmp
cmp
dec
pop
test
cmp
and
dec
add
jno
dec
pop
jl
sub
mov
ja
lds
and
fiadds
cld
sbb
and
add
pop
mov
jmp
inc
insb
std
pop
es
in
pop
mov
test
sub
jmp
les
push
dec
jge
orb
pop
fstl
add
jle
sbb
ja
mov
push
jg
mov
leave
pop
scas
sub
out
ror
mov
ret
sarb
push
pushl
dec
insb
adc
mov
incb
aas
mov
xchg
lret
mov
jge
test
mov
xchg
frstor
xchg
fldl
sub
test
and
pushl
sub
aas
mov
adc
jns
ds
cmp
in
int3
lods
test
cmp
pop
xchg
sbbl
into
xchg
jae
sub
xchg
popa
jge
les
pop
sub
or
dec
jle
sub
mov
in
mov
lahf
sbb
cltd
adc
mov
in
dec
mov
jg
adc
adc
pop
dec
mov
imul
filds
xor
lods
jb
xor
fstl
fistl
mov
sti
or
push
mov
mov
adc
and
adc
mov
push
lahf
pop
dec
cmp
cwtl
cmp
aaa
popa
incl
arpl
push
hlt
mov
xchg
or
out
xchg
insl
xchg
je
icebp
jmp
inc
or
push
xor
ljmp
cli
outsb
stos
pop
inc
jmp
or
push
xlat
pop
rorb
inc
push
push
jnp
in
adc
repz
js
xor
outsl
daa
xlat
inc
test
std
mov
adc
pop
cmp
push
lcall
popf
cmp
push
jns,pt
inc
sarb
lock
popa
or
mov
cwtl
sub
fdivr
leave
je
sti
or
int
sub
push
das
xchg
das
xor
js
inc
mov
aas
cmc
mov
sbb
int
xor
ljmp
adc
mov
pop
mov
or
dec
js
in
sbb
xchg
mov
mov
icebp
clc
xchg
jge
push
test
lcall
sbb
loope
xchg
out
cs
cwtl
movsb
push
xor
sub
or
fildll
lods
inc
or
pop
xchg
mov
fs
sbb
dec
xor
into
shll
or
inc
mov
xchg
rolb
testb
orb
arpl
popf
mov
int
je
lea
or
jb
cmp
daa
testb
movsb
dec
mov
pop
ljmp
insb
in
lret
inc
test
shll
pop
gs
pushf
xchg
dec
sbb
mov
mov
push
stc
jne
subl
js
pop
mov
in
push
imul
gs
subl
cld
jno
shl
mov
js
je
and
test
adc
subl
aam
fsub
push
scas
mov
ss
popf
sbb
stos
push
mov
add
hlt
fwait
push
lahf
pop
popf
sbb
xchg
pop
jno
orl
push
test
je
mov
iret
and
add
std
arpl
xlat
jmp
lea
jmp
mov
lahf
jno
stos
cmp
push
xchg
hlt
sbb
inc
mov
pop
aad
pop
pop
jl
adc
pop
aam
inc
sub
mov
mov
sbb
jb
pop
out
mov
adc
mov
sub
out
mov
pusha
jae
test
jl
xor
mov
sub
push
sub
add
adc
inc
mov
ret
sbb
push
sti
lods
popl
repz
nop
call
in
sti
inc
inc
add
adc
xor
jns
push
iret
inc
pop
push
lret
and
push
or
lret
pop
mov
incl
cmp
push
push
cld
xchg
daa
adcb
stos
outsb
aad
jnp
call
cmp
sarl
repz
enter
icebp
cmc
pop
mov
push
xlat
lahf
mov
mov
sub
or
fistpl
cmpsl
inc
lea
push
cmp
dec
sti
mov
cmp
lret
push
std
push
inc
mov
in
push
outsl
sub
jge
loop
dec
cmpsl
das
xchg
mov
fwait
pop
fisubs
or
aaa
mov
cli
lods
ss
shr
dec
push
mov
daa
dec
cmp
pushf
sar
imul
fidivl
out
fistps
sbb
lret
sub
andb
sbb
test
ret
jmp
add
adc
adc
or
push
mov
int3
inc
pop
out
xlat
jb
in
lret
mov
inc
mov
clc
pop
push
mov
jo
lods
push
fldt
cwtl
pusha
insb
sahf
xchg
cwtl
inc
add
jge
push
inc
xchg
and
jbe
insl
dec
lahf
xlat
addr16
lret
pop
dec
stos
inc
jge
pop
xor
xor
ja
lods
push
ja
xor
fidivrl
loopne
je
imul
jb
sbb
test
xor
jmp
out
iret
rcrb
stc
or
dec
lds
xchg
insl
mov
adc
cmpsl
mov
push
sahf
ret
lahf
pop
jno
xchg
jp
xchg
pop
xchg
sarl
xchg
sahf
xchg
inc
pushf
sub
jp
stc
and
dec
leave
pop
std
sub
push
jbe
pop
xchg
cmp
adc
bndstx
add
and
fstpt
xchg
or
inc
pop
into
adc
loop
fsub
ja
jmp
dec
ret
data16
out
inc
xor
jbe
sti
mov
popf
mov
test
in
pop
lds
push
sub
pop
add
ret
sub
ja
addr16
mov
test
adc
scas
jg
and
inc
xor
ja
loope
stc
and
les
lret
pop
mov
jecxz
mov
sbb
js
cmp
dec
sbb
dec
test
jp
adcb
mov
mov
push
addl
rorl
mov
shlb
lret
rolb
sbb
mov
or
stc
mov
and
mov
jns
jp
push
mov
insl
cs
push
pop
cld
jle
cltd
jo
sbb
out
fldl
pop
inc
xchg
xchg
inc
es
and
cmp
ljmp
movsb
jae
ss
xor
lret
push
and
or
ret
das
mov
inc
aam
iret
roll
fwait
mov
in
or
jbe
test
and
and
popf
inc
lds
cmpl
sarb
mov
rcrl
cs
xorl
fmull
out
ficomps
cmpsl
mov
pop
pushf
mov
mov
pop
or
scas
fadds
stc
clc
mov
jb
pop
shrl
push
insl
xchg
stos
jle
in
sub
pop
sub
popa
lcall
adc
les
xor
sahf
sub
daa
std
pop
div
dec
cwtl
mov
sbb
sbb
or
repnz
pop
adc
mov
pop
lods
test
dec
icebp
inc
and
shlb
scas
cmpsl
jno
adc
mov
xor
int
jg
ficoms
fnstsw
ss
jbe
inc
jae
pop
jmp
jg
shlb
in
jmp
or
enter
stc
push
inc
jnp
adcl
inc
xor
add
push
pop
add
push
jns
stos
les
arpl
mov
xchg
pusha
leave
jno
mov
fsubp
fimull
jae
adc
push
jno
sbb
shlb
or
rorl
pushf
sbb
adc
mov
mov
push
xor
mov
les
dec
pop
xor
add
aas
cmp
leave
mov
repz
jno
xchg
dec
jmp
dec
mov
adc
or
adc
jle
movsl
shlb
adc
add
shlb
neg
popf
ljmp
ret
and
push
addr16
inc
sti
insb
dec
sti
fldt
xor
cmp
mov
cld
lock
and
out
sub
jge
insl
jg
cmpsb
pop
imul
aaa
add
cmp
xor
or
and
les
sbb
das
sbb
mov
adc
icebp
mov
lret
pop
pop
add
mov
aad
sub
cli
pushf
mov
inc
test
in
and
fnstenv
sbb
pop
shrb
xchg
inc
sub
xchg
sti
mul
scas
mov
in
loopne
enter
repnz
addb
inc
test
jno
es
xor
jno
pop
cmc
fwait
push
cwtl
cmp
and
sub
cmp
call
mov
pop
mov
dec
cmp
sahf
adc
sahf
jno
jnp
mov
pop
cmp
jg
out
scas
cmp
outsl
jge
divl
mov
or
dec
and
in
ret
fnstcw
mov
cmpsb
add
pop
ljmp
and
mov
inc
addr16
lods
or
mov
enter
imul
sub
mov
sti
mov
cmovle
repz
lods
pop
test
pop
mov
clc
aad
test
stos
in
call
xchg
add
jnp
cwtl
int3
movsl
js
fwait
enter
mov
das
pop
sbb
sbb
push
hlt
push
pop
dec
push
jge
clc
inc
sbb
lret
shlb
nop
addr16
sub
daa
fnstsw
dec
scas
lock
xchg
add
ret
lods
mov
mov
dec
sub
jle
test
frstor
push
mov
data16
test
mov
push
shlb
push
add
jnp
shrl
adc
mov
mov
cmp
stc
mov
ljmp
lods
mov
xchg
cmc
movsl
inc
insb
addb
int
fdivl
cmp
add
cld
cwtl
sub
stos
pusha
push
daa
xlat
jg
push
push
jle
repnz
rcrb
push
mov
dec
loope
lcall
add
in
movsb
push
xchg
ljmp
fsubrs
lret
push
and
sbb
gs
mov
movsl
out
inc
mov
push
in
push
das
fnstcw
mov
jge
sbb
jno
cmp
xchg
insl
push
leave
lret
dec
jbe,pn
fwait
pop
adcl
mov
cmp
fisubrs
inc
lahf
aam
mov
insl
lcall
pop
sub
mov
gs
push
lahf
movsl
lods
imul
ret
sbb
mov
lds
cli
sbb
cld
adc
fldenv
ret
out
push
jnp
mov
mov
mov
adc
enter
cmc
push
dec
inc
shlb
out
andps
xchg
pop
cli
sti
fadds
pushf
int
or
cwtl
mov
mov
testb
aam
jge
mov
fdivl
sbb
sbb
clc
clc
push
jne
dec
mov
mov
loop
aas
mov
pop
jl
loop
mov
dec
sarb
inc
in
sahf
in
cmc
push
or
push
out
ficoml
mov
jbe
inc
and
mov
fprem1
adc
bound
mov
in
sarl
xchg
into
icebp
cmpsb
mov
xor
push
jne
shrl
mov
jno
les
arpl
sub
and
push
pop
hlt
adc
jecxz
cld
add
and
sarl
push
push
mov
sbb
mov
ljmp
aaa
mov
imul
inc
mov
daa
cli
rcrl
cltd
fs
sbb
rcrb
lods
andb
into
add
into
push
in
dec
scas
mov
jnp
dec
cli
mov
dec
xor
and
or
test
add
sub
insl
dec
sahf
cmc
push
in
scas
pop
adc
lds
scas
jnp
xchg
aaa
icebp
mov
adc
or
loope
les
loopne
mov
push
jno
mov
in
push
sti
lcall
mov
xlat
dec
std
jnp
adc
cmc
mov
mov
push
pushf
cmp
add
add
leave
add
orb
movsb
inc
xor
cmp
push
mov
les
mov
sub
cwtl
add
dec
xor
daa
pop
jb
sbb
jmp
cld
testb
or
or
jne
jecxz
jmp
mov
ljmp
dec
lock
outsl
mov
jmp
mov
lds
lret
pop
leave
popf
xor
inc
xchg
punpckldq
shlb
mov
jnp
cld
into
xor
and
insb
sbb
jbe
mov
xchg
xchg
pop
bound
dec
jp
pop
pop
js
and
push
test
aas
fwait
addr16
push
imul
push
mov
das
addr16
jmp
imul
jg
fnstsw
in
hlt
xchg
rep
movb
nop
orb
mov
gs
xchg
arpl
add
ret
aam
cmp
je
xor
mov
scas
inc
ret
cs
sub
pop
inc
jl
outsb
shr
rcll
or
cs
sub
adc
sahf
jb
fadd
xor
mov
lock
lret
mov
inc
rcrb
mov
sbb
mov
mov
aas
out
jmp
sbb
cmp
sub
aam
sbb
lcall
mov
popa
sub
mov
push
insl
jp
ds
sbb
sahf
aaa
sub
mov
cmpsb
mov
pushf
subl
testl
addb
int
jl
xchg
mov
cmp
push
rorb
cmp
dec
enter
cmc
dec
mov
dec
sub
push
ret
cmp
add
mov
sbb
or
in
imull
jns
mov
mov
add
push
xor
mov
mov
stos
mov
fucomp
xor
push
outsl
cmpsb
fstl
scas
push
cmp
mov
push
orl
repnz
psubd
fmuls
add
dec
add
aaa
pop
push
mov
push
test
pusha
bound
out
pop
les
pop
jnp
fwait
mov
lds
jle
mov
sub
sub
and
dec
sub
popf
cli
clc
mov
les
push
inc
stos
scas
repnz
adc
mov
pop
jns
push
push
cmc
into
sub
dec
pop
xchg
xchg
rcrl
mov
fwait
test
stc
jl
add
dec
and
jp
out
add
cwtl
subl
adc
shrb
pop
jp
inc
stc
rclb
outsb
lock
jne
aad
fidivs
lods
test
or
adc
adc
push
hlt
xlat
loop
test
mov
int3
and
push
add
stc
imul
sbb
mov
xchg
sahf
push
cmp
cmp
xor
cmpsb
cmpsl
lcall
or
mov
sub
ja
cld
jp
jmp
std
inc
lds
cmp
pop
push
and
inc
dec
outsl
sbbb
shll
cmc
lret
or
adc
push
and
repz
mov
mov
jae
and
insb
adc
repnz
cmp
and
and
les
lock
aam
fucomp
and
fwait
test
or
cmp
ret
loop
aad
push
inc
xlat
jbe
xor
shr
add
pop
or
sub
inc
xchg
jle
aad
call
mov
stos
and
xor
pop
mov
push
dec
sbb
shlb
or
cmp
xor
into
popa
xchg
shll
xchg
test
out
pushf
xchg
inc
push
or
scas
pushf
push
xchg
add
lods
dec
sbb
push
ja
xchg
xor
into
bound
inc
inc
adc
push
leave
cmp
movsb
lock
jno
ljmp
rcrb
sub
fwait
pushf
xor
aas
add
imul
out
xchg
mov
shlb
sub
arpl
into
ds
xchg
adc
int3
lods
sbb
testl
arpl
or
movsl
inc
sbb
mov
xchg
pop
mov
addr16
sub
cli
cmp
cmp
pushf
cmp
test
or
fistl
out
insb
gs
pop
cli
movsb
pop
std
push
jecxz
outsl
mov
xchg
aas
add
gs
jg
or
and
inc
into
mov
xchg
pop
push
mov
mov
out
dec
in
sbb
bound
mov
or
xor
pop
sahf
loopne
cmp
gs
jnp
inc
sub
jo
mov
dec
add
dec
fsubr
insb
mov
ljmp
adc
shrb
clc
jecxz
mov
js
dec
push
lds
and
xchg
aaa
xchg
jge
push
cmc
and
cmp
and
push
cmp
movb
nop
xchg
and
test
or
lret
and
mov
push
cld
movsl
cltd
imul
jl
mov
pop
iret
test
cmpsb
jmp
mov
scas
sub
cmp
lret
mulb
push
mov
cmc
scas
mov
aam
inc
mov
inc
jle
cltd
add
pop
and
mov
in
push
mov
sbb
add
jns
insb
mov
aam
int3
mov
popf
push
inc
sub
jmp
lds
pop
xor
xor
test
push
lock
xor
add
ss
or
lods
pop
mov
push
xor
imul
stos
jnp
and
xchg
imul
adc
mov
pop
inc
in
sahf
leave
dec
jle
stos
fs
cltd
gs
push
cmp
testb
js
ljmp
movsl
cmp
cmp
dec
sahf
sbb
jb
mov
xchg
fiaddl
jge
repz
mov
into
adc
and
das
psubsb
inc
push
lock
xchg
out
fnstenv
push
lds
sbb
sub
loope
stos
adc
test
and
hlt
inc
orl
sbb
jmp
das
dec
adc
shrl
xorl
aad
xchg
fisubs
bound
mov
fsubrs
jns
mov
rorl
icebp
add
aam
xchg
aaa
out
pop
cld
mov
fstl
mov
jb
test
jg
pusha
ret
shll
lods
jbe
lock
sub
into
decl
add
xchg
imul
mov
pop
jns
mov
scas
daa
inc
add
in
adc
es
insl
mov
mov
out
jp
mov
sub
fdivrs
sbb
pop
sbb
push
xor
mov
icebp
pushf
js
scas
test
call
push
xor
jl
or
stos
stos
cmpsl
mov
and
xchg
pop
mov
les
aam
mov
push
stos
icebp
mov
imul
xor
cmp
out
and
and
pop
out
mov
insb
jbe
aam
rol
push
fwait
aam
ja
pop
dec
clc
or
dec
cltd
sub
push
mov
dec
loope
mov
mov
sbb
pop
xor
gs
ds
test
sub
cmp
jg
out
lds
bnd
mov
add
std
ja
dec
jns
lret
inc
jmp
test
cmp
sti
fmul
lahf
and
sub
stos
sbb
dec
jbe
jno
adc
std
xchg
sub
jno
xor
xchg
fs
mov
inc
mov
pop
dec
aaa
xchg
inc
loopne
xchg
sub
sahf
popa
sbb
sub
and
iret
inc
ljmp
aam
cmp
test
ja
aaa
les
sbb
xor
addr16
sbb
mov
fmul
mov
fcomps
or
in
sbb
add
sub
nop
iret
mov
out
inc
cli
iret
repz
xlat
fstl
imul
repz
or
pusha
rclb
dec
sbb
and
and
or
or
fstps
lret
adc
adc
outsl
mov
insl
icebp
pop
xchg
outsl
dec
lret
dec
mov
mov
out
or
inc
pop
and
mov
mov
mov
or
push
fistpl
and
aam
add
ret
shlb
clc
testb
inc
mov
cmp
daa
push
pop
mov
xchg
cwtl
test
mov
mov
add
jb
mov
xor
mov
in
shlb
jle
ja
add
orl
out
push
imulb
insb
lret
jge
pop
enter
and
stc
popf
addl
je
fmuls
in
call
mov
les
or
das
inc
scas
out
adcb
dec
inc
sti
push
movsl
mov
xor
push
jp
dec
cmp
or
add
ret
xlat
loop
inc
push
orl
arpl
xor
aam
dec
mov
push
imul
aad
mov
push
sti
jnp
or
mov
jle
mov
pop
arpl
or
mov
js
cmpsl
dec
inc
cmp
adc
xchg
cli
std
test
es
pop
and
sub
lods
out
shrb
lock
push
icebp
pop
popf
out
rcrl
mov
sqrtps
fwait
push
es
adc
and
pop
xchg
jmp
mov
fsubl
sbb
pop
arpl
hlt
int
sbb
popa
hlt
stos
shl
xchg
dec
add
push
cli
sub
insb
jae
loopne
mov
lock
nop
xor
push
pop
ret
pop
xchg
fistps
in
inc
lds
fiadds
gs
in
ret
stos
inc
mov
fmul
sahf
mov
hlt
adc
sub
add
xchg
add
lea
mov
mov
push
leave
ficomps
test
rorb
dec
clc
inc
sbb
push
push
mov
nop
push
sbb
jge
lret
aam
lret
inc
pop
dec
mov
sbb
pop
pusha
sub
mov
pop
mov
push
jmp
and
imul
or
outsl
cmp
ljmp
notl
sbb
mov
ficoms
and
jg
sub
xor
or
sbb
sti
lahf
lods
mov
sbb
xchg
movsl
jb
xor
faddl
or
repz
add
inc
std
pop
arpl
mov
sbb
inc
mov
mul
fbld
push
pop
mov
inc
nop
out
push
dec
outsl
pop
iret
sub
int
jg
pop
pusha
pop
mov
sub
jl
xor
icebp
mov
pushf
enter
cmp
mov
fiaddl
adc
cmp
sub
and
adc
mov
xchg
mov
jo
ror
xor
and
cmpsl
repnz
mov
xchg
ret
rep
xchg
lret
xchg
repz
dec
insb
in
in
gs
mov
lods
cmpsl
bound
jno
dec
or
ljmp
cwtl
pop
push
fs
sbb
dec
xchg
pavgw
addr16
scas
xchg
push
pop
xchg
push
into
xor
and
decl
inc
xlat
popa
cmp
aaa
jns
xchg
orb
inc
outsb
loop
je
in
inc
xchg
js
fistpl
adc
mov
cmp
xchg
fwait
lds
add
out
xchg
cmp
dec
xchg
xchg
sbb
das
in
sub
mov
lds
dec
mov
and
and
sbb
add
jl
stos
lock
in
ffreep
int3
popa
les
add
pop
outsb
lcall
inc
out
icebp
call
cli
xor
xchg
fwait
pop
test
xor
sbb
or
in
and
gs
push
popa
adc
xchg
pop
call
or
mov
fld
xchg
sbb
stos
sub
aaa
addr16
rcrb
aaa
add
and
pushf
mov
dec
dec
xlat
sub
xlat
dec
stc
cmp
fcomi
mov
lods
scas
sti
push
jne
mov
dec
mov
fucomi
sub
adc
popl
xchg
or
cmp
jbe
sub
fidivrl
mov
fstl
cmp
pop
mov
jge
inc
fisttpll
xchg
pop
jle
repnz
rclb
push
pop
ss
popa
fcoms
int3
repz
mov
xlat
jno
pusha
and
and
and
out
cmpsl
out
in
shll
xchg
mov
aaa
sub
xor
and
fs
ljmp
jne
stos
enter
cmpsb
xor
pop
sub
jg
movl
scas
int3
ficomps
push
out
cmpsl
add
or
pop
mov
nop
sbb
fisttpl
adc
jp
inc
xchg
cs
int3
adc
in
cmp
push
loopne
dec
inc
mov
test
dec
cmp
mov
test
or
pop
stos
inc
loopne
pop
inc
stos
cmp
and
enter
dec
loope
daa
stc
mov
mov
hlt
out
jmp
xor
movsb
jge
cmp
adc
dec
es
push
mov
scas
stos
aas
adc
xor
in
mov
adc
push
dec
andl
push
mulb
loope
push
lcall
mov
leave
roll
mov
sub
adc
scas
rcll
and
and
fiaddl
rorl
xchg
dec
mov
pop
push
and
jns
xorl
shlb
out
add
movl
sub
inc
out
out
rcll
xchg
rcll
das
out
js
mov
mov
cmp
jg
test
rclb
cmp
mov
je
jno
inc
lods
xchg
pop
jne
rcll
mov
and
push
fmulp
cmp
xor
sbb
fwait
pop
loop
aaa
in
imul
xor
leave
sbbl
inc
xchg
cmpl
mov
enter
dec
ds
jns
insb
push
inc
fimull
ljmp
or
subl
loop
sub
pop
pop
js
aaa
jecxz
mov
mov
test
clc
mov
jbe
sub
cmp
inc
lock
sbb
test
int3
addr16
scas
pusha
mov
rcr
and
je
mov
xor
das
push
in
jmp
stos
adc
imul
or
insl
xor
add
and
pop
in
jns
cmp
mov
imul
shll
test
mov
mov
in
jnp
das
clc
test
dec
aad
das
jle
cmc
mov
mov
push
xchg
pushf
add
sbb
addr16
movsb
mov
add
loope
dec
or
dec
add
adc
push
pushf
push
inc
inc
shl
xlat
or
jo
pop
sbb
fnstcw
push
cmp
jle
dec
mov
outsb
clc
push
decb
outsl
and
mov
pusha
jae
icebp
push
fisttps
fimull
ljmp
nop
mov
lcall
push
mov
inc
idiv
pop
push
ljmp
aaa
push
in
or
adc
add
add
mov
aad
div
or
icebp
lcall
xor
icebp
dec
scas
mov
in
mov
cltd
fwait
les
mov
mov
xchg
repz
arpl
std
mov
pop
testb
call
movsb
xchg
filds
push
divl
imul
mov
jge
mov
pop
lods
xor
lret
mul
mov
fnstcw
push
dec
nop
ja
mov
in
xor
inc
imul
push
daa
insb
jnp
xor
fcomi
xor
cltd
jl
orl
insl
leave
ret
cmpsl
dec
sub
mov
push
dec
movsb
cmp
mov
jbe
std
cmp
fucomp
cmpsl
adc
lret
enter
gs
dec
mov
aaa
jle
push
out
loopne
adc
push
scas
into
and
andl
mov
push
pop
idivl
aas
fadds
ror
push
gs
jg
mov
push
add
lret
dec
add
inc
adc
mov
addr16
icebp
mov
js
inc
sbb
adc
and
or
pop
mov
mov
pop
add
in
setnp
xchg
mov
xor
or
or
pop
xorb
inc
icebp
mov
lret
cwtl
into
inc
jle
repz
mov
mov
mov
cwtl
andb
jno
cmp
int
fdivrs
dec
jle
jbe
xor
aas
adc
push
lret
mov
cmp
scas
pop
cmp
je
sbb
push
push
or
jl
xor
loop
cmpl
mov
dec
nop
and
scas
xchg
xlat
cmpsl
lock
xbegin
test
arpl
fdivr
into
push
out
insb
stc
sub
push
cmp
or
push
jbe
int
cmpsl
and
jmp
in
lcall
inc
dec
pop
pushf
mov
fsubrs
mov
mov
mov
aam
or
stos
mov
jno
push
and
xchg
pop
adcl
stos
enter
dec
push
es
dec
imul
pop
push
or
xchg
inc
arpl
mov
jae
inc
stos
ret
xor
dec
aad
lock
fnsave
stos
stos
sub
dec
add
xchg
aas
xor
cli
in
jb
out
lcall
mov
int3
xchg
outsb
movsl
push
or
in
scas
jge
dec
icebp
mov
fwait
cmp
xchg
int3
mov
dec
scas
jmp
dec
shll
frstor
inc
lret
cld
mov
imul
or
ret
inc
aas
and
cmp
int3
and
xor
rorb
sub
and
insl
jbe
xor
gs
add
jno
data16
icebp
xchg
push
xor
and
insl
dec
mov
mov
or
daa
in
sbb
frstor
pop
movsb
dec
out
das
lods
or
ds
dec
or
sub
xorb
ret
mov
jl
mov
pushf
jbe
shlb
add
jb
std
cmp
loopne
repz
fnstcw
leave
sar
adc
pop
mov
leave
push
xchg
lods
fdiv
mov
xor
fldenv
sub
inc
shl
push
mov
mov
mov
adc
jle
mov
pop
jnp
sbb
pop
or
cmp
xchg
dec
xchg
repz
jmp
pop
fcomi
mov
ret
cmpsl
mov
push
lock
jnp
dec
lahf
mov
push
lret
xor
sbb
push
daa
xor
inc
stos
mov
inc
mov
push
lea
mov
pop
daa
xchg
jb
popa
es
jmpw
push
push
popa
sahf
cwtl
lds
xchg
jno
fldcw
xchg
ds
nop
int
mov
mov
mov
xor
mov
xor
call
dec
loopne
mov
sbb
sub
inc
pushf
push
popa
in
and
pop
inc
adc
xchg
pop
pop
es
mov
and
out
or
scas
aad
xchg
dec
sbb
sbb
cmp
rolb
out
dec
mov
xor
shrb
mov
lahf
jge
enter
pop
scas
cld
pop
and
sub
xor
stos
fisttpl
scas
stos
sub
push
jp
mov
pop
outsl
push
jmp
jbe
mov
cmp
jecxz,pt
mov
adcb
add
add
cmpsb
xchg
cmp
push
addr16
push
mov
cmpsl
jecxz
insb
or
xor
lds
lret
push
aas
repnz
inc
nop
sub
mov
mov
shll
into
dec
sub
and
jge
fidivl
push
mov
mov
stos
loop
xor
ljmp
fcoms
mov
addr16
fs
or
inc
mov
xor
mov
and
stos
idivl
dec
test
dec
je
xor
js
lods
push
stos
sbb
imul
dec
push
mov
pop
push
adc
mov
into
pushf
ss
xchg
adc
xchg
sub
jmp
sub
movsl
xor
add
mov
icebp
jmp
test
ja
inc
sbb
add
cld
jnp
movsb
addr16
fcoms
mov
cmpsl
jno
mov
inc
es
and
add
scas
inc
sbb
xor
cmp
or
je
test
push
xchg
lahf
sub
int3
push
adc
mul
sbb
mov
mov
xchg
or
inc
jo,pt
mov
mov
push
cmp
and
mov
mov
loop
adc
rcr
aas
jg
inc
jecxz
mov
sbb
sahf
inc
add
xorb
lahf
fdivs
js
cwtl
inc
stos
ret
ja
jecxz
cmp
xchg
imul
into
lods
aad
sti
and
sahf
popf
lcall
incb
ds
movsb
mov
push
ficomps
popf
pop
sbb
stos
cltd
test
mov
cmp
movsl
shlb
loop
loop
movsl
adc
jne
sbb
adc
jl
adcb
fcmovbe
push
push
push
jmp
dec
xor
adc
in
jo
scas
sbb
shr
sub
lods
push
sub
rorb
add
test
lret
cltd
xchg
pop
out
mov
or
lock
stos
cmp
mov
in
js
inc
movsb
mov
inc
jbe
clc
lods
sbb
scas
add
mov
sub
sbb
aas
icebp
movsb
mov
mov
inc
out
jmp
and
cmp
pop
mov
add
dec
pop
sub
lock
lods
sbb
aad
leave
outsb
dec
insb
cwtl
xchg
rcll
push
mov
stc
adc
push
in
shlb
cli
repnz
jne
mov
es
out
fnstenv
xor
lods
cli
and
lcall
inc
xchg
out
mov
js
push
pop
mov
sarb
and
sbbl
loope
dec
add
shlb
mov
xchg
or
int
aas
rcrb
mov
add
dec
pop
inc
cmc
rcll
shll
xor
or
loop
int3
es
or
repnz
cmp
xor
xor
out
fucomp
and
xchg
popf
add
ljmp
or
jno
mov
cmpsb
cltd
push
fldcw
lahf
rolb
cs
sub
movsb
adc
test
pushf
push
aas
sbb
pop
loop
iret
in
inc
xor
adc
shrb
jmp
adc
pop
add
fistpll
push
mov
mov
dec
xor
adc
hlt
lock
fcomip
or
and
ret
cwtl
cmpsl
movlps
lods
bound
adc
in
pop
jge
dec
jg
insl
rcrb
mov
je
fwait
jge
loop
mov
in
mov
pop
push
in
adcl
arpl
loopne
dec
jl
inc
inc
roll
in
or
rcl
inc
sti
mov
scas
test
mov
hlt
pop
aas
out
add
mov
and
adc
push
xchg
out
cmpl
cmpsb
icebp
mov
in
cld
ret
dec
cmc
sbb
push
mov
inc
jecxz
mov
imul
sbb
adc
add
popl
dec
aam
mov
lea
mov
mov
dec
cltd
add
sub
adc
mov
mov
pop
sahf
jle
clc
rcl
test
popf
mov
add
fs
xlat
push
pusha
in
dec
stc
repz
sbb
movsb
sbbb
lods
cmp
add
pop
and
lret
jnp
popa
mov
mov
mov
roll
ret
mov
add
xor
add
or
lock
inc
cmc
push
lahf
mov
rolb
add
loop
sbbb
lock
jno
push
jb
mov
out
inc
dec
insl
xor
mov
ljmp
mov
and
xchg
test
imul
int3
xchg
mov
add
and
sbb
shll
cmp
int
and
push
repnz
js
lea
xchg
xchg
rcrl
rcll
adc
add
rcll
jne
add
insb
cmp
mov
adc
cmp
cld
in
mov
mov
ret
aam
push
hlt
jmp
cmpsl
mov
scas
jg
test
sub
jnp
jb
add
cld
push
fnstcw
dec
repnz
mov
jge
jmp
cmp
dec
pop
scas
push
cwtl
lret
out
or
push
inc
xchg
xor
pop
xor
push
mov
andl
pushf
add
inc
clc
push
add
orl
fwait
mov
inc
bound
mov
sub
insl
jmp
inc
ljmp
dec
sti
add
loopne
popf
lods
sti
xor
in
mov
push
jp
fidivl
jle
testb
std
ds
repnz
xchg
mov
lock
adc
mov
movsb
shll
pop
and
add
mov
inc
les
jmp
pop
sti
jne
and
stc
jecxz
stos
push
les
mov
leave
add
jle
pop
push
and
fs
mov
leave
lods
xor
sti
idivl
ret
call
adc
shlb
iret
cs
faddl
mov
push
mov
mov
mov
or
shll
testb
push
movsl
in
mov
mov
and
mov
dec
mov
and
fidivrl
adc
and
cs
push
jle
mov
dec
jmp
fwait
out
or
xchg
mov
cmpb
adc
repnz
mov
stos
add
shr
cbtw
mov
loopne
jl
sub
push
scas
out
and
cmp
shrl
pop
mov
cld
ret
inc
cld
mov
loope
stc
int3
or
jmp
push
hlt
mov
pop
stc
test
inc
aam
ss
pop
je
clc
or
leave
and
fidivrl
sub
mov
sarb
mov
pop
icebp
insl
mov
fs
stos
idivl
nop/reserved
push
xlat
mov
xchg
rolb
cmpsl
cltd
fcmovb
cmp
inc
sbb
xchg
fnstenv
lret
pop
imul
add
adc
xor
pop
add
sub
sbb
cmc
or
dec
cld
cmc
mov
sbb
dec
xor
mov
inc
orl
clc
adc
inc
jecxz
push
fwait
cli
push
sub
xchg
sbb
lods
test
mov
cmp
cwtl
int
into
dec
xor
sarw
in
outsb
out
xlat
mov
jle
mov
lret
fwait
push
xor
jns
and
add
arpl
mov
setb
enter
jp
or
dec
movsb
sbb
setnp
shrb
pop
sub
imul
sub
ljmp
adc
mov
xchg
dec
scas
mov
stos
mov
push
and
rorl
jge
mov
int
push
fucomi
ret
push
pop
filds
les
orl
fldenv
sub
push
mov
nop
enter
pushf
pop
cmp
adc
daa
test
sub
mov
mov
mov
loopne
sarb
lods
adc
or
jle
jmp
mov
sub
mov
sidtl
lock
push
int3
cmpb
leave
test
insl
popa
addr16
push
dec
jg
cmp
sub
js
lea
lret
mov
jp
bound
nop
push
out
pop
mov
mov
negb
add
roll
repz
les
and
dec
iret
xchg
push
fildll
orl
fs
mov
add
dec
lret
inc
push
mov
cmpsb
push
popf
sub
adc
mov
and
cs
add
inc
add
push
aad
mov
repz
cmp
outsl
pop
mov
cmp
add
cmp
or
frstor
and
dec
xchg
rorl
repz
mov
inc
jge
jns
test
xchg
push
jg
dec
inc
mov
out
dec
mov
pop
lds
jg
cmp
jp
test
inc
dec
fcoms
cmp
nop
dec
jle
mov
cmp
jmp
xor
hlt
push
cmp
sub
or
lcall
lret
sub
stc
add
pop
adc
addr16
or
jl,pn
jge
xchg
pop
mov
dec
jmp
fbstp
iret
adc
enter
push
in
fwait
jmp
xchg
jns
ljmp
cmp
fiaddl
add
movsb
sbb
popl
cmpsl
lods
xor
jns
xchg
sbb
sbb
ja
popf
jno
adc
jmp
mov
xchg
mov
fcmovu
rorl
ficoms
arpl
sub
out
lods
pop
add
inc
arpl
stos
cmpsl
in
in
in
outsl
push
test
xchg
pop
push
push
pop
in
mov
mov
cli
aad
les
in
cmc
mov
cmp
xchg
pop
jp
lcall
lods
and
dec
vorps
mov
xchg
jle
and
ja
sbb
xchg
jnp
or
sarl
push
xor
pop
pusha
fldl
popw
mov
addr16
xor
andb
arpl
push
mov
jecxz
pop
add
or
pop
sbb
ja
xor
hlt
enter
jg
jnp
stos
pop
push
jmp
or
ret
and
push
repnz
lods
out
mov
mov
mov
sub
fdivl
sbb
push
adc
pop
iret
aas
nop
clc
pop
sbb
pop
pop
jp
mov
cmpsl
cmp
aad
mov
xchg
mov
and
cmp
adcb
and
mov
popf
das
ret
mov
fsubrl
pop
out
add
and
inc
sbb
jecxz
fstpl
add
dec
cltd
es
js
lock
inc
shll
mov
mov
pop
mov
push
cmc
lods
and
dec
and
mov
sbb
repz
leave
mov
in
test
orl
and
xchg
sahf
mov
sbb
jnp
jbe
enter
lret
flds
popf
push
out
xchg
dec
push
xorb
clc
lret
mov
push
imul
pusha
cs
or
mov
jmp
sub
and
popf
or
push
adc
test
mov
sub
ror
jp
out
adc
sti
retw
andb
dec
in
jmp
xlat
pushf
test
lret
add
inc
insb
jns
jbe
push
test
lods
std
aas
neg
in
je
sti
jnp
cmpsl
imul
ljmp
das
lods
cld
ds
dec
dec
dec
dec
dec
aad
jne
stos
movl
push
push
and
cmc
and
lcall
enter
push
push
dec
pusha
lret
adc
mov
dec
jp
arpl
test
xor
shrl
aad
out
adc
insb
aas
sbb
mov
lods
push
push
sub
cmp
add
jne
mov
mov
into
icebp
out
mov
iret
push
test
jg
mov
add
mov
pop
mov
or
test
dec
insb
sub
sub
mov
cmpsl
mov
mov
sbb
adc
dec
les
cld
mov
mov
ljmp
roll
aad
fimull
adc
adc
sbb
jecxz
and
mov
sbb
dec
rclb
gs
lret
fmull
xchg
outsl
jne
stos
sti
add
jb
pushf
push
in
test
xchg
aaa
sub
xor
inc
xor
push
test
shr
enter
xchg
mov
pop
insl
mov
mov
push
push
mov
inc
inc
inc
gs
sahf
push
pop
cwtl
lea
push
fwait
pop
test
call
fcoml
push
jmp
cs
sti
pusha
cmp
sub
jg
add
mov
daa
xor
lds
mov
cmpsb
pop
xchg
pushf
lret
jnp
dec
mov
cmp
cmp
jmp
and
push
jo
inc
dec
sub
int3
out
sbb
mov
mov
cmp
cwtl
mov
mov
mov
jns
push
mov
mov
xchg
mov
mov
lcall
lods
mov
push
push
fldt
das
xor
or
imul
je
add
sti
bound
movsb
add
sub
mov
inc
mov
xchg
pop
iret
dec
icebp
cmp
and
cmp
dec
idivl
fisttps
adc
push
xchg
lea
lahf
notb
mov
push
sub
push
add
outsb
loope
faddl
fistps
mov
inc
push
call
mov
xchg
pusha
data16
xchg
pop
jo
int
sub
sahf
xchg
inc
arpl
mov
lock
subl
inc
cwtl
cmp
xor
pop
outsb
add
leave
ret
adc
xchg
or
lods
lret
xchg
mov
dec
cmovno
xor
mov
add
js
data16
mov
mov
call
dec
mov
mov
pushf
rorl
pop
ss
icebp
lds
push
rcll
cmp
and
scas
xchg
xchg
xchg
cmp
and
mov
inc
dec
sar
pop
ficomps
adc
xchg
cwtl
or
ljmp
and
push
adc
xchg
ficompl
or
push
push
iret
lcall
push
mov
mov
enter
mov
cmc
adc
push
cmp
push
jmp
xor
dec
hlt
pop
insl
add
cmp
adc
rcrb
xchg
aaa
mov
inc
cmp
pop
jle
push
test
push
icebp
test
test
mov
fstpt
or
or
add
lock
inc
or
pop
mov
add
pop
cmc
data16
push
pop
jbe
push
sub
in
dec
cmpl
add
sti
lahf
and
int
outsb
xor
dec
mov
ja
pop
leave
mov
push
ficompl
jg
dec
jne
enter
add
mov
mov
cld
into
das
mov
lock
stos
mov
pop
xor
adc
add
movsl
xchg
sbb
add
adc
pop
lahf
popa
js
iret
push
mov
adcb
mov
fdiv
jbe
cmp
dec
imul
adc
outsb
faddp
adc
pop
out
arpl
push
mov
je
xchg
jmp
sbb
out
inc
cs
lock
push
push
jg
inc
fistl
fsubrl
out
jp
mov
fidivs
add
jnp
inc
ja
jmp
adc
lds
lret
ss
sbb
fnstenv
adc
mov
in
pushf
sbb
repnz
jno
mov
or
pop
fisubrs
jg
es
sub
inc
pop
cmp
mov
lock
sbb
les
jns
stos
sub
les
xor
jg
call
outsb
xor
mov
jp
dec
mov
push
shll
push
mov
mov
dec
dec
stos
cltd
or
adc
jge
lahf
insb
aam
test
outsl
iret
fadds
mov
das
in
xchg
sub
test
cmp
xor
aaa
in
pop
xchg
jae
lods
add
and
enter
mov
dec
dec
int3
inc
sub
mov
mov
xchg
sub
push
inc
xchg
mov
pop
cmp
sbb
or
adc
fimuls
mov
pop
fistpll
fcomi
jns
scas
in
mov
in
test
mov
outsl
jb
cmpsl
out
cmpsl
push
xchg
sbb
neg
test
jb
pusha
and
popf
adc
fcmovnb
pop
jp,pt
aad
pushf
out
mov
or
shlb
in
push
addr16
scas
lods
jne
nop
subl
dec
flds
xor
pop
rolb
jns
push
jmp
js
mov
scas
mov
sti
or
out
daa
lret
sbb
mov
or
xchg
fiadds
inc
ja
mov
xorb
pop
repnz
inc
mov
lea
sti
jmp
push
cmp
push
dec
add
ret
mov
jb
xchg
gs
and
xor
out
fmulp
clc
mov
sarl
sbb
shll
cmc
cmp
jno
push
xor
push
sub
mov
sub
push
and
sbb
fs
sahf
fcoml
xor
test
loopne
fnsave
in
loopne
into
lcall
int
pop
dec
loopne
inc
into
pop
jae
ret
mov
imul
lret
and
ss
cmc
test
inc
rolb
enter
jae
mov
repz
jo
fisttps
jmp
call
outsb
out
fmull
xchg
xchg
push
sub
int3
mov
leave
out
jo
push
xchg
rclb
es
xchg
in
xchg
notl
jnp
cmp
mov
lahf
imul
sbb
fstl
or
xchg
inc
cmp
add
enter
mov
jno
sub
and
shrl
and
jb
fstl
stos
xchg
and
lret
mov
xor
out
mov
pop
movsb
or
jb
jge
stos
rcl
cmp
push
div
push
addl
push
in
sub
popf
mov
lods
and
repz
push
pushf
and
test
pop
ja
sbb
test
lret
ja
push
add
lret
mov
lods
jns
sub
fwait
in
sbb
outsl
es
sub
leave
sub
and
jns
addr16
mov
jecxz
stc
mov
pop
and
loop
jbe
jne
push
pop
imul
inc
adc
jle
mov
dec
jne
arpl
icebp
pop
adc
jnp
and
lea
in
pop
or
dec
mov
add
test
rclb
out
mov
pop
cld
sbb
out
pop
inc
hlt
test
rol
int3
or
jns
xchg
es
iret
and
and
lock
ret
inc
inc
jmp
add
inc
push
pop
inc
mov
push
and
dec
sbb
fsubl
ret
fstp
mov
test
sbb
pop
fimull
in
arpl
inc
movsl
mov
mov
push
lea
lods
push
xchg
mov
mov
or
fdivrs
mov
mov
sub
int
sbb
lcall
frstor
mov
sub
inc
std
adc
xchg
mov
out
fisubs
cld
and
adc
sub
cmpsl
dec
push
inc
xchg
pop
movsl
lret
fdivrs
test
adc
jmp
sbbb
jne
data16
rcll
bound
xchg
ss
shlb
cmpsl
les
loopne,pt
jmp
or
sub
mov
and
inc
cmp
data16
into
pop
sub
jnp
mov
and
std
pop
xor
xor
test
and
movsb
fdivrs
fadd
outsb
aad
dec
dec
cmpl
fldl2e
dec
push
push
sarl
jns
xchg
xor
sub
xor
xor
cmp
aaa
push
push
call
ds
ret
enter
cmp
inc
shll
inc
movsb
jbe
jbe
xchg
int3
insb
pop
dec
sub
lcall
sahf
data16
mov
pop
mov
dec
inc
stos
cmp
push
xlat
mov
xor
sbb
xor
jo
cmp
data16
arpl
pop
int
cltd
and
sbb
cmpsb
leave
adc
mov
adc
leave
xchg
cmp
adc
es
or
repz
lea
pop
int3
lret
cmp
insb
or
push
jmp
dec
and
sti
adc
jb
and
dec
aas
icebp
push
fisubrs
cmc
inc
add
mov
leave
jne
xchg
repnz
scas
lret
xor
not
dec
inc
cwtl
pop
inc
and
mov
push
pop
lahf
loop
pop
cmpb
mov
mov
jmp
lahf
rcll
jnp
ds
imul
aaa
adc
cmp
jno
daa
sbb
mov
inc
xor
xchg
sbb
sbb
mov
push
fadd
call
mov
sub
mov
xchg
jne
inc
pop
nop
mov
mov
divl
mov
lahf
pop
fsts
pushf
inc
out
mov
les
fmull
jl
pop
push
and
dec
inc
insb
add
xchg
lret
lock
sbb
nop
mov
or
mov
les
pop
js
stc
and
push
sbb
loop
dec
jae
repnz
or
push
into
popf
dec
lea
dec
dec
jle
jg
sbb
xchg
mov
push
cmp
mov
xlat
jmp
and
xchg
dec
add
push
fsubrl
pop
push
inc
je
ljmp
ret
aad
pop
push
in
aad
gs
sbb
outsl
dec
mov
and
xchg
mov
cmp
mov
shlb
xchg
inc
rcrl
int3
or
mov
dec
jge
cwtl
pop
mov
push
clc
std
loopne
mov
shr
cmp
pop
cmc
std
and
jnp
dec
sbb
cmc
aaa
push
jg
fists
jne
js
fdivrs
fsts
arpl
dec
push
and
push
movsb
mov
jecxz
cmpsb
addr16
fbstp
xor
and
enter
xchg
rolb
jp
and
fldcw
pop
movsb
mov
arpl
or
xor
andb
sahf
adc
sub
push
jp
dec
and
and
jl
jp
push
dec
ret
add
xchg
cmp
cmp
repz
arpl
xor
sbbl
mov
mov
jle
pop
ret
and
jp
addl
xor
loope
shl
or
sarb
xor
xchg
sbb
scas
int3
jl
mov
pop
ljmp
sbb
add
fsubrs
dec
adcb
and
ljmp
jmp
fnstsw
test
int
inc
lret
push
sub
and
mov
push
mov
push
icebp
cli
lcall
shl
cltd
dec
xchg
push
mov
or
dec
lret
mov
add
pop
sbb
push
xor
cmp
sub
inc
cmp
adc
mov
add
sub
xchg
and
push
inc
add
fists
cmpl
push
aam
sub
mov
sarl
js
loop
daa
inc
jmp
loope
sub
jae
js
inc
fucomi
negl
mov
adc
and
nop
add
mov
add
add
clc
and
loop
loopne
faddp
sub
mov
ret
push
and
call
adc
or
inc
xchg
push
or
fldl
or
xchg
adc
pop
dec
dec
jno
rcrl
scas
cld
icebp
pop
sbb
shlb
push
and
cmpsl
pop
in
in
xchg
xchg
or
and
mov
arpl
ja
push
mov
mov
out
push
fadds
lods
and
push
lea
test
add
xchg
push
sbb
jae
sub
mov
jb
adc
addb
adc
push
repz
pop
js
mov
sahf
fwait
mov
pop
rolb
or
cmpsb
push
out
mov
movsl
fdivrl
out
leave
push
xchg
cwtl
aaa
add
in
cwtl
insb
mov
fcoml
jmp
fcoms
sti
mov
jo
push
testl
nop
sub
adc
pop
rcl
push
cs
call
pop
mov
xor
sbb
and
test
int3
jg
add
ret
test
inc
or
ss
xor
jo
shl
shl
outsl
lahf
dec
cmp
int3
fidivs
or
call
imull
mov
lock
xor
sbb
add
les
test
push
mov
loope
pop
in
xchg
dec
adcl
or
sub
add
movsl
push
mov
ds
lods
mov
nop
shl
addr16
ljmp
lods
aad
lret
in
daa
cmp
sbb
or
out
shll
dec
sbb
lcall
rcrb
jno
jno
sub
xchg
inc
test
and
mov
sub
repz
dec
mov
insb
inc
inc
divb
inc
scas
cmc
in
xchg
fimuls
std
adc
mov
add
daa
stos
in
pop
jno
push
xor
lea
fisubl
lods
adc
stos
dec
adc
mov
icebp
inc
jp
push
je
jge
mov
loopne
jecxz
add
pop
jg
sub
xchg
mov
and
adc
pop
mov
dec
cli
or
xchg
icebp
mov
inc
sbb
out
sub
clc
sub
push
push
test
call
hlt
repz
pop
or
lods
mov
call
push
lret
jae
pop
push
sub
jo
xlat
jo
add
out
decb
fisttps
rep
test
call
scas
dec
pusha
out
cmp
gs
or
std
mov
mov
hlt
pop
xchg
jmp
ds
int3
and
clc
mov
inc
mov
mov
mov
jns
int3
stos
imull
push
add
mov
cmp
call
add
sub
outsl
and
push
pushf
jno
fisubs
scas
pusha
test
or
dec
or
adc
sbb
pop
dec
inc
idivb
add
xchg
add
push
push
push
mov
push
cmp
in
mov
xchg
mov
insl
fwait
lahf
inc
xchg
ret
out
test
dec
cli
add
mov
or
sbb
push
cmp
addr16
bound
dec
cld
fdivs
popa
fisubs
addl
sarl
mov
jbe
daa
push
adc
push
jno
cmp
fwait
lcall
movsb
pop
adc
inc
leave
fstpt
sbb
mov
cltd
ja
jl
add
clc
push
lret
push
lcall
pop
pop
inc
in
in
cmp
repz
xchg
inc
psubusb
adc
outsb
inc
int3
push
xchg
cmc
dec
inc
faddl
lret
xchg
scas
arpl
rolb
sbb
sbb
daa
add
cmp
pop
or
dec
xchg
jo
adc
xorb
arpl
xor
cltd
and
aas
lea
or
inc
add
fistpl
lds
xor
add
xchg
adc
lret
imul
ret
or
jae
mov
add
sub
or
sbb
stc
mov
push
inc
pusha
mov
pop
pop
in
cmp
cld
fnstenv
mov
stos
dec
bound
dec
mov
movsl
sub
rol
movsl
pop
push
cmp
push
dec
outsb
in
mov
fsubrl
jno
adc
pop
jge
nop
pop
fiaddl
mov
divb
inc
arpl
loop
das
sbb
mov
dec
mov
enter
mov
lahf
xchg
insb
add
cmp
dec
stc
gs
ret
mov
xchg
mov
inc
testb
mov
xor
push
lret
pop
mov
dec
dec
shlb
sub
sub
jecxz
push
xlat
lock
and
mov
lret
add
xor
clc
sbb
nop
imul
jg
outsl
xchg
xchg
insl
xor
fcomi
mov
mov
test
sbb
pop
jb
push
imul
mov
push
mov
rol
scas
neg
into
daa
push
mov
jg
sub
lods
or
imul
cmp
out
and
xchg
aam
mov
enter
inc
cmp
fsubl
dec
bound
pop
dec
subl
addl
cli
sub
pushf
icebp
sbb
fcmovne
das
in
xor
std
add
fmull
sbb
aas
push
push
sti
sub
lcall
push
out
push
pop
and
fiadds
test
mov
mov
dec
inc
hlt
adc
mov
shlb
sub
mov
addb
mov
lcall
in
mov
cmp
cmpsl
loope
lock
out
pop
jo
lcall
out
pop
xor
les
lods
je
out
add
lods
mov
out
push
sub
scas
fcmovnb
xor
imul
jae
in
mov
fs
add
out
hlt
cmp
push
inc
test
xor
arpl
dec
cmpsb
cmpsl
std
dec
movsl
inc
xchg
movsl
mov
push
jecxz
jp
xchg
mov
xor
dec
fidivl
fdivs
cmpsb
inc
sarl
cmp
xchg
fwait
xor
pop
xor
xor
inc
int3
mulb
adc
dec
jmp
pop
sti
push
lods
fwait
movsb
outsl
and
pop
hlt
mov
mov
xchg
mov
in
push
cmp
imul
in
rorl
xchg
jbe
mov
and
pushf
daa
out
pop
pop
add
push
fwait
jmp
cmp
popf
xor
jbe
sbb
shl
cmpsl
in
xchg
cld
and
ss
dec
loopne
add
repz
sub
ds
sub
add
xor
cmpsl
fnstsw
out
in
adc
shll
iret
cltd
dec
adcb
mov
xor
rorb
jp
push
push
cmp
jnp
add
xor
mov
sbbb
repnz
dec
xchg
and
je
mov
lods
cmpsl
sub
leave
fcoms
jno
and
and
pop
xlat
jns
xlat
inc
in
js
jl
jp
decb
jno
stos
or
and
jns
movq
stc
loopne
fldl
in
push
mov
or
pop
mov
xor
sbb
shll
mov
cmp
bound
cwtl
xchg
lcall
clc
arpl
adc
pop
xor
adc
push
jl
daa
jge
jns
loopne
and
prefetch
cmpl
test
xor
test
lret
daa
test
jb
jo
add
fdivrs
pop
adc
cmp
mov
mov
loope
stos
sbb
movsb
xor
or
fimull
mulb
lea
mov
fs
push
and
mov
jg
pusha
popf
aaa
xchg
rolb
fwait
cmpsl
aam
pop
mov
dec
sar
lock
sub
mov
mov
add
icebp
fmull
xchg
std
enter
sbb
adc
push
jecxz
fcomps
xchg
xchg
out
sbb
push
enter
imul
pushf
js
cwtl
xchg
sbb
fcomi
addr16
jbe
ret
shlb
sub
lds
inc
sarb
mov
mov
pop
sbb
pop
outsl
mov
xchg
clc
sub
adc
lock
lock
hlt
lock
xlat
dec
push
mov
sub
sub
pop
inc
xchg
lea
jae
das
dec
iret
inc
mov
lods
daa
adc
push
and
loope
shll
mov
or
test
test
pop
fldcw
cmp
aas
out
clc
mov
push
dec
outsb
movsl
test
ret
dec
sbb
mov
mov
shrb
dec
out
rorb
pop
sub
mov
dec
pop
aaa
js
xor
jg
out
in
fbstp
and
nop
mov
and
rcrb
inc
gs
rolb
adc
mov
lods
bndldx
cmp
shll
roll
shl
and
pop
sub
call
sahf
dec
rcl
lods
cmpsl
mov
sbb
sub
enter
mov
mov
lcall
testb
fs
push
inc
sub
pop
sbb
pop
pushl
inc
je
push
xchg
mov
jb
push
or
fwait
or
inc
sahf
fs
shll
sub
imul
cltd
std
lret
dec
adc
jmp
test
mov
cmc
cmp
adc
mov
pop
dec
sti
sbb
inc
sarl
add
in
push
sahf
mov
gs
mov
jb
movsb
dec
lock
or
dec
mov
cmp
std
test
sbb
jbe
mov
jg
flds
pop
aas
imul
jg
jbe
push
out
repz
insb
inc
loope
outsb
int3
clc
outsl
cmpsl
adcl
out
outsl
lock
popf
insl
mov
mov
add
enter
test
fistl
mov
lea
arpl
adc
lock
dec
push
adcb
pop
mov
idivl
jg
xchg
enter
jmp
ss
cmp
inc
add
repz
xor
lret
aam
mov
aam
js
aam
push
outsl
imul
lret
jmp
pop
call
xorb
shl
inc
jnp
jno
popf
lret
repnz
jns
push
and
pop
sbb
ja
xor
ret
incb
inc
popf
mov
fisttpl
jb
jecxz
jle
call
sub
fdivl
jo
push
add
jecxz
cwtl
adc
insb
cmp
aam
shl
lret
xor
in
jmp
push
int3
fsts
pushf
push
rorl
mov
and
lds
mov
jl
mov
icebp
je
loop
mov
xchg
daa
lock
pop
out
add
or
add
inc
jb
or
dec
mov
sub
pop
sbb
pop
sub
out
cwtl
in
xchg
pusha
cld
sbb
jle
imul
pop
outsl
test
mov
pop
sub
adc
fdivp
sarb
les
xor
cmpsl
std
movsb
and
cld
fmulp
inc
subl
lods
sub
add
test
mov
or
loope
imul
adc
fadd
sub
pop
test
shrl
adc
test
adc
fcomps
rcrb
inc
push
movsl
outsb
pop
sbb
stos
test
std
inc
xchg
repz
aaa
in
out
xchg
movsl
repz
pop
pop
insl
xor
repz
gs
les
es
fdivl
xor
test
inc
daa
mov
gs
xor
fisubl
inc
cmpsb
adc
inc
and
jae
icebp
inc
cmc
in
fisubl
mov
or
dec
mov
mov
ljmp
mov
js
push
jb
loope
imul
and
pop
mov
mov
mov
pop
enter
jle
js
xor
jne
ret
mov
mov
out
insb
stos
lock
pop
xor
and
adc
sub
mov
mov
lea
push
xlat
outsl
sub
add
lods
push
je
sbb
xchg
or
popa
aam
mov
sbb
sbb
mov
bound
dec
inc
pop
enter
fnstcw
jp
pop
xchg
mov
and
lcall
sub
fisttpll
scas
cmp
push
rcl
sbb
mov
mov
cli
xchg
ljmp
das
xchg
sub
shlb
pop
sti
into
inc
fimuls
dec
fisubrl
stc
xor
subb
inc
jnp
inc
jae
cmpsb
jb
push
sbb
jno
adc
mov
mov
dec
jecxz
out
es
mov
js
js
cmpsl
mov
mov
iret
fidivrs
sbb
add
mov
bound
ret
int3
adc
roll
dec
leave
mov
mov
mov
dec
xor
cmp
ret
fldcw
cli
out
ret
dec
ret
imul
mov
popf
dec
push
push
jns
and
xchg
cwtl
mov
data16
mov
lds
dec
cltd
mov
enter
add
sub
loop
mov
sub
mov
int3
scas
pop
insb
aam
sub
add
popf
jp
bound
pop
dec
lds
xchg
addr16
adc
jl
lods
fcmovbe
out
rorb
push
cltd
imul
add
cmp
loopne
pushf
add
push
orb
fisttpll
inc
sarb
sbb
push
ja
sub
icebp
xchg
pushf
jmp
fisubrs
mov
mov
xchg
jmp
xor
mov
sub
xor
dec
pop
mov
pop
inc
iret
out
xchg
xchg
pop
pop
lds
divb
adc
test
and
pop
in
inc
jno
cmc
sub
jmp
cmp
sbb
adc
and
mov
cs
iret
xor
addr16
bound
imul
mov
js
mov
imul
addb
fdivrl
push
jmp
add
ret
cmc
or
test
in
dec
and
unpckhps
jbe
add
aam
insb
sbb
mov
or
mov
ret
in
push
cmpsl
out
mov
pop
cmpsl
aad
push
stos
icebp
js
pop
inc
int
xor
lret
out
mov
push
mov
test
addr16
out
icebp
mov
imul
lea
cwtl
lds
adc
push
gs
iret
xchg
aam
sbb
into
je
xor
out
pop
imulb
sub
insb
inc
adc
xchg
cwtl
jmp
repz
xchg
rcrb
dec
xor
inc
xor
adc
lahf
jb
xorb
pop
popa
mov
mov
jb
ja
int3
dec
loopne
psubsb
mov
jbe
jns
les
fistpll
add
ret
out
test
movntq
pusha
js
mov
jle
add
insl
push
test
movsbl
loope
mov
cltd
push
cmpsl
and
std
mov
sahf
shll
je
cmp
add
dec
sti
xor
js
sub
push
jae
and
add
insl
arpl
sahf
or
mov
out
xor
outsl
cmpsb
push
ret
sarl
sbb
xor
add
cmp
jns
imul
xchg
jno
mov
mov
lods
aam
push
mov
in
pop
rcrb
lods
cltd
pop
ljmp
push
xor
pop
xor
dec
sbb
jbe
es
xchg
jbe
xchg
mov
or
xchg
div
js
sbb
lods
test
shrl
adc
sub
test
push
lret
sub
sahf
add
nop
pop
xor
repnz
mov
loope
xor
addb
outsl
nop
sarb
dec
fimull
jl
ljmp
popf
push
mov
pop
sbb
dec
in
iret
cmp
cmp
push
es
shrl
rorl
inc
or
adc
pop
pop
mov
vmovaps
jnp
xchg
std
dec
inc
rolb
aaa
lahf
push
pop
inc
jne
dec
loop
xor
add
bound
sub
mov
add
aaa
mov
or
add
push
pop
or
pusha
outsb
adcl
jnp
push
xchg
cltd
adc
addl
and
cmp
pop
or
cli
adc
sbbl
ja
xor
xlat
mov
sbb
lods
rclb
aas
lods
sub
pop
mov
jecxz
cmp
push
in
jbe
lahf
paddb
mov
decl
jmp
cli
inc
mov
cli
inc
aas
nop
test
ret
or
cld
cs
icebp
test
mov
cmpsb
mov
xchg
or
sbb
pop
aas
lret
or
ds
aam
lock
nop
dec
cmp
daa
sbb
push
mov
orb
pop
add
push
pop
test
cmp
outsl
arpl
push
rorl
out
adc
xchg
cmpsl
cmp
jmp
lods
pushf
insl
notb
pop
inc
inc
out
adc
adc
into
and
daa
xchg
fmull
mov
lods
mov
lret
das
adc
lods
mov
sub
fwait
add
push
adcl
mov
repz
or
lret
dec
inc
stos
xchg
test
sub
and
icebp
repnz
rcll
cmc
pop
gs
int
in
jge
xor
sbb
pop
es
push
cmp
mov
aam
sbb
lds
mov
gs
fsts
or
mov
xor
mov
jns
fstl
and
jns
int
adc
lds
dec
mov
sub
adc
rcll
lahf
push
and
sbbl
sub
mov
mov
imul
push
call
fiadds
jo
ja
outsb
mov
test
imul
ret
adc
or
mov
ficomps
adc
push
dec
nop
lock
je
cmp
jns
dec
rcr
ss
xchg
pop
sub
sbb
cwtl
lods
aad
mov
and
push
into
inc
loopne
fnstcw
mov
sbb
jno
adc
sbb
lods
xchg
stos
xor
mov
mov
sub
cmp
sub
popl
xchg
aaa
hlt
push
outsb
into
lahf
xchg
in
push
pop
lret
sarb
adc
adc
mov
js
push
lret
pop
push
cltd
into
push
cld
mov
mov
cmp
mov
inc
cmpsl
clc
popa
jmp
push
push
mov
ss
roll
cmp
jecxz
aaa
incb
pushf
inc
lods
stos
dec
and
cmp
les
sbb
xor
stos
push
jle
imulb
hlt
inc
ss
jo
jmp
int
push
cmp
ret
push
sbb
into
sbb
adc
cmp
icebp
mov
iret
adc
fstpl
and
lahf
inc
stos
xor
mov
xchg
shlb
inc
insb
fs
aaa
xchg
ficompl
dec
idivl
sub
mov
lcall
xor
fisubrl
test
out
test
xchg
shlb
in
sub
popf
lods
cld
push
imul
enter
or
testb
cmp
mov
psubw
insl
into
insb
int
cli
mov
mov
mov
cmp
or
push
into
ficompl
lret
dec
dec
ficomps
or
mov
add
mov
or
mov
or
jcxz
ljmp
pop
lret
rorl
adc
push
inc
push
clc
das
mov
loopne
fdivrl
outsb
inc
dec
cmp
adc
lret
adc
fwait
sahf
pop
jecxz
sbb
dec
hlt
sbb
push
cmp
test
adc
ret
aas
push
js
and
insb
dec
mov
pushf
push
inc
movsl
testl
rclb
xlat
std
cmpsl
mov
xor
mov
out
dec
int
mov
lahf
xchg
sbb
adc
fsub
or
movsl
movsb
xchg
push
ss
xor
call
data16
mov
inc
xchg
jmp
aas
and
inc
sub
xor
out
mov
out
idivl
and
jp
cltd
dec
int
ja
push
scas
enter
and
in
jnp
stc
fistpl
fcmovb
ret
mov
inc
pop
jae
cmp
mov
push
out
inc
and
rol
outsb
cwtl
fcoms
pop
aam
or
ss
or
fsts
fisubrs
sahf
sub
pop
xchg
sub
mov
xchg
mov
rorb
imul
ror
or
cvtpi2ps
xchg
sub
dec
in
or
daa
dec
sub
pop
scas
andl
pop
leave
stos
or
xchg
jns
add
std
outsl
popa
repz
sbb
imul
jmp
sidtl
adc
mov
pop
xor
repnz
xchg
dec
mov
add
addl
fdivs
pop
xor
in
call
inc
sti
sbb
lret
cmp
push
jge
mov
lods
movsl
movsl
xorb
or
mov
ret
pop
inc
xchg
pop
mov
daa
nop
adc
ret
xchg
xor
repz
sbb
dec
jmp
bound
dec
int
cmp
inc
xchg
cmp
mov
cld
es
pop
mov
jecxz
stos
mov
pop
pop
fisttpl
es
shrb
jge
lahf
sub
lock
and
mov
scas
fsqrt
movsb
pop
dec
pop
popa
lea
lahf
pop
inc
sub
cmp
sbb
cwtl
lahf
js
push
pop
xchg
pop
dec
pusha
jb
in
mov
cmp
dec
lea
ss
shlb
mov
test
rorb
popf
push
add
leave
loopne
xchg
enter
jmp
adc
movsl
adc
cmp
dec
or
mov
dec
push
adc
push
jnp
les
push
mov
mov
pushf
paddusb
sbb
sub
inc
mov
lods
insb
fucompp
pop
mov
call
or
add
xchg
cmp
add
pusha
hlt
std
adc
and
loope
mov
enter
cmc
out
popf
repnz
mov
ds
inc
mov
cmc
lds
pop
or
inc
jmp
xchg
call
pop
pop
data16
mov
push
push
and
xchg
mov
lahf
pop
mov
mov
dec
daa
hlt
and
inc
jbe
mov
rcll
in
pop
push
nop
test
addb
in
xchg
dec
add
imul
stos
je,pt
jge
mov
daa
xlat
dec
aam
stos
pop
mov
xchg
daa
ds
imul
push
lds
add
inc
dec
ficoml
cmp
ss
test
mov
mov
xchg
pushw
cmpsb
out
jnp
stos
stos
cld
pusha
mov
mov
push
jg
dec
xchg
sbb
ss
dec
stos
push
lahf
enter
xor
les
fs
cmpsb
addr16
mov
pushf
mov
arpl
or
jo
mov
pop
test
insb
pop
nop
outsl
push
sbb
popf
roll
lret
stc
rcrb
ret
mov
out
sti
or
and
jl
stos
movsb
test
push
pusha
shl
push
sbb
or
add
testl
xor
xchg
sub
ja
pop
pop
icebp
xchg
push
gs
call
xor
jb
sub
adc
inc
xlat
mov
ja
sarb
imul
loop
out
fnstsw
and
jle
inc
cmp
jbe
pusha
fisubs
mov
ss
push
call
shrb
jg
rcl
jecxz
cld
sub
outsl
push
lods
or
inc
rcr
mov
mov
ret
fwait
test
fistl
jno
in
sbb
hlt
inc
int
fistpl
ja
lods
and
idivl
cmpsl
cmpsb
dec
std
rorb
cs
xchg
aam
lods
mov
sti
mov
cmp
dec
leave
movsb
adc
in
je
inc
jecxz
xor
adcl
inc
adc
xchg
in
cmpsl
jp
cmp
cli
and
mov
add
push
pop
pop
dec
mov
loope
pop
outsb
xchg
jecxz
pop
shlb
pop
jns
cmp
mov
mov
fldl
cwtl
sub
mov
das
call
inc
xchg
xor
aad
sub
jmp
jns
and
inc
je
xchg
add
and
xor
in
xor
jne
test
mov
addl
enter
add
xchg
add
rolb
sbb
add
xor
jecxz
addr16
int
incl
xchg
hlt
xchg
in
mov
lods
cmp
test
fdivr
adc
add
jecxz
and
mov
push
scas
mov
out
and
test
add
popl
es
dec
scas
pop
nop
jnp
ret
and
out
iret
outsl
adc
daa
clc
add
sar
in
js
xchg
repz
and
adc
lret
packsswb
cli
mov
cmp
lea
xchg
ds
jmp
mov
fstpt
add
loope
mov
scas
lods
lcall
or
xchg
mov
fwait
xchg
cmp
movsb
aam
xchg
into
inc
icebp
stc
add
test
push
adc
pop
jmp
mov
es
divl
ja
in
adc
or
mov
popa
into
pop
inc
dec
add
add
mov
add
cmpsl
iret
cwtl
in
mov
or
pop
jl
es
mov
dec
stc
or
push
or
out
sahf
mov
lods
addr16
push
pop
sub
rcrl
xchg
mov
and
je
xchg
shll
adc
adc
aaa
push
mov
inc
cmp
in
sbb
jae
add
cli
mov
xchg
jbe
sbb
sbbl
sub
bnd
adc
fsubs
fs
jns
mov
outsb
add
popf
cld
aam
and
mov
mov
mov
adc
pop
push
fwait
add
xor
andl
sub
sti
lret
jb
icebp
adc
loop
shl
mov
xchg
inc
mov
jmp
mov
test
mov
xchg
xchg
pop
dec
in
xchg
sbb
loope
leave
lahf
and
mov
cmp
jge
inc
popa
push
or
add
xlat
sbb
cmpsb
xchg
das
add
rorl
or
mov
aam
jae
pop
xchg
inc
add
cwtl
inc
xchg
scas
dec
or
fsubr
jl
fdivrs
outsb
pop
loope
pop
inc
push
push
outsb
enter
leave
addr16
ret
xor
push
add
arpl
inc
orl
leave
into
leave
pop
sbb
cmp
pop
das
shll
adc
mov
and
sub
cs
mov
lret
iret
ds
push
les
inc
sti
mov
push
lahf
sub
mov
xor
lret
shlb
add
mov
bound
insl
lcall
cltd
and
mov
rorl
dec
xchg
mov
rorb
mov
push
jbe
int3
jbe
aas
sti
addr16
push
insl
and
in
mov
mov
movsb
push
pop
mov
xor
fdivs
mov
jle
dec
mov
xor
repz
test
pop
push
icebp
jb
mov
add
mov
dec
fcoml
jecxz
push
lea
jbe
add
daa
loope
jge
pop
icebp
stos
mov
dec
mov
xchg
pop
aaa
dec
mov
notl
jmp
ljmp
push
movsl
or
cmp
xchg
pop
outsl
add
jno
mov
pmullw
or
rcl
xorb
pop
xchg
jbe
push
dec
aam
lahf
cli
data16
pusha
cmpsb
scas
mov
mov
push
sbb
or
jo
es
movsl
data16
add
cmp
loop
js
roll
or
or
arpl
mov
aas
test
mov
inc
mov
mov
push
cmp
pushf
sbb
punpcklbw
clc
int
je
dec
cmp
clc
jge
cmpsb
sub
mov
cmp
inc
andl
jg
fnstenv
inc
fstl
rol
mov
scas
xor
sbb
sbb
or
hlt
jb
inc
or
xor
mov
cmp
xor
enter
mov
mov
pop
mov
push
out
push
xchg
lret
adc
testl
push
push
inc
push
push
pop
sar
in
or
scas
les
cltd
mov
daa
and
dec
pop
dec
repz
pop
idivb
popf
cld
and
xor
xchg
test
mov
sbb
xchg
les
cli
cmp
repnz
popf
mov
mov
jae
xor
and
clc
jp
test
jo
sub
fbld
and
adc
mov
insl
dec
ret
cmpsl
jns
sub
push
movl
dec
ret
xchg
icebp
add
icebp
negl
sti
loop
mov
push
adc
fldcw
adc
into
cmpsb
shrb
cwtl
jbe
mov
lcall
jnp
insb
push
pop
add
mov
pop
jno
adc
xchg
mov
fdivl
dec
enter
mov
inc
mov
mov
jl
imul
outsl
mov
mov
test
cmp
rorb
mov
sub
mov
inc
push
mov
dec
into
mov
fidivrs
mov
inc
stos
dec
jl
lods
push
xor
push
push
xchg
xor
mov
cmp
mov
sbbl
sub
mov
daa
popa
call
pop
xor
loope
or
sbb
push
mov
jp
xchg
dec
mov
loop
xchg
lds
pop
pop
aaa
pop
lods
xor
and
jns
jge
mov
sti
mov
mov
mov
xor
shrl
loope
adc
sub
nop
mov
dec
sbb
pop
pusha
popf
push
pushf
clc
xchg
adc
add
add
mov
shll
pop
jbe
movb
ja
or
cmp
jmp
adc
bound
test
sti
out
out
std
repz
faddl
inc
push
push
das
adc
sti
or
mov
dec
fidivl
mov
xor
loop
rcll
pop
xchg
jle
jl
stos
sub
jecxz
inc
cmp
lock
das
es
stos
hlt
cmp
push
rcll
inc
pop
imul
in
and
stos
push
test
loopne
imul
ss
dec
and
sbb
je
insb
push
lahf
lods
cs
cmp
insb
in
mov
cmp
mov
subl
lcall
mov
cmc
lods
jge
outsb
int
dec
iret
mov
inc
repnz
mov
je,pn
fstl
add
xor
into
xchg
inc
mov
dec
adc
jmp
or
inc
jnp
fstpt
mov
inc
pop
maxps
jbe
pop
std
rorb
inc
pop
imul
pushf
and
out
adcb
lods
pop
cmp
jb
insl
inc
outsb
stc
mov
fwait
push
andb
adc
nop
aas
xor
int3
adc
pop
imul
cmp
mov
and
rclb
cmp
cmc
kmovw
lret
ret
inc
aad
into
push
dec
andb
and
addr16
int3
ret
add
divl
imul
inc
iret
mov
lea
shrd
jo
leave
or
bound
sub
inc
mov
push
dec
orl
dec
rclb
faddl
mov
hlt
stos
add
adc
mov
sbb
outsl
data16
mov
arpl
test
out
ljmp
mov
fistps
jnp
jp
idivl
mov
divb
ja
pop
mov
ss
les
or
adc
cltd
int3
or
add
push
cmpl
xor
mov
cmp
push
sub
iret
iret
out
dec
xchg
and
xor
mov
sbb
mov
outsb
xchg
and
jno
or
dec
sbb
mov
push
mov
ds
pushf
shr
leave
insb
mov
rcl
cmp
pop
fisttps
push
add
jae
cmp
adc
mov
pop
push
mov
in
sub
scas
repz
test
mov
or
bound
dec
les
mov
mov
imul
setno
and
addb
xchg
dec
push
mov
je
push
sbb
orl
imul
fistpll
cmp
fstl
test
sbb
mov
and
repnz
jbe
sub
inc
sub
adc
test
negl
xlat
push
clc
jno
pop
leave
cmp
daa
sbb
and
aad
rol
or
es
shll
xor
mov
push
dec
je
loopne
std
push
sahf
dec
scas
outsl
mov
cmpl
int3
test
mov
outsb
dec
sbb
add
sarl
mov
fucomip
sub
mov
push
std
mov
mov
popf
pop
lcall
inc
aaa
xorb
push
int
dec
dec
scas
mov
pop
aaa
inc
mov
test
and
in
repnz
add
andb
adc
adc
cwtl
mov
xor
push
dec
mov
dec
imul
jmp
sub
pop
jne
dec
scas
out
int
fldcw
lcall
loope
mov
and
test
or
fiaddl
aad
xchg
jo
pop
fwait
scas
ljmp
xchg
test
aam
sbb
jno
aaa
jmp
pop
sub
mov
out
test
test
dec
outsl
fwait
adc
push
lods
push
sub
sbb
ljmp
push
fdivl
inc
shll
in
mov
aas
stos
xor
sti
insl
dec
dec
xlat
in
mov
mov
jne
jns
rcll
js
adc
ficomps
cmpsl
adc
cld
ljmp
rolb
push
push
jnp
push
outsb
rcrb
cmpb
daa
xor
in
roll
adc
mov
add
aam
pop
mov
stos
jbe
addr16
or
cli
xchg
mov
mov
and
sub
fstl
ja
stc
xchg
jnp
sbb
cmp
push
es
cli
mov
push
fisubl
lahf
push
inc
cmp
jns
mov
std
dec
xlat
cmc
hlt
and
js
jle
jp
or
xchg
mov
movsl
shll
dec
xchg
sarl
std
daa
lds
xor
adc
sub
das
mov
adc
xchg
xchg
sarb
jecxz
inc
jnp
mov
es
lea
cli
mov
xor
jmp
cmp
xor
xchg
inc
out
aad
shll
addb
sti
add
inc
or
bound
pop
jo
rcll
push
mov
mov
xchg
xchg
jmp
jge
scas
arpl
lret
scas
sub
push
xchg
xchg
xor
cltd
mov
xorl
jne
mov
jns
and
fdivrs
sbb
and
xchg
inc
test
fisttpll
adc
ret
mov
mov
outsl
int3
add
jmp
shl
es
movl
inc
mov
arpl
pop
inc
mov
fnstenv
int
inc
dec
rcl
xor
inc
lods
push
cmpsb
sub
cmp
repnz
insb
call
int3
test
nop
jp
sbb
out
sub
in
outsl
daa
rol
sub
push
pop
ja
andl
movsb
push
push
nop
inc
dec
or
int3
fidivrl
sti
mov
test
add
fcoml
aam
jns
icebp
fistpl
sub
xchg
into
adc
in
data16
test
mov
jmp
mov
inc
xor
inc
add
fnstcw
mov
or
int3
push
pop
shr
push
insl
imul
in
jbe
sti
ret
gs
sbb
adc
or
dec
scas
cltd
sbb
repz
xor
int
pop
and
js
outsl
dec
iret
iret
dec
mov
jmp
push
fwait
pop
ficoms
mov
sub
or
add
cmp
stc
in
es
out
ja
mov
movsl
es
cmc
lret
or
outsl
push
aas
cmc
jno
push
je
jg
insb
popf
adc
xor
cmp
shll
ss
pop
mov
sub
add
inc
fistpl
cmpsb
mov
fdivr
jmp
cltd
and
push
pusha
lret
push
xor
into
push
divl
pop
and
or
ja
push
daa
add
dec
test
sub
pop
pushf
lods
and
pop
fidivl
dec
out
fwait
add
inc
adc
aam
or
cmp
out
sti
push
stos
mov
test
das
sub
adc
xor
xchg
sbb
outsl
out
add
iret
mov
outsb
jmp
sub
push
in
jmp
lds
mov
sub
sbb
inc
lds
movsl
iret
out
jge
cmp
add
push
jge
mov
mov
data16
cwtl
fcoms
mov
aam
pop
in
jge
inc
lret
mov
sbb
cmp
and
push
jl
sbb
test
inc
mov
iret
in
into
sub
sbb
push
lods
jle
dec
mov
xor
or
pop
mov
push
lea
xchg
out
test
add
scas
fmuls
out
pop
add
cld
es
jmp
stos
or
mov
fstl
mov
shlb
dec
ret
test
scas
pushf
movsb
xchg
stos
push
lock
xor
or
adc
mov
and
repnz
arpl
pop
fidivs
sub
push
cwtl
divb
enter
add
std
vpsubq
loop
fcoms
stc
push
add
in
out
fucomp
jge
cmc
ret
pop
cmp
mov
mov
mov
mov
push
shlb
jnp
adc
and
clc
adc
mov
imul
add
mov
push
int3
jns
lods
into
push
mov
jne
enter
pop
mov
fcompl
xor
cld
addr16
mov
pop
sub
stos
adc
fld
leave
mov
test
dec
data16
les
cmp
jae
dec
les
mov
daa
pusha
out
aas
stos
shll
push
jno
add
in
loopne
xchg
pop
mov
mov
outsl
mov
lret
push
and
ja
xor
jae
sbb
int3
xchg
push
es
ret
inc
and
les
das
pop
add
ss
int3
bound
push
xchg
mov
in
pop
fs
mov
jmp
aas
fucomip
enter
xlat
adcb
xchg
mov
mov
ss
push
cmp
mov
or
lds
sti
aaa
std
sub
jle
lds
lahf
push
aad
xor
pop
into
pop
andb
imul
xor
xchg
aam
cmpsb
scas
dec
aam
xchg
scas
fwait
cmp
ja
int
into
fmull
sbb
fcomip
sbb
sbb
adc
cli
sub
or
stos
mov
cli
cmp
mov
loop
dec
pop
and
cmp
mov
xchg
adc
rep
fidivrl
int3
sub
ljmp
inc
mov
stos
pushf
popf
sahf
mov
or
xchg
fnstcw
and
andl
js
xor
pop
mov
mov
scas
mov
outsl
mull
push
lcall
push
add
int
ret
insb
mov
mov
sub
hlt
pop
add
aad
clc
cmp
and
aad
mov
jae
dec
push
pop
xchg
je
pusha
push
out
jle
fwait
or
push
aam
dec
pop
jle
adc
mov
leave
add
sbb
add
lcall
nop
fmuls
xor
das
je
dec
ljmp
shrb
stos
pop
fildl
lahf
add
pminsw
add
loopne
jns
mov
js
out
fbld
in
sub
push
pusha
cmp
cmc
shr
mov
ljmp
repnz
push
xchg
mov
add
adc
sub
shlb
add
xchg
jb
jbe
and
decl
test
add
ja
add
mov
das
jns
imul
mov
ret
mov
mov
xor
mov
cmp
jnp
xchg
insl
or
xchg
cmp
pop
mov
xor
pushf
mov
push
sarl
pop
int
rol
lds
jne
scas
mov
jecxz
or
or
fidivrl
ja
or
arpl
enter
dec
push
sbb
adc
lods
push
aam
ficoms
pop
subb
pop
test
mov
out
inc
movsb
cltd
pop
lea
notl
out
and
cmp
add
mov
movaps
push
push
insl
inc
sub
incb
cmp
xchg
sbb
pop
cli
cmp
push
arpl
pusha
sti
sub
leave
add
jge
xor
sub
les
popa
push
cmpsl
add
dec
cmpsb
scas
rcrb
test
dec
incb
or
cwtl
hlt
test
or
inc
jae
inc
push
push
xor
jg
leave
add
cmp
mov
cltd
add
xor
andb
mov
lcall
mov
imul
test
adc
and
push
ja
mov
outsl
into
scas
mov
adc
xchg
out
imul
mov
shlb
hlt
outsb
cs
arpl
loopne
scas
pop
notl
push
sub
lsl
rcrl
idivl
stc
pop
lahf
sbb
stos
movsb
dec
in
ljmp
jecxz
dec
lahf
sub
fcomi
mov
lock
xchg
cmp
xor
bound
in
lahf
lcall
stc
filds
sub
adc
dec
aas
fsub
xlat
iret
popa
lahf
adc
and
or
jmp
jo
enter
fisubl
out
mov
and
ss
xchg
jne
jns
cmpsl
or
adc
mov
lea
mov
test
cmpsb
aad
sahf
push
testb
and
push
inc
dec
in
jns
ret
pop
pushl
iret
test
xchg
adc
or
pop
mov
push
cltd
and
fs
push
mov
je
mov
test
imul
add
xor
pop
adc
sub
std
ret
mov
nop
fnsave
lods
lcall
imul
push
mov
add
lea
mov
sbb
lret
mov
int
popa
mov
and
push
or
pop
xchg
mov
leave
mov
xchg
cmpsl
test
outsl
fs
sbb
inc
das
jbe
adc
push
daa
or
out
push
sbb
sub
push
ljmp
rcrl
xor
fwait
jecxz
scas
dec
daa
inc
stc
das
rorb
push
mov
and
mov
int3
fwait
lea
pop
add
mov
xchg
int
sbb
fs
gs
push
fldenv
pop
mov
sub
or
loop
jle
fsubl
hlt
jg
mov
outsb
adc
xchg
pop
adc
xor
sub
lahf
cs
out
dec
push
inc
lcall
inc
fnstcw
mov
arpl
push
sti
pop
cltd
xor
xor
sub
out
aas
mov
js
pop
jno
jl
inc
xchg
cmp
daa
mov
and
mov
and
fnstsw
movsl
jmp
insb
inc
outsl
lds
jae
sbb
inc
movsb
mov
iret
cli
ja
aas
push
lods
and
jne
fsts
fistpl
mov
nop
test
gs
fidivrs
data16
in
fld
inc
aas
push
mov
in
movsl
imul
out
push
int3
sbb
push
das
and
mov
adc
jns
jne
ljmp
jnp
stc
mov
cs
sbb
lcall
fstl
in
adc
cmp
aas
cmp
sti
js
pop
imul
jno
imul
xor
xchg
xchg
sti
cmc
add
xchg
cmp
lds
mov
in
mov
mov
or
imul
xor
enter
mov
push
je,pt
int3
jbe
pusha
pop
cmp
iret
aam
jns
lds
out
mov
sbb
jb
mov
sub
imul
repz
mov
fimull
cmpsb
jge
mov
or
or
and
jp
fs
test
ret
add
add
and
ss
sti
cmp
daa
std
es
dec
mov
cmp
fisubs
fnsave
mov
mov
push
add
push
fidivs
lock
cltd
cmp
jp
aaa
test
jo
mov
mov
sub
push
ja
repnz
or
xlat
jmp
mull
imul
shlb
pop
push
outsl
push
xchg
fldcw
or
pop
xchg
mov
roll
xchg
sbb
sarl
push
test
pop
call
scas
jb
rclb
mov
hlt
test
je
sbb
push
push
mov
lcall
repnz
cmc
xchg
cld
fstpt
and
hlt
mov
aad
jmp
call
dec
mov
sbb
aas
pop
hlt
sarb
pop
xor
gs
pop
xchg
cli
cmp
add
sbb
test
jne
imulb
popa
aaa
mov
cmp
push
cs
sbb
sbb
mov
sbb
jnp
xchg
loope
insl
fdivrs
pop
and
lods
enter
dec
lds
fidivrs
mov
and
inc
hlt
insb
fbld
sub
xor
and
movsl
sahf
mov
mov
nop
dec
lret
adcl
xchg
shrb
jmp
loopne
std
dec
scas
stos
or
bound
sbb
aad
sub
mov
imul
push
lret
jne
push
cli
lret
rcr
cmpsb
enter
fldcw
ja,pt
repnz
jmp
lods
dec
jb
or
or
fbld
sub
aaa
xchg
dec
push
lock
mov
lret
nop
ret
adc
sub
iret
movhps
and
push
ljmp
jmp
fistpl
daa
fucom
movsb
mov
dec
movsl
sbb
mov
mov
sbb
jecxz
xchg
jae
mov
sbb
lods
addr16
test
or
mov
push
ret
cmp
ss
mov
jle
inc
inc
popa
push
jo
or
xchg
fnstcw
cmc
ljmp
hlt
mov
in
cmp
fildl
add
sbb
and
adc
push
xor
cli
sbb
push
xlat
lret
adc
xchg
pop
lea
lods
in
mov
pop
push
inc
push
inc
add
cli
sti
out
pop
scas
or
jne
push
add
call
pop
pop
jne
jl
orb
test
dec
mov
inc
jmp
sahf
ret
xor
adc
mov
mov
jg
js
out
in
cmp
push
dec
xor
and
and
addr16
negb
mov
mov
jp
imul
int
cmp
pavgw
clc
scas
sbb
xor
and
nop
nop
pusha
fisubrs
push
cld
cmp
fidivs
ret
test
dec
dec
pop
pop
jmp
out
enter
fldt
adc
jns
fcompl
mov
xchg
mov
and
jmp
lret
add
out
or
pop
sub
jb
mov
aaa
mov
in
sub
and
xor
pop
dec
inc
push
xor
jl
push
dec
data16
lock
les
in
add
mov
inc
test
inc
shlb
mov
daa
xor
push
adc
cmpsb
mov
cmp
fnstsw
sub
adc
adc
sbb
xchg
mov
int
pop
scas
fucomi
mov
push
out
lods
les
cld
xor
inc
push
mov
dec
mov
xor
mov
mov
loop
xor
lods
lea
cmp
sub
loopne
mov
test
jno
outsl
dec
fs
ss
xchg
loop
or
fstpt
and
test
in
mov
jg
inc
fsubl
add
mov
xchg
sbb
gs
and
faddl
inc
out
jno
movsb
pop
add
loop
stos
cmovb
daa
pop
jmp
adc
adc
xchg
jns
jg
push
push
mov
imul
and
sub
add
add
stos
ficoms
push
icebp
mov
jle
fbstp
movsl
pop
xchg
or
push
jle
xor
test
leave
dec
sbb
repnz
popf
cwtl
xor
testl
cmpsb
loope
or
in
sbb
roll
call
or
mov
fsub
xor
sbbb
xor
shlb
mov
xorb
cmp
sbb
nop
add
add
jg
dec
cmpsl
mov
out
ja
cmp
cmp
inc
mov
push
lret
inc
test
sbb
add
mov
push
dec
dec
cmp
mov
ficompl
shrb
dec
push
insb
sbb
xchg
mov
decl
enter
adc
jle
mov
leave
icebp
push
pusha
sbb
aam
rol
fwait
dec
fistl
inc
xchg
out
sub
mov
mov
xchg
pusha
enter
or
push
or
and
pop
or
addl
mov
daa
in
aad
mov
inc
popa
or
push
mov
push
pop
daa
popl
imul
cmp
sahf
add
dec
call
sahf
adc
pop
mov
scas
aad
mov
nop
add
mov
pop
or
in
inc
pop
mov
inc
and
add
clts
pop
rclb
mov
jnp
pop
jnp
pop
fnstenv
outsl
jg
inc
push
pop
and
jns
int
vpmovwb
cmp
jg
pop
push
cmpsl
orb
adc
mov
jnp
mov
mov
jo
and
sub
shr
mov
clc
subl
fnstenv
aaa
fisubrl
fwait
outsl
fiadds
push
mov
je
rolb
int
mov
shll
in
insl
dec
dec
mov
add
add
jns
push
pop
xchg
insl
cmp
cmp
into
or
lahf
popa
adc
std
cmpsb
out
sahf
inc
in
stc
push
lods
dec
jl
xchg
add
outsb
pop
mov
push
push
loop
leave
fsubr
aad
inc
pop
xchg
push
xchg
pop
sub
aad
push
stc
decl
mov
jg
test
pop
cmp
int
fs
sbb
add
inc
cmp
cld
pop
or
push
xlat
icebp
and
mov
les
or
push
lcall
fwait
and
shrl
cld
xorl
sarl
lods
add
ret
scas
in
insl
mov
inc
or
stc
add
adc
push
fmull
filds
jne,pt
or
pop
int3
or
jmp
ror
mov
insb
call
xchg
popa
out
ret
aaa
fists
int
adc
mov
mov
mov
mov
xlat
xor
lret
fstp
cli
mov
fldenv
gs
inc
mov
mov
test
mov
inc
inc
cli
xchg
push
jno
out
jmp
mov
mov
mov
inc
pop
js
mov
mov
cmp
mov
dec
cmp
cmp
test
xlat
sub
xchg
insb
and
arpl
mov
jnp
frstor
jecxz,pn
dec
jecxz
aam
xchg
pop
int3
or
fimuls
cwtl
jbe
mov
leave
cmp
cmp
repnz
push
shrl
jne
fldenv
sbb
push
inc
popa
gs
jg
scas
out
mov
mov
sub
pop
dec
cmpsb
dec
mov
jns
xor
ja
stos
fyl2xp1
mov
dec
jns
mov
loop
pop
dec
addr16
int3
pop
and
adc
das
push
lea
xor
cli
iret
in
cmpsl
dec
jo
out
fdivs
dec
bound
or
gs
pop
mov
mov
mov
fimull
add
jl
cmpsb
xlat
shrl
pop
push
in
jmp
mov
xor
int3
ja
add
lods
xor
sub
imul
mov
mov
icebp
pop
pop
inc
hlt
pop
aas
push
icebp
test
xorb
sti
xchg
inc
test
and
loope
push
xchg
popa
jge
push
add
imul
or
aam
fidivrs
jns
jg
cwtl
scas
jmp
rclb
fisubrl
in
jmp
mov
mov
loop
mov
dec
outsl
scas
inc
dec
lods
add
daa
push
adc
aad
mov
iret
jmp
addl
and
sbb
jmp
pop
popf
cmp
fisttpll
jmp
pop
mov
sbb
add
ss
pop
outsb
xchg
inc
push
cmp
adc
pop
ret
mov
xor
sbb
test
les
add
stos
loop
inc
dec
loope
xchg
pop
popf
test
xchg
imul
pop
insl
scas
push
shrb
into
std
jns
mov
push
xchg
outsb
cltd
arpl
lret
xlat
push
sti
push
cmc
fs
cmpsb
dec
add
dec
jne
and
mov
xlat
fimull
add
sub
xor
adc
add
jae
mov
add
or
jno
cmp
inc
cmpsb
int
xchg
call
das
and
jmp
mov
jg
add
mov
inc
and
mov
es
add
pop
jge
jno
cvtpi2ps
mov
loopne
aam
iret
popa
mov
nop
test
jnp
and
inc
add
movsb
aaa
cli
jl
cmc
frstor
je
mov
sbbl
fisubl
and
xchg
xorb
xor
int
inc
dec
mov
stos
sub
negb
dec
mov
call
pop
mov
divl
leave
test
pop
les
aam
or
lret
std
pop
and
test
or
mov
mov
aad
in
mov
imul
pop
mov
rorl
jp
out
or
dec
in
sbb
insl
xor
and
bound
je
adc
pop
mov
or
and
adc
jmp
stc
cwtl
cmp
adc
xchg
js
aam
jnp
xor
insl
cltd
into
xor
mov
mov
aad
mov
ds
inc
stc
dec
xor
mov
add
xchg
lret
pusha
js
jb
inc
xor
loop
out
clc
add
xor
push
and
mov
mov
lea
sub
pop
inc
mov
mov
int3
mov
ljmp
ret
or
dec
and
fcomps
mov
les
rcrl
test
add
mov
imul
jb
call
insl
movsb
jecxz
sub
xor
inc
jo
pop
rcrb
inc
mov
xor
jmp
cmpb
mov
leave
mov
sbb
je
cmpb
sbb
aaa
xlat
pop
pop
inc
or
cmp
jb
jmp
xchg
in
out
lret
outsb
pop
push
and
and
pushf
cmp
xchg
lea
pop
pop
rcrl
test
xor
and
cmp
subb
js
adc
arpl
test
lock
in
pushf
addr16
test
shll
jp
inc
repnz
sub
bound
mov
xchg
test
dec
push
repnz
loope
cmp
mov
fstps
mov
sbbl
jle
in
mov
std
aaa
test
dec
cmp
push
out
xchg
push
mov
mov
add
cmc
testb
cld
popf
or
inc
and
mov
sbb
outsb
or
repnz
sub
test
xor
sbb
dec
outsl
add
inc
test
lods
jmp
cmp
subl
mov
sbb
cltd
sbb
inc
xchg
xor
movsb
add
cmp
mov
out
sahf
and
fisttpl
cmp
pop
ljmp
cmc
push
arpl
mov
sbb
mov
stc
mov
or
jecxz
jg
stc
or
les
xor
es
aaa
dec
leave
stos
sub
dec
insl
or
xchg
lahf
lahf
lods
lcall
cmp
cs
xor
xchg
scas
ljmp
add
ss
shrl
out
cmp
aas
push
push
lcall
outsl
lcall
adc
imul
inc
lcall
xor
cmpsl
inc
and
mov
xor
mov
ds
outsb
xor
into
add
push
xor
je
mov
clc
and
mov
insb
jae
mov
xor
fnstcw
and
mov
inc
ret
mov
and
add
repnz
inc
pushf
cmp
out
sbb
pop
sbb
jnp
sahf
lods
rol
push
cld
xchg
add
xchg
scas
jl
out
cwtl
loopne
fsubr
jb
xchg
pop
inc
push
lahf
daa
adc
pusha
leave
xchg
dec
mov
cs
cmp
pop
das
inc
and
add
sub
jl
or
aaa
sub
push
inc
xor
pop
pop
xchg
sbb
mov
cs
int
sub
out
pop
push
mov
lock
les
out
loopne
pop
int3
popf
sahf
pop
sbb
mov
pop
xor
mov
insl
fistps
shll
pop
mov
pop
aaa
movsb
add
sub
cli
jo
fidivs
xchg
xorl
sbb
daa
movsl
mov
in
hlt
mov
mov
fistpl
adc
stos
jne
mov
pop
inc
inc
lods
test
lea
xchg
pushf
xchg
inc
call
mov
sbb
add
mov
cmp
mov
push
cmp
pop
sbbb
mov
in
pop
add
add
mov
int3
dec
int3
jle
jno
jae
xchg
pop
xchg
addr16
inc
push
pop
cli
dec
jae
mov
daa
pushf
jl
dec
cli
xchg
dec
adc
test
std
xchg
jnp
sbb
mov
aas
cmc
mov
and
inc
roll
or
jge
std
imul
mov
test
adc
loop
sbb
cli
mov
mov
hlt
repz
mov
fbld
fbstp
cmp
xor
lods
xchg
fists
mov
out
gs
cmpsb
dec
dec
fdivrl
movsb
or
fidivrl
adc
sub
test
sbb
mov
loopne
mov
les
loope
jbe
ja
mov
xor
je
es
aaa
sub
aaa
int3
xor
mov
enter
pop
mov
ffree
mov
xor
push
jae
xor
mov
mov
mov
jge
mov
ret
popa
adc
pop
stc
or
jne
mov
jo
or
cmp
xchg
fsin
pop
mov
in
jl
add
jg
mov
mov
inc
test
mov
or
cli
scas
stos
mov
subb
mov
inc
mov
jp
outsb
fs
loope
jecxz
rorb
mov
xlat
int
icebp
add
gs
xchg
das
popa
cmpsl
mov
lret
push
rol
mov
mov
cmp
sub
movsl
cmpsl
sarb
push
clc
mov
fldcw
fdivrs
out
movsl
push
icebp
inc
shrl
and
sub
dec
mov
sub
and
adcl
dec
xor
mov
leave
cmp
popa
or
dec
jp
outsb
lahf
incb
bnd
fistpll
lds
hlt
sbb
cmpb
pop
dec
push
ret
pop
and
mov
sbb
mov
jecxz
aaa
sbb
add
xor
jle
push
push
out
std
jl
or
push
or
xchg
or
add
in
push
mov
jmp
je
mov
inc
les
mov
out
sub
cwtl
mov
xor
pop
inc
stos
dec
flds
fdivrs
js
repnz
das
xchg
in
push
sbb
ja
mov
pop
std
pop
cmp
push
lret
cs
fs
icebp
ds
rolb
fnsave
andl
sbb
pop
jecxz
std
cmc
fmuls
adc
ljmp
int
push
dec
jp
mov
cs
and
ret
push
xor
in
mov
mov
sub
les
fbstp
mov
rol
adc
xlat
cmp
or
and
sub
mov
dec
sub
nop
inc
repz
xchg
mov
dec
xchg
or
xchg
mov
out
aas
std
daa
xchg
mov
data16
sub
insl
cmp
sbb
dec
call
inc
xchg
cmpsb
aas
test
test
push
sti
bound
jno
mov
enter
add
out
pop
mov
int
adc
test
outsb
insb
xchg
std
call
ret
adc
xchg
outsl
mov
pusha
icebp
add
subl
inc
ret
cmp
sahf
ljmp
jns
jle
and
mov
jae
mov
iret
cmp
mov
jne
js
stos
pop
add
jmp
dec
xor
xor
lret
mov
loopw
int
xchg
fs
orb
cwtl
aad
in
ret
jnp
mov
mov
push
and
mov
repz
jo
int3
int
xor
mov
jg
pop
loop
dec
js
and
pushf
repnz
lds
jno
lods
pushf
fmull
rcrl
fldcw
xor
adc
out
push
and
movsl
mov
mov
push
xchg
sbb
jbe
jmp
in
mov
jecxz
xchg
xlat
repz
fsubl
test
adc
out
mov
mov
adc
push
mov
mov
scas
mov
out
repz
popa
mov
push
cmp
xorl
sub
hlt
pop
pop
in
sti
push
es
scas
fldenv
rclb
jbe
insb
lahf
cmpsb
cmc
out
push
stc
fiadds
outsl
bnd
scas
loop
ficomps
and
jne
ja
pop
pop
pusha
mov
pop
xor
pop
rcl
sbb
lret
rorb
fldenv
fmul
xchg
scas
or
mov
or
es
shll
push
or
lret
insl
adc
add
movsb
dec
dec
pop
mov
shlb
lea
pop
xor
cmp
add
aam
sbb
mov
push
bound
adc
sbb
sbb
dec
jle
adc
out
jae
xor
fsubl
sbb
cld
push
push
jbe
sbb
push
out
imul
test
es
inc
xor
daa
dec
mov
mov
sub
out
xor
cmp
xor
ss
shlb
push
out
cmp
stos
cli
popl
imul
add
jb
pushf
ljmp
adc
roll
cmp
xchg
test
outsb
hlt
push
hlt
xor
cmpb
pop
lds
push
jge
or
or
testl
stos
aaa
cmp
fnstenv
insb
ljmp
test
mov
lahf
add
adc
add
scas
jae
loopne
mov
insb
js
xor
pop
mov
gs
add
punpckhdq
mov
mov
jae
inc
subl
incl
imul
xor
mov
mov
or
out
repnz
es
inc
movsb
mov
dec
rcrb
aaa
sub
mov
call
cmc
call
iret
pop
cmp
jecxz
xchg
mov
push
xchg
add
inc
cmc
jo
es
icebp
in
pop
lods
cmpsb
pop
addr16
ficoms
pop
lods
mov
dec
fisttpll
xchg
sbb
aas
mov
mov
mov
or
punpckldq
enter
aas
stos
rolb
sub
repnz
daa
pop
mov
or
adc
fisttps
mov
sbb
fcomi
testl
sub
xorb
cmpsb
mov
int3
mov
sbb
fwait
cltd
and
add
xchg
mov
pop
popa
pop
mov
pop
pop
dec
stos
dec
ljmp
scas
mov
repz
xor
sti
sbb
adc
mov
fwait
shlb
jae
mov
mov
loopne
fs
inc
imul
mov
mov
mov
data16
lock
and
xlat
mov
inc
cs
testl
je
into
push
xchg
jle
or
insb
dec
insl
xchg
pop
sbb
lods
arpl
scas
add
and
mov
mov
push
xchg
cmpsl
adc
aad
or
mov
scas
dec
bsf
arpl
jnp
inc
lods
add
test
aas
pop
jp
pop
xchg
mov
pop
test
dec
or
mov
lods
popf
leave
mov
insb
mov
jo
insl
mov
subl
pop
push
adc
ja
out
xchg
movsb
jl
cltd
sahf
insl
pop
fadds
or
xor
inc
outsl
std
mov
fld
adc
inc
lahf
pop
xchg
adc
in
mov
xchg
cmp
pusha
xor
leave
testl
jne
rorb
pop
cmp
mov
lds
fistpl
pop
dec
xchg
xchg
lahf
and
inc
jno
lcall
and
rcll
mov
sub
rolb
hlt
std
sub
and
jmp
dec
lcall
or
out
out
lret
icebp
int
insl
rcl
push
addr16
fsubl
push
repnz
xlat
sub
cmp
sub
fs
push
push
dec
test
pop
out
xor
frstor
cld
and
cmpsl
fstps
clc
jge
fstl
mov
imul
in
xchg
and
xlat
insb
nop
mov
mov
cltd
lock
add
test
fmull
cwtl
divb
les
loop
xor
push
jmp
pushf
xchg
xchg
push
cmc
dec
loope
xlat
sub
inc
int3
fsub
add
cmp
scas
in
push
loope
loopne
xor
fisubs
sbb
push
fisubrl
lea
loope
xchg
or
xlat
imul
daa
bound
dec
fxch
push
popa
xrelease
inc
clc
mov
lret
cmp
add
scas
mov
movsl
dec
sahf
stos
in
mov
fbstp
in
insb
dec
movb
or
dec
ret
dec
into
adc
es
loopne
dec
sbb
mov
jns
mov
mov
scas
cmp
nop
aaa
cld
jne
sbb
das
negb
popa
sbb
xor
jg
xor
lods
cld
push
inc
push
fs
jle
cli
add
stos
push
push
mov
sahf
repz
xchg
aaa
add
decl
mov
rorl
nop
push
jbe
jge
mov
mov
sub
into
add
push
mov
mov
call
sbb
pusha
sbb
inc
mov
cwtl
lcall
je
sbb
adcl
dec
cli
fisttpll
jbe
fcom
cmp
cmp
repz
stos
cld
mov
andl
or
cli
in
adc
arpl
orl
stc
dec
stos
fs
lods
mov
pop
push
xor
popa
ret
out
jmp
leave
xor
pop
and
test
stos
pushf
pop
les
aad
lahf
ss
stos
push
jmp
cvtpi2ps
xchg
sbb
fsubs
pushf
lods
adc
xchg
aam
js
xor
idivb
fwait
negb
push
or
jae
jge
gs
lret
mov
je
push
clc
lods
mov
mov
pop
cmpb
js
xor
insl
pop
mov
cld
adc
pop
mov
pop
cmp
xlat
out
inc
mov
sbb
pushl
sti
mov
push
xchg
dec
and
negl
add
outsb
testl
xchg
cmpsl
xchg
lods
lods
cmpsb
push
sahf
aas
imul
xchg
add
or
dec
negb
int
fistps
xchg
scas
loop
pop
add
mov
lock
aaa
xlat
cmpsl
jg
jp
sahf
andl
xor
stc
fmul
je
pop
adc
out
je
and
out
push
mov
xchg
mov
xchg
jmp
loope
fldt
test
mov
add
neg
sbb
mov
es
cmpsl
lcall
sarl
cmp
and
mov
pop
lahf
fdivrp
jne
scas
cmp
ret
cmp
aaa
out
or
inc
aam
test
adc
add
adc
aas
stos
push
bound
jns
stc
loopne
mov
jns
dec
movsl
jecxz
es
mov
insl
sbb
shlb
ljmp
xor
xlat
cmc
call
add
clc
jnp
inc
cs
and
cli
push
cmp
push
or
ficompl
pop
adc
cltd
loopne
xor
push
stos
xor
pop
stc
fistpll
xchg
in
fsubs
ret
in
cltd
rcrb
in
jae
xchg
and
add
pop
push
leave
mov
ja
cmp
sbb
stos
push
cmp
jle
sub
repz
mov
jge
jmp
add
cwtl
pop
leave
outsl
xor
sub
ret
push
outsb
outsb
push
out
out
aad
pop
nop
iret
inc
aas
lods
adc
adc
dec
repnz
push
push
pop
sti
dec
movsb
or
out
add
inc
imul
push
add
ret
xchg
xor
in
dec
jle
das
or
cmp
sbb
sub
fbstp
shrl
popa
loopne
repz
xchg
lods
test
mov
rcrl
xlat
fs
cmpsb
jae
negb
push
lret
cmp
fwait
dec
dec
fidivl
fiaddl
jbe
pop
pusha
leave
bound
aad
shl
jecxz
test
cmp
cli
fsubrl
ja
add
adc
lret
wbinvd
sbb
mov
xlat
xchg
xlat
push
mov
gs
pop
int
mov
xchg
fistpl
xchg
sub
or
sub
scas
and
pusha
rclb
dec
popf
or
push
lods
leave
inc
cs
cli
fcoml
popa
outsl
ret
push
std
mov
xor
mov
scas
andl
bnd
arpl
xchg
mov
pushf
jbe
jp
jne
jecxz
xchg
loope
jb
mull
push
xchg
les
or
pusha
movsl
mov
xor
dec
xor
in
bnd
pop
jae
lret
cmp
xor
xor
jae
inc
insl
lret
int
and
mov
decl
add
inc
fistps
xchg
push
pop
and
sub
jnp
push
icebp
adc
mov
jo
cmp
lret
rolb
lahf
in
idivb
mov
mov
js
sub
insl
jne
pop
mov
lods
imul
add
jo
imul
lret
andl
test
scas
sbb
adc
imul
inc
rol
inc
sub
loopne
or
lcall
test
lcall
adc
jmp
push
imul
sbb
shrl
subl
fidivs
and
iret
scas
mov
mov
ret
or
add
fsub
in
pop
xchg
lret
mov
insl
in
jno
gs
cld
xchg
or
mov
xchg
add
sbb
pusha
sbb
cmpsb
repnz
out
ss
fnsave
inc
cmp
mov
sub
mov
jl
iret
mov
enter
dec
cmp
ret
sbb
fsubs
fcmovne
pop
icebp
sbb
scas
sub
outsl
sbb
push
mov
aaa
das
push
pop
mov
arpl
insb
lahf
ljmp
xchg
sarl
ret
js
jb
leave
sbb
push
es
jmp
aam
sub
jmp
in
lds
ret
mov
mov
adc
icebp
imul
inc
std
inc
jp
adc
cmp
cwtl
lea
int
push
mov
sub
mov
sbb
cmp
scas
xchg
lea
sub
jp
test
jl
outsl
jmp
lock
mov
jmp
xorl
mov
out
push
cmp
bound
and
mov
xor
and
cld
xchg
mov
arpl
or
sub
std
loope
or
test
and
lea
mov
ja
inc
pushf
idivb
call
inc
fs
je
cmpsl
mov
push
push
mov
sbbb
fisubl
mov
jo
test
push
dec
sarl
or
adc
add
xchg
adc
insl
in
les
in
jbe
mov
sub
test
inc
sub
lahf
cmpsl
sahf
xchg
push
sbbl
aas
sbb
add
fisubl
xor
adc
adc
jecxz
mov
cmp
mov
jge
rclb
ja
xor
and
lock
int
mov
pushf
scas
adc
ret
loop
jmp
pop
or
cmp
xor
inc
loope
or
adc
cmp
icebp
mov
fildl
jbe
or
das
inc
fs
aad
rolb
aam
mov
dec
xchg
adc
pop
bound
xor
push
inc
repz
out
sub
ja
dec
adc
and
lods
sub
mov
mov
out
pop
sarl
pusha
or
xchg
pop
nop
scas
sbb
hlt
pop
dec
frstor
pop
push
fcomi
dec
cmp
xchg
fld
lcall
lock
sub
push
and
pop
mov
mov
sar
xor
sub
aad
xchg
das
mov
and
mov
sbb
lock
jb
fcoms
test
lods
push
pop
dec
out
out
xor
pop
add
test
cmpsb
fsubr
pop
jmp
dec
movsl
bound
test
outsb
test
enter
push
into
inc
iret
testb
and
or
arpl
jmp
orb
xchg
sub
cmpb
adc
sbb
cs
mov
or
adc
fwait
repz
std
sbb
mov
mov
inc
cwtl
push
cmp
jbe
mov
mov
jecxz
or
fistpl
sub
add
cmp
pop
shr
insl
mov
dec
sub
nop
and
bound
ret
repnz
cli
gs
in
push
xchg
jmp
cmp
lret
push
or
out
popl
enter
lods
mov
inc
fmul
aad
les
adcl
lahf
icebp
cmp
push
add
mov
or
lcall
fisubs
js
inc
sub
imul
int
inc
dec
mov
jp
and
lock
cmpsl
sar
mov
sub
cld
je
xor
jge
adc
mov
sbb
xchg
jp
dec
andb
inc
jg
inc
clc
push
mov
jbe
cmpsb
popl
or
out
mov
cld
ror
sbb
add
inc
mov
test
cltd
pop
repz
sub
push
add
cmp
sub
push
scas
fstpl
cmp
mov
xchg
ja
call
xchg
pop
jne
fstpl
insl
jecxz
rep
and
and
cmp
jb
aad
xor
test
arpl
iret
test
push
lods
into
sti
scas
dec
test
pop
jae
shl
pop
cmp
lds
pop
popa
sti
int3
cmp
out
jmp
mov
xchg
arpl
pop
cs
enter
sub
addr16
push
cmp
sub
push
xchg
icebp
fdiv
ret
scas
pop
lahf
stos
insl
jecxz
lret
mov
adc
scas
jmp
into
adc
call
mov
sbb
daa
scas
pop
sbb
cmp
push
gs
mov
pop
loop
btrl
lret
leave
fwait
aaa
in
xor
imul
jno
xchg
outsl
cmpsl
push
add
cmc
ret
test
adc
sahf
fstpl
adc
jecxz
addr16
fs
popf
pop
fmuls
lea
pop
sbb
mov
sahf
or
mov
cmpl
fildll
fldl
dec
xchg
cs
xlat
push
and
in
mov
sub
mov
movsl
pusha
add
jno
xor
and
sub
in
je
enter
pusha
and
mov
mov
push
lock
sahf
insl
mov
and
sub
ret
pop
sub
stos
std
outsb
pushf
jecxz
inc
dec
sbb
push
push
xchg
aaa
adc
lods
mov
xchg
xor
pop
cmp
pop
mov
xchg
mov
mov
movsl
in
or
ret
dec
pop
movsl
repnz
xchg
lret
in
mov
jne
xor
mov
pop
ret
jecxz
sbb
iret
test
or
out
mov
mov
gs
sbb
movsb
sbb
add
mov
lods
repnz
cs
or
sub
rcrb
in
pop
cmp
cmpsb
xor
inc
mov
add
imul
xchg
shll
test
roll
xor
out
mov
ret
push
jmp
into
js
in
lret
inc
fsubrl
je
sub
push
ljmp
ret
push
pop
frstor
cmpsb
jo
and
adc
lea
int3
imull
push
and
xchg
push
mov
inc
cmp
push
out
mov
inc
sub
in
fildl
xchg
stos
leave
jmp
push
clc
push
subl
iret
mov
add
dec
fsts
xchg
mov
cmp
dec
xchg
ljmp
cs
mov
cmp
ja
js
add
push
mov
iret
dec
scas
pusha
adc
pop
mov
lahf
xchg
cmp
mov
imul
fimull
push
aad
add
testb
push
add
mov
pusha
jecxz
mov
sub
push
and
dec
lret
sbb
and
aam
cwtl
xchg
scas
mov
clc
lcall
movsl
xchg
push
sub
push
inc
test
mov
mov
push
or
mov
ret
mov
mov
sub
scas
push
sahf
loopne
pop
loop
cmp
ss
sub
inc
in
in
or
dec
dec
inc
xor
cltd
es
mov
scas
icebp
fsubrs
cmpsl
adc
xchg
sub
test
out
pop
or
sbb
shll
adc
sbb
jmp
xchg
lret
pop
test
movsb
pop
lea
cs
jg
push
cmc
cmp
fisttps
mov
pop
outsb
cmp
les
pop
test
pop
mov
outsb
loope
mov
idivb
cmpsb
pop
xorl
mov
add
push
sub
sbb
sti
or
leave
lret
adc
mov
jae
cmp
rcrl
or
jl
add
push
mov
cli
add
cmpsl
sub
add
test
nop
push
jo
cmp
cmp
mov
scas
add
cmp
jnp
jns
sbb
mov
or
pop
leave
lret
push
rcrb
arpl
jl
stos
shll
pushl
aaa
mov
gs
and
mov
adc
call
add
cli
push
xor
add
mov
xchg
shlb
pmulhuw
dec
mov
mov
add
insl
int
jne
mov
pop
pop
lret
cmp
xor
mov
pop
cmpsb
add
and
incb
xchg
dec
jns
scas
adc
jo
mov
mov
mov
or
mov
test
leave
mov
mov
or
sub
cltd
jae
fwait
lock
sub
cmp
loope
push
ljmp
fcompl
jns
mov
pop
mov
ret
pop
daa
outsl
leave
sbb
rolb
popf
adc
mov
in
movsb
xchg
aaa
cmp
movsl
enter
test
fadds
push
bound
dec
or
sahf
adc
add
sbb
sbbl
push
test
xchg
fiaddl
repnz
jp
cmp
in
jecxz
fistps
push
call
filds
sub
es
push
push
shl
cs
loop
testl
sbb
jmp
mov
jl
les
in
mov
pop
push
pusha
enter
sti
lcall
pop
push
leave
inc
push
ror
cmp
call
and
dec
push
pop
xor
sbb
out
mov
shl
test
push
fs
jno
push
fnsave
sti
rorb
mov
fsub
cmpsb
pop
fsubp
xchg
pop
pop
cld
sub
mov
mov
repnz
int3
mov
xlat
push
movsl
and
lea
and
imul
int3
inc
sti
sahf
out
xchg
dec
ss
sub
cwtl
push
mov
dec
rcrl
ret
mov
cmpsl
scas
fildl
or
ja
push
and
mov
int3
sbb
xor
loop
subl
xor
add
xor
xorb
movsb
mov
adc
pop
or
xchg
lods
adc
jb
rcr
cmp
mov
popa
push
cmp
and
scas
dec
popf
cltd
imul
das
mov
cmp
dec
mov
lds
xor
push
adcl
sbb
push
or
xchg
dec
fnstsw
lcall
mov
xorl
stc
xor
or
shll
sahf
dec
fistps
addb
jns
ja
and
hlt
push
lcall
outsl
sbb
shlb
jl
movsl
or
inc
cmp
mov
adc
ss
mov
sti
lock
xchg
in
data16
push
push
fstpt
repnz
sub
push
dec
scas
shll
fldenv
mov
add
outsb
jne
inc
cmp
or
pop
jecxz
xor
pop
xchg
leave
xor
das
pop
aam
rolb
ja
pop
test
mov
pushf
adc
push
sbb
leave
mov
push
ret
dec
aaa
lea
add
cli
fists
add
mov
je
cmp
stos
imul
xor
cmc
daa
jno
mov
jle
sub
fs
add
xor
xlat
cmp
adc
pop
scas
je
push
lock
scas
or
data16
lret
xchg
roll
ret
inc
sub
inc
arpl
in
sub
or
jb
jmp
jo
jne
and
mov
ja
insl
sbb
and
mov
push
jmp
xchg
add
lds
iret
xchg
movsb
insb
in
imul
xchg
popl
mov
push
dec
dec
data16
xchg
sbb
sti
test
inc
fdivrp
mov
out
add
sub
jo
adc
and
addl
icebp
mov
pop
in
mov
in
test
pop
mov
shl
jmp
std
push
fadds
sbb
push
in
ret
inc
mov
and
mov
xor
test
in
and
xchg
xchg
popf
rcr
push
and
leave
xchg
dec
dec
popa
mov
fisttpll
or
xor
stc
sarl
addr16
aaa
mov
test
out
inc
repz
cmp
loope
or
rclb
test
sbb
cmp
mov
cmp
add
icebp
dec
scas
add
iret
aaa
std
int3
sahf
mov
fstps
int3
jmp
ret
xchg
loop
rcr
gs
push
pop
cs
mov
and
inc
call
pop
jno
popf
mov
push
lea
jge
cmp
sub
push
xor
fs
mov
xchg
subl
lret
cmp
and
jmp
jge
lret
sub
mov
bsr
push
out
jl
adc
rcl
repnz
int
or
dec
cmp
push
arpl
cmp
orb
out
pop
and
pusha
lea
push
mov
jno
xchg
cmp
nop
pusha
mov
ret
es
mov
cmpsl
out
jg
add
or
mov
push
mov
fldt
pop
mov
cmp
test
cmp
dec
cld
mov
rcll
gs
mov
mov
push
bound
xor
orl
sti
fmull
dec
shl
ret
bnd
sbb
gs
jae
push
cli
fcomp
xchg
movsl
jne
cltd
or
bswap
jnp
adc
pop
push
jbe
adcl
jge
sbb
scas
mov
fildll
pop
jne
mov
jno
jmp
mov
xchg
and
add
clc
mov
in
mov
lea
ds
xchg
pop
cli
add
fucomi
mov
mov
mov
dec
push
dec
and
cmp
pop
inc
aaa
mov
daa
jae
sbb
mov
adc
cmpsl
pushf
ja
pop
mov
push
cmp
lret
bnd
mov
movsb
or
sub
ffreep
push
inc
sub
shl
or
or
adc
sbb
pop
sub
push
aas
inc
mov
repnz
inc
in
sub
leave
icebp
mov
out
inc
mov
imul
jne
mov
lods
pop
inc
hlt
insb
in
xor
lods
adc
daa
hlt
das
mov
pop
xlat
fucomi
dec
stc
aad
dec
dec
push
insb
and
sub
aas
mov
lret
push
aaa
xchg
xchg
popa
aam
loopne
adc
fsubp
and
xor
sbb
addr16
and
sbb
repnz
add
insb
adc
push
out
cld
mov
test
repz
add
insl
mov
and
bsr
cmp
outsl
sbb
sbb
jl
pop
in
addr16
dec
jg
addb
cwtd
jmp
imul
es
xlat
insl
push
sbb
loop
pushf
inc
jno
jnp
jo
ljmp
out
cmpsl
add
inc
and
cmp
je
scas
cmp
das
sub
jecxz
aaa
add
mov
loope
mov
icebp
inc
imul
push
push
fldt
pop
fadds
mov
arpl
ds
xchg
sub
stos
push
sti
in
scas
out
jae
imul
jl
push
jnp
dec
lds
xor
pop
pop
mov
into
sub
and
es
push
xchg
sub
and
sbb
pop
pushf
adc
pop
ret
movsb
stc
mov
push
xchg
mov
xor
test
push
mov
dec
dec
dec
mov
mov
in
inc
cmp
popa
jle
xchg
xchg
sbb
rorl
and
add
decb
cvtps2pd
push
sbb
sbb
push
cmp
and
das
push
push
xor
adc
add
cmp
jg
push
cmp
fsubl
sbb
jne
loop
and
mov
cmp
jno
out
fsubrl
leave
and
mov
lahf
sub
xlat
mov
mov
and
cltd
pop
insb
dec
leave
into
lock
jl
add
cmp
push
mov
jnp
ja
add
mov
xor
rcrl
xchg
pop
push
scas
sar
sub
arpl
mov
and
out
mov
jp
loop
fldt
cmc
lods
mov
lret
xchg
mov
pop
mov
lahf
sub
sub
inc
aas
mov
pop
xor
mov
test
lcall
fisttpll
pushf
shll
add
inc
testl
stos
mov
roll
xchg
ss
jo
pop
push
insb
mov
icebp
lahf
adc
inc
sar
xchg
lea
mov
and
stos
or
stos
pop
push
sub
xor
inc
call
or
fcmovu
add
mov
or
xchg
loope
cltd
scas
mov
stos
sbb
out
jns
adc
push
orl
pop
add
ss
push
ret
jns
push
mov
sub
ret
jbe
lock
sahf
dec
out
stos
in
jle
sar
pop
enter
xor
pusha
or
pusha
insb
pop
je
xchg
shlb
repz
jg
test
inc
cmp
cmp
sub
dec
mov
aaa
and
xchg
shlb
rcr
loop
pop
and
or
stos
inc
imul
aad
xor
xchg
incl
dec
or
mov
ss
mov
mov
xlat
mov
xchg
loope
daa
jmp
or
xchg
mov
xchg
mov
mull
mov
sarb
inc
into
cwtl
mov
repz
fists
jp
dec
or
pminsw
lock
clc
scas
xor
adc
test
sub
hlt
mov
gs
inc
int
or
mov
adc
negb
ret
sarb
xor
adcl
loopne
sbb
jecxz
add
xor
add
adc
jae
out
and
xchg
stc
mov
es
mov
lock
add
mov
inc
inc
and
mov
mov
pop
sub
rorl
repz
sbb
in
pop
xlat
mov
leave
sbb
or
sbb
pop
loope
inc
inc
leave
mov
jl
dec
pop
mov
ss
in
mov
lock
inc
out
out
and
nop
mov
cmc
test
insl
pop
cmp
outsb
mov
xlat
push
addr16
and
xor
xchg
lods
cld
mov
cmp
dec
mov
dec
scas
xor
rol
ljmp
jne
lret
ficoml
xor
or
adc
xchg
iret
shrb
ds
push
sub
stos
loope
adc
mov
push
jge
lock
cld
dec
iret
mov
jle
outsl
cmp
cwtl
lret
faddp
mov
test
addr16
sub
mov
mov
pop
mov
push
cmp
stos
stos
frstor
cmp
pop
xchg
cld
add
pop
mov
repnz
je
cmc
out
sbb
lock
pop
lds
call
jp
movsl
push
dec
popa
leave
rolb
jo
fadds
ljmp
sub
pcmpgtw
shlb
mov
xchg
sbb
inc
loope
rcr
pop
and
arpl
movsl
mov
call
cmp
dec
mov
imul
sbb
sub
mov
mov
inc
add
fnsave
leave
stos
jne
int3
cwtl
je
call
shr
sub
dec
inc
push
testb
cmp
or
and
rcrl
ljmp
cmp
jne
nop
jl
cli
repz
or
clc
xchg
mov
pop
sbb
or
psubw
ror
setnp
movsb
xchg
adc
cmpsl
fildl
pop
push
imul
add
std
adc
sub
cs
inc
inc
arpl
jne
adc
aas
ljmp
or
fs
arpl
movsb
mov
aad
rcrb
jmp
cmpsb
pop
aam
xor
cwtl
or
mov
cli
stc
scas
xor
cmpsl
lods
pop
add
lret
dec
cmc
mov
addr16
rclb
cwtl
xor
in
pushf
leave
dec
aam
lods
or
repnz
lds
push
xorl
dec
sub
mov
adc
outsl
ds
lods
das
fadds
cmp
jae
ret
aaa
in
je
xchg
jg,pt
push
mov
sub
cmp
mov
xor
cmpl
push
aad
fidivrs
ud1
stc
pop
and
sub
out
aas
xchg
lcall
or
mov
push
adc
stos
daa
cmp
xchg
nop
rep
scas
cli
fidivs
pushl
mov
xor
and
jmp
sub
in
mov
mov
or
dec
jp
and
loopne,pn
cmc
lret
and
fistps
jecxz
imul
inc
or
mov
sarb
jp
push
stos
jg
jg
adc
out
addl
iret
outsl
mov
push
jno
jmp
xchg
or
testl
bound
and
mov
mov
in
in
sbb
repz
lock
inc
add
push
push
jp
decl
cli
push
ret
popf
into
cli
outsb
xchg
push
dec
inc
adc
shll
cmpsl
mov
inc
popa
int3
mov
xor
mov
xchg
xchg
pushf
loope
adc
cmp
or
int3
sbb
jno
sahf
test
lock
sbb
xlat
jb
cs
cli
push
cmp
leave
outsb
mov
pop
xor
pop
aas
sbb
dec
movl
jle
outsl
mov
cmp
add
sub
pop
cmc
sti
jg
bound
ret
xchg
adc
sub
jecxz
cmp
xchg
dec
or
mov
imul
dec
inc
push
cli
testl
xchg
lds
mov
mov
lock
xchg
stos
mov
dec
lahf
xor
sub
arpl
xor
lahf
fstp
or
nop
push
inc
rolb
xchg
mov
sahf
cmc
filds
out
loopne
cmp
jge
cmp
notb
lock
lea
aam
mov
mov
mov
adc
dec
pushf
xchg
xor
mov
jne
mov
add
cwtl
mov
ret
popa
add
cltd
test
push
and
cmp
data16
xchg
pusha
call
xor
xchg
mov
mov
pop
icebp
icebp
fs
pop
sbb
dec
jns
call
arpl
aas
jno
add
push
mov
pop
sarb
loope
sti
and
xor
loope
rorb
sub
mov
add
shrl
cwtl
pop
daa
xchg
dec
push
inc
xchg
movsb
shlb
rcll
xchg
stos
fsubrs
sbb
outsl
ja
push
mov
fmuls
pop
arpl
cmp
mov
mov
add
cmp
test
adc
jmp
dec
xor
movsl
jbe
scas
jbe
xor
ss
les
dec
sbb
mov
ds
mov
sti
cltd
shrb
sub
or
dec
inc
jmp
add
and
es
and
add
or
push
scas
xchg
in
sub
jns
inc
aas
pop
bound
jge
push
xchg
inc
lock
add
cmc
stos
nop
dec
loopne
in
in
fildll
dec
int3
mov
and
add
movsl
xchg
xchg
sbb
out
mov
xchg
leave
fildll
lods
xor
inc
jns
shll
jnp
movsb
add
pop
jle,pn
repz
jne
pop
scas
jl
adc
cmpsl
movsl
xor
cmc
dec
jno
imul
jne
adc
inc
jecxz
leave
mov
mov
je
dec
adcl
loop
adcb
fdivrl
adc
sbb
pop
and
lods
das
fistpll
imul
add
xor
pop
fmuls
dec
aas
xor
repnz
cmpsb
ret
iret
and
in
scas
jle
jbe
fsts
out
jp
pop
int
push
add
stc
flds
out
inc
test
sbb
cmp
push
daa
jmp
sub
shrl
insb
daa
nop
adc
xchg
jae
enter
xor
xchg
and
fstp
sbb
mov
mov
and
ds
gs
jb
dec
and
fwait
movsb
jbe
mov
rol
push
shll
mov
test
fstpt
orl
xchg
stos
inc
xor
sbb
jge
lret
mov
ja
mov
inc
mov
inc
mov
pop
jmp
aas
mov
lods
dec
inc
shlb
jge
test
xchg
inc
and
aas
inc
cli
lahf
mov
insb
scas
aad
movsb
pushf
pop
cmp
scas
in
jo
rclb
xor
cwtl
add
xchg
loope
push
jmp
adc
aad
sub
aam
inc
inc
icebp
add
cwtl
cmp
mov
jg
pop
jae
sub
jl
nop
aas
cmp
pop
dec
xchg
sub
mov
mov
cmp
pop
xor
shll
xlat
shrb
pop
dec
mov
xchg
bound
out
xor
test
dec
xchg
xchg
and
addl
dec
mov
mov
stc
xchg
cwtl
adc
pop
mov
std
cli
pop
outsb
in
das
dec
loope
mov
push
mov
mov
sbb
lods
adc
mov
xchg
mov
sub
pop
jno
xchg
nop
mov
inc
cmpsl
fidivrl
data16
sub
xor
push
sti
fwait
es
fisubrs
dec
lods
xor
pop
stos
loope
pop
cmp
lahf
jge
xor
pusha
in
sbbl
cmp
adc
shlb
shlb
mov
aam
imul
out
inc
adc
mov
or
imul
leavew
lcall
mov
mov
mov
cmpsb
xchg
xchg
dec
xchg
in
jbe
test
stc
jmp
js
inc
add
push
push
int
cs
dec
leave
in
cmpsl
or
jne
stos
adc
jns
shlb
repnz
add
mov
stos
jmp
popa
inc
out
and
shlb
jbe
adc
jns
mov
cmpsl
and
adc
sbb
or
in
jno
or
jmp
into
fs
sub
mov
push
in
sbb
jnp
push
test
jns
jmp
pop
sub
stos
in
arpl
jno
je
sub
xchg
inc
test
mov
adc
mov
iret
es
imul
fidivl
pop
ja
popf
xorl
mov
push
lea
cmp
movlps
mov
ljmp
repnz
jo
xchg
xchg
sbb
stc
idivb
jmp
cld
inc
pop
gs
inc
js
cld
jns
dec
inc
inc
xchg
pop
sub
lcall
inc
push
sbb
add
loop
push
rolb
mov
jo
or
lret
je
dec
mov
scas
js
cltd
repnz
jbe
stc
pushf
es
cmp
cmp
xlat
xchg
call
lods
pop
subps
gs
and
stos
or
jne
ficomps
inc
xchg
mov
mov
dec
push
sbb
pop
imul
pop
into
or
popf
stos
mov
loop
add
ss
sub
sbb
mov
jnp
lret
cmpsl
sub
mov
nop
inc
mov
fnsave
xchg
leave
movsl
sbb
inc
outsb
pushf
push
xchg
lds
movsb
sub
dec
xor
test
js
dec
test
push
icebp
dec
scas
rolb
scas
aad
push
push
xlat
stos
clc
cmp
pop
cmp
mov
je
scas
sbb
inc
mov
sbb
inc
out
fdivr
jg
mov
inc
lods
pop
sbb
repz
xor
cmp
lods
mov
inc
shlb
das
testb
jb
pop
sub
sarb
lret
mov
dec
lahf
push
push
cmp
ja
das
enter
test
insl
ss
dec
pushf
nop
sub
mov
pop
or
or
mov
mov
mov
imul
cmp
lahf
mov
movsl
mov
cs
xchg
cmpsl
adc
cmp
insb
push
pop
or
add
xchg
mov
add
push
push
push
jbe
cmc
js
in
movb
ret
ja
sbb
jg
mov
jecxz
jmp
cld
not
jge
and
inc
add
in
mov
sbb
sub
lods
mov
pop
nop
pop
lea
cmpb
mov
mov
fiaddl
aas
popa
fcomp
cs
fisubrl
cmp
outsl
xchg
inc
add
xor
adc
ret
pop
jle
std
mov
push
aam
sahf
test
sbb
mov
sub
inc
mov
inc
inc
xchg
and
push
jmp
mov
mov
add
cmp
scas
push
and
jae
add
fsubs
cmp
adc
or
mov
insl
pop
xor
jns
sbb
push
daa
sahf
fwait
cmp
dec
and
enter
adc
pop
repnz
adc
cli
shrb
push
xchg
push
sar
xor
jnp
pop
ret
ret
xor
inc
mov
adcl
mov
lahf
pushf
cmc
aaa
push
pop
sub
pop
or
cwtl
sub
sub
out
and
sti
inc
popf
mov
sahf
cwtl
dec
sbb
or
dec
cmp
mov
sub
test
mov
repnz
subl
out
bound
inc
movsb
data16
push
mov
rorb
sub
sar
pop
cmp
xor
je
hlt
pop
popa
out
jl
fwait
mov
pop
fucomip
lock
insl
add
xchg
or
inc
push
and
lahf
movsb
fidivrs
inc
mov
and
cltd
pop
xor
jle
pushf
movsb
lds
xor
jle
mov
aaa
enter
ss
lea
jb
mov
pusha
jno
adc
and
jle
cwtl
push
lds
lret
test
and
mov
mul
fimull
into
jbe
cs
push
inc
jbe
mov
movsb
shr
movsb
ds
scas
popa
sahf
xor
sahf
icebp
shll
loopne
and
inc
shr
mov
adc
pop
cmp
push
adc
insl
imul
add
inc
mov
cmp
mov
pop
lock
push
scas
mov
push
cwtl
sub
sahf
or
inc
mov
dec
xor
les
test
aaa
mov
mov
cmpsb
lret
fbld
sub
and
into
scas
test
and
cmpl
add
fiadds
mov
sub
loope
call
dec
push
mov
xlat
mov
fadds
xor
insl
adcl
push
sar
pop
xchg
or
add
mov
outsl
mov
decb
rorl
and
push
jbe
add
aad
jno
mov
jge
pcmpeqw
iret
mov
jl
pop
mov
lods
or
pop
mov
add
adcb
mov
push
sbb
out
test
fnstcw
imul
push
adc
shrb
mov
push
add
jp
cmp
pop
clc
lods
and
push
leave
mov
mov
inc
pop
lret
pop
ljmp
pop
or
pop
repz
loopne
in
push
cmp
fldenv
aaa
inc
mov
mov
stc
mov
aad
movl
push
addr16
fs
lcall
cwtl
aad
jnp
dec
mov
mov
dec
mov
pop
xchg
movl
jnp
iret
and
adc
push
insl
xchg
outsl
push
icebp
aam
fsub
aaa
stos
inc
imul
pop
adc
push
cmp
enter
jns
cmp
ret
stos
aad
lds
je
stc
enter
sahf
in
popa
rcll
jnp
xchg
push
les
mov
pushf
inc
cli
shlb
aam
jns
in
cmp
imull
js
in
mov
rcll
xchg
sbb
mov
inc
jge
icebp
and
cmp
stos
cmp
in
in
sub
mov
ret
add
add
orl
dec
sub
xor
mov
mov
shlb
lret
push
dec
icebp
cmp
adc
add
test
mov
lahf
fnstcw
and
sbb
testl
pusha
mov
mov
cmpb
lds
in
pop
lds
div
imul
mov
mov
push
movsl
xor
xchg
jg
jecxz
push
inc
pop
cmp
ret
or
or
out
jl
fsub
dec
leave
imul
rorb
add
add
ljmp
pop
loope
dec
add
call
cmpsl
jecxz
push
mov
pop
and
outsl
notb
popa
xchg
stc
or
mov
and
xor
pmaxsw
std
adc
adc
scas
inc
lock
lock
enter
xor
gs
push
push
lret
xor
pop
imul
outsl
pop
jae
dec
pop
out
movsl
mov
push
mov
insl
pop
fsub
add
std
xor
cmpsl
and
cmp
sahf
das
sarl
adc
scas
mov
fdivs
aas
mov
out
jo
xchg
gs
xor
pop
scas
push
pop
push
ja
mov
xchg
cli
add
push
mov
and
mov
push
mov
jne
sbb
rolb
push
sbb
or
add
jmp
ljmp
std
cmp
jg
adc
jne
push
sbb
rorb
inc
xchg
daa
subb
and
mov
pop
gs
int3
pusha
js
push
xchg
cmpsb
test
scas
pop
sarl
push
fldl
sti
jmp
lds
dec
fisubrs
lcall
in
xor
sub
or
ret
jle
mov
inc
sbb
and
push
cli
or
test
sbb
xchg
or
aad
sahf
or
pop
mov
repnz
inc
mov
lods
outsl
and
mov
inc
xchg
dec
flds
xor
sbb
dec
lret
xlat
mov
nop
ficoml
fadd
subb
mov
inc
lods
sbb
loopne
call
inc
movl
stos
cwtl
bound
xchg
test
add
ret
xor
and
push
dec
iret
addl
xchg
and
inc
sub
mov
sbb
add
lcall
cltd
pop
add
ljmp
pusha
sub
jl
cmpsl
fcmovnbe
pusha
and
or
push
movsl
mov
pop
cmp
iret
hlt
fstpl
mov
and
rorb
cli
dec
ss
shll
in
sti
dec
test
fs
cli
mov
popa
jmp
push
mov
daa
mov
cli
xor
repnz
sbb
in
xchg
in
push
shr
add
iret
fiadds
call
add
sub
jns
and
test
fmuls
cs
cmp
cmp
xchg
sub
push
ret
cmp
dec
mov
lods
mov
les
je
jg
dec
cmpl
cmc
dec
aas
sbb
pop
inc
pop
pushf
insb
adc
push
xchg
jl
inc
faddp
mov
xchg
inc
ret
cmp
xor
frstor
mov
xlat
push
or
insb
add
das
in
outsb
fmul
pushfw
icebp
mov
sbbb
repnz
pop
adc
add
jecxz
mov
push
imul
cmp
adc
in
notb
adc
ret
mov
sarb
push
popf
cwtl
sahf
ljmp
ret
divl
call
fistpl
mov
add
jbe
in
cltd
inc
pop
jecxz
xorb
xor
lock
imul
or
divb
xor
in
mov
pusha
sbb
mov
fmulp
push
rcrl
loopne
sbb
loope
nop
mov
icebp
dec
inc
jg
testl
xlat
cmp
fwait
das
mov
lods
xor
cmpsb
cmp
xchg
mov
xor
inc
fwait
push
inc
sti
cmp
hlt
inc
jecxz
ljmp
stos
push
push
mov
adc
shl
orl
test
inc
sub
mov
shll
mov
shr
lahf
iret
mov
or
rcll
or
push
mov
movsl
mov
mov
push
das
cmc
in
mov
xchg
fwait
nop
stc
movsl
adc
int3
fs
iret
xchg
shll
push
inc
in
rcrl
mov
push
push
dec
ret
mov
mov
fprem
jne
pop
push
xchg
xor
or
dec
and
rcrb
jnp
cmp
sub
fldt
cmc
and
loope
rclb
xlat
sub
or
sbb
mov
push
jg
addb
xchg
mov
imul
es
cmp
scas
out
mov
xchg
dec
adc
cld
or
rcrb
jno
stos
mov
dec
test
cs
je
popf
clc
push
adc
cmp
aas
xor
jb
and
jg
push
fmuls
cld
std
js
mov
mov
clc
xchg
idivb
roll
cmpl
or
int3
mov
adcl
icebp
sub
sbb
push
loopne
mov
enter
push
mov
arpl
outsb
arpl
andl
and
jnp
jmp
jb
pop
push
cld
pushf
sbb
sbb
adc
js
push
scas
sub
gs
jg
adc
push
jge,pn
leave
xchg
xchg
in
andb
push
insb
sarl
sar
dec
xchg
xor
push
cmpsb
dec
pop
jb
pop
xor
repz
arpl
sti
stc
mov
icebp
push
push
mov
push
and
adc
pop
lock
mull
cmc
inc
xor
adc
pop
clc
test
cmp
add
mov
dec
jnp
dec
mov
dec
inc
xor
lods
lahf
ret
rcr
add
subb
outsb
xchg
dec
aam
test
inc
repnz
out
iret
pop
adc
iret
push
clc
in
mov
aas
out
add
rclb
ds
add
cs
add
pop
and
roll
sub
out
mov
aas
movsl
sbb
adc
xchg
and
push
mov
les
incl
push
push
nop
ss
loopne
xchg
int
add
add
jmp
dec
fistl
jecxz
jnp
xor
test
shr
sbb
cmp
daa
orb
movsl
adc
sbb
push
sub
jo
adc
push
jp
xor
jmp
and
sub
push
in
roll
add
xchg
in
xchg
lds
add
lret
mov
xchg
fs
xor
lcall
pop
sbb
pushf
lods
imul
nop
clc
adc
gs
adc
stc
cmpsb
dec
inc
mov
into
cmpsl
packuswb
mov
adc
ret
test
scas
or
adc
testb
mov
mov
dec
sbb
ret
xchg
movsb
enter
fprem
jne
pop
mov
dec
xor
popf
adc
add
dec
mov
cwtl
movsbl
test
in
loop
xchg
and
or
sbb
xor
fldcw
mov
imul
xor
sbb
mov
and
pop
dec
outsl
cmp
std
mov
lret
cmp
rorb
sbb
mov
push
dec
es
cwtl
stc
sbb
push
int
fwait
ljmp
out
sub
push
pop
icebp
push
icebp
inc
or
fisubl
sbb
push
cs
jb
jl
xor
adc
mov
or
jmp
push
adc
int3
imul
jae
mov
mov
shll
dec
xchg
mov
test
pushf
sarb
in
movsl
mov
xchg
xchg
or
cmp
sub
cld
xchg
roll
lds
adc
mov
notb
ret
daa
ret
jl
and
pushf
insb
ja
std
and
imul
mov
cmp
cmp
mov
outsb
outsl
lret
cmp
enter
ss
ss
es
fbstp
cmc
pop
inc
push
das
adc
mov
adc
xchg
push
mov
inc
jp
lret
cmc
lret
xchg
and
fcomps
dec
mov
int
fcoml
mov
cld
in
push
lock
jmp
sub
fwait
imul
inc
repnz
ret
je
loop
or
jns
popf
jp
movsl
cli
mov
orl
adc
xor
push
imul
negl
mov
push
pusha
pop
loop
jbe
ret
addr16
aad
dec
arpl
sub
ds
push
lret
or
rclb
mov
mov
jmp
js
ja
or
or
loope
cmc
or
jge
dec
stc
arpl
test
das
stos
jne
and
inc
sub
mov
mov
les
pop
pop
data16
inc
pop
hlt
sbb
mov
shrb
jg
pusha
pop
das
adc
shlb
stc
push
xor
dec
imull
push
insl
fsub
jl
not
popa
cmp
push
lock
lcall
and
mov
xchg
dec
xchg
dec
cli
xor
jnp
in
push
jmp
lahf
jecxz
cmp
mov
dec
orl
sbb
lods
ja,pt
nop
or
xor
or
in
cmp
lds
ja
mov
or
dec
add
inc
xchg
xorl
in
inc
xchg
adcl
fwait
jg
xchg
add
add
dec
lret
lds
cmpsb
test
shlb
ds
or
mov
pusha
inc
adc
hlt
mov
xor
push
inc
add
or
mov
xlat
mov
pusha
or
out
or
jae
ret
mov
sub
int3
and
ss
lods
out
cmp
add
bound
xchg
hlt
or
sub
dec
rcrb
outsb
pop
xor
mov
cld
pop
movsb
cli
shll
xchg
sub
into
and
fs
sub
in
dec
hlt
loop
subb
cs
jne
lock
pop
jmp
scas
jge
push
pop
mov
or
loop
mov
shl
mov
rcll
or
adc
leave
in
jmp
arpl
or
lods
mov
test
sbbl
sub
cmpsb
xor
push
and
jnp
lret
adc
movsl
iret
xor
sub
inc
xchg
rcr
push
loope
cmp
iret
mov
jb
addr16
sub
aaa
out
add
xor
fisttpll
je
mov
jo
dec
fstps
pop
in
popf
xchg
jbe
es
mov
cmc
loopne
add
dec
fidivl
push
mov
sbb
pushf
inc
ljmp
cmp
rclb
je
pop
mov
add
fs
xor
dec
lahf
int
sarb
adc
xor
mov
out
hlt
jne
loop
mov
hlt
mov
inc
pushf
sub
hlt
test
shrb
lret
dec
jae
fnstsw
push
jb
sbb
pop
addb
shll
mov
fs
cwtl
xor
movsb
xor
popa
out
mov
inc
cmp
push
pop
push
inc
fistpl
dec
push
and
xor
rcll
ss
adc
push
mov
dec
out
std
adc
outsb
shrl
xchg
fists
pop
jecxz
into
icebp
and
mov
movb
leave
mov
sbb
and
pusha
mov
lahf
or
bound
rorl
push
orl
sbbb
popa
adc
xor
mov
add
pextrw
sub
mov
jmp
shlb
cmp
lret
fmuls
dec
das
jnp
xchg
sub
inc
lret
cmpsb
jecxz
mov
ds
outsb
or
mov
sbb
add
ja
push
cmp
cld
out
daa
xor
outsb
cmc
insl
pusha
jbe
mov
test
mov
lahf
icebp
jge
lods
sbb
and
sub
and
test
outsl
orl
push
dec
cmp
adcb
psubsb
lret
lods
xchg
mov
xchg
ret
repnz
loope
rorb
jl
call
add
add
adc
imul
dec
cmc
sub
push
subl
inc
das
add
and
mov
push
scas
imul
push
insb
repz
in
test
jb
xchg
adc
aaa
mov
dec
xor
xlat
push
sbb
jge
xor
cmp
roll
dec
divl
call
lods
faddl
sub
ds
mov
or
cli
dec
das
jo
test
lods
hlt
into
inc
xlat
rorl
sub
arpl
mov
or
lods
mov
and
sub
lahf
cmp
and
in
in
daa
mov
inc
xchg
lcall
gs
js
xchg
aaa
test
fstpl
ljmp
cwtl
push
xor
adc
pop
adc
insl
and
pushf
fsubrl
nop
adc
xchg
in
push
and
push
lds
test
rcr
lahf
movsb
arpl
pop
mov
in
or
push
imul
addr16
jb
addr16
sbb
adc
lret
push
cmpsb
jp
fstps
ret
cmp
data16
push
sbb
adc
rorb
jae
sbb
cmp
mov
mov
dec
fwait
repnz
fdivp
xchg
add
xchg
sub
push
add
mov
sbb
inc
enter
pop
add
scas
inc
push
loop
push
xor
out
mov
jmp
iret
adcb
out
addr16
cmc
mov
and
fstps
cmp
push
mov
lahf
or
out
dec
cltd
pop
sahf
mov
ds
jp
in
into
pop
push
jmp
loop
mov
sbb
stos
insb
mov
imull
cli
jae
cmp
rcrl
rcrb
outsb
xorl
fidivrs
adcl
nop
add
or
inc
or
int
enter
mov
inc
add
inc
repnz
insb
das
mov
in
sbb
popa
jo
add
mov
pushf
push
sbb
push
lahf
sbb
in
cmpsl
jge
je
loop
fwait
add
loop
fs
lret
xchg
int3
adc
xlat
push
daa
test
aad
sti
mov
jecxz
dec
push
lcall
add
lock
inc
inc
test
mov
sbb
scas
jle
mov
push
mov
or
in
mov
lds
dec
sub
iret
or
ljmp
adc
sbb
push
inc
inc
xor
push
clc
inc
and
jno
imul
fcmovb
popa
aad
or
jmp
sbb
adc
and
jle
sub
sbb
dec
cmpsl
cmp
insb
cmpb
aas
lods
mov
xchg
mov
sbb
cld
cmp
push
loope
inc
popf
js
mov
xor
cmp
sub
mov
cmp
mov
aam
dec
dec
enter
sti
fimull
cmp
sahf
enter
js
je
jno
mov
ror
pop
repnz
fwait
mov
lock
popa
pop
js
repz
movb
jl
pop
popf
sbb
out
mov
cs
sub
mov
inc
sub
insb
mov
cmpsb
cmpsl
push
divb
pusha
nop
jae
mov
dec
mov
jmp
xchg
rep
popa
lahf
lret
lret
cld
lcall
jmp
sbb
stos
sub
mov
push
cltd
ja
or
pop
insl
outsl
xchg
mov
loop
fcmovbe
cmp
mov
xrelease
mov
and
inc
xor
inc
push
add
cmp
lods
imulb
daa
lock
or
pop
incb
mov
or
out
mov
lea
lret
mov
pop
xor
fldpi
cwtl
ret
fstpt
adc
lahf
stc
fidivs
rorb
loop
xchg
xor
xchg
shr
add
cmc
loopne
sti
pusha
scas
add
cltd
jbe
jecxz
adc
cmpsl
add
loope
sbbl
scas
clc
sbb
cltd
fmuls
std
bound
add
cmp
pop
cltd
and
lock
xchg
cmc
jb
or
in
mov
out
xor
stos
loop
mov
imul
std
inc
or
es
addl
and
andl
push
mov
xchg
popa
mov
lret
mov
xor
pop
cmp
and
bound
xlat
cmc
jle
mov
pop
je
movsl
jmp
cmp
sub
xchg
lret
xchg
inc
out
int3
cwtl
sbb
insb
out
ss
mov
aas
and
pushf
mov
jle
adc
xchg
mov
sti
icebp
sbb
cmp
sbb
insb
push
sbb
cmp
and
sub
mov
fs
push
xor
adc
sbb
fcom
ucomiss
fnstcw
adc
sub
cmp
sahf
ret
jge
bound
mov
aaa
sti
pop
into
mov
mov
jmp
jmp
jp
out
cmp
pop
inc
xchg
addr16
in
ss
clc
pop
es
and
fiadds
nop
fadd
pop
orl
stos
shlb
sarb
xor
sub
outsb
fdivr
mov
adc
adc
jo
ds
jns
sbb
imul
adc
shll
cwtl
movsl
fwait
rol
jge
fadds
sbb
jmp
jge
scas
rcll
xchg
aaa
addr16
nop
repnz
daa
inc
sbb
xchg
inc
add
lods
mov
jb
or
pcmpeqb
pop
xchg
sarb
ds
pop
mov
xchg
ss
mov
adc
jno
scas
add
cmp
cmc
push
mov
aas
imul
xor
repz
xor
xchg
xchg
push
sub
lret
jbe
xlat
int3
in
mov
rolb
repnz
push
xorb
das
iret
cmpsl
loope
les
and
xor
ror
into
jns
dec
repnz
mov
mov
out
or
stos
inc
mov
sbb
fistpl
pop
sbb
and
inc
outsl
mov
push
fildll
inc
pushf
xchg
pop
lret
jle
push
push
sub
push
ds
adc
sti
mov
insb
xor
jae
test
or
shl
pop
cmp
sub
repz
and
ficompl
adc
sbb
mov
loop
jmp
movsb
mov
out
xchg
sbb
push
out
xor
scas
cmp
in
xchg
int3
jecxz
mov
sub
jne
jp
sahf
inc
jecxz
in
cli
nopl
mov
mov
cmp
mov
push
and
mov
addr16
outsb
stc
mov
enter
sub
mov
add
jb
push
fwait
outsb
mov
mov
in
push
nop
cmpsb
mov
std
mov
mov
lret
pop
xchg
mov
pop
je
xchg
adc
mov
pop
loopne
je
popa
fisttps
fimuls
mov
sub
sbb
stc
pop
sub
outsl
add
push
sbb
out
shlb
mov
dec
jb
and
test
jo
int3
std
ja
xlat
lret
or
mov
test
mov
inc
lods
and
mov
mov
loope
xlat
push
add
lret
inc
mov
aas
roll
stos
push
dec
dec
sbb
fstpl
imul
in
nop
mov
popl
testb
push
gs
insb
sar
lods
out
aad
mov
testb
pusha
cmp
jno
pop
pushf
mov
jl
ds
je
std
pushw
push
mov
mov
dec
mov
jb
mov
cmp
fwait
adc
jns
addr16
lds
push
jle
push
aaa
jl
or
push
fwait
rcr
popf
sub
cmp
xchg
push
mov
mov
or
jecxz
es
stos
and
mov
sbb
and
dec
jle
adc
outsb
pop
lods
lds
pusha
inc
and
add
les
cltd
mov
mov
xor
inc
leave
jae
mov
mov
stos
dec
fsubrs
xor
add
jbe
jo
lcall
jbe
pop
imul
push
jle
mov
ficompl
sbb
inc
clc
stc
mov
sbb
mov
insb
push
shlb
ss
cmp
ret
xchg
mov
fsubrl
sub
pop
pop
jp
icebp
mov
rolb
pop
mov
shlb
loope
adc
stc
mov
arpl
mov
dec
xor
mov
inc
hlt
lods
andl
out
inc
adc
add
xor
push
and
pop
int3
in
aad
or
je
cltd
inc
push
jmp
xor
xchg
sub
and
xor
cmp
sti
out
mov
sahf
push
jns
xor
add
leave
push
mov
fcoml
mov
and
mov
mov
sub
je
dec
les
jge
call
jo
shr
xor
cmp
add
in
subb
add
or
sti
mov
lret
add
fstp
in
jge
cmc
cmpsb
cmpsb
sub
mov
push
cmpsb
jge
fsts
xchg
ret
dec
mov
out
cmp
jle
cmp
or
das
rcrl
adc
mov
sub
or
mov
ljmp
pop
test
cltd
cmpsb
cmp
cmp
push
js
iret
jne
sub
in
xlat
aas
in
cmovns
cs
fdivr
shl
mov
jo
inc
jle
cmpsb
je
mov
iret
ds
mov
test
xor
js
cmp
outsb
out
push
jge
mov
sbb
test
jns
lea
daa
imul
das
sbbl
insb
fsubrs
test
out
ret
test
orb
mov
add
xchg
ja
out
mov
cs
lds
out
pop
addr16
xchg
aam
cmp
and
xchg
push
mov
add
sbb
out
dec
push
sub
mov
rcll
in
add
js
jg
cmp
iret
adc
in
add
mov
xor
mov
mov
adc
shlb
jnp
js
adc
leave
sbb
lahf
hlt
push
inc
lods
lock
out
dec
and
ja
sub
cmp
fistpll
idiv
add
sti
aam
rcll
jae
mov
xor
jge
pushf
outsl
cmp
dec
adc
sarb
jmp
mov
mov
fwait
ja
dec
add
addr16
jo
push
les
mov
pop
fimuls
call
jp
cli
shll
ljmp
mov
insl
jno
push
or
cmp
push
stos
mov
dec
test
add
sbb
jnp
xchg
add
loop
sbb
jns
add
cmc
adc
outsl
inc
xlat
es
cmc
mov
and
pop
popf
sub
add
ds
pop
mov
push
outsl
pop
jp
out
cmp
xchg
in
pop
loop
in
clc
pop
mov
fistps
and
ljmp
lods
lods
pop
and
sub
fsubl
and
psrld
leave
jg
sub
xchg
je
sbb
sbb
mov
inc
and
push
or
xchg
dec
jg
cmp
rcl
mov
inc
xlat
cwtd
stos
lds
pop
cmp
aaa
mov
xchg
xchg
lahf
test
mov
jp
sbb
xchg
cmove
incb
fidivs
xchg
and
inc
jmp
int
aam
subl
pop
cmp
test
into
rcl
or
xor
shl
es
dec
pop
sbbb
inc
sub
cmp
insb
and
cwtl
and
shrl
test
sbb
lea
ret
jg
push
push
das
sbbb
jge
adc
pop
cmp
iret
xor
les
out
dec
sbb
lcall
adc
dec
pop
in
mov
cli
pop
cltd
arpl
inc
aas
xchg
mov
stos
outsb
sub
sub
gs
mov
fisttpll
daa
lret
fadds
icebp
adc
xchg
test
fldl
jle
adc
cltd
dec
cmp
xor
shlb
lods
adc
xchg
das
pop
pinsrw
dec
jecxz
dec
mov
pushf
call
or
loopne
mov
push
jp
xchg
add
es
xor
sti
stos
mov
sbb
xchg
notb
and
cli
out
popf
pop
addr16
jbe
sbb
out
lds
in
mov
cmpsl
pop
pop
inc
or
inc
daa
push
out
xchg
fwait
dec
pushf
sbb
mov
push
pushw
int3
enter
cli
sbb
mov
fldcw
fdivl
das
lret
stc
fiadds
mov
in
stos
mov
inc
and
addl
push
inc
aad
notl
and
leave
jns
dec
std
jne
loopne
mull
orb
scas
dec
cmpsb
pop
inc
cwtl
dec
test
push
inc
inc
outsl
repz
adc
mov
pop
xor
dec
cltd
xchg
scas
adc
add
ljmp
sti
ffree
testl
shlb
jg
pop
in
aaa
sti
inc
adc
fildl
lret
and
negl
ss
push
push
int
pop
rcrl
jl,pn
adc
xchg
push
rclb
iret
loop
lret
jb
lea
shl
ret
sbb
push
stc
repz
xlat
inc
arpl
jl
mov
push
sti
cmp
bound
mov
sbb
cmc
jle
lret
add
cmpsb
idivl
or
loop
mov
les
adc
lea
into
inc
scas
xorb
add
sarl
jb,pn
xchg
jno
jle
and
sbb
push
pop
xlat
push
add
hlt
daa
enter
xchg
adc
sti
jb
fimuls
daa
loop
jge
mov
lods
pop
lds
loope
push
fs
sbb
je
pop
leave
pop
or
and
xchg
cmpsb
lds
lods
sub
mull
dec
icebp
jb
adc
mov
rcl
sbb
int3
mov
ret
add
lock
cmp
fwait
sti
xchg
mov
insb
icebp
push
les
inc
xor
lock
xchg
xor
and
in
pop
inc
lea
inc
dec
dec
fistpl
sub
fisubl
lods
incl
imul
xor
mov
popf
int
xchg
inc
inc
subl
lea
outsl
push
outsb
sbb
nop
aad
dec
mov
sbb
repnz
jmp
enter
scas
adc
or
jp
movnti
loopne
gs
xorb
xor
or
mov
popf
pop
loop
jbe
add
sbb
aad
rcrl
jae
mov
addl
loop,pt
mulb
pop
mov
fsubp
sbb
push
mov
and
dec
das
sbb
aad
rcrl
jecxz
mov
insl
xchg
mov
pushf
fstp
gs
mov
and
cli
jle
mov
adc
std
gs
adc
add
mov
xchg
push
inc
pop
xchg
pop
or
fisubrs
jb
push
jle
sarl
adc
or
xchg
loope
into
test
mov
ret
repnz
jnp
and
cld
not
lret
cli
stos
inc
mull
mov
fs
daa
push
cltd
pop
push
jecxz
das
mov
cmp
xchg
clc
mov
xor
cmp
paddw
jne
outsb
add
and
pop
dec
scas
mov
cmp
ss
or
pushf
stc
sub
dec
sub
sub
cmp
jge
xchg
lret
xchg
lcall
in
test
inc
movsl
in
lea
out
mov
fmuls
cwtl
les
xchg
je
sarb
or
or
inc
jg
div
jmp
pop
sbb
jmp
jno
jno
adc
and
inc
outsb
cli
gs
jne
rcrl
push
jno
scas
rclb
das
lret
xor
rcrb
mov
mov
aam
cwtl
ret
or
mov
in
sub
aam
ret
inc
inc
arpl
popa
ret
adc
xchg
jbe
sarl
dec
je
mov
dec
into
and
rcrb
nop
jae
fidivrs
xchg
cmpsl
jns
and
cmpsb
insb
sub
aam
push
jmp
leave
js
mov
jmp
adc
inc
test
dec
js
push
dec
in
push
movsb
xchg
xchg
sti
pop
aad
add
test
xor
jge
sbbb
std
and
push
pushf
add
lock
loope
sbb
dec
inc
or
mul
adc
dec
xchg
push
push
call
in
imul
sti
push
xlat
mov
ror
ja
xchg
adc
fwait
or
inc
ljmp
jnp
or
inc
or
mov
test
adc
lds
sbb
aas
mov
push
rcrl
push
add
inc
xor
sbb
sti
push
loopne
std
fidivrs
aas
mov
mov
pop
add
dec
jg
dec
lret
xor
xor
popf
add
mov
pop
pop
pop
imul
or
dec
cld
shll
int
mov
and
test
outsb
daa
sub
mov
pop
pop
lret
cltd
jno
dec
lret
insb
and
mov
lods
outsl
xchg
push
inc
leave
loop
adc
lock
inc
mov
mov
sub
std
push
dec
pop
es
jmp
and
inc
popa
xchg
lcall
test
add
push
es
add
loope
xor
xor
ljmp
in
mov
dec
or
repz
lods
mov
mov
roll
mov
lds
pushf
popf
in
mov
ja
xor
mov
adc
or
in
int
mov
cmp
ficoml
outsb
f2xm1
or
sub
sub
cmp
or
lods
lds
push
push
jmp
jp
nop
fsubl
sub
or
cmpsb
scas
ffreep
fildl
or
iret
dec
iret
mov
and
cmp
lahf
xchg
out
loopne
mov
lods
or
xor
push
adc
ljmp
fists
jl
xor
repz
in
cmp
out
inc
gs
jmp
gs
loopne
in
mov
cmpsl
sub
jae
mov
vcomisd
adc
inc
scas
mov
ljmp
push
sbb
push
ds
push
push
lret
insb
xchg
mov
mov
out
loope
imul
cmp
clc
cmp
fwait
pop
cmp
cmp
sti
test
imul
hlt
nop
dec
push
push
aam
lds
xchg
divb
fildll
shr
add
test
mov
jbe
clc
xchg
mov
mov
into
xchg
shlb
fldl
scas
jnp
pop
fdivr
fidivl
xlat
pop
cltd
loop
ljmp
ret
or
lds
arpl
je
outsl
jecxz
xor
inc
adc
imul
addr16
mov
dec
cmp
and
xor
dec
cmc
rclb
mov
mov
mov
fidivs
sub
or
or
fucomp
leave
test
or
sbb
clc
inc
inc
sub
sub
call
repz
push
fbld
call
bound
xchg
int3
clc
sbb
mov
adc
mov
add
mov
adc
js
aaa
cmpsl
mov
int
fidivs
in
mov
out
movsb
sbbl
sbb
sahf
pop
mov
scas
inc
and
imul
imul
mov
outsb
pusha
sbb
out
mov
in
clc
outsb
xchg
pop
data16
mov
aas
test
repnz
xorl
inc
int3
aaa
fldlg2
js
dec
popa
shlb
shr
lret
mov
ds
sti
aam
aad
sbb
arpl
push
pop
xor
in
adc
push
dec
lret
adc
imul
addr16
inc
mov
inc
nop
sub
icebp
sub
sub
inc
fs
insb
add
movsb
loopne
test
mov
sub
imul
pop
xchg
inc
fistps
jo
mov
stos
loope
lea
mov
sbb
sub
and
mov
cmc
test
mov
aam
ja
push
stos
leave
aas
jne
xchg
ror
and
out
ret
jbe
mov
sub
dec
jnp
push
cld
cmp
jo
arpl
jmp
das
fldcw
iret
iret
enter
xchg
das
arpl
xchg
mov
dec
fnsave
jge
mov
fdivrl
cli
adc
add
xor
mov
push
pusha
mov
lock
pop
fdiv
fnstcw
nop
inc
adc
loop
jae
roll
lods
js
adc
mov
add
cs
es
sub
in
xchg
andl
insl
add
sub
mov
lret
push
shll
xor
xchg
dec
stos
insb
imul
test
rcr
and
mov
mov
sbb
ja
arpl
xlat
mov
mov
lret
out
leave
xor
xchg
mov
rclb
les
sub
or
test
pop
mov
xchg
shlb
test
jge
sbb
or
sti
leave
insb
mov
ret
lock
shrl
add
add
loope
sbb
or
lahf
add
mov
scas
outsl
fldt
int3
cmc
cmp
cmc
add
xor
cmp
and
add
fisubs
pop
mov
push
lret
ffree
jmp
hlt
pop
xor
sub
add
xchg
sbb
inc
sbb
in
mov
fdivr
test
subb
mov
sub
leave
jecxz
add
mov
inc
pop
add
pop
dec
inc
movsl
sbb
cmp
mov
scas
mov
and
fidivs
and
pusha
adc
fcomps
in
xchg
jo
pop
cmp
scas
mov
out
loopne
out
das
adc
test
stos
cmp
repnz
cli
adc
call
faddl
pop
mov
icebp
loopne
or
and
aas
push
lcall
adc
cs
xchg
sbb
mov
cs
pop
inc
icebp
dec
in
insb
and
jmp
popf
les
add
adc
inc
cmpsl
jge
add
rorb
and
in
pop
out
clc
push
or
sar
mov
jns
cmpsb
inc
insb
pop
fdiv
lret
add
out
jg
ret
lahf
and
jle
pop
pop
sub
inc
decl
cmp
mov
jecxz
lods
add
fdivs
sub
rcrl
add
in
lret
add
jmp
mov
mov
ss
cmp
mov
or
mov
dec
inc
roll
mov
lahf
sbb
push
push
fbstp
add
popl
inc
sub
or
aaa
mov
sti
dec
jbe
test
or
mov
jno
fdivp
ret
lahf
and
std
pop
mov
xchg
cmp
xchg
pop
inc
sub
jae
stc
xchg
xor
cwtl
into
pop
les
inc
cltd
sbb
sub
lds
mov
sub
push
arpl
nop
jo
lea
mov
fnstsw
jno
pop
gs
push
fdivrl
mov
jp
cmp
inc
lock
cli
add
mov
xchg
test
xchg
sub
mov
sbb
jo
adc
xchg
dec
sub
outsl
inc
adc
sahf
or
insb
vunpckhps
mov
dec
pop
mov
sar
out
or
pop
add
push
movsb
pop
jp
fiaddl
btc
push
mov
cld
pop
jns
sti
and
insb
jecxz
add
les
xchg
insb
call
sti
daa
testl
aam
push
add
mov
mov
push
loopne
adc
push
testl
push
mov
lock
lret
outsl
pop
in
sarb
and
gs
adc
inc
fsubs
adc
pusha
xchg
hlt
push
jg
ss
test
jno
test
inc
lea
cmp
add
push
cltd
cmp
cmp
xor
fldt
xchg
popf
aaa
das
pushf
repz
cli
adc
dec
or
or
into
sub
dec
lods
pop
int
out
mov
or
mov
cli
inc
sti
dec
out
mov
cli
pop
add
arpl
inc
fs
mov
cli
jbe
outsb
jmp
fndisi(8087
add
out
sahf
aaa
fdivp
mov
call
lret
rcl
mov
jmp
or
fildl
xchg
fstl
dec
ljmp
or
jo
mov
inc
add
inc
mov
push
mov
jb
scas
dec
push
lock
adc
mov
push
pusha
out
pushf
rorl
fxch
sahf
sbb
adc
movl
bound
xchg
fwait
mov
sub
clc
addr16
pop
js
xchg
xchg
addb
sub
add
outsb
add
gs
stc
push
sub
xor
addr16
popa
movhps
xor
mov
sbb
cmp
add
add
lahf
lock
iret
in
cld
mov
and
mov
int
sbb
xchg
xchg
jle
lea
pop
push
fcompl
mov
ja
and
into
mov
test
aaa
or
shll
xchg
mov
xchg
rorl
mov
movsb
xlat
add
aas
cmpsl
inc
je
sub
xchg
jne
insl
in
sbb
in
dec
subb
xor
das
xchg
out
mov
daa
xchg
test
pop
fildl
arpl
adc
pop
xchg
imul
push
sub
inc
cmp
testl
dec
nop
aas
cld
test
fwait
les
xlat
icebp
or
xchg
or
sti
jo
loope
mov
je
hlt
jle
xor
test
mov
xchg
daa
or
xchg
mov
add
out
lret
and
cmp
repnz
stos
int3
aaa
jae
arpl
cmpsl
rolb
lret
sbb
mov
jnp
mov
enter
add
xchg
xor
adc
mov
repz
lods
test
xor
mov
ret
adc
add
lds
xchg
adc
stc
or
sbb
push
out
pop
sub
nop
sbb
js
pop
cmp
test
sub
push
sub
jle
loope
lret
lods
jne
jns
and
in
mov
xchg
imul
pop
pop
stos
mov
push
scas
or
mov
mov
jo
sbb
iret
or
cs
xor
std
fsubl
push
movsl
jg
jecxz,pn
sub
popf
push
inc
outsb
sub
jl
daa
movsb
jae
xchg
jecxz
ss
inc
jo
push
mov
sub
sub
sub
cmp
mov
decl
aaa
sarl
xchg
xor
or
fmuls
push
lcall
cli
andl
popa
push
adc
mov
adc
fsubs
mov
sub
adc
movsl
out
jmp
in
test
and
inc
mov
out
and
inc
aad
xchg
rcr
mov
xchg
loope
push
xlat
cmpps
pop
inc
adc
jge
xchg
sub
ds
test
sub
rcrl
jecxz
imul
stos
dec
repz
inc
add
push
jae
stos
mov
lahf
js
stos
dec
push
mov
cwtl
in
mov
popf
lds
cmp
lock
xchg
xor
inc
arpl
xor
pop
add
sbb
inc
mov
xchg
adc
fimuls
flds
ja
pop
and
inc
es
insb
cwtl
cmp
adc
test
call
or
jp
xor
push
sbb
stos
sarl
ret
repz
add
rolb
repz
std
clc
sbb
out
lock
or
imul
and
div
mov
or
bound
ret
cmp
push
push
fdivr
shlb
add
add
cmc
and
ja
inc
imul
call
sbb
push
or
lds
lock
dec
pusha
ds
movsl
xchg
jae
inc
sub
repnz
mov
inc
das
cmpsb
pop
dec
or
cmp
ds
pop
pop
aas
cmp
dec
pop
jns
sti
int
lea
mov
xchg
lcall
stos
jno
mov
or
mov
cmp
loope
mov
jl
and
inc
cli
add
pop
lahf
adc
outsl
mov
mov
call
sub
xchg
js
pusha
mov
incl
add
aad
sahf
arpl
pop
pop
dec
fstpl
jle
outsl
pusha
nop
and
movsl
aaa
addr16
add
sub
pop
xlat
and
mov
jmp
lea
fs
popa
andb
cli
sbb
adc
push
push
xor
ret
jecxz
loope
repz
lret
popa
pop
push
add
loopne
movsb
and
xchg
and
sbb
xchg
js
jl
stos
lock
xor
xchg
inc
movsl
add
inc
adc
pop
mov
imul
push
xor
repz
outsl
lods
insb
in
aas
dec
pop
int3
call
rcl
loopne
sbb
adc
pop
ficomps
sub
pop
imul
hlt
adc
push
sub
cltd
jecxz
mov
clc
gs
mov
add
in
out
push
xor
lahf
and
inc
mov
xchg
rorb
lcall
cmp
or
rolb
push
sub
ds
jl
clc
enter
cmp
xor
outsl
scas
add
outsb
dec
cmp
mov
jp
hlt
push
adc
add
xor
xchg
cltd
jne
or
rcrb
in
add
cli
sub
mov
fcompl
pop
popw
ret
pop
jns
push
out
popa
test
and
xrelease
ret
or
shrb
pop
es
dec
jg
push
or
mov
addl
mov
fisubrs
push
outsl
cmp
mov
das
rorb
dec
adc
sub
pop
leave
mov
xchg
adc
adc
cmp
adc
aaa
gs
nop
js
mov
ret
xor
push
out
or
xchg
sub
inc
mov
sbb
or
jle
cltd
pop
decb
add
es
dec
and
push
leave
nop
jle
pop
cmp
jae
fnstcw
scas
add
stc
xor
push
pop
push
rcll
notl
dec
mov
mov
bound
sahf
and
cmpxchg8b
mov
fbstp
xor
pop
xchg
das
and
fwait
out
insl
js
cwtl
sbb
jno
mov
std
adc
dec
add
int
sbb
sbb
jnp
movsl
sbbl
sub
pop
loop
insb
mov
pop
pop
push
addl
cmc
pop
mov
add
shll
jns
rolb
bound
fiaddl
and
imul
pop
adc
push
icebp
adc
mov
dec
mov
xor
xor
lock
xchg
insb
enter
or
cmpsl
inc
std
leave
aas
or
or
mov
pop
int3
mov
jecxz
inc
add
adc
fdivrs
pop
ret
inc
sar
push
inc
jns
imul
or
in
mov
push
push
orb
jno
or
imul
and
sti
mov
adc
repz
xchg
inc
sahf
in
push
sbb
sub
cmp
test
xchg
into
call
jl
mov
repz
mov
xchg
test
pop
jbe
sub
fstpt
add
lcall
push
xchg
and
cli
jno
lcall
in
js
push
stc
pop
and
lods
xchg
arpl
outsl
testb
push
mov
adc
iret
mov
lret
outsb
imul
enter
loop
std
add
lods
or
inc
push
dec
cmp
sub
rorl
xchg
mov
fsubr
dec
inc
pop
inc
push
xchg
mov
push
bnd
stc
push
xor
fistps
imul
jmp
sub
jo
inc
daa
mov
mov
bound
fsubrs
jle
outsl
imul
mov
lcall
inc
repz
popa
mov
insb
mov
ss
mov
or
pop
or
mov
lret
add
fwait
pop
sub
lcall
jo
fisttpll
loope
aad
mov
dec
xor
lahf
enter
aam
imul
lds
mov
out
cmp
rcrb
mov
maxps
sti
and
jl
sbb
and
in
dec
push
outsb
daa
inc
cmp
xchg
push
addr16
xlat
push
sti
imulb
adc
bound
mov
and
dec
mov
fwait
daa
js
mov
cld
rolb
xchg
aaa
fsubr
mov
cli
inc
shrb
mov
into
xor
cmp
xchg
inc
lock
testb
and
cmpsb
dec
hlt
and
cld
in
scas
dec
add
add
mov
idivl
push
xor
nop
ret
call
cld
notb
jbe
adc
mov
insb
cmp
jnp
fildl
xchg
dec
push
add
out
inc
out
xlat
jo
mov
add
jne
sbb
mov
mov
adc
leave
inc
jne
pop
mov
mov
testb
test
xor
push
sub
mov
lds
loopne
pop
adc
loopne
and
stc
jg
mov
int3
popf
jmp
ds
cmp
and
mulb
into
push
add
and
mov
aad
xchg
insb
mov
adc
jne
fwait
imul
inc
and
jns
repnz
mov
add
push
test
fwait
cmpsb
add
fimuls
pop
inc
leave
pop
pop
rcll
pop
mov
add
adc
daa
test
ficomps
dec
bnd
fsubl
adc
xchg
push
sub
xor
in
push
or
xor
jl
js
aad
call
lret
mov
sbb
sub
jno
mov
loope
or
dec
add
test
rcll
push
in
cli
mov
sub
or
xchg
sbb
testl
or
mov
push
cmpsl
test
sbb
mov
xchg
icebp
mov
cmp
sbb
adcl
pop
in
push
xchg
or
sbb
lea
rcl
or
jg
shrb
push
jmp
adc
add
xchg
sbb
leave
mov
adc
mov
pop
test
pop
imul
jbe
push
add
cmp
fdivrs
mov
cmp
adc
sbb
cmp
scas
add
dec
rorb
xor
stc
fs
fmull
jl
mov
dec
cmp
movsb
pop
jg
aas
jecxz
and
push
mov
scas
pop
jecxz
lods
xor
xchg
nop
pop
or
adc
clc
mov
sub
cmpsl
mov
mov
inc
int
lds
cmp
cmp
jb
imul
rolb
sbb
dec
ss
jno
sub
dec
dec
xor
cmc
adc
push
fs
movsb
push
repnz
xchg
mov
repnz
xchg
rolb
popa
movsb
xchg
cld
or
mov
out
sub
add
into
adc
mul
es
lds
jno
or
dec
xor
ror
push
sahf
push
dec
inc
pushf
cmpsl
cmp
in
or
loopne
push
add
jle
cmp
sbb
pop
dec
cmc
fisttps
xchg
fidivs
out
inc
cmp
lret
cmc
incl
nop
push
clc
push
out
or
jns
aas
cmp
mov
es
xchg
in
sbb
cmp
inc
dec
mov
pop
aad
jl
cmp
ja
test
je
mov
fnstenv
cltd
add
mov
pop
fsubl
mov
inc
pop
pop
cs
or
fmull
adc
sbb
push
pop
push
sub
pop
mov
jne
add
testl
xlat
dec
mov
shl
pop
push
pop
xchg
inc
mov
mov
lock
in
and
add
xchg
shlb
cmpsb
push
inc
ret
adc
sbb
push
xchg
push
in
nop
das
fwait
ret
pop
mov
roll
or
popa
mov
jle
jp
dec
repz
push
mov
fwait
call
dec
push
cmpsb
or
xor
dec
loop
and
mov
std
fisubrl
popa
mov
insb
mov
mov
test
add
adc
xor
mov
jnp
xchg
mov
in
pop
jp
dec
lds
mov
push
xor
inc
fcomi
nop
cli
les
adcl
pop
mov
movsl
mov
dec
mov
rorl
leave
sarl
mov
pop
leave
jmp
jecxz
xchg
pusha
mov
sarb
stos
jbe
pop
mov
sbb
cs
aaa
xor
dec
jo
dec
ret
sbb
adc
ror
adc
push
pop
jo
cld
xchg
or
push
mov
out
lods
xchg
xor
cltd
in
jbe
aaa
push
xor
imul
sarl
and
mov
dec
std
iret
cs
xchg
sbb
and
jg
xor
ja
dec
ret
test
xlat
lcall
xchg
adc
ljmp
cmp
push
enter
inc
enter
fstps
in
and
sbb
sti
and
iret
pushf
adc
and
loop
in
adc
out
jp
je
rorl
or
test
jns
jne
sbb
xlat
cmp
mov
stos
mov
int
jle
or
sarb
mov
and
adc
jg,pn
cmpsb
pop
pop
lret
subl
jno
in
cmp
sub
ds
sbb
jo
jmp
mov
pop
add
push
mov
pop
icebp
imul
in
jnp
or
ja
inc
mov
mov
je
ss
out
xchg
sub
lds
test
lods
popa
nop
dec
mov
shlb
pop
xor
push
loopne
jmp
and
ret
js
in
xchg
dec
inc
lods
mov
in
in
dec
sub
aas
sbb
dec
and
aam
and
cmp
stos
and
aam
jl
notl
or
mov
add
fucomp
sbb
cmp
mov
iret
xchg
popf
test
mov
in
stc
jnp
dec
sbb
loopne
dec
and
pop
cmp
das
cmp
xor
mov
aam
movsl
push
into
mov
out
rcll
sbb
sbb
jne,pt
test
cmp
iret
loope
xchg
cmp
add
dec
mov
or
or
mov
pop
aam
dec
jbe
lahf
cmp
cmpsb
rclb
dec
int3
int
movsb
flds
pushf
data16
adc
dec
bound
stos
scas
xchg
push
arpl
lcall
test
dec
movswl
or
enter
mov
adcl
sar
add
clc
mov
es
dec
lods
in
insl
dec
into
xchg
mov
xor
ds
mov
lret
pop
xor
popf
mov
jbe
dec
pop
and
sub
std
fisttpll
fwait
pop
and
cmp
fucom
jg
pop
mov
aad
cmc
addl
cli
fs
jecxz
test
dec
push
sbb
mov
sbb
ss
test
jb
sahf
rcrl
push
scas
fistps
mov
ja
cmp
es
rclb
mov
orl
fildll
or
push
mov
or
in
cmpsb
clc
mov
cmp
in
subl
nop
push
push
jmp
sarl
lahf
enter
outsl
into
iret
imul
ret
mov
aas
push
leave
sub
decl
sub
mov
cltd
dec
push
lock
pop
addb
inc
mov
xchg
inc
shll
mov
fisubrl
pop
mov
pop
stos
xor
lcall
jno
xchg
data16
jbe
loopne
aaa
pop
and
stos
lea
outsl
loopne
fcomi
movl
inc
jmp
mov
xor
pop
out
pop
inc
mov
xchg
data16
adc
in
fistpl
insb
cmp
test
dec
ljmp
xor
xchg
jg
xor
loopne
jb
bound
addr16
and
enter
loop
imul
adc
dec
popf
loopne
pushf
ret
fldenv
sbb
mov
gs
icebp
out
fwait
sbb
into
cmpsl
ja
push
jp
shl
push
in
add
test
pop
jp
imul
fsubs
test
dec
subl
and
push
mul
not
inc
popa
fdivs
pop
or
mov
fsts
mov
jl
cmp
dec
mov
mov
jns
mov
cmp
jne
imul
js
dec
cmpsl
push
sbb
push
rorl
push
add
adc
test
aaa
sbb
xchg
push
jae
dec
adc
insb
or
dec
out
cmpsb
xor
insb
popf
add
dec
sub
inc
out
sub
mov
aas
xor
test
mov
ljmp
int
add
in
jle
lds
iret
jmp
mov
idivb
push
mov
xchg
and
adcb
inc
push
xor
mov
inc
xchg
cmp
stos
nop
or
pop
out
jle
fsubrl
rclb
filds
outsl
and
insl
adc
add
cmp
inc
dec
dec
cmpsl
cmp
cmpsl
xchg
xchg
stos
mov
sub
ljmp
dec
mov
loop
or
xchg
xorb
mov
pop
sub
lods
gs
or
shll
fcomip
jbe
lret
push
pusha
hlt
jecxz
pop
enter
aas
adc
mov
aas
icebp
arpl
push
inc
aad
mov
pop
inc
lods
add
lahf
ja
xlat
out
jnp
or
lret
iret
mov
pop
movsb
cltd
add
push
push
mov
in
les
inc
dec
push
pusha
shrb
mov
dec
mov
ljmp
sub
cmc
push
and
xor
addb
mov
scas
sbb
aas
push
xor
sub
cmpsl
sbb
out
cld
and
outsb
ds
sbb
fstl
dec
sub
fisubrs
xchg
test
scas
dec
dec
outsl
cmp
cmp
mulb
mov
popf
xchg
and
cmp
gs
popf
imul
push
pop
data16
xor
test
mov
or
js
push
jecxz
roll
inc
arpl
jle
aad
negb
mov
or
sub
pop
push
add
mov
popf
sub
cli
lcall
insl
jno
inc
push
es
inc
stos
mov
lds
fidivl
inc
mov
inc
dec
xorb
and
add
movsb
mov
int3
jp
mov
cmc
fldcw
sbb
das
jno
in
ljmp
push
add
movsl
ds
xor
and
lfs
dec
aad
sbb
loop
popa
test
jae
mov
repnz
mov
jmp
lret
mull
pop
and
sub
push
mov
push
xor
cmp
mov
jae
xor
xchg
loopne
int
inc
push
jne
test
call
in
aas
add
dec
mov
cmpl
push
cmp
in
jge
popf
sbb
jge
adc
jge
xchg
stos
mov
push
and
cld
push
loope
roll
push
mov
lret
jbe
in
push
cld
push
mov
clc
mov
mov
pop
fisttpl
sbb
aam
pop
sub
sti
aam
pop
dec
xor
and
nop
stc
jae
or
add
js
call
jo
mov
nop
leave
ds
sti
mov
roll
jp,pt
xor
ja
ds
push
clc
jo
mov
ljmp
nop
jbe
mov
push
jecxz
and
lcall
push
xlat
push
sbbl
jno
lods
adc
mov
in
dec
mov
xor
mov
fisubs
int
pop
ret
dec
push
pop
imul
sub
jmp
jne
or
xor
pcmpeqb
or
imul
arpl
push
cmpsl
fistl
ja
mov
cs
fnstsw
jnp
cmp
jno
add
mov
sub
je
scas
popf
daa
push
jno
push
sbb
rorl
adc
or
xlat
dec
rcrb
push
fnstcw
mov
or
clc
aaa
xorl
sub
or
repnz
jecxz
pop
sub
sbb
stos
xchg
repz
add
mov
pop
in
xor
popa
out
fnstsw
repnz
lret
mov
iret
scas
dec
aaa
add
xlat
lret
xchg
and
imul
aam
testb
in
fistl
push
and
scas
and
or
mov
divb
or
jl
ja
comiss
cmpsl
sbb
call
sarl
jle
addb
ror
inc
orb
js
ret
popa
cli
fdivs
or
sbb
in
fimuls
dec
push
imul
aad
cmpsb
jbe
sbb
ret
mov
mov
dec
ljmp
jnp
mov
pop
int3
imul
aam
aas
das
sbb
leave
in
xchg
mov
js
cli
test
inc
push
mov
xor
jns
addr16
sub
int3
adc
enter
xchg
adc
orb
xlat
mov
sbb
je
call
pop
xlat
lret
mov
and
ljmp
loope
out
fistps
jno
jl
cmc
adc
dec
mov
or
loope
cmc
ret
jecxz
jo
insl
popa
xor
out
inc
ss
pop
and
fwait
pushf
jo
inc
dec
sub
add
push
out
mov
jns
dec
xchg
ret
pop
and
xor
mov
aaa
mov
xchg
mov
add
dec
call
sbb
push
sub
add
or
lods
fisubs
sti
pop
ret
push
push
faddp
in
dec
push
jmp
xchg
add
in
sub
add
add
std
imul
sbb
mov
jg
fistpll
rol
lods
les
xchg
imul
push
shll
lret
dec
out
dec
cs
std
dec
adcb
fisubrs
insl
lahf
js
or
enter
leave
ja
adc
sub
xor
pop
stc
pop
pusha
fldl2t
es
mov
in
leave
jbe
out
jg
out
mov
outsl
cmpsb
inc
mov
cltd
adc
dec
mov
movsl
mov
clc
jne
dec
cmpsb
push
insl
jl
icebp
jp
cmc
out
mov
sbb
adcb
push
notl
mov
xchg
xor
stos
aas
pusha
sar
dec
inc
lret
cmpl
pop
add
rcl
addr16
mov
sti
fldenv
mov
cmpb
ljmp
dec
xchg
sahf
mov
out
loopne
int
sarl
in
imul
cwtl
fs
dec
push
fmulp
cltd
test
inc
nop
cs
mov
orb
push
inc
pusha
iret
push
lahf
repz
mov
adc
xor
add
lret
lret
aam
adc
arpl
je
subl
shrl
dec
adc
push
out
xor
enter
mov
xor
cmp
adc
addl
xor
mov
mov
scas
lods
test
mov
pushf
adc
test
dec
int
mov
inc
roll
or
in
pop
inc
ret
das
dec
in
shll
cmpb
out
icebp
jle
bound
lock
jmp
sbb
add
in
mov
ljmp
test
and
and
xchg
jmp
out
test
aam
jnp
es
mov
mov
clc
ja
fisubl
lds
adc
add
sub
mov
loop
pop
jmp
xchg
jmp
push
shll
jg
out
aaa
lods
cs
popf
test
dec
mulb
and
int3
loopne
xor
scas
int3
mov
clc
orl
xchg
add
fwait
pusha
shll
pop
jle
xchg
inc
xlat
add
jp
and
pushf
ret
shlb
popf
jg
inc
lcall
stos
push
cmc
xlat
call
xlat
test
int
pop
aaa
mov
pmaxub
cmp
rcrb
fdivrl
pushf
xchg
popf
aam
mov
mov
ds
call
out
lock
std
bound
rorl
dec
fcomip
sarb
adc
lret
mov
dec
adc
ficompl
aas
shrb
movsb
loope
lods
test
pusha
cmp
into
loope
out
enter
xor
dec
aaa
test
scas
pop
mov
mov
push
push
movsb
scas
inc
or
dec
mov
es
push
and
fildl
mov
pop
ret
mov
int
xchg
adc
mov
movsl
add
pop
cmpsb
push
mov
mov
and
loopne
scas
pop
adc
dec
clc
cmpsl
sahf
out
or
aam
je
leave
imul
test
sbbl
push
lods
subb
xchg
cld
and
cmp
push
lock
leave
scas
push
scas
adc
adc
jmp
push
mov
aaa
movsl
loop
push
inc
adc
imul
adc
add
out
test
push
dec
jecxz
add
cmp
clc
push
inc
mov
mov
cwtl
and
add
les
out
xor
xchg
in
jge
mov
stos
aad
xchg
pop
or
js
out
rorb
std
xchg
xor
mov
or
cmp
insl
push
xor
mov
add
inc
lahf
lock
or
jb
arpl
jns
inc
outsb
add
pop
cmovle
in
xchg
fwait
bnd
jl
lock
sti
insb
mov
inc
call
gs
mov
and
xlat
add
jle
das
loope
push
dec
xor
mov
cmp
cmpsb
sub
jnp
mov
stc
stos
out
adc
add
stos
pop
aad
jno
fidivrl
jo
xchg
adc
int3
fcmove
or
sbb
jg
shlb
hlt
push
mov
mov
inc
popf
push
push
push
or
movsl
into
inc
mov
xchg
addr16
xor
imulb
jle
ret
mov
out
rcrb
xchg
lods
jecxz
jmp
sarb
xor
xor
stos
gs
addr16
add
dec
or
cmp
cmp
xchg
cli
pop
jnp
pop
adc
into
sti
int3
push
add
or
outsl
int
fsubl
pop
mov
insb
jmp
movsb
aaa
mov
fnsave
dec
jno
lret
push
pop
mov
fcmove
jp
rcr
outsb
inc
add
mov
addr16
cwtl
lods
mov
leave
dec
out
mov
sbb
pop
mov
call
dec
dec
xchg
inc
push
test
jae
push
sbb
adc
ret
or
shll
push
call
call
ljmp
sti
je
pushf
cmp
push
pop
pop
inc
inc
fwait
xor
movsl
rorb
cmp
movsb
pushf
ds
aaa
test
sbb
inc
dec
gs
sub
sti
push
pop
idiv
movsb
mov
sub
stc
in
pop
pop
mov
and
lods
js
inc
mov
add
mov
sarb
xor
fistpll
and
xchg
add
jp
mov
out
movsl
fwait
cmp
into
sbb
adc
mov
pop
lock
aas
push
mov
push
aaa
xor
test
push
cltd
inc
mov
sub
js
push
xchg
imul
sbb
das
outsl
cwtl
mov
fsubs
ret
cmp
mov
mov
loope
iret
addl
icebp
fldcw
addr16
aad
sub
xchg
outsb
into
lock
xor
stos
imul
xchg
xchg
out
add
sahf
mov
or
dec
shll
or
push
xor
and
push
xor
or
rcrl
jae
push
jmp
mov
cmp
jae
insl
or
cmp
inc
sub
ss
adc
shrl
pop
lds
mov
mov
lock
jae
mov
daa
arpl
iret
lock
mov
or
insl
jne
cmc
push
inc
fldl
loop
test
and
and
add
and
xor
outsb
sub
push
pop
sub
pop
out
pop
bound
push
mov
add
lods
icebp
fdivrl
mov
jno
adcl
xor
cli
loopne
mov
jne
mov
rorl
cmpsb
jne
cmp
pop
push
and
mov
fiaddl
mov
movsb
gs
imul
inc
sub
sbbb
rorb
or
movsl
test
es
leave
shlb
xor
push
inc
xchg
rorl
sub
je
iret
jl
inc
fldenv
cmp
test
stc
shl
rcrl
stos
fs
pop
les
jmp
xchg
jecxz
sbb
sbbb
pop
aas
out
and
in
in
xor
pushf
jbe
push
mov
loope
xchg
pushf
mov
sbb
push
iret
insl
xchg
jg
in
and
add
outsl
sub
xchg
or
mov
mov
cs
pop
popf
mov
mov
push
pop
dec
push
jne
cld
mov
sahf
xor
imul
adc
pop
enter
mov
sbb
movsb
popa
repnz
test
in
adc
mov
fistps
mov
sub
out
clc
push
sbb
ffreep
insb
js
mov
cli
sbb
jnp
push
mov
xlat
js
pop
sub
test
jl
call
adc
aad
xacquire
inc
shl
xor
into
iret
aaa
je
mov
jnp
ret
add
lahf
test
fmuls
xchg
add
push
or
ret
cmpsb
push
cmp
ret
mov
pop
ja
imul
ja
lcall
xchg
pop
xor
outsb
scas
loope
cmpsl
stos
rcl
cmp
and
fcmovu
pusha
mov
inc
repz
xlat
add
dec
loop
test
int3
xchg
dec
stos
jb
vmaskmovdqu
shl
dec
insl
pusha
iret
cmpsb
adc
push
shrl
addb
out
sbb
movl
outsb
out
rolb
int3
mov
lds
push
mov
int
mov
inc
mov
dec
cld
xor
or
inc
adc
movl
out
and
out
cmp
hlt
dec
shrl
test
mov
in
pop
mov
call
fldcw
push
gs
fimull
out
push
sarl
jb
cmpl
dec
sarl
xchg
mov
loopne
mov
pushl
sti
fildl
test
testb
lock
mov
int3
xchg
je
mov
es
xor
data16
sub
push
cs
adc
mov
and
int
scas
mov
fld
cmp
pop
jnp
pop
and
pop
mov
fcoms
sub
rorb
stc
mov
ja
push
add
and
in
dec
leave
lods
shrb
jnp
inc
scas
mov
inc
inc
shlb
imul
daa
mov
sbb
shll
push
repz
das
loopne
ljmp
xor
andl
lods
dec
lcall
push
into
push
ds
jo
push
sub
jae
mov
aaa
pop
pop
jl
mov
jae
jge
aaa
int
add
pop
mov
ss
pop
add
push
xlat
adc
inc
add
add
imul
adc
mov
repz
mov
add
loop
fimull
add
xor
mov
idivl
cld
cmpsl
fs
fcmovbe
aas
scas
or
lret
mov
jo
cmp
push
mov
push
cmp
mov
sbb
sub
xor
iret
adcb
or
les
sahf
push
pop
ror
fcoml
in
sbb
cli
sbbb
jno
adcl
inc
jg
aad
fnstenv
add
inc
daa
sar
lods
inc
or
scas
mov
lcall
inc
add
stc
cmp
xchg
addb
sub
in
insb
mov
outsl
popf
out
pop
add
fdiv
ss
fbstp
or
mov
repnz
clc
lret
adc
push
mov
push
iret
mov
push
test
jg
fcom
inc
xor
mov
cmp
imul
xchg
loopne
jo
cwtl
subl
insb
js
mov
push
and
pop
push
push
arpl
rclb
ljmp
jns
test
loopne
test
js
cmpsl
push
outsl
nop
jo
adc
movsl
lret
xchg
mov
data16
adc
iret
xor
add
repnz
mov
insb
add
mov
jbe
mov
lcall
xchg
rcll
cld
movl
loope
mov
icebp
fwait
js
out
mov
mov
ret
andb
adc
adc
bound
inc
pop
rcrb
pop
clc
xchg
push
incl
pushf
dec
rol
mov
mov
jle
rorl
fiaddl
ss
popa
push
xchg
sbb
out
pop
adc
fistps
movsl
fisttpll
and
roll
movsl
scas
arpl
xor
popf
aam
ja
cmp
push
int
out
mov
push
dec
mov
pop
rol
fnsave
les
xchg
or
sti
shlb
or
insb
popa
idivb
add
xchg
and
xchg
mov
sub
loope
adcb
mov
jns
push
jp
pop
mov
in
icebp
push
adcb
out
in
adc
jb
mov
dec
scas
cmp
imul
int
jg
and
std
push
sub
pusha
and
ror
pop
shlb
jge
sbb
push
lahf
jno
xor
mov
dec
insb
adc
mov
jecxz
je
or
sub
push
mov
mov
sbb
push
repnz
pop
mov
stc
hlt
js
push
fimull
fcmovu
dec
xchg
imul
sub
push
out
cmp
cli
push
xchg
in
es
xchg
ss
cmp
sbb
cmpb
xor
push
dec
lds
int3
jae
xor
pusha
and
adc
stc
jecxz
stc
inc
imul
sub
dec
cmpsb
jnp
inc
out
cltd
test
mov
adc
cmp
out
insb
sub
loope
add
loope
cmp
add
cmc
cmc
cwtl
rcl
jg
xor
dec
inc
cmc
cmp
ret
dec
dec
xchg
adc
inc
xchg
adc
adc
ficomps
lahf
dec
int3
push
jp
addr16
divl
cld
add
and
sbbl
jb
xchg
jne
orl
das
mov
jae
push
lods
jbe
insb
ret
sbbb
mov
clc
mov
jg
inc
or
in
push
dec
movsl
int3
bsr
rorl
push
int3
sbb
lcall
lods
xor
sub
add
adc
pop
jg
leave
idivl
lds
adc
fistl
jge
cmpsb
jl
fiaddl
pop
cmpsl
test
ror
movsl
sub
icebp
outsl
je
fsubrs
sbb
push
push
jmp
mov
sbb
fsubrl
and
mov
cs
adc
xor
cltd
jecxz
rcr
mov
scas
pop
add
enter
xor
daa
cmp
enter
dec
add
push
mov
repnz
cmc
das
xchg
jo
or
scas
jmp
out
or
andb
inc
sub
ficoms
inc
jb
sub
mov
and
gs
loopne
pop
mov
addr16
xchg
incl
imul
mov
and
push
call
ret
mov
mov
cmp
mov
sbb
mov
jl
and
xor
lods
adc
xor
or
fucom
mul
lret
push
nop
cmp
or
popf
pop
jne
int3
dec
loope
loope
lcall
popl
xor
jo
ja
std
into
pop
movb
inc
jmp
scas
push
lea
in
or
pop
pusha
mov
and
pushf
outsb
aad
shll
fisttpl
jge
fdivrl
inc
js
cmpb
adc
gs
adc
push
mov
fists
insb
push
into
pop
or
jne
aaa
testl
lea
clc
out
dec
in
mov
std
jo
mov
add
fstps
fidivs
xchg
push
rorl
pop
adc
sub
into
or
aaa
jge
mov
sbb
inc
popaw
mov
in
cmp
test
lret
aas
test
xor
mov
emms
shll
inc
mov
insl
xchg
addl
adc
insl
ja
sahf
aad
out
lea
push
fldl
call
jae
xor
and
pop
test
iret
lcall
lret
and
mov
cmpsb
add
lahf
mov
or
inc
fnstsw
jp
ja
loopne
leave
xchg
pusha
push
fwait
mov
aaa
jae
call
push
push
sbb
in
loopne
cmp
push
mov
cli
out
push
pop
fwait
or
or
lret
and
aaa
aas
ds
push
fs
xor
les
pop
sub
jnp
xchg
cmp
mov
inc
lcall
and
jno
dec
and
push
pushf
pop
mov
jae
mov
add
data16
sbb
mov
jg
mov
cltd
repz
lds
std
cltd
adc
cmp
inc
out
test
cmpb
loopne
and
scas
loop
test
jecxz
add
or
inc
int
sub
inc
jns
sub
mulb
mov
cld
add
or
push
pop
test
adc
out
pop
cmp
pop
xor
loop
push
mov
loope
sub
and
push
mov
stos
mov
clc
inc
divl
add
sbb
sbb
mov
in
mov
test
jbe
dec
jno
mov
loope
shll
xor
sbb
hlt
insb
add
mov
sti
lcall
subb
gs
stc
icebp
mov
es
cmp
sbbl
inc
xchg
in
mov
bound
fmul
adc
aad
pop
mov
mov
adc
test
lret
mov
push
jle
jp
into
cmpsl
add
cmp
rorl
arpl
push
pusha
cmp
add
cli
jmp
mov
inc
dec
repz
es
jmp
in
orl
jecxz
aas
mov
mov
add
xchg
sub
pop
std
sbb
icebp
mov
shl
inc
stos
mov
jmp
icebp
insb
gs
stc
sbb
xchg
stc
jb
nop
fcmovbe
mov
test
jnp
loop
xlat
mov
cmp
jecxz
pusha
mov
in
in
mov
fmull
mov
pop
cmp
or
aam
jg
jge
lds
pop
sub
add
jns
es
mov
jae
adc
gs
inc
xchg
movsb
out
ret
aas
sbb
mov
ficoms
cmc
pushf
mov
int3
jbe
in
add
push
mov
fistps
adc
and
aam
pop
stc
xor
out
or
or
lret
push
jl
loope
mov
push
xchg
cltd
test
bound
pop
dec
fistpll
shrl
xor
negb
jge
aaa
sub
ljmp
test
mov
out
cmp
and
xor
pop
cwtl
mov
and
pop
mov
movsl
sbb
jns
addl
lahf
insb
leave
rcrl
dec
xor
movsb
xchg
in
xchg
in
insb
mov
pop
nopl
or
mov
outsb
lock
imul
testl
and
in
fcomp
jecxz
and
test
mul
les
jae
stos
add
cmpsl
int3
mov
cmp
out
cmp
pusha
mov
call
jmp
subb
addr16
pop
pop
cmc
cld
jne
repnz
insb
repnz
xchg
cmc
in
ss
mov
push
mov
mov
aad
and
cmp
flds
jle
inc
xlat
xchg
cmp
mov
mov
mov
cmp
ja
adc
rcl
mov
fst
jo
stc
sbb
inc
fmull
mov
cli
cmp
imul
std
add
imul
push
fs
xlat
xchg
mov
outsb
jl
cmovbe
mov
jo
daa
imul
and
mov
jmp
xchg
pop
inc
ds
out
dec
lds
dec
rclb
ds
push
aam
outsl
insl
cmp
cmp
mov
mov
adc
pop
jnp
push
xchg
jnp
inc
out
iret
out
mov
fidivrl
cwtl
push
jl
add
sbb
mov
add
mov
cmp
js
outsl
sub
fnstenv
ret
jle
xchg
xlat
scas
cmc
dec
pop
jecxz
loopne
push
inc
pop
and
ret
iret
sbb
mov
pop
daa
jb
push
jnp
or
xchg
push
imul
test
shlb
fiaddl
adc
es
cmp
popa
inc
cltd
aaa
push
in
jb
in
or
push
je
mov
and
sbb
mov
mov
adc
jg
loop
lods
inc
out
jl
mov
mov
test
fstps
adc
push
jmp
outsl
mov
je
dec
pushf
xor
and
pop
sub
pop
loope
stos
mov
mov
bound
mov
sbb
arpl
push
arpl
xor
pop
leave
dec
mov
sbb
mov
lret
push
and
xor
jg
insb
dec
out
lret
mov
cmpsl
or
out
dec
call
nop
scas
mov
shl
or
pop
lea
xor
pop
in
test
pusha
gs
mov
mov
add
jl
xchg
mov
int3
jne
inc
mov
stos
sub
sub
push
cld
push
pmovmskb
outsl
data16
jnp
xchg
push
leave
or
dec
jo
pop
mov
call
jl
pop
cmp
sub
int3
popa
pop
repz
aam
push
les
add
jcxz
movsl
enter
push
dec
loopne
push
lretw
stc
pop
gs
rolb
push
clc
or
jg
adc
stos
jecxz
dec
push
ds
out
lods
push
pop
mov
pop
add
xor
hlt
inc
lea
jo
inc
rcrb
punpckldq
lea
mov
add
rorb
lahf
filds
shlb
push
nop
pop
or
mov
adc
jmp
insb
and
in
out
cmp
or
cwtl
jp
mov
sub
cs
mov
pop
cltd
outsl
cmpsl
mov
inc
add
cmpl
cmp
dec
xlat
xchg
das
mov
sbb
idiv
cld
add
jl
xor
inc
imul
add
push
adc
mov
push
xchg
pop
out
popa
adc
sbb
jecxz
jnp
mov
xchg
ret
loopne
gs
ja
jno
or
int
and
in
sub
sub
and
jge
adc
xlat
aas
hlt
cwtl
push
sub
cmp
enter
cmc
add
daa
sub
insb
test
xchg
jae
jo
xor
ljmp
test
arpl
incb
cmpsb
sub
xor
jle
jbe
mov
pop
subl
ret
test
sbb
sahf
into
jns
fisttpl
jnp
mov
xchg
sbb
xchg
outsb
pop
xchg
adc
mov
insl
cmovo
and
std
adc
hlt
js
loope
push
sbb
call
push
adc
subl
out
mov
movsl
fisttpl
aaa
mov
fst
das
jb
dec
push
xchg
clc
ret
xchg
push
xchg
push
stos
out
out
test
sub
int
lret
mov
pusha
in
xor
add
shlb
popf
dec
sbb
xchg
xor
mov
mov
xchg
dec
inc
mov
xchg
xor
adc
out
aas
sbb
pop
adc
leave
jmp
sub
add
cwtl
mov
iret
mov
and
movsl
test
shlb
sbb
add
mov
inc
inc
xchg
add
mov
dec
mov
mov
mov
jns
lahf
lods
fimuls
push
mov
mov
mov
cwtl
mov
addl
mov
addl
or
leave
or
scas
cwtl
aad
stc
pop
cmpsb
ficomps
inc
or
jecxz
out
fwait
or
or
or
dec
add
insb
jne
imul
or
pop
mov
dec
mov
test
popa
ret
cs
mov
mov
pop
sub
daa
push
inc
xchg
imul
and
jb
sub
cmc
pop
xor
add
int3
cmpsb
add
decb
mov
dec
aaa
xchg
push
push
adc
movsb
aad
repz
in
add
loop
jno
inc
sbb
cmc
xchg
icebp
pop
mov
xor
dec
das
push
add
adc
std
push
fwait
stos
push
nop
or
in
cmp
test
inc
sub
lcall
clc
shrl
scas
mov
stos
enter
or
cmpsl
rcr
pop
mov
out
sub
out
push
notl
sbb
xor
adc
and
loope
shlb
das
popa
xchg
cmp
jne
sbb
pop
rcl
pusha
cltd
mov
hlt
adcl
mov
xor
or
xor
mov
jbe
cs
lret
push
sub
mov
pusha
xchg
mov
lret
call
fstps
add
jne
jo
jne
mov
out
xchg
mov
jb
clc
lock
push
in
hlt
sti
push
jno
sbb
mov
fs
mov
adc
mov
cmp
scas
or
mov
aaa
je
xchg
lods
fistl
jns
pusha
inc
pop
sub
fimull
xchg
aaa
adc
sub
dec
cmp
cmp
mov
test
mov
imul
ficoms
xlat
xchg
pop
jp
lods
pop
mov
cmp
insb
mov
out
popa
push
xorb
ja
mov
inc
inc
push
add
adc
mov
push
sbb
faddp
iret
arpl
jae
sub
cwtl
jecxz
mov
test
jne
mov
fcmovb
loop
cmp
pop
std
in
int
adc
test
adc
mov
ss
add
cmp
mov
dec
mov
adc
cmp
jne
mulb
inc
sbb
std
xor
call
loope
les
or
xor
fwait
into
jo
sub
scas
push
test
pop
stos
adc
fidivl
push
inc
push
clc
xor
jno
mov
jmp
jge
incb
gs
mov
fistpl
jecxz
scas
cmp
lods
jl
xor
jle
sbbl
mov
mov
adc
mov
popf
in
xchg
fs
rcl
dec
mov
mov
out
mov
cmp
xchg
jnp
and
iret
aad
aaa
or
cmp
mov
jge
or
daa
jl
loopne
das
lret
sub
ret
aad
arpl
dec
push
push
mov
stos
or
xor
sub
mov
mov
xchg
jle
xor
jno
in
mov
jge
and
xchg
inc
adc
xor
movsl
or
lods
int
movl
xorb
jb
addl
call
jb
push
test
cmp
sbb
aaa
push
test
rolb
jg
repnz
insl
dec
pop
adc
adc
inc
in
js
jns
lods
in
sti
popa
lret
fdivrs
mov
and
dec
sbb
push
inc
jl
dec
jns
and
sub
mov
xor
adc
jnp
jns
sub
add
out
in
dec
and
mov
jns
popa
xor
pop
xchg
repz
dec
xor
mov
dec
adc
shll
pop
call
and
sub
and
cltd
scas
jecxz
sbb
fstpl
rcr
xor
dec
sbb
xchg
cmpl
cli
add
jg
mov
pop
clc
sub
movsl
fsubrp
imul
into
mov
jmp
push
inc
cltd
adc
xchg
cmc
nop
sub
and
roll
adc
xchg
jge
fnsave
jnp
aad
cs
jge
ret
lcall
sarb
leave
fadd
inc
insb
mov
pop
jg
aad
inc
out
cmp
inc
mov
jno
hlt
addr16
mov
dec
mov
addr16
pop
pop
stc
jecxz
sub
mov
notl
add
mov
fisubs
inc
outsl
pop
popa
cmc
cli
adc
insb
push
dec
pop
adc
aaa
mov
aas
insl
jno
sub
aad
aam
jo
scas
fs
js
or
push
and
cwtl
test
arpl
pop
popf
test
pop
jo
ljmp
enter
movsl
jae
adc
popf
jae
negb
insl
lock
mov
sbb
pop
loop
mov
ror
cmp
clc
cmc
jb
sub
push
popa
jg
cmp
iret
aad
jns
lea
pop
jge
loope
pop
or
lahf
bound
test
and
aas
out
mov
push
ss
int
jae
adc
outsb
inc
dec
lahf
pushf
bound
pop
jnp
test
mov
int3
lods
clc
sbb
cld
ret
les
jg
mov
inc
inc
jo
test
sbb
push
inc
jbe
jno
sbb
cmc
jbe
sbb
or
mov
outsl
adc
out
cmp
sahf
dec
inc
lea
pop
mov
cmp
mov
addr16
ja
std
push
jl
fwait
cmpsb
daa
and
push
xchg
out
loope
imull
repz
sub
lods
fcoms
mov
in
inc
jg
xchg
scas
fbld
cltd
sbb
addl
dec
lret
aas
mov
repz
xchg
lahf
test
test
sarl
stc
test
hlt
insb
fcoms
divl
cmc
call
js
bnd
lcall
aam
mov
push
and
aas
mov
sahf
adc
sahf
xor
xor
xor
test
cs
xlat
inc
iret
lods
lea
negb
adc
add
jae
mov
mov
mov
xchg
adc
or
dec
or
xchg
repz
cld
add
call
movsb
and
xor
sahf
clc
pop
xlat
fstpt
adc
incb
repz
cmpsl
in
mov
pop
jecxz
shlb
jl
push
in
idiv
sbb
cvtdq2ps
ljmp
mov
call
fxam
arpl
bound
in
cltd
mov
pushl
fildll
loopne
fmull
or
movsl
sub
iret
scas
icebp
jnp
sub
push
in
cli
sbbl
mov
or
push
inc
mov
cs
mov
cmp
mov
xchg
in
out
cld
or
iret
stc
inc
out
rcrl
sub
mov
inc
pushf
jne
jo
mov
lret
popf
test
loope
mov
pop
cmp
sbb
mov
hlt
xor
xor
mov
mov
mov
jl
push
inc
mov
xor
dec
and
mov
mov
mov
sub
push
or
repnz
mov
ja
xor
mov
sub
add
cmc
lock
dec
inc
mov
int3
xor
inc
pop
jb
lahf
inc
test
dec
inc
loopne
rcl
scas
xor
mov
sbbb
add
aas
mov
out
mov
les
int
sub
mov
mov
gs
cmpb
and
subl
mov
aam
mov
or
lcall
inc
sbb
add
sbb
cltd
push
adc
mov
adc
ljmp
cs
sbb
add
mov
clc
add
test
mov
mov
outsb
adc
lds
inc
pop
popf
and
adc
pusha
idivb
mov
mov
pop
sbb
and
sbb
test
fsubrl
test
inc
jg
aas
aas
inc
ret
xchg
dec
mov
std
movl
in
nop
push
cmp
sbb
icebp
mov
cmpsb
cmc
push
das
pop
xchg
jo
cltd
xchg
pusha
pop
enter
mov
dec
jbe
xor
fwait
cli
mov
cmp
out
movsl
mov
shr
fidivs
jb
push
das
loope
push
loope
fs
lea
cld
js
mov
lds
xor
pop
in
lcall
mov
test
lods
mov
test
ffree
rcrl
cld
and
inc
mov
push
cltd
mov
add
mov
pop
pop
in
mov
mov
loopne
lret
negb
cmp
adc
mov
cmc
fstps
inc
stos
loop
xchg
jo
ss
jmp
jnp
sbb
stos
dec
in
or
xchg
gs
mov
push
test
push
subb
test
add
sbb
and
lods
pop
mulb
cmpsl
fnsave
in
insb
aas
cmp
mov
gs
xor
push
and
lods
push
sub
xor
cli
pop
decb
mov
aaa
ss
ficoms
xchg
dec
not
aad
sbb
cmp
cs
sbb
sub
jge
mov
xchg
jle
js
push
jns
xchg
inc
sub
push
pop
sbb
test
scas
imul
sbb
out
aaa
dec
lock
mov
inc
rol
popa
adc
push
or
push
sti
sbb
adc
scas
in
aam
repnz
add
test
xchg
rcr
add
lcall
add
push
xor
xor
xchg
pop
outsl
in
loopne
sub
outsb
pop
sub
cmp
or
int
das
into
xchg
pushf
push
aad
pop
adc
pop
pop
sbb
add
mov
xchg
cmpb
push
in
pop
pusha
scas
xchg
into
inc
fs
scas
out
jo
xchg
adc
loope
leave
cmpsl
mov
sub
lea
xor
into
ds
sub
mov
in
adc
add
test
es
inc
jecxz
in
cmp
fst
sbb
sbb
pusha
xor
jne
scas
js
jp
std
jg
out
sub
test
mov
add
lret
cwtl
pop
test
xchg
lahf
xchg
xchg
mov
xchg
mov
cmp
sti
sbb
xor
adc
aad
mov
sub
or
mov
sbb
pop
fimuls
icebp
sub
mov
sub
xchg
add
popf
aaa
mov
loop
imul
stos
mov
repnz
les
cltd
jge
add
test
xchg
je
sarl
xor
fsubrs
clc
in
mov
test
mov
add
ja
adc
popf
psrad
pop
mov
mov
add
mov
clc
ficompl
aas
jmp
xor
stos
jge
fwait
out
mov
ja
daa
add
aas
and
lret
or
cmpb
dec
das
sahf
push
mov
shl
inc
push
mov
out
add
xchg
xchg
mov
sbb
or
and
pushf
sbb
addb
mov
jae
and
mov
cmp
lods
out
pushf
or
adc
mov
movsb
std
mov
imull
rolb
mov
sub
mov
ror
dec
hlt
push
xor
scas
adcl
es
cmpsb
jnp
push
lahf
pop
jae
jbe
and
mov
in
push
jno
daa
xor
mov
aam
jnp
call
pushl
in
mov
dec
sbb
jb
test
mov
aaa
push
lahf
dec
sti
out
outsb
js
push
push
jnp
fwait
xlat
aam
loopne
mov
mov
cmpsl
mov
jp
loopne
lods
fildll
mov
outsl
xchg
jecxz
cmp
lods
pop
iret
into
jg
sbb
in
rcrb
xchg
and
es
ret
mov
cmc
test
lods
lods
mov
add
pushf
xchg
add
loopne
and
dec
jle
aam
cld
outsb
or
popa
cmpsl
pop
mov
mov
imul
repz
pop
xor
lods
cmpl
xchg
jge
andb
jbe
enter
inc
lahf
gs
xlat
lods
or
mov
sti
shrb
mov
dec
enter
or
dec
repnz
adc
roll
inc
cli
add
sti
pop
jb
mov
mov
add
andl
popf
mov
pop
push
fcomps
mov
sbb
inc
mov
loopne
mov
adc
daa
mov
add
mov
shrb
cmp
or
orl
pop
push
out
roll
cmpsb
imul
sub
fsts
imul
mov
sub
cmp
popa
das
or
and
mov
insl
int3
pop
mov
push
repnz
adc
sti
sti
push
cltd
adc
dec
jmp
inc
cmp
out
not
cmpsb
cmp
dec
jg
subb
or
lcall
out
and
jge
lea
xchg
scas
cmp
and
xlat
inc
sub
repz
push
push
and
or
adc
xchg
imul
inc
mov
test
ljmp
push
sahf
scas
int3
xor
jae
lea
push
jl
jno
or
je
jp
push
gs
cmpsl
sar
or
pop
or
adc
or
inc
push
pop
cmp
mov
lock
dec
fisubs
and
pop
cmp
sahf
mov
mov
out
in
mov
lahf
jle
xchg
cmp
ror
push
or
ss
arpl
mov
xor
stos
fucomip
repnz
jge
jge
push
stc
loopne
inc
xchg
mov
mov
mov
add
scas
lcall
femms
call
fcomip
inc
sarl
sub
lret
sahf
jnp
pop
stos
fstpt
cwtl
push
lock
xorb
xor
outsl
cmp
push
sub
test
jmp
add
dec
xlat
popf
std
ja
pop
sbb
and
nop
adc
pop
xchg
dec
dec
daa
push
xor
jecxz
dec
cmpsl
mov
mov
cmpl
mov
vorps
adc
ret
stc
shll
push
xor
pop
lods
adc
imul
push
sub
xchg
cmpsb
imul
pop
std
jns
cs
bound
scas
sub
fsubrl
in
cld
repnz
decl
mov
and
or
push
adc
sub
cmp
inc
jo
adc
insl
cmc
addr16
fsubrs
into
ja
adc
inc
jle
push
and
xor
add
jmp
addb
flds
cli
adc
dec
xor
leave
movsl
fiadds
xor
popa
inc
inc
mov
imul
add
cltd
push
inc
jae
and
mov
iret
lret
inc
and
cli
lcall
xchg
mov
push
enter
inc
sti
fiadds
mov
ss
aam
mov
es
imul
enter
fst
push
ds
enter
rcll
ret
push
adc
adc
imul
mov
fcmovbe
mov
adc
mov
call
pop
rolb
mov
and
mov
lcall
pop
out
pop
sub
in
lea
xor
iret
das
add
add
push
std
cmpsb
xchg
test
jp
and
repz
mov
testl
push
cltd
inc
lods
xorb
jns
cmpl
push
jecxz
pop
xchg
mov
mov
push
ljmp
pushf
fwait
inc
pop
cwtl
lcall
movb
adc
jnp
push
fwait
out
add
push
jo,pn
mov
ret
sbb
inc
adcb
pop
push
adc
mov
sbb
popl
insl
repnz
test
popf
sbb
mov
int
sub
ds
gs
adc
sub
shll
add
and
loop
inc
call
cmp
stc
push
mov
and
das
out
shlb
aaa
loopne
inc
adc
lock
dec
aam
mov
or
mov
xchg
popf
adc
mov
jg
les
mov
stos
fcomi
mov
cwtl
leave
sbb
cmc
pop
int
fsts
cmc
in
pop
dec
hlt
fistl
mov
pop
xchg
xorl
pop
pop
jmp
fmulp
adc
push
aam
mov
dec
jmp
sbb
pop
xchg
movsb
in
in
and
test
xchg
shrb
pop
jl
dec
and
inc
test
test
loop
or
imulb
sbb
inc
mov
sub
test
orb
jecxz
fisttpll
pushf
call
cmp
add
sbb
mov
mov
xchg
shll
pop
mov
fstpt
mov
decb
jle
addb
cmp
lods
mov
jne
shlb
hlt
scas
adcl
jae
out
mov
pusha
xchg
mov
xor
and
popa
int
adc
cmp
inc
popa
inc
jecxz
les
lret
add
add
jmp
push
inc
ret
mov
and
nop
pop
outsb
cmp
addb
and
add
add
xor
sbb
out
sbb
movsl
test
scas
daa
xchg
mov
mov
xor
movsl
and
pushl
and
adc
push
push
repz
and
jmp
or
int
stos
xchg
add
fwait
and
shlb
in
test
adc
stc
jle
xchg
sahf
cmc
mov
test
xor
fwait
and
lret
sbbl
mov
push
xchg
pop
lret
xlat
scas
test
cmpsb
clc
push
or
sub
push
push
cs
cmp
add
pusha
out
xchg
and
sbb
add
outsl
and
cmc
cltd
pop
xor
mov
or
icebp
lods
mov
int3
or
xchg
stos
shlb
and
icebp
push
enter
xchg
not
xchg
fisttpll
jns
js
lahf
push
mov
test
or
cs
push
mov
xchg
inc
sarl
inc
dec
cltd
inc
je
out
jge
int3
jle
push
inc
jle
sub
sbb
fs
jge
push
repnz
and
xor
out
scas
jl
in
pop
test
pop
xchg
js
pop
cmp
fsubs
jb
adc
pop
sub
cmp
mov
sbb
stos
pushf
lret
frstor
pop
mov
cmp
pop
jmp
pop
mov
jnp
subb
sub
xor
cmp
cmpb
jae
lret
jecxz
jmp
sub
xchg
pop
dec
sti
mov
es
push
lret
add
fs
loopne
pslld
shrl
shrl
dec
pop
jbe
dec
test
in
data16
or
or
cmpsl
out
inc
pusha
iret
cmpb
inc
frstpm(287
sub
mov
insb
push
jbe
mov
and
mov
push
sbb
out
mov
mov
inc
adc
cmp
fildll
dec
test
imul
add
fs
mov
push
adc
mov
jmp
in
mov
fldenv
int3
inc
ret
jbe
add
fistl
add
pop
imul
cmp
cmpsb
loop
mov
shrb
sub
lahf
fucomp
sbb
leave
jecxz
pop
xchg
stos
add
mov
xlat
jl
sbb
lahf
xchg
lahf
hlt
jecxz
cmp
mov
ret
fcomps
movsl
xchg
push
mov
movsb
xor
mov
sub
push
adc
lds
les
popa
xchg
add
mov
mov
mov
pop
xchg
adc
repz
leave
fs
push
mov
push
insl
sti
sbb
pushf
jle
add
mov
jl
push
divb
mov
dec
sti
imul
outsb
sahf
lea
mov
adc
push
mov
mov
movsb
cmp
jmp
add
jp
int3
dec
xchg
inc
inc
jnp
leave
add
or
daa
mov
pop
inc
cmp
push
push
mov
inc
mov
dec
push
les
cwtl
jns
ret
cmp
mov
fcomp
mov
pop
sbb
sbb
sbb
mov
in
mov
repz
leave
push
xchg
or
cwtl
inc
inc
insl
push
lcall
sti
mov
mov
fiaddl
mov
pop
mov
push
cmp
adc
xlat
outsb
adc
int
sbb
sub
mov
pop
mov
push
push
push
mov
xchg
and
out
or
push
pop
pop
iret
loopne
xchg
cltd
stos
xchg
stos
dec
push
jb
cli
daa
inc
mov
sub
xor
test
sub
aad
cmp
iret
adc
mov
dec
mov
mov
mov
lret
push
leave
xchg
clc
pushf
jae
pop
mov
pop
data16
sub
iret
or
imul
cwtl
loop
xor
lods
dec
cmpsl
mov
add
pop
ret
mov
movsl
push
push
mov
in
out
sahf
inc
in
cmp
jae
mov
add
gs
fdivrp
cmp
jne
jbe
sbb
jnp
aaa
decl
dec
in
icebp
pop
mov
je
sti
xchg
mov
push
push
insb
stc
mov
mov
sbb
scas
jb
dec
insb
xchg
int
ficoml
aam
scas
jo
int3
mov
repz
lods
sbb
daa
mov
lods
cld
push
sarb
pop
adc
stc
fsub
adc
aam
or
cmpb
xor
scas
rol
sub
popf
push
inc
add
xor
cmpsl
rcrb
shrd
sub
lret
lods
dec
cmp
rolb
mov
mov
adc
and
mov
adcl
cld
adc
mov
imul
int
push
jbe
ret
inc
rolb
addb
movsb
stos
xor
add
test
jle
outsl
das
pop
cwtl
or
les
dec
loope
cmp
popa
lea
cmp
dec
sub
mov
popf
inc
rclb
shll
mov
js
dec
xchg
mov
ljmp
pushl
addb
pusha
mov
lcall
dec
lds
mov
out
mov
push
mov
mov
xchg
xor
and
and
jno
outsb
xor
jmp
aaa
lret
push
jmp
lock
fsubrs
cmc
scas
ficomps
in
jg
jne
ljmp
jne
orl
scas
pop
mov
pusha
jle
mov
and
subb
push
mov
mov
adc
sbb
sbb
subb
das
ret
jbe
call
lds
mov
scas
xor
jae
sub
inc
mov
jmp
loope
mov
cli
mov
lods
dec
push
lret
and
jo
xchg
inc
push
mov
pop
lock
adc
dec
lahf
xor
fsubp
movmskps
sub
mov
into
decb
pop
add
andb
mov
je
mov
mov
cmp
inc
and
mov
aas
fadd
pop
xchg
xor
sub
mov
push
pop
mov
sahf
pushf
dec
mov
je
sbb
fs
or
push
inc
push
push
insl
inc
inc
dec
sbb
xchg
or
inc
xor
dec
mov
inc
ss
mov
jp
mov
movsl
xor
sub
mov
les
push
inc
xchg
lret
xchg
sbb
mov
negb
adc
fmul
xchg
daa
mov
jg
pusha
add
cli
dec
shl
out
mov
gs
test
jno
outsb
fs
mov
xor
pop
gs
cmpsl
pop
and
shlb
insb
clc
pushf
fdivs
mov
xchg
and
mov
xchg
mov
roll
jecxz
and
mov
hlt
pop
enter
sbb
jae
mov
cmp
mov
push
xlat
in
push
cli
cs
int
adcl
adc
testl
xchg
scas
xchg
jb
push
xchg
adc
shll
cwtl
xor
fdivrs
pop
adc
and
jno
andb
or
or
stos
jp
fs
jmp
dec
fldt
and
mov
pop
or
add
les
add
dec
sbb
mov
cmpsb
out
cli
push
mov
push
pop
insb
sub
ljmp
xor
enter
push
add
jl
call
jbe
repz
negl
push
adc
mov
jmp
xor
jle
fbld
pushf
test
mov
test
jno
outsb
xchg
mov
jmp
jns
xchg
or
call
arpl
js
fdivr
aam
xchg
data16
inc
xor
fwait
push
or
loopne
cmpsl
push
shll
std
pop
push
imul
push
sbb
dec
sbb
in
out
sub
fldl
stos
xor
cld
mov
jbe
xchg
lods
sbb
jno
xchg
clc
and
in
cmp
out
fcomps
cltd
mov
mov
jae
stc
pop
or
fisttps
push
in
pop
repnz
jae
xchg
mov
dec
cwtl
subl
sub
test
inc
cmpsb
mov
jle
andl
fldl
imulb
enter
jle
imul
lods
mov
xor
jl
test
shll
sahf
mov
push
dec
out
adc
xchg
testb
aas
arpl
out
ja
test
cmp
mov
mov
out
outsb
sbb
pop
in
scas
int3
int3
ficoml
rep
mov
push
sbb
mov
xlat
fldt
fmull
ret
sub
imul
xchg
sub
mov
pop
popl
jnp
cmp
mov
xchg
popa
push
loope
jno
push
in
xchg
mov
jbe
cmc
mov
out
stos
jg
mov
add
or
cmc
test
loope
xor
xchg
mov
dec
inc
test
outsl
cmp
ret
or
pop
or
push
lret
roll
loope
jne
fldenv
inc
mov
stos
out
test
icebp
inc
mov
pop
cmpb
sbb
pop
stos
pop
sub
call
lods
cltd
and
insl
je
rcrl
jns
mov
pop
stos
ljmp
aaa
into
nop
xor
dec
scas
adc
mov
cmpsb
mov
add
call
bound
sbb
pop
shrb
jb
mov
mov
scas
popa
and
cmp
jb
push
add
shlb
les
movsb
in
ret
mov
es
and
sahf
test
push
mov
cwtl
dec
mov
adc
mov
mov
xchg
cmp
jns
je
adc
xchg
mov
mov
push
mov
loopne
les
mov
push
sbb
jne
mov
mov
mov
xchg
cmpsb
pushf
pop
lahf
dec
cmp
or
jp
mov
lcall
fld
into
xor
arpl
cs
stos
mov
mov
mov
pop
dec
cmc
sub
sarl
popf
scas
test
jp
test
out
inc
stos
adc
sbb
gs
dec
adc
cmpsl
loopne
testb
jne
mov
mov
dec
subb
xchg
adc
cmp
dec
ret
and
cmpsb
and
sub
sbb
adc
movsb
sub
andb
jae
jg
sub
and
outsb
jb
xor
push
sbb
inc
and
adc
mov
pop
jne
jno
cmp
rcrb
out
push
insb
je
mov
ja
add
add
loope
xor
aaa
sbb
mov
jns
mov
hlt
push
mov
and
mov
jp
push
xor
mov
fcomp
lods
jmp
imul
push
pusha
arpl
add
xchg
mov
nop
je
cmp
imul
jb
out
inc
inc
lea
lcall
pusha
mov
mov
adc
mov
adc
jns
dec
jmp
add
mov
inc
push
jg
idivl
jle
sub
mov
in
mov
mov
xchg
add
int3
out
inc
or
popf
cmp
jbe
sub
inc
lcall
jbe
jbe
int3
ss
fidivs
insl
sbb
xchg
outsl
dec
pop
xchg
mov
fiaddl
cmp
xchg
xor
xchg
sbb
test
jns
mov
adc
adc
sub
in
dec
push
jae
fildll
fs
mov
scas
add
push
xchg
adc
std
sub
push
ret
pushf
mov
adc
xor
daa
in
xchg
adc
aaa
ljmp
fistpll
mov
fxch
sub
fsub
cmpsl
pop
cltd
test
in
mov
pop
adc
mov
sub
cmp
jecxz
cwtl
repnz
dec
mov
jmp
in
pop
out
push
movsl
xlat
cmpsb
out
mov
shlb
pop
fldt
mov
insl
out
pop
fildll
fdivrs
lods
xchg
push
push
nop
and
jg
loope
add
cmp
xchg
dec
mov
mov
mov
and
mov
or
add
out
mov
pop
enter
push
and
mov
mov
cwtl
xor
add
lcall
popa
add
dec
adc
pop
ljmp
mov
lret
mov
push
or
outsl
add
mov
loop
bound
movswl
or
mov
icebp
xchg
pusha
push
sub
in
or
xor
cmp
xor
cmp
adc
push
xor
loope
jp
lea
scas
into
jnp
or
pushf
insb
lcall
imul
inc
adc
aam
test
push
std
subl
cmc
or
cmpsb
jno
jne
xor
add
mov
movsb
sbb
sahf
push
sti
inc
xor
insb
ja
int
nop
cmp
movsb
shl
gs
xlat
fucomp
pop
mov
jb
movsl
push
jmp
rcrb
mov
mov
inc
push
fstl
pop
fimull
sub
fcoms
imul
jg
push
loop
xor
xchg
out
das
mov
sub
xchg
lock
stos
mov
xor
cmc
cwtl
aad
test
jns
rcrl
ret
aad
das
js
movsl
and
or
jle
mov
add
mov
adc
movl
inc
xchg
lods
popa
push
outsb
jmp
std
sub
js
push
xor
sbb
mov
in
and
pop
stos
int3
push
cmp
mov
scas
jbe
sub
inc
jl
push
push
mov
mov
xchg
mov
dec
fcmove
jmp
cmp
scas
out
movsb
mov
sub
adc
add
pop
mov
xlat
cmp
or
or
cmp
mov
pop
scas
imul
cmp
xchg
hlt
pop
movsb
mov
call
out
aas
fwait
dec
fdivr
adc
mov
ficomps
and
xor
lods
lds
cs
mov
sahf
rcrb
dec
sbb
scas
repz
roll
sbb
std
and
push
jecxz
loop
pop
mov
dec
dec
popf
outsb
ror
inc
std
insl
movsb
cli
and
mov
add
mov
adc
sbbl
jb
push
or
jmp
movsb
or
in
ljmp
cs
gs
cwtl
js
pop
jae
pop
flds
pop
pop
add
xchg
dec
adc
jne
subl
mov
aam
ljmp
in
dec
lret
fucom
fsubp
mov
xlat
sahf
out
stos
xor
fldcw
test
sarb
mov
out
pop
mov
pop
loop
jnp
add
test
pop
mov
xor
call
add
or
sbb
aaa
sbb
testb
fimull
cmp
lret
inc
test
mov
leave
xchg
out
pop
lods
pop
adc
popf
gs
cltd
mov
data16
mov
push
sbb
addr16
repz
dec
dec
xchg
and
push
inc
xchg
lret
rcrb
adc
mov
or
negb
inc
mov
bound
xchg
movsb
pop
sahf
sbb
stos
icebp
pop
fwait
fwait
xchg
addr16
ret
stc
mov
dec
popf
add
jecxz
lods
or
push
sub
out
xor
test
and
pop
loope
ret
outsl
pop
ret
pop
test
adc
mulb
xchg
andb
mov
imul
retw
popa
mov
mov
cmp
push
mov
and
pushf
ss
into
shr
or
icebp
pop
lret
outsb
jmp
cmpsb
cmp
push
xor
addl
lret
fwait
or
pop
movsl
push
aas
pop
das
fisttps
mov
mov
xchg
loope
jmp
ja
or
lea
call
sub
and
xchg
popa
jo
add
fs
push
out
mov
decl
es
mov
cs
adc
in
pop
inc
dec
cmp
outsb
sti
mov
cli
or
repz
inc
pushf
or
pop
cmpsb
inc
cmp
mov
fidivl
data16
addb
aam
cmp
dec
aaa
cmp
mov
xchg
lea
pop
out
sahf
push
out
in
int
xor
lret
pop
mov
cld
xor
js
jmp
sub
cmp
repz
add
test
repnz
test
add
and
insl
fdivrs
fs
hlt
dec
ja
add
xchg
mov
and
stos
add
inc
xchg
add
sbb
sbb
jne
sbb
fidivs
xchg
mov
xchg
ss
leave
int3
push
push
push
inc
mov
pop
add
xchg
xchg
jg
cwtl
inc
jmp
pop
mov
arpl
push
inc
add
icebp
inc
pop
scas
inc
or
and
and
pop
push
jae
and
mov
es
cmp
aaa
notl
jmp
mov
inc
mov
ret
sti
js
mov
les
outsb
inc
cmp
mov
lret
movsb
jmp
loope
cmp
mov
push
pop
xor
push
jge,pn
adc
fisttpl
dec
daa
mov
ret
fbstp
shll
jmp
mov
xchg
lock
bound
inc
aam
push
aad
shlb
and
pop
xchg
fld
xchg
xor
cmp
sahf
das
int3
mov
xchg
xchg
mov
jbe
sub
clc
lods
xchg
mov
stos
push
mov
push
pop
ss
inc
imul
sbb
sbb
mov
js
inc
pop
add
xchg
fcoms
sub
loopne
jae
aaa
lods
or
or
push
push
mov
and
int
push
add
inc
push
mov
mov
mov
sbb
out
loop
cmp
pop
out
inc
js
lods
insl
filds
lods
testl
jae
sub
mov
clc
loopne
lahf
push
mov
cmc
and
popf
or
mov
jbe
sti
lds
popf
fidivl
and
jmp
adc
cld
aad
test
fidivl
imul
iret
jecxz
inc
inc
mov
inc
jno
cs
lds
fucomp
or
sbb
imul
pushf
movb
data16
sahf
jns
loopne
sbbb
xor
mov
push
cmp
jg
xchg
sbb
xor
les
leave
sub
jle
and
xor
jae
or
into
mov
fidivrs
and
call
sbb
fists
push
cmp
sti
or
fimuls
mov
rorl
mov
imul
push
mov
lret
dec
in
mov
sbb
push
fwait
jno
pop
enter
dec
or
js
mov
sub
mov
or
lods
test
mov
mov
mov
int3
mov
inc
fistps
pop
ljmp
in
fcmovnbe
push
add
leave
les
cmp
mov
shlb
int3
pop
stos
shrl
mov
jmp
cmpsb
das
mov
enter
sub
adc
movsl
or
jge
cmp
mov
repnz
mov
cmp
inc
orb
or
adc
fidivrs
push
outsl
fs
test
insl
addr16
mov
inc
rolb
repz
inc
xor
add
xor
cld
mov
pop
pop
pop
cwtl
cli
xorl
incl
aad
and
mov
shlb
jecxz
loope
pop
push
xlat
shlb
sbb
call
xchg
mov
aam
xchg
in
cmpsb
popa
incl
cmc
adc
xchg
dec
push
lock
or
filds
insl
xchg
aam
std
test
loope
mov
or
push
sub
shrb
pinsrw
loop
rclb
repz
pushf
sub
jb
xchg
xor
xcrypt-ctr
cmpsl
aaa
dec
or
pop
sbb
jmp
scas
outsb
movsl
ret
push
in
dec
push
mov
add
mov
xor
sub
add
testb
outsl
add
xchg
ret
add
icebp
sahf
push
adc
mov
shll
sub
mov
mov
arpl
mov
aam
mov
pop
loop
dec
push
add
insl
clc
jns
daa
pop
sbb
jl
scas
add
cmp
sub
xlat
lcall
cld
popf
daa
and
cli
xor
xchg
and
push
or
loope
pop
outsl
mov
dec
xor
mov
dec
xchg
and
cmp
cli
ffree
cltd
inc
movsl
jo
ljmp
addr16
repnz
stos
inc
rorb
inc
idivl
inc
ror
sbb
pop
pop
addr16
adc
mov
sti
fisttps
mov
pop
and
push
out
ja
aam
popf
sahf
je
dec
jne
mov
pop
mov
mov
pop
push
jo
push
or
inc
jne
popa
xor
mov
mov
fs
outsb
scas
nop
scas
pop
cmpsb
dec
sbb
aaa
sub
sarb
aas
enter
mov
in
jne
sub
push
jnp
push
cmpsb
add
add
es
rolb
mov
in
les
xchg
mov
push
sub
push
push
jae
xchg
ljmp
xor
movsb
cmp
inc
dec
sbb
jno
add
cmp
rorb
sub
arpl
addr16
pop
imul
mull
jecxz
lea
or
dec
ror
jbe
cs
hlt
dec
mov
andb
aad
frstor
fnstcw
data16
lea
inc
sbb
jecxz
lret
fadds
pop
std
cmp
jle
cmc
lret
iret
scas
or
or
or
jo
sub
or
xchg
mov
inc
int3
pop
call
sahf
inc
clc
jb
dec
mov
lods
pop
fldl
lahf
imul
dec
loope
rclb
pop
cmp
pop
cs
pop
xchg
adc
cmp
int
push
or
or
dec
push
push
mov
pop
xchg
lcall
pop
sub
data16
std
inc
stos
ja
in
cmp
cmp
and
push
leave
into
fnstenv
inc
loopne
aad
push
addl
mov
insl
add
andb
or
push
inc
mov
daa
into
sub
pop
nop
cli
cmpsl
int3
cmp
jo
ja
ljmp
ror
rclb
aam
incb
jo
enter
sub
test
push
and
dec
nop
out
add
jbe
adc
aam
sbb
ret
or
dec
cmc
loopne
inc
out
jns
adc
push
jbe
cli
adc
xchg
xchg
stc
aad
xor
pop
mov
vmovntps
xchg
inc
jle
jae
pushf
sahf
les
lods
es
in
xor
pop
sub
jle
out
into
jo
jo
in
mov
ret
xlat
adc
push
sbbb
out
inc
or
stos
rcrb
rcrb
cs
push
rcr
xor
hlt
sbbb
mov
daa
mov
mov
xlat
mov
call
push
out
inc
mov
fistpll
fidivrs
add
fld
mov
add
fwait
pop
and
pop
rcrl
pop
fistl
ljmp
and
jmp
sbb
imul
mov
sub
data16
push
enter
test
push
cmc
imul
cs
flds
cmp
push
push
cmpsb
lock
xor
xor
dec
test
jge
xchg
cli
arpl
hlt
fmuls
mov
mov
xor
pop
inc
jno
hlt
fwait
cli
cs
jo
mov
adc
add
xorb
cmp
jge
or
lea
aad
xchg
fs
mov
ror
jg
fst
rcll
int3
lcall
adc
jge
and
insl
pop
dec
pop
iret
jno
fwait
popf
add
sub
fbstp
sti
rclb
mov
xchg
pop
pop
js
dec
sahf
call
jnp
js
scas
cmpsl
jg
lock
pusha
mov
xchg
test
ss
cmpsb
fs
inc
mov
inc
int
push
mov
sbb
lfs
or
fimull
outsb
stc
adc
in
mov
and
push
ss
ret
push
pop
sbb
xor
xchg
das
mov
insb
popf
stos
arpl
dec
dec
mov
jne
mov
out
lcall
arpl
in
repz
add
sbb
mov
loopne
mov
xchg
add
hlt
fdivl
inc
cwtl
into
movsb
inc
repnz
sahf
dec
rolb
out
sarl
dec
sub
scas
std
scas
movsl
cld
jge
stc
xchg
arpl
fsubrs
dec
gs
cltd
push
enter
xchg
verr
pusha
ret
movsl
sbb
and
xchg
cli
addr16
dec
in
jno
insb
pop
cmp
push
jbe,pn
testl
mov
push
in
fcomi
mov
test
mov
inc
inc
and
cmpsl
and
sub
add
cmp
sahf
fwait
jnp
pop
push
pop
int
mov
xchg
jno
adc
mov
inc
lods
test
sbbb
ret
ret
dec
hlt
inc
das
mov
mov
imul
jmp
mov
mov
sub
fsub
and
cmp
call
dec
xchg
push
fdivl
mov
pop
iret
sub
cltd
mov
ret
jb
lds
pusha
push
loopne,pn
cmp
xchg
pushf
fucom
sub
inc
in
sbb
dec
and
or
stos
andb
lds
cmp
shl
mov
push
inc
sbb
pop
mov
rcrb
jo
mov
lret
dec
aad
push
mov
mov
jp
cmc
daa
mov
jmp
adc
loopne
jmp
pop
test
movsb
stos
fimull
push
mov
rolb
movsb
add
ret
xchg
cmp
dec
mov
fdivrl
push
ss
inc
out
fs
jp,pn
call
dec
bound
mov
lcall
push
lods
mov
cld
xor
std
push
jo
sbb
adcb
pop
int
push
adc
inc
add
ljmp
xor
mov
sbb
add
ret
jmp
stc
xor
das
into
cmp
adc
xchg
sub
push
and
pop
sbb
notl
lea
daa
scas
jecxz
addr16
cmc
mov
xchg
sub
gs
daa
ret
icebp
out
mov
or
cmp
sahf
repnz
add
shrl
add
xor
jmp
xor
ret
aaa
push
adc
xor
jg
ret
cltd
out
xchg
xchg
lahf
fcompl
xchg
scas
sub
roll
stos
mov
dec
cli
adc
in
clc
pop
cmp
adc
or
jno
cmp
mov
add
jno
xchg
adc
jns
iret
in
add
push
add
ja,pn
inc
stos
and
push
push
cmp
mov
mov
lods
add
xor
mov
or
ja
pop
adc
cld
cwtl
aad
push
mov
cmp
sub
xchg
jno
andb
add
mov
mov
aad
cmp
jnp,pt
mulb
push
ljmp
insl
es
cld
cs
or
imul
xchg
or
lret
pop
dec
xor
imul
adc
ds
shll
xor
inc
jle
pop
cld
inc
or
xchg
xchg
movsb
mov
mov
and
imul
mov
sub
fldl
add
sub
dec
jno
out
clc
xor
data16
push
test
jne
sbb
popa
xor
fdivs
out
or
mov
jnp
dec
hlt
and
jae
ret
push
lahf
ds
and
inc
andb
dec
pop
lret
xchg
imulb
daa
xor
fisttpl
or
sti
in
pop
insl
cmpsl
das
push
mov
mov
adc
pop
aad
jbe
xchg
out
mov
dec
push
scas
popa
stc
in
adc
and
dec
das
mov
or
xor
pop
clc
shlb
pop
and
lahf
dec
mov
adc
or
xchg
cmp
sbb
dec
pop
sub
cmp
mov
mov
xchg
imul
or
or
inc
seta
clc
add
andb
movl
addr16
jne
inc
fmuls
scas
sarb
push
push
js
lret
jg
push
aas
jmp
xor
stos
dec
enter
add
rorb
pop
cld
mov
call
jp
out
or
and
or
xor
or
push
mov
mov
xor
repz
scas
xchg
out
or
and
in
scas
out
imul
stos
sbb
nopl
popa
mov
fimull
stos
xchg
gs
popf
pop
mov
sub
mov
mov
lods
mov
shlb
js
imul
js
shr
iret
filds
sub
stos
das
dec
icebp
hlt
shlb
pop
je
idivb
adc
icebp
lods
push
out
pop
sub
in
fsubrs
adc
pop
or
into
mov
or
dec
psllw
outsb
pop
xchg
mov
aaa
cmp
je
rcr
mov
and
sbb
pop
int
add
push
pop
pop
mov
rolb
mov
xchg
pop
shl
daa
jne
int3
lahf
sub
mov
popf
punpckldq
sbb
in
fisubrl
cmc
dec
lock
pop
popa
jo
xor
out
and
sti
movsl
cmp
add
add
divl
clc
sarb
out
mov
pop
jb
mov
mov
aaa
dec
and
sub
test
jge
dec
inc
sub
sti
loopne
jnp
cmpsb
fwait
out
mov
mov
sub
mov
adc
dec
dec
mov
sti
in
insb
push
cld
dec
jmp
push
fsubp
mov
jp
xchg
out
scas
inc
mov
aaa
cld
mov
dec
pop
push
push
pop
mov
orb
jg
cmpsl
adc
mov
movsb
mov
mov
rcll
scas
jae
inc
addr16
mov
add
mov
hlt
insl
fldlg2
cmp
xchg
cld
test
loop
lahf
and
subl
pop
or
xchg
inc
movsb
mov
fldcw
pop
mov
sub
and
fidivrl
test
shl
push
sbb
xchg
pop
cmp
push
dec
movsb
xchg
dec
ror
cs
fsubp
rorl
push
repz
iretw
mov
add
cli
icebp
call
xchg
inc
imulb
mov
xchg
inc
xchg
add
xchg
sub
setp
dec
out
jb
xor
push
mov
dec
mov
xor
idivl
mov
jbe
pushf
cmp
push
call
test
clc
jle
sbb
xlat
out
addr16
adc
push
dec
adc
ret
xchg
stc
mov
and
sahf
dec
dec
lock
mov
mov
and
and
jne
ret
jmp
ret
cmp
icebp
lock
or
inc
xlat
sub
pop
das
mov
outsl
sahf
mov
cmp
loopne,pn
arpl
repz
aam
pop
jp
and
xor
icebp
mov
int
out
pushf
jnp
ffree
jge
mov
idiv
fistl
enter
sub
nop
sbb
jge
arpl
xchg
xor
jmp
jmp
jae
fimuls
inc
inc
shl
sbb
outsl
sbb
sub
jae
ret
add
movsl
mov
dec
dec
popl
or
cs
pop
lcall
fdiv
push
aaa
pop
stos
mov
movsl
or
inc
insb
sub
dec
cli
add
jmp
ficoml
dec
cmpsl
movzbl
mov
int3
pusha
sarb
push
sahf
out
mov
nop
jp
daa
test
cli
mov
mov
push
jmp
inc
mov
ret
orb
scas
fisttps
xchg
in
mov
das
inc
divl
mov
inc
jo
inc
lds
js
movsb
bound
inc
fisubl
lret
mov
sar
ret
mov
je
inc
aas
into
loopne
insl
or
inc
sub
mov
mov
xchg
out
push
cmpsb
ds
inc
hlt
dec
rcr
aad
push
jle
sahf
push
je
push
lds
sbb
ss
cmp
mov
clc
jbe
xchg
sbb
mov
mov
lock
sub
imul
dec
mov
out
jns
out
jp
adc
mov
out
pop
icebp
xchg
mov
out
call
cmp
sub
outsb
xor
cli
inc
mov
mov
test
std
xor
loopne
xchg
xchg
popa
in
dec
xor
inc
out
cwtl
xor
aam
cmp
mov
pop
lock
adc
int3
push
inc
mov
repnz
adc
sahf
pop
test
jge
fs
push
lret
add
or
cwtl
enter
test
cs
dec
clc
pusha
mov
sub
add
dec
lret
rcr
lods
xor
adc
gs
ja
push
loop
xchg
bound
cmp
outsl
jle
iret
mov
cs
popf
inc
fiaddl
pop
out
shll
cmp
inc
xchg
cmc
sub
dec
fnstenv
lea
imulb
pop
push
ljmp
pop
push
xor
mov
enter
pop
mov
leave
sarl
cmc
or
out
sbb
ficompl
lahf
pop
cmpsl
xadd
cmp
in
js
je
xchg
sbb
or
out
test
pushf
sbb
dec
lock
test
inc
xchg
adc
aam
jno
pop
mov
lahf
es
sbbb
mov
pop
aad
aad
push
add
scas
pop
add
pop
mov
sbb
push
aad
adc
popl
insb
sbb
and
mov
outsl
faddp
rolb
add
push
outsl
bound
std
pop
ljmp
dec
clc
push
mov
and
jno
push
fidivrl
xchg
sbb
jns
out
clc
xchg
inc
add
js
cmp
or
out
stos
push
ret
mov
push
test
cmpl
pushf
pop
or
xor
je
je
mov
and
sub
mov
or
outsl
xor
test
jmp
fiadds
dec
das
ret
in
outsl
push
pop
out
fadd
or
sbb
popa
shll
push
mov
mov
jecxz
xchg
push
lea
adc
imul
call
fcoms
test
call
cs
test
push
inc
arpl
fwait
jge
push
loopne
mov
filds
pop
add
mov
jp
xchg
clc
pop
ror
xchg
enter
cs
jp
sbb
jg
clc
mov
xchg
std
xchg
movsl
jb
fdivrs
jle
xchg
outsl
mov
aaa
jne
or
push
sub
aaa
or
testl
pop
push
sbb
cmp
es
adc
add
loope
imul
and
sarb
xchg
inc
xlat
jo
call
dec
push
jo
out
sahf
and
in
cli
stos
inc
xchg
adc
gs
pusha
jb
xor
xchg
xlat
movsb
xchg
int
fs
mov
subl
xchg
jae
andb
inc
adc
pusha
aas
xchg
or
lahf
xchg
cmp
ja
rcll
add
adc
and
push
adc
in
dec
pusha
loopne
xor
cmc
or
lods
lea
je
push
mov
sbb
loopne
dec
mov
jmp
scas
jbe
in
pop
or
sbb
pop
adc
in
popf
sbb
cs
push
xlat
mov
mov
rcll
call
sbb
jno
xchg
ja
inc
dec
pop
push
sbb
bswap
xchg
out
xor
lret
loope
lea
or
push
jb
jge
xor
mov
fildll
mov
test
arpl
gs
insl
loopne
pop
and
aaa
xchg
outsb
adc
inc
add
mov
add
out
lret
mov
inc
mov
pushl
imul
push
loopne
call
adc
pop
mov
xor
fs
rorb
aad
ret
pop
sbb
jmp
movsb
enter
pop
cmpsl
fldl
stc
cltd
sub
shlb
add
sub
shlb
and
je
stc
aaa
mov
jae
aam
mov
pop
sub
repnz
andl
xchg
and
loopne
sub
pop
and
or
dec
sbb
adc
test
dec
pop
inc
mov
movsl
data16
inc
adc
xchg
and
xchg
jp
iret
idiv
pop
out
repnz
xchg
pop
iret
std
xor
fnstcw
outsl
insb
test
push
cmp
push
outsb
call
jl
ficoml
iret
and
sbb
enter
int3
cmpsl
inc
jns
in
aaa
lods
les
cmpl
ret
in
xor
ds
dec
les
or
sahf
js
pusha
out
mov
mov
jo
fcmovu
mov
dec
mov
sahf
dec
sbb
sbb
push
ja
enter
add
add
mov
or
push
push
dec
fsub
dec
inc
mov
xchg
lcall
cmp
sarl
jns
xchg
adc
es
mov
lret
inc
lods
pop
pop
cmp
xor
and
arpl
xchg
int3
and
cli
mov
pop
inc
popl
loope
arpl
in
adc
dec
cs
gs
cwtl
inc
inc
sar
xlat
repz
rcll
xor
jns
rorl
fimull
mov
jp
push
pop
mov
rcrb
lret
aaa
popl
in
cmp
push
push
bound
cmp
das
dec
imul
mov
repnz
mull
sbb
hlt
inc
sahf
in
pop
rolb
add
test
ljmp
outsb
popa
rorb
sbb
in
loopne
out
mov
sub
adc
mov
and
hlt
cmp
dec
roll
or
shlb
lret
jbe
push
or
push
test
and
out
xor
pusha
jle
jg
movsl
popf
jnp
punpckldq
xor
imul
mov
mov
fmul
out
mov
push
loope
mov
dec
test
cmp
ss
push
adc
mov
sub
cmpsb
cltd
inc
ja
pop
sbb
cli
push
cmp
dec
sbb
lahf
je
mov
jae
xchg
inc
push
stc
ja
mov
aam
xchg
sbb
shrl
inc
fs
push
pop
icebp
pop
mov
lret
pop
dec
push
outsl
jno
xchg
pop
pop
jp
fmull
inc
pop
pop
fs
jnp
nop
movsb
mov
je
frstor
sub
inc
adc
loopne
mov
mov
in
fcoms
daa
inc
jne
mov
insb
xchg
xor
jmp
faddl
mov
aad
addr16
inc
aam
arpl
jne
clc
leave
hlt
mov
pop
int3
xor
pushf
sub
test
xchg
sbb
sub
test
sbb
test
movsl
js
test
ja
out
inc
and
sub
dec
or
jmp
daa
andl
sub
cmpsb
enter
mov
das
jl
imul
pop
push
cmc
jns
repnz
imul
xchg
addl
into
adcb
idivb
mov
stc
decb
sub
adc
jb
mov
lea
ret
lea
bound
int3
jnp
into
popl
imul
or
ret
mov
inc
popa
fistl
xchg
or
mov
dec
jle
ret
jnp
out
sbb
pop
lods
mov
xor
out
xor
mov
les
jle
mov
in
mov
cmpsb
movsl
mov
jg
mov
add
dec
sub
add
fcmovb
popa
sub
gs
push
test
pop
pop
cli
sbb
test
xor
arpl
mov
cltd
ss
imul
inc
ds
int
and
test
add
and
inc
mov
ss
mov
cli
daa
xchg
aas
cwtl
xchg
cltd
xor
enter
mov
xor
std
mov
xor
xor
test
lods
loopne
or
sub
jo
pusha
mov
scas
sub
je
inc
push
loopne
out
stos
icebp
call
sub
sub
mov
cmp
pop
in
add
out
insb
xchg
mov
xchg
jb
mov
and
adcl
test
and
sbbb
mov
data16
mov
push
jae
adc
mulb
pop
lcall
push
stc
xor
cmp
push
pushf
cmp
push
jle
cli
ss
xchg
andb
push
inc
loope
mov
sbb
xchg
cmp
in
das
xor
push
sti
mov
cmpsl
mov
xchg
push
data16
das
fs
jmp
mov
shl
jne
xchg
lea
scas
inc
loop
repnz
aad
icebp
imul
jecxz
push
pop
mov
dec
lods
add
mov
jne
cmp
mov
lds
pop
incl
jp
into
jge
out
pushf
dec
pop
std
fcomip
push
push
sub
mov
ja
pop
cmp
jnp
add
inc
xor
clc
mov
jge
dec
daa
mov
cmp
aam
jge
dec
mov
cld
push
fadd
lret
jg
gs
jg
lcall
or
pushf
sub
lahf
mov
rorb
pop
das
cmc
sbb
je
pop
jl
cmpsb
push
sub
add
jmp
fs
push
nop
xchg
sbb
xor
out
fsubp
mov
push
fs
jle
inc
pop
loop
adc
pop
cmpsb
sub
xor
jmp
lds
dec
scas
jge
loopne
xchg
add
push
shlb
mov
jae
jge
push
sub
insb
lods
movsb
je
cmpsl
pop
dec
scas
cmp
push
jge
add
push
or
jnp
dec
ljmp
scas
ret
int
xlat
push
popf
jb
mov
or
dec
imul
sbb
inc
cltd
fs
dec
mov
int
xchg
xchg
repz
andb
pop
incl
andb
faddl
mov
in
das
push
jge
in
xchg
xchg
push
fwait
xor
fidivrl
orb
or
sbb
sahf
sbb
movsb
adc
sbb
pop
jp
mov
jno
ret
addr16
and
popf
xor
jno
cmp
sub
daa
lock
jnp
mov
sti
lea
mov
fwait
jns
in
ljmp
scas
popf
mov
pop
jecxz
int
jle
mov
divb
adc
push
and
sti
mov
pushf
setbe
into
bound
fstpl
iret
pop
call
enter
les
data16
dec
or
inc
jnp
fadd
sar
jne
sub
scas
test
iret
out
xor
cs
xlat
xchg
pop
adcl
xchg
and
dec
adc
adc
add
cmp
jae
cmp
pop
xchg
and
jge
sub
out
and
pop
and
imul
inc
outsb
adc
dec
test
mov
outsb
dec
cmpb
cmpsb
fcoml
add
data16
addb
and
orl
push
inc
ds
lret
sbb
mov
insb
arpl
pop
lds
les
xchg
dec
je
sub
jecxz
lret
sbb
xchg
xchg
or
out
stc
movsb
xchg
popf
pop
sarb
mov
sub
fldcw
xchg
jb
inc
mov
push
sub
cmp
inc
add
inc
add
and
push
cmp
or
mov
dec
lea
shll
test
out
fdivs
mov
sub
test
sub
das
mov
lret
rol
and
sbb
lret
rorl
jmp
push
jle
xchg
jns
fwait
lret
pop
xchg
stos
loopne
std
inc
lcall
addr16
cmpsl
cs
sub
or
jle
gs
push
fwait
jmp
xor
push
cmc
push
sbb
add
jecxz
not
pop
cmp
pop
mov
mov
push
pop
cmp
stos
or
clc
mov
pusha
sub
inc
sub
jnp
jl
pop
leave
jnp
cmpsl
push
icebp
faddl
sbb
cmc
xchg
fsubl
add
lret
imul
xchg
xor
loop
out
sub
ret
mov
fildll
jo
cwtl
xchg
pop
fmul
test
imul
mov
dec
sub
add
cltd
jb
mov
lods
and
iret
lods
sbb
jae
xchg
pusha
xchg
loop
inc
lret
mov
mov
movsb
add
test
out
fdivr
aam
and
mov
in
loope
dec
jle
sbb
mov
inc
adc
outsb
xor
cmp
mov
dec
sbb
pop
data16
and
outsb
push
in
mov
mov
sbb
mov
js
enter
pop
es
mov
js
dec
into
loop
add
add
dec
cmp
add
ret
inc
out
inc
aad
or
in
mov
movsb
cmp
mov
movsl
mov
icebp
shrl
ret
adc
push
sub
sbb
mov
dec
mov
mov
pop
stc
mov
sub
insl
jle
and
test
stc
sbb
cmp
pop
inc
ret
or
xor
adc
add
jbe
test
mov
in
push
mov
jne
push
rolb
add
or
scas
loop
lock
inc
inc
adc
jne
stos
enter
jmp
idivb
pop
out
mov
test
pushl
sbb
into
xor
imul
or
and
sbb
loope
aaa
push
add
mov
mov
jnp
mov
cmpsb
adc
inc
or
dec
xorl
out
sbb
jmp
or
dec
shlb
cmpl
mov
push
dec
in
lret
fisubrl
sub
dec
loop
xchg
fisubrs
jl
das
test
lret
xchg
shll
fsubrp
subl
jnp
sar
jg
js
jno
movsb
in
xor
pop
data16
xor
ds
inc
jl
mov
inc
call
pop
in
jno
xor
lock
push
addr16
int3
cld
stc
mov
cmp
movl
inc
mov
and
rorl
in
adc
cld
into
int3
inc
xchg
jns
les
pop
mov
test
loopne
mov
adc
fsubl
and
mov
inc
push
lret
jno
pushf
pop
dec
inc
lea
js
popa
icebp
cmp
movsl
lcall
jecxz
sub
out
sbb
lahf
mov
mov
dec
push
in
lcall
pop
and
inc
flds
test
stos
xor
call
sbb
lret
int3
xor
rcll
pusha
jl
xchg
pushf
and
cli
test
pop
ret
cltd
dec
insb
lods
roll
mov
adc
xor
cmp
sahf
xlat
insl
ret
out
mov
sub
std
mov
rcrb
mov
idivb
jp
popa
cmp
sbb
adc
fisubrl
xchg
xor
sub
shl
mov
movsl
or
nop
cld
pop
aas
outsb
movsb
mov
mov
std
jnp
in
pop
out
cli
call
jge
test
mov
pop
mul
push
or
nop
xor
repz
sti
imul
sti
xchg
pusha
dec
sbbb
test
dec
mov
adc
add
jbe
dec
and
sub
test
sbb
xchg
test
cli
icebp
or
shll
cmp
enter
adc
push
sub
sub
fsubr
movsl
movsl
repz
dec
jmp
xchg
sub
adcl
inc
fcomps
dec
add
fwait
cmp
xor
into
or
dec
daa
dec
insl
sbb
mov
jmp
xchg
loopne
mov
rcl
lcall
lcall
aam
icebp
arpl
inc
sahf
push
lcall
sahf
stos
sbb
lret
xchg
adc
jbe
out
sahf
jg
mov
cmp
sbb
xchg
jnp
test
scas
movsl
test
loopne,pn
stos
push
pusha
lahf
mov
filds
jae
xchg
sti
pop
popf
or
scas
dec
inc
inc
adc
add
pop
xchg
sub
mov
or
push
in
xchg
lds
fwait
popf
add
sbb
xor
popa
mov
fwait
stos
inc
xor
add
aas
sub
add
scas
mov
xchg
jne
mov
out
sbb
push
push
loop
sub
jp
ds
bnd
bound
das
xor
mov
stos
add
inc
gs
xorl
mov
mov
ss
sub
testl
cli
popf
jb
ja
ficompl
int
xchg
mov
rcrl
sti
fisttpl
jg
xchg
mov
stc
test
fistpll
mov
notl
out
or
movsl
scas
mov
xchg
xchg
mov
insl
add
aaa
or
stc
cmp
and
cmp
orb
xchg
and
push
mov
pop
jno
sbb
pop
and
pop
pusha
pop
nop
cmpsb
int3
add
xchg
orl
jno
rclb
mov
push
jbe
fisubs
clc
int
pop
mov
push
repnz
push
pop
decl
or
xor
jecxz
js
mov
lods
arpl
fists
in
stos
js
mov
into
dec
lods
test
mov
add
lret
xchg
out
loop
xrelease
sbb
gs
pop
ja
mov
insb
inc
dec
repnz
xchg
dec
fdivrl
enter
loop
pop
add
scas
xor
pop
inc
sub
jae
jns
pop
les
jge
pop
adc
cli
movsb
push
mov
outsb
roll
hlt
incb
mov
mov
dec
or
dec
sub
or
lods
fwait
xor
or
loopne
xor
xlat
jnp
pop
push
ds
xchg
sub
adc
mov
fmul
aam
out
in
pop
fwait
pusha
mov
pop
icebp
pop
test
add
repnz
jle
xchg
sbbl
cmp
lahf
data16
add
adc
jge
cmp
pusha
push
dec
jp
and
sub
outsl
aas
sarb
imul
adc
and
xor
test
out
imul
jne
into
in
mov
daa
gs
sub
and
dec
push
xor
pop
incb
xchg
pop
nop
scas
xor
mov
xor
mov
xchg
cmp
aaa
or
mov
mov
pop
or
test
mov
inc
popa
inc
sub
mov
add
orb
test
or
xlat
and
xor
subb
arpl
leave
test
push
les
add
jne
lods
das
je
mov
pop
out
pop
mov
adc
cwtl
jo
or
xchg
jae
or
stos
jne
pop
loop
inc
cmp
or
fldenv
in
sbbb
aad
push
fwait
push
push
fsubs
mov
mov
scas
adc
bnd
or
outsl
in
xchg
popf
cmp
dec
lds
cmpsb
dec
sub
sub
xchg
xor
hlt
dec
leave
fcomps
popf
jg
arpl
pusha
jp
sbb
add
xor
jns
mov
lods
pop
outsb
ljmp
cld
adc
sub
jmp
cld
std
jecxz
fistps
sub
orb
fs
ljmp
imul
lock
repz
jo
inc
or
movsb
test
icebp
mov
sbb
sub
outsb
mov
or
movsl
adc
xorl
jg
stc
mov
push
fildl
iret
inc
outsb
cmp
xorb
xor
ficoms
addr16
insl
je
xchg
in
dec
jg
dec
add
or
lcall
stos
int3
cmc
push
inc
popa
and
aaa
xor
cmp
dec
mov
pop
out
pop
add
sar
mov
xor
loopne
insb
nop
sub
sub
rclb
repnz
and
leave
inc
hlt
fnstenv
movsb
mov
push
ja
out
sbb
dec
popf
pusha
and
notb
fistl
mov
shrb
lret
inc
xchg
and
or
lahf
mov
push
xchg
ret
imul
gs
movsb
fidivs
mov
ret
dec
jp
roll
int3
popa
popa
push
in
cld
and
scas
int3
mov
xor
xchg
xor
hlt
xor
mov
popf
lods
imul
inc
pushf
outsb
xchg
mov
xchg
sub
loope
adc
mov
adc
clc
dec
ljmp
stc
fldl
fadds
pop
aas
scas
pop
shr
rcll
and
inc
push
subl
mov
xor
inc
aaa
icebp
cmp
mov
in
sbb
popa
js
loope
mov
sarb
popf
mov
add
sbb
or
out
aaa
mov
das
sbb
push
aam
pop
sbb
xchg
ljmp
push
loop
mov
sahf
mov
mov
adc
lods
xlat
jns
mov
lcall
add
rorb
lea
inc
dec
stos
xor
xchg
ljmp
mulps
inc
popf
add
fimuls
cmc
mov
ret
and
out
cmp
push
adc
inc
sbb
pusha
pop
lea
cltd
pusha
js
adcl
out
test
inc
into
out
add
xor
nop
rcll
out
pushl
sbb
jg
dec
mov
ror
pop
mov
push
cmpl
and
jb
fstpt
or
jno
pop
push
sub
push
mov
cltd
cmp
rcll
repz
or
ds
and
cs
stc
data16
hlt
movsl
movsl
pop
decb
inc
enter
cld
mov
out
xchg
mov
les
int3
push
pop
mov
dec
fdiv
cld
sahf
jo
inc
aad
pushl
pop
xchg
and
int3
and
cmc
jns
pop
mov
out
adc
stc
adc
aam
rorb
jle
aas
mov
scas
jno
sbb
aas
pop
mov
test
xor
push
pop
ljmp
fisubrl
mov
out
sub
xor
sahf
adcl
cwtl
add
out
icebp
push
sahf
mov
push
add
ret
mov
sbb
sti
es
divb
pusha
adc
test
adc
inc
mov
fisttps
jns
jb
cmp
aad
xchg
mov
or
inc
addr16
rcll
add
dec
mov
mov
xchg
stc
pop
fcmovbe
xor
ljmp
mov
stc
pop
mov
jl
xchg
mov
pop
je
addr16
adc
jb
xor
jle
addl
mov
dec
or
xchg
test
daa
mov
js
fsubrl
sub
jo
mov
aaa
daa
test
repnz
movsl
into
ljmp
pop
loopne
cli
pop
sti
lock
mov
mov
pop
pop
sahf
decl
imul
sbb
push
push
pop
sub
stos
mov
add
adc
std
fstl
outsl
push
addr16
fisttpl
pop
stc
sub
lods
cmc
outsl
sub
pop
rclb
icebp
xor
in
or
inc
adc
xchg
punpckhwd
and
pushl
bound
cld
in
push
adc
inc
mov
mov
cmpsl
adc
andl
ret
push
movsl
test
popf
sbb
xchg
push
mov
lods
pop
jno
pop
adc
mov
or
mov
shll
cmpsb
int3
mov
pop
xchg
data16
or
adc
add
adc
mov
imul
stos
adc
and
lcall
add
aaa
jge
jne
inc
pop
imul
nop
or
das
adc
and
inc
pop
fnstsw
std
mov
mov
pop
dec
sahf
cmp
lock
insl
cmp
xor
popa
repz
or
jge
lahf
out
xchg
repz
mov
mov
xor
aas
orb
ljmp
popa
sbb
daa
xchg
inc
stos
frstor
movsl
nop
or
push
sbb
ss
mov
mov
jno
pushl
mov
out
or
shll
scas
dec
push
cmc
sub
dec
inc
fdivrl
mov
inc
inc
fucom
mov
sarl
ror
xchg
in
in
ja
negb
inc
cmpsl
icebp
in
data16
cld
test
sbb
sbb
aam
stos
adc
jmp
imul
je
into
pop
jns
andb
lods
mov
repz
dec
xchg
jnp
mov
pop
adc
mov
loop
jmp
cmp
push
movl
pop
jnp
xor
jp
stc
aaa
js
add
mov
and
sub
lret
test
popf
sub
inc
test
cmpsb
xchg
lcall
dec
lds
outsl
push
xlat
inc
nop
xlat
xor
xchg
loop
into
mov
js
pusha
imul
push
dec
add
test
xlat
mov
inc
movsb
sti
orl
jnp
add
dec
iret
or
jmp
std
sbbb
ret
lcall
lret
jmp
mov
xchg
mov
gs
cmpsb
sbb
pop
scas
adc
mov
shll
addb
pop
in
insl
in
gs
ja
jmp
xchg
xor
fs
and
pop
pop
add
getsec
mov
mov
dec
ds
movsl
mov
insb
cmp
jae
es
sti
stc
je
xor
jno
jo
fucomi
faddl
icebp
fldt
movsl
repz
loopne
inc
negb
stc
por
lahf
dec
scas
pop
scas
pop
repz
add
in
xor
cmc
add
sub
test
or
and
mov
push
test
xchg
rclb
xchg
fucomi
stc
je
add
xor
sub
adc
mov
popa
ljmp
jg
xor
sub
sbb
xchg
sarl
ret
and
push
ss
pop
mov
xor
mov
mov
inc
jnp
mov
ss
xchg
call
shlb
push
adc
sbb
push
push
scas
iret
clc
cmp
imul
jge
les
jnp
mov
lahf
pushf
pusha
frstor
test
jo
jp
pop
add
in
and
sbb
cmp
mov
push
push
insl
pop
addl
sahf
cmp
pop
ret
lds
test
aad
mov
cmp
lcall
mov
sub
int3
adc
es
int3
adc
adc
sbb
aas
jecxz
inc
push
add
sub
shrb
and
jns
leave
aad
fisubrs
add
leave
pushf
out
push
scas
loopne
sub
cmp
jge
add
gs
jl
xor
add
push
lds
cmp
mov
xacquire
aad
xchg
dec
cmp
test
loop
and
mov
sub
fnstenv
outsl
movsb
lods
pmullw
in
fsub
mov
enter
mov
mov
cld
inc
out
push
dec
scas
and
mov
sub
data16
inc
push
hlt
push
mov
cmove
aad
add
xor
pop
inc
mov
cs
cwtl
jg
dec
dec
je
lds
jae
inc
bound
hlt
and
mov
repz
inc
mov
ret
mov
adc
lea
cld
cmp
mov
stos
inc
mov
or
fildll
loopne
cs
adc
cltd
mov
pop
test
mov
fwait
xchg
inc
push
outsl
insl
inc
push
cmpsl
cwtl
pushf
arpl
sub
clc
fimuls
dec
call
cwtl
and
dec
adcl
stc
nop
stmxcsr
adc
in
lods
aam
pop
jno
cmp
pop
loopne
pop
xor
push
adc
scas
iret
pop
xlat
xchg
addr16
fdivs
xchg
adc
insl
into
fadds
shlb
jnp
push
cld
add
pop
cwtl
push
inc
mov
sub
mov
arpl
and
in
jecxz
mov
inc
inc
or
pop
repz
pop
xchg
in
inc
or
sbb
xchg
mov
in
and
gs
and
call
cmc
jl
movsb
fsubrs
xchg
shll
mov
dec
jns
fbstp
push
ljmp
je,pn
sahf
loope
inc
das
sbb
in
js
jecxz
mov
jl
stos
mov
push
enter
mov
ss
aaa
clc
xchg
cmp
mov
rcrb
and
jecxz
and
add
mov
sub
mov
mov
sbb
xchg
inc
pop
mov
mov
bound
xchg
add
mov
mov
sar
push
clc
fsub
ljmp
and
lods
jmp
enter
ds
popa
flds
lret
xchg
jmp
cmp
icebp
sbb
dec
and
jp
fisttpl
icebp
add
dec
inc
incl
add
push
jp
imul
cmpsb
sub
in
jp
jns
aam
scas
outsb
mov
or
fldl
icebp
xlat
sbb
add
mov
inc
daa
dec
or
sub
loopne
or
test
mov
in
js
clc
mov
pop
inc
sub
das
enter
pop
mov
pop
loope
addb
adc
pop
inc
xor
into
and
mov
jae
mov
ficomps
pusha
xlat
daa
sub
ficoml
xor
mov
cmp
xor
ja
lods
pop
outsl
add
add
paddq
orl
xchg
xor
push
setns
sbbb
or
jne
clc
push
push
fcomps
inc
aas
ss
xchg
jbe
out
ret
pop
xchg
mov
push
movsl
mov
push
aam
lcall
xchg
gs
jnp
test
mov
outsb
ljmp
mov
ret
aas
pop
cmp
int3
dec
mov
xor
mov
lds
push
pop
jb
fnstsw
pop
repnz
cmpsl
scas
sti
jge
lds
insl
mov
mov
jbe
cmp
push
xor
push
adc
push
pop
nop/reserved
dec
fisubl
push
dec
sbb
dec
push
aam
xchg
jp
mov
sti
je
sbbb
sbb
pop
lds
pop
and
shl
and
call
jg
neg
outsb
cmp
inc
push
add
cmp
testb
in
xor
mov
push
mov
sbb
sbb
mov
cli
xor
inc
aad
jbe
ret
lods
mov
in
or
or
push
dec
and
fnstsw
pop
xchg
lods
stos
jecxz
cmp
add
mov
fisubl
cli
lret
fwait
pop
push
xor
mov
mov
mov
lea
push
inc
pushf
es
icebp
dec
xchg
inc
inc
dec
adc
adc
jmp
pop
mov
and
add
mov
aam
and
out
xchg
inc
icebp
cmp
rcrl
mov
adc
jns
sbb
inc
and
hlt
jae
ret
sub
jg
outsl
mov
mov
stos
mov
adc
cli
jecxz
cmp
inc
stc
les
mov
mov
xor
xor
in
mov
repnz
and
loopne
dec
xor
arpl
addl
je
pop
shl
mov
mov
cwtl
add
lcall
and
enter
idivl
int3
sti
call
in
dec
mov
xchg
cmpsb
adc
dec
pop
fwait
push
cmp
jg
add
sub
jge
test
and
pop
mov
insb
bswap
mov
into
push
cli
jae
mov
dec
jnp
sti
sbb
dec
mov
inc
sti
pop
push
mov
lahf
add
mov
jg
pusha
movsb
orb
adcl
jg
mov
shlb
sarb
dec
shlb
sub
and
test
xchg
pop
jl
fs
fnstsw
jmp
lds
stc
mov
mov
inc
inc
pop
dec
pop
mov
xchg
mov
jnp
jb
test
icebp
xchg
xchg
xchg
adc
shl
add
test
jae
jne
sbb
jmp
scas
adc
jo
inc
scas
inc
cmp
movsl
dec
inc
imul
mov
and
int
push
sbb
add
testb
or
jns
jge
sub
fsubl
dec
cli
aad
fnsave
sub
fbld
dec
and
cltd
mov
add
icebp
xchg
add
jbe
shl
or
sub
cmp
mov
xlat
ret
enter
xor
out
lea
xor
sbb
dec
mov
mov
icebp
ret
sub
gs
xlat
mov
lahf
push
cmp
lahf
mov
loop
faddl
testl
mov
xor
jg
jmp
pop
pop
xchg
add
mov
mov
out
or
or
inc
pop
in
or
cmovbe
xchg
ja
dec
mov
bound
call
and
sub
sub
dec
inc
andl
shlb
and
cmpsb
cmpb
stc
push
lsl
insb
cltd
inc
repz
mov
cmp
int
fisttpl
sub
sub
cmp
aaa
mov
inc
sti
sub
aad
nop
in
sub
test
lret
fisttpll
hlt
xor
and
adc
data16
daa
pop
jecxz
iret
push
sbb
fidivrs
test
add
aas
mov
pop
scas
inc
data16
mov
push
outsl
jecxz
adc
iret
sub
fimull
out
push
jno
inc
and
fdecstp
sti
mov
jno
shll
loop
cmpl
imulb
test
out
mov
push
repnz
sbb
cmp
mov
in
adc
pop
push
mov
cli
fs
mov
cmc
into
push
clc
stc
jecxz
inc
jl
test
xor
jmp
mov
pushf
inc
pusha
and
or
in
mov
nop
stos
cs
sbb
rorl
pushf
gs
fwait
into
sub
pop
xor
out
adc
std
mov
lds
or
jnp
dec
and
sub
add
xor
mov
insb
xor
flds
sahf
xor
fimull
dec
test
cs
sbbl
and
cmpsb
jl
popa
add
sbb
aam
in
dec
cmp
daa
or
rcrl
push
jmp
nop
jmp
xchg
scas
jbe
scas
dec
xchg
jno
mov
push
push
add
cmpsb
and
pushf
sti
push
sbb
lret
notb
sarl
pop
movb
decl
scas
push
cmpsb
je
sub
ljmp
out
xchg
mov
xlat
xchg
push
fwait
ljmp
mov
orb
cmp
push
jp
mov
dec
outsl
sbb
jg
xor
dec
test
fcoml
fidivs
lahf
ds
and
mov
out
rcrb
js,pt
dec
ret
jge
mov
mov
push
int
mov
push
inc
pop
test
aaa
jp
lret
fisubl
cmp
add
mov
notl
push
mov
cmp
stos
pop
push
mov
scas
pop
fsub
xorl
xchg
sub
adc
in
in
fdivrp
lcall
or
sub
decl
jl
mov
cltd
in
and
cmpsl
xor
cs
loope
cmp
cmp
mov
out
mov
addb
rorl
fildll
and
or
loope
scas
mov
test
fcomps
xchg
cmp
pop
xor
lea
mov
outsl
stos
test
and
push
mov
pop
push
stos
pop
lock
sub
mov
mov
ret
jne
cmp
loope
subb
add
dec
inc
in
xchg
adc
add
sbb
add
pop
jnp
mov
sahf
ljmp
push
out
or
lods
cs
imul
mov
imul
int3
mov
in
into
push
mov
xor
out
js
mov
rol
gs
ja
cmpsb
push
leave
and
mov
mov
mov
lcall
inc
arpl
cli
pop
mov
push
adc
add
mov
sub
inc
sbb
ljmp
push
and
or
cmpsl
push
jg
or
pop
call
out
lret
std
xor
repz
jo
sarl
pop
add
sub
fwait
xor
ljmp
loope
aas
cmp
adc
in
cmpsb
pushf
sub
and
jnp
ret
xchg
out
imul
mov
add
cmpsl
sub
sub
mov
int
adc
mov
out
xchg
inc
inc
daa
rcrb
inc
pop
mov
jl
mov
out
cmp
push
testl
fnstenv
fadds
hlt
push
loop
xchg
call
push
or
xor
cmp
jnp
loope
mov
movsl
dec
test
mov
aad
std
ja
jp
sub
jae
xor
inc
mov
jecxz
and
mov
in
jecxz
push
inc
dec
mov
pop
cmc
cmp
jg
sbbb
push
shr
xchg
jns
into
inc
pop
inc
ds
loop
jg
adc
pop
add
and
nop
out
mov
jnp
sub
jge
pushw
in
sub
jo
or
dec
xrelease
xor
mov
shr
bsf
push
and
inc
dec
arpl
dec
cwtl
or
aad
cmc
and
push
sbb
jp
jno
add
sarb
dec
xcrypt-ofb
cmpsl
scas
call
cs
ret
cwtl
pop
xchg
jl
cmp
inc
loopne
pop
inc
or
in
test
xchg
lods
insl
popa
push
shlb
push
ljmp
xchg
in
inc
or
cmp
cwtl
pop
rol
jp
add
mov
adcl
imul
sbb
jmp
jp
cli
jmp
dec
popf
mov
ss
mov
push
shlb
mov
aas
stos
lods
cmp
jnp
bound
int3
push
fwait
xchg
int3
mov
test
sub
out
sub
test
aad
int3
mov
push
test
fs
mov
lcall
in
outsb
cmp
rcrl
add
cli
push
clc
sahf
add
add
in
push
mov
in
movsb
ja
into
jne
dec
dec
mov
rcll
cmp
inc
test
inc
insb
sub
ja
inc
jns
mov
aas
push
loopne
cmp
xchg
xor
je
xchg
loope
shll
ret
dec
push
in
shll
push
mov
cmp
mov
popf
aad
cltd
jnp
popf
mov
jb
mov
pushf
aaa
or
lods
add
adc
ret
inc
test
mov
mov
adc
xchg
inc
xchg
pop
in
fst
fisttpl
outsb
std
cld
lret
shrl
sub
lret
outsb
jne
test
dec
loop
add
cmpsb
and
rcrb
cmp
adc
mov
jbe
nop
add
sub
mov
loopne
adc
addr16
sbb
cmc
mov
jge
sti
pop
adc
out
leave
dec
inc
jbe
mov
and
mov
sub
inc
loop
bound
inc
cld
movsl
gs
dec
clc
das
push
mov
out
xchg
dec
jne
iret
mov
xchg
in
xchg
mov
sub
mov
out
sub
mov
loop
add
cmp
xchg
shrb
xchg
cmp
in
cmpsl
ror
ror
sahf
scas
add
int3
jecxz
ds
mov
sbb
pop
cmpsl
xor
cmpsb
jl
cmp
mov
or
mov
adc
xchg
lods
loop
sbb
fistps
sbb
mov
aad
rclb
xor
frstor
hlt
push
inc
add
sbb
imul
idivl
inc
in
enter
mov
sarl
aam
sbb
mov
mov
mov
xorb
add
inc
cltd
or
fcmovnb
jge
xor
push
mov
xchg
test
fwait
out
push
bound
cli
ljmp
movsl
xchg
pop
jge
call
cmp
mov
push
mov
sub
cltd
je
cld
fs
fwait
cmp
or
outsb
sub
cltd
in
aas
sbb
ss
push
xor
hlt
fstpt
xchg
shlb
cmp
sarl
push
dec
cmc
inc
test
or
push
scas
dec
jmp
out
and
push
inc
inc
std
mov
mov
bound
sarb
mov
sarb
int3
lret
pop
pop
jp
pop
or
pop
sbb
mov
js
in
lahf
jmp
ss
filds
jge
pop
mov
stos
jo
sahf
lods
mov
xchg
ja
pop
cmpsb
mov
mov
cltd
sub
push
outsl
movsl
adc
sub
jl
js
xor
and
into
jl
fs
imul
cli
aad
push
or
xor
inc
push
mov
cmc
in
in
in
test
inc
cs
xchg
jl
fmulp
sub
jp
scas
push
push
loop
mov
call
sarb
int3
xchg
stos
mov
jmp
jb
inc
lods
xor
xor
js
bound
int
ret
or
dec
clc
jae
or
adc
push
and
cld
bswap
inc
xchg
daa
enter
mov
jecxz
jmp
push
movb
push
int3
in
int
adc
adc
pop
mov
mov
push
sbb
arpl
mov
xchg
sarl
push
sbb
sub
notb
call
imul
js
xor
push
call
and
sub
std
or
stos
mov
addr16
cmp
stos
jae
in
adcb
sahf
cmp
push
and
lahf
sahf
sbb
jno
test
test
jnp
loopnew
inc
fld
mov
imull
and
ret
push
clc
xchg
pusha
icebp
adc
push
fdiv
bound
repz
jns
or
xchg
jne
push
mov
cs
and
xor
cmp
cwtl
pop
push
pushf
jmp
pop
mov
test
sahf
cld
in
movsb
arpl
jg
inc
aas
push
sub
fimull
and
push
dec
push
fsubl
iret
jmp
jle
pop
and
or
xchg
pop
push
sti
rclb
mov
mov
jns
pop
adc
loop
outsl
inc
enter
jmp
adc
mov
and
inc
dec
outsb
xor
lods
xor
pop
add
or
dec
fs
ljmp
fldl
ret
call
cmp
pop
mov
out
cli
adc
fadds
mov
mov
in
test
test
ja
jno
cwtl
fsubs
out
xchg
and
lods
ja
int3
sub
push
aaa
fisttpll
outsl
cmp
inc
mulb
lock
xchg
push
cmpsl
mov
push
iret
push
inc
jb
repz
aad
cmp
and
fnsave
ljmp
and
jle
cwtl
test
pop
roll
sbbb
call
mov
sbb
adcb
xor
psraw
cwtl
mov
xchg
push
jge
xor
push
push
arpl
cmc
push
lea
std
and
add
pusha
test
mov
jns
pop
mov
fiaddl
aas
dec
push
inc
cmpsb
xor
int
pop
mov
fs
dec
lcall
rcr
ret
sub
data16
jo
push
mov
mov
sub
ss
mov
adcb
mov
int
lahf
arpl
je
int3
bound
sbb
inc
int
aas
sbb
cmp
cmp
adc
cmp
sti
dec
gs
jge
icebp
push
push
sub
or
sub
cwtl
and
lahf
ret
pop
add
arpl
mov
adc
add
test
icebp
push
orl
stos
cmp
pop
push
lea
dec
inc
jmp
test
jmp
enter
iret
dec
out
or
test
mov
add
ds
dec
xchg
mov
cld
rorl
xchg
mov
into
in
push
add
mov
mov
inc
nop
push
or
add
shr
cmpsl
in
mov
pop
mov
outsb
or
jecxz
push
shlb
mov
cwtl
out
fcom
add
push
or
js
rolb
add
cmp
adc
push
out
inc
test
aas
or
or
mov
dec
fs
xor
stc
cli
jge
xchg
inc
pop
shr
nop
daa
cmp
in
jne
fldl
into
ret
aas
popf
pop
in
lcall
popf
adc
dec
out
mov
test
scas
jmp
call
xchg
iret
jg
xchg
push
mov
shll
and
cs
push
push
sub
dec
inc
addb
cld
adc
and
insb
mov
fs
mov
sahf
aaa
pop
mov
xchg
pop
and
sub
stos
test
call
stos
jmp
cmc
aaa
in
outsb
fcmovnbe
inc
inc
jne
cmp
mov
and
cmpsb
test
jns
xor
mov
and
or
pusha
fidivs
je
call
dec
cmp
in
push
mov
xor
jae
sbb
mulb
sahf
inc
jmp
xchg
leave
mov
fcoml
cmc
outsl
sbb
cs
cmc
mov
rcrb
pop
xchg
test
xchg
test
ret
inc
push
xor
ficompl
xchg
orl
je
rclb
ret
dec
push
mov
test
pusha
pop
mov
lods
add
imul
add
inc
pop
or
loop
jns
xor
arpl
mov
in
pusha
test
add
orl
std
pop
sub
or
cltd
mov
dec
test
and
andl
jp
test
push
mov
test
xor
loopne
mov
jae
enter
pushf
ret
jae
call
popa
mov
out
jno
jle
or
icebp
xchg
adc
stos
xor
inc
cmc
xchg
mov
sub
into
cli
dec
pop
in
push
arpl
mov
aaa
xchg
lea
outsl
leave
inc
mov
jmp
xchg
cmp
lcall
mov
mov
pop
idiv
lods
daa
mov
jno
mov
fsubr
iret
and
pusha
movsb
scas
mov
sub
cmp
call
pop
jb
push
sbb
test
jge
fs
pop
rclb
adc
les
cmpsb
leave
add
sub
stc
les
mov
es
pop
mov
cmp
cmpsl
fildll
ror
dec
mov
and
cmp
and
pusha
stos
add
inc
orb
jns
or
in
movsb
mov
jmp
fucomp
mov
lret
xchg
fs
adc
or
xchg
daa
jno
popf
inc
imul
sub
jns
xchg
call
cltd
jo
dec
push
or
and
cmc
add
mov
hlt
test
ljmp
dec
sub
cmp
in
mov
mov
mov
stc
add
ljmp
cmp
inc
and
jne
add
stos
xor
aaa
or
add
push
aam
add
daa
jmp
mov
test
sbb
in
xchg
cmp
cltd
cmpsl
sbb
test
in
cmpsb
jo
out
or
and
pop
stos
in
xor
xchg
cmp
lock
pop
xbegin
std
mov
add
add
pop
outsl
aam
jle
movsb
leave
sub
jmp
test
mov
leave
sub
fnstcw
or
xor
scas
outsl
adc
add
leave
pop
inc
lds
adc
in
out
dec
outsb
inc
push
ljmp
aad
out
push
mov
dec
xchg
fldenv
dec
inc
out
scas
out
cld
addr16
push
inc
cmc
inc
sbb
dec
cmp
mov
daa
addr16
cmp
cmp
cmp
ret
pushf
add
mov
cld
std
jl
dec
mov
test
cmpsl
sbb
mov
cs
xor
xchg
pop
add
push
jle
mov
push
xchg
nop
pop
sub
xchg
and
sub
xchg
enter
pop
into
testb
pop
jo
or
mov
xor
gs
or
ja
shrl
in
jmp
xor
mov
xchg
arpl
mov
xlat
jmp
add
pop
mov
int3
mov
movsl
aaa
sbb
or
lods
jne
lcall
adc
or
icebp
pusha
repz
cmp
mov
mov
ret
xor
mov
xchg
sub
lahf
dec
and
mov
xchg
pop
fwait
and
shlb
and
test
je
dec
push
cld
inc
inc
aam
insl
xorl
lds
loopne
xchg
push
xor
dec
imul
jbe
pop
ret
inc
or
shlb
fistpll
stos
mov
xchg
hlt
xlat
xchg
and
and
fildll
mov
lret
ds
aam
out
decb
cmc
add
out
pop
mov
push
cmc
jp
fmul
imul
nop
rolb
pop
sbb
dec
xor
fistpll
sub
mov
inc
ljmp
push
xchg
ret
and
enter
jl
sbb
sub
or
jnp
sbb
jns
js
xor
sub
stos
addl
or
sub
call
jle
lods
stos
mov
pushf
cmp
xor
test
fiadds
hlt
test
pop
call
push
sahf
adc
push
lock
pop
mov
mov
out
jecxz
outsb
iret
orl
jmp
lods
jge
icebp
jg
mov
lret
hlt
lret
adc
and
mov
push
inc
sub
out
out
call
sarl
inc
rol
fsubl
inc
lods
fs
shll
adc
outsb
movsl
rcrb
lret
and
mov
fwait
pop
loopne
sbb
sub
dec
ljmp
lret
mov
or
jecxz
imul
test
inc
add
loopne
sarb
pusha
out
cmp
mov
lret
mov
icebp
sub
test
loop
es
call
mov
shrb
pop
dec
lods
add
call
mov
push
gs
je
dec
test
push
aaa
fstpl
mov
xor
or
and
xor
ljmp
lret
push
sub
imul
arpl
addr16
mov
pop
jmp
add
dec
dec
inc
adc
ret
inc
rcrl
lea
jmp
xchg
xchg
stos
adc
cmp
xlat
stos
shlb
pop
aam
cmpsl
pushf
jle
data16
ror
into
xchg
fwait
sbb
shll
and
pop
out
pushf
xor
mov
fsubrp
or
mov
sub
xchg
aas
sbb
ret
cmp
repz
decl
outsb
test
cltd
rcrb
arpl
icebp
fcmove
notb
pushf
call
or
mov
sarl
icebp
jnp
push
sub
jecxz
sbb
aad
or
cmp
rcll
inc
bound
pop
push
mov
mov
xor
xorb
shl
add
nop
and
int3
inc
inc
adcl
sahf
in
mov
mov
jle
pop
vmwrite
test
dec
xor
les
test
cmp
scas
out
ljmp
xor
push
pushf
testl
stos
in
andl
and
pusha
bnd
sub
pop
dec
pop
or
xlat
and
and
xchg
out
lock
lea
push
in
stc
inc
inc
mov
or
sub
in
test
dec
loope
cmpsb
pop
stos
pop
in
sub
insb
mov
lock
add
dec
jae
iret
out
popa
imul
or
xchg
mov
inc
ss
mov
into
adc
mov
rcll
sub
jno
and
std
in
mov
imul
mov
mov
into
cltd
sbb
sub
sub
clc
xchg
jmp
aas
imul
jns
mov
add
jg
clc
pop
push
mov
inc
pop
es
frstor
inc
xchg
xor
sbb
inc
insb
pop
mov
mov
and
jno
ret
pop
stos
popf
fistpl
or
xor
jp
jno
sti
popf
mov
lcall
pop
or
jne
insb
mov
or
mov
cs
daa
ret
sub
and
push
cmpsl
shlb
or
sub
out
dec
enter
inc
je
pop
mov
out
out
ds
push
fdivrs
cs
leave
push
les
add
mov
push
inc
jns
push
cmp
sub
ja
inc
enter
hlt
jmp
mov
sub
je
ret
cwtl
das
repz
jno
std
jnp
mov
pop
scas
jg
dec
mov
jge
into
add
outsb
add
testb
frstor
xchg
lock
push
inc
jb
dec
push
nop
or
cmp
ljmp
inc
lcall
out
and
stos
scas
pop
inc
jno
pop
sub
xchg
push
pop
inc
mov
mov
fidivl
insl
xchg
mov
mov
sub
arpl
mov
sub
popf
bound
dec
clc
test
or
daa
mov
lods
aad
jb
mov
jno
hlt
sbb
xor
xlat
push
pop
outsb
mov
pushf
and
jae
mov
jnp
add
test
xchg
push
mov
mov
pop
add
loopne
cmpb
iret
jmp
push
test
lea
icebp
fs
jl
popf
int3
and
or
lahf
not
xchg
mov
insb
push
mov
push
lcall
test
sub
aam
mull
setno
popf
stos
shl
enter
in
xor
mov
je
xor
jmp
sub
jl
push
xchg
xchg
cmp
mov
and
jnp
mov
push
inc
push
push
sbb
fstl
xchg
push
xchg
rclb
ret
popa
fldl
lahf
outsb
cmp
add
lcall
insb
inc
stos
add
sub
adc
rcrb
xor
ljmp
inc
movsl
fsub
daa
sub
sbb
and
outsb
inc
push
jmp
mov
fsubs
push
dec
scas
mov
adc
cmp
lcall
pusha
out
or
mov
jb
sub
or
out
int
mov
cmp
into
push
jbe
jns
lea
out
adc
mov
mov
lds
into
aam
mov
jmp
add
mov
movsb
xchg
mov
pop
adc
scas
mov
and
out
test
insb
pop
lret
sbb
repnz
xor
cmpsl
outsl
sbb
or
cwtl
push
sub
aad
out
pop
mov
das
imul
in
imul
push
or
lock
jp
dec
fwait
mov
out
pop
pusha
and
and
jp
pop
add
or
dec
mov
gs
into
js
xlat
sarl
jg
xor
in
enter
lds
fdivs
in
ret
jno
xlat
xchg
mov
enter
je
fstp
into
push
inc
dec
gs
std
xor
ret
or
and
js
repz
xor
add
inc
xchg
in
les
les
nop
xchg
stc
jge
sbb
lock
stos
cmp
jg
push
lods
pop
js
popf
mov
and
pushf
imul
sub
insb
cmpsb
cmpsb
fs
aam
or
pushf
cmp
test
fisttpl
imul
js
inc
mov
dec
outsb
scas
xor
cmp
inc
leave
or
aas
pop
ds
cli
cli
mov
test
fsts
sub
nop
cltd
and
xor
pop
hlt
or
push
cli
dec
loope
mov
adc
or
add
xor
cld
sbb
and
and
xchg
adc
and
ljmp
lods
xor
lods
push
in
cmp
sub
xchg
pop
push
roll
test
jo
addr16
dec
in
jne
jbe
jge
mov
pop
enter
xchg
add
adc
fs
xor
lds
aam
movsl
sahf
aam
leave
sub
inc
cmp
or
xchg
jmp
test
fwait
push
nop
sbb
rcr
push
clc
aaa
lret
xor
sbb
mov
pushf
xchg
pop
shlb
mov
cli
int
call
shlb
add
mov
subb
pop
stc
mov
std
adc
rorb
out
add
mov
cltd
nop
cmpsl
fcoms
xlat
les
je
or
and
pop
mov
aam
mov
mov
inc
enter
pop
pop
adc
xlat
xor
jae
lock
mov
adc
cmpsl
pop
xor
test
mov
gs
jmp
mov
push
clc
daa
add
inc
jno
mov
xor
insb
mov
popf
fimull
sub
dec
movb
jne
in
sbb
subb
push
inc
outsl
dec
addr16
rclb
pop
xor
stc
xchg
add
lods
scas
add
mov
or
repz
xchg
pop
inc
mov
push
adc
imul
xchg
mov
test
cli
das
push
or
cltd
adc
das
ror
dec
pop
mov
adc
lahf
leave
add
xor
mov
arpl
shll
xor
imul
ds
push
dec
lret
jecxz
int
adc
lret
testb
les
jo
das
jg
xchg
push
ret
cmp
jl
loopne
cmpsl
cmpsl
mov
test
sub
jmp
shlb
jae
loopne
jmp
add
fistps
pop
push
cwtl
jnp
ret
inc
inc
dec
lret
rorb
mov
sub
sbb
or
repnz
sub
outsb
jae
mov
daa
pandn
adc
pop
testl
jno
rclb
cmc
loopne
add
xchg
adc
aaa
jmp
push
pop
xchg
adc
test
mov
mov
out
dec
push
sub
push
lcall
lcall
xchg
jle
push
dec
in
ljmp
bound
enter
call
or
mov
push
mov
out
or
add
inc
push
les
shlb
clc
push
das
outsb
movsb
sbb
ror
add
inc
xchg
rcrb
sbb
movsl
in
pop
or
pop
fstl
sar
xchg
sbb
jle
jne
mov
cmc
pop
pop
add
imul
mov
stos
shl
pop
ds
and
xor
add
push
testb
lret
cwtl
mov
sbb
movsb
jg
das
mov
jno
mov
mov
pop
xor
hlt
es
jae
cmpsl
mov
xchg
pushf
fcoml
cmc
sbb
push
pop
jns
fildl
hlt
arpl
fisubs
or
lds
dec
sbb
mov
fcmovnu
enter
das
loope
int
in
inc
mov
testl
mov
xorb
scas
add
push
popa
jb
cltd
sahf
jg
stc
jecxz
mov
dec
mov
loope
cmp
mov
adc
lret
push
call
dec
inc
sahf
loopne
dec
movsb
fadd
nop
fs
lea
xchg
cmp
in
inc
popa
cmpb
or
subl
je
push
xchg
xor
mov
mov
inc
popa
mov
leave
mov
frstor
push
mov
in
inc
repnz
and
faddp
push
cmp
out
jp
push
imul
or
sbb
mov
jbe
sbb
jb
rcrl
pop
ds
pop
mov
cli
adc
daa
ljmp
or
push
insl
and
dec
or
addr16
lret
sbb
cwtl
add
addb
add
pusha
aam
xchg
daa
stc
aaa
ja
jno
sbb
xlat
sarb
inc
inc
std
adc
xchg
jle
mov
sub
sbb
push
loopne
in
cmp
xchg
or
or
sub
xchg
std
outsb
lret
sub
lods
movsb
dec
lock
mov
fldenv
pop
xchg
ret
push
call
jmp
into
ja
movsb
lret
add
loope
loope
pusha
btc
subb
notb
sahf
or
movsl
cltd
repz
add
das
sub
lcall
jmp
subl
das
vpsrlw
loop
rorl
cmpsb
mov
ffreep
pop
xchg
sub
nop
lea
push
je
cli
rcll
add
das
in
or
icebp
push
lcall
mov
jae
xchg
push
rorb
pop
inc
pushl
jbe
aad
lods
push
xor
mov
test
adc
fdecstp
popf
jle
xchg
push
lahf
sti
sub
sub
jle
mov
sahf
jecxz
jbe
pop
insb
pop
pop
ret
adc
mov
arpl
test
psrlw
inc
mov
addr16
lcall
inc
in
cmp
into
lcall
xchg
dec
mov
add
out
mov
xchg
push
rorl
lcall
es
in
movsl
pop
push
mov
cmc
adc
inc
stos
cmp
add
xchg
pop
std
stos
adc
inc
test
push
gs
out
xor
out
pop
add
pusha
sub
sbb
pop
aas
cmc
movb
je
hlt
js
add
fistl
dec
insb
test
sbb
mov
add
nop
cmp
jle
adc
sbb
sbb
aaa
call
cmpsb
xor
mov
nop
scas
fidivs
inc
xchg
pop
push
lea
lds
scas
nop
add
test
in
sti
mov
pushf
sbb
and
mov
out
cwtl
xchg
sahf
push
fistl
outsb
out
popl
xor
inc
dec
push
pop
pop
pop
stc
in
rorl
mov
aaa
in
jp
sbb
fisubs
cmp
xor
or
pop
pcmpgtb
call
jns
insl
dec
lret
sbb
push
leave
push
faddp
imul
mov
cmp
adc
fistps
inc
into
adc
cmc
inc
mov
jmp
fwait
arpl
fsubl
lret
aaa
imul
jae
add
popa
sti
into
loope
mov
dec
sbb
lret
and
cmp
mov
cmp
inc
and
push
ffreep
aas
shrl
jg
xchg
ficompl
pop
test
xchg
test
imul
sub
push
push
int3
outsb
lock
fildl
bound
dec
out
mov
test
mov
sub
adc
pop
xor
pop
nop
int
insb
nop
fcmovb
xchg
shr
pop
test
in
cmp
jge
cmpl
mov
push
daa
popf
aas
lcall
xchg
inc
orb
inc
pop
sub
xchg
xchg
cli
aaa
sbb
call
hlt
ror
enter
or
pop
loope
int
pop
fcomps
push
addr16
cld
outsb
in
sub
lret
jno
negl
or
jl
iret
jl
fstps
add
repnz
mov
out
or
xchg
adc
push
and
mov
jbe
call
cmpsb
xor
mov
or
or
fnstenv
adc
push
dec
sbb
xchg
insb
ds
mov
pop
mov
scas
cmc
nop
inc
sbb
cltd
mov
inc
xor
sbb
cmpsb
es
xor
testb
mov
loop
dec
les
mov
icebp
add
mov
push
xchg
sbb
add
sub
rolb
lcall
or
or
pop
aas
daa
or
xchg
mov
outsl
and
push
out
jecxz
inc
fwait
iret
xchg
adc
mov
cmp
movsb
sub
iret
push
inc
scas
mov
and
and
fcmovbe
pop
fadds
fstpt
aam
in
lcall
xchg
into
jo
rcll
xchg
gs
cmp
idivb
and
popa
ja
mov
mov
or
add
pop
in
outsl
add
pop
push
mov
popfw
test
inc
mov
lods
lds
pop
cmp
out
sbb
andb
inc
inc
aad
adc
sbb
in
rorl
sub
lret
pop
enter
xchg
icebp
sub
popf
and
cmp
pop
mov
push
data16
nop
mov
ja
push
pop
jnp
pop
xor
xor
enter
aas
adc
imul
add
or
sbb
std
adc
clc
sub
xchg
mov
and
cmp
stos
mov
sbb
hlt
dec
or
xchg
insb
push
mov
xchg
daa
pop
pop
mov
popa
outsl
jnp
inc
mov
mov
neg
push
dec
fldl
xlat
add
mov
lods
mov
or
lock
cmc
jns
std
add
mov
fidivrs
shl
sbb
and
xchg
and
mov
dec
sub
rcr
mov
jl
or
cmp
jmp
out
lret
inc
jns
sbb
pusha
mov
xchg
frstor
xor
pop
cmp
fsubrs
cmp
neg
popa
inc
cs
repz
xchg
inc
ljmp
sub
add
sahf
cmp
ja
addr16
imul
sti
xor
mov
xchg
pop
fwait
pusha
das
adc
inc
pop
mov
cmp
dec
add
into
imulb
push
out
stos
push
jecxz
mov
jg
jb
pop
cmp
shl
jno
lods
aam
add
adc
cmp
int
rcll
cmpsl
cmp
lock
pop
rolb
adc
ja
adc
xchg
jae
adc
mov
lgdtl
jmp
xchg
in
arpl
pushf
xchg
pusha
cld
inc
push
into
mov
aaa
stc
pop
movsl
dec
shll
xor
push
imul
fnstsw
sahf
pop
inc
xor
shlb
popf
dec
lea
jne
mov
jg
jnp
out
rorl
push
sbb
xchg
cmp
add
fcoms
pop
mov
inc
clc
sbb
loope
je
push
loope
pop
add
push
fisubs
shll
roll
idivl
adc
cmp
sub
into
adc
xchg
div
add
call
and
cwtl
push
mov
vandnps
mov
je
add
fs
out
arpl
cmc
repz
push
pushf
jne
or
xor
cmc
push
mov
mov
std
loopne
mov
outsb
stc
pop
inc
push
mov
inc
mov
jno
jae
cmpsb
dec
mov
pop
incb
decl
mov
mov
pop
lock
in
inc
bound
test
add
mov
xor
stos
pop
mov
fisubl
mov
cmpsl
scas
in
xchg
or
and
dec
mov
cmp
xchg
cmp
add
in
ret
and
mov
or
sub
mov
xor
dec
cmpsb
sub
pusha
mov
mov
rol
loope
push
ja
push
scas
lret
imul
pushf
mov
ljmp
cmc
fstl
fistpl
mov
loopne,pt
mov
push
out
jmp
sub
add
push
gs
mov
test
push
lods
pop
aad
jecxz
add
daa
mov
pop
rcrl
pop
nop
fistps
sbb
dec
xlat
rorb
icebp
cs
pop
fistps
subl
loopne
lods
jo
push
mov
mov
xor
jnp
add
loop
dec
mov
mov
xor
sbb
fs
adc
cmp
adc
push
inc
sbb
xchg
in
shr
jecxz
into
inc
pop
xchg
lret
xlat
mov
std
in
dec
inc
dec
shll
pop
cmp
inc
mov
inc
lds
inc
adc
cltd
addr16
dec
mov
es
mov
inc
mov
jmp
cld
enter
mov
outsb
sub
into
nop
aas
mov
jb
pop
int
addb
rorb
movsb
bound
testl
fnstenv
xor
and
repz
lret
pushaw
push
inc
icebp
sti
inc
mov
inc
mov
sbb
cwtl
xchg
imul
div
outsb
test
ret
test
adc
mov
lret
ficoml
fmuls
into
sbb
add
shlb
shl
in
adc
hlt
ja
ds
loop
mov
fstl
or
outsl
xchg
andl
mov
push
push
mov
or
movsw
xchg
sbb
lods
fldt
clc
xor
cltd
sti
jno
dec
cmp
data16
push
popf
and
push
fisttps
sahf
dec
jg
mulb
adc
ds
pop
jl
rcll
jg
pop
hlt
out
or
pop
leave
fldenv
mov
mov
out
mov
jo
stos
mov
std
xor
sub
orl
mov
adcl
add
test
mov
imul
nop
gs
xchg
rcr
cmc
pusha
rolb
cmp
inc
pop
xchg
cmp
dec
mov
idivb
pusha
inc
xchg
inc
jecxz
xchg
fwait
popa
jmp
add
imul
sbb
cmp
mov
mov
jb
and
mov
sub
jnp
cmp
pop
sbb
aaa
jp
add
jge
scas
out
jb
aaa
iret
imul
and
lds
sahf
adc
aam
inc
fucom
dec
fcompl
cld
jns
sti
call
push
cmpsl
xor
or
jg
or
mov
add
push
mov
enter
in
es
hlt
jno
xor
jp
hlt
hlt
pop
push
jne
lock
clc
in
bound
cmp
adc
in
enter
cld
cmp
pop
ret
jge
aad
addr16
lods
dec
test
mov
loope
or
xchg
push
or
daa
test
and
imul
ret
inc
or
and
sub
in
jno
lods
and
stos
xchg
push
gs
push
jno
sti
les
xchg
mov
push
or
jbe
sub
jecxz
cs
dec
adc
ljmp
adc
ljmp
mov
testl
xchg
jl
lret
inc
ficompl
cmp
jae
frstor
incb
pusha
adc
pushf
dec
push
push
out
mov
jne
je
dec
dec
pop
icebp
mov
cs
mov
and
mov
insl
imull
push
loop
dec
cld
ljmp
int
jne
idivb
clc
adc
sbb
add
xchg
inc
cmp
and
lahf
cltd
shrl
popa
xor
repnz
imul
mov
out
aam
mov
popa
and
sbb
hlt
lret
bound
dec
jl
inc
dec
pop
sub
test
adc
fwait
jecxz
aaa
stos
xchg
test
and
mov
loopne
cmp
xchg
jne
xchg
iret
cmp
sub
or
pop
mov
sub
out
sbb
mov
mov
jb
test
outsb
sub
rclb
hlt
adc
jge
js
cld
mov
insl
or
sbb
mov
dec
add
ret
inc
mov
stc
mov
cld
insl
xchg
icebp
adc
mov
adc
push
daa
and
pop
mov
test
pushf
dec
sbb
jne
ret
push
mov
pop
sbb
sbb
mov
scas
aad
cwtl
or
stos
and
enter
popf
xor
test
mov
dec
sbb
and
xchg
and
and
int
fs
subl
lea
in
cmp
add
lret
dec
mov
pop
es
adc
outsb
cld
sub
imulb
xor
add
pop
push
push
inc
in
notb
jg
or
mov
mov
pushf
or
mov
test
xchg
in
dec
inc
cmp
test
sarl
mov
outsl
notb
hlt
or
ret
sahf
imul
aas
mov
or
mov
dec
push
fisttpll
mov
icebp
and
xor
mov
into
xor
add
mov
jne
inc
inc
add
cmp
lds
and
add
ja
mov
inc
icebp
lds
les
lods
xchg
ja
leave
data16
lea
mov
ss
mov
jb
ret
sub
test
arpl
fcmovnbe
push
les
dec
sbb
test
dec
fwait
fs
and
test
or
and
fisubs
and
in
xor
call
ss
les
inc
pop
pop
sub
faddl
cmp
scas
scas
xlat
fdivs
sbb
inc
daa
jmp
stos
mov
lods
sbb
inc
jge
cwtl
adc
xor
sbb
insb
shl
mov
bound
add
loop
iret
mov
out
add
sub
mov
pop
or
rcll
xchg
mov
and
aad
sti
push
rol
pop
mov
jge
pushf
popf
enter
push
adc
xchg
pop
in
xor
enter
sub
mov
sbb
sysexit
dec
xchg
les
testl
insl
or
outsl
push
jmp
cmp
daa
ret
push
inc
pop
and
or
push
and
fcmovne
sbb
loopne
lock
xchg
inc
and
movsb
in
in
lds
push
popf
mov
jp
xor
mov
xor
and
sbb
loopne
clc
mov
xchg
mov
xor
mov
pop
pop
rclb
adc
sub
cmc
push
adc
dec
cmpsb
clc
mov
imul
out
xchg
lret
call
cmp
das
arpl
andl
adc
mov
leave
push
ljmp
mov
loopne
in
popa
mov
jl
adc
and
pushf
and
mov
ficompl
sub
inc
pop
roll
or
xlat
sgdtl
mov
popf
inc
or
jecxz
gs
test
pop
in
mov
mov
xchg
fdiv
orl
push
or
jg
mov
dec
test
jbe
std
loope
sbb
sbb
jg
fcomi
dec
mov
enter
repnz
loope
vmovsd
mov
pop
xor
rcll
or
and
add
orl
in
rcrl
pop
and
dec
test
ret
fsubl
cmp
xchg
fs
movsl
aad
repz
pop
jne
mov
shlb
mull
and
fistpl
sub
rclb
loop
ror
mov
pop
out
fcmovne
xor
mov
leave
adc
cmpsl
mov
inc
or
mov
push
in
xchg
xchg
xchg
std
lea
ffreep
pop
push
sbb
sarb
pop
mov
mov
ret
je
mov
rcll
pop
inc
scas
dec
popa
lcall
xchg
mov
jecxz
mov
mov
jnp
push
or
in
xchg
inc
lods
hlt
adcb
xchg
push
fildll
or
fildll
ret
mov
sbb
mov
data16
ljmp
in
js
pop
inc
sahf
add
add
inc
mov
and
bound
add
shrl
leave
or
sbb
or
dec
push
icebp
sbb
mov
add
aam
pop
xchg
aam
jno
sbb
call
add
adc
dec
imul
ljmp
and
jne
inc
in
push
js
insb
jne
das
lods
pop
negb
jg
imul
rcrl
mov
mov
pop
ret
scas
mov
and
jbe
mov
repz
or
sub
mov
pop
xchg
cmpsb
sbb
repz
enter
dec
sub
cmp
mov
ret
je
out
xchg
lahf
pop
repnz
cmp
or
dec
lods
inc
bound
mov
jge
mov
test
inc
popl
add
adc
sbb
mov
xor
jle
lea
mov
imul
mov
xchg
pop
or
adc
sti
sahf
pushf
das
mov
and
movb
pop
mov
and
push
aaa
fisttpl
jle
mov
inc
mov
push
gs
mov
stos
or
stos
insl
pop
xchg
mov
test
gs
in
andb
test
and
cmpsl
pop
add
test
lahf
pusha
pop
lcall
xchg
add
push
xor
orl
aas
nop
loopne
mov
push
incl
nop
jne
adc
cwtl
mov
mov
mov
or
sbb
stos
dec
jnp
dec
mov
cmp
jns
data16
mov
in
fists
or
aas
inc
xchg
xchg
int
adc
lahf
or
test
mov
mov
lcall
rorb
jecxz
call
loop
push
cmp
add
and
dec
bound
jno
xchg
cmpsl
rcrb
in
std
les
push
adc
or
mov
jo
push
faddl
jno
jae
aaa
lea
adc
add
out
ret
pop
push
cmp
cld
iret
push
xchg
movsl
aam
pop
xor
out
push
jle
mov
xor
or
in
xor
inc
jae
in
sbb
jns
add
xchg
inc
inc
call
mov
bound
xlat
rorb
rclb
xchg
jecxz
add
fdivrl
mov
adc
push
pushf
cltd
sbb
clc
je
push
jecxz
xchg
jnp
jae
ds
aas
add
xchg
mov
dec
xchg
mov
or
pop
loop
cmpsl
test
ret
or
mov
jp
xchg
jmp
push
ret
leave
notb
fidivrs
dec
inc
xor
jbe
jb
int3
daa
mov
sti
fmulp
fdivs
mov
scas
pop
mov
pusha
and
cmp
jge
movsb
xor
jl
add
adcb
sub
push
sub
inc
nop
int
dec
popf
loopne
movsl
inc
dec
int3
fwait
adc
movsb
adc
lcall
ret
mov
in
mov
mov
outsl
mov
ret
cmpsl
test
xchg
int3
arpl
add
lock
push
pop
push
adc
mov
xchg
push
dec
cld
int
out
add
imul
pop
inc
sahf
mov
and
insb
cmp
dec
dec
cmp
std
jns
in
pop
sbbl
lret
sub
shrl
sub
jb
iret
mov
fcmovb
popa
cltd
dec
xchg
adc
es
inc
lods
dec
pop
mov
lcall
in
fcomps
cli
clc
jns
rol
jb
and
ss
setge
ret
ret
push
es
scas
hlt
jp
out
mov
xchg
mov
gs
dec
sub
cmpsb
gs
cmc
push
or
cmc
cmpsl
test
shlb
adc
call
and
je
dec
push
sbb
or
push
xor
stc
mov
idivl
and
bound
adc
and
movsb
or
xchg
add
test
setge
push
mov
cmp
mov
or
das
out
add
adc
les
mov
adc
test
cmpsl
add
insb
jle
sub
pop
loope
fs
push
enter
jmp
push
cld
add
aad
int3
lret
xor
dec
je
jle
mov
js
sub
cmp
xchg
inc
cmpsl
push
mov
jmp
mov
shrl
lea
aam
push
hlt
fcoms
lods
jp
sub
cmpsl
out
lret
mov
push
or
push
jmp
shl
stos
push
and
inc
sub
inc
cld
lret
mov
push
repz
arpl
and
or
cli
cmp
lret
out
hlt
jge
inc
movsl
jg
nop
dec
int3
xor
jne
mov
cmp
mov
xor
sub
xchg
aam
sub
fwait
jb
adc
sub
and
popa
vmread
or
pop
pop
cltd
cltd
push
mov
shlb
push
rcrb
mov
push
ja
and
test
and
and
xchg
dec
pop
test
insb
call
add
pop
cmpsb
aas
in
xchg
cmpsb
mov
leave
mov
lcall
das
lods
rcl
iret
mov
mov
add
xchg
out
out
inc
fldenv
dec
rcrl
xor
adcb
adc
mov
dec
dec
ja
loop
mov
inc
dec
enter
sub
out
xchg
loopne,pt
test
mov
out
daa
or
xchg
jno
add
push
test
idiv
xor
insl
jecxz
je
xor
mov
ret
iret
mov
loope
jne
rorb
gs
cmpsl
repnz
pop
mov
fsubs
and
stos
xchg
mov
fsub
push
fnstcw
stc
out
push
adc
jg
push
adc
adc
out
mov
cmp
or
loopne
xor
fmul
fcomip
insl
fsubs
xor
and
daa
rolb
xorl
sbb
rolb
sub
cmp
pop
push
jmp
push
mov
out
or
icebp
pop
in
imul
push
inc
ret
adcl
lea
lcall
fidivl
fcmove
sub
or
push
or
dec
sbb
jo
or
pop
cmp
test
mov
out
xor
lds
add
dec
xchg
mov
fwait
les
lahf
jbe
mov
ret
fildll
jns
stos
divl
imul
out
hlt
in
push
adc
test
and
aad
fs
les
mov
mov
dec
push
sub
adc
outsb
scas
ret
dec
leave
lods
les
pushf
and
bound
cmp
sahf
push
cmpl
jae
in
jns
fwait
into
inc
jns
aam
das
js
ror
mov
sbb
cltd
in
fistps
loope
stos
cmp
les
or
jb
cmp
popa
es
sub
xor
cmpl
daa
lock
sub
xor
rcl
pop
test
mov
push
xor
sti
mov
mov
fnstenv
imul
cmp
pop
test
loop
shll
cmp
out
xchg
pop
lds
sbb
pop
push
out
out
or
cld
mov
in
xchg
ss
xchg
clc
pushl
insb
mov
sbb
testb
push
mulb
push
add
subb
dec
jo
adc
ficompl
push
jp
btc
fisubrl
popf
shl
mov
orl
push
cmp
jle
jbe
pop
test
xor
cmp
in
fiadds
insb
lahf
es
dec
mov
notl
pop
jp
cmpsl
push
lds
dec
add
rcrl
imul
shl
pusha
cmpsb
sbb
jle
idivl
outsb
sub
test
and
add
pop
prefetcht0
push
pusha
adcb
cmp
pop
mov
pop
mov
stos
movsb
and
orl
mov
sbb
mov
jecxz
test
adc
and
mov
mov
out
inc
jg
adc
sub
testb
lahf
xchg
jge
sbb
fdivrs
jne
jo
jmp
sub
sahf
scas
dec
cwtl
xlat
hlt
jns
stos
es
inc
test
cmp
fdivr
arpl
fstps
movsb
cmpsl
mov
fstl
mov
or
in
dec
fstl
jae
and
ljmp
sbb
dec
jnp
into
fmulp
movsb
and
add
sahf
mov
mov
sbb
mov
lret
int
test
leave
sbb
mov
int3
jb
mov
sahf
test
xchg
arpl
push
mov
mov
insl
push
cmp
call
mov
lock
mov
aam
insb
js
das
or
ret
mov
push
cmp
mov
or
out
loope
xchg
sub
sub
jl
out
adc
add
rorl
add
cmp
std
andl
sbb
jbe
inc
add
push
sub
xor
jmp
cwtl
lret
mov
lods
cmpsb
push
sahf
out
inc
orl
add
lret
add
mov
mov
lahf
sub
dec
and
je
and
lods
nop
je
sub
add
je
cmp
push
or
mov
stc
fs
test
test
out
cmp
lahf
loop
xor
lods
adc
lcall
pusha
jb
lcall
addl
psrlq
jmp
xchg
outsl
addl
inc
repz
jle
fwait
push
pop
bound
lret
mov
mov
fcompl
inc
push
aaa
jo
stos
out
inc
xchg
add
std
scas
int3
sbb
jmp
cmp
cmp
mov
inc
lahf
mov
addb
mov
sub
push
cmp
packuswb
jnp
add
popl
repnz
xchg
test
daa
pop
scas
call
movsb
or
fnstenv
cmpl
cmp
aam
out
faddl
xchg
mov
jge
dec
sub
decl
adc
loopne
insb
sti
cltd
jne
xchg
outsl
test
cmp
pop
pop
test
cmp
and
xchg
jp
mov
mov
cld
mov
cmp
jae
roll
xchg
pop
outsb
insb
push
mov
adc
outsl
subl
pop
fcmovnb
mov
push
cmc
movsb
fcmovnbe
add
repnz
ss
cmp
and
push
repnz
lock
xor
push
cmpsl
subl
cmp
fdivs
popa
fstp
xor
jge
jne
inc
lahf
fstl
mov
or
imul
xchg
fcmovnu
lea
stos
xlat
push
ds
pop
call
xor
scas
jb
imul
add
and
fisttpll
push
mov
xchg
aam
cltd
inc
into
add
jl
scas
mov
xlat
in
sub
leave
imul
shlb
sbb
xchg
les
sbb
and
loop
fcoms
adc
adc
push
lds
pop
loope
and
push
and
sbb
jno
enter
sbb
mov
insl
and
push
sub
add
add
test
jl
outsl
aaa
pop
sarl
pushf
or
xchg
out
inc
clc
jmp
rcr
dec
pop
mov
dec
cmp
fisttps
sub
xor
dec
cmp
faddl
dec
xabort
add
popf
cli
push
test
loop
ds
jmp
iret
pop
aas
icebp
je
dec
outsl
or
aad
aad
in
hlt
jo
sbb
push
hlt
push
fwait
loopne
fdivs
inc
aaa
mov
mov
test
iret
lret
addr16
add
pop
cli
int3
adc
mov
dec
bound
fdiv
dec
call
mov
jns
ds
adc
mov
xor
lcall
fucomi
out
inc
test
xor
cs
loope
push
imul
pop
add
and
xorl
push
push
sbb
sub
jp
sub
int3
jne
cmc
inc
int
mov
sub
pop
imul
mov
fcompl
sub
lock
mov
xchg
mul
pushf
mov
stos
inc
sahf
aad
hlt
xchg
scas
push
fdivrp
mov
mov
push
js
inc
fs
mov
sbbl
dec
cmp
and
sub
or
movsl
lahf
idivl
xor
loopne
xor
mov
icebp
adc
mov
cmp
and
push
jno
repz
movsl
pusha
jle
cmp
aad
stos
inc
out
adc
inc
jl
lret
jb
dec
insb
mov
mov
xor
fdivl
jmp
sub
mov
mov
mov
cmc
out
shrl
cmpsl
addr16
push
call
ffreep
stc
inc
in
sbb
mov
push
dec
cmpsb
in
fcmovnb
sbb
push
pop
pop
cmp
pop
jg
imul
cltd
mov
outsb
dec
dec
aas
repnz
adc
xlat
add
cmp
mov
data16
outsl
add
fsubrs
aad
cmp
out
jmp
mulb
dec
push
ja
jo
push
mov
jp
cmp
lods
stc
push
cld
pop
mov
xor
xor
test
daa
push
mov
test
adc
jmp
orl
add
mov
outsl
mov
push
push
mov
push
notb
mov
addr16
add
dec
jne
sub
fsubs
js
iret
or
cmpsl
je
leave
sub
into
adc
mov
xor
lods
inc
sub
ret
pop
sbb
mov
push
xchg
mov
pop
insl
pop
or
into
jmp
xchg
lock
jne
mov
das
adc
xor
push
mov
xchg
dec
cld
lcall
add
dec
xlat
mov
and
outsb
stc
negl
adcl
sbb
ret
mov
dec
inc
adc
stos
imul
les
movsl
sub
pop
push
daa
fisubl
push
adc
and
mov
mov
leave
rcrb
adc
add
clc
fbld
mov
sbb
pop
or
sub
and
call
sub
jecxz
dec
rcll
push
sub
mov
cmc
jl
popf
or
int
cmp
daa
lahf
pushf
dec
xor
shll
scas
mov
mov
mov
inc
stos
inc
stc
test
add
mov
xchg
repz
int3
ret
sbb
cmpsb
inc
ss
cli
xor
cmc
push
mov
mov
test
repnz
pop
es
jae
int3
test
leave
stos
mov
call
iret
mov
enter
movzbl
int3
inc
dec
outsb
imul
pop
pushf
orb
dec
test
out
lahf
and
rcrl
cmpsl
lret
dec
rorl
xor
add
jae
mov
pushf
pop
into
jb
mov
sbb
stos
nop
push
inc
mov
and
mov
cwtl
inc
cmpsl
test
lret
jnp
or
ret
repz
ja
nop
jnp
mov
inc
xchg
imul
inc
inc
mov
sbb
andl
mov
push
or
mov
into
sub
icebp
lcall
rorb
jl
aaa
mov
mov
pop
bound
inc
incl
sbb
xchg
jecxz
movsl
pop
push
jno
jecxz
fcompl
das
jnp
adcb
dec
xchg
fwait
pop
mov
mov
push
icebp
popf
push
cmp
ja
sub
jp
mov
lods
in
in
out
cld
push
mov
adc
lret
jecxz
ljmp
xor
xchg
cmc
push
mov
jbe
imul
mov
mov
pop
sub
and
xchg
xor
jl
sbb
call
cmp
jg
movsl
jae
jbe
je
xchg
fwait
roll
add
xor
prefetch
aam
push
sub
ret
andl
jne
mov
push
mov
mov
div
dec
push
xor
outsl
xchg
fwait
shlb
out
mov
jne
mov
or
pop
roll
stos
leave
mov
out
fsubl
mov
adc
add
jl
psubusw
mov
addl
mov
data16
jbe
xor
pop
sub
add
xchg
lods
cs
add
cmpb
inc
xor
test
ljmp
outsb
push
push
adc
in
fwait
add
push
mov
xchg
aas
stc
xchg
mov
xor
sub
stc
fldenv
mov
mov
pop
push
aaa
repz
xor
sahf
push
test
and
bnd
scas
and
inc
cmp
mov
inc
aam
jns
rolb
sub
ja
push
subl
jns
out
jae
xchg
dec
mov
jmp
adc
pop
enter
enter
jle
push
pushf
ds
stos
adc
test
jae
movl
xor
js
push
sbb
pop
mov
add
mov
stos
push
jle
adc
xlat
ja
in
jecxz
hlt
push
aaa
aas
insb
lds
dec
dec
popf
jmp
push
mov
pop
in
jle
sarb
mov
ret
mov
and
mov
mov
lret
cwtl
movsb
sub
jne
rorl
or
jnp
popf
loope
adc
out
and
xor
loop
mov
in
or
or
inc
mov
mov
call
adc
push
movsl
push
clc
js
mov
rclb
xchg
xor
ljmp
pop
adc
xchg
jnp
std
out
cli
fcomp
mov
out
jo
das
scas
mov
imul
fldcw
out
dec
lret
and
mov
mov
arpl
into
pop
aas
aam
sub
cs
hlt
xchg
jae
sahf
cld
dec
faddp
insl
mov
cltd
fcompl
mov
mov
andb
xor
std
adc
mov
adc
enter
cli
sub
inc
or
gs
cmp
pop
push
xor
into
shlb
jp
repz
xor
mov
mov
cmovb
add
pushf
or
cmpsl
cwtl
xchg
repnz
add
pop
repnz
pushf
cmpsb
pop
arpl
sub
dec
xchg
js
jbe
jl
orl
inc
cmp
push
in
shr
lods
aas
xchg
xor
shl
push
cltd
pop
adc
mov
movsl
arpl
inc
je
dec
fdivrl
imul
jmp
cmpsl
sub
jg
pop
and
scas
nop
fwait
fs
scas
je
in
leave
xchg
sbb
add
push
pop
sbb
sahf
mov
sbb
mov
or
push
insb
into
jo
aad
scas
int
repz
jnp
je
rorb
sbb
push
adc
pop
ret
mov
xor
adc
call
cltd
add
mov
add
inc
movsl
cs
mov
arpl
in
clc
clc
sbb
jnp
repnz
fildll
jb
mov
lods
mov
ss
imul
test
push
aad
add
push
gs
rclb
repz
cltd
and
outsb
aam
leave
or
mov
pop
or
xor
icebp
out
loopne
in
cld
or
and
inc
add
fiaddl
adc
jbe
scas
fnsave
cltd
xchg
loopne
fcmovnb
adc
mov
mov
out
ret
clc
lds
aad
fisubs
dec
push
ss
xchg
xor
idivb
pop
cmp
inc
pop
sbb
pusha
add
sbb
dec
push
mov
pop
sbb
xchg
aad
cmp
ljmp
xchg
or
mov
sub
sbb
add
push
pop
or
adc
fists
pop
mov
dec
sub
scas
aas
sbb
dec
push
jg
inc
jns
ret
sbb
negl
mov
pop
xchg
push
aas
inc
subb
cmp
mov
mov
shrb
loopne
scas
xchg
out
test
lret
adc
xchg
mov
fsubl
mov
or
incb
rcl
sub
xor
adc
push
pop
pusha
rcrb
dec
lods
ljmp
sub
gs
ret
loopne
loope
or
test
inc
pop
and
xor
mov
cmp
push
xchg
movl
pop
inc
and
btc
inc
mov
jmp
pop
push
push
push
fcompl
std
cmpsl
test
push
xchg
mov
lds
movsb
adc
pop
mov
subl
or
ret
pop
xchg
out
xor
jbe
mov
sbb
cmpsb
aam
addl
mov
xor
cmpb
clc
or
cmp
xchg
dec
popa
outsb
push
dec
gs
pop
xchg
negb
mov
test
push
test
imul
sbb
shlb
ljmp
std
jge
pop
xchg
inc
js
xor
cmpsb
or
pop
andb
mov
pop
data16
jb
lret
cld
xor
jno
push
ds
mov
lcall
repz
mov
inc
jl
jge
pop
mov
mov
call
imul
jae
sbb
mov
add
sub
insl
xor
es
lcall
push
in
push
addr16
movsb
sbb
xor
cmp
ret
ja
cmp
addb
inc
cmp
mov
subb
testl
stos
mov
add
andps
loope
std
fs
inc
inc
imul
js
xchg
out
add
xchg
pop
jns
aad
fmull
cmp
inc
mov
and
dec
dec
out
fisubrs
mov
ja
insl
sbb
and
shr
gs
out
aad
test
jge
push
jae
sub
pop
jge
notb
gs
fwait
xor
mov
dec
xchg
faddp
cmp
lock
lahf
jmp
mulb
std
jmp
cmp
xlat
xchg
out
cmp
sub
out
leave
cwtl
inc
mov
pop
daa
dec
mov
mov
inc
sti
ret
sar
xchg
and
cmpl
jne
gs
xchg
add
dec
outsl
aas
dec
xchg
sub
in
jle
hlt
cmpsb
adc
ret
add
mov
loopne
insl
sti
stos
mov
mov
jmp
jg
xchg
shrw
dec
xchg
jae
or
out
push
jg
movsl
bound
lcall
aad
or
pop
or
bound
adc
roll
and
loop
into
imul
pop
sbb
in
shrb
adc
push
and
inc
xchg
xchg
sbb
out
jbe
sub
jne
xchg
out
or
push
pop
jbe
mov
push
and
sub
pause
sub
popa
push
inc
dec
mov
xchg
push
mov
sub
cmp
jmp
in
loope
inc
mov
push
bound
or
or
sub
sub
std
push
ret
mov
cmp
ljmp
es
das
xor
inc
push
or
js
xor
js
dec
mov
xor
mov
inc
jmp
stos
xor
sub
xchg
fiadds
sub
js
into
jmp
xchg
or
cs
or
push
xchg
xchg
cmp
add
out
ds
xor
or
adc
add
out
adcb
cmp
ror
adc
loopne
lea
xchg
cltd
mov
mov
adc
rclb
xlat
mov
fucomi
ljmp
out
adc
adc
cmp
icebp
mov
mov
test
pinsrw
out
rcll
or
ds
enter
repnz
dec
insb
out
test
daa
push
push
stos
push
xchg
adc
cmp
inc
sbb
sbb
push
inc
data16
ja
xor
mov
pop
mov
nop
out
pop
sub
pop
pop
xlat
mov
ss
or
int3
cld
fimull
cli
mov
imull
push
leave
pop
clc
pushf
stos
das
ja
stos
mov
test
out
mov
jbe
mov
mov
push
or
rcrb
xor
out
push
add
adc
cmp
int
arpl
mov
js
xchg
imul
rolb
mov
inc
scas
enter
jl
xor
inc
or
sub
mov
insb
aaa
aas
lods
cmp
shlb
fsub
fwait
aam
aaa
pop
fs
loopne
sbb
cmp
in
sbb
xchg
and
mov
imul
and
popf
dec
in
out
xchg
fcom
adc
jb
movsb
decl
xor
add
dec
cld
lods
pop
inc
faddl
ljmp
push
mov
jne
insl
stc
andb
lret
mov
push
dec
shr
lods
or
xchg
or
xchg
ljmp
cmpsl
stc
xchg
aam
fsubl
insb
pop
cmpsl
sbb
dec
xor
iret
push
mov
addr16
mov
jns
add
mov
gs
xchg
in
xorb
jle
outsl
adc
xor
push
mov
andb
sbb
pop
imulb
dec
outsb
lods
push
add
cmp
mov
pop
scas
int
mov
mov
jle
sbb
adc
addr16
scas
iret
rol
and
or
es
mov
cmc
iret
push
pop
jp
stos
sahf
cmp
sbb
mov
cld
xlat
cmp
push
cmp
faddl
xor
in
movsl
negl
add
nopl
fs
jb
and
test
lods
arpl
cltd
sbb
and
inc
cli
jne
loope
fwait
mov
jbe
pop
dec
add
sbb
push
mov
ss
or
push
cmp
outsb
jns
inc
jg
dec
outsw
cmp
pop
inc
sub
adc
cs
push
adc
dec
hlt
or
push
lcall
das
jno
sub
jns
lret
sbb
push
mov
pop
jbe
dec
addl
mov
jle
repnz
imul
test
sti
xchg
mov
std
nop
xchg
pop
push
xchg
add
and
jb
or
addr16
sub
jno
cli
mov
pop
cwtl
pusha
dec
pop
mov
test
stos
add
mov
cmp
gs
ljmp
clc
lcall
cmp
scas
shrl
inc
add
popa
outsl
mov
mov
test
pop
add
pshufw
sub
mov
cmc
lahf
cltd
pop
lods
lods
std
cmc
pop
pusha
jge
jp
jg
jbe
adc
shr
ljmp
test
int3
outsb
dec
test
repnz
fcoms
mov
lock
jb
cli
xchg
xchg
hlt
add
mov
subl
enter
int
out
mov
stc
sub
xchg
sbb
cmpsl
add
gs
adcl
icebp
out
stos
push
daa
jg
scas
sub
gs
or
xchg
xor
jmp
mov
test
xchg
xor
pop
sbb
lahf
dec
movsl
mov
dec
add
clc
push
pusha
xchg
xor
ret
mov
pushf
enter
sub
fisubrl
cltd
mov
mov
stos
xlat
test
adc
add
inc
lock
ss
lods
mov
mov
pop
mov
pop
or
xor
dec
mov
push
arpl
sahf
mov
test
add
aas
mov
inc
fdivrl
mov
xor
or
xor
nop
push
rcl
push
loope
mov
or
sarl
or
or
pop
sub
and
lret
mov
and
add
stc
lahf
fsub
adc
in
rolb
jb
dec
add
cmp
jae
ja
in
mov
push
rcl
or
pop
xchg
lcall
jo
and
mov
cmp
idiv
ds
mull
mov
push
xor
xchg
stc
fincstp
mov
pop
in
iret
ja
in
xchg
js
outsb
iret
xorl
mov
idiv
pop
out
in
movsb
cmp
mov
mov
mov
mov
dec
movsb
fistl
lods
sbb
mov
shlb
fistps
cmp
mov
sbb
push
xor
add
sbb
loopne
dec
outsb
enter
jge
out
ds
adc
push
and
cmp
sbb
rorb
inc
or
loopne
cmp
call
inc
lcall
xlat
add
jo
xchg
fidivrl
dec
xchg
pop
xor
addr16
in
shlb
jl
fildl
cmp
movd
loope
repnz
test
inc
pusha
xor
inc
fstpl
sahf
mov
adc
xchg
lods
test
fldcw
subb
inc
shlb
out
pushf
cmc
je
mov
test
dec
or
lea
mov
pushf
inc
push
push
mov
lret
stc
dec
xor
push
mov
xorps
xor
lods
push
or
out
mov
mov
and
inc
movl
enter
mov
mov
ds
cmc
dec
ret
test
push
xlat
sti
popl
xchg
clc
mov
push
push
mov
test
xchg
scas
lods
jnp
sub
std
arpl
cmp
out
xchg
mov
adc
cmp
mov
test
and
jae
dec
leave
mov
pop
push
dec
test
sub
sti
ror
jge
or
push
popf
shll
or
sarb
sahf
pop
jb
int
ss
mov
mov
popa
call
test
scas
out
sbb
fcomp
dec
movsb
clc
mov
dec
loop
movsl
adc
adc
in
enter
or
ja
fcompl
xchg
cmp
push
dec
ret
mov
out
fbstp
xor
fmull
shrl
jb
int
push
add
int3
sbb
lds
xor
js
clc
shrb
add
mov
jl
call
jecxz
int3
imul
imul
movsb
test
jo
fisubl
xchg
test
imul
test
out
fbstp
pop
mov
pop
repz
inc
fistl
push
imull
cli
sbb
addb
xchg
dec
daa
addr16
cs
adc
sub
mov
aam
sbb
adc
or
xchg
push
pusha
mov
ret
cs
or
sub
xchg
dec
hlt
cs
cmp
std
inc
ss
mov
pop
cmpsb
ja
inc
inc
xchg
stos
sub
add
sar
test
adc
jmp
jo
or
xchg
cli
rolb
rol
dec
loopne
jle
mov
cmpsb
mov
cmp
pushf
sti
movsl
hlt
scas
sbb
xchg
inc
in
push
xchg
ss
push
sar
adc
mov
inc
cli
frstor
sub
cmp
mov
daa
leave
mov
repnz
outsb
loope
pop
xorl
jo
aas
pop
fildll
adcl
jl
inc
ficoms
pop
push
jne
mov
scas
mov
cmpsl
inc
add
xor
add
mov
dec
inc
js
pusha
adc
jmp
push
rcll
pop
ficoms
ja
sbb
xchg
cmp
and
sbb
or
mov
lret
xchg
add
fnsave
jp
fsubrp
xor
sahf
sub
cmpb
fsts
jae
pushf
pop
cs
int3
or
mov
push
lea
push
cmp
call
or
sbb
and
mov
movsl
dec
cmp
leave
test
out
mov
in
es
repz
mov
mull
inc
in
out
ret
xor
mov
ja
movsl
pop
cmp
mov
sub
adc
movl
jecxz
or
mov
fs
mov
bound
xchg
je
jae
or
and
inc
jecxz
lcall
fsubl
push
popa
fidivs
pop
in
mov
test
dec
push
decb
pop
inc
pop
push
jle
xor
fisubrl
orl
test
or
jecxz
adc
bnd
ret
jb
clc
inc
jnp
lret
or
xchg
adc
add
mov
xchg
mov
ljmp
stos
mov
xor
out
bound
mov
jne
and
dec
adc
insb
sub
xlat
imul
fcompl
movsb
fnstsw
mov
cmp
rorl
dec
data16
pop
xchg
xor
add
and
sbb
xchg
mov
jle
and
xchg
xor
jmp
dec
mov
and
adc
pop
and
pusha
out
push
repz
stc
and
ljmp
jp
push
jns
lds
incl
xchg
lahf
cwtl
add
mov
int
mov
xor
pop
and
fnsave
ret
inc
or
xchg
cmp
int3
push
lahf
lods
cli
in
sub
cs
or
leave
in
leave
inc
les
mov
pop
add
sbb
mov
mov
xor
sbb
aam
adc
subb
out
xor
jge
cmp
mov
or
ljmp
sbb
dec
ret
scas
insl
nop
xor
test
push
bound
push
sub
clc
and
inc
mov
imul
nop
subl
inc
dec
xchg
inc
sub
mov
int3
fisubrs
mov
fucomp
dec
cmpsl
sti
ret
pop
lods
adc
sbb
mov
dec
ja
cmp
xchg
or
loop
cltd
mov
cmp
jne
inc
jo
gs
xchg
adc
inc
adc
stos
loope
mov
mov
pop
shl
enter
lret
sub
fdiv
popa
iret
dec
fsts
cmp
cmp
fidivrl
pop
pop
sub
stos
lock
lret
dec
nop
dec
push
mov
clc
push
mov
ret
sub
aam
pop
dec
std
leave
mov
push
sbbl
mov
mov
xchg
adc
jmp
divps
pop
cmpb
sub
imul
jmp
mov
ret
aaa
ja
mov
out
hlt
mov
sahf
cmp
add
in
push
push
div
xchg
add
sbb
and
push
stc
out
repnz
xchg
xor
shrl
shll
stos
sub
inc
push
and
sbb
jns
int3
subb
and
push
cmp
dec
mov
push
inc
aad
cmpsl
jl
addr16
popa
sahf
add
xchg
jne
pop
ja
out
mul
movsb
push
jmp
aam
mov
xor
fwait
stos
sarl
loope
and
dec
mov
fsubr
lcall
mov
sub
push
mov
dec
mov
xchg
adc
test
pusha
xor
push
test
xor
fs
inc
shl
sti
cmpl
lods
pop
push
cmc
lea
adc
ret
fisttpll
cmc
sub
shrb
sub
popf
in
adc
adc
popa
xchg
pop
adc
xlat
inc
inc
sub
push
inc
mov
loopne
scas
mov
aas
aas
xchg
mov
test
and
cmp
mov
mov
pop
mov
or
fld
int
mov
enter
std
hlt
add
jo
sbb
pop
ds
outsl
and
add
xchg
push
lods
or
pop
jle
pop
mov
iret
mov
xor
dec
adc
cmp
mov
mov
sahf
addr16
rol
push
sarl
push
in
jl
adc
push
leave
push
outsl
out
adc
and
dec
xchg
add
js
in
mov
and
jne
test
mov
xor
mov
pop
out
loop
fimuls
push
push
out
cmp
xchg
mov
inc
jmp
and
outsb
insb
pop
int3
xchg
ljmp
ds
dec
adc
fdivr
std
xchg
enter
int
je
xorl
pusha
inc
loopne
ds
and
cmc
sbb
lods
mov
xchg
dec
or
inc
or
lock
jae
nop
and
mov
das
jp
dec
adc
sub
ljmp
ja
test
sub
lds
or
mov
xchg
ljmp
aam
enter
orl
mov
fabs
push
sahf
dec
xchg
mov
inc
pop
pusha
or
lds
push
mov
push
in
insb
sarb
xchg
jp
fnsave
mov
lock
in
in
mov
mov
call
ja
bound
jns
and
popa
adc
or
add
enter
dec
mov
mov
mov
aam
lea
add
dec
xor
push
xor
cltd
and
xlat
and
fwait
jg
jge
inc
sti
add
ljmp
je
cmp
xor
pop
push
lods
xchg
sub
out
or
and
add
leave
pop
sbb
sub
pop
aaa
lcall
rorl
std
pop
sub
lcall
dec
bound
dec
icebp
aaa
rcrb
pop
lods
fidivrs
mov
loopne
inc
cmpsl
iret
insl
jmp
jnp
jae
test
lret
jmp
pusha
add
lock
mov
scas
adc
clc
repnz
push
imulb
sbb
outsl
fmull
pop
aad
pop
mov
pop
sub
push
xor
stc
nop
stc
icebp
xchg
adc
add
loope
push
lds
push
xlat
ja
es
push
and
int
xchg
xchg
icebp
lock
cmpsb
and
cmp
and
mov
add
xchg
push
jnp
mov
dec
adc
lds
call
add
test
jp
mov
mov
adc
stos
xorb
rorb
icebp
arpl
sbb
adc
aam
jmp
xchg
faddp
add
fildl
addr16
mov
and
movsl
adcb
mov
xor
sahf
sbb
pusha
cmpsl
daa
pmovmskb
lea
mov
aaa
loopne
mov
pop
imul
outsl
push
mov
mov
popa
cmc
subb
dec
clc
sub
push
test
mov
loope
pop
bound
xor
sarb
gs
mov
or
scas
inc
xlat
and
cmp
cmpsl
inc
pop
popf
fidivrl
imul
adc
aaa
xchg
addr16
jge
fisubl
andl
scas
mov
sbb
imul
adc
xchg
test
sbb
xchg
in
jno
mov
mov
jno
sub
inc
jmp
popf
dec
xchg
add
sub
cwtl
push
rorl
or
sub
test
std
idivl
xor
dec
dec
push
ret
mov
push
shlb
into
jbe
xlat
fnstenv
add
loopne
and
daa
and
jecxz
fs
add
cltd
in
or
pop
movsl
xchg
dec
mov
aas
mov
addr16
testb
xchg
push
popf
rclb
gs
arpl
push
inc
fmuls
or
fiaddl
sbbl
push
jb
inc
and
mov
inc
xchg
cltd
push
insl
mov
jp
and
pop
daa
jecxz
or
sti
jl
fidivs
int3
je
gs
xchg
pop
lret
pop
fbld
or
push
das
movsl
sbb
mov
adc
ss
aaa
xor
jmp
arpl
xchg
adc
or
sub
repz
call
inc
add
ja
addr16
xchg
pop
test
push
mov
out
lds
jmp
add
loopne
insl
jmp
jne
xchg
mov
imul
rolb
in
xor
out
mov
adc
imul
jne
cmp
pop
cmp
test
loopne
scas
jnp
pop
pop
push
sbb
repz
cmpsl
xchg
push
xchg
dec
dec
push
lret
jb
push
xchg
jle
mov
jo
data16
loopne
lret
push
adc
fcmovne
mov
mov
push
sbb
dec
in
popf
das
or
add
xor
push
push
push
xchg
pop
clc
fiaddl
adc
sub
outsb
or
push
dec
lock
jge
insb
push
ffreep
rol
mov
movsl
pop
pop
dec
add
mov
subb
xchg
fcomip
pop
cli
mov
jb
mov
push
mov
in
sbb
les
cmp
loope
aas
push
sbb
leave
pop
mov
and
mov
mov
ja,pn
push
sbb
je
sub
fxch
xor
sub
jle
negl
push
call
xchg
testl
xor
enter
dec
sub
push
pop
into
in
mov
mov
xorb
and
jmp
movb
cmc
add
cld
pop
sarb
js
pop
sbb
in
dec
fistpl
repnz
mov
fwait
jne
mov
cld
push
jmp
rorb
pop
jno
int3
jae
dec
mov
sub
ds
add
sbb
inc
push
dec
mov
mov
std
pop
movsl
add
daa
icebp
inc
cmpsb
ja
adc
js
sub
sbb
pop
lods
in
repnz
loop
sbb
inc
mov
scas
aas
imul
adc
lahf
or
rcrb
ret
in
outsl
imul
pop
adc
and
xchg
xor
cmp
sub
ret
leave
mov
or
loopne
mov
in
mov
push
iret
mov
adc
pop
push
scas
call
push
or
ret
xor
out
int3
push
cmpsb
pop
jecxz
jns
je
xorl
mov
xchg
sbb
repnz
xlat
xchg
sbb
lcall
and
xor
lret
sarb
scas
les
cmp
mov
fstpl
mov
push
lods
faddl
add
push
cmp
jne
adc
dec
push
add
es
movsb
fnstcw
mov
shll
xchg
mov
adc
in
mov
clc
add
std
lret
jg
cmp
and
mov
das
pop
inc
scas
and
int
filds
dec
ficompl
pop
mov
and
pop
mov
stos
inc
fsubp
ja
mul
pop
adc
mov
push
jecxz
es
in
add
sbb
xor
add
out
aam
cmp
cmp
and
inc
jmp
ss
ss
cmp
mov
add
cmpsb
xchg
out
dec
mov
call
jp
add
dec
dec
mov
addr16
sub
shlb
dec
iret
rcr
repz
jno
jnp
mov
addb
push
xor
dec
push
jbe
jns
cli
dec
inc
mov
jmp
lret
js
mov
cmp
cmpsl
add
push
mov
sti
pushf
mov
xor
or
push
dec
lea
add
cmpsl
cmp
xchg
mov
lods
hlt
loop
and
out
repz
add
xchg
sbbb
nop
inc
jge
cmp
ret
mov
in
fisubrs
push
and
je
std
jecxz
push
jns
mov
adc
xor
xchg
rcl
add
mov
insb
pop
jle
in
loope
xchg
cli
loope
pushl
jae
lret
lea
add
mov
das
andb
fyl2x
dec
rclb
aam
pop
mov
cmp
call
ret
dec
loop
push
jg
cmp
repz
inc
sbb
leave
sbb
add
xor
push
rcll
push
sub
sbb
repz
cmpsl
pop
add
pop
rclb
push
fstps
mov
mov
mov
clc
aam
dec
xchg
js
ds
sti
mov
add
cmp
jbe
lret
pop
and
mov
mov
loope
lods
into
das
sti
aaa
pushf
mov
lock
cmp
jo
sbb
lds
cmp
mov
rcl
inc
outsl
or
popf
mov
jbe
les
icebp
push
pop
push
flds
pop
int3
mov
cltd
jecxz
ss
and
loopne
mov
fldenv
xchg
xor
cld
pop
rorl
and
dec
mov
and
leave
mov
roll
push
orb
xor
push
jp
sub
enter
aam
mov
int3
dec
out
fldcw
addb
shll
cmp
jno
pop
aad
pop
xlat
push
sahf
push
sahf
dec
insl
or
enter
jle
sbb
jne
pop
lods
std
adc
outsl
jns
mov
nop
adc
movsb
xchg
jge
jge
popa
clc
jge
dec
jno
cmp
push
daa
cmpsb
lods
xor
xchg
pop
pop
sarb
pop
dec
jecxz
push
and
mov
leave
aam
mov
movsl
and
cmp
cli
and
dec
test
cmp
or
cmp
fldt
mov
jns
out
inc
push
jne
jae
cmp
mov
dec
sub
mov
push
into
sbb
enter
add
mov
mov
out
and
adc
cmp
std
mov
xchg
test
inc
cli
lock
jns
lods
sub
adc
mov
dec
and
insb
pushl
and
adc
loope
jle
push
jb
idivl
add
ret
mull
jns
test
insl
lods
adc
out
push
jmp
cltd
int
dec
leave
adc
push
movsb
idivl
push
xchg
sti
sbb
jge
push
das
lods
and
pushf
cmpl
fists
push
xor
fsts
in
gs
fcmovbe
cwtl
xchg
lock
fldenv
imul
jbe
or
mov
sub
out
mov
das
xchg
pop
pop
out
adc
inc
dec
sub
mov
fcom
mov
xor
pushf
adc
push
pop
add
add
cwtl
inc
pusha
ret
dec
std
cmpsl
push
jge
mov
dec
leave
div
jbe
fdivl
or
lret
jae
gs
mov
adc
movsb
dec
cmp
mov
aaa
pop
hlt
mov
je
aas
cmp
shlb
mov
or
or
shlb
sbb
jns
dec
scas
std
sarb
xchg
shld
and
dec
insb
shr
lds
fsubl
sbb
xor
rcrl
jg
cli
aam
ljmp
xchg
xchg
jg
jp
push
pushl
sub
arpl
shlb
xchg
and
pushf
push
adc
jecxz
loop
and
insl
mov
add
int
jmp
jl
xlat
ret
sub
jnp
xor
lcall
jl
lods
fsubl
test
xor
and
or
xor
aad
xor
inc
sub
mov
loopne
dec
in
pop
cltd
xchg
push
sbb
fldcw
pusha
adc
push
xchg
jecxz
stos
mov
in
push
enter
mov
cwtl
testl
pop
mov
or
lret
mov
jg
xor
lock
adc
repnz
sti
and
add
nop
scas
aam
outsl
cmp
out
xor
jle
cmp
add
jbe
push
ret
imul
sub
adc
rorl
das
popa
xchg
jmp
dec
stos
mov
jnp
cmpsb
cmc
shlb
ljmp
adc
push
jae
adc
cmp
nop
pop
std
xchg
mov
adc
push
adc
mov
adc
xor
push
jmp
xor
ficoml
divl
lret
lret
add
pop
aas
jno
xor
mov
sbb
add
sbb
int
lock
sahf
stos
and
add
stos
jp
mov
xor
gs
xchg
decl
add
ficompl
xchg
pop
ja
jno
loope
nop
dec
jle
xor
sbb
pop
dec
lcall
ret
testb
out
icebp
sbb
int3
adc
repz
lcall
add
nop
push
aas
aaa
cmpsb
sub
flds
icebp
int3
cmp
and
stos
es
arpl
std
mov
dec
sbb
jns
mov
in
outsl
add
xor
and
jg
mov
sub
add
jle
xchg
xchg
sti
and
sbb
div
ret
shrl
out
dec
push
cli
push
mov
inc
fcmovnu
xor
cmp
js
cmp
xabort
inc
rcll
xchg
jns
mov
in
xor
mov
cmc
mov
adc
adc
adc
bound
sarl
js
push
cmp
in
lahf
repnz
stos
or
inc
pusha
xchg
stos
dec
fninit
test
stos
xor
inc
sub
xchg
push
mov
mov
mov
repz
cmp
or
pop
add
in
leave
fst
cmp
in
push
cwtl
jae
daa
mov
cmpsb
mov
jmp
sbb
int3
lret
xor
add
call
negl
stos
mov
xor
mov
sub
cltd
icebp
lret
icebp
das
cmp
rcrl
leave
lcall
arpl
das
cli
dec
jbe
mov
test
sti
iret
mov
adc
sbb
mov
push
outsl
mov
sbb
add
pop
clc
or
imul
imul
sub
movsl
outsb
xchg
fisubrs
and
aam
dec
cmp
or
adc
push
lcall
call
imul
cli
push
dec
out
ljmp
lock
mov
enter
push
push
into
adc
sub
insl
dec
adc
jp
mov
xor
sbb
jne
divb
jbe
inc
in
dec
mov
dec
push
in
push
mov
shrl
cmp
mov
inc
in
jo
jmp
or
cmp
stos
cmp
mov
test
sbb
sti
pop
outsl
je
daa
cs
xchg
stos
popa
push
sub
sub
dec
stos
and
sbb
nop
jo
jo
lea
sbb
movsb
inc
xor
into
mov
ret
out
ja
loope
int
sti
mov
sub
es
int3
and
mov
cwtl
cmp
mov
int
add
jp
aad
sub
fnstcw
stos
dec
into
das
jnp
push
je
notrack
imul
stos
je
das
mov
testb
mov
xchg
or
aam
mov
cmp
mov
fstpl
mov
imull
lret
push
cld
pop
mov
sbb
mov
fwait
stc
pop
lock
jle
insb
push
ret
fcoml
adc
mov
dec
cmpsl
dec
adc
add
mov
xchg
lds
jae
iret
push
scas
xor
adc
shll
stos
push
iret
jge
inc
rcrl
add
sarl
xor
inc
out
jmp
mov
sub
xchg
das
arpl
dec
test
lea
stos
fisubl
jecxz
lahf
je
mov
fiaddl
pop
shlb
lcall
pop
sti
call
cs
mov
enter
jge
inc
cli
flds
push
sub
les
mov
sti
mull
mov
mov
xor
lret
icebp
sub
xor
pop
push
jmp
lods
mov
in
xchg
mov
notb
pop
and
leave
mov
pop
imul
in
add
inc
push
jg
int3
movsb
mov
jbe
shlb
push
repz
mov
add
cwtl
pop
sbb
xor
mov
popa
mov
call
hlt
pop
sub
xor
cmp
xchg
or
push
dec
jno
push
clc
dec
and
push
pop
fcom
fwait
adc
xor
inc
dec
test
sbb
xor
fcmovu
mov
or
lea
loop
jae
insl
outsl
sti
pop
inc
sbb
popf
xor
adc
bound
aam
mov
insl
inc
sbb
repnz
pop
ss
nop
jmp
add
or
xchg
dec
mov
jecxz
stc
daa
xor
test
shlb
xchg
hlt
outsl
aaa
pop
mov
scas
sbb
aad
dec
movsb
jb
outsb
and
mov
mov
mov
adc
aad
add
mov
xor
loopne
push
hlt
mov
xor
movsb
xchg
mov
jmp
inc
sbb
pop
jnp
loope
mov
cmovo
jne
in
xlat
lods
ret
dec
lret
in
add
jnp
inc
cli
adc
out
sbb
test
rcll
ljmp
xchg
enter
inc
hlt
aad
test
lock
das
nop
sbb
ret
and
adc
mov
cmp
leave
add
add
mov
xchg
fisttps
ja
lock
dec
pop
jae
aam
addr16
ss
cmpsb
sub
bound
cmc
pop
cld
sbb
jnp
mov
inc
mov
inc
push
fwait
pop
mov
fstl
inc
lods
in
and
movsl
hlt
inc
aam
imul
push
lcall
data16
in
cmpb
pop
insl
std
je
jne
movsl
nop
sub
xorb
int3
ret
fwait
adc
roll
push
dec
arpl
sub
inc
inc
shlb
push
push
test
insb
ret
lcall
inc
mov
hlt
popa
add
shlb
sahf
mov
rclb
cli
in
sub
lret
ret
xchg
add
cmc
out
cmp
or
mov
jno
enter
fiaddl
mov
fxch
aad
outsb
out
mov
push
add
lods
ret
ja
pop
lods
xchg
bound
test
jns
xor
mov
jge
outsb
in
add
xchg
popa
nop
add
insb
or
inc
insb
or
in
aam
subb
jae
sbb
and
sub
mov
ret
cwtl
or
or
mov
xor
scas
mov
dec
adc
dec
mov
push
das
sbb
cmp
inc
sbb
inc
jb
mov
mov
rcll
in
add
pop
xchg
inc
jne
pop
aaa
rol
mov
std
andl
testl
xchg
lret
lds
jecxz
inc
dec
nop
xchg
popf
fisubrl
in
sub
adc
mov
mov
cmp
pop
mov
push
fisttpll
inc
mov
es
adc
or
mov
repz
dec
inc
cld
ss
lahf
sub
xlat
sbb
cmp
in
movsl
dec
je
aam
jle
mov
js
mov
data16
sub
mov
mov
add
test
mov
lds
mov
rcll
mul
divl
cmp
push
xchg
dec
aam
stos
sbb
stos
sbb
push
inc
adc
jg
push
push
sub
jno
push
bound
rolb
ret
mov
pusha
push
ficoms
pop
jmp
stos
incl
clc
sti
xor
cld
pop
or
or
ds
shrb
mov
add
xor
cmp
test
push
mov
cmp
addr16
dec
push
add
test
ja
mov
andl
dec
lcall
mov
mov
repz
adc
test
aam
jmp
jp
movsl
push
push
mov
ljmp
lcall
pcmpeqd
or
mov
bound
dec
jno
sbb
dec
push
insl
shlb
mov
inc
jmp
jns
mov
mov
hlt
dec
popa
lds
mov
mov
movsb
clc
dec
test
imul
daa
add
out
cmp
rcr
iret
xchg
fimull
pop
jmp
mov
cmp
aam
std
mov
dec
pop
sub
jnp
movsb
inc
das
inc
sbbl
imul
xchg
inc
xlat
mov
outsl
addps
lcall
shlb
dec
inc
jae
mov
ret
cmp
mov
xor
sub
push
jno
xchg
in
sbb
mul
lret
sub
mov
bound
icebp
pop
adcb
cmpsl
and
sbb
lea
push
cmc
inc
jmp
pop
lea
push
pop
fisubrl
xchg
inc
pop
jnp
mov
popf
xorl
xor
or
or
jle
inc
mov
mov
aas
add
pushf
xchg
push
std
jnp
arpl
rolb
sub
jecxz
sbb
stos
mov
cld
push
xchg
iret
faddl
pop
pushf
cmp
and
les
sub
sub
push
lds
inc
xchg
imul
cmp
pop
mov
outsb
sub
jne
ror
mov
add
or
dec
loop
inc
leave
scas
je
xor
push
ss
jle
push
pop
adc
or
push
or
dec
fdivs
movsl
mov
sbb
mov
lahf
test
xchg
inc
call
jl
out
mov
outsl
pop
scas
aad
fcomps
rcr
cmpsb
push
cwtl
mov
in
int
lods
dec
movsb
dec
inc
jmp
add
fiaddl
out
lret
mov
jne
jge
hlt
xchg
daa
jae
push
ret
rcrl
pop
leave
jae
je
and
aas
insl
mov
int
sbb
jle
repz
or
add
pop
mov
mov
in
fdivrl
mov
add
fnstcw
test
and
sbb
dec
sub
aas
xchg
xchg
or
daa
aas
out
add
sbb
jp
repz
lcall
loop
cmp
jns
jae
int
add
stc
add
inc
xchg
rol
adc
lcall
jl
mov
hlt
test
movsb
inc
xchg
test
das
fdivr
lea
out
sbb
out
js
out
bound
leave
xor
xchg
xchg
fimull
not
cmpsl
and
ret
pop
loope
jle
movsl
es
or
push
fdivrs
push
add
mov
ss
test
aas
cmp
dec
es
ret
shrb
loop
xchg
mov
popf
jo
inc
jle
pop
cmpsl
xlat
push
mov
jg
jmp
lret
mov
sbb
or
fidivs
mov
pop
rol
push
or
testl
pop
mov
in
add
push
testb
inc
sub
inc
xor
orl
cmpb
jns
imul
in
pop
shrl
jle
loope
add
xlat
mov
pop
inc
xchg
adc
mov
int3
mov
daa
pop
lods
push
insb
and
dec
push
lods
or
int
mov
gs
movsl
aad
clc
mov
xor
cli
pop
mov
movsb
loopne
adcb
mov
pop
mov
xor
mov
cli
pop
in
clc
out
dec
xlat
scas
shr
testl
mov
cmpsb
ret
push
and
out
mov
and
mov
push
add
add
cmc
sti
inc
add
test
xchg
stc
mov
cmp
out
mov
jb
hlt
pop
xor
lret
jmp
mov
jbe
mov
lret
ds
mov
in
sbb
xor
negl
shl
inc
add
aaa
mov
pop
shl
push
mov
mov
lods
fbstp
cmpsl
xor
inc
bound
and
add
adc
sub
inc
rcrl
scas
sub
clc
jns
inc
push
push
cwtl
and
fidivrl
out
xlat
dec
fistpll
stos
call
cmc
arpl
addr16
xchg
xchg
mov
dec
adc
insb
lahf
add
or
add
push
lds
inc
outsl
xor
das
test
clc
popl
movsl
jmp
arpl
mov
test
movsb
xchg
add
or
push
pop
mov
repz
push
xor
xor
cmp
xor
sbb
mov
mov
ss
daa
xor
xor
mov
pop
ret
mov
sar
adc
popa
lock
repz
popf
leave
iret
mov
xchg
lock
lahf
into
and
inc
pop
xor
movb
iret
inc
lcall
dec
push
dec
shrb
push
mov
or
popf
push
pop
cmpsl
mov
test
outsl
fiaddl
sbb
scas
out
aas
gs
jge
add
or
cmc
add
push
inc
inc
pop
dec
ja
sub
add
movsb
lahf
lds
add
divl
fst
fmuls
in
incl
sub
add
out
mov
mov
cmpsb
push
jno
in
lret
mov
mov
jne
xchg
jbe
lahf
adc
dec
cwtl
movsb
mov
inc
adc
cmpsl
sub
or
push
fdivr
mov
pop
fdivrs
lods
and
mov
push
adc
push
push
add
das
xchg
jmp
stos
add
frstor
fmull
rcll
aam
rolb
jbe
adc
xor
mov
add
dec
mov
sbb
shlb
mov
add
sbb
scas
je
adc
scas
sub
jno
sub
pop
xchg
mov
mov
movsb
imul
out
xchg
lss
mov
push
dec
adc
sub
mov
add
xor
xchg
xchg
sarb
shll
adc
sub
xor
lcall
stc
jno
adcl
dec
sarb
enter
xorb
lea
jo
cwtl
sub
fsubl
test
pusha
ljmp
pop
mov
pop
sbbb
pushf
push
or
mov
ljmp
fdivs
fcmovnu
in
mov
out
xlat
int
ss
ret
mov
aam
jnp
sub
sub
scas
repnz
xlat
mov
ds
pop
mov
sbb
jns
pushl
rclb
adc
in
jp
jmp
aam
mov
jae
mov
sbb
stos
xor
mov
jae
sbb
movsb
stos
loope
xor
cmpb
sbb
out
dec
sub
in
fcmove
mov
mov
ja
inc
cmp
aaa
dec
and
mov
aaa
leave
cmp
jge
repnz
je
sahf
mov
xor
jl
cmc
jge
ss
push
lcall
push
std
jg
lods
jo
push
in
ljmp
lcall
in
xor
push
sti
xchg
cmc
aad
incl
push
adc
fbstp
test
jmp
rcrl
pop
mov
push
mov
lahf
inc
sahf
mov
into
pop
push
push
mov
mov
mov
fidivs
push
sub
cmp
scas
add
mov
mov
stos
mov
popf
push
jb
mov
jp
lea
insb
iret
xor
call
sbb
in
bound
testl
incb
mov
mov
jno
jne
add
inc
adc
xlat
mov
mov
mov
adc
mov
pop
fistl
popl
fcmovne
fwait
out
stc
nop
mov
std
sub
outsb
jnp
jb
je
pushf
adc
pop
xor
popf
mov
push
sub
call
aaa
ror
inc
in
into
enter
and
or
jmp
mov
hlt
mov
and
mov
loop
xchg
enter
and
jle
pop
cmp
jb
ret
jg
ds
xchg
aaa
add
jne
sub
sub
adc
in
or
and
stc
fmul
mov
xlat
sub
ror
push
dec
andb
mov
clc
call
or
out
dec
test
sbb
pop
add
call
outsb
cmp
lcall
loop
in
jbe
mov
inc
mov
insl
fwait
or
mov
add
cmp
roll
scas
push
sahf
xlat
imul
pop
stc
dec
cmc
and
into
call
pop
std
fimull
xor
mov
cmc
inc
dec
cltd
flds
int
nop
aaa
aas
inc
negb
cli
fisubrs
dec
std
pop
and
xchg
enter
icebp
mov
jl
xchg
fcmovnbe
push
jge
mov
out
dec
into
xlat
mov
mov
dec
fldl
jmp
dec
mov
arpl
subl
pop
xor
arpl
push
sbb
das
mov
ss
mov
stc
ja
movsb
divl
sbb
or
in
xchg
mov
icebp
dec
xor
mov
jmp
jecxz
adc
xchg
arpl
push
mov
out
lcall
or
jg
jne
cs
mov
xchg
cltd
mov
outsb
mov
push
js
pop
mov
pusha
lods
cmpb
ss
mov
mov
insb
ljmp
pop
stc
nop
out
int
add
dec
stos
sbb
mov
jge
stc
rcrl
in
xor
mov
cmpsb
test
inc
jecxz
mov
push
or
rorb
mov
scas
sbb
shrl
insb
movsl
cltd
clc
repz
insb
lret
rclb
mov
add
pusha
test
das
fidivs
dec
jp
popf
scas
jb
inc
jno
lea
fstl
jp
or
dec
notb
push
push
cltd
dec
mov
enter
insb
test
mov
int3
cmp
outsl
xchg
lods
mov
sbb
cs
mov
adc
cwtl
dec
enter
inc
xor
stos
fists
pop
cmpsl
out
dec
mov
sub
add
rcl
add
mull
call
lods
cmp
mov
enter
stos
cltd
xor
jecxz
test
and
dec
add
push
les
movsb
lret
std
in
inc
or
add
inc
gs
xchg
jp
push
fnstsw
shl
ja
lahf
or
lahf
jp
pop
addr16
xchg
xchg
push
cmp
push
adc
xor
sarl
push
mov
in
sbb
cmp
xor
mov
cmc
popf
adc
stos
repnz
gs
dec
movsb
jae
jb
mov
shll
pop
mov
inc
add
mov
ljmp
xor
into
cmpsl
and
lret
mov
cwtl
pop
addr16
decb
inc
push
icebp
lock
xchg
xchg
jno
sub
fwait
movsl
jl
push
adc
mov
cmp
fs
sbb
stos
dec
enter
inc
ret
mov
jb
lahf
mov
rolb
add
in
mov
movsb
mov
mov
ret
mov
call
mov
sbb
negb
incb
jae
outsb
repnz
std
and
jmp
sbb
shlb
andl
fsubl
loopne
sub
imul
aaa
mov
adc
mov
flds
add
cmp
loop
out
xchg
pop
out
in
stos
out
mov
fcoml
fisttpl
adc
and
pop
neg
mov
pop
pop
scas
and
inc
movsl
xor
rorb
mov
xchg
movsl
flds
jecxz
in
jne
mov
adc
cmpsb
push
push
and
sbb
fisttpll
sub
scas
xchg
add
sub
mov
cmpsb
xchg
push
mov
pop
rcll
les
imul
int3
adc
icebp
ret
adc
push
mov
mov
sbb
or
mov
sub
hlt
or
inc
sarb
xchg
sub
pop
leave
push
insl
dec
je
lock
mov
enter
enter
push
dec
mov
push
les
pop
dec
pop
mov
xor
aam
xchg
outsb
xor
fimull
imul
jo
out
hlt
mov
push
or
jb
add
loopne
push
fcmovne
push
ja
xchg
in
dec
test
cmpsl
sarl
mov
mov
and
or
adc
ret
or
nop
add
in
popa
pop
dec
lret
mov
xchg
sub
lods
pop
and
lea
lods
jnp
mov
sub
cmp
cmp
lods
push
cmp
add
fldcw
mov
push
popf
loopne
add
dec
sub
nop
or
hlt
jns
push
int3
dec
rcll
jns
sti
ljmp
add
stos
fsts
or
sarb
loop
out
repz
push
adc
sbb
push
dec
dec
pop
mov
cltd
push
xchg
adc
mov
les
movsb
pop
mov
cmp
outsl
cwtl
movb
xchg
xchg
mov
xchg
ret
outsb
lea
add
sbb
mov
sub
inc
fs
jge
xchg
cmpsl
shlb
in
out
subb
cltd
pusha
lret
in
movsb
in
ss
mov
xlat
ds
sbb
push
fistl
es
sub
xorl
loop
add
lock
data16
xor
jl
stos
out
push
pop
fadd
dec
mov
dec
dec
lock
pop
or
mov
aad
rol
sbb
insb
je
scas
js
jg
push
dec
test
dec
adc
adc
leave
aas
push
inc
add
adc
add
daa
pop
pop
dec
cwtl
rolb
stos
push
repz
or
push
movsb
mov
addb
repz
push
jnp
fst
adc
push
pushf
or
lock
dec
cmp
insb
int
jae
pop
ds
and
scas
push
fwait
loopne
jp
addr16
jnp
jge
lcall
inc
jle
int
insb
iret
adc
fwait
imul
mov
cmp
xor
pop
adc
sbb
jl
or
loope
mov
jb
or
scas
lahf
push
ret
push
stc
jge
pushf
sub
les
pop
dec
test
hlt
in
mov
add
je
sbb
push
sar
cltd
add
and
add
xchg
stos
scas
push
cmp
mov
jge
sub
cmp
inc
jle
and
mov
pop
push
enter
scas
mov
mov
dec
jnp
xchg
sbb
test
cmp
add
std
lods
pop
stc
mov
cmp
xor
add
add
dec
cmp
lods
mov
nop
mov
add
rolb
lret
adc
ja
and
push
frstor
jmp
repnz
lcall
sbb
sti
jl
mov
mov
dec
jge
jecxz
mov
das
lcall
or
mov
and
cmpsb
adc
lods
pop
push
sbb
mov
and
adc
sbb
dec
cmpb
ja
fnstsw
aad
add
test
pusha
roll
faddl
daa
mov
hlt
stc
lgs
push
mov
jg
fwait
out
push
sub
stos
cmp
loopne
out
test
lret
push
push
lcall
sahf
pop
adc
loop
sar
adc
gs
sub
sbb
andl
push
jbe
dec
fwait
hlt
mov
xor
aas
lods
add
sbb
push
mov
cmp
xor
fcoml
jmp
sub
ficompl
sbb
push
sahf
aas
out
xchg
pop
push
push
hlt
xor
popa
jae
xor
pop
pusha
popf
jecxz
sbb
jb
or
scas
pop
out
outsl
rcl
pop
push
dec
jne
cltd
mov
dec
jno
pop
scas
mov
gs
dec
or
stos
jns
or
std
and
jmp
sub
fcoml
stos
jge
ret
jns
pop
std
imul
iret
dec
test
popf
scas
in
ret
xchg
clc
sub
pop
cld
pop
mov
xor
in
add
xor
jg
push
lcall
outsl
sbb
outsl
les
fsubl
fidivs
sub
mov
jne
and
out
and
cli
and
scas
call
pusha
adc
mov
cmpsb
cwtl
push
adc
ds
ds
mov
push
sti
into
jno
cmpsb
negb
sub
mov
cmp
push
cmp
lock
es
dec
jo
mov
xchg
xor
rep
and
inc
inc
into
insb
sub
std
lds
scas
insl
int
in
test
add
insb
ljmp
sarb
push
mov
pop
jg
std
cli
jge
mov
in
xor
roll
push
test
add
sbb
ret
push
fxch
xchg
inc
into
pop
lret
pop
pop
mov
dec
ret
test
or
jge
adc
decl
scas
loope
mov
insb
outsl
testb
cmp
jmp
jp
jmp
lods
push
shrb
xlat
out
sbb
lods
dec
aas
sub
inc
jecxz
in
inc
rorl
cmp
stc
and
add
xor
mov
nop
mov
dec
call
repz
cmc
jp
jne
push
sti
add
push
std
cmc
mov
pop
mov
cmp
iret
aas
sbb
or
and
jle
mov
lds
jne
cmpsb
mov
jnp
mov
xor
or
bound
lahf
dec
dec
sbbl
push
push
sarb
or
out
or
sub
push
sbb
test
xor
sub
leave
jp
lret
cmc
cmp
ja
jmp
fsubs
jbe
aad
push
cwtl
jb
xor
jno
sub
sub
mov
xor
fcmovnbe
fnstcw
mov
movsb
adc
jp
je
sti
add
mov
dec
incl
addl
jnp
lret
xor
fstpt
dec
jmp
out
movsb
loope
xchg
das
les
jmp
xchg
in
in
xor
mov
push
jmp
cmpsl
je
mov
insl
push
xchg
ljmp
fs
rorl
dec
nop
lret
pop
ja
sbb
or
mov
jb
ficomps
mov
bnd
sub
sub
repnz
xchg
sbb
cltd
adc
sbb
dec
sarl
shll
add
push
ficomps
sub
push
jl
jne
add
xchg
ret
cltd
adc
rolb
lds
sub
jp
fsubr
push
ja
xor
cmp
add
fs
and
sbb
xchg
in
leave
dec
call
and
ret
rcr
aaa
out
inc
ficoml
jmp
inc
out
test
in
add
inc
bound
push
sub
call
sbbb
aas
xor
sbb
sbb
and
popa
or
mov
jbe
cmp
adc
fstpl
pushf
xchg
push
jl
mov
aam
loop
js
mov
fnstenv
out
aas
xorl
orl
ds
mov
push
push
sbb
cli
ss
popf
cmpsb
xchg
test
mov
pop
add
sete
iret
and
mov
test
out
adc
mov
mov
pop
xlat
movswl
jle
shlb
movsb
inc
cmc
pusha
movsl
mov
stc
fbstp
and
inc
and
push
pop
mov
sub
sarb
cli
push
es
fnstenv
dec
xchg
pop
mov
sub
int
add
mov
and
mov
or
mov
xchg
mov
jg
lods
fucomi
orl
fldl
clc
fs
sbb
mov
adc
mov
in
mov
clc
rcrl
pop
std
xchg
pop
aad
inc
fxtract
pop
xor
dec
out
out
mov
je
jmp
das
xor
adc
aaa
scas
mov
mov
out
hlt
push
push
sbb
jns
or
fisubs
push
mov
outsb
adc
jecxz
pop
add
cmp
rcrl
and
fldenv
cli
sub
add
call
pop
xchg
xchg
lods
out
add
dec
call
pop
sbb
arpl
jae
sbb
or
mov
mulb
stos
mov
xlat
and
iret
andb
outsl
xor
mov
jle
sub
push
mov
mov
lcall
jae
xchg
insb
xorl
inc
jg
pusha
rorb
pusha
mov
dec
push
movsl
movsl
lods
jmp
pop
mov
imul
repnz
pop
int
mov
cmpsl
outsl
cmp
test
jb
push
test
cltd
dec
out
pop
je
data16
mov
mov
insb
pop
insb
dec
in
mov
pushl
jne
sbb
in
add
push
push
xchg
adc
mov
and
mov
or
and
cmpsl
faddl
sbb
jnp
push
inc
inc
scas
rcll
js
xlat
dec
cmpsl
add
fprem1
sbb
add
or
dec
and
adc
test
adc
mov
adc
inc
mov
dec
or
push
out
inc
in
pop
fwait
adc
push
sub
sbb
stos
mov
xchg
pop
or
insb
mov
fcmovnb
jb
or
insb
mov
sti
mov
push
sub
js
fs
int3
push
mov
das
pop
leave
pop
test
cmp
daa
jae
out
sub
push
jp
jmp
loope
dec
lret
or
std
adc
mov
mov
in
xchg
out
xchg
xchg
jp
xchg
mov
shll
roll
dec
push
push
dec
movsl
arpl
xor
xchg
outsb
sbb
or
xorl
jmp
jno
sti
inc
js
test
adc
mov
inc
pushaw
and
sahf
mov
push
sub
cmp
les
addr16
pop
adc
xor
fmull
push
sbb
and
xchg
cmc
xorl
fidivs
shrb
stos
push
push
mov
inc
loope
mull
jbe
sti
push
ljmp
mov
iret
aam
insb
cltd
lock
cmpsb
jbe
out
in
push
lock
pop
pop
pop
in
pusha
int
rcr
sub
aad
dec
call
in
icebp
imul
jne
mov
cmpsl
xor
jbe
scas
add
and
pushf
lcall
cltd
movsb
lcall
repz
insb
arpl
out
add
fisubrl
pop
xlat
sbb
sub
sub
push
xchg
inc
rol
mov
jmp
mov
adc
lahf
inc
bnd
pop
add
les
xchg
and
mov
adc
add
in
or
outsb
pop
sub
sets
outsb
or
dec
lods
sti
arpl
popf
jle
aaa
dec
add
sbb
or
stos
sbb
pop
inc
movsb
and
ss
jl
popa
lcall
dec
fsubp
mov
nop
mov
lahf
stos
jo
bound
les
loope
add
popa
into
das
push
out
xchg
adc
fnsave
in
jecxz
es
shll
mov
push
shll
mov
lds
and
mov
mov
push
mov
jno
ret
xchg
data16
sub
xchg
pusha
or
or
inc
pop
mov
dec
call
imul
std
push
int3
mov
or
sub
jp
dec
rcrb
lods
dec
repz
inc
jle
xor
daa
ss
ss
sub
push
enter
test
aam
push
mov
mov
cmp
into
cmp
dec
in
inc
sub
xchg
loopne
popa
pusha
movsl
xlat
mov
dec
pop
mov
and
ret
mov
xchg
push
dec
loop
ja
mov
add
repz
jecxz
dec
mov
fisttpll
int
pop
fbld
lods
fisttps
fildl
stc
dec
xor
xor
mov
pop
bound
imul
mov
sbb
mov
cmc
xchg
in
jbe
push
jae
pushf
icebp
call
int
mov
rclb
aad
iret
mov
inc
inc
sbb
scas
ja
ja
and
out
enter
popa
subl
fdivrs
xor
std
or
sbb
add
pushf
scas
adc
movsb
push
mov
ret
aad
test
aaa
pop
repz
subb
mov
outsl
adc
push
cltd
xchg
push
aas
add
pop
lock
add
scas
fimull
jp
dec
mov
in
lret
fisttps
xor
add
mov
data16
sbb
push
scas
push
sti
sub
xor
xor
aas
mov
in
xchg
sub
adc
mov
iret
fcomip
int
loopne
stos
push
cmc
jno
cmpl
push
or
adc
in
mov
inc
cs
lret
shll
test
sub
adc
adc
mov
imul
sbb
and
xor
inc
xchg
sub
mov
data16
nop
fisubs
cmp
enter
shr
or
mov
mov
cmp
outsl
mov
in
lcall
les
in
testb
out
pushf
push
or
aas
lea
data16
daa
ljmp
test
repnz
add
les
ss
loop
xchg
fiadds
iret
rorl
popf
sbb
cmpsb
enter
adc
mov
jle
pop
mov
cmp
mov
out
cmp
dec
stos
mov
es
mov
out
lds
jmp
scas
scas
add
push
or
sub
out
mov
and
movsb
xor
sahf
test
test
popa
popf
aaa
inc
push
jg
dec
and
fcomi
repnz
mov
jmp
fdivs
pop
fcomps
mov
cmp
xchg
daa
fstl
xchg
lock
adc
aad
jmp
sarl
push
aas
dec
cmpsl
sbb
jge
add
mov
jae
std
leave
cmp
push
jecxz
mov
pusha
or
mov
dec
sahf
and
sbb
sub
cld
aaa
mov
mov
fwait
mov
adc
nop
ret
pop
je
mov
xchg
icebp
loope
pop
add
jnp
clc
inc
test
and
daa
push
mov
sbb
aaa
dec
dec
jo
incl
push
jge
lret
and
jl
lea
adc
fildl
test
lcall
roll
push
pusha
repnz
push
sbb
mov
xchg
dec
jecxz
addr16
mov
adc
js
das
insb
or
jp
or
icebp
or
cld
ficoms
test
test
xchg
cmpsb
jns
sti
repnz
ss
not
sub
sti
push
and
std
mov
mov
addb
add
or
outsl
pop
out
adc
xchg
arpl
test
insb
movsb
scas
test
mov
bound
push
push
cwtl
fimuls
pusha
or
cmp
in
xchg
and
xchg
push
sbb
push
and
pop
adc
dec
push
imul
lock
pop
arpl
xor
sbb
pop
jno
sbb
mov
cld
jae
div
mov
daa
inc
add
mov
mov
xchg
imulb
dec
pop
push
xchg
outsb
into
scas
push
or
fimuls
sarl
cmc
jmp
cmp
jecxz
mov
imull
mov
mov
lock
mov
mov
or
jmp
mov
sahf
cs
aad
out
daa
sar
cltd
xchg
pushf
mov
mov
sub
xchg
insb
mov
cmp
push
iret
adc
sbb
div
xchg
shll
popl
and
int
out
jl
aam
push
pop
repz
mov
pop
xchg
mov
or
movaps
into
xchg
jb
popf
inc
into
not
loope
jmp
jl
dec
and
mov
push
lods
xchg
cmpl
stos
xor
iret
int3
js
mov
jmp
cs
sbb
xor
pusha
jns
aam
test
es
or
xchg
scas
mov
add
fsubr
cmp
xchg
adc
jo
inc
sub
outsl
pop
nop
inc
sub
repnz
clc
test
jecxz
call
clc
call
xor
out
paddsb
movb
mov
xor
jge
aad
jbe
jno
rolb
lds
std
xor
and
mov
cmc
fistps
cltd
adc
cmp
push
adc
sub
cmp
inc
xchg
mov
popf
test
stos
es
dec
loopne
jge
call
rcrl
outsl
adc
dec
dec
push
jp
xchg
into
faddp
mov
mov
jle
mov
lods
fcomps
notl
sbb
nop
xor
mov
and
popa
iret
notb
out
ret
or
sbb
xchg
inc
adc
movsb
add
aaa
stos
xor
mov
dec
iret
jg
fs
pop
xor
loop
loop
and
fdiv
mov
jl
sub
jecxz
jb
mov
outsl
mov
jbe
or
sub
pop
jecxz
shll
add
fbld
add
mov
jno
das
insb
mov
jo
mov
scas
lds
aas
into
push
inc
adc
inc
sarb
sbb
fbld
jecxz
push
and
mov
jnp
scas
fst
push
sub
adc
lea
rolb
fsub
cmpsl
xor
jne
push
dec
fidivl
cvtps2pd
movsb
scas
jno
cld
ja
or
mov
repz
outsb
cs
lods
lret
pop
pop
mov
mov
fnsave
push
xor
jmp
mov
in
xor
inc
hlt
xchg
lahf
lods
mov
mov
filds
adc
sub
shrl
or
in
ss
or
pop
outsb
xor
jp
das
fisubs
push
shrb
popf
dec
pushf
enter
adc
push
dec
ret
mov
xchg
rol
push
popa
jbe
cli
hlt
pop
xchg
sbb
stos
insb
sub
fsts
lret
push
jne
xor
dec
mov
out
rep
dec
push
or
popa
inc
sub
xchg
adc
jno
ljmp
repz
push
push
inc
js
aaa
cmc
cli
mov
int
and
cmc
add
pop
and
out
sub
push
cmp
push
cmp
iret
and
xchg
std
js
xchg
aas
push
sbb
mov
sbb
and
mov
jns
mov
in
test
mov
push
pop
adc
xor
add
sub
sub
push
mov
int
push
data16
jae
cmp
or
cmp
loop
cli
popf
xor
sbb
sahf
sti
mov
inc
cmp
sbb
data16
ret
pop
sub
cmpsb
mov
dec
xor
icebp
sub
push
push
push
in
fxrstor
fwait
cmc
push
rcl
fists
cmpsb
fdivr
add
push
enter
loopne
cmpsl
not
in
or
in
xor
in
push
mov
mov
mov
fisubrl
stos
notl
mov
add
or
jmp
xchg
jl
and
lods
push
out
ficomps
int
xchg
jne
xor
jmp
xor
cmp
rcll
adc
pop
out
fs
and
pop
loopne
add
pop
jp
outsl
cmpsb
or
inc
mov
mov
sbb
mov
test
mov
sbb
aas
and
sbb
jns
test
data16
add
ret
pop
cmpsb
xor
pop
nop
out
and
out
xchg
cmc
stos
sbb
add
push
mov
cwtl
aad
adc
mov
pop
or
jp
jb
xchg
je
cmp
pop
lret
pop
mov
mov
push
push
mov
fstp
insb
and
call
push
out
dec
es
adc
pop
adc
lods
scas
or
rcr
dec
call
fs
cmp
in
push
mov
imul
lea
sahf
out
out
test
push
fwait
pop
cmpsl
mov
mov
rcl
stos
xor
add
aas
adc
mov
inc
push
addl
mov
mov
push
inc
movsl
int
fs
enter
mov
pop
mov
pop
add
push
loop
je
nop
inc
pop
add
js
loope
jb
addr16
mov
jb
shl
out
dec
lret
xchg
icebp
lods
pop
enter
ficomps
test
adc
dec
sbb
fcoml
or
cmp
in
push
push
inc
pop
repz
addr16
loop
xor
cmp
mov
ds
icebp
mov
sub
outsl
push
in
icebp
sub
pop
mov
fwait
cmc
ret
lods
dec
out
mov
rcrl
dec
xchg
hlt
in
cmpsb
and
pop
lods
and
lds
cmp
mov
fld
mov
dec
or
xor
popa
adc
aam
push
fldl
imul
bound
stos
fstpl
mov
jbe
lods
inc
idivb
shrd
and
xchg
cltd
push
jl
pop
xchg
cmp
rclb
mov
jecxz
xchg
lods
add
in
jmp
lods
cmp
add
jg
pusha
rolb
fs
fcomps
fnstsw
mov
add
jl
stos
pop
inc
insl
push
leave
mov
and
and
xor
sbb
sarb
and
mov
imul
jnp
mov
sbb
cmp
cs
mov
pop
sub
repnz
jns
sbb
xchg
mov
jmp
aaa
adc
cmc
neg
dec
les
sbb
insb
sub
sahf
fcmove
cli
jg
daa
or
xchg
pushf
fsub
mov
pop
std
xlat
lret
xor
cmpsb
or
pop
loop
out
shll
jae
repnz
popa
negb
adc
in
je
insl
pop
vmovntpd
incb
push
mov
push
sbb
ds
insb
inc
or
dec
pop
cli
ja
and
sbb
mov
icebp
mov
insb
dec
mov
cmp
aas
sbb
pop
lcall
fisubl
pop
sub
loopne
aam
aam
xor
std
es
std
andl
pop
addl
stos
cmp
add
jg,pn
lea
sbb
fnsave
ret
push
mov
lds
mov
nop
repnz
sahf
mov
loopne
popa
test
cs
pop
pushf
ret
gs
std
sub
lods
sarb
cld
sbb
js
sbb
imul
xchg
add
jnp
das
repz
sbb
xchg
push
push
addr16
pop
cld
mov
cmp
pop
out
cmp
cmc
cld
repz
mov
sbb
out
push
int
lret
rcrb
js
mov
cmp
inc
mov
stos
sbb
bound
pusha
in
xchg
push
popf
push
ret
addl
xor
cmc
cld
dec
cwtl
stc
mov
sbb
es
out
inc
outsl
cmp
fs
bound
rcrb
pop
push
hlt
ss
mov
int3
adc
mov
std
push
adc
test
xchg
fiaddl
xorl
imul
cli
cmp
cli
out
xchg
mov
lods
or
cmpsb
scas
cwtl
nopl
inc
push
fistl
std
int
and
mov
sbb
clc
insl
dec
cld
fwait
aaa
mov
xchg
cs
cwtl
jl,pt
dec
pop
fisttpll
xchg
and
pop
adc
push
pop
fstpl
xchg
jmp
aas
cmpsl
imul
sub
repnz
jnp
fsubs
sahf
mov
jp
jg
inc
sbb
jle
jecxz
aas
xor
and
xlat
jg
jge
int3
jbe
mov
xor
xchg
out
imul
push
xchg
and
icebp
fisttps
bts
sbb
aaa
xchg
adc
fistpll
daa
outsb
push
and
mov
imul
dec
dec
mov
jp
fisubs
hlt
pop
data16
mov
test
mov
daa
mov
xor
imul
shr
shll
lods
in
lods
dec
es
xchg
imul
or
ficomps
decl
stos
push
inc
mov
cli
jbe
out
daa
cltd
adc
mov
adc
in
ror
jo
xchg
or
popa
add
push
scas
lock
rcl
jle
mov
xchg
push
push
out
lcall
mov
sbb
and
nop
imull
ret
cmp
and
pushl
jnp
and
dec
sbb
push
dec
scas
sbb
cmpl
pop
mov
xor
jp
push
add
sub
adc
jmp
xchg
push
cmp
icebp
xor
inc
push
pop
mov
pop
ficoms
sub
push
stos
mov
jnp
or
test
pop
pop
and
cwtl
mov
loope
dec
pop
cld
call
ljmp
pop
fs
push
push
movl
imulb
fdivrl
loopne
adc
mov
xor
push
adcb
cmc
mov
add
lret
in
gs
xor
popa
or
cmp
pop
ret
stos
pop
xlat
pop
fmull
jne
add
subb
int3
pop
imul
cmc
dec
scas
aaa
sub
hlt
stos
repnz
pop
aaa
push
out
mov
ljmp
shrb
test
lods
mov
mov
popf
add
fcmove
pop
push
daa
pushf
jp
and
fs
dec
lea
pop
nop
jge
sti
push
insb
loope
pusha
fcomps
push
pop
in
sub
mov
pusha
insl
jg
dec
mov
inc
fscale
adc
jp
sbb
push
jle
cmpsl
dec
call
mov
push
adc
out
xchg
cmc
testb
jp
in
aam
add
push
stos
subb
lcall
cwtl
push
sub
or
rcrl
pop
push
push
insl
imul
out
xor
imul
nop
int3
cltd
jno
mov
xchg
out
add
cmp
addl
iret
adc
cmp
mov
jl
push
add
xor
add
sbb
enter
jno
and
scas
pop
data16
or
cmp
ja
mov
jns
push
jle
cltd
push
mov
cmc
lods
mov
rclb
imul
cmpsl
aaa
push
fstpl
pop
jge
insb
dec
stc
lret
cmp
jo
fmull
imul
cltd
scas
cmp
outsl
sar
jp
cmp
test
cli
mov
xchg
pop
sarb
xor
pop
movsb
sbb
xor
js
das
mov
dec
cmpsb
adc
jecxz
ret
js
stos
push
cmp
inc
push
scas
jbe
addr16
xor
and
jmp
dec
mov
call
sbb
push
jne
dec
cmpsb
cli
or
loope
rclb
cmp
bound
inc
sahf
call
mov
and
push
jmp
jae
test
and
push
push
arpl
ljmp
sub
stos
aas
divl
mov
inc
adc
ficoms
mov
cmpsl
cs
mov
sarb
push
push
dec
fbstp
int3
inc
or
mov
es
nop
mov
js
loop
mov
add
rcll
xchg
or
leave
mul
and
movsl
in
lar
cmp
mov
lds
addb
lock
jae
xorb
and
scas
daa
jecxz
lret
mov
adc
outsb
fldt
sar
dec
or
and
adc
cltd
pop
pushf
xor
pop
xchg
or
pop
xchg
jge
cs
and
and
fs
mov
fadds
push
xor
ret
cmpsb
sahf
jae
rorl
xlat
dec
dec
mov
in
test
xchg
push
inc
lret
stc
jmp
add
add
mov
xor
cltd
and
ljmp
pop
and
cli
bound
inc
mov
push
sahf
les
pop
imul
aaa
and
cld
aam
daa
sub
std
scas
idivb
arpl
lret
sahf
stc
push
cmc
push
xor
pushf
outsb
jnp
popf
dec
xor
sbb
lcall
jno
movsl
js
jo
sub
sub
sbb
sbb
inc
ss
iret
std
pop
jl
lret
xor
push
movsl
mov
fcomps
repz
pop
add
add
test
hlt
popf
jecxz
icebp
shl
push
imul
xor
sub
lods
out
je
pop
std
roll
pop
shlb
lock
pushf
mov
out
pop
lock
movsb
test
daa
jnp
xor
cmp
add
imul
adc
movsl
ficomps
ds
push
test
fwait
jl
add
mov
cwtl
std
scas
sbb
xchg
xchg
add
lcall
popa
mov
arpl
xor
push
jo
add
xor
int3
fisubrs
cmp
movsl
push
xchg
lock
inc
inc
sbb
mov
je
sub
dec
sub
mov
dec
int
and
into
subb
mulb
cmpl
jge
aad
lret
cmp
push
mov
jae
inc
add
adc
jp
outsb
push
dec
hlt
aad
sbb
aaa
clc
aas
or
mov
mov
and
je
ljmp
or
sub
xor
fstp
ret
in
rorl
stc
add
xor
mov
sub
sub
dec
xchg
addb
inc
dec
dec
inc
repnz
mov
je
add
call
sti
in
jg
stos
repz
add
dec
jp
and
push
jle
rcl
popf
and
in
or
call
push
and
jp
ds
int3
xchg
test
cltd
es
mov
ret
dec
fisttpl
lret
push
daa
cli
jmp
pop
sarb
in
stc
bound
out
and
cmpsb
fstpl
push
insb
jns
mov
nop
jmp
dec
jne
lock
repnz
xor
jg
dec
and
dec
jbe
sar
or
add
jl
ret
push
jae
add
add
lea
sub
xchg
retw
sub
xchg
stos
or
add
sbb
jg
dec
imul
dec
jp
loope
mov
mov
jbe
adc
pop
push
movsb
cmp
insl
in
mov
add
bound
test
cmp
fstps
roll
in
ret
dec
sbb
push
daa
scas
popf
arpl
in
or
loopne
pushl
pop
xorps
es
shlb
fsub
add
dec
cltd
sbb
std
aas
lcall
jns
enter
push
sub
dec
lods
aam
or
xor
push
lret
gs
pop
je
dec
adc
mov
dec
rcr
lcall
and
adc
and
lret
jp
mov
aam
inc
fsubrl
mov
pop
mov
insb
sub
and
sbb
std
mov
cld
adc
sub
push
stc
int
das
jle
inc
mov
jg
jo
lock
mov
inc
in
cmp
jl
push
adc
mov
cltd
mov
cs
sbb
add
ljmp
add
mov
lea
andb
sub
pop
sub
mov
sub
sub
stos
fimuls
shrl
ficomps
inc
add
jnp
lds
ds
pop
mov
mov
xorl
fildl
push
ds
in
adc
stos
test
mov
push
loope
test
stos
push
into
jb
lret
int
sbb
xchg
jl
push
mov
bound
xchg
mov
sub
andl
stc
pusha
sub
jge
cmc
pop
sahf
fsubp
jae
xlat
imul
cltd
das
subb
mov
fsubs
repnz
push
imul
sub
jl
mov
cld
fidivs
mov
mov
shrl
clc
jnp
add
inc
mov
jns
sub
shrb
clc
jne
pop
mov
xlat
sti
loop
mov
jmp
and
xor
hlt
jno
not
inc
mov
icebp
push
insl
jle
ds
sub
lcall
lea
mov
stos
push
sbb
lds
stos
xchg
push
or
mov
xchg
adc
ret
imul
add
inc
loopne
sub
jns
push
jbe
cmp
mov
rcrl
jo
cmc
daa
cmp
sbb
lock
xchg
lock
push
xchg
cmp
test
jle
jge
cmp
dec
pop
loop
pushf
xchg
push
sub
sbb
outsl
iret
inc
and
das
push
cmp
mov
repz
repz
sub
shll
mov
movsb
sub
xchg
leave
cmpsb
test
pushf
xchg
inc
in
mov
lret
aam
inc
stos
fdivrs
sbb
neg
and
mov
pusha
arpl
xchg
dec
sub
mov
add
sbb
xor
adc
cmpsb
mov
lods
adc
ds
lret
dec
push
out
es
sub
cwtl
fwait
mov
add
outsb
aam
pop
mov
js
out
adc
fwait
adcb
jno
lea
or
jmp
mov
fisttpll
rorl
test
mov
jmp
addl
ret
xor
adc
hlt
loopne
data16
scas
cmp
aam
dec
mov
dec
fisttpl
xchg
ljmp
cmpsl
mov
and
xchg
mov
movsb
scas
add
inc
pusha
fsubl
or
push
mov
dec
add
call
test
jg
lods
push
xor
stc
mov
scas
mov
test
aaa
and
push
xchg
sub
cmp
in
insl
fdivrl
dec
sub
or
jno
sub
xor
rclb
jno
and
test
mov
out
xchg
push
xlat
divl
or
push
sub
push
xor
and
dec
ss
pop
pop
pop
gs
dec
mov
cmpsl
add
dec
loopne
outsb
jp
pop
mov
mov
cmc
stos
or
sar
imul
jmp
adc
xchg
aaa
mov
push
movsb
test
shll
pop
rcl
in
aad
addr16
fs
in
repz
mov
outsl
jg
sub
mov
leave
cmpsb
adc
or
ss
pop
push
lods
push
sbb
leave
xchg
cmp
int
fwait
das
mov
lds
rorl
adc
xchg
int
fwait
dec
dec
ljmp
or
xchg
adc
in
adc
pop
push
test
inc
push
mov
lahf
js
pop
xchg
xor
test
mov
push
push
mov
in
sbb
jmp
je
rcrb
push
sahf
negl
jg
mov
dec
push
cmp
std
adc
fcomps
imul
jnp
ds
and
add
push
or
arpl
push
aad
push
pop
sub
js
jbe
mov
ret
repnz
je
cwtl
or
sbb
mov
jmp
add
pusha
loopne
sub
add
cs
mov
push
movsb
lds
or
mov
xlat
sbb
lret
jne
loopne
mov
jne
mov
sbb
test
cmp
xchg
sahf
mov
popa
and
dec
movsb
test
negb
add
or
repnz
fwait
daa
lds
lock
push
mov
repz
cmpsl
lahf
add
out
loopne
xor
cwtl
xor
lcall
inc
pop
pop
ret
and
ds
arpl
hlt
jge
sbb
mov
dec
cmp
inc
add
sub
mov
inc
imul
fst
cmp
dec
loop
hlt
popf
sub
iret
mov
push
jb
push
pushf
pop
repz
mov
jg
test
mov
xor
jmp
test
mov
push
push
inc
es
dec
push
cmpsl
movsb
mov
push
ret
pop
fs
enter
int3
insb
push
subb
test
sahf
mov
push
and
sbb
clc
arpl
xchg
cmpsb
nop
and
xchg
lret
mov
cmp
shr
rcrl
inc
lea
sub
cmp
test
dec
sub
mov
and
cmpsl
das
push
lcall
out
or
xor
jbe
sbb
lahf
popf
cld
cli
jge
jmp
js
aaa
lods
dec
pop
and
data16
call
sub
andl
adc
repnz
repnz
cmp
pop
in
mov
jg
sub
in
and
call
daa
adc
out
lret
aas
jge
xchg
fcmovb
ret
testl
push
lds
pop
jns
scas
push
dec
hlt
test
cmc
sub
mov
mov
es
pop
sbb
pusha
clc
aaa
rclb
test
in
dec
dec
bound
pop
jp
outsb
movsb
jno
jnp
or
fiaddl
xor
test
das
cld
jmp
out
call
sbb
push
add
subb
clc
insl
adc
inc
xchg
jne
push
or
cmp
mov
movsb
mov
add
ljmp
push
and
push
sbb
out
movsb
sbb
push
mov
jo
xchg
mov
mov
je
or
iret
mov
loop
ljmp
aas
pushf
pop
sahf
mov
mov
xchg
sbb
push
xor
xor
pop
jmp
add
ja
push
add
inc
xor
call
and
popa
int
popf
pop
cmp
mov
stos
push
or
jle
aam
xor
jmp
aaa
or
adc
jns
and
or
push
cmp
je
add
jecxz
push
idivb
add
mov
vucomiss
movsl
loope
jbe
xchg
fwait
mov
pop
sub
mov
fistl
jns
stos
mov
push
frstpm(287
inc
lret
or
dec
sub
leave
xor
sbb
or
lea
mov
cmp
int
lret
leave
and
fs
dec
les
mov
sahf
sahf
inc
flds
sarb
cmp
aaa
xchg
push
test
sbb
push
stos
push
das
and
cmp
or
rol
movsb
adc
outsb
sub
scas
mov
add
sbb
sahf
mov
repnz
out
xchg
das
and
gs
push
xchg
test
inc
push
into
into
pop
dec
mov
and
xchg
pop
daa
jnp
out
mov
test
in
and
dec
subl
sbb
dec
pop
push
jo
loop
push
sbb
fldenv
cltd
sbb
call
in
mov
xchg
dec
sar
nop
ret
sub
test
cmp
and
jnp
and
icebp
lock
les
enter
and
jge
insl
push
sbb
jne
movsb
pop
xorl
cs
dec
test
mov
add
ds
mov
mov
int3
orps
adc
pop
mov
lahf
jo
dec
mov
sub
mov
pop
cmp
daa
pusha
sbb
adc
in
pop
and
push
dec
notb
test
leave
mov
mov
fs
aaa
jp
push
imul
or
mov
in
repz
jbe
pop
or
mov
pop
push
pop
aam
rorb
int3
push
fcmovne
das
sbb
mov
rorl
aad
xlat
pop
cli
sbb
push
mov
aam
bound
cwtl
or
sub
sbbl
xor
xchg
ror
add
aas
add
xor
mov
jecxz
shlb
mov
sbb
push
movsl
stos
lahf
sub
add
cmp
scas
daa
xchg
jno
movsl
mov
das
icebp
and
jecxz
push
gs
jge
mov
shll
negl
mov
jae
mov
test
push
dec
subl
ss
iret
mov
add
jg
xchg
and
xor
and
or
loopne
aam
ret
push
loopne
std
stc
sbbb
lret
cli
pusha
loop
iret
inc
jno
in
or
sub
pop
xor
sbb
scas
imul
frstor
ljmp
cmpsb
jns
jmp
mov
sbb
fisubrl
in
mov
sahf
test
and
rol
jl
clc
jnp
pushw
lds
sub
sub
mov
dec
aas
adc
es
js
or
cmp
xor
xchg
andl
loope
xchg
cld
neg
mulb
fistps
test
popa
mov
add
test
push
stos
testb
lods
stos
push
jnp
sbbb
mov
or
or
test
cmc
mov
aas
xor
xor
xchg
mov
mov
inc
cwtl
mov
adc
mov
inc
jl
mov
xor
clc
cmp
sub
ljmp
pop
add
dec
mov
rorl
pop
push
sub
stos
jg
xchg
test
mov
cmp
addb
or
lahf
inc
cmp
cmp
sbb
mov
jb
insl
inc
sbb
jns
mov
scas
insb
adc
jle
sub
out
mov
add
pop
in
pop
or
nop
sbb
ds
or
or
outsl
hlt
and
jb
out
lods
push
jl
jo
mov
dec
mov
subb
pop
add
icebp
xchg
sub
aad
pusha
orl
repz
adc
cmpsl
insl
sub
dec
lea
xor
iret
hlt
fidivs
sub
fwait
jns
test
mul
add
add
rcrl
fistpl
imul
sbb
xchg
fiaddl
inc
scas
push
add
mov
in
subb
rol
dec
sarb
sahf
je
inc
mov
sbb
in
push
sbb
push
and
in
mov
popf
mov
mov
icebp
test
jae
fsubrl
imul
dec
jmp
stc
not
imull
jbe
xor
roll
lods
push
outsl
cmc
inc
mov
loopne
push
insl
mov
imul
dec
mov
add
mov
sbb
in
mov
popa
sub
jle
lea
mov
testl
cmp
jle
subl
dec
clc
push
and
fcmovnbe
cs
sbb
rolb
inc
movsb
pop
adc
clc
and
lret
pop
pop
es
cwtl
add
jmp
jne
mov
adc
jl
outsl
rclb
sbb
js
mov
mov
mov
add
add
daa
add
push
pop
sub
push
rorl
lock
je
mov
enter
std
sub
into
pop
xchg
pop
adc
pop
jb
cmp
xor
gs
and
jne
jnp
addb
mov
add
movsb
cmpsl
sbb
push
out
test
mov
addr16
leave
inc
cli
xlat
lods
inc
xchg
std
xor
pop
cwtl
mov
or
and
into
lahf
call
out
fdivrs
fucom
push
jbe
jnp
push
push
mov
mov
call
ds
sbb
mov
sbb
dec
and
int3
outsl
jp
cmpsb
xchg
add
pop
dec
mov
lds
lret
fcompl
and
mov
cmp
aaa
jle
jmp
shl
popa
and
jbe
pop
dec
repz
loop
add
in
arpl
mov
dec
in
push
mov
inc
orl
jb
adc
push
add
rolb
rorb
pop
xor
and
adc
and
push
jbe
add
sbb
push
call
push
sub
lret
pushf
in
iret
sub
out
and
xchg
pushf
pop
jns
inc
faddp
and
jmp
mov
movsb
stos
inc
bound
mov
dec
lods
cmpsb
lock
std
adc
lods
mov
cmp
mov
cmp
enter
imul
xlat
aad
mov
call
and
push
xor
movsb
pop
int
stos
add
cmp
jo
dec
xor
xchg
push
ja
stos
xchg
outsb
inc
orl
xorl
mov
popa
out
or
lea
out
pop
jo
sub
cmpsb
dec
cmpsb
push
or
xor
cmp
inc
sbb
jno
lea
xchg
or
imul
cmp
push
int
and
stos
fsubs
xchg
test
pop
lods
sbb
jo
lea
jmp
cmp
jmp
push
lods
pushf
add
fimuls
sub
out
std
sarl
adcb
in
enter
pop
loope
inc
jle
movsl
jg
pusha
and
push
movsl
push
jb
lret
or
lret
push
cltd
add
cmc
pop
cmp
ljmp
aad
push
inc
xlat
push
add
stos
cwtl
mov
xchg
or
sub
out
xchg
daa
outsl
mov
mov
push
fmull
and
add
daa
cltd
xchg
fnsave
jbe
pushf
daa
inc
mov
mov
adc
xchg
inc
daa
popf
cmc
push
test
mov
jle
pop
mov
popf
and
mov
loopne
fisubl
dec
mov
mov
hlt
imul
std
cmp
adc
push
or
js
cmpsl
push
push
aaa
add
fiadds
or
sub
lods
pop
out
out
pop
add
jns
mov
add
sub
sub
shrl
rcr
cld
mov
push
out
outsl
push
mov
push
aaa
push
dec
out
data16
adc
xor
insl
fldt
lods
imul
cltd
or
clc
daa
fnstcw
popa
lret
lcall
xlat
popa
jecxz
rol
mov
sub
pushf
shr
fcoms
sub
add
mov
push
popa
rorb
pop
addl
and
sub
add
jno
outsb
repz
movsb
ror
pop
add
mov
inc
fmul
fwait
xor
lret
lds
dec
jecxz
and
or
fcoml
mov
cwtl
push
pop
movsl
popf
hlt
cli
pop
mov
jno
mov
sub
aad
mov
scas
xor
dec
popa
cmp
mov
inc
xchg
sarl
push
icebp
adc
pop
ja
sbb
push
sahf
pop
cmp
or
pop
ret
addb
sbb
mov
jmp
sub
lds
cmp
popf
jp
aas
call
mov
test
in
xlat
repnz
cmp
inc
fwait
or
mov
jmp
dec
repnz
sbb
xchg
aas
or
cmp
inc
push
div
aas
add
aad
dec
outsb
sbb
cmpl
enter
out
jns
cld
add
call
stos
and
in
adc
in
dec
or
addr16
fsubrp
xchg
inc
xor
rorb
jns
jno
ret
js
or
jo
push
push
lret
and
in
lret
cmp
clc
push
dec
outsl
sbb
je
mov
sbbl
int3
dec
cmp
rcll
or
jo
mov
neg
fimuls
sub
mov
mov
xchg
and
xor
lret
push
mov
insb
xchg
xchg
mov
lea
push
mov
inc
fwait
add
lea
xchg
testb
or
fsub
pop
psubd
lahf
cvtps2dq
movsl
fidivs
es
sub
or
inc
push
sub
jno
fisttpl
popf
fnstenv
cli
add
lret
add
mov
insl
sub
in
push
out
imul
or
push
pop
cld
ror
adc
cmp
sub
call
mov
aam
lret
pop
ret
mov
shl
lds
add
jg
push
and
pop
push
cwtl
lcall
and
test
ljmp
lret
pusha
das
leave
in
bound
xor
jp
test
jmp
clc
push
xchg
jmp
inc
faddl
fsts
jno
dec
xor
shl
aaa
cltd
lret
nop
xlat
jp
call
pop
sbb
add
aas
insb
xchg
mov
mov
rorl
js
subb
scas
lock
movsl
pop
in
loop
icebp
mov
add
outsl
xchg
popf
push
ja
or
mov
stos
icebp
mov
mov
les
or
cmp
lret
insl
fldcw
int
mov
push
repz
push
xor
stos
cmpsl
pop
add
test
ja
sbb
aas
decl
pop
sbb
mov
repz
addr16
push
or
sti
push
roll
ljmp
xchg
push
lods
outsb
cltd
cmc
stc
movsb
mov
bound
addr16
xor
repz
repz
mov
pushf
repz
lcall
test
jno
mov
inc
mov
repz
dec
lcall
sub
jle
aad
mov
xchg
subl
jno
cmp
push
icebp
add
inc
sbb
mov
test
flds
out
mov
jge
test
mov
adc
xchg
cmp
out
mov
repz
adc
inc
mov
dec
ss
and
inc
cmp
and
shl
or
push
popf
iret
sbb
add
call
fst
jb
sub
test
xor
in
test
xchg
inc
push
add
mov
fcmovne
mov
sub
xlat
sahf
sub
pop
push
cld
cwtl
repnz
das
sub
dec
sub
and
mov
pusha
inc
pop
and
ja
mov
push
int3
aas
mov
into
imul
out
dec
jnp
lods
cmc
fdivl
out
sub
dec
insb
mov
cmpsb
or
repz
mov
ret
subl
cli
negb
aas
aas
pop
add
mov
rolb
jcxz
ljmp
jge
mov
outsb
cmp
jg
push
dec
movsb
mov
cmc
gs
repz
mov
lcall
jno
jbe
rol
mov
add
pop
inc
pop
iret
mov
push
out
je
jnp
in
push
xor
add
jp
rcll
iret
cmpsl
cmp
ret
jmp
out
orl
bound
mov
pushf
adc
adc
mov
cltd
mov
jecxz
sub
ja
cltd
xchg
push
dec
cmp
stos
int3
fs
xchg
lahf
adc
imul
mov
push
sub
repnz
push
ds
inc
jge
lods
xor
stos
jecxz
es
test
push
inc
repz
xchg
mov
and
push
cli
inc
call
pop
mov
jns
sbb
mov
mov
pop
jb
adc
xor
inc
loop
scas
out
and
lds
sub
and
jge
dec
and
jg
xchg
sub
pop
xchg
shlb
xchg
fmul
xchg
scas
in
sti
pushf
cmp
leave
mov
sti
int
testl
es
inc
sub
pushf
out
out
dec
and
jnp
fcmovbe
jo
movsl
test
dec
or
popa
js
fiaddl
add
decl
insb
push
jnp
jecxz
dec
shrl
sbb
stc
add
sbb
mov
int
and
sarl
test
cmpb
dec
push
pushf
lods
dec
add
cmpsl
out
ds
in
stos
or
add
pop
mov
jg
shlb
add
in
mul
sub
ret
fcmovb
mov
jb
out
repz
push
addl
sbb
mov
mov
mov
sbb
enter
sub
jns
push
push
xchg
adc
xorb
mov
push
mov
rorl
popa
and
pop
adc
test
popa
fwait
enter
inc
out
push
inc
dec
dec
xor
inc
sbb
lds
lods
adc
jle
das
mov
in
push
adc
xor
std
arpl
jmp
loop
lea
hlt
adc
xor
mov
jbe
imul
xlat
or
scas
xor
lods
cmp
push
bound
mov
jecxz
dec
cwtl
mov
sti
fs
pop
sti
sbb
loop
std
push
daa
mov
and
mov
pop
mov
clc
xchg
xorl
pop
cmp
insl
xlat
jle
ja
push
xchg
mov
push
lret
xlat
sub
or
inc
sbb
jp
ret
loopne
mov
or
dec
sti
mov
fs
pop
sub
cmpsl
loope
xor
or
ljmp
pop
xchg
xchg
fnsave
xchg
cmp
add
ss
sub
pop
lret
jns
popa
adc
scas
jno
mov
je
stos
pop
in
push
or
cli
sbb
or
cwtl
jmp
xchg
and
inc
lahf
cmp
xchg
std
jns
out
subb
xchg
jecxz
pop
mov
aad
mov
fldcw
and
mov
je
int
pop
enter
ja
lret
xchg
add
xchg
pushf
sarl
push
xorl
xor
push
test
mov
ja
adc
cmpsb
mov
sub
and
pop
or
push
ss
jnp
push
pop
dec
or
neg
mov
xchg
mov
call
pop
enter
clc
mov
xor
xorb
fiaddl
pop
es
jb
fsts
out
adc
imul
das
gs
ret
jge
shll
adc
outsl
adc
out
xchg
pop
loop
pop
push
push
rorl
cmp
inc
mov
mov
fcompl
icebp
outsb
mov
std
mov
xor
sbb
pop
inc
mov
jge
cmpl
sahf
iret
or
jp
mov
jle
mov
adcb
jecxz
push
jp
adc
jg
mov
fmul
xchg
mov
addr16
icebp
mov
add
es
cmp
ds
dec
sbb
bswap
dec
inc
fcoms
push
and
out
mov
jne
ja
dec
data16
sbb
mov
jae
inc
mov
aam
add
pop
enter
mov
addr16
sti
mov
ficomps
dec
push
jb
xchg
pop
push
sub
enter
mov
push
lock
jg
xchg
jne
ror
adc
cmp
outsb
pop
fwait
mov
aaa
mov
lret
mov
ljmp
mov
jmp
inc
out
push
pop
pop
fdivs
int
test
outsl
jbe
pop
push
sbb
lcall
pop
dec
ss
inc
push
add
cmpsl
or
loopne
push
lret
out
cmc
fwait
add
andb
popf
enter
or
test
icebp
inc
dec
mov
jl
sbb
hlt
cltd
push
idivb
or
aad
cmp
hlt
dec
std
xor
sarl
mov
jg
pop
lret
push
and
mov
test
mov
push
enter
std
xchg
into
mov
out
mov
push
push
dec
arpl
lahf
mov
adc
lds
mov
sub
mov
in
mov
jg
xchg
sub
mov
addr16
adc
mov
push
mov
daa
aaa
sbb
fsubr
pop
push
adc
adc
stos
fucom
xlat
sub
xchg
adcb
jmp
fstl
pop
inc
sbb
mov
in
pop
add
push
rorl
push
cmpsl
call
xchg
icebp
xchg
aam
je
inc
or
xchg
call
lret
jnp
mov
push
loope
pop
lds
adc
cs
pop
lret
mov
pop
mov
clc
jl
xchg
outsb
pop
in
xchg
sub
subb
mov
and
test
cmp
adc
aam
shll
mov
mov
out
jne
fisubs
fcomi
shrb
imul
mov
aam
sub
das
add
cmp
pop
and
mov
and
mov
outsb
sbb
xchg
and
das
pop
sub
and
dec
sub
movsb
sahf
xchg
adc
data16
clc
lgs
push
fwait
icebp
dec
mov
in
cmc
repz
mov
lret
pop
cmpsb
jb
in
loopne
mov
adc
les
lods
shll
add
lds
lds
in
sub
mov
jp
pop
sbb
cltd
fistpl
lret
outsb
inc
mov
leave
mov
mov
movsb
neg
adc
scas
test
pop
lods
add
mov
addl
out
movsl
les
adcb
mov
icebp
or
and
shrl
repnz
lret
insb
lcall
pop
inc
icebp
fisubrs
montmul
cmpsb
test
sbb
pop
or
sti
fisubl
sub
lods
dec
ret
sarl
imul
pop
add
cmp
pop
int3
or
xor
int
es
mov
js
mov
or
stos
add
add
mov
pop
ja
mov
add
aam
cmp
js
imul
repnz
sarl
stos
mov
int3
adc
ret
cmp
outsb
mov
mov
loop
push
sbb
mov
mov
inc
cmpl
xchg
popf
test
inc
gs
fldcw
fidivl
popf
jl
cmp
and
or
push
cmp
xchg
jp
mov
push
fimull
fwait
xchg
xchg
xchg
iret
pop
pushf
adc
pop
imul
or
xor
adc
mov
jle
cmpsb
stc
sbb
adc
call
daa
repnz
rcll
clc
outsb
mov
in
fcoms
cmp
jnp
add
adc
cmp
subb
xchg
aam
push
enter
aad
lock
jb
and
push
push
push
jns
or
or
cmp
divb
and
cld
push
jo
inc
pop
popa
jecxz
cmpsb
mov
inc
xlat
and
or
mov
mov
mov
and
cmp
xor
addb
or
cs
js
inc
sbb
pop
leave
fsubs
mov
pop
push
and
cmp
dec
movsb
adc
adc
xlat
sbb
push
push
mov
mov
filds
xchg
cmc
mov
dec
sbb
and
pushf
xor
fistl
mov
fwait
push
inc
add
or
cmp
ss
loope
push
ret
jmp
or
push
scas
shll
push
jmp
add
movsl
bound
je
add
push
dec
and
mov
data16
push
mov
sub
pusha
clc
add
fiaddl
shlb
aaa
ja
jo
repnz
add
pop
in
push
insl
sub
aas
in
sub
dec
jl
aaa
and
mov
pop
mov
dec
xchg
popf
mov
roll
orb
iret
daa
mov
ja
popa
and
rolb
or
in
sbb
push
xchg
lret
popa
fisttpl
cmp
fadds
push
sti
pop
mov
pop
incl
dec
dec
cld
sbb
dec
jo
fists
mov
lock
sbb
stos
shl
rorb
lcall
mov
sbb
adcb
lock
sub
cmp
je
add
pop
jmp
ja
xor
int
repz
xor
and
gs
out
cs
bound
icebp
fdiv
mov
inc
sub
lods
sbb
cmc
push
cltd
stos
pop
fcomps
sbb
insb
mov
sub
mov
jp
cltd
inc
cmc
jbe
xchg
mov
stos
add
test
dec
push
inc
aaa
movsb
les
add
dec
pop
jp
mov
xor
das
sub
loopne
loop
aas
out
sarb
fistpl
repz
push
pop
mov
rcl
lea
push
daa
pop
xchg
cmp
inc
into
out
ror
iret
pop
cmp
pop
xchg
jo
lods
sub
repnz
sbb
fisubl
loop
fwait
mov
hlt
mov
sub
mov
cmpsl
into
out
xchg
out
xchg
popf
int
sub
fdivrl
push
mov
daa
dec
or
jge
mov
jno
clc
push
xchg
std
incl
dec
adc
xor
mov
mov
outsl
stos
ret
cltd
lock
adc
mov
sbb
xchg
daa
mov
pop
push
test
cmp
dec
stos
inc
popf
xchg
xchg
clc
or
pop
lret
mov
jp
add
sbb
inc
out
rcr
rorl
je
aas
pop
movsb
movsl
xor
fnsave
enter
pushf
sub
dec
mov
into
xor
cmpsb
dec
aas
cli
jb
insl
or
ss
add
aam
dec
jne
jg
lock
dec
fs
ljmp
pusha
inc
inc
adcb
xor
stc
mov
rorl
jbe
push
cmpsl
push
lods
jno
ljmp
dec
cmpsl
lods
xor
lods
movsb
sbb
insb
lret
loopne
jecxz
fs
out
mov
outsb
pop
and
mov
sub
push
push
insb
mov
and
aaa
pushf
add
sbb
in
scas
inc
ret
pop
mov
adc
and
test
fsts
fcompl
mov
xchg
pop
lahf
push
ss
lods
inc
inc
test
test
aad
mov
rorl
js
sbbl
jno
fmuls
mov
adc
bound
in
insb
pop
gs
pop
fdivs
adc
fnsave
and
mov
aas
int3
arpl
mov
and
push
rcrl
sarl
out
push
lret
nop
jmp
in
call
addr16
or
test
xor
pusha
lods
call
and
xor
or
lret
cmpl
les
cmpsl
pop
notl
in
and
mov
pop
push
daa
sub
sub
data16
adcl
mov
pop
cmpsb
xchg
jecxz
sub
fstps
fs
arpl
int3
nop
jecxz
neg
lods
mov
and
cmp
loope
push
dec
inc
out
cmp
ds
mov
fs
jne
cmp
add
shlb
aam
insb
sbb
or
xchg
mov
xor
jmp
fcompl
push
mov
fdiv
iret
not
pop
add
and
lret
push
dec
or
cmp
test
sub
xchg
cs
lods
pop
adc
test
iret
clc
aad
cmp
sbb
jno
popw
pop
gs
mov
sbb
xor
xchg
mov
andb
xchg
cmpsb
es
dec
into
push
pop
cs
or
mov
cmpsl
sub
cmpsb
hlt
push
mov
jns
cmpsb
push
xchg
add
mov
push
mov
xchg
movsl
sbb
fnstsw
xchg
sbb
cs
mov
scas
pushf
pushf
mov
rcrl
adc
add
pop
movsb
sub
or
pop
pop
stc
cmp
popf
mov
cmp
jbe
enter
jns
out
mov
lahf
out
pop
dec
cmpsl
lock
mov
cmc
mov
push
dec
lea
adc
fidivl
pop
xchg
add
cld
sub
inc
push
mov
cmc
fistpll
mov
sub
fstps
adc
mov
adc
loop
jmp
add
mov
push
mov
stc
sub
cmp
out
push
jne
mov
sub
jns
or
pop
add
jb
cld
loope
repz
jmp
mov
xor
rolb
adc
sbb
into
ljmp
dec
sti
jns
jbe
xor
insl
pushf
movsb
sub
ret
inc
xchg
jmp
mov
insb
cmp
jae
mov
add
call
add
mov
cmp
mov
aas
arpl
push
out
xor
jp
jno
sbb
stos
ret
mov
jl
xchg
mov
inc
adc
push
xor
mov
int
cmp
add
loope
mov
xlat
nop
mov
xchg
enter
mov
inc
adc
repnz
shr
dec
dec
pop
movsb
sub
arpl
cmpsb
inc
popf
sbb
test
xchg
in
xchg
out
repnz
out
in
pop
rcl
mov
pop
movsl
mov
out
mov
pop
aam
aad
pop
mov
aas
push
dec
shlb
lods
pop
in
sub
repnz
xlat
adc
mov
push
add
data16
bound
xlat
xlat
lret
sub
inc
mov
push
repnz
push
into
add
jns
enter
sbb
inc
xor
fistps
ljmp
jge
mov
daa
mov
and
je
cvttps2pi
cli
or
xchg
pop
out
out
xor
pushf
ljmp
aaa
lea
out
into
push
cli
xchg
ds
js
and
dec
mov
inc
pusha
cmc
aam
xchg
roll
cli
cmp
adc
mov
scas
sahf
jmp
fstpt
dec
xor
scas
adc
jl
pop
ds
pop
mov
movb
push
jg
out
jae
loopne
iret
leave
push
popf
xchg
sbb
int
inc
in
mov
xorl
mov
adc
sbb
lcall
mov
xlat
std
mov
fs
sub
dec
mov
jne
pop
adc
push
gs
or
add
aas
loop
nop
adc
mov
mov
add
or
mov
pop
loope
pop
fists
pop
lods
out
and
add
jl
stos
push
lock
aaa
lods
pop
mov
cltd
sub
jns
ficompl
daa
add
nop
xchg
sbb
push
les
fsubs
sbb
test
push
adc
jb
inc
mov
add
and
loop
cli
xorb
pop
sbb
pop
orl
xchg
dec
out
cmc
pop
jne
pop
idivb
mov
shll
xchg
out
aas
push
fldcw
xchg
outsb
sub
sbb
mov
pop
push
sbb
cmp
mov
cmc
mov
das
jl
enter
sti
cmp
test
pop
pop
ficompl
inc
addr16
mov
and
lcall
add
call
scas
mov
imul
push
sbb
mov
test
out
popl
lret
shrb
cmpsl
out
mov
mov
lds
lea
jmp
or
cmp
movsb
xchg
xchg
pop
aas
data16
push
out
xchg
loop
cmp
mov
outsb
nop
jo
jecxz
adc
inc
mov
xor
push
fs
mov
insl
and
mov
push
sti
arpl
rcrl
xchg
sbb
or
in
lret
lret
mov
jns
loopne
xchg
mov
pop
es
mov
imul
sub
out
xor
cmp
push
mov
pop
xor
js
nop
rcrl
into
mov
push
es
cmp
add
xor
jl
lea
and
shll
xor
xor
pop
mov
xchg
jecxz
test
cmpsl
cmpsl
jbe
nop
sbb
or
in
movsb
xchg
xor
pushf
dec
jbe
xchg
imul
adc
cltd
inc
mov
sbb
mov
pop
int
pop
jne
push
mov
ja
test
stos
cmpsb
push
mov
js
inc
lahf
xchg
popa
and
push
dec
dec
mov
push
in
pop
scas
sbb
xchg
xchg
add
rcrb
lcall
or
or
stos
push
or
rcrb
push
mov
sti
mov
loop
xchg
mov
ja
mov
mov
push
mov
xchg
test
cmpsl
inc
mov
xor
cmpsl
dec
repz
clc
dec
pusha
cld
cmp
repz
cmc
adc
int
icebp
adc
lods
cmp
std
jp
cltd
push
cltd
sbb
imul
das
or
jecxz
not
out
repz
cmp
in
cmp
ss
adc
xor
jl
cmp
out
mov
scas
loop
mov
cmpsl
push
out
push
stos
sar
adc
mov
dec
or
pushf
lea
ja
loope
inc
mov
push
mov
add
andnps
aam
js
in
data16
es
jg
fisttpl
negb
inc
shlb
mov
aaa
push
repz
test
add
insl
sub
or
in
stos
arpl
cli
push
cwtl
jge
rcrb
mov
ret
pop
mov
out
mov
daa
pusha
nop
lock
scas
sbb
in
jg
push
aad
mov
stos
cmpsl
lods
xchg
xchg
push
call
in
loop
inc
xor
dec
dec
clc
mov
clc
jb
int
pop
dec
loop
insl
stos
fcoml
xchg
and
jp
push
mov
inc
sub
lea
cwtl
dec
test
mov
test
jo
pop
inc
int3
arpl
sub
das
inc
call
stc
addr16
movsl
ficoml
ficoml
imul
cmp
mov
mov
call
sub
ljmp
rcrl
push
xor
xchg
es
mov
imul
adc
mov
sub
push
inc
add
dec
dec
mov
addr16
lea
fcompl
cs
and
cmp
and
push
jg
sbb
or
push
xor
pop
cwtl
pop
add
mov
scas
sub
gs
andl
mov
fsubr
es
sbbl
cmc
sbb
clc
rol
cltd
sbb
xchg
and
shlb
out
je
xchg
add
imull
add
xchg
movsb
pop
xor
xor
cmc
enter
adc
imul
popa
xor
sti
jge
in
or
ret
xor
shll
popf
int
mov
xchg
inc
dec
xlat
bound
insb
arpl
aas
mov
mov
sahf
dec
sbb
cmp
sbb
roll
cmp
adc
cmpsb
pop
fisubs
cmpsb
fsubrp
cmp
jl
fiadds
sbbl
dec
dec
notl
push
jg
cs
int
fnsave
mov
xchg
test
out
pop
imul
loop
cmp
daa
mov
jp
adc
loop
rclb
repnz
mov
js
push
mov
imul
pop
cmp
decb
pop
mov
das
push
mov
aad
mov
test
loop
enter
in
jge
add
jno
push
sub
movb
push
push
enter
pop
mov
mov
jnp
xor
ret
popf
xchg
aaa
mov
outsl
sbb
jnp
ret
fnstenv
xchg
movsl
pop
dec
inc
lock
fdivl
lods
mov
push
jae
inc
sub
pavgb
aad
pop
pop
inc
pop
or
das
pop
cwtl
bound
xlat
or
mov
aam
rcr
jmp
popa
sbb
dec
inc
cld
leave
xchg
push
dec
lret
or
add
sub
jne
cmp
insl
out
mov
addb
xor
mov
lods
and
jp
jg
les
jo
cmpsl
subl
or
jno
stos
ss
enter
ja
and
popf
out
push
mov
cs
sub
adc
aas
pop
fucomi
popl
das
adc
and
imul
cmpl
mov
push
jo
loopne
jo
popf
fldenv
xchg
and
xor
cs
aam
cmpsl
rcrb
push
fisubl
outsb
and
jbe
or
rcrl
nop
sbb
pop
push
loop
sbb
repz
sub
addr16
jmp
or
add
dec
sarl
add
loop
mov
sub
pop
mov
pop
aad
insb
cmpsl
test
bound
jmp
fnstenv
sub
fcomi
add
mov
fnstcw
out
mov
pusha
or
dec
stc
int3
rcr
jo
jno,pt
loope
or
pop
mov
mov
pop
and
inc
adc
xchg
out
insb
pop
cmp
loope
in
mov
sti
sub
and
loopne
pop
pushf
rorl
mov
cld
repz
mov
or
xor
sub
cld
add
cmp
roll
mov
dec
jae
cmp
lds
adc
pusha
cmp
mov
movsl
insb
push
movsl
adc
repz
roll
fistl
test
mov
in
pop
ja
dec
or
inc
dec
sarb
fsub
int
cld
mov
out
add
icebp
aaa
shlb
push
imul
pop
outsl
push
cmp
xchg
movsb
xor
enter
inc
insb
aaa
aas
adc
xchg
outsl
fildll
setle
dec
sub
dec
dec
xchg
ja
aaa
adcb
bound
xchg
mov
dec
in
dec
pop
mov
sbb
jo
jg
int3
pop
sahf
mov
xor
inc
dec
mov
mov
pop
inc
mov
outsb
lahf
xchg
fucomip
and
movsb
insb
mov
and
fistl
dec
xlat
rorb
and
or
push
mov
int3
pop
pop
jecxz
movsl
pop
sub
cmp
fucom
cmp
test
in
cmpsl
and
cmc
pop
mov
lcall
out
sbb
jmp
jl
xchg
sub
sbb
cmp
repz
push
cmp
mov
inc
jle
lahf
xchg
scas
lret
push
outsb
sahf
mov
sarb
adc
cmp
push
cld
adc
addr16
sbb
mov
push
ljmp
fildll
loopne
xchg
xchg
cmp
aad
xchg
and
out
outsl
jno
mov
and
insb
adc
nop
sahf
xor
mov
inc
mov
scas
out
mov
fstp
test
pop
mov
jne
jnp
cmp
int3
push
add
leave
fwait
sbb
decl
fisubl
cli
mov
js
cmp
lahf
in
sahf
mov
mov
dec
inc
int
je
xor
or
aam
pop
bswap
push
out
adc
icebp
pop
push
call
inc
sub
lock
shll
adc
xor
mov
pushf
mov
mull
adc
push
cmp
pop
or
pushf
or
lea
push
and
out
add
daa
push
xor
and
sbb
adc
xchg
cltd
stc
jg
xchg
sbb
xchg
loope
add
adc
dec
mov
shlb
push
mov
inc
call
leave
dec
rcrb
sarl
fs
dec
jno
jecxz
in
xor
test
xchg
xor
or
or
mov
cli
sub
mov
xor
xor
mov
fcoms
sbb
rolb
jbe
shrl
adc
push
pop
rolb
jb
and
and
add
jg
mov
or
ret
add
movl
push
adc
mov
fwait
hlt
fs
jle
and
rclb
imul
sbb
bound
leave
into
dec
cli
loope
aad
cmp
ret
jg
sub
sub
fsts
out
inc
into
adc
inc
test
mov
mov
mov
test
xchg
mov
or
inc
cmpsb
mov
jb
mov
ja
daa
xor
int
sub
lods
enter
insb
jp
push
orps
add
pop
aam
stos
jo
push
jne
stos
pusha
lods
push
xchg
pop
sub
enter
pop
xchg
cmp
ljmp
jnp
fidivs
fwait
cli
and
xchg
pop
adc
xor
or
mov
add
cwtl
outsb
jo
cmpsb
pusha
movsl
xlat
call
fldt
dec
adc
pop
adcl
push
push
xor
icebp
shrl
add
cmpb
push
cli
sbb
jmp
repnz
daa
dec
mov
movsl
or
fidivrl
out
cmpsl
lahf
test
movsb
hlt
dec
push
jo
ret
aaa
mov
icebp
data16
add
fstpt
cmpsl
mov
fs
hlt
clc
leave
ficoms
insb
pop
les
ret
mov
popa
stos
hlt
sub
xor
orb
movsl
jge
jcxz
pop
dec
or
mov
cli
mov
js
cli
sbb
inc
xchg
cmp
nop
sbb
ja
je
ficoms
add
sub
jp
pop
sub
push
xor
mov
xor
scas
outsl
fwait
sahf
js
inc
lods
out
loop
les
aaa
xchg
aaa
cmpsb
iret
aad
push
out
fs
inc
cmpsb
leave
lds
iret
lret
int
mov
lods
push
or
mov
push
shrl
mov
pop
imul
subb
pop
and
rorl
jnp
jge
sti
and
cld
xchg
push
xor
inc
ret
hlt
jno
lahf
scas
mov
fmul
and
mov
sbb
mov
sbbb
mulb
in
jmp
add
rorb
push
inc
sahf
inc
out
movq
arpl
dec
out
std
and
inc
and
inc
bound
call
jae
mov
or
push
sub
and
add
scas
fisubrs
xchg
xlat
ret
add
xchg
pop
xor
test
and
cmpb
sbb
push
mov
xlat
scas
xchg
lods
faddl
dec
imul
loope
cli
add
adc
xor
mov
and
cltd
sarb
pop
lds
rcrb
lods
pop
dec
addr16
pop
imul
push
lds
or
das
dec
adc
in
movsl
repz
add
lcall
push
push
arpl
shrl
jp
pop
out
int
inc
push
out
cld
and
shr
lods
sub
and
orl
fildll
dec
push
divl
mov
xlat
sub
adc
aas
std
test
rcrl
fdivrl
inc
adc
pushf
arpl
divb
cmp
cmp
push
push
or
pop
add
jmp
cwtl
jo
ret
jl
mov
dec
out
popa
cmpsl
imul
inc
fisttpll
sbb
aas
sub
jb
sub
xchg
lret
cmp
loope
sbb
push
add
xchg
jb
push
add
mov
leave
cltd
into
in
xor
aas
cmp
mov
call
aaa
or
sub
jnp
orps
mov
cmp
jge
push
insl
subl
push
int
inc
mov
andl
xchg
iret
xchg
cmp
clc
xchg
outsb
mov
fldt
lods
mov
add
enter
movsl
ficoms
mov
test
lods
push
or
mov
aaa
add
mov
inc
adc
into
ffree
mov
cmp
shrb
fisubrl
cmpsl
popf
jne
mov
ss
or
mov
pop
jno
notl
adc
push
add
scas
and
and
cmp
loop
push
adc
mov
add
mov
fcmovnb
orl
roll
stos
sub
sub
jo
in
xchg
ficoms
jne
jns
clc
into
ja
lds
push
popf
mov
pop
pushf
xor
insl
jp
gs
outsl
mov
mov
leave
mov
ja
jle
addr16
loop
xchg
arpl
jne
dec
mov
scas
bnd
jne
cmc
pop
shl
fistps
scas
inc
push
xor
test
push
out
mov
lcall
aam
mov
adc
push
jecxz
dec
cmp
push
fildll
sti
add
aad
fwait
test
int
xchg
data16
jbe
stc
or
ljmp
fs
adc
push
fisttpll
js
cmp
je
and
inc
cmpsb
or
cmp
lret
addr16
push
adc
movsb
xor
inc
rolb
adc
mov
dec
cmp
jmp
jnp
inc
xor
inc
sbb
pop
adc
shl
lds
outsb
pusha
mov
xchg
mov
ja
mov
iret
sti
shl
mov
imull
push
jecxz
lahf
scas
adc
movsb
xor
jmp
imul
dec
test
fstpt
add
fisubs
xchg
scas
jb
push
xchg
and
cs
imul
ljmp
das
sub
jmp
or
and
loope
pop
push
movsl
sbb
cmp
decl
mov
xor
pop
nop
fmull
fld
stos
add
in
adc
popa
and
sub
push
push
movsl
mov
les
dec
and
loopne
mov
inc
jno
cltd
fs
and
jmp
leave
or
repnz
dec
add
sub
push
dec
pusha
dec
ds
xchg
mov
mov
or
aas
ja
push
and
loop
cmp
outsl
inc
inc
dec
jp
jno
daa
and
lret
jnp
cmp
movsb
inc
aas
out
addl
fwait
mov
adc
fs
add
or
paddusw
inc
stos
mov
aam
fidivrl
pop
loop
mov
add
add
cmp
jne
cld
push
mov
jno
adc
mov
adc
fwait
adc
dec
je
and
icebp
jmp
mov
mov
cld
js
push
push
fwait
bound
mov
leave
push
mov
mov
gs
mov
dec
sub
sub
xor
mov
ss
fs
addr16
rcpps
and
js
xor
aas
mov
movsl
test
pop
rclb
imul
jge
mov
neg
lock
jbe
jbe
out
arpl
dec
scas
cs
not
fcoms
pop
das
pop
and
in
mov
xor
dec
insb
pop
daa
jmp
dec
nop
ja
iret
mov
loop
xchg
pop
jns
jbe
pop
cmp
nop
cmpsb
sub
mov
jl
mov
sbb
add
jl
in
insl
enter
hlt
orl
iret
lret
inc
ret
out
notb
shl
mov
and
xor
and
mov
xchg
adc
sbb
cmp
sub
movsl
inc
adc
loopne
inc
xor
lea
filds
mov
aas
std
js
xor
loop
sbb
test
lods
imul
pop
xchg
push
sahf
fwait
dec
dec
pop
decl
mov
out
push
pop
cmp
mov
mov
lock
cld
xor
pop
dec
fistpll
imulb
gs
adc
and
push
test
push
sub
aas
bound
sbb
cmp
cmc
sbb
stos
pop
mov
sub
out
push
inc
sbb
and
pavgb
int3
rorb
xor
jne
lods
mov
daa
xchg
dec
inc
jle
pop
or
bound
and
mov
jl
dec
outsb
xor
int3
imul
test
pop
pop
jle
mov
iret
push
in
enter
dec
cmp
jmp
push
dec
dec
ds
in
push
dec
das
xor
sbb
jg
and
shlb
dec
mov
add
xor
and
jmp
xchg
pop
ret
xchg
jae
xor
mov
mov
jo
fs
aam
and
jne
push
or
xor
ret
je
jg
ljmp
xchg
and
sahf
jns
sbb
add
cmp
push
push
push
pop
aaa
dec
fdivl
in
adc
test
and
cmpsb
movsb
repz
test
icebp
loopne
jmp
pop
sub
dec
ds
pop
cmpsl
cmc
push
sbb
int3
mov
xor
mov
sub
push
mov
paddsb
adc
insb
mov
push
jbe
push
fwait
add
fdivs
in
lret
mov
xchg
movsb
and
sti
test
aaa
push
push
call
aam
push
sbb
insb
dec
add
bnd
and
jno
xchg
pop
jmp
jbe
dec
shr
call
int3
fisttpll
and
cli
mov
in
xor
das
insb
cs
bound
nop
xchg
mov
jbe
leave
sbb
or
sahf
sub
imul
dec
rorl
push
push
es
mov
push
stc
jbe
daa
popa
loopne
in
adc
xchg
mov
loope
mov
fistps
shl
outsb
sub
repnz
fsubl
add
xlat
mov
sub
pushf
jno
aaa
mov
les
lret
and
outsb
xchg
rcll
sti
push
jp
mov
sbb
rcrb
clc
shl
cmp
loope
mov
loope
pusha
pop
call
dec
cmp
add
bound
add
loope
cmp
in
push
jge
lds
into
outsb
cmp
inc
xchg
cli
lods
and
repnz
stos
js
test
movsl
bswap
push
push
and
add
and
cmc
pop
in
xchg
sub
imul
sbb
rolb
jae
jbe
ret
inc
or
mov
mov
fimull
mov
add
outsl
cmp
pop
cmp
sbb
rcl
mov
pop
fmuls
ss
dec
scas
aaa
jne
or
xchg
jne
mov
pop
xlat
pop
test
fadd
movsb
pop
dec
mov
or
or
inc
js
sbb
subb
inc
pop
pop
cs
cmc
xchg
pop
push
out
mull
scas
js
and
xchg
sbb
cmp
xor
jb
dec
cmc
and
cltd
push
push
jecxz
je
pop
mov
add
in
out
pop
pop
jge
xchg
lods
pop
cmc
call
repz
dec
fs
xchg
mov
hlt
push
push
orl
int3
test
and
sarl
aad
mov
dec
stc
add
loopne
inc
popf
push
xor
test
insl
stos
fsubl
pop
pop
jne
insl
push
sti
dec
or
jl
scas
cmp
xchg
addr16
mov
lock
vfrczps
imul
sub
adc
inc
into
loop
stc
scas
xchg
dec
aam
pop
push
test
cmp
xor
imul
test
jle
and
xchg
gs
lds
pop
les
fldl
cltd
aad
jecxz
test
mov
lcall
mov
insb
lods
sbb
or
dec
lahf
outsb
ret
cmp
mov
push
scas
inc
fdivs
fstpl
adc
inc
xchg
push
lcall
lahf
or
in
jecxz
cld
push
mov
ja
push
cs
sub
dec
outsb
push
es
aaa
push
push
cmpl
push
mov
test
sub
sub
cld
fstpt
loop
ror
push
or
mov
andl
ret
adc
mov
stos
adc
adc
andb
or
sub
dec
inc
sub
push
inc
push
scas
push
mulb
adc
xor
mov
push
mov
call
push
adc
ss
mov
mov
gs
jp
pushf
call
hlt
dec
jns
int3
mov
js
xor
sahf
into
dec
addb
mov
rcrl
mov
sub
cltd
mov
push
inc
daa
js
mov
fucomi
push
mov
sahf
lds
sub
rolb
pop
pop
and
sahf
cwtl
faddl
push
repnz
adc
xchg
sbb
out
test
movsl
fwait
insl
xor
cld
ja
add
pop
out
xor
ret
cmp
cltd
jb
idivl
cwtl
push
popf
mov
fs
jnp
and
pusha
fimuls
push
xchg
xchg
jge
xor
test
repz
out
inc
pop
xadd
int
andl
cmpsl
cltd
roll
cmpb
dec
imul
adc
bound
cmpsb
mov
sub
fdivrl
xor
sub
mov
cmp
push
es
push
neg
xchg
ss
pop
xor
jmp
sub
xlat
mov
lods
and
inc
sbb
daa
neg
arpl
mov
mov
hlt
sbbl
pop
loop
dec
and
pop
jge
mov
lret
test
int3
pop
adc
push
leave
cltd
sub
rorb
mov
in
call
mov
mov
lcall
push
lods
mov
inc
pop
sub
push
addr16
xor
cmp
gs
cli
push
pop
ret
ss
rep
ja
cmp
jne
add
jb
adc
jmp
push
mov
push
inc
lret
loope
xchg
mov
jle
push
add
cld
jle
in
and
aam
dec
lcall
pop
inc
jle
daa
or
and
push
adc
test
pop
aad
mov
jno
inc
pop
add
je
ja
mov
mov
mov
jmp
xchg
movsl
clc
wbinvd
mov
loope
faddl
notl
sbb
push
into
aas
pop
cmp
mov
add
test
pop
mov
or
pushf
and
jmp
jge
scas
jle
xchg
sbb
add
push
scas
imul
xor
add
repz
jg
lea
das
jge
test
rorb
sub
insb
data16
add
rcrl
jbe
xchg
push
in
lock
ljmp
or
int
sub
push
test
dec
idivl
sbb
aas
out
in
jb
cmp
jmp
rclb
aam
add
icebp
pop
and
xor
ss
lret
and
dec
ja
jmp
mov
push
or
stc
xchg
popa
jne
mov
mov
aad
stos
mov
jge
sub
mov
scas
push
mov
and
sub
cld
ficoms
jge
dec
ficoms
xchg
mov
add
std
sbb
lret
lock
push
push
jno
fisttpll
outsb
inc
popa
lods
mov
in
inc
movsl
mov
hlt
lea
out
sub
movsl
je
or
insb
insb
bound
push
lods
cmp
and
dec
repz
push
pop
dec
ret
mov
pop
sub
push
jno
rcrb
test
push
or
xchg
inc
and
fbld
push
cmp
mov
xchg
enter
jle
push
push
add
jmp
movl
mov
mov
ret
fbstp
stc
gs
pusha
scas
mov
mov
and
in
dec
arpl
cmp
lods
dec
fmuls
jle
xchg
mov
and
aas
repnz
mov
add
ret
leave
mull
inc
lahf
cli
jne
arpl
out
in
test
or
sub
scas
mov
sub
mov
std
ffreep
call
add
cli
sahf
int
cwtl
in
adc
iret
cli
test
sub
roll
dec
add
negb
stos
xlat
add
gs
xchg
outsl
cld
xchg
sti
mov
push
pop
out
addr16
cmp
fcompl
push
sti
cltd
fisubrs
aad
mov
sbb
or
mov
mov
adc
cmp
lock
es
jne
movsl
jge
cltd
mov
sub
sahf
mov
daa
out
xlat
jmp
push
mov
add
repnz
and
xor
scas
ljmp
xlat
aam
fidivl
sahf
imul
sub
flds
dec
out
or
gs
jecxz
icebp
test
adc
fidivs
in
adc
jnp
and
adc
sub
push
lods
out
pusha
stos
sub
and
add
xor
jo
dec
cmpsb
cld
xchg
ret
sbb
sbb
mov
mulb
mov
and
mov
into
mov
mov
js
sub
mov
rep
dec
pop
or
int3
insl
push
push
pop
sahf
xchg
int3
je
dec
repz
filds
inc
pusha
cltd
jle
arpl
ja
icebp
bound
xchg
push
and
ret
pushl
cltd
nop
arpl
mov
xor
clc
or
add
jg
push
sbb
stos
or
jo
mov
int
insb
into
sbb
jl
xor
mov
js
sub
sub
pop
mov
push
and
scas
int3
dec
dec
stc
push
les
outsb
leave
ds
js
and
inc
sub
inc
dec
aad
addr16
push
mov
or
popf
lret
enter
xchg
cwtl
fwait
imul
and
aaa
jae
push
sub
mov
dec
adcb
in
sbb
push
xor
or
mov
cmp
out
xchg
fstps
jmp
sbb
pop
mov
adc
xchg
mov
lret
mov
loope
mov
and
enter
aas
imull
dec
sub
lcall
stos
mov
sbb
rcrl
pop
int3
test
std
cmp
sar
or
push
cmovne
adc
jb
sub
shlb
sahf
notb
in
addl
jmp
cltd
cmc
cli
adc
sbb
mov
xchg
scas
lods
loope
out
jecxz
ds
iret
repz
divl
addr16
stos
xor
jle
out
fwait
iret
sub
enter
xor
fists
popf
sbb
lock
lock
test
pop
pushw
and
aam
pop
mov
lcall
cmc
bound
push
jl
jmp
sahf
js
mov
rcrl
outsl
imul
add
popa
jnp
clc
repnz
mov
sbb
jo
shl
jnp
aam
push
aam
sti
cld
xor
out
lds
xchg
out
test
lds
aaa
mov
in
cmp
sbb
or
pop
je
sti
in
fbstp
loopew
lods
mov
or
leave
stos
orb
mov
mov
popf
xor
pusha
and
aaa
test
pusha
into
xchg
pusha
sbb
in
mov
rorb
cmp
out
shr
dec
dec
and
lds
xor
lods
pop
jle
mov
shll
adc
les
imul
jb
and
add
iret
in
add
divl
es
dec
xor
xchg
xor
ret
sub
sbb
cmp
imul
sbb
fmull
push
xchg
xchg
stc
jmp
push
aas
sub
xchg
cs
addr16
sub
xor
pandn
mov
sbb
sbb
dec
out
push
clc
add
scas
cwtl
shll
adc
mov
cmc
mov
jmp
stos
xor
xchg
xor
insl
bnd
sbb
scas
push
in
mov
xchg
push
into
into
sbb
add
push
aas
xor
add
mov
mov
cmp
paddb
fwait
push
pop
out
add
jnp
lcall
outsb
sub
jo
inc
mov
mov
pop
cwtl
popf
and
imul
in
insb
lods
push
cmp
pop
lds
push
dec
xor
je
pushf
lret
inc
pop
sbb
push
rclb
xorb
xor
adc
test
pop
dec
mov
mov
dec
add
push
cmpsl
sbb
in
std
dec
enter
dec
rcr
out
xchg
sub
shlb
jg
push
lock
add
js
lods
or
push
dec
cwtl
cmp
divb
lahf
push
dec
inc
enter
mov
mov
xchg
or
insl
adc
push
frstor
clc
shrl
pop
xor
mov
sub
leave
dec
ljmp
add
xchg
aad
mov
mov
and
mov
fistpll
pop
push
addb
adc
dec
cltd
pop
pushf
push
cmp
dec
or
shll
cmp
inc
daa
pause
jns
jno
int
pop
hlt
adc
imul
push
mov
mov
mov
pushf
cs
xchg
out
add
xlat
data16
dec
loopne
loopne
pop
cmp
sbb
push
cwtl
or
xchg
xchg
jp
add
mov
sub
loop
fucom
out
pop
or
fwait
xchg
repz
inc
push
cmpl
sbb
cld
lcall
sbb
add
jae
sub
std
fadds
lret
es
mov
push
scas
dec
jb
jmp
repz
stc
xlat
inc
in
lret
fs
scas
push
loopne
sbb
push
or
cltd
pushf
add
cmp
sti
mov
insb
fldenv
add
mov
movsb
pop
ds
lods
inc
mov
rcr
fldenv
pop
inc
enter
in
daa
ds
cmp
mov
cmp
imul
push
push
nop
jl
int
inc
gs
jbe
ljmp
push
loopne
movb
or
ret
pop
jmp
sbb
xchg
les
jmp
push
jp
mov
mov
popf
in
mov
pushf
sti
mov
out
cltd
outsb
mov
or
xor
mov
cltd
mov
push
lods
lcall
mov
add
dec
in
jge
fsts
mov
sub
or
mov
pop
cli
jae
cmp
dec
test
pop
sahf
mov
push
pusha
xchg
ficoms
aam
lods
pop
iret
push
loope
out
mov
mov
test
adc
loop
dec
cld
xlat
jge
adc
push
adc
iret
xor
pusha
adcl
xchg
nop
scas
mov
jecxz
lea
xchg
push
push
jle
arpl
iret
jno
ss
mov
test
negb
cmp
int
cmp
rclb
enter
jno
cld
add
into
vxorps
in
hlt
stc
push
push
ds
test
mov
xchg
push
or
or
adc
divps
aas
add
lods
loop
inc
mov
ret
imul
mov
cli
in
repz
loope
mov
mov
mov
hlt
cmp
rcl
sahf
pop
fucomi
scas
cld
pop
add
xlat
pop
dec
mov
jo
arpl
jl
xlat
pop
push
bound
popf
cld
les
pop
mov
adc
hlt
jnp
push
mov
xchg
mov
lods
inc
fstl
adc
out
stos
xor
leave
fdivl
lods
insb
lcall
mov
pop
imulb
and
sbb
pop
inc
cltd
inc
and
pop
fs
test
fnstcw
mov
inc
dec
int3
adc
pop
mov
mov
bound
fldl
ret
and
repz
mov
mov
jg
jge
movsl
das
pop
icebp
ficompl
cmp
es
sbb
mov
dec
stos
das
mov
mov
cmp
aam
inc
cltd
aas
mov
cmp
lret
mov
cmova
test
stos
adc
pop
cmpb
xor
fs
outsb
mov
inc
inc
das
or
js
std
shrl
ss
cmp
popf
inc
je
jne
imul
out
add
or
xor
adcl
or
scas
cmp
ds
imulb
dec
jns
mov
ficomps
rcl
xor
or
sub
or
sub
mov
rcr
inc
jnp
addr16
testl
fwait
xor
mov
test
lods
int
mov
mov
rcll
enter
lock
lods
pop
lret
xor
mov
xchg
mov
repnz
out
outsl
xchg
loop
test
xchg
repz
mov
idivb
xchg
add
and
movsl
imul
js
out
sub
loopne
sbb
cwtl
decl
shll
xchg
or
clc
mov
int
das
movsb
dec
sahf
pop
mov
nop
sub
xchg
mov
stos
outsb
stos
loopne
sbb
or
rcrl
pusha
sti
push
mov
aas
inc
fistpl
insb
aaa
mov
xor
in
or
cli
jne
or
popf
ret
xchg
dec
add
daa
es
movsl
jle
popf
pop
pop
pop
pop
xchg
adc
insl
push
gs
cld
xor
jb
adc
mov
jp
sbb
or
sub
mov
xchg
inc
jl
aad
test
cmp
mov
xchg
fldt
lret
xchg
adc
push
pop
lahf
call
mov
cmpb
sub
shrl
jo
jg
mov
inc
scas
test
mov
pop
ret
inc
movsl
faddl
dec
nop
fsubrs
pop
and
popa
fwait
mov
outsb
into
cmpsl
ret
fistl
add
xchg
xor
or
mov
xchg
dec
aaa
inc
popa
jecxz
sahf
cmp
sahf
cmpsb
je
mov
mov
push
ljmp
testl
mov
loopne
push
xorb
cmp
clc
push
bound
ficompl
popf
fsubrs
adc
test
stos
lods
add
sti
aad
mov
adcl
mov
fs
dec
imul
jne
dec
fwait
stc
scas
mov
lods
idiv
fldcw
hlt
jo
inc
pop
mov
adc
xchg
xchg
ja
sbb
xor
and
out
dec
adc
je
lock
jne
daa
enter
mov
dec
or
xchg
imul
lret
pop
shrl
push
cmp
aas
sbb
pop
rclb
int3
fwait
add
or
lret
cmpsb
fninit
sar
and
repz
shrb
mov
stos
and
fdivrl
dec
aas
or
mov
fiadds
lods
popf
add
arpl
inc
into
stc
outsl
mov
testl
movsb
mov
push
xor
and
xchg
loopne
arpl
pop
mov
enter
pop
mov
out
divb
pop
mov
es
mov
fadds
or
adc
andb
lcall
pop
jmp
xorb
sub
cld
in
pop
pushf
adc
xor
fldl
dec
es
xchg
arpl
sbb
and
push
enter
and
iret
cmpsl
add
mov
xor
mov
in
fwait
push
mov
lds
dec
xchg
jg
icebp
sub
in
scas
ss
push
fiaddl
add
enter
out
xchg
pop
pop
popf
and
or
ja
jl
pop
dec
dec
in
ja
mov
ja
ja
adc
xchg
xchg
jno
seto
ljmp
cmpsb
jno
rcl
cmp
adc
daa
dec
imul
push
rcll
movsl
rcl
sti
negl
push
std
xchg
mov
in
fwait
lods
inc
and
les
mov
sti
xchg
and
dec
add
cs
sbb
cmp
pop
push
mov
lahf
push
scas
mov
jae
push
inc
inc
cmpsl
loopne
jbe
adc
or
and
add
dec
cmp
cli
pushf
dec
jno
lahf
shll
cld
mov
fimuls
icebp
add
or
lret
add
cmp
and
xchg
sub
test
fucomi
jae
sbb
pop
mov
movsl
pop
in
push
and
loop
je
dec
aas
into
inc
aam
jo
loopne
xor
inc
inc
and
enter
sub
or
fistpll
lahf
inc
add
push
dec
loope
mov
push
lret
cs
into
sbb
xor
lret
sub
mov
add
xor
cmp
into
inc
or
and
imul
cltd
sub
mov
mov
mov
pop
add
xchg
ja
sbb
loop
aad
push
jo
loopne
add
packssdw
push
jno
sbb
mov
cmpsb
aam
in
push
cmpsb
jg
and
int3
xlat
aas
notl
mov
shlb
cmpsb
test
movsl
jb
push
push
psubb
stos
jg
push
xchg
xor
mov
sub
push
shl
or
in
pop
adc
or
out
mov
insl
fbstp
mov
mov
xor
jae
ret
xchg
cmpsl
fldcw
hlt
jl
add
jbe
and
mov
lds
out
cmc
mov
sarl
call
ret
arpl
jg
pop
mov
mov
xor
xor
cmp
and
jg
jne
dec
lret
cmp
sbb
sub
sbb
daa
out
xor
jg
outsb
dec
jo
add
flds
or
outsl
daa
mov
dec
mov
jbe
jp
arpl
movb
xor
cmp
scas
mov
adc
aam
test
push
add
jae
xor
pop
inc
pop
call
jge
jl
push
in
adc
or
lods
adc
testl
addb
dec
stos
mov
sub
or
and
mov
loopne
fistpl
orb
cmpsb
push
xchg
roll
rcl
pop
pop
push
xlat
cltd
add
push
mov
jns
jnp
andl
push
fildl
mov
fists
jae
ss
imul
aaa
fsts
outsl
mov
mov
shl
mov
and
mov
leave
gs
push
mov
cltd
int
in
lret
cwtl
push
xor
ds
sub
inc
into
fsub
cmpsl
cli
push
aad
sub
outsl
inc
xchg
push
mov
add
test
in
lea
jae
push
fwait
popa
icebp
or
push
test
out
jno
cmp
cmp
ja
shlb
or
push
inc
add
or
cld
daa
lret
pop
in
stos
cli
cmp
lcall
lahf
and
mov
inc
sub
cmpsb
mov
or
mov
jg
and
lock
popa
mov
jecxz
clc
rcrl
repnz
xchg
jnp
aam
ret
gs
push
cmc
loopne
aaa
xor
minps
push
loop
dec
lods
ret
fimuls
push
out
add
enter
fdivrs
sti
mov
ret
fimull
es
adcb
sub
or
jle
sti
fdivl
js
mov
dec
xchg
and
sbb
mov
arpl
xor
push
pushf
cmp
pop
insl
jns
or
add
insb
iret
push
mov
or
mov
sub
cli
or
sub
jle
outsl
sub
loopne
out
loope
sub
sub
dec
sbb
cmp
scas
arpl
mov
jnp
sti
hlt
mov
cmp
dec
mov
repnz
push
jl
into
hlt
mov
jnp
lds
and
dec
fidivrs
push
testb
push
xchg
leave
test
insl
das
mov
es
into
in
in
aaa
xchg
mov
or
cmp
mov
iret
call
cmp
xchg
sub
mov
je
loope
inc
rcrb
add
clc
jge
mov
out
adc
xchg
icebp
adcl
cmp
aam
popa
lahf
pop
fwait
iret
das
push
pop
jmp
mov
mov
cmp
xor
imul
outsl
divb
pop
fisubl
enter
iret
inc
sub
mov
psubusb
rclb
out
out
mov
add
jge
fadds
dec
stos
repnz
jnp
scas
xchg
mov
ljmp
out
dec
pop
pop
or
fidivrl
jmp
int
icebp
sbb
jmp
jle
ljmp
mov
mov
xchg
sub
add
or
fstpl
fs
out
test
test
call
iret
xchg
push
aad
xor
inc
add
dec
fwait
or
sarl
push
adc
pop
pop
testb
push
dec
cwtl
sub
inc
cmp
push
sbb
and
stos
mov
cmp
sbb
mov
sbb
xchg
sarb
outsl
adc
ret
mov
cmp
ret
bnd
mov
sub
jmp
mov
ret
ja
xor
dec
fiadds
cmpsb
jns
pop
les
mov
or
xchg
pop
andl
addr16
arpl
ret
lods
mov
mov
dec
adc
pop
pop
mov
push
in
shrl
mov
fwait
je
add
out
fadd
pop
pop
lea
xor
push
cmp
mov
fs
mov
cwtl
cli
bound
xorb
cli
pusha
out
push
sahf
sub
dec
xchg
push
sub
aad
lcall
bound
push
jle
dec
pop
ret
dec
xchg
aas
xlat
repz
lds
sbb
shlb
ret
in
in
cmpsl
or
pop
iret
mov
dec
pop
xor
push
push
cmp
out
cmpsb
mov
call
xor
loope
fsubrs
out
lock
add
lods
nop
pop
callw
mov
movsl
push
mov
loopne
stc
enter
test
adcl
mov
xchg
mov
or
push
push
mov
adc
mov
jle
sub
pop
out
aad
arpl
dec
aaa
nop
mov
sbb
mov
sti
scas
sbb
or
add
push
cs
lea
popa
inc
testl
in
ds
sub
aam
mov
loop
rcl
gs
mov
add
push
ds
leave
aas
insl
sbb
mov
pop
roll
push
insb
imul
pop
adc
inc
lods
test
fcoms
imul
popf
scas
add
cmpsl
iret
xchg
add
xor
in
lock
insl
xor
push
pop
nop
ret
pop
cwtl
cmp
or
in
loope
add
in
test
in
int3
fnsave
push
aad
into
pop
sbb
enter
jb
push
adc
add
jmp
bound
push
push
out
fs
inc
cmp
mov
shlb
enter
mov
or
mov
mov
in
loopne
xor
cmp
inc
mov
lea
repnz
sbbb
lock
movb
fidivrs
les
dec
mov
sub
jno
push
not
push
pop
loopne
push
add
pop
xchg
sub
repz
push
or
call
cmp
stos
rorl
cltd
cmp
lock
cmp
int3
mov
mov
xor
jle
or
jmp
sahf
mov
and
dec
subl
ljmp
stos
xor
dec
cwtl
shl
aad
bnd
cltd
xor
push
mov
lods
sub
sub
add
sub
cmc
mov
xchg
sub
xor
ljmp
mov
sub
sub
pop
arpl
sbb
mov
iret
cmpsb
adc
leave
sub
loop
inc
stos
jecxz
cld
scas
rolb
mov
ss
mov
xchg
cmp
mov
mov
rorb
insb
sbb
cmp
out
insl
les
fistpl
pop
ja
shrb
dec
xchg
aad
xor
mov
jb
push
fmuls
push
lock
ficoms
stc
int3
in
stos
mov
xlat
mov
lods
pop
mov
add
imul
mov
data16
cmpsl
test
frstor
aaa
ficompl
mov
sahf
push
push
repz
cmpsl
nop
test
loop
and
shrb
pusha
adc
mov
mov
outsb
aad
jae
test
test
addr16
sub
scas
cli
je
jge
cmp
pop
daa
mov
das
cs
imul
popf
xlat
pop
mov
pop
aad
imulb
pusha
idiv
and
mov
push
mov
lcall
fcompl
add
jecxz
mov
scas
adc
mov
test
inc
xor
jns,pt
pop
hlt
cltd
or
cmpsl
in
mov
xchg
pop
loope
imul
stos
cmpsl
inc
mov
adc
insb
sbb
xchg
mov
lds
cmp
mov
jns
lret
out
cmpsb
push
fnstsw
xchg
mov
mov
jmp
sbb
aaa
pushf
mov
out
cwtl
xor
cmp
push
xchg
and
pop
mov
sbb
inc
xorl
cmp
shrl
test
jo
out
adc
inc
jle
cmp
shlb
cmp
imul
inc
sub
adc
je
xchg
pop
pop
leave
pop
sbb
xchg
push
mov
sub
jb
bound
mov
xor
and
fnstenv
scas
call
mov
lret
pushf
iret
movsb
inc
mov
xor
mov
ja
xchg
dec
dec
addb
inc
sarl
push
push
mov
sbb
mov
add
loopne
inc
sti
inc
inc
mov
push
stos
frstor
jne
xor
xor
fstps
mov
cmc
dec
sbb
icebp
push
mov
inc
in
cmpsl
xor
jo
and
adc
fidivrl
aam
xchg
fidivrl
jge
inc
test
bound
add
dec
mov
cmp
sti
int3
inc
rolb
iret
stos
shll
xchg
popf
jns
cmp
in
negb
iret
imul
jb
mov
lea
je
mov
lea
or
jae
mov
jle
mov
pop
aaa
repz
call
mov
xchg
xchg
lret
and
inc
add
mov
mov
cltd
sbb
xlat
aad
mov
sbb
aam
mov
add
and
mov
testb
add
inc
es
sahf
iret
inc
sub
cmp
add
push
lret
nop
je
insl
icebp
pop
and
inc
xor
hlt
and
add
pmuludq
mov
loopne
stos
inc
mov
je
adc
cmp
mov
mov
xchg
repnz
inc
inc
pop
sar
jns
enter
jmp
add
mulb
xor
inc
xchg
lods
or
jns
fimull
xlat
add
push
inc
pop
in
sbb
out
mov
dec
inc
cmp
fdivrl
adc
sub
sbb
std
in
sahf
pushf
subb
push
ljmp
push
pop
xchg
sub
dec
or
cs
in
mov
sbb
and
clc
pusha
mov
outsb
in
decb
inc
xchg
aas
dec
mov
inc
ret
ss
mov
or
fisubl
xchg
sub
stos
stc
lock
lods
or
popf
lahf
pushaw
xchg
xchg
or
mov
call
aad
daa
dec
incb
lret
cmpsb
lods
jmp
mov
inc
cltd
mov
fbstp
pop
imul
or
sub
int3
lcall
and
mov
pusha
dec
inc
icebp
addr16
scas
repz
mov
shl
out
mov
in
push
cmp
push
and
pop
adc
add
roll
stos
filds
jo
sub
mov
push
test
sbb
sbb
ror
mov
scas
daa
adc
movsb
ja
xchg
add
pop
aad
fldl
rolb
dec
dec
mov
sbb
cmpsb
jbe
shrb
dec
lds
jne
jne
xor
push
fs
rcr
stos
sahf
dec
imulb
aas
jnp
fcomps
cmp
push
cmp
neg
cmc
pop
lahf
mov
xor
cmp
addr16
push
lds
sti
mov
cmp
int3
insl
movsb
or
shrl
cmpsb
inc
insb
jle
mov
inc
imul
dec
mov
fst
push
fs
mov
ror
jae
mov
mov
pop
lds
push
jno
cld
enter
or
in
mov
ficoms
hlt
push
in
outsb
sub
adcb
pop
inc
adc
push
jg
pop
push
int3
add
dec
cmp
lahf
in
mov
sub
iret
xchg
ret
fwait
aad
mov
jbe
pop
mov
mov
sbbb
out
cs
fcom
jle
ja
imul
xor
and
std
mov
inc
mov
cmpsb
jmp
lock
jno
cmp
inc
xor
test
in
gs
insb
adc
fs
push
mov
fadds
repz
push
mov
addb
xchg
jb
test
pop
pop
mov
pusha
inc
adc
sbb
cmp
add
add
shl
std
jbe
sbb
and
jg
repnz
cld
daa
stc
pop
andb
std
aad
pop
add
stc
out
nop
or
je
xchg
in
arpl
pop
dec
fistps
stos
in
sbbb
sbb
mov
jns
add
outsl
dec
rorl
ljmp
jae
lds
pop
mov
push
mov
xchg
mov
mov
inc
push
mov
adc
rorb
je
movl
sbb
aas
rcll
and
filds
inc
jl
icebp
add
mov
ja
cmpsl
cmpsl
xlat
je
mov
inc
ror
inc
jmp
or
scas
cwtl
inc
cmpb
pushf
mov
pop
fisttpll
test
imul
mov
inc
dec
jo
roll
imul
cmp
jne
add
stos
into
loope
lock
iret
jge
and
aam
dec
frstor
hlt
imul
mov
sub
xchg
fistpl
sbb
pop
and
jmp
push
icebp
or
fnstsw
inc
jbe
sbb
loop
jb
pop
inc
jnp
adc
arpl
sti
add
lea
aad
aad
ret
and
lcall
outsl
xor
push
in
aaa
in
inc
in
jge
subl
xor
adc
xchg
outsl
jl
push
and
iret
or
inc
inc
cmp
jae
sbb
cmp
jge
les
adc
xor
fwait
js
divl
push
das
stc
pop
mov
push
lds
or
mov
pop
fiadds
dec
arpl
pop
jecxz
jge
daa
insb
pop
fisubrs
inc
mov
and
fwait
inc
jp
popf
repz
sbb
fwait
cmp
sbb
xchg
in
insb
and
inc
jnp
in
test
stc
aam
out
pop
movsb
stc
jbe
in
out
les
frstor
adc
insb
pop
gs
insl
ss
push
push
std
add
mov
gs
dec
add
inc
mov
bound
sub
imul
add
add
or
and
or
aad
repz
sub
imul
out
push
mov
lea
nop
imulb
hlt
stc
mov
sbb
push
rolb
lods
repnz
out
jo
push
ljmp
mov
add
sbb
dec
lcall
fs
iret
cmpsb
lds
rcrl
movsb
adc
test
stc
dec
jne
push
hlt
mov
fwait
xor
aas
jle
cmc
pop
or
lahf
popf
repz
orb
shlb
adc
add
push
fidivrl
loop
cmp
sahf
jl
adc
pop
cs
imul
stos
cmp
xchg
xchg
or
mov
data16
jp
xchg
imul
mov
insb
test
mov
lcall
pop
jb
add
pop
xchg
mov
scas
xor
inc
insl
push
imul
sbb
out
push
ja
out
sub
mov
addr16
dec
inc
xor
mov
andb
rcl
ss
lds
add
pop
and
cmp
in
adc
imul
incb
sub
jmp
lcall
aad
cmp
sub
stos
mov
jae
push
in
jae
repz
cmpsl
testl
scas
ljmp
cmp
jns
lods
roll
ret
cmp
aad
push
inc
mov
jo
repz
cs
fists
push
pop
stos
aad
sub
and
pop
cmpsb
lock
jmp
sbb
inc
pushf
lahf
sbb
into
movsl
mov
jo
or
call
adc
sub
out
lcall
push
inc
cmpl
push
aad
rcrl
inc
and
sub
adc
xchg
pop
iret
and
lahf
jno
sub
xor
cmpsb
and
movsl
jl
jns
xlat
xchg
cmp
sbb
adc
xor
inc
jae
pusha
inc
mov
popf
movsl
xchg
adc
fadds
int
cwtl
sub
xchg
into
jbe
repz
push
mov
jo
push
mov
and
in
imul
adc
popf
fisubl
or
xchg
jno
mov
aad
and
jbe
loopne
imul
insb
pop
cmpsb
test
stos
negb
dec
int
push
das
leave
dec
adc
inc
pop
dec
jecxz
mov
insl
test
adc
dec
xchg
sbb
test
in
sysexit
shll
out
test
push
loopne
mov
dec
rcrl
mov
cmp
leave
loope
pop
mov
notl
jl
xchg
cld
sbb
sbb
dec
xor
repnz
je
out
xor
aaa
lock
mov
cmp
lods
xchg
pop
lods
adc
xchg
shrb
mov
jbe
dec
sbb
push
scas
add
sbb
iret
xchg
ss
and
fidivl
cmpsl
popa
imul
xchg
fildll
inc
xor
push
mov
int
push
add
add
pushf
lea
outsl
cwtl
cld
xor
lcall
xchg
je
cli
loop
stc
mov
mov
cmp
push
fbstp
jmp
sbb
lret
push
xchg
pinsrw
out
inc
out
xlat
inc
mov
mov
jmp
test
fdivrp
pusha
ljmp
push
sahf
call
and
sbb
mov
aad
into
pop
imul
aaa
loope
mov
xor
inc
faddl
push
xchg
sub
jmp
adc
divl
jecxz
shlb
push
xchg
jne
pop
fcompl
ret
push
inc
shll
outsl
iret
jae
jb
pop
icebp
leave
mov
aad
jno
leave
mov
jge
bound
add
inc
dec
out
mov
xlat
dec
or
out
outsl
test
iret
dec
lahf
mov
ss
push
fistpl
inc
xor
and
decl
inc
mov
out
jns
jge
mov
or
decl
sbb
pop
cmp
mov
xor
mov
mov
je
jge
in
cmp
in
sbb
call
or
adc
jmp
push
rolb
or
sbbl
pop
cltd
inc
scas
negb
imul
shrb
cmpl
mov
xchg
insb
cltd
out
mov
daa
xchg
mov
sti
jne
xor
adc
sahf
sbb
mov
in
adc
or
mov
push
xchg
mov
mov
fwait
adc
stc
ficompl
mov
aad
adc
pop
mov
fdivs
pop
aas
xor
push
in
shrl
js
or
inc
mov
xchg
sub
mov
lcall
pop
pop
das
mov
cwtl
push
cmp
fiadds
xor
jb
lds
mov
jmp
out
ljmp
xchg
adc
jns
aas
dec
in
int3
jne
fisubs
inc
jnp
xor
pusha
aaa
add
and
inc
lret
rcrl
or
dec
cmpsl
out
jo
test
pop
stos
mov
xor
push
aas
add
mov
mov
push
xchg
push
fidivl
jg
call
cs
insl
pop
fidivl
pushf
push
sub
mov
cmp
test
xchg
jmp
or
cmp
sub
and
mov
addl
mov
mov
mov
es
adc
adc
xchg
xchg
mov
push
leave
or
or
add
ret
scas
add
pusha
mov
out
popa
cmp
dec
add
pop
std
leave
hlt
push
mov
sbb
and
cmp
or
inc
cld
add
ds
mov
es
subb
mov
std
and
imul
xchg
div
jnp
movsl
mov
or
jno
loopne
or
hlt
out
cwtl
inc
mov
ret
push
fistl
fdivs
les
adc
inc
xor
cmc
mov
stc
leave
in
movsl
ds
adc
shll
inc
daa
loope
and
subl
mov
or
stos
insl
cmpsb
pop
xor
and
push
lahf
loop
std
outsl
jg
sub
push
test
and
std
mov
cs
mov
mov
in
cwtl
repnz
lret
inc
lahf
pop
js
mov
add
dec
mov
roll
cmpsb
dec
stos
shrb
fdivr
popf
cmp
sub
inc
push
fsub
iret
es
pop
into
adc
nop
cmpl
push
mov
or
fwait
sti
pop
xor
lock
add
pop
gs
fnstsw
sbb
enter
mov
pop
cmc
pop
mov
inc
adc
mov
push
push
or
mov
loop
jns
jl
mov
jns
adc
sub
popa
jo
jne
xchg
cltd
mov
xchg
ljmp
imul
cmpsl
mov
push
inc
push
div
dec
insl
push
mov
js
imul
pop
insl
cmpsl
mov
hlt
xor
movsb
lods
or
test
xchg
bound
negb
xchg
aaa
sbb
repz
or
sbb
jns
jns
ret
pop
sub
imul
adc
into
xchg
add
stos
lret
cltd
xor
sbb
stos
mov
lods
adc
mov
xchg
lods
push
or
andb
mov
mov
mov
shlb
jno
cmc
lea
ja
xor
pop
jmp
pop
test
cmpsb
leave
lds
shll
ret
int
mov
or
adc
rcrb
rcl
mov
popf
push
test
lods
xchg
jne
pop
and
mulb
sbb
jo
outsl
pop
dec
jp
jecxz
sbb
movsl
test
sahf
mov
aam
mov
jle
dec
jne,pn
pop
jne
and
push
sbb
add
cmp
adcb
dec
push
mov
test
xchg
movsb
test
outsb
shl
in
or
mov
xor
clc
in
lds
pop
xchg
or
popa
cmp
hlt
rol
and
cmp
xor
sbb
imul
arpl
popa
fdivrs
or
mov
ja
push
loop
loop
shlb
cwtl
test
pusha
out
pop
in
add
and
add
into
out
cmc
aad
test
loop
ljmp
in
jnp
inc
and
je
cli
pushf
jmp
push
addb
std
pop
add
stc
xchg
iret
mov
xor
xchg
pop
stos
out
xlat
add
cmp
mov
mov
push
cmp
and
dec
insl
inc
scas
push
pop
test
sub
roll
xchg
negl
jl
cmp
aas
mov
and
mov
xor
sub
xchg
sbb
dec
pop
mov
adc
sub
pop
movsb
in
pop
jnp
inc
mov
mov
sbb
imul
xchg
push
js
pop
ret
mov
scas
sti
add
cltd
xor
push
lret
fildll
push
mov
sti
pop
push
repz
aaa
test
shrl
jae
hlt
test
xor
test
daa
ja
test
int3
sub
popa
jbe
jne
jmp
or
cli
pop
lods
cmpsl
pop
push
enter
xchg
xchg
inc
xor
mov
stc
adcl
sahf
call
pop
cmp
cli
shll
sbbl
mov
mov
push
mov
jns
notb
pop
mov
sti
pop
rclb
mov
inc
test
jbe
pushf
xlat
nop
gs
loop
push
cltd
cmpsl
mov
inc
fcmovne
in
xor
ljmp
mov
adc
lahf
ret
and
ret
push
je
in
add
es
subb
fsubr
push
sub
dec
dec
xchg
enter
cld
or
test
ret
fsubl
cmp
mov
push
int
loope
jecxz
test
or
and
js
mov
scas
and
pushf
cs
sub
push
imul
inc
and
insb
add
mov
lods
lock
inc
mov
repnz
pop
vmovntps
inc
int3
or
ret
push
mov
test
xchg
xor
xchg
sbb
rcll
ja
or
stc
movsl
dec
sub
into
sbb
cmc
es
out
je
lods
cmpsl
mov
push
mov
nop
cwtl
add
cmc
dec
or
sbb
push
sub
cmp
stc
cmpsl
and
push
mov
fildll
pop
arpl
push
add
ret
xchg
and
xrelease
shlb
testb
mov
pop
mov
fdivrs
mov
aam
mov
mov
jb
mov
adc
push
or
cmp
adc
leave
jle
fxch
mov
cli
daa
jecxz
int3
into
cs
dec
jg
iret
adc
sbb
mov
xchg
cmp
push
dec
movsl
push
xchg
mov
mov
jne
pop
and
mov
and
inc
inc
xorb
fs
fcompl
leave
repz
xchg
mov
sub
aas
mov
jnp
aad
in
shlb
loopne
sbb
sti
sbb
fsubrs
jmp
mov
mov
shrb
adc
sub
pop
enter
scas
dec
popa
outsl
or
pop
inc
or
push
stos
rcl
mov
lods
cmp
sbb
fisubrs
and
sub
and
in
mov
jle
jle
arpl
outsl
mov
aas
aam
dec
outsl
mov
xchg
je
pop
mov
adcl
mov
mov
je
push
int
lret
imull
mov
stos
push
push
or
cmc
aaa
insl
inc
lods
add
cmpsb
roll
sbb
xchg
xchg
mov
xchg
jno
push
shlb
sbb
setle
dec
inc
jle
cmp
mov
cmp
es
and
mov
fildll
inc
addr16
mov
cmp
or
notl
stos
add
pop
leave
mov
xchg
lcall
xor
dec
imul
and
mov
push
xchg
adcl
mov
es
fcomi
xor
fdiv
jne
inc
stos
iret
scas
adc
pop
add
inc
sub
pop
push
mov
jecxz
and
push
mov
mov
call
incl
in
out
mov
jbe
or
icebp
loopne
inc
xchg
inc
jb
add
pop
add
add
jp
out
test
or
cli
xor
popa
adc
movsl
popa
clc
pushf
mov
shl
mov
mov
add
mov
outsb
jmp
inc
clc
movsb
and
pop
popa
sub
mov
jne
in
pop
or
lds
aaa
xchg
cli
fisubrl
mov
mov
mov
jle
xor
jae
es
pop
sbb
daa
cld
jo
aaa
fldenv
xor
mov
cmp
insl
rol
lret
push
insl
lods
int
or
mov
xorb
mov
inc
adc
arpl
scas
sar
jmp
loope
cmp
mov
mov
and
push
push
pop
call
mov
insb
or
or
movlps
shr
inc
imulb
push
add
cwtl
sbb
stos
jle
jle
ja
lods
mov
mov
out
pop
scas
and
xor
clc
ss
mov
fisubrl
cmpsl
mov
adc
or
cltd
mov
or
pop
and
pop
movsl
les
leave
repz
shll
pop
adc
pusha
ret
adc
fwait
adc
fisubl
fwait
repnz
push
push
shr
in
pop
mov
pop
idivl
adc
fiaddl
orl
fstpl
cmpsl
mov
mov
stos
mov
sahf
adc
gs
adc
lret
fs
mov
mov
or
jl
cmp
hlt
xchg
repz
jle
leave
mov
cmp
cmp
dec
iret
stos
ljmp
jo
mov
push
and
sub
sub
int3
cmpsl
cmp
call
popa
add
nop
sbb
das
fs
mov
jns
ja
and
xchg
dec
mov
and
push
or
cmpsb
mov
out
push
cli
lock
cltd
enter
pop
jne
cmpsb
jmp
pop
push
push
stc
sbb
sti
scas
lret
pop
out
nop
and
xchg
add
xchg
inc
mov
push
out
jg
mov
sub
sbb
cmp
mov
int3
mov
pop
fcoms
sbb
lret
scas
push
mov
int3
pop
loop
in
movsb
je
mov
jno
movsb
idivl
sbb
push
outsl
test
push
sti
xchg
orl
icebp
pop
pop
mov
and
jns
mov
cmp
int
mov
les
lods
std
shll
sbb
pop
mul
lods
mov
dec
enter
cmp
cmp
xor
daa
inc
fidivl
xor
jle
adc
loop
ja
mov
repnz
fistpll
es
or
ret
or
test
mov
rcl
leave
pop
icebp
in
mov
adc
cmpb
insl
rol
sbb
or
sbb
adc
dec
sahf
xor
xchg
pop
jnp
test
or
icebp
push
adc
lock
mov
fsubs
xchg
push
mov
mov
pop
test
test
jne
add
leave
int3
jp
or
lods
pop
add
and
push
pop
imul
jnp
cmpsb
insl
or
mov
dec
jo
clc
je
stc
xchg
sub
loope
inc
adc
fdivr
pop
int
inc
push
adc
shr
mov
dec
imul
push
nop
loopne
aam
jno
cwtl
pop
insb
hlt
xlat
jge
add
fiaddl
xchg
aas
jb
test
sbb
repnz
ud2
ljmp
lcall
xor
push
pushl
aad
push
mov
push
add
inc
and
cmp
and
mov
mov
insb
in
movsb
inc
into
add
sahf
cmpsl
pop
divl
sbb
jecxz
xchg
imul
mov
xlat
ja
lahf
sbb
mov
adc
and
dec
jge
xchg
and
inc
mov
or
clc
sub
clc
or
xchg
imul
out
js
aam
mov
push
shll
loopne
mov
dec
mov
xor
jbe
adc
aas
stos
cmp
mov
sub
cmpsl
xor
mov
testl
movsl
dec
into
leave
mov
sbb
jg
inc
out
fnstsw
mov
mov
jl
rclb
stos
into
ret
inc
outsb
pop
repz
cmp
pop
add
dec
repnz
outsl
or
mov
or
mov
dec
stos
mov
loopne
sbb
sub
aas
aas
into
clc
push
das
mov
sti
ja
push
enter
cmp
fbstp
xor
dec
adc
mov
pop
push
je
and
push
push
mov
loopne
cmpsl
jb
jecxz
lret
sbb
inc
insb
jmp
filds
insb
out
pop
repz
push
mov
shll
xchg
loope
adc
mov
fstpl
add
sub
mov
and
adc
loopne
adc
shlb
lods
and
fcmovnb
inc
or
adc
jge
pop
ret
je
jmp
popf
inc
mov
fisttpl
fbstp
into
and
icebp
mov
out
pop
sti
shlb
jmp
mov
inc
popf
adcb
push
jnp
out
xchg
ljmp
cwtl
pop
push
xchg
jg
dec
cld
and
pusha
jnp
sub
xchg
int3
stc
jle
sbbb
jno
inc
cmpsb
mov
xchg
fsubr
xchg
cmp
dec
push
mov
rcrl
fidivs
dec
jne
xor
mov
rcll
xor
movsb
mov
push
pop
cmp
jg
fdivrs
sbb
addr16
arpl
shl
dec
sti
popa
ss
aam
pop
sub
into
mov
cmp
rolb
push
cs
pop
lahf
movsb
stos
and
decb
mov
sbb
cs
rol
xor
mov
mov
pusha
pop
fcmovbe
jg
push
repnz
jmp
mov
sub
std
inc
mov
mov
fwait
jge
in
jne
test
sbb
and
pop
or
lea
imul
cmp
stc
mov
mov
mov
cmpsl
jne
and
aaa
lret
mov
repnz
les
jp
lret
sbb
sub
xchg
mov
add
hlt
rorb
dec
mov
xlat
lret
push
lods
into
or
repnz
xchg
clc
pop
testl
jp
subb
jp
mov
pop
push
sbb
sbb
and
mov
loop
mov
push
fistpl
repnz
jge
sbb
aas
pop
fs
roll
xorb
es
stc
inc
add
sbb
icebp
fisubrl
subb
push
pop
in
mov
loope
inc
mov
dec
cmp
lea
sahf
sub
inc
gs
sbb
mov
sbb
ja
xor
push
loop
lret
mov
sub
insl
filds
or
inc
sbb
push
pop
jg
shr
push
cmp
jne
stc
jo
pop
pop
jmp
test
out
loope
adc
int
inc
mov
loopne
add
lock
xchg
dec
mov
xor
scas
and
add
insb
sbb
xor
sti
fsubr
leave
loope,pt
mov
dec
mov
push
dec
data16
sbbl
sahf
mov
push
sbb
les
jle
sahf
pop
add
inc
push
ljmp
jbe
js
inc
sti
mov
mov
ss
push
loope
cmp
cmp
and
imul
and
daa
adc
and
movsb
jle
clc
stos
xchg
dec
xchg
pop
pop
mov
adc
mov
adc
mov
scas
stc
out
push
mov
not
in
dec
call
int
pop
aaa
jle
je
xchg
in
mov
xlat
mov
nop
add
xor
inc
cmp
add
daa
loop
dec
pusha
xchg
mov
xchg
scas
lock
das
pushf
ja
les
and
popf
pop
push
mov
mov
sub
cmp
lods
mov
mov
pop
arpl
xor
lret
dec
icebp
jge
mov
jne
cmp
add
cmp
sub
inc
shlb
dec
mov
lret
and
or
daa
and
ret
mov
push
mov
xlat
dec
out
mov
lods
inc
clc
dec
fldt
jnp
add
push
js
dec
out
hlt
sbb
push
imul
pop
mov
stos
mov
js
inc
cmpsb
push
cmp
adc
fwait
stos
pop
arpl
lahf
push
jbe
shlb
and
pop
inc
adc
and
aas
fcmovnu
mov
fscale
clc
roll
xchg
stc
mov
packsswb
inc
aas
or
clc
pop
xchg
mov
mov
or
fidivrs
jge
fsubr
lret
in
cs
jo
and
stc
push
jnp
add
pop
ret
fwait
outsl
cmp
push
stc
adc
dec
hlt
xchg
cli
push
add
shr
and
xchg
push
icebp
inc
cmpsl
jae
popf
scas
das
xchg
lds
cmp
fcoml
movups
pop
add
mov
jne
jecxz
sub
aam
cmp
mov
ret
popa
hlt
dec
aaa
xchg
add
notb
jmp
ljmp
out
daa
daa
push
sbb
mov
pmuludq
ret
ret
ljmp
add
call
xchg
bnd
xor
nop
jo
inc
lahf
add
orb
mov
push
divl
jl
sub
jnp
adc
and
out
insl
orl
dec
mov
in
insl
mov
stos
fwait
and
mov
push
mov
push
sbbb
test
fs
arpl
enter
orl
jb
mov
mov
pop
mov
clc
lcall
hlt
lock
les
gs
or
mov
movsl
outsb
inc
clc
cli
stc
test
ja
sbb
jg
mov
dec
cmc
lret
ret
add
sbb
cmp
add
fsubrl
pop
popa
loop
jp
push
xchg
pop
adc
lds
stc
and
adc
mov
fcompl
cmp
movsb
mov
int3
inc
sahf
add
adc
cmpsb
ss
sub
push
out
testl
mov
mov
push
sbb
xor
cwtl
push
inc
jnp
xchg
and
cwtl
sarb
out
aad
jno
je
iret
jl
lods
fldenv
mov
fidivrs
fmull
jns
push
push
push
movsb
and
lcall
and
xor
cwtl
loop
fstpt
out
imul
xchg
pushf
jne
divl
sbb
xor
xor
clc
and
xchg
arpl
stc
das
sub
adc
cmpsb
fldenv
stos
out
jne
pusha
int
cmp
mov
fcompl
leave
pop
negl
xor
sbb
and
push
adc
push
call
pop
push
dec
orb
xchg
or
sub
mov
test
pop
fcomip
cltd
push
push
out
jle,pn
sbb
or
pop
stos
insl
pop
fisttps
sbb
div
ss
stos
loope
jns
jle
cmp
push
push
inc
add
sbb
ficoml
push
xor
shll
xchg
dec
ret
xchg
xchg
push
mov
or
adc
and
lods
dec
xor
insb
mov
roll
ret
jl
mov
inc
xor
pushl
mov
pop
leave
nop
pushf
push
mov
lods
xchg
mov
setg
scas
lret
dec
xor
mov
lret
pop
shll
out
faddp
mov
push
cld
mov
loope
fiadds
mov
xor
jl
xchg
jl
pop
mov
out
call
lock
mov
lret
loopne
sbb
inc
push
xchg
shlb
adc
and
mov
mov
mov
pop
loop
inc
stos
sbb
gs
and
jge
cmp
repnz
add
adc
and
xor
jg
mov
pop
in
cs
push
jne
xchg
xchg
test
mov
cmpsl
mov
dec
dec
ljmp
das
push
fisubrs
jbe
test
arpl
test
fbld
xchg
incl
pushf
and
es
es
outsb
xchg
and
aad
dec
clc
scas
mov
aad
je
or
sub
jno
movsb
mov
jmp
dec
cmp
adc
mov
fdivrs
adc
out
clc
sub
adcb
test
mov
mov
ja
xor
in
mov
leave
ret
and
sub
call
insl
pop
push
stos
sub
push
xchg
mov
hlt
js
insl
jp
cmc
inc
and
je
jl
mov
mov
lods
push
mov
xlat
out
sub
lods
mov
add
mov
mov
in
mov
adc
data16
loope
fadd
mov
or
and
inc
cli
or
mov
pop
popf
mov
add
mov
out
lret
test
mov
jne
mov
popa
insl
int3
orl
aaa
inc
int
addr16
jmp
scas
jbe
divl
js
pop
in
ja
mov
cmpsb
imul
cmpsb
inc
xchg
dec
pop
je
or
jecxz
fidivs
cmp
mov
push
xchg
adc
sarl
cwtl
cmp
lds
push
int3
mov
push
jl
into
push
pushf
fdivrl
pop
mov
mov
sub
dec
push
push
insb
pop
push
pop
sbb
jbe
sarb
movsb
daa
das
adc
push
xchg
jb
add
je
sbb
sub
xlat
loope
push
push
and
data16
mov
mov
lret
in
fisubl
loop
out
mov
sub
fdiv
adc
in
arpl
push
pop
sub
inc
mov
stos
inc
hlt
mov
mov
inc
lods
test
pop
push
pushf
enter
in
out
test
hlt
fisubs
js
fistl
adc
or
popa
pop
syscall
dec
inc
and
clc
rcrb
pop
add
xchg
push
ds
mov
and
sbb
outsb
jae
ja
or
adc
out
pop
das
dec
adc
dec
jle
decl
lock
jo
mov
xchg
loope
jo
insb
shrl
mov
mov
jno
lock
cs
xor
push
cmpsb
add
fbstp
or
pop
fnstsw
xor
adc
icebp
sbb
sbb
orb
in
dec
icebp
sbb
mov
loop
popa
mov
mov
adc
push
hlt
adc
lret
test
roll
sub
js
in
mov
pusha
inc
jp
and
xchg
xor
sbb
lret
ljmp
push
out
dec
ret
ret
push
aaa
iret
js
hlt
test
les
jnp
mov
adc
mov
jmp
mov
out
mov
icebp
arpl
mov
outsb
ss
ljmp
cmpsb
ljmp
loopne
repz
jp
add
push
add
aaa
pop
inc
cmp
adc
ja
mov
je
inc
pop
gs
add
cs
std
cwtl
xchg
pushf
fnsave
pop
insb
adc
cld
cmp
push
inc
mov
rcll
clc
scas
sbb
xchg
int3
icebp
lods
jmp
shr
xchg
mov
aam
mov
repz
jg
rcrb
sbb
xor
and
inc
out
cmp
mov
sbb
inc
pop
adc
adc
hlt
test
cmpl
lods
pop
cld
sbb
test
test
test
insl
sbb
add
jecxz
mov
out
out
sti
jb
dec
jo
adc
inc
and
in
test
or
sbb
xor
in
xchg
test
cld
jne
inc
dec
mov
addr16
ja
xor
inc
or
mov
addr16
outsl
pop
mov
pop
push
stc
pop
mov
push
push
inc
dec
or
cmp
cmp
or
push
jno
stos
insl
and
xchg
xor
cmp
or
cltd
push
adc
loopne
push
out
pop
bound
xor
mov
lods
sbb
and
rol
adcl
insl
psllw
in
fwait
dec
mov
popa
rcrl
cmc
hlt
imul
mov
or
test
add
xchg
xor
aaa
mov
and
insl
inc
pop
aad
jge
fsts
or
xchg
mov
ja
sbb
push
cmp
loopne
xor
sub
icebp
jle
add
fsubs
inc
push
xchg
pop
add
sub
cmpps
lock
sbb
cmp
cmp
pop
or
add
dec
lret
xchg
jmp
decl
add
or
dec
das
sarl
pop
pop
jp
and
mulb
mov
adc
enter
subb
int3
or
aaa
or
dec
sbb
inc
push
ja
dec
je
and
sub
test
cmp
or
pop
dec
adc
xchg
cmovae
sti
in
sbb
dec
iret
lods
xor
mov
repnz
xchg
xor
stos
dec
out
mov
dec
lret
sub
jnp
sub
dec
notb
lret
ds
mov
inc
pop
mov
lock
jg
test
sarl
cmpsb
mov
clc
shl
push
cmp
decl
xor
cli
iret
insb
and
xor
cwtl
mov
cmp
ret
cltd
int
scas
mov
les
xlat
sub
outsb
bound
movsl
je
subb
add
mov
roll
mov
imul
scas
fs
mov
jns
iret
sbb
rorl
stos
in
pop
sub
mov
mov
js
or
imul
xchg
fsub
lret
imul
sbb
push
xchg
sbb
movsl
dec
cmpsl
cmp
stos
scas
cmp
mov
in
sbb
push
fucomp
dec
push
les
push
stc
outsb
dec
mov
cli
sub
cmc
push
data16
je
sti
and
lret
xlat
pop
jno
insl
mov
mov
fisttpll
xchg
dec
mov
sbb
hlt
pop
xor
and
pop
and
inc
mov
xlat
xor
push
jb
mov
call
pop
lahf
hlt
add
scas
dec
or
ret
jnp
sbb
and
jmp
pop
imul
inc
dec
je
dec
adc
pop
call
cltd
into
fwait
inc
add
fstps
jno
add
sbb
cmp
aam
sbb
cmp
insl
mov
pop
or
fistl
jae
pop
pop
aad
mov
idivl
lock
cmp
sbb
fisubrs
push
cmp
inc
mov
lds
inc
jae
stos
sub
push
sbb
scas
xchg
jno
test
pop
sub
popa
jp
mov
inc
out
loop
xchg
pop
xchg
mov
mov
pop
sbb
das
inc
jb
sahf
push
loopne
xor
paddusb
ret
sbbb
jmp
je
xor
dec
dec
shlb
out
xor
inc
push
scas
mov
repz
adc
mov
hlt
imul
jg
push
in
fstps
ljmp
loop
push
lcall
and
cmp
xor
icebp
ret
fwait
pop
popf
cld
dec
cmp
notb
sbb
mov
pop
mov
adc
loope
rcrl
push
lock
cmc
mov
call
std
push
adc
lds
mov
popl
repz
mov
cmpsb
inc
jle
jl
push
bound
dec
fsubrl
pop
je
push
cs
test
insb
and
aaa
xor
shlb
das
mov
stos
js
or
lret
ret
mov
loope
push
inc
cli
push
xor
add
js
mov
scas
aaa
rcrb
dec
shll
lcall
push
ja
and
out
jge
scas
xor
addr16
cmpsb
add
js
sub
pop
pop
push
mov
push
gs
pop
push
xor
into
fcoms
and
pop
xchg
dec
ja
aas
jecxz
and
and
xor
xchg
test
jae
out
push
loopne
in
loop
ss
loope
inc
pop
mov
cmp
xchg
mov
fwait
lret
cmc
sbb
adc
mov
mov
sarb
adc
sahf
inc
in
out
inc
ficoms
rolb
cmp
pop
mov
cmp
push
iret
fldenv
loop
add
and
jns
fwait
xor
addl
loop
rol
fmuls
subl
push
js
pop
ficoms
xor
add
dec
inc
leave
cmp
inc
add
js
dec
adc
shlb
push
test
idivl
cs
mov
xrelease
jmp
outsl
lahf
jb
mov
mov
and
push
cltd
push
dec
mov
lcall
xchg
in
pop
cmp
push
clc
inc
sbb
jl
push
dec
push
and
mov
jae
cmp
lret
sbb
sbb
in
insb
aad
cmp
fiadds
ss
dec
push
int3
dec
jbe
ljmp
sbb
in
mov
adc
mov
cmp
int
mov
testb
cs
or
jecxz
iret
jle
cmp
outsl
dec
mov
popf
shll
dec
inc
js
or
mov
pop
xor
in
and
push
xchg
xchg
mov
stos
popf
inc
mov
mov
pop
imul
shl
pop
lcall
push
push
cmpsl
xor
or
pop
push
aaa
lcall
pop
mov
test
push
jb
jns
cmpsb
pop
xchg
and
mov
push
xchg
movsb
imul
jnp
out
mov
mov
mov
pop
inc
insb
mov
cmc
dec
lock
bound
jp
xchg
and
loope
lock
mov
scas
js
ljmp
add
cmpsb
xchg
in
icebp
int3
sbb
sub
int3
dec
sbb
xchg
mov
and
hlt
bound
in
stc
cli
mov
xchg
bound
or
movsl
sarl
pop
lss
mov
idivb
or
pop
pop
xchg
pushf
sub
int3
aam
inc
jge
jge
xchg
dec
or
cli
xor
cmp
xor
je
xchg
lcall
pop
sbb
into
mov
mov
add
pop
lret
mov
sub
int3
icebp
in
mov
ss
cmp
xchg
fidivrl
pushf
rclb
pop
hlt
ret
lods
popa
stos
mov
stos
lret
push
jb
addr16
aam
cmp
sahf
pop
add
jne
jmp
xor
imul
sbb
dec
add
mov
testl
inc
mov
push
incl
test
lahf
sti
sbb
stc
pop
xchg
xchg
imul
aad
push
lret
add
push
sbb
dec
sbb
lds
ljmp
or
push
xchg
aad
mov
xchg
cwtl
lods
mov
sub
mov
mov
pop
stos
mov
dec
in
inc
mov
add
mov
loope
mov
xchg
fsubp
inc
adc
push
push
loope
cmp
mov
push
jecxz
aad
adc
jae
sub
jmp
push
jp
cmp
outsb
cmp
push
scas
daa
in
mov
and
pop
andb
mov
pushf
cmp
xchg
shlb
inc
mov
jle
adc
sub
xor
mov
jmp
in
mov
and
out
cmp
xlat
cld
sbb
loope
mov
scas
pop
addr16
jns
movsb
aam
int3
pop
gs
ror
ficomps
negl
mov
or
popf
scas
jle
ja
sti
xchg
lods
cli
mov
fistl
mov
mov
hlt
jne
cmovae
int
sti
in
adc
jg
insl
test
movsb
fsts
push
mov
std
lds
xchg
jle
jp
fs
outsb
pop
loopne
dec
mov
lret
stos
cltd
paddusb
cmp
mov
inc
imul
mov
xchg
sbb
nop
stos
shll
pop
nop
or
call
stos
push
cmpsb
jno
movsl
das
cmp
jl
mov
sbb
sbb
inc
mov
loope
stos
xchg
sbb
rcrb
or
and
inc
mov
dec
enter
mov
pop
mov
les
xchg
sti
pop
loop
fnstsw
call
dec
xor
pop
loop
in
xchg
mov
sbb
lds
movsb
int3
or
and
mov
out
and
adc
les
lods
mov
cli
fwait
xor
ja
xor
and
repnz
mov
loope
dec
roll
mov
nop
mov
and
xchg
jns
mov
leave
push
inc
lahf
fdivs
xchg
rolb
sub
jl
cmp
lods
xchg
aam
lcall
sub
movl
sahf
xor
fistpll
testb
test
int
mov
fisubrl
xchg
jle
leave
mov
add
aad
fnstsw
femms
aam
int3
adc
rolb
adc
test
inc
shl
and
xchg
inc
stos
inc
mov
pop
xor
and
cld
mov
cli
aam
insb
jl
cmpsl
and
cmp
xchg
cmpsb
xor
je
stos
loope
int3
push
roll
daa
mov
xlat
loopne
pop
push
enter
ds
gs
fadds
push
add
mov
push
cmp
jno
cmp
xchg
push
jl
and
aad
sub
aas
jbe
xorl
fst
jecxz
jbe
mov
aad
xor
jb
inc
cmpsb
sbb
adc
dec
idivb
fwait
push
cltd
ss
adc
mov
insl
pop
mov
sti
cltd
sbb
cwtl
xor
mov
xchg
inc
inc
pop
dec
cmp
pop
xlat
pop
lea
adc
das
pop
xchg
add
mov
ficompl
sbb
push
and
inc
add
sbb
mov
inc
pop
pop
push
cld
rorb
dec
pop
push
xchg
push
mov
xchg
fsubl
xchg
or
ret
fnstcw
cli
outsl
movsb
inc
sub
sbb
lahf
dec
adc
aaa
sub
dec
jno
jp
jecxz
aaa
jle
push
scas
push
mov
test
and
test
loope
adc
pushf
push
les
repz
roll
push
ret
cmp
daa
fisubs
cmp
sub
mov
cmp
imul
sub
mov
sub
xor
sub
dec
aam
xor
xor
icebp
js
aad
jmp
test
pushf
popa
lahf
add
push
lods
inc
in
jl
cmpsl
mov
divb
xchg
js
sbb
push
add
es
pop
jb
rcrl
jecxz
arpl
xor
mov
xchg
jb
jle
mov
out
lret
jbe
and
out
lods
jno
xor
xlat
cwtl
xchg
inc
inc
cmp
inc
in
add
push
mov
mov
aam
lods
mov
add
sub
out
cltd
mov
mov
inc
lods
and
jnp
fnclex
push
sub
sub
rcrb
cmp
pop
jnp
xchg
ja
jmp
ss
addr16
push
insl
jo
stc
sub
sbb
mov
sub
xchg
mov
mov
push
sub
jo
add
xchg
mov
loop
push
in
sub
dec
mov
mov
test
mov
xchg
cmp
pop
jmp
in
stos
mov
lods
mov
xchg
mov
cmp
loopne
jge
jbe
push
lahf
daa
push
cwtl
mov
clc
adc
movsb
jmp
inc
sbb
push
fcomps
in
enter
repnz
aaa
imul
mov
xor
fst
mov
cli
int
imul
fmuls
xchg
outsb
xchg
lcall
mov
jecxz
jmp
xchg
inc
jb
mov
fsubp
sbb
jg
dec
push
lret
aaa
xchg
imull
jg
addr16
fnstsw
and
jae
ljmp
add
mov
ja
test
shll
mov
mov
repnz
frstor
cltd
add
xchg
outsb
mov
dec
mov
shlb
addl
stos
inc
xchg
dec
test
roll
shlb
and
mov
fsubl
int3
enter
lcall
loopne
push
in
xlat
cmp
add
fdiv
mov
iret
imul
pop
mov
mov
cs
push
xor
cld
loop
xchg
push
hlt
mov
data16
sub
and
fwait
or
xor
add
dec
orl
pusha
dec
inc
imul
ja
lea
popf
mov
lds
sbb
push
lods
jl
pop
arpl
fistpl
hlt
mov
leave
mov
inc
bound
cmpsl
inc
jg
xchg
and
movsl
or
xchg
loop
and
add
cmpsb
inc
inc
xlat
xlat
or
mov
inc
in
scas
push
test
push
adc
stc
jnp
jb
jo
pop
mov
repnz
popf
push
or
jmp
add
hlt
fnstcw
aad
int3
jl
fnstsw
jecxz
jb
push
push
cmp
movsl
xchg
movsl
sti
imul
add
xchg
or
ret
push
addl
jecxz
jmp
pop
and
test
out
and
ret
lcall
std
cmpsl
jns
shlb
scas
lret
mov
scas
into
lret
imull
movsl
cmp
push
xlat
xchg
clc
pop
sbb
test
xorl
xor
shll
push
inc
push
xor
cmp
sbb
lcall
sbb
orl
mov
ja
imul
pop
push
iret
pop
cltd
int
stos
mov
pop
and
sbb
ret
mov
shl
xor
out
test
fistpll
mov
xchg
xor
ljmp
push
add
negb
mov
xchg
cmp
das
dec
les
mov
fwait
rol
jne
popf
add
inc
mov
mov
aas
in
and
inc
stc
sub
dec
mov
imul
lods
inc
cli
jecxz
xchg
rcrl
je
imul
inc
scas
movb
inc
cmp
adc
mov
mov
jg
pushf
push
push
out
mov
pop
loop
out
jg
and
aaa
stos
fidivrs
push
fidivrl
movsb
adc
je
mov
mov
pop
sub
or
inc
shll
repnz
lods
out
mov
lret
or
dec
xchg
shrb
imul
gs
repz
bound
dec
xlat
fimull
lret
adc
pop
push
enter
insb
out
mov
sbb
inc
push
pusha
mov
gs
idiv
add
ret
jb
movb
mov
sub
jbe
fdivl
outsl
jge
mov
and
cmp
in
rol
ljmp
in
aad
push
dec
mov
mov
sarb
add
jecxz
cwtl
sbb
dec
cmpsl
pop
aad
push
push
stos
and
pushf
sbb
and
jae
lods
out
sub
adc
dec
push
xchg
icebp
adc
cmc
adc
inc
mov
cmp
add
cmp
sub
add
insl
jns
fs
mov
inc
mov
lods
jge
test
xor
movsl
addr16
inc
jo
jg
lods
push
mov
pop
test
add
adc
daa
adc
sub
add
lods
fisubs
xchg
std
pushf
adc
pop
sahf
ficomps
xor
repz
ljmp
pop
lods
sub
aaa
rcr
push
popa
or
push
mov
pop
jne
outsb
add
ret
mov
mov
push
add
sbb
lahf
lcall
jle
dec
clc
lret
inc
outsb
jns
jmp
shlb
js
ja
jno
lods
inc
mov
iret
push
int
in
mov
push
dec
cmp
cmp
jns
orl
mov
aam
out
jl
sub
in
imul
jno
outsb
loop
les
popf
in
loope
lock
add
ror
inc
test
stos
in
lea
adc
push
inc
dec
adc
dec
sbb
pop
or
push
movsl
and
xchg
and
sub
push
sti
mov
in
cld
cmc
push
jmp
pop
loop
sbb
xor
mov
adc
fstps
dec
pop
fsubl
inc
popf
ss
clts
pop
mov
sbb
rorb
in
mov
mov
insb
arpl
insl
pop
insl
out
inc
shl
stos
cld
jle
push
mov
xchg
cmp
insl
leave
pop
sbb
es
jns
xabort
pop
pop
sub
sti
jle
or
xlat
ret
sbb
mov
mov
leave
inc
pusha
aam
inc
in
repz
jo
out
jns
cli
shr
mov
in
ret
jbe
mov
xchg
xchg
add
xchg
fst
or
inc
lds
cli
inc
mov
add
mov
arpl
test
xchg
mov
dec
sub
jle
gs
test
adc
inc
xchg
rclb
pop
dec
mov
popf
pop
mov
inc
lods
je
push
xchg
subl
lods
ret
xchg
out
stos
jmp
cmp
mov
sbb
mov
sbb
bound
pop
xor
pop
rolb
jo
mov
aas
lock
iret
push
jb
mov
sub
push
xchg
mov
clc
dec
mov
jno
jecxz
rolb
fs
insl
add
xor
cli
jns
insb
mov
xchg
fwait
jns
aas
push
dec
cltd
xor
cli
mov
test
pushf
enter
fisubrs
jp
jno
loope
push
fwait
xchg
cmpsb
icebp
pop
pop
gs
rclb
mov
jns
nop
and
sbb
out
jge
addr16
pop
popf
adc
and
lahf
outsb
push
fsubr
outsb
lea
icebp
imul
mov
push
and
sti
out
mov
or
das
inc
and
mov
cmpl
dec
push
xlat
iret
fsubrs
sub
dec
in
sbb
mov
sub
fisubrl
loope
cwtl
and
outsb
inc
insb
jo
test
test
push
in
icebp
mov
adc
das
sbb
dec
push
sbb
aam
in
outsl
pop
mov
rolb
xlat
pop
push
rolb
jb
jp
scas
lods
jl
or
je
dec
adc
or
rcrb
repnz
dec
mov
gs
shl
inc
mov
add
and
pop
popf
mov
ficomps
add
pop
add
sub
adc
ljmp
and
test
pop
lds
mov
push
lock
xor
xorl
dec
jae
mov
scas
sub
jge
jmp
push
or
inc
pop
lods
or
js
add
dec
mov
insb
jae
les
or
mov
aaa
jecxz
bound
mov
dec
mov
mov
fisubs
popf
addr16
lcall
pop
aad
loop
je
pop
icebp
mov
mov
lret
sub
mov
repnz
mov
test
and
insl
cld
sub
adcb
or
nop
loop
movsl
mov
sbb
push
push
aas
popf
cmp
add
aad
pop
cmc
push
jnp
mov
scas
xchg
mov
movsl
int3
or
jne
imul
sbb
sbb
xor
fwait
mov
fidivrs
mov
enter
jnp
mov
xchg
lds
and
movsb
mov
adc
or
loop
pop
fstps
sbb
mov
lods
ljmp
imul
add
fucomip
push
das
lret
mov
pop
jmp
pop
jl
imul
outsl
mov
add
inc
scas
adc
sub
loopne
loope
addr16
inc
mov
iret
stc
lret
mov
out
push
std
lds
xchg
pop
push
push
ljmp
dec
inc
fbld
dec
dec
mov
iret
sub
mov
ljmp
mov
dec
and
cld
js
lods
xlat
cmc
out
rorb
mov
es
sti
add
enter
popa
aam
mov
inc
in
and
push
or
pop
inc
mov
hlt
dec
inc
int3
sbb
lea
stos
cld
pop
js
push
adc
ds
movsb
pusha
mov
add
pop
add
repz
xchg
sarl
push
aam
pusha
int
sarl
gs
sar
insb
and
scas
lock
and
xor
xchg
and
dec
pop
je
jb
xchg
xchg
add
aam
rcrb
ret
pusha
sub
jge
adc
xor
xor
push
daa
cs
adc
xchg
sub
test
xchg
dec
add
in
addr16
sbb
adc
call
daa
inc
mov
psllq
or
or
pop
out
mov
outsb
xor
push
cltd
inc
ret
jns
rep
cmpsl
pop
or
inc
jp
js
sub
loopne
jno
aam
leave
xor
in
mov
imul
into
aad
sbb
mov
and
inc
roll
mov
and
xchg
inc
sbb
lret
xchg
sub
fstpl
aam
int
aas
mov
incb
jge
xor
pushf
inc
imul
std
mov
nop
loope
xlat
sub
mov
adc
cmpb
divl
dec
call
mov
xor
in
cmpsl
cmc
sbb
lds
or
sahf
dec
ds
mov
sbb
outsl
adcb
scas
jecxz
xchg
sbb
popf
cmpsl
xchg
jne
ror
stc
test
aad
test
test
inc
movl
repz
inc
xchg
hlt
jecxz
and
arpl
loopne
dec
and
mov
push
inc
fisubs
fldcw
mov
cmpsl
nop
nop
adc
mov
xor
mov
leave
jne
and
add
dec
push
lods
out
cmp
or
int3
cmpsl
enter
shl
pusha
in
or
invd
inc
mov
xor
inc
cmp
shll
sti
andb
mov
push
adc
xor
lds
in
lock
push
popf
fnstcw
sbb
lock
mov
idivb
push
pop
fists
jns
mov
packuswb
xchg
add
mov
jmp
jecxz
inc
and
xchg
popf
fsubs
mov
repnz
nop
fisttpll
mov
pop
fisttpl
jle
mov
xor
xchg
push
xchg
cmpsw
iret
pop
popa
dec
mov
arpl
lret
fs
out
scas
stos
mov
dec
hlt
test
loope
jmp
inc
push
push
xchg
jmp
mov
dec
jo
out
leave
fstpl
mov
xlat
mov
imul
imul
imul
js
mov
aas
sahf
inc
jae
push
inc
add
fsubrs
fimull
add
mulb
movsl
sbb
stos
aad
mull
data16
repnz
notl
cmp
jmp
jb
push
sbb
sti
sbb
inc
mov
fsubp
mov
orl
dec
pop
ss
push
enter
pop
hlt
ds
call
pop
lea
icebp
or
int3
popa
movsb
cmc
pop
sub
imul
jns
in
fsubrl
inc
mov
bound
add
fldl
lods
aad
pop
cwtl
push
dec
and
aas
pusha
aad
add
daa
dec
xor
rorb
sub
sub
stos
inc
ljmp
int3
mov
loop
and
call
sbb
aas
sub
jg
cmpb
xchg
cs
sahf
sahf
roll
pop
lcall
xchg
adc
push
movsl
inc
xchg
divl
jnp
hlt
ljmp
and
sub
or
jb
cmpsl
xchg
push
shl
ret
push
mov
lock
scas
outsl
push
das
jbe
or
mov
push
pop
clc
push
ja
sbb
out
mov
xor
xchg
ficoms
imull
add
std
rcrb
aas
and
fwait
scas
xor
into
jns
int3
pusha
cld
and
xchg
push
cwtl
enter
inc
add
cs
xchg
jbe
lock
cmp
sbb
dec
daa
sbb
aas
jg
push
or
sbb
js
add
push
clc
push
inc
inc
mov
cmp
push
or
gs
xchg
bound
shlb
adc
fstp
ja
cmp
add
dec
popa
std
je
dec
imul
shll
sub
divl
adc
sarl
sahf
pop
fdivs
aaa
and
pop
icebp
fcoms
and
xor
push
data16
test
add
mov
fildll
scas
and
cmp
lods
std
cmc
stc
notb
cmpl
xor
loope
and
ss
out
mov
ret
or
out
add
rorl
cmp
push
sbb
mov
aas
subb
adc
push
out
mov
std
ret
pop
push
lods
and
sarb
and
and
add
xchg
test
jecxz
rol
add
adc
jno
xchg
xor
test
push
lret
xor
sub
xchg
sub
gs
add
mov
pop
dec
mov
into
mov
xor
fsubrl
aad
ret
push
cltd
pop
sbb
xchg
mov
jbe
repnz
xchg
sarb
inc
dec
sbb
and
jg
pop
pop
lock
cmc
pop
mov
imul
pop
inc
or
dec
xchg
aam
int
adc
aaa
ss
cwtl
mov
or
cli
ss
cmp
ret
push
xor
adc
adc
or
sahf
mov
mov
cmpl
push
sti
pop
jge
lea
sub
sahf
imul
and
pop
out
mov
add
inc
arpl
mov
mov
and
movl
sub
mov
mov
push
adcl
inc
or
sbb
inc
test
lock
push
and
outsb
cld
inc
jmp
jmp
rcrl
mov
clc
je
sub
fidivrs
cmpsl
mov
dec
rcrb
out
stos
jge
pop
pop
in
clc
mov
in
push
out
jge
sbb
sub
ret
xor
xchg
push
jo
out
in
addr16
lahf
fucomi
pusha
push
fnsave
adc
xchg
cmp
addr16
pop
mov
lods
in
test
icebp
shll
les
mov
call
mov
xchg
leave
loop
sub
jne
lret
movsl
inc
sbb
hlt
xor
sbb
pop
adc
ret
or
hlt
outsl
sarb
push
ds
test
sub
jmp
sub
mov
cmpb
or
push
dec
add
sbb
or
push
sub
repz
outsb
mov
aad
fildll
and
out
sbb
and
xor
mov
out
push
mov
lahf
or
decl
outsb
jg
insb
movsb
push
sbb
and
jl
push
inc
inc
iret
pop
mov
and
movsb
xchg
outsb
push
loop
mov
dec
jle
push
cmc
in
or
or
adc
jmp
mov
jge
fsubp
sbb
cmpsb
das
push
push
or
jecxz
ret
iret
imul
push
add
push
push
mov
loop
mov
divb
jbe
xor
scas
pop
ret
push
fcomp
xlat
push
nop
jge
add
jecxz
push
sbb
in
in
sub
nop
sub
mov
aas
lahf
cmc
xchg
dec
mov
test
orl
inc
cmp
sub
rcll
mov
pop
mov
inc
mov
mov
popf
mov
xchg
hlt
test
sub
sbb
out
scas
in
sahf
mov
int
js
mov
and
outsl
gs
inc
dec
jnp
mov
cmp
cwtl
mov
jg
popaw
inc
mov
cwtl
dec
mov
add
and
push
sub
hlt
pop
lea
adc
or
inc
or
frstor
adc
int3
sar
out
hlt
or
cmp
mov
adc
into
sub
lret
into
rcl
dec
xor
xchg
ja
cltd
xor
fcoms
inc
out
fldcw
lock
and
pop
xor
push
aas
movsl
fwait
and
aas
mov
mov
mov
add
push
adc
push
test
add
not
popf
sub
jecxz
inc
inc
in
leave
push
dec
push
push
add
and
jecxz
test
in
mov
inc
fxam
jo
insb
test
jp
test
mov
into
int3
addr16
fcomps
cs
neg
jbe
push
mov
jl
cli
notl
fldl
xor
mov
add
jmp
xchg
xor
into
js
mov
and
or
mov
xor
sbb
das
das
shrl
cmpsl
les
xlat
jns
cmpsl
adc
push
loope
pop
lret
inc
jbe
movsb
xor
adc
mov
jp
cmp
mov
in
pop
cs
mov
mov
rcr
mov
cli
in
in
pop
sbb
mov
jo
ds
addl
add
fstps
adc
cmp
jne
and
aad
mov
dec
mov
iret
jnp
cmp
shll
outsb
dec
jg
and
arpl
mov
out
xor
and
mov
pop
xor
js
adc
cli
jns
pop
ljmp
push
mov
lret
push
dec
out
mov
jnp
push
ret
enter
pop
mov
ds
sbb
test
cmp
jmp
xchg
les
cmp
sub
mov
shll
in
sub
sbb
aaa
popa
sbb
sub
jb
mov
or
xlat
imul
in
in
inc
test
sti
mov
ret
out
clc
cmp
mov
das
call
sbb
push
ret
sbb
mov
mov
stos
roll
adc
jno
adc
or
xorb
push
inc
rcll
dec
movsb
shll
loop
and
and
repnz
adc
iret
cmp
adc
and
adc
lahf
ss
push
sub
roll
inc
mov
cmp
mov
subb
test
pcmpeqd
and
push
loope
aad
pop
lods
scas
xchg
pop
lods
jnp
jns
mov
or
jbe
sub
push
mov
addr16
push
and
scas
push
lds
sub
dec
mov
dec
add
loope
movsb
pop
xchg
dec
in
cmp
mov
fs
mov
adc
in
imul
mul
and
xor
jae
cltd
dec
sbb
jge
add
and
dec
subl
jmp
or
xchg
sub
pushf
mov
fwait
in
sub
mov
pop
call
jle
xchg
push
sub
std
ja
fildl
data16
sub
mov
pop
mov
jno
dec
xchg
adc
push
shlb
mov
xorl
lret
cmp
jle
mov
div
lds
loope
jle
push
int
into
sbb
aas
push
jno
push
push
mov
lret
repnz
mov
gs
mov
dec
fdiv
cwtl
jle
push
xchg
xchg
add
inc
loope
pop
les
mov
add
repnz
leave
lods
mov
and
cmp
inc
xor
loopne
inc
outsl
jbe
mov
test
aaa
push
ja
jb
push
sub
adc
xchg
and
jecxz
pop
inc
push
movsb
cmp
sub
or
data16
push
adc
push
inc
inc
or
int3
jb
aad
pop
mov
nop
add
jns
incb
mov
cwtl
push
adc
cmp
xor
adc
jmp
mov
jb
cmpsl
dec
sub
push
jne
clc
add
and
xor
xor
or
stos
in
repz
sbb
cmp
inc
mov
mov
cmp
out
out
sbb
call
sahf
inc
mov
jne
jo
add
out
mov
lock
shlb
push
and
and
mov
fscale
into
mov
ja
xor
into
cltd
or
pop
and
xorb
and
test
mov
cmc
jl
inc
pop
inc
sbb
sbb
xchg
add
mov
adc
jae
cli
jb
subb
lcall
or
jo
and
mov
out
jno
mov
aas
les
les
jge
jl
stos
pushf
jle
inc
andb
pop
testb
lahf
cmc
adc
push
mull
test
test
insb
dec
jp
xor
push
mov
push
dec
mov
lcall
sub
rol
sub
fnstsw
insb
rorb
mov
mov
adc
aad
fsub
add
nop
hlt
cmp
and
iret
sbb
jae
xchg
dec
cld
sarb
push
arpl
push
sti
pop
pushf
push
pop
in
bnd
fwait
adc
jmp
xor
xchg
fadds
cmp
call
out
push
test
pop
xor
or
cmp
rcrl
leave
adc
fistps
pop
out
or
cmp
xchg
push
inc
shll
mov
adc
mull
inc
sarb
clc
gs
and
xlat
loopne
cld
and
sti
pop
js
aas
cwtl
cmp
dec
pop
aaa
lret
dec
cmp
inc
les
ljmp
das
scas
mov
mov
cmp
mov
mov
pop
jo,pt
cmp
out
stos
cmp
mov
push
push
sbb
mov
flds
lahf
sahf
sbb
mov
pop
cld
or
xor
aad
loop
pop
push
jnp
sub
repnz
popa
into
imul
mov
imul
sub
fcmovnu
dec
sbb
imul
mov
scas
in
or
push
xchg
cmp
rol
mov
rol
mov
setno
inc
scas
sbb
jp
or
enter
mov
arpl
popf
rorb
ljmp
cmp
xor
pop
cmp
inc
dec
std
inc
imul
mov
data16
dec
inc
dec
scas
mov
ds
sbb
cmp
imulb
insl
mov
xchg
sbb
cmc
rorb
adc
out
pop
mov
mov
xchg
adc
insl
xor
mov
bound
cld
sub
pusha
out
sbb
and
adc
cmpl
xchg
ret
mov
push
push
lcall
das
loop
pop
stos
push
lea
imul
cld
and
cmp
sbb
addr16
mov
test
test
mov
sbb
fisubs
gs
les
cmp
sub
mov
pop
push
stos
les
jmp
push
sub
xor
or
and
outsl
pop
lea
ljmp
mov
inc
inc
outsl
imul
mov
mov
ret
inc
leave
mov
loop
jg
fidivl
stc
add
pop
ja
fcmovbe
aam
aam
pusha
std
jmp
xchg
sbb
dec
dec
cli
mov
add
ss
jl
cmp
cmp
std
pop
and
jl
xchg
icebp
imul
jne
jo
cltd
arpl
dec
imul
mov
dec
inc
sbb
cmp
jl
push
xchg
push
push
mov
sub
mov
or
xchg
jne
dec
inc
xchg
icebp
xchg
adc
int3
lods
push
or
out
add
fstpt
cmc
add
push
clc
jb
aad
movsl
cmp
sbb
cs
dec
xchg
xlat
ljmp
cmp
out
mov
out
mov
add
mov
sub
dec
cmp
lods
mov
sarb
inc
insl
mov
or
pop
push
and
push
outsb
std
add
jecxz
pop
sbb
mov
jno
ja
rclb
jp
pusha
cmp
push
sti
shll
sbb
add
insb
and
cmp
add
lods
and
call
rorb
dec
cmp
stc
mov
lret
and
popa
push
andb
outsb
sub
ficomps
aaa
pop
push
test
leave
pop
adc
add
lcall
mov
fcmovnbe
jmp
cmpsb
cmpsl
or
pop
clc
ljmp
mov
sar
arpl
mov
inc
ret
or
sub
jecxz
cmp
xor
cwtl
mov
sahf
push
mov
data16
push
xor
or
scas
in
bound
jge
dec
jns
push
int3
fdivp
shl
lahf
incb
lods
fcoms
fdecstp
pop
repz
add
sahf
aaa
daa
push
in
jl
xlat
mov
lret
dec
lock
ds
fdivrs
add
xchg
jg
inc
inc
xorb
pop
xchg
xchg
xor
cmp
jae
aaa
dec
jg
pop
repz
sahf
mov
cmp
pop
shrl
sbb
or
js
jne
shlb
push
outsb
xor
cli
pop
mov
test
adc
test
push
shrl
pop
dec
mov
sti
mov
cmpsl
sbb
push
add
pushl
mov
je
sub
add
lret
movsl
out
imul
xor
scas
xchg
mov
pushf
std
addr16
pop
sub
push
negl
xchg
jne
inc
pushf
cmp
xchg
jge
fcoml
mov
xchg
cmp
outsb
sbb
xchg
out
cs
movsb
or
subb
stos
hlt
int3
lods
mov
xor
xor
dec
cmp
lea
push
mov
push
data16
jmp
mov
insb
or
mov
fs
sub
cltd
xchg
sbb
pop
lods
cwtl
xor
test
push
cwtl
popa
cmpsl
scas
in
dec
dec
mov
xchg
cld
shlb
mov
fucomi
fadd
mov
or
mov
faddl
int3
js
xchg
dec
cmpsb
imull
jmp
fs
jns
sbb
adc
jp
jl
xor
iret
lods
bts
mov
pop
mov
aam
sbbl
xor
adc
imul
mov
push
stos
shlb
fwait
mov
sub
test
arpl
dec
xor
subb
xchg
pop
pop
jbe
loop
insb
fs
stc
cmpsl
jbe
cli
mov
mov
shrl
jb
cmp
iret
adc
popa
or
mov
loopne
mov
ror
lods
rcr
clc
xor
pop
pop
cmp
jge
sbb
lret
ja
cmpsb
dec
jge
xchg
jnp
stc
push
popa
mov
ds
inc
inc
sub
hlt
outsl
mov
fimull
add
ret
lretw
bound
adc
cmp
leave
pop
insb
in
xchg
mov
dec
jns
or
mov
imul
xchg
xor
mov
aam
adc
or
xor
xchg
sub
mov
xor
sub
and
mov
aaa
sahf
or
in
xor
and
repnz
jb
or
fstpl
sbb
jbe
cmp
jae
shl
mov
push
add
xchg
xor
stos
lock
in
sub
and
addl
test
xchg
push
je
or
jmp
xor
subb
insl
aad
shr
xor
xlat
xlat
dec
dec
rolb
fistpl
test
scas
cmp
cmpsl
mov
cmpsb
mov
mov
dec
sub
addb
in
push
subb
jle
nop
inc
ds
inc
and
mov
in
test
push
ja
sbb
cmp
and
sbb
iret
cmp
mov
xorl
shl
mov
lods
xor
and
aam
fdivrl
push
ret
mov
addr16
aaa
sub
dec
cs
fildl
rcl
dec
orl
test
mov
pop
push
or
adcl
test
mov
cmp
dec
je
pusha
das
enter
dec
cmp
outsl
jns
mov
mov
shlb
shrl
xchg
out
pop
aas
inc
int
ljmp
and
pop
loopne
xchg
cwtl
fs
mov
int3
cmp
cmpl
out
xchg
mov
adc
xchg
sbb
mov
inc
cld
les
cld
and
push
cmpsb
pop
lods
pop
push
sar
ret
sahf
push
aaa
mov
push
das
mov
subb
enter
inc
cmpb
sbb
insb
insl
sbbb
dec
clc
das
out
mov
lret
cld
movsl
lahf
aam
and
test
mov
mov
sub
jno
add
mov
xlat
sti
cwtl
dec
shrb
xchg
ljmp
inc
es
ret
sub
xchg
and
add
add
pop
loope
adcb
xor
mov
fadds
or
gs
fnstsw
push
stos
adc
hlt
mov
pushf
das
mov
cmp
jns
pop
push
nop
icebp
loop
xlat
cs
call
es
jle
int3
popf
stos
or
sbb
iret
movsb
xchg
lock
or
cli
dec
mov
hlt
pop
xchg
adc
cmp
decb
xchg
adc
pop
and
jns
xor
cld
subl
in
push
out
fcmovu
in
push
or
jns
dec
out
sub
movsl
pop
push
test
and
sub
xlat
cmp
ret
je
hlt
sbb
sbb
cmp
xchg
push
addr16
pop
gs
or
jb
dec
dec
add
mov
or
push
jno
ret
push
jmp
movsb
imul
mov
inc
fcomp
jae
rclb
cmp
xor
scas
test
jl
pop
fwait
cwtl
sub
inc
repnz
aad
adc
enter
mov
jns
fsub
mov
xchg
cwtl
jne
mov
cmc
ds
popa
xchg
adc
ja
mov
inc
inc
sbb
pop
and
fldl
leave
add
insb
jnp
scas
sbb
fcmovnu
cmpsl
stos
in
inc
push
pop
xchg
cmp
and
push
add
sbb
sbb
inc
out
cwtl
inc
pop
adc
lret
out
ljmp
clc
sti
jno
push
and
add
shlb
xor
jne
outsb
repz
cmc
addb
in
jecxz
sub
push
stos
mov
mov
data16
mov
popf
mov
jg
mov
in
pushf
jnp
or
rolb
lret
lods
addr16
inc
aad
outsb
mov
pop
dec
repz
xchg
xchg
inc
xchg
mov
mov
mov
icebp
pop
sbb
outsl
call
nop
lods
cld
mov
add
and
enter
int3
mov
and
push
mov
cmp
mov
int
mov
ja
mov
sahf
daa
enter
cmp
rcr
incl
add
in
mov
insl
out
inc
pop
shlb
push
aam
sub
insb
pop
and
xor
shr
or
aad
inc
leave
sbb
dec
jae
pop
iret
sub
incl
mov
add
fimuls
test
mov
pop
xor
fwait
out
ds
inc
es
out
flds
ret
sbb
fdivp
pushf
inc
shl
jnp
mov
insb
add
dec
int
shlb
sbb
popa
add
push
jno
leave
mov
cmp
arpl
xor
dec
movsb
pop
into
lea
movsb
test
xorl
pop
addr16
inc
sar
in
out
lods
ret
aaa
ss
push
mov
das
push
inc
insl
and
inc
cmp
xchg
lods
fwait
mov
sbb
push
xchg
push
xchg
test
lds
daa
fildll
jne
mov
lock
pop
xor
test
mov
mov
je
pop
jmp
mov
aas
cmp
and
mov
mov
bound
imul
add
pusha
in
or
pop
jmp
jbe
insl
rcrb
xchg
or
jp
xor
inc
incl
stc
xchg
lods
insl
xchg
adc
mov
xchg
mov
int
mov
pusha
outsb
xchg
cmp
fcmovnbe
xor
inc
rcl
stc
xchg
cmp
icebp
ret
roll
or
rcr
aaa
push
insl
pushf
xchg
and
mov
push
cmp
pushw
sbb
sub
hlt
jnp
push
pop
jae
cmp
sarb
sub
mov
mov
jge
xchg
mov
cmp
cmp
cli
xor
int
aam
pushf
mov
std
sub
sbb
mov
roll
hlt
stos
pop
ret
push
movsb
cli
mov
mov
pop
pop
adc
dec
daa
lds
fiaddl
dec
loopne
sbb
outsb
mov
and
sti
mov
imul
loop
enter
mov
mov
and
or
inc
cmpsb
stc
sub
inc
push
mov
xor
mov
or
imul
pusha
sti
dec
mov
xor
lds
test
mov
mov
and
mov
mov
adc
stc
divl
leave
dec
inc
popf
fdivrl
cmp
je
cmovle
inc
sbb
inc
sbbl
into
pop
push
mov
std
rolb
push
fcoml
clc
lock
iret
mov
xor
fcomp
loop
xchg
sti
sahf
rcll
dec
bound
ljmp
push
lock
dec
jg
sbb
in
jne
insb
ds
ljmp
pop
dec
inc
out
cltd
in
cltd
es
jle
inc
scas
jge
push
cmp
push
inc
and
nop
xlat
scas
xchg
aad
adc
loop
pop
pop
fldt
xchg
push
test
fxtract
in
scas
scas
out
pop
sub
scas
stos
fsubrl
or
jg
cmpsl
inc
xor
jno
mov
jmp
push
mov
sbb
fisubs
sub
call
cmc
leave
sub
add
imul
mov
jge
lret
js
lret
dec
shrl
int
fcmove
ja
stos
cmp
sbb
push
rcl
movsb
jbe
mov
test
add
pusha
sbb
inc
test
bound
inc
mov
pop
enter
jns
or
inc
aad
mov
sbb
sbb
and
pusha
sbb
mov
fmull
sahf
imul
jg
jbe
lcall
stos
mov
push
out
les
xor
stos
out
pop
sbb
xor
xchg
push
cld
pop
aad
mov
mov
cmp
aad
sub
mov
pushf
enter
jne
mov
ficoms
fdivrl
xchg
mull
cmpb
aas
testl
or
out
mov
int
push
notb
push
mov
cmp
jecxz
add
cmp
scas
or
lcall
push
arpl
push
dec
and
icebp
pushf
xchg
iret
sbb
adc
inc
cli
loop
mov
mulb
push
mov
nop
daa
sub
pop
dec
and
xchg
push
adc
pop
or
cwtl
or
popa
xchg
inc
cmp
mov
jl
in
jae
add
jo
mov
jbe
lret
mov
sbb
inc
out
insb
adc
pop
cli
icebp
xor
rclb
adc
imul
insb
lods
shl
mov
es
test
sbb
push
mov
scas
std
inc
imul
sbb
mov
xchg
inc
mov
cmp
cmp
pop
ja
stc
pop
out
pop
push
or
jbe
xlat
xchg
cmpsb
popf
enter
notl
mov
test
lea
pop
loope
jbe
jo
xchg
mov
scas
xchg
pop
dec
roll
icebp
scas
loope
fcmovnbe
pop
jb
call
stos
and
cmpsb
mov
out
pop
fisttps
cmp
in
sbb
sub
pop
testb
mov
adcl
mov
iret
mov
out
sbb
fstl
shrl
mov
xorl
cmp
int3
dec
xor
sub
outsb
adc
popf
adc
movsb
pop
popf
add
dec
and
outsl
mov
mov
mov
mov
rolb
sub
adc
das
sbb
dec
xchg
mov
dec
call
adc
pop
push
addr16
push
mov
nop
jecxz
cmp
jb
xchg
xchg
imul
add
xchg
clc
push
jecxz
inc
test
enter
xor
fisttpll
leave
mov
arpl
aas
jmp
sarb
mov
sub
clc
jne
mov
cmp
stc
js
inc
rcll
fdivs
loop
sbb
xchg
jb
cmp
jl
mov
jns
stos
or
stos
ja
incl
jle
orl
aad
movsb
sbb
ds
stc
adc
dec
mov
dec
sub
cltd
hlt
lods
insl
and
push
pop
inc
xor
popa
dec
mov
pop
dec
sbb
sahf
movsb
cltd
js
movsb
mov
inc
mov
repz
push
sarl
addr16
icebp
mov
and
ret
push
inc
sub
jle
xlat
xor
in
test
sbb
lock
pop
jnp
repnz
xchg
add
dec
adc
mov
dec
dec
ds
or
adc
and
decb
mov
push
mov
pop
jne
xor
or
out
sub
and
shlb
push
pop
push
clc
jge
stos
xchg
addr16
jns
xchg
test
mov
int
and
dec
pushf
sbb
adc
fwait
daa
cmpsb
pop
sbb
sbb
cltd
test
aad
movsl
stos
shrl
inc
push
repz
jne
sub
push
out
xchg
call
mov
inc
jbe
je
mov
rorb
jns
xchg
xor
fstps
pop
fsubrs
pop
mov
rol
fisttpl
xor
sub
and
out
jge
test
push
sub
scas
xchg
movsb
decl
stos
es
rorb
in
pop
and
scas
xor
pop
mov
sarl
mov
stos
xor
mov
and
rcll
lock
les
push
int3
icebp
pop
sbb
adc
cli
fcompl
dec
lahf
or
jl
xor
iret
ja
cmpsl
das
cmp
sbb
fstpl
jp
dec
out
decl
shr
jno
fidivrl
jmp
sti
push
lret
mov
ret
xor
push
mov
push
out
jge
repz
divb
scas
adc
shlb
inc
push
xchg
push
cs
dec
sbb
lahf
les
fsubrl
inc
cs
pop
mul
jnp
push
test
xchg
mov
pusha
jmp
adc
insl
jmp
and
icebp
xor
cmpsl
or
lods
or
jp
arpl
imul
mov
jae
cmp
ljmp
and
movsb
xchg
and
gs
aam
repz
jb
and
std
imul
push
stos
inc
mov
out
mov
icebp
lahf
aaa
dec
into
aas
jl
inc
xor
lods
sbb
mov
fs
sub
inc
and
lahf
scas
mov
movsb
push
adc
dec
fwait
sub
out
push
push
inc
fwait
aaa
push
mov
in
sarb
into
decb
and
cmp
nop
push
fdivrl
inc
loope
push
dec
push
rcrb
xor
rolb
jae
push
out
mov
pop
stos
sarb
cld
mov
mov
lretw
lret
jnp
out
xchg
jns
out
stos
into
jl
sub
ljmp
lods
cmp
fs
jmp
add
mov
adc
inc
lahf
das
in
es
fs
sbb
jnp
dec
repz
or
jo
and
add
push
ret
pop
sbb
xlat
jecxz
and
cli
push
rcrb
lret
add
jecxz
sar
loop
stc
sti
push
cmp
pushf
sub
js
mov
loopne
pop
sub
jae
mov
call
inc
cmp
adc
rorb
mov
in
repnz
pop
and
and
add
nop
xor
inc
inc
mov
stc
stc
jecxz
pop
imul
lahf
or
lret
push
cld
fstps
out
orb
pop
test
mov
imul
ds
les
xchg
dec
loopne
pop
mov
pop
das
xchg
stc
and
mov
insb
notl
ja
insl
outsb
cmp
in
mov
push
bound
insl
pop
sbbb
clc
lock
insl
and
jae
mov
loop
mov
stos
stc
lods
xchg
call
and
fiaddl
cmp
loope
je
push
js
mov
rcll
and
out
fcoms
mov
imul
inc
xorb
cmp
and
xchg
push
sub
lret
enter
xchg
xor
nop
sub
push
cltd
dec
stos
ret
pop
push
js
mov
sub
adc
ja
in
fnstenv
das
les
xchg
loop
jmp
sub
imul
or
jne
cmpsb
loop
arpl
sbb
jp
sti
add
std
rorb
dec
or
add
sbb
ficoml
cmpsl
test
mov
push
jae
xchg
addr16
sbb
jge
xor
pop
or
push
lret
xchg
xchg
and
xor
inc
das
push
cwtl
xchg
ret
cmpsl
dec
int3
inc
cmp
nop
cmp
add
push
mov
cmp
in
add
jg
push
cmc
inc
mov
fcompl
xor
pop
je
jae
in
xchg
fsts
jns
jmp
loopne
sbb
fimuls
xchg
pop
pop
popf
cld
sbb
push
inc
dec
les
pop
stc
sub
add
ss
mov
mov
mov
aad
push
nop
inc
push
scas
imul
add
dec
pop
aam
xor
push
movaps
sbb
lret
inc
aad
loop
fidivl
mov
xor
jo
out
add
jl
or
lcall
orl
jne
mov
push
icebp
loop
enter
shr
mov
inc
dec
add
aam
xor
pushf
fs
shlb
xor
sub
cmp
push
aam
scas
imul
dec
jb
xchg
sbb
out
lods
pushf
lret
jle
ret
jo
xchg
sbb
popf
dec
loop
insb
jo
test
push
xchg
fldt
imul
out
mov
roll
sbb
add
imul
push
jns
xor
gs
in
inc
mov
cmp
lea
xor
cmc
push
ja
pop
scas
das
jbe
cwtl
stos
sbb
jp
loop
adc
subps
xor
repnz
sbb
inc
imul
cmpsb
mov
sbb
xchg
and
int3
jno
adc
mov
jo
sahf
pop
push
pop
mov
jp
and
inc
je
flds
notl
cli
xchg
in
ljmp
adc
pop
int3
jle
ffreep
ss
ljmp
cmp
jnp
jae
ss
dec
movsl
xchg
jecxz
mov
flds
pusha
xorl
divb
test
repnz
xor
cld
mov
jg
dec
jmp
mov
insl
sti
sub
jecxz
inc
in
in
in
jae
out
xor
push
aas
dec
repz
mov
rcll
adc
sarl
imul
dec
jle
outsb
jl
enter
cs
jno
mov
and
adc
push
mov
mov
inc
in
stos
hlt
jnp
in
push
stos
cmp
pop
lret
xor
mov
adc
cmpsb
cli
shrl
mov
mov
mov
out
js
dec
push
leave
or
and
dec
clc
adc
push
jno
add
pop
rcr
cmp
insl
cmp
in
xor
xor
call
pop
mov
fbld
jl
lods
loop
pop
mov
ljmp
dec
cmpsb
int3
mov
push
mov
sub
leave
nop
mov
movsb
push
mov
in
pop
outsl
int3
shrb
jecxz
ja
cmpsb
cmp
lahf
cld
inc
sbb
aaa
mov
ja
lea
xor
mov
jg
aam
enter
loopne
outsb
jno,pt
es
and
les
arpl
cmp
and
dec
out
iret
int
inc
leave
loope
cmp
xchg
aas
jbe
mov
sbb
push
imul
jns
pop
lahf
gs
mov
mov
mov
test
dec
push
test
es
sub
je
xchg
mov
stos
mov
jae
xchg
xchg
jp
insl
push
fwait
jo
or
inc
out
add
pop
out
cmpsl
iret
mov
movsl
xchg
and
lods
jge
dec
xchg
dec
jg
das
or
add
pop
cwtl
and
mov
push
stc
and
pop
sbb
cs
or
or
mov
daa
adc
mov
cmp
sub
cmp
sbb
xchg
push
and
xchg
push
sti
jno
aaa
push
imul
sbb
outsl
mov
ds
leave
fisubrs
jne
dec
or
lret
push
movsl
adc
lahf
cmp
dec
loop
jl
lock
push
pop
adc
jp
loopne
js
cltd
sbb
rcrb
mov
imul
out
adc
adc
pop
cmp
sbb
pop
fwait
add
iret
mov
lods
mov
sbb
and
adc
repz
dec
into
bound
mov
sbb
add
subl
sbb
insb
dec
inc
jno
cwtl
out
out
xor
or
notb
push
fwait
aaa
cmpsl
inc
lods
jge
push
fcoms
inc
data16
push
mov
rolb
test
cmp
bt
iret
out
xor
movsb
jl
push
ljmp
mov
filds
lcall
call
xchg
sbb
dec
adc
mov
into
mov
cs
xor
sub
lret
loope
mov
sub
mov
mov
dec
sub
mov
loope
movsl
enter
adc
xor
sbb
in
insl
adc
out
push
je
imulb
icebp
xor
sarl
or
mov
push
sar
sahf
add
dec
push
lret
sbb
les
mov
push
xchg
adc
jge
es
inc
push
pop
lcall
mov
outsl
fisubrl
rcrb
and
fisttpl
mov
add
or
dec
ss
dec
cwtl
repnz
notb
adc
rorb
jg
dec
imulb
mov
mov
adc
add
fcompl
enter
out
inc
movsb
push
sbb
gs
nop
push
push
outsb
insb
or
std
loop
clc
dec
lds
daa
and
in
push
mov
dec
out
in
outsb
pop
jbe
jl
jbe
imul
cmp
es
mov
mov
xchg
cmp
jl
and
mov
mov
mov
pushf
sub
out
in
das
cmp
mov
imul
jl
je
inc
addr16
jb
cmp
scas
cmpsl
int
dec
and
fsubrp
scas
les
jp
inc
orl
xor
out
or
pop
or
dec
and
mov
or
into
cli
add
insb
test
daa
sbb
or
mov
pushf
cmpsb
jp
add
cli
or
adcb
rcrb
sbb
xorl
push
pop
dec
mov
adc
scas
pop
xchg
mov
mov
mov
out
sub
sahf
ja
pop
xor
ret
pop
jbe
push
push
daa
fwait
xor
jl
es
sti
rcll
and
lods
out
xor
mov
sbb
test
ret
cmp
loopne
mov
insl
fisttpl
std
mov
push
stos
testb
ljmp
and
and
arpl
pop
lahf
es
and
xorb
pop
das
js
adc
roll
inc
sti
ret
or
data16
mov
fcoml
lret
fiadds
xchg
and
popa
pop
mov
push
pop
pop
enter
cmpsl
aam
lcall
mov
adc
movsb
int
jo
adc
sub
mov
dec
nop
adc
data16
jae
pop
test
std
add
adc
mov
pusha
sarl
leave
gs
cmp
sub
into
add
jno
sarb
adc
out
rolb
push
test
lea
in
inc
test
cmp
lea
sbb
jns
push
push
adc
push
mov
in
clc
mov
add
loop
fcmovnbe
sbb
xchg
add
sti
test
jmp
mov
push
mov
int3
mov
and
clc
popa
cld
adc
je
fnsave
cld
jno
mov
mov
aam
lcall
int3
sbb
mov
lods
ja
pop
cld
inc
cmp
cmpsl
dec
fsubr
lret
xchg
sbb
ret
lea
add
pop
enter
inc
scas
jg
repnz
int3
fsubrp
xor
test
sub
mov
pop
int3
cmp
out
js
out
jl
xchg
jmp
lahf
dec
sub
minps
out
push
out
pop
insl
xor
pop
sahf
outsb
test
in
xorl
mov
test
repz
nop
mov
mov
imul
jp
ja
xor
aad
sbb
repz
fcoml
loope
shll
clc
cmc
and
scas
shlb
sarl
sbb
push
fiaddl
adc
sub
je
test
jno
out
cmp
or
mov
fnstenv
fbld
mov
mov
sbb
cltd
mov
inc
mov
sub
adc
add
dec
pop
jl
imul
cltd
xchg
xchg
stos
lods
dec
pop
pop
inc
iret
xchg
cmp
aam
or
cltd
mov
pop
xor
mov
int
fld
pop
into
pop
dec
sub
je
lds
shll
js
mov
stc
add
sbb
cmp
pop
inc
cwtl
jle
mov
fs
pop
dec
xchg
jne
stos
xlat
jb
or
lcall
sbb
xchg
loope
dec
clc
not
cmc
add
jge,pt
cwtl
add
das
mov
rcll
les
cmpsl
jmp
lret
mov
sbb
in
jmp
je
cs
out
jb
sbbl
ret
or
in
sub
ret
push
int
mov
sbb
push
push
push
xchg
mov
ror
ds
xchg
inc
xor
mov
mov
int3
lahf
xor
add
xchg
aaa
fnstcw
mov
lock
or
or
push
shl
dec
stc
cli
add
fists
cmp
or
mov
fldenv
test
adc
loop
data16
pushf
jns
aas
dec
nop
mov
dec
scas
sahf
cltd
cmc
loopne
nop
in
pop
sbb
pop
int
sbb
dec
icebp
mov
xchg
lcall
femms
adc
xchg
xchg
std
js
frstor
jmp
nop
stos
icebp
mov
pop
aam
mov
mov
fwait
sbb
fcmove
daa
insb
add
outsl
lock
into
loop
rcrl
xlat
loopne
pop
out
dec
lret
inc
xor
and
push
mov
fisttps
ss
jae
scas
pop
adcl
stc
push
shrb
sbb
pusha
jne
pop
xchg
xchg
and
add
call
fisubs
hlt
sub
daa
push
fucomi
leave
mov
jnp
fdivs
cmp
cmp
sbb
pop
mov
push
pop
lods
sbb
sub
adc
xchg
icebp
cmpsb
push
pop
jmp
cmp
inc
sarl
dec
or
lcall
xor
and
scas
icebp
mov
in
je
cmpsl
xchg
dec
lods
jp
jns
xchg
cwtl
lcall
lret
or
sahf
lods
dec
jne
sub
add
cmp
xor
push
lret
scas
shl
aaa
cmp
test
in
out
add
xchg
inc
je
aad
mov
decl
int3
sub
out
fiadds
jb
xlat
outsl
lret
xor
push
sbb
les
sub
jmp
lods
hlt
or
jp
call
mov
pop
pop
or
jmp
movsl
push
mov
cmpsb
nop
ljmp
cmpl
aaa
cmp
js
and
sarb
ds
fimull
and
xchg
inc
inc
xor
mov
jg
ret
sbb
icebp
roll
sub
sbb
int
sbb
sbb
xor
add
jecxz
mov
out
es
jae
inc
stos
sahf
xlat
addr16
out
pop
cltd
hlt
mov
adc
mov
xchg
inc
popa
repz
sbb
push
push
push
aam
mov
xor
ret
push
pop
mov
mov
aam
xor
xor
adc
out
cmp
call
cwtl
add
mov
cltd
js
jmp
pop
jmp
sbb
cs
xor
and
idivl
xor
adc
sbb
sbb
add
shll
dec
jge
repnz
push
imul
cmp
outsl
inc
adc
mov
cmpsb
pop
out
das
nop
sub
pop
mov
cmp
icebp
jmp
in
lock
fisubs
roll
cltd
cwtl
inc
scas
in
cmpsl
and
orl
scas
push
pop
jbe
repz
xchg
inc
jne
repnz
lods
cmp
xor
and
mov
pop
push
xchg
out
jnp
sbb
loopne
sbb
mov
fwait
inc
mov
mov
ds
or
lea
fdivrs
xchg
out
push
mov
cmpsl
ljmp
cld
or
adc
icebp
mov
pop
shl
mov
xchg
push
rcll
cmp
pop
popa
jbe
lods
lock
addr16
ljmp
cld
lret
pusha
test
test
mov
mov
into
dec
add
leave
sti
pop
adc
stos
mov
subb
pushf
add
loope
mov
or
aaa
stc
jg
sbb
mov
aad
adc
cmpl
fistl
mov
and
sub
pop
testb
xchg
shrl
pop
xchg
repz
outsb
jne
out
sub
addr16
dec
insl
xor
push
fwait
icebp
xchg
and
jns
or
aam
into
cmp
sbb
adc
jge
cmp
jae,pt
fldl
add
jae
push
dec
in
mov
int
test
or
xchg
lds
je
mov
rcrb
inc
mov
lods
xchg
jb
mov
xchg
jns
cs
add
sbb
pop
in
leave
add
shrb
mov
lret
mov
mov
xor
push
jnp
pop
push
sub
orl
push
jns
pop
mov
jmp
xor
sbb
lret
fwait
mov
jmp
xchg
call
int3
loope
icebp
mov
mov
ret
jae
pop
push
add
std
out
lret
adcb
les
lods
test
and
mov
mov
xlat
aaa
flds
sub
call
mov
mov
push
jb
outsl
hlt
pushf
in
sbb
and
fstpt
adc
mov
test
aam
lds
sbb
out
mov
sbb
ss
jnp
sub
fadds
rorb
outsl
call
push
dec
stc
sub
dec
mov
lock
sbb
nop
and
sarb
aad
movsl
ljmp
mov
test
stos
clc
dec
sbb
phaddd
iret
aad
cltd
enter
lea
xor
mov
pushf
aaa
inc
mov
rcrb
dec
pop
fisubrl
fadds
inc
xor
mov
xor
or
daa
imul
pushf
and
vrsqrtss
and
pusha
jge
jns
in
sub
icebp
in
dec
push
fwait
mov
xlat
jmp
xor
stos
sbb
xchg
es
ret
push
adc
int3
cmpsl
movsl
pushf
xchg
das
and
pop
test
pcmpgtd
pop
dec
pop
jp
inc
jmp
shl
and
cmpsl
add
adc
jg
xor
lea
mov
jno
mov
mov
test
inc
std
mov
test
int3
hlt
sbbl
sbb
das
xchg
mov
daa
mov
arpl
sti
sub
add
mov
in
adc
xor
or
mov
inc
dec
xchg
imull
hlt
in
jne
xchg
hlt
pop
add
push
cltd
outsl
cmp
xor
mov
andb
call
jg
aad
push
movsl
nop
inc
shrl
xorl
jmp
cmp
and
mov
sub
xor
in
adc
cmpsb
loope
das
jb
xor
insl
mov
outsl
or
repz
push
jg
inc
into
pop
pop
test
imul
jbe
sti
push
add
test
movsb
xchg
cmp
test
das
and
push
jae
aas
cmpsl
push
and
cmpsb
mov
dec
dec
shll
xchg
xchg
sub
lcall
mov
or
push
cmc
sub
mov
jbe
sub
dec
popa
push
cs
push
push
cmpsb
pop
mov
push
dec
jmp
inc
adc
pusha
ljmp
mov
cmp
push
and
mov
data16
es
lcall
jmp
dec
std
sahf
sarl
push
mov
call
push
jno
sahf
aam
rolb
inc
repz
cmc
out
lcall
xor
mov
jge
into
mov
lret
jns
xor
mov
and
jecxz
dec
dec
add
mov
mov
aam
aad
sbb
or
add
vmaxpd
out
test
push
fisubrs
pop
and
bound
pop
aas
mov
xchg
jp
push
je
in
cmp
jmp
test
scas
and
iret
push
mov
and
rcll
lahf
mov
mov
pushw
in
adc
int3
ja
dec
mov
imul
xor
hlt
shlb
in
and
mov
test
xchg
test
sub
iret
jae
jns
push
cmp
pop
cmpb
mov
leave
push
test
cmp
pop
add
add
mov
jne
data16
cmpsl
dec
mov
and
mov
inc
xor
aas
adc
notb
adc
push
lcall
push
scas
imul
ret
pop
insl
ret
pop
and
in
ret
and
pop
xchg
mov
xor
sar
stc
mov
xor
rorl
jne
cmp
mov
arpl
in
insb
les
imul
sbb
adc
pop
jae
sarb
pop
xchg
add
push
hlt
or
cmp
subb
stos
pop
sub
adc
pop
loope
and
xchg
adc
jmp
jae
jecxz
hlt
sarl
sub
sti
pop
js
cmc
std
inc
pop
sbb
cmp
sbb
or
roll
sub
sub
lds
and
mov
pop
mov
dec
jbe
sub
jb
xchg
mov
movsb
neg
inc
push
dec
mov
sti
mov
test
pop
jno
mov
or
add
clc
and
adc
cli
es
in
fdivrs
mov
fistpll
inc
or
adc
jo
mov
add
xor
lcall
mov
xchg
xor
add
hlt
bswap
pop
loopne
adc
jg
push
enter
sub
and
rclb
dec
mov
jns
inc
jl
pop
dec
lock
add
push
pop
push
dec
ds
mov
int3
mov
sub
xchg
cltd
adc
popf
xchg
xchg
data16
lcall
sub
sbb
mov
sbb
mov
popa
add
add
inc
sbb
push
add
sahf
mov
push
sub
mov
dec
jecxz
nop
imul
rorl
push
xor
pop
mov
add
push
and
jecxz
lahf
sbb
sub
mov
ds
cmp
mov
fcmovnu
lock
imul
add
lahf
shlb
adc
lahf
out
cmpsb
fmull
aas
lcall
push
pushl
sahf
sub
popa
mov
xchg
dec
rorb
adc
jge
inc
lahf
cmc
push
negb
mov
gs
or
mov
mov
and
jb
mov
pop
mov
mov
mov
mov
fucom
add
pop
sub
movsb
neg
idiv
leave
and
jp
mov
pop
jecxz
or
xchg
inc
jp
xchg
outsb
movsb
lds
clc
adc
shr
jg
int3
mov
xchg
mov
daa
adc
out
adc
adc
and
jmp
jl
fwait
idivl
push
hlt
pop
addb
inc
adcb
xchg
les
bound
mov
xlat
neg
cmp
into
out
sub
dec
mov
add
xorb
jmp
jb
jecxz
mov
dec
xor
adc
outsb
inc
lds
loopne
in
sbb
sbb
push
insb
in
rcr
dec
mov
jno
shlb
pushw
addl
mov
pushf
int3
dec
repnz
js
fsts
mov
jnp
lds
inc
mov
mov
js
sub
push
and
in
xor
dec
adc
inc
dec
sbb
add
cmpsb
enter
das
push
sbb
lahf
imul
fcoms
movsl
imul
push
js
jecxz
nop
add
das
xchg
add
js
push
sub
mov
pop
pop
cwtl
mov
cmc
mov
mov
jo
notb
push
test
outsl
sbb
jecxz
jae
aas
adc
test
sub
dec
xchg
das
mov
pop
ljmp
fisttpll
dec
ffreep
jne
mov
sbb
dec
ja
sub
xor
mov
and
cltd
das
daa
push
push
push
clc
ljmp
outsl
lret
cmp
xchg
sbb
jmp
bound
test
testb
jne
dec
subl
jne
enter
jae
je
loope
je
push
cmpb
mov
stc
icebp
inc
icebp
ds
fnstcw
mov
cmp
add
xlat
pop
decb
nop
push
cmc
repz
pop
icebp
fildll
dec
negb
cmpsl
call
repnz
cmp
cwtl
adc
iret
add
sub
add
ja
pop
cmpsl
cmp
mov
sbb
dec
jb
sti
jo
daa
push
jbe
jno
out
mov
out
orb
mov
push
leave
sti
xchg
dec
push
ja
xchg
icebp
pop
fsub
testb
repz
ret
jbe
daa
aad
or
adc
hlt
popa
dec
cmp
and
adc
fadds
loope
push
ds
xchg
pop
enter
sub
aas
popa
push
mov
mov
xor
test
xor
hlt
ljmp
es
stos
rolb
mov
sub
mov
nop
and
fmul
adc
mov
or
fstpl
push
subb
mov
ret
icebp
shll
jb
repnz
clc
add
and
aaa
sbb
dec
mov
sub
mov
lar
aas
cmp
in
sahf
and
push
mov
lock
xchg
mov
sub
pusha
xor
jo
aam
pop
or
cmpsl
lcall
push
lock
mov
out
jmp
in
pop
aam
jmp
jmp
ss
clc
xchg
dec
xor
outsb
outsb
jbe
stos
in
daa
ds
push
pop
repnz
sbb
mov
andl
mov
pop
mov
ret
adc
out
inc
mov
in
test
mov
movsl
out
dec
and
test
dec
mov
ret
dec
xor
mov
jl
sti
jne
testl
insb
int
push
aas
subl
mov
lcall
adc
lahf
mov
mov
test
sbb
std
or
push
mov
adcl
sbb
sub
aas
mov
test
out
cmp
js
push
stos
jmp
es
outsb
cmc
loop
mov
sti
std
dec
cmp
cmpb
adc
jl
adc
push
mov
lret
add
les
nop
xorl
clc
add
push
inc
leave
lret
push
ja
adc
test
outsb
shlb
xchg
ss
jg
xchg
cs
shr
daa
fisubs
loopne
out
std
push
aas
lods
popa
jmp
aam
call
mov
loopne
out
dec
mov
repnz
mov
mov
or
popf
lcall
mov
inc
fldenv
repz
subb
fmull
pop
in
stos
and
and
cli
dec
mov
repz
inc
inc
add
mov
mov
mov
pop
cmc
test
xchg
sbb
inc
dec
mov
push
push
dec
sbb
lock
stos
call
testl
js
sarl
mov
inc
push
pop
mov
mov
cmc
fadds
sarb
aaa
or
adcl
loope
pop
push
js
xchg
fnstsw
mov
lcall
insb
mov
or
sbb
pop
dec
push
icebp
sub
xlat
cli
rorl
add
add
fsubrs
daa
and
dec
xor
inc
stos
jmp
mov
imul
int
sub
cwtl
repnz
add
mov
mov
lock
mov
gs
push
movsb
lahf
mov
xchg
xchg
test
mov
sarl
xchg
aas
jp
jb
mov
lods
xorl
mov
cwtl
pusha
repnz
mov
jmp
inc
mov
adc
mov
test
mov
inc
jb
fldenv
call
ljmp
mov
enter
call
les
test
cmp
dec
aas
push
les
xlat
lahf
mov
out
cmp
lcall
popf
ljmp
pop
js
jle
add
fbld
xor
mov
cmp
mov
push
gs
lods
pop
inc
adc
or
add
sub
shrl
cmc
cld
push
mov
mov
adc
push
sub
xchg
jmp
xor
ljmp
popf
inc
and
gs
or
jo
jmp
adc
adc
sbb
in
out
push
push
outsb
pop
fisubrs
test
mov
pop
push
xor
pop
aaa
popf
cmp
es
out
cmpsl
pop
sbb
lock
lret
daa
mov
dec
pop
inc
jns
xor
inc
icebp
in
jo
or
shll
ficompl
add
ficoms
sbb
sahf
xlat
jnp
cmp
out
out
dec
mov
sbb
loopne
fisttpll
cli
or
scas
xchg
sbbl
and
popa
aam
and
xchg
sahf
push
sub
mov
dec
cmp
push
in
pop
lods
out
jno
scas
adc
lea
fxam
dec
sti
je
jle
icebp
in
call
cwtl
or
sahf
test
sbb
mov
arpl
and
js
and
daa
adc
vpsubb
mov
fs
mov
adc
xchg
outsl
mov
sbb
xor
stc
pop
stos
iret
addr16
sub
int
or
cs
inc
dec
loop
pop
dec
jae
addl
xchg
jb
and
mov
pop
inc
shlb
fs
mov
popf
leave
push
jb
push
push
stos
or
push
mov
stos
mov
mov
rcll
sbb
xchg
adc
std
dec
cmp
jo
adc
inc
in
daa
pop
test
cmp
pusha
in
add
dec
out
pop
add
mov
and
in
mov
out
cltd
push
mov
add
xchg
push
into
movb
xchg
xor
push
jae
pop
lods
xor
push
std
sbb
xor
pop
pusha
das
xor
push
sub
pop
outsb
ret
jae
orb
xchg
mov
mov
add
sbb
gs
mov
push
loope
mov
inc
insl
push
dec
dec
ss
lahf
enter
add
or
pop
pop
mov
inc
jae
adc
inc
and
inc
test
es
lret
sbb
add
jae
cmp
mov
movsb
aam
lds
sbb
std
jmp
xor
scas
dec
or
iret
or
mov
cwtl
xchg
rcrl
into
jg
rol
clc
ret
int
mov
dec
sbb
ret
mov
push
loopne
imul
pop
pushf
mov
push
pop
xor
ficoms
outsl
daa
jp
dec
pop
mov
in
sahf
cmpsb
jecxz
into
dec
dec
mov
lds
and
mov
aad
cwtl
adc
push
cmp
xchg
push
aad
mov
mov
imul
jp
subb
push
sbb
fcomps
dec
or
cmp
js
loope
imul
inc
pop
fmul
dec
sbb
push
mov
aam
or
mov
and
jecxz
scas
inc
adc
sub
in
outsb
and
scas
repz
imul
aas
gs
fs
out
jecxz
ljmp
movsb
in
out
jns
jae
stos
iret
test
data16
mov
ja
aam
xor
inc
shll
dec
jbe
cli
movsl
adcb
mov
jno
aad
sti
inc
out
jl
jp
icebp
cmpsl
stos
mov
repnz
stos
lods
inc
mov
mov
sbb
push
sti
into
xchg
test
xchg
movsl
xchg
movsl
int3
test
lea
xchg
aas
mov
pop
push
lcall
or
dec
cwtl
add
cs
mov
fcoml
arpl
roll
mov
inc
mov
dec
mov
and
cmp
mov
jl
dec
mov
stos
movsl
pop
das
mov
mov
popa
scas
out
pop
lret
cmpl
xor
ret
adc
xchg
mov
lret
data16
aas
nop
je
cmpsb
ljmp
xor
push
call
jge
cli
sbb
sub
rcll
pop
vpaddusw
and
cmc
sub
lcall
sub
pop
lahf
in
scas
aas
movsl
rorb
or
jns
xchg
xchg
mov
aam
xchg
test
bound
lods
insb
jbe
jle
mov
dec
stos
std
pop
lods
sbb
cmpsl
mov
stos
les
fdivl
aas
inc
out
mov
into
dec
jp
popf
mov
sbb
aad
mov
testl
dec
imul
mov
pop
mov
xor
ret
leave
cmpsb
pop
lods
out
repz
mov
cmc
addr16
mov
loope
mov
rcl
scas
sub
mov
jae
out
fwait
imul
sti
add
or
pop
and
outsl
dec
add
sahf
stos
mov
xchg
scas
push
jnp
jle
jo
xor
out
adc
jecxz
xchg
dec
adc
and
cmp
or
mov
js
sub
movsb
fwait
mov
add
mov
lock
adc
fdivrs
pushf
push
cmp
and
mov
test
movsb
mov
cmp
dec
mov
dec
or
xchg
aad
dec
or
jns
jae
mov
xchg
mov
aas
or
pop
cmpsb
pop
mov
rcrb
popl
enter
pop
arpl
inc
or
pop
shl
jb
out
xchg
je
das
fsubrs
lahf
jge
mov
in
cmc
mov
hlt
jae
fists
inc
popa
pop
xor
rcll
add
aam
pop
sbb
aam
loope
mov
int3
push
inc
xor
out
push
jp
xor
cmpsl
and
out
bound
jecxz
test
dec
lahf
adc
mov
out
into
insb
bound
mov
lods
psrlw
mov
push
xor
push
gs
xchg
es
cli
mov
inc
movsb
dec
mov
push
xor
dec
test
stos
jcxz
sarl
or
stc
mov
fisttps
andb
movb
lret
lcall
mov
adc
push
movsb
push
fmuls
fcomi
cs
cmc
and
sub
mov
pop
jg
sbb
movsb
loopne
out
lods
mov
rep
fcmovb
inc
cwtl
adc
fcmovne
or
and
popa
aas
adc
pop
xor
mov
rorb
pop
push
lock
out
add
mov
imul
xchg
jno
jecxz
lahf
or
push
loopne
and
ret
testl
cmpsl
call
push
dec
and
test
test
std
idivl
mov
mov
mov
iret
icebp
mov
stc
addr16
rclb
pop
in
mov
jae
fcomi
lods
mov
jecxz
jno
aaa
mov
sbb
pop
sbb
pop
dec
lret
and
sub
aam
sub
mov
enter
jle
jo
push
sti
cmp
movsl
mov
insl
jne
xlat
mov
mov
mov
mov
push
inc
and
std
lcall
sub
lahf
mov
rclb
out
pop
into
ljmp
pop
icebp
dec
dec
pop
xchg
popa
and
repz
and
xchg
mov
pop
movsl
rcrl
xchg
pop
imul
push
mov
xor
shl
data16
mov
jge
stc
scas
cli
mov
mov
outsl
daa
mov
lods
push
xor
sub
or
mov
inc
das
jbe
mov
sbb
psubd
sub
add
xchg
aas
aaa
outsl
mov
dec
inc
xchg
push
bound
add
jp
inc
xor
or
sbb
f2xm1
cmp
inc
shr
into
or
cmc
xchg
mov
sbb
pop
lods
xlat
loopne
mov
dec
gs
xchg
push
ss
add
std
movsl
in
mov
pop
cmp
mov
mov
nop
push
fimull
call
clc
pop
aad
adc
jmp
ljmp
xor
arpl
mov
loope
test
xchg
sbb
jmp
negl
jne
call
cs
pop
or
xor
jmp
negb
mov
push
out
add
xchg
mov
jo
xchg
fs
lret
cmpsl
push
xor
jns
inc
test
xchg
lahf
jb
jecxz
adc
xchg
aam
cmpsb
dec
xchg
lods
sbb
xchg
mov
cmpsl
mov
bound
and
push
in
dec
out
and
leave
pop
insl
jb
jb
sub
mov
enter
adc
lods
pop
hlt
aaa
and
cwtl
jg
pop
cmpsb
mov
cmp
insb
and
or
lahf
and
xor
mov
mov
add
cltd
sub
inc
jbe
inc
jnp
daa
sbb
or
mov
cwtl
sarl
xor
add
lahf
inc
jbe
add
hlt
jg
mov
jnp
pushf
sub
cmpsb
lock
add
cld
lcall
imul
pop
dec
dec
adc
add
roll
cmp
popf
cmp
bound
inc
aad
je
arpl
lahf
cmp
xor
jl
xchg
lods
loop
pushf
push
jo
xor
push
xor
push
bound
mov
xchg
out
popf
daa
fidivrl
mov
push
sub
pop
lds
mov
pusha
dec
jbe
mov
lret
push
sbb
test
mov
inc
mov
iret
jmp
int3
or
push
pop
mov
push
adcl
sub
cmp
add
test
cmp
sbb
push
imul
loope
insl
mov
jnp
leave
inc
xchg
jecxz
mov
sbb
or
int
in
jmp
sbb
xor
add
in
add
xor
out
sti
ret
lahf
shlb
jns
lret
loope
mov
cmp
jecxz
outsb
mov
cmpsl
ret
add
adc
test
outsb
movsb
lods
adc
push
outsb
mov
pop
dec
xchg
cmp
jg
mov
xchg
cmpsl
xor
inc
das
jle
sbb
add
xor
or
jo
xor
sub
idivl
or
stos
or
loope
insl
push
pop
or
mov
cltd
xor
mov
xlat
fldenv
repnz
sub
mov
inc
jo
mov
int3
mov
xchg
std
cmc
or
xor
cs
pop
pop
mov
iret
lea
imul
sahf
aas
mov
int3
rcrb
mov
ds
mov
inc
mov
int3
stc
xchg
pop
xor
inc
jae,pt
cmp
ret
mov
out
fisubl
sahf
and
incb
clc
mov
inc
and
xchg
dec
or
fdivrl
sub
enter
ret
pusha
mov
and
xchg
mov
outsl
je
jl
mov
xor
or
xchg
inc
add
cmc
es
add
inc
int
out
dec
pop
add
stos
or
cs
jp
mov
ljmp
mov
les
push
jg
fnstenv
mov
inc
ret
lods
shll
mov
adc
or
xchg
lds
gs
cmp
lahf
leave
cmp
or
imul
xor
mov
adc
mov
mov
or
jns
ds
pusha
loop
mov
mov
lret
xor
cltd
inc
jp
jno
pop
pop
inc
cmpsb
les
out
adc
ret
out
push
cwtl
mov
pop
popa
aad
sub
mov
movsl
call
cmpsb
das
xchg
rcll
or
push
mov
into
call
push
in
movl
sub
sbb
mov
mov
pop
or
dec
movsl
in
ss
mov
cwtl
fs
push
adc
cmpb
xor
jle
dec
lret
sti
and
cmpsb
into
fcmovbe
and
rclb
mov
inc
mov
mov
sub
mov
aas
lds
loop
jbe
aam
hlt
ljmp
mov
jmp
gs
cmpsl
push
push
mov
adc
sub
mov
mov
add
and
popa
cwtl
mov
les
push
cmp
sub
daa
sub
push
bound
enter
and
in
sbb
rcrb
dec
stc
dec
ja
mov
inc
addr16
pop
addr16
mov
movsb
scas
sbb
or
roll
mov
aad
aad
sub
mov
js
into
cmc
lcall
adc
ret
mov
adc
rcll
pop
lds
nop
mov
or
mov
push
daa
adc
sti
mov
fs
inc
or
xor
daa
fsubp
popa
decb
jp
add
nop
ljmp
pop
icebp
jo
loope
inc
sub
mov
dec
mov
sti
add
dec
mov
or
pop
and
mov
jbe
sbb
shll
fldcw
xor
lods
roll
out
xchg
outsb
mov
clc
cs
cmp
xor
add
imul
and
rol
and
xor
fildll
in
mov
mov
fnsave
mov
adc
imul
cmpsl
cmp
xlat
movb
xor
movsl
push
std
push
sub
xchg
js
rcrb
adc
xor
aad
call
imul
bound
lret
mov
imul
jle
lret
xor
sbb
dec
adc
xor
cmp
clc
jae
rcrb
mov
rcll
inc
or
dec
loop
add
imulb
sbb
sub
into
push
mov
sbb
push
adc
clc
jl
push
cmp
pop
mov
and
dec
ds
mov
jmp
roll
xlat
mov
adc
or
mov
sub
mov
jnp
orl
xor
jb
inc
jno
nop
popa
fwait
mov
jg
stc
xor
dec
aas
mov
lds
mov
jp
inc
pop
sub
jo
imul
clc
mov
notb
iret
sbbb
lret
mov
inc
mov
jle
js
jbe
into
mov
icebp
push
jns
pop
out
add
scas
in
xor
mov
push
clc
cltd
rcrb
mov
outsl
inc
in
fisttps
ret
outsb
nop
les
adc
ficompl
jnp
inc
js
push
outsl
xor
aas
lods
ret
test
stos
cmp
xor
mov
inc
mov
cltd
xlat
or
popf
aaa
daa
pop
lret
inc
in
xor
out
imul
sub
out
lret
aas
loop
push
ja
jae
sub
inc
sub
pop
mov
aad
dec
push
inc
jae
mov
inc
ficomps
xchg
sub
stc
out
in
test
out
and
sub
adcb
lret
std
push
xor
mov
fistpll
xor
outsb
iret
push
xor
movsl
jmp
xchg
jnp
pop
je
loopne
xorb
enter
pop
sarb
adc
mov
pop
test
insl
cmp
mov
fldcw
loopne
jae
cld
outsb
lods
push
aad
inc
inc
ss
inc
sub
lcall
lds
in
lahf
jmp
leave
loopne
pop
push
mov
addr16
imull
dec
lds
fidivrl
cmpsl
adc
js
cmpsl
xchg
out
xor
add
mov
mov
orb
cmpl
aaa
setb
xor
fstpl
sub
or
adc
sti
mov
stos
rorb
xor
sub
pop
mov
sub
stc
lret
inc
sbb
jle
pushf
out
aad
pop
test
jge
jno
aam
jno
mov
and
test
out
cmp
sub
cs
insb
mov
cwtl
cs
insl
insl
pop
adc
or
pop
sarl
fwait
loop
iret
popf
faddl
sbb
scas
div
xor
outsl
dec
jbe
mov
cmp
test
and
jmp
xor
xchg
or
mov
mov
sub
mov
dec
xchg
orb
flds
shl
les
xchg
xor
sahf
jns
in
cltd
xchg
dec
xor
arpl
loope
cmp
inc
arpl
jmp
cwtl
call
xchg
dec
dec
gs
cmc
xchg
aas
jmp
orb
dec
out
and
lret
shl
push
insl
pusha
rol
push
shrl
movsb
mull
mov
test
or
mov
and
mov
xor
imul
push
adc
jmp
and
jecxz
shlb
or
mov
std
adc
xchg
sub
fcomi
mulw
or
pop
aam
test
dec
aad
cmpb
adc
jg
xor
fdivl
jmp
push
mov
popa
add
outsb
pop
in
jmp
pop
test
xchg
not
fidivrs
jo
adc
sbb
scas
jnp
cmpb
out
pusha
jle
or
movl
rolb
ret
pushf
jb
in
test
repnz
or
sub
dec
add
sahf
std
dec
lea
dec
pop
lods
mov
inc
xor
ss
dec
xchg
call
pop
popf
cld
je
aam
out
add
gs
sbb
das
dec
inc
jae
pop
add
mov
add
ja
jae
xchg
roll
sub
xchg
xor
mov
jne
mov
repnz
dec
and
dec
inc
vandnps
jno
or
add
into
dec
mov
mov
test
lods
or
addr16
push
push
cmpb
hlt
jno
mov
loope
xor
sbb
pop
fnstsw
decb
lret
scas
pop
jg
les
push
xor
fistl
jb
pop
pushf
push
sti
fwait
arpl
xlat
lds
aam
jae
mov
mov
xor
pop
mov
dec
in
je
fmull
cmpsl
cmc
ja
iret
pushf
into
outsb
sbb
and
xchg
add
into
pusha
cltd
cmp
or
mov
pop
insl
jecxz
fiaddl
es
dec
imul
loope
xchg
xchg
test
ficoml
pusha
mov
clc
add
je
aam
cmpsl
mov
dec
or
fidivrs
jecxz
sub
loopne
push
xor
cld
mov
mov
jae
add
push
xor
andb
push
mov
inc
jmp
sbb
mov
jle
std
cltd
cmpsb
test
push
mov
cmp
loop
fdivr
xor
lahf
int3
scas
repnz
jno
pop
out
imul
push
ljmp
stc
pop
sahf
xor
test
inc
mov
das
inc
loopne
push
jle
dec
scas
ret
mov
xor
fucomp
sbb
sub
xor
movsl
rcrl
cmp
aad
mov
cltd
loopne
ret
mov
fistpl
mov
movsl
mov
test
into
jae
sub
adc
mov
ss
cltd
pop
pop
cmp
inc
jbe
mov
mov
add
fsubl
add
cld
or
mov
cmp
jb
push
push
jmp
push
into
push
jp
mulb
aad
mov
cmp
ljmp
mulb
jge
mov
add
adc
push
xchg
cld
sbb
rolb
jmp
jne
sbb
das
in
sub
xchg
into
pop
xchg
adc
popa
inc
imul
mov
pop
push
je
iret
nop
push
or
fwait
jne
push
jg
popa
ja
dec
mov
mov
adc
std
mov
cwtl
xor
idivl
inc
jns
not
xor
movsb
dec
xchg
cwtl
test
or
xchg
jmp
mov
sti
inc
pop
cmp
xchg
loop
push
dec
arpl
ss
and
pushf
dec
scas
mov
nop
bound
cs
sbbb
lret
sub
out
nop
jae
arpl
xchg
loop
adc
add
and
into
leave
stos
sub
filds
and
out
pushf
fucomi
shl
mov
repnz
xchg
int
mov
pop
lcall
jp
movsb
add
sub
loopne
stos
mov
sahf
sub
sub
fcom
lret
mov
fildl
sub
or
lcall
bound
fwait
mov
or
mov
xor
cmp
adc
cld
or
inc
sub
and
filds
pop
jae
mov
jge
out
loopne
xor
mov
and
pop
rcrl
jns
inc
adc
add
cmpsb
lods
sub
push
or
lcall
cld
shrl
jecxz
sbb
inc
jo
out
and
pop
or
sub
fsts
add
mov
or
mov
cltd
sub
jle
lods
push
ds
xor
and
jo
and
cmpsl
dec
or
ljmp
mov
outsl
push
rolb
jnp
jl
or
pop
jp
and
push
sbb
xor
das
adc
leave
cmc
pushf
xor
mov
dec
sub
or
fs
pop
inc
push
pop
jp
cltd
and
pop
adc
push
push
jb
out
pop
or
cmpsl
mov
mov
and
xchg
mov
sbb
test
cwtl
fwait
xchg
mov
ficompl
pop
jnp
popf
outsl
cmp
jne
andl
iret
dec
test
mov
xchg
repnz
cs
dec
ds
pop
iret
push
divl
in
jl
push
inc
fs
pushf
outsl
and
data16
cli
ret
mov
dec
xchg
int3
cmc
dec
cs
xor
fldlg2
dec
or
inc
lahf
bound
addl
rclb
jns
xor
jg
jge
push
and
cmpl
push
lods
js
xchg
xchg
ja
jb
xor
jo
adc
mov
inc
es
and
jmp
inc
nop
xchg
add
cltd
mov
mov
pop
pop
lahf
enter
adc
cmpsl
sub
in
sbb
movsb
out
xor
int
fists
jno
stos
movsb
mov
cmp
mov
add
ja
mov
jne
cmp
lea
xorb
in
cmpsb
push
sti
adcl
fidivrs
addr16
mov
in
pop
jo
jle
inc
inc
out
sub
xchg
out
int3
xchg
stos
cmp
jge
mov
mov
lds
shll
xor
mov
add
jl
addb
xchg
lods
loopne
int3
add
jl
lahf
add
loope
mov
pop
stc
xchg
mov
xchg
sub
js
xlat
pop
add
mov
cs
xchg
shlb
jp
test
mov
pop
mov
out
nop
mov
out
adc
cmc
add
xlat
enter
stc
stos
inc
pushf
fcomps
cmc
ror
and
daa
xchg
in
mov
nop
repz
ret
add
mov
rorb
mov
push
pop
lret
jge
push
cmc
push
pop
sbb
fstpt
sbb
incl
enter
inc
dec
mov
mov
pop
mov
data16
lea
cmpsb
and
push
lods
jmp
sbb
mov
push
push
xor
sub
mov
cmp
jecxz,pn
xor
nop
push
mov
sub
lds
fidivs
push
inc
sti
cld
and
jg
and
push
testb
mov
inc
popa
cmpb
mov
push
das
push
pop
push
jne
cld
mov
in
jno
sub
adc
jmp
aad
lahf
popa
xor
sbb
push
mov
imull
push
test
mov
xor
ror
push
idivl
adc
sti
jbe
fldenv
out
adc
mov
gs
mov
jnp
fsubrs
add
out
pop
or
add
das
repnz
fsubrs
or
jns,pn
ret
fildll
adc
push
popa
ficomps
xchg
or
das
jnp
mov
jbe
and
mov
push
cmp
and
fdivrl
lret
enter
movsl
cmp
jmp
test
pop
fnsave
push
pop
or
cs
je
cld
fstpl
sbb
push
test
mov
imul
repz
adc
gs
out
lret
push
aam
cwtl
mov
xchg
mov
inc
pop
inc
pop
xor
sub
cmc
bound
ja
out
lahf
sub
fmuls
stos
mov
mov
fnsave
jp
loopne
pop
insb
xor
push
jmp
rcrb
mov
push
ds
adc
movsl
dec
mov
insb
dec
sub
sbb
add
inc
es
roll
cmp
xor
jge
sub
enter
jne
test
std
or
adc
dec
scas
sbb
inc
test
push
sbb
lods
out
cli
sti
pop
adc
test
lods
add
add
push
inc
push
lahf
leave
test
sti
mov
sub
ret
jae
sbb
mov
mov
roll
jmp
ljmp
pop
shrl
and
xchg
jno
mov
push
gs
jne
enter
fadds
cmpsl
in
ss
inc
mov
dec
mulps
mov
pop
jb
pusha
xchg
orb
outsl
in
sub
push
cmp
cmp
lret
out
or
pop
hlt
or
lock
fsub
inc
mov
and
xor
cmp
int
inc
stos
js
shll
sbb
rorb
dec
sbb
jo
popl
dec
sbb
cmpsb
int3
inc
cld
gs
call
push
mov
add
ds
or
jne
mov
inc
mov
lea
js
dec
fwait
dec
and
adcb
pop
cmp
mov
das
mov
insl
inc
jl
out
jns
ret
inc
cmp
push
cmp
inc
into
dec
shlb
jg
mov
fs
out
in
hlt
nop
aas
stos
mov
loop
test
ret
pop
push
lds
sarb
loope
lods
sbb
daa
aam
sbb
in
push
mov
jg
sub
xor
push
filds
std
jp
and
xor
fbld
mov
xchg
aad
sti
cmpsl
cmp
in
mov
popf
or
mov
inc
enter
jno
aas
lcall
call
xchg
pushl
xchg
xor
jo
mov
xor
sahf
pop
arpl
subl
add
mov
jae
inc
jg
out
rclb
outsl
push
mov
int
xchg
cmpsl
mov
dec
inc
jge
cmp
sti
mov
add
mov
pop
dec
jno
imul
pop
or
adc
js
sbb
fnsave
rolb
dec
fs
lock
loopne
or
imul
ss
in
testb
sub
push
ds
sbb
mov
stos
jmp
in
insb
mov
ds
shll
mov
xor
adc
cmp
es
pop
inc
sbb
in
pop
cmpsl
int3
pop
out
and
bound
xchg
mov
inc
jb
in
push
cmpsb
loope
mov
jb
popa
or
mov
inc
or
add
popa
in
hlt
or
add
push
and
sti
xor
jo
into
arpl
nop
pop
aad
or
out
shl
into
and
jecxz
and
add
scas
ret
xchg
cmc
inc
mov
fwait
xor
movsb
pushw
mov
pop
lds
sub
dec
movsl
aaa
inc
or
shlb
cmpsb
loop
dec
sbb
sbb
jnp
or
add
testb
mov
and
ja
mov
adc
mov
in
cmc
cmpl
add
add
fwait
bound
nop
test
pop
lret
sub
sbbb
les
dec
insl
jne
xor
cwtl
ja
sti
int3
push
fistpll
xor
into
addr16
push
aas
std
jnp
mov
roll
repnz
scas
pop
jae
out
jge
xchg
stc
jge,pt
cmpsb
pop
cmp
mov
push
outsl
mov
push
mov
pop
push
icebp
dec
shll
dec
push
data16
out
stc
xor
mov
xor
mov
or
popa
mov
loop
and
test
and
ret
mov
add
sbb
aas
nop
xorl
repz
lahf
adc
rorb
mov
testb
neg
sarl
hlt
add
in
jne
adc
rcll
cs
imulb
pop
add
test
mov
xchg
mov
inc
lds
lahf
add
xchg
loop
cltd
mov
imul
inc
add
sub
adc
push
mov
jae
shll
sbb
icebp
ss
adc
dec
negl
ja
stos
or
mov
pusha
inc
sbb
or
inc
cmp
xchg
in
mov
and
pop
mov
inc
ljmp
sarl
aaa
int
push
fstl
jb
add
push
xor
les
xor
xor
push
and
sbbb
ljmp
ljmp
mov
loopne
imul
fistpl
jge
push
adc
out
xor
fs
das
inc
add
or
loop
and
sbb
inc
adc
shrl
popf
scas
ret
out
xor
ret
jl
cltd
test
nop
mov
fisubrs
fisttpll
bound
jae
jbe
xor
test
jp
aas
sahf
loopne
or
lods
aam
xor
in
mov
fisttpll
and
mov
sbb
in
xchg
xchg
cmp
inc
pop
jns
jmp
sbb
out
mov
xor
xor
je
adc
mov
pop
arpl
mov
mov
push
lcall
sub
adc
mov
mov
xchg
dec
mov
pop
imul
test
and
jmp
sti
xchg
push
clc
out
insb
shrb
push
outsl
adc
cmp
aad
dec
sub
das
add
sbb
cmp
in
aas
add
push
fldz
fmull
fcmovnu
and
pop
dec
inc
mov
js
and
in
jnp
leave
js
sbb
mov
mov
mov
fcoms
mov
pop
pop
push
mov
sub
icebp
sub
mov
call
xor
mov
dec
jp
xchg
sub
or
cmp
adc
lods
push
daa
aas
jno
pop
cmove
cwtl
test
mov
mov
xchg
push
sub
js
loope
mov
cmp
scas
inc
adc
sub
push
ss
popa
scas
sub
mov
dec
push
pop
mov
testl
das
pop
push
jl
int3
out
or
jecxz
cmpsb
mov
push
fcompl
in
int3
dec
dec
popa
cmp
ss
or
icebp
popa
push
out
xchg
mov
mov
in
cs
lret
fmuls
call
or
xchg
jne
fstpt
mov
bswap
inc
jl
test
jnp
cs
std
xchg
arpl
es
mov
pop
shr
out
and
dec
jae
mov
lock
jp
popf
shrb
push
jle
dec
sub
sarl
xchg
or
sbb
xor
and
call
and
cmp
daa
mov
mov
mov
sub
push
outsb
cld
add
lods
cmc
jae
mov
lods
dec
sub
pusha
loop
lea
mov
pop
mov
push
mov
repz
xchg
cwtl
std
sbb
jno
mov
xor
add
xor
stos
mov
or
fildl
add
mov
inc
mov
std
mull
lods
aaa
cmp
jg
call
roll
cmp
decl
into
inc
xchg
cs
out
cmp
xor
inc
ret
rorb
mov
mov
test
cmp
mov
cmp
jl
cli
fsubs
fsubrp
xchg
mov
stc
and
cmc
sar
cmp
shlb
pop
cmovl
movsl
pusha
dec
mov
sub
jne
pop
shrl
in
mov
mov
and
sbb
fiadds
rcrl
pop
or
mov
fidivl
ret
dec
push
cmp
sbb
sub
shrl
aam
das
jno
cwtl
shlb
mov
icebp
jno
jg
nop
das
xor
pop
out
stos
xor
push
cld
sbb
adc
xchg
jnp
mov
scas
push
mov
sub
fnstcw
enter
mov
icebp
push
pop
sub
aaa
ret
stos
dec
push
int3
add
popf
fnstsw
xchg
inc
cmp
dec
fwait
fs
out
fistps
pop
sub
ret
and
mov
aad
into
sti
andl
inc
daa
pop
and
sbb
add
in
push
sub
movsl
xchg
pusha
jbe
icebp
rcll
test
stos
in
dec
push
repnz
jae
filds
mov
pop
cmpb
test
cmp
in
lods
push
dec
mov
daa
jl
push
pop
mov
out
stc
mov
gs
movsb
in
jecxz
iret
push
push
pop
or
pop
jbe
test
add
int
xchg
in
adc
dec
jecxz
mov
jae
mov
inc
incl
jg
or
sub
je
cwtl
cmp
rclb
cmpsb
or
and
mov
mov
rorl
mov
setbe
jmp
iret
pushf
add
push
inc
pop
inc
lret
in
mov
adcl
rcrl
fidivs
lret
pop
ljmp
arpl
mov
mov
mov
rorb
mov
ss
mov
mov
fnsetpm(287
lahf
test
add
shll
and
push
mov
lods
repnz
lock
imul
mov
cld
icebp
fstps
int
sbb
mov
push
fdivl
sub
xchg
pop
mov
push
dec
lea
jbe
pusha
pop
enter
decl
xchg
dec
test
push
push
frstor
call
in
inc
or
test
idivl
clc
cld
lret
loope
loop
add
cmc
shlb
xor
mov
add
rol
lock
push
adc
fs
mov
test
mov
mov
jge
and
jl
sti
sahf
and
pop
movsb
sarb
lds
sub
adc
ret
aas
mov
mov
mov
rcr
in
aad
sbb
lret
popf
and
add
push
andb
add
jmp
lods
cmpsb
lods
insl
cmp
les
dec
dec
lcall
sti
and
test
jge
hlt
sub
and
xchg
cmp
loope
aam
fwait
lods
imull
pusha
cmpsb
adc
int3
push
xor
repnz
add
push
aad
scas
dec
lea
adc
gs
xor
fmuls
in
rolb
dec
and
pop
xchg
cli
pop
push
mov
cmp
pop
xor
cmp
inc
gs
dec
lods
add
sbb
aaa
jle
dec
xor
in
in
pop
leave
or
inc
adc
jo
shrb
les
in
adc
inc
push
repz
leave
cwtl
or
addr16
cmc
mov
jnp
iret
or
xchg
jmp
jg
inc
push
or
push
movsb
gs
addl
jle
pop
sti
inc
repz
insb
sub
push
or
cli
lret
pop
mov
test
jmp
loope
mov
es
xor
sarb
pop
test
jle
gs
rclb
mov
jmp
mov
aaa
in
push
call
sbbl
mov
pop
sub
hlt
mov
jbe
add
jae
adc
lcall
ljmp
call
add
push
sub
stos
push
mov
sub
and
bound
gs
push
push
in
add
sub
push
es
xor
pusha
enter
dec
xor
rorl
sbb
adc
stos
jo
sbbl
cmpsl
adc
addr16
mov
lds
test
fwait
and
stos
fdivrs
shlb
pop
clc
or
mov
jg
das
lret
fsubl
jnp
test
mov
adc
xchg
add
leave
sbb
mov
push
std
pop
jne
mov
dec
push
aad
pop
adc
fcomp
pop
cs
jb
stos
les
es
stos
xor
push
sub
cmp
jae
icebp
mov
mov
dec
mov
xor
mov
test
lods
lock
mov
je
js
mov
jl
mov
in
push
sbb
fcoml
dec
imul
xchg
roll
movsb
or
out
jb
sahf
and
test
popf
fiaddl
inc
lea
inc
xchg
mov
add
xchg
inc
loop
je
test
jb
and
mov
inc
cmp
outsl
les
enter
jbe
arpl
popa
pop
std
push
dec
or
xor
add
mov
outsl
popa
imul
and
int3
dec
cmp
add
sbb
and
clc
lret
ljmp
data16
lea
push
notb
cwtl
arpl
and
push
mov
or
lds
mov
pop
aaa
out
aaa
xchg
test
into
push
pop
xor
jo
lcall
xor
mov
push
push
add
sub
mov
movsb
cmp
jle
inc
add
or
xor
sub
lods
mov
movsl
mov
adc
int
xchg
popf
fcmovnbe
pop
shlb
jno
cmp
clc
add
aam
xor
daa
xchg
idiv
out
mov
es
cwtl
push
xchg
dec
inc
ljmp
faddl
movsb
mov
dec
adc
in
jbe
push
sub
fadds
ret
xchg
mov
pop
out
cmc
ficompl
lods
mov
bound
or
and
pop
fwait
repnz
mov
aaa
jmp
xchg
mov
popa
or
test
mov
inc
loope
popf
sub
and
sub
jae
lahf
sbb
mov
sub
dec
insb
xacquire
in
and
popa
cmp
sbb
movsl
push
int
mov
dec
fcomps
loope
jae
int3
dec
insl
pop
sbb
pop
mov
adc
push
fcmovu
mov
ljmp
fnstenv
adc
test
or
adc
jecxz
pop
add
jge
dec
mov
cwtl
sbb
cs
adc
insb
push
dec
icebp
cmp
jp
or
dec
test
adc
sub
ret
adc
icebp
test
addb
test
adc
mov
or
dec
lea
pop
or
insl
xchg
sahf
sub
or
jbe
xchg
xchg
loope
ror
push
xor
adc
xchg
cmp
inc
xor
inc
out
dec
mov
push
mov
ja
sub
sti
lds
add
mov
mov
jle
dec
es
bound
push
test
sarb
xchg
mov
enter
mov
push
xchg
aas
jb
jp
push
push
sbb
mov
mov
fcoml
lahf
xchg
adc
adc
repz
pop
jmp
adc
insl
sub
in
pop
inc
bound
cwtl
xchg
mov
push
mov
push
test
mov
sbb
and
mov
inc
jle
in
fimuls
cltd
lods
leave
popa
mov
roll
mull
jecxz
lcall
lods
mov
inc
cmp
inc
xchg
sbbl
imul
test
push
sub
loop
dec
xor
dec
fimull
data16
xchg
out
cmpsl
sbb
fisttpl
scas
xchg
adc
adc
clc
mov
leave
mov
inc
stc
mov
roll
gs
sbb
dec
rol
mov
adc
cmp
insl
out
shlb
xchg
adc
dec
insb
inc
negl
daa
xor
xchg
dec
or
test
or
addr16
fidivs
pop
cmp
sbb
stos
in
es
inc
jge
aam
bt
fwait
scas
rorl
icebp
xor
call
mov
push
and
outsl
inc
adcb
sub
push
mov
insl
push
pop
clc
xchg
je
ljmp
push
sub
lcall
outsb
cwtl
shrl
aad
inc
scas
aas
shll
movsb
aaa
mov
cmc
xchg
rorb
dec
test
cmp
push
out
mov
or
enter
mov
inc
adc
ljmp
add
pop
jb
add
insb
add
dec
jmp
mov
lock
jge
xor
scas
out
outsb
add
sbbb
aad
add
lcall
push
ljmp
into
nop
sub
mov
es
adc
cmpsl
cmpsl
sub
fst
inc
add
or
mov
stos
fs
shrl
cmp
lea
mov
xor
les
or
faddl
test
push
push
mov
pop
std
orb
out
dec
jns
cmpsl
pop
and
mov
lret
bound
ja
icebp
in
test
inc
in
pop
aaa
push
cwtl
mov
daa
and
and
outsb
fisttps
sarb
notb
popf
lea
xor
jb
enter
pop
push
inc
bound
push
idivb
xchg
xor
add
fdivs
or
cli
add
ja
ss
xchg
lret
mov
cmpsb
sbb
imul
pop
into
test
xor
add
add
xor
ss
in
dec
jno
scas
push
inc
insb
add
insl
jp
mov
add
les
cwtl
imul
and
xchg
sbb
pusha
push
adc
imul
xchg
fstpl
rclb
dec
pop
adc
inc
loope
ds
out
scas
insl
daa
cs
pusha
dec
adc
lods
jg
in
pusha
inc
movsl
and
mov
fcoms
out
sub
lods
adc
jns
add
lret
add
cmp
jno
daa
cmp
cmc
in
jo
xchg
lds
mov
adc
das
or
out
xchg
jbe
ja
mov
aas
rorl
inc
lret
inc
and
add
dec
in
cwtl
pop
dec
test
push
xor
pushf
cmp
push
sub
dec
mov
inc
shrb
lret
aam
rol
aas
mov
dec
test
lea
sub
pop
lods
adc
mov
pop
aam
pop
aad
inc
pop
xchg
addl
pop
and
lret
sbb
in
rclb
imul
sub
add
sti
sub
push
lods
mov
push
rcrl
icebp
out
push
add
pop
mov
cli
clc
sti
pusha
clc
jge
push
iret
enter
inc
sub
and
outsb
jb
out
xchg
fildll
fdivrl
pop
inc
iret
dec
pop
pushf
ret
add
lods
dec
sbb
or
push
pop
das
loop
das
dec
pusha
xor
pop
mov
mov
sbb
jbe
add
call
pusha
xor
jge
rorl
xor
neg
fdivs
outsl
test
nopl
mov
frstor
xchg
jmp
and
gs
mov
pop
and
sub
adc
adc
xchg
dec
bound
cmp
push
pusha
lock
orl
mov
cmp
adc
repnz
andl
inc
mov
pop
aad
and
sub
daa
out
cmp
jnp
dec
or
scas
rcll
cmp
xchg
inc
push
orl
js
bound
out
push
jbe
dec
out
jmp
es
xchg
sub
lods
add
xor
pop
pop
imul
push
pop
sbb
inc
dec
cmpsl
jbe
xchg
push
jl
cmp
stos
or
enter
push
cmp
dec
test
pop
mov
mov
xchg
mov
stos
negb
mov
ret
int3
xchg
dec
add
jl
hlt
jp
sub
data16
cmpsl
bound
fs
push
push
xchg
das
ret
dec
mov
dec
dec
mov
cs
and
test
inc
test
mov
dec
or
rcr
sub
sbb
es
in
jg
push
clc
fwait
hlt
inc
sbb
jg
imul
test
jge
stos
add
mov
or
test
push
lods
sbb
and
repz
inc
jns
sbb
push
sub
sub
push
xchg
pop
dec
add
and
pusha
arpl
mov
or
js
fldenv
and
subl
dec
push
inc
js
jle
fs
cs
add
xor
inc
lret
lds
push
cmpb
fiaddl
sti
ret
arpl
or
out
mov
cmc
inc
jb
jne
cmovae
in
inc
or
clc
add
push
out
lea
das
or
lea
sub
je
jno
mov
inc
sti
mov
je
leave
shll
out
dec
push
jge
adc
fisubl
lock
sti
jne,pt
dec
in
pop
sbb
dec
ret
std
sar
xchg
cmpl
ds
enter
inc
movsl
sbb
subl
in
cld
or
cmpsl
loopne
and
adc
mov
scas
lods
fnstsw
jns,pt
pop
adc
rcrl
dec
shl
loopne
into
in
pop
in
mov
push
cmp
mov
out
fldl
xor
lahf
lea
inc
xlat
xchg
aad
mov
mov
popf
lahf
js
cli
jno
cltd
or
adc
filds
in
subl
dec
sub
fs
mov
fs
ficoms
shrb
jmp
shlb
std
in
shll
dec
lock
pop
out
bswap
daa
add
enter
jmp
in
sbb
cmp
aam
push
ja
fnstcw
shlb
adc
mov
push
das
push
sbbl
rclb
cwtl
add
dec
pop
ret
sbb
xchg
arpl
pop
mov
add
cmp
adc
aas
ret
sbb
aad
xor
loop
fwait
test
adc
out
sarl
hlt
jo
fst
jno
mov
xchg
add
out
and
inc
push
fcmovbe
fcomps
mov
or
sub
stc
pop
xchg
andb
loopne
adc
int3
rcl
ror
or
punpckldq
cmpsb
add
pshufw
pop
dec
lock
push
lea
push
cld
js
arpl
rcrb
js
mov
sbb
mov
mov
xchg
mov
mov
jnp
nop
and
mov
xor
enter
dec
sub
and
out
sub
scas
loope
mov
loope
dec
iret
push
mov
outsl
in
ret
jbe
sub
lret
sbb
out
sbb
pop
pop
push
jecxz
insl
sub
add
adc
arpl
movsl
push
shrb
jg
in
sbb
sbb
mov
cwtl
jecxz
loopne
lds
movhps
pop
imul
loop
fisubrl
fldl
lahf
push
mov
mov
inc
jns
out
scas
cwtl
aaa
pop
or
lahf
or
setle
repnz
jle
push
ljmp
or
movsl
lea
cmp
sub
dec
push
jle
cmp
mov
lods
or
mov
xor
mov
outsb
push
insl
ret
sbbl
cli
mov
jmp
mov
pop
push
mov
mov
cmc
pushf
outsb
stc
mov
and
pusha
fmuls
xchg
mov
xor
sbb
xor
mov
pop
dec
jbe
push
mov
scas
mov
mov
mov
mov
mov
in
clc
dec
jbe
sub
daa
fnstsw
loop
sbb
cmp
insb
shlb
je
mov
in
lcall
pop
sti
dec
sarb
xchg
data16
mov
nop
rcll
fs
add
sub
push
sub
or
push
push
jno
lahf
dec
jns
test
jno
add
cmp
dec
xor
or
std
test
addr16
mov
stc
cmpsl
cmp
jmp
xchg
movsb
mov
shll
vmread
pop
stos
jnp
push
mov
aas
out
inc
fs
insl
mov
and
lcall
sbb
lahf
cld
jle
inc
repnz
lret
in
cmp
push
push
push
dec
cld
sbbb
in
clc
cld
cmp
out
jmp
jnp
sahf
mov
test
pop
out
pop
xor
or
xlat
int3
iret
lcall
rorl
or
in
scas
push
je
icebp
and
pop
dec
and
cltd
jae
jbe
and
out
pop
mov
loopne
xor
inc
in
sahf
pushf
aad
jo
lods
movsl
inc
adc
out
jecxz
ljmp
fucomip
push
mov
adc
and
sub
adc
mov
stc
xchg
cmp
inc
jle
mov
mov
loopne
inc
mov
lods
sbbb
stos
jmp
or
insl
div
cmpsl
ss
adc
pusha
dec
xchg
gs
out
mov
pop
push
add
adc
dec
pushf
and
imul
xchg
mov
out
das
in
hlt
xor
loope
pop
xchg
movsb
repz
loopne
jbe
xchg
and
mov
dec
pop
dec
mov
jmp
sbb
lcall
jmp
jmp
and
test
pop
and
sbb
cli
jae
and
sub
inc
outsw
jo
in
testl
mov
jge
cld
xchg
cs
out
pop
loopne
xlat
pop
xchg
enter
ret
loop
adc
jl
not
jb
and
xlat
push
mov
divb
or
mov
lahf
dec
shrb
fsubrs
pusha
arpl
mov
dec
mov
lahf
addr16
orb
addr16
inc
pushf
vpcmpeqd
std
aaa
insl
sub
push
or
popf
pop
in
push
shrb
nop
cmp
mov
call
push
xorl
adc
xor
sub
cltd
loope
pushl
icebp
xor
ljmp
jle
dec
gs
pop
out
imul
out
lds
or
aad
into
jb
shlb
mov
movsb
jmp
mov
or
loope
add
add
addr16
std
stos
jmp
or
paddd
dec
cmpsl
mov
cmpsb
popf
mov
sub
xor
gs
inc
cmp
xchg
push
nop
js
ret
shll
aam
in
ror
sbb
sub
mov
inc
cmp
xchg
imul
sub
icebp
rorb
inc
add
pusha
psubb
call
mov
cmp
faddl
jo
dec
pop
or
jno
fwait
daa
cmpsl
and
inc
stc
lahf
mov
inc
add
jle
je
aad
inc
xchg
cwtl
pusha
lret
mov
arpl
push
mov
movsl
shl
push
cwtl
loope
mov
add
pop
lret
pop
adc
sub
push
mov
dec
fucomip
sahf
pop
sbb
push
xor
jnp
mov
dec
shl
add
pop
adc
lods
mov
aaa
test
outsb
ds
mov
dec
cmp
test
mov
xor
mov
cmp
cmpsb
sbb
add
hlt
out
adc
ja
aaa
outsb
xchg
dec
imul
and
jp
and
inc
es
out
cwtl
pop
loope
test
xchg
sub
and
add
xchg
loope
outsl
adc
mov
add
sbb
fdivs
adc
popf
mov
cmpsl
pop
rclb
mov
mov
movsl
lahf
sbb
sub
fnstcw
lcall
mov
movsb
out
pop
loopne
cmp
sub
jl
push
sbb
xchg
push
adc
jg
sbb
ret
cld
ret
gs
dec
push
and
mov
sub
mov
pop
rolb
xchg
dec
mov
mov
adc
repnz
ljmp
mov
adc
adc
mov
xchg
jl
call
push
js
push
cwtl
nop
dec
shlb
std
ret
inc
sub
sub
jmp
xchg
lea
sbb
or
iret
lret
dec
cli
cmp
lds
dec
add
lahf
in
movsb
cmp
pause
and
jle
test
sub
add
icebp
aas
sbb
outsl
fs
movsl
and
jg
inc
dec
into
std
das
adc
call
into
pop
push
stos
dec
sbb
mov
jnp
stc
jecxz
inc
mov
popa
test
and
sahf
inc
sub
outsl
jmp
push
xor
call
jge
sub
xlat
sub
cmp
outsb
push
es
or
dec
xor
jbe
scas
lret
insl
push
enter
push
in
out
inc
add
xchg
mov
jns
push
sub
les
inc
sbb
jae
xchg
xchg
cmp
sbb
inc
into
xchg
mov
loope
pop
loope
cmpsb
cmpsl
dec
lea
movsl
adc
dec
insl
sbb
xor
mov
mov
jle
mov
sbb
dec
inc
mov
fcoml
pop
fsts
bound
push
jo
pop
scas
pop
andl
hlt
jecxz
xor
mov
ljmp
xchg
cmp
pop
sbb
xchg
inc
and
xchg
pop
add
test
and
in
lahf
cmp
aas
xchg
ret
sbb
sbb
insb
jecxz
out
jne
lahf
xchg
mov
popa
xor
ljmp
fimull
sbb
sub
movsb
add
aad
mov
adc
pop
xchg
push
mov
mov
xor
xlat
inc
into
lock
add
xchg
sahf
sbb
in
mov
pop
ffreep
popf
test
cmc
enter
imul
jge
test
enter
les
pusha
xor
imul
pop
dec
mov
inc
in
xchg
jno
push
les
repz
xor
bnd
jge
repz
sub
jmp
cmc
fs
and
js
in
es
or
xorb
dec
js
cmp
hlt
shlb
cmp
cmc
and
movsl
mov
pop
jmp
lahf
out
sub
mov
pop
mov
mov
add
jge
adc
sahf
es
inc
mov
inc
push
notl
or
es
mov
mov
or
cmp
xor
scas
adc
rorl
mov
lahf
test
or
cmp
cltd
mov
cmp
pop
pop
push
out
xchg
ret
mov
mov
fwait
cmp
fnstenv
cmp
mov
iret
push
clc
and
sub
pop
or
xchg
mov
mov
ret
divb
jg
les
out
iret
int3
mov
inc
aam
fisubs
lea
sbb
aas
adc
cmp
push
and
mov
mov
add
sbb
pusha
mov
pushf
adc
cmp
stos
rcrl
mov
xchg
mov
mov
jmp
shrb
mov
inc
sub
push
sbb
xchg
mov
gs
in
push
cmp
inc
sub
cmp
adc
add
fwait
add
jle
sti
pop
xchg
nop
cs
mov
frstor
pusha
in
pop
add
sbb
movsl
mov
fadds
fsubs
enter
in
setnp
sbb
repz
mov
fmull
xor
in
jecxz
jae
sti
into
and
jmp
xorb
scas
scas
stc
mov
adc
dec
add
lcall
jge
fstpl
xchg
jmp
ret
adc
dec
sbb
adc
enter
movsb
lahf
jo
adc
xchg
pop
popa
dec
sbb
sub
pop
and
sbb
jecxz
cmpl
out
ret
jo
addr16
mov
xlat
xor
loope
mov
xor
cmp
jge
scas
and
loop
xchg
push
dec
enter
or
jge
dec
out
and
push
into
sub
jg
or
and
repz
outsb
xor
xchg
push
fwait
add
lods
mov
sub
push
xor
in
jmp
inc
pop
ficoml
and
stos
inc
imulb
das
adc
in
xor
xchg
imul
sbb
cmp
nop
iret
cmpsb
outsl
rcr
jno
jg
inc
pop
and
mov
dec
pusha
in
inc
fidivl
sub
mov
jnp
call
sub
fdivl
fisubl
daa
popa
sti
jecxz
rcrb
inc
test
ret
push
outsb
xchg
scas
sub
lds
and
sbb
insl
fwait
sub
adc
sahf
mov
das
xchg
lret
in
add
ds
test
xor
mov
pushf
test
xor
out
pushf
test
hlt
cmc
dec
or
cmp
outsl
pushf
pushf
fsubs
cmc
mov
dec
mov
mov
enter
pop
push
xor
repnz
fildl
call
xor
xlat
xor
or
aaa
insb
pop
pop
sub
dec
xchg
pop
xor
and
push
mov
pop
imul
push
add
test
push
push
pushf
and
jle
cs
fstpl
add
cmpl
lock
scas
test
sub
clc
mov
loopne
fiadds
or
add
pusha
mov
jbe
ret
aad
adc
shrl
dec
gs
negb
outsb
cmc
insl
loope
outsl
daa
ret
mov
sub
je
push
lods
mov
jle
cmpb
jmp
mov
add
lods
lock
mov
pop
cmp
adc
pop
xchg
imul
mov
nop
stc
into
add
inc
mov
pushf
mov
movsb
std
fisubl
push
inc
push
adc
cli
inc
repz
adc
cmp
outsl
jne
aad
repz
fwait
mov
adc
mov
dec
xchg
cmp
inc
add
imulb
sbb
aam
mov
jo
sub
add
scas
fldt
xchg
pop
out
jecxz
sarl
sub
cmc
gs
xchg
fs
push
jl
scas
xor
add
inc
loope
add
mov
sbb
ficompl
mov
add
aam
fmuls
inc
jns
sarl
int
mov
jae
dec
mov
dec
xor
in
xchg
int3
push
stos
scas
mov
das
mov
sbb
cs
call
push
push
jl
xchg
jp
insl
inc
xor
leave
cli
int
mov
push
test
sti
lcall
fcoms
dec
add
ss
inc
fs
ds
inc
push
sti
add
xchg
inc
adc
and
pop
ror
xor
ja
jp
dec
xchg
shrb
add
fisubs
movsb
jmp
pop
cmp
jl
jae
lea
cltd
ret
pop
test
aaa
loopne
lcall
xor
test
push
xchg
fstpt
sbbl
aad
idiv
test
shll
in
mov
mov
popa
mov
movsb
in
adc
mov
aas
test
loope
clc
cli
cmp
sub
fisubl
cmp
outsl
mov
loope
pop
mov
mov
pushf
inc
test
lret
imul
mov
xor
jecxz
mov
test
aam
notl
cli
sbb
xor
fisttpll
cmp
mov
fwait
enter
jns
mov
call
or
mov
mov
sbbl
popf
aaa
loopne
mov
setno
inc
insb
addr16
mov
cmpsl
fisubrl
in
daa
push
scas
sub
adc
mov
push
jbe
xorl
and
add
ffreep
addr16
push
xor
cld
or
aas
mov
push
imul
xchg
sub
loope
jle
jns
call
movsl
int3
and
sbb
jnp
cld
cld
std
std
push
sub
xchg
jl
jge
sarb
sub
rcr
sub
out
mov
adc
and
sbb
mov
push
popf
popa
arpl
shrb
add
fidivrs
adc
movsb
aaa
push
pop
inc
xor
pop
mov
cmp
push
inc
ret
ret
mov
dec
mov
out
data16
outsb
dec
cltd
sahf
xchg
mov
in
adc
lea
cmp
notb
inc
inc
inc
and
mov
sub
mov
adc
ret
xchg
xor
push
or
scas
cwtl
gs
push
stos
addb
mov
movsl
push
out
sub
aas
arpl
mov
subl
stos
pop
or
in
stos
fwait
xchg
push
sub
dec
adc
int3
cmp
roll
lds
pop
sbb
jp
jne
mov
mov
sbb
dec
into
pop
mov
xchg
repz
pop
into
ret
out
sbb
ficoml
dec
shr
sub
lcall
dec
into
imul
jae
pop
fidivs
movsl
add
jmp
ficompl
sbb
xor
stc
mov
aam
push
shr
not
inc
sbb
or
iret
xchg
jecxz
adc
add
adc
sahf
icebp
icebp
xchg
sub
test
in
stc
rcll
sub
or
add
cld
into
std
loop
loopne
sarl
xor
imul
mov
shll
jb
pop
cld
ret
call
fwait
stos
test
adcb
aam
inc
sbb
sbb
into
test
xlat
xchg
aas
fbstp
dec
inc
popa
outsb
jne
mov
mov
jno
xor
inc
in
cmpsb
cmpsl
push
cmp
jp
mov
mov
add
insl
mov
test
and
cwtl
adc
mov
movsl
cmpsl
notb
xchg
mov
imull
rclb
mov
and
sbb
stos
pop
xor
loope
jle
in
push
mov
inc
daa
repz
movsb
repnz
ret
xor
ljmp
mov
cmp
popa
fwait
adc
xor
mov
add
jp
test
addb
mov
icebp
jmp
and
lds
jae
mov
cmp
cmp
sar
adc
jae
or
or
das
add
push
int
push
mov
push
fcmovnbe
adc
popf
dec
cli
jo
insl
js
sub
inc
fwait
push
nop
mov
jle
jle
call
pop
add
dec
aas
cmp
test
nop
jp
ja,pt
cmc
jbe
fidivs
fimull
push
mov
and
and
repz
addl
dec
pop
xor
imul
push
jne
jl
push
inc
into
adc
les
shll
popa
dec
push
in
sahf
loopne
hlt
test
or
in
mov
movsb
xchg
jecxz
aam
subl
hlt
arpl
popa
ja
xchg
aad
adc
pop
cld
iret
jmp
pop
push
mov
out
popf
add
adc
and
or
ror
dec
xlat
xor
inc
lods
xchg
mov
dec
inc
test
ds
mov
mov
jmp
loopne
inc
mov
cmp
cmc
sbb
jmp
mov
push
pop
popf
push
add
dec
mov
sub
out
jg
pop
sub
adc
mov
xor
or
mov
sub
lahf
roll
fisttpl
xchg
push
clc
mov
add
into
adc
cmp
loopne
gs
mov
mov
mov
mov
mov
and
test
ret
xchg
jnp
push
inc
icebp
cwtl
xchg
aad
push
ss
fldenv
lock
pusha
outsl
imul
mov
push
lahf
shrl
mov
in
pop
test
outsb
rol
std
mov
push
lea
je
add
mov
pop
adc
sti
clc
lods
nop
inc
adc
fwait
cmp
xchg
xorb
inc
mov
mov
xchg
ja
cli
lods
adc
pushf
add
je
mov
sbb
pop
push
cltd
inc
insb
cmp
movlps
dec
aad
add
pop
inc
cltd
rcrl
xor
cmpsl
scas
jns
ret
in
sbb
mov
cmp
enter
sti
rorb
xchg
fidivl
out
xchg
jl
cmp
sbb
push
push
jnp
movsb
ljmp
lock
nop
popa
loop
add
add
add
iret
ja,pt
cmp
xabort
scas
fwait
mov
sub
pop
mov
jg
adc
mov
cmp
jmp
adc
arpl
aaa
inc
aas
add
lahf
out
jle
jl
clc
and
and
or
push
adcl
iret
mov
in
in
add
jp
aas
cs
push
btc
mov
js
mov
sbb
fiaddl
sahf
cmp
mov
jg
or
loopne
mov
mov
mov
sbb
shlb
sarl
leave
testb
movsl
sub
pusha
cmpsb
rorb
fimull
jge
out
mov
shrb
mov
adc
fiadds
pop
into
and
movsb
and
lret
push
pop
xor
sub
jmp
inc
or
jo
pop
mov
clc
sbb
popa
xchg
rcrl
lahf
mov
xchg
adc
xchg
insl
jb
and
sub
rorb
add
repz
mov
cmp
loopne
sti
cli
jge
bound
push
cmc
xchg
int
jmp
cltd
push
cmpsb
add
je
dec
mov
jne
popa
lea
adc
push
inc
adcl
jl
adc
push
dec
fmuls
add
test
pop
insl
mov
dec
repz
pop
push
cmp
jecxz
mov
sbb
test
aam
sbb
jnp
insb
imul
mov
jbe
sub
xor
dec
ret
dec
mov
and
add
mov
js
je
add
mov
push
test
lods
sub
xor
imul
mov
mov
pop
dec
movsl
scas
mov
adc
push
jb
out
pop
xchg
sbb
inc
rcll
lods
pop
xchg
sarl
and
push
cmp
xor
loopne
arpl
jbe
sub
push
jne
sub
loop
inc
inc
out
inc
and
lds
cli
mov
rorl
cmc
fcomps
outsb
rcl
or
push
lret
xchg
stos
js
in
fsub
imul
fabs
jo
mov
stos
repz
out
sbb
mov
nop
outsb
inc
or
pop
popf
mov
stc
fiaddl
mov
lods
sahf
sub
enter
mov
pop
pop
mov
mov
movsb
ds
call
mov
sarl
in
inc
mov
jg
xor
out
jge
lods
or
ficompl
aas
cmp
fwait
adc
fildl
push
idiv
es
insb
rolb
mov
lods
adc
sub
stc
lahf
or
and
test
mov
test
imul
cmp
pop
ret
inc
std
cmpsb
mov
push
dec
arpl
fisubrl
in
data16
aad
xchg
mov
repnz
lods
adc
cmp
add
out
insb
push
sbb
and
pusha
insb
cmpsl
jl
fistpll
shll
inc
inc
in
jb
mov
stc
mov
and
popa
rcr
mov
mov
int3
pusha
mov
mov
shlb
nop
xor
mov
icebp
insb
loopne
and
in
jecxz
sti
int
into
out
or
jmp
xorb
outsb
mov
cmp
pop
sub
clc
fs
orl
and
inc
push
push
popl
inc
jge
push
adc
add
dec
push
mov
js
sub
push
popf
inc
dec
and
xchg
das
lock
or
dec
inc
sbb
jmp
sbb
sbb
or
je
jmp
inc
mov
roll
sbb
ret
xchg
popa
or
fsubl
xorb
mov
adc
xor
insb
mov
flds
pop
push
add
pop
jl
mov
int
enter
xlat
jbe
popa
inc
movsb
adc
imul
cmp
jo
test
dec
ss
inc
adc
flds
mov
lcall
inc
cltd
add
int
push
sbb
xor
mov
push
aaa
outsl
or
cmp
imul
pop
test
xchg
jno
dec
inc
push
or
adc
and
leave
je
jmp
out
sub
cli
cmpsb
xchg
outsl
lds
or
jno
cmpsl
adc
lock
xorb
out
push
cmp
jle
mov
inc
fdivl
fdivl
roll
lahf
inc
rolb
push
xor
jmp
jo
push
sbb
pop
movsb
std
sbb
popa
insl
in
rcrb
jmp
jo
dec
xorl
popa
xorb
mov
xor
sbb
jne
cmp
mov
mov
mov
xchg
scas
mov
xchg
push
dec
push
adc
cwtl
mov
xchg
aas
sbb
das
jp
xchg
and
fmul
and
adc
adc
and
and
or
insl
outsb
or
ss
dec
les
jecxz
daa
dec
push
mov
lods
test
mov
xchg
mov
aam
push
or
lea
xchg
adc
jl
test
subb
sbb
icebp
pop
and
and
xchg
push
xchg
lock
shrb
mov
js
mov
cli
lock
xchg
xchg
mov
sti
push
dec
dec
notb
fdivrl
lods
push
push
nop
cmp
scas
popa
cmp
push
mov
stc
in
jle
mov
inc
and
subb
and
es
jnp
adc
cmc
or
pop
mov
mov
xor
adc
mov
sub
out
aaa
cmp
std
cmp
mov
subb
out
and
sub
les
add
imul
andb
f2xm1
push
push
call
xchg
inc
popf
pop
pop
sub
scas
stos
dec
lret
addl
inc
inc
test
dec
dec
mov
xor
in
ret
jge
arpl
inc
cltd
hlt
dec
and
dec
jge
jg
popa
inc
jns
sbb
popa
mov
stos
inc
xor
xor
addl
push
push
pushf
gs
je
aaa
aaa
mov
jge
mov
sar
call
popf
jge
mov
adc
jbe
mov
gs
enter
xlat
adcl
test
inc
cmp
ss
or
cwtl
lahf
add
mov
sub
add
or
out
std
mov
jl
int3
xchg
fiaddl
adc
pop
cli
daa
mov
divb
jle
sub
enter
dec
mov
or
xchg
lods
cmp
int3
clc
les
push
rcll
imul
pop
pop
ss
les
fcomps
ss
push
les
add
lods
inc
inc
scas
ds
push
outsl
add
mov
push
cmp
xor
inc
stos
xchg
movsl
test
mov
add
sbb
adcb
shll
ror
out
nop
xchg
cs
ljmp
and
mov
mov
inc
push
les
cmp
mov
mov
stos
pop
dec
mov
mov
adc
xor
inc
sub
sbb
sbb
imul
testb
testb
int3
sti
sbbl
mov
out
insb
icebp
and
jl
ret
inc
aam
les
adcb
loopne
hlt
or
lods
inc
cmp
cs
jae
fstpt
popa
lods
aam
popf
jno
xchg
cmp
xor
pushf
andb
in
mov
add
leave
adc
imul
mov
push
mov
jno
or
shl
jne
mov
fidivs
loope
cmp
or
es
xchg
xor
push
and
shll
cld
std
add
push
jae
jp
fadd
sbb
pop
mov
dec
jmp
jnp
dec
add
sbb
add
cmp
inc
out
pop
mov
xchg
cmp
fcmovb
add
stos
pop
loop
out
mov
mov
lea
gs
iret
and
int3
xchg
mov
clc
dec
pop
fs
in
movsl
fidivl
loopne
loopne
rcll
inc
lea
push
rcll
gs
xchg
or
clc
pop
push
stc
call
or
fisttpll
cmp
pusha
insb
popf
inc
fildl
dec
jne
ret
sub
pushl
adc
pusha
sub
arpl
sbb
lods
mov
ret
cmovbe
cld
pop
cmc
jmp
fsubr
inc
jne
aam
sub
imul
jne
stc
add
adc
xor
xor
sbb
repnz
mov
push
jg
adc
clc
sub
stos
dec
jecxz
lds
cmp
lods
xor
inc
sub
pop
fsubrl
mov
inc
insl
lcall
pop
sub
mov
jno
mov
int
filds
mov
push
jle
fadds
inc
fsubs
arpl
jle
loopne
stos
inc
jne
sub
in
pusha
xchg
xor
cmp
int3
dec
imul
int3
mov
cmpl
sub
data16
inc
cmp
popf
push
inc
add
cmpl
dec
iret
adc
add
mov
test
lcall
cmpsb
or
inc
lods
out
scas
sbb
pop
call
push
std
pop
movsb
jp
aas
orl
cltd
add
pop
adc
adc
hlt
out
jo
sbb
inc
adcl
add
cs
xchg
js
sti
jno
adc
daa
movl
bound
cmpsl
xchg
push
sbb
hlt
lcall
ret
lds
jnp
jb
mov
clc
cmp
mov
stos
cs
pop
std
sbb
js
inc
lods
stos
pop
xchg
call
das
jl
add
xor
neg
js
stos
inc
ficomps
cmpl
and
in
icebp
addr16
add
inc
dec
inc
cld
bswap
add
into
mov
xor
sbb
jbe
cli
mov
cmpb
push
and
xor
mov
ja
daa
inc
inc
dec
mov
lock
ljmp
movsl
sbb
push
aas
mov
xchg
xor
mov
xlat
dec
inc
leave
mov
loopne
xchg
fucomip
xchg
mov
mov
loop
push
popf
inc
inc
cwtl
add
mov
jl
xor
adc
xor
bound
mov
into
inc
fcom
jg
cwtl
pusha
or
mov
notl
jns
das
inc
popf
jge
cmc
insb
push
jg
push
jae
aam
fimull
mov
loopne
jo
xchg
xchg
and
rcrb
xchg
and
mov
outsb
in
dec
call
sbb
xlat
stos
and
out
mov
dec
aaa
hlt
div
dec
fcoms
add
xor
shlb
les
xchg
rcll
add
je
nop
ret
push
add
paddusb
sub
out
shr
imulb
flds
xchg
out
add
insl
cli
sbbl
fidivrl
pushf
fldt
lret
repnz
and
pop
fwait
mov
ljmp
or
in
mov
pop
lock
xor
mov
iret
xor
les
out
fstpl
adc
ret
dec
jb
sub
mov
push
and
xchg
out
xlat
out
test
push
xorl
and
test
sbb
and
push
je
xchg
mov
cmp
in
pop
rclb
xchg
and
insl
cmp
scas
inc
or
cmpsb
repz
dec
mov
jb
movb
add
gs
in
mov
jle
pop
addr16
inc
jecxz
repnz
shrl
pop
or
sbb
pop
adc
jle
mov
mov
mov
jp
pushf
iret
xchg
xor
xlat
adc
hlt
sub
data16
inc
ljmp
enter
subl
or
push
movsb
outsl
pop
pop
insb
sbb
sub
mov
mov
xchg
pop
xlat
std
sbb
xchg
push
pop
jl
add
les
sarb
sbb
jne
cmpsb
mov
inc
cltd
xchg
call
stos
sahf
jmp
shll
cli
pop
mov
imul
inc
mov
scas
pop
aaa
mov
mov
mov
mov
into
cli
test
inc
cmp
movsb
jl
or
inc
fwait
outsl
push
mov
cmpsl
rcll
or
popf
cmp
cld
ficoms
adc
sbb
shr
jg
mov
push
jae
fcoml
out
pop
inc
mov
mov
lods
in
jo
inc
stc
pop
jo
outsb
ss
iret
adcl
push
pop
cmp
outsl
pop
mov
jle
aas
or
test
cmpsb
outsb
fstpl
insl
shll
fadds
and
jae
adc
lcall
and
jmp
repz
dec
xchg
pop
loope
out
jae
sahf
dec
loopne
mov
and
xor
das
or
mov
dec
xor
inc
cld
or
pop
out
addb
xor
pop
push
mov
sarb
or
popa
icebp
inc
mov
xor
push
aad
adc
and
aam
jmp
pop
sub
add
mov
repz
inc
xor
scas
mov
jp
pop
push
pop
adc
mov
lahf
mov
test
aam
outsl
xor
aam
push
aaa
test
jnp
mov
sub
shll
sbb
clc
in
mov
sbb
dec
rorb
dec
ljmp
jno
mov
mov
xchg
std
or
inc
or
inc
fstpt
mov
pop
cmpsl
inc
icebp
je
lret
mov
or
mov
and
xchg
jmp
and
jno
cmp
pop
inc
cli
test
sub
pushf
jno
lock
enter
sub
inc
sbb
sahf
cmp
push
adc
xchg
test
jge
pop
push
mov
pop
fs
sbb
gs
xchg
repz
int
ret
inc
mov
push
shll
jge
int
push
mov
mov
stos
rcrl
pop
sbb
pop
push
add
push
cld
xchg
out
stos
ds
int
sar
inc
gs
loope
cmpsl
mov
dec
movsb
icebp
call
xor
or
pop
and
pop
lods
loope
mov
cmp
mov
mov
shll
sub
push
cmp
fcomps
pusha
leave
mov
cmp
push
fcom
cmp
mov
add
movsb
and
bound
xlat
jo
mov
cwtl
cmp
mov
mov
adc
add
imul
push
xor
sub
adc
dec
scas
filds
iret
mov
lcall
and
lret
and
mov
jne
mov
mov
or
es
insb
jnp
and
cmp
and
call
leave
lret
mov
xor
sub
call
dec
test
pop
adc
jg
pushf
data16
lahf
lds
lahf
dec
and
cmpsb
cs
push
sbb
loopne
push
cld
ja
test
adc
insb
fisttps
mov
fnstsw
and
push
xor
push
dec
cmc
sub
lock
lds
pushl
fs
mov
out
adc
inc
mov
or
and
adc
xchg
lahf
aam
add
xor
popf
jecxz
mov
push
test
aad
test
pop
dec
pop
fisttpll
jg
stc
lock
cmp
adc
hlt
test
jnp
shrb
xchg
inc
jno
mov
aas
and
sub
jb
dec
adc
sarb
hlt
jnp
cmpsb
jle
dec
std
clc
add
mov
xchg
or
sbb
xchg
cmp
int
xor
pushf
fyl2x
stos
sub
sbb
pop
popf
test
out
push
dec
mov
in
movsl
nop
pop
jecxz
cmp
sbb
adc
pop
sub
or
push
xchg
dec
int3
lahf
lods
dec
pusha
add
jns
cmc
pop
andl
push
int3
lret
adc
mov
jp
out
push
fadds
in
mov
cld
pop
jne
out
jae
jmp
lock
sbb
xor
lods
xchg
xchg
mov
js
jo
movsb
jns
lods
insb
sub
or
in
dec
xchg
mov
outsl
push
loop
js
stos
iret
mov
lret
imul
cmp
lea
popf
out
arpl
push
sbb
clc
inc
xchg
push
fwait
and
dec
add
add
fiadds
dec
movsl
add
and
xchg
pop
imul
int
mov
mov
out
adc
mov
mov
add
xchg
lcall
cmpsl
jo
or
inc
mov
loope
fwait
clc
lcall
shl
insl
aad
aad
in
adc
decb
lahf
add
enter
or
sbb
loope
fwait
sub
sti
inc
cmp
or
rcrb
psraw
rcr
cld
mov
xor
cvtpi2ps
cmp
xor
mov
out
mov
lock
ja
push
cmp
inc
xchg
andb
cmp
or
inc
xor
loopne
pop
dec
leave
movsb
fucom
sub
mov
pop
cmp
sbb
scas
sub
ds
cmp
outsb
ds
neg
ret
int
imull
fisttpll
pushf
inc
cwtl
test
adc
push
inc
ret
inc
sahf
movsl
mov
xchg
jno
data16
lock
xchg
xchg
xchg
iret
popa
jg
fiaddl
call
xor
and
clc
psrad
mov
faddp
pop
fistps
push
lret
mov
and
lea
pop
add
adc
js
and
xchg
lcall
insb
imul
mov
rcrb
xor
dec
inc
dec
fisubs
ret
fstps
insb
xor
daa
mov
sub
jns
push
xor
loopne
inc
loop
into
lret
mov
add
fcomps
dec
adc
icebp
fimuls
popa
mov
aaa
ds
gs
adc
inc
xchg
jno
rcr
icebp
jmp
mov
in
pop
cmp
ja
out
xor
cmp
in
in
inc
sbbb
int3
imull
add
enter
mov
mov
fs
xor
mov
sarl
xchg
jo
dec
or
xchg
imul
and
repnz
mov
lret
xor
push
and
and
lods
jmp
mov
stos
outsb
out
add
sbb
add
repnz
enter
mov
add
dec
lcall
es
out
or
mov
rolb
cmpsb
mov
and
sub
push
sahf
pop
dec
icebp
xor
and
add
lret
pop
ss
inc
cli
pop
shr
iret
push
dec
xorb
aad
imul
mov
call
mov
push
cmc
test
aam
push
sbb
out
aad
dec
jmp
lods
loop
lods
mov
or
adc
lahf
mov
add
aam
stos
cmpb
std
fstps
fbstp
in
ja
dec
das
jecxz
jbe
cmpsl
mov
xor
das
pop
adc
xchg
std
mov
adc
gs
inc
insl
mov
jg
or
mov
int
inc
adc
cmpl
xchg
fdivs
cmpsl
mov
cmp
sub
mov
cld
out
cmp
out
cmp
jmp
cmp
mov
push
push
xchg
stc
ret
lods
aas
push
dec
lahf
nop
pop
ljmp
cltd
or
push
aaa
lds
call
test
pop
push
clc
mov
out
sbb
mov
and
mov
jp
loope
adc
test
repz
mov
lods
add
pop
outsl
test
incb
ljmp
in
daa
add
cmp
mov
jmp
mov
sar
mov
mov
dec
movsl
mov
sbb
aaa
xchg
pop
cmp
ja
push
rcl
pslld
nop
in
dec
repz
push
loopne
mov
rorb
mov
stos
jge
push
cmp
and
cmc
push
lock
cmc
pop
ficoml
jae,pt
xor
push
jns
inc
loopne
cmpsb
cwtl
mov
pop
aaa
sub
lea
rcrl
fwait
in
sbb
es
test
pop
dec
adc
movsb
add
mov
push
jno
pop
jecxz
or
in
clts
inc
jp
inc
test
inc
lcall
fs
sub
inc
inc
scas
lcall
aam
or
lock
pop
add
cld
pop
gs
add
or
leave
and
jb
mov
xlat
add
cld
jg
push
shl
inc
pop
pusha
dec
jnp
aam
ja
daa
cmc
hlt
gs
insb
adc
subl
in
arpl
inc
flds
leave
fstpl
movsb
mov
lock
int3
mov
cs
in
cmp
xor
les
fsubs
mov
clc
adc
jmp
leave
mov
mov
fimull
lock
arpl
lret
cmp
pop
xlat
movsb
cmp
adc
dec
push
cld
xchg
pop
into
cmpsb
sahf
jae
adc
negl
popf
or
stos
subb
movsb
sbbl
sub
or
push
fcoms
add
shlb
sub
arpl
fs
lahf
jo
fisubrs
cmp
jp
xchg
push
jle
inc
pop
movsb
in
filds
mov
pushf
jb
std
sub
push
sub
pusha
pushf
jno
dec
aad
mov
outsb
call
test
mov
aam
nop
std
mov
dec
andb
and
cwtl
fsubr
dec
xchg
lds
fwait
ror
out
bound
out
mov
pop
cld
fdivs
out
rorl
out
inc
rcl
xor
push
test
push
out
mov
cld
mov
push
push
xchg
fnstcw
cmp
jge
stos
popf
std
fstpl
dec
aaa
cmpsl
xchg
mov
mov
add
sbbl
sti
or
stc
sub
into
add
add
push
popa
and
repnz
jl
jno
es
add
mov
and
cli
cmp
xchg
inc
mov
push
pushl
cld
xor
xchg
in
jmp
mov
negl
sub
adc
jl
ret
gs
les
xchg
add
fdivrl
mov
push
sbb
pushf
add
add
jo
and
mov
jbe
push
mov
enter
gs
xor
fisubrl
ret
out
mov
je
aas
xchg
mov
adc
sbb
cli
or
call
or
outsb
jge
xchg
jecxz
stos
xlat
mov
aad
xchg
push
cmpsb
mov
adc
mov
cltd
in
adc
xor
cmp
repz
sub
or
in
sub
int3
jmp
push
mov
fbstp
jge
jge
sbb
dec
mov
sub
push
xor
out
nop
add
aaa
insl
add
sub
outsl
mov
mov
test
fwait
sub
jae
ss
ds
dec
or
mov
addr16
pop
dec
xor
mov
ret
sahf
jl
filds
mov
es
stos
outsl
or
in
js
push
paddusb
inc
cmc
xchg
or
jno
sbb
insl
in
push
pop
pop
push
add
jge
int
sbb
pusha
jecxz
in
mov
or
clc
mov
insb
ss
imul
lret
popa
mov
push
shrb
mov
nop
sub
sub
pop
mov
jecxz
adc
and
fldt
mov
pop
push
jp
int3
sbb
jp
repnz
jg
xor
je
cmp
lock
ds
insb
mov
out
pushf
stos
mov
js
pop
cmp
out
add
mov
pop
mov
push
loopne
jp
sbb
xor
add
add
aaa
fadds
dec
mov
mov
inc
outsb
lret
pop
cmp
inc
xor
ret
xchg
sbb
mov
jb
adc
fsubrs
leave
pop
mov
cmp
outsb
jo
and
shrl
jne
imulb
cs
sub
mov
mov
and
mov
rolb
loope
adc
int
sti
cmpsb
xor
inc
loop
or
mov
subl
xor
and
mov
fs
dec
roll
adc
mov
pop
fisttpll
xor
mov
aas
and
sbb
jns
push
fs
push
xlat
mov
fyl2xp1
and
jns
and
pop
jne
dec
pop
xchg
xchg
or
and
dec
pop
int
test
inc
movsb
mov
cmpsb
inc
or
scas
mov
push
lock
iret
dec
cltd
push
push
insb
add
jecxz
xchg
out
mov
sbb
pop
push
cmp
push
dec
cwtl
ficompl
sbbb
push
jne
push
add
loopne
cmpsb
push
or
and
xchg
jo
ds
and
int
mov
fistpl
pop
dec
lea
in
or
sub
cmpsb
push
and
lods
xchg
or
lds
sahf
add
scas
or
jbe
xor
imul
push
lcall
ds
lahf
push
addl
mov
lock
or
ss
inc
imul
ss
xchg
or
je
out
xchg
or
jmp
and
xchg
loope
fs
inc
or
add
cmp
sbb
mov
mov
sub
mov
dec
pop
push
inc
in
push
cmpsb
in
jecxz
int
xlat
sub
dec
sbb
outsl
inc
xor
bound
fs
mov
test
out
add
jmp
dec
sbb
lds
scas
cmpb
xchg
mov
shlb
jg
xchg
push
xor
mov
pop
lret
repnz
mov
popf
xchg
push
icebp
loope
push
sub
jge
and
jns
std
mov
cmp
stc
push
add
dec
lcall
loopne
test
bound
mov
dec
stos
push
mov
xchg
mov
leave
pop
mov
loop
jle
inc
mov
adc
fldt
pop
insb
sahf
and
and
cmp
lods
lcall
cs
cli
sbb
sub
xchg
bound
inc
cmc
add
roll
add
in
xor
in
rcrb
dec
mov
add
sbb
sbb
and
mov
test
fldcw
jae
popf
ret
inc
test
fdivs
inc
jmp
shll
adc
fdivrs
dec
xor
aas
push
fwait
lea
dec
lods
les
xchg
mov
or
xchg
inc
inc
jp
adc
outsb
sbb
dec
aad
jo
andl
cmp
rorb
std
and
test
stos
jb
pop
add
xorb
xor
mov
aad
out
fnsave
push
mov
pop
dec
sub
imul
sub
les
stos
jnp
sbb
rcll
lds
xchg
jge
xor
add
jge
dec
adc
push
into
xchg
ja
ja
gs
cmp
sarb
movsl
dec
gs
cwtl
repnz
jle
xchg
sti
repz
arpl
adc
sahf
daa
int
js
pop
movsb
add
push
mov
outsb
popf
inc
mov
mov
jp
cmp
enter
outsl
sbb
xor
sarl
stos
push
fidivrl
fcoml
cmc
xor
sbb
repz
data16
xchg
mov
sub
hlt
cwtl
ret
je
mov
lahf
jno
fsubrs
fdivs
lea
push
xchg
cmp
ja
adc
or
gs
adc
jb
mov
dec
nop
mov
inc
dec
push
xor
arpl
mov
outsb
out
pop
out
jg
inc
lods
inc
js
je
cmp
dec
sub
testb
sti
lea
jno
mov
cwtl
fstpl
test
leave
add
jne
lods
add
sbb
inc
jle
jbe
nop
dec
subl
inc
cmp
mov
shr
clc
pop
cmpsb
lret
arpl
sahf
fs
xchg
push
data16
repnz
imul
or
xor
iret
mov
cmp
call
arpl
push
rcrb
xor
in
push
mov
fdivs
shrl
jnp
mov
sbb
add
xor
call
fisubrs
mov
in
loop
fmuls
mov
add
cmpl
mov
scas
int
jo
lcall
ret
shll
movsb
jnp
into
imul
pop
insb
pop
aad
outsl
mov
dec
clc
ds
cmp
imul
pop
pusha
mov
mov
imul
mov
adcb
subb
push
lods
test
jge
jge
nop
or
jnp
mov
popf
sub
inc
xchg
xchg
jae
sahf
pop
push
mov
fidivrl
pop
sub
test
mov
sub
xchg
iret
mov
jg
faddl
les
imul
mov
fcoms
adc
outsl
sub
add
fcmovbe
xchg
pop
stos
clc
out
pop
inc
pop
stc
push
shl
daa
gs
push
fistpl
fcmovnbe
add
cwtl
pop
xlat
xor
mov
daa
mov
dec
rorb
sbb
mov
test
dec
pop
dec
or
dec
inc
aad
pop
iret
lret
jle
stc
in
cmovg
outsl
shr
mov
jbe
popa
out
mov
call
push
test
ss
pop
lret
push
jnp
movsl
out
mov
ret
push
jne
cld
jge
sahf
nop
adc
lock
divl
nop
dec
dec
repnz
inc
scas
das
cmp
mov
sarl
xchg
call
dec
cmpsl
add
mov
jecxz
dec
sbb
and
sarb
lds
mov
and
fs
pushf
and
pop
js
inc
in
popa
jecxz
hlt
mov
cmp
add
pop
cmp
in
sub
pop
pop
imull
sbb
dec
test
lret
sbb
jns
div
sbb
or
pushl
xor
dec
xchg
cli
mov
add
enter
mov
fdivrs
std
ror
and
mov
call
xor
and
sahf
cmpsb
mov
stc
int
test
pop
gs
push
or
inc
cmpsl
jmp
scas
bound
sbb
cwtl
movsb
mov
into
and
pop
mov
test
sbb
enter
fildl
pop
jp
dec
and
mov
adcl
mov
push
aas
adc
fwait
adc
sbb
adc
sbb
mov
sbb
cmpsb
adc
movsb
scas
mov
enter
jle
repnz
push
xor
repz
iret
mov
mov
rclb
sbbl
and
jno
xor
cs
aad
scas
xor
cmp
das
adc
mov
stos
dec
fisubl
mov
testl
ficoml
aam
mov
imul
jnp
js
stos
push
pop
sub
xor
test
adc
push
imull
sub
sbb
jmp
or
movb
scas
shrl
std
mov
pushl
enter
jg
stos
test
xchg
pop
push
mov
or
pop
imul
adc
sbb
add
mov
or
push
add
scas
ds
arpl
jo
les
jo
or
icebp
mov
int
mov
lods
and
lods
push
jo
sti
xor
push
xchg
pop
out
sarl
mov
push
dec
movsb
fwait
clc
ret
and
cltd
inc
scas
cmp
test
or
lret
mov
fldlg2
movsb
and
inc
mov
push
cmp
jge
cmpsb
xlat
jb
ss
in
popa
mov
inc
push
and
in
stos
aam
daa
xlat
adc
add
in
dec
mov
push
mov
or
sub
vpsubb
repz
fmuls
aad
test
negl
sbb
fstp
dec
int3
sbb
ret
xor
pop
ret
mov
loope
jae
incl
jmp
mov
sbb
jbe
pusha
jns
jecxz
inc
mov
movsl
stos
outsl
loope
push
sbb
loop
call
fsubrl
in
roll
popf
clc
loop
cli
mov
test
push
mov
jp
sar
aas
out
aad
push
aaa
or
dec
and
pop
sbbb
xor
ljmp
lret
andb
sbb
js
sbb
pop
fistpll
in
sti
push
sub
pop
loopne
das
insl
jne
mov
sub
repz
pushl
outsl
and
sub
jno,pt
scas
fdivrl
cwtl
or
mov
xor
mov
pop
xchg
cmp
insb
sub
or
adc
jp
xor
mov
fildll
shrb
jle
scas
xor
cmp
jne
lods
mov
xchg
or
sub
mov
aaa
ljmp
mov
jle
sbbl
push
int3
or
inc
out
mov
iret
lods
data16
ret
test
lock
ret
loope
cli
jnp
pop
ds
lods
dec
adc
dec
dec
fldl
sbb
mov
rolb
dec
cmp
sub
fs
pop
rorb
cwtl
imul
sti
or
ffreep
movsb
sahf
call
cmp
mov
add
or
pop
lahf
sub
lret
jg
mov
mull
add
mov
clc
jecxz
dec
test
and
aam
lds
incl
add
popl
int
sahf
enter
add
lahf
int
push
inc
push
fistps
mov
mov
adc
or
pop
ret
jl
das
cmp
out
rcr
xor
jne
les
aad
xchg
or
ss
push
hlt
cli
jecxz
aas
call
push
jno
scas
dec
paddsb
push
in
push
mov
icebp
inc
sbb
testb
dec
addr16
loop
ljmp
mov
pushf
pop
dec
xlat
jp
call
or
in
stos
out
sti
cld
fstl
fwait
and
push
sti
mov
mov
jnp
pop
sbbb
jno
dec
add
lret
sbb
mov
icebp
hlt
push
xor
popf
adcb
fmull
nop
jp
sbb
movsl
fdivrs
or
adc
insb
orl
stos
jp
cmp
push
adc
jp
gs
xor
push
arpl
dec
push
xchg
test
mov
ret
mov
or
sub
fsubp
push
sti
rcrb
lret
clc
in
jmp
lsl
ret
movsb
push
mov
pop
fldl
and
pop
pop
fistpl
pop
sarl
xchg
inc
mov
jns
aad
mov
pusha
ss
cmpsb
popa
add
movsl
mov
pop
jge
mov
sub
lahf
test
insl
dec
or
fmull
enter
cmp
loope
mov
xchg
stc
out
clc
js
iret
ss
cmpsl
mov
mov
negb
cmp
xchg
in
pop
into
mov
dec
call
mov
movsl
ss
movsb
shl
xchg
out
push
jle
mov
cmp
pushl
inc
cmp
daa
mov
adcl
lds
inc
ficomps
aaa
imul
push
and
in
dec
add
ret
inc
xchg
insl
ret
jl
mov
jo
add
into
js
jns
cmp
lret
adc
seto
shlb
xchg
jp
dec
dec
xchg
imul
andb
pop
cmc
imul
popf
lds
inc
rorl
lcall
jmp
push
sub
and
push
mov
push
addr16
iret
cmp
out
sahf
insb
into
stos
push
arpl
iret
stos
fs
sbb
fldl
adc
ds
ljmp
xor
or
mov
mov
mov
or
shll
int3
dec
movups
jl
push
test
pop
push
sbb
push
loope
mov
lret
mov
inc
insl
adc
inc
push
pop
cltd
cmp
icebp
push
and
shr
movsb
int3
inc
into
dec
aam
push
or
mov
dec
in
sbb
and
cmc
addr16
shl
cmpsl
int3
pop
sahf
bound
call
subl
sub
and
fadds
int
or
jne
into
mov
sti
inc
ja
test
imul
dec
popa
xchg
std
psrlw
sbb
adc
pop
fiaddl
in
pop
shlb
sub
cmpb
inc
imul
sbb
mov
fisttps
mov
ffreep
in
dec
adc
nop
mov
ljmp
shlb
repnz
mov
add
jmp
aas
stos
sbb
js
mov
sti
out
pop
mov
cld
sbb
add
adc
mov
lods
and
inc
mov
jae
call
lds
outsl
ljmp
pop
les
cmp
push
sub
mov
aam
scas
insl
sarl
pop
repnz
or
dec
dec
pop
loopne
mov
cmc
jl
into
cmp
sbb
aad
push
shrb
mov
jmp
mov
pop
inc
loop
fstpt
mov
popa
ret
ljmp
daa
rcrb
jo
repnz
jne
lods
mov
mov
mov
push
mov
mov
cmp
sub
test
pop
pushl
scas
inc
xchg
mov
adc
in
es
cld
push
lock
cmc
add
ret
jb
fisttpll
shl
incl
push
push
ljmp
sub
cwtl
fiaddl
lods
xchg
mov
inc
cmp
insb
xor
push
mov
sbb
push
mov
or
or
fldenv
aas
or
lock
dec
lcall
insl
pop
orb
jne
adc
fbstp
sbb
mov
mov
les
fstpl
mov
test
mov
mov
fs
cs
repz
mov
popf
push
add
jecxz
test
and
call
imul
add
mov
dec
push
or
push
scas
inc
sub
ret
dec
sub
fistl
mov
jg
mov
and
mov
inc
outsb
inc
pop
lcall
addr16
cwtl
mov
int
adc
test
ret
mov
and
jne
int
in
test
pop
fisubl
jbe
lods
and
jbe
repnz
or
or
inc
rclb
jae
out
mov
and
push
add
daa
push
ds
std
mov
pop
sub
out
imul
xor
insl
scas
int
in
int3
fwait
sub
jno
jno
pop
mov
adc
cmp
call
data16
rorb
jno
mov
mov
xchg
aam
rolb
and
jmp
repz
ficomps
push
push
add
push
dec
sub
mov
mov
push
loope
stos
or
int
dec
pop
lock
orl
pop
cwtl
loope
jne
mov
fiaddl
push
loopne
and
sti
push
insl
imul
xor
sub
mov
std
shlb
xchg
mov
loope
mov
nop
inc
sbb
icebp
call
aaa
lods
mov
inc
sub
jmp
xchg
lea
cmpsl
stc
outsb
mov
stos
push
out
add
mov
cmp
xchg
mov
sbbl
inc
or
das
dec
xchg
push
repz
dec
mov
push
subb
ret
in
cmp
into
loope
adc
ja
out
push
mov
and
shlb
rcrl
lahf
rcrl
or
mov
push
jl
fists
push
jl
loopne
pop
and
addb
mov
js
daa
add
cli
push
mov
imulb
cwtl
jno
inc
inc
adc
xchg
adc
xor
test
cmpb
mov
push
xor
repz
add
dec
jle
pop
imul
test
fistpl
xchg
loopne
shlb
and
xor
push
js
sti
iret
add
lods
pop
xchg
sbb
xchg
inc
imul
lods
lock
or
aam
outsb
sbb
in
pop
test
and
leave
xchg
sbb
mov
js
pop
xor
or
xchg
push
jp
lea
dec
test
ds
mov
aad
fs
mov
aad
cld
inc
es
cld
mov
js
fsubr
loop
rcll
mov
xor
test
mov
dec
mov
jne
enter
or
andb
push
aam
jle
add
mov
push
out
jo
xorl
jp
data16
push
mov
cmp
andb
sbb
testb
icebp
sbb
lret
or
cmpsb
imul
fstl
lret
mov
or
mov
outsb
inc
jl
sub
loop
pop
shll
scas
or
mov
out
inc
mov
popf
ss
pop
out
ficoms
xor
fmull
pop
lea
add
push
movsb
lock
push
fwait
cmp
xlat
fs
test
mov
movb
scas
mov
movsl
jg
and
popa
flds
lods
pusha
mov
and
mov
sahf
adc
push
add
pop
dec
test
and
dec
loopne
xchg
fiadds
ret
cmpsb
js
sbb
lret
mov
lods
mov
scas
xchg
push
xchg
add
xchg
mov
push
ss
xchg
jp
xchg
pop
rclb
into
mov
and
rorb
cmp
inc
icebp
push
arpl
xchg
xchg
aad
xchg
add
push
into
cltd
jne
jno
pop
jae
test
xor
mov
adc
or
or
mov
push
xlat
sub
inc
mov
jmp
ret
jecxz
mov
jge
test
lods
pop
dec
faddl
mov
lahf
popa
roll
rclb
adc
jle
insl
neg
lret
inc
daa
cld
inc
popw
jo
push
sar
inc
or
aam
or
dec
and
aam
jb
pavgb
jp
pop
add
jl
fdivl
out
fimull
repz
out
cld
cmc
and
in
in
mov
xlat
dec
add
pop
enter
xlat
js
pop
into
or
stc
in
xor
jecxz
movsb
cmp
adc
cmp
outsl
repz
sbb
and
xor
mov
push
nop
pushf
jle
je
gs
push
jno
push
pop
inc
pop
outsb
mov
fldl
test
mov
jg
pop
in
mov
pop
xor
add
mov
mov
rclb
cwtl
into
sarl
lods
cld
into
lods
mov
and
decb
pop
xchg
add
stos
divb
arpl
lds
ss
loope
lds
jno
mov
aas
scas
push
pop
out
out
jbe
arpl
dec
int
test
mov
add
jnp
jp
stc
mov
gs
js
shrl
mov
pop
outsl
cld
lock
pusha
xchg
inc
js
fmull
repz
pop
cmp
out
and
jbe
push
leave
bound
out
je
int
mov
inc
and
in
shrl
inc
push
icebp
sarl
sub
mov
pop
fmuls
jae
jg
mov
aad
mov
jno
iret
xor
add
adc
pop
push
data16
sbb
shlb
cld
sarl
or
push
int
adc
sbb
shrl
cld
mul
mov
adc
mov
xor
shl
shll
outsl
sarb
int
inc
outsl
and
sbb
push
adc
popa
cmp
adc
add
pushf
movsl
push
push
xchg
test
ss
or
jne
xchg
sub
xchg
mov
popf
aaa
pop
or
lds
in
adc
xor
jl
cmpl
mov
adc
and
add
mov
ljmp
jae
ja
pushf
jo
adc
jnp
sbbb
xchg
mov
out
sbb
sub
mov
xor
bound
inc
inc
mov
jb
add
jl
jmp
pop
filds
gs
xchg
xor
pop
fstpt
and
leave
repnz
dec
xlat
cmp
clc
stc
fwait
out
add
or
outsb
jmp
test
in
lea
cmpsb
out
lods
cmp
std
mov
scas
outsl
je
fsubrp
lods
lds
int3
jmp
inc
test
mov
cs
pusha
hlt
jle
hlt
pushf
mov
pop
insb
xor
pop
int
mov
pushf
rcrb
xchg
mov
lds
sbb
xchg
push
ja
cmp
dec
popa
jbe
mov
loope
or
bound
fists
ljmp
fdecstp
or
mov
add
mov
sbb
adcl
sbb
sub
jp
pop
push
xlat
mulb
enter
dec
pop
dec
pop
arpl
inc
jno
dec
sbb
int3
leave
jbe
fldcw
sub
mov
jmp
cmp
jle
xchg
scas
or
hlt
jno
add
aam
js
xor
pop
jno
fistpll
lods
pop
jnp
mov
loope
dec
sub
adc
aaa
pop
jne
outsb
mov
sbb
mov
gs
sub
fdivp
stc
push
fmuls
mov
fcoml
push
popa
repz
mov
lods
jge
mov
nop
pop
mov
lret
or
dec
cli
stos
mov
dec
lods
xor
stos
mov
cltd
push
and
hlt
and
adc
lds
sbb
aad
repnz
and
jg
push
int3
push
mov
shrb
sub
rorl
xor
enter
dec
enter
mov
sub
push
das
in
inc
cli
lods
cmpsl
sub
pop
fimuls
push
sbb
ja
xchg
dec
mov
int
in
pushf
inc
mov
mov
and
ss
xchg
sahf
scas
std
stos
jg
xchg
mov
outsb
or
arpl
mov
pop
push
jo
xor
int
movsl
inc
or
jb
add
lret
cmp
pop
hlt
shrl
icebp
add
add
outsl
xchg
xchg
mov
inc
out
mov
mov
mov
or
adc
jo
push
rcr
pop
out
dec
push
inc
ljmp
fpatan
or
icebp
mov
pop
and
cli
inc
push
push
int
inc
pop
mov
pop
mov
mov
shll
sub
js
fidivl
push
mov
rolb
inc
test
sbb
pop
and
sub
mov
inc
mov
jecxz
cmpsl
mov
fnstcw
jle
push
push
insl
dec
pop
aad
jno
jne
cmpsb
addl
test
mov
nop
and
loopne
lods
sarl
ljmpw
cld
adc
push
subl
xchg
sub
and
add
inc
push
loope
test
subb
mov
pop
or
xchg
mov
lret
pop
or
pop
dec
addr16
or
fwait
ret
cmc
scas
xchg
and
xchg
leave
mov
gs
jmp
xchg
sti
push
mov
sbb
std
mov
adc
nop
pop
ss
add
inc
jle
out
adc
scas
lret
lret
lea
xchg
inc
stos
loope
push
xor
out
pop
pop
mov
popa
aam
je
push
nop
push
fldt
mov
jle
cmpsl
mov
int3
and
nop
dec
inc
jecxz
pop
cmp
xchg
add
repnz
adc
jmp
fst
lods
loope
xchg
sub
sbb
dec
sarb
pusha
std
and
lcall
call
mov
sbb
xchg
sub
loope
push
jno
and
adc
arpl
sub
iret
cmpsb
jge
out
sub
idivl
into
add
out
out
pop
sahf
pop
int3
cwtl
sahf
orl
push
jg
or
lahf
jnp
xchg
scas
and
push
fildl
imul
inc
cmc
adc
adc
lock
neg
or
sub
addr16
data16
insb
popa
shrl
mov
xchg
xchg
out
jge
test
push
fwait
mov
insl
jl
xchg
sbb
push
mov
adcb
add
push
fcompl
xchg
push
fdiv
addl
lcall
loop
inc
mov
pusha
lret
jge
shr
cmc
adc
les
mov
mov
ret
mov
sub
xor
repz
in
mov
fnstsw
and
fisubrl
adc
stc
imul
dec
lret
clc
insb
pop
push
jo
je
pop
push
jb
int3
stos
dec
cmp
mov
imul
mov
shll
lret
mov
stos
mov
loop
enter
leave
cmpsl
and
orl
outsl
lcall
mov
out
imul
inc
xor
xor
adc
inc
std
cmp
cmp
adc
lret
mov
cld
xor
shlb
call
ja
cmp
push
add
inc
adcl
pop
inc
sub
hlt
arpl
movsl
fstpt
mov
sbb
into
lods
mov
in
pop
xchg
xor
mov
adc
dec
hlt
sbb
leave
cmp
inc
sbb
dec
loop
jnp
jno
dec
mov
jne
movsb
stos
sub
pop
iret
pushf
or
outsl
ja
hlt
sarl
mov
lods
jnp
sub
aad
cmp
sub
in
in
xor
aaa
sbb
add
xchg
addb
fs
test
shrl
addr16
aad
dec
test
sub
lret
stos
adc
and
daa
lcall
mov
mov
push
mov
mov
stos
cwtl
inc
xorl
pushl
addl
mov
sbb
mov
test
xor
add
enter
pop
adc
xor
insb
jbe
mov
repz
sub
cmp
adc
lcall
pop
and
or
jecxz
mov
jmp
push
iret
inc
lret
mov
inc
popa
test
push
inc
sbb
int
inc
add
add
sbb
or
adcl
cmpsb
adc
adc
inc
movsl
and
mov
pop
stos
or
mov
xchg
jmp
mov
not
mov
mov
dec
fwait
cli
xor
push
or
insb
sub
adc
or
xor
fistl
loopne
add
jle
lcall
sub
and
les
mov
ret
sub
nop
lret
addr16
add
enter
cmp
dec
out
jb
push
bound
cmp
das
cmp
pop
mov
loope
std
ret
xchg
and
xor
fstps
out
lea
lea
mov
jecxz
push
mov
push
out
stc
sub
stos
push
pop
insb
test
fistl
roll
jbe
cltd
ds
pop
fmuls
sub
push
cmp
push
fdivrl
imul
testb
jb
inc
iret
repnz
jo
add
inc
fildll
mov
mov
mov
outsb
mov
sbb
data16
neg
sbbl
out
jge
mov
add
inc
dec
cwtl
mov
fsts
popf
adc
je
cmp
pop
jmp
or
cmp
or
xor
cmpsb
xor
insl
mov
fisubrs
add
sahf
add
stos
dec
loop
dec
pop
dec
add
add
cs
int3
filds
pop
mov
xor
inc
stc
and
call
scas
adc
jp
lcall
aas
or
xchg
scas
jp
fnstcw
fdivs
rorl
std
or
xor
jne
repnz
in
hlt
push
into
add
rcrl
xchg
inc
cwtl
inc
fadd
xor
inc
ljmp
adc
out
ret
fcmovnu
mov
repnz
test
add
pop
dec
flds
push
push
sub
idivl
or
jge
adc
xchg
cmp
sbb
mov
shlb
loope
mov
loope
ss
test
and
push
das
push
jecxz
loopne
pop
mov
insb
enter
addr16
or
aas
jmp
loope
add
fwait
outsb
sub
icebp
mov
mov
jp
fst
fsubp
sahf
aam
divb
out
pop
mov
add
ja
xchg
adc
fisttpll
xchg
jbe
jno
sub
ret
add
cmp
subl
das
lods
gs
push
lcall
adc
test
mov
adc
and
popf
inc
inc
push
dec
mov
dec
xor
test
jmp
or
cmpsl
xor
xor
lds
xor
std
lock
pop
iret
or
mov
shll
je
lock
and
hlt
jmp
mov
aad
and
sbb
fbstp
xchg
push
adc
lods
jg
pop
loopne
lods
iret
mov
enter
dec
push
sub
push
cld
mov
je
push
xchg
sbb
sub
mov
gs
in
and
xchg
mov
test
dec
insl
jbe
mov
test
sarb
fistps
and
xchg
xchg
leave
mov
add
and
cmp
fiaddl
imul
out
aam
imul
push
xlat
and
push
scas
xchg
mov
sti
leave
jg
push
test
in
mov
mov
mov
cmp
aam
push
test
pop
jae
notl
mov
inc
adc
adc
xchg
mov
or
mov
sub
dec
add
aam
xor
icebp
ret
std
shll
sub
push
and
lahf
mov
pop
xchg
inc
jo
push
dec
push
jle
das
and
xor
mov
testb
popf
lret
pop
xor
sti
je
xchg
xchg
xor
stos
cmovne
mov
fcmovb
stos
mov
xor
pushf
adcl
ret
dec
in
sbb
icebp
add
inc
cmp
adcb
pop
and
push
lcall
aam
or
jg
and
hlt
jge
or
mov
cmp
cs
hlt
sti
sarb
lock
insl
popa
fcomi
mov
or
cmpsb
out
jns
fbld
pushf
push
cli
sbb
mov
jl
or
imul
sub
add
dec
repz
jmp
or
inc
and
fisubl
or
mov
jmp
jecxz
mov
dec
inc
in
arpl
scas
xchg
jo
loop
push
push
sbb
inc
cmpsl
xchg
faddp
aad
xchg
inc
xchg
mov
mov
outsl
pop
fadd
jl
push
gs
sbb
sti
cmp
in
or
inc
push
push
imul
lods
cmp
xlat
addr16
jle
ja
scas
dec
call
mov
imul
fmuls
sbb
pop
sbb
mov
pop
push
mov
icebp
jbe
cmp
pusha
lods
jb
das
in
test
inc
adc
dec
jmp
cltd
xor
dec
mov
andl
mov
ja
push
sti
scas
xchg
rcll
xchg
pusha
xchg
int
fidivl
scas
rcrl
aas
into
outsb
mull
fisubrs
push
jo
or
dec
sarl
pop
mov
fidivrs
clc
dec
add
mov
cld
lcall
aam
mov
jno
stos
scas
mov
pop
mov
leave
fxch
mov
push
jmp
add
dec
mov
push
in
xor
int
repnz
adc
out
roll
sub
hlt
shlb
imul
lock
jecxz
js
jnp
cmpsb
fsts
outsb
sbb
pop
xor
jno
insb
inc
int3
sub
or
fstenv
jl
lods
out
add
jbe
add
pushf
sahf
int
neg
cld
pop
xchg
int3
mov
mov
insl
jecxz
ds
or
fisubl
sub
dec
int
jns
jle
mov
addr16
hlt
sbb
xor
in
push
mov
mulps
in
daa
lahf
enter
mov
fdivs
addl
outsl
loop
ja
or
pop
outsl
and
iret
cmp
and
lret
data16
inc
faddl
movsl
or
hlt
fimuls
mov
insl
cwtl
lods
pop
das
loop
xchg
cmp
push
pop
aad
lds
inc
mov
cmpsl
and
push
add
cld
xchg
xchg
cmpsb
adc
inc
pop
outsl
subb
xchg
dec
mov
or
xchg
cmp
in
cli
sub
xor
call
into
mov
call
orb
je
enter
jp
int3
inc
push
test
cmpl
outsl
pop
mov
idivl
inc
aam
aad
cmp
cmp
stos
mov
sbb
fbstp
sbb
movsl
sub
enter
mov
cmp
cmp
lret
je
adc
jl
fadds
sub
dec
adc
push
mov
pop
ds
ss
ficomps
sbb
sahf
sbb
xorl
mov
rcrl
push
insl
cli
add
imul
test
popa
pop
ljmp
pusha
loope
gs
ficoml
dec
and
push
testl
divl
xchg
push
int
dec
test
stos
cmp
mov
fisttpll
lea
shll
mov
cld
fildl
ss
fnstsw
jg
andb
dec
lahf
scas
sbb
ljmp
dec
inc
outsb
rorl
cmp
ss
cmp
cwtl
inc
add
jg
inc
ljmp
and
adc
ja
xor
xchg
jl
clc
mov
xor
xchg
and
insl
mov
loop
pop
aam
xchg
scas
inc
sbb
movsl
jns
sbb
adc
into
push
jne
daa
adc
mov
jle
xchg
sarl
dec
scas
std
or
inc
nop
inc
mov
insb
out
jb
sbb
add
xlat
adc
push
xchg
lret
lret
aad
stc
sbb
jl
stc
adc
out
jmp
nop
mov
fucomip
adc
push
pop
pop
pusha
outsl
adc
jns,pt
shll
ja
pop
movsl
and
out
int3
mov
mov
adc
int
aad
mov
xor
leave
dec
add
icebp
push
jge
mov
jmp
movsb
cmp
fidivs
cwtl
pop
stos
sti
lret
cld
mov
mov
mov
jmp
add
push
pop
ficompl
or
bound
ljmp
pop
andl
vmovaps
add
test
and
fisttpll
call
cmp
ja
adcl
push
cmpsb
adc
fiaddl
xor
pop
addl
xor
lods
and
cmp
push
xchg
and
xchg
xchg
loope
jo
pop
pushf
adcl
pushf
movsb
push
lock
repnz
stos
dec
adc
jecxz
sub
fidivrs
divl
flds
gs
filds
mov
xor
sub
in
inc
cmp
inc
pop
jmp
adc
mov
movsb
sti
outsl
loop,pt
lea
sub
xchg
loope
mov
test
insl
test
jae
out
xor
inc
test
push
aad
or
pop
jo
sbb
lcall
lock
in
dec
push
cmp
shlb
sub
add
movsl
mov
subb
sti
jp
cmp
dec
mov
ljmp
jp
outsl
jg
and
sub
add
add
ror
mov
das
pop
push
mov
popf
jle
idiv
ljmp
insb
mov
loopne
or
dec
hlt
adc
inc
push
loope
adc
or
mov
lods
xchg
ficoms
frstor
or
loope
sti
mov
xchg
orl
call
inc
pop
imul
gs
dec
int
cmp
or
fbstp
repnz
adc
cmp
jno
lret
mov
jecxz
lret
push
roll
cmp
add
cwtl
iret
cltd
add
xchg
xor
add
or
cmp
sbb
mov
sub
sub
jbe
xor
mov
idivb
jle
adc
aas
adc
jl
shl
pop
lods
add
mov
sbb
test
mov
mov
fsubs
movlps
mov
into
sub
adc
mov
ljmp
cmp
insl
fs
xchg
push
icebp
pusha
iret
imul
lret
sti
pop
or
mov
cli
addb
xchg
call
push
in
push
lds
cltd
push
addr16
xchg
xor
sbb
push
and
push
jne
loop
es
push
cmp
scas
xor
sub
sbb
fidivs
pop
adc
jle
sbb
fisttpl
adc
xor
pop
daa
mov
sti
jle
lret
add
in
xchg
js
or
push
sbb
gs
pop
fadd
mov
pop
adc
stos
push
jns
jg
jo
sbb
mov
push
add
repz
push
push
mov
popf
adc
sahf
mov
mov
dec
lcall
jmp
sub
adc
decl
mov
loopne
popf
dec
ret
mov
mov
popf
adc
push
sbb
pop
test
cltd
je
movb
cli
pop
inc
gs
dec
add
stc
cmp
scas
push
jne
push
mov
xchg
jl
loop
movsl
or
sub
loope
add
jb
push
loop
ss
into
daa
js
enter
movsl
cmp
repz
inc
cmpl
push
movsl
lds
rcrl
xorl
imul
mov
jg
lahf
fs
inc
cmp
mov
fstps
cmp
cwtl
push
mov
leave
push
dec
loopne
dec
add
icebp
test
adc
dec
xorl
mov
out
add
add
ror
mov
sub
repz
data16
cltd
test
dec
inc
dec
aaa
fs
lods
dec
fsts
js
lock
lock
jne
mov
sbb
adc
arpl
or
leave
sbb
ljmp
xchg
gs
mov
rcll
fildll
add
fidivrs
gs
add
hlt
sar
jl
jo
push
inc
ja
insl
xor
mov
movsl
in
leave
in
popa
andb
loop
iret
sbb
idiv
jbe
xchg
mov
insl
jns
les
sbb
xchg
push
bound
mov
mov
test
push
negl
iret
mov
cmp
or
mov
inc
and
pop
ljmp
adc
cs
pop
jg
stc
das
xchg
or
xlat
push
in
into
add
xchg
out
push
les
or
sub
xchg
xchg
cmp
add
out
push
cmpsl
and
movsb
xchg
add
bound
jb
pop
std
mov
insl
jmp
sbb
jmp
jae
out
into
and
stos
jae
xchg
clc
mov
negl
inc
rol
cs
fdivl
pop
addb
in
mov
fsubrl
xorl
stos
mov
jae
notb
test
sub
adc
jge
push
decb
scas
insb
inc
sti
sbb
in
push
imul
xor
xchg
xchg
cmp
movsl
sub
and
xor
inc
jbe
sarb
dec
push
pop
adc
and
dec
jl
cwtl
mov
jp
lret
push
stos
test
dec
xchg
xchg
add
insb
popf
lret
jbe
cs
pop
fdivrs
mov
sbb
sbb
ss
cltd
insl
xchg
xchg
sbb
inc
fnsave
pop
or
push
lret
push
test
xchg
fbstp
sbb
imul
jnp
insl
into
jo
sub
rcll
subl
mov
daa
cmp
xchg
dec
cs
insb
nop
enter
roll
mov
test
xor
mov
gs
xchg
repnz
adc
push
scas
xor
jg
adc
cmpsb
faddl
sub
sbb
or
and
arpl
dec
leave
mov
mov
cmp
ja
cmp
mov
in
fs
push
pop
xchg
dec
xor
popf
cmp
inc
mov
cli
push
mov
add
and
jmp
mov
inc
pop
or
push
dec
mul
push
push
push
out
insl
push
mov
mov
adc
pop
xlat
andl
add
test
push
push
test
xchg
insl
fsubs
imul
int
inc
pop
in
xor
aas
mov
decl
scas
rcll
mov
mov
jp
sahf
ljmp
clc
gs
fwait
daa
mov
cli
mov
cli
mov
std
not
ss
jbe
mov
xor
xchg
pop
roll
sub
and
in
cld
ljmp
inc
inc
xchg
dec
xlat
hlt
lock
add
imul
dec
adc
sti
pop
pop
ret
inc
insb
jp
les
sbb
fidivl
sub
outsb
into
dec
add
shrl
insl
or
push
push
push
aaa
push
clc
repz
xor
inc
es
mov
arpl
inc
mov
ret
ret
fs
adc
lea
add
loopne
or
pop
mov
push
fidivrl
xchg
nop
idivl
pop
sub
jle
cmpsb
stc
enter
mov
inc
sub
clc
xchg
movsl
ret
fs
sbb
inc
push
lds
push
jp
hlt
outsb
scas
cmpsb
lea
in
stos
fs
sbb
loopne
adc
jle
das
stos
insl
shl
jns
dec
mov
idiv
xchg
nop
rcrb
cmp
insl
arpl
jge
jo
test
lahf
lods
popa
ja
dec
pop
test
mov
dec
cwtl
xor
in
es
jl
xor
test
test
xchg
xchg
pop
add
push
shrl
mov
mov
flds
mov
jle
addr16
cmp
in
jne
nop
je
es
mov
nop
and
xchg
leave
cmpsb
popf
or
or
adc
mov
xchg
outsb
mov
scas
mov
cmp
mov
movsl
test
pop
jbe
fistpll
data16
jmp
xlat
xchg
inc
addr16
jl
inc
ja
cwtl
jb
ja
adc
fwait
sti
xor
inc
addl
das
or
aas
sub
jecxz
push
out
scas
cmp
repz
scas
sub
pop
jo
fstpl
sbb
mov
fstpt
pop
mov
mov
jmp
iret
pop
rcr
incl
jns
sub
xlat
in
add
mov
cmp
call
adc
mov
sub
pop
jle
or
ja
int3
push
ficompl
enter
repz
rcr
cmp
xchg
das
cmp
xor
ds
xchg
lcall
daa
dec
loopne
test
sbb
pop
or
adcl
jne
cmpsb
out
pop
push
popa
push
fnstsw
test
and
mulb
nop
insl
sbb
sbb
xchg
popf
dec
sub
mov
sbb
stos
sar
dec
xlat
les
adc
and
and
cmp
mov
jmp
in
aam
popf
ja
fwait
loop
inc
jmp
dec
adc
mov
fstps
xchg
jecxz
mov
dec
mov
xor
mov
xor
mov
pop
lret
jg
imul
mov
out
jge
sbb
xlat
les
dec
adc
or
and
outsl
ret
lds
stos
xchg
ja
mov
lret
shl
test
fnstenv
out
sub
xchg
fdivrl
je
xchg
sti
ret
adc
and
pop
add
dec
jp
cmp
int
cmp
movntq
pop
loop
mov
jae
push
clc
shll
out
mov
dec
call
sbb
movntps
cwtl
sbb
adc
sbb
jecxz
cmpsb
out
mov
sbb
notl
lret
xchg
js
call
mov
mov
adc
add
dec
fistpl
sbb
or
fdivrl
es
int
test
out
loope
ljmp
push
int
test
and
sub
mov
pop
mov
cmp
push
xlat
outsb
inc
pop
mov
inc
lock
mov
and
scas
inc
mov
imul
jg
ljmp
jmp
shll
or
push
movsl
add
scas
jns
test
xor
mov
gs
pop
ds
bound
xchg
pop
js
add
cmp
ret
adc
pop
add
add
fsubr
lds
in
cmp
pop
pop
and
inc
pop
xchg
divb
js
lods
lds
xchg
aam
outsl
out
jmp
hlt
push
xchg
and
mov
jecxz
inc
xor
lret
pop
inc
ret
mov
cmpsb
dec
sbb
xchg
push
je
shll
inc
push
lods
jae
jbe
jne
dec
cmp
push
adc
pop
std
ss
repnz
fdivr
inc
pop
inc
push
mov
mov
inc
in
pop
or
pop
sahf
aad
inc
pop
aaa
sahf
jmp
orb
xchg
sub
xchg
or
cmc
xchg
xchg
pusha
cmpsl
push
and
lret
sub
pop
pop
mov
jae
movsb
and
jmp
fmuls
adc
lods
daa
fcmovnb
xor
loopne
jmp
rcll
mov
test
mov
inc
and
add
pop
ds
sub
sbb
inc
and
mov
push
filds
xchg
mov
sub
pop
loope
insl
jb
icebp
cld
mov
int
call
jge
ficoms
sbb
in
loop
fadds
adc
sub
and
cld
out
sbbb
shrl
out
push
daa
mov
ret
inc
cmp
pop
add
lahf
jo
adc
ret
xchg
lret
ffree
dec
xlat
xor
pop
sbb
cmp
cmpb
xchg
cmp
sbb
mov
repnz
dec
pusha
andb
popa
jle
push
out
repz
les
dec
test
cmp
jle
lea
aas
cld
ret
xchg
clc
int
in
sbb
les
pushf
mov
mov
test
testb
mov
idivb
mov
insl
lret
push
adc
and
inc
pop
inc
test
test
push
add
lods
sub
test
jns
in
iret
push
mov
imul
mov
adc
lock
dec
call
push
jbe
push
packssdw
cmp
mov
pop
pop
ja
lea
aaa
mov
nop
shrl
adc
popf
jle
and
aas
jp
aas
dec
jbe
sub
add
pop
popl
dec
rclb
es
mov
push
push
cmp
jbe
push
imul
ljmp
gs
outsb
incl
sti
stos
in
pop
les
outsb
faddl
xor
out
adc
xor
das
or
cmpsl
js
in
fs
fimuls
pushf
lods
ljmp
or
xchg
gs
enter
xor
or
shlb
xchg
adc
pop
adc
xchg
leave
rorl
dec
fcmovbe
loop
repnz
adc
inc
pop
jmp
inc
add
ja
push
ret
push
push
pop
test
and
stos
fcoms
mov
mov
repz
mov
xchg
push
sbb
mov
jecxz
shll
aas
imul
aad
fistps
mov
jl
adc
xor
aas
inc
jno
data16
cmpsb
pop
ss
test
dec
mov
in
sbb
fisubl
aaa
testl
repz
sarb
mov
ret
stos
inc
ds
dec
xor
adc
shrl
and
in
or
xlat
cmc
sbb
push
and
xchg
sbb
push
orl
dec
mov
scas
push
dec
pop
ret
or
ja
mov
jp
lahf
jle
cmp
enterw
mov
lret
jno
push
lret
pop
jle
in
call
xchg
jb,pt
mov
xor
mov
push
cmp
xchg
lcall
xchg
popf
enter
sbb
pop
push
stos
aam
cmp
out
es
out
les
fnstsw
mov
aad
and
enter
mov
cmpsl
xchg
aas
push
xor
fildll
adc
jae
adc
or
cld
lahf
inc
out
dec
mov
xchg
dec
cmpsb
adcl
add
sub
inc
inc
test
inc
pop
mov
push
jnp
popa
icebp
dec
sbb
lds
adc
pop
dec
pop
inc
adc
mov
inc
sbb
push
fdivs
push
fnsave
push
add
mov
xor
cmp
sar
out
test
sub
jbe
push
cmp
pop
add
push
jns
mov
arpl
mov
out
addr16
push
cmp
mov
push
cmpsl
into
pop
mov
or
leave
andl
sub
xor
lea
sub
xlat
xchg
mov
pushf
inc
std
mulb
dec
adc
add
arpl
ret
xor
test
dec
mov
shrl
neg
popw
jmp
xor
push
pop
adc
fidivrs
mov
lds
sarl
arpl
cmp
or
aas
pop
cmpsb
mov
out
mov
lea
lods
push
cs
sti
lds
xorb
mov
mov
sbb
fsts
xor
push
cwtl
mov
mov
and
push
add
push
mov
xchg
test
repnz
or
dec
xchg
frstor
ljmp
sbb
mov
movsb
pop
jb
insb
mov
rolb
jle
aas
movsb
mov
mov
pusha
sub
mov
insb
xorb
jg
push
scas
data16
loope
fstl
fs
xchg
mov
pop
subl
mov
xor
mov
mov
push
inc
mov
jle
push
sbb
pop
sahf
ja
pop
js
pop
stc
ret
sbb
ljmp
test
dec
push
and
arpl
bound
push
je
and
shll
shrb
ss
or
outsb
sysret
xchg
pop
xchg
jmp
jmp
cmpsl
mov
mov
in
xchg
and
icebp
inc
imulb
fisttpll
mov
push
in
mov
jnp
dec
mov
mov
rolb
mov
mov
subb
ds
jae
push
and
ja
nop
stos
ret
cs
inc
scas
mov
stc
enter
into
into
mov
mov
adc
inc
gs
lcall
ds
mov
fbld
mov
shll
and
sub
push
adc
jl
dec
stc
shll
adc
pop
push
aam
pop
jp
scas
mov
das
mov
pop
mov
cmp
in
dec
add
cmp
repz
push
xor
pushf
or
fs
pop
cmp
xor
inc
mov
ud0
ja
add
jecxz
repz
inc
mov
mov
or
sbb
mov
in
sbb
mov
and
lret
mov
and
pusha
cmp
repnz
fstpt
jno
inc
mov
test
adcl
xor
loopne
insb
sbb
cmc
cmpsb
inc
mov
inc
mov
add
inc
scas
or
xchg
mov
popf
sbb
inc
dec
lods
pop
scas
jne
pusha
stos
push
insl
and
and
mov
clc
loopne
mov
mov
ss
fucomp
stos
cli
lods
lock
movsl
pop
and
xchg
pop
outsb
call
push
stos
faddl
test
clc
in
fdivl
or
or
jecxz
pop
or
fld
jns
outsl
int
push
bound
cmp
rcrb
imul
xor
mov
xlat
mov
jp
pop
xor
popf
xor
jmp
or
aam
jo
push
aaa
lea
sarb
pop
stos
shll
jnp
lret
pop
repz
lcall
jmp
cmpsb
adc
in
push
rcl
std
notl
scas
jno
jae
fdivs
test
andb
adc
adc
loopne
iret
out
xchg
iret
dec
jne
jl
ret
mov
mov
data16
and
icebp
mov
mov
in
mov
aam
push
idivb
roll
push
sub
and
in
jno
jo
fdivp
ror
cmp
push
in
cld
add
rclb
sub
and
add
push
or
bswap
mov
push
mov
jnp
xchg
cmp
mov
sbb
push
data16
pop
mov
add
fwait
leave
icebp
xor
daa
out
out
sbbb
jo
sub
pop
or
out
mov
pop
jns
popf
scas
sbb
lret
xchg
pop
adc
pop
ss
subl
std
popa
les
mov
divb
dec
sahf
pop
mov
fstpt
mov
pushf
xor
in
push
in
aas
test
and
mov
pop
push
xor
jge
dec
lea
push
fwait
mov
adc
mov
jne
push
mov
and
push
int3
dec
adc
loope
ret
in
inc
pop
inc
jmp
je
shrl
mov
call
jae
arpl
inc
in
cwtl
out
mov
das
je
das
mov
xor
jecxz
js
xchg
mov
imul
hlt
xor
sub
aam
inc
mov
mov
je
dec
jns
mov
add
es
or
cltd
push
loopne
repz
pop
cmpsb
call
xchg
movsl
ja
mov
in
push
xlat
std
es
jg
fisubl
loop
dec
int3
imul
mov
movsb
sbb
mov
mov
and
fisttpl
incl
jae
inc
out
add
sbbb
cld
mov
inc
sbb
out
cmpsl
pop
sbb
das
bound
aas
leave
fisttpl
and
push
lock
insb
pop
dec
xorps
pop
subb
sarb
lret
out
je
adc
xor
cmp
imul
std
fbld
mov
ss
ss
ficompl
repnz
mov
into
jo
out
imul
mov
mov
mov
xchg
jle
scas
mov
jb
testb
outsl
inc
push
in
xchg
lret
js
inc
push
dec
lahf
sbb
shlb
jbe
jno
cltd
in
cmp
mov
lcall
cmp
jne,pn
xor
fadd
test
mov
movsb
mov
jb
dec
repnz
outsb
aaa
pop
jnp
or
jno
sub
push
sub
and
or
sbb
pop
and
das
and
jge
or
sbb
in
dec
pop
dec
test
jb
pop
insb
and
inc
in
out
mov
fbld
int3
xor
jbe
add
cmpb
decl
add
jo
fs
xchg
jae
lds
cmp
sahf
in
rorl
jg
or
xchg
in
or
out
iret
push
mov
jns,pt
loopne
in
or
xchg
add
dec
outsl
mov
fs
mov
xchg
adc
cmp
scas
gs
cmp
outsl
or
cli
cmc
mov
mov
in
aaa
lock
mov
sub
sub
enter
rorb
les
mov
lahf
adc
cmp
gs
fcompl
cld
xor
sub
adc
dec
pop
push
and
xor
jb
inc
pop
int3
outsl
inc
xor
pop
pop
xor
pop
or
add
hlt
pusha
lcall
cwtl
outsb
int
mov
sbb
pop
jp
adc
in
push
imul
arpl
rclb
jo
pop
ret
enter
add
xor
mov
ja
test
mov
jno
cmc
insl
lahf
jmp
dec
jo,pn
in
int3
xlat
jnp
stc
sub
sub
jb
cltd
in
mov
dec
into
sub
nop
inc
inc
adc
xchg
mov
testl
inc
mov
outsl
mov
sub
add
and
mov
adc
bound
repnz
int
sbb
cmpsb
lcall
mov
imul
dec
push
fists
lret
aaa
xor
aam
jle
fs
aad
jne
or
xor
clc
push
testb
inc
jnp
test
mov
jmp
pop
cwtl
cmpsb
add
mov
lds
sbb
sti
push
adc
xlat
out
mulb
xchg
psubusb
je
lds
sub
stc
and
xchg
pop
pop
pop
mov
inc
mov
mov
lods
cwtl
add
xor
adc
push
mov
cmpsb
xchg
inc
ficoms
mov
popa
sbb
mov
mov
stos
mov
fisubrs
in
dec
pop
mov
xchg
add
int3
jle,pt
test
enter
in
call
ficompl
mov
sbb
dec
mov
sub
pop
jg
aaa
popa
fistpl
sbb
stc
pop
int
lret
sub
pusha
notb
pop
pop
out
push
cmp
negl
and
shlb
push
and
xchg
lret
adc
push
out
inc
push
fucomip
or
dec
repz
jae
jno
mov
pop
shlb
mov
mov
outsl
or
pusha
imul
lea
pushf
dec
icebp
ljmp
adcl
pop
aaa
movsl
out
inc
push
cmp
cs
fiadds
push
push
test
add
sbb
cmc
or
or
call
sarl
lods
xchg
cld
insb
cmpsb
sub
jb
outsl
cltd
fwait
mov
cmp
out
or
inc
jg
dec
mov
int
and
clc
ret
sbb
fdivr
xor
push
push
add
in
mov
xor
inc
fsubrs
jae
or
pop
pop
out
aaa
out
int3
and
cmp
loope
outsl
fs
cmp
les
mov
rorl
xchg
icebp
jle
ss
ret
add
push
sub
jns
xchg
cmp
out
in
inc
jne
inc
repz
fbld
jg
mov
xchg
push
push
push
or
test
test
sub
adc
dec
pop
std
mov
sbb
xchg
sbb
sub
jae
scas
adc
sbb
aam
and
cmp
insl
cmpsb
repz
or
add
fistpl
sub
adc
jmp
addl
adc
dec
sbb
adc
adc
jno
jmp
xor
inc
leave
scas
rolb
xchg
mov
cwtl
repnz
jle
cmpl
aad
dec
loop
jno
and
mov
jbe
push
sub
jmp
mov
ror
sbb
mov
jle
cmp
shll
pop
push
inc
sbb
lock
cmp
xor
test
jo
pmaddwd
mov
cmp
out
sbb
lahf
cli
xchg
add
jecxz
mov
fcomps
les
lea
lret
push
bound
lret
shll
scas
xchg
shll
mov
scas
jns
fistl
sub
or
mov
or
or
xor
stos
dec
aas
add
sub
cmc
cltd
cmp
sti
cmp
mov
popf
xchg
dec
pop
ja
ficoml
dec
cmp
movsl
ret
mov
pusha
nop
jbe
jo
rcr
and
dec
xor
in
jb
dec
pop
into
push
nop
popa
add
adc
or
insl
sti
mov
sarb
in
dec
loop
mov
pop
cld
mov
jl
rcrl
mov
mov
pop
clc
shlb
jp
js
push
xchg
add
or
push
xor
jnp
jbe
pop
cmp
bound
pusha
enter
xchg
mov
adc
sbb
pop
je
sub
mov
xchg
out
pusha
in
arpl
cmpsl
inc
int
cmp
dec
add
fbld
mov
stos
jge
xor
sbb
push
dec
rcrb
les
in
nop
call
setae
mov
xchg
mov
pop
mov
call
lea
rcrl
jecxz
xchg
rorl
jae
xor
out
scas
xchg
mov
movsb
ret
pop
das
clc
decl
jp
std
adc
push
xchg
lahf
fnstsw
or
js
popa
fisttpll
dec
ror
in
xlat
pop
mov
dec
repz
scas
data16
and
pusha
jle
lock
in
jg
sub
and
loope
or
push
jge
incl
adc
mov
loopne
mov
xchg
cmpsb
lret
mov
add
xor
jecxz
insb
es
hlt
xchg
cmp
push
out
inc
dec
shlb
sub
pop
add
jg
mov
repnz
cmp
sbb
pushf
or
ret
mov
js
es
xor
mov
rcll
sub
add
das
and
dec
and
aaa
gs
lcall
jge
mov
cmp
xchg
aam
cmc
call
test
xor
das
rcrb
push
pop
fdivl
cld
cmpsb
es
pop
cmpsl
inc
mov
mov
out
pop
mov
and
xor
fmull
push
xchg
lock
jg
inc
loop
push
popf
add
mov
rcrb
scas
mov
stc
in
imul
js
addr16
sahf
mov
or
fcom
mov
pusha
inc
add
les
xor
popa
mov
fisttpl
fsub
icebp
call
out
in
push
jbe,pn
out
iret
ljmp
adc
lret
test
jg
adc
pop
aaa
inc
ljmp
aad
lret
mov
imul
cs
cs
out
pop
sbb
dec
lods
add
xlat
lods
push
je
lahf
pushf
rcrb
popl
sar
add
or
nop
jbe
push
pop
add
cli
add
add
mov
enter
js
cmp
push
mov
push
cmp
pop
movsl
iret
cmp
les
xchg
mov
mov
insl
cmp
dec
mov
xor
xor
pop
sub
out
sub
xchg
dec
lahf
mov
imul
nop
sub
fsubs
mov
mov
adc
pusha
push
repnz
sub
pop
in
sarb
sbb
rorb
test
cmc
mov
xchg
pop
sbb
mov
test
add
mov
dec
dec
xor
fidivrs
jge
sub
fcmovb
in
cmp
pop
icebp
js
cmp
mov
mov
in
clc
int
ret
fldl
dec
sub
xor
mov
xchg
dec
repz
sub
stos
dec
ficompl
sbb
bound
mov
lods
and
shlb
sbb
fcoml
stos
inc
dec
lea
outsb
pop
sbb
std
mov
mov
inc
cltd
push
jo
popf
xor
cmp
out
lret
shl
inc
nop
sbb
lcall
imul
jecxz
loope
or
ljmp
xchg
shl
inc
notl
sbb
daa
psubsw
scas
pop
sbb
fmul
xlat
sbb
icebp
push
shrl
sub
out
add
cli
add
xor
into
pushf
daa
dec
jl
xchg
xchg
adc
dec
mov
or
mov
jne
rcrb
xchg
pop
out
cld
sub
je
push
jl
pop
pop
fists
mov
xchg
iret
aad
push
icebp
sbb
mov
mov
into
xchg
in
sbb
jecxz
lahf
jns
dec
ret
fsubr
ret
out
insb
add
xchg
xor
and
aad
jmp
jmp
dec
mov
std
js
or
ficompl
roll
js
or
mov
mov
pushf
cld
push
mov
jge
movsb
mov
insl
adc
popf
xchg
aad
mov
std
and
mov
pop
lret
or
jb
adc
jecxz
jnp
iret
jns
dec
mov
mov
mov
in
xchg
dec
popa
add
or
xor
mov
pop
inc
lret
mov
cmpl
sub
xor
lahf
sub
pop
ficoms
inc
mov
xor
jns
lea
mov
insl
call
movsl
mov
lret
sarl
mov
jg
dec
enter
and
jge
cmpsb
sti
push
psubusw
mov
mov
test
xor
mov
stos
insb
mov
mov
jo
add
pushf
mov
jg
iret
stos
mov
or
sbb
scas
ljmp
frstor
or
inc
cmp
icebp
movsl
xor
adcl
stc
mov
pop
leave
jg
jecxz
fucom
mov
cmp
in
mov
pushf
jne
sbb
out
xor
add
add
pop
das
jbe
push
ds
nop
mov
sbb
adc
adc
and
or
push
mov
in
or
and
filds
roll
xlat
lret
enter
js
and
or
jne
jle
addr16
xchg
jmp
mov
insb
pop
insl
jne
mov
jmp
adc
jo
mov
sbbl
mov
adc
add
inc
adc
mov
lods
movsl
pop
inc
push
subl
mov
js,pt
inc
add
pop
dec
mov
xchg
xor
aaa
out
fildll
cmpsb
jns
les
mov
fs
mov
pusha
stos
sti
ja
jne
mov
cmp
ljmp
cmp
sub
push
push
gs
push
fs
or
mov
dec
mov
jl
jo
cmp
mov
mov
mov
cmp
add
subl
ficoml
repz
pop
jne
ss
inc
jle
push
or
cmp
jmp
outsb
test
mov
cmpsb
jo
shlb
ss
in
push
call
pop
xchg
pusha
rorl
pop
add
cmp
leave
mov
xchg
lds
imul
pop
xlat
xor
mov
sub
filds
addr16
dec
inc
xor
scas
cmpl
xor
sub
add
xchg
arpl
repz
mov
xor
lret
push
cmp
clc
sahf
jnp
sub
int3
daa
xchg
jno
in
adc
mov
adcl
dec
push
cmp
ljmp
or
dec
adc
jae
mov
outsl
mov
xchg
movsl
fbld
jmp
cwtl
fdivrs
or
jge
mov
out
inc
inc
movsb
loope
popa
add
test
orl
xchg
inc
dec
or
lock
mov
lods
daa
pop
and
add
sti
bound
xor
addr16
fdivp
add
outsl
pop
loope
or
mov
insl
mov
xchg
mov
dec
mov
mov
push
and
cmp
or
xlat
sub
mov
ret
jmp
fisubrs
shlb
das
cmpsl
call
jecxz
daa
pop
imul
insl
cmp
pop
jmp
mov
push
sbb
out
xor
jae
insb
lock
inc
lods
mov
ja
nop
pop
ret
dec
out
bound
lock
pop
and
lods
mov
add
and
fldl2t
andb
or
adcl
push
mov
dec
shrl
int
mov
hlt
push
ljmp
aad
jne
pop
aad
add
sub
mov
insl
sbb
mov
test
out
pop
out
filds
popf
push
fstpt
fstpl
fnstsw
inc
fwait
imul
dec
ss
mov
add
iret
jno
ret
stos
mov
add
xor
xor
and
or
in
adc
cli
inc
xchg
mov
mov
jno
nop
lcall
popa
in
or
rcll
pusha
xchg
mov
clc
lcall
dec
pusha
dec
stos
adcl
push
push
mov
mov
mov
and
rorb
pop
movsb
rcl
movsl
and
aaa
and
or
mov
icebp
sbb
or
push
sub
jbe
adc
repz
pop
adc
test
mov
dec
fidivrl
je
mov
ja
dec
sti
pop
pop
test
cli
mull
or
sahf
cmp
in
aam
pop
mov
or
and
test
call
adc
xchg
fsubrl
imul
testb
mov
js
jb
add
cltd
jmp
push
jno
jp
movsb
sahf
lods
std
dec
sub
imull
inc
mov
cmc
and
lahf
adc
pusha
mov
xlat
add
push
mov
mov
jo
int
mov
stc
inc
add
dec
pusha
push
insb
popa
cltd
mov
jnp
xor
mov
xor
push
pop
mov
dec
sahf
inc
roll
dec
pop
sbb
dec
movb
cld
cmp
mov
mov
rolb
pop
dec
add
xchg
je
fdivrl
lcall
outsb
and
fcoml
lock
xchg
dec
fbstp
adc
in
and
popf
das
jmp
jl
mov
push
mov
out
cmpsl
mov
into
test
loopne
inc
fs
lcall
mov
shlb
adc
clc
sti
sahf
sahf
xor
adc
movsl
pop
jg
xchg
sub
shrl
xor
stos
mov
in
call
aaa
mov
fistpl
or
xchg
data16
or
push
and
sbb
je
fsubrp
lds
cmp
cld
mov
insl
out
adc
push
sub
pusha
sbb
fnstcw
or
mov
pop
add
adc
xor
shrb
rorb
or
cmp
stos
popf
cmc
clc
loopne
jecxz
sub
scas
inc
bound
or
andl
jmp
cmpsl
es
cmp
mov
push
inc
mov
push
cli
push
js
out
mov
js
in
loope
cld
sahf
xor
mov
add
xchg
aad
test
int3
jno
mov
sub
push
adc
pop
and
add
pop
mov
les
loopne
mov
pop
pop
xchg
idivb
sbbl
daa
push
mov
inc
sbb
jnp
pop
rcll
int3
jg
outsb
pushl
cli
jp
and
sarb
daa
or
andl
push
adc
cmpsl
xor
mov
int
pop
insl
dec
xor
pop
in
mov
test
xor
mov
fs
ret
mov
scas
mov
jae
loope
inc
lods
ret
cmp
test
test
add
mov
pop
mov
add
dec
mov
or
rcrb
cmpl
mov
inc
imul
xchg
dec
fsubs
xchg
xor
inc
adc
sub
lret
add
aam
sbbl
in
jl
gs
and
dec
iret
loope
arpl
stos
pop
fcmovbe
fimull
aad
enter
ljmp
jno
dec
faddl
mov
jb
pop
cmp
cs
ljmp
add
out
dec
push
lds
movsb
jmp
jnp
leave
sub
jg
aaa
or
mov
loop
arpl
fistpl
mov
cmpsl
push
scas
lcall
jp
decb
pop
sbb
mov
cmpxchg
jge
js
cmp
add
enter
lret
xchg
adc
dec
fildl
mov
pop
movsb
cwtl
and
ja
dec
shr
outsb
sbb
inc
out
int3
cmc
cmp
mov
adc
std
push
js
jb
push
das
sahf
out
inc
rcll
mov
or
int
in
xlat
ret
fsubrl
sbb
cmp
and
mov
fsubl
fistpll
out
pop
out
jnp
int
xchg
inc
jae
sbbl
rorl
sbb
je
je
cltd
outsb
js
test
rcrl
or
movsb
lea
mov
out
shlb
and
mov
fwait
test
push
fildl
aad
lcall
lret
dec
stos
cmp
popf
jnp
mov
fwait
sub
filds
cmp
xchg
imul
test
dec
jp
dec
xchg
dec
inc
or
mov
cmp
sub
call
or
push
xchg
sbb
insl
aad
add
mov
inc
lea
scas
mov
xchg
pop
aad
cmpsb
sbb
xchg
adc
xchg
das
and
fwait
sbb
dec
sub
jne
dec
movsb
jp
ja
xor
xchg
inc
jg
lock
or
cmp
int3
dec
dec
pop
cwtl
mov
jb
xchg
jp
mov
out
xor
push
fmul
es
lods
push
test
fstpt
in
cltd
mov
jecxz
stos
mov
mov
mov
inc
jl
lock
jb
fs
jo
repnz
inc
xor
inc
jl
loop
sbb
jae
repz
lret
adc
in
inc
push
inc
push
xchg
and
add
jl
loopne
pop
xorb
cmp
xchg
xorb
xchg
popa
sarb
jge
loopne
test
test
mov
cwtl
pop
and
cmc
test
sub
sbb
mov
stos
mov
ljmp
inc
xor
std
pop
aam
xor
mov
adc
and
insl
sbb
aam
adc
mov
pop
xchg
hlt
data16
jp
int
inc
xchg
fs
xorl
jmp
inc
addr16
leave
gs
aaa
mov
in
cs
test
or
sbb
adc
dec
cmp
xchg
add
insl
jnp
aad
leave
ret
hlt
push
test
bound
sbb
mov
test
lret
mov
es
jp
push
out
inc
or
adc
movsb
and
outsb
mov
jle
inc
nop
inc
data16
pushf
sahf
push
les
int
or
sbb
mov
xor
mov
ja
out
inc
add
xor
add
inc
or
mov
pmuludq
mov
and
pushf
pop
sub
lret
and
fimull
push
sub
fcomps
gs
jo
dec
fucomip
outsb
mov
imul
push
in
push
pop
add
lahf
and
jno
cmp
ret
push
enter
mov
dec
mov
dec
lods
jbe
int3
xchg
dec
mov
inc
jecxz
fldln2
adc
jns
mov
out
inc
ret
mov
enter
mov
add
dec
lcall
mov
adc
sub
mov
mov
mov
jg
ror
in
mov
clc
or
or
adc
mov
fsubl
in
dec
inc
xor
xchg
or
je
or
cwtl
aad
xchg
pop
std
xor
mov
ficoms
stc
inc
shll
shll
dec
fisubrs
adc
sub
divb
pop
mov
xor
fstpl
push
imul
pusha
jbe
les
mov
jo
xorl
xchg
add
into
xchg
leave
xor
loop
adc
stos
sub
inc
lods
test
cli
pop
inc
push
xlat
lock
or
jle
ret
xchg
fsts
sub
push
out
ret
mov
stc
cmp
fisubs
sbb
cmp
sub
cmpsb
add
cs
inc
daa
cs
fnstcw
outsb
sbb
mov
pop
mov
fs
les
fisubrs
test
dec
lret
mov
fadd
inc
mov
inc
incb
sbb
pop
mov
cmp
lcall
cmp
sbb
aaa
xchg
jnp
pushf
or
lcall
jmp
cltd
insl
lods
icebp
add
imul
into
xchg
mov
sub
out
jno
jne
shlb
pusha
lock
addr16
rcrb
aas
fnstcw
je
int3
push
aas
repnz
sbb
fildl
pop
outsb
or
add
inc
pop
mov
mov
dec
xor
inc
mov
mov
lret
btr
das
mov
mov
popf
pop
stos
push
fwait
out
in
mov
jbe
cmp
sbb
inc
xchg
mov
in
insl
xor
movsb
aaa
xor
jae
popf
inc
shlb
test
lods
out
sbb
adc
or
cmp
pop
fsts
rcll
sbb
jne
repz
push
addb
and
add
pop
and
cmc
mov
mov
sub
add
xchg
lahf
inc
lea
test
stc
bound
int
dec
cmp
push
sub
add
loope
push
mov
or
mov
fimull
pop
movsl
mov
mov
jp
dec
add
pop
jb
test
ss
fldt
mov
mov
ja
call
mov
push
add
pushf
dec
into
push
stos
mov
pushf
shrl
push
in
cmp
movsb
popf
pop
mov
add
push
dec
lret
insb
leave
movsl
push
test
lods
jmp
in
addl
cli
fidivs
inc
adc
or
clc
pop
movsl
cmp
insl
fistps
push
je
jbe
pop
aad
dec
lea
into
addr16
insb
mov
cmp
dec
adc
movsb
ljmp
adc
test
in
sahf
push
jns
movb
loopne
scas
popf
mov
pop
add
mov
pop
int3
add
mov
dec
clc
add
xor
cmp
sub
mov
out
arpl
push
aad
xchg
inc
addr16
jno
adc
in
into
add
add
adc
pop
bound
call
cmp
dec
mov
repz
mov
cli
xor
scas
xchg
push
cli
adc
lods
sub
push
rcrl
popf
add
test
js
jns
jae
lea
mov
jnp
adc
roll
daa
test
sbb
xchg
loope
inc
inc
push
je
or
or
mov
xchg
push
mov
clc
shrb
gs
jecxz
or
jle
push
cmpsl
mov
fwait
jg
shrl
out
dec
or
sbb
cmp
repz
sub
sbb
leave
sub
cmpsl
jo
jp
pop
mov
mov
daa
pop
cmp
testl
sbb
xchg
dec
xor
push
imulb
cmc
cwtl
xor
add
les
jl
sbb
or
adc
dec
repz
push
les
test
or
dec
into
xor
pop
in
sbb
jg
fcomps
fwait
sahf
movsb
test
add
js
or
pop
out
pop
outsl
es
scas
jnp
adc
jmp
or
mov
pop
jbe
cmc
test
shr
aaa
jmp
stos
test
push
mov
mov
hlt
nop
mov
jo
mov
push
cld
xchg
dec
rcrl
cwtl
ljmp
or
fisttpl
mov
call
fnsave
jbe
cld
testl
pop
xchg
test
push
cmp
jae
iret
das
xlat
and
and
sub
addr16
fwait
arpl
int3
xorl
xor
in
outsb
cld
loope
cs
std
cmc
fidivrl
pop
aas
adc
sahf
mov
in
lock
push
push
xor
in
int3
mov
sbb
imul
push
sub
in
shl
into
and
test
sti
inc
push
inc
movsb
scas
jle
jmp
pop
cld
mov
push
push
lret
xchg
push
shlb
rclb
mov
stos
jmp
inc
inc
outsl
inc
insb
sub
or
sahf
es
and
or
stc
push
jmp
or
out
scas
int3
adc
xchg
femms
push
test
mov
lahf
fmul
inc
push
popf
out
dec
mov
sbb
mov
mov
or
mov
add
stc
push
cmp
in
jno
add
cwtl
cmpsl
cmpb
in
pop
fists
push
xchg
fildll
arpl
xor
icebp
test
fisttps
mov
xchg
out
sub
andl
fdivl
lgs
imul
adc
jnp
or
pusha
cmp
je
adc
out
mov
cmp
pop
fildll
xchg
out
xlat
adc
dec
aam
xor
sub
loop
int
jg
push
jge
scas
out
ret
rcrl
pop
outsb
lods
add
ret
lods
jg
es
dec
pop
dec
les
divb
dec
adc
es
sub
cmpsb
lret
inc
test
pushf
pop
cmc
test
pop
mov
mov
popa
pop
xor
inc
das
cld
stc
mov
sub
or
fidivl
mov
mov
mov
shll
iret
push
dec
cmpsl
jno
and
dec
add
adc
pop
loop
mov
arpl
sub
dec
bound
call
xchg
add
fwait
rolb
aam
iret
adc
push
sbbb
jl
insb
fidivrl
push
ds
adcl
insb
cmp
dec
mov
xor
in
cmp
mov
xorl
jp
dec
push
jle
cmp
xchg
fucompp
pop
cmp
shrb
xor
out
mov
or
out
dec
out
add
pop
adc
mov
push
xchg
jmp
cs
aam
aaa
cmp
mov
lahf
adc
xor
add
ret
push
ds
cmp
shl
cmp
in
mov
int
add
sub
cmp
xchg
insl
push
adc
fcomp
scas
cltd
ljmp
sub
mov
scas
lea
inc
sub
loop
push
test
pop
cmp
addr16
lods
sahf
roll
adc
aas
fldt
xor
push
sbb
pop
stos
xchg
dec
adc
xor
lods
gs
jecxz
pop
fstpt
pop
add
push
repz
shlb
lret
ss
outsl
fs
hlt
in
lods
and
test
dec
sbb
sbb
push
addr16
clc
xor
push
mov
ret
mov
nop
push
test
inc
jne
push
dec
sub
adc
and
fists
pusha
xchg
fadds
mov
cmpsl
scas
cmp
cmp
dec
jg
pop
fistpl
aam
inc
lahf
lods
adc
lcall
lods
xor
dec
sbbl
jg
pop
sbb
pop
addr16
mov
push
jnp
stos
sbb
lods
sbb
or
mov
xchg
popf
xor
adc
jge
out
xor
movsl
pop
add
mov
jg
mov
mov
fdivrs
jp
lock
inc
lcall
sbb
arpl
inc
test
scas
test
jne
xchg
sbb
jl
sub
mov
ret
adc
call
push
test
clc
xorb
andl
add
fisubrl
pop
cmpsb
aas
lcall
stos
cli
into
dec
mov
into
sar
mov
stc
outsl
in
push
fistpl
and
inc
pop
inc
pextrw
daa
clts
ficompl
cli
or
insb
popa
xchg
in
stos
fsubl
push
or
jge
mov
mov
out
lods
mov
or
add
push
test
and
mov
mov
mov
in
icebp
mov
pop
sub
addr16
jnp
rcrl
mov
adc
aaa
lds
adc
cmp
cmp
mov
data16
psrlq
fsin
in
lcall
inc
mov
pusha
movsb
jne
loop
xchg
xor
mov
repnz
sbb
inc
ja
mov
in
lret
into
cmp
mov
mov
xchg
jmp
pop
mov
enter
mov
xor
callw
fldenv
repnz
or
adc
lret
sub
push
push
add
outsb
xor
mov
xchg
dec
or
sub
or
mov
aam
xchg
push
jg
jl
pushf
add
std
push
imul
fisubl
xchg
pusha
adc
mov
les
fistps
aas
cmp
mov
aas
push
daa
pop
fisubl
cmp
fs
and
mov
addr16
xchg
daa
lea
enter
flds
xchg
int
pop
sbb
sbb
insl
sarb
shl
imul
hlt
cmp
idivl
xchg
cmp
cltd
sbb
inc
movsl
xor
mov
xchg
fstps
sub
repnz
pop
xor
pop
xchg
push
dec
cmpsb
clc
out
aas
pop
int3
push
dec
cmp
dec
cwtl
jmp
popa
cmpsl
testb
push
lods
inc
mov
hlt
arpl
nop
cli
pop
sbb
push
js
adc
and
mov
jge
adc
mov
adc
cmp
jge
sbb
and
sbb
lods
shll
pop
cmpl
popa
stos
dec
enter
inc
push
xchg
pushf
inc
lods
mov
sub
int
xlat
stc
arpl
push
push
cli
xlat
xchg
nop
mov
pop
jno
xchg
push
lock
sub
pop
imul
lret
inc
cli
in
adc
addr16
cwtl
in
ja
ret
aas
inc
mov
add
je
xor
shlb
dec
inc
js
cli
mov
std
pop
inc
outsb
jae
inc
mov
je
lret
clc
ljmp
insl
cmpsb
scas
in
popa
lds
sbb
filds
sub
mov
out
push
subb
imul
jl
mov
test
push
sbb
popa
jns
fimull
mov
or
cmp
xor
and
sbb
aas
mov
rorb
in
in
adc
pop
repz
sarb
mov
pusha
push
mov
dec
jbe
sbb
dec
outsb
rcll
iret
dec
sub
clc
jne
imul
ss
stc
lods
ss
pop
stos
sub
sub
shrl
mov
inc
stos
aam
push
sbb
pop
icebp
mov
outsl
mov
inc
push
lcall
push
inc
sub
popf
push
jb
dec
sbb
loopne
movsl
push
adc
mov
and
iret
scas
lret
popa
sti
popl
or
aaa
and
xorl
test
lret
or
addb
mov
bound
mov
fisttpll
das
sub
adc
cmp
adc
mov
ss
pop
pop
insb
mov
dec
call
orb
xor
loopne
aam
and
jns
in
adc
test
mov
rolb
mov
leave
cmp
das
incl
es
stos
fs
ljmp
lods
mov
popa
sub
repnz
and
lods
jne
mov
xchg
scas
and
insb
and
mov
push
mov
out
dec
push
and
pop
jp
or
dec
cmpsb
aas
xchg
negb
fwait
mov
test
outsl
in
ret
incl
pushf
sarb
adc
scas
cmp
inc
xchg
xor
cwtl
push
cs
xchg
pusha
icebp
pop
pusha
adc
cmp
mov
pushf
daa
inc
xchg
call
mov
cmp
mov
cs
push
pushf
lea
xlat
mov
fcompl
mov
lea
cmp
mov
jmp
jns
movsl
pop
jg
add
lea
mov
out
bound
lock
push
fwait
mov
ret
jnp
push
inc
cmpsb
pop
mov
push
ja
cs
and
daa
cmp
int3
orl
jne
cmp
jl
stos
dec
pop
mov
cli
ret
push
adc
repz
push
push
xlat
jmp
out
mov
cmp
xchg
xor
out
fs
rolb
cmpsl
pop
mov
push
aaa
inc
das
mov
out
jbe
mov
imul
mov
mov
sub
cwtl
xlat
sub
clc
scas
rol
and
xor
xchg
fisubs
stos
xlat
cmp
js
xchg
xor
inc
add
mov
push
cmp
lahf
scas
jo
push
jge
xlat
aaa
jl
mov
pop
or
stos
xor
jae
andl
in
cs
movsl
lods
mov
xchg
cltd
mov
mov
js
mov
in
cld
repz
adc
and
scas
mov
sarl
mov
outsl
jns,pt
jnp
fdivrl
imul
xor
stos
mov
mov
dec
xchg
mov
cld
pop
lcall
sbb
xchg
sub
arpl
pop
ret
push
sbb
xor
cmp
mov
xorl
mov
dec
jle
add
roll
pushw
test
lods
rcl
jbe
dec
stos
in
icebp
gs
add
fildl
mov
cmp
sbb
inc
dec
pop
fcomip
add
shll
dec
test
jl
xchg
mov
lods
adc
inc
test
or
xor
and
pop
mov
shl
lds
xor
mov
test
mov
cmp
pushl
ret
cmpsl
ds
jne
adc
or
mov
xchg
je
nop
dec
xor
out
adc
push
sbb
data16
and
dec
sbb
inc
ds
dec
or
mov
fisubl
rclb
jo
pop
js
sbb
shrl
imull
adc
ss
pop
loope
and
into
dec
cmp
lret
mov
dec
fs
inc
test
mov
fwait
xor
xchg
out
jne
scas
fmul
shl
scas
add
test
adc
sbb
icebp
std
push
idivl
addl
leave
sbb
push
lret
popf
call
or
loope
mov
mov
or
aam
lahf
add
add
aad
rcr
xchg
test
mov
stos
cmp
adc
pop
sub
mov
fwait
sti
jg
outsl
push
inc
shrl
add
sbb
scas
or
cmpsb
scas
and
mov
and
bound
add
jnp
fmul
inc
mov
sbb
addl
je
mov
bound
test
pushf
push
push
inc
xchg
push
xor
sub
xor
jae
xchg
and
arpl
jae
fildll
ljmpw
sbb
popa
dec
leave
cld
aad
push
inc
aad
jnp
inc
daa
mov
cmp
cmp
lds
xlat
scas
xlat
xor
lahf
hlt
mov
mov
jmp
jo
sahf
lock
ds
mov
jmp
add
sub
dec
int
xchg
addl
mov
dec
movsl
dec
inc
int
out
mov
mov
xor
js
adc
idiv
out
push
push
sub
jne
xchg
push
mov
gs
js
shrl
ret
pop
insl
out
pop
inc
push
inc
mov
cmpsl
jns
lret
dec
sub
insl
sbb
pop
cld
movsb
mov
repnz
in
fwait
push
and
fwait
stos
pop
data16
es
es
lahf
cmc
mov
adc
mov
es
dec
movsl
movsl
ret
xchg
jno
lock
mov
lds
js
sarb
rcrb
xor
fsts
scas
pop
push
aad
adcb
pop
aad
js
jmp
xor
mov
cmp
sub
jmp
cmp
mov
xchg
inc
cmc
sbb
in
add
adcl
mov
pop
roll
jnp
and
jge
sarl
jo
lahf
int
mov
adc
test
insw
daa
dec
sub
jns
fisubrs
enter
jle
jecxz
rcrl
test
jmp
sti
mov
adc
mov
sbb
fcoms
xchg
cli
or
int
or
push
mov
push
js
jne
cmp
repnz
add
or
cmp
lock
or
or
icebp
out
in
xlat
clc
inc
xchg
cltd
iret
jno
push
jae
jbe
test
xor
repz
cmp
and
mov
and
inc
sub
add
inc
mov
mov
jo
xor
into
std
adc
push
int
or
in
xor
sbb
sub
push
push
sbb
jo
icebp
dec
cld
fwait
xchg
loope
sbb
and
lret
xchg
mov
sbb
insl
jp
std
or
mov
cmpsb
cmpsl
lret
jae
inc
cmp
or
movsb
xor
mov
or
sub
lock
mov
ljmp
dec
loopne
loop
lret
and
push
dec
inc
push
lret
sub
or
dec
adc
add
sahf
pop
mov
jno
fldenv
into
in
jecxz
popa
imul
fsubrs
pop
push
mov
sub
rcll
inc
adc
jle
aam
insl
sub
mov
adc
pop
loop
movsl
and
mov
cmp
pushf
movsl
cmpb
inc
xor
ret
aas
dec
and
mov
mov
ret
stos
mov
or
sahf
lds
test
mov
pop
dec
inc
add
mov
lods
and
inc
sbb
mov
test
add
mov
cmp
pop
or
adc
mov
xchg
iret
mov
mov
xchg
xor
jo
cmp
pop
jns
fs
push
fdivrl
xchg
cmpsl
fadd
ror
imul
ss
push
imul
fidivs
lahf
in
adc
mov
sub
rorb
cltd
mov
pop
cld
js
in
xchg
or
dec
or
call
clc
and
xchg
icebp
add
call
rcll
in
xchg
push
mov
sbb
cwtl
enter
popa
bound
xor
cmpsl
inc
jae
outsl
mov
xor
into
loopne
jnp
mov
pop
ja
add
push
clc
mov
xor
jmp
mov
std
movsl
pop
or
mov
mov
ret
jne
inc
fildll
pop
xchg
shll
add
sbb
loope
mov
ljmp
movsb
andl
out
stc
mov
cmp
jns
adc
jnp
arpl
and
mov
rolb
divb
sbb
ljmp
movsl
stos
scas
xchg
std
das
leavew
and
pop
outsb
movsl
mov
xchg
leave
cmp
mov
jbe
hlt
insb
mov
jl
adcb
jecxz
mov
adc
mov
lods
cmp
aam
fsubs
mov
psubb
lahf
and
aad
fisubrs
std
jbe
sarl
aad
lcall
fwait
push
sahf
stos
or
cmp
sub
push
or
inc
ds
andl
sahf
jne
insb
outsl
adc
insl
mov
pop
dec
pop
or
cltd
cmp
sub
jecxz
out
or
push
cmp
pop
dec
jno
ds
les
cwtl
repz
pop
sub
mov
xchg
rorl
sub
loop
movsl
pop
roll
movsb
scas
mov
add
inc
repz
mov
mov
adc
dec
push
push
sbb
insb
push
add
mov
daa
sub
lods
sar
ffree
adc
pop
inc
scas
or
cmp
fcmovnbe
pop
push
enter
rorl
rorl
xor
fildll
or
mov
mov
adc
pop
fwait
icebp
dec
and
sub
aad
xchg
in
das
movsl
mov
push
xor
push
jl
clc
mov
jl
leave
and
subb
fstpt
hlt
lds
cwtl
mov
inc
or
cltd
je
dec
push
cld
ds
push
add
inc
ds
std
aad
add
shrb
lock
push
sub
xor
push
test
jae
adc
popa
push
fldl
lock
movsb
cmp
mov
push
aas
and
push
mov
add
adcl
orb
cmp
cmp
out
cmp
lcall
test
xlat
aas
and
and
cmp
jmp
inc
int
in
addr16
lret
add
adc
push
push
sahf
inc
imul
movsl
fbld
cs
xor
cmpsb
xchg
loopne
mov
push
in
scas
and
mov
add
push
or
add
push
mov
nop
pop
jle
pop
jecxz
scas
jle
jno
cmp
aam
sbbb
rorb
in
test
xor
jae
iret
pop
xchg
xchg
mov
dec
je
push
inc
fsubr
negb
shll
mov
stc
sti
sub
xor
dec
add
or
dec
push
mov
leave
cli
push
orl
cpuid
popf
js
lahf
mov
insl
xchg
mov
xchg
xchg
or
fstpt
jae
aad
or
xchg
cmp
xchg
lret
push
in
cwtl
in
xor
push
inc
pop
aaa
pop
fwait
cmp
lods
lea
adc
mov
push
mov
repz
cmc
ss
push
sbb
aam
out
jmp
fdivs
xorl
mov
fcoms
shll
add
test
mov
add
test
out
sti
jno
pop
mov
in
mov
lcall
inc
repz
rcrb
mov
cmpsl
sbb
daa
mov
es
add
sub
mov
jmp
je
faddl
dec
lock
test
loopne
test
mov
jmp
lret
mov
cmp
mov
mov
fisubs
call
jne
int
inc
lahf
inc
mov
sti
inc
push
mov
out
iret
ja
in
push
adc
cmp
push
lcall
cmp
icebp
dec
sub
fcomps
push
mov
sub
sub
jne
pop
sub
sub
rorb
aaa
jl
out
push
sbb
fsubl
scas
dec
shlb
xchg
dec
inc
pop
in
aas
mov
jg
test
pop
imul
mov
mov
push
call
insb
leave
adc
stos
cmpsl
push
daa
adc
sahf
js
add
dec
js
jae
dec
mov
inc
fwait
movb
mov
in
pop
cld
lret
sbb
leave
xor
cmpsl
sbb
insb
dec
int3
test
andl
sahf
mov
movsb
jns
aas
cmpsb
data16
dec
dec
xlat
mov
pop
stc
xchg
jmp
or
aaa
clc
popf
les
das
add
addr16
sub
dec
int
in
pushl
lahf
mov
xchg
pop
mov
inc
or
hlt
adc
push
testl
jl
sub
ja
and
dec
pop
popa
cltd
mov
arpl
lds
xchg
xor
enter
xor
add
mov
xchg
loop
fsubrl
lret
sub
push
mov
cltd
jge
sbb
fsubl
mov
ret
roll
push
or
add
add
xlat
stc
push
sbb
mov
xchg
dec
lds
xor
push
scas
inc
pushf
fsubrl
add
in
loope
int3
insb
inc
scas
cltd
clc
mov
mov
insl
pusha
jp
les
cmp
adc
xchg
add
and
pop
lods
out
out
repz
xor
frstor
aam
mov
add
mov
fdivs
jmp
pop
add
dec
fidivs
mov
inc
sub
push
push
cmp
add
adc
mov
lods
sbb
lds
inc
loop
enter
out
stc
sub
rcll
inc
cmpsb
jecxz
xchg
jo
xchg
ljmp
sub
out
mov
mov
pushw
mov
mov
pushf
cltd
push
push
les
addr16
in
shlb
push
lods
in
adc
insl
sbb
lret
or
lret
inc
push
mov
pop
out
or
lcall
call
mov
adc
or
jne
idiv
cwtl
scas
lods
pop
repnz
mov
daa
mov
pushf
outsb
into
fs
sahf
lods
aam
xor
mov
push
or
outsl
shl
mov
cmpsl
jmp
frstor
nop
mov
cmp
sbb
jne
stc
pop
repnz
aad
mov
inc
sub
leave
jge
test
xchg
clc
inc
clc
xorb
outsb
jno
imul
xor
in
das
cwtl
and
push
add
testb
or
inc
loopne
mov
jb
sub
test
lods
hlt
push
enter
enter
loopne
pop
dec
inc
icebp
and
pop
push
dec
rolb
and
lds
sbb
aam
jg
jnp
adc
inc
jbe
jmp
and
dec
lret
lods
xor
jnp
jmp
push
xor
sub
stc
adc
add
outsl
ja
daa
mov
push
push
lret
leave
out
xchg
stc
loop
out
jl
sub
adc
out
jge
push
popf
and
movb
lret
clc
pop
call
ret
mov
test
popa
sahf
lahf
dec
gs
cli
gs
push
repz
dec
push
fsubl
jae
fwait
je
pop
or
sub
mov
imul
pop
daa
sbb
call
scas
push
sub
jg
add
cmp
pop
push
iret
es
stc
or
push
cwtl
dec
ss
insb
in
clc
in
sbb
xor
mov
test
imul
push
jg
ds
lods
mulb
fcoml
jae
mov
enter
and
mov
sub
ret
and
xchg
jns
push
push
lock
lea
or
mov
lcall
sub
sbb
cmp
outsl
mov
ret
notl
nop
xor
das
mov
repz
fsubrs
call
adc
in
xor
push
inc
aaa
mov
jl
lea
mov
jp
int
sub
pusha
xchg
adc
jle
mov
add
in
js
jns
pop
adc
push
sbb
xlat
outsb
dec
adc
sbb
or
mov
xchg
sub
xlat
xor
add
lcall
add
lea
mov
dec
or
insb
add
mov
jns
rclb
gs
fsts
mov
scas
jp
adc
mov
add
push
push
xchg
push
rorl
inc
inc
lods
xorl
iret
push
jae
xor
lods
fcoms
sbb
into
stc
addr16
mov
xorb
xchg
jecxz
dec
mov
xorl
mov
fs
ja
enter
and
fldcw
pop
call
out
jmp
cs
out
dec
stos
lock
aas
clc
cmc
mov
fisubrl
into
xorb
mov
sub
fcoml
push
dec
push
shr
pop
lods
xchg
xor
nopl
pop
jne
loop
inc
sbb
insl
popa
es
addsubps
rorl
iret
int
cmp
add
xor
stc
adc
cmp
cvttps2pi
jno
mov
shrl
mov
mov
les
stos
popa
mov
cwtl
adc
shrl
cli
add
jecxz,pt
std
scas
xlat
sbb
mov
jge
adc
popf
and
call
test
std
ja
shlb
ljmp
int
jne
pop
xor
movb
dec
or
loopne
pop
add
mov
and
pop
ret
or
test
fwait
push
shlb
in
fwait
divl
push
and
icebp
push
pop
repnz
cmp
add
pop
and
aad
popa
notb
insb
stos
mov
ret
or
pushl
inc
lcall
dec
xor
lahf
in
or
cmp
dec
loopne
fwait
cmp
xchg
sbb
dec
outsl
inc
mov
and
xchg
and
push
fwait
test
jmp
xor
sarb
jp
inc
jmp
mov
stos
dec
rolb
jp
jmp
mov
mov
imul
out
add
cmp
jl
xor
mov
loop
mov
mov
jnp
and
sub
push
dec
leave
mov
xchg
jecxz
ret
ss
out
dec
cld
and
sub
adc
movsl
mov
push
inc
jecxz
or
cmp
repz
jg
out
mov
push
sub
pushf
dec
iret
in
repz
stos
add
shrb
lret
scas
cmp
jnp
stos
add
or
jg
push
aas
or
pushf
jo
ja
inc
insb
push
cmpb
xor
vpmulhuw
cmpb
pop
fdivrl
inc
into
add
mov
push
jle
adc
aaa
fbstp
and
jno
ss
jecxz
adc
movb
lods
inc
inc
inc
inc
movsb
nop
fwait
sbb
jg
jae
movsb
cmpsb
xchg
fsts
cmpsb
js
ds
lret
pushf
push
inc
ret
out
jp
out
xchg
mov
inc
and
mov
stos
rolb
mov
cld
push
or
in
mov
xor
sbb
cmp
dec
xchg
and
out
pop
repnz
int
stos
dec
mov
sbb
xchg
pushf
stos
cmp
gs
cmc
mov
and
xor
mov
jnp
mov
test
xor
dec
stos
in
dec
mov
jno
pop
lahf
loopne
bound
pop
fldt
es
mov
les
cmpl
xchg
imul
xchg
sbb
test
rolb
pop
push
lods
push
pop
rcl
bound
inc
pop
mov
mov
les
mov
adcb
leave
test
mov
pop
push
xor
movsl
xchg
add
repnz
mov
inc
or
addr16
mov
inc
jns
mov
push
sub
jle
xchg
mov
cmp
cmp
jo
test
or
jg
lea
pop
sub
rcll
movsb
repz
mov
cmp
int
lret
repnz
fcompl
aad
adcl
into
repz
xchg
cmp
imul
out
insl
fidivrs
aas
imul
xor
push
pop
add
or
pop
and
pusha
push
ret
jle
lahf
mov
jbe
cmp
ja
lret
pop
xchg
inc
ret
out
xor
add
xor
jl
adc
lods
push
sub
mov
into
test
xor
sub
repnz
mov
inc
jg
pop
mov
rol
shlb
ja
mov
inc
shrb
sbb
pop
inc
sub
inc
inc
shrb
inc
and
or
jo
dec
andl
xchg
sbb
dec
xchg
out
inc
adc
dec
hlt
mov
daa
out
inc
int
movsl
jae
pusha
test
sbb
bound
out
cmp
adc
or
or
nop
fcomi
cs
xlat
jns
mov
cmpsl
cmp
cmp
cli
dec
xor
sbb
inc
jae
mov
daa
jle
xor
mov
and
mov
cmpsl
aas
fisubrs
cwtl
adc
xchg
xor
push
mov
mov
in
push
aas
in
pop
enter
or
les
push
loop
xchg
sahf
movsl
js
and
jbe
sahf
mov
repnz
mov
jo
cmp
push
or
scas
cld
dec
jg
in
cli
push
call
dec
xchg
mov
cmp
ficompl
sbb
das
fwait
loopne
jp
int
outsl
shlb
and
roll
in
pop
loopne
add
daa
mov
xor
or
insl
pop
add
loopne
mov
mov
jg
movsb
mov
cmp
mov
daa
iret
aas
or
dec
mov
mov
ljmp
ret
out
loop
sub
inc
xor
outsl
mov
lcall
sub
idivb
sbb
aad
addr16
fs
xor
push
mov
sub
loopne
and
scas
adc
cmpsb
xor
add
xor
inc
cli
inc
dec
and
dec
or
mov
enter
pop
add
ret
imul
leave
test
xchg
push
push
dec
mov
inc
sub
ret
sbb
push
icebp
rclb
pop
xlat
rcll
stc
push
and
pop
jg
push
rcll
xchg
not
rcrl
popf
out
dec
mov
xchg
add
loope
dec
pop
mov
movsb
sbb
push
pop
lods
fsubr
rcll
sub
stos
leave
out
loope
lods
hlt
xchg
arpl
notl
inc
insl
xor
sbb
call
xchg
lcall
mov
xchg
lret
fbstp
andl
xor
bound
iretw
rcrl
adc
jb
ret
fdivl
dec
addr16
addb
shl
push
pop
into
in
test
cmpl
mov
ffreep
adc
cmpsb
cwtl
mov
loope
pop
pmovmskb
jne
stos
push
add
or
push
faddl
xlat
stos
dec
dec
fsubrl
dec
insl
xor
imul
data16
movsl
jne
icebp
sbb
hlt
pop
or
dec
aas
orb
test
in
inc
sti
movsb
dec
repnz
push
shll
mov
add
xor
inc
adc
jge
repnz
mov
int
das
das
sbb
inc
push
mov
subb
into
in
dec
add
pusha
and
stos
xor
xor
push
shrl
xchg
cltd
mov
ss
dec
dec
pushl
stos
push
pusha
fwait
lds
je
sarl
adc
out
mov
mov
lret
int
popf
test
stos
mov
and
sub
ret
jae
dec
in
push
ds
sbb
add
in
mov
or
xchg
imul
rcll
enter
ror
call
mov
jmp
pushf
xchg
pcmpeqb
lods
lods
iret
and
out
icebp
fnsave
xchg
arpl
mov
push
cmp
mov
pop
mov
pushf
push
jl
repz
test
push
shll
adc
scas
jo
int3
dec
stos
shl
aam
stc
cs
or
loop
adc
adc
cltd
js
mov
movsl
mov
in
es
jae
outsb
push
test
sub
call
jle
insl
je
dec
ja
fildll
mov
adc
jmp
ds
movsb
mov
sbb
adcl
cmpsb
jno
mov
repz
cmpsb
dec
adc
or
ss
xor
mov
aam
adc
mov
sbb
xchg
test
cmpsb
mov
mov
cwtl
mov
jae
xor
cmpsl
jge
or
inc
adc
fdivrl
adc
jl
cmpsb
je
add
sarb
popa
xlat
incb
mov
in
mov
aas
insb
stos
push
xor
imul
cwtl
jae
and
test
sahf
sbb
sub
cltd
lods
popf
dec
rorl
xchg
pop
out
popf
sub
imul
test
pop
cmp
cmp
lret
movsb
js
cwtl
sub
mov
mov
inc
mov
insl
and
adc
dec
mov
cmp
mov
shrl
jecxz
jle
and
adc
dec
mov
inc
js
jmp
cmp
xor
jbe
in
xchg
enter
fildl
lahf
cltd
movsl
fs
push
lds
cmpb
jno
mov
cmp
hlt
push
inc
jns
ret
adc
push
loop
hlt
or
jne
loop
or
lds
scas
cmc
push
sahf
mov
ret
sbb
mov
arpl
and
xchg
stc
sub
mov
sahf
cs
pusha
or
into
inc
cld
pusha
adc
mov
and
jecxz,pt
dec
mov
xchg
inc
and
jmp
push
sti
aaa
pop
in
jae
push
icebp
inc
cs
mov
mov
rcpps
addr16
imul
popf
rcll
or
xchg
cwtl
fisttpl
sahf
lcall
jnp
in
xor
ror
sub
mov
daa
jle
mov
push
xor
movsb
fwait
pusha
loope
in
add
mov
nop
mov
test
pop
and
mov
push
push
and
fwait
mov
scas
mov
lock
test
push
mov
lret
pop
fiadds
mov
mov
xchg
ds
xor
call
mov
ss
lret
adc
imul
mov
mov
shrl
pushf
fxch
sbb
mov
push
xor
xlat
fucomip
sbbl
ret
clc
jle
stc
inc
mov
enter
mov
push
cwtl
adc
loopne
arpl
mov
cmp
out
leave
push
pop
push
or
adc
cltd
gs
test
dec
or
scas
in
sbbb
loop
lret
or
hlt
lea
push
sub
insl
pop
inc
mul
jo
jle
adc
cmpsb
addr16
add
jae
cmp
jmp
jb
xchg
out
inc
jmp
cltd
push
sti
pushf
cmp
add
lods
clc
sub
mov
add
xor
sub
movb
je
pop
and
in
lods
add
adc
fsubl
insb
push
sbb
mov
mov
inc
std
scas
sarl
or
test
pop
int
fisttpll
cmp
pop
or
dec
push
je
add
dec
mov
lcall
ret
stos
cwtl
dec
addl
scas
ja
fistl
pushf
xchg
ss
inc
outsb
xchg
aad
inc
cltd
fdivrl
bound
stc
xchg
jp
bound
cmp
or
imul
mov
stos
test
adcl
je
gs
hlt
mov
pop
mov
mov
cmpsb
call
jns
mov
jne
les
and
ss
or
mov
clc
hlt
xchg
push
sbb
or
sbb
sbb
add
cmp
mov
mov
addr16
dec
xchg
nop
es
sahf
xchg
inc
cwtl
xchg
loopne
lret
inc
and
add
fwait
jo
pop
cli
adc
adc
popf
cmpsb
jp
movsb
imul
ja
aad
jb
cltd
inc
call
shlb
call
sbb
jle
pop
daa
inc
mov
jmp
out
push
loope
call
xchg
inc
dec
divb
data16
mov
dec
lret
pushf
ja
inc
push
or
xchg
mov
and
xor
cmpsb
test
inc
mov
mov
dec
xor
mov
call
aam
push
mov
mov
int
jb
adc
adc
mov
sub
int3
xchg
shll
cmp
push
pop
dec
mov
sbb
gs
adc
xlat
inc
or
sub
mov
shl
test
mov
gs
pop
xor
pop
fcmovu
subb
lock
mov
mov
inc
fcoms
push
mov
add
xor
sti
mov
int
fisubrs
mov
add
lret
sub
cmp
dec
jne
dec
movsb
add
insb
jne
outsb
mov
push
mov
inc
cld
dec
mov
push
cmp
cwtl
pop
pop
in
pop
push
in
sbb
aad
pop
mov
push
xor
mov
popa
add
sbb
push
loop
sub
shrb
neg
roll
jne
jle
push
xchg
mov
in
mov
cmp
lods
lods
add
mov
and
loope
pop
rcrl
jno
xor
test
dec
insb
cmp
push
xchg
mov
xor
lret
mov
pop
push
and
hlt
sub
sti
push
jge
je
repz
xchg
mov
int3
mov
adc
lahf
pop
repz
test
in
outsl
test
insl
scas
test
inc
mov
jno
xlat
mov
adc
scas
pop
popf
rcrb
mov
mov
mov
push
ds
call
bound
pop
xchg
loop
cmp
sarb
mov
or
loop
lcall
add
lret
enter
cmp
rol
dec
daa
cli
add
clc
inc
add
push
xor
addr16
xlat
mov
push
mov
stos
xchg
add
dec
loop
sbb
mov
or
popf
idiv
test
jg
push
popa
pop
push
dec
mov
pop
add
push
mov
mov
repz
and
int
xchg
jmp
cmp
jge
add
push
lcall
mov
rclb
bound
int3
jmp
mov
adc
pusha
arpl
push
sbb
sbb
sub
out
dec
push
push
or
loope
mov
adc
mov
icebp
adc
dec
hlt
push
or
xorl
mov
cmc
scas
and
xlat
repnz
clc
jmp
push
or
xor
lea
stc
inc
lahf
cmc
in
ret
pop
outsb
loope
pop
out
pushf
pop
sbbl
data16
cmp
pop
aaa
arpl
imul
pop
jle
mov
pop
stos
push
rclb
inc
pushf
cld
add
push
data16
jae
pop
stos
cmp
dec
push
mov
dec
pop
in
mov
pop
sar
dec
sub
mov
ret
push
adcl
sbb
mov
mov
cmpb
sub
je
das
jbe
sarl
outsb
roll
jns
add
and
dec
popf
mov
loop
adcb
mov
frstor
insl
clc
mov
adc
push
pop
adc
mov
ja
mov
push
popf
mov
loop
or
int3
dec
push
push
and
mov
pop
fmulp
fidivl
imul
sub
pushf
jns
adc
push
cmp
test
sbb
jl
divl
scas
jo
scas
or
cltd
push
call
fisttpll
cmpsb
sbbb
int
enter
mov
pop
lcall
xchg
push
add
int3
clc
lods
adc
stc
push
jbe
rcl
ret
sub
stos
aam
sbbb
mov
cmp
aam
mov
cmpsb
jbe
mov
scas
dec
sub
cltd
mov
lods
adc
pop
cmp
cmpsl
js
xor
xchg
repnz
pop
call
jae
push
jns
push
scas
xchg
push
push
add
cld
cmp
xchg
int
aam
lcall
cmp
les
les
sbb
or
pop
int
cmc
jg
call
push
test
iret
xchg
out
fbstp
xor
negb
sbb
jl
mov
push
in
movsb
call
sti
ljmp
cmp
iret
stc
push
mov
arpl
dec
xchg
push
adc
and
inc
and
or
xor
sbb
sub
inc
fucomip
mov
loop
xchg
jecxz
push
inc
inc
jb
iret
aaa
jo
aad
push
push
jb
dec
mov
sbb
jae
add
jae
mov
push
mov
setns
jle
mov
aam
pushf
fimuls
pop
fimull
cmovp
xor
lock
imul
mov
pop
sbb
inc
lret
rclb
je
leave
cwtl
or
aas
arpl
pop
xor
xchg
in
xor
xor
inc
pop
les
adc
push
jb
aaa
aam
lret
inc
or
lret
popa
xchg
adc
lock
mov
adc
push
icebp
scas
and
inc
sub
xor
movsb
fidivs
and
scas
out
inc
cmpsb
in
add
and
imul
xchg
xchg
out
add
stos
add
gs
les
ljmp
aam
xchg
jge
lock
sbb
mov
adc
inc
rcll
aas
xchg
jns
stos
inc
push
pop
js
mov
jle
or
fs
add
push
adc
scas
xchg
ret
test
js
cmp
xchg
cs
pop
mov
nop
pop
jl
stos
int3
lods
push
int3
push
cld
sti
std
adc
xchg
add
fisubrs
fisttps
cmpsb
bound
mov
and
mov
cmp
xor
in
lret
sets
mov
aad
inc
pushl
dec
cmc
cmc
enter
shll
fcoml
inc
testl
imul
jo
pop
push
jne
jns
add
adc
sarb
daa
xor
xor
and
ss
in
call
pushf
out
dec
je
xchg
lds
xlat
fimuls
adc
xchg
adc
or
mov
in
adc
jne
inc
jle
repz
roll
jp
cmp
fidivrl
ds
test
jo
fs
lds
test
clc
lods
shll
and
movsl
xor
stos
cmp
divl
ds
lret
cmc
cmc
jns
add
xor
inc
mov
jp
xor
mov
ss
inc
mov
clc
dec
out
lcall
std
rclb
jle
stos
cmp
ret
ror
shll
add
loope
rol
roll
mov
and
push
jmp
xorl
addr16
cmc
fildll
add
lods
shrb
frstor
cwtl
jmp
inc
rcl
out
lds
pop
cmpb
inc
mov
mov
add
lock
pop
mov
xlat
jo
mov
xchg
mov
lds
jle
or
inc
jmp
test
jnp
test
and
movsb
push
lret
inc
nop
lret
bound
cmp
jle
ss
jns
into
testl
pop
and
cmp
xor
cmpsb
mov
and
ror
inc
test
test
and
mov
pop
fidivl
dec
push
cmpsl
xlat
fsubrl
fwait
sub
cld
cmpsl
inc
int
js
sub
mov
adc
in
mov
je
iret
das
add
popf
mov
out
add
mov
pop
stc
setp
add
ja
pop
dec
or
inc
xchg
cmp
outsl
xor
or
sub
sub
pop
in
js
cmp
out
popa
test
jb
cmpb
inc
push
in
pop
mov
iret
pushf
push
shlb
daa
in
popf
xchg
adcb
int3
cmp
cmpsl
insl
dec
sti
xchg
jne
push
outsl
dec
int
adc
in
lahf
popl
pop
outsb
std
or
xchg
scas
xchg
ret
outsl
pop
push
lea
mov
test
mov
sahf
hlt
and
mov
dec
fcoml
in
cmp
and
add
je
mov
and
mov
ds
and
inc
add
and
loope
fdiv
ljmp
cmp
mov
insb
or
xchg
arpl
lods
cmp
xchg
pusha
inc
aad
or
in
and
icebp
sub
dec
and
mov
test
ljmp
das
mov
aaa
xor
mov
enter
xor
or
imul
xchg
aas
or
xor
mov
idivb
or
scas
mov
push
sub
add
ljmp
pop
jecxz
jae
cmpsl
divl
mov
in
aas
out
nop
sub
xchg
cmp
sbb
push
stos
mov
jmp
inc
mov
xchg
movsb
cmp
inc
cli
popf
lcall
mov
sarl
ja
nop
pop
cmpsl
insl
fdivr
cmp
fnsave
push
cmc
add
mov
movsl
flds
or
sub
movsl
and
mov
fcoms
mov
out
push
mov
int3
push
mov
ret
dec
add
mov
xor
push
shlb
add
cs
int
popf
push
hlt
xchg
xor
ret
sbb
jle
mov
mov
clc
loopne
idivb
push
mov
inc
fidivl
xchg
jno
sub
insb
add
ds
xchg
lea
les
vpaddsb
mov
imul
test
outsb
repz
dec
cmp
inc
out
adc
cltd
inc
cmp
adc
loopne
ljmp
xor
fsubrs
arpl
cmpsb
pop
push
pop
imul
cmpsl
sbb
shll
out
cmpsl
add
mov
fmuls
dec
or
and
xchg
jle
mull
mov
dec
jno
add
insl
jno
gs
jle
jo
pop
push
loopne
test
cmp
enter
dec
ja
js
and
popf
and
push
imul
sti
fcmovne
xor
data16
sub
imul
aas
nop
movsb
out
jecxz
jecxz
adc
sbb
add
mov
call
pop
decb
shlb
mov
jecxz
aaa
pop
adc
push
xlat
out
cmp
jb
mov
in
call
jp
dec
add
out
testb
sbb
pop
repz
cs
mov
out
push
sbb
adc
movsl
dec
push
ret
jle
leave
out
mov
rclb
inc
sub
mov
cmp
add
out
inc
lods
cmp
shlb
stos
mov
daa
lods
int3
mov
popf
cwtl
bnd
std
dec
adc
jg
repz
ss
cmp
fwait
cmp
cld
add
add
ss
dec
sbb
jo
in
jns
inc
add
insl
push
xor
sub
xchg
scas
adc
jmp
xchg
lds
ljmp
sbb
xor
lahf
fcmovu
xchg
mov
xchg
rcl
mov
mov
mov
aaa
and
push
push
add
mov
mov
jg
rcrb
scas
dec
sub
mov
lods
ss
rcll
dec
lds
es
and
f2xm1
xor
dec
sbb
jp
mov
mov
lods
bound
shlb
push
enter
mov
inc
mov
shrb
out
xor
in
loop
notl
test
mov
repnz
push
jle
jl
jno
dec
xchg
movsb
add
or
inc
aad
or
mov
push
xchg
dec
dec
jnp
shll
fstl
pop
mov
scas
push
inc
sub
mov
jo
pop
icebp
pop
inc
xor
inc
sub
stos
pop
xchg
lods
stos
into
rcrb
mov
iret
sub
aad
test
pusha
pop
inc
fildl
add
pop
ja
std
push
mov
mov
sub
ret
xchg
dec
xchg
imul
push
inc
out
and
enter
insl
out
xchg
enter
sbb
push
mov
addb
push
add
mulb
adc
pop
rcl
fsts
jg
out
nop
mov
sub
cld
leave
jae
sbb
rolb
and
jp
clc
pop
jbe
cmp
jbe
mov
pop
out
inc
icebp
test
cs
lods
pop
cli
pop
mov
and
les
scas
adc
orb
xor
mov
lahf
mov
movsb
gs
add
push
jecxz
sbb
es
cmpsb
jns
adc
adc
dec
loope
push
inc
adc
scas
jg
cmpsl
mov
insb
outsb
cmpsb
mov
test
repnz
mov
push
dec
test
cmp
inc
mov
push
or
ret
js
call
inc
adc
xchg
in
insb
jae
cld
lods
aaa
sub
xchg
and
cmpb
lret
stos
iret
loope
in
xchg
inc
clc
lea
notb
cli
jne
outsb
dec
popa
nop
inc
mov
xlat
push
push
ficoms
lods
nop
and
outsl
test
mov
scas
stos
ret
fs
sbb
test
sbb
push
adc
mov
pop
mov
jecxz
jmp
and
icebp
inc
xchg
or
add
mov
push
addb
push
sti
inc
adc
inc
jg
dec
insl
iret
mov
dec
add
icebp
bound
sbb
aaa
mov
push
adc
lret
dec
je
dec
jle
and
or
fildl
mov
bound
fwait
in
fwait
subb
push
pop
sub
add
jo
testl
push
cmp
cmp
inc
popa
aam
jg
cmp
aad
incb
push
mov
mov
xlat
filds
cld
fnstcw
pop
fdivl
leave
mov
and
aaa
jmp
hlt
lds
lods
imul
mov
xchg
test
adc
push
out
ficoms
insl
xchg
pop
in
and
xor
divl
loop
xchg
in
and
sbb
sarl
cli
pop
inc
sahf
sub
shll
int
cmp
gs
fs
stos
sahf
or
enter
pop
gs
cld
add
jg
jns
lret
movsb
inc
test
push
psubsw
arpl
rolb
outsl
and
test
pop
xchg
push
pop
fbld
cmp
lahf
out
mov
loope
fwait
in
cmp
fstpl
outsl
sbb
mov
sar
in
or
pusha
out
sti
push
loopne
scas
scas
int3
jge
pop
popf
jp
mov
push
jl
stc
mov
cmp
sub
lcall
in
ja
popa
jne
in
mov
out
xor
mov
sbb
add
arpl
add
dec
mov
lret
shr
ret
push
jbe
xchg
dec
mov
pop
mov
push
inc
mov
pop
repnz
mov
cmpsl
scas
xor
cmp
and
ret
out
xchg
fidivrl
pop
jnp
adc
ret
popl
fildl
sbb
inc
mov
mov
xor
pop
inc
xor
sbb
fildll
push
mov
adc
testl
mov
or
pusha
and
lret
int
cmp
push
sub
jge
xchg
dec
jo
pop
sahf
adc
outsl
push
std
scas
adc
mov
adc
inc
dec
xor
sti
mov
lahf
jb
lds
rorb
cmp
jno
or
js
pop
push
pop
xchg
sbb
jne
mov
sub
cs
in
dec
xchg
dec
icebp
add
adc
fnstenv
jnp
hlt
and
push
sub
and
adc
in
enter
add
mov
cmpsl
fists
pop
out
sub
sub
jmp
xor
arpl
insb
aad
movsb
aam
xor
mov
aaa
gs
nop
sbb
lret
js
xchg
jns
repz
xor
callw
lret
cmpsl
add
xchg
loopne
push
sbb
or
lcall
and
pusha
lock
das
fildll
lret
lret
ljmp
lods
xor
jl
add
cmpsb
mov
sub
mov
or
inc
jp
pushf
sub
stos
inc
cmp
aad
mov
mov
jbe
repnz
cmp
aaa
dec
wrmsr
mov
sbb
xchg
jae
pop
mov
ss
cmp
jle
pusha
inc
pusha
inc
push
inc
adc
pop
sbb
std
cs
rolb
mov
adc
xor
adc
ja
mov
mov
mov
test
inc
dec
adc
pop
addl
jb
dec
xchg
dec
jmp
cmp
mov
nop
out
xor
jge
lods
sub
adc
add
jg
jb
add
sub
mov
add
push
jne
sahf
fwait
jnp
cmp
outsb
lahf
sbb
xor
fisubrs
pop
jg
aas
daa
iret
push
jmp
nop
out
pop
push
popa
inc
outsb
jg
and
push
fldt
pop
filds
xor
mov
pop
mov
add
lods
out
fiadds
inc
movsl
addl
pop
jno
andb
pop
inc
lret
xchg
pop
enter
sbb
lds
addr16
inc
dec
xchg
xor
mov
dec
xchg
push
xchg
out
mov
call
push
jecxz
aad
lods
xchg
jae
mov
xor
jns
gs
cmp
or
nop
mov
jecxz
push
adc
push
test
lods
inc
push
add
cwtl
jmp
push
repnz
mov
mov
pop
out
push
insb
call
shrl
mov
mov
or
pop
pop
mov
nop
cmp
pop
xchg
aad
lahf
and
lods
jnp
pop
addl
push
mov
dec
or
loope
popf
add
mov
in
inc
addr16
push
mov
inc
mov
mov
inc
les
daa
fimuls
sub
dec
fucomp
add
in
inc
add
lods
fsubl
jno
and
mov
jecxz
les
inc
loop
ficoml
push
scas
cmpsl
push
fpatan
cmpsb
dec
sti
fdivrl
add
insb
pop
mov
mov
test
es
mov
andl
jbe
stos
jne
cld
adcl
and
xchg
mov
mov
out
jmp
or
mov
scas
imul
ja
int
pop
pop
ficoml
push
add
mov
cmp
scas
notb
sbb
pop
enter
push
test
lods
mov
jne
jmp
ljmp
cmpsl
push
dec
ficompl
jl
dec
jge
cmpsb
pushf
cld
test
rorl
mov
jno
aam
mov
inc
or
outsl
dec
test
enter
mov
xorb
std
test
lods
pop
pop
les
int3
xchg
pusha
or
jbe
sarl
xor
jl
clc
xchg
ret
pusha
das
xor
and
mov
mov
andl
aas
jge
add
push
xchg
mov
sbbb
xchg
or
or
jecxz
cmp
movsb
xor
cmp
ljmp
loop
mulb
int3
repnz
jmp
push
mov
lds
repz
notb
add
sub
sti
cmpsl
mov
or
es
outsl
es
xlat
fdivrl
xchg
or
shlb
in
mov
lea
push
movsl
dec
sbb
push
test
repnz
push
xor
inc
push
das
scas
xchg
push
pop
adc
pop
xchg
cmpb
inc
mov
xor
je
daa
movsl
hlt
mov
sbb
call
lret
inc
pop
sahf
ljmp
inc
stc
cmc
rolb
xchg
loopne
jnp
cli
sarl
sbb
ja
ja
jl
add
stos
je
mov
subl
sti
out
xor
adc
add
inc
outsb
test
cmp
ds
cmpsl
inc
testl
lret
adc
in
xor
mov
jle
xchg
ret
sbb
pop
aam
push
jb
cmp
int3
arpl
sub
lods
in
mov
mov
sub
loop
loopne
js
dec
add
and
lods
or
sub
inc
mov
inc
mov
nop
dec
sbb
test
imul
push
pop
cmp
ficomps
xor
insb
inc
xchg
cmpsw
mov
aad
and
pop
jle
stos
or
inc
stos
imul
jmp
xor
mov
push
dec
adc
add
jmp
add
inc
nop
in
add
sbb
pop
movsl
mov
cmp
dec
jge
lods
xor
inc
xor
sbb
imul
pop
lods
les
or
sbb
push
cmp
rorl
jmp
cmc
loop
xchg
xor
enter
pop
add
fcomp
das
mov
inc
ja,pn
and
in
cmpsb
pop
stc
cmc
xchg
push
mov
loop
cltd
xchg
in
add
js
jp
lret
inc
in
inc
sub
xor
adc
fimuls
test
scas
rolb
mov
test
out
dec
stos
pop
cmp
idiv
adc
imul
pmaxsw
cmp
fsubrs
jbe
ja
sbb
test
das
imul
pusha
jge
loopne
aam
clc
movb
ret
inc
loop
or
movsl
add
insl
ret
mov
icebp
cmpb
pop
outsb
repz
xchg
pop
ret
sub
add
pop
mov
adc
xor
arpl
loop
jae
sub
incb
imul
add
xchg
cli
and
lea
imul
cwtl
xchg
lods
fidivl
mov
xorb
dec
iret
je
les
pusha
cwtl
xchg
aas
pusha
test
stos
add
popa
repz
mov
cmp
pop
sbb
adc
jo
insb
jnp
or
inc
push
scas
and
js
lcall
popa
insl
cmp
push
and
add
lahf
sub
mov
jo
test
cmp
mov
push
mov
aad
and
mov
push
pop
ja
mov
and
lret
out
out
sti
inc
jbe
imul
ja
inc
jns
jbe
sarl
adc
data16
pop
incb
fwait
jp
and
scas
or
inc
push
push
sbb
mov
cmp
aaa
inc
inc
pop
jmp
sbb
sbb
test
into
mov
nop
inc
and
divb
push
xchg
sahf
or
stos
jge
shlb
push
mov
jae
xchg
jge
add
mov
outsb
fisubl
mov
cmp
ljmp
sbb
test
adc
leave
xchg
popa
cmpb
pop
dec
add
push
test
xor
add
fiaddl
lcall
mov
aas
cmp
add
les
xor
dec
cltd
mov
pop
xchg
adc
cld
and
icebp
movsb
or
in
negl
pop
jecxz
push
pop
cmp
out
sub
movsl
sahf
xor
das
and
add
mov
addr16
imulb
mov
loope
shrb
js
lcall
loop
pop
aam
mov
ficompl
and
aaa
jge
cmp
push
loop
add
pushf
mov
jg
and
dec
inc
loope
mov
insl
mov
addb
aas
das
lret
mov
pop
das
arpl
lock
jo
inc
sbb
aam
inc
xor
sub
or
xchg
mov
aaa
bswap
ret
jl
fdivs
mov
add
adc
jne
je
or
clc
jnp
rcll
inc
fcomip
mov
mov
int3
imul
inc
fwait
repz
lret
xlat
mov
inc
xchg
jnp
outsl
femms
mov
stc
mov
insl
lock
iret
pop
pop
cs
fnstcw
in
mov
xor
icebp
push
iret
push
jl
push
gs
mov
fimuls
icebp
out
jl
out
mov
ljmp
repz
push
test
pushf
push
cld
sub
fisubrs
rorl
ja
ljmp
int
mov
push
push
std
add
ja
cmpsb
cmp
mov
jmp
loop
sub
or
in
adc
leave
mov
push
cmp
pop
and
sbb
jg
dec
test
sbb
xor
mov
pop
cmp
nop
xor
sub
out
mov
mov
dec
pop
lods
ffreep
push
int
inc
pop
jns
loopne
mov
repz
mov
scas
shll
in
ss
rolb
lea
adc
cs
dec
outsl
cmpsb
mov
int3
ret
loop
movsb
jns
pop
cli
xchg
xor
loop
jmp
fsubrl
repnz
cmc
push
imul
fmulp
or
loopne
rorb
into
xorb
mov
adc
das
dec
rcll
jae
add
loope
xchg
pushf
cmp
push
rorl
in
lock
fsub
lret
mov
stos
and
mov
gs
arpl
jp
push
add
aas
adc
arpl
in
xchg
test
jbe
mov
xchg
lock
pusha
ljmp
es
popa
cmp
addr16
mov
pop
jge
adc
enter
cmpb
test
push
stos
sbb
adc
out
stos
xchg
mov
xor
sub
addr16
je
mov
lcall
imul
test
rol
arpl
rol
or
fimull
lret
mov
add
dec
lods
and
cltd
push
xlat
fadd
insl
pop
loop
cmp
insb
dec
or
fiaddl
repz
or
cmc
jle
roll
idiv
lret
ds
leave
adc
imul
jecxz
push
std
mov
mov
and
imul
cmp
ja
mov
dec
das
inc
leave
xchg
pusha
push
aad
xlat
loop
mov
xchg
mov
mov
or
nop
mov
sub
jecxz
clc
cmp
xchg
pop
stos
aaa
cmp
fiaddl
dec
iret
enter
adc
cmp
ljmp
push
call
xor
mov
hlt
add
loope
jmp
jnp
ja
ret
pop
push
dec
movsb
mov
and
sbb
xorb
ret
push
and
in
pop
mov
jmp
push
loop
xor
mov
sub
pushf
loopne
pop
int3
or
push
mov
push
jecxz
sub
fucomp
adc
hlt
pop
or
adc
add
sbb
dec
xchg
adc
or
scas
push
pop
jle
push
inc
push
test
addr16
or
jg
push
sub
jo
add
sbb
mov
xchg
push
pop
or
jbe
leave
mov
cli
or
inc
pop
cmp
pop
lods
insb
incb
rcl
xchg
mov
nop
fistpll
mov
ret
lds
daa
mov
adc
mov
mov
enter
pop
jo
pop
push
loop
sbb
pop
mov
jbe,pn
inc
inc
mov
stos
in
inc
xchg
lods
loop
je
test
add
jbe
loop
lock
addr16
sub
dec
aas
stos
test
lea
out
mov
pop
lret
leave
adc
sbb
outsl
je
dec
fbld
mov
mov
loop
ret
or
cmc
scas
dec
add
mov
adc
ljmp
je
sbb
jle
out
mov
or
test
sub
jmp
fstps
mov
pop
add
xor
stc
add
lock
add
sub
shr
xlat
ss
pop
xor
jle
jbe
sbb
pop
push
dec
mov
mov
roll
pop
xchg
sub
cmpsb
ret
sbb
test
cmpsb
cmp
into
gs
or
ds
mov
jns
cltd
mov
ds
incl
rcr
pop
addr16
pop
and
inc
cmp
js
gs
ret
xchg
in
repnz
fists
push
adc
add
dec
mov
pop
pushf
shr
cmc
shl
mov
addr16
adc
andb
call
ficoml
dec
out
subb
or
cmpsl
mov
lods
jnp
mov
loope
jmp
adc
test
xchg
push
test
push
xchg
popf
sbb
push
inc
sahf
dec
xchg
inc
xchg
repz
pop
dec
sbb
fldenv
das
shll
fnsave
fdivl
bound
fbstp
sub
inc
out
mov
xor
pop
pop
push
gs
or
cmpb
push
test
in
insb
pop
ds
mov
xchg
xor
dec
je
loop
lahf
movsl
ss
ja
add
std
mov
test
xor
mov
add
sbb
loop
push
sub
je
rcrb
mov
bound
je
sub
incb
rorl
lds
cmp
setns
fcmovne
xchg
into
push
imull
xorl
std
push
xchg
and
out
ret
mov
aad
push
sub
aam
mov
and
fldenv
push
mov
xor
mov
add
xor
xchg
pushf
into
inc
std
sbb
pop
nop
sub
lods
mov
out
cli
sbb
push
xchg
or
mov
insb
push
adc
pop
push
xor
push
mov
pop
ss
shrb
sbb
loop
dec
ret
aas
pop
int
sbb
sub
inc
mov
sub
rcr
xor
adc
sarl
les
data16
mov
and
mov
stos
sbb
adc
pop
dec
aad
inc
imul
mov
jnp
sti
dec
les
fiadds
pop
in
addl
xor
adc
cmp
push
xor
loope
repnz
adc
cmc
ret
lahf
cmp
push
fisubrl
lcall
insb
push
jae
or
out
mov
pop
mov
or
popf
icebp
jge
xorl
fld1
jne
jge
cwtl
adc
or
lret
and
repz
jl
push
je
je
jnp
int3
js
mov
out
rcll
lds
es
xor
mov
fcmove
insb
js
jae
lret
cmp
sti
rorb
xor
jno
shll
and
and
push
fstpl
adc
jg
sub
insl
lea
jmp
sub
push
or
push
add
jle
adc
xor
xor
imul
test
mov
xor
xchg
ljmp
es
push
xchg
jo
jge
sub
sbb
or
adc
pop
jmp
data16
adc
test
mov
or
xor
push
aaa
sub
adc
sub
scas
testl
hlt
fcmovnbe
inc
xchg
rcrb
testb
mov
lahf
lret
add
int
cmp
mov
mov
and
addb
imul
sbb
and
imul
jg
ficoms
cld
push
xchg
or
xor
push
mov
out
dec
scas
inc
jns
sbb
fsubr
dec
push
fcoms
xlat
inc
push
push
xor
cmp
in
xchg
cld
call
cmp
adc
pop
xchg
out
nop
xchg
inc
mov
xchg
xchg
in
xchg
fs
mov
mov
push
sub
cmpsb
adc
pusha
and
clc
sbb
add
mov
cmp
pop
mov
fbstp
pop
test
push
and
shrl
jp
sbb
xor
inc
cltd
into
mov
ljmp
gs
pop
int
sub
xor
lock
loopne
push
mov
inc
nop
pop
sahf
push
das
push
cltd
icebp
popa
jb
insl
popf
jno
das
imul
out
and
mov
out
repz
pop
jns
out
add
lcall
xchg
mov
rclb
adc
push
sbb
popf
adc
test
and
mov
inc
data16
xchg
inc
jecxz
orl
pop
aas
fwait
rorb
fsubrs
and
fldt
out
cld
or
call
lahf
cmp
test
scas
in
in
popl
xchg
js
pushf
jl
inc
inc
cmp
imul
es
inc
xor
les
xlat
bsf
sub
mov
xchg
mov
cmp
lcall
sub
mov
dec
mov
gs
cwtl
loope
pop
sti
jo
leave
mov
in
lret
out
pop
lock
or
testb
out
jp
and
cmpb
insl
sub
inc
out
sub
push
fdivl
lds
icebp
inc
jge
push
shrl
and
pop
mov
jnp
cmp
test
rolb
push
das
sbb
mov
push
insb
sub
stc
ja
sub
sub
and
outsb
dec
nop
jo
fbld
jne
and
movlhps
push
rol
std
loope
jecxz
ret
popf
pushf
xor
icebp
fdivs
jbe
mov
mov
mov
mov
popf
jne
adc
or
inc
push
add
sub
nop
inc
insl
mov
daa
pop
mov
cmc
jb
push
rol
les
out
fwait
dec
out
mov
ds
call
mov
int3
xor
and
pop
repz
clc
mov
repz
insl
dec
lock
in
ja
mov
sarl
insl
push
xchg
jno
mov
insl
out
cld
add
mov
jge
push
pusha
pop
push
fwait
add
and
filds
int3
sti
pop
inc
filds
adc
mov
js
cmp
scas
arpl
jnp
sub
mov
scas
je
je
pusha
lods
in
cltd
pop
and
push
xchg
out
inc
and
inc
in
or
loope
mov
test
mov
add
or
or
test
push
or
call
mov
or
and
jb
jg
lock
cmp
xor
sub
repnz
orl
test
ss
inc
mov
movsl
dec
pop
insl
push
js
imul
mov
out
loop
movsb
fldl
push
repnz
and
sbb
sub
mov
dec
inc
call
les
adc
cmc
ror
xor
leave
lods
cwtl
lods
mov
mov
mov
popf
inc
adc
scas
adc
and
jbe
cmp
pop
mov
cmpsb
sahf
jne
call
cmp
or
push
repz
ds
roll
es
xor
sahf
or
push
xchg
and
divb
inc
mov
cmp
orl
dec
mov
mov
arpl
xor
sbb
gs
mov
insb
lret
add
xor
cld
xor
test
push
and
xchg
sub
daa
mov
dec
sbb
addb
lret
sahf
mov
mov
mov
sbb
pop
mov
stc
push
push
lret
mov
insl
ffreep
cmp
mov
cmc
add
je
xchg
inc
jp
pop
stc
xchg
dec
push
mov
dec
ror
xchg
mov
test
mov
sub
bound
test
jne
and
loope
xchg
lock
orl
pop
and
clc
das
cmpb
das
pusha
loopne
mov
nop
jle
xchg
add
xorb
dec
mov
loopne
fisubs
cmc
pop
int3
inc
dec
mov
aam
in
movb
push
mov
icebp
and
xchg
jle
in
fcoms
in
adc
jb
sahf
pop
push
jo
jae
and
arpl
xlat
jp
jae
sti
and
movsl
test
or
jbe
fcoml
setl
cwtl
test
std
push
inc
popf
cmp
mov
adc
pop
cltd
in
push
dec
fnstcw
enter
pop
push
mov
mov
arpl
bound
and
dec
push
or
imul
jecxz
dec
cmp
in
ljmp
mov
mov
iret
stos
lods
mov
sub
xor
mov
pop
inc
mov
xlat
jl
insb
dec
and
push
int3
fdivrp
imull
lret
or
xor
cmp
std
aas
mov
fnstsw
rorl
dec
fs
push
cmp
int3
imul
stos
push
stc
jbe
out
jge
in
jb
out
add
xor
mov
mov
js
jo
push
mov
mov
leave
nop
jbe
jmp
inc
in
sbb
adc
fstp
adc
and
int3
xchg
lcall
inc
adc
enter
jg
mov
popf
enter
fsubs
push
dec
cmpsl
xchg
out
mov
cmp
xor
sahf
iret
cs
ss
sbb
cmp
aam
pushf
stos
je
pop
dec
dec
dec
mov
rolb
gs
push
mov
push
fisubl
cmpsl
jbe
cmp
hlt
pop
roll
cmc
je
insl
gs
sahf
dec
cli
jo
int
and
or
jmp
cmp
inc
push
push
movsb
stos
add
dec
scas
stos
push
pusha
xor
es
inc
fsubs
icebp
std
leave
push
sbb
fwait
shll
ds
paddd
pop
mov
insb
loope
leave
add
mov
mov
out
mov
aaa
mov
pop
jecxz
jecxz
mov
cwtl
cli
cmp
push
jnp
inc
sub
mov
add
jmp
and
test
rorl
cld
ds
jno
shufps
fcompl
jns
inc
je
fimuls
out
in
add
movsb
rol
cld
sbb
fsts
push
mov
xchg
test
push
jl
std
ret
movsl
rcr
and
sbb
push
jo
enter
adc
xor
inc
xor
xchg
mov
add
lods
les
dec
pop
jg
and
jle
in
lds
out
jne
sub
icebp
std
inc
mov
int3
cmpsb
arpl
dec
ficompl
das
cli
fdivs
jl
xor
aaa
cmpl
out
aas
loopne
mov
xor
pop
stc
or
cwtl
mov
and
pop
jmp
xchg
xor
ljmp
jmp
out
mov
cmp
js
in
xor
in
jns
adcl
jl
outsb
cmp
pusha
pop
mov
jns
adc
inc
and
dec
mov
jo
mov
das
and
in
ja
ljmp
fldenv
mov
adc
fadds
stos
xor
sahf
mov
repz
mov
test
cmp
out
test
jae
and
xor
jmp
jb
sub
inc
mov
push
xor
adc
rcrl
les
and
xor
rcrl
pop
sbb
pop
popa
mov
adc
int3
leave
inc
movsb
pop
int
adc
aas
nop
ds
pop
in
je
push
adc
adc
mov
in
jo
sub
cli
xor
sbb
or
xor
outsl
mov
jp,pn
pop
jmp
push
ds
add
sbb
fldcw
push
cmp
adc
and
out
gs
and
cmp
xlat
loope
push
or
pusha
fbstp
ret
and
jg
xor
fsubrs
xchg
or
dec
insb
sti
mov
sub
ficoml
xchg
inc
inc
push
jns
or
stos
gs
sahf
subl
popa
xchg
shll
rcrl
xor
lds
or
ss
aaa
lahf
ja
jmp
test
sbb
jmp
push
or
sub
mov
mov
pop
jg
pushf
mov
in
jno
dec
sar
fnsave
push
xchg
xchg
mov
inc
cmpsb
mov
test
mov
shl
loopne
or
outsl
popf
clc
or
or
lock
add
out
xchg
test
flds
or
inc
push
lock
xorb
jg
jbe
decb
out
xor
stc
fistpll
mov
arpl
add
hlt
jo
mov
sarb
mov
lret
xor
mov
inc
scas
add
iret
jno
lods
aam
xchg
lods
pop
imul
and
ret
adc
js
cmp
push
inc
xor
aaa
into
fsubp
sti
dec
or
nop
add
pusha
fadds
dec
dec
lds
cmpsl
js
popa
jbe
add
add
cmp
or
loope
or
loope
jnp
mov
js
stos
js
xor
pop
push
test
sbb
push
test
das
jge
xor
jmp
sbb
dec
pop
xchg
not
out
xchg
std
inc
in
lret
mov
shll
or
stos
jecxz
cmp
aad
lods
decl
sysret
jns
fsubl
mov
sub
inc
adc
or
jl
ljmp
jp
lods
lock
mov
sbb
dec
and
xchg
hlt
jae
mov
mov
sub
xor
pop
out
cli
addb
xor
add
lds
xchg
je
jnp
cwtl
fstl
jbe
iret
aam
popa
sbb
xor
movq
jecxz
test
je
cmp
jo
add
jge
jbe,pt
sahf
setne
xchg
les
mov
stc
add
rcll
add
icebp
mov
movsb
imul
push
cli
insl
push
scas
mov
cmp
mov
ret
adc
xor
mov
xor
fldl
int3
or
imul
sahf
adc
pop
es
xor
cmp
and
les
pop
sub
es
ds
jo
sub
call
mov
mov
dec
add
sub
xchg
push
inc
push
jo
pop
and
inc
inc
insb
or
sbb
and
mov
cltd
pop
cmpsb
in
mov
sahf
test
sub
cld
xchg
inc
iret
in
inc
sub
fwait
jne
pop
jl
movl
fmuls
mov
jns
push
insb
es
xchg
mov
mov
shll
and
out
addr16
ljmp
sbb
push
fisubl
out
rorb
jp
push
push
jmp
jl
or
inc
jne
cmp
fistpl
adc
lahf
sbb
adc
cmp
xchg
mov
jne
and
or
sub
testb
adc
pop
lcall
popa
jecxz
in
or
lock
pop
lahf
jo
in
in
xchg
dec
arpl
mov
jne
fs
pop
mov
lods
or
cmpsl
dec
cwtl
and
xor
mov
or
andl
mov
or
cmp
arpl
xlat
xchg
es
jne
sbb
mov
or
es
sbb
gs
insl
stos
adc
jne
cwtl
xchg
add
or
mov
sub
test
push
test
std
cmp
sahf
aad
divps
mov
int3
in
jbe
pop
dec
jmp
add
cmp
cmp
jbe
mov
jp
xor
sub
jmp
pop
setnp
xchg
add
movsb
dec
lds
ljmp
push
lock
lret
mov
adc
cmp
push
xlat
jl
dec
jmp
push
add
dec
movsl
lock
cld
xchg
xor
or
pusha
adc
sub
lds
fstpl
das
sbb
lds
shl
movsb
add
pop
call
lods
push
test
dec
adc
sti
int
cmp
sub
mov
das
aas
pop
sub
mov
xor
fs
xor
push
stc
cmp
scas
icebp
pop
push
in
mov
mov
xchg
and
pop
pushf
xor
jecxz
cmpsl
into
mov
rcll
jbe
js
mov
inc
aam
fnstsw
cmpsb
popf
jno
sti
lea
dec
mov
mov
shrb
cmp
addr16
mov
hlt
insb
add
mov
pop
mov
cli
push
dec
xor
and
mov
popa
mov
out
push
mov
stos
add
cmp
sub
cld
imull
arpl
lret
aad
gs
xchg
mov
nop
icebp
subl
fldt
sbb
cmc
es
movsl
das
cltd
sahf
out
xchg
les
dec
jmp
pop
mov
pop
sbb
push
jle
push
xchg
ror
mov
cmp
inc
test
mov
stc
dec
jns
aaa
xchg
and
mov
cmp
fwait
cmpsb
jmp
orb
and
out
sbb
jae
fcomps
or
test
daa
pushf
lahf
jecxz
push
cli
mov
xchg
mov
push
or
jo
jmp
push
fdivl
sbb
inc
xchg
xchg
movsb
lahf
or
mul
jae
adc
cmp
lea
fcmovb
push
loope
mov
jge
pushf
cmp
inc
repnz
push
add
cmp
hlt
xlat
jmp
mov
add
add
xchg
js
iret
add
scas
int
or
adcb
das
call
mov
mov
sbb
loopne
out
dec
xor
lea
pop
jae
and
filds
and
jl
push
lods
push
add
sub
ja
lahf
adc
es
fwait
sbb
lret
or
push
int3
neg
sbb
enter
mov
aas
cld
insb
xchg
das
lock
mov
flds
rcr
data16
shrl
iret
mov
or
ljmp
inc
mov
sub
pushf
arpl
cmp
sbb
js
out
imul
test
pop
lods
data16
push
adc
pop
cmp
add
fldl
sbb
pop
sbbb
inc
test
xchg
andps
adc
jge
xchg
push
cmp
stos
xlat
inc
cmp
adc
sbb
scas
outsl
or
test
fcmovbe
xor
inc
ds
adc
mov
push
lods
xorb
cmpb
xchg
xor
mov
jb
dec
inc
rcll
dec
adc
mov
pop
jg
inc
ljmp
pop
arpl
dec
test
inc
inc
or
call
push
dec
and
push
xchg
xchg
push
sbb
outsl
or
push
test
pop
sub
push
imul
jl
mov
dec
jecxz
xor
jp
cmp
ljmp
imul
lea
fwait
aaa
test
adc
dec
mov
repz
xor
adc
push
lret
imul
add
push
cmp
jl
cltd
inc
icebp
sbb
jae
pop
mov
aaa
sti
or
inc
pop
pop
jo
and
pop
in
out
mov
dec
or
out
hlt
xchg
jmp
push
adc
xchg
imul
jg
mov
out
stc
popf
pop
sub
cmp
aas
dec
push
pop
cmp
push
xor
insl
sahf
jns
movsb
loope
sbb
adc
sub
ret
pop
arpl
add
xchg
mov
dec
jno
sbb
or
pop
adc
mov
inc
pop
sub
push
jl
lea
or
fcompl
mov
mov
xchg
imul
pop
fwait
mov
cmp
inc
cmp
mov
loopne
add
mov
lahf
mov
jmp
pushf
mov
repnz
popa
and
mov
xchg
cmpsb
push
lock
cmp
add
adc
stos
sbbb
movsl
pushf
ret
add
enter
test
lods
jmp
cs
dec
mov
cmp
rcr
movsb
dec
dec
repnz
and
xor
push
and
nop
xchg
xchg
stc
cmc
sub
outsb
pop
inc
adcl
add
cli
inc
push
rorb
sub
mov
dec
jb
xor
sbb
mov
lret
pushf
jnp
sub
mov
jno
aaa
je
dec
dec
adcl
push
dec
mov
stc
sbb
rorb
push
dec
pusha
inc
outsb
add
out
dec
pop
or
comiss
or
pop
rcrl
aas
mov
cli
sti
xor
jb
jne
sbb
rorl
add
negl
les
mov
call
inc
push
fcompl
pop
sar
out
mov
fldenv
add
dec
sbb
inc
mov
jae
push
jge
cmp
pop
adc
pop
push
cmpsl
into
ret
xchg
mov
fstp
and
sahf
insb
mov
call
nop
push
sub
jg,pt
mov
xor
push
int
sbb
aad
pusha
pop
pop
addr16
mov
lret
push
sahf
mov
pop
mov
ljmp
pop
push
fsubs
pop
inc
push
cmp
ret
push
test
test
push
jle
loop
adc
xor
add
les
inc
push
arpl
sub
inc
sahf
cmpsl
and
dec
pushf
sbb
cmp
mov
daa
daa
loop
dec
inc
or
mov
push
jle
movsb
mov
test
dec
mov
xor
xor
mov
ds
jg
pop
jns
insl
stos
pop
out
jp
in
aaa
push
cmpsb
and
imul
sub
jmp
and
imulb
push
scas
loopne
jecxz
and
pop
lods
add
lret
jecxz
xchg
shl
mov
dec
sub
rcll
and
cmp
call
in
jmp
jmp
stos
dec
jle
jg
adcl
mov
inc
test
aaa
pop
nop
ss
lcall
add
pop
sub
int3
sbb
out
jne
sahf
ficompl
cmp
cmc
xor
inc
mov
jb
mov
ret
push
push
sub
std
imul
insb
add
inc
cwtl
add
push
cmp
out
out
jnp
cli
scas
test
sahf
mov
or
push
std
adc
cmp
dec
jmp
add
or
xchg
out
fisubs
dec
loop
mov
pop
xchg
cmp
add
sahf
mov
stc
daa
mov
fs
rsm
loop
pop
push
pop
enter
bound
inc
xchg
into
mov
xchg
out
mov
mov
push
popf
outsb
test
pusha
cmpsl
cmp
push
inc
and
xchg
adc
icebp
mov
sub
lods
fwait
xchg
xchg
out
loopne
mov
daa
mov
icebp
pop
mov
das
cmp
cmp
or
pusha
sbb
inc
xor
mov
mov
pop
pop
in
sub
cmp
lcall
xchg
imul
jns
icebp
sti
jmp
shlb
add
sub
test
xorb
pop
cmp
inc
or
push
pop
cmp
jmp
jbe
cmp
jne
sbbb
dec
in
sub
or
xchg
pop
pop
xor
cmp
outsb
pop
and
add
dec
mov
shl
dec
ja
dec
incl
adc
inc
std
adc
dec
rol
movsb
xchg
lds
cmpsl
mov
push
mov
sbb
xchg
pushf
sbb
lret
popf
inc
mov
sub
add
aam
into
stos
arpl
xchg
lret
xchg
xchg
pop
mov
movl
test
in
and
push
repz
and
sbbl
push
sbb
pop
and
out
cmp
das
xor
or
loopne
test
inc
jns
mov
repnz
add
or
mov
or
mov
sbb
jle
ret
mov
adc
mov
sbb
loope
adc
pop
into
std
push
adc
loope
iret
loopne
xor
xor
imul
arpl
dec
inc
arpl
movq
insb
repz
mov
push
jns
xchg
int
mov
mov
xchg
xor
adc
push
pop
pusha
out
popa
dec
or
fxch
call
mov
inc
jb
sti
scas
push
xchg
pop
gs
test
ja
je
sahf
add
mov
xor
pop
mov
sahf
mov
loop
stos
cltd
loopne
jb
shlb
out
test
call
loope
add
xbegin
incb
mov
mov
test
jns
mov
mov
and
mov
lds
call
xor
insl
movsb
fidivrl
int
ss
cmpsl
fidivrl
lahf
das
jle
loop
jp
mov
cmc
inc
inc
nop
scas
enter
pop
icebp
mov
add
xchg
jo
sarl
jecxz
daa
and
xor
push
je
insl
mov
mov
xchg
or
mov
jbe
out
movsb
push
xor
push
das
mov
xchg
mov
mov
aad
pop
xor
fistps
xor
push
scas
xchg
or
mov
iret
mov
movsb
inc
mov
scas
sbb
nop
pop
pop
or
mov
xchg
hlt
fs
jl
rorl
add
cmp
or
dec
cs
lock
imul
fwait
cltd
cmp
pop
mov
cli
sub
dec
adc
add
jnp
in
mov
stos
js
push
lcall
inc
sbb
iret
xor
dec
cs
sbb
test
sbb
jmp
pop
ds
inc
jmp
stos
scas
pop
movsl
mov
cli
cli
hlt
adc
jo
cmp
adc
loop
sub
mov
lods
push
pop
aam
inc
xor
dec
adcl
mov
js,pn
cmc
jb
sahf
or
loope
mov
in
out
lret
dec
mov
mov
adc
lret
xchg
or
test
xchg
jnp
cld
inc
in
jmp
sbb
pop
mov
call
ret
add
pop
aaa
dec
mov
cmp
add
jle
pop
lods
repz
imul
xor
outsb
sbb
cmp
push
jmp
pop
pop
shr
pop
sbb
sub
dec
pop
in
push
sbb
aam
mov
adc
stos
xchg
xchg
popa
jo
fimull
into
pop
mov
mov
test
push
and
dec
fisubrl
ret
cmp
cmp
xlat
push
mov
test
dec
mov
mov
cwtl
xor
xchg
outsl
repnz
jo
popf
pop
mov
dec
xchg
push
add
jae
into
negb
xor
sub
jmp
add
sub
dec
jmp
or
iret
imul
push
mov
fcomps
test
shr
stc
or
pop
adc
sub
xchg
cmp
cmp
inc
mov
ficoms
mov
pop
push
push
sti
lret
je
jp
nop
arpl
arpl
cmp
fs
mov
stos
dec
and
cmpl
sbb
fcoms
pop
sbb
and
stos
push
or
mov
pop
lahf
push
sub
jb
addl
outsl
mov
inc
sbb
add
pop
adc
in
and
jb
sarb
subb
and
inc
xor
sub
inc
test
pushf
sub
xor
movsl
testl
aas
pop
lock
sbb
sub
mov
jl
xchg
sub
inc
ret
icebp
pop
jne
pop
cs
gs
pop
aad
loop
lret
cmp
subb
mov
push
xor
jp
dec
enter
mov
pop
or
push
aad
jecxz
test
test
js
pop
sti
int
or
and
notl
jmp
lock
daa
cs
testl
dec
insb
imul
test
movl
cmp
mov
imul
xor
push
inc
sbb
leave
mov
pop
pop
push
stos
call
adc
outsb
inc
sub
xor
or
movsb
push
add
leave
sti
ljmp
ss
pushf
lcall
add
dec
cmpsl
into
in
ss
push
rcrb
jne
call
sar
lcall
xchg
mov
mov
test
arpl
scas
orl
xchg
jo
jp
adc
rcrb
dec
jg,pt
ret
cs
or
dec
out
imul
adc
xchg
hlt
and
xchg
sub
xorb
cmp
movsl
mov
loop
adc
loopne
lock
repz
adc
adc
pop
add
sub
fcomps
and
pop
adc
ja
out
pop
add
int
jecxz
popa
ss
fs
cmp
fwait
movb
inc
int
mov
and
sbb
add
inc
pusha
test
cmp
sbb
adc
jmp
insb
cli
call
popf
ja
pop
into
popa
xor
ret
decl
cld
fsubs
test
or
enter
scas
and
in
out
mov
shlb
mov
lds
xchg
jp
inc
fists
cmp
loopne
mov
sbbl
repnz
or
popf
sub
repz
mov
inc
or
pop
mov
popa
mov
fucomp
jle
mov
jp
add
rol
push
pop
ficomps
dec
inc
call
adc
mov
xchg
pop
dec
mov
mov
lea
cmc
imul
aaa
push
xlat
dec
sub
jae
adc
xor
leave
lea
lret
jmp
push
incb
jmp
xor
rcrb
sbb
dec
mov
pusha
packsswb
pusha
data16
or
or
fwait
jno
fwait
mov
dec
mov
fwait
outsb
dec
fsubl
stos
stc
lods
pop
jb
jae
jns
cmp
clc
pop
daa
repnz
movsb
adc
andl
add
in
jecxz
out
je
stos
hlt
add
cli
out
push
pop
mov
mov
mov
loope
cmc
xchg
pop
push
int3
bound
add
cmpsb
push
sbb
or
lock
inc
pop
in
sbb
ror
xor
in
mov
push
mov
push
clc
mov
and
cmc
mov
lret
outsb
aas
pop
clc
and
hlt
loope
arpl
cs
mov
icebp
lods
xorb
sub
or
xchg
adc
movsb
lret
dec
jnp
gs
xor
and
mov
insl
inc
pop
fidivrs
pop
int
adc
pop
xchg
test
roll
mov
xor
push
cwtl
in
push
ret
scas
mov
jmp
es
sbb
xchg
sbb
dec
fmul
xchg
and
sbbb
inc
xor
sub
adc
loopne
mov
shrb
mov
ret
pusha
cwtl
push
jnp
out
pop
cmp
xor
sbb
add
into
jecxz
inc
cmp
test
inc
lret
sbb
loopne
pop
add
jg
cltd
sub
movsl
jl
cli
xchg
leave
inc
jl
mov
testb
scas
cmp
outsb
mov
rcrb
ds
jecxz
movsb
ret
mov
sub
les
add
mov
cmp
and
leave
adc
in
jae
popa
in
add
ficompl
je
mov
ja
dec
mov
dec
xor
stc
in
imul
push
call
and
adc
or
sbbb
hlt
or
xor
test
in
sarb
cli
mov
cmp
movhlps
mov
and
shl
add
jg
cltd
jmp
push
in
push
test
imul
pop
cmp
mov
push
push
mov
jns
inc
test
add
ljmp
xchg
sub
ja
adc
xor
ja
gs
sub
sbb
call
push
scas
adc
mov
clc
push
cmpsl
arpl
pushf
loopne
das
xchg
adc
dec
push
test
cmpsb
std
mov
clc
insl
fwait
jns
sub
fnstcw
sbb
fisubl
or
insl
les
lret
xchg
jg
insb
lcall
sbb
pop
mov
jae
cmpsl
fwait
push
cld
sbb
popf
mov
rep
push
xor
xor
addb
call
mov
test
jle
cli
insb
sub
sub
loop
insl
jbe
push
push
cmp
std
pushf
inc
dec
or
inc
xchg
sub
mov
or
paddq
add
and
push
jmp
sub
cmp
stos
mov
cwtl
shlb
cltd
pop
subb
and
pop
xchg
sub
sarb
into
nop
mov
dec
or
test
movsb
mov
int3
dec
sub
pop
sub
popa
pusha
push
dec
sti
cmp
mov
inc
pop
mov
mull
sub
mov
or
jae
cmp
inc
ffreep
jge
sub
pop
je
aam
xchg
cmp
pop
pusha
mov
cwtl
add
popa
mov
or
xchg
mov
add
test
sub
jns
cmc
out
mov
adc
pop
inc
loop
xchg
mov
or
mov
pop
lcall
das
lea
push
es
sub
sbb
lcall
std
and
push
xchg
les
jo
jge
fs
sub
or
mov
dec
jb
jmp
mov
cmp
test
xorl
sti
in
imul
xor
and
in
mov
fiadds
clc
in
stc
insb
mov
adc
mov
out
popa
sar
cmpsb
leave
xchg
dec
add
cwtl
push
push
sub
adc
push
push
icebp
adc
xchg
int3
jb
push
jb
icebp
xlat
adc
sbb
sub
mov
adc
ja
std
hlt
mov
jecxz
jl
test
push
pop
in
fildl
xor
mov
push
mov
sub
mov
adc
dec
scas
mov
mov
push
stos
stc
inc
xchg
addr16
out
cmc
sbb
loop
out
mov
das
push
ror
js
adc
jge
mov
stos
adc
lods
movsb
leave
jp
arpl
loope
sub
fwait
jo
stos
std
mov
divb
ss
movsl
cs
mov
or
outsb
out
push
jbe
scas
repz
outsb
lock
ret
mov
dec
std
xchg
mov
mov
movsl
enter
push
xchg
lods
pop
subl
xor
icebp
arpl
push
add
pop
add
das
mov
push
fs
add
push
mov
insb
xchg
mov
movsl
xchg
pop
cmp
clc
imul
or
push
jns
xchg
ss
cmp
orl
pop
icebp
out
ja
je
mov
pop
ffree
cli
adc
repz
ss
scas
int
push
pop
push
insl
addl
nop
inc
pop
xlat
mov
mov
inc
mov
cld
sub
xchg
cmp
pop
shrb
inc
and
cld
vpsubsb
add
imul
ret
add
cmpsl
mov
shll
repz
mov
mov
int3
cwtl
pushf
repz
inc
jno
jne
cmp
pop
mov
jmp
and
scas
mov
leave
xor
xchg
jg
mov
and
fistps
dec
std
dec
pop
loope
inc
in
jo
stos
pop
pop
jo
mov
xor
dec
xor
pandn
dec
pushf
inc
pop
std
cs
xchg
inc
insb
cmp
mov
iret
cwtl
lret
mov
adc
aad
add
adc
in
mov
fcoms
add
fidivs
fistpl
xor
xchg
cmc
fdiv
jge
pop
aaa
pop
sub
mov
add
cmpb
adcb
push
js
push
sti
je
in
inc
shlb
int
xor
sub
push
popl
adc
out
loopne
mov
sub
lock
lods
test
lret
fimuls
je
test
xchg
mov
addb
push
in
aas
cmpsb
test
xchg
sbb
inc
hlt
cmpsb
data16
pop
sbb
scas
sub
mov
push
jmp
bound
sbb
and
imul
jg
subb
and
shrb
dec
mov
inc
call
aam
jnp
addb
clc
ret
mov
cltd
inc
xor
or
retw
lea
push
cmc
iret
mov
fwait
das
mov
mov
jp
inc
jl
pop
leave
mov
test
sarl
int
ud0
negb
das
cld
stos
push
sub
das
loope
add
xorl
cmp
mov
int
add
imul
xor
push
ja
jmp
xchg
fbstp
inc
out
stos
hlt
popf
sbb
or
out
sbb
pop
cltd
adc
jmp
lea
lock
or
jecxz
cmp
aad
inc
sub
jne
filds
adc
inc
adc
push
icebp
aam
repz
mov
cs
xchg
cmpsb
imul
cs
leave
cltd
inc
scas
in
dec
adc
cmp
pop
inc
mov
add
fmull
in
pushf
data16
mov
xchg
into
xchg
mov
ret
int3
addb
dec
rorl
or
xorb
jae
cmp
test
add
daa
xor
dec
cmp
and
xorl
sti
and
mov
lds
ljmp
xchg
xchg
inc
sarb
xor
stc
mov
push
loopne
enter
xlat
sub
ret
add
stos
xchg
movsl
mov
xor
or
or
mov
lds
rcrl
sbb
mov
test
mov
cli
je
jecxz
mov
xchg
mov
rcl
cmp
cmc
popa
inc
ret
dec
lods
or
in
ret
outsb
xchg
mov
movsb
xlat
iret
xchg
pop
movsl
scas
aad
test
imul
sbb
arpl
mov
lods
add
gs
sub
inc
jae
pop
jo
jne
mov
inc
ja
inc
sbb
mov
adc
ret
dec
mov
stc
and
dec
mov
aam
nop
push
mov
out
push
and
xor
inc
jno
out
dec
ret
stc
inc
dec
popa
loope
sub
xchg
xor
xchg
and
and
in
sti
sbb
loope
sbb
addr16
ret
or
stc
test
mov
lods
lcall
xchg
idivb
scas
xchg
je
xor
inc
or
push
imul
pushf
mov
cmp
fisubs
aam
outsb
out
inc
into
sarl
test
cwtl
dec
fldt
int3
sub
jecxz
test
loope
scas
fnstcw
stos
fwait
adc
lock
xchg
lcall
xchg
adc
mov
shlb
xor
add
sahf
adc
repz
sarl
ds
push
roll
bound
xor
push
cmp
inc
cmp
notb
pop
cmp
fchs
mov
push
push
ja
repnz
cmp
jge
push
imul
sbb
cmp
sbb
rclb
cmp
sub
movsl
mov
or
stos
xchg
rorl
pushf
pop
aaa
arpl
pushf
stos
mov
stos
popa
cmc
std
fiaddl
cmp
and
jg
in
lret
pop
lret
scas
fs
mov
inc
sbb
pop
nop
mov
add
fucomi
pop
mov
sub
cli
adcl
xchg
lock
pop
or
xchg
popf
xchg
js
popa
sbb
sarb
jnp
inc
sub
fwait
inc
aad
loopne
jnp
mov
add
adc
outsb
lea
addr16
ljmp
jge
loopne
and
push
loope
mov
add
popa
sub
filds
ret
cmp
cs
xor
fmull
dec
mov
aaa
popf
jmp
pop
jmp
mov
pop
cs
mov
popa
shrl
and
jmp
lods
dec
pop
jae
push
jl
fidivrl
jbe
cmc
and
push
or
or
and
mov
fistl
and
dec
push
nop
je,pt
push
les
fwait
add
iret
xchg
xchg
insb
push
test
mov
xor
insl
lods
lds
ds
push
inc
xchg
adc
jb
out
shll
scas
cmp
sub
insb
lret
into
sbb
mov
pop
popf
pop
dec
fimull
and
mov
call
push
fsub
or
cld
fistps
jmp
call
xor
lcall
addb
jne
push
insb
xor
jg
inc
cmp
pop
fs
mov
out
xchg
movsl
and
xor
addr16
stc
rcrl
push
push
xchg
mov
stos
cmp
insl
push
mov
ss
jl
imul
dec
inc
and
call
insb
cmp
push
xor
ficompl
jl
sbb
sbb
xor
inc
mov
pop
cmpsb
call
jb
mul
or
int3
mov
sub
xchg
or
std
rcrb
push
idivl
stc
orb
out
jo
je
add
push
push
sub
jne
adc
je
std
imul
push
clc
xor
les
cli
adc
fwait
adc
insl
xchg
sbb
cmp
jb
hlt
les
cltd
inc
fdivrs
fsubp
jge
push
dec
cmp
jae
cld
fsubrs
pusha
cmp
daa
mov
xchg
ljmp
mov
dec
dec
cwtl
aad
mov
into
out
int3
mov
shl
loopne
xchg
cs
insb
daa
mov
repnz
push
jns
daa
add
or
addl
jns
jo
pusha
mov
aaa
sbb
jae
add
fisubl
pop
pop
sub
pushf
shll
mov
cmp
inc
sti
sub
inc
add
sbb
test
dec
push
mov
or
shr
lods
and
and
enter
stos
inc
sbb
adc
or
mov
clc
xor
out
or
mov
add
pop
mov
inc
push
jmp
mov
sub
lcall
in
test
in
jns
xor
loop
fnsave
sbb
stc
outsb
call
scas
movsb
ret
in
mov
lds
push
stc
inc
scas
setb
imul
push
add
cmp
sbb
popa
rclb
mov
negl
daa
mov
xor
out
ljmp
xor
mov
divb
call
popf
add
adc
ficompl
imul
add
mov
adc
jno
inc
out
aas
mov
xchg
out
xchg
and
rcll
cwtl
mov
dec
fimuls
mov
pop
pop
lods
cli
test
sbb
pop
outsb
aam
jle
or
inc
pusha
inc
fsubp
inc
mov
push
mov
mov
addr16
aad
je
cmpsl
dec
cmp
fs
cmp
push
mov
lods
cmpsl
pop
xlat
icebp
mov
data16
pop
mov
mov
lcall
aam
push
push
sti
pop
push
imul
cs
ja
imul
fcom
or
addr16
daa
adc
bound
pop
fdivrl
ret
push
mov
daa
add
fldl
aad
aad
xchg
lods
sbb
push
inc
out
add
sub
xor
and
mov
xchg
andb
mov
lcall
or
jg
add
cmp
mov
jmp
lods
out
cli
lret
xor
jge
adc
mov
in
je
std
pop
mov
bound
pop
fdivrl
push
mov
lcall
sbb
insb
lock
push
mov
movsb
mov
pop
mov
mov
xor
push
mov
lret
xor
push
mov
jne
or
cmp
cmp
add
pop
inc
out
aaa
iret
clc
mov
pop
imul
gs
lahf
dec
call
add
jg
inc
or
stos
mov
in
pop
sarl
popf
jmp
jnp
xor
push
push
fsubr
ret
dec
sub
stc
popf
jecxz
fdivs
mov
mov
xorl
cmpsl
dec
inc
inc
pop
fsts
xor
inc
push
ret
insb
mov
aam
sbb
xor
mov
cmp
fsubrs
notb
in
inc
fldt
pop
cmp
xchg
jg
hlt
sahf
push
scas
jb
push
cltd
je
mov
xchg
fwait
inc
or
adc
xchg
adc
das
mov
mov
xor
xor
shlb
ss
cltd
inc
outsl
adc
mov
lcall
push
mov
loop
add
cmp
lret
ds
fsubs
fcomip
pop
or
xchg
test
mov
rcll
adc
repnz
inc
inc
fmulp
in
loop
fs
decb
push
add
idivb
cltd
xor
lahf
daa
xchg
lret
sbb
push
fcmove
cmpl
lret
daa
inc
xlat
mov
lea
or
fbld
mov
out
cmc
shlb
xchg
es
jle
imul
clc
stc
dec
jmp
sub
nop
adc
jl
cmpsl
xchg
movsl
popf
int3
loope
xchg
daa
push
into
cmpsb
shll
push
jnp
movb
pusha
stos
xchg
pop
loope
loop
sub
inc
cld
and
lahf
test
mov
and
push
mov
flds
enter
pop
ss
popa
jecxz
mov
xchg
pusha
dec
ret
lret
or
movsb
xor
lods
ficoml
mov
mov
jl
aas
jle
mov
movsl
sbbl
std
or
aad
push
push
jg
in
fimull
mov
sbb
or
add
and
pop
movsb
lds
daa
mov
adc
cmpsb
aaa
jle
out
jmp
bnd
popa
scas
or
mov
test
xor
inc
xorl
js
mov
lods
aas
ljmp
aam
jp
fsts
lcall
out
mov
xor
jbe
ss
push
add
inc
dec
mov
jge
sub
les
or
aad
sub
cs
nop
pusha
rcr
cmp
rcrb
mov
rolb
test
mov
pop
sahf
fwait
mov
sbb
mov
aam
stos
xchg
mov
cli
mov
and
mov
lret
inc
adc
inc
dec
aam
clc
fs
popa
ret
add
mov
xchg
popa
cmp
outsb
push
xchg
or
loope
xor
stos
cld
adc
mov
adc
adcl
xor
xchg
das
aad
or
mov
jbe
inc
in
popf
lret
shl
int3
aam
mov
push
call
gs
insb
fisubl
or
mov
loope
or
inc
pop
outsl
pushf
dec
fwait
outsb
mov
mov
mov
push
dec
cli
lea
xchg
lods
xchg
inc
int3
pop
pop
mov
sbb
adc
jp
jge
xchg
adc
pusha
roll
mulb
fiadds
mov
push
jbe
iret
sbb
mov
nop
push
sbb
and
lahf
sbbl
shll
mov
divl
pusha
mov
clc
push
cld
pop
gs
and
dec
test
push
xchg
xchg
pop
inc
out
aam
out
inc
sahf
pop
ss
mov
bswap
pusha
pop
inc
andl
lcall
jl
arpl
fisttps
rcr
sahf
ret
pop
mov
xor
push
xor
leave
inc
in
add
xchg
jle
dec
in
jno
aas
or
or
int3
dec
test
and
sbb
push
outsb
mov
addr16
jmp
fstps
je
fwait
pop
push
and
jge
in
or
sub
mov
nop
pop
cltd
out
mov
cmp
in
xchg
ljmp
push
pop
adc
or
test
pop
cmp
cmp
scas
stos
sub
in
cltd
or
or
and
jns
movl
and
imulb
dec
or
mov
inc
mov
imul
jp
ret
push
sbb
mov
loop
cmp
sub
sbb
push
mov
xor
in
mov
fwait
sub
loope
insl
jg,pn
dec
testl
xchg
xchg
xchg
das
mov
xchg
mov
jp
out
or
and
lcall
fwait
adc
push
movsl
repz
push
lahf
pop
pushl
lret
push
xchg
jg
loope
loop
xchg
test
jbe
xor
test
cmp
push
aad
fstpt
mov
xor
mov
fldcw
cmc
aad
push
mov
pop
test
xor
daa
jo
call
sub
push
xorl
xchg
add
pop
jmp
test
lcall
xchg
sbb
mov
cmp
mov
and
insb
cmpsb
enter
pop
ret
xchg
sbb
or
cmpsb
mull
xchg
call
xchg
inc
pop
sbb
mov
cld
out
jmp
mov
jl
or
xchg
gs
mov
xor
and
and
test
cmp
gs
cmp
cmp
mov
dec
jg
sub
pop
dec
je
lock
jnp
movsb
jae
bound
push
jb
fwait
mov
push
dec
mov
nopl
jns
pop
cmp
mov
in
mov
or
imull
test
leave
jg
push
ss
loope
ret
push
loope
fwait
xor
gs
inc
inc
fldl
lret
mov
ret
xchg
xchg
or
call
push
mov
inc
ss
orb
into
jo
dec
cli
adc
shl
fs
jl
sub
xchg
xchg
into
or
pusha
and
xor
pop
into
pushf
mov
test
inc
mov
je
ret
sub
cmpb
addb
hlt
pop
xchg
cmp
leave
add
fidivrl
mov
gs
lds
cmp
sbb
icebp
cmp
data16
mov
dec
mov
mov
push
std
xchg
cmp
xchg
mov
mov
sahf
push
cmc
addr16
and
mov
jge
pushf
notb
loopne
addl
test
push
xchg
xor
mov
test
sub
ljmp
cmp
push
addr16
testl
sbb
xor
ds
andb
cld
cmpsb
rol
and
mov
cmp
pop
ss
aaa
jg
mov
mov
fcompl
inc
jns
and
icebp
pop
inc
sbb
mov
dec
test
xchg
push
outsl
and
cs
frstor
mov
imul
pop
mov
push
movsb
xchg
jmp
js
cmp
and
scas
jae
lret
cmp
rcrl
cli
sbb
mov
adc
mov
xor
dec
sbb
sbb
arpl
adc
cld
cmpl
int3
dec
sbb
xchg
jae
test
push
aad
sbb
push
jbe
lods
xor
loopne
scas
sub
push
push
lcall
sub
pop
push
in
jl
push
adc
and
xlat
mov
neg
ljmp
rcl
in
cmp
cmp
mov
dec
sbb
lods
shlb
cmpsb
lds
in
ds
push
in
jne
jnp
and
mov
xchg
dec
dec
add
shll
xor
stos
adc
or
scas
sbb
inc
adc
cli
jp
jns
xor
adc
add
scas
andb
sbb
fldl
fimull
xchg
cmpsl
pop
xchg
push
repnz
addr16
dec
dec
xor
mov
mov
dec
data16
mov
outsb
loope
and
xchg
cs
lret
jnp
rcl
pop
mov
stos
dec
xchg
ljmp
xor
mov
jp
xorl
cs
mov
mov
jge
mov
fwait
jmp
jo
sub
in
lahf
aad
lods
inc
inc
loopne
daa
inc
jg
pop
ds
lcall
call
in
inc
pop
flds
mov
loope
dec
call
mov
and
mov
ja
out
mov
push
fdivs
test
dec
jge
and
jmp
roll
out
gs
jbe
mov
xlat
fcmove
cmc
ret
mov
push
int3
sub
ljmp
jle
adc
lcall
adc
pop
pop
mov
icebp
jo
adc
and
mov
sbb
test
mov
xor
dec
cmp
sbb
xchg
aam
mov
mov
dec
rcll
into
jmp
sbb
push
cmpsl
xchg
lds
cwtl
je
adc
lret
sbb
mov
add
push
aas
ret
pushf
scas
mov
test
imul
jl
inc
rol
cwtl
repz
movsb
mov
mov
lret
jbe
outsb
xor
cmp
sbb
in
movsl
push
pop
lods
in
test
and
leave
mov
add
mov
js
push
jns
leave
inc
or
popa
xchg
adc
xchg
mov
cs
testb
push
out
gs
jp
mov
mov
add
mov
or
bound
dec
lock
dec
pop
mov
and
shl
adc
and
je
mov
dec
add
imul
daa
xchg
jno
and
pop
mov
lcall
xor
sti
iret
test
test
sub
cld
inc
jp
jns
dec
adc
test
insl
sbb
cmp
ficomps
xor
pop
sub
inc
clc
fisubrl
mov
jne
shr
sti
stos
mov
fistps
push
arpl
pop
insl
or
and
pop
lret
imul
sbb
sahf
sub
push
jae
cmp
in
insb
adc
out
add
add
shll
test
pop
xchg
mov
dec
mov
mov
sub
orb
lea
mov
push
mov
push
pop
add
cmpsb
or
aaa
pusha
in
fadd
rolb
jge
cmp
push
push
mov
jp
inc
fs
loop
outsb
adc
pop
or
aas
sbb
adc
jnp
lret
dec
movsb
roll
pushf
lods
sbbl
nop
test
xchg
out
or
popf
inc
xor
adc
leave
cld
test
jo
cmp
pop
or
mov
dec
jne
dec
sbb
loope
loope
call
and
mov
cs
inc
sub
ds
out
mov
fisubl
out
popa
push
xor
and
pop
xchg
sub
or
outsb
loopne
sbb
push
insl
or
std
jo
jge
xor
sub
ret
or
out
jmp
outsl
scas
test
adc
push
pop
cmc
xor
loop
cmp
testl
push
pop
fsubr
pop
xrelease
popf
jne
add
and
stc
sub
cmp
cld
add
sbb
jge
movsl
aad
xlat
ljmp
xchg
out
das
cmp
into
adc
sbb
add
pop
inc
xchg
lahf
sub
call
add
insl
sbb
adc
adc
and
outsl
cmp
mov
leave
ljmp
cwtl
dec
push
ret
aam
into
repnz
add
pusha
mov
push
test
push
xor
xor
or
push
testl
std
inc
mov
inc
js
lods
iret
ret
loopne
in
int3
lret
dec
pop
jne,pn
adc
push
mov
cmp
lds
test
xchg
ss
xchg
xor
mov
sub
sbb
out
mov
addr16
and
ret
out
jl
xchg
add
push
in
stos
call
xchg
ja
rolb
sub
mov
addr16
add
out
and
iret
iret
add
sbb
loopne
pop
push
in
pop
test
sbb
mov
jae
scas
addr16
fnsave
fmull
xchg
mov
mov
fs
cwtl
jo
inc
addr16
adc
rcrb
and
int
xchg
sub
mov
mov
adc
sbb
or
scas
xor
xchg
in
sub
mov
imul
inc
int3
je
lock
in
sub
push
pop
xor
popf
jecxz
ds
xchg
mov
and
mov
dec
int3
loopne
fbld
cld
movsl
aas
mov
gs
xchg
mov
lret
imul
dec
jp
mov
lods
lret
mov
jnp
push
sti
adcl
mov
jecxz
and
imul
sub
notl
pushf
cwtl
cs
test
out
pop
and
scas
loope
lods
jl
push
xchg
shll
imul
sbb
cmp
xchg
mov
mov
nop
negb
push
inc
mov
push
xchg
fimuls
adc
inc
out
cmp
pop
xor
jnp
cmpl
test
sub
xor
pop
in
jl
out
inc
fistpll
sub
orl
jne
pop
jg
xor
into
pop
add
cmpsl
cmp
mov
adc
inc
xor
cmpsb
jecxz
filds
in
push
pusha
lods
cmp
aam
sub
mov
jg
mov
pop
gs
push
jno
pop
mov
js
dec
dec
mov
das
out
addr16
pop
cld
inc
mov
sbb
and
inc
repz
jecxz
mov
aad
incl
inc
pop
es
xor
xchg
inc
dec
pop
mov
das
and
push
xor
pop
lock
jmp
lds
inc
pop
push
xchg
cmc
jnp
mulb
negl
mov
leavew
dec
push
mov
or
scas
push
cwtl
add
js
icebp
sbb
adc
and
cmp
out
divb
outsb
movsl
adc
mov
pop
ds
outsb
cli
sbb
ds
rcl
out
stos
mov
iret
xchg
ret
pop
xor
cmpb
aaa
clc
jle
in
mov
pop
pop
sub
sarl
xchg
test
mov
addr16
outsl
push
ljmp
fnstcw
fiadds
adc
js
push
gs
cli
dec
mov
pop
or
mov
xor
cmpsl
mov
outsl
movsb
insb
jmp
push
out
fldl
js
fs
sahf
pop
incl
cmp
push
mov
shl
mov
mov
jmp
arpl
repz
mov
stc
sti
out
into
loopne
pop
or
insl
push
adcb
in
pushf
jle
xor
mov
fstpt
imul
mov
cwtl
mov
pop
jno
icebp
sub
lahf
fdivl
in
cmp
xchg
test
cltd
xor
lds
sbb
fisubrs
in
andl
sub
fsubs
sub
inc
hlt
js
mov
push
xlat
jge
rcl
xlat
pop
pop
mov
inc
out
pop
fidivl
push
cmp
jl
int
aad
cmpsb
mov
mov
push
hlt
sub
movsb
lods
dec
sahf
mov
sub
pop
add
scas
fld
or
xchg
push
ficoml
mov
ja
stos
jmp
mov
loopne
cmp
or
shlb
movsl
outsl
sub
popa
test
lods
or
pushf
mov
adc
adc
faddl
js
dec
cmp
or
idivl
imul
jb
into
movsl
pop
das
inc
jne
jae
or
jnp
cwtl
inc
rcrl
fsubrl
dec
add
fistpl
nopl
addb
cmpsb
popa
cmp
add
addr16
rcrb
or
or
cmp
jne
in
jmp
popa
int3
cmp
dec
cmp
mov
fistpl
lret
dec
xor
iret
xchg
les
hlt
xor
insb
pop
or
xor
xchg
shr
add
mov
pop
shlb
mov
fistpll
jae
xchg
jl
sarl
sar
dec
mov
clc
fisttpll
test
mov
or
sti
dec
push
jae
mov
pop
mov
les
pop
push
dec
ficoms
or
cwtl
sahf
pushf
inc
test
icebp
xor
lock
mov
sbb
int
and
mov
dec
pop
dec
cli
movsb
rolb
addr16
sub
dec
push
or
pushf
mov
xor
push
scas
mov
dec
daa
clc
xchg
stos
bound
rclb
dec
mov
push
movsl
pop
lcall
push
lcall
add
pop
lahf
test
sbb
mov
push
cmc
push
dec
xchg
insb
or
into
inc
mov
sub
dec
hlt
pop
sub
mov
shll
fcomps
mov
pop
mov
sub
mov
push
inc
fisttpll
xchg
test
psrld
mov
and
or
out
fmuls
nop
sub
subb
push
sub
repnz
leave
incb
push
adc
jo
cmp
outsb
and
iret
mov
rolb
test
cwtl
adc
int3
sub
cmp
dec
inc
jmp
dec
jecxz
loop
dec
cmp
test
xchg
into
fs
dec
stc
icebp
cltd
mov
leave
jo
aam
jmp
aam
cmp
pop
or
mov
and
int3
cmp
lods
insl
xchg
ss
icebp
imul
pop
dec
insb
add
icebp
add
xor
scas
fwait
and
andw
lret
xchg
xor
testl
sbb
sarb
xor
insb
xchg
jg
xor
cmpsb
leave
sbb
adc
out
xor
xor
push
les
int
xchg
push
es
push
pop
into
cmc
mov
mov
cmpsb
popf
xlat
out
incl
das
jbe
sbb
xchg
loop,pn
je
sub
push
popf
insb
inc
mov
fisttps
add
addl
mov
insl
mov
pop
dec
cmp
cmp
xchg
xlat
push
outsl
out
mov
lret
lcall
lret
rclb
test
cmp
into
test
xchg
fs
xchg
movsl
cld
sahf
lret
mov
lock
in
int
xor
push
push
push
xchg
add
leave
les
jmp
dec
idivb
js
mov
sub
es
dec
gs
lea
or
or
fdivrs
mov
adc
dec
jne
jne
jo
fwait
sub
mov
aam
adc
xchg
aas
jae
jne
pop
bnd
frndint
lock
xchg
cmp
hlt
lea
repnz
xor
ds
dec
lea
cmp
xor
add
pop
mov
aaa
js
arpl
add
push
xor
insl
push
lcall
or
inc
leave
scas
mov
mov
or
ja
mov
jae
ljmp
sub
adc
out
jge
pop
fnstenv
daa
sbb
ds
das
mov
mov
push
std
lds
dec
xor
cmp
pop
scas
xlat
mov
add
mov
aaa
mull
movsb
outsl
clc
mov
jmp
fisubl
lds
cld
push
or
pop
pusha
xchg
lods
test
mov
mov
mov
push
ja
mov
aam
xchg
push
mov
xor
sbb
in
xchg
enter
sub
shl
fidivrl
das
cltd
or
push
jno
or
add
shll
mov
sar
jns
dec
pop
jecxz
or
or
sti
xor
xor
push
sbb
rol
push
dec
loop
inc
cltd
cld
fwait
push
or
and
repnz
push
sub
inc
arpl
cmp
jnp
xlat
call
adc
cmc
inc
adc
sbb
push
fwait
sbb
and
xor
nop
adc
test
push
jae
pusha
loopne
push
les
subb
cmp
cmp
pop
flds
inc
arpl
pop
xor
mov
pop
add
mov
cltd
jbe
or
test
jg
fistpl
mov
movsl
mov
add
adc
loope
add
arpl
enter
and
cmpl
mov
call
fimull
add
nop
jno
jns
sub
dec
sbb
mov
jecxz
addr16
inc
mov
fisttps
mov
fiaddl
daa
adcl
repz
pop
mov
es
dec
rolb
sarb
movsl
sbbl
xor
testl
in
xchg
inc
jmp
rcrl
lret
not
adc
shr
imul
sbb
mov
pop
mov
pop
in
add
jae
test
loopne
inc
movsb
push
jecxz
mov
xchg
sub
xchg
lcall
dec
cmpb
jnp
add
lds
sti
sbb
xchg
mov
es
addl
xchg
sub
shl
sub
lcall
mov
push
xor
popf
push
push
es
jp
fidivs
ds
xchg
mov
test
adc
cmpsb
outsl
push
int
jp
subl
dec
aad
mov
test
testl
adc
jbe
or
or
dec
movsb
ja
mov
cmpsb
insl
add
int3
lret
adc
xchg
rolb
in
sahf
std
push
fdivrl
sbb
dec
jge
pop
pop
pop
imul
dec
mov
mov
sarb
push
jae
mov
pushl
sbb
in
icebp
or
or
mov
out
in
add
pop
push
pusha
sahf
jbe
or
add
loopne
stc
in
movsl
mov
pop
insb
sbb
jae
sti
adc
mov
lea
and
sti
lret
cmpl
mov
pop
jne
cmp
loope
cmp
mov
icebp
xor
loope
sub
in
dec
into
jg
test
inc
sub
pop
xor
adc
test
jmp
out
push
mov
fidivs
fwait
int3
inc
data16
std
in
inc
cmp
test
jbe
loop
ret
cmp
aaa
xor
lods
jp
inc
mov
fs
cld
or
or
mov
or
cmc
jno
xchg
scas
sbb
ss
push
and
push
sbb
inc
and
lcall
cmp
fimull
fs
pop
fdecstp
mov
out
adc
sbb
xchg
xchg
xchg
add
ds
pop
adc
pop
jb
popa
fimuls
les
xlat
adc
loop
into
je
and
sahf
jmp
ss
lahf
jbe
pop
jae
mov
cmp
xchg
mov
jbe
insl
loope
sbb
mov
lret
cmp
movsb
mov
add
jb
jmp
jnp
popf
pop
andl
adc
pusha
imull
push
lods
mov
sbb
fcoms
push
push
mov
jg
lcall
shll
fistl
adc
in
jns
sub
lock
mov
lret
push
mov
jp
mov
fcompl
jle
mov
int
jns
fsubrl
enter
mov
outsl
punpckldq
imul
jl
cmp
pushf
push
cmp
fidivrl
push
adc
sbb
outsl
add
inc
mov
dec
out
dec
mov
and
adc
aam
adc
mov
lods
pop
mov
in
lcall
and
mov
mov
fcmovnu
gs
sahf
mov
xchg
xchg
mov
dec
stos
cmpsb
sub
popa
fucomp
cmp
aas
ret
pop
iret
pop
pop
or
sti
in
cmp
lods
test
dec
dec
das
int3
enter
rdtsc
dec
ja
repnz
call
pop
and
sbb
divl
mov
push
sbb
aaa
fisubl
ja
sub
jmp
rorb
push
ret
ljmp
fidivrs
sub
popf
decl
outsl
ret
jge
gs
aas
cmp
dec
sbb
adc
daa
mov
mov
pop
mov
sub
adc
xchg
aas
mov
arpl
xchg
cmp
ficomps
jns
cld
popf
cli
divb
or
data16
stc
dec
mov
fistl
jecxz
or
mov
cmc
mov
out
cmp
cmc
jle
leave
arpl
lea
testl
test
enter
hlt
mov
push
movsl
ljmp
cmpsl
jmp
push
out
adc
mov
jo
inc
pop
aad
scas
out
mov
pop
ss
pushf
in
xor
add
inc
int
movsl
dec
in
leave
sbb
pop
add
lds
mov
into
and
in
adc
das
adc
mov
movsl
sbb
cltd
inc
insb
and
inc
mov
insl
out
mov
adc
fcmovnu
xor
inc
sbb
stos
mov
cmp
mov
dec
push
lods
dec
push
gs
jae
push
adc
ja
dec
punpckldq
push
movsl
dec
cmpb
dec
cwtl
sub
jg
mov
adc
xor
hlt
sti
mov
rcr
pop
imull
xchg
out
cmp
mov
mov
call
adc
mov
test
outsl
inc
gs
sub
mov
pushf
mov
jp
test
mov
fisttps
ret
and
mov
cwtl
je
jbe
ljmp
in
jne
out
add
cs
xor
faddl
sub
stos
movsl
sbb
call
dec
test
das
push
push
adc
inc
adc
dec
imul
mov
inc
jo
or
test
fnstenv
push
rcl
in
jle
je
into
or
sbb
pop
push
xchg
pop
test
ret
popf
mov
sub
lret
lahf
pushl
movsb
sahf
sarl
mov
pop
dec
jo
xchg
mov
cmp
insb
push
insl
and
sub
or
jb
push
lods
out
sahf
dec
aas
repz
fmull
push
push
outsb
xor
jge
sarl
or
push
cmp
and
shrl
jl
push
mov
xchg
sbbl
repnz
add
pushf
lods
push
xor
lahf
jne
and
mov
aaa
inc
xchg
push
leave
and
lods
les
movsl
scas
jp
stc
mov
pop
adc
rorl
xor
inc
fsubs
mov
jecxz
mov
push
test
mov
mov
adc
mov
cmpsl
dec
in
inc
cmp
subl
in
add
cmpl
jnp
fadds
fdiv
pop
enter
mov
xorl
push
push
sbb
jno
and
dec
into
push
mov
lea
dec
stc
mov
mov
cmp
mov
insb
mov
mov
pop
inc
fucomp
pop
jo
leave
jae
add
shrb
int
dec
jge
lods
mov
mov
mov
mov
sbb
pop
outsl
movsl
inc
test
in
or
ret
pop
loope
rcll
jb
mov
filds
mov
and
mov
mov
mov
sahf
mov
xchg
mov
cmpl
bound
sbb
cmp
and
xchg
xor
jg
xor
xchg
lods
mov
test
lret
add
sub
iret
aaa
inc
cmp
lcall
subb
push
mov
dec
mov
mov
mov
call
fs
or
out
sbb
sbb
jge
fidivrs
mov
inc
jmp
imul
adc
lret
fcomps
das
jnp
push
pop
and
mov
or
repnz
in
and
dec
mov
inc
sbb
mov
xchg
add
pop
mov
popf
ud1
sub
cltd
push
gs
add
mov
out
adc
movl
mov
sbb
mov
mov
mov
xor
mov
mov
stc
fs
roll
ret
data16
mov
pop
filds
in
lock
movsb
push
xor
bound
arpl
mov
add
call
pushf
lahf
popa
fidivrl
stc
mov
xlat
fcomps
mov
mov
mov
add
dec
sub
sarb
lock
cmp
sub
in
pop
jp
add
mov
sub
or
xchg
fisttps
int3
push
xor
jns
std
incb
pop
sub
mov
icebp
outsl
adc
in
fists
sbb
adc
xchg
pop
or
cmpsb
fwait
push
cmp
or
mov
sub
jg
push
arpl
jl
sbb
loop
cmp
imull
and
mov
scas
roll
ljmp
test
xor
sub
add
pushf
inc
cmc
dec
fisttpll
push
movsb
add
adc
stos
into
jecxz
cld
cltd
mov
std
jbe
orl
sub
test
bswap
xor
subb
mov
cmc
je
cmp
std
in
adc
stos
negb
xor
cwtl
dec
xchg
adc
mov
xchg
ret
ret
sbb
cs
pop
mov
test
insl
dec
lea
push
xor
ja
mov
test
jmp
cmpsl
xor
shll
dec
inc
mov
jbe
pop
xchg
sahf
aad
mov
push
mov
push
popa
rol
add
stos
fdivs
out
out
enter
rol
iret
les
or
mov
test
js
icebp
into
or
mov
xchg
aaa
ret
jae
dec
or
mov
cmp
xchg
cli
or
jle
mov
fdivrl
out
lods
fildll
sbb
inc
sbb
xchg
fnsave
fldt
or
test
popf
xchg
je
dec
imul
fs
fisubs
cwtl
push
cmp
inc
xchg
in
cmp
or
gs
repnz
lret
jnp
cmp
in
out
inc
fwait
xchg
shrl
mull
xor
jg
in
pushf
icebp
lret
sahf
cltd
jmp
inc
add
ja
cmp
testb
lret
cmp
xchg
mov
ret
mov
movsb
jecxz
int
mov
scas
jb
loopne
xor
clc
fst
push
sbb
xchg
inc
out
xchg
xor
pushf
jne
cmp
pop
jae
arpl
mov
cmp
dec
adc
sahf
js
sub
or
ss
mov
fcomps
in
pop
std
jmp
push
out
cmpb
inc
ret
into
mov
retw
xor
and
jo
popa
dec
cmp
scas
sahf
add
jg
mov
fisttpl
jnp
jbe
cmp
jnp
imul
in
mov
je
mov
jecxz
aam
cltd
push
push
call
sbb
loopne
ret
fidivs
mov
add
imul
push
int
lds
and
push
ret
xor
dec
add
mov
leave
or
insb
pop
lea
jo
inc
stc
ret
jo
cmp
out
mov
in
add
cmc
add
push
mov
adc
jo
or
push
shll
cmc
mov
cld
xchg
xchg
push
pop
xor
add
andb
inc
lret
mov
mov
inc
stos
sub
data16
jg
stos
pop
push
xchg
xchg
dec
dec
lods
mov
divb
dec
and
sbb
stos
mov
addb
out
into
cmpsb
and
rcrb
xchg
les
jne
dec
xchg
adc
mov
mov
jge
aad
ja
out
jnp
std
dec
xchg
out
xor
scas
daa
test
push
in
jnp
leave
pop
cmpsl
inc
or
shl
insb
and
push
pop
js
mov
sbb
push
cltd
les
sbb
ret
jns
lds
sti
push
ds
sub
xchg
ficomps
mov
sbb
inc
jge
stc
cs
mov
sub
push
iret
mov
movsl
adc
mov
xor
cmp
xchg
mov
cmpsb
inc
add
sbb
jecxz
inc
xor
sahf
or
and
xchg
pop
fadd
movsl
ss
cmp
xor
mov
out
clc
insb
daa
cltd
and
out
clc
es
mov
add
sbb
pop
mov
out
xlat
mov
mov
lret
sbb
dec
and
movq
adc
arpl
add
xchg
push
cltd
mov
ljmp
hlt
sbb
add
les
cld
cmp
and
imul
xchg
fscale
cmp
cwtl
ljmp
xchg
mov
add
insb
xor
xor
into
orb
subb
inc
idiv
jmp
in
addr16
popa
inc
insb
les
jbe
fcmovnb
adc
mov
stos
inc
mov
in
jne
sub
sub
mov
leave
sbb
dec
xchg
lods
dec
iret
popf
pop
xchg
mov
xchg
dec
cmpsl
shll
xchg
add
arpl
ret
fwait
mov
sarb
jno
xchg
in
jnp
cwtl
pop
and
mov
outsb
push
jbe
lds
or
jne
imul
jae
repnz
xor
xchg
mov
cmpsl
icebp
cwtl
sbbb
arpl
and
inc
and
xor
mov
shl
pop
outsb
xlat
xor
sub
adc
pop
sub
inc
adc
inc
sbb
push
push
push
icebp
scas
sbb
xor
mov
iret
jns
outsl
and
mov
mov
jns
cmp
push
fsubrs
mov
adc
sbb
jge
adc
push
cld
mov
jno
in
dec
aas
pushf
adc
loopne
lock
push
sbb
pop
adc
xchg
dec
bound
or
xchg
outsb
jge
ret
repnz
pop
loopne
pop
pop
dec
push
ret
fstpl
call
sti
inc
idivb
jecxz
jmp
roll
xchg
dec
inc
adc
add
pop
mov
movsb
rcl
pop
pop
out
popa
dec
xor
jle
and
shr
mov
mov
xchg
jle
out
xorl
in
sti
xchg
pop
pop
call
movl
iret
mov
xorl
and
adc
imul
inc
jecxz
mov
cld
daa
mov
aas
loope
shll
adc
xchg
sub
add
pop
adc
orl
pop
or
aaa
hlt
into
xor
push
mov
mov
loope
fldt
pop
mov
add
xchg
stos
sbb
sbb
lods
and
jb
pxor
push
xchg
cmp
inc
xor
jns
mov
ds
popf
or
mov
test
andb
pop
xor
jb
jg
cld
fists
movsb
jmp
inc
out
in
sub
stos
xor
imull
mov
mov
nop
test
insl
cwtl
ret
imul
ud2
fdivrl
sbb
pop
divb
mov
cmpsb
mov
pop
fistl
xor
scas
stc
pop
test
xor
loop
mov
cmp
popa
inc
mov
mov
or
jb
push
mov
adcl
mov
fldt
add
xchg
arpl
scas
xor
cmc
jns
imul
divb
lods
mov
add
hlt
shll
pop
sub
add
sbb
and
mov
mov
inc
decl
fldl
pop
je
dec
mov
add
aad
adc
lcall
cmp
mov
add
popf
xchg
into
inc
repnz
std
push
push
sub
aam
rcrl
pop
movsb
cld
cmp
mov
lret
pop
push
adc
scas
cmp
push
fxch
ret
int
inc
rorb
outsl
scas
fnstenv
and
dec
adc
push
out
mov
lcall
loope
mov
cmp
ret
leave
mov
test
jmp
pusha
into
mov
cli
out
insb
shl
negl
sub
scas
add
add
jle
jnp
mov
and
leave
push
push
leave
adc
popf
faddp
add
divl
jne
aad
pop
mov
in
xchg
movsb
cmpsb
out
pop
shlb
aam
push
les
xor
dec
cltd
addr16
jno,pn
xor
lock
std
js
test
add
repnz
insb
xlat
cmpsl
jo
call
repz
ret
push
arpl
repz
iret
mov
cmpsl
ljmp
mov
jecxz
loop
xor
int3
cmove
fcmove
inc
pop
ret
int
adc
clc
mov
nop
data16
insb
aaa
jecxz
push
push
outsb
jp
jno
cmp
lret
xor
test
and
sti
imul
jnp
xor
pusha
mov
add
cmpsl
jne
es
stos
sub
xlat
notrack
subb
into
out
cmc
push
mov
mov
jne
cmp
bswap
sbb
or
addr16
and
cwtl
sub
jmp
and
inc
or
ret
je
jle
stos
shll
push
movsb
pop
fldt
js
outsl
rcl
pop
mov
dec
lods
fisubrs
mov
sti
jb
mov
arpl
int3
scas
jne
jge
pop
daa
out
dec
mov
jecxz
adc
mov
mov
popa
xor
jno
adc
mov
jg
adc
notl
push
sub
mov
add
add
and
and
cmpsb
rorl
rol
push
push
lret
repz
mov
add
jge
stos
xchg
pusha
pop
popf
dec
je
sub
test
mov
or
xchg
xchg
inc
xchg
push
mov
push
scas
sahf
lods
xchg
cmp
jne
push
daa
jne
lock
add
fiadds
lea
push
cmp
scas
mov
cmpb
pop
cmp
inc
and
or
add
out
addr16
cmp
xchg
push
les
loopne
incb
adc
icebp
ds
inc
and
js
pop
xor
inc
inc
out
sbb
popa
andb
insb
push
add
aas
or
fnstenv
jmp
jbe
addr16
popa
scas
dec
cmp
pop
mov
mov
adc
jle
adc
hlt
movsl
jns
mov
push
mov
call
mov
cmp
dec
scas
mov
loope
sbb
into
jle
sbb
int
out
dec
movsb
outsb
add
inc
sub
pop
popl
inc
in
mov
fwait
incb
cltd
lods
inc
xchg
jae
adc
xor
inc
ds
lea
nop
les
in
lock
fidivrs
adc
insb
push
in
fs
adc
cmp
mov
shl
push
iret
scas
popf
mov
mov
mov
push
hlt
dec
adc
jae
adc
popa
clc
movsb
data16
adc
fbld
sub
add
aas
inc
push
mov
jne
in
inc
test
scas
mov
push
test
fwait
xchg
jbe
mov
sti
jecxz
iret
dec
push
in
mov
add
test
xchg
jno
xchg
leave
mov
pop
sbb
fstps
call
xchg
ja
pop
mov
in
shrb
sbb
andps
pop
fists
sarb
mov
xlat
xor
cli
mov
mov
cmpsb
inc
jno
insl
mov
xchg
and
clc
stc
dec
adc
and
rcll
push
daa
dec
xor
jle
nop
xor
mov
stos
call
jno
nop
hlt
adc
imul
jecxz
repnz
fcmovb
gs
ror
fnstcw
loop
filds
in
pusha
xor
or
jne
fiaddl
push
std
mov
inc
sub
rcl
mov
lahf
dec
outsl
imul
jle
fstl
mov
push
jno
push
or
stc
imull
dec
xchg
jg
fs
in
pop
stos
jecxz
adc
nop
imul
adc
cs
leave
icebp
das
and
in
inc
into
dec
daa
lcall
jle
pusha
sbb
pusha
pop
mov
or
push
push
and
outsb
je
pop
xor
xor
into
jmp
loope
dec
cs
in
cwtl
addr16
push
mov
scas
lahf
cmc
xor
jnp
cltd
pop
out
fnstcw
or
pop
cmp
inc
fptan
jp
pushf
sarb
jns
sbb
out
jbe
jno
push
iret
notb
cmp
pushf
hlt
jp
iret
mov
fs
xlat
adcb
dec
mov
push
adc
sbb
add
inc
jle
and
stc
cmc
adc
xchg
repz
or
hlt
cmp
mov
lcall
aad
mov
dec
xchg
ret
cmpsb
popa
pop
pushf
dec
pop
xor
aaa
iret
into
adc
clc
xor
cmpsl
sti
loope
sahf
sub
jb
jle
aad
adc
mov
mov
lret
shr
out
adc
jne
hlt
cmp
jmp
lods
mov
or
inc
shl
pop
rcl
pop
pushf
push
xchg
mov
pop
ss
jo
and
addr16
loop
cmp
shlb
repz
pop
rorb
int3
into
repz
mov
outsb
mov
adc
xor
pop
mov
movsl
fwait
inc
add
scas
rorb
mov
inc
jno
pushf
cmpsl
ds
sub
cltd
popa
cmp
ljmp
int3
mov
push
bound
or
dec
mov
cmp
addr16
fcomp
dec
add
cmpsl
shlb
inc
cltd
xor
adc
or
sbbb
cmp
mov
ret
mov
pusha
xchg
jmp
jl
sbb
push
scas
out
rcll
in
or
push
dec
pusha
dec
stos
mov
sub
dec
scas
daa
fwait
push
lret
sti
cli
out
push
in
nop
fwait
and
rorl
xor
ffree
movsl
cltd
mov
dec
divb
shll
scas
fstpt
mov
cmp
sbb
cltd
adc
adc
adc
arpl
ds
cmp
sti
xor
pop
shll
xor
sahf
cmp
iret
ljmp
sbb
pop
lea
adc
mov
lret
and
jge
sub
lds
xchg
push
sub
cmp
cmp
jbe
mov
stc
sbb
fwait
loope
and
pop
loop
xchg
push
fwait
icebp
inc
fwait
mov
sbb
es
push
sbb
loope
jle
sbb
lock
lret
insb
mov
jae
and
outsl
xchg
pop
ljmp
cld
lcall
imulb
test
mov
jbe
ljmp
pop
mov
jge
push
mov
out
insb
fdivl
negb
testb
jmp
lret
lds
inc
mov
nop
push
push
mov
push
fdivr
rclb
imul
mov
es
pop
push
cs
or
imul
fstpt
rorl
inc
insb
dec
adc
ffreep
aas
testb
js
mov
repnz
jle
xlat
jle
xchg
sub
add
icebp
hlt
fsubr
mov
add
xchg
sbb
lock
sbb
pop
inc
xchg
in
adc
fcmovne
decb
popf
pop
sbb
out
dec
imul
shrb
rcrl
push
lahf
aas
loopne
sbb
mov
andb
push
icebp
xor
enter
cld
sarb
int
negb
cmp
hlt
aam
add
gs
movsb
roll
out
test
jns
dec
lahf
push
imul
jno
pushf
test
fbstp
xchg
fsts
mov
and
pop
push
cmp
fldcw
inc
nop
pop
enter
into
test
out
popf
ficompl
push
fstl
dec
stc
clc
push
popa
lock
sbb
mov
sbb
mov
je
xor
add
pop
fistpl
mov
mov
mov
scas
imul
aas
out
jns
xlat
add
jbe
test
hlt
cld
or
lock
dec
dec
mov
cmp
add
pop
inc
add
test
out
push
ds
add
jmp
add
dec
fs
sub
mov
dec
into
fwait
jmp
insl
push
jne
mov
dec
add
jmp
cmp
jns
int
aam
ja
in
iret
add
hlt
mov
and
xchg
dec
cli
push
test
inc
sbb
pop
or
sbb
scas
flds
and
sahf
jnp
sbb
sbb
or
cwtl
mov
dec
enter
push
enter
cmpb
in
mov
pop
mov
cltd
addr16
cmp
loop
xchg
idiv
int
subb
jbe
push
pop
lods
inc
jae
loop
and
clc
outsl
subl
out
or
sub
ret
ret
std
ret
mov
xchg
push
xchg
dec
sbb
push
int
in
divb
jae
es
lods
adc
mov
push
mov
jno
xlat
sub
adc
or
xchg
loopne
jns
mov
pop
pop
push
and
insb
adc
xor
xchg
jne
stc
cmp
mov
sti
sti
xchg
int3
jno
pop
call
xchg
mov
cmpsl
sub
cmp
jo
add
popa
pop
mov
pop
ljmp
add
push
pop
push
push
xor
push
push
out
outsl
mov
addr16
call
fldl
push
inc
popf
add
mov
jbe
dec
mov
add
mov
das
push
js
jmp
dec
inc
aad
mov
inc
outsb
shr
ja
leave
dec
in
and
push
cwtl
ficomps
jnp
lds
cmp
sbb
cmc
dec
aas
cltd
ljmp
lahf
js
mov
push
ret
push
dec
out
dec
aas
jae
enter
insl
test
mov
aam
adc
imul
mov
das
movsl
sarb
mov
ljmp
cld
pusha
xchg
push
adc
test
dec
movsl
mov
dec
frstor
mov
rolb
push
icebp
js
mov
int
idiv
stc
insb
pop
int
mov
rcrb
ljmp
lcall
lahf
jmp
push
ficoml
pushf
push
add
cmp
xchg
sub
mov
mov
cmc
or
movsb
mov
and
jne
mov
lock
idivl
repnz
jecxz
addb
add
jae
or
cmc
in
xchg
xchg
mov
sub
xrelease
push
fdivl
mov
enter
stos
ljmp
cmp
cmp
sarb
jmp
push
mov
outsb
in
int3
in
scas
cltd
jl
xlat
lahf
dec
or
jmp
push
xlat
loope
cmp
and
sub
inc
jne
jmp
imul
sbb
popa
cmpsb
sub
xchg
std
sub
jno
lds
adcl
aad
xchg
pop
jl
leave
out
pop
into
or
dec
add
rcrl
cltd
add
lea
sbb
fisttps
adc
jbe
clc
int3
sahf
mov
xchg
movd
rclb
pop
sahf
jns
loop
les
pop
push
dec
movsb
jg
inc
jbe
mov
xor
push
test
inc
cmpsl
mov
xchg
xchg
in
sbb
ds
icebp
inc
es
mov
mov
stos
xor
setl
sbb
stc
pop
dec
or
js
notb
aad
negl
out
cltd
inc
nop
add
hlt
cmp
fwait
sbb
inc
bound
mov
jge
mov
xchg
or
dec
mov
out
xor
or
and
insb
inc
jge
aaa
cs
jmp
mov
push
pop
sub
pop
orb
insb
pop
cmc
test
xchg
or
pop
pop
cmp
xor
xlat
fcomip
add
negl
inc
leave
outsl
push
inc
push
jno
fiaddl
clc
jge
popl
pop
sub
aas
bnd
stos
leave
pop
cli
xor
xor
lods
dec
int3
stos
lret
vandps
das
aad
jae
in
imul
xor
pop
mov
jae
xchg
ja
or
push
pop
or
and
add
jp
inc
push
insb
loope
add
jo
pop
jo
add
es
push
aas
dec
pop
stc
movsl
xor
sub
push
lds
mov
mov
sub
add
imul
lgs
jle
outsb
cmpsl
outsl
sarb
sbbl
push
sub
mov
sub
sbb
mov
push
xor
xor
loope
lods
sar
shll
popf
repz
cltd
mov
iret
and
xchg
into
xor
jno
xchg
out
das
pop
jns
int
dec
js
and
mov
and
jae
xchg
mov
dec
mov
test
jo
dec
je
jne
mov
and
out
mov
jg
rorb
pop
sti
jnp
mov
lahf
fisttpll
pop
decb
aaa
sarl
pop
add
jp
mov
sti
push
dec
fbstp
lret
lea
push
add
xlat
mov
bswap
test
sub
adc
mov
sti
shrb
or
fsub
and
fisubrs
push
lret
out
cmp
push
js
adc
out
inc
sbb
sub
jns
cltd
sarl
mov
ss
adc
mov
fcompl
mov
testb
shld
fidivl
cmp
inc
inc
mov
fistps
dec
movsb
pop
addr16
mov
loope
jmp
adc
mov
mov
notb
or
call
mov
jns
push
fisubl
push
jmp
popf
aas
mov
xorb
loope
test
jmp
sub
sub
leave
pop
push
or
fsubrl
mul
dec
inc
movsl
arpl
sub
sbb
movsb
xchg
or
xlat
iret
xchg
sbb
add
adc
or
xchg
xor
xchg
sahf
cmpsb
jge
add
add
mulb
pop
jp
enter
imul
xchg
int
pop
xor
outsl
lcall
mov
dec
jp
inc
sti
repz
sbb
cmp
mov
mov
push
xchg
cli
mov
paddd
cmp
int
jle
imull
jns
fmul
pop
pop
pop
sub
mov
hlt
sbb
mov
jl
and
in
and
test
push
adc
push
dec
mov
subb
lea
rcl
inc
je
push
aas
mov
lea
mov
mov
cltd
dec
cmp
xchg
loop
lea
pusha
push
xor
rcrl
lea
lods
jmp
adc
in
movsl
lret
insl
mov
adc
outsl
pop
fcomp
out
sti
cmc
sbb
inc
ficomps
icebp
loopne
cmpsb
call
sbb
nop
ret
add
jecxz
inc
pop
mov
popa
xchg
dec
loopne
mov
add
mov
addr16
mov
sbb
in
rcl
add
add
xor
cmp
inc
fmull
lea
mov
pushf
mov
or
mov
or
ret
add
mov
mov
xor
mov
or
push
fidivl
inc
test
aad
push
inc
repz
pop
jbe
sub
andl
lret
jecxz
inc
pop
or
push
into
std
pop
jl
out
xlat
fwait
shrb
inc
xchg
call
push
cmp
xchg
aas
cli
dec
inc
outsb
or
lock
std
add
and
aaa
push
push
stos
xor
in
shll
cs
pushf
cmpsl
xlat
enter
jecxz
clc
sbbl
sub
int
test
push
movsl
or
ja
mov
cmp
xor
sbb
loop
negl
aas
xor
shlb
outsl
xor
sub
push
movaps
lret
push
data16
cwtl
cmp
cmp
push
cmpb
lcall
int3
in
fsubp
cmp
pusha
add
xor
repnz
sbb
imul
cmp
add
insb
pop
xchg
xor
in
into
add
out
and
pop
in
scas
add
jl
sub
in
das
mov
mov
push
mov
hlt
cld
xchg
stos
arpl
mov
mov
es
or
or
scas
movsl
pop
dec
fisubrl
test
jmp
push
mov
in
mov
cmp
jg
mov
xor
xchg
fdivrl
add
dec
xchg
adc
in
pop
or
sti
xchg
cmp
inc
enter
int
out
rcrb
mov
mov
popa
and
fdivrl
fs
pop
jns
fstpl
xchg
int
insl
sbb
stc
xlat
sti
inc
out
cs
subl
clc
insb
rclb
sub
sti
gs
inc
sub
sub
jecxz
xchg
xchg
add
lods
mov
pushf
and
ljmp
adc
dec
adc
add
fsubr
and
xor
test
cld
ret
or
lret
rorl
sub
in
sub
dec
lods
lds
cmp
xchg
out
in
sbb
mov
jecxz
jbe
xchg
pop
adc
lds
mov
fcoms
repnz
dec
cmp
sbb
pop
dec
jno
fistl
jl
jecxz
inc
test
addb
xchg
or
xor
jno
sbbl
sub
jae
inc
dec
push
or
inc
gs
xchg
cwtl
stc
add
pop
add
pop
sbb
shrb
and
mov
push
es
ljmp
pop
movsb
push
push
jno
dec
push
je
fcoms
or
xor
jno
push
pop
iret
fsubrp
pop
xor
jnp
hlt
sbb
xlat
add
lcall
push
out
lahf
dec
sbb
int3
pop
sti
sbb
xor
cmpsl
stos
pushf
jnp
fs
outsl
es
dec
scas
jb
xchg
xor
mov
push
les
stos
cmp
mov
cli
adc
jbe
dec
sbb
fs
push
ljmp
push
and
stos
dec
arpl
aam
addr16
adc
pop
mov
mov
mov
sbb
in
mov
adc
pop
call
pop
in
adcl
push
lea
int
repz
sub
jb
xorb
scas
sbb
jmp
ficompl
mov
lods
push
xlat
xor
xor
inc
mov
mov
or
inc
rcrl
iret
fimuls
and
mov
cmp
mov
and
pop
push
into
movsl
mov
push
add
mov
pop
mov
cmp
repnz
push
push
jg
aam
stos
pop
cs
in
inc
jmp
movsb
lea
outsb
sbb
sbb
cmc
out
mov
xor
xor
clc
xor
dec
jb
xor
cmp
mov
aam
mov
or
mov
and
sbb
addr16
out
xchg
mov
loope
jmp
loopne
cmp
test
mov
popa
pop
and
sub
test
push
fsub
cld
jae
mov
mov
dec
test
xor
add
jle
inc
ret
sub
xchg
push
movsb
aam
jle
les
mov
into
mov
shll
lea
aad
or
mov
pop
cmpsb
fsubr
sub
popa
mov
xlat
mov
dec
and
repz
outsb
movsl
mov
mov
pop
lret
or
xor
inc
enter
or
push
cmp
daa
std
vdivsd
ss
shlb
roll
add
mov
or
loop
call
jp
sbb
mov
push
push
adc
jecxz
mov
sbb
adc
xlat
cmc
repnz
test
inc
sub
adc
cmp
jnp
aam
fsub
cmp
sbb
adc
jo
jmp
addb
and
sub
mov
mov
outsb
xchg
push
iret
inc
popf
sub
xor
sarl
cmpsb
sub
loop
mov
dec
fnstenv
jmp
or
xor
out
xor
out
push
or
loop
lcall
shll
nop
sahf
jmp
pop
fisubl
mov
sub
cmp
out
lahf
out
mov
add
je
mov
and
mov
es
das
leave
sahf
sbb
stos
sbb
cmpsl
push
or
or
pop
cmp
xchg
lods
loope
movsl
testb
mov
std
jae
and
aad
add
cmp
inc
inc
xchg
insb
add
arpl
sub
sbb
aad
and
and
ja
pop
jne
repz
pop
push
jno
sub
mov
imul
mov
int
jg
gs
loop
and
aad
mov
les
add
push
fistpll
vmovhps
das
sbb
inc
sbb
and
std
push
loop
dec
ljmp
rcl
fwait
cld
cmp
lock
mov
mov
add
mov
cmpsb
test
jno
mov
ss
pop
aaa
jae
or
loope
call
out
adc
int3
dec
xchg
push
sbb
pusha
xchg
and
lock
inc
repz
xor
popa
fwait
mov
mov
mov
and
cmp
fisubl
arpl
sbb
pushf
daa
stos
add
stos
xor
int3
pop
cmp
or
sbb
aaa
std
out
lret
push
push
fs
pushf
pop
push
push
add
inc
lcall
inc
shll
mov
aad
xchg
pop
pop
cltd
and
add
mov
sbb
cltd
icebp
inc
stos
icebp
in
jne
divl
stos
cltd
es
lods
xor
insb
lods
jno
jbe
out
into
or
xor
sbb
cmpsl
jnp
pop
inc
mov
jmp
repnz
cmp
out
imul
mov
in
pop
nop
xor
add
fs
iret
ja
push
cmp
cwtl
add
mov
add
sbb
insb
cmp
and
mov
lods
adc
inc
jp
repnz
mov
mov
mov
inc
xor
adc
decb
insb
xor
pop
leave
fimuls
jmp
inc
ja
test
xor
xchg
fistps
enter
pop
push
std
push
mov
or
stos
mov
fdivrl
subl
out
mull
or
ljmp
mov
sti
and
stc
daa
or
hlt
clc
scas
outsl
or
int3
add
jle
inc
in
test
mov
jle
sub
std
adc
or
ja
jecxz
imul
xacquire
scas
cmp
mov
je
dec
cwtl
xchg
adc
pop
test
and
bound
pop
fstpl
pushf
add
xor
xchg
and
add
xor
xor
mov
clc
inc
mov
mov
es
cmpsb
popa
mov
hlt
lea
xchg
cmp
cltd
sbb
dec
xlat
dec
adc
loop
dec
or
mov
movsb
jae
hlt
push
xor
xchg
add
add
fwait
dec
aas
inc
sarl
add
push
or
add
insl
adc
repz
roll
inc
add
popa
into
inc
sbb
icebp
adc
mov
popf
mov
test
into
or
sbbl
sbb
push
clc
fdivs
test
fisttpll
ror
popf
pop
hlt
cltd
jne
arpl
popf
pop
jo
fs
arpl
xor
dec
dec
cmp
adc
ud0
push
adcl
je
iret
aaa
scas
pushf
mov
sbb
aas
rcl
mov
mov
adc
test
ja
push
inc
push
jb
or
xor
outsb
sub
enter
lods
test
std
jb
sub
fsub
mov
stos
ret
push
jle
mov
scas
stos
loopne
pusha
pop
push
add
dec
test
lea
xchg
fiaddl
jno
int
cs
int3
dec
jbe
stos
fwait
icebp
pushf
xchg
dec
xchg
inc
pop
inc
dec
ror
mov
mov
cmpb
dec
jns
jg
jnp
push
xlat
add
lods
pushf
jge
xor
cmp
out
add
inc
pop
loop
add
stos
dec
mov
push
mov
clc
xchg
jne
xor
lret
iret
or
test
in
loop
mov
adc
sbb
mov
push
jae
dec
fmuls
hlt
push
pop
fstl
adc
add
and
cmp
outsl
push
scas
or
movb
les
mov
daa
js
inc
iret
jo
mov
sti
or
jmp
or
outsb
mov
lcall
fldl
pusha
je
outsb
and
mov
xchg
add
mov
pop
lret
pushf
cmp
jbe
xor
popf
aas
xor
push
call
pop
shl
ret
mov
fidivrs
mov
js
scas
lea
icebp
xor
rclb
pop
enter
mov
shr
pop
push
int3
pop
and
fimuls
mov
pop
inc
adc
mov
sub
sub
dec
push
repnz
xchg
dec
jne
repz
scas
out
push
push
loopne
movsb
pop
loop
mov
gs
inc
adc
test
dec
iret
mov
jbe
xor
sahf
adc
lea
or
pop
pop
cmpsl
das
rclb
mov
in
je
in
dec
loop
pop
pop
pop
push
mov
dec
adc
dec
jns
mov
lods
pop
push
insb
out
or
mov
adc
sbb
pop
mov
hlt
aas
inc
aas
jo
das
pusha
cmp
popa
dec
mov
add
sti
xor
sbb
jno
mov
neg
xor
aam
xor
imul
dec
out
mov
ret
dec
icebp
xchg
or
cli
add
loope
pushl
push
les
adc
jmp
mov
jb
or
in
aad
orl
mov
pop
sbb
cmp
sbb
adc
cli
mov
mov
push
lods
or
mov
pop
inc
dec
add
js
enter
arpl
idivl
add
repnz
dec
jb
fidivl
or
pop
jl
bound
push
mov
mov
scas
lret
adc
sub
das
jg
fdivl
adc
push
pop
mov
add
fsubr
inc
fwait
xlat
int3
push
sbbl
imul
add
stos
test
push
stos
flds
inc
mov
xor
in
xchg
jge
test
pushf
push
pusha
xor
push
imul
in
imul
dec
cmp
xchg
sub
mov
lods
push
dec
cmpsb
sub
push
repz
mov
ret
rcl
movsb
test
sub
inc
xchg
sub
cltd
inc
scas
adc
jg
jp
push
cmpsb
call
jmp
insb
jle
mov
push
sarl
jecxz
jno
mov
sbb
loope
rorl
jo
iret
out
adc
and
rcll
lcall
popf
xchg
nop/reserved
push
stos
xchg
sbb
jle
ret
lods
mov
sar
dec
cmc
sbb
or
push
iret
jge
lods
pop
xchg
inc
aaa
mov
ljmp
jne
dec
dec
fisttpl
repz
les
add
xor
add
out
out
lds
xchg
push
xlat
shll
fdivl
rcl
pop
push
xadd
inc
insl
pushf
mov
xchg
or
hlt
bound
rorb
cmp
je
cmp
jbe
pusha
lahf
addb
or
out
inc
lods
insb
jecxz
jo
fcomps
dec
dec
mov
xchg
pop
xor
pusha
dec
test
cli
mov
push
xor
cli
mov
mov
mov
adc
mov
sub
and
mov
xchg
jle
addr16
jne
adc
sub
or
pushf
xlat
mov
cmp
nop
imul
pop
leave
dec
cltd
int
jbe
push
fs
out
jle
cmp
aam
jge
push
fiaddl
mov
adc
inc
mov
jl
js
dec
je
mov
adc
push
ja
cmpb
sub
aam
iret
js
adcb
stc
mov
pusha
cmc
fistpll
xchg
pop
cmp
in
in
pop
fwait
xor
sbb
add
xchg
iret
ret
jo
mov
inc
sbb
mov
push
jl
push
lret
push
loopne
ljmp
stos
ss
jbe
fdivs
jb
add
push
test
mov
popf
adc
dec
jg
imul
mov
shlb
sbb
ljmp
cmp
cmp
pop
inc
mov
fldl
lods
mov
cmp
xlat
repnz
pop
cmp
sub
pushf
xchg
push
das
push
outsb
push
jb
out
jb
xchg
jge
cwtl
mov
daa
mov
xor
mov
cli
pop
les
pop
mul
scas
sub
pop
bound
push
test
mov
adc
jnp
bound
xchg
add
cmp
and
jecxz
ljmp
mov
in
mov
jne
pop
push
fsubl
rol
into
xchg
push
test
dec
loope
pop
add
test
adc
cmp
cmpsb
mov
jb
and
sub
cwtl
push
or
test
daa
sbb
addr16
pop
call
aas
mov
hlt
test
pop
sbb
inc
jnp
mov
jle
sbb
lods
mov
xchg
xor
and
ret
fwait
shl
jge
jge
leave
adc
test
hlt
enter
xor
xchg
mov
stc
lods
pop
dec
shlb
cmp
dec
aam
xchg
int
test
rcrb
mov
test
and
xor
push
das
mov
dec
inc
jnp
mov
or
bnd
mov
cmp
enter
lods
xchg
mov
lahf
sahf
and
hlt
in
insb
and
cli
lahf
mov
mov
int3
add
push
dec
popf
cmp
lods
es
fcmovnbe
lcall
xchg
aam
dec
sub
mov
ljmp
sub
aad
adc
out
cmp
mov
jle
aas
fldcw
pusha
outsl
dec
pop
jo
push
and
pop
arpl
mov
sahf
mov
ja
les
jnp,pt
les
and
cmp
or
in
pop
movsl
icebp
xor
ja
xchg
mov
sahf
push
pop
push
cwtl
mov
adcl
repnz
pusha
and
mov
repz
inc
imul
push
pop
add
mov
mov
add
insl
lret
mov
ret
cmp
das
hlt
idivl
outsb
icebp
push
pop
push
test
mov
push
lock
sbb
lock
ss
or
add
repnz
loope
pushf
push
jge
pop
inc
cmp
inc
sub
sbb
push
cld
cmc
shrl
push
xchg
lock
adc
cmp
sub
lea
fdivs
xor
insb
xchg
adcb
jns
mov
cmp
movb
mov
inc
and
add
pop
dec
pop
inc
xchg
out
cmp
pop
xor
cmp
mov
rclb
fimull
out
or
pop
shlb
mov
jp
jno
ret
pop
sub
jge
les
pop
dec
cmc
js
jg
mov
and
mov
mov
pop
pop
pop
add
lret
jbe
xor
scas
cwtl
adc
cmc
push
xchg
jb
fbstp
lret
cmp
sbb
les
push
dec
pop
cmp
addr16
sub
xchg
jle
shl
inc
gs
jecxz
mulb
fdivs
mov
movsb
clc
pop
je
iret
inc
into
dec
mov
sti
pop
sbb
dec
repnz
ds
pop
fwait
data16
xchg
aas
int
pop
sbb
sub
pop
dec
icebp
sub
xor
or
and
cmp
shll
sub
push
xor
inc
aad
call
arpl
stos
mov
dec
lcall
sbb
mov
scas
jnp
or
int
hlt
in
mov
pop
mov
mov
aad
xor
adc
mov
adc
mov
or
and
lds
shrb
repz
mov
push
inc
jnp
out
test
fadds
inc
sub
jae
cmp
adc
movsl
into
xchg
fcmovnbe
lods
out
dec
and
cmp
inc
pop
mov
jno
sbbl
aam
jae
xor
pop
adc
jg
mov
outsl
cld
jle
sub
xor
ja
das
lea
adc
repz
sbb
mov
jecxz
loop
mov
mov
nop
in
lret
in
cwtl
shll
mov
mov
dec
push
arpl
mov
cmp
jl
fsubs
push
rolb
push
inc
push
xor
sub
loop
push
clc
test
sub
jnp
sub
push
movsb
dec
dec
hlt
jb
fdivrs
jp
jl
cltd
xor
jne
xchg
pusha
sti
pop
dec
sbb
push
push
dec
pusha
jg
adc
gs
insb
lock
push
push
fnstenv
cmp
into
mov
adc
sarb
pop
xchg
xchg
cld
scas
xchg
xchg
xchg
pop
fisttps
adc
sbb
aad
pop
mov
lds
in
lods
mov
scas
loop
cmp
or
fcoml
adc
and
fsubrl
stos
pop
jnp
xchg
lcall
or
iret
xacquire
add
and
ret
sub
mov
xchg
cmp
mov
and
mov
push
out
int3
adc
out
jge
jl
mov
jne
cmp
out
leave
jl
or
and
or
push
sti
add
jp
push
loope
or
jae
cli
jmp
in
mov
fcompl
dec
out
push
sbb
cmpb
push
shlb
cmc
das
inc
stos
xor
ss
pop
or
das
sub
cld
push
mov
mov
sbb
repz
xchg
and
or
dec
mov
add
and
negb
insb
mov
fimull
call
sarl
push
mov
lcall
jne
mov
sub
in
xlat
dec
and
test
lods
andl
imul
test
mov
ret
ljmp
cmp
mov
test
lret
ljmp
xchg
mov
push
insb
fcomps
pop
adc
movsb
fisttpll
add
inc
mov
insl
push
sub
cmpsb
popf
scas
inc
push
test
xor
push
test
push
dec
les
inc
inc
out
adc
mov
add
in
into
add
pop
push
or
mov
cli
es
outsl
mov
dec
leave
pop
mov
andl
addb
and
push
push
xorl
cs
faddl
sub
cmpsb
pusha
adcb
push
xor
add
call
mov
or
sub
es
sub
loope
dec
add
push
int3
mov
push
pop
rclb
out
insl
mov
sbb
dec
jp
iret
sbbb
add
xor
pop
and
xchg
adc
jmp
in
pushf
jbe
les
mov
and
xorb
xor
arpl
andb
sarl
mov
mov
jmp
sub
enter
daa
ret
pusha
mov
imul
cmp
inc
jp
sbbl
push
loope
dec
int
sub
dec
sti
sbb
inc
inc
xchg
je
test
mov
cmp
jb
cmp
sbbb
dec
push
mov
out
push
stos
mov
xor
subb
or
and
movsb
jmp
jg
loope
jecxz
xchg
pop
lcall
aad
daa
fcompl
out
jne
nop
out
jmp
or
or
fcompl
cmp
sbb
adc
stc
push
push
and
inc
jl
and
out
loopne
and
cwtl
outsb
cmp
mov
in
and
sub
mov
sub
inc
fldenv
xchg
sub
add
push
add
xor
push
rolb
jecxz
movlps
pop
mov
ljmp
shrb
push
es
xor
ljmp
sbb
cwtl
pop
push
fbld
mov
aad
adc
insl
sub
xchg
in
inc
iret
je
outsl
cwtl
jge
jo
dec
jno
xor
mov
push
divl
arpl
sbb
repnz
and
imul
jp
push
add
push
testl
pop
add
fldenv
mul
test
arpl
dec
test
lret
sub
mov
insb
out
mov
mov
int3
leave
mov
std
cwtl
add
mov
pop
push
mov
xchg
push
in
orl
roll
inc
mov
push
fcoms
pop
in
push
pop
lods
aad
jbe
lret
jns
xor
mov
fistps
pop
mov
jl
pop
push
inc
mov
cld
push
mov
movsb
jge
mov
mov
pusha
fildll
xchg
push
jae
out
popa
add
leave
sub
popa
push
adc
jg
in
mov
inc
mov
lahf
cmp
push
aas
xlat
and
ffreep
xchg
jne
aas
adc
daa
push
sub
dec
add
jmp
call
cmpl
dec
inc
xorl
scas
cmpsl
xor
sub
leave
cmpsl
pop
jg
out
dec
bound
sbb
addl
mov
push
ja
mov
cmp
cmp
fwait
push
jb
fists
icebp
out
jp
fwait
test
mov
xor
mov
rcll
arpl
pop
cwtl
sub
in
sbb
sbb
mov
loopw
jle
les
fisubrl
xchg
lock
jecxz
loopne
jge
xchg
scas
call
mov
cmpsb
inc
cld
popf
adc
sahf
mov
bound
pusha
fdiv
mov
int3
in
adc
push
mov
xor
into
mov
mov
mov
ljmp
mov
test
jmp
lock
cmp
movsb
test
int
jle
or
insb
repnz
push
push
into
xor
adc
lcall
push
and
fistpl
adc
mov
add
mov
jb
and
outsl
xchg
rorb
mov
fidivrs
mov
and
jbe
icebp
adc
cmp
jb
mov
aaa
push
mov
daa
cmp
add
fcmove
push
xor
adc
test
mov
inc
cmc
outsb
xor
xchg
sbb
lea
sub
leave
adc
cmpl
or
stos
lock
bound
lret
jnp
mov
xor
out
loopne
ss
mov
jbe
fdivrl
or
dec
push
fcompl
test
scas
mov
pop
pop
lods
mov
loopne
push
test
push
ret
mov
push
cmp
out
sbb
add
mov
xor
aad
mov
dec
es
inc
dec
jle
jbe
scas
pop
jp
xchg
data16
or
mov
lock
pop
hlt
push
test
testl
push
push
cmp
xor
adc
sub
mov
mov
ret
mov
xchg
add
mov
or
xchg
push
pop
and
or
jle
xor
pop
shl
or
addb
xchg
or
aam
add
push
stc
sub
test
mov
inc
jg
xchg
lretw
cmc
sub
and
inc
scas
push
ss
push
push
lret
arpl
mov
sbb
shll
dec
ss
cmp
movsl
notb
mov
aam
imul
add
jecxz
jmp
test
dec
loop
rorl
imul
gs
out
pop
jp
mov
mov
pusha
repnz
push
mov
or
xor
into
iret
pop
scas
jae
mov
inc
or
int
mov
add
sbb
sbb
push
sub
test
lea
popf
in
mov
mov
lahf
pop
sarl
xchg
mov
xor
push
xchg
mov
loop
or
mov
movsb
and
mov
je
mov
in
adcl
sahf
and
pop
or
push
add
and
lds
adcl
dec
ret
mov
mov
loope
inc
jmp
loop
repnz
push
test
sub
pop
hlt
pop
rclb
aas
dec
mov
cmp
aam
cmpsl
push
xchg
jmp
push
dec
mov
repz
pop
mov
hlt
pushl
add
inc
xlat
inc
push
lods
hlt
xchg
pop
and
mov
mov
daa
or
into
test
or
sahf
test
xchg
or
inc
xrelease
ret
inc
cmpsl
test
sti
fdivrl
mov
bound
mov
pop
push
loopne
data16
imul
jle
insl
shl
sbb
shlb
addl
mov
jno
scas
nop
out
pushf
push
xchg
push
pop
out
movsl
mov
jg
dec
in
inc
push
pushf
mov
pop
fisubs
jne
jl
pop
or
jb
add
pop
mov
pop
mov
jp
xchg
std
or
sahf
roll
retw
fldt
int
xchg
or
aaa
inc
adc
sbb
xchg
cmp
test
leave
dec
and
lret
or
and
fdivp
popa
std
mov
xor
inc
mov
enter
sub
sbb
jl
lahf
dec
or
mov
int
pop
add
cli
xchg
cmp
lods
jg
jecxz
jg
xchg
mov
testb
test
outsb
stos
sarb
pop
add
pop
pop
lret
jp
push
aas
mov
inc
pop
in
mov
and
or
xchg
in
push
stos
pop
ret
movsl
or
imul
mov
sub
lret
out
in
aad
jb
adc
mov
jl
mov
hlt
pop
cmpsb
shrl
sub
int
test
outsb
push
mov
cmc
add
scas
adc
addb
push
data16
pop
sub
out
xor
add
mov
cmp
cwtl
shll
loop
sarl
mov
lahf
insl
sbb
lds
pop
xor
lcall
mov
jl
nop
das
leave
jns
cmp
es
je
dec
lret
ds
sbb
jp
xchg
rcl
sti
push
ror
int
mov
scas
pop
cli
cmc
xor
cwtl
xchg
and
ja
mov
aad
imul
or
out
sahf
bnd
push
jnp
mov
xchg
lea
push
arpl
mov
add
clc
add
jnp
pop
test
repz
enter
in
scas
adc
mov
xchg
adc
xchg
cmovge
mov
insl
outsl
iret
ud0
and
ja
insb
mov
shll
pop
sbb
nop
sbb
adc
cltd
mov
mov
in
cmp
lret
cmp
mov
mov
fwait
add
jnp
in
mov
cwtl
jle
jbe
cli
pop
imul
jl
xchg
push
push
add
outsb
dec
pop
std
cmp
shlb
inc
stos
push
lret
je
popl
jp
hlt
sarb
insl
lds
iret
repnz
push
nop
sub
lods
push
and
mov
push
fldenv
stc
add
push
sbb
dec
scas
adc
insb
add
dec
xor
xlat
lahf
xchg
mov
add
push
push
idivb
or
icebp
mov
dec
ss
insl
in
fildll
dec
xor
jno
clc
jl
sbbb
int3
jl
pop
out
fisubl
aaa
out
pop
mov
das
push
sub
repz
mov
xor
add
xor
data16
das
push
push
data16
fsubl
dec
ds
cmp
adc
out
jge
adc
mov
push
js
xchg
cmpb
sbb
aam
std
push
pop
dec
cli
in
push
pop
addr16
repz
scas
push
out
ss
xor
xchg
jnp
cwtl
cld
sub
cmpsb
mov
adc
lea
inc
dec
xlat
sub
mov
sub
adc
les
loopne
js
adc
add
fdivl
daa
lods
rcrl
push
out
jae
movsl
test
mov
rorb
adc
push
adc
and
loope
ret
xchg
sbb
xor
mov
push
mov
and
mov
js
test
and
mov
sub
and
xor
push
aad
sub
adc
inc
jno
lods
int3
jb
inc
mov
cmp
mov
fisttps
xor
pop
nop
ss
imul
in
outsl
xchg
sysexit
in
nop
scas
es
sahf
cmp
mov
mov
aad
xor
xchg
test
push
jno
mov
divl
adc
cmp
push
jecxz
adc
mov
sbb
mov
addl
sub
dec
bound
mov
orb
sbb
mov
xchg
jb
insl
shl
xchg
test
sti
push
sahf
les
xchg
mov
fldl
in
add
insb
addl
xorb
rorl
jns
mov
xlat
out
mov
movsl
add
lret
push
jb
dec
sub
xchg
cmp
jnp
adc
dec
xchg
into
jmp
out
out
fmulp
in
in
inc
clc
inc
call
adc
jmp
lret
out
push
loopne
cmpsl
pushf
push
mov
cld
lcall
mov
imul
xchg
test
pop
pop
pop
mov
sarb
and
xor
xor
lds
sbb
lods
sub
inc
incl
int3
inc
les
xor
aaa
adc
xchg
lret
inc
nop
xor
ret
and
shlw
cli
inc
cs
ds
xchg
cmp
movq
mov
sarl
xor
clc
in
inc
pop
pop
cmpsl
cmpb
pop
pop
sbb
ss
xor
iret
xchg
scas
bound
aam
lea
rcll
ds
aam
xor
or
push
pop
xchg
or
mov
jns
or
out
aas
xor
jg
or
inc
add
and
jp
xchg
ds
mov
sub
add
inc
xor
adc
jno
out
ret
loope
mov
jae
testb
jge
push
cmpsl
sbb
mov
js
cltd
outsb
mov
cwtl
and
xchg
inc
hlt
movsb
aam
cmpsl
lret
and
or
in
jns
add
jmp
inc
or
add
hlt
call
imul
lcall
cmpsb
scas
imul
mov
leave
ret
cmp
sahf
inc
roll
adc
test
js
cli
jns
inc
int3
push
lea
flds
mov
mov
sbb
cmp
push
add
jmp
insl
cli
pop
inc
push
ljmp
fldl
and
mov
xchg
dec
mov
dec
jno
mov
dec
add
pop
dec
sub
push
or
push
jg
xchg
inc
mov
pop
mov
add
cmp
mov
mov
ds
xor
xchg
mov
lret
and
daa
sub
fldlg2
jge
das
sbb
xchg
xorl
mov
mov
xchg
sbb
mov
inc
xchg
movb
sub
or
fsubrs
pop
cmp
cmp
jbe
mov
jl
nop
shl
jb
loope
je
fbld
das
sti
or
adc
and
inc
sbbl
sbb
push
adc
push
roll
addl
fdiv
inc
je
dec
add
xor
cmpsl
repnz
cld
dec
adc
ljmp
cmp
add
mov
pushf
cmpsb
in
adc
dec
aaa
pop
imul
scas
xor
dec
ds
mov
xlat
and
pop
or
mov
rorb
sbb
inc
jae
in
inc
mov
outsb
subl
pop
sbb
lret
in
add
xor
push
cmp
sbb
adc
push
insb
addb
cmp
pop
dec
push
out
flds
and
cmp
or
push
jecxz
addr16
mov
dec
mov
adc
pop
cwtl
out
mov
outsb
pop
sub
aam
data16
xorl
mov
enter
push
xchg
push
cmp
test
test
push
data16
add
xor
std
cmp
test
movsl
in
inc
outsb
into
or
push
cltd
repnz
mov
insl
int
dec
sbb
mov
lods
in
sub
sbb
jne
dec
shrb
iret
rcr
inc
xor
mov
mov
inc
push
adc
push
add
xor
adc
push
push
push
cmp
movsl
cltd
ljmp
scas
movl
jo
movsb
or
adc
fists
ss
dec
lret
xchg
inc
xchg
nop/reserved
addl
or
pop
jnp
outsl
and
ja
dec
mov
xchg
js
cwtl
and
int
sub
mov
adc
push
and
cmp
dec
fwait
adc
add
jmp
push
stos
push
lds
jnp
jns
out
ss
stc
rcrl
dec
es
xchg
mov
cmp
dec
and
push
or
mov
jge
mov
jl
sbb
jae
pusha
adc
into
faddl
in
add
ja
xchg
or
lods
and
iret
adc
fs
add
jecxz
pop
cmp
sti
or
int3
dec
in
cld
ret
jno
iret
lret
and
cld
xchg
inc
fwait
les
je
hlt
mov
adc
push
ret
add
mov
jno
mov
out
mov
frstpm(287
outsl
fs
roll
sbb
shl
mov
lahf
fs
add
cmp
imul
jno
add
rcrb
mov
mov
mov
test
pop
xchg
pop
jle
insl
ds
mov
addr16
cld
sbbb
mov
mov
push
aas
shll
iret
loop
mov
test
scas
into
xchg
mov
xchg
sub
adc
into
jp
mov
xor
mov
add
lahf
pop
leave
jl
adc
out
cltd
and
stos
ret
inc
pushf
cmpsl
sbb
sar
rcrl
ret
add
out
mov
jo
in
int3
xchg
xor
cwtl
sub
inc
push
repnz
fnstsw
mov
dec
repnz
dec
jg
int
inc
push
int
fiaddl
xor
sub
dec
push
sbb
je
jno
stos
adcb
pop
jle,pt
jbe
ds
pop
in
cmp
test
cmpsl
push
rorb
aaa
cmc
das
dec
je
test
mov
lcall
cmpsl
in
or
inc
in
int3
insb
push
xchg
xor
dec
scas
push
outsl
data16
add
pop
xor
cmpl
jbe
mov
mov
pop
inc
std
mov
les
leave
cld
cmp
mov
dec
ljmp
push
sub
shl
scas
mov
data16
call
mov
mov
xlat
and
int3
cwtl
add
jmp
andb
inc
ret
cmpsl
sub
imul
les
cli
loope
call
clc
sub
xchg
int3
add
nop
and
aad
mov
add
jnp
testb
push
mov
and
call
and
xor
dec
fidivrl
int3
push
sbb
dec
addr16
popa
dec
je
in
or
and
or
mov
add
cmp
adc
mov
cwtl
mov
lcall
jl
cmpsb
jg
scas
mov
ret
repz
or
sbb
push
stos
aaa
mov
scas
sub
sub
cltd
cmp
mov
stos
xchg
repnz
add
flds
mov
push
icebp
xor
dec
lods
lods
xor
rcrb
outsb
arpl
lods
jmp
or
aam
jecxz
xchg
mov
push
mov
add
jns
jl
out
das
loopne
iret
stos
sbb
xor
shl
jne
hlt
pop
sbb
cmpsl
sub
mov
jecxz
test
aaa
push
pop
sbb
mov
in
fsts
adc
mov
dec
sub
pop
in
jl
or
mov
jb
mov
cwtl
cmovg
out
sub
inc
mov
mov
push
cmp
daa
out
xchg
imull
fstpl
xlat
popf
cmp
mov
add
or
push
cmp
popf
das
adc
loop
aad
outsl
adc
and
and
and
les
fldenv
outsl
push
pop
push
lods
pop
dec
add
xchg
aad
test
bswap
or
in
movsl
stos
leave
cmpsb
bound
mov
loope
mov
jge
adc
pop
adc
bound
xchg
jae
push
xchg
nop
gs
fiaddl
enter
sub
sbb
addr16
fidivl
mov
mov
cli
mov
icebp
sub
in
adc
testb
hlt
stos
inc
jo
push
fdivrl
outsb
adc
adc
xchg
jns
fcoms
jbe
insb
add
shl
ljmp
gs
push
xor
cmp
hlt
subl
xor
outsl
fldcw
cmp
push
bound
clc
mov
pop
xchg
pusha
inc
inc
jge
movsl
mov
shrb
inc
xchg
sti
icebp
lock
mov
push
or
xlat
sbb
mov
es
imul
jno
mov
or
mov
xchg
dec
cld
mov
jge
cs
mov
cmpsl
ret
into
insl
fdivs
add
fcomps
sbb
xchg
fmull
les
pop
rcrl
cmp
lret
icebp
icebp
and
sub
or
fcomps
dec
xchg
bswap
sub
fwait
inc
mov
dec
push
repz
dec
mov
or
shl
jle
popf
jge
test
adc
mov
les
lock
sub
mov
mov
shrl
mov
sub
jecxz
iret
pop
push
stos
enter
lret
jge
xchg
xchg
mov
aam
js
cmp
cmpsb
and
idiv
mov
or
mov
lret
push
test
incl
mov
mov
xchg
xchg
fldt
andb
mov
pop
pop
cli
nop
daa
push
push
jae
or
sahf
jns
mov
ds
add
cmp
scas
inc
psubusw
into
sbb
sbb
bound
scas
popa
or
pop
sbb
in
repnz
fldl
bound
clc
enter
bnd
mov
jnp
ss
imul
movsl
mov
mov
out
lret
sbb
subb
jo
jl
mov
xchg
pop
mov
push
ljmp
popf
ror
outsb
jno
in
das
push
mov
push
rorl
adc
adc
cmc
fidivl
dec
xchg
stos
clc
testl
leave
cwtl
jmp
aam
mov
je
addr16
cmc
add
add
pop
mov
int
cmp
add
mov
lea
xchg
sbb
inc
push
fisubl
aaa
jle
mov
loopne
mov
jmp
dec
sarb
lcall
mov
xchg
push
mov
push
cmp
add
ds
cmpsl
mov
sub
fisubs
inc
sub
cvtps2pd
and
pop
add
dec
and
ljmp
idivb
pop
jmp
pop
daa
ja
insl
pusha
in
jle
jbe
jl
pusha
cmp
fsubrs
mov
call
and
faddl
mov
mov
cli
cs
xor
adcb
adc
xchg
pushf
ret
dec
sbb
jle
outsb
cltd
dec
jns
into
iret
xor
xor
shrb
and
ds
test
lods
jb
insb
pushf
cmp
add
xlat
mov
jb
mov
rcl
pop
lahf
pusha
sub
adc
cwtl
xchg
popf
mov
filds
lods
add
push
jo
push
cmp
inc
aad
and
dec
pop
cltd
fdivrp
popa
jecxz
or
lods
dec
jb
jb
in
sbb
cmp
push
mov
inc
pop
je
stc
scas
in
fsts
pop
popf
fisubrl
cmp
dec
jge
fs
sbb
test
lret
pop
or
xchg
data16
sarl
dec
xchg
lods
aad
pop
idiv
in
imul
xchg
xor
fsub
testl
sbbb
cld
cmpsl
iret
adc
pop
scas
push
lret
adc
arpl
outsb
jmp
clc
sbb
pop
jno
sub
outsl
inc
inc
mov
aad
outsb
test
jl
push
pop
adc
repz
and
jge
mov
and
jg
filds
pop
lds
ret
incl
iret
add
pop
cmp
sbb
fwait
ljmp
inc
out
mov
insb
add
jle
mov
dec
dec
cltd
in
cmp
call
mov
mov
pop
xchg
filds
cmp
sub
and
xor
mull
leave
pop
cmp
cli
sub
jbe
icebp
xchg
insb
mov
mov
sbb
jecxz
mull
jecxz
xchg
xchg
test
xor
xlat
jbe
push
or
push
sub
cltd
test
jmp
mov
mov
int
aas
jmp
sbb
insb
icebp
jl
nop
jo
cmc
repnz
add
loop
jb
andl
in
adc
mov
mov
inc
div
and
sub
repz
mov
out
push
cli
push
sahf
outsb
jle
mov
add
mov
es
cmp
adc
test
stos
add
lret
in
cmp
xchg
fwait
jo
cmp
sbb
dec
or
xchg
adc
push
or
sahf
rolb
cmc
test
dec
mov
es
cmp
fxch
aas
add
cmp
push
in
notb
les
bound
add
imul
jmp
ficomps
dec
ss
cmp
dec
lahf
xchg
aam
aam
jnp
popf
add
cmpsb
jb
pand
pusha
push
cld
sub
mov
mov
lret
or
cs
xor
lahf
dec
pop
adc
or
mov
mov
mov
pop
popf
lcall
sub
mov
cmpsb
frstor
pop
nop
jg
inc
sti
insb
sbb
cmp
pop
stos
popf
or
pop
cmpb
pushf
xchg
push
repz
xor
xchg
js
push
or
daa
lret
addps
int
sbb
mov
out
jge
arpl
cmp
aaa
inc
sub
jnp
js
pop
or
add
push
jne
xchg
out
into
and
int
sub
scas
scas
jle
xchg
test
lods
pop
mov
cmp
mov
fisubrl
dec
add
test
cmp
and
cmp
divl
push
movsl
lds
test
mov
inc
add
inc
adc
les
mov
loope
popf
mov
xchg
ss
mov
test
xchg
add
lods
xor
imul
std
imul
or
and
int3
orl
mov
jmp
in
fsub
pop
scas
pop
insl
push
and
cltd
outsl
lea
mov
repz
neg
testb
stos
or
mov
lods
insb
xchg
cld
ja
add
dec
test
mov
xor
xlat
xchg
mov
sarl
inc
cmp
jo
mov
pop
iret
mov
adcb
fisubs
decb
sti
insb
jb
fimuls
cmc
pop
sti
dec
ljmp
aad
xlat
sbb
cwtl
cmp
fucomi
lock
fwait
and
lods
adc
lods
nop
xor
scas
or
std
insb
in
fimuls
jmp
adc
xor
cld
cmp
push
add
mov
popw
or
movsb
push
outsl
adc
dec
out
and
aad
outsl
push
shr
mov
push
movsl
test
inc
sub
cltd
insb
inc
jmp
mov
addr16
or
ret
xchg
ds
cs
xor
jno
mov
mov
shr
push
imul
push
pop
fs
mov
dec
dec
adc
push
push
lahf
xchg
dec
jno
fsubr
xlat
mov
and
movsb
or
inc
iret
inc
mov
stc
inc
jmp
test
sti
inc
mov
fdivrs
jno
jno
xchg
mov
xchg
lds
push
cmp
lret
add
push
cwtl
les
add
and
lods
fistl
cltd
or
xchg
mov
and
loop
and
jno
xchg
push
loop
cld
out
pusha
ret
fcmovnu
cmp
xor
inc
ds
in
cmp
xchg
lret
arpl
ds
jp
inc
fisubrs
or
nop
nop
call
stc
pop
push
xor
xchg
ss
add
jne
ret
iret
adc
mov
and
lds
pop
fcoms
pop
push
push
or
dec
xlat
sbb
in
adc
sub
xor
adc
jg
cltd
sub
repnz
inc
dec
jb
jp
testb
add
sub
and
xchg
cmp
lods
push
mov
jg
dec
mov
mov
mov
mov
sbb
inc
imul
and
loop
xchg
lahf
cmp
sub
and
arpl
inc
mov
test
hlt
cmpsl
mov
xchg
ss
mov
push
ret
lds
inc
jg
sub
mov
xchg
dec
shll
mov
inc
inc
cld
and
push
std
iret
ret
or
bound
pushf
pop
pop
sbb
push
insl
jo
gs
sub
inc
loope
sahf
jmp
call
dec
enter
lret
out
arpl
mov
add
mov
iret
xchg
addl
push
xchg
inc
pop
mov
pop
xorl
fimull
add
pop
sbb
js
mov
cltd
mov
mov
loope
push
data16
aam
repnz
imul
dec
addr16
lret
mov
jl
loopne
jae
shll
outsl
adc
mov
sbb
mov
pop
inc
xchg
das
inc
sub
dec
and
add
xor
aad
jmp
icebp
shrb
js
and
mov
push
dec
and
pop
repz
adc
fstpt
dec
loopne
fbld
les
ds
pop
lret
pusha
lock
fldt
rorl
xorl
lret
in
mov
sbb
mov
jl
mov
jge
mov
imul
test
fwait
sbb
xchg
jmp
xchg
pop
pop
clc
std
popa
xchg
test
bound
jmp
aaa
push
ss
mov
loopne
mov
int3
mov
cli
add
adc
inc
fbld
push
mov
pushf
and
sbb
push
dec
addr16
addr16
ja
xchg
cwtl
dec
sbb
je
es
popa
xor
pop
xorb
rcrb
push
sbb
loop
and
js
xchg
das
enter
cmp
cld
xchg
adc
cmp
daa
jmp
push
jae
adc
lds
or
sbb
mov
add
xchg
xchg
mov
test
or
jb
sbb
sti
adc
movsb
jecxz
je
add
out
js
add
mov
or
fisubs
insb
mov
and
lea
out
xor
outsl
xorb
fcoml
and
cmp
mov
inc
repnz
subb
inc
lods
lods
mov
fcomi
mov
fnstcw
push
out
xor
imul
sbb
jb
mov
lock
das
ja
pop
sbb
pop
stos
lods
out
mov
shll
insl
insb
push
cmp
mov
inc
sub
pop
mov
cmpsl
or
inc
lahf
xchg
xor
lret
sub
mov
sbbl
cs
cmp
cltd
xchg
jae
jge
lock
jl
popf
jb
mov
out
fisubl
push
jmp
sub
dec
cld
jb
fdivs
cmp
imul
arpl
dec
jl
filds
stc
lea
scas
mov
or
and
bound
sub
popa
or
pop
mov
push
pop
out
imul
mov
leave
push
adc
mov
push
ret
out
repz
pop
cld
add
push
add
mov
jne
mov
mov
pusha
xchg
sub
and
testl
dec
sub
jbe
mov
in
popa
fiadds
iret
push
jecxz
jmp
js
rcrl
outsl
xor
rcr
lea
subb
mov
ds
mov
je
push
int
add
in
jns
and
mov
hlt
notl
and
scas
and
jne
daa
xor
lret
shrl
mov
inc
jle,pn
aaa
pusha
insl
lret
inc
push
xor
lock
mov
icebp
dec
push
scas
jo
and
pushf
insb
aas
jb
loopne
pop
dec
mov
loope
sarl
sbb
pop
push
add
xor
xor
mov
mov
loope
ficoml
inc
mov
pop
mov
sar
pop
call
idivl
push
les
bound
fdivrs
sbbl
and
xorb
mov
jns
imul
mov
add
mov
sub
dec
daa
push
lock
cltd
or
mov
cld
dec
inc
or
mov
mov
test
mov
jmp
nop
push
in
out
fdivrs
das
jecxz
cld
xor
pop
lods
shll
leave
stos
rorl
test
stos
fldenv
dec
cmp
sub
mov
xchg
sti
das
stos
sbb
int3
test
sahf
aaa
popl
mul
mov
aad
insl
je
popf
js
fs
and
xchg
fsubrl
sbb
int3
setbe
adc
mov
xchg
fwait
inc
jl
xchg
ret
dec
cmp
pushf
dec
jnp
adc
pop
shrb
pop
xchg
jmp
cld
jno
stos
add
pop
mov
mov
dec
insb
xor
ss
je
jp
leave
sbb
shrb
in
shlb
in
dec
aam
aas
push
les
aas
cmp
xchg
dec
mov
movsl
ds
out
insb
pushf
pop
xor
xchg
and
inc
jg
fdivs
pop
xchg
sarb
testl
xor
jl
shrl
ja
idivl
clc
aad
or
bnd
push
mov
push
xor
data16
add
aad
inc
movsl
jbe
sub
mov
repz
cmp
mov
push
jno,pt
popa
jae
jecxz
cmp
imul
jb
dec
inc
iret
mov
mov
xchg
leave
mov
cli
aaa
icebp
daa
mov
inc
scas
push
int3
pop
shlb
je
add
ret
lods
and
ljmp
test
push
sbb
cld
cs
fimull
test
js
mov
push
jge
test
fisttps
popa
movsl
pop
xchg
sahf
stos
jle
jle
decb
mov
lret
lods
xor
push
lahf
mov
mov
mov
fisubrs
push
ljmp
dec
punpckldq
pop
push
adc
adc
adc
sub
jns
pusha
sbb
pop
jp
dec
fidivrs
sub
aaa
mov
push
xor
pusha
sub
int3
cmp
subb
pushf
popa
jnp
lahf
xchg
or
or
dec
xchg
or
mov
cwtl
mov
std
loope
pop
cltd
call
lret
cs
sbb
sbbl
jp,pt
enter
dec
subl
fldcw
lahf
inc
jecxz
fstpt
and
out
and
stos
mov
lahf
sbb
xor
mov
add
out
fwait
movsl
fdivrp
movsl
push
out
mov
cmp
les
sbb
lds
or
ret
jb
and
rcrb
cmp
sub
add
lahf
in
sbb
dec
bound
adc
adc
fs
into
or
push
dec
shl
sub
out
movsb
jg
dec
add
js
in
push
repnz
lcall
inc
daa
cli
lods
call
ret
xchg
int3
sbb
sbb
xchg
push
jmp
fcomps
outsb
jae
push
or
cltd
or
cmpsl
jl
insb
and
ss
mov
loope
dec
mov
jbe
xor
in
pop
mov
fucom
dec
cmc
in
pop
mov
repz
imul
cmp
test
test
mov
popa
jge
pop
insb
cmp
adc
sub
jne
xchg
aad
loope
pop
ficoms
inc
push
push
fwait
xchg
mov
jecxz
fadds
jmp
xchg
mov
cwtl
jno
push
mov
jb
mov
addr16
enter
in
lcall
sub
xchg
mov
scas
aam
mov
jne
and
call
cmc
ficompl
mov
jnp
dec
sbb
and
or
stc
or
sub
and
cmp
mov
fwait
push
sahf
add
in
mov
mov
int3
imul
dec
popa
push
pop
cmp
outsl
dec
jmp
adc
fwait
lods
xchg
mov
jnp
xchg
rolb
clc
rcrb
mov
ret
lock
inc
xchg
adc
cmpsl
popl
outsb
loope
fnsave
mov
mov
xchg
lods
jne
cmp
test
xchg
jb
jb
xchg
shl
daa
add
pop
push
and
xor
mov
aam
imul
dec
mov
imul
movsl
jp
lods
je
xchg
sti
cmp
lea
mov
xchg
push
mov
cli
jo
das
cmpsb
push
shll
divl
pusha
inc
mov
pop
and
adc
mov
aaa
in
dec
dec
push
mov
xor
lret
adc
xchg
mov
mov
xlat
mov
into
punpckhdq
mov
and
cmp
jge
shll
cmp
mov
xchg
inc
lcall
lahf
repnz
movsb
in
lock
scas
into
sti
dec
ja
aad
or
mov
xchg
mov
add
jb
icebp
jmp
mov
jp
call
mov
into
and
cmp
es
push
dec
mov
dec
popa
add
lret
lcall
sahf
sbb
pop
scas
outsl
or
dec
mov
push
and
test
lahf
cs
ss
push
aaa
mov
adc
mov
loop
mov
xchg
mov
xor
repz
jl
idivb
loop
cltd
sub
das
test
negb
pop
cmp
dec
xchg
shl
mov
and
icebp
pushf
sub
xchg
sub
push
movsb
nop
je
js
jmp
enter
inc
xor
xchg
jbe
fidivl
sbb
les
cmp
scas
jl
mov
add
fistpll
enter
push
inc
ss
pop
xor
test
mov
dec
test
pop
mov
jmp
test
jmp
fistpl
mov
inc
test
std
shlb
gs
pop
sbb
cmpsb
dec
loop
lret
cmp
pop
adc
out
add
orl
inc
lock
fld
and
rorl
incb
jno
pop
ss
sbb
push
mov
lret
inc
divb
xchg
inc
loopne
inc
dec
lods
outsb
mov
fwait
cs
cmp
ret
mov
jl
jecxz
inc
push
insl
test
fstp
pusha
test
andl
jno
jo
mov
or
arpl
xchg
leave
repnz
ss
test
cmc
and
ljmp
ret
scas
lock
outsl
cmp
jb
out
inc
dec
pop
addr16
inc
sti
mov
into
icebp
sub
sbb
add
add
mov
cmc
pusha
push
scas
sbb
fnstcw
xchg
add
mov
xchg
push
adc
stos
outsb
outsl
mov
push
loope
pop
stc
inc
arpl
pop
mov
mov
ret
lods
fbstp
jge
into
mov
outsl
jge
jge
inc
mov
push
data16
inc
jge
inc
or
cmpsl
stc
insl
sahf
sub
mov
sarl
out
adc
mov
xor
cltd
add
imul
mov
dec
push
mov
test
cmp
or
xchg
data16
jo
icebp
sbb
loopne
stc
out
leave
fwait
push
xor
add
mov
mov
fsubrs
out
aam
or
hlt
pop
jmp
std
pop
sbb
int3
jecxz
mov
popf
sbb
mov
pop
nop
div
pop
and
xchg
jnp
adc
mov
push
xchg
pop
lods
or
cmp
mov
andb
jmp
push
in
cltd
push
cmp
shlb
nop
jno
out
adc
das
jno
ljmp
or
mov
inc
fcmovbe
test
repz
lods
jmp
push
fs
sar
xchg
iret
gs
jbe
add
ror
scas
adc
fldcw
pushf
subl
lret
and
push
mov
sbb
lock
jl
addr16
lret
inc
or
jbe
data16
insl
ja
push
xor
ret
inc
jb
cmc
test
sbb
cmpsl
shl
fmull
lods
notl
dec
pusha
in
mov
lret
inc
xor
stos
push
dec
xorb
push
mov
sbbl
push
pop
ss
sub
das
mov
sbb
loop
int
add
mov
and
inc
push
and
jae
jg
pop
cld
sysret
mov
loopne
adc
notb
lods
nop
and
shrl
mov
mov
gs
xor
push
into
lock
fdivr
shlb
lds
jecxz
push
pop
sbb
insb
cmc
push
out
mov
pop
add
ret
into
cmpsb
jns
xor
shlb
mov
jne
scas
pop
into
popw
mov
jle
fsubrl
loope
btr
push
ret
lret
ss
test
xor
push
push
cmp
cwtl
add
jns
sbb
xchg
pop
xchg
lock
mov
dec
leave
sub
mov
xor
mov
mov
pop
jno
xor
adc
add
mov
add
inc
jnp
iret
pop
jp
lock
pop
pop
ret
and
pushf
adc
cld
int3
mov
stc
test
bound
push
lods
stos
xor
mov
ja
jmp
scas
sahf
add
cmp
or
scas
lock
xor
cmp
cmp
jle
mov
pusha
js
outsb
pop
fmul
scas
andl
ret
jmp
out
add
adc
adc
mull
dec
pop
aaa
dec
add
mov
mov
lahf
add
add
xchg
inc
jbe
popf
inc
push
sarb
lods
dec
xor
dec
cli
push
inc
jae
inc
jnp
loope
sbb
mov
cmc
jbe
and
xchg
in
xchg
into
inc
mov
mov
pop
pushw
dec
push
push
push
repnz
fldl
push
loope
divl
enter
mov
shlb
inc
mov
lcall
dec
mov
mov
mov
adc
popf
test
adc
stos
mov
pop
dec
jp
sub
lea
in
jp
dec
adc
addr16
icebp
test
pop
div
inc
test
xor
jle
jne
psubd
mov
cmc
dec
push
or
push
or
sets
or
xchg
loop
in
pop
icebp
jg
push
mov
sti
jg
jns
cmp
dec
push
mov
rcrb
leave
inc
enter
gs
xchg
nop
cmp
hlt
or
dec
jb
cwtl
sti
pop
xchg
pop
inc
leave
movsb
adc
cmp
lret
notb
xchg
icebp
mov
dec
loope
add
and
fwait
jns
adc
repnz
pop
mov
fimull
ja
inc
or
xor
lock
ds
lret
xchg
xor
xor
lret
fcoml
movsb
pushf
mov
sbb
std
rorl
sub
inc
mov
shll
inc
js
out
push
std
xorl
jbe
rcrl
adc
add
pop
jnp
push
add
rorb
jno
addb
inc
in
jb
push
in
sub
insb
bound
bound
dec
cmpb
shl
lahf
test
jmp
incl
mov
pop
push
jno
xchg
xor
xchg
jno
pop
push
jmp
adc
push
lds
movsb
std
inc
push
mov
std
jge
ja
outsb
lock
xchg
dec
sahf
xor
adc
std
outsb
jno
push
xchg
aaa
orb
jnp
pop
bndstx
fildll
cmp
inc
pop
inc
inc
int3
mov
push
pop
leave
adc
push
jg
cli
mov
adc
pop
add
loopne
movzwl
negl
nop
loopne
adc
call
int
stc
outsb
out
pop
jecxz
jle
clc
out
add
cmpsl
and
push
rorl
sbb
sbb
xorb
sub
stos
orl
lds
setnp
ss
jne
cwtl
adc
mov
lds
xchg
lahf
test
jl
mov
xor
decl
fbld
int3
pop
mov
sub
and
lods
shlb
fs
cmpsl
test
pop
mov
test
xchg
push
lods
jmp
iret
dec
sub
pop
bswap
xlat
stos
dec
mov
push
pop
jne
mov
lea
stos
out
fistpll
pop
or
sti
xchg
adc
pop
cmpl
lret
testl
in
add
and
jae
test
repz
or
clc
jae
xchg
adc
lock
xchg
jp
fisubrl
mov
shrb
mov
mov
out
and
sbb
andb
dec
es
inc
push
pop
fimuls
mov
mov
mov
dec
cmpsl
cmp
xchg
movsb
lcall
or
inc
sbb
repz
sub
out
pop
sub
and
adc
fcoms
cmp
push
xchg
orb
inc
mov
inc
and
iret
push
mov
mov
push
cmp
mov
or
arpl
insb
adc
gs
xchg
jno
xchg
jnp
xor
fwait
jno
jge
inc
outsb
loopne
xchg
mov
stc
pop
mov
xor
ret
enter
test
mov
sub
test
fisttpl
mov
xor
fadds
fsubrs
xchg
cwtl
pusha
add
jno
or
mov
lcall
clc
and
push
subl
aad
js
xchg
add
mov
jb
or
add
jns
pushf
mov
popf
jne
mov
lea
xchg
fsub
ss
add
clc
xchg
mov
popa
pop
loope
xchg
rcrl
push
adc
int
loop
in
dec
orl
pop
xchg
sub
xor
clc
mov
cmp
mov
shll
aad
scas
test
sbb
imul
lret
xor
hlt
or
gs
jns
jge
and
mov
hlt
mov
jae
mov
sub
adc
inc
mov
mov
iret
fistpl
test
sbb
pop
add
test
enter
outsb
in
out
xchg
adcb
loopew
pop
cmp
pop
xor
mov
pop
cli
and
test
jg
pop
mov
mov
dec
cmp
movsb
jns
xlat
in
xchg
outsb
push
mov
mov
push
add
test
cmp
loop
cmp
lods
mov
jns
xlat
push
push
lret
mull
jmp
dec
rcrl
addb
and
fcoml
out
pop
xchg
enter
stos
mov
mov
cmp
sbb
sub
jmp
fdivrs
orps
jg
mov
mov
cmp
pop
mov
mov
out
test
push
pop
cltd
add
jns
sti
pop
aam
pop
scas
and
out
xchg
dec
push
aaa
shlb
mov
xchg
lock
aad
xchg
mov
sbb
gs
fs
inc
pop
popf
sarb
cmpsb
jns
add
jne
mov
ret
rcl
push
mov
adc
mov
or
stos
cltd
pop
test
out
inc
testl
push
inc
addr16
xorb
dec
push
enter
dec
sbb
mov
adc
into
fsubs
xor
xchg
stc
mov
stos
lds
aaa
xchg
icebp
clts
js
lret
add
ja
or
flds
loopne
cmp
jb
aam
stos
jmp
jnp
jmp
lret
pusha
jg
fildl
out
cmp
js
imull
cmp
arpl
and
je
ljmp
mov
cmp
xchg
shrb
push
aaa
or
aaa
sbb
mov
pop
popa
xor
pop
bound
push
add
xor
and
jl
add
jb
imul
cmc
mov
inc
outsb
jbe
xor
xor
cmc
scas
sbbb
test
sarl
xchg
jmp
fsubrp
xchg
jecxz
add
adc
adc
sbb
mov
andl
pop
lea
pop
or
xor
rol
sbb
push
or
cmpsl
outsb
out
sahf
mov
mov
add
mov
aam
mov
and
clc
push
sahf
and
filds
clc
pop
add
cmp
sarb
mov
rcr
rcll
cmpsl
pop
sbb
mov
mov
jle
mov
in
sub
jp,pt
sbb
inc
jnp
lds
aas
xchg
fsubl
mov
nop
adc
fldl
inc
jmp
pop
inc
or
sbb
pop
cmp
std
push
or
push
sarl
and
lock
ds
rol
mov
mov
adc
aad
push
mov
popa
sbb
xchg
mov
cmp
std
mov
or
xchg
fninit
out
jecxz
push
scas
out
and
stc
loop
mov
cmp
ret
sti
mov
adc
push
lcall
loop
push
or
push
pop
outsb
push
pusha
dec
add
jno
mov
lret
lret
clc
and
loope
push
lods
or
xchg
pushf
mov
sti
repz
xor
sbb
push
addr16
and
pop
sub
lock
mov
sbb
cld
fsubrp
ja
dec
add
xor
xchg
xchg
dec
jp
movsl
mov
in
out
mov
sbb
jg
iret
test
lahf
loop
mov
sti
inc
jno
mov
ret
jmp
adcl
dec
cwtl
dec
sbb
xchg
mov
mov
loope
dec
out
add
daa
dec
pop
aaa
jl
mov
sarb
in
cmp
cwtl
das
out
cld
cli
shl
mov
rcl
lock
sahf
fidivl
xchg
roll
push
and
lret
add
pop
stos
inc
jno
jno
sub
daa
shl
fisttpll
aam
mov
mov
cmp
add
rorl
push
inc
xchg
lods
shl
and
cmp
out
jns
jno
jge
cltd
xchg
jne
add
add
xchg
imul
cld
xor
cmpsl
jle
adc
daa
cmp
push
mov
push
movsl
enter
add
movsb
shr
movsb
negb
cmpsl
xchg
fistps
lcall
stos
cmpsl
push
fsubrl
into
test
lret
imul
leave
out
mov
add
mov
iret
and
xlat
sbb
sbb
sub
push
hlt
cmpsb
mov
das
ror
adc
mov
iret
loop
or
arpl
shlb
cmc
out
test
stos
mov
xchg
sarl
push
addl
test
stc
outsl
cmc
inc
sub
mov
xchg
addr16
je
xchg
mov
movsb
decl
pop
pop
xor
dec
sbb
jae
ret
mov
jbe
je
or
mov
sub
or
popf
mov
imul
or
push
and
push
xchg
push
test
push
les
sub
xor
mov
scas
mov
loope
pushf
stos
jo
es
inc
cmpsl
stos
mov
dec
fbstp
jne
xchg
sbb
ret
cmp
stos
imul
xor
ljmp
dec
shrb
ret
sbb
inc
xchg
cltd
lods
stos
xor
mov
lock
notl
outsb
xor
or
rorb
in
fdivrl
mov
lea
xchg
ljmp
ror
aam
lahf
icebp
cmp
movb
aas
nop
es
mov
jns,pt
andb
or
in
scas
sub
sub
jge
les
scas
adc
iret
jmp
rcl
sub
sub
and
addr16
mov
loopne
rcrb
imul
stos
push
aad
push
pop
les
arpl
add
dec
lret
xlat
and
stc
dec
sbb
mov
sbb
nop
mov
roll
sub
sbb
sub
inc
dec
or
inc
jb
enter
sub
out
inc
test
mov
lret
sub
test
adc
inc
outsb
das
inc
out
and
mov
sbbb
mov
add
lret
inc
sbb
push
fdivl
lret
lret
dec
xchg
xor
adc
mov
les
fucomip
adc
pop
pop
das
lret
pop
lcall
mov
sti
pushf
mov
sbb
cmc
out
sub
or
cmp
dec
movsb
cli
pop
sub
inc
and
cld
imul
sbb
xor
repnz
xor
leave
mov
std
xor
dec
leave
mov
test
xchg
mov
popa
sahf
lret
add
add
out
cmc
add
mov
fistpll
scas
pop
pop
and
sahf
cld
mov
pop
mov
or
cmpsl
xchg
mov
movsl
bswap
inc
xchg
mov
and
cmp
pop
out
xchg
stos
dec
cwtl
push
test
push
mov
daa
ljmp
cld
ljmp
push
mov
mov
or
mov
and
insl
lret
and
sti
jge
or
sbb
cli
inc
mov
pop
pop
mov
jl
test
jg
testl
dec
add
inc
pop
xorl
mov
pop
out
inc
popf
adc
in
jg
out
xor
push
test
inc
cmp
dec
mov
pop
cmpsl
mov
push
cmp
pop
mov
xchg
aam
push
out
jbe
xlat
and
add
adc
addb
decl
mov
xlat
loopne
xor
aas
jmp
mov
sub
imul
fisubrs
mov
je
push
nop
sub
rorb
pop
repz
int3
inc
xchg
fildll
arpl
mov
pop
jbe
xor
in
fisubrs
inc
les
inc
pop
stc
pop
jle
inc
jp
jmp
cld
cld
rolb
add
push
sbb
arpl
flds
sub
add
dec
push
pushf
fisubrl
arpl
dec
inc
push
jns
imul
sbb
mov
cmp
xlat
std
pop
stc
fdivl
push
or
sub
lock
xchg
test
mov
jno
pop
int3
xor
dec
in
pop
inc
cmp
outsb
and
mov
dec
xor
pop
and
sub
sub
or
inc
push
xchg
fdivl
mov
jecxz
pop
mov
arpl
les
lret
sarb
xor
stos
jmp
xchg
in
jp
mov
push
sbb
cltd
pop
lahf
add
int3
shl
aad
cmp
mov
mov
xlat
jge
cs
jae
pop
pop
push
push
jo
lret
mov
push
testb
mov
int3
in
xor
xchg
imul
aad
lea
lret
sbb
push
mov
addl
inc
sbb
add
scas
cmp
sbb
ret
mov
sub
xchg
dec
adc
loop
add
pushf
enter
jmp
jl
adc
test
mov
cmp
cmp
ror
sub
mov
add
arpl
setg
in
in
push
daa
jle
push
push
dec
push
adc
or
loopne
lods
iret
pop
pop
andb
int
arpl
and
test
xchg
push
mov
sub
push
imul
pop
stos
sahf
or
rcrb
repz
sahf
jbe
stos
js
dec
lcall
mov
jecxz
push
xchg
jg
xchg
adc
mov
and
xor
loopne
jns
add
leave
inc
dec
sub
fwait
xor
mov
ret
pop
gs
push
jnp
lcall
pop
sub
vpcmpeqd
ljmp
push
jb
xchg
cli
nop
adc
icebp
jecxz
imul
enter
ljmp
gs
sbb
push
mov
es
push
dec
pop
rcll
xlat
imul
jle
loopne
xor
int
xor
por
jnp
xchg
mov
xor
add
ss
pop
movsl
pop
arpl
mov
xor
hlt
add
inc
repnz
and
data16
sub
out
mov
out
js
add
dec
cmpsl
js
flds
ja
cld
mov
add
in
data16
push
pop
sti
js
out
cmpsl
cmc
fisttps
mov
mov
mov
mov
movsl
mov
call
dec
dec
sub
pop
sub
add
lret
sub
orl
jo
cli
mov
cmpsl
pop
adc
cli
jbe
xchg
data16
jb
jb
popa
cmc
xchg
outsl
outsl
mov
inc
cmp
jge
mov
or
outsb
sub
cmc
inc
stos
pop
dec
cmp
xchg
fistpl
fsubr
xor
xchg
in
in
ror
lods
mov
pop
jp
push
jnp
ss
add
enter
xchg
xor
arpl
mov
je
daa
inc
jp
pop
and
xchg
dec
fwait
pop
test
and
pop
pop
jmp
mov
outsb
push
stos
popa
cmp
lahf
sbb
dec
jecxz
lods
bound
mov
movb
jge
fnsave
add
sub
popa
sbb
icebp
test
sbb
push
mov
push
push
stc
dec
rcrb
das
sub
add
mov
ljmp
in
mov
inc
and
push
je
ret
jp
inc
jne
inc
test
test
mov
jge
mov
sti
mov
xchg
stc
in
clc
aam
lds
ljmp
jmp
sub
xchg
dec
inc
imul
enter
sbb
sahf
push
scas
int3
jmp
outsl
sub
xchg
mov
cwtl
dec
or
ret
std
arpl
sahf
mov
pop
pusha
adc
mov
xor
mov
mov
fstpl
test
out
das
cmp
cltd
mov
jmp
dec
pop
or
mov
outsl
fldcw
ja
lret
jo
xchg
mov
ror
xor
dec
push
adc
pop
xor
jb
fsts
cld
sub
ss
add
push
add
pop
fnsave
ljmp
cld
xchg
mov
scas
xor
sub
cld
adc
dec
cmp
push
lret
ret
xorb
test
or
sarl
push
sahf
or
repz
jae
fsubs
push
adc
xorb
inc
jl
leave
hlt
and
sbb
nop
in
xchg
cmc
repnz
push
jo
jg
jecxz
pop
stos
fcmovne
push
mov
cmp
data16
sub
je
add
and
jno
or
adc
aaa
fs
inc
pop
push
jge
adc
data16
xor
sarb
movsl
out
and
mov
jl
xchg
mov
and
fimull
or
ljmp
mov
xchg
and
adc
popa
arpl
or
jne
lds
push
mov
jle
sub
shl
mov
xor
std
imul
sub
call
imul
lods
gs
clc
iret
push
and
mov
test
cwtl
jge
push
ficomps
inc
xchg
dec
inc
mov
fdivrp
fstpt
mov
cmp
popf
add
hlt
mov
xor
bound
jge
and
fiaddl
mov
divb
sub
sub
std
sahf
cmp
shrl
xor
jmp
lods
adc
jb
jg
ja
insb
cmpsb
mov
aad
in
xor
out
call
lods
xchg
fistps
mov
scas
mov
jbe
mov
int
je
inc
dec
mov
fidivs
jne
insb
scas
pop
cwtl
or
mov
sub
push
popf
loope
adc
or
mov
sub
jp
inc
pop
jns
ret
fimuls
and
sub
movsl
movsl
xor
mov
cmp
sbb
cmp
dec
negl
loopne
jne
fistl
add
mov
push
popa
inc
xor
addr16
cmp
lea
xor
xchg
aad
xchg
test
mov
sahf
mov
lds
xchg
in
add
stc
ja
pop
and
mov
lret
fsts
add
outsb
jl
add
inc
sbb
outsb
test
or
dec
in
dec
or
fs
arpl
fidivrs
sbb
mov
std
add
clc
mov
pop
xor
or
add
inc
rorl
or
adc
js
sub
enter
call
mov
cli
roll
add
adc
inc
sub
jmp
jl
dec
fdivrs
mov
jae
dec
das
iret
out
std
in
or
push
out
sub
outsl
or
dec
dec
movsb
dec
jae
xchg
shr
negl
xchg
in
push
fmull
or
mov
orl
or
int
or
jno
pop
fdivrs
or
or
push
mov
mov
out
stc
mov
cmpsl
incl
sbbb
xor
es
mov
inc
test
lds
data16
xchg
lea
push
jnp
mov
test
cmp
js
sbb
hlt
sub
inc
jmp
out
or
lret
xor
popl
iret
testb
or
cmpsl
roll
sbb
repnz
stos
dec
out
stos
add
mov
push
js
test
popa
sbbb
gs
adc
dec
popa
shlb
push
inc
pop
icebp
ret
mov
int
mov
pusha
dec
lret
or
cltd
out
loop
loop
mov
test
xor
shlb
push
add
in
dec
out
ljmp
sbb
xor
jo
aas
mov
mov
xor
add
mov
scas
mov
sub
inc
pop
aam
mov
or
and
cmpsl
adcl
push
stos
sbb
add
popf
fdivrs
pop
sahf
adc
loop
lahf
rolb
enter
lods
cmp
scas
mov
push
roll
push
pop
andb
loopne
idivl
loopne
dec
loop
negl
inc
add
dec
icebp
sbb
dec
ja
movsb
adc
cld
test
and
push
xor
repz
pop
add
cmp
shr
cmp
movsb
sbb
jp
sbb
cs
jo
mov
mov
jno
xor
and
imul
push
inc
adc
in
jg
dec
jbe,pt
jb
sbb
dec
sarl
pop
mov
js
aaa
dec
cs
jno
adc
movsb
fst
sbb
cwtl
add
imul
xor
in
cmpsb
out
cld
notb
les
idivl
add
jbe
mov
and
jmp
adc
sbb
sbb
loop
jle
aas
cwtl
inc
fcmovb
cltd
fsubs
arpl
push
sbb
jg
rorb
test
jns
push
inc
mov
lret
xchg
jbe
pusha
mov
xor
push
ds
scas
lods
gs
sub
nop
xor
mov
ds
lret
rcrl
sub
xor
fisubs
push
leave
mov
movsl
dec
push
or
mov
js
mov
mov
shl
lods
stos
ret
push
scas
imul
xchg
popf
fdiv
gs
scas
adc
ljmp
xor
aad
ja
fistps
jmp
outsb
xchg
nop
or
cmp
jns
mov
xchg
fimuls
lock
ret
cmp
add
sbb
out
int
iret
push
test
call
je
inc
inc
in
ret
and
xchg
outsb
mov
push
in
mov
jns
addl
mov
in
pushf
popf
jecxz
sub
mov
cmp
sbb
push
dec
xor
sbb
hlt
jle
or
jecxz
fdivl
insb
out
adc
mov
mov
inc
push
mov
inc
cmpxchg
movsl
and
dec
xchg
jo
pop
cld
divl
push
mov
sbb
fnstcw
or
jnp
sbb
dec
ret
jle
fidivrs
mov
adc
cmpsl
push
gs
cmp
in
sub
shrb
stos
or
and
mov
push
xlat
jmp
ficoml
pop
push
mov
inc
movsb
inc
ffreep
xchg
movaps
shl
hlt
pusha
mov
mov
and
mov
xchg
cmp
cmp
pop
push
subb
dec
call
mov
cmp
pop
insl
jmp
es
aam
outsl
clc
mov
lods
mov
xor
sbb
jecxz
scas
lcall
dec
or
sti
fisubrs
and
cmp
inc
jae
aaa
sbb
sbb
mov
mov
aas
imul
dec
and
add
aas
test
mov
inc
orl
clc
rcl
stos
popf
or
or
sti
loopne
cmpsl
mov
inc
jnp
outsb
clc
cmc
mov
outsb
ficoms
movsl
xchg
aaa
fldl
test
dec
test
pop
imul
std
dec
inc
sbb
jg
xor
pop
pop
fst
mov
arpl
fsubrp
fidivrs
sub
lahf
xchg
outsb
stos
daa
ret
jg
push
add
jecxz
es
ret
adc
pop
xchg
or
mov
jl
adc
imul
inc
inc
inc
mov
movsl
mov
iret
inc
loope
and
iret
and
gs
jge
arpl
decl
lea
jp
ret
mov
cmp
scas
inc
sub
pop
testb
outsl
call
pop
mov
rcl
pop
xchg
lret
xchg
inc
add
cmpsb
fldcw
xchg
pop
pop
add
pushf
mov
and
repz
jle
hlt
out
insb
jo
cmp
sbb
popf
inc
aaa
nop
add
lock
dec
xchg
jg
mov
jnp
aas
mov
xor
pop
mov
pop
inc
dec
xchg
pushf
mov
mov
lcall
cmp
jno
and
jmp
xchg
loopne
xor
into
sbb
out
mov
sub
pop
ror
and
mov
movsb
xlat
cmp
sbb
push
idivb
xor
inc
dec
pop
mov
jge
add
push
aas
ds
gs
in
sahf
jbe
outsb
mov
xor
jnp
mov
sub
pop
xchg
je
add
shlb
pop
push
inc
or
mov
jb
mov
data16
mov
cmp
std
leave
es
mov
lds
fsubr
into
test
lcall
mov
sub
xchg
mov
cltd
pushf
sub
push
bound
jle
adcb
sarl
outsb
push
pop
xor
push
ljmp
cmp
jno
dec
lret
cmp
ret
ja
adc
ljmp
in
pop
mov
pop
mov
mov
inc
push
pop
ss
in
dec
sbb
in
mov
add
aad
test
jo
mov
iret
mov
pop
and
ljmp
lret
and
sub
nop
pop
cmp
pop
cmpsl
dec
shrb
pop
jae
jns
hlt
and
das
mov
lea
sysenter
xchg
cmp
mov
cmpsl
and
xchg
and
cli
push
sub
jecxz
jo
bound
sbb
clc
sbb
or
adc
sub
rclb
pop
jge
sub
jg
icebp
cltd
push
and
mov
adc
adc
adc
mov
fs
pop
in
cmp
xchg
test
jns
mov
test
jle
movsl
adc
mov
lret
fprem1
out
sub
repz
push
push
mov
inc
mov
dec
mov
aas
add
mov
test
daa
enter
inc
popf
jmp
cmpsl
pop
mov
cmpsb
inc
mov
push
push
pop
xlat
inc
add
insb
addl
sub
aad
xchg
ficoms
inc
and
or
mov
lret
xchg
push
jbe
stos
lret
push
outsb
pop
js
fisubl
test
out
into
ja
pop
scas
loop
pusha
cmpsl
mov
roll
mov
sbb
cs
cmc
adc
jne
adc
and
data16
in
adc
pop
cmp
dec
lret
repnz
rol
scas
orl
idivl
shl
mov
fcmovnb
jmp
push
int3
inc
mov
pop
and
rorl
jmp
jbe
repz
loopne
lds
mov
cltd
lahf
dec
sbb
xchg
sti
pop
repz
imul
mov
cmp
loop
in
pop
movsl
mov
sub
daa
xchg
cmp
push
icebp
cwtl
sahf
test
roll
pop
aas
iret
xor
mov
push
push
xchg
xorl
movsl
scas
pushf
mov
loope
sub
mov
dec
aam
inc
arpl
sbb
aad
jae
mov
add
clc
icebp
push
int3
xchg
es
dec
int
cmp
xor
push
stc
gs
xor
out
push
frstor
jle
les
xor
leave
sbb
fstpl
push
inc
xor
mov
dec
jle
cli
jg
aaa
jmp
xor
imul
call
push
scas
jne
push
adc
fsts
xchg
adc
pop
rcl
rcl
cmp
lcall
lcall
xor
xchg
stos
imul
imul
gs
sbbb
lret
shrb
mov
or
pop
clc
xor
jle
push
loop
and
mov
and
mov
push
testb
xor
inc
jo
cmp
or
aam
mov
sub
adc
jp
mov
pop
lods
push
je
sub
xchg
adcl
mov
sbb
add
aam
add
push
mov
dec
cmp
inc
push
xor
xchg
add
inc
or
push
jne
adc
data16
in
in
mov
jno
in
cli
sti
mov
mov
inc
pop
icebp
dec
repnz
js
push
fstpl
js
mov
sub
fildll
or
add
add
or
dec
and
pop
adc
fstl
xchg
xchg
jle
stos
dec
jae
inc
xchg
in
cwtl
flds
add
stc
sbb
sbb
or
sbbb
sbb
pushf
pushf
out
pop
in
aas
test
and
or
mov
mov
popa
xor
add
cld
ss
pop
insb
dec
repnz
sub
fistpll
add
push
call
incb
or
call
jnp
psubsw
inc
dec
lret
inc
lret
in
stc
hlt
jecxz
mov
xchg
pop
push
jae
imul
cmp
test
rcr
pop
xchg
dec
movsb
js
into
dec
std
push
popa
cmpsb
inc
push
sbb
fwait
sbb
in
mov
mov
xchg
imul
popf
mov
xor
stos
out
jecxz
cmp
cmp
xchg
popa
cli
pop
adc
hlt
xchg
or
sub
sbb
out
fdivl
ret
push
outsl
aam
and
mov
pusha
push
cmp
sbb
fdivrp
mov
ljmp
sub
mov
xor
lds
in
pusha
int
ret
lds
mov
ja
aas
popf
das
jmp
int3
stos
adc
xor
pop
or
loop
lea
mov
insl
jbe
lret
mov
dec
mov
push
adcb
cmpsb
adc
inc
in
mov
push
popf
xor
ret
dec
xchg
pop
out
jp
sarl
xchg
sub
sbb
sub
mov
dec
dec
push
mov
sarb
sub
cwtl
jnp
push
fadd
fsts
incl
sub
sarl
inc
roll
pop
mov
mov
loopne
test
or
sbb
ja
fmul
jbe
into
adcb
fistpl
sbb
or
aaa
das
outsl
sub
pop
adc
or
mov
lret
sahf
movsb
jmp
mov
fcmovnb
in
ljmp
lret
leave
jge
sub
mov
push
test
inc
inc
clc
pushl
mov
sahf
cmp
fildll
test
sti
xchg
out
inc
loopne
jne
inc
or
cmpsl
test
xchg
fmul
cmc
dec
aam
mov
lds
js
out
int
inc
xchg
add
add
loope
dec
and
jge
aam
daa
sbb
out
loop
cltd
jle
mov
je
jns
xor
push
lock
shlb
iret
mov
int
pop
ja
icebp
inc
sub
mov
js
lea
jl
and
or
push
movsl
or
ja
sub
mov
rcrb
mov
sti
xchg
std
and
adc
mov
jle
push
sub
push
daa
imul
inc
pop
pushf
push
push
mov
xchg
inc
dec
adc
out
dec
pop
roll
scas
jle
push
test
dec
out
cmpsb
jl
dec
jns
int3
lahf
lret
popf
test
fcomps
addr16
inc
pop
sub
movsl
incl
pop
xor
cld
rcrl
pop
int3
mov
dec
dec
out
bnd
pusha
xchg
inc
sarb
fsubl
out
or
sbb
lcall
filds
aaa
jge
push
fcmovbe
arpl
jnp
and
mov
mov
in
mov
rolb
movsl
outsb
lock
xchg
outsl
mov
jno
mov
mov
fwait
cmc
or
or
and
xchg
xor
pop
jnp
rcl
xlat
push
cmpsl
js
adcb
sub
and
test
enter
mov
lods
scas
ljmp
xchg
xchg
xor
mov
pusha
adc
jb
mov
jns
adc
icebp
das
lcall
ljmp
faddl
addb
rolb
add
mov
cli
sub
jno
or
sub
or
sub
in
add
mov
daa
jno
test
xor
popa
or
outsb
pop
nop
or
mov
mov
out
rclb
adc
cmp
call
out
jo
jbe
cwtl
mov
outsb
sahf
jl
or
pop
in
cmp
lcall
imul
lea
stos
fsubs
cmpsl
adc
iret
imul
xor
sub
adc
je
movsl
je
xchg
jle
in
xchg
rol
mov
sub
inc
call
push
cwtl
sub
ja
insl
add
movsl
add
outsl
test
sahf
cmp
pushf
out
xchg
add
subb
insb
scas
into
lock
mov
inc
xchg
cmp
add
xor
adc
xlat
js
jmp
and
jb
aas
jecxz
or
test
sahf
dec
mov
add
loope
enter
cmp
aam
dec
cmp
push
push
addr16
cmp
icebp
faddl
add
mov
ds
movsb
cmp
aas
test
fs
adc
xchg
mov
icebp
shl
mov
and
mov
xor
sbb
enter
roll
aaa
insl
cmpb
cltd
clc
dec
sub
pushf
mov
nop
enter
mov
push
es
xor
sbb
fists
lods
and
xchg
mov
insb
cltd
inc
sub
mov
sub
pop
aad
mov
and
ds
and
in
dec
inc
int
cs
sub
jmp
hlt
adcl
pop
aad
inc
mov
popa
xchg
adc
scas
sti
push
shrl
inc
out
popf
or
add
inc
addr16
dec
jns
pop
mov
mulb
mov
outsl
or
loop
loope
mov
cmc
ret
and
aam
mov
fisubrl
std
or
sub
test
push
mov
cmp
xorb
sub
lahf
and
sub
or
xor
mov
mov
push
mov
mov
cmp
nop
mov
pop
inc
cmp
pop
push
aas
rcrl
cmp
jmp
dec
xchg
add
xlat
sbb
dec
insb
xor
fnstsw
pop
mov
jmp
adc
and
push
popf
shlb
das
sub
jg
push
xor
lea
cmpsl
test
out
adc
mov
in
jne
adcl
je
fimuls
mov
inc
test
repnz
outsb
adc
in
sbb
cwtl
fisttpll
std
xchg
add
inc
sub
outsb
lahf
add
aad
pop
das
lahf
mov
add
lds
xlat
push
scas
cmc
movsl
cmp
clc
mov
test
sub
imul
dec
and
fs
mov
mov
imul
repz
cmp
mov
shlb
push
pop
inc
mov
in
xor
gs
notl
fstl
ss
jp
cmc
mov
out
cld
and
mov
and
mov
fs
and
pop
and
pop
shr
adc
push
mov
leave
stc
sbb
ljmp
mov
mov
jmp
dec
cmp
nop
loop
add
inc
cmp
fstp
ret
sbb
shll
adc
mov
xlat
hlt
aam
lret
lods
out
fnsave
adc
cmp
lcall
jne
push
mov
cmc
fimuls
cmpsb
mov
test
mov
push
xchg
push
mov
pop
inc
leave
jb
pop
insb
dec
fldt
cwtl
and
jmp
out
adc
jecxz
jecxz
fs
ljmp
inc
mov
rorb
insb
pop
adc
and
dec
repz
jno
mov
pop
insl
add
dec
fsubl
push
cmp
sub
inc
mov
punpckhdq
sti
inc
js
ret
fisubs
fadd
xlat
push
xor
add
xor
and
mov
xor
mov
leave
jns
pusha
mov
dec
push
mov
jo
sub
mov
subl
out
aaa
dec
adc
xchg
sub
inc
add
inc
jp
cwtl
aas
add
clc
cmp
repz
rorl
pop
call
xchg
cmp
int3
subl
testb
lret
cltd
pop
push
je
jnp
jb
jl
mov
pushf
cmc
fiadds
dec
sub
jp
jg
pop
xchg
idiv
xchg
int3
daa
mov
insl
cmc
and
mov
rclb
cltd
mov
sbb
stc
ds
fnstsw
adc
pop
add
pop
popf
mov
push
mov
fcomp
icebp
xlat
fstp
adc
and
jge
out
in
pop
enter
clc
leave
icebp
hlt
shlb
in
push
lea
mov
cmp
nop
inc
loope
repz
cmpsl
jb
xor
movsl
pop
mov
cli
sahf
aam
jmp
sub
mov
add
sbb
jle
fcoml
push
sahf
or
mov
dec
mov
pop
xlat
xchg
test
cmp
mov
pandn
xor
daa
mov
xchg
jbe
and
and
loopne
fucomip
sbb
push
outsl
addr16
xchg
pop
stos
push
daa
fwait
jmp
jne
jb
ret
stc
and
pop
push
lods
mov
dec
dec
xchg
jnp
lcall
movsl
or
mov
add
push
das
leave
je
movsl
adc
xor
popa
cmc
xor
outsb
data16
pop
sub
mov
sti
arpl
xorb
adc
pop
push
cmp
inc
rclb
cs
sbb
stos
test
sarl
lock
xchg
push
mov
push
ror
jp
adc
adcl
add
jnp
xchg
test
jmp
insl
mov
lret
or
hlt
mov
daa
fists
inc
in
jns
iret
int
cwtl
ja
sar
inc
mov
mov
jmp
movsb
push
jnp
les
out
ficomps
push
cmp
xchg
pop
lods
mov
loopne
xor
mov
addl
sub
divl
jb
cmpsb
arpl
mov
bound
in
out
arpl
mov
sarl
addr16
pop
jp
inc
enter
idiv
aam
cmp
lahf
lcall
std
mov
cld
pushf
sbb
ds
inc
enter
adc
ja
je
xor
xchg
cmpsb
les
es
rcrl
push
out
sub
sub
out
push
jmp
mov
sbb
dec
xchg
in
mov
pop
mov
and
data16
popa
cli
daa
jge
loope
adc
out
cmp
enter
pop
inc
adc
jae
shll
gs
mov
jno
sub
mov
push
jnp
das
mov
fmull
mov
xor
and
jne
icebp
inc
xchg
stos
sub
ss
add
aad
mov
and
cmp
mov
clc
popf
inc
xor
pop
and
arpl
jmp
jecxz
or
test
push
mov
or
out
test
imul
dec
mov
dec
test
addr16
fabs
stc
movsb
lcall
scas
or
aas
mov
gs
inc
mov
add
sbb
sub
add
add
clc
fisttpll
rcrl
or
ja
push
int
mov
xor
mov
adc
bound
inc
pop
jge
sbb
imul
popf
das
ss
cmp
cmp
cmp
jp
adc
or
cmpsb
push
add
pop
scas
dec
outsb
pushf
add
push
push
lea
lcall
arpl
stos
int3
pushl
bound
daa
adc
das
hlt
inc
bound
sub
je
mov
arpl
cld
js
loope
stos
decb
cltd
xchg
pop
pop
sahf
pop
lahf
mov
jge
inc
jle
push
push
div
and
out
pop
jl
ret
jp
data16
loop
and
mov
sbb
dec
icebp
f2xm1
jae
test
mov
repnz
sbb
inc
pop
and
rorb
push
and
aam
fsubl
aam
cmpsb
jmp
pop
mov
stc
adc
test
xor
decb
in
mov
fwait
sbb
sbb
decl
pushf
lea
je
xchg
push
gs
jmp
mov
cmc
add
inc
sahf
cmpsb
je
pop
ret
mov
fstl
daa
inc
adc
js
jnp
lret
dec
stos
sub
bound
xchg
mov
xchg
outsl
adc
fidivrs
stos
nop
push
lods
mov
loope
adc
fldl
insw
pushl
icebp
sub
or
insb
fwait
pop
pushf
push
aam
lock
dec
push
out
jle
xchg
repz
and
mov
bound
add
fildll
pushf
mulb
mov
test
pop
add
cmc
mov
dec
aas
xchg
std
lret
inc
je
lcall
orb
push
dec
cmp
push
adc
dec
mov
and
data16
sub
std
loopne
cmc
mov
stc
xor
jne
mov
push
movsl
mov
or
out
dec
xchg
ret
fwait
add
xchg
xchg
xor
adc
int3
stc
shlb
add
push
or
test
mov
jp
jo
ss
cmpsb
add
lock
cmp
pushw
push
sti
sbb
add
pop
call
push
add
addb
mov
iret
sarl
outsb
xchg
insl
loop
xchg
push
and
mov
test
inc
push
inc
jb
js
or
jmp
inc
pop
in
jnp
movsl
and
divb
and
fprem1
mov
fs
jno
push
fwait
xor
lds
cli
jl
xor
cmp
mov
fxch
add
adc
mov
xchg
jnp
push
out
sub
sbb
pop
jne
xor
lret
dec
add
push
shlb
popf
and
sahf
push
jle
daa
xchg
imul
pop
cmp
inc
xchg
lock
cli
mov
dec
dec
sbb
popa
push
ucomiss
jo
jle
addr16
adc
fisttpl
inc
jmp
lcall
repnz
and
dec
je
jecxz
gs
stos
lahf
rol
jno
jge
and
xchg
cmp
rclb
pop
sbb
xchg
out
cs
loop
lods
icebp
xor
push
jae
pop
pop
movsl
sbb
insb
sti
jmp
cmc
dec
es
mov
int3
ljmp
or
cwtl
sub
pop
jecxz
js
jne
aas
dec
xor
xchg
imul
push
inc
enter
subb
sti
sti
sub
ret
das
mov
icebp
fistpl
add
jae
imul
lods
mov
nop
leave
mov
mov
cmpsb
lock
xchg
nop
fcomp
pop
inc
popf
push
aas
popa
adc
rcrb
dec
adc
mov
shlb
cltd
pop
icebp
out
xorl
jae
push
jbe
pop
test
les
dec
push
shll
dec
in
insl
out
fldcw
xor
daa
inc
add
xor
clc
mov
add
loop
mov
loope
lds
jne
sbb
xadd
stos
aad
cli
inc
pop
add
push
jge
xchg
cmpsl
mov
mov
push
and
loope
push
xchg
pop
or
shlb
jns
lahf
fdivl
adc
fmuls
call
push
stos
sti
popf
sbbl
test
mov
call
jl
enter
adcb
xchg
push
leave
mov
inc
fimuls
filds
add
jns
ljmp
sub
xchg
fadds
test
push
mov
inc
fldl
xchg
inc
jmp
aas
pushf
jo
pusha
mov
and
je
test
fwait
xor
pusha
repz
repz
push
fiadds
mov
push
xor
inc
call
jp
xor
jmp
push
mov
sub
mov
push
push
ss
or
int
cmpsl
fimuls
jne
cmp
xor
into
gs
mov
frstor
addb
pop
sbb
bound
test
mov
push
insb
cmpsl
inc
add
xor
outsb
xchg
mov
jl
mov
jne
xor
push
or
mov
inc
cld
sbb
cmpsl
test
sbb
push
adc
pushf
jo
enter
imull
aaa
and
push
and
mov
sbb
fisubl
inc
fs
xlat
mov
fstpl
fidivl
dec
mov
push
cmp
push
in
jns
mov
ret
or
ret
mov
arpl
sbb
jg
lds
adc
mov
jmp
fdiv
mov
xor
clc
sub
repnz
and
in
or
imulb
dec
sub
pop
fisubs
insb
cmp
in
sti
push
or
test
test
pop
jecxz
cltd
push
data16
cmp
and
xor
xchg
mov
pop
test
test
and
in
dec
jne
sbb
jo
fsubrs
aas
mov
inc
cld
mov
jo
notl
push
add
inc
jno
mov
add
out
xor
mov
loop
cmp
movsl
mov
mov
fisubs
or
inc
cmc
push
in
sahf
je
jbe
ret
push
pop
mov
inc
or
mov
cmpsl
mov
insb
mov
pop
adcb
int3
out
lods
push
incl
push
mov
leave
adc
xlat
fimull
in
bound
or
add
cmp
xor
subl
jne
cmpsb
clc
xchg
push
stc
cli
or
pop
push
mov
hlt
fisubrs
or
xor
popa
fsubrs
scas
push
mov
ja
mov
lods
sub
fcmovb
push
sub
jb
fnstenv
mov
add
inc
mov
jg
mov
lret
sub
jl
push
ds
arpl
ja
lahf
xchg
and
jmp
push
popa
sbb
movsb
fs
push
xchg
loope
pop
dec
add
pop
xchg
sbb
stos
outsb
cld
and
fs
les
jmp
repnz
mov
stos
jnp
std
jo
loopne
and
cmp
and
lock
fiadds
repz
scas
or
pushf
js
pop
faddl
sbb
or
call
popf
inc
jp
add
pop
mov
gs
sbb
jb
icebp
test
adc
sbb
sub
xchg
inc
xchg
add
addr16
jg
or
mov
popa
insb
ret
leave
sub
rcr
adc
mov
and
in
jmp
or
xchg
mov
popf
add
movsl
fs
push
xor
pop
orl
inc
add
insl
test
sbb
mov
mull
push
xchg
fcomp
std
shl
and
outsb
scas
bound
aad
dec
adc
xchg
sbbl
xchg
pop
xchg
jnp
out
mov
loop
iret
call
cmp
mov
scas
ror
imul
movsb
int
and
jb
push
inc
inc
mov
cmp
jo
jo
ljmp
pusha
scas
mov
and
es
icebp
aaa
or
mov
ficompl
cli
movsb
mov
icebp
and
or
mov
shrb
sub
xchg
pushf
inc
rcrb
lcall
mov
inc
push
into
push
pop
repnz
enter
out
or
ss
ja
dec
jl
mov
pop
cmp
insl
xchg
rolb
mulb
cs
aam
cmp
add
cmp
inc
cli
mov
xchg
dec
or
xlat
xor
ficompl
push
call
xor
push
jg
sub
mov
fwait
push
test
mov
xchg
lds
das
inc
clc
dec
mov
push
or
stc
push
loope
add
lahf
andl
sbb
lods
and
cwtl
or
add
and
call
outsb
inc
jg
std
lret
mov
mov
out
dec
jnp
jae
shl
cld
cmp
out
mov
adc
cli
orb
cmp
repz
test
mov
lods
scas
popa
popa
or
mov
lahf
xchg
in
mov
xor
in
fnstenv
jbe
jns
mov
mov
adc
sbb
lret
mov
xchg
xor
mov
jb
fisttps
sti
hlt
popa
in
push
or
lods
pop
in
roll
pop
xchg
cmp
shll
mov
push
sbb
push
sub
jecxz
mov
data16
sub
shr
cmp
dec
fs
movsb
out
lods
dec
test
and
xor
jge
jno
xchg
je
pop
fsubp
push
ret
rsm
repz
into
cmp
popa
mov
in
add
scas
movsl
cmp
sbb
or
xor
pop
hlt
push
aas
cld
lods
icebp
mov
jb
insb
and
dec
jo
rolb
data16
pushf
cs
or
ror
jno
int
dec
pop
cmp
repz
aad
push
int3
int
jnp
rcrb
mov
mov
rcl
ficoml
into
cmc
jmp
cmp
cmpsb
mov
add
jo
or
js
xlat
bound
lret
inc
aam
lds
pusha
test
dec
js
lds
insb
inc
icebp
lock
pop
cmpb
pop
jb
popa
or
test
lahf
xor
xchg
out
testl
inc
adc
xor
add
shll
out
es
xchg
sub
movsb
xchg
inc
dec
xor
pop
fstpt
jo
pop
icebp
test
sti
iret
loopne
frstors
insb
pushf
adc
jmp
and
jecxz
ret
push
call
push
stos
xchg
sbb
mov
dec
jno
fdivs
lcall
arpl
pop
sarb
add
cmp
fisubrs
dec
sbb
and
outsl
mov
pop
pop
cmpsl
and
and
insb
cld
sub
xchg
sub
xlat
push
mov
pop
cmp
cmp
sbb
add
addr16
mov
popf
push
outsb
pop
mov
es
ret
sub
scas
pop
adc
pushf
jle
dec
test
out
in
addr16
enter
mov
stos
jo
mov
push
das
aaa
ds
popf
adc
aaa
out
adcl
cmp
cmpsl
daa
arpl
inc
xor
jbe
add
mov
cmp
mov
mov
xor
jbe
pop
xchg
jg
clc
mov
xor
inc
adc
xchg
mov
fwait
enter
js
bound
sub
outsl
fldl2t
nop
mov
xchg
fnstsw
lods
and
ja
xor
adc
mov
jmp
xor
pop
insb
xchg
dec
cmpsb
movsl
arpl
sbb
dec
cwtl
ljmp
inc
aad
cmp
xor
dec
cld
mov
shrl
sub
lods
sbb
jbe
pop
dec
in
mov
mov
cwtl
push
inc
fs
in
xor
aad
jnp
mov
lock
jecxz
dec
xor
xchg
les
mov
and
rolb
fsubl
jo
push
gs
jge
mov
lcall
dec
xor
mov
jns
fs
jg
jae
pop
fbld
lds
fcmovnbe
cmp
repnz
mov
xchg
test
inc
inc
sub
jb
cmp
cmpl
sbb
jmp
into
jg
ficomps
adcl
or
mov
aas
insl
dec
mov
filds
pushf
or
in
insl
shl
shr
inc
loop
add
ret
ret
mov
jno
push
cli
jp
sbb
bound
cmpsl
jmp
lahf
movsb
js
mov
xchg
inc
bound
shrl
or
enter
dec
pop
inc
push
mov
mov
fmuls
das
in
push
push
pop
jb
movsl
mov
in
imul
pop
inc
sahf
or
push
loope
pop
jg
or
cmp
push
jg
add
mov
push
cltd
jb
adc
mov
cmpsb
test
mov
shr
jns
xchg
jnp
pop
push
adc
gs
or
mov
shrl
xchg
pop
pop
repnz
inc
popf
lea
jecxz
test
cltd
cmc
jae
jbe
ljmp
cmpsb
leave
fs
ret
lock
jmp
mov
xchg
loop
inc
inc
insl
cmpsb
out
dec
shl
xchg
jae
pop
aam
stos
popf
mov
dec
cmpsb
scas
mov
aam
outsb
pop
push
xchg
jl
sbb
flds
inc
stc
loopne
push
cmp
lods
out
stos
mov
les
mov
or
loope
xchg
inc
pop
nop
roll
imul
mov
shlb
out
psrad
push
mov
pmulhw
mov
lods
jecxz
scas
test
sbb
mov
insl
inc
ret
ja
shll
nop
out
mov
push
adc
movsl
test
mov
push
das
xor
xchg
dec
lcall
sub
dec
test
jne
push
int3
rcll
aam
mov
adc
xchg
or
or
out
insb
inc
mov
sti
add
mov
mov
dec
mov
adc
insb
scas
sbb
jns
imul
dec
aam
sbb
pop
test
lods
jns
xor
push
pop
jne
mov
int
jbe
iret
mov
lds
pushf
pop
clc
cmpsb
mov
pop
fs
call
pop
inc
rolb
jne
pusha
aas
add
xchg
mov
movsb
in
sub
roll
aad
jp
pop
push
ljmp
push
aad
sub
pop
mov
or
mov
cltd
jp
cmpsb
pop
mov
cmp
mov
mov
call
subb
andb
scas
decb
adc
xchg
push
in
mov
dec
daa
jecxz
sarb
iret
fldcw
sbb
inc
sbbl
jge
xchg
or
stc
in
std
jo
insl
jno
push
mov
jnp
add
push
mov
mov
or
lea
orl
sbb
xchg
and
jo
out
aad
ljmp
pop
add
ret
cmp
mov
xor
fnsave
outsb
imul
ds
inc
hlt
jp
out
div
insl
lods
pop
jo
mov
rcr
jecxz
cli
ds
jmp
jb
icebp
je
ds
inc
xchg
cmc
xchg
popa
jg
or
dec
lahf
add
push
or
fldt
push
int3
leave
dec
nop
into
push
or
or
adc
rcrb
mov
and
pop
adc
xchg
pop
aaa
lret
xor
addl
repnz
cmpsl
cwtl
stos
xor
aam
in
jle
mov
shlb
insl
pop
dec
lea
repz
out
or
test
insl
aas
faddl
cmpsb
jg
lahf
icebp
xchg
mulb
test
xor
test
aaa
sti
xorb
pusha
and
pop
dec
idivb
and
adc
pop
jne
and
mov
stc
in
mov
popf
dec
inc
and
sub
int
mov
mov
in
stc
sub
addr16
aam
loope
xor
or
pushf
mov
push
inc
loop
dec
rcrl
xchg
jbe
jg
pop
adc
outsl
rorl
inc
mov
push
add
xor
ficompl
sahf
pop
xor
sbb
ss
lea
sub
ret
pop
sbbb
repz
pop
jle
pop
jge
clc
sti
sub
jecxz
fimuls
cmpsl
test
mov
jg
dec
mov
lods
enter
add
jmp
je
in
sub
add
inc
icebp
jp
adcl
nop
out
fiaddl
push
ss
cltd
out
jge
add
or
repnz
pop
add
jmp
add
loope
gs
loop
fidivs
mov
inc
pusha
adc
inc
pusha
rcll
mov
in
lods
push
push
out
lcall
add
leave
pop
and
jle
mov
rep
lods
mov
sti
test
jno
pusha
jb
mov
dec
cwtl
push
inc
sub
fmul
mov
cmp
cs
mov
inc
es
ljmp
dec
adc
adc
sbb
dec
push
xlat
adc
sahf
dec
in
gs
test
das
pop
add
stc
inc
test
push
sbb
jge
add
adc
jbe
xchg
add
mov
jle
cmp
add
xlat
ret
xor
clc
push
cli
xchg
xor
xor
mov
lret
cwtl
xor
sub
mov
jns
sti
mov
iret
add
cmc
pop
sbbl
or
adc
mov
in
sbb
inc
aad
mov
lret
lock
xchg
jmp
fldcw
sub
insb
sbb
jp
movb
xchg
insb
fwait
sub
dec
insb
cli
mov
mov
mov
jp
imul
jge
or
subl
test
jbe
lret
fxch
push
jne
int
add
sti
int3
adc
testl
stos
rorb
mull
xlat
push
inc
xchg
aas
adc
bound
andb
popf
shlb
divb
ljmp
stos
xor
pusha
xor
es
xlat
xchg
fcmovnu
sbb
mov
shll
jo
movsb
jg
and
or
cmc
add
adc
lods
fldenv
jp
cmp
inc
and
cmp
sti
shll
push
jb
sbb
xchg
push
adc
ja
in
cmc
sbb
ljmp
sub
inc
mov
dec
mov
cmpsb
or
cltd
shll
test
std
mov
fdivrl
or
ret
repnz
cmp
mov
fs
insb
jo
mov
ret
es
mov
in
test
into
insl
and
jmp
mov
and
loope
ret
xor
inc
es
push
or
push
inc
and
or
ljmp
sub
lods
dec
nop
jge
mov
data16
cs
imull
in
fisttpl
repnz
pop
jl
arpl
and
xor
mov
mov
stc
sbb
xchg
mov
and
das
inc
push
test
pop
outsb
outsb
xlat
divb
movsl
cmp
in
adc
and
or
cmp
int3
sti
dec
push
sub
dec
xor
fisubs
fstps
mov
lds
inc
adc
or
lret
mov
popf
inc
sub
and
fcmovnu
add
icebp
cmp
int
filds
and
jnp
test
mov
jne
aad
mov
orb
rorl
mov
stos
push
pop
inc
adc
lods
sahf
mov
stos
div
rolb
adc
lret
ss
mov
pop
lds
or
out
mov
leave
mov
or
shlb
jecxz
xchg
rclb
cmpsb
xchg
adc
pop
mov
adc
mov
push
sub
dec
int
syscall
or
adc
gs
cmp
je
jns
jge
adc
out
rorb
pop
fiaddl
lea
mov
std
inc
xbegin
das
in
fxch
mov
loope
es
cs
aaa
lret
add
iret
adc
sub
icebp
iret
jp
mov
sub
xchg
mov
pop
sub
dec
stc
add
loop
pop
fisubrl
insb
inc
xchg
in
iret
je
push
ret
test
rcrb
fisubrs
popf
jp
cs
insl
das
xor
pop
inc
in
pop
jnp
pop
dec
jns
ds
nop
xchg
jno
int
inc
cmp
dec
ret
add
mov
pop
xchg
adcl
or
xchg
iret
insl
in
test
repnz
fwait
push
push
repnz
mov
push
pop
lret
adc
sub
jmp
adc
mov
fucomi
add
popa
adc
jmp
pop
mov
jae
and
dec
cmpsb
push
test
jmp
jl
sub
shll
pop
jp
xchg
inc
sub
mulb
mov
imul
cmp
testb
mov
outsl
inc
jp
lock
ljmp
aas
adc
popa
cmpxchg
pop
in
jle
and
jle
adc
xor
bound
inc
pushf
xor
inc
decl
sub
cmp
shll
mov
and
gs
sbb
repnz
mov
add
aam
dec
inc
add
outsl
cmp
mov
imul
data16
cld
lods
mov
mov
cld
jp
push
outsl
xchg
movb
mov
mov
adc
test
push
xchg
lret
jmp
pop
mov
add
push
fcoms
adc
not
mov
stos
sbb
imul
ficoml
clc
jno
cli
mov
mov
fstpt
xor
push
rclb
vmread
std
add
and
nop
adc
xor
push
movsb
mov
testl
and
fadd
jns
sbb
jae
lock
adc
ljmp
adc
sbb
mov
jnp
fdivs
int3
lds
or
flds
sbb
xor
xchg
inc
or
enter
test
cli
sahf
lret
xchg
movsb
add
pop
enter
wbinvd
movsl
sub
jb
in
insb
push
daa
test
leave
fs
pop
push
cmp
ret
add
and
mov
inc
push
adc
loopne
jmp
mov
jmp
icebp
pop
lret
mov
xchg
push
dec
inc
in
fbld
lock
xor
jns
xor
fdiv
hlt
enter
lret
xor
aaa
dec
pop
shll
popa
dec
push
in
push
hlt
test
iret
jmp
jnp
adc
mov
in
jle
ret
test
push
and
int
pop
test
cmp
shl
jp
data16
popf
inc
jns
jge
pusha
adc
cwtl
mov
mov
xchg
dec
pop
pop
jae
rorl
faddl
mov
add
stos
jp
insl
jbe
lcall
test
cmpsl
cld
test
mov
adc
push
and
sbb
or
mov
sbb
mov
dec
xchg
push
in
or
lods
lret
add
push
push
mov
stos
push
cmp
pop
fisttps
jno
addr16
ret
insl
mov
cmpsb
jns,pt
aad
push
mov
mov
arpl
sub
jmp
addb
test
adc
pop
sbb
or
cmp
into
es
popf
es
mov
inc
jo
leave
into
mov
pop
outsb
jae
or
pop
inc
push
enter
test
sbb
mov
loop
push
incb
icebp
or
mov
cmpsb
adc
jg
testb
mov
mov
xchg
ds
xchg
pop
jno
mov
adc
xchg
or
mov
push
and
nop
jg
hlt
movsl
repnz
add
lcall
cmovge
call
sti
sub
dec
out
lcall
add
and
xchg
push
push
popf
xchg
xchg
fcomi
rclb
lret
scas
pop
ret
jbe
and
inc
repnz
cltd
iret
sub
out
pop
ret
mov
inc
decb
int
mov
jg
jbe
mov
mov
outsb
xor
dec
sbbl
mov
icebp
andl
inc
inc
test
or
xchg
hlt
test
mov
ret
or
fiaddl
push
mov
dec
sbb
add
clc
xor
pop
and
dec
push
fdiv
int
xchg
sbb
pop
arpl
cli
mov
add
shr
mov
sub
xor
test
int
jecxz
cltd
or
repz
xor
push
pushf
inc
pop
push
movsb
pusha
cwtl
iret
push
out
and
jo
mov
ja
stos
rorl
rcrb
dec
dec
or
push
lahf
or
dec
inc
sbb
push
push
rorl
and
loop
es
stos
add
mov
inc
sarl
pop
xlat
mov
inc
jge
mov
pop
pop
das
inc
ret
xacquire
push
mov
out
jns
cli
and
popf
cmpsb
fs
inc
xor
adc
pop
push
pop
inc
lock
push
sub
fstps
into
lds
shl
inc
pop
cmc
inc
adc
std
ret
fstpt
rcrl
in
adc
imul
push
push
pop
daa
nop
mov
inc
inc
es
hlt
push
nop
sub
adc
pop
call
or
dec
sub
adcb
sbb
filds
and
lcall
bound
aaa
jp
icebp
inc
sahf
adc
out
jns
sbb
cld
in
ja
fucomp
sub
xchg
jp
loope
int
pop
pop
sbb
pop
rcrl
or
dec
inc
jno
loope
lods
jmp
push
push
nop
xchg
addr16
mov
adc
cs
dec
or
mov
sbb
mov
movsl
fcoml
test
lods
xor
xchg
lcall
push
lahf
in
pop
seto
jge
loope
jbe,pn
cmpsl
lcall
xlat
sahf
mov
aaa
dec
addr16
push
jno
mov
push
iret
pop
mov
aas
sub
adc
fsubrs
and
es
filds
inc
mov
cmp
cmpsb
pop
pop
insl
jp
jo
xchg
pusha
fs
sub
or
mov
push
ret
test
adc
ficoml
or
fistpl
call
xchg
loope
jb
shl
xchg
adc
sti
and
out
xor
push
test
pop
sbb
cli
fnstsw
andl
lea
test
negl
xor
les
in
pop
push
leave
xchg
dec
mov
cmpl
jmp
ss
jnp
xchg
sub
sbb
cld
divl
mov
jnp
aam
push
add
ret
xchg
in
in
mov
and
and
xchg
daa
ret
test
dec
addb
adc
adcb
test
xchg
icebp
add
leave
das
add
or
aas
nop
xor
mov
jp
cmpsl
ja
lret
pushf
arpl
cmpl
adc
adc
nop
fs
and
out
push
bound
jbe
decl
int
loopne
je
dec
push
jmp
stos
or
loope
lret
add
stos
stos
imul
movsb
mov
scas
mov
call
sub
arpl
mul
pop
sbb
lock
enter
ljmp
scas
jns
jo,pt
cmp
pop
nop
test
cmpsl
scas
inc
mov
shll
or
pop
pop
push
push
ret
loop
mov
mov
xor
in
push
scas
ror
shl
pop
imul
arpl
jb
add
mov
jne
mov
mov
insl
add
cmp
pop
pop
lock
aad
std
ret
sub
shrl
ror
sbb
das
add
add
inc
xor
push
out
sti
out
sbb
daa
das
mov
inc
mov
clc
and
dec
outsl
test
imul
in
sub
popa
and
mov
daa
fistps
nop
out
icebp
inc
notb
mov
fcmovnu
inc
cmp
dec
xor
insb
daa
je
jp
pop
xchg
and
cmp
cmp
push
outsl
shrb
outsl
repnz
or
dec
hlt
rcl
stos
data16
inc
stos
cmp
fdivl
lret
arpl
jmp
ljmp
sbb
and
roll
add
xchg
jae
dec
insl
and
xchg
ret
jno
jle
test
mov
cmpsb
popa
inc
ret
movsb
add
jle
push
or
fs
inc
shlb
adc
xchg
or
pop
and
daa
xchg
sarb
jne
dec
inc
jne
sub
mov
xchg
movsl
xor
je
fadd
inc
lods
xor
cld
in
sub
in
scas
add
jmp
cwtl
arpl
mov
mov
xor
insb
sbbb
movsb
sbb
cmp
sahf
adc
inc
mov
dec
fistpll
jmp
and
dec
push
mov
clc
jo
loope
ds
push
popf
cmpsl
adc
sub
int
push
push
xchg
sahf
imul
hlt
cmp
and
mov
add
int
or
inc
mov
sbb
pop
int
and
rclb
jb
fisubl
mov
inc
cmpsb
adc
push
lret
add
mov
pop
add
push
push
xchg
mov
fistpll
icebp
push
inc
dec
mov
mov
and
xchg
lahf
xor
fs
mov
test
add
xchg
xchg
fldcw
sti
xchg
pop
stos
add
ret
dec
loop
or
mov
jmp
push
xchg
sti
jl
adc
push
or
jle
cmp
and
lods
mov
sub
ja
sub
leave
outsb
push
push
in
inc
inc
fmull
clc
adc
mov
mov
xor
loope
cli
add
xchg
xor
loopne
repz
xor
jae
or
pop
lock
xor
pop
cmpsb
jmp
dec
mov
xor
mov
or
xchg
jge
jno
pushw
sub
pop
mov
jae
std
aas
repz
mov
xchg
loop
daa
push
call
mov
xor
fidivs
aaa
pushf
jp
lret
pop
js
push
push
or
shll
jo
rcr
sub
mov
adc
push
loope
pop
jl
fistl
add
jne
fcmovb
popf
xor
pop
jmp
popf
jne
pop
adc
shrb
mov
jle
insb
push
enter
out
sbb
cmp
jg
outsl
ret
in
push
shl
sbb
mov
rolb
movsb
fdivrp
cwtl
xchg
xchg
subl
cmp
rorl
insb
call
pushf
or
inc
push
ss
arpl
xchg
loop
cltd
aaa
pop
xor
iret
jle
int
push
mov
sub
outsb
scas
pop
inc
test
xchg
cli
mov
loopne
mov
cwtl
xorb
push
cmc
or
sbb
lds
mov
xchg
mov
cmp
adc
inc
sbb
pop
iret
mov
cmpsl
incl
mov
loope
cmp
and
push
pop
fwait
std
aas
in
rolb
adc
scas
or
gs
aas
sbb
push
jl
xchg
outsl
mov
jb
or
jmp
mov
sbb
lods
add
fistps
andl
call
cmp
ljmp
jecxz
fcompl
int3
mov
shlb
pop
les
notb
pusha
adc
mov
daa
sti
out
sbbl
pop
cmp
sahf
xchg
in
pop
leave
inc
lea
hlt
ss
bound
pop
inc
inc
inc
and
lds
pop
cmp
fucomi
imul
sbb
shl
xchg
cld
sbb
insl
jns
sub
sete
xchg
jae
dec
dec
lods
xchg
inc
adc
das
pop
jb
push
xor
add
das
pusha
mov
lds
push
add
sub
cs
xchg
cmpsb
out
negb
cmp
xchg
rcrb
dec
popa
or
aas
adc
nop
iret
ds
jmp
dec
insl
mov
in
xchg
mul
scas
jo
inc
fadds
popf
lods
dec
sub
mov
adc
in
loope
jnp
cmpsb
mov
inc
jecxz
lock
pop
dec
sbb
popa
pusha
cmpsl
fstps
repnz
sub
sub
pop
out
lcall
and
cmpb
mov
movsl
cld
sub
frstor
xchg
loopne
jb
je
sub
push
inc
xor
fnsave
push
adc
xor
js
inc
and
add
push
or
or
inc
cld
mov
addl
bnd
dec
xor
dec
inc
mov
pop
dec
cmp
hlt
push
ja
sub
roll
mov
fwait
pop
cli
js
cmp
mov
mov
iret
xor
popf
das
pop
jp,pn
lret
sbb
pop
jecxz
add
in
xor
popa
mov
lock
pop
mov
and
fs
dec
flds
xchg
testb
repnz
or
add
mov
std
cmpsl
dec
and
or
xchg
mov
dec
inc
mov
push
push
fistps
subl
xchg
dec
inc
xchg
setge
xchg
cs
mov
sub
fmull
out
aam
xor
mov
mov
and
push
out
out
push
xchg
inc
imul
xlat
cmpsl
repnz
add
out
sti
cmp
push
fisttpll
lcall
push
imul
inc
imul
jmp
adc
repnz
dec
sbb
cltd
inc
pop
adcl
nop
sbb
lret
xchg
cmp
inc
lret
adc
hlt
or
xor
xchg
imul
outsl
and
cmp
shrb
jle
push
pop
movsl
imul
mov
sbb
bound
lcall
xor
sub
push
push
mov
addr16
push
mov
pop
mov
mov
jecxz
stos
scas
push
hlt
cmpsb
mov
add
repnz
jne
shr
jecxz
add
aaa
fs
jecxz
cmpsb
out
movsl
xchg
push
and
add
lret
outsl
roll
lock
pop
je
fidivrl
ja
adc
icebp
sbb
xor
fwait
outsb
xchg
sbb
out
xchg
rorl
sahf
inc
cmp
sub
jmp
lcall
rcrl
push
xor
scas
inc
ss
mov
pusha
sbb
xchg
dec
sub
mov
and
and
dec
jp
addr16
push
xchg
dec
mov
fs
or
xchg
sub
ss
jae
mov
push
in
shrl
fimull
jmp
stos
and
lcall
pop
mov
mov
in
pop
idiv
adc
jbe
into
cmp
push
cmp
or
xor
jge
pop
xchg
sub
dec
sbb
push
out
pop
inc
add
mov
and
add
sbb
in
fdivl
jg
addr16
cmc
cs
shrb
into
push
aam
mov
xchg
mov
sti
lock
dec
cmp
jae
inc
or
pop
ror
in
fwait
push
bound
pop
jns
pop
icebp
out
add
pop
loope
lods
call
and
push
lock
fs
mov
xchg
popf
cmp
add
int
sbb
cmp
out
ljmp
lods
stos
sub
sar
pop
sbb
negb
insl
adc
sbbl
push
scas
mov
fisttps
nop
mov
mov
outsl
cmp
ret
inc
adc
aaa
sub
lret
xlat
stos
stc
xorb
pop
in
stos
es
xor
rclb
inc
mov
movsb
sti
mov
rep
sbb
inc
insb
jp
fwait
push
pop
lds
pop
sti
dec
cmp
cmp
push
jne
xor
negl
push
push
push
les
mov
mov
imul
push
in
jle
stc
fimull
mov
ffree
or
sbb
popa
imul
jae
or
xchg
imul
lret
das
pop
or
pusha
cmp
sahf
mov
lds
in
sbb
js
ja
and
sub
inc
dec
mov
jecxz
or
int
cmp
in
stc
int3
or
cmp
xchg
addl
std
int
or
sub
jo
adc
daa
xchg
js
or
push
sbb
pop
push
jbe
out
sbb
xor
mov
xor
xor
enter
out
xchg
xchg
xchg
push
inc
adc
or
xchg
add
jnp
push
sti
shlb
test
or
jae
fwait
jp
imul
sub
push
mov
sbb
fstps
lods
subb
orb
fdiv
mov
xchg
dec
xor
xor
aaa
mov
or
mov
lock
pop
loopne
sarl
xor
ficoml
cli
movsb
pop
inc
cmp
icebp
pop
cmc
sub
jne
inc
mov
lds
push
cmpsl
out
lds
push
xor
cli
lahf
call
dec
mov
vandpd
inc
subb
mov
pusha
dec
lret
test
pop
mov
xchg
ljmp
shlb
je
add
or
jo
lahf
dec
push
dec
xchg
jge
cmp
mov
cmpsl
sbbb
sbb
add
mov
push
std
insl
or
leave
in
daa
xorl
push
push
test
lds
mov
sahf
mov
cmpsb
dec
pop
or
call
dec
push
bswap
test
add
adc
in
mov
sbb
pop
leave
mov
mov
mov
enterw
jno
cli
pop
mov
das
xor
mov
loop
fmull
bound
test
push
xchg
sbb
es
mov
mov
sbb
out
out
daa
dec
mov
mov
es
inc
loope
int3
enter
inc
adc
cmp
push
scas
adc
addb
ss
add
bound
pop
lock
in
shll
xchg
enter
int3
jno
push
mov
mov
push
push
inc
mov
loope
shrb
or
push
inc
cmp
push
in
mov
int3
mov
into
outsl
sub
test
or
lea
out
mov
adc
mov
arpl
in
stos
je
add
adc
mov
dec
mov
push
or
addr16
xor
adc
dec
adc
hlt
or
jae
arpl
mov
mov
jg
inc
push
jecxz
pushf
add
push
push
cltd
xchg
sbb
movsl
adc
lret
or
cwtl
inc
xchg
or
fdivl
aas
xchg
andb
push
fists
mov
shrl
out
push
add
sub
rcr
test
repnz
lds
fnstcw
fisubs
in
sub
hlt
inc
scas
push
dec
addr16
dec
jae
aaa
xor
negl
add
repz
lea
out
lods
pop
mov
push
adc
repnz
lret
push
fdivrl
inc
pop
jg
bound
clc
inc
or
unpcklps
add
outsb
mov
pop
shll
lea
dec
cmpsl
gs
sbb
leave
popf
sahf
in
insl
push
add
fdivl
cmpsl
or
fs
xor
loop
loopne
mov
cmc
arpl
lea
fs
add
add
pop
lret
popa
in
sbb
test
sahf
sub
mov
repz
in
mov
arpl
nop
lods
sbb
repnz
mov
inc
mov
jns
out
sub
int
negl
push
mov
mov
mov
sbb
mov
leave
jno
sub
xchg
add
jle
mov
jb
sbbl
fdivl
pop
cmpb
pop
repnz
or
mov
repz
fiaddl
mov
pop
or
mov
sub
ds
clc
mov
push
push
xchg
mov
push
movsl
pop
xlat
inc
adc
jno
nop
cwtl
or
jge
imul
inc
orb
dec
dec
sbb
push
ja
pop
cmc
adc
add
xor
sub
adc
leave
adc
inc
mov
popa
pop
mov
xor
shll
testl
ficomps
push
add
jmp
cld
mov
dec
ss
fcompl
mov
jp
dec
xchg
push
or
movsb
int3
leave
push
xchg
jl
sub
iret
xchg
pop
inc
dec
mov
add
shll
sub
and
sbb
sbb
xchg
into
pop
ja
add
inc
iret
pop
es
insl
imul
dec
rcl
or
es
imul
pop
or
jge
and
mov
out
adc
test
jno
lods
test
push
jbe
test
mov
fwait
xchg
enter
jl
repnz
or
or
imul
gs
mov
inc
repnz
push
movsl
cld
add
std
addr16
inc
mov
sub
imul
fwait
mov
daa
ja
inc
jl
push
das
ss
mov
mov
add
inc
mov
aad
sbb
mov
mov
lahf
outsb
push
ljmp
outsb
fists
push
jecxz
mov
data16
pop
sbb
decb
pop
mov
rcr
mov
pop
scas
jb
pop
lods
adc
xchg
push
cmp
outsl
stos
jmp
aad
and
jno
pop
ljmp
and
mov
cmpsl
and
and
lahf
lods
mov
pop
data16
jb
add
jbe
cmp
rorl
out
jge
enter
out
divl
ret
mov
mov
dec
jge
mov
push
mov
sarl
jbe
inc
adc
pop
pop
sbb
xor
mov
les
lret
scas
sub
lahf
adc
cmp
in
rclb
cmp
pop
pop
pop
clc
jo
je
sub
stos
add
or
stc
push
lods
jmp
or
fstl
push
xchg
cmc
pushl
in
pop
mov
mov
gs
xor
inc
dec
je
lea
std
xchg
inc
jg
insb
js
sbbb
subl
iret
add
sub
mov
popa
repnz
insl
idivl
sub
mov
pop
adc
shl
sahf
stos
shrl
jp
ds
push
sub
out
cmp
gs
sbb
and
sub
add
cltd
xorl
xchg
aad
adc
int
fcoml
loope
sysenter
in
push
cmp
pusha
xor
mov
gs
inc
fsubrp
mov
cs
mov
inc
mov
dec
in
out
sub
jne
cmp
push
repnz
std
insl
jmp
and
mov
push
jo
jp
pop
xchg
jge
inc
push
sbb
sbb
data16
add
xorb
mov
jne
push
adc
cmp
bnd
std
mov
add
and
fwait
push
or
ficoms
adc
mov
addr16
gs
sbb
jmp
leave
add
sub
vmwrite
imul
rcr
dec
push
call
mov
push
jbe
lods
ret
lods
dec
xchg
repnz
inc
scas
int
mov
inc
in
ret
incl
push
jno
xchg
leave
sub
scas
add
cmp
push
xchg
xor
push
pop
inc
mov
les
test
push
icebp
mov
leave
pop
push
loopne
gs
dec
sub
add
xchg
mov
stos
jl
mov
outsl
inc
adc
bswap
mov
pop
sbb
sbb
adc
mov
fcompl
out
and
sub
xor
int
pop
lea
jb
lret
mov
xchg
xlat
mov
fstl
out
insl
lcall
cmp
repnz
mov
orb
add
pushl
add
cmp
mov
pop
sbb
dec
data16
jbe
or
xor
adcb
cs
and
mov
jo
repz
in
leave
jle
mov
cmpsl
mov
push
sbb
cmpsl
imul
add
push
cmp
adc
outsl
lcall
cmp
pop
addr16
daa
push
pop
popf
sub
out
add
fidivrl
std
mov
fists
push
pushf
push
cs
test
jmp
mov
in
in
out
popf
pop
cli
rcll
mov
mov
add
lret
add
lret
rorb
xor
mov
fsubrl
popf
stos
jo
push
inc
dec
sub
js
xchg
imul
and
or
nop
jne
das
dec
nop
mov
cmpsb
sbb
mov
in
outsb
std
and
mov
mov
and
dec
faddl
mov
pop
dec
inc
jp
or
in
pop
push
fldl
mov
push
pop
pop
cwtl
xor
xor
cmp
xchg
fidivl
add
out
stos
mov
out
mov
and
push
sbb
mov
pop
or
call
push
sar
shll
fisttps
jo
adc
test
or
sbb
aas
add
fnstsw
xchg
int
fidivrs
mov
mov
push
dec
dec
jg
sub
imul
adc
ljmp
cmp
add
flds
pop
jmp
push
rcr
int3
cmp
int3
push
loopne
jns
popf
fs
jo
inc
push
add
lods
xor
sub
fistps
pop
or
xor
jl
jb
mov
adc
gs
daa
cmc
pop
jnp
mov
dec
in
push
cwtl
inc
divps
cli
lock
xchg
fmuls
sbb
jnp
and
sub
or
xor
sub
aad
sub
mov
lock
adc
out
xorb
dec
fildll
insb
cmpsb
dec
add
cmp
jb
xchg
xchg
bound
pop
jbe
gs
lret
ret
push
xor
lea
addr16
fistl
in
aad
out
add
inc
jns
ljmp
push
pop
add
sub
rorb
and
dec
mov
out
les
mov
lods
xlat
pop
or
into
mov
push
aad
pop
add
les
enter
xchg
andb
jns
dec
add
push
shl
adc
mov
daa
test
add
xchg
mov
mov
iret
mov
sub
scas
mov
stc
xor
nop
mov
mov
add
scas
jge
mov
cltd
mov
imul
push
pusha
cli
iret
mov
inc
inc
stos
test
or
dec
pusha
mov
adc
adc
pop
fidivrs
jle
push
dec
bound
xchg
lret
sub
or
sbb
orb
enter
cmp
push
push
mov
sub
repnz
ds
or
jne
cmp
hlt
pusha
fisttpll
out
lds
add
mov
in
lret
cld
test
adc
jne
stc
jge
cltd
cmc
mov
into
mov
sbb
pop
popa
sub
mov
sbb
scas
sti
and
jo
adc
pop
inc
adc
mov
or
repnz
mov
ds
in
ds
lret
int3
pop
xchg
xchg
sub
loop
incl
xchg
imul
sub
adc
inc
loopne
cmp
xor
rorb
pop
mov
push
cmp
cli
fbstp
add
cli
jle
lock
sarb
nop
jmp
jl
dec
push
xchg
fwait
lock
imul
inc
fsubrs
adc
enter
mov
mov
sub
lds
sbb
iret
jg
inc
test
stc
clc
gs
cmpsb
pop
xchg
sarl
movsb
jb
in
sahf
and
xor
push
mov
cmp
jmp
fildl
and
mov
repnz
out
mov
push
sub
stc
bound
pusha
ds
shrb
and
inc
lds
mov
loop
adc
mov
jnp
ret
cmp
test
sarb
testb
mov
inc
jle
es
pop
es
dec
adcl
fldt
fcompl
sbbb
jns
adc
icebp
fistpl
imul
imul
cli
test
or
mov
xor
lds
mov
or
inc
movsb
test
cmpsl
inc
xor
dec
cmp
cmp
je
or
pop
in
mov
sti
pop
mov
cmpsb
lods
jmp
lods
xchg
add
sbbl
inc
fdivs
or
stos
mov
iret
sbb
inc
mov
dec
sti
xchg
imul
in
adc
add
xlat
ja
cld
sub
fdivs
cmp
daa
stc
mov
and
jo
jge
lret
es
mov
pop
adc
stc
aaa
mov
stc
ds
stos
out
jne
mov
add
test
das
fsubrs
loopne
sbb
sbb
jle
cmc
and
insl
mov
mov
cwtl
cmp
adc
jno
repz
lea
pop
ret
stos
int3
add
clc
lods
fmull
lret
ror
out
xchg
int
or
dec
and
lock
fdivrl
push
subb
mov
cmp
js
add
inc
jnp
ss
fists
xor
push
push
repz
test
jge
popf
mov
xchg
pop
scas
daa
ret
adcb
xor
jb
aam
fstpt
add
popa
imul
xchg
fdivrs
movsl
outsb
cltd
and
push
or
cmpsl
sbb
cmp
fnstcw
pop
fyl2x
std
pop
push
xchg
stc
addr16
gs
les
clc
jp
int3
inc
xchg
add
mov
loop
pop
add
lret
pop
cmpsl
add
in
loop
repnz
ja
sbb
les
repz
lds
jae
out
test
inc
xchg
lcall
fisubs
loopne
adcb
out
pushf
xchg
movsl
cld
fildll
pop
cmp
xchg
icebp
loope
jae
addr16
mov
inc
leave
dec
sub
enter
add
dec
cwtl
push
std
push
repz
or
push
clc
sbb
icebp
cmpsb
fwait
sbb
push
popl
rcrl
stc
dec
push
dec
pop
fs
dec
jmp
xchg
or
out
push
sub
in
jb
lds
pop
and
jecxz
sar
mov
add
cmp
adc
xchg
and
or
fildl
jns
cwtl
mov
lcall
sub
aaa
mov
sub
xchg
push
cmc
dec
add
mov
xlat
adc
in
in
mov
dec
fcompl
cmpsb
imul
lock
int3
fsts
inc
mov
test
adc
aaa
dec
imul
jl
adc
mov
dec
xchg
ljmp
int
fidivrs
dec
sahf
push
mov
inc
lds
inc
ss
mov
repnz
jge
cmp
subl
adcb
jg
ucomiss
pop
out
imul
out
movsl
add
movsb
lods
dec
inc
sbb
popa
lcall
fwait
lock
sbb
or
xor
sub
add
leave
push
or
push
sub
bound
sub
dec
pop
out
pop
mov
pop
aas
mov
pop
sbbb
cmc
sbb
dec
fstpt
subl
mov
dec
sub
testl
push
int3
in
jae
aam
int3
aad
push
or
in
inc
or
icebp
adc
dec
mov
mov
aam
roll
jmp
push
movsl
and
popf
les
sub
dec
pop
shlb
cmpsb
popf
fcmovnb
in
jmp
dec
mov
leave
pop
mov
mov
jmp
imull
sub
test
or
or
orl
movsb
mov
loopne
xor
call
repz
fs
sub
xchg
sub
loope
addr16
mov
call
and
mov
lea
jmp
mov
lcall
pop
icebp
mov
lcall
inc
int3
jmp
jne
test
mov
imulb
mov
push
shrl
mov
push
fdiv
dec
cltd
jp
stos
nop
mov
push
sub
nop
lods
scas
xchg
outsb
sub
hlt
dec
lods
pop
imul
cmpsb
pushf
testl
mov
outsl
mov
sub
mov
dec
out
pop
sub
lahf
into
pop
mov
add
rorb
aas
pop
sbb
lahf
insb
or
cmpsl
mov
xlat
sti
outsl
pop
ljmp
xor
push
cld
jb
loope
dec
or
inc
dec
push
icebp
jmp
sub
lock
enter
jno
jge
iret
shr
and
stc
arpl
mov
inc
dec
xor
push
pop
sti
xor
cmc
and
cmp
xor
cltd
inc
lret
jmp
pop
icebp
mov
aad
pop
les
cmp
cmp
jbe
dec
xchg
psrad
xchg
xor
inc
ds
out
push
sub
cmp
arpl
dec
or
sbb
arpl
push
lock
rorb
xor
push
rol
fdivrs
cli
xor
and
outsb
mov
shr
pop
mov
adc
xchg
sub
loop
sub
cmc
sbb
sbbl
jo
mov
push
sub
hlt
daa
pop
cmp
xor
push
stos
jns
jecxz
push
shlb
pop
push
loopne
mov
shlb
lods
mov
in
cmpsl
xchg
hlt
enter
xchg
sub
inc
lcall
adc
rcrb
cmp
mov
adc
mov
gs
ja
mov
stos
mov
shrl
inc
adc
add
orb
push
rclb
adc
and
loop
cmpsl
push
in
mov
xor
sbb
repz
lods
sub
or
inc
cmc
push
nop
jge
jne
shr
in
or
adc
arpl
stc
arpl
in
and
inc
jecxz
dec
fsts
mul
push
push
cltd
fisubrs
push
jmp
add
jmp
popa
lods
pop
pushl
fcomps
jmp
jg
push
jmp
mov
jnp
je
popa
shrl
mov
icebp
addr16
or
fisttpl
adc
push
popa
daa
jl
pop
sbb
xchg
or
jo
adc
xor
pop
xchg
cmp
adc
arpl
inc
aad
sbb
sbb
adc
bound
es
scas
leave
push
push
cmpsb
and
push
jnp
outsb
fwait
insb
lods
rclb
xchg
testb
fsub
scas
ja
or
ret
pop
adc
rcr
push
es
jbe
mov
or
shlb
jecxz
adc
cmp
icebp
jge
add
in
cmp
mov
adc
inc
or
out
pop
adc
mov
aad
loop
add
faddl
popf
inc
pop
stos
cltd
das
popa
push
mov
ljmp
add
scas
mov
sbb
into
jae
mov
popf
jno
mov
aad
bound
sbb
fistpll
push
insl
push
jl
mov
shrl
xchg
lret
xor
adc
xchg
das
xchg
outsb
push
dec
rcrl
xchg
mov
sub
mov
out
adc
inc
jo
es
xchg
push
xchg
xchg
jl
lods
testb
xchg
gs
push
std
add
outsb
and
or
jmp
add
push
cmpsb
lods
xor
and
and
push
popf
outsl
mov
sbb
icebp
pop
mov
stc
xchg
jb
mov
or
pop
mov
inc
test
aam
arpl
inc
pop
or
iret
cmp
cmp
jp
vpsrld
or
aam
adc
xor
mov
mov
or
pop
push
rorb
sbb
roll
clc
add
sub
aad
ficoms
in
mov
pcmpeqw
mov
xchg
mov
mov
push
lods
int
xor
mov
mov
cld
sarb
insb
sbb
es
inc
lcall
cltd
aas
mov
inc
repnz
adc
dec
sbb
lods
lea
jmp
add
cwtl
push
dec
fidivrs
xchg
xchg
iret
outsl
jo
ret
addb
scas
imul
pop
xlat
mov
out
pop
push
ds
or
add
mov
sub
hlt
ds
out
sub
jecxz
fwait
ljmp
dec
push
adc
cmpsb
sbb
cmp
xchg
scas
inc
jbe
lcall
lods
cmp
repnz
mov
ret
sub
shl
out
push
and
insl
sub
ret
out
dec
sub
push
or
call
nop
mov
dec
jg
adcb
test
in
mov
and
leave
lcall
mov
sar
pop
jo
xor
mov
mov
sbb
adc
mov
mov
add
push
std
sub
movsb
mov
cmpsl
sbb
dec
dec
add
push
sarl
das
imul
rcr
dec
jmp
dec
fs
pop
popa
ret
std
lods
push
lods
jge
and
addb
out
cmpl
cmp
cmp
out
gs
adc
insl
gs
scas
mov
sub
cmp
lahf
adc
rclb
outsb
jo
mov
dec
adc
jle
cmp
pop
sub
pushf
in
lcall
mov
mov
scas
rcrb
loopne
in
xchg
add
rclb
jns
cmpsb
mov
sbb
mov
pop
out
loope
jecxz
push
and
jl
push
xor
outsl
negb
mov
out
or
and
loope
mov
aam
mov
push
in
mov
std
and
xchg
sub
aad
add
mov
outsl
inc
dec
cmp
jecxz
dec
push
test
sahf
es
or
and
or
jg
das
lods
out
and
add
dec
add
pop
sub
lcall
or
popf
xor
cld
pop
push
fwait
scas
xchg
mov
mov
jle
pop
mov
std
int
les
je
mov
aaa
cli
arpl
aas
pushf
lods
push
dec
jbe
mov
cmpsl
mov
pop
xor
adc
shlb
jl
pop
push
aaa
shll
xor
loop
fcmovne
test
dec
dec
dec
cmp
in
mov
cwtl
fcoms
imul
push
aaa
inc
lock
fld
push
jns
lret
in
push
mov
aad
lret
cs
or
adc
pop
mov
fildll
aas
adc
or
sub
jnp
adc
repnz
hlt
lahf
adc
xchg
mov
mov
adc
xlat
mov
loop
mov
mov
mov
negl
dec
pop
lahf
and
jmp
les
xor
push
inc
xor
dec
mov
aam
mov
mov
or
add
add
cwtl
jno
inc
cmpsb
xchg
rcl
cmp
sbb
mov
scas
nop
mov
jb
jmp
mov
aaa
add
ljmp
inc
jbe
pushf
dec
fsubs
pusha
push
sbb
sarb
in
push
outsl
mov
lcall
mov
nop
inc
cmc
scas
sbb
aas
dec
xchg
sub
dec
test
ss
push
sub
or
push
aam
mov
int
sub
adc
pop
pop
push
sub
add
inc
or
mov
pop
repz
pop
in
mov
mov
xchg
add
mov
in
cmp
push
ficoms
mov
xchg
sbb
imul
stc
cmp
movsb
ficomps
or
inc
inc
scas
loope
icebp
cmc
lods
jo
cmp
scas
pusha
dec
and
inc
icebp
test
jl
push
pop
jnp
jmp
pop
fbstp
sub
lcallw
cli
xchg
mov
gs
mov
lock
mov
pushf
scas
or
pusha
push
insl
ret
imul
stc
imul
inc
xchg
movsl
pusha
inc
push
push
add
sbb
xchg
rcll
cwtl
push
mov
lock
out
dec
cmp
jl
and
jno
aad
mov
mov
cmp
mov
xchg
std
mov
rcrl
icebp
adc
subb
call
fmull
push
mov
insb
jno
cld
xacquire
into
jb
enter
sub
xchg
mov
pop
loopne
mov
insb
dec
adc
ret
or
pop
mov
xchg
cld
ss
shl
out
adc
imul
dec
inc
pop
xchg
inc
daa
sub
jge
xor
xor
scas
pop
cld
adcl
fstpt
xor
mov
add
adc
bnd
inc
bound
sub
sub
xchg
loope
cld
and
xor
lea
dec
loop
add
mov
cmpsl
xchg
xchg
jbe
inc
lds
and
or
ja
out
ja
adc
xchg
rorb
and
add
sub
pop
in
aas
jo
push
subb
pop
fcoml
and
or
sti
or
test
xorb
pop
or
jecxz
lods
push
cwtl
mov
mov
stc
out
into
mov
js
sub
push
popf
fidivs
sti
cmpsb
into
mov
inc
loop
add
jge
cmp
mov
push
xchg
pop
out
out
lea
add
sbbl
inc
mov
ljmp
or
outsl
in
inc
fwait
jns
pop
lock
test
pop
movsb
stc
sbb
cmp
xor
xchg
or
fistps
ret
loop
clc
ljmp
jmp
loope
jns
adc
int3
cld
inc
sbb
cmpsl
xor
cwtl
sti
lret
scas
and
insb
sub
and
addr16
mov
movsl
test
xchg
test
fbld
inc
leave
sti
loopne
mov
repz
push
lods
fst
pop
xor
push
in
xchg
insl
pop
bound
xor
mov
add
sbb
ja
in
xchg
xor
hlt
sub
mov
mov
sub
sbb
fsubl
pop
xchg
andl
roll
sub
dec
push
xchg
xlat
cmp
mov
add
inc
mov
mov
cli
inc
or
mov
dec
mov
or
jl
je
scas
push
stos
dec
popf
push
test
jno
lea
aas
ret
fbld
sub
in
cmp
sub
adcb
cmp
adc
out
xchg
adc
push
hlt
in
lcall
shll
stc
mov
gs
add
pushf
mov
ficomps
negb
loop
ja
aaa
or
inc
lret
jg
mov
stc
idivl
cli
xchg
adc
mov
dec
push
xchg
negl
sbb
jns
pusha
fdivrl
inc
xor
sub
xchg
add
iret
addr16
mov
mov
fistl
xor
cmp
insb
xor
bswap
pop
out
rolb
sbbb
call
arpl
sub
mov
xchg
pop
aaa
in
sahf
jne
adcb
jecxz
insb
and
xor
or
mov
loopne
mov
inc
test
movsl
hlt
mov
int3
jno
cmpl
or
jecxz
add
lods
xor
mov
xchg
je
and
mov
loope
aam
adc
out
cmc
mov
pusha
lock
cmpsl
insl
xchg
xor
gs
es
iret
ja
inc
into
das
imul
repnz
mov
push
ja
add
orl
loop
mov
xchg
push
jp
ljmp
jbe
xor
push
gs
xor
loope
jl
mov
shrb
dec
cmp
jp
inc
andl
int
mov
mov
pop
jle
les
jae
call
sbb
negl
sbb
push
mov
or
cltd
mov
pusha
and
aam
pop
jns
stos
push
mov
mov
push
movsb
stc
rclb
jb
scas
push
xor
or
pushf
adc
cmp
popf
call
je
push
dec
lods
push
cmp
arpl
popf
or
pop
faddp
pop
insl
mov
cltd
and
push
addb
mov
xor
and
sub
and
sbbl
cmp
fucomp
xor
mov
shr
rclb
loop
inc
jmp
push
inc
fsts
loop
pop
sti
inc
pop
cmp
xchg
imul
pop
push
popa
repz
in
test
dec
cli
int3
sbb
xlat
dec
adc
lret
push
clc
gs
xchg
in
mov
loopne
orl
inc
cltd
xor
jl
sbb
mov
cmp
in
xchg
mov
addr16
addr16
dec
std
scas
in
insb
cmpsl
data16
push
xor
add
shl
xor
in
mov
lods
sbb
out
xor
mov
fldcw
pushf
mov
mov
add
pop
ret
mov
les
sbb
fidivs
mov
add
sbb
push
inc
and
pop
cltd
mov
mov
lahf
les
lea
cmc
lahf
out
dec
shl
insb
push
xor
add
popf
popa
sahf
popa
xchg
mov
loope
jp
mov
cmp
jl
mov
or
pop
xlat
dec
jmp
inc
push
shll
dec
out
add
idivl
mov
rcrl
shlb
push
outsl
stos
push
sbb
lods
mov
sarl
aaa
movsl
xchg
push
fmull
mov
stos
es
push
sbb
mov
xchg
fwait
add
nop
jb
pop
jbe
adc
scas
mov
jae
xchg
in
sti
mulb
xor
and
and
mov
cwtl
mov
scas
adc
mov
mov
das
cmp
ror
mov
adc
data16
push
pop
clc
test
sahf
mov
xchg
mov
sub
ret
pushl
jno
iret
xchg
popf
add
ret
divl
popf
out
fs
fs
aas
sub
rclb
or
call
les
add
sar
dec
ret
stos
cmp
cs
jp
sbb
rorb
mov
pop
jg
repnz
xchg
sub
push
mov
pop
sbb
cs
loop
xor
dec
test
jae
mov
fldcw
pop
push
cli
repnz
push
jno
xor
push
xlat
and
aad
test
cli
cmp
mov
cmp
sub
fiadds
xchg
sub
scas
xchg
jg
pop
inc
inc
mov
add
mov
fbstp
pop
scas
inc
mov
lret
sbbl
repz
sti
cmc
jg
movl
mov
xor
cmp
push
inc
sub
mov
imul
mov
sub
add
aam
loopne
and
arpl
and
inc
fdivrp
pop
nop
pop
shrl
push
ficoms
inc
and
lcall
xchg
lahf
sbb
fmul
sti
mov
jmp
addb
mov
dec
mov
ret
das
inc
or
ret
test
mov
stos
fisubl
xchg
xor
dec
lea
lahf
out
aad
scas
in
rcrb
mov
sbb
clc
dec
sbb
fistps
pushf
add
push
add
jbe
xchg
test
and
cmp
fstp
aas
pop
xchg
mul
mov
hlt
imulb
xor
in
and
or
xchg
loop
lret
pop
mov
adc
dec
adc
ret
jecxz
insb
or
jb,pt
test
addl
adc
imul
loopne
jle
fmull
mov
sbb
arpl
leave
sbb
push
xor
mov
mov
dec
stc
xor
lods
lret
dec
dec
push
jb
aad
inc
cmp
out
mov
push
fcompl
sbb
aaa
jge
jnp
xorl
push
stos
idivl
push
push
xor
repz
inc
dec
loopne
sti
push
pop
movb
mov
inc
je
popa
jb
jae
mov
mov
pushf
rclb
std
nop
rcrl
clc
andl
jns
das
and
test
pop
and
dec
addr16
cmc
push
mov
mov
pop
aas
imul
jbe
je
rcl
incl
jbe
xor
push
outsl
mov
sahf
stc
mov
popa
insb
imul
and
dec
mov
push
dec
sbb
jmp
sbb
adc
push
mov
ljmp
mov
xchg
aaa
lods
pusha
andb
call
rolb
xor
jecxz
orb
nopl
cld
jecxz
pop
ret
test
sbb
icebp
sbb
in
pop
int
or
jmp
mov
lcall
jmp
dec
lret
adc
and
lret
addr16
repz
cltd
xchg
sbb
dec
aam
shl
pop
sti
jae
dec
mov
dec
sub
fimull
push
xor
push
out
test
xor
mov
mov
pushf
add
in
add
pop
aad
xchg
in
cmp
jmp
arpl
push
xchg
sub
inc
mov
rcr
mov
mov
jge
dec
inc
psllw
adc
and
mov
dec
lods
jae
lds
xchg
push
add
jo
cltd
in
add
pop
incb
and
fdiv
add
pop
mov
xchg
testl
push
mov
lods
adc
out
into
jno
inc
jge
and
adc
mov
ja
push
add
insb
loopne
jae
pop
mov
xor
int3
sbb
mov
movl
pop
pop
mov
sub
sub
jne
mov
jp
fistpl
cmpsb
cwtl
fidivrl
icebp
ja
sbb
mov
sti
push
popf
mov
cmpsb
lods
aas
xor
outsb
movsl
sbb
xchg
lock
mov
shl
push
xor
and
loop
dec
mov
sub
movsl
inc
sahf
int
jb
aas
xor
into
daa
sub
or
and
aad
inc
push
rcl
mov
inc
or
xorl
xchg
scas
icebp
mov
idiv
inc
lcall
and
dec
sub
adc
jnp
mov
xlat
insb
cmp
inc
dec
mov
sub
fstps
and
lds
sbb
popf
pop
cld
xchg
outsl
fdivrs
or
push
xor
pop
inc
out
mov
inc
mov
arpl
xchg
jp
jmp
sbb
data16
mov
in
xchg
es
ret
sarl
lret
xor
inc
mov
test
jle
in
mov
xchg
insl
popa
pop
rclb
lar
mov
std
dec
movsl
and
loop
in
dec
jne
jbe
and
jbe
mov
loopne
sbb
mov
fstpl
mov
jbe
pusha
adc
mov
cld
push
mov
mov
aaa
jae
sbb
fwait
cmp
filds
push
push
sbb
stos
addr16
adc
push
dec
rorb
mov
push
je
xorl
mov
ja
xor
imul
adc
inc
push
push
adc
jo
leave
test
hlt
push
lret
mov
popf
pop
cld
jecxz
push
inc
andb
in
mov
orl
out
das
hlt
inc
enter
or
sub
fldl
jmp
jne
aaa
pop
mov
mul
cltd
in
mov
scas
movsl
inc
aam
adc
leave
adc
call
jnp
jnp
jne
rcrl
test
mov
jg
push
out
scas
out
jecxz
add
dec
jb
add
shll
jecxz
mov
push
xor
push
cmpsb
push
mov
cmp
movsl
mov
out
roll
mov
add
xchg
inc
cmp
mov
aam
jp
jns
leave
sti
cmp
cmpsb
and
sti
pushf
in
jb
sbb
jg
push
adc
jno
dec
add
add
cs
js
fdivl
repnz
inc
jmp
mov
cmp
lds
push
xchg
xor
xor
xchg
daa
in
sarl
popa
pop
and
cltd
mov
and
push
mov
cmp
sub
adc
pop
mov
mov
jmp
dec
dec
dec
push
mov
or
andb
je
or
inc
jle
in
and
xor
leave
call
enter
inc
xor
addb
mov
dec
mov
out
xchg
arpl
je
aas
into
push
lcall
shll
push
cmp
int3
fsubl
xchg
inc
lock
jae
std
and
mov
scas
je
sahf
and
add
push
jge
adc
loopne
fstpl
pop
or
outsb
std
sti
push
repz
sub
inc
push
popa
sub
push
jae
add
hlt
mov
jne
inc
loope
dec
ja
lds
popa
sbb
dec
je
push
adc
jno
inc
loopne
dec
ljmp
and
push
arpl
js
jns
mov
test
jmp
xor
sub
mov
subl
mov
arpl
lret
jge
dec
jno
cmp
into
call
push
rcr
inc
or
movl
xor
in
jmp
xchg
aaa
das
xor
adc
rcr
mov
xchg
fucom
mov
into
imulb
fisubrs
in
xor
cmp
inc
push
fs
out
or
xlat
pop
imul
mov
push
mov
xor
stc
or
mov
add
xor
sub
xchg
insb
shrb
scas
repnz
cs
jg
in
add
stc
fistps
fwait
mov
and
cmp
loopne
adc
add
daa
nop
bswap
notl
cmp
jecxz
test
popa
push
test
sub
aad
lock
sarl
mov
mov
jb
addr16
aam
pop
ja
pop
add
inc
or
xchg
rclb
fmulp
add
cmp
stos
lea
adc
hlt
bound
jae
and
cmp
test
stc
loop
sub
std
sub
ljmp
xor
xor
loope
xchg
sbb
mov
push
lahf
and
push
lar
fistl
stos
push
lds
lret
daa
inc
pop
repz
mov
int3
aam
out
stos
dec
cmp
lahf
adc
iret
hlt
std
inc
xchg
stos
mulb
dec
jmp
jnp
lahf
stos
loop
cwtl
stc
xchg
pop
jl
call
cmpsb
nop
mov
ja
and
push
stos
les
shrl
xlat
cli
pop
inc
lret
and
sub
mov
jae
xchg
mov
fcmovnu
xchg
aas
fists
push
jo
out
push
pushaw
shrb
addr16
cmp
pop
push
sub
and
sub
sub
enter
scas
repnz
jl
repnz
pop
cmpb
mov
and
lock
cmpsl
push
pop
jae
cmp
movsl
sbb
mov
dec
fldl
xor
pop
lods
push
jg
jo
mov
jne
xchg
cmp
rorl
or
into
jno
aas
mov
jns
repnz
xor
adc
cmc
out
fs
lcall
pop
scas
subl
data16
mov
test
test
sbb
push
push
mov
insl
shl
adc
jecxz
aas
cmpsl
dec
add
jae
lahf
mov
dec
pop
jno
dec
popa
add
icebp
jle
enter
cmp
aad
in
inc
ds
int3
or
push
repz
loopne
xor
es
imul
mov
sub
fisubs
dec
cld
jmp
dec
cmp
outsl
mov
cmovs
push
dec
dec
xchg
pop
inc
pop
xchg
dec
leave
pop
iret
mov
jg
xor
pop
movsb
or
mov
int
adc
pushf
sub
mov
popf
fists
and
popa
data16
jp
test
sbbb
das
loop
mov
add
lret
jae
mov
mov
loopne
rclb
xchg
leave
cmp
mov
movsl
cmovp
push
jae
dec
sub
sbb
sub
ret
push
test
or
out
bound
pop
inc
sub
sub
fsubrl
ljmp
and
pop
das
roll
scas
lds
insl
or
test
dec
push
push
xchg
jge
xor
jnp
inc
push
xchg
push
inc
hlt
orl
loopne
jo
adc
das
sub
movsb
mov
pop
mov
inc
mov
clc
ljmp
jge
cld
and
idiv
test
pop
cmp
pop
in
jecxz
dec
cmpsb
push
popa
pop
adc
push
cltd
sub
adc
push
push
in
subl
movsl
cmp
or
add
jecxz
xchg
aam
or
stos
dec
sbb
xchg
fidivrs
js
movsb
stos
pop
cs
inc
shll
lds
sarb
inc
dec
xchg
ja
imul
xchg
shrb
outsl
xchg
dec
jo
lods
lds
mov
mov
xor
xchg
xchg
jl,pt
test
fwait
jg
push
xchg
jo
or
mov
xchg
rolb
xchg
xor
xchg
pop
add
inc
fisubl
mov
aam
mov
scas
mov
lcall
jp
lar
mov
outsl
jmp
pop
xchg
js
cld
cltd
jae
jns
fcomps
fs
sub
cmc
xchg
sub
cmpsb
ret
cmpsl
xchg
xchg
jo
mov
or
dec
rcr
fistl
sub
mov
push
mov
jge
xchg
sbb
test
jbe
jns
inc
push
jne
and
adcb
push
dec
xchg
push
fstpl
xor
push
xchg
mov
xlat
aam
leave
stc
das
push
xchg
test
bound
jbe
lea
mov
and
pop
dec
fwait
xchg
fstpt
loopne
mov
movsl
fnsave
push
iret
cmp
fstps
aam
xor
andl
mov
xor
nop
in
ja
fwait
mov
pop
aad
adcb
mov
repnz
push
leave
mov
mov
push
aas
ret
in
cmp
das
inc
shrl
jp
in
push
fs
in
mul
mov
int
and
mov
test
aad
inc
ret
imul
push
pusha
fsubl
shrb
lcall
push
insb
add
cs
xor
lret
addr16
shr
movsb
sub
insl
cs
mov
jns
pop
push
xor
cmp
cmp
and
cmc
ffreep
data16
or
fcmovbe
inc
mov
test
ret
add
cmp
mov
fists
cltd
loopne
xor
push
popa
pop
mov
xor
dec
call
push
inc
xor
cmc
cmp
ficompl
jmp
push
outsl
cmp
pop
mov
loope
test
fcompl
incl
jl
aad
mov
sahf
mov
push
mov
dec
aad
in
inc
addr16
and
cltd
loope
cmp
adc
jo
dec
test
dec
jo
dec
dec
jmp
xor
data16
cmpsb
popf
xchg
mov
xchg
mov
cmp
cmp
js
std
ja
lea
int3
fsubs
xchg
rclb
dec
mov
push
mov
inc
pop
scas
push
sbb
int
add
xchg
rol
cmp
mov
add
sbb
jmp
xor
add
xor
scas
popa
ja
xor
fnstsw
repnz
cmp
imul
inc
nop
push
test
jmp
dec
out
mov
mov
jp
pop
push
or
rcll
iret
ret
int
out
cmpsl
add
jmp
add
insl
mov
lods
cld
fadds
sar
xor
push
mov
cmp
rorl
sbb
sahf
pop
out
test
stos
xchg
insb
lea
hlt
out
adc
lcall
push
stos
test
fs
cld
xchg
pop
push
inc
outsl
scas
inc
adc
inc
mov
fsubrl
shrl
add
sbb
loop
mov
leave
fldenv
adc
es
std
addb
and
jp
pop
daa
or
pop
xor
iret
add
push
adc
mov
cmc
xor
fisttpl
scas
pop
jg
push
xchg
ret
cmc
outsb
push
packuswb
mov
mov
sub
jl
arpl
mov
jnp
push
mov
cs
sub
jge
test
rcl
mov
mov
or
mov
popa
or
aaa
mov
sbb
mov
sub
and
and
shlb
and
and
mov
or
inc
insl
jmp
mov
fisttps
stos
push
jbe
cmpsl
sahf
add
add
xchg
jg
cmp
sbb
xchg
jnp
push
bound
lret
push
adc
sub
lea
add
or
les
xchg
dec
push
mov
jge
loopne
mov
iret
adc
lock
or
dec
inc
cmpsb
sahf
sub
xchg
arpl
sub
xchg
lods
test
xlat
jne
or
mov
iret
and
arpl
stc
dec
dec
mov
mov
sbb
int3
xchg
jecxz
push
scas
adc
xchg
pop
push
mov
outsl
movsl
push
mov
leave
inc
pop
xchg
mov
xchg
mov
out
xchg
mov
inc
xor
push
dec
sub
push
sbb
mov
and
jb
rclb
push
fildl
push
out
add
cmp
ret
pop
adc
mov
idivl
sbb
sub
jle
pop
inc
sahf
stc
popa
inc
sbb
scas
inc
push
inc
inc
mov
dec
and
arpl
cli
movsb
insb
mov
mov
lcall
stos
inc
pop
loope
cmpsl
adc
jp
inc
shlb
add
mov
leave
daa
jl
add
sub
inc
iret
inc
sahf
lcall
divl
shrl
cmp
mov
lock
push
push
xchg
adc
adc
add
cmp
test
xchg
and
mov
dec
iret
push
popa
mov
mov
pushf
pop
mov
stos
or
lods
stc
lahf
call
push
imul
std
jbe
lret
in
jno
outsl
xchg
ret
cmc
adc
pop
sub
push
mov
notb
pop
push
stos
inc
popa
push
add
je
sbb
pop
jbe
jmp
push
sbb
dec
add
mov
cmp
adc
popf
cmp
cwtl
dec
cltd
dec
dec
mov
mov
pop
int3
or
fcomip
mov
jp
fisttpll
push
in
icebp
jne
push
ds
imul
fnstsw
xchg
mov
inc
roll
jmp
mov
and
add
ss
repz
js
mov
test
clc
loope
popf
jo
ret
inc
cmc
mov
paddb
std
out
test
pop
stc
sar
ds
inc
mov
mov
adc
inc
subl
or
pop
fstp
sub
dec
outsl
cld
xor
cli
xchg
sbb
fstpt
add
shlb
push
add
adc
in
flds
arpl
jmp
cmp
jne
inc
push
movsb
les
frstor
xorb
xchg
xor
cmp
popa
jo
jg
cltd
imull
mov
xchg
out
loope
push
mov
cmovs
cli
pop
inc
mov
jge
sbb
and
jp
es
xchg
shrb
test
sahf
sti
and
mov
or
in
mov
sbb
xor
mov
icebp
mull
and
hlt
mov
outsb
lret
xlat
dec
jge
jb
rcll
arpl
mov
mov
mov
popa
xchg
out
or
ret
dec
mov
pop
dec
aam
and
adc
xchg
fcomps
mov
out
lea
sbb
lea
xor
dec
adc
pop
adc
xlat
pop
add
mov
push
hlt
jg
xchg
and
sub
imulb
shrb
mov
xchg
xchg
loope
jge
push
mov
jecxz
jl
mov
mov
jno
arpl
pusha
pop
xor
jo
cs
mov
movsb
and
fiadds
movsb
pop
pop
sub
pop
push
inc
add
pop
push
aaa
mov
stc
mov
or
sti
adc
stos
in
enter
ret
push
ds
adc
jns
xchg
insl
xor
push
sub
adc
pop
sub
mov
stc
cwtl
lret
dec
pop
xor
xor
pop
push
cmp
dec
cwtl
mov
iret
leave
add
imul
dec
mov
arpl
in
jp
push
dec
adc
shr
clc
cmp
push
jae
adcl
les
mov
shrb
mov
adcl
mov
push
arpl
imull
jb
mov
jg
clc
bound
punpcklbw
into
test
stos
addr16
sbb
clc
addr16
inc
popa
decl
jb
mov
aam
aaa
outsb
sbb
adc
cmp
add
notb
dec
xor
jle
jb
mov
xor
pop
adc
ja
inc
cmp
push
insl
into
inc
outsl
rcrb
dec
push
sbb
jb
cmpsl
push
pop
in
je
mov
push
adc
push
mov
hlt
mov
mov
mov
ficomps
stos
js
and
cmp
dec
pusha
in
imul
mov
rolb
xchg
icebp
push
cwtl
aas
or
mov
lock
mov
pop
cmpsl
pushf
roll
dec
repnz
inc
or
or
outsb
cmc
aaa
adc
fs
fwait
cli
loop
sbb
shr
mov
lock
xor
or
mov
push
insb
scas
lahf
mov
pop
cmp
aad
add
lea
jne
sbb
jp
stc
in
jecxz
xor
or
ffree
fldl
outsl
rolb
sbb
jb
xor
push
or
cmp
subb
scas
pop
push
jl
pop
mov
xor
jae
mov
inc
or
xor
pop
jmp
sub
mov
push
cmp
lock
shrl
cltd
sub
xchg
fs
sub
out
iret
mov
pop
aad
sarl
jae
xchg
daa
push
dec
sub
sahf
dec
dec
in
inc
fists
sbb
mov
pop
mov
pop
nop
imul
mov
jne
inc
xor
adc
push
hlt
add
jns
sub
push
sub
push
sbbl
inc
inc
add
sub
and
test
sub
mov
xor
mov
jae
jp
popf
jne
cmp
xor
xor
insb
xchg
cli
call
xor
in
ret
jbe
xor
out
enter
add
hlt
aam
sub
cmp
mov
addb
or
xchg
xchg
fildll
ret
outsb
jge
addr16
daa
loope
lret
pop
add
dec
stos
xchg
int3
lods
pusha
enter
dec
jecxz
ljmp
lods
pop
stc
cmpsb
negb
dec
cwtl
ret
and
gs
xlat
push
inc
div
mov
push
clc
ficoms
cmpsb
mov
pushf
dec
adc
shrl
jnp
sahf
inc
xor
ret
gs
or
or
mov
divb
sahf
mov
movsb
xchg
mov
outsb
js
sub
lods
test
aad
sub
lahf
sub
cmp
fildll
push
jmp
int
rcr
adc
lret
stos
mov
dec
jp
clc
mov
je
cld
ja
push
sbb
xor
pop
pushf
imul
mov
stos
sub
push
push
pop
cmp
and
leave
push
pusha
sbb
jge
sarl
movsb
jne
cmpsb
cs
cwtl
repz
movsb
push
or
xor
jbe
rolb
stos
cmp
lods
test
pop
gs
int3
cvtps2pi
sbb
dec
pushf
inc
mov
mov
or
cmp
push
add
mov
stc
xorl
mov
or
cmp
lret
mull
js
int
jge
movsb
sbb
push
cmp
adc
pop
insb
test
xor
push
add
clc
decl
insb
xor
in
movsb
pop
out
xchg
inc
mov
test
in
call
addl
jp
and
inc
mov
rorb
or
arpl
fiaddl
and
data16
jns
mov
xchg
decb
cmpsb
pushf
mov
lea
sub
lret
pop
add
xchg
or
rol
jl
xchg
mov
sub
adc
movsb
mov
int
jae
inc
ret
add
cmpsb
das
sbb
lds
loope
sbb
shrb
adc
dec
dec
mov
add
and
push
cmpsl
fsubrs
or
shll
stos
out
loop
mov
test
jno
adc
sbb
sahf
daa
stc
pop
lea
sbb
scas
cmpsb
xor
fsubl
outsb
add
add
mov
push
lcall
cltd
fwait
and
inc
xor
and
loop
mov
mov
sub
data16
and
mul
imul
lods
pop
sub
and
inc
test
cltd
cli
ja
mov
fdivrl
add
sbb
ret
rolb
or
les
out
pop
popa
pop
xchg
pushf
jae
ja
repnz
xor
add
sbb
stc
mov
xchg
nop
stc
or
jns
mov
ret
jle
mov
jnp
cs
int
xor
dec
ret
push
adc
ret
das
adc
lock
pop
pop
add
loopne
faddl
bound
pop
aaa
sbb
fildl
jecxz
push
push
jmp
push
push
sub
repz
es
arpl
mov
push
pop
jno
push
cmp
jg
imul
movsl
push
pop
dec
aas
cltd
out
sub
mov
mov
out
dec
arpl
int3
cmp
mov
clc
xor
ljmp
loopne
inc
jne
mov
popa
push
mov
or
inc
xor
bound
lods
xchg
in
add
add
jnp
and
xchg
rclb
cmpl
fnstsw
sbb
push
cwtl
outsb
insl
ljmp
pop
lret
popa
leave
jmp
jge
mov
int3
and
xchg
xor
clc
les
or
shr
das
jo
movsl
fxch
mov
add
and
jmp
pusha
test
stos
call
dec
xor
test
and
dec
daa
dec
push
cli
push
mov
lods
xor
add
push
cmc
xchg
or
xchg
fdivl
cmp
inc
lock
pop
addr16
jmp
mov
inc
dec
jno
out
or
adc
repnz
jo
cmpsb
mov
dec
negl
arpl
mov
mov
xor
rol
jae
xor
sbb
mov
and
ja
sub
nop
jle
xchg
sbb
mov
jno
pop
incl
cmp
mov
imul
jmp
out
testb
cltd
jmp
jo
mov
mov
adc
test
inc
or
fwait
cmpsb
adcb
mov
xor
mov
push
aaa
xchg
ja
clc
adc
int
xor
mov
and
sbb
or
xchg
mov
mov
sarl
cmp
movsb
cmp
ss
in
rcll
decb
mov
lret
mov
test
ds
aam
push
jmp
and
jle
pop
xchg
inc
mov
pop
xor
mov
cmp
xor
stos
ljmp
aas
or
xor
pop
push
sbb
push
add
in
ss
sbb
cmp
imul
inc
stc
ret
jle
movsl
pushf
xlat
jg
xor
jle
or
sub
sahf
push
jbe
das
rcrl
push
xlat
add
xchg
pop
bound
aas
lods
pop
xor
jne
rcr
push
es
icebp
inc
inc
std
jge
dec
xor
sbb
sub
nop
sarb
pop
sub
fdivrl
lahf
ljmp
mov
add
jno
mov
pop
lahf
arpl
adc
xor
fwait
lea
add
push
jno
pop
mov
dec
outsb
adc
fidivl
mov
xchg
std
cld
push
or
into
decb
push
mov
dec
in
mov
jnp
lahf
adc
mov
fidivl
cmp
int3
xor
fistpl
mov
cmp
in
call
lcall
mov
inc
cmc
push
out
or
int3
jno
jg
loopne
sahf
dec
loope
mov
xor
xor
cmp
loop
xchg
mov
jl
mov
and
fildll
pop
test
inc
mov
cmp
pop
aas
daa
push
pop
inc
into
push
movsb
jne
cmpsl
fldt
push
mov
cmp
pop
push
dec
sti
jmp
lock
jge
and
and
sahf
mov
or
pop
xchg
sahf
cmp
pop
add
push
dec
sub
jbe
lods
inc
andl
push
xor
push
stos
jl
in
or
mov
popa
movsl
mov
push
je
es
mov
std
jp
cmp
test
lods
sbb
jne
push
mov
cld
outsl
cmc
add
sbb
out
or
shlb
repz
xor
lahf
movsb
cmp
sbb
xchg
out
mov
addb
or
aam
mov
lods
int
imul
loope
cmpsb
cmp
xor
addr16
gs
jmp
ja
shrl
push
loopne
ret
pop
mov
xchg
cmp
arpl
lds
sti
out
xchg
sarb
stos
pop
push
stos
jle
pop
mov
stos
in
cmc
xchg
mul
and
lock
xor
pop
or
cmpsl
cmp
rcl
xchg
sahf
pop
or
adc
aaa
adc
mov
sahf
adc
and
lret
or
addr16
dec
incl
xchg
aad
jp
and
mov
pop
push
inc
aad
pushf
imul
lods
js
iret
and
data16
push
inc
or
add
xchg
inc
pop
cmc
xchg
mov
dec
pop
jg
inc
test
push
fiaddl
and
fiadds
popf
sub
mov
or
lods
lock
or
mov
mov
add
repz
or
sub
jno
add
ficompl
mov
divl
scas
and
pop
shll
push
inc
lods
mov
cld
leave
mov
xchg
inc
popa
add
mov
xchg
sbb
pushf
push
sbb
addr16
fisubrl
sub
int3
mov
jle
lods
mov
imull
xor
pop
xor
insb
fdiv
mov
mov
mov
loope
mov
pop
movsl
stos
lret
bswap
jne
jl
add
imul
xchg
pop
adc
call
sbb
pusha
pop
xlat
pop
rclb
scas
scas
clc
popf
lods
pop
cli
xor
pop
loope
push
adc
aas
push
dec
sarl
inc
out
mov
inc
test
ja
iret
imul
aas
insb
sbb
fisubrs
bound
or
das
mov
mov
sbb
insl
ret
inc
cmpsl
cmp
and
adc
int3
rolb
ret
repz
xor
xor
sbb
jo
inc
add
cmp
int
lret
mov
cmp
xchg
xor
stos
dec
or
fstpt
inc
cld
frstor
dec
xchg
jmp
shrl
push
and
sbb
dec
xor
movsb
xor
sbb
jbe
jns
jle
push
movsl
push
inc
xchg
sbb
std
add
sbb
xor
adc
xor
and
mov
int
mov
add
lahf
push
and
mov
cltd
inc
mov
inc
ja
add
mov
and
mov
leave
call
ds
addr16
cmpsl
push
jo
dec
addl
and
pop
outsl
repz
dec
push
scas
in
lods
in
sbb
xchg
and
pushf
pop
mov
cwtl
cmpsl
xor
sub
jmp
hlt
daa
lds
mov
lock
inc
mov
mov
cmp
mov
pop
adc
pop
sahf
repnz
xor
xor
adc
leave
outsl
cmp
jmp
push
pop
je
mov
cmpsb
xor
hlt
in
cwtl
repz
aas
or
and
lcall
lods
mov
fwait
xchg
xchg
inc
sti
cli
ret
test
jge
jno
ljmp
ret
xor
mov
call
push
loopne
aad
sahf
aas
fmuls
jb
fmulp
add
dec
fs
xor
test
add
insb
pop
mov
jnp
mov
mov
adc
mov
inc
loopne
dec
movsl
mov
stos
inc
cmpsl
xchg
scas
int3
adc
in
pop
xchg
dec
jbe
enter
push
pushf
rclb
pop
rol
pop
test
imul
xor
stos
mov
mov
mov
je
sub
mov
out
insl
fisubrs
shll
pop
sahf
dec
and
jne,pt
mov
jle
cli
loopne
repz
int
ds
adc
fstp
push
shll
mov
and
push
mov
in
jb
fisubl
fbstp
les
xor
cmpsl
int
mov
aaa
loopne
lahf
loopne
into
adc
into
nop
jle
jle
jge
pop
or
ret
mov
dec
fcmovnu
loopne
mov
jns
mov
int3
adc
insb
fisttpl
cmp
je
out
ret
faddl
stos
and
adc
shll
add
cmp
sarl
shrb
ss
cmp
mov
mov
ds
mov
adc
and
xor
nop
sub
jl
enter
scas
sbb
push
pop
jo
xchg
jl
xor
lret
sbb
cmp
mov
adc
mov
jno
loop
mov
in
lcall
adc
rep
mov
pop
xchg
xor
mov
cmp
lock
xchg
popf
in
cmp
push
cmc
xchg
jl
push
arpl
pop
das
xchg
aas
lods
sub
adc
test
mov
push
jne
jp
pop
add
cmp
inc
cs
inc
cwtl
popa
ficompl
cltd
lds
orl
idivl
ret
add
xchg
xchg
adc
cmpsb
push
mov
dec
mov
sbb
xchg
loopne
rcll
pop
pop
add
pop
lea
shlb
xchg
shrb
or
ds
iret
repz
jne
dec
fmull
mov
fmul
dec
icebp
xlat
test
jnp
dec
cmc
cmp
lcall
add
std
ret
lcall
out
add
mov
sbb
rcll
lret
dec
jnp
add
cmp
xor
dec
subb
or
aam
icebp
jp
and
loop
inc
frstor
es
add
xchg
push
shl
fdivr
gs
test
cmpsl
add
cmp
ds
ror
jne
ret
leave
and
mov
mov
cmp
cs
add
lret
fwait
pop
dec
out
adc
out
adc
popl
pop
fidivrs
push
push
das
pushf
mov
xchg
jns
fists
push
shrl
fwait
inc
sub
push
jns
ret
push
mov
push
jmp
pop
ljmp
push
or
add
gs
imul
jl
mov
test
cmp
movb
out
pop
ficompl
jl
jbe
jno
pop
jnp
inc
sti
fwait
jmp
stos
ljmp
mov
shl
or
imul
cltd
push
repz
fcoml
divps
and
sub
ljmp
je
outsl
and
pop
jle
xor
dec
fistpl
mov
push
inc
fisubs
push
fdivr
test
adc
sbb
cs
fstps
popf
lods
ljmp
add
mov
mov
adc
test
sbb
ljmp
popf
mov
adc
jae
ja
aas
lahf
mov
mov
ljmp
lds
xchg
mov
divb
mov
aaa
jg
mov
xchg
outsl
mov
or
cmpb
dec
or
hlt
sbb
mov
push
cwtl
shrb
enter
jae
mov
push
imul
jmp
addl
pop
clc
inc
fnsave
ja
pop
out
outsl
ret
mov
out
addr16
and
aas
inc
mov
mov
mov
cmp
hlt
ja
xchg
or
or
dec
das
fs
iret
out
lcall
mov
fistpll
mov
stos
push
cmpsl
loopne
mulb
mov
aas
cld
or
mov
sub
cmp
push
mov
cld
push
loope
adc
lods
sbb
lss
add
mov
enter
stos
adc
out
ret
outsb
movsb
lods
inc
jb
jbe
push
jle
mov
and
push
and
jbe
stc
xor
int3
outsb
add
mov
sub
mov
push
subl
sub
xor
fs
sbbl
addr16
dec
sbb
ficomps
or
cmc
lret
push
push
outsl
nop
jnp
cld
sbb
sbb
shll
pusha
aam
shrb
fldenv
jecxz
and
mov
cmpsl
scas
test
rorl
loop
pop
mov
or
jg
pop
sbb
daa
ret
or
xchg
ret
xchg
push
repz
int
adc
mov
xor
popa
push
shr
outsl
xchg
jl
jmp
add
pushf
lahf
ds
sub
cmpb
mov
push
sub
xchg
addr16
adc
xor
dec
jl
pop
popa
aaa
push
jg
cmp
jae
xchg
xorl
or
fstpl
pop
fsubrs
ljmp
ret
and
je
pushf
adc
jbe
negb
mov
xor
or
cmp
bound
adc
cmp
pop
out
int3
outsl
push
xor
push
add
loopne
xchg
sub
cmp
add
jae
or
notb
filds
mov
cmp
sahf
outsb
fs
out
cmpsb
adc
push
push
fcmovnb
ljmp
or
fidivrs
push
fwait
push
ss
cmp
mov
adc
sahf
add
jecxz
dec
fistpl
pop
lds
ds
push
pop
dec
jns
pop
dec
scas
xchg
cmpsl
mov
out
inc
inc
jl
pop
pop
jl
mov
aas
adc
add
push
dec
pop
jg
dec
mov
add
cmp
or
mov
jp
rolb
push
mov
adc
fistpll
gs
add
stos
sub
mov
rorb
push
fisubrs
shlb
ja
dec
lretw
push
jno
shlb
xchg
cs
cmpsb
pop
push
shl
scas
repz
ret
subl
in
dec
pop
lret
mov
call
xor
mov
ds
jbe
fistl
adc
fcmovb
xchg
hlt
inc
pop
jbe
sbb
mov
push
mov
int
xchg
outsl
test
popf
test
pop
repz
jno
push
rcrl
mov
or
loopne
aad
jecxz
pop
jle
int3
insb
testb
xchg
nop
xchg
jg
out
dec
rcll
data16
ret
jmp
add
out
lret
fwait
xchg
jnp
jg
push
mov
mov
jno
outsb
imul
mov
cmp
push
imulb
push
sbb
pushf
xchg
test
xor
or
pop
xlat
scas
dec
test
outsl
push
pop
push
lods
inc
push
ja
mov
adc
ljmp
fiadds
fnsave
jg
pop
jo
shl
lea
sub
xor
xchg
and
mov
mov
sti
inc
jg
les
mov
mov
pop
mov
sbb
fsubrp
ds
sbb
cmp
scas
and
lret
pop
mov
sub
cmc
mov
mov
cli
jns
pop
sarb
lahf
ror
cld
fs
mov
mov
push
nop
xor
je
sub
mov
ud1
lds
in
nop
or
sub
movsl
test
dec
movsl
insl
outsl
fiaddl
fwait
inc
cmp
sbb
xchg
jns
pop
mov
int
loop
shl
loop
push
push
adc
inc
jge
addb
mov
enter
pop
in
mov
push
cmpsl
sbb
cmp
dec
aaa
sbb
or
in
pop
or
addr16
cmp
pop
sahf
stc
mov
insb
aas
and
cmp
and
loope
push
sbb
lds
xchg
jecxz
xor
or
mov
and
jno
es
dec
mov
mov
sbb
pop
push
push
xor
add
das
mov
hlt
jge
add
hlt
popf
shlb
dec
leave
dec
and
jmp
mov
out
addl
xor
orl
test
sub
xor
test
popf
mov
sti
div
cmp
cs
push
jnp
pop
mov
cli
movsl
sbb
lahf
test
sub
test
cltd
leave
lea
data16
pop
fs
pop
mov
adc
in
jp
sbb
push
in
rcl
mov
cvtps2pi
daa
fstps
jmp
xchg
jbe
in
sub
and
xchg
inc
imul
loope
adc
inc
ss
push
int
sti
sbb
out
call
roll
pop
lret
pop
xor
push
popf
inc
and
bound
inc
aas
jbe
jle
popf
repnz
imul
repz
pop
adc
xchg
leave
sbb
add
popa
cmp
or
imul
inc
dec
dec
stos
mov
adc
push
cmp
mov
push
ret
jl
into
mov
ljmp
add
test
xor
gs
call
inc
add
mov
push
xor
or
push
popa
push
out
loop
jl
out
lcall
or
xlat
pusha
mov
jmp
mov
cmp
popf
dec
sti
fs
pop
cmp
mov
mov
nop
jmp
inc
sub
jle
dec
enter
mov
aaa
and
outsl
add
mov
mov
repz
pusha
cmpsb
scas
mov
pop
scas
sub
int3
push
lea
jb
push
dec
filds
adc
out
mov
bound
ret
ja
xor
jge
mov
sahf
add
pop
je
dec
das
push
inc
or
mov
sub
mov
jno
gs
jmp
cmpsl
lcall
pop
jle
push
pop
cmp
jb
sbb
or
call
jns
xor
mov
mov
cld
add
shll
or
jne
addb
shrb
mov
ss
into
add
adcb
xlat
popf
xor
enter
push
cwtl
outsl
pop
push
and
sti
push
shrl
rcrb
push
or
lods
jp
mov
pop
adc
in
shrl
ret
inc
xor
pop
jno
jp
xchg
mov
fldl
push
xlat
xchg
push
cwtl
test
out
mov
pop
int3
or
mov
xor
ss
movsb
in
sub
lock
imul
ja
mov
mov
jle
push
scas
add
scas
xchg
aad
adc
lret
xor
insl
lds
shlb
push
cli
inc
inc
xchg
in
testl
aas
sahf
sub
lahf
xchg
pop
jmp
test
pop
mov
push
push
xor
mov
mov
mov
pop
mov
mov
cwtl
mov
xchg
push
mov
cs
aad
repz
inc
dec
enter
out
inc
insl
push
aas
ffreep
test
lock
bound
mov
dec
push
and
in
gs
test
dec
or
cli
divb
loop
mov
and
xchg
push
jne
cmpsl
adc
inc
les
push
fsubl
rorl
push
scas
mov
inc
out
insl
mov
push
pop
stc
test
add
pop
loope
inc
mov
imul
into
leave
push
jmp
imul
lds
dec
mov
jno
mov
push
mov
jae
popf
pop
rcrl
cs
xchg
lods
add
pxor
ret
xchg
ja
pop
aas
xchg
pushf
xchg
cld
jmp
mov
xor
push
and
outsb
adc
ljmp
lret
xor
cmp
shlb
mov
lods
incl
aam
jg
sub
jecxz
loop
out
imul
out
push
sbb
lret
cmc
and
cld
push
cwtl
add
dec
pop
vsubss
adcl
xchg
imul
or
xlat
mov
pop
xor
mov
dec
ljmp
mov
xchg
jg
into
rcrl
shr
push
dec
int
fdivs
div
pusha
mov
xchg
pop
shl
fisttpll
jb
mov
shrb
push
insl
aas
and
inc
jl
mov
pop
or
cs
imul
insb
scas
fwait
stos
ja
paddusb
or
jecxz
sub
xor
fs
out
mov
push
push
mov
xchg
xchg
ja
sub
xor
cld
movsl
dec
cmp
icebp
invd
gs
add
push
mov
and
xchg
mov
dec
outsl
add
test
sbb
jae
mov
ss
data16
jmp
add
movl
push
push
sub
or
pop
lea
mov
fldt
jmp
stos
and
lahf
daa
mov
mov
fisubs
stos
push
cmp
out
into
aad
xchg
cmpsb
dec
jp
ljmp
adc
jae
nop
cmc
cmp
inc
pop
push
and
push
lcall
stos
pop
data16
lea
push
iret
sahf
mov
aad
pop
adc
inc
aaa
cmc
test
jecxz
iret
inc
sub
das
mov
mov
std
pop
jns
nop
jecxz
jns
enter
iret
test
test
mov
jle
pop
sbb
sbb
ret
lock
insb
pop
xorb
loopne
xchg
in
out
dec
dec
sbb
add
mov
scas
xor
xchg
outsb
xor
addr16
add
ret
outsl
mov
rcrb
pop
fistps
cmp
mov
imul
rorb
xor
adc
push
xorb
scas
scas
imul
pop
mov
and
pop
faddl
leave
scas
mov
pop
adc
fldenv
flds
mov
pop
shrb
aam
add
mov
cmpsl
mov
ljmp
mov
decb
pop
sbb
inc
inc
stc
mov
add
and
adc
inc
or
ret
sahf
orb
insb
inc
lret
sub
push
fiaddl
adc
mov
dec
or
mov
cvtpi2ps
sbb
out
loopne
mov
in
jnp
mov
scas
xchg
in
jne
pop
outsl
mov
xchg
xorl
mov
cwtl
loopne
adc
repz
push
or
jg
pop
and
repnz
mov
xchg
adc
and
ljmp
insl
rol
inc
jmp
lret
stos
imull
xchg
lds
iret
lods
scas
mov
cld
lret
mov
or
out
add
lcall
dec
mov
pop
push
jle
adc
push
aas
push
das
out
sbb
iret
cmp
and
movsl
int
stos
adc
in
xor
out
iret
mov
mov
and
xor
push
bound
xchg
jne
icebp
cmp
xor
in
shlb
aaa
inc
sarl
out
sub
scas
dec
push
sub
je
iret
iret
xor
or
scas
icebp
popa
pop
xchg
push
jnp
xchg
loopne
decb
ret
cmp
lock
xchg
rclb
add
out
push
aad
mov
push
mov
dec
imul
out
cmp
sub
pop
clc
rcrl
ficomps
int
ds
roll
cli
jne
mov
std
pop
adc
pop
xchg
out
es
xor
lcall
fwait
in
lds
jo
mull
and
test
popa
jns,pt
and
or
call
int3
lahf
fcom
or
in
addb
shll
xor
sbb
cmpsb
ljmp
and
clc
xor
dec
add
dec
inc
and
inc
sbb
mov
notb
jno
shlb
xor
insb
sti
adc
sub
adc
inc
stos
xchg
enter
sbb
aas
inc
stos
dec
inc
jle
push
cltd
push
mov
pop
or
inc
lock
sbb
loope
sub
dec
mov
sahf
repz
repz
pop
cld
bnd
or
mov
dec
sbb
lods
shlb
subb
jbe
mov
popf
ds
mov
sub
mov
lahf
pop
inc
dec
repnz
sub
inc
mov
push
cmp
push
in
mov
sar
test
cmovg
into
push
and
xlat
sbb
inc
push
or
pop
or
in
pop
mov
jecxz
mulb
sub
sbb
mov
cmp
inc
out
and
ds
aam
cwtl
jecxz
filds
jb
cmp
ror
adc
fs
mov
pop
in
pop
jge
repnz
or
pop
dec
lods
lret
fistl
roll
cmp
pop
out
dec
add
enter
call
xor
inc
sub
pxor
test
jle
mov
movsl
push
sub
jae
in
push
test
enter
lock
jmp
inc
je
mov
aaa
scas
adc
add
in
mov
ret
ficoms
pop
jge
jo
jp
fwait
stc
pop
xchg
out
mov
add
daa
movsl
js
pop
push
jg
out
pop
xchg
lahf
xchg
jb
xchg
icebp
aam
cmpsb
cmc
std
xchg
aas
data16
add
cmpb
xor
mov
mov
rcrb
mov
loope
and
test
aas
adc
pusha
push
cli
mov
mov
jl
repnz
outsl
mov
xor
movl
push
xor
pushf
cli
pop
add
iret
jg
arpl
scas
outsb
fistpll
aam
xchg
lds
dec
mov
dec
sub
repz
dec
ficoml
imul
arpl
jb
or
loopne
and
dec
xor
xchg
lcall
mov
enter
adc
in
inc
in
test
outsb
in
mov
in
je
pop
and
stos
int
xor
pop
jmp
adc
loopew
push
jae
mov
and
push
xorb
xor
stos
aam
mov
daa
and
push
jle
movsb
hlt
mov
dec
lock
mov
xchg
sti
repnz
sub
adc
or
outsl
xchg
ror
xchg
add
mov
push
daa
arpl
shll
aaa
add
or
ds
sbb
add
inc
mov
adc
test
jo
cli
pop
sub
arpl
mov
and
enter
data16
dec
sarl
ljmp
inc
mov
mov
jno
out
repz
orl
lahf
in
and
jns
test
inc
and
sarl
cmp
push
push
cmp
add
sbb
fldcw
ja
test
cmp
shlb
and
inc
leave
inc
mov
int
pop
push
repz
dec
add
xchg
push
fstpt
fs
call
mov
push
lcall
mov
and
movsb
subb
lods
setb
push
pop
ret
insl
sbb
mov
repz
test
in
push
and
sbbl
std
outsl
and
mov
popf
dec
mov
rorl
mov
test
ret
jmp
add
popf
pop
push
inc
lods
or
inc
ljmp
xchg
dec
cli
iret
aad
shll
insb
lock
xchg
sub
int3
pusha
dec
adc
fistl
movhps
jg
daa
mov
int
rcll
sbb
or
pop
gs
ss
call
imul
mov
cmpsl
movsl
pop
popa
cmpsb
mov
cld
fisubs
mov
rcr
repz
sti
rcl
xlat
inc
in
xor
inc
inc
lret
dec
push
or
adcb
ss
cmp
ljmp
enter
adcl
mov
xchg
cmp
iret
jge
pushf
iret
jl
sub
lock
test
rcr
cmc
lahf
pop
call
mov
dec
sub
mov
fistl
call
adc
test
movsl
ds
dec
lahf
sub
das
cltd
out
sub
sbb
jle
inc
cmp
fisubs
in
fisubs
dec
test
xorl
adc
pop
push
jl
mov
xchg
add
push
test
aam
aam
js
xchg
imul
imull
xchg
mov
sbb
sub
push
mov
insl
mov
fadds
xor
and
pop
mov
cli
sbb
jp
mov
rcl
gs
or
rcr
je
xor
push
mov
aam
fldcw
pop
push
test
rcr
jno
xor
lret
or
mov
push
adc
push
aaa
les
arpl
jmp
jns
jge
ja
pop
push
mov
rcrl
mov
insb
pusha
ret
ret
xchg
int
sbb
mov
mov
xchg
scas
loope
aam
imull
sub
push
arpl
test
xchg
dec
sub
insb
sar
pop
jns
cmp
push
aaa
fcmovu
sub
lea
mov
aaa
ret
mov
or
scas
ljmp
ficoml
test
inc
shrl
shl
jb
addr16
cmpsb
leave
shl
push
jo
loopne
das
push
ret
in
ljmp
push
inc
or
je
es
mov
movsl
and
mov
mov
push
sbb
sbb
lock
dec
mov
or
inc
test
mov
push
sarl
push
sbb
outsl
adcb
clc
loopne
int3
adc
or
mov
pop
mov
xchg
cmc
pop
scas
mov
sbb
es
popf
test
xlat
lcall
sub
arpl
sarb
daa
repnz
jmp
fs
mov
outsl
test
lea
lods
ror
mov
leave
stc
in
ret
mov
test
inc
mov
test
jle
pop
dec
aam
pop
jnp
cmp
add
pop
jns
xchg
cli
sbb
ss
vdivsd
ss
mov
add
mov
push
jno
hlt
cld
xor
subl
movsl
rcrb
mov
and
movsl
lock
jbe
arpl
je
rclb
hlt
jg
xor
stos
inc
push
sbb
repz
mov
ret
mov
jge
std
dec
in
ds
push
sbb
dec
js
mov
xchg
rorl
int
scas
inc
cld
adcl
jmp
arpl
ret
out
mov
sahf
push
outsb
mov
adc
mov
jno
mov
dec
mov
sti
sub
in
enter
mov
add
addr16
je
shll
sub
add
fcomip
das
fnstenv
xor
sbb
mov
jl
mov
pop
fcmovne
enter
into
jecxz
sub
cmp
test
lret
pop
sbb
popf
cmp
sub
add
push
push
and
push
mov
xchg
push
ret
mov
fadd
mov
pusha
push
and
lret
inc
std
movsb
mov
xadd
js
lret
push
movsb
adcb
lret
aad
aad
dec
sarb
rclb
movsb
or
testb
aas
inc
loop
stc
cmpl
adc
nop
push
paddusw
jne
int
out
cmpsl
bound
push
imul
test
xchg
or
lods
adc
cmp
cmp
int3
mov
rorb
xor
lds
ja
ja
mov
hlt
adc
das
lret
enter
cmp
stc
pop
int3
xchg
sti
mov
cwtl
in
adc
inc
jmp
cmp
loope
adc
pop
add
addl
nopl
nop
shll
jmp
jno
fadds
mov
ds
daa
pop
dec
xchg
fiaddl
cmp
rclb
imul
adc
stos
int3
pop
daa
js
mov
ror
jmp
dec
icebp
lea
or
loope
dec
xchg
idiv
scas
inc
push
or
jne
mov
mov
jl
jmp
sahf
mov
faddl
mov
sub
inc
aaa
mov
jo
into
pop
dec
cmpsl
fimull
jbe
out
ja
push
imul
push
out
sti
mov
lods
xchg
fistpll
add
cld
xlat
in
inc
jae
clc
int3
mov
jo
and
mov
ja
or
mov
sbbl
cmpsb
pushf
stos
xchg
and
sub
add
stc
mov
adc
fistl
sbb
test
dec
rcr
movsl
fistpl
ds
dec
sbbl
jo
rcrb
cmp
aas
aaa
stos
into
lods
jo
mov
fnstsw
and
shl
xor
in
push
cmp
outsl
daa
in
fcomps
mov
lret
arpl
pop
inc
and
arpl
popa
ja
jns
cmp
repz
fwait
jmp
in
popa
mov
in
xchg
jl
movsl
add
lds
mov
pop
cmp
add
ljmp
dec
sub
inc
fbstp
adc
and
xchg
imul
jb
add
add
cld
cmpsl
cmp
decb
xchg
jg
lea
test
jnp
sbb
enter
push
movsl
scas
mov
fs
test
pop
loope
xor
pop
es
js
mov
pushf
jmp
cltd
mov
cmpb
mov
aad
pop
mov
push
push
decb
xchg
adc
fildll
roll
aaa
imul
mov
in
shr
addr16
mov
icebp
cmp
pop
mov
push
and
xlat
cmpsb
ret
add
mov
jae
jns
negl
jnp
adc
addl
into
fnstsw
gs
push
jp
or
cwtl
sbb
lahf
and
lods
fwait
jbe
adc
xlat
loopne
decl
and
push
in
sbb
dec
pop
mov
cmp
push
jb
arpl
pop
iret
arpl
repnz
dec
pop
inc
dec
sbb
lahf
shlb
sub
nop
movsb
movsb
negb
repnz
ss
pop
orb
js
mov
bnd
cltd
aaa
mov
sbb
mov
sbb
ss
ds
sbb
pop
pop
xchg
rcrb
cmp
test
sti
pushf
jle
jge
push
or
push
pop
clc
cmp
cmp
jmp
test
repnz
dec
push
je
adc
daa
in
xor
enter
addr16
daa
push
icebp
push
add
movsl
mov
subl
sbb
ja
ret
xchg
mov
sbb
jae
cmp
gs
cmp
repnz
int
fbstp
xlat
lds
loop
inc
xlat
inc
jb
add
ret
sbb
test
dec
test
fstpt
jno
jle
orl
inc
adc
pusha
movsb
mov
out
sbb
mov
insb
jne
and
lret
das
sti
ror
mov
stc
xor
add
push
mov
aad
jle
jnp
mov
or
and
push
sahf
inc
inc
cmp
out
adc
push
fwait
sub
mov
aaa
inc
and
ret
shlb
cwtl
sbb
dec
sti
repnz
rclb
call
pop
roll
ds
jne
xlat
push
std
sbb
clc
outsl
insl
mov
sub
icebp
xchg
popa
cmp
xor
sbb
mov
sub
repz
enter
test
into
xchg
addr16
add
xor
insb
call
lahf
inc
aad
fstpt
inc
jge
repnz
mov
pop
adc
insl
fstps
fxam
cmpl
inc
addr16
cmp
sbb
aaa
les
shrb
leave
ss
aam
push
jo
push
xchg
aam
add
test
outsl
stc
loope
dec
mov
fildl
jmp
stc
dec
push
mov
push
int
repnz
scas
cmpsb
sti
jo
aaa
shlb
fcomp
jae
cld
add
lahf
out
popf
outsb
dec
pop
push
shl
imul
jbe
into
xchg
add
add
loopne
aas
cmp
adc
call
mov
cmp
inc
xor
xadd
add
mov
stos
imul
push
pop
or
lea
inc
push
insb
sahf
mov
sbb
mov
xchg
shrb
adc
pop
add
mov
mov
pop
dec
out
cld
or
aam
pop
xor
dec
xor
addr16
lods
aad
or
mov
cmpsl
add
adc
add
scas
insb
dec
mov
fstpt
mov
or
scas
hlt
pop
mov
movsl
not
leave
test
mov
shlb
inc
adc
out
testl
fcompl
add
xlat
xchg
add
adc
sbb
add
inc
movsb
pop
xor
jae
jnp
in
dec
rolb
xlat
push
mov
aaa
jmp
xchg
pop
and
mov
xor
lods
bound
lcall
stos
das
xor
int
add
mov
jbe
outsb
adc
incl
in
mov
cmp
lret
mov
and
or
mov
scas
in
jo
jmp
fstpt
mov
leave
inc
jp
add
sub
test
jmp
movsb
decl
je
notb
xor
inc
dec
outsl
jbe
frstor
adcl
ljmp
testw
sbb
jnp
xchg
jbe
mov
lea
xchg
and
idivl
das
adc
sbb
add
ss
adcb
push
fs
cmp
xchg
aas
imul
add
sahf
lock
sahf
das
popf
hlt
cmp
iret
xor
mov
xchg
xchg
push
imul
adc
test
test
push
movsl
mov
pop
pop
ret
movd
dec
ja
movsl
lock
mov
stos
xchg
xlat
pop
pop
xchg
xorl
dec
cmp
xor
mov
scas
rorl
loope
decb
cld
and
xchg
mov
adc
je
pop
test
cmc
xor
or
bound
outsb
pushf
arpl
popa
inc
inc
or
xor
ljmp
daa
xorb
iret
lock
sbb
lods
mov
mov
add
mov
push
or
lahf
flds
bound
push
mov
std
rolb
test
xlat
jnp
or
pop
jo
sarb
mov
hlt
test
call
or
adc
je
aad
idivl
sbb
shl
mov
int
add
decb
into
popa
aad
frstor
mov
mov
hlt
lods
dec
loop
push
push
fisubs
dec
mov
sub
out
orb
inc
mov
int
shrb
pop
mov
sbb
pop
pop
and
les
adc
lods
shll
inc
add
pop
ss
push
test
pop
mov
cmp
adc
lcall
scas
sbb
dec
pop
add
cmp
lods
aam
shlb
add
cmp
or
pop
xlat
sbb
jl
dec
sti
loopne
push
xchg
fs
push
fcomi
mov
adcl
int3
sub
push
add
inc
mov
call
or
or
stc
adc
and
insb
mov
sub
test
xor
sbb
jo
ss
jo
dec
mov
or
sub
xchg
daa
pop
in
int
xchg
ret
and
sahf
addb
jmp
lods
sbb
jb
pushf
pop
add
and
bnd
sahf
pop
mov
add
imul
iret
xchg
and
inc
xchg
insb
add
fisttpll
in
add
loope
mov
jo
mov
mov
push
xchg
cli
mov
imul
xchg
xchg
fnstsw
sub
mov
lahf
and
imul
cmpb
leave
rclb
pop
push
mov
or
or
mov
mov
xchg
push
repnz
aas
dec
xchg
rcrl
xchg
dec
xor
adc
decb
enter
and
inc
stos
rorl
mov
inc
sbb
mov
aas
cltd
pop
bnd
sbbb
lock
hlt
push
test
inc
pop
dec
out
jge
fldenv
sti
fs
mov
leave
cwtl
push
cltd
mov
mov
je
and
xor
push
in
cmp
loope
inc
lcall
xor
out
imul
mov
shll
dec
adc
loopne
xlat
xchg
in
cs
out
and
arpl
aam
inc
pushf
and
imulb
cwtl
xor
jno
pop
and
xor
sub
cmp
jae
lds
test
mov
dec
rclb
sbb
xchg
ljmp
jecxz
popf
jp
adc
jns
mov
into
rcl
add
add
mov
int
cld
inc
push
sub
fnstenv
dec
insl
fadds
and
test
and
add
pop
fcompl
mov
pop
pop
aam
js
xlat
bound
pop
jns
popf
lea
sbbb
mov
pusha
xchg
lods
jle
aas
hlt
pusha
test
or
gs
sub
push
popf
cli
mov
test
js
jnp
pmovmskb
or
jo
clc
pop
mov
loopne
sub
js
push
pop
xchg
lea
int3
xchg
call
ds
xor
testl
jmp
js
out
popf
lock
and
adc
xor
adc
xor
xchg
loope
loop
loope
insl
push
loopne
addb
daa
lahf
frstor
mov
jnp
dec
mov
cwtl
in
lock
or
lret
add
xchg
jp
adc
push
adc
pop
cmc
addr16
xor
adc
in
sbb
xor
das
gs
jb
xor
and
sbb
fmuls
sbb
imul
scas
and
mov
ja
cmc
push
popa
push
or
test
lretw
scas
sbb
sub
mov
and
sti
mov
or
hlt
sbb
push
mov
into
je
test
into
rcrb
xchg
inc
testb
popf
lods
dec
addr16
stc
sbb
outsl
sbb
test
pushf
dec
stos
in
and
mov
cs
in
jbe
push
insl
jns
ss
into
adc
into
cmpsl
clc
lds
jb
out
adcb
or
pop
testb
js
pushf
loopne
add
inc
cwtl
mov
out
js
lock
cs
sbb
fprem
dec
lock
cmpsb
retw
stos
stos
dec
mov
icebp
sarb
imul
jb
pop
hlt
icebp
seto
mov
xor
fsubs
sub
push
mov
sub
fwait
mov
push
xchg
into
adc
sub
jle
or
adc
mov
jge
scas
mov
or
pusha
dec
fcom
inc
jae
enter
jge
pop
repnz
outsl
and
dec
fnsave
testb
or
mov
sbb
fdivs
sbb
scas
js
dec
jns
adc
dec
mov
out
test
test
into
pushf
dec
sbb
mov
ret
mov
imul
pop
cmpsb
mov
mov
cmp
mov
cmpsl
jne
insl
sbb
and
add
adc
sbbb
mov
iret
pop
sub
xor
push
dec
popa
sarl
dec
cmp
outsl
addr16
sub
mov
dec
repnz
lods
dec
dec
add
xor
int
adc
inc
fisttps
jb
cwtl
mov
mov
mov
dec
loopne
push
mov
les
mov
adc
fisubl
or
push
pusha
pop
movsb
daa
inc
pop
movsl
mov
bound
jp
es
cli
jmp
repz
mov
ret
fadd
adc
popa
sub
fsubrl
sbb
pop
mov
push
pop
mov
rorb
add
adc
aam
cld
push
inc
add
mov
in
in
cmpsl
adc
add
adc
pop
test
push
mov
test
xchg
addb
gs
sub
jne
sarb
mov
inc
dec
sbb
fwait
and
or
mov
movsl
shrb
aad
push
or
js
popf
loop
je
fisttps
cmp
rolb
nop
std
loope
inc
cli
jb
and
mov
pop
xor
fwait
iret
aas
xor
mov
adc
add
cwtl
pop
sub
fcoml
push
xchg
inc
sbb
inc
daa
pop
sti
sbbl
mov
in
mov
loopne
add
inc
mov
loope
addl
out
mov
insb
add
pop
mov
or
repz
inc
push
pop
jbe
xchg
loope
mov
or
inc
mov
add
add
out
pop
out
add
stos
repnz
mov
jg
and
sub
sbb
insb
cmp
insb
add
pop
jne
add
imul
add
enter
cwtl
jns
popf
sbb
je
mov
cmp
mov
out
mov
push
repz
loope
mov
mov
xchg
loope
movsb
mov
mov
mov
aad
int3
subb
mov
arpl
mov
in
insl
pop
aam
fldl
loop
divb
dec
jne
sbb
cmp
jno
cmp
xchg
leave
add
testb
sub
arpl
jne
fmuls
and
add
add
in
repz
push
shrb
es
mov
xsaves
scas
arpl
ret
push
inc
arpl
sub
repz
lods
aad
push
repnz
iret
cltd
inc
int
sbb
stc
pop
popa
sub
outsb
icebp
pushf
lretw
pop
sti
cmpsl
push
dec
adc
testl
imul
insl
lret
out
movsb
imull
push
es
inc
adc
in
mov
lcall
ret
sarl
popa
dec
add
fmuls
jnp
xor
ficompl
lods
add
mov
xor
getsec
or
lahf
or
fdivr
in
adc
cmp
cs
loopne
and
dec
arpl
in
aas
add
cmp
sbb
js
jmp
xor
push
jb
adc
lfs
popa
add
scas
in
jge
aam
lcall
rcll
mov
xor
popf
push
and
cld
xchg
add
add
cmpsb
cmc
mov
and
adc
stos
lods
inc
sub
inc
cmp
or
sbb
xchg
add
mov
cwtl
jae
mov
xor
xor
xor
pop
cmpsl
or
mov
in
inc
sbb
cmp
hlt
jne
and
sub
ljmp
push
cmp
nop
or
pop
fadds
inc
daa
sub
idivl
sub
xchg
stos
scas
xor
jg
or
rcll
pop
xor
xor
popl
push
stos
mov
mov
mov
iret
dec
add
test
shl
lahf
mov
outsl
jge
sbb
sbb
insb
fistpll
stc
data16
jecxz
adc
jb
jecxz
ja
es
sbb
adc
lret
setp
fidivrl
jb
push
bound
cmp
movsl
jmp
dec
sbb
in
insb
pop
inc
mov
sbb
sub
and
jnp
xchg
insl
in
lea
fadd
inc
xor
call
mov
jo
jp
or
sbb
inc
aas
and
fdivs
fsubs
enter
inc
hlt
xor
sbb
xor
jmp
in
popl
repnz
xor
leave
sbb
call
fmulp
out
divb
cmp
mov
jnp
inc
test
lods
jecxz
enter
sbb
add
pop
mov
insl
iret
movsl
adc
aas
jne
sub
push
mov
pop
inc
push
into
push
clc
lret
cmp
aaa
and
orl
test
sahf
adc
scas
mov
jle
ficoms
jmp
scas
in
mov
add
cli
mov
sub
dec
in
ss
jae
cs
lock
pop
dec
gs
cmp
adc
and
mov
call
jb
xchg
and
and
mov
pusha
mov
push
mov
or
ljmp
and
jb
insl
clc
or
jo
out
pop
clc
faddl
pop
lods
cmc
arpl
mov
adc
out
pop
mov
int
mov
xchg
das
addb
xchg
movsb
mov
push
addb
xor
cmpsl
call
bound
mov
mov
fwait
or
and
inc
inc
shl
and
pusha
js
push
mov
inc
hlt
outsl
lret
xchg
dec
cmp
push
sub
or
mov
xchg
push
jp
sub
mov
xchg
dec
int3
inc
cmp
sbb
shll
jp
fdivrs
test
inc
jmp
rclb
sbb
mov
pop
jns
mov
fwait
andl
mov
push
scas
push
xor
or
and
sbbb
push
js
dec
mov
out
mov
mov
subl
sub
lret
hlt
xor
cmp
insb
sub
xor
aaa
jb
push
mov
orl
sub
sub
xlat
push
dec
inc
outsl
fs
push
or
jno
jb
or
jne
xchg
push
ret
sbb
leave
sbb
dec
add
pop
in
js
outsb
adc
lea
outsb
push
fsubrp
xchg
fwait
pusha
push
stc
ss
ret
jno
adc
jns
inc
test
aaa
lcall
popw
mov
mov
fdivrs
in
fwait
adc
hlt
aad
push
mov
sub
cld
inc
pushf
fsubrs
clc
jnp
xor
movsl
insb
fcomp
int3
xchg
mov
lret
andl
jle
jp
pop
out
xchg
and
push
pop
mov
dec
test
test
mov
sahf
cmp
jo
adc
add
add
idiv
fs
ret
scas
aas
lret
inc
inc
gs
push
lahf
pusha
aaa
xlat
mov
lea
pop
leave
ds
mov
pushf
fcmovnb
inc
mov
fs
out
notl
repnz
or
loop
sub
mov
jbe
adc
arpl
pop
mov
add
mov
fldenv
adc
loop
jae
adc
rorb
test
lock
dec
mov
hlt
adc
xor
out
ror
jge
inc
xchg
lods
inc
jmp
add
pop
je
leave
pop
adc
jno
add
rclb
adc
jmp
inc
add
int3
repz
shll
clc
rcrb
fs
inc
xor
push
in
push
jne
pop
ja
mov
jns
stos
lods
jnp
ja
enter
adc
adc
les
cwtl
jne
adc
mov
icebp
cmpsl
sub
and
lds
daa
jns
xchg
mov
popf
insl
jmp
cmpsb
icebp
scas
sub
lds
hlt
sbb
pushf
cmpsb
sbbl
xchg
mov
flds
sub
mov
adc
fisubl
pop
std
cmp
lea
xchg
inc
roll
jae
repnz
pop
push
push
ret
mov
das
in
xchg
and
add
in
adcl
xchg
out
jecxz
lret
js
call
pop
mov
lret
lahf
sbb
xchg
outsl
xchg
sarb
scas
mov
test
dec
aad
test
sub
roll
movsb
push
xchg
popf
adc
inc
fnstenv
xor
stc
jge
push
dec
mov
mov
arpl
sub
xchg
sub
pop
into
adc
out
cmpsb
xor
cmp
pop
enter
ret
mov
fwait
mov
test
movsb
dec
add
pop
jbe
lcall
mov
std
loope
mov
mov
sbb
leave
outsl
js
in
flds
add
test
sbb
loope
dec
dec
dec
adc
rolb
lret
xchg
loop
pop
cmp
js,pn
inc
jmp
cld
outsb
xlat
cs
adc
sbb
cmpsl
push
and
fucomp
mov
sub
dec
mov
push
lcall
xor
xor
stos
lods
int
in
or
sub
out
fucomp
repz
xor
popa
jmp
cmp
push
add
rcr
fcmovnu
xor
cvtps2pd
movsb
in
jecxz
int3
mov
xor
loope
aad
adc
loop
cmp
sub
mov
mov
popf
jg
mov
clc
mov
xor
lahf
stos
arpl
sarl
mov
mov
sub
mov
sbb
jne
shlb
or
rcl
or
jnp
daa
popa
adc
rolb
pop
cmp
je
testl
into
fsub
sbb
in
mov
cli
inc
jns
ret
inc
pop
insb
xchg
xchg
hlt
es
std
adc
xor
sbb
clc
push
cmpsl
mov
in
pushf
adc
mov
insl
adc
push
repz
shrl
add
push
pop
aaa
mov
pop
fildll
sbb
mov
negb
mov
xor
push
rcrl
and
mov
ja
fisttpl
or
in
push
inc
in
push
mov
js
inc
xor
pushf
adc
push
and
xor
pushl
push
lahf
pushf
iret
pop
fs
mov
jnp
loop
int3
je
mov
insb
sti
fstps
clc
bound
test
mov
rcrl
idivb
movsb
cmp
jg
cmp
dec
dec
in
xchg
sbb
outsl
sub
mov
out
fisubl
add
inc
mov
or
mov
push
mov
sub
dec
xor
enter
inc
pop
mov
sbb
imul
out
fsts
sub
inc
int
push
dec
or
in
jno
jmp
movsb
add
jnp
pop
or
shlb
pop
fldl
pushf
push
daa
sub
sbb
push
pushf
aad
ret
push
mov
sub
and
dec
mov
sub
lcall
cli
xchg
mov
pop
sub
sub
icebp
sub
pop
lcall
sarb
pop
cmpsb
sbb
sub
decl
sbbl
mov
sub
nop
stos
aam
inc
ret
or
flds
dec
int3
es
xor
xor
pop
jl
in
and
adc
push
mov
fcompl
sbb
mov
fsubrs
jle
call
mov
mov
adc
sub
fbstp
push
clc
mov
cmp
pop
sbb
dec
cmpsl
fldl
push
and
inc
mov
and
aaa
sarl
jno
ret
push
out
iret
ja
add
mov
icebp
fists
mov
lret
popa
out
sub
inc
aad
xchg
adc
or
xchg
push
inc
outsl
pop
push
cmp
cli
dec
mov
add
roll
mov
push
push
cwtl
cld
jns
xorl
xchg
ljmp
rcll
xor
lret
mov
push
int3
sbb
loop
or
fistps
add
movzbl
test
in
xchg
fwait
pop
clc
mov
testl
arpl
dec
pop
mov
stos
pop
pop
cld
imul
clc
push
pop
insb
stos
ljmp
add
push
xchg
xor
js
pop
subb
jp
push
ret
inc
jecxz
dec
in
fidivrl
inc
dec
or
test
add
insl
pop
ss
ret
xlat
mov
xor
lret
sar
jl
push
test
insb
pop
dec
xchg
test
outsl
cmp
and
xchg
xchg
loop
leave
addr16
imul
lds
jmp
loope
xorb
inc
adc
jl
aaa
pusha
pop
jae
notb
mov
or
adc
ret
add
aaa
or
xorb
inc
es
sbb
aaa
sahf
ret
jle
mov
adc
mov
jp
and
xchg
int3
push
xor
cmpsl
xchg
xchg
xchg
scas
out
mov
pop
clc
leave
cmp
scas
dec
shl
cmp
push
test
mov
shll
mov
or
inc
mov
inc
jle
lret
inc
xor
push
sbb
ds
cmp
andb
mov
fimuls
mov
jg
movsb
rcrb
outsl
mov
gs
repnz
pusha
test
cmp
push
mov
int
xorb
and
sarb
enter
sahf
push
push
xor
or
pop
aas
sbb
cmp
mov
xchg
hlt
and
int
roll
sub
adc
sub
lret
scas
mov
dec
and
push
mov
dec
sahf
xor
jo
sub
cmpsl
rcrl
jecxz
stos
adc
adc
fldl
sub
ret
mov
cmpb
adc
lds
pop
cli
adcl
sub
dec
hlt
jmp
and
les
push
push
add
in
ret
popa
cmp
roll
push
inc
addb
fldz
jp
enter
cmc
mov
jae
popf
xor
mov
aam
jne
or
stos
push
add
jmp
loopne
out
inc
xchg
cmp
into
pop
adc
pop
and
lret
stc
cld
arpl
inc
leave
adc
or
call
lock
dec
loop
dec
jno
mov
inc
mov
inc
push
rcl
nop
mov
cmp
adc
loopne
cltd
pusha
mov
cld
mov
jecxz
les
sub
pop
call
push
or
loope
mov
jmp
jmp
fsubl
ss
clc
imul
int
ljmp
fists
ja
dec
hlt
mov
stos
mov
pop
jg
stos
mov
add
xor
xor
stos
addr16
je
dec
mov
loope
lahf
cld
mov
xchg
sbb
mov
add
repz
or
mov
sbb
inc
aam
adc
fsub
cmp
xchg
lret
xchg
std
adc
cmp
dec
jl
rcll
aaa
mov
sbb
cld
aam
xchg
ljmp
cmp
jl
adc
pop
jns
jno
mov
dec
mov
and
fmul
mov
xor
mov
and
cmpsl
cmp
push
add
imul
jp
int
sbb
push
cmc
add
fdivrs
mov
aas
test
lcall
out
das
adc
popa
sbb
shll
fisubrs
add
or
cmp
movsb
sbb
jl
mull
xlat
pusha
sbb
xchg
enter
mov
clc
jne
pop
or
xchg
ret
pop
jns
sbb
imul
cmpsl
mov
out
mov
lods
add
sub
movsl
das
ss
sti
mov
stos
pop
jp
sub
pop
cmc
mov
insb
sub
cmp
cmp
mov
stos
fldl
hlt
rcr
push
call
sub
ss
mov
aam
or
lods
mov
jns
addr16
mov
ja
pusha
outsl
inc
xor
mov
or
push
jns
add
fiaddl
pop
and
add
push
sub
sbb
clc
pop
push
repnz
dec
sarb
data16
and
adc
push
loope
dec
or
out
int
cld
mov
or
pop
xor
insl
xchg
loopne
mov
call
fs
jns
imul
adc
push
mov
push
cli
bound
cmp
lret
adc
or
shll
popa
fwait
movsb
ja
int
inc
aam
loope
push
decl
sub
scas
or
jns
or
xor
pop
xlat
jge
push
mov
pop
repz
mov
jecxz
push
xorb
loopne
data16
ret
xor
out
dec
adc
cmp
fldl
int3
inc
in
add
imulb
fstp
mov
dec
sahf
add
insl
pushf
cmpsb
jne
mov
popl
cltd
outsl
stc
xchg
ss
scas
or
push
ret
cltd
js
minps
or
js
iret
jns
add
inc
fimuls
inc
les
push
out
clc
rcrb
rcl
pop
xchg
call
sbbl
jb
rcll
mov
dec
fstpt
or
fbld
leave
xchg
inc
clc
jge
inc
movsl
inc
mov
mov
mov
dec
push
cmp
pusha
mov
out
decb
xlat
cli
popa
cmp
cmc
pop
in
cwtl
and
jne
mov
pop
cmpb
sbb
mov
inc
inc
rcl
cmp
adc
rolb
jmp
xchg
sysexit
popa
sbb
fprem
cmovg
mov
sub
dec
cltd
and
fstpl
cmp
sub
and
mov
mov
outsb
sub
jp
lahf
aas
mov
cmp
mov
jge
mov
out
pop
in
mov
test
mov
xor
jecxz
mov
nop
int
lret
adc
mov
and
cltd
adc
pop
ds
loopne
or
fsubl
test
and
sub
imul
mov
mov
shl
cmp
ja
cmp
stos
add
lea
push
shlb
loop
xor
cmpsb
mov
jns
addr16
pop
or
aas
and
fistpl
xchg
daa
addl
ljmp
xor
insb
inc
iret
sar
shl
inc
xchg
lea
jl
movsb
pop
or
sarb
push
push
test
adc
sub
insb
iret
fs
hlt
mov
pusha
outsb
daa
std
inc
leave
scas
in
ljmp
cmp
xchg
xlat
stos
inc
pusha
mov
mov
jmp
mov
in
xor
adc
test
roll
push
cmp
push
dec
lret
icebp
inc
xchg
cmp
lods
outsl
in
xor
inc
out
cltd
mov
mov
in
decl
xor
push
push
mov
mov
shrl
xor
or
jo
shl
push
cld
pop
inc
xor
cs
add
pop
mov
inc
xchg
cmp
subl
pop
mov
inc
dec
push
int
cmp
inc
rcrl
mov
xchg
orl
addb
cwtl
adc
das
mov
test
int
aas
lret
inc
jle
pushf
pop
aad
pop
in
loop
add
sbb
fsubrl
mov
cld
int
int3
dec
int
rcr
sahf
and
xchg
sub
xor
xchg
adc
insl
imul
jl
test
iretw
jge
cmpsl
dec
inc
dec
inc
sub
iret
jns
push
cmpsl
xchg
loopne
repz
sbb
sarb
in
mov
pop
cmc
pushf
mov
xchg
push
or
es
cs
or
lea
test
sbb
out
mov
mov
adc
add
inc
pop
clc
hlt
push
js
pop
xor
pop
xchg
ror
mov
and
bound
fwait
sbb
xor
push
mov
in
pop
dec
lahf
clc
xor
jne
inc
cmc
pop
sub
inc
pop
adc
lods
and
popf
dec
pusha
aad
les
mov
aas
in
les
or
xchg
sub
mulb
xchg
add
incb
in
pusha
aas
add
dec
stos
sbb
pop
mov
dec
pop
stc
lods
nop
js
fisubrl
mov
test
jge
enter
mov
jno
cwtl
dec
test
xchg
xor
das
jg
incb
aas
xchg
ret
inc
les
repnz
cmpsl
int
jecxz
insb
cmp
jnp
inc
outsl
dec
mov
lock
jo
mov
pop
sbb
lahf
xor
mov
arpl
cwtl
xor
push
pop
dec
mov
jno
dec
fs
sub
xor
pop
les
push
push
xchg
out
lcall
sbb
xchg
sahf
aad
xor
fisubl
xchg
pop
xchg
insb
jae
push
push
xchg
mov
scas
outsl
mov
shll
clc
call
mov
jae
or
sbb
mov
push
jge
adc
mov
stos
nop
cmovl
shlb
pop
pop
sub
orb
xor
jns
fldenv
xor
adc
dec
pop
dec
pop
ljmp
dec
jns
mov
sub
fdivs
loope
or
lcall
iret
add
pop
lods
int3
cs
mov
push
icebp
rorl
inc
mov
mov
ret
ljmp
push
add
nop
pop
aad
dec
or
mov
or
lret
and
pop
and
aam
dec
cmpsl
nop
pop
adc
cmpsb
mov
mov
cwtl
cmp
ljmp
pop
adc
ret
mov
add
aad
clc
cmpsl
jbe
ds
push
outsl
ficomps
push
pop
push
fs
out
testb
inc
add
loop
jg
or
add
pushl
cmp
fwait
in
sub
inc
mov
es
jl
repnz
js
dec
jg
fcmove
insb
aas
mov
mov
call
mov
mov
jp
lahf
mov
mov
sub
aam
scas
into
out
inc
cltd
test
or
jo
ss
and
outsl
mov
and
pop
lock
and
mov
mov
fs
and
ss
adc
in
adc
int3
mov
sub
dec
push
sub
sub
fwait
lcall
cli
je
in
or
dec
leave
jle
pop
xchg
out
fxam
push
and
andl
add
mov
mov
mov
push
stos
xchg
fsubl
push
xlat
adc
jbe
xchg
inc
push
jmp
insl
ror
adc
femms
sub
sarb
xchg
jmp
add
cld
jl
push
aas
outsl
ss
test
cmpsb
push
cmp
je
cmovne
ss
mov
sbb
fiadds
sbb
mov
sbb
sbb
mov
dec
jl
xorl
mov
xor
test
adc
mov
lea
test
shr
adc
mov
add
xchg
arpl
xor
mov
cmpsl
insb
adc
roll
or
shlb
xchg
repz
fildl
inc
imul
ja
mov
jae
ja
bound
mov
stc
repz
push
es
insl
pop
inc
sbb
cmp
loop
fmuls
or
insb
icebp
jle
or
dec
add
inc
lcall
pop
or
mov
fimull
cld
xor
sbb
and
pop
and
xlat
gs
clc
ljmp
shr
popf
jbe
jmp
xor
push
fsubrl
lcall
std
clc
fadd
mov
cmp
xchg
imul
lea
adc
mov
lret
aas
dec
xchg
pop
mov
push
rclb
mov
cltd
loope
lret
outsb
iret
cmp
lods
ret
lcall
mov
dec
decl
aam
mov
mov
xor
dec
sbb
aaa
idiv
dec
or
jo
ret
popf
hlt
mov
test
xchg
shl
adc
sarl
cmp
cmp
dec
and
int3
rolb
push
scas
aas
popf
xchg
adc
xchg
cltd
lods
lahf
nop
cltd
dec
ret
push
in
aaa
inc
sbb
nop
mov
and
push
rorl
pop
sbb
add
lahf
in
es
inc
mov
dec
mov
in
les
push
jg
mov
jae
push
clc
sbb
lahf
cmpsb
xor
inc
xor
xchg
fdivrp
jg
in
mov
lret
shrb
repnz
rolb
pop
je
ret
mov
jmp
lods
in
lcall
xor
xchg
je
mov
push
mov
fmul
mov
notb
rcr
rcrl
mov
pop
push
xchg
sbb
push
fsub
jne
mov
lds
add
mov
push
out
fiaddl
aam
rcll
fnsave
adc
xchg
xor
outsb
sub
dec
out
mov
aam
divl
fwait
mov
imul
mov
outsl
outsl
mov
sbb
aad
movsl
xor
xchg
jecxz
pop
push
jle
insb
lret
sub
cld
test
lds
scas
sbb
sbb
mov
inc
clc
lods
es
int3
mov
das
cmp
mov
jb
dec
sahf
pop
mov
push
fldt
lock
vcvtps2pd
adcl
arpl
push
stos
mov
add
jl
pop
iret
sub
shl
pop
inc
fisubrs
in
xchg
popa
jg
mov
push
push
int
imul
sub
mov
jl
xorb
push
xor
movsb
xor
lahf
and
jne
clc
pop
fiaddl
jo
jp
push
xchg
ljmp
dec
fwait
rorl
int3
loope
stos
das
fwait
push
dec
jno
xor
cmp
cmc
lock
popf
xchg
inc
xchg
arpl
outsb
and
outsb
lcall
inc
xchg
aad
jp
aam
xor
inc
mov
aaa
jle
jmp
push
xor
push
fisubrs
and
int3
and
test
lock
push
test
inc
mov
mov
mov
lret
out
xchg
mov
mov
sub
test
adcl
sahf
decl
lods
jo
lcall
subb
rcl
outsb
jecxz
imul
imul
pop
and
and
fimuls
jmp
push
sbb
bound
outsb
mov
mov
popf
je
fucomi
bound
fwait
sbb
popa
jns
jno
cmp
popf
lods
test
cmp
dec
iret
mov
xchg
jge
arpl
fadds
icebp
addr16
insb
xor
lcall
cmc
cmp
aam
mov
cmp
in
bound
icebp
jbe
icebp
and
arpl
scas
mov
and
enter
test
stc
dec
xor
add
sbb
ja
das
aam
ss
xchg
addr16
xlat
push
sub
push
hlt
lcall
inc
insb
fs
xchg
mov
fwait
dec
movsl
popa
adc
popa
popa
and
fs
sub
push
call
inc
sbb
popf
push
mov
cmp
pop
mov
xor
mov
push
js
add
sbb
sahf
bound
adc
fcoms
dec
je
jge
gs
movsb
or
sbb
dec
push
mov
inc
pop
rclb
add
and
lods
pop
xor
test
sub
loopne
mov
add
iret
jmp
stos
bound
fnstenv
pop
sbb
and
inc
add
fidivs
clc
mov
test
mov
xlat
mov
mov
hlt
jg
push
ljmp
xchg
cmp
movsl
pop
add
xchg
xor
cmp
sub
fsubs
int
int
xchg
sbb
scas
popf
cmc
or
shll
jmp
mov
add
and
jmp
pusha
xor
test
pop
pop
mov
orb
outsb
call
add
gs
into
add
jecxz
cmpsl
adc
daa
lods
sub
push
push
sub
pop
mov
mov
je
inc
repnz
mov
cmp
fs
mov
ljmp
add
mov
add
sbb
cld
or
ss
pop
dec
or
cmp
icebp
sbb
xchg
ljmp
cmc
mov
push
adc
pop
out
jb
cwtl
stos
xchg
push
fwait
lret
pop
add
add
sub
xchg
lret
lret
inc
fidivrs
jnp
test
fnstsw
sub
cmpsb
sub
int
pop
and
aam
rolb
jnp
mov
dec
sarl
mov
sub
scas
mov
push
sub
adc
fsubrs
or
sbb
jmp
sub
fldt
pop
push
test
popa
pop
cli
pusha
push
mov
add
out
scas
xrelease
sub
aas
in
mov
xchg
mov
jbe
out
lds
adc
out
into
pop
pop
outsb
enter
lret
pop
in
repnz
incb
ja
ror
out
fnsave
out
and
cmpsb
js
jbe
dec
imul
mov
jns
cli
jle
das
loopne
jg
push
pop
jecxz
mov
std
mov
and
dec
fdivrs
add
mov
fidivrs
mov
xor
dec
rcrb
cltd
out
mov
test
int
inc
add
jge
lret
or
jo
aam
insb
inc
and
mov
or
mov
popa
cmp
rcrl
push
mov
test
int
jae
fisubl
enter
xchg
subl
sbb
sbb
inc
or
cmp
pop
lcall
push
adc
mov
jbe
orl
lret
mov
adc
xchg
loop
or
out
cmp
mov
and
in
loop
imul
jmp
aas
movsb
sbb
push
aaa
mov
xor
test
test
cmc
lods
test
push
jb
mov
les
mov
mull
sbb
or
out
jbe
mov
xor
fsubrl
hlt
jne
inc
cmp
mov
jo
jle
cmc
jns
bound
fs
out
int3
sub
xchg
mov
cltd
movb
adc
out
add
and
push
inc
sbbl
fldcw
push
jmp
test
sub
mov
mov
js
imul
fistpl
or
jmp
sbb
lret
xor
int
push
outsb
mov
sarl
hlt
mov
scas
adc
aad
add
testl
icebp
outsb
xchg
adc
adc
sub
flds
fmuls
enter
xchg
in
mov
int
pop
dec
pop
cmp
xchg
lock
popf
and
add
out
inc
jne
xor
int3
in
add
inc
dec
daa
movb
out
xchg
incb
dec
jp
xchg
and
scas
loope
xchg
push
mov
std
adc
adc
cmp
mov
fmuls
stos
lea
testb
addr16
mov
sub
mov
jb
xchg
sahf
mov
sub
subl
xchg
xor
jmp
int
mov
out
out
sub
jne
add
jmp
ja
and
cmc
dec
sbb
pop
or
je
out
push
aam
dec
push
sbb
in
popa
push
sti
lret
jbe
in
pop
ret
cld
adc
lahf
jge
cs
js
jbe,pn
xchg
and
mov
pop
fcoms
dec
in
mov
dec
cmpsl
jl
lods
std
jnp
xchg
and
push
movsl
stc
lds
data16
in
xor
jl
dec
pop
adc
mov
mov
rcll
xchg
sub
xchg
pop
adc
fdivr
call
mov
push
and
push
sti
xor
nop
xchg
mov
sub
and
out
jp
mov
fimull
pop
inc
pusha
lods
aam
pop
and
push
cmp
mov
mov
leave
mov
dec
push
ss
pop
imul
pop
mov
int3
iret
cltd
xor
sbb
lods
mov
pop
cmc
nop
popa
pop
shl
mov
cwtl
pusha
daa
and
push
adc
ret
mov
into
xchg
stc
or
inc
das
test
lock
hlt
ljmp
or
inc
vmptrld
sbb
hlt
leave
mov
addr16
mov
sbb
mov
mov
and
enter
pop
mov
sub
shll
outsl
sbb
bound
out
pop
int3
cmp
test
mov
je
push
xchg
cli
outsb
cmp
imul
mov
jle
out
push
lret
xchg
push
or
mov
sub
js
mov
jno
sbb
add
mov
jb
push
ret
and
push
lds
loopne
push
mov
das
daa
lds
out
jnp
inc
mov
inc
test
arpl
push
dec
pop
fmul
add
aad
fiaddl
and
or
jl
push
xchg
sar
roll
pop
into
pop
pop
call
mov
xor
aas
je
lods
scas
loopne
pop
pushf
adc
xor
call
popf
or
ret
lcall
out
rcr
gs
inc
lods
scas
ds
mov
mov
lret
nop
or
scas
inc
les
lods
xchg
cld
push
xor
scas
push
test
pop
leave
xorl
dec
cmc
out
or
xor
sub
jg
pop
das
ret
add
cmp
cmpsl
div
ljmp
mov
fadds
jg
shll
xor
scas
xchg
jne
fwait
cmpsl
fiaddl
push
mov
and
es
pop
rcll
ret
lcall
xor
push
cmpsl
mov
ljmp
rorl
mov
bnd
es
mov
push
adc
xchg
jecxz
xor
add
jno
lods
mov
insl
mov
leave
fidivs
push
bound
cmp
shlb
xchg
dec
xchg
xchg
ljmp
adc
pmaddwd
adc
loop
rol
loope
nop
xchg
jb
cld
cmp
sbb
test
xchg
imul
insl
clc
adc
fildll
xchg
mov
add
sub
cmp
cltd
clc
inc
lods
or
mov
repz
out
scas
out
sub
pop
test
gs
push
add
cmp
lods
insb
ficoms
xor
jmp
sbbb
call
scas
add
cld
test
clc
or
rolb
jnp
lock
insb
stos
sub
rorb
mov
loop
sub
xor
jg
jg
addr16
sbb
pushf
mov
xor
and
stos
sbb
inc
adc
repnz
adc
ss
in
sbb
sbb
aas
sub
ds
mov
in
xchg
mov
sbb
xchg
enter
dec
jp
sbb
xor
cmc
cmp
test
and
rorl
dec
mov
mov
xchg
sahf
push
push
and
xchg
dec
insl
or
mov
cld
dec
xchg
xchg
adc
mov
cmpsl
adc
in
leave
cmp
pop
aas
les
cmp
add
sarw
jmp
pop
flds
or
push
xor
mov
jge
pop
xchg
lcall
cmpsl
add
fs
add
inc
lea
out
xlat
cmpb
ds
out
test
mov
test
add
addl
dec
push
mov
sbb
ja
ret
mov
cmc
xor
inc
std
ret
jp
jmp
into
addr16
daa
lfs
and
mov
cld
loopne
jg
adc
dec
cltd
mov
inc
imul
js
bound
je
push
inc
sbb
scas
ss
sbb
add
lea
faddl
sbb
jg
ljmp
add
and
cmp
stc
bnd
cmp
sbb
daa
iret
mov
push
addr16
and
jne
out
mov
and
adc
mov
cwtl
sub
push
dec
adc
into
jmp
inc
cmp
daa
sub
jp
outsl
std
sarl
repnz
xchg
cmp
cmc
in
cltd
mov
xor
adc
push
test
nop
dec
fadds
ja
sbb
rcrl
jo
jno
push
xor
andb
popa
imul
out
xchg
sbb
mov
sbb
ret
push
jns
sahf
or
mov
or
push
jmp
inc
iret
mov
icebp
mov
lock
or
lcall
rcll
in
jnp
out
stos
jle
lock
mov
xchg
pop
push
stos
jg
cmpsl
fstl
popa
sub
mov
fstp
sub
shlw
scas
repz
lock
push
xchg
sbb
aas
aad
call
pop
mov
rcrl
int3
mov
popa
dec
outsb
std
push
xor
pusha
mov
mov
jge
call
cmp
in
fcomp
jl
push
lea
fidivrl
pop
jp
xchg
mov
sahf
or
pop
pop
add
cmp
inc
or
sub
push
ja
iret
sbb
mov
push
adc
addb
flds
enter
rcrl
inc
jne
fldcw
out
adc
push
js
add
mov
xchg
mov
push
xchg
xchg
xchg
sti
in
mov
sysexit
in
push
sar
xlat
mov
jmp
pushf
mov
sbb
and
xchg
sbbl
aad
jnp
inc
mov
addr16
std
sub
into
lock
mov
sbb
or
cmp
inc
fwait
jae
sbb
add
daa
mov
shlb
sti
and
fbld
inc
xchg
inc
pop
sbb
stc
mov
shll
outsl
dec
push
jp
cs
insb
packsswb
cmp
pusha
jns
xchg
cmp
cltd
mov
push
mov
std
popf
xchg
pusha
and
jb
movsl
and
pop
or
mov
mov
cmpsl
xchg
mov
sbb
mov
xchg
inc
push
jb
add
test
pop
shl
mov
cmp
inc
out
push
mov
lea
push
jne
cwtl
pop
sbb
sub
adc
scas
in
jne
xor
insb
sbb
push
pusha
fs
aaa
mov
outsl
pop
dec
aam
sub
lea
adc
test
imul
cmc
lock
xor
adc
out
mov
test
fadds
mov
loop
popa
adc
sub
xchg
xchg
xlat
loopne
sbb
adc
inc
std
fs
repz
jecxz
dec
xor
js
in
mov
inc
fsubr
std
js
xlat
out
push
or
sub
jle
inc
jge
xor
test
fwait
cmp
loope
decl
xchg
xchg
xor
arpl
mov
adc
cmp
pop
mov
cmp
lea
mov
cmc
mov
cld
sbb
rcl
xchg
add
push
out
testl
mov
ljmp
or
mov
int
sub
aaa
repz
iret
inc
xchg
int3
adc
adc
jne
repz
xor
pop
icebp
adc
adc
pop
jb
call
je
cwtl
fildll
jno
ret
jmp
lret
mov
aas
mov
iret
push
inc
stos
xor
test
mov
mov
jns
cmc
jg
notb
or
sbb
sub
push
lcall
les
pop
or
imul
push
stos
insb
mov
xor
inc
outsb
ja
sbb
push
mov
imul
and
notb
xor
xchg
bound
imul
pushf
ret
imul
and
mov
adc
mov
adc
mov
jmp
push
dec
pop
ss
nop
mov
xchg
popf
inc
jno
add
in
std
lcall
inc
jle
stc
mov
pop
adc
imull
or
test
sti
rorl
subb
test
cmpsb
cwtl
stc
inc
cwtl
xor
repz
add
mov
jo
test
adc
mov
xor
fstp
jb
jmp
repz
int
jle
cld
out
sub
fs
out
cmpsb
pop
mov
lods
mov
sbb
dec
outsl
bound
sub
xorl
movsl
cmp
inc
inc
push
sub
clc
pop
insb
out
ljmp
jo
out
getsec
ds
mov
loopne
in
std
nop
sti
fcmovne
test
dec
mov
pop
scas
ret
ret
and
fwait
test
jb
adc
cmp
cmp
jbe
jmp
inc
sub
cmp
divb
jo
inc
cs
ret
push
mov
mov
leave
sti
int3
xor
aaa
jl
inc
daa
pop
jge
jo
adc
mov
daa
xchg
mov
fldenv
dec
pop
add
testl
popa
mov
pushl
enter
dec
pop
and
mov
mov
xchg
sbb
out
jp
ljmp
std
daa
sub
daa
fwait
cltd
loopne
cmp
pop
lret
push
xor
icebp
push
sti
mov
mov
and
mov
popa
sbb
mov
out
ljmp
xor
jp
mov
or
add
fidivrs
mov
mov
pop
fsubr
dec
push
inc
jno
mov
xchg
subl
pop
xor
xchg
and
rsm
sbb
dec
dec
push
add
xor
les
clc
cmp
aad
dec
dec
cmp
cld
jnp
mov
push
movsl
push
mov
cld
mov
mov
aas
stos
mov
sub
or
shll
dec
xchg
and
loopne
mov
cmp
sub
or
jecxz
mov
adc
outsb
push
popa
negb
shrb
ret
mov
lcall
repz
xchg
pop
pusha
in
shrb
add
lret
sbb
xchg
ret
loop
pop
sbb
cmp
in
mov
mov
adc
insl
ljmp
inc
xchg
sbb
push
cld
mov
push
das
out
xchg
fimull
or
push
rolb
add
aas
stos
stos
rcrb
arpl
leave
mov
pop
add
out
and
shr
cltd
imul
sub
divb
dec
pop
mov
imul
pop
rcl
mov
repz
xchg
xchg
xorl
lret
push
adc
imull
jl
jle
fdivrs
mov
dec
add
mov
xor
bound
fidivrs
ret
mov
xor
rorb
lret
xchg
pop
not
pop
repz
push
jnp
or
or
lcall
pop
and
orl
mov
inc
popf
js
xchg
pop
in
add
int
outsl
sub
cltd
or
mov
mov
fstl
dec
adc
mov
and
movsl
xchg
push
sbb
out
enter
lds
or
cmp
sarb
adc
mov
push
imul
and
mov
jp
clc
int
inc
inc
mov
sub
mov
xor
cmp
sub
out
subb
cmp
lcall
or
push
cltd
cs
pop
iret
jge
pop
mov
aaa
inc
outsb
xlat
ret
icebp
cmp
xchg
les
push
and
and
pop
adc
push
std
out
mov
xor
cmp
cmc
and
xchg
mov
mov
jle
add
stos
test
lret
nop
sub
cmp
inc
enter
repnz
cmpsl
inc
adc
shlb
adc
int
cs
mov
insb
and
xor
jne
adc
out
fdivl
pop
out
mov
xchg
pop
daa
pusha
stos
lds
pop
and
rcll
xchg
pop
xchg
sbb
addr16
xchg
push
fcomip
fs
dec
inc
mov
cmpsb
in
sar
xchg
sub
xchg
push
call
xchg
sbb
mov
cmp
dec
scas
cmp
push
sbb
sbb
dec
xor
cmc
mov
jnp
jmp
ja
lea
jle
jb
pop
and
cli
scas
pop
ret
jo
cmc
push
adc
test
add
inc
push
or
xor
cmp
sub
and
push
in
cmp
test
mov
call
and
adc
stc
jecxz
xor
mov
cmp
jmp
into
jnp
add
stos
int3
sub
leave
data16
fldt
lods
out
out
inc
repz
push
sbb
cld
cltd
push
or
mov
or
in
adc
xchg
lret
mov
inc
dec
leave
cmp
ja
cmp
or
mov
sbb
or
pushf
sub
pop
or
inc
ror
lods
dec
leave
scas
push
xor
into
xchg
mov
cmp
sbb
lret
loope
inc
mov
cmp
push
leave
cmp
pop
lea
inc
push
xor
mov
sbb
pop
mov
out
adc
push
sbb
pop
jno
mov
lods
pushf
aaa
std
addr16
push
loop
popa
cmp
frstor
stc
and
jmp
loope
push
jbe
mov
dec
adc
leave
jne
push
incl
aam
xor
adc
pop
sahf
outsb
pop
nopl
call
pop
sub
std
loopne
incl
jmp
jnp
xor
fwait
mull
fstps
loop
aas
sbb
addr16
aam
sbb
and
shr
lret
mov
push
jp
jae
dec
mov
and
ret
lock
pop
test
and
jmp
jns
jno
mov
sbb
das
fbld
and
fistps
psubusw
mov
and
ja
out
jg
adc
data16
loope
xchg
ss
pop
ljmp
xchg
loopne
scas
pop
test
sahf
test
cld
pusha
leave
iret
inc
fimull
out
or
pop
mov
or
push
mov
divl
outsl
mov
in
test
mov
jne
xchg
xor
rcll
out
outsl
fsubs
xchg
notl
xor
addl
inc
popa
cmp
or
sbb
inc
cli
idiv
inc
in
test
push
stos
xlat
sbb
xor
aaa
and
jmp
sbb
xchg
jb
cmp
cmp
ret
xchg
in
ss
cmpsb
hlt
aad
lea
lcall
and
lret
test
xor
pop
movsb
pusha
inc
cld
popf
lahf
mov
xchg
inc
and
ret
mov
cmpsb
cld
pop
negl
test
loopne
xchg
jl
bound
cltd
dec
insl
rcll
cmpsl
push
lods
cmp
sub
mov
jbe
inc
out
xor
mov
cmp
sub
ds
gs
cmpsb
cmpsb
mov
mov
aaa
aam
mov
push
outsl
sbb
dec
cmp
add
dec
sub
repz
inc
or
mov
mov
dec
cmp
dec
lcall
sbb
xchg
mov
aaa
pusha
daa
lock
lods
sub
mov
out
aad
adc
jo
push
ds
outsb
pusha
lret
sub
fsub
mov
jne
lods
mov
adc
mov
lods
movb
mov
sti
into
and
and
sbb
aaa
xor
inc
or
gs
and
rcrb
and
jl,pt
mov
push
cmp
sub
jmp
sub
pop
fdivrl
pop
insl
or
push
add
out
rclb
mov
pop
inc
jns
gs
movb
icebp
push
inc
xchg
ds
mov
jp
test
cmp
push
fmuls
popf
xchg
enter
fldt
sarb
xchg
cmp
mov
cli
and
sbb
cmpsl
sbb
fildll
pop
insl
dec
cs
push
lock
mov
add
inc
and
sti
dec
add
jnp
or
loope
push
out
lock
push
xor
data16
pusha
jne
jb
fwait
int
xor
push
mov
sbb
adc
add
std
aad
in
cmpsb
addl
fiadds
scas
cli
dec
xchg
loop
cwtl
ret
loopne
mov
rorb
lret
cltd
push
mov
xchg
jae
repnz
js
jo
push
pop
push
sub
je
cmp
sbb
lods
inc
sahf
jl
fsubs
push
loope
out
outsb
inc
ja
ss
loopne
mov
dec
aad
dec
inc
push
data16
cs
sysret
cltd
xchg
std
xchg
mov
sbb
sbbl
test
inc
pop
adc
fsubl
mov
subb
icebp
movsl
mov
or
fwait
in
dec
adc
jae
lret
jl
add
mov
cwtl
mov
imul
stc
and
add
xchg
es
outsb
jo
or
push
cmp
add
fidivl
stc
fsubs
pop
addr16
test
sub
repz
rclb
loope
inc
fsubrp
push
outsl
fsubrl
mov
cmp
repz
mov
shlb
add
and
mov
out
cmp
jle
testl
adc
mov
sbb
adc
and
outsb
lret
xchg
aam
adc
fidivl
aam
mov
outsb
cld
pop
dec
in
jmp
lds
sbb
add
and
fistpl
push
dec
and
cmp
mov
bound
xor
js
cmp
xchg
jb
jae
inc
stc
mov
pcmpgtd
sahf
movsb
andl
cmp
into
mov
hlt
add
mov
inc
aas
xor
inc
js
cmp
jo
adc
stos
mov
push
xor
xor
mov
push
out
sbb
dec
xor
mov
fdiv
in
repnz
dec
sub
into
sbb
outsb
mov
rcll
in
mov
lahf
mov
adc
jmp
rep
push
mov
add
adc
iret
mov
repz
stos
inc
subb
and
clc
sbb
into
xchg
int
cmpl
clc
inc
jg
inc
cltd
ds
fs
xor
shrd
bound
xchg
popf
pop
stos
faddl
test
pop
icebp
sub
rclb
clc
add
and
pop
bound
out
out
and
xchg
and
mov
push
push
insl
push
je
push
dec
cmc
pop
pop
pop
inc
and
lret
fisubrs
das
insb
mov
mov
lock
cmp
repnz
ljmp
daa
rcl
jmp
cli
sub
inc
es
fidivrs
cmpsl
mov
mov
or
jo
inc
fwait
xor
in
cmp
stos
jae
sub
out
enter
sarl
aaa
out
mov
mov
pop
dec
dec
aam
out
dec
lock
sahf
sub
dec
push
imul
push
mov
push
arpl
jmp
xor
xor
mov
sarb
lret
enter
cwtl
popf
pop
cmp
mov
std
scas
arpl
test
jbe
xor
loope
mov
subb
add
pop
or
mov
xchg
mov
adc
fnsave
pop
dec
pop
mov
inc
sub
mov
out
xchg
mov
sub
es
fisubs
sahf
xchg
insl
dec
dec
comiss
pop
mov
dec
add
insl
js
shlb
mov
imul
andb
jl
pushf
dec
je
fbstp
sub
jecxz
mov
test
stos
and
test
outsb
aam
add
aad
mov
mov
push
out
lock
adc
das
into
add
jns
or
mov
rolb
sbb
mov
sar
cwtl
mov
and
sbb
add
mov
pop
and
in
sub
xchg
loope
cmp
lcall
inc
xor
xor
push
mov
xor
imul
jnp
shrl
mov
push
inc
dec
push
fists
rolb
data16
bound
cmpb
mov
xor
fmuls
pop
adc
add
dec
cmp
pop
or
jne
pushf
cmp
mov
push
lods
xor
dec
jmp
nop
pop
push
dec
int3
jecxz
cmp
add
add
sbb
jnp
mov
xorl
mov
sub
das
mov
sbb
cmc
xor
sub
mov
popa
adc
leave
xor
sbb
sbbb
nop
sub
cmc
push
cs
inc
jl
loope
pop
lret
push
lds
jl
inc
loopne
repz
jmp
xchg
sti
inc
in
jmp
or
pop
xor
sti
test
pop
flds
cmp
dec
adc
fdivl
and
into
dec
dec
jo
mov
fcmovne
fxam
fldcw
movsl
xchg
test
fisttps
add
push
jle
dec
lds
dec
inc
push
scas
call
push
jp
call
test
cmp
mov
out
in
fidivrs
sbb
ljmp
repz
mov
sub
imul
enter
mov
mov
loop,pt
push
je
lcall
and
and
mov
dec
pop
add
xchg
mov
in
in
xchg
adc
sbb
in
and
out
hlt
ret
mov
cmp
mov
scas
inc
sub
dec
ss
jmp
pop
cmp
fsqrt
bound
lock
lods
std
ljmp
mov
pushf
xchg
addps
or
jge
insl
mov
xchg
cmp
ficompl
rcll
sub
cmp
dec
push
les
adc
in
fmull
lcall
dec
adc
movsl
stc
sub
stc
loop
jnp
inc
sahf
add
ja
xchg
mov
inc
jmp
mov
lcall
insl
inc
inc
jno
cmp
out
xor
rdpmc
enter
mov
xchg
call
aas
out
add
jmp
scas
push
or
jnp
in
andb
mov
push
xchg
xchg
das
jecxz
push
mov
sbb
imul
mov
das
repz
jne
lret
das
sub
mov
adc
shrb
xchg
cmp
aam
cmp
inc
mov
hlt
mov
in
push
jg
push
pusha
pop
sbb
xlat
rclb
jnp
jg
mov
push
popf
jge
add
mov
xchg
lods
push
xchg
ja
popf
inc
addr16
bound
dec
mov
and
ljmp
lds
sbb
pop
das
jo
dec
or
clc
repz
shrb
adc
sub
and
cmp
jge
adcb
mov
leave
dec
inc
mov
das
ret
rorb
mov
add
add
negl
pop
mov
jb
insl
jae
call
fidivl
pop
cmp
repz
rcll
mov
cmp
popf
xchg
call
sub
negb
or
cmp
popa
stos
sbb
mov
mov
adc
mov
sti
xorb
pushf
add
pop
cltd
or
mov
adc
and
lcall
fwait
in
cs
js
mov
inc
aas
cli
lret
jg
inc
adc
mov
iret
mov
push
fdivr
cli
out
sbb
push
push
sahf
jns
jmp
push
fcompl
fldt
movsb
jae
cmp
jmp
adc
push
nop
inc
jnp
xchg
push
cwtl
sti
in
cmpsb
test
fidivrs
fcompl
sub
loop
or
sub
addr16
add
jne
out
iret
mov
pop
adc
cltd
pop
divb
lods
inc
push
fadd
adc
push
inc
in
and
sbb
sti
leave
lret
inc
iret
out
and
cld
and
cmp
push
xor
in
sub
jp
mov
mov
pop
push
cmpl
lods
shll
pop
shrl
sbb
push
cmp
add
xchg
jns
int3
lret
sbb
mov
and
dec
lods
push
in
fnstsw
inc
shl
lahf
sbb
jl
lds
aam
stos
jne
ret
adc
mov
ljmp
out
xor
sub
lret
cli
push
or
xchg
xor
inc
adc
sub
add
mov
mov
jg
ficoms
or
pop
jge
push
rcll
fnsave
inc
pop
cmp
jle
into
jmp
dec
jno
pop
dec
or
sub
jmp
insl
ret
dec
movsb
or
pushf
in
or
or
cmpsb
mov
das
daa
or
scas
add
fdiv
xor
pusha
mov
adc
movsl
lods
mov
dec
and
test
add
ljmp
push
ja
xor
sub
stos
mov
sub
mov
add
mov
js
or
mov
xchg
mov
add
call
sahf
gs
stos
out
jge
mov
inc
ss
fucom
cmp
in
arpl
mov
push
or
mov
mov
mov
dec
mov
mov
stos
imul
iret
and
inc
arpl
jmp
xor
sub
lock
rolb
clc
stc
movsl
or
lea
idivb
addr16
testl
lds
jge
xchg
hlt
inc
mov
or
mov
sti
mov
cmpsb
into
les
sub
cld
or
adc
lcall
and
fs
dec
outsl
aas
cmp
mov
and
jno
cmp
jp
ds
std
and
mov
fs
mov
pusha
cmp
inc
stos
pushf
fidivrs
ret
or
push
push
or
mov
xchg
ss
rcll
jne
shlb
out
mov
or
mov
loop
cmp
adc
pop
dec
or
xchg
je
mov
push
fisttpll
mov
dec
les
mov
in
stos
cmp
mov
shrl
std
lea
push
push
jge
adcl
adc
icebp
repz
push
pop
icebp
sub
fiadds
or
out
gs
leave
pop
xchg
dec
cmova
roll
xlat
mov
outsb
xor
pushf
js
mov
jle
iret
aad
xchg
sbb
mov
call
icebp
mov
arpl
out
fwait
inc
add
pop
loop
cmpsb
dec
out
loopne
xchg
fwait
arpl
ja
inc
push
and
loopne
lods
ja
fidivs
xchg
mov
in
dec
jnp
rol
dec
jbe
fwait
mov
pop
int
pop
mov
jne
ficoms
imul
add
push
insb
jns
ret
testl
xor
add
punpcklbw
inc
pop
add
in
xchg
fwait
lret
std
sbb
xor
add
or
dec
sbb
jmp
mov
adc
rcr
inc
sbb
lret
dec
jl
and
mov
pop
mov
cltd
lods
pop
sub
sub
data16
cli
sbb
aam
in
ret
xchg
cli
adc
xchg
cmp
add
mov
cmc
and
adc
lds
or
and
rolb
and
xchg
cmp
mov
in
pop
sbb
xor
shlb
test
bound
fisttpl
cmpsl
aad
lret
mov
cmpsb
outsl
je
pop
add
xor
sbb
lock
imul
jmp
stos
and
dec
push
dec
movsb
adc
mov
ret
and
xchg
std
mov
push
addr16
mov
mov
cmp
rolb
out
adc
mov
outsb
fstpl
es
mov
fiadds
dec
arpl
mov
xor
push
dec
cmpl
cmove
jmp
icebp
testl
jecxz
dec
aaa
mov
sbb
dec
push
and
shl
adc
sub
add
push
lahf
pop
xor
movsl
rclb
mov
inc
hlt
xlat
in
int3
loopne
pushf
dec
or
push
lcall
in
test
jbe
adc
pop
cli
or
cmp
mov
xor
shlb
cwtl
out
out
pop
sbb
xor
movsb
mull
mov
cmp
mov
loope
lcall
xor
inc
xchg
iret
push
loope
dec
cli
inc
pop
shrb
cld
or
shlb
push
out
cli
dec
pop
push
adc
repz
mov
scas
loop
jnp
jae
loopne
cwtl
add
cltd
pop
pause
fildl
lea
xor
dec
jno
dec
jae
test
add
rcrb
in
or
hlt
pop
push
cltd
call
clc
dec
push
fnstsw
push
cmpb
xchg
inc
xchg
leave
mov
dec
iret
test
jge
clc
push
mov
xchg
daa
lea
add
jg
cmp
cwtl
push
repnz
mov
inc
ja
or
inc
rolb
test
or
cwtl
stos
in
or
adc
xchg
sub
add
daa
add
push
cli
and
dec
xorl
addb
push
stos
mov
and
lock
xor
xchg
or
push
gs
popa
dec
xchg
aas
cmp
and
mov
xchg
imul
push
add
lcall
popa
mov
add
xchg
shlb
call
cmp
push
xchg
sbbb
dec
dec
imul
mov
lods
inc
stos
mov
mov
imul
mov
je
dec
rcrl
ret
enter
outsl
test
sub
push
call
xor
push
insl
stos
mov
mov
imul
and
outsl
insb
ja
jl
cmp
ds
pop
xchg
push
shlb
les
mov
hlt
scas
jo
inc
sub
aas
data16
out
addl
add
cli
push
cmp
stos
es
lret
cmp
lock
out
ja
cmp
push
enter
mov
cmp
stc
in
movsb
outsl
xchg
bnd
push
shld
cltd
push
mov
or
push
adc
adc
mov
int
or
or
adc
jbe
and
je
dec
imul
bound
pop
add
xchg
out
sbb
pop
test
loopne
pop
xchg
out
mov
into
mov
and
jecxz
xchg
mov
adc
std
pushf
jle
inc
bound
cmp
fildll
xchg
push
push
dec
mov
or
ljmp
out
mov
test
and
mov
mov
pop
out
lds
adc
scas
push
sub
js
push
lods
xlat
inc
shll
sbb
and
lds
pushf
push
sahf
je
mov
push
jns
flds
mov
imul
roll
jle
jmp
pushf
jb
xor
xchg
jb
stos
jmp
sbb
filds
cmp
mov
clc
popa
js
out
push
sub
mov
int
inc
sbb
hlt
pushf
mov
cmp
ljmp
scas
xchg
xor
aaa
rcrb
mov
cwtl
aam
xchg
jnp
jmp
daa
stos
jnp
or
sub
mov
lock
lcall
stos
xchg
jge
add
sub
les
mov
aam
pop
jbe
mov
mov
shr
pop
leave
jbe
adc
cld
bound
int
outsl
mov
cld
fdivrs
out
movsb
fidivs
jecxz
int3
cmp
leave
sub
lods
add
jne
inc
add
leave
sarl
int
imul
jne
add
movsb
cmpsl
push
or
and
pusha
lret
add
jns
arpl
data16
aam
pop
adc
pop
lret
cwtl
ficompl
and
adc
xorb
aam
add
scas
nop
jmp
mov
pop
mov
push
pop
in
popf
mov
int3
push
add
out
push
adc
lds
adcb
mov
mov
int3
repz
or
ja
xor
jnp
jo
push
jo
mov
movsb
add
fwait
and
fcoml
mov
jbe
leave
sub
push
rcrl
adc
loop
sbb
dec
jge
add
inc
xchg
test
mov
aam
dec
add
iret
dec
shrb
jne
mov
jns
sbb
jge
cltd
icebp
in
std
xor
sbb
movsb
subl
jae
mov
mov
jge
nop
mov
push
les
fldt
push
add
inc
xchg
pop
xchg
scas
sub
inc
xor
adc
dec
les
js
fstl
pop
jne
nop
cmp
ds
or
rcrl
nop
xor
push
test
adc
sbb
cmp
out
sbb
fidivrs
xor
sub
rolb
movsl
sarl
out
out
pop
sub
adc
sub
pop
fisttpl
test
dec
add
push
cmpsl
ror
enter
popf
pop
sub
xlat
shrl
jg
xchg
push
push
xor
repnz
fs
push
leave
ljmp
xor
jbe
in
mov
lds
sbb
insb
xchg
pop
repnz
inc
fldt
je
pop
lea
dec
sub
out
fstpt
xchg
mov
ja
mov
adc
dec
or
cmp
or
outsb
sar
js
fsts
mov
xchg
add
inc
aam
fs
repz
xchg
ret
lahf
scas
cmp
add
mov
jbe
ja
pop
add
mov
xor
lods
jo
testb
lcall
sub
ss
addl
lods
mov
and
nop
enter
clc
lock
sar
cmc
aad
pusha
push
daa
shr
cmc
shr
inc
mov
dec
cmp
adc
dec
out
pop
xchg
daa
repnz
fbld
sarb
jne
loop
jne
scas
lods
push
push
and
pop
notb
sbb
stos
push
cld
inc
jecxz
lods
cmc
mov
xchg
idivb
mov
pop
cmc
loop
cmpsl
aad
scas
nop
addr16
mov
inc
cmp
imul
push
imul
xchg
pop
sbb
push
bound
adc
cmp
lods
jae
hlt
jns
lods
cmp
push
add
in
aas
stos
in
mov
jmp
push
shrl
push
pop
add
sub
pop
and
mov
jae
sbb
divb
jp
sub
roll
lock
pop
imul
test
jne
inc
repnz
xchg
mov
adc
inc
inc
push
push
mov
loopne
push
inc
lods
push
cmp
mov
enter
and
inc
in
dec
inc
and
adc
out
fwait
mov
mov
add
pop
pop
xor
push
ljmp
fs
fcmove
lret
mov
sti
rcr
push
cwtl
nop
add
dec
mov
es
ret
sub
mov
mov
fimull
hlt
xor
aas
negl
pop
xor
insl
mov
dec
pop
or
dec
push
subb
or
cmp
xorb
add
sub
mov
mov
fstl
out
enter
and
and
notb
mov
lcall
lret
aam
xor
jle
dec
cs
xchg
lock
filds
xor
pusha
jmp
pop
repnz
fs
loope
inc
cmp
jno
jecxz
xlat
mov
out
xchg
push
xor
andb
sbb
aaa
mov
pop
lret
popa
lret
mov
mov
add
call
sahf
mov
sub
fisttps
lods
psrlw
pop
pop
xchg
xlat
clc
mov
xchg
gs
into
cltd
fucomp
sub
testl
or
js
add
mov
jmp
mov
or
hlt
sahf
xchg
frstor
jns
rcll
mov
or
push
out
adc
ljmp
adc
mov
pop
inc
push
xchg
xchg
cmp
mov
pusha
mull
test
iret
cli
lea
pop
inc
je
cmp
cmp
or
push
rol
loop
and
je
test
mov
cmc
pop
cmp
pop
lea
pop
sbb
dec
mov
dec
call
mov
cmp
pop
call
mov
data16
mov
add
inc
das
popf
in
cmpsb
xor
mov
pop
aad
call
sub
push
jmp
imul
and
dec
mov
loope
or
gs
push
int
bound
and
ljmp
push
push
push
xchg
scas
rolb
mov
dec
pop
xchg
pop
jp
lea
sbb
popa
addr16
cld
shrb
popa
inc
lock
gs
xlat
xchg
insl
bound
pop
cs
out
addr16
test
fmull
xchg
jecxz
mov
adc
xchg
shlb
imul
cld
lcall
js
sbb
mov
sub
out
les
xchg
sub
cmp
add
cmpsb
sbb
std
testb
js
cltd
fistpl
add
shll
icebp
or
decl
push
inc
push
adc
or
fwait
imul
xchg
inc
fidivs
push
outsb
mov
pop
dec
and
jl
jbe
data16
xchg
aas
std
enter
ds
jnp
ds
dec
mov
jae
inc
push
arpl
fidivs
push
nop
cld
in
inc
lahf
xchg
xchg
mov
fsubl
xchg
lea
out
cmp
jnp
mov
bound
xchg
ficomps
adc
push
jle
sub
mov
mov
mov
cld
push
add
mov
divps
popf
pop
stos
sti
pop
aam
loop
lods
js
jg
and
cmp
jb
cld
push
test
sub
ss
xor
call
sbb
adc
fsub
pop
loope
jge
insb
add
in
fidivrs
jge
lcall
ljmp
in
movsl
std
jae
adc
rcrl
pop
fstpt
in
mov
dec
inc
mov
push
jo
xor
cmp
lods
jne
mov
flds
inc
in
add
pop
cmp
mov
fmul
adc
fsub
inc
andb
xor
shrb
xor
lahf
mov
dec
xor
mov
ljmp
mov
daa
sub
sbb
dec
push
jne
hlt
jmp
xor
inc
pop
insb
nop
js
lahf
dec
repnz
pop
cs
and
addb
in
jnp
cmp
popf
aas
gs
pop
mov
scas
sbb
in
cmp
mov
aam
jo
pop
cmpsb
in
jnp
cs
or
jno
ja
jg
xor
and
or
outsb
int3
stos
outsl
in
mov
mov
testb
mov
jl
stos
rclb
jnp
lods
sbb
mov
adc
lret
pop
push
les
sub
sbbb
popl
arpl
movsl
add
cmp
orb
sub
add
and
js
mov
inc
clc
das
mov
shrl
cmpsl
stos
mov
dec
cmp
push
mov
adc
je
jbe
sub
pop
sub
popf
dec
sbb
outsl
mov
xor
je
hlt
mov
stos
out
les
add
pop
repnz
and
jp
add
ret
and
push
lar
aas
popa
pop
std
rolb
add
fwait
ds
loope
popa
popa
sub
cmp
es
push
nop
stc
jp
jb
and
dec
out
push
sti
xlat
sbb
and
pop
ljmp
or
add
jmp
sub
iret
push
pop
sub
das
xor
lea
mov
adc
pushf
enter
data16
shll
inc
pop
bound
cltd
sti
in
mov
inc
push
cli
addr16
pusha
test
pop
cmp
fs
fldt
sbb
popf
es
inc
inc
jns
sub
sbb
repnz
loopne
mov
clc
fdivs
xchg
inc
lock
mov
add
xor
test
jo
sub
lret
out
data16
in
cld
pop
push
mov
mov
mov
add
daa
out
js
mov
imul
sbb
pop
add
inc
in
sarb
or
cltd
movsl
dec
add
add
ret
push
aad
les
lahf
inc
or
cmpsl
sub
pop
mov
out
jno
pop
ja
loopne
divb
mov
aas
cmp
or
push
lcall
gs
mov
call
insb
adc
cmp
fxch
push
insl
mov
jle
adc
push
xchg
mov
xor
in
xlat
mov
jmp
loop
sub
push
in
or
jae
imull
addr16
test
pop
dec
xor
testb
add
mov
out
dec
dec
or
and
push
out
inc
mov
mov
mov
fsubrs
rorl
repnz
and
xchg
and
insl
out
out
mov
mov
inc
jmp
sti
mov
jg
sti
stos
cli
pusha
pcmpgtb
cli
or
outsb
fcoml
mov
fcoml
lret
push
push
cwtl
shll
shlb
jnp
cmp
sbb
cmp
xor
std
xlat
test
pop
loopne
adc
mov
sbbl
test
icebp
les
bswap
arpl
popa
lret
mov
pop
int
loope
jp
or
daa
xchg
inc
call
mov
stc
adc
das
mov
sbb
jno
jecxz
movsl
sbbl
test
icebp
cmc
fistl
les
loop
inc
add
jg
pop
or
dec
dec
sarl
cmp
lea
adc
push
dec
lahf
subb
mov
mov
dec
leave
out
sti
ret
jge
mov
std
mov
cmc
push
mov
or
dec
dec
add
mov
cmp
pushf
repz
xchg
das
add
dec
shl
movq
mov
stos
xchg
outsb
je
push
test
mov
mov
dec
cmp
loopne
leave
add
jmp
xor
cs
movsb
mov
mov
mov
les
daa
cmp
cwtl
outsl
jg
popa
cmp
adc
test
mov
mov
ljmp
dec
lret
mov
jmp
out
cmp
mov
and
arpl
xor
out
xchg
rorl
adc
pop
inc
xchg
and
out
daa
push
xchg
sub
xchg
pop
pop
sarb
nop
cmp
shrl
xlat
add
call
inc
int3
repz
movsb
in
scas
mov
mov
ljmp
ficomps
sahf
out
es
sarl
movsb
push
lcall
ljmp
add
loope
dec
lods
fistl
or
mov
pop
push
or
or
in
jle
hlt
push
test
pop
aaa
subb
rorb
or
dec
in
pop
sub
adc
scas
rorl
pop
sub
inc
cmp
loopne
scas
jb
xor
jne
or
xchg
push
mov
lea
je
dec
sub
fldt
or
or
fcoms
sti
fmul
or
mov
out
cmp
mov
fists
pop
inc
mov
sahf
lock
or
into
mov
je
push
adc
sahf
mov
fidivrs
sahf
inc
adcb
loopne
fisttpl
andl
cmc
pop
pop
les
in
lds
imul
or
mov
dec
mov
movsl
push
insl
ss
andl
jns
mov
loopne
mov
and
cmp
jmp
push
and
push
cmp
xchg
pushw
jb
and
mov
mov
minps
push
ror
push
or
lods
mov
mov
or
push
xchg
or
mov
jno
mov
cmpsb
scas
cmovg
scas
stos
sub
popa
jg
test
jae
and
test
jnp
into
mov
arpl
sbb
pushf
rolb
movsl
lds
jbe
je
mov
insb
and
xchg
mov
dec
jne
mov
inc
bnd
and
inc
and
ja
xor
cmpsb
enter
outsl
pop
inc
fistl
xchg
adc
dec
jl
jg
cmpl
dec
jmp
pop
movsb
inc
inc
mov
xchg
push
push
and
rorb
jmp
add
inc
add
mov
cmc
sbb
push
pushf
jns
xchg
sbb
inc
pop
aad
or
fst
popf
scas
loopne
in
xor
xor
jnp
mov
int
jae
daa
adc
cmpsb
or
and
and
loop
xchg
test
mov
aaa
imul
and
cs
lret
fnstcw
addr16
pop
jae
in
in
roll
push
lods
mov
cmp
scas
int3
push
cmp
cmp
pop
pop
push
aam
xor
je
lds
jmp
xor
mov
xchg
cmpsb
add
out
xor
pop
jg
fs
ja
test
sub
nop
push
pop
ret
xlat
mov
fdivr
cmp
daa
jg
ss
mov
xchg
cmpsl
xor
and
test
push
push
pop
ror
sbb
cmp
jg
ljmp
cmp
dec
add
ss
add
jnp
pushf
mov
pop
sub
mov
or
jb
das
mov
sbb
aad
xlat
push
insl
adc
pop
pop
pop
pop
mov
aas
cmp
sbb
pop
aaa
cmp
icebp
xlat
sahf
repnz
loope
imul
in
xchg
xchg
dec
push
int3
and
rclb
mov
cmpsl
aam
jo
jge
xor
jecxz
inc
jg
fcmovb
movaps
in
in
in
cltd
bound
add
outsl
loopne
cli
enter
mov
mov
pusha
test
push
xchg
or
rolb
xchg
adc
jb
lods
mov
sti
lcall
outsb
or
pop
push
add
inc
ret
dec
movsl
xlat
mov
bound
jl
fistpl
jg
rolb
or
push
sub
pop
loopne
cmp
xor
xchg
add
cmp
cld
xchg
mov
and
cld
fstps
pushf
inc
lea
mov
rorb
fisttpll
jmp
mov
sub
sbb
out
push
popf
push
arpl
scas
test
outsl
adc
pop
mov
jbe
testl
push
xchg
rcrb
lea
mov
and
mov
push
dec
out
sbb
push
cmpsl
mov
xor
jg
ja
xchg
inc
xor
and
popf
push
adc
push
pop
adc
pop
sub
fisttpll
rorb
in
and
sub
lods
popa
dec
jl
pop
stos
aad
adc
repnz
xlat
and
fst
out
push
lret
mov
sbb
lret
jle
mov
or
nop
inc
jo
ret
mov
mov
sar
push
dec
jmp
cmp
bound
inc
mulb
lcall
add
mov
nop
xor
mov
jge
jle
test
in
repz
dec
stc
jecxz
test
or
int
imul
lcall
test
test
xor
push
xor
test
psllq
mov
jecxz
and
cmp
cltd
jns
sbb
push
xor
sbb
icebp
popf
setns
in
repz
xor
jns
movsb
sahf
es
rcl
outsb
and
sub
dec
adc
out
lret
mov
and
jp
test
fists
adc
cmp
es
adc
jbe
scas
int3
pusha
dec
insl
icebp
jecxz
xlat
repnz
cmp
sub
pop
out
push
add
icebp
aad
mov
mov
mov
dec
shl
xor
pop
pop
xor
mov
enter
in
test
push
fldl
leave
xchg
pop
mov
inc
sbb
pop
mov
ss
int
mov
cmp
loop,pt
push
xchg
jbe
pop
mov
sub
sbb
or
leave
insb
cltd
or
addb
jnp
push
sub
xchg
lret
xorb
shr
jno
out
push
mov
ja
dec
aad
js
aas
cli
movsb
ds
pop
loop
out
lods
xchg
mov
mov
xchg
das
std
inc
sbb
cs
xchg
imul
mov
cltd
pusha
pop
fnstsw
push
mov
push
fcomp
jbe
loopne
inc
lds
cmpsl
aam
mov
cmc
xor
xchg
pop
push
inc
mov
iret
jp,pn
cmp
stos
shll
js
or
stc
xor
ja
ljmp
pop
daa
fmuls
or
leave
fldcw
add
cltd
cmp
inc
xor
popa
test
dec
cmp
jo
lods
les
or
mov
scas
insb
mov
sbb
jmp
movsl
push
pop
jne
nop
pop
jg
hlt
or
xchg
pop
inc
push
idivl
and
and
es
adc
and
imul
and
and
xchg
ds
jmp
or
aad
mov
cmpsl
mov
insb
cmp
pushf
shrb
mov
inc
std
or
or
xchg
mov
and
pop
je
std
push
and
ljmp
in
cmc
cmp
add
test
pop
push
push
cltd
movsl
dec
fnstsw
daa
mov
jmp
insl
nop
arpl
stos
cmpl
nop
repz
shrb
mov
dec
shrl
loope
add
shll
aas
mov
or
fsub
adc
scas
movsl
adc
jg
aam
in
in
jg
push
aaa
cld
enter
or
inc
cmp
dec
leave
idiv
add
sbb
stc
mov
jecxz
mov
jb
cmp
adc
xlat
rclb
xchg
mov
outsl
scas
ret
mov
xchg
adc
xor
aam
lahf
das
and
stos
cmp
push
add
mov
into
xchg
sub
sti
repnz
sub
loop
pop
arpl
adcl
pop
mov
int3
add
or
add
jg
test
sbb
adc
fisttps
lret
mov
scas
pop
mov
in
xchg
sub
scas
cld
icebp
dec
ds
mov
and
mov
dec
outsb
mov
inc
xchg
inc
pushf
mov
adcl
mov
rcrb
out
add
xor
xlat
dec
and
ret
mov
cmp
push
cmp
or
sub
pop
arpl
inc
popf
mov
sub
test
in
or
mov
lea
pop
scas
sub
xchg
mov
dec
sahf
int3
mov
shl
push
jns
jno
push
stc
faddl
addr16
mov
lock
jno
ret
insl
push
push
mov
add
add
inc
out
aad
xchg
sbb
insl
data16
pop
std
aaa
pop
xlat
scas
and
prefetch
sub
mov
cmp
roll
sub
popf
sbb
clts
data16
cltd
mov
mov
mov
outsb
mov
arpl
dec
nop
xor
mov
xor
test
push
inc
out
popf
incb
mov
mov
les
outsl
fwait
adc
dec
popa
int3
jno
jge
push
add
jae
jb
popf
push
sbbb
mov
insb
jmp
in
ss
or
xchg
cmc
mov
or
jnp
mov
jae
int
subb
xlat
sbb
aaa
cmp
pushf
push
test
adcl
and
push
push
jne
popa
pop
adc
mov
cmp
mov
add
add
mov
out
nop
mov
cmc
pop
adc
call
add
inc
or
call
adc
push
sbbl
inc
rcr
sub
popf
cmp
push
pop
xor
mov
cmpsb
add
int
jmp
mov
mov
lods
sub
mov
daa
mov
jmp
lods
push
pop
pop
jae
sub
pop
mov
sahf
cmp
enter
mov
aaa
push
mov
sub
mov
add
sbb
orb
jge
pop
ret
rclb
sub
hlt
push
mov
in
fwait
jnp
xor
mov
scas
push
int
sar
push
ljmp
adc
lock
pslld
and
jae
mov
push
jecxz
cmp
pop
mov
lods
or
mov
fmull
jne
xor
xor
aad
shll
out
dec
out
cmp
inc
cli
cmpb
lret
lcall
mov
push
mov
or
sub
outsb
xchg
iret
scas
dec
inc
xor
insl
mov
adc
je
jae
xchg
sbbb
call
cmp
jge
stos
push
adc
ret
les
inc
ss
push
arpl
std
jecxz
scas
je
mov
add
movsb
inc
or
push
loop
aad
or
mov
arpl
ss
or
or
orl
inc
test
jg
repnz
cli
xor
ret
sbb
cwtl
jg
scas
loope
addl
shlb
add
xchg
jge
sbb
insb
mov
or
pop
adc
jne
or
outsb
les
ds
movsb
pushf
push
sbb
adc
hlt
jmp
push
movsb
xchg
lock
cmp
mov
lret
movsb
icebp
je
dec
les
iret
jnp
lea
mov
loop
xor
fsubrs
add
scas
jbe
jp
repz
or
xchg
fs
aas
dec
dec
pop
mul
mov
push
icebp
jmp
xor
jns
addr16
push
adc
jmp
stos
into
shlb
aad
outsl
add
mov
fldt
or
pop
adcb
out
es
neg
sub
push
and
pop
and
pop
popa
jae
mov
cmp
pushl
cmp
sub
inc
dec
lods
xchg
nop
jae
pop
lds
and
daa
add
aaa
jge
mov
sub
sub
cmp
push
inc
jae
pop
out
insl
mov
lcall
add
out
lret
pop
data16
mov
sub
or
mov
add
mov
mov
dec
mov
push
pop
or
pusha
mov
stos
sub
ja
lods
push
dec
or
aam
iret
inc
xchg
and
add
lahf
cmp
dec
add
loopne
inc
and
popa
add
inc
repz
in
in
or
mov
pop
mov
in
fisubrs
pushf
fidivrs
popa
jge
mov
test
mov
pop
mov
cmpsl
and
iret
xchg
sarb
addb
add
mov
pop
sub
mov
in
pop
add
out
push
mov
loop
or
std
pop
fistpl
inc
mov
stos
xchg
es
jo
insb
dec
outsb
stc
js
xor
das
lea
lds
xchg
pusha
pop
jb
xor
cmp
and
jle
pop
or
lahf
inc
mov
add
in
and
cli
nop
adc
inc
inc
je
and
dec
aam
repnz
std
jb
xchg
inc
xor
sarl
scas
fwait
mov
andb
into
xor
cmp
pushf
sub
popa
and
jmp
dec
cmp
push
cmp
cwtl
sarl
sbb
mov
xor
arpl
in
das
movb
movsb
lcall
add
inc
pop
shll
mov
dec
push
pushf
mov
or
jmp
add
rclb
pop
or
or
sbb
leave
out
dec
ljmp
jp
stos
xchg
mov
xchg
mov
add
sbb
repz
push
cwtl
adc
dec
repnz
dec
loop
sbbl
out
call
cwtl
push
lcall
outsl
xor
movsl
adc
leave
outsl
lret
cmp
jmp
faddl
push
repz
imul
int3
pop
test
scas
xchg
iret
push
xchg
stc
and
pop
imul
add
xchg
dec
neg
xchg
add
cmp
clc
dec
movsl
clc
out
js
or
sub
rorb
cmc
in
int3
jne
pop
movsl
pop
inc
jge
mov
fistpll
push
push
rolb
loope
jae
push
pushl
fistpll
shrl
pop
pop
mov
jbe
gs
mov
outsb
inc
sarb
aam
lahf
lahf
leave
push
int
cmpsb
cmp
out
fdivrl
adc
adc
popa
rcl
cmp
insb
cmp
or
rolb
test
cmp
std
push
cmp
sahf
add
loopne
cmpsb
lds
inc
push
loop
lret
add
bound
sbb
inc
test
add
sub
pop
or
push
jnp
push
dec
into
inc
xchg
ficoml
jbe
pop
stc
or
cli
lds
sbb
ficoml
mov
mov
aad
addr16
mov
mov
stc
xchg
mov
mov
pusha
sbb
fcoml
shrb
repnz
stos
int
and
insl
in
mov
xor
mov
enter
ss
jne,pt
in
adc
shl
fs
cwtl
push
add
pop
fstps
pop
outsb
push
push
dec
push
loope
jp
imul
mov
sar
mov
and
cmpsb
pop
fsubs
and
jmp
mov
clc
mov
addr16
dec
pop
aad
les
or
mov
lods
cmpsl
fs
ss
pop
xchg
jmp
pop
insb
cwtl
ss
xlat
les
cmc
pop
repz
andb
popf
jo
movsb
mov
imul
pop
inc
sbb
add
push
and
int3
and
or
mov
cmp
dec
pop
std
and
cmp
mov
movsl
xor
nop
sub
xorl
in
inc
cltd
popa
stc
and
scas
jmp
lcall
mov
iret
sbbb
xor
fiaddl
cmp
xchg
pop
mov
jg
cmovg
pop
outsl
fcomps
in
jmp
or
insl
lcall
mov
xor
popf
hlt
mov
repnz
fisttps
test
add
scas
push
daa
dec
adc
orl
and
scas
arpl
inc
inc
push
ret
cld
in
bnd
out
vrsqrtss
jmp
cli
and
xchg
cmc
jno
scas
xor
insl
sbb
mov
out
jns
inc
jp
loopne
imul
adc
mov
pop
mov
or
push
mov
rorl
test
movl
push
fbstp
mov
xor
cltd
sub
lods
sub
paddb
mov
imul
cwtl
adc
add
xchg
sarl
mov
scas
out
inc
pushaw
inc
jbe
dec
add
fstps
pop
test
scas
mov
iret
adc
int3
push
mov
push
cli
lret
test
xchg
adc
cmp
bound
cli
js
pop
popf
sbb
pushf
dec
or
jns
hlt
dec
test
xor
adc
pop
pop
mov
push
jmp
cmpsb
mov
add
out
and
jle
pop
icebp
test
lahf
pop
sub
push
test
mov
test
jno
outsl
fsubs
dec
shll
jno
jmp
cld
into
popa
fldcw
or
out
adc
push
jae
test
sub
lret
es
pop
nop
or
mov
movsl
sub
into
mov
and
and
movsl
jecxz
pop
int
mov
xchg
mov
xlat
pop
into
jmp
xchg
sbb
xor
test
xchg
lret
pop
sub
lcall
sbb
fisttps
push
inc
or
dec
sbb
inc
sub
ja
xchg
inc
dec
lahf
aad
test
adc
cmp
inc
cmp
mov
aas
cmp
js
cmp
shl
leave
inc
or
mov
mov
scas
dec
and
sbb
cmp
sahf
adc
xchg
popa
or
lahf
and
jp
xchg
scas
pop
and
jle
sub
push
lock
fsubl
cltd
sbb
sub
cmp
repz
add
xchg
andl
add
fistl
jecxz
lahf
jae
jmp
mov
sub
jge
ss
outsb
xor
dec
idiv
subl
dec
sub
push
pop
fcmove
and
cmpsl
mov
mov
mov
push
mov
cs
jl
sbb
sbb
push
sub
mov
dec
jge
hlt
cmp
mov
pusha
in
mov
adc
xchg
in
aam
mov
ret
int3
or
iret
ljmp
lods
xor
fidivrl
add
addb
gs
push
sbb
inc
add
inc
or
clc
mov
int
dec
cld
repz
jl
shlb
lea
inc
addl
test
or
xor
push
popa
pop
enter
leave
and
fldl
push
sarb
popf
sbb
adc
sarl
sub
pop
jo
addl
testl
dec
sbb
jb
sahf
sub
negb
push
add
cmpsb
cmp
call
dec
lret
mov
mov
or
cmovnp
push
mov
outsl
pop
mulb
jp
xor
incl
and
cmp
push
mov
leave
mov
popa
into
popf
pop
sti
push
jbe
push
sti
xchg
push
mov
xchg
mov
jle
test
push
jmp
and
dec
push
lds
push
in
push
lods
jl
xor
outsb
push
lahf
lea
rolb
gs
inc
push
push
sbb
adc
imul
push
push
push
dec
mov
je
in
negb
xchg
mov
fbstp
mov
dec
inc
mov
cli
push
nop
lea
mov
ss
mov
inc
add
insl
and
push
jbe
inc
out
cmp
loopne
mov
xor
xor
ds
or
imul
stc
repz
cld
stos
shrb
push
mov
scas
jl
adc
lcall
sbb
out
xchg
jl
and
enter
xor
mov
adc
xchg
outsb
shrl
push
scas
adc
das
lret
sahf
adc
cli
imull
mov
outsb
int
out
ret
std
sub
jne
fistpll
hlt
ficomps
jg
xchg
loope
jecxz
mov
std
cli
out
add
loopne
push
pusha
into
push
pop
aas
adc
scas
test
sbb
decb
push
jb
jnp
ret
mulb
mov
sbb
inc
sbb
aaa
push
cld
xchg
ss
lods
aas
or
cld
outsl
adc
hlt
push
sahf
dec
adc
sbb
xor
mov
out
shlb
dec
or
or
repnz
in
jle
imul
sti
cmp
andb
movsl
sbb
loopne
or
sar
aaa
xlat
pop
bound
inc
pop
xchg
sbb
cs
call
cs
lahf
sti
mov
cmovle
push
push
es
mov
xor
adc
add
mov
insb
mov
fistl
popf
je
in
sub
pop
jl
or
mov
loope
push
and
dec
or
jae
mov
in
out
mov
cmp
in
out
aad
push
dec
inc
pop
loope
test
dec
out
cmc
out
mov
fisttpl
and
flds
pop
sub
mov
push
and
push
jmp
fs
add
cmp
repnz
or
lds
icebp
sub
jo
in
mov
xchg
popf
cmpsl
push
pop
sbb
in
gs
out
sub
push
push
adc
es
jae
dec
add
cmpsb
lret
dec
orb
loop
mov
pushf
push
jle
mov
popf
push
jecxz
pop
mov
mov
insb
mov
fidivs
imul
xchg
jl
scas
fcomi
cmp
bound
ret
mov
lock
sbb
mov
mov
xchg
sahf
push
inc
add
test
fwait
popf
lods
xor
xlat
and
cltd
inc
ss
adc
pop
add
imull
cld
rcrl
lcall
mov
inc
add
sbb
or
jg
dec
jle
out
shrl
jae
arpl
test
xor
cmp
dec
ret
outsl
and
repnz
adc
lock
jnp
hlt
and
pop
mov
pop
jmp
push
or
frstor
add
lods
inc
cmp
jg
inc
insb
xor
ret
sub
jmp
insl
xor
push
push
push
pop
arpl
popf
sub
mov
leave
ss
sahf
mov
add
cld
nop
loopne
or
pop
fbld
mov
ret
subl
ss
xor
rorl
scas
and
or
or
push
sbb
pop
fisubrl
inc
jmp
sbb
bound
push
es
push
shlb
mov
cmp
sub
je
ja
insb
mov
fwait
scas
lods
mulb
push
stc
ja
push
push
cmp
repz
js
mov
xor
mov
add
push
pop
xor
das
inc
hlt
scas
mov
cli
cld
lods
or
xchg
push
mov
test
and
jne
xor
aaa
mov
out
push
scas
add
sbb
outsl
add
jno
scas
mov
mov
fwait
dec
mov
sub
sub
mov
cwtl
pop
lods
int
xor
mov
mov
decl
popf
fidivrs
test
cld
sti
in
std
stos
push
test
inc
scas
mov
sub
sub
fimuls
sub
sbb
cltd
icebp
pop
iret
lds
repnz
into
jns
aad
fs
mov
or
fwait
clc
fistpll
jnp
mov
sbbl
sbb
adc
or
mov
cld
movsb
sbb
cs
gs
mov
in
mov
mov
add
int
pop
enter
push
sub
sbb
mov
pop
dec
andb
nop
lea
xchg
push
les
roll
cmpsl
icebp
cmc
add
out
pop
sbb
push
xor
cmp
cli
inc
lcall
push
sub
xor
shl
ret
cmp
adc
or
lods
xchg
xor
out
iret
xchg
jo
sbb
and
lods
sub
cmpsl
pop
hlt
stos
adcl
or
ljmp
xor
dec
fmuls
in
and
push
loopne
inc
inc
xchg
pop
xor
addl
xor
out
and
push
pop
fisttpl
scas
into
push
xor
incb
fildll
andl
sbb
jne
sub
cli
add
xchg
push
arpl
sbb
add
clc
jmp
lock
pop
xor
push
addr16
or
dec
push
inc
aaa
lock
xchg
aad
sbb
jnp
pop
push
loopne
les
ss
jns
mov
pop
and
adc
push
shll
push
fnstenv
jge
fwait
dec
pop
bound
adc
fcom
fldl
in
push
lods
fisubl
xchg
mov
lea
nop
sub
inc
jbe
aas
fdivl
or
adc
loope
or
jle
add
test
adc
mov
dec
push
mov
divb
mov
lcall
sbb
xor
insl
cmpsb
out
dec
jmp
mov
sub
xor
lods
mov
lret
jle
popf
dec
inc
mov
std
fnstcw
dec
pop
pop
leave
push
cmpsb
sub
das
out
mov
adc
push
mov
xorb
sbb
or
aad
sbb
fildl
cmp
fists
test
xchg
or
adc
sti
dec
or
lds
adc
mov
push
pop
adc
mov
inc
jne
test
fstpl
mov
push
sbb
inc
sbb
les
in
dec
mov
pop
xchg
sarl
pop
out
repnz
jp
pop
xchg
cwtl
lcall
pop
ja
aad
or
and
das
inc
mov
cwtl
adc
std
cmp
mov
imul
xor
into
shrb
cld
aaa
cmp
outsb
push
pop
mov
cmp
push
shll
leave
gs
decl
xchg
xor
pop
repz
jp
mov
mov
inc
and
mov
mov
mov
into
les
dec
pop
adcb
pusha
mov
aas
icebp
fadds
adc
icebp
mov
push
in
or
xchg
mov
popf
mov
test
out
mov
xchg
leave
mov
mov
arpl
xor
add
sahf
dec
test
add
mov
or
das
mov
int
add
stos
pop
inc
sub
ss
or
push
frstor
je
sub
xor
and
notb
pop
and
pop
mov
and
ret
test
add
push
push
add
leave
scas
dec
mov
loop
and
sbb
mov
add
out
ss
sub
jnp
inc
call
arpl
mov
and
inc
adc
aad
ss
leave
cmpsl
insb
addr16
mov
sbb
sub
mov
cld
and
repnz
movsl
mov
push
mov
add
insl
mov
scas
mov
ds
sarl
lret
adc
ss
jecxz
add
push
push
jecxz
fdivrp
sbb
fmuls
push
out
loope
mov
cmpsb
cmp
std
cltd
out
out
frstor
loop
les
push
imul
out
test
cltd
imull
jecxz
stos
sbb
pop
adc
enter
mov
or
test
into
jno
call
mov
std
out
dec
idivl
xchg
adc
adc
sbb
loope
adc
je,pn
enter
lahf
jecxz
mov
scas
push
testl
jno
icebp
jne
out
sbb
lahf
xlat
dec
in
enter
ror
push
mov
push
jp
ds
jo
sub
popa
lods
jne
fsubrl
dec
mov
add
mov
adc
insb
leave
into
xchg
daa
pop
fistpll
arpl
jecxz
sub
stc
cmp
lret
lods
js
iret
inc
int
iret
lea
sub
ja
in
andl
and
xchg
push
xchg
mov
out
std
into
mov
pop
sarl
in
test
not
or
shll
jge
adc
out
pop
mov
xor
cmp
cmp
cld
adc
or
jns
xchg
pop
jo
dec
pop
or
dec
mov
insb
lea
test
loop
ljmp
loop
fimuls
mov
xor
cmpsb
test
or
inc
and
xlat
sbb
nop
pop
ficompl
mov
jle
mov
out
mov
sub
add
mov
je
aam
fcmovb
or
xchg
push
std
pop
or
enter
movb
sbb
push
xchg
mov
pop
hlt
out
clc
lods
sahf
cmp
ljmp
pushf
fucomp
jno
or
lods
mov
arpl
pop
jg
rol
mov
jl
sbb
push
add
shlb
cmp
adc
cwtl
sub
shlb
cs
cld
aaa
sub
sub
inc
daa
out
inc
outsb
push
inc
mov
mov
cmp
jp
add
loope
or
pop
jb
jg
mov
popf
mov
cwtl
xchg
push
mov
hlt
cmp
les
pop
mov
clc
mov
dec
mov
ret
clc
mov
add
nop
jb
je
mov
xor
inc
sti
dec
jg
pop
cltd
incb
shrl
ds
mov
into
lea
notl
out
and
sbb
xchg
dec
into
push
push
jmp
or
dec
call
jne
xchg
stos
ret
loope
adc
or
xchg
mov
sbb
jp
subb
inc
sbb
insl
lods
lret
dec
rcr
outsl
cli
jo
ror
mov
mov
jno
jne
arpl
lds
outsl
mov
fldt
xchg
aam
icebp
ds
xor
cmp
push
mov
cmpsl
fldl
pop
ds
mov
add
lds
pop
ss
int3
xchg
scas
push
lahf
testb
fdivs
enter
pop
inc
ja
aam
or
jmp
jmp
add
mov
vcvtsd2ss
leave
mov
push
data16
xorb
or
mov
add
cmp
dec
push
push
dec
add
xor
insb
cmp
roll
cmp
lret
fs
not
call
dec
loopne
daa
lods
stc
cwtl
xor
in
bound
mov
mov
call
xor
addr16
cmpsl
push
push
mov
adc
push
fs
xor
data16
adc
mov
mov
rcll
aaa
test
cmp
inc
scas
notl
sbb
out
lock
xor
pop
je
shl
add
enter
je
iret
mov
adc
jge
addr16
add
dec
cmp
int3
or
ret
adc
and
ret
mov
or
sbb
rorb
push
je
imul
movsl
mov
cmpsl
out
or
sbb
pop
aas
dec
jae
xchg
movsl
in
hlt
movsl
push
out
in
jne
xchg
xor
cmpsb
aas
insb
adc
cwtl
push
enter
mov
cmp
in
les
testb
mov
and
loope
lahf
call
int3
mov
fwait
popf
cmp
jne
imul
and
ror
pop
mov
push
aam
and
cs
lock
sbb
adc
add
and
stos
outsl
cmp
dec
imul
loope
and
test
cmc
scas
insb
xchg
dec
fisubrs
mov
imul
lcall
jle
jo
icebp
mov
mov
xchg
push
iret
repz
clc
xor
pop
in
shrb
cmp
mov
add
jecxz
mov
sbb
push
lret
enter
or
adcb
mov
inc
xor
js
jns
cmp
test
lods
popf
outsb
mov
push
ret
inc
xchg
pop
sarb
push
gs
popf
xchg
lret
jb
mov
call
dec
loop
into
insb
jb
xchg
jmp
jne
into
popf
in
ds
imul
jle
lock
mov
cmpsb
lret
mov
inc
inc
movsb
ljmp
pop
shlb
xchg
inc
int
lcall
fmul
pop
sbb
int3
idivb
push
dec
xlat
dec
mov
pop
xchg
test
rcrb
dec
pop
pop
jg
out
popf
xlat
in
xchg
and
mov
sub
call
popl
fstp
stos
jp
enter
jle
gs
jb
into
dec
sahf
inc
shl
jns
mov
std
ficoms
rcl
inc
cs
js
pop
icebp
test
fdivs
jl
push
test
inc
sti
lcall
or
addl
mov
xlat
out
mov
dec
pop
jae
bound
leave
lret
adc
xor
mov
in
inc
push
sub
jle
inc
xor
in
pusha
out
popa
repnz
imul
or
frstor
je
les
ljmp
pop
shl
cmp
hlt
dec
rorl
arpl
sub
fcompl
testl
dec
bound
adc
jge
js
test
inc
popa
into
fildll
pop
or
and
inc
fdivs
aas
sub
cmp
xchg
cmp
cld
push
in
scas
enter
cmp
dec
insb
lods
mov
ljmp
cmc
ds
fisubrl
hlt
cmp
ret
sub
repz
rclb
in
ss
cmpsl
mov
rclb
jl
mov
nop
hlt
adc
dec
out
test
lret
inc
into
add
dec
dec
sbb
inc
das
xor
xor
jge
pop
imul
dec
inc
xchg
in
test
arpl
sti
xchg
cmp
xchg
sub
xchg
scas
push
adc
xor
imul
jg
xchg
add
mov
test
xor
dec
inc
in
adc
gs
jge
rclb
ss
jno
mov
cs
daa
call
inc
push
mov
and
scas
fdiv
icebp
xchg
int
jg
mov
ret
addl
cmp
mov
xorl
add
xor
out
mov
out
mov
xchg
out
sub
or
and
cli
leave
std
inc
inc
add
cmp
sub
out
fnstcw
xor
outsl
dec
add
mov
scas
addb
popf
push
test
cmpsl
sti
mov
inc
pushf
adc
jb
and
jecxz
push
movsb
xchg
dec
stos
arpl
and
jae
pop
cmc
and
into
pop
dec
pop
mov
imul
dec
das
or
jb
outsl
fwait
in
inc
fmul
shl
popf
mov
fwait
and
popa
pop
xchg
sub
dec
mov
xor
xor
loop
fstpt
ja
sub
out
jb
scas
lods
adc
xor
mov
pushf
jecxz
iret
int
mov
ds
mov
xchg
or
in
fdivrl
pop
and
andb
int3
push
in
jmp
push
jno
clc
pop
fldl
mov
pushf
jbe
pop
xor
xchg
jnp
lret
daa
rolb
in
xor
adc
sahf
jle
jns
sub
xchg
dec
mov
mov
inc
xor
pop
push
pop
enter
out
ljmp
pop
movsb
lock
inc
sarl
imul
mulb
idiv
xchg
lret
pop
xor
xchg
movsb
xor
popf
lock
imul
add
xchg
fstpt
lods
je
or
inc
push
mov
xchg
push
ja
pop
or
inc
mov
jmp
sbb
pushf
pushf
mov
sbb
imul
jg
shrl
add
enter
jne
cmp
xor
hlt
movsl
push
jge
adc
shr
pop
shlb
bound
fs
and
mov
sub
cmc
mov
ret
test
pop
rcll
icebp
push
sarb
mov
xchg
fisubl
stos
ljmp
lods
aad
mov
pop
rcl
fldcw
shlb
out
inc
push
jo
mov
cmp
ds
mov
sub
icebp
sub
mov
inc
add
js
bswap
xchg
sbbl
fnop
pop
pop
xchg
and
gs
ret
movsb
sbb
add
stos
jl
in
shrb
loop
in
lret
lock
sub
xchg
mov
mov
test
loop
out
xchg
icebp
and
jp
inc
pop
jnp
pushf
dec
test
mov
xor
add
mov
add
jo
popf
iret
shl
jo
push
andb
or
bswap
sti
les
inc
add
std
out
xor
add
je
adc
mov
aam
fcomps
xor
outsb
dec
in
xchg
ret
push
sbb
addr16
popf
lods
lods
mov
push
dec
movsl
or
xchg
cmp
mov
push
dec
sbb
pushf
hlt
jnp
sub
inc
jmp
int
aad
cld
out
in
sbb
clc
cmp
xor
frstor
cmp
stc
popa
pushf
adc
bnd
mulb
push
fidivrl
pop
ffreep
inc
psllq
add
call
orl
push
jecxz
or
and
imul
pushf
cmpsb
leave
imul
and
mov
enter
pop
pusha
popa
fiadds
pop
fstpt
lcall
lds
and
ret
push
jle
inc
sub
lods
add
cmp
mov
xchg
pop
push
xor
mov
pop
mov
mov
adc
movsl
outsb
test
jmp
pusha
cmp
mov
dec
addr16
pushf
jmp
loopne
sub
mov
add
mov
fcmovnbe
sub
jb
xor
daa
xchg
xlat
add
adc
insl
enter
add
in
ds
out
arpl
cmp
sub
mov
push
inc
cli
js
xor
xchg
fiadds
adc
push
aas
je
ror
ss
jae
cmp
adc
inc
lods
adc
pandn
ljmp
jbe
addr16
jl
test
push
xchg
call
lea
icebp
jb,pn
push
sbb
mov
and
push
add
lret
dec
daa
dec
insl
cwtl
dec
mov
ss
test
int
push
cmp
jb
xchg
sbbl
ljmp
call
xchg
sbb
mov
rolb
shrl
rclb
xchg
int
in
jbe
adc
test
mov
test
mov
lret
movsl
ret
pop
mov
mov
sti
lds
xor
je
test
negl
leave
js
loop
mov
mov
sarl
sbb
test
mov
out
pop
imul
int3
sbb
inc
andps
cmp
sub
fmuls
repnz
out
fcmovnu
rorl
push
stc
scas
mov
out
mov
je
mov
mov
shll
hlt
pop
adc
sbb
mov
mov
inc
movsb
call
addl
das
sbbb
popa
mov
ss
sbb
jle
into
xchg
mov
inc
outsl
jge
push
adc
jecxz
lea
imul
adc
mov
aaa
jno
sbb
dec
out
and
test
and
mov
lods
fistpll
fstl
int
xor
inc
aas
cmpsb
mov
jo
out
mov
les
iret
fsts
scas
lret
or
add
inc
stos
test
push
subl
mov
sbb
dec
int
jmp
fcomip
push
addb
cld
adc
inc
or
inc
mov
test
pushf
pop
fwait
and
pop
and
leave
dec
adc
cmpsb
dec
imul
sti
ficompl
gs
daa
sub
mov
es
xchg
push
jnp
mov
xlat
mov
mov
ja
xor
inc
push
call
bound
loop
outsl
ja
xor
jb
sub
scas
incb
fnstcw
dec
test
mov
push
lock
sub
push
mov
aaa
and
push
sub
push
cli
jmp
ja
jne
dec
test
fistpl
push
rcll
push
cltd
adc
mov
pop
in
pop
out
cmc
cmp
mov
enter
cwtl
lcall
aam
fwait
adc
cmpsl
sarb
push
and
cmp
and
int3
mov
xchg
lcall
outsl
pusha
cmp
je
push
repz
fists
dec
jge
je
cli
pushf
pop
sub
mov
pop
cmp
adc
push
push
sbb
ret
mov
pushf
mov
arpl
mov
mov
sub
cs
jno
mov
stc
test
sub
cmp
adc
or
adc
xchg
pushf
lds
fs
xchg
cmc
jne
lea
xchg
cmc
add
movsl
sarb
xchg
jp
std
lods
dec
add
out
jae
icebp
add
test
mov
aad
in
push
cmp
mov
xor
lret
loop
xchg
adc
sbb
and
arpl
movsb
bound
pop
daa
fcoml
test
cmp
insl
xor
mov
sub
inc
dec
or
fdivp
sbb
mov
orl
das
or
mov
sbb
lret
lret
or
add
mov
iret
and
leave
les
cld
mov
imul
xchg
push
mov
add
mov
mov
pop
into
or
int3
call
test
pop
outsl
lea
fistpl
in
or
pop
adc
js
fstl
ds
popf
push
xorb
lret
cmp
mov
movsb
rorb
int3
add
int
or
jb
sub
cmp
icebp
and
std
popf
push
or
test
movsl
mov
cmpsb
subb
xor
or
popa
cltd
ja
and
repnz
fs
aam
ficoml
push
stos
mov
loop
pop
cmpsl
sahf
movsl
xlat
test
jl
jmp
pusha
dec
movsb
das
nop
cmpsl
jnp
mov
fdivrp
jo
xor
insb
cli
inc
das
fidivrs
and
cmp
dec
das
fldenv
addr16
xchg
in
lods
push
loopne
pushl
push
fcomps
jge
into
bound
xlat
sub
push
cmp
pop
inc
das
mov
add
fldcw
inc
xchg
adc
push
mov
xor
inc
imul
mulb
xchg
cmp
cmp
sar
cld
into
stos
ret
dec
call
cmp
pop
addl
inc
fdivrs
aam
mov
jbe
mov
fbld
mov
fnstenv
lds
leave
dec
or
xchg
call
outsl
in
lods
fstps
jle
and
ss
mov
gs
lcall
aaa
dec
sub
jns
and
lret
pop
in
mov
pop
daa
cltd
adcl
mov
xlat
cmpsb
je
inc
int
bound
stos
aas
cmp
or
lcall
aad
jmp
ja
add
push
cvtpi2ps
dec
daa
jne
scas
cs
mov
cmp
gs
cmp
adc
sub
scas
adc
xchg
cmp
fyl2xp1
daa
push
inc
loope
fsts
xchg
inc
sbbl
mov
cmc
and
sarb
add
js
in
ljmpw
icebp
mov
and
push
mov
fimuls
mov
mov
xor
inc
sub
mov
xor
cld
adc
loope
das
pushl
add
scas
icebp
adc
sbbb
fldl
inc
dec
test
add
mov
and
add
jnp
mov
adc
pop
movq
sub
addb
push
popa
cs
pop
pushf
adc
jo
gs
jnp
sbb
addr16
sbb
mov
inc
push
cmpsb
addl
jl
or
pop
sub
stos
dec
mov
repnz
daa
xchg
xchg
inc
out
scas
or
scas
loopne
ret
test
pushfw
loop
pop
cmp
sti
rcrb
xor
cld
sbb
in
jmp
int
cmp
fisubl
pop
in
test
mov
cli
xor
pop
inc
jmp
push
jo
and
fisubs
cmc
and
sub
out
add
das
clc
das
mov
mov
push
mov
pop
imul
imul
aad
and
cmpsb
mov
inc
inc
jns
add
adc
in
les
into
jbe
xchg
jle
sub
rolb
in
lods
push
jb
xor
les
cmc
and
jecxz
dec
xchg
insl
es
mov
aaa
and
pmaddwd
inc
pop
data16
xchg
cli
jl
pop
sbb
xor
insl
icebp
cmp
mov
jns
and
mov
jmp
sarl
in
sti
and
outsb
inc
dec
pop
or
lods
push
cmp
js
movsl
cmp
data16
sub
sti
cmp
pop
or
pop
gs
test
clc
jmp
outsl
xor
mov
push
cltd
jmp
aaa
add
out
push
decl
shlb
inc
and
sub
jnp
lcall
int3
dec
fs
adcb
push
adc
mov
pop
push
xor
arpl
inc
loope
jg
out
xchg
jns
ss
lods
ret
ljmp
xor
ja
ret
or
cmp
movsb
data16
repnz
jmp
inc
aaa
cwtl
push
je
adc
pushl
xor
push
cmp
cli
push
test
incl
fnstsw
push
test
add
movl
jmp
test
jb
jmp
es
lahf
cmc
or
dec
addb
add
and
lahf
inc
push
cs
cli
lds
out
shrb
and
enter
loop
mov
dec
xor
dec
int
mov
stos
adc
outsl
xchg
cmc
divb
scas
jo
outsl
lret
sbb
shrl
js
aas
xlat
pop
jmp
mov
enter
in
sbbb
mov
cmp
dec
rep
adc
test
jbe
or
mov
in
outsl
add
stos
lcall
push
shl
addl
mov
inc
call
mov
ds
push
movsl
inc
shlb
push
xor
mov
negb
inc
or
mov
ljmp
jbe
xor
jnp
xchg
pop
mov
jno
scas
pop
sub
pushf
out
cmp
mov
lcall
mov
push
imulb
addr16
sahf
inc
add
mov
mov
call
insb
int
inc
popl
shrl
xor
push
stc
aad
xchg
add
dec
jge
or
or
jge
leave
into
inc
xchg
aam
push
dec
inc
pop
gs
stos
out
xchg
stos
fbld
es
int3
dec
cmp
sub
xchg
dec
mov
mov
jg
pop
mov
sti
jle,pn
in
push
pop
aas
or
loop
addb
lea
push
jl
jg
xchg
out
mov
insl
into
inc
mov
ret
cmp
sbb
inc
sbb
leave
fldcw
xchg
dec
out
sar
in
cltd
fisubrs
mov
sbb
add
ja
jecxz
sbb
mov
add
aaa
dec
rcrb
mov
jp
incl
mov
es
in
xchg
jnp
push
pop
mov
shll
push
and
cmp
or
mov
adc
pop
fbld
dec
and
cld
sub
cmpb
les
or
xlat
jmp
mov
and
ljmp
ljmp
xchg
pop
out
in
das
out
adc
push
ja
iret
inc
imul
lcall
jge
inc
adc
hlt
pop
jne
cltd
adc
popa
fbld
push
pop
ret
fcoml
vpcmpeqw
xor
repz
adc
dec
hlt
out
jbe
fwait
and
addb
inc
xor
pop
nop
inc
push
cmp
shll
ret
lahf
cmc
adc
arpl
ret
adc
mov
adc
fdivl
sbb
inc
test
scas
cmp
popf
loope
mov
cli
lods
lock
or
xorl
mov
cld
cs
jnp
or
cli
dec
pop
repnz
loopne
mov
test
and
mov
fdiv
pop
data16
mov
fisttpl
add
je
and
pusha
xchg
movsb
mov
xor
jb
sbb
jns
jg
test
rorl
in
cmpsb
test
popf
jl
je
arpl
mov
nop
cmp
add
repz
adc
mov
add
outsl
out
ret
scas
mov
cmc
icebp
call
lea
xlat
mov
fwait
xchg
in
pop
and
dec
outsl
leave
hlt
pop
and
sub
push
jg
nop
cmp
mov
mov
inc
ss
push
add
bound
add
cmp
dec
sub
jmp
jmp
jmp
sub
in
or
or
mov
mov
movsl
jae
sbb
inc
ds
jno
pop
lods
push
dec
or
jge
repnz
push
lock
jns
addr16
dec
movsb
xchg
and
popa
lods
ja
rclb
jp
and
pop
sbb
dec
sar
mov
mov
gs
aas
ljmp
sub
scas
mov
lods
imul
mov
testl
and
cwtl
leave
test
scas
dec
pop
test
pop
stos
dec
cwtl
dec
xchg
cli
dec
or
or
mov
or
xchg
mov
dec
rcl
cltd
loop
jge
xchg
outsl
dec
cwtl
cld
iret
pop
cs
xchg
sbb
or
lods
cmpsb
loope
shll
fistpl
dec
das
adc
push
scas
xor
ss
hlt
mov
aas
push
dec
dec
mov
sub
and
mov
movsl
imul
and
xchg
pop
cmp
push
loope
push
ss
push
shl
cmp
ret
ret
push
xchg
roll
lods
les
cmp
scas
das
and
insl
movsb
das
jle
ljmp
div
js
mov
icebp
jle
cmp
rcr
out
jmp
or
loope
pop
fldcw
xor
lret
inc
or
mov
andb
dec
mov
aas
pop
in
faddl
inc
stc
sbb
stos
rorb
movsb
pop
fdivs
and
orb
icebp
es
stos
lds
sub
xor
mov
out
add
rcrl
scas
push
sbb
out
dec
and
in
xor
imulb
pop
or
inc
sub
das
enter
int
pusha
xor
jmp
mov
shlb
daa
jnp
and
push
scas
jbe
mov
push
out
and
div
lcall
pop
int
or
mov
mov
icebp
cli
aad
bound
test
aaa
pop
es
shr
cmp
mov
adc
inc
xor
inc
dec
xchg
rcr
fists
mov
add
push
fs
xor
les
mov
and
xchg
in
int
ret
incb
sbb
test
fcoms
xor
sar
add
inc
pop
in
cmp
fisttpll
sbb
or
pop
test
fwait
push
mov
ja
imul
mov
lea
mov
cmp
dec
cltd
das
cltd
loope
imulb
inc
in
and
gs
sti
cmp
scas
jae
std
sub
xor
int
mov
hlt
sbb
sub
jmp
inc
pusha
and
inc
movsl
icebp
adc
adc
and
cmp
pusha
jne
xor
ds
popf
out
jg
add
insb
in
fwait
xchg
and
and
xlat
cwtl
fbstp
mov
stos
xchg
or
xlat
pop
mov
and
iret
mov
cmp
cmp
fwait
dec
push
adc
dec
sbbb
subb
fsub
push
push
test
cmp
mov
aam
pusha
test
adc
inc
cmpsb
add
ja
dec
incl
xchg
lea
mov
aam
int
sbb
xchg
ds
sub
dec
les
dec
adc
mov
xlat
loope
cmp
in
xchg
xlat
push
mov
sbb
jle
jbe
rorb
idivb
repnz
cltd
aad
xlat
clc
cmpsb
lea
push
aad
or
push
sbb
std
pop
mov
mov
in
daa
mov
flds
mov
xchg
out
sahf
jns
push
stos
cmpsb
xor
adc
stos
in
jnp
or
xchg
aad
xchg
jp
inc
sbb
cmp
adc
xor
push
stos
lds
inc
or
xor
dec
mov
repz
sbb
stc
push
dec
xor
decl
sbb
xor
arpl
and
cmp
adc
addb
mov
or
jns
in
dec
ret
js
mov
pushf
mov
push
add
inc
lret
subl
xor
fcoml
das
rolb
nop
divb
lock
insl
sbb
pop
sub
mov
cli
sbb
scas
push
jge
adc
shll
loop
cmp
cmp
les
out
insl
addb
xor
xchg
hlt
aad
nop
out
adc
in
fwait
test
arpl
inc
pop
jno
test
rcrb
xor
aam
adc
aas
push
daa
cmpb
xor
notb
das
sbb
pop
in
dec
mov
pop
jmp
enter
std
rep
fst
jp
cmp
popf
dec
movb
and
lods
imul
xchg
mov
fcoml
push
push
in
into
cli
mov
and
insb
sti
add
push
fcomip
ds
sbb
rcrl
dec
in
or
xchg
dec
and
popa
xor
movhlps
jo
std
inc
es
iret
inc
xor
jbe
fcom
popa
mov
jle
push
pop
jmp
cmp
xchg
loope
sbb
into
xchg
mov
jmp
inc
lret
add
pop
lods
sub
ja
push
or
lahf
inc
outsb
leave
rorb
loope
pop
push
mov
inc
mov
add
add
bound
xchg
jg
movsl
sbb
pop
add
dec
or
stos
mov
aaa
mov
cmp
push
enter
push
xlat
adc
mov
push
arpl
adc
call
and
in
adc
aas
frstor
xchg
mov
mov
incb
lea
mov
pop
mov
adc
xor
jbe
out
hlt
mov
and
sub
add
push
xchg
cltd
jg
fsubrl
vpaddusb
adc
ss
add
out
xchg
mov
xchg
cmp
popa
dec
dec
sub
into
sbb
popf
xorl
push
dec
cs
nop
sub
das
int3
insb
loop
mov
xchg
cmpsl
shll
fnsave
push
fnclex
ss
arpl
in
xchg
xchg
popf
dec
cmp
stos
test
test
cmc
pop
mov
xchg
imul
cli
in
and
jge
and
std
pop
int
push
cld
sub
lea
add
sub
popf
xchg
pop
push
fsts
aas
test
into
xor
add
jno
and
je
sbb
inc
enter
mov
pop
xor
jae
pop
pop
sbbb
pop
add
out
push
push
idiv
add
fidivs
stos
jp
shlb
repz
adc
mov
leave
je
out
and
xor
cmpsl
outsl
mov
stc
addb
push
cmpsl
popa
jae
fnstenv
add
mov
xor
sbb
and
mov
pop
jbe
rorl
cwtl
jl
xor
cltd
adc
xor
clc
bnd
in
inc
jp
ds
mov
adc
repz
test
ret
lcall
rcr
shlb
sahf
call
lahf
rcl
xor
mov
or
ret
xchg
cmovs
pop
jle
in
int3
or
mov
lods
xor
outsl
in
repnz
or
push
cmp
lahf
jmp
ret
add
mov
lret
call
add
dec
jno
sub
and
insb
pop
or
nop
stos
fwait
cld
jl
mov
psrld
aam
pop
mov
cmp
xor
xchg
jne
dec
sbb
aaa
jecxz
outsl
xchg
mov
and
mov
mov
stos
ljmp
sbb
add
xchg
push
adc
pop
mov
stos
aad
outsl
jo
testb
cmp
std
test
clc
mov
in
pop
lahf
mov
ret
mov
movsl
pop
clc
ret
adcl
mov
mov
out
loope
hlt
mov
daa
out
sbb
call
lods
mov
and
cwtl
hlt
pusha
mov
jne
push
out
leave
xor
dec
sahf
push
fucomi
clc
mov
ret
and
fisubrl
adc
jp
shrb
lret
add
inc
sub
lahf
xorb
xchg
sub
push
ds
and
mov
cmp
mov
add
cltd
jne
push
fsubrp
mov
shl
jmp
xchg
jns
inc
dec
mov
mov
fimull
sarl
add
push
inc
shll
shlb
fcoms
inc
xor
jecxz
push
dec
mov
sarb
mov
inc
xchg
icebp
or
imul
lahf
icebp
out
mov
std
bsr
sar
loopne,pn
jmp
inc
pushl
pushf
push
mov
xor
insb
xlat
push
cli
dec
inc
mov
enter
test
lods
pop
stc
mov
orb
pop
ret
les
jge
pop
sbb
data16
add
cmp
dec
ret
lds
imul
add
jle
int
mov
xchg
in
popf
add
daa
addr16
in
fcomp
mov
daa
sub
sub
xchg
cld
out
pushf
pop
jle
dec
stc
pop
and
in
pop
fsubrs
pop
and
cmp
push
adc
shl
xchg
push
in
dec
dec
sti
je
test
mov
push
push
jnp
adc
fmull
push
add
ja
xchg
aad
cmp
cs
jns
gs
xor
out
dec
cmp
or
test
jge
dec
sub
push
xor
aas
into
mov
adc
inc
inc
lock
pop
mov
lds
in
addr16
sbb
jae
popa
inc
in
cs
decb
in
push
lods
hlt
scas
push
bound
fldt
inc
xor
dec
jno
ret
cld
cmp
sbb
push
insb
ja
mov
mov
lods
push
jbe
aam
adc
daa
inc
insb
into
mov
cmp
mov
arpl
popa
cmc
or
fimuls
jp
xor
das
je
arpl
jbe
insb
jo
loop
in
xchg
cmp
xchg
xchg
push
mov
mov
jae
leave
imul
ficomps
or
or
xchg
sub
xor
jae
popf
lods
lods
pop
mov
and
cmp
pop
jg
pop
outsb
test
in
rcr
or
les
adc
sarb
stc
dec
xor
mov
inc
xor
cli
fsubs
xorl
js
sub
into
sub
aam
test
mov
out
popa
dec
ret
pop
dec
jg
clc
fiadds
and
and
inc
sub
lcall
add
jo
and
jle
sbb
fwait
out
jb
cld
cmp
in
aam
and
or
jmp
jmp
adc
daa
mov
gs
scas
mov
pop
call
inc
mov
mov
mov
push
jmp
cli
mov
insl
outsl
mov
sbb
mov
into
iret
in
jecxz
outsb
leave
cltd
sbb
adcb
mov
dec
js
xor
les
inc
inc
pop
std
cmp
add
lds
lret
push
and
or
cmc
les
lods
sbb
sbb
lods
xchg
inc
xor
data16
pop
inc
mov
pop
xor
popa
shl
mov
mov
inc
add
test
sbb
mov
push
imul
xchg
cmp
lods
pop
cmp
or
sub
add
and
roll
movsb
shll
lcall
fwait
adc
push
mov
int3
lods
cmp
fistps
adc
repnz
inc
fidivrl
mov
pop
or
lcall
adc
sub
pop
enter
xchg
mov
xor
fisttps
push
arpl
aad
repz
adc
sar
push
cld
pusha
sbb
add
sub
fsubrl
pop
or
lret
inc
pop
pop
out
push
out
mov
xchg
lcall
addr16
test
jns
and
xchg
loope
std
jnp
dec
mov
dec
aam
add
inc
jae
ret
inc
mov
in
repnz
test
dec
xchg
fidivs
inc
push
mov
push
inc
dec
aas
mov
imul
mov
dec
push
cltd
jmp
subb
sti
cmp
mov
icebp
outsb
xor
mov
push
xchg
daa
das
jmp
ret
fadds
cs
mov
xchg
outsb
lods
fsts
and
sub
jl
xor
bound
daa
mov
lock
jge
sbb
xchg
fistl
sbb
das
mov
in
cmpsl
add
insb
push
rcrl
push
mov
hlt
mov
ja
fs
clc
jmp
jp
mov
sub
jmp
enter
das
adc
mov
nop
fsts
mov
dec
or
loope
stos
sbb
jl
jb
pop
inc
pop
cld
enter
add
or
and
sbb
mov
int
add
cld
out
cmp
loope
cmp
or
fwait
mov
mov
dec
pop
jge
inc
cld
mov
scas
add
and
rclb
shll
cmp
int
xor
pop
ret
add
mov
jb
mov
jg
cmc
and
push
mov
fs
ret
mov
call
cmc
js
das
and
stos
sbb
mov
mov
iret
sub
sahf
fstps
add
sub
add
and
mov
ret
addl
enter
jae
mov
or
jg
scas
scas
aaa
mov
sbb
in
rcrl
pop
or
gs
jno
sarl
jb
repz
and
pop
jne
dec
inc
pop
mov
out
out
sbb
jle
jmp
ret
push
test
mov
outsb
icebp
cmp
push
popf
xor
xor
mov
or
scas
xchg
sbb
jno
push
cld
popa
inc
test
bound
pushf
mov
sarb
or
not
shrb
push
push
sti
imul
aam
lock
adcl
gs
lock
inc
addr16
xchg
sub
in
aas
inc
movsb
or
adc
mov
ja
mov
mov
xchg
in
cltd
scas
repz
sub
cmp
dec
leave
ret
lods
cmp
and
sub
pop
clc
mov
dec
xchg
push
mov
sub
sbb
sub
bound
push
stc
aas
cmp
cmp
leave
leave
cwtl
inc
mov
ffree
fisttpl
pop
cmpsl
or
sbb
inc
ret
test
imull
cmc
xlat
pop
ljmp
jbe
js
jg
push
pop
mov
inc
pop
mov
repz
xor
inc
jge
add
mov
jne
lea
pushf
fsubl
dec
jp
xchg
leave
daa
call
jecxz
mov
mov
mov
inc
hlt
dec
push
shl
mov
jecxz
sub
push
jl
daa
fs
mov
and
push
dec
cmpsb
pop
loop
out
cmpsb
xlat
sub
fisubrs
xchg
adc
xor
add
push
movl
sti
lret
xor
push
out
cltd
pop
jnp
fisttpl
cmp
cmc
and
stos
dec
lahf
pop
pop
rcll
ljmp
mov
push
push
out
aas
mov
rcrb
imul
xor
mov
hlt
inc
stc
dec
cmp
sbb
sbb
and
xchg
mov
sahf
mov
rcrl
xchg
sub
clc
mov
cmp
int
add
xchg
std
arpl
adc
push
ljmp
and
in
adc
xchg
mov
mov
jecxz
lea
lock
pop
loop
cmpsb
aas
mov
mov
vprotw
jle
loopne
jo
outsl
dec
and
and
jno
decb
rorl
push
scas
dec
aaa
inc
add
xor
pop
hlt
loop
stos
push
shlb
mov
aas
negb
mov
insb
out
les
xor
out
dec
lahf
les
xor
xor
adc
jne
stos
add
popa
jnp
pop
sub
pop
ret
out
fs
or
stos
xchg
lret
dec
inc
fdivrs
and
je
xlat
pop
pop
nop
sbb
lahf
pushf
jp
scas
push
push
mov
xchg
add
sti
sub
sahf
inc
gs
add
mov
les
jle
mov
mov
pop
push
rolb
jge
lock
or
idivl
add
mov
insl
xor
or
pop
xor
fsubs
and
popf
cld
add
jge
iret
jns
outsb
aam
mov
inc
inc
les
and
shrl
xchg
insb
jmp
test
mov
jnp
xor
xchg
xor
pushl
and
push
fiaddl
repnz
jl
mov
iret
pop
push
lret
add
repnz
pushl
sub
lret
pop
movsb
cmp
push
xorb
mov
les
cmp
ja
repz
cmpsl
cmpb
mov
test
add
ja
lods
mov
icebp
je
repz
test
insl
repnz
mov
pop
ss
pop
sarb
dec
je
aad
cld
ss
and
cmpsb
fs
fsub
sbbl
mov
inc
xchg
xor
bound
inc
ret
gs
sbb
or
lods
ret
cmpsb
push
lea
pusha
xchg
mov
fdivr
cld
cmpsb
mov
dec
cmpl
inc
fisubs
push
lret
add
test
outsb
and
xchg
adc
call
mov
push
call
imul
dec
stos
rep
out
icebp
cwtl
cmp
cmp
pop
int3
inc
dec
adc
mov
lods
xor
jno
cmova
xchg
icebp
repz
notl
push
out
sarl
repz
sub
add
sti
mov
xor
leave
scas
inc
aas
cmc
mov
cltd
stc
jno
xor
dec
es
add
push
stos
mov
cli
xchg
lock
mov
lcall
mov
sbb
inc
es
ss
pop
lret
dec
and
icebp
jg
sar
pushf
xchg
mov
add
sbbl
sbb
lock
repnz
and
ret
mov
cmpsb
call
cmp
mov
cmc
popa
cmp
push
std
push
clc
cmp
add
leave
notb
mov
push
jae
insl
mov
fiaddl
mov
dec
sbb
in
jp
push
leave
int3
and
aas
sti
dec
and
in
mov
aam
call
push
inc
gs
sub
gs
in
fmul
xchg
sbb
lret
ret
int
das
jno
inc
pop
div
lock
cltd
fucomp
je
mov
ljmp
lods
mov
mov
add
and
cmpsl
inc
inc
mov
in
enter
test
std
xchg
jns
jge
push
xchg
pop
jg
roll
pop
sbb
push
sbb
cmpb
pop
out
dec
add
or
int
push
push
lock
jmp
int3
cmp
dec
loope
push
out
rorb
pop
fstps
push
int3
data16
sbb
loope
pop
adc
movsl
sbb
repnz
fldl
push
neg
push
es
loopne
stos
mov
in
xchg
xor
sbb
mov
in
lret
mov
ljmp
and
mov
jmp
pushf
loopne
mov
sub
jmp
test
jecxz
cs
cmpl
and
cmpsb
testl
xor
shll
jmp
es
ret
push
scas
lods
cmp
ffree
push
mov
mov
or
out
and
push
xor
aas
mov
cltd
loopne
sahf
fsubrs
dec
mov
cmp
js
pushl
push
mov
sbb
mov
cmp
mov
push
adc
movsb
cmpsb
mov
imul
mulb
out
aam
imul
xchg
andl
fwait
leave
mov
idivb
dec
pop
rcll
pop
add
in
insl
or
mov
and
add
loop
xchg
std
fs
je
in
add
ret
jbe
mov
pushf
scas
leave
xchg
sarl
mov
call
hlt
mov
dec
push
mov
push
adc
dec
mov
fadd
cwtl
adc
dec
jbe
test
sub
jecxz
mov
repz
xchg
pushf
cmc
xor
mov
pop
inc
adc
jge
std
and
xor
je
repnz
add
jnp
fmull
and
je
cmpsl
dec
xchg
arpl
test
stc
popl
xchg
sub
stos
popf
std
add
roll
movsl
dec
in
sbb
push
pop
cmp
and
hlt
popf
mov
mov
cmp
mov
outsb
movsl
addl
rolb
sbb
adc
push
and
fldcw
jmp
lret
ja
rol
cmc
inc
lahf
and
push
push
jno
imull
add
pop
movsb
cltd
shlb
shrl
cmpsb
adc
jnp
loope
iret
jbe
lods
push
ret
lret
cmp
and
shr
jl
popl
das
out
adc
mov
sub
test
xchg
jno
decl
mov
mov
xchg
sbb
pushf
add
rorl
push
push
cwtl
nop
inc
mov
lret
rcrb
xor
mov
es
mov
ljmp
add
fwait
dec
mov
xchg
mov
jnp,pt
and
jbe
or
adcl
mov
jns
int3
jmp
repnz
leave
ret
les
cmp
lcall
std
push
jmp
mov
mov
fnstenv
ss
cmp
push
xchg
out
inc
sbb
xor
rclb
addl
ds
sub
pushf
add
mov
nop
xor
lret
xor
sub
fwait
or
inc
aas
sbbl
xchg
aaa
or
fmull
push
mov
push
repnz
mov
dec
adcl
adc
outsb
sub
push
sub
mov
stos
dec
jb
bound
add
mov
pushf
push
shlb
leave
adc
push
jmp
fisubs
sub
and
aaa
cmp
add
cmp
mov
sub
lcall
mov
jl
mov
dec
lret
enter
ljmp
push
and
push
xchg
lret
adc
mov
mov
xchg
xlat
sub
fcmovne
xchg
sub
and
pusha
insl
nop
mov
push
mov
jbe
mov
inc
inc
xchg
shll
mov
push
xor
ljmp
xor
mov
leave
je
int3
push
adc
and
xchg
fcoms
sub
fstpl
scas
lahf
hlt
sahf
hlt
push
dec
shl
xlat
xchg
jno
sub
arpl
pop
insb
cltd
les
push
xchg
xchg
gs
dec
mov
das
cmp
andl
add
ja
ss
aaa
jl,pt
dec
pushf
mov
je
xor
mov
hlt
sbb
cmpsl
out
lods
lods
or
inc
or
mov
adc
mov
iret
pop
mov
mov
popa
fisubrs
leave
mov
jecxz
push
lcall
push
jb
xor
and
xchg
push
sahf
scas
out
pop
in
inc
iret
out
insl
sub
lahf
push
add
push
jo
xor
popf
out
mov
pop
sahf
jo
push
lods
cmpsl
cmp
mov
test
and
xor
add
stos
sahf
dec
xor
or
orl
sahf
clc
in
dec
movsb
or
and
and
and
and
jmp
xor
push
dec
sbb
adc
mov
dec
push
mov
ja
pop
data16
xor
enter
and
or
imul
xor
jno
stos
inc
or
popa
movsb
imul
out
sbb
add
sbb
stos
jle
add
arpl
and
xchg
jl
jg
std
enter
adc
test
inc
dec
adc
mov
mov
lahf
mov
lds
cmp
and
jp
iret
add
sbb
pop
std
js
mov
dec
arpl
test
test
xor
inc
loope
mov
test
pop
jge
cmp
fildl
mov
popa
sub
sarb
ss
fnstcw
lret
xor
out
aaa
or
repz
mov
fildll
pop
jge
xchg
pop
jns
inc
mov
mov
push
add
pop
jno
push
fwait
xor
or
and
icebp
leave
imul
mov
in
dec
sub
sub
adc
call
mov
mov
push
and
pusha
sahf
dec
mov
int3
lds
lds
loopne
xchg
js
jp
sarb
push
fadds
ret
sbb
push
xor
dec
psrlw
or
pop
sbb
cld
mov
test
lret
cmp
ss
add
pop
aas
notl
popf
mov
sti
inc
jle
fnstenv
fnstenv
ja
leave
icebp
lock
push
dec
outsb
push
cltd
jp
int3
lret
cmp
out
ljmp
lret
push
or
fbstp
push
sarb
imul
std
icebp
cmp
add
pop
popa
cltd
insb
jmp
xchg
pop
testl
in
fldcw
rcrl
xor
out
scas
lds
dec
addr16
mov
test
stc
fdivrs
rorl
inc
or
add
mov
xor
jne
xor
popf
insl
sahf
or
bound
fnstenv
lcall
cltd
pushl
int
push
jmp
inc
rcrb
int3
movsl
cmp
fcoms
jb
pushf
cmc
sub
hlt
jmp
pop
data16
arpl
and
subb
clc
adc
out
dec
dec
sub
rol
push
push
mov
add
je
fistpl
push
ror
adc
outsl
imul
test
mov
pop
xor
sbb
pushf
add
inc
dec
cmc
lret
iret
popa
scas
push
insl
xor
ret
push
jns
cmp
aas
xor
fucomp
pop
and
push
arpl
or
push
ljmp
in
sub
mov
xor
scas
xchg
addr16
mov
in
xchg
cmp
mov
mov
mov
cmpsl
jp
dec
lock
cmp
mov
mov
mov
outsl
push
adc
cmp
xor
and
cli
stos
mov
and
mov
dec
xchg
and
jg
push
pop
jg
dec
aad
fidivs
pusha
jbe
adc
mov
mov
add
cmp
rcrb
in
lds
push
jb
mov
dec
add
cmp
or
mov
cmpsb
fstpt
xchg
jns
popa
sub
adc
sbb
inc
mov
mov
mov
inc
push
rcr
jnp
mov
adc
and
js
aam
jo
sbb
test
mov
stos
sbb
jae
pop
or
fbld
cltd
cmp
cmp
fdivr
xchg
fldcw
cli
fmull
cmc
push
das
test
cmpsl
out
shll
xor
rclb
inc
clc
sub
xor
inc
push
mov
lock
push
je
xor
enter
aas
loopne
jns
es
or
sbb
fmuls
sti
xchg
outsb
addr16
push
cmpsb
xchg
sub
aaa
cmc
mov
push
pop
xchg
test
add
ret
mov
cmp
sbb
mov
adc
push
xlat
notl
dec
mov
test
adcl
jns
and
es
sti
pop
leave
rcrb
sub
add
sub
leave
xchg
jno
movsb
lds
sub
cmc
mov
adcl
push
lock
mov
out
push
mov
inc
mov
aas
insl
jo
incl
adc
dec
sbb
cmp
aas
ret
pop
adc
insl
pop
jno
push
mov
stc
aas
lcall
push
sub
jnp
pop
mov
inc
jle
xchg
push
arpl
aas
push
sbb
out
lcall
jl
xorb
xlat
sbb
mov
lret
add
xchg
pop
aam
lds
adc
mov
rorb
repnz
incb
imul
pop
mov
int3
jecxz
add
roll
xorl
pop
repz
add
in
fists
fidivrl
clc
dec
ja
jge
push
pusha
imul
inc
movsb
cld
add
and
pop
sbb
out
push
ja
sub
lods
loope
inc
jns
mov
imul
pop
in
pop
lea
add
pop
xchg
test
cli
sub
push
add
or
pop
outsb
dec
lods
jbe
push
xor
inc
add
mov
ficomps
lcall
cmpsl
mov
loopne
jnp
mov
xchg
mov
or
aad
addb
push
std
push
inc
test
and
mov
and
push
and
xor
xchg
pop
enter
or
jb
dec
pushf
inc
dec
xchg
shl
pushf
pop
pusha
stos
add
dec
sahf
jbe
jne
test
lret
sbb
adc
rorl
inc
or
fistl
js
and
mov
mov
in
outsb
popf
aas
sbbb
cwtl
mov
and
mov
imul
ret
cli
xlat
insb
pop
adc
sbb
mov
mov
mov
lcall
cmp
cmp
push
aas
xchg
dec
cmp
sub
push
nop
inc
push
cmp
jns
or
lods
addr16
inc
xorl
add
pop
sub
incl
mov
push
and
les
mov
mov
mov
sub
mov
movsb
adc
iret
fadds
dec
adc
nop
mov
das
ljmp
pop
fmuls
lcall
mov
mov
in
sub
lods
dec
lahf
push
jg
jae
xorb
pusha
jmp
rol
daa
mov
iret
xchg
sub
test
and
and
mov
and
fisubl
cmp
lahf
mov
sbb
xor
rorb
fcomps
popf
jg
jo
mov
xchg
mov
icebp
leave
sbb
xchg
sbb
lods
add
push
xchg
jmp
fs
mov
jmp
jmp
sbb
mov
and
aaa
mov
push
fst
push
fsubrl
in
jp
out
mov
add
orb
mov
pop
xor
adc
popa
cs
fbld
and
adc
jge
or
mov
ret
lods
inc
push
and
add
std
adc
rol
push
pop
add
fcom
scas
aas
nop
push
outsl
xchg
inc
adc
push
mov
dec
cmpsl
lea
xor
xchg
divb
pop
dec
fmulp
add
cmpsb
adc
or
outsl
sbb
pop
adc
insl
sub
mov
addr16
push
roll
mov
daa
dec
repz
hlt
xchg
lea
or
mov
scas
sbb
xor
rol
pop
and
int3
sub
orb
xor
push
ret
mov
jne
dec
imul
insl
inc
or
jp
inc
push
inc
insb
jo
imul
aas
push
xor
adc
add
pop
repz
mov
push
push
std
rorl
sub
mov
cld
call
adc
orb
sbb
pop
cmpsl
scas
sub
and
inc
push
dec
xchg
jp
xchg
or
stos
outsb
in
lods
inc
sti
aad
arpl
lds
pop
xchg
ret
fstl
push
ffree
xchg
dec
xchg
cmpsb
mov
or
add
sbb
jp
clc
sbb
cltd
or
add
mov
push
movsb
clc
or
stos
mov
out
lcall
adc
rorl
lcall
jge
inc
cmpsb
mov
push
mov
idivb
stos
dec
out
popf
pusha
or
bound
clc
xchg
and
aam
outsb
cmp
push
mov
es
movsl
add
inc
fs
inc
push
je
add
lock
dec
sbb
sub
movsb
push
sbb
shlb
inc
sti
jne
lds
std
lds
adc
or
imul
cmp
and
stos
fimuls
mov
sub
pop
pop
mov
pop
sbb
mov
lcall
pop
lea
rorl
cmp
jb
adc
test
shlb
clc
nop
scas
sub
mov
mov
into
mov
lods
xor
insb
jl
xchg
cmp
and
pop
xor
sub
pop
push
ret
hlt
mov
adc
pop
or
in
fisubl
pop
mov
add
outsl
popa
divb
rcll
xchg
aaa
rcrl
sub
or
mov
out
stos
dec
bound
inc
inc
pop
dec
mov
cli
pop
mov
pop
xor
lds
xchg
push
adc
xchg
nop
xor
xor
add
cli
and
push
mov
xorb
add
loope
sbb
or
and
pusha
pop
pop
into
repz
popf
add
iret
push
mov
int
xor
ds
nop
cmp
mov
push
mov
pusha
insl
xor
fdivrs
repnz
cmc
fisttpl
pop
mov
xor
ljmp
mov
adc
push
ret
fwait
pop
add
in
pushf
add
cmp
pop
nop
jb
arpl
fldenv
hlt
movsl
outsb
repz
popa
call
loope
mov
jb
xor
ds
and
add
sarb
outsl
mov
adcl
lea
push
mov
data16
mov
int
inc
mov
mov
sub
lods
push
cmc
inc
scas
clc
mov
mov
out
mov
insb
or
inc
ljmp
push
es
inc
dec
add
dec
xchg
lods
xchg
jne
jg
mov
mov
cmpsl
gs
inc
push
push
subl
mov
sbb
xlat
das
dec
push
pop
cld
rcll
lcall
or
sahf
aas
fisttpll
scas
pop
sbb
inc
fnsave
xchg
push
adc
push
out
add
jb
jge
lahf
jl
xlat
xchg
loopne
mov
scas
lea
dec
movsb
xor
lret
push
insb
addr16
cli
inc
out
pop
xor
ret
int3
stc
inc
pop
in
sti
xlat
aas
pop
stc
je
ja
jae
xor
mov
and
in
sbb
xlat
fsubrs
ror
lahf
sbbl
mov
rolb
fists
mov
stos
push
std
fnstenv
loope
xchg
dec
adc
loope
lds
idiv
mov
mov
loopne
inc
push
subb
sub
mov
cmpsb
jmp
and
inc
inc
mov
and
cmp
sub
dec
outsl
xlat
jne
jle
push
sub
leave
call
push
sbb
xchg
addl
cmp
or
mov
pusha
es
sahf
xor
movsl
clc
inc
xor
je
mov
iret
jno
shll
sbb
mov
dec
or
movsb
hlt
jp
mov
test
out
sub
pop
movsl
xchg
adc
xchg
jmp
sub
andb
and
xchg
xlat
ja
arpl
in
dec
mov
pusha
aas
mov
lods
jmp
hlt
mov
sub
sub
mov
sub
mov
ljmp
adc
lea
or
sbb
sti
fmull
pop
cmp
les
pop
jge
ja
xchg
fbld
imul
andl
int3
das
xchg
xchg
xor
test
notb
xor
mov
sbb
xchg
mov
sub
xchg
add
ja
and
das
cmpsl
jg
pop
mov
notb
dec
roll
js
mov
roll
int
xchg
fldenv
cld
mov
out
andb
cmp
sahf
inc
add
pop
mov
enter
xlat
add
ficoml
sub
mov
test
aam
scas
movsb
mov
insb
int
leave
mov
inc
jae
out
xchg
or
push
mov
idivb
jg
jecxz
or
test
movl
jo
iret
dec
ja
repz
ficoms
lret
iret
imul
sti
loop
add
adc
cld
sbb
mov
dec
leave
mov
adc
scas
push
cs
mov
insb
addl
cmp
push
movsb
pop
mulb
cs
xor
sbb
enter
cltd
ljmp
ds
add
xor
jmp
jp
roll
dec
outsl
and
add
mov
xlat
jmp
xlat
addb
pop
scas
dec
ss
fcmovb
lahf
loope
jl
data16
mov
inc
pop
imul
inc
xchg
fdivrp
popf
les
rcrl
xor
movsl
or
push
pop
lods
je
loope
jb
pop
mov
inc
sbb
xlat
jecxz
lret
enter
adc
and
fwait
andl
xorb
or
sarb
mov
mov
stc
jmp
push
loope
jo
mov
sarb
lahf
adc
jg
inc
negl
mov
scas
insb
pop
or
push
push
mov
mov
jl
les
pop
in
jo
and
xchg
xchg
stc
mov
cmp
popa
lods
out
mov
pop
jae
inc
xorl
mov
mov
adc
rorl
push
int3
mov
add
fwait
and
inc
cmp
sbb
aad
push
cs
das
jo
js
push
leave
xor
fisttps
add
les
sub
mov
loop
out
rcrb
addr16
push
arpl
in
lahf
cltd
jl
loope
jae
push
lea
xor
xor
and
mov
dec
xchg
xorl
cmpsb
xchg
arpl
test
out
mov
and
lea
ret
call
xchg
cmpsb
into
aad
fimuls
xor
sub
loope
dec
imul
lods
pop
push
outsb
sti
mov
push
sbb
aam
xchg
cmp
push
xor
jge
repnz
js
arpl
jg
in
xor
int
outsl
lahf
cli
test
fs
out
aad
shlb
imul
test
add
dec
push
sub
iret
shrl
mov
cmp
sub
push
mov
inc
pop
test
xchg
jge
jne
and
inc
rol
mov
stc
jge
les
cmpsl
xchg
xor
cmp
or
insl
sarb
cltd
nop
or
fwait
pusha
cld
push
adc
mov
aas
and
rorb
bound
les
insb
aas
xchg
shlb
mov
test
dec
mov
and
test
jnp
ss
dec
repnz
adc
inc
jp
xchg
adcb
shr
mov
iret
popa
dec
lret
int3
movb
cmp
lods
jl
mov
sub
dec
ss
cmp
xchg
ljmp
push
xchg
push
imul
inc
mov
pop
and
push
mov
cwtl
mov
outsl
shl
sub
ds
mov
push
add
scas
jnp
push
mov
fs
pop
mov
test
xor
scas
mov
jg
or
mov
lods
or
jl
inc
sahf
fmuls
pop
enter
push
cmpb
int
pop
pop
jle
inc
or
idiv
xor
jg
cmc
mov
sahf
imul
pop
in
lahf
jno
push
ficomps
pop
mov
nop
push
sbb
dec
mov
sub
roll
push
push
pop
pop
and
xchg
movsb
enter
mov
xchg
in
pusha
mov
mov
mov
mov
into
lahf
inc
adc
lea
push
or
cmp
iret
insl
fstpl
sub
repz
lock
hlt
jae
movsl
loope
cmp
mov
mov
cmc
mov
lcall
mov
pop
insb
inc
shrb
hlt
xlat
sub
roll
repz
pop
pop
pop
and
in
pop
xchg
les
aas
jg
lds
call
or
and
cmp
xchg
and
push
mov
pop
jnp
jp
sub
and
pop
addb
and
in
jns
add
push
ljmp
insb
jns
jo
shlb
add
cli
pop
call
in
jmp
cwtl
hlt
sbb
jno
rcll
push
mov
push
test
xchg
jo
out
int3
push
cmc
mov
jo
movsb
js
lret
add
fadds
mov
loope
shlb
out
push
and
test
rcr
mov
xchg
sbb
mov
push
inc
mov
sbb
push
jb
cmp
jnp
int
inc
lahf
xor
xchg
mov
fcom
mov
push
adc
xorb
cs
aad
int
cmp
fwait
iret
xlat
mov
dec
cmp
pop
jnp
jne
leave
aas
cmpsl
stc
xorl
push
and
push
mov
xor
adc
xor
pop
lahf
scas
xchg
cmc
xor
daa
sbb
pop
je
stc
jmp
push
mov
or
adc
outsl
dec
jle
fmuls
and
mov
out
jo
add
iret
pushf
push
pop
aam
sbb
push
leave
mov
cs
js
aaa
or
mov
jo
aaa
push
cmp
cmpsl
sbb
mov
push
xlat
test
andl
jge
insl
adcb
imul
das
daa
pop
or
imul
jg
inc
pop
mov
aad
lret
fidivs
mov
dec
fsubl
cmp
pusha
mov
push
insb
insb
push
push
mov
lock
jl
rorb
sub
mov
mov
test
xor
and
mov
aaa
push
lds
sbb
inc
jge
scas
inc
loope
cmpsb
mov
sbb
lcall
add
xchg
scas
test
jl
inc
pop
push
mov
jno
xor
popa
inc
js
adc
mov
jl
stos
xor
push
sbbb
je
popa
pusha
pop
in
scas
mov
mov
mov
loope
je
cmpsb
or
scas
les
adc
xor
lahf
sub
push
cmpsb
jb
test
pop
cmp
and
bound
jge
push
adc
call
cmp
test
aad
stc
pop
ret
xchg
jne
icebp
in
call
push
fcoml
insb
xchg
and
push
sbb
dec
rorl
mov
inc
jle
sub
push
das
sub
jmp
pop
decl
popf
cmpsl
lea
pushf
xor
rcll
enter
xor
repnz
ljmp
mov
ljmp
je
je
lahf
shlb
nop
add
cmp
sarb
inc
dec
push
dec
cmpsl
aaa
inc
call
adc
sbb
mov
js
mov
into
jne
movsl
cmp
dec
push
mov
out
fadds
call
ja
and
ljmp
fs
pop
sar
and
lods
loop
mov
js
cltd
aad
or
stc
mov
jno
outsb
sbb
std
push
in
mov
fidivrs
iret
incb
cwtl
rclb
cmp
dec
enter
leave
dec
dec
addr16
sub
jg
call
pop
push
mov
loope
add
loop
pop
pop
aas
pop
inc
xor
in
data16
fcompl
jnp
loop
loop
rcrl
adc
xlat
xor
fnstsw
insl
stos
repnz
lcall
xlat
les
adc
push
push
test
push
or
xor
mov
jnp
sti
mov
xchg
pop
nop
and
aad
loopne
jo
cmpsl
leave
xchg
cs
jp
ja
dec
mov
sbb
push
ja
dec
push
iret
fwait
jg
and
lods
jns
repnz
mov
jp
clc
xlat
scas
in
cmpsl
fistl
push
adc
es
fistl
jmp
sub
jecxz
call
add
adc
ja
lea
pop
mov
jmp
ror
mov
add
rcrb
push
cmp
pop
sbb
xchg
out
pop
cmp
inc
fucomi
fwait
call
pop
add
scas
imul
xorl
fsubs
mov
pop
add
and
pop
cltd
sbb
push
js
xlat
scas
stc
inc
test
mov
mov
xchg
sub
sub
andl
pop
ret
or
outsl
fwait
mov
icebp
in
adc
mov
pop
stos
push
cmp
push
and
das
mov
rolb
push
lret
push
add
je
test
pop
push
push
lcall
insb
enter
xlat
ds
pop
dec
jp
jne
shll
and
iret
inc
popf
cwtl
pop
dec
adc
mov
mov
push
aam
inc
or
lea
jp
mov
sbb
mov
ja
pop
inc
scas
sbb
sub
sbb
ficoms
pop
ficoml
ret
pop
and
mov
out
push
pop
push
pop
loop
aam
fisttpll
add
lock
xchg
daa
lcall
repz
mov
cmp
fs
aad
xchg
repz
sbb
clc
int3
jge
dec
lods
leave
fidivrl
clc
adc
test
push
mov
cmc
dec
lret
aas
cmp
cli
inc
add
fcompl
sarl
ja
push
cltd
inc
inc
fstps
bnd
js
sbb
jb
pop
lds
loopne
cmp
iret
pop
icebp
ss
sub
xchg
add
mov
xlat
inc
pop
dec
jecxz
in
lods
add
sub
cmp
fdivs
xchg
mov
lret
sahf
xchg
ret
cmp
mov
lahf
mov
out
cmp
xorb
out
daa
roll
lods
jo
cli
mov
sbb
addr16
push
loope
ds
jle
das
adc
push
adc
jb
les
es
mov
jge
add
xor
mov
ds
mov
inc
dec
fidivl
cmp
mov
sbb
sarb
imul
xor
jne
out
outsl
in
vmovdqa
xchg
dec
or
fbstp
mov
xchg
cltd
pop
sub
ret
jo
jmp
in
je
dec
fistps
mov
mov
ja
cmp
push
or
pop
add
fstpl
dec
xchg
pop
jg
cmp
sahf
or
bound
mov
mov
sbb
ret
pop
roll
lods
les
cmp
adc
icebp
inc
xchg
pop
insl
aad
shll
push
lahf
lret
std
inc
jecxz
scas
and
push
inc
jmp
test
scas
cmp
pushf
roll
dec
fildll
into
fbld
cld
xchg
je
push
js
in
call
push
stc
cmp
dec
fsubp
repz
pop
push
jae
neg
inc
and
adcb
lahf
pop
out
push
fildll
fstpl
imul
xor
dec
insl
in
rcl
cwtl
cmp
xor
aaa
and
cmp
dec
ss
stos
or
out
fnclex
jnp
pop
movsb
leave
mov
mov
mov
fnstsw
fcoml
fmul
cmp
lcall
outsl
lahf
fildl
cmp
push
mov
test
in
mov
xor
imull
push
mov
fldz
addb
mov
jae
lret
adc
lods
sahf
fldt
and
shrb
fimuls
lods
aad
subl
cmp
test
xor
out
mov
int3
mov
and
lods
jbe
lods
sub
inc
lahf
inc
jae
dec
das
xlat
shlb
jmp
pop
arpl
in
xor
adc
sbb
clc
xchg
push
lahf
pop
mov
sbb
mov
repnz
ljmp
rcrl
loope
sbb
jp
jae
jno
addl
insl
add
dec
aam
bound
enter
xchg
sahf
push
lds
sbb
arpl
xor
cmp
movd
cwtl
ret
sbb
mov
jge
dec
xor
xor
xchg
add
pusha
xchg
or
mov
js
adc
lea
mov
xchg
fcompl
std
dec
lods
insb
out
lds
shrb
sub
ds
fwait
orb
jg
fistps
xlat
sahf
leave
aaa
imul
popa
jne
dec
sbbl
imul
dec
xrstors
jno
mov
jae
aam
rcr
sbb
jns
loope
push
mov
shlb
pop
divl
ja
stc
cmpsb
in
repz
mov
sbb
ljmp
nop
data16
xor
das
adcb
mov
mov
jp
lret
fwait
xchg
and
gs
out
jle
pop
sbb
jmp
xchg
jb
xor
mov
or
test
clc
cwtl
daa
or
iret
sbb
cmp
daa
fadds
push
data16
adc
std
dec
push
icebp
jae
push
dec
test
mov
sub
xchg
push
inc
int
in
cltd
add
hlt
jmp
xchg
dec
fwait
dec
out
add
inc
mov
fsubrl
pop
cmp
pop
pop
mov
mov
pushf
iret
inc
aad
pop
fwait
adc
or
push
rorb
iret
cmp
cli
cmp
mov
and
sub
cmp
icebp
shrb
lods
fildl
into
nop
mov
cmpsb
pop
rorl
int
iret
int3
into
into
push
or
scas
push
sub
pop
pop
dec
xor
pop
adc
pop
test
sub
inc
addr16
jmp
loop
subl
xor
test
cmp
ss
inc
les
mov
push
and
insl
sub
xchg
or
decl
arpl
mov
popf
orl
add
mov
insb
jae
xor
and
push
adc
imul
mov
scas
das
ret
test
daa
xchg
int
aas
stc
mov
cld
ret
pop
sbb
in
rcrl
sub
push
repnz
enter
in
fwait
lret
leave
xlat
lods
cld
mov
or
fiadds
pusha
aad
aaa
loopne
sbb
test
xchg
repz
test
pop
dec
test
pop
adc
out
popf
mov
popf
xchg
sub
dec
sbb
sub
and
pop
or
xchg
mov
movsb
out
dec
pop
ljmp
subb
addr16
push
and
xor
push
test
jns
imul
shl
pusha
mov
add
or
adc
int3
xor
adc
icebp
subl
inc
je
jb
lcall
xchg
insl
fldl
push
mov
jg
pop
out
mov
fidivl
mov
int
ja
jo
outsb
addl
ja
orb
daa
jb
sbb
mov
inc
ret
in
or
lds
cs
pushf
adc
pop
pushf
xchg
push
adcl
or
fbld
and
push
insl
int3
je
dec
and
xchg
sbb
and
cmp
jmp
sbb
pop
xchg
push
icebp
iret
popf
outsl
lock
arpl
movsb
cli
enter
and
xchg
cmpsl
aam
into
and
mov
sahf
push
roll
or
inc
aaa
and
push
pop
lcall
mov
add
push
mov
insb
xor
dec
andl
shrl
mov
call
cltd
cmp
inc
cmp
sahf
or
in
push
popa
sbb
jl
push
repz
or
imul
pop
in
xor
es
and
and
inc
lods
loopne
sub
mov
pop
bound
sarl
std
xchg
xor
inc
add
mov
arpl
push
dec
subb
or
jno
xchg
ds
jmp
loop
xor
or
jne
lock
scas
jge
aaa
pop
jp
and
mov
add
xor
add
xor
adc
notl
push
and
out
rcr
fiaddl
pop
xchg
loopne
cmpsb
jb
cmp
outsl
inc
jo
inc
mov
lcall
push
jle
in
mov
gs
sbb
dec
test
loope
repnz
push
lock
outsl
test
mov
jp
lds
mov
mov
cmp
sqrtps
outsl
and
scas
pop
insl
test
adc
rcrb
insb
aad
enter
or
lret
dec
scas
jno
fidivrs
xor
pop
xchg
stos
jbe
cmp
dec
adc
pop
mov
sub
cmp
xor
je
jns
cmpsl
shl
mov
pop
push
popf
lods
je
pop
pop
pop
inc
and
fistpl
inc
dec
add
in
ds
xor
lea
jmp
pop
movsl
jle
mov
jmp
inc
lock
scas
dec
sub
push
lods
mov
inc
pop
inc
sub
mov
and
or
push
in
push
aas
fsubl
mov
or
mov
sub
add
dec
pop
pop
adc
mov
imul
arpl
data16
push
xorb
cmc
push
mov
inc
loope
inc
jmp
mov
pop
gs
xchg
lods
dec
xchg
pop
jb
out
push
jns
push
xor
inc
ret
lret
push
in
cmpsl
push
adc
movsl
sbb
shrl
dec
lods
adc
js
stos
out
sub
push
mov
xchg
adcb
adc
sbb
and
lret
loopne
and
cmpsb
int
std
jp
cmp
loop
movsl
dec
or
xchg
dec
sub
js
sub
dec
push
jns
cmp
loopne
ficoml
and
cmp
imul
test
dec
gs
dec
dec
roll
push
sbb
sub
mov
fistpll
scas
out
scas
mov
push
or
jbe
imul
cmp
inc
outsl
xchg
xor
ja
pop
out
jg
xlat
repz
aaa
xor
dec
mov
push
or
pop
add
mov
lret
aam
xor
jno
and
and
ficoms
push
or
int
clc
mov
push
xchg
sub
xor
leave
mov
icebp
fcoms
pop
loop
dec
xchg
push
roll
negl
or
mov
je
test
ficompl
jg
ja
movhlps
dec
xlat
ss
jno
pop
fcomi
popf
xchg
xor
nop
cmp
imul
xchg
jae
dec
lods
cwtl
out
inc
sbb
loopnew
je
xchg
out
cmc
les
mov
push
mov
dec
cmp
cmp
jbe
lret
inc
fcmovb
nop
mov
mov
mov
xchg
mov
mov
mov
jns
inc
pushl
push
sti
mov
in
insb
jo
aaa
lods
std
out
dec
out
mov
xchg
ret
xchg
ds
pop
and
jl
loopne
in
lret
mov
stos
in
stos
enter
test
mov
mov
jecxz
xchg
enter
jge
leave
jb
dec
jmp
pop
push
dec
out
into
shrl
ret
pop
cmpsb
add
cwtl
lret
negb
mov
jl
add
shrb
sub
sub
inc
jg
daa
ja
adc
pushf
mov
ficoms
inc
xchg
imul
sub
scas
mov
mov
nop
mov
mov
push
adc
cmp
out
cmp
fisttpl
jbe
xchg
pop
cmpsl
fidivl
add
pop
pop
bound
enter
popf
sub
iret
ljmp
ljmp
pop
push
jae
xchg
ret
mov
cld
jae
movl
jg
jmp
xchg
or
pop
pop
sti
in
dec
xor
push
movsb
ja
cmp
lock
add
mov
cmp
inc
push
fwait
jecxz
inc
add
fdivs
push
dec
popf
xor
push
pop
idivb
and
sbb
mov
push
je
pop
cmp
mov
sbb
int
scas
mov
nop
jb
repnz
jo
aad
or
fucom
dec
jge
xchg
push
pop
stos
jmp
inc
dec
jns
stc
mov
loop
data16
pop
pop
cltd
adc
cmp
ljmp
push
fcmovu
or
dec
adc
mov
outsb
gs
sub
mov
fcoms
push
outsl
pop
pop
movsb
inc
mov
sub
push
popf
xchg
mov
or
bound
mov
lahf
leave
nop
dec
shr
and
inc
inc
mov
nop
xorb
jo
out
add
std
xor
lea
xchg
xchg
je
clc
xchg
sub
push
xchg
mov
dec
pop
cmp
cld
arpl
push
mov
add
inc
push
xor
or
or
add
stos
out
scas
leave
psubb
and
outsb
sbb
je
push
pusha
dec
mov
or
ret
enter
xchg
sbb
movsb
fs
push
icebp
cmp
add
daa
rcrl
mov
cwtl
mov
mov
lcall
xchg
lcall
mov
jmp
dec
inc
jno
test
inc
sub
push
sub
adc
sbb
mov
int
or
sub
movsl
ret
jecxz
adc
mov
daa
adc
mov
or
jno
push
nop
test
mov
dec
adc
pusha
repnz
push
les
xchg
mov
jne
lods
xchg
dec
xchg
xchg
popa
jbe
jmp
stos
leave
fstpl
or
pop
mov
mov
adc
repnz
mov
cmpsb
into
adc
scas
rclb
out
shrb
mov
xchg
sub
popa
call
data16
xchg
loop
in
lea
pop
gs
sbb
adc
bound
aas
cmp
jb
dec
mov
les
push
jnp,pn
jo
out
sub
mov
mov
aam
repz
cld
inc
cmp
dec
and
xchg
je
sub
fimull
ss
data16
gs
lods
stc
pushf
adc
xor
xlat
push
mov
cwtl
inc
or
fsubrs
pushf
jecxz
push
mov
xor
add
lahf
mov
call
adc
sbb
pop
cmpsb
enter
popa
in
fdiv
in
cmp
lahf
mov
mov
mov
shrb
push
cmp
in
int3
popl
cmc
ret
in
stc
insl
push
jp
in
xchg
ret
loopne
lcall
adc
lret
push
shl
imul
push
test
sbb
fdiv
pop
rcrl
xor
jl
and
mov
mov
sub
mov
jg
pusha
or
inc
xchg
and
or
jecxz
mov
cmp
test
xchg
dec
daa
and
xchg
ja
sub
daa
or
push
sub
push
lret
jge
mov
or
xchg
mov
sbb
sbbb
lds
jb
push
jnp
cmpb
es
xchg
sub
mov
xchg
adc
mov
pop
pop
jmp
push
or
dec
adc
cmp
and
outsl
shr
daa
icebp
mov
pop
aad
jg
aam
xlat
jg
adc
inc
jbe
ja
mov
test
repz
mov
jp
cmp
aas
pop
lea
adc
cld
dec
aam
fnstsw
pop
insb
adc
call
cmp
inc
outsl
aam
fdivs
in
jg
mov
mov
fcompl
orl
sbb
jns
dec
jns
mov
lcall
push
aad
sbb
sahf
add
dec
test
adc
repnz
pusha
sub
movsb
dec
mov
push
arpl
ret
dec
stc
lods
mov
loope
fsubs
or
mov
sub
jne
lods
call
ds
or
enter
cmp
mov
fadds
push
stc
xchg
and
or
imul
out
movsb
imulb
cmc
add
aaa
xchg
icebp
shll
push
iret
lahf
cmp
dec
es
adc
jne
sub
mulb
ds
pop
in
lock
push
xor
add
pop
negl
dec
xchg
int
imul
scas
or
or
pop
into
adc
mov
icebp
ljmp
insl
mov
cwtl
add
push
adcl
ss
jmp
jno
fstps
sub
dec
or
jg
lahf
dec
jmp
das
es
out
push
and
loopne
push
lock
shlb
call
lods
and
jnp
mov
mov
and
addr16
mov
mov
lds
popf
loope
xor
lods
pop
in
sub
loope
in
jp
nop
ds
stos
add
arpl
mov
inc
or
enter
xchg
stc
int3
enter
adc
adc
xlat
pop
imul
pusha
in
and
inc
jns
xlat
stos
pop
push
rolb
mov
mov
xor
in
xor
mov
jbe
movsl
pop
pop
sub
aam
icebp
cmp
pop
clc
lret
push
ja
pop
push
dec
jg
mov
mov
mov
sub
out
inc
test
mov
out
adc
aad
out
adc
xchg
mov
daa
adc
add
decb
xor
xchg
fistl
push
clc
testb
inc
mov
jge
push
mov
push
std
cwtl
stc
dec
mov
mov
push
pop
stc
data16
adc
cmp
mov
cmp
mov
imul
lret
andb
add
push
sti
pusha
sahf
andb
int3
icebp
cwtl
mov
lock
fs
bound
mov
sub
cmp
mov
xchg
repnz
or
cwtl
lods
ret
aam
cmp
jno
cmp
imul
stos
jbe
lods
cmp
xchg
fcom
mov
or
in
shll
mov
xchg
js
jb
dec
rcrb
adc
push
jae
add
sarb
jae
stos
mov
shrb
sbb
fs
jbe
notl
push
scas
sbb
ss
lods
mov
arpl
and
lock
or
pop
push
and
sbb
or
dec
out
xor
adc
addl
lahf
insb
inc
mov
xor
lock
bound
or
icebp
jne
jne
lret
cmp
xor
mov
inc
mov
xor
pop
push
and
push
push
push
dec
fisubl
pop
aam
ds
jp
cmp
stc
lods
mov
ret
nop
aas
gs
paddb
jne
fisubl
cmp
sbb
cmp
outsl
mov
push
jle
cmp
push
cmp
sub
lock
jl
mov
mov
sub
jg
xlat
nop
sub
jp
pop
ja
push
pop
pusha
gs
adc
jns
stos
insl
push
xchg
int
mov
inc
mov
mov
cmc
cltd
push
dec
fsub
fisubs
mov
xor
push
cmp
dec
fwait
jne
add
je
push
sti
pop
jmp
or
jno
inc
imul
sbb
inc
in
nop
xchg
sbb
push
dec
cmp
loop
cmp
scas
dec
ja
fistl
shlb
cmc
imul
lret
push
push
pop
xchg
pop
mov
das
sbb
xor
in
xlat
rcrl
mov
insl
popf
xchg
js
sub
sbb
dec
aad
mov
mov
jle
and
lods
repz
outsb
outsl
dec
pop
mov
lret
imul
push
or
cmp
jo
aam
jns
dec
rorl
out
out
int
and
or
xor
inc
or
dec
daa
sbb
push
out
mov
or
lds
pop
push
push
int3
push
mov
fidivl
leave
test
lods
out
fistl
sub
mov
jno
add
dec
ljmp
stos
mov
dec
shrl
push
test
stc
inc
std
in
jmp
nop
adc
dec
fsubl
sub
xchg
adc
mov
mov
mov
xchg
mov
fcmovbe
jg
daa
mov
jmp
xchg
sub
or
icebp
xchg
addl
mov
mov
jo
and
pop
mov
cltd
pop
jns
push
push
mov
mov
add
and
adc
shrb
imulb
ss
sbbl
in
mov
inc
les
jl
mov
jnp
lock
jo
mov
inc
adc
je
and
pop
fsub
xchg
jmp
adc
cmp
mov
jo
or
mov
test
mov
and
mov
inc
in
mov
inc
mov
sub
cmpsl
pop
push
fstp
jle
cltd
lret
pop
in
int3
and
into
insl
xchg
jae
push
cli
sbb
adc
adc
int
aam
fisttpl
fdivl
arpl
and
sbb
xchg
sbb
mov
cld
mov
aas
adc
loopne
fprem
cwtl
pop
mov
iret
adc
mov
iret
arpl
clc
cmc
hlt
in
imulb
push
inc
int
xorb
addl
sbb
aaa
gs
stos
lea
icebp
xchg
lret
fsubs
jbe
ret
insl
in
push
jnp
aam
je
cltd
jmp
mov
mov
adc
mov
and
inc
test
out
aaa
in
test
or
sub
in
cmp
lea
cwtl
imul
xchg
mov
inc
outsb
jno
call
fisubs
jg
pop
fsubs
hlt
jns
int
cld
dec
icebp
fs
push
clc
outsl
adc
jle
orb
outsl
mov
insl
out
inc
mov
loopne
push
jo
xchg
xor
mov
stos
test
or
pop
aaa
lea
clc
mov
lea
cmp
pop
push
pop
outsl
andnps
pop
xchg
pop
stc
lcall
adc
stc
sub
mov
adc
cmp
mov
ds
insb
fimuls
stos
cwtl
in
pop
inc
adc
add
cmp
subb
iret
push
pop
mov
sbb
jo
mov
pop
nop
insb
sub
int3
or
xchg
add
mov
repnz
inc
xchg
mov
add
in
xlat
jne
mov
adc
fstpt
sti
pushf
and
into
lahf
adc
fstp
fsubrs
mov
lock
and
jno
jbe
adcl
ljmp
lret
sbb
add
cmp
fistps
xchg
in
in
lcall
test
add
les
add
arpl
inc
cld
cmp
cs
adc
dec
into
insb
scas
push
test
mov
lahf
out
or
jecxz
add
xchg
loopne
dec
xor
mov
sbb
stos
jnp
jns
shrl
jbe
pop
lret
mov
gs
or
or
pop
inc
push
insb
cwtl
sbb
or
test
pop
int
mov
jge
jb
sub
push
and
imul
pop
pop
add
es
sub
inc
call
mov
and
add
cmpsb
jge
cltd
gs
push
fs
sarl
mov
jbe
and
sarl
leave
orb
inc
xchg
inc
pop
or
jnp
dec
rcrl
xor
mov
fadds
xor
mov
mov
or
xchg
sbb
mov
push
push
loope
sbb
mov
call
in
pusha
inc
mov
nop
in
rcr
pop
enter
testb
jl
dec
jno
adc
lods
jecxz
stc
sbb
inc
jmp
xor
mov
xchg
fcoms
mov
das
fsubrp
ja
xor
and
loop
and
aam
subl
rorl
push
jle
and
mov
adc
mov
repz
sbb
popf
pop
test
mov
add
mov
pusha
xor
mov
scas
mov
sbb
fcomps
sub
push
dec
dec
rcr
adc
push
pop
cmc
loopne
adc
jns
es
adcl
and
in
jg
push
sbb
pop
gs
daa
push
bndstx
aad
popf
nop
dec
push
inc
repz
xor
push
mov
in
jp
ljmp
and
push
add
shll
cmp
sub
jo
int3
inc
adc
pop
sub
mov
mov
daa
das
and
stc
jb
stc
jle
pop
aam
and
lds
clc
int3
pop
gs
popa
pop
cmovg
int3
lret
dec
push
lock
xor
orb
out
or
addr16
outsl
adc
and
mov
out
sti
xor
aas
nop
mov
enter
dec
mov
mov
cmpsb
lods
mov
cmp
jge
fwait
inc
scas
xchg
lods
push
mov
stc
hlt
mov
jecxz
push
jp
int
cld
loopne
push
jp
dec
mov
cwtl
jmp
sub
add
xor
mov
into
mov
sub
mov
out
sub
xorl
pop
lods
enter
adc
ret
xor
icebp
or
add
push
xchg
adc
popf
mov
test
in
pop
pop
shlb
adcl
cmp
test
mov
adc
xor
int3
mov
dec
in
test
add
mov
mulb
in
lret
sub
stos
dec
fstps
inc
inc
cltd
test
std
push
dec
push
mov
xor
iret
ret
call
jp
jne
xor
rorb
les
mov
adc
stos
lods
cmp
ret
pop
xor
lar
sub
bound
xchg
fnstcw
in
inc
dec
into
rorb
in
into
cmp
mov
shl
repnz
mov
and
xchg
mov
jbe
jnp
and
popf
outsb
adc
loop
and
in
bound
cli
sub
xchg
push
jmp
cmp
outsl
xor
and
sbb
cmp
xchg
fwait
sahf
mov
pushf
mov
enter
subb
push
imul
mov
js
cli
cltd
push
dec
dec
xchg
out
adc
pop
addb
mov
add
mov
mov
push
add
push
mov
fucom
cmp
jne
movsb
add
xchg
lahf
rol
loop
and
and
jb
xor
sbb
call
sti
push
jp
ret
dec
push
and
inc
les
hlt
lret
lahf
stos
insl
or
xchg
je
inc
push
add
lea
lahf
enter
cmc
or
mov
shl
es
in
insb
leave
data16
outsl
mov
xor
imul
cmp
andb
dec
mov
enter
push
sbb
pop
lea
or
fisubrl
mov
cltd
and
test
push
dec
fbstp
sub
in
aad
test
arpl
ficoms
dec
push
mov
loope
imulb
lahf
xor
cmpsl
clc
and
in
ret
jb
push
sbb
insb
mov
xor
sarb
aas
adc
lret
in
add
xchg
dec
inc
sub
add
add
movsl
data16
mov
lcall
lods
cmpsb
dec
jno
dec
push
rolb
mov
xchg
stos
push
cmpsb
xor
fidivl
push
lods
test
dec
jl
mov
lods
jge
ret
mov
add
mov
fdivs
addr16
jl
int
jo
mov
stos
xor
pop
or
and
ficompl
jo
and
pop
add
faddl
jg
in
xchg
cwtl
aam
ljmp
jae
es
push
sbb
sbbl
add
adc
call
pop
cwtl
mov
xchg
push
dec
pop
aad
lods
adc
mov
dec
sub
dec
aaa
data16
inc
std
sbb
mov
rcrl
adc
push
pop
inc
sub
clc
sub
pop
xor
or
into
pop
cmovg
mov
mov
cmpb
dec
test
or
jle
push
shlb
repz
addb
in
jo
xchg
and
sahf
sbb
push
mov
das
xchg
adc
adc
mov
add
les
mov
pusha
les
cmp
adc
adc
cmpsb
mov
in
inc
mov
cmp
jbe
xlat
pop
insb
movsb
fldl
sbb
xchg
cwtl
mov
jnp
xor
jge
push
inc
bound
xchg
test
dec
pusha
out
inc
aas
sbb
and
lahf
mov
mov
ret
jnp
jo
sbb
sub
push
aad
pop
arpl
popa
cmp
lock
or
adc
jb
fsubr
and
mov
lods
cld
out
fstp
lds
and
push
pop
rol
js
add
sbb
xor
jnp
sbb
mov
loopne
mov
mov
mov
out
ljmp
fbstp
and
insb
push
in
sbb
and
add
sub
pop
cmp
sbb
mov
out
repnz
scas
cmpsl
lret
fdivrs
adc
incb
ret
cmp
inc
jne
cmc
mov
cmpsl
test
loop
sub
sbb
int3
push
js
pop
sub
jno
xchg
sbb
jg
pop
inc
ja
fwait
mov
cltd
ret
cmp
popa
xchg
into
cmpb
es
test
pushl
pop
or
adc
mov
aad
xchg
clc
rcrb
jo
mov
fbld
or
lea
jno
cwtl
sbb
mov
rep
insl
add
mov
xchg
pushf
fisubl
fcoml
push
scas
movsb
pop
jo
outsl
jno
push
pop
popa
xchg
fcomip
dec
jns
imul
push
lcall
jno
shrb
mov
test
xor
mov
js
std
stc
int3
jne
push
or
pop
fxam
dec
pop
enter
pop
dec
xchg
lret
insb
ja
mov
xchg
sbb
sub
adc
gs
fiaddl
jl
jle
cmp
imul
jg
scas
adc
pop
push
inc
clc
inc
sbb
out
movsl
lcall
cmc
cld
out
push
in
lret
xor
xor
sub
inc
xchg
push
and
lods
pop
call
outsl
inc
repnz
ja
bound
jg
or
xchg
mov
cmp
ja
add
sub
jmp
test
sti
add
mov
cltd
fistl
cmp
popa
fisubs
and
push
fcoml
fcoms
pop
xor
fidivs
mov
add
sarb
inc
sbb
push
into
movq
jge
cmp
fdivl
pop
loopne
cmp
mov
jbe
pop
dec
dec
movsl
mov
pop
push
sbb
cmc
cmp
mov
push
out
stos
shrb
dec
mov
mov
bound
and
aam
call
mov
int3
adc
mov
sub
push
or
inc
cli
dec
in
push
inc
adc
inc
pop
cmp
cltd
mov
insb
push
pusha
or
ljmp
or
js
push
in
stos
ljmp
and
sbb
or
add
nop
ficoms
sbb
fistpll
xchg
mov
imul
call
leave
fists
inc
mov
lahf
pop
sbb
mov
push
decl
daa
cmc
push
enter
ret
aad
and
imul
or
repz
jg
out
popa
in
outsb
mov
icebp
fdiv
xor
stc
xchg
fdivrl
outsb
sub
xor
mov
push
adc
pushf
xchg
imul
push
cld
and
hlt
jo
scas
mov
cmp
xchg
mov
pop
je
inc
sbb
inc
in
sub
inc
subl
xor
push
mov
bound
inc
cs
pop
in
push
cli
mov
and
leave
pop
lods
push
test
pop
fstps
cmp
xchg
jle
xchg
dec
dec
pop
jg
mov
sbb
mov
nop
imull
lea
mov
clc
sbb
mov
repz
sbb
mov
bound
pop
fnstcw
aad
incb
ds
jg
pop
cltd
mov
imul
jg
or
mov
jmp
pop
es
add
bound
ret
or
cmpsl
mov
xlat
lods
cmp
add
out
lahf
adc
sub
enter
mov
pushf
push
test
insb
add
popa
int
shrb
xchg
xorl
popf
sbb
cmpsl
add
mov
daa
jo
inc
scas
ds
stos
cmpsb
mov
mov
loopne
shl
sbb
mov
ss
bound
cmp
mov
mov
fdiv
pop
mov
adc
movsl
dec
loopne
movl
push
test
sbb
shll
popf
xchg
sbb
mov
fwait
lret
xchg
lret
jp
push
dec
fsubrl
cmp
repz
insb
cs
push
ficomps
nop
ds
cltd
es
stc
jnp
mov
lret
daa
shlb
mov
cmp
test
addl
outsb
test
xchg
insl
cld
test
shrl
scas
iret
xchg
cmpb
add
icebp
loopne
imul
sti
mov
push
int3
cmp
test
push
mov
sbb
ficompl
jge
mov
fimuls
adc
cmp
andb
mov
mov
inc
pop
stos
cmpsl
bound
aam
xor
insl
xor
xchg
scas
sub
inc
and
sbb
xorb
daa
sbb
aaa
aaa
test
inc
shl
ret
and
push
ror
xor
fcomip
repz
mov
ja
test
out
or
mov
insb
lods
pop
sbb
inc
insb
mov
scas
fwait
adc
loope
dec
mov
jg
ja
or
cld
pop
mov
lods
xor
jmp
push
sahf
icebp
ss
ret
or
inc
sbb
cmpsl
adc
cli
lods
cmpsl
rorl
insl
adc
mov
stos
mov
mov
pop
mov
or
fiadds
je
inc
inc
and
outsb
pushf
loopne
data16
mov
icebp
into
xchg
adc
out
scas
adc
loope
mov
imul
rorb
adc
roll
sbb
push
mov
mov
xor
dec
test
pop
add
mov
arpl
gs
pop
popa
adc
out
cmp
es
inc
xchg
orb
sub
mov
mov
xchg
jns
dec
inc
mov
fs
mov
sub
aaa
push
fs
cmp
xchg
jo
sub
insb
mov
repz
and
push
push
pop
pop
mov
inc
les
pop
xor
movsl
xor
lahf
adc
mov
scas
lods
das
jge
mov
pop
fiaddl
add
xchg
lahf
xchg
xchg
loopne
mov
cmp
adc
mov
sub
jnp
jmp
roll
add
mov
mov
or
shrl
lock
or
dec
push
popf
out
stos
fistl
sbb
mov
mov
leave
lret
inc
out
movsl
xor
ljmp
daa
xor
and
lods
pop
lods
mov
xorb
sbb
jns
sbb
xor
mov
cmp
les
loopne
loopne
push
dec
lret
dec
test
jbe
lcall
enter
sub
dec
add
andb
mov
dec
rorl
cs
hlt
mov
inc
pop
jbe
cmp
lods
leave
fidivs
jo
xor
and
cld
pop
mov
mov
sahf
lea
movsb
cli
mov
xorb
sub
mov
adc
push
xchg
neg
inc
popf
inc
rcll
and
jl
rol
sbb
add
fldt
and
mov
aaa
repz
or
mov
jmp
add
ret
adc
loop
push
mov
mov
jmp
aas
sbbb
cmp
cmpsb
lretw
sbb
sub
adc
movsl
out
jmp
into
fnsave
mov
sbb
mov
fsubl
sbb
or
push
mov
aad
int
jmp
je
sbb
inc
mov
les
mov
jb
mov
insb
cmp
sub
mov
jle
in
out
sub
cltd
popf
nop
adc
mov
xor
ja
loop
cmpsl
or
cmp
mov
outsb
loop
mov
add
sbb
cwtl
inc
fists
fcoms
mov
inc
sub
mov
test
sub
movsb
pop
and
mov
mov
cmc
cmp
fsubrl
int
sbb
int3
xchg
and
lcall
push
jae
add
mov
aad
nop
out
xor
push
mov
and
mov
nop
push
pop
into
or
mov
out
stos
int
and
mov
mov
call
lds
jns
push
sarl
div
jae
jp
dec
filds
xor
bound
cli
and
pop
sti
add
adc
mov
insb
mov
push
lret
stc
fcmovbe
xor
mov
lcall
dec
xor
repnz
ljmp
lret
pop
subl
lods
inc
loop
rcr
icebp
into
cmp
shrl
enter
push
sbbl
mov
andl
stos
xor
cmp
std
cwtl
push
popf
inc
scas
mov
jnp
pushf
jbe
fcomps
pop
lea
adc
dec
sbb
popf
add
lods
cmp
ljmp
xor
jp
mov
dec
iret
dec
bound
int
mov
mov
shrl
jne
int3
enter
pusha
cmp
xchg
aam
dec
frstor
testl
add
aad
cmpsb
movsb
lods
dec
mov
pop
lret
addr16
pop
stos
mov
outsb
call
jb
push
and
add
pop
add
inc
int
mov
xchg
sub
fimuls
popa
mov
fdivl
jb
inc
icebp
push
sbb
out
das
je
add
mov
xlat
test
add
rcll
fstps
inc
push
sub
add
xor
into
in
xor
mov
pop
jp
enter
out
add
mov
es
loop
movsb
bound
jns
and
in
and
cmp
fst
rorb
mov
mov
out
aam
inc
push
inc
mov
jae
adc
mov
dec
repz
test
cmp
ljmp
sbb
sar
jge
shll
mov
popa
pop
add
sbb
and
loope
sbb
sbb
pop
ljmp
add
xchg
fwait
out
rcl
jecxz
push
imul
dec
mov
or
mov
adc
xor
and
jp
pop
mov
sub
orl
lock
je
insb
mov
cmc
leave
stc
dec
scas
testl
or
xchg
bnd
and
enter
and
mov
push
xchg
jb
add
cld
in
lock
mov
mov
sarb
in
xchg
ret
mov
fnstenv
xchg
mov
pop
add
daa
stos
shll
gs
sti
roll
add
movsb
lret
movsb
leave
cmp
imul
sarl
mov
sti
movb
int
pop
fbld
xlat
aad
mov
pop
ret
bound
das
cmp
popa
xchg
mov
push
sub
popa
enter
cmp
xchg
xor
inc
ja
push
repnz
clc
outsl
fdivrs
out
out
in
je
cmp
mov
int3
call
mov
push
jge
pop
stos
int
ds
loop
dec
xor
pop
mov
xor
in
sbb
xor
jnp
leave
mov
in
pop
inc
add
pop
lds
sbb
roll
pop
jl
lea
push
je
test
out
push
outsl
imul
dec
mov
outsl
pop
adc
xor
faddl
cwtl
jmp
jl
cmp
cmp
xor
xchg
jecxz
mov
dec
sbb
mov
daa
and
fildl
pushf
mov
pop
adc
scas
std
mov
jbe
out
or
cli
imul
add
iret
sbb
cltd
aaa
jmp
outsb
jp
mov
mov
cmp
in
sbb
sub
mov
test
mov
pop
arpl
mov
lret
dec
aad
aam
shl
or
add
and
xor
in
into
test
and
shlb
fisubrl
adc
jns
lods
jb
pop
cmc
inc
dec
call
adc
bound
loopne
test
and
popf
rcrb
in
jl
mov
test
cmp
mov
xor
lcall
jmp
jo
pop
or
inc
push
lock
es
pop
sarl
and
mov
ljmp
xchg
add
mov
mov
es
cmp
lcall
lcall
cmpsb
sub
cmpsl
mov
fs
je
mov
pop
in
add
cmpsb
mov
sbb
add
scas
hlt
add
sub
add
outsl
pop
fimull
mov
push
out
sub
sub
xchg
lahf
mov
and
mov
subb
xchg
popa
mov
jns
mov
rclb
lret
pop
mov
nop
lahf
js
adc
bound
cmp
xor
outsl
or
add
scas
push
sub
mov
shlb
dec
xchg
sbb
mov
adc
xchg
nop
dec
sbb
adc
pop
je
and
mov
ret
add
rcr
pop
xor
dec
roll
leave
sbb
pop
arpl
in
cmp
dec
ljmp
cltd
shlb
mov
mov
dec
cmp
cmc
jns
inc
in
test
mov
jno
fwait
in
xor
mov
test
jo
nop
mov
bound
jge
movsl
and
xlat
div
mov
add
cmp
add
jg
ret
ret
pop
push
mov
cmp
inc
or
movl
imul
popa
ret
cwtl
pop
lods
into
outsb
loopne
insl
fisttps
cmp
sub
pop
add
or
pushf
jnp
fstl
inc
lahf
into
jp
stos
mov
cwtl
mov
inc
mov
les
xor
cmp
add
fs
xor
or
xchg
insl
xlat
sbb
lods
push
notb
xor
xchg
mov
xor
fldcw
push
add
inc
dec
push
int3
movsl
jbe
pop
mov
add
arpl
inc
mov
test
insb
inc
ljmp
jns
cmp
dec
adc
dec
in
stos
push
jb
std
test
cmpsl
shrb
dec
mov
and
insb
adc
shll
pop
mov
jmp
pop
adc
sbb
add
xor
pop
nop
mov
xchg
paddw
or
mov
scas
sbb
test
sbb
xor
cld
mov
test
out
idiv
and
adc
insl
out
jg
popl
jg
mov
std
sub
inc
xor
mov
adc
loope
pop
das
sbb
jns
sub
mov
cli
jl
inc
cmp
mov
inc
or
jbe
or
shl
add
ds
push
outsb
loop
xor
push
pop
imulb
out
add
nop
arpl
call
cltd
fisubrl
jmp
cmp
sarb
mov
shrd
loope
add
xor
mov
sub
daa
rcr
mov
mov
cs
cmp
cmp
cli
into
jbe
pop
pop
decl
and
cmpb
xchg
jbe
clc
lods
jns
mov
sbb
mov
lea
iret
xchg
gs
aaa
cwtl
mov
outsl
inc
mov
sahf
fdivp
push
stos
xor
add
mov
lahf
inc
xchg
mov
inc
jl
out
adc
cmpsb
jge
dec
insl
in
cmp
inc
das
add
inc
xor
pusha
cwtl
dec
sub
jns
stos
jg
lds
mov
pop
sbb
je
sarl
loopne
movsl
mov
cmp
dec
xor
push
lods
addr16
xor
in
pushf
xor
push
ja
xor
xchg
data16
int3
popf
xlat
xor
jno
bound
sarb
lahf
testb
push
mov
nop
inc
or
scas
aad
pop
mov
dec
push
out
jo
into
or
testl
stc
xor
sub
and
in
loop
or
icebp
js
xor
jge
jnp
xchg
cmp
std
cmpb
adc
cwtl
dec
jno
adc
movsl
mov
xchg
fisubrs
test
cltd
inc
fcomps
js
aad
and
insl
xlat
ret
mov
or
out
xchg
adc
inc
xchg
inc
int3
adc
in
mov
inc
cs
mov
aad
push
rclb
xchg
xchg
aam
mov
add
test
jmp
or
repnz
or
jmp
outsl
pop
mov
std
stos
jno
inc
hlt
sub
addr16
jno
xorl
out
xchg
mov
xchg
nop
stc
sbb
popl
xor
mov
mov
add
mov
insb
enter
xor
add
adc
add
jmp
cmp
pop
mov
and
cmp
mov
jg
pop
arpl
inc
jne
and
add
nop
imul
lds
cmp
into
ret
mov
pop
inc
insl
sbb
inc
je
xchg
sti
mov
xchg
pop
lahf
adc
fisubs
cli
sti
jne
dec
out
sbb
pop
mov
aam
xor
xchg
xchg
fdivs
mov
dec
pusha
aaa
jecxz
lahf
dec
in
cmp
push
adcb
cmp
xchg
sub
test
dec
into
fisttps
das
mov
insl
cmp
sahf
roll
sbbl
ljmp
outsl
jp
jb
rolb
push
inc
sahf
xchg
inc
je
scas
or
pop
mov
imul
push
or
std
adc
out
add
mov
sbb
leave
mov
mov
popa
inc
es
mov
sub
js
addb
mov
out
scas
data16
inc
xchg
mov
jp
and
scas
jmp
cmc
int3
xchg
mov
pop
arpl
cs
pop
aas
iret
jmp
mov
mov
mov
push
lods
ret
popa
iret
mov
and
pop
dec
bound
out
mov
enter
shll
mov
scas
xchg
arpl
stc
jno
aad
cmp
cmc
pop
call
mov
xor
sub
and
jne
test
cmp
into
icebp
mov
in
aad
int3
ja
inc
shl
out
add
enter
ss
ljmp
mov
ljmp
ds
out
nop
mov
xor
xchg
insl
notb
in
and
sbb
lret
push
xor
scas
cmp
mov
ss
loopne
adc
mov
repz
cmpsl
xor
pop
cmp
das
fisubrs
dec
push
sub
pop
cmc
in
xchg
hlt
sbb
data16
xchg
scas
adc
lods
das
push
fwait
fnsave
add
mov
mov
jns
je
adc
icebp
pop
mov
add
adc
or
lds
inc
sbb
aaa
ss
inc
dec
fiaddl
lods
roll
mov
dec
rcll
push
popa
je
scas
aad
out
jo
addr16
out
pop
and
mov
xchg
cmp
mulb
jle
js
jl
jg
dec
scas
jecxz
call
movsl
popf
test
add
rclb
jl
fs
sub
xor
dec
mov
xchg
into
test
lea
sbb
sub
xor
inc
in
inc
mov
in
stos
movsb
pusha
in
fisubs
stc
sub
xor
pop
jbe
mov
out
jns
pop
in
push
mov
fsub
mov
mov
movsb
scas
mov
out
xchg
pop
xor
pusha
loopne
mov
cwtl
insb
sub
dec
out
aaa
dec
pop
shlb
inc
push
gs
dec
mov
mov
sarl
lahf
xchg
or
mov
lret
inc
xor
cmp
xor
inc
movsb
fwait
mov
shrl
sub
push
in
scas
lahf
add
stc
out
mov
popa
xchg
dec
sbb
mov
push
jle
xor
jmp
icebp
push
call
xchg
xor
cmp
out
stc
inc
insb
int3
sti
call
sbb
and
les
push
jle
bound
jb
fcoml
insl
jns
cltd
pop
lret
rol
or
popf
pop
ljmp
cs
mov
add
push
xor
mov
cwtl
mov
fdivrl
adc
test
push
pop
loope
xchg
lea
bound
cld
adc
scas
or
fmul
into
lods
xorl
push
mov
mov
out
sub
xchg
addl
push
into
mov
aam
jge
and
sti
fdivrs
add
pop
dec
mov
nop
cmp
push
test
mov
push
mov
xchg
or
jg
add
mov
repnz
mov
idivl
fs
cli
subb
std
and
xchg
insl
sub
push
sub
rclb
ret
sti
adc
aam
cli
fistps
out
lock
jmp
sbb
xchg
daa
rcrb
sub
negl
ja
addr16
loopne
or
mov
sub
or
push
clc
test
jecxz
fdivl
lds
jl
xchg
dec
sarb
fbld
and
xor
mov
das
dec
push
test
testb
xor
aad
iret
sub
cmpsb
bnd
inc
jge
in
push
cmpsb
cmp
in
cmp
imul
fwait
aas
mov
inc
dec
jl
out
push
mov
repnz
and
push
mov
add
sub
std
mov
push
les
stc
sub
xchg
push
pop
push
cmp
xchg
out
lcall
das
popf
loopne
xchg
scas
jno
mov
push
je
or
mov
xchg
out
shrb
fcmovnb
push
pop
mov
push
test
into
mov
mov
mov
mov
std
popf
push
pop
cmp
jg
pop
ja
adc
adc
jle
int
adc
xor
lret
jo
in
ret
dec
mov
xor
hlt
xchg
idivl
enter
mov
mov
mov
or
jmp
jle
add
mov
inc
and
xchg
cli
mov
repnz
xor
jle
ljmp
and
cmp
pop
insl
and
dec
mov
xchg
and
movsl
leave
hlt
and
adcl
mov
stos
mov
add
add
cltd
fwait
movsb
push
div
rorb
jl
cmpsl
inc
notb
xchg
pop
fstpt
outsl
enter
incl
fwait
lcall
adc
outsl
dec
xchg
scas
xlat
inc
shrb
push
stos
outsb
call
lret
xchg
push
sub
sub
lcall
jge
xor
shl
push
mov
sbb
cmpsl
sbb
adc
sub
enter
or
adc
addr16
add
ljmp
cmp
jge
out
adc
xchg
dec
mov
or
pop
pop
popa
test
adc
sbb
xor
gs
mov
add
call
xchg
lret
mov
paddq
jnp
enter
addr16
mov
fisubl
scas
and
add
or
jne
cmpsl
test
mov
dec
int3
mov
xorl
dec
lret
fcompl
pop
int
push
sbb
test
push
test
dec
mov
iret
sbb
fwait
mov
leave
outsl
cmp
cltd
adc
nop
les
loop
push
xor
scas
mov
or
rcl
jmp
adc
sub
enter
pop
aaa
movl
movsb
aam
jns
add
leave
mov
cwtl
cmpxchg
jmp
mov
in
push
dec
or
stos
arpl
cmp
clc
xor
jge
loope
jge
dec
add
lret
out
rcl
repz
insb
daa
and
pop
subl
xchg
leave
iret
aas
jae
sbbl
mov
inc
addr16
add
or
sub
call
inc
mov
xchg
ja
mov
dec
cs
xchg
pop
xchg
pushf
fildl
aad
mov
loop
and
xchg
insl
mov
add
mov
dec
or
xchg
fsubl
imul
jnp
movsb
adc
inc
xor
fs
out
pop
shlb
call
cli
pop
xchg
insb
scas
lret
arpl
repz
sub
sti
pop
mov
stos
in
mov
jmp
stos
jmp
sub
add
pop
add
xor
jno
outsb
push
xor
sub
mov
cltd
sbb
sbbb
icebp
ljmp
ffreep
xor
stc
out
int
repnz
pop
pop
aas
movsb
xor
and
out
jns
jne
jge
mov
dec
add
loop
shlb
pop
mov
lcall
cmp
jns
push
das
aaa
fisubrs
int
lods
mov
cs
sbbl
es
jb
cmp
jne
and
into
push
mov
pop
movb
aam
xchg
mov
mov
dec
out
jbe
dec
xchg
cmpsb
cltd
loop
cld
in
inc
fadds
jle
cmpb
in
and
mov
or
mov
push
fs
imul
inc
jb
dec
and
push
sub
int
xorl
xchg
sbb
in
std
pop
pop
jle
add
push
fwait
inc
shlb
push
push
jne
gs
jp
add
or
dec
imul
xchg
rep
pusha
or
ror
cmp
or
std
out
aam
loopne
sbbl
jmp
mov
adcl
shll
jo
aas
int
call
loopne
pop
aad
sarb
test
in
std
dec
data16
jg
cmp
dec
mov
mov
lea
repz
jp
into
inc
inc
cld
push
lcall
fmull
push
testl
cmp
inc
pop
and
push
jge
mov
outsl
mov
out
push
mov
pop
xchg
or
sub
xor
aaa
lahf
or
or
icebp
sahf
stos
test
leave
jge
mov
push
xor
out
push
jl
jb
call
jne
mov
jle
sub
mov
adc
mov
and
mov
call
loopne
cmpsb
mov
loopne
call
xchg
cmp
stc
xchg
fwait
int3
mov
sub
mov
and
push
xchg
push
cmp
lods
xor
sbb
push
aam
call
js
sub
lcall
jge
push
xor
out
in
mov
or
cs
sub
adc
and
arpl
pop
testl
insl
lods
es
lods
popl
xchg
jae
xchg
xor
dec
lret
push
push
pop
popf
loop
aam
mov
es
push
mov
pop
dec
std
lods
loop
jg
mov
xchg
mov
cltd
mov
adc
mov
dec
shll
fcomi
arpl
sub
in
inc
in
je
jb
ss
cmp
pop
pop
je
jne
and
add
sbb
add
pushf
shl
mov
xchg
cmp
inc
lcall
push
rorl
adc
loopne
push
jne
mov
dec
out
insb
xchg
adc
sub
out
rcrb
into
test
cmp
and
shrb
movsl
inc
fs
cwtl
xchg
sbb
inc
inc
cmp
cmpsl
sar
js
into
mov
ret
repnz
fmuls
pop
inc
cmp
loope
and
test
jns
cmp
ficoms
and
cld
shr
mov
pop
roll
or
cmpsl
cwtl
mov
dec
xor
jno
and
adc
dec
inc
xor
in
movsb
outsl
pop
push
inc
xor
jae
cmpsl
mov
test
fwait
push
sub
and
adc
push
in
mov
and
dec
xor
and
xchg
push
lahf
rorl
leave
pop
call
and
cmpsb
scas
sbb
outsb
jb
fisttps
incb
arpl
sub
addb
xchg
out
jg
fs
stos
sub
shl
sub
dec
adc
lret
addl
outsl
lds
jmp
pop
cmc
ret
jae
cmp
shll
push
dec
into
insl
cmpsb
push
repnz
sbb
push
subb
jnp
and
inc
add
pusha
es
pop
dec
pop
icebp
dec
and
mov
fdiv
cld
pop
sbb
fnstcw
scas
lea
outsb
pop
sub
movsb
imul
sti
inc
inc
jg
mov
jns
in
cmp
gs
mulb
mov
xchg
imul
xrelease
test
mov
cmp
mov
popa
rolb
push
push
std
std
jge
xlat
insb
jbe
shl
dec
pop
les
jnp
jb
fs
sti
adc
scas
imul
xchg
cld
inc
inc
es
pusha
leave
and
loopne
mov
jecxz
jp
sbb
mov
xchg
movsb
jge
in
andl
xchg
test
hlt
repz
xchg
push
popf
inc
dec
je
cmp
pop
cmp
in
sti
cmp
ret
or
sahf
dec
mov
sbb
pop
icebp
mov
dec
inc
or
jae
pusha
ret
inc
jmp
lock
clc
shrb
js
and
pop
je
cmpsl
insl
insb
jno
sbb
xchg
dec
sbb
xor
in
in
jp
fisttps
jo
cmp
ljmp
in
ret
inc
mov
enter
lds
fsubrs
sub
rol
fiadds
push
sbb
js
in
xchg
pop
xlat
in
xchg
push
out
jle
add
int
lcall
mov
arpl
fsubrs
test
sub
ds
sub
sbbb
push
fisubs
push
sbb
add
xchg
push
mov
mov
add
or
mov
jno
inc
divl
jp
push
dec
adc
jno
add
pusha
jno
xchg
lret
movsl
scas
les
ret
xlat
add
sub
mov
jnp
mov
arpl
scas
lods
into
push
and
xchg
lods
aas
dec
inc
mov
out
ret
addr16
inc
jb
mov
rcrb
scas
xlat
ds
popf
fdivl
xchg
pop
xchg
pop
aas
test
and
cmp
sbb
push
mov
xor
inc
call
pop
lods
adc
sub
movl
cs
jge
adc
xor
jmp
fwait
add
shrb
dec
inc
pop
cs
sbb
or
jge
adc
hlt
inc
fldt
ds
and
dec
add
mov
adc
or
decb
cmp
movsl
in
jae
cli
sbb
in
inc
out
add
rcrb
pop
add
lock
pop
dec
add
mov
add
xlat
sbb
imul
popf
movsb
lcall
mov
lock
dec
adc
inc
and
fdivrl
inc
mov
popa
and
rorl
sub
mov
gs
hlt
jae
lret
je
push
rcrl
popf
popf
pop
pop
xchg
sbb
xor
stos
out
out
dec
push
fmuls
push
inc
data16
hlt
or
loop
mov
push
mov
das
cld
or
cltd
add
movsb
jmp
cmp
push
cmpsl
std
pusha
mov
mov
out
pop
xor
push
jl
and
int
mov
sbb
xlat
mov
cld
arpl
pop
jae
out
ds
or
and
movsl
inc
push
xchg
and
in
pop
int
xlat
fld
mov
scas
mov
push
imul
inc
aas
push
cs
fisubrl
lret
aaa
cli
add
or
sbb
inc
xchg
mov
dec
cmp
sub
pop
loope
int3
std
pushf
cs
push
stc
push
inc
fcoml
scas
push
xor
or
out
sbb
hlt
xchg
adc
movsl
test
rolb
loopne
lret
xchg
nop
ret
loope
daa
das
ds
jno
adc
cs
push
jp
sbb
cmp
aad
enter
sti
sbbb
call
add
test
sub
imul
stc
clc
xchg
pop
stc
sub
in
add
out
enter
outsl
insl
test
xchg
xchg
jae
dec
mov
adcl
sbb
aas
jae
inc
or
xor
fwait
inc
adc
mov
mov
push
pop
and
mov
mov
lods
stos
mov
fs
pushw
push
mov
lahf
push
sub
outsl
inc
fwait
jbe
inc
mov
pop
sub
pop
mov
insl
call
loope
and
pop
mov
cmpl
cwtl
sub
pop
fidivrl
xchg
setp
mov
movsb
int
out
pop
mov
int
jge
sub
out
cld
loope
clc
or
xchg
add
int3
fidivrs
repz
mov
les
xor
ja
daa
ret
push
mov
dec
jne
and
frstor
push
add
fiaddl
dec
scas
mov
or
cmp
sub
outsl
inc
cmp
leave
cmp
xor
sbb
ret
cmp
fidivl
das
cmp
pop
push
or
or
pop
xor
cmp
xor
add
mov
xor
jge
movsl
cltd
fsts
lcall
sub
mov
jle
movsl
push
mov
xchg
add
xor
inc
jg
mov
inc
push
cld
dec
adc
mov
push
cmpsl
data16
mov
es
outsl
add
ds
mov
movsl
xlat
xchg
adc
shll
jne
and
and
push
pop
and
mov
push
bound
jbe
jp
stc
dec
push
adc
jo
in
xchg
xchg
dec
int
mov
test
mov
inc
fistps
mov
leave
jno
enter
and
out
movsb
stos
insl
push
fdivs
jge
fdivrs
in
push
xchg
test
dec
mov
xor
insb
aaa
gs
pop
sub
or
inc
cli
mov
dec
cld
mov
jle
pushf
sti
pop
cmp
mov
or
adcb
pushf
sbb
int3
ja
movsl
fsts
test
inc
mov
dec
pop
lods
or
mov
sbb
jno
xchg
gs
data16
mov
fs
mov
add
or
mov
jae
pop
add
adc
int
popa
int
xchg
xchg
jecxz
and
dec
repz
xchg
arpl
and
jnp
pop
pop
cmp
inc
shll
icebp
fs
mov
leave
mov
or
cwtl
jmp
data16
pop
mov
ljmp
jne
adc
ss
std
and
xchg
fnstcw
add
mov
sti
aaa
inc
jl
push
stos
mov
cmpsl
dec
add
std
add
outsl
aas
and
ret
fistpll
inc
mov
imul
shll
add
stos
shrb
or
aad
dec
mov
aaa
fldenv
and
in
int
stos
fidivrs
jae
jecxz
mov
out
xchg
imul
and
in
jge
dec
jle
aas
andl
sarb
pushl
pop
aad
and
nop
mov
pop
in
xchg
fwait
addl
adcb
rorl
je
ret
cs
sti
mov
aad
push
push
dec
xchg
imul
push
dec
pusha
dec
movsb
dec
pop
inc
js
shll
jle
jb,pn
pop
data16
andb
jbe
pop
xchg
cmpsb
pop
sub
out
jl
and
lret
xchg
inc
lods
shl
adc
loopne
jg
out
mov
fcoml
jbe
push
jecxz
ss
dec
adc
loope
xor
sub
mov
xor
lret
pop
ucomiss
jmp
clc
jle
cltd
jo
in
adc
mov
js
cmp
daa
inc
cmpb
xor
fstpl
jb
lret
mov
cmpsl
je
adc
fisubl
inc
or
scas
rcl
fisubrl
xchg
jb
push
loop
push
aaa
test
in
mov
cli
push
adc
or
outsb
push
or
cmpl
jg
push
pop
xlat
jg
mov
in
push
aas
in
add
jp
lcall
outsl
pop
std
mov
add
cmpl
faddl
mov
and
fiadds
xchg
push
fidivrl
pop
jl
xchg
xor
push
sarl
mov
cmp
stos
mov
jne
jnp
xor
xor
pop
in
pop
sbb
jg
repnz
inc
jne
aaa
cmp
inc
addr16
push
or
mov
divb
stos
jge
arpl
lock
cli
out
mov
ffree
xchg
mov
pop
dec
popf
repz
popa
adc
cmpl
pop
pop
inc
push
pushf
stos
mov
outsl
or
and
aas
mov
scas
or
ret
xor
test
retw
sbb
out
xchg
aas
jmp
sub
pop
in
shlb
test
sbb
push
push
mov
bound
dec
and
jnp
loope
mov
in
cmpb
bound
stos
adc
cli
mov
jno
inc
mov
flds
into
pop
daa
leave
pop
sbb
jl
push
and
jg
sbb
incl
fcompl
add
das
or
cltd
mov
shll
sub
mov
loopne
out
sub
hlt
iret
dec
lea
sub
mov
insb
xor
and
ret
inc
mov
in
mov
test
jge
jae
cmpb
sub
jl
lahf
sub
sub
arpl
dec
and
loop
loope
push
mov
adc
and
aam
and
in
fldenv
mov
insl
push
stc
insl
jno
out
sbb
inc
pop
dec
xchg
jns
xor
xor
jno
stos
or
addr16
or
lea
jge
inc
adc
mov
lds
pop
insl
insl
push
fdivrs
cmpsb
jg
xor
imul
add
call
add
int3
xchg
in
push
cmp
sub
cmp
jecxz
pop
bound
jns
mov
push
imul
dec
xor
testb
cltd
xchg
pop
dec
inc
jns
leave
js
and
enter
adc
push
repnz
scas
scas
imul
aaa
mov
out
stc
leave
and
jns
lahf
jns
enter
dec
scas
cmpb
cmpsb
sbb
scas
mov
aaa
cmp
repnz
shlb
loopne
sub
lods
out
add
shrb
dec
rcr
sub
sti
sbb
xchg
repz
sbb
call
pop
mov
jns
push
sti
mov
xchg
mul
out
xorl
lods
sahf
gs
stos
inc
mov
inc
mov
sub
repnz
in
cltd
sub
into
test
pop
imul
or
pusha
addl
sarb
call
inc
add
push
cmp
lret
flds
jmp
int
sub
cltd
push
jae
jno
and
pop
jne
rcll
pop
adc
xchg
iret
in
dec
push
and
lret
enter
add
popf
js
xlat
hlt
push
mov
inc
sarb
les
cmp
cltd
or
xor
xor
mov
jecxz
repz
bound
pushf
adc
cmp
jno
into
and
pop
xor
arpl
sub
xor
fwait
dec
insb
adc
fiadds
add
jns
aaa
cltd
pop
mov
cmp
or
xchg
int3
xchg
and
sub
inc
popl
loope
pop
push
xchg
test
xchg
out
inc
dec
data16
sbb
jmp
mov
mov
ret
dec
outsb
jo
pop
out
push
push
bound
and
fcmovnu
pop
xchg
fsubr
add
sub
xor
dec
sub
push
movsb
inc
lret
push
imul
mov
add
dec
sbb
movsb
push
idivb
mov
rorb
lret
xor
jnp
mov
xor
int3
aas
loop
hlt
xor
adc
insl
adc
pop
pop
vmread
stos
adcl
stos
lock
sbbb
sbb
int3
dec
ror
push
push
inc
jnp
int3
movsl
fdivrs
stos
in
pop
mov
sahf
mov
aad
outsb
ret
das
pop
inc
mov
sbb
mov
hlt
stos
xorb
mov
aaa
xor
std
mov
sub
cmp
cmc
int3
jecxz
in
sti
je
jl
in
add
gs
push
mov
arpl
mov
test
xchg
push
sbb
push
mov
data16
movsl
inc
sbb
fldl
push
sbb
add
and
lock
add
xchg
xchg
cmpsb
in
xchg
jns
jae
pop
push
xor
dec
and
int3
das
dec
inc
add
inc
aaa
adc
sahf
lahf
dec
imul
fst
orl
or
and
movd
lock
rorb
pop
fimull
in
sub
incl
fldcw
lock
incb
push
or
push
push
and
push
push
sbb
push
gs
and
jae
and
mov
mull
imul
sbb
jl
pop
jge
mov
add
push
js
cmpsb
repz
xchg
lret
pusha
out
sub
adc
scas
xchg
adc
imul
dec
aad
push
inc
andl
push
cmp
or
je
lret
cwtl
shl
sub
fcoms
mov
mov
scas
dec
push
repnz
int3
icebp
fcmovnbe
add
mov
pop
out
add
lret
mov
idivb
in
mov
scas
ljmp
fcompl
lea
pop
mov
pop
pop
outsl
shl
imul
movsb
dec
xor
int
mov
xchg
pusha
daa
cmpsb
sbb
push
insl
push
mov
test
pusha
sbb
pop
and
pop
fisubrl
sub
mov
in
enter
fndisi(8087
stos
inc
iret
cmp
jmp
scas
add
or
pop
pop
push
in
ljmp
sbb
mov
out
add
pop
cs
push
push
pop
aas
negb
xor
jge
cld
insb
sub
insl
inc
loopne
inc
jl
cmp
jno
cmpsl
pushw
xchg
lea
imul
add
xor
lods
lret
jmp
mov
adcb
in
iret
push
jge
mov
jo
dec
sub
cmp
dec
fcoml
in
jae
notb
out
loop
inc
stos
cmp
cmp
enter
cmc
mov
lods
inc
outsl
adc
insb
xchg
jne
dec
pop
inc
in
pop
ljmp
loopne
push
nop
clc
in
push
cmc
pop
dec
cmp
or
sbb
ret
rorl
xchg
fadd
in
xor
imul
inc
inc
pusha
int
jle
jmp
arpl
mov
pop
mov
adc
inc
mov
fsubrs
pop
adc
dec
inc
mov
jbe
movsb
les
and
divl
out
clc
roll
xchg
mov
xchg
es
and
jg
stc
hlt
fadds
aad
test
nop
sbb
adc
xchg
test
mov
and
jae
xlat
loop
sti
inc
push
cmp
inc
and
mov
data16
cmp
sub
xchg
mov
outsb
pop
sbb
cmp
mov
xchg
inc
sub
icebp
sub
iret
cmp
leave
int3
cmp
sub
pop
mov
nop
lahf
imul
test
jp
lods
xchg
icebp
scas
rcrb
jae
std
mov
mov
inc
sbbl
inc
call
inc
mov
mov
pop
in
xchg
int
repnz
add
sbb
or
imul
mov
mov
cmp
iret
inc
sub
int
sub
loop
mov
andl
sahf
repz
std
pop
sub
ss
pop
inc
adc
jge
xchg
out
push
iret
out
int
rolb
rolb
mov
ror
add
jl
loopne
rclb
mov
movsl
inc
and
addb
mov
xchg
add
std
leave
sbb
pop
cmp
ljmp
rcll
inc
cmp
dec
fs
lret
inc
adc
push
out
jb
cs
fs
push
and
loop
xorb
dec
xchg
fdiv
push
mov
into
ljmp
mov
cmp
mov
mov
sbb
test
in
xchg
mov
jns
dec
daa
xchg
mov
jo
xchg
xor
add
mov
call
xchg
and
sbb
lcall
pop
imul
jne
icebp
adcl
test
and
jo
daa
mov
xor
inc
pop
int
push
mov
stc
sub
cs
cmp
add
aas
lods
xor
and
inc
adc
gs
mov
mov
popf
mov
popf
daa
jecxz
pop
sbb
in
inc
push
push
idivb
xchg
popf
scas
out
lea
int3
jg
adc
adc
jge
lds
cmc
inc
sbbb
add
pop
pop
inc
sub
xor
aas
xchg
mov
test
push
mov
icebp
jno
mov
loope
aaa
cmpsl
cs
adc
clc
push
ret
fsts
pop
jo
dec
push
push
dec
sbb
add
mov
adc
or
mov
lods
out
fneni(8087
pop
jae
push
popa
adc
jle
jae
jbe,pt
repnz
and
or
pusha
inc
sbb
loop
inc
test
cwtl
xchg
adc
pusha
out
out
adc
xchg
aam
imul
insl
dec
jecxz
cmp
cmpsb
out
pop
mov
sbb
cwtl
xchg
jg
inc
pop
notb
imul
scas
ds
push
scas
repnz
rolb
dec
push
or
out
sub
outsl
mov
ret
nop
or
jb
add
dec
cs
ret
data16
xlat
jle
and
mov
mov
lds
aaa
mov
hlt
les
jl
lock
mov
inc
dec
mov
es
push
xchg
aaa
adc
fs
mov
movsb
jno
add
dec
icebp
scas
push
mov
cli
mov
mov
xchg
lcall
jg
jo
int3
nop
push
pusha
cmp
pop
shl
das
hlt
push
stc
leave
pusha
push
in
hlt
jp
mov
stos
xor
enter
sbb
lods
sbb
stos
lcall
mov
je
xor
outsb
add
or
pop
jmp
clc
nop
int3
pop
mov
out
lret
leave
sbb
in
mov
bound
or
nop
adc
or
or
xor
cmp
repz
cwtl
test
sub
test
sahf
aad
loope
sbb
sbb
jle
or
dec
fnstsw
mov
add
mov
jbe
test
jge
notl
xor
in
and
jno
pop
sbb
pop
push
push
pop
aad
and
ret
xlat
mov
add
hlt
jnp
das
jb
adcl
push
sbb
mov
lcall
icebp
pop
mov
in
bnd
in
jmp
and
xchg
push
mov
lret
and
jbe
mov
jl
push
sub
in
lock
outsb
sbb
mov
and
sbb
psubsb
adc
out
inc
sub
inc
std
xchg
mov
test
test
std
pop
ret
ja
fwait
add
aas
sub
dec
cmp
xchg
loop
xor
cmp
or
cmpl
cmp
dec
add
fbld
test
add
cmp
test
add
ja
shr
je
jmp
push
stc
jmp
or
mov
into
add
cld
sub
or
push
push
daa
pop
loopne
adc
popa
xchg
push
push
sub
call
rcrb
std
xor
cmpsb
push
loopne
mov
xlat
clc
scas
lahf
mov
push
shr
ficoml
push
pop
sub
pop
cmp
dec
in
fidivrl
or
xchg
shrb
mov
xchg
into
cmp
mov
lret
stc
cmpsl
mov
mov
inc
test
mov
icebp
outsl
add
test
inc
mov
mov
xchg
sub
pop
iret
loope
adc
mov
bound
xor
out
pop
loope
pop
add
popf
jae
movsl
pushf
xlat
and
icebp
insb
repnz
inc
faddl
cmp
test
or
cmp
pop
clc
stc
pop
push
xchg
cmpl
xor
or
dec
cmp
and
cmpsl
or
push
jmp
enter
mov
mov
lret
test
lret
mov
sbb
cmp
xchg
xor
push
jb
or
pop
cs
shr
xchg
jl
push
pusha
in
inc
or
jp
cwtl
cmc
add
push
adc
loope
pop
je
in
push
mov
cmp
sbb
popf
jnp
aaa
xchg
into
es
inc
mov
xchg
flds
lods
add
mov
add
xchg
cmpsb
fistl
mov
push
mov
add
les
add
mov
fsubs
jle
add
adc
std
sti
mov
insb
outsl
pop
adc
xor
mov
dec
mov
test
or
jl
push
js
xchg
fnstsw
sahf
aaa
and
mov
dec
xor
jg
lret
lahf
dec
orl
int3
sbb
or
scas
rclb
std
into
es
pop
stos
xor
jle
adc
nop
in
mov
mov
cmp
jmp
xchg
and
xchg
test
push
rcpps
jo
xor
push
pop
int
loope
jmp
push
and
scas
sbb
and
out
adc
jo
xchg
stos
jns
and
add
in
lock
adc
jmp
lea
lcall
leave
or
lods
and
adc
lds
cs
scas
and
cltd
push
into
pop
and
imul
mov
outsb
adc
inc
inc
adc
mov
cmp
jo
insb
test
inc
sbb
and
rorb
imul
xchg
pop
mov
inc
and
testb
mov
js
lea
xchg
loop
lds
cld
xchg
or
mov
pop
movsb
lods
lcall
cmpsb
movsl
cmp
xlat
cmpsb
lcall
inc
mov
fldt
sbb
cld
in
or
jbe
inc
hlt
es
ret
xchg
mov
aas
movsl
inc
adc
sub
and
imul
lret
sbb
pop
les
jmp
cmp
loopne
loop
adc
xchg
fldl
and
mov
pusha
cmp
dec
xor
les
loope
mov
inc
cmp
loope
es
loopne
add
mov
daa
mov
loope
add
int
inc
jno
dec
pop
xchg
or
pop
xchg
jge,pn
shrl
inc
out
fstpl
jno
push
in
dec
std
aaa
and
in
mov
out
data16
cmp
nop
push
mov
repnz
xchg
pop
cmp
push
fistpll
cmp
roll
cmp
loopne
cmp
jecxz
shrb
fwait
repz
pop
sub
cmpsb
add
pop
rcl
or
jecxz
jle
out
jle
ja
sbb
lods
dec
cwtl
mov
outsl
out
pop
or
out
arpl
jl
loop
test
xchg
mov
push
cmp
shrl
in
iret
push
mov
addr16
xor
mov
cmpl
in
jmp
sbb
out
jge
xchg
xor
mov
out
repnz
movsl
orb
push
repnz
adc
cmp
andl
loope
dec
out
lahf
inc
sahf
xchg
jns
xor
es
ret
and
sub
add
sbb
or
ret
mov
or
inc
add
mov
cs
push
iret
jne
hlt
pop
jge
lahf
jg
pop
mov
pop
xchg
test
and
add
imul
xchg
jnp
push
cltd
add
hlt
popw
cwtl
xchg
cld
xchg
push
dec
add
insb
and
inc
sti
shrb
or
test
mov
outsl
ds
inc
ret
mov
ret
stos
push
xor
jns
int3
jecxz
pop
mov
push
sub
xchg
stc
fiaddl
rcll
mov
push
mov
or
ss
sbb
cltd
adc
jb
mov
data16
mov
je
fists
ljmp
xchg
rcr
lods
jmp
ret
mov
cmp
mov
pop
pushf
inc
gs
in
push
and
dec
add
adc
sub
imul
jb
xor
movsb
cmpsl
scas
xlat
or
les
fbstp
lret
sub
xchg
sub
insl
lret
push
xor
jns
inc
or
in
add
pushf
mov
pop
aad
call
ss
outsl
xor
notb
test
mov
mov
xor
and
inc
xchg
xor
rorl
js
jle
sbb
jecxz
jno
inc
xchg
clc
push
push
pushf
mov
cmp
loope
incb
mov
scas
imul
cmp
sarl
stos
fwait
adc
add
cld
arpl
adc
imul
ret
in
stc
sarl
lret
mov
push
test
inc
xor
rep
lock
js
imul
imul
rorl
xchg
out
dec
mov
xlat
ficoms
nop
adc
aas
jge
pusha
jge
xchg
shlb
dec
push
pop
scas
fistpll
push
mov
sti
daa
inc
mov
mov
cmp
cs
push
sub
scas
hlt
cmp
sub
std
jbe
xchg
popa
inc
xchg
aad
lret
dec
in
sbb
ss
adcb
cmp
out
rcr
decb
inc
cmc
mov
adc
cmp
xor
data16
xchg
ljmp
iret
jns
push
and
nop
cld
orb
icebp
and
add
xchg
cmp
pop
mov
jle
stc
jl
rcrb
loope
out
push
cli
xchg
aam
mov
mov
leave
je
rorl
pop
mov
pushf
sti
xchg
outsl
mov
ret
sbb
mov
lods
aad
in
out
sti
mov
xrelease
push
add
push
stc
rolb
mov
xor
mov
popa
adcb
mov
out
lea
outsl
add
jo
rclb
mov
dec
cmp
scas
sar
aas
dec
ret
pop
shrl
in
into
lret
push
mov
lea
add
mov
mov
jle
aaa
bound
repz
mov
inc
cmp
lea
xor
inc
jle
imul
test
orb
mov
addr16
sbb
dec
xchg
out
inc
mov
aad
lahf
pop
lds
add
popa
test
xor
movhps
repnz
jb
orb
and
mov
mov
jns
sahf
xchg
dec
bnd
repnz
shlb
outsl
mov
sub
mov
rsm
xlat
mov
xchg
xor
scas
movsl
iret
jb
jecxz
cld
and
xchg
jns
cld
fs
out
inc
jl
inc
push
fdivrs
inc
inc
sub
push
push
dec
mov
mov
sub
pushf
add
dec
lret
lret
push
push
rcrb
dec
les
fldt
sti
js
and
stos
mov
fdivrl
sbb
ljmp
fidivrs
or
fimuls
xchg
cmp
push
add
or
jnp
sub
add
jg
and
imul
add
xchg
inc
enter
es
sbb
fdivs
mov
and
mov
push
ljmp
mov
scas
sub
cwtl
les
jle
inc
loope
ljmp
sbbb
insb
mov
out
push
cli
pushf
cwtl
push
cs
dec
mov
cmpsb
test
pop
shl
mov
mov
xlat
and
mov
addr16
mov
scas
insb
and
jne
sar
int3
aad
outsl
in
int
loope
stc
mov
mov
adc
cmc
aam
jl
stos
getsec
mov
sub
das
mov
inc
gs
jmpw
not
xchg
mov
scas
je
hlt
imul
mov
repnz
es
fdivs
jp
and
jl
dec
add
cmp
cltd
xchg
in
ret
push
into
sahf
sahf
popa
ja
mov
mov
sbb
pop
mov
es
cmp
test
or
lods
iret
xchg
pop
mov
cmp
loope
inc
scas
movsb
dec
cmp
cmp
add
adc
mov
jnp
sbbl
mov
adc
pop
lds
ss
push
loope
jno
pop
mov
out
jbe
js
dec
push
out
in
test
cltd
xchg
mov
insl
stos
call
push
xchg
or
xor
push
cmp
imul
cs
jb
push
mov
shr
pop
sub
bound
rcrl
mov
shlb
mov
mov
lcall
mov
movsb
stos
fs
jb
adc
js
mov
sub
mov
adc
das
ljmp
jb
mov
fidivrs
adcb
add
ja
in
and
dec
cmp
mov
adc
sub
lret
cs
add
ljmp
sbb
xchg
call
jp
adc
int
ret
sbb
dec
dec
and
mov
mov
or
fistpll
in
mov
dec
mov
out
inc
xorl
xor
or
sbb
inc
arpl
xchg
add
cmpsl
stos
adc
stc
jae
pop
sarl
pop
lret
jmp
dec
mov
daa
sub
mov
aaa
aam
es
icebp
mov
adcb
int
xchg
ljmp
mov
pmaxsw
out
inc
add
inc
xor
insl
pop
in
pop
out
mov
mov
test
imul
inc
lcall
cmp
cmp
jo
les
push
jno
test
mov
gs
or
sti
jmp
inc
add
push
jecxz
mov
fisubs
arpl
js
jns
or
jg
xchg
cmp
mov
inc
cmp
int3
push
push
sbb
data16
sahf
inc
or
dec
adc
addr16
or
dec
roll
scas
pop
out
loop
mov
or
leave
dec
push
dec
insl
xchg
fstl
in
pop
or
mov
fcoml
mov
mov
cmp
shl
push
daa
add
stc
int
add
ret
xor
mov
pop
sbbl
push
add
xchg
mov
out
clc
aas
push
mov
inc
mov
push
sbb
adc
sub
cld
add
mov
ret
js
stc
lea
jns
push
fisttpll
push
mov
xchg
insb
aam
lods
adc
roll
dec
cmp
push
jle
int
negl
jge
lods
add
or
cld
andl
in
bound
add
push
cmp
jecxz
dec
pop
sbb
sahf
call
pop
imul
data16
adc
and
pop
push
cs
xor
pusha
push
aam
mov
jmp
mov
ss
xchg
divb
pop
in
les
pop
leave
fcom
cld
jg
adc
lret
das
and
popl
jmp
clc
std
bound
cld
ds
mov
dec
fcompp
jae
mov
shr
ret
mov
test
dec
mov
pop
sub
cmpsl
call
mov
repz
daa
mull
bound
xchg
cld
aam
jge
loopne
jnp
jb,pn
jecxz
aas
sahf
into
sub
insb
mov
mov
data16
cmpsl
jns
and
mov
inc
mov
mov
push
sbb
mov
sbb
cmp
ret
sti
pusha
outsl
loopne
loop
sbb
movsb
mov
jmp
leave
mov
xchg
ret
xchg
popf
jge
fstpl
shl
pop
mov
inc
arpl
add
mov
dec
int3
fs
mov
mov
mov
push
mov
mov
adc
mov
scas
jbe
dec
add
cltd
test
sbb
cmp
dec
stc
popa
std
decl
in
ss
aaa
xchg
sti
sbb
push
and
movsl
jne
xabort
jns
jne
cmp
sub
mov
adc
cwtl
sarb
outsl
mov
decl
aaa
xor
pop
je
daa
test
scas
pop
push
push
out
loope
adc
out
mov
rcrl
icebp
push
pop
jge
dec
jle
test
adc
push
inc
jl
shll
je
addr16
add
jmp
xor
pop
ret
inc
outsb
sbb
sbb
cmpsb
jecxz
test
jmp
stc
push
adc
dec
cli
stc
popa
mov
shl
mov
add
adc
sub
loop
stos
mov
mov
mov
jmp
pop
sub
xor
mov
sbb
jbe
aaa
jno
cmp
test
addr16
pusha
mov
insb
stos
mov
xor
inc
movsl
rcrl
aaa
xchg
mov
mov
mov
pop
test
jmp
mov
and
testb
loopne
into
mov
popa
mov
iret
in
outsb
xchg
imul
movsl
sbb
mov
fsub
adcl
mov
sub
inc
add
push
mov
push
andb
add
outsl
outsl
mov
outsl
js
fisttps
mov
fisubs
cmp
ficomps
hlt
test
mov
jl
push
cli
push
mov
xchg
lods
insl
dec
xlat
inc
mov
pop
loope
test
dec
jmp
inc
mov
or
incl
add
scas
xchg
mov
cmp
dec
xchg
lods
jnp
mov
jl
push
cmc
mov
lds
addr16
sbb
cwtl
aas
out
subb
fimuls
loop
ja
pop
add
dec
test
loope
sbb
cmp
sub
test
loope
sub
and
pop
mov
jo
testl
sub
hlt
sbb
adc
or
jmp
cmc
es
sub
rcrb
fistpl
and
cmp
mov
push
sbb
repnz
mov
mov
xchg
stc
lahf
jne
setbe
leave
sub
sbb
jbe
testb
jl
sbb
fdivl
xchg
adc
push
xchg
dec
fnstenv
js
jbe
adc
lret
dec
mov
pusha
lret
std
mov
cwtl
jns
sbb
int
fs
loopne
fadds
lahf
jmp
mov
fcomip
scas
inc
in
xor
pop
jmp
shrb
and
fidivrs
aas
sub
jge
cmp
scas
mov
cmp
dec
xor
jp
mov
sarl
imul
in
test
ljmp
adc
jnp
into
aad
push
mov
test
xor
sbb
or
add
inc
and
mov
xchg
aam
arpl
decb
jo
sub
sub
out
lods
jb
sti
sbbl
pop
mov
stos
mov
pop
aaa
and
ljmp
imul
cmp
stc
lods
add
leave
jp
arpl
mov
rcrb
sub
fs
mov
mov
inc
push
out
cmp
sbb
xchg
mov
iret
cmc
cwtl
gs
stc
jno
aaa
push
xchg
cmpsl
xor
dec
push
js
inc
xchg
mov
pop
addr16
les
dec
popw
shrb
xchg
divl
add
inc
dec
cld
cmp
sbb
xchg
icebp
cmpsb
or
add
adc
pop
repnz
int3
jmp
outsb
mov
fiaddl
mov
imul
sarl
xor
fisubs
lahf
int3
inc
add
xchg
jns
xchg
sahf
ret
rorb
sub
lret
fidivrs
jge
lahf
jno
repz
mov
bound
nop
mov
adc
iret
jns
lcall
adc
xlat
xor
mov
scas
push
bound
mov
leave
cmpsb
ret
lret
stos
and
pusha
mov
pushf
pop
hlt
pop
out
movsb
jne
xchg
pop
lea
adc
scas
in
rorb
ret
add
xchg
mov
sbb
mov
pshufw
mov
loope
nop
outsl
loopne
outsb
cmp
imul
push
mov
popf
xor
add
imulb
push
mov
xchg
sbb
ss
pop
sub
mov
xchg
cld
push
out
sbb
and
aad
and
fmuls
xchg
pop
mov
jnp
sahf
es
dec
inc
mov
shrb
loopne
jmp
aas
sub
cld
inc
xchg
xor
stc
mov
mov
push
mov
outsb
iret
cmp
rolb
pop
in
sbb
cmpsb
jle
jb
pop
jno
mov
sbb
aas
fldz
std
mov
sub
lea
mov
ror
jecxz
jns
jne
sbb
cmp
xchg
inc
xchg
inc
cmp
movsb
nop
jp
shll
nop/reserved
mov
mov
sub
es
gs
hlt
mov
xchg
sub
and
out
hlt
jge
es
dec
push
xor
mov
xor
cmpl
sbb
fwait
or
cmpsl
push
outsl
int
pop
sbb
jnp
leave
mov
sbb
jge
daa
cld
out
mov
mov
ret
mov
sbb
scas
cmpsb
and
push
mov
fucom
dec
aam
and
xlat
mov
enter
test
out
dec
dec
xchg
ja
mov
loope
push
daa
into
loope
daa
xor
jb
mov
xchg
dec
cmpb
repnz
jo
leave
push
add
or
imul
dec
mov
outsb
cli
mov
sbbl
mov
mull
push
jecxz
pop
lahf
fdivl
cmp
roll
cmp
xchg
cmp
mov
sahf
insb
pop
out
outsl
xlat
sarb
mov
dec
jl
leave
sbb
dec
sti
lahf
scas
sbb
push
xchg
add
mov
lea
int3
jmp
mov
aad
add
xchg
push
je
std
imulb
ret
mov
out
movzbl
jno
test
pop
jle
cwtl
sbb
lock
cmp
data16
lcall
out
mov
movsl
scas
push
shr
xchg
decb
addr16
aas
add
mov
pop
inc
inc
adc
movsl
lods
sbb
mov
stos
sub
xchg
cmpsb
xor
xor
add
mov
int3
fldenv
lock
cmpsl
mov
inc
mov
mov
push
push
cmpsb
mov
xlat
mov
lods
pop
or
mov
cltd
pop
mov
mov
or
nop
lds
jmp
aaa
mov
add
shlb
das
sbb
inc
inc
pop
adc
push
cmp
xchg
rcr
imulb
int
std
push
repz
maxps
lods
inc
jmp
and
inc
mov
adc
pop
jno
jne
sub
jno
in
test
mov
pop
sbb
jecxz
cmp
mov
movsb
inc
jno
xchg
loopne
scas
pop
jnp
dec
jbe
in
pop
add
inc
pop
and
rorb
aad
push
lcall
pop
add
push
sbb
jle
mov
sbb
ret
ljmp
stc
stc
add
addr16
stc
enter
ljmp
dec
fistpll
xchg
inc
test
hlt
xchg
mov
sbbb
dec
push
cmp
std
push
lods
fistl
mov
outsl
adc
jge
or
inc
call
lods
fidivl
fadd
and
dec
scas
cmc
stc
subl
add
sarb
or
aad
lea
lret
inc
xor
add
or
or
lcall
adc
repnz
dec
imul
mov
mov
jno
in
loope
sbb
lds
not
push
adcl
mov
or
pop
push
pop
cmp
fnstcw
leave
in
mov
in
insl
inc
sub
or
sub
in
enter
mov
or
enter
ljmp
rclb
sub
fwait
aaa
push
xchg
mov
jns
into
push
int
lahf
scas
aaa
or
ret
insb
test
andb
mov
test
mov
loopne
mov
xchg
or
lret
and
sub
pop
aad
adc
stos
cld
or
stos
test
out
lods
add
inc
dec
test
call
or
loop
testb
mov
movb
or
repnz
daa
scas
mov
dec
sub
adc
push
jb
push
jb
and
cli
jp
inc
aas
dec
ret
jb
imul
pusha
jns
inc
cmp
mov
repz
add
push
sub
out
xor
ja
add
lcall
lret
aaa
jo
push
sbb
insb
push
test
pop
enter
and
push
test
bound
dec
mov
in
mov
bound
adc
xor
mov
jg
xchg
or
pusha
gs
and
push
adc
inc
xchg
mov
rcrl
fucomi
cmpsb
arpl
lretw
clc
mov
popa
shr
jnp
fidivs
xor
leave
inc
mov
stos
rclw
mov
jb
or
pop
add
scas
add
xchg
incb
sti
pusha
sbb
outsb
mov
sarl
cmp
lcall
sbb
lahf
xor
jp
sar
nop
push
cmpsl
mov
ja
into
stc
das
dec
add
stos
movsl
mov
sub
mov
xchg
cmc
lock
aad
movsb
cmp
push
mov
mov
rcr
and
jmp
push
and
push
inc
dec
aas
int
js
add
inc
outsb
mov
and
dec
sub
daa
insb
data16
testb
pop
aaa
jmp
sbb
ljmp
jne
mov
fdivrs
je
nop
sub
out
testl
xchg
xlat
pop
dec
mov
xchg
outsb
mov
movb
xor
aam
add
xlat
jecxz
or
xor
fsubrl
xchg
das
adc
mov
repz
fstl
stc
sahf
ss
xchg
fs
cmc
ds
mov
out
cmp
nop
andnps
mov
aaa
pop
cmc
cmpsb
mov
nop
addr16
cmp
int
stc
jmp
add
aaa
std
push
or
mov
aam
imul
fldenv
xor
fidivrl
cmp
rcrl
xor
das
loopne
xchg
sub
jle
mov
clc
out
fcomip
push
lret
pop
cwtl
mov
cmp
stc
xchg
sbb
mov
cs
pop
les
inc
hlt
or
mov
ja
mov
mov
sbb
add
dec
mov
clc
xor
mov
adc
sub
jns
daa
movd
pop
int3
stos
pop
ljmp
push
mov
aas
pop
inc
push
mov
cmp
push
lock
pusha
cmpsl
fld
addb
pop
push
mov
xchg
cmp
mov
sbb
jg
cmp
jge
jbe
add
add
jle
mov
mov
cmc
mov
clc
add
inc
xchg
fidivs
in
out
xchg
push
adc
or
mov
dec
into
pop
test
adc
out
mov
pop
movl
push
sub
aas
mov
pushf
or
inc
push
fsubrl
leave
jbe
in
push
mov
push
inc
or
seta
fcoms
stos
and
dec
insl
lret
sbb
mov
lret
outsl
arpl
sti
jnp
iret
jb
xchg
or
inc
cmc
das
pop
dec
lods
int3
bound
cmp
inc
bnd
das
shrl
sub
mov
inc
aas
sbb
test
add
add
sbb
jle
or
xchg
inc
dec
cmp
into
outsb
sbb
xchg
sarl
aam
xor
and
sbb
incb
pop
mov
jge
sarl
cld
inc
fcom
push
rcll
ds
cmp
and
dec
xchg
xchg
mov
inc
cmp
cld
inc
jne
cmpl
jne
sbb
jle
xchg
cltd
lods
call
fdivr
lds
xchg
sub
aas
cmp
cmp
sub
fistpll
fadds
insl
lahf
and
std
imul
adc
js
adc
xchg
adc
sbb
insl
rcrl
incb
cwtl
fsubp
mov
int
sbb
mov
mov
arpl
or
ja
imul
pusha
pop
or
sbb
mov
scas
cmp
dec
jg
pop
mov
or
arpl
jle
std
and
jecxz
bnd
les
enter
pop
inc
pop
imul
int3
mov
fidivs
or
out
adc
jae
sbb
scas
jno
fsubs
inc
popf
into
inc
dec
inc
fldenv
jns
xor
jg
mov
cmpsl
mov
inc
inc
jb
adc
movsb
mov
push
pushf
fdivs
mov
xor
mov
mov
pop
test
loopne
jecxz
xor
add
int
addr16
jmp
and
or
push
mov
or
imulb
add
inc
xor
push
loop
scas
fisttps
mov
icebp
clc
cli
push
fistps
out
dec
and
iret
lea
mov
lea
aas
xlat
pop
mov
lcall
inc
push
jp
adc
jmp
or
dec
testb
ret
and
mov
mov
mov
sub
test
rolb
jae
pop
xchg
mov
das
jg
aas
jge
adc
shll
mov
jg
jl
pop
jbe
jb
out
mov
or
movsl
mov
out
aaa
mov
int3
ficompl
cwtl
add
sahf
xchg
mov
scas
dec
sub
adc
cli
sub
imull
in
dec
xor
inc
fisttpl
sub
lock
hlt
repnz
pop
push
jp
or
jno
pop
pop
fnstenv
imul
mov
aad
push
sbb
inc
add
fs
cmp
pop
hlt
and
mov
jle
imul
jne
and
imul
sub
pusha
jae
jecxz
lret
dec
cli
les
mulb
mov
pop
pop
push
mov
cmp
add
inc
sbb
push
fldenv
inc
ljmp
gs
aas
dec
enter
sub
mov
into
pusha
in
or
aas
hlt
imul
cmp
push
xchg
out
mull
jg
push
jmp
pusha
inc
cmp
and
dec
ljmp
fstl
pop
xchg
dec
movsb
jae
inc
jg
pop
scas
pop
decl
pushf
mov
dec
lret
xchg
push
mov
jecxz
lret
addr16
aad
mov
loope
outsb
mov
shlb
mov
repnz
inc
loopne
int3
into
lock
fs
add
daa
fisubrs
push
adc
fwait
dec
int3
fists
dec
rclb
push
lds
data16
scas
stos
add
and
cmc
jge
lock
hlt
testl
and
jbe
out
jmp
pop
fcoms
out
inc
inc
lret
fwait
jecxz
pop
or
lods
jmp
std
movsl
cltd
or
imul
loope
movsb
lock
xor
xorb
iret
sarl
ret
nop
push
cmc
push
adc
push
push
pop
imul
mov
test
lss
das
in
aam
mov
addr16
das
lds
mov
mov
sbb
test
inc
push
jnp
cmp
repnz
in
xchg
inc
rcrl
inc
mov
bound
push
adc
sub
sub
test
fisubrs
stc
jle,pn
mov
loop
orb
or
adc
fwait
cmp
loop
cmp
adc
jne
pop
gs
jb
mov
add
jmp
jge
sti
sbbb
pop
cmp
pop
sbb
mov
or
stos
mov
xchg
rcrl
and
push
xchg
or
jl
mov
cmp
das
hlt
push
add
das
dec
jae
inc
jb
ret
push
outsl
sarb
fdivl
push
aad
and
cmpsl
test
js
mov
jnp
sahf
add
out
add
enter
pushf
insb
call
push
xadd
push
mov
jmp
popa
sbb
ficoml
jns
shll
mov
fsubl
add
aad
stos
mov
jl
fadds
jmp
jmp
mov
and
mov
daa
dec
insb
out
xor
idiv
jno
pop
cmp
call
sbbl
sbb
lcall
mov
fistl
mov
test
iret
ljmp
jmp
data16
sub
imul
in
loopne
fidivs
push
loopne
xchg
out
popf
xchg
lods
in
add
subb
sub
std
xchg
cmp
lret
mov
push
js
add
push
insl
movl
test
add
mov
movsl
cltd
fdivl
adc
sti
rcrb
adcl
loopne
add
out
ret
sbb
es
xchg
rolb
outsl
xlat
jae
mov
mov
cmpsl
jp
icebp
lods
rclb
cmc
mov
jns
jecxz
test
xchg
sarb
and
orl
sbb
mov
mov
xor
loop
jp
add
mov
and
dec
imul
xchg
daa
and
push
cmpsb
sbb
ljmp
in
test
mov
xchg
sbb
idivl
mov
mov
jns
mov
int3
leave
filds
popa
ds
dec
inc
js
inc
push
repnz
jnp
dec
xchg
add
inc
shl
mov
mov
into
js
jmp
jns
pop
mov
inc
in
outsl
mov
mov
repz
ljmp
inc
jge
jg
push
int
fbld
xor
out
mov
cwtl
xor
and
sbb
dec
addr16
dec
ja
jo
pop
jo
adc
push
and
fsubl
push
cmp
loop
push
aaa
mov
push
test
inc
aam
inc
and
pop
addr16
dec
enter
mov
leave
out
jg
inc
add
inc
inc
jp
or
test
cmp
lea
pop
pushf
cmp
rolb
cmp
push
mov
movsl
sub
loope
stc
ja
fistpl
cmp
mov
push
jmp
jle
pop
sbb
pop
ficompl
dec
jo
add
pop
push
or
mov
push
bound
cmp
pop
adcl
add
sahf
mov
mov
fs
mov
xchg
arpl
inc
sub
mov
ret
lcall
push
pushf
lea
mov
or
fwait
out
dec
nop
ja
test
cmpsl
push
mov
or
stos
jns
mov
mov
mov
ret
stc
ljmp
test
sbb
mov
push
sbb
filds
mov
cmpsl
sbb
bound
ret
pop
push
mul
fldenv
sbb
jno
xchg
pop
mov
out
inc
pop
mov
adc
or
jnp
stos
push
add
out
jns
and
fstp
inc
mov
lahf
jg
cmp
mov
shll
or
mov
scas
pop
jmp
push
nop
xchg
sti
lods
fdivs
push
mov
stos
jecxz
fs
test
rorb
sbb
mov
fwait
std
sub
adc
jecxz
popa
mov
popf
jmp
popf
jg
jae
xchg
sbb
or
or
push
ficoml
and
xlat
lods
jne
cmpsb
ret
setno
push
repz
gs
pushf
imul
push
pusha
push
fwait
xchg
leave
mov
sbb
mov
jmp
add
test
mov
mov
inc
fs
jg
ret
rcr
nop
imul
insl
lds
jne
pushf
mov
aaa
lretw
jns
ja
adc
sti
rcrl
in
mov
ud1
jp
lret
jo
inc
scas
dec
fimull
mov
xchg
lret
cmp
cltd
pop
daa
mov
mul
gs
cmp
cltd
fldl
mov
test
arpl
xchg
shll
adc
jg
xchg
xchg
cs
push
xorb
mov
pushf
and
mov
mov
sub
xor
jbe
pusha
push
icebp
cmp
sub
out
ljmp
cmp
out
xchg
les
mov
xchg
popa
call
movsb
rcrl
pop
stos
xor
lock
scas
jl
mull
adc
push
mov
loop
int
pop
repz
or
dec
inc
data16
loop
push
push
fildl
or
lea
imul
xor
mov
inc
push
or
lea
jg
add
mov
ss
sbb
mov
inc
push
sbb
lea
push
in
in
push
inc
mov
and
out
and
mov
addl
inc
mov
add
imul
xchg
sub
or
jmp
mov
mulb
add
lock
cmp
push
sahf
push
mov
ljmp
into
dec
mov
sub
addr16
xchg
mov
aad
addl
inc
add
adc
mov
enter
mov
xor
push
xorb
test
scas
out
ret
pop
std
cmp
sbbl
icebp
sub
shll
jb
mov
enter
or
cltd
jae
inc
push
inc
add
or
enter
shll
sar
into
mov
cmc
addr16
sub
ja
xor
inc
stos
cld
sbb
adc
cmp
mov
ja
repnz
mov
and
pop
je
cmovge
mov
jmp
cmc
sub
push
and
mov
lret
movsl
mov
mov
popa
cmp
push
xchg
dec
push
addb
add
mov
pop
in
push
imul
repz
push
mov
mov
loope
ss
inc
pop
cmp
aas
clc
sti
popf
or
pop
xchg
xchg
pop
out
push
arpl
inc
mov
push
lods
inc
mov
flds
jmp
pop
cmp
dec
inc
stos
cmp
or
mov
dec
shlb
ljmp
out
sbb
sbb
jle
pop
mov
xor
leave
xchg
out
mov
idivl
dec
adc
dec
mov
xchg
sub
xchg
xor
or
and
fnstsw
jno
scas
aas
mov
inc
es
cmp
adc
aam
lcall
out
rcll
sar
mov
xlat
jns
jb
mov
add
lods
loop
fisubs
xchg
and
pop
shl
dec
adc
idivb
sub
xchg
pusha
sbb
push
lock
callw
jo
repnz
push
icebp
outsb
pop
mov
jne
stos
in
jp
mov
in
push
lahf
or
aaa
sub
movsb
fnstcw
xor
cli
add
jne
addr16
dec
outsb
xchg
cmovbe
cmp
or
sbb
rorb
fstps
sub
push
rcrb
inc
mov
add
test
fistpl
add
add
ljmp
push
pop
mov
jmp
mov
fisttps
and
add
les
inc
mov
inc
or
lds
in
inc
ds
mov
or
push
xchg
leave
out
out
imul
into
mov
jae
jl
fbld
jbe
jae
insl
mov
out
sbb
mov
sbb
adc
pop
mull
adc
loope
ds
sbb
loopne
dec
jnp
mov
sahf
pop
cmc
push
xor
inc
xor
xor
inc
es
fsubrs
jb
movb
in
mov
inc
cmpsl
roll
rcrb
jae
adc
pop
leave
inc
xchg
fisubl
movsl
roll
xchg
sub
icebp
outsb
add
jno
es
mov
pop
jne
fcmovb
add
std
xor
nop
jae
jp
cs
sbb
lahf
fwait
leave
leave
pop
xchg
jle
cmpsb
out
cmp
subl
lods
xor
sbb
push
pop
pop
stos
lahf
loop
rol
int3
js
lods
aad
clc
aas
sub
fucomp
dec
std
daa
sbb
or
mov
inc
pop
push
stos
movsl
outsb
popf
mov
add
test
sahf
out
mov
lahf
rcr
ss
out
pop
jo
sub
es
sub
sbb
pop
xchg
in
pop
dec
cmp
clc
xchg
aaa
cld
xchg
mov
jge
xchg
dec
aaa
sub
add
jbe
push
imul
loope
dec
pop
add
xchg
test
mov
inc
cmp
push
xchg
aas
xlat
in
nop
push
out
mov
insl
stos
fldl
mov
push
dec
add
cs
sub
sbb
das
mov
ss
sub
inc
lods
stos
mov
out
addr16
push
hlt
push
shll
inc
popa
adc
push
xchg
fs
sahf
mov
les
mov
mov
xor
xchg
loop
and
lahf
js
add
adc
mov
or
lret
pop
popa
xor
sbb
mov
nop
cli
mov
jb
or
rcrl
fisubl
arpl
mov
scas
loop
inc
fs
lock
imul
inc
xchg
lcall
xchg
and
push
mov
fstpt
test
mov
xor
les
xchg
adc
push
mov
imul
sub
dec
mov
mov
jle
in
xor
mov
and
fnstenv
lret
stos
push
fdivrs
jae
ret
or
lock
mov
jns
xor
push
jge
pusha
xchg
pop
pop
mov
add
fxch
mov
jmp
aas
fisttps
cmp
cmpsl
add
bnd
jo
cmpl
rorb
mov
nop
call
or
pop
cld
test
pop
mov
fxch
push
sbb
loopne
loop
sub
xor
jnp
or
dec
pushf
popf
ja
popa
jp
mov
fs
in
mov
cmp
sahf
enter
cmp
das
cs
pushf
sbb
and
mov
mov
xchg
aas
jne
jo
bnd
aaa
imul
push
ret
pop
int
jge
lods
jnp
stc
pop
mov
ds
int3
mov
and
jecxz
lods
mov
pop
mov
pop
add
insb
cld
pushf
push
push
imul
repnz
xor
ds
cwtl
or
inc
xor
imul
pop
shll
mov
fwait
popf
sbb
jle
cmp
dec
mov
js
ja
or
and
xchg
adc
mov
js
mov
sbb
aam
test
out
lret
fists
push
enter
imul
pop
jns
sub
pop
aas
insl
subb
mov
loopne
addb
xor
inc
rorl
stos
lea
int
add
test
jl
dec
pop
ja
xchg
inc
and
adc
cmp
adc
add
xor
jb
inc
repz
sbb
imulb
stos
xor
dec
mov
jle
xorb
ja
xchg
hlt
lret
inc
out
icebp
addb
aam
imul
sbb
aaa
fmull
or
add
adc
movsl
cmp
add
xchg
dec
mov
pusha
xor
ds
sub
popf
jnp
cwtl
fcomps
in
dec
add
sar
cmpb
xchg
cmp
mov
insb
adc
frstor
xchg
lds
mov
mov
leave
sub
xchg
leave
mov
mov
inc
das
and
pop
xor
adc
push
test
hlt
jmp
imul
jo
pop
push
jp
incb
jb
mov
js
add
pop
mov
xor
out
push
pop
cmp
mov
cwtl
jg
lds
sbb
cmp
sub
scas
inc
fdivrl
cmpsl
and
or
nop
sbb
jae
and
in
mov
dec
fsubrp
test
aas
or
inc
or
dec
cmp
mov
mov
pop
pushf
xchg
aad
ljmp
stc
inc
ret
lret
lea
push
loop
jge
inc
in
arpl
or
cmc
test
push
ja
jle
sub
nop
xchg
dec
fnstenv
sbb
xchg
mov
sub
sub
sbb
ret
scas
ret
aas
or
popf
insb
inc
cmp
xchg
push
sbb
cmp
ja
inc
mov
sbb
outsl
sbb
pop
mov
mov
sub
or
pop
aad
pusha
sub
imul
mov
lcall
jbe
aad
pop
gs
gs
sub
adc
xor
cmp
dec
jp
outsb
in
inc
mov
xchg
insb
insl
test
xchg
mov
aas
ret
int
or
addr16
xchg
fs
cmp
dec
test
push
add
int3
add
pop
ss
mov
push
or
and
and
hlt
imul
xchg
mov
fs
lret
mov
andb
adc
data16
dec
xchg
sbb
fcmovnu
movsl
dec
fs
sbb
sbb
push
sub
sbb
mov
and
or
pop
sub
mov
cld
fsubrl
cmpsl
cmp
push
mov
mov
icebp
cmc
inc
dec
pusha
xor
fisubrl
mov
andl
xchg
addr16
sahf
sub
test
inc
inc
aas
rcl
cmpsl
pcmpgtw
sbb
mov
mov
cmp
mov
cmp
nop
jns
mov
sbb
sub
mov
lods
inc
xchg
xor
jbe
xchg
and
xlat
xor
push
icebp
fs
int3
or
ja
pusha
int3
shl
fwait
inc
lock
and
adc
scas
mov
cwtl
ljmp
pushf
xor
pop
or
das
push
cli
mov
int
das
gs
int3
fs
jo
sbb
xchg
dec
pusha
mov
pop
or
dec
add
sbb
ljmp
nop
pop
notb
inc
xor
outsb
pop
call
jns
jae
stc
fstpl
fwait
xchg
es
mov
pop
sub
or
orl
xor
cmp
sbb
and
xor
fs
pop
scas
leave
and
mov
push
hlt
in
pop
jmp
lahf
js
insb
and
cmp
aaa
pushf
mov
sub
xor
ret
xor
pop
rcll
xchg
js
ret
adc
push
jo
sarb
inc
sbb
xor
scas
mov
mov
inc
dec
aam
add
jb
mov
push
adc
rclb
cmpsb
cmpb
push
into
jns
popa
stos
cltd
jp
cmp
lahf
insb
jp
sbb
jb
and
shll
jb
xor
cmpsl
roll
xchg
and
inc
xor
subb
pop
sub
push
ret
test
inc
js
fstl
cltd
jecxz
addr16
std
and
dec
push
pop
inc
jo
aam
hlt
scas
in
and
mov
out
aad
or
sub
jns
shrl
xor
int3
lods
ret
jnp
arpl
mov
add
pop
adc
lahf
scas
inc
cli
lock
into
inc
and
lret
xor
jge
cmp
pop
clc
xor
outsl
dec
jo
movsl
cltd
faddp
jno
xchg
mov
lahf
insb
push
push
or
aad
pop
out
mov
xchg
test
sahf
and
pop
fnstcw
mov
cmp
push
adc
push
mov
pushf
lret
inc
jo
or
fnstsw
jle
xchg
mov
mov
inc
popf
lret
mov
jle
jl
and
fisubrl
mov
pop
nop
movsl
mov
mov
mov
jl
imul
dec
dec
dec
pop
out
arpl
xchg
cmc
outsl
call
inc
fcomps
into
out
adc
inc
bound
inc
mov
es
idiv
mov
daa
loope
icebp
cld
insb
ror
frstor
push
sbb
mov
cmp
notl
xor
aas
sub
pop
fdivs
cs
jp
mov
gs
push
sbbb
sbb
arpl
lds
loope
cltd
adc
push
adc
and
je
andb
mov
pop
xchg
popf
shll
jns
outsl
dec
popa
lcall
sub
imul
lret
addr16
repnz
sbb
push
xor
and
dec
sahf
cmp
adc
ja
cmp
xchg
aad
xchg
xor
andl
lret
shll
ret
xor
flds
fists
icebp
fldt
cmp
insl
jnp
cmpsl
push
jl
loop
mov
mov
or
out
xor
and
in
stos
popa
xor
mov
inc
mov
pop
xchg
aam
or
test
or
push
icebp
sub
or
les
dec
stos
idiv
lds
xorl
movsb
sbb
test
adc
cmp
sub
mov
xchg
pop
into
push
add
popf
mov
pop
scas
cltd
hlt
xor
sub
dec
dec
fistps
popf
cmpsl
inc
ds
test
add
push
cmp
push
xchg
frstor
mov
jb
inc
int
out
and
ja
outsl
cmp
ss
ficompl
xchg
sbb
sub
pop
test
cli
js
repnz
mov
inc
repnz
es
and
in
add
addr16
jnp
mov
pop
fimull
test
movsb
es
add
stos
repz
test
imul
dec
arpl
add
pop
cmp
inc
sub
cmpsl
jnp
and
mov
test
cmpsb
test
data16
mov
pop
and
push
clc
js
std
lcall
enter
mov
lret
clc
xlat
xchg
mov
sbb
jp
sub
and
sbb
xor
stc
sub
fnstsw
sbb
out
sbb
push
hlt
icebp
cli
cwtl
xor
inc
fstp
aaa
mov
popf
or
popa
repnz
insl
mov
mov
mov
icebp
and
mov
xor
ret
dec
or
xchg
jmp
out
xor
mov
adc
sub
mov
pop
push
mov
ret
fcmove
xchg
push
mov
adc
cltd
outsb
fs
rcrl
lret
inc
mov
cmp
cli
cmp
xchg
adc
or
dec
popaw
push
or
jmp
push
ret
sub
fcom
inc
inc
call
imul
dec
mov
stos
aas
mov
sbbl
outsb
divb
test
imul
outsl
std
mov
inc
mov
mov
xor
jle
push
lret
cmp
in
test
inc
aam
or
jle
enter
add
jmp
pop
and
shlb
xchg
mov
repz
xchg
fcomps
pushf
arpl
hlt
jge
jno
jo
mov
int
enter
sub
ret
xlat
std
push
jns
scas
pusha
pushf
jo,pn
or
jae
add
push
xor
and
out
mov
inc
xchg
popa
jo
lods
fisubl
and
fbld
insb
pop
leave
hlt
idivl
int3
test
popa
mov
jb
sub
dec
fisubrs
cmp
push
mov
cmp
and
dec
scas
mov
jne
adc
idivl
shl
or
dec
lods
or
add
or
imul
mov
inc
es
add
outsl
cmp
dec
xchg
cmpsl
cmpsb
sbbb
xchg
cmpsb
call
xor
jne
jo
stc
aad
push
adc
xor
mov
sub
and
add
and
push
xor
xchg
push
mov
in
or
lods
ja
rcl
mov
out
mov
fs
push
dec
and
ja
add
shlb
insl
fiaddl
enter
push
push
mov
popf
addr16
and
std
cmpsl
jmp
ret
push
movsb
cs
mov
popa
sahf
out
cmp
shll
fwait
add
arpl
rcr
sub
jmp
adc
sbb
mov
int3
bound
insb
shlb
loopne
jno
unpcklps
bound
out
add
pop
push
pop
adc
cmp
mov
adc
outsl
xchg
push
mov
mov
sub
push
dec
daa
mov
popf
push
xchg
cmp
shrl
repnz
ficoms
pop
sub
stos
sub
rol
mov
pop
sub
daa
add
nop
xor
sarb
and
xchg
mov
pop
xor
push
jp
test
aam
mov
inc
clc
adc
xor
xchg
or
xchg
inc
testl
or
lcall
fnsave
jg
xlat
xchg
aas
dec
mov
jge
lods
aad
xor
aaa
insl
mov
add
push
divb
push
in
mov
sub
xchg
mov
add
xor
sub
shlb
inc
testb
dec
adc
outsb
mov
out
xor
sbb
fs
enter
enter
leave
scas
mov
fimuls
test
mov
das
push
jecxz
lret
push
xor
xor
cs
sbb
jg
pop
fstp
mov
dec
fisubs
scas
into
repz
fisttpl
addb
or
cmp
sub
mov
cmp
push
repz
mov
insb
fldl
ror
cmp
jl
add
xor
in
out
daa
ja
sbb
push
ljmp
out
sub
mov
xchg
mov
or
mov
fldt
push
adc
mov
rol
cmpsl
orb
sub
add
icebp
push
enter
sbb
cld
notl
aam
pop
pop
add
lret
mov
dec
sbb
imul
xchg
and
and
pop
outsl
push
lret
jns
rolb
mov
mov
enter
rep
sub
movsb
push
lahf
lods
fwait
mov
xchg
push
das
mov
xchg
xchg
dec
pushf
rcrb
adc
and
xchg
adc
inc
fs
xor
insb
jo
loop
lret
mov
pop
out
mov
jp
xor
mov
jns
lcall
shl
push
std
out
cmp
dec
push
cmp
call
mov
add
inc
mov
mov
addr16
ljmp
loope
movsl
add
movsl
dec
lahf
das
imul
insl
fld
rcr
lret
adc
enter
mov
cmp
fidivrl
mov
pop
lods
push
xor
inc
ret
and
dec
std
les
ss
push
mov
loop
ljmp
mov
sub
add
mov
inc
add
popa
add
mov
cs
std
mov
mulb
jo
mov
iret
or
fdivs
jns
ret
shr
shrl
and
push
pop
lahf
dec
pop
and
rclb
mov
fcmovnb
dec
je
or
and
dec
sbb
test
lods
shll
dec
fs
cmc
std
jl
shll
inc
mov
jl,pn
enter
fwait
sbb
xchg
xchg
loope
loop
sbbb
adc
popa
cmpsl
mov
inc
into
imul
and
or
sti
push
notl
cmp
fmull
adc
mov
and
clc
js
lret
or
inc
insl
and
addr16
jbe
pop
in
pop
aam
lock
imul
pusha
xchg
stc
push
mov
hlt
add
mov
inc
adcl
rcr
mov
mov
cmc
out
or
addl
insl
or
jp
xchg
pop
test
push
stos
adc
push
push
jge
insl
fdivr
xchg
aas
xchg
mov
xor
add
sbb
sub
add
mov
shlb
and
cwtl
mov
out
pop
pop
mov
inc
aad
xor
dec
scas
sub
xchg
pop
cmp
pop
sbb
or
or
clc
popa
push
movsl
inc
divb
into
in
inc
shll
into
pop
jns
pop
xlat
filds
inc
or
cmp
enter
int3
jne
sub
pushf
add
mov
sbb
add
mov
insl
mov
push
sbb
lods
clc
dec
push
or
sahf
lods
imul
jbe
and
lahf
movsb
hlt
mov
ja
cli
sub
xchg
outsl
mov
mov
pop
ret
pop
testl
test
xchg
loopne
jae
loope
jle
xor
inc
fsubrs
jo
clc
mov
mov
mov
maskmovq
idivl
push
lcall
add
or
stc
frstor
hlt
mov
pop
push
int3
imul
sbb
int3
nop
mov
xor
shr
movsl
sbb
and
in
fwait
dec
out
cwtl
xor
into
add
into
loopne
sbb
aas
push
shrl
pop
fs
pop
push
cmp
xchg
in
pop
hlt
ljmp
in
lods
sub
mov
pop
sub
loop
push
push
xchg
add
rcrb
jo
shrb
movntq
out
jg
js
push
ret
push
test
std
rcrl
cmp
shrl
sarb
mov
xor
xchg
push
out
sahf
adc
adc
dec
mov
or
js
sub
jmp
pop
das
hlt
lods
aas
cmp
xchg
inc
ljmp
cmc
xchg
sub
sbb
insl
jbe
mov
imul
pop
das
cmpsb
add
and
icebp
out
mov
push
mov
int3
addr16
mov
push
inc
push
sub
call
inc
pusha
mov
sti
faddl
in
xchg
mov
push
fistpl
xor
lahf
loope
mov
fcomp
fcomps
sbb
jle
fiadds
test
icebp
cmc
jo
adc
mov
xchg
insl
bound
sar
cmp
lea
test
mov
push
jo
and
out
lret
adc
decl
or
dec
pop
in
mov
rcrl
fldt
inc
pop
fsubr
jb
pop
stos
pop
push
repnz
pop
xlat
mov
in
andb
or
push
push
shll
cs
call
jb
in
dec
mov
popf
jne
mov
sub
imul
inc
push
ljmp
aaa
mov
push
jnp
aaa
rol
pop
scas
mov
jno
jmp
scas
mov
mov
addb
inc
and
mov
inc
pop
sbb
enter
mov
dec
add
add
xrelease
inc
add
pop
mov
jl
cmp
popa
testl
xor
pop
mov
sbb
fs
shrl
mov
cs
sarb
adc
test
sbb
xor
pop
and
cmp
ja
xchg
mov
jbe
mov
rorb
and
andl
add
mov
adc
xchg
adc
pop
aad
cld
inc
mov
mov
rcrl
fs
negb
out
arpl
std
jecxz
or
adc
push
xchg
push
dec
or
jp
mov
cwtl
push
jg
addr16
xchg
aam
out
xor
mov
xorb
add
push
sub
or
and
push
loope
pusha
fisttpl
in
inc
jp
in
jecxz
pusha
dec
and
cmp
fwait
cmpsb
imul
and
sbb
iret
pop
sbb
xor
lahf
es
into
adc
pusha
xchg
movsl
cmp
adcb
or
out
mov
dec
push
pusha
mov
int
xchg
inc
fisttpll
adc
pushf
int
testl
test
and
push
dec
clc
mov
sub
arpl
add
arpl
je
inc
and
loopne
dec
adc
bound
adc
pop
push
and
sti
out
out
push
out
cmpsl
add
lret
dec
push
cld
je
mov
adc
dec
cmp
dec
cmp
mov
daa
lahf
jbe
sbb
sub
test
push
rcr
push
inc
aad
xor
hlt
xchg
fs
sub
or
jp
push
mov
test
lcall
fsubr
jbe
into
pushf
test
fcompl
mov
lahf
dec
inc
mov
daa
loopne
xlat
jo
cwtl
jns
adc
xor
push
enter
imul
fldt
add
cmpsb
push
push
push
outsb
jle
mov
lods
inc
js
xchg
fisubrl
mov
sub
adc
sbb
jae
repnz
dec
inc
rcll
mov
aad
fidivrl
popf
mov
inc
mov
test
pslld
loope
iret
jmp
adc
lods
pop
lock
movsl
sub
xor
cld
dec
daa
cmc
popa
cwtl
pop
push
imulb
mov
test
test
or
shrl
das
loopne
mov
xchg
mov
xchg
push
xchg
sti
mov
add
arpl
aam
mov
mov
mov
jno
inc
popa
insb
inc
mov
mov
sub
sti
jecxz
out
ss
mov
push
stc
aas
daa
xor
popf
cmp
addb
scas
mov
shl
inc
jecxz
sahf
scas
in
cmp
pop
push
or
mov
pop
sbb
ja
pop
ds
adc
pop
lods
push
movsl
push
stos
inc
ljmp
loopne
sbb
or
mov
inc
sbb
lret
mov
fistpl
ret
pop
mov
outsb
sub
cld
pop
mov
or
stos
mov
rcrl
movsb
rcrl
dec
insl
nop
in
pop
jmp
imul
fs
adc
pushf
push
xchg
mov
and
insl
mov
popa
ret
push
emms
nop
dec
call
inc
mov
mov
aaa
mov
sbb
bound
cmpsb
aas
js
aad
imul
sahf
jae
shlb
mov
sbb
inc
push
inc
imul
xchg
pop
into
scas
leave
adc
push
mov
sbb
xor
sub
sahf
dec
sbb
stos
xchg
outsl
aaa
ret
xchg
pop
imull
jle
add
js
pop
je
mov
pop
aad
lret
rcll
icebp
mov
pop
call
add
stc
icebp
mov
xchg
push
push
pop
sarl
and
sbb
mov
sub
xchg
sub
jbe
push
jle
mov
dec
pushf
adc
sti
icebp
movb
outsb
or
xor
hlt
push
dec
cltd
xchg
leave
xchg
pshufw
mov
dec
cmpsb
scas
sub
pop
inc
out
inc
subl
test
fcomp
jne
test
stos
lods
add
push
pop
mov
cmp
into
sub
jmp
jecxz
mov
rcpps
xchg
out
outsl
insl
call
ljmp
mov
out
pop
push
xchg
stos
xchg
dec
push
and
in
cmp
inc
sti
jg
pop
pusha
adc
push
push
cwtl
cli
adc
aaa
test
in
mov
lea
cli
and
and
and
in
ds
ret
add
and
fsts
inc
cmc
push
fcoml
cld
out
mov
shlb
add
push
mov
xor
mov
mov
in
jo
in
icebp
stc
mov
sbb
mov
bound
cmp
es
jmp
lret
inc
pop
xor
pop
incb
aas
dec
loopw
aas
clc
cmp
int
and
sarb
sub
jno,pt
push
repnz
cmp
scas
pop
fadds
out
orl
in
push
aad
ljmp
cld
xorl
mov
aaa
test
sub
and
rorb
pop
mov
push
mov
sub
stos
xor
aam
mov
cmpsl
jle
aam
jns
aad
mov
inc
in
clc
pop
xor
fmuls
mov
inc
bound
xchg
mov
sti
jge
lret
aas
sub
fistl
sub
inc
mov
lock
mov
pop
lds
inc
test
daa
cld
jne
fwait
popa
pop
jl
push
jp
adc
and
ud2
mov
popa
rcrb
and
scas
mov
xor
mov
pop
fstl
fcmovnu
cmc
ret
cmpsb
jecxz
pusha
out
or
add
fs
testl
pop
pusha
iret
es
dec
lods
test
rcll
or
dec
jae
sub
popa
xor
cmp
ds
test
inc
or
out
adc
aaa
nop
mov
inc
lea
xor
cwtl
out
push
dec
popf
jnp
ficompl
scas
or
outsb
lods
jne
mov
mov
add
jae
push
cmp
mov
daa
push
pusha
bound
inc
cmp
ja
add
pop
iret
fisttps
cmp
mov
cmpsb
mov
lahf
sahf
mov
push
mov
sbb
xor
sbb
cmp
add
jbe
cmpb
add
cwtl
data16
lcall
cmp
inc
fidivrl
hlt
mov
or
scas
add
add
xor
xchg
jne
jne
cmp
sti
pop
dec
sahf
ss
daa
sbb
test
mov
mov
xchg
cld
mov
nop
mov
xchg
cwtl
xor
xlat
sub
dec
cpuid
mov
add
jo
jmp
mov
jae
pushf
cmp
push
pop
pop
es
rclb
pushf
iret
in
aad
jp
sbb
sbb
stos
pop
cmpl
mov
jg
jle
les
loop
stos
sbb
fnstcw
xor
and
adc
repz
pop
mov
xor
in
jle
pop
cmpsb
lods
sub
add
dec
std
adc
adc
jbe
loopne
xchg
lahf
jp
xchg
pop
or
rorb
jns
mov
out
inc
movsl
fwait
jo
daa
jmp
imul
pop
fwait
jbe
fidivs
fdivrl
scas
cmp
push
cmpsl
adc
pop
into
adc
push
lds
shll
mov
dec
sbb
cmp
out
fmuls
xchg
enter
push
adc
lea
cmp
dec
stc
mov
pop
dec
cli
je
push
push
pop
out
xchg
dec
xchg
mov
xchg
add
inc
in
mulb
xchg
in
adc
inc
sbb
add
lock
push
aam
xchg
ds
mov
inc
and
jno
cmp
dec
bnd
sbb
dec
lds
nop
subl
xor
push
stos
stc
mov
mov
mov
xchg
and
sahf
mov
arpl
xchg
fisttps
sbb
cs
sbb
std
xchg
mov
addr16
pop
sbb
fsubl
lcall
pop
outsl
es
popaw
cmp
adc
jecxz
or
in
lds
xor
int3
loopne
mov
push
mov
mov
aaa
xorl
jmp
cwtl
jle
nop
roll
sub
sub
subb
pop
mov
fs
xor
sub
mov
xchg
repnz
outsb
int
data16
inc
cmp
xchg
mov
bswap
test
cli
leave
jae
das
push
dec
push
data16
stos
mov
push
mov
sub
lock
mov
fsub
push
cmp
xchg
xchg
cmp
mov
lock
or
fs
daa
sub
cli
cmp
dec
pop
add
fisubl
lcall
xor
inc
or
mov
pushf
in
jne
cmp
jbe
jne
test
xor
lds
ja
jbe
movsb
mov
in
test
inc
add
jmp
add
jmp
cmp
lret
dec
mov
push
cmpsb
bound
mov
in
repz
fsts
mov
stos
jmp
lods
jmp
push
xorb
jmp
mov
aad
out
inc
hlt
adc
mov
leave
into
adcb
mov
jns
xor
cmc
inc
imul
das
jbe
ja
mov
add
sub
ja
jnp
imul
xlat
push
aas
lds
xchg
call
jg
pushf
push
icebp
out
lcall
sbb
xchg
rclb
cmp
call
add
inc
iret
imul
ds
cltd
jl
push
push
jl
jo
mov
inc
je
or
jp
cmpsl
negl
mov
ss
lret
mov
sub
lahf
mov
cmp
test
outsl
adc
xchg
rcl
adc
cmp
xchg
aaa
jo
lods
xchg
popf
adc
sbb
cmc
fsubrs
mov
cltd
das
add
bound
aam
mov
enter
cltd
lock
shll
push
mov
push
je
jecxz
lods
mov
mov
and
push
leave
lock
dec
mov
adc
test
cmp
ljmp
and
dec
or
inc
int3
adc
and
scas
mov
sbbb
into
xor
dec
mov
dec
jno
sbb
ret
dec
subb
mov
fmull
xor
pop
lret
lea
or
adc
test
andnps
sahf
gs
jno
or
out
inc
sbb
mov
adc
and
lods
mov
push
inc
out
mov
add
repnz
push
push
test
sar
mov
imul
testl
xchg
inc
testl
aad
push
adc
or
gs
les
cs
dec
pop
mov
mov
aaa
lret
fisttps
xor
outsb
and
add
xchg
push
xchg
inc
insb
cmpsb
out
test
xor
xchg
adc
pop
xor
dec
xchg
or
icebp
outsl
inc
xor
cmc
jp
sahf
xor
outsb
xor
mov
xor
cwtl
mov
xchg
push
add
incb
imul
ja
into
xchg
movsb
xchg
mov
and
mov
push
push
xchg
rorl
pusha
sbb
fidivs
test
jecxz
gs
mov
fcom
mov
enter
repz
push
jbe
adc
mov
push
inc
pushf
inc
rclb
add
out
andb
push
int
sbb
imul
roll
dec
hlt
fimull
add
cwtl
adcl
dec
popa
inc
call
mov
outsb
ret
mov
sbb
jge
adc
cmp
jo
add
adc
mov
es
push
jg
inc
test
sarb
stos
sub
das
adc
sahf
les
popf
daa
icebp
xlat
push
data16
shrd
push
popa
pop
test
pop
popf
and
jbe
xchg
js
or
add
mov
mov
popa
pop
inc
aam
fsubl
sub
popf
sub
cwtl
mov
cmpsl
inc
ja
aam
icebp
mov
pop
call
mov
gs
pushf
push
int
mov
test
repnz
xchg
leave
or
mov
xrelease
test
adc
cmp
dec
fimuls
jns
inc
add
aaa
push
push
dec
inc
scas
jbe
add
mov
enter
iret
andl
jnp
pop
subl
push
ss
jno
test
in
adc
jmp
pop
aad
stc
stos
mov
out
and
xchg
pusha
cmp
fwait
xchg
push
mov
mov
dec
out
mov
popw
xor
arpl
jmp
mov
pop
cltd
pop
xchg
fisttps
aaa
jo
jp
outsl
push
or
decl
je
dec
or
dec
pop
shrb
insl
mov
dec
cmpsl
and
mov
loope
js
scas
jae
jae
sub
andl
pop
mov
sub
pop
inc
bound
fdivp
sbb
lds
cltd
jno
mov
and
pop
loopne
jne
push
sar
sbb
aad
out
and
lock
fdivp
shl
jmp
add
push
mov
ljmp
xchg
andb
push
es
dec
mov
scas
push
adc
jecxz
add
shr
sub
sub
cltd
aaa
pop
lock
enter
gs
addb
mov
adc
mov
and
xchg
mov
jmp
ret
leave
adc
push
pop
scas
sub
std
dec
cmc
lret
sahf
mov
inc
or
push
mov
xor
jne
stos
sub
int
jmp
je
in
mov
xchg
jmp
push
mov
aam
das
sub
inc
mov
or
and
adc
test
aam
dec
cmp
or
adc
xlat
lods
mov
sub
xchg
mov
adc
sub
aaa
add
mov
icebp
js
sbb
dec
fcompl
popa
stc
adc
shl
rcrl
pusha
adc
stos
add
test
aaa
jns
decl
cwtl
jg
pop
aam
sub
jae
subb
in
dec
hlt
fsubr
mov
nop
sub
ret
mov
jnp
lock
mov
mov
push
lock
sub
mov
aaa
fdivl
ror
je
in
push
testb
add
add
daa
xchg
dec
mov
insl
mov
pop
jno
in
lcall
lea
es
push
jae
aad
cmp
in
mov
inc
mov
sub
outsb
popa
and
cmp
outsl
pop
xchg
stos
arpl
xor
pusha
in
jb
loopne
and
adc
fisubrs
jle
or
jl
mov
mov
xchg
fsts
jp
mov
outsb
push
ljmp
pop
push
loope
pushf
scas
les
inc
dec
sub
imul
jbe
test
ffree
mov
cmc
pop
xorb
add
cltd
push
push
mov
add
rcr
cmp
pop
mov
jne
jmp
insb
and
fldenv
inc
outsb
mov
pusha
loop
jbe
pop
sbb
sbb
bound
daa
mov
inc
enter
ja
pushf
sub
push
leave
es
movsl
adc
incl
pop
dec
aaa
shl
and
pop
shll
mov
pop
dec
mov
andb
dec
sub
dec
pop
jp
mov
push
add
nop
std
jbe
ficoms
test
mov
data16
cwtl
jae
sub
incl
add
das
dec
sbb
push
mov
les
test
push
push
push
push
push
popf
pop
aaa
and
mov
call
aas
rcl
mov
dec
jge
cli
add
dec
out
mov
add
jge
loopne
popf
cmpsl
mov
data16
jmp
icebp
push
and
mov
int
or
mov
xchg
cmpsl
lcall
not
pop
or
inc
lods
mov
std
mov
test
jno
std
mov
jge
inc
rcll
mov
mov
iret
mov
and
add
mov
mov
add
mov
jge
gs
mov
xorl
imul
dec
dec
scas
xchg
cli
mov
js
cmpsl
das
inc
pop
fs
call
pop
dec
jg
test
sbb
lock
mov
subb
int3
add
mov
loopne
xchg
sbb
hlt
arpl
xor
pop
xor
emms
sti
imul
dec
sbb
xchg
mov
es
sbb
ja
sub
mov
ds
nop
in
clc
dec
inc
int
stos
xchg
mov
jb
mov
xor
stos
shll
xor
add
add
xchg
push
fsubrs
imul
pop
mov
dec
ljmp
push
pop
sub
std
lock
in
iret
inc
sti
imul
in
nop
je
mov
lods
arpl
cmc
aas
std
movsl
jo
mov
push
dec
jmp
in
add
inc
add
cwtl
imul
push
jae
mov
fstp
jl
sbb
pusha
nop
sub
cli
sbb
sbb
push
lea
jae
xor
imul
jnp
pushf
pusha
pusha
fs
dec
cli
fiaddl
xor
sbb
xchg
cmp
adc
fsubrs
or
jb
in
ret
push
inc
pop
sbb
into
sub
push
push
roll
outsb
out
mov
or
mov
push
in
cmp
xor
imul
dec
push
out
mov
push
xchg
jmp
int3
push
test
retw
shlb
imul
mov
leave
mov
outsl
test
imul
jne
lea
loop
ret
sbb
clc
cmc
dec
xor
int3
cmp
mov
pop
lcall
cmp
dec
or
outsb
aad
mov
sbb
mov
mov
insl
bound
insl
lea
lret
xor
fcmovb
jo
std
sub
cmpsb
jge
inc
fadds
add
jb
dec
iret
psubusb
cmpl
in
ds
cmp
add
aad
mov
lahf
bnd
pop
sbb
test
sub
cmpb
mov
lds
or
loopne
xor
mov
jbe
in
mov
jnp
icebp
lods
inc
paddusb
pop
fsubrl
push
repz
inc
test
mov
orl
sub
in
pop
imull
ds
mov
sbb
and
sbb
je
inc
add
pop
pop
out
loop
cmpsl
shll
xchg
and
rorl
jb
and
add
dec
push
mov
stc
push
push
adc
dec
dec
hlt
inc
mov
aam
cmp
xchg
enter
loope
cmp
push
daa
mov
sahf
push
xor
mov
idivl
mov
imul
xor
out
aas
xchg
test
add
xor
inc
xor
cwtl
repnz
mov
mov
loop
imul
pop
lea
sti
shl
outsl
adc
gs
out
cld
mov
and
adc
neg
cmpsl
sub
xchg
movb
imul
push
inc
adc
xchg
mov
bound
xchg
sahf
test
add
int
mov
mov
mov
dec
lds
xchg
push
or
push
push
mov
stos
inc
clc
in
jge
fsubr
pop
int3
ja
mov
rorl
mov
stos
jb
cli
test
add
ds
jmp
ja
cmp
xchg
fs
mov
sbb
pop
sbbl
pop
pop
gs
daa
jle
les
sbb
popa
mov
mov
ljmp
dec
gs
into
inc
sti
popf
xchg
dec
jne
and
jae
ljmp
fwait
adc
int3
nop
lret
sarl
clc
aaa
sarl
pop
inc
ss
xor
mov
jl
xor
xor
pop
rcrb
xor
adc
cmp
fisubs
xchg
cmp
inc
xchg
jbe
inc
shlb
ficompl
xchg
pop
rcrb
repnz
jne
loop
adc
pop
adc
repz
negb
lret
inc
adc
push
cmp
cmp
stos
cmc
pop
mov
adc
loop
xor
add
push
in
int3
sbb
xchg
ja
scas
and
jmp
sbb
xor
popf
sub
addr16
add
dec
jecxz
clc
push
push
les
dec
sarb
inc
sub
push
jns
push
jp
pop
xor
addr16
lds
mov
jl
es
mov
sbb
jne
dec
js
nop
xadd
cmpl
pop
cmp
jl
mov
push
pop
inc
test
add
jmp
jnp
loopne
mov
jnp
sbb
lods
pop
js
push
and
jns
mov
out
pop
inc
cmp
xor
adc
sub
out
fstpl
pusha
es
dec
aas
loope
dec
scas
inc
sub
xor
dec
std
pop
fmull
jmp
sbb
mov
lods
mov
stos
jbe
in
test
imull
jle
jle
push
push
sbb
xor
outsl
pop
sub
push
pop
mov
ljmp
jns
add
add
cli
xor
sub
or
pop
jmp
outsb
and
es
push
pusha
xchg
shlb
mov
incb
mov
mov
push
cld
sbb
int3
divb
scas
inc
mov
gs
aam
dec
mov
xor
add
sar
out
mov
adc
jp
jae
popa
adc
xor
lods
cmp
sbbl
inc
sbb
out
and
cmp
icebp
addr16
and
ret
cli
addr16
negb
push
pop
or
jb
outsb
mov
jg
mov
jbe
mov
jae
mov
inc
cmp
and
test
mov
xlat
xor
mov
cmc
fstps
fwait
jmp
loopne
xchg
pop
punpckldq
movsl
fs
mov
inc
mov
adc
inc
cmp
mov
pop
psubd
lock
ret
cld
xor
xor
dec
in
jmp
stc
gs
cmpb
push
dec
lret
js
lock
popf
fcmovne
repz
jne
jbe
or
dec
out
aaa
mov
mov
pop
dec
jecxz
or
imul
inc
mov
movsb
xchg
mov
push
clc
daa
mov
push
sub
pusha
insb
out
xor
int
sahf
repz
push
sti
sbb
fnstcw
lds
mov
mov
or
fisttps
xor
imul
or
and
or
lds
out
incb
mov
jne
ss
dec
adc
cltd
out
inc
mov
jo
cli
shll
stc
xlat
or
jmp
repnz
jo
pop
loope
sub
popa
hlt
xchg
adc
dec
stos
je
push
xor
xor
mov
popf
cli
jle
lret
sub
insl
sti
and
ljmp
repnz
in
lods
fdivrl
in
int3
adc
push
js
aad
sbb
call
pop
pop
rcl
sub
dec
pop
pop
sbb
pop
lds
sub
push
daa
sbb
subb
loop
push
adc
xchg
xchg
icebp
sti
cmc
das
jg
xor
jnp
push
in
pop
fwait
mov
jnp
mov
jp
jbe
pop
jo
insb
or
push
mov
cs
xchg
in
pop
imul
mov
push
std
push
inc
jne
jne
dec
xor
xchg
popf
jle
pushf
dec
mov
mov
xchg
sbbl
addr16
fld
js
out
shl
daa
sti
sbbb
sbb
popf
jp
push
push
arpl
mov
add
icebp
ss
mov
clc
or
add
out
inc
push
pop
aam
inc
shl
or
fdiv
arpl
push
sub
shll
add
ljmp
push
gs
aam
push
mov
lds
repnz
jl
sbb
mov
pop
int
mov
sub
or
jns
movsl
shl
cli
inc
enter
lret
sub
inc
jne
xlat
pop
arpl
cmovge
out
or
or
lods
ret
loopne
lds
lret
in
js
mov
aad
and
ljmp
shlb
pop
mov
jbe
lods
cmp
mov
ret
inc
shlb
mov
and
in
sarl
sbbl
pusha
mov
lret
out
mov
sbbb
add
bound
bound
mov
cmp
sarl
out
nop
popf
xchg
xor
and
jl
popa
shll
shlb
cli
flds
loope
xor
xorl
xchg
xor
clc
or
movsb
mov
bound
xchg
or
push
int3
sbb
enter
outsb
jo
inc
push
das
push
mov
loop
push
xorl
cmp
mov
test
into
cmp
popa
jmp
pusha
popf
mov
loope
sti
push
cmp
mov
aam
add
pop
jns
in
pop
push
xchg
mov
fidivl
fistpll
jge
cmp
rolb
in
xor
loope
or
loopne
or
xrelease
inc
test
xchg
mov
sarl
es
sub
das
sbb
int
loope
out
gs
insb
pop
adc
lods
jmp
fstps
inc
sub
pushf
js
and
lret
lods
mov
inc
mov
or
cmp
rolb
mov
cmp
out
fcmovnb
inc
pop
out
push
movhps
aam
fsub
push
outsb
xchg
ret
mull
outsl
aad
cld
dec
ljmp
pop
add
lods
fsubrs
call
sti
xlat
dec
addl
mov
mov
sahf
jnp
aas
and
mov
gs
dec
in
and
mov
in
cmp
test
and
pusha
movsb
mov
repz
int3
lea
pop
roll
ret
clc
rcr
out
or
scas
or
decl
cmp
data16
clc
std
jecxz
daa
aam
and
enter
loopne
ja
sti
xor
in
dec
int
rclb
add
inc
imul
pop
push
in
mov
mov
jp
push
in
inc
or
sub
pop
lcall
ret
std
jle
and
sbb
and
dec
cmp
ds
mov
subl
jns
sub
mov
push
mov
mov
adc
movsl
lahf
xor
and
nop
cld
push
inc
int
fucomip
cwtl
fnstsw
mov
pusha
cltd
xchg
jmp
inc
push
mov
pop
cmp
xchg
fsubl
test
jnp
loop
mov
cltd
dec
lea
dec
mov
mov
cmp
clc
mov
std
ffreep
xor
scas
pop
mov
ja
or
push
cli
inc
aas
cld
cmc
nop
mov
int3
orb
imul
ljmp
inc
adc
shll
ret
out
movsl
jno
mov
and
pop
sti
mov
les
push
mov
cmp
ss
xchg
pmulhuw
movsl
insb
mov
test
mov
lea
jae
add
in
sbb
mov
mov
dec
jle
insb
dec
shll
xor
xor
jmp
scas
outsl
sbb
lods
clc
or
test
push
loop
mov
adc
mov
lret
pop
cli
sbb
pusha
loopne
mov
or
fiaddl
cwtl
mov
fimuls
in
jno
sbb
xlat
jo
adc
add
call
pop
loopne
inc
pop
mov
pop
cld
jle
jl
stos
loop
test
aam
call
pop
adc
inc
ja
pop
or
mov
pop
fiaddl
push
lods
mov
rcl
mov
arpl
loopne
dec
cmp
insb
in
stc
dec
xor
push
lods
jo
push
rclb
xor
ret
jb
mov
sti
xchg
push
inc
cmp
cmp
sbb
push
add
hlt
push
dec
jns
and
push
xchg
jmp
and
mov
mov
mov
aam
insb
lods
xchg
filds
addl
std
adc
sarb
in
jg
lahf
jbe
mov
xchg
es
mov
add
sub
lret
push
xor
adc
subb
subb
mov
mov
mov
inc
test
sub
pop
mov
popf
addb
clc
aas
push
push
mov
roll
xchg
cmp
cld
mov
lret
add
mov
push
mov
mov
test
adc
mov
sti
mov
shl
lahf
sbb
outsl
int
mov
popa
mov
sub
stc
inc
loopne
loop
mov
or
inc
xor
or
inc
pop
pop
out
jp
or
cs
test
gs
movsb
dec
mov
mov
pop
mov
mov
orl
xchg
scas
test
mov
push
stos
jae
pusha
mov
rcll
pop
lock
loopne
sbb
sub
add
or
adc
fldt
adc
or
xor
test
cld
lods
mov
and
repnz
dec
sub
add
int3
mov
test
in
sarb
bound
push
rorb
rorb
mov
mov
pop
rorl
xor
adc
xor
scas
insb
add
adc
loop
cwtl
stos
and
add
or
jecxz
jp
pop
ret
fwait
push
enter
shlb
cltd
sbb
ret
outsb
bswap
cmpsb
mov
add
aaa
xor
adc
sub
cs
sub
mov
repz
jo
mov
push
pop
bound
jae
and
movsl
shll
and
xor
out
fsubrl
push
jl
ja
mov
or
xor
jb
and
sub
xor
loop
iret
pop
movsb
mov
cltd
cmpsw
pop
xor
arpl
sbb
mov
shrl
xor
pop
ja
mov
jge
orb
mov
popf
loop
xor
sub
add
xchg
jns
push
jb
lahf
fs
je
out
xor
movb
fidivs
stos
popf
cmp
push
loop
jne
jg
add
inc
mov
lahf
mov
lcall
sar
shl
pop
hlt
pop
pop
and
movsb
mov
mov
test
sahf
test
popa
aam
or
sti
enter
cs
movsl
cmp
cmpsl
push
jne
add
loop
sbb
rcll
sub
fadds
clc
sbb
xchg
lock
add
mov
push
nop
call
cmp
jnp
fisubrl
cwtl
popf
test
hlt
dec
push
cmpsb
or
and
add
imul
icebp
xchg
hlt
ds
mov
mov
imul
lcall
aaa
popa
and
daa
dec
mov
xchg
mov
dec
or
lea
jle
sub
imul
lods
jg
lods
outsl
add
push
mov
sbb
push
or
dec
hlt
xchg
mov
mov
sbb
je
fcmovnu
mov
lret
repnz
and
in
xlat
stos
pop
cltd
bound
mov
jle
test
lahf
das
popa
lcall
xor
clc
or
out
cwtl
mov
xchg
pop
adc
hlt
rorl
push
pop
out
in
jge
sti
les
add
nop
lret
add
cli
hlt
mov
mov
inc
outsl
les
adc
movsl
ret
xchg
dec
xchg
xchg
or
mov
xor
jno
pop
subl
adc
rcrl
rorb
dec
mov
sbb
negb
push
lds
mov
push
ljmp
push
xchg
mov
mov
xor
cmp
clc
inc
cmp
jbe
push
mov
addr16
mov
outsl
cld
mul
jle
push
imul
insb
popa
cmp
iret
pushf
shr
pop
lock
or
jg
cld
pop
mov
pop
xchg
mov
push
mov
mov
ret
mov
jmp
add
or
sar
sub
outsb
cwtl
mov
enter
pop
std
repz
pusha
sti
cli
xor
or
push
sbb
test
sub
jg
mov
and
inc
loop
push
and
jecxz
inc
mov
adc
inc
loop
lea
repnz
in
xor
sbb
xchg
push
pop
mov
insb
dec
jb
cltd
push
test
jns
ss
in
push
in
in
xor
sub
jl
cli
dec
movsb
mov
mov
sbb
lods
out
inc
inc
les
in
add
xchg
scas
dec
cmp
jp
cmc
add
jl
mov
sbb
mov
movsl
in
add
xchg
sub
std
pop
call
mov
mov
test
enter
pop
jno
iret
loopne
ss
sbbb
mov
inc
sub
movsl
dec
leave
test
push
inc
mov
pop
into
adc
ret
ret
dec
pop
cmp
mov
das
jmp
jno
push
cmp
push
std
pusha
inc
and
mov
jge
xchg
push
bound
xor
data16
push
mov
sub
push
adc
mov
ss
pop
flds
cli
or
lahf
mov
fildl
mov
in
ss
arpl
scas
jo
rorl
fisubs
xchg
push
or
dec
or
xor
mov
mov
ss
call
dec
mov
dec
sub
rcl
sub
movsb
or
inc
xchg
and
shr
out
xchg
cmova
xchg
arpl
mov
xorb
daa
adc
std
adc
or
sbb
jae
sahf
push
test
mull
push
adc
cli
ficompl
int
std
inc
cli
mov
repz
iret
mov
nop
fistps
push
flds
inc
test
rcll
mov
mov
outsl
rolb
adc
iret
scas
lahf
and
cmp
sbb
imul
test
dec
cmpsb
test
mov
push
pop
mov
mov
aam
int
dec
aam
lret
pop
imul
in
cmp
hlt
clc
test
mov
fs
pop
xchg
cwtl
fucom
fldt
fidivl
daa
call
fcmove
mov
sub
push
pop
pop
cmp
loope
xchg
mov
jmp
sub
mov
xor
pusha
les
or
sbb
ss
pop
gs
pop
inc
jns
cmc
aas
clc
push
xor
jl
movsl
xor
das
fldcw
jnp
jne
pop
arpl
pop
rcll
movsl
inc
sbb
lock
cwtl
in
xchg
add
mov
addr16
mov
jne
pop
in
push
sbb
fs
sub
aaa
cmpsl
cmp
movsb
push
in
jno
pop
les
push
sub
push
sbb
sbb
lds
dec
out
out
add
inc
daa
test
cmc
dec
mov
lds
dec
arpl
movsl
xor
or
mov
enter
mov
fisubrs
sub
sti
or
inc
mov
aam
pop
js
inc
lods
imul
mov
xchg
leave
cmp
sbb
pop
stos
push
cmpl
xor
sub
pop
cmp
xor
push
pop
push
cmc
jns
cld
push
xchg
add
fidivs
xor
xor
mov
mov
sbb
mov
idiv
jo
lods
xor
mov
fnstenv
jecxz
xchg
cmp
inc
lret
adc
in
or
mov
dec
add
out
subl
push
xchg
adcb
mov
add
mov
ret
lods
out
jmp
or
mov
mov
iret
cli
add
popa
mov
cld
pop
aas
sbbb
sbb
mov
inc
sub
push
or
xchg
push
push
lcall
dec
jnp
xchg
ret
adc
das
push
aas
sti
xor
stos
bound
sbb
and
and
fistl
inc
xchg
jg
es
std
jbe
pop
sbb
movsl
js
pop
xorl
mov
xchg
xchg
xchg
dec
imulb
jb
mov
dec
push
outsl
push
and
push
std
fnstsw
ficompl
mov
sbb
int
pusha
add
push
ret
rcr
xchg
enter
and
shlb
stc
mov
xchg
mov
mov
cmp
cmp
shr
in
popf
dec
xchg
or
mov
daa
scas
jb
stos
mov
lret
fidivrs
aad
mov
adc
adc
cmp
xor
jbe
repz
and
inc
jg
test
cs
out
mov
rclb
sub
xchg
pop
shlb
aam
jb
push
fwait
inc
and
lods
or
jle
push
sub
mov
jns
dec
or
mov
hlt
loope
sahf
arpl
add
stc
ds
gs
dec
pop
adc
outsl
rcll
loopne
scas
mov
or
dec
jno
dec
push
jecxz
aad
lea
pop
push
cli
cli
mov
gs
push
mov
pusha
mov
add
leave
sub
or
inc
xor
cmpsb
xorl
sti
mov
or
cmpsl
xor
inc
cs
cmp
subl
ja
rcrl
sbb
xchg
jle
sarb
int3
inc
or
enter
mov
ljmp
xchg
test
inc
push
icebp
or
inc
movsl
shrl
aaa
xchg
mov
int
jnp
scas
mov
push
jne
fidivl
dec
and
or
mov
test
aas
xchg
xor
movsb
cmp
mov
pop
pop
add
xor
mov
stos
add
jbe
push
inc
dec
mov
cmc
jne
push
or
loop
pop
mov
in
xlat
push
data16
shrb
sub
in
lcall
sub
lds
cmp
jns
or
lret
pop
push
nop
cmpsl
pop
mov
insb
mov
pop
sahf
shlb
push
andb
aad
in
clc
push
sbb
jge
ror
sub
mov
sub
push
jmp
cmp
dec
lret
lods
jo
xchg
mov
ja
xorb
iret
mov
mov
sbb
scas
fdivs
lods
adcl
hlt
lea
push
mov
in
hlt
in
lahf
and
lods
add
sbb
adc
cmp
adc
dec
dec
adc
xor
rcll
mov
push
je
inc
loopne
xchg
sbb
sahf
jnp
sbb
hlt
xchg
out
push
adc
xor
enter
push
cmp
jnp
mov
cli
movsb
in
jb
jmp
mov
icebp
or
add
cmp
es
bound
sbb
add
mov
xchg
inc
adc
push
es
cmp
xlat
dec
push
push
enter
pop
mov
xor
in
lods
add
adc
subb
dec
push
out
pusha
mov
xor
or
insb
sbb
sub
inc
push
push
stos
insl
xor
aad
mull
leave
cld
fistps
out
lcall
outsl
pop
lods
nop
popa
inc
cli
mov
loope
cmp
insb
pop
jbe
mov
inc
test
stos
je
fs
hlt
repz
and
ds
xor
cmp
sbbl
xchg
testl
cmp
in
mov
pop
sti
push
pop
std
stc
pop
jns
mov
js
cmc
fnsave
xlat
fwait
pop
xor
mov
hlt
mov
scas
and
mov
adc
adc
subb
add
dec
sbb
mov
and
push
pop
xchg
insb
jmp
sub
jns
enter
adc
sahf
sub
adc
or
or
outsl
pop
mov
in
mov
es
sub
xchg
mov
test
lods
and
pop
jno
mov
jnp
pusha
testl
push
popf
jno
mov
jg
and
dec
arpl
inc
mov
iret
dec
sub
xchg
push
sti
fisubrl
dec
and
sub
pop
cmp
mov
lahf
adc
les
jne
push
adc
add
int
sbb
icebp
push
fistpl
shlb
int3
daa
add
mov
and
pop
mov
push
jge
push
nop
pop
sahf
push
loope
dec
xor
repnz
mov
cli
jmp
cli
stc
aaa
cmp
and
xchg
fmuls
mov
jb
mov
mov
mov
or
ret
aam
test
mov
adc
syscall
mov
mov
sbb
mov
lret
aad
and
xchg
mov
xchg
xchg
enter
mov
call
pop
leave
mov
inc
imul
das
inc
lahf
cmpsb
lahf
dec
adc
mov
in
mov
adc
push
xchg
mov
inc
push
in
or
lock
stos
cli
lahf
push
insb
cmpsb
xor
shll
pop
repz
lcall
mov
addb
in
test
lea
ja
imul
cmpsl
cmp
mov
lahf
mov
jmp
ret
loopne
shr
fs
stc
jnp
adc
aad
pop
mov
ror
shlb
jb
sub
ror
pop
les
into
jae
std
pusha
inc
leave
push
dec
stc
lcall
mov
inc
xchg
sbb
sahf
and
fwait
pop
int
icebp
outsl
loopne
adc
push
sub
mov
push
insl
orb
sub
hlt
jmp
ljmp
test
ret
icebp
cmp
into
or
jmp
addr16
mov
dec
jmp
pop
aad
mov
dec
stc
notb
insl
push
negb
ljmp
call
or
ret
or
jl
push
ja
stc
je
cmp
mov
mov
fdivp
addb
and
imul
lahf
jns
mov
mov
push
jbe
xchg
scas
les
mov
popf
and
sub
push
mov
and
ljmp
roll
cs
test
lcall
jp
add
pop
nop
pusha
mov
pop
sbb
xchg
dec
ret
sti
dec
int3
sahf
xchg
test
outsb
jae
jge
adc
mov
push
xor
or
inc
js
and
push
jg
cld
jb
lcall
inc
cmp
xchg
out
mov
lret
add
push
jb
sub
subb
dec
push
arpl
in
jmp
push
addr16
jg
xchg
push
jno
fxch
popf
and
sbb
dec
test
aas
xchg
lret
lods
call
test
outsb
jl
push
out
push
arpl
outsl
sbb
fidivrs
ret
push
pusha
mov
fs
popf
sub
clc
cmp
aad
xorb
bound
xor
arpl
cwtl
sub
dec
adc
push
ja
out
push
and
sub
je
lods
push
cmp
data16
push
adc
inc
jno
sub
shrl
fwait
dec
call
add
mov
fiaddl
sbbb
mov
test
jle
and
sub
inc
pop
cld
popf
cmp
xlat
cmp
xchg
inc
or
mov
in
fiaddl
out
add
dec
in
subl
jne
je
inc
add
push
mov
popf
sbb
out
subb
mov
sub
sub
add
ja
negb
mov
rorl
ret
dec
inc
aad
push
insl
daa
hlt
add
call
jp
aaa
sub
push
jmp
inc
jns
mov
leave
dec
dec
and
or
inc
push
fnstcw
dec
movsl
sub
adc
jmp
cltd
jae
and
aas
andb
out
pop
sub
insl
adc
pop
es
gs
cmc
jg
mov
data16
inc
or
stc
mov
push
pop
pusha
arpl
stc
sbb
cmpsb
and
fldl
imul
aaa
jb
jg
sti
notl
sbb
cs
addb
xorb
scas
repz
std
cli
push
dec
mov
push
mov
dec
inc
xorl
jecxz
loope
aas
mov
addl
ret
fwait
pop
sub
sub
sbb
pop
pusha
rorl
mov
or
icebp
sbb
pop
or
ret
jp
shrl
xor
xchg
ljmp
test
gs
cmp
xor
bound
lds
cltd
lea
aad
xor
cmp
addr16
add
aas
and
fdivl
outsl
or
mov
sbb
inc
dec
mov
repnz
ret
pushf
mov
daa
imulb
and
sub
std
mov
push
inc
mov
ficomps
cmp
mov
jle
sbb
call
out
aad
mov
lea
and
sahf
cmc
sbb
stos
jo
pop
in
test
or
and
dec
push
fmuls
cmp
pushf
cmp
lods
roll
les
sub
orl
fs
push
dec
outsl
leave
sbb
cmp
pop
xchg
cmp
mov
xchg
fidivrs
pop
sbb
xor
ljmp
cmp
test
push
mov
xor
xlat
in
adc
sti
pop
hlt
mov
mov
in
das
jbe
push
leave
scas
xor
cli
ja
mov
aam
sti
jmp
or
leave
movsl
mov
push
aad
into
in
and
jb
in
lret
inc
ret
fwait
andb
fsub
inc
imul
push
fnstsw
jbe
int3
les
add
movsl
xchg
ja
loop
imul
ret
cmp
loope
test
ret
test
pop
push
aad
fs
add
xor
and
inc
cmp
out
xchg
stos
xlat
int3
add
xchg
nop
jbe
rcr
ror
into
pop
xchg
inc
hlt
xorl
pop
cmp
pop
test
mov
jp
sub
inc
pop
jp
mov
adc
out
jnp
jl
push
add
daa
xchg
cli
outsl
adc
insb
das
inc
push
add
and
dec
sub
jecxz
cmp
rorl
gs
add
sub
adc
arpl
push
xor
subb
xor
clc
aam
push
sub
cmc
subl
xchg
stos
dec
test
test
lods
cmp
add
aaa
pusha
mov
rcr
decb
dec
jne
fs
cmp
loop
or
fildl
xor
mov
dec
icebp
inc
and
mov
push
in
leave
inc
add
and
adc
and
adc
adc
cmp
adc
xchg
outsl
jg
mov
lods
cmc
lods
sub
pushf
dec
xchg
in
fsts
or
pop
nop
or
out
jno
pushf
mov
fldcw
nop
daa
mov
sub
enter
rcll
cli
ret
enter
or
and
fsubrl
jecxz
divl
pop
inc
adc
sub
adc
rol
into
lea
mov
fwait
mov
push
aam
das
mov
jo
call
dec
out
sbb
inc
clc
xchg
sub
out
movsl
shr
inc
gs
ds
pop
adc
outsl
addr16
jp
xchg
out
xchg
and
mov
shl
mov
and
cmp
pop
mov
lret
and
vpaddsb
sub
sbb
xor
popf
fimuls
dec
cltd
lds
ljmp
pop
dec
add
ret
push
loop
loopne
push
divb
int
mov
push
out
push
pop
into
xor
jle
or
lret
clc
fmulp
cwtl
inc
int3
pop
sbb
xor
mov
pushaw
adc
jbe
gs
out
jp
jo
loope
push
mov
mov
jb
leave
ret
dec
cmpl
push
adc
mov
cs
xchg
iret
inc
or
sbb
scas
ret
mov
adc
add
cmp
mov
inc
jecxz
mov
pop
loop
fstl
nop
movsb
sbb
mov
js
stos
insl
mov
pop
jo
push
in
mov
cmc
jae
pop
dec
xchg
dec
shl
sub
sub
out
mov
cmpsl
testl
add
dec
clc
pushf
jp
cmp
mov
out
andl
jl
movsb
je
mov
test
or
and
or
push
mov
xchg
xchg
cltd
mov
jne
insl
in
xchg
mov
pop
or
inc
dec
xchg
xchg
pushf
loopne
in
out
jae
ret
repnz
jg
xor
add
push
js
popf
sub
imul
in
enter
test
xor
dec
xchg
movsb
mov
cmp
sti
out
mov
push
popa
and
aaa
or
fldcw
ret
or
mov
lahf
lods
or
push
push
sub
jno
insb
iret
fistps
inc
push
sbb
inc
mov
push
push
adc
inc
sbbb
mov
push
and
pop
call
xchg
push
push
cmpsb
out
mov
shrl
mov
loop
mov
push
sbb
lret
jl
out
ja
jg
and
mulb
loope
cwtl
stc
popl
stos
push
bound
shrb
scas
cmpsl
push
cs
insb
jo
inc
addl
dec
jae
mov
jb
add
rcrl
xchg
lods
push
dec
test
sbb
jno
sbb
out
inc
sbb
cmpsb
jbe
and
sub
mov
popf
sbb
rcr
fcompl
rorb
enter
cmc
cs
pop
mov
pop
push
adc
pop
int3
lods
sub
dec
int3
aad
sbb
incb
dec
sbbb
jno
jg
inc
dec
popa
jecxz
add
xor
cmp
add
xchg
outsl
xchg
movsl
shrb
scas
push
push
push
push
popf
sbbl
or
out
aad
ja
xor
pop
jne
inc
and
out
xchg
lret
icebp
inc
sbb
xlat
stos
and
fs
pop
jl
inc
dec
imul
xchg
lea
bound
xor
inc
in
loopne
loope
cli
and
fisubs
cli
pop
cwtl
push
mov
pop
inc
mov
inc
pop
jp
xchg
xor
push
fstl
aas
jno
and
test
cmp
stos
inc
out
ljmp
int3
push
pop
daa
pop
test
mov
xor
pop
sub
inc
push
test
lret
out
cmpsl
sti
cmpsb
ss
nop
std
push
shrl
repz
jge
mov
and
jbe
push
inc
sub
fs
cmp
jle
test
xchg
je
cmp
testb
xor
pop
xorb
les
es
inc
dec
mov
sub
das
xchg
hlt
stc
mov
xchg
scas
out
xor
and
adc
cmp
rclb
sti
push
jno
mov
mov
pop
xchg
cli
fdivs
lahf
pusha
popa
dec
out
push
or
pop
pop
push
dec
sarl
or
jb
or
int3
mov
setge
inc
add
rcll
fistl
loope
imul
lock
pop
ss
inc
repnz
mov
mov
std
jo
fisubrs
sbb
movsl
inc
sub
outsb
cmp
sub
fs
popf
je
adc
int
lcall
xor
aaa
stos
dec
lcall
add
int3
cmp
je
cmp
clc
push
xor
mov
daa
daa
subb
jg
mov
pop
mov
mov
push
daa
add
insb
pop
pop
adc
sub
and
outsb
aam
push
mov
jb
test
cmc
mov
mov
movsb
repnz
xor
mov
add
sbb
pop
xchg
inc
mov
sbb
adc
test
and
mov
dec
pop
ja
add
notb
xor
movb
sbb
cmp
imul
aas
cmp
jg
and
add
mov
jo
fstl
shll
aas
fisubrl
movsl
cmp
cli
inc
inc
mov
movsl
or
dec
loop
sti
sbb
pusha
adc
scas
hlt
lcall
mov
das
repz
push
lret
pop
add
cmp
jb
pop
inc
iret
out
imul
insb
fdiv
out
in
push
out
adc
jne
cmpb
ja
adc
and
js
daa
inc
push
aas
repnz
inc
sub
jae
mov
cwtl
lret
push
mov
adc
js
insl
dec
xlat
dec
enter
arpl
int
mov
stc
mov
or
and
sbb
xor
ficoms
add
cmp
subb
fimull
and
stc
mov
pop
jns
push
or
inc
loop
xlat
rorl
xchg
loopne
sbb
rcrl
data16
fistpll
jnp
iret
aam
push
xlat
bound
popa
jg
pop
call
pushw
pop
inc
xchg
adc
push
std
add
jp
dec
shll
jp
loop
cmp
xchg
xchg
push
ds
dec
pushf
aam
push
test
or
xchg
stc
mov
fs
pop
mov
hlt
dec
inc
lock
push
push
ret
jne
jmp
out
xchg
lock
jge
push
cwtl
fsubs
fs
mov
lret
and
mov
mov
add
movsb
sahf
xchg
add
stc
lcall
mov
loop
movsb
mov
push
int
mov
cltd
fwait
lods
test
mov
shrb
pop
dec
scas
rol
inc
cmp
nop
loope
int3
jg
push
addr16
and
repnz
sub
in
insl
dec
sub
loopne
popa
push
jb
pop
xor
in
cs
xchg
stos
mov
and
in
mov
ret
mov
mov
arpl
lcall
lods
push
cmp
mov
xor
pop
or
fs
loop
or
pop
mov
mov
push
sbb
sub
jge
lods
jge
rcrl
lock
cli
ja
mov
adc
xchg
dec
movsb
mov
push
jne
in
adc
faddl
repnz
jns
stc
adc
or
jne
into
xor
sbb
loopne
neg
stos
stos
ss
ja
cmp
mov
push
inc
and
jle
popf
cmpsb
or
push
jge
push
aad
subb
sbb
adc
sub
aad
add
cmpsb
aaa
stos
in
ficoml
push
dec
imul
scas
push
mov
push
push
rcrl
push
outsb
lock
push
stc
cli
pop
fidivrl
ffreep
cltd
cltd
ret
mov
xor
cltd
adc
call
mov
cwtl
add
push
xchg
jo
js
lahf
add
sti
lret
mov
fiadds
sbb
aaa
mov
or
cmp
fs
xor
mov
and
outsl
call
loop
daa
lods
adc
mov
lret
sahf
sbb
mov
push
pop
jb
int
add
cmp
iret
test
mov
fidivs
fbstp
test
je
fildll
cmpsb
jge
testb
inc
test
mov
mov
psubsb
pop
flds
and
pop
jle
sti
ds
shll
mov
dec
push
mov
stos
push
stc
pop
sbb
ret
mov
lret
test
push
arpl
repz
pop
dec
add
jo
bound
and
shrl
mov
pop
out
mov
cmp
pop
loope
outsb
std
sbb
jne
shlb
popf
movb
xchg
out
lret
lret
inc
cmp
pop
ror
inc
push
xchg
add
add
jge
mov
in
fwait
jns
mov
imul
pop
int
js
enter
mov
daa
int
add
jl
dec
outsb
sbb
lret
and
jl
sbb
mov
addr16
push
cmp
dec
or
mov
std
push
cmp
ss
call
dec
in
push
xor
xor
cld
movsl
insb
mov
xor
and
sbb
neg
movsb
jecxz
call
into
or
sbb
pop
adc
js
notl
mov
ss
inc
in
adc
mov
movsbl
aam
sub
pop
jle
loopne
ja
add
mov
lea
push
and
push
incl
push
xchg
lds
cmp
cmp
jmp
lods
pop
scas
pop
lods
js
inc
data16
and
std
push
jecxz
cmc
popa
fdivl
pushf
cld
and
stos
lods
bnd
mov
into
cmpsb
fsubp
sub
sub
maskmovq
notl
inc
push
std
pop
call
mov
push
adc
adc
dec
subb
jmp
out
icebp
xchg
out
dec
cmp
mov
loop
sub
mov
mov
pop
push
dec
cmp
mov
pusha
jne
cli
jnp
cmpsb
stos
push
mov
adc
sbb
rolb
xor
mov
ljmp
xor
add
fdiv
mov
pop
lods
mov
sahf
mov
ja
jle
repnz
or
adc
jg
xchg
jno
and
bswap
or
cmp
call
jno
leave
push
xor
outsb
pop
inc
push
jae
lahf
daa
jbe
xor
pop
pushf
dec
test
mulb
jle
mov
scas
xor
push
outsl
xchg
adc
scas
lcall
sub
lock
rclb
mov
icebp
fbstp
ret
or
push
jg
cld
sbb
mov
jmp
and
dec
ja
jne
imull
repnz
jmp
das
das
pop
xor
dec
shll
pop
pop
push
arpl
xorb
lret
and
pushf
jns
sbb
scas
fadds
add
faddl
xchg
adc
xchg
dec
jb
fstpl
seto
dec
call
pushf
push
jge
or
xor
cmp
cmp
adcl
add
outsb
adc
add
cli
xor
mov
fwait
leave
subl
movsl
or
mov
cmp
sti
pop
cmp
jle
mov
dec
adc
pop
cmc
cmpxchg8b
int
jg
cld
jmp
test
jmp
jno
lahf
add
jo
iret
dec
into
or
shlb
xchg
pop
adc
mov
icebp
cmp
dec
sub
lods
dec
mov
mov
pop
pop
mov
push
pushl
mov
test
fs
xorl
cli
cmc
imul
lods
pop
sbb
cmp
pop
cmp
push
loope
inc
aam
push
mov
dec
lahf
inc
fs
outsl
lret
jl
or
bound
sub
popf
cltd
lcall
push
mov
stc
jb
or
shll
or
movsl
outsb
mov
sbb
cmp
ja
pop
jmp
sbb
lods
sub
inc
pop
and
aad
push
lods
repnz
mov
aam
sahf
mov
lock
lock
dec
pusha
mov
mov
jge
and
add
push
mov
daa
cmp
imul
or
sti
mov
cltd
dec
mov
pop
fs
xor
push
mov
add
inc
jecxz
push
cmp
sub
arpl
push
stos
mov
pop
inc
mov
and
sub
xor
popf
pop
je
scas
lods
lock
ret
push
insl
xchg
sahf
cltd
mov
enter
xor
adc
push
data16
mov
xor
xchg
xchg
movsl
dec
scas
adc
or
push
pop
push
iret
nop
mov
push
inc
out
or
mov
test
pop
aad
add
adc
mov
jge
dec
div
xchg
gs
lcall
cmpsb
mov
or
icebp
cltd
je
scas
icebp
dec
xchg
je
out
aaa
ss
into
stos
jo
rcrb
in
fistpl
push
cli
xor
cmp
or
ret
or
ss
jecxz
subb
ficoml
sub
cli
pop
mov
dec
mov
les
popa
icebp
das
js
adc
insb
add
sub
jne
jecxz
nopl
jns
insb
push
mov
push
notb
mov
fdivr
push
push
cmpsb
cs
push
sbb
pop
cmp
enter
bound
cli
cld
dec
inc
insb
jl
fstpl
mov
popf
or
ja
cs
push
inc
insl
sbb
mov
push
adc
dec
loope
xchg
dec
addr16
pop
enter
push
in
movsl
mov
dec
mov
cwtl
mov
aaa
lds
add
jl
push
dec
fiadds
cmpl
out
ret
lds
mov
je
and
scas
sbb
cmpsl
es
and
mov
cwtl
pushf
dec
sub
dec
loop
mov
pop
sti
mov
mov
or
pop
cli
aad
sub
mov
sub
xchg
stos
imul
int3
repnz
xor
scas
sbb
aaa
cmp
pop
add
lea
outsb
daa
lcall
movsb
arpl
xchg
imul
mov
mov
cmp
mov
mov
mov
mov
add
mov
aaa
loop
jge
out
pop
lea
jmp
aam
inc
int3
adc
ficoms
shll
aaa
test
test
jbe
in
xor
sbb
jno
iret
mov
dec
cltd
out
adc
sbb
sti
iret
mov
sub
rcrl
cli
shll
push
and
fs
out
mov
add
arpl
jl
pushf
subb
neg
outsl
xor
cmc
shl
pop
pop
bound
in
dec
movsb
cwtl
jp
dec
jg
mov
addr16
mov
popf
stos
sti
adc
mov
in
enter
mov
xor
lahf
push
push
loopne
cld
dec
jge
jp
outsl
inc
stos
jbe
xchg
mov
mov
or
std
test
mov
or
dec
mov
loopne
lret
lret
ret
sub
ret
pop
in
ret
mov
fnstsw
mov
in
add
xchg
jns
add
lods
inc
xor
add
scas
outsb
inc
scas
adc
dec
add
popl
sbb
cmp
mov
sahf
dec
jno
push
jl
and
cmp
lock
sub
enter
mov
imulb
and
pop
sbb
mov
xor
jbe
sub
addr16
out
dec
inc
cmpsb
dec
mov
out
inc
ljmp
adc
call
mov
aad
jmp
lods
sbb
jle
mov
scas
mov
mov
dec
cmp
add
aam
push
mov
mov
dec
mov
inc
push
add
push
dec
jmp
cmpl
jne
fcompl
pusha
mov
inc
xchg
stos
push
andl
push
shrl
sbb
xchg
loopne
cmp
xor
jl
cld
loope
insl
mov
stos
cltd
jl
inc
pop
mov
loop
dec
inc
push
int3
fs
push
shrl
and
dec
out
lds
push
test
sbb
add
xor
fcompp
aaa
pusha
cld
imul
jle
or
aad
je
test
aaa
sbb
pushf
jp
roll
enter
lret
dec
rolb
arpl
sub
xchg
xor
dec
enter
inc
sti
sbb
out
std
xchg
int3
mov
jecxz
jns
mov
xchg
xchg
dec
pusha
inc
test
sub
les
incl
outsl
ficompl
in
xor
jns
stos
and
jbe
and
xchg
jb
popa
mov
sti
insb
jno
pop
movsl
les
jnp
fsubrp
adc
roll
push
dec
scas
shl
dec
and
push
xchg
aaa
add
cmc
mov
out
mov
dec
pop
in
outsl
adc
movsl
loope
neg
roll
vmovd
inc
das
pushf
add
mov
outsl
mov
movsb
mov
jp
and
inc
ljmp
and
lods
or
cmp
xchg
lcall
repnz
lahf
or
mov
insl
inc
lds
pop
mov
dec
xchg
jecxz
adc
add
pop
inc
fs
mov
push
jge
pop
sbb
test
pop
mov
mov
std
aad
iret
rclb
fstps
xor
out
bound
push
mov
jecxz
mov
bound
sbb
adc
inc
sti
lods
sahf
xor
cld
sub
lods
adcl
decl
xchg
adc
xor
xor
inc
js
rclb
sub
xor
jno
adc
inc
jmp
sub
fcmovnbe
mov
dec
push
jl
jl
es
inc
push
jae
dec
cmp
add
mov
out
fs
xchg
ljmp
inc
mov
sub
adc
mov
or
aas
fwait
dec
in
int3
and
and
orb
mov
cmp
pop
cmp
loop
mov
clc
imul
and
cld
and
pop
mov
mov
cmp
add
pop
add
and
std
int
mov
or
sbb
iret
mov
lods
movsw
icebp
sub
pop
lea
and
dec
push
adc
icebp
jecxz
sbb
int
movsb
je
aaa
and
and
cwtl
dec
mov
sbbb
daa
aas
or
leave
lods
jl
in
pop
outsl
xor
jne
add
mov
dec
aam
addr16
lahf
test
lods
mov
pop
inc
jnp
dec
mov
pop
push
mov
test
add
pop
leave
negl
xor
sbb
in
lds
rcr
pop
scas
xchg
movsb
xchg
cmc
movsb
popf
mov
sahf
rcrb
in
xor
lret
insb
jae
in
push
pop
push
cmpsl
fwait
call
jge
iret
jno
mov
inc
jae
ljmp
cmp
js
sbb
xor
pop
inc
js
pop
pop
ret
andb
push
mov
pop
addr16
test
cmpsb
scas
ja
loop
jmp
rcl
mov
adc
mov
les
test
push
pop
jg
mov
mov
loopne
pop
fcmovu
jl
enter
add
xlat
mov
loopew
cmp
lds
lret
mov
out
mulb
adc
dec
jl
gs
cltd
jns
adc
pop
pop
mov
cld
test
lds
sbb
es
inc
pop
insl
sub
addr16
into
and
pop
clc
scas
insb
push
es
lahf
push
incb
xchg
inc
arpl
in
movsb
mov
std
test
dec
xchg
int3
pop
aam
push
mov
lret
sub
stos
mov
sbb
loopne
cmp
jns
cmp
sarw
push
bound
gs
mov
lret
sahf
push
movl
movsb
inc
sahf
cmp
xor
xchg
iret
add
sti
sub
or
jbe
and
pop
mov
aam
dec
adc
inc
bound
in
inc
mov
enter
mov
sub
and
fcoms
ret
nop
inc
mov
sbb
shll
rol
push
sbb
leave
sub
sbb
add
pop
fidivs
mov
imul
shll
ds
inc
mov
lret
das
push
xor
dec
aam
mov
sbb
adc
testl
insb
pop
pop
mov
mov
mov
or
push
mov
aaa
or
xchg
jae
dec
inc
rcl
push
aad
fwait
mov
aam
and
xchg
movsb
xor
movsb
jg
test
pop
std
dec
loope
outsl
mov
inc
jl
leave
addb
dec
or
xor
loopne
jg
clc
xchg
cmp
stos
ss
repz
mov
gs
add
or
jle
lock
and
xchg
or
icebp
push
pop
loop
rorb
aas
cwtl
repz
das
ret
sbb
nop
or
lcall
nop
loop
sahf
js
push
and
fidivl
out
inc
xor
mov
pop
cmp
mov
xchg
scas
scas
jp
mov
xor
shlb
stc
and
mov
jecxz
jae
jge
mov
mov
pop
push
aaa
add
pop
adc
int
iret
xorb
movsl
push
insb
aaa
outsl
and
cld
and
sbb
or
push
dec
push
ret
out
sbb
dec
sbb
push
dec
dec
inc
pushf
inc
xchg
sarb
fisubl
push
push
pop
cs
inc
jae
jb
add
mov
or
les
lock
insb
inc
push
test
mov
push
not
jge
mov
outsb
mov
mov
push
and
fisttps
mov
testb
xchg
mov
lcall
rcrb
int
xchg
jno
clc
leave
daa
loop
repnz
jno
mov
lcall
xchg
in
dec
icebp
lods
int
ror
adcl
push
inc
aaa
imul
dec
int
jge
repz
add
mov
fs
push
mov
mov
test
stc
xor
mov
data16
mov
aas
mov
test
in
cmp
xchg
rcrb
sub
xchg
inc
xchg
push
insl
pop
pop
jbe
jl
insb
pop
enter
jnp
xchg
mov
aaa
out
cmc
or
xchg
dec
ficoms
out
ds
and
in
cmp
and
pop
inc
mov
or
jp
ds
xor
mov
in
ror
sti
add
xor
add
and
pop
fwait
add
cmpsb
les
jmp
addr16
mov
adc
ret
lcall
insb
inc
adc
ss
hlt
and
popf
outsb
je
jge
call
dec
int
stc
xchg
push
jne
std
mov
pushf
jb
dec
mov
je
daa
pop
pop
jne
dec
or
sahf
loopne
xor
xor
fdivrp
das
imull
jl
les
stos
add
loop
fisttps
jae
sub
stc
fsubrs
outsb
out
stc
push
je
inc
fcoms
pop
pusha
das
push
adc
lcall
into
mov
pop
xadd
shlb
repz
std
aaa
sub
mov
int3
js
xchg
cmc
cmp
clc
clc
or
ret
movsb
fmuls
and
in
or
mov
dec
bound
cmpsl
sbb
sar
outsb
dec
out
sar
movsl
xor
popa
xlat
sub
sbb
dec
xor
aad
fildl
enter
pop
cmpsb
or
lret
push
mov
data16
pop
fsub
lds
mov
ljmp
mov
jl
sbb
xor
out
gs
pop
lods
ljmp
or
push
into
out
cmpl
int
addb
xor
std
mov
lcall
pop
cli
dec
push
cmp
dec
xor
push
xchg
xchg
and
js
and
jb
sbb
gs
sbb
push
imul
mov
lock
mov
ret
lock
mov
repnz
cmp
stos
aaa
add
jecxz
nop
jne
popa
sub
cmpsb
shl
fstl
jl
add
es
xchg
mov
mov
jae
loop
int
lea
lock
scas
lds
lock
add
mov
leave
jge
outsb
in
shlb
setne
std
aad
jge
dec
dec
and
xor
mov
adc
add
mov
lea
mov
inc
popf
xchg
push
push
sbb
movsb
ljmp
push
mov
mov
aaa
pop
test
aam
pop
mov
das
mov
xor
inc
imul
cmp
in
or
ret
mov
popf
xorb
loop
mov
mov
je
push
lahf
sbb
iret
lods
icebp
stc
nop
roll
sahf
inc
std
inc
pop
push
adc
pusha
fdivl
mov
inc
pop
lods
inc
mov
cmpsl
and
inc
xchg
and
cmp
mov
xchg
in
fisttps
movsb
outsl
xchg
into
stc
lods
adc
pop
outsb
aad
fisubs
cmp
gs
pusha
loope
sub
aas
inc
push
push
adc
jae
mov
ret
aas
xchg
insl
loope
icebp
mov
mov
loopne
outsb
pushf
popl
int3
mov
imul
cmpsl
cwtl
sbb
sub
cmp
int
dec
pop
sbb
fstl
or
loop
xchg
and
les
pop
shlb
dec
xor
add
arpl
mov
loop
xchg
in
ljmp
sub
lea
sub
mov
pop
inc
jo
push
inc
js
dec
dec
mov
or
and
inc
or
in
sti
insb
hlt
inc
ja
and
mov
and
sahf
nop
leave
cs
lds
lcall
gs
pusha
and
cmp
cli
aam
mov
xchg
js,pt
pop
add
mov
add
xor
repnz
pop
push
and
pop
test
mov
mov
sbb
adc
jnp
push
sbb
adc
push
and
sub
pop
sbb
mov
cmc
push
xor
shrl
adc
in
nop
mov
push
sbb
add
and
mov
push
test
adc
ss
jns
mov
into
dec
pop
xchg
loopne
in
cltd
shlb
clc
add
mov
sbb
out
dec
stos
pop
mov
jmp
mov
inc
add
mov
inc
adc
push
faddl
ret
stos
ja
xor
jb
cwtl
sub
push
inc
movsb
push
adc
sub
or
jno
lret
mov
push
loopne
aam
in
out
mov
mov
cmpsb
and
push
push
sar
and
popf
loop
cmp
sub
movsl
divb
fistps
jns
dec
loopne
add
lcall
mov
mov
inc
push
add
jae
jp
push
std
cmp
dec
int3
and
and
pop
adc
add
cli
xchg
shll
ret
mov
jns
and
daa
pop
scas
mov
aam
mov
lock
push
mov
dec
push
test
mov
cwtl
outsl
sub
fwait
add
pop
push
cld
mov
test
mov
push
inc
cld
cmp
inc
scas
cmp
push
pop
inc
or
or
mov
pop
mov
dec
das
scas
out
repz
aaa
xchg
cmp
inc
push
pop
add
fs
sbb
mov
jl
jae
sbb
std
jnp
sbb
and
xor
cmpsb
mov
inc
bound
or
bnd
mov
jecxz
inc
repnz
mov
dec
jle
sub
repnz
jmp
dec
pusha
cmp
xor
jnp
scas
ret
dec
dec
mov
pop
add
ficoms
in
into
mov
cmp
mov
imul
sbb
xchg
jecxz
push
lock
push
std
sub
loop
inc
mov
dec
fidivl
dec
xchg
mov
int3
in
xor
pop
mov
adc
sahf
sub
mov
ds
sub
fs
imul
dec
ret
das
daa
cmpb
add
cmc
mov
in
jge
adc
das
scas
fistpll
pop
int3
out
test
jle
in
dec
inc
rcll
push
pop
push
subl
pop
adc
add
into
pop
adc
pop
mov
sarl
inc
xchg
mov
pop
dec
arpl
push
push
in
mov
xor
test
cmp
lods
push
shrl
mov
dec
inc
mov
jno
repnz
fcompl
call
popfw
cmc
repz
out
add
cmpsl
outsb
or
ja
inc
adc
jecxz
shl
scas
imul
pop
and
add
aas
pop
addr16
push
fs
shlb
hlt
loope
dec
fcompl
sbb
mov
mov
cltd
sahf
scas
xlat
add
push
bound
or
push
sub
push
mov
cmp
inc
push
pop
jo
aas
sbb
or
cltd
in
dec
into
aad
aad
ret
xchg
dec
add
push
lea
pop
pop
mov
or
es
insl
xchg
orb
ljmp
jp
jns
in
mov
jae
add
mov
clc
leave
fs
out
loop
add
into
fldt
in
fcoms
xchg
add
mov
xchg
or
inc
movsl
add
inc
in
dec
or
mov
inc
or
aaa
std
stos
loop
mov
pop
mov
push
outsl
add
xchg
sub
in
xor
mov
loop
xchg
add
xchg
inc
hlt
stos
and
std
add
fstpl
cwtl
and
pop
divl
mov
jle
call
pushl
xchg
loope
bound
into
jmp
shll
add
call
arpl
negb
sub
xchg
stc
push
arpl
inc
adc
mov
dec
adc
sbb
push
jl
mov
jo
mov
sub
aaa
adc
js
jg
in
int
xor
outsb
sahf
mov
repz
sbb
and
mov
push
lret
xchg
lret
rol
sbb
mov
adc
inc
jno
jns
fs
xor
add
cld
movsl
leave
xor
orl
out
popa
outsb
push
ret
loop
and
xchg
out
xchg
lret
dec
inc
mov
jne
jge
divl
mov
cmp
jnp
or
jbe
imul
mov
fcom
lods
mov
fstl
mov
pop
call
ror
inc
push
shr
jae
dec
xlat
hlt
mov
call
xchg
or
xchg
pushf
leave
outsl
out
in
add
mov
cmp
inc
inc
jg
or
not
enter
mov
sub
xor
ljmp
xchg
adc
icebp
stos
xor
mov
pop
xchg
sbb
and
in
push
and
xlat
cmp
imul
or
xchg
cmpsl
sub
pop
cltd
mov
lea
sub
jg
push
sub
aaa
imul
or
cmp
roll
mov
loopne
jl
test
jl
mov
mov
and
pop
sub
in
cmp
mov
and
fstpl
loop
xor
xchg
mov
cmp
fs
mov
sbb
pop
adc
cmp
xor
imull
pop
xchg
mov
inc
rorb
jg
sbb
xchg
nop
arpl
xor
xchg
mov
cmp
lods
mov
rorb
pushf
pusha
or
rcrl
push
loopne
not
lcall
push
movsl
ret
adc
in
insl
nop
fwait
lret
xchg
call
jae
je
inc
sbb
fs
rol
or
fdivrs
mov
mov
adc
xorb
ja
add
add
dec
mov
xor
inc
sbbl
jo
cmp
add
addl
dec
ja
xchg
daa
push
and
jp
dec
fwait
dec
mov
jle
or
adc
pop
mov
push
sbb
add
push
push
mov
push
xor
sub
mov
jb
dec
lock
adcb
mov
fcomip
add
sbb
dec
xchg
pop
sub
das
outsb
mov
fwait
inc
movzwl
fstpl
out
int
inc
push
pop
insl
push
fwait
mov
push
xor
pop
leave
pop
aas
inc
xlat
loop
outsl
lahf
adc
lcall
fwait
popa
inc
movsb
mov
fs
stos
mov
cmp
adc
stc
cs
mov
add
mov
stc
or
pop
pop
mov
out
inc
es
inc
sbb
jl
or
jg
idivb
gs
adc
xor
test
lcall
mov
mov
sbb
push
mov
adc
popl
popa
mov
shr
inc
cs
xor
xor
push
add
jne
ret
ror
pushf
inc
adc
mul
popa
inc
aaa
fwait
cmp
mov
stos
popf
cmpl
inc
pop
xchg
jmp
aad
xlat
outsb
cmp
cs
subb
jl
mov
dec
in
cmc
push
dec
cmp
idiv
xor
dec
mov
iret
mov
shll
xorl
int
push
mov
jae
rorb
inc
and
sub
xchg
leave
cmp
mov
adc
and
ja
push
sahf
mov
dec
ret
lret
lahf
clc
ljmp
dec
test
rcll
xchg
xlat
dec
or
xor
push
push
cmpsl
sti
sub
pop
mov
leave
subb
mov
dec
dec
mov
repnz
push
cmp
loop
cmp
sub
cwtl
pop
add
mov
les
add
outsb
lock
dec
idivl
lock
mov
leave
cmp
notl
testb
inc
mov
out
fldt
and
xlat
xchg
xor
inc
mov
adc
test
cmp
jnp
shrb
mov
jmp
lds
iret
xchg
scas
andb
xor
and
icebp
push
dec
pop
aam
inc
jb
iret
sub
call
es
sti
lret
fstpt
add
pushf
mov
lret
lods
mov
jns
mov
in
mov
inc
mov
lret
push
push
call
xchg
dec
fsubs
xchg
mov
pop
mov
rclb
cmp
adc
mov
ja
or
shrb
in
out
inc
jmp
xchg
mov
mov
push
addl
pushf
or
out
stos
mov
scas
iret
jnp
adc
loopne
push
adc
adc
movsl
cmp
testb
ja
inc
adc
cmpsb
mov
sub
mov
in
dec
into
insb
std
jle
xchg
mov
mov
inc
sbb
das
mov
add
xchg
sub
lods
push
inc
dec
pop
cmp
xlat
xchg
cmp
adc
jge
xor
mov
push
pushf
sub
ret
inc
rorl
adc
inc
jecxz
out
jp
out
cltd
loopne
push
into
dec
push
adc
in
je
xchg
mov
outsb
xchg
and
dec
ret
icebp
mov
aas
cmp
adc
and
inc
lods
push
pop
inc
add
or
or
fsubl
out
or
mov
mov
lea
xor
sti
ret
lock
dec
inc
or
icebp
jno
sub
adc
data16
jmp
js
stc
push
fwait
cmp
mov
inc
insl
inc
push
test
sti
xchg
xchg
dec
cmp
or
int3
and
mov
cmp
xchg
aas
les
arpl
lods
hlt
cmp
cmp
xchg
adc
push
sahf
lret
jae
pop
movsl
xor
push
repnz
jno
mov
pop
addb
inc
jl
addr16
movsb
jl
xor
xchg
negl
lahf
pushf
ss
and
mov
jp
push
sub
shrb
jl
push
movsl
add
xor
push
xchg
add
dec
xchg
pop
pop
add
jno
je
mov
stc
insl
xlat
aas
jge
mov
sbb
cli
lret
clc
pop
and
ficompl
aas
int
sahf
sti
sbb
xchg
lods
xchg
cltd
fs
inc
rcr
jmp
push
lds
sarl
or
das
dec
push
jbe
repnz
lds
or
lret
out
adc
test
jecxz
and
cmp
add
fnstenv
adc
ss
sbb
mov
push
sahf
lea
subb
movsl
sbb
or
or
adc
jg
xchg
or
lods
lcall
addr16
insb
inc
fcomps
sbb
pop
scas
les
lods
rcrb
xchg
jp
scas
jmp
jmp
in
push
mov
int
cmpb
aaa
sub
jle
push
jmp
push
dec
shrb
js
jl
lods
adc
sbb
sbb
sahf
or
dec
or
mov
js
xor
test
xchg
jne
cmp
stos
mov
aaa
jbe
cli
or
push
jbe
pop
mov
sbb
clc
push
sarl
or
les
cli
cmpsb
mov
add
xorl
mov
mov
dec
inc
mov
aam
or
mov
popf
outsl
xor
cltd
push
or
je
mov
ret
jmp
add
out
notb
fwait
jle
cmp
dec
fsubrs
or
scas
dec
pushf
mov
repnz
loopne
sbb
cmpsl
pop
sarl
adc
inc
icebp
lcall
sbb
lock
in
testl
imul
leave
popf
mov
daa
xchg
sbbb
pushl
fwait
aas
mov
ret
mov
and
fldcw
dec
int3
fdivrs
mov
and
dec
fcompl
push
jnp
pop
cmp
and
outsb
jecxz
jbe
pop
or
dec
addr16
xchg
lds
scas
popf
into
dec
stos
xor
mov
in
mov
les
ds
ret
rorb
mov
cmp
or
xchg
dec
mov
dec
mov
adcb
jno
inc
pop
iret
xchg
mov
in
shlb
mov
xor
out
and
out
push
pushf
lcall
mov
leave
sti
daa
icebp
test
lds
std
sub
jnp
adc
mov
popf
mov
pop
mov
xchg
add
out
cmp
mov
cmc
adc
pushf
rcrl
dec
jl
mov
scas
int
xchg
ja
adc
xchg
es
or
push
sahf
out
xorl
mov
aad
call
gs
xchg
dec
xchg
in
xchg
pop
lods
inc
sub
mov
cmc
and
jno
and
push
sbb
cltd
sbb
pop
test
aaa
ror
add
xchg
sar
inc
pop
push
scas
outsb
inc
scas
loope
inc
lods
jb
mov
cs
insb
rol
xor
lea
jle
pop
leave
mov
aas
outsl
adc
mov
add
mov
jno
fdivs
out
imul
cld
out
roll
and
sbb
sbb
loopne
ljmp
int3
xchg
push
std
push
out
movsb
xchg
fidivrl
pusha
test
out
shl
orl
arpl
in
cltd
scas
push
inc
orb
add
inc
xchg
repnz
jle
dec
movsl
out
lret
push
lcall
sbb
or
cli
outsl
xor
adc
push
call
loope
and
enter
mov
insb
adc
add
cmpb
out
fidivs
sub
cmp
imul
divb
xchg
mov
in
clc
lahf
cmp
dec
sub
das
and
imul
pop
mov
xchg
in
aaa
mov
iret
pop
je
out
xchg
xor
ror
cld
cmp
and
fmuls
lea
xchg
loope
sub
pop
xchg
sbb
les
addl
push
fcoms
lds
and
enter
inc
data16
dec
aaa
fucomip
stos
addb
es
rol
movl
call
rorl
inc
fists
cltd
push
ljmp
sbb
jae
inc
pop
in
stc
add
jle
out
test
arpl
lahf
push
aaa
roll
cli
dec
insl
test
cmp
xchg
cmp
loop
fwait
jae
inc
dec
jnp
and
add
xchg
add
or
loope
fidivs
in
sub
outsl
lods
xchg
lods
daa
mov
outsl
and
shlb
push
addl
in
pop
out
mov
outsb
mov
mov
outsl
sbb
inc
sahf
shl
insb
dec
inc
lret
mov
scas
sub
out
aas
data16
pop
push
movsl
xor
inc
sbb
xchg
pushf
pop
and
in
cmpsb
xor
pushf
or
pusha
add
imull
jne
out
adc
sti
fucomi
jge
ss
scas
xor
or
data16
push
mov
stc
mov
bound
dec
lock
aas
push
mov
mov
mov
sahf
cmp
and
jno
in
in
clc
nop
std
insb
jg
fstp
xchg
imul
mov
mov
popf
fbstp
in
shrl
int3
pushf
test
loopne
push
pop
xchg
lock
pop
repnz
in
mov
mov
aam
inc
mov
andb
push
cmp
and
xor
aaa
xchg
fisttpl
push
sbb
out
pop
xchg
push
mov
arpl
mov
xor
mov
outsl
and
or
test
mov
aad
les
pop
push
xchg
pop
test
sub
lret
or
jbe
stos
pop
pop
fnsave
ficoml
shlb
mov
inc
fidivrs
jo
mov
sarb
add
insl
cmc
fwait
inc
pusha
lahf
arpl
sbb
dec
addr16
add
xor
mov
outsb
inc
dec
out
xchg
jae
sbb
test
imul
lds
mov
cmp
inc
test
cli
and
insb
lret
fwait
xchg
pop
aaa
push
out
xor
xor
mov
aad
push
jmp
or
enter
enter
out
jbe
popa
adc
inc
cmp
fwait
lret
pop
test
bound
jmp
insb
push
inc
dec
inc
je
mov
mov
push
pop
pop
hlt
leave
jb
mov
add
and
xor
ret
pop
dec
mov
mov
idivl
ds
or
mov
jmpw
das
jle
mov
and
ret
push
mov
in
pop
push
adc
int3
enter
mov
add
xchg
inc
pop
xchg
and
ret
cmp
hlt
pop
sub
inc
mov
inc
lock
mov
jbe
cmp
shll
popf
int
scas
sbb
cmp
fs
mov
dec
in
std
push
scas
sar
test
sbb
and
loop
xlat
mov
xchg
gs
mov
std
rcll
jge
cli
xor
push
scas
jae
pop
push
btc
mov
mov
mov
sbbb
int
repz
ds
add
cmc
cmp
push
es
mov
sbb
mov
inc
pop
xchg
data16
and
test
add
lret
adc
fsubr
or
ljmp
jmp
mov
loopne
test
cs
mov
dec
dec
sub
mov
stos
push
dec
mov
push
dec
leave
cmp
adc
sbb
ja
stos
insb
scas
inc
aad
pop
ds
mov
push
sbb
es
fnstsw
cmpsl
pop
mov
shll
lahf
clc
jmp
stos
std
inc
sub
mov
cs
int3
dec
test
js
cmpsb
into
dec
cmp
dec
mov
loop
xor
inc
lds
ds
jl
out
xor
adc
cmp
dec
mov
mov
ret
push
xorl
push
icebp
sub
aas
aaa
jne
and
insl
or
inc
std
in
sbb
imul
shl
dec
sarb
adcl
push
dec
push
int3
repz
pusha
mov
cmp
xor
pop
xlat
rcr
out
and
push
add
mov
jle
mov
subb
out
outsb
imul
adc
pop
lods
gs
dec
shrl
repnz
xor
gs
cmpsb
xchg
in
dec
ret
cmp
in
out
dec
jno
xor
cltd
push
push
lahf
inc
in
mov
inc
push
adc
lods
pop
xor
push
imul
mov
decl
and
fwait
mov
pusha
je
cmpsl
je
dec
test
rcrl
dec
sub
out
int
dec
jb
inc
pop
iret
fists
aas
call
das
fcmovbe
imul
sub
push
incl
adc
roll
sbb
cmp
or
mov
dec
dec
fs
sbb
dec
aam
push
sbb
jae
add
sub
fs
rorb
jg
popf
jl
push
int
dec
scas
or
push
out
adc
inc
cmpsb
ja,pt
lret
dec
bound
pusha
push
sbb
adc
xor
roll
sbb
in
push
dec
mov
daa
xchg
xchg
les
sbb
gs
cs
xchg
pop
int3
aaa
pushf
mov
sub
push
dec
lret
pop
add
lret
lods
dec
nop
push
ja
push
lcall
ljmp
insb
inc
inc
aas
xor
xor
or
push
push
stc
movsb
shlb
fistl
lea
jmp
mov
test
arpl
or
cmp
and
jmp
in
scas
xchg
lret
cli
ret
add
aaa
mov
dec
cltd
js
inc
push
and
push
sbb
xchg
lret
add
scas
dec
gs
imul
imul
mov
pop
das
mov
add
andb
addr16
and
rcll
cmp
add
es
add
xchg
xor
repz
ljmp
sbb
ds
xchg
cltd
mov
into
inc
int3
rolb
scas
mov
xchg
out
das
ds
lret
lock
dec
lods
jp
xor
ficomps
add
setge
gs
mov
cltd
testb
or
or
testl
cmpsl
fiaddl
jne
ds
xor
xlat
add
rolb
nop
cwtl
push
cmc
clc
inc
repz
mov
lret
insl
sub
loope
sbb
push
mov
out
mov
cs
pop
js
sub
mov
adc
pop
push
cmp
mov
lea
push
sub
jg
inc
xchg
pop
xchg
pop
ret
lcall
rdmsr
icebp
std
nop
push
enter
and
lcall
dec
fisubl
jmp
jg
pop
add
cmp
in
ljmp
loope
sbb
xor
mov
xchg
pop
int3
lcall
imul
cld
cmc
cmpsb
je
sub
pop
push
add
cs
pop
stc
popf
fisubs
out
xor
or
pop
or
pop
push
in
dec
mov
mov
jmp
ja
cmpsl
std
mov
dec
push
fdivrl
cld
lock
aas
int
mov
testb
jnp
xchg
clc
stc
es
pushf
ss
out
jmp
aad
and
push
js
and
mov
fstpl
push
jo
stos
pop
push
cli
mov
push
dec
imul
jo
mov
mov
scas
mov
mov
sub
sub
je
mov
sub
add
hlt
test
fstps
scas
or
xor
mov
push
mov
lret
arpl
inc
pop
sbb
movsb
mov
cltd
xchg
imul
mov
in
loope
shll
cmpsb
lahf
mov
pop
aaa
shll
sub
xor
cmp
dec
outsl
xchg
subl
mov
inc
dec
mov
int
loope
dec
lcall
nop
dec
int
inc
sbb
jge
inc
push
notl
iret
cmp
scas
or
jge
adc
into
cmpsl
lahf
push
or
js
inc
or
push
pop
fcmovnbe
adc
add
aam
mov
rorl
xchg
out
pushf
fmull
aam
dec
pop
sarb
add
mov
adc
mov
mov
xchg
jnp
or
int
or
pop
xchg
jg
nop
daa
mov
call
and
inc
push
popa
call
fucomip
sub
iret
dec
daa
lods
lret
notb
jo
ja
lea
mov
mov
mov
xor
mov
inc
fldcw
push
jae
mov
gs
jns
xchg
lock
leave
add
movsl
out
insb
jo
xchg
ja
sbb
mov
addb
aad
jle
inc
lds
sub
xchg
dec
adc
mov
xchg
adc
and
test
xchg
imul
jns
ja
ror
push
loope
or
into
out
xchg
xchg
popf
push
std
xor
std
inc
loope,pn
mov
loopne
mov
lret
es
dec
xchg
pop
sub
lcall
adc
dec
pusha
daa
jl
sti
mov
aaa
stos
stos
mov
sub
inc
mov
sub
push
mov
cltd
or
ss
fidivrl
lret
pushf
adc
mov
fsubrs
pop
sub
pop
add
mov
fadds
or
outsb
sar
call
cmp
cmp
repz
mov
orl
lret
rol
out
out
mov
das
ror
push
enter
test
es
mov
lock
daa
repz
je
cmp
sbb
dec
mov
popa
pop
and
jmp
or
mov
mov
gs
push
mov
add
sub
cltd
jecxz
mov
mov
add
cmp
inc
mov
xchg
mov
sub
xchg
lock
inc
xadd
xchg
ret
jle
cmpsb
jae
scas
pusha
out
adc
dec
int
mov
jb
aas
cli
sbb
xchg
inc
xlat
scas
daa
out
cmp
lahf
imul
fidivl
leave
scas
test
into
mov
rcrb
ds
mov
aam
mov
fcmovnu
outsb
out
xchg
insb
fsts
int
pop
jbe
or
dec
imul
shll
rcr
and
sahf
jbe
jle
movsb
dec
fs
mov
push
lret
data16
xchg
inc
jnp
jb
add
mov
orb
push
rcll
and
lret
lret
ljmp
xchg
mov
push
scas
cmpsb
push
push
je
nop
std
fwait
dec
hlt
dec
xchg
inc
jl
fwait
pop
sub
mov
sub
ljmp
and
dec
xchg
cmp
leave
insb
cld
call
push
cltd
inc
sbb
daa
push
and
mov
cmc
mov
hlt
add
out
push
lds
mov
jl
pop
lcall
aas
xchg
jae
jno
pop
dec
lods
movl
movsl
pusha
int3
xorl
out
insl
mov
sub
out
push
push
shrl
jle
int
jae
scas
mov
nop
fdivs
cmp
sti
jne
hlt
cli
in
mov
mov
call
push
dec
sub
cmpsl
movsl
cmp
mov
out
xor
pop
repz
fildl
jge
adc
inc
jg
clc
idivl
inc
mov
stos
push
add
push
lahf
cli
or
and
mov
mov
outsb
into
lods
inc
out
push
xor
out
jne
add
adc
cmp
xchg
lea
movsl
fwait
mov
shll
jae
movsl
movsb
mov
lock
push
mov
gs
pop
adc
pop
scas
test
cmp
mov
hlt
inc
dec
cwtl
jb
jnp
stos
sti
ror
inc
pushf
jae
xor
push
and
cmp
xor
test
enter
mov
sub
inc
test
repz
jmp
ljmp
mov
pop
mov
lods
in
imul
add
cmpb
mov
mov
and
cmp
or
xlat
orb
add
mov
aam
lock
jne
js
ds
sbb
jmp
out
mov
xor
mov
add
andb
je
mov
ret
push
jl
repz
mov
fs
nop
aad
and
xchg
xchg
xchg
cld
xchg
in
jns
dec
aam
aas
mov
bndstx
leave
add
lahf
dec
push
push
sbb
push
push
test
arpl
popf
jo
xchg
jge
incl
outsl
ret
add
lods
xchg
mov
andl
sbb
push
inc
dec
cltd
rdpmc
cmp
popa
lret
icebp
pop
stos
dec
mov
push
cmp
aam
sti
out
ret
mov
cmpsb
jg
aam
inc
push
ret
ret
mov
in
leave
adc
xor
sbb
inc
test
in
adc
mov
out
jb
xor
int
rolb
es
xchg
push
mov
xchg
pop
pop
push
in
xchg
push
xor
pop
pop
jae
addl
out
inc
adc
cmpsb
inc
in
or
mov
aad
int3
adc
pop
paddb
movsl
test
jmp
xchg
enter
mov
aaa
sbb
pushf
xor
or
inc
push
and
mov
sub
inc
dec
std
fimull
mov
jp
iret
lds
enter
sub
xor
dec
roll
mov
mov
in
jg
bound
je
push
rcrb
fs
cli
push
jle
movsl
xchg
mov
xorb
mov
sub
ret
add
sti
sub
std
fstpl
test
ret
hlt
cmp
cmp
call
sbb
sbb
icebp
loop
pusha
bound
lods
inc
mov
sahf
movsb
adc
sti
loopne
cltd
pop
sub
dec
xchg
xchg
dec
or
inc
mov
test
mov
mov
add
xchg
lea
icebp
negl
adc
loop
ret
mov
fimull
cld
add
out
push
xor
cld
bound
iret
in
mov
popa
sub
fimuls
pushf
push
fbld
repz
mov
stos
mov
stos
ds
mov
lds
add
mov
inc
xchg
call
mov
xchg
and
inc
pop
add
xor
and
mov
ja
stos
pop
nop
ja
jl
jmp
test
push
pushl
int
jne
rol
daa
popl
jnp
pop
mov
xor
test
jmp
imul
imul
mov
sbb
push
xchg
cmpsl
xlat
popf
cmp
push
inc
lock
jns
call
loop
jecxz
mov
xchg
call
xor
or
lock
movsl
andb
and
cltd
dec
loop
out
mov
imul
mov
mov
cmp
shr
adc
mov
pop
loop
and
sub
dec
sbb
mov
cmpsb
popa
jmp
sti
pinsrw
mov
aad
adc
add
pop
pop
aad
pop
mov
adc
aas
aam
and
movsb
lahf
mov
aam
arpl
or
mov
push
mov
fsubrs
in
fwait
loope
push
mov
jmp
clc
dec
xchg
sbb
fcmovbe
jp
add
and
and
out
in
rcrl
test
popa
ficoms
push
out
cmp
pop
subl
mov
es
cltd
rcll
ja
stos
lret
inc
sbb
mov
cmc
add
pop
imul
inc
sub
adc
fdivrl
pop
andb
pop
mov
xchg
test
inc
cmc
loop
dec
iret
subb
loope
add
xor
cmp
push
sub
stc
sbb
popa
push
out
or
icebp
jne
push
inc
pop
insb
aaa
xor
add
xchg
sub
scas
cmp
jl
mov
push
fldl
cltd
mov
adc
call
push
or
cmp
aad
jge
insl
sub
stos
xchg
mulb
ss
cmp
dec
lret
lea
aam
adc
les
and
sub
dec
dec
insl
mov
loop
xorl
mov
test
push
mov
out
data16
xlat
mov
test
mov
sbb
loope
and
add
fbstp
std
aad
add
push
pushf
js
and
fadds
notb
ret
dec
scas
pop
sub
mov
xchg
or
pop
mov
sbb
pop
ja
movsl
mov
outsl
jg
add
add
in
je
ret
and
xor
hlt
pop
aaa
aaa
jae
xor
aam
inc
jno
cmovb
mov
roll
push
cmp
cmp
push
roll
fs
lret
mov
jmp
mov
jle
cmp
pop
shl
jmp
icebp
jne
mov
lahf
adc
sub
pop
and
addr16
mov
mov
sti
and
cvttps2pi
ds
popl
push
insb
cmc
cwtl
push
jle
jno
xor
dec
push
sbb
mov
xchg
sub
sub
rorl
aad
jo
push
ds
jp
fadds
adc
dec
inc
test
xor
aas
mov
jns
das
popa
inc
add
lret
stos
inc
and
sbb
mov
and
jo
aas
je
jo
mov
in
rcll
inc
nop
xchg
add
sahf
out
jb
xchg
xor
outsl
cmp
out
test
addr16
sub
cmp
jbe
int
or
sarl
fwait
pushf
push
sbb
out
imul
stc
xlat
xchg
scas
int
icebp
sub
mov
push
jg
xor
imul
popa
dec
fldcw
mov
sbb
loope
stos
cld
pop
popa
cmp
dec
ja
lods
out
imul
lock
cmp
pop
and
shrl
ljmp
cmp
jmp
lcall
repz
les
dec
mov
mov
mov
cwtl
jle
sbb
push
faddp
ss
or
mov
dec
loopne
fwait
loope
in
shll
inc
cld
cwtl
ja
bound
dec
mov
imul
cmp
cs
out
inc
fimull
mov
pop
xor
push
push
call
int
push
cmpsb
lret
out
std
sub
xor
sub
movlps
movsb
push
mov
fsts
cmp
outsl
imul
xor
insl
mov
adc
into
pushw
lahf
pushf
sbb
lods
in
es
pop
sbb
cmp
inc
adc
pop
sahf
insb
pop
loopne
push
insb
push
mov
icebp
pop
insb
adc
xchg
jno
lretw
insb
xchg
lods
shlb
and
push
fadd
mov
mov
notb
dec
movsl
das
xchg
mov
ss
out
ja
pusha
cmp
dec
cmp
arpl
nop
adc
int3
popf
cmp
and
push
mov
adc
ljmp
fs
cmp
sub
fimuls
sub
dec
cmp
out
pop
out
dec
sub
pop
xchg
cltd
mov
mov
mov
adc
xchg
lods
imul
mov
jo
in
ljmp
dec
inc
ljmp
packssdw
mov
test
ficoms
adc
mov
xchg
dec
xchg
mov
mov
or
push
dec
out
mov
std
fucom
push
jnp
int
cmpsb
dec
lods
repnz
and
arpl
sub
jecxz
in
sti
push
xchg
cltd
cmpsb
repz
mov
stos
push
ficomps
dec
xor
sbb
sarb
adc
xchg
mov
std
inc
arpl
imul
jae
stos
in
or
pop
mov
inc
jle
inc
jg
jp
dec
dec
imul
insl
int
les
outsl
xchg
mov
sub
dec
xchg
fmuls
rcr
adc
adc
popf
movsb
mov
cmp
mov
pop
jp
sub
jne
inc
pop
sahf
pop
mov
add
popf
rclb
repz
pop
fwait
jp
xor
rcrb
in
cwtl
movsb
dec
add
loopne
icebp
pop
mov
in
lock
or
sti
inc
addb
xor
fs
imul
inc
cli
adc
cltd
mov
stos
dec
lods
in
enter
clc
mov
mov
gs
sub
xchg
std
cmp
and
ss
and
mov
lahf
pop
imul
and
cmp
sbb
out
loop
stos
repnz
lret
outsl
pop
ljmp
and
shlb
add
rcrb
sarl
and
pop
psrad
push
fs
cmp
pop
push
subb
sub
dec
lahf
jp
imul
repz
movsb
sbb
sbb
dec
addr16
dec
popf
cmpsl
xchg
push
test
fsts
mov
sub
or
stos
lret
in
in
pop
sub
add
xchg
inc
push
fidivrl
mov
dec
lods
enter
jmp
rolb
inc
imul
sbb
lcall
fists
std
pop
subl
jp
pusha
imul
pusha
fs
adc
test
dec
loopne
mov
jns
lea
sahf
push
or
clc
fsubrs
fsubl
call
mull
push
xlat
stos
inc
fisubrs
aad
push
std
adc
into
call
outsb
mov
push
push
popa
or
mov
jmp
cmp
dec
aad
call
sub
jo
mov
sbb
sbb
mov
jae
pop
jae
fstl
or
and
out
add
dec
mov
in
imul
andb
jns
dec
cmp
repnz
jo
inc
sub
and
inc
imul
sub
inc
pop
add
clc
mov
and
add
loop
push
test
lret
std
fnstsw
xchg
inc
lock
ret
and
imul
push
mov
mov
loopne
push
pop
out
repz
nop
sbb
fld
loopne
fwait
out
std
jns
fisubs
jecxz
outsb
mov
dec
xchg
lds
push
xchg
dec
popf
inc
lret
insb
xchg
sbb
cmp
push
xchg
push
gs
mov
push
in
js
xchg
mov
xor
out
imul
cltd
sti
iret
inc
dec
xchg
fmuls
xchg
data16
lds
ret
sub
outsl
repz
add
mov
rolb
int3
js
xchg
int3
aad
add
pop
jmp
push
repnz
pop
in
lods
gs
inc
jne
jecxz
insl
mov
das
sti
xchg
pushf
cltd
dec
push
lds
xor
je
out
xor
aad
lcall
cmp
leave
shlb
cs
fimuls
jmp
cmovo
je
iret
mov
fistl
xor
shrl
in
mul
ret
sub
xchg
jge
out
inc
dec
lds
lock
pop
pop
push
adc
xchg
les
jns
mov
mov
aam
imul
jnp
sbb
inc
jle
xlat
out
in
xor
mov
jbe
lods
cld
rcrl
mov
fwait
sbb
sub
sbb
sbb
mov
inc
push
push
adc
mov
es
push
ret
dec
dec
dec
std
clc
lods
mov
dec
adc
iret
data16
orl
or
pop
fs
xchg
cwtl
in
and
fdivrp
fdivs
insl
sub
inc
sub
rorl
lcall
mov
popf
and
push
or
xor
pusha
add
inc
jne
test
mov
push
and
jnp
ss
inc
xchg
xchg
push
sub
stos
in
lock
xor
xor
out
imul
cmp
dec
dec
imul
mov
js
xchg
sbb
psllw
sub
pop
sbb
sub
lods
fisubrl
mov
dec
xor
insb
xchg
mov
adc
pop
popf
ljmp
fisubrl
sbb
int
jmp
push
sbbl
xor
dec
jbe
mov
fldcw
adc
mov
and
mov
pop
vaddsubpd
cld
fimull
mov
and
adc
sub
ret
jg
sub
jne
push
leave
push
push
ljmp
lahf
shll
jns
inc
fcomps
pop
fnstcw
jge
jge
imul
jp
arpl
iret
stos
jo
mov
sub
lds
fistps
push
test
xlat
movsl
fld1
test
in
nop
sbb
iret
cmpsb
xor
xchg
jl
lods
jmp
pop
sbb
psrad
cwtl
jbe
std
adc
mov
scas
inc
pusha
lea
sbb
cmpsb
dec
gs
sahf
push
pop
out
cmp
mov
adc
push
scas
dec
sbb
stos
ret
sub
pop
or
dec
dec
cld
fsubs
pop
dec
lock
daa
jb
push
out
add
pop
gs
jg
mov
mov
push
movsw
fs
add
adc
fwait
sub
insl
mov
aam
cmp
mov
lahf
pop
and
push
scas
fsubl
fbstp
insb
into
stos
in
mov
push
mov
mov
dec
out
in
and
xor
decl
mov
xor
mov
mov
das
icebp
sbb
push
insb
push
xchg
aad
cwtl
or
shr
out
mov
rcll
push
xchg
cltd
push
nop
xchg
subb
jl
fisubrs
das
jb
leave
push
mov
insl
cmpsl
pop
xchg
and
push
jp
aad
out
mov
xor
mov
subb
pop
outsl
pop
jp
scas
jb
pop
std
notb
adc
push
fisubrl
add
xchg
outsb
cwtl
push
mov
pop
pop
repz
sbb
inc
sub
pop
ljmp
cli
cld
popa
mov
insl
cmpsb
rep
leave
stos
xor
xor
sub
mov
and
dec
lds
es
add
adc
cltd
lods
or
push
lock
cmp
fs
mov
xchg
fmuls
in
ficoms
test
xchg
cs
jb
xchg
icebp
sub
cmp
ret
ror
sub
leave
sbb
dec
xor
in
lds
jno
ror
pop
push
cmp
imul
cmpsb
or
mov
xor
mov
fdivs
push
xor
imul
or
imul
out
and
and
cmpsl
adc
xchg
adc
pusha
imul
lcall
dec
adc
sub
xor
cmpsb
mov
push
inc
xchg
fadds
or
test
sbb
popf
and
xor
jecxz
jg
das
xor
aam
adc
sbb
push
fdivs
mov
das
scas
fnstcw
out
jb
test
sahf
std
push
in
mov
inc
dec
cmp
negb
les
insb
or
push
lods
lock
push
sbbb
mov
mov
adc
pushf
jl
push
lds
repz
loope
jp
movsb
bound
insl
mov
sbb
push
pusha
ljmp
mov
push
dec
cmc
in
inc
cmp
mov
mov
mov
mov
dec
call
cmp
sub
push
insb
xchg
mov
push
mov
mov
ret
jge,pn
in
pop
adc
xlat
or
pop
inc
mov
cmp
mov
rcl
mov
jge
out
bound
pop
lods
leave
or
sub
gs
pop
mov
sub
stos
clflush
sbb
push
xchg
rcll
mov
ljmp
dec
in
mov
in
popa
xchg
ds
lret
adc
and
or
push
xchg
inc
pop
je
add
mov
loop
push
lret
js
xchg
stos
sub
adc
add
iret
popa
pop
mov
loop
push
shll
int3
cmpsb
pushf
xchg
mov
mov
mov
mov
pop
in
dec
xor
push
lock
mov
cltd
sub
mov
cld
mov
xchg
mov
out
inc
push
inc
dec
xor
cmp
stos
dec
xchg
xchg
inc
xor
ret
imul
push
push
mov
xchg
adc
xchg
les
repz
stos
xchg
sub
and
imul
psrad
jle
mov
xchg
add
sbb
jb
out
lret
ja
mov
xchg
stc
pavgb
gs
js
xchg
mov
mov
aad
leave
lret
insb
das
adc
shlb
adcl
mov
push
cltd
enter
imul
addr16
sub
hlt
inc
lahf
fstp
mov
sbb
inc
mov
sti
int
out
jmp
repz
push
adc
imul
popf
jae
push
fimuls
repz
push
lds
mov
push
and
in
sahf
push
push
mov
push
aam
enter
xchg
je
xchg
roll
popa
mov
movsb
mov
jbe
sti
dec
add
inc
js
xor
out
stos
aad
or
out
enter
pop
xor
mov
and
out
xor
loop
loopne
mov
mov
xlat
ljmp
fmuls
fdivrs
cmp
sub
fistps
add
inc
xlat
pop
mov
mov
mov
dec
sbb
dec
cld
imul
or
addl
inc
fdivs
and
dec
fsubrl
std
rcll
mov
mov
cs
xor
or
scas
out
mov
mov
cwtl
cvtpi2ps
inc
or
xchg
shrl
xchg
xor
stos
orl
sub
popf
sbb
jnp
or
data16
pop
std
jb
mov
jo
xchg
test
jp
xlat
movsb
xor
fadds
dec
jp
and
jmp
repz
sub
inc
mov
cmp
sbb
jl
adc
in
mov
bound
jns
push
mov
xor
xchg
lods
mov
mov
inc
aaa
lea
mov
test
push
mov
aam
aaa
imul
inc
add
add
mov
rorb
sub
xchg
xor
xor
xor
jmp
cmpsl
pop
int
test
sbb
xchg
mov
fcmovnbe
or
inc
xor
fisttpll
stos
push
stos
int
pusha
out
pop
mov
pusha
hlt
out
xchg
jl
xor
pusha
andb
cmp
mulb
dec
mov
stc
imul
xlat
stos
aad
out
mov
sub
or
jecxz
sbb
insl
inc
rol
sub
das
mov
fldt
xchg
mov
aaa
push
mov
je
xor
lret
adc
pop
and
adc
cltd
mov
imulb
cli
and
das
pop
sbb
push
movsl
hlt
or
adc
push
pop
mov
lcall
adc
add
xor
and
and
rorl
addr16
jns
dec
das
xchg
aad
js
test
fldcw
mov
push
push
add
xchg
std
pop
outsb
or
jnp,pn
movsl
pop
add
lahf
sbb
shll
pop
jo
jno
pop
add
xchg
cmp
daa
or
xchg
xor
outsb
subps
jp
and
dec
xor
rcll
xlat
clc
cmpb
mov
lea
mov
inc
mov
orb
leave
mov
ficoml
sbb
xchg
mov
or
and
jmp
xchg
cmp
mov
shl
and
imul
adc
int
insl
mov
out
mov
rolb
into
push
lea
add
fucomip
sbb
sbb
nop
xchg
repz
xor
pushf
push
mov
jb
cmpsl
jl
mov
imul
and
pop
gs
add
mov
push
nop
jl
cmp
outsb
jo
and
mov
ss
aad
or
mov
movsb
push
xlat
in
das
sbb
rcrl
or
mov
stos
jmp
adc
insl
xor
sarb
jp
stos
push
adc
subl
fistpll
loope
sbbw
or
jmp
ret
cmc
sbb
inc
push
ljmp
pop
or
mov
lcall
in
push
out
xor
xor
xchg
mov
sbb
daa
dec
mov
fnstcw
out
mov
cmp
lret
sahf
xlat
stos
push
pop
mov
cli
mov
adc
insb
cmp
fistpll
aad
jge
xor
and
cld
into
xor
loopne
ficoms
mov
xchg
popf
movsb
mov
add
jne
orb
lds
and
lret
mov
test
mov
mov
xor
xor
ret
andb
cmp
mov
sbb
pop
add
mov
popa
neg
jmp
mov
push
mov
int3
push
cmc
add
popa
jmp
decb
push
jnp
add
and
ret
pop
mov
sbb
cmp
xor
pop
out
movsl
lcall
jecxz
jns
pop
ljmp
in
cmpsl
mov
and
or
sbb
fs
push
mov
mov
loop
push
and
xchg
stc
lods
lds
out
and
push
add
lea
sahf
stos
fisubrl
push
lahf
mov
adc
imul
xchg
push
xchg
adc
push
out
mov
push
sbb
cmp
inc
data16
inc
cmpsb
pop
mov
lock
sbb
jnp
bound
push
sahf
cmpsl
int3
ja
test
loopne
cmp
fwait
rcl
inc
ljmp
lcall
mov
fisttpll
js
outsl
sub
in
stos
fisttpl
jne
lods
movsb
mov
test
add
cli
and
add
std
daa
lds
jne
sub
jb
dec
mov
pop
push
fisubl
lods
cmp
push
leave
cs
dec
adc
push
pop
les
dec
shll
dec
out
push
sub
jbe
or
sti
pop
jmp
sub
cmp
adc
xorb
mull
stc
xorl
dec
cmpsl
neg
mov
mov
gs
repz
roll
popa
and
cld
shl
xor
push
rcl
jecxz
mov
lock
sbb
clc
cmp
pop
jg
cld
push
push
mov
adc
out
add
jb
or
stos
pop
outsb
sarb
aam
mov
push
push
call
pop
sub
imul
xchg
subb
sti
mov
mov
mov
cmp
stos
lret
or
and
inc
lret
lret
js
mov
cwtl
inc
xorl
push
add
add
pop
out
adc
lods
sbbb
cld
jns
push
imulb
or
bound
mov
mov
mov
adc
push
adc
lret
imul
stos
mov
in
adc
shrb
rcrl
xchg
out
fmull
insb
mov
out
mov
je
dec
mov
add
pop
shrl
cmc
ret
fwait
jecxz
adc
mov
fists
test
loopne
arpl
jbe
push
aaa
insl
mov
outsb
hlt
cli
ljmp
idiv
cwtl
jbe
xor
daa
dec
loopne
mov
cmpsl
mov
push
jae
lea
scas
loope
shr
xchg
test
pop
popa
lods
mov
iret
loop
jmp
jecxz
rorl
sub
lds
xchg
test
ljmp
arpl
xor
xchg
xchg
and
mov
movsb
mov
pop
repz
jo
outsb
add
lret
dec
jle
ds
mov
ss
dec
out
aaa
and
fwait
movsb
es
lods
bound
cli
call
xchg
fwait
xchg
cmp
arpl
inc
mov
es
call
lret
adc
shld
sub
insl
pop
test
jb
or
test
xor
lods
repnz
cmp
xor
idivl
sahf
sbb
lock
sbb
decl
xchg
std
xchg
push
inc
pop
dec
push
fnstenv
aam
sbb
mov
lods
add
daa
mov
jmp
ds
add
out
sub
fwait
lods
dec
lcall
bound
mov
bound
push
mov
push
push
call
loop
sbb
sarb
std
mov
and
nop
ficoml
pop
sti
loopne
pop
push
adc
pop
mov
imul
test
jp
or
pop
call
mov
outsb
inc
add
bound
lcall
inc
xchg
pop
jb
push
ljmp
jo
sbb
in
pop
xchg
sub
stc
incb
push
or
in
or
mov
into
scas
add
ret
xchg
push
in
in
mov
and
test
movsb
push
or
aaa
pusha
add
xchg
mov
xor
ss
fsubp
enter
imul
mov
push
faddl
mov
shrl
aam
cltd
jecxz
push
dec
add
cli
mov
push
ficoml
dec
scas
psubsw
jecxz
and
fidivl
pop
in
dec
jb
jge
push
inc
dec
jno
out
xor
or
mov
jb
mov
and
popa
pop
int
cmp
xchg
mov
test
mov
or
testl
test
mov
outsl
mov
inc
mov
lock
hlt
cmp
fdecstp
int
daa
xchg
jb
xchg
mov
xchg
mov
inc
ret
push
es
shll
jbe
add
xchg
dec
sbb
add
mov
inc
cmpsl
call
insb
mov
add
fadds
xor
or
sub
jmp
stos
mov
popa
scas
iret
orl
rolb
push
outsb
fwait
dec
pushf
cld
cwtl
adc
and
push
jno
mov
xchg
pop
pop
fdivl
xor
xlat
hlt
push
xchg
int
mov
inc
ja
inc
sub
mov
out
out
mov
jae
movsl
addb
cmpsb
je
xchg
pop
bound
dec
div
push
ret
fcmovnbe
jbe
jno
ss
sbb
movsl
inc
xchg
stos
sub
lods
out
stos
aam
pop
push
loop
popf
mov
adc
pop
cmp
or
pop
adc
repnz
decl
sub
xchg
pop
adc
push
push
cltd
mov
add
jp
pop
pop
fadds
gs
loope
mov
xor
mov
mov
fstps
jne
mov
inc
xor
inc
in
leave
aam
jns
pop
aas
or
xchg
test
in
and
sbb
mov
sbbl
ljmp
les
and
fnsave
lock
sub
sbb
sbb
stc
data16
dec
mov
ljmp
icebp
out
pop
mov
add
push
repz
inc
mov
pop
call
xchg
and
in
cmp
and
insb
xchg
movsl
push
rol
sub
push
sbb
add
and
fcomps
fs
cmp
push
mov
ss
pusha
dec
cmp
das
push
popf
into
data16
cmp
and
lcall
repnz
xchg
ret
xchg
pop
scas
lret
mov
ficoms
push
rorb
or
inc
push
inc
pop
mov
jg
loope
fwait
icebp
dec
sahf
icebp
dec
into
and
pop
mov
ja
arpl
mov
paddsb
pushf
rclb
loopne
mov
add
dec
mov
lahf
js
cmp
add
pop
xor
cltd
stos
mov
inc
or
xor
test
inc
cmp
sbb
les
cmp
arpl
inc
cmpsb
add
clc
sti
pop
sbb
sbb
pop
mov
cmc
inc
fstps
inc
cmp
jb
jg
pop
bound
xchg
push
xchg
repz
sti
jl
push
js
ss
bound
dec
out
dec
cltd
mov
mov
stos
sub
push
lret
jge
xchg
or
add
mov
loope
das
adcl
lds
adc
pop
pop
out
clc
int3
test
lcall
push
sbb
fcmovne
xor
add
pop
sub
cmpsl
test
inc
sbb
and
int
bnd
cmp
aad
xchg
push
fwait
adc
sarb
arpl
movsb
inc
pop
repz
inc
mov
aaa
js
jnp
sub
lret
mov
push
mov
mov
mov
into
ret
je
mov
aas
fnstsw
cs
pop
jns
out
sbb
sbb
mov
mov
mov
jne
out
jge
pop
xor
das
in
cmp
xor
or
je
andb
or
inc
outsb
sub
loope
mov
je
cwtl
fwait
fs
cmpsl
sub
pop
pusha
mov
lret
push
dec
and
jg
mov
add
int
add
jmp
scas
fwait
sbb
jnp
xchg
sub
add
pop
xchg
sbb
adc
xor
or
scas
cmp
test
jns
mov
cmpsl
in
out
out
enter
inc
lret
fsubr
mov
outsb
loopne
sub
test
pop
cmp
loopne
addb
mov
lods
pop
adc
pop
int3
nop
sub
mov
jmp
lock
in
xchg
inc
cld
mov
movsl
scas
mov
inc
jge
xor
dec
mov
xchg
cmp
fdivrs
mov
sub
push
mov
xor
pop
sub
push
cmovno
adc
and
mov
lcall
shlb
leave
xchg
aas
je
jnp
popf
pop
jp
jmp
mov
add
xchg
in
mov
ja
xchg
in
cltd
cmpsb
cmp
out
mov
clc
push
pusha
or
jbe
inc
fidivl
inc
divb
push
fisubs
cmp
int3
cmp
pop
push
test
lock
dec
mov
cmp
sub
mov
aam
inc
mov
push
sbb
lret
sub
out
ffreep
popa
pushf
dec
std
aas
mov
and
fcoms
fwait
xor
clc
out
xor
ficoms
mov
fisttpl
mov
shlb
mov
adc
add
jne
mov
int
cmpsl
int
in
in
pop
pop
sbb
hlt
or
xor
in
push
mov
xor
in
aaa
mov
frstor
lret
rorb
adcl
shr
add
sub
movsl
jl
subb
testl
adc
dec
xchg
popf
aad
mov
loop
imul
sub
es
gs
mov
mov
dec
adc
lcall
push
jle
lock
dec
dec
dec
mov
adc
dec
mov
mov
or
icebp
pop
xchg
push
cmp
dec
aam
sar
scas
dec
push
inc
xor
sbb
es
rolb
out
pop
lahf
cmp
faddl
popf
mov
loopne
adc
inc
sbb
mov
ret
daa
repnz
test
movsl
fsts
jle
mov
shll
loope
rep
orb
or
in
cmpsb
jmp
push
jbe
out
dec
add
push
xchg
test
xchg
sbb
scas
in
jecxz
out
test
adcl
inc
repnz
leave
stos
in
jnp
mov
aaa
js
lds
imul
inc
mov
mov
out
rorb
push
jno
iret
pop
das
push
mov
add
mov
outsb
cmpsl
sub
ficompl
test
mov
cmc
mov
mov
adc
arpl
pop
into
in
and
or
cltd
jecxz
test
inc
sahf
fsubl
adc
scas
pop
inc
or
mov
scas
mov
adc
mov
int
or
arpl
push
adc
pop
out
sbb
insl
cmp
aad
jo
in
loopne
cmp
jb
icebp
xlat
or
cmp
xchg
loop
xchg
add
inc
int3
inc
mov
mov
push
sub
mov
stos
cmp
push
adc
shrl
hlt
push
pop
mov
xlat
pop
lret
loopne
xchg
dec
and
imulb
push
xchg
mov
jne
add
sub
leave
jge
cmp
das
xor
mov
sbb
xchg
inc
inc
test
xorb
rclb
inc
mov
and
es
adc
sub
and
fcomps
lods
sub
cmp
push
and
mov
leave
xor
insb
in
dec
xchg
fistl
pop
movsl
mov
shr
sti
mov
out
mov
mov
sbb
fwait
ljmp
cmp
jbe
pop
mov
and
cmp
and
clc
ds
aad
add
pop
dec
hlt
cmp
and
push
into
sti
rcr
incb
jp
les
dec
mov
and
imul
outsb
lret
add
fsubrs
mov
jae
lea
scas
push
mov
add
shl
mov
cld
xchg
aaa
xchg
lds
into
pop
sahf
jmp
xchg
inc
sbb
call
pop
aad
mov
mov
jne
or
bound
popa
cmpsb
in
mov
je
roll
stc
sbb
cs
jg
dec
test
int
cmpsb
ret
pop
daa
xor
in
sbb
popf
std
jae
add
inc
rolb
js
or
rcrb
out
dec
jl
test
lret
sbb
xor
push
gs
dec
inc
lods
ja
cmp
adc
add
inc
lds
mov
mov
sub
jmp
xchg
mov
xor
mov
pop
ljmp
and
xchg
xor
loope
cmpsb
stc
and
mov
stc
and
or
arpl
xchg
sub
add
xchg
ret
cltd
pop
mov
jg
lock
cwtl
inc
aam
and
fcmovnbe
test
cmp
out
add
mov
out
shll
ja
insb
pop
cwtl
mov
movsl
mov
push
or
push
cmc
movsl
mov
fsubrl
and
lcall
je
inc
add
mov
and
add
xor
jp
mov
cmc
xor
outsb
roll
xor
test
push
push
shrb
lcall
cs
jns
adc
xor
mov
xor
jbe
sbb
mov
mov
push
mov
cwtl
xchg
daa
mov
lahf
inc
adc
xchg
repnz
push
aad
rcrb
xchg
pop
lock
mov
adc
sahf
ficompl
inc
pop
adc
xchg
sarl
mov
mov
xchg
inc
xchg
and
pop
imul
cmp
dec
adc
jp
adc
add
push
mov
ret
mov
xlat
jo
add
icebp
inc
pop
xchg
aad
jno
lock
jb
pop
dec
sub
sbb
pop
push
pop
add
inc
lock
xchg
adc
int
jae
xor
loope
push
mov
or
out
and
lahf
sub
test
pop
into
mov
pop
push
and
or
mov
or
xlat
out
mov
ljmp
add
dec
inc
out
in
mov
ljmp
jg
lds
xor
mov
mov
bound
xchg
mov
cmp
fildl
jg
jb
je
adc
insb
jp
xor
inc
xchg
cmc
lods
adc
stc
or
push
fwait
lret
mov
jae
xor
mov
sub
subb
loopne
mov
adc
jp
inc
jl
sbb
sub
ret
inc
pop
pushl
mov
and
stc
movsb
aad
fadd
lds
pop
hlt
dec
fisttpl
xchg
dec
adc
jp
jmp
lret
mov
inc
mov
mov
repnz
or
sub
sbb
inc
jo
push
cmp
xchg
sub
lcall
jge
pop
or
and
loop
push
fidivl
lods
or
lret
loop
cmp
ljmp
mov
push
mov
sub
orb
push
add
popf
pop
jg
decb
fadds
mov
pop
ficoms
mov
in
push
pop
test
cmp
push
lods
mov
adc
mov
and
push
jo
dec
ljmp
ljmp
out
es
adc
inc
repnz
jbe
xor
xchg
lahf
popa
sbbb
cmp
jno
ret
into
ss
xchg
inc
sbb
jmp
mov
fs
cmpl
add
push
cs
cld
push
rolb
out
stc
mov
pop
addr16
inc
cltd
fidivrl
daa
arpl
xchg
or
cld
incl
lods
lahf
sti
mov
mov
mov
ss
jge
dec
aad
insb
pop
into
mov
loope
inc
ret
lea
dec
xchg
out
popa
xor
sbb
mov
imul
out
xchg
outsl
mov
shl
pop
sbb
xor
xchg
imul
push
push
lret
dec
mov
mov
mov
xlat
jl
mov
xchg
add
mov
cmp
xor
mov
mov
push
and
lahf
mov
mov
pop
xchg
lods
scas
divb
push
std
shr
out
loopne
shll
into
mov
cmpsl
mov
gs
and
jp
call
sbb
mov
jae
out
dec
push
jecxz
jae
mov
jge
arpl
cmp
jae
push
js
mov
mov
push
jge
dec
std
mov
lds
leave
sbb
mov
iret
pop
xchg
int3
sbb
mov
jp
cmp
or
rcr
or
notb
pushf
outsb
loopne
jmp
fnstenv
push
jge
mov
lock
dec
sbb
stos
ret
mov
sub
ljmp
add
fwait
cld
sub
fsts
and
mov
dec
lds
or
push
cvtps2pi
and
cmp
lods
test
ds
lret
xchg
cld
dec
jnp
jbe
pop
mov
jle
pop
xor
dec
and
repnz
scas
movsl
fimull
push
push
jecxz
test
sahf
ret
dec
pushf
iret
or
scas
xor
pop
and
mov
push
add
cmp
mov
ljmp
sbb
pop
or
jne
sbb
push
xchg
dec
hlt
sbb
sbb
xchg
xchg
out
loope
dec
xchg
mov
mov
pop
lods
lret
cmpsl
call
xchg
mov
les
pop
iret
or
jbe
aam
add
or
xor
jl
aam
mov
imul
in
pop
lahf
mov
insb
push
sub
fwait
add
cwtl
mov
pop
imul
xchg
int
pusha
cltd
add
xchg
pop
jmp
mov
mov
mov
fmuls
inc
into
sbb
dec
fsubs
cmp
or
rclb
jne
push
xor
test
jecxz
adc
rcll
data16
mov
mov
push
in
out
lods
and
push
xor
inc
sub
out
adc
push
daa
iret
lret
push
cld
ljmp
jge
mov
sub
push
filds
cmp
lahf
js
lcall
xor
lea
inc
sbb
ret
dec
or
adc
xchg
inc
xchg
hlt
testb
jg
adc
mov
xor
int
lret
add
loopne
lret
das
mov
cli
jl
ret
add
sub
mov
lret
test
push
icebp
mov
insb
xchg
dec
adc
cmp
mov
jecxz
les
jo
mov
jb
xchg
mov
or
mov
ja
mov
bound
clc
ljmp
stos
jmp
rclb
out
jb
and
insb
lsl
mov
je
icebp
mov
sbbl
push
gs
mov
pop
push
jo
push
pop
movsl
push
inc
adcb
mov
pop
lods
cli
lcall
sub
test
dec
hlt
aas
rcll
dec
test
mov
in
jb
mov
hlt
mov
ljmp
inc
inc
mov
lods
push
sub
scas
into
loope
mov
mov
stos
xchg
mov
jbe
cmpsl
inc
mov
iret
lahf
movsb
push
adc
xchg
xchg
xor
inc
out
mov
adc
mov
sti
mov
jno
jns
push
xor
xor
daa
roll
jp
aam
sbb
pop
lret
fdivl
sbb
lahf
lods
mov
ljmp
xchg
in
pop
shlb
arpl
leave
into
ja
mov
push
insl
fdivrs
cmpsb
stos
pop
and
jns
mov
mov
adc
mov
or
jmp
and
jns
mov
adcl
adc
iret
repz
xor
mov
aad
in
rcll
pop
fsqrt
lods
aas
or
jae
in
xlat
mov
sahf
out
mov
cmpsb
fwait
and
pop
leave
daa
or
fisubrs
bound
in
call
movl
mov
pop
fcoml
arpl
pop
jp
loope
bound
movsl
out
imul
dec
jnp
ret
cmpsb
push
cmp
lahf
mov
clc
imul
movsb
fidivrl
les
and
dec
sbb
cmpsl
ficompl
ror
pop
cli
in
xchg
xchg
int
imul
lock
push
in
cwtl
or
or
cltd
xor
lea
sub
jmp
dec
test
iret
ret
out
std
xchg
dec
xchg
dec
dec
fcomps
rclb
ret
test
pop
pop
clc
test
rcr
out
mov
or
push
mul
mov
and
pop
add
scas
jae
arpl
and
popf
sbb
test
push
out
xor
push
dec
mov
repnz
and
jae
inc
jmp
jns
loop
testl
cmpsl
test
xchg
add
inc
fsubrl
cli
mov
popa
jmp
cmp
inc
aam
aas
adc
xor
pusha
bound
adc
xor
adc
shl
es
fistpl
in
and
mov
aad
test
int
xchg
jae
das
sbb
subb
fdivl
cmp
sbb
pop
push
sti
test
xor
cmp
pusha
xchg
andb
enter
pop
pushf
in
push
xchg
in
xchg
sub
sub
sbb
jp
add
aad
data16
dec
leave
jecxz
sbb
js
sub
push
stc
loope
sub
ret
lock
push
icebp
inc
xor
pop
xchg
jb
inc
xchg
sbb
xchg
adc
and
stos
adc
sub
stos
push
xchg
xor
shr
dec
add
or
pop
sahf
cs
test
inc
mov
jg
dec
mov
push
dec
loop
lret
dec
pop
gs
sbb
fsubr
and
sbb
scas
fsubs
bnd
loopne
cltd
test
ror
lods
pusha
addl
insb
jns
fisttpll
add
or
jl
jle
les
loop
mov
mov
hlt
sub
mov
mov
xlat
mov
shrl
nop
dec
sub
xor
sahf
call
add
and
mov
bound
sub
cmc
and
imul
and
inc
xchg
mov
ret
pop
loop
adc
insb
inc
mov
les
into
inc
sub
jno
cmp
mov
mov
mov
or
scas
out
sahf
ljmp
ret
dec
jno
and
push
xchg
test
cmpsl
jo
jecxz
stc
mov
adc
jns
jp
into
jno
push
push
aaa
out
xchg
push
jg
sub
into
jmp
mov
in
pop
push
xor
call
frstor
or
daa
or
aaa
in
test
in
stos
mov
out
jb
data16
mov
xor
add
dec
fisubl
push
outsl
fcomi
xchg
sarb
sbb
sub
loop
scas
test
pop
or
push
gs
cmp
mov
push
mov
scas
add
outsb
or
push
xorb
fcomi
lret
mov
jge
push
into
pop
fcmovnu
enter
ljmp
js
ss
cmpsl
pop
inc
mov
pop
jae
fidivl
jl
push
fsubl
xchg
test
lock
push
push
repnz
cwtl
fbstp
jbe
lock
mov
cmp
call
lret
stos
cli
jns
ss
mov
loope
jmp
xchg
xor
push
pop
mov
outsb
dec
cmp
mov
out
cmpsb
cmpsb
ja
ficompl
outsl
fcmovne
sbb
imul
pop
mov
rcl
jp
test
gs
fwait
mov
testb
inc
or
ret
mov
cld
jno
push
mov
into
sbb
mov
pop
adc
push
mulb
leave
lret
pop
fstp
push
jg
lret
cld
out
xchg
loopne
js
into
lods
push
jae
xor
test
pop
mov
lret
pop
fldt
adc
movsl
pop
mov
aaa
push
mov
mov
adc
bound
out
rol
ficoml
les
cmp
lcall
xchg
out
push
fstl
or
sub
insl
mov
fmul
outsb
fucomi
into
movsl
and
xchg
adc
add
aaa
repz
iret
mov
pop
lods
jo
sarb
inc
inc
in
or
add
mov
add
inc
or
mull
xchg
push
clc
pusha
hlt
or
mov
xchg
pushf
sarb
push
mov
and
or
sbb
fsubrs
sbb
fdivl
lods
mov
jl
insb
inc
test
shll
bound
sub
testl
lock
mov
mov
and
movsl
scas
aam
nop
bound
in
ljmp
mov
xor
mov
ljmp
dec
fsub
mov
addl
jae
call
push
loopne
pop
std
cli
test
jnp
lahf
stos
aaa
mov
sbb
mov
adc
enter
mov
ds
pusha
mov
fiaddl
adc
jno
lret
fcmovbe
push
push
ficompl
sbb
out
sbb
cmp
and
jnp
test
inc
ljmp
arpl
stos
cmp
pop
xor
cmp
mov
inc
pop
mov
loope
cltd
mov
mov
cmc
movsb
adc
pusha
lret
js
mov
and
inc
and
imul
pop
jmp
pop
fmul
sti
cmp
pop
ss
xor
aas
in
sbb
popf
or
lahf
dec
lcall
mov
fs
repnz
add
aad
cmp
jl
ret
testb
sub
ret
repnz
inc
inc
pop
xsavec
mov
jmp
incb
insl
xor
mov
shll
pop
lock
bound
pop
movsb
push
nop
ljmp
push
adc
scas
add
or
xor
call
inc
jg
xchg
sub
repnz
das
iret
mov
sub
push
dec
shrb
and
or
cmpsb
rorl
arpl
test
mov
adc
dec
shrl
dec
dec
jo
test
testl
pop
cmc
dec
cmpb
mov
push
xorl
sbb
sbb
and
dec
sbb
jecxz
cli
mov
or
mov
xor
out
xlat
sub
xor
cmpsl
movsb
adc
inc
ljmp
loop
lock
test
shlb
stos
dec
mov
xchg
inc
pop
xchg
sbb
mov
lret
sti
imul
les
addr16
mov
jle
and
xchg
adc
clc
rorb
adc
jo
and
in
sti
inc
cli
mov
aaa
mov
xchg
mov
shlb
mov
cmp
sti
jo
mov
jbe
dec
sahf
jnp
loop
mov
dec
jb
out
pop
iret
loopne
jns
push
jmp
lcall
push
scas
pop
xor
mov
cs
imul
cmp
pop
cmpl
pop
nop
adc
cmp
repnz
push
cltd
stos
inc
mov
scas
scas
dec
ljmp
xor
adc
mov
push
mov
aad
add
mov
push
in
ja
adc
cmc
or
jge
jmp
jmp
js
add
adc
xor
pop
push
data16
mov
xchg
jg
dec
fiadds
pop
repnz
inc
fiadds
jno
pop
add
xchg
and
push
cmp
std
mov
add
hlt
adc
addb
xor
and
jp
es
pop
bound
scas
stos
out
mov
dec
adc
out
mov
subb
mov
fcompl
int3
add
lods
stos
fs
or
lahf
cmp
fs
mov
xchg
push
or
adc
lds
aas
fwait
aaa
lret
aaa
testl
mov
outsl
pop
xchg
popa
popf
sbb
aaa
mov
sbb
mov
repnz
popa
clc
cltd
aad
push
or
push
repz
in
ljmp
adc
in
mov
imul
jmp
xlat
test
aaa
xor
xchg
in
xchg
ret
push
iret
out
cmc
outsb
jns
push
mov
sar
mov
push
imul
xor
lea
jl
push
jae
dec
test
xchg
pop
cwtl
jnp
xchg
sub
fcmovnb
xchg
xor
mov
inc
cmpsb
push
mov
add
ja
xlat
sahf
jbe
shl
adc
jbe
jmp
inc
iret
cltd
jnp
fwait
add
aas
lods
mov
mov
jbe
pop
sub
aam
xchg
xchg
xchg
test
or
mov
insb
xorb
pop
mov
mov
sbb
pop
pusha
lahf
iret
xchg
xor
sub
dec
js
xchg
sbbl
or
aaa
shll
fcmovne
adc
int3
mov
cmp
div
lods
lods
xchg
sahf
in
jp
in
jg
fimull
or
scas
dec
call
aas
and
push
inc
pop
jb
xchg
pushf
outsl
mov
hlt
mov
jge
or
add
sti
mov
cmp
pop
clc
mov
xchg
push
popf
adc
push
shlb
jp
or
loop
or
aad
mov
or
arpl
and
clc
nop
xor
pop
xor
faddl
leave
jae
ficoml
mov
in
dec
daa
dec
sub
sbb
inc
pop
inc
pop
inc
and
mov
cltd
add
aas
aam
movsl
ss
or
xchg
ljmp
ror
fmuls
movsl
enter
lret
sbb
mov
push
cmpsb
xor
inc
scas
into
dec
leave
sbb
mov
adc
jbe
cmp
jbe
sub
xor
inc
push
xor
lahf
and
mov
or
mov
in
cmp
pop
sbb
mov
test
into
lea
fdivrs
hlt
dec
adc
in
jno
mov
aam
jecxz
out
dec
rclb
movsb
insb
add
arpl
and
adcb
shl
mov
xor
xorb
rcrl
int
movsl
inc
sub
test
or
aaa
fwait
rcrb
lods
or
popf
cmc
pop
into
unpcklps
jne
jmp
mov
adc
dec
dec
aam
sti
sti
mov
inc
dec
cmpsb
jnp
add
fldenv
int3
cmp
test
and
add
jp
and
mov
cwtl
cmpsb
sahf
mov
mov
push
push
cmp
pop
jmp
sbb
stos
xor
loope
lahf
test
icebp
loop
lcall
xchg
rcll
mov
sub
push
aas
mov
test
imul
inc
test
inc
add
or
jbe
mov
fsubrs
sarl
push
pop
das
adc
int
dec
xchg
fsubrl
inc
ds
xor
rcrb
sbb
js
imul
xchg
xchg
inc
std
sub
mov
or
xlat
push
pop
sub
ror
stos
je
cmpb
and
in
inc
sbb
sbb
mov
lret
in
jns
addl
jns
mov
sbb
sub
es
push
loop
inc
iret
pop
xchg
mov
sbb
fnsave
or
ror
imul
addl
xorl
cld
inc
xchg
aad
or
xchg
movsl
mov
aam
jne
inc
push
adc
jmp
xchg
ja
fadds
mov
dec
pop
sub
test
out
shll
dec
xor
sti
divb
cmc
jmp
push
pop
jbe
or
mov
add
pop
sbb
mov
test
insb
jmp
adc
call
cmp
mov
mov
cmp
jno
and
out
xor
mov
cmp
loope
jno
sbb
mov
mov
das
mov
xor
in
mov
jnp
or
aaa
stos
fwait
icebp
sub
jp
pop
xchg
xchg
dec
test
addr16
lea
jmp
lahf
mov
fistpll
sbb
out
xor
ljmp
ficomps
loop
fmulp
movsl
xor
int3
mov
lcall
mov
dec
inc
cli
jl
aad
jecxz
pusha
insl
frndint
dec
pushf
int3
push
cwtl
jge
sub
outsl
popa
dec
cmp
jns
sbb
sub
xchg
adc
arpl
sub
mov
lret
inc
movsl
es
fmul
dec
clc
sbb
inc
or
scas
into
sub
lret
sbb
pop
push
and
test
jo
and
out
test
sub
test
les
mov
add
inc
jmp
adc
pop
into
fldenv
scas
out
jbe
sbb
adc
mov
mov
mov
les
and
rcrb
jp
mov
ficoms
pop
xorl
sbb
adc
pusha
mov
fwait
popf
xor
popa
lods
movsb
nop
rcll
mov
test
sub
les
fsubrs
in
in
loopne
push
stos
testl
cmp
aaa
lock
sub
mov
mov
jp
xor
dec
insb
mov
push
aaa
popa
scas
addr16
xchg
xchg
xchg
cli
clc
ret
and
push
pop
mov
xor
out
leave
outsl
shr
stc
xchg
sbb
mull
mov
ljmp
call
fs
sub
stos
insl
sbb
jae
pop
dec
int3
push
jecxz
cmpl
pop
js
and
movsb
pop
sti
sub
filds
jg
loop
loopne
jl
mov
sahf
push
inc
inc
pop
cmp
lea
es
out
push
mov
int
dec
or
and
nop
and
mov
xlat
push
jle
push
or
and
sbb
in
jl
outsl
jg
addr16
dec
xor
data16
sbb
pop
out
out
mov
adc
fld
jbe
fistpll
stc
fidivrs
fstpl
flds
mov
and
xor
mov
out
and
into
cli
gs
mov
adc
xor
adc
das
inc
repz
jae
rolb
push
movsb
pop
inc
stos
repz
in
int3
mov
lods
adc
xor
js
mov
mov
jbe
fwait
lret
lods
add
add
dec
into
add
ret
fimull
int
dec
clc
mov
cs
jno
loope
dec
bound
fists
testl
adc
in
sub
push
mov
dec
cmpb
xchg
xchg
clc
or
sub
imul
into
flds
xor
dec
pop
movsl
divl
ljmp
ficomps
cmovbe
lods
push
fldl
add
add
imul
mov
out
popf
xchg
sbb
mov
dec
xchg
lock
cmpsb
add
fcom
adc
jle
jl
repnz
into
and
adc
dec
xchg
cmpsb
jnp
fldt
inc
es
pop
jo
jbe
sub
inc
mov
jle
cmpl
inc
mov
ffree
adc
xchg
mov
inc
sbb
mov
out
jmp
pop
xchg
cli
push
inc
aam
cmp
add
in
and
or
arpl
adcb
scas
imul
inc
add
dec
xor
pop
stos
cmp
cltd
dec
mov
push
enter
shl
fwait
xor
lds
shll
fnstenv
outsb
xor
movsl
movb
aad
sbb
jns
adc
ja
add
shrb
pop
rclb
push
lods
std
ds
dec
add
pop
xchg
cmp
mov
mov
pop
sarl
popa
out
adc
mov
xor
mov
movsl
je
ja
int3
inc
dec
sahf
jmp
lods
dec
out
cmp
mov
cmpsb
inc
in
ds
gs
movsb
jp
sahf
mov
jb
pop
mov
shrl
pop
loopne
push
xor
adc
xor
lea
cmc
mov
sbb
nop
mov
out
out
jp
cmp
scas
sub
ret
cmpsl
mov
mov
jmp
loope
dec
push
popf
pusha
push
and
idiv
mov
cpuid
jmp
jnp
fnstcw
in
std
fsubl
jl
inc
and
push
ss
add
mov
bound
lret
or
outsl
in
or
jno
jbe
imul
repnz
xchg
and
or
sub
ja
mov
or
lcall
mov
xchg
inc
jp
das
mov
mov
xor
out
inc
and
mov
pop
jns
sbb
shll
ret
enter
lret
test
in
and
add
xchg
mov
out
add
pop
mov
hlt
test
push
in
jmp
insb
lret
adcb
gs
cmc
jmp
setno
push
jmp
xor
addr16
xchg
inc
clc
cmp
or
mov
subb
cmpsl
test
mov
push
std
into
and
push
ja
test
and
pushf
jno
mov
stos
jo,pn
lods
in
pop
aad
ss
sbb
out
mov
xor
fstps
ret
enter
dec
dec
out
imul
xchg
ret
add
inc
in
sahf
pop
xor
les
and
add
icebp
loopne
sahf
outsb
add
adc
xchg
add
fwait
inc
pushl
ja
add
pop
outsb
lcall
sub
sbb
add
test
call
pop
lods
out
xor
fmuls
add
and
ss
aad
add
roll
cmpb
cmp
pusha
in
pop
aad
inc
cmpsb
xchg
push
and
lds
jge
push
insb
shrl
inc
imulb
xchg
popa
sub
sub
jno
repnz
mov
adc
ss
jbe
enter
test
inc
dec
adc
js
adc
icebp
jp
adc
es
cmpsl
popa
lahf
xchg
lock
fsub
inc
and
push
cmp
xchg
inc
scas
mov
mov
insl
cmp
lret
pop
lret
jno
cltd
imul
aas
adc
dec
jecxz
sahf
or
cmp
cmp
mov
outsb
push
sub
jmp
push
sbb
sbb
pop
mov
out
das
aad
xchg
push
mov
or
push
leave
fmulp
roll
dec
daa
jnp
into
mov
inc
pop
enter
call
push
jg
cmp
test
sbb
dec
jo
pop
fdivrs
test
sbb
out
mov
mov
imul
pop
ucomiss
inc
scas
je
out
rcll
add
push
mov
or
jbe
movsb
add
iret
sub
xor
cmp
inc
decl
cs
push
xchg
cwtl
mov
lea
or
xchg
jle
push
mov
outsl
and
int3
and
pop
mov
jecxz
xchg
lahf
loopne
and
sbb
icebp
ljmp
push
xchg
jne
repnz
repnz
inc
aad
imul
movsb
xchg
push
testl
pop
jmp
out
jo
pop
in
fildl
test
sbb
cmp
fbld
lock
cmp
out
cmp
mov
ror
neg
adc
mov
test
xchg
push
push
dec
sbb
out
sub
mov
jl
dec
int
sbb
lahf
jbe
jb
and
mov
rclb
xchg
dec
pop
movsb
std
xchg
aas
cmpsb
adc
cwtl
sbb
popa
stc
sub
out
sbb
bound
out
pushl
mov
ss
in
aas
pop
add
imul
fstpt
adc
cld
frstor
sub
adc
fidivs
inc
or
bound
dec
mov
and
adc
das
repz
outsl
cli
xor
dec
dec
sub
sahf
mov
sbb
imull
or
cmp
push
xchg
dec
rcrb
rcl
out
sub
mov
xor
mov
addr16
cmpsb
ret
dec
in
test
xor
push
and
sub
lods
lcall
shl
or
jecxz
mov
aaa
sbb
or
sar
mov
idivb
je
int3
inc
jmp
add
out
shlb
notb
stos
cmpsl
ds
lahf
gs
inc
sbb
add
sub
ds
roll
popa
adc
xor
xchg
jp
in
clc
push
jno
negl
ljmp
movsb
in
adc
stos
cli
push
push
dec
or
mov
lcall
sysret
sub
pop
xchg
sbb
pop
stos
stos
push
out
cmc
add
jmp
or
int3
jle
insl
pop
and
jp
xchg
into
push
pushf
pop
stos
xchg
into
adc
jg
fcoml
fcmovnb
inc
or
sbb
add
dec
rorl
adc
inc
mov
sbb
notb
push
into
jno
push
pop
jns
and
mov
daa
jbe
jnp
lea
js
inc
and
or
cmp
loop
out
loop
cmc
iret
imul
sbb
mov
cs
add
push
sbb
add
pop
sbb
dec
loope
jle
push
es
jge
sub
mov
pop
mov
and
adc
adc
inc
imul
arpl
push
or
sbb
push
and
sub
cwtl
sub
jne
imul
xor
push
into
jbe
or
dec
aaa
mov
mov
mov
jb
mov
push
cli
pushf
popa
adc
jnp
das
sbb
push
leave
in
adc
push
xor
repnz
adc
push
or
iret
hlt
lds
jmp
cld
rclb
js
mov
xor
imul
pop
mov
mov
jp
sub
jbe
repnz
adcl
and
stc
xor
sbb
loope
data16
pop
sub
mov
test
mov
push
inc
pop
call
dec
jne
clc
jl
xchg
fs
in
out
pop
mov
lret
nop
pop
insb
arpl
sub
xor
adc
jge
xchg
inc
fprem
pop
mov
mov
mov
mov
mov
mov
pushl
and
pusha
add
jle
gs
les
lahf
mov
mov
or
repnz
jno
jge
test
imul
shll
or
sub
enter
repz
pop
push
stos
sarl
lods
sbb
sub
xchg
jae
lods
sub
enter
and
mov
xor
aas
arpl
test
stos
sub
add
inc
cmp
popf
cmp
and
out
xchg
cs
adc
fidivrs
push
dec
inc
fcoms
dec
xor
je
xchg
jp
adc
inc
jle
mov
push
adc
xchg
sbb
or
inc
add
sub
in
aaa
insb
sbb
push
idivl
in
mov
xchg
scas
test
fstps
lea
stc
test
das
mov
sub
push
cmp
lahf
push
addr16
in
ffree
fwait
sarl
add
cwtl
jle
mov
xchg
dec
mov
mov
fwait
xor
jne
or
lods
mov
repnz
das
adc
nop
leave
nop
xor
imul
je
mov
sbb
dec
and
push
push
adc
or
test
xor
icebp
or
xchg
in
mov
add
retw
dec
stc
inc
cmpsl
in
icebp
mov
cltd
xchg
fcmovnb
xor
xchg
push
pop
fstps
dec
lods
dec
addb
aam
lahf
out
fidivrs
mov
or
les
orl
sti
xchg
adc
stos
sbb
ret
and
pop
adc
adcl
std
out
pop
adc
insb
pusha
dec
cmp
std
test
dec
fdivr
and
icebp
shll
xlat
cmpsb
je
bound
into
aas
push
xlat
ljmp
jecxz
das
lock
test
into
loope
add
roll
sqrtps
jbe
dec
mov
pop
in
sahf
dec
dec
add
sbb
push
sbb
mov
cmpsb
outsl
xchg
sbb
mov
std
popf
movsl
cwtl
push
fstps
daa
popf
cmpsl
mov
pop
pusha
jne
lcall
andl
shl
imul
jl
dec
xchg
pop
or
fucom
imul
pop
push
dec
test
cltd
xor
push
xorb
repz
cmp
negb
jge
sahf
cmp
movsb
mov
lahf
xchg
jmp
dec
add
jg
test
loopne
aas
in
lock
or
imul
frstor
loope
mov
sbb
dec
xchg
jae
sbb
sbb
test
sub
xor
sub
nop
push
mov
inc
mov
pushf
pop
icebp
sub
jmp
fimuls
inc
fimull
dec
pushf
cli
sub
out
loop
cld
xchg
hlt
bound
adc
xor
jmp
push
and
das
data16
ss
js
push
shll
sub
dec
ss
js
popf
mov
les
xor
movsb
data16
and
sub
or
or
add
push
mov
ret
mov
xor
xchg
sub
sub
jb
or
lods
xchg
fimull
inc
movsl
push
xorl
rorl
jge
sbb
xchg
push
dec
lds
jb
mov
rorb
shlb
cmc
push
movsb
ljmp
clc
push
sub
das
out
js
pop
movb
jecxz
outsb
adc
inc
loopne
fwait
dec
xchg
push
mov
dec
arpl
xchg
lret
inc
aam
syscall
push
dec
andb
lods
clc
inc
bound
lds
push
addr16
xchg
int3
and
bound
in
mov
mov
push
sbb
mov
loop
rcrl
idivl
imul
lock
sub
mov
shr
pushf
inc
arpl
sub
add
movsl
cmp
pop
mov
pop
ljmp
adc
or
sbb
add
adc
or
icebp
cmp
sbb
xchg
push
mov
push
or
idivl
leave
adc
shrb
pop
bound
xor
mov
jae
aam
int
scas
ficompl
cmp
push
add
cmpsb
push
jbe
sbb
jno
insl
add
sahf
mov
lcall
push
test
test
mov
lea
stos
xchg
test
cmc
jb
rcrb
movsl
xor
call
out
lahf
push
mov
in
mov
dec
notl
jg
pop
pushf
cmp
fyl2x
jmp
ss
loope
lods
or
out
inc
subb
stos
js
or
dec
bound
sub
jmp
les
push
aas
cld
lahf
es
cmp
aas
pop
jge
das
ds
xchg
pop
lret
pop
fdivrp
push
sub
add
popaw
pop
popa
inc
insb
push
sub
imul
out
in
cmpsb
test
das
jmp
mov
shll
jp
or
push
addr16
addr16
aas
enter
ret
mov
xchg
fsubrs
dec
mov
xchg
add
cmp
jo
inc
fyl2xp1
and
int
icebp
inc
and
rorb
out
mov
push
in
pushf
push
inc
xlat
or
sbb
mov
jge
push
sbb
aad
pop
insl
add
cmp
loop
jae
bound
xor
cmp
fisubs
mov
xchg
ja
enter
push
dec
loopne
mov
andl
cmp
fimuls
cmp
lcall
repnz
divps
cmpsb
jne
loop
shll
iret
movsb
std
hlt
repz
arpl
add
lea
jl
mov
ret
push
movsl
mov
aam
push
mov
xchg
outsl
cmp
out
fnstsw
notl
lret
inc
outsb
dec
jle
xor
adc
and
cmp
in
and
fwait
xchg
jl
adc
shr
or
xchg
jb
in
aaa
ja
sub
jno
dec
cmc
jl
sub
jo
push
adc
jp
push
ds
cmc
enter
stos
icebp
and
sub
movsl
push
fdivrl
ss
ret
call
popa
or
loopne
inc
and
mov
push
xor
popf
fidivs
dec
enter
add
and
bound
or
add
push
or
and
cs
into
sub
out
int
rcrl
stc
push
xchg
icebp
sbb
fdivrs
add
jne
sub
xchg
mov
out
jno
stos
repz
mov
lock
lret
dec
mov
mov
cwtl
cmp
inc
mov
adc
andl
lods
test
outsl
push
shlb
out
out
xchg
mov
outsl
cmc
xchg
bound
ret
mov
in
push
jnp
sub
arpl
test
lods
adc
filds
aas
mov
cmp
repnz
pop
mov
xchg
lret
pop
dec
adc
es
xchg
enter
clc
test
mov
inc
fadd
pop
imul
and
repnz
push
cli
jg
imulb
inc
push
sbb
jmp
xchg
fistpl
mov
mov
sti
sahf
shll
fnstcw
mov
stos
clc
push
add
lds
jno
push
pop
dec
sahf
mov
push
das
lret
mov
adc
das
dec
jg
jge
sub
mov
gs
rol
repz
std
cld
mov
xor
stos
cmp
push
ss
dec
je
leave
sub
inc
jmp
or
pop
jg
mov
iret
adc
mov
and
rorb
xchg
je
cmp
or
xor
je
xchg
sbb
mov
sub
push
push
dec
test
cmp
cmp
sub
test
adc
pushf
mov
in
jmp
dec
mov
and
loop
xlat
sbb
stos
jp
dec
in
mov
xorb
call
pusha
sarl
dec
fisubs
stos
add
or
add
mov
jg
fnsave
lds
mov
mov
xchg
sub
cmpb
aaa
popf
popa
int3
mov
jae
aaa
mov
sub
or
mov
mov
xor
loope
dec
cwtl
arpl
fdivs
popa
dec
sbbb
inc
jbe
popf
inc
das
ds
je
sbbb
lods
cmpsb
aaa
mov
ss
rcrl
ret
mov
repnz
pop
inc
addr16
mov
pop
inc
dec
pop
ljmp
bswap
out
sbb
ss
jmp
lods
xchg
dec
push
leave
adc
pop
popf
jb
jp
leave
jne
loope
mov
fistl
dec
sub
push
pop
cld
pop
pop
push
imul
ret
jo
jbe
ja
cltd
iret
xchg
add
mov
fcoms
frstor
imul
sbb
popf
cmpsl
lahf
xor
pop
rolb
cld
lret
jo
inc
push
or
push
aad
pop
ss
rcll
add
pushf
xchg
out
push
fidivl
pusha
repz
ret
test
push
inc
lods
push
inc
push
push
jmp
dec
movq
sbb
pop
icebp
sbbb
pop
fstpl
mov
mov
scas
sub
ja
clc
es
loop
jae
or
scas
xor
or
or
pop
push
or
fbld
lock
scas
sub
pmuludq
cmpsb
pop
pop
or
mov
mov
fnstenv
out
movsl
sbb
bound
lock
lahf
imul
movsb
mov
xchg
jecxz
cmpsl
insl
xor
mov
lret
mov
pop
ljmp
fdivl
nop
nop
push
data16
push
in
inc
or
fcmovbe
adc
outsb
pop
aam
push
add
out
add
sbb
iret
sarb
mov
adc
push
mov
mov
xchg
jo
pop
mov
call
test
and
fcoms
sub
dec
push
xchg
adc
pop
xchg
inc
sub
or
jns
push
cmp
out
mov
pop
test
cmpsb
push
sbb
fstps
push
out
xchg
cmp
repz
lds
jae
mov
lods
mov
movsb
sub
xchg
sub
jmp
sbb
pop
test
add
inc
cwtl
into
push
inc
push
jmp
out
push
pop
cmp
mov
shr
xlat
scas
push
cmc
incb
xchg
add
out
cwtl
mov
insb
fsts
xor
mov
ret
xor
cmp
popf
leave
gs
mov
pop
and
mov
adc
mov
fwait
mov
or
popa
and
xchg
in
rolb
repz
add
out
push
mov
adcl
push
ljmp
int3
out
and
test
inc
mov
cmp
es
push
mov
pop
sub
cmpsl
loop
push
or
test
loope
or
xchg
inc
test
adc
or
xor
cmp
mov
add
jno
arpl
sub
xor
scas
mov
addl
imul
std
mov
lods
dec
push
iret
popa
fs
xchg
arpl
push
pop
xchg
jns
mov
adc
testb
jmp
pop
les
int
mov
inc
pop
jnp
arpl
jb
fimuls
fwait
sarb
insl
mov
xor
xorl
lock
add
clc
int
rorb
mov
fnstenv
cli
repnz
push
add
cmp
pop
in
push
or
xchg
lcall
push
mov
btc
push
inc
repz
xchg
xor
xor
lods
cmp
repnz
movsl
pop
shll
dec
jno
lcall
adc
lock
imul
or
or
fcomi
gs
sbb
mov
xchg
add
fwait
outsb
pop
sti
jmp
add
mov
inc
inc
es
sar
mov
popf
push
sti
mov
jg
and
or
sub
pop
insl
and
cmpsb
outsl
jg
mov
out
push
pop
filds
pop
scas
scas
push
cwtl
lock
fimuls
mov
inc
jns
inc
sbb
pop
pusha
imul
shll
adc
push
lods
ss
sub
decb
mov
in
outsl
sahf
mov
and
lea
test
ds
jle
cmp
and
inc
hlt
sbb
subb
cmp
push
js
push
inc
movl
jnp
jmp
pop
addr16
add
fwait
aad
add
pop
jb
adc
aad
cmp
add
xchg
mov
sub
mov
inc
stos
test
add
push
insl
cmp
inc
int
mov
adc
cli
ss
jmp
mov
mov
push
dec
push
jg
sti
sti
sub
scas
add
scas
lcall
push
bnd
ljmp
xchg
aam
popf
fmull
cmpsb
rorl
into
cltd
stc
cmpsb
fwait
andb
stos
push
mov
popl
and
clc
out
and
test
xchg
pop
jne
leave
ljmp
repnz
movswl
or
call
push
pop
xchg
xchg
dec
divl
pop
fists
xor
mov
test
and
daa
iret
add
rolb
sbb
pop
xchg
mov
int3
mov
add
fiadds
inc
and
pop
fisubrs
jecxz
mov
push
movb
andl
sbb
jbe
fsubs
shlb
pop
in
bnd
pop
xchg
xor
dec
xchg
cli
inc
push
test
loop
xchg
test
xchg
shll
jl
mov
jle
jae
add
inc
shll
or
dec
sbb
xchg
mov
jp
out
add
adc
xchg
push
jge
or
das
fnstsw
inc
mov
xor
lds
int3
int
pop
add
add
fdivrl
xor
jmp
add
aam
jo
stos
insb
repnz
dec
lret
je
popa
dec
mov
jmp
fimull
mov
ret
out
cmc
mov
mov
ss
adc
push
dec
push
repz
js
pushf
sbb
and
outsb
sbb
cmpsl
getsec
add
sbbb
rcrl
mov
jl
xchg
leave
rcll
pop
nop
loopne
lret
not
es
cli
jmp
mov
cmc
mov
fsubrs
scas
jno
lds
inc
add
lret
jecxz
push
leave
and
xor
adc
imul
daa
pop
xchg
adc
jbe
hlt
imul
movsl
push
xchg
sbb
or
movsl
adc
call
sarl
lahf
mov
push
dec
mov
jae
or
dec
test
lock
lods
push
ret
mov
adc
push
orl
imul
rcll
shl
xchg
cmp
sarb
jno
pop
mov
lret
xchg
loop
outsl
sub
fdivrp
pop
jne
sub
jecxz
frstor
lods
fcmovnb
xor
imul
enter
lret
push
inc
push
testl
frstor
fsubr
jbe
xor
insb
add
idivl
es
jge
dec
cltd
into
cmp
int3
sbb
inc
nop
test
std
adc
jns
jb
outsb
cld
jg
ret
or
mov
movsl
scas
add
cmpsl
scas
mov
cld
push
int3
cld
and
cmc
pop
jo
lcall
add
xchg
xchg
sbb
cmpsb
mov
lret
aas
mov
outsl
inc
fiadds
fcoml
mov
sbbb
lea
pusha
jbe
lods
sub
scas
mov
xor
and
mov
cmpsl
rolb
jnp
push
jmp
fidivs
out
hlt
sbb
rcrl
repnz
repnz
jmp
mov
pop
mov
test
sub
sub
pop
sub
pop
mov
mov
test
or
test
popf
or
subl
fwait
icebp
fs
loop
movsb
jns
outsb
xor
inc
cmp
pushf
mov
pop
adc
outsb
data16
xchg
jo
cmp
dec
add
daa
push
mov
js
pop
xor
sbb
jl
cmp
hlt
xchg
outsb
jb
lock
jnp
rorb
dec
sbb
pop
ljmp
lret
fdivr
sbb
adc
ret
and
cmp
movsb
pushf
neg
and
mov
fnstsw
dec
xchg
lds
cmp
sub
mov
cmp
xchg
enter
pop
popf
fwait
mov
and
sub
or
push
or
mov
lahf
in
cmp
nop
xlat
mov
mov
pop
xchg
push
cli
add
dec
cmp
mov
out
stos
js
ret
iret
xor
aad
imulb
add
sbb
lods
jbe
movsl
js
adc
adc
cli
mov
cwtl
push
ds
dec
fists
pop
mov
leave
mov
cmp
clc
mov
aaa
push
repnz
movsl
jmp
cwtl
xor
pop
mov
add
es
dec
mov
xchg
jae
push
out
mov
je
lea
mov
pop
mov
fs
fcoms
sbb
fcmovb
sbb
clc
mov
inc
movsb
mov
int
test
cmpb
imul
push
lahf
cld
or
popf
test
je
jb
rcrb
adc
push
sub
lret
mov
push
xor
sbbl
jge
sbb
es
jb
jns
jp
aaa
mov
mov
shlb
cmp
out
mov
js
mov
mov
pop
and
scas
jae
jg
xchg
pop
out
test
pop
out
pop
push
rorb
stos
stos
pop
fistpl
inc
xchg
je
sbb
lcall
and
cmpsl
into
ret
pop
sub
outsl
pop
arpl
jmp
mov
stc
pop
lea
movsb
ljmp
jecxz
xchg
mov
push
push
add
pop
cltd
ss
test
mov
lret
xchg
adc
cltd
sbb
adc
dec
inc
dec
mov
inc
inc
inc
cmc
and
loopne
ret
fs
je
cmp
pushl
adc
add
mov
lea
cmp
mov
test
aaa
ds
jge
adc
cli
mov
imull
jno
xchg
xchg
cmc
sbb
jno
leave
xchg
lea
movl
inc
cmp
inc
sub
jle
movsb
add
adc
pop
inc
adc
mov
pop
sub
sub
das
xor
mov
daa
mov
jecxz
es
stc
xchg
jae
xor
rcrb
and
in
add
pop
mov
push
jl
sub
pop
pop
inc
imul
roll
or
mov
cmp
in
jnp
or
push
ret
push
movsb
cld
mov
xchg
add
mov
stc
lods
push
mov
nop
int3
cmp
cmp
in
mov
test
xor
fwait
pop
push
cmpsl
js
cli
inc
test
xor
pop
in
iret
hlt
addr16
icebp
repz
xor
loop
fisubl
mov
cmp
add
mov
add
mov
pop
jmp
cmp
cltd
aas
push
orl
xor
push
add
jbe
sub
lods
test
insl
inc
xor
add
adc
xor
outsl
rcr
xlat
jb
repz
mov
loope
push
fistpll
add
inc
jno
pushf
out
cmpsl
xchg
hlt
ret
mov
dec
pop
aas
cmpb
push
popa
pop
mov
test
int3
ret
push
xchg
cmpsl
mov
push
notb
rolb
aad
test
mov
adc
cmp
jne
mov
inc
imul
xchg
sub
push
dec
je
and
das
mov
xlat
lds
jo
cld
lret
lods
fs
sbb
loope
mov
daa
pusha
mov
jmp
fs
push
xor
repz
xorb
sbb
sahf
xchg
xor
jnp
out
popa
cmp
enter
mov
mov
icebp
adc
popf
fiaddl
cld
in
mov
shl
arpl
push
cmp
push
jmp
dec
lea
sub
pop
dec
loope
cmp
repnz
cmpsl
shll
xchg
dec
jns
add
pusha
add
cmc
inc
lea
cld
setle
sub
mov
sbb
mov
mov
and
out
mov
das
jne
addr16
jbe
mov
or
idivl
ljmp
jnp
mov
lcall
jo
xor
test
push
cmp
jnp
sarb
mov
mov
test
imul
cmp
ljmp
cmp
sub
sbb
cld
pop
sar
dec
loopne
sbb
or
ret
xchg
out
sub
vpcomb
mov
aaa
popa
mov
sub
mov
sub
and
jns
subl
jle
push
outsl
test
push
aas
jnp
jg
call
stos
repnz
outsb
push
push
mov
test
out
push
push
push
jns
out
xor
add
add
pop
mov
out
addb
jne
sub
loop
xchg
or
pop
jno
xchg
lahf
and
xchg
jmp
loopne
mov
jecxz
mov
mov
or
inc
mov
fnstcw
cmp
adc
insl
adc
sbb
imul
sbbb
lods
xor
mov
ss
push
push
dec
inc
stc
cmp
mov
mov
add
leave
in
sbb
lahf
insl
shr
and
pusha
imul
aas
in
idivl
gs
clc
xchg
adc
sub
jmp
pushf
mov
mov
sarb
iret
lods
ja
nop
cld
aad
adc
mov
pop
jle
fildl
shr
mov
ret
xchg
outsl
sbb
sbb
adc
in
mov
leave
push
adc
nop
xchg
insl
mov
fcmovne
add
ret
mov
repz
jl
roll
gs
xor
mov
jge
into
popa
mov
pop
daa
adc
jg
and
jns
jecxz
popf
jmp
fdivs
je
push
cmp
sub
xchg
mov
rclb
mov
dec
sub
pop
lret
and
push
call
mov
lock
push
fs
mov
or
mov
mov
pop
bnd
add
cmp
mov
jnp
mov
loope
sub
and
mov
das
dec
icebp
movsl
sub
cmc
repnz
mov
add
and
sub
das
inc
mov
addr16
iret
xor
mov
push
pop
movsb
test
popa
jnp
fwait
mov
jns
daa
jge
rol
and
stos
imul
or
mov
out
aaa
rcr
popa
pop
push
fisttps
cmp
and
pop
imul
jge
xor
cmpl
push
ret
ss
mov
mov
cmp
fldt
cmp
jnp
out
sbb
add
sub
add
pop
fdivrl
push
xor
in
cmp
adc
adc
xlat
mov
mulb
mov
or
sbb
sub
in
pop
ja
cld
ljmp
jmp
mov
js
push
dec
out
stc
inc
push
add
in
addr16
or
sbb
jae
mov
loopne
push
push
fs
aam
xor
xchg
cmp
add
cwtl
jge
mov
add
xor
sub
push
ja
pop
fwait
lea
or
scas
aam
clc
in
jbe
das
add
sahf
dec
and
jb
movsl
lds
or
jns
sub
push
mov
aad
add
jge
pushf
jecxz
ss
jle
jmp
cmpsl
cwtl
adc
dec
loopne
aaa
inc
push
mov
jmp
push
lock
or
mov
push
jbe
sarl
jle
into
pop
mov
mov
jl
push
pop
enter
lahf
mov
gs
movsb
aam
fstpl
lret
add
int3
jne
or
loope
xchg
cld
add
fisttpll
in
aad
push
test
lds
or
insb
cmp
sbb
sarb
xchg
and
or
out
inc
stc
lock
adc
inc
orl
add
loop
test
cli
mov
shr
pusha
lret
lret
ret
inc
adc
and
call
into
mov
inc
dec
push
pop
fs
jns
dec
add
std
push
inc
movsb
xor
xor
push
push
add
mov
sbb
mov
mov
mov
pop
scas
std
fdivp
and
mov
jbe
fs
cmp
jmp
enter
add
mov
adc
or
lret
jl
or
mov
sarl
inc
stos
mov
lcall
add
lods
add
push
ljmp
popa
aam
cmp
xchg
ss
outsb
cli
adc
notb
and
mov
adc
loope
push
idiv
lret
mov
ss
pop
xor
inc
mov
pushw
cmp
sub
pusha
mov
push
inc
xor
test
mov
sbb
pop
pop
mov
sahf
and
jae
push
and
jbe
mov
and
dec
insl
jo
arpl
push
test
sbb
arpl
shll
ja
gs
cmc
cmp
or
push
push
or
xor
outsb
addl
popa
fstpt
inc
sbb
icebp
push
call
ret
xchg
dec
mov
dec
sbb
xchg
push
jg
sub
jo
mov
or
stos
inc
mov
dec
inc
fcomps
lods
xlat
cmp
fdivrs
xchg
ss
mov
repz
xchg
mov
sub
xchg
mov
cs
mov
inc
cwtl
insl
and
pop
loop
mov
mov
repnz
loop
ret
aaa
hlt
sbb
aam
sahf
sti
int
imul
insb
subl
int
jo
sahf
pop
sub
int
sbb
repz
scas
sahf
cld
int3
push
gs
iret
cs
bound
add
jl
test
test
dec
cmpsb
push
gs
xchg
adc
insl
and
cmpsb
xor
jno
repz
jl
popa
bound
mov
jns
adc
lret
dec
imul
mov
mov
stos
push
push
orl
movsb
pop
push
cmp
jp
out
xchg
inc
add
sahf
mov
mov
lcall
cmp
mov
add
das
subb
mov
mov
int3
adc
aam
add
cmp
push
in
push
out
sbb
pop
fisubrl
cmp
iret
push
cmc
add
out
mov
and
push
lods
in
or
sub
les
lods
fs
fbstp
cld
insl
iret
loopne
xchg
fwait
stos
ret
int
pop
es
mul
int3
cmp
xlat
cli
movsl
mov
sbb
popf
fistpl
inc
sub
cmc
jno
out
daa
lret
mov
mov
repz
mov
out
in
aaa
and
pusha
jnp
and
cmp
js,pn
mov
mov
daa
and
add
loopne
rclb
popf
popa
lea
jp
or
out
aas
push
popa
in
xlat
and
push
ret
faddl
jo
es
sub
mov
and
xchg
or
pushf
sbb
aas
ds
cmp
jns
sub
push
mov
and
jb
mov
or
neg
lea
lcall
mov
imulb
sahf
rsm
mov
notl
gs
dec
xchg
popf
fs
rcll
xchg
lock
ljmp
inc
inc
xchg
lahf
popa
iret
mov
mov
and
aas
xchg
mov
jbe
cltd
fcoms
sbb
cs
add
adc
pop
pusha
sti
mov
outsl
test
mov
mov
jge
outsb
fwait
test
ja
add
jae
iret
cmpsb
inc
xlat
cld
out
jp
pop
inc
xchg
decb
sar
xor
sbb
xor
pusha
call
jns
test
stc
pop
fisttpll
lods
sbb
out
pop
into
xchg
mulb
shlb
shlb
mov
lds
xchg
loopne
sarb
testb
fsubs
mov
leave
sbbl
jae
cltd
mov
adc
rorl
xlat
adc
sbb
loopne
adc
jne
pop
adc
lock
mov
hlt
addb
fimuls
pop
sub
sbb
imul
mov
lock
test
mov
sbb
pusha
hlt
and
push
and
mov
cmc
std
fcomp
test
add
inc
inc
cmp
jecxz
xchg
stc
jge
and
test
mov
cmp
jecxz
decb
lds
shl
lods
negb
imul
sbb
sti
movsl
out
jns
outsl
dec
adc
test
jae
sub
and
lods
push
jno
sbb
fsubrp
pop
popa
ljmp
mov
mov
pop
out
lahf
das
jb
sbb
sbb
pop
shll
inc
push
xor
fldz
sub
xor
loop
dec
mov
jns,pt
enter
shr
in
push
ret
das
cwtl
lds
xor
inc
andb
daa
inc
out
mov
sub
xchg
xchg
mov
sbb
fisubrs
roll
inc
test
fsubl
dec
adc
sub
dec
movsl
fisubl
sbb
shll
xor
aam
jg
push
mov
mov
pop
sub
iret
add
fsubrl
xchg
out
push
xchg
jl
xchg
jns
pop
xchg
out
sbb
stos
sbb
dec
add
xor
call
ss
das
push
push
mov
ret
adc
pmullw
sub
mov
jle
int
pop
cmpb
or
or
or
inc
into
fcoml
rcrl
mov
pop
or
inc
push
push
pushf
pushf
insl
popf
out
pop
arpl
mov
in
sbb
not
mov
mov
mov
stos
dec
ror
lds
add
lea
or
cmp
xor
fisubrs
test
pop
adc
stos
xchg
add
pop
push
mov
inc
or
xchg
aam
test
push
xchg
mov
dec
outsb
xchg
pop
loope
imul
clc
and
popf
cmp
mov
in
mov
cld
out
enter
cmp
jnp
mov
scas
pop
int
or
jns
pushf
insl
and
sbb
or
sub
xchg
push
test
fmull
in
mov
sub
and
mov
cmp
push
mov
inc
pop
and
lahf
je
inc
les
mov
dec
sub
and
cli
sbb
lahf
imul
mov
jns
inc
cmp
dec
sub
in
jmp
push
cwtl
in
cmp
in
mov
push
push
push
insl
scas
lods
dec
lock
mov
in
dec
jp
inc
jae
xchg
xchg
pop
push
cli
push
mov
sbb
or
aad
movsl
nop
pop
orb
test
fistpll
loopne
jle
push
hlt
jp
out
dec
cmp
lret
daa
jnp
shl
add
lret
push
fldcw
mov
and
inc
add
cmp
scas
dec
repz
mov
inc
sbb
and
aaa
pusha
mov
xor
mov
dec
or
hlt
sub
jg
outsb
sbb
insl
cld
mov
out
mov
sbb
mov
add
in
test
push
push
jg
xchg
push
stos
sbb
add
mov
mov
lods
popa
in
xor
pop
test
jge
dec
add
mov
push
clc
fwait
shrb
xorb
adc
or
std
inc
sbb
inc
rcrb
sbb
jmp
sub
add
and
mov
ss
jae
jl
je
popf
loope
xor
add
or
cmp
shrl
sub
push
mov
mov
push
fadds
imul
or
les
mov
lods
in
mov
fiadds
jne
jb
sbb
xchg
shlb
shll
jmp
inc
ror
ds
insl
les
xor
insb
pusha
and
imul
popf
pop
pop
pop
cmp
outsb
pop
loop
mov
data16
mov
ss
push
shr
mull
pop
add
sbb
inc
imul
call
jp
out
scas
int
cld
outsb
mov
imul
cmp
sbb
in
xchg
dec
jo
mov
push
dec
jle
fidivl
xchg
jp
imulb
add
and
int3
das
outsl
xchg
ljmp
mov
js
sbb
dec
push
sahf
and
pop
push
cwtl
xchg
outsl
sbb
dec
and
jp
or
popf
mov
adc
xlat
repz
jmp
dec
push
push
push
nop
inc
sub
je
mov
sub
ds
popl
testb
test
push
and
pop
push
add
mov
cmpsb
cld
dec
andb
mov
lea
sub
shlb
ret
loope
fwait
out
push
sub
std
jle
jo
cmc
call
adc
aas
sub
mov
test
sbb
push
mov
je
push
hlt
inc
fstpt
dec
or
adc
add
xor
lods
xor
pop
cmpsl
jno
mov
scas
pop
xchg
or
push
loop
into
icebp
fwait
mov
fsubp
and
int
and
xchg
push
stos
enter
mov
pop
and
cltd
rcrl
dec
test
insl
or
xchg
push
cmp
mov
add
sbb
and
jb
in
push
sub
mov
mov
mov
pop
in
mov
mov
xchg
push
cmp
inc
rcrl
les
movsb
fnstenv
and
xchg
jns
xchg
or
push
or
push
lods
loop
pop
mov
repnz
pop
push
inc
cmpsb
sbb
leave
or
mov
inc
push
mov
dec
or
jae
fwait
lods
int
mov
add
popf
les
loope
push
adc
cmp
push
loope
in
inc
sub
lret
jb
lea
xchg
mov
stos
hlt
dec
sbb
in
cmp
push
adc
jbe
mov
or
popa
decl
add
int3
mov
inc
push
mov
mov
out
push
shrl
ficomps
jns
inc
add
subl
and
mov
xchg
mov
lahf
and
imul
sbb
mov
sub
xchg
out
jno
leave
jnp
jnp
sub
inc
adc
out
aas
sarb
ret
xchg
jle
mov
fwait
pop
jne
movsb
int
push
mov
cmp
es
ds
fisttpl
push
adc
gs
mov
mov
cs
loopne
cli
les
out
outsl
outsl
ljmp
mov
aam
add
adc
or
int3
adc
sbb
rorb
mov
cmc
lahf
mov
or
mov
xor
pop
fnstenv
icebp
sahf
int3
push
adc
stos
je
mov
lea
mov
fs
mov
sbb
enter
inc
fcmovnb
shlb
out
cmp
cmp
insl
dec
sub
ret
aaa
test
cmp
repnz
cmp
dec
movsl
outsb
into
aaa
dec
add
arpl
repz
xor
test
mov
pop
mov
jl
mull
adc
out
loop
decl
ja
sub
jae
cltd
scas
jne
jnp
push
testb
or
pop
push
pusha
inc
push
pushw
add
xor
popa
lahf
xchg
mov
add
adc
test
cmp
sub
cmpps
push
jmp
mov
in
lods
mov
sahf
fincstp
ret
lea
mov
les
ss
iret
jns
daa
aaa
fnsave
push
scas
out
and
adc
out
imul
push
lret
adc
push
cmc
outsb
stc
lret
xchg
out
mov
mov
dec
icebp
bound
sub
insb
xchg
stos
and
mov
js
outsl
push
mov
jbe
pop
cmp
pop
xchg
sub
pop
in
gs
movb
cltd
inc
cltd
in
cmp
cmpsb
filds
pop
xor
fs
imul
jmp
es
fwait
imul
push
icebp
mov
cmp
or
push
dec
movsb
popa
and
push
jl
mov
mov
rcrb
mov
or
sahf
insl
cmp
data16
out
jle
mov
in
inc
cmpsb
jp
gs
into
xchg
aas
cmc
popl
adc
andl
sub
jnp
rolb
data16
sub
adc
mov
loopne
rcl
inc
pop
lahf
out
flds
repz
and
mov
push
jl
clc
fldl
popa
mov
and
jb
adc
out
aaa
xorl
in
gs
mov
push
mov
push
movsb
adc
jne
dec
pop
cmc
out
and
stos
cmp
dec
sti
movl
stos
add
repz
fildl
xorb
jl
in
and
mov
stc
xor
adc
mov
scas
in
mov
sbb
jns
mov
inc
sti
cs
insl
xchg
xchg
jnp
xchg
sti
push
into
pop
or
cs
push
xor
pop
jecxz
sar
lcall
xor
mov
xchg
jns
popa
jmp
sbb
sbb
lock
std
pop
jle
shrb
pop
lret
lret
adc
aas
jns
adc
stc
call
scas
xchg
add
push
cmp
enter
inc
ds
stos
lret
imul
sub
in
push
lock
mov
or
shll
je
dec
jbe
pop
add
adc
lret
push
aaa
adc
fldl
jbe
sbb
xchg
jge
insl
cmp
fisubrs
xorl
jns
push
rorl
xchg
jecxz
ret
xchg
lock
lret
cs
cmp
movsl
add
inc
sbb
adc
or
bound
in
pop
das
gs
jp
mov
push
jno
stos
jns
stos
or
stos
xor
cmc
out
add
jl
and
jb
popa
lds
sahf
push
cmc
push
mov
push
in
adc
xchg
in
icebp
test
push
dec
stos
into
sub
enter
and
cli
sub
add
ret
leave
enter
mov
sub
dec
dec
pop
add
mov
jp
std
sbb
sbb
cmpsb
lods
xor
inc
pop
mov
sbbb
jnp
je
sbb
or
fbld
ljmp
cltd
fcoml
push
loope
lret
adc
cmc
ret
push
fs
bound
popf
mov
pop
mov
sahf
mov
shl
add
fldenv
jo
mov
mov
cs
jl
inc
popa
mull
jnp
adc
mov
push
xchg
add
std
ret
sbb
mov
iret
jecxz
test
iret
test
lret
push
outsb
adc
faddl
jbe
cmp
lcall
mov
and
in
out
sbb
es
xchg
mov
pop
lock
mov
and
notb
push
or
xchg
mov
test
mov
hlt
out
ljmp
mov
cltd
jae
mov
xchg
dec
mov
fisttps
enter
sahf
lea
jno
xchg
test
or
outsl
jl
or
sbb
das
fdivs
or
xor
jecxz
xor
int
js
mov
xor
mov
sub
cmp
xor
lds
inc
pop
mov
gs
data16
push
mov
popa
xchg
out
fld
add
push
movsb
into
sub
jns
xchg
and
dec
lods
xchg
mov
add
pop
sbb
repz
cmp
js
movsl
xor
inc
std
jns
add
int
cmp
fwait
mov
jae
xchg
ficoml
popa
xchg
add
cld
das
xor
add
add
mov
sub
cld
je
hlt
sub
xchg
cmpsl
lock
sub
cmp
xor
dec
push
test
cs
push
add
adc
lods
mov
xor
sub
scas
push
icebp
sar
mov
imul
push
sahf
jge
sbb
cmp
lock
jne
inc
adc
inc
fidivs
jge
cmp
push
inc
push
mov
out
cs
lods
pop
cmc
ret
cmp
cmc
mov
push
cs
add
fwait
push
outsb
xorl
mov
neg
or
popf
fnstcw
stc
gs
add
push
cmp
push
mov
dec
add
or
scas
loopne
inc
mov
sti
jne
cltd
pop
xchg
fbld
insl
ljmp
adc
sbb
shrb
add
js
inc
jp
lock
inc
add
or
or
push
rcrl
jnp
mov
ret
mov
jbe
cmp
sbb
popa
call
inc
mov
out
push
mov
pop
sbb
enter
iret
xchg
sti
jbe
or
hlt
xchg
mov
popa
sub
mov
ret
aam
inc
jne
imul
dec
jge
bound
mov
mov
out
xchg
sbb
iret
push
cmp
fdivrs
sbb
je
ljmp
movsb
inc
add
jae
and
ret
mov
mov
mov
aas
insl
cmpsl
add
and
scas
xchg
lret
pop
sub
repz
mov
daa
push
mov
sbb
ret
mov
test
dec
push
jg
inc
shr
xchg
shlb
loope
fsubrs
je
sub
xor
outsb
aas
add
mov
xchg
mov
dec
jle
xor
lock
orb
enter
push
leave
subb
addr16
and
in
and
fmuls
or
icebp
push
xchg
jno
cwtl
cs
mov
addr16
enter
jp
sub
dec
fdiv
enter
xor
ret
sbb
into
ljmp
jns
stos
aam
outsl
vphsubbw
fsubr
setge
sub
mov
arpl
lds
sbb
or
aam
mov
lods
fistpl
xor
xchg
sbb
add
or
sbb
sahf
in
test
sub
ss
stos
ret
test
adc
out
stc
cltd
orl
lret
sbb
rorb
inc
and
mov
shlb
inc
xor
dec
repz
push
push
jmp
leave
mov
mov
and
push
xor
xchg
and
pop
xchg
lret
mov
notl
divb
cmpsl
pushf
std
add
mov
es
pop
add
mov
dec
cwtl
fs
sbb
jmp
enter
mov
je
int3
loope
xchg
mov
xchg
je
insb
out
cmp
push
mov
inc
lret
xlat
inc
adc
es
adc
mov
push
sti
add
mov
arpl
mov
fiaddl
xchg
inc
js
xchg
in
mov
mov
xlat
lea
loopne
add
jg
in
xchg
xlat
aad
jbe
push
xor
push
jae
in
cmp
aas
pushf
shlb
test
jl
push
lahf
or
int
adc
xlat
insl
jecxz
adc
mov
add
xor
shrl
jg
std
clc
pusha
push
clc
in
je
add
subb
shlb
movsb
fucomp
adc
ljmp
xchg
test
ret
je
mov
or
pusha
fidivl
mov
and
subb
jg
cmp
dec
pop
push
cmpsl
sbb
xor
xor
sbb
cmc
or
mov
insb
jl
insl
mov
sar
les
test
scas
jno
or
mov
jnp
jno
cmp
test
sub
ljmp
push
andl
ds
pop
jecxz
jmp
je
add
into
mov
testb
mov
mov
in
cmpsl
leave
push
movsb
xor
pop
pop
cmp
push
dec
gs
pushf
xlat
outsb
pop
pop
mov
pop
xchg
add
push
ss
jae
jne
jmp
cmp
dec
cmpsb
push
jnp
mov
sbb
js
lret
loopne
xchg
add
inc
aaa
pop
sub
es
idivl
dec
mov
enter
inc
loopne
sbb
add
aas
cld
aas
repz
sub
or
dec
subb
lret
jl
sub
jnp
dec
test
sahf
sbb
jo
cld
out
pop
pop
stc
inc
xchg
clc
cs
out
pusha
out
icebp
cmp
fistpl
clc
out
pop
jmp
xchg
add
or
imul
rclb
push
push
mov
fs
adc
push
jle
jp
and
pushf
jo
fs
jecxz
stc
add
inc
push
fidivs
pop
jle
push
sub
add
mov
jmp
and
stos
leave
mov
cmp
fidivrs
jecxz
push
jle
inc
lods
mov
pusha
xchg
mov
cmpsb
jge
jle
cmp
out
orl
and
pop
fildl
outsb
lcall
push
aam
mov
lahf
add
movsl
sub
push
mov
arpl
jns
or
dec
xchg
enter
ret
movsb
popa
push
xor
jge
bnd
out
cmp
sub
mov
rolb
lods
sar
popa
aaa
pusha
popf
pop
ffree
fwait
std
mov
imul
xor
xchg
or
in
add
mov
inc
popa
stc
test
lods
jmp
mov
out
cwtl
mull
loop
dec
cmpsb
in
loopne
stos
shrb
jno
sub
pop
pop
jp
xor
out
and
push
lock
dec
xor
bound
push
imul
xchg
add
push
xor
or
inc
stos
cli
push
gs
lods
or
out
push
sub
mov
dec
dec
and
sub
mov
jp
adc
sub
lds
jbe
jmp
adc
lods
ja
pop
shll
cmp
aas
dec
mov
push
sbbl
cmpb
jge
xchg
and
and
push
xchg
sbb
jl
xlat
pop
xor
xorb
cmp
inc
mov
pop
and
rcll
jbe
xor
rorl
pop
into
cmp
cmc
int
add
or
xchg
jg
jnp
mov
jp
sbb
sbb
js
inc
fs
inc
and
sbb
xor
inc
les
cmp
jb
pop
fbld
cmovo
fldt
insl
and
xchg
adc
xor
scas
and
ss
insb
push
xorl
pop
adc
std
int3
inc
sahf
and
arpl
int
push
ljmp
ja
rolb
imul
pop
xchg
adc
mov
nop
dec
cltd
add
mov
aad
inc
mov
iret
mov
jle
lahf
xor
test
pop
or
mov
and
jae
nop
out
inc
xor
adc
cltd
jns
dec
cmpsl
ds
movsl
les
lock
inc
cmpsl
es
xchg
fwait
add
dec
add
or
mov
cld
out
cmpl
xchg
testb
or
ljmp
cli
out
mov
ja
popa
mov
mov
pop
mov
data16
stos
int3
loopne
mov
fistpl
dec
imul
dec
sub
daa
hlt
subl
mov
mov
insl
int3
or
shrl
add
enter
add
call
push
pop
outsb
sbb
outsb
outsb
sahf
add
aad
sub
dec
mov
lea
inc
int
stos
movsb
repnz
das
out
xchg
imul
fsubl
fistpll
loope
or
scas
out
cmpsb
test
mov
cmp
divl
mov
xchg
mov
or
cmp
icebp
jecxz
hlt
wrmsr
jb
mov
arpl
push
repz
ret
fstl
jo
das
out
into
mov
pop
stc
sub
js
leave
aad
jo
or
outsl
mov
sub
sbb
pop
inc
cmc
fwait
pop
or
adc
mov
adc
xor
mov
aam
push
lea
in
jp
and
jbe
pusha
dec
dec
mov
call
mov
jecxz
inc
pop
sbb
pop
test
or
subb
leave
push
das
lds
sbb
mov
xor
rcll
cmpsb
adc
adc
outsb
aas
fildll
js
cli
inc
and
fsincos
add
mov
mov
outsl
fadd
cmp
push
dec
ds
stc
stos
xchg
dec
fwait
outsb
aad
sbb
and
xchg
lock
dec
push
dec
out
pushf
mov
test
xlat
and
xor
push
rcr
inc
lods
or
rcrl
sub
mov
scas
fdivr
clc
inc
cltd
push
mov
add
push
or
flds
je
push
push
xor
cli
mov
jge
inc
sbb
repnz
mov
in
out
negl
adc
jne
dec
jge
loopne
mov
mov
ficompl
and
mov
inc
jb
cld
sub
or
sub
inc
mov
xchg
shll
push
xchg
not
cmp
pop
sub
mov
dec
lods
mov
aas
aad
mov
test
jmp
push
push
or
enter
xor
cmc
call
pop
out
movsb
addl
js
mov
clc
inc
js
mov
cltd
test
mov
push
int
mov
pop
pushw
push
jecxz
xor
dec
pop
out
lock
int
sahf
push
cli
sbb
idivb
add
push
inc
pop
push
js
or
sbb
ds
sahf
js
dec
into
sbb
outsb
dec
xor
outsb
fs
repz
pop
push
inc
push
pop
pop
pop
repnz
fwait
les
je
push
ljmp
or
xor
inc
jb
cmp
sbb
ds
and
scas
and
cmpsb
jns
sti
lds
cmp
jmp
out
cltd
pop
dec
test
das
xor
push
mov
mov
dec
mov
sbb
pop
loopne
or
clc
insb
xor
xchg
mov
fidivl
xchg
push
imulb
or
mov
cltd
call
push
push
and
sbb
hlt
pop
dec
sarb
cs
or
jmp
sti
mov
call
lret
popf
xorb
rcr
add
mov
mov
push
fadds
lods
mov
jle
adc
and
push
popf
lock
add
adc
hlt
jmp
pop
push
icebp
sahf
loopne
jmp
or
pop
push
orb
xchg
and
add
adc
xchg
add
call
adc
sbb
addl
ror
dec
cli
and
pop
out
mov
ret
rorb
xor
movl
and
jo
fldt
push
and
arpl
test
lds
enter
cltd
ja
mov
and
xchg
lea
inc
cmp
xor
aaa
mov
aaa
dec
out
insb
ret
fcoms
adc
ret
jg
sbb
mov
lea
mov
ret
ret
loope
or
lods
lods
mov
aam
shrl
fdivrs
test
mov
ds
aam
dec
push
mov
pop
clc
mov
and
xchg
cmpsl
jmp
xchg
sbb
imul
cli
movsb
push
mov
call
lret
sbb
lods
rcl
or
fimuls
mov
mov
rcrb
scas
push
iret
sahf
xchg
jge
daa
loope
ljmp
scas
fcmovnu
xor
push
imul
lods
add
cs
sbb
pop
inc
xor
imul
or
xor
mov
pop
fstpl
jmp
aas
xchg
xchg
dec
mov
and
xor
sub
add
jo
sbb
xor
sahf
pop
cmp
add
dec
ds
mov
xor
aad
lret
mov
mov
sar
mov
xchg
fdivrs
push
cmp
cmpsb
mov
mov
jp
cwtl
notb
jmp
push
cmpsb
sub
jmp
stos
adc
loopne
cmp
push
sahf
dec
hlt
lods
enter
and
cmp
mov
fdivs
rol
mulb
jecxz
lock
push
aam
sub
les
jb
jb
flds
daa
pop
xchg
mov
sbb
icebp
fsubp
aam
test
je
outsb
cltd
jmp
adc
pop
jmp
ljmp
cmpsb
imul
dec
int
and
aad
add
mov
pop
jbe
mov
mov
mov
popa
fs
xchg
fwait
imul
int
es
stos
ficomps
daa
jo
lea
bound
decl
repnz
dec
push
nop
add
in
adc
pop
imul
imul
dec
mov
xor
cmp
std
leave
inc
mov
mov
cmp
add
inc
lock
sub
fdivl
xor
ja
les
rorl
outsb
roll
mov
mov
xchg
out
aas
pop
fiadds
in
mov
cmp
aad
nop
aaa
cmpsb
fs
mov
dec
pop
call
mov
out
ss
sub
lcall
adc
and
lock
mov
andl
and
in
sti
push
popa
lods
xchg
push
jle
addr16
push
loope
mov
icebp
or
hlt
cmpsl
jno
aas
pop
xchg
mov
jle
sbb
dec
xlat
hlt
and
inc
out
adc
and
data16
mov
das
add
outsl
es
mov
xor
or
sahf
icebp
mov
push
repnz
data16
inc
cmp
dec
xor
xchg
fiadds
pop
jae
rorl
lods
hlt
jl
lahf
push
insb
loop
fstpt
mov
jo
sbb
gs
in
sub
or
jae
mov
push
imul
pop
mov
call
push
ss
sarb
pop
dec
popf
out
mov
add
add
xlat
lods
push
sbb
ret
xorb
jg
inc
xchg
adc
xchg
add
fnclex
out
mov
pop
pop
push
dec
out
ljmp
repz
mov
or
test
les
movsb
das
cmp
or
es
in
adc
inc
push
pop
xchg
inc
sahf
push
js
sub
or
arpl
arpl
icebp
ret
pop
dec
xor
push
cmpl
add
mov
mov
pusha
jnp
enter
xchg
sub
fwait
popf
andl
ret
xor
jno
lcall
mov
mov
push
mov
push
pop
jmp
xchg
pop
movsl
loopne
out
testb
xor
sahf
dec
mov
fcompl
clc
leave
pop
sbb
mov
xor
xchg
push
mov
xor
jb
addr16
test
cmpsl
sub
flds
pop
xlat
xor
mov
in
cmpl
test
and
xchg
mov
inc
push
jmp
hlt
ljmp
ljmp
stos
enter
shrl
fs
mov
mov
push
call
in
xlat
idivb
insb
push
pop
lcall
test
aad
mov
mov
mov
in
insl
pushw
xchg
inc
lcall
into
dec
shrb
pop
sub
xor
jnp
stos
lock
xor
neg
mov
dec
adc
popa
sahf
xchg
pop
jae
cmp
test
xor
jl
nop
xchg
sti
in
mov
adc
pop
pop
xor
add
lods
std
rorb
xchg
aad
sub
mov
or
lock
sbb
sub
sbb
xor
or
sbb
shlb
lods
sub
xor
into
inc
scas
jg
std
repnz
test
push
or
mov
cltd
add
jle
pop
das
xlat
daa
xchg
mov
push
jg
mov
test
lret
add
push
sbb
sub
dec
add
fdivr
sub
test
pop
data16
dec
lods
call
mov
push
filds
mov
mov
mov
sbb
popa
mov
subl
les
cs
shrl
scas
fcompl
in
aam
sar
daa
xchg
shrb
xor
and
mov
rcrb
mov
xor
cmp
mov
dec
add
nop
mov
and
loop
fcmovne
aas
add
outsl
fnstcw
lea
cs
mov
or
dec
lods
push
mov
mov
cmp
imul
pop
sahf
cmp
das
sbb
arpl
sahf
ret
aaa
mov
iret
mov
aad
and
in
xchg
arpl
cmpsl
insb
fidivrs
pop
out
xor
push
pop
pop
mov
icebp
rolb
imul
popa
cltd
xor
outsb
xchg
cmp
jmp
mov
inc
in
sub
mov
and
push
mov
repz
outsl
loop
push
cmpb
xchg
sbb
cmp
lret
ja
dec
lods
jno
and
stos
decb
push
pop
ficoms
test
push
lret
dec
sbb
fwait
add
jbe
hlt
dec
mov
or
lods
pushl
push
xor
pusha
lods
pop
das
add
out
leave
repz
pusha
pop
jp
and
mov
stos
dec
es
mov
jb
cwtl
or
cmp
inc
xchg
add
test
test
pusha
shl
pop
out
lods
arpl
jb
mov
xchg
sub
test
ljmp
ss
push
lods
mov
sbb
shl
arpl
pop
xchg
inc
jmp
in
not
dec
mov
mov
mov
movsb
negb
inc
sbb
gs
loop
movsl
cmp
gs
pop
xor
dec
pop
addr16
insb
lcall
cmpsb
pop
imul
cmp
inc
pop
aaa
lea
sub
jge
mov
inc
rorl
add
arpl
dec
jl
xor
mov
sbbb
add
adc
aad
jmp
mov
jb
push
xor
aad
cli
outsl
inc
aam
divb
sbb
xchg
lea
add
enter
movsl
out
lret
and
loop
repnz
and
inc
jnp
xlat
sbb
sub
icebp
inc
push
inc
icebp
stos
insl
in
push
cwtl
cmp
lret
sahf
rcrl
test
xchg
adc
gs
xchg
jnp
mov
xor
ss
out
adc
sub
scas
or
ficoml
cmp
and
imul
out
add
lret
xchg
cmpsl
inc
in
jnp
inc
push
ja
loopne
dec
mov
push
rorb
mov
inc
loopne
xchg
aas
sub
pop
cmc
jg
clc
test
xlat
push
or
and
sbb
gs
and
mov
mov
das
movsb
sbb
mov
jb
add
pusha
cmp
movsl
test
and
dec
test
pop
mov
jecxz
call
out
xor
sub
loopne
lret
data16
inc
or
faddp
int3
xlat
mov
int3
jmp
fidivrl
mov
test
bound
cwtl
xor
jmp
stc
inc
imul
aas
daa
pop
sub
in
cmp
xor
push
outsb
dec
push
enter
pop
adc
xchg
xchg
testb
add
mov
mov
stos
dec
scas
icebp
lods
lds
or
add
insl
or
out
hlt
dec
loope
nop
jae
jmp
push
stc
and
daa
fldenv
mov
lret
adc
jbe
and
imul
pop
xchg
icebp
inc
add
sub
mov
cmp
inc
xor
daa
pop
xchg
ja
popf
stos
cli
and
mov
inc
cld
and
sahf
das
leave
in
pop
mov
test
jnp
in
add
push
in
mov
aas
in
fwait
cmp
rcl
push
into
mov
test
mov
xchg
iret
inc
xchg
bound
test
and
aaa
jecxz
pop
scas
jnp
push
cmp
add
mov
lds
in
mov
push
mov
sbb
adc
push
aad
in
je
shr
sbb
mov
iret
and
int
push
mov
std
lods
sub
divl
mov
ljmp
mov
das
xchg
and
stos
mov
jno
in
scas
mov
shlb
sbbb
lret
testl
sbb
cmp
jle
jo
pop
and
jge
idivl
jae
int3
repz
mov
mov
and
jbe
dec
lea
xchg
aas
or
popf
inc
mov
mov
jge
test
xor
lcall
scas
sub
xorb
div
xchg
into
pop
jg
lock
fadds
movsl
ja
loop
push
dec
sbb
in
pop
cwtl
or
sbb
subb
fs
jo
add
rcl
jo
push
sarb
cmpsb
push
out
lods
add
sti
mov
inc
ret
mov
imul
xlat
shll
and
xchg
insb
hlt
loop
inc
add
lret
std
add
ljmp
cmp
pop
test
out
leave
rorl
leave
pop
push
cmp
in
cmpl
js
inc
sub
xor
mov
mov
inc
shl
iret
std
pop
adc
mov
mov
test
out
mov
add
shl
jecxz
push
jmp
nop
xorb
repz
in
stos
and
add
mov
popf
in
aaa
int
xor
mov
add
cmpsb
lea
push
pushf
xor
adc
inc
mov
stos
pop
xor
sti
gs
pop
jb
jmp
jbe
clc
lock
mov
fsubr
xchg
lret
stos
sbb
jmp
fwait
scas
outsb
jmp
ret
mov
inc
pop
loop
xor
mov
add
rcrl
pushf
jle
lods
mov
xor
pop
popa
sub
ret
mov
jle
mov
out
add
ret
push
dec
xchg
into
sub
js
jae
sarl
jne
adc
ret
mov
int3
loop
and
xchg
sub
iret
arpl
aaa
mov
or
cmpsl
testl
stos
jl
nop
js
cmp
jle
sbb
negb
inc
ret
and
arpl
sbb
cmp
push
aad
push
add
out
mov
jne
xchg
jmp
and
fadds
xor
fsubs
stc
cmp
test
or
sbb
scas
lret
pop
jo
inc
addb
sbb
sub
loop
pop
insb
call
loope
cld
movsb
inc
sub
cs
je
xor
jmp
mov
mov
xchg
lcall
orb
push
cmp
mov
cmp
push
jns
fcmovbe
mov
idivb
mov
movq
xchg
fsubs
xor
mov
jns
fwait
arpl
and
ja
xor
jle
mov
clc
dec
jns
add
push
inc
pop
jmp
imul
call
push
adc
sbb
mov
add
sub
in
sub
or
xchg
xchg
push
aas
sbb
movb
cmpsl
fucom
inc
jnp
mov
test
cli
add
pop
stos
loop
imul
sub
pop
in
js
out
fbstp
cmc
loopne
es
mov
push
or
cs
sub
add
sbb
rolb
sub
push
fistpl
xchg
icebp
test
ja
and
push
das
push
sbb
and
push
shll
cmp
pop
jge
inc
stos
sbb
push
out
fstps
movsb
mov
dec
daa
decl
adc
mov
mov
mov
or
mov
stos
or
lds
xchg
sbb
mov
jp
xchg
xor
cmp
bound
adc
mov
fwait
xor
push
cmp
add
in
enter
fwait
xchg
push
scas
push
notl
pop
cs
fmull
outsl
ljmp
mov
mov
pop
xor
lods
stc
lods
rol
xor
xchg
divb
xchg
mov
jb
inc
xchg
enter
mov
shlb
push
sbb
leave
mov
push
dec
xchg
jg
push
pop
add
sbbb
and
iret
cmp
rolb
jno
adc
nop
idivb
adc
sbb
cmpsb
push
cli
int
lods
cli
xchg
scas
out
mov
adc
sub
cmpsb
aaa
movsl
push
fs
jno
ret
push
xor
in
add
mov
adc
fwait
mov
mov
inc
test
push
dec
fisttps
cmp
inc
das
jbe
adc
jmp
hlt
mov
loopne
xor
cmp
dec
lret
jbe
jb
sub
xchg
test
jns
mov
push
std
lds
gs
mov
loop
fimuls
scas
movsb
jle
iret
push
test
pop
sbb
lods
jge
add
mov
fucom
xchg
push
jno
in
cli
lods
push
mov
je
stos
xor
inc
jns
cmp
dec
pushf
push
flds
sahf
sbb
or
outsb
hlt
aam
pop
mov
outsb
mov
cmpsl
fisttpll
pop
inc
ret
loope
sub
mov
or
sarb
shlb
fisttpll
and
fwait
pop
call
aaa
xchg
push
sub
mov
movsl
decl
xor
ret
hlt
scas
inc
mov
mov
lret
ret
std
out
jno
ds
mov
pusha
xor
fcmovb
out
sbb
imul
mov
mov
adc
jnp
fldcw
xor
pop
in
pop
adc
mov
into
jg
out
jo
push
mov
test
cwtl
cmp
imul
shrb
mov
les
mov
repnz
into
ja
stc
iret
sarb
or
add
cmc
cmp
out
cmp
das
mov
divl
in
loopne
test
and
loop
in
jle
ds
adc
cvtps2pd
mov
imul
pushf
rorl
bound
jge,pn
inc
dec
push
cmpsb
dec
int
repnz
jb
insb
mov
pop
lods
test
xchg
mov
sub
jp
sub
movsb
mov
lods
push
les
cs
int
in
xchg
cltd
xchg
jle
push
popa
lods
jo
inc
fadd
jns
clc
sbb
or
jp
fisttpl
pop
leave
mov
and
cwtl
sbb
cmpsl
mov
dec
cmpl
loope
sbb
mov
aam
out
xor
mov
xchg
add
test
bound
repnz
dec
cmc
xor
cltd
push
pop
stos
lods
fildll
cmp
jmp
inc
movsb
xor
jl
mov
jb
xchg
iret
data16
out
cs
leave
cmc
ret
jo
lret
dec
out
push
mov
jnp
xor
xchg
inc
pushf
sarl
sti
jae
mov
enter
shrb
pop
loope
lret
or
adc
pop
xchg
pop
pop
add
mov
jl
pop
test
es
jg
sbb
out
cmp
enter
dec
seta
sub
fdivrs
hlt
jnp
jge
out
mov
mov
fwait
popa
shrl
and
jp
jl
lds
xor
cmpsb
or
mov
lcall
pop
int
scas
lret
cld
shrb
enter
xor
sbb
nop
adc
rorb
aam
cmp
lret
and
pusha
out
mov
dec
mov
aam
rolb
cmp
movsb
push
cmp
pop
ja
test
int
cmpsl
in
pop
xchg
out
pop
push
call
mov
not
inc
lods
sbb
sub
stos
mov
sbb
inc
add
mov
cmpsl
out
push
mov
scas
cmp
subb
inc
insl
add
lret
mov
cmp
lock
add
mov
es
daa
jne
mov
mov
ja
dec
in
lods
lods
frstor
cmp
imul
mov
leave
jmp
dec
jbe
xchg
cltd
repnz
sub
hlt
test
xchg
stc
mov
xor
lods
mov
dec
arpl
push
xchg
das
dec
in
mov
cmp
das
adcb
lock
std
sahf
pushf
xchg
scas
pop
test
sbbl
test
loop
sub
mov
xchg
dec
repnz
dec
inc
enter
in
sub
fwait
sbb
popl
add
aam
nop
mov
push
repnz
mov
dec
xor
and
jecxz
jbe
sbb
jbe
pop
or
insb
movsl
xor
mov
and
gs
push
cmp
push
pop
adc
subl
xchg
cmp
pushf
pop
mov
jp
popf
dec
mov
add
xchg
pushf
jns
out
pushf
fs
in
setnp
fbld
dec
jb
jmp
push
mov
add
test
test
cmp
ljmp
jg
pop
or
cli
out
dec
call
pop
fldl
mov
sbb
test
je
xchg
push
push
push
mov
push
mov
ljmp
repnz
dec
sahf
jp
jecxz
or
xchg
into
or
into
lret
in
xchg
loope
jecxz
scas
mov
lret
pop
loopne
and
mov
mov
push
fxch
jl
mov
mov
int
xor
orb
jge
mov
cwtl
cmp
repz
scas
cmp
push
add
mov
mov
roll
jg
xchg
adc
sub
pop
jecxz
mov
cwtl
mov
dec
xchg
outsb
jg
wbinvd
mov
dec
pop
mov
loop
xlat
addb
arpl
jmp
aaa
add
out
inc
sti
lcall
pop
mov
stc
xor
dec
cmp
js
je
add
cmc
inc
out
fs
and
cmp
lods
jl
xlat
cli
popf
cltd
movsl
push
fadd
add
test
and
adc
jl
dec
or
dec
cmp
and
mov
xchg
mov
sbb
sbb
jle
dec
push
and
dec
adc
subl
shrl
xchg
ret
fldt
mov
adc
aam
sbb
sbb
lret
loopne
lret
cmp
outsb
mov
notl
daa
jne
mov
pop
fwait
xchg
and
dec
clc
xchg
or
cli
lret
es
and
xlat
andl
pop
sbb
mov
pop
aas
lock
mov
test
cwtl
stc
shl
mov
bound
clc
pmaxub
lret
and
xor
lret
rcrl
mov
and
xorb
jns
stos
in
and
and
arpl
fnstsw
dec
insl
mov
lcall
xor
dec
cmpsl
and
jg,pt
jmp
add
ret
pop
mov
dec
adc
cmp
push
adc
pop
jno
mov
push
sti
pop
arpl
out
push
jecxz
pop
jb
cs
inc
popf
and
lahf
and
imul
xchg
jle
pop
dec
xor
sarl
and
sub
movsb
cmc
mov
mov
jg
mov
lds
pusha
gs
pop
bound
mov
enter
cli
insl
inc
ds
mov
dec
mov
repz
pop
jns
xor
jle
fnstenv
outsb
stos
mov
adc
rorl
push
lret
sub
adc
xor
jnp
aam
and
push
jae
mov
push
or
inc
and
push
inc
dec
ljmp
outsl
into
mov
ljmp
sbb
sahf
add
decb
xor
out
movsl
dec
adc
lret
js
fwait
stc
xchg
dec
push
jae
push
fnstenv
sbb
adc
shll
add
in
loope
cmp
mov
mov
dec
adc
in
lahf
sub
adc
jae
test
push
roll
mov
xlat
not
bound
cmpb
ror
clc
jge
in
jae
pop
push
ds
dec
xchg
inc
pop
mov
adc
cmp
jae
aas
lret
sbb
repz
jb
push
pop
mov
rol
mov
cmp
push
lds
push
adcb
adc
mov
adc
add
push
push
dec
pop
cld
mov
scas
jbe
xchg
test
xor
add
xor
push
mov
xor
pop
inc
xchg
cmpsb
pop
leave
dec
rsm
xlat
add
sarb
mov
loopne
sbb
xchg
pop
sbb
dec
or
adc
inc
clc
outsb
add
das
push
sbb
mov
add
xor
dec
sub
or
or
daa
data16
mov
mov
mov
mov
stos
cmp
in
inc
mov
movsl
iret
es
iret
je
and
mov
xchg
aas
js
jp
and
cwtl
inc
in
or
roll
mov
add
mov
pop
xchg
jae
int3
or
das
xor
push
dec
cmpsl
lods
cmp
and
mov
int3
inc
fdivr
cs
fstl
push
iret
loopne
lds
pop
cmc
adc
in
add
mov
lea
rcrl
inc
fnstsw
aaa
mov
push
gs
pushf
mov
or
mov
aaa
pushf
mov
std
pop
mov
in
clc
data16
push
add
hlt
fistps
push
pop
dec
outsb
lock
push
outsl
fwait
push
arpl
dec
xchg
push
mov
mov
and
jp
loopne
fisubs
shrb
sti
call
pushf
jmp
fmuls
pop
aam
out
xchg
mov
out
cmpsl
test
ret
push
rcr
xor
or
aad
ds
adc
mov
bound
pop
inc
ss
pusha
loopne
lock
fidivrs
sarb
out
insl
dec
jno
pop
scas
adc
les
jae
push
aad
mov
cmp
xor
fistpl
in
or
leave
xchg
idivb
add
sub
xor
outsb
fnsave
movl
cwtl
int
in
test
add
int
xor
mov
enter
je
leave
mov
data16
xor
test
cmp
mov
dec
jl
jmp
addr16
orl
and
dec
lahf
test
mov
leave
jmp
push
dec
out
lret
push
jno
inc
cmpsl
call
pop
and
xchg
gs
push
shll
inc
sbb
pop
push
push
notl
mov
clc
sbb
arpl
clc
push
push
jmp
stc
xchg
loopne
movsl
dec
into
xchg
cmp
idivb
sbb
push
sub
dec
in
cmp
stos
pop
outsb
lret
ficoml
add
imul
sub
or
push
cmp
sar
xchg
mov
mov
mov
jne
out
sbb
inc
pop
add
or
jg
xchg
stos
insl
cmp
mov
xor
out
ror
jg
shl
xlat
stos
dec
mov
insl
sbb
xor
mov
in
xchg
add
fdivl
cmp
push
pop
inc
fnsave
shrb
or
push
sub
stos
push
loope
test
daa
adc
imul
inc
imul
add
mov
push
repnz
xlat
or
mov
mov
mov
out
mov
xor
out
rclb
sbbl
in
out
cmpsb
dec
shll
dec
sahf
notl
imul
iret
call
out
sub
mov
in
pop
dec
subl
scas
inc
mov
cmpsb
shlb
js
popa
fstpl
nop
clc
outsl
jo
rcl
pop
xor
or
sbb
imul
xor
sbb
jmp
subb
dec
jno
std
pop
sets
mov
js
add
jg
xor
ss
sub
adc
ficoms
fidivrl
rcll
mov
mov
sbb
fstpt
push
sar
in
fmul
jge
loop
mov
push
and
dec
adc
insb
cld
in
mov
add
aad
sub
mov
lret
in
adc
dec
push
addb
and
lahf
aad
roll
icebp
and
and
test
fsubr
loop
xor
xchg
jnp
sub
jecxz
lret
jo
in
and
fists
push
loope
aad
adc
sub
stos
cmp
sbb
lret
mov
scas
in
test
call
xchg
mov
lods
inc
and
push
cltd
cmp
mov
lods
mov
in
icebp
loop
stos
jmp
mov
mov
adc
mov
cwtl
jnp
jle
cmp
adc
cmp
repnz
and
pop
add
mov
jns
and
int3
and
push
movsb
mov
jl
cmpsb
adc
mov
pushl
push
fs
pop
out
push
aad
xor
sbb
mov
int
mov
loope
fdivl
push
xchg
sbb
lret
shlb
fcoms
mov
sub
cld
xor
lcall
xor
mov
inc
xor
rep
bound
cmc
mov
in
pop
dec
sbb
xchg
inc
mov
inc
popf
arpl
mov
jno
mov
loop
mov
push
out
ret
imul
aaa
cmp
sub
xchg
sbb
mov
pop
mov
jle,pn
xor
and
sbb
std
xor
lcall
and
inc
aaa
jl
pop
out
inc
outsl
xchg
sahf
cli
data16
sub
mov
inc
or
mov
cmpsb
dec
cmp
lods
sub
adc
push
adc
jno
push
or
push
adc
add
addl
aaa
addr16
sbb
inc
pop
out
push
push
out
adc
or
pusha
gs
lahf
ss
adc
add
mov
add
arpl
cltd
push
mov
mov
dec
fistl
out
mov
testl
pop
outsb
sub
add
pop
nop
loop
adc
mov
les
push
imul
rolb
incl
dec
add
mov
pop
sbb
ret
ret
mov
ss
das
sub
es
shrl
cmp
icebp
sbb
data16
ret
mov
push
add
gs
dec
imul
or
mov
ss
cmc
mov
jns
fdivrs
xor
scas
push
dec
inc
mov
ss
add
insb
and
stos
repz
xchg
ja
inc
hlt
movsb
ret
mov
out
psllw
mov
and
pop
je
enter
fisttpl
jl
inc
stos
dec
mov
add
sub
or
enter
leave
dec
jp
pusha
xchg
lcall
xlat
sbb
sti
call
inc
jle
daa
pop
and
fmuls
pop
fdivs
mov
mov
scas
push
pop
mov
idivl
or
aas
shll
sub
pop
pushw
sbb
jae
bound
mov
je
xor
xor
seta
idivl
jno
jo
lock
xor
mov
inc
and
repz
stos
mov
mov
or
popf
mov
cmp
mov
adcb
in
loope
test
and
in
jmp
adc
pusha
shlb
fimuls
sub
test
pop
xchg
ret
inc
testb
popf
imul
dec
ljmp
lods
xchg
mov
sarl
pop
mov
add
pushf
adc
lods
and
dec
adc
pop
repz
inc
jo
sbb
popf
outsb
mov
movsb
inc
cwtl
fs
sti
pushf
lcall
in
ret
decl
jmp
je
mov
dec
mov
sbb
mov
loopne
lea
out
sbb
push
insl
adc
daa
jnp
adc
ds
lahf
cld
pop
stos
dec
in
sbb
leave
std
jecxz
xchg
les
mov
adc
icebp
and
lea
mov
mov
pop
gs
add
fiaddl
sbb
mov
andb
xor
xor
xchg
clc
or
and
mov
test
ja
pop
or
push
call
loop
popa
stc
adc
push
lods
xchg
xchg
ja
aas
lea
push
cwtl
pop
mov
out
pop
push
jns
arpl
pop
mov
lods
inc
xor
cmp
cltd
and
fbld
mov
cmpsb
add
mov
movsl
outsl
cmp
push
flds
fnsave
jns
dec
das
xor
outsl
mov
gs
mov
leave
call
popa
daa
cmp
xorb
mov
andw
test
dec
xor
shl
shll
lock
fists
and
ret
call
sbb
pop
mov
scas
ds
sahf
inc
xchg
mov
or
push
mov
jle
movsl
sbb
stos
mov
stos
ret
cmpb
test
aaa
jae
sahf
sahf
js
inc
mov
pop
loopne
rcrl
pop
mov
cs
stos
int3
sbb
std
mov
scas
mov
push
push
push
dec
lods
mov
mov
ds
movsl
ds
in
out
sub
daa
xchg
sbb
inc
pop
out
fsubs
in
xor
aaa
pop
mov
in
insb
pop
stos
mov
inc
dec
push
dec
pop
arpl
add
idivl
cld
mov
inc
inc
fs
or
or
mov
or
ja
mov
xchg
dec
pop
in
adc
xor
xchg
das
add
xchg
pusha
add
and
scas
ds
mov
call
out
stc
jbe
loopne
clc
xchg
imul
inc
out
inc
shl
sbb
mov
add
cmp
fstpl
add
out
xor
stos
mov
inc
aad
pusha
in
lret
out
into
ficoms
inc
pop
dec
testw
aas
push
stc
pop
shll
ja
xor
mov
cmp
movsl
loopne
add
sbbl
cmp
and
mov
push
push
push
aaa
jg
dec
fcmove
pop
iret
inc
push
push
loop
mov
std
stos
addb
scas
mov
outsl
cld
mov
xor
pop
and
push
es
adc
mov
cmc
mov
adc
xlat
jbe
cmp
jl
pop
add
loopne
mov
arpl
jno
fsubs
ret
mov
cs
int
enter
scas
nop
sub
cmp
dec
addr16
push
and
stos
lcall
pop
test
pop
loopne
xchg
jl
cmpsl
jns
int3
test
jo
out
sub
and
or
cmp
mov
xadd
gs
iret
sub
push
push
loope
mov
notl
es
es
ret
xchg
xchg
cmp
div
sub
xchg
jns
out
iret
sbb
imul
adc
inc
fdivs
or
or
ret
jge
inc
in
ja
mov
lds
test
neg
xchg
xchg
mov
mov
dec
adc
add
lods
std
lds
pop
pop
jecxz
or
add
in
xor
dec
int
inc
cmc
mov
xchg
cs
xchg
sub
shl
or
dec
dec
into
inc
adc
sub
test
fidivs
push
sub
push
pop
movsl
ds
push
lods
mov
cwtl
pop
addr16
adc
test
mov
fdivr
adc
pop
dec
into
jo
icebp
lea
in
sbb
enter
jl
mov
or
xchg
or
mov
cmp
inc
mov
lock
mov
inc
or
bound
pushf
adc
out
push
jae
mov
out
adc
jo
movsb
ds
mov
xchg
js
add
mov
sub
scas
lods
stc
jo
arpl
xchg
mov
pop
mov
sub
cmp
dec
cli
dec
movaps
add
xor
ljmp
cmp
jmp
or
pushf
leave
sahf
push
movsl
insb
add
mov
test
xchg
push
in
cmp
ficoms
dec
dec
mov
cmc
imul
cmc
mov
rcrl
mov
add
sahf
mov
jl
or
cli
and
stos
popa
xor
aas
push
mov
push
mov
ljmp
add
loope,pn
pop
jbe
inc
in
loopne
aam
mov
popa
lret
or
aaa
gs
or
xchg
xor
pop
add
pop
mov
jno
mov
adc
mov
push
in
xor
jne
sbb
dec
pop
dec
outsl
dec
xor
mov
jp
push
push
sub
jno
gs
fidivs
mov
jae
xlat
in
adc
inc
xor
lcall
push
jl
aad
adc
stc
sub
cmpl
pop
push
dec
jl
mov
push
xchg
mov
dec
push
push
adc
scas
int
pop
add
cmpsl
repz
cmp
pop
call
cmp
iret
cli
subl
mov
rorb
push
xchg
jo
pop
hlt
mov
shlb
jne
mov
pop
fisttpll
imul
adcl
lret
push
add
jns
push
adc
lods
and
sub
mov
in
out
cmp
popa
ret
cmp
shll
and
sahf
add
repz
xchg
int3
scas
stos
mov
jmp
cmp
jecxz
xchg
and
cmpsl
mov
ret
xchg
ret
dec
shrl
test
and
fsts
xchg
repnz
popa
dec
out
testb
icebp
fstpl
dec
lcall
jecxz
enter
dec
jge
repz
xchg
cmp
mov
insl
push
inc
adc
cmp
and
push
xor
test
jg
repz
mov
mov
pop
mov
add
testl
cltd
enter
mov
aas
insl
cmp
jne
push
imul
mov
dec
mov
and
jmp
sahf
icebp
sbb
mov
adc
imul
scas
fadds
pushf
pop
lahf
xor
sbb
xchg
dec
cmp
aaa
pop
into
xor
nop
into
arpl
js
push
daa
dec
or
cmc
jne
inc
and
mov
pop
cs
inc
or
push
lcall
stc
adc
pop
shlb
add
jg
adc
inc
dec
pop
fildll
dec
gs
lcall
out
adc
mov
pop
popa
adc
clc
leave
mov
decl
subl
into
out
sti
pop
jmp
mov
add
leave
or
pop
pop
imul
std
fwait
call
out
shrl
lret
stc
cmc
mov
fisubrs
inc
sub
lcall
outsl
jmp
jle
iret
inc
ljmp
imul
pop
push
jle
mov
lds
cmp
shlb
test
add
sahf
popa
das
and
test
fsubs
push
sub
stos
inc
mov
aaa
arpl
mov
mov
cmp
cwtl
sub
aam
pop
add
xor
cmp
fnstcw
jbe
adc
push
shlb
lahf
xchg
xchg
inc
movsl
aam
test
sbb
and
mov
sbb
inc
pop
push
mov
ret
js
xchg
jg
test
xchg
dec
bswap
int
jecxz
scas
fs
sbbb
movsl
mov
dec
mov
out
mov
in
loope
out
inc
push
push
xchg
jmp
scas
pop
cmp
lds
xchg
inc
mov
push
daa
adc
pushf
mov
insl
fildll
cmp
sub
jbe,pn
sbb
movsb
pushf
jl
imul
loopne
jo
enter
scas
add
lahf
incb
lret
js
sbb
inc
test
push
add
xlat
xor
mov
pop
pop
mov
faddl
ret
add
into
xchg
and
sbb
inc
pop
cwtl
push
adc
push
rcl
scas
test
add
cmp
sti
imul
stos
cmc
add
sub
cmp
jne
lods
in
sbb
jg
and
sbb
test
cmp
sub
sub
sub
sbb
xchg
pop
aad
mov
xor
xor
test
push
cmp
xchg
insb
cli
cmp
xchg
loope
repz
mov
xchg
popf
inc
pop
or
add
in
loope
push
lods
add
insl
push
mov
jno
test
dec
xchg
adcl
mov
mov
std
sub
push
mov
lock
mov
shrl
jb
push
out
test
mov
in
fcomps
je
cli
jbe
imul
and
or
inc
add
add
aaa
icebp
pop
loop
in
mov
add
mov
mov
pop
sbb
sti
out
fstp
jno
das
cmp
xchg
pop
insb
sub
fxch
xchg
mov
xchg
aam
imul
or
in
in
je
mov
aaa
ds
push
adc
jno
call
ljmp
jle
mov
sub
aad
xchg
ss
dec
je
loop
mov
push
cwtl
push
imul
and
sub
or
lahf
jae
or
cwtl
or
and
jmp
add
jb
mov
push
sbb
adc
inc
sahf
test
or
fldenv
jp
call
leave
cmpb
inc
mov
fists
xchg
je
ljmp
imulb
or
push
cmp
pop
inc
jle
jne
and
pop
fcom
out
fcmovnb
adc
stc
xor
pop
sub
pop
xchg
fimull
fsincos
cld
data16
and
inc
xor
or
sti
sbb
xor
mov
aaa
adc
imul
repnz
call
fs
outsl
aas
sahf
xor
mov
mov
push
pop
jmp
scas
aas
lret
fstpl
sub
fists
stos
add
fmull
mov
xchg
adc
std
mov
jl
push
lods
dec
sarl
add
mov
dec
fidivl
push
add
push
sub
push
cmpxchg
sbb
xchg
lret
push
cmpsb
jecxz
dec
mov
scas
xchg
negb
clc
cmp
pop
into
out
inc
mov
xchg
fsubrs
ret
push
pop
imul
mov
jo
repnz
push
cmc
mov
aas
xchg
cmp
std
cld
lret
push
mov
insl
adc
pop
inc
cmp
sub
inc
pusha
push
int
iret
push
in
sbb
outsl
lcall
call
outsl
das
dec
rol
imul
push
xchg
imul
ljmp
enter
loop
cltd
jg
or
xchg
test
rcl
sahf
mov
sbb
add
add
and
nop
dec
shlb
and
in
mov
mov
mov
dec
insb
movsl
out
das
jb
mov
ljmp
arpl
cmpsl
jl
gs
add
sub
jne
popf
insb
mov
mov
inc
ds
aas
ljmp
and
adc
xor
sub
xchg
pop
jo
sub
addr16
pop
add
inc
aad
mov
div
ja
loopne
sub
sbb
cmc
cli
dec
mov
cmc
subl
fucomip
xchg
shr
jno
or
jg
jo
shlb
jecxz
clc
fidivrs
adc
rcll
jb
fidivrs
andb
sbb
push
and
adc
xor
mov
ljmp
mov
add
pop
ret
pushf
mov
loop
xchg
mov
jp
mov
ret
imul
jns
add
push
cmp
mov
loope
sbb
mov
pop
cmp
mov
mov
add
xor
rcl
loop
cmp
stos
pop
movsl
jno
pop
outsl
push
and
cli
pop
aad
adc
pop
mov
ds
ficompl
adc
lcall
jge
rcr
pusha
xchg
test
cli
mov
int3
push
enter
cli
into
pop
push
or
outsl
fld
mov
stc
jecxz
hlt
stos
jo
es
pushf
in
pop
decl
mov
fsubp
mov
jmp
ret
sbb
mov
popa
adc
lcall
sub
scas
sub
test
xchg
inc
nop
cltd
gs
dec
or
sahf
stos
jmp
addr16
adc
jmp
fnstsw
fbld
aas
sbb
aaa
cmpsb
and
xchg
pushf
mov
dec
sbb
pop
push
xor
cmp
ljmp
cmp
mov
shrb
dec
fbld
push
jp
out
jmp
data16
pop
repnz
das
ja
xchg
xor
xchg
popa
lret
inc
test
jo
mov
xor
xchg
or
xchg
das
loopne
jo
les
pushf
sahf
or
js
push
out
icebp
fs
cmp
ljmp
xorl
mov
lods
pushf
mov
push
and
bound
leave
addr16
scas
lds
insl
jmp
addr16
push
mov
leave
std
ss
aaa
enter
add
xchg
sbb
pop
xchg
scas
cli
pusha
addr16
insb
dec
outsl
fsubp
cmpsb
xor
or
nop
inc
pop
or
fsubrl
fstp
insb
popa
inc
inc
cmc
icebp
sti
mov
sub
inc
lea
shrb
movsb
lock
cmc
sbb
push
scas
cli
out
adc
push
stc
mov
xlat
dec
inc
cld
xchg
jmp
subb
or
jecxz
pop
notb
and
cmp
xor
icebp
pop
jmp
daa
sti
cmp
nop
xlat
pop
xchg
outsb
std
daa
cmc
add
jmp
por
mov
shlb
lret
movsb
adc
divl
inc
lock
mov
repz
cmp
adc
out
jno
in
mov
and
das
sbb
ret
add
lods
jle
cmp
divps
inc
xor
mov
hlt
adc
inc
rcr
push
sti
out
test
fstps
push
fistpl
cld
xor
into
into
imul
pop
lret
pop
pushf
pop
hlt
das
aad
pop
push
xchg
out
gs
xchg
pop
lods
loop
and
inc
xor
sub
mov
aas
jno
mov
pusha
xchg
xchg
xor
ret
cmp
fsubl
dec
dec
mov
inc
mov
xchg
test
and
add
sub
or
lahf
add
inc
dec
test
cmp
inc
loope
cli
mov
push
cmp
cs
leave
sub
xor
sbb
sub
imul
inc
mov
das
dec
mov
add
int
ror
lds
mov
fwait
ljmp
jae
outsl
loope
adc
mov
loope
aam
jbe
ss
pop
cmp
mov
push
pop
pop
sbb
fs
bound
xor
push
loopne
out
icebp
addb
and
sbb
mov
fcmovbe
mov
mov
xchg
in
in
fldt
ljmp
loopne
dec
mov
ja
or
imul
adc
pop
test
mov
inc
mov
xchg
jmp
or
lea
lret
mov
mov
add
bound
shr
fbld
xor
inc
jp
add
pop
jle
mov
dec
adc
test
shrl
dec
mov
ret
aad
gs
or
stos
add
lea
xor
pop
icebp
mov
aam
mov
dec
adc
scas
fnstcw
pop
xchg
add
dec
sahf
sub
or
xchg
popf
push
ret
mov
inc
ret
mov
jle
mov
arpl
mov
sub
cmp
lds
cmpsb
popf
push
je
xor
imul
mov
cmpsl
out
adc
call
ss
push
adc
adc
gs
and
adc
aas
pop
mov
cmp
rol
je
loope
mov
xchg
cltd
adc
add
lret
jecxz
addr16
popa
jge
mov
test
and
cltd
stos
xchg
pop
sub
fcmovu
out
add
and
dec
dec
aas
cmovnp
subl
xchg
push
loope
xor
fistpll
add
ss
mov
mov
xor
mov
clc
lock
and
push
inc
dec
das
cmc
fstps
dec
movsb
add
mov
in
jbe
jge
and
insb
std
loop
inc
idivb
pushl
in
mov
lret
test
mov
mov
sbb
fnsave
stos
or
insb
and
mov
and
jl
jmp
push
rcr
rcrl
mov
or
lods
xchg
dec
daa
sub
fdivrs
sbb
lds
push
sbb
sub
dec
lods
inc
dec
dec
cmp
push
insl
lret
adc
fstpl
pop
dec
in
mov
daa
mov
popl
stos
sbb
imul
pop
or
cld
inc
mov
xor
dec
push
ja
mov
sbbb
or
adc
xor
jbe
inc
and
fcoml
out
mov
mov
mov
and
inc
lods
int
xchg
hlt
pop
leave
imul
into
jns
pop
cwtl
pop
sbb
sbb
jnp
inc
sub
bound
adc
fs
pushf
mov
lods
adc
push
cmpsb
mov
fisubrs
xor
push
test
imul
rcr
add
scas
sub
hlt
or
mov
mov
out
jge
inc
mov
mov
xor
mov
jne
dec
xor
cltd
lods
andl
mov
xchg
test
aam
inc
outsb
stc
popf
cltd
xlat
aam
mov
lea
push
aaa
aad
sbb
aas
sarl
dec
call
inc
idivl
scas
pop
ror
jecxz
mov
sahf
popf
adc
or
adc
int3
fadds
dec
andl
and
ss
cltd
mov
xor
sub
outsb
push
loop
outsl
clc
push
fnstsw
int3
xchg
stc
push
idivl
sbb
mov
mov
mov
in
lea
and
das
add
shll
cmc
push
pop
mov
xchg
mov
dec
out
push
insl
cmp
or
outsl
add
clc
ret
lret
jl
mov
dec
sbb
sarl
in
adc
adcl
cmpsb
je
cmp
ja
aaa
pop
jg
cmp
push
outsb
dec
popf
ret
push
mov
xchg
loop
mov
test
pop
xor
push
aam
and
cltd
test
in
pop
leave
cmp
sbb
movsb
mov
fsubs
jno
inc
inc
loope
shlb
cmpsl
and
xor
push
xchg
jae
pop
dec
mov
sbb
sti
inc
out
push
cmpsb
out
add
pop
xor
push
das
ss
cmp
repnz
fisubs
pop
jge
lret
outsb
or
jl
mov
filds
push
test
xchg
sbb
in
mov
loopne
test
addl
nop
jl
dec
sub
stos
inc
push
in
gs
xchg
cmp
inc
push
shrb
xchg
fadds
out
jo
stos
daa
sbb
nop
call
out
cmc
xchg
xlat
add
in
outsl
mov
roll
xchg
clc
imul
jno
and
lock
and
xchg
jb
imul
or
xor
movsb
repz
shrb
mov
push
ljmp
aas
leave
add
or
leave
sbb
sbbb
add
add
sahf
out
fldt
stc
daa
cmp
loopne
sbb
xorl
into
movsw
pop
inc
pop
lods
mov
jbe
push
xchg
adc
fiadds
mov
adcl
loope
and
and
inc
out
je
mov
arpl
inc
xchg
mov
scas
and
fwait
mov
and
out
add
mov
cmc
sbb
test
push
pop
xchg
idiv
push
orb
in
test
rcrb
mov
add
dec
pop
sbb
sbbl
ret
sub
gs
mov
movsl
jne
push
stos
mov
jg
sub
jmp
inc
dec
subb
adc
xor
cmpsl
xor
sub
imul
test
jle
cld
out
xor
rol
pop
xchg
insl
pusha
xchg
pop
enter
add
lods
pop
cmp
ds
fsts
cmp
fsubs
rolb
enter
jl
jns
lea
adc
adc
dec
cmpsb
ljmp
inc
aaa
popf
inc
daa
jns
sahf
out
inc
int
lahf
mov
xchg
sbb
sbb
adc
push
dec
pushf
mov
sahf
xor
and
stos
xor
or
jns
add
fstl
xchg
jg
pusha
add
mulb
inc
js
pop
cwtl
outsb
push
mov
mov
and
bound
dec
js
sub
dec
xchg
xchg
movsl
adc
mov
cmpsl
in
dec
mov
cmp
scas
es
fstpt
push
sbb
shrb
xchg
outsb
pop
dec
frstor
int3
clc
ss
or
mov
xchg
sbb
mov
mov
mov
and
sbb
lcall
dec
xchg
imul
ss
dec
repnz
pop
add
aam
insb
add
insl
or
pop
aas
adc
cs
idivb
out
mov
xchg
ficoms
jle
lahf
and
in
daa
mov
insl
or
adc
adcl
mov
bound
idivb
sbb
stc
loop
iret
ficomps
shlb
lods
mov
add
push
aaa
repz
cmp
jo
nop
inc
pop
repnz
add
or
pop
ret
adc
xor
rcrl
add
pop
adc
xor
enter
mov
jae
jle
mov
lods
rcrl
repz
and
xchg
sbb
and
cmp
dec
loop
fs
pop
cld
jb
xchg
push
testl
and
jg
cmpsl
jnp
insb
outsl
pop
ss
xlat
lods
jmp
push
pop
sub
xchg
rcrb
adc
lahf
cwtl
xchg
adc
fxtract
adc
or
shld
mov
sbb
mov
lea
clc
mov
sbb
outsb
cmpsb
in
mov
out
sarl
push
loope
xchg
roll
in
test
push
sti
sbb
dec
cmp
divl
push
stc
or
mov
loopne
sbb
jns
dec
dec
ficompl
mov
fnstsw
and
mov
pop
mov
mov
sub
sub
dec
cmp
loopne
or
jecxz
add
jns
hlt
sub
sub
or
cmpsl
cmp
cmpsl
xchg
add
pop
daa
iret
adc
or
jnp
ret
xchg
inc
cmp
adc
arpl
add
into
xorl
ret
mov
mov
aad
ja
lret
popf
rcrb
aad
jno
stos
ss
mov
cmp
jno
adc
mov
arpl
jns
adc
lahf
add
mov
jae
inc
mov
xlat
mov
push
mov
mov
inc
jnp
shrb
pop
jmp
xor
popf
sub
test
arpl
mov
xchg
sbb
scas
pop
jbe
lods
out
pop
pusha
mov
leave
mov
out
sbbl
mov
dec
arpl
sbb
arpl
xchg
bound
xor
and
push
repz
mov
cmpb
jg
imul
stc
jbe
xchg
cmp
stos
xchg
les
inc
in
fadds
pop
or
test
mov
roll
ret
test
pop
incl
jb
imul
mov
cmc
cmpsl
mov
stos
add
arpl
jg
xchg
and
xor
clc
xchg
test
sub
test
scas
outsl
lods
loopne
mov
mov
adc
add
adc
lcall
push
dec
push
push
cmpsl
hlt
insb
inc
mov
jle
xchg
mov
push
xor
std
mov
rclb
lret
xor
mov
shr
push
and
push
adc
sbb
out
pop
outsb
fists
jmp
cli
shr
test
jmp
popf
pop
clc
loopne
lods
inc
adc
jmp
loope
xor
cmpsl
add
sub
push
sub
cmpsb
or
dec
and
add
ja
mov
push
and
inc
ja
add
mov
and
adc
xchg
rcrl
dec
fwait
mov
sub
adc
sbb
sti
adc
loop
mov
jmp
fwait
in
outsb
pop
pushf
jns
iret
sahf
and
dec
cmp
adc
mov
or
imul
fildll
pop
mov
lods
sub
mov
sub
in
mov
das
adc
pop
repnz
inc
cltd
fwait
cmpb
in
ret
mov
test
add
adc
add
inc
cltd
push
mov
and
adc
lret
dec
dec
pop
data16
xchg
int
jae
sbb
popf
jmp
xchg
out
lret
dec
aad
or
jp
xchg
aam
and
pop
sub
mov
je
test
fists
ret
outsl
push
hlt
sub
fsubrl
add
add
test
sar
xor
add
sub
cmp
mov
dec
or
imul
fwait
pop
fs
dec
mov
xchg
lods
jle
jno
jne
xlat
inc
jb
jns
jbe
xchg
xchg
in
sub
jl
fstps
or
push
lds
cmp
dec
adc
xorl
inc
cltd
sbb
lret
add
add
lret
bound
mov
scas
pop
aas
pop
jl
dec
aam
ds
popf
lahf
sbb
or
jns
cmpsb
mov
xor
neg
push
jmp
daa
scas
cmpsl
push
fstpt
push
ret
mov
int3
jle
jmp
fmull
pop
add
addl
push
in
imul
inc
rcrb
mov
ja
push
pop
mov
mov
pop
mov
xchg
adc
fldenv
repnz
lds
mov
in
lock
and
add
inc
cmpsl
aam
jbe
mov
sub
cmp
out
cmp
mov
std
pushf
packuswb
xor
ja
pop
pop
imul
xchg
and
filds
cmp
test
loope
cmp
xlat
cmp
adcb
ret
adcb
sbb
lret
add
sub
or
stc
lahf
ds
popa
into
xor
in
mov
mov
mov
ja
xchg
push
test
and
stc
jae
and
cmpsb
and
test
pop
rcrl
inc
repnz
int
stos
add
pop
dec
jbe
cmpsl
cmp
push
push
dec
cltd
dec
push
hlt
dec
lret
push
iret
adc
or
lds
add
pop
push
jnp
test
jge
pop
in
jg
cmp
pop
sbb
stos
sub
push
pop
mov
outsl
clc
add
int3
sub
jae
push
mov
inc
lods
and
sbb
scas
push
jb
mov
cmp
inc
sub
and
push
push
jecxz
subb
mov
jns
dec
pop
jl
inc
xorl
pushf
inc
aaa
lock
filds
inc
fs
push
jo
push
xor
mov
fcoml
add
outsl
push
out
cmp
inc
fbstp
cmpsb
or
test
jle
sbb
mov
int3
stos
enter
pop
pop
repnz
mov
shlb
fwait
popa
pop
cmp
xchg
cmp
dec
insl
mov
ss
push
inc
das
mov
add
xchg
push
dec
mov
xor
fildll
std
cmp
fbstp
shll
add
icebp
leave
gs
jle
jbe
mov
sbb
gs
cmp
xor
lods
int
pop
xchg
dec
sbb
stos
mov
fldt
add
pop
mov
sbb
mov
adc
lret
dec
adc
and
or
sbb
mov
xor
xchg
lea
imul
jbe
pushf
jbe
adc
fists
xchg
rcrl
inc
into
mov
ret
mov
stos
repnz
fprem1
lods
adc
cld
xchg
cmp
inc
sbb
jp
lea
aaa
negb
sbb
pop
xchg
js
call
or
add
in
lods
leave
addr16
fcmovnu
jecxz
insl
sub
mov
arpl
mov
cmpsl
stos
bound
cwtl
js
xchg
cld
inc
sbb
jno
xchg
jo
or
sbb
daa
jle
dec
jo
push
mov
jecxz
adc
shl
cmpsb
push
push
sub
add
mov
inc
loop
roll
or
mov
std
mov
lret
lret
out
cmp
sbb
aad
xlat
push
ret
loopne
mov
cmp
jle
adcl
rorl
dec
adc
lcall
aad
mull
xchg
mov
or
lcall
imul
mov
scas
jno
xchg
insl
out
mov
nop
add
sub
mov
imull
in
loopne
repz
pop
xchg
rorb
in
loope
mov
sub
nop
mov
ret
pavgb
lahf
adc
inc
xchg
or
sub
jae
frstor
test
dec
and
mov
sub
sbb
test
push
mov
lods
cs
lret
and
and
and
or
sahf
icebp
aam
lock
je
cmc
hlt
sbb
movsl
lea
pusha
into
pop
pop
ficomps
jnp
push
rorl
lcall
js
push
bound
arpl
inc
call
loope
insl
loope
or
outsl
jmp
fcmovb
cmp
adc
add
arpl
lock
push
jmp
jae
cmpsl
add
pop
test
daa
push
lock
cltd
in
fmull
insb
pop
lods
sbb
jl
jg
hlt
push
or
sbb
add
mov
sbb
loopne
and
adc
mov
push
sbb
inc
test
lods
shll
or
xchg
gs
incb
clc
rcrl
fmul
or
shrl
add
scas
adc
in
rorl
push
jl
jae
xor
je
jo
sbb
insl
xchg
or
loope
push
mov
mov
push
push
push
into
mov
out
nop
mov
mov
xlat
ret
fldln2
shl
js
mov
roll
roll
ret
add
jno
lahf
daa
imul
xchg
cmpsl
lods
fadd
mov
movsb
mov
subb
add
sarb
jno
stos
mov
ret
shll
mov
lcall
cmp
icebp
jbe
cmp
and
jbe
push
lea
call
mov
gs
xor
imul
cmpb
ret
stos
xchg
ja
cs
scas
popa
cmc
xchg
clc
ret
mov
int3
xor
dec
cld
les
scas
sub
mov
and
les
movsb
dec
mov
mov
out
adc
inc
sti
adcb
mov
jbe
test
mov
std
inc
xchg
pop
push
ficoml
int3
and
pusha
xchg
adcb
xor
daa
or
sub
test
les
mov
cmp
cmp
cs
and
movsl
xchg
push
adc
pusha
je
mov
pop
jl
movsl
sub
pop
pop
xor
aaa
or
lret
push
cmp
filds
xchg
pushf
jae
sbb
xchg
lea
ljmp
mulb
cmc
cs
cmp
repz
vpmullw
pop
in
out
xchg
push
mov
dec
xor
xor
or
jl
shrl
iret
jbe
daa
adc
sub
sbb
xor
mov
sbbl
int
sti
mov
popf
loop
sub
jecxz
rcll
or
cli
fadds
out
test
xchg
mov
sub
and
or
test
push
rcrb
pop
adc
lcall
test
or
push
mov
lahf
xchg
in
push
sub
scas
push
into
rcl
xchg
lret
in
dec
and
sub
dec
mov
ret
lret
popf
and
dec
mov
mov
mov
adc
xchg
lea
adc
inc
out
inc
aas
negb
je
mov
aaa
mov
lret
test
imul
test
pop
lea
test
mov
iret
fwait
push
mov
jb
in
scas
mov
sbb
sbb
hlt
xchg
inc
sahf
pop
sarl
loop
push
jge
cmp
mov
lock
subl
loopne
push
shll
pop
mov
jbe
jbe
insb
pushf
int
mov
dec
adc
sub
mov
lret
lret
int3
or
mov
and
mov
imul
or
xchg
adc
aas
mov
xchg
push
stos
pop
adcl
sbb
outsl
std
xor
test
jbe
xchg
sub
dec
jo
imul
cld
mov
sub
leave
cwtl
mov
push
cmpl
cmp
sbb
adc
push
xchg
fsts
ja
out
mov
and
add
add
fwait
xchg
push
fnstcw
fmuls
dec
cltd
mov
dec
std
mov
adc
sbb
cmc
aaa
push
mov
jne
cmpl
and
mov
pop
or
pop
stos
push
stos
cmc
dec
fwait
repz
pop
or
je
adc
loope
or
int3
push
mov
mov
fstpl
fists
cmpsl
stc
js
test
mov
ja
jbe
popf
adc
lods
add
sbb
inc
or
push
mov
sub
lods
or
or
popf
jnp
out
mov
jecxz
mov
sub
popa
sbb
or
arpl
in
mov
pop
jp
js
adc
sub
ljmp
and
loope
dec
popf
gs
popf
lcall
or
mov
mov
ror
sbb
imul
into
and
scas
test
pop
nop
insl
mov
outsb
mov
mov
jno
subl
ss
inc
sub
int
add
jp
pushf
inc
pop
xor
dec
mov
adc
repz
fcompl
lcall
pop
sbbl
and
dec
or
icebp
add
mov
xchg
movsl
inc
mov
cmp
mov
push
gs
setae
in
dec
mov
cmc
pop
inc
imul
cmc
adc
add
inc
fnstcw
sbb
pop
cmp
lods
loope
in
pop
sub
add
shll
xchg
shlb
dec
lods
adc
xchg
mov
mov
mov
outsb
inc
cltd
lods
and
pop
xchg
and
inc
enter
push
arpl
inc
lret
rolb
jl
jb
cmpsb
inc
push
or
pop
pop
iret
loope
jg
pop
shrb
icebp
in
pushf
adc
ret
test
je
or
dec
stos
aas
xchg
adc
dec
push
in
cmp
xor
push
dec
out
scas
xchg
movsb
das
mov
or
jg
dec
aas
push
repz
jnp
negl
stos
sbb
call
stos
dec
scas
repz
andb
xor
mov
pop
ss
jmp
fildll
mov
loopne
adc
cmpsl
pop
es
xchg
jg
test
dec
jg
lret
inc
sub
add
push
mov
and
test
dec
push
push
sar
dec
add
inc
cmpsl
mov
js
mov
outsb
mov
sub
sub
pop
in
inc
adc
xchg
push
adc
xchg
outsb
dec
fadds
insl
test
jno
mov
or
les
ljmp
ds
popf
lods
jnp
out
and
popa
jge
lods
and
pop
imul
out
mov
pop
lea
enter
sub
mov
mov
push
enter
sarb
in
jo
and
sar
mov
imul
pop
mov
jne
out
or
lock
int
lcall
mov
fidivrs
sub
adc
xchg
shl
xchg
scas
int3
insl
data16
scas
daa
push
in
inc
push
sbb
sarb
in
mov
imul
mov
outsb
xor
aas
shll
pushf
add
mov
and
rcll
jae
ds
xchg
test
sub
scas
roll
mov
mov
mov
pop
insl
loop
inc
nop
jecxz
cmp
outsl
call
stc
mov
aas
sbb
mov
sbb
add
mov
jg
leave
xor
or
jecxz
push
mov
cmp
xchg
sub
pop
int
or
dec
xchg
xchg
push
xchg
fdivr
test
je
addr16
int
jge
hlt
sub
and
cld
pop
jb
add
sub
or
jl
mov
lahf
sub
jno
sbb
scas
xorb
adc
cmp
mov
push
call
add
xor
mov
movd
rorb
xor
fistpll
cwtl
leave
mov
mov
xchg
hlt
pop
loope
ja
pop
repz
stos
and
cmpsl
mov
mov
hlt
int
or
test
movsl
add
in
xor
scas
add
xchg
test
dec
lds
add
imul
xor
nop
js
sbb
inc
movsb
pop
es
mov
out
mov
subl
insl
out
pop
jbe
es
test
push
popa
inc
pop
mov
mov
leave
pop
out
inc
jno
ljmp
jmp
jmp
subb
push
dec
sbb
adc
pop
or
bound
pop
inc
and
cmp
jns
jge
push
push
xorl
rorb
pop
loope
jno
ret
jle
je
gs
fcoml
leave
xchg
mov
dec
loop
shrb
pop
sbb
bound
out
push
inc
leave
jnp
xor
mov
xchg
mov
and
push
lock
mov
fsubr
rorb
mov
add
mov
movsl
mov
test
int
test
inc
mov
rcrl
dec
or
arpl
mov
int
dec
push
dec
imul
call
jg
xor
inc
clc
jne
add
push
sub
jl
adc
xchg
jl
push
pop
mov
mov
decb
lds
xlat
dec
push
cmp
cmp
inc
shll
mov
or
pop
xchg
adc
xor
les
mov
pop
or
fldl
lret
pop
xor
shr
gs
xor
out
push
gs
add
addr16
sub
cwtl
arpl
cwtl
dec
sub
js
or
mov
cmc
mov
or
mov
xorb
cmc
cld
pop
adc
mov
scas
insl
xor
jne
sahf
inc
aam
push
jae
push
mov
xor
xchg
pop
je
sbb
push
es
push
pusha
ret
lock
push
arpl
or
xorl
mov
xchg
sub
icebp
lahf
mov
cmp
insl
or
push
lods
push
repz
add
mov
pop
jecxz
push
cmpsl
mov
adc
mov
hlt
and
stos
mov
out
mov
pop
jae
lret
and
lcall
cmp
sub
pop
das
pop
push
sub
pusha
fldl
and
jmp
mov
call
into
enter
ja
jg
xor
add
jge
inc
add
lret
ret
aad
add
shrl
adc
inc
out
xor
xchg
es
dec
ss
mov
mov
mov
and
loope
repz
dec
push
xor
cmc
outsb
in
stc
in
push
cmp
dec
imul
insl
into
pop
jmp
inc
das
mov
mov
push
inc
movsb
in
movsl
stc
icebp
push
xchg
mov
fwait
sbb
cltd
ss
sbb
pop
xchg
xchg
and
and
xor
jno
adc
test
cmpsl
adc
inc
loopew
or
xchg
mov
insl
sbb
rol
fwait
aad
test
push
lcallw
jb
clc
call
and
inc
inc
pop
sbb
dec
hlt
xchg
repz
sub
pop
mov
mov
call
clc
push
movsl
fcomi
xchg
test
pop
jbe
adc
mov
mov
mov
mov
dec
mov
and
cld
inc
pop
xchg
in
ficoms
popa
ret
shll
or
test
lods
mov
ljmp
stos
insb
jb
pop
fwait
mov
mov
mov
js
cwtl
fists
mov
xchg
lds
jb
push
out
jns
fsubl
pop
mov
lret
ja
sbbb
sub
mov
scas
and
out
lret
mov
cmp
loop
dec
dec
and
and
mov
xchg
add
mov
adc
xchg
pusha
repnz
inc
cmp
aad
and
imul
repz
sbb
mov
or
cltd
or
fiadds
imul
test
out
imul
jmp
jne
mov
mov
push
std
xchg
jecxz
data16
cmp
jo
dec
adc
repz
mov
push
jmp
jecxz
lea
fnstcw
mov
les
jmp
cmpsl
nop
and
mov
push
xor
fdivrs
idivl
xor
or
outsb
xchg
ss
inc
lret
sbb
fsub
int
add
popa
pop
jmp
cmp
xor
outsb
xchg
sub
clc
fwait
int3
xchg
imul
pop
xor
fwait
loopne
inc
ds
shll
mov
push
jns
dec
cmp
and
push
ds
pop
das
outsb
sarl
adc
lret
lret
mov
pop
test
push
pop
int
negb
push
sub
dec
shll
hlt
jnp
mov
js
ret
mov
pop
lods
jle
flds
or
movsb
mov
jge
das
popf
mov
push
xchg
imul
pop
shl
or
loopne
jbe
mov
lcall
lds
jp
xor
or
or
xlat
nop
mov
cmp
insb
or
mov
cwtl
ds
rol
ljmp
ficoml
shr
and
lds
mov
leave
or
fadd
xchg
add
jo
bound
scas
lret
jo
in
and
dec
pop
xchg
fstps
in
ja
jae
sarb
fwait
outsl
cmp
cmp
jl
inc
mov
cvttps2pi
or
shlb
jecxz
fiaddl
or
test
popa
jecxz
inc
cwtl
lret
or
scas
sub
movsl
xor
lods
push
sbb
inc
lcall
jle
lods
fwait
sbb
andb
nop
mov
pusha
aad
xchg
adc
push
xchg
stc
nop
jo
mov
mov
dec
mov
mov
das
enter
push
imul
daa
cmp
dec
cmp
xor
fcmovnu
add
andl
inc
cmp
int
or
dec
mov
fsubrl
bound
sbb
dec
lods
mov
pop
bound
stos
lahf
sub
xor
in
dec
adc
outsl
add
repnz
testb
mov
jnp
cmp
push
mov
test
sub
imul
out
lea
xchg
js
pop
push
mov
es
pop
dec
and
xchg
jl
jl
lds
fs
jno
push
sub
int
shll
das
inc
jns
pop
fldl
lcall
xor
pop
push
mov
insb
es
jb
jecxz
dec
mov
cld
jge
fdivp
inc
mov
loope
int3
test
je
and
jno
xchg
mov
jnp
inc
jne
hlt
inc
push
cld
stos
lea
pop
in
lahf
or
cmc
hlt
test
repnz
and
cmp
adc
shlb
mov
xor
xchg
adc
mov
in
dec
into
test
cmp
ds
shlb
adc
aam
daa
inc
data16
imul
cmpsb
push
cmp
icebp
mov
pop
out
fs
lahf
imul
jb
movsl
dec
bound
inc
adc
push
out
daa
xor
testl
dec
and
nop
pop
rol
aaa
jl
xor
mov
sub
jge
leave
decb
lds
cmpsl
mov
xor
stos
push
pusha
or
into
jp
movsb
xadd
xlat
out
cmp
pop
std
push
mov
scas
xchg
dec
lcall
stos
jl
fldenv
jecxz
clc
adc
jp
push
pop
gs
pop
addr16
dec
xchg
dec
and
xchg
dec
xor
pop
cmp
ret
lods
in
bound
cltd
gs
stos
fdivrp
loop
sbb
lds
rcl
push
ret
inc
pop
fs
pop
mov
testl
push
mov
paddw
test
mov
push
mov
xchg
je
in
cmp
dec
sbb
sub
dec
inc
add
xchg
arpl
sbb
shrl
lret
dec
fimull
ds
cmp
xchg
jl
mov
pop
testb
jo
or
xlat
outsl
cmp
cwtl
pop
add
and
cli
scas
sub
dec
push
fsubrl
xor
fcos
pop
in
test
pop
dec
dec
inc
or
in
mov
in
sbbl
cltd
push
orl
ja
insb
fadds
int
cmp
xchg
dec
mov
mov
loope
pop
sahf
jl
cs
rcrl
mov
inc
xor
sbb
dec
insl
inc
sub
push
mov
negl
xor
shll
cld
mov
icebp
lahf
in
lretw
jnp
fists
dec
lock
je
pop
inc
int
xchg
aam
add
je
push
aam
nop
cmpb
lcall
inc
fisubs
or
aam
jae
mov
jmp
mov
fidivs
mov
test
test
idivl
xchg
lcall
aaa
push
pusha
fcompl
lods
std
cmpsb
xlat
lret
cmp
lcall
sbb
sarb
pushf
or
mov
xchg
and
mov
cld
and
pop
loop
sub
xchg
push
out
int3
add
sahf
mov
cld
fyl2xp1
enter
imul
pusha
mov
repz
in
imul
xor
insl
int3
xchg
ss
mov
mov
movsl
div
adc
loop
mov
fcom
insb
add
cs
dec
inc
inc
jecxz
jbe
push
xchg
rolb
pop
push
out
mov
push
mov
or
inc
pop
mov
xchg
iret
xor
inc
sub
lret
cmpsl
inc
dec
cmp
icebp
push
cmpsb
mov
xor
mov
mov
pop
test
cmp
xor
jl
or
add
lods
xchg
incb
dec
fwait
push
dec
clc
mov
or
mov
and
ret
stos
jns
or
inc
shr
ja
sbb
or
mov
icebp
push
mov
mov
scas
lods
adc
xchg
xor
inc
mov
cmp
clc
jnp
sub
jbe,pt
pop
mov
mov
add
pop
add
clc
jg
jo
into
mov
sbbb
test
lock
lahf
cmp
jb
inc
xchg
xchg
pop
sbb
push
test
sbb
sahf
ficoml
cs
add
mov
leave
pop
ret
mov
cli
int3
mov
push
add
jnp
sub
or
and
dec
dec
aas
into
push
xor
jle
sahf
mov
xchg
imul
out
dec
mov
and
ror
mov
adcb
iret
rcll
push
test
inc
mov
lahf
orb
sub
sbb
jg
repnz
inc
xor
inc
sub
mov
or
pusha
pop
outsb
jge
lds
inc
cli
sbb
repnz
or
in
shr
leave
sahf
rol
cs
scas
pop
adc
in
aas
mov
xor
push
bound
js
xor
xchg
lods
xchg
sti
test
clc
xor
pop
fsubr
frstor
leave
jne
dec
js
adc
shll
adc
xor
loopew
mov
or
sbb
ss
int3
jnp
xor
popf
ret
mov
pop
repnz
movl
jle
mov
mull
or
mov
adc
inc
jae
mov
fdivrl
xchg
enter
xor
in
jp
add
add
imull
sti
lea
or
adc
addr16
insl
mov
add
ja
sbb
add
inc
mov
cltd
or
negl
jge
xor
cwtl
sbb
repnz
out
push
dec
sbb
mov
add
mov
xchg
scas
pop
bound
pusha
dec
adc
jp
fimull
cld
or
mov
hlt
cmp
lds
lods
xchg
insl
faddl
imul
lods
mov
push
stc
cmc
fmull
js
dec
rcrb
push
xchg
icebp
pop
inc
mov
adc
psllw
jge
or
xchg
sbb
cmc
scas
daa
cmp
sub
ljmp
dec
dec
hlt
lock
data16
fwait
ds
stos
push
nop
fwait
aas
in
jl
push
mov
lret
lea
movsb
sbb
mov
sub
mulb
xchg
add
or
int
jae
inc
int3
std
cld
sbb
xor
pop
pop
fisubs
sbb
movq
cmp
cmp
fiadds
xor
mov
daa
xchg
das
add
sub
rorb
pop
dec
out
jg
lods
es
xchg
out
mov
adc
fstp
sti
mov
jp
add
jae
push
aaa
push
dec
cltd
mov
ret
dec
data16
push
fldl
mov
add
mov
iret
testl
jns
mov
push
js
and
scas
mov
jbe
cmp
jns
call
lds
bound
pop
or
lds
push
adc
inc
loopne
mov
push
push
add
mov
loop
or
mov
insl
insb
add
loop
orb
xlat
test
dec
cmp
sbb
add
jb
je
push
xchg
stos
or
push
mov
sub
jge
jo
adc
jecxz
mov
ror
mov
adc
add
dec
aaa
idivl
sbb
and
rorl
cmp
cs
jo
lock
repnz
icebp
test
push
dec
iret
into
mov
sub
clc
adc
push
aaa
push
cmc
and
xchg
mov
inc
mov
scas
jnp
imul
sub
fdivr
fcoml
xchg
jns
out
jo
insl
cmpsl
xchg
mov
xor
popf
sub
cmp
mov
es
inc
loop
xchg
inc
pop
lods
ds
mov
mov
sub
xchg
iret
and
fisttpl
inc
push
pop
fisubl
test
xor
mov
cmpsl
jl
out
add
add
ja
repnz
icebp
aad
jno
movl
fbstp
mov
sub
clc
stos
jge
push
dec
jge
or
stos
outsb
sbb
dec
in
xchg
test
mov
dec
xor
scas
out
cmp
ja
or
xor
movsl
fiaddl
pop
push
fwait
insb
sbb
and
xlat
xchg
popa
mov
cmp
mov
cwtl
sbb
xor
in
push
pop
stc
insl
out
sti
mov
lock
adcb
call
jle
push
test
and
pop
filds
jmp
cltd
jae
push
iret
or
xchg
sub
mov
in
mov
push
push
mov
cmp
push
aaa
add
lods
and
and
nop
ja
pop
add
mov
xchg
dec
cmp
cmp
mov
push
lods
test
inc
cmova
mov
mov
sarb
mov
lret
or
jns
sub
rcrb
rcrl
cmpsb
sbb
push
or
dec
aas
repnz
mov
scas
popa
push
inc
mov
cmp
mov
and
lock
lock
mov
movsb
xlat
adc
xchg
mov
cmpsb
mov
lret
pop
mov
lds
ffree
xchg
scas
jge
and
cltd
mov
jle
cmp
testb
sbb
bound
mov
mov
xchg
cmp
sbb
cmpsb
add
adc
cld
movsb
popa
xchg
lcall
sub
jg
imul
idivl
xchg
sbb
push
pop
mov
jae
pop
xchg
jmp
mov
mov
lods
ficoms
movsb
push
xchg
repnz
pop
sbb
ret
push
cmp
inc
push
arpl
repnz
or
mov
push
ja
and
enter
mov
repz
leave
daa
push
aam
lods
repz
xor
insl
jl
cmp
jno,pt
mov
out
dec
test
push
jge
mov
mov
gs
mov
out
xor
mov
lods
shll
iret
lea
scas
sbbb
stc
jle
pop
test
imul
ret
sbb
data16
or
test
or
and
inc
call
adc
loope,pn
jns
xchg
jg
sbb
lods
mov
in
push
mov
pop
mov
lea
sysenter
xlat
addl
xor
sub
xor
push
icebp
jge
mov
push
pusha
mov
outsl
push
sahf
test
mov
fsub
mov
push
pop
pusha
shl
xlat
add
or
int
cwtl
and
or
push
test
sub
mov
push
push
pop
rol
iret
rclb
dec
jae
push
lods
mov
xlat
inc
and
pusha
sbb
add
and
test
insl
dec
xlat
mov
lods
add
push
mov
pop
pop
ss
andb
hlt
jg
sahf
shrb
mov
in
adc
jne
cli
mov
or
pop
hlt
call
outsb
lea
push
aad
push
lret
idiv
add
jmp
sub
inc
push
mov
mov
pop
rorl
mov
insl
xor
mov
daa
pop
dec
ja
inc
cwtl
scas
aas
in
or
lock
xor
push
jb
out
add
mov
pop
and
call
push
mov
inc
add
test
cmp
ret
mov
dec
mov
ja
sbb
popf
aaa
adc
outsl
lahf
test
inc
mov
fsubl
fidivl
pop
cltd
out
mov
loopne
les
test
lcall
and
and
icebp
xlat
test
fldcw
ljmp
sub
arpl
xchg
sbb
cli
sbb
dec
push
add
jne
xchg
and
dec
fcomi
inc
imul
mov
mov
icebp
xchg
subb
jecxz
or
push
insb
add
adc
mov
jecxz
xor
sbb
or
in
mov
loop
imul
stc
popf
mov
enter
or
mov
arpl
shlb
mov
rclb
jb
ret
imull
pop
pop
in
dec
aas
mov
mov
nop
adc
pop
xor
xor
sub
or
mov
imul
cld
cmp
adc
fs
sti
into
mov
leave
cmpsb
leave
jmp
fdivrs
push
adc
sbb
mov
insb
mov
outsb
and
repz
xor
test
mov
jp
add
mov
jp
popl
lret
mov
nop
sbb
mov
rcrl
mov
stos
cmc
test
jne
adc
lret
add
ss
sbb
int3
cltd
test
pop
mov
lods
out
into
addb
test
daa
xor
pop
add
jmp
ret
subb
or
sbb
mov
add
mov
jge
mov
psllq
mov
aaa
xlat
icebp
icebp
test
ret
rcr
test
mov
dec
pop
fldcw
mov
xorl
fcoml
shlb
int3
lock
arpl
mov
jecxz
aam
repz
dec
cmpsb
in
xchg
lret
clc
hlt
shrl
push
jns
test
ja
mov
mov
fsubp
mov
jbe
fwait
nop
dec
push
cmp
mov
in
or
stos
mov
push
mov
xchg
arpl
sub
push
adc
sbb
outsb
aaa
jg
cmc
stos
loopne
.byte
fwait
.byte
stos
dec
jmp
or
add
add
and
test
test
sub
ss
mov
insl
jns
and
xor
and
adc
dec
cmpsb
cmp
in
inc
mov
imul
movsl
outsb
test
inc
data16
notl
pushf
and
xchg
push
mov
xchg
push
push
icebp
loopne
fsubrs
dec
pop
cltd
dec
out
sub
sbb
mov
popa
jge
rcll
push
sbb
int
loopne
add
add
add
and
add
inc
fisttpll
add
std
pushf
es
insl
pop
xor
aad
pop
and
popa
push
xchg
pop
sbb
sub
ret
psubsw
neg
bound
psubd
fistl
jb
add
loopne
in
add
sbb
xor
sub
jo
inc
push
rcrl
js
popa
cmp
pop
stc
in
mov
cmp
mov
cmpsb
mov
ret
or
add
sbb
pop
adcl
jns
add
dec
xchg
loop
icebp
sbb
push
js
jno
dec
mov
js
cld
daa
pop
inc
icebp
dec
insl
leave
hlt
pop
sbb
in
add
and
cmpsb
and
pop
jns
rorb
fnstenv
dec
mov
mov
sbb
lret
adc
jl
outsb
je
lcall
mov
cmp
mov
dec
xchg
lret
cs
hlt
pop
adcb
push
jb
pop
stos
pop
xor
sub
cmp
or
push
fisubrs
inc
push
sbb
cmpb
lret
sbb
sbb
pop
neg
ror
push
ret
pop
mov
push
push
lds
fnstsw
inc
add
in
or
lods
scas
mov
or
imul
mov
pop
scas
subb
in
mov
insl
cs
mov
mov
mov
bnd
testl
jmp
pop
adc
ljmp
inc
out
xchg
xchg
cmp
arpl
pop
adc
mov
movsb
sub
into
sbb
shl
sbb
jl
mov
dec
push
adc
mov
cld
inc
enter
xor
scas
insl
iret
aad
pop
and
shr
or
jnp
imul
and
jecxz
in
dec
xor
jmp
and
mov
hlt
push
adc
mov
es
insb
je
mov
loop
frstor
mov
cmp
sbb
cwtl
cmp
icebp
iret
lods
enter
call
inc
xor
cmc
or
insb
lds
sbb
or
cmp
or
rol
cmp
or
adc
mov
sbb
pushf
lds
testl
inc
sub
cmpsb
movsl
je
pushf
lahf
pop
cli
adcb
jns
mov
cmp
in
inc
xor
ljmp
fnstsw
push
repnz
testb
and
jmp
and
mov
sub
iret
or
mov
pop
or
xor
sti
sbb
mov
mov
push
mull
xchg
xchg
pop
scas
pop
fstp
cmp
cmpsb
adc
xor
jbe
aam
and
mov
dec
cmp
lret
imul
mov
loop
add
mov
mov
test
inc
mov
fistl
dec
mov
in
mov
pop
in
pop
es
out
mov
leave
repz
std
cmp
mov
or
stos
fildl
and
sub
test
inc
test
adc
jg
adc
lds
jmp
jb
movsl
dec
aaa
in
sub
adc
gs
lea
cmp
mov
xchg
mov
inc
dec
pop
les
pop
add
mov
jo
dec
scas
nop
test
cmpsl
or
in
dec
xchg
xor
pop
lret
mov
xor
jge
jns
loop
mov
outsb
mov
mov
fwait
sub
cli
es
je
insb
les
or
test
add
pop
fisttpll
pop
push
pusha
cmc
js
push
add
sub
sub
pop
lds
out
add
sbb
aad
fdivl
jo
add
test
jnp
decl
dec
mov
or
icebp
cltd
mov
mov
into
jge
or
ljmp
out
push
lock
scas
mov
adc
bound
pop
filds
repz
add
add
and
mov
mov
je
lret
pop
sub
lcall
aad
into
push
int3
test
sahf
jmp
dec
insb
mov
test
movsb
scas
mov
push
lods
adc
jae
aaa
or
jge
add
scas
xchg
xchg
pop
mov
aaa
or
push
inc
cmc
mov
frstor
mov
xlat
pop
mov
les
aaa
jle
sahf
enter
test
xchg
mov
cmc
cmpsl
ret
cmp
xchg
mov
scas
inc
pop
in
cli
dec
cld
imul
sub
mov
scas
lret
lds
rclb
mov
xor
push
lds
add
incl
stos
fdivrs
aas
clc
push
lahf
leave
ret
sti
movsl
and
adc
inc
jae
ret
adc
sbb
cmc
push
arpl
mov
mov
mov
fbld
das
jle
inc
jae
imul
rcr
sub
fcmovne
test
sti
icebp
adc
jg
stos
int
call
lcall
inc
bound
cli
inc
addr16
psllq
test
mov
push
push
sub
add
pop
arpl
aaa
pop
das
cwtl
in
inc
stos
or
in
ljmp
lods
insb
fnstcw
push
pop
sub
mov
jnp
aas
xlat
or
mov
lea
mov
mov
jl
mov
addr16
notl
xor
pop
push
lret
arpl
adc
lret
repz
inc
lods
jl
or
push
movsb
push
mov
lret
popf
in
negb
das
push
cs
sbb
xor
in
repnz
dec
out
adc
scas
cmp
addr16
cmp
pop
inc
pop
enter
pop
mov
lock
push
xchg
int
add
call
dec
stos
adc
ljmp
nop
call
imul
out
rorb
mov
leave
adc
dec
not
sahf
pusha
out
pop
popf
fisubrs
mov
lcall
pop
inc
add
iret
add
pop
push
sti
gs
pop
enter
adcl
mov
xorb
mov
shrl
insl
jl
out
jle
sbb
test
xchg
jmp
xorb
cltd
mov
adc
cld
or
xchg
mov
cmp
arpl
mov
adc
repnz
push
adc
cltd
mov
pop
mov
lcall
and
cmp
lea
push
jl
cmp
dec
mov
mov
push
or
lahf
andl
in
xchg
mulb
ja
adc
cmpsb
pop
mov
and
fstpl
cltd
dec
dec
aas
mov
and
pop
mull
in
fmull
inc
jne
divl
aad
fucom
inc
push
dec
das
imul
mov
bound
mov
lods
adc
push
mov
xor
gs
jg
adc
mov
push
dec
gs
mov
jg
andl
enter
pcmpeqd
movsl
neg
xor
mov
adc
xchg
fs
lods
cmp
lahf
stos
adc
xlat
push
dec
inc
cli
ficompl
mov
mov
pusha
mov
hlt
ja
ss
daa
xchg
inc
imul
jp
in
repz
cltd
jno
adc
push
cmp
cltd
popf
subb
and
lea
outsl
stos
jg
inc
dec
leave
stos
sub
lahf
pop
push
testb
push
gs
push
xchg
cld
jl
jp
rcll
lret
je
aaa
adc
cmp
loope
dec
cmc
ret
jg
push
cmp
sbb
stos
loop
loopne
stos
shlb
jne
lods
dec
cs
sahf
fisttps
outsl
subb
pop
cld
cmp
push
dec
lds
aas
enter
adc
ljmp
outsl
jns
fadd
scas
mov
mov
xchg
or
lret
ljmp
jb
in
addr16
cmpl
mov
xor
adc
push
cmc
fmul
cmc
sarl
dec
sub
and
xor
xor
inc
loopne
icebp
or
cmp
jge
cli
je
or
ja
pop
add
insb
mov
cmp
shll
push
ficoms
push
push
pop
aas
insb
rolb
sbb
push
pusha
ja
mov
in
in
pop
mov
inc
shld
notl
inc
dec
cli
sbb
ljmp
mov
fs
mov
cwtl
movsl
mov
add
pushf
roll
es
push
or
xchg
fnsave
pop
data16
or
push
test
mov
leave
fcomip
test
mov
rcll
xor
sti
xchg
lea
adc
aad
in
repz
and
ret
ss
push
jmp
addb
inc
popf
shr
popf
jle
xchg
leave
mov
mov
addr16
sbb
dec
or
out
in
and
mov
aas
into
clc
cmp
or
xlat
lret
or
mov
push
pop
fcoml
shlb
stos
jae
cmp
mov
ljmp
xlat
les
jp
adc
mov
mov
cwtl
dec
cltd
call
or
int3
call
imul
call
hlt
add
push
jbe
xchg
push
shr
jns
inc
repz
sbb
stc
test
divl
fstp
inc
pop
add
jno
repz
jl
adc
insl
xchg
pop
pop
pusha
mov
jbe
shll
es
rol
imul
jge
xor
aam
je
cmpsl
imul
jbe
jmp
mov
or
xlat
push
imul
addl
mov
xchg
xchg
out
pop
push
and
and
data16
addr16
daa
clc
loope
into
lret
es
imul
inc
out
dec
lods
rcl
andl
mov
pop
movsl
or
aad
cmp
jge
jb
sti
lea
or
repnz
or
mov
sub
adc
xor
xchg
daa
mov
inc
andb
int
icebp
jae
fistl
inc
pop
jae
cs
daa
push
outsb
and
je
jbe
repz
mov
sbb
jge
mov
aaa
add
das
sbb
xchg
std
mov
jb
clc
test
push
xchg
mov
outsl
jecxz
out
jne
dec
test
xchg
test
xor
lods
imul
dec
bound
sarb
mov
std
xchg
sbb
inc
or
mov
movsl
dec
sub
ret
enter
mov
mov
xor
dec
or
out
loopne
push
inc
mov
cmp
jns
dec
cs
jno
push
lea
pop
pop
int
push
jmp
cmpsl
pusha
lahf
adcl
insl
add
push
xchg
sbb
mul
jp,pn
dec
sub
push
fsubrl
xor
call
mov
rorb
push
adc
adc
js
and
jne
mov
ljmp
sub
sbbb
mov
jp
cmp
jns
jp
add
lret
inc
push
sub
sbb
lahf
loopne
test
aas
ds
xor
shll
jmp
fs
loopne
call
pusha
and
jl
in
sbb
rcl
xchg
xchg
cmpb
jb
das
hlt
jp
pop
jp
dec
jae
lcall
mov
lahf
ja
enter
sahf
jnp
sbb
inc
les
adc
or
push
loop
mov
xor
sub
pop
movsb
dec
je
popf
jle
mov
sbb
mov
enter
sti
gs
inc
fadds
pop
aaa
mov
inc
push
mov
mov
inc
ja
aaa
push
xchg
jb,pn
pop
dec
mov
mov
imul
ja
cld
leave
ja
lret
xor
sahf
jmp
ss
aad
push
outsb
xchg
xchg
inc
cmp
xor
mov
jmp
jbe
arpl
gs
and
push
lea
addr16
jle
ret
fdivs
fs
or
cmp
push
cwtl
fwait
mov
roll
test
jge
sub
mov
or
leave
fdiv
mulb
push
js
cmp
not
adc
rclb
pop
scas
fs
sbbl
pop
cmp
aas
mov
and
test
push
fwait
dec
add
outsb
flds
shlb
loope
sub
mov
es
call
cwtl
popa
xor
push
xchg
loope
adc
jge
insb
and
adc
test
dec
stos
xchg
mov
inc
mov
lret
xchg
data16
enter
je
add
xchg
jmp
test
int3
cmp
inc
test
rorl
scas
cld
pop
push
popa
sub
mov
es
sbb
mov
mov
jp
gs
add
je
adc
hlt
faddl
push
mov
inc
nop
pop
add
out
into
enter
add
js
test
fwait
jl
sub
das
sarb
ficomps
sbb
loope
jp
repz
mov
push
ficoms
xchg
push
cmpsl
fwait
aas
out
cmc
mov
cwtl
xchg
scas
loope
pop
roll
sbb
and
pop
cmp
dec
fldenv
cld
add
and
lock
and
sbb
dec
mov
fdivr
mov
mov
arpl
sbb
in
adc
add
movsl
outsb
movsl
xchg
scas
cmpsb
incl
jmp
popa
jo
dec
mov
insl
xor
iret
cld
mov
rcrl
gs
lock
xchg
mov
xor
dec
ret
addr16
cltd
sbb
add
inc
dec
movsl
and
lcall
push
out
sub
mov
imul
pop
stos
enter
pop
fistps
mov
jbe
out
push
sti
mull
or
jp
adc
push
jb
loopne
sub
fs
movsl
icebp
lret
mov
inc
pop
xchg
sarb
xchg
gs
jl
xlat
and
xor
jb
pop
or
and
jle
sbb
cwtl
xchg
and
iret
sarl
jmp
stos
xchg
cmpsl
mov
cli
es
into
insl
pop
sbb
pop
adc
lock
cmpsb
xchg
in
add
cmc
loop
jge
icebp
add
dec
and
sub
sub
fwait
push
clc
dec
push
mov
pop
jns
dec
sub
push
mov
and
sub
addb
lock
gs
popf
and
push
mov
sub
mov
cmp
add
xchg
mov
jp
xchg
pop
cmpsb
adc
sbb
sbb
cmp
popa
jne
fidivrs
or
cmc
fsubl
imul
ljmp
cmpsl
popf
pop
xor
aas
shrb
xor
add
push
ds
iret
fstp
jae
lret
add
adc
pusha
test
add
jg
mov
jns
jp
es
cli
lret
out
pop
cmp
jmp
push
enter
xchg
add
inc
repnz
dec
pop
fdivr
mov
dec
add
imul
add
inc
sub
movsl
adc
xor
inc
adc
xor
sub
pop
pop
xchg
sbb
jmp
je
lock
sbb
imul
pop
sbb
roll
test
add
pop
inc
push
ljmp
cmpsb
stc
aam
loopne
sbb
jp
jmp
ror
push
push
enter
xchg
cld
in
lahf
jnp
pushf
dec
mov
ficomps
imul
fwait
sbb
push
cli
adc
add
jns
jno
mov
or
sbb
cmpsl
jbe
fnstcw
push
jnp
and
xchg
or
mov
mov
in
mov
push
xor
rcrb
cli
scas
out
aam
fnsave
sbb
dec
add
stos
mov
mov
aad
push
xchg
sbb
push
clc
mov
aaa
fstpl
into
int
fldenv
fs
add
xor
xchg
push
adc
jecxz
sbb
lret
xchg
clc
mov
push
arpl
les
cld
add
push
push
cmp
xchg
push
mov
mov
out
xor
dec
ja
xchg
adc
inc
movsb
insl
and
or
int
inc
stc
cltd
jbe
clc
ret
sub
push
out
mov
xchg
push
sbb
lcall
call
adc
sahf
stos
add
mov
out
jge
xlat
jp
and
inc
adc
test
movsb
cmpsb
mov
add
stc
test
mov
pushf
and
or
std
mov
or
lret
popa
cmpl
and
arpl
dec
sub
mov
jg
outsb
mov
cmp
xchg
mov
xor
mov
dec
inc
popf
test
sbb
rol
cmp
loopne,pn
push
mov
add
in
daa
test
movsl
push
imul
ljmp
rclb
int
sub
lods
sahf
mov
pop
jae
inc
cwtl
inc
mov
and
mov
push
push
jecxz
dec
push
lahf
arpl
push
arpl
in
mov
test
adc
rcrb
repz
pop
xchg
divl
movsl
rcll
hlt
iret
or
stc
jb
xor
jae
leave
xor
mov
shll
div
into
fisubl
cmc
inc
ds
xor
lods
negl
lods
jno
pop
popl
sub
bound
sti
xchg
hlt
fdivr
cltd
xchg
cltd
mov
add
stos
lcall
stos
mov
je
jp
or
sub
in
jmp
shll
inc
ja
scas
and
test
xchg
inc
mov
push
popl
out
std
aam
sub
mov
ja
rcrb
imul
seto
sbb
xor
iret
ss
out
mov
fwait
sbb
fsubrs
inc
mov
popf
dec
ret
push
xchg
cs
imul
stc
aas
and
push
mov
test
mov
add
cwtl
loope
inc
lahf
inc
ds
lds
adc
push
adc
mov
mov
fnstsw
in
cltd
aaa
jnp
dec
mov
xor
pop
or
push
lock
aam
popa
cmp
cmp
dec
jge
sahf
push
outsw
lahf
jmp
out
inc
add
popa
sbb
dec
dec
incl
dec
pop
cld
mov
xchg
pop
sub
mov
mov
mov
int3
fstpl
mov
ss
jne
mov
cmp
outsl
sahf
xor
or
in
mov
xor
sbb
xor
loop
shl
ds
cs
jae,pn
leave
aad
jle
into
into
sub
jp
call
insb
sarb
dec
or
adc
adc
sahf
lock
mov
push
pop
mov
mov
sbb
or
les
lods
or
inc
ror
or
sub
jnp
fisttpll
adcl
rcr
sti
aas
ret
aam
mov
jnp
icebp
jle
dec
pop
mov
shlb
xchg
in
and
xor
adc
dec
hlt
adc
sbb
dec
fsub
movsb
pop
and
pusha
and
ja
inc
jb
mov
xor
out
ss
cltd
insb
call
das
ds
cmp
sbb
xchg
sub
lret
push
icebp
stc
mov
jle
inc
rclb
and
cld
lcall
cs
subb
shlb
push
les
add
sub
shrb
roll
fs
int3
inc
std
jne
cmpsl
fisttpl
js
dec
enter
sar
dec
leave
and
aas
mov
lock
into
push
sarl
sub
les
mov
lods
shll
and
jnp
jno
loop
cmpsl
shlb
lret
mov
ljmp
adc
insl
bound
mov
push
or
xor
inc
sub
or
adc
xor
pop
sti
mov
cmpsb
aam
idivb
jae
sbb
enter
stos
sti
sbb
mov
push
and
fstpl
mov
scas
sbb
xchg
dec
cmp
repz
xchg
pop
shlb
jmp
bound
add
arpl
lods
ds
hlt
or
fwait
lods
lods
jns
lea
ret
adc
push
dec
or
jnp
and
sbb
sbb
inc
mov
out
hlt
mov
inc
das
fdivr
icebp
dec
add
sti
push
xchg
xchg
daa
mov
or
xchg
ss
mov
dec
pop
mov
add
out
inc
mov
sbb
mov
xchg
js
mov
shrb
shll
scas
mov
dec
out
into
insl
loop
sub
lock
jecxz
push
mov
xchg
dec
pop
dec
adc
pushf
mov
inc
xchg
out
push
out
xor
add
xchg
jle
std
push
inc
decl
xchg
lret
idivb
test
das
ret
aad
xchg
lea
jl
sbb
mov
ret
int
add
pop
hlt
xchg
push
mov
mov
and
clc
push
bnd
stc
adc
fcomps
notl
fwait
add
lret
mov
cs
aas
inc
test
pop
dec
js
arpl
cmovne
xchg
mov
scas
clc
sbb
cmp
addl
fisubs
mov
test
cmp
inc
dec
out
jl
frstor
lahf
jge
aaa
shll
mov
or
mov
rolb
xchg
fs
in
mov
pop
rorb
cltd
test
dec
daa
lods
push
mov
mov
cmp
lcall
ret
aas
xor
imul
pop
xchg
cmp
mov
jne
xchg
jmp
into
addr16
jl
mov
pop
xchg
repnz
dec
outsl
push
mov
cmp
add
cmpsb
mov
xor
test
push
inc
mov
add
popa
cmp
cli
icebp
pusha
pusha
clc
or
push
xchg
push
iret
lret
jge
cmp
sbb
fwait
cltd
xor
or
pop
mov
sbb
add
outsl
add
mov
gs
addr16
or
dec
cmp
and
aam
mov
and
dec
fdivrs
mov
outsb
xor
cmp
lea
and
cmp
add
pop
adc
fnsave
pusha
sbb
push
lret
cmp
lret
jmp
and
pop
popa
andb
leave
nop
add
or
add
mov
lcall
cli
dec
aas
inc
loope
lcall
mov
jmp
sub
dec
xor
add
mov
js
xor
dec
cmp
sub
fisubs
ss
ja
push
sub
lock
addr16
push
fstl
xchg
call
and
movsb
jbe
dec
jle
mov
adc
leave
shl
xchg
jnp
mov
sub
jno
out
cld
ss
cs
je
dec
pop
shll
jns
dec
push
in
add
cmp
jb
stc
pushf
addl
sub
inc
stos
pop
shrl
mov
jge
pop
movsl
mov
and
bnd
sub
sub
sti
dec
xor
rorb
fwait
scas
and
rsm
ffree
push
push
or
and
ds
stos
mov
int3
aaa
pop
cmp
jp
iret
push
test
int
imul
push
xchg
aas
cmp
adc
xor
add
push
sbb
call
nop
outsl
mov
mov
push
es
shl
sbb
xor
aad
xor
mov
bound
add
pushf
push
inc
adc
cmp
jae
aas
addb
fwait
mov
mov
xor
pop
fisubs
inc
mov
jge
sbb
test
loope
lock
int3
push
add
mov
add
sbb
mov
pop
sub
subl
cli
sub
and
pushf
in
imul
icebp
jg
int
out
adc
lea
jp
lods
pop
sbb
jns
arpl
je
mov
mov
enter
mov
sbb
mov
into
xor
loopne
int3
push
dec
es
ficomps
sarl
ret
dec
mov
mov
pop
push
in
jmp
rolb
cmp
xor
xchg
dec
add
mov
out
test
testb
push
leave
xor
aam
push
pushf
cwtl
mov
je
cmpsl
pop
pop
add
xchg
mov
adc
fs
fildl
fcmovb
arpl
push
cmpsb
stc
cmpsb
in
enter
ss
cmp
sub
loopne
jae
add
cmpb
xchg
push
and
mov
in
cwtl
ret
pop
insb
cs
lahf
das
mov
mov
clc
jb
enter
lea
sub
bound
idiv
sbb
jae
and
mov
jo
adc
lods
adc
xchg
sbb
dec
mov
gs
mov
bound
das
jne
inc
int3
lds
gs
clc
pop
fnstenv
arpl
pop
dec
fistpl
jnp
sub
repz
xor
call
cmp
lds
add
jge
lock
xchg
xchg
out
push
jbe
lret
fisttpl
mov
ljmp
lea
cltd
sahf
pusha
sti
mov
testl
pop
mov
test
cmpxchg
rcrb
dec
leave
jge
mov
jb
mov
mov
pop
xor
xor
push
jle
movsl
lahf
xchg
lea
hlt
push
add
imul
mov
cmpsl
cwtl
adc
push
cmp
add
xchg
jne
mov
loope
repz
icebp
sbb
test
arpl
int3
dec
test
lret
dec
xchg
xor
cwtl
arpl
pop
inc
test
jbe
jne
push
lea
lahf
fnstenv
xor
mov
cmp
shll
imul
xor
dec
repz
mov
loopne
shrb
xlat
loop
int
movsb
pop
mov
xor
stc
mov
push
mov
jg
or
and
leave
lock
test
cmpsl
loop
xor
insb
mov
sahf
imul
or
std
test
xchg
push
dec
inc
pushf
daa
push
add
inc
fbld
dec
or
lret
fstl
mov
add
and
xlat
enter
mov
dec
xlat
fistpl
push
cmp
cltd
pop
jmp
insb
inc
xchg
fwait
cwtl
and
push
sbb
mov
mov
adc
ficoms
push
sub
mov
inc
iret
lock
in
rcl
lret
adc
iret
dec
fcomp
lock
enter
sahf
or
push
and
enter
xlat
push
bound
mov
mov
pmaddwd
sub
sub
subl
xor
xchg
mov
mov
lea
jne
jg
pusha
mov
xchg
jle
dec
pop
out
xchg
cmpsl
loope
sub
testl
shlb
jmp
xorb
in
jp
orb
fs
fcom
and
cwtl
rol
das
cmp
adc
movb
jb
pop
cmp
rol
xlat
lods
shlb
mov
fcompl
stos
jmp
aam
jmp
push
jg
stc
mov
outsl
ficompl
shll
fucomp
shrb
jnp
sbb
add
rcll
mov
add
in
sub
nopl
hlt
jl
in
repz
mov
int
mov
popa
mov
or
sub
pop
xchg
jns
push
inc
leave
pop
cmp
sbb
sbb
sub
pop
hlt
out
xor
mov
jg
mov
dec
mov
xor
sbb
push
push
pushf
jbe,pn
pop
mov
inc
loopne
rorl
dec
aas
insb
lret
add
rcl
mov
stc
ja
das
ds
rclb
daa
xchg
scas
adc
shrl
jl
mov
test
push
lock
aaa
call
addl
mov
movd
inc
cltd
cmpsb
insl
dec
hlt
cld
jecxz
adc
sti
neg
jae,pt
fiadds
sbb
in
cmp
lret
xorb
sub
outsl
jbe
loope
in
jo
inc
xor
dec
cmpsl
cmp
sub
data16
es
mov
jl
mov
pop
pop
insl
add
mov
or
inc
push
mov
dec
imul
test
cs
call
mov
cmp
pop
into
mov
das
jo
lcall
rcr
lret
stos
sbb
and
add
rorb
sbb
cltd
adc
repnz
or
adc
aaa
cltd
or
sbb
sbb
aad
dec
cmpsl
fistl
lods
cwtl
icebp
and
incb
jl
test
pop
mov
stc
ss
cmp
std
mov
adc
decb
xor
rcr
jne
and
cs
push
mov
add
mov
mov
pushf
loopne
sbb
add
ja
shr
mov
ljmp
pop
adc
push
or
cmp
enter
mov
icebp
cmp
xchg
xchg
mov
jbe
push
mov
shll
testb
cmpsb
pop
mov
iret
push
mov
int3
int3
inc
cmp
push
ds
jae
mov
cmp
addr16
sub
ljmp
adc
stc
fstps
mov
sbb
jb
mov
in
scas
xchg
add
adc
stc
orb
test
add
adc
movsb
mov
or
es
xorb
xor
jbe
fdivrs
and
jne
into
xchg
adc
and
shlb
and
fbld
int3
das
pop
das
jecxz
lret
sbbb
or
mov
mov
jecxz
cmp
xor
sub
inc
inc
sbb
cwtl
mov
into
imul
cmpsb
xchg
sub
out
xor
mov
dec
divl
pop
fwait
adc
xchg
shlb
sub
mov
sbb
push
mov
std
int
je
and
negb
pop
push
sub
test
aad
cli
cmp
cmpsb
popf
mov
mov
adc
in
mov
movb
sub
dec
add
jmp
xchg
outsb
xchg
cmp
mov
iret
cmp
out
and
inc
enter
push
sub
shll
xlat
sub
pop
lock
inc
js
pop
stos
push
or
mov
nop
js
decb
push
add
cld
adc
xchg
dec
adc
mov
or
lahf
gs
enter
mov
je
mov
sub
sbbb
push
or
out
push
jae
out
xchg
pop
fwait
and
inc
repnz
out
dec
pop
cmp
adc
cmpb
xchg
fidivl
scas
jecxz
push
daa
sub
je
pop
pop
push
aad
in
jns
push
mov
pop
push
or
aad
inc
add
mov
sti
or
mov
xor
push
lret
mov
mov
cltd
sbb
test
das
roll
pop
and
mov
lds
mov
jge
xchg
sbb
addl
movsl
xlat
jl
and
adc
pop
mov
sbb
lods
les
inc
inc
jge
shll
clc
addr16
or
movsl
and
push
adc
adc
daa
out
ds
inc
ja
aas
cmpsl
or
mov
cld
fs
imul
nop
xor
pop
xor
inc
sbb
fsubl
ret
lea
cmp
push
push
stos
filds
cld
inc
or
mov
movd
or
pop
mov
cmp
cmpl
les
aaa
aaa
es
test
inc
cltd
popa
jmp
rcrb
lret
fs
and
adc
and
xlat
dec
stc
xlat
repnz
pusha
jbe
and
pop
push
dec
mov
lock
xchg
imull
fst
lret
pop
sub
add
inc
arpl
cmp
cmpsb
bound
pop
je
mov
into
xchg
rol
or
fnstcw
add
mov
xchg
push
adc
movsl
ret
dec
pop
jns
aaa
movsl
or
xchg
mov
aas
xor
xchg
out
ljmp
inc
mov
jne
jle
pop
push
mov
gs
loop
pop
fucomip
in
outsb
push
jo
js
dec
xlat
xlat
dec
lret
iret
jbe
and
adc
push
adc
mov
das
aad
or
adc
xor
in
inc
stos
cs
test
pop
pop
sub
imul
pop
test
test
jb
mov
pop
and
sahf
fistpll
mov
mov
mov
aaa
dec
add
ljmp
data16
cmp
cs
testb
xlat
sub
jne
xchg
icebp
iret
push
push
fs
pop
out
or
clc
push
cmp
insb
mov
fidivrs
jmp
xor
cmp
cmp
dec
jae
pop
push
out
data16
xchg
enter
push
sbb
jb
mov
dec
fxch
push
push
dec
cmp
sbb
jmp
sbb
adcb
hlt
sub
lods
jae
mov
sahf
lods
xlat
aaa
or
inc
cltd
sbb
push
mov
lock
xor
pop
xchg
inc
adc
lret
insb
cmp
mov
add
mov
fninit
and
push
leave
lock
bound
add
fcmovnbe
mov
sbb
lds
in
adc
jp
push
int
push
mov
pop
jno
lock
dec
sbb
jbe
rorb
test
cld
dec
mov
xor
push
dec
sarl
jp
mov
mov
addr16
mov
mov
cli
and
mov
adc
ljmp
clc
push
loop
mov
and
or
rolb
int3
mov
shl
popf
fnstenv
add
inc
mov
jmp
push
inc
or
andb
mov
insl
fsubs
inc
push
inc
cltd
sub
jle
jmp
cmp
testl
repz
loopne
mov
or
les
or
call
std
sub
dec
addb
rcll
outsb
stos
out
inc
in
out
imul
out
in
inc
push
popa
inc
sbbl
clc
imul
fstps
fisubrl
mov
popa
mov
sbb
xor
mov
arpl
ss
mov
push
in
mov
int
stc
push
adc
mov
mov
in
cmp
hlt
rcrb
cmpsl
dec
imul
inc
jmp
test
mov
xchg
and
push
adc
or
or
iret
adc
add
in
js
fs
dec
fstpt
fucomip
inc
inc
subb
add
mov
inc
mov
mov
loopne
and
sub
iret
movb
in
shlb
mov
xlat
inc
cmpsb
jmp
imul
mov
notl
jnp
mov
dec
repnz
xchg
pop
add
in
adc
or
sbb
and
and
mov
testb
leave
insl
jl
adc
std
xchg
sub
aas
fsubl
imul
jg
in
out
mov
xchg
popa
cmp
das
and
jne
jp
xchg
xchg
imul
cmc
jmp
ljmp
lods
mov
xor
shlb
lea
sahf
sub
rcrb
rcrw
out
inc
idivb
mov
cmp
nop
clc
mov
jl
jno
aam
dec
cmp
pop
mov
push
int
jmp
xor
and
xor
pop
scas
mov
dec
add
xchg
out
dec
or
inc
add
sarb
cmc
pop
sbb
jmp
mov
test
lret
pop
outsl
clc
jl
adc
scas
push
jne
notl
fwait
mov
ss
loopne
push
fwait
cltd
clc
addr16
loopne
addr16
add
sub
mov
cli
jecxz
xchg
in
jae
ss
lret
or
stc
mov
js
add
adc
push
hlt
popa
sar
lds
aaa
and
mov
fs
jb
in
stos
push
fs
or
ss
aas
je
aad
cmp
and
mov
rorl
mov
test
stc
scas
andl
inc
out
je
mov
int
addl
inc
inc
sub
mov
lcall
jno
arpl
les
xor
or
enter
xor
xchg
pop
test
dec
and
and
xlat
adc
and
cld
imul
xlat
lock
lret
aad
pop
pop
sub
hlt
in
and
jle
pop
lods
std
fsubrl
or
xor
adc
imul
bswap
shll
jo
pop
xor
loope
xchg
loopne
dec
pop
cltd
inc
into
pop
mov
jne
sbb
xor
sub
shll
mov
call
pop
pop
mov
jbe
or
mov
xor
xor
dec
repnz
fsubr
push
mov
lds
sbb
xor
cmpsl
mov
std
fcoms
sbb
lock
pushl
xor
out
mov
jb
mov
push
pop
jle
xor
mov
and
outsb
jae
int3
insl
cmp
mov
adc
or
sbb
xlat
sub
sti
add
movsl
mov
mov
push
mov
mov
add
test
and
push
test
add
or
inc
mov
mov
in
and
hlt
mov
jmp
hlt
mov
jg
fcomps
pop
std
jo
inc
hlt
int3
rolb
pop
loopne
bound
aad
dec
pop
xchg
sbb
fbstp
addr16
mov
outsl
dec
jle
aad
aam
pop
shrb
push
testb
dec
sbb
cmp
test
cmp
loope
nop
aaa
scas
ljmp
sub
cld
sbb
and
aam
scas
in
and
sbb
mov
movsl
mov
shll
imul
mov
dec
dec
cmp
aad
sahf
jb
jge
cli
repz
jbe
imul
lret
cwtl
cmp
into
and
jecxz
popf
stos
cmp
fcomps
aas
push
push
and
lds
xchg
ret
mov
jne
popf
push
ret
pusha
test
cmp
xor
inc
dec
inc
inc
mov
pop
orl
jge
jns
jns
xchg
and
pop
js
in
into
fcomps
movsl
stc
add
cs
jb
stc
loopne
pop
mul
adcl
xlat
xchg
hlt
xor
mov
ficomps
stc
cli
mov
adc
int3
or
roll
idiv
lds
jle
push
add
push
push
sar
nop
jb
fdiv
push
gs
movsb
loope
movsb
mov
and
add
cmpsb
add
lods
fs
inc
add
push
mov
pusha
sahf
mov
sti
gs
lcall
and
gs
out
lock
adc
pop
js
cmp
das
out
xchg
pop
bound
jle
xchg
aaa
mov
dec
push
test
sar
push
adc
mov
pop
inc
xchg
adc
fwait
mov
dec
push
test
lods
jge
sbb
push
pop
das
pop
sbbb
fs
outsb
dec
popa
jbe
fimuls
cmc
or
stc
daa
xor
xchg
dec
jg
addb
movsl
xchg
jmp
sahf
outsl
ljmp
popl
mov
sbb
movsb
mov
cmpsb
sub
outsl
fs
or
ss
rorb
pop
fwait
push
movntq
out
addr16
adc
mov
inc
js
cld
popf
and
pop
sub
jne
movsb
lcall
loope
fdivrp
xchg
push
jmp
adc
leave
loop
dec
and
mov
leave
adc
daa
or
test
add
pushf
push
add
mov
add
push
mov
jno
lods
test
dec
jge
pop
mov
call
push
hlt
data16
xorb
mov
push
push
lods
mov
sub
scas
adc
test
add
push
pop
inc
or
in
pop
dec
push
push
les
or
roll
out
iret
mov
inc
push
fistl
data16
mov
mov
adc
sub
xchg
pop
in
out
andl
insb
cli
pop
inc
sbb
inc
mov
pop
xchg
testb
sahf
mov
mov
pop
shr
mov
jno
sbb
inc
stos
jno
adc
push
pop
xor
vmwrite
std
movsl
insl
fimuls
les
xor
or
in
mov
mov
jns
jl
je
inc
inc
popf
pop
push
pop
sub
loop
jae
loope
mov
es
stos
aad
stos
lahf
outsl
and
jmp
ja
xor
sbb
je
push
mov
and
stos
rcll
aas
cmp
adcb
aam
push
les
pop
mov
lret
dec
mov
cmp
and
inc
mov
mov
icebp
sub
orb
sarl
jge
cmp
outsb
fcmovbe
pop
test
add
jns
nop
pop
or
inc
sbb
xor
aam
int3
sar
cs
in
inc
fstpl
rcll
push
push
sbb
in
fmul
call
jo
mov
jle
add
and
add
xor
scas
std
mov
sahf
mov
fs
dec
jle
decl
leave
int3
pop
incl
sbb
addr16
movsl
in
add
sbb
dec
nop
jmp
cmp
push
lea
test
push
add
cmp
jae
push
adc
ret
mov
push
negl
xchg
pushf
xchg
jae
shlb
jmp
loopne
mov
dec
decl
scas
jge
imul
mov
fs
xchg
sub
xchg
or
scas
loope
cmpsl
cli
cs
aad
lret
cli
leave
popf
xchg
inc
jae
loop
mov
mov
dec
mov
lea
lret
adc
out
xchg
fwait
out
push
and
leave
cmp
jg
int3
je
sub
cmc
mov
or
jae
imul
push
subl
lret
addr16
pop
jecxz
popa
lea
sbb
shll
lds
int
push
adc
push
in
sbb
jo
push
inc
int3
push
sub
cmove
sub
xchg
stc
mov
out
loop
lods
fmul
push
jmp
sbb
push
cmpsl
add
test
loope
dec
push
aaa
jne
pop
jb
movsl
mov
inc
or
push
pop
mov
cmpsl
mov
ret
adc
pop
jmp
sbb
mov
adc
test
xchg
in
leave
in
test
lock
and
enter
lret
fdivrs
les
ret
adc
in
mov
fidivs
aas
imull
mov
adcb
repnz
and
pop
mov
mov
xchg
jp
mov
and
das
xchg
fsubrs
mov
clc
mov
rcll
daa
add
sub
xchg
lods
or
jbe
lods
test
mov
cltd
addr16
or
sbb
mov
jae
popl
jnp
ret
xor
sub
or
mov
outsb
xlat
into
dec
xor
mov
xor
jnp
scas
pop
clc
test
scas
push
movsl
mov
sbb
in
out
sub
push
ja
loope
push
mov
push
push
mov
add
dec
test
sbb
lret
sub
dec
inc
loope
lcall
jecxz
push
stc
inc
jne,pn
and
xor
repz
adc
add
shrb
sub
aaa
xchg
mov
orb
scas
mov
add
gs
sar
xchg
cmp
stc
pop
push
lcall
push
sub
cmc
les
push
stos
add
sub
ret
sahf
add
mov
mov
out
out
hlt
daa
gs
aad
iret
sbb
lret
xor
js
mov
cli
add
clc
pop
sbb
jmp
arpl
pop
loopne
cs
stc
std
ret
sbb
jmp
stc
sarl
aaa
adc
les
push
mov
inc
adcl
repz
push
or
inc
outsb
xor
push
add
fstps
add
fs
cmp
iret
ljmp
sub
xchg
loope
push
in
cmp
out
pop
out
sbbl
mov
push
loope
cmp
push
pop
push
jecxz
aas
fimull
rorb
dec
dec
push
subb
mov
out
and
sbb
aas
testl
push
ljmp
mull
rorl
sbb
fimull
or
push
mov
insb
ds
pop
insl
xlat
cmp
aas
push
xor
fwait
pushf
leave
adc
mov
roll
adc
das
insl
das
adc
rol
fwait
sbb
clc
xor
xor
stc
mov
fs
hlt
cmp
inc
xchg
mov
cmp
mov
mov
mov
pop
mov
pushf
fdiv
ljmp
cmp
mov
cmp
scas
or
adc
mov
push
xor
pop
xchg
out
mov
sbb
jp
mov
dec
outsb
sbb
ja
fcomps
int3
cwtl
icebp
jecxz
pop
xchg
adc
jnp
mov
mov
stos
fnstsw
push
lods
sub
bound
fstpl
je
arpl
push
add
popf
and
adc
push
sbb
push
inc
xor
loopne
mov
dec
jg
xchg
xchg
xor
aaa
xchg
sbb
outsb
cmp
xor
lods
setb
stc
add
or
inc
out
jecxz
shl
push
sub
js
inc
mov
cmpsb
popf
mov
xorl
and
or
cmp
mov
imul
inc
dec
iret
lahf
push
sarl
stos
sbb
lods
out
gs
xchg
adc
fisubrs
push
dec
push
or
adc
push
jle
out
mov
lods
jno
sbb
inc
ficoml
call
ret
repz
ds
and
fs
or
lret
lcall
out
mov
adc
imul
dec
and
inc
stc
fimull
imul
popf
jo
fistps
fidivs
xor
mov
pop
test
jbe
inc
fnstsw
std
mov
cmp
clc
pop
push
in
cs
dec
push
push
or
dec
add
addr16
popf
xchg
sbb
mov
rol
dec
fcmovbe
imul
ret
xchg
das
enter
in
xor
inc
sahf
pop
dec
pop
push
push
xlat
dec
mov
loope
ljmp
cmp
aaa
inc
dec
mov
test
aaa
add
je
fwait
rcrb
jmp
mov
or
mov
or
in
movsb
cwtl
xor
aad
movsl
push
ret
and
xchg
daa
pusha
xor
ret
int
cmpsb
xchg
push
sub
push
js
adc
mov
sub
inc
cli
mov
dec
arpl
mull
sub
inc
int3
mov
pop
outsl
mov
xor
loope
xchg
das
mov
or
ficoms
stos
jmp
push
adc
faddl
push
cmp
in
mov
in
lods
xor
loop
in
icebp
fcoml
stc
inc
xchg
data16
cwtl
push
test
je
das
fdivrl
or
add
xor
sbb
mov
push
jmp
mov
das
mov
mov
sub
sbb
fdivs
ljmp
inc
jb
shrb
cmpsb
sti
add
fistl
data16
mov
add
movsb
sub
gs
mov
sbb
aad
mov
mov
cmc
fs
xor
dec
sub
repnz
push
cld
xchg
xchg
aad
or
cltd
test
mov
test
add
sub
js
cmp
push
add
iret
add
fdivl
inc
jmp
out
push
aas
cld
dec
or
ds
xchg
daa
rcrl
mov
lea
adc
xor
mov
int
sub
push
sub
or
int
in
push
xor
cmp
inc
clc
jno
and
and
pop
or
cld
call
mov
movsb
and
ficomps
jecxz
loopne
scas
fcomip
popa
dec
fistps
loop
fcos
cmp
in
ror
movsb
jo
pop
xchg
pusha
leave
xchg
and
mov
inc
jns
ja
loope
mov
jg
mov
xchg
cmc
icebp
stos
loop
pop
leave
or
pop
push
mov
repz
adc
mov
aaa
inc
pop
ret
stos
adc
lcall
decb
xchg
push
cmp
and
imul
adc
mov
in
mov
cmc
xchg
push
pop
mov
sbb
lods
fnstenvs
adc
cld
pop
shrl
dec
hlt
jne
rol
add
js
ds
imul
mov
pop
arpl
int3
sarl
loop
xlat
mov
xchg
dec
xchg
clc
jg
insl
data16
adc
mov
lret
icebp
jo
fs
pusha
dec
push
xchg
cmc
mov
xchg
xchg
pop
adc
inc
cmp
and
outsb
add
les
xlat
sbb
shlb
push
out
and
pop
xorb
dec
pop
scas
xchg
xchg
jns
scas
and
cmp
test
mov
fldt
cmp
std
inc
cmpsl
insl
mov
pop
jns
arpl
mov
arpl
lds
fdivr
xchg
in
aas
sub
cs
das
sub
ud0
testb
xor
dec
addl
lss
push
sub
inc
nop
jge
adc
add
ret
add
pop
push
add
call
icebp
ret
pop
dec
bound
pop
adc
div
cmp
mov
js
dec
and
inc
push
jo
fisttpll
fists
add
cmovnp
out
cld
test
or
sub
popa
inc
xor
loopne
test
xlat
popa
clc
sbb
or
pusha
xor
jecxz
jmp
imul
sub
outsb
push
xor
ret
repnz
or
lea
lds
fiadds
cmp
mov
push
ljmp
mulb
jae
cli
clc
test
aas
mov
mov
xchg
lcall
sub
fwait
and
jle
test
in
cli
cmp
arpl
movsl
xchg
insb
adc
sahf
addr16
shlb
aas
pop
xchg
push
push
int
pushf
call
int
lcall
aad
jbe
push
imul
shll
test
test
stc
jb
iret
pop
int
or
sbb
aas
and
es
aaa
incl
cmp
call
inc
repz
xchg
ret
add
movsl
sub
imul
popa
in
cltd
xchg
daa
jp
pop
push
push
insb
lcall
mov
xchg
rclb
jmp
leave
test
movsl
jno
or
dec
mov
push
bound
ljmp
jnp
cli
mov
sbbl
mov
call
mov
jge
cs
jbe
inc
ja
pop
mov
jg
and
push
jl
in
sub
mov
stos
mov
jge
into
in
frstor
je
add
jecxz
shl
hlt
adc
stc
popf
xlat
fldcw
shr
into
mov
xor
lea
pusha
mov
mov
lods
rcr
mov
stc
pop
lret
push
xorl
std
ret
popf
std
jnp
or
flds
int
inc
xor
and
addl
fiadds
in
and
push
lods
xchg
push
xchg
fcoml
aam
push
cmp
cmpsl
aad
into
sub
sbb
lods
mov
sbb
pushf
push
mov
push
add
jp
xchg
lea
push
sbb
pusha
xor
cli
mov
jle
lcall
or
sbb
dec
dec
jg
jnp
add
fistps
xor
adc
add
inc
or
aas
push
push
push
in
push
pop
cmpsb
xor
adc
sub
fists
sahf
sbb
sbb
gs
insl
das
jnp
adc
jne
cmpsb
stos
inc
or
iret
dec
sub
lahf
lea
mov
std
iret
fnstcw
xchg
es
pop
cmp
push
ret
xchg
or
push
jne
inc
shrb
and
pushf
inc
subl
mov
fimuls
fists
out
inc
cli
sub
jp
push
or
cmp
les
mov
and
orb
scas
cwtl
pop
ljmp
inc
jg
xchg
inc
test
sub
lahf
out
movsb
mov
scas
mov
mov
and
in
addb
stos
icebp
fistps
icebp
ret
jne
lret
sub
movsb
aam
out
mov
cmp
mov
lcall
cld
stos
lea
add
add
cli
xchg
push
or
cmp
sbb
dec
jmp
xor
fsubs
pop
fldt
push
lcall
xor
int3
cltd
test
pop
inc
out
jo
push
or
jae
test
leave
xor
jae
mov
test
push
lret
and
fisttpll
push
or
adc
sub
or
xor
outsb
stos
mov
and
scas
pop
adc
mov
es
fs
dec
pop
add
movsb
enter
jle
jp
scas
jle
xor
push
daa
xchg
dec
es
xor
pop
pop
mov
jmp
cmp
fmuls
push
mov
jbe
cltd
or
movsl
int3
dec
fcmovu
orb
jb
divb
jb
xor
and
lds
pop
cmp
movsb
fdivrs
jge
cmp
xor
daa
cmovbe
ljmp
add
lock
add
loopne
adc
mov
mov
in
lds
jmp
adc
mov
stc
and
mov
cmc
pop
cmp
gs
shll
loope
xor
clc
sub
nop
cmp
cmp
cmp
addr16
pop
adc
xor
in
mov
data16
mov
xor
or
cmpsl
fs
dec
sbb
cmp
mov
aaa
bnd
lret
or
jl
das
dec
jno
mov
ja
xor
outsl
xlat
jb
mov
sahf
and
dec
loope
inc
js
adcb
and
lahf
mov
test
adc
fwait
cli
sub
icebp
inc
pop
adc
nop
pop
popa
lock
decb
loop
lret
and
mov
je
jbe
xor
mov
insb
sbb
fsubs
in
add
inc
dec
ret
sub
ret
mov
stos
push
mov
dec
leave
lcall
add
add
loope
ret
nop
cmp
aaa
sar
cli
xchg
xchg
xchg
or
frstor
pop
movsl
int
sbb
mov
daa
inc
into
into
ss
ja
clc
xchg
data16
xorl
inc
decb
ss
mov
movb
inc
and
lcall
add
xor
or
cmpsl
inc
and
cli
cmp
dec
out
mov
pop
xchg
mov
push
pop
cmc
add
mov
dec
popa
sub
or
in
out
popa
loope
dec
gs
subl
pop
inc
or
shrl
data16
xchg
leave
out
dec
xor
mov
dec
push
jb
xchg
xor
les
inc
mov
insb
int3
sbb
fstpt
sbb
out
bound
xor
adc
sub
ficoms
jge
mov
jno
in
mov
dec
roll
adc
jnp
cld
popa
ds
dec
pop
sub
movl
es
xchg
aam
aam
and
adc
adc
sub
cmpb
popf
sar
cmpsb
pop
mov
cmp
das
sbb
cmp
inc
jb
cli
add
pop
pop
jae
push
dec
fiadds
movzbl
mov
cld
js
mov
stos
sub
mov
and
inc
std
repz
mov
dec
and
jge
cmpsb
loopne
sbb
sbb
js
mov
loopne
subb
jno
xor
jl
incl
sbb
push
test
xchg
pop
cld
sbb
in
add
rclb
pop
dec
push
sarb
mov
push
inc
mov
es
es
popf
mov
mov
add
fs
mov
das
push
cli
cmp
lods
inc
std
lret
fs
fcoml
lret
aaa
movsb
mov
lahf
jg
sti
xor
ret
imul
and
and
sbb
mov
dec
cmp
mov
dec
in
inc
ss
jno
xor
sti
push
sbb
movsl
ljmp
int
leave
hlt
add
fcomi
mov
mov
leave
sub
int3
jo
rorb
fwait
sbb
mov
clc
int
call
xor
shrl
pop
pop
sub
mov
cmp
push
ljmp
pop
add
ljmp
negb
cmpsl
das
arpl
cld
subb
dec
in
and
lods
sub
add
outsl
shr
lret
call
mov
cmp
sub
jp
or
mov
or
repz
cmp
sbb
xchg
adc
push
pop
push
fadd
dec
clc
xor
repz
pop
in
xchg
aaa
leave
arpl
cmp
push
push
ret
imul
sahf
ficompl
jge
adc
out
push
pop
fcoms
cmp
dec
fs
aas
ds
push
clc
mov
loopne
fimull
pop
and
sub
xchg
xchg
sbb
fildl
aad
jno
push
xor
push
jge
repz
xor
cmp
mov
jle
xchg
inc
cs
pop
pop
loop
inc
cmp
mov
fmul
fadd
xchg
xchg
jmp
xchg
lds
leave
cltd
in
adc
jmp
sarl
aad
pushf
fs
jg
test
mov
inc
and
add
inc
btr
push
add
icebp
ret
cmp
pop
aaa
xor
dec
lds
push
outsl
outsl
pop
popf
xchg
and
dec
and
xor
and
ss
mov
xor
push
adc
int
xlat
enter
push
aaa
pop
mov
insl
repnz
or
cwtl
lret
addl
xor
xchg
js
sbb
mov
push
dec
cmp
cld
pop
mov
into
xor
es
mov
call
push
adcl
or
or
jnp
cmc
outsb
push
mov
inc
xchg
cmp
dec
mov
xchg
inc
std
loopne
lea
sbb
sub
xlat
mov
xchg
sarl
das
cld
mov
bound
pop
push
and
inc
jecxz
or
xor
xor
adc
test
add
lahf
jg
loop
ja
pop
in
mov
pop
jge
cmp
xor
cwtl
fimull
sarb
sub
lea
sbbl
repnz
adc
add
sbb
jbe
rcr
js
or
pop
mov
dec
mov
sbb
insl
push
push
cmp
or
xor
pop
cltd
imul
jle
dec
mov
pop
insb
inc
rcr
subb
lahf
fsubrl
and
inc
add
and
es
ljmp
mov
pop
mov
sti
or
shll
pop
cmp
andb
imul
popa
mov
rorl
jl
mov
stos
mov
aas
arpl
mov
cmc
pushf
jge
inc
inc
daa
cld
ds
sub
cmp
or
inc
push
mov
sahf
or
cwtl
lret
pop
pop
push
sbb
mov
push
sarb
jle
cli
cmp
jbe
insb
xor
ss
mov
cmp
xor
loope
rclb
or
and
mov
pop
mov
std
rcrb
mov
outsb
adc
mov
push
sbb
addb
mov
popf
lock
dec
xor
push
outsb
mov
push
add
push
or
cmpsb
jecxz
orl
mov
loop
adc
pop
jae
rcl
mov
inc
push
add
xchg
in
std
gs
fiadds
shlb
inc
in
mov
jo
pop
mov
sahf
ror
push
adc
jg
add
adc
sub
xorb
mov
xchg
add
or
xor
cmp
and
into
hlt
in
inc
daa
das
mov
fistps
hlt
cmp
xlat
ss
bound
mov
aam
sbb
iret
fldenv
mov
pop
jnp
jmp
out
mov
and
test
or
sar
or
fcmovne
out
jge
mov
insb
adc
movsb
mov
jno
push
bnd
insl
fists
idivb
push
cltd
adc
stc
syscall
adc
mov
loop
and
push
insl
or
sbb
sbb
jp
les
or
push
pushf
fistpll
jmp
jg
lahf
outsl
and
mov
push
int3
add
ret
xchg
pop
or
cmp
inc
dec
stos
loop
out
xor
out
xchg
cld
push
int3
mov
repz
cmp
fistpll
mov
cli
and
pop
lret
mov
inc
sub
cmp
and
and
mov
popa
nop
hlt
dec
ficoml
repz
fdivrl
jnp
stos
iret
xchg
scas
mov
jo
shr
std
stos
mov
cmp
sbb
mov
xchg
add
fidivl
lods
add
rcrl
cmpsl
in
add
xchg
imul
aas
push
out
sbb
sub
cmp
inc
sti
push
push
out
sbb
cmp
pop
jg
add
adc
or
mov
int
mov
call
loop
hlt
jo
mov
pop
leave
cmp
xchg
mov
jle
stos
fstps
ror
jp
shrb
es
inc
or
pop
jnp
sbb
lret
jae
xchg
cmc
cmp
loop
adc
xchg
into
lcall
pop
popa
inc
push
ljmp
adc
mov
push
mov
sub
mov
mov
xchg
psadbw
cwtl
imul
loopne
cld
sbb
addr16
jmp
dec
loopne
mov
arpl
push
dec
test
push
lret
mov
test
adc
addr16
xchg
and
mov
mov
call
fbstp
insl
sbb
jno
repnz
jo
or
adc
sbb
shll
push
dec
mov
cs
xor
adc
imul
xor
rclb
aaa
aaa
xchg
xlat
fisubs
inc
movl
inc
fwait
jecxz
push
daa
in
mov
push
jno
adc
push
push
out
mov
pop
cmp
sub
jl
push
shlb
jno
push
leave
push
lcall
cmp
sub
dec
mov
aam
or
xor
mov
aad
std
call
sti
mov
std
ficomps
xor
loope
out
or
push
std
loope
iret
and
xor
push
jl
mov
inc
mov
hlt
cltd
jno
dec
ss
andb
sub
mov
iret
addl
ret
jl
sti
xchg
or
inc
mov
ret
and
push
pop
pop
dec
inc
mov
push
cmc
rorl
dec
gs
cmp
imul
js
scas
cs
push
in
inc
movsl
scas
push
popa
sbb
lock
sub
inc
pop
inc
call
push
inc
cmpsb
xchg
aad
cmp
push
sub
insl
xchg
mov
arpl
stc
cmp
punpcklbw
xor
and
das
icebp
push
push
sbb
clc
adc
ds
xor
test
ss
mov
lcall
cs
call
add
jmp
ret
das
arpl
add
mov
xor
fsts
lock
in
ret
insb
int3
pop
mov
inc
imul
push
in
sub
jecxz
cwtl
dec
arpl
mov
inc
or
xor
data16
inc
in
inc
add
adc
mov
add
and
jl
xchg
gs
jecxz
inc
in
jno
test
fsts
or
lods
xchg
mov
jo
pushl
fldt
std
xchg
mov
add
jne
lcall
lahf
scas
fildll
xor
xor
in
add
jbe
test
in
hlt
sbb
jo
push
cmp
dec
sar
cmp
aam
cmp
das
icebp
repz
jae
stos
les
xchg
sub
dec
push
sarl
int3
xlat
ljmp
int3
shrl
repz
dec
xor
pop
cmpsl
mov
ret
mov
dec
xor
fimull
into
sbb
call
stos
into
sub
test
inc
mov
cmpsb
add
xor
mov
addr16
dec
or
inc
or
or
cmp
ljmp
leave
jo
jge
aas
movsb
enter
icebp
jae
andb
inc
fwait
aas
jne
xchg
xor
mov
fcmovbe
mov
jp
mov
push
and
stos
ret
xchg
inc
loope
mov
xchg
call
lods
es
out
aad
sub
push
js
ss
dec
push
adc
lea
push
hlt
bnd
cmpsl
push
sub
jne
popf
xor
sbb
adc
xchg
inc
cmp
dec
xchg
sbb
xchg
mov
cld
or
cli
or
rcl
movb
fmull
jmp
mov
in
into
mov
push
or
push
roll
lcall
cmp
inc
stc
dec
fisubs
and
mov
jne
jg
sbb
add
cld
shlb
repnz
mov
cmp
addb
and
jl
mov
gs
and
inc
pushf
push
in
imulb
scas
mull
sub
divl
push
mov
test
and
add
cmovle
mov
dec
mov
add
add
sti
push
cmp
cmc
stos
scas
in
lret
push
inc
cmp
loop
test
ret
cmp
js
bnd
mov
add
sbb
aaa
loop
test
push
mov
xchg
pop
lea
call
inc
pop
jg
icebp
data16
xchg
jl
cmp
jns
popa
repz
sub
xchg
jp
mov
add
roll
in
fistpl
fcmovnbe
push
dec
stos
sti
and
ficomps
in
clc
fldcw
ja
jle
aad
sbb
cli
xchg
int3
cmp
test
cmp
xchg
insb
mov
xchg
insl
mov
ret
popf
mov
movsl
stos
jmp
pop
pop
push
stc
pushf
in
js
lcall
lods
add
jne
dec
es
aaa
mov
cmp
rorl
fnclex
mov
movsb
mov
ljmp
pop
pushf
addl
lret
jae
xor
pop
push
or
dec
xor
mov
lret
sbb
jl
int3
pop
sub
mov
jp
fisttpl
adc
xor
xor
cs
js
inc
repz
incb
cmp
sbb
lcall
push
jns
xchg
mov
cmpsl
dec
divb
mov
sub
and
cmpsb
cmp
or
rol
cmp
std
test
leave
cmp
cmp
and
xchg
cmpsb
dec
sbb
ja
rclb
mov
mov
dec
fimuls
and
les
cmp
cmp
hlt
loop
inc
les
lahf
mov
push
sahf
arpl
test
stos
xchg
imul
je
cmp
add
sub
push
dec
lahf
cld
and
das
cmp
cmp
mov
push
aam
out
outsl
push
fidivrs
mov
dec
mov
outsl
inc
inc
mov
sbb
shrl
cwtl
jmp
push
push
xor
lods
rcrl
fs
lret
outsb
js
push
jne
jbe
sahf
push
dec
clc
ljmp
ljmp
js
add
gs
xchg
enter
pop
mov
popa
das
add
and
test
test
dec
cmc
push
xchg
jle
ds
or
fcoms
xchg
shlb
repnz
leave
nop
xchg
iret
pop
dec
scas
add
outsl
das
xor
xor
cmp
popa
pop
mov
cmpsb
adc
jae
mov
repnz
stc
inc
and
push
rorb
lock
into
jo
outsb
xor
mov
test
dec
sub
mov
dec
les
mov
pop
cmpsb
pop
fs
adc
pop
and
sti
test
cmp
cltd
and
scas
dec
in
movsl
mov
aas
or
fnstenv
das
dec
push
mov
mov
jnp
loopne
outsl
sub
mov
aad
cltd
addr16
push
mov
and
mov
and
mov
fstpt
inc
in
mov
dec
test
jnp
jae
les
out
mov
cltd
imul
lcall
stc
push
iret
push
sbb
lds
add
adc
ja
rclb
jge
ja
rcl
cmpsl
cmp
fbld
push
inc
shlb
sbb
pop
in
movsb
mov
mov
test
enter
add
jle
pusha
cmp
roll
movsl
add
jmp
mov
mov
adc
daa
jl
jae
outsb
lret
mov
testb
push
lahf
ficomps
xor
out
adc
add
sahf
cmp
sbb
inc
dec
rol
pop
push
xchg
jo
and
mov
pop
pop
push
jo
pop
dec
test
movsl
push
mov
enter
xchg
xchg
inc
fcompl
cmp
stos
divb
sbb
mov
push
mov
mov
mov
shll
lea
leave
add
push
mov
pop
aad
ja
rcll
adc
xor
decb
dec
popa
repz
outsl
adc
mov
insl
in
repz
lcall
insl
jo
adc
aam
inc
negb
lods
test
loop
xlat
sbb
pop
and
xor
or
fwait
in
sbb
cmpsl
pop
sub
sbb
jb
push
imul
and
aad
sub
inc
pop
adc
sub
dec
mov
scas
fidivrl
lcall
and
inc
aaa
or
fwait
dec
stos
push
jge
cmp
stos
notb
ss
fxch
mov
xchg
bound
mov
leave
mov
loop
test
add
stos
xor
nop
push
jge
pop
cli
jno
pop
je
outsl
call
pop
dec
das
or
sub
ss
pop
mov
imul
pop
jno
jae
fmuls
stos
mov
push
mov
sbb
movsb
or
repz
mov
mov
xchg
push
sbb
fistl
sub
in
aaa
daa
jne
cmp
fstpl
xor
sahf
out
xchg
hlt
std
cmp
insb
push
lds
cmpsb
in
sub
and
cmp
mov
mov
sbbb
daa
pop
dec
pop
inc
mov
cli
imul
adc
dec
and
xlat
scas
loop
cmpsb
iret
push
mov
lea
fwait
mov
add
lcall
mov
push
out
daa
popf
adc
inc
dec
movswl
jmp
aad
mov
pop
xlat
repnz
in
xor
push
xchg
fdivrl
repnz
xchg
sub
mov
stos
outsl
cmp
mov
movl
jge
mov
jnp
jecxz
cmp
mov
cs
pop
jg
sbb
or
outsl
lret
adc
andl
fdiv
rcll
sub
xchg
scas
or
and
sarb
in
pop
inc
add
or
jle
cld
cs
addr16
pop
call
lahf
lds
insb
gs
call
or
sub
loop
jmp
adc
lods
xchg
mov
or
xchg
jmp
mov
in
jge
in
pop
sub
xchg
mov
aaa
cltd
cmp
test
push
sub
mov
pop
fcmovnu
gs
aaa
gs
testb
scas
jecxz
data16
cmp
imul
movsl
lret
pushf
sbb
ret
jmp
jnp
sbb
jno
out
es
nop
mov
inc
cli
shl
cmc
add
cmp
pop
mov
mov
push
adc
stos
scas
dec
out
insl
movsl
cmpsl
inc
daa
cmp
fiadds
or
mov
sbb
sbb
push
xchg
add
push
mov
dec
insb
movsb
or
outsl
clc
xchg
cmp
xlat
ja
pop
gs
je
mov
addr16
dec
or
rcll
pop
jae
sbb
jmp
scas
adc
jmp
mov
in
imul
inc
add
xchg
dec
aas
int
rcll
cmp
mov
xor
or
cmp
sbb
ret
sahf
sub
aas
rorl
cltd
adc
adc
xor
lods
imul
std
aaa
popf
cmc
cmc
jno
inc
xchg
sahf
jb
jb
xchg
xor
ja
xchg
jns
sbbl
and
fs
dec
std
insb
out
cld
lock
loope
and
lcall
and
movsb
in
xchg
loopne
pop
cmp
inc
repz
pop
push
ret
pop
or
sub
movsb
pusha
into
jl
jp
sar
fidivl
arpl
mov
jnp
add
mov
mov
and
jecxz
inc
loope
nop
pop
sti
jmp
int
or
rcr
push
mov
sahf
xor
imul
in
iret
or
scas
scas
mov
cmpsb
xor
cmp
dec
pop
outsl
aas
sub
dec
xchg
orb
inc
inc
rcl
dec
stos
sbbb
pop
push
ja
mov
loop
fists
shll
xchg
mov
pop
add
adc
flds
mov
stos
fcmovnbe
daa
test
adc
mov
push
adc
and
call
leave
int3
push
push
scas
jne
pop
movsb
add
pop
xor
cli
dec
jmp
mov
cmp
xchg
shlb
or
test
aam
mov
cmc
leave
fldenv
inc
xchg
pop
sbb
add
das
cmp
cmp
and
add
jmp
movsb
aaa
and
data16
les
xchg
ss
repz
jmp
outsb
mov
push
lret
roll
push
or
es
sub
fcomip
add
dec
ret
aas
jns
jnp
xchg
lea
cli
pop
insb
divb
mov
or
mov
sbb
int3
add
cmp
add
hlt
gs
inc
imul
xor
pop
loopne
xchg
pop
pusha
add
jne
and
cmpsb
add
mov
push
dec
addb
lock
or
dec
xchg
jge
data16
test
fsubrp
pop
adc
inc
sti
popa
lea
mov
lahf
push
popf
xlat
or
iret
cli
into
in
mov
sub
jecxz
push
pop
fisubs
xchg
neg
lods
add
rclb
and
out
insb
mov
xchg
ret
into
fimull
ds
xchg
or
or
aas
insl
jge
jg
jge
push
xchg
shl
fs
mov
push
addr16
mov
into
jns
stos
cmp
lcall
sub
out
lods
sub
sbb
scas
push
adc
lahf
pushf
lcall
sbb
fucomi
mov
or
fmuls
mov
outsl
jb
inc
push
inc
out
cmp
push
fnstenv
ret
xor
cmpsb
das
add
cmc
xor
mov
inc
ja
lock
jae
insb
roll
mov
pand
fidivrs
insl
jno
push
mov
gs
mov
lahf
push
cmp
bound
popa
test
adc
adc
pop
jecxz
jecxz
and
into
mov
scas
addl
addr16
jns
in
cmpsl
aaa
mov
pop
mov
mov
dec
addl
int3
sar
inc
pop
push
ja
daa
push
sub
stos
pop
xchg
add
orb
es
movb
or
jl
sbb
sahf
xchg
out
pop
adc
xchg
push
test
cmp
cmp
xchg
lahf
mov
xchg
jne
push
out
jg
aaa
scas
enter
xor
sub
pop
pop
lret
pop
mov
sub
adc
sbb
das
les
cmp
xor
xchg
pop
fnstcw
pop
add
dec
and
lds
imul
and
sub
and
in
enter
outsl
mov
pop
std
test
negb
lret
call
cmpsb
mov
add
jns
pop
adc
fcoms
adc
inc
movsb
or
add
mov
xchg
jle
fwait
xchg
les
adc
sbbl
test
negb
xor
inc
dec
mov
mov
sub
add
add
adc
pop
pop
push
das
out
fwait
push
in
inc
rcrl
test
cltd
cli
jmp
cmp
daa
xor
push
add
inc
jge
std
sub
push
cmp
lahf
adc
push
iret
ror
jne
mov
inc
ja
sbb
clc
jmp
cwtl
pop
xor
shll
es
dec
fidivs
nop
sbbb
inc
inc
mov
mov
repnz
mov
mov
ljmp
leave
sub
inc
imul
mov
adc
mov
inc
dec
pop
push
mov
test
jp
cmpsb
sbb
call
lock
mov
cmp
and
push
sbb
imul
jb
jae
mov
cmpl
cli
mov
mov
xchg
pop
sub
icebp
sbb
push
mov
cmc
adc
or
mov
int3
fs
sahf
dec
sub
push
inc
jo
mov
lahf
mov
push
cld
es
jbe
inc
imul
test
insb
pop
dec
cmc
out
pop
ljmp
push
add
arpl
cmp
popf
scas
mov
push
ret
jae
std
xorl
ljmp
test
popf
testl
push
test
jl
subl
sub
hlt
pop
sub
adc
cmp
aam
mov
ror
cld
fdiv
clc
jns
test
mov
in
ss
call
test
rep
push
cli
dec
dec
jmp
scas
fdivs
mov
mov
rorl
stos
mov
mov
pop
out
cmpsl
cmp
add
scas
fmulp
xor
lret
mov
push
sbb
dec
jmp
push
leave
lea
arpl
cmp
lds
push
arpl
mov
xchg
jae
sbb
pop
push
add
and
jno
fucom
mov
ja
add
cmp
push
cli
outsb
inc
mov
pop
mov
sub
shl
inc
inc
push
daa
push
aas
aas
add
out
ljmp
and
push
out
jge
aam
int
lock
sub
inc
sub
mov
dec
or
ret
inc
push
mov
or
push
mov
test
or
pop
test
ja
std
sbb
xlat
mov
push
or
stos
jmp
lods
orl
lods
iret
cmpsl
pop
mov
xchg
add
push
lock
add
mov
enter
adc
lds
push
sbb
jecxz
cmp
push
into
mov
inc
mov
es
push
xrelease
or
jb
je
stos
aas
and
dec
mov
lods
mov
dec
cmp
jl
mov
aaa
daa
out
pop
add
stos
pop
xchg
ss
std
mov
inc
nop
rcr
mov
lods
mov
addr16
lds
test
pop
aaa
pop
and
jae
mov
and
mov
rcl
lock
push
fwait
xchg
mov
pop
fisttps
add
add
dec
ja
je
shlb
cmpsb
es
xor
push
or
cs
arpl
or
mov
add
or
repnz
xchg
mov
add
mov
adc
push
test
sub
push
imul
test
test
mov
push
ret
lcall
in
mov
int
icebp
xchg
or
push
ja
dec
rcll
testl
cltd
add
and
outsl
mov
jp
in
jp
jnp
lcall
push
sti
int3
dec
or
stos
or
popa
das
fs
shr
inc
mov
mov
shrl
mov
pop
lods
mov
and
mov
loop
sub
lods
shrl
mov
clc
jae
ret
inc
jo
in
scas
xchg
lods
inc
sub
add
aam
mov
arpl
sub
in
repnz
jg
jg
mov
fbstp
xor
adc
popa
and
xchg
and
jb
andl
xchg
xor
daa
push
rclb
das
mov
rcrl
test
clc
inc
push
pushf
push
cmp
lods
add
inc
ret
leave
dec
add
outsb
fs
fadd
in
lock
mov
xor
dec
mov
mov
outsl
add
and
mov
pop
mov
jns
out
pop
cwtl
cmp
and
iret
sub
lret
and
pop
push
cld
adc
andb
test
call
cmp
rcr
mul
aaa
jecxz
shr
repnz
xchg
mov
lods
insb
repnz
fwait
insl
pushf
inc
jnp
and
xor
inc
inc
push
mov
push
pop
adc
dec
add
push
or
int3
xor
aam
xor
popf
imul
jbe
add
stos
movsb
in
xchg
clc
lock
xlat
dec
leave
mov
sub
xor
fdivrl
pop
pop
movsl
jl
xchg
daa
sub
add
and
stos
mov
arpl
loope
test
rolb
stos
stc
push
dec
ret
out
mov
sbb
aam
movsl
inc
inc
sbb
test
or
xchg
pop
xor
jae
fisubrs
jl
cwtl
push
mov
push
repz
push
les
cmpsb
scas
loopne
sarb
js
cli
mov
cltd
es
sbb
repz
dec
iret
outsl
inc
rorb
add
hlt
inc
xchg
and
mov
push
cmp
jae
push
iret
das
lock
push
sub
js
push
test
cmpsb
sub
arpl
lds
cmc
jg
push
lret
repz
imul
mov
jnp
imul
mov
push
jl
inc
pusha
rcrb
inc
or
mov
pop
pushf
arpl
enter
clc
arpl
ret
adc
ret
scas
fcoms
mov
jmp
fs
mov
mov
rclb
sub
sub
mov
push
mov
cmc
arpl
mov
cmp
or
shlb
sarb
es
push
loopne
mov
pop
sub
xchg
popf
mov
jl
push
fildl
pop
nop
cmp
dec
xor
test
dec
outsl
pop
xor
subb
stos
xchg
sub
add
lock
xchg
mov
flds
xor
daa
ljmp
adc
int
push
jg
and
lea
mov
push
sub
push
inc
or
cmp
in
pop
leave
add
adc
shlb
jle
flds
cmp
lahf
pop
inc
inc
jge
lods
ljmp
je
jo
adc
mov
jae
int3
ret
or
psubsb
mov
ss
scas
das
mov
mov
push
fisubl
jo
fs
lret
jb
xor
jb
inc
pusha
outsl
popf
xor
adc
fidivl
and
ret
mov
ret
mov
imulb
out
fsubrl
hlt
popf
daa
mov
sub
sbb
icebp
inc
sbb
push
cmp
scas
xor
jle
fmul
lods
mov
scas
and
cmp
cmp
rcll
stos
jg
pushl
jo
pop
ljmp
xor
shlb
cld
out
aaa
and
enter
cmp
pusha
mov
sbb
lods
daa
mov
repz
push
leave
fs
pop
push
mov
mov
xlat
sbb
jecxz
test
loopnew
xor
inc
mov
imul
add
test
es
aas
xlat
jns
int
add
test
xor
lds
sbbl
jb
test
cmpb
push
insl
test
add
daa
adc
adc
icebp
xor
fwait
scas
dec
hlt
xor
fnsave
mov
xor
and
sub
sbbb
xchg
pusha
xor
mov
pop
repz
ret
sub
mov
in
add
mov
mov
std
sub
mulb
leave
outsb
or
or
jns
addr16
fisttpll
jmp
and
dec
jge
jge
mov
cmp
xlat
push
xor
fwait
mov
loopne
adc
jnp
ret
cmp
js
lods
arpl
int
push
popl
insb
mov
aaa
pop
popa
scas
in
aam
ret
iret
cmp
mov
adc
or
stos
mov
add
mov
das
jle
fldl
pop
mov
stos
stos
cmp
or
mov
enter
in
ljmp
in
out
fldt
stos
repz
or
lods
sbb
xor
out
push
xlat
f2xm1
push
xor
pushf
fldenv
pop
leave
cwtl
sbb
test
add
jo
negb
jbe
mov
lcall
cmpsl
xlat
pop
and
fcomi
and
rolb
add
mov
inc
xor
cmc
lods
add
sbb
push
mov
adc
inc
xchg
add
inc
ljmp
push
fistpll
lds
pop
inc
loop
adc
push
jne
add
test
movsl
fs
inc
ljmp
imul
mov
cmp
push
insl
mov
mov
jbe
push
sahf
pop
not
add
jo
daa
xchg
jge
cld
bound
and
jb
popa
inc
cmp
clc
jns
icebp
jo
mov
cmpsb
cmp
jne
repnz
jle
xor
aaa
test
push
outsl
scas
std
imul
jo
std
nop
mov
fstpt
jle
and
mov
sub
leave
ljmp
mov
lret
loopne
lret
lahf
mov
mov
and
call
fcoml
je
jp
aaa
sbb
js
xchg
rol
add
fidivs
jmp
xor
out
loope
outsb
add
cmpsl
and
fcoml
faddl
jo
and
std
or
pop
inc
inc
mov
jp
pop
sub
shlb
pusha
or
mov
leave
dec
sbb
or
loope
jmp
push
jp
jb
out
andb
add
or
jle
clc
dec
pusha
and
push
jnp
mov
xchg
out
inc
push
sbb
or
cwtl
js
iret
jle
andl
xchg
inc
shrb
xchg
stc
add
pushl
mov
ss
cmp
repz
call
xchg
jmp
sti
dec
repz
jo
lcall
pushf
enter
jb
pop
loopne
rolb
into
mov
popf
pop
sub
sub
dec
inc
lret
adc
dec
xor
sub
dec
addr16
jmp
sbb
int
lock
insl
scas
xchg
bnd
xor
push
and
add
sub
mov
dec
mov
push
in
add
push
pop
je
jl
sub
test
nop
aas
aam
xchg
mov
icebp
jp
daa
add
xchg
ds
push
jp
pop
xor
cld
sub
and
jge
xchg
sub
add
icebp
gs
aad
cmp
arpl
inc
xchg
jg
jnp
out
loope
pop
add
stc
in
add
iret
dec
cmp
cmpsb
inc
insl
lea
sbb
adc
das
push
mov
je
test
add
rcll
xor
dec
pusha
xchg
inc
outsl
or
enter
push
cmp
arpl
ret
pushf
cs
and
cmp
fcomps
subb
mov
rolb
pushf
pop
dec
test
mov
pushf
pop
gs
arpl
dec
xor
mov
xlat
adc
mov
xlat
and
mov
mov
movsl
pop
cmp
addr16
dec
sub
aas
pusha
fcmovb
inc
movsb
lea
jae
lcall
mov
xor
cmpsb
sub
mov
ljmp
std
popf
es
test
aad
sti
xchg
and
adc
mov
mov
cmp
aas
lcall
xchg
lock
push
arpl
cmc
pop
cmp
cwtl
add
ds
adc
loop
dec
push
push
xor
sbb
inc
sbb
xchg
add
fwait
mov
adc
mov
mov
cli
fs
test
mov
xor
fstps
push
and
jg
xchg
pop
call
ret
jge
cmp
sbb
ja
pop
loope
imul
xor
repz
pop
popf
jg
vpsravd
es
sar
pop
sub
cmp
rcrl
aad
and
xchg
lods
xchg
arpl
imul
xchg
push
add
sahf
pusha
test
cmp
fdivrl
mov
outsb
push
pop
inc
or
cmp
inc
lods
enter
mov
dec
cmpsl
inc
movsl
mov
and
mov
mov
insl
push
stos
xor
bswap
jne
packssdw
sti
mov
sahf
mov
or
push
pop
xor
je
cld
xchg
repz
in
xchg
mov
mov
sub
pop
xchg
aam
lahf
out
stc
pop
or
xor
enter
test
and
jg
mov
push
xor
jno
outsb
cmp
sarl
mov
shlb
filds
mov
call
pop
sbb
filds
hlt
ds
pop
out
shl
out
nop
bound
pop
jecxz
arpl
rorl
clc
sub
push
aad
or
push
sarb
int
repz
cltd
aad
and
inc
sbb
stos
pop
inc
or
frstor
push
add
jbe
pop
mov
bound
mov
add
cli
sbb
mul
sub
jle
pop
add
arpl
pop
mov
mov
dec
lret
test
jbe
aad
mov
pop
insb
sbb
xor
mov
xchg
sub
into
push
sub
jl
push
push
mov
jb
and
pusha
and
adc
pusha
jne
scas
sub
mov
das
aad
stos
lcall
lea
es
shll
sub
lcall
mov
inc
stc
add
mov
imul
mov
sub
xor
clc
out
nop
jge
mov
add
dec
dec
ljmp
lods
mov
js
fs
enter
call
lretw
call
lods
push
stc
lea
jne
cmpsl
mov
outsl
paddsb
lret
mov
rcll
sub
or
mov
mov
imul
rcl
lds
jns
aas
sub
es
cmp
addr16
or
js
jo
dec
xchg
aam
ds
xchg
int3
shll
sub
mov
pop
adc
fcmovbe
or
sbb
lret
xor
arpl
repz
stos
or
jmp
dec
mov
inc
dec
dec
xor
adc
sub
pop
jge
popf
cmpb
aad
fwait
icebp
jne
lcall
pop
icebp
mov
fisttps
arpl
gs
xchg
jp
mov
cmp
insl
xchg
cwtl
in
pop
mov
pop
sub
cld
adc
bound
pop
outsl
repz
mov
mov
and
rcrb
fcoml
jno
xor
inc
mov
gs
adc
inc
mov
int
test
jb
outsb
mov
inc
mov
shl
andb
mov
push
sbb
insb
dec
jmp
jecxz
cmc
rclb
loopne
in
pop
jbe
loop
mov
mov
aam
repz
bnd
cmpsl
sti
add
rclb
es
push
pop
std
jl
ljmp
pop
xlat
cmpsl
dec
add
lahf
sarl
dec
cmp
dec
xchg
imul
mov
dec
add
popf
repnz
into
inc
stc
jb
sahf
jl
faddl
rep
sub
push
test
ljmp
mov
movsb
int3
xchg
xchg
arpl
and
mov
adc
pop
xor
fcmovbe
mov
and
mov
hlt
lahf
mov
in
jmp
cli
xchg
push
cmp
clc
lcall
sbb
inc
sbbb
mov
jns
jge
push
sti
push
repnz
cmp
pop
sbb
mov
push
lcall
shlb
jnp
movsb
test
repnz
es
mov
aaa
mov
push
fsubrs
sbb
stos
push
into
lahf
leave
xorb
mov
dec
out
ret
les
mov
mov
sub
loop
pop
add
fisubrl
inc
jecxz
jl
in
sbb
pop
sbb
rcrl
add
jmp
inc
nop
xchg
ja
jbe
mov
xchg
jle
arpl
in
pop
fists
mov
stc
jmp
imul
fdivr
fnstenv
ficompl
dec
scas
vmovntps
stc
aas
cmp
les
sub
and
push
leave
int3
or
sbb
out
mov
push
ss
cwtl
loop
pop
sbb
cmovno
pop
xorb
lds
mov
inc
int
add
jns
movsl
loop
gs
xchg
popf
xchg
shrb
sub
push
inc
inc
mov
mov
sbb
adc
je
jmp
ud0
dec
dec
stos
cwtl
daa
sbb
dec
out
mov
lret
aam
xchg
jne
dec
dec
sbb
xchg
sub
dec
fmull
mov
bsr
push
scas
dec
sbb
xchg
mov
fnstenv
dec
lods
data16
aam
push
outsb
inc
pop
jecxz
in
scas
mov
in
outsb
adc
int3
mov
fs
dec
mov
out
or
aas
or
es
add
mov
sbb
ljmp
ljmp
pop
pop
loopne
leave
dec
inc
cmp
cmovae
mov
ljmp
push
cs
xchg
sub
sbb
xor
jno
xchg
or
push
xchg
in
push
fnstcw
mov
jl
shrb
mov
or
pop
xor
mov
push
dec
lods
popa
pop
int3
push
std
add
leave
mov
mov
mov
int
inc
add
sub
xor
jg
ja
inc
lcall
add
ret
add
cmpl
out
cltd
sbb
sti
add
ss
cmpsl
call
cltd
push
sub
jns
mov
pop
jg
arpl
sti
popa
pop
xorb
rol
cld
add
leave
test
adc
or
lock
mov
pop
xchg
add
mov
sbb
cmp
jbe
pushf
cmp
push
cmp
fbstp
adc
loope
mov
sbb
cmp
mov
dec
notl
dec
pop
iret
and
push
mov
pop
xor
xchg
jg
push
inc
test
out
mov
mov
xor
xchg
jg
in
mov
dec
mov
loopne
movl
xchg
jp
push
mov
out
mov
sub
or
mov
ss
xchg
dec
xor
cli
mov
aam
add
mov
push
add
inc
shll
cwtl
ja
scas
sbb
push
lods
out
sbb
cwtl
fidivrs
js
insb
std
lahf
cwtl
sbb
aad
loop
dec
rcrb
pushf
mov
mov
shrb
lret
iret
rol
hlt
or
cmp
dec
pusha
mov
aaa
sub
outsl
xchg
jae
enter
out
sub
popa
xchg
ret
std
call
lret
jb
fldenv
dec
das
loopne
sbb
mov
hlt
push
adc
scas
and
addr16
stos
xchg
push
lods
cmpsl
lcallw
popf
cmc
pop
pusha
mov
mul
cmp
push
rcl
xchg
xor
mov
in
sbb
adc
outsl
jp
fstpt
push
loop
lcall
popa
push
mov
push
push
aas
add
and
lret
push
or
mov
or
ss
ret
lods
icebp
or
xchg
push
pushf
int3
mov
push
flds
shr
adc
cmp
mov
fwait
ret
mov
std
cwtl
shlb
mov
pop
mov
or
sti
test
ljmp
push
lods
xacquire
in
pop
or
cmp
call
out
lock
es
dec
ret
movsb
sti
jae
cmc
scas
leave
sbb
mov
cmp
add
adc
loopne
xor
xor
aas
mov
loop
inc
out
jae
insb
ds
or
cmp
mov
scas
test
test
push
mov
cmp
sub
jmp
lods
lret
mov
dec
sti
adcb
or
inc
inc
lcall
inc
cwtl
fidivs
mov
xor
daa
std
cld
mov
mov
ja
sub
fists
pusha
add
mov
gs
sarb
dec
mov
add
sub
and
js
pop
repnz
iret
pop
je
or
sub
lds
loope
fs
fbld
xchg
and
sti
inc
pushf
push
or
or
outsb
lds
out
rorb
push
and
dec
dec
leave
scas
adc
jno
xchg
test
add
xchg
pop
dec
push
push
cmp
xorl
jae
mov
mov
decl
push
sub
cltd
mov
mov
xor
test
add
out
into
pusha
cmp
nop
sbb
sbb
or
add
sub
mov
lods
shl
loopne
fs
popa
shlb
addr16
icebp
push
fnstsw
sub
jns
xchg
adc
mov
pop
in
push
aad
sbb
xchg
imull
adc
jmp
leave
pop
decb
add
fcoms
int
pop
inc
mov
adc
or
faddl
fists
aad
or
push
mov
add
movsl
adc
mov
popa
jge
aam
je
mov
shrb
daa
inc
sbb
push
das
cmp
xor
adc
jb
insb
lahf
mov
pushf
cltd
pusha
lods
insb
xchg
and
xor
movsb
xor
cltd
cmpsb
movsl
lret
lret
push
lea
xchg
pop
sahf
mov
aam
dec
pushf
loopne
data16
dec
adc
aam
scas
hlt
inc
xchg
xor
dec
lds
rol
inc
stos
movsb
in
gs
add
xlat
mov
pop
pop
stos
xor
adc
ljmp
pshufd
das
mov
inc
orb
mov
iret
arpl
lds
pop
adc
cmp
jp
adc
mov
jns
cs
sar
xor
pop
sbb
or
sahf
mov
cmp
xor
call
mov
lock
push
mov
jmp
cmp
or
jge
mov
icebp
jb
dec
out
pop
aaa
jge
rcll
mov
mov
arpl
dec
ljmp
sub
xchg
mov
and
gs
jns
gs
or
das
cmpsb
pop
inc
sbb
or
jbe
dec
inc
lahf
popf
loop
std
sub
pop
out
jne
test
or
adc
add
incb
imulb
jp
jmp
xchg
pop
xor
cwtl
inc
xor
xor
xorb
mov
pop
mov
sbb
push
dec
hlt
es
flds
xchg
insb
sbb
lea
push
fwait
outsl
xor
xchg
pop
lea
hlt
sub
ds
lret
sbb
movsl
ret
mul
push
and
pop
push
jl
xor
orb
xor
cmp
ret
iret
jbe
mov
out
lock
mov
push
test
xlat
or
je
loope
aad
pop
addr16
out
mov
add
pop
nop
icebp
pop
xor
xchg
or
imul
or
jns
mov
add
pop
mov
dec
jno
ss
jbe
ret
adc
mov
xlat
xor
lds
out
and
push
push
inc
xchg
mov
add
out
lea
push
mov
in
push
rcl
sub
xchg
jge
and
das
sub
mov
lret
push
les
in
mov
xchg
mov
lahf
mov
xor
ja
cwtl
pop
stc
les
mov
sbb
mov
push
and
cs
push
dec
sbb
jecxz
sbb
mov
inc
inc
xchg
arpl
stos
outsb
or
sar
into
rcrl
inc
ret
aad
ret
mov
pop
xchg
imul
and
mov
fcomps
test
aam
test
jge
jge
js
sub
or
orb
stc
fcomp
xor
add
dec
test
call
cmp
shl
out
push
push
push
repnz
stc
test
out
idiv
sbb
je
test
aad
loop
daa
lds
mov
test
mov
push
xchg
xchg
daa
jns
aas
sub
jecxz
push
mov
ds
test
push
dec
stos
xchg
mov
xchg
jne
pop
inc
jmp
jecxz
add
gs
sbb
sbb
imul
sbb
jne
insb
icebp
adc
fst
sub
hlt
push
jle
out
popf
std
test
data16
push
dec
cld
add
push
dec
and
mov
scas
pop
jp
inc
pop
imul
in
rorl
addl
sbb
push
sub
int3
pop
cmp
pusha
mov
mov
adc
or
loope
mov
xor
aas
sti
sti
mov
pushf
daa
insl
scas
or
cmc
in
or
and
mov
dec
cmp
and
xchg
ja,pn
sbb
bound
mov
ds
es
movsl
pop
in
jne
xor
pushf
dec
and
in
sti
adc
mov
add
xor
fistps
pop
xor
cmc
and
add
mov
notb
xlat
jb
mov
dec
pop
xor
and
sahf
mov
and
movsl
xor
and
xor
dec
lods
andb
jne
and
in
adc
and
scas
es
aam
in
jmp
scas
push
les
sub
or
push
push
xchg
push
cli
inc
inc
int
pop
dec
pop
aam
fs
jae
popa
dec
cwtl
sub
push
or
jne
stos
stos
sub
shll
push
inc
imull
outsl
cli
outsl
xchg
lahf
andb
loopne
pushf
jmp
fbld
mov
pop
xchg
pop
outsl
fisttpl
or
push
or
mov
cmp
fists
sub
mov
dec
add
mov
outsl
call
dec
and
dec
nop
clc
and
push
inc
jge
mov
pop
sbb
xchg
mov
or
or
cmp
or
jb
push
test
hlt
mov
cmpsb
xchg
sahf
movsb
pop
mov
sub
cs
mov
sub
hlt
inc
int3
jo
jmp
ja
mov
mov
add
push
pop
icebp
cmp
lods
rorb
stos
bound
push
add
pop
lods
lock
ss
lods
in
imul
push
cmp
mov
pop
aam
int
sarl
adc
push
or
outsb
pop
mov
icebp
mov
adc
dec
push
sbb
shl
adc
xor
inc
aad
mov
enter
mov
mov
dec
cmp
mov
pop
nop
mov
inc
push
out
mov
cld
int
ljmp
mov
push
out
cmp
jecxz
pop
mov
cltd
xchg
cmpsb
mov
fldcw
gs
dec
ss
lret
testl
int3
pushf
data16
cs
in
or
dec
std
pusha
pop
aam
orl
mov
push
das
add
fmul
sahf
mov
movsl
pop
push
fnstcw
adc
adc
add
test
std
xchg
sarb
xchg
aaa
sub
cmp
mov
and
dec
outsl
mov
js
pop
enter
lea
push
imul
sub
ret
push
and
in
sub
jge
out
inc
shrl
gs
pusha
push
aaa
mov
test
sbb
sbb
mov
mov
stc
ds
xchg
xor
xchg
sub
sbb
and
ss
xor
sbb
xorl
and
loop
mov
sub
and
or
aas
inc
rcrl
bound
xor
add
push
sub
pop
mov
xchg
adc
sub
jb
rclb
xorb
adc
inc
adcl
push
push
adc
jp
pop
sbb
ja
adc
pop
aaa
jbe
jns
cwtl
clc
jae
sbb
std
cmp
shr
or
shr
mov
mov
push
push
xchg
jg
iret
cmp
popa
mov
test
into
mov
mov
lea
out
fisttpl
out
out
sub
mov
sbb
dec
inc
mov
js
mov
iret
and
jl
ss
push
sub
outsb
xor
jno
gs
fldenv
cmpsb
shl
dec
fcmovb
and
cld
xor
jmp
aas
pop
scas
push
cmpsb
dec
lcall
mov
adc
mov
and
inc
ja
bound
adc
fisubrs
cmc
cltd
cld
and
add
dec
cmpsb
repnz
pop
mov
out
iret
pop
mov
test
out
xchg
enter
push
push
inc
in
cmp
rolb
xor
icebp
add
and
push
gs
cmp
shll
imul
push
scas
push
cmp
xchg
in
enter
flds
loop
imul
outsl
jbe
mov
pusha
or
ucomiss
call
push
ret
add
insb
aas
mov
mov
out
ret
clc
jbe
ljmp
sar
ss
jecxz
test
pop
cmc
movsl
pop
mov
nop
or
xchg
xchg
jle
scas
dec
fnsave
push
cmp
out
retw
out
pop
jmp
je
mov
ljmp
rclb
out
decb
mov
or
lret
or
push
ret
or
pushl
mov
or
push
mov
push
in
stos
test
xor
decb
daa
cs
jmp
dec
jl
add
mov
sbb
stos
inc
js
call
inc
pop
or
lcall
xchg
cld
fxch
jnp
hlt
xchg
aas
sahf
mov
jae
in
cmp
inc
cmc
push
cltd
sbb
mov
rcrl
out
cwtl
incl
sahf
push
push
sbb
cwtl
jns
sbb
shrl
xor
xor
inc
mov
push
mov
add
imul
xchg
sbb
ja
jo
adc
fwait
dec
mov
fadds
pop
push
scas
inc
sub
out
and
pop
inc
test
sbb
loopne
sub
dec
pop
test
xchg
or
sub
mov
mov
int
hlt
adc
pop
mov
pop
sbb
inc
inc
jns
jne
and
mov
mov
cmp
jg
inc
das
lahf
sub
push
sbb
fisttpll
mov
mov
sbb
push
sbb
mov
mov
adc
push
cmpl
fcompl
pop
orb
adc
ret
jns
adc
or
pop
mov
dec
pop
or
mov
jne
fs
or
addl
fwait
xor
filds
add
mov
pop
sbb
and
lds
inc
test
adc
cmpb
aam
mov
arpl
iret
jo
in
xor
cmp
out
cmpsl
sbb
add
pop
fmul
shlb
sub
fwait
sbb
sbb
dec
frstor
inc
xor
sub
xor
insb
std
push
cmp
pop
add
stc
mov
lret
sub
mov
xor
imul
pop
inc
sub
pop
jl
cmp
shl
notl
enter
loope
loope
pop
jecxz
adc
add
jl
add
sbb
movsb
daa
int
scas
jmp
test
decl
adc
aas
sub
sbb
or
insl
and
cld
ja
stos
lret
inc
jmp
jg
inc
and
test
xor
push
and
xor
cmp
shlb
inc
lahf
jo
add
scas
mov
lods
mov
pop
mov
ss
mov
ds
test
jmp
inc
push
rcll
jge
push
nop
loope
mov
inc
mov
sbb
dec
stos
sub
cwtl
push
mov
aam
cmp
jge
add
push
push
sarl
pop
fsubrl
jecxz
clc
dec
cmp
xchg
or
xor
xchg
mov
lods
mov
les
enter
push
outsl
dec
adc
jp
mov
movsb
add
xchg
xor
imul
rclb
xor
jecxz
in
sbb
jo,pn
push
push
iret
add
and
movsb
push
sahf
in
inc
cmc
cmp
lret
mov
mov
iret
ret
cld
pushf
or
jns
stos
cmc
pop
push
sub
lss
adc
inc
fildl
andl
dec
lahf
int
movsb
or
jl
sub
push
push
or
aaa
enter
mov
mov
loopne
ficoml
xor
jnp
stos
jne
inc
les
ss
es
xchg
adc
cmpsb
je
outsb
cmpsl
push
sub
jo
mov
sub
mov
adc
or
adc
lahf
dec
mov
xor
dec
fnsave
fdivs
xchg
in
pop
push
jg
out
jns
jge
cmc
sub
fildll
stos
add
xor
xor
mov
push
js
in
and
movb
jnp
pop
popa
cmovo
pop
clc
xor
fimull
jae
inc
inc
pop
fwait
cld
xchg
dec
inc
sbb
fdivl
loop
leave
xor
cmpb
outsb
call
push
mov
cmpsl
repnz
aam
leave
ss
jl
pop
inc
cmp
repnz
lods
mov
mov
mov
cmp
pop
rcr
rclb
jle
or
mov
adc
jg
mov
add
mov
icebp
scas
or
out
icebp
std
mov
mov
ss
movsl
insl
push
sti
sbb
sub
mov
sub
subb
dec
sti
je
imul
mov
add
cltd
mov
push
dec
dec
jo
or
sbbb
xor
rcrl
jmp
jbe
shrl
xchg
adc
mov
outsb
push
cmp
dec
sti
lahf
sti
in
mov
imul
add
out
jmp
jnp
mov
imul
or
cs
jl
or
push
repz
pop
shll
mov
inc
fld
arpl
dec
add
mov
je
movsb
sbb
jnp
fwait
out
movsb
insb
dec
in
enter
mov
dec
jae
xor
icebp
lret
mov
clc
add
movsl
pop
and
ficoml
lea
jne
jo,pt
arpl
add
ljmp
mov
mov
xchg
bound
hlt
cld
test
ljmp
out
lods
repz
in
mov
movsl
pop
and
cmp
cmp
sbbl
lcall
sbb
pop
mov
sub
sbb
push
lods
xor
xor
push
cli
dec
nop
rorb
sbb
jle
xchg
sbb
dec
imul
loope
into
mov
xor
shll
mov
xorl
xor
divb
push
push
imul
pop
bound
es
fstpt
push
sbb
rcll
adc
and
sub
push
dec
mov
scas
mov
mov
sbb
push
sbb
and
pushf
jl
and
mov
mov
cmpsb
ret
mov
inc
stc
adc
and
outsb
cmp
push
inc
push
fstpl
xor
ret
mov
add
mov
sub
adc
sub
loopne
mov
lock
sbb
push
pop
inc
lret
or
and
and
ret
iret
mov
fiaddl
cld
sarl
mov
test
sbb
test
rcl
test
insb
gs
je
add
jno
mov
xchg
sbb
inc
jmp
xor
push
cmpsl
inc
add
cmc
aaa
stc
lods
ror
test
inc
jno
xchg
ja
lods
push
inc
mov
lahf
rclb
sarb
adc
add
pop
pusha
sub
sbb
js
pop
test
push
mov
out
pop
xor
jecxz
dec
fdivrl
pop
xor
cwtl
xor
stc
or
in
repz
sub
push
or
push
sbb
mov
adc
ret
cmp
push
ss
js
and
in
lcall
dec
pop
mov
out
inc
mov
or
cmp
pop
ljmp
mov
cmp
push
ficoml
test
pop
and
and
dec
cmc
cld
push
add
xlat
mov
mov
loop
cmpsl
pop
cwtl
fsub
mov
inc
ret
xor
mov
incl
mov
mov
pop
sti
ret
dec
dec
or
sbb
arpl
jl
int3
int
hlt
rcl
data16
sbb
and
frstor
repz
and
imul
in
and
add
repz
repz
sub
ficompl
mov
clc
push
sub
or
popa
es
xchg
sbb
dec
mov
push
adc
xchg
mov
mov
call
jae
arpl
lods
scas
out
into
add
sbb
pushf
dec
sbbb
sub
sub
add
or
mov
es
xchg
mov
pop
xchg
and
push
jl
pop
bound
lock
outsl
or
scas
mov
sub
fbstp
xchg
pop
stos
xchg
data16
repnz
cli
xchg
and
or
jp
mov
jno
jne
sti
mov
dec
lods
subb
or
dec
push
mov
mov
push
into
push
insl
cmp
jmp
pop
pop
lret
int3
jp
into
jg
loopne
sub
test
pushl
cmc
add
test
push
dec
fsubrl
cmp
push
inc
jmp
outsb
pop
sub
into
test
insl
jae
outsl
fucom
push
pop
mov
fistl
cmp
mov
fcmovnb
aas
lods
ja
adc
mov
mov
jmp
pop
push
stos
xor
jns
sbb
or
lock
mov
sub
xlat
imul
or
dec
dec
adc
out
sti
mov
les
pop
xor
fnstenv
add
out
xchg
lods
xchg
inc
lods
sahf
xor
out
fucom
dec
xor
aas
pop
dec
imul
xor
int
and
jle
ja
mov
filds
gs
mov
inc
xchg
push
aam
stc
repz
rcrb
rcrl
scas
movsl
jge
mov
lcall
pop
in
cli
jo
cmp
jmp
pop
jg
fcomi
dec
add
lods
xor
clc
inc
cmp
sub
inc
clc
inc
test
mov
repz
push
cmp
cmp
push
mov
lcall
fnstsw
incb
je
fwait
cld
xchg
jb
xchg
add
lret
sub
jmp
adc
sbb
stos
mov
in
subl
mov
sbb
sbb
inc
movsl
mov
shrl
cmpsl
sbb
and
pop
xchg
cmp
or
dec
cmp
inc
call
jae
dec
aam
mov
mov
and
jl
sbb
shll
xchg
mov
xchg
into
xor
lahf
and
rol
push
das
loop
xchg
inc
lock
fiaddl
sub
daa
in
fs
outsb
jmp
std
pop
jne
mov
mov
negb
pop
loop
fidivrs
mov
iret
stos
test
out
dec
dec
or
ljmp
push
add
mov
mov
test
test
cmpsb
loope
xor
sbb
out
mov
push
xchg
fdivrp
data16
push
icebp
mov
movsl
ret
xchg
fstpt
add
adc
and
sar
pop
cmpsb
test
sbb
lahf
mov
sbbb
mov
ljmp
sti
mov
pop
cwtl
imulb
cmc
fsubrs
mov
fbstp
jo
in
xor
or
shrb
mov
sub
inc
loop
jge
pushf
fiadds
mov
or
push
pop
cwtl
and
out
xor
sbb
mov
daa
fsts
mov
mov
xchg
pop
xor
orl
andl
jmp
aas
pop
aad
aam
rcrb
adc
aad
lods
insl
mov
dec
and
cwtl
jmp
push
in
sbb
and
imul
loop
pop
leave
in
jb
adc
mov
pop
adc
and
out
pop
clc
lock
ljmp
jp
lret
cmp
jne
mov
xchg
jge
jmp
inc
pushf
fisttpl
insl
sub
adc
scas
and
out
push
dec
repz
push
jle
pop
or
mov
scas
push
mov
push
push
jbe
cld
cs
dec
dec
cli
cmpsb
movsb
mov
test
inc
sbb
sub
cmpsb
loopne
xchg
repnz
mov
subb
imul
sub
popf
xor
and
fnsave
movsl
js
push
es
push
mov
jecxz
cmp
inc
sti
inc
mov
xorb
xor
cmpsb
mov
cwtl
add
cli
lea
push
sub
fwait
xor
sbb
out
pop
push
jecxz
loope
fisubrs
cmp
sbb
pop
nop
test
filds
push
pop
pusha
in
pop
sbb
movsb
cmp
push
stc
jbe
xchg
cltd
ud2
loopne
mov
aaa
in
fdivs
stos
push
shrl
cmp
adc
pop
lret
mov
call
or
pop
sub
int
adcb
fs
jno
insb
mov
lds
and
repnz
adc
sub
cmp
inc
mulb
mov
repz
adc
outsb
imul
jge
js
pushf
sti
arpl
div
adc
ss
jmp
sbbb
testb
rol
sbb
arpl
repz
and
scas
and
sub
mov
sbb
sub
xor
cmp
pop
push
push
push
mov
fists
push
xchg
fucomip
xchg
stos
dec
icebp
xor
adc
mov
shrl
and
cmp
fldenv
icebp
mov
popf
popf
dec
call
cmp
rorl
gs
push
xor
inc
test
xor
rcr
into
mov
sti
push
and
inc
xchg
adcl
xor
inc
movsl
shrl
xchg
or
arpl
inc
mov
das
das
jbe
ja
jmp
and
xor
int3
add
cmp
dec
xchg
and
and
data16
adcb
loope
push
stos
pop
pop
hlt
nop
jle
addb
and
out
test
inc
push
call
icebp
pop
xchg
dec
ficompl
js
mov
jge
push
cmpsl
and
fnstcw
out
dec
add
mov
sbb
lahf
inc
fsts
cltd
mov
xor
lret
loop
addb
jg
push
out
daa
mov
and
lea
cmp
mov
push
ret
push
or
mov
sbb
xchg
cwtl
sbb
in
fucomi
fimuls
inc
or
jno
addr16
jne
arpl
sbb
fadd
add
jbe
mov
ret
xchg
ss
test
cmpsb
pop
decl
cmp
sbb
fs
mov
rcrl
mov
xchg
arpl
xor
insb
cltd
and
and
dec
sub
or
clc
jecxz
adc
pop
jbe
bound
bound
jae
and
mov
das
fbstp
push
lahf
insb
push
mov
sbb
cwtl
add
fdivrl
sub
pop
and
mov
add
sub
jmp
jp
sbb
inc
jne
add
sub
dec
add
push
lret
jecxz
cs
lcall
dec
dec
push
push
popa
pop
mov
mov
dec
mov
or
xchg
mov
jne
jo
sbb
loop
mov
pusha
cmpsl
rcll
xor
popa
repnz
push
cmp
xor
test
repnz
push
enter
out
sahf
mov
mov
sbb
pop
add
jnp
mov
cmpsl
orl
sbb
out
loop
push
in
es
ror
loop
or
fadds
mov
fsubl
push
xchg
dec
pop
jae
stos
lcall
outsb
aas
movsl
mul
jns
adc
lret
shrb
inc
and
xor
mov
mov
lods
outsl
and
inc
cmpb
jnp
mov
or
pop
or
out
cmpsb
out
cld
std
je
mov
and
stc
mov
call
test
pushf
dec
cmpsb
xor
push
popa
xor
int
jne
movsl
nop
popa
movsb
xor
and
lret
arpl
jecxz
xchg
inc
push
outsb
or
inc
out
dec
enter
sbb
add
cmp
movq
jno
mov
or
xor
aad
shlb
lcall
xor
ret
jbe
ljmp
push
ja
lahf
nop
test
cs
push
rcrl
call
int
je
adc
jecxz
mov
and
mov
outsl
add
and
sub
movsb
xor
and
lock
mov
idivb
pusha
cld
sub
imul
imul
push
sarb
add
popf
adc
stos
mov
push
sarb
arpl
movsl
shll
daa
loopne
xchg
pusha
mov
das
cmpsl
aas
das
xor
inc
repz
movsb
nop
addr16
xchg
fs
sti
jae
pop
jp
cmpsb
inc
jmp
push
mov
mov
xchg
cs
pop
sub
jae
lret
nop
mov
pop
fcmovnb
les
popl
popa
sub
jo
cmp
push
or
cs
push
incb
and
stos
jl
ljmp
dec
mov
hlt
icebp
mov
jmp
lods
pop
aad
in
lret
adc
add
sbb
bound
call
jecxz
clc
mov
movsb
mov
push
pushf
xchg
jne
and
aaa
ret
cmp
testl
shl
enter
xor
jns
cld
bound
faddl
mov
stos
push
andb
into
mov
test
stos
in
fidivrs
jne
dec
je
sbb
mov
ljmp
dec
cmpsb
lcall
outsb
in
xchg
ss
dec
add
jecxz
jb
inc
xchg
loop
out
aaa
xor
dec
mov
fsub
push
mov
rcll
pop
push
sbb
icebp
shll
add
mov
shrb
out
inc
inc
mov
icebp
fdivrs
xor
adc
jae
xor
add
shlb
lcall
cltd
std
or
xchg
fwait
mov
push
jns
pop
push
stos
push
xorb
insl
mov
call
movsb
jno
fdivl
es
adc
repz
movsl
dec
ss
fnstenv
xor
pushf
or
fnstenv
or
pop
mov
cltd
push
pop
mov
xlat
clc
mov
pop
push
pop
xchg
xchg
sub
arpl
inc
arpl
sar
ss
mov
gs
mov
sub
aas
sbb
test
pop
xchg
daa
mov
push
sahf
repz
shrb
mov
pushf
lret
clc
xor
cld
je
cmpl
jg
bound
mov
imul
sarl
jno
xor
pop
arpl
cmp
cmp
fadds
sbb
push
adc
lret
jg
add
mov
cmp
in
orl
insb
mov
sti
mov
fsubrp
out
sbb
mov
push
loope
pusha
js
test
test
dec
je
pushf
adc
mov
xlat
xchg
out
pop
aas
cs
daa
sub
test
dec
in
mov
sub
fstpl
xchg
push
pop
mov
xor
add
bound
dec
cmp
pusha
jg
cld
mov
push
cmpsl
xchg
fnstsw
incb
ret
sub
push
mov
outsb
xchg
pop
pop
dec
dec
out
roll
fidivrl
mov
mov
int3
add
mov
xlat
cli
cs
in
out
mov
mov
cltd
enter
xor
mov
icebp
xchg
xor
xor
sarb
mov
add
out
pop
push
cmp
out
mov
sub
sbb
jl
jno
xlat
outsb
or
mov
or
pushf
out
adc
ja
int3
std
pop
lcall
imul
js
arpl
jge
add
inc
inc
divb
xor
jp
xor
xchg
inc
mov
jmp
dec
jmp
push
jp
fistpl
es
mov
fldcw
mov
or
movsb
push
add
mov
inc
stc
cmpsl
xchg
lcall
aam
fbstp
cltd
mov
stc
jmp
mov
jle
div
mov
movsl
pop
sbb
cmc
out
xor
les
mov
mov
les
pop
repz
jbe
sbbl
arpl
cmp
dec
or
xor
jae
mov
jecxz
xlat
mov
add
jge
cs
cmc
xor
jge
test
rcll
jp
or
sub
lock
lods
push
ret
movsb
mov
pop
mov
fbstp
cmp
lea
jecxz
mov
xor
dec
or
fsubrl
add
dec
cmpsl
and
pusha
fimull
in
ljmp
idiv
dec
scas
pop
test
jbe
jmp
imul
jnp
ficomps
dec
cwtl
rclb
movl
mov
sbb
fidivs
cmpl
xor
repz
or
mov
inc
or
sahf
sub
dec
mov
inc
add
leave
sbb
ret
outsb
sbb
daa
xor
jne
mov
sbb
mov
lds
add
sahf
jmp
add
adc
jb
pop
scas
out
pop
dec
jnp
mov
push
popf
loop
jae
lods
sarl
sahf
out
adc
into
push
gs
je
ljmp
jp
loopne
std
adc
jge
mov
mov
fsts
push
pop
xor
aas
lods
sbb
or
push
inc
xchg
xchg
jne
icebp
das
data16
sar
mov
xchg
stc
idivl
push
jmp
sbb
jle
cli
sub
mov
xor
push
test
sub
loop
jns
fsubrs
fs
xchg
imul
push
mov
in
stc
mov
dec
sub
rcl
xchg
cmp
sbb
xor
cmp
jl
cmp
les
cmp
pop
jns
mov
sbb
sbb
fsubrs
outsl
out
mov
xor
jl
enter
lret
test
rcrb
loopne
push
xchg
cltd
push
addr16
insb
add
fiaddl
push
add
adc
test
mov
cmpsl
jb
lret
push
push
jb
loopne
mov
sbb
jno
add
sbb
dec
adc
cwtl
add
loopne
out
mov
mov
inc
inc
loope
leave
daa
xor
and
mov
xchg
sbb
movsl
push
pslld
inc
xlat
mov
pop
sbb
sbbl
inc
repz
in
jp
mov
pop
cmp
mov
cmp
pop
std
mov
out
push
or
dec
int3
inc
or
mov
movsl
sbb
push
shlb
jno
pop
xor
mov
pop
lret
cld
pop
je
in
rclb
outsl
xchg
add
js
sub
cmc
adc
inc
mov
jne
dec
sti
rol
push
rclb
mov
insb
xchg
inc
cmp
adc
in
mov
cli
xor
mov
dec
imul
cmpsl
daa
imul
shll
lahf
fistpll
mov
xor
pop
cmp
jae
jnp
fsqrt
mov
pop
cmp
and
xchg
cli
stos
xchg
pop
jecxz
cmp
test
loop
jo
test
mov
push
popa
push
xchg
cmp
daa
push
fists
aam
je
jne
scas
lret
leave
leave
mov
adc
ret
adc
bound
or
cld
movsl
jnp
stos
pop
pop
je
add
and
mov
aad
enter
mov
lock
adc
or
mov
adc
fidivs
imul
fldpi
inc
call
ret
fisubs
add
gs
dec
jbe
lcall
lock
outsb
loop
push
pop
cld
jg
sub
mov
sar
in
mov
arpl
dec
lcall
mov
pop
dec
xchg
pop
pop
dec
aad
into
bound
add
inc
dec
mov
mov
sub
xchg
push
mov
pop
data16
addr16
insl
int
in
out
add
xchg
mov
mov
cmp
sti
and
cmp
push
and
sub
sbb
ja
cmpsl
push
push
int
cmpb
dec
xor
insl
fsubs
pusha
ljmp
push
push
data16
push
les
std
icebp
ficomps
sbb
popa
pop
inc
dec
xor
mov
push
movsl
out
in
pop
adc
or
xor
adc
xchg
cmp
mul
dec
aad
ds
jg
inc
xchg
aam
ljmp
into
mov
out
or
mov
sub
js
test
dec
inc
sti
scas
cmp
fldl
push
mov
outsb
das
movsb
in
push
mov
cmpsb
rol
or
lods
scas
das
mov
pop
out
btc
pop
inc
outsl
sahf
xor
dec
xor
outsb
std
lcall
adc
fldl
test
icebp
pop
mov
sbb
mov
mov
cmp
xlat
call
jbe
sub
into
icebp
sarb
cmc
jnp
inc
pusha
mov
movsb
adc
pushl
sahf
cmp
xchg
aas
arpl
nop
jmp
pusha
in
les
imul
out
sbb
mov
in
pop
add
int
ret
outsl
iret
clc
sbb
sahf
xor
fcmovb
or
fimull
jno
xchg
ffree
aad
jnp
jnp
cmp
hlt
out
shll
mov
push
mov
push
sub
or
lds
sub
movsl
mov
lcall
test
stos
out
sub
pushf
loop
fs
bound
jg
lahf
in
popa
xchg
add
push
js
cli
cmp
xchg
mov
stc
icebp
sub
mov
ss
rclb
es
xor
or
lods
mov
rorb
out
loop
stos
xor
sub
sub
lods
mov
mov
add
inc
xchg
leave
cmpl
push
scas
push
imul
mov
sarb
dec
jno
push
xlat
cmp
loopne
shrl
pop
sub
sbb
lahf
loope
push
sub
xchg
jno
jmp
add
dec
iret
or
cmp
mov
pop
lock
cli
cs
in
push
loop
add
push
mov
mov
int
into
xchg
outsb
outsb
fdivrl
cltd
add
xor
pop
xchg
xchg
inc
sub
sbbl
mov
cmp
jnp
xor
in
sub
movsb
sub
test
push
add
bound
jbe
test
das
ret
fwait
cmp
add
scas
or
cmp
out
sarl
mov
std
movsb
cwtl
fdivrs
subl
pop
add
xchg
or
daa
loop
mov
and
push
sbb
add
push
and
ljmp
stos
adc
lret
scas
add
sbb
iret
je,pn
fwait
scas
pop
xchg
lds
fs
mov
xchg
pop
jnp
lcall
cmpsl
sbb
hlt
pushf
repnz
mov
cltd
lcall
shl
pop
jl
cmp
psubsb
mov
inc
dec
aam
pop
nop
xchg
pop
sbb
xchg
cmpsb
int3
xchg
rol
leave
or
inc
loop
dec
mov
pop
int3
mov
test
nop
push
in
cwtl
ds
or
and
dec
imul
push
inc
or
into
xchg
in
xchg
cmp
sti
fisubrs
sbb
outsb
in
mov
inc
jbe
cmc
inc
stos
push
addb
divl
cmp
incb
add
dec
and
sbbb
shlb
or
mov
adc
lods
push
jp
inc
xchg
lahf
dec
jb
jb
lods
add
test
fdivr
in
in
cmp
ficoml
out
pop
mov
add
fidivl
push
xchg
movsl
add
je
push
or
sbb
push
or
dec
adc
sbb
mov
xchg
jge
pop
les
jns
cmp
cli
xchg
repz
mov
mov
pop
adc
jp
leave
orl
lea
adc
lods
push
dec
dec
loopne
or
pop
xor
iret
insl
jns
pop
inc
push
and
fisubrl
loopne
mov
xor
div
xchg
das
lsl
add
or
and
icebp
in
cmp
sub
mov
jp
aam
cmp
or
mull
ret
out
push
pop
imul
in
stos
gs
lea
and
test
mov
xlat
sbb
jbe
pop
sbb
fisttps
and
outsl
push
in
xchg
in
fisttps
push
pusha
mov
cmp
xor
pop
or
fisttpl
rorb
sbb
jecxz
jecxz
pop
pusha
push
dec
call
xchg
arpl
sar
mulb
adcl
xor
loope
mov
cmp
out
lea
mov
and
mov
mov
test
pop
jae
mov
mov
pop
add
mov
cmp
add
cs
cld
cmpsl
mov
adc
mov
stos
cmp
push
rcrl
inc
sub
inc
pop
int
sub
in
insb
push
fwait
inc
bound
addr16
xchg
lds
sub
sub
jns
cmp
fs
fistpll
insb
cmp
mov
adc
inc
test
push
mov
mov
ret
scas
and
fbstp
pop
shll
ljmp
mov
popa
or
aaa
jno
js
cmpsb
mov
push
push
mov
rcrl
and
cs
inc
pop
rolb
jl
and
push
or
jnp
test
shr
fidivrs
mov
pop
lods
xor
shrb
decb
and
test
addl
mov
push
cmp
jns
pop
add
mov
mov
sub
add
xor
addb
or
cmpsl
ja
fsub
daa
mov
out
xchg
stos
cld
and
push
sbb
add
adc
leave
jle
int3
divb
jle
in
mov
mov
lds
jecxz
jmp
pop
insb
cmpsl
addr16
push
mov
mov
ss
cmp
push
add
cltd
test
inc
loope
sbb
cld
add
adc
jmp
dec
sub
sti
sbb
pop
test
adc
and
mov
jne
and
mov
and
inc
xor
cmp
push
xor
pop
mov
fs
out
xor
cs
xchg
inc
jbe
test
hlt
push
mov
mov
test
jge
rorl
sbb
mov
jge
rorb
scas
push
fwait
lds
dec
icebp
mov
shrb
imul
insl
shlb
data16
xchg
xchg
cmp
lcall
jge
fsubl
adc
sti
out
in
sbb
sbb
push
dec
outsb
fisubrl
adc
je
fs
dec
movsl
mov
xor
ss
lcall
inc
in
mov
and
aam
aam
mov
jl
aam
cwtl
push
and
jmp
mov
dec
mov
gs
mov
mov
cmp
xchg
mov
or
xchg
jo
stos
ret
push
lods
and
pop
rclb
and
push
lock
loop
js
or
scas
adc
sub
cmp
mov
cmp
inc
xor
add
jo
lret
pop
in
mov
invd
fdiv
fisttpl
xor
and
clc
jo
ret
xor
or
xchg
stos
push
sbb
test
push
loop
test
outsl
testl
inc
push
neg
mov
in
or
push
cltd
imul
inc
pop
sub
jmp
or
add
es
mov
inc
lds
call
sarb
xchg
movsl
dec
push
or
ret
jmp
cli
out
xchg
ds
filds
dec
mov
inc
add
jbe
enter
jb
add
fidivrl
imul
gs
dec
mov
pop
dec
lods
mov
dec
cmp
cltd
sub
xor
std
jno
flds
push
xor
adc
sub
sti
lods
pop
pop
ret
stc
addl
mov
imulb
xor
sub
bound
shrb
fists
lahf
in
mov
mov
cmp
loope
sub
jo
jg
push
movsl
imul
iret
mov
repz
sarl
add
push
shl
sub
fisubl
cmp
xor
sub
mov
mov
mov
cmpsb
psubusb
dec
jno
daa
std
dec
push
subl
orl
push
push
dec
push
jae
inc
adc
lea
sub
or
and
out
mov
fstl
lcall
aad
mull
push
shl
jo
imul
call
ficomps
dec
fdivrl
or
cs
xlat
pop
leave
lahf
in
fadds
cld
add
insb
jno
jne
push
cli
hlt
xchg
test
out
add
xchg
daa
xchg
les
mov
andl
enter
push
xor
daa
test
sub
enter
pop
mov
cmp
cmpl
cmp
fsub
adc
sbb
mov
dec
out
mov
cmp
jb
push
aas
stos
shll
test
sbb
pop
mov
or
xor
stc
cmp
dec
push
inc
inc
pop
shlb
sahf
xchg
ds
mov
std
in
cltd
pop
daa
sbb
jl
push
mov
xor
mulb
xchg
clc
jb
fs
lods
pop
cmp
shl
pop
push
test
mov
push
xchg
add
add
inc
xor
rorl
aas
and
dec
push
cs
adc
pop
fcoml
cmp
sbb
add
push
dec
cmc
mov
sbb
jno
sti
rcrl
test
mov
xlat
and
out
inc
pop
xchg
fdivr
fs
and
les
cwtl
out
dec
sbbl
in
cmp
out
aam
stos
les
sub
sub
fucomi
clc
mov
int3
rclb
fcoml
inc
sbbb
mov
cmp
push
fs
adc
dec
stos
xor
inc
outsb
sbb
push
xor
pop
jg
mov
mov
mov
outsb
fwait
or
lahf
mov
jne
loop
pushf
xor
mov
les
sbbb
xchg
mov
scas
cmp
mov
repz
out
mov
pop
and
sbb
mov
sti
into
addb
and
mov
push
push
aad
outsb
and
shl
fistl
push
sub
cmp
test
mov
add
mov
lods
ret
xor
jae
cmp
fs
or
ss
rclb
aad
roll
pop
pop
enter
push
mov
inc
mov
cmpb
nop
xchg
mov
push
dec
cli
int
push
inc
inc
mov
sbb
js
ja
aad
sbb
mov
lcall
scas
inc
mov
lret
ret
push
stc
adcb
sub
int3
icebp
rcrb
mov
test
lcall
jle
cmpsl
mov
pop
divl
js
aaa
jge
mov
pushf
mov
out
pusha
inc
testb
nop
jp
inc
mov
es
xor
loope
sbb
cmpsl
shrb
mov
iret
push
pusha
add
jo
push
and
cmp
adc
jmp
icebp
mov
mov
cld
push
jge
inc
addl
cli
cmp
cmp
xor
dec
jbe
in
or
sarb
incb
or
hlt
pop
int3
sbb
push
fdivrl
mov
fidivrs
repnz
adc
and
jb
jp
popa
cmpsb
sub
in
outsb
je
or
ljmp
addr16
fsubrp
mov
sbb
mov
jns
mov
mov
lcall
leave
mov
pop
xchg
adc
inc
push
dec
jmp
out
scas
or
add
stos
bound
call
mov
mov
iret
mov
and
and
nop
fidivl
lock
xchg
xor
outsb
and
xlat
dec
xchg
lea
fucomi
xchg
pushf
ret
scas
lahf
in
repnz
xchg
pop
outsl
lret
test
sub
iret
inc
sbb
sub
lret
incl
hlt
jmp
mov
jl
repz
mov
sbb
repnz
std
xchg
mov
enter
push
mov
and
mov
push
push
pop
shll
xchg
jbe
frstor
push
std
push
or
mov
cld
push
or
dec
outsl
inc
sub
fimull
sar
fwait
pusha
xlat
jae
arpl
cmpsb
sub
sub
inc
mov
sub
inc
xor
movd
xchg
int
ret
inc
dec
pop
js
sti
inc
pop
cmp
outsl
and
sti
or
add
daa
imull
loopne
add
cmpsb
mov
loope
mov
fcompp
jecxz
cmp
jnp
pop
mov
cmpsl
mov
pusha
and
rcrb
dec
jns
cmp
mov
and
fs
les
jb
sub
fildll
cmp
or
popa
adc
scas
mov
xchg
dec
cwtl
ss
mov
lret
dec
xor
outsl
push
jo
in
pushf
out
jmp
insb
fdivrs
in
loop
add
in
push
inc
sbb
cld
and
in
add
add
xor
cmp
std
iret
cmp
adc
cmp
mov
and
sbbl
push
fwait
mov
pop
in
inc
mov
sbb
pop
xor
cmp
std
movsl
sub
jl
jno
and
cmp
out
cmp
je
xchg
or
inc
lock
mov
xor
test
adc
or
test
or
or
jne
js,pt
cmc
popa
pop
sub
shl
pop
adc
int3
push
xor
fs
insl
arpl
add
mov
insl
and
pop
int
and
arpl
out
pop
fisttps
mov
add
rclb
jbe
enter
pop
pop
sbb
jnp
xor
push
stos
into
and
or
add
mov
xor
pop
xchg
inc
insb
je
jns
cmp
sbb
test
jb
cmp
gs
mov
and
test
mov
int3
cld
je
ret
mov
popa
sub
or
xor
in
xlat
sub
das
xchg
test
fwait
test
sub
mov
testl
jae
sub
and
cli
xor
divl
pop
incl
fistl
std
loopne
xchg
std
std
out
jno
loope
int3
mov
jge
loop
dec
js
xchg
jo
mov
aam
rcr
push
mov
lcall
mov
inc
sub
inc
cmp
test
dec
adc
aaa
pop
je
or
lods
fscale
loopne
cmp
sub
divb
out
test
ljmp
mov
xchg
data16
js
outsl
adcl
push
cmc
push
push
leave
mov
jno
adc
sub
mov
mov
mov
mov
jecxz
les
or
test
xor
inc
les
lea
pop
xchg
fnstenv
test
inc
add
jp
and
push
bound
stos
stc
mov
jmp
push
or
inc
cmp
inc
lret
dec
mov
pusha
mov
aaa
adc
arpl
in
push
xchg
dec
cmc
adc
in
scas
lahf
hlt
push
ret
js
cmp
pop
into
mov
les
addr16
out
in
add
ja
mov
int3
daa
push
lds
xor
and
pop
call
insl
stos
xchg
dec
or
lea
fsub
enter
lock
andb
mov
add
pop
inc
les
cmp
adc
aad
aad
add
or
test
push
mov
fiaddl
sub
dec
sub
in
loope
andb
pop
test
subl
js
stos
pop
in
mov
add
mov
gs
mov
popf
push
push
add
mov
or
shrl
or
fildl
xchg
adc
sti
insb
loope
dec
jle
clc
dec
popa
push
sbb
loope
fidivs
or
and
jl
pop
movsb
gs
fdivs
push
mov
movsl
loope
out
nop
xchg
xchg
lods
jg
mov
js
mov
negb
lods
cmp
cmpsb
push
pop
pop
mull
outsl
push
add
lret
pop
jmp
push
ret
pop
pop
lahf
les
js
call
daa
sarl
iret
cli
leave
add
shrl
jae
pop
mov
test
scas
int
xor
sarb
into
imul
aam
aad
jmp
daa
int
mov
inc
aas
imul
out
fcompl
mov
out
or
sub
xor
mov
aas
ficompl
std
subl
add
lock
int3
mov
popf
rcl
outsb
sub
add
pop
lahf
cli
push
out
adc
mov
push
fnsave
repz
or
ss
add
test
hlt
outsb
jne
and
subb
mov
lock
enter
xchg
loopne
jl
or
in
mov
enter
in
out
xor
addb
mov
push
popf
insb
pop
inc
test
mov
imul
pop
popa
push
push
enter
jb
add
leave
add
lock
jge
push
andl
adc
xchg
lret
push
dec
aam
xor
int3
scas
pop
out
aam
add
rcll
repnz
fimuls
adc
sub
or
or
ss
or
icebp
adc
scas
sub
cmp
das
dec
ljmp
fstpt
cmp
mov
adcl
std
pop
dec
dec
fmul
sub
dec
mov
mov
and
in
jle
xor
jg
call
add
xchg
pop
fidivrs
adc
mov
adc
or
sbb
popf
or
push
mov
or
adcl
imul
cmpb
arpl
sti
popa
add
jle
por
pushf
adc
rorb
mov
pop
cwtl
pop
test
sahf
lret
sahf
lds
mov
jge
das
cmpsl
mov
cwtl
shll
xor
add
outsb
lret
movsb
inc
xchg
ja
and
sbb
dec
repnz
jp
jg
push
dec
mov
xchg
dec
in
lcall
add
arpl
or
and
fidivs
testl
or
dec
or
out
pushf
add
and
sbb
fldenv
cmp
pop
iret
ja
fisttpl
lods
es
aas
xchg
push
adc
xchg
daa
adc
adc
fidivrl
fcmove
ljmp
in
jge
fmuls
mov
pop
sbb
cmc
leave
ds
and
negb
mov
stos
mov
repnz
inc
int
push
repnz
std
insb
sub
mov
das
cli
pop
mov
jne
pusha
js
cmp
fimuls
jp
fmull
ljmp
cmp
adc
scas
icebp
mov
std
and
inc
push
jle
jae
push
push
icebp
mov
xor
out
pop
or
push
nop
adc
out
hlt
lock
mov
mov
out
and
push
aaa
jnp
out
cmc
push
cs
por
repnz
leave
sbb
rol
push
test
cmp
scas
les
enter
mov
jl
xchg
push
jb
pop
repnz
xchg
movsl
dec
jnp
fistpl
mov
dec
mov
push
pavgb
dec
push
fisttpl
insb
aad
imul
imulb
ret
mov
or
jbe
ja
cwtl
add
pop
mov
cmpsb
fcom
pop
gs
xchg
xchg
inc
cli
lock
aam
mov
in
mov
call
dec
out
push
push
popf
addr16
jmp
outsl
repz
and
xchg
out
test
jp
sbb
adc
mov
pop
push
adc
xchg
xchg
int3
push
inc
pop
enter
xor
dec
and
decb
jns
push
bound
sarl
sbb
lea
push
pusha
xchg
in
mov
lret
scas
outsl
loope
in
stos
hlt
nop
and
mov
sub
lret
mov
cmp
push
xor
std
xlat
xchg
and
or
aam
lods
insb
pop
loope
das
aam
pop
popf
fsubs
popa
inc
or
adc
cmp
cmc
mov
jnp
daa
in
mov
pop
sbb
ret
loop,pt
jne
jle
scas
xorb
cmc
push
push
sbbl
mov
xchg
imul
data16
test
adc
ficoms
mov
psubsb
pop
loopne
mov
cmp
outsl
pushl
jg
mov
pusha
in
xorl
loope
pop
or
test
fnstsw
fnstenv
inc
xchg
fmuls
insl
pusha
leave
sbb
mov
addb
mov
cmp
xchg
pushf
sub
loop
movsl
push
rclb
in
mov
adc
add
mov
jecxz
jle
xchg
pop
lcall
and
mov
sti
sbb
cmp
pop
jg
cwtl
mov
mov
sub
xchg
xor
cmp
cmpsb
into
mov
sub
mov
lods
dec
aad
mov
jmp
sbb
jp
test
imul
dec
es
inc
mov
push
loopne
test
mov
nop
mov
push
lea
sbb
push
push
loop
dec
les
dec
lods
daa
lcall
jge
ret
shrl
or
mov
daa
stc
mov
inc
sub
push
loopne
dec
jp
dec
pop
push
dec
pop
xor
fwait
hlt
fwait
xchg
sbb
xchg
jle
loopne
mov
dec
fldenv
jle
cmc
mov
test
and
ffree
dec
xor
inc
fldcw
fisubs
add
in
inc
xchg
lea
cmp
movb
bound
pushf
aaa
mov
mov
insl
xchg
sub
mov
enter
ja
mov
pushf
xor
sbb
stos
enter
ljmp
pop
out
lahf
clc
mov
mov
and
push
out
cld
repnz
cmpsl
arpl
cmp
test
adc
and
and
nop
daa
xor
jmp
in
push
or
inc
test
push
pop
roll
or
mov
out
xor
pushl
mov
rolb
mov
sbb
or
mov
xlat
dec
adc
ja
inc
cmp
push
jle
xor
dec
repz
sub
add
pop
jne
mov
mull
mov
insb
push
loop
xor
push
jp
mov
mov
int
dec
rcrb
jb
es
pop
sub
lds
push
jno
inc
andb
in
jge
movsl
mov
or
jl
xchg
roll
scas
test
call
push
bound
test
cmpsb
mov
push
xchg
fldcw
mov
in
mov
adc
xor
ret
and
dec
pushf
rclb
lock
in
sub
jno
in
or
xchg
mov
xchg
popf
push
cwtl
mov
adc
pushf
mov
insb
aaa
testb
daa
insb
movsb
or
mov
sbb
mov
arpl
cmpsl
loope
loopne
out
lods
pop
push
cmpsl
push
mov
mov
lret
adc
test
xchg
loopne
dec
fiadds
in
lods
int
adc
loope
and
leave
cltd
mov
out
mov
sbbl
pushf
ja
enter
xchg
cmp
popa
mov
je
push
xchg
or
adcb
out
mov
lcall
test
fcomip
in
mov
dec
adc
lcall
jecxz
push
inc
sbb
jb
adc
out
pop
xchg
repnz
cmp
incl
out
pop
mov
mov
xlat
inc
push
clc
aad
lock
pop
xor
cmp
adc
add
push
loop
dec
push
xchg
out
loopne
ljmp
cmpsl
adc
les
les
cli
sub
sub
out
jb
or
arpl
ja
popl
mov
jne
stos
push
das
dec
cld
sahf
jo
fwait
pop
in
sti
fwait
jb
pop
leavew
repz
add
mov
push
out
lret
jno
push
cs
mov
add
in
xchg
or
mov
sbb
pop
push
adc
pop
jecxz
mov
jmp
xor
or
pop
je
dec
lods
cltd
pop
dec
fs
add
push
adcl
sbb
addl
out
cmp
sub
out
adc
popl
lret
jge
add
sbb
jnp
test
sub
js
adc
sar
adc
jbe
push
sbb
icebp
sahf
sbb
push
mov
mov
fs
mov
xchg
cmp
mov
mov
out
std
mov
shlb
sub
pop
push
out
lods
arpl
es
aaa
cmpsl
je
mov
arpl
bound
repnz
mov
lods
test
rclb
mov
in
in
dec
aaa
loope
call
mov
ret
ret
ret
xor
cmp
les
push
pop
pop
arpl
mov
out
cmp
mov
xchg
into
out
cmp
push
jno
cmp
cmp
push
cli
fmul
push
mov
pop
enter
pop
xchg
xorb
pushf
sub
jmp
clc
mov
adc
add
int
lods
nop
sub
sbb
pop
add
test
jge
dec
inc
sbb
repnz
inc
adc
out
sub
mov
mov
push
jp
adc
in
jne
fs
xorl
push
stos
dec
out
fwait
sbb
mov
cmp
lret
or
dec
pop
addb
pusha
or
mov
in
into
add
movsl
mov
and
dec
outsb
push
in
pop
add
outsl
jg
lock
push
sub
fs
outsb
dec
sbb
push
adc
scas
jno
pop
jmp
dec
adc
pop
dec
push
inc
and
add
pop
clc
mov
gs
jmp
sub
imul
pop
stos
jo
pop
js
imul
in
push
add
xchg
aas
adc
dec
and
or
inc
mov
js
movsb
or
sub
adc
fiadds
push
pop
cmp
mov
mov
movsb
mov
out
sbb
mov
cli
aaa
mov
pop
hlt
and
pushf
and
jmp
outsl
cmp
fistl
fistpll
adc
movsl
xchg
je
push
xor
mov
mov
ror
xorl
adc
fldt
js
out
ja
add
fs
and
inc
dec
dec
jb
add
sti
lods
fst
add
sub
inc
add
out
push
mov
jecxz
mov
aas
jge
pop
xor
cmp
jae
lea
xchg
sbb
and
aas
hlt
fisttpll
xor
sbb
xor
sbb
loope
cmp
cmp
jg
orb
mov
sbb
fimull
setbe
push
shrl
jecxz
shl
sbb
lock
mov
pop
loop
adc
rcrb
xchg
push
sahf
divl
xchg
mov
lea
in
repnz
cmp
daa
push
jg
inc
arpl
sbb
sub
or
repz
test
jge
mov
pop
pop
jo
mov
mov
push
cmp
test
mov
das
adc
pop
bound
popf
push
ret
sbb
std
xchg
dec
inc
je
and
sub
out
flds
push
push
test
cmc
cmp
subl
pop
adc
jp
test
aam
loopne
sbb
adc
mov
and
mov
scas
push
push
cmpsl
test
popf
jle
paddb
mov
out
mov
lcall
pusha
stos
cwtl
push
sub
popf
sti
xlat
lahf
sahf
and
fsub
outsl
aaa
pop
fsubrp
xchg
and
stos
pop
cld
push
addr16
mov
jge
ja
jno
aas
push
cmp
sbb
call
movb
lods
xor
sub
pop
cmpsl
push
popa
push
test
dec
lret
and
gs
or
cmc
loop
movsl
rclb
popa
mov
sub
xchg
mov
loop
movb
fs
movsb
test
ret
dec
xchg
mov
mov
push
insb
movsb
add
insb
outsb
mov
dec
mov
dec
inc
cmpsl
push
mov
fisttpl
lods
into
ret
inc
jg
cmpsb
lock
mov
imul
int3
aas
call
outsb
or
jge
mov
out
sbb
cmpsl
adc
outsl
subl
cmp
mov
aad
fucomip
or
sbb
xor
sbb
enter
into
lahf
pop
js
ret
mov
icebp
xor
repz
add
cwtl
or
jae
sarl
ljmp
fidivs
push
divl
cs
sbb
out
ds
mov
aaa
pop
inc
jae
nop
push
lahf
popa
and
hlt
popa
ficomps
sbb
add
pop
outsl
mov
inc
cwtl
popf
add
mov
popf
fists
mov
pop
test
fdivl
cli
jnp
out
adc
mov
sub
sub
mov
imul
daa
ljmp
and
lea
icebp
push
push
adc
pop
sbb
scas
inc
and
js
repz
sbb
pop
jns
das
adc
xor
rol
mov
xchg
mov
mov
aas
or
jg
sub
or
fwait
mov
orb
sbb
push
in
add
bnd
or
dec
mov
xchg
ret
ja
outsb
inc
fiaddl
dec
outsb
nop
into
pusha
fisubrs
pop
sahf
inc
pop
lcall
mov
sub
mov
adc
in
nop
leave
in
ret
mov
popf
sbb
push
inc
movsb
neg
xor
push
cltd
imul
lods
fisttpll
jmp
jecxz
cmp
mov
jmp
adc
adc
sbb
sub
lea
push
loop
aas
repnz
lea
daa
mov
push
sbb
stc
outsl
or
add
mov
jmp
pop
xor
push
sbb
pop
nop
fsub
jp
mov
inc
mov
stc
out
call
fs
cmp
std
jmp
scas
sub
adc
outsl
dec
push
xor
aas
adc
test
jne
add
mov
jge
test
add
lahf
pop
clc
dec
lock
push
aad
addr16
mov
cli
ficomps
das
repz
jo
testb
fidivrl
test
sub
dec
sub
push
cmp
jle
add
pop
int3
sbb
inc
and
mov
sahf
add
mov
pop
jo
or
xchg
inc
mov
xlat
cld
xchg
int
cltd
cs
inc
xchg
jnp
jo
mov
btr
scas
jae
ficoml
into
sti
dec
dec
insb
cld
sbb
jno
iret
loopne
push
or
pusha
ret
add
push
inc
test
pusha
aas
or
xor
xor
and
cmp
jle
pop
push
pop
inc
rcrl
fisubrl
or
xlat
mov
sub
fidivrl
jno
lods
sbb
dec
jb
cwtl
pop
push
add
and
cli
and
mov
cmpsl
mov
movsb
fcomi
mov
out
sub
fstpl
cwtl
ds
movl
jnp
and
outsl
lcall
jno
add
adcb
push
out
push
loope
shr
icebp
and
decl
inc
or
add
cs
cs
mov
and
sbb
push
shll
mov
push
push
int
scas
fsts
outsb
nop
adc
popa
outsb
ret
insl
jg
add
aad
cs
mov
xor
mov
sbb
adc
fwait
cmp
add
lock
mov
shlb
push
js
mulb
mov
ret
pop
xor
popa
or
test
inc
add
jae
data16
adc
jp
cmp
sbb
mov
adc
inc
fmul
fiadds
movb
jne
enter
fstl
dec
int
adc
mov
imul
xor
enter
mov
pop
test
fadds
pop
sbb
mov
insl
popa
loop
push
test
fsubrp
mov
lahf
daa
out
fcomip
mov
lock
js
ljmp
lds
insb
push
movsb
and
popa
stos
xor
or
adc
sbb
jnp
dec
sahf
and
fcoms
ret
xchg
add
imul
mov
xchg
adc
dec
sbb
push
test
jl
out
fdivrp
ds
xlat
lds
cmp
jo
mov
shlb
stos
lcall
mov
mov
jnp
xor
das
push
pop
sbb
or
push
sbb
aam
mov
xor
lods
and
ja
mov
inc
adc
push
dec
mov
data16
fldlg2
add
sti
movb
popa
push
movsb
cmpsb
lods
ds
pop
xor
stc
stos
jle
lds
inc
jae
stos
add
pop
test
inc
call
sub
inc
jo
jns
pop
xchg
divb
dec
inc
jp
into
clc
dec
ret
aad
xchg
testb
pop
es
mov
jp
mov
sbbl
mov
add
out
in
sbb
mov
push
imul
fists
inc
cs
add
or
push
mov
jb
adc
cmp
cmp
xchg
xchg
xchg
call
les
mov
mov
fcmovu
nop
movsl
inc
push
jno
aaa
push
mov
jbe
mov
imul
mov
push
loopne
jmp
adc
xchg
pop
mov
and
jno
inc
sub
sub
fwait
sub
push
pop
add
add
push
push
fdivp
jecxz
fidivs
outsl
and
cmp
lods
push
insb
adc
xchg
icebp
mov
push
inc
psubd
sahf
mov
inc
dec
push
inc
pop
push
outsl
jg
fwait
pop
dec
mov
adc
and
loopne
nop
sar
loopne
dec
jbe
xlat
addl
cmpsl
push
cmpsb
ficomps
inc
sub
mov
jb
cwtl
sbbl
fsubrl
mov
inc
mov
pop
mov
mov
scas
inc
mov
jnp
mov
sub
lcall
sti
outsb
je
jge
jmp
mov
cwtl
mov
sbb
cli
inc
movsl
out
add
ja
xor
fisttps
outsl
test
add
inc
jbe
aas
scas
lret
in
jb
and
add
ret
cmpsb
sub
or
shlb
repnz
sbb
lock
test
mov
test
mov
je
mov
push
scas
mov
jbe
push
push
scas
clc
jb
mov
pop
add
out
aad
dec
popf
cs
mull
in
add
xchg
aas
lods
add
mov
shll
push
cmp
rolb
pop
lret
or
je
mov
cmp
stos
sbb
imul
pop
adc
jns
lret
cltd
call
add
mov
lds
out
in
mov
daa
xchg
mov
cwtl
mov
adc
int3
test
mov
mov
push
clc
push
xor
movb
insb
ret
popa
xor
sbbb
push
push
lds
lcall
push
cwtl
dec
lahf
xchg
mov
movsb
dec
sbb
adc
fidivl
mov
inc
imulb
mov
push
iret
dec
push
stos
sbb
lret
lcall
mov
sahf
lahf
mov
xchg
sbb
pop
jae
je
iret
add
aas
dec
out
xor
mov
scas
pop
outsl
xor
push
sbb
ss
in
adc
in
loope
mov
in
add
mov
pop
in
stos
pop
pop
loop
int3
xor
sub
push
into
add
out
mov
xor
mov
inc
or
mov
mov
mov
pop
xchg
sub
cmp
mov
insl
sbb
pop
stos
xchg
cmp
add
mov
mov
pop
dec
lcall
stos
enter
mov
push
test
inc
jne
scas
stos
mov
les
decl
test
mov
lea
lret
lret
mov
push
xor
adc
leave
pop
rol
stos
cmp
xor
adc
and
je
dec
inc
sub
sbb
push
or
or
xlat
xchg
out
dec
sbb
stos
cmpb
or
mov
cmp
lret
test
repnz
stos
movsl
or
cwtl
fsubrl
push
push
add
aas
and
lcall
hlt
jb
mov
jge
jp
repz
inc
or
test
jbe
ja
test
mov
ss
xchg
fsubl
adc
sbb
fwait
push
bound
add
in
add
gs
lods
fisubs
mov
sbb
ja
mov
mov
jp
dec
lret
nop
add
addr16
stc
lods
adc
aaa
or
xchg
mov
sub
cmp
mov
je
fidivs
lret
sbb
call
mov
rclb
aam
pop
inc
jmp
jge
or
xchg
test
lahf
pop
push
fmul
adc
icebp
mov
mov
dec
iret
xor
out
push
xchg
inc
and
scas
jo
mov
cmpsl
inc
cli
ficoms
aam
jge
mov
sub
or
sbb
test
dec
or
out
stos
xchg
push
pop
mov
leave
adc
pop
or
stos
stos
stc
ret
negl
jnp
test
jno
hlt
arpl
fstpt
mov
addr16
hlt
push
fistpl
hlt
jnp
inc
stc
cltd
mov
adc
test
inc
xchg
arpl
jl
nop
rorb
and
aad
xchg
push
mov
repz
fadd
popf
inc
xor
sarb
mov
arpl
aaa
mov
push
ss
sti
cltd
sub
dec
mov
cmovl
fldcw
subl
xchg
sbb
mov
je
pop
stos
jno
sub
bound
dec
and
ljmp
int3
xchg
loop
pop
xor
cmc
arpl
loop
mov
mov
jnp
jno
mov
test
jl
jecxz
ljmp
repz
jae
aaa
xchg
mov
xor
enter
sub
pop
xchg
cmp
and
jp
int
inc
mov
adc
inc
das
add
repnz
sti
jne
mov
icebp
cmpsl
adc
mov
push
les
pop
mov
cmpl
jle
mov
les
out
push
notl
and
jecxz
addb
mov
int
outsb
push
mov
mov
inc
out
add
xlat
repnz
dec
pop
stc
mov
gs
add
in
jp
cmp
push
xchg
push
mov
xorl
ficompl
jg
ret
in
inc
cmp
pop
push
cmpsb
push
sbb
mov
cmpsl
in
push
jo
or
ret
mov
cmp
or
pop
shrb
xchg
push
lcall
ret
sahf
fsubl
aas
insb
daa
ret
popa
jge
int
jb
xlat
xlat
clc
mov
or
adc
sbb
jmp
adc
loop
bound
movsb
cwtl
add
or
mov
or
insl
scas
cmp
xchg
movsl
repnz
lahf
rcll
mov
cwtl
mov
push
rcll
xor
dec
dec
daa
sub
outsl
cltd
cmp
push
outsl
repnz
push
data16
stos
pushf
sahf
mov
leave
push
das
push
shrb
fcompl
outsl
stos
dec
lods
frstor
ss
in
fs
xchg
je
xchg
aaa
xor
ret
xchg
int
icebp
lods
outsl
jns
xchg
xor
cmp
stc
xchg
pop
loope
inc
sbb
ss
insl
int3
bound
pop
test
roll
pop
mov
fisttpl
xor
xor
cmc
jbe
out
inc
int3
add
mov
cmp
add
ja
jecxz
mov
pop
xchg
push
mov
call
cld
test
xchg
pop
test
adc
sbb
dec
repnz
xlat
jne
lahf
xor
inc
cmp
addr16
movsb
jge
lds
aad
idivb
je
arpl
and
test
fwait
push
mov
xchg
xor
rcr
pop
gs
or
xchg
mov
jnp
pushf
add
push
arpl
lods
stos
adc
andb
arpl
jno
cmp
pusha
cmc
xchg
scas
mov
jmp
mov
icebp
adc
out
inc
pop
subl
pop
test
sub
xlat
dec
sbb
insl
and
icebp
mov
adc
mov
fimuls
pusha
mov
sti
loope
mov
pop
mov
sub
daa
and
cmp
ds
andb
loopne
push
hlt
das
cld
insb
cmc
adc
ret
pop
stos
js
outsl
and
mov
push
push
out
jns
leave
insl
scas
ljmp
sub
xor
jp
sub
pop
rcl
mov
adc
inc
adc
loop
jl
or
or
fwait
mov
dec
iret
pushf
mov
jmp
push
and
lcall
icebp
jnp
lds
popf
or
inc
jp
andb
xor
mov
popa
jo
sarl
xchg
push
xor
fs
cmp
imul
pusha
pop
lcall
icebp
inc
mov
cmp
adc
or
adc
xchg
rorb
push
cmovno
push
repz
sub
push
sbb
pop
repz
daa
push
ds
fdivp
sahf
cmp
xchg
mov
push
in
stc
push
test
or
sub
jp
sarl
orl
lret
xchg
lahf
lahf
aaa
mov
out
adc
test
rorb
mov
sub
iret
push
pop
lods
inc
sbb
sub
shlb
aas
pushf
pop
andb
and
xchg
pop
lret
adcb
mov
mov
lods
jmp
inc
mov
inc
mov
pop
adc
push
xchg
mov
ret
scas
les
test
xchg
ja
inc
push
sahf
jbe
imul
jnp
jnp
dec
or
jbe
gs
fimuls
mov
lods
imul
dec
sub
in
xor
xor
sub
dec
adc
jbe
sahf
push
cs
enter
add
sub
es
jl
aam
js
lcall
push
aam
jecxz
call
loope
out
incl
mov
loop
shrb
inc
push
mov
dec
push
out
pop
cmc
in
push
ss
clc
fcoms
xor
mov
pop
mov
repz
aas
xchg
pop
test
mov
mov
insb
push
aas
cmp
dec
inc
outsl
test
in
jmp
out
push
test
aaa
jp
pop
je
aaa
rcll
inc
cmp
push
jle
add
subl
jae
les
out
lods
mov
mov
sbb
sub
loop
lret
mov
leave
pop
flds
push
cwtl
aad
in
jne
scas
pop
xchg
and
add
push
fsts
nop
int
je
push
daa
xlat
pop
mov
in
push
add
cmp
xchg
xchg
fmull
mov
into
stos
insb
clc
xor
call
shlb
int
data16
mov
fisttpl
add
clc
test
mov
push
adc
mov
movsb
mov
or
fcmovbe
push
repz
jb
jnp
mov
mov
test
les
aad
out
push
mov
lret
inc
stos
sti
outsl
mov
int
fdivrl
jl
sbb
subb
int
xor
ret
push
xlat
shlb
loop
jbe
sti
mov
stos
daa
inc
xchg
lcall
notb
inc
addr16
mov
fsubrs
sub
pop
mul
mov
inc
loopne
adc
mov
inc
dec
cmp
pop
inc
movsl
mov
jmp
dec
sbb
mov
inc
xor
imul
xchg
das
or
das
push
loope
and
sub
jne
inc
pop
ss
lret
test
loop
jle
imul
addl
cmpsb
sub
arpl
arpl
rolb
adc
xor
sub
cmp
and
dec
addr16
or
in
xchg
lock
aad
les
dec
aas
aam
scas
rclb
mov
jecxz
mov
test
fidivrl
jle
iret
push
aaa
adc
lret
int
enter
sbb
inc
mov
push
popf
fcmovb
adc
subl
ljmp
mov
pusha
sbb
icebp
mov
push
jl
leave
cmpsb
xchg
imul
or
jo
add
push
push
push
add
nop
fs
in
aad
and
dec
lods
cmp
mov
iret
xchg
in
andb
push
stos
fsubp
repz
and
and
inc
mov
imul
fcmovb
test
pop
and
push
sbb
stc
out
mov
jne
push
pop
aad
jns
add
xchg
and
rol
stos
call
mov
imul
pusha
mov
cmp
mov
sbb
pop
in
xor
iret
popa
sub
fists
pop
fcoms
jo
ljmp
mov
dec
mov
mov
or
lahf
push
mov
ja
jg
lcall
or
push
cmpsb
jbe
xor
rcrl
add
dec
stc
jle
and
add
inc
jl
lahf
cmp
pop
adc
jns
cmp
cmpb
inc
ficoms
rcrl
lcall
add
xorl
xor
inc
cmc
mov
pushf
sbb
or
inc
lea
out
pusha
sbbl
aam
call
jle
pop
add
jmp
shrl
push
call
aad
pop
lret
mov
out
neg
and
repz
cmp
out
fbld
sub
repz
jecxz
inc
outsb
and
inc
add
push
fisubs
or
mov
xchg
rol
or
js
roll
add
cmp
cmp
ljmp
mov
movsl
push
mov
and
inc
pop
ret
in
adc
mov
das
pop
inc
hlt
or
insl
das
pushf
out
inc
dec
jno
xchg
in
test
mov
xlat
sbb
pop
in
mov
mov
repz
sbb
arpl
jecxz
rcll
mov
fldt
outsl
inc
add
xchg
lea
in
aam
or
push
das
arpl
test
lods
jecxz
idiv
push
cwtl
out
es
not
popa
gs
cmpl
mov
roll
adc
fildl
mov
nop
mov
xchg
mov
js
adc
mov
mov
stos
sub
loopne
push
mov
mov
aas
das
pop
push
mov
sbb
mov
xor
lret
lahf
outsb
xlat
push
je
arpl
inc
sub
mov
dec
jo
out
jle
mov
and
jno
and
push
test
pop
ret
xor
add
movsl
aaa
in
xor
and
inc
cmp
xor
cmpsb
leave
pop
test
shrb
popf
push
and
fsub
fs
jo
dec
mov
sub
into
sahf
repz
dec
sahf
adc
rcll
mov
add
jl
je
or
ljmpw
imul
xchg
xor
and
pop
cmp
gs
sarb
push
popf
sbb
insb
lea
push
mov
je
and
push
push
sub
xchg
mov
push
out
mov
push
cmp
into
and
or
aaa
fmuls
pop
or
xchg
xor
lock
pop
jg
cmp
mov
lods
jg
sub
das
jl
scas
jl
or
imul
out
xor
mov
add
mov
iret
add
cmp
push
cmovne
cwtl
mov
stos
jge
push
pop
loope
sub
imul
enter
jno
xstore-rng
cmpsl
push
dec
pop
pop
call
jbe
cmp
stos
fs
inc
xchg
lds
shlb
lea
cmp
fcoml
mov
cmpsb
lods
mov
and
pop
mov
cwtl
sub
push
and
push
inc
ss
and
popf
pusha
push
pop
sbb
mov
xor
rorl
mov
sarb
mov
ficomps
fdivr
lds
inc
mov
pop
std
aad
add
or
or
dec
push
jnp
scas
mov
pop
inc
fwait
ret
pop
inc
pop
insl
jecxz
push
cmp
jmp
dec
and
add
pop
and
add
add
aas
sbb
jle
loope
je
cwtl
mov
ret
jp
dec
cmp
or
sbb
pop
push
lahf
repnz
pop
cmp
test
ss
inc
out
cmpsb
shl
xchg
fsts
pop
mov
inc
and
out
inc
jb
cmp
jmp
dec
jl
roll
lret
xchg
std
cltd
pushf
fs
adc
push
das
fchs
mov
jns
cmpsl
das
jg
pop
lcall
imul
mov
sub
sbb
test
adc
popa
adc
add
sbb
sbb
push
push
mov
or
loop
popa
cmpsb
lret
mov
sub
jecxz
or
and
jns
pop
inc
sahf
sbb
ficomps
sbb
xchg
cmc
fdivl
loope
push
loopne
and
hlt
dec
pop
inc
mov
call
dec
add
jp
cmp
fstpl
mov
adc
lret
mov
out
test
in
repnz
movsb
and
into
cwtl
cmpl
movsb
aam
in
jmp
pop
pop
mov
ficompl
pmaddwd
mov
arpl
icebp
mov
or
cli
fucomip
jp
adc
aaa
in
rdtsc
mov
ss
out
cmp
mov
adcb
mov
push
push
idivb
pop
arpl
jbe
dec
into
mov
repz
mov
xchg
or
sbb
mov
lds
sub
movsl
mov
pop
lock
test
aaa
sbb
mov
mov
inc
or
add
loopne
mov
loopne
call
pop
dec
jne
add
xchg
enter
movsb
xchg
lds
cwtl
insl
mov
fstp
roll
mov
dec
push
xchg
imul
mov
ds
lcall
dec
lods
nop
mov
in
lock
cmc
add
ja
xchg
loop
xchg
jb
dec
mov
pop
icebp
test
push
mov
adc
in
xchg
mov
dec
cmp
data16
jb
pop
cmp
pop
aaa
adc
and
xor
nop
shl
leave
aas
add
dec
add
vpmacsdqh
sub
xor
mov
popf
loopne
jns
fimuls
outsb
std
in
add
in
or
aaa
sarb
push
aas
shlb
push
fmul
sub
jg
dec
cmp
cli
pop
imul
adc
js
push
sar
and
lcall
add
rorl
push
fwait
lods
push
push
jmp
lret
inc
lgs
aad
fnstenv
test
scas
ret
push
xor
xchg
push
inc
pop
imul
iret
pop
daa
lahf
insb
cmp
pop
cltd
push
lcall
xchg
xor
roll
dec
enter
mov
out
test
insb
mov
lahf
jmp
nop
add
je
xchg
pop
sub
stos
loopne
sbb
and
lret
inc
mov
fiaddl
mov
jne
add
rcrb
movsb
pusha
mov
mov
aaa
andb
mov
xchg
sbb
adc
cmp
test
or
dec
cwtl
test
data16
xor
xchg
adc
pop
int
dec
xchg
ret
fwait
xchg
pop
add
jo
cli
push
in
push
jmp
inc
push
addr16
and
stos
filds
pushf
jo
mov
add
sbb
out
lret
cs
cwtl
dec
sub
mov
loope
add
lret
leave
shl
in
stc
add
js
stos
and
adcb
sbb
fwait
push
fisttpl
lcall
mov
jg
adcb
outsl
cltd
lahf
fstps
mov
clc
inc
push
cltd
and
lahf
sub
rolb
cli
cmp
dec
js
lcall
movsl
pop
xchg
inc
pusha
movsb
cmp
push
bound
sarb
ds
xor
mov
or
sbb
pop
adc
add
loop
xlat
pop
addr16
jno
loop
lods
test
jmp
mov
xchg
jmp
js
mov
sahf
pusha
leave
push
in
push
xchg
push
imul
pop
and
mov
addr16
adc
aad
adcl
dec
pop
xor
push
or
loop
loopne
and
adc
dec
mov
add
pop
add
aam
jg
fwait
push
mov
adc
mov
inc
jmp
sbb
movsb
jno
stos
or
xlat
or
stc
js
xorl
push
sub
mov
adc
push
and
pushf
mov
out
ljmp
sbb
inc
incb
mov
roll
sar
jge
push
dec
nop
aam
cwtl
imul
out
xchg
mov
push
inc
cmpsl
jp
push
sub
dec
jne
sbb
mull
jnp
test
sbb
mov
inc
mov
movsl
push
cltd
jnp
roll
sbb
fsubrl
mov
lcall
subl
je
fwait
mov
mov
cmpsb
movsl
mov
ret
jmp
sub
sub
