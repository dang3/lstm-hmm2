push
push
call
cmp
jne
push
push
push
call
mov
xor
inc
ret
xor
ret
push
mov
push
call
pop
ret
push
mov
sub
push
push
push
call
mov
movl
mov
mov
push
push
push
push
push
push
push
push
call
add
cmp
jne
call
test
je
movl
jmp
mov
xor
mov
mov
dec
mov
mov
mov
mov
mov
mov
shl
mov
shr
or
mov
mov
and
mov
mov
xor
push
pop
div
mov
mov
sar
mov
push
mov
neg
sbb
and
push
pushl
call
mov
andl
jmp
mov
inc
mov
mov
dec
dec
mov
cmpl
jae
mov
movzbl
mov
and
movzwl
and
movzbl
xor
mov
add
mov
jmp
xor
inc
mov
dec
mov
cmp
je
lea
jmp
mov
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
mov
mov
add
mov
add
mov
mov
lea
jmp
call
xor
inc
pop
leave
ret
int3
int3
pop
das
enter
cld
add
pop
jg
jecxz
cld
cmpsl
push
shrl
iret
fnop
cli
imul
push
js
mov
mov
sbb
fs
adc
cmpsb
das
ret
push
inc
add
out
add
lret
js
dec
lahf
adc
sbb
ss
fcmove
mov
sub
leave
lds
xorl
add
pop
adc
das
into
push
dec
or
dec
scas
lret
add
daa
in
xor
xor
xor
xchg
lret
hlt
push
mov
shll
fwait
shr
add
mov
and
ss
push
mov
or
test
enter
mov
xchg
in
jg
andb
mov
mov
ds
sbb
sub
xorl
es
jae
xor
dec
cmc
pop
clc
adc
lods
mov
sbb
mov
xor
cmpl
sbb
rcrb
sub
movsb
mov
subl
repnz
and
push
add
jnp
xor
out
or
adc
fiadds
aam
inc
repnz
ds
push
in
cmp
hlt
sbb
xchg
jns
mov
or
mov
and
mov
pop
and
and
mov
or
sub
push
in
xor
inc
or
fcmove
movsl
mov
popf
mov
movsl
xchg
add
imul
scas
cmpsl
mov
sbb
mov
cmp
jb
mov
cmp
pop
jnp
pop
xchg
loop
and
mov
dec
sbb
aad
jge
rcrl
aam
mov
dec
and
mov
cmp
adc
xor
movsb
mov
movsb
div
adc
jns
push
push
xchg
push
insl
jle
outsl
lods
mov
jbe
pop
xor
in
test
imul
loopne
jge
mov
dec
insl
movsl
out
pop
imul
pop
xor
pop
popa
and
pusha
mov
lahf
push
mov
and
mov
mov
and
push
and
cli
mov
ss
popa
daa
test
pushf
cmpsb
inc
sbb
shll
dec
cmp
sbb
icebp
lods
sahf
xchg
sub
inc
into
ja
or
aad
dec
leave
xlat
mov
pushf
in
enter
pop
shll
sub
cwtl
lret
push
mov
mov
inc
mov
mov
movsb
daa
jg
aam
push
or
std
mov
les
imul
das
mov
andb
mov
out
add
cmp
mov
push
lret
cwtl
icebp
mov
rolb
add
rcll
or
std
int
xor
and
adc
pop
pop
sub
mov
jo
jl
mov
xor
xor
ljmp
xchg
lods
movsb
add
fucomip
jno
dec
push
testl
cmp
pop
ret
and
arpl
ljmp
cmp
lods
mov
jmp
in
push
out
cmpsl
fistpll
test
out
daa
out
xchg
cmp
sbb
push
and
push
les
pop
inc
jp
push
call
sbb
pop
push
fistps
xchg
test
inc
dec
rolb
rcrb
ss
int3
sahf
lret
xor
je
xchg
insb
push
xor
repz
xchg
out
mov
xor
mov
mov
add
mov
pop
xchg
and
push
fldpi
mov
cs
or
fchs
arpl
popf
fs
clc
mov
jno
mov
xor
or
adc
or
xor
data16
pop
fdivrs
mov
or
lods
fidivl
pop
xchg
inc
inc
ljmp
or
dec
and
in
dec
getsec
mov
insl
imul
push
mov
inc
addr16
fwait
in
mov
adc
movsl
es
hlt
jge
push
push
dec
adc
ss
popa
push
cmp
lods
xchg
cmp
loope
bound
inc
mov
jg
pop
stc
cmp
cmp
dec
jmp
sti
cwtl
data16
rolb
and
push
cmp
lock
bndstx
jle
jmp
inc
jle
lods
mov
sbb
push
arpl
cmp
fninit
fs
fdivs
cmc
cmc
pop
mov
and
inc
sub
ja
fidivl
pop
sub
cmpsb
data16
adc
jg
adcb
cmp
arpl
ret
sbbb
lret
xchg
daa
pop
or
xchg
cmp
lret
outsb
test
jmp
repz
fldcw
inc
pop
mov
stc
pop
daa
popf
test
inc
scas
push
jno
out
lods
divps
xorl
mov
and
fs
push
outsl
fcomps
outsl
dec
test
movsl
xlat
adcl
adc
mov
xor
and
iret
pop
popa
mov
das
in
sbb
dec
mov
lds
sarl
mov
test
sbb
push
cmp
aad
mov
repz
or
inc
mov
and
push
pop
sti
jae
push
mov
das
in
rcrl
sbb
into
std
and
dec
loop
sbb
std
in
sti
push
mov
bound
pusha
es
mov
fisttpl
aaa
movsl
fwait
and
sbbb
xchg
out
dec
xorb
aas
dec
addr16
cld
push
cmp
les
xor
fisubrs
mov
mov
push
dec
mov
push
cwtl
xchg
inc
and
aad
add
or
add
adc
sbb
xchg
pop
shl
movups
and
add
sbb
and
daa
push
cli
xchg
inc
pop
and
das
in
out
imul
sub
gs
fsubrs
int3
dec
lods
in
hlt
xorl
jge
xchg
iret
not
int
int3
lahf
mov
shl
fisubrl
mov
add
mov
stos
lret
pop
jbe
sbb
clc
pop
dec
loopne
fwait
les
cli
jno
push
aaa
jmp
pusha
adc
addr16
sbb
and
inc
jo
lods
data16
adc
pop
pop
or
test
cmp
iret
xchg
push
mov
les
jb
int
or
mov
popfw
inc
mov
cmp
xor
pop
add
add
jecxz
mov
mov
je
xor
pop
sbb
stos
shrl
test
cmp
cmp
repz
push
fwait
xchg
sub
popa
mov
inc
arpl
lret
add
in
int3
add
sti
push
scas
popf
out
pop
inc
mov
ror
or
mov
repz
jno
stos
xchg
insl
add
xorb
sbb
xchg
mov
or
dec
and
and
loope
push
out
enter
sub
lahf
xchg
sub
cmpb
xlat
xchg
in
push
mov
mov
jecxz
pop
cmpsl
jbe
scas
lret
fistl
push
or
flds
push
mov
push
gs
cmp
pop
or
data16
mov
mov
mov
insb
inc
add
pop
pop
repz
movb
shll
push
sbb
mov
add
imul
mov
or
mov
aaa
jecxz
aad
mov
pop
enter
stc
xor
dec
fs
xchg
inc
movb
scas
gs
lcall
leave
or
cmp
cld
push
cli
int
jbe
sti
dec
test
cltd
sbb
xchg
fistpll
iret
leave
data16
ror
fwait
cmp
pop
xchg
stos
adc
pop
push
fwait
jb
sub
addb
ja
mov
pop
adc
pop
stos
ret
mov
mov
sbb
adc
popa
stc
push
leave
sub
je
xor
mov
dec
mov
mov
or
shrb
mov
out
inc
push
pushf
push
jmp
pop
cld
ljmp
or
je
mov
or
and
and
in
or
bound
cltd
ss
sbb
sbb
or
xor
rcll
mov
addr16
cmp
jo
orb
push
mov
push
push
out
add
sbb
cmp
das
fisttps
mov
cmpsl
mov
mov
outsb
stos
mov
les
cwtl
lea
or
pop
mov
sbb
insl
push
xor
clc
test
data16
cmp
daa
aam
push
mov
adc
xchg
pop
mov
or
push
jo
std
cmp
sub
pop
push
push
or
cwtl
jno
jno
or
shll
jp
lock
es
ret
xchg
enter
cmp
rorl
in
test
push
repnz
loop
mov
pop
xchg
lock
aam
lods
out
mov
fiadds
xchg
das
cltd
loope
mov
pushf
xchg
or
sbb
fwait
lea
dec
insl
jmp
xchg
stos
cld
dec
xchg
adc
xor
lret
xor
popa
fwait
cmpsb
hlt
cmp
mov
cmp
inc
pusha
xor
lcall
idivl
mov
test
int3
mov
aaa
movsb
mov
pop
jnp
sbb
std
ds
jb,pt
outsl
test
ret
mov
inc
cmp
inc
push
push
jecxz,pt
mov
stc
jbe
ja
inc
pop
into
mov
or
mov
test
mov
xor
sbbb
jg
push
out
loope
sbb
sbb
stos
dec
mov
fidivrs
ret
repz
jg
dec
pop
cli
jb
jbe
or
push
and
pop
or
sbbb
arpl
testl
jnp
adc
les
enter
dec
xor
mov
jno
cmc
sbb
sbb
cmpsb
cli
dec
push
inc
jg
scas
lock
or
dec
out
push
lock
adc
test
push
test
adc
ror
lahf
and
xchg
outsl
mov
test
ret
push
add
pop
lahf
xchg
shll
cmp
xor
sub
pop
cmp
faddl
pop
sahf
inc
or
jmp
rclb
add
nop
test
scas
ret
call
mov
imul
int3
adc
pushf
lret
mov
push
js
cmp
jae
fdiv
ss
jmp
xchg
dec
nop
xor
loopne
loope
sbb
sub
das
or
sub
pop
mov
cmp
sbb
test
addr16
das
jl
inc
es
adc
adc
xor
daa
gs
test
clc
xor
fdiv
imul
out
lahf
xchg
cmpsl
mov
pop
push
adc
scas
out
mov
add
mov
inc
orl
test
je
pushl
cmpsl
mov
imul
loop
aam
and
std
in
xchg
xchg
push
push
mov
cltd
mov
pushf
repz
outsb
out
icebp
adc
sahf
mov
divl
dec
or
sahf
fdivrs
jbe
ficomps
inc
xchg
iret
push
rorb
loopne
sti
pusha
ljmp
movsb
pop
inc
rorb
ja,pn
jg
or
push
aad
and
fldl
ja
movsb
inc
mov
dec
inc
jns
sarl
pop
add
dec
adc
lock
sbb
sbb
xor
imull
xor
jo
jp
repz
mov
imull
in
repnz
fcmovbe
rorl
or
xchg
push
xor
pop
sbb
add
fadd
mov
call
pop
fwait
out
aam
mov
push
and
popa
bound
mov
int3
dec
scas
mov
cmp
cltd
mov
call
xor
out
or
int
cwtl
jns
sbb
xlat
mov
cwtl
xor
fistpl
out
cmp
push
addb
inc
shlb
testl
cmp
mov
out
cmpsl
rep
leave
outsb
jo
rcrl
in
sti
aad
int3
mov
in
movsl
mov
dec
stos
in
push
inc
aad
int
es
cli
push
es
lcall
jno
stos
pop
pop
xchg
fwait
or
sti
push
fs
std
out
and
dec
or
jmp
jge
cwtl
xlat
imul
add
out
fisubrs
addr16
xchg
jmp
mov
pushf
dec
mov
push
push
ret
xor
push
pop
add
cs
out
sbb
or
and
add
ret
test
cld
xor
cmp
sub
stos
sub
jmp
push
pusha
repz
and
add
xchg
mov
lret
scas
mov
mov
or
jbe
dec
aas
fmul
push
jecxz
mov
jnp
scas
inc
ja
push
pushf
cli
hlt
cmpsl
mov
inc
cmp
arpl
jecxz
and
dec
mov
add
adc
test
rcll
xor
sahf
das
xchg
in
in
lock
addr16
into
inc
imul
add
pop
and
push
sbb
push
inc
std
fs
mov
cmp
in
mov
mov
jl
shll
sar
mov
mov
mov
int3
les
jg
xor
call
inc
inc
pop
cmp
xchg
fldenv
nop
mov
cmp
sub
jnp
inc
pop
xchg
pop
roll
lret
notb
dec
jmp
rcll
xor
mov
in
idivb
sbb
out
fistl
aad
mov
loope
jb
sbb
add
sti
jg
bound
mov
aam
xchg
lods
aad
div
mov
stc
xchg
and
lahf
jl
inc
outsb
in
bound
cmp
rcrl
leave
std
fnstcw
push
dec
movsl
or
jbe
cmp
mov
test
and
push
push
fs
or
jp
pop
out
loopne
pop
ljmp
rol
xchg
inc
test
sbb
dec
shrl
repnz
pop
adc
sti
aaa
out
adc
adc
jae
adc
outsb
xor
icebp
fsts
cmp
test
pushf
xor
aaa
out
cs
cmp
pusha
icebp
mov
xchg
popa
js
not
adc
jne
adc
ret
push
push
inc
pop
inc
inc
test
dec
sub
jmp
or
xor
ljmp
mov
mov
cmp
dec
or
add
and
cmpsl
dec
loope
cmp
pop
inc
int
cwtl
jno
or
jmp
cmp
dec
inc
sub
xlat
rorl
fbstp
adc
push
call
sbb
fdivs
xor
adc
mov
pop
jmp
pop
jno
mov
adc
test
gs
xchg
and
pop
dec
inc
xor
popa
lcall
and
inc
xchg
shlb
add
add
xchg
aaa
jns
pop
outsl
mov
outsb
dec
cmp
ret
cmp
adc
mov
push
inc
push
iret
pop
adc
cmpsb
inc
loop
adc
bswap
mulb
lcall
pop
ljmp
sub
pop
pop
dec
lea
and
pop
loop
int3
sub
inc
in
pop
xchg
sub
mov
lret
les
jecxz
cmpsb
mov
icebp
inc
mov
dec
sbb
push
out
mov
loop
loop
xlat
inc
pop
in
adc
adc
je
lret
in
gs
ss
orb
scas
xchg
pop
inc
test
or
mov
fldcw
push
out
outsl
decb
je
cs
or
movsb
jnp
xor
pop
push
pop
sub
aam
dec
repnz
push
jmp
or
sub
xor
fadd
jmp
popa
jo
pop
stos
mov
loope
pop
and
test
shrl
push
lds
xor
pop
sub
or
mov
popa
loope
hlt
mov
pop
sbb
movsl
sub
fnsave
notb
fcmovnu
or
xor
rol
lock
arpl
mov
repnz
xchg
and
push
addr16
jnp
push
jg
push
cmc
dec
sub
push
aam
idivb
xor
fiadds
mov
in
pusha
xor
test
cld
dec
and
mov
dec
rorl
mov
bound
add
jmp
in
pop
lahf
int
pop
jge
lcall
fs
or
xchg
pop
cmp
loopne
add
lahf
sub
sbb
xorps
or
mov
push
sbb
push
push
jle
or
jge
lock
push
es
jge
xchg
std
pop
xor
mulb
xchg
mov
cwtl
loop
push
dec
pop
pop
enter
jae
mov
push
cwtl
mov
jne
jmp
pushf
js
loop
mov
mov
push
add
inc
call
ds
aas
pusha
iret
test
leave
mov
test
jge
dec
shlb
adc
leave
cmpl
push
pop
cs
clc
pop
mov
aam
inc
adc
les
cmp
xor
movsb
mov
data16
dec
push
fildl
popf
jne
loopne
or
cmp
mov
ja
aas
and
mov
dec
lea
inc
jns
int
push
popf
pop
fldt
pusha
in
mov
xor
mulb
js
icebp
sti
adc
shlb
jne
push
es
xchg
jno
jb
mov
fisubs
sbb
pmuludq
dec
data16
arpl
fcomi
rcrb
and
das
out
jle
inc
fs
sbbb
xchg
out
es
outsb
das
pop
mov
sub
sbb
or
stos
jmp
dec
mov
mul
aaa
nop
jno
ret
adc
and
lds
cmp
xchg
inc
xor
cmpsb
mov
add
xchg
rorl
mov
pop
add
sbb
adc
in
popf
outsb
pop
cmp
inc
ds
pop
push
mov
shrb
lret
loopne
lret
cmpsl
jg
ds
mov
pop
inc
xor
scas
push
ror
dec
lcall
push
dec
adcl
pop
adc
test
or
jp
ret
mov
das
lea
movsb
cmpsl
insb
cmpsb
in
fdivrs
aas
adc
cs
mov
js
inc
negl
jo
rcrl
addr16
cmp
mov
arpl
xor
stos
adc
mov
sub
push
sub
sub
xor
pop
sbb
jecxz
dec
xchg
push
mov
pop
xlat
stos
dec
insl
xchg
sbb
arpl
mul
or
fmul
adc
jge
in
in
add
mov
fwait
insb
jmp
incb
clc
test
ljmp
ds
loopne
pop
test
adc
adc
or
mul
cmp
jge
sub
pop
sbbb
jno
lds
mov
sbbb
lea
jle
adc
jnp
loopne
lahf
dec
out
shlb
outsb
xor
lods
iret
loop
add
push
lret
daa
out
inc
xor
push
add
pop
mov
sbb
int
dec
cmc
xor
sub
pushf
xor
dec
jns
out
lds
mov
popa
or
iret
inc
mov
stos
imul
sti
mov
sbb
mov
push
call
jne
das
outsb
xorb
into
xchg
lods
in
fdiv
push
test
lds
mov
bound
clc
xor
push
push
daa
mov
inc
sub
test
xchg
movups
movsb
xchg
out
dec
mov
sar
sub
call
mov
adc
dec
lock
mov
xchg
in
or
lods
jns
mov
jl
shr
sub
sub
in
scas
jle
mov
in
shlb
divl
jo
or
adc
scas
gs
lcall
fdiv
xchg
or
jbe
xor
cmp
jmp
cwtl
mov
fstp
or
adc
mov
push
test
or
fadds
leave
adc
jno
mov
or
sbb
out
ds
insl
sub
adc
xchg
aam
push
cld
mov
mov
inc
gs
cs
fadds
mov
lds
jmp
test
lret
fmul
sub
ss
cmp
shll
lcall
jmp
call
outsl
sub
mov
shll
jle,pn
pop
adc
outsl
movsb
cs
lds
rolb
jmp
lea
mov
cltd
push
das
add
pop
pop
pop
or
in
xchg
jae
stos
imul
std
stos
iretw
xchg
cmc
icebp
cmp
mov
pop
fisttps
loopne
mov
imul
pop
out
adc
jno
jg
and
mov
cmpsb
popf
adc
adc
popf
popf
nop
mov
ljmp
leave
jno
aam
lock
dec
add
sbb
loope
pushw
sbb
in
add
aad
cmp
dec
mov
xorl
mov
pop
decb
sub
stos
mov
into
pop
mov
sub
xlat
outsb
fs
mov
add
dec
jg
leave
sbb
mov
cmp
lock
mov
xor
pop
cmc
mov
outsl
cmp
xor
stos
cmp
push
mov
pusha
out
dec
xchg
insb
cltd
add
das
mov
mov
pushf
enter
lret
rcll
sbb
shl
push
jns
mov
inc
xor
ficomps
adc
dec
push
imul
in
nop
add
fstpl
iret
fs
aam
inc
sub
sbb
pop
add
mov
cli
subb
jnp
mov
jp
les
add
push
test
fdivrs
fcomi
aam
jne
cwtl
or
push
push
fldl
outsb
jp
inc
icebp
std
mov
mov
xor
popa
sbb
add
sub
push
std
out
inc
int3
inc
into
popf
or
js
or
pop
sbb
popf
jae
movswl
push
jns
xchg
cmp
mov
xchg
addr16
cmpsb
sti
pop
lret
push
lods
clc
test
movsb
adcl
adc
dec
test
xchg
push
xchg
ret
mov
out
xchg
add
jae
adc
sbbl
icebp
xchg
pushf
mov
test
mov
lock
lea
cmc
lods
andl
mov
xor
dec
jae
lock
sarb
sub
xchg
push
in
sub
sub
adc
mov
scas
add
mov
into
mull
xor
and
xchg
add
push
test
jecxz
push
jp
ret
xlat
jp
shlb
lock
mov
mov
mov
inc
or
xchg
addr16
in
mov
je
pop
leave
dec
call
fnstsw
mov
jg
insl
push
mov
loope
cmpsl
push
sub
mov
movsb
fimull
cmpb
xlat
ror
xchg
stos
sub
ret
sub
xor
clc
loope
movsw
popa
xchg
es
cmpb
inc
xchg
xor
ljmp
mov
movsl
sbb
js
stc
test
jle
xchg
aad
sarl
movsb
xor
cmp
into
lcall
sub
dec
pop
lods
dec
mov
cmpsl
and
lock
daa
stos
dec
rol
js
sub
repz
xchg
jmp
cmp
dec
pop
in
and
les
out
fs
lods
jnp
inc
test
xchg
mov
mov
pop
movsb
inc
dec
outsl
cmc
mov
idivl
jne
sti
mov
xchg
add
xchg
mov
stos
orb
test
iret
jg
sub
dec
sub
push
and
cmpsl
stos
cmpsl
bound
or
adc
movsb
dec
xchg
mov
push
xor
push
jecxz
xchg
fcom
icebp
repz
pop
in
add
and
push
adc
sbb
sbb
pop
push
jmp
or
xchg
push
into
aas
nop
inc
xor
jl
daa
in
aas
enter
std
movsb
outsl
test
test
mov
xlat
cmp
in
shlb
xchg
ret
and
stc
and
xor
xchg
sub
lock
icebp
add
mov
negb
imul
jecxz
xchg
or
shlb
and
inc
test
in
add
and
cmp
mov
adc
adc
mov
jle
dec
mov
pop
sub
sub
or
pop
lds
iret
out
jle
dec
cmc
icebp
addb
xchg
iret
add
cmpsb
lods
pop
insl
xchg
inc
rorb
es
push
fcomip
mov
push
inc
mov
dec
mov
cmp
cli
mov
sub
sbb
mov
sbb
jae
mov
sub
testb
xlat
xchg
and
ret
xchg
cltd
mov
push
dec
mov
or
outsb
jl
sbb
jb
outsl
push
add
nop
or
xchg
sub
mov
sub
pop
dec
imul
dec
cwtl
xor
xor
dec
sub
idiv
inc
inc
cmovg
scas
addl
dec
dec
xchg
stos
mov
daa
adc
dec
pushf
push
leave
xorl
ret
inc
cmpsb
xchg
jo
cmpsl
xchg
rorl
les
dec
xor
aas
dec
hlt
xchg
add
xchg
sub
push
push
jl
pop
push
sub
xor
in
fildll
or
das
rorl
mov
gs
cs
jno
add
js
mov
mov
lahf
pop
cs
std
or
add
nop
and
gs
fsubrl
ret
out
and
testb
stc
ror
jge
aad
test
stc
in
jle
imul
rorb
outsb
out
xorb
nop
cltd
pop
xlat
mov
pop
jne
mov
lds
insb
fidivs
mov
pushf
xor
adc
aas
inc
jae
xor
jl
clc
jge
inc
dec
mov
stc
xor
push
push
jl
imul
pop
rorl
insl
popf
add
fdivs
int
sub
div
cmp
xchg
fs
pop
subb
push
inc
jb
xchg
sbb
sub
xchg
call
add
clc
addr16
xor
gs
xor
jle
lea
xchg
mov
jno
lret
rolb
ret
mull
stos
xor
add
add
mov
pop
push
lds
and
rorl
nop
stos
ja
push
xor
sarl
es
add
sbb
push
sub
aam
mov
pop
or
inc
sti
push
sar
push
adc
les
jns
adc
test
pop
or
data16
sub
movsb
stos
scas
fmull
mov
movsl
ja
and
loop
rcrl
mov
xor
mov
cld
std
lcall
add
aam
inc
ja
xchg
pop
loope
cmp
xchg
dec
mov
inc
fistl
sbb
movsl
and
aam
sbb
jle
inc
mov
push
add
pop
jb
insb
and
add
cmp
add
hlt
xor
clc
in
notl
jecxz
fmul
dec
push
pop
sub
lock
push
nop
mov
imul
mov
cmpsb
sub
ja
xor
rcl
dec
inc
repz
imulb
jns
adc
lret
add
aas
aad
mov
pop
mov
shlb
gs
add
xor
pop
inc
loopne
outsl
in
push
inc
cmpsl
ret
mov
mov
shlb
xchg
in
adc
inc
sub
push
in
mov
hlt
pextrw
subb
xchg
icebp
push
aaa
jecxz
mov
js
lret
add
mov
pop
push
add
daa
insl
pop
flds
repz
dec
mov
iret
std
lea
imul
sbb
movsb
mov
jno
mov
or
and
push
mov
push
cmp
jle
repz
loop
inc
aam
sar
pop
xchg
add
pop
mov
jp
add
sbb
fnsave
in
imul
fldcw
xchg
test
aam
cmp
scas
push
popa
lret
jp
mov
mov
xchg
imul
scas
cmpb
repz
mov
push
inc
mov
xor
pop
sbbb
adc
cwtl
hlt
pusha
repz
int
adc
cmp
inc
jno
jecxz
fidivl
jno
jo
mov
mov
jl
dec
and
nop
and
imul
nop
test
test
xchg
pusha
mov
pop
inc
xchg
dec
mov
mov
mov
enter
shl
cmp
push
adc
push
pop
mov
pop
mov
dec
imul
rorb
std
or
ss
shll
rsqrtps
fmull
enter
mov
repz
popa
test
xchg
push
repnz
cmp
add
or
jle
sbb
push
cmp
out
xchg
leave
mov
fwait
mov
cmp
mov
dec
mov
dec
lock
xor
les
cmpb
dec
sbb
fnstenv
mov
sbb
fmull
or
xchg
jl
push
lds
cmp
imul
cmp
out
fs
cmp
fcmovb
rol
push
xchg
imul
leave
add
push
enter
test
out
add
stos
adc
rclb
dec
ljmp
ret
in
cmp
out
cmp
inc
mov
sbb
fldlg2
pop
pop
scas
out
mov
in
dec
pop
fisttpl
test
std
je
ficoms
jmp
lods
mov
sub
adc
add
int
rorb
popf
sbb
aam
adc
sbb
push
push
pop
jecxz
inc
sbb
out
sbb
enter
enter
mov
xorb
sbb
imul
push
mov
xchg
subl
scas
pop
loopne
or
add
dec
mov
mov
sbbb
out
mov
into
fyl2xp1
leave
outsb
int
dec
mov
lods
mov
ja
je
pop
arpl
hlt
sub
jno
and
sahf
and
and
xchg
mov
les
and
mov
movsb
or
inc
call
imul
mov
into
cltd
sbb
call
in
add
rcll
mov
pusha
test
add
pop
sbb
divl
les
rorb
jge
out
insb
outsb
out
fwait
and
cs
repz
mov
jg
jge
je
mov
inc
cld
cmp
sbbl
aad
mov
pop
lock
add
or
loopne
push
ficoms
inc
pop
add
pop
leave
or
cmpsl
dec
xor
leave
lock
pusha
lds
mov
mov
pop
sbb
loop
cmp
add
adc
jmp
inc
xchg
xchg
in
notb
mov
or
add
into
mov
dec
sbbl
push
test
cmp
mov
rorb
popf
xchg
jecxz
or
mov
orb
xor
adc
mov
xor
push
xchg
data16
cmp
mov
mov
dec
jecxz
test
inc
xchg
sub
push
repnz
inc
pop
pop
out
imul
add
xchg
test
jle
adc
fsts
add
mov
adc
mov
ret
mov
sub
mov
push
jno
jbe
in
cmp
testb
mov
gs
repz
shll
mov
lcall
sub
mov
scas
mov
push
push
xchg
or
pop
enter
cmp
aaa
leave
push
call
popa
mov
mov
loop
or
in
xchg
mov
dec
rol
mov
out
sti
subl
pop
stc
and
imul
xor
in
jnp
fs
stc
insl
push
xor
aad
subl
decl
test
repnz
sub
je
xchg
xor
or
into
adc
xchg
adc
ret
sti
jge
jg
roll
test
and
insb
push
decb
sub
dec
or
das
add
rorb
mov
push
ficomps
and
mov
int
sbb
jle
insl
inc
jp
xchg
fimull
inc
ljmp
jo
data16
nop
add
popf
test
mov
icebp
dec
pop
call
test
xchg
jb
jmp
out
mov
or
test
adc
out
jae
movzbl
testl
dec
sub
ja
mov
pop
lret
ficompl
int
adc
roll
mov
lret
pop
xor
dec
sbb
xchg
insb
rcrb
add
out
sahf
stos
or
addr16
orb
repnz
sub
xchg
cld
dec
das
loope
daa
cwtl
xchg
pop
sbb
lahf
pop
stc
dec
mov
je
je
addb
fs
mov
mov
loop
mov
movsl
pop
push
and
stos
xchg
xor
cmpsb
dec
in
mov
inc
sub
in
es
adc
adc
sbb
push
in
sbb
sbb
hlt
loopne
mov
dec
jle
push
std
pop
dec
or
out
inc
fcmovne
aad
inc
push
mov
sub
cmp
fidivrs
in
jo
rcrl
pop
leave
jle
and
sbb
out
xchg
jg
je
stos
bound
add
mov
mov
mov
jecxz
jg
cmpsb
or
sbb
or
shrl
stc
aas
aam
enter
jb
std
adc
push
jbe
clc
rcrl
sbb
lcall
mov
push
outsl
push
ljmp
out
pop
int3
mov
mov
out
adc
pop
mov
push
pop
fidivs
push
repz
and
jae
pop
xchg
dec
fdiv
xchg
adc
into
dec
push
cmpb
pop
das
mov
xor
jmp
fidivrs
filds
adc
call
xchg
dec
pop
aam
inc
push
xchg
js
aaa
std
xor
cmpsb
pop
xchg
or
out
adc
jmp
jp
lods
std
dec
call
ss
stos
sarl
jge
pop
lahf
out
jb
inc
mov
cli
shlb
and
aaa
pop
cmp
or
or
mov
repz
jecxz
and
sar
lock
das
rclb
push
stc
inc
sub
loopne
push
push
pop
jmp
mov
pop
fnstenv
sar
mov
jbe
aas
jle
aas
fldcw
lods
aas
sbb
fisubs
or
sub
movsb
push
cmp
shl
mov
das
int3
fndisi(8087
mov
mov
push
xor
loope
cli
dec
jo
jle
inc
lret
dec
decb
into
xor
cmp
mov
and
test
outsb
rcr
jge
sbb
push
pop
and
call
jnp
mov
xchg
lret
pusha
sbb
int3
cmpsb
data16
je
lock
pop
orl
xchg
inc
vmwrite
pop
or
pop
push
fstpl
dec
jle
inc
imul
pushf
xchg
xchg
loope
enter
inc
cmp
dec
pop
or
loop
mov
sbb
jo
jp
dec
mul
popa
aas
or
jecxz
popf
mov
jnp
inc
js
push
pop
popa
add
stc
adc
or
pop
and
add
repnz
cld
dec
mov
sar
fadds
adc
pop
sbb
stc
pop
dec
push
fs
push
rol
inc
lods
es
or
mov
dec
mov
lret
xadd
mov
mov
jg
push
or
sbb
testl
hlt
jno
fmul
pop
sti
movsl
cmp
test
fcmovbe
add
and
adcb
cs
stc
cmp
popf
fwait
push
mov
repz
add
cmpsl
cmp
or
loopne
cmpl
enter
sub
push
pop
scas
pop
sti
fisttpll
pusha
in
int3
aam
fbstp
cwtl
idivb
dec
mov
mov
aaa
int3
fildl
lods
loope
fstps
loopne
mov
mov
mov
ret
sub
mov
jl
mov
adc
rcrl
xchg
and
xchg
mov
aaa
pop
test
imul
jecxz
pop
xchg
fisubs
sbb
xchg
mov
cmpb
test
or
fwait
jo
sbb
cmc
dec
outsb
rcl
popl
fisubrs
jmp
cwtl
out
xchg
cmp
inc
push
sbb
lds
inc
call
mov
inc
into
fsubr
jecxz
jnp
inc
jb
pusha
and
leave
jmp
mov
adc
mov
cmp
jecxz
movb
pushf
xchg
cmp
sbb
mov
lret
push
dec
jae
gs
cmp
lods
mov
arpl
lret
inc
or
sub
or
dec
icebp
add
lahf
daa
shrb
adc
sub
test
iret
and
push
and
cmpsb
mov
mov
add
fisttpll
mov
out
inc
jge
add
js
dec
xchg
cmovno
jbe
add
mov
xor
lds
test
sub
icebp
mov
out
xor
pop
pop
or
sti
inc
pusha
mov
scas
xchg
pop
and
mov
outsb
sbbb
jge
jae
stc
xor
xchg
add
fldl
leave
mov
pop
test
sahf
ja
icebp
xchg
in
imul
push
mov
or
mov
xor
inc
cmpsl
mov
pop
jge
lahf
mov
fwait
mov
mov
jl
mov
sbb
rcll
subl
cld
adc
in
ss
cld
lret
pop
push
out
push
push
stos
lds
pop
sub
mov
ljmp
inc
lods
pop
jne
xor
fildl
movsb
popl
test
clc
fwait
inc
std
faddl
jg
sub
jo
lcall
dec
lret
mov
in
mov
incb
mov
out
loop
in
push
push
frstor
inc
push
pop
int
jle
addr16
jp
arpl
mov
outsl
into
xor
or
mov
push
imul
addr16
or
popa
movsb
lods
int
subb
push
mov
push
dec
mov
outsl
imul
xchg
fs
neg
xor
inc
fnstsw
pop
pop
pop
mov
inc
jne
dec
fsubrl
push
mov
clc
sbb
and
test
push
inc
out
or
rcrb
data16
cwtl
adc
pop
mov
adcl
xchg
add
cmpsb
cld
mov
and
mov
mov
sti
popf
fwait
mov
sbb
test
push
in
mov
mov
add
out
sub
scas
daa
push
mov
jge
mov
push
out
or
mov
and
addr16
mov
inc
inc
rol
mov
lret
mov
add
add
mov
mov
ss
mov
xlat
into
mov
shrl
xchg
lret
call
sub
lods
mov
or
jmp
sub
xor
add
fdivrs
jle
xor
fimull
push
fsqrt
movsb
push
adc
xchg
jae
arpl
jmp
enter
pop
mov
inc
test
cmpsl
test
mov
xchg
scas
cmpsl
or
push
push
cmc
inc
sar
or
ret
in
cmp
xchg
mov
mov
xchg
es
jno
addl
aas
imul
or
add
inc
sahf
scas
jae
lret
incl
mov
pop
push
loop
pop
mov
iret
arpl
aas
jg
andl
icebp
mov
es
dec
movsl
and
cmp
out
push
sub
or
scas
aaa
jge
adc
cmp
cmc
incl
jns
mov
cmp
mov
jl
nop
and
sub
mov
lahf
mull
test
rcl
hlt
pop
les
cmp
mov
rcll
lock
xchg
or
and
xchg
lods
stos
adc
fistpl
out
ss
xchg
in
pop
cmp
jecxz
leave
leave
dec
xor
mov
rcrl
jno
dec
adc
subb
sahf
cmp
mov
mov
lods
leave
pop
test
jbe
ja
daa
dec
lahf
and
xchg
rorb
aaa
jl
fistpl
ud1
popa
jo
mov
inc
push
jg
inc
addr16
add
fisubrl
aas
std
stos
repnz
shr
or
ret
jbe
sti
mov
dec
movsb
push
add
fs
ja
jo
push
xchg
imul
lcall
or
jg
das
mov
xchg
shll
dec
add
mov
arpl
inc
mov
or
out
stos
or
inc
pop
jle
mov
loope
testl
dec
fisubrs
add
mov
es
rcrb
fdivrs
out
mov
in
or
pop
incl
jb
inc
lcall
icebp
sub
dec
dec
sub
xor
adc
adc
mov
lret
test
in
sahf
adcb
add
repnz
or
loop
cmpsb
pop
aaa
lods
jg
jnp
ficomps
add
jnp
inc
out
mov
lods
mov
push
cmp
xor
push
gs
push
insl
fstp
pop
xchg
dec
stc
js
sub
pop
lahf
ds
cwtl
push
mov
imull
jns
int3
subl
adc
jae
frstor
popa
sahf
jbe
loopne
repz
xchg
lcall
pop
stos
pop
call
stc
icebp
mov
fwait
mov
ss
in
push
jmp
xor
dec
push
mov
icebp
push
repz
xor
mov
sbb
cmp
and
and
sarl
pop
and
in
in
jnp
mov
mov
sub
bound
sub
les
sub
xor
mov
pop
hlt
mov
jle
inc
mov
mov
jmp
adc
xor
lock
test
cmp
fstpl
mov
push
rcrb
std
scas
call
and
sub
cmc
lret
pop
cmc
sub
js
xor
pop
leave
test
cmp
ret
push
fnstcw
jmp
adc
adc
jnp
dec
mov
mov
sub
add
xor
xor
xor
xor
xor
xor
xlat
fbld
aaa
xor
xor
pushl
push
aaa
cmpsl
outsb
outsb
popa
mov
dec
mov
jae
inc
bound
jae
mov
pushl
pushl
pushl
pushl
call
ret
adc
ret
data16
aaa
xor
and
mov
subb
add
aas
aaa
adc
std
xchg
adc
adc
jns
fisttpll
push
push
cmp
pop
cmp
sbb
xchg
fidivrl
dec
mov
movl
ss
movsl
rcll
mov
sbb
xor
xchg
imul
mov
cmp
mov
lods
push
test
cmp
and
cs
gs
cltd
rorl
mov
cmp
insb
add
test
pop
add
ss
repz
or
aam
cmp
mov
and
es
push
dec
add
mov
adc
mov
ljmp
push
daa
dec
sbb
or
popa
jo
and
out
lods
xor
push
mov
lahf
pushf
xchg
lods
xchg
mov
repnz
mov
movsb
xchg
stos
pop
add
push
mov
fistps
sahf
mov
ret
jo
adc
dec
ss
fucomip
mov
stc
push
jns
leave
adc
fwait
mov
sahf
sub
inc
xor
pop
inc
xlat
in
mov
lock
adc
incb
jecxz
rclb
out
pop
mov
mov
out
fwait
insl
fs
adc
jle
cmp
fistl
movd
push
jg
lea
dec
mov
jge
xor
sahf
inc
nop
out
dec
push
insl
bound
inc
or
jmp
mov
xchg
jns
ss
imul
loope
cmpsb
pop
xchg
fwait
push
mov
inc
mov
stos
das
mov
jg
and
lds
insl
cmp
xchg
mov
lret
and
mov
adc
js
cmpsl
das
push
mov
ljmp
mov
mov
push
out
shrb
jle
push
loopne
xor
mov
add
xor
sbb
clc
fwait
and
ret
cmp
sti
push
xor
pop
das
xor
imul
or
daa
add
js
pop
shlb
in
loop
mov
aaa
stos
push
in
bound
lods
test
pushf
mov
mov
leave
inc
ja
pop
fwait
sub
ret
mov
push
mov
sbb
shll
and
adcl
mov
mov
loope
iret
adc
cld
inc
je
adc
add
clc
mov
mov
lods
mov
fisttpl
pop
pop
sub
cmp
aad
and
out
jg
std
jp
test
imul
ficomps
xor
dec
or
jle
pop
push
cwtl
mov
jno
out
nop
dec
add
cmp
mov
xchg
adc
cmpsl
mov
jecxz
addr16
jmp
dec
pop
push
fbld
fnstsw
push
jnp
inc
or
or
push
or
stos
je
sbb
cwtl
and
mov
shrb
xlat
int
xor
fadd
cmovge
push
xor
and
xchg
or
ljmp
cmpsb
cmp
mov
popa
test
pop
push
lret
mov
xor
push
cltd
cmp
mov
lret
imull
aad
adc
int3
push
fimuls
xor
push
sahf
adc
leave
cmc
outsb
xor
or
adc
pop
bound
pop
mov
pop
cmp
out
into
fs
add
je
mov
divb
lods
mov
adc
hlt
push
fisttpl
pcmpeqw
clc
sub
adc
cs
push
outsl
sub
andl
mov
fldcw
jle
adc
in
mov
inc
pusha
inc
add
clc
dec
adc
lods
jmp
cmp
cmp
inc
mov
fstps
imull
jecxz
dec
fbld
arpl
pop
into
or
stos
add
mov
icebp
dec
shlb
cld
test
clc
push
push
add
movsb
mov
fmull
cld
inc
repz
fistpl
ror
xchg
pop
clc
and
out
shr
push
xchg
adc
sub
mov
mov
adc
je
psllq
lds
cmp
sbb
pusha
ljmp
pop
push
sahf
jp
outsl
push
mov
push
xchg
sbb
push
sbb
inc
rclb
or
js
fs
clc
cld
or
lahf
and
jl
js
sbb
cmpl
jne
and
jg
sub
ljmp
mov
imul
xor
in
pop
lahf
cmp
jb
pop
xor
insl
mov
jno
mov
test
aas
aam
mov
xchg
pop
add
inc
adc
into
push
je
add
push
imul
pop
push
xchg
int
add
lcall
out
jb
daa
popf
xor
push
in
pop
cmp
add
mov
cmp
scas
add
gs
scas
xchg
sbb
stos
adc
das
sti
orl
dec
sbb
dec
sahf
mov
jns
add
dec
hlt
ljmp
daa
mov
fsubs
ja
push
pop
and
xchg
jge
jge
fsub
push
sub
jbe
pop
adc
nop
ss
addr16
lret
pop
pop
ljmp
jmp
call
shlb
subb
mov
fwait
xchg
lcall
xchg
movsb
outsl
scas
dec
xor
insb
mov
inc
fisubs
das
push
jecxz
mov
or
sbb
push
lret
sub
cmpsl
in
movsb
fcompl
in
fdivrl
movsl
jp
aas
jne
pop
add
and
push
aas
push
jo
cmp
je
cmp
or
in
fwait
pop
dec
hlt
or
jl
notb
test
repnz
js
pop
divl
sbb
ss
rorb
xchg
sub
mov
pop
mov
aam
jnp
and
fwait
pop
jnp
rcrl
lds
pusha
xchg
mov
lods
adc
rep
and
insb
push
hlt
cmp
xor
loopne
ret
sub
xor
add
xchg
push
stc
movsl
sbb
testl
xlat
mov
mov
mov
insb
jne
dec
test
xor
sbb
or
xchg
dec
push
mov
mov
jg
cmp
jbe
sti
adc
aam
bound
loop
xorb
or
test
cmp
ljmp
jmp
jno
aaa
xor
sub
imul
ljmp
mov
icebp
movsb
movsl
nop
iret
pop
mull
lds
mov
inc
leave
pop
inc
xchg
loope
push
mov
mov
sub
adc
sbb
and
mov
stc
rcrb
cmpsb
add
push
lods
or
push
aas
mov
fisttps
into
call
out
pop
iret
lea
add
dec
outsl
fmull
add
das
add
and
mov
cmp
les
and
test
sub
int
fwait
test
dec
cmp
adc
lret
jne
shrl
scas
hlt
xor
cmc
and
xchg
pop
aad
push
insl
mov
mov
dec
iret
aad
inc
dec
xor
loop
call
xchg
cmpsb
aaa
jo
fmull
cltd
imul
mov
hlt
mov
iret
mov
aad
lcall
call
mov
jmp
xchg
and
cs
mov
lock
add
fmul
pextrw
and
xchg
dec
jle
ret
xor
sub
das
jb
add
pop
xor
xchg
adc
lahf
nop
jle
dec
sub
add
mov
inc
popf
cmp
push
dec
lahf
jg
mov
out
push
mov
mov
sub
or
mov
add
rcrl
or
outsl
push
lret
wbinvd
aam
imul
ss
shrb
int3
adc
mov
movsb
repnz
fwait
out
inc
mov
adcl
sbb
mov
fidivs
loop
lods
push
les
repz
dec
sbb
gs
int3
sar
pop
mov
jge
notl
xchg
cmpb
push
jns
push
ret
adc
jp
fldl
adc
ret
dec
cli
xor
jb
mov
mov
mov
inc
testl
sub
cld
xor
sub
popl
int
xor
aad
in
sti
dec
out
jecxz
fdivrp
mov
or
clc
sub
in
decl
movntq
out
dec
jns
mov
mov
cmpb
or
icebp
xor
adc
scas
push
stos
xlat
push
and
ja
bound
in
xchg
icebp
xchg
inc
hlt
mov
inc
inc
pop
test
adc
stos
movsl
das
dec
in
or
jae
addr16
push
repz
sbb
pop
shlb
or
nop
push
xor
jmp
bound
mov
mov
lcall
jo
inc
adc
mov
mov
mov
sub
inc
xchg
pusha
xor
add
test
jp
push
nop
add
test
les
jns
or
mov
movsb
push
movsl
scas
jp
fdiv
and
xor
data16
lods
sbb
inc
aaa
cld
push
pop
loope
std
dec
inc
cmp
incb
mov
addr16
int
inc
add
mov
push
aam
jmp
push
or
cld
mov
mov
mov
fstpt
lahf
lods
stc
cmp
in
adc
icebp
and
ljmp
je
das
popa
dec
scas
fcmove
iret
mov
pop
add
mov
add
sbb
mov
leave
xchg
lods
lcall
jo
push
int3
pop
loopne
fisubrs
push
or
push
mov
cmp
loop
sub
push
xchg
icebp
lock
ja
jo
xchg
jg
dec
cs
loope
addr16
lret
xchg
cmp
filds
or
mov
std
jecxz
pop
mov
add
mov
xor
jne
and
lock
rcr
stos
pushf
sbb
icebp
inc
cmp
jp
mov
insl
cltd
mov
xchg
xchg
out
daa
lock
xchg
clc
xchg
daa
mov
lods
stos
iret
loope
lds
das
insb
es
sub
mov
into
jns
mov
lcall
jae
pop
jg
sub
adc
popl
dec
pop
pop
pop
call
jns
fisubrs
cltd
out
outsb
sti
cmpsl
jl
js
fsub
pop
leave
and
xor
call
pop
lods
mov
dec
aam
loopne
jmp
mov
scas
call
sub
ficomps
or
or
or
jo
mov
filds
repnz
add
lea
xchg
xchg
pop
lea
fmul
repz
scas
adc
sub
sarb
lock
mov
mov
sbb
pop
cmpsb
or
fs
or
fwait
pusha
loope
push
jb
ret
mov
cmp
out
incb
pop
nop
in
jg
jmp
cmpsl
ror
iret
or
orb
sbbb
mov
je
xor
shll
pop
cmp
push
jno
into
dec
ljmp
outsl
std
xor
movl
mov
fildll
inc
ret
sub
jo
sub
test
pop
movsl
mov
cmp
movb
cmc
dec
cmpb
xor
jne
lcall
test
cmpsl
bound
std
dec
nop
test
mov
cmpsl
test
inc
aas
cmp
mov
mov
mov
addb
lock
jmp
cli
adc
cmpsb
rolb
enter
push
add
mov
cmp
mov
bound
negl
cli
pop
lds
or
lock
ret
sbbb
mov
daa
mov
jo
mov
mov
out
cmp
sahf
and
push
adc
repnz
test
dec
cwtl
out
movsb
cmp
adc
movsb
or
adc
mov
lea
sbb
mov
dec
rolb
add
cmp
cmp
xor
ret
out
pop
rorl
cmp
aas
jg
jge
rcrl
push
ds
cmpsl
mov
popa
fsubs
xor
aad
decb
pop
adc
scas
sbb
cmp
cmp
cs
rcrb
and
int
pusha
sbb
xchg
outsl
stos
add
xor
and
negb
icebp
fnstsw
sbb
and
jno
leave
fwait
pop
sbb
adc
jo
sbb
pop
sub
xor
mov
push
and
xor
je
ljmp
sar
dec
fsubl
bound
or
push
fs
xcrypt-ofb
cmpsl
test
out
lods
dec
fwait
popa
mov
adc
xchg
cld
jae
sub
xorb
stos
stos
fstpl
mov
sbb
mov
sub
sahf
adc
push
dec
imul
mov
mov
push
out
mov
sub
repnz
and
xor
xchg
mov
out
jge
inc
and
rcr
in
push
call
ljmp
icebp
in
push
stos
jg
testl
pop
and
xchg
es
aad
dec
hlt
inc
or
push
dec
dec
test
ret
stos
inc
inc
jae
and
inc
int3
inc
xchg
enter
movsb
sub
popa
in
mov
push
call
add
ds
inc
dec
pop
cmp
repnz
and
fdivrl
mov
sarl
inc
push
add
js
bound
int3
jae
cld
aad
lret
mov
jbe
ds
mov
lock
dec
es
pop
scas
sbb
mov
xor
scas
or
xchg
arpl
adc
push
cwtl
cmc
adc
jo
jmp
inc
mov
int
dec
out
rcll
leave
mov
lds
pop
aaa
xchg
jnp
movsb
jecxz
dec
jae
add
jmp
inc
jb
test
push
pusha
aad
jo
cmpsb
es
xor
and
jns
ficoms
mov
mov
dec
or
inc
lods
dec
dec
sub
jecxz
pop
lret
movsl
push
xchg
test
fbstp
adcl
inc
cli
iret
int3
insl
cmp
lods
jae
jmp
jmp
sub
add
mov
cmp
cmp
push
jl
fmull
ja
mov
bound
decb
imul
cmp
dec
cwtl
cmp
jbe
mov
test
pop
test
lahf
rep
lds
rcrl
xor
sub
pop
sub
inc
push
push
push
scas
lds
icebp
add
das
dec
les
lahf
adc
loop
jo
pop
add
nop
sbb
cwtl
jecxz
dec
mov
sub
sbb
push
subl
push
or
xchg
xor
pop
pop
movsl
xor
aaa
xor
stos
mov
movsl
sbb
sbb
jmp
xlat
jnp
push
fs
addr16
ror
or
adc
xchg
out
jg
jbe
lret
xchg
popf
clc
ljmp
outsl
pop
push
inc
adc
mov
arpl
pop
test
jo
sub
scas
inc
ljmp
orl
dec
jnp
lods
xchg
jg
mov
insb
fidivl
mov
enter
loope
fwait
aaa
into
cwtl
pushf
std
add
repz
sub
mov
mov
and
jecxz
adc
inc
rolb
and
pop
mov
nop
call
dec
sub
jb
jne
and
hlt
mov
adc
fimuls
in
xor
in
cmp
jno
mov
movsb
add
cmp
sub
mov
loopne
pop
add
mov
add
mov
add
pop
insb
fisttpll
jmp
testl
in
pusha
cmp
pop
imul
faddp
int3
mov
mov
lret
adc
mov
xchg
pop
lea
mov
cwtl
popf
sti
in
sbb
xor
mov
mov
clc
rclb
in
cltd
mov
stos
insb
cmp
sbb
lods
sbb
mov
icebp
lods
push
je
aam
mov
call
dec
lea
hlt
lret
lret
in
addr16
adc
imul
mov
hlt
mov
jbe
sbb
xor
ret
std
push
out
fistl
int
popa
out
cld
cwtl
adc
adc
inc
das
dec
mov
insb
sbb
lods
mov
arpl
in
andl
mov
cmp
ret
push
lcall
mull
mov
mov
lret
lahf
add
adc
xchg
jmp
imul
cmp
mov
lcall
fstl
add
stos
push
out
xor
dec
pop
sub
jae
lret
sub
sbb
enter
push
daa
mov
xchg
outsb
and
aas
test
arpl
sub
sti
xor
les
rcrb
mov
lret
insl
pushf
mov
pop
mov
lock
inc
fcmove
inc
push
loopne
mov
add
inc
in
cmp
pop
mov
sub
xchg
jmp
xor
dec
std
mov
leave
cmpsl
adc
popa
and
ds
ja
pop
cmp
arpl
push
inc
push
xchg
jo
add
sub
test
enter
fsubr
mov
and
popa
xchg
out
cs
ret
out
aas
jns
xlat
push
jg
call
pop
int3
cmc
add
push
clc
js,pn
and
scas
loope
push
or
push
sub
lahf
enter
sub
mov
notl
add
fsub
in
mov
pop
mov
insb
pop
jp
adc
or
loop
je
fnstcw
bound
push
push
enter
stc
push
in
fbstp
mov
adc
pop
shll
inc
xor
cmpsl
and
pop
loopne
mov
cmp
adc
cmp
pop
out
pop
inc
addr16
cmpsb
mov
je
shrb
mov
cmp
shrb
adc
mov
pop
addb
sub
push
fwait
xor
and
cmp
xchg
cmp
icebp
andnps
addb
hlt
adc
pop
mov
mov
ljmp
sahf
repnz
jmp
cmpsb
xchg
stos
sahf
mov
mov
fwait
push
int
test
cli
notb
aaa
mov
enter
dec
outsb
lea
movsl
cmp
in
jne
les
cmpl
shrl
outsl
sbb
aad
inc
and
cmp
sub
dec
pop
inc
fildll
add
inc
mov
out
negl
inc
mov
pop
nop
call
dec
or
dec
cmc
inc
cltd
leave
bound
cld
mov
popa
cmc
add
into
dec
dec
lret
ja
outsl
sar
clc
outsb
or
sbb
test
mov
or
das
xchg
clc
aas
je
ds
mov
or
sbb
imulb
or
cmp
mov
and
divl
incl
into
pop
int
sub
and
mov
inc
fwait
xchg
punpcklwd
cmp
cltd
mov
movsl
or
cs
imul
ret
jae
sbb
mov
pushf
add
mov
cmp
push
jae
jle
lods
inc
pusha
mov
ror
mov
and
mov
subl
lods
push
mov
jecxz
pop
loope
or
xchg
mov
jmp
jo
add
adc
inc
sub
mov
notb
in
int3
xchg
ficoml
jb
ret
mov
mov
adc
bound
cmp
sub
lcall
jp
xchg
loopne
sahf
lock
in
pop
gs
fimuls
xchg
xor
sub
jecxz
cmp
pop
jns
loope
divb
jb
movsb
sbb
negl
repnz
xor
in
sub
into
xchg
add
fiaddl
aas
jg
in
pop
lcall
shlb
mov
cmp
inc
fldcw
notb
dec
jo
mov
cli
pushf
pushf
aaa
mov
cmp
pushf
mov
xchg
sub
decb
iret
dec
mov
rolb
push
rcr
sub
and
test
sbb
mov
out
push
push
inc
and
icebp
ljmp
test
push
xor
or
mov
sub
inc
into
out
lods
jg
sub
insb
fistpll
or
xchg
add
nop
mov
adc
lret
xlat
sbb
cmp
pop
outsb
sub
cld
or
addr16
test
ljmp
or
pop
jbe
fsubrl
in
shl
cmpsb
cs
lods
sub
jg
scas
lcall
sbbb
shl
ds
jbe
ror
cld
push
adc
xlat
nop
aaa
cwtl
lret
xor
imul
cld
sub
js
outsb
loopne
mov
push
ljmp
les
repz
sbb
inc
nop
push
inc
je
mov
mov
dec
inc
out
adc
and
xor
pop
jmp
dec
in
fcmovnbe
lcall
push
cs
mov
pop
test
imul
cmp
lahf
test
pop
adc
pop
mov
scas
mov
dec
pop
mov
add
cltd
cmp
shll
mov
and
pop
mov
mov
cmp
fstpt
fwait
pop
stos
js
push
inc
sbb
fimull
push
or
loopne
xor
out
call
lock
imul
push
xor
ja
test
ret
dec
aaa
scas
enter
fnsave
add
or
outsl
xchg
dec
cmp
add
inc
push
repnz
stc
int
jmp
mov
jae
push
ja
lea
xchg
mov
or
je
sar
out
sahf
sbb
mov
xchg
add
jns
std
pop
lds
xchg
repnz
test
popa
xor
mov
push
call
sub
dec
sbb
sar
fisubs
lcall
fstpt
mov
mov
imul
xor
dec
push
sub
pop
pop
lock
cmp
lods
arpl
jle
and
rorb
jp
dec
jae
sub
subl
lret
aad
faddl
xor
stos
sub
inc
push
cmp
or
mov
out
mov
fs
dec
mov
dec
cmp
mov
push
shll
mov
cwtl
or
xchg
pop
sbb
lock
push
push
xor
adc
xchg
out
inc
rcll
jmp
int3
or
sub
mov
lcall
push
mov
push
pop
pop
ret
test
jle
xor
mov
mov
stos
mov
xor
bound
or
xor
mov
cmp
jnp
roll
dec
sub
test
sub
dec
rorl
xchg
and
out
popf
fwait
jo
in
aaa
cmc
arpl
rcll
mov
jbe
jno
test
call
jmp
xor
lods
stos
shll
and
nop
sbb
jge
and
jns
ficompl
pop
cmp
jbe
addb
mov
mov
popf
bound
cmc
xchg
add
inc
shlb
and
and
xchg
mov
sti
cmp
shrl
sbb
sub
add
mov
sahf
xor
pop
iret
mov
movsb
xchg
adc
rcrl
add
hlt
cmp
adc
jo
jo
div
pop
mov
pop
testb
adc
jecxz
mov
push
mov
ffreep
xchg
cld
jae
loopne
andb
repnz
jg
pop
jne
push
jmp
mov
mov
ljmp
sbbl
cwtl
scas
adc
jecxz
sub
lcall
arpl
lcall
push
dec
sbb
jb
mov
frstor
addr16
clc
aad
std
push
ss
mov
push
inc
jo
mov
pop
inc
xchg
adcl
cmp
je
cmpsl
cmc
mov
sbb
xchg
mov
adc
mov
es
arpl
loopne
lock
jecxz
loope
mov
pop
pop
jge
sbb
sbb
pop
fisubs
dec
int3
add
dec
insl
jae
jecxz
divb
mov
negb
das
ret
fstpl
push
fisttpll
jecxz
je
xor
cmp
cs
mov
dec
dec
pushw
mov
imul
push
and
popf
cld
in
scas
mov
insl
mov
xor
cli
xlat
adc
mov
rolb
dec
mov
sahf
outsl
mov
dec
sbb
aaa
add
jae
test
rclb
movsb
inc
shll
dec
cmp
es
mov
cld
outsl
pop
mov
subb
test
fisubrs
adc
inc
lock
inc
lock
jecxz
inc
jo
pushf
sub
inc
dec
aas
popf
dec
pushf
imul
cwtl
sbb
push
lds
mov
jmp
jns
pop
xor
shl
es
movzwl
insb
lret
in
adc
repnz
xchg
xor
outsb
cli
lret
or
and
sub
andl
arpl
movsb
aaa
rcrb
pop
rorl
dec
adc
loope
negl
imul
sub
or
stos
dec
cmpsl
or
out
fs
jecxz
pop
repz
lret
testb
and
jge
sub
aaa
xor
in
pushf
jno
sub
mov
addr16
add
jg
sahf
pop
addr16
push
in
mov
adc
fwait
lahf
cmp
repz
insb
add
pop
xchg
push
lret
xchg
inc
nop
mov
pop
scas
mov
xor
cmp
pop
pop
jmp
insb
imull
in
bound
or
jp
stos
push
out
jns
xchg
lods
jns
jne
sbb
ds
and
std
fiadds
mov
ds
in
push
ja
fsubrp
js
ds
jmp
pop
loope
and
inc
or
lret
jae
sub
dec
xlat
js
idivl
push
sbb
mov
inc
lret
shr
mov
hlt
frstpm(287
or
add
test
sub
mov
out
mov
pop
mov
dec
mov
daa
mov
cmpsl
jp
add
mov
out
pushf
ljmp
out
pop
out
jb
int3
aas
and
xchg
scas
sub
sub
sub
sub
cmp
loope
push
daa
inc
imul
push
jnp
mov
lahf
stc
xchg
sub
mov
arpl
xor
je
inc
xor
xor
xor
fadds
and
ficomps
mov
ret
test
rorl
std
push
or
push
mov
xor
cld
in
das
mov
shll
jl
mov
xor
lcall
out
orl
xlat
fimull
fidivs
xor
pusha
mov
mov
mov
outsl
jle
push
inc
aad
popa
decl
orl
push
lods
jnp
mov
daa
pop
fistpll
imul
out
or
xchg
xlat
mov
pop
sub
jge
dec
push
xchg
mov
lret
enter
jge
fbld
add
push
push
inc
imul
test
negb
cmp
insl
mov
aad
xlat
inc
adc
xchg
faddl
jbe
addr16
sub
adc
sbb
cmp
sub
add
test
push
mov
das
iret
adcb
jge
cmpsb
cmp
std
scas
movsl
and
pop
jmp
jnp
mov
xor
fidivs
pop
lds
js
fdivl
xorl
dec
int
int3
std
push
push
sub
push
jp
lods
cmp
and
cmp
push
jbe
bound
ficompl
pop
icebp
repnz
mov
mov
fisttpll
shll
dec
mov
and
xor
js
out
sub
fidivl
dec
mov
orl
mov
call
cli
mov
dec
sbb
outsl
sahf
into
outsl
xor
outsb
out
idivb
inc
adc
int3
adc
cmp
cld
or
add
loope
outsb
adc
cmpl
dec
inc
repz
bound
inc
test
or
mov
repz
test
sbb
jno
jns
add
sbb
insl
insl
mov
sbb
pop
pop
pop
arpl
sbb
dec
push
push
push
mov
int3
sbb
ljmp
push
push
cltd
dec
xor
lods
jne
xchg
mov
or
or
shll
mov
rcll
int
pop
pop
push
dec
hlt
push
pop
sub
and
ret
and
ljmp
dec
mov
jg
or
stos
scas
js
dec
pusha
adc
mov
xlat
push
xchg
push
shlb
sbb
push
out
popa
pop
insb
int
and
int
jle
movsl
cwtl
cmp
cs
xchg
ljmp
pop
out
jle
lds
adc
daa
js
xor
xor
mov
push
mov
mov
pushf
cmp
xchg
es
mov
sub
mov
out
popf
decl
pop
cmp
jnp
push
xor
inc
mov
jnp
in
cwtl
dec
push
lcall
push
push
and
shrb
je
or
mov
daa
and
add
fs
stc
ds
and
push
jge
xchg
popf
adc
hlt
xor
inc
jno
cmp
mov
shl
pop
dec
cmpsb
adc
lods
mov
mov
mov
inc
cltd
ss
push
addr16
lret
mov
sub
push
ja
js
jmp
jns
dec
popf
sti
les
jne
jne
add
pop
push
cld
clc
mov
mov
dec
sbb
and
fbstp
sub
jb
jmp
dec
push
sbb
test
push
ja
xchg
or
int3
add
loope
and
scas
repnz
adc
push
adc
insb
testl
lret
xor
jecxz
lret
test
mov
mov
sti
mov
mov
es
pop
aam
inc
clc
push
or
push
dec
cmp
aas
lock
cmp
arpl
mov
pusha
sub
adc
mov
or
outsb
cmp
insl
or
jmp
in
sub
cmp
lret
test
add
add
dec
mov
shll
or
cld
mov
out
inc
mov
jle
fwait
ret
dec
mov
mov
movsl
pop
push
dec
jmp
aaa
xchg
add
rcl
arpl
fs
scas
xchg
movb
push
arpl
jecxz
mov
and
lds
pop
sti
mov
fidivs
inc
shlb
push
cmp
jns
jmp
aaa
insl
pop
std
lcall
adc
int
out
xchg
inc
jmp
xor
or
mov
mov
gs
mov
ret
dec
xchg
adc
test
add
sub
fbstp
test
cmpl
pop
cld
out
adc
aas
loop
mov
cmpsl
js
or
pminub
pop
out
js
cmpsb
push
imul
insb
mov
sbb
xor
arpl
mov
insb
fcoms
outsb
out
hlt
in
inc
into
arpl
rcrl
inc
xchg
out
sbb
mov
repz
mov
pop
leave
sub
out
into
cmp
mov
jle
xchg
popa
push
pop
fidivl
popf
xchg
fwait
out
cmc
in
mov
or
or
sub
push
insb
cli
sahf
fcmovb
shll
mov
sub
or
mov
xchg
jmp
fstpl
push
dec
daa
add
mov
cmpsb
pop
notl
cmp
push
dec
into
xchg
jne
xor
jnp
ror
lahf
mov
stos
pop
fistl
out
push
xchg
out
loope
jb
test
push
scas
pop
pusha
cmp
roll
mov
mov
stos
dec
ljmp
out
push
fisubl
lret
insb
xlat
test
mov
add
mov
and
rcr
insl
cli
test
add
insl
pop
in
lds
out
or
xchg
add
and
xchg
jne
add
xchg
leave
sub
mov
or
fcoms
push
sbb
and
push
sarl
jns
mov
imulb
sub
cmp
jnp
movsb
dec
ljmp
inc
sbb
sti
mov
std
test
mov
cli
push
imul
aaa
aaa
push
fnstsw
sbb
int3
frstor
add
jmp
loope
nop
cmpsl
jmp
insb
int3
scas
pop
dec
jo
push
jno
inc
push
jbe
pop
and
dec
jg
lods
push
mov
out
mov
mov
mov
dec
cwtl
mov
xor
cmc
psubusb
mov
out
out
mov
scas
sti
popa
stos
mov
fiaddl
xchg
pop
jg
dec
pop
xchg
sub
in
mov
or
lret
gs
out
push
and
push
push
ljmp
nop
mov
jmp
dec
out
int3
mov
mov
fisubs
mov
or
dec
mov
lock
xchg
and
sbb
rcr
iret
dec
inc
stos
adcl
and
jl
mov
add
fmuls
imul
ret
std
das
scas
jae
imul
sbb
mov
rorl
out
push
pop
sbb
repnz
repnz
dec
add
fwait
js
inc
aaa
inc
sub
popf
lods
inc
xchg
sub
sbb
enterw
and
ja
and
daa
xchg
lret
test
ljmp
outsl
lret
mov
repnz
fisubrl
mov
cmpsl
add
imul
test
cmp
mov
inc
jae
test
sub
xor
out
popf
jb
jge
mov
rcrb
and
dec
mov
xchg
pop
xorl
mov
lcall
insl
jp
outsb
into
mov
sbb
call
sbb
icebp
adc
and
mov
adc
and
cmp
xor
lcall
lea
pop
insb
arpl
lcall
inc
sub
and
ds
outsl
sub
ja
out
xchg
mov
cmpsl
and
cwtl
xor
mov
lods
pop
xor
test
int
dec
mov
loop
or
adc
lods
mov
push
inc
cmp
jns
push
inc
dec
dec
and
sbb
sbb
fstl
gs
int3
mov
mov
fwait
dec
fstpl
jg
push
scas
dec
fsubr
push
mov
icebp
xchg
adc
dec
scas
insb
mov
sub
cwtl
in
mov
push
mov
scas
sbb
rcl
fstpt
dec
fldcw
lahf
adc
ss
mov
mov
sub
rorl
scas
shlw
inc
pop
mov
jo
adc
test
arpl
adc
jl
jne
push
fdivr
or
pop
add
dec
adc
add
int
jbe
movsb
mov
or
aad
fmull
jle
fisttpll
pop
and
adc
jecxz
xchg
jle
fsts
inc
mov
push
dec
sbb
and
inc
orl
adc
sub
mov
jle
std
cmp
repz
cltd
sub
repnz
stos
mov
xor
cmpsl
adc
leave
out
inc
iret
xor
fstl
mov
mov
inc
leave
int
test
leave
hlt
fdivl
cmpsb
push
in
jb
cmp
push
add
add
pop
fwait
mov
loop
mov
shrb
aas
mov
hlt
xorl
movsl
xchg
mov
mov
and
push
sub
xchg
dec
pop
mov
xchg
gs
addr16
push
addl
xor
lods
or
sbb
dec
scas
inc
inc
cmp
aas
push
and
scas
cmc
sub
test
cmpsl
dec
in
jnp
xchg
and
jo
add
inc
hlt
jp
out
sbb
push
dec
enter
push
sub
repz
cmp
fiadds
popf
gs
clc
or
push
xchg
and
xor
xchg
neg
add
cmp
sti
mov
test
push
test
in
gs
sub
jle
fsubr
dec
lret
mov
or
bound
push
xchg
aaa
sarb
push
add
sub
pop
mov
int
in
sahf
mov
and
pop
sub
or
mov
in
int
mov
mov
xor
popf
je
pop
mov
jle
rcl
out
xchg
push
scas
inc
lods
stos
inc
cld
dec
das
or
push
subl
mov
mov
or
pop
mov
mov
push
pop
fdivrl
push
pop
adc
popf
movb
mov
push
clc
cmc
jg
sti
cmpsb
adc
leave
call
mov
lret
repnz
push
sbb
stc
xchg
mov
inc
dec
jecxz
mov
push
jecxz
test
arpl
mov
sbb
gs
cltd
sbb
stos
mov
fs
or
xchg
push
jae
jge
loop
pop
scas
sbb
addl
jmp
xor
stc
xchg
insl
add
pop
xor
add
lahf
and
lret
bswap
addr16
sbb
jb
aam
mov
mov
add
setg
cmp
mov
aam
insb
mov
std
xchg
lods
cmp
pusha
add
jb
push
pop
mov
mov
jecxz
daa
sub
stos
cmp
xchg
cmp
repz
hlt
out
cvtps2pi
mov
es
sbb
sub
mov
jo
lahf
mov
hlt
xchg
cmp
jno
fcomps
push
pop
inc
mov
out
pop
mov
adc
insl
daa
sarl
mov
dec
xchg
cmp
jnp
lods
pop
jge
mov
aaa
jb
scas
subl
push
push
dec
aas
cmpsl
ret
nop
or
mov
in
aad
sysenter
mov
pop
cmpl
cmp
inc
cmp
sub
icebp
add
imul
mov
xchg
sbb
mov
sbb
sub
cld
les
fidivrl
jp
sub
out
cmpsl
mov
test
popf
mov
stos
jmp
pushf
and
and
int
jb
fs
add
sub
test
dec
pop
fmulp
sub
pop
mov
je
and
pushf
mov
mov
pop
dec
xchg
cmp
in
insl
aas
mov
icebp
and
fcomps
les
push
mov
popa
not
nop
mov
dec
push
mov
testb
aad
add
fstpl
mov
into
int
incl
mov
cmp
cmpsl
xor
push
out
jno
rolb
xchg
xor
jno
sub
in
mov
mov
sub
gs
xlat
jmp
xchg
rolb
ss
lcall
aad
xor
mov
jmp
hlt
inc
fwait
cmp
shlb
lret
xor
mov
fcmove
mov
push
lcall
jmp
gs
sti
rolb
mov
jnp
inc
pusha
dec
hlt
xor
inc
mov
mov
sbb
xchg
rcrl
flds
mov
movsl
inc
push
jp
mov
scas
fnstenv
add
test
or
sbb
adc
subb
add
mov
mov
std
mov
decl
push
mov
not
xchg
scas
gs
push
cmpb
mov
fldcw
jns
xor
add
std
and
rcll
cli
stc
lret
repnz
cmp
mov
dec
pushf
sarl
andb
mov
stos
adcl
loopne,pt
lock
or
mov
lcall
das
jo
pop
fildll
mulb
pop
gs
out
adc
xor
push
cmp
int
sti
mov
std
loopne
scas
adc
xchg
jb
mov
shl
shrb
jge
rclb
mov
lock
cmp
cltd
cli
fwait
hlt
pop
pop
xor
int
out
in
aam
dec
fs
fmul
ja
push
roll
loop,pn
cld
push
sub
out
loop
sbb
adc
cmp
fistl
pop
ret
push
fs
rcl
push
xor
jle
pushf
scas
cltd
scas
loopne
mov
jp
test
dec
add
push
jg
lock
adc
xlat
fbstp
insl
loopne
lret
mov
jbe
push
popa
adc
inc
and
stos
ja
xor
inc
push
jp
nop
dec
jbe
mov
add
scas
lahf
in
mov
and
scas
mov
shll
xor
in
ja
pop
or
enter
sbb
fs
in
mov
clc
jne
stc
loope
cmp
fwait
testb
xor
cld
xlat
cmpsl
hlt
cwtl
jns
nop
push
rorl
push
sub
push
movsl
jne
addr16
dec
or
add
and
daa
movsb
pop
imulb
insl
dec
ds
sbb
addb
cld
inc
mov
mov
rclb
or
add
push
lret
pop
push
aas
sbb
xchg
inc
dec
inc
pop
cld
in
mov
jne
fnstcw
cmp
sti
sbb
inc
jmp
mov
mov
jo
sbb
and
mov
xchg
or
pusha
movsb
mov
and
scas
or
dec
xor
or
imul
xchg
dec
inc
repnz
jne
idivl
cli
loope
cmpsl
push
add
sub
enter
idivb
sbb
mov
repz
and
xchg
aaa
inc
adc
lods
xor
fdivr
rolb
in
mov
outsb
jp
repz
push
jg
mov
jmp
mov
enter
jb
inc
add
fmuls
and
jo
mov
mov
fisubrl
ss
addl
mulb
fimull
mov
lock
add
rorb
mov
outsb
add
xchg
push
mov
dec
jne
dec
cmp
lods
push
adc
ss
fldl
cld
dec
push
add
movsb
push
scas
and
push
mov
cmp
movsl
test
stc
js
push
dec
xchg
xor
mov
xchg
je
mov
cs
shll
xchg
sub
inc
fsubrs
inc
and
subl
js
mov
inc
xchg
inc
pop
adc
je
repz
fimull
fisubrl
fcoml
pop
iret
lods
push
push
inc
mov
adc
mov
mov
jb
dec
vcvtss2sd
push
stos
jge
fwait
jmp
pop
mov
sbb
out
adc
sbb
test
jg,pt
jne
scas
pop
adc
into
icebp
push
cmp
bound
in
sbb
lret
mov
bnd
lea
inc
movsl
and
push
shlb
dec
bound
nop
mov
into
jmp
imul
inc
jns
call
rorl
out
mov
adc
test
imul
push
popa
or
mov
ss
mov
nop
enter
cmp
subl
fisttps
fcmovnb
aad
xlat
xchg
dec
cmc
cmp
cmp
mov
sbb
lods
mov
inc
in
xchg
xchg
adc
and
pop
out
in
call
sub
addb
fisttpl
cmp
pop
adc
jo
lods
insb
push
push
pop
pop
ds
test
mov
notl
mov
fldenv
js
xor
push
fistl
sbb
js
pop
pushf
leave
pop
jo
loop
or
pop
mov
xchg
dec
movsl
hlt
jbe
cmp
pushf
jp
dec
mov
jne
test
xor
mov
pop
jns
and
ret
inc
out
inc
cmp
and
cwtl
inc
es
mov
inc
enter
adcb
dec
lea
and
pop
insl
addb
in
psraw
sbb
inc
push
inc
pop
movsb
je
lcall
pop
imul
add
addr16
cmpsb
jnp
add
lahf
mov
fists
imul
lods
sti
mov
inc
mov
frstor
cmp
adc
les
mov
mov
mov
fstps
std
xchg
cmp
mov
iret
sahf
and
fwait
push
test
mov
stos
and
movsb
stos
cwtl
bound
imulb
sbb
jecxz
adc
and
insl
outsb
movsl
mov
pop
jno
jbe
ret
jbe
test
jecxz
stc
push
mov
pop
imul
push
sbb
add
mov
cld
pop
dec
xor
inc
dec
lods
aam
outsb
sbb
sbb
xchg
gs
gs
aaa
stos
push
test
ficompl
mov
out
xchg
jns
jb
xchg
cwtl
ret
and
pop
cmp
xor
out
sarb
cmpsb
stc
stos
sbb
popa
arpl
pop
lret
mov
ja
loopne
in
imul
sub
fiaddl
sahf
fildl
add
jbe
jae
popf
ret
outsl
or
xchg
negb
cltd
mov
scas
mov
mov
rep
xchg
das
fcmovbe
push
mov
rclb
or
adc
jns
shr
fimuls
ja
mov
scas
xor
test
pushf
xchg
shll
cmp
loopne
adc
insl
sbb
aaa
cmp
lret
adc
out
jnp
pop
repnz
add
push
xlat
xchg
xlat
shrl
repnz
stos
mov
xchg
into
adc
rcl
jb
mov
in
xor
or
outsb
sub
xor
insl
or
bnd
adc
in
les
notb
pop
xor
and
pop
inc
xorb
ret
pop
sbb
in
sub
and
scas
sti
aam
and
repnz
aam
pushfw
inc
dec
stos
dec
mov
fs
inc
mov
in
imul
jo
daa
mov
shll
mov
repnz
add
sbb
dec
push
pop
xchg
sti
leave
and
inc
cmp
aaa
xchg
cli
pushf
cli
mov
xor
test
push
cmpsb
in
ja
mov
fidivrl
imul
mov
loopnew
cmp
shl
fisubrl
lret
int3
xchg
cmp
and
inc
imul
dec
repz
stc
imull
inc
sub
jae
inc
outsl
mov
sub
bnd
dec
testl
adc
ret
jmp
rcr
stos
lret
loope
add
stos
mov
sub
fstl
inc
jge
or
or
sti
mov
mov
int
mov
pop
in
add
inc
scas
push
adc
and
mov
mov
jno
sbbl
mov
or
enter
lret
gs
pushl
std
push
addr16
adc
in
push
cwtl
pop
inc
and
and
dec
bound
out
and
imul
fwait
mov
mov
pop
mov
sub
pop
shll
jae
mov
add
movsb
pop
movsl
shll
je
mov
pop
adc
xchg
shr
int
lds
pop
in
inc
icebp
mov
std
push
dec
pusha
mov
std
or
pop
mov
in
and
in
or
icebp
addr16
xor
push
inc
adc
lock
dec
sbb
push
pop
adc
fidivrl
dec
push
cli
cwtl
add
and
or
mov
mov
les
xchg
mov
stos
xchg
jmp
in
mov
shll
outsl
push
push
in
ret
xchg
push
fcom
rcl
cmp
cs
enter
pop
stos
mov
subl
xor
loope
int3
cli
fstl
scas
jmp
sbb
lds
cmpsl
mov
sahf
rcl
iret
jb
test
inc
xchg
mov
pop
sub
repz
xchg
scas
xorl
bound
xor
rcl
in
enter
idivb
into
loope
cwtl
outsl
aaa
pop
inc
in
in
movsb
mov
enter
imul
pop
sti
mov
add
std
xor
cmp
xchg
lods
movsl
xchg
stc
cmp
cs
mov
pusha
lret
jge
outsb
inc
or
jecxz
jmp
adc
mov
push
jns
pop
pop
pop
or
mov
imul
and
jns
fildll
jmp
call
mov
adc
adc
aas
inc
mov
cmp
cmpsb
mov
lahf
popf
fists
cmp
inc
push
pop
orb
loopne
ja
fidivs
repnz
inc
mov
jmp
testl
data16
mov
icebp
sub
movswl
xchg
and
imul
add
xchg
popa
mov
adc
sub
out
out
add
pusha
lahf
jecxz
jl
sahf
mov
add
cmp
icebp
loopne
popf
xchg
sub
icebp
stc
jecxz
imul
subb
cmp
sbb
int3
xchg
sbb
lea
inc
inc
lods
mulb
in
add
pushf
mov
fistpll
ds
sbb
mov
cmp
xchg
xor
int
mov
sar
lahf
stc
repnz
ret
hlt
xchg
or
add
and
mov
or
imul
lret
das
push
dec
ret
adc
test
popa
out
hlt
out
cltd
cmp
or
mov
cld
lock
xor
add
adc
adc
lods
sub
xlat
cli
adc
sbb
dec
cltd
or
jle
mov
inc
mov
imul
sti
imul
cmp
out
cmp
fnstcw
sbbl
or
lret
mov
xchg
xchg
adc
test
dec
iret
cmpsl
or
dec
jne
or
shrb
lret
subl
mov
nop
cltd
push
mov
clc
data16
pop
pop
add
mov
lds
inc
xchg
and
inc
imul
dec
and
dec
lret
push
cmp
adc
cmp
ljmp
aaa
aam
mov
fcoms
aad
mov
mov
jne
pop
push
mov
jecxz
xlat
orl
sub
cmp
inc
fiadds
sub
pop
cmp
pushf
cmp
push
inc
cmp
clc
loopne
ret
repnz
pop
push
inc
arpl
in
mov
mov
std
loope
mov
nop
adc
int
fistpl
movhps
jo
dec
cld
insb
push
loope
adc
or
cmp
push
into
cmpsl
fs
push
pop
add
adc
adc
mov
mov
inc
jle
adc
push
cmpsl
pop
out
out
popf
dec
imul
push
fsubl
mov
out
or
jl
pop
and
mov
cmp
cmpsl
lock
movsb
mov
or
sub
lcall
ret
xchg
cwtl
cmp
movsl
cwtl
into
ss
cmpb
in
mov
add
shlw
jnp
jg
std
mov
insb
rol
idivl
xor
push
jp
into
adc
incl
xlat
cmpsl
popf
loop
int3
or
sub
jbe
dec
sar
js
icebp
aaa
xchg
xchg
jecxz
cli
out
and
mov
push
jo
lods
jl
sub
mov
mov
pop
lods
clc
daa
adc
xchg
cmp
jle
lds
cmp
jne
cmp
in
in
dec
xchg
sahf
jle
in
in
mov
cmpsl
ficomps
cmp
sarl
outsb
mov
mov
cmp
orb
xor
push
ja
hlt
or
out
jg
and
repz
imul
das
mov
mov
and
mov
push
push
test
sti
push
mov
mov
pop
jl
sub
fdivl
push
inc
fisubl
and
push
mov
push
dec
jnp
cmp
popa
cmpsb
das
subl
clc
pusha
mov
mov
jmp
xor
xor
mov
insl
xchg
add
into
xchg
mov
add
lret
and
cmp
sti
sub
jg
dec
dec
mov
stc
lea
or
cwtl
dec
jbe
sbb
imul
cmc
fwait
lret
and
lock
mov
lock
out
mov
pop
inc
mov
clc
or
push
adc
mov
cmp
pushf
sub
sub
mov
mov
cmp
movsl
shrb
outsl
cs
sub
into
bnd
or
in
and
mov
fs
decb
xor
cltd
mov
inc
adc
fidivrl
mov
mov
add
gs
call
into
adc
cmpsb
and
push
mov
mov
movsb
jns
pop
pop
mov
int3
mov
ds
arpl
and
add
and
out
inc
fs
xchg
ficoms
mov
fcompl
push
mov
imul
in
sbb
or
sbb
and
or
pop
xchg
push
popa
fidivrs
pop
push
ret
jno
jmp
rorb
mov
push
aam
cmp
aam
fdivs
scas
pop
xor
xchg
cmovo
add
or
or
xchg
sti
ljmp
insl
add
push
pop
scas
inc
out
mov
inc
les
stos
mov
add
out
pop
jbe
orl
fstps
xor
std
dec
sub
inc
mov
je
movsl
into
jae
push
pop
test
adc
push
in
add
sub
andb
pop
mov
testl
cmp
lea
mov
mov
lahf
fcomps
mov
or
and
mov
movsl
rcrb
lcall
mov
mov
sub
repz
cmc
cmpsb
mov
xchg
cmp
cmp
cld
sahf
pop
inc
pop
ret
test
dec
and
les
std
lret
shll
ds
mov
popa
mov
cmp
jl,pn
fldenv
mov
daa
addr16
mov
push
cmpsb
jmp
pop
lahf
mov
ret
mov
mov
emms
sub
fwait
inc
lods
jmp
add
and
jo
sbb
jno
add
dec
jge
and
pop
call
push
mov
popa
iret
cmpsb
xor
cmp
mov
sbb
mov
cltd
push
inc
pop
add
aad
xor
adc
xor
pop
adc
out
insb
cmp
sub
fcmovne
mov
movsl
cmp
mov
adcl
pop
aad
subl
pop
or
lods
gs
bound
ret
lahf
sbb
jnp
les
out
mov
mov
out
mov
stc
out
insl
inc
mov
mov
cmp
add
or
xchg
cmp
push
push
mov
ret
out
and
pop
orl
in
int
xor
mov
sbb
test
add
mov
push
ret
adc
std
lock
aam
sub
repz
push
icebp
test
in
int
lahf
je
pop
or
pop
push
das
jp
push
fstl
dec
pop
push
add
cmp
mov
ja
inc
push
inc
ja
ficompl
rorl
popa
and
outsb
and
add
call
scas
std
int3
shrd
orb
lahf
testb
mov
push
stos
mov
popf
js
push
int
rcll
scas
movsb
inc
dec
cmp
int3
std
sti
add
push
leave
addb
cltd
cmp
xor
popa
lock
pusha
roll
ljmp
sub
cmpsb
xchg
mov
and
xchg
inc
mov
je
xchg
cmp
xchg
pop
orb
push
add
nop
shll
jmp
cmp
clc
push
test
dec
and
xchg
adc
xor
lea
lahf
jecxz
andl
jl
mov
pop
sahf
fistpl
fmull
loop
push
inc
loopne
pusha
scas
fwait
push
and
test
push
pop
adc
inc
mov
mov
jb
imul
shl
nop
adc
jge
clc
loopne
pop
subb
dec
add
mov
lds
pop
sbb
jecxz
bound
in
bt
jb
sbb
dec
mov
and
sub
ljmp
push
push
out
pop
pushl
insb
push
int
sbb
mov
cmpl
xlat
sbb
jl
and
adc
jg
fnstenv
pop
fcompl
sti
mov
repz
dec
xchg
jecxz
data16
ja
rorb
lods
aad
jmp
push
insl
rclb
cmp
jge
incb
cwtl
ret
xchg
rorl
and
int
inc
fsts
icebp
or
notl
push
pop
xchg
aam
in
lods
inc
and
sbb
roll
and
xchg
insb
enter
rolb
push
sbb
xchg
idivb
sbb
cld
pop
sahf
and
fistl
jae
insl
dec
mov
inc
rcrl
mov
sahf
xchg
imul
adc
or
add
movsl
inc
imul
leave
jnp
jecxz
subl
cmp
adc
insb
stc
xor
cmp
pushf
out
imul
aam
mov
cmp
mov
adc
js
cli
sti
xor
push
repz
sbb
aas
or
add
clts
loopne
mov
jno
or
or
mov
dec
mov
fistpl
sarl
aas
jmp
pop
push
hlt
push
xchg
out
fnstsw
sbb
cmpsb
xchg
repz
jnp
movsl
sbb
pop
loope
lods
imulb
sub
subl
dec
xchg
iret
jae
inc
and
subb
inc
cs
cltd
ds
mov
sub
jo
mov
cmp
leave
dec
scas
xchg
inc
movsb
sbb
ss
inc
mov
ficoml
pop
test
leave
shlb
pop
jle
inc
add
pop
or
jmp
push
sbbb
push
push
pushf
push
sbb
out
or
mov
bound
sbb
cs
daa
fisttpl
inc
std
jbe
xchg
inc
mov
mov
scas
pop
push
sahf
ret
sbb
push
mov
mov
jns
faddl
js
out
add
fwait
jle
gs
mov
push
and
test
mov
daa
addr16
cmp
cmpsb
xchg
mov
xchg
xchg
mov
jne
or
push
push
mov
lahf
jg
outsl
pop
stos
shll
in
test
das
test
jge
ds
mov
loope
and
out
xlat
mov
ret
mov
sbb
loop
clc
lret
jnp
lret
pop
mov
pop
push
sbb
push
and
lcall
fwait
arpl
push
inc
jge
mov
std
mov
rcll
sahf
add
dec
mulb
addr16
movsb
inc
stos
cmp
popl
ss
jmp
mov
and
ja
push
or
jno
cwtl
push
insl
pop
mov
popa
ss
push
es
cmpsb
push
or
mov
cmp
pop
pushl
sub
pop
mov
fwait
adc
icebp
pop
and
imul
jns
sti
in
mov
je
out
xor
mov
bound
jns
rcr
cmc
lock
pop
or
mov
fistpl
in
daa
cwtl
cmp
aas
jle
loopne,pn
je
or
mov
es
xchg
pop
cmc
sub
xchg
mov
dec
movsb
sbb
jo
xchg
or
pop
jge
xchg
cmp
ret
pushf
lods
ss
fimuls
xor
and
jl
das
mov
inc
aam
mov
adc
inc
cmp
sub
rcl
mov
out
mov
data16
sahf
jns,pt
mov
aam
sbb
inc
arpl
mov
std
rorb
in
and
scas
fists
xor
loope
lods
sbb
xchg
cmc
mov
pusha
arpl
shrl
insb
sbb
shll
push
ljmp
add
mov
push
jb
dec
inc
out
jp
pop
enter
jp
xchg
mov
jl
in
ja
fistpll
or
iret
test
nop
push
in
out
mov
or
jns
jns
rcrl
jno
and
jo
or
sub
push
fchs
sub
jmp
xchg
and
dec
aas
lds
mov
shll
test
or
in
out
bound
aaa
cmc
inc
inc
aas
inc
add
rcl
mov
sub
lods
lret
rorl
push
add
inc
outsl
sbb
movl
cld
clc
jge
stos
in
jno
out
jnp
adc
inc
test
fisubs
imul
mov
push
aas
xor
repz
insl
mov
mov
cmpb
add
adc
adcl
jnp
loop
sbb
popf
add
sub
pop
sub
frstor
sub
add
sti
cmp
lret
test
mov
shlb
enter
add
lds
dec
outsl
xchg
rcrb
pop
mov
test
pop
sbb
add
cmpsl
xor
out
aam
jae
cmc
mov
push
fcoms
add
rolb
xchg
mov
xor
xor
push
inc
cmc
ret
mov
or
pop
fsubs
push
jne
mov
mov
mov
fisttps
sbbb
out
or
and
or
xor
pop
dec
jg
or
aam
xlat
push
jmp
xchg
sub
shrb
test
mov
sbb
in
mov
mov
les
ficoml
icebp
adc
push
mov
push
add
xchg
outsb
fbld
jnp
push
mov
call
sub
mov
stos
push
mov
ret
mov
in
xchg
cmp
jnp
outsb
dec
push
pushf
sbb
add
inc
inc
outsl
mov
pushf
push
bts
testb
in
lret
fwait
inc
mov
lock
mov
jo
insb
dec
mov
clc
xchg
push
aas
fdivrs
mov
jmp
pop
cmp
pusha
add
fistl
push
lret
xorl
pop
dec
pop
xchg
mov
into
imul
cmp
stos
mov
gs
out
mov
cltd
mov
inc
mov
scas
inc
in
add
fisttps
iret
rclb
pop
cmp
sbb
imul
je
mov
mov
sbb
sub
adc
fildll
push
mov
pop
mov
shrb
or
mov
les
iret
mov
cs
mov
lods
stos
pop
or
push
push
xchg
lret
lahf
mov
jo
call
cmp
sub
aam
fistl
mov
jo
dec
outsb
mov
xchg
flds
pop
and
cmp
divl
add
dec
mov
insb
lret
cmp
std
scas
push
movsl
repz
mov
movsl
rcrl
push
mov
leave
and
loope
and
aas
jg
pop
call
mov
stos
pusha
sub
aaa
mov
jp
xchg
pop
ljmp
jnp
hlt
or
insl
jle
adc
repnz
addr16
push
pop
inc
xor
adcl
push
and
aam
mov
mov
aad
pop
cmpsl
mov
xchg
push
mov
xchg
or
adcb
mov
flds
les
mov
xchg
nop
mov
ja
out
scas
xor
jns
sub
scas
adcl
inc
jb
adc
pop
leave
mov
pop
mulb
mov
mov
xchg
sbb
mov
sub
lock
dec
in
cmp
inc
mov
mov
sbb
loop
into
psubq
je
dec
movb
stos
insb
pop
xchg
ffreep
loope
sub
push
dec
add
les
cmp
imul
jne
outsl
icebp
les
xor
ljmp
jo
aas
daa
ret
aaa
cmpsl
xor
add
jg
pop
out
test
jg
dec
mov
push
pop
aam
sub
ds
dec
xor
enter
ss
pusha
cmpsl
push
in
pop
out
aas
cmpsb
stc
xchg
dec
repz
leave
cmp
negb
arpl
mov
lea
sub
pop
adc
sahf
mov
repz
fistpl
in
xchg
xlat
sbb
repz
rorl
mov
dec
jg
stc
popa
mov
mov
jne
in
pop
cmp
inc
xchg
jmp
mov
jae
xor
fstl
aam
jo
dec
mov
pop
cmovl
or
outsl
out
insl
out
dec
adc
sbb
jl
mov
imul
adc
mov
insl
or
scas
adc
or
loop
mov
mov
leave
xor
dec
push
mov
xor
scas
loope
movb
call
cld
adc
dec
or
outsb
pop
mov
adc
jb
pop
cmp
movsb
sub
gs
imul
bound
test
xchg
push
out
cmp
push
cmpsb
xchg
neg
stc
jge
jnp
cmp
out
loop
loope
in
xchg
stos
add
int
cmpsl
pop
imul
sub
fistpl
add
dec
outsl
ja
pop
jmp
pop
push
arpl
cmp
jns
testb
xchg
xor
mov
push
into
cmp
and
pop
and
mov
insl
lods
and
movsb
movl
mov
loope
ror
das
add
add
mov
inc
shrb
testl
incl
loope
imul
cmpsl
jae
enter
sbb
xor
inc
jae
mov
mov
add
jo
les
or
sub
dec
loopne
ss
add
jns
fldenv
push
icebp
inc
popf
push
and
cld
cmpsb
aad
aaa
hlt
test
rolb
fcoml
mov
xchg
stc
bound
rol
pop
push
jmp
fidivl
inc
jl
pop
pop
addr16
jo
xchg
adc
jecxz
and
lds
je
adcl
push
fwait
sti
jo
bound
inc
arpl
repz
pop
daa
pop
pusha
ja
push
fwait
xchg
mov
lods
sbb
dec
cmp
xchg
sub
stos
clc
ja
sti
add
adc
and
mov
and
push
into
mov
std
dec
dec
pop
ljmp
movsb
iret
popa
sub
lods
cmp
fidivrs
add
mov
out
decl
popa
mov
mov
adc
out
loop
sub
dec
stos
push
xchg
xchg
cmp
fs
push
xor
pop
sbb
int
test
inc
rcr
xor
rorb
pop
mov
sbb
negl
dec
ja
scas
scas
jp
out
fists
mov
xor
fiadds
inc
mov
jecxz
repz
fwait
les
push
movsb
and
jns
xor
and
rolb
test
lret
xor
add
ret
xchg
push
add
mov
stos
aaa
shrb
push
dec
arpl
mov
pushf
inc
mov
leave
jne
or
dec
add
out
and
xor
or
jge
jno
pop
jns
mov
jmp
xor
int3
mov
and
add
cmp
push
adc
cmpsl
movsl
and
mov
mov
jo
out
mov
daa
add
incb
and
out
aam
dec
inc
push
jo
mov
bound
mull
movd
daa
daa
int
sub
pop
mov
jns
xor
mov
outsl
or
cmpsl
int3
or
leave
xchg
loopne
and
addr16
fldt
jmp
std
dec
dec
cs
push
int3
jo
mov
fwait
mov
or
int3
lock
xchg
sar
push
mov
sbb
xchg
sbb
shr
push
rcl
jnp
xor
xor
cmp
cltd
cwtl
or
ja
cld
cld
inc
jecxz
outsl
mov
addl
mov
inc
jg
jge
ret
sub
je
xor
fsubrs
lock
xchg
cld
std
cmp
push
or
pop
shll
into
mov
in
mov
sbb
sbb
flds
fmull
clc
pop
sbb
mov
lret
outsb
dec
int
xchg
inc
subl
sar
or
daa
jl
ja
or
sbb
in
sbb
ds
adc
jo
jecxz
scas
mov
andl
mov
leave
sub
stos
insl
mov
and
mov
nop
into
movsb
fiaddl
push
push
dec
cmp
aad
lret
mov
hlt
std
std
mov
xchg
stos
mov
nop
rolb
test
xlat
push
adc
loopne
vsqrtsd
add
bound
xor
cmpb
sbb
in
mov
shll
mov
pop
hlt
xchg
ror
enter
xchg
xchg
cmpsb
or
leave
test
int3
inc
sub
push
test
push
popa
movsl
insb
sbb
fsts
cmp
mov
or
fstpl
nop
test
and
cld
fucomi
pop
mov
xor
mov
test
and
inc
pop
or
in
std
or
sbb
pop
mov
les
sbb
mov
adc
aas
das
test
add
andb
add
les
addr16
push
pop
dec
out
adc
xchg
out
pop
std
clc
iret
dec
stc
lods
inc
and
daa
cmp
dec
adc
repz
sbb
pop
sbb
or
dec
xchg
mov
lods
push
addr16
sub
outsb
daa
xchg
mov
pop
xchg
pusha
xor
add
cmp
mov
inc
xchg
sub
outsb
popl
mov
jmp
sbb
mov
cld
xlat
iret
mov
mov
addr16
xor
jg
das
or
add
popa
stc
in
repz
iret
cmp
cmp
mov
mov
lret
inc
mov
pop
sahf
cmc
iret
xor
push
ds
loope
adc
gs
push
roll
mov
push
idiv
pop
test
fldcw
mov
pushf
into
js
add
into
sub
arpl
scas
inc
dec
rolb
cmpsb
nop
andb
sbb
push
mov
or
inc
sbb
fsts
jp
inc
test
mov
fs
cs
in
inc
cmc
mov
test
fdivr
pop
sbb
cmc
dec
fs
fs
dec
sbb
das
lcall
pop
js
dec
call
popf
repz
cmp
addr16
icebp
mov
xor
xchg
mov
push
sub
push
add
test
push
mov
push
fwait
jge
out
jge
nop
xchg
mov
mov
dec
loopne
int
das
cmp
jle
cmc
push
fcompl
test
cmp
and
jae
sub
pop
fwait
test
test
mov
insb
leave
aas
fs
mov
jae
cmp
mov
enter
pushf
popa
bswap
add
je
or
rsm
ja
jecxz
or
sbbl
ret
mov
pop
sub
sbb
push
and
pop
and
gs
jecxz
divl
fistpll
pushl
in
xchg
add
movsb
out
xor
lea
test
icebp
add
je
mov
out
dec
and
pop
lock
data16
mov
cmpsl
outsb
sub
sub
push
mov
ja
dec
popa
roll
jae
loop
mov
in
pop
movsb
fs
movsb
or
call
out
dec
idivl
filds
adc
cmp
pushf
mov
fsincos
inc
cwtl
add
dec
add
sti
inc
cmp
fcomps
cmp
mov
and
inc
js
or
pop
loope
imul
mov
or
mov
cmp
lcall
push
inc
sbb
push
lods
mov
sub
js
rcl
xor
xchg
add
sbb
clc
bound
cmpsl
dec
cmpsl
or
or
shrl
insl
sub
es
mov
xor
sub
insb
xor
nop
es
mov
stc
mov
ss
fcmovbe
sbb
je
inc
shlb
leave
ds
icebp
jnp
mov
xchg
jmp
cmp
cmp
cmpsl
jge,pt
aaa
mov
xchg
es
fstpl
pop
xorb
aad
sub
aad
mov
jne
ret
jbe
daa
jb
xchg
insl
jns
adc
icebp
or
inc
mov
mov
int
adc
fbld
aad
and
mov
mov
cs
movsl
adc
clc
daa
mov
xor
lods
mov
sarl
lods
sbb
iret
leave
out
jmp
daa
int
lock
and
in
call
jnp
and
decb
cmovl
dec
jne
fsubl
jg
test
adc
pop
call
push
jecxz
dec
mov
cmpsl
js
rorl
outsl
insb
ficoml
xor
or
pushw
push
sbb
sahf
push
mov
dec
push
gs
xor
in
mov
sub
dec
adc
dec
data16
bound
inc
xchg
out
sub
arpl
and
jb
sub
stos
leave
ret
xchg
xchg
dec
fucomp
and
or
in
and
stos
mov
mov
inc
inc
sub
aaa
stc
in
xchg
dec
loopne
incb
push
adc
mov
jbe
pop
stos
cli
inc
into
imul
pop
addl
subb
jb
mov
or
hlt
pop
cmp
push
jo
test
pop
mov
pop
sub
mov
xor
adc
jns
mov
fcoms
and
mov
es
xchg
movsl
hlt
mov
jl
adc
outsl
sbb
out
push
push
mov
dec
jge
and
into
ret
add
fs
add
into
mov
sahf
cwtl
imul
std
mov
adc
lds
sbb
push
xor
and
xchg
push
xor
sbb
dec
lds
fisttpl
mov
push
jno
test
or
out
jmp
jecxz
cltd
sbb
or
fnstenv
cltd
divb
rorb
rcrb
cmp
mov
and
xor
mov
mov
in
ret
test
int3
ret
adc
mov
sub
fidivrs
sbb
pusha
test
movsb
insl
xorb
and
mov
xor
popa
sarb
std
fistpll
mov
push
mov
mov
push
lods
rclb
adc
add
push
rorl
jmp
outsb
data16
stos
movsl
mov
imul
cmp
add
mov
mov
aas
jbe
push
and
sti
jns
aas
ja
and
imul
cwtl
inc
inc
sbb
xchg
js
mov
aas
mov
pop
dec
push
pop
cmp
call
enter
test
pop
cmpsb
imul
add
jne
dec
lock
mov
sbb
test
insb
add
push
cmpsb
mov
xchg
and
pop
mov
fs
popa
inc
icebp
xor
iret
lcall
xchg
xchg
stos
xchg
or
sub
imul
cmp
xchg
jmp
lahf
sub
add
aam
cltd
and
int
or
jo
sarl
ret
cmp
pop
pusha
jae
add
mov
push
sub
loopne
loope
test
aad
mov
or
jne
push
push
xor
and
andb
mov
push
leave
enter
sub
jge
scas
xchg
rcrb
jecxz
sbb
sub
leave
fadds
dec
mov
ret
sub
cmp
xchg
pop
nop
pop
add
aas
bound
int3
pop
outsl
cmp
shl
fsubrs
addr16
and
jl
mov
insl
inc
push
std
mov
and
mov
cmp
ljmp
ja
cmpsl
pop
ljmp
xchg
fiaddl
scas
jo
pop
repz
or
mov
cmp
lcall
and
add
call
int3
mov
jge
jae
and
dec
xor
jb
and
popa
ret
test
out
mov
aas
xor
insl
pop
out
dec
sbb
stc
push
orl
mov
xchg
push
aas
in
sbb
jp
pop
int
or
aaa
pop
push
or
jo
mov
or
adc
mov
mov
dec
fisttpl
xor
movsb
inc
imul
mov
push
cmp
xor
ss
dec
ja
cmp
add
push
mov
add
adc
test
xor
dec
sbb
mov
mov
adc
xor
jmp
bound
mov
mov
mov
inc
add
push
xchg
stos
cs
mov
mov
ss
mov
rcll
repnz
push
xor
aad
imul
lea
cld
push
mov
or
cmpsl
and
rcrb
loopne
lods
inc
pop
mov
fadd
mov
inc
int
or
inc
cmc
inc
pop
aam
jle
and
inc
lock
mov
in
pop
jp
mov
test
scas
test
and
test
pop
lock
adc
adc
xor
push
jl
sbb
jge
js
aas
mov
int3
fwait
inc
mov
or
mov
pop
mov
mov
aam
jl
rclb
lds
orl
sub
sub
das
fisubrs
int3
cs
inc
les
sahf
out
jbe
mov
push
push
mov
mov
iret
outsb
loopne
popa
scas
xor
aas
in
sub
inc
mov
stos
xchg
mov
call
or
ds
addr16
cwtl
pop
xchg
cmc
and
aaa
pushl
jno
shll
cwtl
cld
sbb
pop
dec
jmp
cmp
aaa
cmp
sarl
lret
mov
sbb
inc
push
sub
mov
dec
add
pusha
jo
roll
cltd
test
call
push
cld
mov
jne
xorl
pop
in
jnp
pop
icebp
andl
xor
push
xlat
ret
arpl
test
pusha
sti
aad
imul
sub
mov
shlb
xlat
out
mov
stos
imul
stc
or
dec
dec
insb
mov
in
xchg
cmpsl
icebp
stos
pop
mov
add
lock
fwait
divb
imul
loope
inc
or
xor
mov
js
ljmp
movl
and
inc
cli
add
lahf
lods
addb
out
decl
arpl
and
mov
scas
idiv
xchg
sbb
test
xchg
mov
mov
mov
xor
ss
insl
or
repz
rcll
shlb
or
xor
jne
mov
xor
cld
lret
dec
lcall
xor
cmp
mov
pusha
push
or
movsl
pop
add
lods
insl
or
cmpl
sub
or
call
fisttpll
mov
pop
test
fldl
jne
xchg
lahf
mov
xlat
shrl
ret
iret
sub
xor
mov
es
outsl
fisttps
mov
fmuls
sub
shll
or
aad
cltd
mov
cmpsb
enter
push
pop
inc
das
pop
cltd
push
repnz
push
sbb
pusha
mov
push
dec
movsl
scas
ljmp
daa
mov
out
push
in
mov
ja
jge
lahf
scas
shlb
mov
jbe
lods
scas
sbb
pop
inc
fs
or
mov
pop
mov
xchg
xlat
jecxz
push
pop
clc
adc
gs
push
sbb
inc
adc
clc
jg
sbb
mov
rcll
adc
push
call
adc
mov
scas
in
scas
cmpsb
xor
jmp
cmc
fwait
or
push
outsl
cmp
xchg
mov
scas
or
aam
in
ret
push
pushf
push
or
sbb
add
mov
call
ljmp
les
pop
out
js
imul
jecxz
inc
ljmp
aaa
lods
neg
sti
add
cmp
loopne
scas
out
push
inc
jl
int3
xchg
rcl
push
push
mov
jl
int3
rcll
mov
repnz
mov
mov
dec
cmp
out
xchg
mov
mov
push
adc
xchg
lods
cli
in
xchg
pop
cwtl
sub
jno
pop
data16
sarl
dec
repz
mov
lret
mov
inc
xor
push
movsb
popf
add
cli
iret
xchg
cmc
adc
out
test
adcb
lods
scas
sbb
mov
xor
jl
mov
insl
xor
push
pop
xchg
call
insl
fwait
cltd
jno
stc
push
pushw
push
dec
inc
xchg
mov
test
hlt
add
int
mov
jb
mov
int3
mov
lock
push
xadd
aam
cmp
das
xchg
sbb
stc
in
xor
mov
in
adc
icebp
adc
insl
lock
push
test
adcl
xchg
pushf
pop
dec
push
scas
insl
leave
adc
pop
cltd
aaa
adc
cmp
cwtl
sub
test
add
fbld
sbb
or
xchg
rol
cmp
xchg
icebp
movsl
fs
xor
js
mov
jp
shl
inc
bound
inc
xchg
xlat
cmp
push
jae
xor
or
mov
neg
lock
xchg
adc
rolb
adc
jae
dec
push
mov
insb
jb
sbb
push
cmp
pop
xchg
mov
and
cmpsb
jmp
mov
ret
ds
sub
dec
mov
mov
int3
out
shl
in
jns
sbb
jmp
and
arpl
and
scas
loope
dec
rorb
aaa
lcall
jmp
or
jb
roll
add
mov
push
add
jl
rolb
sti
loope
mov
xchg
sbb
pop
add
mov
cmp
vcvtpd2psy
jae
xchg
jno
std
addr16
shrb
dec
and
in
or
pop
mov
pop
mov
xchg
push
js
mov
fisubl
imul
xchg
xor
negl
mov
sub
sahf
mov
xchg
sbb
cs
movsl
xchg
in
inc
pop
dec
test
sub
sub
adc
pop
jo
mov
orl
or
lret
iret
in
inc
add
inc
addr16
in
mov
mov
inc
pop
or
dec
mov
xor
call
mov
sub
xchg
ficompl
jecxz
sbb
nop
xchg
lods
cmp
mov
popa
push
mov
xchg
cmp
inc
adc
push
test
pop
adc
aad
sbb
cmp
lods
sub
pop
cmp
push
icebp
arpl
lods
dec
dec
das
sbb
jecxz
out
cmpsl
jg
repz
xor
pop
fs
shll
xchg
std
test
out
or
jmp
mov
std
jecxz
push
mov
mov
pop
pop
xchg
pop
push
xchg
push
mov
dec
insb
mov
ds
out
xchg
sbb
mov
cmp
mov
or
loope
cli
notl
ss
add
cmc
mov
mov
paddq
push
repz
adc
pop
xchg
and
fwait
jae
aam
cmp
dec
cmp
mov
outsl
in
js
fdivp
cwtl
jecxz
fadds
dec
and
dec
push
mov
pop
fiaddl
jecxz
xchg
adc
fnstenv
cmp
ret
stos
mov
imul
inc
mov
sbb
inc
loope
aam
jge
mov
mov
ret
or
lock
ljmp
sbb
int3
or
je
jmp
es
dec
test
push
dec
and
xchg
lock
adc
jb
cltd
loop
mov
popf
lock
into
mov
xchg
push
mov
stos
add
repz
jmp
jp
sub
pop
and
inc
jl
addr16
idivl
div
jne
fucomi
push
xlat
outsb
sub
fs
push
inc
cmp
pop
aas
and
sti
js
lods
cmp
sub
push
aam
aaa
nop
negb
xor
test
std
or
roll
repnz
jae
add
mov
lods
aad
push
inc
mov
or
mov
ja
fmull
test
pop
mov
or
nop
mov
in
cmp
cwtd
ds
push
subb
insl
push
xchg
gs
xor
dec
dec
sub
xchg
xlat
rcl
jmp
icebp
pop
mov
push
mov
inc
loopne
add
lcall
adc
xchg
out
mov
mov
insl
push
daa
xor
cmpsb
ss
stos
pop
mov
mov
cli
out
cmpsl
jne
test
mov
sti
cmp
jle
test
xor
pop
jno
std
fistl
fcompl
push
mov
enter
orl
xor
pop
orb
xchg
pushf
inc
rolb
xchg
hlt
aad
cmc
pop
mov
mov
pop
dec
leave
and
mov
mov
nop
mov
dec
cs
imul
test
in
mov
jnp
jl
push
fs
xor
or
mov
cmpsb
mov
mov
cmp
push
or
mov
mov
pop
push
insl
jl
test
les
lret
movsb
adc
jb
je
sbb
dec
adc
cmp
ret
push
imul
loopne
sub
push
iret
push
bound
testb
sbb
inc
mov
xlat
je
lret
aaa
in
repz
insl
push
mov
or
push
add
xchg
clc
mov
xchg
mov
mov
aam
aas
popf
adc
shll
adc
sbb
aaa
out
and
push
dec
fs
add
shl
push
inc
xlat
mov
push
test
adc
movsb
loop
in
inc
insb
dec
mov
loop
int
mov
dec
dec
push
or
mov
leave
pop
mov
push
dec
flds
xchg
stc
cwtl
pop
mov
mov
xor
popa
sarb
lcall
dec
mov
jae
mov
gs
cli
aas
cltd
inc
and
dec
xchg
jnp
jp
push
rorl
mov
hlt
rclb
push
xorl
movsl
pop
cld
lods
out
ljmp
movsb
mov
popa
lcallw
xor
mov
pop
arpl
loop
out
or
xchg
or
movsb
in
in
sub
insb
pop
mov
pop
jl
mov
aaa
in
and
pop
popa
adc
dec
addr16
inc
pop
push
movsb
pop
repz
sahf
fistpll
adc
lods
mov
ds
xchg
std
jno
push
ds
and
movsb
insl
lods
rcr
pusha
stc
push
cld
push
loop
adc
xor
fwait
adcl
in
lods
lret
push
mov
sub
mov
inc
jo
enter
enter
rcll
ret
dec
cmpsb
jg
or
cltd
cmp
test
xor
xchg
loopne
int3
xchg
imul
mov
inc
pop
mov
mov
mov
sahf
js
sub
mov
shrl
cmp
mov
cmp
rclb
jl
adc
out
push
movups
dec
push
xchg
into
or
out
test
and
cmp
adc
negb
imull
roll
ret
xchg
xorl
add
mov
sbb
dec
aaa
out
push
and
inc
adc
std
fwait
xchg
sub
cmpsl
aam
mov
pop
mov
pop
out
mov
dec
out
mov
iret
test
push
repnz
xchg
jo
mov
fsubrp
enter
mov
sub
mov
xchg
jg
icebp
repz
scas
xor
std
stos
mov
xchg
lcall
mov
xor
jne
roll
cli
cmp
divl
rol
divb
bound
shlb
lea
xor
negl
mov
lods
pop
cld
sbb
data16
repnz
dec
mov
xor
scas
fbld
mov
xchg
mov
enter
dec
fstpt
mov
add
jo
into
push
imul
and
inc
or
call
inc
inc
xchg
and
iret
fnstcw
pusha
in
inc
mov
es
or
and
xchg
xchg
dec
mov
xchg
xchg
dec
pop
movsl
xlat
aad
imul
xchg
or
dec
js
add
mov
jl
scas
clc
jo
pop
adc
aad
jo,pn
fisttpl
inc
int
shll
leave
fs
jb
fwait
test
cltd
shl
inc
push
je
jmp
mov
push
aam
aam
ja
fwait
subl
lcall
icebp
mov
push
pop
inc
dec
xor
mov
jle
std
push
js
mov
and
stos
gs
lods
push
sbb
stc
jmp
adc
int
inc
push
xor
shrl
out
adc
je
lock
jbe
push
or
insb
rorb
mov
inc
cmp
cmp
vpcmpeqb
xchg
cs
ror
and
loope
mov
add
push
shl
je
call
mov
xor
pop
lock
adc
inc
pop
jno
ret
jo
jne
rcl
jmp
lods
aaa
shl
mov
add
add
push
xchg
pop
repz
cld
mov
sbbb
sub
test
scas
xor
mov
push
lds
loopne
out
repnz
out
paddusb
pop
push
jno
enter
popf
adc
dec
add
dec
loopne
push
dec
cli
cwtl
sbbl
ffreep
insl
mov
dec
iret
aam
das
inc
sub
add
inc
and
sub
scas
sub
in
stc
dec
sbb
mov
lret
jns
loopne
add
fs
fdivs
dec
cmp
sarl
int
jae
mov
add
sbb
push
cmp
xlat
adc
stos
mov
or
adc
out
mov
xchg
xchg
loop
sahf
inc
popa
or
xor
pushf
xor
subl
add
lock
aas
stos
push
jecxz
mov
add
mov
dec
xchg
push
mov
subl
dec
inc
and
in
out
push
mov
iret
ret
lods
aad
rcrb
pop
lret
ja
add
lahf
xchg
add
mov
mov
sbb
out
adc
push
fwait
clc
rcrb
jbe
outsl
push
lret
inc
clc
cmp
iret
inc
cmp
dec
ficompl
cli
xorl
or
daa
fbld
in
inc
frstor
ja
ret
cmp
mov
jo
xchg
pushf
mov
or
xchg
pop
std
pusha
movsl
sahf
leave
pusha
inc
fstp
adc
sub
fcmove
pop
add
mov
or
sbb
stc
sbb
call
pop
add
mov
jmp
movb
add
push
gs
jb
aaa
int3
lcall
ffree
add
pop
mov
mov
lahf
xchg
movsb
clc
ljmp
loopne
pop
test
je
adc
xor
xchg
cmp
xchg
xor
in
push
int3
or
in
out
cmp
aas
shlb
into
das
aam
push
mov
add
orb
in
add
adc
dec
shrl
add
pop
ficoml
push
rcrl
ljmp
sahf
out
cmp
ret
out
xchg
mov
stos
cltd
pop
or
les
ja
mov
jae
push
or
jno
das
pop
movsb
out
loope
outsb
jnp
sbb
inc
aam
stc
mov
dec
mov
loopne
popa
test
dec
rorl
jge
call
les
leave
pop
push
inc
push
shll
bndstx
xchg
sub
xchg
inc
nop
mov
cmp
dec
add
xchg
push
or
icebp
in
cli
loopne,pn
jecxz
js
lcall
in
sub
mov
inc
cmp
inc
mov
mov
vcvtps2pd
push
xor
sbb
fwait
jno
cmp
inc
ficoml
shlb
loope
jecxz
cltd
inc
clc
ss
cmp
enter
pop
repnz
int
and
addr16
rep
popf
in
cs
pop
mov
dec
stc
cli
adc
scas
and
movsb
jb
jb
je,pn
fildl
cmp
fstl
test
add
add
sahf
adc
hlt
push
iret
aad
sub
sub
xor
outsl
or
mov
mov
jns
add
mov
xlat
fisttpll
arpl
fsubrs
fistl
mov
jg
insl
sub
in
mov
or
rcll
mov
js
cltd
push
nop
sub
xchg
dec
lea
mov
xchg
sub
bnd
scas
adc
test
out
jge
jbe
stos
and
cmpsl
mov
dec
aam
sbb
xor
adc
addr16
mov
pusha
pop
shll
push
pop
bound
inc
les
bound
repnz
mov
clc
mov
aam
mov
push
jg
adc
xor
icebp
in
inc
dec
stos
fidivrl
jge
aad
jns
popa
in
add
mov
movsb
movsl
lea
adc
push
dec
cld
jnp
pop
out
insl
inc
mov
pop
sub
scas
push
nop
jecxz
push
push
jmp
rorl
push
shrb
xor
sub
jecxz
sbb
or
mov
add
test
mov
sub
xchg
rcll
sti
imul
jbe
sub
add
clc
aas
push
imul
out
inc
xchg
mov
cmp
pop
mov
hlt
jno
cmp
add
jl
add
or
jge
adc
inc
mov
scas
orl
scas
and
das
scas
stc
add
scas
jg
faddl
movsb
mov
lret
lods
js
leave
add
popf
or
addr16
add
cmp
les
mov
lahf
and
loope
mov
pop
daa
sbb
out
push
adc
sahf
add
rorl
rorl
inc
jge
and
sbb
std
inc
stos
mov
push
loop
lahf
sbb
out
idivl
cmpsl
clc
jecxz
paddw
fldenv
aas
inc
cltd
sub
in
inc
adc
ret
push
test
mov
pop
sbb
jp
mov
mov
push
jecxz
aam
adc
xchg
imul
mov
hlt
inc
pushl
xor
xchg
push
jo
mov
ljmp
iret
gs
mov
or
lock
mov
xchg
stos
test
lds
dec
xchg
push
ljmp
mov
dec
mov
sbb
out
mov
stos
pop
mov
push
int
fwait
imul
adc
mov
inc
ficoml
adc
mov
mov
dec
addr16
xchg
fiadds
popa
iret
stos
in
mov
es
subb
aas
add
xor
sbb
sub
xchg
jecxz
je
mov
iret
pusha
pusha
not
stos
dec
mov
adc
mov
mov
rclb
jne
out
stos
repz
sahf
push
and
mov
repnz
mov
ss
leave
fidivl
mov
dec
stc
lret
sub
mov
stos
outsb
xchg
mov
pop
cmp
lret
in
ja
cmp
sbb
fs
jne
add
or
ds
mov
add
repz
mov
jmp
fstl
adc
mov
fdivl
cmp
lods
xchg
pop
lret
and
add
fbld
pop
mov
lods
in
mov
cmp
je
mov
adc
fadds
call
lds
ds
test
sbb
jb
bound
into
movb
lock
mov
loopne
push
ja
in
adc
mov
or
pop
jbe
and
ss
or
ffreep
lea
aas
nop
add
or
aaa
lods
add
ds
cmc
mov
dec
inc
jno
sbb
jmp
sub
mov
int
jo
aas
repnz
adc
cmc
repz
arpl
daa
mov
sarb
stos
or
push
xchg
scas
insb
mov
sbb
and
les
mov
mov
aam
cwtl
cmp
cmp
xor
mov
lret
xor
inc
test
push
push
inc
int
sbb
int3
or
into
lods
push
mov
fdivrl
js
cmp
and
inc
push
into
lret
daa
js
add
dec
mov
push
movsl
enter
out
popa
push
insl
ror
mov
push
add
or
jnp
or
mov
push
jmp
aaa
cwtl
in
fcmovnu
outsb
bound
pop
iret
push
sub
icebp
in
lahf
sbb
mov
jmp
inc
pop
cmp
lock
xchg
sahf
lret
mov
repnz
arpl
mov
adc
inc
scas
lahf
inc
ficomps
jg
jns
das
test
cmp
call
je
lds
cs
es
and
push
dec
push
out
into
cmpsl
fdivl
lock
stos
push
cmp
mov
xchg
or
add
outsl
add
pop
mov
mov
clc
rcrb
out
ja
mov
clc
lret
xchg
mov
push
loopne
outsb
jbe
je
popa
fcompl
sbb
jb
and
xor
mov
ljmp
push
cmpsb
cmp
fbstp
xor
push
rorl
add
out
vhaddpd
mov
icebp
and
cld
lahf
cmp
je
mov
pushf
cs
jno
mov
insb
sbb
std
adc
adc
mov
jle
mov
add
pop
cmp
mov
fs
out
adc
mov
mov
cmpsb
inc
imul
hlt
cmp
mov
dec
push
insb
and
pop
pop
mov
ret
cmc
popa
fnstenv
inc
dec
jmp
shrl
mov
push
dec
bnd
push
dec
mov
fwait
sub
sarl
scas
fsubs
push
sub
lahf
aad
leave
leave
add
out
popf
movb
popf
lcall
int3
jecxz
xchg
mov
cmpsb
daa
mov
mov
pop
mov
mov
and
pop
ret
icebp
and
cmp
aas
xchg
aas
inc
xor
popl
int
mov
pop
inc
jmp
jl
pop
ffreep
push
jg
loopne
dec
lret
mov
in
xchg
push
inc
ja
inc
xchg
je
lahf
pop
mov
int
pop
clc
and
in
and
jle
jle
test
push
jne
sbb
shr
repz
lds
and
jnp
sbb
into
nop
mov
adc
rcr
jns
enter
cld
sub
or
fists
iret
push
mov
push
push
roll
mov
rcll
sbb
xchg
xchg
les
mov
xchg
pop
jge
repnz
push
cmp
decb
sbb
shlb
icebp
add
ret
xchg
mov
shll
pop
mov
jge
shll
iret
loop
sub
pop
cli
fiadds
neg
inc
adc
push
lea
jnp
out
insl
sbb
shrb
mov
mov
aaa
adc
jno
imul
popf
fldl
jle
cwtl
mov
and
cmp
stos
fcomps
push
divl
xor
xchg
mov
dec
call
xor
mov
adc
popa
adc
sub
sbb
cmc
sahf
sub
mov
pmaddwd
sub
lahf
leave
out
test
cmp
jecxz
fists
jns
and
inc
jge
mov
in
jle
scas
mov
mov
inc
or
testb
push
cs
test
inc
jnp
sub
dec
adc
ds
stos
push
shll
push
mov
mov
pop
mov
rcrb
fnstenv
xor
pushf
adc
fs
clc
xchg
push
sub
cli
orl
xor
xchg
mov
outsl
push
cld
das
mov
xlat
lods
cld
scas
rcrb
in
loope
and
jle
inc
xchg
lods
hlt
gs
ds
enter
popa
push
cmpsl
clc
adc
sub
push
dec
sbb
fcmovnb
pop
cmpb
test
xchg
dec
loope
pushf
mov
xor
xor
test
mov
mov
inc
movsl
mov
mov
clc
mov
adc
add
add
idivl
xor
cs
sahf
ret
xchg
shlb
jne
mov
lahf
xchg
testb
mov
loope
push
sbb
mov
je
and
jns
mov
mov
bound
inc
mov
adc
and
ljmp
xor
sahf
jae
test
loopne
and
aad
stos
jnp
pop
fs
hlt
push
cmp
cmp
loop
movsl
jne
icebp
fcmovnu
dec
cmp
fnsave
push
repz
xchg
stos
jns
fs
dec
insb
call
ja
push
lahf
push
leave
xchg
jne
das
jecxz
mov
jmp
add
lds
scas
loope
cmp
lods
test
or
jno
lret
jecxz
adc
pusha
pop
adc
cli
ret
fimuls
lods
mov
rcrb
mov
call
cmp
push
fistl
mov
dec
mov
add
in
cmp
mov
push
ss
movsb
mov
mov
inc
mov
dec
aam
lcall
sbb
mov
fcomps
jmp
sub
pop
add
xor
ds
add
and
lahf
mov
pop
repnz
jo
cmp
inc
cmp
sbb
je
aad
mov
lods
int
fldenv
mov
inc
repnz
add
popa
stos
inc
out
rorb
mov
shlb
pop
sbb
iret
and
fwait
and
in
and
inc
xor
xor
pop
push
add
paddusb
in
bound
js
test
lods
int3
adc
xchg
pop
fnstcw
cmp
or
jmp
inc
adc
mov
sbb
mov
int
xor
pop
loope
dec
mov
push
lret
xchg
xor
push
or
inc
cs
inc
push
push
mov
int
mov
push
xor
xchg
dec
adc
into
ret
subb
leave
dec
dec
adc
out
xchg
adc
rorl
dec
xchg
test
scas
shlb
imul
push
sub
mov
jnp
mov
jge
rorl
push
fldcw
push
jmp
fcoms
jl
lds
cmpsb
loope
pmaxub
fs
jle
roll
cmp
inc
into
ljmp
sahf
or
stc
cmpsl
add
cmc
xchg
xor
jg
pusha
mov
lds
jmp
sub
inc
faddl
pop
jns
xchg
pop
mov
push
xor
inc
mov
xor
push
add
xchg
add
in
sar
faddp
shr
mov
push
jae
cmpsl
and
loopne
jp
jnp
arpl
cmp
or
mov
fistpll
xchg
and
fnsave
outsb
int
sbb
inc
jae
mov
cmp
jb
sub
mov
popf
adc
adc
outsl
or
sbb
popl
scas
jae
lahf
into
mov
jns
dec
cwtl
testb
sub
push
rorb
cmp
or
test
aad
inc
ljmp
jo
fs
add
lods
sbb
arpl
adc
lods
adc
push
aad
mov
mov
mov
ror
and
mov
and
fwait
in
jmp
sbb
jg
add
add
mov
hlt
xchg
sub
rolb
int3
cmpsl
leave
loopne
pop
mov
mov
mov
jbe
jl
xchg
mov
and
loopne
cmp
pop
orl
jb
sbb
mov
das
js
les
pop
lahf
pop
add
pop
mov
cmp
mov
fs
loopne
mov
js
and
sqrtps
pop
adcb
test
pop
scas
xor
cmc
into
xchg
lret
subl
mov
dec
mov
insb
inc
mov
adc
sbb
mov
sub
cmp
xchg
pop
cmp
sub
insb
adc
lds
inc
mov
lcall
push
vcomiss
les
push
xchg
mov
lret
xor
adc
adc
pop
out
pop
add
fld
dec
sbb
xchg
fcmovnb
in
sti
push
mov
lret
sahf
xor
fs
inc
stos
push
insb
pop
jp
mov
pop
adc
lds
mov
mul
pushf
shll
cld
fisubl
enter
outsb
enter
inc
fs
test
fs
mov
xchg
cltd
outsb
push
lea
xor
test
sub
jmp
outsb
sbb
aaa
xor
mov
adc
call
mov
inc
push
rclb
adc
ljmp
mov
cmpsb
js
adcb
mov
fsub
adc
or
out
push
fwait
mov
icebp
push
or
mov
jno
mov
leave
inc
push
xchg
icebp
cmp
ljmp
add
mov
sub
xor
sub
test
push
rcll
add
push
mov
xchg
lock
cmp
jmpw
inc
je
mov
push
ss
add
loop
sbb
mov
or
mov
test
jne
je
clc
sbb
enter
xchg
cmp
xor
mov
int
sahf
lahf
mov
outsb
push
inc
stos
mov
or
mov
les
pop
loop
ror
inc
lea
push
stos
inc
imul
fnstsw
dec
or
inc
sub
clc
cmpsl
lea
arpl
pop
and
in
sub
cld
outsl
lods
popf
jp
loop
sub
sub
mov
loope
mov
jge
dec
xor
cmp
push
sbb
mov
pushf
mov
pusha
call
arpl
xchg
out
adc
insb
roll
lret
or
jg
xlat
sub
inc
inc
es
lock
xchg
mov
sbb
addr16
mov
stos
mov
ljmp
and
add
subb
ja
cmpsb
or
push
sub
cltd
jl
clc
mov
notb
fidivrl
inc
cmpb
stc
jnp
lret
dec
dec
int
cs
addb
arpl
or
inc
mov
jl
mov
stc
or
add
repnz
sub
bound
inc
add
in
ja
add
jae
mov
mov
xor
mov
mov
mov
jp
mov
xor
push
mov
and
push
not
in
mov
lcall
mov
fdivs
sub
pop
inc
pop
sbb
aad
dec
call
jne
sbb
xor
decl
pop
mov
jp
ret
pop
lea
fists
add
jne
ds
aaa
fstp
xlat
scas
mov
ljmp
jnp
pop
or
fs
sbb
cmp
inc
and
inc
add
mov
jno
dec
mov
xchg
xchg
jmp
outsb
push
addb
test
jl
sahf
mov
and
stos
vphadddq
add
pushf
push
inc
mov
xchg
and
jbe
jne
insl
jns
rcpps
lods
call
xor
cmp
cmp
cmp
or
and
sarb
jecxz
mov
push
fldt
shl
mov
and
test
add
int3
aas
movsl
push
adc
push
enter
lock
pop
sbb
es
sbb
in
sbb
out
shlb
and
loop
or
mov
cltd
cmp
add
nop
jge
data16
and
mov
jae
lahf
rorb
sbb
pop
and
int3
xchg
jl
dec
std
daa
mov
cmpsl
pop
lret
mov
mov
xor
sub
vcvtdq2pd
inc
xlat
cmpsb
cltd
cmp
xor
xchg
or
in
cli
inc
test
jne
dec
fidivs
or
mov
mulb
pop
add
mov
ss
cmp
mov
into
pop
int3
movsb
add
jmp
lcall
into
insb
mov
popf
into
sbb
push
gs
lods
jae
faddl
cmpsb
xor
jno
pop
arpl
cmc
stos
jmp
sub
sub
mov
push
jge
adc
aam
call
scas
imul
jmp
and
rol
or
lret
push
and
je
sti
dec
jo
loope
in
add
in
mov
jns
stos
xlat
ja
scas
ror
cmp
inc
sub
cli
sbb
insb
es
iret
movsb
ja
xchg
cwtl
fwait
rcl
pop
outsl
sub
and
out
sbb
lcall
cmpsl
push
clc
sbb
mov
insl
mov
test
movsb
sub
iret
push
insl
mov
popa
nop
dec
pop
sub
cmc
pusha
push
adc
mov
or
mov
mov
cs
push
in
in
stos
iret
xor
dec
loop
cmp
sbb
sub
add
xchg
mov
add
mov
pushf
jnp
xchg
cmpsb
test
fwait
add
or
divl
insl
dec
rclb
je
or
xlat
imull
in
adc
test
or
stos
sbb
in
orb
mov
fidivl
pop
push
out
dec
fisttpll
lret
fldl
idivb
mov
nop
adc
push
sbb
cld
lret
inc
scas
push
out
pop
ret
xchg
repz
mov
or
or
jae
leave
mov
popf
pop
jge
arpl
aas
sbb
rorl
push
xor
push
xchg
jns
xchg
mov
jno
call
mov
cwtl
pop
mov
insl
sub
pop
mov
orb
sub
lods
sarl
rol
dec
mov
mov
orb
aas
jge
cmp
cwtl
idivb
xor
pop
push
push
dec
out
jne
js
outsl
jle
adcl
aas
loop
xor
loopne
add
xchg
mov
lahf
mov
pop
adcb
int3
out
push
not
movsl
hlt
sbb
adc
inc
jo
aad
dec
hlt
dec
scas
or
js
pop
add
xchg
cli
jbe
jns
movsl
jge
pop
cwtl
mov
or
es
je
inc
filds
ficompl
xchg
xor
sub
lods
pop
sar
repz
mov
xlat
inc
hlt
hlt
dec
mov
ja
sub
insl
outsl
in
dec
loopne
dec
dec
add
mov
xchg
loopne
aaa
mov
rcrb
shl
int
insl
mov
in
dec
into
dec
fwait
push
lret
mov
std
pop
aad
int3
sub
shrb
mov
dec
loopne
fbld
dec
cmp
push
ret
add
cld
jbe
out
fwait
pop
mov
daa
aad
mov
into
dec
test
cld
into
mov
cli
adc
jg
popa
add
subb
and
inc
mov
mov
loopne
push
fisttpll
les
and
test
push
dec
jge
cs
pop
inc
imul
jns
jg
out
mov
mov
in
xchg
sub
test
jnp
aaa
inc
shrl
popl
mov
stos
adc
mov
jmp
push
test
cld
adc
les
test
adc
pop
sahf
jne
mov
sub
or
inc
mov
insb
pop
dec
push
dec
fwait
sub
inc
pop
push
jnp
sub
aam
push
jno
sbb
fbld
andl
mov
fadds
mov
test
adc
xorb
movsl
fstpl
push
inc
dec
hlt
sbb
pusha
inc
clc
les
rcrb
sub
add
xor
cmpsb
fwait
or
xorl
dec
cwtl
jp
push
push
shlb
push
cld
and
cmp
repnz
lahf
sub
mov
out
xor
sub
negl
inc
into
lods
mov
mov
mov
adc
lock
inc
pop
xor
sub
and
and
inc
ljmp
insb
gs
mov
fcompl
jns
mov
jae
xchg
out
call
lret
and
cmp
push
sub
cli
pop
or
pop
sub
pushf
sbb
outsb
shlb
jl
dec
sbb
pop
fcomip
adc
stc
cmp
mov
testl
xlat
add
out
outsb
cmp
imul
in
and
pop
lods
fnstsw
xchg
incl
inc
pushf
inc
cli
std
jg
sbb
fcomps
adc
mov
push
popa
mov
adc
cmp
cmp
testl
or
mov
xor
jns
mov
das
inc
mov
and
mov
dec
pop
pop
dec
shl
daa
fstpt
cltd
mov
add
fdivrs
lods
sbb
add
das
and
loope
int
nop
test
lret
mov
push
adc
and
xchg
lahf
inc
fisubrl
mov
pop
mov
int3
and
inc
aam
movsl
pop
lea
push
rcrb
add
xor
scas
and
adc
sarl
mov
mov
inc
mov
and
pop
enter
pop
inc
stos
xor
xor
mov
popf
push
xor
xor
sub
inc
fisttps
mov
mov
or
mov
or
dec
mov
imul
daa
dec
inc
pop
pop
das
lods
ds
pop
mov
insb
imul
cmp
add
fnstenv
repz
adc
fisttpl
xor
push
data16
in
cmp
jb
xor
jmp
out
psadbw
fidivrl
leave
xor
inc
and
mov
and
jo
and
push
xchg
jp
in
dec
lea
jmp
push
iret
xchg
xor
clc
inc
sub
hlt
sbb
imul
sbb
enter
dec
popa
sub
mov
mov
mov
sbb
stc
push
xchg
or
pop
sbb
push
xor
sbb
cmp
neg
jmp
cli
jmp
sbbb
repz
inc
pop
mov
stc
js
mov
inc
dec
in
imul
and
inc
add
ret
popf
mov
dec
jns
adc
sub
test
lock
test
loope
cmpsb
jle
popa
sbb
out
fiadds
loopne
sbb
jmp
adc
lret
stos
mov
test
xchg
dec
gs
xchg
test
mov
stos
lcall
or
and
pop
add
pop
pop
mov
sub
outsb
jmp
lds
mov
mov
add
sub
pop
fidivl
scas
xchg
aaa
mov
and
add
mov
jne
out
cmp
rcll
adc
jle
xor
push
inc
out
lea
sub
xchg
cltd
insb
jp
test
push
insb
cld
dec
mov
aam
add
push
jge
inc
and
sbb
mov
jp
push
xchg
aam
adc
push
insl
stos
int
add
adc
call
cmp
fidivl
sti
adc
cmp
mov
xchg
and
popf
sbbl
mov
cmp
pop
jae
mov
inc
popa
or
dec
mov
scas
mov
mov
sbb
and
stc
sub
std
pop
das
inc
loopne
add
jle
inc
adc
pop
leave
movsb
ficoms
pop
mov
dec
or
push
and
imul
bound
imul
in
and
dec
ror
xor
jo
sub
sbb
and
and
pop
pop
ret
push
cmpsl
outsl
clc
testb
adc
mov
pop
movsb
inc
ffreep
frstor
sub
loopne
pop
mov
jl
ja
jb
insb
xchg
pop
pop
and
das
and
dec
js
inc
in
jb
pop
pop
mov
jl
mov
ja
cld
add
fs
addr16
sbb
pop
mov
cld
lahf
aam
push
je
pop
pop
or
cltd
xor
loopne
shrl
aaa
fisubrs
lcall
and
xchg
mov
xchg
cmp
push
sbb
jo
mov
sahf
mov
xor
cmc
and
sub
cltd
push
xor
les
mov
and
xchg
xor
push
mov
cmp
mov
mov
in
sti
xchg
dec
scas
cmp
repz
shll
mov
aas
movsb
and
subb
rol
add
sahf
sti
xlat
js
push
sarb
add
or
dec
mov
aas
xor
outsl
ljmp
mov
push
mov
pop
cmp
pop
xchg
ja
mov
or
adc
mov
insb
cwtl
inc
fsubl
or
arpl
clc
adc
push
cmp
push
addr16
add
dec
mov
cltd
rolb
mov
push
xor
inc
mov
aad
or
xchg
jge
ficoml
add
sub
push
rorl
aad
fcoms
sub
mov
fucomip
lods
sbb
cmp
cmc
movsb
clc
mov
cli
fmuls
imul
or
dec
fdivrl
dec
pop
mov
je
in
lods
lea
out
fsts
popf
sti
fists
repz
sbbb
shlb
xchg
cmp
adc
shlb
dec
iret
sub
pop
test
pop
inc
dec
push
add
pop
push
add
cmp
pop
sbb
dec
cmp
divb
in
mov
pop
sub
sbb
call
xor
xchg
inc
ss
sbb
jo
mov
push
iret
jecxz
mov
fwait
mov
mov
into
loope
pop
aam
jns
and
repnz
iret
enter
popf
xlat
add
adc
add
in
add
arpl
out
mov
and
sti
dec
push
xor
mov
inc
cmp
cmpxchg
dec
pop
fs
pop
mov
inc
or
imul
and
pop
xor
aam
je
sti
mov
jecxz
cwtl
mov
cmp
ret
roll
or
xor
cli
arpl
pop
jns
push
sub
add
test
mov
cmp
adc
xchg
sub
je
inc
cmpsl
stos
adc
aaa
adc
cmc
xor
divl
stos
adc
adc
rorb
mov
pop
push
push
pop
loopne
mov
xor
rol
xor
mov
data16
ficoms
addb
cmp
pop
mov
sbb
popf
movsb
fisttps
sub
movsl
mov
je
and
mov
out
mov
xchg
sahf
adc
jg
jo
fsubrl
jle
mov
int
inc
push
cmp
sbb
lret
cmp
sahf
bound
pop
loope
xor
stos
adc
jb
inc
lods
enter
mov
aas
cwtl
add
andb
gs
ja
mov
bnd
inc
mov
mov
lea
movsl
shl
in
in
mov
cltd
in
hlt
mov
mov
insb
das
sub
sub
fstps
or
scas
daa
fucom
pop
mov
xlat
jae
jp
mov
cli
jecxz
xchg
push
push
cmp
pop
aam
pop
scas
sbb
mov
dec
pop
push
sarl
lcall
repz
jne
out
xor
fcoms
ljmp
push
mov
pop
data16
push
jge
push
cs
xchg
mov
mov
cmp
mov
sub
lret
das
cmpsb
mov
jae
jmp
sub
test
mov
imul
and
in
rol
fs
iret
push
xchg
and
mov
test
xchg
cli
jle
and
test
push
pop
rcrl
xor
adc
adc
push
push
enter
cmp
pushl
dec
fldenv
mov
lds
inc
sub
add
adc
popa
movsl
adc
stos
sbb
and
lcall
pop
stos
pushf
or
jl
mov
subb
jmp
or
xor
aad
cmpsb
dec
mov
and
es
and
and
mov
jns
icebp
filds
call
enter
sub
aas
or
cwtl
sub
movsb
cmpsb
pop
and
jbe
repz
cmc
sti
xor
push
xchg
adc
jecxz
nop
cmpsl
in
ds
xchg
data16
test
inc
ljmp
out
sbb
xchg
rcl
lock
sbb
cmp
gs
jne
mov
sbb
or
bound
mov
ds
mov
and
dec
pop
inc
loope
xor
stos
pop
dec
push
push
add
jge
test
pop
orl
and
movsb
push
dec
lods
out
stos
add
jmp
mov
pop
jb
push
mov
push
xor
pushf
jl
negb
out
hlt
add
sbb
scas
inc
ret
call
enter
xlat
out
xor
pusha
xchg
add
sub
jge
sbb
push
mov
call
or
imul
xor
lret
loope
in
rclb
in
push
push
and
insb
mov
in
push
lods
lods
or
ret
cwtl
mov
xchg
xor
fisttps
jmp
ljmp
js
push
fidivl
adc
xor
jns
nop
mov
cmp
push
rcll
test
jo
push
and
out
sbb
movsl
dec
jge
stc
insb
jge
or
lock
push
into
movsb
scas
cmp
mov
mov
subl
call
dec
mov
cmpsb
ret
jno
repnz
inc
mov
aas
orb
jl
out
inc
leave
icebp
mov
pop
mov
sub
pop
or
imul
sbb
and
call
dec
xor
int3
sub
and
mov
scas
cld
out
hlt
mov
sub
and
inc
sarb
lods
nop
push
jb
push
mov
aad
mov
mov
xchg
shlb
adc
mov
push
lcall
and
mov
pop
testl
dec
inc
jg
mov
pushf
xor
or
fs
fwait
dec
ret
pop
out
mov
cwtl
push
repnz
sbb
mov
rolb
popa
fsubrl
cld
lods
mov
aaa
jno
inc
mov
repnz
sti
push
outsl
movsl
dec
imul
dec
in
jnp
lahf
testb
movb
push
sbb
mov
sbb
gs
mov
adc
les
mov
push
mov
add
or
mov
mov
pop
mov
dec
sbb
xchg
fimuls
and
mov
xor
cld
ss
mov
push
adc
lret
sahf
lcall
pop
aam
pop
inc
mov
dec
out
xor
sub
pop
mov
mov
testb
pop
adc
mov
xchg
push
popf
jnp
out
subb
push
scas
or
inc
shlb
into
aam
mov
in
adc
xor
push
sub
jp
inc
dec
inc
jl
adc
or
mov
jne
jne
movb
add
into
repz
ja
lret
pop
jle
outsb
adc
mov
test
jmp
decl
fdivrs
mov
cmpsl
cld
jg
cmp
mov
ss
fsub
sbb
sbb
cmp
inc
sbbl
jae
fsubrl
mov
inc
scas
mov
ja
out
je
inc
ret
decl
icebp
cltd
movsl
jl
adc
mov
inc
int
sti
mov
lods
test
fistpl
add
mov
jl
jne
es
out
pop
mov
xchg
ss
xlat
cmpsb
push
push
test
les
bt
int
ss
enter
testb
sbb
pop
stos
inc
or
and
push
dec
fadd
icebp
stc
in
pop
rorl
xor
lods
pop
sub
lcall
aam
leave
and
stos
stos
sub
fs
cltd
roll
dec
int3
push
adc
ret
add
adc
int3
mov
fwait
push
inc
jp
sti
inc
inc
inc
jg
int
js
push
insb
ds
add
fnstenv
pop
out
enter
adc
ljmp
jb
loopne
aas
push
out
aad
popa
daa
sub
leavew
sbb
fwait
leave
bound
andb
xchg
mov
push
jb
sbb
jo
sub
pop
es
aam
xor
mov
mov
sarb
sub
jecxz
mov
lea
pushf
jne
inc
jle
and
dec
cmp
adc
xchg
sbb
fucomi
push
pop
push
in
out
pushf
adc
cmp
jg
sbb
cmp
dec
out
das
imul
sub
insl
in
sbb
and
ret
sub
out
mov
jb
outsb
adc
jb
sbb
add
mov
lock
aad
pop
adc
movb
inc
scas
push
lods
push
jle
and
in
cmp
movsl
lds
loop
mov
dec
cmp
ret
adc
add
movsb
pop
test
ret
mov
das
arpl
int
je
popf
or
es
pop
mov
or
jmp
subl
xchg
xor
jb
mov
mov
push
cwtl
sbb
pop
aaa
inc
sbbb
push
mov
std
sbb
jno
pop
mov
lock
or
lods
shrl
mov
stos
mov
xchg
push
lods
mov
lea
inc
inc
fsts
xor
cmpsl
mov
addb
aad
and
mov
movsl
cmp
fiadds
fildll
testl
sub
outsl
nop
sub
push
push
mov
jnp
pop
ret
push
insb
out
fs
cmp
call
pop
and
adc
scas
xchg
sub
and
cmp
sub
les
or
mov
inc
rcll
pop
pushl
xor
pusha
mov
cli
sub
sbb
hlt
mov
pop
test
aas
mov
adc
add
push
mov
out
adc
aaa
inc
pop
dec
in
add
adc
mov
sti
add
sbb
dec
ret
ja
notl
cmp
ss
mov
mov
and
int3
mov
sub
or
lods
add
idivb
enter
shlb
ljmp
xor
in
or
cmp
mov
rorl
xor
rcll
ja
push
loop
lahf
shrl
pop
jne
sub
out
or
jne
lods
loop
dec
mov
int3
mov
fcompl
cmp
mov
mov
pop
lret
sarb
icebp
test
xor
rclb
push
xor
mov
pop
pushf
inc
lahf
fcmovb
dec
rcrb
push
aas
pushf
lret
push
pusha
pop
rolb
inc
adc
aaa
mov
adc
lds
in
mov
adc
or
call
mov
outsl
sub
out
ljmp
movsl
ss
cmp
add
fsub
and
aas
sbb
jo
xlat
and
dec
pop
stos
outsb
imul
xor
lahf
push
popf
rcll
mov
xor
push
fidivrl
add
test
adc
mov
scas
out
clc
dec
imul
movsl
cs
out
inc
push
sub
sub
dec
pop
mov
push
in
dec
les
movsl
jge
pop
aas
arpl
jle
and
rcll
and
and
icebp
or
sub
imulb
jmp
jne
dec
jg
iret
ret
ja
shr
push
sbb
sub
mov
sar
bound
add
and
cltd
stc
jecxz
cwtl
imul
xor
xchg
mov
insb
movsl
incl
loop
cmc
cmp
in
xchg
aaa
call
lcall
aaa
add
push
cld
cwtl
adc
pusha
pusha
xor
dec
ss
sbb
ljmp
popf
sub
lahf
std
adc
enter
xchg
and
bound
inc
mov
popf
fisttps
imul
mov
xor
sub
clc
or
and
or
test
in
insl
inc
lea
add
out
movsl
xchg
or
out
push
adc
ja
adc
cmp
cmp
mov
clc
mov
xchg
int
loopne
or
hlt
lods
push
cmp
dec
leave
das
les
imul
into
sub
pop
pop
leave
shll
xchg
sti
push
daa
mov
test
mov
test
dec
xchg
xorl
mov
jno
xor
gs
jb
int
mov
jg
mov
mov
mov
data16
test
mov
daa
or
sub
xlat
jl
pusha
pusha
xchg
push
push
cmp
jge
pop
dec
lret
imul
mov
mov
mov
es
jmp
rcll
sub
adc
adc
out
inc
mov
mov
imul
fidivs
cs
pop
pop
inc
or
pop
inc
fdivl
push
add
cmp
in
mov
mov
adc
lds
outsl
mov
rcr
xor
imul
ss
insl
fmuls
sti
lahf
pop
dec
adcb
aaa
jae
sub
cltd
add
jecxz
repz
ja
pusha
lea
mov
push
popa
dec
or
inc
sbb
stc
add
push
jl
pop
test
xchg
xchg
popa
jb
inc
push
lods
pop
cmovno
inc
mov
outsl
xchg
in
jmp
test
gs
jne
lock
subl
jp
js
jbe
sbb
inc
push
xor
adc
sti
popa
fisttpll
fdivs
pushf
and
test
jmp
dec
out
sbb
test
mov
pop
mov
cs
xor
outsb
mov
pop
ja
xor
jle
fxch
mov
jae
sbb
cwtl
mov
shl
sub
and
cwtl
cmp
xor
and
pop
sbb
sub
or
popa
stos
add
sbb
push
and
cmp
popa
sub
sub
jl
pop
leave
jge
stc
push
negb
add
mov
in
pop
or
es
hlt
scas
ja
xlat
adc
ret
push
xor
xchg
fcmovnbe
orl
pop
cmp
mov
xor
icebp
pusha
xchg
xchg
push
enter
dec
or
xor
into
movsl
lods
push
push
mov
xor
shrl
into
jl
sti
xor
lds
jne
mov
jecxz
dec
mov
inc
inc
sub
push
enter
andl
aam
jmp
out
sub
pusha
ds
add
pop
mov
mov
xchg
mov
inc
popf
or
cltd
push
cwtl
dec
push
jne
inc
pushf
fs
sahf
dec
push
cvtdq2ps
lea
ds
sar
jb
loop
mov
xchg
push
jnp
les
lcall
ja
jmp
and
shll
popa
scas
jo
push
add
cld
dec
jg
mov
cmpsb
imul
dec
aam
je
cli
cmpl
xchg
jecxz
adc
mov
push
pop
mov
xor
shll
sbb
call
push
xchg
fisubrs
or
or
std
stos
push
mov
call
es
jno
jnp
imul
mov
in
decl
push
mov
dec
inc
popa
mov
insl
loopne
mov
mov
loopne
sbb
les
jns
jne
inc
mov
outsb
in
xchg
inc
hlt
mov
inc
xchg
fwait
mov
push
inc
test
push
and
push
rol
outsb
mov
mov
insb
mov
mov
mov
adc
into
lahf
sti
icebp
push
adc
mov
cmp
repz
cmp
and
inc
fs
push
mov
aad
in
cmp
pusha
fbld
cmpsb
fwait
jle
out
pop
jbe
icebp
cs
push
scas
xacquire
aad
pop
jae
xchg
mov
sahf
and
xchg
adc
hlt
cmp
lods
sub
jno
lods
loopne
pop
or
dec
lea
adc
xor
lea
jge
pop
inc
xchg
cld
test
xor
ror
xor
in
in
test
fwait
inc
mov
sbb
in
or
mov
rcrb
adc
mov
stos
xchg
and
push
stos
call
imul
in
sbb
jmp
lret
mov
popf
clc
adc
sub
cmpsb
pushf
jne
jno
mov
mov
pusha
adc
movsl
adc
mov
repnz
insl
int3
sbb
mov
mov
test
jecxz
push
ret
mov
js
popf
in
jmp
xor
dec
add
jecxz
inc
or
jg
xchg
inc
loope
cltd
adc
negl
je
mov
jne
and
leave
cs
mov
pop
imul
stc
sbb
es
mov
test
sbbl
test
call
andl
mov
clc
mov
lds
daa
lcall
mov
jmp
pop
imul
cli
and
xor
dec
aas
movsl
arpl
lea
scas
ja
pushl
and
gs
pop
xchg
imul
out
imul
mov
lods
pop
lock
sbb
mov
jnp
ficoml
aas
push
sub
sbb
push
pop
add
dec
sarl
aam
adc
cs
hlt
cmpsb
ds
rorl
out
out
mov
push
bound
push
in
jecxz
xor
dec
loopne
les
mov
mov
sub
test
ret
and
mov
sar
fucompp
jg
adc
in
sbb
lods
sarb
sbbb
xchg
or
and
mov
add
frstor
jne
lds
jle
sbb
stos
push
lods
xor
sub
mov
sqrtps
inc
mov
xchg
xchg
cmp
and
cld
and
lock
fwait
dec
adc
icebp
mov
xor
mov
test
and
inc
in
xor
mov
outsl
in
cmp
call
aas
adc
lret
add
jg
add
adc
push
test
push
cltd
mov
sub
pushf
lret
inc
fidivs
cmpsl
adc
cmp
ret
push
push
push
xchg
lahf
xor
xor
sbb
mov
ljmp
sub
stc
cmpsb
adc
sub
pop
sub
or
decl
leave
and
jmp
sbb
and
push
js
outsl
inc
call
mov
dec
test
insb
jne
push
sahf
pop
int
stos
fs
or
sbb
cmp
les
sbb
cld
dec
adc
gs
or
xor
mov
es
mov
loopne
ret
pop
aaa
icebp
pextrw
adcl
xchg
xchg
addr16
mov
int3
fs
mov
in
jae
iret
fisubs
cli
scas
sub
in
andl
lock
out
and
dec
push
inc
movsl
das
repz
lcall
inc
aaa
ljmp
scas
dec
dec
mov
aaa
push
outsl
xchg
test
iret
xchg
cmp
ds
rol
ljmp
mov
or
stc
or
or
fcmovb
cmpsl
fmuls
insb
scas
push
cmp
dec
fbld
push
leave
fdivs
xorl
aad
fnstcw
and
push
js
sub
mov
int
jecxz
out
adc
loopne
jns
and
sbb
adc
mov
pop
pop
sbb
inc
xchg
fidivs
mov
pushf
fadds
xor
push
out
insl
push
cld
dec
fildll
in
mov
mov
lcall
out
jp
pop
mov
jmp
sub
jns
or
dec
ret
push
pcmpgtb
or
jp
sbb
sub
ret
pop
cmp
or
pushf
mov
pop
xchg
push
mov
loop
leave
icebp
into
cmp
pop
scas
jp
dec
das
pusha
mov
lret
jecxz
mov
cmpsl
icebp
cmp
jno
rcrb
fadds
in
mov
lods
push
mov
cmp
in
fstps
xor
imul
pop
sub
mov
call
or
lods
repnz
subb
popl
nop
xchg
jmp
xchg
adc
stos
inc
mov
xlat
sti
inc
or
mov
sbb
xor
test
jae
out
sti
xchg
sbb
adc
imul
inc
sbb
dec
cmpsl
fcoml
sbb
lock
out
pop
incl
add
mov
jns
xor
jecxz
cld
mov
dec
ficomps
fdivs
jle
dec
mov
xchg
loop
push
es
outsl
cmp
xchg
fidivrs
cmp
js
out
pushf
ljmp
mov
sbb
mov
mov
jne
mov
stos
xlat
lock
ror
push
cmp
mov
or
xchg
xor
test
ficoms
divl
xor
add
jmp
ss
dec
stos
clc
subb
mov
ret
push
sub
jle
push
addl
ficomps
popa
inc
jne
scas
test
push
aad
push
insb
roll
ret
sub
push
dec
xchg
jle
negb
jno
and
inc
or
mov
xchg
push
jbe
test
pop
pop
add
mov
adc
adc
outsb
jle
mov
or
mov
fchs
cmp
int3
fstp
lahf
mov
push
idiv
jmp
addr16
out
xor
stc
push
fadds
arpl
loope
scas
dec
adc
ret
fs
push
dec
lds
cmp
rcr
dec
jnp
add
stos
in
inc
cmpsl
cmp
inc
test
out
movsl
sub
xchg
mov
fdivrp
lret
cmp
rcl
je
xchg
push
cmc
lods
in
xor
pop
mov
or
add
and
xchg
add
rcrl
mov
loope
test
daa
jg
je
pop
mov
inc
into
jecxz
cmp
outsl
sub
xor
cmp
pop
push
sbb
in
cmp
add
cmp
cmp
daa
or
adc
shll
clc
fldcw
mov
negb
scas
orl
jb
icebp
inc
adc
mov
rcrl
ss
xor
jl
enter
xor
scas
pusha
cmp
jno
icebp
add
icebp
mov
insl
incb
out
icebp
add
insb
add
mov
dec
cmpsl
or
xchg
movsb
jmp
mov
cmp
adc
dec
mov
xor
je
jbe
shl
push
imul
dec
jp
in
scas
inc
push
sahf
pusha
pop
pop
xchg
push
xchg
sbb
jae
out
dec
std
mov
add
dec
mov
in
jo
popf
and
xchg
in
inc
cmp
dec
jae
xlat
lock
xchg
out
shl
xor
jne
pop
adc
int3
sub
cmp
mov
subb
outsl
flds
lahf
in
pop
cmp
pusha
sbb
adc
pop
adc
int3
nop
xchg
mov
add
lret
rclb
mov
sub
cmpsb
push
rorl
add
scas
test
loop
cli
mov
fcmovb
test
inc
xor
stos
dec
rorl
shlb
pop
cmp
gs
fmull
inc
test
add
add
fsubs
test
es
xor
aad
mov
mov
in
int3
ja
pop
push
cmpsl
cwtl
imul
aam
push
and
add
jo
jo
or
cwtl
push
aas
dec
clc
sub
inc
aad
test
sub
bound
fsubrs
shll
pop
cld
adc
cmpsl
daa
add
outsb
push
fs
push
xor
cmp
xchg
adc
jnp
daa
arpl
mov
loop
decb
arpl
int3
inc
mov
mov
les
int3
push
pop
scas
int
pop
in
insl
jb
js
mov
les
jns
push
xor
cmp
sub
pushf
clc
pop
mov
xchg
imulb
in
test
ret
push
pop
mov
shr
mov
mov
sub
cmp
jnp
xor
cmpsl
push
xchg
mov
rcrb
int3
dec
nop
ficompl
gs
pop
nop
mov
cmp
stos
aas
aad
icebp
jns
lock
cmp
pop
inc
fnstcw
pop
and
jle
cmp
rorl
push
and
jp
sbb
pusha
loope
mov
mov
xor
xlat
pushf
inc
push
cli
jb
sbb
js
jns
mov
shlb
js
mov
xchg
push
js
mov
loope
iret
adcb
add
and
addl
repnz
lock
inc
or
pop
imul
cmp
xor
xor
jns
adc
outsb
out
jge
stos
movsl
xchg
in
int3
js
sbb
outsl
fiadds
mov
jbe
out
push
mov
adc
mov
mov
xchg
pop
icebp
push
lret
jo
ja
mov
inc
lcall
adc
pop
cmp
inc
or
or
add
add
adc
popf
add
pop
inc
jns
aam
in
ds
ret
xor
sbb
leave
sub
cmp
mov
sbb
gs
pop
cmp
xchg
cmp
sbb
scas
push
in
mov
cld
ret
addl
add
inc
mov
push
sbb
dec
out
jo
ds
or
jmp
cmpsb
mov
mov
add
js
fimull
mov
pop
outsb
jo
xchg
lea
jp
out
in
dec
pop
cmp
in
or
pop
cs
cmpsl
adc
cmp
scas
idivb
fstps
idiv
mov
out
shll
fsubs
jle
gs
xor
and
cmpsl
push
arpl
push
or
lock
fstpl
fsubrs
xchg
and
mov
add
mov
scas
popa
pop
lock
fbstp
movsl
imul
jl
sbb
xrstor
leave
in
ret
mov
jne
stc
out
notb
inc
loope
stos
cmp
cmp
xor
and
push
dec
mov
lock
mov
aad
or
adc
cwtl
outsl
icebp
cs
xchg
push
outsb
mov
int
mov
mov
test
ret
call
and
ficoms
arpl
mov
shll
jg
out
dec
and
cltd
sbb
enter
mov
mov
pusha
and
mov
cld
out
in
fisttpll
movsl
loope
jbe
hlt
out
jmp
sub
test
pop
aad
shl
pop
add
push
stc
loopne
push
mov
lds
add
icebp
mov
into
push
mov
mov
outsl
jno
es
in
je
inc
push
fsubp
pop
imul
adc
add
or
rol
mov
outsb
lods
sbb
jmp
push
sbb
cld
roll
inc
stos
push
aas
decl
fwait
mov
dec
dec
das
sahf
lea
add
in
push
bound
xor
in
and
sub
push
jg
int
cmpsb
popa
cmp
xchg
cmp
xchg
xchg
movsb
mov
xchg
insb
outsb
insl
mov
hlt
bound
jg
mov
xor
shlb
pop
cmp
pop
sbb
or
cmp
outsb
xchg
iret
cmpsl
pop
andl
mov
test
mov
movsb
cmp
outsl
mov
daa
int3
sub
jle
push
test
xchg
cs
ret
dec
cld
pushf
fmuls
xor
add
mov
push
dec
sbb
addr16
nop
jp
das
lahf
test
jl
sbb
roll
stos
and
repnz
roll
out
xor
mov
shl
inc
stc
xchg
sbb
or
adc
inc
push
ffreep
popf
sub
es
xor
sti
popf
inc
pop
and
push
mov
pushf
sbb
cltd
clc
sub
sahf
test
push
shrb
test
inc
cmp
mov
insb
pop
enter
insb
pop
mov
dec
les
and
ret
gs
in
cmpb
scas
pop
mov
inc
sub
lods
add
mov
cmp
push
sub
mov
lds
pop
icebp
mov
rcll
mov
dec
dec
loopne
xlat
loope
popa
int3
rcr
ss
daa
jbe
orb
pop
popa
pop
inc
mov
std
cmpsl
cmc
pop
add
addl
xor
xchg
sub
loope
mov
fimuls
or
cmpsb
movsb
lahf
xchg
mov
js
shll
sub
xor
xchg
bnd
mov
test
jo
lea
push
push
loope
stc
sbb
mov
mov
jge
les
dec
inc
sub
mov
sbb
aas
fists
cmp
push
ret
movsl
adc
xchg
mov
sub
push
aad
pushf
shl
inc
lea
mov
inc
insb
cmp
aaa
cwtl
sub
xor
add
sbb
add
cmp
xchg
scas
stc
pop
jmp
adcl
loop
das
xchg
xlat
or
in
xchg
xor
xor
sub
sub
popf
mov
gs
negb
addr16
ds
cmp
aaa
out
jl
cmp
adc
xor
in
lret
xor
jns
icebp
pop
jg
add
test
shll
hlt
popa
cmp
sub
push
out
mov
lcall
in
ljmp
sub
pop
add
int3
data16
lahf
xchg
add
inc
arpl
out
popa
or
and
fsubrl
jo
mov
mov
pop
lock
sti
mov
fidivrl
fnstcw
ret
bound
inc
or
jmp
popa
clc
imul
sub
mov
data16
out
mov
fsubrs
pop
jb
std
adc
push
orb
pop
or
add
lds
lock
inc
add
sub
rorl
call
repz
sbb
cmpsl
or
rcll
and
xor
and
das
fidivrl
inc
add
xor
jnp
push
mov
xlat
push
lret
sub
add
add
or
mov
inc
dec
loope
push
addr16
stos
lea
mov
fisubs
cld
jmp
mov
fsubs
xor
rorl
mov
pop
bound
sub
and
xor
ret
or
mov
ljmp
jp
sbb
enter
mov
mov
add
inc
test
inc
inc
lahf
insb
jge
xor
push
pop
adc
into
mov
push
js
adc
sarb
xchg
stc
je
loopne
lods
cs
mov
push
pop
aam
das
or
leave
add
lock
sarb
add
aam
or
xor
das
ss
mov
gs
inc
cmp
testl
enter
add
push
sub
sub
sub
insl
xor
pop
push
push
mov
mov
lret
mov
fstl
mov
scas
mov
ret
adc
sbbl
xchg
test
xor
movzwl
mov
lahf
xchg
test
ljmp
adc
lret
addl
and
dec
adc
jecxz
cmc
imul
push
xchg
sti
push
test
daa
aad
add
in
aaa
mov
js
mov
aas
mov
jno
negl
leave
arpl
ffreep
mov
sbb
push
movsl
xchg
je
push
xor
cmp
shl
push
lahf
or
xchg
jmp
adc
inc
int
loope
sbb
data16
cmp
inc
fs
iret
mov
add
push
gs
push
leave
push
jae
cmpsb
jnp
mov
jle
pop
jbe
addr16
pop
sbbl
nop
mov
mov
push
popf
xchg
push
mov
xchg
or
lock
mov
out
jmp
cmpl
ret
cltd
xlat
or
fwait
and
and
out
in
lret
jle
mov
stos
jbe
or
mov
cmp
mov
or
test
mov
aas
or
mov
cwtl
push
jnp
lret
adc
adc
roll
stos
sbb
leave
xchg
out
movsb
xchg
mov
xor
add
mov
out
aaa
sbb
cmpsb
in
xor
leave
sub
adc
sbb
sub
fisubrs
sbb
adc
sbb
movsb
jnp
mov
test
and
lock
push
lds
sub
jae
iret
mov
push
mov
sbb
shll
ljmp
mov
call
or
inc
push
stos
xlat
sub
fcoml
es
in
push
es
mov
inc
pushf
fildl
sbb
sahf
add
jae
out
mov
fldt
xchg
rcr
imul
stos
xchg
add
popa
mov
push
int3
inc
notb
movsl
test
adc
jo
test
fisttpll
pop
push
mov
dec
decb
imul
mov
jle
sub
jnp
gs
mov
push
pop
lret
mov
cmp
subl
push
and
daa
jge
push
call
cld
xchg
push
cmpsb
push
mov
test
mov
repz
xor
adc
stos
in
pop
icebp
push
jecxz
roll
out
jl
imul
lea
inc
and
std
mov
or
fwait
in
aad
push
fwait
jecxz
push
mov
das
pop
push
movsb
push
test
add
jg
stos
leave
insb
or
rcll
xchg
mov
lods
xchg
and
adc
out
push
xchg
mov
fildll
clc
icebp
lods
inc
lds
aam
add
add
push
daa
hlt
cs
pop
icebp
sub
std
sub
or
adc
and
popa
xor
lock
idivb
pop
dec
xchg
or
out
sub
or
mov
int
adc
add
or
repz
loope
xor
andb
rorl
adc
ret
and
paddusw
js
cli
int
mov
mov
fcompl
mov
bound
jmp
mov
scas
cmp
aaa
out
mov
daa
jnp
addl
cmpl
test
mov
xchg
fstl
xchg
lds
out
das
pop
mov
cmpb
cmp
pop
aaa
cld
dec
pop
pop
push
jo
mull
movsb
pop
xor
imulb
je
ret
adc
or
iret
dec
cld
lcall
jne
cmp
sub
fidivl
dec
cld
and
mov
jae
rcl
xor
and
js
add
mov
mov
pop
and
movsl
adc
and
test
xchg
lock
fcomp
xor
orl
and
push
outsl
push
cli
lods
hlt
fistpll
mov
pop
pop
stos
loop
xchg
shrl
or
adc
jae
pop
fs
fdivs
fstpl
push
mov
xchg
inc
push
pop
js
cmp
dec
cmpsb
test
xchg
xchg
push
stos
xor
enter
cmc
test
aaa
jo
jo,pn
sbb
cld
mov
adc
cld
fmull
sub
xor
mov
add
div
int3
pushf
pop
sbb
mov
arpl
bound
jnp
rcr
mov
clc
xchg
into
jne
sub
hlt
or
aam
ret
and
mov
or
push
xchg
cmpb
enter
mov
jp
jmp
ja
pop
pop
pop
push
inc
pop
mov
or
sbb
adc
cli
add
clc
mov
pop
into
rorl
dec
push
and
cmpsb
sub
mov
xchg
lock
fdiv
cmp
cmc
inc
mov
pop
sahf
ret
jo
mov
pop
add
andb
jle
pop
cmp
cld
fidivrs
sbbl
decb
xor
inc
movsb
jo
dec
pop
push
push
and
aad
push
mov
fildll
mov
inc
fsubr
aad
jb
xchg
std
mov
add
xchg
test
mov
lcall
in
cmp
sbb
cmp
cli
fcoml
cmpsb
pusha
scas
xor
insl
idivb
mov
lods
inc
sub
les
dec
out
xchg
mov
out
xor
jnp
loop
xchg
add
push
dec
push
fnop
add
in
push
divl
icebp
mov
test
sbb
and
loop
jne
mov
addl
cmp
pop
and
pushf
or
xchg
pusha
mov
loopew
and
mov
rorb
leave
inc
adc
mov
je
das
ljmp
xor
pop
jns,pn
incl
lods
cmp
ffree
add
ds
cs
sbb
dec
push
clc
xchg
and
and
add
popa
mov
fldenv
stos
nop
js
inc
lahf
sub
xchg
jmp
sbb
dec
sbb
mov
or
mov
inc
andb
add
fstl
xchg
push
mov
and
jno
xchg
data16
jecxz
sbb
xor
popa
add
inc
shl
lods
dec
ljmp
scas
add
jecxz
and
sahf
icebp
add
ss
jmp
fisubrs
dec
in
mov
mov
aas
dec
pop
in
push
xor
and
stos
cwtl
rcr
and
pushf
repnz
nop
adcl
jecxz
fdivrl
adc
jno
outsl
lret
insl
dec
xchg
dec
out
ljmp
mov
rolb
mov
leave
enter
popf
xorl
lods
and
nop
in
mov
cwtl
adc
xor
or
fsubl
xchg
fwait
pushf
inc
lret
lods
cmpsl
pop
or
xchg
inc
xor
ret
leave
out
xor
dec
jno
movsb
mov
out
or
movsl
std
enter
mov
mov
mov
or
enter
mov
sti
adc
frstor
ret
mov
sbb
cwtl
mov
push
or
lret
rcrl
loope
insl
je
cmp
mov
lcall
sbb
add
and
int3
in
mov
insl
jg
lods
xchg
in
jge
lods
xor
xor
xor
and
mov
inc
test
mov
int3
and
inc
jne
sub
add
push
sbb
enter
fisubrl
je
push
mov
icebp
jg
xchg
lcall
mov
addl
xchg
jge
xor
std
cld
mov
sahf
inc
filds
pushf
and
lds
adc
jae
dec
mov
or
cwtl
mov
jns
popf
mov
out
notb
xorl
mov
cmc
mov
ret
cld
outsb
inc
pop
lahf
scas
adc
cmp
inc
push
popl
xchg
out
push
cmp
jge
add
sbb
push
js
jbe
or
rolb
test
pop
mov
fldenv
push
add
jle
pushf
inc
call
stos
or
fstl
enter
or
inc
pop
push
jl
sbb
add
push
add
mov
push
push
aad
pop
fmull
jo
int
repnz
mov
or
out
cli
addr16
lea
sbb
inc
add
cmpb
fisubs
push
xchg
jnp
int
pop
mov
and
lahf
fnstsw
cmp
ret
push
sbb
jb
int3
jge
in
mov
xchg
inc
mov
pop
movsb
ja
test
std
jnp
test
in
pop
add
jnp
test
pop
pop
cwtl
fs
xor
out
add
fs
dec
jnp
adc
sbb
push
mov
das
out
cmp
stos
in
mov
sbb
adc
cwtl
js
jne
inc
xchg
dec
repz
xchg
pop
out
dec
cmpsl
mov
mov
xchg
sbb
jg
push
lret
repz
push
stos
mov
sub
lret
mov
add
add
sbb
jmp
ljmp
cmp
movsb
mov
adc
xchg
notl
movsl
mov
nop
mov
icebp
pop
xor
xchg
xor
ret
mov
enter
shrl
cmp
xor
sbb
sbb
add
and
popf
or
push
or
jmp
cmpsb
mov
repnz
aad
xorl
nop
inc
test
push
fcomps
enter
stc
sbb
lock
test
push
stos
daa
xchg
lods
lret
dec
orl
inc
push
arpl
xchg
xchg
jp
or
xor
ret
in
inc
adc
mov
rcll
pop
lea
dec
and
outsb
mov
lods
push
inc
pop
inc
arpl
mov
sti
in
and
jno
mov
dec
adc
mov
mov
mov
jle
mov
push
cwtl
popf
out
add
cmp
stc
mov
jbe
jbe
push
sub
push
int3
fcoml
cmpsl
out
subl
or
xor
clc
mov
fnclex
int3
stos
cmp
sub
hlt
dec
sub
push
fwait
ljmp
nop
ja
shl
dec
daa
lahf
and
and
xor
faddl
xor
xor
icebp
mov
repnz
lret
sbb
jg
push
pop
repnz
mov
gs
das
clc
push
lcall
and
call
inc
into
iret
push
push
push
or
add
push
sbb
and
pop
pop
inc
mov
add
add
xchg
outsl
push
mov
mov
sbb
or
dec
aas
jns
push
adc
xor
bound
les
and
dec
aaa
jnp
lds
daa
fldz
inc
sahf
shrl
or
out
mov
jmp
les
arpl
jg
push
cmpl
mov
xchg
clc
push
push
mov
test
fs
fwait
scas
or
pop
jmp
or
lret
inc
push
pop
call
leave
stos
daa
imul
and
xchg
nop
mov
mov
movsb
mov
lret
mov
cmp
in
jb
cmpsb
inc
outsb
movsb
inc
out
jp
insb
jge
and
loopne
in
shl
inc
push
jns
test
and
ss
adc
jle
lret
adc
sahf
into
or
cmp
scas
push
adc
je
xor
mov
outsb
pop
outsb
mov
shll
xchg
mov
and
jg
fs
inc
inc
fmull
cmpsb
repz
data16
push
imul
inc
scas
xchg
negl
lea
std
lods
outsb
fs
jecxz
out
subl
call
movsb
aam
push
jo
cmp
movsl
push
testb
mov
push
or
mov
das
adc
dec
cmp
jb
cmp
ret
xor
test
test
fldt
in
adcb
mov
hlt
cld
sbb
outsb
out
je
or
je
cltd
ficoml
cltd
push
or
out
lret
shrl
lock
mov
shl
ret
jae
js
cld
push
or
xor
lcall
xchg
and
mov
les
cltd
mov
dec
pop
pop
mov
loopne
mov
dec
insb
sub
outsb
je
insl
test
and
lds
jne
cs
clc
add
ret
xchg
adc
push
pop
ss
and
mov
jge
dec
and
popf
add
in
dec
jge
jno
pop
pusha
jae
pop
jmp
popa
mov
cmpsb
add
test
jg
incl
jnp
dec
xor
dec
inc
ficompl
adc
out
mov
jmp
negb
xor
or
movsb
sarb
or
inc
cwtl
mov
mov
nop
dec
pop
sbb
outsl
loop
aam
es
lea
leave
jp
add
scas
cmp
inc
test
outsb
xchg
ret
popf
test
xchg
mov
pop
sub
sub
pop
cmp
xchg
in
das
xchg
jp
gs
lock
sub
pop
push
mov
repnz
ja
imul
jo
ds
daa
int3
inc
push
push
add
sbb
inc
jmp
imulb
inc
add
xor
pusha
add
sahf
xchg
popf
scas
inc
inc
in
or
fisttps
mov
inc
sub
bound
or
or
mov
mov
sub
repz
lock
lods
sub
pushf
dec
int3
sahf
imul
dec
push
xor
add
popa
pusha
pushf
loop
js
xchg
cmp
xchg
js
jno
or
add
add
sahf
fcoml
js
push
add
dec
sbb
mov
add
jle
ror
cli
mov
test
sub
or
add
ds
push
dec
jl
pop
pop
xor
enter
sbb
or
adc
pusha
testl
out
cmp
or
sti
inc
ljmp
mov
clc
bound
push
fsubrp
xor
and
push
aam
pusha
fldcw
mov
add
aad
out
push
cmp
ret
cmp
cmp
pslld
ja
push
mov
cld
or
cmp
xor
roll
and
icebp
xor
and
or
xchg
loope
rcrb
bound
mov
mov
clc
mov
xor
out
lea
push
icebp
add
std
xchg
sub
out
mov
mov
mov
stos
pop
in
cmp
outsl
cmp
xchg
loope
je
mov
xor
loope
push
int
jne
mov
ret
imul
adc
adc
movsl
pop
push
push
cmp
loopne
lcall
loopne
pusha
mov
hlt
inc
stos
mov
inc
pushf
dec
ss
out
sahf
test
ss
popf
gs
adc
ja
inc
das
js
xchg
adc
cmp
jns
outsb
push
cmp
sub
adc
pop
jl
pushf
je
sub
rcrb
shll
mov
stos
jae
inc
cmpsb
xlat
xchg
jbe
and
icebp
add
cld
cs
mov
push
xchg
sub
and
xor
and
clc
pop
mov
js
sub
adc
push
test
add
and
aaa
mov
jmp
mov
fmul
push
es
shll
push
addl
sub
ds
mov
add
inc
xor
fincstp
and
dec
aaa
sub
lods
or
popa
call
loopne
jmp
jbe
adc
inc
inc
mov
sbb
mov
push
testb
in
scas
fsts
push
add
flds
fnstenv
cmp
out
pop
pop
data16
sbb
out
cmc
mov
xchg
das
lret
pop
pop
loopne
lret
not
call
and
mov
dec
in
subb
jmp
repnz
in
xchg
bswap
sti
into
mov
fxch
clc
dec
loopne
and
and
xor
adc
pop
push
jmp
mov
pop
in
dec
testl
mov
dec
cmp
fwait
popa
sti
sbb
add
and
fbld
and
out
pushl
push
sarb
loope
cmc
enter
sub
jmp
pushf
xlat
and
imul
out
xchg
dec
xchg
mov
movsb
fcmovnu
add
xchg
lods
popa
lds
aam
xchg
clc
in
jge
es
xchg
aaa
imul
cwtl
mov
das
inc
jbe
dec
jg
jb
ljmp
shlb
jmp
push
lcall
call
cld
ljmp
jmpw
scas
jo
test
add
push
rcll
dec
pop
out
cmp
daa
loope
jge
adc
xchg
inc
pop
xorb
out
dec
lret
or
mov
mov
lcall
push
jae
or
jle
pusha
add
mov
jg
mov
cmpsl
test
dec
out
mov
popf
nop
dec
pop
out
in
loop
and
cs
add
mov
je
iret
inc
mov
or
pop
and
xor
jg
xchg
mov
mov
cmp
arpl
xchg
addr16
pop
imul
sbb
cmp
lcall
cltd
movsb
mov
adc
call
test
push
dec
rolb
lahf
sub
pop
fiadds
push
jge
stos
stc
mov
rclb
inc
jle
inc
xor
adc
sbb
xchg
stos
into
int3
rcll
inc
insl
jbe
adc
xlat
stos
or
or
testl
stos
outsb
jne
mov
jle
xor
lock
push
loopne
push
xchg
lds
or
les
loop
leave
jnp
lods
lret
jge
in
adc
inc
popa
mov
ror
sub
call
mov
lahf
fsts
decb
jne
xor
nop
hlt
loop
pop
mov
xchg
mov
addr16
add
aam
xor
push
or
dec
jecxz
cmpsl
rcl
clc
rcr
out
mov
rcl
fnsetpm(287
ret
or
cmpsl
mov
orl
push
clc
xor
addb
xor
xor
inc
inc
mov
and
repz
or
cmpsb
call
sbb
jmp
scas
dec
xor
sbb
jno
push
and
cmp
mov
or
mov
lret
ret
or
sbb
and
fsubrl
cmp
lds
adcb
xchg
mov
test
push
jg
xchg
std
cmp
cmp
dec
mov
es
cmpsb
ret
addr16
imul
imul
mov
in
jo
daa
stos
push
sbb
pop
and
inc
mov
and
adc
cmc
adc
jmp
cmp
add
fldcw
sub
aas
gs
xor
aaa
mov
bound
shl
lods
lcall
leave
push
push
mov
add
scas
xor
lock
std
jecxz
jno
and
mov
add
in
mov
cwtl
adc
xchg
imul
cltd
lcall
push
orb
cltd
adc
das
mov
inc
and
inc
xchg
cmp
inc
daa
push
hlt
push
sbb
sti
std
or
lret
push
ljmp
fsubr
push
cmpsl
mov
pop
testb
hlt
jg
movsl
push
decb
pop
stc
pusha
jg
clc
aam
and
adc
mov
shl
inc
repnz
mov
dec
push
test
adcl
sbb
aaa
pop
push
sahf
int3
shr
in
notl
pop
mov
adc
push
popa
mov
imul
int
xor
lods
inc
out
cmp
cmpsb
int3
fldl2t
xor
xor
mov
jg
push
idivl
xchg
in
push
or
imul
outsb
ds
pop
lahf
jae
fdivp
xchg
inc
mov
sub
sti
in
cmp
mov
pushf
mov
lea
jecxz
xor
test
jmp
mov
bound
and
sbb
mov
mov
jle
out
mov
cmp
or
jecxz
sbb
adc
test
les
xchg
fistps
das
jo
test
jge
in
in
add
mov
daa
loope
lods
nop
mov
and
xchg
cld
mov
sbb
das
outsb
dec
sbb
cmp
daa
inc
pop
insl
cld
bound
add
adc
lcall
push
xor
inc
into
lea
testl
or
shrb
stos
inc
imul
and
das
andl
in
invd
les
xlat
pop
add
roll
jecxz
xor
lods
dec
popf
push
popf
ficoml
out
fbld
mov
jl
mov
out
imul
adc
ret
mov
xchg
jo
ljmp
lock
sbb
loop
pop
outsl
out
xchg
mov
inc
or
out
add
imul
mov
pop
xchg
insl
out
dec
fdivl
lods
icebp
popa
xor
mov
lods
and
add
adc
divb
add
fidivrs
or
pop
mov
push
in
int
lret
cld
fists
xor
fcoml
outsb
js
jno
push
icebp
push
sbb
rcrl
mov
dec
push
add
pop
lret
or
out
mov
fnstcw
cwtl
adc
or
jecxz
outsl
ror
xchg
hlt
test
xor
sbb
xchg
mov
fisttpl
sbb
mov
clc
cmpl
jbe
push
addr16
xchg
mov
bound
pop
dec
add
xor
push
rclb
mov
sahf
pop
push
sbb
repnz
inc
jp
mov
xor
cltd
mov
dec
pop
inc
loop
cmpsb
mov
cmpsl
in
js
lret
outsb
push
add
aam
jae
push
xchg
pop
cmp
add
fwait
clc
repz
mov
lahf
jns
jnp
sub
and
jo
lcall
repnz
mov
sldt
stos
out
jnp
dec
xchg
scas
dec
cmp
mov
mov
shrb
or
aaa
mov
pusha
jecxz
xchg
sar
push
call
and
mov
aam
aam
fisttps
sahf
rorl
fists
adcl
add
mov
aad
mov
cwtl
sbb
sbb
xchg
imul
inc
addr16
inc
stc
jecxz
imul
inc
and
fs
js
sub
or
addr16
sub
jae
and
cmpsb
cltd
ja
mov
and
bound
stos
shrl
test
jmp
cmc
notl
lea
clc
out
outsl
in
pop
lahf
test
jae
shrl
outsl
rcr
popa
push
call
and
xchg
dec
int
push
stos
add
clc
int
daa
mov
imul
xchg
sahf
pop
mov
stc
sar
mov
sar
or
cld
xchg
nop
xchg
into
sub
sub
hlt
or
jae
inc
jmp
arpl
adc
ljmp
xlat
push
loope
pop
mov
std
xor
loopne
fxch
jl
ljmp
adc
cld
inc
loop
test
push
mov
out
sub
pop
addr16
popa
fcompl
sub
push
shll
xor
xor
aam
fidivrs
or
xchg
iret
mov
jle
or
lret
sbb
clc
addb
fnstcw
divb
inc
test
cs
mov
fwait
icebp
loopne
pop
jl
decb
push
xor
stos
adc
and
xchg
scas
inc
rolb
mov
jg
sbb
mov
ret
push
mov
xchg
pop
push
lods
outsb
fs
aam
outsb
orb
pop
das
adc
add
pop
icebp
fcmovu
cmpsb
mov
scas
rcrl
insl
mov
ss
mov
sub
pusha
cmpsl
and
sbb
inc
fdivs
mov
neg
in
mov
stos
jmp
orl
dec
dec
lock
filds
loope
in
ror
cltd
gs
or
dec
lea
in
jge
pop
cs
sub
lahf
dec
punpckldq
xchg
arpl
mov
mov
mov
jmp
loop
sbb
sahf
jmp
sub
test
pop
inc
std
lock
push
mov
adc
adc
stc
mov
repnz
mov
fiadds
js
lret
pop
pavgb
dec
pop
ficoml
jns
sbbb
scas
cmc
push
imul
nop
pop
repnz
stos
cmp
jle
scas
mov
std
stos
and
add
test
pusha
cmpsl
shll
pop
xchg
jo
push
cmpsb
mov
subl
cs
call
mov
ljmp
dec
outsb
add
push
neg
xchg
xchg
loop
mov
lcall
cmp
int3
mov
xchg
inc
loop
sub
jg
mov
sti
jg
outsl
mov
std
pop
sub
jno
int
mov
jbe
mov
mov
out
ret
inc
lock
lds
xchg
into
cmp
loop,pn
test
xchg
das
jb
out
pop
cmc
sti
movsl
mov
jle
adc
decl
add
sbb
mov
jns
pop
cld
cmp
jle
inc
je
xchg
adc
pushf
add
add
cmp
cmpsb
mov
out
fdivs
pushf
flds
inc
cs
dec
sti
adc
fldt
test
add
mov
xor
mov
jb
notl
pop
jecxz
mov
imul
xor
mov
or
jb
mov
cld
sti
xor
loope
dec
test
std
sub
inc
and
lret
push
cmp
mov
les
mov
out
xor
call
xchg
push
mulb
cltd
add
orl
aad
lcall
das
sbb
xchg
aas
mov
cmp
pop
push
int3
xor
push
xlat
aaa
inc
hlt
and
test
jae
fldcw
jbe
xchg
in
pop
lret
mov
jg
shll
mov
mov
dec
ret
std
loope
lret
enter
rcl
inc
int
fs
jecxz
jno
ljmp
subl
cmp
pop
dec
test
lahf
test
fcmovnu
pop
ds
mov
inc
cmpsb
push
jg
movsb
and
ja
or
int3
in
and
popa
add
and
movsb
insb
adc
shl
roll
push
mov
dec
xchg
jg
sbb
addr16
pop
nop
fiaddl
ret
adcb
sbb
mov
adc
xor
cmpsl
mov
xchg
adcb
cmp
notb
lods
out
add
pusha
and
movsb
loop
fnstcw
jge
or
jae
fwait
gs
cwtl
or
pushf
lods
sbb
xchg
sub
movsl
and
subb
negb
mov
les
mov
jnp
jno
push
stos
or
shl
sub
sti
xchg
pop
ficomps
and
inc
pusha
aaa
std
mov
inc
dec
es
push
or
or
cwtl
data16
mov
cld
das
mov
pop
or
out
loopne
js
mov
aas
xor
push
out
push
mov
out
xchg
leave
sbb
ljmp
movsb
lahf
cmp
sbb
rcrl
add
jbe
cs
push
ucomiss
es
dec
fmul
or
movsb
cld
pop
cmpsb
dec
fistpll
cmc
dec
fisttps
pop
movsb
mov
mov
int
push
sbb
scas
fcom
jl
stos
lahf
adc
idiv
mov
mov
int3
push
inc
sub
lock
push
adc
loope
imul
xor
mov
cld
lea
xchg
mov
sbb
mov
loopne
test
data16
push
add
push
jmp
cmp
jmp
enter
push
xor
jb
lcall
cmp
and
xor
popf
adc
lcall
mov
movsb
add
lods
mov
pushf
daa
roll
push
es
mov
rcl
cmp
mov
mov
sub
mov
ds
out
or
or
push
in
mov
lock
movsb
jge
jbe
sbb
jmp
jl
cmc
xchg
xchg
pop
push
clc
test
nop
mov
pop
xor
xor
lea
pusha
jne
bound
sub
and
add
mov
data16
cmp
jno
or
push
cmpb
inc
push
into
insl
or
push
and
cmp
int3
mov
dec
gs
push
aam
pop
mov
cwtl
sbb
les
pop
xor
mov
mov
jle
pop
xorb
pushf
daa
and
sub
mov
sbb
adc
sub
sbb
pop
loop
inc
icebp
jae
jae
stos
pop
outsb
in
fdivl
lret
fistps
fisttpll
cmp
test
outsl
out
dec
push
xlat
jp
das
cmp
das
inc
aad
mov
sbb
cmc
dec
push
xor
int
popf
and
subl
or
lods
sub
out
lea
out
icebp
adc
gs
mov
daa
mov
and
mov
dec
mov
xchg
pop
shr
test
aas
sub
sub
dec
into
mov
xchg
aad
sub
add
dec
rclb
sub
in
cmp
stos
dec
lret
in
cs
icebp
add
cmpsb
add
mov
pop
adc
movsb
imul
dec
inc
sub
rcr
cmp
js
xor
mov
add
xchg
inc
mov
mov
and
stos
rcrb
mov
movl
pop
sti
imul
popa
or
or
movsl
ljmp
pop
pushf
outsb
cmp
jmp
shrl
inc
bound
dec
ds
mov
test
in
and
ja
inc
call
dec
in
dec
lahf
xchg
sbb
push
xchg
fwait
call
icebp
cmp
add
orb
sti
les
call
decl
test
mov
movsb
lock
add
xchg
int3
rol
cmp
and
out
add
mov
pop
data16
mov
adc
testb
lods
jle
jg
dec
xor
pop
pushl
imul
push
cmp
push
mov
popa
out
iret
fwait
xchg
jno
pop
and
iret
clc
addr16
daa
pop
xchg
emms
jg
ja
je
stc
popa
ficomps
push
gs
cltd
lret
shrl
out
add
and
pop
ficoml
xchg
add
stos
pop
pop
ret
xchg
data16
mov
push
xchg
fsubl
sbb
scas
loopne
imul
inc
notl
mov
call
gs
adc
mov
jnp
or
pop
mov
pop
inc
dec
push
dec
adc
mov
mov
cltd
push
cmp
sahf
push
arpl
push
addr16
sbb
inc
mov
pushf
inc
and
mov
addb
add
cltd
inc
sub
je
lcall
fwait
negl
arpl
sub
xchg
pop
and
sbb
aaa
xor
jnp
mov
rol
sub
bound
incb
call
iret
inc
pop
push
push
aam
iret
and
cltd
cld
adc
xor
sti
pushf
jp
je
dec
mov
cwtl
and
mov
scas
aam
xchg
push
jns
popl
sbb
sbb
ds
stos
dec
sub
loopne
sub
ss
mov
ret
xchg
outsb
mov
sbb
ret
mov
mov
inc
pop
int
and
lods
cmp
dec
fldenv
mov
bound
mov
cmp
popa
mov
js
xor
test
mov
repnz
notl
jg
sub
push
jmp
sub
dec
and
jge
jbe
mov
add
std
mov
addr16
push
out
imul
add
xchg
in
inc
jge
fwait
push
xchg
test
imulb
dec
sti
adc
stos
xor
dec
sarb
out
and
aam
out
std
xor
sbb
cmp
adc
rolb
sbb
dec
push
dec
cmpsl
xor
andl
push
sbb
mov
lods
daa
jl
jl
sbb
add
lret
clc
ljmp
ds
jecxz
sub
jne
out
push
popw
and
push
mov
lods
dec
mov
lods
jecxz
ret
mov
orb
mov
stos
fildll
mov
sub
daa
mov
jle
jb
jo
jg
dec
stc
cmpb
pop
push
jne
mov
cs
jmp
xchg
push
sbb
mov
test
cmp
lcall
push
out
and
loop
notl
aam
popf
cmc
mov
jbe
pop
cmp
pop
mov
jg
leave
add
shlb
sti
inc
xor
mov
repnz
notl
inc
sub
scas
daa
and
sahf
stos
push
inc
int
cmp
inc
push
cmp
inc
or
cli
cmpsl
imul
mov
push
dec
leave
cmp
sub
fiaddl
pop
mov
std
and
sbb
scas
pop
dec
inc
into
jnp
mov
addb
insl
pusha
cld
sbb
xor
iretw
dec
rcll
cmp
andb
or
cmpsl
xchg
aas
fsub
mov
push
pop
test
jp
dec
stos
sub
add
mov
cmp
jp
xor
xchg
test
outsl
mov
xchg
sti
jb
jmp
ret
mov
mov
xchg
in
add
je
in
imul
jb
rcr
inc
dec
cmpsb
pop
xor
rcl
mov
inc
sbb
jnp
mov
adc
hlt
cmp
xchg
insb
sbb
test
or
subl
lods
sub
mov
jne
pop
or
cmpsl
or
insb
ja
pop
xchg
inc
fwait
sub
mov
adc
ds
sub
popa
clc
pop
xchg
adc
mov
test
xchg
cmp
hlt
and
adcb
fbstp
jae
xor
adc
sub
pusha
add
push
adc
mov
xchg
mov
mov
pop
cmp
push
icebp
gs
ret
mov
mov
inc
ss
stc
adc
pop
nop
movlps
push
call
mov
mov
add
insl
in
lock
into
and
ret
sub
repz
das
or
lret
lret
or
xchg
xor
jno
popa
repnz
sbb
cld
in
jo
mov
ja
or
pusha
add
repnz
jno
mov
lcall
out
inc
mov
sub
in
inc
add
jp
xor
add
scas
out
push
sahf
movsb
stc
lods
mov
mov
add
cld
js
cmpsl
incb
mov
xor
xor
in
repz
cmc
mov
cmpsl
sub
sbb
movsb
lods
pop
sbb
jmp
mov
mov
es
cmp
mov
pop
xor
daa
xchg
jae
pushf
enter
inc
or
xchg
sub
jle
les
cmp
ljmp
movsl
adc
pop
js
lret
and
cmp
jg
push
mov
adc
out
daa
sbb
xchg
push
sbb
cwtl
in
jmp
mov
ds
xor
pushf
mov
lds
or
cli
aas
cld
int3
les
int3
inc
gs
push
mov
jp
into
fisubl
dec
mov
in
inc
les
cltd
push
xor
push
js
loopne
or
add
rorl
push
adc
cmpsl
mov
adc
sub
lods
scas
xchg
ljmp
xor
lret
aam
fnop
in
fdivl
cmp
push
out
mov
push
jecxz
ss
ret
call
adc
pop
lods
inc
sbb
sub
jp
ret
repnz
cld
outsb
push
clc
pop
dec
xchg
jns
xchg
push
mov
sbb
roll
add
jmp
adc
sbb
fmuls
stos
dec
jmp
mov
pop
lods
bnd
pop
dec
xchg
xchg
cmp
lahf
ja
movsb
or
push
decl
sub
pusha
out
out
testb
jb
inc
jecxz
out
sahf
into
push
popa
push
inc
jge
shlb
movsl
stos
mov
adc
and
popf
aad
jg
std
pop
push
pop
subb
jae
sti
les
add
mov
into
mov
xchg
lds
into
xor
add
fldl
cli
cmp
jne
sub
push
int
stos
imul
cld
aam
push
sub
xor
inc
push
lods
mov
sbb
xor
into
and
mov
xchg
out
addb
lret
test
adc
mov
dec
out
roll
sub
movsb
iret
dec
loop
sbb
into
ja
jnp
pop
mov
loope
jae
out
sbb
push
in
cltd
jle
pop
or
mov
or
jno
cmpsb
jmp
pushf
mov
dec
pushf
mov
mov
popf
pop
jnp
xor
jbe
push
mov
clc
call
sbbb
push
pop
mov
ret
movsb
je
in
mov
xchg
mov
add
jno
inc
les
into
push
add
mov
lods
sub
jae
popa
mov
stos
pushl
enter
jmp
add
leave
mov
cmp
enter
adc
sbb
imul
push
pop
andb
push
aad
mov
frstor
mov
addr16
lock
jecxz
test
call
or
jl
and
xchg
or
sti
rcrl
jmp
test
push
outsb
sub
daa
dec
rcll
jp
aaa
xlat
xchg
mov
adc
jp
call
sbb
arpl
std
ljmp
add
dec
adc
in
push
popa
rcll
adcb
push
or
faddl
subb
add
xor
adc
xorb
repz
data16
cmp
cmc
and
inc
jecxz
push
mov
jge
push
inc
adc
mov
mov
fstpt
xor
mov
cmp
ja
por
fst
pop
jl
mov
rcrb
loopne
cmc
cltd
mov
clc
loopne
xchg
nop
hlt
add
loop
jb
loopne
xchg
push
dec
std
dec
pop
sbbl
js
int
push
push
dec
fnstsw
clc
sbb
or
pop
adc
mul
je
sarb
icebp
and
pop
fstl
pusha
push
iret
xchg
push
fmuls
dec
notb
ss
pop
shll
js
fmuls
pop
data16
aam
das
bound
rcr
pop
das
push
jno
decb
pop
jle
and
xor
pop
flds
mov
pop
pop
jo
cwtl
les
xor
lods
repnz
mov
mov
pop
and
cmp
les
xchg
gs
fwait
lea
in
dec
sbb
fsubrp
sub
leave
lock
in
pop
push
mov
pop
or
andb
cltd
add
cmp
push
mov
dec
mov
push
xor
sti
test
push
sarl
xor
push
pop
pop
dec
and
outsb
ret
shlb
fisubl
cmp
pop
pop
daa
std
nop
jb
xchg
rorl
inc
pop
push
mov
ror
ljmp
push
or
mov
icebp
or
and
pop
jno
inc
add
inc
lock
push
ret
mov
adc
cmpsl
sbb
pop
mov
scas
movsb
or
push
out
pop
sahf
fidivrs
xor
pop
adc
pop
lods
dec
jg
mov
inc
lea
sti
notl
ds
jecxz
sbb
xor
add
test
pop
push
cmp
lods
int
jno
mov
add
cmpsb
inc
push
into
add
outsl
filds
push
mov
nop
add
xor
pop
jnp
xchg
dec
push
mov
push
push
jb
jecxz
xchg
sbb
in
or
testl
lret
or
shrl
push
out
or
or
nop
jno
dec
adc
pusha
inc
mov
fndisi(8087
cld
jns
test
mov
cld
loopne
filds
jae
or
into
rclb
mov
sbb
sti
xor
movl
jb
and
in
stc
xlat
mov
or
cmp
je
iret
xchg
xor
bnd
pop
push
adc
xor
adc
sub
mov
int
sub
loop
test
loopne
ficomps
xchg
popa
or
enter
mov
lahf
fbld
cwtl
push
in
inc
pop
cli
push
jnp
sbb
mulb
arpl
pop
ds
fldt
sub
data16
or
mov
push
jmp
inc
dec
test
lea
pop
sahf
inc
sub
xor
fldcw
ja
out
popa
push
jns
add
pushf
aas
popf
adc
cmp
xchg
std
stos
add
jb
push
adc
int
int
pop
bound
sub
and
lds
mov
add
mov
sub
adc
insb
pop
lods
insl
sub
call
xor
push
in
popf
daa
jae
aas
jns
into
or
cmp
sbb
inc
or
ret
xor
hlt
mov
or
ja
cli
sarb
lret
push
rcr
sbb
mov
jno
imul
pop
push
and
inc
repz
cwtl
icebp
pop
or
aam
sahf
xchg
xchg
sbb
cmp
add
pop
mov
mov
jno
clc
fs
ljmp
insl
arpl
xor
js
sub
aad
dec
sbb
bound
loopne
scas
sub
mov
stos
roll
push
movsl
imul
pop
push
cmp
sbb
loopne
aaa
dec
fwait
or
rorb
negl
pop
into
cmpsb
sub
mov
adc
sub
mov
out
mov
mov
push
loop
xchg
xor
cmovnp
inc
push
bound
adc
mov
ja
fdivrl
idivb
negl
sub
push
repz
jo
adc
data16
nop
ja
std
stos
insb
xor
xchg
mov
adc
or
mov
nop
aaa
or
in
into
and
stos
scas
stos
les
sbb
lcall
scas
aas
lret
mov
sub
lods
cmpsl
sti
cld
dec
jno
imulb
imul
mov
sub
jg
dec
cltd
bound
gs
mov
add
gs
add
jno
adc
aad
iret
push
in
daa
cmp
ds
add
movsb
pop
or
push
jge
xor
pop
imul
pop
adc
loopne
add
aam
xor
shrl
jae
dec
stos
adc
adc
daa
out
cld
push
xchg
mov
in
xchg
lods
and
cltd
mov
xor
xchg
ds
mov
cmp
mov
jg
fstps
adc
cmp
jb
jmp
arpl
sbb
dec
scas
xchg
pushf
inc
fisubs
ror
inc
jmp
lds
out
outsl
mov
fwait
js
sub
and
out
pop
in
std
lret
cmp
adc
cltd
inc
dec
jo
mov
ficoml
lea
dec
lahf
arpl
xchg
push
inc
adc
stc
test
adc
xor
sub
or
shl
inc
test
out
adc
dec
ljmp
xchg
loop
xor
jp,pt
xchg
pop
inc
and
dec
pop
int3
fsubrl
mov
sbbb
pop
mov
in
jns
adc
xor
mov
scas
mov
fucomp
add
sbb
stos
sub
mov
xchg
je
std
fcomps
mov
insl
cs
aam
push
mov
pushf
lret
imul
xchg
fstl
das
push
xchg
sub
sar
jmp
stc
and
scas
aaa
data16
push
sbbl
ljmp
mov
inc
cmpsb
jnp
xchg
stc
andl
mov
mov
mov
jmp
test
test
push
push
sbb
jbe
repz
sbb
jb
sbb
inc
dec
mov
add
stos
jl
mov
aaa
addr16
dec
xor
lea
cmp
xchg
stos
xor
pop
insl
adc
add
push
bound
insb
into
out
add
adc
dec
fwait
ret
sub
dec
xor
sbb
cmp
sub
enter
lods
pushf
movsl
addb
psubd
rcrl
inc
xor
xchg
outsb
std
mov
jo
jb
push
inc
fistpll
and
and
test
roll
rcrl
ds
xchg
sahf
mov
dec
xlat
jmp
xor
pop
dec
outsl
inc
xor
mov
je
fsubrs
lods
push
aad
sbb
dec
sub
push
imul
xlat
push
addr16
or
mov
es
lret
cmp
movsb
mov
add
testb
pop
mov
pop
xchg
fldl
push
dec
shrl
mov
mov
popa
push
sbb
stos
dec
scas
and
data16
jae
push
dec
movsl
inc
xchg
mov
and
jo
imul
sbb
jbe
sbb
dec
stos
add
sbb
mov
sub
sbb
and
inc
scas
inc
movsb
sbb
pop
mov
cmpsb
pusha
and
fldl
mov
sti
xor
cli
stos
lret
mov
int
mov
lods
negb
rorb
fwait
xor
mov
insb
gs
cmp
daa
scas
sti
push
add
imul
cmp
cmp
xor
scas
xor
test
mov
pushf
mov
dec
mov
push
sub
punpckhbw
adc
cmp
pop
insl
xchg
fcomps
es
lods
adc
jno
call
and
cs
dec
xor
inc
push
pop
mov
cmpl
pop
outsl
loopne
shll
int
inc
cmpsl
and
orl
outsl
jb
ss
cmp
cmpsl
mov
aas
cmpl
enter
cmp
pop
pushf
cmpsl
jo
pop
in
inc
dec
sti
outsb
cmp
sub
mov
lea
mov
and
aad
fisttpll
pop
add
mov
pop
push
xor
dec
add
aam
icebp
lret
and
sub
xchg
ror
imul
inc
mov
cmp
enter
add
xchg
popf
das
cmc
repnz
jp
xchg
push
call
sub
test
int3
lds
mov
mov
mov
out
xchg
fwait
add
add
loopne
sbb
pushl
adc
mov
ja
scas
dec
or
cmpsb
mov
pop
stc
xchg
adc
mov
test
push
test
fdivs
sti
and
and
push
dec
test
mov
decl
sbb
xchg
mov
push
lcall
mov
les
sar
insl
test
pop
gs
in
popa
sbb
repnz
cwtl
xchg
repz
data16
sbb
mov
jns
adc
testl
fwait
movsb
mov
push
rcrb
push
data16
insb
mov
mov
bnd
int3
jo
jecxz
frstor
jl
jl
or
pop
daa
sub
ss
sarb
insb
dec
jl
aam
jl
push
pop
jl
lods
cs
and
pop
mov
stos
les
enter
rcrb
enter
push
mov
sub
sub
js
xor
cmp
inc
rcr
test
nop
jp
aas
dec
add
js
in
pop
lret
in
scas
gs
dec
in
mov
xor
or
xor
push
cmpsb
les
mov
mov
rcl
fld
jl
adc
fwait
mov
cmp
cli
inc
pushf
int
add
insb
in
mov
xor
loope
ret
in
xchg
push
aad
lcall
sub
mov
in
pop
xor
pshufw
sahf
cmp
fwait
ror
aam
pushf
or
sub
mov
adc
aam
out
mov
ds
and
in
lock
inc
sbb
sbb
fdivrl
jl
sarb
or
rorb
std
pop
mov
ret
cmpsl
fxch
lcall
cltd
lods
cmp
mov
push
pop
jmp
xchg
jmp
inc
ljmp
inc
xchg
xor
int3
ss
std
lock
adc
push
jmp
aas
pop
jmp
add
imul
dec
aad
jo
mov
sub
jge
jg
sbb
dec
jne
loop
xchg
stc
xchg
push
fisttpl
and
mov
mov
jae
lds
subl
adc
pop
and
and
pop
dec
nop
lcall
dec
mov
in
add
call
mov
dec
xchg
cmpb
stos
jno
adc
xchg
xchg
loop
cltd
das
push
inc
bound
pop
jb
dec
or
insl
pop
in
bound
sbb
ja
fnsave
mul
pop
jb
sbb
cmpsb
sti
pusha
push
jno
pop
xlat
flds
js
adc
sub
scas
sbb
addr16
out
jbe
push
test
pop
add
cmp
int3
mov
std
daa
imul
roll
scas
insb
lock
dec
sbb
mov
dec
call
xchg
jle
inc
cmp
les
and
dec
add
jns
inc
enter
test
sub
inc
pop
std
out
jecxz
mov
insl
shl
fists
and
sub
and
ret
cmpsl
fldcw
hlt
loope
sub
lcall
pop
call
dec
xchg
push
xlat
loope
addr16
push
fsubp
cmp
pop
cmp
fimull
xor
cli
jb
aaa
das
dec
fwait
mov
popf
and
inc
stos
fcompl
adcw
in
loop
jnp
sar
mov
jnp
lock
inc
pop
or
test
xor
pop
dec
in
pop
adc
ret
ret
mov
icebp
mov
lret
xchg
dec
xor
sub
lcall
adc
cmp
and
xchg
jp
lcall
xor
mov
xchg
xor
and
cmp
into
inc
shl
push
fcmovnb
jp
dec
cmp
loop
xchg
mov
xchg
cmpsb
test
mov
rcr
subl
enter
adc
lds
insl
cmp
lods
shll
test
fmuls
xor
xchg
shll
mov
pmulhw
mov
test
movsb
das
push
pop
add
addr16
in
ret
mov
test
fldcw
or
std
dec
mov
not
cmp
inc
imul
sbb
mov
in
mov
or
fisubrl
mov
or
pop
rcrl
in
push
and
sub
sahf
testb
xor
and
dec
and
test
inc
loop
and
ret
test
dec
jle
daa
xchg
dec
dec
xor
jne
rcll
push
ret
ficompl
int
cmc
and
mov
mov
int3
movsl
mov
movsb
popa
mov
jbe
repz
stc
xchg
cld
push
call
ds
shrl
add
pop
mov
xchg
cmp
fwait
ret
xchg
mov
add
and
idiv
call
orb
ljmp
sbb
test
addb
sbb
fimull
push
jle
ds
add
cmpsb
xor
push
rorl
xor
mulb
mov
fcom
xchg
aad
loop
ds
lock
inc
dec
lds
loope
aam
add
cmp
mov
inc
dec
cmc
rcrb
add
imul
push
push
mov
cmp
xor
sub
ja
jns
cmp
in
enter
shl
ja
xchg
push
int
jmp
cwtl
outsb
shrb
add
stos
sub
aad
cmpsl
or
push
or
mov
ret
das
mov
fwait
rcrb
mov
push
xchg
cs
mov
orb
or
nop
in
lret
cs
pop
push
jae
aaa
jge
and
cmp
xor
xor
mov
rcr
in
sub
ljmp
push
insl
mov
scas
in
shrl
pop
idivl
decl
dec
add
adc
mov
push
test
jle
push
adc
fs
cmp
mov
imul
mov
sbb
dec
gs
mov
out
mov
or
dec
lock
shll
clc
arpl
test
mov
add
jp
jb
jmp
mov
fimuls
mov
cltd
mov
andl
add
in
adc
int
mov
dec
outsb
and
ret
mov
outsl
pop
mov
mov
es
notl
mov
push
or
dec
bound
mov
fisttpll
pop
mov
sub
adc
jbe
push
add
xor
lcall
movsb
sub
testb
pusha
push
xchg
fldl
mov
push
rcll
loopne
aad
jecxz
push
sub
pop
push
xor
sub
xchg
lock
or
push
insl
and
mov
sahf
push
hlt
jnp
cmpsb
insl
neg
add
fdivs
sub
sbb
cmp
and
mov
add
mov
mov
jp
add
mov
adc
movsb
in
mov
jno
movsb
jge
and
mov
adc
inc
sbb
dec
pushf
inc
es
pmullw
loop
daa
sbb
xchg
repnz
mov
out
or
sbb
jle
pushf
xchg
cmp
jns
push
xor
sbb
xorl
sti
les
int3
dec
inc
fs
cmpl
fimuls
flds
cmp
lret
jnp
cmpsb
fwait
push
pop
mov
loop
add
mov
icebp
icebp
sbb
mov
ffree
push
dec
jnp
imul
mov
ja
push
cwtl
jge
popf
rcll
add
je
sub
mov
inc
call
cmp
pop
insb
adc
xchg
inc
pop
rolb
cmc
dec
bound
fisubrl
cmpsw
cmp
sub
dec
ljmp
repnz
daa
roll
fwait
push
mov
lods
or
pop
out
cmp
ret
lock
scas
xorb
push
mov
dec
and
mov
fstl
sbb
cmp
mov
mov
les
sub
dec
ljmp
lret
imul
hlt
test
outsl
push
out
sbb
fldenv
mov
push
cmp
pop
jp
pop
push
aas
das
shlb
ret
adc
lret
sbb
negl
pop
or
scas
jbe
mov
orb
sub
and
or
and
cmc
inc
lret
icebp
or
xchg
rol
mov
aaa
cltd
mov
inc
inc
inc
cmc
and
xchg
push
dec
cmp
jne
inc
clc
aaa
insl
lret
data16
aad
mov
nop
pop
push
cmpsb
in
ja
loopne
sahf
push
movsb
mov
ficompl
and
and
pop
popf
and
add
nop
iret
sbb
outsb
imull
in
add
xor
push
push
into
inc
in
cmp
cmpsl
ret
add
int
cmp
movsb
mov
cltd
cmp
jl
sbb
mov
push
mov
stos
cmp
shl
hlt
mov
cs
adc
aas
out
and
jno
scas
rolb
dec
dec
mov
pop
call
and
pop
add
imul
ja
pop
mov
inc
cwtl
addr16
leave
imul
mov
inc
mov
sub
das
mov
xor
lcall
int3
inc
and
cmpsl
mov
cs
dec
mov
jg
mov
push
pop
push
lods
or
dec
rorl
jb,pt
push
mull
xchg
push
es
or
xchg
out
add
xchg
and
inc
jecxz
adc
stc
fmuls
adc
jp
push
jbe
in
movsl
mov
loope
xor
fisubrs
cmpsb
or
jno
xchg
mov
dec
pop
dec
jnp,pt
out
add
test
iret
enter
dec
push
jnp
mov
int3
leave
and
adcb
in
jno
jecxz
insb
dec
mov
lds
xchg
push
mov
mov
mov
jle
xchg
mov
or
mov
adc
xchg
push
xchg
xchg
repz
hlt
hlt
mov
mov
arpl
loop
cltd
xchg
adc
add
flds
fidivrl
imul
add
scas
mov
lock
loope
pop
leave
pop
in
into
push
enter
fisttpl
pop
add
dec
push
lea
add
stos
push
pop
out
mov
nop
repz
js
add
push
add
jbe
sbb
shrb
aad
cli
rolb
insl
test
std
std
aam
push
jns
aam
xor
and
cmpsb
dec
rclb
and
inc
iret
insl
adc
cmpsb
popf
pushf
xlat
es
lock
ret
dec
outsb
and
dec
fisubrs
lods
repz
dec
push
or
jnp
sub
addb
sbb
adc
nop
dec
bswap
mov
test
xor
movsl
adc
jno
scas
testl
xor
imul
es
xchg
enter
sbb
or
dec
or
jnp
mov
inc
adc
in
inc
push
outsl
nop
adc
dec
ds
xlat
add
loop
or
nop
std
out
adc
adc
fwait
adc
sub
mov
leave
lock
dec
loop
and
ds
add
in
fisttpl
xchg
scas
xor
daa
repnz
mov
int3
shrl
imul
inc
push
mov
sahf
fsubr
stos
sbb
push
lods
mov
sub
push
mov
xor
out
pop
inc
inc
push
push
pop
push
jge
les
sarl
into
int3
int3
shl
push
ret
clc
mov
aaa
aad
mov
cwtl
jecxz
and
int
popf
aam
out
sub
subl
xchg
mov
sub
and
and
and
push
add
push
aaa
mov
or
mov
pop
cli
pop
in
and
scas
pushf
mov
rorl
xchg
aad
imul
jmp
pop
inc
pushf
mov
adc
out
lea
jns
jne
adc
nop
into
sub
xor
mov
nop
mov
stc
outsl
enter
inc
lods
imul
push
clc
roll
inc
fsubrs
loope
pop
in
cli
jbe
test
inc
int3
insl
stc
push
lahf
cmp
inc
inc
add
adc
dec
jnp
cmp
cmp
push
inc
je
ror
inc
ret
push
rcrl
test
and
ficompl
cmp
lahf
xchg
adc
or
jne
lret
pop
outsb
fidivl
jl
rolb
scas
test
mov
dec
inc
jb
mov
push
shll
loope
jb
aad
mov
dec
pushl
jno
int
jae
xchg
pop
aas
inc
lea
pop
outsb
das
cmp
cmp
pop
iret
dec
and
movsl
dec
pop
lods
in
rclb
js
xchg
hlt
xor
jbe
sub
pop
call
shrl
js
adc
mov
enter
mov
xchg
iret
sbb
sbb
cwtl
add
out
repz
xor
and
add
push
mov
push
push
mov
adc
jbe
or
test
das
inc
push
je
sub
and
jnp
scas
cltd
cmp
outsl
jo
dec
test
mov
nop
std
int
dec
cmp
movsl
lret
push
jno
popl
movb
or
sahf
insb
aad
add
dec
pop
test
dec
mov
lret
loope
flds
lods
or
dec
fistpll
pop
xor
hlt
scas
sahf
outsl
sti
dec
imul
sbb
jae
rcr
sti
mov
ret
mov
jecxz
xchg
loopne
aas
outsb
rcr
lods
inc
and
pop
icebp
cltd
std
popa
inc
jns
inc
adc
xlat
sti
mov
xchg
mov
rolb
add
lcall
pop
ret
xorb
ja
adc
and
in
rcll
pop
repnz
adc
cld
jb
or
inc
gs
cs
inc
sub
pop
rclb
inc
dec
xor
bound
push
or
es
pop
shlb
and
lea
adc
xchg
mov
pop
leave
or
mov
stos
dec
imul
push
adc
cmp
xor
add
dec
push
test
pop
imul
outsb
gs
sbb
inc
hlt
ret
leave
cmp
loop
mov
popa
and
xchg
add
fistpll
ljmp
push
int
dec
sahf
sbb
pop
lret
mov
aas
bound
cmpsb
mov
xchg
jns
insb
pop
loop
dec
mov
scas
sub
sub
adc
cmp
cmp
jmp
pop
pusha
and
lret
paddb
push
lret
cmp
add
and
cmp
inc
xchg
addb
mov
mov
xchg
mov
jecxz
sahf
lahf
mov
or
lods
push
imul
shl
pop
lods
cmp
mov
xchg
mov
sub
or
hlt
ret
test
pushf
rorb
sbb
xchg
jo
loop
stc
or
cs
scas
aaa
pop
aas
push
cwtl
lret
mov
and
shll
nop
and
mov
cld
push
mov
mov
movsb
mov
xor
out
mov
add
jno
mov
xor
pop
pop
lcall
icebp
push
push
inc
adc
movsb
imul
xchg
or
xor
add
pusha
mov
shr
rolb
push
loopne
imul
lock
push
inc
negb
cmpsl
movsb
cmp
dec
out
mov
in
imul
fcmovu
and
dec
cltd
push
loopne
sbb
sarb
std
sub
pop
cs
add
jb
cmpsb
xchg
pop
pop
sbb
mov
lahf
cmpsb
xchg
push
add
jl
js
rolb
mov
shl
inc
fsubs
add
jns
pushf
lret
aad
outsl
ljmp
push
dec
push
sbb
out
cltd
cwtl
mov
jo
aaa
push
xor
nop
jp
sbb
xchg
icebp
outsb
xchg
mov
je
out
icebp
push
or
mov
negl
mov
mov
inc
or
sbb
sbb
mov
loope
mov
das
dec
pop
push
inc
push
loopne
pop
dec
mov
jg
lret
push
imul
lahf
cmp
cmpsl
in
mov
jno
sbb
das
ljmp
adc
xchg
mov
notl
push
jbe
mov
sbb
call
and
push
daa
pop
inc
idivl
fnstsw
in
adc
int3
mov
jl
aas
xchg
cltd
jo
ret
push
mov
jb
stc
push
test
ficoml
and
jp
sbb
add
js
push
sbb
inc
repnz
or
outsb
je
fmuls
sbb
repz
stc
adc
push
jbe
movsb
xchg
xor
popf
push
test
cltd
dec
outsl
cmp
jle
mov
xorb
or
sub
movsl
add
mov
outsl
in
nop
fcoms
or
int3
inc
dec
xchg
jbe
pop
aaa
or
fstps
pop
and
cmp
sbb
sub
rorb
mov
aas
mov
pop
dec
cltd
mov
hlt
mov
adc
inc
pop
movsb
mov
and
daa
daa
add
push
push
test
mov
cmp
inc
or
in
fs
jg
mov
add
xchg
icebp
xchg
es
cmpsb
sbb
insl
jg
loop
rclb
jbe
push
xor
or
dec
rorl
stos
cmpsl
and
sbb
andb
int
rclb
xor
mov
mov
adc
gs
in
je
popl
call
es
mov
pop
sbb
inc
cmp
add
push
cmp
sbb
sbb
jno
cmp
xchg
inc
push
push
and
mov
and
and
cltd
test
inc
sub
loop
rcrl
dec
addl
rcll
xor
push
lahf
xchg
fld
push
nop
rcrl
loop
call
inc
mov
inc
xor
shrl
xchg
arpl
testb
adc
cmp
ja
es
xchg
cmpsl
jmp
pop
subb
in
jp
sub
dec
mov
iret
andl
icebp
xchg
pop
cmp
pop
inc
iret
divb
int3
mov
xor
sub
pop
outsb
pop
or
push
lea
jmp
repnz
xor
cli
popf
inc
jecxz
adc
test
push
xorb
bound
push
ja
sarb
repz
cmp
mov
jno
adc
aad
add
test
fmull
mov
out
ljmp
fadds
lcall
xor
mov
sub
and
add
mov
inc
xor
bound
mov
inc
xor
push
inc
mov
push
fs
test
test
aaa
nop
scas
testl
xor
inc
scas
mov
mov
mov
jmp
rcrb
mov
call
inc
fs
xlat
xchg
mov
push
test
cli
pop
lods
sarb
adc
mov
aam
add
add
les
sbb
push
inc
fnstcw
jo
push
scas
imul
loope
ret
sub
cwtl
ds
test
cli
je
mov
inc
lea
insl
jle
sub
inc
mov
es
mov
test
jp
mov
mov
test
xchg
pop
sub
leave
xchg
data16
bound
xor
and
inc
inc
cmpsb
call
fsubl
decl
mov
sub
insb
and
or
and
popa
cltd
cmpsl
mov
lods
movsb
sub
inc
lret
xchg
ret
pusha
test
dec
in
sub
dec
sti
add
xlat
cmp
inc
sti
inc
adcb
std
out
adc
push
mov
popa
ss
filds
sub
adc
ret
jl
aam
loop
ror
sub
lahf
nop
and
mov
xor
dec
mov
test
xor
cld
aad
jns
cmp
xor
cmp
repnz
insb
pop
cwtl
mov
and
outsb
add
adc
push
push
xor
insl
mov
outsl
into
mov
pop
push
inc
push
or
adc
dec
add
cmpsl
lock
mov
jl
fnstenv
mov
mov
andl
jb
lock
mov
das
sarl
adc
xor
notb
pop
aaa
out
imul
push
jne
int3
popf
lods
in
xchg
adc
cmp
cmp
bound
add
loope
mov
mov
out
push
frstor
jl
mov
or
lahf
adc
jmp
lcall
dec
test
enter
dec
sub
imul
es
in
ja
jle
std
jecxz
mov
stos
mov
mov
dec
lcall
pop
jae
movsb
pop
xlat
test
das
adcb
mov
lret
pop
out
or
mov
and
subb
sar
insb
scas
enter
sbb
aas
mov
pushf
xchg
loope
cmp
cwtl
subb
aad
pushf
lods
pop
cmpb
dec
xchg
rcr
cmp
xor
mov
data16
and
dec
scas
mov
jae
and
int3
mov
or
mov
dec
cli
adc
pop
cs
cmp
jge
je
testl
mov
fs
movsb
lea
fildll
repnz
iret
xor
mov
test
cwtl
loop,pt
adc
adc
repnz
incl
nop
push
nop
pop
movsl
es
sbbb
push
into
into
adc
arpl
inc
rcr
cmpsl
xchg
shrl
cmp
sbb
lea
jne
out
mov
cmp
lods
ret
cmpxchg
jmp
push
int3
addr16
push
inc
bound
repz
outsl
fs
xchg
xchg
mov
jns
cld
cs
sbb
dec
sbb
xlat
xor
aad
loop
repnz
xchg
push
mov
loopne
outsl
mov
dec
jo
push
pop
cmp
mov
sbb
xchg
mov
push
pop
imul
rcrl
pop
cmp
cmpsl
add
pop
jb
add
rclb
mov
dec
cltd
fisubrl
jp
mov
jge
mov
aam
les
aas
dec
fiadds
fs
cmc
stc
js
mov
xor
leave
call
es
mov
mov
mov
cmp
filds
enter
scas
scas
sub
test
xor
mov
inc
lret
mov
push
jle
cmp
sarl
call
int3
scas
cli
pop
movsl
clc
pop
jmp
imul
push
cmp
mov
dec
cmp
test
sahf
sub
add
jo
and
mov
stc
cmpsl
and
lret
stos
out
mov
mov
jbe
push
sub
fnstenv
jmp
call
in
test
mov
sbbb
aas
test
leave
mov
imul
mov
andl
inc
sub
pop
jns
testb
in
gs
push
mov
lods
out
in
gs
frstor
dec
pop
add
lods
cmp
lret
inc
in
pop
sarb
mov
out
sub
jns
push
mov
or
std
test
mov
fs
mov
jbe
aaa
xor
bnd
and
les
daa
push
xor
into
mov
aad
xchg
dec
scas
adc
mov
out
mov
jb
int
ja
lock
addb
mov
fidivs
nop
xor
jmp
sub
dec
pop
test
outsl
fs
loop
jge
enter
lret
pop
out
cmp
cli
sbbb
dec
cmp
lret
insb
add
inc
cmp
mov
pop
and
shlb
in
in
and
ror
movsl
mov
je
mov
das
ljmp
jl
orl
imul
pslld
pop
xor
mov
or
aam
xlat
scas
xchg
add
add
int
mov
xchg
lahf
testb
pop
or
push
dec
loope
in
xchg
xor
xlat
jmp
imul
dec
xor
in
fwait
lret
pop
inc
es
jo
push
push
cmp
push
jl
jmp
mov
pop
enter
negb
js
dec
mov
dec
std
push
add
pop
addb
jbe
sub
jg
outsb
in
jg
push
in
cmp
sub
pop
fiadds
pop
push
fld
jge
lret
mov
inc
lret
xor
outsl
not
mov
cltd
iret
xchg
sbb
push
orl
adc
int3
jno
push
push
add
push
pop
xor
ret
sub
push
outsl
std
mov
or
pop
insb
arpl
lret
aas
mov
popa
jecxz
enter
push
mov
mov
jns
jge
scas
mov
std
jg
push
mov
repz
mov
enter
xor
pop
pop
mov
loopne
push
mov
mov
lods
call
mov
mov
jge
push
or
xchg
push
fmull
mov
test
outsb
loop
mov
jnp
jb
sbb
nop
inc
dec
leave
fiaddl
pop
xorl
andl
or
inc
cli
cmp
mov
in
testb
xor
adc
or
jo
icebp
adc
repz
cs
aam
stos
lods
fsub
int
outsl
cltd
mov
loop
and
inc
or
mov
jnp
subl
out
mov
cmpsl
insl
cmp
jno
mov
push
test
mov
jmp
rcrb
jne
cld
or
lahf
imul
aas
mov
push
dec
xchg
inc
insb
mov
mov
mov
pushf
outsb
pop
or
mov
add
mov
push
or
pop
fwait
imul
fdivrs
bound
mov
xchg
or
ja
xchg
jl
popa
pop
cltd
pop
out
dec
jmp
jl
inc
enter
mov
lahf
stc
cmp
int3
cwtl
jne
out
cmp
push
mov
mov
in
sub
fdiv
jl
outsb
gs
or
jae
ds
jecxz
mov
sarl
es
outsb
insb
mov
push
rorl
out
pop
testb
adc
cmp
lock
ja
scas
jmp
popf
cmp
mov
fisttps
aam
das
xchg
movd
outsb
nop
pop
sbb
call
adc
cmpsl
cmp
jl
ja
les
jb
loope
xchg
fwait
sbb
out
mov
jl
push
iret
in
dec
lock
push
stc
sbb
test
out
mov
in
imul
jmp
jmp
xor
sub
adc
rorl
jnp
add
xchg
mov
pop
adc
lods
cmc
sti
loope
push
mov
add
call
jns
es
shlb
sti
sub
int
add
sub
cmp
rcrl
arpl
mov
sbb
lods
mov
sub
mov
xor
ss
sarl
mov
sub
nop
mov
sub
int
mov
xor
in
iret
pop
jg
push
mov
cmp
inc
mov
jnp
inc
fdivs
mov
mov
adc
mov
push
dec
lock
or
dec
cmpl
fcomi
js
mov
jp
sbb
mov
stos
dec
and
fsts
pop
sarl
and
pusha
jmp
es
jge
mov
xchg
pop
mov
mulb
fdivrs
shll
xchg
data16
add
mov
lret
icebp
loope
in
in
outsb
sub
jae
adc
outsb
aas
push
sbb
decb
jb
scas
das
hlt
pop
inc
add
pop
xchg
jl
insb
xchg
jle
aas
and
jg
aam
sub
scas
xlat
inc
mov
pop
and
pushf
das
fisubl
pop
inc
jl
jecxz
mov
jp
enter
adc
fldcw
add
daa
test
movsl
lahf
jmpw
add
mov
fs
lret
dec
xor
xor
ror
xor
sub
or
or
popf
loope
mov
sub
xchg
add
sub
mov
push
sub
inc
jns
and
xor
mov
cli
mov
xor
notl
icebp
push
sbb
adc
mov
cmp
into
and
mov
in
inc
inc
movsl
push
mov
xor
int
enter
sahf
test
dec
fiadds
pop
cmp
push
push
mov
les
lds
fcomps
jne
dec
lcall
sbb
vpshlw
jnp
mov
mov
icebp
sub
jmp
pushf
insl
cmova
insb
and
fwait
cmp
adc
faddl
push
push
cmp
das
imul
cmp
aaa
jge
out
test
or
push
jge
inc
jnp
adc
push
mov
inc
push
jnp
stos
push
pop
dec
sahf
push
mov
shll
and
mov
cmp
iret
sub
xchg
lcall
imul
pavgb
mov
jne
or
roll
pop
shll
cmpsb
inc
and
pop
sbb
and
int
push
popa
je
and
movsb
insl
jl
dec
and
mov
xchg
push
push
lock
mov
pop
scas
imul
push
xor
mov
jbe
rol
push
sub
adc
mov
xchg
addr16
mov
mov
push
sbb
cld
das
jbe
std
movsl
pusha
lds
mov
data16
inc
int3
xchg
sarb
jbe
inc
mov
xlat
jo
sbb
xchg
mov
xchg
shll
int
inc
mov
pop
or
adc
pushf
iret
cmp
xchg
out
test
push
xor
add
cmp
xor
mov
arpl
sahf
sub
cli
jl
mov
cmp
imul
fs
ljmp
xor
mov
cmp
data16
dec
xchg
mov
sub
lods
gs
or
mov
pop
jne
push
sahf
adc
push
and
jae
dec
adc
cwtl
aaa
pop
out
icebp
jl
loop
fstpt
inc
adc
pusha
aam
adc
mov
jle
popa
out
shrb
repnz
repnz
mov
mov
aaa
push
dec
inc
popa
insb
scas
ffree
sbb
rcl
mov
in
inc
cmp
les
icebp
aaa
cwtl
jo
and
fiaddl
cmp
mov
call
push
dec
in
es
js
add
xchg
push
cmp
push
cltd
mov
fdivl
mov
adc
jmp
les
mov
mov
into
test
sub
adc
xor
pop
daa
test
push
cmpsb
imul
inc
inc
imul
addr16
mov
roll
movsb
jmp
in
into
jno
cltd
mov
shrb
add
ret
mov
and
pop
and
xor
push
push
nop
fwait
push
icebp
lret
sbb
loope
bound
mov
int
stos
aas
dec
dec
lret
adc
add
and
add
push
ret
jo
pop
cmp
int
adc
sahf
jne
mov
test
jae
lea
in
jbe
mov
faddl
jno
jb
push
loope
and
cmp
fsubrl
mov
push
sti
sub
jl
jb
cmpl
pop
loop
scas
les
iret
mov
mov
loop
fsts
fildll
loopne
test
test
dec
inc
sbb
xchg
sub
dec
and
outsb
cld
dec
cmp
fldl
mov
pop
sub
test
mov
xor
scas
mov
jmp
xchg
pshufw
and
mov
lcall
dec
xchg
aas
add
pop
mov
out
in
or
cmpsl
sbb
add
addr16
jg
dec
mov
movsb
dec
add
fidivrl
jmp
mov
sub
mov
repz
push
fsubs
negb
repnz
pop
popa
fcoml
mov
fbstp
arpl
or
ret
xchg
loopne
or
sbb
push
sbb
daa
add
push
mov
fdivl
jne
push
mov
outsb
pusha
lahf
cmp
sub
mov
and
xchg
sbb
xor
movsl
push
push
fbld
call
ret
fucomip
loop,pt
scas
int3
sub
dec
or
sub
in
mov
jne
mov
or
leave
leave
test
into
adc
xchg
les
movsb
ljmp
shlb
aas
pop
or
or
cmp
inc
mov
mov
cmp
fstpl
nop
mov
ss
dec
adc
out
push
lea
xor
jno
dec
arpl
aam
xor
in
mov
mov
add
out
and
push
and
xchg
loopne
ret
lea
test
addr16
adc
sbb
stc
ja
cltd
testl
mov
push
mov
lret
cmpsl
fsubs
and
jne
repz
nop
cs
rclb
pop
add
dec
hlt
call
ret
push
fildl
sbb
push
jge
out
pushf
dec
dec
dec
add
mov
aaa
add
jne
xor
lods
ficoms
mov
nop
jb
xlat
or
or
orl
inc
test
dec
jb
cmpsb
mov
pop
rcrl
sub
cwtl
popa
pop
sub
ss
mov
mov
sub
aad
inc
push
xchg
mov
or
inc
clc
movsb
or
test
lcall
adc
push
das
lea
andl
and
and
pop
subb
imul
shrl
cli
add
aad
fisubrl
push
aaa
sub
add
xchg
in
out
jae
loopne
mov
aam
add
inc
sub
test
into
arpl
imul
pop
popf
xchg
movsb
dec
aas
jae
xchg
lods
push
sbb
xchg
mov
sahf
pop
and
ss
and
dec
or
or
push
xchg
repz
sbb
sbb
insl
or
dec
mov
fwait
xchg
fidivrs
clc
lret
jmp
insb
fildll
faddl
mov
inc
data16
orl
add
jge
mov
pop
xchg
test
fxch
cmp
adc
shrl
xchg
mov
push
aaa
dec
jl
adc
or
inc
mov
fwait
inc
fists
or
repz
ja
push
push
dec
test
jecxz
fs
sbb
pop
mov
addr16
popa
mov
data16
testb
mov
fistl
mov
loopne
daa
mov
cmp
or
lcall
rep
push
sub
cli
in
mov
mov
in
shll
comiss
and
pop
popa
mov
dec
mov
stos
push
add
inc
and
inc
mov
nop
mov
mov
and
mov
mov
push
sbb
daa
push
mov
mov
cltd
pop
rcl
test
pop
movsb
stc
inc
call
fldcw
add
ljmp
and
jns
jo
mov
dec
mov
cs
mov
lcall
lock
inc
lahf
cli
jge
mov
outsl
cs
jge
out
dec
sbb
mov
out
add
push
xchg
dec
ret
cmp
dec
push
mov
test
imul
leave
pop
or
orb
mov
inc
jb
movsl
test
sbb
inc
pop
pop
dec
or
dec
lods
scas
pop
test
or
xchg
cmc
lret
movsb
cwtl
and
sub
pop
div
pop
daa
sarl
xchg
push
adc
mov
cmpsb
jns
mov
cmp
inc
jae
pop
into
adc
cmpsb
andps
mov
lea
inc
jge
mov
adc
sub
inc
arpl
insl
popa
inc
movsb
mov
movsl
xchg
jecxz
xor
adcb
jmp
popa
je
add
pop
fadds
add
sbb
jmp
orb
push
mov
mov
adc
arpl
in
add
lcall
mov
or
imul
pop
mov
dec
cmpsl
xchg
rclb
imul
pop
out
ss
movsb
sbbb
movsl
in
dec
nop
inc
test
mov
mov
inc
xchg
add
test
dec
stc
or
out
xchg
pusha
bound
mov
stc
jae
out
sbb
pusha
adc
call
imul
mov
and
inc
lea
sub
loopne
inc
lahf
daa
adc
stos
jmp
xor
mov
insb
xor
movsb
cld
rcr
shll
mov
cmp
adc
ss
les
and
adc
out
mov
xchg
mov
into
cmp
push
sbb
adcl
mov
imul
movsl
add
cld
or
mov
loope
sub
fcmovb
sarb
mov
pop
add
or
push
lods
arpl
sbb
or
out
inc
popl
xor
inc
mov
cwtl
clc
or
sub
adcl
sahf
sti
push
mov
scas
cmp
and
push
loopne
xchg
dec
and
adc
ja
test
push
fcmovnbe
xchg
mov
inc
jbe
push
fcoml
mov
mov
test
xchg
stos
mov
jp
mov
lret
dec
lret
sbb
mov
data16
ret
aad
mov
pop
das
int3
xor
push
test
roll
test
adc
icebp
xor
cmp
mov
stos
neg
pop
pmaxub
cmp
stos
or
mov
jne
jmp
jns
and
dec
and
cmp
nop
jns
push
fsub
es
ffree
jnp
pop
int
xchg
add
xchg
lahf
cmp
ror
shll
or
popf
xchg
mov
or
cmp
sahf
aam
lret
fbld
test
and
out
arpl
test
pop
mov
dec
mov
loopne
fnstcw
stc
jg
pop
nop
loope
and
push
push
lods
xchg
repz
mov
repnz
sub
call
hlt
xorb
or
ret
lret
and
mov
jp
test
push
scas
mov
nop
ret
sub
call
push
testl
lcall
add
orb
lret
dec
out
dec
cmp
push
mov
sub
mov
mov
adc
ds
cmp
add
stos
xor
add
enter
jmp
lcall
xchg
xor
pop
dec
adc
sub
add
imull
add
loopne
fisubl
cmp
in
js
push
push
sbb
mov
int
and
lock
rol
test
outsb
jno
outsl
push
pop
mov
push
jae
inc
pusha
and
mov
push
inc
rorb
mov
add
mov
sub
mov
in
aas
push
imul
ret
mov
pop
js
xor
dec
mov
xchg
mov
aad
lret
sub
enter
and
mov
mov
adc
repz
and
cli
imul
les
hlt
scas
cmp
mov
mov
iret
sub
lods
xchg
pop
and
sub
hlt
mov
or
adc
jp
outsl
int
and
mov
cmp
stos
test
mov
test
loopne
repnz
dec
cmp
and
jno
xor
jns
sbb
loop
xor
in
sbb
aad
mov
pop
imul
movsl
add
and
inc
inc
leave
imul
cmpsl
xchg
pushf
je
das
lahf
out
fwait
sub
inc
mov
addr16
push
jl
sti
ljmp
sub
or
or
fwait
cmp
pop
adc
dec
sarb
pop
test
shll
fs
add
dec
cs
adc
in
and
push
pop
pop
pop
dec
call
cltd
xchg
push
xchg
push
lret
popa
or
inc
mov
and
shl
in
adc
mov
pusha
mov
leave
jl
stos
into
and
xchg
out
jl
addr16
ret
jno
adc
data16
int
xor
xor
test
cmpsb
push
std
fistpll
data16
xor
mov
push
outsl
push
repnz
and
idivb
inc
lock
aas
push
cmpsb
push
cmp
or
ficomps
jmp
stc
iret
shlb
sbb
rclb
or
and
cli
repnz
pop
jnp
inc
add
mov
push
sub
xor
imul
sbb
inc
out
push
test
pop
stos
stc
push
out
sbb
leave
jle
cmp
push
movsl
dec
xor
aaa
cmp
mov
mov
in
or
pop
mov
xchg
lea
cmpsb
mov
adc
adc
pop
inc
cmp
or
movsb
pop
jge
and
inc
aam
int
imul
fwait
add
push
mov
call
lret
cmp
mov
in
in
mov
cmp
shll
push
mov
mov
in
int
adc
fildll
clc
push
lea
es
fs
test
jmp
mov
cmp
call
push
mov
and
pop
fwait
adc
outsl
jb
fildll
inc
and
lret
jge
xor
inc
inc
or
in
insb
inc
ficomps
in
sub
andb
pop
leave
and
cld
mov
icebp
dec
fcoml
adc
xor
dec
cmpsl
lcall
lods
push
pop
push
lret
add
popf
int3
sbb
shl
in
jp
mov
loop
mov
xchg
jo
mov
outsl
addr16
aam
int3
in
inc
aas
aas
pop
das
sbb
in
fs
mov
lods
roll
pop
add
movsl
cmpsb
mov
and
pop
jle
lds
and
enter
sti
aaa
pop
mov
divl
jbe
cld
push
out
sbb
das
test
cwtl
subb
jle
cmp
hlt
in
lea
adc
insl
int3
adc
cmp
cwtl
data16
arpl
lock
jle
push
jmp
and
test
or
insl
aaa
movsl
add
and
cmpsb
lret
inc
xor
bound
xlat
mov
mov
or
shrl
cmp
sarb
aam
dec
icebp
leave
pop
pusha
mov
daa
pushf
mov
cmp
pop
clc
pushf
in
or
or
cld
mov
aas
push
dec
sbb
js
push
dec
pslld
scas
push
dec
xchg
adc
out
pop
ret
stos
test
and
in
outsb
orb
rcr
adc
jo
clc
lahf
push
in
imul
hlt
sarb
push
mov
and
or
lea
xchg
cmpsb
fadds
cwtl
cwtl
rcr
out
cli
sub
mov
fildl
aam
or
lahf
xor
jmp
outsl
loopne
aaa
fdiv
inc
xlat
jecxz
fimull
xor
cmp
or
dec
or
fists
dec
insb
imul
push
test
mov
in
fists
sti
movsb
xchg
jbe
out
jle
pop
in
inc
xchg
out
mov
adc
xchg
and
fildl
mov
icebp
sbb
std
cmc
jmp
push
mov
mov
enter
inc
outsl
xchg
bound
int
and
mov
setns
lret
nop
call
jp
sbb
xorl
mov
je
repnz
mov
ja
fldl
xchg
loope
movsl
gs
fistpl
lcall
ds
or
daa
or
mov
loope
mov
add
shll
pop
lcall
pop
int3
sti
cmpsb
mov
ret
jno
lret
ja
leave
pop
pop
int3
push
jg
adc
in
stos
pop
push
cmpsb
or
es
cmp
push
push
ret
scas
mov
push
sub
adc
insl
shll
jl
sbb
into
add
leave
mov
shrl
and
fcmovb
imul
cmp
dec
mov
mov
mov
sbb
test
in
and
das
inc
sbb
jg
adc
ret
push
xchg
lcall
fsubs
sbbl
sub
inc
dec
leave
xorl
hlt
int
movsl
pop
movl
mov
mov
out
pop
fcomps
dec
dec
fnstcw
inc
inc
loop
sti
inc
int3
loope
pop
imul
repz
sbb
js
adc
jecxz
add
and
mov
movl
loope
fwait
loopne
stc
or
ds
push
xchg
loopne
push
in
shlb
pop
fdivl
pop
adc
inc
mov
pop
mov
std
out
cmp
adc
cmp
movsb
add
aas
xchg
sub
mov
inc
rcrb
adc
jb
ss
sub
jle
xchg
xor
sbb
dec
or
testb
add
adc
ss
add
bound
sti
ja
mov
mov
pop
jecxz
mov
or
mov
out
inc
ficompl
mov
jp
sbb
dec
shrb
in
lds
mov
in
fnsave
adc
fisttpll
inc
or
daa
gs
xchg
ret
xor
xor
jp
rcr
sbb
push
aas
popa
cmp
call
dec
fimuls
or
rcrb
jne
stos
lods
into
mov
dec
shrl
mov
mov
lds
mov
out
sbb
xor
sub
idivl
inc
cltd
ret
xor
into
cmp
imul
iret
xchg
hlt
rol
stc
ss
pop
jne
sbb
out
stc
mov
lretw
push
jmp
js
or
push
pop
fmull
jno
inc
and
stos
adcl
sbb
sti
inc
add
fs
andl
rcll
pop
dec
mov
and
mov
cmc
inc
out
adc
mov
sub
mov
aad
and
add
rcrb
int
mov
shl
mov
mov
outsl
popa
les
pop
mov
adc
jge
fstps
sub
movsb
stos
push
andl
in
in
repnz
lret
outsl
mov
xor
aaa
mov
add
inc
sub
xchg
sub
mov
xchg
daa
out
fisubrs
and
fstpl
sbbl
xor
cli
sub
xchg
aam
mov
std
mov
push
add
decb
mov
push
loop
call
mov
pop
and
jnp
mov
lcall
and
int
das
push
imul
jmp
and
fmul
xchg
addl
scas
fcmovnb
mov
add
fiadds
cmp
xor
jl
scas
jmp
mov
call
push
popa
and
dec
inc
xor
gs
or
mov
int
adc
dec
inc
lahf
insl
mov
lret
inc
cmp
jg
popf
icebp
mov
arpl
and
mov
jmp
adc
add
jge
clc
aam
jle
mov
cmc
and
popa
les
mov
loop
cmc
push
pusha
cwtl
jo
pop
fwait
das
add
sbb
jmp
pusha
push
test
fnstsw
cli
add
xchg
sub
jmp
pop
xor
push
sbb
xor
daa
repz
scas
leave
stos
adc
daa
jae
scas
mov
mov
rcrb
push
fs
lret
movsb
in
and
cmp
js
ficomps
sbbl
bound
data16
cmp
lods
xchg
clc
stc
xchg
dec
ja
push
push
rcr
xchg
fnsave
mov
call
jp
dec
pushf
lret
adc
cld
or
in
inc
outsb
xchg
lds
shll
and
std
and
divl
shll
push
or
inc
mov
jp
fnstcw
xchg
mov
sbb
stos
test
movsb
scas
lahf
mov
invd
and
jo
ret
xchg
div
add
lods
xlat
mov
mov
mov
shll
negl
and
adc
dec
cli
xor
push
rclb
or
inc
jecxz
mov
push
test
rcl
sbb
sbb
mov
xchg
std
or
mov
notb
data16
xchg
mov
inc
test
add
inc
das
cmpsb
jge
scas
fstpl
clc
scas
jg
js
mov
push
dec
cmp
jo
and
mov
js
cmpsl
movsb
inc
lcall
jb
sbb
mov
rcl
js
into
pusha
movl
dec
outsb
lret
pop
fmul
in
and
mov
outsl
loopne
xchg
or
in
ficompl
xchg
test
lret
sbb
add
sbb
inc
enter
cwtl
sbb
or
jmp
or
fiaddl
xor
cmp
out
inc
sbb
inc
push
iret
dec
lret
push
insl
bound
and
sbb
xor
gs
stc
xor
sub
imul
out
mov
inc
adc
mov
mov
clc
gs
push
adc
push
mov
leave
mov
mov
std
out
cs
mov
test
push
addr16
jnp
and
adc
and
dec
bound
mov
cld
mov
test
jae
mov
inc
push
jle
out
pop
aad
mov
push
mov
scas
cmp
and
inc
rcl
rolb
and
and
xchg
inc
push
test
inc
sbb
lret
dec
cmp
xorb
adc
jmp
fldl
testl
xchg
pop
das
mov
or
gs
inc
loopne
fcmovnbe
mov
jle
insb
mov
xlat
jge
in
jmp
cmp
cmp
scas
jne
mov
lret
fs
enter
push
sub
out
fistpll
or
or
ss
cmpsl
mov
cld
out
lea
xchg
jl
lock
aaa
cli
js
repz
divb
nop
dec
or
xchg
xchg
mov
mov
lods
enter
ds
loop
mov
mov
xchg
add
das
std
in
test
and
call
xadd
ljmp
mulb
negb
pusha
or
fnsave
inc
push
pusha
mov
aaa
mov
sub
bound
lea
push
into
cmpsl
decb
ss
scas
outsb
int3
shl
out
adc
adc
ja
repz
enter
xor
mov
xchg
inc
sub
inc
dec
inc
imul
sbb
push
pop
add
rclb
leave
mov
xor
aas
cmpb
in
add
jmp
cmp
dec
repnz
pop
adc
cld
cmpsl
ljmp
inc
out
test
cmpsl
dec
xchg
add
cmpl
jl
fisttpll
popa
xor
out
mov
xor
fmuls
imul
sub
mov
daa
and
xchg
and
scas
insl
pusha
insl
rcll
sahf
inc
loope
push
subb
loopne
sub
jl
in
adc
adc
push
xchg
das
or
cmc
xchg
adc
mov
std
jnp
sbb
repz
imul
mov
leave
mov
push
xchg
mov
jle
sbb
pop
and
cld
dec
sbb
cwtl
sbb
xor
mov
ss
mov
lds
jbe
sub
cmp
dec
filds
insl
and
or
aam
or
shrb
sahf
subb
orl
loop
hlt
xchg
jl
sbb
hlt
pop
jne
and
testb
gs
test
inc
popf
adcl
push
adc
into
sbb
sbbl
fidivrs
hlt
lea
and
fwait
add
or
aad
rep
insb
pop
int3
in
cmp
mov
repnz
out
push
jl
cli
inc
mov
insl
faddp
ret
add
and
stos
mov
icebp
aad
movl
data16
aam
call
cltd
push
mul
ljmp
sbb
push
pop
ds
scas
fcmovne
and
sarl
adc
ret
fmull
sub
scas
mov
or
mov
sub
xchg
iret
lcall
xor
in
or
fwait
test
mov
bound
pop
jno
fsts
and
pusha
pop
lret
xor
fldcw
ja
je
lock
mov
sbb
fsubrl
sahf
std
shl
xor
xorl
mov
cld
mov
aaa
cmc
cmp
std
pop
push
sarb
dec
imul
push
jno
cld
pop
andb
pop
add
jne
ja
add
testl
and
hlt
jmp
daa
push
rolb
inc
xchg
cmp
arpl
mov
js
int3
cmp
sbb
lret
jp
push
pop
cmp
dec
out
jno
jmp
ret
out
insb
mov
pop
cmp
sbb
pop
pushf
test
mov
dec
rorb
push
dec
sub
aad
pushf
xchg
xor
jno
mov
jb
xchg
pusha
adc
sub
and
pusha
jns
mov
js
aam
mov
and
rcrb
xchg
test
xabort
scas
push
andb
sub
sti
ret
push
imul
ljmp
push
sub
add
lahf
inc
ret
or
pop
rol
rcr
imulb
imul
bound
es
xor
shl
cmp
jp
push
cmp
outsl
sbb
mov
fwait
jns
ljmp
sub
push
loope
lock
daa
push
xor
jg
repz
out
rcl
jmp
adc
jmp
push
and
lcall
test
mov
mov
shrb
cs
ret
fdivrs
mov
enter
adc
adc
sub
clc
and
mov
mov
mov
sti
mov
dec
scas
xor
xor
xor
mov
stos
jbe
arpl
outsb
push
adc
xchg
rol
scas
aas
sbb
sti
jno
and
out
les
out
out
mov
jp
xchg
mov
sub
dec
mov
or
inc
add
lods
lds
mov
push
mov
ficoml
inc
fwait
pop
inc
jl
or
popl
clc
jbe
pop
push
add
jne
lret
mov
mov
or
jle
in
mov
loop
xchg
sub
add
arpl
jg
dec
cmp
and
push
mov
popa
cmp
jp
addl
lods
scas
or
aad
dec
mov
xor
popf
or
inc
cmp
dec
in
shrb
shll
movsl
and
lods
jno
xchg
xchg
xchg
js
fidivrs
ja
fs
xchg
jno
cltd
in
movhps
scas
mov
push
jb
iret
cmp
pop
pop
mov
movsl
shl
mov
adc
add
pop
jle
cmp
jle
sub
gs
sti
adc
std
dec
pop
or
or
xor
pop
xchg
leave
mov
or
dec
in
test
jb
mov
es
and
mov
pop
inc
popl
xor
ret
jl
fnsave
pop
sbb
test
cmp
sbb
das
mov
inc
das
fsubrl
or
inc
jecxz
mov
cwtl
lock
push
inc
xor
loop
pop
ja
xor
insl
push
cmp
imul
jno
mov
adc
mov
adc
inc
mov
push
popf
inc
mov
pop
mov
cmp
sti
add
test
scas
jne
inc
shrb
cmp
cli
rorl
les
das
lods
mov
mov
dec
jns
out
lcall
mov
and
das
mov
push
or
imul
xor
mov
jecxz
sbb
inc
je
int3
pop
icebp
lret
push
cli
fimuls
sbb
lahf
in
cmpsb
mov
cmpsb
jbe
or
xor
cmc
aam
dec
pop
ret
loop
les
push
add
add
fcmovb
test
test
in
jl
ljmp
lea
inc
mov
orb
add
inc
das
pop
pop
sti
mov
xchg
sub
add
push
lahf
mov
dec
pop
ds
pop
aam
call
aas
cmp
loope
gs
shl
cmpsb
clc
xchg
lds
jle
shlb
dec
sbb
sbb
lcall
sbb
shr
push
addl
jl
ljmp
out
cmpsb
inc
mov
lea
enter
pop
ja
js
xchg
stos
scas
cmp
movsl
cltd
sbb
sbb
inc
shlb
mov
nop
or
aas
xchg
adc
adc
lock
fmul
push
jge
mov
loop
xchg
inc
fs
shll
lcall
cmp
push
mov
xor
mov
mov
xor
or
das
es
xchg
pop
adc
lods
lret
pop
nop
stos
popa
jp
aam
mov
pop
push
push
and
xchg
mov
addb
fwait
mov
inc
push
fnstcw
cmp
mov
mov
xorl
sbb
add
jmp
adc
sbb
sub
or
fsubs
xchg
shl
dec
loopne
dec
scas
push
adc
add
sbb
cmp
and
push
dec
adc
mov
fwait
xchg
dec
aam
or
repz
incb
loopne
cmp
es
ficoml
pop
sbb
rorb
repnz
ljmp
mov
loope
sarb
cli
cmp
mov
mov
aaa
sbb
dec
push
lods
sub
sbb
mov
xchg
stos
lret
jmp
and
lahf
mov
xchg
test
ja
hlt
mov
lock
sahf
cli
je
mov
hlt
int3
adc
test
sbb
mov
int3
xor
loop
in
scas
push
push
rol
xor
cmp
rcrl
cltd
push
sbb
pusha
xchg
xor
dec
in
fldt
inc
pushf
xchg
stc
scas
imul
cs
inc
and
jnp
jle
xchg
sub
pop
not
sahf
push
adc
push
je
clc
dec
dec
clc
jecxz
cs
adc
or
aad
dec
mov
add
xchg
or
inc
and
stos
xor
push
data16
addr16
pop
aaa
test
dec
and
sub
push
inc
inc
imul
aas
and
mov
repz
push
inc
loope
movsl
and
push
xchg
ja
xchg
rclb
and
mov
xchg
out
cmpsl
or
xlat
imul
push
push
mov
cltd
cmp
fimull
fadds
pusha
inc
pop
pop
fists
arpl
test
stc
aad
ja
repz
repz
shrl
ficompl
xchg
into
ljmp
lock
bound
mov
iret
jno
decl
pop
add
fisttps
and
mov
fildl
mov
call
jg
cmc
loope
scas
sbb
xlat
xchg
mov
outsl
sti
adc
shlb
cmp
lcall
mov
in
outsb
and
jb
and
sbb
stc
mov
sub
into
in
push
adc
aad
aaa
cld
cmc
xor
out
loopne
add
mov
js
out
jle
ss
sub
fs
enter
arpl
das
lock
mov
jbe
pop
faddp
test
lcall
mov
mov
jnp
xchg
cmp
std
or
push
das
and
es
cmp
dec
push
or
fs
ss
insl
fiaddl
lret
ja
push
out
xlat
fs
jp
sbb
fnstenv
and
mov
fmull
addr16
in
movsb
js
or
jge
popf
jl
repz
dec
add
inc
mov
inc
xchg
cli
mov
inc
mov
sub
leave
jo
sub
pop
fwait
xor
adc
xchg
dec
jge
pop
int3
push
mov
jne
adc
fucomip
mov
fwait
mov
dec
int
and
adc
dec
pop
ret
push
out
inc
ja,pt
pushw
addr16
jo
jae
dec
mov
fsubl
inc
dec
lret
mov
dec
xchg
int
xor
pop
ja
cmpsb
fwait
rolb
mov
test
icebp
test
iret
xchg
aad
out
es
and
xor
hlt
inc
fsubl
ret
xlat
mov
mov
jmp
jg
cmc
push
rcrl
cmp
and
movsl
js
mov
xchg
or
clc
into
imul
and
mov
js
sub
pop
icebp
push
pop
cs
sub
pop
jge
add
sub
je
cld
xchg
fadds
dec
ret
dec
std
jge
iret
or
xor
xchg
pop
cmp
cmp
sbb
fists
fstps
xor
mull
adc
cmp
test
andl
add
push
add
ljmp
mov
loopne
push
mov
push
jge
pop
push
sbb
xchg
pop
ja
sbb
dec
sahf
push
cli
fadd
sahf
xchg
mov
fistpl
mov
outsl
scas
mov
into
out
fucom
mov
xor
dec
lods
ret
mov
psubusb
adc
push
sub
pop
push
dec
mov
inc
lock
or
cmp
jo
pop
cs
ror
adc
mov
shl
jg
jg
dec
mov
test
stos
push
insl
lods
mov
test
xchg
in
leave
adc
lock
xor
and
jecxz
and
mov
aam
pop
cmpsb
and
sbb
xchg
mov
lock
aad
pushf
cltd
cmp
and
pusha
add
push
shl
pop
mov
push
out
inc
mov
out
pop
fistl
int
adc
fimuls
aad
jmp
mov
into
and
xlat
cld
inc
xor
ret
mov
mov
add
fdiv
add
fwait
jmp
xchg
mov
lcall
lret
sub
inc
flds
lds
into
mov
sti
xchg
sub
push
cmp
int
jb
out
sub
icebp
xchg
xor
inc
fstpt
mov
movsl
imul
jns
shrl
repz
xchg
add
mov
lret
push
lret
xor
shll
pop
in
test
push
jecxz
ja
xchg
divb
rol
arpl
sbb
pop
cmp
pop
jnp
stos
dec
testl
lods
pop
mov
lret
and
lods
xchg
test
and
pushf
inc
add
mov
adc
icebp
adc
dec
das
and
enter
enter
ds
pop
jne
dec
dec
es
and
movsl
xlat
xchg
in
mov
mov
mov
shrl
pop
or
mov
mov
into
pop
popa
fsubrs
test
or
or
push
scas
in
enter
in
imul
lret
inc
jb
jne
push
cmp
cwtl
movsl
mov
ret
js
adc
std
jl
cmpsl
dec
mov
jecxz
sub
jo
xchg
mov
adc
out
sbb
sub
int
jge
cs
sahf
sbbl
popf
aad
dec
dec
icebp
cmpsl
mov
dec
in
sbb
shll
xor
scas
es
rolb
and
aad
mov
xchg
mov
test
xor
cmp
scas
das
mov
add
scas
xchg
cmp
cmpsl
xchg
mov
adc
and
aad
lock
mov
setae
adc
in
clc
mov
push
outsl
mov
shlb
pusha
mov
pop
fistpl
cmp
rcrl
and
push
ds
jg
mov
xor
into
adc
lcall
lcall
and
push
mov
dec
int
fwait
stos
lret
out
pop
jl
sbb
mov
sbb
bound
clc
out
cmc
cltd
cmp
jge
lods
mov
fwait
sahf
addr16
push
arpl
or
mov
or
sbb
mov
sbb
mov
inc
loope
or
mov
dec
popf
push
add
aad
sahf
js
sbb
sub
aaa
mov
aas
push
repnz
add
pop
dec
pop
inc
outsl
cmp
pop
jb
ds
and
fimuls
repz
fcmovu
mov
std
cmp
into
push
jb
fiaddl
in
pop
inc
or
sarl
mov
shlb
push
rcl
mov
pop
inc
fldt
sti
fs
jbe
sbb
mov
mov
xchg
and
xchg
sub
bound
mov
rcrb
ror
jle
mov
outsl
stos
or
outsb
push
rorb
mov
dec
ret
dec
dec
xlat
into
mov
insl
inc
sti
and
outsb
and
add
rclb
mov
in
repnz
lods
loopne
fs
jmp
xor
and
psrlq
mov
jb
mov
fisttpll
fisubrl
ljmp
stc
sub
and
inc
mov
pop
jns
or
push
test
scas
mov
xchg
cld
mov
adc
pop
cmpsb
sbb
pusha
cmp
lds
cmc
mov
xchg
xchg
repz
cmp
inc
push
syscall
mov
ret
fimuls
call
addr16
std
je
mov
out
inc
or
sti
lock
les
shrl
adc
ds
icebp
loope
mov
mov
xor
push
xor
loop
adc
scas
sub
push
push
out
sti
sub
push
xchg
and
cmp
les
mov
or
push
bound
sbb
add
repnz
shrl
test
sbb
sub
push
pop
pop
fcompl
mov
pop
mov
cmc
jmp
pushf
iret
mov
push
sub
or
sbb
jo
mov
adc
cltd
or
xor
dec
std
push
fldl
mov
pop
shll
mov
dec
xor
adc
fstps
jmp
and
data16
adc
inc
stos
xchg
lcall
int
sub
and
fs
fisttpl
mov
lret
loope
ret
insb
cmc
adc
fisubl
cmp
fadds
jmp
sub
adc
push
cli
sahf
in
xor
xchg
dec
xor
sub
arpl
gs
sbb
mov
jmp
fildll
inc
insb
lods
adc
sub
sbb
fwait
movsl
dec
into
or
sub
mov
subl
adc
inc
mov
imul
icebp
sbbl
sbbb
push
imul
jbe
or
push
add
lcall
xchg
loope
mov
pop
je
or
out
shrb
mov
mov
js
sub
push
jge
daa
leave
aam
aas
or
adc
mov
mov
dec
sub
mov
pusha
xchg
mov
call
fsts
inc
or
arpl
flds
cld
sbb
dec
sbb
add
lcall
xor
das
lret
pop
lock
jmp
mov
dec
int
adc
push
cmp
and
mov
lret
das
stc
lock
in
dec
stos
dec
push
nop
jb
leave
int3
shlb
sub
lahf
sub
push
int
pop
ret
jno
pop
hlt
shrb
adc
jb
sbb
push
mov
movsb
les
imull
sti
push
xlat
ja
insb
push
dec
push
addr16
or
xor
hlt
in
mov
minps
sub
dec
push
dec
mov
sbb
int
loop
inc
xchg
push
cmp
iret
sub
fdivrl
enter
cmc
fiadds
sbb
cli
mov
and
sbb
insl
cmc
nop
cmp
add
fiaddl
psrlw
in
test
dec
pop
or
pop
add
stc
pop
je
aad
pop
les
fnsave
xor
insb
fidivrl
std
loop
inc
mov
xor
insl
adc
sti
cltd
xor
mov
xchg
and
jecxz
icebp
jmp
test
jl
dec
add
aas
cmp
or
xchg
xor
sub
and
mov
enter
dec
jecxz
out
mov
dec
push
mov
push
popa
sahf
sbb
jl
bound
lods
ljmp
mov
xchg
mov
mov
push
mov
sbb
testb
aaa
mov
pop
jbe
dec
mov
stc
inc
xorl
icebp
mov
inc
xchg
push
imul
jecxz
cmp
or
imul
mov
test
pop
sub
icebp
sub
stos
mov
dec
in
jo
sub
mov
cmp
mov
mov
sbb
push
mov
push
mov
stos
test
les
push
andb
jl
stos
stc
xchg
inc
fwait
mov
int
into
add
lcall
push
ljmp
lret
cmp
ja
pop
dec
xchg
push
jle
pop
lret
xchg
jno
daa
out
xchg
sbb
mov
js
sub
les
mov
clc
or
pop
push
fsubp
imul
push
lea
stos
in
jb,pn
out
sub
xor
mov
arpl
inc
ret
push
pop
mov
push
cmp
mov
and
push
mov
leave
jns
push
pop
fsub
nop
or
cmp
inc
shll
or
adc
sub
jmp
sub
adc
fsubr
xor
jecxz
into
aad
cmp
mov
mov
lcall
sarl
xchg
sbb
jno
loop
seto
pop
inc
push
pop
in
lock
imull
sahf
out
scas
mov
and
jne
cmp
nopl
push
repnz
pop
data16
imul
jle
and
out
orl
out
adcl
pop
sub
enter
movsl
fxch
inc
sti
test
lahf
mov
addr16
jnp
mov
and
push
mov
adc
sbb
repz
pop
lea
adc
pop
push
aas
inc
stos
xchg
mov
sub
inc
mov
fs
imul
lcall
sbb
cli
sbb
xor
pop
into
pop
mov
test
in
or
pop
inc
xchg
adc
icebp
jecxz
jb
stos
data16
addl
dec
push
push
ljmp
shlb
xchg
sbb
push
jl
mov
jecxz
lods
fisubl
mov
cmc
inc
loopne
sti
adc
lea
popa
mov
adc
cs
lret
ret
jge
daa
shrl
push
xchg
int
sbb
scas
arpl
mov
adc
mov
mov
enter
push
mov
add
dec
pop
cli
xor
pusha
cmp
rcll
mov
imul
sti
stc
js
into
adc
sbb
in
jle
testl
movsl
jbe
xchg
jnp
rorb
pop
xchg
and
add
and
jns
popf
subb
dec
leave
or
mov
test
jbe
leave
out
lock
xor
outsl
sbb
or
inc
mov
push
mov
lea
hlt
lcall
sbb
cmpsl
pop
cs
push
mov
test
push
enter
or
mov
pusha
mov
xchg
cmp
push
mov
adc
cltd
mov
mov
xchg
out
xchg
inc
imul
in
dec
pop
jmp
sbb
pop
daa
xor
add
mov
fstl
enter
mov
add
xchg
push
jns
iret
scas
mov
imul
pop
sub
mov
insb
shrl
inc
pop
pop
mov
repnz
pop
aas
insb
shll
pop
push
lahf
rclb
xchg
mov
push
xchg
mov
or
xor
pushf
mov
iret
inc
mov
mov
arpl
and
cmp
cmp
addb
jle
imull
mov
pop
xchg
inc
lahf
cmp
adc
ljmp
push
pop
fdivrs
pop
cmp
pop
dec
lcall
xchg
and
sti
adc
xor
inc
mov
out
push
push
mov
mov
fistps
add
aam
pop
jge
sarb
inc
insl
dec
mov
les
mov
cbtw
aam
out
fcoml
adc
fsubs
mov
imull
fisubrl
and
mov
push
inc
cmp
jb
mov
jo
adc
dec
movsb
in
sub
xor
cs
mov
sub
push
rcrl
xchg
cld
sbb
xor
test
push
ret
mov
lret
mov
jp
jmp
test
mov
push
xchg
push
movsl
sub
scas
cltd
int
mov
imul
addr16
jo
incl
imul
dec
fpatan
mov
ficomps
mov
lods
rorb
or
cmp
jmp
iret
movsl
pop
ret
iret
mov
jecxz
and
test
rol
cmp
cs
negb
cmpsl
roll
movsl
jp
or
cmp
dec
rcr
das
mov
shll
inc
mov
mov
mov
add
and
into
xorb
sub
pop
xchg
stos
adc
cmp
lds
and
add
call
insl
jns
and
xchg
dec
ljmp
adc
in
or
lcall
iret
cmp
popf
xor
push
add
ror
int3
sub
xchg
fiadds
jmp
scas
jne
adc
pop
in
lock
lahf
aam
jnp
jmp
mov
xchg
dec
out
sbb
or
adc
jecxz
jle
fildl
dec
jns
sub
hlt
insb
mov
sbb
sbb
jl
xor
mov
cmp
cmp
int
or
jnp
sub
jecxz
push
jl
ss
out
xchg
out
xchg
add
aam
add
bound
xchg
or
fimull
cmp
loop
push
mov
test
call
jmp
sub
dec
xor
dec
in
push
stos
mov
add
insb
fldl
xor
push
jae,pn
push
mov
push
cmp
in
pusha
dec
ret
inc
pushf
js
aas
sbb
es
xchg
out
mov
push
add
ficomps
and
sbb
icebp
out
ja
jg
push
sbb
dec
fwait
mov
mov
ror
stos
mov
pop
scas
jno
pop
cmp
sub
jg
sbb
int
jb
lods
cmp
sahf
pop
lret
repz
clc
pop
enter
jle
mov
or
jecxz
dec
or
mov
cltd
and
dec
pusha
push
fcoml
insl
fs
push
pushf
push
gs
xor
cmc
xchg
and
testb
test
xor
flds
cltd
inc
nop
mov
cwtl
xlat
xor
mov
xchg
cmc
sub
aas
sub
adc
add
sti
xchg
data16
xlat
imul
add
out
dec
shll
dec
or
dec
push
stos
mov
out
push
cmpsl
out
mov
jge
inc
aas
in
stos
test
inc
jle
insb
cmc
cmc
ret
jno
cld
insl
dec
fcompl
test
ss
mov
cmp
sarl
sbb
iret
ds
xor
insb
add
mov
adc
in
dec
sbb
pop
test
sahf
jecxz
jp
dec
mov
push
fucom
fs
out
push
add
cmp
jge
repnz
sti
cld
sub
xchg
pop
insb
pop
sbb
cmp
insl
arpl
dec
add
or
xchg
push
dec
sbbl
and
add
bound
mov
daa
dec
in
fimuls
pop
aas
xor
inc
pop
jne
pop
xchg
dec
cmpsl
jmp
stc
cli
mov
fsubr
in
cli
fwait
inc
add
insl
test
sbb
mov
shl
rclb
dec
cmpsb
jge
lods
add
cli
xchg
add
movl
jns
fildll
test
outsb
jns
cld
sbb
mov
ds
xchg
pop
inc
mov
mov
nop
pop
xchg
jno
xchg
jb
push
out
inc
mov
sbb
es
mov
cli
mov
sar
mov
mov
leave
loop
divl
in
mov
adc
bound
std
and
fwait
push
and
mov
cld
in
jbe
sbb
pop
orl
adc
dec
fs
inc
dec
jne
inc
push
adc
enter
lcall
push
push
push
sbb
lock
std
dec
stos
xchg
out
les
or
push
jae
jp
and
xchg
jp
das
lahf
imul
loope
test
or
xor
pop
inc
jns
inc
or
mov
andl
inc
xchg
imul
popf
iret
jne
mov
add
dec
in
rcl
mov
mov
sti
addr16
xchg
arpl
push
cmp
in
xchg
std
inc
push
in
lods
mov
dec
sahf
mov
xchg
pushf
adc
stc
pop
adc
jne
sub
outsl
jmp
idivl
mov
repnz
cmpsb
xor
lret
mov
xchg
out
pop
ret
sbb
aad
js
dec
jp
imul
shll
daa
add
xchg
hlt
and
cmpsb
bound
jg
dec
and
cli
fstps
adc
or
imulb
addr16
and
xor
xchg
sbb
push
and
jne
and
mov
cmp
sub
pop
or
call
in
inc
cli
sahf
icebp
aam
mov
pusha
lods
jbe
andb
int3
lods
inc
dec
cmp
fdiv
out
mov
loop
jae
hlt
cmp
imul
jns
test
lcall
pop
je
dec
mov
xor
push
mov
push
xchg
mov
inc
jbe
rolb
pop
add
mov
sub
or
mov
push
pop
imul
bound
cld
out
pop
push
aas
fwait
cs
add
inc
lods
adc
push
adc
sar
jmp
add
in
or
push
add
and
ds
push
test
mov
xchg
sub
inc
adc
dec
cmpb
xchg
push
out
add
test
enter
loope
pop
sub
test
ficoml
or
js
out
pushw
sbb
push
leave
and
push
add
fnstenv
push
leave
mov
xchg
xchg
inc
or
mov
stos
shrl
add
outsb
lock
add
jno
jmp
xor
inc
aad
cld
add
mov
popa
xorl
ret
sub
push
jae
and
mov
inc
or
cli
cli
mov
outsl
inc
idivb
rolb
lahf
ror
out
cmp
or
xlat
cmc
jns
mov
incb
adc
inc
push
ljmp
dec
lcall
mov
push
mov
cmp
pop
insb
push
andl
push
inc
xor
fwait
pop
jno
sbb
out
xor
mov
daa
xor
cmpsb
push
imul
xlat
push
addr16
ss
cld
int3
dec
mov
insl
jo
xchg
scas
sbb
jo
jo
dec
xchg
push
mov
mov
dec
lret
ljmp
jle
xchg
btr
cmp
icebp
jo
adc
adc
jecxz
hlt
mov
push
mov
push
push
cmpsb
pop
movsb
test
fisubrs
lock
les
mov
mov
insb
mov
pushf
inc
enter
int
mov
xchg
aam
dec
sub
out
mov
or
nop
sbb
jnp
test
scas
add
mov
popf
in
pop
in
fs
in
nop
mov
xchg
cmpsl
repnz
enter
cmpsb
adc
xchg
mov
lret
dec
aad
lcall
lahf
adc
push
js
pop
mov
ja
push
cmp
sbb
notl
mov
sbb
push
xchg
mov
enter
imul
je
inc
and
pop
dec
mov
xchg
dec
mov
testb
sub
fs
ds
mov
cmc
adc
leave
mov
jo
xor
jmp
jle
xor
sub
pusha
call
pop
and
cmp
mov
dec
ljmp
jae
mov
or
movsl
scas
nop
add
pop
in
dec
lea
cmp
xchg
test
dec
cltd
sarb
inc
push
adc
xchg
int
xchg
popa
lcall
mov
cmp
push
mov
jg
jecxz
mov
fs
push
roll
xor
ljmp
mov
dec
inc
pop
or
jbe
xchg
add
cmp
cmpsl
mov
inc
adc
pushf
add
sub
daa
sub
add
adc
bound
push
and
imul
imul
xor
dec
mov
pop
pop
dec
add
or
shl
insb
and
or
mov
push
cmpsl
lods
dec
jg
stos
shrb
lods
dec
pop
xor
sub
fs
jnp
loope
add
push
aas
add
jns
add
insl
adc
jo
push
popa
and
xor
jo
xchg
out
cmc
movsb
lea
mov
and
repz
add
rclb
inc
mov
stc
aas
xchg
fucomp
jp
cmp
loop
out
dec
movsb
loope
addr16
insb
inc
daa
push
sbb
jne
aas
adc
pop
not
testb
aad
and
dec
dec
mov
test
adc
int
sub
jge
pop
push
adc
cwtl
jg
and
sub
shll
pop
mov
pop
add
push
cmpsb
out
fwait
lods
sub
ss
mov
lods
or
shlb
pop
sti
and
cmpsl
adc
inc
push
mov
and
xor
loopne
xchg
stos
stos
repnz
and
or
and
lahf
pop
lret
mov
aad
dec
jecxz
push
int3
xor
xor
mov
lea
add
push
test
cmp
bound
inc
xchg
xchg
jp
lea
pop
clc
test
sar
jl
test
xchg
out
lods
add
pop
inc
and
ljmp
test
sub
xor
pop
das
in
dec
push
xchg
ret
out
and
sbb
or
add
pop
xor
mov
inc
lds
cmpb
insb
test
filds
sbb
jae
mov
sbb
fists
out
sub
addb
imul
push
paddb
pop
xor
dec
push
int3
cli
out
test
cmc
das
pop
jmp
adc
div
fsubs
adc
andb
imul
jns
push
das
xor
in
nop
pop
adc
mov
mov
scas
fmul
imul
loope
cltd
and
mov
cmp
jb
std
adc
or
fwait
jns
dec
sbb
gs
mov
add
movsl
int
cmp
jmp
push
push
jecxz
mov
imul
mov
mov
sahf
and
adc
add
cmpsb
clc
pop
pop
adc
mov
lods
cld
jmp
jns
int
jnp
sub
lahf
and
sbb
jbe
hlt
imul
out
cmpsb
lret
jno
cmp
call
lds
add
lods
rclb
push
xor
adc
pop
cmp
push
dec
mov
cmp
sbb
imul
clc
insl
call
sahf
fbld
sub
mov
xchg
fisttpll
cmpsb
mov
push
add
dec
adc
pop
int
andl
lds
iret
sbbl
pop
xor
fsubrl
insl
clc
xor
sbbb
ss
sub
lret
arpl
sti
lahf
pavgw
jno
cmp
inc
push
dec
xor
add
pop
xchg
jge
stos
jae
and
inc
pop
lods
test
inc
loope
xchg
pusha
mov
je
mov
out
leave
mov
sub
arpl
lea
aas
and
push
lods
add
add
fisttpll
adc
daa
push
ds
push
test
sbb
into
pop
cmpsb
sahf
fdivrs
xor
enter
sub
dec
hlt
mov
push
dec
jae
std
sub
loopne
or
movsl
adc
cmp
fisttpl
lret
add
ja
dec
out
ficoml
jae
or
vpshuflw
mov
dec
push
jae
cmpsl
pop
ss
aas
jmp
inc
pop
xchg
lock
xchg
dec
and
in
sbb
adc
test
add
scas
dec
or
push
iret
lahf
pop
int3
repnz
fildl
cmp
adc
pushf
orl
push
fld
xchg
jge
shl
das
insb
and
fiaddl
add
gs
mov
lods
popa
mov
mov
and
iret
jae
gs
mov
rclb
jl
fisubl
xchg
popa
sub
stos
mov
pop
dec
lds
push
jp
test
add
jge
cmp
hlt
add
and
mov
dec
jmp
imul
or
cmpsb
mov
cmp
xchg
mov
clc
adc
cmp
imul
mov
xor
pop
std
xchg
nop
mov
das
sahf
pop
cmp
push
add
cld
aas
and
nop
inc
int3
outsl
in
adc
loop
lods
pop
xchg
sub
sbb
cmp
shr
sub
and
add
lea
push
cmpsb
mov
cmc
sarb
mov
cld
or
scas
jne
adc
lret
push
fsubl
jns
add
jne
adc
loope
xor
sahf
ja
mov
popf
leave
cmp
fwait
out
dec
insl
in
fsubrs
pushf
imul
in
sub
dec
in
std
in
aas
xchg
in
test
imul
push
iret
and
jnp
dec
mov
mov
dec
inc
sahf
mov
mov
sub
fnstcw
aaa
fcmovne
dec
or
mov
shrl
inc
ds
stc
int3
mov
sar
mov
dec
and
add
mov
mov
mov
cmpsb
xchg
jne
jne
inc
pushl
enter
aas
push
pop
inc
and
enter
push
pusha
pop
scas
inc
inc
test
or
push
pop
out
adc
stos
scas
int
jnp
and
ljmp
add
dec
loope
xchg
in
test
mov
jb
mov
xor
repnz
outsb
jo
daa
xchg
mov
or
dec
or
fmul
imul
xor
push
out
rcrl
ja
imul
outsl
cmp
ds
insb
dec
mov
and
dec
push
popa
scas
push
sbb
clc
sub
mov
lahf
movsb
adc
bound
xor
push
scas
and
test
sub
sub
mov
in
push
cmp
xor
leave
int3
mov
ret
insl
orb
test
jl
addb
out
hlt
pop
jg
in
inc
sub
and
jno
inc
xchg
pop
or
dec
popf
jnp
lea
add
cmp
xchg
loop
xor
jbe
mov
bound
xchg
inc
or
add
fdivr
out
and
pop
xor
inc
popa
sub
fisubrl
cmp
cli
int3
clc
int
mov
add
in
loopne
ss
mov
xor
jg
add
and
call
stos
cmc
mov
xchg
dec
adc
mov
call
sahf
jmp
out
out
pop
mov
fists
fwait
inc
mov
push
fmull
mov
int
loope
cltd
out
sub
cmp
or
xor
std
andl
fildl
and
mov
in
sbb
stos
dec
add
bswap
jl
pushf
rep
and
cmp
sbb
bound
sbb
dec
cmp
and
xor
ds
mov
hlt
xor
repnz
int
jb
popa
cwtl
jmp
test
out
inc
xor
insl
paddq
in
mov
jne
adc
xchg
sahf
sti
call
call
inc
cwtl
dec
pop
test
test
mov
jp
cld
xlat
mov
test
ret
call
fidivrs
call
dec
adc
mov
subl
das
shl
xchg
out
fwait
xor
aam
xchg
xchg
cltd
xlat
gs
pushf
rep
sbb
lea
or
sbb
fcompl
dec
scas
aam
push
ret
ss
sub
imul
xor
mov
xor
cltd
xchg
xchg
mov
inc
push
das
dec
lods
shrb
pop
xchg
ds
sub
sbb
push
dec
fsubr
mov
cltd
mov
sti
lahf
nop
dec
test
push
add
std
loope
xchg
dec
dec
mov
dec
jp
pop
leave
neg
cmpsb
imull
scas
sub
shrb
xor
push
mov
mov
cld
subl
add
adc
adc
out
cmp
bound
lret
push
sub
std
shl
lret
jnp
repz
insl
xchg
addr16
push
loope
es
jg
push
insl
ret
fcmovnu
sub
clc
push
icebp
pop
pop
unpckhps
aam
adc
mov
imull
addr16
aad
scas
hlt
pop
dec
hlt
test
pop
ret
jne
daa
in
iret
dec
sub
sbb
addr16
pusha
addb
xor
xor
jge
movsb
repz
std
scas
add
in
jo
add
push
ret
lds
inc
sahf
insl
xor
inc
ljmp
les
ficoms
inc
and
lcall
pop
mov
movsl
push
jns
cmp
xchg
aas
sbb
das
shr
jo
inc
adc
add
xchg
inc
or
aas
mov
scas
jmp
and
mov
fs
jno
inc
pop
jo
mov
sub
or
shlb
pushf
and
cmp
xchg
imul
or
xchg
jle
movsl
cld
bound
mov
mov
cmp
sbb
cmc
dec
movsb
dec
int
jb
pop
std
or
movsb
push
or
aas
pop
loopne
fistpll
jbe
lcall
jbe
cli
es
out
jle
adc
add
add
adc
faddl
dec
fwait
dec
and
lcall
push
pop
push
dec
inc
call
push
inc
es
fdivl
adc
scas
push
adc
inc
pop
imul
repz
sbb
mov
stos
pop
test
out
push
cmp
fst
xor
lods
jo
push
mov
in
adc
lds
mov
call
and
stc
inc
stc
and
lods
sahf
lret
fwait
inc
pushf
les
mov
xor
mov
jnp
pop
addr16
imull
inc
cmp
and
loope
adc
pop
mov
sub
push
aam
rcll
int3
adc
ljmp
jmp
push
jns
vphaddudq
pusha
or
jno
popa
mov
out
sbb
sti
loop
add
js
inc
cmp
xor
arpl
mov
addr16
xor
xchg
push
jnp
in
cmp
xchg
lret
jo
xchg
mov
jge
aas
xchg
add
bound
sarl
arpl
jns
cmpsl
inc
test
sub
push
sar
adc
dec
dec
xchg
in
jecxz
sti
imul
pop
sarl
jmp
movsl
pop
add
jnp
std
mov
fwait
cmp
repz
inc
lcall
cmp
aam
add
push
push
mov
jl
push
xchg
mov
shl
sub
pop
xchg
cmp
push
jle
mov
jl
outsl
dec
js
jns
aam
cld
add
addb
jne
std
rcll
testb
cmp
adc
jne
inc
les
das
jo
lret
lods
push
mov
insl
sub
repnz
xor
and
dec
dec
subl
xor
ret
scas
test
sub
and
lea
dec
dec
xchg
mov
scas
jp
cmp
jg
pusha
mov
testl
adc
push
in
mov
push
mov
xchg
sbb
or
dec
repnz
cmp
dec
sub
loopne
pop
pop
pop
cmp
push
cltd
shlb
lds
int
xor
jmp
pop
mov
mov
or
inc
popl
in
lods
mov
dec
xchg
xchg
cmp
in
sub
insb
sbb
je
outsl
mov
stc
inc
push
jl
outsb
loope
scas
mov
xor
sahf
pop
and
inc
mov
sbb
ss
dec
les
pushf
jecxz
sbbl
outsl
loope
push
and
dec
adc
mov
and
mov
clc
mov
loopne
out
fninit
dec
sarl
insl
jg
les
push
lock
ljmp
xchg
test
or
loopne
push
jb
mov
hlt
push
repnz
and
ss
insl
out
je
adcl
mov
les
xadd
jecxz
inc
push
adc
jne
push
mov
sub
dec
testb
adc
je
cmp
pusha
and
adc
fcompl
push
lret
inc
mov
stc
pushl
and
xchg
sbb
gs
pop
shl
and
mov
imul
push
sti
movsb
fisubrs
push
out
pop
les
jno
inc
inc
in
loope
movntps
sub
add
dec
xor
cmp
or
pop
sbb
movsl
jl
mov
cmpsl
and
aas
icebp
js
stc
xchg
mov
jmp
xchg
sti
nop
xor
jg
test
rorl
iret
ss
mov
sbb
mov
and
jno
jo
dec
inc
add
les
lock
sbb
xchg
es
cli
jae
std
lcall
xchg
pusha
ret
mov
test
popf
mov
popa
aad
xchg
scas
pop
xor
fs
pushf
or
aad
xchg
movsl
dec
sbb
cmp
sarl
cmc
fldenv
cs
inc
loop
xlat
data16
cmpl
mov
dec
sahf
jp
cs
sub
lret
icebp
and
fldenv
aaa
cmp
add
adc
test
sahf
cmp
jmp
rcrb
xchg
dec
xchg
jbe
push
ljmp
jno
push
dec
adc
cmp
sbb
xorl
jns
inc
lcall
pop
insl
and
cltd
mov
insl
gs
fdivrs
dec
ss
aaa
mov
gs
xchg
dec
clc
cltd
jns
ljmp
lea
stos
arpl
out
fcoml
fstl
outsb
sbb
jne
xchg
and
jge
roll
aas
xchg
jle
leave
outsb
push
cs
sbb
xchg
insl
or
lahf
cmp
adc
out
jl
dec
lods
loop
insl
cmp
or
lea
je
cmovge
inc
in
movsl
andb
andb
es
popa
inc
punpcklbw
lcall
dec
es
cmp
lret
sahf
cli
cmc
dec
popa
cmp
je
inc
fsub
sub
pop
xchg
movsb
test
jnp
mov
pop
push
pop
mov
or
mov
push
or
xchg
test
xor
aad
adc
xor
lods
pop
lret
in
xchg
cmovno
jg
or
pop
xchg
fwait
insb
outsl
jl
sbb
addl
or
lahf
enter
insb
or
pop
push
imul
loop
divb
clc
ret
mov
fnstenv
cmpl
jae
mov
mov
stos
cmc
dec
sub
mov
xchg
ja
push
dec
xchg
call
scas
inc
movsb
call
mov
push
jmp
and
das
popf
or
ret
stos
loopne
push
and
movsb
sub
sbb
shrd
or
mov
adcb
pop
jo
cmp
int
int
mov
movsl
adc
shrb
int3
int3
push
dec
inc
mov
add
inc
jle
dec
cmp
cs
pop
or
or
ret
cltd
cmp
das
movsb
inc
cltd
push
enter
sub
pop
or
push
push
mov
dec
and
clc
sub
xchg
pushf
add
ret
aad
lea
dec
sbb
sub
xor
js
mov
or
jb
cmp
loope
adc
inc
fbstp
cmc
cmp
mov
aas
sub
and
out
inc
fwait
loopne
cmp
in
scas
cmp
inc
pop
fistps
add
movsl
push
cltd
stos
int
lcall
lods
inc
pushl
inc
and
js
stc
or
addr16
arpl
cli
pop
popa
fisubl
lret
mov
and
jae
mov
mov
add
mov
adc
add
adc
testl
add
int3
iret
dec
out
mov
aas
std
jne
cmc
cmp
inc
xor
push
sbb
mov
and
loop
add
js
mov
mov
ret
inc
mov
pop
xor
out
sbb
lahf
lea
mov
inc
fadd
pop
jp
popa
sub
orl
shl
pop
adc
pushf
mov
stos
and
and
ljmp
xchg
cmpsb
loopne
mov
xchg
xor
xor
or
movsl
add
xchg
mov
sub
testl
in
inc
xor
adc
sub
enter
int3
xchg
xor
rclb
mov
pop
fstpl
inc
push
xchg
adc
xor
mov
jg
repnz
push
hlt
add
fs
xor
cmp
dec
out
mov
or
jbe
arpl
mov
mov
mov
movsb
dec
call
icebp
loope
push
push
xor
sub
and
push
mov
push
mov
fstps
aas
push
lcall
mov
js
sahf
clc
insb
push
push
ss
fs
jle
cmp
jg
mov
fisubrl
sub
out
les
and
cwtl
pop
std
pushf
ss
scas
add
add
pop
les
mov
push
ljmp
insb
into
push
fisttpll
xor
out
mov
add
push
sub
ud2
scas
in
repz
ret
cmpb
xchg
movsb
vmaxps
enter
xchg
pop
ret
lods
les
loope
mov
and
mov
jecxz
xchg
daa
xchg
aad
pusha
addr16
clc
icebp
ret
or
test
inc
das
movsl
rcrb
test
pop
xor
out
and
ja
adc
lock
and
mov
jno
cld
cltd
pushf
in
or
add
push
inc
or
adc
xor
ret
adc
fmull
sbb
stos
mov
or
inc
mov
sbbl
fdivs
mov
les
out
push
and
loop
outsw
ss
inc
rcl
out
push
lret
or
lds
test
rcll
cmpsl
inc
fldenv
mov
xchg
test
out
jne
into
call
clc
pop
cld
aaa
dec
jae
test
jae
cmp
xchg
or
addr16
stos
cmp
dec
enter
cld
lret
stos
sbb
cld
aas
push
lods
lret
push
repnz
push
es
adcb
jmp
clc
loop
cmpsl
data16
popa
jmp
stc
into
or
test
insl
ret
jne
pop
add
out
adc
cmp
mov
loope
jmp
xor
fwait
sbbl
xchg
inc
mov
xchg
rcll
stos
pop
fwait
jge
xor
lods
push
int3
xchg
or
gs
mov
leave
stc
mov
loopne
xchg
jnp
mov
inc
xchg
mov
adc
jp
inc
inc
out
mov
dec
mov
xchg
inc
icebp
mov
cmovb
xchg
repz
cmp
add
xor
jl
out
mov
mov
sub
scas
jmp
push
jne
xchg
scas
mov
mov
neg
mov
popa
pop
lods
jmp
les
mov
out
cmp
and
jecxz
push
test
sub
adc
push
jae
cli
pop
sbb
pushf
in
or
subb
push
iret
pop
les
fnsave
andb
mov
rol
imul
cmp
xchg
adc
fcmovbe
mov
in
inc
mov
and
js
dec
pop
add
cmp
xor
outsl
jg
push
mov
xchg
mov
xchg
push
fiadds
aaa
ficoml
int
icebp
add
outsl
rcll
pop
sbb
jae
xchg
xchg
mov
loop
data16
add
cmpsb
shlb
jnp
aam
jecxz
and
mov
outsl
mov
jecxz
icebp
rcrl
jge
lret
inc
lea
pop
add
mov
mov
fwait
and
and
mov
call
fucomi
mov
jecxz
xchg
and
rclb
loopne
cmpsl
push
add
mov
jns
pushf
cmp
lret
mov
hlt
dec
sbb
scas
and
clc
lock
cltd
fdivl
cld
call
hlt
cmpsl
pushf
mov
and
pop
cs
sbb
in
iret
pop
das
sbb
push
adc
dec
scas
mov
test
andb
test
dec
push
lcall
popf
jmp
decl
xor
mov
out
and
sbb
xor
arpl
je
rcrb
fcomps
mov
inc
je
fs
mov
mov
or
add
fsubr
orb
pop
xor
add
dec
cld
add
pop
mov
mulps
shrb
and
out
jno
sti
and
mov
push
dec
add
mov
sti
rorl
xchg
pop
fiadds
pop
mov
sbb
add
mov
add
cmp
out
inc
lcall
cld
push
push
outsl
mov
pop
mov
jge
jns
jb
pop
sbb
sub
dec
or
fs
push
neg
bound
andb
pop
dec
dec
fimull
xchg
add
inc
mov
out
je
leave
test
repnz
sub
push
push
dec
out
cwtl
flds
fs
lods
into
jbe
ss
rolb
fdivr
pop
sub
adc
mov
into
mov
or
sti
jge
fsubrp
paddsw
adc
dec
dec
pop
stos
sbb
adc
dec
push
jb
sbb
push
enter
dec
test
std
hlt
inc
dec
xor
sbb
push
stos
jns
jnp
mov
loop
dec
cli
cli
dec
push
lods
shrb
lcall
decb
mov
add
pop
xlat
lret
push
adc
or
popa
pop
testl
jl
xor
sub
pop
jb
sub
xor
aam
mov
jb
les
subb
in
sbbb
jb
push
iret
cmc
lock
popa
lods
stos
and
pop
ret
jg
sti
ud2
push
inc
sbb
jnp
js
sbb
pop
aas
mov
or
xor
and
scas
xchg
cltd
test
push
jae
rcll
push
jno
out
ja
scas
pop
notb
jp
fcmovu
mov
sub
fiadds
push
andl
adc
sub
jp
adc
rorl
jmp
adc
loop
pop
xorl
xor
mov
lods
or
cmp
and
mov
pop
cwtl
shrl
in
sbb
ds
adc
dec
addr16
loop
xchg
dec
lcall
hlt
int
lock
push
divb
jl
adc
ss
test
inc
adc
inc
test
pop
ds
das
in
inc
lock
fsubl
mov
je
add
fcomps
test
xchg
fildl
cmc
and
popf
dec
out
cmp
pusha
dec
pcmpgtd
add
mov
test
jbe
dec
or
mov
mov
jp
or
stos
cld
mov
xchg
gs
inc
rorb
lods
cltd
sbb
cs
test
inc
shll
pushl
cmp
push
outsl
xchg
mov
mov
gs
xor
mov
fsts
cmc
sti
add
int
push
test
cli
jg
je
scas
scas
jl
ret
xchg
mov
jbe
adcl
hlt
cltd
dec
movsb
outsb
cs
fidivrl
mov
inc
int3
mov
shlb
add
jmp
dec
popf
sub
push
ja
outsl
fsts
add
xchg
ss
mov
mov
es
or
push
inc
push
test
dec
hlt
add
pushf
push
hlt
push
into
rcr
jle
dec
xchg
jmp
in
sub
sub
sub
fnstenv
mov
and
or
das
imul
loop
xlat
imul
jle,pt
lock
mov
pop
sbb
dec
lods
popa
outsl
flds
cmp
lret
pop
pop
cmp
jb
fdivp
xchg
and
cmp
adc
fistpl
mov
jge
icebp
scas
adc
jecxz
cmp
cmp
cli
mov
or
adc
mov
mov
imul
or
lods
push
jo
or
rcrb
iret
inc
jo
or
jo
sbb
sub
push
xor
mov
aad
outsl
aaa
iret
jns
clc
inc
push
pop
sub
lods
test
mov
pop
sbb
dec
and
sub
int
insb
fcomps
or
cmp
ficoml
std
pusha
rorb
xor
push
mov
cmp
ficomps
sub
mov
ja
jle
pop
xor
movsb
dec
push
in
fwait
push
je
insl
xor
das
lods
rolb
pop
shll
mov
mov
lcall
cmp
push
call
gs
xor
pop
lret
mov
push
ret
sbb
mov
test
jno
insb
nop
stc
lods
add
mov
mov
mov
loope
xchg
les
xchg
mulb
aam
push
add
int
push
xor
mov
lret
mov
sbb
in
mov
or
xchg
xchg
in
cmc
mov
ds
jle
fwait
sbb
push
pop
mov
nop
lea
out
mov
sbb
adc
pop
ljmp
aam
test
lea
pop
lock
fsubrs
data16
push
fwait
mov
adc
mov
push
insb
cmc
cmp
xchg
sub
mov
mov
adc
pop
dec
mov
in
scas
cmp
int3
call
pop
sub
adc
add
push
into
jmp
push
scas
xor
nop
iret
adc
mov
aad
loopne
mov
mov
leave
mov
mov
xchg
cld
cmp
stos
in
mov
push
popl
ss
inc
push
aam
sbb
mov
sub
add
cli
sbb
pusha
jecxz
decl
popf
xchg
lret
xor
pushf
dec
frstpm(287
sarl
roll
push
add
dec
mov
adc
jae
mov
push
sub
push
es
adc
xchg
lods
fs
jp
ret
mov
dec
test
mov
das
int3
jns
idiv
decb
nop
fisubrs
xlat
fidivrl
mov
loopne
les
loopne
inc
daa
push
jmp
ret
pop
and
dec
mov
aas
sbb
jecxz
sbb
sarb
add
outsl
into
xchg
jns
dec
je
push
rorl
xor
mov
insb
jb
sahf
gs
pop
es
jno
outsl
in
sbb
xchg
mov
js
push
fnsave
out
xor
jle
sarl
pushf
leave
shl
mov
shrb
push
inc
or
into
sub
add
pop
add
or
pushf
cli
jnp
mov
cmp
into
scas
dec
jmp
addb
cmp
into
es
int
out
daa
xchg
imul
mov
scas
dec
stos
fwait
loop
shrb
pop
jmp
mov
dec
lds
xor
cli
xor
push
sbb
mov
jg
xlat
daa
or
icebp
xor
xchg
std
and
xor
fldl
dec
std
push
or
adc
stos
pop
jae
mov
mov
add
mov
popf
jb
lods
sbb
pop
mov
out
testb
stos
popf
mov
cwtl
pop
clc
sub
imul
fadds
sbb
enter
adc
dec
xor
sub
mov
test
push
push
mov
xor
push
lret
scas
inc
pop
inc
sbb
xchg
addr16
jge
loop
ljmp
stos
js
add
inc
scas
mov
pop
out
ficoms
xor
int
jg
mov
xchg
stos
cmpb
mov
fistl
je
pop
dec
jle
cmpb
stos
outsl
in
ficoml
mov
jp
ret
inc
adc
out
adc
push
fwait
jmp
push
sbb
add
mov
sbb
or
loope
daa
mov
decb
push
pop
stc
insl
lea
sub
add
or
or
add
bound
adc
jb
sub
push
mov
push
jae
and
jmp
xchg
mov
dec
es
jae
inc
rcrl
dec
mov
movsl
mov
inc
jl
dec
pop
out
push
push
je
ret
and
enter
dec
or
sbb
push
jmp
test
add
jns
mov
mov
dec
mov
pusha
cmp
data16
ljmp
dec
sti
mov
jmp
loop
and
leave
mov
cmp
icebp
dec
pop
mov
loop
mov
imulb
cmpsb
inc
mov
xchg
addr16
fstp
mov
testb
xor
mov
orb
imul
outsb
add
jo
mov
pop
mov
enter
int3
sbb
out
xlat
and
or
flds
adc
mov
ret
add
xchg
arpl
push
lods
ljmp
jno
mov
in
leave
outsb
dec
pop
inc
ljmp
jl
nop
imul
dec
jge
xchg
test
jmp
dec
lea
push
pop
rcl
gs
mov
leave
add
push
mov
std
adcb
cwtl
mov
cmp
test
scas
push
pop
mov
ret
xor
movsl
fyl2x
je
adc
imul
adc
les
stos
lea
push
xchg
xor
sbb
pop
or
mov
int3
das
cwtl
adc
adc
test
push
aam
add
addr16
icebp
fcomps
ss
out
outsb
mov
mov
arpl
loop
sbb
jmp
mov
add
mov
outsl
push
mov
aad
jne
jmp
cmp
mov
ret
xchg
dec
subl
cmp
jl
dec
or
mov
in
add
adc
ss
pop
pop
sub
and
sbb
addr16
push
jns
js
outsb
adc
mov
sbb
ss
add
jns
jmp
adc
push
rorl
fsubrp
adcb
pop
insl
xchg
inc
mov
ds
mov
pop
scas
jl
add
ja
lcall
arpl
sub
ret
sub
jns
in
mov
push
mov
sarb
xor
xor
adc
dec
hlt
lret
rolb
cmp
jnp
dec
and
sub
jns
mov
data16
arpl
lret
xor
push
lock
xor
das
sbb
cmp
sub
add
addr16
arpl
adc
pusha
mov
jg
cmpsl
ficoml
rcrl
leave
ja
cmpsl
outsl
subl
sbb
mov
mov
jo
and
sti
mov
add
cli
mov
mov
adc
ljmp
iret
cli
fwait
insl
jp
push
in
es
mov
cmpsb
clc
arpl
inc
stos
cli
mov
jb
xchg
in
jo
sub
lret
push
jge
jg
cmp
sub
leave
stos
rcll
cmp
call
mov
push
sbb
mov
cmp
mov
push
insb
cltd
push
xor
addl
cli
xchg
mov
or
cmp
jno
lds
leave
dec
popf
test
out
mov
xor
sbb
lds
mov
push
push
sbb
inc
leavew
inc
jne
mov
aaa
cmp
sti
xchg
icebp
push
xchg
pop
dec
sbb
lea
fdiv
push
sti
shrl
sbb
push
ret
inc
push
mov
sub
inc
stc
add
test
push
dec
sahf
add
mov
test
into
test
clc
leave
ljmp
sbb
in
test
jl
popf
out
jne
adc
test
sub
loopne
pusha
insl
mov
scas
sahf
mov
pop
mov
fcoml
idivl
sbb
ss
mov
xchg
call
std
lcall
xchg
fistl
jl
mov
sbb
xchg
jnp
add
pop
xor
cltd
test
andb
leave
scas
cwtl
cmpb
mov
imul
mov
outsl
pop
dec
sbb
xor
addr16
mov
mov
rolb
xchg
dec
or
jb
cmp
sub
mov
popa
mov
inc
dec
imul
ret
aas
xlat
fsubr
add
outsl
mov
test
fs
inc
ljmp
mov
sub
adc
sti
out
js
pusha
ljmp
dec
xor
push
les
sub
rol
mov
dec
mov
pushf
inc
add
ja
mov
movsl
xchg
xor
jle
in
adc
repnz
inc
xor
movsl
jmp
aaa
cmp
inc
test
mov
rorl
mov
xorb
cs
add
xor
repnz
push
lahf
sbb
imul
push
push
sbb
jbe
mov
scas
mov
in
xchg
lock
lcall
negl
lret
mov
repnz
shll
aad
cmp
and
arpl
jo
cld
cmp
add
cwtl
stos
inc
fistl
popl
mov
mov
out
or
xchg
icebp
rclb
pop
enter
in
dec
sub
adc
js
sub
xor
mov
cmpsl
xchg
cmp
mulb
pop
bswap
int
sbb
mov
arpl
ljmp
mov
lea
pop
rcrb
jecxz
xor
cltd
push
jle
stos
mov
add
mov
sbb
push
pop
inc
mov
push
scas
sbb
dec
mov
adc
cltd
lcall
insb
arpl
dec
icebp
mov
out
fs
dec
jle
repnz
jae
outsb
mov
cmp
sub
nop
or
sbb
fstpt
rcll
cmp
pop
add
dec
jae
jecxz
mov
cmp
inc
xor
imul
rorl
divb
das
idiv
mov
dec
daa
lods
xlat
jb
cmp
jp
std
sbb
or
or
and
mov
iret
or
sub
or
divl
movsl
les
inc
or
jae
dec
aam
jae
rcrl
jg
sbb
pop
jno
fldt
mov
push
push
adc
pop
inc
jb
jb
outsb
jle
scas
xor
pop
add
sub
div
xor
cmp
sahf
cltd
mov
adc
stos
sbb
jle
aad
jb
repnz
jmp
in
dec
cmp
sub
lock
icebp
cmp
in
leave
popa
mov
push
lret
push
mov
jo
push
cmp
sbb
icebp
jp
or
inc
mov
jno
fs
fcomps
imul
fwait
xchg
mov
cmp
push
les
mov
pop
call
mov
mov
xchg
test
sbb
sahf
scas
scas
iret
cmp
or
enter
xor
xchg
aad
nop
ljmp
dec
xchg
push
jb
lahf
test
sbb
jecxz
jge
ret
jns
jne
mov
jo
mov
scas
mov
cmp
jge
push
and
xchg
xchg
add
push
dec
iret
aam
loopne
icebp
lahf
push
aas
aam
push
gs
lcall
into
repz
call
cwtl
pop
mov
cmp
or
or
loope
pop
xchg
cmp
test
xor
stc
test
dec
into
rcrl
cmp
aad
xchg
hlt
mov
push
adc
mov
xchg
xor
lods
and
or
out
ffree
pop
add
lcall
fstps
aas
lea
sub
jbe
xchg
dec
sub
js
pop
inc
jo
jg
fcoml
lds
cmp
jne
or
insl
dec
lcall
cmp
lret
pop
or
xorl
jbe
mov
aaa
mov
and
push
inc
popf
adc
dec
imul
orb
in
aas
test
dec
jecxz
into
pop
pushf
dec
mov
inc
add
lcall
popa
mov
add
loope
xchg
push
in
mov
pop
mov
outsb
xlat
push
cmpsl
cmpsl
pop
test
pop
adc
jnp
ret
push
mov
rorb
sbb
pop
into
add
xchg
mov
cmpsl
cmp
lods
in
jge
mov
sar
and
lods
test
mov
ret
aad
arpl
sti
in
insl
sbb
nop
xchg
mov
push
cmp
in
xor
mov
xor
cmp
or
dec
pop
andl
add
loope
ds
pop
or
jmp
mov
sub
dec
inc
xchg
and
adc
pushl
arpl
xchg
sub
adcb
lods
push
sub
test
dec
mov
xchg
sub
pop
lret
xor
push
pushf
mov
cmc
jae
add
int3
and
outsl
test
pslld
ljmp
adc
jbe
and
push
dec
out
dec
lock
pop
in
xchg
mov
inc
mov
jmp
xchg
outsl
xor
pop
xchg
mov
data16
cwtl
stos
xchg
nop
insb
sti
sbb
inc
icebp
mov
jo
fisubrl
fsubr
int3
inc
sub
lahf
pop
pop
cli
jno
out
dec
lahf
push
mov
sbb
cmp
push
xchg
jg
sub
push
xlat
cmp
rcll
mov
cmpsb
imul
clc
sbb
sbb
jl
pop
mov
mov
xchg
xchg
jmp
xor
cmp
dec
dec
adc
dec
mov
rorb
jbe
pusha
ret
lods
xchg
icebp
sbb
leave
pushf
pop
adc
mov
leave
dec
or
lds
push
jno
sub
mov
test
insb
imul
pop
test
inc
add
push
jmp
mov
outsl
xorl
xchg
mov
cltd
int3
cmp
jne
mov
pop
sub
mov
adc
push
es
xchg
mov
dec
mov
cmp
lcall
or
pop
mov
ret
fldt
sbb
jl
and
or
mov
addr16
xor
bound
ret
aas
adc
push
jbe
fimull
insl
std
xchg
pop
lahf
inc
sahf
dec
push
mov
rcrb
sbb
ja
jp
pop
adc
movsb
js
movsl
push
or
jo
jl
lock
and
push
and
pop
cmc
lock
mov
pushl
jb
ret
stos
sub
mov
call
jb
rorl
cltd
inc
aas
mov
cli
in
jle
push
pusha
ret
adc
sahf
pop
lret
jnp
add
and
inc
lock
cltd
dec
ret
mov
or
adc
mov
ja
aas
insl
outsl
aaa
mov
out
int3
lret
mov
mov
sbb
movsb
test
mov
adc
in
cmp
mov
std
push
and
xchg
bound
imul
push
repz
pop
push
movsl
hlt
scas
hlt
dec
stos
imul
jo
sbb
aas
jno
adc
mov
aam
bound
jge
repnz
sub
scas
jl
jbe
inc
mov
and
add
mov
mov
push
inc
inc
sub
popl
and
mov
and
fsubl
test
icebp
flds
fcmovb
inc
push
mov
stos
cmp
sbb
push
loop
pop
sbb
ja
cli
cmp
std
mov
add
faddl
push
mov
xor
aam
sbb
add
pop
cli
push
jle
dec
pop
mov
inc
and
pusha
lds
pop
jo
test
adc
iret
sbbb
lret
xor
cltd
adc
repnz
jecxz
cwtl
jp
mov
xor
aaa
movb
and
or
into
sbbl
jecxz
sbb
movsb
inc
int
daa
jbe
jg
out
scas
pushf
sbb
ja
fsub
or
popl
xchg
aas
jno
mov
mov
jbe
sub
es
sub
mov
jg
rcll
hlt
add
mov
in
adc
int3
pop
test
xchg
in
dec
xor
inc
xor
jne
jg
call
push
shrb
or
lods
shrb
leave
cld
and
sti
cmp
lahf
sub
add
nop
sub
fs
inc
test
cltd
dec
ljmp
adc
inc
mov
cmp
popa
xor
rolb
jl
inc
or
aas
adc
enter
int
pop
fistpl
lahf
sarb
lahf
or
xor
pop
adc
outsl
fwait
aam
loope
dec
mov
lods
stc
adc
rcll
pop
mov
testl
data16
xor
inc
dec
ret
mov
sti
mov
fsts
dec
ss
andb
adc
pop
sub
addr16
cmp
sti
sub
mov
nop
sahf
ret
push
ljmp
xchg
jns
stos
xchg
sub
cwtl
jg
stos
scas
mov
sti
iret
test
dec
jmp
shlb
sbbl
test
call
xor
mov
mov
cwtl
adc
ficoms
mov
xchg
inc
jge
fstpt
push
sbbl
add
popf
aas
adc
mov
mov
mov
insb
add
xor
jb
lahf
loopne
lods
das
pop
cmp
xchg
jbe
and
rorl
out
add
or
push
mov
orl
inc
inc
mov
and
push
jae,pn
cli
test
inc
test
sahf
mov
iret
push
cwtl
icebp
decl
mov
jl
sbb
call
mov
mov
fdivs
movsb
rcll
or
mov
scas
mov
xor
sbb
push
pop
or
lods
or
loope
shlb
mov
sbb
loopne
cld
je
pop
out
pop
jge
ss
xchg
add
aas
out
or
jne
push
jl
sbb
add
push
mov
lret
inc
bound
in
into
aam
xor
push
scas
cmpsl
xor
stc
cmp
push
jle
mov
push
fbld
sbb
das
jnp
sbb
stos
call
push
shrb
test
and
movsl
sbb
mov
test
int
notb
ljmp
lret
rcl
adc
mov
pop
jne
lret
ds
lods
pusha
incl
sub
push
push
mov
sub
sarb
push
push
adc
insl
fsin
sbb
hlt
test
pop
in
les
dec
rorl
fcompl
and
leave
adc
scas
mov
inc
pusha
jmp
in
ljmp
jl
fs
dec
inc
xchg
cwtl
jb
stc
jle
sbb
fdivrs
test
dec
stc
ror
dec
shl
mov
pop
inc
lret
fimull
insl
bound
ret
in
jp
daa
enter
enter
out
fimuls
push
dec
sbb
sub
repnz
cmp
push
xchg
xlat
mov
add
rol
fwait
xchg
xor
sbb
je
nop
sarl
insb
rorl
xor
and
or
mov
add
aaa
add
xor
cmpsl
jb
loop
ljmp
jge
pop
jns
pop
aaa
or
fsubl
add
insl
imul
mov
rorl
fidivrs
xchg
stos
clc
repz
push
xchg
mov
jo
in
xor
fidivrs
stc
lods
mov
sbb
push
fnstsw
scas
test
cmp
and
scas
inc
push
je
and
bound
sub
cmp
push
push
shll
rcr
orb
push
pop
ficomps
adc
or
in
or
fwait
mov
out
mov
int3
out
adc
rorl
and
ret
and
mov
loop
lahf
jecxz
xor
ja
sub
jle
mov
pop
dec
subl
arpl
mov
ds
clc
outsb
xchg
das
in
jp
iret
das
mov
hlt
sub
fcmovb
fstpl
std
dec
and
fstpt
xor
cmp
and
jo
aad
jmp
mov
dec
fsubs
aaa
sbb
xchg
dec
loop
add
sbb
daa
add
add
ss
xor
int3
sahf
decl
loop
mov
loopne
and
iret
inc
and
xor
cmpsb
aaa
dec
cmpsl
cmp
push
xchg
sbb
inc
lds
push
sbb
add
xchg
loope
dec
das
mov
fcomps
je
sahf
push
lahf
pop
jl
imul
sbb
cwtl
xor
out
sbb
imul
orb
incl
jmp
std
cli
pop
out
cltd
jg
mov
lea
mov
xor
jl
ljmp
mov
inc
shl
stc
or
in
mov
xor
push
loope
dec
insl
and
es
imul
pop
sbb
enter
sbb
mull
mov
inc
test
or
sub
pusha
sbb
mov
insb
push
inc
adc
xor
pop
cmp
mov
pop
lock
jg
andb
add
mov
dec
xchg
jge
rcrl
inc
dec
cmp
pop
push
and
inc
add
mov
mov
mov
adc
loop
mov
and
dec
xchg
push
and
lret
les
push
sub
sbb
inc
jnp
adc
or
pop
or
xor
adc
mov
gs
mov
iret
addr16
xchg
mov
fnstcw
xor
fildl
call
dec
xchg
js
dec
adc
xlat
lcall
out
jnp
xor
gs
mov
cmp
and
mov
cld
jge
scas
mov
loop
rcrb
inc
xchg
sti
cli
add
or
mov
mov
or
sub
leave
xor
ss
sbb
jle
das
loope
add
ss
inc
stos
rorb
lret
xchg
adc
cmc
aad
stos
add
xchg
xor
repnz
repz
out
hlt
xchg
or
cmpsb
and
mov
call
jmp
or
int
clc
in
push
push
roll
mov
scas
icebp
mov
hlt
mov
imul
jl
mov
dec
outsl
lds
fwait
add
mov
xor
add
push
xchg
cmpl
or
mov
jl
aam
sbb
shrb
loop
cltd
add
data16
dec
in
cld
fidivl
andl
out
aas
fmuls
daa
mov
push
lret
ficompl
jns
push
inc
dec
orb
pop
adc
jns
sahf
sarl
fldlg2
push
add
cmp
fisttpl
out
inc
sarl
push
rol
adc
rclb
outsb
test
pushf
mov
mov
mov
and
sub
xlat
xchg
scas
mov
es
dec
cmp
loop
aam
xlat
adc
adc
shll
pop
sarb
mov
pop
push
jp
pop
int3
mov
adc
mov
test
jnp
negl
mov
pop
jno
jb
xchg
jae
jp
push
jno
adc
pop
xor
popf
xchg
aas
add
lcall
rep
fcompl
jp
jecxz
mov
test
lds
and
dec
fnstsw
or
mov
cmp
fisttpl
das
adc
in
adc
jle
mov
in
sub
sub
sub
or
cmp
cmc
inc
mov
ret
scas
loop
adc
fstl
f2xm1
pop
xchg
hlt
and
jns
cmp
push
aas
adc
mov
fsts
arpl
jo
in
cmp
inc
sbb
sahf
xor
cmpsb
sbb
jno
push
or
or
xchg
stos
jp
or
into
movsb
rcrb
mov
dec
inc
fistps
ret
daa
add
test
inc
ror
test
loop
jle
je
sub
je
cltd
and
imul
mov
cmp
pop
loope
and
mov
dec
clc
jl
jecxz
or
cmp
imul
bound
clc
mov
mov
imul
inc
mov
add
inc
daa
mov
cmc
sub
add
mov
leave
and
mov
add
aam
andb
lahf
test
outsl
fimuls
mov
and
pop
dec
aad
adc
popl
pop
movsl
mov
jb
mov
iret
push
insl
push
cmp
fucomi
popf
loope
mov
ret
iret
mov
sub
dec
push
mov
fistps
lock
dec
cmpsl
add
mov
test
cmp
lcall
sbb
pop
lods
xlat
cli
cmp
lahf
dec
xchg
cmpsl
mov
mov
fcmovbe
push
xchg
jmp
in
mov
xchg
dec
fildll
lret
lahf
inc
mov
inc
adc
xlat
pop
stc
and
lret
or
mov
push
or
mov
xor
xor
ret
and
sub
test
leave
in
aam
ret
adc
adc
in
jnp
add
repz
rcll
stc
jecxz
lods
adc
mov
fwait
int
adc
lods
mov
jl
test
sbb
cltd
ss
add
xchg
data16
pop
jbe
mov
pusha
push
or
lods
shrb
and
pop
mov
cmc
pop
lds
xor
cmp
hlt
js
mov
cs
adc
jns
hlt
adc
aas
adc
mov
pop
cmp
ds
or
aas
in
pusha
and
shrl
cli
push
inc
mov
jl
adc
add
std
das
mov
ret
mov
roll
stc
inc
std
push
shll
inc
mov
inc
insl
jnp
cmp
out
xchg
shll
repnz
xchg
std
mov
inc
call
sbb
push
inc
aam
or
ret
cmp
mov
add
push
inc
sbb
jne
frstor
jl
icebp
lret
and
cmpsb
push
sahf
dec
pop
mov
lahf
or
add
rclb
mov
push
dec
stc
les
mov
push
sahf
popa
or
outsl
call
add
xchg
xchg
testl
cmc
sbbl
sbb
sub
loopne
jbe
add
inc
jbe
stc
cli
jb
js
std
pop
leave
js
adc
out
mov
ja
adc
jge
mov
and
hlt
adc
pushl
shrb
out
inc
cwtl
mov
imul
iret
lods
xor
test
aad
cmpsb
xchg
fwait
sbb
sub
xchg
push
scas
sub
stc
inc
jg
leave
dec
scas
shrb
aam
jle,pt
mov
mov
inc
add
sbb
inc
xchg
loop
scas
nop
into
cmp
push
lahf
dec
ret
fsubp
mov
and
roll
xchg
xchg
cmp
dec
jg
mov
inc
dec
inc
and
sbb
jecxz
fnstcw
mov
cmp
inc
fdivrp
pop
inc
sahf
mov
daa
sbb
add
dec
movsb
jecxz
icebp
jp
cmp
dec
out
decl
push
in
repnz
mulb
jecxz
add
xchg
mov
push
mov
cmpsl
daa
push
je
add
fsincos
push
test
rorl
push
dec
fsub
es
jmp
ljmp
lret
in
jecxz
loopne
leave
mov
push
xor
aaa
rcrb
mov
xchg
pop
xchg
cmp
mov
popa
pop
xchg
in
cmp
pop
icebp
mov
sbb
scas
mov
or
and
or
pop
xor
xor
stos
lds
mov
add
repnz
sarl
popa
mov
push
adc
push
insb
subb
stc
inc
nop
sbb
xchg
pop
add
data16
iret
enter
insl
insb
pushf
pop
fildl
in
jle,pt
lret
popf
mov
xorb
insb
lea
or
in
ss
insb
aas
cld
insl
and
or
sahf
testb
and
xor
loopne
push
xchg
cmpsb
cmpsb
jl
inc
adc
in
add
mov
sbb
xchg
dec
mov
sub
orb
adc
pop
fwait
xor
inc
cmc
mov
push
cmc
jne
xchg
addb
pop
push
and
rep
nop
pop
fs
and
testb
and
dec
popa
lret
stos
pop
push
es
cld
add
pop
call
ret
inc
jge
fsubl
out
and
inc
mov
lcall
sbb
lret
and
mov
popf
cmpsb
dec
dec
fsubs
arpl
dec
je
roll
loopne
andb
push
cmp
pop
dec
jne
pop
sub
mov
dec
pop
jecxz
xchg
xchg
scas
mov
shrb
adc
divl
push
cltd
mov
or
mov
lea
mov
xor
jb
scas
add
fdivp
pop
xor
rorl
lods
adc
call
nop
call
cmp
popf
sarl
mov
addr16
mov
cmp
dec
push
imul
hlt
div
and
pop
adc
push
and
or
test
imul
stc
inc
and
or
cmp
mov
xchg
shr
xchg
mov
adc
pop
cmp
xchg
pop
push
pop
jbe
jp
jg
and
add
pop
or
jge
test
mov
sar
inc
mov
cmc
jbe
add
insb
and
xor
and
cmp
sahf
movb
add
popa
lods
int
mov
data16
aad
aaa
add
leave
jo
pusha
fdivs
jmp
aam
mov
popa
imul
mov
or
frstor
mov
fcoml
cmpsb
adc
mov
sbb
mov
dec
or
xchg
mov
mov
dec
mov
arpl
pop
jmp
push
iret
adc
pop
lahf
sub
call
idiv
lret
push
dec
cltd
jmp
popa
stos
mov
or
popa
push
and
mov
shrl
popf
and
nop
ja
cmpsb
jge
roll
into
xchg
imulb
mov
xchg
add
enter
mov
lcall
movsb
jl
xchg
lds
jae
bnd
jo
roll
xchg
push
xor
jae
pop
xchg
aam
popf
shll
ds
or
ss
mov
movsb
shll
pop
mov
pop
divl
add
test
xorl
inc
dec
stos
fsts
and
sub
lds
ss
cmp
mov
lock
add
cld
lret
fucom
sub
mov
mov
lret
idivb
push
xorb
subl
pop
fwait
mov
rcrl
pop
lock
mov
xchg
jmp
jne
pop
loope
andl
add
stos
jo
mov
lock
inc
push
add
push
adc
cmpsl
jp
mov
std
sbb
scas
push
iret
jo
sbb
and
lcall
and
lock
pop
test
adc
sar
insl
dec
aam
call
ss
test
pop
fwait
lods
add
sub
pop
test
in
mov
mov
cmp
cmp
shl
add
bound
les
aad
cmp
ficoms
or
lods
mov
jb
cmpsb
push
or
outsb
enter
xchg
movsl
xchg
movsl
clc
jecxz
and
imul
dec
dec
add
clc
jg
stos
lock
dec
inc
stc
and
dec
xor
mov
and
mov
cltd
inc
test
fdivrl
fldenv
stos
je
add
mov
faddl
mov
jmp
inc
and
sbb
jg
add
subb
clc
bswap
push
or
cs
lcall
sahf
inc
lods
mov
gs
dec
jbe
push
and
sbb
popa
cmp
push
dec
xchg
mov
lret
ret
sbb
cltd
dec
sub
fmul
dec
add
ds
inc
test
roll
je
and
lds
cmp
cmp
ja
cmp
add
call
mov
rcrb
lods
lds
cld
xchg
out
and
xor
inc
pop
lahf
lea
mov
cli
jo
insl
add
jne
into
jno
jae
rorl
mov
sti
add
insl
lcall
ljmp
adc
or
fs
mov
std
aas
and
inc
clc
inc
push
sub
aaa
in
stos
or
outsl
jle
push
enter
imul
int
mov
mov
cmp
int
lods
lret
mov
cmp
or
lret
popf
xor
add
movsb
adc
std
add
std
jnp
clc
aaa
mov
sbb
in
jae
mov
jle
pop
push
xchg
shll
cmp
cli
call
cmp
jnp
sub
xor
lret
pop
mov
xchg
lea
or
movsl
sbb
mov
xchg
cmp
push
pop
out
sbb
pop
mov
sub
add
fistpll
push
lahf
dec
and
add
sub
es
cwtl
or
mov
or
lods
add
mov
pop
xchg
jo
add
pop
sti
push
and
cltd
test
jl
movsl
mov
pop
xor
fnstenv
lds
add
std
dec
push
hlt
fistpll
inc
dec
push
sub
movsl
add
sbb
repnz
sbb
cs
xchg
mov
mov
gs
mov
xchg
dec
pop
clc
push
pop
addl
repnz
imul
fcoml
mov
jle
jno
rorl
lea
rorl
jbe
mov
cmp
imul
mov
pop
dec
loope
jmp
push
sub
adc
test
push
es
xchg
push
int
add
xlat
inc
inc
lcall
cmc
les
dec
mov
push
inc
je
int
scas
dec
test
sub
daa
int3
push
xchg
mov
adc
mov
das
stos
rorl
add
add
push
jb
lret
xchg
loope
dec
mov
xor
xchg
add
or
pop
add
hlt
pop
inc
xchg
test
sti
jmp
sub
add
adc
pop
rclb
loop
mov
nop
push
fisubrl
mov
add
or
das
jmp
repz
mov
sub
jnp
push
xorb
roll
stos
xchg
cmp
jg
pusha
sahf
loope
mov
cltd
out
jle
sbb
sub
movsl
aaa
popf
in
cmp
rolb
mov
mov
sti
mov
sbb
nop
add
adc
mov
insl
and
ficoms
pop
push
xchg
add
loopne
inc
dec
bound
pop
jne
xor
lret
lock
push
xchg
in
push
in
xchg
pop
cltd
divl
push
lods
mov
xchg
mov
fisubs
clc
adc
scas
in
cwtl
mov
movsb
add
clc
lods
mov
dec
push
add
jbe
out
mov
push
pop
sti
fldt
mov
pop
mov
ss
sub
adc
add
push
insl
shl
clc
or
fistl
dec
sub
inc
ds
mov
pushl
push
xchg
nop
pop
out
mov
push
bound
sbb
xchg
jge
jb
loopne
sbb
shll
movsb
lods
leave
imul
mov
pop
pushf
mov
jecxz
int
out
push
stos
pop
xor
and
leave
arpl
call
adc
pop
ljmp
jmp
sub
mov
ljmp
mov
inc
pop
mov
clc
sahf
jns
xchg
add
or
addr16
sbb
xlat
xlat
mov
inc
pop
hlt
dec
cmp
jbe
add
jge
push
imul
into
out
ja
iret
sahf
loopne
andl
push
push
iret
dec
push
jl
daa
je
jno
lds
mov
subb
add
and
cs
jp
movb
fiaddl
repz
aaa
sbb
push
xchg
shll
add
mov
xchg
lds
nop
outsl
mov
call
pushf
push
dec
jbe
inc
fmuls
cltd
daa
xchg
imul
out
jl
xchg
jb
leave
push
repnz
rsqrtps
ret
mov
and
mov
ret
andb
jge
scas
and
add
sub
or
pop
arpl
pushf
and
pop
jle
mov
xlat
or
dec
jae
in
movb
mov
dec
xchg
sbbl
cmp
test
js
add
bound
push
aad
pop
inc
xorb
and
pop
jne
cmpsl
jno
jmp
lret
mov
mov
jne
lcallw
mov
mov
pop
xor
cltd
xor
dec
mov
cmp
mov
int
scas
lock
insb
push
sub
stos
std
test
aas
push
insl
stos
mov
out
inc
clc
js
andl
test
hlt
sbb
clc
push
std
push
mov
sub
sar
rcll
loope
jmp
repnz
in
lods
hlt
and
jle
add
mov
arpl
shll
ret
jns
cmp
push
and
dec
sbb
add
sbb
aas
add
mov
popl
cmp
shld
fcmovne
adc
add
out
mov
and
mov
inc
shll
dec
stos
das
xchg
or
mov
in
popf
mov
and
sbb
mov
enter
sbb
sbb
xor
std
outsb
ficoms
shlb
rclb
lahf
mov
arpl
fwait
addr16
mov
nop
xchg
imul
sysret
xor
or
shll
mov
std
cmp
sahf
cmp
vcvtdq2pd
xchg
imul
ja
jns
fwait
push
ljmp
es
cmp
clc
push
xor
push
fnsave
in
jbe
leave
mov
nop
fs
fucomip
bound
or
and
sub
mov
dec
add
ss
rcrb
sub
xchg
xor
xlat
cmp
outsb
adc
pop
and
fstpt
lods
gs
aad
imul
mov
cmp
arpl
pop
lods
js
test
inc
cs
mov
aam
or
dec
pop
inc
mov
fsubrs
ret
adc
xchg
cs
push
fsubrl
lds
enter
leavew
fdivrp
test
mov
ret
fidivrs
push
sub
inc
and
push
jbe
cld
mov
push
adc
xor
and
and
mov
rcll
iret
shl
ret
cmp
dec
mov
out
adc
or
sti
xchg
xchg
add
insl
sub
add
push
fcomip
push
das
mov
sbb
cltd
aaa
push
inc
clc
add
add
lods
cmpsb
push
cwtl
repz
or
inc
dec
in
les
sbb
cmp
push
insl
cmp
mov
mov
dec
cmpsl
gs
je
and
mov
mov
push
jbe
mov
xchg
mov
xchg
mov
sti
fstl
pop
jnp
aaa
push
jnp
push
lds
pop
loope
xchg
xchg
mov
sahf
inc
jno
daa
jl
aam
cli
out
pop
cmp
push
repz
dec
test
dec
test
popf
notb
cmp
mov
xchg
mov
xor
add
out
xchg
pop
mov
icebp
cmp
jecxz
or
cmpsb
hlt
pop
sbb
dec
scas
es
push
sub
sub
nop
and
and
or
adc
repz
pop
jb
imul
jecxz
pop
and
outsl
pop
mov
scas
pop
push
xchg
stc
into
cmpsb
lret
xchg
xchg
xor
pop
ljmp
mov
mov
and
into
mov
dec
jne
shll
out
ja
movaps
sbb
stos
in
cld
cmp
cmpsb
xlat
push
nop
push
enter
jns
or
adc
sub
sbb
psrlw
or
lds
inc
xchg
inc
movsl
pop
mov
jmp
jbe
repz
jns
and
shr
bnd
mov
xchg
xor
fiaddl
xor
ss
nop
lds
dec
push
sti
mov
stos
sub
xchg
add
mov
movsl
lods
shrl
mov
mov
add
fistpl
mov
movsb
push
ja
jl
out
add
sub
and
mov
sub
xor
lods
cmp
pop
adc
je
repz
rorl
xchg
add
movsb
xchg
popa
dec
sub
jae
imul
inc
rol
dec
xchg
lcall
stos
inc
inc
mov
xchg
jne
cli
movsl
pop
adc
jns
pop
lahf
cmp
pop
xor
push
pop
push
fmuls
dec
xchg
xchg
movsl
push
xchg
cmpsl
lret
cmc
je
das
pop
jbe
cmc
xor
iret
and
insl
outsb
jge
outsl
xchg
cmpsl
nop
lock
pop
push
cli
arpl
pop
add
data16
icebp
push
test
lcall
xor
std
mov
pusha
lds
sub
inc
cltd
lahf
add
inc
popf
or
popa
push
mov
adc
test
sub
std
jne
and
std
popa
sub
out
stos
stos
lods
jg
adc
or
sbb
jmp
sbb
fldcw
xorb
adc
jge
inc
fcomps
call
sub
insl
mov
daa
imull
lcall
in
add
dec
sarl
jo
cmp
lods
dec
add
mov
sub
or
lahf
es
jge
mov
es
xchg
and
and
scas
adc
push
arpl
xorl
roll
fs
inc
push
ror
movsb
adc
pop
in
xchg
iret
xlat
jno
into
inc
add
fs
or
ret
and
shrl
xchg
mov
ret
rclb
mov
or
jp
sahf
inc
inc
cmp
or
in
nop
push
mov
mov
and
out
arpl
sbb
and
mov
ss
and
mov
cmp
call
adc
int
push
pop
testl
jmp
push
hlt
push
lret
data16
xor
mov
push
inc
andb
sub
mov
cmp
push
adc
adc
adc
insl
or
push
in
pop
push
jae
adc
xor
inc
shlb
loopne
test
pop
rep
cmp
cmpsl
lds
pushf
sbb
sbb
test
scas
mov
and
mov
pop
lret
lret
in
xchg
or
mov
or
decb
sub
out
pop
dec
or
arpl
enter
adc
push
mov
sbb
imul
stos
inc
nop
push
push
fcmovnu
fisubrl
daa
xchg
sbb
in
jno
xchg
mov
fcomps
addb
jo
and
dec
gs
je
mov
int
sbb
fcmovnu
cwtl
add
xchg
or
push
mov
std
and
pop
in
sbb
pusha
adc
mov
mov
clc
and
or
movsb
ret
lcall
lret
dec
out
cmp
push
push
mov
sbb
mov
add
dec
in
xchg
orl
or
les
mov
andb
fistpll
cmp
mov
xlat
fstpl
rolb
mov
xchg
push
outsl
scas
fyl2x
xchg
mov
pop
popf
adc
xchg
inc
rcll
mov
mov
mov
or
arpl
lcall
dec
movsb
mov
lds
inc
inc
jp
popf
fsubrs
push
clc
xor
shlb
xor
int3
fadds
stc
shl
ret
pop
xchg
orl
xchg
push
add
repz
dec
mov
lret
mov
test
stos
inc
pop
xchg
pop
iret
mov
and
bound
xchg
andb
mov
jle
jne
pop
gs
insb
ds
nop
or
test
in
lods
pop
cs
jbe
popa
fwait
aas
popa
dec
mov
mov
clc
fldcw
mov
and
xchg
sbb
push
mov
inc
or
and
ljmp
xor
les
and
mov
sbb
mov
xor
mov
pop
lahf
mov
jmp
sar
push
push
mov
inc
fs
sub
push
sub
add
jp
int
jb
dec
mov
ret
es
cwtl
mov
sbb
push
insb
int
dec
mov
mov
aas
push
cmp
pop
test
mov
pop
mov
lret
stc
jp
pusha
aas
pushf
aaa
mov
hlt
jnp
push
fnsave
mov
pop
enter
push
fs
sub
pusha
jecxz
inc
imul
cmp
lods
sbb
lds
outsb
or
andl
dec
fs
icebp
mov
mov
mov
inc
call
nop
stc
loop
mov
pop
mov
cmp
lock
int
pop
sti
add
pop
aaa
pusha
out
dec
cmc
mov
ljmp
ss
les
or
mov
jb
out
lea
hlt
mov
cs
data16
ljmp
and
shr
arpl
xchg
imulb
call
pop
fcoml
xor
add
dec
add
mov
pop
inc
ret
adc
jne
inc
mov
bound
jnp
test
push
pop
inc
push
cltd
or
into
lods
mov
adc
pop
pop
cwtl
mov
ja
mov
iret
or
mov
inc
sbb
mov
cs
push
sahf
and
cmp
hlt
dec
jo
aam
push
xor
dec
sbb
ja
movsl
idivb
sub
xchg
jg
jg
inc
test
mov
pop
clc
lahf
lret
xchg
popf
or
out
mov
test
shll
or
stos
aam
adc
data16
out
or
daa
aaa
data16
ss
or
lods
mov
inc
es
ds
shlb
mov
xor
cs
sbb
jb
pop
add
xor
mov
xchg
ret
cmpsb
cmp
lods
or
fimull
cmp
iret
xor
mov
inc
jns
pop
push
lret
or
mov
xorb
xchg
inc
jae
aad
sbb
add
divps
stc
jbe
xor
sub
xchg
fdivs
mov
push
fcompl
mov
aad
shll
cmp
mov
outsl
jp
dec
and
inc
mov
mov
fsub
rorb
in
imul
push
sub
cmp
inc
fst
add
and
mov
fs
test
push
pushf
in
mov
xor
clc
jo
pop
dec
aas
jbe
pop
das
aad
ljmp
jo
and
cmp
mov
dec
cli
shl
xor
int
sub
pop
push
cli
movsb
popf
jnp
sbb
jp
out
cmpb
push
xchg
or
add
sbb
adc
leave
cli
ja
cmpsl
test
out
dec
in
cltd
nop
sbb
sahf
pop
inc
cs
push
cmp
jb
xor
pop
int
fcmovne
xor
jl
ds
or
xchg
stc
jmp
mov
popf
test
jmp
int3
testl
mov
cmp
jge
es
xor
rcrb
xchg
scas
adc
push
mov
fs
roll
push
mov
mov
push
inc
mov
mov
push
xor
and
cmp
test
cmc
cmpl
jecxz
inc
and
clc
ror
insb
rclb
les
inc
sbb
loop
and
and
rcrl
lret
aam
mov
adc
fdivl
in
mov
dec
cmp
or
inc
and
add
int3
push
aad
in
shrl
andl
outsb
inc
out
in
lds
gs
fcmovne
pop
jns
jae
lcall
mov
xchg
jo
lret
cli
cmp
adc
sub
es
repz
imull
xor
mov
xor
cmp
out
insl
push
subb
daa
outsl
sbb
nop
in
outsb
mov
and
sub
jns
mov
and
jo
clc
add
sub
stc
idivb
inc
cli
sarl
push
dec
mov
mov
cmc
cmc
addr16
and
xor
cmp
adc
ret
ja
jmp
pop
cli
sahf
mov
sbb
mov
jecxz
lcall
or
aas
nop
dec
outsb
rolb
mov
dec
sub
daa
fdivs
push
sbbl
call
jne
cld
mov
jno
or
fnstsw
cs
cli
ret
jb
inc
sub
adc
jae
lods
loopne
inc
add
outsl
add
adc
cmpsb
xchg
lods
mov
test
addr16
adc
pop
clc
insb
lock
sbb
mov
push
ss
pop
mov
out
pop
pop
dec
cmc
fwait
sub
xchg
insb
mov
lcall
inc
popf
pop
add
push
sbb
xor
in
data16
cmp
fdivrs
outsl
push
mov
mov
sub
or
lcall
push
jb
fisubrs
push
repz
inc
push
shl
in
sbb
mov
jmp
and
mov
xchg
rorl
repnz
and
das
and
popl
dec
iret
iret
lret
rcrl
push
arpl
xor
inc
mov
xchg
out
cli
sub
test
xchg
fs
pop
add
add
daa
push
xor
mov
sahf
out
xor
dec
dec
jbe
negl
pop
cmp
sbbb
je
mov
push
pop
mov
loop
int3
push
xor
iret
jo
test
fidivl
jecxz
add
adc
scas
repz
push
dec
mov
test
cmpsl
add
add
test
and
mov
nop
push
enter
xor
adc
inc
shr
xchg
mov
mov
repnz
je
and
mov
sbb
stos
sbb
jl
mov
addr16
ljmp
dec
add
test
fcompl
iret
xchg
aas
dec
jnp
jle
repnz
pushf
js
adc
pop
add
shlb
or
in
adcb
mov
xor
mov
inc
hlt
icebp
mov
mov
cmpsl
lock
pushf
push
inc
dec
out
cs
notl
cmp
or
cmp
xor
xchg
pop
adc
xor
adc
or
mov
cmp
push
int3
lret
int3
les
lea
outsl
sub
sbb
mov
std
loopne
add
adc
dec
dec
out
mov
andl
cmpsb
ret
fsubr
pop
arpl
or
mov
sahf
xor
leave
pop
xchg
int3
int
fadd
aam
add
and
ljmp
sahf
mov
inc
mov
and
divl
pop
jge
das
mov
daa
aaa
dec
stos
inc
jmp
dec
bound
cmp
leave
sub
mov
lock
push
add
pop
push
xor
std
aaa
adc
or
outsb
int3
lods
mov
jle
das
daa
in
adc
cld
mov
dec
in
and
jecxz
mov
sbb
aas
mov
out
cmp
lea
cmp
xchg
xor
in
pop
ret
stos
in
pop
xchg
jo
out
lods
mov
or
sbb
add
in
out
mov
push
xchg
push
jp
inc
insl
mov
mov
andl
xchg
mov
lods
loopne
mov
stc
aad
aas
gs
mov
or
pushf
or
fcompl
pop
xchg
mov
mov
mov
jno
or
dec
pop
fisubs
shll
repz
test
iret
inc
cld
sbb
test
addb
cmp
cmpsl
add
shll
cwtl
sub
mov
dec
addr16
push
push
bound
test
xchg
pusha
sti
pop
mov
mov
in
mov
push
add
push
jnp
in
ffreep
push
dec
shl
aam
psubw
jmp
xchg
dec
jbe
iret
sbb
mov
pushf
inc
js
add
call
cmp
aam
dec
sub
faddl
loop
popa
popf
jmp
fisubrs
mov
jmp
fisttpl
std
pop
loop
pop
adc
cmpsl
popa
cli
sahf
mov
pop
sahf
push
sub
ret
data16
addr16
and
jge,pn
pop
pop
pushf
popa
mov
mov
testl
mov
and
out
arpl
add
cmp
popa
pushf
xchg
sbb
add
stos
pop
pop
mov
push
aad
xor
cld
mov
pop
subb
orl
int3
pop
test
dec
outsb
shll
sbb
cli
out
ds
or
adc
xor
icebp
repnz
test
mov
aad
outsl
push
lret
jb
lds
xchg
sbb
test
loope
rcrl
pop
jecxz
adc
adcl
imul
sbb
push
pushf
popf
icebp
push
mov
or
cmp
addb
jbe
push
pushf
mov
sub
repz
dec
in
sbb
and
mov
adc
and
jecxz
dec
push
mov
gs
pop
cmpsb
das
les
popf
push
inc
movsl
fistps
gs
or
sub
push
inc
push
sbb
pop
dec
adc
enter
or
push
jae
inc
dec
dec
jl
push
arpl
pop
inc
xor
aam
subl
out
mov
push
cmp
repnz
fmuls
rcr
scas
push
inc
fistpl
mov
addr16
xchg
clc
adc
lcall
repnz
lock
loop
cmp
jle
ret
dec
es
ljmp
pop
and
je
pop
mov
cltd
mov
insb
add
addr16
cmpl
lahf
das
xor
cwtl
sub
sti
in
xchg
lods
je
repz
add
int
pop
das
sbb
mov
push
pushf
scas
ss
sbb
gs
pusha
pop
fcoms
or
imulb
test
xchg
xlat
scas
cmc
jecxz
cmp
subb
inc
jnp
mov
jne
neg
lcall
imul
cli
or
sub
cwtl
jns
mov
add
or
pop
nop
cwtl
cmpsb
enter
sub
ja
add
daa
pop
shl
in
sti
pop
cli
pop
push
pop
pop
sbb
mov
and
xchg
outsb
notl
cmpsb
cltd
dec
mov
pop
fcomp
repz
out
popa
out
add
lods
cli
pop
lock
imul
dec
pop
gs
or
mov
cmpb
testl
fwait
jnp
mov
test
jecxz
xlat
in
jle
fwait
jns
jne
sub
outsl
dec
roll
test
lock
jae
inc
scas
and
sbb
inc
shl
xchg
inc
rol
rcrb
fidivl
cmp
xorl
push
clc
mov
ficompl
je
ret
shrl
test
pushf
xor
das
pop
test
xchg
cld
sub
cmp
scas
mov
repz
jno
xor
xor
xor
aad
xchg
adc
or
adc
cltd
lods
lea
aaa
out
push
xchg
pushf
adc
xchg
mov
sbb
and
add
sub
sbb
mov
imul
arpl
into
jne
add
in
movsl
addr16
idivl
ljmp
mov
addb
ljmp
pop
sti
test
dec
xchg
and
lret
and
mov
fistpll
cli
rolb
push
fsubrl
jae
sti
mov
leave
fcom
mulb
add
lcall
mov
pop
sub
mov
adc
dec
outsl
sti
mov
pop
xlat
cmp
pusha
sub
pop
cs
in
mov
jecxz
dec
push
mov
push
fisttps
xor
and
pop
scas
das
sbb
rclb
out
shrl
das
fs
mov
add
out
call
pop
push
sbb
adc
sub
sub
lea
out
rclb
add
inc
hlt
loop
hlt
jae
jb
neg
xor
fwait
xor
mov
sbb
push
dec
add
insl
cli
loop
stos
popf
inc
add
mov
and
insb
add
push
mov
adc
dec
sub
mov
sbb
out
xchg
int3
pop
dec
data16
push
mov
pop
scas
ret
add
and
inc
sar
hlt
jo
sbb
cmpsl
or
and
loopne
out
fstl
inc
out
pop
pop
mov
xchg
and
jp
xor
adc
push
sub
jo
jecxz
xchg
bnd
xor
jb
adc
xor
mov
call
clc
in
std
das
xor
ret
adc
pop
fs
inc
xor
mov
jge
mov
adc
mov
into
icebp
repz
jp
inc
push
mov
xor
or
adc
cmpb
add
test
xor
decl
mov
sub
push
xchg
jmp
mov
pop
xchg
subl
in
sub
push
xchg
test
iret
in
sahf
pushl
or
lods
out
cmp
lock
dec
or
daa
shll
ret
sub
aad
stc
pop
ss
adc
push
sub
stos
jle
adc
outsl
mov
leave
mov
pop
sub
loopne
ljmp
mov
icebp
jecxz
jae
outsb
dec
cmp
jl
pop
pop
repz
imul
repnz
mov
add
inc
push
jae
jp
outsb
and
add
xchg
adc
xchg
jo
test
jb
and
pushf
imul
add
jo
loope
jo
incb
jmp
jno
inc
lods
ret
pop
inc
js
addb
hlt
cli
dec
sarb
cli
lock
adc
push
pop
cltd
in
inc
add
test
data16
push
movsl
dec
dec
fisubrs
lret
pop
xchg
sbb
mov
mov
aaa
popf
mov
int
xor
push
push
xor
enter
dec
sbb
sbb
sub
movsb
jno
xor
mov
sub
pop
out
popa
pop
imul
mov
adc
into
test
xchg
adc
push
pop
daa
sbb
sbb
outsb
andl
push
jo
cmpsl
negb
mov
pop
adc
outsb
out
fs
pop
push
cld
push
and
movsb
mov
fsubrp
call
push
jae
inc
jl
dec
ret
jecxz
xchg
imul
or
cmp
jge
insb
pop
or
es
xchg
or
iret
leave
mov
data16
dec
mov
nop
push
imul
push
mov
xchg
xor
or
inc
sub
test
jns
xchg
add
movsl
push
fst
push
xor
pop
xchg
jmp
fisubrl
and
mov
ficoms
dec
jl
andb
daa
lock
or
adc
jb
into
daa
jno
mov
popf
aaa
bound
mov
push
xchg
mov
out
xor
lock
testb
outsb
dec
sub
jnp
add
add
outsl
lret
sbb
xchg
mov
movsb
iret
das
mov
imul
int3
add
jl
xlat
ja
daa
pop
lds
jp
subb
add
shlb
popf
lret
lds
cmc
shlb
in
mov
inc
jp
lods
cs
insl
insl
sbb
add
call
les
cmp
scas
movsb
mov
mov
dec
adcl
fwait
mov
stc
ret
jno
jbe
test
pop
jne
cmc
filds
sahf
cmpsb
dec
jno
sarl
jp
inc
int3
cli
fdivl
push
popf
repz
jge
stos
mov
add
pop
lods
mov
adc
rcl
js
sahf
int
les
jl
cmc
and
fsubrs
add
pusha
cmp
jb
mov
popa
or
sub
incb
rol
cmpsl
sbb
mov
sbb
or
cli
ljmp
mov
adc
and
pop
rorl
in
hlt
pop
or
push
adc
pop
outsb
pop
ret
xchg
shrb
xchg
repnz
clc
jns
mov
leave
ret
int3
sbb
sbb
xchg
adcl
jno
daa
dec
add
fs
xchg
add
push
cmpsb
loopne
fsubrs
iret
lret
xor
mov
popf
xchg
sub
mov
jg
addr16
pushf
mov
add
test
movsl
or
xchg
mov
jae
sbb
adc
jle
stc
aas
scas
nop
sub
fdivrs
frstor
in
pushf
leave
push
jbe
clc
xor
jb
pop
sbb
and
outsl
mov
inc
ja
sbb
aas
clc
add
outsl
cmpsl
loopne
icebp
cmc
adc
orl
push
sar
dec
cwtl
and
jb
test
insl
jle
dec
imul
xor
jno
jg
and
push
movsb
imul
in
jbe
das
pop
jge
and
dec
rorl
pusha
add
pusha
bound
leave
insl
pop
adc
xor
xchg
subl
mov
addr16
dec
int
fwait
cmpsb
dec
pop
repnz
in
jne
cmp
icebp
inc
mov
aad
rclb
movsl
je
stos
and
mov
xchg
add
mov
ja
sti
divb
daa
sar
xchg
fbld
jo
aas
jp
push
aaa
dec
adcl
icebp
lret
jnp
or
test
testb
xorb
add
pop
fiaddl
pushf
cli
xchg
ret
jb
mov
xchg
les
movsl
scas
lods
sti
mov
sub
jge
mov
repnz
pop
push
and
mov
push
xor
out
data16
call
adc
cmc
add
push
jl
add
push
scas
imul
icebp
rolb
adc
inc
xchg
or
lret
and
fs
in
stos
jns
and
sbb
push
inc
pop
adc
mov
sbb
stc
add
inc
mov
dec
and
xchg
inc
or
cltd
andl
nop
mov
in
pop
arpl
mov
sbbl
cmpsl
arpl
jne
jb
xchg
mov
add
mov
cmpsl
mov
pop
and
dec
or
lahf
mov
repz
fscale
pop
inc
mov
mov
cmpsb
push
in
cmp
inc
xchg
loopne
cmp
cmc
mov
rcll
test
jmp
aaa
mov
jb
pop
loope
sub
or
out
or
lods
adc
jp
repz
push
push
mov
jge
mov
shll
das
fs
inc
lret
gs
adc
mov
fisubs
inc
fs
mov
fwait
loopne
call
inc
fstpl
mov
pushf
jp
movsb
or
or
jno
mov
push
dec
mov
or
fcmovnbe
and
xor
stos
fcomi
pop
push
cmp
es
mov
out
push
imull
xor
sti
pop
sbb
loope
insb
je
pushf
insb
call
and
es
or
add
mov
xor
push
fld
hlt
sbbb
movsb
scas
popa
mov
mov
and
or
arpl
or
popa
and
and
std
pop
fs
jmp
icebp
das
scas
loope
lods
out
scas
lret
nop
fcoml
push
int
push
aad
mov
mov
inc
nop
adcl
dec
in
mov
mov
jno
or
movsb
or
arpl
push
sub
lret
fcomps
or
or
jne
push
pop
add
in
pushf
mov
dec
shl
out
sub
cltd
mov
fdivrl
pop
adc
lret
jmp
mov
push
ret
push
dec
sbb
push
js
scas
sbb
lret
out
jo
lahf
pop
fisttpl
mov
repnz
cmp
fcos
push
pop
in
push
bound
aaa
out
mov
dec
je
xchg
addr16
mov
xchg
bound
sarl
leave
fucomp
jns
out
imul
mov
fs
in
insl
pop
cs
mov
xchg
outsl
adcl
mov
outsl
add
mov
push
les
scas
mov
test
insb
insl
ljmp
aam
mov
jne
xor
xor
xorl
xor
adc
xchg
pop
push
mov
stc
xchg
ja
in
out
jb
scas
and
mov
test
pop
lahf
xchg
sbbl
pop
sbb
addr16
cmc
cmc
fildl
push
aad
adc
cmpsb
cmc
into
and
iret
sbbb
out
mov
jg
jge
jl
hlt
and
ja
mov
inc
mov
test
add
pop
test
ret
enter
mov
in
jb
call
push
addr16
outsl
out
xchg
sub
lds
pop
stos
push
and
jo
ja
xchg
xor
sub
xchg
ja
inc
movsb
cwtl
jmp
xchg
out
xor
adc
xchg
sub
jo
mov
pop
mov
xchg
cld
int3
xchg
popf
mov
sub
jnp
jmp
scas
mov
or
test
imul
sub
aam
push
jbe
jecxz
or
mov
push
andb
dec
and
lret
sub
cmpsb
cmp
xorl
pop
cmp
adc
cmp
std
lret
adc
or
shrl
rcrl
add
rolb
rorl
mov
or
rorb
cmc
push
int3
inc
xchg
inc
cwtl
push
mov
sbbl
push
iret
ljmp
and
test
dec
mov
dec
xchg
outsb
call
and
popf
repnz
gs
push
jae
sub
pop
cmp
push
stos
idivl
sbb
in
inc
jmp
pop
mov
push
cmpsl
leave
repz
movsl
mov
push
jg
sar
push
adcl
mov
jnp
insl
gs
or
ret
xor
popa
jl
stc
stos
mov
push
push
pusha
outsl
mov
xchg
mov
jge
pop
ja,pn
cs
mov
pop
mov
add
mov
mov
or
lret
enter
js
pop
out
mov
push
dec
addl
push
lods
mov
jnp
iret
adc
cmpsl
and
dec
add
pop
mov
pusha
dec
push
test
push
jae
xor
sbb
mov
shrl
mov
scas
adc
jae
inc
push
in
ret
push
push
andb
pop
lock
repz
xor
and
mov
sub
testb
pushf
xchg
or
mov
or
testb
stos
std
addb
lcall
xor
sahf
sub
mov
xor
data16
add
daa
lcall
sarb
jle
mov
inc
addr16
add
call
arpl
loopne
xchg
dec
ss
in
mov
sahf
and
jge
inc
dec
cmpsl
dec
aam
ficoms
enter
jne
xchg
movsb
nop
mov
mov
push
push
clc
xchg
stos
cli
adc
daa
dec
mov
or
gs
push
imulb
movsb
mov
insl
cmp
push
cwtl
and
xorl
stos
aas
fcompl
add
jb
subb
repnz
fistpll
mov
jmp
pusha
jne
stos
cmp
cmp
sub
jecxz
data16
fcmovnb
sub
sti
cli
insl
mov
dec
adc
cmpsl
and
push
mov
mov
les
cs
fs
mov
ss
adc
cs
xchg
subb
int3
and
pop
in
imul
je
outsl
xchg
pop
mov
adc
xchg
rcrb
shl
mov
cmp
in
call
mov
leave
xor
cmc
hlt
jbe
mov
jg
push
push
mov
shlb
inc
ret
fadds
adc
iret
cltd
fmull
mov
shl
mov
dec
dec
fildll
ret
dec
adc
loopne
push
into
mov
sarl
out
loope
or
test
pop
lret
mov
add
or
inc
cmp
cmp
push
and
es
rolb
jecxz
loopne
pusha
jl
dec
movsl
xor
xor
fistpl
add
or
movsb
fnstsw
bound
xchg
sbb
or
aaa
cmpsl
int3
ljmp
mov
mov
xchg
cmp
add
cmp
lds
cwtl
push
enter
xchg
call
push
mov
push
xor
jae
stos
int3
icebp
std
pop
and
movnti
outsb
pop
cmp
inc
sbb
shlb
lcall
xor
icebp
movsl
repz
fistps
pop
add
mov
cmpsl
pop
xchg
pushl
mov
add
stos
popf
sbb
mov
sbb
fs
das
sbb
add
cmp
sub
ds
fadd
outsb
push
je
dec
hlt
repnz
or
stos
xlat
shlb
dec
popa
mov
and
shld
pop
sahf
pop
and
loop
mov
jge
ficompl
jae
cwtl
cmp
orb
ja
scas
adc
lea
inc
leave
aaa
mov
hlt
call
mov
stc
movsl
mov
lret
and
mov
cmp
jp
add
lods
push
aad
loop
sbb
ret
aaa
aam
clc
add
and
add
sub
movsl
fnstenv
inc
mov
lahf
fstpl
sti
push
or
adc
mov
mov
ljmp
fstpt
loop
sbb
jecxz
mov
iret
repz
ret
ds
sar
cmpsb
loop
sub
push
scas
or
or
xlat
ficoml
cmc
xor
bound
mov
shr
clc
outsl
je
dec
daa
jge
test
pop
xchg
inc
jg
inc
xchg
cmp
push
outsb
in
mov
sarb
daa
dec
xor
inc
xchg
sbb
pop
imul
sbb
jecxz
xchg
mov
aam
rcll
push
imul
sub
jmp
xchg
add
push
inc
mov
sbb
les
cmovb
add
fs
stos
cmpsb
xor
sbb
movsl
popf
cmp
lret
adc
bound
and
xor
pusha
into
fmulp
inc
mov
mov
inc
lea
in
mov
cltd
fcoml
test
push
dec
js
fmulp
icebp
and
fsubrl
lahf
out
lods
test
std
and
fsubrl
sahf
jbe
inc
scas
cmp
rcr
cmc
xchg
xchg
mov
mov
ss
xor
into
je
add
xor
inc
fdivr
sbb
insl
in
sbb
loop
sbb
fnstcw
in
les
push
mov
mov
ret
cmpsl
lahf
push
loope
cmpsb
pushf
loopne
mov
jmp
cmpl
jb
fiadds
bound
nop
aas
sub
inc
cmp
dec
adc
cmc
std
jno
push
sub
sbb
cmpsl
push
mov
dec
dec
pushf
cld
pop
or
icebp
in
pop
mov
scas
adc
xor
in
imul
pop
mull
xchg
jae,pt
shr
jnp
pop
mov
out
ret
fs
sti
in
out
pop
in
inc
sbb
inc
adcb
xchg
cltd
xor
addr16
sahf
int
jmp
in
shl
dec
sbb
cmp
enter
xchg
sub
dec
jne
aaa
hlt
repz
ds
in
insl
ss
mov
sub
popf
jmp
outsl
int
popa
pop
jecxz,pt
adcb
stos
std
int3
mov
fidivrs
idivl
pop
jecxz
sahf
jmp
jbe
andb
sub
mov
pushf
jns
iret
or
push
rclb
mov
adc
pop
cmc
pop
insb
jle
les
mov
lock
dec
dec
jo
loop
data16
cmp
int3
pop
dec
push
sbb
sbb
insl
dec
pop
sbb
jmp
out
xchg
mov
movsb
xchg
ja
adc
pop
cmp
testl
std
in
lret
ja
xorb
add
push
pushl
mov
add
cmp
jl
push
daa
and
cmpl
add
add
ja
iret
nop
push
push
in
adc
dec
shll
cld
in
xchg
add
xchg
rclb
mov
loopne
pusha
cmp
mov
loopne
lods
cli
mov
xchg
push
mov
pop
jne
jae
cmp
scas
xor
xchg
inc
pop
mov
cmp
inc
pusha
popa
fildl
pop
xchg
cmpsl
dec
loopne
mov
push
sub
cmpsl
outsb
repz
aas
adc
push
stc
test
xchg
inc
fcompl
cld
mov
rcrb
adc
jmp
cmp
fdivp
ljmp
xor
xchg
push
jb
scas
sub
out
mov
jle
adcb
in
fisttpl
cmp
shrl
adc
jne
push
inc
xor
xlat
dec
jnp
and
es
jp
cli
adc
mov
xchg
dec
add
cltd
hlt
lods
es
cmp
shlb
shll
cmpsb
jmp
mov
jb
inc
push
stos
lds
insb
xchg
mov
jbe
cmp
dec
jbe
or
in
add
cmp
sub
mov
dec
sbb
and
jnp
subl
and
mov
pusha
push
leave
fwait
jae
cli
or
mov
dec
jmp
rol
movsl
add
addb
pop
daa
inc
ret
lahf
rorb
icebp
arpl
mov
jge
pop
mov
jbe
inc
pusha
pop
jno
jp
mov
test
and
ret
sbb
scas
aas
cmp
dec
xor
mov
cltd
mov
pushf
xchg
and
push
or
sub
insb
nop
jecxz
inc
daa
sti
rcr
leave
jns
xor
leave
bound
jbe
push
gs
outsb
add
push
cmp
lds
pop
sub
pop
pushf
xchg
kandw
mov
mov
mov
lods
inc
mov
adc
std
movsl
xchg
hlt
stos
xor
fmuls
jo
mov
lret
js
ret
sbb
mov
cmpsl
clc
dec
mov
xchg
and
ljmp
inc
mov
nop
pop
mov
mov
cmp
dec
jnp
sbb
testb
roll
sub
xor
lods
lea
adc
cmpsl
mov
xchg
and
in
test
sub
pop
repz
pop
pop
cmp
popf
adc
insl
loopne
add
gs
ja
inc
mov
jbe
jne
cmpsb
push
xor
test
push
xchg
stos
repnz
inc
fcmovb
pop
xor
add
js
loopne
mov
jo
popa
and
iret
push
xchg
adc
mov
mov
cld
call
popf
mov
mov
jp
push
dec
std
sbb
mov
xor
jne
push
fldl
fcompl
or
insl
daa
mov
dec
jnp
mov
mov
stos
das
inc
lea
pop
pusha
mov
push
sti
mov
popf
mov
mov
and
push
sub
push
xlat
movsl
popl
xor
and
ret
ret
stos
scas
xor
je
fwait
jecxz
dec
test
out
adc
cltd
add
into
negb
cmp
sub
pop
adc
sbb
or
ret
pop
jno
pop
sete
imul
pop
adc
sub
movb
sub
in
mov
sub
outsl
pop
bound
jo
out
insl
sbb
push
cwtl
jmp
test
pop
cld
inc
push
je
xor
or
adc
cwtl
adc
test
push
xor
sbb
xor
or
inc
addr16
dec
loop
iret
jb,pn
in
lea
mov
xchg
xor
sub
out
cltd
mov
xor
lock
mov
ja
rclb
repnz
cmpsl
shll
ss
mov
ja
lock
sub
xchg
add
jne
adc
into
xor
mov
xchg
aas
add
sub
insb
es
repnz
movsb
mov
bound
into
dec
shrb
mov
leave
rcrb
outsb
sub
lea
xor
ret
mov
xlat
stos
sbb
imul
ret
lods
sbb
sahf
imul
lods
inc
add
xor
icebp
adc
int
jno
dec
jb
fisttpl
dec
in
dec
pop
mov
inc
cld
cld
and
loop
push
notl
push
jo
das
lahf
mov
icebp
xor
and
sub
mov
icebp
push
mov
adc
pop
inc
pushf
daa
add
xor
aad
jb
push
rorb
icebp
push
dec
pop
mov
aaa
xchg
fisttpll
movsl
movsb
cld
mov
cwtl
roll
xlat
add
ds
sbb
sbb
jnp
lods
iret
stos
gs
scas
bound
es
sahf
and
loopne
pop
sti
dec
ljmp
ret
test
daa
les
dec
adc
call
lea
pop
movsb
pop
inc
jne
mov
push
aaa
jl
sub
push
mov
jno
lret
or
imul
mov
lds
inc
shl
sti
into
into
sub
ffree
leave
sbb
xorb
adc
jp
imul
lret
lods
mov
scas
mov
in
mov
mov
outsb
push
ds
add
cld
loop
cmpsl
xor
sbb
lods
popf
push
add
and
mov
ja
mov
pop
dec
jl
aam
icebp
mov
cmp
mov
xchg
push
out
jl
cmc
xor
dec
in
mov
push
cs
and
sti
add
bound
mov
out
cli
dec
out
inc
jmp
insl
sub
dec
jae
into
loope
scas
ret
adc
mov
push
inc
notl
add
das
add
cmp
xor
out
arpl
mov
ror
mov
sti
cmpsb
jne
pop
mov
push
mov
imul
add
ja
mov
dec
fimull
mov
add
push
addr16
mov
pop
std
xchg
fists
or
sti
mov
aas
stc
adc
pop
push
imul
mov
inc
hlt
adc
push
fstps
mov
loope
mov
int
xlat
push
ljmp
loope
and
xlat
movsl
pop
or
rorb
mov
push
inc
sub
bound
jp
add
les
pop
test
mov
xorb
xchg
aad
jnp
pop
adc
movsl
rorb
sbb
mov
xchg
push
shl
shl
adc
and
xchg
jbe
je
and
fdivr
and
dec
and
test
cld
push
pop
adc
adc
in
or
inc
xor
xchg
inc
mov
subb
iret
inc
jle
mov
pushf
insb
sub
or
notb
movl
ljmp
aas
xchg
xchg
subb
sub
mov
cmp
shr
pushl
aaa
popa
inc
scas
scas
inc
ret
jo
pop
inc
sub
lods
dec
pop
jae
mov
test
push
out
push
sbb
repz
push
mov
cltd
mov
inc
inc
enter
jne
stc
mov
aam
mov
notl
sarl
and
adc
dec
or
ret
mov
jle
clc
pop
lds
xor
or
ret
testl
pop
roll
inc
sbb
addr16
out
cmp
and
jno
gs
clc
test
push
mov
xchg
idivb
dec
cld
xlat
cmp
pop
outsl
shll
popa
mov
cwtl
jo
pop
hlt
cmp
cmp
imul
pop
ret
sarb
ljmp
arpl
subb
pop
fmuls
cld
pushf
andb
or
jns
cli
mov
lret
bound
mov
mov
mov
xchg
inc
movsl
ljmp
xchg
push
fs
stos
pop
in
mov
cmp
jecxz
in
and
into
repz
das
pop
stos
lcall
cltd
inc
pop
sti
add
in
sbb
rorl
mov
mov
sub
xor
push
push
stc
xchg
ffreep
dec
lds
mov
std
lret
call
dec
in
adc
xor
fidivrs
cmpsl
mov
jnp
shrl
in
cmp
mov
bound
jmp
lret
cmp
fs
repz
sub
fsubrp
test
and
das
cltd
push
ret
dec
add
lret
int3
out
or
xor
inc
sarl
aas
jge
xlat
dec
jo
inc
inc
push
mov
dec
inc
mov
js
cmp
jge
mov
jno
insl
jg,pt
sbb
lock
out
shrl
add
mov
divb
loope
dec
jb
or
add
das
aas
sbb
dec
jle
cmp
pop
and
pop
imul
pop
mov
pop
sbb
mov
push
xchg
add
xchg
add
push
sbb
in
daa
push
sub
and
jns
loop
neg
imul
mov
mov
pusha
add
jno
aas
add
mov
mov
cmp
mov
or
in
insb
jb
inc
mov
inc
cmp
aam
dec
adcl
sbb
std
fbstp
and
outsl
xchg
shrb
dec
jo
lea
or
lds
repnz
add
xor
add
mov
pop
in
inc
mov
cmc
dec
push
lret
icebp
inc
and
add
push
mov
push
stc
lock
addr16
int
sbb
in
mov
sti
lret
xchg
enter
loop
xor
outsl
mov
mov
ret
jnp
mov
lahf
cmp
jl
mov
shlb
mov
dec
out
inc
out
push
cli
xchg
mov
dec
pop
popf
inc
das
inc
jbe
lahf
subl
mov
jne
popa
adc
cmp
cmp
push
fnstcw
xor
xchg
xlat
sbb
mov
adc
mov
adc
ss
test
jb
pop
je
xchg
ficoml
push
mov
mov
add
mov
mov
jae
push
xor
imul
push
test
pop
ret
sub
or
lret
insl
inc
es
notb
mov
ljmp
aas
mov
in
cld
icebp
rol
mov
pop
mov
test
mov
in
notl
pop
dec
leave
dec
aaa
dec
jno
ret
mov
mov
mov
push
les
mov
ficomps
jecxz
lahf
push
orl
xor
mov
pop
test
pop
mov
sub
dec
mov
mov
in
pop
inc
pop
xchg
in
cmpsl
xchg
pop
mov
pusha
shll
stc
cmp
or
xor
insb
mov
aaa
ja
lcall
pop
shlb
push
add
jp
insb
and
fwait
cmp
sbb
out
xchg
lret
xchg
test
jge
les
push
imul
add
sbb
sbb
lret
pop
insl
cmp
and
sbb
orl
xor
mov
es
mov
push
dec
or
inc
xchg
mov
cmp
sbbl
push
pop
pop
ret
and
or
fmuls
aam
add
xor
maskmovq
test
mov
loop
call
xchg
mov
push
repnz
mov
dec
popf
mov
pop
adc
stc
scas
xorl
paddusb
ds
jo
push
aam
lret
push
adc
cmp
sbb
jg
test
loopne
test
and
fldt
xor
jl
pop
push
nop
jo
and
dec
jns
in
dec
inc
pop
lret
xor
sbb
mov
cmp
mov
dec
fldenv
repnz
pop
and
ret
and
lds
sahf
inc
cmp
add
ds
lods
ds
sbb
rcrb
jno
nop
push
inc
and
push
mov
mov
add
sbb
scas
inc
je,pn
aas
int3
jle
xorb
mov
ds
or
daa
test
mov
ja
sbb
push
mov
or
leave
add
mov
fldl
cwtl
jno
jmp
mov
add
fwait
pop
inc
xchg
test
mov
rclb
insb
aad
jle
add
ret
mov
out
ficoml
xchg
incb
repnz
xor
mov
push
popa
xor
xor
fsubs
xchg
mov
and
cmpsl
adc
into
cs
sub
inc
jb
sub
outsl
sbb
flds
adc
das
dec
push
flds
out
in
jle
cwtl
test
add
mov
and
stos
outsl
jae
dec
fisttpll
push
mov
scas
adc
adcl
xlat
push
rorl
push
ss
dec
cmc
dec
arpl
test
inc
js
push
les
vcvttps2dq
dec
shll
into
insb
xor
pop
int3
sar
add
dec
testb
insb
xor
test
adc
inc
test
push
call
repz
imul
dec
clc
addr16
outsb
test
and
and
dec
es
jp
inc
pop
shrl
repnz
mov
lcall
mov
scas
and
or
jb
dec
sub
insl
ret
cmp
adc
push
xor
out
test
mov
pop
js
insb
xchg
add
sbb
sti
fiadds
cmpl
lea
mov
adc
push
xor
mov
int3
iret
mov
out
hlt
adc
jle
popa
lret
mov
sar
call
out
sahf
mov
addl
mov
imul
cld
ja
adc
mov
jbe
loop
fdivs
mov
aas
repnz
fstpl
loop
mov
sub
fwait
xlat
fstpl
pop
leave
jbe
in
pop
jle
popa
mov
scas
push
push
out
add
adc
lds
fisubs
adc
xchg
dec
and
out
mov
fisttpl
or
jb
movsb
cmp
arpl
sub
add
subb
arpl
push
cmp
mov
mov
int
mov
push
insl
imul
dec
jne
aad
out
pusha
cli
repnz
insl
pushf
arpl
lahf
mov
xchg
iret
adc
adc
mov
inc
jb
and
test
das
jl
xchg
test
sahf
adc
jle
sbb
push
pusha
ja
pop
lret
daa
sub
nop
sub
popl
mov
push
and
addw
ret
cld
fiadds
testb
je
add
adc
xor
xorl
rolb
mov
and
push
nop
ljmp
dec
repz
or
dec
inc
adc
cld
add
icebp
stos
lret
jge
jae
xor
icebp
sbb
pop
cmp
mov
out
fucom
mov
mov
xor
adc
push
shlb
cmpsb
push
fwait
or
fistpl
or
fnstenv
inc
addl
cmc
in
xor
mov
cmp
into
negl
mov
mov
test
in
jb
mov
jecxz
dec
pushf
xchg
and
test
inc
xchg
pushl
sti
fwait
popa
or
sahf
loopne
out
clc
cli
call
and
pop
push
sbb
and
rcr
jbe
pop
fdivrs
lods
pusha
adc
ret
lock
dec
cmpsl
ja
jo
pop
or
pusha
pop
push
test
in
dec
pop
add
sbb
cmp
mov
lret
mov
mov
in
movsb
fwait
dec
sarl
push
add
popa
or
repnz
fcmovne
xchg
and
jb
adc
or
repnz
test
cwtl
sbb
mov
mov
jl
lahf
test
jnp
mov
mov
outsl
mov
mov
inc
jno
lcall
mov
mov
and
rclb
mov
pop
sbb
push
aaa
mov
test
jecxz
sbb
stos
pop
out
insb
mov
cmp
inc
or
xlat
xchg
dec
xchg
sub
push
lea
movsb
stos
popf
mov
cmp
push
jle
sbb
das
adc
mov
cs
bound
test
add
push
jnp
lahf
lea
jp
das
insl
mov
stos
cltd
out
ret
scas
lret
adc
inc
mov
ret
xor
adc
hlt
icebp
movsb
add
and
out
cmpsb
pop
xor
jecxz
push
jmp
xchg
mov
sbb
bsf
ds
jge
dec
fwait
dec
fiadds
xor
icebp
mov
dec
int
out
cmovge
lcall
xchg
ljmp
sub
sbb
jecxz
mov
aam
sub
fs
outsb
xchg
xchg
aad
aam
inc
stc
pusha
pop
mov
sbb
dec
xchg
adc
ret
or
outsb
sbb
xor
xor
fiadds
inc
js
aaa
stos
jo
shl
loopne
dec
cmpsl
pop
xchg
adc
mov
das
cmpl
cmp
test
std
iret
adc
icebp
icebp
sar
out
int3
inc
in
stos
in
push
das
pop
adc
push
jbe
sbb
mov
push
dec
mov
xchg
int3
repnz
xlat
xorl
dec
mov
adc
mov
sub
sbb
adc
hlt
ja
xor
loop
inc
aad
popa
jae
std
movsb
push
fbstp
clc
pop
sbb
mov
stos
mov
or
fs
pop
imul
stos
test
fs
aam
xchg
add
loop
pop
je
or
shlb
inc
ja
jno
mov
mov
mov
push
push
icebp
pusha
mov
mov
add
xor
sub
cltd
je
dec
cmpsb
fbld
mov
in
in
pop
adc
sar
and
add
pop
movsb
pop
jae
pop
jno
movsb
mov
in
xor
dec
jecxz
mov
pop
inc
xchg
adc
mov
xacquire
dec
out
stos
xchg
inc
adc
cwtl
dec
loop
mov
xor
je
adc
fistps
out
pop
rol
lret
mov
shlb
adc
mov
add
inc
push
sub
lds
mov
in
cmpsb
sti
mov
push
mov
lods
ss
sbb
iret
arpl
sub
inc
pop
mov
lock
inc
or
and
outsb
into
movsl
or
hlt
adc
jae
sti
or
or
insl
test
mov
pmullw
jmp
mov
test
orl
jmp
cltd
lock
push
out
mov
dec
ss
js
lds
arpl
stos
pop
add
jmp
cwtl
dec
sbb
pop
inc
push
aad
jl
call
ficoml
cmp
cli
sbb
xchg
ret
sub
or
cmp
jle
mov
fnsave
mov
loope
or
mov
stos
inc
fsubrs
loop
hlt
mov
inc
or
fsubl
aad
xchg
add
in
ret
jbe
cmp
push
inc
mov
inc
iret
fdivrs
imul
std
bnd
sub
push
sub
cmpsb
in
cwtl
add
pinsrw
pop
out
jbe
ror
adc
sub
mov
fnsave
jge
jno
cmp
xor
or
xorl
xchg
mov
mov
in
cwtl
cmp
mov
dec
pop
in
testl
mov
xor
inc
push
mov
popa
jg
sahf
data16
adc
xchg
stos
cmc
inc
sub
sub
mov
push
int3
stos
dec
add
call
cmp
repnz
pop
js
shr
dec
call
xlat
test
mov
mov
mov
adc
adc
sbb
sarb
nop
popa
mov
jge
sbb
push
jl
mov
mov
test
cld
mov
lret
inc
fneni(8087
fnstsw
shll
or
sub
fcoms
xor
add
popa
out
lea
imul
enter
je
lret
cmp
mov
xchg
push
pushl
leave
out
xchg
dec
out
cmpsb
or
cmpsl
mov
bound
mov
pop
mov
dec
bound
je
in
cwtl
inc
xor
cmp
sbb
sub
stc
adc
popf
orb
xchg
aad
ret
sub
cli
and
jae
js
imul
gs
outsb
jo
fsub
sbb
add
shlb
gs
js
sbb
gs
hlt
dec
mov
scas
int
mov
lods
pop
xor
cltd
inc
push
cli
imul
push
test
push
pop
mov
mov
fnstcw
loopne
iret
fwait
xchg
pop
and
out
pop
lds
push
mov
add
in
fwait
mov
xor
arpl
adc
push
data16
or
scas
sbb
je
cmp
pop
mov
shl
mov
fcoms
jo
sub
lock
mov
mov
in
addr16
push
pop
adcl
add
xor
mov
in
int3
negb
inc
sub
sub
xchg
fdivr
outsl
ret
imul
rcrl
stos
subl
nop
test
inc
mov
cs
testb
out
stos
out
add
stc
adc
stos
or
cmc
test
inc
adc
bnd
out
dec
push
dec
pushf
mov
dec
mov
pop
pop
bound
sbb
push
pushf
add
call
sbb
adc
rolb
add
lods
xchg
cmpsb
movsl
pushf
mov
out
stos
mov
adc
cld
test
loopne
and
jne
rcl
add
and
jbe
je
push
fildll
adc
repz
sbb
ljmp
aad
jae
sbb
std
bound
leave
sbb
adc
jb
push
mov
incl
aad
inc
mov
adc
faddp
mov
xor
rclb
aam
jmp
xor
nop
int3
mov
sub
js
out
fmuls
out
mov
mov
fiaddl
stc
mov
ja
in
xchg
arpl
jnp
pushf
dec
dec
cmp
push
jae
and
xlat
aad
jnp
aad
dec
daa
xchg
jbe
push
jnp
dec
movsl
cmc
pop
in
imulb
test
xor
icebp
or
add
sbb
and
jae
std
lds
jnp
jecxz
push
push
pop
or
test
sub
sub
scas
add
orl
xlat
fsubrl
movsl
add
push
xor
add
lahf
es
mov
sbb
push
or
fwait
inc
pop
cmp
out
scas
push
jno
sub
xor
jmp
push
ret
dec
inc
int
or
jb
inc
imul
pop
or
mov
cmp
mov
pop
cmp
fildl
mov
and
out
test
mov
popf
sub
jge
popf
and
inc
push
mov
in
mov
cmpsl
shrb
and
xor
addr16
cmp
mov
insl
and
cmp
jne
in
xor
shlb
pop
test
adc
sub
dec
cmc
in
insb
xor
inc
loope
xor
push
mov
and
add
cmp
push
and
mov
test
in
clc
cwtl
imul
inc
stc
and
jo
push
movl
sub
jl
push
into
test
aas
out
test
shr
shlb
fstpt
sbb
sbb
test
test
fiadds
mov
hlt
pop
cltd
cli
lds
mov
rcrl
dec
sbb
pop
roll
dec
cmp
rcrl
gs
push
sbb
dec
pusha
push
outsb
insl
and
rol
divl
mov
inc
jo
rcrl
test
fldcw
stc
sbb
push
jmp
sub
fs
sub
clc
leave
inc
mov
dec
clc
lods
addr16
xchg
adc
xor
add
sti
lret
mov
popf
dec
ret
cld
loope
scas
pop
pop
dec
test
xchg
arpl
add
int3
outsb
xchg
add
je,pt
sti
test
and
pusha
push
fistps
cwtl
xor
movsb
lret
mov
adc
sbb
psllq
cmpsl
out
into
sub
jecxz
movzwl
adc
and
pop
outsb
cmp
push
and
addr16
fmuls
xor
adc
das
orb
popf
xchg
in
int
add
mov
in
push
and
and
lods
stos
mov
bound
pop
add
jmp
jno
push
push
xor
in
ljmp
insb
mov
mov
adc
pop
xorb
jmp
xchg
jmp
lcall
dec
jmp
call
push
xchg
mov
nop
es
sub
inc
jmp
push
inc
xor
sbb
mov
xchg
shrl
mov
in
pusha
outsl
movsb
int
adc
push
roll
xchg
or
mov
pop
popa
cmc
lea
xor
mov
xor
pop
loope
adc
pop
gs
sbb
mov
fcompl
sbb
mov
popf
jnp
sar
pop
stos
xor
mov
adc
and
or
imulb
int3
xor
push
mov
insl
pop
mov
or
pop
mov
fsubrl
pop
out
mov
ja
xorl
std
inc
scas
sbb
and
cltd
stc
jecxz
mov
sbb
and
push
sti
sahf
xor
stos
xchg
mov
ror
pop
ja
cli
and
pop
adc
ret
and
or
test
nop
rorl
mov
adc
push
jbe
dec
fs
out
sbb
or
je
and
xor
dec
pop
sub
push
sbb
xchg
aad
fstp
pop
jb
push
pushf
jno
lret
dec
sbb
or
pop
sub
inc
jmp
ja
loope
aas
xor
push
push
and
es
xchg
rcll
push
and
cmp
mov
jnp
lea
inc
sub
in
jae
or
int
int3
mov
add
xchg
popa
jne
push
lret
jno
jb
jo
add
adc
pop
or
enter
add
sbb
adc
test
push
push
adc
inc
xchg
mov
pop
ret
or
loop
mov
rcr
sbb
shrl
inc
push
lret
stos
cli
div
mov
movsb
mov
adc
cmp
hlt
cmc
rolb
rorl
jge
mov
test
cmp
scas
loope
in
scas
xchg
negl
test
cld
cltd
in
xlat
jno
in
popa
mov
sub
daa
xchg
data16
popf
iret
movups
rorl
push
scas
push
sub
daa
or
hlt
xchg
fdivrp
mov
add
sbb
ja
xor
addr16
fcompl
inc
cmp
inc
test
cmpsl
push
outsl
into
stos
pop
idivl
push
mov
jmp
mov
ja
xchg
xchg
addr16
xchg
pop
je
jg
fstps
popa
push
testb
rcl
adcl
sbb
andb
fs
cmp
cmpsl
mov
push
jne
lods
cmc
jae
adc
mov
mov
pop
or
cs
mov
xchg
leave
add
xchg
or
inc
pop
jno
fildll
sbb
ss
test
or
ret
push
fdivrs
jl
popa
cmp
mov
xlat
add
test
stos
test
subb
jb
push
rcl
jle
push
xchg
mov
inc
cwtl
fdivrs
call
add
push
mov
popa
orl
imul
push
out
jo
decb
fdivrl
xor
jge
iret
loop
ds
fdivl
repz
call
bnd
and
jp
mov
shlb
dec
add
cmp
punpcklbw
xchg
inc
jb
inc
std
je
ret
dec
sbb
je
xor
mov
add
inc
pushf
jp
add
pop
shrl
mov
sbb
push
mov
dec
xchg
js
mov
pop
cmp
sbb
loop
push
sbb
imul
lods
adc
add
dec
sbb
out
lods
scas
test
movsb
pushf
jl
push
popa
inc
dec
outsb
cs
outsb
mov
ljmp
add
stos
rolb
xor
pop
test
movsb
jecxz
js
and
sbb
call
lea
int3
push
sbbb
inc
lret
xor
addr16
cmpsl
not
in
lahf
fwait
movsl
cmc
test
bound
mov
daa
mov
loopne
jno
mov
push
mov
jae
ret
in
adc
shl
in
inc
pop
jecxz
mov
loop
xchg
xchg
dec
in
test
push
imul
nop
jae
xchg
pusha
add
sub
adc
mov
les
movsl
test
popa
sbb
adcb
cmpsl
mov
mov
shll
jecxz
cmp
inc
pop
jnp
ljmp
out
xchg
ffreep
loop
or
rolb
and
std
jp
xchg
ret
lcall
push
sti
imul
or
in
push
call
movsb
in
dec
loope
nop
inc
xchg
push
mov
hlt
stc
ljmp
or
jl
push
xorl
push
stc
push
jle
aad
inc
mov
mov
frndint
stos
dec
cmp
frstor
push
jecxz
jns
pop
dec
in
fnstsw
movlps
pop
icebp
cltd
out
sub
and
test
aas
xchg
mov
insl
popa
inc
pushf
sbb
add
nop
in
or
jg
vfrczss
mov
mov
icebp
lret
arpl
jle
aam
mov
jecxz
cli
jnp
xchg
ljmp
sarl
std
subb
pop
xchg
sub
in
jae
push
xor
mov
es
inc
negb
sarb
mov
sbbb
in
adc
and
std
pop
test
int
gs
loope
repz
and
and
or
jae
jbe
xor
sti
rcl
jge
addr16
jg
out
mov
dec
sahf
fwait
ret
xlat
gs
push
cmc
inc
lods
cmpsl
mov
jae
mov
mov
jnp
or
lret
cmp
inc
test
mov
pusha
cli
lods
in
jne
or
std
adc
mov
aas
test
clc
xchg
ljmp
int3
lcall
idivl
iret
add
imull
imulb
cmc
cmp
idivl
xor
enter
fcmovne
mov
popa
insb
cmp
inc
mov
push
pop
ret
cmp
push
fst
and
and
int3
pop
dec
jno
in
bound
insl
xchg
add
ss
jb
test
xor
mov
inc
adc
xchg
mov
fstl
push
xchg
stc
sbb
inc
mov
sti
mov
sbb
jmp
push
imul
pop
out
ds
jmp
lods
sbb
out
fcmovnu
arpl
movsl
or
jle
enter
pop
fsubrp
aas
pop
or
or
ret
push
mov
aaa
mov
mov
fs
sub
fisttps
into
loop
ficoms
aam
jge
clc
and
adc
fnstsw
mov
or
loope
test
mov
cltd
fcoml
idiv
sub
lock
out
repz
or
cmp
pop
mov
cmp
js
in
push
icebp
xchg
pop
test
add
jge
sarl
mov
arpl
out
add
out
lods
sub
ja
sub
lock
loop
fwait
or
movsl
fimuls
mov
into
ss
pop
pop
dec
xchg
xor
stos
shrl
push
mov
jmp
repz
ja
mov
mov
pop
mov
loop
cs
in
mov
test
mov
aaa
pop
das
or
call
jno
aaa
in
idivl
out
mov
out
add
xor
sbb
dec
push
inc
loope
mov
xchg
loope
in
jnp
ficoml
pop
cmpsb
sub
push
lock
cmp
adc
ficomps
mov
in
add
xor
popa
lock
bound
cmp
mov
sarl
sti
add
mov
imulb
pop
sbb
fldt
add
jge
push
test
xor
push
jl
rorl
scas
lds
and
cmp
cmp
les
out
add
xchg
fmuls
and
xlat
mov
bound
popa
mov
vpackuswb
and
sub
loope
push
jecxz
aas
sbb
pop
inc
push
and
cmc
shll
cmp
dec
push
and
fiaddl
stc
push
rcr
enter
xchg
cld
mov
lea
pop
mov
cmp
add
popa
cmp
test
mov
cld
test
and
bound
faddl
or
mov
mov
aaa
call
add
icebp
aad
jo
sub
xchg
jnp
jns
jecxz
mov
aam
mov
pop
sarb
push
lea
inc
or
xchg
pop
enter
fldcw
jge
mov
mov
sbb
mov
mov
loopne
sub
and
push
repz
push
jg
test
iret
push
xor
cltd
pop
in
stc
call
mov
aam
jo
sbb
out
aas
adcb
cmp
pop
addr16
jmp
push
in
jecxz
sub
or
pop
movsl
aad
cmp
mov
pop
in
inc
cmp
shlb
out
xchg
mov
mov
add
sub
xor
ja
push
rorb
add
mov
fst
sub
fs
dec
dec
jb
loope
push
mov
pop
addr16
fwait
xor
lcall
iret
outsb
pop
out
leave
mov
mov
xor
adc
popa
jo
into
xchg
mov
mov
sub
jmp
and
xchg
add
push
in
bnd
divb
repnz
in
cld
pop
jecxz
pop
add
cld
scas
fsubrs
jnp
mov
adcb
ror
loope
test
sub
jno
mov
xor
mov
icebp
je
lods
dec
gs
shlb
push
pop
fyl2xp1
mov
loop
insb
andb
xor
bound
push
xchg
jne
gs
add
jnp
mov
adc
mov
sahf
xchg
inc
pop
dec
roll
push
mov
dec
jb
mov
sahf
xor
fsubrs
iret
rcrl
xchg
lret
mov
jns
shll
xchg
test
mov
xchg
add
iret
in
fs
cmpb
loope
xor
mov
orl
fwait
aaa
push
pop
lods
fwait
xchg
add
cmp
mov
cmp
or
fiaddl
and
arpl
sbb
enter
cmp
push
jbe
pop
ds
int
lods
xchg
add
sbbb
cmp
jecxz
add
dec
les
inc
and
or
push
test
aad
mov
fs
imul
push
mov
mov
call
movsl
cltd
inc
adc
and
pop
adc
xchg
ljmp
std
pop
push
fisttps
shll
add
out
jne
inc
mov
adc
subb
xor
dec
je
les
lahf
cmc
push
or
stc
scas
xor
xchg
jb
add
and
jmp
ljmp
test
or
and
jae
aaa
das
stos
and
mov
mov
aad
leave
mov
sub
in
inc
mov
cld
inc
and
push
and
or
int3
and
stc
pop
sbb
fsts
ds
cmp
sbb
sub
in
sbb
or
into
inc
nop
je
add
or
mov
sub
xor
mov
jg
nop
rorl
and
lods
ret
xor
sbb
clc
sti
js
mov
sti
mov
popf
add
leave
ret
cmp
aas
add
addb
jg
sbb
addb
pcmpeqw
and
mov
dec
aaa
cmp
dec
rcrl
loopne
repnz
outsl
fidivrs
lea
push
roll
std
es
push
mov
js
push
or
or
stos
mov
pushw
enter
add
repnz
stc
lods
mov
fistps
push
push
mov
fmul
sub
imul
clc
pusha
shll
inc
pop
pop
xchg
popf
or
push
push
mov
and
shrb
xorl
insb
ja
jg
cmp
nop
cmp
add
mov
aam
out
ret
inc
rcll
out
das
lcall
addr16
sti
jbe
les
lods
into
cmp
jmp
les
pop
xchg
mov
mov
clc
push
scas
cmp
lret
pop
aam
lret
and
mov
jl
inc
jmp
sbb
inc
loope
mov
push
jns
xor
pop
imul
push
stos
inc
sbb
inc
cmp
cmp
pop
hlt
sbb
int3
iret
icebp
or
push
sub
dec
dec
out
sub
sub
xchg
pop
pop
dec
sti
repz
xchg
rcl
lds
xor
dec
call
into
pop
or
imul
rorb
inc
sbb
das
dec
mov
nop
out
lea
dec
pop
pop
gs
push
dec
jbe
adc
jg
xchg
add
test
sbb
iret
ljmp
aad
cmp
ss
mov
cmpsb
and
sahf
xlat
loope
inc
js
sub
or
mov
dec
push
inc
add
fcmovbe
lea
out
scas
cwtl
sar
std
jbe
loopne
push
leave
aad
dec
add
push
jg
lcall
mov
push
shrb
test
pop
int
mov
or
fcoms
ret
lea
push
jmp
shll
arpl
fstpt
shlb
pop
loop
adc
addr16
aas
mov
dec
jmp
insl
jp
fwait
daa
mov
push
sbb
imul
daa
mov
imul
adc
mov
cmp
mov
sbb
pop
hlt
mov
or
movl
imul
outsb
cmp
adcl
lock
shl
mov
das
xchg
icebp
pop
pop
add
or
and
xor
cmc
add
decl
shll
mov
in
test
ss
ja
lds
adc
pop
mov
hlt
add
xchg
pop
ja
iret
in
ljmp
adc
add
mov
sbbb
xor
and
cmpsb
mov
dec
fstps
or
jns
out
xchg
lret
call
add
pushf
ds
lods
dec
and
mov
cltd
aad
jno
shrb
cmc
movsb
xor
imul
cmpb
into
inc
adc
fcoms
icebp
movsb
incl
mov
dec
sbb
cmpsb
inc
test
nop
inc
jne
push
movsl
lock
mov
pop
popf
in
pushf
jns
fidivs
xchg
scas
lock
inc
leave
insb
fwait
cmp
ficomps
xor
mov
mov
inc
popa
dec
out
cmpsb
mov
les
in
int
int3
mov
stos
jb
inc
mov
sub
out
sbb
add
jge
scas
out
arpl
or
ja
mov
into
lds
sub
ljmp
call
inc
in
stc
and
ds
inc
lret
jp
shrb
out
or
adc
jns
mov
aaa
mov
aaa
add
mov
add
enter
pop
int3
rolb
test
inc
dec
mov
lock
cmpsb
aaa
mov
mov
mov
dec
cmc
xchg
idivl
popa
push
insw
jle
lods
fwait
les
xchg
xor
arpl
aaa
insl
mov
cmp
std
jne
mov
or
add
add
aad
adc
or
push
push
shrb
lods
push
pop
in
lret
out
xor
cmp
cmp
cmp
or
pop
inc
push
push
dec
inc
pop
adc
push
mov
enter
push
add
test
push
jnp
inc
sti
ljmp
mov
push
les
lret
cs
and
cmp
or
movsb
xor
pop
cwtl
bound
popf
push
sub
les
faddp
rcrl
js
cmpsb
ljmp
push
mov
push
cmc
mov
dec
push
fidivl
mov
ficompl
jnp
jnp
int
xchg
aas
mov
jecxz
mov
loop
les
in
inc
push
or
sub
or
scas
out
fimull
dec
ja
xor
pop
fdivs
push
test
sbb
push
test
xor
sub
fsubp
loope
shll
lahf
rolb
aas
movb
lcall
outsl
sub
sahf
fwait
jo
je
dec
or
push
outsb
pop
sar
or
inc
cmc
push
andb
fsubrl
stos
clc
test
scas
mov
adc
stc
mov
fucomi
jb
sub
sbb
mov
xorb
jae
sub
sub
aam
cmp
nop
ja
cltd
cmp
jle
inc
adc
inc
rcr
sahf
movsl
push
xor
mov
jle
test
mov
loopne
cmp
inc
sub
xchg
push
inc
sbb
cs
jle
inc
fdivl
ret
mov
cs
jecxz
xor
je,pt
data16
out
dec
in
jo
or
xchg
mov
jp
and
movsb
mov
sbb
mov
scas
arpl
mov
movsb
in
sbb
sub
or
icebp
testl
cwtl
shlb
adc
inc
pop
xor
rclb
cli
xor
in
xchg
mov
test
aam
lret
mov
lock
mov
push
jae
inc
mov
stos
mov
xor
xchg
in
push
loop
mov
sbb
push
pop
lahf
jge
push
repz
lods
out
test
out
adc
rorl
xchg
test
xchg
push
mov
mov
inc
inc
fmul
mov
cmp
les
test
das
les
arpl
push
inc
xor
xchg
sub
add
insb
lea
test
xor
stos
call
arpl
xchg
js
mov
mov
lret
xlat
lock
sub
mov
adc
mov
into
or
pop
int3
add
repz
or
jne
mov
mov
pop
mov
cltd
dec
sub
lcall
es
bound
and
pop
fs
iret
stos
fildll
ljmp
xorb
dec
jecxz
gs
clc
fisttpl
gs
dec
lock
mov
fidivs
sbb
and
hlt
lret
in
cmp
stc
test
in
sbb
test
das
mov
fcmovu
lahf
sub
push
adc
cmp
cmp
arpl
or
rorl
xchg
in
aas
or
pop
pop
out
mov
and
cmpsb
pop
lock
push
pop
xor
xchg
mov
or
or
mov
pop
mov
in
sbb
jecxz
jle
cmpsb
xlat
out
dec
cmp
xor
cmp
fstpt
mov
adc
jmpw
or
sub
sbb
fstl
loop
dec
xchg
lret
test
outsl
lds
or
add
cmp
xlat
adc
dec
jmp
insb
xchg
jo
or
lock
add
lret
std
and
mov
or
and
cmp
call
test
jae
dec
inc
xor
or
rclb
pop
cs
shlb
shlb
ja
fiaddl
xor
pusha
mov
sbb
xor
sub
les
mov
sbb
test
jecxz
jg
test
roll
push
mov
dec
and
jnp
push
sub
xor
push
insl
aam
inc
stos
loopne
add
cwtl
jp
push
loopne
test
mov
cld
rcrl
lret
test
lds
adcl
mov
insb
dec
loopne
sbb
rorb
dec
pop
add
xchg
jmp
inc
lods
fisubrs
mov
aaa
fcmovnbe
call
mov
mov
add
add
cmc
sti
js
das
mov
push
stos
pop
xchg
mov
aam
adc
cmp
inc
add
lret
lea
or
lret
ljmp
in
push
dec
push
sahf
popf
in
jne
xor
shrl
rcrb
popf
fstp
out
loopne
sub
lods
xchg
push
jbe
subl
push
in
mov
fwait
mov
pop
movsl
pop
lcall
lcall
nop
jl
repz
repz
jg
popf
mov
jl
or
inc
js
and
mov
mov
jo
sbb
push
scas
mov
popa
jo
shlb
fwait
inc
int3
rcr
push
rcrl
les
push
fs
mov
mov
lahf
flds
cmp
je
in
clc
stc
push
mov
es
stos
mov
sub
mov
sbb
sbbb
push
push
je
xor
jbe
jne
dec
int
inc
das
mov
sti
popa
pop
mov
aaa
ja
xor
lock
sub
mov
push
arpl
and
gs
mov
test
stc
and
movsb
jmp
jmp
xor
inc
lods
imul
xchg
push
je
out
and
nop
push
dec
dec
xchg
or
inc
mov
jmp
clc
mov
mov
inc
mov
out
shll
test
add
jo,pn
xor
mov
leave
sbb
fldt
lods
stos
popf
mov
pop
pop
pop
jns
sbb
xor
mov
rcrl
lods
mov
adc
ds
shrb
xor
cmpb
xchg
xchg
cmp
pop
inc
mov
xchg
mov
out
xor
dec
enter
and
cmp
pop
aam
mov
in
nop
add
jbe
addb
imul
mov
xor
jne
adc
imul
out
jge
mov
clc
test
pop
mov
sub
pop
dec
daa
xorb
and
adc
cwtl
bound
daa
fimuls
inc
ret
pop
fldl
sub
mov
push
mov
jb
jg
jl
lret
int
sbb
imul
mov
out
push
jne
jo
mov
int
adc
sub
add
jecxz
mov
pop
jge
fdivrl
andb
cli
lret
xchg
loop
sub
inc
sbb
dec
lock
push
popa
daa
ja
add
push
lods
out
dec
mov
xor
cmp
test
push
jle
jnp
mov
xchg
insl
outsb
jbe
data16
mov
data16
push
daa
aaa
adc
ret
sbb
xor
pop
divl
dec
push
paddw
lods
bound
mov
push
loop
ja
fsubrs
push
insl
insl
dec
loop
fwait
lds
lcall
divb
test
mov
sbb
pushf
mov
adc
ror
popa
and
loopne
mov
rcrb
rol
push
or
dec
or
std
in
xor
mov
out
jae
jmp
frstor
xorl
loope
popf
xchg
add
shr
stos
jno
cmpsb
mov
fstps
outsl
jb
push
jl
add
xchg
pop
cmp
inc
rorl
test
shll
jbe
nop
cltd
imul
bound
mov
cld
outsb
call
sbb
mov
sbb
xorb
adc
xor
mov
sub
outsl
popf
push
fs
and
rorl
jg
cmpsl
push
cmp
gs
bound
out
xchg
adcl
jg
stos
pop
jb
cmp
lret
ljmp
sahf
sbb
jnp
add
out
push
mov
sub
xor
push
negl
adc
outsl
push
xchg
gs
xor
addr16
stc
push
stc
stos
arpl
inc
stc
out
mov
inc
sbb
js
adc
and
xor
nop
sbb
push
jns
ficoml
xchg
sbb
dec
faddl
pop
xor
in
sub
out
hlt
adc
jo
fldt
lret
fidivrs
daa
fwait
pop
adc
in
jns
test
sub
je
ficomps
shlb
stos
ljmp
daa
mul
xchg
xor
js
sbb
and
addr16
xchg
lcall
mov
and
xchg
push
mov
sub
pop
test
rol
aam
sub
xor
int
push
push
mov
cmp
cmp
mov
mov
arpl
push
arpl
pop
idivb
xor
stos
fwait
sti
inc
mov
movsl
pop
sarb
test
push
leave
data16
fs
push
push
pop
jecxz
inc
shr
or
lret
int
je
in
push
push
mov
jl
sti
push
inc
mov
cmp
jae
xchg
sbb
xchg
sbb
cmp
lods
mov
shl
adcb
dec
movsl
mov
clc
jne
mov
and
sub
mov
addr16
lcall
push
lahf
out
add
adc
push
mov
add
push
push
jmp
add
popf
fcmovu
mov
jecxz
xchg
dec
pop
mov
ljmp
mov
jne
sarl
js
lcall
add
cmp
js
rolb
jmp
shl
jnp
js
mov
pop
gs
cmpsb
xorb
ss
and
fstpt
pop
mov
and
adc
ja
inc
pop
adc
jge
jle
push
xchg
and
or
add
nop
xchg
dec
pop
cmp
leave
push
aad
leave
icebp
push
aas
ja
jecxz
and
cmc
pop
cmpsb
mov
sti
insb
ret
test
add
add
enter
cmpsl
fadd
push
dec
jecxz,pn
pop
ret
lods
xchg
out
mov
xlat
jg
adc
jmp
sbb
les
inc
dec
cli
xchg
ljmp
insb
and
ja
out
nop
stos
jae
addr16
out
sbb
movsl
scas
aaa
fwait
and
bound
sahf
add
sarb
mov
pop
mov
sub
mov
sbb
clc
gs
xor
scas
fidivl
test
adc
or
push
pop
cltd
push
adc
fsts
es
fdivl
xchg
cmp
cs
mov
and
sbb
sbbb
fsub
ss
push
aas
adc
inc
dec
mov
sbb
lea
out
jne
dec
sub
mov
jmp
aas
adc
xor
dec
mov
ljmp
pop
push
lret
jg
mov
arpl
mov
jno
sbb
xor
mov
popf
dec
gs
push
lahf
sbb
cltd
or
sarl
pop
jg
rcll
stos
enter
sahf
xchg
pop
lds
mov
mov
add
xchg
test
pop
push
lahf
int3
push
or
insb
cmp
or
lahf
in
inc
lds
lcall
pop
dec
clc
mov
jl
jp
loopne
fstl
adc
repz
test
mov
and
daa
hlt
je
push
xor
nop
aam
mov
add
inc
add
or
jg
push
stc
pop
sarb
xchg
sub
insl
loop
sub
test
dec
enter
and
fdivrs
je
and
cmp
mov
dec
pop
xchg
rol
imul
jecxz
dec
stc
stos
loop
test
jno
xchg
and
lock
dec
sbb
bound
push
in
lea
popf
xor
sbb
stc
mov
cltd
lcall
lods
or
orb
ja
cmp
inc
sbb
xlat
shrb
cld
mov
shll
push
inc
outsb
adc
mov
test
pop
lods
inc
aaa
std
or
clc
cmpsb
in
mov
js
fisubrs
shlb
arpl
push
fdivrp
stos
in
subb
outsb
push
test
hlt
das
bound
into
pop
add
xchg
cmpsb
jge
rcrb
or
xor
pop
pop
jns
sub
test
mov
jmp
fcmovnu
add
inc
dec
loopne
xchg
aad
idivl
cli
push
jp
mov
push
xchg
ret
add
jne
mov
fdivl
test
loopne
out
jnp
out
sbb
lea
pop
push
jo
stos
inc
cwtl
dec
addr16
push
jle
pop
inc
jge
addl
fidivrs
sarb
loop
into
sbb
and
jg
adc
push
ljmp
repz
mov
mov
outsl
add
adc
js
in
xchg
pop
adcb
std
sbbb
incb
mov
in
imul
cmp
iret
mov
xchg
ljmp
or
cmpb
lock
int3
xchg
shr
lods
mov
jg
mov
add
adc
jbe
xor
stos
add
bound
decl
xor
inc
xor
test
xor
stos
addr16
push
push
cmp
int3
cltd
or
call
push
stos
iret
sub
in
or
xchg
fdivl
cmp
dec
mov
sbb
jnp
ljmp
test
jg
dec
mov
mov
xor
stos
insb
and
push
fwait
imul
jo
xor
mov
out
cli
adc
cld
dec
ljmp
stos
dec
mov
testl
icebp
inc
lods
xor
mov
jl
pop
fistps
leave
je
fsubs
aaa
sub
mov
in
add
mov
jae
jmp
push
lods
xchg
xchg
cmpsb
jo
xor
mull
imul
sbb
movsb
sbb
call
push
inc
inc
inc
leave
into
inc
push
scas
pop
mov
cmp
or
out
in
aaa
outsl
out
mov
mov
mov
jbe
jns
xlat
rorb
hlt
xchg
cmp
mov
cmp
loopne
jbe
addr16
inc
stos
or
sahf
mov
cltd
stos
mov
divl
imulb
jg
cmc
push
pop
or
mov
in
lock
or
cmp
mov
mov
mov
adc
mov
ja
mov
aad
je
sub
lds
push
push
jg
adc
scas
pop
mov
and
out
cmpsb
loop
push
out
dec
sub
ja
lret
mov
mov
xlat
cmp
imul
inc
in
mov
cwtl
push
push
adc
mov
mov
jmp
dec
xor
jne
mov
das
jge
andl
std
je
sub
push
or
mov
aaa
outsb
add
cld
mov
sbb
out
xchg
movsb
stos
cld
sahf
in
popf
stos
stc
cmpb
adc
dec
inc
fsts
inc
call
mov
pop
xchg
ja
cmp
popl
add
adc
adc
cwtl
sub
lret
filds
inc
test
loope
pusha
inc
daa
ret
inc
fldcw
mov
push
cli
daa
push
gs
mov
mov
das
sar
pop
popf
jle
dec
and
sub
mov
cmp
push
outsl
fcmovne
in
fldcw
mov
push
sbb
cltd
test
inc
cltd
aaa
ret
lea
subb
mov
dec
mov
or
xchg
cmpb
cwtl
les
cli
int
mov
xchg
or
lret
adc
and
call
cmp
imul
add
inc
mov
fstpl
movsl
fwait
in
jmp
iret
dec
out
xor
sbbl
mov
fisubrs
or
push
lret
adc
xorl
or
sub
aas
inc
mov
jne
mov
fucomi
xor
sahf
push
pop
inc
ja
pushf
and
aad
and
mov
leave
idiv
dec
push
daa
roll
jb
repnz
aam
mov
iret
xor
jge
xchg
enter
or
dec
jecxz
iret
lods
fwait
ljmp
dec
inc
outsl
out
add
inc
lods
rorl
xchg
call
mov
femms
inc
movsb
icebp
cld
xchg
call
incb
dec
fsubr
dec
hlt
outsb
push
sbb
pop
cmp
stos
filds
sub
xor
icebp
inc
sub
jle
mov
mov
movsb
insb
xchg
pushf
cmp
jo
or
rorl
js
sahf
jmp
ror
inc
jno
xchg
sub
mov
jge
repnz
push
sub
xchg
mov
xor
imul
icebp
aam
and
hlt
sub
fs
adc
in
jne
test
push
out
sbb
mov
sub
rclb
xchg
fldcw
adc
add
out
sub
sbb
mov
pop
push
lret
addr16
xor
test
mov
jle
dec
mov
fdivl
aas
sbb
lds
jmp
jbe
ljmp
out
push
jp
les
push
aas
pop
mov
outsl
adc
nop
push
cltd
xchg
jl
mov
outsb
adc
inc
add
and
jnp
xchg
jge
aam
bound
mov
push
xor
sub
jmp
repnz
inc
dec
hlt
pop
popl
push
into
mov
cltd
loopne
rorl
xor
stos
test
lods
mov
ss
pop
xchg
dec
movsb
repz
in
lods
popa
fucomp
cmc
loop
inc
inc
xchg
jl
leave
mov
aad
jo
jbe
arpl
jno
push
or
lock
test
dec
xlat
fsts
call
cmc
sub
adc
mov
nop
fdivl
add
sub
shlb
shrb
cld
enter
leave
push
mov
adc
add
jmp
jle
repnz
insl
add
out
and
add
ja
daa
mov
aaa
repz
jl
int3
push
add
insb
xchg
repnz
bound
mov
xchg
int3
xor
mov
jl
pushf
dec
insl
add
dec
adc
stos
xchg
jg
insl
repz
pusha
adc
lock
test
push
lds
inc
iret
mov
push
js
popa
mov
xor
mov
xchg
repz
fsubs
popf
sub
jmp
inc
and
inc
mov
push
jmp
xlat
jae
inc
insl
pop
xor
fldcw
repz
fimull
stc
push
lcall
repnz
outsl
mov
cld
aas
lods
push
stos
data16
insb
repz
lret
sub
call
add
cmp
adc
jge
fwait
iret
dec
out
mov
jne
jl
or
fcmovu
loop
xchg
dec
xchg
roll
sub
sbb
xchg
push
or
fbld
add
in
outsb
mov
or
fidivrl
clc
clc
insb
in
xlat
mov
aad
sti
inc
int3
movb
push
xor
jnp
dec
les
jae
cmp
incb
aad
jbe
and
cltd
dec
shll
sub
enter
xchg
in
pop
mov
popf
xor
mov
pop
push
xchg
lods
sbb
clc
loope
or
aaa
cmp
leave
xchg
addr16
mov
movb
sbb
stc
cmp
call
incl
push
es
daa
jo
call
hlt
add
push
ret
xorl
je
sbbl
and
icebp
push
sub
popa
jb
inc
test
pop
into
add
subl
sti
hlt
inc
jp
mov
pop
xchg
aaa
xchg
xor
xor
xchg
outsb
dec
fnstcw
popf
mov
push
add
loopne
adc
cmp
or
ror
mov
jno
xchg
movsb
mov
pop
pusha
popa
lret
or
pop
sahf
inc
mov
popa
mov
ljmp
pushf
mov
mov
adc
add
roll
clc
sbb
mov
jmp
pop
ret
movsb
call
aad
pop
sti
movsl
loope
ljmp
leave
or
jecxz
inc
xchg
mov
test
sar
mov
stos
roll
pop
aad
sti
cmp
push
popf
pop
xor
sbb
gs
pop
je
pop
icebp
cmp
das
in
xor
loop
les
adc
test
mov
sbb
push
xchg
mov
in
aam
mov
pop
aas
ja
inc
in
fiadds
sub
add
sub
dec
cmp
mov
mov
jb
fmull
mov
test
xor
mov
stc
subb
lea
ret
imul
ja
inc
jp
stc
arpl
out
mov
jns
mov
ror
test
lcall
cmp
add
mov
jae
mov
mov
xor
xchg
loope
fisubs
aas
jbe
sbb
movsl
imul
pusha
daa
es
pop
out
sub
insl
aad
in
add
dec
js
push
adc
xor
pop
pop
in
and
and
or
repnz
add
leave
les
and
test
pop
xor
sbb
adc
sub
sbb
pop
or
shl
mov
in
sbb
mov
das
pop
mov
add
and
cmp
mov
scas
fisubrs
movb
mov
xchg
mov
mov
add
add
mov
outsb
fs
test
fs
setge
cli
int
stos
hlt
cmpsb
insl
adc
pop
dec
lods
fcoml
sbbl
cld
xor
sahf
fisttpll
adc
arpl
push
sub
jmp
sub
in
hlt
or
in
adc
ljmp
cmp
ficompl
stc
sub
in
and
loop
mov
call
jns
or
jmp
jae,pn
sub
push
mov
or
idivl
lock
pop
sbb
rcr
pop
test
jecxz
cltd
push
inc
push
ficoml
icebp
ret
cld
fiaddl
sbb
or
push
popf
add
je
xchg
lods
cld
or
test
cmpl
out
cmp
jle
mov
or
scas
and
mov
sbb
xchg
psubusw
out
xorl
mov
push
shll
mov
enter
xor
mov
mov
mov
rclb
or
loop
jno
gs
ljmp
insl
push
aam
jl
add
jns
or
sbb
xor
mov
sbb
loopne
repnz
mov
mov
fsubrp
jle
outsb
cmp
stos
enter
lcall
cmpsl
add
scas
shr
fwait
jg
jl
rcl
stos
or
aas
aam
data16
pop
lods
scas
mov
inc
and
daa
test
jmp
or
jno
icebp
repnz
jno
mov
mov
mov
leave
mov
fisttpll
fwait
xchg
dec
aas
andb
add
pop
add
add
cmp
xor
popf
pusha
call
jne
sub
mov
stos
mov
dec
mov
movsl
xchg
ret
ficompl
popa
pop
jo
cmp
icebp
test
addr16
xchg
pop
mov
xor
inc
dec
scas
fwait
adc
clc
sti
loope
jno
ficomps
test
data16
cmpsl
stos
cs
mov
fcomps
adc
out
cmp
sbbl
shll
mov
mov
cld
sti
ss
iret
cmpsb
push
and
fsubl
lcall
stc
sub
or
or
movsb
cmp
inc
sbb
repz
add
mov
xorb
jge
push
jno
inc
iret
mov
scas
mov
nop
inc
push
mov
mov
pusha
ret
xchg
leave
lret
xorb
js
clc
mov
test
pusha
jp
incb
ret
gs
pop
leave
cmp
test
repz
mov
mov
cli
jnp
mov
mov
pop
js
adc
mov
pop
lods
es
or
push
lret
jae
nop
aaa
movsl
cmpsl
ffree
iret
movsb
and
lods
fidivrl
cli
sub
sbb
adc
pop
sarb
mov
mov
jo
rol
aas
xchg
fisubl
xchg
lea
in
call
and
pop
je
pop
push
push
pushf
popf
ret
cmp
sbb
adc
inc
or
xchg
xor
shlb
dec
loope
into
add
mov
push
jo
jp
mov
xchg
or
fisubl
lret
out
js
inc
and
cmc
cmc
iret
mov
rcr
jmp
ljmp
insl
adc
jo
adc
jg
push
imul
cwtl
xchg
push
inc
rcl
mov
push
shlb
mov
xor
addr16
bound
imul
nop
cmp
add
inc
xor
pushf
xchg
cmc
pop
lret
pop
ret
lds
je
fstpl
and
dec
jne
mov
jne
out
jle
addr16
test
dec
mov
nop
mov
mov
inc
pop
repnz
pushf
cmp
inc
fldt
pusha
and
inc
stos
mov
or
lods
out
cmp
sbb
and
and
mov
shlb
into
pusha
in
andb
jg
out
mov
push
mov
pop
mov
cltd
dec
data16
and
inc
inc
pop
andl
js
jbe
data16
xchg
cmpb
inc
mov
outsb
test
test
faddl
mov
mov
adc
xchg
std
or
xchg
add
pop
sti
mov
ljmp
loope
in
inc
int
daa
fwait
movsb
jmp
movsl
in
adc
mov
sub
sbb
ret
in
jb
and
shll
aad
cwtl
jne
xchg
loope
sarb
push
adc
fiaddl
jg
jbe
divl
mov
repz
xchg
push
iret
arpl
jecxz
cli
mov
and
xorl
rcrb
dec
movsb
xor
insb
adc
leave
jecxz
das
sub
insl
push
imul
aad
and
sbb
mov
lods
jno
notb
in
movsl
xor
push
adc
sub
mov
pop
lea
in
xchg
sti
mov
mov
outsb
dec
add
push
xchg
cmp
mov
cmp
testb
shlb
cmp
cmp
and
stos
add
sub
cmpsb
imul
push
or
pop
sbb
mov
ja
inc
mov
add
cltd
jb
xchg
aam
push
cltd
insb
jle
shl
fwait
jp
loope
adc
aas
in
push
sbb
gs
leave
stos
mov
or
sub
shl
xchg
sub
sbb
lret
dec
outsl
jecxz
test
push
outsl
jg
shll
fcoml
movsb
and
mov
inc
rol
lahf
fdivl
out
int
bound
push
and
adc
fwait
sbb
outsl
mov
aas
or
in
imul
xlat
sbb
imull
cmp
or
mov
add
mov
nop
dec
jecxz
xchg
lds
int
add
shrb
xchg
sbb
pop
sub
or
cs
movsl
and
cmpsl
inc
or
jle
rcrl
cmp
das
daa
test
jg
mov
test
adc
jecxz
push
cmp
into
cmp
out
icebp
cmp
pop
mov
pop
jge,pn
sti
test
cmp
mov
jmp
test
sub
movsb
fwait
cmp
mov
stos
std
add
nop
fistpll
or
mov
lock
jmp
add
mov
test
pop
rcl
fcmove
imul
out
ja
dec
hlt
push
in
test
xchg
push
or
cmp
cmpsl
lods
inc
jle
pop
add
mov
mov
and
pop
xorps
cwtl
aaa
and
clc
add
decl
and
sti
xor
sub
mov
push
add
mov
movsl
cmp
pop
imull
inc
mov
fiadds
xchg
pop
outsl
cwtl
rcll
leave
add
add
mov
add
mov
cld
push
sub
and
das
push
jge
mov
mov
and
movsl
mov
inc
fcmove
scas
sub
scas
rcr
jno
gs
ret
sbbb
mov
mov
mov
lods
ljmp
sub
cmpsl
out
sbb
fstl
add
sbb
xchg
jne
inc
fsubr
mov
lods
xor
ss
push
in
cmp
clc
sub
fiadds
pop
and
fdivrl
orb
paddsb
scas
xlat
pop
and
push
jnp
cld
ljmp
push
push
ds
arpl
fcoml
lret
adc
jbe
fcoml
cmp
andb
lods
xor
mov
in
cmp
push
push
push
and
cmp
mov
mov
cmp
fidivrs
xor
sbb
mov
hlt
popa
test
add
addb
lods
push
nop
shlb
dec
cmp
dec
aaa
inc
or
inc
sbb
imul
aam
or
js
pop
or
dec
out
and
arpl
cli
push
in
push
mov
jmp
in
mov
lock
dec
movsb
adc
sbb
sub
inc
dec
xor
jno
and
xchg
fstps
pop
mov
jo
push
daa
push
or
rcrl
and
inc
dec
push
inc
mov
shll
inc
es
jmp
mov
xor
mov
gs
cs
test
jle
push
pop
inc
outsl
out
push
iret
fs
sahf
or
sbb
and
leave
fstl
cmpsb
mov
push
and
addl
inc
push
push
add
out
push
loope
outsl
mov
out
popa
adc
xor
mov
or
cmp
xor
movsl
lahf
fsub
pop
or
into
add
pop
test
addr16
xchg
bndstx
push
jbe
jae
imul
xor
pop
xchg
xchg
sbb
inc
add
gs
and
or
mov
test
sahf
out
imul
ds
movsl
cwtl
data16
scas
jbe
sti
pop
test
stc
addb
nop
xchg
jle
dec
fiadds
out
orb
push
cmp
adc
xchg
dec
outsl
sub
sbb
fneni(8087
int3
aas
out
repnz
xchg
dec
call
xor
dec
add
pop
jno
movsb
xlat
repz
inc
stc
xor
dec
jae
mov
xor
lcall
rclb
hlt
daa
mov
cltd
orl
and
and
in
jge
ljmp
mov
and
inc
gs
shrl
or
movsl
test
jae
adc
mov
fdivrs
cwtl
movsb
call
in
adcl
xchg
lret
sub
sahf
popl
movsl
pop
call
pushf
cmp
mov
or
jo
out
pushf
add
std
es
add
outsl
das
scas
lock
mov
repz
push
nop
loopne
push
or
mov
mov
inc
fstpt
mov
andl
cmp
imul
xor
shl
mov
push
adc
sarl
mov
leave
mov
mov
hlt
mov
int
fistpl
and
das
add
dec
xlat
dec
sahf
insb
pop
inc
add
pop
sub
jl
fs
dec
outsb
sbb
mov
movsb
inc
cmpb
xor
jb
cltd
xor
stc
adc
adc
or
aad
addr16
or
push
idiv
and
aad
in
adc
and
cli
insb
imul
pop
gs
mov
popf
mov
add
or
mov
rcr
lret
fcompl
mov
pop
mov
xchg
mov
jbe
add
pop
push
hlt
stos
cmp
cmp
fistl
int
cmp
mov
je
xchg
xchg
imul
ret
out
mov
push
mov
xor
pxor
ljmp
xchg
inc
or
dec
dec
pushf
mov
xchg
mov
add
test
sbb
and
rcll
cmp
mov
lcall
lods
cmp
add
clc
lret
mov
sub
lods
jmp
pop
pop
scas
cmp
add
mov
cmpl
outsl
and
ss
bound
sbb
fucom
push
es
pop
out
push
daa
sti
dec
xchg
clc
pop
or
mov
es
sbb
in
inc
leave
jp
dec
repz
and
jb
ds
pop
inc
notl
aaa
lods
dec
push
add
mov
sti
into
or
xchg
sbb
cld
in
pop
or
pop
mov
xor
pushf
mov
mov
mov
mov
push
xchg
and
dec
jmp
inc
adc
cmp
and
movsb
jns
cmpb
sbb
cmpsl
push
add
jmp
pop
xchg
dec
dec
push
lock
inc
sbb
jle
pop
movsl
lret
neg
hlt
bound
lahf
int
mov
imul
dec
sub
xchg
in
into
xchg
repnz
test
outsb
stos
test
mov
daa
scas
jg
cmp
cmp
ds
icebp
cmp
push
lock
mov
cmp
insb
and
mov
fidivrs
adc
mov
mov
hlt
bound
and
mov
cltd
push
cmpsb
stos
pushf
mov
add
xchg
pop
push
leave
push
stos
xchg
sarl
repnz
and
or
add
aam
test
pop
fdivl
aad
ss
lahf
pop
rcll
sub
loope
mov
or
scas
push
inc
jecxz
sub
jae
iret
or
sub
fstps
and
rolb
xchg
test
jne
push
fisttpll
push
add
or
out
dec
rcr
arpl
in
push
inc
mov
imul
fs
in
subl
cmp
pop
pop
ret
in
pop
inc
lock
imul
mov
aas
push
xchg
leave
cmpsl
ds
in
sti
dec
aaa
xor
pop
out
or
enter
leave
fisubl
mov
xchg
xlat
insb
or
mov
aad
leave
cmp
jbe
jmp
xchg
or
std
cmp
sbb
jp
sub
mov
clc
and
mov
dec
mov
sbbb
xor
dec
pop
rcl
shlb
mov
arpl
add
push
leave
xor
cmova
pop
mov
jge
je
dec
add
cmp
loopne
push
repz
mov
hlt
adc
cmp
or
sahf
inc
or
or
push
mov
adc
lods
stos
jge
cmp
mov
cmp
repz
cmpsb
inc
int
xor
insl
outsl
adc
lock
fsubrs
jp
cltd
ss
push
movsb
and
mov
sub
mov
stc
or
shll
jne
rcll
dec
cmpsb
or
xchg
xchg
mov
or
add
ja
mov
mov
cld
cld
cltd
lods
pusha
aaa
pop
aam
mov
push
insl
outsb
sbb
divb
nop
jmp
or
inc
testl
das
pop
sbbl
or
std
inc
mov
xor
adc
popa
stc
lock
cmp
push
ja
push
jo
inc
ss
sub
pop
xchg
mov
fstpt
or
test
and
dec
jle
movsl
fisubrl
push
jbe
mov
aas
js
mov
jo
pop
inc
or
outsb
sbbb
sub
lea
or
test
jle
sahf
js
pushf
jno
add
loopne
inc
mov
push
dec
mov
mov
jmp
cltd
js
mov
leave
mov
pushf
add
ret
dec
add
push
inc
into
mov
movsl
xor
jns
push
mov
orl
cmp
push
inc
xor
in
adc
ret
lods
nop
adc
std
jecxz
xchg
jl
and
push
cs
add
and
inc
lcall
mov
mov
jbe
mov
push
sub
fidivrs
xor
aam
outsb
imul
and
int
add
pop
mov
sub
mov
sbb
inc
sti
dec
dec
jmp
push
dec
or
daa
jne
adc
and
mov
subl
mov
jle
pop
cwtl
jecxz
insb
mov
jbe
int3
cmp
nop
sub
mov
arpl
sbbl
sarb
mov
loop
loopne
aam
shr
mov
stos
xlat
js
xlat
outsl
lret
orb
les
sub
imul
add
pop
or
cli
sbb
add
aam
pop
ret
and
push
movsb
lea
pop
pop
xchg
jge
fs
xor
jne
dec
mov
sbb
in
add
mov
cmp
adc
and
ret
and
dec
inc
lds
aad
jae
push
xchg
icebp
punpcklbw
mov
lahf
cmpl
popf
and
mov
mov
cmp
sbb
nop
and
adc
mov
leave
mov
sub
repz
inc
stc
ret
dec
cs
xor
iret
and
mov
cli
ficoml
jg
lret
pop
sbb
hlt
mov
movsl
inc
aad
lds
imul
test
movsl
imul
les
lahf
push
mov
mov
data16
test
jne
rcl
cwtl
loope
jnp
adc
sbb
sub
mov
dec
rclb
mov
push
add
adc
aad
repz
popf
cmpsl
repnz
xor
pop
out
in
bound
add
adc
mov
fwait
sub
xor
loopne
je
scas
sahf
inc
andl
pop
int
test
hlt
ret
or
xor
testb
mov
or
outsb
lods
js
push
xchg
test
and
or
ret
mov
adc
dec
pop
out
and
mov
clc
push
shlb
daa
aaa
shll
cmpsl
mov
shlb
mov
sbb
adc
xchg
cltd
outsl
pop
inc
pop
jns
jb
pop
cmp
test
xor
xor
pop
and
lahf
push
ja
call
cwtl
mov
call
dec
mov
aaa
push
xadd
dec
and
je
or
mov
int3
mov
adc
pop
clc
dec
js
jbe
test
shr
jge
add
mov
mov
pop
scas
iret
orl
sarl
jecxz
movsl
add
stc
mov
xchg
arpl
repz
ret
fsts
add
xorl
inc
adc
aad
lahf
cmp
pop
xchg
imul
test
mov
cs
xorb
sub
pop
sub
rolb
xor
and
cmp
lret
lds
cs
xor
cmp
xor
and
dec
dec
aas
loope
lods
inc
clc
and
ror
or
xchg
push
push
repz
add
gs
mov
rclb
lods
mov
bound
into
jmp
les
mov
addl
mov
jecxz
sub
in
adc
and
jp
out
jns
xchg
mov
iret
test
ds
jbe
jbe
xchg
movsl
adc
addl
cmp
shlb
mov
mov
inc
ret
popf
jo
mov
dec
rolb
jle
dec
mov
mov
and
dec
jae
sub
add
shlb
adc
cmc
mov
insb
push
arpl
jne
adc
pop
fs
push
and
inc
fadd
cmp
mov
stos
vmovsldup
inc
dec
sub
mov
mov
das
in
loope
sbb
push
stos
jae
sub
stos
sar
jmp
sbb
das
ljmp
arpl
cld
out
mov
mov
jae
pushf
in
pop
insb
std
inc
inc
mov
inc
fildl
lock
popf
jecxz
inc
jp
test
repnz
sub
sub
ds
pop
adcb
test
gs
xchg
movsb
jne
inc
push
xlat
mov
and
push
mov
mov
dec
jno
push
ds
aaa
int
gs
cmp
aam
xor
add
test
shl
xor
mov
pushf
clc
push
mov
rcrb
cmp
sahf
loop
dec
xor
or
fstps
jge
push
mov
xchg
pop
inc
mov
sar
cld
xlat
cld
sub
shll
pop
cmp
add
mov
fldt
mov
jge
lret
xor
lret
es
xchg
test
push
fstps
sub
sub
sbb
pop
cmc
jmp
and
and
sarl
mov
fadd
mov
and
xchg
scas
push
add
dec
ja
std
imull
cmpb
push
sbb
es
push
add
jmp
repz
cmpsb
inc
nop
xchg
js
lds
and
insl
sti
xor
xchg
xchg
or
sub
mov
lret
scas
loop,pt
adc
push
or
add
xlat
inc
or
push
and
push
add
andb
pop
in
jo
js
xor
jl
insb
shrl
lods
dec
mov
stos
int3
inc
push
fdivrl
dec
inc
mov
lods
inc
fsubrs
imul
or
inc
movsl
cwtl
stos
mov
lcall
mov
repz
arpl
cmpxchg
enter
in
scas
mov
sbb
es
xchg
scas
lods
jmp
mov
adc
or
fisubrs
pop
leave
mov
clc
jae
filds
xor
out
sti
sub
in
cmp
cmp
pusha
cvtpi2ps
movsb
shrb
xor
adc
and
insl
jno
jns
add
ret
cmpsb
sub
pop
push
jp
dec
js
out
xchg
int
jle
dec
mov
xchg
testl
dec
btrl
out
inc
das
xchg
mov
cmp
lcall
mov
daa
clc
mov
sub
loopne
sbb
popa
jle
dec
fwait
push
push
add
cli
mov
out
push
and
fdivl
mov
shlb
enter
fistps
mov
cmp
rcl
imul
mov
cmp
push
and
pop
dec
clc
add
aas
outsl
and
or
rol
push
fdivl
mov
pop
shr
ficoml
je
ss
lods
or
cmp
ds
leave
sub
sub
xchg
xor
and
mov
or
dec
inc
xchg
pop
lcall
adc
fildll
xchg
pop
sbb
es
pop
pop
sti
mov
out
dec
cmp
push
and
cs
fcmovnu
sub
add
repnz
sarb
cmp
lret
cmp
or
fstl
cs
std
inc
mov
popf
pop
fs
push
xlat
jmp
lea
mov
sub
cmp
or
mov
test
xchg
sbb
push
xchg
add
shlb
push
and
mov
stos
cmp
stos
into
and
ljmp
adc
popa
mov
xchg
jle
pop
stos
add
aad
inc
mov
rcr
add
clc
lock
rclb
mov
das
dec
xchg
jg
jns
dec
jp
js
es
sbb
std
dec
adc
inc
leave
jo
adc
rcrl
pop
mov
xor
sub
sbb
clc
or
dec
or
sub
insl
cmp
add
arpl
mov
les
cmpsl
xchg
out
int
rol
cwtl
lahf
mov
fnsave
fistpll
ja
adc
test
push
idivb
xor
test
shll
or
in
adc
call
xchg
inc
mov
outsl
sub
cmp
scas
out
into
sbb
sub
xchg
dec
xchg
stos
sub
rol
pop
imul
xor
test
mov
jge
les
lock
jmp
insl
subl
or
cli
out
sbb
jg,pn
xor
scas
mov
shrb
sub
xchg
pop
jecxz
ds
pop
popf
pop
stos
jae
adc
sub
es
enter
push
popf
dec
mov
insl
inc
jl
das
mov
or
ds
test
sbb
hlt
movsb
ret
mov
popf
jmp
push
cmc
xlat
ja
pop
add
xor
ss
push
mov
pushf
shrb
and
fcompl
sbb
daa
cmp
bound
call
jge
adc
roll
mov
and
ret
mov
fmuls
jne
dec
inc
sbb
cmpb
push
ds
cwtl
jns
mov
or
or
adc
and
stc
xchg
or
out
jae
cli
in
dec
out
cmpsl
dec
adc
xor
loopne
lcall
fdivl
fimull
dec
sbb
cwtl
ret
in
repz
das
push
popf
or
sbb
imul
xchg
ret
add
sbb
and
sbb
mov
je
mov
je
mov
movsl
test
test
push
cmpl
xchg
fstl
push
je
add
sahf
jg
mov
aaa
pop
jl
jo
mov
aaa
xchg
mov
in
inc
xor
lret
je
leave
sbb
inc
iret
sub
lret
pop
jecxz
add
popf
negb
movsb
fstl
jmp
sti
repz
pop
mov
jge
jnp
out
pusha
notl
jb
adc
sbb
test
mov
out
mov
cmpl
pop
push
push
cmp
cwtl
dec
int
test
mov
or
and
movsl
mov
rorb
mov
xchg
pop
psubd
cmp
add
mov
pop
lods
xchg
adc
fldl
add
andb
fisubl
test
cmp
push
fprem1
sarl
cmpl
adc
scas
in
dec
ljmp
rorb
cmp
in
cmp
adc
movb
inc
cmp
cmp
mov
nop
or
cwtl
lods
or
enter
push
jle
leave
sub
movsl
mov
sub
int
out
dec
lret
add
push
jg
fldcw
arpl
or
fwait
sub
in
push
sbb
arpl
dec
cli
xchg
jnp
orb
adc
jnp
stos
pushf
insl
adc
cmc
andl
or
pop
je
jno
in
mov
adc
mov
clc
pushf
mov
mov
mov
pop
inc
pop
cmpsl
shrb
pop
xchg
dec
xchg
cli
pushl
sbb
je
jns
lds
lods
ljmp
push
xchg
mov
ja
adcb
imul
push
pop
andl
mov
cmp
dec
stc
sub
in
cmp
fldl
ficoms
xchg
test
call
xchg
inc
inc
or
lcall
xor
dec
loope
je
testb
jae
in
jnp
in
aam
adcl
outsb
inc
jbe,pt
fwait
inc
xor
hlt
add
addr16
pop
loope
jnp
stos
inc
add
mov
pop
arpl
outsb
das
test
dec
sbb
in
add
jno
clc
pop
mov
cmp
gs
xchg
fiaddl
xor
mov
jo
cld
or
mov
cmp
xor
out
push
or
ret
sbb
and
in
into
mov
rcr
out
sbb
add
test
movsl
in
cmp
pop
sbb
es
mov
mov
add
xchg
inc
sub
pop
mov
push
fs
pop
inc
xor
cmp
and
jbe
sbb
adc
xor
ds
dec
gs
pop
cmpsl
test
jae
fs
shl
imull
out
mov
xchg
movsw
es
and
imul
ja
xor
stc
add
mov
dec
imul
decl
fwait
dec
sub
dec
ficoml
ja
icebp
sbb
lds
cmp
in
sbb
cltd
jno
mov
push
add
scas
ftst
ja
fistpll
movsb
divb
mov
xor
pop
sub
jle
cmpsb
add
out
mov
push
mov
lods
mov
sbb
dec
and
aad
sub
mov
mov
mov
out
xchg
cltd
and
shrb
and
out
dec
movsl
xor
or
xor
or
cld
js
add
mov
cld
ret
cmp
pop
mov
sub
fbstp
mov
add
cmp
daa
out
adc
push
mov
push
imul
sub
jg
insb
mov
adc
mov
cld
sbb
js
out
test
aaa
fistps
test
cltd
out
movsb
mov
mov
xchg
inc
das
dec
dec
adc
jbe
leave
ja
gs
fldl
inc
add
in
adc
xor
jmp
fs
inc
mov
adc
lcall
xor
fsubl
xchg
cmp
xchg
out
dec
bnd
imul
adc
pop
cmp
cmp
popa
sbbb
adc
push
adc
cltd
sub
push
icebp
push
lret
rcll
cmpsl
aam
int3
xor
mov
fnstsw
imul
add
rcrb
repnz
sahf
fsubrl
xor
sbb
push
repz
xorl
inc
shll
mov
jl
int3
push
imull
mov
or
pop
fwait
es
loop
xor
arpl
fisttpll
into
fcoml
add
sub
lods
mov
mov
sbb
loopne
test
cmpsl
pop
sub
mov
std
ss
jmp
jl
adc
lret
mov
hlt
or
incb
dec
lcall
cltd
imul
hlt
scas
xchg
rcr
mov
push
test
divl
jg
xor
std
dec
cmp
test
lret
inc
int
mov
lret
movsb
loop
hlt
jp
and
std
push
ror
dec
fdivs
mov
or
push
and
les
shlb
fisttpl
es
rcl
push
add
seta
sbb
movzwl
xor
mov
andl
cmpsb
stc
cmp
dec
dec
pop
movsb
rcll
or
mov
jb
xchg
fstps
mov
add
cmp
ret
popa
fwait
push
ret
loopne
inc
adc
repnz
add
mov
cld
xchg
cltd
pop
and
ret
aad
sub
movb
sbb
pop
adc
mov
notb
pop
ds
jp
fimuls
jne
shlb
adc
cwtl
pop
sub
mov
sbb
xchg
pop
sti
push
and
fwait
sub
insl
jbe
jp
out
outsl
adc
or
cmp
lods
fwait
xchg
xorl
lods
mov
rolb
mov
cld
movsl
push
es
push
mov
push
movsb
mov
mov
scas
mov
mov
ja
lret
inc
adc
cmp
sti
push
dec
push
xabort
mov
jne
neg
ds
or
clc
in
mov
loop
push
mov
je
clc
push
fisubs
nop
xor
iret
lea
jae
sub
or
mov
in
insb
loop
jp
cmpsb
fwait
xor
inc
js
cmp
clc
sbb
push
lcall
fcompl
movsb
push
lcall
into
imulb
subb
pop
jle
jle
mov
mov
push
stc
adc
inc
pushf
inc
pand
lods
inc
jecxz
addr16
or
lods
mov
pop
sahf
ss
cltd
sub
repz
sbb
out
xchg
fs
inc
pusha
sahf
inc
mov
and
and
test
lret
add
adcb
shr
mov
cld
sub
add
cmc
sub
repz
sbb
lods
enter
jl
fisttpl
cmp
fs
add
icebp
or
cmpsb
mov
je
orb
testl
fwait
pop
scas
mov
pop
lds
mov
and
xchg
xchg
mov
adc
add
or
addb
cld
mov
pop
add
mov
leave
jne
adc
cmp
lret
pop
cltd
add
sub
pop
mov
cmp
daa
pop
mov
outsl
and
dec
addl
mov
inc
std
dec
cmp
cmp
into
dec
or
ja
inc
cmp
mov
jp
push
or
jge
scas
cltd
test
dec
xor
outsl
push
pop
mov
out
or
dec
popf
aas
pop
mov
das
or
push
xlat
xchg
int3
add
ss
insl
out
mov
shrl
ss
sbb
pop
mov
mov
push
dec
out
popa
push
enter
push
fistps
arpl
lea
sbb
movsl
xor
dec
inc
mov
adc
or
jbe
idivl
int3
cld
xor
mov
sub
inc
dec
xchg
pop
pop
addr16
outsb
arpl
hlt
mov
daa
adc
adc
inc
cmp
xchg
push
mov
not
xchg
cwtl
cwtl
es
push
cmp
imul
out
ja
das
and
sub
pop
pusha
loope
cmp
push
cltd
stos
movsb
leave
fbstp
fidivrs
adc
push
dec
addr16
int
imull
aaa
xor
push
rcrl
inc
and
add
ret
imulb
imul
push
aas
xor
sahf
arpl
push
aad
insb
or
clc
adc
aas
pop
sub
sub
xor
pop
imul
rcrl
xchg
or
or
loope
push
adc
lods
les
adc
add
push
push
dec
hlt
orb
xchg
jno
lret
and
les
jns
punpckldq
mov
xor
xchg
loope
addr16
rcr
and
or
mov
idivb
pushf
cwtl
rcrw
std
bound
fsubs
bound
sub
cwtl
cs
cmp
stos
or
pop
out
cmc
movsb
or
out
outsb
sbb
out
inc
gs
sub
mov
mov
dec
jno
jmp
sub
sbb
sub
dec
cmpl
fwait
add
push
repz
or
cwtl
adc
imul
cmpb
aam
je
loop
movsb
mov
test
incb
rcrl
in
int3
cmp
shl
sub
or
push
ficompl
push
stos
shrl
push
rclb
in
ja
out
jbe
cltd
mov
inc
mov
pop
push
loope
cmp
aas
push
mov
dec
and
push
sbb
jb
call
ja
dec
je
mov
xor
shrl
adc
jecxz
add
ffree
adc
sbb
jg
jecxz
iret
sub
js
and
push
pusha
add
cmpsl
es
mov
rcrb
dec
aam
ret
inc
rol
add
ja
fwait
xor
cwtl
lods
mov
popa
bound
mov
ljmp
sbb
test
sbb
mov
push
mov
ss
inc
xor
push
pushf
dec
lea
adc
mov
and
les
xchg
mov
push
shlb
aad
shlb
jmp
neg
jmp
and
fidivs
jl
jmp
jne
mov
insb
es
xor
repnz
jno
or
add
inc
jnp
jge
sbb
movsl
lret
and
addr16
sti
xor
in
mov
ja
int3
mov
pop
outsb
js
pop
jns
sti
push
dec
popa
outsl
popl
jo
mov
lods
hlt
push
pop
ss
cmc
xchg
in
jno
mov
lahf
gs
push
adc
imul
in
push
fisttpl
jge
mov
dec
sub
cmpsb
cmpsb
jns
dec
dec
mov
mov
mov
adc
mov
cld
push
lcall
sbb
cmp
jg
shrb
pop
mov
mov
xchg
imul
cvtpi2ps
mov
inc
sbb
inc
movb
sub
push
fisubs
pusha
adc
stc
imul
mov
mov
or
cmpsb
mov
push
lret
mov
out
sub
decl
cmp
lret
shlb
mov
sbb
imul
mov
mov
xor
dec
cmp
jle
testl
xchg
push
shlb
and
and
pop
xor
fnsave
sbbb
cmc
cwtl
clc
pop
adc
data16
leave
loope
inc
sbb
cmp
mov
out
pop
mov
aas
sub
popf
in
xchg
jg
xchg
inc
in
sbb
sahf
jbe
or
xchg
dec
ret
push
pop
lahf
clc
lahf
es
ljmp
sbb
xchg
mov
adc
mov
in
dec
mov
add
sub
push
outsb
cmpsb
ds
mov
cmp
and
jnp
pop
mov
mov
cmp
pop
jo
addr16
js
mov
mov
cmpb
fdivp
iret
xchg
sbb
jge
cmp
add
push
sbb
jmp
repz
ja
sbb
andb
ret
dec
mov
hlt
pusha
ja
mov
xor
into
loopne
loopne
flds
cld
out
movl
out
push
sarl
push
or
aas
jecxz
mov
lea
pop
insl
mov
add
mov
scas
mov
aam
not
jo
std
push
cmp
pop
repz
pop
ds
pop
jbe
jp
cwtl
enter
mov
add
loop
repnz
icebp
ficoml
test
fldl
mov
sub
imul
push
into
in
aad
inc
cmpsb
mov
cmp
and
out
stos
cmp
add
jmp
loopne
nop
xor
lods
movsb
out
adc
pop
sub
add
repz
pushf
dec
mov
or
sub
sahf
nop
std
add
aas
lods
jo
nop
cmc
sub
xor
jle,pn
aas
add
mov
lcall
das
rorl
mov
mov
mov
adc
pop
lods
sbb
scas
popa
lahf
cmc
adc
fwait
xor
fdivr
fprem1
jg
jecxz
xor
dec
fnstcw
pushf
and
sub
in
xor
repz
pop
cmp
out
mov
lcall
test
test
fistpl
jmp
xor
jg
mov
dec
jle
jb
fsubrp
les
sub
and
dec
cmp
pop
cmp
outsb
cld
cltd
mov
jecxz
mov
push
scas
jle
xchg
ret
int3
bound
sbb
jge
xchg
lret
jmp
or
xor
cli
xchg
or
xchg
or
xchg
shrl
lods
out
mov
mov
aaa
repz
bound
icebp
dec
repnz
scas
jno
data16
pop
pushf
mov
and
repz
or
inc
jp
or
aam
mov
pop
ret
in
xchg
mov
aad
dec
out
adc
inc
imul
sarb
scas
fcmovbe
out
lcall
incb
xchg
dec
repnz
cmp
push
inc
add
outsb
test
addr16
test
xchg
fildll
cmpsb
mov
insb
xchg
inc
sahf
mov
cmp
inc
ret
jmp
dec
test
inc
mov
test
popf
dec
dec
insb
push
pop
cld
cmpsl
cmp
jg
fdivs
lahf
push
mov
xchg
cld
xchg
mov
stc
sbb
or
xchg
daa
rolb
in
push
mov
mov
mov
icebp
push
pop
aad
jae
pop
jne
out
mov
testb
pop
out
mov
mov
cmp
movsb
add
push
fwait
and
jno
inc
arpl
mov
popf
orb
divl
push
push
xor
pop
pusha
mov
xor
cld
and
adcl
jns
stc
rorb
dec
pop
sbbb
test
cmc
sbb
aad
std
cli
fst
mov
inc
mov
cld
lock
pop
imulb
lcall
push
inc
in
dec
dec
jp
std
mov
dec
lods
jge
pop
push
push
mov
test
daa
inc
insl
popf
jg
testl
andl
xchg
push
fcomip
pop
pop
mov
sbbl
jno
imul
xchg
pop
outsl
jb
pop
push
mov
repz
div
gs
xchg
out
cmp
inc
les
push
adc
push
inc
pop
xor
adc
pop
xor
inc
aaa
js
and
mov
sub
pcmpeqw
stc
int
fs
clc
jp
cmpsl
je
push
xor
xchg
aaa
and
or
out
cmpb
sbb
jbe
jecxz
or
aas
adc
addr16
insb
jae
cmovbe
xchg
sahf
pop
mov
imul
into
in
hlt
leave
js
sbb
jne
lret
sarl
mov
cs
scas
xor
enter
inc
in
in
rorb
push
mov
and
outsb
hlt
add
popf
lret
jg
cmp
aad
push
test
es
outsl
xor
xchg
adc
cs
inc
repnz
dec
push
outsl
inc
int3
mov
jmp
xor
push
in
mov
clc
mov
shrl
lea
fwait
std
and
sbb
or
fidivrs
cmp
ljmp
xor
ret
adc
add
pop
cmp
cmp
and
nop
xlat
nop
inc
mov
sub
fsub
andb
inc
out
out
jae
jmp
mov
or
iret
pop
lret
mov
sbb
aaa
inc
xchg
sarb
mov
loop
dec
or
mov
adcl
pop
out
xchg
scas
push
in
leave
cmp
xchg
xor
insl
push
xchg
mov
adc
movsb
push
leave
sub
icebp
add
or
rcrl
jo
std
pop
xor
add
lahf
mov
mov
jge
jnp
jb
and
sti
jge
mov
cmpsl
mov
dec
inc
sbb
imul
sbb
pop
lds
sbbl
jnp
mov
test
jne
test
dec
in
pop
js
std
jns
jmp
xchg
xorl
fcmovnbe
or
aam
aaa
dec
mov
es
lods
cmp
sbb
jmp
fmul
jp
cmp
xchg
setp
jb
roll
xor
mov
sub
mov
mov
loopne
arpl
fdiv
pop
add
fs
pop
frstor
jns
lods
mov
sarl
xchg
cmpsl
jmp
jns
add
dec
xor
jno
pop
ja
jl
mov
cs
dec
adc
mov
std
in
repz
xor
sbbb
jb
push
fs
inc
add
sbb
out
xor
sbb
mov
repnz
decb
dec
pushl
repz
out
and
dec
in
push
hlt
push
inc
pop
xor
pushf
dec
push
inc
mov
sub
adc
dec
xchg
cld
cltd
les
or
inc
pop
pusha
mov
pop
mov
mov
and
andl
popf
jae
fdivrp
lds
movsl
call
ret
mov
iret
adc
jg
mov
pushf
sahf
add
xor
call
int3
imul
mov
sbbl
into
mov
enter
popf
ds
mov
outsl
or
cltd
mov
insb
add
pop
in
add
inc
aam
mov
test
sti
cmpsl
adc
and
xor
cmpsb
jns
shrl
xchg
cwtl
xchg
mov
and
or
mov
fs
inc
push
jle
out
dec
mov
inc
xor
jno
mov
add
fbstp
in
cmp
fstpl
cmp
mov
iret
or
mov
and
rorl
mov
cli
sahf
adc
sbb
pop
add
pop
mov
jecxz
rorl
rcrb
shrb
push
aam
pop
mulb
or
arpl
mov
adc
sbbb
jmp
inc
ja
cmp
cli
cmpsl
insb
ds
lret
inc
pop
xor
adc
push
testl
ficomps
mov
adc
mov
pop
and
sub
pop
loop
shl
cmp
arpl
xlat
cwtl
iret
push
ss
enter
es
push
jbe
jae
add
popa
repz
out
inc
adc
sbb
lahf
mov
mov
mov
jb
cwtl
sbb
mov
mov
mov
mov
mov
enter
or
cli
jp
push
fxrstor
mov
xchg
pop
stos
int
add
lahf
sub
add
and
push
cmp
inc
fbld
pop
mov
rcll
cwtl
in
pop
jl
xor
sarb
pop
outsl
movsl
rcr
incl
mov
rcl
in
adc
scas
loopne
pop
pusha
and
pop
leave
pop
jp
roll
push
bound
imul
mov
adc
sti
push
cmpsl
push
and
mulb
icebp
out
mov
jge
popa
mov
das
mov
sub
cs
jbe
rcrb
fdivrl
pop
repz
mov
insl
arpl
mov
jns
rcr
sarb
adc
mov
cmp
loope
lods
cld
mov
clc
xor
inc
sbb
data16
es
add
or
add
jmp
repz
ret
rorl
cmp
fdivrl
cmp
enter
inc
push
inc
sbb
jo
pop
sarl
daa
push
jg
mov
sub
repz
sbb
jns
mov
push
test
xor
sti
enter
push
dec
fidivs
xchg
iret
in
rol
out
mov
xor
rcrl
mov
insb
scas
lahf
jb
push
push
popa
or
xlat
test
hlt
sub
stos
mov
cmp
jmp
in
lea
ret
jle
insl
inc
test
sub
sub
xor
dec
sbb
dec
shlb
inc
lods
movsl
aas
pushl
xor
in
push
int3
ja
inc
imul
fistpl
pop
xchg
scas
repnz
adc
and
or
aad
icebp
jle
cltd
inc
lods
mov
in
repnz
or
cli
push
aam
fidivrs
xchg
xor
out
push
sub
push
rcl
pop
pop
jp
outsb
add
xchg
or
fsubrs
pop
cmp
jmp
push
lock
pop
aas
mov
jmp
cmp
jbe
jmp
into
pop
and
daa
cmp
icebp
sbb
xor
test
enter
dec
cmp
mov
sub
lds
or
leave
js
pop
xchg
pop
mov
jecxz
bnd
imul
dec
adc
ljmp
dec
add
inc
outsl
jno
mov
lock
add
sbb
add
lret
adc
addr16
mov
test
or
jno
fcmovbe
add
inc
push
mov
rorl
cmp
or
mov
pop
cmp
out
jmp
inc
gs
mov
iret
jmp
outsb
cmc
cmp
out
mov
daa
pushf
dec
add
scas
add
push
cld
arpl
clc
or
rcrb
out
ss
xchg
imul
outsb
dec
and
adc
jo
xorl
add
pop
inc
push
mov
or
cmpsl
pop
mov
dec
mov
xchg
jo
rcll
sbb
and
add
inc
cs
stos
or
or
mov
mov
push
int
mov
adc
in
pop
sub
xchg
shl
xchg
sub
cmpsb
pop
jbe
test
ret
addb
add
aas
out
in
pop
mov
scas
imul
sub
cmpsl
and
fdivrs
jno
les
push
cmp
adc
or
data16
cld
push
lea
ss
hlt
jmp
inc
jmp
cmp
pop
bound
fld
nop
cmp
mov
cmp
mov
add
jl
sub
in
jmp
pusha
aaa
xchg
inc
jp
mov
jb
int3
xor
push
dec
fst
iret
mov
pop
cmp
mov
nop
out
mov
or
and
rorb
fdiv
push
sbb
jle
ljmp
jns
in
mov
in
fists
xor
sbb
dec
outsl
movsb
pop
shlb
cmp
addr16
leave
xchg
mov
filds
in
ret
fists
fnstcw
in
adc
fucomip
jge
cli
add
ja
imul
or
dec
cmpsl
sbb
ret
nop
sbb
and
sbb
lods
shlb
jae
xchg
daa
push
xor
test
arpl
call
shll
sub
mov
mov
ss
sti
popf
xor
pop
insb
stos
mov
stc
lods
or
test
xchg
daa
call
repnz
sbb
call
negl
addl
dec
cmp
jnp
test
imulb
ss
int
test
lahf
pop
add
and
mov
mov
jle
xchg
hlt
mov
jno
cltd
mov
das
xchg
rorl
lahf
js
je
int
inc
out
or
pop
pop
jle
xchg
pop
test
hlt
adc
jns
pop
inc
pop
pop
loope
mov
adc
pop
jo
dec
xor
adc
sbb
pushf
sarl
lret
xor
repz
lds
scas
in
in
loop
mov
outsl
data16
data16
mov
xchg
mov
fiadds
std
xor
sahf
jge
popa
cltd
xor
add
mov
scas
fldt
and
cmpb
xor
mov
mov
adc
add
xchg
mov
sub
stos
or
or
or
xchg
sbb
dec
sarl
sahf
lods
sub
dec
cli
mov
rep
les
nop
and
mov
or
scas
outsb
fstpt
xor
add
test
sahf
jle
movsl
push
adc
mov
or
into
addr16
jns
or
aam
out
rcll
mov
enter
push
xchg
jnp
xor
sub
cmp
movsl
outsl
int3
push
pop
xchg
jp
lods
pop
adc
pusha
jle
xchg
and
sbb
xchg
shlb
ret
rclb
pusha
push
xor
xchg
mov
inc
mov
xor
pop
add
push
imul
jns
sbb
rcrl
out
xor
inc
jae
push
cmpl
xchg
and
daa
and
mov
adc
pusha
movsb
in
adc
in
fidivs
es
cwtl
push
inc
es
sbb
jb
lret
push
or
or
enter
pop
push
push
xchg
popa
stos
aas
inc
popa
enter
fisubl
sar
sbb
pop
out
shll
daa
mov
mov
das
dec
sub
xchg
popa
jnp
inc
mov
and
lds
add
mov
push
popf
mov
xor
pop
mov
mov
push
shll
stc
adc
mov
cmp
fldcw
and
xchg
mov
call
pop
icebp
subb
sbb
les
icebp
inc
fidivl
mov
pop
push
out
or
cltd
push
dec
je
leave
lret
js,pt
sub
fdivl
clc
sub
cmp
mov
and
orps
fisubrs
jg
jns
stos
js
ljmp
and
shll
sbb
jmp
cmp
pop
push
push
mov
stos
aaa
sub
xchg
xchg
das
jb
int
cmp
mov
jne
aaa
fildl
rcrb
pusha
iret
loope
jl
xor
jns
xchg
and
fmul
fwait
pusha
and
cmpsb
mov
lahf
jo
pop
sbbl
lds
outsb
sub
mov
cmpsb
sbb
jno
pop
lcall
hlt
pop
stos
and
xchg
adc
sbb
or
xchg
lods
hlt
mov
cmpsb
fs
adc
sbb
adc
ja
add
rcll
cmp
pop
dec
pop
ret
push
lret
idivb
out
add
data16
pop
xor
cmpsb
ds
adc
dec
mov
add
dec
movsb
or
movsb
push
aaa
test
clc
xchg
loop
dec
push
push
fs
pop
jo
popa
mov
repz
pop
and
mov
sbb
cmc
dec
sub
jg
xchg
lahf
lods
xor
sbb
push
es
je
faddl
xor
mov
lret
in
divl
stos
sahf
scas
inc
mov
fdivl
mov
test
aam
fsub
mov
inc
inc
lods
inc
fmul
and
rcl
das
jbe
cmpsl
mov
jl
sbb
scas
fs
shlb
fidivs
push
xchg
aas
fs
pushf
ljmp
push
jns
xchg
es
push
outsl
push
fsubrs
sbb
andb
dec
sbb
repz
jae
inc
ss
fdivrs
std
sub
cli
and
sbb
inc
pop
push
lds
dec
cmp
ljmp
push
dec
addr16
divb
std
or
or
push
pand
inc
sub
js
xchg
hlt
mov
or
lea
subl
jp
or
adc
dec
ss
stos
imul
mov
imul
daa
adc
fildll
ja
pop
mov
pop
fisubl
stos
mov
jo
lock
dec
nop
pop
adc
cmp
push
push
movsb
mov
adc
mov
xor
icebp
cmp
mov
fwait
cmp
inc
sbb
test
push
je
mov
pusha
add
pushf
cmc
stc
cltd
sahf
lea
in
xchg
add
mov
scas
jle
or
cmp
js
outsb
jne
mov
lds
fadds
shrl
xchg
pop
aam
xor
push
outsb
stos
fists
fbld
ss
pop
cmpsb
stc
mov
gs
jbe
fimull
fistps
ret
jecxz
lods
sbb
mov
nop/reserved
jno
pop
sub
cli
push
nop
in
int
pop
sti
cli
ja
cmp
push
xor
adc
cmpsb
mov
push
pop
and
pop
push
dec
push
push
mov
roll
sarl
mov
shrb
test
test
fs
adc
test
pop
jle
mov
jnp
mov
pop
xchg
inc
in
jb
in
pop
cmpsb
std
adc
jbe
scas
xchg
jle
sbb
cmpsl
inc
sub
das
stc
sbb
add
por
pop
js
int3
fisubs
leave
inc
mov
shl
cmc
aad
push
stc
test
stos
pop
cli
stos
pusha
je
iret
jecxz
pop
and
jb
test
mov
mov
or
jp
test
stc
inc
cmp
pop
fadds
insl
sbb
sahf
div
dec
inc
imul
cs
cmpsb
cli
xchg
add
adc
xchg
xchg
cwtl
and
and
pop
in
test
fs
fistpl
pop
adc
lds
sbb
in
push
pop
ss
fsub
inc
cmp
mov
sbb
scas
mov
xor
add
add
xchg
cmpsb
or
pop
jg
sti
mov
mov
js
inc
mov
test
sbb
mov
xchg
xchg
xor
and
pop
xor
int
and
cmp
insl
jno
inc
js
test
mov
cmp
xchg
pminsw
fwait
arpl
and
jo
mov
add
call
pop
lock
cmp
in
cmpb
push
add
int
cmpb
dec
int
xlat
rorb
mov
and
push
jns
jg
or
mov
addr16
lcall
sbb
sub
lea
test
pop
aaa
aam
sub
mov
test
mov
pop
into
sbb
repz
out
nop
sub
jno
jbe
lock
ljmp
xchg
pop
insb
out
js
mov
inc
stos
nop
orb
in
jne
mov
mov
subl
jns
sub
fwait
jl
imul
pop
sbb
sub
lcall
xchg
push
pushf
sub
inc
inc
stos
stc
xchg
aad
imul
leave
pop
scas
out
clc
lahf
leave
mov
fadds
pop
out
jg
ja
inc
ret
jb
sub
test
push
xlat
dec
lea
pop
mov
sbb
cmpsb
clc
ret
dec
jo
xchg
imul
test
enter
sub
mov
lods
push
sub
xchg
adc
sub
push
testl
je
fcmovnbe
stos
inc
sbbl
ret
enter
add
cmp
hlt
push
outsb
xor
ficomps
stos
xchg
insl
pop
shll
pushf
repz
popf
push
add
mov
lahf
mov
mov
test
jmp
add
mov
pop
clc
test
cmpb
fucom
ljmp
nop
leave
mov
mov
push
cld
pushaw
cld
mov
push
mov
repnz
gs
out
int
mov
scas
mov
popa
dec
pop
popf
dec
nop
jbe
mov
mov
mov
push
mov
dec
add
test
popa
andb
fldcw
insb
pop
stc
ret
ret
ds
out
loop
sub
cmp
pop
pop
pop
ljmp
sarl
lret
ret
mov
rolb
test
inc
adc
dec
push
or
cmpsb
jmp
dec
xchg
loop
test
repz
dec
mov
test
push
in
fisubs
push
push
pusha
clc
pusha
minps
shlb
sbb
mov
sub
shr
stos
push
or
and
cmp
add
xchg
push
lret
mov
test
cmp
arpl
or
test
or
or
xor
aaa
hlt
lds
cmp
js
les
push
imul
inc
jns
sti
and
mov
ja
push
cmp
mov
mov
mov
leave
jbe
jae
add
xchg
ret
fmull
out
enter
data16
mov
inc
shr
in
add
imul
adc
sub
fsubrl
inc
enter
cmc
or
in
inc
xchg
lods
pop
pop
push
es
mov
iret
insl
push
ss
mov
mulb
xchg
push
lcall
cs
lea
push
out
bswap
cmp
push
loop
push
out
dec
adc
incl
loope
sbb
daa
inc
push
ljmp
aad
in
imul
xor
mov
icebp
mov
mov
inc
cmp
or
fistl
popa
xlat
testb
xor
dec
mov
adc
mov
and
std
ficoml
sbb
xchg
out
xchg
mov
mov
mov
mov
cmp
out
cmp
pop
add
pop
lret
ret
test
mov
ret
inc
stos
add
cmpsb
in
les
lcall
mov
inc
xchg
int
jge
jno
sbb
mov
push
jmp
mov
insb
ds
sub
adcb
xchg
shr
push
icebp
adc
dec
jns
adc
or
loopne
cmc
xor
add
sarl
movsb
xchg
lds
jge
xchg
mov
insb
pop
xor
or
out
add
out
jns
mov
outsb
mov
daa
jl
out
and
scas
xchg
pop
std
lock
jle
pushf
cli
into
daa
and
push
stos
xchg
in
jnp
or
add
hlt
imull
int3
mov
fcompl
sarb
dec
nop
aaa
cwtl
and
push
jge
pop
aaa
ds
in
sbb
cmpsl
in
loope
cmpl
daa
data16
aaa
cmp
sub
mov
and
add
in
jno
add
orl
das
lcall
mov
cmp
leave
or
nop
lods
in
icebp
mov
daa
std
sbbl
pop
jne
aam
leave
fs
stos
cltd
test
addb
test
cmp
fisubs
fisubrl
mov
in
loopne
addr16
clc
sub
rcr
shlb
jge
xchg
cmp
pop
test
jecxz
jne
xor
aad
enter
call
aam
push
loopne
js
sbbb
dec
add
aas
xor
push
iret
mov
push
aad
ret
mov
lock
xchg
dec
idiv
pushf
adc
enter
into
jle
adcl
xchg
jmp
sub
ds
dec
mov
pushf
popa
mov
gs
daa
sti
xchg
into
js
pushf
inc
test
xchg
sub
xchg
jb
jnp
jecxz
ds
js
pop
aam
push
into
ljmp
and
sub
or
sbbb
or
clc
push
mov
out
push
shll
je
lds
or
xchg
jbe
call
cmpl
adc
and
loope
add
cmpsl
mov
subl
test
adc
cld
iret
imul
testb
sbb
lret
mov
cmp
addr16
xlat
cmpsl
inc
cli
lods
jmp
jns
je
fildl
gs
loopne
enter
pop
es
push
fidivrl
xchg
dec
mov
ffree
lods
and
imul
stos
pop
ret
jge
mov
int3
xchg
ljmp
jno
cmpsb
cmp
sub
mov
mov
in
fs
rcrl
rclb
mov
fs
sar
ljmp
ret
inc
mov
push
lock
cld
mov
dec
sbb
push
outsl
cmp
push
jle
bound
pop
push
mov
nop
xchg
lods
cmpl
sbb
cmp
xor
into
popf
test
push
movsb
or
loope
popa
std
sarb
adc
push
jmp
lods
or
cli
sar
shl
aam
mov
addb
mov
dec
adc
imul
jmp
fnsave
sahf
adc
aam
add
insb
xor
sub
adc
xorb
and
add
insb
adc
stc
scas
jb
lods
push
sbb
mov
clc
add
out
int3
push
pop
imul
sub
dec
lods
add
lcall
sbb
or
les
repz
or
mov
add
cmpsb
cmp
inc
leave
xchg
dec
int
dec
inc
rorl
rep
cmp
jnp
test
pop
ret
pusha
stos
adc
mov
clc
out
add
push
pusha
jo
adc
mov
adc
sub
jg
xor
cmp
jb
imul
sbb
mov
inc
lea
cs
cld
dec
stos
cmp
add
nop
or
jle
cmp
sbb
sbb
xchg
cmp
mov
mov
pop
jge
enter
std
sahf
lock
lcall
jae
stos
mov
sarl
xlat
imul
push
add
mov
aaa
mov
adc
mov
mov
cmpsl
or
mov
lea
fidivrl
data16
pop
fs
adc
push
rol
inc
jne
mov
subb
or
push
std
cmp
push
cld
ja
mul
mov
sbb
sub
dec
aaa
or
push
pop
in
fimuls
movsb
mov
mov
xor
movsl
lahf
dec
inc
mov
loopne
addb
xor
popf
inc
cld
jl
mov
mov
jo
jbe
scas
jp
repz
xor
mov
xchg
in
fadds
loop
xchg
sbb
xchg
lret
inc
es
xchg
imul
and
add
sbb
shll
nop
mov
pop
jmp
jb
mov
jnp
xchg
ficoml
pop
test
add
imul
je
pop
ljmp
push
inc
test
jle
mov
lret
sbb
add
mov
mov
sbb
lret
pop
rcrl
xchg
js
mov
xor
xor
xchg
imul
cmp
test
xchg
test
out
sbb
ja
push
sub
mov
loopne
jo
sub
pop
divl
shrl
scas
lds
or
sub
dec
push
dec
imul
pop
mov
add
cmp
pusha
sub
sub
das
pushf
fsubs
out
loope
adc
add
push
pop
test
fs
mov
fistpl
pop
fs
in
out
movsb
cmc
mov
lods
roll
add
pop
outsb
mov
pusha
stc
outsb
rclb
movsl
test
cmp
inc
push
lcall
aad
mov
divb
gs
push
mov
push
lock
xchg
push
mov
rcrl
les
cmp
outsl
sub
adc
xchg
xchg
and
add
mov
pop
mov
loopne
xor
fistl
jmp
xor
out
imul
testb
test
ds
int
xchg
jg
mov
fs
push
idiv
jbe
sbb
pop
iret
jmp
out
ds
jmp
cli
xchg
cmpsl
pop
jge
insl
and
sub
popf
stos
mov
ss
icebp
jbe
std
enter
push
jno
and
popa
pop
jb
mov
fstps
jp
lods
leave
arpl
outsb
mov
les
xor
imul
xchg
ljmp
xor
sub
add
push
outsb
prefetch
or
xchg
enter
sbb
ss
lret
ljmp
jmp
sub
xor
adc
xchg
and
movsl
xor
mov
mov
mov
cmpsb
xchg
add
stc
out
jb
fidivl
mov
mov
ret
mov
add
mov
cmp
mov
gs
mov
pushf
or
popa
pop
imul
add
sbb
pop
dec
fimuls
xchg
sahf
or
inc
fucomip
dec
out
arpl
add
daa
popf
xchg
aas
jnp
in
cli
loope
push
fildll
jg
jl
jns
xchg
pop
cmp
addl
ficoml
sahf
and
mov
jbe
je
cmp
notb
outsl
inc
out
add
fwait
jnp
ds
inc
ss
scas
adc
test
cwtl
and
mov
add
cmp
sbb
add
jns
add
lahf
mov
rcrb
lret
dec
xchg
out
int3
je
push
aaa
subb
in
icebp
cmp
out
and
out
aaa
sub
sbb
jns
xor
sub
push
dec
imul
ret
or
sti
or
or
mov
std
adc
pop
jle
les
cmp
arpl
test
fmul
or
cwtl
jno
mov
lods
mov
faddl
dec
sub
pop
icebp
flds
pushl
pop
leave
xchg
lock
inc
pusha
add
out
lds
test
scas
test
push
add
push
imul
cmpsb
in
jl
xor
out
addr16
add
movsl
push
movsl
sbb
fs
shl
jae
mov
leave
mov
xor
xchg
movsl
jnp
mov
imul
push
fisttpll
popa
adc
stos
idivb
roll
mov
jecxz
dec
testb
xorb
cli
ljmp
scas
and
mov
jg
mov
jnp
push
mov
xchg
xor
daa
out
lret
pop
pop
in
imul
int
adc
daa
mov
xchg
pusha
cmp
mov
mov
call
fidivrl
hlt
xor
insb
jo
cmp
scas
in
hlt
test
ret
cltd
rep
movl
in
xor
jbe
push
mov
xor
repz
xchg
sbb
cmp
popa
push
cmp
pop
call
int3
punpckhbw
push
dec
imul
push
and
add
jg
push
push
sub
idivl
sbb
daa
gs
mov
imul
lds
push
mov
mov
imul
xor
imul
mov
stos
xchg
adc
sbb
daa
sti
dec
jecxz
dec
jns
icebp
adc
nop
jns
jns
or
push
or
iret
lds
int
cmp
bound
fldcw
sbb
sbb
xchg
inc
pop
outsb
xchg
lea
out
adc
pusha
mov
aam
dec
pop
scas
mov
pop
xchg
insb
loope
sahf
nop
add
mov
cmp
in
mov
pusha
mov
stc
mov
jae
fwait
sbb
in
lcall
rep
cld
jae
fistl
sbb
ja
jb
in
or
test
cmp
aaa
mov
cld
cs
pop
xchg
aaa
rcr
sbb
mov
popf
push
jge
mov
clc
fxch
aad
test
push
dec
cmp
or
mov
fs
inc
shll
sub
movsl
insb
pop
sbb
pushf
ljmp
cmp
or
fcoms
scas
cmp
add
mov
cmp
rclb
movsl
mov
push
xchg
sub
movsw
pop
in
ss
or
lret
out
fstpl
mov
adc
adc
dec
xor
add
lret
add
push
in
mov
adc
out
lret
stos
test
loopne
pop
push
loopne
aaa
mov
adc
pop
cmc
xchg
pop
lahf
lret
mov
loop
xchg
rorl
sbb
xor
jle
mulps
fwait
pop
mov
lcall
mov
in
enter
mov
imul
mov
int
lret
ficoml
pushf
xor
xchg
jae
ljmp
aaa
push
lds
add
iret
aaa
movsb
roll
inc
ret
arpl
in
pop
dec
jg
mov
xor
jb
push
xor
and
lds
mov
stos
cmp
sub
push
fsubrs
popa
nop
clc
call
lahf
push
and
cmp
push
mov
out
mov
imul
test
js
pusha
jmp
in
sarb
mov
xchg
mov
in
hlt
test
lahf
stos
lods
dec
pop
or
cld
cmp
lods
and
mov
jnp
std
pop
cli
xorl
pop
lahf
sub
pop
les
test
ficoms
cmp
xchg
jo
sub
fmuls
out
loope
dec
push
movsb
rorb
gs
fwait
push
xchg
std
xor
push
std
ja
xor
je
rcll
sub
push
pop
icebp
mov
fistps
cmp
and
xlat
data16
insb
cmp
xor
xchg
cmpsl
inc
dec
xchg
es
xor
xchg
cmp
and
int3
push
mov
dec
sub
imul
mov
das
nop
jno
idivb
xchg
add
or
imul
push
mul
mov
and
sbb
add
repz
jnp
push
jno
aas
jo
inc
bound
out
adc
cmpsl
mov
mov
sahf
cmp
jo
xor
push
add
mov
icebp
outsb
ret
cmp
mov
out
push
add
pop
mov
enter
movsl
xor
les
popf
xchg
push
push
sarb
sbb
out
xchg
sub
fadd
loopne
inc
dec
dec
mov
lret
pop
xchg
sub
xchg
ret
jne
push
das
or
mov
rorb
arpl
pop
xlat
mov
or
push
adc
fsubrp
test
pop
add
sub
movsb
cli
shrl
push
or
shrb
lret
enter
insl
repnz
lods
add
movsb
fs
lcall
mov
movsl
xchg
pop
dec
inc
ret
dec
test
inc
lahf
pusha
icebp
xchg
mov
sub
xor
js
daa
mov
test
sub
mov
pop
mov
sub
dec
pop
dec
jne
and
jo
mov
ss
loope
mov
sub
jp
inc
in
jbe
jo
or
push
xchg
pop
add
xor
idivb
mov
mov
lret
clc
mov
enter
adc
lods
or
pop
loopne
pop
xchg
incb
outsb
jno
adc
cli
pop
mov
int
lock
cmc
enter
pop
push
xchg
xchg
mov
sbb
push
add
aad
jp
fisubl
enter
sub
ret
mov
mov
int3
xchg
mov
push
cmp
adc
in
pop
add
push
icebp
sbb
cmp
cmpsl
inc
inc
mov
xchg
bound
mov
daa
scas
cld
daa
jle
and
cmc
loop
mov
push
fistps
mov
ret
and
jne
dec
outsl
xchg
iret
push
jnp
xchg
iret
dec
mov
sbb
jo
movsl
mov
dec
pusha
xchg
push
and
fs
mov
sahf
push
add
push
loop
adc
int
and
pop
fwait
add
jmp
push
jmp
cmpsl
add
add
dec
cltd
js
popf
mov
call
inc
scas
loopne
cli
and
int
mov
cmp
loop
inc
push
sub
xchg
clc
stos
insl
inc
std
mov
in
jmp
out
push
shrb
push
push
push
cmpsl
ljmp
inc
rcrb
outsb
cwtl
arpl
movsl
jg
and
data16
ss
jecxz
enter
adc
call
sahf
in
cmp
lods
dec
push
sbb
insl
out
xchg
out
mov
lods
lahf
cmp
leave
lcall
add
lret
dec
mov
sub
lcall
iret
cmp
data16
sub
les
jne
divl
test
xchg
jo
jns
sarb
adc
push
ss
cmp
inc
aam
dec
cmp
cmpsl
clc
lret
push
test
ret
xlat
aaa
pop
int
xchg
je
aad
lahf
lods
and
faddl
fs
mov
daa
jmp
ja
xor
mov
je
lret
adc
lods
cmp
sbb
dec
sar
fwait
sub
mov
push
mov
loopne
clc
icebp
jb
scas
xchg
incb
jb
jne
mov
xchg
inc
xchg
imul
pop
cmpsl
imull
daa
lds
xchg
ret
cli
je
cmpsl
pop
outsb
test
jne
test
jbe
and
sub
sub
push
scas
cmpsl
cs
test
xor
jb
mov
push
pushl
cmp
xor
inc
pop
call
pop
mov
jno
outsl
cwtl
sar
mov
inc
push
js
dec
inc
pop
int3
xor
xor
jbe
aad
xchg
sti
mov
out
mov
iret
push
sbb
or
shrl
int
test
and
jo
push
stc
inc
pop
xor
enter
sahf
repnz
scas
sbb
filds
stos
lret
jmp
out
sbb
add
dec
out
add
adc
dec
adc
stos
addl
enter
mov
arpl
mov
mov
jle
in
inc
fdivr
ss
es
dec
inc
ret
xor
enter
adc
std
mov
dec
pop
sarl
mov
rorl
lret
ror
dec
fbstp
lret
fists
lcall
stos
fnstcw
mov
test
cmp
test
jmp
fsubp
mov
cmp
hlt
lods
mov
cmp
notl
push
push
iret
push
cs
cltd
sub
xchg
sub
xor
xor
mov
popa
jae
clc
mov
xchg
adc
mov
pop
sti
pop
mov
inc
xchg
lcall
repz
icebp
xor
fnstcw
pop
inc
outsb
push
xchg
testb
in
xchg
sbb
test
mov
in
mov
inc
push
pop
sti
mov
jge
mov
mov
mov
cmp
jle
mov
mov
sub
scas
test
nop
or
orb
fildl
adc
mov
dec
lea
and
mov
pop
sub
jne
xchg
cmc
pop
add
dec
mov
lods
sbb
fildl
xor
aas
push
sub
fisubrl
xor
rcrl
lcall
add
mov
sub
lahf
xchg
sub
clc
sahf
mov
jnp
inc
jl
sub
or
adc
rclb
push
xchg
out
outsb
aaa
loope
mov
xlat
addr16
cld
sti
jmp
mov
bnd
shlb
dec
jp
stos
ljmp
jg
mov
pop
scas
sub
insb
daa
add
add
cmpsb
dec
stc
jge
incl
in
sub
mov
sub
adc
dec
dec
jbe
scas
sbb
push
dec
mov
filds
cltd
imul
aad
jg
push
shll
insb
add
adc
mov
loopne
sar
add
shll
das
push
call
fwait
pop
cltd
and
fcoms
push
test
into
call
mov
mov
test
sarl
lock
popf
pop
js
cmp
out
loope
jae
mov
jno
add
mov
jmp
pop
xor
mov
xor
push
movsl
jae
push
incb
movsl
and
mov
paddusw
lcall
lahf
mov
mov
fcoms
xchg
dec
jno
pop
iret
mov
ds
jle
stc
mov
xchg
dec
lea
inc
mov
je
push
int3
add
jecxz
mov
push
inc
dec
adc
push
ss
push
insl
fnstsw
mov
cmp
pop
imul
aaa
push
testb
pop
xor
mov
xor
pushf
push
fdivrs
pop
in
sahf
icebp
jno
lret
icebp
sub
cmp
xorb
out
out
mov
mov
js
and
sub
adc
shlb
jp
pop
mov
pavgb
jp
loopne
push
shrb
je
fsub
add
cmp
mov
call
and
mov
xchg
flds
cwtl
inc
mov
sti
bound
ss
sbb
jae
or
scas
int3
xor
sbb
and
aad
sbb
and
mov
dec
sar
mov
inc
adc
xor
adc
nop
das
jp
sbb
pushf
out
fldt
push
sbb
pop
mov
push
mov
clc
jl
imul
jg
jns
stc
in
inc
rcrl
xor
mov
dec
movb
xor
imul
hlt
jmp
mov
fsts
push
cmp
mov
dec
imul
push
push
jecxz
repnz
lret
push
ret
iret
xor
and
int
push
sahf
inc
sbb
or
ljmp
int
jp
xchg
push
xchg
pop
shlb
xchg
jle
insb
or
xor
xchg
in
mov
push
push
adc
dec
dec
jo
push
enter
fstpl
es
dec
cmp
and
das
push
push
mov
add
xlat
enter
mov
xor
xor
dec
cmp
mov
lock
and
mov
ret
pop
and
ja
xor
adc
cltd
into
leave
rorl
mov
out
mov
cmc
test
fidivrs
mov
push
ret
icebp
cltd
jae
inc
idivb
test
lcall
movsb
clc
xchg
jbe
int3
fs
jmp
sbb
cmc
add
fs
mov
mov
xchg
inc
mov
xor
inc
jb
mov
push
dec
aam
pop
scas
xlat
xor
mov
mov
mov
adc
xchg
xor
ljmp
ss
dec
dec
movsb
push
push
ds
push
ret
jns
inc
imul
mov
pop
loopne
fcomp
ret
test
in
addl
movsb
sbb
add
mov
inc
cmp
pop
inc
jge
pop
mov
inc
pop
and
mov
scas
rol
out
aad
or
fadds
jae
inc
aad
xor
nop
pop
out
lock
es
rcrl
incb
addl
adc
loop
xchg
or
pop
mov
sub
lcall
mov
mov
sub
clc
pop
pushf
int
mov
add
call
mov
leave
ds
cwtl
jne
lret
test
push
movsb
push
lret
jmp
ds
ja
adc
cwtl
cs
xchg
xor
mov
adc
aaa
ljmp
push
ret
jecxz
enter
call
xchg
jge
mov
roll
pop
xor
cwtl
lret
add
fldlg2
pop
enter
jns
add
adc
je
xchg
mov
je
imul
arpl
shrl
js
hlt
xor
xchg
fwait
imul
loop
out
ds
jbe
xlat
mov
pusha
or
daa
jb
jmp
enter
inc
jle
data16
mov
mov
fdivs
xchg
rclb
pop
pop
cmpb
std
stos
xor
or
xchg
fistpll
pop
dec
pop
and
daa
stos
sbb
ret
jae
lcall
add
cwtl
push
xchg
pop
mov
nop
mov
xor
mov
psubb
repnz
fldt
and
inc
inc
js
sub
into
pop
add
or
or
jnp
pop
xor
hlt
jmp
mov
in
push
rclb
loop
idivl
jbe
daa
sbb
loope
aas
xchg
xlat
jmp
mov
pop
outsl
bound
out
mov
lret
mov
sbb
rcl
mov
xchg
inc
insb
insb
dec
out
bound
fprem
loop
push
sub
dec
cmp
fcomps
in
insl
xor
arpl
shrb
push
ds
arpl
ror
adc
jmp
pop
add
hlt
pop
cli
insb
push
out
jg
es
cmp
fwait
loop,pt
call
sub
pop
cmp
push
pop
out
and
mov
and
andb
inc
call
mov
bnd
rclb
fstpl
loop
xchg
sbb
cltd
xor
sub
stos
xor
popf
sahf
jle
mov
cmp
jmp
mov
nop
cmpsl
sahf
sbb
xchg
imul
pop
movsb
and
xlat
lods
push
mov
js
pop
imul
test
sub
ret
movsb
fidivrl
pop
ret
adc
pop
add
imull
insl
dec
mov
mov
ja
jge
inc
xchg
or
mov
imul
fidivs
push
push
push
xlat
pusha
sbb
and
mov
nop
or
pop
dec
cmp
inc
inc
add
push
xor
pop
inc
lock
mov
xor
stos
mov
sub
mov
jg
aas
jmp
shrl
je
mov
repnz
dec
push
inc
mov
mov
xor
loope
test
push
sub
mov
test
pop
sub
stc
pop
jae
test
xor
data16
mov
mov
push
sub
aam
dec
out
loopne
cmpb
das
xor
movsl
jmp
int
les
xor
fisubrl
sub
jns
pop
inc
in
ljmp
and
sbb
sub
cmp
sarl
push
inc
mov
jo
fld
decb
repnz
test
xchg
xchg
ret
pusha
jae
mov
add
imul
mov
mov
mov
out
ss
dec
ljmp
pop
das
enter
popa
mov
jmp
cmp
and
les
fdecstp
mov
add
sbb
sub
add
inc
push
xchg
xor
cmp
sub
call
sbb
mov
cltd
xchg
or
loope
pop
jne
enter
inc
pop
mov
xchg
add
ficoms
xorl
jnp
popa
aad
cmp
out
mov
mov
lret
mov
dec
cmp
das
mov
mov
aas
lahf
repnz
adc
xchg
outsl
lret
jbe
or
xchg
sub
test
stc
xor
mov
cli
xor
bound
out
jne
inc
mov
jnp
inc
outsb
push
mov
sti
stos
cmp
push
xor
pop
fsts
cmp
fcompl
outsl
dec
jnp
sub
mov
adc
mov
cmpsl
mov
pushf
shl
mov
add
lds
les
ds
test
int3
scas
sbb
add
inc
inc
sbb
stos
clc
data16
xchg
lods
pop
andl
fdivrs
aaa
mov
sahf
xor
int
stos
push
shll
data16
imul
movsl
xor
test
scas
or
cs
cwtl
mov
arpl
push
mov
dec
dec
mov
adc
mov
ss
pop
inc
lock
pushf
test
mov
mov
add
xchg
mov
ja
xchg
jg,pt
mov
xchg
fimuls
in
stos
adc
and
les
sbb
mov
adc
or
fnstsw
pop
sti
mov
sub
and
mov
dec
daa
cwtl
enter
fmul
xchg
inc
add
adc
pop
mov
aad
ja
sbb
dec
sbb
xchg
dec
dec
shll
xchg
movsb
push
sub
cmp
cmp
lcall
dec
mov
cld
out
xchg
std
cmp
mov
nop
inc
stc
jnp
mov
cmp
xor
cmc
loope
fcompl
jl
jb
jmp
cmpb
addr16
int3
inc
pop
pop
movsl
mov
add
ficoml
cld
push
mov
aam
push
push
icebp
aam
fdivrs
jmp
sub
lret
dec
aam
and
push
inc
je
inc
push
inc
mov
ja
inc
xchg
ljmp
icebp
xor
mov
push
sti
ret
mov
subl
dec
push
xor
outsl
push
les
xchg
andl
push
pop
stc
cmp
out
and
cmp
pop
push
cmpsl
fldl
add
sub
sahf
sti
inc
orl
mov
push
xor
xor
bound
adc
push
jb
enter
in
call
or
push
cmpsb
es
int
ds
mov
sbb
out
mov
pop
pusha
cwtl
nop
lds
adc
mov
or
sub
xor
in
repz
add
xchg
add
ret
xchg
mov
js
lds
fcmovnbe
xchg
in
xchg
fs
add
xlat
xor
pop
leave
mov
dec
mov
add
ficompl
aas
andb
cmp
rcrl
pusha
jecxz
in
insb
xchg
jno
test
lcall
popa
in
arpl
push
imul
push
pop
mov
imul
or
std
cmp
sbb
cmpsl
sub
push
cltd
pop
in
push
jecxz
inc
or
iret
pop
dec
mov
pop
mov
imulb
inc
sub
out
popf
aam
lds
setae
insb
ljmp
jl
in
push
ret
dec
hlt
shrb
imul
dec
push
dec
xchg
ret
push
fdivr
shrl
hlt
stos
repz
fs
stc
or
sub
sub
popa
jae
in
scas
in
cmp
adc
loopne
pop
dec
lods
imul
test
outsb
sbb
in
adc
leave
pop
aam
jg
stos
dec
sbb
or
iret
insb
cmpsl
lock
mov
mov
ljmp
aas
fldln2
xor
mov
fistpll
stc
push
das
rcrl
push
inc
sbb
adc
pop
or
out
ja
rorl
pop
in
pop
enter
dec
and
or
test
sahf
aaa
sub
mov
int3
dec
xor
in
vaddpd
mov
cs
mov
pop
jae
push
push
fldt
rclb
pushf
xor
arpl
adc
and
in
test
mov
ret
test
mov
ret
cmp
enter
sbb
cmp
or
or
daa
stos
sub
push
lea
inc
xor
adc
mov
inc
mov
xchg
aam
sbb
jmp
mov
imul
mov
sbb
push
int3
pop
aaa
jle
mov
xor
int3
and
cmpsl
int
pop
push
in
insl
mov
add
xor
pop
cmp
daa
aas
xchg
imul
ret
std
pop
into
adc
fmuls
arpl
out
out
stos
xchg
std
repnz
cmp
add
add
jg
std
shl
int3
je
out
ficomps
lds
out
xchg
mov
xchg
dec
adc
jns
cwtl
xchg
stos
sti
dec
adc
jge
je
and
outsl
push
xor
sub
mov
and
cmc
push
xor
inc
lds
dec
jno
jg
mov
mov
lahf
push
inc
andb
jb
stos
adc
jmp
cmp
imulb
xchg
inc
xchg
dec
aam
add
lock
sbb
fwait
dec
push
daa
imul
push
cmpb
inc
and
sbbb
xor
xor
sbb
add
ja
mov
sub
dec
iret
mov
dec
adc
in
xor
push
fstps
mov
pop
cs
adc
jbe
in
jb
xchg
or
gs
mov
je
pop
and
int
imul
mov
cltd
cli
outsl
and
call
inc
cmpsb
loopne
or
and
call
push
mov
mov
jne
inc
sbb
mov
pop
bnd
sbb
ficoml
push
fs
mov
jmp
inc
xchg
push
prefetch
or
xchg
dec
or
mov
xor
fucomip
and
pop
imul
add
push
push
xchg
mov
cmpsl
jbe
roll
mov
pop
sbb
sbb
stc
leave
das
enter
into
lahf
or
jecxz
mov
bound
push
or
push
cmp
shrl
lret
cmpsl
rcrl
fsubrs
mov
into
xor
mov
jb
cli
leave
dec
pop
add
popf
sbb
dec
fistpll
push
jmp
mov
je
push
outsb
pop
jo
mov
cmp
rorb
ret
or
pop
mov
out
pusha
rcll
dec
add
xor
pop
and
push
inc
das
or
icebp
ds
and
xor
test
data16
loopnew
inc
addl
mov
cmp
sbb
scas
es
shll
adc
test
rcll
jae
pop
jnp
jmp
jl,pt
jnp
sub
inc
int3
xchg
or
add
mov
or
lock
sti
andl
psllw
xchg
mov
lock
ret
xlat
pop
jg
std
mov
xchg
sbb
dec
scas
add
mov
popf
adc
cmp
sub
stos
pop
xchg
xchg
sub
xor
ljmp
and
pop
add
cwtl
cltd
out
cmp
dec
out
mov
or
jmp
cwtl
or
sub
scas
jg
sbb
and
movsb
sub
rclb
cmc
bound
sbb
cmp
in
or
enter
fldl
mull
ss
js
ljmp
xor
mov
gs
add
xchg
sub
imul
cmp
xor
push
cmp
pop
and
mov
and
or
pop
or
invd
fwait
xchg
xchg
repz
test
nop
pop
mov
pop
push
and
fsts
iret
push
scas
into
jne
add
jbe
xor
and
jmp
enter
loope
pusha
gs
scas
xchg
decb
in
movsl
aas
xor
add
aaa
and
jmp
xor
fs
ds
mov
int
jmp
pop
stc
outsb
dec
popf
and
in
push
stos
imul
mov
shlb
push
cmp
jb
loope
pusha
negl
cld
fs
mov
pop
imul
test
loopne
push
das
mov
push
jae
data16
xor
arpl
inc
lahf
popf
fcoms
in
les
popa
cmp
xor
pop
xchg
xchg
mov
adc
ja
ror
cmp
sub
push
jmp
ffreep
jle
fldt
adc
mov
cmpsl
fstl
mov
sbb
xorb
sub
jl
or
pop
or
sub
cmp
jecxz
ja
popa
out
sbb
push
and
cwtl
fsubl
xor
mov
add
pop
dec
popa
ja
jge
stos
into
add
clc
jecxz
addr16
cmp
inc
push
int
inc
cmp
mov
lock
sar
mov
and
imul
dec
mov
mov
ja
jg
mov
fucompp
ds
or
inc
sub
adc
add
jo
mov
push
sahf
arpl
cli
fldt
aaa
pop
js
xchg
rcll
pop
ret
loope
out
cmpsl
mov
loop
jg
mov
dec
out
lock
sub
pop
dec
sbb
sbb
cmpsb
and
xchg
int
adc
and
push
push
pop
jb
aam
mov
aaa
lock
xor
pop
stc
daa
fs
mov
add
arpl
xchg
xchg
xchg
sbb
enterw
lcall
in
addl
xchg
repz
jp
mov
pop
not
sub
or
inc
dec
cld
and
pop
sarb
out
test
cmpsb
mov
mov
lahf
mov
rolb
jp
ja
inc
sbb
or
sbb
mov
or
test
aad
movsl
push
cltd
sub
outsl
jae
inc
adc
ja
out
cwtl
mov
stos
push
mov
mov
cmp
bound
fwait
push
sub
cmp
mov
jae
jbe
insb
add
mov
ds
mov
inc
std
mov
mov
inc
cltd
or
fimull
popa
movsl
dec
xchg
scas
insb
mov
push
xor
pop
add
xor
or
push
insl
cmpsb
in
xchg
dec
pop
imul
not
adc
hlt
aas
cmp
call
pop
clc
test
push
iret
test
and
out
sbbb
subb
lcall
mov
loop
lods
dec
arpl
xor
repnz
jno
sbb
daa
push
sar
sbb
dec
push
dec
adcb
out
add
jge
inc
aam
dec
aad
adc
pop
jecxz
sbb
jle
fisubl
mov
xor
fdivrs
mov
int3
shrl
data16
jle
lret
mov
xlat
or
pop
mov
je
ja
push
cmp
dec
xchg
mov
adc
fisttpll
data16
mov
pop
dec
sahf
in
js
insb
inc
or
xlat
fwait
pop
and
or
mov
pop
adc
repz
pop
push
jne
enter
mov
lahf
sar
jmp
adc
add
addr16
mov
jno
int3
xchg
inc
cmpsl
sub
outsl
das
into
push
lods
sbb
sbb
pushf
fst
les
popa
fdivrl
add
out
sub
repnz
push
mov
dec
aas
clc
pusha
mov
bound
mov
pushl
jnp
mov
ffreep
xchg
pop
dec
and
fs
add
push
xchg
data16
subl
insl
test
out
movsb
sub
test
sbb
popa
push
pop
xchg
dec
xchg
mov
leave
test
cmpsb
pop
mov
mov
xchg
inc
jge
insl
add
roll
xchg
movsb
in
pusha
js
rolb
xor
sbb
jb
nop
sbb
pop
mov
fsubs
bound
mov
fisubs
add
jecxz
es
cmp
sub
cli
xchg
xor
xor
mov
lea
ljmp
pop
icebp
xchg
push
leave
loope
faddl
add
stos
loopne
loope
push
fwait
testl
lds
icebp
push
xorl
mov
insl
mov
inc
in
push
sti
in
mov
mov
jnp
in
popl
pop
hlt
stos
aam
pop
mov
mov
daa
jno
mov
push
shrl
mov
ljmp
hlt
cmpsl
xor
loop
fisttpll
hlt
cmp
cmc
jns
stos
cli
jbe
xchg
mov
push
mov
das
sub
ss
rorb
cmp
shl
hlt
sarb
push
pop
cld
enter
jg
int
mov
mov
inc
pop
xchg
ds
movsl
pop
iret
sub
and
enter
push
jmp
loop
je
mov
fistpll
pop
outsb
ret
jae
xor
mov
jnp
cmp
repnz
repz
mov
cli
pcmpgtw
sbb
loopne
add
pop
inc
ret
mov
das
lret
loope
addl
jp
movsb
lret
mov
sub
rorl
jo
xchg
sub
imul
mov
sub
leave
aaa
cmpsl
push
xor
cmc
aaa
add
cld
jg
mov
mov
lods
int
ret
inc
jg
inc
rcrb
stos
or
bswap
sbb
or
fstpl
xchg
mov
push
jmp
lcall
pop
test
dec
lods
ret
int3
or
push
lret
mov
cmp
loop
sub
sbb
pop
dec
mov
ja
cmp
stos
adc
int3
xorl
or
lcall
fsub
pushf
mov
stos
sub
inc
mov
or
or
outsl
jmp
lret
jo
fidivs
pop
mov
jno
push
xchg
dec
test
adc
cmpsb
mov
shl
loop
mov
pop
push
add
insl
insb
cs
push
add
add
sub
inc
pop
loop
sub
es
xor
out
push
lcall
push
test
gs
fsubrl
mov
mov
in
imul
add
mov
push
add
cmp
mov
add
loop
loopne
aad
call
outsb
enter
pop
js
inc
mov
jmp
mov
add
pop
sti
sbbb
xchg
jmp
sub
fldl
mov
aam
adc
inc
and
stos
fs
push
lock
add
push
pop
jno
adc
add
call
test
add
mov
insl
lcall
add
out
push
adc
daa
ljmp
jb
pushf
pop
aas
scas
jecxz
mov
inc
test
aad
shl
jo
pop
mov
sbb
pop
sub
xor
jb
push
nop
dec
or
shl
das
or
jb
xlat
dec
in
xchg
dec
mov
bound
cmp
jns
shr
push
mov
cmp
xchg
mov
cmpsb
xchg
aam
fldt
leave
test
fcmovnb
imul
push
rol
pop
dec
mov
ret
aam
cmp
pushl
jo
pop
pop
rorb
cmp
popf
sbb
or
and
and
xor
xlat
out
lods
and
pop
and
int3
xor
mov
loope
ja
sbb
push
mov
stc
xor
movsl
push
popf
push
jp
mov
jmp
bound
iret
mov
mov
sbb
sbb
mulb
inc
mov
int
cmp
rorl
int
mov
into
js
rcrb
pop
fadds
scas
fsubr
push
ret
ljmp
das
out
xor
xchg
push
pop
movsl
dec
xchg
adc
insb
fists
loope
mov
mov
and
mov
mov
mov
das
adc
repz
and
mov
lods
test
cs
adcl
mov
xor
loope
test
xchg
cmp
dec
or
push
cmp
lds
rolb
push
jmp
stos
push
jge
jp
test
mov
bound
jp
xchg
mov
mov
pop
nop
scas
pop
and
add
es
push
ret
popa
jl
mov
ja
int
lret
add
sarl
decb
cmp
loop
lock
addr16
mov
repnz
add
pop
inc
popa
sub
lret
sub
rorl
cmp
mov
das
xor
loopne
sub
jnp
pushf
add
or
mov
fwait
pushf
push
jecxz
push
jns
cld
inc
pop
mov
das
and
cmp
push
push
fbstp
jl
dec
scas
inc
and
ss
pop
adc
out
pop
das
inc
and
call
push
lock
jo
dec
mov
inc
jl
inc
fbld
outsl
xor
hlt
jmp
ljmp
pop
xchg
inc
sub
aas
ja
mov
jne
jmp
ss
aas
jae
cmp
dec
imul
or
xchg
imul
mov
push
or
movsb
xchg
lds
jb
jns
leave
aas
orl
cmp
cwtl
std
ret
xchg
pop
lret
jb
mov
lods
inc
movb
adc
xor
sbb
cmp
ror
ret
fndisi(8087
aaa
dec
lahf
add
cmp
in
push
mov
dec
mov
xchg
fs
or
sbb
inc
repz
lds
and
add
xchg
mov
push
sbb
aad
rclb
jmp
je
xorl
mov
push
lock
dec
mov
lock
xor
push
in
iret
pop
cmpsb
sbb
rolb
mov
pop
call
cmc
dec
jne
xor
jecxz
mov
insb
jg
in
inc
into
mov
push
ret
dec
cmpsl
jle
sti
cmpsb
into
ja
jae
les
dec
pushf
popf
pop
push
out
dec
xchg
std
movsl
in
adc
movsl
mulb
movaps
adc
rolb
fnstenv
xor
cmp
pop
pop
inc
rorl
jae
pop
bound
xor
icebp
push
push
ret
aad
imul
sub
mov
and
adc
jmp
sti
or
je
idiv
fistpll
into
jecxz
fistps
nop
call
aad
add
jae
cs
int3
mov
mov
mov
hlt
pop
aad
das
outsb
dec
shll
es
scas
mul
movl
sti
mov
scas
dec
test
jno
cmc
xchg
push
notb
hlt
mov
pop
icebp
adc
push
jae
adc
cmpsb
mov
rorl
jmp
loopne
inc
mov
sub
inc
outsb
int3
sbb
in
sbb
inc
add
mov
and
cmpsl
fimuls
mov
mov
icebp
fmuls
mov
scas
mov
int3
inc
test
cmp
notb
scas
dec
xchg
jno
ret
and
mov
int3
jmp
adc
cmp
sub
inc
dec
out
out
iret
sbb
xor
insl
push
test
outsl
movsb
cwtl
int
fmuls
int3
fldcw
lods
testb
in
orl
add
add
leave
push
pop
inc
jmp
outsl
shlb
adc
leave
add
imul
jnp
or
mov
mov
arpl
jecxz
jg
push
sub
pop
hlt
and
jns
cmpsb
movhps
xchg
add
jno
sub
push
adc
ja
cwtl
mov
xchg
dec
sbb
jecxz
fwait
outsb
scas
loop
xchg
sub
int
pop
repz
imul
inc
sahf
xlat
pop
arpl
rclb
inc
dec
pcmpeqd
icebp
dec
rorb
and
cltd
fisubs
lret
push
push
cwtl
lods
inc
int
nop
xchg
jno
xor
cs
outsb
je
or
xchg
xchg
or
add
and
inc
mov
and
sbb
mov
pop
pushf
push
xchg
xor
out
jns
jae
fnstenv
inc
sub
enter
adc
adcb
scas
pop
loope
push
mov
mov
xor
repnz
mov
xor
add
mov
aas
mov
lret
outsl
adc
add
pop
pop
dec
testb
lea
xor
lahf
fsubrl
imul
jae
ja
jnp
mov
push
sub
mov
mov
push
xor
xchg
js
clc
imul
pusha
test
adc
leave
stos
pop
arpl
sar
mov
adcl
mov
cmp
sbb
or
xchg
cmpsl
out
lods
stc
lods
es
test
add
clc
cwtl
xor
push
adc
adc
aam
dec
jnp
div
mov
xchg
pop
sbb
dec
in
sub
dec
ljmp
or
xor
jno
dec
xchg
ja
push
or
cltd
adc
add
adc
sahf
imul
ficompl
dec
sub
jmp
rcrl
mov
movsb
out
ja
ja
stc
into
out
lds
out
cwtl
std
repnz
loope
stos
push
andb
js
sbb
jmp
cld
dec
cmpsb
pop
js
adc
push
insl
pop
add
test
or
es
mov
enter
pushf
and
clc
js
mov
bound
clc
testl
addl
in
cmp
cmp
mov
adc
xchg
pop
in
cs
aad
mov
mov
mov
sbb
arpl
lea
xorl
jno
es
mov
faddl
in
dec
sti
jno
fistpll
imul
fildl
pop
cmp
aam
mov
ja
push
lock
fcmovu
ror
push
mov
shlb
enter
popf
push
into
inc
xlat
sub
mov
aas
aaa
push
jno
push
sub
add
jo
subb
jg
or
xor
mov
in
insl
mov
orl
loope
xor
and
pop
pop
into
mov
or
mov
sub
ss
lds
mov
push
cmp
xlat
mov
pop
pusha
cmpsl
mov
sbb
pop
ret
jge
jp
dec
pop
aam
iret
call
dec
out
stos
nop
fiaddl
xor
mov
sub
or
mov
out
jecxz
mov
pop
pop
push
xchg
aad
xchg
cwtl
xchg
movsl
ja
jnp
dec
pop
repnz
stos
mov
pop
cmp
in
ljmp
pop
les
inc
inc
or
fcoml
cltd
pop
and
hlt
mov
sub
std
add
jle,pt
mov
dec
daa
in
jno
pop
fnstsw
bnd
loopne
loop
enter
cmp
jb
rcrl
lret
mov
pushf
push
inc
lret
push
test
orb
clc
ljmp
mov
mov
lock
xor
pop
xchg
sarb
and
sub
cmpsl
mov
ljmp
in
jg
lock
fsubr
dec
add
dec
pop
loop
push
call
imul
mov
icebp
lahf
xlat
std
jl
xchg
sub
movsl
xchg
mov
outsb
ror
cmp
lods
push
movsl
insb
sarb
icebp
data16
sub
rcrb
shll
xchg
pop
or
pop
or
inc
xorl
and
mov
inc
mov
ficoml
cltd
xchg
mov
adc
push
test
jo
data16
stos
dec
icebp
pop
gs
scas
in
or
mov
in
pop
ss
ja
pop
cli
sbb
mov
cwtl
pop
lock
icebp
ret
arpl
popa
shlb
push
jb
sbb
mov
mov
push
cmp
popl
shr
roll
pop
popa
pusha
lock
dec
and
push
cmp
and
jne
jo
popa
test
rcrl
mov
shl
les
dec
or
dec
fnsave
adc
sub
pop
mov
xlat
pop
xchg
popa
add
jne
js
outsb
inc
ret
loop
iret
cld
out
scas
ret
jns
inc
dec
rolb
adc
aaa
push
pop
sbb
sbb
jbe
fdivrl
xor
out
xchg
jecxz
or
jp
mov
jmp
or
mov
cltd
mov
mov
pop
insb
mov
movsb
xor
sbb
xor
jmp
sub
out
sti
sub
clc
mov
insb
subb
pop
jp
hlt
push
dec
xchg
cmc
je
xor
enter
dec
adc
popa
in
pushf
lret
cmp
cmpsb
or
imul
sbb
fnstsw
dec
ret
adc
notb
add
sub
ljmp
xor
lods
inc
pop
xchg
mov
aam
icebp
lret
dec
fistpl
pop
adc
push
mov
mov
adc
pop
inc
bsr
shrl
cmc
jb
ret
aam
lret
xchg
mov
mov
in
xor
pop
movsb
xchg
mov
fldenv
sbbl
out
lret
inc
sub
dec
setle
sub
jmp
fdivs
dec
mov
rcrl
or
and
sub
xorb
fsubs
xchg
idivl
adc
rolb
push
add
and
push
lds
dec
clc
mov
stos
leave
mov
sbb
sti
sub
arpl
imul
fistpll
movsl
fiaddl
pop
sbb
sbb
lret
test
jle
in
jne
pop
loopne
lods
or
dec
pop
xor
scas
jg
cs
mov
mov
jb
inc
inc
adc
xchg
mov
lret
add
sahf
js
lock
fsubs
cltd
add
inc
jns
int
dec
ret
pop
int3
icebp
lock
xorb
jp
adc
cs
pop
aam
leave
jnp
out
je
sahf
not
add
sahf
fistpll
dec
nop
mov
test
xor
add
filds
push
cmpsl
sbb
mov
cmc
push
loop
push
sub
shll
mov
mov
enter
cwtl
ss
imul
imul
in
cld
movsl
in
in
icebp
cwtl
dec
cs
clc
cwtl
rcrl
clc
cli
inc
pop
mov
lds
out
int
cmp
xchg
aas
or
mov
fsts
jle
pop
outsb
push
jmp
add
mov
jmp
cmpsb
lods
cmp
push
bound
dec
mov
or
nop
aam
cli
mov
and
pop
xchg
insl
cwtl
pop
sti
and
jg
rorl
inc
js
mov
lret
ljmp
sbb
sti
data16
and
cmpsl
sub
sbb
mov
jno,pt
add
lret
repz
inc
inc
push
cltd
push
nop
adc
andl
idivl
daa
fwait
cmp
data16
mov
loop
mulb
addl
fsubrl
inc
out
cpuid
sbb
push
cmpsb
leave
xor
test
mov
enter
gs
lahf
inc
add
sub
and
xor
xor
mov
dec
mov
add
inc
in
xchg
fldl
mov
in
divb
jge
inc
inc
cmp
out
add
fcmovne
jne
daa
dec
xor
mov
push
iret
stos
scas
adc
mov
fbld
in
add
in
and
dec
lods
loop
xor
cmp
push
ds
push
mov
in
loopw
mov
and
ss
ss
scas
jns
push
jl
cmp
push
add
push
pusha
mov
cmp
cmpsb
xchg
xor
jecxz
mov
lods
sub
pop
je
add
mov
xor
imul
repnz
and
xchg
arpl
sbb
mov
xor
mov
lods
mov
mov
push
jl
fs
out
ljmp
in
mov
dec
loopew
mov
mov
repz
test
sub
popa
xchg
jl
insb
jge
ljmp
jbe
mov
call
mov
call
nop
test
mov
cmp
pshufw
dec
fwait
clc
or
jns
dec
loop
in
xchg
lods
test
cs
mov
outsl
sub
das
push
pusha
xchg
mov
pop
xchg
mov
call
pop
xchg
add
push
fcomps
inc
insb
ss
nop
xor
inc
cmc
aaa
jbe
add
aam
dec
loopne
sbb
cmpsb
xchg
test
inc
mov
bnd
popa
imul
pushf
pusha
push
imul
popf
and
sbb
push
ficoml
mov
push
jl
pushf
xchg
add
sbb
push
int
jns
stos
addr16
stos
push
into
dec
xchg
ret
stos
jle
add
add
adc
push
ss
jmp
pop
aad
xchg
cmpsl
movsb
push
sub
loopne
cltd
sahf
sti
adc
dec
jae
arpl
mov
mov
movsb
mov
adc
push
xor
adc
push
mov
cmp
js
mov
pushf
add
int3
xor
push
movb
imul
stos
cltd
dec
mov
and
xor
cmc
cmp
mov
sbb
push
cmpsl
push
mov
mov
fistl
and
cbtw
adc
jns
or
int
in
add
xor
xchg
mov
cmp
push
sbb
mov
ja
sub
test
std
test
hlt
push
pusha
jno
stc
aaa
mov
gs
dec
dec
gs
dec
sahf
popl
mov
outsl
insl
push
das
sub
test
sub
jns
mov
pop
inc
shlb
jge
adc
mov
inc
int
dec
andb
fcmovnbe
leave
sub
in
or
cmpsb
test
mov
stos
mov
es
push
cmc
fistl
cmp
clc
inc
ds
rcr
addr16
mov
add
repz
and
aas
and
mov
fnclex
xor
lahf
retw
and
lret
cli
xchg
fsubs
fs
sub
pop
pop
mov
cwtl
popa
mov
xchg
pop
gs
jg
enter
or
jnp
ret
inc
add
mov
inc
mov
dec
pop
sbb
arpl
or
stos
mov
mov
int3
mov
jmp
cmpb
mov
xchg
adc
out
jecxz
xchg
rcr
jp
xchg
or
sub
out
and
imul
js
sub
and
nop
hlt
divb
mov
and
aaa
jl
cmp
imul
int3
ja
sahf
aaa
sbb
mov
sub
fistpll
cmp
in
lahf
and
in
movsl
popa
stc
cmp
mov
push
xchg
cmpsl
jmp
lods
mov
rorl
fidivrl
xchg
repz
push
cmp
sahf
mov
or
or
hlt
jl
cmp
into
push
and
rcrl
dec
pusha
xchg
dec
pop
cmpl
xor
dec
lock
js
rcr
mov
pop
scas
pop
dec
or
iret
outsl
outsb
jle
sbb
jg
mov
push
and
ret
loop
enter
inc
mov
fldcw
imul
pop
call
sti
cmp
lcall
push
arpl
cld
sbb
ss
popa
inc
lcall
add
ss
pop
nop
cmp
fisubrl
movsb
xchg
inc
pop
push
and
mov
adc
sbb
negl
lret
sbb
orb
push
add
inc
pop
fisttpll
pop
adc
jb
mov
dec
adc
mov
sbb
lret
mov
adc
aaa
mov
movsb
add
xorb
jbe
cmp
pop
push
jae
inc
lret
or
imul
cwtl
es
shlb
xchg
in
call
jne
in
xor
movsl
ret
xchg
sbb
arpl
lret
and
pop
lret
aaa
add
mov
jnp
es
movsb
push
cmpsb
shlb
iret
mov
xchg
repnz
sub
daa
or
jge
sbb
jge
fdiv
sahf
mov
fwait
ret
rcll
popf
insl
fs
mov
mov
pop
adc
jnp
inc
xor
mov
and
jmp
adc
js
pop
loope
mov
movsb
test
sahf
insb
and
insl
mov
ja
add
mov
xchg
call
or
jo
mov
fcomi
or
sbb
je
and
cmp
mov
dec
xchg
sub
mov
notl
sbb
repz
daa
sub
pop
stos
dec
int
mov
adc
or
in
movsb
outsb
push
jle
sti
mov
ds
inc
jno
mov
mov
stos
or
aad
ja
clc
fcoms
stos
pop
adc
mov
test
push
stos
shrl
jge
sbb
ret
stos
stos
cmp
mov
inc
xchg
push
ficoml
cs
or
xor
xchg
fildl
inc
gs
jne
push
les
xchg
pop
sbb
stc
push
push
in
movsb
idivl
xchg
push
cmp
iret
mov
aas
mov
xor
mov
out
and
add
loope
sub
add
int3
neg
andb
mov
lea
lock
pusha
xchg
add
mov
push
stc
xor
ss
out
push
sarl
sbb
mov
daa
sub
popa
xor
mov
repz
mov
shrl
loope
mov
adc
xor
jle
push
or
adc
cmp
outsb
push
xchg
scas
pushf
sub
adc
pop
push
pop
jge
mull
fimuls
sub
push
popf
mov
xor
fidivs
fldenv
inc
cmp
xchg
jg
in
leave
dec
cli
push
data16
xchg
push
dec
cld
jno
or
adc
les
add
add
ds
cld
cmp
in
push
sarl
jle
sbb
movsb
mov
ret
xor
fisubl
xorl
cmp
jecxz
cmp
ja
sub
and
ret
adc
sub
pop
jnp
dec
aad
dec
push
in
lea
pop
ss
lods
fildl
shlb
subb
lods
icebp
inc
cmpsl
mov
adc
sarl
scas
and
jp
clc
cmc
aad
mov
les
lahf
xchg
push
nop
xchg
inc
and
cmp
push
and
adc
addr16
xchg
hlt
ret
inc
mov
sbb
xchg
dec
sti
movsb
out
in
sbb
sahf
pop
adc
or
or
and
mov
addr16
movsl
fdivrl
and
sti
and
stos
cmp
out
xchg
pop
or
bound
and
addr16
dec
cvtpi2ps
addl
push
in
cmp
or
sub
jnp
pop
mov
lret
hlt
inc
pop
cmp
and
inc
shlb
sbb
or
lret
enter
dec
inc
mov
out
aam
loope
mov
imul
ds
pop
mov
add
dec
jb
dec
mov
jb
push
sub
sahf
std
push
add
mov
es
nop
pop
test
repz
push
adc
lods
stos
jo
loop
xchg
dec
je
sbbb
adcb
mov
add
jne
or
in
cmp
cli
in
and
jmp
and
xchg
push
xor
pushf
add
js
jmp
cmp
ret
push
enter
cmp
jno
or
xchg
mov
pop
daa
enter
in
das
push
imul
push
test
or
and
stos
pop
dec
pop
jne
xor
dec
jl
sti
pop
inc
lcall
test
fcomi
push
in
hlt
pop
xlat
mov
sbb
nop
jo
sahf
lret
scas
out
sbb
jo
inc
int
xlat
mov
push
xor
dec
xor
lds
cmp
push
mov
call
xchg
lods
cmp
jbe
imul
rclb
pop
xchg
sti
mov
in
and
cmp
inc
mov
in
leave
mov
xor
jns
and
cmp
outsb
in
jbe
jecxz
movsb
fcmovb
jl
xchg
in
xchg
jne
pusha
sti
xchg
and
scas
rcrb
mov
cwtl
adc
push
jge
mov
jnp
jp
push
sub
jbe
sub
lcall
mov
stos
scas
cmp
dec
fiadds
jb
in
xchg
ret
fidivl
adc
push
mov
and
push
mov
ret
popa
in
scas
sahf
and
xchg
xor
incl
jne
mov
int
ret
in
adc
mov
ret
in
pop
ds
push
out
andl
iret
sub
shll
mov
mov
adc
and
and
loope,pt
dec
loop
xor
sti
fiaddl
dec
xchg
jmp
jl
loope
in
pop
inc
ror
popa
fs
fcompl
loopne
cli
cmp
clc
arpl
imul
push
fcomps
xor
aam
sbb
sbb
pop
dec
or
and
out
dec
not
push
stos
push
add
dec
gs
jbe
or
jns
jb
cmp
int
cmp
scas
jp
jmp
mov
jae
fistl
scas
andb
push
pop
mov
fidivl
mov
aam
fstpl
jb
fidivl
das
sahf
xor
cmp
dec
out
sbb
xor
fcom
push
ret
pop
test
pop
pop
adc
push
mov
nop
mov
filds
stc
push
fistpl
in
and
into
cld
jmp
add
dec
fwait
je
mov
hlt
aad
push
iret
test
fimull
outsl
fisubl
inc
or
mov
pop
mov
and
cmp
mov
outsl
enter
stos
out
call
scas
imul
cmp
cmovo
out
into
inc
les
inc
rcrb
add
sbb
or
test
sbb
sub
lods
push
dec
rorl
mov
ret
sbb
cwtl
loop
mov
addr16
or
push
jbe
jl
mov
es
rcl
push
movsl
pop
xchg
push
push
ret
lock
sarb
mov
ds
test
dec
test
add
fidivrs
xchg
lods
ret
arpl
sahf
or
fistl
scas
mov
icebp
push
in
sbb
jne
stos
push
mov
cmp
mov
mov
mov
push
aas
fcom
stc
lock
and
out
adc
or
daa
and
mov
sub
push
xchg
int3
sbb
popf
jp
sbb
pop
dec
cmp
add
cld
enter
dec
iret
std
add
cltd
aas
jge
dec
jne
fwait
mov
ja
xor
stos
sbb
je
cmpsl
loop
mov
or
adc
repz
aad
cli
or
mov
sbb
push
or
int
icebp
pusha
mov
pop
dec
or
stc
dec
rol
xchg
push
add
pop
sub
fldt
and
mov
daa
cmpsl
push
js
aas
sbb
cmp
sbb
push
ss
ljmp
pushf
sub
cld
and
fists
fimuls
std
cs
lods
cmp
mov
rcrb
nop
sub
and
or
mov
movsb
sbb
ljmp
cmp
cli
int3
pop
cltd
loope
lret
sbb
cmpsb
lcall
test
sbb
jno
out
test
fstps
xor
jmp
adc
repz
dec
xlat
add
cmp
xor
sbb
push
adcb
popf
xor
pop
jp
js
stc
sub
aad
push
lret
rcll
in
mov
jnp
sub
or
push
mov
xor
adc
mov
in
xchg
inc
fildl
or
xchg
sahf
hlt
jo
std
jbe
push
rolb
sub
mov
cwtl
fldcw
out
adc
dec
xchg
xchg
mov
pop
popf
adc
xor
pop
add
imul
sahf
jb
popf
imul
movsl
sub
fbstp
jp
orps
das
test
xor
roll
sub
sbb
xor
adc
sub
adc
lods
pushw
rclb
mov
rcrl
dec
adc
jle
jbe
pop
inc
xchg
pop
push
pop
jbe
cli
push
dec
xor
orb
mov
sub
fisttps
hlt
std
dec
bound
add
push
mov
mov
imul
inc
aam
adc
ret
popf
pop
add
dec
add
faddl
add
out
lock
enter
inc
jmp
jnp
pushf
pop
cmp
hlt
out
out
or
dec
mov
xor
jge
lods
fs
flds
lret
mov
xor
xor
rcl
or
inc
pop
imul
add
dec
dec
add
test
rorl
and
int3
stc
adc
jmp
cmp
rorb
push
adc
insb
sub
inc
fldt
mov
out
mov
or
enter
xchg
add
bound
in
call
rcl
cwtl
nop
inc
mov
adc
lcall
fistl
xchg
push
es
out
add
push
sbb
dec
sub
nop
fwait
inc
aad
aad
adc
aad
shll
imul
dec
jae
icebp
inc
jne,pn
imul
xchg
mov
xlat
pushf
mov
addl
and
xor
jle
lret
mov
add
mov
sbb
scas
adc
mov
or
xchg
lcall
mov
push
cld
fstpl
test
popf
sub
xor
ds
test
sub
fnstenv
arpl
in
int3
in
mov
push
sbb
jno
outsl
mov
mov
push
rorl
pop
pop
shl
adc
xchg
in
xchg
inc
std
test
testl
dec
xor
lahf
mov
mov
cmpsl
sti
out
sub
jb
inc
aas
inc
cmpsl
push
and
pop
sbb
xchg
jne
pop
cmpsl
xlat
inc
mov
jge
inc
xor
aas
fwait
sahf
fsubs
mov
sti
mov
inc
jne
loopne
dec
pop
pop
cmc
ret
inc
jl
iret
jno
gs
fwait
incb
dec
inc
fbld
loop
lcall
and
mov
hlt
movsb
jno
push
push
mov
add
or
hlt
jns
stos
test
sbb
outsl
xor
push
mov
lret
adc
adc
push
push
insb
jbe
mov
pop
push
cli
jg
dec
jo
push
push
es
mov
push
popa
loope
adc
xchg
inc
lods
jbe
push
inc
in
pop
scas
sahf
arpl
imul
mov
gs
mov
repnz
or
mov
xchg
or
inc
mov
bound
mov
xchg
pop
mov
cmp
iret
xchg
xor
mov
add
mov
roll
cmpsb
xchg
or
jae
rcr
stos
sahf
lcall
push
call
enter
inc
jl
xor
push
es
xchg
mov
jo
xchg
stos
into
inc
test
lcall
jle
jle
in
xchg
mov
ss
inc
jmp
mov
and
push
and
inc
xchg
movl
jno
mov
mov
insb
cmp
fs
cmp
add
flds
fnstsw
push
ss
int3
pop
pop
mov
sub
mov
enter
ret
call
or
sbb
xchg
push
or
mov
add
adc
test
pop
shll
dec
outsb
fsubrl
mov
mov
xlat
or
inc
mov
lods
adc
cmp
mov
and
ret
add
or
int3
and
test
pop
dec
inc
sub
fwait
mov
and
mov
pop
aaa
in
pop
aaa
push
inc
lahf
icebp
jae
lods
insb
push
jb
aam
jns
into
adc
stc
fnstcw
mov
movhps
ljmp
aam
pop
push
push
add
pop
and
jno
inc
and
lcall
fildll
fimuls
inc
les
xorb
sbb
fsubrl
in
icebp
push
sbb
adc
pop
sub
and
add
sub
xor
push
xchg
inc
fadds
clc
aaa
cmp
xlat
shll
push
rcrb
iret
mov
or
jmp
add
dec
mov
cwtl
or
call
dec
mov
xor
repnz
jecxz
movsb
inc
aaa
jae
push
or
movsl
sti
xlat
hlt
nop
call
lret
popf
jno
dec
jne
xor
mov
or
push
sbb
stos
notl
cmp
pop
mov
mov
sub
pop
fistpll
int3
adc
clc
mov
xchg
push
icebp
notl
in
aas
imul
ret
push
cli
dec
cmp
test
inc
out
adc
enter
in
push
xchg
push
cmc
jge
les
mov
mov
mov
cmpsl
sbb
lahf
mov
mov
sub
inc
inc
jbe
daa
sahf
out
and
bound
aam
ds
cmpsb
int
ret
popl
in
cli
je
pusha
jmp
inc
ret
sub
incb
fstp
inc
loopne
jge
test
dec
mov
call
xor
fsubp
pop
xchg
push
movsb
mov
and
inc
dec
fdivl
dec
push
mov
es
push
outsl
sbb
mov
xchg
and
data16
pop
aas
movsb
add
cmp
xchg
mov
jg
lods
mov
loopne
lea
popa
push
shrl
outsl
and
aam
mov
dec
sbb
xorl
adc
fsubs
fldenv
iret
fidivrs
lret
and
or
cwtl
sub
xchg
push
movsl
lds
or
mov
sub
popa
test
mov
dec
cmp
cld
dec
push
sbb
test
dec
jl
repz
cmp
lret
jns
xor
adc
lds
dec
not
fsubs
cs
cmp
jnp
jne
addr16
in
ror
sub
sub
sbb
jnp
or
sbb
hlt
popa
adc
add
inc
cmc
pop
sub
xchg
xchg
mov
arpl
cld
mov
or
sbb
sub
pop
inc
add
test
jo
call
add
mov
adc
push
loopne
mov
xchg
inc
inc
dec
in
jge
jo
out
in
loope
fsubrl
sbb
lcall
xor
xchg
xor
loop
dec
cld
xor
dec
je
inc
aas
xchg
jae
icebp
testl
call
fs
mov
add
lods
cmp
add
xor
sbb
or
sub
ljmp
pop
out
fmull
call
push
add
and
out
clc
or
adc
fistl
pop
js
es
jmp
lods
fisubrs
ljmp
into
jge
cmp
ret
and
xor
test
cltd
pop
pop
lahf
jae
add
int
pop
mov
xor
out
leave
jnp
int
sub
jns
jnp
lock
dec
push
je
push
push
ret
shrb
cmp
aaa
dec
pop
jge
and
lret
fidivrl
hlt
fnstsw
fiadds
cmp
ljmp
add
sbb
push
rcl
mov
mov
push
pushf
daa
and
mov
xchg
push
stos
mov
mov
push
cmpsl
add
js
lock
inc
fs
xchg
xor
add
and
movsl
lea
cmp
daa
or
in
push
xor
rcrl
aas
inc
xor
add
lea
test
jmp
xor
and
add
sti
or
cmp
popf
xchg
pop
mov
mov
imul
dec
xchg
enter
mov
mov
dec
lret
leave
xchg
in
sub
pop
sub
pminsw
push
addr16
lds
xor
andl
mov
leave
das
mov
mov
cmc
push
inc
pushf
in
icebp
mov
mov
push
jge
jae
loopne
jle
sub
mov
sub
ret
andb
jg
pop
mov
xchg
fs
popf
jmp
mov
test
loope
fnstsw
stos
push
movsl
aad
cmpsl
push
out
pop
sub
stos
push
mov
fdivr
sar
mov
call
pusha
push
adc
gs
xor
xchg
stos
add
sub
pop
sub
mov
sub
xor
cmpsl
loope
cltd
sbb
xor
sbb
fcmovnb
jl
jle
cmp
xchg
dec
adc
mov
shrb
les
dec
xor
shll
out
sbb
leave
push
push
or
decl
xor
ds
shrl
lock
and
mov
dec
jle
push
out
cwtl
and
and
jbe
push
imul
jg
xchg
dec
pop
cld
lret
mov
mov
push
xchg
mov
adc
cmpsl
gs
add
and
stos
mov
cmp
xchg
lea
cld
push
pop
sbb
sbb
pop
jnp
cli
dec
xor
not
jb
jo
fistpl
out
mov
mov
xchg
jno
cltd
or
fsubrs
jo
pop
int3
aam
aas
inc
xchg
sbb
push
sub
jb
inc
or
xor
mov
xor
cli
outsl
aaa
ret
icebp
out
jo
xor
inc
lock
ja
mov
pop
cmc
call
or
je
lcall
pop
in
insl
sti
mov
add
jle
icebp
and
and
push
xor
fsts
inc
xor
inc
add
pop
in
push
adc
enter
stc
shll
lahf
push
jecxz
cli
repz
loopne
outsb
jno
gs
clc
inc
inc
pop
cmp
adc
sbb
into
ret
imul
aad
inc
mov
jo
incl
xchg
add
sbbl
cmc
cmp
popf
jno
jg
hlt
xchg
dec
pop
mov
push
inc
aad
call
fistl
inc
adc
stos
shrl
div
sbb
adc
hlt
push
xchg
jge
hlt
pop
repnz
mov
pop
adc
loope
dec
imul
fwait
pop
xchg
mov
pop
pop
adc
dec
pop
hlt
mov
jnp
push
mov
lret
cld
push
fcoml
push
jmp
or
dec
pop
pushf
mov
mov
push
lcall
cltd
fcomp
in
nop
xchg
js
jl
mov
mov
mov
jns
or
lods
mov
sbb
ret
sbb
sahf
insl
mov
in
add
imul
adc
inc
cwtl
lock
add
rol
repnz
into
inc
lea
adc
xor
dec
stos
mov
lods
loopne
push
repnz
push
cltd
xlat
xor
mov
pop
xchg
pushf
fcmovu
jns
add
sub
pop
and
adc
repz
jae
xor
stos
outsl
xor
shr
faddl
test
push
push
mov
dec
jmp
add
cmp
sbb
pop
inc
pop
or
sub
pop
or
ds
test
sub
jb
cmc
add
add
fsubr
pop
scas
jle
data16
mov
or
cli
xchg
rorb
push
fldenv
pop
loope
add
xchg
xor
mov
loope
mov
xchg
popa
movsb
mov
shrl
jbe
jae
insl
add
pop
pop
fstpl
mov
xchg
loope
mov
fiadds
and
mov
sbb
pop
loopne
aad
icebp
inc
bound
inc
filds
lods
push
les
je
and
dec
ret
gs
jecxz
or
aas
mov
fninit
dec
push
xchg
mov
lahf
or
test
rclb
and
icebp
jl
dec
int
push
adc
push
push
push
sub
inc
fucomi
lods
lcall
iret
ja
mov
subb
pusha
or
arpl
popa
mov
xchg
dec
pop
rolb
inc
loope
xchg
lds
or
in
popf
loopne
and
rolb
pushf
aam
sahf
fwait
sti
dec
repz
lahf
mov
cltd
in
movsb
or
pop
js
lcall
and
into
or
ss
enter
add
fidivrl
push
and
xorb
mov
jle
dec
push
fadds
fildl
inc
inc
nop
sub
test
and
push
pop
in
popa
daa
xchg
adc
cmp
jg
or
xor
pop
icebp
cmp
and
push
ret
push
pop
fidivrl
jns
je
lods
jmp
add
lock
mov
push
ljmp
jle
push
lret
jnp
push
dec
inc
lfs
rcll
insl
mov
jbe
sahf
stc
or
nop
add
popf
inc
adc
lret
insl
jo
roll
shl
xchg
mov
push
cmp
lods
push
pop
mov
movsl
in
mov
jmp
pop
dec
xchg
xor
nop
xchg
cmc
mov
in
testl
test
or
shrl
cmp
cld
js
mov
jmp
or
orb
icebp
cmpsb
mov
mov
cli
and
test
dec
stos
pop
ja
jb
cltd
shrl
jecxz
xchg
dec
sub
outsb
mov
adc
pop
dec
dec
out
xor
sbb
cmp
mov
in
mov
in
jmp
and
jp
add
ja
mov
xchg
push
sbb
jecxz
dec
xchg
pop
vmwrite
lods
pop
and
sbb
jae
fdivr
and
mov
leave
sub
test
sub
faddl
sbb
adc
decb
lock
rol
pop
shrl
inc
addr16
hlt
aad
ret
sbb
movsb
sbb
dec
std
mov
das
add
inc
or
clc
jge
inc
jno
loop
mov
je
out
jl
ret
js
loope
pop
mov
in
cmpsb
movsl
cwtl
hlt
inc
dec
iret
dec
xchg
fsubrp
cmpl
faddl
rcr
sti
or
push
jae
or
outsl
stos
mov
js
lods
xchg
aam
fcmovne
adcb
test
xchg
xchg
daa
repnz
lock
jl
cmp
notb
dec
fisttps
addr16
test
or
cmp
mov
fistpl
movsl
arpl
fidivrl
sarb
xchg
push
stc
js
mov
or
cld
cltd
add
mov
xchg
cld
clc
xchg
lock
xchg
mov
adc
call
aas
fistl
xchg
sbb
inc
imul
and
imul
stc
push
mov
adc
aad
aas
in
push
cmpsb
repz
dec
mov
sbb
hlt
lret
inc
out
and
or
popf
shr
mov
roll
adc
mov
aad
mov
inc
jae
cmp
sbb
mov
sub
scas
mov
sub
jo
jge
out
jp
xor
sbb
mov
fidivs
ljmp
shll
inc
repz
xchg
push
pusha
and
push
mov
mov
inc
adc
jo
arpl
rcrb
popf
jle
loope
imul
cmp
repnz
cld
jle
out
push
or
xlat
push
shll
sahf
add
cs
push
mov
outsl
in
stc
addr16
or
lret
pusha
fiaddl
push
icebp
jno
dec
sahf
jb
sbb
xor
scas
mov
mov
addr16
lds
movsl
pop
xlat
xlat
jno
aam
dec
dec
sbb
ret
sub
mov
sti
cli
movsl
inc
sbb
cmc
xchg
out
sbb
pop
mov
repz
cmp
leave
out
cmp
out
or
or
test
lcall
subb
sub
movsl
jo
jecxz
loop
and
rorl
jno
cmp
pusha
mov
inc
push
dec
adc
and
add
cmpsl
jno
push
mov
mov
pop
xor
jle
popa
push
sbb
jecxz
inc
dec
insb
lock
pusha
icebp
jns
das
jecxz
jae
lea
inc
mov
add
ret
int3
mov
int
jns
push
aaa
mov
add
movsl
aas
push
jae
lock
mov
push
mov
dec
ds
push
cmp
int
mov
jl
jl
cld
push
sub
sbb
mov
roll
test
in
fwait
imul
repnz
sbb
callw
sub
sbb
out
adc
insb
mov
dec
xor
mov
test
test
pop
gs
lcall
mov
js
xchg
and
mov
inc
dec
push
push
out
sbb
dec
jg
clc
js
stos
leave
movsb
inc
movsb
push
add
dec
and
push
mov
inc
and
addl
fadds
jno
mov
push
pop
mov
xor
xchg
imul
in
scas
or
adc
mov
jl
out
push
imul
pop
inc
mov
out
hlt
fidivrs
ds
fildll
and
into
jnp
jl
inc
lea
push
jmp
cmp
mov
push
and
inc
sbb
mov
mov
scas
inc
adc
mov
testl
lcall
pop
mov
sbb
dec
dec
pop
mov
test
push
pop
negl
mov
xorl
in
in
lahf
aaa
insl
repz
popa
mov
adc
sbb
aad
sbb
mov
inc
jne
popa
push
push
push
dec
aad
pop
sub
xchg
pop
call
mov
or
adc
xlat
cwtl
pop
enter
fsubp
mov
inc
std
pop
fldenv
cmp
outsl
xor
aas
loop
test
aaa
movsl
icebp
popa
mov
sbb
int3
sti
clc
cli
mov
and
sarb
add
insb
cmpsb
fucomi
mov
sbb
pushf
fwait
mov
pop
sub
repnz
jecxz
loope
dec
into
xchg
bound
out
sbb
insb
jecxz
out
jge
lret
pop
mov
cmp
inc
mov
clc
jnp
adc
xor
mov
dec
or
in
inc
push
xchg
pop
inc
incl
in
sbb
out
sar
xchg
scas
mov
push
pop
jae
les
dec
lret
pop
cwtl
xchg
pop
call
mov
dec
fistps
sbbl
and
pusha
shll
inc
pop
push
fcoml
inc
sti
add
mov
and
cltd
aaa
out
scas
js
mov
cmp
fldcw
push
mov
adcb
add
aaa
push
std
aas
cmp
leave
push
and
nop
in
xor
loop
les
fsubs
aaa
jmp
out
pop
pop
mov
adcb
leave
push
les
xchg
jne
fld
mov
dec
cwtl
or
fimuls
je
cld
cmc
xor
hlt
add
sub
fbstp
jno
inc
popa
in
lods
adc
hlt
cmc
scas
es
scas
push
mov
fstps
adc
call
xchg
lret
dec
pushf
xor
inc
mov
mov
inc
les
jno
cmpl
popf
xor
xor
mov
pop
or
push
int
arpl
or
cmp
add
add
ja
jnp
stc
push
fs
mov
pop
xor
cmp
xchg
bound
mov
int
pop
int3
inc
int3
ljmp
aad
mov
fimull
add
lret
cwtl
mov
aaa
dec
push
xchg
pop
dec
ds
mov
shll
scas
cs
testl
xchg
cmp
subb
jmp
push
xchg
bound
je
jmp
pop
push
jmp
adc
sahf
sbb
cmpsl
adc
sub
push
mov
js
ljmp
mov
subl
mov
lcall
nop
loope
outsb
out
mov
shrb
inc
fstps
pop
jp
pop
stos
mov
sbb
mov
in
outsl
push
jne
sahf
sahf
mov
call
cs
push
sbbb
jb
test
lahf
daa
mov
push
xchg
stc
sbbl
push
jl
imul
inc
sbb
sbbl
xor
cmp
mov
xchg
push
daa
jns
pop
nop
push
in
cwtl
xchg
sbb
lods
lret
cmp
push
lret
jnp
push
sahf
sahf
movsl
jnp
mov
add
inc
hlt
decl
sub
cmc
gs
lret
xchg
insb
outsb
lods
int3
pop
adc
or
and
pop
jg
adc
add
xchg
imul
cmp
mov
jge
xchg
push
fdivl
or
jp
shrl
push
inc
adc
out
arpl
mov
mov
push
fldcw
mov
xorl
cmp
sbb
jno
and
xchg
push
call
and
pop
inc
push
or
test
in
fwait
cmp
mov
stc
adc
jo
push
dec
rol
add
cmpsl
fildll
adc
ljmp
nop
test
jecxz
test
daa
adc
sbb
xchg
dec
adc
cli
fs
in
mov
je
roll
xchg
sub
bound
fcompl
sbb
test
xchg
sub
mov
jl
out
push
sbb
aaa
xchg
addr16
call
dec
imul
sub
mov
and
in
sub
mov
fistpl
xor
les
lret
mov
push
mov
mov
sbb
out
enter
fcom
arpl
aam
in
pop
sbb
lods
les
pop
fs
lea
sub
adc
sub
inc
cltd
aas
inc
lret
imul
pmullw
or
sub
or
mov
sub
ss
movsl
loope
shlb
sar
imul
xlat
lcall
daa
ja
pushl
cli
in
nop
movsl
pop
mov
jl
mov
jae
jl
mov
push
fistpl
hlt
adc
push
in
sahf
mov
les
and
sub
test
shll
mov
sti
xchg
ret
pop
outsl
push
jl
mov
lods
lcall
cld
jae
cli
addr16
rcll
int3
inc
ds
jno
movsb
jno
out
fisttpll
dec
lea
mov
jno
push
xor
adc
jmp
gs
fistl
jae
sarb
dec
sarl
stc
add
das
in
aam
repnz
add
loop
int
adc
cli
sub
sti
sbb
xor
sbb
xchg
dec
push
test
fadds
mov
and
js
sub
lea
push
lock
mov
aaa
or
shrl
add
jb
dec
jp,pt
xchg
movsb
cmpl
cmp
xchg
cltd
mov
into
inc
mov
into
mov
jb
inc
test
decl
adc
mul
mov
mov
daa
mov
jo
mov
mov
outsl
test
scas
cli
lret
push
dec
mov
pop
xchg
in
inc
sub
js
ja
pop
mov
movsb
xchg
or
mov
pop
dec
sbb
sbb
in
in
aaa
mov
sbb
data16
mov
or
xchg
dec
in
negb
add
dec
push
sub
sbb
jne
mov
xchg
mov
pop
pop
add
xchg
push
xchg
rolb
pop
adc
mov
pop
sbb
dec
xor
imul
inc
pop
cmp
inc
xchg
popf
pop
sbb
xor
push
jge
jl
adc
mov
daa
ljmp
mov
mov
cli
adc
dec
test
sub
mov
add
aam
inc
inc
add
imul
cmp
or
mov
adcl
push
mov
arpl
jle
fisubrl
fisttpll
je
push
aaa
jb
bound
mov
cld
in
aas
cltd
mov
sbb
pop
adc
pop
add
sbb
pop
test
xor
lea
xchg
adc
or
aam
es
xchg
insl
xchg
sub
sbb
rclb
test
inc
test
sti
std
cs
out
add
xchg
int
loop
jp
lahf
fistps
cli
sarb
fisttps
imul
jp
mov
lret
mov
sub
sbb
popa
and
int
icebp
call
inc
add
lods
je
dec
add
rcll
leave
test
out
xlat
idivl
sub
in
adc
aas
sbb
push
sbbb
add
pop
and
fwait
xor
hlt
pop
mov
in
add
test
arpl
pop
ror
sub
pop
add
aas
sbb
mov
jecxz
rclb
fldenv
pushf
es
fdivl
int
sahf
or
jbe
fs
mov
mov
jns
dec
int
imul
pop
mov
sbb
pop
and
sub
loope
fdiv
out
mov
and
out
xor
xor
adc
fdivl
sbb
mov
jbe
cmc
xor
clc
and
xchg
in
push
inc
enter
pop
xlat
and
insw
test
cwtl
lahf
pushf
in
mov
test
cltd
push
or
addr16
cs
pop
out
jnp
xchg
ja
ret
mov
sub
test
iret
ret
mov
bound
jnp
dec
xor
cltd
lods
daa
clc
aas
dec
icebp
push
int
jmp
push
jne
rcrb
dec
out
mov
jns
inc
mov
addl
pop
into
je
push
sub
icebp
jl
icebp
stos
mov
cmp
pop
sub
out
loopne
add
sub
xor
or
dec
lods
pop
or
outsb
into
cmp
xchg
mov
stos
test
cli
inc
adc
jne
fs
sub
mov
arpl
in
xlat
sbb
leave
pop
jbe
mov
cmp
outsb
mov
fs
push
cld
clc
cld
xchg
loope
sahf
ds
dec
into
or
addb
sbb
lods
ds
or
add
push
loopne
scas
mov
test
loope
lcall
iret
add
push
data16
cli
cld
es
sbb
addl
xchg
cmpsb
jecxz
mov
sub
movl
sub
pop
add
push
aaa
and
xchg
push
inc
arpl
jp
js
push
push
xor
mov
pusha
loopne
js
push
fistpl
lcall
mov
jg
sub
xor
int
scas
push
push
ljmp
fwait
push
mov
jg
shr
or
movsl
loope
mov
fists
or
inc
add
loop
jmp
inc
sbb
mov
push
fsubs
ds
xchg
dec
cltd
push
cmp
cmpsl
shlb
and
mov
jb
daa
sbb
mov
xchg
mov
std
repz
ja
inc
pushf
lret
cmc
xchg
gs
scas
pop
mov
gs
in
inc
jle
shlb
out
or
sbb
js
stos
rclb
in
clc
popf
mov
in
mov
js
sbb
mov
in
in
xor
fmulp
adc
add
sbb
sub
pop
jbe
mov
add
stos
test
jne
pop
and
icebp
push
fldl2e
aaa
insb
rcl
arpl
cs
jmp
lret
imul
and
jg
pop
loopne
cmp
or
out
xchg
or
ja
fidivs
arpl
enter
dec
push
mov
ficoml
jne
push
addr16
outsl
jmp
mov
pop
cmp
loopne
repz
dec
dec
cmp
cmp
xchg
jle
xorb
jbe
push
cmc
and
mov
outsb
and
inc
ror
adcw
dec
movsl
iret
shlb
sarb
mov
jle
mov
dec
gs
ds
and
dec
fistpll
cld
jmp
std
call
sahf
insl
mov
sbb
arpl
sub
mov
cmp
or
rorb
loop
jns
mov
enter
cmpsb
fs
or
jp
inc
xchg
pop
dec
pop
push
xor
cwtl
jbe
add
push
sti
push
loop
mov
or
dec
mov
pop
cmp
cmc
int3
rorl
and
popa
mov
dec
aam
pop
inc
inc
jle
mull
icebp
ret
push
lret
push
jecxz
adc
shrl
dec
movsl
mov
test
dec
out
ret
sbb
clc
stos
jo
add
sbb
lea
pop
stos
bound
out
hlt
adc
and
adc
dec
lock
cmpsl
xchg
cmp
xor
add
sub
xchg
fbstp
pop
mov
fcos
push
call
stc
sbbl
mov
fnstenv
scas
scas
int3
les
push
int3
dec
inc
pop
pop
xchg
dec
out
daa
inc
test
rcl
dec
xlat
xor
lahf
mov
jmp
cmpsl
jae
mov
scas
cmpsl
jb
movsb
in
sbb
int3
sbb
aam
jns
fsubr
jl
cmpsb
sub
lret
jne
mov
jbe
icebp
mov
scas
ja
inc
insl
loopne
out
push
mov
ret
or
add
cltd
or
push
dec
mov
adc
dec
test
ja
lods
mov
pushf
je
cmc
sets
popf
fimuls
mov
cmp
ja
mov
cmc
sbb
popa
or
out
and
jg
inc
imul
arpl
sub
mov
out
mov
push
js
in
fidivrs
shrb
fisubs
scas
inc
data16
cmp
mov
loop
push
in
pop
push
je
ficomps
xchg
inc
pop
sbb
and
jg
mov
mov
aaa
sub
jmp
xor
jnp
es
pushf
inc
xor
pop
and
mov
dec
test
add
mov
arpl
jb
out
sbb
shl
movsl
fcomip
aas
aaa
jbe
sbb
or
adc
xchg
es
xchg
dec
stos
imul
or
rorl
imul
decl
mov
push
and
xchg
mov
imulb
lea
jae
out
and
xchg
jno
in
dec
or
scas
jg
insb
pop
push
jnp
roll
nop
dec
push
mov
repnz
rorb
loop
cmc
sbb
fdivs
jae
jle
cmp
pushf
sub
mov
or
cltd
mov
xor
leave
sub
mov
sarb
inc
icebp
jne
push
pop
fcoml
mull
movsb
push
mov
out
out
or
pusha
push
push
sub
fwait
mov
adc
das
bnd
loop
jmp
dec
mov
sbb
dec
inc
imul
cld
or
sbb
xor
mov
push
jne
cld
je
je
fisubrl
push
hlt
cmc
mov
shll
jp
loop
pop
daa
push
lds
pop
imul
xlat
adc
sahf
jl
adc
adc
inc
out
push
fnstsw
adc
shlb
push
addb
cltd
scas
out
mov
cmp
xor
in
mov
aad
lcall
fwait
push
pminub
movsl
lret
or
shlb
and
jnp
leave
inc
or
xor
adc
mov
andb
test
testl
push
xor
xchg
ficomps
test
inc
sbb
cmp
inc
lahf
nop
lds
pushf
call
movsb
cmp
out
insl
into
in
add
stc
gs
iret
xor
and
sbb
jbe
pop
mov
call
fcoml
jl
jl
or
jmp
mov
mov
or
sti
push
jg
scas
imul
mov
xor
pop
push
aaa
lds
dec
and
test
xor
dec
fnstsw
enter
xchg
mov
mulb
mov
shrb
xchg
add
push
or
incb
pop
pop
ds
pop
xor
push
ds
mov
movsl
out
dec
or
mov
in
push
cmp
dec
mov
mov
xlat
dec
movsb
mulb
xor
stos
fsubrs
jo
mov
jno
push
inc
daa
outsl
das
xlat
sbb
ja
sbb
xchg
fsubl
dec
hlt
and
mov
popf
pusha
jg
dec
add
cmpsb
in
or
add
addb
js
xor
xchg
jo
out
mov
xchg
loope
mov
ffreep
movsl
jne
mov
ficomps
inc
pushf
gs
mov
adc
sub
movb
ds
push
adc
adc
cmp
inc
pop
push
mov
pop
push
sti
out
dec
jp
lcall
pop
daa
adc
nop
xchg
jecxz
pusha
in
ds
arpl
mov
dec
xor
jnp
sbb
and
aas
int
lret
sub
outsl
cmp
fdivr
pop
addb
imul
inc
in
adc
push
mov
pop
bnd
mov
mov
jno
hlt
int3
sbb
insl
test
dec
xor
add
inc
pop
mov
xor
jns
mov
push
lods
popa
add
push
aaa
jmp
hlt
or
loop
lret
icebp
fstpl
or
adc
popa
jmp
adc
jge
xchg
repnz
mov
push
xchg
decl
ja
sbbb
mov
mov
sar
imull
sub
sub
jp
mov
movsl
in
or
adc
std
loopne
add
pop
jae
pop
pop
bnd
cmp
fistpll
pop
or
adc
or
into
push
loop
iret
dec
jge
cmovb
push
xchg
or
lcall
insb
cmp
dec
ffreep
push
pusha
ret
and
jecxz
add
xchg
enter
adc
mov
sarb
jle
sub
xchg
add
inc
jmp
mov
xchg
pop
jecxz
xchg
xor
aad
adc
or
mov
lret
nop
push
jg
jbe
lret
push
cmpsl
jo
push
jns
mov
insb
incb
sbb
mov
dec
push
xchg
testb
pop
cmc
cmp
ror
shr
and
mov
adc
sar
in
push
mov
fisttpl
call
filds
orl
mov
sbb
fbstp
adc
lock
push
in
stc
mov
pop
subb
shll
shll
cmp
clc
mov
stos
push
das
lahf
out
dec
cmpsl
dec
inc
hlt
push
leave
or
jmp
xchg
or
hlt
cmp
mov
xor
push
das
es
jo
inc
jg
icebp
movsl
sub
insl
xchg
ljmp
jno,pt
lods
or
ret
scas
ja
lahf
stc
push
inc
rclb
outsb
ljmp
lods
push
add
or
dec
pop
adc
fisttpl
mov
mov
pop
jecxz
xor
xchg
xor
incb
data16
cmpsl
jnp
fs
push
jo
mov
insl
cmc
int
add
pusha
gs
repnz
cld
fstpt
stc
addr16
sub
int
mov
leave
stos
addr16
push
mov
xorb
or
jg
mov
in
into
idivl
iret
leave
fnstcw
or
ret
push
xchg
mov
xor
rorl
call
call
in
mov
mov
leave
lods
rol
push
mov
add
out
mov
out
or
xor
stos
imul
scas
rcll
lret
xchg
adc
arpl
popf
sbb
add
xchg
rcrb
jmp
gs
inc
mov
fistl
fiaddl
pop
sub
jno
mov
out
mov
mov
hlt
dec
cmc
bound
cmp
mov
ds
dec
data16
jp
int
mov
loop,pt
shl
xchg
dec
ficompl
xorl
aas
in
shl
stos
roll
pop
jnp
adc
aad
into
cli
nop
bound
pop
movsl
cmp
adc
jg
dec
outsl
jnp
movsb
js
out
adc
fnsave
jne
xchg
clc
shl
push
in
out
fldt
pushl
mov
outsl
xor
sub
scas
out
xor
inc
in
inc
out
mov
scas
pop
pop
je
sub
mov
lret
aaa
aaa
fistpl
sub
dec
stc
or
push
mov
jg
dec
xor
in
ds
fidivrl
xor
pushl
cwtl
pop
shr
xchg
cmpsl
xor
pop
add
cmpb
jp
subb
cmp
clc
lods
and
nop
in
jno
sub
test
loopne
cld
dec
add
jl
leave
jnp
cltd
hlt
insb
scas
leave
psubsb
ds
hlt
push
pop
cmpsb
js
pop
fistl
hlt
in
push
je
push
lock
push
and
stos
popa
pop
pop
mov
arpl
push
sbb
out
out
sub
mov
ss
popf
orl
inc
xchg
test
sbb
jne
pop
mov
int3
leave
mov
cs
ret
sbb
sub
add
sbb
insb
lods
popf
mov
bound
fsts
inc
loopne
pop
test
sbb
imul
pop
cmpsb
shrb
mov
iret
lahf
mov
sbb
std
andl
sub
sti
sub
pop
cmp
repz
mov
lods
test
pop
bswap
stos
sarb
xchg
mov
mov
xor
sti
push
daa
and
jg
pop
mov
dec
cmp
push
pop
xchg
jns
icebp
scas
test
xchg
or
ss
adc
repnz
xor
or
ljmp
cmp
sub
cmpl
xchg
adc
dec
daa
mov
sti
test
inc
out
ror
sub
pop
pop
jle
sub
xchg
xchg
mov
or
push
ret
dec
movsl
xchg
cli
filds
test
pusha
sub
rorb
push
xlat
mov
sub
in
or
imul
sub
stos
add
pop
int
mov
inc
roll
xor
mov
or
inc
daa
out
out
dec
into
add
add
fs
or
jae
or
scas
push
divl
fisttpl
pop
fnstsw
dec
cmpsb
xlat
inc
pop
ficomps
add
lahf
adc
push
repnz
ss
cltd
fcompl
mov
mov
jg
xor
in
lcall
repz
pop
clc
mov
push
push
or
cmc
popa
adc
scas
xchg
out
adc
adc
aam
xlat
mov
test
enter
xor
inc
lcall
mov
lret
aaa
les
sahf
les
mov
inc
nop
mov
xchg
mov
push
fdivl
out
pushl
imul
fstl
cmc
pop
pushf
pop
js
scas
test
clc
inc
mov
jge
jb
cmpl
adc
decb
adc
and
push
jnp
cmp
mov
push
cwtl
jbe
ret
orl
or
mov
ret
cld
inc
xchg
sahf
adc
push
add
adc
mov
stc
shlb
ret
ffreep
insb
cmp
push
pop
nop
or
and
addr16
in
and
mov
cltd
xchg
rclb
xchg
fwait
fwait
or
xchg
shr
inc
xor
sbb
xchg
or
rolb
dec
mov
sahf
mov
pop
cli
mov
hlt
in
sub
loopne
jno
adc
mov
jae
mov
popf
push
shlb
mov
fcomps
add
call
les
mov
inc
lahf
cmp
mov
frstor
leave
aas
mov
mov
xlat
cwtl
jp
dec
ds
lods
cmp
out
call
sbb
leave
jbe
jmpw
sbb
push
outsl
xchg
push
mov
jecxz
add
out
inc
push
adc
ja
xchg
add
test
mov
ffree
cwtl
sub
pop
mov
mov
push
pop
or
and
pop
inc
stos
xor
mov
scas
in
out
mov
testb
aas
mov
jp
fimull
fadd
xor
clc
xchg
movsl
xor
les
pop
inc
cmp
add
sub
loope
lock
add
cli
cltd
sub
add
sbb
scas
fimull
push
iret
xchg
xchg
cmpb
movsb
jge
push
xchg
lcall
int3
test
xor
add
jge
sub
pop
mov
jne
mov
daa
je
sub
das
jg
sbb
sarb
cmp
cmc
push
pop
aam
and
shrb
xor
cli
pop
xchg
pop
jns
fnsave
xchg
arpl
xor
add
out
sbb
mov
inc
iret
jge
es
mov
or
jo
push
lahf
dec
sbb
test
shlb
or
mulb
in
imul
dec
fmul
divl
lcall
cwtl
xchg
enter
stos
mov
out
ja
and
dec
les
lods
out
inc
bound
rcrl
mov
aad
icebp
xchg
or
fs
sbb
scas
fcmovbe
mov
aam
pop
inc
adc
and
cmc
aad
arpl
or
xchg
adc
mov
repz
cld
dec
das
dec
cmp
faddl
sub
test
cmpl
sub
jp
pop
push
js
mov
sub
out
jns
add
adc
and
and
pop
cmpsl
mov
xor
or
add
outsb
mov
lret
es
inc
mov
call
insl
mov
mov
jnp
push
jns
xor
insb
mov
in
xor
jae
push
incl
outsl
pop
cmp
push
xor
outsl
pop
and
sbbl
stos
fidivrl
jne
or
push
pop
mov
subb
clc
lcall
dec
jp
adc
je
leave
sbb
xor
leave
pop
mov
fnsave
addr16
and
pop
xchg
test
lea
mov
out
std
lcall
sbb
push
pop
or
mov
std
aam
lret
xchg
adc
pop
push
gs
cld
cmp
inc
xchg
xchg
in
out
fwait
xor
and
sub
test
ret
sti
cmp
sbb
out
inc
je
les
divb
lods
jmp
pop
adcb
pop
mov
hlt
ficompl
pop
ss
jb
nop
ljmp
in
jmp
pop
out
and
ss
cwtl
mov
call
repz
mov
out
sbb
repz
cmp
or
jmp
and
or
aas
cmp
inc
inc
lahf
add
test
in
jb
push
mov
sub
leave
mov
pop
xchg
or
push
rolb
sub
popa
lret
push
push
sbb
sub
f2xm1
decb
sbb
inc
dec
or
scas
inc
inc
or
xorl
arpl
mov
and
jl
bswap
push
in
cmp
jo
mov
jns
push
dec
inc
xlat
cli
ja
pop
popf
addr16
cld
mov
jge
mov
in
iret
add
ret
ds
pop
xlat
jne
sbbb
lret
jno
adc
repnz
es
test
xor
dec
test
lret
or
cmp
adc
comiss
das
insb
fisubrl
fisttpll
pop
inc
inc
punpckhdq
dec
mov
push
insb
imul
ss
xchg
fnstenv
out
dec
add
idivl
aaa
sbbl
adc
sti
sbb
jmp
fbstp
push
and
inc
nop
shr
inc
out
dec
fdiv
mov
push
and
or
inc
xchg
iret
push
adc
pop
mov
test
xor
das
push
cmc
insb
or
outsb
adc
loop
leave
cmp
stos
scas
inc
sbb
out
jecxz
add
sub
cli
cwtl
rcrb
flds
cwtl
add
sbb
mov
ds
adc
pop
clc
lret
mov
lret
or
push
lea
push
and
pusha
or
cwtl
lock
xor
test
jne
loopne
aad
pop
or
cmp
mov
sbb
fwait
movsb
mov
push
pop
scas
cmp
jns
out
sbb
push
mov
dec
gs
mov
out
leave
fwait
lods
dec
pop
push
push
xchg
mov
notb
scas
mov
push
into
nop
xor
and
xor
pop
sbb
into
cmpb
add
xchg
add
iret
adc
scas
adc
jmp
sarl
xlat
out
rcr
cld
div
adc
outsb
test
mov
sbbl
gs
jecxz
sbb
fs
fwait
loopne
pushf
inc
ja
jne
insb
pop
push
or
xor
or
jl
xor
fdivrs
push
fsubrl
subps
dec
popf
mov
jge
push
add
jae
lret
stos
imul
mov
bound
inc
mov
jmp
lea
cwtl
inc
out
ljmp
sahf
int3
cmp
add
xchg
rcll
fs
pop
adc
push
popf
in
popa
into
subl
daa
jno
add
stos
scas
roll
outsb
repnz
std
mov
in
cmp
and
mov
movsl
and
enter
ret
out
stc
inc
mov
cmp
in
mov
sbb
and
xor
xor
pushf
es
mov
add
mov
cmp
cmpsb
cmpsl
pop
test
aaa
bound
les
jle
movsb
int
lods
xor
dec
cmp
lret
dec
lret
call
mov
je
mov
divl
dec
jns
jbe
add
push
out
jo
mov
push
xor
hlt
enter
shlb
fmuls
sbb
cmpl
out
outsl
jbe
and
clc
xor
push
iret
test
jb
pop
cmp
out
adc
push
faddl
dec
xor
add
mov
fdivrl
push
leave
test
jp
adcl
fdivrp
pop
insb
fwait
pop
mov
cmc
pop
insb
dec
daa
pop
pop
lret
mov
cmpsb
andb
insb
cmp
les
mov
test
xchg
push
cmpsl
mov
mov
xchg
sbb
icebp
sti
aas
sub
shll
stc
jo
and
in
push
push
rorl
out
pop
xchg
add
ret
cld
sarl
sub
aas
add
push
and
sbb
sub
popa
lahf
nop
xchg
mov
xchg
mov
into
loop
aad
scas
or
mov
addr16
mov
sbb
in
fsubrl
mov
sti
lcall
pop
xorb
leave
test
fcomip
push
je
addr16
jae
fdivs
insw
lret
insb
push
add
xchg
fistpll
ljmp
shrl
aaa
rcr
xorl
cmp
lock
xor
aad
push
out
lods
cmp
loope
and
ret
mov
xlat
pand
es
push
mov
push
pop
leave
mov
dec
jns
adc
rolb
dec
adcb
sbb
mov
sub
jbe
call
addr16
adc
jne
mov
out
adc
stc
das
inc
mov
and
sahf
xchg
clc
insb
cwtl
loope
ja
rorb
gs
xchg
lods
xchg
add
clc
mov
add
repz
iret
pop
pushw
cmpsl
adc
or
lods
stos
mov
cmpsl
mov
hlt
ss
aas
dec
inc
push
sti
daa
daa
lock
in
and
jmp
sub
sbb
mov
lea
adc
aam
push
in
dec
xchg
in
cltd
or
pop
cmc
mov
mov
shll
dec
xor
gs
cmpsl
mov
sub
scas
iret
inc
negb
stos
adc
arpl
nop
sbb
mov
loope
test
adc
lahf
lock
pop
int3
mov
mov
aas
xchg
divb
push
xor
movsb
cwtl
pop
sbb
sub
add
inc
shl
fdivp
push
pop
jno
jo
jl
shrb
fsubrp
push
dec
mov
nop
enter
pusha
xor
aas
in
mov
inc
lcall
decb
outsb
sbb
inc
or
mov
push
push
test
cs
fistpll
leave
xor
push
and
jl
pop
ss
push
push
pop
sub
push
dec
add
jne
arpl
sub
std
jmp
pop
push
jl
mov
pop
adc
ja
rorl
js
in
push
mov
lock
mov
adc
cmp
xchg
shll
ds
imul
mov
cmpsl
mov
mov
lods
ja
repnz
pop
cmp
cmpsl
cmpb
cli
ds
popf
loopne
loop
and
cmpb
or
lahf
arpl
in
cmp
fisttpl
pop
dec
add
stos
cwtl
stc
or
mov
jg
pop
ret
cmc
xchg
xchg
cmpsl
rcrb
test
test
dec
in
loope
mov
lret
jg
xor
icebp
sarl
repz
lahf
sub
dec
popf
mov
push
mov
lds
add
jb
lahf
ljmp
fidivs
mov
lock
cli
je
popf
daa
push
ret
iret
sbb
cmpsb
mov
sbb
xchg
sbbb
frstor
xchg
repz
xchg
aam
fs
cmp
mov
cltd
mov
negl
and
pop
lods
mov
aad
imul
fldt
cmp
lret
gs
dec
lret
mov
lock
inc
lcall
daa
mov
in
lods
inc
xchg
in
sbb
mov
std
sbb
scas
push
xchg
sub
fwait
pusha
shll
push
sahf
pop
mov
rolb
loop
into
or
or
lret
lret
jecxz
mov
inc
ret
js
push
nop
cmovbe
sub
pop
xor
mov
iret
ljmp
or
or
stos
or
jb
cld
decl
or
shlb
bound
jo
std
out
leave
jmp
outsb
xor
pop
push
aaa
cli
push
sub
push
aam
sub
fnstsw
xchg
mov
addr16
lahf
sar
sub
bound
mov
repz
lcall
adc
push
mov
sti
xchg
mov
mov
adc
jecxz
xor
mov
sbb
and
jg
mov
sbb
idivb
lahf
and
mov
fwait
mov
push
dec
rorb
cltd
cld
lret
xchg
dec
xor
push
and
sbb
cltd
in
adc
fwait
mov
mov
mov
jl
dec
xlat
push
and
test
or
test
clc
adc
stos
cmp
adc
sub
fildl
pop
push
and
pusha
iret
int3
pop
mov
dec
mov
xor
loop
add
negl
jle
js
leave
sbb
push
xchg
or
addl
les
sbb
cmp
and
mov
or
mov
push
pop
xor
aas
imul
js
dec
xor
cmc
push
add
jns
fwait
sbb
fs
into
clc
add
add
mov
stos
xchg
mov
jecxz
jmp
js
stos
jmp
mov
adc
push
mov
cmp
jmp
ja
cmp
aaa
push
adc
imul
dec
mov
std
ret
or
iret
hlt
dec
enter
js
pop
xchg
mov
xchg
lret
movsb
pop
push
aam
xchg
int3
rcll
xor
pop
xchg
sti
and
dec
mov
test
rcr
mov
xor
jnp
push
pusha
ficomps
bound
sarb
insb
jns
js
sahf
test
push
xor
jmp
sbb
ljmp
insl
dec
mov
lret
dec
xchg
cld
mov
icebp
cmp
sub
jmp
faddp
push
add
and
dec
in
pop
xchg
push
xchg
sti
push
push
popf
cmp
jno
rcll
sbb
inc
movsb
cmp
subl
icebp
xchg
in
and
popf
lret
pop
loope
out
xchg
jno
lods
mov
fs
xchg
push
or
lods
lods
imul
add
jge
hlt
inc
mov
mov
sbb
and
loop
adcl
test
ret
push
call
fildl
mov
js
iret
push
push
xchg
into
mov
push
adc
psubd
aas
nop
lods
popa
inc
pop
jl
fisubrl
int3
movntps
mov
cmc
out
lds
enter
jns
xor
pop
std
or
mov
jae
sub
stc
faddp
cs
xchg
test
adc
pusha
loope
push
mov
pop
xchg
push
pop
repnz
inc
filds
lcall
xor
subb
outsb
iret
jp
jmp
or
les
or
jge
xor
dec
xchg
sbb
adc
outsb
inc
pop
shll
push
mov
xor
roll
push
imul
ror
gs
mov
rcrl
lods
insb
cwtl
jnp
mov
xor
repz
jnp
jp
xchg
sub
add
aam
repz
sbb
inc
mov
or
push
mov
push
inc
adc
leave
cltd
iret
fldcw
and
mov
lea
dec
mov
clc
push
jno
xor
flds
popa
jo
scas
inc
mov
sub
sbb
pop
idivb
inc
push
ret
pop
mov
cmp
jb
lock
xchg
insl
inc
inc
inc
into
cltd
add
cmp
push
fcomi
imul
int
rclb
pop
mov
push
or
test
pop
cmp
adc
push
or
cwtl
dec
loopne
mov
imul
ja
out
cwtl
les
push
and
sbb
jge
arpl
fstpt
mov
das
dec
lret
lea
loopne
xorb
aaa
or
jmp
cs
popa
aas
xchg
inc
loope
ret
shlb
jo
push
enter
push
and
loopne
xlat
push
or
mov
or
notb
in
cli
ss
pop
xor
or
arpl
xor
nop
and
add
mov
popf
mov
adc
imulb
insl
push
jae
inc
loopne
repz
push
or
mov
mov
xchg
fdivr
pop
das
push
add
xchg
or
test
outsl
and
cmp
outsb
scas
xor
call
jmp
aad
xchg
lods
and
fcmovnb
mov
pop
pusha
insb
xor
xor
popa
add
shlb
insl
dec
movsb
call
insb
popf
out
dec
adc
popf
jl
and
imul
out
mov
push
das
sar
mov
mov
aas
mov
push
sub
loope
jl
mov
sbb
mov
sub
ret
mull
sbb
mov
inc
push
aas
mov
aas
movsb
xor
mov
push
loop
movsb
jecxz
dec
ja
or
call
xor
lcall
repnz
in
mov
jno
out
inc
jbe
hlt
in
pop
aaa
fisttpl
xchg
jae
or
xor
inc
or
push
mov
xchg
xor
je
jno
sub
and
push
mov
mov
xchg
and
loope
pop
pop
dec
pusha
in
movsl
out
fildl
lcall
hlt
sbb
imulb
adcb
sbb
lods
repz
pop
sub
std
lods
jl
aas
cmpsb
scas
mov
mov
in
sahf
int
sub
inc
aam
add
aad
pushf
int
int3
mov
jae
aas
mov
rorb
scas
mov
rorl
mov
pmullw
out
jl
lock
pop
xchg
xlat
nop
sub
cwtl
int3
jne
mov
aas
and
aam
mov
jl
jl
bound
dec
pop
and
dec
push
dec
mov
lods
call
mov
push
sub
or
mov
cmp
add
ja
inc
test
sbb
das
or
clc
pushf
stos
movzwl
mov
gs
push
jb
mov
cmp
insb
or
ficoms
push
les
cmp
pop
mov
sbb
jo
outsb
and
inc
cs
daa
add
loopne
cmp
jecxz
pushf
outsb
repz
inc
in
icebp
insw
cmpsb
or
shrl
mov
push
into
gs
push
in
jle
lret
dec
or
dec
ror
in
push
in
sbb
adc
or
inc
test
mov
dec
in
ss
ljmp
inc
push
inc
mov
mov
insb
scas
inc
int3
addl
rcrb
in
mov
lcall
dec
add
xchg
mov
movsl
je
jg
push
xchg
addb
mov
popf
dec
lcall
lcall
adc
push
adc
movsb
ja
mov
sub
gs
cmp
pop
pop
push
and
stos
je
or
dec
aaa
rorl
outsl
mov
je
int3
push
lcallw
test
xor
pop
icebp
cs
popf
push
and
inc
ficompl
lods
fdivrp
pop
pop
cmp
lret
mov
lret
add
ret
outsl
and
xlat
xor
xchg
sbb
out
jmp
jge
fcomp
roll
push
xchg
xchg
mov
adc
mov
divl
jnp
jbe
lcall
sub
cltd
fs
mov
popf
sbb
loopne
sub
ss
lods
jb
xchg
cmp
cld
mov
es
js
in
aam
xor
cld
ss
jno
leave
in
scas
movsl
add
ds
add
fldl
je
add
inc
jbe
jmp
sub
out
bound
inc
adc
sti
data16
test
lods
cmpsb
push
pop
xchg
ljmp
fyl2x
push
pop
aas
ret
rcrb
push
mov
inc
xchg
jae
mov
mov
leave
mov
xchg
lcall
int3
jb
inc
test
xchg
popa
rcr
xchg
inc
and
das
icebp
xchg
les
fidivrs
mov
sub
xor
icebp
or
out
repz
mov
add
and
jp
and
sbb
or
leave
lods
dec
dec
jns
pushf
mov
cmc
dec
jg
lret
adc
push
sbb
jo
jp
lahf
add
out
xchg
popf
movsl
mov
test
mov
fisttpl
dec
fs
sti
ficoml
fcmovnb
pop
pop
jb
cmp
xor
jmp
mov
enter
pop
jno
inc
mov
insl
jmp
mov
sub
inc
cmpl
and
sub
sbb
sub
jns
cmp
pop
add
mov
push
cmp
pop
je
cmp
inc
xchg
inc
pop
es
dec
sub
jae
addr16
mov
in
cmp
mov
or
test
test
sahf
ja
sti
push
jae
nop
pop
xor
cmp
test
mov
push
add
test
mov
into
inc
and
sbb
sbb
pop
test
and
fdivp
pop
push
fildl
inc
cs
push
loopne
lods
mov
adc
shll
out
jae
pop
dec
mov
mov
adc
cmp
sub
mov
jns
xchg
in
shlb
xchg
repz
test
add
je
adc
jle,pt
scas
push
pop
nop
gs
adc
xor
and
nop
mov
cmp
out
outsb
jg
out
int3
inc
test
jbe
jae
push
push
push
shrl
pop
outsb
cli
pop
adc
out
pop
stc
mov
fcomi
mov
sbb
jge
dec
cmp
dec
out
jg
ds
shl
insl
cmpsb
inc
scas
or
movsl
mov
mov
lret
es
daa
in
adc
sbb
data16
ret
out
in
push
xor
push
mov
mov
aad
mov
loopne
cli
push
add
das
sbb
stc
mov
out
mov
dec
popa
cmp
mov
imul
or
adc
xchg
pop
cli
or
repz
fs
repnz
sbb
push
sahf
jmp
repz
jne,pn
adc
mov
popa
out
ret
adc
arpl
jmp
cmp
mov
in
roll
push
repnz
shrb
xchg
and
ja
leave
into
dec
sahf
and
inc
loopne
fcmovne
movsb
or
add
pop
bound
and
lea
xor
js
sub
or
or
cmp
nop
out
notl
dec
imul
jns
jp
mov
stos
pop
xchg
stc
cs
mov
lea
mov
cmp
push
fs
xor
mov
mov
cmp
arpl
jle
imul
int
mov
lock
mov
sbbl
iret
xchg
jns
jp
sub
stos
dec
or
call
jbe
jp
ret
dec
call
add
xor
mov
loop
jg
inc
test
fcmovne
int
xchg
test
or
xchg
push
mov
lahf
out
aaa
xchg
push
ljmp
mov
mov
imul
push
enter
dec
dec
into
jmp
mov
dec
out
jmp
mov
js
jb
jle
dec
and
xor
or
push
sub
inc
int3
test
cwtl
aas
lock
lret
jmp
loopne
inc
sbb
lea
lahf
xor
xor
lcall
push
or
sbb
mov
cmp
pop
lods
mov
mov
repnz
pop
sti
jp
adc
cltd
xor
sbb
adc
repz
cmp
andl
and
or
dec
test
mov
jmp
sub
add
push
repnz
mov
mov
xchg
mov
mov
dec
loope
movsl
jo
int
iret
xor
jecxz
xabort
rorb
xlat
sbb
pop
add
xchg
test
pusha
mov
dec
movsb
dec
pop
xchg
pop
dec
inc
inc
dec
or
push
cmp
jnp
push
inc
std
mov
mov
shlb
ljmp
into
sub
sub
jge
jne
mov
syscall
sub
out
sbb
push
sahf
mov
lea
scas
sub
ret
dec
xor
cmp
outsb
enter
int
dec
pop
cltd
sbb
lcall
and
inc
push
roll
lock
push
sbb
imul
icebp
dec
xor
jl
cld
mov
loope
mov
movl
outsl
daa
stos
pusha
sbb
mov
sbb
adc
shll
mov
lret
out
icebp
es
pop
movsb
mov
cmpsl
outsl
xor
dec
inc
shlb
fs
test
cmc
jmp
sti
pop
repz
shrb
add
into
into
repz
jp
fdivp
popf
sbb
sbb
fmulp
cmc
icebp
in
xchg
mov
mov
push
jmp
out
add
cmpsb
xchg
jne
ds
lcall
xor
mov
jnp
imul
jle
add
push
inc
addb
xchg
jl
adc
push
pop
iret
and
fcmove
arpl
movsb
add
cmp
adc
bound
adc
sahf
push
jle
add
addl
shlb
pop
mov
sbbl
xor
fldcw
or
xor
xor
fbld
mov
lret
adc
das
sub
dec
sub
inc
xor
sub
jge
test
and
loopne
icebp
test
sub
in
daa
xchg
ljmp
sbb
inc
ds
bound
sti
pop
ret
cmp
cli
or
push
jmp
ficoml
and
cmp
mov
data16
fs
in
sarb
test
fcompl
out
pop
xor
sahf
and
mov
push
jge
loope
sub
mov
jo
rcll
dec
and
xor
hlt
mov
sub
dec
inc
cmp
leave
pop
hlt
je
pop
inc
scas
add
jns
mov
push
pop
std
mov
cmp
xchg
push
jl
icebp
and
inc
daa
jbe
dec
cmc
fldl
sbb
xchg
out
popf
push
pop
mulb
jg
dec
pusha
fcmovnb
popf
in
dec
jbe
inc
add
xorl
popa
add
cmp
mov
loop
or
jo
sub
mov
in
ret
mov
js
daa
inc
lret
pusha
add
inc
test
scas
inc
lahf
lret
lock
or
aas
push
jmp
and
jp
stos
mov
dec
cld
cmpsb
mov
mov
test
gs
mov
add
or
mov
clc
popf
ljmp
pushf
inc
sub
imul
fdivrl
mov
loopw
test
or
sbb
int3
out
lods
imul
cmc
mov
lret
add
je
cmp
sub
or
inc
push
sbb
xchg
ret
int3
lret
fucomi
xchg
std
lock
clc
cmp
sbb
or
mov
xor
fdivs
lcall
loope
cmp
add
popa
scas
sub
inc
out
mov
enter
sub
gs
dec
outsl
jg
rclb
mov
notl
or
loop
and
or
dec
mov
lcall
test
daa
sub
dec
sub
push
sbb
flds
lods
xor
xchg
popa
inc
or
inc
adc
push
add
sbb
and
xchg
fwait
aaa
pop
les
pusha
push
hlt
xchg
inc
call
insl
adc
cmp
dec
enter
push
mov
leave
cld
gs
push
mov
inc
mov
add
push
jae
and
adcb
push
cs
cmp
mov
adc
aaa
sub
sub
adc
pop
lahf
add
lcall
sahf
jle
dec
pop
iret
mov
gs
or
das
adc
daa
inc
in
and
add
fistpll
shr
pop
sbb
jnp
sbb
dec
aaa
and
repnz
cmp
jne
movsl
dec
insb
lret
test
fldcw
fistpll
jae
jb
pop
lret
gs
mov
insb
int3
cli
or
sbb
movsl
cwtl
adc
mov
mov
int3
aad
pusha
add
lods
cmpsl
xchg
mov
ss
jo
loop
and
or
loope
inc
push
push
inc
popf
aas
and
call
mov
sbb
xchg
sbb
adc
jmp
push
aad
mov
testb
sbb
and
or
movb
jl
adc
fs
fwait
pushf
rol
arpl
jg
add
or
xchg
test
xchg
rcr
fs
loope
loopne
lods
push
out
dec
popf
mulb
icebp
xor
dec
fidivrs
xchg
pusha
push
cmp
fs
cmc
mov
sbb
adc
arpl
jno
jp
sub
push
pop
aas
or
dec
inc
arpl
jae
inc
and
idiv
push
scas
repz
sub
lds
cmp
je
loop
loopne
dec
popf
pop
cli
xor
insb
cltd
into
sbbl
pop
popf
decl
push
popa
nop
pop
sub
lea
mov
mov
cmp
push
xchg
xchg
pop
pop
inc
mov
rorl
repnz
sub
negb
arpl
mov
cli
jbe
mov
push
inc
sub
adcl
in
das
dec
cmp
les
fwait
push
jbe
insb
out
mov
mov
fisttpl
mov
fstp
xchg
jno
ljmp
lods
das
call
lods
imul
add
lea
add
push
adc
daa
push
xor
push
xchg
mov
cs
gs
mov
mov
pop
xchg
movsl
add
cltd
sbb
imulb
cmpsb
jge
addr16
aad
jg
fstpt
pop
jo
repnz
xor
loope
sahf
nop
mov
test
push
clc
gs
sub
jns
shlb
clc
adc
loope
popa
dec
fstp
push
add
jge
bound
pusha
xchg
dec
and
dec
and
out
inc
push
push
ljmp
iret
cmc
popf
sub
push
leave
scas
aaa
jle
nop
enter
sbb
out
jge
vpminsw
inc
shrb
fs
dec
aas
sbb
cmc
outsl
xor
mov
es
pop
push
and
in
cmp
dec
and
adc
int
popa
push
pop
in
cmc
mov
daa
int
mov
sbb
mov
test
adc
push
adc
and
call
inc
push
in
add
aas
mov
cmc
or
mov
adc
or
icebp
push
mov
sbb
or
mov
sub
mov
sub
lret
popf
btr
sbb
adc
mov
sub
jl
cwtl
in
sbb
push
int
inc
and
inc
and
push
cmp
call
xchg
mov
mov
fstl
pop
jecxz
loope
inc
xchg
stos
push
pop
dec
into
lock
push
xchg
mov
sub
push
fsts
adc
in
cmp
sub
pop
repz
xorb
mov
mov
mov
push
cmc
fs
cmp
inc
add
adc
add
inc
sub
dec
pop
adc
popf
xor
pop
push
js
cwtl
cld
dec
inc
jp
ret
or
mov
xor
cmc
cmp
js
popa
lods
mov
push
data16
cmpsl
call
movsl
lea
bound
stos
fstl
mov
and
push
cmp
push
sti
or
shlb
cmpsb
dec
and
imul
xor
lret
lds
xchg
sub
mov
pop
fldenv
mov
jg
xchg
js
sub
xor
push
and
push
aad
xchg
xor
call
and
inc
sub
dec
jnp
rorb
repnz
jae
and
jno
mov
cmp
rolb
popa
in
cmp
mov
pop
pop
cmp
and
jp
sarb
aaa
xchg
sub
js
jnp
mov
xchg
add
mov
les
sub
das
lods
rclb
add
mov
adcl
addr16
cmc
pop
cmp
jmp
cs
das
cmp
adc
dec
sbb
jle
fcmove
lock
inc
mov
repnz
pop
repz
mov
mov
cmpsb
inc
push
cmp
dec
std
xor
or
jge
inc
dec
or
imul
push
push
push
push
inc
clc
add
mov
cmc
roll
dec
jp
adc
mov
cld
outsb
pop
xchg
mov
lcall
filds
jmp
cmp
jp
int3
xor
push
add
mov
imul
test
jge
mov
nop
push
out
pop
out
jmp
mov
out
or
mov
rorl
dec
cmp
jbe
andl
pop
dec
hlt
leave
mov
loop
mov
jp
mov
xchg
jecxz
lahf
gs
ljmp
pop
sub
xchg
push
inc
in
gs
add
aam
cwtl
add
xor
ljmp
xor
repnz
dec
shr
pop
aad
mov
mov
ljmp
nop
std
cld
sub
lods
push
or
inc
daa
add
pusha
stos
leave
inc
pop
rcrl
jae
dec
pop
stos
mov
pop
mov
dec
pusha
mov
adc
and
and
fistps
sbb
lahf
je
enter
subb
mov
scas
mov
sub
sahf
shlb
fisttpll
cwtl
movsb
xchg
test
ficomps
int
jle
iret
subl
das
sub
imul
popa
jg
inc
test
mov
jbe
sbb
popa
sub
dec
rol
cmp
mov
jg
inc
mov
daa
sahf
adc
push
shrl
or
fwait
cmp
jbe
or
ss
mull
inc
or
js
xor
insb
mov
loope
cmc
pop
mov
out
icebp
and
cwtl
jae
pop
push
or
xor
mov
dec
sbb
lds
or
pop
and
mov
sbb
sbb
cmp
dec
ljmp
popa
adc
std
pop
iret
ret
test
dec
ret
pusha
aad
push
cwtl
lods
inc
sub
add
push
imul
mov
xchg
cmp
subb
testl
pushf
add
repnz
pop
inc
and
sbb
inc
lds
xlat
inc
inc
dec
ret
or
ret
fildl
jecxz
sbb
dec
push
ja
xchg
sbb
push
cmpsb
sub
xchg
repz
mov
mov
adc
jo
mov
sbb
fsqrt
lods
pop
popa
mov
cld
sbb
orb
cmp
test
fstpl
mov
mov
pop
call
mov
imul
jns
push
jmp
aas
mov
push
in
adc
les
test
cld
cmp
cwtl
jnp
popaw
mov
repz
mov
lcall
pushf
fadd
push
push
pop
or
rorb
iret
aam
mov
push
data16
adc
push
shrb
daa
sbb
das
push
shll
mov
adc
fiadds
fisubrl
xchg
mov
popa
into
dec
cmpsb
loopne
push
adc
nop
cmp
jo
sbb
xchg
pop
aas
outsl
pop
inc
out
repnz
clc
mov
mov
mov
add
push
add
divb
mov
jne
sub
dec
repnz
xor
push
enter
adc
xor
int
xchg
popf
in
push
cmp
inc
fisubrl
xchg
fisttps
repnz
mov
pop
and
rorl
jne
pop
ja
lret
xchg
out
hlt
or
scas
popf
std
xchg
in
imul
andb
mov
ret
xor
fwait
cmpsl
pop
jl
test
lret
add
fldenv
add
sbb
mov
jb
ret
popf
dec
push
cmp
arpl
dec
add
mov
sbb
in
sbb
mov
test
cld
or
xchg
fldt
push
popf
pop
lahf
pop
xor
repz
xchg
es
sub
daa
addr16
dec
mov
ljmp
push
cmp
outsb
subb
jno
adc
lahf
daa
jmp
adc
ds
loopne
inc
repnz
mov
pop
inc
jp
or
stc
pop
cmp
push
mov
fstl
and
xchg
imul
mov
inc
fcoml
int
add
inc
aam
inc
aad
and
adc
xor
imul
mov
inc
push
add
push
push
mov
cwtl
shr
and
xchg
mov
sbb
cwtl
setle
dec
sub
sub
fdivrp
ret
mov
ret
dec
add
inc
pop
and
pop
sbb
or
pop
mov
pop
pushf
sub
fdivs
data16
push
inc
sub
xor
xor
rcl
dec
stc
shrl
jno
ds
stc
xchg
pop
rorb
inc
popa
inc
push
pop
bound
das
jmp
cmp
sub
lods
cmp
jbe
sahf
mov
pop
addr16
pop
and
repz
or
loopne
mov
cwtl
fldcw
mov
cmp
scas
stc
int3
in
jb
rcl
shll
insl
sti
shll
fists
ret
adc
cmpsl
sahf
adc
add
std
xchg
mov
dec
add
inc
sub
jecxz
jle
add
xchg
mov
jp
xchg
cmp
or
hlt
push
aaa
sarl
pushf
popa
dec
mov
test
es
leave
dec
lods
ficoml
sub
pop
ja
in
xchg
aad
mov
pop
orb
pusha
inc
jns
inc
jo
inc
add
cli
xchg
aam
outsb
divb
fisubrl
xchg
stos
fistpll
test
aam
inc
fs
inc
mov
fldcw
out
aas
push
push
jnp
adc
or
addr16
mov
cmc
mov
inc
sti
mov
call
xchg
insl
push
mov
lods
push
mov
stc
or
stc
testl
xlat
aad
or
roll
in
pop
cwtl
lret
stc
xchg
and
inc
daa
xchg
cmp
lahf
or
mov
dec
xchg
xchg
aad
ret
mov
enter
xor
imul
inc
sbb
jbe
inc
cli
push
das
sub
lahf
mov
fxsave
xor
popa
es
xor
cmpsl
mov
sbb
and
adc
push
loopne
xchg
lods
mov
lret
ljmp
add
in
dec
push
lds
fldl2e
lods
add
daa
cmp
jae
lret
and
pop
and
mov
lock
sti
xchg
test
jnp
scas
das
mov
mov
push
out
cld
add
push
mov
les
jge
jmp
ret
sti
inc
mov
jb
lret
lahf
xor
and
int3
jns
lock
jbe
psubusw
fisttpll
or
push
cli
sub
mov
mov
push
stos
lods
mov
rcll
leave
insb
mulb
add
jns
lds
dec
sahf
sti
ljmp
jno
iret
out
mov
mov
xchg
sub
cmp
out
jle
jmp
fldcw
lea
xchg
cmp
or
popf
dec
mov
mov
sbb
and
sbb
mov
ja
icebp
ja
call
fwait
dec
sub
add
dec
or
out
mov
or
inc
mov
es
loop
ljmp
lcall
and
fstpt
mov
inc
and
lret
call
mov
mov
and
sub
jl
cmp
test
dec
jg
pushf
scas
push
cltd
daa
mov
in
test
jmp
pop
pop
cltd
jecxz
fucomi
shlb
inc
lret
fwait
dec
scas
dec
cmp
and
push
pop
js
add
sbb
push
out
push
or
sbb
and
sub
add
data16
repz
jne
nop
jmp
subl
pusha
pop
lcall
push
icebp
add
push
fisttpl
insb
sbb
call
or
aad
outsl
shrb
mov
sub
in
mov
movsb
mov
inc
dec
outsb
cltd
dec
xor
push
fisubs
es
dec
sahf
inc
ljmp
xchg
jns
mov
call
jnp
nop
pop
adc
btc
inc
iret
in
cltd
repnz
je
mov
gs
xchg
lahf
call
int
xlat
pop
sub
xchg
mov
mov
mov
mov
pop
jb
xchg
movsb
insl
jbe
lea
mov
sbb
xor
jl
in
jb
les
and
xor
dec
cmp
cmp
pop
mov
and
xor
or
movsb
dec
inc
push
mov
pop
or
add
push
scas
cltd
adc
lret
lods
mov
mov
test
rolb
pop
pop
inc
add
inc
addr16
mov
sub
movsb
test
mov
gs
push
mov
rclb
sbb
daa
jb
cmp
repnz
das
test
sbb
pop
lock
test
dec
shlb
mov
mov
cmp
movb
stos
pop
xchg
jno
push
sbbl
outsb
xlat
xchg
jecxz
fwait
push
xchg
mov
adc
mov
sub
adc
sahf
cld
mov
shll
inc
dec
and
scas
das
sarb
cli
repz
into
sbb
dec
fcoml
movsb
mov
mov
pusha
nop
cmp
in
sub
mov
xchg
pusha
mov
lods
add
repnz
aad
cli
push
inc
out
out
push
test
gs
lahf
lods
xchg
js
scas
pop
mov
in
lea
iret
push
stos
scas
lcall
mov
out
add
and
sub
and
sti
sbb
xlat
pop
cmpl
in
movb
dec
sbb
sbb
inc
pusha
pusha
mov
mov
mov
pushf
aas
mov
sbb
mov
mov
ja
mov
jle
or
sti
ret
cwtl
cmp
xchg
mov
push
movsb
jmp
cmpl
pop
inc
xchg
aam
lret
or
fmul
jae
cli
adc
sbbb
aas
je
cld
inc
cmp
push
xchg
sbb
sub
or
icebp
popa
or
xchg
pop
jne
xchg
dec
fdivr
push
pop
ja
loop
pop
xor
pusha
and
cmp
fbstp
dec
out
adc
dec
mov
xor
pop
mov
scas
inc
aad
sti
push
pop
repz
jbe
lds
xor
in
je
pop
pop
pop
inc
mov
stos
cmpsb
inc
lock
cwtl
les
pusha
nop
push
fxch
mov
in
mov
sub
inc
jge
cmp
mov
xor
jecxz
rcll
andb
mov
mov
daa
bound
xchg
mov
xchg
xchg
mov
sbb
jmp
mov
jg
push
in
sbb
into
sbb
scas
int3
add
icebp
pusha
scas
mov
mov
xor
in
jae
xor
fstpt
adc
xchg
clc
jg
cmp
jns
xchg
mov
repnz
add
cmpsb
mov
das
int3
add
push
lret
ss
xchg
das
cmc
stos
imul
add
bound
ss
mov
popf
daa
and
inc
in
xor
pop
xor
push
arpl
pop
adc
dec
je
sub
sub
dec
add
outsl
cmp
cmp
jno
sub
stos
leave
cs
mov
lods
mov
repz
pop
rep
sbb
sbb
and
pop
divl
adc
jle
xlat
int3
addr16
jae
pop
sbb
hlt
roll
fdivrp
push
sbb
jp
fidivrl
cli
add
stos
leave
mov
mov
cmc
xchg
int3
das
ss
daa
pop
and
es
jle
pop
push
rolb
add
movsb
fdivrl
sbb
mov
repz
in
mov
dec
ljmp
jmp
in
xchg
sub
icebp
out
imul
out
pop
dec
jno
std
hlt
sub
push
inc
cmc
push
fs
ljmp
out
adc
jns
scas
xchg
mov
nop
mov
jecxz
jo
mov
int3
jl
add
mov
jle
loope
sub
pop
insl
dec
push
test
js
fcmovnbe
in
add
repz
xor
sbb
lock
push
dec
mov
aas
data16
mov
fidivl
aas
mov
fs
std
test
bt
push
adc
mov
cmpl
int3
push
cmp
mov
sbb
and
xor
outsl
dec
fistpl
in
dec
dec
inc
mov
testb
push
pushl
cwtl
mov
sbb
mov
or
adc
sbbb
mov
addr16
and
mov
imul
push
les
cmp
sahf
loopne
mov
dec
and
and
loopne
test
dec
or
rorl
loop
call
jmp
inc
daa
and
sub
cmpl
and
mov
dec
jne
cmp
in
and
mov
call
push
add
hlt
sub
cmp
dec
stos
movsl
pop
inc
fwait
sub
sub
push
leave
push
into
add
in
dec
mov
jne
jbe
shlb
call
sbb
aam
cld
mov
mov
adc
inc
out
fwait
ja
enter
insl
cmp
xorl
or
ss
pop
stos
incb
fadd
add
mov
pop
xor
arpl
mov
js
daa
call
bound
xchg
inc
xchg
mov
cmp
push
cmp
iret
add
push
pop
sbb
cs
out
inc
and
je
cmp
pushf
mov
push
enter
xlat
cvtps2pd
xor
std
mov
out
pop
adc
pop
cmp
and
iret
das
lods
filds
cld
inc
cmp
lahf
lock
cmp
repnz
in
insl
std
mov
cld
push
add
mov
daa
mov
xchg
adc
jmp
stc
inc
mov
mov
ljmp
inc
mov
call
add
push
cmp
jmp
pop
js
and
dec
adc
daa
div
rcll
add
jg
stc
pop
jg
sahf
popa
or
mov
xchg
xor
inc
stos
or
cltd
and
cmp
add
mov
popf
sub
adcb
pop
mov
shl
popa
out
mov
mov
frstor
jl
lea
out
lds
mov
add
dec
dec
jecxz
adc
or
inc
cltd
iret
or
jmp
sar
mov
inc
add
push
in
aas
leave
sub
fsubl
rcr
notb
pushf
mov
inc
push
or
mov
pop
out
xchg
mov
loope
aas
dec
xchg
int3
add
add
sti
data16
mov
mov
rclb
sub
cmp
cmc
test
pop
mov
int3
cmp
icebp
out
mov
into
or
add
aad
movsb
xchg
jecxz
push
negl
rorb
jp
or
sbb
push
xchg
sub
sbb
push
xlat
push
inc
addr16
and
adc
rolb
jp
mov
mov
jmp
inc
stc
pushf
xlat
std
ret
leave
xor
mov
adc
out
mov
mov
pop
popa
das
xor
shlb
popa
outsl
pop
es
or
add
pop
cmpsl
mov
andl
cmpsl
mov
pop
enter
cmp
js
jl
cmp
in
push
inc
mov
jbe
mov
push
fcmovu
inc
sbb
push
movsb
jg
out
mov
mov
adc
outsb
adc
jmp
stos
rcll
sub
sbb
enter
ja
clc
push
dec
dec
jle
ljmp
adc
dec
jb
mov
push
ja
jno
jecxz
rolb
stos
mov
int3
inc
pop
add
and
int3
cmpl
lock
jnp
lds
mov
push
jnp
or
xchg
in
arpl
mov
subl
ljmp
faddp
xor
or
sbb
iret
inc
jge
js
data16
jno
jg
stc
out
mov
lds
call
icebp
jp
push
les
aas
stos
cmpsl
scas
jae
cmp
pushl
jmp
in
sbb
push
dec
jmp
sub
or
push
pop
adc
inc
and
add
push
lret
aad
out
sub
inc
das
std
lret
sub
mov
js
and
or
sbb
mov
stos
xchg
cmp
js
cmp
xchg
xchg
ret
jecxz
movsl
orb
cmp
mov
pop
rolb
test
fstl
out
loopne
aam
pop
ror
mov
dec
cs
lods
jp
aas
sbb
cmp
mov
cli
jg
movsb
shrb
cmp
daa
mov
jne
push
push
int
popf
enter
gs
frstor
cmp
jmp
mov
mov
int3
sarb
int
jb
out
jmp
sub
leave
mov
jne
mov
jmp
loope
jge
jp
push
jg
dec
ret
pop
mov
pop
or
pop
jl
mov
mov
mov
aam
imul
fsubp
daa
sbb
pop
iret
lods
add
push
loop
ljmp
aad
adc
adc
leave
add
mov
lods
mov
repz
mov
inc
mov
cmp
bound
or
fs
add
mov
xor
mov
mov
test
fsubs
adc
mov
cmpsl
call
daa
in
out
mov
and
fistpll
jg
sbb
add
inc
sbb
mov
mov
jae
mov
es
stos
int
dec
jge
mov
xor
or
mov
into
sub
lods
cmp
fildl
std
jle
js
jmp
adc
movsb
cmc
out
or
xchg
call
lods
push
inc
or
fistpl
cmp
mov
dec
pop
xchg
jl
je
cmp
outsb
mov
rep
ds
test
dec
and
lods
xchg
push
or
imul
nop
jne
cmp
jne
or
mov
jecxz
in
bound
rcrb
inc
inc
pop
jecxz
stos
inc
xor
and
push
outsl
add
insl
and
int
and
mov
ret
push
push
inc
dec
xchg
jb
cwtl
orl
fmuls
imul
test
pop
bound
adc
sbb
and
xor
jbe
jno
xor
jo
cmp
mov
pop
sahf
add
sbb
int3
cli
popa
xchg
test
fldl
mov
dec
jl
in
repnz
mov
jbe
xor
insb
addps
add
pop
pushf
lods
pushf
mov
dec
jb
push
les
push
das
cmpsl
cmp
cmpl
xlat
outsb
adc
out
imul
pop
sarb
addr16
xchg
push
adc
and
cwtl
leave
daa
dec
aaa
fs
cltd
push
loopne
iret
call
add
out
mov
push
inc
mov
adc
les
xchg
mov
fsubr
loopne
jl
pop
xchg
jne
imul
xchg
iret
inc
pop
push
mov
jno
cmp
int3
jl
xor
sbb
add
pop
xchg
cmp
aas
loope
std
mov
push
stc
dec
in
cmovae
xor
mov
movsl
inc
fidivrs
xor
clc
mov
mov
fsubl
mov
mov
xchg
sub
rcrb
dec
mov
popf
subb
imul
push
popf
push
push
or
add
cs
sub
dec
cld
push
push
adc
jno
outsb
addr16
sub
out
out
ja
cwtl
adc
inc
hlt
sbb
ret
insb
cmp
xchg
push
and
movsb
jb
addr16
enter
or
jae
sub
xchg
leave
fnstenv
xor
and
pop
mov
insl
aam
punpckhdq
mov
sbb
jbe
decb
in
push
dec
adc
imul
add
push
pop
jg
test
jg
ja
add
in
xchg
sbb
jmp
push
xor
insl
push
bound
ds
inc
icebp
mov
imul
insl
mov
into
mov
inc
xchg
gs
ficoml
mov
gs
or
iret
les
push
cmpsb
int
pusha
frstor
inc
xchg
out
pop
jle
dec
cmp
cmpsl
pop
and
pop
into
faddl
pop
data16
or
lahf
mov
lret
lret
movsl
sub
rorl
rolb
mov
fiadds
pushl
xchg
sub
scas
stos
xchg
mov
aam
dec
jg
fistpll
rolb
push
push
sbb
adc
sbb
lds
pop
mov
inc
jg
dec
xchg
rcrb
lds
push
pop
test
sbb
pushl
addl
jg
sub
sub
cmp
ret
dec
xchg
in
jbe
std
adc
into
cwtl
xchg
mov
sbb
sub
or
mov
xor
ret
dec
xchg
cmpsb
leave
sub
inc
mov
sbb
add
or
xlat
mov
ljmp
out
jbe
or
sub
jle
aad
into
add
movsl
inc
adcb
xchg
xchg
cmpsl
push
xor
fsubrs
fiaddl
xchg
pop
mov
and
fsubl
sub
popf
mov
in
ret
sub
push
mov
inc
fstpl
pushf
adc
mov
push
sub
repz
dec
or
or
jl
dec
push
push
add
daa
jbe
push
daa
sub
pop
ret
inc
pop
jbe
mov
faddl
jp
cltd
mov
out
adc
mov
fldcw
push
mov
pop
popw
adc
lock
sub
sarl
enter
dec
xchg
gs
stos
xchg
or
lds
cld
jb
push
dec
aam
sub
repz
es
mov
add
arpl
push
add
fadds
sbb
dec
push
pop
in
sub
mov
mov
inc
pop
mov
push
mov
dec
repnz
ja
pop
jge
xchg
push
es
mov
into
and
mov
lret
popf
mov
ljmp
inc
cmpsl
mov
push
dec
push
cs
cmpsl
sbb
push
adc
xor
into
adc
icebp
negb
or
cmovl
test
dec
cmp
adc
mov
test
in
pop
inc
push
xor
std
subl
mov
fildl
shll
add
jg
mov
mov
outsl
daa
sub
mov
fisubrs
orb
inc
fidivs
jno
paddusb
mov
lret
cmc
inc
in
mov
push
mov
call
addr16
push
sub
ljmp
stc
sub
or
int
stos
dec
scas
fadd
jne
negb
xlat
xchg
std
pop
dec
jo
fwait
xor
cmp
push
lahf
mov
cmp
push
sub
push
gs
out
movsl
sub
pop
jb
out
sar
outsb
jne
sub
xchg
mov
scas
testl
mov
je
call
inc
mov
add
pushf
xor
adc
dec
lahf
fcompl
cli
sub
adc
xchg
pop
cltd
push
test
push
divb
lds
test
lods
lods
in
mov
or
jbe
btr
testl
mov
mov
lock
fs
lock
jne
xchg
test
popa
orb
sbb
xchg
addr16
jnp
jle
push
in
movsl
add
stos
hlt
lret
pop
ljmp
push
xor
add
push
pop
and
dec
adc
sbb
enter
pop
ljmp
testl
push
out
pop
mov
loope
push
enter
mulb
jnp
xchg
lret
or
dec
imul
fidivs
sub
cmpsb
xchg
jae
mov
lret
fdivrs
jg
and
xor
cmp
out
mov
adc
mov
mov
lret
or
adc
cli
psraw
in
inc
mov
and
les
or
jb
mov
mov
push
push
rcr
pop
mov
idivb
cld
xchg
clc
incb
rcrb
ror
pop
jno
jb
and
sar
lods
jge
jl
iret
aam
jmp
leave
jge
es
iret
mov
rsqrtps
cmp
dec
jnp
or
mov
ret
lods
add
or
mull
push
mov
je
mov
jl
push
mov
lea
lea
scas
jmp
dec
mov
pop
arpl
int
jns
sbb
or
cld
adc
ja
inc
in
in
das
jle
inc
dec
mov
adc
jmp
cmp
jne
scas
or
mov
stos
test
mov
jnp
shrb
lods
fdiv
and
cltd
rcrb
daa
mov
push
cmpsl
jb
test
mov
push
sub
je
or
pushf
in
es
das
jp
mov
or
cmp
lcall
fbld
or
aas
mov
xor
mov
mov
int
mov
and
ret
je
push
jmp
popf
shrb
test
fwait
in
call
mov
jecxz
jecxz
push
mov
mov
xchg
addl
shl
test
nop
nop
insl
in
cli
mov
pop
ret
sarb
cmp
rcrb
mov
adc
sbb
xor
cld
sbb
or
push
bound
add
sub
mov
mov
jp
testb
dec
sbbl
ja,pn
scas
xchg
jp
add
les
cmc
loope
xor
out
adc
jecxz
jecxz
cli
hlt
jge
xchg
xor
add
push
push
ja
lods
in
sbb
cli
je
call
repz
xor
inc
dec
popf
lods
fbld
mov
cli
outsb
pop
scas
call
test
or
mov
jmp
lret
sub
cmpsl
aam
test
mov
nop
shl
lcall
sti
or
push
pop
loopne
das
cltd
inc
pop
pop
mov
push
js
out
inc
aam
add
add
mov
enter
cmp
lds
pushf
jns
out
lock
int3
sub
jge
pop
jnp
cmpsl
cmp
jbe
xor
xchg
xor
lcall
cmp
loope
mov
push
stos
sbb
adc
pop
pop
pop
outsl
xchg
inc
in
jge
cmpsl
mov
push
int3
out
int
loope
and
int
rolb
test
inc
adc
imulb
push
sub
or
in
inc
out
into
pop
in
cmp
subl
daa
aaa
push
repnz
in
jp
repz
and
xchg
fnsave
cld
adc
mov
or
jg
sub
out
hlt
insb
mov
xchg
adc
std
xchg
stos
lret
jge
or
mov
loope
mov
sbb
mov
rcll
mov
test
call
mov
xchg
out
lcall
lea
fwait
daa
jb
lret
cmpsl
xchg
insl
xchg
icebp
shl
sbb
dec
lock
adc
xlat
pop
jge
lock
fisubs
or
sub
sar
lock
mov
jg
pop
test
insl
fsts
jl
cmp
popf
inc
adc
cmpsl
stc
jle
cmp
mov
push
or
sarl
push
cmp
dec
cli
lahf
add
xchg
xor
mov
lret
mov
pop
or
xchg
jno
xor
adc
loopne
mull
add
loopne
or
js
sub
shll
in
subb
mov
push
inc
xor
lea
icebp
mov
inc
jl
popf
cmp
inc
xlat
lret
in
jl
push
aas
mov
repnz
testb
xor
mov
adc
cwtl
popf
and
pop
lret
ss
sbb
fmull
xchg
mov
icebp
je
jne
mov
arpl
jne
dec
sbbb
in
sbbb
dec
adc
vpshuflw
add
add
inc
dec
jmp
in
ljmp
int
gs
fs
cwtl
cmp
mov
sbb
insl
gs
arpl
push
pop
inc
iret
in
mov
and
mov
lret
arpl
jmp
arpl
ds
arpl
in
roll
mov
movsb
push
sub
enter
xchg
sub
push
fisubrl
rorb
andl
dec
outsb
adc
rcll
xor
in
clc
mov
shr
sub
aad
cld
sub
mov
lcall
pop
jns
test
imul
push
cmp
mov
fnstcw
frstor
sbb
sbb
cmpsl
stos
or
sub
jo
jo
push
jp
fcoml
cli
sbb
add
pop
mov
jmp
mov
xchg
pop
mov
incl
sub
int3
add
out
push
cltd
and
xchg
mov
mov
fdivrs
mov
popa
add
xchg
mov
nop
movsb
imul
repnz
lds
imul
pop
adc
lods
out
loopne
jecxz
xchg
or
and
lret
pop
test
adc
inc
pusha
jno
mov
pop
inc
sbb
add
cmp
dec
mov
test
dec
jo
and
or
outsb
jnp
lea
test
push
aas
jmp
cmpsb
and
mov
sahf
arpl
les
push
loopne
lret
sub
and
mov
rcr
lret
je
scas
inc
cmc
rolb
pop
mov
mov
pop
jle
mov
sbb
fmuls
test
in
ds
xor
aas
shlb
xor
addr16
out
adc
arpl
inc
jns
pop
inc
hlt
mov
movsb
sbb
movq
test
mov
js
les
pop
or
call
hlt
jne
imul
cltd
in
bound
lret
push
inc
lret
jno
adc
and
jmp
xchg
mov
popa
popa
scas
mov
sbb
fcmovu
add
jg
dec
outsl
cltd
sbb
mov
cmpsb
repz
das
inc
repz
sub
push
or
sub
nop
dec
std
sarb
inc
xchg
mov
mov
popf
popa
inc
out
sbb
cltd
and
or
sub
inc
pop
sub
insb
stos
add
aaa
stos
jae
sub
push
pop
jno
sbb
mov
add
in
jge
xorb
bound
inc
repz
mov
cmpsl
shrl
mov
andb
add
pop
dec
inc
push
sub
xchg
lock
mov
add
ret
lea
dec
sub
fidivs
jmp
mov
mov
push
test
loopne
xchg
pop
or
push
push
out
mov
sbb
scas
pop
sub
pusha
rcrb
push
xor
mov
sub
ss
add
cmp
lods
rcrl
inc
mov
and
sahf
xor
mov
push
xchg
ret
ja
test
push
or
dec
dec
repnz
mov
push
mov
xor
and
movsb
imul
aaa
push
sub
xchg
mov
add
bound
enter
jne,pt
push
sbb
lret
adcl
add
stos
test
in
pop
leave
lods
cmp
sar
jp
xchg
cs
imul
pop
loopne
jae
jbe
mov
aas
fcompp
xor
xor
dec
mov
cmp
ja
fmulp
cmp
out
popa
mov
fcom
lock
and
push
inc
in
and
sbb
outsl
outsb
test
pusha
dec
int
dec
cmp
addr16
mov
xor
pop
cmpsl
daa
add
mov
loope
stc
mov
jbe
imul
imul
mov
jnp
mov
pusha
mov
jno
add
jne
push
rorl
pop
addr16
lea
movsb
dec
jns
pop
repz
and
outsb
xor
push
cmp
inc
and
inc
xchg
cmpsl
lds
push
movl
mov
sbb
pop
js
jg
push
mov
xor
xor
lret
sbb
loope
loopne
push
push
mov
mov
test
fs
shll
add
mov
jmp
fs
call
mov
das
inc
inc
sbb
push
jl
dec
xor
or
cmpsb
xor
lods
cmp
xchg
push
add
dec
insl
fisubs
pop
mov
mov
jns
iret
inc
fnstsw
clc
xchg
stc
ficoml
popa
sbb
xchg
inc
fdivrs
sub
dec
xchg
fcompl
mov
add
in
jne
sbb
pop
fsin
adc
push
mov
jae
movsb
cmp
sbb
dec
mov
or
mov
shll
pushf
add
cwtl
nop
gs
outsl
imul
xor
add
aad
sub
pop
add
and
lahf
mov
ss
fabs
mov
mov
aas
push
adc
push
mov
data16
add
mov
cmpsb
insb
outsl
inc
int3
add
je
cmp
popa
and
add
mov
aam
sbb
and
rcll
push
cs
pusha
call
xor
cli
das
push
sub
fldt
mov
or
fcomps
add
stos
pop
push
loop
jbe
mov
dec
mov
in
jns
aam
and
dec
jmp
sub
mov
inc
pop
adc
mov
lds
and
mov
and
lcall
xchg
cli
fs
dec
loop
lcall
mov
mov
loop
xchg
mov
out
popf
cmp
inc
ret
imul
std
cvtps2pi
std
popf
or
sbb
push
dec
out
ret
push
or
jmp
mov
lahf
cmc
in
push
mov
shlb
adc
cmpsl
subl
push
inc
in
test
jge
cmp
rolb
sub
cwtl
cmp
add
mov
pop
fsubrs
or
xchg
gs
or
aaa
out
aad
push
dec
ljmp
lds
jle
insb
aam
xchg
stos
mov
jo
jne
aam
inc
lret
cmpsb
ljmp
cmp
aad
xchg
and
scas
cmpsl
clc
icebp
sbb
jmp
or
sahf
sbb
aas
stos
push
and
shlb
imul
mov
insl
andl
in
dec
pop
sbb
adc
mov
sub
cmp
ja
mov
subb
aas
popa
adc
dec
aad
repnz
ror
stc
andl
loope
inc
test
andl
push
jno
subb
push
mov
sub
and
mov
adc
out
mov
mov
xchg
fldenv
jp
pop
pop
test
data16
push
int3
jbe
add
addr16
adc
loopne
das
sbbb
clc
mov
jns
or
popa
cmpsl
das
and
fs
inc
rcrl
push
div
or
push
cld
push
cs
fsubrl
mov
and
mov
lcall
dec
jecxz
xchg
inc
out
and
aaa
push
int3
xlat
mov
lret
popa
jge
fs
mov
dec
cmc
movsl
sbb
jg
int
mov
jb
cmpsl
mov
outsb
xchg
adc
jns
pop
xchg
daa
fwait
cmpsb
adc
mov
stc
jb
das
inc
daa
xchg
cmp
es
imul
scas
xlat
dec
in
dec
mov
sbb
cmp
stos
icebp
mov
les
mov
push
aam
push
aam
fnstcw
rcll
stc
mov
neg
mov
mov
stos
ljmp
xchg
dec
push
rcrb
pop
cmpsb
out
inc
add
push
popa
aam
sbb
dec
lods
jno
xchg
loop
repz
add
mov
add
jge
rcll
push
or
xchg
lds
jae
mov
out
sub
pop
pop
repnz
xor
imul
jae
das
xchg
and
or
aad
or
shl
int3
ds
cltd
aas
sti
jno
jne
jb
add
int
movl
cmc
insb
mov
loope
pushf
andl
dec
jp
gs
jns
cmpsl
push
shr
jbe
mov
icebp
lahf
jns
in
repnz
push
arpl
pop
lods
ja
je
cld
sub
jmp
mov
dec
mov
and
jge
and
xchg
sahf
in
xor
xchg
xchg
out
fwait
dec
movsl
dec
push
cmp
lods
out
addb
loopne
adc
fimuls
sbb
dec
mov
mov
les
lea
js
adc
into
sbbl
leave
insl
repnz
rorl
fwait
push
daa
jae
pop
in
repnz
fsubrl
int
fwait
jne
mov
xchg
rolb
shl
mov
fs
pop
aaa
int
sti
dec
ffree
iret
sub
push
movsb
pop
push
inc
loopne
stos
std
cwtl
adc
mov
xor
movsl
sub
mov
jne
stos
ja
imul
dec
imul
aas
stos
lds
cmp
adc
dec
rcl
rcrb
and
aad
ss
xchg
mov
test
rcll
cmp
mov
out
sbbb
inc
sub
xchg
jns
lcall
in
es
inc
cwtl
mov
fists
test
mov
ficoml
add
or
inc
mov
call
dec
int3
test
inc
inc
sbb
enter
jae
and
hlt
xchg
sub
mov
xor
fimuls
push
repz
dec
cmpl
je
mov
scas
leave
aam
loope
ja
stos
ss
insl
sub
and
je
sahf
repnz
push
je
pop
ja
ficomps
int
sbb
rolb
push
push
scas
mov
push
add
int3
sbb
dec
mul
xchg
inc
xchg
adc
in
mov
lods
jecxz
or
pop
daa
mov
repnz
or
push
xchg
jle
in
test
clc
das
jbe
pop
and
sqrtps
loope
das
jmp
aaa
and
and
movsl
xchg
sub
aam
sub
mov
and
stc
sbb
adc
jg
lahf
jne
xor
sbb
cmpsb
sarl
int3
cmpsb
inc
xor
repnz
push
repz
add
cmpsb
sbb
cmc
fisubl
inc
mov
into
pop
cmp
cmpsb
lahf
icebp
test
push
xchg
sub
movsl
mov
add
cli
and
mov
test
cltd
jge
push
pop
shrb
jl
fs
mov
repz
test
out
lcall
pusha
xchg
aas
stc
out
mov
and
pop
xlat
das
cs
sub
ss
lcall
dec
xchg
aaa
mov
or
clc
daa
leave
imul
adc
push
pop
mov
dec
cmp
mov
add
add
pop
jb
out
frstor
sbb
scas
arpl
or
and
adc
pop
push
fcoms
call
in
and
add
mov
pop
ja
push
incb
pop
stos
push
ss
in
pop
fstpt
jne
sbb
mov
xchg
jno
hlt
jl
scas
outsb
xor
add
test
cwtl
mov
shlb
dec
mov
push
xchg
xchg
push
sarb
or
stc
outsl
fwait
lods
sbbb
ja
int3
in
pushf
inc
push
lea
lret
push
inc
dec
aaa
inc
jecxz
push
aam
mov
xor
mov
sub
jmp
test
sub
test
mov
pop
pop
or
jo
adc
mov
and
sbb
pop
jno
xor
fwait
jns
adc
and
lret
rorl
push
xor
out
jb
jae
sbb
loope
pusha
stos
mov
xor
jb
xchg
scas
pop
jne
mov
gs
fstpl
mov
xor
or
in
lcall
and
xor
add
cltd
negl
ljmp
cmc
in
dec
mov
mov
push
and
fwait
mov
pushf
adc
imul
jg
inc
mov
cmp
dec
mov
push
icebp
xor
pop
sub
fsubrp
sub
gs
xlat
rcll
pop
xchg
push
fsubp
inc
das
out
orb
push
pop
data16
adc
iret
rclb
push
or
daa
push
add
adcb
mov
je
sub
les
xchg
xor
cld
imul
into
xlat
push
test
cmp
push
mov
or
arpl
xchg
icebp
and
sub
aas
cmpsl
mov
and
cmp
dec
out
lahf
sub
sub
jne
push
mov
stos
leave
iret
lahf
add
pusha
pushf
xor
adc
mov
enter
pop
xchg
add
hlt
mov
idivl
nop
cmp
xchg
stos
dec
xlat
dec
imul
dec
mov
fs
adc
adc
jg
cmpxchg
std
push
mov
jle
sahf
mov
pop
adc
mov
xchg
push
xchg
int
lcall
ljmp
aaa
in
sti
mov
xchg
pop
sarl
data16
xor
adc
push
dec
fistps
push
cmp
inc
pop
lret
cmp
xor
repnz
rcll
pusha
aam
cmp
aaa
call
sti
fwait
insb
sarl
data16
imul
cwtl
loope
cmpsl
loopne
xor
aaa
xchg
push
mov
icebp
xor
loop
and
jg
mov
ret
mov
imull
roll
push
sbb
mov
insl
push
nop
mov
fistl
loopne
nop
mov
mov
nop
mov
sbb
cmp
adc
push
inc
mov
fstpl
mov
lods
lret
pop
pop
out
mov
xchg
jle
stos
xchg
jbe
cmp
xchg
repz
or
clc
fcom
cli
je
icebp
test
int3
lods
dec
lcall
aad
dec
adcb
dec
or
insb
sti
add
pop
lret
push
inc
push
addl
xor
dec
push
and
aas
push
cli
in
dec
test
sbb
adcl
jecxz
sub
subb
or
xchg
push
mov
add
dec
mov
cwtl
stc
ret
xchg
mov
aas
jnp
jecxz
jae
test
in
dec
cs
and
js
leave
popf
fs
sub
sbb
insl
xor
mov
insb
push
pop
mov
mov
fisubl
dec
icebp
ret
xor
movsl
inc
inc
pop
int
xor
das
or
lods
insb
mov
jnp
sub
mov
mov
or
adc
pushf
mov
arpl
insb
mov
adc
xchg
pop
fwait
pop
adc
in
dec
das
lahf
incb
in
aad
mov
push
mov
call
inc
sub
enter
loop
add
adc
mov
cmpsl
mov
mov
std
bound
pop
outsl
xchg
movsl
fucom
pop
mov
rolb
add
scas
les
dec
push
mov
dec
fwait
pop
lahf
mov
mov
push
xor
xor
pop
ljmp
pusha
mov
adc
into
out
es
mov
xchg
lods
jo,pt
jae
cmp
sub
pop
nop
mov
dec
aas
pop
cwtl
pop
fcompl
dec
inc
pop
dec
ja
andl
mov
ror
ja
pop
and
jne
sbb
adc
cmp
fistps
cli
add
jne
add
shlb
push
push
lods
xchg
jecxz
add
out
dec
popa
push
or
xchg
scas
mov
sarl
mov
pop
ss
adc
push
cmp
subl
into
cltd
and
in
fwait
dec
jmp
clc
das
add
arpl
push
cmp
sbb
sub
in
sub
pop
dec
xchg
insl
fs
cli
adc
dec
push
rcl
jle
addr16
mov
sbb
push
jecxz
push
mov
or
push
imul
add
xor
popf
lds
push
cld
ret
rolb
into
aam
adc
sbb
aad
fwait
push
movsl
fdivrl
loopne
xchg
mov
dec
and
mov
jne
pop
bound
xchg
out
sub
pop
inc
xlat
adc
mov
xor
pop
cli
gs
adc
jnp
andl
shl
in
push
or
addr16
dec
push
push
cmc
pop
add
movsl
mov
mov
hlt
and
xor
sub
and
sbb
xchg
popa
inc
jb
pop
imul
inc
aam
add
sub
lahf
stos
mov
leave
dec
shll
inc
or
cmpsb
jl
mov
or
rcrl
fidivrs
lret
add
xchg
jno
push
pop
xor
cmpsl
jle
push
cs
mov
mov
test
dec
mov
les
sar
inc
inc
xchg
xor
sahf
add
push
mov
lcall
gs
mov
or
xchg
push
dec
push
hlt
push
inc
adc
shrl
loop
and
inc
xor
enter
mov
mov
in
mov
xlat
aaa
dec
int
push
mov
out
js
adc
push
int3
jg
es
roll
out
xlat
in
sbb
movsb
rcll
in
xchg
int3
xchg
or
pop
int
pop
jmp
xlat
dec
test
mov
stc
xor
pop
cmp
xor
or
push
nop
daa
cmp
adcb
in
or
jp
and
pop
cwtl
movsl
les
push
aam
pop
decl
insl
sbb
ss
rol
movsb
sahf
mov
jns
adc
test
mov
ja
cmpsb
cmpsl
sbb
dec
add
and
push
fsubrp
mov
sbb
pop
shll
dec
dec
push
cmpsb
insb
push
jbe
xchg
scas
cmpsl
lret
mov
push
xlat
mov
nop
cli
mov
pop
sbb
jae
in
call
xor
pop
in
in
push
push
mov
sub
jp
jns
cmp
mov
scas
and
jo
jge
adc
inc
out
fisttpll
mov
je
aaa
addb
imul
dec
call
mov
dec
sbb
xchg
push
cmpsb
mov
cwtl
pop
dec
xchg
jns
popf
sub
daa
in
pop
repnz
loope
aas
dec
enter
jecxz
aam
add
xor
test
cli
test
sub
fnstsw
dec
pop
outsl
inc
xor
fisubs
cmp
mov
push
jns
fdivl
lock
jecxz
aad
lret
xor
popf
ficoms
add
mov
pushf
pop
mov
sbb
or
sbb
aad
dec
hlt
lods
jae
inc
xor
dec
in
ret
add
mov
mov
fbstp
in
or
into
pop
push
xchg
nop
xchg
xor
in
push
fbld
ljmp
jl,pt
pop
fwait
mov
push
iret
sub
push
and
mov
sub
jmp
mov
fsubrs
mov
lcall
lret
mov
stos
jl
daa
mov
and
cwtl
pusha
cs
dec
call
data16
test
mov
mov
nop
inc
push
out
jmp
arpl
mov
fidivl
cmpsl
push
pop
decl
mov
xchg
cld
xorb
rol
into
add
or
ret
mov
xchg
shl
push
jle
shll
adc
out
les
jle
nop
ret
add
mov
push
pop
insl
stos
and
insb
sub
adc
sub
popf
stc
pop
pop
lea
dec
scas
shll
fs
mov
mov
test
push
xor
fldt
pop
mov
jmp
lret
stos
pop
mov
lret
insl
mov
lret
shll
popa
jg
pop
pop
xchg
rolb
shrd
mov
fists
jmp
push
dec
cmpsb
jne
test
cwtl
adc
sbb
mov
popa
dec
movsb
pop
jnp
pop
push
jg
fiadds
mov
popl
repnz
pop
ja
call
daa
sub
decb
mov
mov
cmpsl
xor
mul
lds
mov
add
dec
add
aam
pop
jg
xlat
xor
das
xchg
xor
adc
popf
mov
je
imul
push
call
adc
mov
add
popf
sbb
mov
pop
mov
aas
pop
and
nop
and
lea
std
sub
pop
rcr
addl
xchg
loopne
in
adc
shll
hlt
stc
cmc
andl
stos
adc
adc
in
addr16
stos
and
pop
sbb
popa
cmp
push
jnp
mov
push
pop
bound
hlt
xchg
rcrb
into
xchg
dec
sbb
or
add
mov
push
dec
shlb
dec
jns
fsubl
mov
xor
xor
hlt
ret
mov
test
xor
jmp
sahf
std
sti
dec
and
xorl
int
push
cmc
dec
fucom
adc
mov
inc
mov
pop
inc
loope
int
push
cltd
mov
outsl
pop
pop
popf
xchg
orl
push
push
or
rorl
mov
sbb
popa
lods
push
jle
arpl
clc
sahf
daa
fdivrl
add
xor
loope
push
and
pop
imul
jg
jmp
in
bnd
add
xchg
add
ja
das
add
pop
cmp
cmpsb
ljmp
les
xchg
jb
icebp
testb
and
sarl
add
sub
inc
pop
mov
shlb
gs
xlat
push
cltd
xchg
faddl
ds
popf
xchg
int
jae
mov
bound
das
xchg
mov
cwtl
inc
mov
mov
les
icebp
sub
pop
lods
jmp
xchg
ret
movsl
push
sbb
sbb
addr16
rcr
mov
insb
sbb
lahf
dec
fisubrs
push
pop
mov
dec
dec
pop
mov
jge
fisubrs
sub
push
xchg
mov
fmulp
inc
dec
dec
inc
aas
adcb
test
lcall
inc
mov
es
jp
or
adc
das
daa
xor
idivl
or
dec
or
addr16
mov
mov
mov
popa
mov
or
outsb
cld
cwtl
pop
add
push
int
pop
push
sub
sbb
adc
jg
xor
out
pop
add
sbb
in
dec
xor
insl
adc
loope
push
push
sub
xor
mov
loope
jp
push
sub
xor
aas
addr16
sbbl
sbb
cmp
out
add
mov
mov
cmp
mov
jp
int3
mov
cmc
cld
adc
insl
dec
mov
and
stos
pop
dec
lods
data16
lods
cmp
or
das
sbb
mov
leave
imull
int
mov
data16
icebp
into
in
dec
mov
cmpsl
mov
and
lahf
jl
adc
xor
subl
dec
leave
push
pop
addl
add
icebp
cmp
fdivp
sub
sub
and
leave
aaa
inc
jno
sub
insb
dec
loope
or
sahf
fistl
fisubrl
xchg
sub
out
popf
pusha
jbe
jae
push
lds
cmp
sti
push
mov
ja
lret
xlat
std
jle
or
sub
dec
mov
cwtl
mov
mov
test
jo
pop
sub
daa
dec
add
jne
shll
fs
enter
dec
mov
ljmp
out
daa
mov
jp
popf
inc
dec
outsb
mov
loope
inc
cwtl
je
notb
xor
add
aas
cmp
lret
xlat
mov
mov
insb
sbb
ljmp
sub
xor
cwtl
stc
ja
ret
lahf
fidivrl
push
push
and
push
sub
popf
dec
push
repnz
add
mov
cmc
mov
add
mov
sarb
mov
jno
push
mov
xchg
jge
into
in
movsl
sub
iret
cmp
xchg
cld
insb
addb
cmp
mov
stos
sar
lret
mov
mov
pop
mov
clc
pop
cmpsb
push
adc
ja
jle
mov
push
dec
inc
jp
jle,pn
loop
or
sarl
sbb
sub
xchg
lret
clc
sub
mov
jmp
mov
mov
popa
adc
cmp
xchg
push
xor
cmpsb
adc
insb
dec
fdivrs
dec
je
mov
test
cmp
rorl
dec
inc
aam
sbb
sbb
mov
into
xor
or
push
xor
stos
and
addr16
xor
pop
sarb
push
add
adc
int3
lods
cmp
jle
lcall
mov
push
jge
push
lock
xchg
popf
mov
js
mov
pushf
jle
and
cmp
int3
mov
fbld
pop
push
jge
pop
fisttpll
mov
imul
out
fistpl
xchg
stos
daa
mov
push
shll
test
jnp
jb
jecxz
sbb
clc
xchg
or
aaa
in
push
imul
dec
cmp
xor
js
fstpl
cli
jg
cmp
or
dec
test
jecxz
or
xchg
fnstcw
cmp
gs
or
cmp
mov
push
jp
dec
adcb
mov
pop
mov
and
push
dec
dec
push
dec
xor
aam
sbb
cmp
in
mov
adc
testl
or
sub
mov
push
push
icebp
pushf
aad
lret
mull
inc
insb
add
sti
sahf
sub
mov
xchg
or
test
push
popa
fcmovnu
or
scas
xchg
sub
inc
and
sub
int3
and
xchg
insb
sti
aas
pop
mov
icebp
jl
xchg
inc
and
cmp
sub
outsl
pop
mov
dec
dec
fs
sbb
data16
xchg
xor
lea
sbb
or
add
or
mov
lret
adc
and
out
out
mov
mov
rcll
or
dec
call
pusha
adc
loopne
dec
xor
sti
and
push
mov
mov
push
icebp
xor
scas
lds
mov
xchg
roll
es
push
dec
fnstsw
aaa
orl
psubq
adc
xor
dec
sbb
aad
dec
sbb
les
cmp
aad
xor
lret
shll
in
loopne
mov
and
aam
les
fdivrs
iret
insb
xchg
jp
psubsw
mov
movsb
pop
cwtl
xor
dec
ds
cs
xor
pusha
or
mov
or
mov
sub
push
pop
jle
jbe
test
mov
add
xor
pop
add
sahf
and
mov
shl
push
push
add
or
and
sbb
push
pop
add
jge
add
pop
test
js
push
pop
test
pop
xchg
pop
pop
sbb
nop
ja
push
mov
ds
gs
pop
xlat
insl
in
leave
lret
call
sbb
in
sbb
and
pop
mov
ja
fisubs
es
lret
fiadds
sub
int
dec
jecxz
mov
mov
pop
stos
bsr
jp
leave
dec
mov
sub
cmc
cmpsl
mov
mov
outsl
adc
mov
xchg
repz
or
or
push
dec
xor
lock
push
das
fistl
jg
mov
das
into
aaa
sub
pop
lret
cs
div
pop
mov
enter
cld
xor
pop
jne
mov
add
pop
mov
or
rep
xchg
jns
int
xor
push
push
sbb
xor
sbb
test
stos
outsl
and
out
aaa
leave
and
dec
lahf
inc
nop
xchg
sub
sub
les
inc
sub
cmp
in
pop
in
shl
sti
jmp
ja
inc
loope
call
mov
xor
xchg
mov
xor
dec
pushl
sbb
mov
popf
mov
xor
push
in
out
ljmp
clc
mov
out
stos
adc
cmp
cmp
xor
mov
cmp
adcl
add
jne
test
loop
inc
mov
adc
xorb
movsl
test
adc
push
fldenv
nop
add
sub
sub
lcall
out
out
and
sbb
add
jo
je
mov
mov
stc
fdivrl
cwtl
fidivl
popf
aam
mov
pushf
jo
outsl
sub
fucomip
mov
mov
jmp
andb
cltd
hlt
je
inc
aam
movl
jmp
iret
jecxz
dec
sti
out
adc
aad
jecxz
cwtl
pop
cmp
or
popa
pop
dec
push
mov
cld
xchg
mov
xchg
mov
jecxz
mov
aas
pushf
repz
scas
ss
cmp
cs
bound
fldenv
xor
xchg
and
das
imul
jnp
fwait
nop
xchg
adc
cli
sbb
ficomps
shlb
test
jae
test
popf
push
mov
xchg
jge
xchg
xchg
and
stos
bound
jmp
addl
inc
push
shll
xor
stos
dec
or
jp
pushf
call
lods
sbb
xor
xchg
mov
call
clc
stos
xchg
adc
xchg
xor
clc
pushf
enter
mov
xor
xor
xchg
sub
subl
add
sbb
jbe
or
int3
imul
push
xchg
mov
je
outsl
add
mov
and
jge
fisubs
jb
pushf
movsb
xchg
sbb
enter
lret
mov
add
or
mov
add
add
xlat
int
lea
cwtl
cmp
mov
jo
mov
or
pop
pop
cmp
dec
or
aad
inc
insb
and
push
mov
dec
loopnew
icebp
fnstsw
bound
pop
pop
cmc
test
dec
js
cmpsl
push
mov
push
add
sub
popa
inc
xchg
jae
into
dec
in
dec
xchg
daa
cltd
inc
rorl
dec
dec
clc
sub
out
pop
mov
orb
pop
popf
xor
sub
lock
sub
dec
mov
cwtl
rcrb
mov
xor
and
aad
or
inc
xor
stos
lahf
scas
scas
cld
push
lcall
push
rcrl
imul
push
loopne
cli
and
les
sub
cld
in
push
push
loop
ljmp
sti
pop
out
adc
andnps
push
loop
pop
jno
or
and
scas
lods
das
jmp
pop
mov
bound
dec
fs
in
or
out
add
push
xor
dec
dec
arpl
dec
fstps
lret
shrl
psubd
mov
data16
aas
test
or
pop
popf
jbe
mov
xchg
cmc
jmp
addr16
sub
gs
mov
sbb
ret
xor
rorl
in
jo
inc
ja
ljmp
xchg
dec
repnz
call
arpl
mov
outsb
ja
add
adc
or
loopne
cmp
ss
and
inc
loop
add
inc
in
mov
mov
sbb
xor
jecxz
addr16
lret
push
ds
sbb
fsubr
mov
push
xchg
adc
xchg
es
rclb
iret
xor
sbb
fs
mov
hlt
pushw
sbb
shr
adc
cmp
sub
divb
lcall
and
sbb
icebp
and
adcl
pushf
mov
mov
dec
pop
pushf
enter
arpl
sub
lahf
push
inc
fnsave
and
mov
pushf
jle
das
inc
insl
mov
cmp
int
hlt
inc
int
mov
movsl
cli
jb
xor
push
pop
test
and
shl
nop
jl
jno
jg
xchg
add
sarb
pop
adc
mov
bound
and
pop
cmp
mov
or
or
pop
stos
fstpl
add
add
fiadds
sub
ljmp
fisttpll
out
int3
jecxz
inc
pop
cmp
dec
sti
mov
pop
pop
fdivrs
xchg
loope
and
cmp
shll
xchg
mov
mov
enter
inc
stc
ud1
out
inc
sub
cmp
mov
inc
cmp
or
and
bound
sbb
roll
or
fiadds
fadd
sub
iret
test
dec
inc
lds
movb
push
bound
mov
lock
enter
int
fsubrl
fdivrs
test
gs
popa
scas
adc
aas
shlb
repnz
loop
test
pushw
cmp
repz
mov
add
jg
sub
cmpsl
jp
lahf
push
dec
repnz
or
ja
insb
adc
mov
test
sarb
cmp
stos
push
ret
add
mov
lret
jbe
aam
push
xor
loop
ds
sbb
push
sbb
push
push
dec
ljmp
inc
daa
dec
sbb
aad
ud0
dec
xchg
mov
stos
mov
push
pop
loopne
cmp
insl
imul
in
inc
subl
inc
dec
adc
sbbb
pop
insl
movsb
mov
jge
and
shll
je
out
jne
xchg
mov
pop
lcall
dec
scas
scas
movsb
test
cwtl
shll
loop
scas
divb
adc
cmp
in
inc
gs
enter
mov
in
lahf
fwait
push
jns
jmp
jl
mov
flds
mov
or
in
mov
leave
test
cmc
ljmp
mov
call
in
mov
shlb
push
lock
jae
sti
dec
ljmp
out
adc
out
jge
jp
mov
mov
mov
sbbl
mov
add
xchg
pop
inc
ljmp
sub
icebp
pop
jp
cs
fisubs
insb
dec
out
sarb
mov
into
or
xchg
inc
dec
mov
adc
test
mov
inc
add
mov
dec
mov
setle
in
xor
mul
cmp
pop
cld
inc
mov
pop
adcl
das
or
jl
shl
xor
inc
in
out
push
jo
lea
sub
or
jle
sbb
lods
and
mov
mov
cs
jg
pushf
inc
lea
in
cmp
adc
rcl
roll
xor
insb
nop
scas
in
std
jmp
dec
cmp
adcb
not
xchg
inc
push
imul
adc
mov
enter
gs
icebp
es
repz
rorl
or
mov
xlat
mov
scas
jecxz
mov
mov
or
mov
js
ljmp
adc
hlt
jo
shr
xlat
dec
cld
bound
fbstp
or
add
aas
out
cld
aad
ret
repnz
in
pop
push
scas
dec
mov
call
cmp
std
jecxz
xchg
mov
outsl
test
and
test
and
cmc
enter
lret
shll
arpl
inc
push
pushl
cmp
outsb
fbld
xchg
in
sub
stc
jp
inc
add
call
sbb
jecxz
jge,pn
inc
pusha
pop
cmp
mov
xor
sbb
fistpll
movsl
adc
sub
jl
sbb
ret
stos
out
jmp
mov
roll
xor
or
inc
std
or
push
mov
add
jns
pop
adc
pusha
clc
mov
and
loopne
repz
sub
sub
in
jge
xorb
filds
imul
and
mov
cmp
fs
imul
push
or
adc
inc
cmp
mov
ja
sub
sub
imul
xchg
imul
mov
and
inc
add
subl
rep
pop
loopne
jg
scas
aad
pop
leave
fneni(8087
repz
fmuls
push
pop
cmpsl
stos
enter
push
pop
int
cmp
xchg
cmpsl
cmc
sbb
cmp
hlt
movsl
stos
and
add
cs
out
xchg
inc
lock
jg
lret
mov
ds
out
jno
addr16
mov
jg
lahf
inc
xchg
dec
pop
cld
sbb
ret
push
push
shrl
cmp
cmp
or
out
dec
xchg
push
mov
lea
mov
neg
push
shrb
sub
xchg
cmpsb
clc
pop
mov
sub
inc
or
in
stos
test
orl
adc
mov
jle
push
icebp
jo
mov
fs
iret
or
dec
nop
push
lods
or
or
jl
fists
or
icebp
nop
cwtl
sbb
cmpsl
mov
add
add
jb
sub
inc
fisubl
daa
xchg
test
mov
jo
add
pop
fisubrl
mov
jle
push
out
lods
mov
inc
aam
or
shlb
and
cmp
addr16
push
shl
sbb
xor
add
gs
xor
insl
popf
cld
xchg
add
stos
pop
pushl
push
pop
mov
mov
sub
push
jg
lods
dec
notl
dec
jbe
jl
repnz
je
das
lret
and
std
aad
loope
dec
pop
pop
mov
repz
mov
cmpsl
xor
arpl
in
pusha
clc
pushl
aam
mov
jo
sbb
in
cwtl
or
cmp
lret
fiadds
sarb
inc
mov
test
fnstenv
mov
rcrl
cmp
aad
cltd
and
loop
push
or
js
outsl
sub
xor
ljmp
mov
shlb
xor
int
gs
imul
sub
jg
xchg
mov
jmp
sbb
xchg
sub
lock
jb
cmpsb
insl
or
push
sti
push
push
cmp
jmp
int
jl
aaa
lock
push
cmp
mov
xlat
icebp
stos
nop
mov
icebp
lret
adc
sub
sahf
cmpsb
das
inc
inc
mov
pushf
dec
xor
push
xchg
dec
mov
mov
and
adc
int
dec
fcoms
rclb
jno
push
mov
hlt
dec
jnp
dec
cmc
ret
movsl
sub
add
dec
hlt
lods
push
jmp
mov
jmp
jo
inc
inc
lods
out
and
jmp
ja
push
sbb
add
outsl
pop
shr
decl
shl
sbb
inc
cs
aaa
sub
inc
push
outsl
sarl
in
xchg
adc
std
stc
push
sti
mov
cmp
mov
cli
or
mov
ret
test
nop
das
adc
cli
in
and
cmp
popa
cmp
xor
mov
mov
insl
sbb
pop
inc
fs
cmp
and
fdivrs
daa
out
mov
xlat
cld
scas
adc
movsb
add
aad
shlb
ror
sub
cmp
fldt
cmpsb
pop
popf
lret
cmpsb
in
pop
cld
add
pop
push
cmp
icebp
sub
cmp
repnz
sbb
xchg
fstpt
test
rcl
jb
scas
cmp
fldcw
in
mov
imul
xor
xchg
mov
fwait
xchg
orb
iret
add
fcoms
sub
sub
mov
pop
stos
mov
inc
mov
hlt
test
dec
mov
jge
adc
dec
fistps
movsb
wrmsr
push
outsb
push
movsb
fisubs
xchg
sub
push
sub
add
in
inc
sub
mov
push
jg
lahf
xorb
ret
icebp
fwait
or
xor
lret
insb
ss
jl
xorl
mov
mov
mov
div
gs
xchg
dec
ror
shr
mov
sti
das
mov
pop
pop
mov
inc
jg
outsl
jl
ja
pushf
fiaddl
cmp
pusha
lea
cmpsl
inc
and
sub
mov
push
repz
pop
cmpsb
push
add
jb
sub
lcall
flds
pop
xor
xchg
in
adc
out
cmp
and
xchg
push
jbe
testl
adc
dec
pop
and
mov
jp
cmp
inc
mov
loopne
pop
lret
pop
stos
sub
adc
call
lret
push
insb
or
inc
dec
push
sbb
push
push
mov
cmp
imul
fdivrs
scas
das
dec
adc
mov
icebp
jb
pop
push
sub
daa
inc
daa
push
dec
mov
xchg
adc
fidivs
or
inc
dec
dec
gs
ljmp
xchg
stos
adc
inc
dec
stos
inc
outsl
add
int3
aam
xchg
add
fcompl
cld
pop
dec
cwtl
mov
xchg
cmp
and
je
in
inc
push
nop
fimull
aas
imulb
cmp
xchg
xor
ret
mov
push
push
cmp
addr16
mov
cmc
insl
mov
insl
aaa
mov
jmp
xor
insl
mov
inc
call
aas
pop
pusha
mov
cmpsb
dec
ljmp
stc
pop
mov
into
cmp
adc
cltd
fwait
sbb
dec
xor
mov
lret
dec
nop
dec
jb
jo
dec
xchg
mov
dec
adc
jb
cltd
rolb
test
outsb
addl
adc
es
add
nop
mov
arpl
testb
xchg
pop
inc
add
lret
ret
arpl
rolb
push
and
mov
pusha
or
mov
mov
ja
std
xor
das
es
repz
lock
xchg
or
in
outsb
xchg
cmpsb
mov
arpl
mov
push
mov
cmp
cmp
out
popf
ficoms
insb
push
sahf
in
ds
cmp
push
jbe
nop
pop
add
daa
ret
das
in
add
shl
fldenv
lods
cmp
mov
jno
repnz
sbbb
leave
fidivl
loope
and
rorb
mov
enter
je
adc
aaa
inc
repz
orl
mov
cmp
pop
xor
xor
cmovo
ss
sub
test
fisttps
pusha
mov
ret
movsb
ds
mov
add
mov
nop
fs
inc
stos
clc
push
sub
aad
mov
mov
mov
div
mov
push
cmpsl
cs
fs
mov
push
pop
adcb
inc
push
loop
cmp
push
dec
jo
pop
jl
jb
adc
or
ja
push
adc
mov
dec
pop
or
xor
cmpsl
testl
mov
out
sub
xor
cmp
mov
cmp
push
dec
mov
xchg
or
push
setge
sub
xorl
icebp
sbb
xchg
mov
adc
sub
or
ds
adc
and
jp
out
aas
mov
cmpsb
push
je
mov
repnz
lock
fistps
test
xlat
pop
gs
scas
xchg
inc
push
jle
outsb
ficompl
inc
stc
adc
cmp
push
push
or
sub
inc
sbb
pop
jmp
call
lret
arpl
fldenv
scas
out
dec
lret
xorb
int3
ret
rcrl
lret
sub
add
and
push
rcrb
push
mov
cmp
imul
jg
xchg
pushf
and
sub
dec
sub
enter
enter
scas
or
lret
sahf
rcpps
pop
nop
xor
fcomip
jne
jb
push
das
sarb
pop
shrl
mov
inc
jno
or
ss
cs
mov
mov
xor
or
fidivs
outsb
ss
in
adc
mov
push
or
out
lahf
or
cmp
pop
out
push
sbb
mov
les
adc
xor
dec
lds
addr16
xchg
cltd
aas
aad
mov
scas
add
shr
adc
mov
jecxz
xchg
jbe
loop
in
call
roll
cmp
cmp
lcall
xchg
and
fldcw
cmp
jg
pop
lds
sbb
inc
and
es
dec
mov
mov
into
scas
sbb
aam
int3
adc
jge
adcb
leave
mov
repz
push
mov
cltd
jo
ljmp
sbb
icebp
push
aas
push
xchg
cli
sub
pop
pop
clc
mov
pop
cwtl
sub
scas
mov
sub
push
add
fdivp
cmp
mov
dec
sbb
xor
inc
mov
mov
add
std
mov
mov
mov
add
adc
lahf
inc
nop
stc
test
mov
xchg
xchg
out
lods
jo
jo
jbe
scas
mov
xchg
ss
aad
xor
out
jmp
mov
cmp
clc
ficoml
pop
cltd
push
ljmp
xor
cli
ds
pop
and
test
mov
imul
mov
dec
push
fdivrs
into
adc
xchg
and
lret
aaa
inc
std
jmp
gs
fiadds
shrb
pop
xor
sbb
fcomps
lret
popf
dec
push
cmpxchg
je
iret
and
cli
daa
icebp
inc
xchg
aam
test
dec
xchg
sub
pop
fnop
or
lahf
add
mov
xchg
stos
out
dec
dec
mov
insb
iret
lret
loopne
sbb
sbb
ret
xrelease
jnp
or
mov
sub
lods
add
xchg
xor
mov
dec
mov
mov
dec
pop
mov
adc
push
xchg
lods
pop
outsb
sub
mov
jge
xchg
lret
jge
and
mov
andl
repz
mov
repnz
decl
sbb
les
mov
orb
int3
cmp
dec
add
fistpll
hlt
mov
dec
fmull
push
cmpsl
shl
sub
inc
popa
mov
sbb
mov
dec
push
jmp
xchg
mov
rolb
shll
mov
mov
push
sarl
jnp
ljmp
ja
inc
in
and
lods
sbb
fwait
js
sub
mov
push
fisubrl
rcll
sub
add
test
test
sub
icebp
mov
outsl
enter
mov
jp
xchg
daa
in
jecxz
add
cmp
and
push
loop
adc
jge
adc
mov
mov
cmpsb
sbb
lret
setbe
sahf
movl
dec
push
xchg
int
dec
hlt
and
leave
inc
jnp
mov
clc
inc
ret
pop
mov
push
cmpsl
pop
and
xchg
jns
enter
lahf
xchg
mov
push
inc
sbb
mov
testl
ret
ret
call
outsb
xchg
pop
scas
cmp
mov
mov
repz
mov
imul
lret
mov
sub
out
mov
and
or
sub
xor
pop
xlat
leave
lods
aaa
inc
mov
or
or
shl
mov
mov
add
jae
les
outsl
sub
lods
mov
aad
push
xor
sarb
in
outsb
xchg
ss
rcrb
add
fmulp
xchg
loope
mov
xor
sub
verr
stc
cmp
pop
addr16
sbb
jns
data16
push
sub
xchg
add
movhps
jge
cmp
shrl
dec
cmp
inc
lds
sbb
ds
lcall
fisttps
das
push
mov
lods
shlb
dec
and
mov
jnp
pop
scas
int3
addr16
and
out
push
push
rorb
jnp
pop
lods
add
push
sbb
mov
mov
cmpsl
outsl
adc
inc
aad
mov
daa
pop
mov
loop
ror
adc
add
hlt
outsl
fistpl
mov
sbb
jl
adc
push
stos
xchg
mov
repnz
scas
push
sbb
push
pop
loope
daa
mov
sbb
sbb
in
push
inc
sarb
dec
jo
mov
dec
xchg
xchg
and
sub
icebp
sub
fnstcw
cld
in
and
mov
cli
call
lahf
adc
mov
mov
jo
jl
loop
mov
dec
adc
movsb
fnsave
mov
xchg
mov
push
call
lods
add
sub
out
pop
dec
imul
stos
or
es
out
inc
rorb
cld
pop
mov
ja
insl
in
lret
mov
popa
int3
fldcw
push
sbb
iret
mov
cmp
sbb
ss
aam
lahf
add
xor
push
imull
jle
xor
fimull
lcall
push
lcall
repnz
in
inc
loop
inc
aas
jmp
or
dec
xor
imul
xchg
mov
jle
stos
test
repnz
scas
lods
xchg
mov
fidivl
sub
xor
adc
outsb
dec
jb
addr16
xchg
sti
cmpsb
ret
aad
and
or
out
add
lock
mov
jge
mov
jo
sti
pop
scas
mov
pop
push
clc
cmp
fs
mov
mov
insb
jmp
mov
fimull
xchg
out
sbb
sarl
hlt
repnz
mov
insb
stos
cmp
xlat
stc
xor
cmp
xor
push
xlat
shrb
std
xor
sub
sub
ret
pusha
pushf
sub
cmpsb
lods
jbe
inc
sbb
mov
sarb
mov
test
repnz
call
xor
adc
jmp
mov
std
in
mov
cmp
subb
push
in
out
add
mov
pop
ret
sbb
pop
add
jno
das
push
addr16
popf
add
rcl
loopne
out
xchg
sub
cmp
hlt
mov
and
push
or
push
lret
lcall
xchg
dec
and
sbb
out
scas
and
lock
out
test
inc
shlb
repz
mov
sarl
das
jns
dec
cmp
lock
mov
test
dec
jo
and
data16
xor
add
inc
int3
cmp
pop
xchg
xorl
push
dec
ret
xchg
mov
movsl
das
cli
outsl
std
jo
pusha
sbb
stos
inc
xor
mov
mov
mov
outsb
push
mov
out
sbb
es
push
fsubrp
test
mov
loopne
stos
dec
add
mov
test
pushf
sub
popf
inc
xchg
push
pusha
nop
lock
pusha
lds
lds
push
mov
icebp
iret
dec
loopne
add
jns
insb
mov
xor
imul
ljmp
std
inc
mov
ret
jp
inc
xchg
jno
iret
dec
fs
mov
push
inc
add
xorl
cmc
add
imulb
aaa
mov
xchg
iret
mov
inc
mov
xchg
mov
outsl
push
and
into
enter
rcll
adc
adc
sub
test
shl
add
xor
pop
inc
sub
or
jp
cmp
mov
and
xor
movsl
lret
mov
sar
push
jmp
or
xor
push
aas
negl
cli
xchg
adc
fidivs
push
lret
into
rcll
in
out
cmp
icebp
test
or
sub
outsb
push
dec
hlt
stos
arpl
and
push
popa
mov
cmp
lcall
adc
inc
sbb
inc
sub
cmp
test
sub
sahf
sarb
mov
push
xor
jmp
push
mov
aad
daa
xchg
mov
insb
xor
lahf
inc
and
shl
das
xchg
push
mov
mov
inc
fs
jp
mov
data16
cmp
xor
inc
push
ljmp
shr
hlt
cmp
mov
sbb
or
filds
jnp
scas
cs
mov
adc
test
or
orl
cmp
and
ljmp
jle
mov
out
dec
cmp
mov
jae
jmp
cmpsl
aad
jle
mov
mov
scas
sub
lret
icebp
fs
add
leave
mov
cli
cmc
push
push
xor
lret
mov
sar
subb
or
cli
lret
mov
fdiv
fadds
inc
in
xchg
mov
pop
popf
cmp
push
aam
aas
icebp
je
pop
add
adc
fldt
shlb
or
push
jmp
pusha
mov
adc
and
add
in
dec
mov
mov
movsb
adc
loope
icebp
adc
hlt
popa
outsl
dec
aad
add
push
imul
iret
and
lds
das
loop
insb
xchg
aaa
fs
xchg
jnp
push
jp
loope
mov
ss
mov
xor
orl
push
sbb
int3
out
push
popf
pop
pop
jbe
mov
mov
sahf
loopne
sti
divb
in
ret
scas
ss
ljmp
hlt
rorl
add
cmc
outsl
dec
lock
xor
jnp
dec
push
push
shl
cli
cwtl
xchg
push
aaa
repz
mov
ljmp
xor
notl
push
fldenv
inc
fisubrl
in
gs
and
or
sub
lds
out
imul
and
testl
dec
sub
push
push
and
out
adc
push
jle
pop
add
pushf
push
cmp
add
add
aam
inc
or
cmpb
insl
ljmp
mov
cld
push
lea
fldt
sahf
jl
stos
hlt
push
jae
das
lock
lret
push
dec
push
js
or
xchg
addr16
cmp
cld
cmp
pop
popf
sub
in
dec
jle
lods
adc
pushf
xor
and
lret
stos
insb
sbb
enter
cmp
or
dec
push
iret
in
inc
xchg
fwait
repnz
les
xor
add
push
sbb
mov
movsl
mov
xchg
lcall
fists
add
pop
sbb
scas
xchg
inc
mov
inc
ja
shl
push
imul
jns
push
dec
movsb
sahf
xlat
enter
dec
cmpl
xorl
stc
dec
or
ret
xor
iret
xor
ret
daa
add
jl
xchg
and
add
or
sahf
ret
int3
push
pop
shrb
cs
pop
aam
mov
inc
mulb
call
loop
and
pop
aad
loop
mov
stos
sub
add
call
cwtl
rol
xor
scas
into
ficoml
xchg
cltd
sbb
pusha
mov
jae
loope
jo
cld
in
sub
cmp
aas
shr
cmp
addr16
add
dec
mov
cmp
xor
cmpw
cli
or
mov
add
xchg
jle
sar
movsb
fldenv
int
out
idivl
inc
dec
test
bound
or
jo
fsubl
jno
scas
cmpsl
jle
sbbb
movsb
inc
cwtl
daa
adc
in
or
das
mov
or
call
test
repnz
xchg
out
ja
out
jbe
mov
stos
cmp
in
push
xor
scas
inc
xchg
mov
loopne
and
pop
adcl
xor
stos
or
add
adc
mov
push
insb
adc
into
sbb
aad
and
cli
xchg
popw
hlt
test
icebp
and
cmp
mov
sub
jp
push
sbb
lret
ljmp
push
cmp
xor
jg
pop
or
rclb
jae,pt
sub
cmp
stos
out
lea
iret
push
test
fstpt
xor
push
adc
divl
syscall
data16
xchg
outsl
ds
push
push
add
dec
or
inc
aaa
xchg
sbb
dec
mov
pop
test
jae
xchg
adc
jns
fdivs
testb
call
shll
iret
mov
aas
adc
xor
mov
testb
rorb
je
jg
loop
sbb
cmp
fsubs
dec
pop
mov
loop
add
rclb
lahf
inc
or
outsb
and
sbb
icebp
test
jno
push
ret
sub
lods
mov
ret
call
lahf
outsb
leave
adc
push
aad
adc
and
or
mov
frstor
push
adc
jo
daa
aaa
arpl
sub
jns
push
cmpsb
pop
jp
inc
mov
push
sbbb
lods
stc
push
cmp
mov
xor
inc
mov
int
dec
mov
es
mov
inc
shll
push
fcmove
fisttpl
test
or
and
xor
in
mov
mov
dec
push
js
nop
jbe
clc
fsubl
or
cmp
sbbb
mov
xchg
popa
lea
enter
and
test
sub
jg
loope
pop
or
and
and
inc
cmp
lret
ret
mov
repnz
enter
les
push
aas
not
jnp
push
cli
push
addr16
pop
sbb
sub
jmp
xchg
mov
xchg
test
push
addr16
xchg
jns
jns
or
mov
mov
and
int3
loop
sbb
dec
jmp
das
gs
lods
mov
sahf
es
inc
outsl
jnp
push
push
pop
incb
cmp
pop
outsb
mov
and
int
jle
inc
xor
cmpsb
pushf
cld
dec
aaa
lods
mov
in
add
add
and
mov
sbb
lcall
xchg
inc
jmp
xchg
in
cmc
fldl
loopne
negl
les
aam
loope
mov
sbb
bnd
add
lcall
cmp
xchg
lea
fsubrs
pop
fsts
add
jmp
sar
jecxz
mov
sbb
test
sbb
test
and
sub
js
add
fbld
add
push
aad
or
sub
dec
in
jno
mov
ror
popf
fbld
cmpsb
add
jae
sub
jg
pop
fwait
cmp
mov
xor
movsl
shll
call
ja
insl
imul
negb
cmpsl
sub
testb
addr16
dec
aas
xor
xchg
loopne
push
outsb
mov
pop
arpl
testl
lods
xchg
fcom
shlb
je
jl
mov
mov
push
sub
lds
lretw
jbe
sahf
leave
push
or
insl
mov
sbb
or
fstpt
jno
rorb
idivl
mov
fdiv
xabort
in
and
icebp
adc
cmc
push
imul
or
out
xor
repnz
cmp
enter
movb
add
xchg
cmp
iret
es
or
sub
pop
jecxz
sub
repnz
add
lret
ds
insl
hlt
xchg
sub
in
mov
adcb
add
in
fdivrl
jge
xchg
not
arpl
jnp
adc
mov
push
movsl
lods
cmp
sbb
inc
mov
adc
mov
push
ficoms
adc
std
xchg
pop
mov
or
aas
inc
in
inc
cmp
mov
push
xchg
jne
xor
xor
cld
xor
test
mov
mov
test
jmp
xchg
mov
adc
cmp
add
mov
sbb
adc
sbb
out
fisubs
push
rorb
sbb
xchg
jp
cmp
sub
sub
test
iret
mov
push
xor
outsl
fcomps
pop
xor
stos
push
jl
push
mov
add
adcb
int3
das
cmp
cmp
sahf
sub
popa
jecxz
pushf
xor
sub
stos
mov
and
leave
and
popa
loop
pusha
inc
mov
push
dec
push
xor
jp
rclb
push
mov
jae
push
or
sarb
mov
jno
or
xorb
adc
pop
push
mov
pop
push
mov
adc
rsm
add
stos
cmp
mov
cmc
sbb
fadd
or
enter
xchg
sbb
cs
mov
inc
stos
andl
shlb
xor
mov
lcall
pop
mov
gs
ljmp
mov
shr
inc
jmp
add
sbb
sbb
movsb
jno
andb
adc
into
loop
add
push
adc
cmp
in
xchg
jae
push
cmpsl
rorl
xor
jl
mov
aaa
rclb
ret
fcomp
jno
dec
jl
lret
adc
loope
addr16
sub
jecxz
adc
push
in
test
les
lds
sbb
add
xor
or
pusha
pusha
jp
out
fmuls
jne
cmp
dec
sbb
popf
movsb
sbb
iret
xchg
cltd
cs
int
sub
and
pop
cmpsb
dec
fcompl
pop
inc
add
add
cmc
pop
pop
jbe
js
lds
dec
lods
test
pop
test
adc
jb
jecxz
call
sub
push
and
xchg
pop
jl
adc
push
sbb
pop
or
mov
xchg
mov
movsb
add
sbb
push
push
xchg
aaa
xchg
cmp
imul
sarb
cmp
les
arpl
incl
pop
imul
jne
gs
jmp
ljmp
cltd
sbb
movb
cmp
mov
std
mov
lock
jge
int
outsb
mov
pop
cli
loopne
push
push
cmc
xchg
or
fsubrs
aam
mov
mov
jl
ds
or
mov
mov
std
mov
out
fnstenv
mov
faddl
mov
dec
test
mov
xchg
push
dec
stos
nop
lcall
jmp
outsb
bound
pop
add
pop
mov
insb
ja
pop
or
mov
scas
es
nop
ficoml
jo
pop
inc
add
repz
movl
lea
xor
xchg
not
and
pop
ror
rolb
mov
cwtl
mov
test
sub
cmpsl
loope
cmpsl
push
pop
add
je
in
ja
dec
in
shr
test
or
pushf
test
sbb
cs
icebp
or
xor
xor
cmp
mov
lock
cmpl
xchg
xor
dec
ret
and
pop
xchg
push
sarl
and
mov
mov
daa
mov
cmpsl
push
mov
into
adc
enter
outsb
jle
or
or
fs
xor
push
mov
pop
xor
daa
fwait
adc
and
in
mov
mov
out
enter
add
jecxz
mov
cwtl
in
scas
cmp
jge
sub
dec
adc
stc
test
movsl
dec
jb
pusha
mov
fwait
cmp
cwtl
mov
mov
ljmp
mov
dec
inc
pop
pushf
ja
lcall
in
dec
fiaddl
push
dec
nop
aaa
in
out
sbb
or
pushf
mov
add
pop
test
jmp
cwtl
inc
hlt
pop
stc
ds
fstpt
pop
jb
xchg
adc
xlat
popf
cmpsl
jo
pushf
and
inc
aad
mov
pusha
fiaddl
adc
mov
stos
and
outsl
out
arpl
ret
mov
push
outsl
xchg
bound
sub
jbe
fsubl
pop
push
xchg
repz
mov
out
fs
dec
dec
repnz
inc
xchg
fildl
dec
xchg
incl
mov
pop
mov
inc
sbb
out
sbbb
add
mov
fisttpll
sbb
data16
dec
fstps
clc
mov
lret
mov
addl
shr
out
lret
out
push
insb
push
adc
mov
into
push
ret
cmpsb
loopne
sbb
rorb
mov
mov
adcl
cmp
or
mov
cltd
mov
ret
mov
daa
pop
imul
adc
jns
push
xor
out
jmp
and
notb
fwait
jmp
cmp
push
jle
lods
dec
cwtl
push
ja
mov
mov
test
mov
push
xchg
lods
pop
das
sub
jnp
pop
lds
pop
push
push
pop
and
mov
pop
cmp
cmc
sti
adc
stos
std
and
dec
pop
stc
mov
push
lods
es
mov
in
fs
aas
out
mov
sbb
jmp
adc
mov
outsl
xchg
sbb
and
sub
notl
sbb
inc
mov
mov
add
inc
cwtl
testb
jns
jp
stos
sbb
sbb
xchg
cmp
inc
adc
orb
ja
mov
push
cmp
movb
insl
push
lcall
test
xchg
cmp
lret
jnp
rcrl
xchg
lock
inc
jno
add
push
mov
push
outsb
inc
inc
jmp
and
loope
mov
fidivs
jae
cmp
mov
inc
sub
xor
es
xor
test
nop
add
adc
adc
shlb
pop
loopne
enter
adc
mov
xchg
lods
sub
add
mov
push
in
ficoml
movsb
push
xchg
adc
cltd
dec
movsl
mov
cld
push
mov
jnp
negb
insl
jnp
push
movsb
mov
mov
lret
pop
test
xchg
lcall
jg
lods
js
xchg
cmp
mov
jno
imul
ja
aaa
scas
leave
decl
dec
xor
dec
stc
dec
cmp
fnstcw
lds
hlt
or
dec
xchg
rolb
fwait
pusha
iret
clc
and
repz
xchg
xor
pop
jae
test
fidivs
iret
jbe
adc
mov
cmpsl
adc
sub
imulb
aas
mov
sbb
sub
dec
test
lods
add
imul
add
push
xor
or
fbld
jmp
pop
pop
stos
sbb
mov
repz
inc
inc
push
push
sbb
or
pop
shrl
rcll
fisubs
push
add
loope
sarl
pop
sub
and
jmp
test
xchg
dec
pushl
dec
dec
pop
lock
repz
nop
cs
jo
and
jae
roll
xor
xchg
lods
mov
js
sub
popf
cmp
inc
or
add
icebp
or
loope
pushf
xchg
inc
jo
mov
add
or
sbb
xor
loopne
popf
or
popa
jecxz
mov
movlps
push
push
adcl
loopne
pop
sub
scas
jne
pop
sbb
idiv
repz
pop
pop
sub
inc
lock
adc
ss
pop
sub
adc
aas
xchg
cwtl
push
fistl
jbe
fsubrs
cs
jae
push
cmp
ja
add
test
ljmp
xor
lods
aad
in
sub
test
bound
mov
inc
jnp
dec
xchg
out
cmp
mov
clc
dec
or
dec
jp
pop
movsb
pushf
push
subl
cmp
push
sbb
mov
push
daa
pushl
sub
add
xchg
rorb
sbb
out
jno
mov
mov
jae
addr16
and
sbb
jl
lret
mov
cmp
or
mov
dec
je
fisubl
mov
or
shll
and
adc
jns
stos
je
mov
dec
mov
inc
sub
jbe
pop
or
dec
pop
xchg
shll
andb
test
add
add
or
out
roll
push
in
and
or
push
dec
in
pop
xor
mov
repz
xlat
addb
scas
repnz
adc
push
dec
add
mov
int3
adc
mov
and
loop
sarl
or
ja
cmp
test
push
movsb
je
lods
inc
pop
jge
dec
stc
notb
xor
fsubrs
or
or
xlat
and
pop
aaa
ret
mov
hlt
in
jno
and
dec
add
fwait
icebp
jae
das
adc
add
aas
imul
addr16
jp
xchg
inc
hlt
call
fwait
shlb
or
inc
xchg
pop
push
mov
jbe
mov
stos
inc
add
outsb
pop
cmpsb
gs
mov
iret
ja
xchg
sbb
mov
push
ljmp
shll
xchg
inc
mov
out
iret
dec
mov
sub
js
mov
mov
dec
test
rolb
xchg
sbb
inc
popa
fldenv
pop
aas
dec
fdivl
out
inc
add
pop
cmpsb
out
push
inc
stos
mov
push
mulb
push
in
and
pop
push
lea
cmp
adc
das
daa
insb
imul
add
mov
scas
jbe
pushf
sub
and
leave
add
dec
mov
push
inc
les
addr16
es
jp
pushf
idivl
pop
inc
add
mov
xchg
movsl
add
or
sbb
dec
jecxz
js
push
test
fistpll
adc
xchg
mov
ficompl
lea
bound
lcall
sbb
cmpsb
aas
jl
add
in
in
out
xchg
leave
outsb
cld
and
pop
and
addb
sub
mov
mov
movsb
push
pop
mov
push
cmc
pop
enter
es
sub
and
jle
fimull
iret
daa
lods
xor
pop
push
fists
mov
ljmp
int3
inc
jp
push
int
sub
jns
lret
adc
mov
je
sbb
jae
or
xchg
cmp
sbb
or
inc
shrl
lcall
out
jbe
and
or
mov
and
loop
push
mov
push
fisttps
mov
roll
xor
xchg
cld
daa
adc
aad
cmpsb
fcoml
int3
insl
push
jle
add
sahf
lods
pmulhuw
loopne
xor
das
in
pop
and
ljmp
imul
dec
cmp
insl
mov
push
popf
enter
add
mov
rclb
cmp
out
jbe
lock
mov
fidivs
fdivr
fimuls
and
add
xchg
lret
jmp
mov
jl
jae
enter
inc
sub
and
subl
xchg
and
mov
negl
mov
pop
cmp
out
in
test
out
xchg
cwtl
lds
adc
pop
jnp
in
call
jne
sub
rcr
jnp
shrb
addr16
test
add
ljmp
dec
sbb
xlat
or
adc
sub
xchg
jg
inc
lahf
jae
and
dec
jecxz
sbb
popa
jge
in
add
push
cltd
lods
jl
cltd
cltd
mov
repz
cli
scas
pushf
fidivs
aas
pop
mov
sbb
or
adc
and
sub
repz
sbb
lods
out
leave
mov
xchg
hlt
call
icebp
loopne
cmp
mov
rol
pop
push
push
fldl
and
pop
and
fisttpll
jns
pop
jg
notb
xchg
cmpsl
sub
inc
movsb
add
inc
adc
sub
dec
mov
cmp
cmp
cwtl
outsl
inc
mov
mov
sbb
aaa
test
pop
shll
movsl
cmp
test
adc
mov
arpl
jle
push
es
sarb
push
push
jno
dec
jae
scas
xor
lret
pop
mov
push
dec
xor
popf
test
pop
pop
push
jl
jb
lcall
inc
pop
xlat
jmp
inc
and
push
or
out
mov
jno
icebp
out
mov
lcall
fsubrs
or
fisubrl
imul
cmp
mov
js
test
insb
or
lock
push
test
jne
cmpsl
or
sarl
push
cmp
xlat
or
rcrb
jle
data16
or
xchg
add
inc
cwtl
xor
mov
mov
lahf
inc
mov
xor
and
sub
jb
test
dec
adc
mov
pushf
mov
mov
pusha
cli
and
xor
mov
mov
inc
mov
xchg
gs
fadd
sarb
xor
and
sbb
or
inc
mov
cmp
jge
fadds
inc
shlb
mov
jle
cltd
inc
push
mov
imul
pushf
cltd
push
jb
pop
imul
add
mov
push
xchg
in
sbb
sub
mov
and
sbb
je
add
test
or
mov
mov
sti
xor
fnstenv
dec
pop
push
jecxz
je
or
addl
pop
jmp
idivb
xchg
cmp
lods
and
loop
xor
add
dec
fdiv
jg
adc
jle
mov
rcl
lcall
ret
rolb
in
arpl
outsl
sbb
fcoml
pop
xor
push
and
or
add
mov
hlt
repnz
adc
xchg
lret
mov
or
cld
test
stos
shl
enter
push
lock
nop
imul
mov
fmul
hlt
into
sbb
pop
cmp
in
jl,pt
push
mov
mov
mov
mov
xchg
inc
sub
sub
push
push
rcrb
loopne
mov
in
mov
cltd
rol
enter
xchg
xor
sahf
fildl
push
xchg
inc
xchg
lahf
jno
jecxz
out
mov
mov
mov
je
sub
pushf
cmp
push
data16
gs
inc
mov
in
pop
jb
dec
mov
inc
mov
jecxz
ja
cltd
in
insl
aaa
into
and
jmp
mov
mov
aaa
adc
dec
cmp
mov
iret
sbb
ror
xlat
nop
mov
in
xchg
pop
lods
inc
pop
clc
pushf
inc
push
push
arpl
leave
adc
gs
iret
dec
stos
addr16
dec
add
sub
mov
cs
adc
out
idivb
ud2
cmpsb
movsb
rcrb
out
xchg
lret
cmc
in
jbe
pop
movsb
leave
sarb
xor
pushw
loopne,pt
xchg
sbb
movsl
rclb
add
jg
mov
lods
push
cmp
mov
inc
ret
mov
sbb
dec
sahf
scas
enter
popa
push
out
jbe
mov
aad
adc
push
or
and
and
push
mov
lea
push
jge
mov
lods
out
adc
mov
orb
push
sti
aaa
scas
mov
adc
daa
dec
lods
inc
pop
js
sbb
adc
dec
pop
jl
sbb
cmp
loope
nop
add
sti
push
icebp
fs
inc
iret
aam
lret
shrb
lds
jmp
popa
and
jbe
lock
flds
mov
push
repnz
das
push
and
push
dec
add
jle
adc
es
js
lret
ljmp
jge
test
push
movsb
lret
pop
add
jg
jp
mov
nop
repnz
popa
xchg
xor
or
push
ret
lcall
dec
or
sub
imulb
xchg
mov
add
or
jmp
or
pop
in
leave
lret
xchg
pop
mov
mov
mov
pop
dec
inc
pop
mov
jmp
and
jecxz
mov
sbb
rclb
inc
gs
inc
adc
lods
lret
les
out
clc
push
outsb
sub
imul
mov
movsl
repnz
enter
fistpll
dec
outsl
out
loope
sti
mov
aaa
xor
pop
rol
aam
cmpsl
pop
les
loop
mov
jne
inc
leave
ucomiss
cli
test
cltd
mov
mov
dec
jmp
dec
jns
pop
inc
fucomi
mov
shlb
or
repz
dec
pop
pop
jle
xchg
es
mov
stos
mov
cmp
or
jno
sti
mov
xor
fwait
dec
jb
push
mov
in
sub
mov
lea
daa
xor
push
add
hlt
push
inc
imul
mov
adc
xor
ret
int3
movsl
pop
repz
std
sti
jmp
cltd
cld
adc
pop
fdivrl
stos
mov
nop
push
push
fiaddl
and
mov
cmpl
cmpsl
push
pop
mov
in
lods
das
shlb
pop
xor
lods
sub
adc
push
push
rorl
addl
cwtl
daa
jp
jmp
data16
mov
mov
lret
popf
fidivrl
mov
mov
lock
jb
cli
movsl
push
jns
xchg
adc
ljmp
push
sbb
fs
inc
stc
inc
push
pop
mov
jo
xchg
mov
aaa
jnp
imul
sub
add
dec
and
mov
xor
cltd
mov
cmp
push
orl
sahf
andb
test
fisubrl
js
aam
cltd
pop
inc
scas
scas
push
in
cwtl
sub
push
or
dec
xchg
addr16
sub
ss
addl
jo
xor
call
push
test
lret
jbe
adc
in
ja
or
aas
adc
xor
xor
fwait
scas
mov
outsb
jnp
aam
aad
xor
dec
add
bound
and
and
loop
or
mov
jno
adc
pop
popa
add
push
push
xchg
dec
fldl
fs
adc
mov
bound
les
sti
ss
cwtl
movsb
sbb
mov
or
imul
rclb
cmp
shl
xor
xlat
push
cmpb
pop
mov
loope
dec
fistl
sub
aad
sahf
cvtps2pd
xchg
xor
mov
outsl
jnp
mov
hlt
adc
pop
pop
mov
outsl
push
jbe
movsl
and
xchg
lret
inc
ljmp
jl
lea
test
mov
add
test
inc
jns
lret
or
aas
and
dec
cwtl
pop
add
mov
sbb
out
jb
fidivs
pop
jmp
push
clc
push
jns
push
dec
packsswb
xlat
fcoms
xlat
fwait
aaa
lret
repnz
aam
push
repz
jge
es
xchg
inc
push
mov
add
sbbb
and
stos
mov
dec
inc
dec
mov
mov
test
popa
add
sbb
push
int
fidivrl
lahf
sbb
aam
jle
jno
mov
enter
faddl
sti
lods
jp
nop
mov
pop
ljmp
sbb
mov
pop
sbb
lea
mov
jnp
clc
adc
sbb
mov
into
pop
in
mov
and
bound
xchg
jb
cmp
leave
js
mov
and
and
arpl
data16
sbb
lds
add
aas
jle
daa
jne
loop
sahf
loopne
xchg
jp
sbb
inc
loopne
mov
cmpsb
jg
pop
inc
mov
rcl
and
sbb
inc
fldl2t
and
decl
push
subl
sub
mov
je
test
push
jno
jge
imul
outsl
call
addr16
or
inc
adc
inc
push
lds
xor
shll
fadds
lahf
in
hlt
outsb
dec
xchg
in
xchg
push
rorl
out
push
or
sahf
xor
mov
repnz
add
and
sbb
sahf
aam
xor
mov
fstps
jmp
lds
cmp
daa
sub
pop
mov
sub
cltd
idivb
fdivl
fmuls
movsb
and
and
add
popa
ret
cmp
push
lret
dec
and
xchg
xor
pop
aad
jno
or
pop
iret
fwait
push
fistl
cmp
jle
adc
xchg
adc
xchg
lret
or
test
push
orl
jl
enter
inc
loopne
repnz
or
or
jo
inc
fadds
sub
pop
mov
pusha
jl
jl
inc
jnp
cmp
sbbl
lea
bound
in
xor
mov
daa
data16
cli
adc
inc
js
arpl
ficoms
or
cs
icebp
out
insl
repnz
add
xor
cmpsb
stos
leave
pop
aam
inc
xchg
and
mov
pushaw
jp
std
adc
jae
out
repnz
cs
roll
mov
xchg
loope
clc
cmp
push
fstpt
sbb
rol
mov
lock
out
adc
dec
sub
cld
icebp
dec
mov
sub
scas
test
or
movsb
fwait
mov
lcall
es
test
and
xchg
movsl
sub
arpl
mov
jb
pop
mov
dec
jge
push
or
or
or
mov
dec
xor
xor
pusha
adc
stos
jmp
fwait
cmp
and
pop
rolb
jb
sbb
cmp
inc
mov
aaa
sbb
and
adc
movb
icebp
push
lds
repz
insl
inc
mov
pop
inc
or
es
pop
jmp
outsl
and
test
pop
and
xor
movsl
leave
jle
jne
sbb
std
xor
ljmp
adc
push
lcall
xchg
cwtl
outsb
outsb
roll
cld
and
and
pop
insl
test
icebp
fbstp
or
mov
cmp
inc
pop
adc
data16
int
push
inc
push
addr16
sub
lahf
in
movsb
adc
or
dec
aad
pop
loop
jmp
mov
lcall
dec
xorl
sbb
pop
in
xchg
icebp
xlat
sbb
sub
int
jle,pt
iret
arpl
xor
in
test
mov
dec
cltd
push
sub
stos
movsb
cmp
push
xlat
push
stos
adc
sub
push
sub
jo
cmp
andb
aas
jae
mov
icebp
in
lret
xchg
push
mov
dec
sub
enter
cmpsl
add
shl
sub
xchg
fbstp
mov
jns
adc
pop
icebp
repz
pop
xor
rolb
pusha
and
push
stos
adc
xor
add
ss
lock
imul
inc
mov
sbbb
addr16
test
aam
add
daa
ja
mov
push
addl
cs
cmp
stos
mov
outsl
cmp
xchg
and
inc
pushl
test
push
mov
push
sahf
sub
aas
add
or
pop
test
lret
loope
mov
jmp
xor
std
repnz
sub
insl
pushf
aad
xor
xchg
cltd
fsubrp
add
pusha
or
or
sbb
jnp
mov
inc
pusha
nop
inc
push
into
outsb
stos
push
hlt
mov
cmp
shld
push
call
repz
pushf
adc
aad
or
jg
shlb
sbb
and
jne
sub
dec
jo
aad
pop
cmp
or
sub
mov
aas
aad
jmp
rcrb
lret
push
jmp
sub
fs
out
cwtl
and
aaa
xor
jmp
call
sub
das
es
jl
lods
mov
lret
dec
push
loope
cs
mov
das
dec
in
cwtl
shrl
jne
sbb
jo
aaa
stc
and
push
mov
stc
mov
sahf
mov
pop
jb
loopne
insl
es
xor
xor
mov
mov
gs
adcl
adc
rol
push
insb
fstpt
sbb
icebp
push
xor
clc
cmp
mov
cltd
scas
gs
lock
aam
adc
scas
adcb
pop
fisubl
call
xchg
iret
push
repnz
pop
clc
add
je
or
push
lds
mov
xchg
jle
jecxz
xchg
je
sub
push
adc
dec
test
pop
fistl
movsl
data16
lret
pop
cld
pop
sub
cmc
pop
insb
jp
mov
jns
frstor
das
in
push
jbe
sarb
in
xchg
push
push
clc
inc
inc
push
mov
xchg
adc
rcrl
add
pop
push
in
in
ja
push
xchg
popf
pop
popa
or
ss
cld
mov
addb
pop
cmpsl
iret
aaa
sbb
or
dec
push
inc
loop
mov
xchg
je
inc
xchg
dec
pop
hlt
out
faddl
add
dec
jl
cmp
loop
cltd
sub
outsb
stc
mov
cmp
xchg
xchg
jmp
sti
push
daa
stc
add
pop
lahf
mov
inc
dec
bound
push
mov
mov
rol
ja
dec
or
xor
test
pushf
xlat
push
cmc
inc
es
dec
xchg
jb
jo
outsl
adc
and
jo
xchg
xor
add
jmp
add
in
jle
arpl
jg
bswap
or
ds
ja
lret
pop
test
pushf
dec
ret
in
mov
push
mov
push
pop
xor
popa
cmp
mov
lods
mov
stos
jl
out
jb
addr16
push
inc
dec
adc
test
in
mov
cmp
mov
dec
xor
fldl
push
pop
mov
sbb
js
popa
mov
popf
test
andb
mov
cmc
xchg
adc
mov
jo
mov
mov
in
dec
add
clc
sbb
mov
jae
fs
xchg
scas
je,pt
inc
mov
mov
stc
insl
out
cli
addr16
lret
inc
ret
xor
or
insl
loop
push
cmp
test
orl
rcr
push
and
pop
cmp
sbb
sti
pop
or
mov
scas
sahf
or
pop
xlat
ficomps
test
adc
int3
movsl
lds
inc
xchg
faddl
fcoms
in
pop
sahf
lods
dec
cmpsl
mul
add
aaa
movsl
push
xchg
addr16
mov
mov
inc
xchg
sti
or
and
xor
and
dec
push
icebp
stc
mov
jp
cltd
mov
cmpsl
loopne
pop
mov
mov
bound
cmp
arpl
pop
mov
sbb
clc
lahf
mov
pop
dec
out
sbb
into
mov
sub
jp
loop
mov
in
sub
push
call
lock
test
mov
popf
xchg
or
mov
lods
cs
outsb
sub
ffree
jp
cld
cmpsb
ja
cmp
dec
out
mov
jns
ss
dec
in
dec
pop
fsubrl
scas
enter
cmpsl
adc
data16
or
repz
push
mov
rcll
scas
inc
dec
fsubrs
xchg
mov
insl
mov
in
ss
jns
enter
aam
push
cmp
ret
mul
divl
data16
loop
outsb
inc
or
xor
es
sti
aad
scas
enter
xchg
bound
pusha
decb
and
adc
pop
mov
repnz
lods
repz
xor
mov
jecxz
adc
test
shlb
xor
dec
mov
lods
mov
shl
mov
les
mov
fisubs
and
add
inc
and
les
inc
adc
loopne
jo
fs
lea
mov
aam
movsl
lods
adc
lock
fisubl
xor
jb
popa
rorb
dec
test
ss
loop
fbstp
sub
stc
dec
movsl
ror
lcall
or
or
mov
dec
mov
imul
cmp
xor
loopne
mov
popa
cmp
mov
ja
stos
mulb
stos
rorb
push
lcall
icebp
inc
inc
in
xor
in
lods
je
add
std
adc
pop
mov
testb
dec
pop
push
jg
idivl
lds
cli
out
stc
xlat
fwait
mov
xchg
roll
fadds
xlat
push
mov
push
inc
pop
jae
pop
dec
shlb
sbb
test
xchg
mov
push
rol
rcrl
xor
xchg
les
sub
test
xchg
sbb
cwtl
or
and
nop
js
fimuls
push
pop
pop
das
and
sbb
rorb
sub
xchg
pop
push
mov
scas
imul
cmp
orb
sbb
and
ljmp
cmp
repz
ret
inc
and
adc
xchg
fildl
xchg
mov
call
lcall
cmp
dec
xchg
std
stos
pop
fcoms
in
js
das
jmp
inc
mov
fldenv
adc
adc
cmpsl
cmp
sarl
test
mov
or
mov
enter
fisttps
faddl
cmc
cmpsl
cld
sbb
pusha
std
jecxz
outsl
add
dec
into
xchg
movl
decl
and
imul
jg
cmp
or
add
push
popf
insl
or
and
mov
inc
and
arpl
push
mov
ja
sbb
repnz
adcl
cmp
jbe
adc
and
adc
mov
fmuls
add
fsubrs
adc
daa
or
and
jne
dec
les
push
leave
popf
fst
icebp
test
aam
jl
adc
xor
add
icebp
pop
mov
addl
sahf
xchg
adc
adc
jle
rorb
push
stc
test
xchg
mov
dec
mov
push
add
fdivrs
orb
or
jne
imul
push
or
push
out
fld
jb,pn
adc
pushf
mov
and
or
scas
movsl
mov
pop
cmp
addr16
loop
in
mov
pop
or
adc
jle
sarb
adc
inc
sbbl
mov
push
jmp
push
mov
shrl
xor
gs
xchg
into
mov
ficompl
fistps
dec
or
sub
sarb
inc
pop
out
in
sbb
int
inc
arpl
and
xchg
scas
add
xor
js
mov
stos
cmpsl
mov
std
and
push
out
movsl
stos
out
inc
push
cmp
xchg
jae
int3
adc
sbb
idiv
sbb
ret
daa
pop
aam
daa
add
pop
in
jae
push
arpl
dec
lods
or
test
cmp
sbb
adc
push
iret
push
fcompl
icebp
idivl
cwtl
mov
stc
mov
test
mov
jecxz
push
inc
fadds
xchg
and
and
pushl
nop
loop
jbe
push
inc
adc
mov
rcll
cmp
orl
mov
and
int3
leave
push
xor
dec
fimull
xor
vphaddbd
inc
xor
hlt
out
clc
or
mov
fimull
scas
hlt
jbe
cmp
sub
pop
mov
leave
loope
jp
addr16
mov
jecxz
push
jl
sbb
add
mov
jg
and
and
jge
inc
and
je
mov
fxch
lcall
mov
in
mov
loopne
sub
push
mov
add
gs
dec
fwait
clc
xlat
out
ja
enter
stos
outsb
pushf
movsl
mov
push
repnz
xchg
movsb
fstpl
std
and
or
or
ret
das
pushf
sub
mov
push
push
addr16
dec
rcll
jge
add
xor
push
sbb
fnstsw
inc
or
xorl
imul
sub
inc
xor
push
lock
xchg
jle
mov
or
mov
mov
cmpsb
int3
xchg
les
jno
in
mov
xor
mov
cld
loopne
fstl
stos
sbb
divb
mov
stc
mov
push
cltd
lcall
rep
in
mov
and
add
sbb
add
popa
add
mov
push
js
mov
push
lahf
ds
fwait
pusha
or
and
popf
shl
pop
in
mov
pop
nop
xor
fdivrl
xor
scas
aad
test
enter
sub
insl
dec
divps
ror
imul
mov
icebp
mov
fsubs
inc
ljmp
mov
dec
mov
pop
or
add
out
or
cmp
sub
dec
insb
mov
fdivrp
enter
jl
loope
cmpsb
xchg
xchg
nop
jno
inc
cmp
and
test
std
dec
sti
inc
iret
test
mov
sbb
lock
dec
xlat
push
std
push
jge
icebp
js
mov
icebp
push
sub
jge
pop
ds
rcrb
lods
cmp
lods
mov
mov
out
cli
dec
push
cmp
icebp
inc
adc
cmpsl
mov
test
push
mov
lods
outsl
ss
cli
stc
nop
push
icebp
adc
mov
js
mov
jle
sbb
mov
xchg
das
jge
test
aaa
shrb
fldl
daa
test
lds
sub
repz
int3
pop
std
cwtl
xchg
in
cmp
andl
jmp
jo
leave
pop
jmp
scas
lds
stos
enter
or
lea
xor
lds
add
push
sub
xlat
leave
mov
fistl
loop
aam
test
push
aaa
out
jl
aas
push
pusha
push
xlat
cli
addr16
test
mov
cmp
mov
sub
sbb
lods
loop,pn
lea
pushf
push
pop
icebp
xor
push
les
cmpb
stos
push
pop
push
jo
sbb
add
sbb
and
mov
imul
les
push
push
clc
imul
fwait
popa
dec
aas
lret
mov
add
dec
js
leave
push
jmp
out
ret
mov
xor
add
lret
nop
stos
add
jp
or
xchg
sbb
adc
cmp
outsb
imul
sahf
jecxz
sub
in
mov
rclb
xchg
jbe
pop
inc
sbb
sub
xchg
leave
dec
imul
mov
lret
add
xchg
lcall
int3
sbbl
sbbb
aam
or
jo
pop
dec
sub
mov
xchg
and
inc
pop
dec
push
cmpsl
xchg
aam
mov
arpl
sbb
xchg
jecxz
mov
xchg
mov
imul
sub
jle
xor
in
aas
and
mov
inc
test
dec
or
jmp
push
sub
xchg
xor
sahf
or
popa
shl
mov
mov
push
push
jae
adc
pop
into
pop
js
inc
inc
mov
cmp
test
jb
ror
adc
addb
dec
addr16
jge
push
inc
mov
lods
add
addr16
fisubs
mov
int
pop
arpl
addl
into
pusha
movsb
andb
gs
insl
lds
dec
pop
lahf
inc
or
dec
xorl
cwtl
test
aas
pop
imul
and
dec
repz
jb
lods
mov
adc
sbb
xchg
xor
mov
js
and
jns
subb
sbb
icebp
popa
lods
pop
outsl
dec
xor
insb
cld
jae
mov
ljmp
outsb
jmp
xchg
fcoms
enter
outsb
push
sub
cmp
inc
leave
pop
hlt
mov
neg
mov
mov
stos
ss
jp
scas
adcl
push
mov
mov
dec
loope
data16
stos
push
ret
mov
fstps
stc
pop
fsts
ja
sub
jae
add
fsubrl
pop
mov
xchg
inc
jp
jge
shll
gs
jmp
fsubr
jmp
add
push
lahf
das
mov
and
pusha
fdivrl
xor
mov
xor
pop
xor
mov
and
daa
pop
mov
pop
pop
dec
cmp
sub
jl
int
xchg
inc
data16
jg
insl
cmc
xor
dec
sbb
jle
rolb
lea
arpl
lea
cmp
push
data16
pop
clc
movsl
mov
or
or
pushf
addr16
push
cld
lahf
stos
adc
add
insl
pusha
sub
push
xchg
mov
push
xchg
outsl
jmp
imull
popw
add
in
insb
adc
loop
test
pop
sbb
addr16
fcoms
fs
in
xor
lea
xchg
sub
mov
cmp
adc
cmpsl
outsl
mov
das
ljmp
pusha
inc
fcoms
xor
sbb
pushl
mov
adcb
subl
jae
push
push
inc
fiadds
adc
sub
mov
adc
nop
dec
mov
jo
jl
pop
fucom
mov
fstpt
sbb
xor
mov
cmpsb
aam
mov
pusha
or
aaa
pop
mov
repz
xchg
cmc
sbb
aad
sti
mov
pop
fadds
push
sub
xchg
push
pushf
fld
fisttps
add
imul
sbb
mov
jo
pop
dec
push
push
push
dec
add
push
dec
leave
sub
out
or
int3
aaa
fs
in
in
or
lods
cmpsl
mov
sti
mov
cmp
iret
and
in
icebp
dec
mov
mov
add
lock
fsubrs
sbb
cmpsl
outsl
mov
adc
inc
mov
push
or
dec
shr
dec
pop
sbb
cld
fwait
pop
jmp
inc
aas
std
aad
out
ja
sti
mov
ljmp
scas
mov
scas
dec
roll
popf
cmc
xchg
ret
lret
test
in
xchg
scas
mov
dec
mov
xlat
pop
repz
dec
data16
push
xor
sahf
cmp
test
mov
nop
ds
cwtl
enter
pop
mov
and
mov
iret
add
dec
rcr
adc
out
shrl
scas
subl
fdivrl
jg
iret
inc
mov
movsb
sbb
pop
popl
das
cmp
test
xlat
popa
xchg
insb
stos
mov
lahf
imul
and
fbstp
andl
stos
mov
mov
mov
ret
shrl
sbb
scas
rol
mov
cmpsb
sahf
in
into
addr16
sbb
ret
xor
stc
daa
or
andb
aas
aam
lahf
pop
mov
sahf
jns
add
push
pop
shrl
xor
dec
xlat
xchg
clc
fcomps
sub
push
fsubp
mov
mov
daa
sub
xor
loopne
mov
jae
or
std
jl
idivb
jmp
fsubr
mov
imul
js
pusha
test
cmpsb
xchg
push
pop
sub
mov
xor
cli
cmp
or
push
ret
mov
jle
mov
sub
lods
in
add
mov
addr16
iret
push
mov
pushf
int
leave
scas
or
outsl
shrl
bound
mov
add
adc
lret
lea
mov
movsb
mov
arpl
jmp
mov
push
popa
add
mov
sti
lods
pop
fistps
jns
push
test
sbb
jg
cld
adcb
cli
fdivs
add
push
pop
push
fdivr
jl
aaa
jae
dec
xchg
mov
fstpl
fistpl
mov
notb
popa
xor
or
mov
cmp
popa
or
mov
add
mov
jmp
stos
xchg
decb
push
insl
pusha
add
xorb
or
les
js
mov
aad
loope
shlb
and
or
pop
xor
fstpt
ret
jmp
das
jge
lcall
iret
add
inc
outsb
idivb
movsl
push
xchg
xorl
dec
mov
and
and
cmp
std
and
push
xor
lahf
dec
xor
add
into
lret
stc
jo
cmp
ljmp
movsl
xor
or
ds
test
cwtl
aad
enter
xchg
and
cmp
cmpsl
pop
mov
inc
mul
sbb
push
mov
mov
sub
jae
aas
jge
adc
mov
push
mov
add
jge
sub
and
int
xlat
inc
mov
adc
out
xchg
iret
fadds
into
cmp
add
mov
test
out
call
jbe
in
jb
sbb
push
sub
push
jge
testb
fsubs
mov
in
insb
and
and
js
mov
fistpll
stos
xor
pop
int
adc
mov
out
mov
sub
cwtl
jae
cmc
aad
orw
sahf
sub
cmpsb
insl
es
pusha
sbb
iret
shrb
test
sub
mov
adc
mov
jl
ss
cli
das
cmp
das
sbb
push
fdivs
push
xchg
cltd
ja
and
xchg
push
sti
es
das
adc
in
sti
lods
cli
aam
add
pop
pop
jg
pop
or
ffree
sub
pushf
cmp
stc
xor
sbb
mov
scas
xor
jecxz
adc
jg
daa
adc
jle
xchg
xchg
fs
mov
test
jbe
dec
or
icebp
daa
mov
jmp
mov
sti
lea
jge
push
push
andb
repz
dec
xor
dec
adc
cwtl
sbb
cmpsl
scas
in
push
cmp
in
jnp
imul
fistps
fbstp
dec
mov
xchg
mov
push
cmpsb
dec
jbe
ljmp
mov
sbb
dec
leave
and
clc
data16
enter
in
leave
loope
cs
add
sub
jg
bound
ficompl
in
pop
dec
lahf
or
xor
xor
imul
xor
adc
mov
xor
outsb
out
outsl
pop
ret
lock
inc
mov
jmp
test
fwait
xor
jecxz
or
out
into
int
leave
iret
jnp
std
cmp
cltd
jo
stos
xor
aad
mov
xor
aam
push
inc
xchg
ja
jecxz
jle
jnp
mov
sub
cmp
sub
aas
fdivl
xchg
and
push
jp
imul
push
lods
or
data16
mov
in
mov
cmp
pop
lcall
daa
jnp
pop
addr16
add
mov
bound
xchg
mov
xor
roll
and
or
cld
jmp
test
xchg
jecxz
jo
lds
sbb
pushf
push
fdivl
cmp
fidivl
inc
mov
add
inc
je
imul
scas
jo
sbb
mov
test
xor
jns
or
adc
add
inc
call
lock
lods
outsl
xchg
push
sbb
pop
insb
push
fisubrs
lods
push
sub
dec
ret
hlt
pop
lods
cmp
or
jg
loopne
clc
mov
mov
mov
xor
mov
lret
jbe
clc
mov
popa
in
sub
sbb
push
cmpsb
in
es
pushl
mov
ficoml
xchg
lds
mov
mov
movsl
pusha
ficompl
das
jne
adc
call
push
ja
sarb
push
das
sub
in
fs
xchg
sbb
add
cltd
in
jns
pusha
outsl
adc
mov
push
data16
and
outsb
cli
je
inc
pop
shrl
xchg
iret
cmc
mov
lret
xchg
pop
jp
lods
pop
sub
aaa
cmp
push
loop
mov
fwait
mov
sbb
xor
lcall
incl
xor
sbbb
mov
loopne
mov
xor
mov
xor
popa
cmp
push
pop
nop
push
push
push
jmp
es
fsubrl
scas
pop
daa
mov
xor
mov
insl
xor
jne
gs
inc
add
xchg
pop
or
push
mov
xchg
dec
dec
pop
in
movsl
aaa
pusha
into
lahf
or
add
jle
jbe
jmp
dec
sub
add
repnz
inc
pop
push
and
test
data16
insl
add
push
std
inc
cmc
xor
cmp
jnp
fnstcw
out
or
sub
push
cmp
into
pop
std
leave
insb
sbb
test
int3
push
xchg
sub
sub
aad
pop
cmp
dec
test
test
popf
jne
mov
jne,pn
sub
rcrb
sbb
fcmovne
stos
push
js
pop
stc
out
mov
add
mov
pop
sbb
inc
and
mov
pop
mov
or
jle
xlat
test
pop
out
and
cmp
push
repnz
jns
leave
cs
or
and
cli
jno
orl
sahf
add
and
push
icebp
std
push
test
call
cmp
add
cs
dec
push
idivl
ret
xor
cmpsl
mov
mov
or
push
sbb
xchg
mov
cltd
mov
aad
mov
mov
in
movsb
sahf
mov
dec
repnz
pop
xchg
out
je
jmp
push
mov
test
xor
lahf
adc
out
and
enter
inc
push
pop
mov
push
lods
bndstx
rep
cld
jb
popf
xchg
add
outsl
jb
inc
mov
add
add
jp
pop
sub
dec
aaa
sub
or
jp
lahf
aaa
sbb
push
mov
push
or
loop
cmp
sub
sbb
incl
mov
inc
adc
push
push
out
and
inc
rcr
mov
call
xchg
pop
cmp
dec
test
xor
push
inc
jp
psubw
sub
pop
cs
xchg
loope
xor
jb
mov
xor
popf
cmp
and
xchg
dec
fldcw
add
sub
inc
xchg
lock
cli
mov
and
int
fwait
lock
cld
adc
shll
and
dec
les
popf
sub
cmpsl
bound
dec
adc
arpl
dec
loope
push
or
pop
cmp
scas
daa
dec
push
lods
xor
sub
cmc
sbbl
mov
in
cmc
jg
addr16
xchg
stos
lret
pop
in
pushf
out
pop
ja
mov
mov
xchg
sahf
dec
loope
sbb
mov
stos
cld
cmp
loopne
fnstsw
filds
jle
inc
rcll
push
push
add
cmpsb
mov
aaa
jns
push
inc
sub
xchg
sahf
mov
fldl
ret
jb
bound
and
and
movsb
add
sub
repnz
mov
add
rep
pop
pop
mov
movsb
loopne
lock
dec
cmp
cwtl
push
push
cmp
inc
xor
out
dec
jle
xchg
loopnew
ret
fisubl
out
or
out
ljmp
hlt
adc
and
in
xchg
inc
pop
faddl
jns
xor
cmp
or
xchg
pop
mov
cmp
add
pop
push
mov
mov
mov
fidivs
mov
mov
test
dec
rcrl
push
cmp
test
cmp
and
pop
mov
push
pop
pop
cld
push
pop
pop
pop
jecxz
cmpsb
test
xchg
or
push
cmp
cmp
stc
icebp
push
cmc
fwait
addr16
push
inc
int3
pop
in
push
inc
or
mov
pop
jecxz
pop
mov
insl
cmpsb
repnz
scas
daa
test
push
in
or
add
add
add
push
iret
mov
jo
data16
out
pop
mov
dec
and
mov
out
or
sbb
xor
daa
hlt
icebp
fsubs
pushf
lahf
add
stc
int3
push
xchg
pushf
ja
mov
jns
fcomps
js
shll
dec
faddl
ret
scas
aaa
inc
dec
je
mov
inc
add
adc
mov
sub
lret
mov
or
test
add
fs
cli
sbbl
mov
cmpb
push
loop
std
pop
add
mov
adc
adc
jp
jnp
pop
out
inc
popa
mov
cmp
pushf
adc
cwtl
ja
mov
stc
sub
xchg
mov
xchg
int
inc
flds
outsb
mov
adc
clc
dec
test
js
or
out
jge
pusha
cltd
push
shl
ja
out
jae
jno
jecxz
jmp
lcall
jle
push
mov
ljmp
push
das
push
insb
adc
es
dec
inc
push
add
scas
popf
sbb
loope
jecxz
mov
mov
adc
add
push
xchg
mov
enter
cltd
pop
sbb
fisttpl
mov
pop
cmc
adc
xor
out
xchg
xchg
or
sbb
popf
aam
notl
fstpt
insl
out
stos
mov
and
icebp
xchg
jp
andl
cmp
rclb
or
push
in
cmp
push
gs
fiadds
les
push
xchg
add
arpl
mov
jg
dec
in
push
aaa
lods
sub
gs
or
jmp
dec
notb
mulps
mov
icebp
les
xor
cmpsb
mov
sub
cmp
adc
fldt
jnp
movsl
rorl
jnp
pop
outsl
xor
dec
out
scas
sub
inc
lahf
and
push
or
mov
cmp
sbb
jb
int
push
ucomiss
bound
mov
sbb
sub
dec
fst
sahf
cmc
jmp
mov
ret
mov
mov
jl
and
je
insb
das
cmp
add
mov
cs
aaa
add
mov
xchg
pop
cmpsl
pop
jl
or
test
xor
add
fisubrs
mov
loopne
test
scas
mov
popf
adc
faddp
push
xlat
pop
sub
xlat
add
lcall
mov
lret
jp
inc
lahf
xor
inc
cwtl
pushf
mov
dec
fimull
repz
fldenv
jle
dec
lahf
xor
or
mov
sub
cmp
mov
push
dec
dec
push
dec
mov
jmp
and
les
inc
or
aad
jne
in
enter
push
xchg
xchg
aas
push
arpl
mov
aas
aad
cmp
mov
mov
jmp
movsb
push
or
xchg
and
sahf
cmpb
add
adc
aaa
pusha
ficompl
aas
hlt
lods
push
push
dec
add
and
lea
inc
sti
sub
pop
ja
pushf
push
in
mov
adc
aad
aad
test
sbb
je
mov
fsubl
sub
jno
pushf
shr
into
add
test
ljmp
loopne
pop
pop
jns
stos
inc
jnp
and
inc
test
hlt
mov
or
cli
or
push
fs
inc
inc
popf
mov
and
adc
or
movsl
arpl
jne
xor
sub
xchg
sbb
icebp
fisubrs
xchg
jecxz
iret
cmp
inc
lret
mov
mov
insl
shrl
sbb
daa
popf
lods
cmp
ljmp
dec
aad
mov
inc
aaa
into
sub
fnstcw
mov
xchg
xor
push
and
push
pop
dec
push
scas
push
fisubl
lcall
mov
push
sub
jle
adc
sti
lods
xchg
push
movsl
lock
mov
es
mov
in
aaa
xchg
incb
xlat
daa
sti
jno
adc
xchg
add
mov
adc
in
aas
in
cmp
bound
cmp
add
inc
test
xchg
sahf
xor
lahf
pop
xor
sbb
rorl
cmp
loope
mov
cld
out
xor
lock
gs
xlat
pop
or
jp
cmp
jle
shlb
adc
pusha
and
clc
cmc
mov
mov
sbb
fldenv
xlat
pmulhw
mov
xor
cmp
adc
loope
sbb
hlt
push
out
scas
xchg
adc
mul
out
test
ficoms
cmpsl
icebp
jl
lock
sbb
ret
push
push
mov
jae
rcl
push
mov
inc
jge
push
frstor
outsl
inc
sub
nop
jno
iret
repnz
jg
fucom
xor
pop
fidivl
sbb
popa
lret
inc
mov
mov
lods
xchg
pop
decb
mov
cltd
pushf
cld
cwtl
ret
jb
jecxz
pop
and
fmul
push
hlt
insb
stos
outsl
repnz
stos
pop
in
push
lea
jle
jns
sahf
rcll
and
aas
movsl
fistpll
sub
mov
insb
mov
cmc
dec
lock
mov
mov
or
push
ljmp
hlt
cmpsl
movsb
sbb
fcmovu
dec
sub
inc
jnp
sar
jbe
sbb
ficompl
jmp
cmc
outsl
fwait
mov
pop
sbb
les
mov
push
mov
loope
pop
sahf
icebp
in
xchg
cltd
str
pusha
or
mov
push
mov
xor
fidivs
movsl
pop
ret
xchg
inc
mov
repz
cmp
dec
adc
xor
cmpsb
cltd
lock
adc
push
push
mov
xor
lret
out
add
or
cmp
cltd
fldt
mov
mov
and
out
mov
aaa
cli
test
xchg
lahf
imul
jp
lea
out
mov
lret
fisubrs
stos
dec
mov
mov
jbe
arpl
cmp
shlb
xor
fcmovb
in
cmp
enter
dec
push
mov
mov
or
jnp
fucomp
or
mov
fcmovnu
das
bound
insb
ljmp
jns
dec
xor
push
mov
xchg
jle
push
dec
xor
push
lcall
rclb
mov
das
pop
shl
sub
sbb
arpl
je
jns
jecxz
cmpsb
inc
shll
pop
xlat
popf
imul
aad
inc
lock
scas
sbb
adc
das
sbb
lods
rorl
lods
sahf
mov
divb
mov
movsl
cmp
and
arpl
pop
imul
dec
lds
adc
scas
lret
mov
fs
lods
dec
dec
xor
xchg
dec
mov
xchg
xorl
lods
cmp
jbe
cltd
aad
lock
stos
in
dec
push
ss
aas
cli
or
add
dec
pop
fadd
jb
push
jecxz
mov
pushf
rcl
jbe
rorb
and
int3
call
lods
movups
sub
jmp
sub
mov
sub
mov
test
fcompl
inc
insb
ret
ja
fildll
xchg
loopne
loopne
sub
arpl
sbbl
pop
and
jmp
cmpb
nop
sub
jbe
addr16
cmp
cmp
arpl
jno
push
lods
mov
jo
nop
dec
imul
rorl
jnp
movsb
lret
xor
repz
sbb
cld
push
loope
dec
sbb
cmc
xor
push
sbb
shr
stos
es
and
loopne
fisubs
lea
popa
repz
cli
fmull
mov
mov
lahf
lods
ds
mov
inc
and
or
pop
cmp
pop
jl
je
sarl
iret
aaa
cltd
mov
insb
mov
sub
sub
nop
sbb
jnp
shlb
inc
cmp
pushf
int
sub
jb
movsb
movsb
ss
imul
idivl
mov
insb
mov
and
adc
cs
dec
pop
adc
sub
mov
or
and
add
jg
or
mov
sub
fwait
adcl
jb
cmp
mov
inc
pop
or
dec
and
dec
xchg
fisttpl
pop
icebp
xor
sbb
int
out
stc
sub
adc
mov
loope
push
loope
and
stc
movsb
es
icebp
lea
push
lahf
push
mov
lods
aas
inc
stos
shlb
jno
jo
sub
cmp
inc
outsb
test
mov
mov
adc
push
sar
pop
mov
jecxz
push
cld
jecxz
faddl
outsl
pop
dec
push
fstp
inc
lods
fldt
xlat
fildl
mov
leave
mov
ret
data16
lahf
adc
in
xor
arpl
and
sbbb
xchg
sub
mov
enter
mov
addr16
rorl
adc
sub
and
in
or
or
ret
push
int3
popf
and
dec
mov
sub
movsl
notl
push
test
push
or
test
jle
inc
enter
sub
or
pop
mov
pop
loope
and
lret
lcall
inc
stos
imul
lock
dec
gs
inc
enter
into
iret
out
jb
icebp
xor
mov
add
out
sub
int3
jge
fsubrs
cmp
sub
or
dec
lods
movsl
pushf
lret
jae
stos
in
scas
dec
jae
insl
jecxz
sub
adc
add
mov
jp
test
push
outsb
dec
aad
fyl2x
adc
jb
inc
fistpll
out
sarl
push
loopne
push
std
mov
fsubrs
jnp
das
jno
lods
rcll
ror
pop
push
hlt
xor
push
das
ds
leave
shlb
test
lret
popf
ss
xor
cmc
or
mov
insb
scas
sub
pop
adc
out
xlat
mov
xchg
add
jo
fidivl
mov
add
push
test
push
inc
dec
out
cld
in
xchg
mov
and
lds
xorl
or
cmpsl
jmp
inc
das
je
out
add
loope
jecxz
test
dec
daa
xor
pop
popa
cmp
mov
hlt
pusha
test
push
aad
pop
inc
xchg
rolb
push
mov
stos
sub
and
sahf
jns
dec
push
xchg
pop
mov
pop
icebp
js
test
stos
test
ret
mov
mov
addr16
ss
ljmp
and
je
shll
mov
dec
xor
in
lret
std
mov
and
out
or
lods
out
aam
inc
aad
adc
sbb
popa
jne
adc
mov
aaa
rclb
stos
add
mov
jecxz
imulb
sub
in
outsl
lods
aas
adc
lahf
es
fidivrs
sub
stc
js
sbb
mov
cmp
pop
sub
jbe
adc
cmpsl
xchg
dec
outsb
jge
push
mov
filds
repnz
push
imul
shrb
es
fwait
pop
dec
ss
sub
sti
popa
mov
push
pop
pop
int
fmuls
xchg
in
add
dec
out
stos
adc
imul
xchg
add
leave
rcrb
hlt
cld
dec
push
inc
jmp
inc
jmp
addl
adc
push
or
fistpl
shlb
add
ret
jg
mov
mov
loope
ljmp
and
add
or
cld
mov
iret
mov
fs
das
jb
fsubrs
and
sbb
pusha
les
inc
jmp
std
stos
mov
adc
add
dec
rol
in
pop
mov
push
iret
popa
aad
pop
aad
mov
repz
cld
ja
imulb
leave
in
mov
sti
subb
les
sbb
out
stos
adc
fmulp
ja
std
xlat
adc
and
in
sbb
xchg
shlb
pop
sub
push
xchg
sub
xorb
mov
aaa
xchg
arpl
add
int3
ss
sub
xchg
mov
xchg
jae
jle
iret
sbb
mulps
cmp
ret
in
and
rclb
cs
faddp
dec
add
ljmp
or
or
sub
sub
mov
sbb
inc
cmp
cmp
std
dec
sub
pop
addr16
popa
outsl
pop
mov
lea
cmp
shll
add
dec
sti
movsl
and
fcomps
cltd
negl
sub
aad
or
or
out
sbbl
pop
movl
arpl
popf
insb
or
out
cmp
cwtl
pop
lods
imul
pop
in
dec
cli
xchg
xor
jp
xchg
sbb
add
jp
fcoms
mov
fdivrs
sahf
push
iret
out
cs
push
push
or
sub
push
gs
sbb
pop
js
lds
out
pop
mov
inc
cld
fnstcw
adc
iret
das
push
jp
in
scas
scas
cld
xor
inc
push
cmpsl
int
xorb
pop
xchg
add
insl
mov
movsl
jmp
out
mov
ret
scas
movsl
sub
out
into
cmp
push
repnz
cwtl
jns
jnp
pop
mov
pop
aad
inc
in
rorb
push
adc
sbb
je
les
insl
addr16
cli
push
sub
xchg
ret
fucompp
xbegin
push
add
jg
jmp
pop
ret
add
push
jle
inc
mov
adc
lds
das
loop
jne,pn
mov
or
sti
shrb
sbb
mov
jo
sbb
rorl
loope
lret
outsl
mov
ja
ficomps
cmpsb
fidivrs
mov
leave
adc
jb
call
je
repnz
push
jns
adc
mov
push
sbb
or
into
mov
sti
push
cmpsl
cmp
xlat
outsb
loope
faddl
cld
xchg
js
testl
push
adc
pusha
cmp
xlat
insb
mov
dec
lods
xor
mov
dec
les
jne
rcl
test
push
int
rorb
mov
test
xchg
xor
xlat
loop
and
das
fmuls
and
mov
stc
mov
fdivl
lret
cmc
xchg
scas
clc
aas
dec
in
or
fs
das
fwait
jecxz
add
sub
lds
push
sub
push
mov
jecxz
notl
leave
push
add
xor
ja
xor
inc
lcall
adc
sub
mov
dec
pop
sahf
mov
lock
sti
adc
fcmovb
test
cltd
push
and
mov
jmp
jne
jo
push
pop
dec
inc
mov
dec
imulb
int
mov
ret
sti
jae
inc
cmp
insl
subl
adc
adc
jmp
out
test
push
xlat
shll
jecxz
xor
dec
dec
sub
imul
in
and
adc
push
inc
jge
pop
pop
loop
cli
xorl
adc
cwtl
fidivrs
insl
aas
and
push
repnz
mov
fs
shlb
lock
loope
push
and
push
loopne
sbbl
push
fcomp
mov
xchg
or
xor
inc
jbe
jne
mov
pop
cs
inc
sub
ja
addr16
stc
push
cmp
adc
test
scas
ret
cmc
rolb
in
std
inc
add
xchg
or
adcb
cmp
loopne
pop
test
sbb
loopne
pop
je
loopne
je
dec
outsb
cmovbe
inc
sbb
jne
add
shlb
sbb
sti
xor
mov
icebp
out
sbb
mov
dec
sub
movsb
out
jns
dec
or
scas
cmp
or
out
js
cmp
mov
into
xor
xchg
sahf
cld
cltd
sbb
popa
xlat
movsb
fsubrs
lea
mov
xchg
sbb
push
movsb
aas
add
testb
sub
pop
cmp
pusha
arpl
ficoms
or
ds
clc
mov
adc
jp
add
les
pop
sbb
inc
add
mov
xor
stos
adc
int
negl
fwait
add
cmpsl
in
pushf
stos
adc
sbb
add
xor
pop
rol
dec
push
jge
sub
mov
mov
mov
xor
mov
xor
shrb
jl
ja
sbb
jmp
aad
mov
cmpsl
lret
jae
fs
push
push
mov
pop
mov
mov
dec
jnp
into
xor
arpl
mov
rorb
or
out
movsb
mov
jbe
sbb
jno
pop
int3
subb
out
mov
mov
push
dec
ds
out
mov
cmpsl
pop
mov
mov
jo
popf
xchg
jns
fldl
rcrl
mov
imul
repz
push
inc
clc
adc
addr16
ja
mov
mov
xor
pushaw
es
sti
cs
push
movsl
ret
or
or
sub
int3
or
cmp
fbstp
movb
aam
nop
andl
aas
sbb
add
mov
sbbb
decl
or
fcomp
lods
jg
sbbb
ds
mov
filds
ljmp
sub
or
cltd
mov
cltd
mull
test
outsb
in
sbb
jle
stc
mov
adc
ret
lock
insl
xlat
int
push
sbb
loop
std
cmc
nop
dec
jne
gs
cmp
or
xor
cwtl
out
mov
jp
jg
outsl
mov
fucomp
jne
add
xlat
shlb
lods
dec
into
rcrb
dec
jle
in
test
testb
insb
mov
loope
int3
out
jnp
subb
xor
and
adc
out
int
cmp
dec
mov
stos
or
mov
and
add
loop
testl
and
xchg
mov
ror
cmp
cmpsb
fists
push
fcmovne
loope
push
dec
jmp
sub
mov
dec
add
insb
fcomp
xchg
clc
ljmp
inc
push
mov
sub
cmp
push
into
mov
xor
in
cs
sbb
pop
fcoms
in
aad
mov
xchg
and
mov
int
adc
addr16
sub
xlat
mov
cmc
js
nop
jae
fcoms
insl
mov
sbbb
hlt
sub
push
dec
jl
ss
jmp
fidivl
mov
pop
pop
mov
cmpsl
xchg
into
or
idivl
jo
mov
push
ds
lds
int3
ret
sub
subl
shlb
push
xchg
inc
cmp
jno
jp
dec
outsb
cmp
add
adc
dec
shll
push
xorl
pop
scas
lock
jg
out
out
out
mov
fucomi
stos
das
ss
mov
shll
fisttps
xor
fiadds
pop
add
dec
outsl
dec
jno
pop
jnp
mov
sub
mov
jmp
add
and
cmp
lcall
xchg
nop
xor
inc
push
or
jae
les
fisubs
cli
das
in
sub
subl
jecxz
fists
loopne,pn
xchg
pop
or
testb
ret
jbe
pop
mov
loop
cmp
lret
xchg
aas
test
jp
loope
mov
sbb
jg
je
cmp
aad
xchg
je
pop
sti
mov
mov
pmuludq
iret
jnp
jle
iret
pop
mov
imul
sub
push
inc
fildl
xorb
or
push
outsl
rol
adc
dec
pop
int3
test
addr16
inc
loop
scas
mov
rorb
push
and
xor
imul
vpsrlq
in
mov
js
outsl
jno
jecxz
xor
and
jle
icebp
add
testl
xchg
lahf
or
fwait
sbb
std
movsl
ret
push
sbb
or
outsl
add
pop
mov
xchg
push
into
adc
aad
dec
push
mov
aad
rcl
rorl
loopne
stc
jne
jl
mov
loopne
adc
cwtl
inc
inc
aas
bound
mov
mov
mov
xchg
cmp
add
ljmp
push
call
push
div
iret
mov
add
repz
fisubrs
pop
jecxz
or
pusha
loopne
addl
mov
jl
cmp
movb
je
jbe
sub
aas
in
scas
in
xchg
in
mov
fidivrl
orb
push
fldt
jno
loope
jns
je
inc
xor
push
fdiv
jp
rorl
cmc
adc
test
push
or
mov
add
sub
ds
jp
cli
dec
icebp
jg
popa
gs
jmp
jno
ljmp
ret
push
sub
ss
mov
roll
mov
mov
shlb
mov
insb
testb
xorl
cmp
add
js
adc
mov
scas
insl
ljmp
or
adc
stc
and
xchg
or
xor
jne
sub
rcll
lea
mov
adc
xor
imul
outsb
xchg
in
jg
sahf
clc
cmp
pop
imul
cwtl
and
cld
sbb
push
insl
outsl
adc
mov
lret
mov
pop
hlt
push
imul
add
or
sub
push
push
mov
xor
xor
cmp
inc
cmp
add
lahf
xor
push
cmp
mov
push
xchg
mov
test
test
loop
inc
fwait
cmpsl
dec
fsubr
idivl
in
ret
xlat
inc
hlt
mov
add
pop
mov
adc
adc
in
sahf
cmp
inc
dec
xchg
imul
add
sub
xlat
rcll
cwtl
repnz
dec
aas
cmp
mov
mov
push
pop
pop
repnz
push
dec
cmp
cmp
add
mov
lds
cmp
stc
mov
movsl
push
push
testb
out
jmp
pop
cmpsb
int3
pop
jo
jmp
and
aaa
stc
int3
pop
push
mov
cmp
inc
mov
dec
outsl
add
inc
sbb
add
pop
sub
ss
jp
pop
clc
pushf
mov
sub
notl
in
xor
addr16
or
sbb
inc
sbb
out
pop
mov
jns
jge
fldcw
call
jg
cld
in
testl
repnz
scas
stc
cmpsl
rolb
stos
popa
pusha
xchg
ret
inc
push
jle
pop
iret
mov
mov
ror
push
dec
sub
inc
dec
aaa
incw
je
loop
push
add
push
pop
aad
scas
fnsave
lds
cmpl
js
jnp
idivb
add
xchg
and
out
push
lds
lods
adc
dec
shll
bound
jae
mov
or
and
adcb
ret
xlat
fs
mov
pop
xor
std
iret
or
movsl
mov
mov
vmovupd
mov
lret
mov
into
pop
and
gs
aad
inc
addr16
std
dec
xchg
mov
pop
or
pop
stc
ljmp
inc
js
fs
cmp
jg
or
inc
test
js
rcr
push
push
cmp
movzwl
add
xor
stos
lahf
rcll
and
and
lahf
jg
xchg
hlt
cmp
jno
rorl
inc
or
iret
cmp
ret
jb
movsb
movsl
into
fisttpl
insb
and
or
movsl
cwtl
gs
sbb
and
jo
ret
push
xor
ss
cmp
mov
or
inc
jp
jecxz
dec
mov
insb
push
cli
xchg
sbb
lahf
in
add
xchg
mov
popf
loop
lods
cmp
xor
adc
cli
xor
jae
add
leave
sub
stos
jecxz
adc
dec
fwait
add
rolb
xor
in
fstpl
rorl
pop
add
mov
neg
ret
out
stos
add
popa
dec
leave
ds
testb
xorl
sbb
out
dec
add
pop
push
fwait
loopne
insl
fsubs
lcall
arpl
test
or
mov
test
cmp
and
sbb
mov
sahf
stos
aad
cmp
daa
das
sub
and
add
pop
mov
hlt
and
cli
rol
fldl
outsb
sbb
pop
cmpsb
inc
jb
mov
cli
xchg
or
mov
mov
lret
dec
inc
xor
mov
jecxz
mov
pusha
dec
test
outsl
jno
inc
or
cmpsl
mov
ljmp
adc
and
lcall
dec
aam
dec
cs
fdiv
sarl
xor
scas
sbb
mov
lret
or
adc
movsl
push
cwtl
mov
lret
mov
nop
add
push
dec
xor
pop
ret
mov
jp
pop
push
scas
test
mov
ret
loopne
mov
test
inc
movsb
dec
or
frstor
cmpsl
mov
and
iret
insl
cmp
xchg
dec
aas
cmp
sub
outsb
decl
pop
pop
mov
scas
push
ljmp
movsl
push
mov
mov
aas
in
jae
out
adcb
jecxz
aad
fwait
push
xchg
sub
xchg
jb
jle
mov
xor
cmp
clc
mov
dec
std
lret
dec
jl
lcall
jg
pop
lcall
les
xlat
stos
repnz
stos
push
xchg
inc
inc
dec
or
mov
xor
les
lds
stos
add
lea
dec
pop
cmpsl
jle
mov
fisubrl
mov
clc
mov
mov
sahf
dec
repz
stos
fstpl
mov
repnz
loopne
das
sub
inc
jno
sbb
inc
sbb
test
mull
or
incb
xchg
sbb
pop
insl
xchg
sahf
add
add
mov
add
imul
js
arpl
test
mov
dec
push
push
cmpsl
lods
scas
arpl
mov
mov
fsts
test
stos
imul
cmp
std
repz
out
mov
out
int
sub
adcl
xor
adc
jns
sub
jne
fimuls
push
clc
push
test
movsb
imul
mov
push
stc
dec
fcomps
ret
xacquire
repz
jg
andl
sbb
push
xchg
movsl
pop
jo
inc
mov
vmovapd
or
popa
lea
popa
ficoml
jno
ss
dec
outsb
test
xchg
jl
arpl
fbld
jns
ficompl
add
xlat
add
sahf
push
add
jbe
repnz
repnz
adc
cmova
mov
stc
repnz
fs
repnz
fnstenv
mov
aad
popf
roll
sub
lcall
insl
cmp
jno
lret
aad
or
ljmp
aad
lahf
outsb
push
sbb
ljmp
fsubrs
outsl
nop
pop
sub
loope
scas
call
popf
mov
or
enter
rcr
push
gs
sbb
cmp
cmpsl
mov
and
jl
out
cmp
int
xchg
xor
adc
jae
jle
in
aad
xlat
mov
idivb
sbb
into
cmpsb
xchg
pop
notb
rclb
push
mov
out
test
popa
sbb
and
in
add
inc
or
fildl
and
lcall
adc
sbb
fdivs
arpl
dec
fstps
cmc
scas
mov
bound
clc
cmp
loope
jb
dec
cmp
mov
mov
js
dec
sbb
dec
scas
mov
fstpl
pop
jle
mov
mov
loop
push
cli
fisubs
stos
lods
adc
jae
sti
nop
dec
or
repz
repz
add
mov
inc
hlt
xchg
ret
fildl
insl
sbb
or
sub
cmc
ret
mov
lock
rcrb
dec
lcall
daa
mov
into
push
mov
mov
xor
xchg
das
adc
rclb
xor
cmp
dec
rclb
pop
or
std
sub
dec
jno
mov
pusha
jmp
cmp
inc
in
ljmp
pop
fcoms
mov
aas
and
and
in
cmpsl
adc
xchg
or
or
dec
mov
insl
push
hlt
sub
cmc
aaa
fiaddl
lret
lea
pop
push
mov
pop
movsb
sahf
mov
mov
mov
popa
xlat
xchg
sbb
out
in
test
xor
ljmp
sbb
mov
pop
and
adcb
ss
mov
popa
fstps
sub
mov
jg
adc
pop
sub
jb
lods
xchg
lret
imul
addr16
sub
call
inc
rol
mov
stos
cmc
xor
and
cmpsb
fsubl
mov
xchg
filds
and
dec
jne
dec
mov
mov
cwtl
outsb
jmp
jp
sti
cmp
jbe
mov
cmpsl
daa
push
jle
movsb
jnp
xchg
js
int
loope
arpl
lret
push
adc
loopne
cmp
rorl
push
and
or
dec
add
je
mov
or
mov
fisttpl
rcll
shrd
pop
lea
ja
aad
cmp
xor
inc
xor
add
ret
aam
jg
dec
rcrb
enter
sbb
fwait
adc
leave
xor
test
stos
iret
insb
fdivr
outsb
adc
std
hlt
cld
mov
adc
cli
xchg
rorb
loope
dec
inc
dec
fidivl
int
inc
dec
aad
mov
xor
or
shll
pop
mov
loop
orps
push
jle
mov
inc
in
cmp
cmpl
jno
pop
inc
rclb
cmp
repz
xchg
mov
sub
std
mov
icebp
add
push
movsb
lcall
push
xchg
popa
sub
jbe
and
lcall
xchg
adc
jl
xchg
movsl
sti
daa
ret
push
insl
in
mov
in
test
leave
xchg
jo
imul
je
test
hlt
arpl
cmp
aam
shll
mov
int
jns
inc
push
outsb
mov
out
mov
loopne
test
and
inc
inc
test
mov
pop
inc
dec
iret
xor
in
std
sti
insl
xor
outsb
bound
xchg
mov
adc
or
addr16
push
ret
popa
jecxz
jne
cmp
add
jbe
mov
bound
sbb
pop
ss
repnz
test
jb
xor
mov
mov
sbb
test
fs
lea
or
nop
pop
bound
insl
rorb
js
lret
test
shrb
aad
push
xor
arpl
mull
push
scas
addr16
cmp
adc
lods
pop
or
cmc
jb
cli
pop
sti
test
stos
nop
jg
jle
ret
mov
push
add
enter
outsb
adc
push
jne
xchg
nop
ljmp
add
popa
cmp
push
jns
sub
and
push
roll
and
clc
fsubl
pop
jne
dec
sub
fistpl
stos
xor
sbb
ret
ud1
lods
lret
out
stos
pusha
push
pop
and
and
mov
jmp
fwait
dec
jno
mov
mov
cmpsb
out
cmpsb
insl
pop
sub
scas
jbe
fwait
sbb
jg
es
fdivrs
cwtl
or
out
jecxz
mov
sub
imul
xor
mov
pop
jl,pt
dec
fwait
sbb
popa
ss
xor
pop
jmp
es
leave
jae
repz
or
and
es
orl
adcl
xor
inc
and
fildl
mov
test
mov
pop
jno
aas
clc
pop
loope
stc
aad
frstor
aam
insl
into
mov
loope
adc
lock
in
dec
xlat
jns
and
xor
scas
pop
gs
adc
adc
es
fiadds
movsb
ds
xor
into
or
xchg
inc
bound
push
bound
mov
mov
sbb
add
repz
cmp
clc
dec
xor
fnstsw
jge
mov
xor
jp
jl
sbb
cmc
aam
sub
mov
in
push
push
push
sub
mulb
adc
push
out
or
lcall
pop
in
cmp
or
stos
jno
jne
shrb
aas
jno
femms
test
inc
fwait
je
mov
adc
jno
and
iret
or
movsl
cs
pop
outsl
pop
stc
ss
mov
xchg
insl
jno
mov
or
pop
jae
clc
mov
sbb
cmpsl
aad
in
pop
insb
fmull
bound
xorl
or
incb
cmp
push
inc
test
movsl
mov
dec
jo
inc
push
inc
xchg
ret
inc
or
mov
scas
fcompp
and
dec
sbb
sahf
fwait
jns
dec
sub
dec
xchg
mov
xchg
sub
pop
stos
lods
scas
out
ret
fwait
adc
pop
fcmovb
cltd
movsb
and
sbb
xchg
out
xchg
or
adc
sub
outsb
adc
rcll
cmp
push
sub
mov
jmp
xor
sysexit
adc
jmp
xor
test
addr16
lock
popf
rorl
cmp
mov
xlat
push
jmp
ljmp
mov
mov
pop
clc
mov
insb
aas
out
mov
inc
scas
gs
dec
loopne
xor
adc
fwait
leave
movsl
cwtl
lahf
push
int3
pop
ret
and
xchg
push
insl
cld
xchg
test
gs
jns
repnz
and
out
call
lahf
inc
insb
sar
sbb
fisubs
sar
and
ja
cmp
sahf
push
orb
cmp
int3
sbb
sbb
in
mov
rcrl
add
pop
adc
mov
push
fcmovu
dec
add
mov
dec
pop
push
imul
inc
mov
loopne
push
lret
fstpl
pop
aaa
repnz
icebp
cmc
push
sub
das
mov
cwtl
out
xchg
mov
pop
mov
pop
sub
jo
sahf
adc
lcall
aad
cld
scas
pop
push
in
fdivrs
nop
rcll
lods
mov
dec
push
mov
mov
xor
ds
mov
sub
pop
inc
add
pop
mov
add
jae
jbe
jb
push
ss
xor
aas
ret
movsl
movsl
shrb
int3
inc
sahf
xchg
out
movsl
jg
out
xor
fwait
sbb
stc
inc
add
outsl
inc
jnp
pop
popa
pop
fstl
mov
imul
dec
push
xor
cmp
std
mov
jb
xchg
inc
std
in
sarl
stos
xor
pop
dec
dec
sbb
cmc
xchg
mov
mov
sahf
imul
rolb
inc
testl
out
inc
das
xchg
lds
xchg
dec
push
push
add
xor
arpl
cli
mov
adc
jmp
jmp
bound
dec
sbb
ljmp
sbb
fcompl
stos
repnz
aas
mov
cwtl
mov
sahf
aas
stos
lods
jne
sarl
and
push
mov
in
inc
push
sti
add
jmp
push
pop
jne
clc
test
aas
push
cmc
dec
mov
in
out
sub
aaa
pop
add
add
cmc
mov
daa
jg
and
inc
scas
mov
xchg
dec
xchg
mov
pop
cmp
adc
ss
sbb
jns
and
subb
mov
and
sub
lcall
aam
mov
stos
or
cmp
ds
sub
int
xor
dec
shll
outsl
sahf
addb
cmc
scas
nop
cmp
andl
mov
push
sbb
test
repz
sahf
fcompl
negl
lahf
inc
gs
test
fnstenv
sahf
mov
jne
pusha
les
jae
xor
fiaddl
mov
adc
cmp
outsl
cmp
xchg
xor
dec
pop
mov
shr
sbb
or
mov
adc
faddl
sarb
popa
dec
call
pop
or
sbb
mov
fisubrl
nop
inc
sbb
add
test
push
adc
insb
add
inc
jnp
inc
fcomps
inc
dec
mov
rcrb
outsl
jo
divb
in
mov
addr16
add
sbb
or
fdivr
aam
jecxz
adc
cmpsl
jnp
call
outsb
rolb
jle
in
data16
sbb
jmp
push
or
mov
sti
adc
sbb
jge
icebp
add
out
jl
or
les
je
mov
sbb
loopne
inc
outsb
mov
push
jb
jl
jo
fucomi
orb
inc
mov
mov
cmp
cmp
and
loope
insb
push
jae
loopne
testb
push
andb
inc
xlat
or
cmpb
pop
loope
add
adc
cmc
add
in
dec
jmp
incb
pop
lret
sub
pop
sbb
inc
fisttpl
jae
jp
in
xor
cmp
imul
pusha
and
jg
mov
sbb
insb
out
mov
jno
cmc
lcall
cmp
xchg
repnz
clc
rcrb
fstpt
mov
mov
cmc
das
sti
imul
xchg
lahf
push
sub
cmp
pushf
seta
dec
push
or
pop
jl
xorl
insl
inc
jl
jnp
fisttpll
daa
and
mov
mov
sbb
pop
stos
jg
xchg
hlt
mov
rolb
mov
jae
jl
dec
jae
ds
inc
and
stos
sbb
pop
jge
jne
test
pop
in
adc
cmp
mov
test
cmp
stos
hlt
mov
push
ljmp
punpcklwd
loopne
outsb
and
and
mov
jo
jmp
mov
mov
and
loopne
mov
mov
xchg
dec
sub
hlt
aam
mov
xchg
add
into
xchg
nop
inc
test
fs
ss
out
aad
cltd
add
out
movsb
lods
mov
mov
mov
push
fdiv
add
fadd
pop
cwtl
and
scas
cmp
repz
and
pop
push
xchg
add
inc
test
scas
push
data16
out
or
dec
data16
adc
xchg
popf
jmp
xor
cli
inc
xchg
lret
loop
sub
orb
cmpsl
stc
inc
mov
fistpll
pop
in
pop
rolb
xchg
add
loopne
push
cmpsb
insl
cmp
mov
fs
and
movlps
mov
lret
jecxz
jnp
or
int3
paddusb
mov
dec
loop
ret
shl
out
add
mov
cmpsl
inc
test
outsl
push
test
sbb
sub
gs
dec
pop
test
mov
je
mov
rorb
inc
fwait
and
and
pop
lock
rclb
mov
iret
add
add
pop
adc
notb
and
xchg
push
frstor
cmc
mov
clc
jecxz
jno
iret
rorb
aaa
or
stos
mov
cld
jbe
lahf
lds
push
shlb
add
mov
movsl
mov
xor
sahf
and
jb,pn
cli
and
sub
ljmp
sbb
push
insl
or
shll
pushf
mov
loope
jne
test
dec
sbb
shrl
orb
sub
out
push
dec
dec
jmp
neg
popa
rolb
inc
rolb
mov
xor
pop
mov
loope,pt
loope
stos
mov
jmp
mov
or
ss
mov
mov
fisubl
mov
sub
insb
mov
mov
imul
xchg
mov
inc
test
adc
movsl
or
shrb
jb
ud2
mov
aad
in
or
pop
movsl
adc
lods
popa
mov
pop
mov
aam
xchg
push
pop
push
stos
mov
lds
out
ja
pop
mov
pop
out
push
int3
mov
lret
cmpsb
sbb
test
inc
int3
xchg
int3
aas
mov
mov
mov
push
xchg
dec
adc
adc
arpl
xchg
sub
lock
push
repz
push
lret
movsl
push
jg
or
sub
aad
int3
pop
sbb
test
cmp
inc
mov
inc
mov
scas
mov
mov
sbb
push
imul
xchg
rclb
bound
or
xchg
rcr
cmp
lods
xchg
lock
pop
mov
stos
pop
lods
mov
dec
push
dec
cmpb
enter
nop
out
popf
push
inc
shlb
sub
adc
adc
vmread
icebp
imul
cmp
ret
scas
dec
dec
aam
in
and
sahf
pop
add
lea
jo
shrb
loopne
mov
repnz
add
leave
mov
movl
add
xlat
movsl
in
sub
leave
adc
in
adc
insb
stos
push
inc
std
ljmp
jb
test
inc
jae
inc
js
shlb
lret
push
xlat
ja
nop
dec
cwtl
call
popa
das
ret
lret
clc
inc
xchg
or
xchg
or
dec
lret
imul
push
imul
dec
in
cmp
jno
loop
dec
lahf
add
rcr
mov
jp
enter
iret
pop
pop
pop
xor
mov
je
push
add
sbb
mov
sbb
dec
sbb
xlat
or
push
mov
cmp
xchg
cmp
popf
sub
push
sbb
mov
pop
gs
mov
in
fidivrs
cmp
xchg
adc
pushf
ja
jecxz
sub
ss
xlat
das
mov
lea
jo
jg
push
add
mov
das
add
jmp
add
add
rolb
mov
filds
jle
pop
jb
ret
xchg
push
or
pop
cmc
jb
ret
aaa
adc
arpl
andb
dec
jle
aaa
fidivl
jl
or
popf
jmp
sub
cld
stos
push
adc
movsl
adc
jbe
mov
gs
out
test
mov
jne
cli
cmc
ret
mov
xchg
rcl
pushl
add
ds
mov
cs
hlt
test
push
outsb
pop
mov
repnz
xor
cmpsb
hlt
dec
out
ret
xorb
scas
push
leave
rol
and
dec
pop
pop
jle
in
clc
out
cltd
add
and
cmc
xor
dec
mov
inc
xor
repz
xchg
sbb
loopne
mov
mov
fisubrl
jo
adc
out
int
sub
push
jns
leave
adc
mov
dec
xlat
mov
and
das
insl
cmpsb
jmp
pop
xchg
push
cltd
fwait
and
rcrl
iret
test
outsl
inc
popa
push
cs
push
sub
fcmovbe
movb
inc
cmpsl
and
and
push
scas
fmull
fcmovbe
testl
pop
inc
adc
mov
gs
mov
adc
xchg
inc
push
clc
sbb
adc
push
insl
stc
in
repz
sti
repz
xor
and
dec
lock
je
cmp
cmp
cmpsl
pop
sub
or
or
divb
sub
cmpsb
xchg
aas
mov
fstps
cmc
in
xor
inc
cmp
adc
stc
stos
xchg
mov
jns
cs
fildll
sub
pusha
int
sub
std
cwtl
mov
jl
and
fwait
lods
scas
sub
mov
dec
int3
outsl
fisubrl
sub
mov
sbb
pop
xlat
data16
xor
xchg
ret
data16
adc
xor
arpl
xor
mov
xchg
cmc
subb
cs
enter
ficompl
loope
popa
adc
mov
inc
lods
xchg
fsubrl
dec
movsl
pop
in
fucom
test
jbe
icebp
clc
addb
cli
pop
jno
xor
aaa
js
mov
pop
mov
inc
andps
and
inc
mov
data16
shlb
jecxz
ret
mov
fcmovnb
inc
out
add
xor
in
mov
sub
roll
and
orb
out
jle
lea
mov
mov
fdivs
stos
lea
dec
leave
addr16
mov
sub
jno
pop
clc
aaa
pop
out
fdivr
addr16
xlat
jg
xchg
push
sbb
stos
xchg
mov
fcoms
out
sub
xchg
xchg
imul
and
or
rol
xchg
sub
sub
sub
shrl
push
sbb
and
aad
add
das
mov
add
inc
xchg
incb
cmp
ffree
xchg
mov
bound
cli
imul
pop
sub
sbb
icebp
imull
inc
xchg
popa
jg
test
test
in
mov
pop
imul
mov
subb
stc
stos
ret
push
in
push
jmp
out
ljmp
xchg
push
inc
inc
test
and
sub
out
jecxz
rcll
test
sub
xor
out
cmc
or
adc
popa
push
clc
clc
imul
test
jnp
out
or
iret
repz
insb
jae
cmc
jge
xlat
mov
mov
and
cmp
inc
jae
loopne
sbb
les
cwtl
nop
dec
out
inc
sub
push
shll
xor
addl
into
mov
out
adc
or
adc
fldl
loopne
inc
ja
adc
sbb
repz
call
loope
movzwl
pop
mov
inc
sbb
and
call
into
rorb
cmpsb
jo
cwtl
sti
cmp
sub
cwtl
sbb
lock
out
sbb
push
xlat
add
sbb
mov
fcompl
and
mov
pop
data16
pushf
dec
xor
pop
iret
inc
jne
xor
lret
pop
mov
les
adc
pop
pop
dec
stc
sti
icebp
cmc
in
jecxz
fdivp
sub
stc
dec
fnstsw
jb
mov
scas
cli
pusha
push
nop
xor
xor
mov
or
mov
test
fwait
ss
mulb
and
push
adc
stos
and
and
lahf
imul
daa
jmp
cmc
adc
out
push
mov
movsl
mov
inc
jbe
push
push
mov
push
adc
sahf
pop
pushf
mov
xor
das
cmp
or
pop
xor
int3
push
fwait
stc
and
pop
push
adc
int3
or
dec
ret
dec
mov
pusha
add
sbb
lock
cmpsb
es
cld
and
outsb
loopne
sub
mov
pop
xchg
pop
jle
xchg
pop
lods
icebp
and
data16
stos
fcoms
add
hlt
or
repz
xorl
aam
push
icebp
xchg
xor
mov
cmc
fildl
jmp
in
sbb
add
xor
sub
rcl
or
loop
int3
ret
jg
xchg
sbb
push
fnstenv
fsubl
fsubrl
insb
inc
movsb
mov
xchg
out
and
jp
out
int
or
sbb
cltd
pop
jp
cmp
fsubl
ret
cmp
mov
adc
fsubrl
pop
and
jb
and
lret
add
xor
aas
imul
test
inc
xor
rclb
pop
jle
jb
pusha
test
hlt
dec
gs
ret
lahf
sbb
test
mov
mov
iret
and
push
or
shll
push
js
mov
popa
cs
stos
lahf
push
inc
xor
xor
adc
cwtl
outsl
insl
pop
dec
icebp
pop
out
cmp
outsb
or
sub
fisubrs
or
movsb
or
inc
lods
inc
or
cmp
xor
inc
hlt
mov
movsb
iret
fistl
xchg
loope
leave
adc
sbb
mov
popf
movb
vstmxcsr
dec
jbe
xor
jecxz
lea
fs
sbb
testl
sub
sbb
test
int
shrb
pop
mov
inc
inc
repnz
sbb
push
je
adc
or
or
jb
rcrl
jae
ljmp
mov
jmp
mov
jb
outsb
fwait
leave
in
mov
jp
jno
in
stc
add
or
mov
test
inc
negb
shl
sub
and
iret
sbb
or
enter
jns
jecxz
out
les
sbb
adc
xor
ret
dec
cmc
mov
js
cmp
or
aaa
nop
dec
cmpsl
fs
pop
inc
xor
pop
add
pop
sbbl
les
repz
mov
inc
mov
in
mov
push
mov
popa
cld
and
aaa
lock
daa
push
sub
and
aas
jl
call
cmp
push
jle
mov
cs
sbb
adc
int
movsb
mov
inc
adc
mov
adc
and
in
mov
ja
jbe
dec
fwait
adc
imul
mov
addr16
outsb
mov
imull
mov
mov
xchg
and
outsb
mov
shll
and
jne
inc
pop
cwtl
loopne
clc
jb
or
ja
loope
mov
mov
jecxz
mov
jae
movsb
bound
push
inc
and
cli
xchg
pop
mov
shll
lahf
push
aad
addr16
or
repnz
out
hlt
loope
dec
repnz
mov
push
lahf
test
ficoms
leave
or
ds
je
lods
and
test
adc
push
out
dec
hlt
pop
aas
jae
imul
dec
pop
cmc
jge
sbb
cmp
aaa
bound
and
sub
jg
movb
punpckhdq
js
xchg
sbb
cli
mov
or
or
repnz
add
jns
add
iret
cmc
xchg
mov
jnp
lcall
mov
mov
pop
jge
test
in
repnz
stc
repnz
jp
lcall
adc
and
movsb
out
dec
lods
push
pop
or
ret
bound
roll
lcall
in
in
push
xchg
pushf
movsb
in
fmul
daa
mov
xchg
push
scas
and
pop
test
cmp
pop
into
cmp
push
sbb
jg
and
loop
test
mov
das
rclb
xchg
pop
stos
push
xor
aad
fmuls
inc
xor
aam
xchg
adc
jno
push
add
dec
push
add
fadd
xchg
sbb
mov
sti
ljmp
gs
enter
dec
cmpsb
xchg
mov
mov
stc
pushf
or
inc
ret
inc
stc
xchg
jecxz
mov
dec
js
mov
je
dec
jo
sbb
mov
out
mov
mov
xchg
inc
xchg
stos
in
and
adc
sub
cwtl
movsl
fidivrs
add
push
ficoms
add
mov
test
mov
jb
pop
mov
mov
stos
pushf
and
xor
mov
icebp
jecxz
ds
dec
mov
in
or
jl
sti
cmpsl
daa
sbb
push
mov
sbb
xor
neg
xchg
test
jecxz
int
sbb
js
pop
xor
sarb
in
movsl
cmp
pop
and
cmpsl
mov
xchg
pop
mov
sbb
ljmp
and
dec
out
dec
add
mov
pop
mov
pop
mov
addr16
xor
loop
mov
mov
mov
fbstp
add
and
jo
clc
mov
sbb
mov
int
ficomps
cmp
mov
in
sbb
out
or
in
orb
popl
mov
nop
gs
bound
cmp
sbb
mov
xchg
cmp
fcomps
pop
jl
aas
repnz
mov
pop
out
pop
out
insb
or
testl
dec
cmp
mov
stos
and
lret
test
push
addr16
dec
mov
pop
fnsave
inc
repnz
mov
out
add
jne
add
pop
inc
loope,pn
dec
push
mov
dec
mulb
sbb
cwtl
iret
pop
outsb
adc
adc
jbe
inc
inc
sbb
xor
outsl
in
outsb
cmp
and
andl
hlt
cwtl
popa
fmuls
fistpl
insb
push
sarl
iret
push
std
fbstp
jmp
data16
xchg
pop
rcl
std
outsb
les
sbbl
push
bound
mov
xchg
aas
sub
jnp
mov
shlb
fcmovnb
fidivs
mov
lahf
out
mov
sub
adc
in
aad
xchg
loop
stc
aad
popa
mov
or
mov
imul
cmpl
pop
dec
pop
lods
sti
mov
test
pop
mov
jle
xchg
ljmp
movsb
out
mov
pop
inc
ljmp
push
or
inc
jnp
lret
movsl
je
mov
push
out
pop
mov
cltd
jnp
cmpsb
sbb
fsubl
sbb
xchg
push
popa
pop
or
stos
addr16
into
push
lcall
fstp
test
lahf
cli
mov
add
mov
jecxz
mov
or
jmp
out
sbb
mov
jge
and
es
xchg
xor
push
fdivrs
call
push
dec
gs
jle
bound
add
hlt
fnstenv
dec
sub
cmp
sub
das
iret
pusha
fnstsw
sub
pop
cmp
outsl
fisttpl
movsl
cmovg
inc
cmpsl
mov
lcall
jle
adc
sbb
mov
sbbb
add
cmc
inc
lock
jae
std
xor
es
shlb
fsubp
mov
jmp
mov
and
popa
outsb
or
popa
pop
or
lea
adc
push
adc
mov
dec
enter
xchg
pop
jle
cli
ja
je
in
mov
test
dec
sub
mov
adc
push
dec
jle
mov
pop
sbbl
pushf
mov
int3
arpl
jne
addr16
jg
or
incl
test
out
movsb
or
jg
repz
rcrl
and
sbb
push
dec
dec
inc
mov
jae
add
dec
fst
out
int3
dec
and
repz
ss
jb
test
push
arpl
mov
fstps
or
gs
ss
cmpsl
fadd
aaa
lahf
jnp
shll
aam
sub
xchg
add
imul
lock
movsb
out
test
push
imul
inc
mov
repz
push
xchg
aad
js
aam
stos
sbb
mov
xchg
push
imul
adc
leave
sub
std
pop
sbb
cltd
loope
cmp
stc
ljmp
push
jl
mov
sub
and
sti
addl
and
sub
insb
push
mov
sub
mov
pop
iret
ss
aas
stos
fistps
jl
add
lret
repz
xchg
mov
fiaddl
mov
cmp
aaa
js
dec
push
mov
mov
ljmp
dec
iret
adc
jae
and
lret
leave
imul
outsl
ljmp
iret
push
dec
fdivs
cmp
nop
sbb
cli
mov
roll
lret
pushf
outsl
mov
inc
rorb
sub
mov
sbb
repnz
addr16
pop
cmp
dec
das
inc
dec
jg
in
cs
lahf
test
or
add
jns
mull
out
pushf
push
pop
inc
xchg
cwtl
dec
mov
or
movaps
lret
mov
mov
fidivl
sbb
mov
iret
fs
loop
mov
jae
mov
jae
push
aam
movsl
lret
cmp
ss
fsubr
cmp
xchg
inc
sahf
rep
hlt
stos
pop
out
fidivs
xor
fisttps
pop
sub
sub
sbb
leave
jo
push
jns
pop
jecxz
daa
in
icebp
test
lret
outsl
out
loope
mov
repnz
pop
dec
xchg
cmp
out
outsb
push
push
scas
sub
jl
xchg
xchg
filds
pusha
xchg
lds
xlat
xchg
mov
or
test
in
in
sbb
lods
mov
xchg
or
push
int3
lahf
mov
mov
sbbb
insl
mov
ja
popf
pop
inc
adc
sub
stc
xor
mov
sbb
shlb
xchg
add
and
pop
in
adc
mov
inc
mov
ja
inc
sbb
or
loop
pop
push
mov
in
mov
lock
dec
cmp
in
push
and
push
dec
cwtl
stos
lahf
imull
js
jge
add
sub
loopne
ds
xchg
jg
imul
inc
out
dec
test
pop
mov
les
inc
jmp
movsb
ror
dec
add
cltd
fimull
adc
xor
pop
push
xchg
insb
rorb
aaa
idiv
jge
fxch
dec
xorb
mov
cli
outsb
lds
fsts
enter
push
outsl
xchg
test
inc
add
add
int
jb
cwtl
into
pop
out
mov
idiv
xchg
or
stc
out
loopne
sub
xchg
into
xor
mov
test
sub
in
jns
mov
or
popf
sti
push
fnstenv
gs
das
dec
cmp
mov
mov
in
adc
orb
lret
in
xlat
jb,pt
sub
sbb
mov
adc
mov
adc
mov
into
cmp
std
in
popw
repz
add
adc
add
lahf
sahf
cltd
popf
jb
push
pop
sub
rolb
mov
adc
pop
pop
push
push
mov
cmp
mov
push
cmc
das
aad
test
fcos
outsl
arpl
xchg
stos
hlt
cmpsb
xchg
fdivrl
dec
ds
repz
push
stos
sbb
push
jl
mov
in
cld
or
verr
orb
lock
mov
stos
js
fdivrp
xchg
xchg
and
adc
sets
xchg
sahf
lret
add
mov
icebp
iret
xor
cli
mov
inc
loope
push
das
call
out
jne
icebp
sub
das
scas
or
dec
js
into
inc
add
sahf
imul
rcl
push
push
mov
aad
mov
cmc
popf
ljmp
or
fdivl
mov
dec
out
movsb
mov
push
add
gs
jmp
mov
jbe
add
adc
hlt
addr16
insb
jno
add
idiv
imul
shrb
mov
fcmovnb
pop
and
mov
jnp
cmp
mov
lahf
mov
frstor
loop
inc
and
in
notb
movsb
mov
jge
insb
rorb
add
inc
xor
push
mov
jo
and
xlat
mov
dec
mov
sbb
out
iret
adc
stos
gs
repz
inc
out
lahf
dec
out
pop
cwtl
pop
push
xor
and
or
imul
xchg
outsl
xchg
xor
and
mov
mov
add
xor
popf
inc
lock
adc
jmp
iret
cld
into
filds
push
xor
push
sbb
mov
bound
sbb
cwtl
inc
out
dec
test
xchg
jae
outsb
out
gs
xchg
pop
outsb
cmp
insb
lds
add
pop
xor
and
push
andb
pop
aad
ret
out
bound
loop
jo
inc
loope
push
mov
and
push
sub
push
fisttps
movsl
push
hlt
adc
insb
add
imul
xchg
in
cwtl
shll
inc
or
sbb
mov
ljmp
pop
pop
mov
movsb
sub
sbb
mov
ret
and
inc
or
stos
jbe
lret
jmp
or
sub
push
icebp
das
sub
cmp
data16
jl
cmp
cmc
int3
inc
dec
lds
or
xchg
add
into
push
mov
out
xchg
sbb
pusha
pop
jge
arpl
mov
adc
xchg
ficompl
xor
out
fists
fs
in
dec
xor
xchg
mov
call
pop
add
mov
mov
sub
or
jo
cmp
aad
jns
or
icebp
fwait
jno
dec
mov
adc
mov
rol
fstpl
or
cmp
imul
pushf
aam
leave
fbld
jl
outsl
mov
adc
dec
lods
fabs
fdivrs
inc
inc
mov
icebp
es
mov
gs
enter
push
xchg
shufps
inc
jl
add
push
pop
xor
mov
inc
pop
comiss
xor
mov
sub
add
push
and
data16
jmp
push
call
inc
into
enter
sahf
pop
cmp
popa
or
dec
je
or
insl
ficomps
test
fwait
pop
sub
sbb
loopne
lock
sahf
icebp
adc
xor
fwait
stos
cmp
mov
mov
repnz
dec
fimuls
stos
in
pop
fisubrs
insl
fcoms
push
lcall
imul
stos
inc
mov
jne
mov
xchg
icebp
inc
cmp
xchg
pop
cwtl
pusha
cwtl
xchg
fldl
cmp
dec
push
cmpsl
cli
sbbl
mov
stos
mov
and
out
mov
push
or
ret
pushf
cltd
rolb
cmp
jle
jbe
xchg
push
sub
mov
movsb
fisttps
ljmp
ja
and
test
aam
xor
cmpsb
or
mov
je
adc
sti
rorb
xor
add
adc
pop
jle
mov
fistpll
pop
pushf
lcall
jae
add
lods
dec
out
pushf
in
rcrb
sbb
movb
testl
ret
xor
dec
fmuls
xor
out
call
rep
in
adc
arpl
stos
pop
insl
inc
lea
popf
sarl
aam
mov
stos
mov
jno
and
sub
xchg
sbb
pop
lods
mov
push
mov
jmp
adc
mov
or
push
pop
mov
lcall
cmp
xor
fs
test
mov
mov
pop
lods
outsl
xlat
xor
and
dec
shl
popa
adc
movsb
les
fs
xorb
icebp
sub
sti
pop
mov
rorl
int3
mov
pop
jb
fdivs
in
into
shlb
xchg
in
push
divl
inc
sub
mov
xchg
jne
jae
imul
adc
mov
lea
mov
fcoms
xchg
test
xchg
sub
xchg
inc
fucom
jae
dec
and
test
adc
psubq
movsb
push
cmpb
add
fstpt
fwait
xchg
mov
lcall
push
cmpsb
mov
out
cmc
jne,pt
or
decb
rcll
icebp
sub
push
das
lcall
and
mov
incb
cmpb
mov
sub
add
rcrb
push
dec
mov
fisubl
inc
shll
sbb
sub
cmpsl
arpl
es
jecxz
and
xor
in
inc
mov
pop
jle
mov
repz
mov
or
jnp
mov
xchg
in
push
icebp
pop
xchg
sub
outsb
jnp
pop
fmuls
or
fs
addr16
inc
cmc
push
aad
ljmp
addb
push
push
jnp
shl
fnstenv
hlt
inc
mov
mov
int3
xchg
mov
sub
cmp
mov
fisubl
xlat
out
jb
cltd
jno
gs
insb
jmp
add
out
xchg
stos
and
inc
aad
jae
mov
mov
jp
push
mov
pop
adc
inc
orl
nop
inc
adc
das
cmp
push
outsl
es
out
xor
adc
aad
inc
pushf
stos
nop
add
pop
jg
pop
xor
jge
pusha
bound
dec
sbb
loope
and
loopne
push
hlt
mov
loop
mov
jge
cld
dec
add
pop
lods
cmpb
test
xchg
inc
push
rorl
into
inc
push
cld
loop
fistpll
out
cmp
jl
jnp
jle
test
mov
je
adc
cmpsl
xchg
shlb
xchg
and
mov
sub
push
mov
pop
lahf
es
out
in
sub
cmp
hlt
roll
jl
rcrl
inc
mov
adc
or
mov
cli
jl
and
test
push
out
xor
lods
cmc
jno
sarb
call
lcall
mov
xchg
adc
into
les
xor
mov
mov
xor
leave
in
push
aas
dec
fwait
push
out
dec
movb
sar
in
in
mov
popw
push
xchg
push
pop
jnp
pop
xor
dec
aas
push
cwtl
push
jecxz
mov
add
ljmp
xor
divl
fcmovbe
in
inc
je
mov
cmp
mov
ret
and
inc
cmp
push
inc
pop
cmpb
ret
loop
roll
mov
js
xchg
adc
push
int3
cmp
pop
mov
dec
cmp
jae
jmp
and
sub
pop
sub
lods
mov
mov
push
jl
mov
or
popf
cmpsl
js
push
fnstenv
rol
adc
cli
adc
mov
fistpl
lods
dec
test
mov
push
inc
or
xorb
nop
call
or
push
mov
leave
xor
cmp
dec
mov
vpmacsdd
adc
loopew
xchg
ds
in
mov
inc
cwtl
inc
mov
inc
mov
xor
repnz
lret
jge
cmp
out
in
adc
jge
mov
lds
cmp
dec
adc
add
insl
xor
fsubl
dec
loope
pushf
dec
pop
push
pop
test
popa
pop
cmpsl
fmuls
cmp
mov
stos
and
loopne
mov
pop
cmp
jp
jg
shrl
adc
dec
xchg
arpl
xchg
test
sbb
stos
out
lret
rol
sbb
sarl
xor
mov
loope
fs
sub
cmp
xchg
repz
pop
sbb
ds
movsb
cmp
jae
add
mov
in
sub
mov
dec
call
jnp
mov
adc
push
popf
sbb
stos
xor
push
arpl
jo
pop
aam
stc
pop
adcl
pusha
lock
inc
mov
mov
push
mov
mov
push
mov
aas
xorl
push
xor
into
nop
pop
xchg
xchg
fldt
mov
subl
cmp
and
lock
data16
xor
cmpsl
pop
pop
add
out
add
addl
inc
faddl
arpl
mov
stos
movsl
lds
mov
xor
std
icebp
lods
or
or
pop
push
cwtl
rdpmc
xchg
adc
sbb
mov
shlb
arpl
ds
pop
pop
cld
mov
shrl
mov
hlt
repz
es
test
xchg
mov
dec
test
repnz
sub
pushf
lods
push
stos
jge
call
into
je
lret
mov
enter
shll
sub
mov
in
cmpsb
push
xor
cmp
lods
push
jl
xchg
xchg
repnz
push
mov
push
dec
and
popf
push
pop
movsl
lods
pop
insb
dec
enter
xlat
lds
push
sahf
data16
sahf
inc
arpl
mov
rol
mov
xor
add
jnp
fwait
sub
test
lret
je
test
mov
rcr
mov
xchg
int
cmp
je
in
mov
jp
imul
sar
and
adc
jl
sahf
int3
push
xchg
loope
ja
loop
jmp
loope
stc
fwait
inc
out
movsl
out
addr16
lock
mov
inc
xchg
test
inc
in
pushf
and
dec
mov
stos
cmpsl
aaa
imul
pop
mov
push
scas
cltd
xor
dec
gs
cld
stos
cmp
sar
movsl
pop
cmc
cmp
push
xor
js
js,pt
ret
mov
clc
cmp
sbb
and
sbb
sub
ljmp
xchg
in
adc
dec
in
ficoms
xchg
stos
jmp
xchg
push
lcall
repz
fcompl
inc
in
push
dec
add
cltd
test
cmp
or
or
xchg
mov
mov
enter
cmp
nop
fdiv
or
push
shl
mov
or
sub
in
arpl
shrb
xchg
cmp
push
les
int3
cmpsl
jmp
jb
lret
pop
jb
xor
loope
out
mov
sbb
popa
rcrb
iret
push
je
ret
xchg
or
push
mov
jg
pop
or
xor
fcmovnbe
outsb
out
push
movsb
mov
dec
fisttpl
rcrb
add
shr
cli
mov
push
rcr
incb
out
and
cmp
jge
sub
xor
outsl
lods
cmp
pop
push
pushf
mov
movsl
mul
dec
imul
gs
adc
pop
xor
aaa
jae
icebp
push
mov
dec
jne
jae
push
mov
ds
and
je
jb
ss
mov
lahf
fisubrs
inc
or
jbe
push
repz
aaa
jo
and
pushf
cwtl
pop
jg
mov
gs
fildl
cmc
fisttpl
daa
inc
pop
xorb
ja
fstp
mov
adc
fwait
insl
dec
pop
cli
or
int
dec
mov
jg
enter
stc
aas
adc
repz
subl
adc
pop
pop
pop
insb
stc
rcr
clc
inc
inc
test
fisubl
popa
mov
or
js
or
jg
shrb
xchg
in
mov
add
add
int3
lret
mov
sbb
dec
fwait
sub
sbb
les
jg
adc
out
jb
xchg
or
and
inc
mov
out
cmp
out
sub
fucomi
mov
adc
xlat
fnstenv
les
into
das
imul
sbb
jnp
inc
cmp
pop
cmp
fistpll
out
sbb
mov
lret
ljmp
icebp
outsb
sahf
mov
cwtl
dec
inc
stc
sub
mov
xor
mov
push
mov
sub
dec
out
xor
fwait
push
lea
ljmp
push
push
xor
adcb
loop
adc
rclb
mov
jbe
push
xor
jl
enter
das
imul
push
jne
lds
fbld
pop
ret
jne
dec
data16
std
fildll
jnp
jmp
add
push
gs
and
xor
aas
out
or
or
fiadds
mov
lret
xchg
adc
gs
jno
xlat
pop
sbb
icebp
cwtl
filds
sub
stc
fucom
add
outsl
sbb
test
mov
bound
mov
sub
add
movsb
mov
inc
mov
jmp
mov
rcll
or
sbb
jecxz
sbb
xor
inc
negl
packuswb
sahf
popf
inc
popa
xchg
andb
and
jg
ss
ds
test
fcomi
sbb
sbb
xchg
adc
sbb
popf
mov
or
sbb
xor
push
je
or
jbe
dec
fidivrs
xor
stos
mov
fwait
sar
int
test
sbb
fiadds
das
rorl
mov
adc
mov
mov
jmp
cwtl
in
xor
push
or
jp
lds
out
jmp
test
pop
mov
cmpsb
mov
movb
xchg
iret
dec
inc
sbb
or
lcall
inc
ss
shr
fcmovnbe
fcmove
push
inc
shl
test
cmp
or
and
inc
mov
push
pop
add
xor
outsb
repz
test
fmull
mov
mov
dec
push
sub
adc
fsubs
andb
out
jmp
inc
adc
sbb
xlat
xorl
fucomp
push
test
xlat
xchg
sti
in
popa
ds
lahf
cmp
mov
mov
pusha
leave
sahf
cs
dec
push
add
leave
fs
dec
cmp
vphsubdq
xor
ret
rcll
xchg
xor
sub
aas
pop
pop
enter
jp
mov
dec
xchg
in
or
popa
sbb
inc
and
mov
cli
bound
lret
mov
adc
les
xchg
sbb
lcall
sub
stc
dec
movsb
mov
push
dec
inc
mov
sbb
insb
in
movsl
shll
inc
aad
and
imul
sbb
or
int
inc
push
or
jmp
xchg
xor
ss
push
push
dec
mov
arpl
popa
mov
push
sti
loop
call
int
shl
icebp
loop
in
lret
sbb
and
leave
or
dec
addb
cmp
jnp
inc
sti
cmc
xchg
aad
rclb
cmp
popa
xchg
dec
mov
js
push
test
add
sbb
push
pop
cmp
and
add
je
ret
cmp
mov
sbb
mov
jne
idivl
jb
js
sub
and
mov
jmp
sub
xchg
and
pop
sub
jo
dec
neg
push
in
test
cwtl
pop
pop
ds
dec
mov
jnp
lret
adc
mov
bound
fidivl
mov
lods
scas
push
sub
out
mov
fs
pusha
out
lcall
xor
nop
xor
enter
jmp
jns
loopne
jae
out
insl
xchg
stos
shlb
mov
xchg
jae
mov
jne
add
dec
imul
mov
lret
push
into
inc
stos
fstp
cmp
xchg
ds
out
movsb
inc
and
imul
ljmp
in
loop
xchg
mov
mov
sub
mov
lds
push
xor
cmpsb
or
inc
xor
cmc
jmp
int3
insb
mov
mov
and
push
ret
cmpsl
jnp
add
xchg
cwtl
aad
push
mov
inc
push
adc
call
test
fst
movsb
xchg
repnz
andl
or
mov
jno
inc
outsb
pavgw
imul
adc
sub
repz
enter
and
add
scas
mov
arpl
imul
das
rcrb
iret
jnp
ficompl
ja
pop
cltd
add
arpl
mov
mov
fsubs
cli
dec
cmp
sbb
std
sbb
jle
in
xor
adc
rolb
cmpsl
dec
nopl
push
pop
ret
sbb
aam
imul
jecxz
scas
fildl
cld
cmp
out
test
repnz
insb
arpl
xor
out
stc
in
lea
inc
fucomp
or
inc
mov
add
mov
jp
adcb
std
or
popa
mov
sarb
pusha
sbb
push
cmp
jbe
dec
mov
adc
notl
lcall
push
pop
lock
lret
xor
je
adc
cli
sub
and
xchg
test
adc
and
imul
in
cmp
rorb
stos
popa
mov
mov
sbb
out
cwtl
fs
dec
push
jne
cs
mov
bnd
pop
and
dec
or
jnp
mov
fldenv
push
jge
sbbb
pop
repnz
adc
mov
sbb
ljmp
lods
jo
mov
shlb
js
icebp
test
aaa
mov
movsl
and
or
jmp
push
mov
shl
stc
ret
pop
je
xchg
movsl
add
jb
cs
movsl
adc
scas
pop
lahf
add
jecxz
in
mov
ret
cmp
jle
rcll
loope
cltd
dec
iret
fnstsw
inc
je
test
or
cmp
dec
shrl
push
mov
xor
jp
into
fwait
repnz
xor
fs
imul
or
cmpsb
lock
nop
xor
leave
mov
xchg
mov
ret
pop
shl
lcall
xchg
pushf
outsb
mov
cmp
ljmp
gs
cmc
sar
cmpb
add
fnsave
fisubl
inc
outsl
out
int3
push
call
rolb
js
rcl
and
cmp
sub
loop
sbb
shrl
shrb
jnp
jg
or
idivl
jbe
imul
sub
add
fwait
jno
jae
loope
push
outsl
out
push
out
data16
sbb
xor
xchg
adc
pop
jg
xor
sbb
repnz
mov
loope
jmp
iret
lods
xchg
insb
sbb
or
aas
lret
lods
aaa
fstps
insl
andl
rcl
les
dec
adc
add
inc
outsl
push
push
test
pop
pop
hlt
fcompl
clc
dec
sub
mov
out
in
inc
xor
lods
pop
jne
adc
icebp
aad
cwtl
and
add
xchg
test
out
inc
push
cmpsb
and
in
sbb
data16
fld
jge
pop
jge
shlb
mov
jp
fsub
imul
sub
clc
xchg
push
jle
mov
rep
dec
and
std
sar
mov
test
or
cmp
cld
xchg
mov
mov
push
int3
cltd
and
repz
shl
cmp
jecxz
mov
mov
in
ret
sub
mov
mov
sarb
add
hlt
sub
repz
xor
lea
scas
cmc
ja
pop
cmpsl
cld
addr16
xor
gs
stc
mov
ret
mov
jge
outsl
push
lcall
lock
xor
out
inc
aas
mov
mov
dec
lret
ret
lods
inc
and
cmovne
push
adc
cwtl
out
dec
xor
out
adc
pop
sahf
add
mov
fcomps
inc
inc
mov
push
inc
mov
out
push
inc
int
frstor
pop
fcoml
scas
add
shrb
xor
out
test
test
sub
push
add
xor
in
imul
loop
scas
mov
fdivl
push
cmc
lret
jae
std
and
fwait
mov
push
inc
mov
or
lods
cmp
jle
adcb
pop
add
sbb
fnstsw
push
or
fcomps
dec
ror
push
aas
cmpsl
jl
inc
sbb
jno
shll
js
arpl
cmp
push
cmpb
push
sbb
sbb
add
push
xchg
popf
insl
adc
mov
mov
ja
xor
add
popf
or
out
dec
jge
setb
cltd
xchg
jae
add
pop
jns
dec
mov
inc
fcomps
imul
addb
pop
add
test
jbe
pushf
push
sub
add
rclb
rclb
arpl
hlt
out
dec
mov
insl
inc
inc
xchg
mov
sbb
test
push
xor
outsb
lds
ljmp
js
fnsave
sti
or
pop
mov
testb
xchg
inc
pop
subb
pop
inc
outsl
fcoml
and
int
clc
test
mov
sbb
cmp
xchg
pop
jo
push
pop
mov
sbb
cld
ret
jnp
inc
inc
or
filds
nop
jecxz
xlat
push
popa
and
out
sub
loopne
jmp
add
loop
rcrb
in
fldt
les
and
shlb
xor
adc
inc
xor
sub
jl
aad
repnz
std
mov
repz
fiadds
inc
cmp
sbb
mov
xchg
mov
and
jp
shll
jle
sti
into
gs
ss
outsb
pushf
inc
adc
xor
pop
pop
stc
sti
push
sub
xor
add
ret
pop
xchg
or
movsb
mov
ret
outsl
adc
fdivr
mov
insb
mov
sub
sbb
dec
hlt
imul
idiv
mov
push
xchg
xor
fisttpl
out
jno
scas
mov
leave
xor
jne
bound
test
stc
jne
repnz
test
mov
ja
jg
aas
xlat
and
mov
test
enter
sub
out
add
jmp
out
inc
and
imul
call
adc
mov
into
nop
mov
mov
jae
into
sub
sbb
stc
sub
lods
daa
push
mov
lret
imul
outsl
movsl
les
into
insb
fidivrl
push
inc
rorb
or
mov
das
sub
lcall
sbb
cltd
push
je
sbb
jne
movsl
mov
out
rol
popa
pop
stos
repz
call
mov
inc
mov
push
inc
cld
pop
xor
ss
ret
pushf
adc
mov
pop
lahf
into
lods
jmp
stc
jno
addb
ss
ret
cmc
out
rorb
sbb
cmp
out
mov
push
jg
push
sti
push
or
jne
inc
sti
insb
pushf
mov
push
scas
in
orb
orb
xchg
jmp
sub
ds
jp
mov
outsb
xchg
lea
add
lcall
inc
push
cmp
add
push
sti
inc
mov
repnz
dec
arpl
jne
ss
addr16
rcrl
or
and
movsb
pusha
xchg
loop
mov
insb
shr
imul
jne
sub
imul
cli
out
inc
and
mov
ret
pop
push
pop
add
or
sub
call
sti
mov
cmc
daa
out
aam
add
cmp
push
shr
aaa
ss
sbb
fs
adc
mov
in
mov
mov
cmpsl
push
sub
sahf
leave
out
stos
sbb
rorl
inc
jns
in
int3
dec
or
mov
xchg
mov
or
sbb
and
outsl
pop
push
fiadds
cmpsb
loopne
movsb
and
cwtl
inc
insl
xchg
int
movsl
xchg
sbb
stos
clc
cmp
repz
imul
mov
add
les
push
loop
xor
mov
outsl
test
rorb
push
popf
sub
call
psubw
int
mov
dec
testb
add
mov
adc
xchg
leave
jmp
sub
mov
cmp
cmp
mov
xor
imul
jp
arpl
cmp
add
add
xor
dec
push
sbb
fisubs
sbb
lods
mov
lods
sub
cmp
dec
imul
xchg
stos
jnp
arpl
mov
mov
in
inc
fcmovnb
mov
dec
sub
mov
sbbl
cmpsl
icebp
sub
xor
repz
dec
xor
addr16
cli
int3
dec
jecxz
not
les
test
xor
cmp
inc
dec
aas
stc
xor
rol
mov
jp
mov
mov
add
test
sbb
adc
lret
inc
cli
out
fisttpl
cld
ja
lret
adc
cmpsl
fsub
fdivr
cmp
stos
aaa
xchg
jmp
movsl
or
mov
idiv
daa
dec
pop
rolw
jbe
inc
push
mov
cmp
icebp
add
out
int
lcall
pop
imul
mov
cli
pusha
inc
pop
lcall
addr16
test
test
cmpl
jae
fwait
aad
pminub
sbb
inc
fwait
jae
push
leave
es
mov
pop
push
jge
mov
mov
loopne
cmpl
xchg
daa
mov
mov
mov
pop
mov
pop
shl
mov
out
and
idiv
sbb
jecxz
inc
add
dec
loop
push
dec
idivb
cmpsb
fildl
sub
dec
mov
fdivrs
dec
sbb
int
add
lea
mov
cmc
inc
shll
or
cwtl
test
inc
movsl
or
icebp
cmc
imul
cmp
pop
pop
sub
adc
arpl
std
bound
movsl
xor
xor
hlt
repz
mov
in
xchg
jns
xchg
stos
ljmp
repz
pusha
mov
adc
icebp
fstps
cmp
push
ljmp
inc
stos
inc
sbbl
inc
cmc
iret
in
cmp
cmp
movsb
lahf
mov
lret
ljmp
roll
push
mov
pop
dec
fstpt
sbb
cmp
pop
jno
cmpsl
or
div
add
int3
lods
out
adc
xor
imul
add
cli
or
mov
dec
out
sbb
lods
push
scas
mov
in
cmpsl
stc
jle
mov
add
stc
jae
fisubrl
xchg
into
jl
repz
mov
pusha
and
jbe
in
add
xor
pop
leave
outsl
aad
and
cli
or
sbb
dec
push
cmp
out
pop
mov
scas
or
sub
push
add
mov
pop
aaa
xchg
ficompl
or
cli
push
cmpsl
into
mov
mov
push
add
andb
jge
add
fnstsw
int3
aas
add
dec
inc
push
and
pop
movsw
les
inc
mov
xchg
add
pop
aas
xor
andb
out
popa
mov
mov
adc
ja
das
cmpsb
adc
and
or
pop
mov
sbb
cltd
xor
repz
push
loop
dec
adc
in
adc
loopne
and
movsl
in
xchg
hlt
in
in
jecxz
stos
jb
stos
in
jmp
hlt
jl
mov
xchg
outsl
aaa
sbb
sbb
adc
jns
inc
andl
in
js
in
add
decb
scas
out
and
mov
mov
dec
or
loop
cmp
or
enter
pop
mov
push
or
xor
out
lods
dec
cmpsb
mov
stos
fldcw
jecxz
sub
xchg
and
mov
lret
mov
xor
jae
cltd
repz
inc
adc
ss
mull
cmp
flds
xor
rcll
in
mov
cmp
aas
stos
sub
jle
dec
dec
inc
push
sub
xor
dec
movsl
mov
adc
push
pop
xlat
pop
mov
das
popf
jmp
daa
loop
cld
jno
push
mov
pushl
jne
rolb
jle
or
adc
js
not
arpl
das
xor
xchg
adc
adc
pop
or
lods
sub
hlt
fwait
pop
packsswb
sbb
sti
fsubrl
mov
rorb
mov
out
fdivrp
push
bound
xchg
out
lods
je
int
push
mov
test
dec
pop
xchg
aas
dec
mov
fmuls
fdivs
mov
push
xchg
xor
pop
mov
xchg
adc
je
mov
push
sub
cld
sbb
nop
hlt
jae
cmp
popl
mov
dec
fldt
rolb
adc
shr
out
lcall
ja
sub
xchg
daa
aam
xchg
mov
enter
xchg
pop
mov
cmpsl
push
mov
shlb
or
gs
sahf
mov
xlat
mov
jp
jecxz
add
jl
stos
mov
mov
sub
mov
andl
dec
pop
dec
inc
test
mov
outsl
cmp
cmp
inc
ljmp
ja
int3
cmp
sbb
lret
lret
push
pop
dec
pop
pop
dec
test
ror
adc
pop
out
insl
jae
xchg
and
arpl
outsb
fcompl
sub
and
mov
mov
and
push
pop
out
pop
arpl
scas
clc
dec
pushf
pop
push
cmp
pop
adc
mov
test
fidivrs
jb
mov
pop
xor
icebp
into
test
sahf
jecxz
es
jmp
pop
xor
rorl
push
data16
ret
jmp
stos
xchg
rcrl
mov
enter
push
fbld
mov
sub
sbb
mov
jp
mov
xchg
push
das
jge
push
sub
ror
daa
push
lock
xor
jcxz
pop
mov
mov
ljmp
or
insb
adc
scas
cmp
aas
dec
int3
daa
mov
and
xorb
das
data16
pop
lods
das
add
ja
mov
cwtl
sbb
ljmp
add
data16
lcall
mov
dec
popa
sbb
popa
push
popf
lret
inc
clc
lods
inc
and
ss
test
cmp
test
inc
addr16
sbb
andl
jo
sub
lahf
xchg
mov
jns
mov
xor
cmpsb
sarl
xchg
pop
or
inc
lahf
or
adc
dec
insl
cld
bswap
or
push
jb
mov
cld
xchg
lea
dec
mov
aas
out
xor
or
push
nop
jle
mov
xor
test
in
mov
repz
call
push
sbb
cmpsb
xor
xchg
sahf
das
mov
test
xor
cmpl
aam
xor
mov
stos
inc
pop
mov
bound
jmp
xchg
dec
cmp
loopne
pop
addr16
mov
jl
mov
cld
mov
shlb
lahf
push
and
in
imul
add
adc
pop
mov
sbb
jne
fmull
or
xor
cltd
pop
jne
push
push
add
mov
clc
and
adc
push
loop
pusha
mov
xchg
aam
xchg
fs
cli
and
ja,pn
insl
push
das
add
pop
mov
pop
jno
sbb
test
inc
mov
mov
pop
loope
test
test
add
jnp
test
mov
sbb
mov
dec
rcl
xor
int
inc
lods
sub
lret
sub
jb
call
push
test
mull
jo
cmpsl
sahf
mov
hlt
push
fisttpll
jns
mov
in
mov
mov
sub
push
test
les
or
pop
ds
es
js
inc
inc
xchg
in
mov
xor
mov
cltd
or
call
inc
pop
push
add
mov
mov
push
out
scas
mov
lock
hlt
mov
push
mov
mov
rolb
inc
rcrl
jbe
xchg
and
cld
sti
aam
adc
ficompl
cmp
pop
test
cmpsl
jl
stos
fmulp
in
cmp
dec
mov
in
adc
pop
lahf
add
inc
jmp
imul
repnz
inc
test
push
pxor
cmp
icebp
or
repnz
push
xchg
shrb
mov
sub
mov
dec
fs
dec
enter
mov
adc
pop
mov
out
sahf
or
add
pop
or
jbe
push
repz
jnp
test
cld
addr16
test
push
cmpsb
lret
or
jne
ret
neg
stc
cmp
xchg
jecxz
call
jno
test
mov
shll
fiaddl
clc
hlt
hlt
xor
mov
ret
jbe
shlb
sub
jp
add
push
mov
testb
imul
jle
mov
pop
push
outsb
fsubl
sbb
fcoml
cmpsb
mov
das
inc
scas
xor
dec
push
test
cmc
add
iret
aas
popa
mov
cltd
adc
and
pop
aas
scas
or
xchg
pop
repnz
es
sbb
cmp
aaa
aaa
mov
adc
cli
jne
inc
in
pusha
or
push
dec
dec
sub
mov
inc
inc
jb
push
and
ss
cwtl
les
rolb
mov
sahf
fiaddl
adc
push
cwtl
pushf
adcb
add
xchg
into
mov
sbb
insb
and
sbb
sbb
cmp
ficoml
aaa
pop
imul
jecxz
rolb
int
rclb
xchg
or
mov
adc
pop
cmp
adc
or
addr16
fiaddl
movsl
mov
shrl
sub
mov
inc
jno
call
cltd
clc
push
xor
sub
js
lret
movsb
push
dec
jno
pop
popf
cmp
pop
xor
jle
ja
clc
push
jmp
mov
jle
cld
and
in
sub
mov
cmp
mov
sub
and
mov
and
push
sub
or
xchg
sbb
es
inc
lahf
adc
push
xor
nop
mov
popf
adc
adc
lcall
xlat
out
out
push
daa
add
push
jo
pop
pop
jo
and
mov
jecxz
stos
not
cmpsb
aaa
xorb
and
adc
gs
or
mov
jns
adc
inc
mov
adc
mov
hlt
and
das
push
testl
addr16
imul
and
in
pop
rcrl
outsb
mov
int3
ficomps
and
lret
pop
mov
mov
or
sti
sbb
mov
or
out
je
rorl
stc
mov
push
ds
mov
cmp
xchg
pop
aas
cmc
pop
jp
pop
and
movsl
icebp
sub
movsl
repnz
stos
scas
inc
outsl
sbb
iret
mov
dec
movsl
cmpsl
xchg
mov
std
aas
xchg
rsm
jp
imul
cmp
xor
xor
mov
leave
cltd
inc
lock
scas
test
sub
out
sbb
insl
or
mov
test
mov
ret
xlat
sub
int
dec
mov
push
cld
movsl
ss
aas
xor
push
and
sbb
mov
aaa
add
push
sub
mov
xlat
jnp
or
add
out
xchg
loopne
pop
ret
ror
ljmp
jle
ficomps
data16
lret
leave
mov
xchg
std
enter
xor
repnz
aad
xchg
adc
ss
inc
lea
mov
jnp
push
inc
je
fldcw
stc
shlb
push
push
outsb
pop
adc
imul
popf
sbb
mov
inc
mov
jmp
mov
mov
lock
sub
jae
and
jb
out
lret
mov
dec
pop
pop
push
rcr
stos
push
dec
sub
or
ds
and
test
and
push
lret
inc
movsb
inc
ret
fmull
clc
cmp
rolb
dec
mov
inc
daa
incb
add
push
dec
adc
daa
mov
xor
mov
mov
or
std
xchg
mov
sbb
jmp
pop
icebp
lahf
sub
bound
jecxz
ljmp
mov
xchg
and
fs
jae
int
mov
sbb
jmp
xchg
mov
pop
test
jecxz
pop
adc
out
or
shl
xchg
cmc
pop
outsb
testl
pop
dec
movsl
or
leave
icebp
and
dec
fwait
roll
test
jo
das
cmpsl
std
sarl
outsb
and
add
test
cs
jae
sub
sbb
inc
sbb
addb
in
call
call
loopne
dec
xchg
pop
jnp
cmp
je
jp
add
jp
das
add
push
hlt
pop
out
sub
insl
std
adc
adc
and
inc
movhlps
xchg
inc
inc
adc
cmp
and
inc
loope
mov
pop
stos
dec
adc
add
push
inc
add
jne
sbb
sub
xchg
pop
and
nop
jb
cli
lcall
subps
sbb
mov
and
adc
fiaddl
ret
loop
testl
adc
mov
xchg
cmp
ret
mov
push
fsubrl
out
sahf
push
mov
int
cltd
leave
imulb
xchg
xor
and
pop
cwtl
push
or
mov
push
push
divl
aad
shll
in
xor
sub
push
push
add
xor
cmc
jno
mov
xchg
outsl
pop
jb
pop
in
std
test
cmpsb
loop
mov
sbb
sub
xlat
sbb
dec
aam
scas
daa
imulb
out
push
xchg
addl
xchg
data16
popf
xor
mov
pop
scas
mov
aam
fidivrs
sarl
cmp
test
das
js
push
aaa
add
lret
scas
and
rcl
or
or
lods
push
adc
and
stc
add
mov
sbb
leave
jg
lock
or
jle
imul
enter
mov
sahf
ja
aad
sub
jmp
jge
cmp
cs
fcoml
and
daa
nop
xchg
pop
adc
pop
loopne
mov
xchg
mov
mov
inc
fidivs
jbe
out
mov
sarb
call
sbb
add
mov
fdivrs
push
call
in
cltd
sub
or
or
insl
pop
jb
push
movsl
inc
mov
stc
das
jge
push
cwtl
fwait
mov
mov
cmc
negl
or
jns
mov
adc
and
imul
dec
or
pop
loope
dec
push
or
ret
lds
or
hlt
pop
xchg
pop
into
adcl
jl
sbb
outsb
add
xor
out
mov
mov
call
jecxz
adc
push
insb
inc
into
ficomps
or
add
mov
xor
test
rol
inc
push
pusha
or
cmp
shll
outsb
stc
cwtl
icebp
jns
and
lock
add
stc
dec
jp
sub
pop
sub
mov
jae
xchg
in
jg
scas
nop
test
mov
sbb
push
or
cmpsb
fs
mov
sub
es
test
inc
into
xor
je
fiaddl
ds
popa
xor
gs
mov
dec
les
fsubs
xor
dec
mov
rol
push
stc
pop
scas
stos
xchg
fneni(8087
pop
sub
jns
call
jecxz
mov
sbb
pop
out
loope
dec
jle
sbb
cmp
adc
jecxz
test
iret
pop
movsb
add
cmpsl
icebp
inc
and
mov
idivl
mov
jnp
adc
ja
ret
sbb
cld
or
push
lods
inc
shrb
push
xchg
adc
mov
dec
sub
mov
mov
xchg
push
faddl
fucomp
and
aaa
rorb
in
inc
jne
pop
adc
mov
mov
jo
enter
fwait
out
push
mov
fwait
pusha
dec
les
or
int3
call
cmp
adc
lea
fdivs
addr16
in
ret
pop
scas
sbb
jae
pusha
test
dec
mov
cmc
aad
pop
cwtl
ret
cmp
mov
cmpsb
or
add
lds
sbb
cmpl
fimull
or
and
in
mov
mov
fdiv
and
loopne
xlat
repz
xor
stos
cmp
call
lahf
pop
mov
pop
ja
decl
adc
mov
ljmp
xchg
repz
xorl
push
inc
jae
les
and
sub
dec
xchg
movsl
mov
daa
lret
and
pop
jnp
call
xchg
cld
mov
jle
add
cmp
mov
lods
les
icebp
les
lcall
aam
arpl
faddl
lea
hlt
and
and
jecxz
mov
mul
or
sub
inc
popf
adc
aad
lcall
fidivs
aam
daa
lock
fisubs
scas
xchg
pop
mov
popa
inc
fsubs
js
jb
lret
insb
push
cmpl
lret
add
push
loopne
add
mov
adc
pop
pop
inc
test
sub
xchg
mov
ljmp
cmp
sbb
idivl
push
inc
inc
ret
pop
sbb
stos
push
stos
dec
pushf
inc
pop
adc
sbb
dec
out
mov
ja
mov
pop
push
or
test
cmp
xor
inc
inc
mov
xor
mov
jnp
add
rcr
outsb
les
lock
test
adc
xor
out
nop
dec
subl
xchg
or
fcoml
adc
lahf
push
and
jne
xlat
gs
sahf
pop
pop
jle
aam
pop
sub
xlat
lret
pop
push
cmp
inc
pop
or
fisttpll
sbb
jns
adc
add
ja
dec
add
movsb
sub
repz
sbb
inc
iret
sub
repz
push
xchg
outsl
mov
jbe
bound
es
push
pop
pop
adc
mov
ficoms
cmp
lcall
mov
push
js
aad
jne
dec
in
ds
lock
mov
mov
pusha
sub
push
imul
imul
test
push
sub
xlat
pop
rcll
cld
sub
std
xchg
into
std
jmp
stc
inc
sub
pop
inc
or
dec
loop
mov
jbe
dec
roll
push
jg
clc
outsl
incb
sti
loopne
cmpsl
mov
push
data16
cld
cmp
xorl
push
stos
aam
xor
enter
add
jmp
lods
pop
push
push
or
fildl
fmull
cs
push
dec
das
cmpxchg
cmp
in
mov
popa
fsubl
jb
jb
mov
pop
dec
clc
mov
sbb
and
adc
adc
add
imul
in
mov
inc
pop
daa
enter
sar
fmuls
sbb
sbb
out
mov
mov
add
lahf
pop
mov
icebp
sub
push
testl
jae
or
hlt
and
xchg
or
inc
cmp
xor
ja
popa
xor
out
fidivrs
push
aad
inc
imul
inc
xchg
xor
mov
xor
push
push
adc
mov
insb
add
je
sub
outsb
xchg
int
xchg
test
imul
cmpsl
jne
jge
aaa
and
out
lcall
out
lcall
aas
dec
sbb
rorl
cmp
jb
lret
sub
or
mov
andb
pop
adc
hlt
adc
xor
mov
mov
popa
mov
sbb
shlb
jle
clc
mov
mov
mov
lcall
pop
push
add
pop
xor
les
scas
cmp
cmc
push
mov
lods
inc
shlb
sar
shl
sbb
out
add
cmc
divl
inc
add
scas
repz
in
lcall
das
mov
or
ja
addr16
and
pop
insl
pushf
popa
or
mov
push
clc
repz
inc
cmovp
mov
test
inc
xchg
xlat
popf
push
outsb
ret
fsubp
in
mov
icebp
mov
xchg
cs
stos
dec
aad
movsb
mov
lahf
xchg
std
loop
push
mov
xchg
aam
ret
push
xchg
out
arpl
ds
pop
push
faddl
dec
mov
and
dec
mov
or
mov
in
xchg
xchg
pop
hlt
dec
dec
fnstenv
rcrl
iret
add
dec
test
mov
sub
add
sub
mov
enter
pop
shr
movsl
cltd
ja
fs
dec
pop
jecxz
jb
leave
test
mov
pusha
movsb
xor
stc
add
inc
mov
aam
stc
rolb
out
neg
repnz
sub
mov
push
out
sbb
popa
jge
jne
sub
enter
rclb
pushf
dec
inc
dec
mov
hlt
std
shlb
xor
fldcw
mov
enter
and
imul
mov
sub
stos
adc
mov
jle
pop
test
and
out
and
pop
dec
sub
pop
lret
or
add
ds
sbb
sahf
mov
adc
pop
out
movsb
lcall
push
cli
and
or
fwait
fs
gs
or
sti
cmp
mov
leave
and
call
fsubs
cmp
or
mov
dec
stos
fdivs
stos
jp
xchg
xchg
jp
fistpl
and
adc
push
sbb
outsb
xchg
lahf
mov
lcall
js
pop
or
ss
push
call
lods
fs
ljmp
xor
mov
or
mov
mov
jne
lea
leave
or
push
int3
fidivrl
dec
loop
push
jb
sbb
mov
mov
rolb
inc
pusha
pop
cmpsb
push
sub
xchg
aad
leave
jge
mov
movb
mov
repz
stc
ljmp
dec
adc
stc
pop
sub
mov
lock
xor
nop
ret
or
jmp
mov
xor
insb
les
int3
lret
rcr
repz
jg
jmp
addr16
mov
test
push
mov
xorl
pop
scas
inc
push
mov
pop
adc
jns
fbstp
sti
xchg
push
lds
dec
sbb
mov
jmp
scas
loopne
inc
jnp
push
jo
sti
or
int3
mov
pop
sub
popf
subb
das
mov
lret
mov
mov
insb
and
dec
mov
dec
insb
jmp
repnz
mov
mov
test
pop
ret
stos
add
pop
mov
neg
das
lret
daa
into
cwtl
mov
jb
arpl
cmpsb
mov
pop
or
inc
or
iret
mov
adc
mov
push
cmp
rclb
add
std
and
jo
insb
jmp
faddl
mov
push
pusha
cltd
fidivrs
pushf
pop
adc
into
push
popf
mov
jp
xchg
fwait
xor
scas
es
push
push
lods
gs
out
jmp
mov
in
fldl
cmp
mov
pop
pop
xor
pop
or
adc
popa
lret
ret
dec
and
lret
scas
mov
bnd
into
cmpsl
and
dec
fmuls
dec
adc
or
pop
aas
shll
cmp
test
lret
rorb
sub
push
out
inc
mov
cmp
jb
xchg
test
repnz
mov
adc
sub
cmp
adc
pop
push
cmc
add
dec
push
test
shlb
sbb
fwait
adc
int
dec
imul
jge
and
arpl
mov
addr16
outsl
mov
stc
das
repnz
stos
dec
adc
jecxz
hlt
bound
lea
or
or
add
aaa
fstpl
mov
insl
rcl
mov
leave
das
pop
mul
sbb
mov
into
push
push
int3
dec
sbb
cld
out
movsb
rorb
sub
jl
inc
daa
fwait
fs
test
out
mov
dec
sub
stos
sub
loop
pop
jmp
scas
ds
xchg
mov
popa
mov
pop
xor
notb
sub
push
loop
rcll
roll
mov
lds
push
adc
jg
mov
and
subb
sbb
and
adcl
dec
xchg
add
out
les
test
int3
cmpsb
mov
pop
pop
in
test
xor
lahf
mulb
test
dec
cmpl
xorb
lock
les
mov
movsb
fwait
mov
fwait
xchg
repnz
insb
sbb
js
subb
xchg
mov
and
addr16
fnsave
dec
add
pop
push
adc
pushf
filds
fldcw
mov
je
addb
cld
mov
sub
aam
jle
mov
mov
inc
cmp
jg
lods
insl
outsb
xchg
mov
inc
lret
lods
add
and
lahf
icebp
mov
sub
sbb
xchg
pop
cmp
gs
aam
xor
outsl
test
adc
lahf
in
mov
popa
icebp
data16
orl
cs
ret
inc
adc
pop
gs
in
sub
and
in
dec
cmc
shrb
cwtl
popa
xor
jecxz
bound
mov
hlt
pop
mov
movups
dec
out
inc
add
dec
jns
jbe
push
mov
aas
and
rorb
fstpt
add
arpl
add
jae
cs
mov
test
pop
or
mov
or
test
mov
lret
sbb
or
pusha
out
subl
mov
or
xor
pop
daa
inc
inc
pop
cmp
xlat
bound
and
inc
sub
xlat
pop
push
mov
repnz
or
push
adc
int3
pop
ret
mov
notl
push
iret
cmp
jl
push
pop
xchg
mov
sbb
and
jg
es
push
inc
add
in
dec
mov
stos
fs
xchg
inc
out
adc
adc
mov
aam
gs
inc
push
mov
xor
lock
int3
popf
sub
mov
ret
push
dec
dec
or
pinsrw
clc
scas
pop
arpl
loope
test
mov
ja
dec
cmp
sub
push
sub
fsubl
sub
push
xchg
push
popa
xchg
jns
repz
jo
mov
fs
inc
test
mov
je
leave
cmpsl
orl
pop
adc
jmp
adc
jmp
idivl
adc
pop
addr16
pop
mov
les
or
ret
lock
mov
xchg
or
je
mov
insb
addr16
inc
lods
in
push
sbb
mov
test
push
int
mov
sub
lret
int3
or
divl
aad
lds
dec
hlt
jp
jns
loopne
lahf
cli
sub
lahf
lret
push
mov
sub
mov
lret
jg
mov
mov
bound
scas
mov
sahf
or
sahf
sub
cmpl
sub
push
sbb
into
xor
ljmp
and
je
scas
pop
mov
dec
mov
outsb
pop
or
orl
jge
into
mov
sub
shrb
mov
xor
cmp
rcrb
sub
pop
hlt
inc
xchg
jb
mov
or
inc
push
adc
or
cmp
sub
lret
in
addl
or
mov
mov
sub
push
pusha
pop
add
int
push
shrb
jl
mov
mov
xchg
lahf
ret
jge
pusha
mov
inc
int3
inc
cmpsl
enter
dec
add
lret
xor
and
outsl
lea
or
mov
jmp
std
pop
push
ret
insb
and
test
xor
je
xchg
jecxz
mov
mov
jecxz
mov
sub
ja
mov
ret
sub
mov
stc
iret
jo
dec
cmp
icebp
lret
fcomps
pop
or
jno
add
push
fcomip
fisubl
sbb
mov
das
mov
pop
mov
cmpsl
loopne
jo
xor
xchg
push
mov
sub
pop
push
lock
aaa
cmp
cwtl
sub
mov
mov
xchg
inc
aam
out
mov
push
mov
jle
push
test
fistpll
sbb
push
mov
das
cmp
push
dec
outsl
cmpsb
insl
mov
dec
scas
inc
aas
adc
mov
mov
cmp
mov
mov
dec
test
mov
and
jnp
inc
inc
and
fwait
vpmaxub
inc
or
cld
repz
xor
cmpl
lcall
inc
call
daa
jg
int
in
mov
mov
mov
popl
dec
call
insb
and
push
arpl
out
ret
mov
pop
pusha
jl
int3
lods
mov
iret
jne
xchg
jbe
in
pushf
dec
mov
lock
xlat
push
leave
lcall
push
stos
imul
pop
aaa
adc
leave
push
ss
pop
jmp
push
pop
sub
aam
dec
aas
cs
mov
aam
mov
or
or
out
movsl
jmp
out
mov
dec
xchg
xchg
ja
cmpsb
out
xor
xor
into
hlt
push
lods
sbb
outsb
inc
test
mov
call
push
mov
mov
pop
repz
inc
cmp
hlt
pop
cld
ja
xor
xor
add
in
or
pop
mov
fmul
jnp
add
xor
sahf
imul
rcll
arpl
inc
xchg
shr
sti
hlt
sub
xor
insl
jg
adc
push
cmp
and
xor
cwtl
sahf
sub
fadds
fldl
call
xor
mov
xchg
adc
stos
cmp
fisttps
test
jmp
jge
jae
pmulhw
and
xchg
xor
add
roll
ret
sbb
out
outsb
push
psraw
or
pushf
add
iret
sbb
xor
dec
and
mov
cltd
mov
shlb
int
bsf
inc
jb
test
sub
jbe
cmp
aad
cs
lahf
iret
fmuls
and
testl
push
addr16
mov
cmp
pop
popa
lea
pop
or
sub
dec
mov
push
roll
add
mov
pop
xchg
movsl
xchg
fst
xchg
rclb
push
push
ds
dec
push
fwait
xchg
add
bnd
and
pop
sbb
add
xchg
inc
cmp
lahf
lods
jp
movsl
lea
sti
and
cwtl
adc
mov
sbb
dec
fwait
push
mov
lret
pop
jbe
xchg
aad
idivb
push
inc
out
or
push
sbb
sbb
adc
cmpsl
out
sub
or
outsb
adc
push
jno
sub
xor
out
rol
jmp
scas
sbb
nop
jmp
das
adc
jle
aas
ss
mov
sbb
jae
and
adcl
pop
out
sahf
out
sbb
adc
add
les
xchg
xchg
pop
ret
shll
dec
popa
iret
into
movsl
icebp
or
cs
pop
jmp
mov
lea
decb
push
fimull
les
arpl
aaa
test
ja
or
insl
jns
add
ja
adc
out
push
les
jno
xor
sahf
mov
pop
mov
pop
cmp
data16
pop
in
cltd
lods
das
xor
inc
sbb
add
push
pop
dec
inc
mov
dec
gs
mov
lahf
jno
movsb
lock
in
or
sarb
pop
add
inc
sbb
xor
pop
popf
mov
add
push
ret
pop
leave
nop
cmp
push
paddd
mov
addl
movsl
mov
fsubrp
sbbl
push
les
push
inc
adc
push
dec
push
lret
outsl
pop
cltd
sbb
call
andl
sti
mov
jg
scas
xchg
inc
jge
xor
adc
or
insl
clc
jge
mov
mov
enter
int
lea
ljmpw
pop
push
and
pop
and
arpl
int
inc
fldt
push
gs
xor
jmp
cmp
je
cmp
xchg
popf
xor
jae
es
xorb
mov
jns
fwait
push
mov
xchg
and
aas
lcall
fadds
js
lock
imul
aam
dec
testl
jnp
sti
popf
test
bnd
push
lods
jae
dec
add
xor
ret
leave
xlat
pusha
pop
sets
stos
sbb
push
mov
cld
cmp
outsb
popf
mov
stos
stc
or
mov
or
pop
or
jo
in
mov
push
mov
scas
in
leave
mov
adc
icebp
or
sbb
jne
and
inc
and
out
xor
dec
sti
mov
mov
stc
xchg
mov
bound
adc
xor
loopne
jge
adc
xor
movsl
daa
or
add
outsl
mov
xor
mov
jle
add
mov
xchg
cmpsl
out
pop
in
loope
jl
loop
mov
dec
xor
sahf
push
inc
xor
sub
outsl
xor
pop
loopne
inc
inc
lock
sbb
cmp
jge
imul
stos
negl
mov
fiaddl
push
lret
mov
jo
sbb
cmp
cmp
js
xchg
jmp
stos
lds
and
xor
lret
mov
dec
and
jge
insl
aad
mov
pop
rcrl
shll
es
push
xor
lea
dec
ret
and
cli
daa
inc
subps
adc
shr
imul
jne
ljmp
fidivl
cmc
mov
repz
mov
cmc
test
mov
incl
popl
inc
push
push
into
pop
fcoms
loope
sti
cmp
inc
jae
or
aaa
outsb
stos
aam
in
inc
aas
testb
xchg
pop
sbb
out
xchg
clc
sub
repz
in
cs
out
xor
imul
cmp
aad
pop
pop
pop
ret
mov
xchg
fcompl
cmp
bound
pop
dec
stos
adc
int
jge
dec
fisubl
sub
cmp
adc
inc
xor
cmp
stos
inc
jae
pusha
rolb
daa
jae
xchg
clc
nop
push
sbb
lds
jno
push
in
mov
test
jle
sub
or
sarb
psubusw
add
pop
lahf
fnstcw
mov
outsb
jbe
aas
stc
mov
cmp
fiadds
inc
lret
loope
jle
shll
mov
sahf
fcoms
in
fisubrs
fwait
jp
pushf
mov
mov
cmp
in
sub
and
fidivl
ss
xor
xchg
bound
cltd
or
loop
std
jp
jle
test
movsl
ret
les
in
outsl
aaa
mov
ss
iret
ret
lds
dec
xchg
jl
xchg
idiv
xor
das
roll
and
cmp
daa
push
shr
jnp
daa
mov
hlt
jbe
insl
push
xchg
jl
or
les
pop
dec
adc
cltd
mov
loopne
mov
dec
outsl
dec
xor
mov
jle
popf
lcall
test
jle
mov
test
stc
aad
jnp
jae
enter
pusha
dec
es
push
pushf
jl
add
pop
rolb
xchg
jmp
jnp
push
dec
loope
mov
mov
cltd
jmp
aas
fisttpl
fstpl
xor
add
mov
imul
cmp
cmp
leave
sub
and
hlt
push
xor
in
pop
inc
in
push
or
adc
loope
adc
icebp
dec
mov
mov
mull
dec
push
icebp
xorl
movsl
pop
ds
aad
repz
fdivl
adc
mov
fcoml
jne
adc
js
pop
push
cs
adc
add
loopne
push
pop
mov
and
leave
es
or
xor
mov
lock
into
nop
add
jnp
in
mov
shl
arpl
jae
outsl
shlb
loope
xor
and
imul
pop
cmpsl
in
rorl
fcompl
mov
mov
scas
test
push
add
mov
sub
adc
push
imul
lret
xor
in
mov
fstpt
pop
cltd
cld
lret
test
ja
test
clc
pushf
pop
xchg
push
bound
xchg
pushf
lea
out
xchg
hlt
test
mov
pop
rcl
fisttpl
jg
sbb
je
pop
iret
dec
and
addr16
mov
mov
mov
icebp
stc
fisttps
mov
cmp
pop
push
daa
jge
xchg
xlat
sti
ror
mov
test
mov
cmpsb
mov
addl
jge
dec
ficompl
in
push
push
push
rolb
movsl
push
mov
roll
mov
or
test
mov
xchg
push
sbb
add
adc
in
push
out
pop
mov
ret
loope
mull
jae
jae
stos
pop
clc
dec
cmp
std
lds
cltd
pop
dec
cmp
movsb
ret
outsl
or
sahf
adc
fsubrp
push
xorl
jo,pt
movsl
or
call
sahf
popa
test
dec
fisttps
sub
jp
outsl
dec
arpl
pop
dec
enter
push
push
leave
adc
mov
test
push
pop
mov
pop
outsb
cmpsb
ret
in
outsl
xchg
js
or
loope
cltd
fnstcw
lahf
sbb
cmpsl
mov
push
out
cltd
pop
sub
rcr
leave
movsl
faddl
int3
mov
pop
sub
fdivrs
jecxz
pop
add
xchg
xchg
xchg
inc
imul
ss
jns
jl
jno
add
fists
out
cld
in
daa
hlt
jmp
fwait
out
adc
gs
sub
flds
cld
push
mov
imul
cmpsb
out
pop
ds
repz
inc
lcall
ljmp
cmc
int
movsl
ret
out
bound
loopne
jns
aaa
xchg
mov
and
sbb
cmpsl
jecxz
lds
adc
test
scas
dec
mov
mov
mov
iret
jnp
ret
push
mov
jo
mov
jecxz
or
loopne
inc
lret
aad
mov
xchg
cs
inc
xor
fildl
ja
sbb
push
aad
std
loop
sub
popa
sbb
jbe
dec
fsubrl
cmc
enter
xchg
pop
jecxz
sbb
mov
repnz
fdivs
push
xchg
imul
mov
std
mov
adcb
push
mov
mov
xor
popa
aas
sbb
lcall
in
push
shlb
inc
dec
mov
dec
jmp
stos
mov
dec
ret
jl
and
inc
lods
in
sub
addl
outsl
xchg
insl
mov
xorl
mov
rorb
imul
fwait
not
and
or
or
mov
xchg
dec
int
lcall
iret
cmpsl
xor
fisubrl
dec
enter
popf
sub
xchg
sub
push
and
test
lcall
push
mov
daa
mov
adc
roll
es
aad
inc
cmp
mov
cmc
cld
out
fs
add
fmul
or
mov
movsb
jbe
jae
hlt
push
lret
ret
in
shlb
lods
in
pushf
rol
sbb
and
xchg
sub
int3
sbb
jp
inc
dec
push
sbb
push
mov
pop
push
mov
or
stos
and
outsb
mov
imul
or
or
mov
das
pop
movl
jmp
fldl
lahf
xchg
pop
ffreep
inc
es
dec
popf
fwait
inc
sub
lea
xlat
insl
mull
and
in
notl
es
or
jecxz
insl
push
movsl
mov
stos
pop
xor
mov
inc
out
cmp
rclb
inc
scas
daa
aas
sub
sub
lds
mov
test
test
adc
shr
add
scas
mov
jmp
jl
ljmp
scas
jmp
bound
bound
aam
add
dec
cmp
sub
push
mov
push
sbb
cmp
jge
in
or
jecxz
out
js
xchg
daa
mov
cmc
push
adc
xlat
dec
push
mov
pop
stc
test
mov
pop
mov
scas
cmpsb
out
inc
mov
rorb
scas
mov
push
stos
add
lds
jle
mov
push
inc
enter
cltd
dec
fistpl
adc
jecxz
in
jp
xor
sbbl
daa
fdivrl
inc
lahf
into
loop
mov
daa
xsha1
cmpsb
mov
xchg
xor
dec
cli
mov
jbe
push
xor
inc
mov
pop
xor
dec
push
cmpsl
mov
xor
imul
push
test
adc
imul
xchg
jae
insl
or
ffree
pop
xchg
je
aam
or
push
in
push
in
call
jb
adc
inc
dec
dec
cmc
out
sti
outsl
xchg
sbb
cmp
addr16
pop
ljmp
adc
pop
xor
inc
add
or
sbb
das
sti
ljmp
jno
cmc
lahf
stos
sbb
sarb
mov
aad
cmpsb
stos
dec
and
pop
pop
cmp
inc
shll
test
xor
stos
sub
cli
mov
loop
pushf
sub
xor
sbb
rorl
insb
in
call
sahf
mov
fwait
push
test
fmuls
pop
pop
stos
cmp
rorb
push
inc
xchg
clc
pop
cwtl
xor
xorl
sub
push
je
ret
xchg
jb
pusha
adc
or
mov
stc
dec
xorb
pop
fistl
lret
or
dec
inc
stc
rclb
or
sub
cmp
mov
ljmp
mov
cmp
xor
mov
test
sbb
inc
rol
lock
inc
sti
lds
push
out
in
and
addr16
push
and
adc
aam
cmp
push
out
sbb
push
pop
push
cmp
mov
push
fwait
aas
mov
and
pop
xchg
cmc
cmp
and
cwtl
stos
in
mov
mov
pop
aaa
cmp
mov
push
ja
rcr
ret
and
push
xorb
int
sub
dec
lods
cmp
fimull
pop
add
lea
lahf
mov
movsl
in
cmp
in
jecxz
and
cmp
cmp
jo
adc
push
xor
movlps
subl
sarb
mov
stos
inc
sub
inc
ja
pop
mov
test
daa
nop
cwtl
xchg
jo
jo
mov
sbb
xchg
insb
lret
cwtl
or
inc
leave
aas
addb
popa
bound
loope,pt
lcall
xor
add
ret
loop
dec
mov
sub
popa
pop
pop
cmp
pop
or
cli
jno
jne
push
dec
and
xor
or
xchg
insb
push
stos
mov
pop
xor
sbb
mov
repnz
jne
xor
and
mov
fcmovnu
or
ljmp
push
aad
and
pop
mov
cmp
lahf
xchg
xchg
mov
ljmp
mov
gs
mov
jle
mov
sub
popf
ja
les
lcall
sbb
xor
cmp
cmp
sbb
ret
and
imul
lock
sub
sahf
xchg
in
inc
popf
fsubrl
mov
daa
fimull
jns
push
mov
cmp
pop
fstps
or
jmp
mov
in
or
mov
es
pop
repnz
jl
push
movsl
sbb
pop
dec
ficoml
mov
mov
mov
in
or
mov
pushf
pop
mov
mov
in
inc
incb
adc
sbb
shll
cmpl
popa
jecxz
loopne
pop
xor
shrb
sub
ja
mov
inc
mov
and
or
imul
pop
cmpsl
push
push
in
orb
int3
adc
inc
mov
stos
sbb
imul
push
xchg
icebp
mov
mov
sbb
and
add
sub
aam
inc
mov
ds
jb
dec
jecxz
mov
test
insb
add
ret
ja
mov
aas
cmp
pop
lods
gs
or
mov
stos
xlat
xor
mov
cmp
cmpsb
movsb
inc
cmp
call
testb
pop
mov
fsts
pushl
bound
fists
repz
rcrl
xchg
mov
imul
and
push
subb
cs
fwait
in
xor
punpcklwd
jns
int3
jne
push
orl
push
jae
in
xchg
pusha
cltd
jmp
jbe
jno
xchg
mov
or
das
das
add
ds
jns
xchg
or
cmpb
icebp
dec
repz
mov
add
mov
pop
jnp
imul
fistl
push
movb
std
xorb
outsb
mov
mov
sbbb
or
push
add
xchg
jb
and
addb
pop
or
int3
sbb
push
add
clc
push
rorl
add
out
mov
nop
dec
mov
jecxz
mov
xchg
cld
mov
mov
stc
push
outsl
xor
enter
cld
lret
inc
dec
repnz
jns
fstl
clc
xchg
scas
add
fs
popf
inc
mov
adc
add
ror
fadd
data16
outsb
pop
mov
xor
ss
leave
adc
cmp
add
insb
add
adc
push
call
pop
inc
add
cmpsl
xchg
mov
sbb
jl
rorb
dec
daa
outsl
cmc
in
dec
jge
pop
cmc
mov
clc
sub
arpl
push
xchg
call
in
mov
jbe
mov
clc
outsl
push
fstl
mov
pop
lahf
loop
int
lds
cmc
jae
push
rcrl
xor
rorb
and
lahf
jl
arpl
mov
popa
cmp
and
in
pop
les
ret
and
xchg
xor
sub
call
push
or
sbb
jns
dec
ret
dec
jne
add
pop
or
xchg
repnz
bound
es
into
fldt
cs
leave
and
jmp
dec
gs
mov
cs
sub
or
mov
xchg
push
sub
mov
test
mov
jg
test
test
push
mov
test
adc
mov
push
fs
sub
xchg
jb
cmp
jg
add
fcmovnbe
aaa
insb
pop
push
or
mov
mov
push
sbb
mov
into
faddl
pop
cmp
sbb
fwait
xor
push
in
ss
add
jns
cltd
add
aaa
mov
jnp
mov
xchg
xlat
lock
je
sbb
mov
test
adc
lret
icebp
xor
xor
int3
shlb
pusha
and
mov
aas
jmp
fidivs
js
sub
stc
cmp
rclb
out
iret
scas
sti
int
add
and
stc
add
add
in
out
rorl
sbb
add
fs
insl
pushfw
add
cmp
push
icebp
xorb
and
add
cwtl
jns
inc
cmp
hlt
js
cmp
mov
je
aam
int
lds
xor
pop
lods
cltd
mov
mov
cmp
imul
daa
and
rolb
push
sbb
pop
cmp
shll
pop
adc
je
dec
loope
dec
mov
out
pop
push
or
inc
pop
and
bound
enter
shlb
xlat
sub
incl
pop
fs
or
pop
mov
daa
sub
jo
ret
lds
xchg
ret
iret
jmp
sbb
push
ret
pop
into
stc
pop
cmp
mov
ljmp
jne
cmp
mov
ljmp
inc
ret
jo
sbbb
xrelease
scas
push
pop
pop
inc
mov
inc
into
hlt
mov
stos
cmpsb
stc
lret
xlat
fdiv
pop
and
mov
cld
clc
scas
aad
xorb
into
int3
cwtl
cld
pop
mov
jge
mov
test
push
cli
lock
ret
out
arpl
fstpl
add
stc
int3
rclb
mov
rorl
mov
pusha
mov
add
mov
dec
pop
sub
imul
std
in
dec
addr16
mulb
jl
push
or
fs
add
lret
rorl
inc
mov
mov
cli
daa
xor
push
sti
test
jno
push
lock
testb
xor
pop
popa
insl
xchg
inc
jmp
sub
ret
call
iret
sbb
imul
out
xor
testl
and
es
int3
gs
mov
or
xor
jne,pn
and
jae
xor
insl
rcl
or
push
gs
sahf
popa
out
emms
out
or
jne
int3
push
push
mov
xchg
int3
mov
and
push
ljmp
push
xchg
ror
clc
mov
test
xor
pop
mov
cmp
clc
push
mov
xchg
dec
mov
out
pop
test
sbb
cmpsb
sbb
mov
movsl
xor
xlat
call
rclb
jae
push
fildl
div
sbb
in
add
out
mov
push
adc
push
mov
inc
sti
sbb
push
lods
cltd
dec
subl
pop
add
mov
xchg
loopne
pop
hlt
push
pop
hlt
pusha
push
pop
addl
adc
imul
jbe
add
fcompl
sub
jmp
cmp
or
jae
ja
push
cmp
test
mov
imul
adc
adc
pop
sub
lods
cs
fdivr
and
add
sub
es
dec
pop
lock
outsb
jo
add
push
lret
ficompl
sbb
mov
adc
hlt
insl
aad
inc
pop
or
jbe
xor
mov
dec
imul
loopne
sbb
adc
jae
sub
cmp
pop
xchg
xchg
cli
lcall
fs
mov
scas
pop
inc
sbb
xor
mov
mov
pop
cs
inc
shl
js
and
xor
insb
xor
inc
movsl
add
pop
jecxz
aas
icebp
ja
add
or
popa
add
cltd
xchg
jno
cmp
adc
and
push
and
push
sub
sub
movsl
lret
pop
sarl
dec
sub
cwtl
add
add
jae
pusha
xor
outsb
lahf
stos
push
xchg
inc
dec
lds
or
adc
mov
loop
sub
repnz
fstpl
or
add
xchg
movsl
dec
add
ljmp
bnd
mov
rcrl
cmp
jmp
mov
daa
repnz
daa
shr
xchg
cmpsb
cmp
push
xor
div
pop
xchg
aam
add
ja
mov
cmc
or
loope
push
imul
mov
arpl
xchg
mov
jo
daa
pop
into
fucomp
negl
xor
pusha
cmc
dec
in
cmp
mov
sti
movsb
in
push
or
pop
into
cld
aaa
faddp
jp
mov
or
flds
mov
rol
imul
pop
fdivr
lret
andl
jecxz
repnz
repz
cli
jge
arpl
gs
or
nop
imul
xor
pop
push
imul
jecxz
rorb
cmp
cwtl
jae
adc
aaa
jbe
shrb
or
pop
aaa
loop
xchg
sub
mov
push
adc
xchg
pop
cmp
arpl
xchg
lea
xor
or
outsl
dec
cmp
cmp
aam
jmp
sti
xchg
sub
hlt
lea
jae
rolb
mov
sbb
inc
pop
lds
push
pop
mov
loopne
dec
push
rcr
test
mov
ret
stos
cmpsl
popa
shrl
jns
popf
in
xlat
push
pop
in
or
gs
rclb
shll
fcompl
sub
mov
xor
push
mov
lea
jo
xor
aaa
and
fidivrs
mov
out
jmp
outsb
cmp
enter
jl
cmp
jmp
and
jmp
stos
add
lods
dec
dec
push
repz
mov
sub
rclb
sbb
imul
scas
xchg
stos
push
and
pop
mov
fwait
addr16
jb
loop
xor
push
jg
leave
out
pextrw
nop
or
push
inc
icebp
or
inc
and
mov
and
stc
mov
jo
push
ja
push
gs
sti
pop
loope
sbb
fidivl
out
repz
inc
cmp
sbb
cld
les
inc
mov
dec
mov
add
cmp
in
inc
adc
fwait
lret
sti
cmpsl
js
enter
xor
fdivs
pop
push
cmp
sahf
fs
mov
repz
mov
or
mov
pop
divps
popf
out
js
in
mov
or
add
lcall
push
jne
xchg
inc
xor
inc
je
pusha
int3
push
jns
push
push
or
shr
or
jne
frstor
adc
xlat
or
inc
mov
inc
push
adc
clc
test
movsl
orb
push
adc
inc
fwait
mov
outsl
cmpb
xchg
icebp
xor
sbb
stos
push
mulb
mov
jle
in
adc
pop
jp
stos
or
lahf
pop
fmuls
movsb
notb
mov
pop
mov
aam
mov
inc
mov
cmpl
sbb
lahf
lahf
rorb
xor
or
mov
sbb
fildl
int
jno
dec
aas
lea
sbb
pop
ficoml
xchg
xchg
or
in
jge
push
shll
mov
sbb
gs
not
cltd
ret
mov
mov
xchg
sub
pop
mov
jo
popf
imul
dec
iret
cmp
aad
lods
scas
add
or
xchg
xchg
sarl
mov
stc
inc
sbb
rorl
or
insb
pop
jnp
mov
adc
ljmp
cmp
lret
shr
lret
and
add
negl
add
push
hlt
sub
rorl
sarl
fbld
loopne
dec
pop
mov
sbb
les
in
sti
jae
fcmovnu
movsb
cmp
jno
movsb
mov
cmc
das
fcoml
pop
into
imul
pop
dec
fdivrl
cmpsl
mov
ds
mov
jns
jecxz,pt
test
dec
lret
imul
mov
jno
popf
pop
mov
cmpsb
je
outsb
sub
pop
add
fdivl
cmp
mov
push
xor
lods
dec
testl
lods
add
pushf
inc
inc
nop
push
aaa
or
adc
dec
inc
mov
push
cmp
ljmp
inc
lock
into
or
inc
inc
inc
push
jbe
inc
in
sub
push
inc
push
inc
arpl
repnz
in
popl
inc
cwtl
testb
lods
push
mov
test
mov
mov
mov
mul
xor
add
cwtl
add
adc
das
stos
sbb
bound
push
mov
sub
sti
push
pop
pop
aaa
xchg
inc
ja
xlat
or
fsubr
loop
adc
popa
inc
into
cs
iret
push
aam
add
push
add
outsl
es
inc
push
push
jns
fs
jae
push
std
mov
inc
cmp
mov
push
jg
imul
faddl
push
fdiv
fstpt
jecxz
popa
pop
shrb
ret
stos
js
mov
pop
fsubr
and
cltd
call
push
adc
and
xchg
mov
sti
and
daa
and
cmc
das
fimull
sbb
pop
and
lahf
fimuls
push
inc
and
rcrb
xchg
js
push
push
repnz
mov
jge
or
dec
das
cs
adc
stc
js
mov
or
jae
int
nop
fstl
mov
fadd
pop
dec
push
sbb
add
ficoms
addr16
loope
xchg
jns
jns
inc
mov
ret
test
repnz
shrb
mov
mov
inc
mov
mov
jno
pop
jl
push
cmpsb
imul
addr16
sub
test
clc
mov
add
sub
fstpt
pop
mov
add
unpckhps
xor
push
stc
or
loope
cltd
pushf
cmp
jnp
lcall
bound
mov
jp
rclb
mov
es
add
in
jns
fcoml
add
mov
jns
loope
adc
xlat
and
mov
mov
cs
fsubrs
std
mov
scas
ja
xchg
and
mov
stc
jl
xchg
sbb
dec
jle
scas
insl
pop
xor
sbb
imull
jo
cmc
jp
sbb
outsl
aas
je
clc
mov
mov
cld
mov
xchg
xor
sahf
loopw
out
cltd
dec
add
dec
sbb
insb
sbb
pop
rcl
fcoms
xor
mov
adc
xchg
mov
mov
jl
bound
inc
movsb
movsl
insb
daa
imul
or
xchg
mov
add
dec
add
fs
stos
xchg
les
scas
stos
jne
pushf
cmpsl
adc
pop
inc
insl
test
outsb
fisubl
or
sbb
xchg
jg
xor
das
push
push
mov
pop
scas
adc
pop
stc
push
mov
or
into
aam
xchg
mov
add
mov
fnstenv
jmp
xor
mov
add
jo,pt
fwait
jp
fcmovnb
mov
sbb
inc
sahf
decl
pop
aas
data16
aam
movsb
lods
pop
jo
dec
addr16
idiv
mov
jmp
dec
fldz
fs
dec
sub
mov
mov
cmp
sbb
cmp
jge
mov
adc
fsubp
jae
mov
clc
movsl
xchg
clc
mov
dec
fstpl
insb
sub
dec
dec
xchg
or
xchg
out
sbb
leave
push
jmp
subb
jl
lahf
mov
ds
fadds
inc
into
loop
mov
cs
sbb
jmp
jmp
andb
sub
aam
mov
out
sti
xor
or
movsl
xchg
dec
pop
repz
mov
loope
xchg
pop
lods
push
aaa
test
popf
cmp
push
nop
loop
or
xor
xlat
xchg
lods
jno
sbb
jg
loope
push
pop
scas
sahf
mov
outsl
sub
leave
ss
into
lods
mov
adc
test
xchg
jo
mov
movsb
fimuls
inc
pushf
xchg
adc
cmp
xchg
fs
xor
xchg
dec
inc
out
jge
stc
mov
sbb
int
les
pop
or
xor
cmpsl
rcl
scas
push
stos
add
int
jns
ret
mov
sti
movb
arpl
ds
mov
retw
cmp
xchg
out
lret
mov
xchg
ficomps
dec
cs
stc
sub
loope
fwait
adc
out
ljmp
jae
pop
mov
mov
push
ret
movsl
loop
jl
int
ret
add
cld
and
mov
int3
jne
in
cmp
push
or
adc
mov
add
in
cmc
mov
hlt
setge
frstor
sub
pop
and
scas
test
sub
gs
sbb
adc
loopne
imull
mov
pop
lcall
or
xor
pop
push
repz
les
jle
negl
xchg
cmp
clc
insb
add
add
xchg
push
jnp
or
lcall
ret
mov
jb
push
sub
mov
mov
adc
outsb
adc
mov
sbb
sbb
into
xor
mov
repz
adc
shlb
adcb
gs
sbb
or
data16
pop
sarb
jno
mov
je
jl
shl
xchg
mov
call
pop
sub
imull
mov
push
stos
mov
jne
sub
loop
scas
cmpsb
sbb
add
dec
sub
movsl
mov
mov
rorl
push
mov
xor
xor
inc
jle
out
push
lods
sbb
jbe
adc
pop
jmp
fcomip
aam
ss
add
inc
push
xchg
out
inc
cltd
xchg
mov
mov
out
decl
fistpll
mov
jge
popl
call
dec
mov
pop
sahf
jp
sbb
scas
adc
js
hlt
cwtl
cli
insb
dec
in
cmp
push
cmpb
mov
pop
mov
sbb
sahf
lret
fsubs
mov
ja
xor
pusha
aaa
imul
out
cmp
sti
enter
gs
inc
clc
and
mov
in
dec
sarl
cmp
xor
cmp
dec
push
xchg
pop
int3
pusha
faddl
scas
into
imul
or
xlat
mov
ds
xchg
call
sub
jecxz
icebp
aad
push
xor
push
cmp
std
fsubp
aaa
mov
pop
sbb
pop
dec
dec
outsb
cwtl
movsl
lahf
or
or
xor
xor
loope
dec
xor
outsb
mov
jns
jg
cmp
pop
lret
xchg
pop
and
movsl
in
lods
adc
jae
jnp
jnp
mov
aaa
in
aas
inc
mov
pop
mov
aaa
ffreep
and
insl
lcall
pop
push
and
int3
negb
mov
inc
fcompl
mov
leave
lds
xchg
mov
scas
xlat
sub
call
fstpl
mov
enter
pop
sahf
pop
jle
mov
push
sub
test
adc
sbb
jp
cmp
mov
iret
jle
cmp
shl
sar
fsubr
loop
xchg
and
movsl
xchg
or
lods
rcr
fsubr
adc
jbe
ja
dec
gs
jbe
mov
jle
adc
movsl
cmp
movsb
sub
sub
push
lock
add
sbb
wrmsr
cmp
vpaddb
add
fs
fildl
xchg
lahf
filds
into
mov
add
inc
cmp
lcall
dec
jae
jmp
into
and
push
rcll
jl
ret
inc
mov
mov
jb
scas
sub
loopne
jo
jno
fwait
in
sub
in
and
inc
add
pop
stos
fnsave
add
mov
add
adc
add
sahf
push
sub
fsubr
fldenv
jmp
cmp
xor
push
xchg
mov
std
mov
mov
sti
into
ss
xlat
jl
les
mov
and
push
lcall
jg
test
jl
xlat
mov
xchg
mov
xlat
outsb
aas
lea
mov
rorb
sbb
mov
inc
or
inc
call
sub
jle
fwait
mov
mov
mov
and
cli
or
int
call
and
xchg
or
aam
sbb
mov
jbe
scas
pop
push
cmp
lcall
push
push
bound
mov
pop
movsl
cmp
aam
mov
pop
aaa
and
or
xchg
fdivrl
sti
push
xchg
xor
inc
mov
ds
adc
arpl
gs
iret
add
clc
pop
pusha
add
lock
into
mov
xor
std
xor
aad
or
add
test
rcrb
sub
icebp
outsb
sub
lds
sub
fs
push
lret
cmc
fwait
fwait
mov
out
lret
in
jns
mov
push
fwait
adc
adc
push
adc
daa
out
xchg
testb
rorb
inc
adc
outsl
insb
dec
bound
movsl
sbb
sub
jbe
mov
stos
push
stc
imul
mov
push
icebp
sbb
pop
jno,pn
pop
or
add
iret
pop
pop
imul
fdivrl
fs
inc
stos
insl
ljmp
bound
ficomps
push
in
push
push
mov
add
pop
cmpsl
shll
xlat
popa
cmp
push
xchg
nop
xchg
fs
cmpsl
fwait
sub
sub
data16
test
andb
stc
inc
ret
inc
imul
ret
mov
es
mov
push
data16
add
mov
outsl
out
popf
add
add
mov
lods
psrld
sbb
and
out
bound
test
popf
pop
fstl
pop
lds
fistpl
imul
repz
ss
pusha
dec
stos
rorb
rcll
std
mov
imul
or
push
inc
loopne
mov
shl
iret
lock
xor
or
and
mov
stos
pop
or
mov
mov
outsl
pop
adc
inc
or
inc
jmp
add
sub
mov
cmp
sub
pusha
and
lret
ret
movsb
or
and
and
and
xor
push
dec
cmpsb
pop
pop
les
lret
or
jne
dec
jp
stc
adc
push
add
movsb
ja
xor
jbe
add
mov
xchg
and
cmpsl
int
pop
xchg
add
push
cli
imul
cwtl
pop
insb
xor
jb
and
jge
cli
call
fcomps
pusha
mov
sub
fsts
mov
mov
mov
imul
jns
add
push
mov
mov
dec
jecxz
adc
push
jg
ljmp
mov
imul
sbb
dec
out
imul
aam
insl
ja
shlb
push
arpl
mov
test
and
or
clc
inc
outsl
and
mov
pop
icebp
dec
call
cmp
arpl
or
mov
inc
mov
sbb
jmp
inc
aad
loopne
lret
pop
fst
outsl
leave
addr16
fistpll
push
push
pop
mov
push
pop
xchg
mov
push
iret
mov
aaa
cmpsb
mov
push
sti
shrl
scas
sbb
aaa
mov
nop
mov
push
sti
xchg
popa
inc
cmova
lret
ret
adc
out
nop
push
mov
dec
add
push
cmp
sub
jge
cmp
push
outsl
xchg
loopne
in
mov
aas
scas
aam
mulb
imul
mov
sarb
gs
scas
aam
cmp
lea
clc
jnp
push
xlat
push
sub
stos
mov
add
mov
pushf
out
leave
xchg
pop
add
pusha
andb
and
xchg
pop
inc
cltd
aaa
sub
add
scas
push
ja
arpl
into
mov
jmp
js
mov
std
mov
pop
xor
jl
jg
in
daa
push
sub
jno
cs
jmp
mov
pushf
add
push
jo
or
adc
sahf
orb
sub
cmp
loope
jbe
sub
mov
push
mov
nop
pop
inc
fistpl
sbb
in
dec
or
jae
negb
gs
adc
mov
or
sti
cmc
mov
fsqrt
in
dec
mov
test
mov
incb
std
dec
lcall
xor
cltd
cwtl
mov
dec
sub
loope
stos
xor
xchg
outsb
sti
push
in
lods
repnz
or
lock
popf
addr16
push
add
ljmp
pop
dec
inc
adc
gs
dec
or
pushf
inc
inc
lock
add
sbb
movsl
sbb
add
sub
pop
mov
and
cmp
pop
cmc
dec
inc
pop
xchg
ss
inc
mov
jno
and
insb
repz
mov
fs
shrb
and
xchg
test
inc
dec
data16
shr
xchg
addl
pop
bound
jbe
sub
cmc
push
add
int
xor
add
push
aam
sbb
stos
std
and
sub
out
push
xchg
imul
and
cmc
push
js
mov
loop
lret
push
ljmp
dec
les
into
pop
mov
cli
pop
mov
stos
mov
sub
mov
inc
imul
lcall
cmp
fwait
pop
test
in
orl
pop
andb
jge
jbe
lcall
mov
xor
inc
inc
adcb
outsb
inc
fists
repnz
pop
fsts
jp
mov
push
jmp
jo
mov
fldcw
jnp
sahf
repnz
adc
dec
or
jmp
mov
lret
icebp
dec
sub
cmp
add
cmp
sbb
sarl
bound
adc
mov
pop
cld
gs
scas
lcall
dec
push
movsb
cmpb
xlat
dec
lock
cmp
outsb
xor
xchg
cmpsl
mov
sbb
js
and
dec
and
push
lcall
out
sarb
cs
sub
ds
stc
sub
inc
sahf
es
add
arpl
mov
fstl
cmp
aas
movsl
xor
xor
call
pop
dec
xor
shrb
roll
negl
mov
mov
push
out
or
pop
insl
test
pop
imul
xor
mov
xor
push
mov
jge
popa
inc
ljmp
xlat
test
mov
xor
push
aas
cld
out
sahf
or
push
sti
stos
pop
jg
scas
inc
add
jecxz
ret
dec
out
ret
push
mov
push
inc
dec
in
push
mov
mov
in
rcrb
ficoms
iret
pop
xchg
mov
cltd
imul
popa
mov
sbb
xor
xchg
jnp
cmp
cld
add
inc
pop
and
into
ja
push
mov
jbe
mov
call
add
hlt
filds
mov
cmp
call
lock
inc
loop
fisttpl
xchg
and
cs
mov
xor
addr16
ror
mov
cwtl
repz
rcrl
xchg
jnp
mov
dec
in
and
loopne,pn
mov
pushl
cmp
push
loop
mov
fdivp
movsl
and
mov
ljmp
mov
xchg
mov
aam
outsl
js
shlb
mov
pushf
cmp
fistl
daa
test
push
adc
mov
movsl
popa
aam
in
insb
jnp
push
add
jns
push
not
dec
stos
mov
stc
cmpsl
loopne
iret
mov
into
lret
cmp
in
imul
outsl
popf
adc
fsubrl
pop
pop
repnz
lret
xchg
mov
jg
dec
inc
pop
insl
dec
pop
mov
mov
movl
lock
xor
sarb
cmpsl
div
mov
sub
cmp
lea
pop
push
jg
fcoml
imul
movsb
and
mov
inc
aas
pushf
stos
popf
sahf
incb
sbb
vphaddwq
and
pop
ds
cmp
imul
iret
mov
fsubs
push
test
sub
jb
and
jns
jae
xlat
je
mov
out
nop
cmc
or
push
mov
hlt
js
fwait
scas
stos
es
orl
mov
xchg
mov
xor
pop
mov
dec
cwtl
cmp
push
mov
pshufw
cmpsb
js
pop
pop
and
jns
sbb
cmpsl
adc
das
xor
lret
or
sub
ficoml
adc
or
in
xchg
adc
sub
push
mov
movsl
mov
or
adc
or
mov
lcall
sub
mov
pushf
pop
int3
add
pop
xchg
nop
cmp
stc
xor
lret
lcall
jl
iret
in
js
shrb
sub
in
jae
mov
mov
lahf
call
out
cmpsl
pop
or
into
pop
inc
movsl
or
inc
mov
mov
push
lret
popf
xchg
mov
jp
jmp
stc
aad
pop
es
test
lahf
and
xor
loopne
je
scas
push
sbb
push
jmp
negl
loope
jl
inc
inc
pop
and
les
cmpsb
cmp
sub
mov
js
mov
je
scas
push
cwtl
pop
cmpsl
pusha
pop
sbb
pop
pop
fdivl
pop
xor
jns
jbe
sub
xrelease
inc
mov
sbb
cmp
arpl
xchg
test
jl
mov
jnp
stc
jmp
clc
bound
jne
sbb
mov
movsb
mov
xchg
mov
insl
push
icebp
or
cmp
dec
sbb
and
mov
lret
mov
loope
or
insb
xchg
jl
adc
addr16
dec
jne
icebp
pop
mov
mov
gs
mov
xorb
pop
jns
clc
cltd
adc
fxch
rcrl
fmul
xchg
sbb
subl
cmp
fnstcw
push
aam
inc
outsl
push
inc
es
or
mulb
cli
in
jo
lods
mov
add
add
fwait
je
lcall
sub
pop
xor
or
mov
add
es
adc
push
clc
popa
fildll
das
pop
sub
ja
fwait
cmp
ds
fisubrs
sti
adc
lret
or
adc
aas
jnp
movsb
sti
stos
push
pop
mov
mov
push
mov
pop
das
nop
cld
or
xlat
pop
fst
mov
fld
jle
insb
add
xor
in
or
xor
pushf
inc
or
mov
mov
test
sub
fisttpll
hlt
jb
jno
scas
mov
ja
test
dec
or
ret
fidivs
adc
dec
rcrl
mov
dec
xchg
mov
insb
bound
gs
pop
movsl
push
int
xchg
xchg
popf
rol
mov
loop
div
and
cmp
jle
xchg
mov
lds
lahf
in
call
push
xchg
add
jns
dec
rclb
push
or
xchg
loope
cmp
popf
insb
in
mov
or
gs
add
cwtl
f2xm1
sarb
add
fmuls
mov
dec
mov
int
and
test
scas
in
xor
sub
mov
jno
je
fistpl
push
mov
cltd
or
stos
or
or
ljmp
jb
mov
mov
mov
jbe
jmp
jnp
inc
xor
out
and
mov
push
cmp
outsl
fdivs
xchg
test
mov
inc
aad
adc
sbb
dec
sahf
push
and
std
push
xor
ret
add
inc
cltd
inc
xchg
sub
pop
cli
lret
in
xchg
sti
pop
xchg
adc
cmp
mov
mov
ds
mov
pop
xorl
dec
popa
sbb
arpl
or
scas
pop
mov
loope
jle
jp
add
cmp
imul
mov
push
pusha
jg
flds
push
sub
clc
loope
stos
adc
ret
movsl
mov
clc
mov
in
mov
js
sbb
sbb
arpl
popf
mov
dec
jae
and
loopne
insb
adc
repnz
jge
mov
and
lcall
dec
jae
in
mov
in
and
bnd
or
sbb
out
push
ds
fstl
es
stc
adc
jns
ret
aad
add
fcmovne
adc
stos
pop
inc
and
inc
incl
or
pop
push
sub
xor
popf
ljmp
add
jle
xor
sub
mov
dec
shll
test
mov
inc
lahf
fdivp
xlat
movsl
dec
sub
jb
xchg
ret
and
imul
xchg
jno
add
jle
inc
outsb
lahf
sbb
or
or
inc
popf
add
push
or
dec
xchg
jge
dec
ret
jge
mov
hlt
outsl
jne
loop
dec
dec
mov
cmp
add
test
rcr
mov
mov
mov
sub
cmpsl
out
mov
test
inc
rolb
scas
sub
fst
aam
inc
rclb
das
mov
lahf
mov
outsl
cmpb
xchg
or
scas
xchg
cli
imul
and
ds
dec
or
in
xlat
leave
loope
pusha
stos
test
xor
pop
xchg
inc
insb
mov
sub
and
sbb
scas
dec
pop
dec
dec
enter
jl
or
outsb
rclb
pop
inc
xchg
push
pop
mov
dec
mov
fmull
daa
push
cmp
in
dec
lock
adc
pop
jo
adc
in
lock
xor
call
mov
nop
fistpl
inc
aad
jne,pn
mov
push
je
adc
enter
loop
mov
shlb
in
ja
pop
or
sbb
cmp
cltd
mov
jae
or
inc
mov
ja
lret
mov
faddp
mov
mov
roll
mov
lds
out
lret
lock
mov
adc
subl
push
jo
mov
pop
mov
aam
sbb
sub
jl
pop
popf
addr16
inc
int3
rcll
and
rolb
test
mov
outsl
xchg
shl
mov
loopne
movsl
mov
sub
loope
shrb
jns
push
mov
aam
lret
mov
cwtl
nop
jno
xchg
lods
inc
addb
push
adc
jle
mov
lock
adc
xchg
stc
das
clc
xchg
push
mov
or
mov
mov
mov
popl
push
repz
jge
pop
mov
xchg
jl,pn
xchg
out
jne
es
mov
stos
nop
mov
pop
repnz
pop
std
cli
jnp
push
or
add
sbb
pop
push
sub
arpl
sbb
adc
arpl
outsl
or
sbb
mov
xchg
mov
stos
movsb
mov
fbld
insb
cmpsb
popaw
pop
dec
stc
xorl
push
adc
push
mov
scas
fdivrs
mov
jge
pop
shr
bound
sub
ret
in
xor
faddl
mov
jmp
fs
jbe
enter
leave
rcr
jne
xchg
sbb
jae
or
rorl
and
lcall
xchg
dec
ds
stos
sahf
mov
cmpsl
movzbl
push
jns
add
ret
add
jg
aas
ljmp
xchg
mov
cli
sub
aaa
movsl
inc
mov
test
dec
and
test
cmp
and
cmp
adc
insl
xor
and
out
pop
xchg
cmp
imul
sbb
jns
enter
mov
clc
adc
into
mov
sub
mov
dec
lret
mov
ja
repnz
cli
push
xchg
add
out
imul
and
and
pop
sbb
insl
mov
repnz
mov
xor
movsl
loop
xchg
orb
aas
xor
std
cmp
jbe
es
fwait
es
add
mov
dec
fists
mov
dec
cmpb
fnstenv
xorl
cmp
cmp
mov
icebp
dec
inc
hlt
jnp
add
fldl
jle
fsubp
aad
shlb
stos
outsb
xor
cmp
bound
cmp
out
mov
cltd
stos
sub
shl
cmp
cmp
movsb
in
xchg
or
hlt
cs
mov
imul
in
push
in
aaa
push
mov
sbb
ret
outsl
sub
sub
push
fdivp
roll
xor
mov
loope
adc
ds
fcoms
xchg
fwait
les
popa
push
jns
dec
xor
xor
xor
idivl
testb
pop
lods
rorb
add
repz
mov
push
jecxz
mov
mov
dec
popa
adc
pxor
jno
ljmp
js
mov
sub
cli
dec
inc
fld
je
sub
cs
dec
push
and
push
add
adc
cvttps2pi
enter
dec
adc
mov
fs
adc
or
xlat
mov
fwait
or
pop
movsb
mov
cmc
push
daa
push
mov
in
ret
and
jmp
outsl
rcrb
leave
dec
sbb
ret
jae
das
daa
sbb
adc
sbb
jae
orl
mov
sti
mov
adc
nop
fmul
cmp
icebp
in
mov
fiaddl
push
decl
jmp
or
pop
js
movsb
xchg
out
or
ljmp
cmp
pop
sbb
ljmp
sahf
adc
mov
mov
lcall
mov
sarb
add
rcrl
imul
mov
push
rol
jns
inc
add
pop
call
rcrb
sbb
imulb
jbe
aaa
jns
mov
jmp
movsb
lret
test
imul
and
inc
cmp
or
mov
out
push
xchg
push
in
push
cmp
sbb
imul
sahf
mov
in
cmp
sbb
jne
mov
fldt
loopne
and
dec
in
sarl
mov
dec
xlat
imul
les
push
jp
xchg
sub
inc
movsb
cmc
ss
jecxz
faddl
subb
add
add
mov
mov
and
xchg
popa
mov
pop
cwtl
call
mov
jmp
dec
cwtl
testl
push
pop
push
negb
aaa
mov
cli
mov
sub
mov
icebp
xchg
sub
jae
pushf
mov
imulb
sbb
add
xor
or
xor
lcall
adc
xchg
sub
out
lods
daa
dec
xchg
aaa
and
mov
repz
xchg
and
test
push
dec
rol
mov
cmp
out
fmull
dec
out
sub
popa
outsb
aad
call
mov
dec
xchg
rorl
mov
xorl
jp
inc
sub
in
popf
ds
jns
gs
and
bound
mov
ds
sbbl
rolb
sbb
xlat
imull
push
cmpsb
fsts
mov
push
cmp
out
aam
and
out
repnz
or
dec
cwtl
pop
in
cld
mov
lret
icebp
ror
cmp
cmpsl
testl
idivb
add
dec
mov
out
std
sub
sbb
xchg
dec
mov
ret
dec
sahf
adc
leave
jns
push
cld
pop
push
call
xor
xor
cmp
scas
shll
pop
outsb
and
cmpsl
nop
jmp
insb
sbb
sub
insb
mov
flds
pop
call
roll
insl
mov
xchg
lret
int
xor
inc
test
aaa
sti
insb
mov
cmp
or
fnstsw
pushf
jnp
sbb
add
cmp
jl
dec
leave
dec
cmc
pop
imul
lret
fidivrl
loop
dec
and
dec
or
sub
jb
xor
lds
movsl
mov
mov
leave
bound
mov
push
into
int
fcoms
std
les
and
adc
insl
sbb
sbb
scas
popf
icebp
cmp
xchg
scas
dec
or
mov
add
rclb
add
sub
push
lea
ljmp
mov
mov
clc
cmp
adc
adc
cmp
pusha
lods
cmp
sbb
pop
int3
nop
aad
fs
rcl
js
mov
addr16
incl
rol
inc
cmc
out
mov
mov
fs
add
xchg
out
out
xor
das
mov
dec
xchg
hlt
xchg
jbe
and
pop
mov
ret
pop
mov
int3
adc
call
xchg
mov
jl
push
sbb
mov
mov
mov
mov
fists
cmpsb
rcrb
jmp
lea
les
outsb
push
jae
or
xchg
sub
cmp
out
popfw
mov
bound
dec
in
stos
pop
pushf
add
pushl
fldenv
rcrl
cmp
dec
in
sbb
call
shlb
pop
arpl
pop
xchg
mov
jbe
fimuls
lcall
imul
jp
mov
test
and
repz
jl
mov
push
popa
rclb
adc
xchg
mov
dec
lock
mov
add
push
icebp
mov
test
push
push
push
mov
fisubl
aam
insl
pop
inc
adc
test
jle
push
adc
icebp
xchg
xchg
push
cwtl
sbb
mov
stos
punpcklbw
daa
add
or
scas
dec
adc
lahf
hlt
add
dec
outsl
mov
pop
inc
stos
pop
and
insl
loopne
hlt
cmp
in
cmc
add
xchg
cld
sub
aam
lods
cmp
repnz
movsb
or
mov
inc
fsubrs
mov
icebp
inc
lahf
pop
test
jbe
les
mov
adc
addr16
ds
mov
test
out
popa
aaa
push
mov
loope
add
jnp
jne
icebp
mov
daa
int
sub
rol
in
ds
push
add
lret
imul
insb
movsl
xadd
cmpsl
fnstsw
dec
lret
ds
cmpsl
push
add
or
xchg
into
or
push
and
scas
cltd
mov
insb
or
dec
push
mov
dec
xor
push
enter
stos
mov
repnz
dec
push
mov
call
test
cwtl
fwait
pop
jp
mov
loop
mov
popa
pop
mov
fmuls
cmp
es
das
rcrl
sbb
push
cmpsb
xor
mov
dec
pop
mov
push
jno
push
stc
scas
jle
cwtl
sub
sbb
jge
outsb
insb
push
lahf
pop
push
aaa
xor
push
add
subl
out
rorl
mov
jns
aam
and
inc
mov
jg
xchg
cmp
nop
mov
dec
bound
faddl
inc
js
xor
movsb
inc
xchg
dec
mul
inc
pusha
ficompl
fdivr
sahf
pusha
mov
ds
pop
nop
mov
adc
add
andb
stos
ret
mov
sbb
push
add
aas
andb
stc
xchg
adc
mov
ljmp
cmp
mov
repz
cltd
sbb
pop
or
pop
mov
xchg
insl
fwait
out
hlt
std
pop
popf
loop
daa
jge
rcr
arpl
test
nop
cmp
push
loop
push
adc
outsb
inc
out
dec
sbb
cmp
and
cli
push
shlb
pop
jp
push
das
int
mov
xor
pop
aam
or
mov
jnp
push
cmp
popf
les
dec
movsl
cltd
push
fiaddl
jo
mov
push
dec
test
xor
pop
test
sahf
cld
dec
inc
mov
fmull
into
push
movsb
outsb
lods
pushf
fidivl
cmp
adc
movsb
jne
test
jmp
and
pusha
popa
repz
sub
add
sbb
repz
pop
jp
jmp
cmpb
addr16
shlb
mov
insl
push
inc
add
aas
lret
hlt
push
pop
mov
add
fs
popf
sub
jo
in
fwait
dec
mov
jmp
push
in
push
adc
or
inc
pop
inc
cmp
push
mov
push
stos
adc
jnp
or
xchg
int
scas
outsb
dec
stos
adc
lret
data16
pop
dec
in
ret
sbb
push
pop
or
loopne
push
repz
inc
test
push
add
mov
inc
in
mov
add
adc
movsb
mov
iret
mov
ja
in
cmpsb
imul
data16
adc
adc
fadd
inc
pop
jne
push
ds
mov
add
pop
mov
pop
pop
lods
xchg
mov
add
aas
mov
cwtl
dec
ljmp
mov
sub
dec
sub
or
add
adc
sbb
les
pop
std
dec
rcrb
sbb
adc
pushf
lret
ret
mov
loopne
and
sub
mov
loope
cwtl
cs
enter
mov
pusha
imul
js
dec
imul
lret
sub
xchg
popa
pusha
jmp
mov
xchg
shll
jb
fwait
ss
mov
fwait
mov
mov
cmp
fwait
xor
xlat
into
sahf
mov
xchg
or
pop
fstps
push
cmp
cwtl
mov
stos
cmp
push
cld
cmp
push
sub
push
sub
push
inc
xorl
mov
movsl
and
sbb
je
btr
insl
hlt
data16
xchg
pop
xchg
sbb
rcll
aaa
dec
or
pop
dec
dec
hlt
cmp
test
ja
aad
xchg
push
xchg
xor
xlat
fmull
lds
dec
lahf
adc
pop
lods
outsl
push
inc
cmp
adc
rcll
mov
std
jecxz
js
bound
fcmovu
pop
xchg
mov
movl
jb
pop
rcll
adc
jge
aas
loopne
mov
pop
mov
daa
cwtl
xor
js
frstor
daa
adc
mov
fstps
sub
add
pushf
js
insl
xor
arpl
stos
es
pop
fcomip
js
jo
nop
inc
sbb
lea
popf
sub
mov
dec
jp
scas
xchg
lock
pop
sbb
test
jne
test
mov
sahf
inc
gs
adc
add
outsb
loope
add
dec
mov
lock
inc
sbb
inc
fnsave
dec
xor
stos
cs
sar
enter
jae
and
aaa
cmp
cltd
pop
arpl
inc
rcll
loop
add
mov
xchg
les
sbb
mov
or
cli
dec
repnz
push
mov
data16
xor
cs
cs
lahf
lds
shlb
int3
push
popa
and
bnd
pop
lret
push
add
inc
push
aas
scas
data16
aaa
sub
xchg
or
addb
daa
dec
ror
cs
call
pop
out
inc
mov
sbb
lods
sub
sbb
mov
dec
lret
int3
sub
jmp
lea
mov
imull
sub
cwtl
ljmp
icebp
mov
cmpsl
ret
or
jno
dec
cmc
jg
push
clc
inc
repz
pop
fistpl
nop
sahf
pop
cmc
inc
test
pop
pushf
repz
loopne
les
mov
mov
sahf
lret
icebp
sbb
loop
loopne
add
inc
mov
out
in
ficoml
lea
xchg
les
ret
loopne
lock
or
addr16
stc
xchg
pop
xchg
lock
lahf
and
movsb
cld
pop
fs
push
lods
push
repz
inc
add
add
jae
lret
stos
xchg
int
cmpsl
movsb
mov
insl
pop
push
sbb
inc
sbbb
movsl
and
mov
inc
dec
nop
dec
sub
mov
lea
pop
mov
jbe
popa
jb
fwait
adc
fwait
jne
mov
aas
test
pop
add
xchg
adc
mov
add
stc
arpl
add
ja
sub
and
in
addr16
dec
out
mov
arpl
sar
sbb
and
out
inc
fiaddl
mov
adc
xor
sbb
shlb
dec
andb
adc
out
subb
jmp
fists
jmp
and
nop
xor
ds
dec
cld
cmc
mov
jbe
cld
xor
dec
or
les
jbe
sbb
jl
in
stc
insb
js
mov
pusha
cmp
pop
in
pop
sub
imul
inc
xor
push
mov
ret
mov
adc
add
sub
dec
or
jo
adc
gs
mov
mov
and
inc
mov
push
mov
bound
test
jle
lods
mov
jge
mov
mov
ss
test
jno
xor
push
out
lahf
mov
inc
inc
popf
loopne
rorl
or
es
push
xchg
sar
mov
ret
mov
sbb
sub
cmp
dec
rcll
dec
mov
cmp
outsl
std
out
cmpsl
repnz
sti
sti
into
pop
icebp
ret
icebp
ja
ret
call
fcmovb
and
pop
mov
and
ret
les
mov
lods
clc
cmp
push
mov
sbb
xchg
xchg
xorl
dec
in
ret
adc
jl
xchg
not
mov
inc
aas
add
inc
mov
push
inc
aaa
lock
inc
shlb
outsb
or
xlat
ds
jecxz
mov
rcll
popa
cmp
cli
cmp
loop
nop
lret
push
rclb
lret
imull
push
cmpl
repz
or
sbb
add
icebp
pop
cmpsb
maskmovq
testl
fnstenv
mov
in
push
btc
call
leave
movsb
imul
js
mov
mov
out
jmp
test
inc
xor
repz
push
lock
stos
movsl
daa
dec
leave
arpl
cmp
jmp
pop
hlt
xchg
mov
jp
cmp
dec
sub
fxtract
in
pushf
push
insl
hlt
jg
xor
jl
adc
fistl
mov
aad
test
adc
sub
inc
out
arpl
mov
sbb
cmp
mov
mov
and
stc
lret
out
add
lods
push
pop
inc
sahf
das
mov
jge
fldl
cwtl
jno
ds
subl
mov
sbb
adcb
loope
or
or
sbb
dec
out
jp
js
xor
lahf
add
jno
adc
fbld
bound
pop
jmp
inc
jno
cli
adc
or
lcall
push
and
aas
stos
mov
mov
xchg
push
sub
cmp
scas
inc
pusha
arpl
out
out
cld
mov
repnz
pop
scas
sti
ret
jg
mov
sbb
xlat
jle
das
jle
push
test
mull
bound
les
clc
and
out
mov
cwtl
adc
test
adc
das
fldl
aad
cwtl
and
xchg
iret
push
fs
leave
out
in
aam
lock
leave
or
inc
je
jo
sub
lcall
mov
or
cmp
daa
adc
loope
scas
in
popa
cwtl
xor
push
cmp
push
ret
inc
mov
stos
call
in
xor
mov
add
and
cmp
fistpll
xchg
popf
pusha
pop
scas
pop
sub
je
sub
dec
mov
mov
fldl
in
jecxz
popa
pop
jne
jo
jae
andl
movl
rcrl
aaa
cmp
xchg
je
cmp
js
pop
pop
adc
xchg
mov
mov
rcrb
sub
xchg
ret
mov
out
sub
xchg
pop
imul
add
pop
lods
addr16
iret
loope
sbb
lahf
filds
or
pop
mov
sub
push
xchg
mov
push
xchg
pop
test
clc
mov
lea
jl
aas
sbb
adc
pop
sbb
or
dec
jbe
fdivrs
mov
cmp
mov
inc
fisttps
push
cmp
adc
fisubl
nop
add
xchg
sahf
and
push
inc
inc
cmp
idivb
into
push
sbb
inc
mov
sub
cmp
push
cmpsl
jns
arpl
enter
roll
movsl
push
les
out
js
lea
adc
cmc
cmp
bound
add
es
out
mov
and
fadds
jbe
icebp
lods
dec
shrb
imul
mov
lds
out
sahf
inc
fsubs
or
rcrl
jecxz
xchg
cmp
add
sahf
mov
outsb
push
jle
bound
inc
push
pop
shll
adc
cli
inc
loopne
subl
jae
out
cmp
fbstp
sub
add
test
sub
sub
xor
dec
sti
cmp
das
leave
out
cmp
dec
out
sub
stos
mov
fistpll
lods
out
sbb
pop
dec
rolb
shlb
dec
cmp
xchg
mov
lods
inc
jle
nop
ds
iret
push
addr16
mov
test
adc
sub
adc
clc
addr16
shll
lods
int
outsl
aaa
imul
pusha
and
mov
dec
pop
loope
scas
jbe
popf
dec
mov
push
stc
add
out
lock
popa
popf
cmpl
es
outsb
mov
inc
push
pop
inc
idivl
dec
pop
push
lcall
mov
cmp
repnz
jg
jle
and
ja
mov
and
cmp
mov
or
cmp
fnstsw
arpl
mov
mov
push
sub
insb
jge
outsb
inc
clc
jl
cmpl
test
test
push
lods
push
out
test
flds
pop
imul
outsb
jg
lea
loopne
mov
sbb
lds
les
hlt
out
fistpl
outsb
int
inc
xor
sbb
loope
subl
push
mov
insl
push
lahf
mov
jbe
ja
pop
inc
cmp
and
mov
ret
push
and
mov
push
adc
fucompp
mov
outsl
stos
push
jecxz
xor
cmc
push
lcall
xor
pusha
xchg
inc
ja
mov
xchg
pop
fwait
push
push
cmpsb
pop
gs
fcom
iret
cmp
jbe
dec
push
inc
incb
popa
cmp
inc
out
mov
pop
add
dec
xorl
sub
and
inc
dec
or
and
notl
or
adc
and
ss
xchg
stc
pop
fdivs
jae
scas
mov
je
movsb
push
mov
pusha
jnp
xchg
test
mov
jg
in
andb
ret
jg
jns
js
fbstp
mov
in
dec
pop
inc
sbb
xchg
jmp
sub
mov
ja
clc
jno
mov
and
sub
xchg
jge
pusha
fcomps
stos
outsl
push
lds
mov
sbb
and
sbb
js
mov
outsb
je
mov
mov
or
das
lret
dec
adc
xchg
dec
mov
xor
push
inc
mov
sub
push
mulb
cmp
mov
movsb
add
mov
push
pop
jo
mov
clc
icebp
pop
mov
xchg
pop
mov
xorl
mov
mov
sti
xchg
xor
test
mov
rorl
inc
xchg
fistpll
cmpsl
adc
dec
cli
pop
dec
sub
popf
out
mov
sar
pop
test
cmpsl
jae
xchg
into
addr16
jmp
and
dec
jecxz
out
sbb
mov
repnz
dec
repz
cmp
pop
inc
das
mov
fsts
outsl
jnp
push
nop
subl
push
sarb
push
aas
scas
cmp
or
cmpsl
into
cwtl
inc
mov
add
xor
jge
in
mov
rcrb
cmp
out
repz
mov
add
aad
add
xor
mov
jecxz
lea
dec
xlat
in
sub
or
subb
xchg
in
ds
stc
pslld
dec
int
cmc
pop
dec
xor
mov
mov
cli
pop
adc
test
scas
int3
ljmp
mov
xchg
or
pop
outsb
mov
lret
fidivrs
add
cmp
cmp
rclb
sti
mov
cmp
outsl
pop
inc
pop
fists
in
xchg
ret
inc
mov
std
mov
mov
mov
fwait
in
sbb
or
and
cmp
push
xchg
jbe
push
xchg
mov
fwait
sub
adc
inc
shll
mov
loope
adc
and
popa
outsb
push
inc
push
loope
xlat
negl
rcrb
mov
mov
pop
mov
or
mov
add
mov
jne
adc
iret
mov
xchg
and
aas
outsb
out
mov
and
lcall
fmuls
push
pop
and
in
pop
scas
ljmp
int3
data16
add
xor
xor
out
xor
cs
cmc
cs
xor
lock
cmp
add
add
mov
ret
adc
clc
adc
mov
push
test
out
fstpt
fdivrl
pop
sbb
int3
cmc
stos
or
jecxz
into
xor
lods
push
dec
or
jnp
icebp
pusha
test
rclb
ljmp
in
dec
fstpt
push
shrb
push
xchg
cmp
or
and
pushf
inc
gs
cmpsb
jnp
or
and
pop
out
push
aam
xchg
jo
mov
les
outsb
testl
lcall
cmp
int
dec
jle
out
sbb
jp
dec
or
mov
pusha
mov
jp
and
outsb
sub
lods
push
pop
jecxz
adc
shrl
hlt
loope
shl
push
and
mov
cmpsl
or
dec
and
dec
add
inc
pop
pop
stc
clc
stc
sub
xor
dec
sbb
pop
jecxz
repz
sbbl
js
add
frstor
adc
xchg
adc
or
subb
pushf
adc
mov
mov
xchg
cmp
cmp
jnp
das
and
ljmp
mov
jge
push
push
jecxz
test
and
sub
dec
js
js
aas
pop
cmpsl
lahf
lret
lret
dec
add
mov
addb
dec
addr16
frstor
push
xor
xor
lods
outsb
js
mov
pop
jae
cwtl
xor
dec
gs
cli
inc
int
mov
ja
inc
jmp
inc
inc
jne
test
xorb
cwtl
and
xchg
xor
mov
lahf
mov
cmpsb
push
repnz
hlt
in
inc
xchg
add
in
fldt
sub
jne
sub
loopne
sahf
add
add
or
lcall
push
mov
cs
adc
jns
and
dec
test
dec
mov
jl
mov
jp
stos
idivl
mov
aaa
mov
add
cmp
aaa
mov
push
mov
in
adc
idiv
idivb
aad
jno
mov
faddp
cmp
push
add
icebp
repz
push
pop
mov
inc
ret
fmuls
pop
inc
xchg
outsb
sub
and
mov
andl
sbb
and
in
aam
pop
pushf
imul
add
shrl
xchg
jae
xor
fdivr
fdivrl
mov
dec
into
testl
movsb
push
xchg
sbbb
mov
sbb
daa
xor
cwtl
imul
pop
jle
mov
mov
ret
repz
nop
adc
push
scas
mov
mov
sti
lea
mov
push
filds
jns
sub
xchg
movsl
icebp
leave
inc
xor
xorl
ret
xchg
sar
loop
push
sbb
push
cmp
shlb
sarb
arpl
inc
mov
cwtl
xchg
fldt
xchg
outsl
pop
sub
das
xlat
hlt
in
pop
inc
mov
jmp
inc
dec
sub
test
push
lods
inc
jmp
mov
sbb
int
in
sub
and
and
sub
int3
mov
inc
sbb
xchg
andb
pop
mov
lret
out
loope
inc
out
cli
xor
je
cmp
jle
jmp
sub
sub
xor
or
movsl
mov
or
fisttpll
push
sahf
and
ss
pop
xor
jnp
dec
paddb
xchg
inc
push
jmp
out
pop
and
lret
lds
add
ds
mull
jmp
stos
and
das
and
cmpsl
cwtl
ja
jno
fisubl
or
mov
in
cli
loop
sub
repnz
cmp
stc
fistps
test
sub
cmp
fcoml
jmp
cli
and
sub
dec
fldt
adc
shll
std
pop
and
push
sbb
lds
or
out
loopne
cmpsl
ficoml
fcompl
pop
jmp
dec
add
or
testb
add
xor
ss
or
cld
jno
and
popa
or
ljmp
xchg
add
iret
jmp
push
dec
pop
in
mov
bswap
je
stos
or
xor
mov
ffree
mov
xchg
jmp
dec
inc
test
xor
rorb
mov
or
stc
mov
dec
xchg
stos
dec
or
pop
jns
in
mov
sar
sti
mov
fucom
sbb
sarb
adc
in
sbb
dec
jns
mov
sbb
or
movb
das
adc
pushl
dec
mov
xchg
mov
aaa
ljmp
cmp
sbb
icebp
mov
sub
push
sbb
mov
loopne
push
adc
push
add
dec
xchg
mov
ja
fdivrl
lods
mov
neg
mov
xor
push
xchg
ja
in
addb
mov
inc
lods
js
clc
push
out
cmp
push
adc
pop
lds
shlb
ss
sbb
imul
xchg
mov
adc
dec
mov
in
data16
push
sti
dec
bound
xchg
pushl
and
negb
repz
pop
les
xchg
xchg
popf
mov
or
cli
adc
mov
mov
cltd
in
mov
sub
inc
inc
stos
or
daa
push
bound
mov
cmp
icebp
sbb
xchg
arpl
fwait
enter
dec
jno
sbb
fsubrs
clc
mov
sbbb
mov
dec
xchg
lret
jle
adc
cmpsb
aas
xor
cmp
rcrb
aam
push
jge
ret
pop
inc
and
arpl
rorl
jno
mov
mov
push
fnstcw
mov
cmp
popa
repnz
mov
inc
cmpsl
iret
push
cmpsb
inc
adc
ja
push
lcall
sbb
sbb
and
xor
cmp
pop
and
xor
sti
sbbl
jp
pop
mov
inc
push
fs
push
lret
cltd
dec
lock
mov
aam
ss
xor
cmp
jns
clc
test
leave
sub
call
pop
rcrb
cwtl
cmp
pop
shlb
stos
and
push
xor
sbb
xor
mov
hlt
cld
daa
rcll
cmp
lret
fs
or
fdivs
add
ljmp
xor
push
insb
mov
mov
popf
int3
mov
imul
mov
or
daa
das
sub
repz
adc
push
lods
addr16
jno
jne
fadds
popa
or
lcall
sbb
fimull
or
sub
adc
shlb
lock
lret
mov
add
cmpsl
mov
cmp
scas
mov
stos
mov
dec
fs
pop
frstor
mov
sbb
hlt
or
icebp
hlt
fstpl
xor
lock
push
push
or
int
mov
xchg
dec
add
mov
adc
ljmp
dec
mov
dec
pop
and
and
stc
xor
scas
jnp
sbb
xchg
scas
aaa
sbb
icebp
inc
lret
ret
sub
push
out
pop
imul
push
jb
aad
cmp
ljmp
fs
out
lret
aam
imul
adc
mov
xchg
cmp
movsl
les
fisubrl
addr16
dec
sub
ljmp
pushf
pop
pusha
sti
cmp
dec
fadds
mov
out
and
or
data16
inc
movq
mov
imul
inc
aas
inc
ss
mov
pop
cmp
stos
mov
mov
std
or
popf
inc
cmp
xorb
fsts
dec
mov
test
addr16
not
popa
add
in
pop
or
jecxz
bound
and
xchg
sbb
test
pop
pop
add
mov
jae
rol
out
int
adc
mov
test
vcvtps2dq
sahf
movl
push
imul
mov
jp
mov
call
iret
andb
lret
pop
pop
repz
mov
aad
loope
sahf
es
dec
in
xor
add
sbb
call
mov
pop
ds
push
mov
es
leave
lret
aaa
mov
jecxz
xlat
add
push
clc
mov
aaa
adc
fwait
push
in
adc
div
xor
jg
lods
in
mov
push
dec
lods
imul
imul
jnp
mov
cmp
cltd
jb
inc
rolb
ret
aad
mov
shll
cmc
xor
xchg
inc
ss
add
cmp
rcll
mov
or
lahf
or
in
enter
push
dec
mov
movsb
addb
lock
sbb
iret
pop
push
inc
dec
dec
mov
push
lock
mov
dec
cmp
je
loop
xchg
in
int
loop
xor
sub
mov
pop
lahf
popf
lahf
inc
in
lock
fisttpl
testl
pop
and
jecxz
andb
xchg
sbb
push
add
xchg
mov
xchg
adc
push
or
pop
fidivl
mov
stos
jne
inc
dec
jle
adc
push
jo
fisubrl
sub
mov
leave
sub
mov
out
aad
pop
sbb
mov
repnz
ss
jg
aas
mov
in
movb
jae
mov
xchg
push
cwtl
data16
shl
stos
mov
or
vmovaps
popa
xchg
jo
arpl
push
or
xchg
push
mov
push
mov
inc
push
js
fimull
repz
arpl
xor
je
and
std
aad
xchg
xor
jecxz
enter
xlat
rolb
jno
fimuls
xchg
repnz
cmpsl
cwtl
add
push
fdiv
mov
popf
ds
fildll
dec
inc
xor
cmp
push
mov
cmpsl
cmp
pop
and
jle
out
popa
aad
adc
or
imulb
iret
or
popa
movsb
fidivrl
or
mov
repnz
xchg
jp
out
test
je
out
lds
push
out
icebp
mov
es
mov
lcall
fldl
or
mov
dec
inc
dec
mov
cmp
scas
in
cmovs
inc
aam
mov
call
mov
mov
ret
mov
dec
fstpl
push
loop
mov
xor
inc
adc
movsl
sbb
aaa
loope
mov
sbbb
cwtl
lret
in
movsb
out
mov
mov
test
fldt
and
add
sub
testl
aas
jne
fistl
pop
jno
pushf
cmpsb
cmp
jecxz
icebp
sbb
into
sti
mov
lahf
aas
addr16
rorl
loopne
fdivrl
mov
outsb
sub
pop
data16
mov
adc
or
icebp
jg
inc
shrd
scas
andl
sub
sub
pusha
jno
push
xchg
cmpsl
stc
lock
mov
adc
mov
push
jns
mov
jmp
push
sub
std
enter
sub
dec
and
fwait
push
jae
fistpll
loope
dec
inc
jp
nop
xor
adc
cmp
push
xchg
imul
pop
xchg
imull
mov
sbb
xor
jmp
aaa
mov
lret
sub
pop
jnp
xor
pop
push
cwtl
mov
aaa
pop
cld
adc
sbb
adc
sbb
hlt
inc
inc
sahf
test
shl
scas
scas
sub
xor
stc
bound
clc
mov
mov
divl
mov
mov
cmpsl
cli
pushf
pop
sbb
mov
push
cmp
adc
jmp
sub
ds
mov
cmpb
mov
jecxz
aam
cmp
popf
test
stos
outsl
lret
mov
xchg
bound
push
jb
inc
stos
mov
jbe
adc
adc
sbb
mov
push
mov
jp
sub
out
mov
cmp
aam
dec
adc
inc
test
push
testl
ss
mov
lret
xlat
mov
cs
cs
mov
cmp
mov
movsl
leave
cmp
test
lods
push
popf
mov
and
jno
filds
scas
aad
jp
or
pusha
sbb
xchg
xchg
fisubs
into
cld
icebp
mov
repz
pusha
sub
xor
and
imull
push
mov
sbb
out
imul
dec
cmp
lds
nop
sbb
stos
cmp
sub
aad
daa
ret
cmp
test
cmp
xchg
lcall
insl
je
cli
fisubl
cmpsl
pushf
jne
in
mov
sbb
ffree
hlt
dec
cli
mov
adc
mov
aad
sti
pop
or
sbb
fisubl
ljmp
jne
sbb
jp
push
mov
push
int
ret
lcall
es
mov
aas
gs
scas
xor
lods
imul
pop
jp
cmp
push
leave
sbb
adc
xor
dec
dec
jmp
pushf
call
rolb
pop
cwtl
push
mov
mov
outsb
lahf
lds
or
negl
in
imul
and
imul
cmpsb
sbb
rcr
cmpsl
scas
add
cbtw
inc
mov
mov
cmp
cmp
or
adc
pusha
out
hlt
lret
or
lds
dec
dec
push
je
pop
cmp
pop
ret
ss
pushf
sbb
aad
mov
fisttpll
mov
mov
add
imul
pop
xchg
push
in
out
xor
pop
and
cmpsb
stos
mov
or
jmp
cmp
std
incl
testl
mov
adc
jns
adc
getsec
jle
roll
mov
add
mov
gs
or
shll
sub
fnstenv
std
outsl
popf
and
mov
cmpsb
mov
pusha
sbb
jp
in
loopne
xorb
dec
xor
pop
pop
cli
das
arpl
negl
jne
cmp
jne
rcrl
jmp
imul
cmp
mov
int
das
jne
cltd
inc
adc
dec
and
sbb
shlb
cmp
adc
daa
cmpsl
pop
test
mov
jb
aas
dec
loop
pushf
sbb
movsl
add
add
sbbb
hlt
repnz
out
sub
cmp
jg
int
movsl
ret
cmpsl
shlb
sub
sub
pushf
lret
sbb
sbb
mov
jo
sbb
xor
or
push
in
sbb
pushl
fwait
add
adc
int
into
repnz
loopne
arpl
leave
adc
cmp
sbb
out
in
loopne
lods
dec
mov
mov
xchg
scas
xchg
jmp
rcrl
jns
pop
add
cmpsb
push
sub
xor
mov
sahf
aaa
loop
sahf
fstpt
ret
lods
inc
sbb
imul
es
loopne
lds
into
cld
mov
popf
add
js
imulb
sbb
call
je
loopne
mov
xchg
fwait
jge
and
mov
cmp
mov
mov
scas
pop
lock
mov
mov
in
stos
ja
pop
mov
cli
sub
pushf
cli
sti
cwtl
call
adc
pop
and
test
or
lcall
fucomip
mov
out
outsl
int
sub
add
lcall
je
pop
xor
xchg
inc
jp
add
inc
mov
pop
pop
sbbb
lahf
pop
push
add
test
lcall
xchg
mov
jae
jae
add
push
loopne
cmpsl
jb
ljmp
mov
mov
addr16
mov
pop
stos
jmp
pop
std
push
push
addr16
cmp
fcompl
mov
jo
or
add
and
lea
xchg
jns
out
out
cmpsb
push
jmp
cs
sbb
cmpsl
pushf
mov
out
mov
push
inc
fsubl
clc
mov
add
xchg
mov
cmp
adc
push
out
dec
int3
enter
jmp
fldl
xchg
mov
jns
sbb
push
mov
flds
movsl
dec
mov
loopne
xchg
enter
or
xchg
lods
cmpb
lods
sbb
sbb
add
pop
dec
sbb
xchg
mov
mov
mov
loopne
and
arpl
flds
mov
sub
ficomps
jp
daa
push
gs
fsincos
lods
cmp
mov
inc
lret
lahf
into
cli
sub
mov
adc
xchg
fnsave
push
pop
test
sbb
inc
sub
jo
dec
cmp
or
pop
outsl
mov
xchg
test
adc
mov
sub
dec
xchg
cwtl
mov
mov
or
inc
cltd
xchg
je
and
outsb
inc
cwtl
jb
mov
mov
sbb
dec
jae
sti
mov
roll
cmpl
and
test
pop
pop
jns
xor
ret
jle
xchg
out
out
push
sub
aam
pop
das
daa
adc
imul
movsl
movsl
stos
pop
orb
js
mov
lret
inc
imul
mov
xchg
repnz
mov
and
les
pushl
imul
jae
ja
inc
shl
cmp
or
xchg
popa
pop
std
test
fwait
xor
ss
mov
add
xchg
lds
fsts
mov
out
divb
mov
xchg
std
jge
mov
adc
out
push
and
lret
fldenv
pop
or
sbb
xor
loopne
adc
mov
dec
dec
fmull
sbb
xchg
cmp
add
inc
pop
rep
xchg
mov
incl
mov
inc
test
pop
mov
mov
movsl
push
dec
hlt
jecxz
pop
fs
push
pop
insl
sbb
loopne
imul
movsl
int3
icebp
push
lahf
enter
popf
stos
lcall
push
dec
inc
push
jno
mov
xor
and
mov
in
das
pop
lret
lods
fldt
or
mov
add
out
rolb
push
dec
mov
mov
scas
sbb
mov
xchg
add
cmpsl
mov
stc
shll
sub
jb
popa
inc
mov
fisttpl
cld
adc
cwtl
xchg
scas
cltd
outsb
push
xchg
dec
int
cmovge
cmpsb
inc
imul
out
inc
out
aam
out
xor
nop
or
in
mov
aam
cwtl
bound
aam
cmp
jb
pop
inc
sbb
and
mov
xchg
pop
xor
jns
add
sub
sahf
ret
inc
stos
lret
scas
or
xchg
fs
fstpl
adc
push
popl
imul
push
xchg
clc
add
sar
or
test
ss
fbld
jmp
lret
pop
push
je
lods
mov
cmpsl
cmp
sub
inc
lcall
call
ds
inc
pop
adc
rcrb
in
mov
das
cmp
sub
aam
movsb
lahf
xchg
test
cld
dec
mov
jno
xor
mov
mov
ss
push
pusha
in
int3
lods
pop
inc
and
xchg
cmpsl
mov
repz
mov
roll
adc
mov
xchg
dec
popf
sbb
aas
push
ja
push
call
into
dec
mov
lahf
cmp
cmp
gs
in
and
mov
shlb
xchg
pop
subl
imul
lea
mov
dec
adc
sbb
sbb
xchg
lret
pop
out
imul
inc
pusha
adc
dec
leavew
jo
mov
movsl
dec
push
icebp
and
mov
xchg
test
insl
cmp
push
mov
sbb
mov
sti
lret
inc
iret
hlt
xchg
jl
inc
loope
lods
jnp
xor
pop
aam
mov
lods
pop
push
mov
popa
push
orb
mov
ja
pop
jb
fistps
out
pop
enter
fs
jge
mov
push
insb
mov
fcoms
cmp
jecxz
in
push
pop
adc
inc
clc
fisttps
xor
cld
mov
fdivs
fisubs
rcrl
push
push
dec
push
imul
ret
sub
xchg
fs
and
jns
pop
bound
add
sbbb
fs
popf
lds
sub
loope
popa
shlb
push
sbb
imul
mov
add
fdivrs
lods
pop
cltd
cmp
sbb
jne
stos
fildl
push
loop
pop
mov
nop
inc
dec
mov
xchg
aad
or
lahf
push
out
test
adc
pusha
or
xchg
xchg
and
sbb
add
pop
dec
outsl
add
fcomp
cmpsl
in
lahf
ficomps
cmpsl
sub
pop
add
and
sbbl
fucomi
jecxz
jb
movl
in
cmp
in
and
and
jg
or
test
dec
dec
je
mov
cmpsl
xchg
push
sub
fisubs
pop
add
sbb
pop
loopne
insl
mov
and
jle
lds
lcall
push
adc
dec
bound
and
lret
sub
sub
ss
xorb
leave
jns
or
and
pop
outsb
xchg
jp
sub
movsl
movsl
mov
movsl
inc
repz
dec
sbb
mov
inc
aaa
sarl
mov
adc
add
jmp
xchg
mov
std
xor
pop
add
adc
sbb
loopne
inc
xor
scas
repnz
push
in
aas
out
cmc
cwtl
test
jb
rclb
jg
test
cmp
lea
pop
rcl
pop
das
inc
test
out
push
xor
leave
dec
icebp
adc
push
nop
imul
jl
push
lahf
dec
adc
mov
mov
orl
xchg
cli
mov
setns
lcall
dec
lods
in
push
mov
or
jae
cmp
lods
daa
clc
add
inc
sbb
lods
jno
xchg
je
inc
add
jle
xchg
movsl
inc
mov
test
dec
fmul
mov
xchg
jl
sub
jbe
sub
cmp
enter
les
mov
loop
or
fstpt
dec
popa
mov
jle
lock
mov
loopne
fdivrp
push
ss
push
sbb
fdivl
in
jmp
cwtl
jmp
out
xchg
mov
or
ret
into
jg
cmp
push
push
test
push
insb
sbbb
sub
pop
leave
dec
lock
in
jno
mov
mov
shr
jae
cmp
xchg
rcrl
aaa
test
fwait
add
xchg
mov
mov
icebp
xchg
iret
cwtl
inc
mov
mov
push
je
mov
jo
rol
repnz
clc
add
subb
jo
inc
sub
add
es
push
mov
jp
push
lret
sbb
pushl
loop
aaa
int
xor
add
shlb
stos
mov
xor
mov
aam
insl
xchg
movb
xor
lahf
dec
cmp
and
outsl
fwait
sbb
dec
sub
xor
jp
xor
fwait
pusha
mov
push
and
in
xchg
out
outsb
push
and
adc
jmp
xchg
push
je
cmc
xchg
pop
sbb
cmovle
hlt
scas
push
rol
adc
sbb
adc
ja
in
push
cmp
sub
inc
pop
maskmovq
imull
pop
adc
addl
loop
bound
andl
push
sbb
es
bound
in
add
cmpsl
xchg
inc
pop
sub
xchg
ljmp
lcall
mov
push
testb
or
in
ret
out
mov
xchg
push
andb
cmpsb
add
enter
pusha
push
mov
daa
dec
mov
jmp
cwtl
bound
push
mov
adc
enter
inc
leave
inc
sbb
mov
xor
ret
pmulhw
imul
add
imul
dec
je
scas
mov
push
in
adc
and
jmp
sti
jnp
jl
pop
arpl
lock
movsb
je
lcall
or
mov
xor
ss
xor
or
test
sbb
mov
addb
xchg
sbb
out
and
xor
mov
pushf
pop
mov
nop
sti
ret
xor
xor
sbb
push
testb
pop
mull
cmpsb
cwtl
mulb
loop
mov
sub
je
xchg
pop
arpl
jp
inc
xchg
xchg
ljmp
cltd
cmp
loop
mov
xor
fdivl
xor
rcrb
cwtl
push
pusha
xor
sti
dec
stos
adc
cmpsb
sub
cltd
test
or
cltd
mov
cmpsb
xchg
in
outsl
ficomps
je
insb
xchg
sub
test
jp
movsl
lahf
popf
jecxz
mov
push
orl
and
sub
clc
mov
jbe
insl
test
arpl
ja
pandn
enter
lea
inc
mov
pop
jge
stc
cmc
ss
xchg
push
push
xchg
xor
bound
sub
xlat
jle
inc
cmpsl
loope
and
inc
or
ret
sbb
cmpb
and
pop
cmc
adc
add
sbb
push
or
dec
sbb
icebp
and
lock
push
out
adc
xchg
cld
mov
ror
xchg
cmpsl
mov
stos
addb
jp
cmp
inc
cmp
xchg
jbe
dec
out
mov
stc
sbb
loopne
inc
jns
fsubrl
test
cld
adc
mov
sbbb
test
or
pop
push
rcrl
jmp
xor
jp
push
arpl
xchg
xchg
popa
pop
sbb
test
lods
inc
mov
scas
fs
fisubrl
push
fistpll
dec
les
xor
lret
js
imull
jne
xchg
cmp
test
push
ja
inc
mov
and
mov
push
inc
jecxz
out
dec
xlat
ficomps
add
xchg
mov
cld
aad
or
dec
out
dec
hlt
cmp
mov
or
pop
loope
xlat
bound
jg
cmp
cwtl
stc
pop
mov
jns
push
cmp
push
and
xchg
sub
push
stc
out
int3
das
or
ret
jge
ljmp
mov
lcall
inc
mov
fldt
roll
ss
xchg
clc
ss
shr
push
add
dec
lock
fsts
imul
mov
mov
loope
lcall
dec
mov
roll
mov
add
cmp
cld
and
loopw
iret
sbb
dec
aaa
jno
inc
fcoml
movsb
xchg
call
sbb
adc
mov
pop
pusha
adc
sahf
ret
pop
jbe
sub
sbb
enter
xor
cmpb
cmp
cmp
stos
add
inc
mov
cld
add
mov
repnz
cmpsl
repz
jecxz
sahf
inc
jnp
out
data16
pushl
xchg
xor
adc
add
icebp
das
push
add
jecxz
test
add
scas
orb
sbb
lods
sbb
push
jb
mov
push
jne
mov
sub
lret
push
push
inc
pop
addb
fadd
fbld
pop
push
aam
pop
sahf
loopne
jo
std
lods
inc
push
sahf
fwait
out
and
jae
mov
sub
aas
pop
movsb
xor
jno
inc
inc
cld
insb
scas
xor
and
xor
sahf
jns
push
hlt
xor
mov
jo
repnz
sar
bound
hlt
insl
adc
testb
mov
push
mov
cmp
bound
lock
mov
xchg
fcmovu
inc
dec
pop
cmp
xchg
xchg
aaa
cwtl
inc
pop
or
cmp
fnstcw
out
rorl
lret
and
fisttpl
sbb
dec
outsl
movsb
adc
pop
cli
lock
add
jno
xor
int3
outsl
test
pop
cwtl
xor
mov
dec
adc
dec
fidivrs
bound
pop
aad
fiaddl
idivb
mov
mov
loopne
or
je
or
xchg
mov
ja
mov
imul
xchg
jle
insb
lcall
mov
fidivl
fs
inc
sub
sbb
divb
repnz
clc
aas
popf
fbld
insb
push
loopne
mov
mov
or
lret
xchg
lcall
sbbb
outsb
test
mov
dec
pop
aaa
and
fbld
mov
cmp
adc
call
lret
in
outsb
cld
repnz
mov
add
inc
pop
adc
jns
jae
int
and
vpaddd
rcr
divb
sbb
stc
mov
in
mov
daa
int
lock
shlb
xor
mov
dec
shrl
or
mov
mov
cld
jno
clc
lea
add
clc
icebp
jl
sub
sub
iret
cltd
gs
dec
jg
jb
xchg
sub
out
cs
frstor
ret
iret
push
xchg
or
push
sub
add
into
daa
cs
push
in
jbe
jmp
lret
outsl
rorl
rol
js
loopne
pop
push
jmp
jnp
push
int
bound
nop
jne
xor
out
subl
mov
loope
xchg
adc
test
dec
adc
mov
movsb
insl
sub
dec
std
mov
mov
cld
cmp
aad
cwtl
fcmovbe
into
aam
fdivrl
or
addl
imul
inc
xlat
into
adc
mov
jmp
cmp
xor
push
xchg
and
cli
insb
sahf
sub
push
cltd
add
push
push
fucom
stc
add
jp
and
mov
cli
mov
shlb
inc
mov
cld
push
scas
mov
push
cwtl
hlt
cmc
cmp
lods
sahf
sbb
sub
adc
push
out
add
popf
jle
hlt
js
dec
into
popf
push
loopne
sbb
sbb
arpl
das
lret
add
fwait
gs
cli
pop
lret
int
jp
test
mov
cwtl
imul
push
xor
xor
jl
les
cmpsl
fisubrs
xchg
inc
stos
jge
fs
pop
push
mov
lret
bnd
lret
jl
cwtl
pop
inc
pop
test
mov
pop
add
add
push
rolb
cmp
icebp
ret
popf
frstor
sbb
bound
lret
pop
cmp
xor
push
les
mov
pop
rorl
sahf
pushf
mov
cltd
push
sbb
pop
test
pop
mov
inc
ss
fisubs
mov
imul
scas
jge
lds
test
pop
hlt
xchg
xchg
pop
inc
ret
pop
lret
shll
lock
xor
mov
jge
sbb
rcr
stos
mov
ds
notl
fwait
aas
lahf
sub
hlt
pop
jo
and
mov
mov
decb
gs
add
std
push
es
and
mov
clc
and
imul
mov
out
xchg
and
shr
shll
test
push
jge
jge
cmpsl
movsb
xchg
push
push
xor
mov
fildl
cld
or
cmc
mov
lahf
loope
arpl
push
movsl
cmp
in
push
repnz
pop
jg
aaa
loope
pop
insl
iret
hlt
iret
into
lcall
push
addr16
sub
cs
push
aad
or
pop
inc
mov
scas
jg
sbb
sahf
popf
imul
out
or
pusha
aad
inc
lcall
push
ds
rorl
leave
jnp
cmc
mov
sub
out
cltd
rcrb
adc
mov
xor
filds
sbb
mov
inc
cmp
rcr
adc
or
add
mov
pmaddwd
movsl
sub
mov
lock
mov
xchg
add
sbb
outsl
jb
lret
orl
shll
adc
pop
fsubp
add
mov
call
ret
rorl
mov
dec
and
rorl
jns
jp
stc
pop
call
adc
notb
or
jg
movsl
in
js
xchg
inc
js
mov
or
sbb
push
mov
insl
cld
roll
add
dec
sahf
stos
rorb
pop
mov
outsl
cmpb
pop
mov
mov
rorb
ret
or
mov
out
repnz
xchg
mov
popf
nop
push
test
sub
outsl
push
pop
or
or
fcoml
push
out
test
and
subl
jmp
dec
fs
pushf
jp
lds
mull
clc
les
and
ret
dec
and
lock
lods
and
xor
and
or
push
test
add
mov
inc
or
mov
loop
push
inc
stos
ret
sub
xchg
call
inc
sbb
movsb
daa
jg
pop
lods
fldt
sub
mov
addl
push
push
test
sahf
cmp
sub
dec
dec
dec
test
je
xor
xor
jp
or
cltd
or
mov
stos
add
test
les
sub
sbb
lods
arpl
lret
fwait
jne
rolb
outsl
lds
xchg
test
mov
mov
xchg
and
sub
ja
fidivs
imul
jmp
stos
das
outsl
lock
jl
mulb
mov
dec
pop
lcall
add
test
test
fistps
xchg
idivb
cmp
fnstenv
xchg
push
pop
rcl
les
sbb
mov
jecxz
testl
jne
push
sub
das
dec
sar
imul
lock
jo
in
cmc
scas
mov
push
out
jae
scas
js
ret
js
cmp
pop
insl
ret
scas
icebp
push
in
and
jne
mov
aaa
out
lods
rcll
jnp
cmpsl
push
call
pop
xor
push
cmp
jae
dec
inc
cwtl
dec
sbb
jne
rclb
insb
lds
lods
shlb
dec
loop
es
cmpsl
sbb
fisubrs
addr16
xlat
adc
jnp
insb
std
mov
mov
fcoml
or
xor
test
mov
xchg
pop
cmpsl
and
aas
sub
push
mov
mov
in
cli
mov
push
sbb
pop
jbe
ret
roll
shrl
mov
mov
mov
mov
xchg
notb
xchg
sbbb
mov
cli
adc
nop
inc
jp
dec
xchg
mov
pop
push
les
jns
inc
mov
aam
movsb
mov
push
out
jnp
mov
mov
sub
pop
leave
and
pop
inc
sbbl
imul
mov
loopne
xorl
fdivrl
faddl
jnp
lods
xchg
popa
jno
mov
mov
push
fstl
pop
lcall
sbbl
add
sarl
and
xchg
push
pop
shrb
stos
in
test
jnp
push
push
jg
repnz
dec
in
xor
mov
mov
sub
jecxz
aas
push
sar
or
jno
adc
nop
repz
xchg
push
fists
in
jle
mov
movsl
imul
movsb
ret
repz
cmpsb
mov
into
lea
loopne
fsub
cmp
dec
mov
pop
cmpsb
push
xchg
call
jecxz
or
test
ret
stos
scas
add
movsb
pop
jno
stos
push
cmpb
out
sahf
push
mov
jo
cmp
out
pop
fildll
mov
icebp
xor
aas
scas
mov
loopne
xchg
jp
idiv
imul
jmp
lcall
imul
sub
adc
jno
fisttpl
ret
mov
ss
imul
in
cld
lahf
mov
jnp
adc
mov
clc
xlat
aad
xchg
jne
aaa
iret
arpl
adc
push
pop
adc
aad
fstpt
xchg
dec
dec
ret
icebp
inc
aad
inc
mov
pop
nop
dec
pop
cmp
imul
gs
push
hlt
cmp
xchg
daa
mov
dec
add
jnp
mov
popf
pop
or
jo
cltd
std
inc
mov
mov
lods
pop
fcoms
iret
sub
shrl
outsb
inc
repz
fisubrl
lcall
addr16
and
or
ud1
xchg
jbe
inc
jl
push
cmpb
add
push
lods
hlt
stos
loope
in
out
loope
push
fldenv
add
xor
cmp
mov
or
out
inc
pop
dec
xadd
push
push
clc
out
mov
sbbb
pop
mov
or
into
stc
mov
mov
jp
jnp
push
mov
mov
call
and
and
lcall
data16
sahf
fildl
and
inc
ds
int
inc
adc
xchg
imul
sub
packsswb
enter
sbb
cmp
ret
or
or
mov
fnsave
loop
ret
out
pop
xchg
push
xor
mov
ja
adc
pop
fstps
pusha
sub
inc
fs
adc
dec
addl
scas
fiaddl
ss
dec
arpl
mov
xchg
clc
and
loope
jg
movsb
sub
mov
dec
test
xchg
enter
lret
in
jae
fdivs
hlt
pop
jmp
movsl
mov
fadd
cld
imul
stos
roll
adc
clc
adc
mov
lret
int
mov
jmp
inc
push
mov
insl
xchg
cmp
test
mov
outsl
loope
cltd
sub
or
cli
cmp
dec
movsb
push
inc
fs
stos
push
imulb
push
pop
nop
in
inc
enter
or
xchg
mov
stos
mov
sar
popa
insl
hlt
out
adc
push
add
imul
sbb
pushf
push
pop
pop
mov
sub
inc
incl
out
lret
rep
dec
adc
push
aaa
xor
pop
pop
lret
cmp
popf
sbb
cmp
add
cld
mov
or
iret
imul
inc
repz
xchg
arpl
in
mov
pop
adc
aam
lcall
mov
pop
fildll
pop
mov
adc
addb
dec
ret
or
ds
adc
jnp
and
adc
inc
inc
dec
shll
aad
xor
jmp
daa
enter
leave
or
cmp
pushf
adc
shr
loopne
mov
rorb
add
add
xlat
call
add
adc
test
fmuls
das
fsubl
pop
add
lret
xlat
inc
dec
aaa
jmp
repnz
dec
lock
cs
mov
in
or
out
sahf
movsb
pop
mov
add
pop
lea
jl
push
push
mov
pusha
ret
pop
clc
mov
sahf
or
movsl
out
aad
bound
cmp
imul
jmp
insl
inc
ror
sub
xchg
dec
dec
stc
ljmp
rolb
mov
dec
add
adc
xchg
or
push
ja
imul
push
jo
jno
stos
jno
dec
jmp
and
mov
movsb
mov
sub
pop
pop
stos
jg
es
movsb
sbb
fldcw
clc
ds
dec
cld
add
mov
js
imulb
jnp
xchg
std
and
dec
or
xchg
call
leave
lcall
ss
push
mov
cltd
mov
sub
push
iret
mov
pop
and
inc
xchg
scas
inc
pop
fimuls
aas
add
out
scas
pop
jnp
sbb
in
and
lcall
jb
leave
fwait
or
popa
mov
push
mov
movb
sti
mov
push
gs
js
pusha
mov
and
jmp
ss
sub
inc
fstl
movsl
repz
xchg
sub
jno
mov
out
loope
int3
adc
mov
mov
xchg
pop
sbb
aad
xchg
bnd
sbb
jb
fsubs
jno
mov
scas
xor
mov
mov
fnstcw
push
cmp
jno
aas
sub
push
sub
pop
sbbb
push
lods
inc
out
loop
or
lods
dec
pop
out
jl
mov
xchg
inc
push
hlt
add
decl
push
dec
into
pop
sub
sahf
mov
pop
inc
rcl
movsb
mov
fnsave
cld
js
push
cmp
insb
jecxz
mov
sbb
mov
mov
data16
jns
lahf
mov
aas
or
inc
mov
sbb
adc
adc
adc
stc
add
mov
sbb
fisttpll
fdivs
cs
push
mov
fidivrs
mov
xor
sarl
fldl
fisttpll
imul
mov
adc
and
adc
sub
sbb
inc
adc
cs
mov
aas
cmp
mov
sub
cs
pop
fildll
inc
call
lods
scas
aaa
rcrl
or
and
pop
fildl
enter
pop
xchg
xor
add
mov
fcoml
imul
lods
add
ficomps
adc
sahf
fsts
sub
cmp
push
ret
adc
movsb
inc
in
ss
xor
adc
adcl
lcall
pop
pop
dec
mov
mov
jecxz
sbb
jns
pop
dec
fs
jno
and
pushf
and
bound
mov
test
cmpsl
lret
cltd
cli
ds
add
pushf
pop
iret
std
lea
pusha
mov
pusha
arpl
ret
push
je
outsb
push
mov
das
popf
xor
add
imul
divb
xchg
arpl
sbb
mov
or
subb
jp
and
test
loop
mov
stc
xor
jbe
xor
jl
xchg
sbbb
lcall
or
sbb
sti
daa
icebp
popf
outsl
cmp
leave
fs
aas
out
mov
shlb
cmpsl
add
xor
cmpsb
cmp
and
in
lret
popa
out
into
mov
xor
or
adc
movsl
pop
jno
jbe
pop
faddp
psubusw
das
lock
xor
adcb
js
movsb
adc
jae
jne
mov
or
push
repnz
shlb
and
int
sub
fwait
arpl
dec
gs
dec
cmp
mov
std
mov
mov
sub
out
addl
pushw
lret
dec
pop
shlb
je
out
test
ds
cmp
andl
dec
gs
jo
push
pop
fs
dec
cwtl
fcomi
mov
add
or
gs
mov
pop
mov
movsl
cld
inc
test
push
addr16
popf
sbb
cmp
jnp
jg
outsl
ret
nop
pop
icebp
xchg
add
jne
xor
movsb
xchg
dec
fwait
pop
lods
dec
xchg
js
mov
ret
push
mov
sbb
fisttps
insb
xor
jae
icebp
std
ret
std
cs
xlat
xchg
pop
loop
subb
sbb
mov
jns
loopne
lods
test
mov
add
push
test
bswap
or
sub
mov
cmp
mov
cs
adc
push
jns
pop
push
sub
movsl
cmp
stc
mov
mov
stos
add
xchg
push
fcoml
jl
cmpsb
loop
pop
jno
lds
stc
out
or
mov
movsb
fisttps
vprotd
mov
mov
xchg
sub
les
rcr
divb
xchg
into
lods
xlat
fchs
push
lods
fstps
mov
mov
push
inc
aam
and
cmp
add
je
scas
jl
push
pop
mov
lods
and
jp
gs
mov
iret
mov
mov
mov
je
push
iret
iret
fistps
mov
cmc
dec
mov
xchg
test
stos
add
mov
jae
lods
xchg
adc
xor
inc
push
ud0
insl
push
inc
popf
cmp
pop
pop
data16
mov
dec
adc
lods
gs
shl
adc
mov
inc
cmp
sahf
xchg
xchg
mov
mulb
mov
bound
fisubl
test
jecxz
mov
and
jmp
jmp
dec
sub
das
and
es
test
daa
fxch
push
push
fisttpll
outsb
imul
or
sarb
and
sub
jmp
imul
jbe
inc
or
and
xor
lods
sbb
inc
mov
insl
ja
out
xor
and
mov
scas
movsb
fwait
push
push
lods
out
nop
les
stc
jp
push
aas
add
sahf
mov
or
mov
mov
mov
lret
push
inc
fistl
ficomps
jae
sub
jno
movsb
stc
xor
mov
mov
and
data16
dec
sub
dec
hlt
into
push
and
fsubr
call
ret
jae
mulb
les
shlb
push
fucomip
jg
and
pop
or
and
ss
daa
mov
cmp
xor
in
lods
xor
pop
lods
inc
lahf
stos
lret
mov
push
pushf
insl
lds
push
gs
xor
xor
pop
je
outsl
fisubl
pop
ret
movsb
and
jnp
mov
ficoms
xchg
adc
add
and
cld
aas
mov
cmc
xor
jne
mov
int3
cmc
adc
jnp
mov
in
lea
push
cmp
pushf
mov
inc
xor
popf
and
leave
xor
push
into
and
mov
inc
and
mov
hlt
jg
ret
js
or
and
mov
jl
rorl
repz
subb
movsl
nop
loopne
int3
jbe
sbb
dec
sub
in
pop
dec
dec
or
and
xchg
or
fnstenv
movsb
pop
mov
jg
jmp
lods
sub
cmp
cli
fs
xlat
and
rcr
mov
es
sbb
fstps
add
imul
cli
insb
sbb
out
pop
inc
frstor
dec
shrb
iret
movsl
gs
and
jmp
dec
mov
inc
into
lods
jae
pushf
cmpb
adc
je
jbe
dec
dec
mov
incb
push
out
and
loope
pop
sahf
fidivs
mov
push
test
xchg
mov
mov
js
cmc
sbb
jne
adc
sbb
mov
mov
jns
lods
cmp
leave
add
enter
mov
paddsw
cmp
cmp
dec
push
movsb
xchg
imul
mov
jp
dec
sbb
out
mov
dec
shlb
imul
cmp
mov
push
call
xor
out
pop
lret
movsb
add
pusha
inc
dec
je
leave
in
or
into
mov
div
mov
repz
adcl
add
test
imul
cs
into
xor
pop
mov
mov
loopne
push
sbb
bound
inc
pop
mov
cltd
jo
push
gs
sbb
bnd
scas
cmpsl
jne
sub
mov
and
lcall
stos
add
aad
dec
mov
pop
mov
inc
in
xchg
rorl
dec
aas
fs
sub
js
mov
jl
or
lods
test
add
mov
mov
pop
cmp
xchg
pushf
pushf
test
jecxz
loope
std
sti
push
cmp
pop
inc
add
aad
subl
sub
cmp
cwtl
push
ret
aam
push
fnstsw
stos
and
jb
add
sub
jecxz
orl
int3
call
nop
repz
popf
lcall
xor
imul
or
stc
jne
sub
fwait
push
sbbb
ds
and
gs
adc
and
imul
ret
add
cltd
hlt
cmpsb
xorb
loope
jp
mov
sahf
push
out
jns
call
dec
push
or
inc
jmp
movsb
xchg
adc
xchg
in
jle
ljmp
imul
push
leave
adc
rorb
lods
test
test
xchg
pop
rorb
mov
mov
inc
xlat
iret
bound
cmc
nop
xchg
icebp
mov
or
ret
pusha
xor
dec
inc
adc
aad
popf
pusha
imul
adc
lret
cmc
jge
pop
fwait
loopne
mov
movsb
mov
mov
pop
jmp
and
dec
lcall
subb
xchg
cmp
sahf
mov
popa
out
sub
loop
repnz
test
cmovle
mov
sub
mov
mov
cwtl
cmp
or
sub
outsl
imul
cmp
mov
ret
imulb
dec
mov
aam
or
xchg
inc
mov
dec
pop
rcrb
sti
imul
mov
stos
jecxz
push
add
test
in
es
scas
scas
jecxz
and
or
jns
outsb
mov
push
sahf
add
stc
lret
mov
push
pop
lea
das
xor
sub
jns
clc
mov
and
std
sti
icebp
jae
and
cmp
rcr
mov
push
cmc
lods
and
push
ljmp
je
dec
lret
push
insl
sbb
imul
push
add
sub
sbb
jmp
jle
movsl
push
mov
dec
push
pop
inc
jmp
and
mov
jb
lret
cmpsb
xor
push
sti
outsl
ud0
stos
adc
xor
lret
dec
inc
mov
mov
pop
mov
lods
in
loopne
mov
imul
mov
push
enter
mov
add
repnz
pop
aas
mov
fstpl
jbe
int
sub
das
sti
je
aas
dec
add
or
push
or
cmp
jb
sbb
inc
ds
lea
mov
icebp
mov
repnz
test
or
add
imul
mov
fsubp
icebp
adc
icebp
mov
xchg
jne
hlt
push
pop
cltd
dec
sub
lcall
js
push
lgs
in
pop
cmp
mov
shll
pop
xchg
cmp
sub
and
dec
out
outsb
sbb
jo
pop
pop
mov
jle
dec
in
mov
dec
ss
xchg
push
rcl
jo
add
xorl
shr
xchg
bound
jp
sti
or
mov
rorb
adc
push
add
sbb
push
mov
sarl
dec
ds
lret
and
lds
add
orb
scas
push
aas
cli
push
in
jbe
jno
cmp
mov
xchg
push
enter
or
test
pop
mov
mov
out
out
lods
fidivrs
fimull
clc
pop
out
icebp
push
aad
cmp
ss
push
dec
sub
fs
xlat
iret
push
cmp
inc
ret
loopne
mov
mov
jl
xor
xchg
andb
dec
mov
push
in
mov
test
push
ja
pop
sbb
inc
cmp
test
das
bound
mov
imul
sahf
imul
lret
push
dec
je
mov
int3
aad
lods
sub
xor
lcall
dec
cld
daa
pusha
cmc
inc
mov
sbb
inc
daa
fstl
push
cmp
daa
and
cmp
or
sub
xor
xchg
mov
fucomi
xor
out
or
mov
xchg
sub
ljmp
mov
inc
bswap
jg
jb
xor
xor
xor
jb
xorb
or
repnz
push
adc
stos
popa
pop
mov
movsl
addb
add
mov
mov
cmp
dec
out
cmp
mov
stos
repnz
fadds
fdivl
mov
xchg
jge
nop
bound
inc
cmpsb
xchg
xchg
je
sub
aam
pop
mov
in
addr16
cld
inc
or
popf
hlt
lahf
and
rolb
sub
cmp
xor
lcall
lret
stos
or
adc
ss
add
cmp
fsts
jle
xor
pop
pop
imul
xchg
mov
ja
fmulp
ljmp
divb
push
popa
mov
cmc
out
adc
jae
mov
shr
sarl
xor
ja
sub
sub
clc
data16
sub
mov
popl
pop
jbe
pop
mov
mov
jecxz
cmp
dec
jmp
repz
mov
mov
cmp
int3
movsb
dec
add
mov
lret
popa
test
cmc
in
popf
cmp
adc
push
pop
mov
dec
shr
enter
cld
rcrb
xchg
jnp
data16
lret
ret
add
mov
psubusw
fmuls
lock
xchg
cmpsb
push
out
stos
rcrl
pop
call
mov
movsl
or
lcall
pushf
push
sub
xchg
fwait
mov
sub
xor
push
mov
mov
clc
mov
sub
arpl
nop
or
sub
popf
in
jae
add
iret
shll
dec
adc
cld
shll
ret
push
push
orl
inc
pop
ret
fstp
scas
and
mov
mov
xchg
push
ja
nop
sub
roll
rorb
ja
das
flds
mov
imul
xchg
mov
jno
imul
test
mov
int
int3
or
inc
sbb
pop
and
pop
cmp
push
out
mov
pop
jle
dec
inc
xor
popf
divb
push
outsl
jnp
push
popa
cmpsb
jge
add
lcall
jbe
cmp
xchg
push
fsub
leave
inc
jbe
adc
test
push
stos
fsubrs
or
out
push
ja
pushf
jno
adc
popf
jp
pop
addr16
test
jnp
adc
jp
out
cmp
add
add
dec
aas
pop
push
scas
jno
in
and
outsl
xorl
mov
pop
iret
cltd
aas
mov
mov
push
mov
sbb
insb
mov
hlt
sbb
sbb
in
dec
pop
mov
pop
jb
pop
imul
lods
out
pusha
or
ret
cmp
sbb
stos
subb
outsl
mov
push
shlb
inc
fidivrs
in
popa
decl
out
rcl
aaa
sub
adc
fimull
ret
xchg
out
rcll
cmp
dec
mov
pop
and
ljmp
cltd
imul
sbb
mov
sub
insl
mov
ret
or
and
add
jecxz
and
jne
or
pop
out
out
clts
cmpsb
cmp
mov
stc
pop
cli
pop
aad
sbb
sti
dec
cmp
push
adc
add
jo
es
add
dec
ljmp
mov
cmp
jns
pop
idivl
and
cld
xor
cmp
adc
std
repz
rorb
iret
push
dec
std
mov
mov
mov
into
repnz
cmp
jae
les
in
fstpl
mov
insl
vpaddsb
jne
jnp
push
dec
push
pop
inc
fstpl
push
lea
xor
shlb
push
jg
cli
lock
popa
iret
shlb
das
cmp
mov
jp
dec
cs
out
sub
mov
daa
ficompl
or
xor
adc
movsb
or
sub
dec
xchg
sub
in
lods
aaa
inc
mov
scas
lds
mov
adc
adcb
out
add
mov
adc
adc
jecxz
xchg
fs
cwtl
jg
scas
mov
lods
call
pusha
xchg
push
adc
rcrb
imul
adc
inc
xchg
cmpsl
add
fcmovnb
repz
pop
xor
imul
pop
insl
ret
test
mov
adc
mov
loopne
cmp
aas
je
or
cmpb
xchg
sti
dec
inc
sub
or
inc
xor
decb
and
in
cmp
bound
pop
xchg
movsl
and
lcall
call
adc
shl
and
test
pop
bound
cmp
dec
mov
cltd
stos
cwtl
lret
lds
adc
in
stc
popl
and
stc
add
rorl
sub
xchg
push
stos
or
jnp
cmp
xor
dec
shrb
pop
jg
popf
gs
add
and
and
xchg
je
sbb
xlat
inc
mov
je
rolb
and
int
adc
or
mov
lods
into
push
mov
loop
ja
jae
loopne
xchg
add
xchg
js
mov
es
and
adc
shll
pop
dec
adc
and
xchg
pop
std
push
dec
adc
adc
cmp
xor
jl
dec
incb
xchg
mov
insl
mov
jnp
mov
subl
out
push
push
cwtl
jne
sbb
push
push
daa
mov
xor
fsub
cmp
or
fiaddl
sub
repz
sub
outsb
in
enter
movsb
call
sub
cli
push
or
jmp
and
xor
xor
cmp
pop
nop
fdivp
mov
je
xchg
lods
testb
and
dec
out
out
stos
in
ljmp
fucom
loopne
popf
mov
sbb
xchg
sub
fildll
scas
in
mov
gs
mov
pop
mov
inc
or
stc
pop
jbe
lret
pop
dec
pushf
push
inc
jge
or
js
pop
aas
mov
xchg
jmp
cmpsb
inc
sbb
add
vpslld
push
push
test
dec
pop
cmovle
outsl
das
inc
adc
mov
js
add
jp
inc
ja
je
lahf
add
mov
mov
xchg
ret
or
sub
bound
leave
inc
in
push
insl
ja
pop
fld
xchg
push
sbb
in
xor
inc
cltd
pop
push
das
cmp
je
idivb
mov
xor
inc
movsl
aaa
insl
enter
movsl
push
dec
jae
sbb
mov
pop
ret
sub
push
sahf
ljmp
test
dec
xchg
sbb
inc
inc
adc
adc
mov
es
add
sbb
test
xchg
or
cmpsb
je
in
and
clc
shlb
lea
decl
sub
xchg
mov
sbb
sub
cltd
push
lret
out
shll
xchg
or
insb
and
jnp
sbb
out
xor
sbb
sub
xor
xchg
js
test
loopne
xchg
sub
push
fcoml
and
adc
jbe
popa
lcall
fidivrl
jle
arpl
mov
xchg
std
fsubrs
repnz
aaa
insl
adc
shl
push
or
cmp
jg
bnd
jmp
pop
sub
jns
fildl
sub
adc
pushf
push
int
pop
int
fxch
movb
bound
mov
mov
and
mov
mov
dec
inc
xchg
lds
divb
sbb
push
lea
loopne
pop
arpl
outsb
sbb
inc
shll
shrb
movl
popf
stc
sbb
xlat
and
dec
jle
cmp
dec
lods
jo
orl
cmp
add
test
popf
adc
xchg
icebp
shrb
mov
add
xchg
imul
jmp
pop
in
push
movsl
movsl
mov
in
fisttpll
xchg
adc
add
mov
mov
push
or
xor
mov
xchg
imul
sbb
sub
ds
cmp
pop
xchg
xchg
pop
dec
or
push
pop
lret
xor
adc
pushf
and
dec
mov
add
sbb
mov
or
dec
push
call
push
xor
outsl
xor
pop
xchg
xchg
sub
jnp
mov
or
sbb
and
dec
push
dec
out
pop
lock
push
cmpsb
push
pop
mov
fiaddl
or
cmp
xor
pushf
adcb
das
mov
adc
gs
popl
cmpsl
or
pop
xlat
sarb
in
repnz
dec
gs
ljmp
std
mov
sub
insl
mov
out
nop
lock
dec
cmp
inc
dec
mov
add
push
fptan
mov
sbb
jmp
js
sbbl
icebp
jno
push
cmpsl
push
ja
or
imul
shrb
push
cmp
inc
jmp
sbb
add
mov
cmp
and
xor
loopne
mov
test
fs
pop
fs
loop
test
mov
stos
aaa
in
pop
add
ja
add
sbb
dec
sbb
cmp
add
xchg
fiaddl
pop
jae
sahf
lret
add
sbb
lods
xor
mov
mov
pop
sub
pmaxsw
orl
lods
in
pusha
dec
xor
adcb
mov
sbb
xlat
jnp
es
scas
sarb
and
or
sti
inc
fdivr
imull
adcb
stos
jo
data16
pop
fwait
ss
push
stos
jecxz
mov
sub
inc
scas
and
pop
int
sbb
xor
in
inc
add
sbb
fildl
and
into
fdiv
cli
scas
in
pop
jno
dec
out
loope
inc
sarl
nop
mov
rcrl
setnp
fists
pushf
cmp
ja
aad
xlat
ljmp
push
inc
repz
jle
cmp
out
jecxz
data16
test
dec
mov
shr
int
test
imul
xchg
mov
or
mov
imul
hlt
mov
jbe
dec
test
dec
mov
lods
pop
outsl
add
sub
int
adc
ss
aad
and
stos
mov
mov
dec
pusha
rorb
inc
xor
mov
mov
inc
scas
jns
jmp
cmp
mov
xor
push
in
xchg
xor
aas
mov
push
push
out
jnp
std
and
icebp
cmp
pop
ret
test
adc
pop
or
sub
hlt
aas
and
or
xor
out
fwait
xchg
jo
shlb
mov
or
mov
mov
mov
int
inc
cmp
mov
pop
xchg
inc
jmp
xchg
inc
add
aaa
pop
inc
mov
adc
pop
nop
or
out
imul
jno
xchg
lods
mov
push
jmp
or
jno
pop
clc
mov
stc
mov
rcrl
jae
mov
imul
pushf
vhsubps
xchg
das
cmpsb
dec
std
or
ljmp
sbbb
push
ror
sbb
and
shlb
xor
faddp
icebp
jno
inc
add
cltd
addr16
in
inc
inc
pop
int
imul
xor
xor
in
jne
loopne
push
mov
in
pop
bound
in
jl
out
pop
mov
add
mov
sti
sub
add
insl
push
xlat
push
cld
mov
and
sbb
insb
das
inc
lahf
mov
inc
or
and
or
lds
sbb
cli
js
push
inc
aad
pop
pop
daa
nop
outsb
dec
xchg
pop
scas
mov
mov
mov
fildll
or
es
adc
jg
lcall
enterw
call
mov
stc
xor
push
jl
pusha
lret
stc
xor
shr
add
dec
adc
cmc
lea
dec
cmp
push
push
enter
mov
sbb
pusha
andb
sub
mov
push
add
lcall
xlat
mov
pusha
jbe
nop
and
sbb
ljmp
adc
xchg
xchg
xchg
mov
jo
test
leave
mov
xchg
jns
outsl
and
cmp
add
and
add
pushf
and
jp
sub
add
testb
ljmp
sbb
jne
sbb
imul
mov
aam
cli
fdivrp
mull
dec
mov
fcomi
pop
lahf
js
xchg
mov
xor
cs
pop
mov
dec
sbb
add
outsl
jbe
or
adc
push
aas
and
sbb
int3
pop
lret
lret
sarb
shl
add
shrl
push
out
xlat
lea
jp
sahf
fcoml
ds
sbb
add
std
sbb
test
mov
sub
rcl
scas
cmc
pop
add
pop
ja
dec
mov
mov
cmp
popaw
in
pop
out
stc
xchg
sbb
jmp
addl
push
les
stos
insl
fists
mov
xor
ja
movsl
stos
fmul
clc
push
xor
cld
int3
pop
pop
adc
cmp
test
sub
jmp
pop
repnz
jmp
mov
xor
sbbl
outsl
jae
das
nop
es
mov
or
in
cmp
cmpsb
cmp
fistpll
push
in
dec
das
xchg
push
sbb
mov
push
cmc
jns
cmp
cli
ljmp
stos
pop
adc
cltd
push
cmpsl
sub
es
mov
or
pop
sahf
xchg
adc
stos
jns
cvtdq2ps
je
lea
dec
cmp
in
jne
or
fwait
sbb
loop
mov
call
mov
shlb
test
dec
lds
jb
ljmp
xor
pop
xor
ljmp
sbb
in
mov
sbb
outsb
lret
lds
cmp
aas
mov
sahf
and
pop
test
sbb
leave
and
adc
xchg
adc
jno
negl
pop
xor
mov
push
sbb
mov
sub
jmp
jg
xor
js
push
mov
inc
pop
pop
jmp
xor
fistpll
imul
jae
pop
xchg
aam
cwtl
hlt
hlt
fisttps
dec
out
data16
sbb
xchg
stc
enter
inc
das
int3
movsl
jno
fcoms
cmp
mov
arpl
lds
push
add
movl
jb
mov
inc
adc
and
xchg
mov
xor
or
ret
ss
mov
pop
inc
mov
nop
push
sti
and
xor
shlb
mov
into
cli
add
xlat
daa
push
dec
insb
fcomi
inc
push
test
cltd
jl
sahf
ljmp
int3
gs
jb
push
icebp
mov
clc
pop
mov
aas
out
sbbb
sahf
iret
dec
dec
test
cmp
or
jno
mov
pop
xchg
jmp
dec
movsb
and
in
int
dec
add
and
dec
sti
iret
mov
inc
pop
mov
push
lods
dec
xchg
add
insl
loop
sub
popa
fisttps
loop
pop
lods
inc
add
cmp
aam
push
cwtl
pop
movsb
nop
inc
ficomps
data16
insl
test
sub
adc
ljmp
and
out
std
sub
adc
aam
cmp
mov
push
cmp
add
aam
add
mov
adc
ja
mov
mov
dec
cmpsl
outsl
rcr
scas
loop
repz
add
mov
popf
ss
ds
add
ljmp
adc
inc
pop
push
adcb
cmp
dec
mov
daa
sub
pop
push
pop
jbe
pop
in
test
repnz
ret
into
popa
dec
outsl
ja
push
lret
out
inc
hlt
push
jl
cmpsl
pop
mov
lahf
testl
out
cmpsb
popa
inc
testb
sub
insb
xchg
add
clc
inc
ljmp
pop
adcl
jno
ror
dec
cmp
clc
sub
push
ds
push
sbb
gs
stos
xlat
es
rclb
xchg
aam
xchg
mov
xchg
mov
repz
add
nop
mov
cmp
popf
mov
mov
cmpsb
adc
sbb
popf
jne
add
hlt
adc
push
xchg
imul
and
jmp
xchg
repnz
lods
imul
and
push
test
dec
xor
inc
insl
cmp
push
inc
stos
mov
mov
mov
or
lea
sbbl
lcall
and
mov
mov
test
push
and
push
test
xor
and
inc
in
mov
push
test
dec
orl
lcall
pop
out
lock
jl
push
sub
shll
pop
inc
sahf
in
xor
test
js
xchg
dec
adc
movsl
add
mov
lods
pop
out
pop
dec
out
cld
jg
mov
sbb
ds
push
mov
btc
shrb
xorl
xchg
mov
fdivs
xchg
fs
lret
insb
push
jg
and
cli
ret
ss
xor
imul
inc
fdivl
jl
mov
dec
cmpsb
js
lret
or
and
push
jb
xor
clc
popf
pop
cmp
mov
pushl
js
hlt
add
mov
cmpsb
adc
pop
and
and
and
or
test
add
jb
loopne
sub
das
jns
shlb
les
popf
jno
mov
mov
push
scas
xor
inc
outsb
mov
xor
mov
in
notb
pop
gs
sub
push
push
imul
cmp
mov
mov
mov
xor
movl
mov
pushf
mov
mov
in
fwait
cmp
inc
push
xor
jbe
aas
sbbl
xor
pop
and
and
test
shll
or
jae
xor
loope
addr16
fnstenv
or
mov
inc
jecxz
cmpsb
pop
das
xchg
int
and
mov
add
test
mov
add
cwtl
filds
jg
adc
dec
xchg
cmpsb
push
cli
int3
faddp
je
dec
jnp
add
dec
dec
mov
sbb
mov
push
jl
mov
xor
push
lds
in
idiv
adc
sahf
or
bound
js
jge
adc
inc
mov
jmp
psubb
aad
jns
push
push
dec
es
lods
aaa
adcb
cmp
insl
xor
mov
xor
insb
adc
iret
loop
sbb
cmpsl
pop
fnstsw
insl
lock
xor
test
cmp
push
xor
repnz
fdiv
sti
gs
ret
cmp
sub
cmp
and
push
test
ficomps
faddp
add
insl
dec
mov
sbb
xchg
sub
stos
pop
dec
sbbb
lcall
sub
and
dec
mov
ds
je
cmp
adc
mov
orb
jno
jno
push
sbb
mov
push
pop
pop
int3
mov
cmp
shll
cmp
sub
inc
lret
mov
push
mov
cmp
rorl
fiaddl
sarb
xchg
lock
jnp
pop
test
addr16
sub
fildll
sbb
mov
xor
repz
fidivs
cmc
mov
gs
xor
loop
pop
insb
rolb
imul
add
push
loop
dec
aas
add
cmpsb
adc
mov
mov
sbb
xor
ja
cmp
cmp
adcl
outsb
pop
fmull
push
out
xor
in
stc
inc
xor
outsl
sbb
daa
stos
or
cmc
jo
addb
dec
jp
sbb
dec
iret
imul
imul
icebp
jmp
in
testl
mov
xor
neg
xor
daa
adc
dec
mov
mov
adc
sbb
test
out
dec
fwait
lret
ret
mov
std
lock
sbb
mov
push
cmpsb
mov
dec
push
in
push
int
jb
cmp
cmp
test
aas
mov
xchg
mov
mov
sbb
push
lahf
out
cmpl
psrlq
push
fdivs
faddl
cmp
jge
aaa
jbe
mov
push
cmp
repnz
mov
pop
test
hlt
jp
dec
or
add
or
jle
stos
stc
aam
push
iret
test
cwtl
xor
or
sub
std
pop
fistps
or
sbb
cmpsb
aam
and
xchg
xor
dec
or
dec
dec
add
push
xchg
int
pop
push
add
push
int
cmp
xor
sub
imul
mov
fcmovnu
cmp
xor
or
sbb
insl
out
xchg
mov
into
popa
dec
dec
xchg
shl
fsts
aad
mov
cmp
icebp
stos
dec
pop
lods
inc
sub
loope
iret
out
and
in
pop
outsl
out
jle
repz
and
cwtl
fs
test
xlat
std
mov
push
imul
rcrb
push
in
xchg
cs
or
xchg
mov
jno
pop
imul
cltd
loop
dec
adc
in
xor
push
call
lahf
fdivp
mov
add
pusha
sbbb
and
jae
sbb
icebp
lahf
pop
sbb
xchg
mull
mov
adc
mov
lea
mov
cmc
arpl
xor
pop
popa
jle
popf
shrb
repz
cmp
pop
rorb
pop
or
push
stc
pop
cmovl
lea
in
out
idivb
sbb
add
fwait
movsl
push
mov
lret
lret
jno
mov
pushf
pushf
into
dec
mov
push
push
xchg
add
jo
pop
jl
into
pusha
nop
int
in
sub
xchg
nop
inc
les
lock
testl
mov
add
mov
sub
mov
and
mov
sbb
out
adc
adc
mov
adc
xchg
insb
arpl
xlat
push
ss
lret
aam
fcoml
dec
gs
jb
xor
add
pusha
add
div
xchg
adcl
push
pop
pop
pop
aam
mov
and
ret
dec
or
loope
pop
out
movsb
push
mov
cmp
lds
fnsave
pop
xlat
pop
popa
dec
in
cmpsb
sub
mov
sbb
mov
in
aam
lret
std
clc
xchg
lret
jp
rcll
fcomps
loopne
fadd
into
or
xor
out
inc
inc
adc
outsb
push
sub
mov
pop
rolb
syscall
xor
mov
out
icebp
cmp
xor
add
xchg
push
push
push
movsb
and
cmp
mov
xor
mov
and
test
push
rcl
in
lock
fisttps
imul
add
mov
jne
dec
pop
push
lret
mov
cmpsl
xor
xor
lods
andl
gs
jb
ja
or
jg
ffreep
cmp
aaa
dec
or
out
cmp
pop
ret
inc
test
fwait
sub
jg
cld
fs
sub
or
lock
or
loope
mov
xchg
fadds
aad
cmp
and
push
sub
dec
adc
jb
xchg
ret
jb
push
std
adc
ljmp
fsub
sbb
xor
in
sub
xchg
sbb
adc
add
push
aam
lods
rorl
orl
push
sbb
add
xor
bswap
adc
movsl
add
iret
push
fs
pop
xor
mov
add
ret
aam
out
dec
outsb
movsb
sbb
xor
lea
pop
pop
hlt
mov
sub
dec
jmp
sub
jmp
pop
scas
jbe
das
nop
adc
adc
icebp
negb
cmp
inc
sbb
ljmp
adc
inc
clc
jnp
jae
movsb
hlt
add
int3
mov
mov
jno
popa
or
in
cmc
inc
lock
ss
mov
xchg
mov
xor
mov
jmp
lahf
outsl
fisubrl
cli
mov
add
mov
cltd
sub
arpl
mov
mov
mov
in
adc
scas
pusha
xchg
push
mov
mov
out
xchg
inc
ret
int
jg
xchg
scas
daa
popa
jbe
pop
ljmp
lea
adc
jb
imul
call
mov
dec
sub
pop
pop
mov
cs
hlt
std
cmp
xor
sbb
mov
sbb
stos
in
pop
cwtl
test
loop
xlat
push
push
mov
shll
negb
fucom
push
or
sub
pop
or
jne
in
lods
insl
jmp
push
xor
subl
sahf
je,pt
or
pop
sbb
xchg
and
pop
rolb
std
fdivrp
daa
dec
ss
mov
jns
clc
fwait
aaa
pushf
jg
iret
xchg
pop
popa
adc
add
push
add
nop
sbb
out
jp
mov
mov
lods
pop
loope
jge
inc
add
inc
push
sub
imul
loopne
pop
adc
lcall
adc
mov
outsl
jns
pop
dec
cmp
mov
das
cmp
inc
cmp
popa
fcomps
sub
mov
push
mov
mov
add
pushl
sub
add
mov
pop
in
fistl
xchg
decb
and
test
mov
shlb
ds
addb
lahf
xchg
pop
subl
andb
xor
sbb
movsb
mov
push
les
scas
mov
cltd
jmp
dec
in
iret
jl
sahf
test
mov
add
push
cltd
cmp
or
iret
in
adc
mov
loop
daa
fdivr
outsl
clc
mov
push
ss
stos
lcall
pop
cmp
and
inc
mov
and
repz
mov
push
adc
pop
bound
hlt
fwait
inc
dec
rcrb
lcall
adc
xchg
and
jne
and
mov
sbb
jecxz
sub
xor
jp
sti
mov
je
or
push
sub
addr16
test
dec
imul
inc
push
repz
and
imul
or
das
fsubs
add
adc
or
add
add
fstl
repz
pop
dec
sbb
addr16
lret
push
fldl
movl
push
gs
add
lods
lret
imul
jb
xor
pop
mov
int3
je
in
mov
gs
xlat
popf
adc
adcb
and
nop
popa
lret
xchg
lds
add
mov
xchg
jle
xchg
loopne
test
lock
aad
jae
cmpsb
pop
dec
jo
push
push
shll
lcall
out
stos
cmp
mov
ljmp
pusha
mov
sbb
and
or
or
fwait
hlt
jnp
popf
and
mov
cltd
mov
daa
adc
ljmp
bnd
test
test
and
sbb
jne
in
ss
fildl
mov
movl
pop
cli
fisttpll
aam
popa
xchg
repz
inc
mov
xchg
xchg
cmc
sub
stos
or
mov
pusha
inc
nop
rcl
dec
push
xor
ret
std
xor
mov
fistpll
pusha
scas
mov
mov
pop
idiv
test
sub
cmc
mov
push
pop
mov
aaa
repz
rcr
stos
into
inc
or
push
subl
jge
jns
push
call
xor
icebp
cmp
sbb
jbe
aas
hlt
movsl
int
mov
adc
mov
pop
add
sub
mov
and
loopne
cltd
in
adc
adc
jno
mov
cmpb
jbe
mov
leave
jns
aam
clc
sbb
jp
push
shl
inc
push
jmp
push
mov
cmpsb
push
les
jecxz
ds
insl
popf
ljmp
inc
and
or
movsl
add
in
mov
cmp
dec
mov
shlb
imul
pop
inc
or
cmp
sbb
jg
mov
int
cmp
pop
push
insb
std
les
in
outsb
jb
push
imul
sub
jno
mov
cmp
fcoml
pop
out
adc
xchg
adc
push
jo
iret
into
inc
sub
inc
mov
dec
outsl
jno
sbbb
xchg
aas
jp
jle
das
insb
out
les
cmpsb
and
mov
cmp
jl
pop
inc
in
dec
sbb
imul
and
adc
rclb
mov
xlat
pop
mov
mov
cmp
lret
adc
pop
fwait
aam
sub
add
xlat
movsb
mov
sub
aam
mov
xchg
pop
addr16
loope
mov
jb
push
pop
lea
bound
xlat
rcr
sbb
cmc
or
in
pop
aam
aas
jb
cmp
dec
add
int3
push
adc
inc
lock
mov
or
js
into
hlt
push
adc
xor
jge
inc
mov
mov
inc
mov
call
pop
jo
sub
jp
and
xchg
xchg
adc
sbb
mov
shlb
pushf
jl
cltd
scas
and
xor
jbe,pn
sub
mov
and
push
sub
jae
orl
lods
call
push
and
imul
xor
shrl
and
fwait
aas
repnz
dec
mov
rcrb
and
add
test
jp
pusha
je
test
jp
aad
movsb
push
inc
add
and
fstps
sbb
out
ja
dec
push
pop
mull
sti
or
mov
xor
adc
jmp
add
adc
jno
push
push
ja
cli
aaa
leave
or
jecxz
in
add
push
add
xchg
push
lock
jne
pop
cli
clc
mov
decl
mov
adc
sub
cmovb
iret
inc
daa
sbb
mov
in
stos
das
inc
mov
cmc
call
fyl2xp1
js
add
push
aam
movb
inc
add
stos
xor
jg
push
or
aas
jl
sbb
inc
cwtl
sub
mov
jno
mov
mov
push
inc
or
adc
sub
jl
int
ljmp
mov
and
icebp
insb
hlt
inc
dec
test
jle
mov
in
push
cmp
lea
repz
push
jecxz
sbb
nop
leave
fs
aaa
push
or
invd
insb
les
mov
daa
ret
push
push
outsl
imul
mov
mov
or
addb
cmp
out
sti
or
pop
jbe
dec
je
sub
mov
dec
cltd
in
aaa
jo
rorl
sbb
lcall
outsl
cmc
loop
pop
sub
lahf
lahf
popf
adc
cmp
insb
mov
adc
movsl
mov
ret
cmp
out
inc
mov
sbb
mov
dec
jle
lret
xchg
add
pop
push
mov
jecxz
or
mov
decl
jg
and
int3
dec
cwtl
or
insl
mov
jo
mov
jge
mov
lea
ficompl
xor
pop
fstpt
sahf
dec
outsl
jnp
dec
push
test
push
cs
hlt
mov
xorl
mov
cmpsl
push
mov
lock
push
or
sub
dec
rol
pusha
adc
sub
mov
iret
jns
aaa
call
invd
mov
dec
xor
adc
sub
std
dec
call
dec
pop
out
xchg
imul
hlt
scas
sub
je
mov
adc
push
imul
cmpb
jecxz
dec
shr
aas
dec
jnp
pop
movsl
cltd
das
mov
test
stos
idivb
ljmp
scas
clc
cli
clc
fnsetpm(287
mov
dec
nop
fimuls
cmp
dec
call
popf
jno
nop
jg
sti
mov
inc
dec
or
in
int
fmul
roll
cld
ficoml
lock
rcll
mov
in
push
or
lahf
ss
dec
call
roll
sbb
cmp
add
sbb
addr16
in
sub
aam
add
ror
sub
call
lahf
imul
out
aam
and
or
dec
mov
test
and
rorl
inc
or
aad
mov
pop
jns
insb
mov
inc
mov
loope
jnp
dec
gs
mov
outsb
aad
aaa
and
mov
cld
fstps
out
sbb
adc
lret
and
stos
out
xor
add
add
xor
jl
cwtl
mov
inc
lret
xchg
cmp
cmp
jg
mov
sbb
cli
mov
lds
movsb
repz
mov
int
xor
mov
cs
sub
std
shll
sub
mov
outsb
push
xor
xor
cmp
push
pop
or
jge
aas
cmp
push
orl
aad
lcall
jecxz
test
add
cld
ja,pn
nop
mov
xor
fs
sub
mov
xor
inc
pop
js
imul
inc
fs
xlat
jo
dec
das
jo
sub
js
jno
mov
pop
es
fcomps
ljmp
sbb
jae
cld
push
xchg
cli
leave
stc
test
loop
outsl
and
and
popa
sbb
aam
cwtl
or
jge
in
mov
dec
loope
cmp
add
xchg
adc
cmp
jg
popf
cld
pop
push
movsl
sbb
add
pop
mov
jae
push
jp
jp
pop
adc
dec
jnp
insl
cmp
insb
or
inc
iret
inc
int
lods
xor
lods
daa
cmpsl
jmp
pop
adc
sbb
lods
mov
add
les
push
dec
sahf
stc
aam
xor
jb
pusha
ss
add
and
xor
adc
dec
ss
push
mov
jmp
jle
sbb
xchg
ror
cld
dec
addr16
sbb
shl
rcl
shr
in
push
mov
ljmp
mov
ret
fs
xor
scas
jne
pop
mov
in
jmp
mov
test
adc
mov
jne
movsb
jmp
fmull
sbb
jecxz
xchg
lock
arpl
loopnew
daa
sub
int
shll
mov
sub
fsqrt
sbb
jbe
mov
adc
ss
rolb
ret
and
aaa
enter
inc
pop
sbb
pop
mov
rcr
or
icebp
addr16
rol
push
pop
cmp
and
adc
outsl
and
rolb
dec
pop
faddl
scas
dec
push
or
inc
test
mov
pop
pop
loopne
mov
push
xchg
iret
pop
shlb
jb
mov
lds
push
xor
call
add
imul
push
pushf
xor
dec
cmp
fwait
sti
lret
add
movsl
push
push
arpl
into
xchg
push
xlat
adc
push
cmp
jge
inc
jo
pop
dec
jge
push
lods
and
stos
or
mov
test
jo
pop
jo
dec
push
jle
outsl
push
jnp
jns
push
fucomp
lods
xchg
adc
mov
pop
or
pop
in
cltd
xchg
add
inc
fistpll
xor
add
js
push
imul
fcom
call
ja
cwtl
int3
pop
popf
loopne
shrb
mov
mov
je
loope
mov
scas
jae
aam
outsb
scas
xor
adc
mov
into
pop
xchg
insl
push
sbb
xchg
subl
ja
sarb
sbb
xor
icebp
icebp
lcall
adc
jle
mov
je
into
jnp
arpl
and
sbb
dec
fs
and
pop
adc
pop
inc
xor
jmp
outsl
imul
push
mov
inc
out
cmc
add
out
cmp
cmp
call
push
stos
rorb
out
inc
sbb
dec
fildl
call
fs
pop
lods
fimull
clc
mov
les
fnstcw
inc
mov
lds
inc
sub
adc
push
pop
add
dec
outsl
sub
xor
adc
mov
movsb
cwtl
mov
jbe
lea
popf
pop
in
cmp
push
push
in
in
enter
dec
and
ds
sahf
push
mov
pop
mov
leave
jmp
lods
mov
cmp
aaa
jp
add
sbb
insb
jecxz
mov
inc
sarl
fiaddl
pop
or
pop
test
push
in
mov
loope
push
jge
mov
dec
addl
pop
rcll
iret
movsl
mov
add
ljmp
insb
mov
inc
out
adc
movsl
add
sbb
inc
les
lahf
shrl
in
and
pop
mov
or
div
lods
pop
mov
jmp
add
push
pop
ficoms
cli
pop
or
add
rcll
loop
mov
mov
sbb
mov
jge
lcall
xor
movsb
mov
push
and
lcall
and
or
ljmp
daa
pop
enter
sub
imul
loope
ja
xchg
push
and
lods
lea
mov
mov
lret
ror
ja
pop
lock
dec
push
call
jmp
add
mov
test
inc
ror
out
les
pop
push
outsl
or
mov
mov
mov
xchg
or
and
cmc
cmp
add
xor
add
insl
insl
lods
test
icebp
aaa
lahf
dec
in
lods
lret
mov
sbb
aas
or
mov
push
in
popf
dec
pop
insb
push
mov
push
inc
jo
jns
mov
mov
dec
int
pop
int
arpl
add
xchg
or
test
mov
xor
enter
dec
jl
inc
in
or
add
shll
addb
call
jle
xlat
fstpl
add
cmp
std
leave
and
inc
and
sub
incb
in
push
pop
cmp
and
es
adc
mov
push
cmp
xor
hlt
xor
mov
pop
adc
cltd
inc
sub
xor
push
scas
jl
sbb
imul
insb
adc
push
xchg
mov
test
call
xor
mov
iret
aaa
fdivl
cmp
iret
inc
and
jne
aas
mov
add
jl
sbb
dec
arpl
scas
xor
pushf
test
aaa
xlat
call
jne
pop
std
loop
xchg
in
int3
int
roll
cld
into
ret
xchg
pop
adc
enter
mov
mov
xor
push
mov
outsb
push
lcall
or
jp
pop
ds
xlat
movsl
xor
daa
pop
push
cmp
xor
push
ds
and
xchg
add
in
sub
mov
sbb
clts
je
out
out
sbb
jb
mov
mov
iret
xchg
pop
pop
sbb
in
and
stos
inc
ror
mov
dec
push
sbb
stc
mov
repz
lret
xor
or
mov
daa
mov
test
int
insb
notb
sbb
jl
repnz
rorl
shl
mov
xchg
cmp
mov
cmpsb
aaa
out
cld
sahf
comiss
popa
daa
mov
adc
les
mov
hlt
fs
cld
xchg
add
cmp
xor
scas
xor
mov
jmp
cltd
push
pop
mov
psubsb
stos
and
jns
leave
out
insb
mov
int3
xor
mov
pop
push
les
lods
xor
jbe
push
ss
jl
repnz
mov
in
xor
stos
adc
xor
fcomps
out
lock
lahf
push
lods
mov
push
sbb
jg
lds
xchg
cmc
xchg
cs
movl
xchg
sti
sbb
cmp
les
mov
mov
ret
push
pop
popf
inc
mov
test
push
inc
lcall
fbstp
mov
rcl
sub
dec
pusha
xor
inc
frstor
fisubs
in
pop
xor
ja
fbld
sbb
ud2
sbb
cmpsl
in
lds
jl
dec
aas
je
std
popf
adc
mov
push
jecxz
lea
or
aas
dec
adc
and
sahf
scas
imulb
int
cmp
cmp
sub
and
ljmp
ror
test
jnp
and
std
xor
sbb
leave
mov
inc
push
mov
or
call
les
out
mov
cld
sti
pop
mov
xorl
push
pop
int
fildll
push
and
loopne
sub
xor
jmp
jge
xchg
mov
stos
mov
cmp
sti
jmp
adc
pop
les
fimuls
cwtl
ljmp
add
or
in
pop
and
loop
or
push
mov
mov
aaa
ret
faddp
pop
inc
mov
jp
mov
outsb
or
sbb
jle
ss
pop
mov
xchg
mov
test
push
mov
or
mov
cmp
fs
mov
movsb
arpl
aaa
loop
outsb
popf
cmp
aas
add
out
daa
push
test
and
cmpsb
data16
loopne
imul
test
or
mov
scas
jecxz
aas
xchg
es
je
bnd
mov
add
inc
pop
mov
mov
adc
xor
xlat
das
mov
fs
pop
pop
scas
push
movsb
enter
xor
or
sub
test
mov
inc
cmpsb
mov
pop
lcall
stos
insl
repz
pop
cmpsl
stos
call
test
or
xchg
movsl
mov
cwtl
outsb
add
adcl
test
jo
in
or
shll
push
jmp
leave
sub
mov
push
add
popf
outsb
mov
ljmp
scas
pushf
subb
in
and
inc
mov
out
rolb
dec
sbb
pop
movsb
or
testl
scas
int3
test
sub
shll
flds
repz
pop
jmp
aas
cli
sbb
ja
mov
jecxz
mov
pop
test
add
into
dec
mov
and
push
stos
insb
mov
dec
notb
pushf
rorl
or
fisubrl
or
mov
adc
mov
or
xor
push
adc
sub
push
cli
jmp
jmp
jmp
add
xlat
xchg
outsb
dec
fldl
lahf
pop
int3
gs
sahf
dec
push
push
fmull
dec
mov
mov
inc
mov
das
aaa
mov
int3
or
and
dec
push
or
inc
pop
or
mov
xchg
test
inc
out
hlt
jno
popf
and
dec
add
push
loop
insb
jbe
xchg
and
lahf
movb
xchg
push
daa
xchg
mov
aas
outsl
mov
dec
stos
in
add
sub
std
inc
mov
pop
les
mov
mov
in
imul
jmp
out
mov
sbb
sub
push
popf
mov
loopne
xor
xchg
stc
push
inc
mov
and
out
or
adc
mov
add
or
jg
cmpsb
mov
lcall
out
cmp
test
cs
push
xor
and
loop
popf
into
sub
mov
xchg
lock
push
jmp
fstpl
jb
shrb
dec
rolb
cmp
adc
aaa
mov
call
int3
test
pop
dec
push
jns
orb
das
and
das
cmp
out
fwait
xchg
sub
enter
dec
imul
jmpw
adc
lcall
add
and
or
addr16
test
pusha
fsts
mov
loope
iret
xlat
jg
pop
mov
pop
add
cmpsl
lret
sub
or
shlb
mov
mov
in
das
out
movsb
jle
ss
stc
mov
addr16
inc
jmp
repnz
jae
ret
daa
xor
addl
sbb
lock
shrl
mov
movsl
pop
shll
inc
loopne
mov
mov
je
rolb
jg
pushf
ljmp
dec
or
sbb
fidivs
or
pop
sub
clc
sub
scas
outsl
popa
mov
stc
faddl
popa
push
leave
push
xchg
insb
hlt
adc
cmp
cmpsb
adcl
sbb
jo
push
shrb
sub
shlb
adc
outsb
dec
hlt
scas
or
xor
sbb
xchg
pop
stc
fwait
arpl
push
or
fisubs
outsl
sub
jno
pop
loope
lahf
and
mov
xor
cmp
notl
lahf
dec
cltd
cmp
sub
pop
test
jno
out
ret
fbld
les
lret
or
imul
add
xor
mov
incl
push
je
xorl
es
cmc
sub
lds
popf
xor
push
pop
shl
adc
push
sbb
mov
pop
addl
mov
add
sbb
mov
fnsave
push
in
push
icebp
rcll
jp
and
sbb
xlat
repz
std
mov
or
mov
not
inc
push
mov
dec
inc
aad
arpl
sbb
add
jge
fmull
lods
outsl
imul
mov
cli
mov
mov
jno
fisubrl
jle
jmp
dec
mov
jns
je
push
ror
out
pushf
fwait
cmp
xor
or
insb
insl
hlt
cmp
inc
adc
adc
outsl
or
xchg
inc
xlat
ret
adc
xor
adc
cmpsb
xor
jb
pop
lcall
popf
sti
pushf
inc
mov
iret
pop
lcall
add
clc
dec
push
test
dec
jecxz
push
sbb
or
mov
imul
into
pop
mov
mov
push
fwait
sahf
adc
cmpsl
sti
mov
lea
shll
mov
jp,pn
call
out
fwait
cmp
sbb
ja
push
cltd
nop
pop
mov
and
loopne
movzwl
or
lahf
cmp
lds
dec
outsb
fisttps
adc
sub
aad
mov
addr16
sbbb
add
adc
test
dec
mov
dec
sub
sub
enter
add
push
add
mov
inc
call
sub
testb
incb
or
pop
lds
adc
mov
push
fldl
jecxz
xchg
mov
xor
insb
mov
or
mov
ljmp
jnp
es
mov
xchg
or
adc
mulb
fdivrs
out
push
jp
pop
insb
push
pop
push
xchg
iret
jecxz
cli
mov
ss
imul
xchg
add
mov
jne
les
outsb
imul
into
test
int
or
imull
js
fdivl
pushf
xchg
fwait
or
or
push
shll
cmp
jno
fldl
lock
sahf
mov
pop
mov
in
popa
dec
cmp
jg
fcomps
sub
sub
lret
jae
in
lds
or
daa
test
push
inc
add
push
jnp
aad
and
stos
pop
add
rcll
call
andb
rclb
aaa
push
and
add
lea
ja
jmp
pop
inc
mov
int
sub
cmp
and
fwait
pop
fmull
inc
scas
jne
repz
fsts
dec
pop
xor
sub
fcoml
insb
lds
cmp
jecxz
orb
cmpsl
in
imul
out
lods
xor
cmc
mov
pop
mov
mov
mov
test
xchg
mov
scas
mov
test
push
mov
jecxz
fs
jno
xor
mov
cs
dec
push
inc
lret
out
leave
lds
cwtl
jl
mov
pop
ret
lret
mov
ret
push
popf
and
xchg
inc
jae
sbb
pushf
je
fnstcw
jno
sub
or
pop
jle
cmp
jge
sarl
sahf
adc
jns
stos
mov
into
in
pop
add
add
sbb
or
mov
sub
add
in
mov
mov
lcall
mov
enter
and
out
sbb
fcmovnu
sub
mov
js
xor
aaa
mov
in
jg
push
push
mov
pop
inc
cmp
inc
mov
xor
lods
fnstsw
ja
add
sub
dec
jp
sub
ljmp
ret
into
je
sub
mov
std
loopne
or
sub
mov
xor
mov
or
add
add
push
dec
in
nop
cmp
add
stos
sub
leave
stos
mov
sarl
sub
je
clc
scas
lcall
aad
and
sahf
push
sbb
inc
rcll
aaa
cltd
add
fidivrl
mov
ret
out
push
inc
rcll
jb
mov
mov
inc
mov
cmpsb
cli
adc
pusha
pop
or
cmp
fwait
pop
lret
mov
dec
insb
jns
push
xchg
cmp
les
adc
fnstenv
inc
icebp
jno
xorl
iret
jmp
ljmp
cmpsb
lds
mov
fdiv
lods
jno
cld
stos
insl
dec
add
in
movsl
popa
call
add
test
fdivrl
cmp
dec
pop
push
jne
mov
xchg
loop
cmp
lahf
mov
sbb
mov
add
test
sub
or
cmp
cmpsb
mov
xchg
imul
xor
insl
adc
sub
adc
movsb
push
loopne
pop
jbe
inc
pop
or
jle
lds
and
inc
sbb
mov
push
xchg
jbe
pop
dec
bound
push
ret
outsb
scas
mov
cmpsb
add
hlt
loope
fisttpll
xor
das
pop
shlb
pop
add
xchg
test
jno
js
repz
or
enter
mov
mov
sub
xchg
mov
cmpsl
out
jle
jp
pop
sahf
mov
dec
inc
jle
ja
add
xorl
mov
ds
adc
and
push
ds
pop
push
jo
mov
xchg
sbb
sarl
jl
push
adc
sub
fidivrs
pop
pop
pushf
mov
sub
lock
xor
inc
add
mov
push
push
mov
clc
and
out
xor
push
cs
aad
mov
mov
movb
in
or
cmpsb
or
lret
adc
repnz
add
repnz
insl
test
dec
mov
sbb
loopne
mov
add
cmp
dec
lock
dec
mov
push
xor
mov
in
hlt
fsubs
mov
sbb
or
roll
pop
inc
out
add
mov
aaa
imul
stc
push
cmc
sbb
xor
fdivs
aaa
mov
jbe
or
imul
punpcklwd
dec
add
xchg
add
or
dec
inc
loop
aad
mov
mov
jns
pop
test
push
sbb
ss
cs
test
adc
push
iret
lret
or
xor
into
loop
pusha
imul
mov
mov
mov
push
loopne
or
out
cs
mov
push
sarl
popf
loope
outsl
adc
mov
cmp
push
lods
adc
add
lods
adc
movsb
negb
into
mov
repz
popf
mov
add
jnp
push
add
pop
pushl
push
mov
sbb
push
jmp
dec
mov
add
mov
rorl
mov
data16
sub
lcall
rcll
insb
xchg
pop
lods
cmp
repz
je
dec
sub
mov
cmp
mov
dec
in
fcoml
orb
fcomps
inc
xor
loop
fidivs
add
dec
push
mov
jb
mov
lret
cld
stc
cmp
add
call
mov
js
mov
push
and
imul
aaa
shlb
in
out
inc
rcrb
je
dec
pop
jp
mov
mov
or
pop
pop
fsubs
or
inc
aaa
mov
js
std
test
sbb
bound
outsl
xorb
stc
insl
stos
aam
flds
xor
rdpmc
movsb
adc
daa
xor
pop
push
pop
sub
dec
push
push
pop
fisubl
out
mov
mov
mov
jbe
rcrb
clc
fstl
data16
mov
mov
push
mov
repz
int
push
pop
mov
push
cmp
xchg
xlat
jg
test
negl
pop
fistpl
rcrb
inc
test
xchg
fwait
pop
cmp
jge
or
mov
loop
mov
je
or
jp
cld
std
lea
loope
fwait
pop
popf
repnz
push
lds
lahf
inc
mov
es
xchg
xor
cmc
mov
cmp
mov
push
xor
in
jns
inc
fisttpll
fwait
movsb
adc
cmpsb
pop
adc
stc
sti
inc
xchg
testl
repz
xchg
addr16
cltd
lahf
xchg
shlb
fdivl
cltd
scas
or
fdiv
scas
push
or
mov
imul
push
xchg
xor
pop
mov
inc
pop
dec
movsb
leave
inc
add
or
and
mov
cmc
jbe
sbb
cld
enter
test
push
fs
cld
mov
sub
jo
mov
std
in
mov
js
pushf
adc
push
popf
sub
loop
outsb
imul
jb
or
adc
and
push
push
sub
popa
outsl
push
sbb
or
and
pushl
xor
lock
test
int
cld
not
add
movsb
out
jo
fistps
roll
fiaddl
data16
push
fimuls
adc
stos
lcall
dec
leave
addl
and
lea
lods
xchg
jl
rcll
adc
call
xor
push
sub
mov
cltd
inc
cmpsb
xor
movsb
test
push
push
shr
dec
jnp
aad
mov
or
pushf
add
test
sbb
or
dec
and
push
ret
in
push
fistps
inc
mov
xor
cmp
cmp
mov
lods
mov
lcall
stc
dec
dec
xor
mov
push
mov
adc
call
idivb
addr16
mov
icebp
lcall
cmp
adc
push
sbb
cltd
dec
pop
andb
stc
xchg
or
push
lret
xor
sti
repz
std
jge
pop
dec
xchg
pop
jbe
popf
repz
or
das
adc
test
fs
lcall
pop
xlat
dec
pop
outsl
xor
out
and
popa
sub
loope
imul
mov
ljmp
int3
pop
es
or
int3
mov
icebp
test
sub
adc
jno
std
push
inc
daa
sbb
movsb
and
cmp
or
mov
test
jo
push
xor
pop
sub
push
mov
cwtl
ds
rorl
xor
inc
xor
or
sbb
xchg
sti
sbb
pop
jmp
popa
ret
cmp
xor
rclb
xor
cmp
mov
mov
inc
ljmp
push
inc
or
push
and
cmp
sahf
lods
cmp
lods
xor
lea
push
dec
leave
cltd
jne
call
mov
pop
xor
adc
cmp
aam
out
sub
pop
jmp
inc
inc
insl
pushf
mov
pxor
mov
jmp
inc
jae
mov
or
inc
icebp
mov
in
pop
mov
adcl
sahf
adc
lret
push
jno
inc
movsb
loopne
cli
sbbl
sub
test
xchg
dec
inc
arpl
mov
xor
in
jno
jnp
mov
lods
add
loopne
mov
jo
pop
mov
movsb
cmp
ja
mov
call
xor
ss
cmp
mov
ret
mov
cwtl
popf
jns
mov
mull
insb
jl
dec
in
insb
pop
dec
fcomps
mov
xchg
imul
jp
fdivl
mov
cmp
xor
bnd
mov
das
jp
ja
pop
out
ret
dec
jne
mov
repz
mov
inc
pop
jno
shlb
loop
pusha
inc
sbb
fadd
mov
jne
and
jo
je
mov
dec
mov
push
lock
out
xlat
add
movsl
mov
fbld
or
add
and
add
jecxz
lods
xor
andb
mov
ss
sub
fnstsw
sbb
mov
cmc
dec
mov
jl
jecxz
shlb
jp
dec
pop
adc
and
sub
cs
mov
neg
mov
jb
je
sub
mov
roll
scas
stos
int
in
cmp
jg
mov
sbb
stos
sbb
arpl
adc
or
lcall
ret
and
jnp
xchg
lock
pop
outsl
sub
adc
cmp
mov
mov
and
xor
mov
sahf
xchg
stos
out
imulb
pusha
mov
lcall
add
push
or
jmp
jecxz
xor
call
jg
or
ja
imul
loopne
fimull
mov
loop
sbb
sbb
xor
pop
sti
mov
inc
ficomps
xchg
ss
out
daa
in
and
adc
inc
in
inc
sbb
pusha
test
mov
fsubrs
loopne
lcall
je
sahf
mov
jbe
and
aam
fs
mov
inc
roll
imul
pop
cmp
mov
sbb
xchg
negl
adc
sbb
testl
jp
mov
pop
mov
mov
loope
add
jge
sbb
jle
dec
test
fadds
or
push
mov
rorl
dec
mov
sarb
dec
es
test
mov
arpl
ret
shlb
nop
pop
pop
loopne
or
cmp
nop
loop
add
mov
inc
mov
push
std
mov
xchg
mov
jg
aam
xor
fidivrs
scas
mov
cmp
dec
hlt
icebp
lret
xchg
loopne
xchg
in
test
repnz
xchg
push
aad
xchg
pop
jnp
mov
and
dec
mov
sub
shr
xchg
outsl
pop
je
fcoml
cmp
fwait
popf
test
mov
jle
add
xor
and
repz
scas
mov
js
sti
pusha
out
xor
enter
call
stos
lret
ret
mov
mov
jmp
sbb
xchg
jl
out
mov
aas
jb
call
shll
xor
leave
mov
dec
jge
jns
psubsw
lcall
xor
shrl
adc
out
sub
scas
ficomps
adc
gs
adc
out
add
xchg
jne
jae
in
add
jno
lods
xor
mov
lret
dec
cli
fs
sbbl
and
push
xor
push
mov
push
mov
add
cwtl
clc
mov
mov
adc
mov
sbb
pop
fisubrl
pop
mov
jnp
imul
sub
insl
mov
enter
cmp
bound
jae
insl
in
and
jle
aad
repz
and
outsb
ja
push
ret
xlat
adc
xchg
mov
dec
imul
xor
not
repz
lock
mov
cld
test
pushf
push
stos
sbb
sub
and
push
hlt
mov
add
cmp
lods
or
imul
xchg
out
add
push
lahf
out
add
adc
stc
stos
mov
ret
mov
test
xor
insb
jle
pop
mov
adc
mov
pop
or
addb
cwtl
repnz
aad
pop
sbb
ss
mov
and
sub
mov
jbe
aas
sbb
inc
jo
test
jae
pusha
mov
cmp
into
dec
inc
stc
cmpsb
out
cs
jl
cmp
icebp
inc
mov
mov
push
hlt
mov
mov
jl
pop
cmc
mov
mov
jg
jbe
adc
dec
mov
push
pop
dec
or
cld
mov
cmp
icebp
lcall
cwtl
pop
dec
fstpt
xchg
sub
adc
in
aad
mov
mov
cld
inc
in
fisubl
sbb
dec
mov
add
sbb
bound
inc
jae
xor
inc
cmp
push
nop
das
xchg
jmp
add
mov
pushl
inc
ret
dec
inc
in
lds
insb
xchg
repz
and
mov
aaa
fists
add
inc
mov
loopne
push
sbb
adc
fimull
ret
daa
ret
aas
rclb
int
andb
arpl
sbb
mov
mov
xor
push
push
cmc
popf
into
lds
rolb
sub
cmp
adcl
popa
pushf
mov
push
out
lret
sub
cmp
pop
inc
cld
xchg
jg
pop
jb
rorl
cwtl
jle
dec
ss
mov
mov
push
iret
add
aas
add
stc
pusha
and
xchg
inc
test
loope
ds
es
lcall
das
xchg
popf
sahf
into
jbe
add
pop
mov
xor
cwtl
mov
dec
jnp
mov
leave
mov
imul
mov
cmp
das
jg
fwait
push
insl
les
lock
addr16
sbb
and
in
into
fildl
adc
adc
sahf
leave
pop
incl
mov
pop
repz
mov
hlt
and
lcall
repz
mov
sbb
mov
rorb
pop
mov
shll
mov
cmp
aas
mov
in
and
dec
mov
cmp
lock
rcll
inc
sbb
vaddps
aad
sub
fisttpl
push
push
jecxz
iret
mov
jne
int
pop
xor
outsl
pop
bound
mov
mulb
sbb
dec
mov
mov
jbe
decl
xlat
lods
insb
scas
lods
or
loop
adc
ja
jno
add
loop
sub
or
adc
fisubrs
dec
push
lock
xor
jmp
sbb
mov
mov
stos
mov
movsl
fdivrs
mov
mov
dec
out
cmpsb
fwait
lods
xchg
stos
jecxz
mov
mov
push
pop
mov
popf
and
xchg
xchg
imulb
mov
dec
mov
xchg
mov
mov
jne
or
and
cmpsb
or
xor
sarl
sbb
leave
sarb
syscall
lahf
pop
add
sar
mov
mov
mov
clc
int3
mov
xor
movsl
sbb
inc
sub
adcw
jbe
jge
jge
je
dec
fs
add
pop
xchg
mov
aaa
stc
fdivrl
hlt
add
ret
push
cmp
or
mov
push
pop
inc
in
jge
xchg
scas
add
scas
loop
sub
or
bnd
and
bound
push
cld
aas
imul
psrlw
add
lahf
movsl
fsubp
icebp
rcrl
fsubl
ja
inc
pushf
lea
cmp
sbb
pop
cmpsb
insl
cmp
mov
sub
and
inc
inc
dec
and
loop
loop
add
add
push
icebp
push
jns
fwait
in
movsl
imul
pop
stos
sbb
je
repnz
cmp
push
mov
sbb
xor
lret
xor
mov
push
arpl
mov
pop
inc
pop
adc
push
cs
xor
aad
and
rorb
loopne
into
cli
pop
fisubl
repz
aad
pushf
daa
or
sub
and
or
out
pcmpeqb
ja
subb
xlat
in
pop
mov
sarl
sub
dec
xor
repz
jnp
mov
test
ljmp
ret
ffree
sbb
inc
loopne
jne
aaa
arpl
ret
lcall
decl
mov
inc
push
repnz
jmp
fnstcw
push
fwait
das
xchg
fldt
pop
lods
bound
adc
cs
dec
push
test
lcall
jg
sahf
mov
mov
or
dec
sub
pop
mov
xchg
aas
ljmp
cmp
lods
cli
pop
push
movsb
loop
add
jbe
std
add
ds
pop
pop
add
out
push
and
or
add
jp
out
aam
out
mov
add
push
sahf
pusha
jnp
es
add
repz
les
out
adc
stos
pushf
sbb
mov
rolb
inc
movsb
decl
jns
rol
stos
daa
cltd
movsb
add
mov
xchg
dec
xchg
mov
rorl
xor
sub
jo
add
xchg
mov
adc
addl
sub
adc
shrb
and
fimuls
inc
lcall
add
pop
mov
and
sub
in
mov
jns
repz
adc
and
lret
int
xor
push
imul
xchg
in
mov
dec
push
add
pop
popa
jg
iret
cmp
int3
dec
jge,pn
cmpsl
mov
jmp
jge
cmp
out
stos
mov
int
sahf
and
sarl
adc
pop
mov
int3
nop
mov
mov
fnstcw
sub
and
inc
adc
imul
adc
add
insl
xchg
and
mov
imul
ficompl
outsb
cmp
or
adc
cmp
xor
inc
mov
push
and
loope
mov
lahf
movsb
scas
jg
and
mov
jecxz
cmpsl
enter
pop
mov
icebp
scas
into
outsb
xchg
sbb
add
nop
cltd
in
push
and
enter
sbbb
pusha
lods
out
arpl
je
sbb
lea
fcomps
jle
leave
lea
daa
sub
dec
outsl
mov
jmp
xchg
ja
lods
call
push
iret
mov
push
push
fcmovb
aaa
mov
jns
mov
sub
mov
movsb
fwait
inc
xchg
jb
out
cmp
shlb
xchg
or
sub
xchg
shrl
jl
lock
mov
xor
sub
ret
fs
pop
adc
lock
and
sub
cmpb
sbb
and
push
test
int3
xor
push
data16
inc
sbbb
std
in
int
cs
sbb
inc
cmp
cmp
xor
jo
lret
testb
jnp
cmc
pusha
xor
mov
dec
shrb
mov
cmpsb
movsl
or
mov
or
arpl
and
cltd
sub
jp
das
js
sub
sbb
call
pop
mov
sub
mov
les
call
push
das
stc
aad
fcomi
mov
bound
pop
xchg
outsb
add
call
out
rolb
add
mov
inc
aas
xlat
sbb
dec
mov
stc
or
ds
inc
rcr
push
aaa
sbb
idivl
lods
add
xor
push
mov
cmp
mov
icebp
addr16
fs
mov
lret
dec
dec
or
ds
push
pop
mov
ja
pop
in
jl
test
cmp
jle
jnp
mov
xor
push
fstps
inc
jge
leave
ss
xchg
shrl
mov
mov
je
imul
add
cmp
mov
enter
pop
shr
lds
push
and
push
outsb
loopne
lea
lret
fsubrs
add
add
shrb
lret
sbb
iret
cmovl
jge
test
in
mov
pop
test
rep
cmpsb
mov
push
or
test
lahf
call
mov
push
add
xor
mov
pop
fwait
stos
pop
insb
xor
cmpsl
fnstsw
mov
mov
mov
enter
jbe,pt
fdivrl
cmp
jnp
scas
gs
out
insb
or
call
xor
push
insl
js
or
pop
xor
js
xorl
popf
cmp
push
sbb
xchg
stc
cmp
pop
lods
clc
lods
jmp
cmp
adc
and
cmc
mov
shll
js
mov
ja
mov
lret
mov
mov
imul
add
push
out
jp
pop
xor
inc
mov
adcl
add
mov
ss
add
sub
mov
pop
lods
das
lods
sbb
fdivrl
scas
jbe
mov
arpl
pop
lahf
xchg
sbb
out
adcl
pop
sub
nop
arpl
orb
sub
jb
inc
push
lret
data16
fucom
mov
out
pushf
mov
cli
mov
pop
fmull
xor
sahf
cmp
inc
in
test
fadd
fs
mov
fstps
les
cmp
lea
push
xchg
into
cmp
pop
mov
xor
dec
ficomps
mov
pop
repnz
cwtl
arpl
and
cli
push
inc
inc
rolb
outsl
sti
jno
mov
and
mov
out
fidivl
aas
cli
mov
lcall
fstpt
or
je
cmpsb
mov
lcall
jns
fs
sub
loop
xchg
cltd
ret
xor
add
lds
cmp
xlat
dec
adc
push
adc
insb
arpl
outsl
flds
dec
cwtl
je
pop
mov
cmpsb
mov
aam
dec
in
mov
subb
jae
jp
cmp
call
xchg
lds
std
sbb
test
imul
xchg
pop
add
xchg
cmp
inc
stos
stos
ja
pop
sbb
cmp
in
clc
mov
mov
pop
inc
fwait
icebp
enter
dec
lcall
xor
xor
or
fimuls
addr16
cmc
xchg
dec
pop
stos
or
adcl
cs
inc
imul
popa
jnp
inc
mov
daa
ss
pusha
iret
dec
pop
jl
sbb
idivb
shl
cli
pop
or
nop
inc
or
dec
cmpsb
xchg
lds
xchg
nop
popf
inc
test
mov
mov
jb
pop
or
sbb
out
sub
in
aas
das
ret
inc
dec
inc
pop
test
mov
xlat
das
or
or
iret
push
fwait
lods
iret
xor
mov
mov
call
fnstenv
orb
and
inc
xor
xchg
out
or
adc
loopne
nop
adc
test
xorl
fmuls
insb
mov
je
mov
loop
push
ss
push
xchg
xchg
aam
pushf
xchg
jmp
lock
lcall
mov
mov
in
mov
sbb
sub
adc
add
jmp
fiaddl
xor
xchg
les
mov
sahf
out
cli
ss
ret
lcall
push
ss
into
pop
ljmp
add
xchg
mov
lcall
aad
dec
mov
push
popf
add
dec
repz
dec
mov
push
inc
inc
push
cmp
int3
or
inc
notl
frstor
xchg
addb
xor
jno
xchg
dec
je
addr16
lods
mov
movsb
into
sub
push
cmc
mov
mov
sbb
mov
xor
in
ljmp
repz
cmp
cmpsl
lret
pop
imul
decl
inc
add
dec
insb
data16
mov
inc
shlb
mov
lock
sbb
daa
xchg
repz
cltd
mov
cmp
dec
cmp
xor
sbb
mulb
iret
pop
lcall
imul
mov
xchg
mov
std
cmpsb
jl
cltd
push
jno
mov
das
lods
lods
cmp
in
mov
push
pop
mov
cmp
adc
je
push
test
mov
je
dec
inc
xacquire
push
fsubl
cmp
jle
xor
js
mov
sbb
mov
iret
sub
cmp
and
inc
cmp
data16
lea
jb
sbb
mov
pop
outsb
nop
ljmp
add
pushf
imul
sahf
adc
dec
lret
jg
push
jb
sahf
scas
pop
test
orb
xchg
test
lret
in
mov
ja
adc
cmp
mov
pop
dec
mov
sbb
and
jle
or
call
adc
or
insl
inc
adc
scas
xchg
gs
dec
iret
or
cmc
int
subb
lea
xchg
mov
cmpsl
xlat
mov
aad
cmpsb
ret
adc
xchg
ret
add
jnp
cmp
cmp
in
xchg
in
ljmp
sti
add
inc
cmpsb
push
inc
enter
sub
adc
mov
cmp
or
das
decb
mov
lret
cmpps
sub
and
mov
cmc
repnz
push
mov
and
lds
adc
pop
mov
jmp
mov
xchg
mov
ja
scas
out
mov
xor
add
gs
jnp
cwtl
shll
pop
leave
mov
into
mov
fiadds
xchg
es
mov
lds
in
sbb
add
xor
cli
pop
call
call
jmp
mov
inc
sub
arpl
push
sub
aas
dec
add
mov
add
push
sub
jl
dec
and
aad
enter
ficompl
popl
xchg
adc
gs
fnsave
dec
xor
inc
xchg
lahf
mov
xchg
cwtl
mov
xchg
mov
pop
mov
xchg
fwait
or
outsb
enter
jmp
mov
inc
dec
repz
iret
sbb
in
xchg
adc
call
mov
mov
gs
inc
loopne
push
xchg
gs
pop
testb
xor
aaa
add
lahf
sbb
inc
fidivl
sbb
cmova
sub
mov
jno
fists
add
lcall
dec
cmp
inc
xchg
add
or
cmp
subl
fbstp
add
cwtl
dec
lcall
outsl
int3
out
fwait
xor
mov
jg
and
cmp
insb
push
sbbb
outsl
pushf
mov
push
fstps
inc
sbb
imul
fildl
add
and
movsl
jecxz
mov
decb
push
mov
jnp
out
lods
insl
fcmovnb
jno
mov
icebp
aad
mov
sbb
mov
push
insb
repnz
push
repnz
aaa
call
dec
xor
push
aaa
jmp
movsb
sbb
in
xchg
inc
in
and
and
mov
inc
adc
mov
jne
cltd
test
lahf
rcrb
into
sub
shr
push
sbb
out
jle
xor
inc
push
imul
dec
pop
shll
pusha
xchg
mov
insb
push
loop
jmp
scas
fadd
sub
mov
push
sti
inc
ret
aam
xchg
jno
mov
jbe
mov
fiaddl
rep
pop
push
cmp
inc
insb
insb
add
js
sbb
pop
add
test
pop
push
xchg
mov
mov
cs
xchg
std
push
mov
mov
nop
adc
jo
add
cmpb
lods
fidivrs
cs
push
inc
lock
lods
inc
jl
pop
mov
data16
int
pop
and
call
or
xchg
xchg
add
pusha
out
int
mov
idivb
nop
fiaddl
jno
add
inc
enter
xor
je
mov
and
in
jg
dec
dec
cmp
xor
cmc
jl
jb
cmp
aaa
sub
cli
out
pushf
sbb
mov
ss
push
add
jg
cltd
pop
cmpsl
or
push
jg
test
push
cld
xchg
sbbb
dec
mov
lcall
sub
jmp
push
xlat
out
arpl
pop
mov
test
inc
xadd
pop
cwtl
sbb
sub
imulb
push
adc
scas
and
sbb
mov
into
push
dec
add
in
enter
xor
popa
jno
mov
out
dec
mov
rclb
push
push
jne
xchg
fwait
int3
jne
jmp
daa
shll
or
jnp
scas
shr
or
stos
shrb
and
inc
or
std
inc
das
xchg
clc
out
in
mov
daa
dec
nop
into
or
jae
mov
push
adc
fldenv
in
cmp
rolb
fmulp
cmp
int
loope
data16
popa
lret
int3
xor
push
lret
imul
push
cmpsl
adc
xor
fcoml
cmc
testb
sbb
imul
pop
pop
inc
inc
bound
xchg
mov
push
mov
pop
int3
test
pop
cltd
ret
adc
pop
movsb
jl
mov
das
ljmp
mov
xchg
xchg
add
lret
daa
mov
and
jns
push
and
xchg
pop
cltd
mov
arpl
fistl
sbb
mov
sarl
xchg
ljmp
push
cmpsb
mov
pusha
sub
push
jb
clc
add
sbb
xchg
push
pushl
sbb
dec
jl
xor
lock
in
sti
jecxz
popf
scas
shrb
into
xor
sbb
dec
xchg
add
mov
outsl
add
int3
mov
add
inc
and
or
push
repz
ficoms
mov
cwtl
cmp
cmp
pop
mov
push
inc
lahf
ret
imul
outsb
testb
repnz
add
dec
mov
push
daa
pop
popf
pop
sti
jmp
loope
adc
ljmp
lods
pushf
iret
jmp
xchg
stos
inc
and
cmp
push
mov
pop
test
xchg
add
loope
jbe
inc
cmc
sbb
push
jo
add
lcall
mov
cmp
clc
int
aas
roll
add
cs
mov
pop
notl
fistl
mov
into
pusha
jecxz
shrl
outsb
scas
xchg
aaa
popa
lahf
sbb
mov
push
sub
cmpsl
lock
mov
aad
sub
aas
jae
pop
scas
fcmovnbe
mov
daa
adc
cld
dec
xchg
jp
jle
push
popf
xchg
icebp
xor
cmp
loopne
aas
mov
aam
fdivl
dec
aaa
negb
add
sub
xchg
fistl
dec
or
dec
out
push
push
mov
movsb
dec
clc
sbb
lods
xorl
test
pop
mov
ds
mov
add
sub
xlat
int
fdivrs
and
mov
sbb
xlat
ds
or
fcomps
cmp
faddl
rcrb
lock
or
add
dec
dec
cltd
test
dec
lods
xor
roll
shl
xrelease
ds
and
mov
dec
push
in
mov
inc
roll
cmp
js
std
add
popf
or
jne
pop
xchg
jns
mov
in
lret
out
inc
sahf
addb
fldcw
test
test
push
push
mov
test
ljmp
fsubrl
xor
sbb
cmp
std
mov
cmp
push
lcall
into
insb
pop
pop
adc
loope
inc
ret
jb
stc
ljmp
jo
cmp
ja
decb
and
fcoms
or
lock
testb
push
push
test
push
cmp
out
pushf
jb
test
adc
loope
in
dec
es
out
dec
test
outsb
xor
out
mov
es
fs
mov
push
sub
mov
mov
and
insl
outsb
xchg
xor
push
cmp
mov
loope
int3
ss
int3
loop
cli
out
push
mov
out
out
adc
leave
addr16
loop
shll
xor
pop
les
sahf
stos
jo
xchg
xchg
mov
jno
adc
add
mov
dec
stos
and
rclb
es
fs
adc
mov
outsb
rcrl
cmc
fwait
orb
mov
fiaddl
xor
push
push
fmuls
call
lods
sti
addb
jo
cmpl
mov
stos
xchg
aaa
sbb
sub
cmp
jg
xchg
loop
pop
loop
insb
fldl
nop
jns
imul
imul
cmp
sbb
mov
in
paddsb
pop
sbb
push
push
xor
xor
fcompl
fisttpl
jecxz
and
inc
mov
inc
movsb
sbb
ljmp
dec
dec
xchg
inc
jge
push
mov
lcall
sub
addr16
mov
stos
push
jnp
shr
dec
pop
inc
xor
iret
lcall
iret
fbstp
addr16
sbb
mov
sub
xchg
mov
inc
cmp
inc
jg
jl
int3
push
sbb
insb
inc
mov
cmp
cmp
repnz
push
fstpl
lea
mov
leave
push
lds
cmp
push
push
sbb
scas
sbb
dec
cltd
sbb
ret
out
mov
push
mov
mov
sub
xor
mov
push
andl
mov
lods
dec
lret
subb
mov
popf
outsl
dec
cmpsl
loop
xlat
and
and
mov
mov
shrb
test
push
mov
sub
dec
in
and
pop
pop
std
imul
out
xor
mov
pop
sub
lret
push
pop
sbb
stc
call
sbb
outsl
mov
sbbl
jnp
mov
jno
rorb
cmpl
sahf
lods
xchg
stos
aad
xchg
mov
ds
dec
adc
xchg
les
push
mov
enter
out
xchg
and
push
pop
je
sub
or
add
dec
push
lahf
movsb
repz
cpuid
mov
in
jae
xchg
adc
mov
shl
xchg
iret
sub
sub
or
xor
int
push
sahf
xchg
popa
lods
out
shlb
dec
sbbb
imul
mov
and
mov
push
lock
jecxz
dec
fwait
dec
ret
js
xor
test
add
xlat
or
int
cmpsl
jno
sahf
dec
out
ret
inc
mov
movsl
cmp
cs
scas
icebp
insl
popf
fst
dec
mov
adc
scas
and
mov
jmp
or
and
add
xlat
mov
cmp
xchg
test
lods
les
loope
xchg
pop
sbb
or
and
mov
out
or
adc
push
jmp
jns
outsb
lahf
int3
sbb
xor
pop
daa
movsl
add
int3
push
aas
push
or
cmpsb
dec
notl
fisubrs
outsl
es
mov
mov
rolb
inc
daa
test
ljmp
xor
or
arpl
add
jbe
jg
xorl
test
aad
dec
in
repnz
in
jge
adc
xor
sub
je
push
jle
add
jbe
fwait
mov
or
push
pop
push
sbb
sahf
inc
sbb
adcb
scas
imul
in
cli
out
fucomp
xchg
cmp
push
pusha
lret
and
faddl
rcr
and
mov
sarb
jmp
iret
xlat
popf
xor
out
pop
push
jecxz
and
cmpsb
addr16
stos
icebp
dec
movsb
cmp
xor
cmpsl
insl
xlat
jne
test
cmp
adc
push
dec
call
or
and
mov
xor
cmp
add
scas
xlat
movsb
mov
jae
add
test
out
mov
pop
data16
bswap
pop
inc
out
add
mov
sbb
lret
pop
fadds
mov
shr
test
movsl
dec
push
in
pop
adc
xchg
xchg
xchg
add
add
jo
sbb
sbb
pop
addl
and
int
xchg
popf
sub
in
sti
mov
mov
mov
pop
ss
mov
shll
rcrb
sbb
push
inc
xor
scas
adc
or
test
sbb
mov
enter
xor
pop
outsl
nop
clc
bound
dec
dec
bound
mov
jae
fsubl
scas
sarl
scas
push
scas
inc
and
xor
mul
mov
jmp
mov
xchg
bound
mov
or
clc
stos
inc
mov
and
notb
bound
aaa
xchg
mov
jg
lcall
into
push
sti
ret
in
lret
rorb
enter
cld
xorl
mov
test
xchg
notb
push
mov
sbb
adc
decb
jo
inc
jb
sbb
mov
popf
lcall
lods
adc
jbe
dec
rcll
mov
pop
popa
adc
scas
xor
out
jl
lods
call
pop
out
cmp
sarl
pop
aad
lcall
mov
nop
test
and
push
push
dec
stos
add
fstpl
mov
inc
mov
gs
mov
push
popf
test
dec
in
xchg
sub
out
sub
xchg
push
cmc
mov
enter
iret
cmovo
inc
fld
mov
fistl
mov
cs
add
das
pusha
and
cmpsb
sbb
cmp
sub
push
fbld
sub
lahf
jno
sbb
adc
xchg
push
jbe
or
xor
cmpsl
mov
out
add
push
loop
fs
mov
and
sti
jg
std
mov
sub
xchg
pop
inc
push
and
decl
cmp
and
cmp
push
je
out
or
popa
sub
mov
mov
mov
in
fcom
arpl
inc
pop
jnp
push
and
dec
and
inc
test
scas
test
js
pop
ds
popf
mov
ret
test
repz
mov
arpl
adc
fbstp
fisttpll
fisubrs
xchg
cli
sub
dec
push
adc
sbb
outsb
xchg
mov
mov
ret
fmul
jnp
jnp
jb
and
scas
lds
jecxz
lahf
mov
mov
mov
or
inc
sbb
mov
dec
mov
adc
ja
xor
je
sahf
movsb
js
rclb
rorb
icebp
sbb
out
iret
xor
unpcklps
or
fistl
mov
ljmp
add
orb
insb
sahf
cld
ret
loope
call
or
adcl
aam
sti
sbb
mov
inc
in
sub
xchg
repnz
out
mov
push
shl
push
add
jo
and
mov
fs
mov
shr
inc
pushf
pop
jg
loop
and
loope
jo
jmp
push
mov
mov
mov
out
sub
es
movsl
in
mov
loopne
outsb
cmpsl
cmp
daa
and
lock
push
imul
inc
xchg
jne
add
or
cmp
xchg
repnz
rcll
cmpsb
jle
stos
jg
test
add
loop
inc
je
pusha
inc
mov
cmp
stos
mov
and
mov
popf
fisttps
adc
cld
and
addr16
mov
mov
aaa
xchg
mov
ficompl
rcl
cmp
adc
push
test
xor
pop
cmp
jns
adc
mov
pop
add
fidivrs
mov
or
test
movsb
cmp
sbb
insl
ret
pop
and
test
rcll
test
cmc
cmp
mov
out
addr16
sub
pop
pop
push
test
inc
les
lods
cmp
mov
mov
or
xor
fs
enter
inc
clc
daa
pusha
ret
fidivrl
data16
repnz
rcrb
mov
dec
add
push
lods
dec
xchg
aas
div
xor
pop
jg
push
mov
int3
mov
sbb
imul
decb
jbe
sub
in
mov
icebp
xor
jge
adc
or
aad
fwait
enter
adc
imul
shl
outsl
ja
pop
repz
loope
jae
add
add
push
out
mov
inc
sbb
cmp
sbb
outsl
loope
inc
sbb
xor
xor
sbb
mov
cmc
in
aam
pusha
sbb
sbb
gs
xchg
mov
sub
test
outsb
mov
std
xchg
and
add
mov
ficoml
dec
jl
xor
icebp
mov
mov
loop
add
les
fsts
enter
jle
mov
dec
jno
push
aad
repnz
cs
ret
lds
js
add
or
cli
or
cmp
lds
negl
ds
inc
int3
repz
es
or
paddusw
gs
dec
or
pop
jno
and
inc
cld
push
and
dec
les
pop
pop
inc
in
adc
jo
adc
pushf
inc
fstl
jno
dec
sub
clc
cmpsb
mov
mov
ja
in
jg
jl
ret
sub
in
outsb
push
test
jns
in
push
mov
jae
jne
aaa
mov
add
add
lods
cmp
fwait
push
cs
mov
cmp
or
repnz
rorb
or
mov
pusha
js
sbb
pusha
test
sti
mull
mov
lea
cltd
or
add
dec
push
dec
sbb
mov
or
negl
adc
addr16
add
call
mov
ja
jb
inc
stos
xchg
nop
push
or
push
bound
add
fsubp
xchg
mov
mov
fst
lds
nop
mov
call
ds
faddl
push
insb
stos
and
outsl
ja
out
push
repnz
aaa
cwtl
mov
jnp
mov
call
mov
and
mov
fstl
fmul
mov
test
cmpsl
movsl
daa
pop
mov
stos
out
and
inc
pop
jg
xor
sub
fists
mov
outsl
das
mov
sahf
pop
sbb
mov
imul
decl
jge
and
lods
data16
fcomps
dec
mov
out
inc
push
mov
mov
bound
jbe
adc
dec
int
rcr
push
aaa
adc
movsl
inc
fadd
loope
xlat
insl
jbe
xor
sbb
cmp
frstor
mov
jo
add
js
enter
push
pop
cmp
mov
sbb
inc
lock
call
fists
popf
inc
cmp
pushf
inc
add
jecxz
pop
jg
iret
inc
inc
repnz
mov
xchg
mov
adc
push
lcall
movsb
xchg
jmp
icebp
cmp
into
inc
inc
shlb
ja
cld
jl
inc
sahf
mov
dec
jmp
lds
pop
or
stos
and
sub
and
mov
jne
jmp
aas
subb
xor
stos
test
sbbb
xlat
scas
xor
dec
cmp
cli
xacquire
add
jnp
idivl
pop
pop
inc
mov
sub
sub
aaa
out
dec
mov
pop
bound
xchg
test
lret
cmp
cli
stc
stc
and
xchg
or
xor
cmpsb
bound
les
les
cmc
aam
or
sbb
outsl
cmpsb
lcall
roll
pusha
add
movsl
mov
sub
enter
cs
call
mov
dec
imul
mov
jle
les
fwait
iret
jae
rorb
sub
outsl
out
xchg
movsl
movsb
stos
test
int
jg
lods
dec
idivl
jg
repnz
dec
mov
inc
mov
hlt
les
popa
daa
mov
ret
cmp
test
es
les
adc
xlat
test
xor
cmp
sub
loopne
clc
push
lea
cmp
sub
push
xor
jne
out
pop
js
xor
or
repnz
out
leave
scas
std
in
jnp
insb
test
sub
es
dec
out
add
shll
cmpsl
nop
fwait
lock
daa
pop
push
fwait
loop
mov
or
xchg
comiss
dec
cmp
pushf
mov
xor
test
testl
dec
xchg
or
or
bound
cmpsl
adc
dec
pop
dec
ret
and
inc
inc
xor
jo
xchg
pop
mov
mov
lods
mov
sbb
add
xchg
faddl
rclb
dec
inc
pinsrw
lea
inc
xor
shl
pop
inc
and
mov
mov
inc
add
out
cmp
sbb
push
sbb
lcall
call
sbb
or
pop
push
int
scas
sub
mov
adc
das
sbb
iret
jl
or
in
push
cmp
sbbl
lock
or
xchg
pop
addr16
push
pop
negl
push
or
and
xor
gs
jae
xchg
andl
mov
sbbb
shl
add
test
test
cmp
aad
sbb
mov
repnz
daa
pop
sub
test
xor
bound
movsb
or
add
arpl
cmp
dec
pop
lods
xor
mul
loopne
dec
sub
or
ror
cs
lock
jge
adc
xor
stc
hlt
and
sahf
jno
jl
out
cld
or
stos
popf
xchg
aaa
ret
pop
inc
jnp
jle
inc
xor
mov
xchg
add
jbe
mov
jno
cmp
repnz
mov
jp
int3
lahf
nop
dec
dec
dec
jmp
pusha
jne
addl
insl
pop
adc
add
lret
out
mov
jl
das
adc
mov
imul
add
js
add
stos
data16
adc
mov
test
bound
mov
call
xchg
fidivl
jecxz
mov
std
and
mov
jbe
mov
int3
add
add
sbb
inc
mov
filds
shrl
aam
xchg
aaa
lods
les
or
incl
aad
in
out
lods
add
mov
sub
icebp
xchg
mov
jecxz
insl
xchg
mov
inc
pop
mov
push
negb
call
xlat
mulb
inc
jbe
inc
clc
or
mov
lods
lcall
ljmp
and
mov
out
decl
les
pop
mov
loope
mov
dec
sub
cmovle
sahf
or
repz
cmovne
sahf
je
add
mov
or
movsb
push
sbb
pop
lods
xorl
nop
or
scas
int
xor
cli
cmp
or
imul
inc
andl
mov
push
xor
xor
je,pn
in
int
insl
test
mov
mov
push
pop
jg
sbb
cs
add
sbb
into
mov
pop
pop
mov
fstpt
pop
pusha
les
mov
cli
mov
sbb
scas
addr16
cmpsl
xchg
cmp
aad
out
inc
arpl
jle
and
push
jo
imul
sub
inc
dec
pop
adcb
and
out
adc
inc
test
and
cmp
mov
jb
iret
xor
add
in
mov
adc
clc
adc
in
lock
adc
sti
cmp
adc
lea
sbb
pop
pop
mov
sbb
loop
stos
sti
mov
fdivs
clc
jl
xlat
addr16
arpl
imul
rorl
cmc
adc
adc
xchg
push
sub
or
mov
xchg
mov
add
fsubp
es
cmp
test
mov
inc
pop
mov
pushf
inc
test
and
in
cwtl
andb
jb
pop
stos
fmuls
test
cmp
or
sbb
aaa
xorl
je
popf
mov
adc
int3
rcl
jb
adc
in
adc
inc
xchg
rolb
subl
lcall
add
lods
std
lret
outsl
out
jb
jbe
enter
fcomps
imul
or
cmp
mov
pop
or
xlat
cmp
xlat
cmpsl
inc
jl
mov
xchg
and
push
push
imul
pop
aad
pushf
mov
in
jno
filds
addr16
stos
fists
shrb
push
jl
or
dec
sbb
fnstsw
into
dec
add
dec
mov
mov
jbe
out
xchg
inc
or
cmpsl
dec
jo
pop
push
roll
dec
ret
mov
fildl
scas
add
aad
popa
pop
movl
std
das
jb
je
add
and
in
jne
int
xchg
arpl
mov
ljmp
xlat
inc
mov
repz
dec
push
sbb
sub
cli
mov
sub
pop
mov
mov
or
dec
pop
jle
lahf
xor
mov
jb
cwtl
stos
adc
movsb
mov
push
jno
loopne
je
fisttpll
outsb
shrb
mov
outsb
xchg
mov
xchg
mov
insb
adc
stc
jmp
mov
orb
xor
jle
rcrl
jb
sbb
fstl
insl
cmp
lahf
sub
inc
push
in
add
test
sub
loopne
mov
mov
xchg
arpl
pop
jbe
pushf
push
sbb
xor
leave
fs
dec
dec
push
scas
lahf
jae
dec
clc
xchg
adc
xchg
mov
jp
xchg
jecxz
les
fstl
mov
stos
mov
inc
add
pop
into
dec
mov
loopne
mov
fsubr
push
sbb
sub
lds
xor
push
enter
fisttpl
cmp
mul
mov
pop
jns
and
sub
mov
pop
xchg
or
sbb
bound
movsl
add
dec
pop
loope
push
cmpsb
jne
jle
mov
fdivrl
loop
inc
push
or
and
notb
add
jae
enter
movl
loopne
lea
test
mov
cwtl
push
cld
mov
sub
and
jmp
push
vdivpd
sbb
xchg
mov
lock
insl
and
cmp
dec
pushf
mov
adc
cmp
popf
enter
pop
cwtl
xchg
sub
fmull
outsl
js
jno
test
les
ret
push
js
lret
rorl
or
loop
stos
cmp
pop
ljmp
add
jnp
jne
jns
xchg
stos
leave
cld
imul
mov
sbb
add
mov
sub
mov
aad
mov
add
and
add
je
dec
in
or
fimuls
push
out
cmova
xorl
movsb
mov
aam
cld
xchg
xchg
lea
jae
adc
sub
push
int3
aad
add
out
add
xor
fnsave
shrb
aas
test
inc
and
fistps
in
mov
jae
inc
xchg
jecxz
enter
adc
mov
das
repz
addl
scas
or
sbb
ret
and
push
sbb
pop
sub
fnstcw
enter
push
fcompp
test
test
pop
fistpll
pop
leavew
outsl
pop
jb
or
clc
ret
cmp
add
pop
cmp
sbb
dec
outsl
hlt
pop
cltd
fldenv
aad
mov
cmp
mov
insb
pusha
cmp
cmpb
pop
out
cld
lahf
or
inc
add
xchg
sbb
rcrb
int3
popa
leave
jnp
sbb
xchg
fsubr
test
and
mov
jle
xchg
test
mov
aaa
cmc
insl
das
int
mov
hlt
pop
popf
cmpsl
cmp
jno
pop
mov
mov
cmp
cmp
lahf
adc
cmp
xchg
lret
cmp
push
in
adc
repz
or
dec
xchg
or
or
mov
push
mov
neg
movsl
lods
xlat
cmpsl
icebp
xor
addr16
pusha
sbb
dec
dec
mov
mov
pop
pop
xchg
mov
xchg
push
popa
loop
in
sbb
mov
out
push
jmp
inc
push
mov
push
mov
fiaddl
mov
shlb
cmp
or
adc
lret
or
jae
push
push
stos
hlt
push
cmpsb
pop
jmp
jb
popa
or
pop
cmpsl
sbb
push
in
nop
jl
sub
test
push
inc
cmp
mov
ror
lods
adc
inc
xor
iret
mov
loop
test
xchg
in
add
aam
push
int3
xchg
jns
sbb
jl
cmp
pop
push
pop
ljmp
in
clc
pusha
loop
jb
adc
pop
hlt
adc
es
lret
or
mov
fbstp
mov
pushf
pop
xchg
xor
lods
sahf
sbb
out
sub
movsb
lcall
add
pop
inc
repz
xlat
ficoml
repz
inc
addr16
push
cltd
sub
xor
mov
add
pop
icebp
icebp
icebp
fidivs
movsl
pop
sti
jo
xchg
stos
push
sub
fstps
cmp
sub
pop
or
ljmp
int3
xor
jno
and
in
repz
gs
clc
mov
push
roll
sahf
fninit
pop
pop
inc
iret
mov
loop
pop
lahf
lret
pop
and
test
lret
mov
callw
aad
mov
ljmp
inc
push
and
xchg
mov
pop
sbb
or
sbb
repnz
or
lret
aas
push
sub
shlb
imul
ss
int3
cmp
mov
cmp
jmp
jb
dec
mov
jno
out
and
dec
mov
sub
arpl
lret
or
sub
out
pop
push
fcompl
or
idivb
or
mov
fdivrs
jge
jle
fmulp
bound
ljmp
cld
into
pusha
sahf
imul
add
mov
call
cmp
mov
dec
push
cmp
dec
jg
push
test
pop
scas
sahf
iret
std
mov
shlb
pop
push
sbb
inc
dec
xchg
or
loopne
ja
inc
repz
loop
push
mov
mov
dec
mov
scas
or
inc
cmp
sbb
fwait
cmp
adc
mov
sbb
das
and
call
jle
jl
cmp
pop
and
adcl
mov
add
sbb
inc
push
push
ja
ret
push
and
xchg
cwtl
enter
imul
mov
add
and
not
sub
pop
lods
mov
mov
xchg
out
push
push
push
push
jle
leave
add
jo
pop
xor
push
mov
sbbb
inc
adc
aam
sbb
sub
inc
bound
xor
adc
sub
loope
rclb
xchg
rolb
xor
imul
aam
add
or
push
and
pop
push
jbe
add
jns
mov
dec
into
lods
cmp
dec
push
movsb
lahf
push
mov
jae
adc
jmp
test
stos
mov
mov
out
mov
mov
fwait
push
test
sub
loop
jne
lcall
nopl
repnz
jge
lret
enter
pop
dec
and
dec
xor
jl
or
mov
imul
sub
or
mov
mov
xchg
xchg
mov
xchg
scas
sub
test
repz
int
data16
test
and
aaa
pop
dec
out
fisubs
cltd
leave
inc
xchg
adc
loopne
cli
fcoml
ljmp
out
add
aad
or
dec
add
aad
nop
pushl
cmpsb
push
pop
aas
cmp
out
and
pop
push
ss
out
jle
mov
test
jecxz
adc
push
push
sbbl
loopne
popf
stc
ljmp
outsl
lret
icebp
sub
sbb
jae
in
xchg
dec
aaa
test
jb
daa
xchg
mov
sub
xchg
xchg
or
mov
mov
sub
cmp
xchg
imul
jo
pop
or
andb
out
sbb
movsb
orb
or
dec
out
xor
repz
out
sub
daa
loop
pop
mov
lods
push
push
popl
dec
cmpsl
test
dec
sub
lea
jge
mov
inc
xchg
mov
dec
cmpsb
or
cwtl
xor
out
imul
add
xlat
sub
rep
insb
jae
push
or
sbb
int
cmp
loop
jg
mov
loopne
andl
shr
leave
sub
push
jb
dec
sbb
lret
out
out
imul
cmpsl
shr
movsb
pop
test
inc
mov
sub
aaa
aaa
andl
jnp,pt
ret
pusha
adc
cmp
rorl
popa
xor
repnz
popa
push
mov
cs
mov
or
gs
in
jbe
sbb
sub
adc
cmp
popa
mov
ds
push
gs
das
mov
mov
aaa
xor
xor
push
ljmp
add
mov
xchg
sbb
jl
add
insb
adc
cli
inc
inc
aad
pop
cwtl
incl
or
mov
xchg
sbb
mov
mov
sub
dec
das
mov
or
push
psllw
test
ret
rclb
jae
jecxz
jbe,pn
or
xor
ds
push
fldl
clc
dec
cmp
test
sahf
les
and
outsb
mov
lds
or
es
mov
jns
popf
push
adc
mov
cmpsb
nop
push
push
mov
fisubrs
sub
aaa
sti
cmp
jge
stos
repnz
inc
test
jmp
inc
push
jnp
outsl
pop
jo
jge
insb
push
out
sbb
cmpl
rcrb
jp
leave
into
jp
jmp
xor
jns
mul
pop
fucom
xor
inc
pop
or
mov
push
scas
dec
ds
dec
fstpt
shrl
sbb
ffreep
fcompl
sub
pop
int
dec
mov
jg
or
inc
mov
sbb
adc
jb
mov
jnp,pt
insb
mov
xor
inc
xchg
jnp
gs
dec
pop
push
lret
sub
fbstp
inc
call
pop
xchg
fiaddl
std
sub
stc
ja
jmp
dec
scas
inc
daa
into
and
sti
scas
cmp
and
nop
cmp
mov
push
addb
or
in
xlat
xlat
popf
popa
xorl
lds
cmpsb
push
jg
movsb
or
pop
test
movsb
mov
rcrl
inc
fdivrs
mov
lock
add
push
jns
roll
hlt
sbb
jmp
adc
int
mov
fsubrp
add
subl
adc
sbb
adc
lock
xchg
jl
incb
mov
ret
std
sarb
or
cmp
cmp
stc
test
fisubs
or
inc
mov
mov
xchg
repnz
inc
lods
in
lds
in
ja
pop
and
mov
and
push
das
push
or
loop
sahf
add
fucomip
pop
mov
rorl
mov
addr16
aaa
or
bound
jmp
jbe
test
in
fiadds
call
push
xor
lahf
and
outsl
inc
inc
xchg
sbb
mov
xor
jae
xor
xchg
mov
and
sbb
mov
out
pushf
lahf
test
push
inc
sti
int3
sub
mov
sbb
outsb
aam
mov
adc
mov
and
aad
pushf
cmp
xchg
mov
outsl
stos
dec
xor
cmc
adc
in
sub
adcl
xchg
in
in
xlat
call
xorl
out
jbe
and
xchg
lahf
les
fs
pop
xor
jg
pop
add
mov
outsb
pop
lret
mov
pop
inc
shl
repz
popf
cmp
jecxz
aad
cmp
push
inc
sahf
test
xchg
jp
mov
data16
sub
insb
mov
mov
mov
lods
arpl
imul
xchg
in
mov
ja
xor
pop
push
cmpsb
lahf
ds
test
cmp
push
cwtl
outsb
out
loopne
xchg
cld
data16
mov
daa
test
sub
fs
mov
int3
mov
jl
je
jnp
loopne
cmpsb
sub
aas
jmp
xor
outsl
fidivrs
in
jb
fmulp
add
mov
mov
and
or
cmp
dec
int
add
je
push
in
add
jne
pop
loope
ficoml
fxtract
mov
popa
sahf
test
pop
enter
pop
mov
fwait
bnd
es
sub
aam
cld
mov
sub
adcl
les
adc
push
mov
cmp
jbe
pop
iret
inc
jae
pop
jp
push
mov
gs
mov
cmp
jl
fdivs
scas
inc
sub
lahf
jae
filds
addb
ja
adc
sti
test
insb
dec
fldl
cld
nop
lods
push
insb
ret
lods
popa
fucomip
subl
xor
or
pop
mov
xor
cmp
fidivs
add
adc
add
jl
movsb
or
lock
das
lcall
stc
xchg
mov
mov
lods
xchg
das
xchg
aad
out
or
arpl
cmp
xor
inc
test
add
hlt
push
sub
in
jmp
in
add
das
ljmp
xor
push
xchg
movsl
fcompl
push
ss
imul
sahf
xor
addr16
cmc
cmp
sub
pop
or
pop
mov
and
inc
dec
mov
fmul
jo
imul
imul
and
jle
add
and
mov
bound
xor
xchg
sahf
inc
inc
pop
cmp
lds
in
mov
loopne
frstor
pop
xchg
cmp
out
cwtl
push
dec
adc
inc
sarl
xor
mov
pop
sahf
jb
push
mov
fnstsw
mov
jno
mov
fwait
sbb
sbb
test
cmpsl
cmp
arpl
or
mov
sub
sub
cld
cmpsl
leave
mov
stos
xor
imul
mov
clc
fnstcw
insl
jg
jbe
lods
into
push
outsb
sbb
or
push
sbb
push
cli
cs
jbe
add
xor
push
jne
push
or
in
testl
bound
xchg
or
dec
fsubs
ss
sbb
pop
cmp
pushf
mov
sbb
fiadds
incb
aam
sbb
aaa
sahf
sbb
loopne
add
jnp
xchg
sahf
test
sbb
pop
push
lods
push
push
and
hlt
jmp
nop
test
fwait
sub
or
pop
aas
adc
jmp
cmc
aaa
xor
pop
and
xchg
stos
fistpl
andl
jp
push
add
je
inc
ljmp
push
sti
and
repnz
fisttpl
mov
pop
jge
xlat
mull
push
push
jge
xor
icebp
add
cmp
fadd
add
jb
sub
xlat
xor
nop
popa
push
in
inc
fcoml
dec
or
test
cmp
es
xchg
xchg
lcall
jns
pusha
push
scas
push
cmp
cmpsb
popa
icebp
mov
push
stos
test
pop
mov
inc
cmc
ja
rcll
stos
outsb
cwtl
ja
mov
ljmp
or
test
cmp
scas
jnp
lods
aam
xchg
ljmp
ss
sub
call
jb
mov
sarb
inc
inc
std
mov
scas
dec
icebp
pop
push
cmp
test
sub
jnp
lods
add
out
add
ds
cld
insb
inc
cwtl
aas
sbb
dec
cmp
mov
jg
shlb
jp
stos
cmp
push
ljmp
inc
push
ret
jae
aam
inc
gs
sub
push
rorb
iret
mov
mov
aas
mov
xchg
out
adc
sbb
decb
iret
sub
xchg
adc
sbb
cmp
cmpsl
roll
xchg
push
mov
cwtl
pop
rcrb
jno
fadds
rol
imul
pop
push
sbb
ljmp
inc
mov
daa
pusha
mov
int
dec
int
push
lret
mov
push
fldenv
or
jmp
or
cmp
jg
aad
das
and
lea
xchg
int
and
pop
jno
rolb
xchg
push
loope
dec
jnp
rorl
inc
sar
inc
mov
test
rcll
shlb
inc
movb
out
jge
insl
movsb
pusha
cmp
ljmp
enter
and
int
cld
xchg
in
fcomip
mov
push
movsb
mov
jg
adc
push
sti
fildl
imul
add
leave
inc
test
leave
add
fstpt
jl
and
repz
std
inc
mov
mov
scas
movsb
inc
dec
inc
mov
fcmovb
cmp
push
jae
push
sbb
das
arpl
addr16
movsb
cwtl
xchg
repz
decl
dec
pop
stos
adc
add
clc
jne
sub
aas
push
std
push
push
hlt
dec
push
pop
aaa
adcl
arpl
mov
out
movsb
test
push
aas
cmp
add
repz
notl
sbb
jb
lock
and
xor
add
inc
or
jno
into
cld
movsl
sbb
cs
repz
aad
cmp
test
roll
pushf
cwtl
fiadds
notl
cltd
rcrl
xchg
xor
lods
mov
les
out
xchg
inc
push
adc
shll
jecxz
mov
mov
repnz
shrb
mov
push
subb
add
mov
pop
add
lcall
fdivrs
jne
lret
dec
and
out
jp
lea
jmp
pop
inc
enter
sbb
mov
shlb
xchg
xor
adc
xchg
cmc
stos
mov
push
loopne
in
cmpsl
cmp
rcrb
mov
hlt
mov
push
xlat
movsb
aaa
jae
push
and
cmp
cwtl
testb
push
or
add
mov
push
fcmovnu
rcrb
inc
xor
ss
hlt
icebp
test
push
push
xchg
mov
daa
mov
jae
jle
jnp
fidivs
and
add
iret
imul
xor
sbb
xor
sbbb
lret
jmp
loopne
insl
test
insb
dec
jmp
cmp
imul
lds
pop
sbb
mov
cwtl
aad
sbb
js
mov
xor
add
push
push
xchg
inc
xlat
mov
idiv
adc
out
dec
xor
mov
pop
movsl
enter
popl
cwtl
out
insb
add
sahf
push
imul
pop
ret
xor
fists
repz
sbb
push
repz
stos
dec
mov
pushf
jo
sbb
ret
mov
jae
mov
jmp
mov
cmp
inc
out
notb
add
mov
das
and
add
stos
xor
addr16
lret
ret
pop
adc
mov
push
pop
stos
mov
add
ja
mov
jecxz
jge
int3
push
rcl
mov
daa
fadds
xor
cmp
mov
shrd
mov
sbb
jae,pt
aas
pop
sti
xchg
xchg
cmpsb
stos
xchg
test
test
sbb
cmp
das
or
jo
xchg
inc
and
jbe
sahf
shrb
push
dec
ja
das
aas
rcrb
test
and
sub
xchg
sbb
stos
adc
jno
or
loop
hlt
mov
test
add
cli
out
arpl
pop
sub
enter
sbb
repz
mov
sbb
aas
push
jg
xchg
fcompl
ljmp
inc
jp
jae
jne
or
adc
mov
cs
add
xchg
sub
cmp
lret
movl
mov
lcall
jne
or
aad
sub
ds
in
cmc
nop
out
xlat
sub
movsb
sbb
push
add
inc
cld
sbb
cltd
pop
mov
pop
sbb
pop
pop
dec
ds
push
jnp
and
and
iret
adc
test
outsb
push
ss
push
repz
test
jno
lret
lcall
addb
imul
dec
xchg
shll
ljmp
adc
adcb
sbb
xor
jae
pop
mov
jg
xorl
add
lahf
sbb
cmp
fadd
sbb
aam
cmc
shrb
outsb
and
sbb
out
popf
or
test
dec
push
and
pop
imul
iret
icebp
std
loopne
out
arpl
or
sbb
repz
stos
jge
pop
jnp
cld
std
xchg
or
loop
xchg
aad
jae
insl
and
dec
stos
add
sbbl
movsl
enter
mov
inc
lock
shll
fs
xor
stos
mov
data16
out
mov
push
inc
int
es
cltd
pop
fistpll
cmp
mov
add
mov
inc
cld
cmp
testl
pop
arpl
pop
jae
pop
orb
ret
int3
mov
xchg
jmp
int
dec
mov
cmp
mov
int3
inc
in
jns
ss
jnp
repnz
inc
inc
xor
shlb
or
repz
add
mov
int3
lret
mov
sub
xor
sub
inc
aam
xchg
xor
fwait
cmpl
push
pop
mov
sbb
jb
push
push
mov
xor
imul
aam
xchg
test
data16
sbb
das
or
neg
outsl
scas
push
inc
into
mov
mov
inc
cmc
orb
cmp
cwtl
scas
push
pop
lret
pop
pusha
xlat
ss
mov
mov
lods
adc
dec
xorl
imul
fisttps
add
data16
gs
push
mov
or
add
insl
adc
and
adcl
out
rol
sbb
xchg
nop
outsl
mov
orb
push
xchg
divb
pop
jecxz
lcall
rorl
ficompl
in
mov
rolb
shrl
lret
gs
stc
aaa
fildl
dec
enter
imul
jne
movsl
aas
lea
movsb
stos
lcall
add
pop
cmpsb
pusha
pop
insl
nop/reserved
mov
pop
das
ret
daa
cwtl
inc
jecxz
filds
xor
in
pop
mov
fsubl
jb
xlat
add
addr16
adc
inc
out
pop
push
sub
ret
xor
aad
pop
ss
cmc
dec
pusha
sub
mov
xorl
push
enter
fadds
xchg
push
push
stos
imul
pop
repnz
push
in
roll
jae
scas
xor
lods
xchg
xchg
fcomi
xchg
sbb
mov
push
insb
mov
or
push
in
or
mov
je
push
cmc
sub
xor
inc
or
jecxz
push
mov
test
insl
int
mov
xor
mov
inc
pop
lea
insl
sub
iret
or
xor
fs
cmp
js
mov
mov
cltd
ljmp
mov
mov
jns
out
lods
and
inc
push
jnp
jne
add
inc
lds
jp
inc
aam
pop
hlt
pop
in
scas
cwtl
dec
inc
test
pop
adc
push
daa
rclb
inc
pop
cwtl
mov
mov
push
enter
ficompl
es
pop
sub
jl
mov
pop
mov
arpl
mov
stos
sub
sub
jl
andl
dec
loopne
and
inc
push
and
adc
imul
in
repz
and
insl
inc
mov
mov
movsl
shlb
push
pop
lock
mov
xor
pop
sbbl
and
das
xchg
icebp
sahf
mov
push
mov
loope
js
push
mov
roll
dec
icebp
mov
scas
xchg
adc
xchg
cmpsb
shll
ficompl
adc
ljmp
pop
add
cmp
mov
outsl
stos
shll
enter
sbb
or
xor
in
xor
leave
stc
jecxz
push
sete
push
mov
pop
xor
cwtl
hlt
movsb
or
xchg
jmp
jge
cmp
subl
cmp
dec
mov
popa
and
xchg
jmp
fcompl
mov
dec
mov
lahf
sub
mov
lret
scas
stos
or
mov
movsl
jecxz
lods
inc
pusha
hlt
aaa
shrl
jno
push
and
pop
mov
dec
or
pop
into
adc
out
mov
dec
pop
out
mov
inc
cmc
push
mov
mov
shlb
inc
add
mov
add
pmaxub
sahf
fstps
jno
loop
ret
sbb
aam
jae
fs
xchg
cmpsl
dec
mov
sbb
fidivs
or
or
into
jns
cmpsl
and
adc
mov
jle
or
inc
nop
cmp
addr16
adc
nop
enter
movsb
adc
dec
push
xor
fisttpll
test
enter
cli
loope
mov
xchg
push
xchg
shll
push
mov
dec
insb
inc
push
dec
fucomp
add
push
dec
or
roll
jmp
mov
pop
sbb
jno
cmpl
fwait
or
and
push
outsl
add
orl
mov
push
out
stos
scas
mov
xchg
loop
xchg
test
cli
and
les
es
jne
and
cmc
sub
push
dec
pop
and
adc
popf
lock
int
lret
inc
in
add
xchg
mov
mov
fwait
xchg
lock
pop
jb
dec
cld
inc
shll
pop
fcomip
cld
cltd
arpl
and
add
mov
push
and
inc
orl
and
stos
lods
and
sarl
insb
into
jb
lock
aad
cmpsl
jbe
add
xor
rcrl
adc
cmpsb
push
cwtl
adc
lock
adc
mov
mov
or
cmp
jno
xor
scas
cmc
gs
push
imull
or
mov
cmp
adc
fisubrl
pop
sub
push
ror
or
out
push
pop
in
in
sub
push
loopne
cmp
add
hlt
daa
dec
dec
xor
lods
cmpsb
mov
and
sub
inc
clc
jmp
or
std
mov
scas
aam
dec
adc
or
pop
push
or
cmc
push
or
adc
mov
mov
mov
std
add
fidivs
out
psllq
imul
lahf
dec
jg
aaa
faddl
repz
sub
or
and
pop
cmp
push
fmul
sub
test
jmp
aam
xor
push
movsl
xor
sahf
cli
cwtl
outsb
mov
repz
icebp
add
add
pop
pop
inc
mov
ret
pop
mov
arpl
mul
lahf
jle
dec
mov
jecxz
mov
sarb
push
xchg
sub
jo
movzbl
dec
insb
dec
ds
loopne
cmpb
push
das
sbb
imul
ficompl
decl
inc
mov
dec
leave
loop
mov
push
jo
jne
xor
sbb
shlb
xchg
inc
std
fwait
mov
or
cmp
cmp
pop
xchg
jge
sub
xor
xchg
cmp
inc
adc
iret
rep
hlt
jmp
hlt
fwait
push
sub
mov
ficomps
mov
mov
ljmp
cwtl
xchg
mov
out
pop
ja
cmp
inc
pop
dec
or
lods
aaa
stc
xor
hlt
add
addr16
or
mov
inc
adc
lcall
mov
fdivrp
sbb
pop
imul
dec
pushf
mov
adc
xor
test
ret
cltd
push
adc
mov
rclb
movsl
push
mov
fcomps
push
shrb
sahf
fxch
outsl
mov
pop
ljmp
ret
sub
aam
int
cltd
dec
pop
and
das
push
adc
cmc
mov
inc
adc
mov
jbe
jg
or
xchg
clc
xor
or
std
in
and
xchg
ret
imull
mov
adc
lods
pop
add
pop
mov
das
cmp
xchg
sti
in
pop
lods
sbb
imul
push
xor
inc
je
pop
int
mov
les
or
inc
mov
cs
imul
lcall
test
into
push
arpl
faddl
mov
mov
push
movsb
leave
mov
cmp
fsub
mov
fdivrl
dec
mov
fs
mov
enter
cmp
cmpsl
mov
orl
cmpsl
add
and
mov
mov
sti
hlt
mov
xor
shll
pop
inc
or
jge
xchg
loope
mov
cltd
in
sarl
popw
movsl
in
mov
inc
mov
dec
xchg
mov
fimull
ds
xchg
push
ja
bound
daa
xchg
mov
jnp
es
iret
adc
hlt
out
add
push
or
pop
jl
push
mov
lods
mov
lds
addr16
sub
in
sub
sbb
getsec
movsl
aam
imul
or
mov
loop
movsb
push
jg
leave
popf
iret
xchg
cmp
mov
jbe
cmp
pop
xor
fistpl
movsl
inc
push
and
loope
movsb
ret
out
hlt
out
adc
and
sub
sub
fwait
enter
jmp
mov
mov
movsl
icebp
out
adc
xor
insl
mov
pop
ret
xchg
fsubr
es
cli
xor
scas
mov
push
sub
stos
in
jmp
lea
popf
aas
mov
add
sub
mov
pop
pop
sub
add
push
mov
insb
sub
out
push
push
pop
sbb
mov
xchg
jb
pop
xor
lds
ret
lcall
loope
lea
mov
mov
cmp
ds
cwtl
rcl
je
dec
dec
fsubrs
jns
ds
pop
mov
cmp
loop
push
mov
or
int
clc
or
mov
pop
mov
mov
xor
push
inc
in
jo
cmp
jno
and
push
add
jge
aad
ret
loope
popa
nop
fisubrs
or
mov
in
cli
xchg
daa
or
or
cmpsl
daa
jbe
pop
pop
shlb
mov
push
sub
push
cmp
mov
insb
fidivrs
outsl
push
and
or
jl
push
ror
push
loopne
aam
lcall
pop
loope
mov
stos
outsb
xchg
mov
in
pushf
mov
into
push
adc
leave
clc
jae
mov
jae
sub
and
xor
xor
ret
jo
cmp
pop
jge
rol
pop
outsb
out
mov
cmp
lock
dec
inc
dec
cmp
pop
icebp
fnstenv
sbb
xor
mov
mov
xor
pop
mov
fldl
mov
imull
xorb
push
xor
pushf
push
data16
push
cltd
sub
roll
clc
push
and
push
cmp
insb
push
lea
clc
lret
inc
jmp
lret
sbb
add
xor
mov
xchg
ljmp
mov
movsl
fsubrs
scas
daa
xor
inc
fstpt
mov
pop
imul
sbb
push
mov
sti
fistpll
mov
sub
mov
push
in
mov
into
mov
pop
test
mov
adc
iret
in
mov
dec
outsb
test
and
dec
js
jg
mov
adc
xlat
mov
in
mov
inc
and
iret
imul
addb
push
jmp
loope
pop
rclb
adc
jl
mov
sub
addr16
mov
jge
xchg
push
nop
jge
cwtl
int3
ja
int
in
pop
arpl
repz
inc
push
jae
sub
mov
leave
and
inc
in
mov
repnz
jns
inc
cmp
jae
pop
inc
shrb
jo
decb
aam
mov
pop
into
movl
and
dec
push
in
mov
xchg
mov
mov
sub
push
mov
sbb
test
sub
rcl
shll
les
fldl
pop
iret
push
fcmove
or
dec
xchg
je
pop
jle
xchg
stc
nop
cwtl
je
movsb
pop
adc
sti
lcall
not
push
cwtl
xor
mov
xor
test
sub
icebp
jno
shll
xor
stos
scas
ljmp
hlt
out
mov
add
xchg
or
in
jns
jge
cmpsb
inc
dec
adc
scas
or
pop
fwait
push
pop
jbe
adc
xchg
push
cs
out
pop
xor
stos
mov
inc
ret
cmp
mov
adc
fmul
jb
mov
scas
or
sbb
pop
out
std
push
mov
mov
mov
cmp
test
sub
adc
imul
out
movl
mov
out
sbb
pop
dec
jbe
decb
push
fiadds
leave
repz
push
inc
pop
shrb
insb
fwait
sbb
arpl
add
dec
outsl
and
gs
xchg
pushf
dec
xor
mov
cmp
inc
scas
push
mov
or
mov
add
shll
jne
xchg
mov
pop
inc
ror
hlt
jne
daa
ja
cwtd
inc
cmp
repz
call
test
out
xchg
sbb
adcl
pop
fucomp
pop
fdivrs
jbe
inc
mov
inc
sub
mov
jg
in
mov
faddp
push
sarb
mov
xchg
mov
mov
inc
jle
jne
inc
psrlq
push
jmp
pop
je
cmc
cmpsl
bound
dec
pop
popa
out
iret
push
xorl
fs
inc
push
clc
mov
xchg
push
test
add
arpl
sbb
jp
es
sahf
push
push
xchg
and
lods
dec
inc
ret
xchg
push
and
jb
mov
pop
bound
ja
fists
xor
cmc
push
mov
pop
mov
and
sbb
scas
rorl
mov
and
dec
add
test
push
test
mov
mov
lcall
rclb
or
inc
test
xor
xchg
xchg
aas
mov
xor
cmc
movsb
flds
cmpsl
add
mov
adc
jge
sbb
xchg
lods
cmp
adc
inc
popf
xchg
cmp
and
in
fdivs
dec
mov
push
push
imul
inc
les
cmp
sar
pushf
inc
mov
inc
adc
cltd
adc
cmp
mov
pop
mov
jbe
repnz
xchg
adc
xchg
xchg
icebp
mov
push
push
cmpsb
push
and
xor
jg
or
mov
inc
ja
sbb
sub
jne
xlat
add
loope
add
xorb
inc
fbld
dec
fstpl
out
jnp
dec
inc
xchg
mov
adc
and
mov
pop
lods
sbb
repnz
stc
or
out
xchg
dec
pop
ret
xor
data16
sbb
push
xor
mov
cwtl
loopne
pop
call
xchg
jae
sbb
outsb
push
pop
add
ficompl
lods
aam
cli
cmc
mov
imul
mov
bound
xor
inc
sti
push
push
imul
repz
and
frstor
xor
push
push
imul
sub
mov
mov
xchg
out
jns
inc
sahf
iret
sub
cmp
stc
jno
cmp
jne
xor
inc
pushf
push
add
jl
adc
mov
nop
pop
das
xchg
mov
add
insl
mov
sti
add
ret
jp
mov
stos
mov
movsb
push
mov
leave
fdivrs
ss
adc
out
jnp
cmp
add
lds
add
enter
ja
ret
mov
dec
stc
fistl
mov
cmp
jmp
aam
shll
sbb
xor
pop
inc
in
pop
sar
lcall
repz
mov
xor
test
cmpsb
add
fwait
insb
repnz
outsb
repz
mov
clc
int
popa
ror
sbb
mov
mov
xchg
jne
mov
mov
xchg
xor
insb
gs
dec
push
je
inc
out
mov
imul
xchg
push
push
sbb
dec
in
je
pop
inc
rcr
and
mov
pop
mull
push
mov
cwtl
cmp
aas
ss
je
push
aaa
andb
shrl
repz
mov
mov
push
push
pop
jno
sahf
fs
popf
sbb
in
in
iret
out
mov
or
add
ficoml
jg
imul
test
jbe
push
and
jnp
out
inc
movsl
push
cpuid
fidivl
sbb
stc
xchg
pop
xlat
subl
sub
pop
jmp
roll
mov
dec
cmp
gs
sbb
and
frstor
push
push
xor
mov
push
jae
inc
pop
xchg
xchg
or
gs
adc
pop
ja
popa
aas
int3
push
in
xor
mov
xchg
or
push
jecxz
mov
orb
std
test
ret
xchg
imul
adc
arpl
xor
test
leave
out
pop
mov
mov
pop
push
xchg
negb
sub
push
push
out
inc
inc
imulb
sahf
dec
mov
aas
stc
outsl
lcall
inc
fcomip
push
into
shl
xchg
ret
pop
arpl
jecxz
ss
mov
cltd
ljmp
jl
push
mov
shrl
dec
sti
mov
test
hlt
sbb
adc
jae
pop
not
inc
cmp
push
divb
lods
stos
les
pop
movsb
bound
insl
repz
test
cmpsl
ljmp
cmc
out
dec
into
pop
pcmpeqw
jle
sub
ret
mov
fmul
outsl
mov
and
mov
mov
adc
cmp
ja
invd
adc
pushf
push
adc
mov
orl
cld
push
test
sbb
pop
stc
jmp
sbb
imul
std
pop
or
inc
ss
fdivrl
push
popf
jl
aad
pcmpeqw
sub
test
sub
adc
jno
sti
iret
add
jb
out
rclb
in
fsts
mov
mov
and
adc
test
shll
jle
sub
bound
pusha
and
xchg
lret
or
leave
adc
jno
or
test
mov
shlb
dec
xchg
push
aad
or
stc
out
js
mov
fildll
rcl
sarl
sub
mov
adc
scas
loopne
les
fwait
bound
test
pop
outsl
sbbb
mov
jo
mov
xor
sub
stos
hlt
mov
jne
dec
and
jg
xchg
fstpt
shll
push
int3
sbb
pop
lods
adc
mov
sbb
imul
adcl
adc
jbe
out
xchg
push
add
or
xor
ror
lock
mov
nop
insl
rcll
jnp
and
dec
inc
dec
hlt
sahf
mov
test
jns
xor
aas
out
shll
sbb
and
in
xorb
test
call
fs
fimull
dec
in
jmp
loopne
ljmp
enter
pop
sti
mov
shlb
pop
jo
push
mov
pop
or
jae
orps
adc
sub
test
sti
cmp
lea
sbb
pop
dec
cmc
mov
pop
aam
in
adc
insb
negl
mov
pop
sub
into
mov
fnstsw
dec
inc
jns
mov
push
pop
std
nop
ret
inc
inc
inc
in
cmp
test
xchg
and
ss
nop
mov
add
mov
cmpsl
aad
iret
xchg
or
clc
fsubs
cmp
inc
xchg
in
mov
pushf
sbb
rclb
xor
into
and
cmpsl
mov
mov
jmp
scas
sub
dec
sbb
xchg
push
jb
sbb
sahf
jno
punpcklwd
rcr
mov
mov
addr16
pop
lcall
jecxz
mov
jg
fisubl
stos
movsl
add
fldenv
repz
cmc
movsb
pop
int3
push
push
imul
sbbb
mov
ja
mov
or
repz
int
enter
push
insl
lret
out
divb
scas
loope
test
jmp
mov
jne
jmp
incb
fcomps
lret
cli
jbe
mov
mov
jne
pop
sbbb
addr16
pushf
cmpsl
aad
test
pop
jmp
cmp
gs
or
daa
lahf
insb
mov
xchg
ss
add
push
pop
sub
sbb
or
test
or
jl
sub
loope
mov
mov
push
nop
imul
int3
pop
arpl
cmpsl
dec
or
nop
jmp
lahf
inc
pop
pusha
sbb
xor
fisttps
cmp
mov
mov
pushw
push
inc
jne
divb
mov
dec
icebp
or
cmp
cmp
xchg
push
or
cltd
pop
adc
fs
mov
rorl
loope
mov
lock
push
cmp
loope
inc
jmp
xor
mov
jno
push
pop
lcall
cmc
lods
pop
shlb
add
adc
lahf
fnstcw
mov
mov
pushf
and
jecxz
inc
adc
scas
xchg
adc
xchg
xchg
ret
jne
rorl
mov
jge
sub
jmp
outsl
jne
imul
dec
and
imul
dec
mov
push
lds
outsl
fcompl
adc
inc
adc
in
and
lock
aas
movb
fsubrs
push
dec
jmp
lcall
out
sbb
fsubl
fcmove
and
and
gs
cli
cmpsb
repz
pop
sarb
xchg
xor
or
push
sbb
out
xorl
push
sbbl
das
push
daa
sbb
dec
jmp
dec
sbb
loop
xchg
lock
pop
xchg
cwtl
faddl
adc
pop
in
pusha
pop
scas
and
add
cmp
cmp
shll
mov
push
cld
pop
lret
mov
outsl
and
clc
sub
adc
inc
sub
jbe
lahf
pop
fcoml
lea
cmp
sbb
or
pop
div
and
jp
gs
pop
lret
or
mov
jno
fcoms
js
add
arpl
iret
rcl
aaa
iret
popa
fistps
add
das
pop
lock
insb
aas
or
xor
or
pushf
inc
daa
adc
cwtl
add
add
out
loope
push
jecxz
adc
test
add
mov
mov
cmp
std
fistl
adc
xchg
test
addr16
nop
insb
xor
add
hlt
fcomps
cld
std
cmpsb
mov
stos
push
outsl
jb
pop
mov
pop
jecxz
jae
nop
adc
mov
hlt
repz
pop
test
filds
xlat
data16
mov
imul
inc
scas
pop
cltd
stos
pop
push
lret
adc
or
ja
adc
mov
adc
aas
jge
push
sbbl
repnz
sbb
mov
out
or
xorb
or
or
out
inc
repz
xchg
jae
inc
dec
bound
sub
jl
push
xchg
cmpsl
loope
pop
mov
mov
insb
mov
divl
mov
adc
lea
pop
outsl
pop
mov
pop
sub
jbe
xor
in
or
aad
mov
lea
mov
jmp
pusha
loopne
or
sbb
scas
xchg
mov
mov
ss
add
nop
in
dec
jg
mov
and
std
jg
sarl
cmp
push
shr
ret
jbe
and
test
adc
dec
push
clc
stos
mov
cmp
rclb
mov
lods
test
adc
jb
xchg
push
adc
adcl
out
ficoml
inc
cmp
push
xchg
inc
shrl
xor
lret
sub
in
les
and
lcall
dec
in
rclb
xchg
in
mov
insl
aad
xchg
in
into
push
movsbl
jecxz
enter
mov
out
int3
push
pop
xchg
stc
int3
jnp
pop
test
jl
test
shll
jo
xchg
mov
or
and
in
rorl
stos
pop
repnz
cli
imul
dec
loopne
aam
jmp
cmp
and
jge
fisubrs
mov
xor
mov
lock
fwait
sbb
xchg
mov
dec
in
in
out
pushf
xchg
jae
loop
xchg
cli
xchg
sub
out
and
cmp
mov
and
mov
inc
sti
add
pop
aam
lods
inc
pop
js
mov
jb
loopne
divb
adc
cmp
xchg
and
xlat
push
jnp
mov
jns
scas
mov
jmp
mov
sub
es
mov
ja
mov
jnp
dec
mov
stos
add
stos
arpl
mov
mov
leave
add
sbb
cwtl
jo
inc
cmc
out
cld
adc
mov
out
arpl
mov
cmp
cmpsb
sbb
pop
in
jmp
lret
add
dec
or
mov
push
test
int
mov
fcomps
jnp
add
inc
jae
rcll
pop
and
push
adc
xor
lcall
fs
push
cmp
mov
lods
fdiv
cs
cmp
push
jg
sbbb
in
in
popf
lods
clc
xchg
add
push
xchg
xchg
mov
xchg
in
push
out
out
stos
pushf
lods
movsl
std
fsubl
arpl
cmp
add
cltd
imul
jns
lds
cmovbe
adc
in
xchg
aad
rorb
lea
mov
mov
sub
or
mov
mov
stos
sti
inc
arpl
mov
inc
imul
mov
idiv
inc
decl
lods
int
mov
xchg
cmp
rcrb
jae
mov
cmp
cmpsb
jo
mov
xor
subl
inc
add
aaa
mov
inc
mov
dec
loope
jnp
mov
daa
dec
movsl
das
xchg
sbb
add
mov
and
mov
fldt
or
sbb
scas
fwait
sub
mov
push
jge
loope
cmpsl
ret
cmp
adc
jmp
mov
cmp
and
pop
in
imul
ja
sahf
sti
scas
cwtl
subb
mov
enter
sub
push
imull
sti
insl
jno
jp
mov
stos
xor
movsl
shrl
xchg
sti
cmp
shrb
cmp
add
fmuls
adc
ret
loope
dec
inc
es
jp
aas
mov
adc
jge
in
cmpsl
or
scas
inc
test
sbb
popf
outsb
mov
mov
insl
sbb
push
mulb
sti
subb
push
lods
mov
div
sbb
inc
aaa
nop
xchg
cmp
js
dec
subb
test
xor
cwtl
push
mov
stc
inc
dec
out
aaa
cltd
and
outsb
adc
pop
mov
xor
or
sbb
mov
add
testb
cmpsl
fldl2e
ljmp
mov
sub
cmpsl
cwtl
mov
mov
rcll
sbb
adc
mov
test
or
jp
icebp
push
push
arpl
mov
fiaddl
mov
aas
insb
xchg
sub
icebp
xchg
mov
sub
adc
and
sbb
daa
xor
mov
ljmp
fld
mov
cmpb
xor
inc
repz
mov
mov
das
fistpll
adc
xor
es
or
mov
adc
adc
or
pop
scas
add
dec
or
aas
push
stos
stc
std
jnp
fwait
ljmp
nop
sbb
loop
mov
xor
aad
jle
jecxz
lahf
loope
adc
sub
xchg
inc
xchg
dec
and
sti
dec
mov
or
push
subl
dec
mov
imul
xorb
inc
repz
mov
jbe
fdivp
pop
push
cld
jmp
and
ret
sbb
and
leave
jmp
mov
push
and
std
mov
push
mov
sub
imul
sti
mov
stos
mov
sbb
les
add
sbb
lcall
int
fdiv
and
mov
mov
push
mov
sbb
mov
jb
push
jb
push
test
dec
loop
dec
xor
adc
adc
scas
cmp
data16
in
mov
sbb
cltd
cltd
fldl
mov
mov
lods
add
fnsave
aas
jne
mov
xchg
test
push
sarl
add
xchg
out
mov
int
mov
fdivl
loop
sbb
push
loop
xchg
sub
pop
push
and
jb
adc
sahf
loope
fnstsw
sub
insb
out
add
in
cmp
rcrb
mov
mov
push
and
out
out
sub
pop
mov
push
jnp
push
push
jg
dec
sbb
in
pop
sub
cmp
mov
mov
popw
repnz
jle,pn
cwtl
mov
pop
cwtl
sbb
jns
inc
xorl
xchg
rorl
fnstsw
imul
push
fcmovb
fs
mov
andl
jp
sbb
popa
sbb
xlat
leave
sti
push
and
scas
or
test
xor
enter
cli
int
loopne
out
adc
sbbl
sbb
inc
pop
shrb
repz
jp
sub
or
fwait
xor
insb
cmp
and
in
xor
jg
out
sub
lret
jmp
pop
dec
jp
mov
jns
mov
out
lea
or
xchg
xor
cmp
aam
jbe
mov
nop
inc
sub
cli
lahf
pop
iret
sub
mov
push
cs
andb
inc
rcrb
add
jno
cli
ljmp
pop
sbb
adc
mov
xchg
cmp
test
dec
cmpsb
je
push
rol
nop
cli
inc
arpl
sub
pop
out
data16
mov
and
int
jns
loop
jl
or
test
test
push
adc
fistps
hlt
xor
addr16
int3
test
rcll
jne
lret
push
pop
or
or
out
lret
lret
pop
dec
push
xchg
loopne
cli
xor
jb
dec
dec
mov
inc
sbb
and
xor
or
int3
bound
aam
add
jge
scas
pop
xor
mov
stc
test
ret
cwtl
ret
ret
sub
es
jle
push
orl
sub
test
cwtl
cltd
mov
movsl
ret
mov
dec
add
test
add
and
in
jnp
mov
push
hlt
leave
mov
dec
sbb
cmp
inc
push
arpl
mov
out
mov
pop
lds
popf
mov
jle
xlat
adc
bound
insl
inc
xchg
sbb
sbb
mov
mov
and
popf
insl
inc
shrb
mov
leave
jge
adc
mov
jmp
call
popl
int3
mov
out
xchg
jae
pop
aad
lret
or
adc
mov
inc
mov
cli
mov
xor
mov
gs
cld
add
into
in
mov
data16
icebp
sahf
push
cmpsl
and
movsb
jns
pop
call
xor
pop
mov
lock
mov
outsl
cmp
test
cmpsb
adc
mov
add
push
xorb
mov
xchg
sub
test
xchg
lret
lcall
jns
in
cwtl
mov
shll
sub
inc
clc
repnz
stc
or
sbb
inc
ret
inc
mov
sahf
hlt
xchg
jno
out
mov
ret
repz
jb
and
sub
xor
addl
insb
xchg
add
push
dec
ss
loopne
dec
sbb
push
adc
scas
cli
push
push
repz
adc
push
add
std
push
lds
mov
xor
jmp
movups
pop
fidivl
repz
cmpsl
std
sarl
jge
push
imul
loop
sti
push
cld
loop
lcall
cmc
jo
sti
add
imul
cwtl
jg
in
mov
pop
inc
ret
push
mov
xchg
mov
int3
scas
clc
xchg
mov
fmull
loopne
and
loop
int
cwtl
dec
sub
fstps
dec
mov
popf
std
jg
testl
sahf
add
xchg
addr16
insl
cmpsb
add
in
mov
dec
fwait
cwtl
mov
pop
sub
loopne
dec
sbb
daa
inc
mov
xchg
inc
push
gs
pushf
push
mov
add
lea
fistps
push
add
adc
inc
fstpl
pusha
int3
rorl
sub
sub
int
cli
xor
dec
neg
stos
mov
ss
std
fsubl
sub
mov
in
inc
mov
xchg
cmp
inc
ja
es
mov
out
add
inc
fistps
xchg
push
adc
incl
pop
int3
push
xor
shlw
mov
mov
fcom
xor
jnp
xor
jbe
imul
arpl
lea
iret
out
sbb
mov
faddp
jnp
lods
jbe
test
cmove
cmp
jp
adc
xor
mov
cmp
add
mov
incb
scas
pop
roll
shrl
out
ret
jb
jg
sbb
movsb
stos
lret
imul
fldcw
xchg
imul
xor
cmp
inc
inc
add
or
dec
cmp
lds
jo
fs
pop
xor
icebp
adcl
sub
insb
aaa
fwait
add
adc
stos
out
jg
dec
outsb
test
sub
adc
shl
dec
ret
sbb
aad
and
mov
repnz
ljmp
out
repz
jmp
arpl
sub
outsb
loopne
dec
jmp
mov
mov
mov
mov
sbb
pop
orb
push
nop
es
jmp
lods
rcll
imulb
jnp
cmp
xor
rcll
cmp
mov
outsb
or
or
fsubl
int
and
add
cmp
iret
lret
repz
cmc
movsb
pop
lds
add
add
ds
sub
pop
push
popa
jno
pop
insb
add
xor
aad
aaa
cmpsb
inc
push
ljmp
rclb
sbb
loop
pop
mov
sub
movsl
jbe
and
fs
add
shl
push
jge
rorb
or
pop
shll
mov
in
inc
push
lods
push
movsb
int3
sub
jg
cmp
sbb
nop
pop
mov
cwtl
mov
cmp
xor
jle
fxch
lcall
jo
push
and
fs
orl
mov
adc
in
mov
and
mov
sub
shlb
repnz
inc
push
jb
add
push
pushf
mov
mov
cmp
andps
scas
pop
ret
daa
fsubl
loop
inc
lret
in
lret
pop
frstor
xlat
dec
mov
call
test
push
inc
push
hlt
push
adc
fiaddl
test
add
mov
stos
shlb
subb
sub
mov
and
adc
dec
pop
ljmp
dec
cmp
test
shlb
sub
sub
sub
jmp
xor
sbb
add
lds
test
arpl
repz
dec
cmp
fidivl
je
pushf
lods
mov
push
cmp
or
ljmp
shrb
adc
inc
iret
or
subl
xor
cwtl
xchg
pusha
inc
push
iret
pop
mov
cmp
xor
dec
test
fwait
insb
mov
sub
cmpsl
pop
jae
shl
popf
pop
xchg
xchg
faddl
bound
xchg
pop
push
out
loope
outsl
mov
sub
xorb
cmc
cmp
loope,pn
outsl
dec
mov
xchg
mov
out
cmpsb
cmp
imul
jp
sti
scas
push
inc
push
fsubr
and
icebp
enter
and
jb
sbb
jns
in
cld
jmp
or
out
mov
aas
or
lahf
cmp
push
jg
add
pop
ljmp
pop
sub
pop
je
add
or
jmp
fcomps
neg
pop
dec
cmc
addr16
cmp
inc
sbb
or
pop
addb
xlat
dec
jmp
dec
rcll
jmp
mov
rcl
jbe
adc
in
jo
lea
lahf
fsubrs
mov
and
dec
es
add
mov
mov
jae
out
cmp
gs
lea
outsl
mov
cmp
mov
jnp
jno
aas
pushf
aas
adcb
sub
push
add
pop
mov
mov
sub
sub
push
pop
push
pop
mov
cmpsl
push
call
shlb
and
push
push
out
mov
movsl
lret
pop
push
mov
sub
adc
push
dec
fbstp
dec
push
sub
scas
jmp
mov
sbb
jo
inc
jle
and
pusha
mov
xchg
mov
dec
rorl
jle
lds
or
fmuls
push
sbb
stos
push
fst
ret
or
stc
shrl
fnstenv
lods
pop
imul
cmp
arpl
pop
mov
mov
stos
dec
outsl
inc
inc
dec
js
dec
out
or
jmp
rolb
mov
push
daa
pop
xlat
and
jno
sub
fistl
jb
pop
mov
xchg
mov
adc
subb
push
cli
add
cmc
add
fmuls
fidivrl
loopne
mov
mov
cmp
loopne
adc
insb
jle
sub
in
xor
adc
gs
mov
adc
test
sti
aad
pop
mov
cmp
mov
rol
cmp
adc
jmp
add
add
imulb
ljmp
pop
lods
add
loop
rcr
or
inc
insl
pushf
xchg
iret
add
aas
rcrb
enter
testl
jecxz
lcall
jne
lock
call
pop
scas
lods
and
outsl
outsb
sub
or
daa
xor
adc
cltd
inc
ret
rorl
lcall
insb
and
fwait
sbb
inc
out
hlt
shrl
inc
cmp
fistpll
cli
or
fldcw
cmpsb
or
fstps
aaa
imulb
sti
scas
xchg
gs
std
mov
dec
add
stos
or
or
out
call
jecxz
xor
mov
ret
xchg
mov
push
sub
mov
imul
scas
mov
shrl
dec
push
push
and
mov
rorb
push
jns
inc
loope
jl
lods
xchg
movsb
out
push
int
pop
imul
icebp
lods
jne
das
sbb
cmp
repnz
ret
push
sub
mov
bound
mov
mov
jb
lahf
clc
fsubr
popf
movsl
fwait
inc
or
inc
mov
add
rcll
inc
neg
stos
pusha
inc
aam
xor
add
es
call
fsubrl
push
aaa
movsl
addb
test
js
push
push
call
add
into
jnp
aam
or
pop
sub
gs
stos
jae
dec
xchg
add
and
xor
mov
pop
inc
mov
stos
and
lods
jns
xchg
and
pop
inc
clc
in
cmpsb
or
in
js
mov
mov
cmc
pushf
bound
js
push
ja
out
jnp
out
fwait
movsb
mov
js
dec
xchg
and
push
jo
fmull
pushf
das
movsb
mov
psubq
repz
cwtl
xor
movsb
add
adc
xchg
xchg
xchg
pushf
das
mov
fdivr
scas
outsl
in
in
mov
push
inc
xchg
push
movsb
xor
inc
jge
xor
push
or
fstps
mov
inc
pop
pop
jp
xor
and
dec
lret
sbb
lods
dec
add
in
dec
fildll
scas
mov
jecxz
ja
add
inc
jmp
cli
mov
and
popf
scas
dec
add
wbinvd
push
adc
inc
fs
leave
fcoml
pusha
push
mov
jl
add
in
push
push
and
out
fisubrs
jnp
aas
sub
push
sbb
mov
inc
outsl
sub
popa
loope
lods
or
xchg
or
mov
xor
jl
in
mov
enter
inc
pop
sub
cli
or
cli
dec
inc
scas
jnp
stc
sahf
mov
scas
int
jecxz
adc
mov
jno
cmp
mov
std
rorl
je
lods
jle
pop
loope
sub
mov
xor
clc
xchg
xchg
add
mov
cmp
add
pop
leave
loope
mov
fisubs
add
nop
rcrb
std
inc
jge
push
imul
sbb
jmp
push
bound
pop
mov
popf
movsb
arpl
bound
lcall
or
adc
sbb
add
xor
rcll
inc
push
dec
xchg
fisubl
push
cmp
jnp
mov
xchg
movb
inc
mov
jmp
xchg
jb
jmp
sub
xor
jae
sahf
pop
rcrb
es
leave
gs
lahf
mov
sti
push
call
adc
jns
ficomps
adc
dec
inc
mov
mov
aam
fwait
jnp
jae
daa
push
aas
xchg
bswap
scas
jge
push
and
pop
sub
dec
add
jb
daa
dec
mov
fs
jge
add
in
inc
std
dec
into
xchg
jbe
mov
fwait
test
in
xor
lock
movsl
push
inc
stc
inc
adc
ret
popa
mov
popa
jbe
or
jmp
pop
push
std
mov
push
mov
dec
sarl
jle
sahf
insl
dec
pop
gs
imul
mov
mov
jne
leave
fisubs
fstpt
inc
mov
ds
stc
in
add
jg
inc
push
mov
lret
pusha
pop
call
add
cmpsb
xchg
cli
jle
mov
pop
sahf
jbe
outsb
cmpsl
dec
add
call
adc
mov
cmpsl
mov
push
repnz
xchg
in
shrl
push
clc
out
pop
sub
sbb
lea
inc
popa
in
xor
push
lods
push
cmp
jl
xchg
inc
sbb
mov
add
adc
hlt
daa
cmpsl
insb
dec
inc
jno
dec
ret
push
in
cmp
dec
jle
cwtl
mov
add
xchg
lods
pop
sti
adc
and
cmpsl
push
xchg
jmp
add
call
dec
mov
push
and
adc
sbb
fdiv
mov
loopne
dec
or
add
inc
mov
jl
jle
aaa
sbb
sbb
cmc
cmp
inc
push
mov
or
ja
inc
outsl
and
or
insb
adc
cmp
ficoms
mov
xchg
nop
xor
add
pop
sbb
lock
pusha
sbbl
and
aad
out
mov
add
jp
push
adc
push
fwait
push
fldcw
jo
fldt
xor
ss
jl
das
loope
in
enter
pop
or
xor
test
bound
out
mov
lods
jno
lcall
cmp
inc
insl
insb
push
mov
pop
cmp
mov
pop
pop
push
jecxz
arpl
into
mov
repz
iret
sbb
insb
adc
push
sbb
daa
iret
xchg
test
sti
orl
push
in
in
sbb
pusha
pop
outsl
aaa
insl
arpl
push
gs
mov
jmp
adc
ret
cmp
push
jl
mov
adc
and
or
jne
xor
ja
pop
sbb
test
ja
ja
sahf
xlat
push
pop
insb
aad
jge
imul
cltd
into
xchg
jne
in
adc
pushf
dec
mov
fwait
sub
arpl
and
jmp
cmp
or
sub
mov
sbb
iret
jp
mov
negl
sbb
adc
sbb
adc
and
mov
lds
jae
push
cs
xchg
bound
sub
dec
ds
stos
or
mov
test
fldl
adc
int3
sbb
and
aaa
mov
push
rolb
dec
inc
aam
push
add
lret
sarb
icebp
cmpsl
pusha
out
cmpsb
fnstenv
movsl
std
arpl
sahf
pop
add
imul
push
dec
sub
std
push
xchg
sbb
dec
sub
addr16
lds
add
loopne
ret
pop
les
mov
mov
inc
in
clc
sbb
iret
jl
int3
dec
mov
repz
movsb
xchg
add
pop
push
add
fldenv
fdivrl
inc
addb
sbbl
push
dec
iret
fildll
loope
outsl
test
dec
mov
fisttpll
stos
push
popa
les
ja
and
js
inc
jmp
data16
xchg
in
pop
adc
xchg
mov
jge
lds
fmuls
rorl
pop
ja
pop
stc
stc
aas
mov
les
imul
xchg
insl
mov
cmp
shrl
insb
adc
les
aam
mov
add
insb
and
sahf
jnp
cld
adc
dec
addr16
bswap
sub
fdivl
jmp
jecxz
outsl
push
dec
movsl
mov
es
es
pusha
sahf
xor
dec
int3
ljmp
jl
cmp
push
test
into
outsb
inc
popa
mov
add
sbb
out
imul
or
pop
pop
sub
mov
imul
and
mov
aaa
jae
mov
cmp
dec
stos
orb
sbb
les
iret
sbb
mov
call
lret
out
pop
testl
cmp
pop
dec
imul
test
negl
out
inc
xor
stos
dec
mov
repnz
inc
fnstenv
jnp
out
dec
icebp
je
xchg
testl
test
test
es
fnstcw
js
push
cmpsl
and
dec
cmpsl
push
pop
xor
in
xchg
and
or
and
mov
jns
jl
dec
push
mov
cmpsb
and
test
clc
test
push
fs
out
cmp
js
jnp
cmp
mov
mov
ja
mov
mov
mov
scas
das
jbe
ja
sbb
fidivl
cmc
sub
call
aad
testb
and
scas
inc
xlat
int
jnp
orl
sub
or
jg
mov
fs
adc
rol
jl
push
mov
in
adc
pop
sub
or
mov
ret
dec
je
data16
inc
int3
sti
cmc
inc
sub
mov
sub
adc
fwait
mov
mov
fisttps
sbb
test
adc
inc
xor
ds
imul
add
xor
in
jp
mov
test
addps
lea
sub
insl
inc
enter
sbb
sbb
fldcw
mov
mul
sub
push
sub
pop
sub
ljmp
fcmovnbe
sbb
mov
or
inc
out
adc
adc
sub
out
pushl
aad
push
pop
loopne
sarb
orb
in
loopne
je
inc
lods
outsl
adc
out
cld
shlb
insb
mov
jne
xlat
inc
dec
dec
cmp
mov
test
dec
enter
cmpsb
dec
sbb
clc
xchg
pop
loop
and
push
inc
mov
push
jnp
imul
ja
cmp
insl
sub
mov
out
lcall
aad
sbb
push
sarb
jns
daa
repnz
cmpb
or
pop
adc
fmull
mov
jg
mov
and
movl
cmp
lret
sbb
andl
enter
cmp
mov
inc
mov
xchg
pop
sub
xor
call
rcl
xlat
shlb
aaa
enter
mov
sbb
negl
mov
dec
and
push
add
je
jp
pop
mov
push
insb
jo
add
add
push
push
popf
xor
cld
call
dec
std
mov
or
ret
sbb
clc
add
shrb
mov
out
cmpsl
push
stos
mov
lret
jg
mov
push
or
ss
pop
mov
adc
std
cmp
or
and
rorb
pop
in
sbb
xor
cs
mov
cmp
pusha
push
pop
nop
inc
xor
jb
xchg
pop
sub
fs
sub
sub
flds
popa
les
dec
daa
and
sub
test
mov
pushf
jp
add
and
test
inc
mov
dec
mov
cld
in
lods
or
and
adc
mov
stos
adc
call
sti
inc
mov
jmp
jmp
mov
pop
fldl
xlat
jae
xchg
rolb
and
ja
push
cmp
cmp
lock
add
or
clc
ljmp
mov
mov
xlat
add
xchg
jno
pop
ss
add
loope
jl
sub
mov
xor
leave
stc
or
js
xor
mov
shll
cmp
mov
jb
inc
testl
inc
mov
out
cmpsb
mov
inc
aaa
scas
call
xchg
popw
pop
aas
sahf
scas
dec
mov
xchg
adc
int
repz
xchg
daa
fildll
push
mov
sbb
dec
xchg
dec
pop
repnz
pop
nop
fidivrs
in
mov
jne
test
jle
shlb
cmp
in
sbb
push
call
icebp
pop
sbb
xlat
push
ret
mov
enter
sbb
xchg
sbb
sbb
pop
adc
adcl
in
mov
xchg
mov
xor
jbe
jbe
add
test
fs
movsl
dec
sbb
pop
orl
mov
popf
mov
cmp
aam
jnp
xchg
lret
mov
cli
inc
push
pop
mov
push
test
jge
subl
stc
mov
mov
int3
pushf
jnp
inc
bound
cli
add
into
mov
adc
pop
push
pop
pop
inc
inc
popf
movb
aam
jmp
jno
dec
cmp
arpl
or
jmp
sarl
hlt
cwtl
ret
pop
add
cmpsb
dec
cmp
enter
cmp
fisubl
sbb
and
ret
mov
push
pop
add
addl
lcall
and
fs
test
ret
gs
jb
icebp
jl
sar
xor
stos
mov
data16
push
xor
cld
add
xor
sbb
mov
xchg
adc
scas
sahf
outsb
adc
pop
or
sub
lahf
shrl
fisubs
mov
mov
xor
sbb
cs
dec
scas
mov
pop
lock
ss
inc
pop
test
ds
mov
cmp
and
scas
sbb
or
xchg
add
push
push
scas
dec
push
ret
sbb
mov
movl
mov
adcl
lods
in
movsb
inc
add
clc
push
or
lret
imul
data16
mov
aad
jl
mov
lods
das
leave
and
rcr
push
jnp
sub
mov
push
push
sahf
aad
jmp
fwait
icebp
fld
fdivs
mov
stos
hlt
sti
outsl
ds
test
bound
fldenv
pop
cmc
lea
jne
mov
pop
push
mov
pop
and
lods
out
in
imull
mov
xchg
and
addr16
push
movsl
test
adc
lret
lea
cmp
out
call
lret
pusha
push
adc
test
push
xor
adc
shll
push
add
xchg
jl
ja
adc
pop
add
sub
cmc
test
xchg
lahf
dec
fcomps
push
mov
imul
insl
fidivrs
ljmp
je
icebp
push
or
mov
jg
push
inc
repz
lods
xchg
xor
cmp
insl
orl
adc
sbb
adc
iret
adc
nop
clc
pop
fnsave
push
xchg
pop
movsb
or
jge
fstpl
cmc
mov
push
cltd
stos
xorl
je
pop
lds
sahf
loopne
sbbl
in
xchg
or
test
adc
and
or
xchg
mov
dec
mov
dec
xchg
notb
jmp
je
ss
daa
jae
add
mov
shll
xor
iret
jge
cwtl
pushl
cmp
rorl
sub
lret
or
mov
rcll
pop
or
and
cld
sub
testl
out
ljmp
int3
add
test
add
mov
push
xor
xchg
mov
lock
dec
out
ja
fisttpl
xorb
jle
dec
pop
and
push
cmc
jl
pop
loop
mov
mov
mov
adc
lods
push
icebp
inc
mov
and
cld
add
aas
mov
mov
xor
adc
mov
jp
mov
dec
sti
cld
xchg
rorb
push
jge
mov
imul
or
imul
or
mov
inc
inc
push
cmpb
repnz
in
cmp
test
in
insl
rclb
push
xchg
pop
sti
sub
sub
test
je
lcall
jb
scas
fldt
xchg
fisttpl
mov
mov
or
or
roll
dec
fldl
and
imul
cs
adc
lahf
cwtl
dec
out
into
add
mov
mov
and
or
test
dec
or
jb
ss
inc
andb
jmp
push
pop
xlat
push
imul
insl
adc
ret
cs
lds
cs
push
dec
nop
sub
repz
sarb
and
dec
les
fsubrs
int3
pop
inc
cmc
ficompl
mov
xchg
mov
xchg
jnp
into
dec
sbb
jge
cs
fildll
mov
bswap
xor
xor
adc
jb
jmp
stos
into
dec
lret
sbb
in
stos
sbb
push
mov
stc
ds
cld
pop
stos
gs
jne
and
mov
jle
xlat
adc
xchg
hlt
and
adc
clc
jb
jmp
test
pop
fsubl
icebp
jle
jle
add
jne
xchg
mov
jne
pusha
jno
fcmovnu
jp
sti
fxch
iret
pop
pop
pop
loope
sti
and
cmp
scas
stos
iret
lret
dec
jmpw
rcl
xchg
jns
addb
cwtl
xchg
push
stos
add
adc
rclb
sbb
les
bnd
out
clc
pop
cmp
nop
xchg
pusha
ss
pop
and
aas
shlb
js
call
jecxz
fs
outsl
jmp
mov
stos
sub
xor
out
or
push
scas
or
stos
and
cld
imul
dec
sbb
cmp
cmpsb
xlat
sub
dec
repnz
cmp
sub
xchg
stos
out
pop
ljmp
ja
xchg
shll
divps
xchg
add
jbe
roll
testl
iret
xchg
std
xchg
shll
sub
cmpsl
sahf
aam
mov
xlat
add
fs
lcall
add
cli
mov
aam
orl
mov
scas
cmp
movsb
mov
ljmp
add
rcrl
data16
popa
cld
or
jno
hlt
xchg
xor
lods
push
ljmp
jno
pop
out
aam
sub
movl
xor
adc
push
je
mov
jne
repz
loopne
out
testb
movsl
cs
sbb
imul
ret
lds
aam
mov
in
mov
addr16
sbb
and
pop
repnz
cmp
dec
std
pop
or
mov
mov
and
xor
mov
sbb
das
pop
je
mov
inc
repnz
shrl
or
and
aad
mov
lret
dec
mov
notb
cltd
daa
test
aaa
cmp
adc
in
push
cmpsb
gs
push
push
xchg
sbb
inc
lret
fnstsw
dec
ds
out
aas
mov
pop
stos
inc
faddl
pop
sub
test
rcl
or
xor
rcll
pop
mov
or
in
dec
push
add
fs
adc
lock
or
dec
loop
sbb
jecxz
mov
inc
inc
inc
scas
sar
test
cwtl
mov
icebp
sbb
cmp
outsb
imul
cli
lcall
adc
jno
js
mov
hlt
cmc
dec
jp
jnp
xchg
insb
mov
aam
imul
mov
fidivl
push
mov
add
sahf
adc
loope
gs
jp
stos
inc
cmpsb
cs
iret
add
aas
shll
sbb
pushl
leave
pusha
lods
cltd
clc
aaa
mov
pop
jle
lock
mov
pop
mov
movsl
or
xchg
movb
lods
xchg
pop
lret
fidivrl
mov
ret
and
les
ds
cmp
fdivl
dec
xchg
adc
cmp
jge
fnstenv
ret
push
sbb
push
cmp
bound
decl
add
lahf
popa
shll
iret
mov
inc
mov
dec
mulb
and
test
add
xor
cli
dec
xor
in
xchg
aam
aam
push
ret
into
in
lods
fsts
mov
and
stos
pop
cli
jmp
int3
xchg
cmp
incl
jne
cld
mov
sbbb
mov
lds
xchg
into
stc
pop
xchg
fs
xor
lds
jecxz
push
cmc
pop
lock
jb
pop
cltd
push
jge
dec
mov
movsl
mul
leave
and
push
cmp
and
movb
or
xchg
xchg
add
insb
jge
xchg
sub
push
push
push
push
pop
sarl
inc
mov
inc
imul
mov
xor
xlat
sub
mov
add
jmp
fucom
mov
sub
movsb
cmpb
imul
aas
xchg
mov
pop
loop
addr16
cmp
idivl
mov
pop
insb
jae
sub
lcall
mov
adc
xchg
xchg
pop
adc
sbb
sarl
fcom
sbb
repnz
mov
fcoms
loopne
into
ja
sbb
xchg
mov
jg
test
rorl
sub
pushf
icebp
inc
popaw
mov
or
sbb
dec
mov
and
jo
or
mov
fnstcw
and
bound
out
repz
adc
mov
pop
jae
xor
stc
mov
into
ret
in
ret
and
jmp
clc
or
mov
xlat
jmp
add
enter
sub
movsl
cmp
xor
lods
fbld
mov
lahf
adc
push
mov
scas
rcrb
cmp
xorl
idivb
jmp
dec
lcall
lds
mov
inc
nop
ljmp
sbb
fbld
mov
xchg
lods
in
pop
push
ror
lods
push
mov
push
add
rolb
jecxz
jb
sbb
lock
jo
cmpb
arpl
and
mov
stos
out
xchg
call
sbb
mov
mov
ret
or
xchg
out
shlb
mov
sbb
pop
je
sbb
or
inc
addr16
lea
aas
in
lods
gs
and
in
mov
jnp
lret
add
pop
gs
mov
imul
mov
loope
pop
or
cmc
loop
sti
push
jmp
add
jmp
mov
stc
jno
cmc
sub
rolb
testb
stos
sub
je
add
test
mov
cli
push
xor
jl,pt
push
mov
mov
or
mov
xchg
mov
movb
pop
pushl
ror
jns
dec
lret
xchg
mov
adc
mov
outsb
and
xor
mov
sbb
enter
jge
adc
sub
arpl
push
notb
mov
mov
ficompl
adcl
inc
cmpsb
add
mov
daa
jg
mov
fsubr
arpl
adc
adc
jg
test
sbb
xor
and
fstl
std
dec
leave
xor
jo
jmp
into
inc
aas
pop
ret
neg
pop
arpl
je
sbb
daa
jae
mov
ds
and
mov
ja
pop
mov
cli
cld
or
subl
jp
lret
add
loopne,pt
adc
or
inc
or
xchg
lret
repz
mov
hlt
sub
inc
data16
sti
push
sbb
mov
fwait
pop
or
leave
icebp
mov
cmp
test
jl
and
pop
jmp
pop
and
sbb
adc
xchg
and
mov
mov
pusha
idivl
mov
mov
out
fsubs
jge
testb
xor
add
cwtl
mov
pop
mov
mov
adc
test
je
je
outsb
sub
aaa
les
or
movsl
jno
dec
or
add
mov
jmp
div
aaa
and
das
jecxz
pop
sbb
aad
mov
bound
orb
icebp
cltd
fisubs
loop
adc
or
xchg
cld
rep
int
mov
adc
mov
int
xchg
and
in
pop
cmp
aad
push
xchg
or
shll
mov
inc
jno
push
sub
sti
dec
std
pushf
inc
cmp
fisttps
cs
out
dec
jnp
xchg
test
push
movsl
ret
aad
jb
ret
jp
loope
dec
cmpsb
mov
jo
jp
xor
fisubrs
mov
shll
mov
out
lahf
sub
cmp
dec
sub
xchg
fstps
je
sahf
mov
movhps
into
popa
and
jno
push
mov
sbb
xor
sbb
mov
aad
sbb
jbe
and
pop
into
gs
mov
cmp
mov
cld
sub
in
test
popf
les
lea
pop
lods
sbb
sbb
rol
xchg
lds
pushf
rclb
lret
ja
mov
into
jbe
test
or
mov
mov
das
scas
xorl
or
xchg
lds
push
mov
cld
popf
xor
mov
and
jo
nop
sub
out
aad
fwait
add
std
bound
jge
push
sub
push
ljmp
cmpsl
cltd
and
popa
fldenv
mulb
das
in
push
push
jmp
aad
sbb
inc
clc
xchg
fs
mov
je
sbb
xor
loop
xchg
jl
push
stos
lcall
jbe
insl
popf
and
and
sub
inc
cmpsb
adc
data16
mov
xchg
sbbb
data16
mov
shll
pushf
test
mov
sbb
mov
repz
test
jg
in
add
testl
pop
sbb
test
or
push
mov
add
or
cmp
mov
rclb
loop
cmp
loope
inc
pop
sub
jmp
das
lcall
xchg
lock
mov
xor
mov
xor
xchg
mov
and
dec
adc
push
leave
test
imul
in
pop
sub
sti
mov
cmp
dec
dec
pop
aas
cmc
inc
jg
sub
iret
xchg
ret
repnz
jp
and
jp
bound
or
stos
xchg
out
jmp
push
dec
pop
and
imul
add
mov
je
lret
xor
in
sbb
and
inc
push
vpackssdw
imul
jg
shrb
js
adc
ja
xor
rclb
push
in
enter
pop
xor
arpl
idivl
aas
mov
xchg
ret
stc
mov
arpl
jae
mov
inc
testb
stc
loop
jle
into
fnstenv
pop
mov
shlb
out
push
ljmp
daa
ljmp
cltd
cmpsl
push
clc
das
pop
dec
jge
dec
xor
mov
out
mov
in
test
mov
pop
jae
aas
xlat
xor
cmp
dec
test
dec
xor
data16
lcall
pop
arpl
jecxz
or
jo
clc
in
in
lret
in
jne
lds
aam
pop
inc
lods
mov
fst
mov
into
filds
daa
mov
jno
mov
cmpsb
stos
mov
cmp
andb
pop
jne
cli
jl
xor
lea
jp
rcll
sbb
cli
decl
aad
mov
fistpl
lea
or
or
fidivrl
sbb
sub
cmp
and
dec
sub
in
mov
sub
sbb
add
sub
out
and
fidivs
stos
ret
push
ss
mov
lret
in
out
decb
pop
loopne
or
mov
jns
push
int3
dec
out
mov
aaa
push
data16
nop
int3
cli
inc
jmp
adc
xor
or
dec
mov
inc
add
js
rol
or
mov
stos
cli
aam
adc
addb
enter
pop
cmp
scas
in
hlt
mov
orl
ret
push
lret
notl
scas
mov
lods
icebp
push
jg
mov
movsl
out
cmc
fildll
jg
stc
mov
loopne
iret
cmp
or
mov
mov
or
mov
out
push
and
addr16
lea
es
or
adc
xor
ds
and
rcrl
pop
scas
mov
in
mov
out
and
xchg
mov
js
inc
pop
in
lcall
mov
and
push
leave
cmp
lcall
jno
cmp
dec
mov
and
out
in
daa
push
pop
push
insl
sahf
std
les
jp
push
dec
ljmp
mov
pop
loop,pn
pop
inc
cmc
fimuls
popf
jmp
sub
sarl
cmp
dec
inc
cmp
nop
and
dec
pop
adc
dec
jg
push
aad
push
in
xchg
jb
in
or
mov
movsl
pop
and
outsb
pusha
lock
pop
or
js
cs
aaa
jns
or
xlat
into
jns
sti
lods
xchg
sub
sub
sti
push
int
mov
js
xchg
lods
pop
or
punpckhdq
stc
and
lds
xcrypt-cfb
cmpsl
bound
push
cmpsl
jp
pop
mov
cmp
or
ja
js
out
mov
fs
jne
and
pop
mov
inc
add
dec
shl
jno
aad
rcrb
mov
jg
xor
or
aas
cmp
cmp
rcrl
out
lcall
movsb
mov
int3
sub
cmp
pop
add
mov
ds
fcmovu
sub
call
addr16
sub
push
repz
aad
cmp
pusha
ja
pop
pop
ss
iret
in
mov
pop
add
jno
pusha
adc
mov
xchg
add
imul
lret
pop
mov
inc
adc
xor
push
repnz
push
mov
sbb
dec
pop
fwait
sub
js
mov
sarb
sub
pop
push
sub
push
inc
mov
mov
leave
ja
mov
in
rolb
push
push
pop
in
adc
mov
popf
clc
push
cld
insl
fcmovb
sbb
and
out
mov
int3
outsb
in
ret
inc
imul
mov
dec
insl
adc
and
test
shlb
aad
xchg
les
subb
jbe
or
xor
jnp
test
les
stos
std
je
push
ja
xchg
xor
shl
pop
out
pop
mov
and
in
fldcw
lret
sub
enter
stos
jne
inc
inc
mov
fidivl
call
in
gs
inc
dec
dec
ljmp
mov
and
xbegin
rcll
jb
daa
pop
inc
pop
pop
push
in
addl
addl
or
mov
fs
js
negl
sbb
xor
ds
aam
fcomp
mov
mov
imul
and
jmp
pop
popf
insl
push
hlt
mov
int3
out
xchg
lcall
test
lods
insl
dec
inc
adc
arpl
gs
cltd
leave
sub
dec
cmp
fwait
sbb
lea
add
or
sbb
jmp
lods
mov
cmp
inc
addb
lret
and
cmp
pop
mov
je
pop
iret
mov
ljmp
aam
add
jbe
rorl
clc
and
int3
scas
into
inc
mov
sarb
add
jg
xor
dec
add
cwtl
sub
sti
dec
test
mov
out
cmpsl
xchg
shrb
cmp
flds
mov
xor
xor
pop
mov
adc
mov
pop
lcall
mov
repz
ljmp
inc
aas
push
pop
cmp
inc
shll
pushf
mov
mov
cmpsl
ret
std
jmp
mov
loop
ret
xchg
frstor
xchg
or
mov
sub
mov
icebp
jle
shll
test
cli
dec
adc
jmp
in
gs
xchg
inc
sahf
inc
mov
push
insb
add
mov
scas
and
cli
lods
cmpsb
mov
es
adc
or
jle
pop
cmpsb
add
or
lds
movsl
in
imul
sti
clc
xchg
dec
inc
mov
xchg
pop
cmp
cmp
jo
repnz
ficompl
movsb
imul
ror
push
daa
test
inc
lock
push
jp
stos
std
push
pushf
ficoml
loopne
pop
insb
inc
sarl
pop
mov
mov
into
addr16
shll
or
decl
ds
negb
inc
xor
adc
imul
bound
fldenv
adc
or
sub
ret
das
out
inc
dec
hlt
bound
ja
popa
pusha
xor
rol
test
fisubrl
idivl
jp
mov
ds
jecxz
mov
sub
xchg
or
xor
sbb
jle
sbb
cli
inc
sub
push
pop
sbb
adc
leave
mov
lods
js
pop
or
pop
aad
fnstenv
rcr
or
mov
fucomi
cld
lock
cmpsb
js
xchg
mov
jns
jo
out
xor
std
shll
andb
cmpsb
xor
xlat
pop
xchg
test
pusha
mov
mov
push
cmp
dec
int
cmpsl
cmpsl
rolb
fmuls
testl
and
flds
mov
cmp
dec
push
and
enter
push
add
xor
popf
jnp
test
shlb
adc
dec
adc
mov
and
cmpsb
orb
shl
jge
fisttps
jge
push
sahf
xlat
jns
loop
mov
xor
negl
sub
mov
jp
push
popf
or
loop
inc
movsb
cltd
cmp
or
jle
lret
adc
or
inc
xlat
inc
sahf
movsl
cmp
xchg
nop
push
mov
and
jne
out
js
dec
int3
jns
xor
loope
mov
das
or
dec
pop
loope
pop
jg
dec
mov
mov
hlt
out
adc
rolb
sbb
xor
mov
test
push
mov
sub
adc
mov
push
cmp
mov
fwait
les
pop
xor
fcompl
stc
push
mov
cmpsb
xchg
or
mov
ljmp
aad
push
adc
test
fistps
arpl
das
in
fwait
daa
gs
orb
mov
sti
pop
adcl
jmp
jae
push
repnz
or
inc
or
cmp
push
jg
sub
push
je
pop
out
mov
pusha
loop
fsubs
out
out
scas
push
mov
push
add
int3
stos
mov
lahf
out
mov
or
mov
data16
mov
push
mov
ds
add
sar
inc
lods
movsb
mov
out
fisttpl
xor
push
pop
nop
push
fldt
push
adc
lods
clc
cmp
clc
cli
es
push
jp
lods
add
clc
aad
pushf
dec
cmp
out
ja
lret
les
xchg
mov
inc
aam
stos
mov
mov
out
push
jns
enter
mov
lods
push
test
test
rorb
in
inc
cmp
fucom
dec
inc
add
inc
outsb
fwait
icebp
call
xchg
jmp
pop
mov
lahf
pop
mov
jne
das
leave
popf
and
ret
mov
add
xchg
push
pop
dec
xor
inc
dec
imul
popf
inc
adc
ud0
push
pop
xchg
fadds
les
add
rorl
in
lds
adc
adc
jnp
pop
fistps
test
imul
test
js
adc
mov
mov
sub
xlat
cmp
xchg
push
add
les
jge
in
xor
jge
fpatan
imull
and
in
xor
cmp
xchg
fidivrs
mov
lfs
sub
sbb
sahf
mov
addr16
mov
rorl
cmp
xor
lds
xchg
or
loope
inc
test
jb
xchg
adc
fisttpl
push
sub
pushf
cld
inc
stc
test
sub
scas
jl
in
fmuls
sti
cmp
incl
mov
outsl
lcall
cmp
pop
add
loop
nop
jmp
dec
pop
ret
fsubr
sbb
cwtl
add
out
sub
inc
rcll
dec
imul
cmp
xor
mov
jle
jae
popl
jecxz
roll
out
mov
mov
mov
aad
test
iret
sbb
cld
push
pop
cmc
and
adc
xchg
push
cmp
movl
pop
nop
lret
ljmp
jo
aaa
dec
jae
and
jbe
cld
sbb
mov
or
cmc
inc
loop
je
dec
jg
lahf
xchg
test
cmpb
jmp
fsubr
cmpb
mov
jo
mov
fstpt
jb
mov
imul
pop
lea
dec
adc
xor
pop
fdivs
sti
cmp
enter
icebp
ss
mov
stc
sbb
stos
add
in
push
insb
cmp
fmuls
roll
xchg
push
add
fdiv
xchg
jnp
cld
sub
shrl
push
insb
push
and
adc
fcmovnu
dec
imul
loop
add
or
ss
mov
imul
push
xor
xor
lret
mov
dec
mov
loopne
loopne
aas
or
inc
dec
lcall
add
xor
push
nop
sub
mov
xchg
jg
das
sub
dec
adc
cmc
jg
mov
adc
loopne
into
or
mov
jmp
dec
sbbl
pusha
adc
adc
jle
fdivrs
xor
pusha
inc
fcoms
fs
in
pop
and
xor
mov
add
ss
sar
adc
pop
mov
dec
test
mov
lock
mov
cmp
dec
sub
mov
adc
push
outsb
shlb
fidivl
es
mov
mov
mov
out
and
call
pop
lcall
dec
push
lods
shr
mov
orl
lcall
das
movl
sbb
gs
lods
addb
call
es
mov
jecxz
adc
push
ss
xchg
jg
adc
lret
rcrl
mov
fwait
aad
shrb
stc
fisttpl
sub
andl
push
mov
lret
pop
jnp,pt
push
or
dec
jb
xlat
shrl
aad
scas
lcall
inc
scas
dec
sub
mov
xchg
les
cmpsb
dec
ljmp
push
add
repz
movsl
jg
test
insb
push
mov
in
loop
push
cli
lret
mov
std
mov
dec
or
test
insl
add
or
data16
and
rcll
xor
imul
mov
add
scas
mov
sahf
inc
test
pushf
test
mov
jnp
in
rcll
test
xor
shrb
leave
jecxz
out
and
jne
mov
inc
std
bound
aad
aam
inc
iret
mov
mov
sub
adc
mov
xchg
subb
add
addb
stos
repz
imul
pushf
add
lods
xchg
fimull
lahf
jno
shll
lods
aas
outsl
mov
sahf
push
add
cli
movsl
icebp
aad
arpl
jns
repz
mov
push
insb
test
mov
jnp
faddl
jle
mov
data16
imul
loop
cmp
pop
and
adc
jb
std
cmp
sbb
jp
or
mov
sbb
stc
pop
inc
pop
fisttpll
and
push
jle
mov
and
aam
aas
mov
aad
movsl
pop
dec
ja
mov
into
and
test
jb
ret
mov
mov
loope
push
scas
fwait
cmp
addr16
frstor
leave
pusha
repnz
and
rcrl
jle
std
mov
xor
stos
in
push
mov
add
fildl
cld
jmp
rcl
jb
xchg
clc
clc
faddl
mov
inc
lock
gs
imul
aad
rclb
enter
or
cld
xchg
andb
mov
cmp
insb
addl
call
xchg
mov
lods
cmpsl
shrl
jae
mov
mov
add
bound
arpl
outsb
ljmp
and
lds
pushf
rorl
lret
cmp
cmpb
inc
loope
inc
insb
dec
in
xchg
or
in
inc
mov
cmp
arpl
sbb
fs
sbb
and
add
lcall
fwait
and
cmpsb
shrl
movsb
aas
mov
test
inc
fcompl
es
and
les
str
jne
stc
cmp
hlt
test
pushf
fistpll
cmp
in
fidivrs
dec
aas
ret
sub
fstps
testl
movsb
pusha
pop
movsb
aam
cwtl
push
inc
inc
or
sbb
add
xchg
outsb
shlb
push
cmp
mov
lea
xchg
aad
cmc
pop
out
dec
push
and
mov
movsb
push
xchg
xchg
sub
push
mov
inc
add
fsubl
or
mov
outsl
xor
cmpsl
je
dec
int
inc
xchg
dec
mov
xchg
neg
or
andb
xor
shl
jns
stos
insl
dec
fimuls
sub
pop
fcoml
mov
jae
sahf
or
jno
adc
cmpsb
adc
sbb
shlb
xchg
mov
adc
fdivrs
push
es
or
stos
and
xor
negl
jo
mov
es
rcr
lret
icebp
loope
add
enter
pop
rcll
inc
add
rcll
in
and
es
xor
and
ja
mov
movsl
sbb
push
fsubl
subb
subb
mov
lods
scas
fsubs
cli
add
out
js
setp
sbb
addb
pop
xor
cltd
ljmp
pop
mov
and
call
fimull
or
inc
pusha
into
dec
xor
push
or
negb
insl
mov
xchg
outsl
stos
testl
sub
mov
push
or
xchg
stos
add
adc
dec
push
imul
cmp
cmpsl
jmp
or
arpl
jo
iret
mov
mov
das
mov
xchg
sbb
out
ss
xor
ficomps
sub
leave
mov
mov
sub
insl
in
xchg
mov
sbb
stos
pushf
cmp
fstps
mov
mov
popa
test
int3
fldcw
sub
jmp
inc
or
and
xchg
jge
mov
push
les
xchg
mov
aas
adc
mov
loopne
pop
icebp
popf
xchg
mov
adc
sbbb
adc
or
aad
clc
xchg
mov
je
xor
rcl
xor
inc
and
in
mov
andl
dec
or
add
add
push
mov
shr
xlat
mov
add
push
pushf
mov
inc
mov
lcall
or
push
ss
pop
cmp
imul
hlt
fisttpl
shlb
and
aas
jmp
lea
aad
iret
roll
add
or
dec
test
jl
adc
xorb
divb
ja
aad
xor
sbb
jmp
cwtl
fwait
xchg
cmpsb
sub
test
inc
jmp
push
popf
mov
arpl
push
sbb
jne
cltd
scas
sti
mov
call
mov
xchg
icebp
stos
lea
pushf
inc
push
nop
xchg
adc
shll
sbbb
sub
cmp
xor
mov
pusha
pop
outsb
popf
add
jp
pop
mov
push
mov
iret
xor
aas
call
dec
aas
aas
jo
pop
ret
mov
and
mov
sbbl
push
stos
xor
dec
divl
xor
out
mov
add
fmuls
pop
test
ret
push
es
jg
mov
add
ja
shlb
push
loop
and
jle
jle
lock
adc
and
addr16
fbstp
xchg
repnz
dec
jns
pop
push
and
clc
cmp
dec
push
push
repnz
lds
bound
dec
cmp
inc
fldenv
sti
pop
xchg
xchg
imul
push
mov
aas
js
faddl
add
jp
out
das
mov
xor
data16
stos
mov
push
jo
loope
clc
push
fwait
arpl
xchg
das
sub
jb
insb
hlt
pop
popa
xchg
setge
cld
pop
shl
add
cmp
push
pop
call
and
mov
mov
ds
dec
push
adc
bound
call
jae
outsb
jge
xchg
repz
cmpsb
hlt
dec
xchg
adc
and
jp
cmpsl
mov
push
push
mov
or
loope
lahf
jg
push
jae
hlt
ja
or
je
addr16
popf
mov
lock
mov
dec
sub
xchg
cs
add
sbb
and
lds
and
jno
pop
cmp
pop
test
roll
jno
inc
xchg
xchg
mov
and
mov
cmc
xchg
scas
les
jl
sub
mov
xor
fisubrs
adc
fdiv
jge
or
pop
mov
es
pop
fs
sub
mov
sbb
mov
xchg
nop
push
jle
sbb
xchg
in
inc
lods
insb
mov
negb
repz
out
sahf
insl
jbe
jnp
or
paddd
cld
popa
dec
sti
sti
mov
cs
jb
pop
xchg
push
sbb
mov
pop
ljmp
and
inc
or
cli
aaa
dec
mov
cmp
sub
jne
mov
push
sub
arpl
mov
push
out
das
push
mov
mov
dec
jo
sbb
cmp
mov
xchg
push
hlt
jno
adc
push
mov
fisubrl
fucomp
dec
sbbb
inc
movsl
push
dec
or
lds
repnz
push
fwait
stos
nop
inc
pop
repnz
xor
pop
or
jne
push
add
mov
sbb
sub
sub
add
cmp
xor
pop
jae
addr16
and
cmp
repz
into
aam
xor
push
popf
orb
shl
sbb
push
mov
test
popf
cmp
add
pop
xchg
mov
ret
jge
xlat
sub
popf
fnstcw
or
in
ss
mov
lcall
lea
clc
jecxz
inc
cmp
xchg
into
add
cwtl
hlt
push
pop
sti
test
mov
add
dec
roll
or
push
or
and
or
int
aas
fcmove
fstpl
cmc
sub
sarb
xchg
adc
insl
mov
sarl
cltd
sarl
mov
test
sbb
hlt
sbb
mov
add
inc
pop
in
adcb
int
push
ss
mov
into
jmp
lret
sbb
and
outsb
xchg
fwait
sbb
lcall
jle
fbstp
jmp
les
push
in
ret
stos
mov
jecxz
dec
add
in
imul
lock
jmp
push
rolb
fcomip
add
push
lods
add
pop
es
iret
xchg
sbb
push
fmulp
mov
clc
lock
push
jbe
xchg
pop
push
pop
shl
lods
pop
sub
popf
in
push
cmp
pop
cmp
sub
out
inc
in
push
sarl
into
sbb
xchg
push
xor
shll
loop
xchg
ljmp
jp
mov
aam
mov
mov
mov
jae
or
jl
movsl
in
sti
pop
stc
and
sbb
cmc
sti
dec
xchg
mov
push
sub
push
test
pop
jge
das
cmc
ss
xchg
add
push
lods
aad
popa
leave
arpl
int3
stc
and
out
dec
arpl
sbb
std
nop
aaa
fwait
lods
hlt
shll
adc
and
in
rolb
sub
xchg
inc
cmp
mov
loopne
rcrl
je
in
push
out
jae
imul
xchg
pusha
and
jae
lcall
mov
pop
lahf
icebp
push
int
inc
jb
popf
push
push
fcompl
repz
or
test
xchg
ljmp
cmp
adc
outsl
jmp
push
repnz
imul
mov
or
push
xchg
add
aam
mov
stos
sub
push
mov
mov
mov
mov
mov
sbb
loope
aad
stos
add
subl
mov
xor
jmp
push
xorb
xor
mov
fdivrl
out
pop
sbb
or
int3
je
jl
mov
xchg
or
jmp
scas
sub
adc
push
xor
xchg
push
dec
pop
xchg
test
cmp
loope
neg
ror
mov
jae
xchg
loop
push
cmp
lahf
pop
mov
fdivrs
pop
lea
movl
pop
cwtl
in
xchg
mov
repnz
xchg
xchg
loop
xchg
shlb
push
mov
mov
mov
lods
movsl
data16
xchg
cmp
fdivrl
movsb
push
sub
dec
xchg
test
sbb
push
mov
sbb
cs
jmp
sbb
or
pop
mov
mov
repz
jno
dec
sub
pop
dec
outsb
jne
rcrb
and
or
bound
sub
dec
xor
push
push
push
xor
sti
lret
jns
in
rcll
orl
mov
push
int3
scas
into
push
mov
cmpl
sub
xor
pop
inc
es
pop
and
xor
cltd
pop
lcall
mov
sbbl
or
scas
sahf
jb
cmp
aad
ret
cli
push
sti
push
out
cmp
jl
test
sbb
test
cwtl
jno,pt
lods
pop
mov
clc
mov
shrb
mov
jmp
cwtl
dec
mov
xor
decb
bound
mov
sub
and
sub
andl
loopne
pop
xlat
xchg
fs
jnp
sub
push
mov
leave
add
mov
addr16
cwtl
int
popf
lcall
xlat
leave
ss
xor
iret
lcall
test
loop
lret
sbb
insl
adc
or
jo
sbb
arpl
enter
cmc
fldt
push
aaa
ficoml
inc
ss
cmp
xor
add
jbe
add
pop
daa
cmp
out
sbb
repnz
fisubrl
lods
push
jae
cld
fwait
jno
sbb
sbb
and
mov
in
clc
jecxz
mov
repz
nop
sub
data16
add
pop
inc
inc
push
pop
ds
mov
inc
adc
mov
cmp
imul
fwait
repz
and
mov
xor
push
cmp
cmpsl
add
fst
testb
add
push
test
and
insb
mov
test
or
mov
sbb
pop
fmul
cmp
enter
aad
ja
pushf
fdivr
clc
test
cmp
xchg
sti
fisubrs
cmp
clc
and
in
pop
push
lods
fldcw
ffree
inc
mov
mov
dec
cwtl
out
dec
inc
cld
or
test
pop
imul
inc
jae
arpl
ret
push
add
push
push
add
mov
lods
dec
xor
bound
pop
mov
cmpsl
and
adc
lds
mov
jo
adc
stos
ds
mov
and
xor
push
jno
xor
add
pop
inc
xor
sub
inc
dec
sbb
xor
dec
adc
lds
and
ret
test
pop
jge
jns
pop
inc
adc
pop
pop
jns
push
js
int
dec
mov
lods
inc
sti
mov
cmc
jg
mov
leave
iret
testl
add
sti
shl
jle
mov
pushf
xchg
lret
jp
xchg
repnz
scas
mov
jle
nopl
xor
add
sub
inc
mov
mov
xchg
lods
adc
mov
cmpl
pop
mov
push
rcll
orb
pusha
mov
add
jns
mov
xchg
pop
lods
outsb
int3
aam
cmp
lret
sbb
test
aad
or
outsl
cmc
dec
lret
push
dec
dec
les
cmpsl
cltd
sbb
leave
sbbl
pop
push
idivb
es
dec
mov
es
or
out
xor
ficomps
jle
jnp
add
xor
sub
mov
fs
repnz
mov
mov
lea
mov
mov
sub
faddl
sub
insb
sahf
cmp
inc
mov
pop
xchg
push
pop
cs
inc
roll
dec
pushf
xor
shr
movsl
dec
cld
cmp
mov
sbb
loop
clc
dec
or
add
pusha
push
lahf
sub
lahf
mov
sbb
into
sub
in
pop
mov
je
idivl
cli
sub
xor
mov
pop
push
pop
mov
xor
das
xor
movsl
rolb
repz
sti
push
movd
ficomps
adc
mov
cli
pcmpeqb
cmpsb
xlat
mov
sbb
add
addr16
nop
mulps
dec
lret
out
push
orb
lahf
cld
adcl
adcb
movsl
popl
mov
sbb
add
push
xchg
movsl
inc
js
lds
movsl
push
dec
fldenv
inc
cmp
js
xchg
xchg
out
lds
mov
out
jo
sbb
repnz
stc
dec
inc
mov
jmp
cmp
pushf
popa
into
dec
adc
jle
jl
movsb
das
jp
movl
fwait
mov
mov
fsubp
xor
loop
fldt
in
test
pusha
mov
dec
cwtl
mov
aam
jb
stc
imul
cmp
daa
test
pop
sub
adc
clc
sub
pop
pop
adc
mov
push
insb
sti
lea
inc
dec
mov
out
fistl
or
xor
adc
sarb
adc
out
out
xor
xchg
lods
lods
inc
xchg
cli
ret
xchg
xlat
add
mov
add
rol
add
fcoml
push
adc
jecxz
dec
rdtsc
pop
call
cli
xor
inc
movl
fistpll
pusha
push
iret
or
pusha
push
aam
push
cmp
sbb
outsb
mov
dec
jae
push
imul
sbb
pop
push
bound
aaa
je
xchg
int3
mov
pop
xchg
movsb
mov
stc
xchg
les
imul
xor
movsl
int
inc
idiv
dec
adc
shl
ficomps
lock
adc
movsl
movsl
shl
and
test
jae
outsb
dec
out
ficomps
and
js
pop
je
mov
dec
testb
ret
sbb
mov
xor
movsl
xchg
xchg
xor
popf
sub
sbb
lcall
mov
insl
out
lds
roll
into
xor
movsb
rcll
mov
xlat
dec
lock
out
mov
inc
adc
ret
inc
and
addr16
xchg
push
repnz
lods
xor
arpl
fucom
mov
jns
sbb
in
xor
inc
xchg
lods
sarl
mov
jecxz
lods
pop
push
in
adc
mov
sub
jo
jle
pop
mov
aad
sbb
fsubrs
push
cmp
stos
cmpsl
nop
mov
mov
insb
xchg
ja
pop
jne
stos
fwait
in
rcrb
cmp
adcb
or
xor
fstpt
inc
cltd
mov
cld
ljmp
pop
jmp
in
or
not
sub
cmp
sbb
mov
jg
fld
stos
inc
loope
test
mov
js
xlat
int
enter
dec
rclb
add
ret
add
inc
stos
sbb
in
movsl
or
lcall
nop
pop
xor
popa
push
out
push
insl
call
mov
push
cmp
sbb
out
pop
or
mov
mov
mov
test
scas
cmp
push
nop
cld
mov
dec
enter
cmc
in
or
and
or
pop
into
imul
daa
out
shll
mov
loopne
cmp
add
mov
stos
sbb
push
cli
adcb
mov
sub
mov
jecxz
fs
jmp
push
pushf
xchg
ficoms
add
rcrb
and
sbb
stos
movb
int3
inc
pop
repnz
pop
jmp
scas
sbb
psubsw
push
jo
push
sar
push
jle
dec
es
jp
iret
or
mov
jge
push
push
cld
pop
mov
fs
cltd
mov
decl
scas
mov
or
add
xchg
sbb
out
sbbb
mov
mov
loopne
imul
jae
xchg
mov
scas
ja
cmp
or
loop
mov
inc
movswl
hlt
mov
jmp
adc
fcoml
pop
ss
xor
push
pop
fcoml
es
inc
pop
dec
lea
lds
mov
dec
cli
icebp
fucomi
mov
imul
ret
jae
mov
out
xlat
adc
and
aam
stc
jno
lock
fmull
sbb
fsub
xchg
push
add
lock
pop
cwtl
aam
dec
adcb
in
shrl
jno
xor
jns
push
inc
jns
in
xor
jae
adc
aam
in
sub
fwait
cmpsb
out
mov
mov
cs
or
push
jae
test
insb
mov
pop
xlat
dec
xchg
jae
mov
mov
das
xor
cli
roll
cli
xchg
sbb
sbbb
clc
popa
push
imul
inc
sub
andb
jb
dec
adc
xchg
xchg
push
aas
outsb
xor
repz
cwtl
xor
jb
shlb
imul
fucomi
dec
xchg
movsl
inc
addl
pushf
mov
push
mov
movsb
pusha
outsb
mov
jb
xchg
and
stos
pop
cmpsb
testb
cmpl
sti
mov
or
mov
and
in
pop
out
mov
inc
repnz
xor
lods
push
lahf
add
or
decb
push
push
xlat
push
or
jae
test
adc
sarb
dec
out
pop
and
mov
ret
int
adc
rorl
mov
enter
clc
fists
outsb
dec
loop
in
loope
ja
cmp
stos
xor
xchg
jns
cmpsb
dec
add
shl
mov
mov
in
xchg
sarl
pusha
push
test
sahf
jecxz
rcr
nop
lret
pop
outsl
enter
out
js
push
mov
mov
cmp
adc
pushf
push
or
or
cmpsb
sbb
cmp
out
out
dec
pusha
sti
stos
mov
pop
and
pop
adc
ds
shl
sbb
pop
cmp
ja
inc
scas
jmp
xchg
icebp
and
push
stc
int
xchg
in
xchg
cmp
cwtl
mov
jae
mov
jmp
scas
sbb
lea
add
into
daa
jg
mov
call
add
out
jle
adc
scas
in
sti
jno
sub
mov
jns
sbb
mov
js
mov
push
call
icebp
jno
mov
fmull
xchg
enter
sbb
out
mov
pop
negb
cltd
push
lea
cmp
fcmovb
in
xchg
cmp
frndint
call
push
cltd
jecxz
mov
out
lock
insl
ret
add
xchg
cwtl
js
stos
mov
outsl
mov
jmp
xor
outsb
push
stos
int
xchg
jg
jae
jo
xchg
add
aas
lods
inc
lret
cmp
int3
pusha
xor
jb
lahf
xor
push
and
inc
orl
ret
push
lock
ljmp
ds
sub
loop
fdivl
into
repz
mull
jge
daa
cmp
cmp
or
adc
dec
test
adc
or
xor
repnz
or
and
cwtl
xchg
mov
xchg
xchg
mov
xchg
mov
sbb
push
stc
fdivrs
cltd
movl
leave
out
pop
add
inc
shl
ljmp
cmp
fbstp
aam
pop
outsb
push
std
jnp
arpl
mov
into
roll
adc
jmp
cmp
mov
jb
or
fildll
inc
add
dec
out
jne
mov
loope
and
out
cld
clc
jp
je
icebp
shll
mov
test
out
pop
int3
je
xlat
aam
xor
bound
lea
call
scas
jnp
bound
mov
inc
push
jne
repz
mov
stc
lret
je
loopne
inc
loop
jl
dec
inc
add
xchg
cmp
and
insb
int
jmp
lahf
jne
adc
mov
or
push
mov
stos
sbb
adc
mov
lods
ds
lock
jl
mov
add
divl
inc
js
daa
mov
fisttps
sahf
shlb
call
push
push
out
scas
orb
mov
stos
ja
mov
push
mov
into
cmp
mov
sub
int3
fldln2
jp
sub
scas
gs
mov
sbbb
enter
sbb
sbb
outsb
or
or
adc
add
adc
fs
sub
das
popa
data16
adc
mov
cli
lds
test
push
mov
dec
pop
dec
jno
mov
fisubrs
in
pop
xchg
and
sbb
imul
mov
adc
fwait
mov
daa
in
shlb
pushf
xlat
mov
shrl
cmp
das
and
sbb
rolb
inc
test
inc
lahf
idivb
outsl
cli
pop
stos
push
popa
xor
int3
aas
in
pop
std
mov
jmp
add
out
push
add
ds
cmc
adcl
xchg
int
mov
xor
or
aad
xchg
push
mov
push
and
and
mov
adc
jne
jecxz
jl
cmpsb
pop
dec
fnstcw
hlt
aad
mov
std
jo
cmc
jnp
sbb
dec
add
sbb
mov
adc
and
loope
notb
stos
stos
arpl
movsl
push
je
cltd
xor
jmp
shll
xor
mov
or
inc
shll
or
out
lods
mov
lret
scas
andl
int
jl
push
inc
adc
stos
mov
fcomp
jnp
mov
ret
movb
scas
jle
jp
mov
rclb
xchg
cltd
nop
sub
cmp
mov
add
jne
sub
in
lahf
push
ds
sub
xchg
js
ror
xchg
cltd
nop
arpl
mov
iret
and
and
or
ljmp
jns
sbb
das
jns
adc
cltd
or
dec
sub
lds
adc
or
das
lds
mov
cwtl
or
sub
sub
jno
xlat
push
inc
repnz
sub
adc
adc
ljmp
data16
loop
pavgw
pop
pop
cmp
pop
movsl
and
stos
pop
mov
movsb
imul
pop
sub
stos
push
in
xchg
inc
dec
push
sub
stos
in
sbb
jge
xor
cli
jbe
mov
mov
ja
rclb
or
adc
xchg
push
cmpsl
sbb
pusha
ret
mov
lds
sbb
mov
push
pushf
jecxz
adc
lods
jle
jp
fwait
bound
pop
xchg
scas
iret
lods
neg
sbb
xor
pushf
cmpsl
pop
outsb
sbb
clc
sub
xchg
mov
out
repnz
xchg
outsl
ret
sbb
pop
dec
xor
insl
sarl
xor
mov
ds
mov
in
mov
aam
adc
jae
sbb
andl
push
cltd
dec
pushl
push
inc
or
lods
push
push
xchg
outsb
pop
iret
adc
xorb
mov
pushl
jns
add
int3
mov
xchg
jecxz
shrl
inc
daa
ds
subb
xchg
lods
loope
aad
push
push
inc
aam
fistps
sub
cmp
es
xchg
popf
ja
push
jg
ljmp
push
scas
adc
into
clc
sbb
pushl
incl
aad
mov
push
das
ljmp
mov
sub
inc
cmp
aas
mov
stc
insl
mov
les
sub
jbe
push
add
cwtl
xor
or
out
add
dec
arpl
fldl
mov
cmp
lcall
rcrb
pop
pop
push
sub
sub
mov
adc
xchg
sub
mov
das
and
mov
mov
inc
in
and
les
push
ret
push
andl
test
movsb
ds
insl
push
mov
icebp
fnstcw
push
mov
mov
jmp
jl
adc
lret
movsl
pop
test
scas
pop
cli
sub
sbb
cmpl
ret
nop
jae
enter
adc
pop
inc
daa
inc
addr16
mov
add
fdiv
lea
xchg
imul
shll
push
repz
adc
dec
lret
mov
and
insl
fidivs
fmuls
lret
adc
mov
or
add
repz
push
sbb
lea
or
dec
sub
mov
cmp
ficompl
popa
or
push
jb
in
xchg
stos
xor
imul
popf
mov
imul
in
cmc
mov
jb
popa
mov
or
jmp
bound
pop
dec
push
idivl
je
repz
and
out
lock
adc
in
out
push
jne
xchg
dec
xor
jg
arpl
cmp
cltd
mov
es
inc
arpl
cwtl
dec
imull
test
cld
inc
sbb
xchg
adc
clc
mov
movsb
or
imul
or
and
das
outsb
xor
dec
out
movsb
push
add
mov
mull
mov
cmc
push
and
loope
imul
gs
pusha
jb
rcr
mov
push
shrl
inc
call
or
or
fs
dec
cmp
and
iret
fsubrs
and
das
sub
sub
shll
jbe
fmul
call
mov
pop
push
int3
or
and
ljmp
shl
sub
sbb
popa
adc
nop
outsb
lods
cwtl
push
sub
pop
mov
negl
push
inc
push
mov
jecxz
inc
xchg
icebp
sub
ret
jnp
jmp
cltd
ja
rolb
adc
ja
cmpsb
cmp
lahf
imul
in
and
mov
pop
ljmp
sbb
jmp
mov
ja
sub
rorb
mov
repnz
shrb
shrb
pop
ja
mov
and
loope
cld
mov
dec
movsb
mov
insl
xchg
loop
mov
xor
cld
adc
sbb
sti
xchg
test
and
sti
mov
mov
cli
sahf
outsb
negb
ret
js
adc
sbb
push
enter
or
mov
stc
or
inc
xor
xor
pop
mov
inc
pop
int3
popf
ficoml
arpl
xor
ret
movsl
push
mov
mov
push
xor
xchg
ljmp
rcrb
pop
pop
mov
dec
gs
dec
addl
sahf
and
push
lds
je
mov
sub
and
ss
rolb
addr16
xlat
pop
imul
xchg
fists
sar
xchg
cmp
dec
int3
ret
test
aas
xchg
inc
xlat
adc
sbb
mov
xchg
subl
pushl
rcrb
fiadds
arpl
pop
lods
insb
and
cmp
stos
sbb
mov
mov
and
push
dec
inc
sub
mov
adc
xchg
push
dec
ljmp
pushf
ret
ja
call
xor
xor
mov
jl
in
ss
dec
sub
or
xor
into
addr16
pop
int3
jo
mov
inc
lock
sbbl
add
pop
mov
jae
ja
adc
sbb
sbb
sub
lret
fists
push
out
mov
sub
sbb
jbe
pop
imul
xchg
leave
lea
push
jge
pop
enter
cwtl
jo
pop
jle
mov
loop
ret
int
mov
out
lock
fdivrs
push
push
sti
mov
subb
pop
cmp
rcrl
popf
jle
cld
fwait
mov
test
push
pop
dec
imul
pop
mov
aas
jle
gs
jnp
sub
jle
push
jne
and
mov
add
int3
mov
dec
cli
xchg
or
lea
sub
xor
jmp
fnsave
in
adc
mov
jmp
fidivrl
mov
cwtl
pop
aad
push
test
xchg
std
aaa
mov
jge
sub
sub
fcmovne
dec
les
bnd
adc
xor
daa
les
dec
pop
pop
ljmp
out
push
ss
cmp
jmp
dec
adc
imul
adc
cmpsl
jnp
adc
ffree
fldcw
aaa
mov
cmp
les
outsl
jno
aad
cmp
adc
ss
iret
ficoms
add
jecxz
fstpl
mov
xchg
das
fs
jecxz
ds
int3
jge
add
lea
push
bnd
push
jmp
arpl
sub
inc
sahf
xor
xlat
mov
push
jle
sub
mov
inc
xchg
pushf
sub
sub
sub
or
mov
sar
add
in
lahf
xor
outsl
idivl
mov
cmp
jg
push
pop
pop
addb
inc
xchg
fs
lock
mov
in
pop
ja
lcall
leave
mov
cmp
test
shll
mul
arpl
js
sbb
call
lea
aaa
and
popa
int3
in
addr16
ret
and
mov
addr16
sbb
shrl
or
cld
fimuls
sub
pop
orb
sub
pushf
add
les
sub
repnz
scas
pop
fcoml
xchg
int
ljmp
pop
mov
pop
clc
cmpsb
adc
ljmp
pusha
les
xor
jae
cltd
aas
cwtl
loope
mov
xor
sbb
xchg
push
ljmp
xchg
arpl
testb
popf
or
frstor
es
pushf
xor
or
xchg
ja
test
stc
xchg
sub
pushf
into
ljmp
push
in
add
fadd
and
repnz
bound
mov
xchg
pop
mov
aad
test
xor
fptan
in
std
push
les
xchg
cld
in
xchg
xchg
test
or
push
adc
mov
enter
sbb
xadd
mov
xchg
enter
out
or
adc
push
int
call
push
and
sub
orl
or
adc
fs
add
or
pop
pop
or
sub
test
lods
pop
cld
sub
push
inc
loope
pop
or
pop
pop
add
gs
aad
fcompl
mov
mov
loopne
mov
cld
mov
mov
jne
lahf
and
ja
stos
movsb
cmp
pop
adc
mov
test
and
push
adc
clc
mov
sub
adc
push
fnstcw
push
mov
nop
test
add
mov
imul
cmp
adc
test
push
imul
xchg
cld
sub
sarb
pop
lahf
aas
mov
inc
pushf
jns
jae
call
adc
mov
lret
mov
in
fs
scas
push
jl
adc
fcmovb
ret
mov
push
dec
sub
adc
mulb
bound
loop
mov
aam
int
adc
pop
out
mov
scas
pop
sub
mov
jge
jno
jle
imul
mov
inc
enter
adc
test
mov
or
in
arpl
jns
stc
push
loope
mov
cmp
outsb
xor
aas
cmp
mov
cmp
and
es
fidivrs
xchg
jae
hlt
repz
sbb
out
lea
inc
nop
add
rorb
out
outsb
mov
and
jl
pop
jmp
call
add
mov
push
pop
ja
subb
mov
sbb
mov
pop
jae
mov
mov
push
test
test
adc
sbb
xor
je
cmpsl
in
inc
push
fnstcw
rcrl
into
push
fdivs
pop
shr
xor
inc
rcll
mov
xchg
loope
adc
pop
cmp
adc
jl
jg
push
jg
cli
clc
sbb
stos
lret
adc
dec
push
or
jnp
push
jb
call
mov
xchg
scas
icebp
arpl
outsl
stos
push
ljmp
ljmp
xor
nop
mov
pop
int3
sbb
sbb
dec
mov
add
inc
lahf
mov
push
rcrb
sub
pop
mov
or
subl
loop
cmp
jmp
mov
push
pop
data16
and
bound
xor
fs
loopne
sub
lahf
or
les
or
shl
xor
fbld
stos
sbb
mov
frstor
loop
pop
test
push
inc
xlat
clc
mov
push
mov
and
pushf
cmpb
pop
adc
lods
out
adc
roll
andb
jmp
pop
add
xor
push
cmp
repz
cltd
mov
jmp
cli
jecxz
cmp
cmp
xor
mov
or
adc
xchg
mov
adc
insb
gs
rcll
pop
jae
adc
stos
dec
mov
inc
sbb
insl
dec
fs
xchg
data16
fdivrl
and
push
test
cmp
outsl
cmp
mov
cltd
lock
mov
ret
inc
push
mov
hlt
lods
in
std
push
xlat
add
cs
mov
cmp
and
push
cs
or
mov
dec
fcmove
shrb
push
aam
or
gs
or
jle
sbb
push
add
lods
fsubs
call
test
out
imul
xchg
ljmp
adc
mov
or
push
mov
push
cmp
jno
repz
iret
gs
cmp
out
andl
mov
xor
dec
fcmovb
and
push
xchg
arpl
dec
pusha
repnz
outsb
sub
loopne
es
fcmovne
dec
in
pop
decl
xchg
cmp
mov
push
in
aad
adc
inc
lea
sbb
jns
adc
sub
xor
lods
out
cli
cmp
mov
ret
int
xor
dec
mov
and
sbb
mov
adc
je
xor
jl
dec
inc
lahf
and
jle
cmpsl
mov
jge
fcoml
jo
pcmpeqb
int
je
xchg
jns
pop
outsb
xor
xor
sahf
dec
in
jbe
jp
pop
jns
pop
sbb
leave
sbbb
adc
push
clc
cli
mov
push
cmpsl
addr16
xchg
xor
popf
xchg
add
dec
xchg
jecxz
mov
nopl
pop
pop
jbe
leave
into
sbb
imul
cmpsl
jmp
jmp
mov
mov
mov
outsl
leave
sub
jae
cli
cmp
fwait
sub
mov
adc
mov
push
shlb
push
sub
jae
inc
lea
leave
and
xlat
movsl
sbb
nop
ss
mov
pop
clc
addr16
int
bound
add
mov
adc
mov
dec
jl
lret
pop
or
pop
clc
pop
and
xchg
inc
psllw
pop
lock
pop
and
shrl
mov
jb
mov
cmp
push
dec
stos
adc
sti
testl
inc
outsb
adc
iret
ret
inc
or
mov
and
outsl
in
xor
cmpl
sub
push
or
mov
aas
aad
fcomps
xor
mov
or
es
sub
ss
cld
sub
jge
testb
sub
out
js
fsts
push
pop
mov
aad
jmp
out
in
or
fistl
es
or
push
fisttpl
jge
aad
fnstcw
mov
cmp
push
push
leave
scas
mov
jecxz
xor
ss
inc
xor
jne
addr16
mov
fisubrs
push
js
rclb
dec
sub
mov
test
mov
push
push
xor
mov
movsl
dec
jp
loope
mov
ja,pt
inc
mov
shrd
repnz
leave
xchg
jae
iret
fs
shrl
adc
das
pushl
popl
stos
negl
loope
aaa
push
push
das
out
aad
fisttpll
mov
mov
jmp
adc
xchg
cli
movaps
mov
pop
je
cwtl
loop
fsts
rolb
push
dec
imul
lods
cmp
push
ret
cmp
fstl
stos
gs
lret
mov
push
movsl
xchg
mov
xchg
xor
out
scas
das
fcmovb
and
mov
mov
mov
ljmp
popf
or
push
jecxz
xchg
insb
mov
and
mov
incl
in
ljmp
pop
mov
jp
xlat
jmp
ds
hlt
lds
mov
ljmp
popf
fmuls
mov
dec
test
xchg
and
call
mov
jmp
mov
mov
push
shrl
in
out
pushf
sbb
or
and
loop
movsl
inc
popa
shlb
xor
sbb
out
enter
xchg
mov
and
pop
into
mov
mov
lahf
lcall
fdiv
jne
outsb
add
popa
cmp
lock
jl
add
loop
and
fwait
scas
mov
jmp
mov
ds
jbe
or
in
push
lock
fdiv
int
les
sbb
pop
out
push
or
or
in
push
mov
pop
gs
xor
divb
jp
leave
in
jno
dec
cmc
cli
mov
outsl
lcall
stos
shlb
pop
cld
loopne
dec
dec
pop
movups
jns
mov
or
rolb
cmpsl
insl
sti
xor
dec
add
add
inc
rorl
dec
pop
cmp
pushf
cmp
mov
sbbb
xchg
add
push
lods
and
jecxz
inc
pop
sub
inc
movsb
mov
lcall
and
mov
sbb
sbb
rolb
and
scas
xchg
sub
or
lret
adc
pop
lods
adc
js
mov
xorb
sahf
xor
out
dec
sahf
arpl
sbb
xchg
mov
sub
dec
xchg
test
jg
sub
inc
mov
mov
iret
popl
and
xor
and
movsl
pushf
fcoml
push
sti
push
filds
lods
call
aas
cmc
xchg
push
and
shrl
xchg
mov
cwtl
adc
push
xchg
cmp
movsl
stc
cwtl
test
pop
sahf
loopne
stos
daa
pop
sahf
in
mov
pop
push
icebp
jno
aas
ss
jbe
das
sbb
lds
mov
sub
dec
not
outsb
sbbl
xchg
pop
movsb
mov
fcoml
sbb
fiaddl
or
out
popa
inc
xchg
lock
lods
scas
pushl
incb
mov
imul
in
idiv
dec
cmp
lds
call
test
hlt
xor
mov
inc
jl
add
in
fimull
sub
loop
scas
sbb
leave
int3
aaa
leave
scas
push
jo
lods
mov
nop
pop
lret
js
sahf
sbbb
leave
jp
xchg
adc
inc
jp
loop
js
popa
int3
fs
mov
ljmp
shl
xchg
lods
jno
out
int3
rcll
int
scas
dec
jecxz
dec
xchg
sub
stos
mov
ljmp
psubsw
repz
cmp
xchg
xor
call
fisubrl
push
loop
xor
stos
push
mov
rorb
lea
xchg
lea
mov
lods
movsb
stos
dec
daa
xchg
push
clc
push
call
in
pop
lret
scas
mov
xor
in
sbb
mov
out
xchg
push
add
xchg
andl
into
push
imul
imul
add
xor
cmp
mov
ljmp
adc
nop
dec
jp
mov
mov
and
call
jl
dec
xchg
and
mov
es
arpl
xchg
adc
in
mov
mov
decb
cmc
pop
inc
adc
pop
and
cmp
dec
fwait
mov
and
inc
out
jmp
std
lahf
xchg
sbb
loop
xor
fists
push
addr16
add
push
inc
xlat
xchg
sub
repz
xor
mov
cld
mov
push
test
xorl
je
fisttps
aas
repnz
stos
loopne
popf
sub
mov
ds
pop
in
xlat
sbb
and
push
pop
jnp
mov
add
fmull
inc
mov
nop
mov
or
mov
les
add
mov
xlat
jo
adc
sub
xchg
mov
js
ret
jle
ljmp
popf
bound
shlb
out
push
test
xchg
test
mov
sub
stc
adc
xchg
aam
jb
dec
loopne
adc
test
cmp
sub
and
addl
dec
sbbb
and
dec
aam
punpckldq
cwtl
adc
cmp
push
pop
mov
sbb
scas
insb
mov
mov
inc
and
sub
mov
inc
leave
das
jb
addr16
inc
mov
jg
inc
stos
aaa
repnz
add
sbb
mov
cs
mov
outsl
je
mov
arpl
xor
stc
in
in
pop
sbb
nop
push
jne
hlt
andl
cmc
loope
cwtl
sti
xlat
xchg
jbe
movsb
push
out
push
andl
aaa
adc
movsl
iret
xchg
xor
pop
fldl
not
jmp
xor
xor
mov
pop
hlt
out
pop
push
and
cmp
dec
je
cmp
sub
aam
push
and
lret
fs
in
cmp
dec
sbb
cmp
int
or
mov
sti
xlat
adc
cmpsl
cli
and
mov
pop
adc
adc
out
pop
frstor
ret
push
hlt
outsb
mov
outsl
adc
bnd
xchg
pop
enter
subb
push
sbb
out
pop
mov
or
ds
out
mov
test
push
add
add
cmp
pop
jne
cmpsb
xchg
arpl
add
dec
mov
sbb
push
sbbb
or
xchg
jns
gs
xchg
xlat
xor
sub
mov
lcall
insb
stos
sti
jp
ret
push
push
aad
mov
pop
cmp
bound
inc
jecxz
shrl
xor
call
jle
adc
dec
fsubl
adc
mov
or
or
cli
out
mov
aad
xchg
mov
inc
dec
test
or
jb
xchg
dec
sbb
xchg
mov
push
mov
lcall
push
fnsave
iret
adc
sub
and
ret
iret
not
je
cmp
mov
or
jl
ret
fwait
ljmp
inc
xchg
nop
pushf
xchg
mov
and
lock
add
sbb
xchg
pop
daa
ret
in
ret
lret
das
popf
sub
cmp
jmp
dec
jne
push
scas
inc
adcb
or
cmp
mov
jp
insl
jno
scas
in
or
sbb
sub
push
lahf
nop
pop
add
cli
and
int
jmp
adc
sbb
loop
into
fwait
cli
inc
fimuls
add
out
daa
pop
mov
cmp
add
mov
out
fistps
and
jl
std
fiadds
sti
ds
in
out
mov
xor
pop
push
loop
push
addr16
xchg
mov
xor
and
lds
es
lods
lahf
dec
scas
push
mov
bound
xchg
cmpsb
imull
jp
fisubrs
inc
fxch
push
mov
inc
fs
mov
jae
shlb
lret
lcall
fldt
xchg
icebp
fdivl
lret
pop
rclb
insb
jae
xor
adc
xchg
fucomp
bound
push
cltd
or
shr
lods
decb
add
pop
popa
mov
andb
out
push
and
mov
out
fildl
mov
icebp
jnp
fwait
push
sub
nop
cmc
icebp
jo
orb
mov
jl
sbb
push
adc
pop
inc
mov
xchg
or
rclb
pop
fwait
mov
lods
out
pop
sbb
jae
sbb
mov
and
mov
jae
xchg
push
sbb
lods
dec
or
jb
pop
and
mov
inc
repz
data16
insl
test
aaa
ret
add
push
cmp
jnp
cwtl
mov
in
ljmpw
adc
fcmovnbe
push
or
pop
push
dec
cmpsb
addr16
nop
int3
test
nop
push
rcll
stc
adc
cmc
mov
clc
fsubrl
es
or
ret
test
jmp
ret
xor
arpl
or
int3
push
push
cltd
scas
repnz
mov
jbe
ja
out
rol
repnz
sub
add
rorb
ret
aad
inc
je
inc
xchg
sbb
jmp
adc
add
lods
or
aas
push
test
push
nop
pusha
mov
push
les
popa
adc
int3
ret
loop
add
jo
fsubp
out
nop
mov
pop
popf
push
into
ficomps
fidivrl
dec
xchg
cmp
in
push
addr16
jb
push
xlat
push
cmp
push
movsb
movsb
insl
mov
outsb
cmp
sub
inc
out
add
pop
je
test
inc
inc
repz
fs
gs
lods
push
pushf
mov
in
mov
pop
jecxz
testb
xchg
cwtl
ss
add
cld
cli
leave
negl
or
xchg
sti
pop
repz
cmp
lock
andl
imul
or
sti
sahf
ret
out
hlt
fdivr
pop
sbb
dec
mov
divl
or
jl
add
xchg
xchg
clc
xchg
mov
shrl
aas
and
add
xor
xchg
lret
ja
pop
scas
sub
mov
or
adc
pop
mov
rorl
cld
fwait
outsl
or
xor
loopne
mov
dec
repnz
js
cld
stos
xchg
in
rclb
ret
add
outsl
outsl
adc
cmpsb
rclb
cmp
fwait
jbe
lret
sbb
jne
scas
push
out
mov
sub
xchg
adc
xchg
jmp
push
push
scas
rorb
in
lahf
lcall
cmp
mov
arpl
push
add
lahf
jns,pn
mov
sub
int3
xor
fnstenv
lret
fadds
mov
shlb
xor
or
xor
js
lret
fcoms
add
dec
add
mov
xchg
jg
scas
push
cmc
push
sub
xchg
push
sbb
xor
bound
inc
xchg
push
xchg
sbb
push
stos
leave
rcll
or
and
mov
and
adc
int3
push
adc
xor
daa
lret
mov
sbb
jne
incl
cli
nop
cld
adc
ret
sar
mov
cmp
inc
dec
add
mul
mov
add
sub
cmpb
inc
int3
aad
lret
insl
mov
add
test
fadd
out
ret
push
inc
pop
addb
and
lahf
xchg
scas
test
xchg
and
mov
dec
jne
push
sti
mov
icebp
dec
sub
and
mov
aad
xor
mov
std
inc
lret
fdivrs
shlb
inc
or
pop
cmpsb
jb
dec
and
fwait
inc
jbe
aam
aad
je
lahf
adc
negb
fcomps
mulps
mov
add
outsb
daa
sbb
rcl
push
jne
pop
cltd
mov
and
mov
mov
cmp
ret
pop
in
inc
sbb
dec
mov
call
mov
jo
mov
pop
mov
jp
icebp
roll
fadd
rcrl
insb
push
and
adc
repz
leave
insl
pushf
pop
hlt
les
push
jp
rclb
popa
jle
ficomps
sub
insl
dec
movl
bound
fists
jecxz
bound
stc
rol
xchg
adc
adc
xchg
iret
test
jbe
fimull
cld
add
add
jbe
outsb
testb
sub
add
out
xor
inc
fsubr
es
dec
inc
lods
xor
push
sub
dec
add
push
dec
fcoml
cmp
xchg
cmc
gs
jbe
andb
and
dec
xor
jae
xor
ret
aam
mov
or
scas
mov
dec
push
jb
bound
into
stc
adc
xor
jnp
out
sbb
outsb
sub
sahf
push
lcall
out
aas
mov
pop
test
outsl
mov
shrl
loop
mov
inc
sbb
in
mov
inc
xchg
or
pushf
sub
iret
mov
stc
jp
lea
jge
data16
popf
js
std
and
dec
jl
fistpl
lret
aam
xchg
jnp
and
mov
dec
test
dec
add
mov
cmp
and
and
ret
pop
adc
call
pop
lods
jecxz
out
add
dec
jae
mov
cmp
add
mov
and
outsb
call
lds
fdivr
sbb
mov
xor
and
sub
std
movsb
or
enter
lods
mov
mov
add
dec
jne
jmp
jl
push
call
insl
call
xchg
jmp
dec
pop
xchg
mov
sub
add
and
movsb
loopne
mov
xor
lret
inc
and
cmp
push
mov
arpl
cmpsl
ds
and
popa
xlat
mov
add
and
add
les
gs
loop
jns
pop
repnz
arpl
das
aaa
je
in
mov
push
inc
xchg
rorb
cmp
pushf
xchg
in
sub
inc
stos
jns
out
clc
jp
cli
insb
lcall
xor
mov
stos
out
fistpl
xchg
inc
dec
fdivrs
sbb
movsb
pusha
ja
rcrl
inc
je
pop
pop
sub
jle
mov
sub
xchg
adc
pop
inc
lea
popf
sbb
sbb
icebp
jge
popf
scas
iret
decl
popa
cmp
xchg
sbb
fidivrl
call
out
aad
loope
ret
popf
lods
mov
daa
mov
mov
xor
add
mov
lods
jae
data16
sbb
mov
pop
mov
ja
or
int3
xchg
jp
xlat
adcl
daa
mov
xor
daa
sbb
jne
or
ss
subl
push
jno
mov
icebp
in
dec
mov
out
or
out
pop
adc
push
jbe
jne
fiaddl
jge
xchg
ss
lcall
push
shll
push
dec
and
xchg
add
sub
pop
xchg
mov
orb
adc
aam
mov
andb
push
mov
insl
dec
xor
cmp
mov
pop
mov
or
jmp
mov
nop
enter
mov
xchg
loope
push
add
sbbl
xor
dec
dec
add
repnz
aad
ret
imul
jne,pn
in
add
ljmp
inc
aaa
jecxz
add
fldlg2
out
mov
mov
lahf
ret
popl
pop
inc
xchg
dec
sub
sbb
into
int3
fwait
inc
push
sub
cmpsl
jl
xor
add
cmp
mov
adc
fs
pop
cs
fistpl
fdivrp
in
xchg
cwtl
or
lret
sub
scas
mov
cld
pop
mov
popa
test
xchg
mov
std
std
adc
test
and
jbe
and
xor
jle
pop
ss
push
push
or
mov
lea
sbb
jno
aad
ss
add
incb
jb
enter
mov
movsb
pop
push
shlb
movsl
incl
in
sbb
shrb
adc
enter
cmc
out
daa
lods
sbb
int3
insl
and
rorl
lods
sub
stos
jecxz
cwtl
cmp
sub
pop
movsl
int
outsb
xlat
sub
cmpsb
jne
gs
stc
icebp
cmpsl
nop
push
adc
mov
cmp
rcll
les
int3
mov
clc
adc
gs
dec
jbe
mov
jne
fisubrs
jb
ret
in
dec
add
pop
pop
add
mov
pop
aas
mov
call
ss
repz
gs
pop
mov
and
insb
jb
jnp
mov
and
cmp
loop
test
data16
mov
gs
mov
add
jle
icebp
sbb
hlt
ds
or
pop
rcrl
daa
dec
jle
addr16
lret
adc
pop
in
imul
jecxz
jnp
pop
test
mov
out
cmp
out
dec
sbb
in
mov
jno
pushf
mov
orb
or
sahf
arpl
xlat
mov
push
add
or
ljmp
adc
and
mov
add
nop
jnp
bound
pushf
stc
js
jp
das
jp
aaa
int3
mov
movswl
inc
pop
loop
dec
mov
mov
jge
jne
scas
iret
sar
xor
fimull
push
movsb
ss
dec
inc
mov
jb
scas
or
mov
and
imul
adc
jnp
pop
je
jne
stc
scas
stc
cmp
addr16
mov
das
enter
data16
push
test
lahf
in
frstor
push
sti
flds
stos
xor
mov
aas
add
lret
cmp
mov
cmp
fisubrs
dec
cmp
or
out
push
ja
out
or
in
lahf
lret
loopne
jb
push
fs
mov
sbb
inc
cmp
pop
mov
xchg
sub
aam
push
popa
je
xchg
jb
aas
push
aad
ret
dec
dec
mov
jb
dec
pop
xor
nop
mov
xor
fldenv
stos
cltd
ficomps
in
in
push
and
mov
mov
bound
and
cmpsb
insb
cmp
mov
add
dec
iret
or
cmc
movsb
jae
mov
lret
jp
inc
cmp
and
and
inc
js
dec
pop
inc
mov
in
xor
jno
sbb
pop
mov
xor
imul
cmp
xlat
adc
push
mov
aaa
aad
lods
std
addr16
adc
jp
and
aam
aas
xchg
test
jmp
push
mov
jbe
int
xchg
cmpsb
iret
xchg
mov
push
mov
ret
jbe
dec
add
jae
jge
xor
popf
out
inc
ds
fldt
push
sbb
pop
fs
pop
dec
in
dec
outsb
xchg
pop
lds
orl
leave
sbb
cli
xor
sbb
inc
push
push
testl
int
movsb
popa
inc
adc
mov
call
adc
cmp
dec
int
test
lret
scas
out
imul
sahf
inc
data16
lods
mov
sbb
insl
test
test
repz
push
xor
or
fdivrl
xlat
dec
inc
call
cld
into
fistl
jle
dec
push
adc
push
ror
or
push
lahf
faddl
pop
mov
shlb
nop
test
rol
lcall
aas
int
push
xchg
cmp
pop
fsubrl
push
mov
pop
and
and
pop
popa
loope
aas
lret
in
stc
stos
add
cmp
jmp
inc
fidivrs
scas
orb
fs
repnz
in
pop
jno
sub
out
test
xchg
mov
jbe
push
add
push
popa
aas
ret
les
jg
inc
add
daa
int
icebp
out
jne
cmpsl
stos
lahf
das
jecxz
insb
xlat
mov
outsl
out
lcall
sahf
cwtl
test
mov
jmp
lods
adc
loope
push
mov
fstpl
sub
pop
pop
xchg
cmc
imul
inc
nop
ss
mov
add
jae
xchg
and
nop
psubsb
mov
push
cmp
dec
adc
cs
jp
sbbl
je
js
mov
jecxz
adc
in
inc
scas
mov
sbb
sub
mov
inc
ljmp
das
inc
xchg
test
addr16
jb
inc
xchg
insl
add
mov
imul
out
loopne
shl
mov
je
push
das
cmc
lret
scas
popl
push
pop
dec
sub
mov
movsl
mov
add
rclb
xor
in
fsub
ret
and
inc
and
mov
orb
mov
adc
icebp
add
jne
cmpsl
push
cwtl
adcl
lcall
pop
push
sub
das
xchg
mov
pop
sbb
jae
dec
push
or
addr16
mov
sub
ja
lahf
jle
int
pop
data16
scas
jmp
es
push
inc
sub
addb
notb
jecxz
popa
dec
test
xor
fisubs
mov
and
lea
adc
mov
push
dec
sub
jge
xchg
repz
jb
je
rolb
mov
dec
mov
lret
lea
xor
into
divl
xchg
inc
jo
bound
mov
shrl
dec
mov
add
orb
add
insb
loope
sahf
add
sti
xchg
sbbl
inc
ja
movsb
in
out
icebp
jg
dec
shrb
push
xchg
aaa
lock
jbe
inc
imul
test
jl
mov
fadds
mov
fs
nop
test
popf
lods
sub
xchg
sbb
inc
jae
and
and
inc
hlt
ljmp
les
jns
dec
inc
sbb
clc
js
pop
clc
sbb
xor
test
pop
enter
mov
imul
hlt
push
aam
jmp
jae
mov
mov
adc
idivl
push
fdivl
rcrl
push
sahf
rcrl
mov
adc
addr16
cmc
xor
cmp
fdivl
push
xor
jo
ds
adc
add
push
ljmp
cli
shll
push
dec
sbb
pop
or
add
pop
dec
into
inc
addr16
or
fldenv
mov
or
scas
cmp
push
jne
push
cmp
pop
inc
sub
mov
lods
mov
lds
mov
xor
loope
shlb
aam
cli
lea
outsb
popf
jmp
in
testl
in
test
loop
adc
push
or
ret
mov
push
dec
push
mov
mov
popa
call
movsb
test
fcmovnu
aaa
ror
lret
mov
dec
mov
pop
js
adc
mov
repz
fnstsw
in
xor
adc
mov
repnz
lock
sahf
repnz
inc
mov
ficompl
sbbl
xchg
stos
add
inc
add
popf
and
mov
mov
and
stos
cld
test
push
mov
pop
cmp
add
clc
or
and
add
mov
ss
ss
imul
cmpsl
jle
inc
in
imul
popf
inc
ja
mov
les
dec
les
xlat
scas
stos
sub
xchg
mov
add
add
dec
inc
into
out
or
xchg
adc
call
call
mov
sbb
sbb
mov
aad
mov
jge
cmp
ss
mov
aaa
lret
xor
ljmp
cltd
mov
movsl
lret
daa
xchg
loop
lea
pushf
xchg
shl
push
gs
pop
clc
jge
std
mov
gs
inc
dec
stos
les
sub
xchg
cwtl
call
insl
xchg
ljmp
pop
in
std
push
or
pop
adc
je
cwtl
mov
push
jl
xor
mov
sbb
test
scas
sbb
mov
inc
mov
xchg
mov
lock
mov
sub
mov
xchg
push
mov
and
in
cs
mov
aaa
pushf
ret
pushf
das
fwait
test
outsl
mov
push
scas
rol
test
jmp
jo
sbb
or
add
ss
xor
mov
jmp
mov
scas
or
or
push
in
or
fsts
jecxz
mov
cld
add
mov
mov
and
mov
into
sub
push
add
ret
push
adc
inc
cmp
or
cmc
and
in
loopne
inc
out
pushf
xchg
sbb
shll
jmp
xchg
pop
mov
jae
cmp
cmpsl
mov
enter
sub
push
jb
jl
lcall
cmc
xor
sbb
sbb
pop
rcrl
jae
nop
or
and
loopne
pop
sub
fidivl
arpl
mov
gs
lods
push
jbe
mov
xchg
xlat
dec
or
rolb
aas
pop
sbb
inc
ss
das
mov
je
sub
pusha
dec
movsb
dec
inc
enter
push
xor
fxch
sbb
jecxz
inc
repnz
mov
stc
rep
insb
fadd
repnz
pop
pop
test
cmpsl
aaa
bound
scas
mov
jbe
das
pop
jbe
pushf
int
jbe
aam
pop
mov
fmull
arpl
insl
in
pop
es
or
cs
mov
data16
je
inc
jbe
int3
lea
fsubrs
adc
xorb
stos
iret
mov
sbb
xchg
lahf
pop
rcll
nop
inc
ret
fstpt
add
loopne
or
mov
imull
faddp
sub
movsl
loop
pushf
pop
out
mov
dec
sarl
jmp
dec
lock
push
sub
out
rcr
stc
adc
out
loopne
and
sub
mov
adc
xchg
cs
lret
insl
jg
stos
inc
out
xchg
jne
mov
out
shrb
and
mov
xchg
sub
je
int
andl
jmp
sbb
mov
dec
xchg
push
ljmp
scas
rclb
je
fucomi
adc
pop
dec
and
add
rcrl
cli
fldcw
pop
cmp
bound
inc
loop
call
push
int3
cld
or
jmp
leave
add
adc
repz
popa
aam
js
lods
jg
imul
rcrb
bound
lcall
adc
loope,pt
push
ljmp
lods
push
jle
das
jg
mov
push
push
icebp
fildl
lods
xor
aas
repz
pop
pop
pop
sub
das
adc
fdiv
jp
lock
sub
pop
aam
loop
test
out
mov
fldcw
sbb
mov
fwait
dec
inc
pop
jno
add
and
dec
mov
add
sub
xchg
stc
push
add
push
inc
mov
cwtl
mov
fisubrs
test
ja
xor
jecxz
popa
cmpsl
or
and
enter
adc
dec
sbb
lea
jmp
jmp
push
xchg
jmp
jmp
aad
mov
je
mov
push
cmovns
bnd
and
add
mov
test
call
cmpsb
imul
jne
lret
cmp
cmp
call
xchg
repz
sub
mov
xchg
iret
loop
pop
pusha
call
enter
sti
mov
out
mov
mov
out
mov
pushf
in
jno
pop
sub
rclb
insb
dec
jnp
mov
scas
mov
xchg
pop
sub
sbb
and
repz
jl
xchg
jbe
mov
jne
xlat
dec
xor
adc
bt
out
mov
mov
add
and
fnop
daa
out
or
mov
pop
or
jae
fs
lcall
cmp
lcall
ss
lock
das
outsb
inc
push
ficompl
mov
sbb
mov
or
xchg
jae
insb
cmp
lret
repz
xchg
in
popf
rol
mov
mov
adc
pop
dec
jmp
mov
mov
repnz
sub
fwait
icebp
es
sti
xchg
cmp
faddl
imul
rclb
inc
mov
push
outsl
movsl
push
andl
nop
ret
mov
es
dec
ja
js
or
mov
and
scas
jns
rcll
fnclex
fildll
sbb
jmp
inc
test
outsb
fstl
lahf
sbb
sub
js
cmp
or
insb
addr16
cld
rol
xchg
xor
out
mov
popf
xchg
and
fs
arpl
xor
fsubrs
outsl
imul
je
js
clc
jb
sti
mov
jo
and
ret
xlat
adc
je
jns
adc
jb
test
cmp
add
out
push
rcrb
inc
stos
dec
and
shrb
idivb
cmp
jg
xchg
xchg
mov
sbb
stc
and
leave
daa
and
lods
test
sbb
jl
mov
movsb
or
sub
or
push
and
cmp
xchg
dec
hlt
mov
scas
sbb
jle
fldl
adc
mov
adc
adc
xchg
dec
adcl
mov
inc
cmp
sbb
or
dec
inc
sti
fcomps
inc
loop
add
pusha
and
or
xchg
fs
inc
sbb
insb
pushf
in
mov
test
push
dec
psraw
push
mov
xchg
bound
inc
and
test
data16
shrl
sti
xor
mov
push
mov
mov
scas
lods
add
sub
adc
push
mov
mov
adc
aam
pop
cmc
je
inc
sahf
pop
sub
mov
sub
xor
cmp
pop
icebp
icebp
negb
add
dec
mov
fisubrl
gs
dec
push
or
fsubs
or
cmp
inc
scas
ret
mov
push
jp
icebp
ficoml
mov
rcrl
pop
jge
imul
aad
jle
xchg
push
xlat
jae
test
sar
sub
mov
or
mov
jmp
or
lds
popf
test
imul
dec
xor
in
std
jge
sbb
mov
push
jecxz
pop
inc
dec
sahf
sub
ret
push
xchg
dec
pop
xor
xor
mov
inc
mov
shl
push
add
inc
and
dec
xchg
out
cmp
adc
test
js
lock
lcall
lret
fisubl
mov
rorb
into
sbb
stos
fbld
add
test
dec
pushf
jg
xchg
lods
popa
pop
adc
loop
leave
cmp
lea
test
inc
dec
add
dec
inc
mov
cmp
cmpsl
ret
bound
jl
mov
xchg
cmp
sbb
mov
mov
inc
jb
dec
sbbb
ds
jle
dec
rclb
xchg
add
orb
xchg
insb
inc
ret
or
incl
pop
push
jns
call
inc
ret
pop
lea
cwtl
adc
pusha
loopne
push
adc
sub
jns
jecxz
mov
sti
push
add
pop
pop
sbb
or
dec
gs
mov
out
add
or
push
iret
push
pop
inc
imul
int3
add
in
in
sahf
pop
stos
lea
mov
or
les
mov
mov
inc
imull
xchg
cmp
iret
gs
fucomi
shl
test
xchg
jns
rolb
cmp
imul
int3
dec
or
mov
mov
ret
or
mulb
out
jnp
fsubrp
mov
ds
mov
aad
pop
leave
pop
jmp
cmp
xor
sub
jecxz
xchg
arpl
in
clc
mov
enter
fs
imul
jle
jb
push
jns
xor
mov
xchg
lock
mov
cmpsl
sbb
cmpsl
xchg
rolb
and
int
ss
enter
mov
sbb
sub
sub
fdiv
mov
inc
pop
cmc
lret
push
test
ss
sub
push
test
cmp
fisubl
jae
int3
daa
xchg
scas
leave
std
pop
inc
shlb
lock
dec
add
divb
mov
sbb
push
rcrl
jecxz
cmp
movsb
loope
mov
cltd
xchg
lahf
leave
mov
cmpsb
lret
nop
and
pop
dec
or
add
outsb
sub
std
add
mov
inc
xchg
mov
inc
xchg
lcall
scas
push
jo
xchg
sti
mov
and
lods
fwait
xor
xor
fs
lea
ja
iret
icebp
dec
push
shl
xor
inc
popf
in
pop
or
xchg
clc
mov
flds
nop
mov
xchg
adcb
mov
add
lods
lcall
jne
inc
xor
stc
push
fwait
out
push
sahf
mov
jo
cmp
mov
bound
adc
scas
cmpsb
imul
mov
je
mov
or
sarb
dec
pop
repz
mov
movsb
shll
repz
xchg
daa
pop
popf
inc
adc
mov
cmc
gs
std
mov
daa
movsb
jb
adc
mov
in
and
shlb
in
shlb
xor
sub
cld
ja
adc
in
xchg
les
sub
cwtl
cs
sbb
stos
repz
add
push
xor
movlps
shll
mov
jmp
daa
mov
cmp
out
mov
xor
dec
add
rcl
mov
mov
addb
mov
movsl
or
insl
in
mov
cmp
jle
jp
ja
cld
out
inc
cmp
mov
xchg
xlat
ret
dec
lcall
mov
decl
out
ss
mov
aam
std
add
adc
xchg
aaa
mov
les
rolb
nop
scas
or
jnp
out
add
inc
icebp
mov
sbb
mov
leave
enter
mov
dec
mov
or
ds
dec
dec
adc
int
xor
mov
dec
fisubl
insb
and
mov
jp
dec
add
jno
movsl
lock
movsb
iret
mov
sbb
iret
ret
or
inc
faddl
add
insb
iret
outsb
inc
das
test
mov
fs
pusha
push
xor
leave
into
pop
hlt
or
test
add
jge
imul
xor
adcl
icebp
cmp
lea
fwait
and
cmp
add
call
fs
inc
mov
jg
inc
outsb
mov
sbb
jp
fldt
mov
inc
mov
pushf
sbb
in
xor
loope
int
pop
mov
jg
dec
cmp
fwait
add
jg
cld
es
and
leave
push
nop
psadbw
sub
sahf
push
mov
es
mov
mov
mov
fwait
clc
sbb
xor
loope
xlat
int
adc
aad
mov
pop
jae
mov
ret
xor
pop
aaa
hlt
gs
je
inc
pop
test
cld
out
mov
inc
xor
aam
cltd
out
pop
out
push
outsl
js
push
mov
int3
add
adc
add
mov
test
cld
and
inc
insb
cli
movsl
leave
scas
stos
jno
in
imul
adc
and
fs
pusha
mov
inc
xorb
sub
in
mov
xchg
lret
out
pop
xlat
cmpsl
jnp
xor
or
stc
imul
js
push
ds
push
cwtl
lock
loope
movsl
nop
stos
int3
mov
inc
mov
cmp
ja
adc
iret
mov
push
sar
repz
jl
push
push
outsl
icebp
cmc
lods
and
push
test
dec
lret
jl
cs
xchg
lahf
fldl
subb
outsb
and
bound
inc
pusha
in
in
jp
jecxz
sbb
push
in
icebp
push
and
out
pushf
test
js
add
cmp
ljmp
cmp
inc
jp
in
pop
addr16
adc
mov
jb
lret
clc
test
in
push
js
dec
add
or
sbb
mov
push
or
sbb
adc
insb
add
shr
mov
push
lea
ret
xchg
mov
sbb
ljmp
js
fidivs
jl
xchg
ds
aam
fisttpl
fnstsw
andl
mov
xchg
push
fidivrl
add
nop
fisttpl
jb
jnp
lcall
insb
icebp
fwait
mov
sbb
nop
or
xchg
out
sbb
jo
jp
arpl
imulb
or
inc
add
popf
mov
adc
js
lods
pop
hlt
sbb
jnp
pop
scas
out
inc
lods
pop
pop
lahf
leave
js
sti
adc
repnz
fisubl
mov
out
xchg
inc
jecxz
aaa
sbb
ret
sub
into
xorl
in
push
jns
popa
lock
pop
mov
inc
push
ljmp
nop
sbb
cmpsb
scas
or
adc
jmp
add
jg
fsubs
arpl
jo
and
cs
bound
rclb
xlat
mov
xor
in
push
sti
enter
popf
leave
stc
add
faddp
fists
ljmp
shrl
xor
loop
outsb
jl
in
mov
test
in
test
popa
and
add
push
jle
cs
inc
push
fst
xchg
stc
sbb
xor
les
pop
cld
lods
mov
or
rcll
cmc
lret
jle
sbb
loop
in
inc
and
adc
adc
cmpsl
insb
mov
inc
and
or
inc
or
jne
pop
mov
test
das
xchg
jnp
inc
aad
lcall
push
add
imul
int
dec
jne
popa
and
cmp
out
jp
sti
and
hlt
jg
jp
lods
inc
icebp
push
jecxz
sbb
jg
mov
add
aaa
sahf
lds
stos
pop
add
int
dec
int3
aaa
dec
out
sbb
rclb
into
jns
insb
cmp
enter
adc
hlt
adc
pop
sti
mov
nop
data16
in
test
sub
inc
xchg
cmp
or
mov
sahf
mov
jne
xor
aaa
pushf
inc
cli
inc
mov
ds
mov
push
jb
scas
cli
fcmovu
sub
inc
int
ret
push
fsubl
lret
scas
lret
dec
popf
sbb
mov
jg
cmp
sub
mov
int
pusha
dec
fbld
loopne
adc
movsl
jae
stos
or
sbb
mov
std
cmpsl
mov
sub
shl
outsl
jae
stos
out
mov
cmp
sub
ret
shlb
loop
and
inc
and
loop
in
movsb
xchg
mov
test
stc
idiv
shll
pop
fistpl
hlt
in
xchg
ffree
mov
push
sarl
outsl
leave
fbld
std
imul
mov
pop
cmp
addr16
jae
hlt
dec
outsl
push
clc
cmp
icebp
loop
pop
sub
xor
and
into
in
cmpsl
outsb
add
push
daa
mov
adc
dec
mov
cmp
jp
jle
scas
xchg
and
fldt
or
or
mov
mov
gs
mov
nop
sbb
xor
aam
mov
mov
inc
divl
mov
push
pusha
std
jae
dec
pop
sub
test
jnp
mov
mov
mov
xor
jge
sbb
push
push
cmp
subl
cmpsb
cmp
push
jl
pop
push
xor
adc
pop
pop
ret
pop
mov
mov
xor
fucomi
call
jno
iret
test
adc
loopne
sub
and
jmp
insb
add
mov
dec
out
xchg
dec
shrl
and
jmp
je
xchg
pop
inc
inc
mov
push
inc
sub
jge
jne
lahf
xorl
fwait
inc
daa
iret
jecxz
or
aad
mov
out
pop
aas
add
jno
aam
or
bound
adc
pop
out
fyl2x
cltd
out
fwait
stc
int3
repnz
add
xor
lock
jnp
cli
mov
scas
das
and
mov
xchg
scas
insb
lcall
sub
add
dec
and
jns
out
sahf
lods
jge
cmpsb
mov
loopne
sbb
dec
sbb
or
es
in
pop
sub
leave
pushf
sub
lret
bound
outsl
add
add
ja
xlat
mov
lods
mov
sti
inc
mov
in
js
out
xchg
out
lea
jne
and
xor
sbb
mov
test
push
cwtl
les
xchg
in
fnstenv
ds
jnp
cmp
test
cli
imul
sub
mov
xor
or
cmp
cmp
imul
aad
dec
mov
aas
pop
cwtl
and
mov
clc
jnp
push
jno
movsb
cli
js
dec
arpl
adc
sub
fstps
insb
sub
out
pop
iret
in
push
pop
arpl
mov
inc
shr
inc
dec
ja
inc
sbb
ja
mov
add
or
jmp
lea
add
jmp
mov
jecxz
push
xchg
lock
lret
mov
das
les
jp
lock
push
ds
movsl
mov
shlb
dec
add
mov
mov
mov
xchg
adcb
in
sub
mov
push
out
pop
or
test
test
jmp
pusha
pop
xor
out
cmp
pop
into
push
mov
inc
lahf
sti
ret
mov
sahf
xor
insl
xorb
scas
out
es
sbb
xchg
lret
jbe
mov
imul
fidivs
dec
pop
iret
xchg
adc
xor
mov
xchg
cltd
cltd
ds
adc
arpl
gs
mov
push
and
and
sub
xchg
mov
lret
lea
inc
call
push
or
mov
les
sub
cmpsl
xchg
push
ss
lods
lret
insb
mov
adc
and
push
sbb
xorl
mov
sub
add
add
lar
insb
fildll
mov
mov
and
inc
insb
dec
xchg
icebp
mov
ficoml
setg
mov
dec
mov
data16
and
test
in
sahf
arpl
repz
dec
fwait
cmpl
inc
and
sub
stc
xchg
jg
dec
fmuls
aam
ret
into
xchg
mov
xchg
fimuls
xchg
mov
mov
mov
adc
push
xlat
out
jg
mov
or
sbb
sbb
jge
add
sarb
je
mov
outsb
push
mov
xchg
pop
and
scas
xor
cmc
sub
mov
idivl
inc
pop
push
clc
out
cmp
xchg
lea
cmp
jbe
stc
mov
sub
outsl
nop
adc
insl
add
inc
les
sbb
jmp
cmpsb
std
out
pop
mov
push
mov
ds
aaa
pop
pop
inc
fnstcw
or
pop
in
push
push
in
pop
das
lahf
ftst
ret
ret
jg
add
xor
and
jl
jge
pminsw
jns
jnp
xchg
shrl
push
out
imul
or
pop
fimuls
push
fwait
out
mov
pop
pop
jnp
subb
cmc
push
push
mov
stos
xlat
lret
scas
dec
jg
jle
das
pop
shl
cli
push
mull
iret
ret
int3
mov
scas
xor
jmp
mov
les
stc
push
mov
jecxz
jge
imul
inc
movsl
mov
mov
out
inc
sub
loope
dec
inc
cmp
sahf
daa
lds
cmp
push
adc
jge
push
jecxz
mov
loopne
inc
sbb
xor
add
gs
xlat
adc
push
xchg
push
pop
pop
movsl
lock
rcrb
pop
cmpsb
xor
jp
rcrl
loopne
popa
orb
ss
clc
push
aam
addr16
and
pop
popf
pop
and
in
cmc
rorl
adc
cmp
push
aam
into
repnz
push
test
pop
cmp
jge
sti
fisttpl
cmp
in
mov
mov
inc
inc
fistpll
sub
out
adc
ret
inc
add
test
and
scas
testb
xchg
push
cmp
shrb
pop
lods
scas
cmp
sbb
push
adc
mov
mov
dec
xlat
insl
filds
loop
jb
jno
out
ljmp
pop
pop
out
mov
push
aaa
pusha
cmp
pusha
in
push
pop
sti
jle
sub
add
call
mov
add
push
das
mov
pop
push
sbb
popa
jle
or
jo
dec
cwtl
and
push
je
sbb
rolb
push
hlt
adc
mov
sbb
add
dec
mov
lds
sbb
movb
es
mov
mov
or
das
movsb
mov
push
fs
mov
push
gs
fwait
xchg
xor
cmp
xor
rclb
jo
aam
popf
fwait
insl
push
leave
cwtl
xor
push
jge
lret
loop
dec
insl
pinsrw
jae
sti
pop
mov
push
out
add
adc
mov
push
mov
push
sbb
adc
repnz
icebp
mov
jecxz
int3
sahf
cmpsl
je
xchg
repnz
mov
loopne
gs
arpl
test
push
push
fs
sbb
mov
adc
aad
in
mov
das
ja
fdivr
call
loop
sub
ficompl
sbb
rcl
sbb
cmp
pop
mov
cmp
in
cwtl
popf
and
mov
mov
adc
push
pop
pushl
xor
decl
or
loopne
lahf
negb
cmp
mov
and
pop
mov
push
dec
mov
jle
fsubrs
xchg
repnz
lcall
in
out
mov
inc
mov
adc
dec
mov
ss
shll
movsb
jmp
xchg
out
cmp
repz
cmp
dec
push
xchg
pop
je
jo
scas
loope
aaa
shll
arpl
gs
fwait
mov
jns
imul
push
jl
inc
cmpsb
shlb
fdivs
cmp
xchg
in
test
sahf
lea
pop
add
cmp
aad
into
add
pop
jmp
call
stos
cmpsl
lcall
ljmp
xor
xor
movsl
mov
dec
mov
test
pop
sub
xor
inc
and
sti
mov
add
cli
subl
popa
push
push
repnz
jg
pop
pop
adc
cmpb
jno
sbbl
fs
or
inc
cmc
mov
test
rclb
gs
hlt
xor
pop
pop
add
stc
das
add
mov
loop
sahf
in
cwtl
push
adc
xchg
and
es
dec
push
popa
mov
test
addr16
jecxz
jmp
stc
cs
adc
rcrl
inc
jne
mov
and
mov
fidivrs
mov
mov
or
enter
jno
or
xor
xchg
fwait
xor
push
aaa
jl
add
in
mov
xadd
test
cmp
and
ret
and
sbb
lods
sahf
xor
cmp
inc
call
iret
inc
imull
sarl
xor
inc
movsl
outsb
adc
popa
lcall
sbb
inc
cmpl
jbe
dec
dec
out
pop
std
jmp
fsubrs
adc
in
cltd
test
data16
cmpl
adc
lcall
out
lea
cs
lahf
mov
jo
push
jl
pop
or
subb
in
lret
cltd
mov
daa
imul
mov
aas
push
test
add
pop
rcrb
imul
aaa
adcb
pushf
adc
sarb
or
lea
clc
scas
dec
push
test
fdivs
sbb
dec
mov
jecxz
in
jns
mov
shll
sahf
push
mull
xor
rorl
lret
leave
lret
cltd
lods
es
xchg
daa
pop
cmc
inc
cmp
ret
pop
aad
mov
pop
pop
ja
pushf
mov
cli
ljmp
jmp
add
pop
add
inc
inc
lods
adc
rorl
lret
outsl
inc
or
or
mov
lods
sbb
sub
lock
cmpsb
inc
xor
dec
inc
mov
sarb
orb
mov
xor
mov
cli
popf
enter
jo
mov
xchg
insb
pop
scas
loopne
mov
sub
dec
dec
pop
jg
inc
adc
addr16
xor
divb
enter
mov
ja
jecxz
xor
loop
dec
mov
stc
mov
fucomp
and
mov
fisttpll
jb
aad
cmc
fs
cmp
add
dec
popa
add
in
in
dec
mov
cwtl
mov
stos
inc
sahf
test
icebp
cmp
cmp
dec
mov
cmova
jo
pusha
into
adc
sbb
lret
adc
lahf
or
call
lea
in
lret
xor
pop
mov
sub
and
cmp
mov
lea
pushf
sub
je
stos
adc
xor
movsl
in
test
push
adc
into
std
in
xchg
mov
xor
mov
or
xor
mov
add
imul
adc
lahf
sahf
aam
js
sub
add
or
call
mov
xlat
roll
push
inc
cmp
dec
adc
xchg
out
pop
xchg
stos
mov
dec
sub
dec
es
test
iret
jle
js
and
push
lods
mov
push
jns
push
pop
jo
jecxz
xorb
loop
es
sarl
jbe
loope
ror
mov
cwtl
add
movsl
jmp
in
jo
xchg
es
pop
cwtl
fs
cli
pop
insb
popa
mov
inc
add
in
jb
jl
in
mov
mov
adc
lods
lods
insl
cld
testb
sub
out
push
out
in
leave
addb
sub
lods
jl
push
ret
adc
je
add
aam
jle
lods
inc
pop
cmc
jge
mov
inc
sets
pop
jns
mov
aaa
dec
clc
mov
lds
into
push
out
cmc
mov
stos
mov
cmp
and
mov
bound
pop
call
ss
mov
scas
inc
mov
add
pop
loop
or
shlb
scas
out
std
psubsb
xchg
sbb
xchg
mov
sub
clc
int
cwtl
pop
cmp
int3
xchg
jle
jns
pop
cmp
jae
dec
daa
sub
cmp
ja
or
lock
jne
xor
cld
jp
lea
sub
sbb
arpl
and
cmp
or
shll
pop
fistl
mov
aam
jle
lcall
push
int3
orb
sub
out
mov
jp
cmpl
jmp
mov
inc
pushf
sub
testb
add
jg
hlt
add
inc
push
inc
cltd
into
cmpsl
out
dec
pop
sub
ds
fildll
ret
ds
or
xor
lret
pop
lock
lock
andb
sbb
add
adc
leave
jo
adc
xchg
cmp
rol
fistpll
sbb
iret
cmp
push
dec
push
test
xchg
lds
daa
pop
in
inc
sbb
outsb
inc
iret
sti
xor
mov
outsb
rcrl
adc
xchg
pusha
pop
cmp
imulb
ja
or
xor
in
cmp
aaa
fistpll
mov
rorl
fwait
cmp
loopne
jmp
lea
mov
imul
addb
loopne
rclb
or
lret
dec
cmpl
push
jne
lret
fldl
inc
subb
mov
jo
mov
adc
push
mov
push
inc
or
or
or
iret
or
dec
ret
adc
sbb
push
and
inc
mov
jo
cmp
sahf
push
sbb
jb
cld
cmpsl
stc
cwtl
and
pop
xlat
outsl
out
cmp
mov
fisubrl
fmull
fstpt
pusha
xchg
and
inc
ret
nop
jecxz
in
add
xlat
movsb
jbe
dec
jnp
rcr
les
jns
rolb
push
cmpsb
ja
xchg
xor
sub
mov
xor
push
push
cltd
push
xchg
inc
out
xchg
stc
fidivs
dec
data16
das
sbb
outsb
testb
nop
movsl
mov
fs
sbb
mov
jo
mov
cld
jge
test
dec
out
imul
int3
pop
hlt
mov
cmp
jmp
in
or
lret
data16
das
pop
outsl
xor
lret
lock
xchg
mov
pop
movb
push
pop
jecxz
xor
push
and
jp
subl
jge
leave
or
push
cmp
je
nop
mov
les
ret
test
popa
in
fisttps
push
dec
imul
dec
and
cmpsl
mov
icebp
shl
arpl
jns
hlt
mov
jl
aam
icebp
push
pop
rorb
pop
les
fnsave
sbb
inc
sub
push
xor
jp
test
iret
jge
mov
pop
shr
lret
adc
into
mov
mov
icebp
enter
iret
mov
dec
pop
jmp
adcb
rclb
testb
pop
push
je
lret
out
repnz
popf
iret
rorl
add
adc
add
push
push
in
lods
push
ret
sbb
sbb
daa
lea
jnp
jmp
xlat
xor
dec
fstpl
mov
ret
jge
jns
arpl
or
push
add
shrl
add
flds
sub
scas
jo
push
daa
push
divl
pop
xor
testb
lods
js
adc
popl
pop
inc
jb
xor
and
push
test
push
aaa
xlat
mov
out
out
mov
in
ror
dec
xchg
adc
mov
mov
mov
sub
cwtl
ds
cmp
push
xor
inc
sahf
stc
inc
inc
fucomp
jge
add
push
dec
into
out
inc
pop
aas
mov
mov
inc
arpl
push
cli
lahf
iret
jns
lock
sbb
or
xchg
iret
leave
js
xchg
ss
add
outsb
or
mov
jnp
xchg
shlb
sahf
jl
pushf
mov
mov
push
fs
pop
push
in
jg
jb
les
and
fistpl
decl
lcall
ret
nop
fwait
cmpl
mov
xlat
sbb
mov
std
insl
es
xor
adc
ficompl
fdivs
movsl
push
mov
pop
jg
jno
jb
lock
loope
adc
inc
pop
data16
fwait
ljmp
repnz
fsts
rorl
int
shll
sub
je
pop
mov
sahf
inc
push
ljmp
idivb
mov
das
xor
daa
dec
fisttpll
outsb
popa
push
pop
jg
and
call
sbb
fadd
lret
xor
xor
rolb
adc
decb
std
and
xchg
popa
add
inc
adc
test
add
gs
rcrb
jae
lds
lea
sbb
repnz
push
fwait
add
aaa
std
leave
nop
xchg
sbb
rcrb
sub
mov
xchg
dec
mov
and
mov
test
sub
into
lds
ja
xchg
ja
aas
mov
adc
je
jno
xchg
ds
data16
into
daa
pop
adc
inc
xchg
mov
and
mov
insb
arpl
cmp
xor
cmp
cmp
xor
out
and
inc
lahf
bound
push
aad
mov
push
shl
pop
adc
sahf
xchg
push
aad
pushf
add
inc
pushf
push
mov
or
frstor
xchg
jne
clc
lcall
shlb
and
pusha
aaa
mov
negl
xchg
xchg
movsb
mov
stos
lcall
xor
cmpl
ror
cmp
xchg
icebp
or
iret
dec
jmp
cmc
nop
jns
mov
mov
pop
push
out
or
mov
fwait
ljmp
sahf
sub
cli
popa
dec
fsub
push
inc
xchg
insb
fcmovnbe
xchg
jae
mov
lcall
fstpl
jmp
cmp
mov
sub
inc
and
xchg
pop
adc
sub
cmc
xchg
pop
jb
push
iret
xchg
dec
jo
out
mov
mov
push
das
cmp
insb
ljmp
divl
popf
dec
cmp
jne
xor
pushf
xchg
jp
push
cmpsb
mov
lret
sbb
enter
jo
mov
aas
xor
cmp
and
sarb
cmp
adc
xchg
mov
push
jge
jae
int3
sub
xorl
repnz
mov
sub
push
ss
jecxz
mov
add
movsl
sbb
nop
arpl
xchg
in
into
sbb
ljmp
pop
cmp
fs
mov
popa
lods
sbb
dec
jb
mov
mov
xchg
cli
pop
push
into
insl
sti
add
add
out
cwtl
or
lcall
roll
clc
loopne
popf
push
add
xchg
jbe
mov
cld
adc
outsl
repz
ret
mov
fisubl
dec
lds
loopne
aad
sbb
inc
adcl
test
andl
mov
cmpsb
or
mov
sub
sbb
cmpsl
mov
rcrl
pop
sarb
scas
mov
outsl
fsts
and
cmp
imul
mov
loopne
in
push
add
mov
dec
imul
aam
xor
cmpsb
dec
shll
jbe
jae
add
push
repz
or
or
pop
mov
xchg
mov
rolb
outsl
sbb
push
adc
js
stc
in
ja
xchg
add
mov
dec
cwtl
mov
incb
je
ret
aaa
ja
lret
out
ljmp
add
in
pusha
dec
roll
in
xor
jne
mov
gs
mov
inc
mov
and
adc
ds
iret
mov
cmp
pushf
mov
in
xchg
mov
leave
in
test
js
or
push
mov
dec
stc
xor
test
xor
pop
push
mov
inc
push
ret
icebp
mov
push
stc
push
loope
enter
or
mov
bound
push
cltd
push
cmp
dec
ds
into
cltd
std
fbstp
xor
andb
arpl
or
pop
mov
push
add
inc
mov
cmp
push
mov
sbb
sbb
mov
adc
sbb
in
xlat
sub
je
xor
lock
mov
sbb
icebp
xchg
or
add
ret
jle,pn
hlt
push
les
ja
rorb
std
xchg
inc
or
lock
imul
js
repnz
test
cltd
imul
mov
push
xlat
cmp
push
icebp
or
mov
inc
cmp
pop
lock
ds
shlb
out
roll
sub
add
or
mov
adc
dec
push
dec
cmp
jns
and
lahf
shr
gs
sbb
jo
popf
cmc
lret
mov
adcb
push
sbb
sbb
pop
iret
mov
repnz
add
popf
cmpsl
fbstp
xor
jno
xorl
or
dec
push
mov
outsb
test
dec
pop
pusha
enter
cmp
pop
and
repz
jle
mov
mov
cmp
sub
cmc
out
fiaddl
pushf
mov
lcall
stc
mov
jne
mov
add
xor
jmp
rorb
mov
xor
inc
sti
out
cld
int
aas
ss
mov
es
loop
cmp
cmpsl
es
int
ror
imul
data16
aam
cltd
add
cmp
daa
mov
push
sub
in
les
dec
pusha
out
push
xor
xchg
and
sbb
aam
shl
sar
imul
mov
xchg
sbb
in
fsub
daa
fidivs
mov
or
add
aam
or
ret
xchg
sbb
outsl
sub
rorb
dec
sub
stos
add
outsb
out
out
and
pop
sbb
jecxz
cmpsl
aaa
mov
push
jp
faddl
pop
pushl
inc
add
nop
sub
dec
arpl
int3
lock
popa
mov
or
sub
jmp
push
ja
mov
pop
sbb
adc
out
mov
xchg
call
into
nop
notl
fwait
out
negb
cwtl
enter
enter
addl
mov
scas
push
mov
pop
divb
dec
cs
mov
inc
and
xchg
in
call
lcall
cs
sbbb
cltd
mov
cmp
outsl
mov
sbb
es
pop
pop
xchg
lcall
jecxz
sbb
rclb
out
jl
sbb
ljmp
fiadds
addr16
in
pop
push
pop
xchg
pop
cmp
in
ss
lods
insb
and
jg
mov
mov
outsb
mov
or
in
jb
jnp
push
inc
inc
fstpt
lret
fs
fwait
movsb
xchg
aas
jge
inc
push
insb
pushl
fildll
push
adc
fdivrs
repz
mov
cs
out
je
dec
xchg
and
jl
adc
add
shr
leave
xor
inc
or
jae
mov
sbb
arpl
inc
cmp
out
repz
dec
mov
dec
shll
dec
rcrl
scas
test
aas
out
sub
aaa
inc
nop
push
adc
data16
sub
cmc
popf
addb
xchg
push
hlt
adc
shrb
nop
mov
jmp
push
push
push
test
push
stos
inc
mov
mov
rorb
inc
movsb
inc
sub
sbb
ljmp
maxps
dec
cmpsl
shll
das
and
cmpsl
inc
xor
bound
shrb
ret
mov
add
jg
pop
jl
fs
mov
cmovne
push
cmp
xchg
push
test
xor
mov
mov
int
roll
test
faddl
jle
or
in
pushl
pop
scas
or
test
add
cmc
sbb
cmp
push
loop
std
add
dec
mov
mov
nop
fidivrs
repz
addr16
sbb
xor
repz
stos
test
sbb
jecxz
dec
xlat
ljmp
imul
out
jge
cmpsl
push
push
cmc
pop
pop
call
aaa
mov
rolb
gs
incl
pusha
and
add
pop
mov
int
jge
mov
inc
jmp
cli
sbb
in
mov
sub
sti
int3
add
mov
push
mov
push
jne
leave
or
sub
dec
add
pop
sub
data16
popa
loope
rcll
sbb
jmp
clc
das
in
cld
insb
xchg
cmp
dec
xor
notl
xchg
add
test
lock
cmp
xor
xor
inc
mov
and
jl,pt
cltd
ficompl
sub
cmpsl
and
mov
mov
xchg
mov
pop
and
out
add
jg
push
fcompl
ret
adcl
xchg
int
or
and
int
addl
dec
or
mov
push
dec
movsb
sbb
popf
mov
push
inc
dec
ja
insl
rcr
xchg
imul
into
jp
fadd
sub
lret
hlt
gs
jl
loop
jae
repnz
add
movl
test
cmp
js
mov
pop
inc
rcll
push
and
ret
stc
mov
mov
iret
mov
unpcklps
push
test
enter
lock
imul
ror
cmp
fcomip
pop
and
rcrb
mov
sbb
xchg
pusha
xchg
inc
mov
sub
adc
nop
test
dec
or
scas
and
mov
pop
mov
adc
sub
push
jo
pop
adc
jmp
jbe
jae
ljmp
aad
shr
sub
mov
mov
pop
rolb
mull
das
clc
pop
push
lods
sbb
jne
jmp
ljmp
lock
mov
sbb
or
scas
jns
sub
push
sbb
push
popa
push
jle
inc
test
mov
mov
fwait
repnz
cwtl
jae
mov
adc
push
add
mov
sbb
imul
cmpb
andb
pop
push
sbb
out
ja
xor
aad
inc
pop
sti
movsl
sub
subb
insl
cmpl
sbb
push
push
cmpsl
scas
lock
sub
or
cmpsl
lret
cmpsb
fcmovnbe
sub
jge
xchg
js
es
stos
test
subl
push
loop
or
aas
sub
clc
or
popa
add
push
pop
push
pop
adc
xor
adc
gs
or
jne
outsb
sarb
inc
push
aas
in
cmp
outsb
cmp
xor
jp
out
movsl
ret
rolb
mov
adc
ljmp
jns
sbb
loopne
repz
xor
sbb
mov
pop
mov
stos
insb
add
sbb
je
out
push
je
push
fnsave
loop
out
xor
xchg
jp
sub
xor
cld
ret
repnz
popa
int3
call
add
push
sbb
rorb
cmp
pusha
pop
xchg
and
fwait
push
cs
jns
leave
sub
sub
lods
push
std
lahf
sbb
das
stos
mov
mov
or
call
lahf
jns
xchg
shll
stos
xorl
pop
push
imul
and
cmp
jp
mov
add
mov
cmpsl
and
dec
pusha
push
nop
sub
lcall
fisubrl
aaa
push
test
pop
pushf
test
xchg
jmp
adc
ds
int3
push
sarb
stos
mov
sti
popa
pop
dec
shrb
push
or
cmp
mov
movsb
adc
inc
outsl
jns
fcmovu
push
lcall
xchg
repnz
popa
add
xchg
pushf
test
cmp
or
call
or
imul
movntq
pushf
pushf
rcl
sub
sbb
imul
aas
js
test
aaa
movsb
sub
adc
pop
jo
lcall
cmp
scas
push
divl
cli
imul
hlt
nop
cli
push
add
dec
push
push
lea
mov
sub
hlt
fistpll
lods
push
push
push
mov
stc
cwtl
lret
aas
inc
xchg
push
jp
adc
sub
test
sub
xchg
xor
mov
xor
out
outsl
mov
fs
xor
and
es
outsl
inc
rorb
mov
fs
mov
inc
pop
adc
out
pop
lcall
fwait
fwait
ret
xchg
dec
dec
test
psubq
arpl
xor
dec
mov
ror
adc
xor
ljmp
in
adc
icebp
pop
add
cs
cmp
test
sahf
inc
mov
ss
mov
loop
popf
jge
pop
adc
mov
jno
testl
test
repz
sbb
fsts
mov
jae
imul
int3
sub
mov
xchg
out
ret
pop
sets
outsl
adc
push
pop
nop
jbe
mov
push
jo
roll
lods
adc
jae
inc
xchg
loope
dec
movsb
shl
pop
aas
jo
ret
mov
mov
mov
ljmp
testl
cmpsb
push
dec
push
rcrb
cmp
outsl
in
or
aaa
pop
mov
imul
or
fisubs
inc
in
inc
repz
movb
sub
mov
ret
inc
lahf
xchg
push
add
dec
lock
loopne
mov
cld
dec
xchg
orl
in
cmc
in
add
xchg
mov
dec
pop
pop
scas
and
call
gs
xchg
adc
and
cs
mov
into
cmp
in
les
add
mov
pushf
popa
xor
xchg
pop
lods
push
scas
xchg
jno
test
mov
imul
pop
out
mov
fisubs
jmp
pop
mov
ret
stc
gs
dec
xor
and
push
xor
outsl
ret
int
sub
or
inc
sbb
add
or
ljmp
test
push
mov
int3
or
dec
adc
jmp
jg
out
icebp
xor
xchg
rclb
maxps
jg
xor
mov
stos
rolb
inc
in
testl
std
lds
mov
lret
push
or
dec
test
jbe
inc
adc
xor
jecxz
xchg
gs
pop
js
ja
xlat
jnp
fbstp
jecxz
mov
in
pop
icebp
f2xm1
int3
and
adc
add
inc
xchg
lods
pop
adc
lret
push
inc
addr16
andb
rol
lea
loopne
push
ja
das
sti
out
sarl
dec
ljmp
sbb
jl
xor
ljmp
sub
mov
push
stos
in
orl
sbb
inc
lea
dec
arpl
or
lods
stos
adc
into
cld
xchg
mov
dec
mov
add
call
mov
sub
setbe
xchg
imul
add
and
jge
in
clc
dec
adc
popa
lods
shll
mov
lret
or
push
pusha
and
sbb
sbb
popf
lret
fldcw
jecxz
pop
pop
cmc
adc
scas
cmpsb
cmp
inc
daa
sahf
dec
or
mov
ret
rol
int
or
cs
or
dec
test
loope
pop
in
xchg
push
repnz
btc
push
out
pop
je
lds
adc
add
out
dec
push
xor
lcall
in
and
dec
nop
cs
arpl
sti
adc
lods
imul
xchg
or
std
inc
icebp
mov
daa
sti
repnz
loop
insb
dec
repnz
jge
pop
mov
fwait
lahf
pushf
adc
leave
dec
mov
les
lret
scas
xlat
xchg
push
addr16
fwait
in
jecxz
xor
or
mov
pop
jne
mov
jge
adc
shrl
cmpsl
sbb
xchg
fisubl
std
jb
xor
mov
fsubs
pop
inc
into
jg
mov
pop
mov
fadd
jae
adc
and
arpl
sbb
outsl
out
dec
inc
xchg
test
negb
je
jl
mov
out
cmpsl
nop
dec
adc
loop
leave
add
fmuls
lods
inc
pop
sub
int3
jne
cli
jg
inc
ds
adc
inc
cwtl
inc
loop
xchg
icebp
popf
stc
inc
fmul
imul
mov
push
pop
sbb
cmpsl
mov
loop
cmp
xchg
or
or
sub
lahf
dec
cwtl
lea
test
mov
negb
aas
incb
hlt
pop
xor
scas
je
ret
outsb
fwait
dec
pop
xor
sbb
sbb
outsl
jl
aam
cmp
rcll
mov
aad
adc
sub
add
cmp
pop
xchg
stc
call
sbb
ljmp
subb
filds
adcb
or
sub
fisttpl
pop
jae
lea
push
xchg
and
out
fs
dec
pop
adc
push
jl
test
aaa
mov
daa
adc
pop
ja
mov
dec
cltd
mov
movsl
mov
dec
jnp
and
xchg
pop
adc
cwtl
sbb
pop
stc
arpl
popf
cmp
pop
jecxz
bound
jne
data16
push
fstps
sub
out
push
test
arpl
mov
pop
inc
push
fs
xor
filds
jle
mov
popa
xor
lea
jg
add
ds
pop
loopne
add
mov
inc
jns
jle
dec
rcll
or
movsl
pusha
daa
push
cmpsl
sarl
arpl
int
cmp
in
sar
shlb
cmpsl
arpl
or
push
je
xchg
js
pop
nop
and
push
incb
push
stos
ja
xor
lods
adc
stos
pop
orl
cmp
into
icebp
dec
gs
xor
pop
pop
xor
loope
in
adc
popa
pop
add
outsl
pop
and
hlt
pop
jb
cwtl
lret
aas
in
mov
bound
mov
test
jge
les
stos
xor
mov
sbb
in
cmp
std
xchg
push
push
jo
mov
cli
push
cltd
mov
sbb
rcll
lret
adc
sub
fsubs
cwtl
mov
mov
mov
mov
popf
adc
xchg
roll
adc
cmp
lahf
or
pop
xchg
vcomisd
mov
daa
jp
or
arpl
inc
lea
push
xchg
enter
xchg
lea
jne
scas
out
xchg
call
arpl
daa
mov
dec
out
pop
cltd
sarl
jae
shlb
inc
pop
push
sub
repz
and
sti
pop
cmp
add
adc
jge
mov
sub
push
jl
loop
xchg
add
cld
jb
cld
sub
out
in
mov
bound
jmp
popa
sub
push
pushf
mov
movsb
push
mov
push
cmpsb
repnz
aaa
mov
pushf
xchg
inc
pop
clc
addr16
mov
jecxz
jno
neg
jnp
es
dec
enter
repz
mov
fnsave
mov
xor
in
sbb
cmpsb
lds
repnz
and
loop
je
xchg
pop
ljmp
jmp
push
icebp
inc
mov
jne
fs
test
and
fadd
pop
adc
lds
pop
inc
xchg
fidivrl
stos
or
das
or
stos
fwait
icebp
mov
in
int
movsb
mov
decl
scas
test
lea
sar
es
sti
mov
add
adc
xchg
push
das
xor
mov
cli
das
mov
xor
test
loop
sub
in
add
xchg
add
pop
fs
jge
and
mov
lea
daa
arpl
dec
movsl
repnz
ljmp
xor
into
shll
xor
arpl
or
shrl
adc
clc
ds
sahf
ja
ret
jl
mov
es
incb
subl
aaa
and
jecxz
insl
push
lock
cltd
add
mov
jnp
in
push
imul
lods
cltd
scas
and
sarl
pop
sbb
sarl
sbb
jmp
fwait
add
xchg
push
or
je
scas
or
mov
xchg
aas
jno
subb
mov
add
addb
jp
lahf
jle
js
cmp
sahf
jecxz
lcall
dec
mov
mov
sbb
sahf
cld
popa
loope
add
cmpsl
jbe
xchg
mov
leave
call
imul
lcall
jecxz
ljmp
jle
test
pop
popa
mov
sub
xchg
mov
jmp
lock
cmp
call
add
xchg
mov
push
lock
lcall
rol
mov
stos
mov
adcl
aam
pop
je
loope
mov
pop
shl
mov
xchg
aam
test
mov
das
push
mov
mov
int
cmc
mov
pop
sbbl
mov
fisubs
sbb
imul
fisttps
ret
in
enter
mov
jp
jb
mov
outsl
push
jg
pushf
jne
mov
xchg
je
xchg
inc
aam
stos
orw
jbe
xor
add
cs
and
sbb
and
add
cmp
mov
ja
mov
jmp
adc
push
dec
lock
push
dec
fildll
cmpsl
dec
adc
dec
dec
jo
outsb
mov
ljmp
sbb
push
xchg
xor
cmc
mov
dec
push
cwtl
inc
pop
push
subb
mov
inc
and
ds
pop
mov
xchg
scas
dec
push
les
jp
into
popf
rcll
lret
in
mov
test
andl
jl
mov
mov
adc
mov
push
add
ret
fsubl
lods
mov
imul
jmp
xchg
test
lahf
xchg
jmp
nop
movsb
push
pop
jle
sub
and
aad
sub
sub
fs
jae
push
cmc
subb
or
pop
push
and
bound
add
mov
stos
cli
sbb
test
in
push
dec
jo
xor
in
sbb
inc
lret
mov
mov
outsl
lret
adc
int
mov
fistl
push
js
outsb
or
cwtl
jl
cmpsb
arpl
imul
and
sub
rorl
sub
adc
fwait
and
movsb
idivl
mov
ljmp
mov
xchg
xor
jg
ja
push
mov
in
aas
fs
insb
cmp
lret
sti
movsl
mov
int3
push
sub
pusha
pushl
sbb
popf
fwait
pop
sahf
imul
roll
cs
int3
aas
lds
test
cmc
mov
repz
or
or
adc
xchg
jno
mov
aam
dec
in
mov
inc
pop
or
stos
in
mov
jne
cwtl
mov
out
insb
xor
insb
xchg
leave
pop
or
clc
mov
push
sub
mov
shlb
scas
push
fs
clc
adc
into
jae
call
push
frstor
push
in
xor
scas
std
xchg
aad
inc
rorl
push
aaa
das
mov
mov
push
test
dec
out
inc
and
in
inc
mov
shll
and
data16
es
push
xor
dec
cmp
fsub
push
and
jns
push
push
int
shlb
fwait
aaa
call
out
mov
mov
pop
mov
xor
jb
add
lret
xchg
fcoml
jae
push
pop
sbb
stc
in
iret
loope
addl
mov
mov
dec
lret
mov
mov
rdmsr
or
imul
inc
sbb
mov
icebp
mov
inc
add
push
repnz
movsl
sub
mov
cmp
add
mov
enter
into
lods
mov
jns
add
aad
xchg
out
int3
pusha
arpl
add
pushf
cmp
cmp
gs
imulb
aam
jo
jns
mov
scas
or
cmp
scas
xor
push
sbb
pusha
icebp
mov
xchg
adc
mov
mov
jno
adc
cmp
add
lret
fnstenv
aam
stos
imul
stc
je,pn
sar
test
pop
pop
xchg
ja
inc
mov
mov
lods
out
cmp
rorl
mov
rcrl
xor
rolb
adc
int
mov
pop
push
ljmp
push
icebp
adc
sub
fsubs
or
popf
pusha
dec
fstps
jo
sbb
cmp
adc
sub
addr16
orl
mov
mov
loope
into
jns
fstl
mov
fimuls
aaa
mov
getsec
pop
pop
pop
inc
jmp
cmpsl
cwtl
scas
inc
xchg
js
and
fisttpll
push
inc
sarb
ss
pop
into
cmp
pop
mov
gs
mov
pop
int3
xchg
loopne
daa
movsl
and
jp
and
and
cmc
and
jg
jae
or
sbb
or
sbb
lock
add
andl
lods
cltd
icebp
stos
popf
mov
mov
imul
and
out
aas
fcmovnbe
inc
and
cmp
and
dec
adc
ret
int3
mov
push
movsl
rorb
xchg
jle
lods
in
scas
mulb
pop
push
dec
fisubrl
dec
les
bnd
cmpsb
mov
push
mov
xor
lods
sub
call
test
shr
xchg
cmp
dec
mov
lds
cmp
icebp
ret
adc
cs
cmp
imul
adc
fsubrs
test
push
mov
inc
sahf
push
les
xor
mov
add
mov
adc
sub
mov
jmp
ja
out
movsb
repz
mov
xor
ljmp
add
jl
je
adc
scas
cmpsl
mov
movsb
xor
or
mov
push
movlps
push
popa
into
cwtl
lret
lods
aaa
shl
inc
jb
movsb
shlb
dec
push
mov
loopne
inc
std
out
mov
add
mov
mov
inc
sbb
inc
push
mov
mov
dec
insl
mov
sbb
jle
pushf
pushf
icebp
pop
mov
xchg
arpl
xor
insl
pop
test
xor
push
sbb
push
or
jnp
insb
shr
sub
test
lea
adc
mov
bound
inc
lret
inc
rcr
jnp
out
dec
out
adc
adc
jle
or
dec
mov
pop
sbbb
add
cltd
mov
mov
jno
cmp
addr16
sahf
sbb
popf
into
aas
xchg
pop
or
lahf
subb
push
out
mov
sbb
pop
out
jbe
lds
cmpsb
pop
loopne
mov
push
repnz
mov
call
jnp
and
out
incb
xchg
fwait
das
loop
cwtl
lahf
cmp
mov
jge
inc
ret
out
mov
leave
push
adc
dec
sub
jbe
mov
dec
std
xchg
imul
rorl
mov
push
push
mov
pop
mov
scas
loop
jmp
sub
mov
dec
adc
sbb
adc
iret
ror
lock
fcompl
jp
mov
xchg
sbb
leave
int
and
or
mov
int
dec
bound
test
lea
sbb
xor
ror
clc
insb
add
aad
fwait
int
fidivl
fdivrl
lods
xor
aam
in
aas
jecxz
loope
paddusw
mov
pop
sbb
dec
xor
dec
int3
and
and
lcall
das
dec
test
ja
mov
sub
push
cltd
push
jae
ja
test
push
loope
cmp
cmpsl
sarl
sub
outsb
or
pop
xchg
mov
imul
jno
movsl
and
les
push
jns
sarb
out
stc
sub
cwtl
xor
fcmovnb
adc
push
shll
adc
hlt
push
push
aam
movsb
jbe
pop
clc
inc
imul
or
gs
cmp
stos
mov
add
jle
sub
pop
sub
or
neg
scas
or
xor
std
jmp
or
cmc
jmp
lds
xchg
stos
in
dec
sub
dec
inc
enter
pop
xchg
pop
and
out
add
xor
add
rcrb
leave
test
push
inc
dec
xchg
jecxz
fwait
cld
mov
clc
sbb
mul
cmp
mov
movsb
daa
cli
add
imul
adc
xor
dec
out
ljmp
in
cmp
call
popa
loopne
sbbl
mov
jnp
pop
xchg
pusha
test
jp
leave
xchg
cmp
outsl
sub
loopne
aam
cmp
ret
call
sub
shrl
adc
adc
dec
xor
sbb
mov
jne
mov
orl
out
xchg
adc
mov
xor
mov
out
xor
out
mov
fldcw
jg
inc
test
lods
xchg
ret
cmpsl
pop
test
mov
cmc
fiadds
jmp
sub
std
jo
add
cmp
adc
sub
shl
xchg
iret
xchg
subb
into
mov
sub
in
adc
lcall
mov
sub
test
jb
mov
pushf
push
sti
jge
push
xor
icebp
icebp
popf
mov
push
out
sbb
sar
push
mov
sbb
push
imul
xchg
cmp
mov
dec
push
je
cmp
adc
mov
fmuls
cli
mov
or
cmp
stos
pusha
pop
dec
andl
lods
sub
push
cmp
fiadds
fsubl
enter
scas
adc
mov
hlt
mov
cmc
sbb
lcall
or
cmc
js
sub
and
adc
xchg
add
xor
push
and
bound
jle
xchg
cmp
popf
pop
push
cmp
pop
repnz
and
xchg
push
sub
mov
fnstsw
aas
cmp
push
or
mov
stc
jo
sub
inc
clc
mov
jb
sbb
cmp
and
lods
pop
sub
pop
fbstp
cmp
in
mov
or
add
fisubrs
sub
dec
and
xor
dec
push
shlb
loopne
mov
aaa
repnz
add
or
insb
test
mov
or
mov
jle
jp
repz
adc
inc
sbb
loope
scas
inc
xchg
movsl
sbb
xchg
enter
push
xchg
adc
xchg
xor
fistps
scas
mov
pop
mov
push
cmc
das
stos
imul
mov
sbb
sub
xchg
jmp
jmp
or
or
and
xchg
and
lahf
int
gs
in
or
mov
mov
inc
dec
inc
push
in
or
adc
mov
insb
aaa
mov
inc
push
mov
pop
adc
sbb
je
addr16
mov
xlat
sub
jno
fdivrp
mov
cli
or
inc
mov
push
xchg
jo
mov
pop
push
xchg
loopne
pminub
push
pop
cwtl
rcl
adcl
hlt
fstpl
cmpsb
nop
popa
sbb
mov
aam
adc
add
mov
test
arpl
rol
mov
ss
inc
jge
pop
jge
dec
dec
cmpsb
aaa
mov
jno
sbb
enter
add
push
cmp
mov
outsb
mov
mov
cmp
fisubrs
sub
cmp
push
pop
lret
jmp
or
movl
xor
iret
repnz
fdiv
dec
test
cmp
dec
jbe
js
add
out
cmp
cmp
scas
dec
push
mov
outsb
pushf
mov
xchg
push
push
xchg
mov
or
icebp
pop
dec
push
push
jg
push
das
icebp
imul
fsubs
std
or
lods
movsl
scas
xlat
mov
ja
popa
add
into
dec
jb
jp
and
iret
cmp
lahf
aas
mov
test
mov
xlat
push
pusha
int3
orl
sbb
and
lcall
or
or
add
js
mov
inc
pusha
jne
xchg
in
aaa
leave
pop
push
scas
cmpsb
jecxz
inc
mov
test
mov
jp
sar
les
mov
mov
jl
ljmp
rcrb
iret
lret
orl
dec
in
outsb
push
test
push
lock
repz
insl
push
and
repnz
pop
std
out
jp
sbb
push
loopne
lds
cmp
cmp
jo
cmpsl
or
shrl
xor
arpl
cmp
loopne
add
cld
repz
jne
xchg
ret
in
sbb
mov
lds
je
push
xchg
pop
dec
lret
pusha
sbb
pop
cltd
push
aaa
adc
add
call
adc
out
adc
repz
xor
cmpb
sub
lock
imul
ret
mov
rcl
or
fnsave
les
mov
mov
daa
test
rorb
jb
push
sbb
aas
cltd
jp
inc
fcmovb
xchg
in
pop
sar
hlt
xchg
sub
push
cli
cmp
add
sub
sbb
mov
stos
pop
push
icebp
sub
adc
es
push
stos
cmp
adc
push
mov
mov
imul
sbb
clc
outsl
scas
adc
sub
in
inc
mov
lods
leave
je
mov
xchg
rolb
nop
adc
stc
inc
das
sbb
jnp
mov
add
adc
test
cli
sub
push
into
ds
iret
cwtl
fildll
push
push
xchg
xchg
adc
aaa
cld
add
test
xorb
cmp
rorl
xchg
dec
je
push
inc
imul
xorb
sbb
in
test
ljmp
adc
lcall
hlt
dec
mov
cmpsl
js
cli
and
int3
lock
pop
mov
xor
into
jmp
je
jle
add
adcb
mov
xlat
dec
insb
jne
stc
lds
js
mov
cmpsb
pushf
iret
negl
lock
inc
cmp
insl
mov
cwtl
fnstcw
jnp
jno
fbld
xor
sub
mov
int
leave
push
xchg
aas
lcall
add
lea
scas
lret
call
int3
inc
lret
mov
out
insb
cmp
xchg
push
lahf
jg
push
push
in
adc
and
inc
pop
dec
mov
mov
divl
inc
or
add
mov
insl
dec
xor
xchg
jmp
dec
pop
into
cmp
push
out
mov
ret
xchg
lretw
mov
sub
cmpsb
mov
pop
movsl
and
shll
lea
sbb
jle
mov
xorps
mov
push
jp
lahf
jnp
ja
push
mov
mov
cld
movsl
sub
shll
dec
jl
cmc
out
cmp
xor
add
lea
mov
bound
cmc
sti
daa
popf
ret
pushf
cmpb
sarl
jo
mov
ss
fmull
lea
add
adcb
dec
push
xchg
cmp
mov
mov
dec
adc
pop
out
sahf
icebp
inc
nop
pop
stos
sub
jg
shl
lret
rcl
imul
mov
ret
ret
es
mov
sbb
xchg
push
gs
arpl
mov
mov
clc
cmpsb
sbb
dec
out
jmp
xlat
pop
push
or
ret
loopne
imul
and
test
and
fwait
repz
push
ret
and
daa
ficompl
rcl
cmpsl
ss
dec
adc
jno
cmp
gs
and
aas
xchg
out
or
stos
jecxz
cltd
addb
stos
and
cmc
mov
dec
inc
add
mov
adc
xlat
out
mov
xor
inc
je
adc
mov
push
dec
movsb
sahf
imul
ss
stos
mov
or
and
add
ret
aam
addb
fstpl
dec
stos
jecxz
xlat
jo
push
cmpsl
xor
sbb
push
mov
jo
mov
popf
stos
mov
push
xchg
pop
mov
mov
pop
cmp
sarb
and
jmp
pushf
fsubl
out
push
and
mov
frstor
iret
mov
call
lods
mov
in
dec
outsl
push
out
cmp
fmulp
jp
std
daa
inc
xchg
mov
les
sbb
jne
out
subl
xor
jns
stc
push
mov
outsl
clc
out
push
test
xchg
decl
imul
mov
mov
dec
sbb
mulb
adc
cmp
adc
xchg
mulb
xchg
jne
popf
sub
lahf
mov
jb
dec
jbe
and
sub
mov
mov
push
pop
lock
adc
and
mov
adc
js
pusha
enter
mov
imul
iret
bound
adc
push
sub
xchg
jg
fimuls
and
xchg
jl
fadds
stc
fwait
stos
std
cld
dec
mov
es
pushf
dec
and
mov
push
jmp
push
jns
pop
in
rcrl
or
xchg
std
inc
lahf
cmpsl
cmpsb
ljmp
test
aas
add
jno
data16
sbb
mull
or
mov
fprem
push
and
aad
push
nop
xor
push
rcl
xchg
test
pop
push
int
sbb
and
es
repz
push
cltd
sbb
adc
insl
scas
fsubrp
mov
jp
jb
insl
sbb
jns
outsb
fidivs
sbb
inc
lahf
fisubs
inc
lods
pop
mov
movsl
mov
stos
and
add
idivl
icebp
stos
adc
idivl
jbe
mov
cld
jg
push
xchg
push
jnp
hlt
cmp
add
lods
cld
xlat
sub
hlt
jg
movsbl
jnp
xchg
cmpsb
mov
pop
cmpb
iret
andb
sbb
push
insl
pop
mov
sub
jae
mov
sbb
or
and
mov
outsl
sub
mov
in
and
sub
inc
and
jge
arpl
movsb
scas
rcll
in
jnp
daa
inc
pushf
adc
out
fsub
scas
or
mov
sti
fistl
cmp
aaa
cld
pop
stos
lods
adc
shlb
pop
int
pusha
out
test
inc
cmpsl
push
ret
cmpsl
inc
loope
mov
rorb
stos
nop
mov
popf
mov
mov
add
ljmp
bound
mov
push
add
cmc
or
jae
inc
or
scas
mov
inc
lock
jns
test
jns
pop
push
push
dec
addr16
push
mov
mov
and
ss
jp
inc
in
call
mov
mov
inc
jp
repnz
scas
mov
xchg
stc
adc
aaa
loopw
or
out
sbb
mov
aas
mov
adc
cld
and
adc
dec
daa
or
add
cmpsl
rcrb
sbb
adc
push
fnstenv
jae
sahf
sub
jo
adcb
mov
jns
rep
mov
jnp
mov
pop
or
xlat
aam
enter
mov
stos
pop
jecxz
cltd
mov
dec
xchg
outsb
add
ret
test
outsl
cmc
mov
fiadds
sar
and
addl
ljmp
fiaddl
loop
jge
xor
mov
push
jnp
xor
pop
inc
dec
sbb
sbb
and
adc
pop
call
push
nop
inc
movsb
dec
das
jmp
push
pushf
inc
dec
mov
cwtl
mov
ss
sbb
mov
inc
push
fimull
dec
lock
cmpsb
pop
hlt
push
xlat
and
xchg
push
or
lret
jb
fsubrl
shll
iret
in
shlb
mov
mov
faddl
push
repnz
cmp
and
xchg
jl
mov
mov
fidivrs
sbb
sub
jl
and
lea
xchg
dec
rorb
lcall
fcomps
adc
and
xchg
iret
add
lea
in
mov
xchg
mov
pop
mov
and
mov
bound
mov
jmp
jg
cmp
das
cmp
mov
dec
rorl
mov
rcr
inc
adc
imul
add
test
arpl
in
mov
xchg
pop
push
fildl
push
test
aaa
lret
pop
loopne
sbb
gs
pop
or
xor
xchg
pop
out
or
fwait
xchg
xchg
gs
out
sbb
ds
test
int3
mov
mov
xor
in
lods
icebp
xchg
jbe
outsl
cs
jl
xchg
data16
jge
out
sbb
scas
fiadds
pop
in
dec
jne
push
xlat
or
out
jl
int3
adc
test
cmp
push
mov
sbb
repnz
adc
test
cmp
pop
mov
mov
cmc
les
cltd
inc
dec
xchg
pop
das
imul
dec
ja
jne
pop
mov
mov
pusha
jg
dec
nop
mov
pop
inc
cli
add
push
push
or
sub
jg
xchg
pop
cmc
mov
int
adc
fists
addr16
xchg
sub
cld
aas
test
push
sub
xor
sti
aad
jo
lret
addr16
pop
fidivl
cmp
add
xchg
pop
lret
shl
sbb
pop
xchg
mov
cmp
notb
insl
stc
pop
pop
mov
inc
adc
lods
jmp
lods
push
out
fadd
pop
sbb
jp
aas
daa
xor
rcll
shll
dec
repz
add
fstps
cmp
mov
xorb
jmp
cs
enter
repnz
xor
inc
mov
loopne
cmpsl
push
sub
fisttps
mov
jmp
push
outsb
adc
mov
shrl
mov
mov
pop
sti
add
pop
pop
nop
pop
xchg
mov
popa
adc
inc
outsl
adc
pop
or
dec
cli
sahf
mov
imul
aas
aad
lahf
lret
jecxz
sbb
mov
es
loop
pop
cmpsl
and
mov
lods
xor
jg
add
paddsb
shl
enter
sbb
clc
sub
jp
cmp
pop
fwait
or
in
cmp
pop
xchg
lds
into
sbb
jge
jne
rorb
add
divps
inc
add
andl
dec
jns
or
jmp
push
outsb
mov
xchg
and
mov
cs
or
js
leave
in
aaa
xchg
hlt
xor
scas
xor
xorl
inc
or
insb
fdivrp
out
popf
pop
sahf
repnz
movsb
add
cmp
push
mov
adc
out
test
pop
xchg
aas
adc
cmp
xchg
hlt
xchg
add
mov
in
adc
sti
inc
imul
add
mov
rcl
lcall
mov
dec
in
call
sub
pop
jmp
dec
cs
mov
lret
clc
sbb
adc
mov
stc
std
xchg
push
fisubs
xchg
inc
adc
pop
imul
push
mov
mov
cld
icebp
jle
int3
adc
lahf
push
dec
cli
push
xchg
push
jp
sub
jb
cmp
outsl
push
pop
mov
ret
or
andb
or
push
out
xchg
and
jae
mov
add
orb
std
dec
xor
pop
gs
mov
in
scas
jmp
add
and
cmp
mov
test
jb
or
test
pop
jno
outsl
xlat
inc
mulb
loopne
mov
rcl
je
popf
dec
xchg
lahf
jge
mov
test
in
mov
lcall
mull
dec
add
xchg
inc
ds
mov
stos
ss
imul
jp
pop
test
adc
int3
xchg
or
fdiv
xor
ret
pop
ljmp
xchg
pop
or
or
daa
ret
scas
fs
xorb
shr
ds
lret
incl
xchg
lea
and
jp
lds
xchg
insb
stc
in
popa
adc
xor
pop
addr16
add
out
dec
sbb
hlt
int3
loop
xchg
xchg
push
mov
in
cld
test
jmp
mov
rsm
or
lret
jecxz
in
and
out
and
cmp
sub
lret
fs
test
push
out
inc
add
dec
shr
and
fsubrs
and
mov
daa
sbb
pop
or
mov
or
jae
add
in
xchg
xor
sub
in
decb
or
inc
arpl
dec
fsubrp
and
xchg
insb
mov
mov
pop
jbe
and
push
pop
xlat
sbb
adc
inc
lahf
adc
push
and
inc
jns
push
inc
xchg
lcall
xor
fiaddl
repz
cmp
or
xchg
push
mov
lock
sbb
movsb
loope
mov
sub
add
mov
ds
and
push
jns
stos
xor
push
sbb
int3
dec
inc
cmc
sub
ljmp
push
dec
cmp
outsl
insb
lcall
sbb
bound
inc
out
adc
cmpsb
jne
dec
or
pop
or
fcmovb
add
notl
inc
repnz
dec
out
lods
imul
dec
inc
movsb
xor
aam
inc
jae
fnstsw
shlb
or
inc
xchg
xor
dec
mov
loopne
lret
and
lret
xchg
inc
add
fnstsw
sbb
mov
cli
lret
lods
neg
push
pop
xlat
dec
inc
sub
mov
or
aad
int3
xrelease
js
pop
popa
cli
pop
out
xchg
mov
out
inc
xor
movsl
and
cwtl
adc
push
bound
sbb
sub
sbb
in
lret
mov
dec
cli
sbb
inc
mov
mov
mov
dec
inc
test
ja
cli
push
mov
popf
arpl
je
xchg
js
mov
in
jno
ficoms
or
int3
dec
leave
sbb
ljmp
aam
popw
or
stos
cs
sbb
xlat
xor
call
inc
dec
jns
jae
test
mov
mov
aam
adc
shl
pushf
cli
outsl
hlt
add
insb
jmp
pop
cmp
aaa
test
add
jno
xor
mov
jle
cmp
jbe
mov
hlt
mov
fmulp
dec
lret
xchg
stos
push
int
dec
arpl
sub
pop
test
rcrb
cld
mov
mov
fwait
mov
ja
addl
mov
sbb
jecxz
hlt
jmp
rorl
jp
or
cmp
pop
je
cmpsl
mov
add
sbb
push
mov
loope
or
mov
cmc
mov
mov
frstor
shlb
xchg
into
shlb
mov
in
jne
sub
mov
outsl
les
jno
ljmp
lret
cli
and
aam
push
cmpsb
or
test
adc
movsl
scas
mov
test
popf
ret
lds
dec
xor
loopne
lret
jno
push
add
mov
push
roll
pushf
add
sub
out
or
int
gs
in
leave
mov
dec
je
mov
jmp
mov
lea
xlat
mov
jp
sbb
inc
cmp
xchg
pop
popf
sub
out
aam
xchg
mov
mov
inc
push
xor
add
es
jae
adc
call
in
push
jno
mov
cmp
insl
dec
aas
pop
xchg
xor
lock
add
imul
fdivs
push
sbb
mov
scas
andl
int3
xchg
mov
pushl
test
push
adc
pop
pusha
add
scas
xchg
rorl
cs
inc
pop
f2xm1
xor
fistpll
xor
sahf
jg
andb
xor
scas
inc
sub
mov
or
cmp
bound
add
push
mov
jae
sub
fadd
inc
cmp
shrb
xchg
sbb
ficomps
decb
int3
loope
stos
int3
cwtl
mov
dec
test
fidivl
lods
lods
push
or
call
filds
leave
dec
movsb
sbb
pop
sbb
fdivrl
in
add
ss
ds
loopne
lahf
out
enter
dec
sti
int3
add
rcrb
sub
in
dec
movsl
sar
dec
mov
aas
pop
xor
mov
sbb
scas
sti
push
pusha
inc
push
es
xor
int3
loop
mov
jge
lods
xchg
scas
dec
andl
push
out
mov
sub
pop
dec
ljmp
loopne
fcmovnbe
test
movl
xchg
add
add
inc
mov
adc
inc
shl
cwtl
dec
jae
mov
rcr
in
push
cltd
fisubl
sub
shlb
es
inc
and
sbb
shlb
ljmp
xor
pop
shrb
or
xor
xchg
popf
js
xor
data16
lret
nop
pop
mov
sarb
xchg
push
rorb
pop
jb
mov
xor
pop
aaa
in
out
and
push
test
cwtl
or
outsl
pushf
shll
nop
inc
adc
bound
mov
lret
adc
sbb
fisttpll
jns
mov
pop
mov
xor
add
push
xchg
nop
cltd
inc
in
sahf
lcall
and
mov
inc
jo
notl
or
mov
sbb
fisubrs
lea
jp
mov
pop
fsubrl
xchg
xchg
insl
mov
lock
xchg
outsl
push
fwait
cld
popa
es
push
or
mov
cmpsb
sbb
stos
cli
out
mov
aaa
adcl
scas
popf
enter
pop
insl
fs
fstpl
test
add
negb
xchg
lret
cltd
dec
mov
cwtl
test
rolb
dec
lds
cmc
jmp
adc
cmp
sti
jbe
test
dec
pop
mov
sti
ds
mov
loopne
adc
jne
rclb
ss
movaps
push
iret
arpl
sub
sar
lock
jge
jmp
imul
add
test
sbb
roll
out
dec
inc
xor
loop
sub
imul
mov
cmpsl
mov
out
call
imul
test
test
sbb
std
push
clc
or
jmp
push
jae
aaa
sub
cli
cmp
cltd
sub
pop
fsub
dec
mov
cli
push
jge
cmp
or
inc
in
mov
sarb
dec
mov
jle
lods
insb
mov
das
mov
ja,pt
jo
mov
test
fwait
cmp
xor
push
or
sub
cmp
into
sub
pop
sub
frstor
jb
bound
xchg
aaa
push
xorb
inc
sbb
jae
cmp
pop
jge
stos
scas
add
lea
fistl
add
call
mov
scas
jne
add
cmp
jmp
pusha
frstor
pop
add
lods
xchg
push
push
ss
pop
or
cwtl
xchg
or
sbb
mov
test
rcrl
mov
aam
stos
jno
pop
popf
lea
mov
fiadds
and
jecxz
out
jb
repz
out
xor
inc
jmp
xor
sahf
nop
and
cmp
stos
ja
mov
jno
aas
dec
mov
jp
inc
xchg
jp
lcall
shrb
das
adc
or
xchg
xchg
sub
cmp
push
sbb
imul
add
call
lcall
sub
jne
cmp
or
add
in
dec
andl
loop
mov
shll
mov
inc
dec
xor
mov
popa
pop
push
test
fstl
aam
push
push
push
mov
or
inc
cmp
aad
sti
test
add
cmpsb
lods
sub
fs
iret
int3
iret
push
repz
stc
push
das
mov
mov
sti
rorl
int3
push
jle
pop
in
jp
clc
ror
fdivrl
cli
ret
sbb
adc
repz
adc
js
mov
mov
mov
mov
lock
adc
jae
jl
pushf
pop
ret
push
jb
add
and
or
out
fnstsw
fadds
xor
adc
or
or
loop
jo
int3
cmp
call
push
mov
sbb
lret
repz
sub
inc
mov
loope
adc
pop
push
repnz
cmp
jno
pop
sub
lea
pop
or
and
aad
cmc
push
xrelease
in
movsl
mov
es
outsb
adc
sbb
sbb
inc
push
xchg
lods
cmp
movsl
and
inc
sbb
add
fs
icebp
in
sub
std
ljmp
mov
movsb
cmp
and
push
xchg
lahf
ljmp
enter
ffreep
fs
and
inc
sbb
sub
mov
jb
out
insl
mov
loope
sub
lcall
mov
mov
gs
jge
jns
pusha
mov
das
sbb
jb
jno
fsts
js
shrb
out
push
fmulp
mov
nop
cs
lret
cli
sub
aam
enter
pop
pusha
int
push
or
add
out
fadds
jne
or
inc
inc
xchg
sbb
icebp
mov
add
cs
aam
dec
imul
xlat
lcall
daa
cmc
pop
dec
shl
enter
mov
lret
jbe
aas
fwait
mov
add
jle
hlt
std
pop
cli
ret
xchg
add
insl
mov
sbb
jo
lods
cmpsl
push
das
loope
push
jbe
test
addr16
cltd
insb
mov
xchg
or
cld
scas
das
aam
dec
das
sub
xchg
mov
iret
mov
sbb
add
adc
mov
adc
rcr
cmp
mov
inc
and
jns
or
cmc
mov
call
inc
popa
pop
xor
add
adcl
orb
inc
jge
out
xchg
pusha
lock
pop
adcl
out
mov
pop
or
ds
jns
repnz
testb
shl
adc
push
int
icebp
adc
fcmovnbe
mov
dec
xchg
add
fmul
pop
sbb
add
sub
or
ljmp
cmp
in
and
cmp
rol
js
jne
sbb
cmp
mov
sbb
xchg
jne
dec
dec
mov
adc
mov
mov
nop
mov
mov
and
test
outsl
out
xlat
lahf
insl
mov
lea
mov
or
cmp
ror
xchg
les
adc
movsl
push
fstpt
clc
mov
mov
lsl
mov
outsl
and
into
call
test
cs
mov
lods
outsb
icebp
dec
mov
pop
mov
das
mov
jg
pop
xchg
out
ret
stos
es
sbb
hlt
mov
into
dec
sub
cmp
push
inc
fisubs
inc
jp
mov
test
adc
outsl
es
rcrl
inc
loope
cmpsl
sub
in
insb
ss
insb
xchg
cmp
int3
dec
inc
xor
jo
out
or
xchg
leave
div
outsl
and
mov
mov
cltd
ret
out
xchg
push
cli
mov
jbe
mov
dec
or
jns
dec
fcomip
inc
mov
sub
mov
out
and
repnz
dec
imul
lock
popaw
enter
shlb
jle
inc
cmp
in
adc
xchg
adc
rep
scas
je
imul
aaa
insl
fcoms
push
insl
xchg
mov
lods
movsl
jb
dec
popf
xchg
adc
pop
bound
pop
into
fistps
jbe
cmp
cmp
js
or
mov
sub
and
pop
jmp
push
push
mov
scas
xchg
lock
push
jmp
xchg
mov
xor
lods
xchg
aam
cmpsl
inc
xchg
aam
and
into
aas
mov
dec
cmc
loope
fiaddl
mov
fmul
jg
out
roll
ficomps
mov
icebp
lahf
fmull
xrelease
addr16
mov
mov
inc
fimuls
push
xchg
cs
sub
sub
iret
movsb
dec
jb
fisttpll
pop
sub
sbb
dec
repnz
ss
addr16
push
scas
bound
int
inc
mov
jnp
je
pusha
js
ds
xor
mov
push
lods
nop
jne
sbb
clc
int3
filds
sbb
push
stos
fdivp
subb
mov
mov
adc
xor
iret
xor
rcrl
movb
shl
les
pop
xor
mov
repnz
bound
mov
sbb
outsw
mov
mov
in
push
adc
cmp
inc
in
sub
mov
inc
jecxz
jecxz
popl
xor
jae
movsl
ficoml
in
jo
sbb
jno
repnz
lret
and
insb
cli
clc
aas
mov
inc
dec
add
jge
test
fisubl
sbb
out
mov
dec
fsubl
mov
xchg
xchg
mov
inc
sbb
push
cmp
cs
cmp
leave
movsb
outsl
cmp
loope
jo
mov
xor
sbb
mov
push
pop
bnd
push
xchg
fildl
jge
incl
lds
push
pop
fildll
out
inc
add
cmp
or
add
shll
adcl
pop
push
cmp
loop
scas
popf
ja
mov
jno
out
dec
inc
leave
cmp
or
sbb
call
hlt
sbb
mov
bound
push
out
leave
add
push
fldln2
leave
lcall
jo
adcl
mov
into
mov
movsl
inc
in
mov
fldt
ret
addb
jnp
pop
push
pop
mov
or
mov
adc
fisubs
aaa
fisttpl
sbb
fidivrs
out
mov
cmp
dec
mov
cmp
jmp
xlat
dec
lods
sti
push
add
sahf
gs
in
mov
xchg
arpl
add
cmc
dec
xchg
js
xchg
xchg
mov
or
mov
fsubrs
and
inc
mov
popf
xchg
adc
lahf
shlb
cmp
mov
or
mov
into
dec
das
inc
out
cli
in
jl
loop
jge
sbb
fstpl
ljmp
cltd
lret
dec
add
xchg
and
sub
inc
cltd
sub
repnz
and
cmp
cwtl
hlt
clc
filds
sub
adc
fdivrl
cmp
cltd
push
mov
sub
jo
lock
xchg
and
idivl
mov
jle
push
clc
push
inc
push
cmp
push
jb
sarb
jg
mov
add
jecxz
xchg
xchg
test
fadds
das
das
scas
or
and
pop
mov
mov
mov
or
loop
movsb
xchg
test
inc
repnz
xor
in
mov
lods
sub
add
dec
jno
inc
sbb
mull
into
es
fwait
call
lret
or
stos
movsl
outsl
mov
test
sbb
cmc
push
jmp
mov
sub
jae
cli
xor
rorl
mov
data16
stc
pop
sub
jmp
or
std
xor
xor
xchg
rcrl
dec
aad
and
les
decl
sahf
cltd
and
test
sbb
mov
sub
sbb
int
enter
ret
mov
sbb
popa
adc
repz
pop
jmp
mov
mov
popa
adc
aad
imul
leave
mov
mov
popa
xchg
lds
sahf
out
mov
lods
leave
js
add
jbe
in
in
mov
call
mov
add
rcr
dec
inc
jmp
dec
dec
imul
loopne
rdtsc
jle
es
mov
jne
out
jp
ds
aas
in
int3
push
aad
fs
mov
and
popf
lahf
xchg
fs
cli
into
cmpsl
push
adc
daa
ret
sub
imul
sbb
sub
rcl
sbb
inc
cmp
xor
sbb
and
sub
adc
call
lret
jmp
mov
mov
daa
dec
mov
or
sub
add
int
aam
mov
test
mov
repz
xlat
ret
push
adc
iret
out
lods
divl
test
fwait
cwtl
sub
loop
jecxz
xchg
call
dec
popf
scas
fsubrl
jae
xchg
fstl
gs
inc
mov
adc
mov
std
dec
int
leave
in
aam
rcll
mov
repz
and
iret
rcll
aas
cmp
ja
add
adc
loope
mov
aas
das
sub
ficoms
sub
in
test
jle
mov
rclb
lret
ret
jecxz
xor
bound
sub
jg
cmp
add
sbb
fidivrs
mov
push
cmp
movsl
fwait
lahf
mov
xchg
push
pop
ror
jnp
test
ja
sub
pop
lret
sub
lahf
outsb
cmpsb
jl
push
dec
mov
adc
push
xor
dec
dec
cli
out
jae
mov
mov
mov
cltd
jmp
imul
pop
fildll
mov
adc
subb
jmp
outsb
jl
mov
outsb
call
jg
imul
mov
dec
sahf
cmp
in
push
xchg
insb
dec
push
outsl
or
aam
pop
inc
push
cmc
in
mov
mov
dec
cltd
jo
mov
out
push
sub
js
pop
or
add
sub
xchg
dec
mov
xchg
adc
sub
lcall
mov
pop
sbb
or
stos
pop
cmp
and
int3
sub
pop
iret
repnz
lods
into
pusha
fstl
pop
sbbl
mov
push
aam
mov
dec
jno
sub
cmpsl
mov
pop
pop
shl
inc
fisttps
movl
push
dec
dec
scas
mov
or
fs
fsub
popa
sbb
imul
dec
out
push
movsb
push
mov
xor
les
aas
inc
mov
xor
mov
sti
sbb
pop
test
and
inc
mov
repnz
xor
mov
mov
sbb
fcoms
sub
mov
xchg
cmp
or
dec
insb
ss
xchg
clc
push
shl
mov
pop
sub
stos
jae
mov
xchg
xchg
adc
in
adc
add
stos
fdivs
xor
fwait
shl
cmp
into
popf
sub
mov
or
pusha
sub
inc
shll
mov
fildll
ficoml
dec
push
push
cmpsb
ja
add
addb
popa
xchg
pop
xchg
mov
cmp
out
or
pop
mov
outsb
or
mov
ret
sahf
cmp
add
mov
cs
push
adc
mov
int
cwtl
adc
imulb
les
sarl
call
insl
gs
sub
xchg
xchg
mov
lds
ficomps
insb
dec
ljmp
inc
adc
jmp
mov
jns
dec
lock
push
sub
addr16
xor
insl
scas
fadds
pop
xor
and
add
and
scas
ljmp
mov
ret
cmc
cmp
jne
pop
fucom
nop
stos
adc
xchg
loope
pushf
mov
cmp
outsl
stc
in
out
jns
rorl
mov
lods
or
xchg
xorl
lods
and
pop
sub
jg
movsl
adc
and
adc
sarb
pop
out
xchg
in
insl
add
ss
dec
stos
std
adc
ljmp
mov
aas
and
jecxz
mov
in
pushf
in
add
lods
out
cmp
push
hlt
not
jne
sbb
out
cld
push
xor
inc
movsl
aad
sub
int3
jg
jae
jno
out
into
push
push
insl
arpl
jmp
in
sub
sub
lods
mov
pop
xor
sub
dec
imul
pop
xor
push
jmp
jae
cmp
and
xchg
leave
rclb
ds
je
cltd
dec
ljmp
jnp
and
pop
rolb
jl
out
xchg
jns
xor
sub
push
xor
and
ja
jmp
inc
mov
and
mov
jnp
or
mov
sti
or
cmpsl
cmp
pop
movsb
or
notl
jmp
inc
ds
lea
int3
add
scas
dec
xor
pcmpeqw
pushf
mov
sub
and
and
divb
push
movsl
mov
cs
in
push
jns
sar
call
xor
mov
pushf
jg
pop
setnp
roll
pushf
js
mov
xchg
test
inc
repnz
mov
jno
sbb
aas
pop
out
scas
cli
xchg
cs
pop
mov
pop
je
stos
inc
mov
call
cli
out
jg
int
push
push
add
jmp
cltd
call
leave
and
cmp
jnp
in
jmp
dec
call
and
mov
mov
int3
scas
cs
cli
xor
inc
sub
xchg
pop
dec
aaa
sbb
and
xchg
js
add
jno
bnd
mov
out
jg
push
jo
ret
aaa
mov
mov
ja
mov
outsb
dec
sbb
lret
faddl
push
movsb
fimull
jo
clc
enter
push
or
insb
pop
inc
addr16
sbb
imul
mov
mov
cmpsl
test
jmp
mov
lock
outsb
jne
jecxz
data16
add
xlat
pop
andl
push
lods
dec
and
stos
mov
adc
fiaddl
adc
dec
rolb
dec
cwtl
push
mov
sub
pop
testb
cmc
icebp
mov
cmp
nop
mov
sub
jg,pt
fsubrs
dec
test
lcall
addb
inc
outsl
mov
push
in
mov
aad
icebp
pop
mov
dec
test
xchg
cmp
dec
nop
popf
xchg
pop
add
popf
jge
add
daa
xchg
sti
out
mov
dec
and
stc
shll
dec
cmp
mov
cmp
das
mov
int
lret
je
cmpsb
lea
or
lret
push
mov
add
and
incl
inc
lret
push
fmuls
pop
add
lahf
xchg
xlat
add
cwtl
mov
test
dec
jb
add
fcmovnu
mov
icebp
addb
adc
int3
rcrl
adc
ffreep
jmp
add
addr16
ja
add
je
mov
jb
aam
ret
test
xchg
sahf
aas
ret
popf
stos
repnz
and
outsl
mov
fisubl
sbb
pop
sbb
nop
out
negb
imul
sti
or
roll
cmpsb
mov
and
in
lock
pop
mov
push
mov
jo
jmp
imulb
fdivl
add
pop
sub
lods
mov
pop
ret
xor
mov
xorl
mov
movsl
adc
and
pop
dec
pop
repnz
add
adc
dec
jb
aad
cmp
pop
loop
rolb
inc
or
or
cli
ret
sub
iret
or
out
sbb
fwait
lea
and
add
adc
mov
sbb
xchg
inc
sub
xchg
jecxz
scas
clc
xchg
shlb
loope
xor
adc
adc
or
mov
inc
push
dec
or
leave
dec
mov
mov
mov
test
in
ja
sub
add
mov
sbbb
jp
repz
arpl
and
cmp
es
cmc
cwtl
push
add
cmp
jp
test
mov
lods
iret
jg
in
std
testl
sub
and
mov
and
insb
mov
loopne
dec
stos
inc
adc
cmp
fwait
jne
fbstp
fisubrl
mov
sti
or
inc
pusha
sub
cmpsl
xchg
hlt
andb
dec
daa
xor
leave
int
xchg
lret
arpl
sbb
or
mov
dec
jp
pop
stos
add
ret
adc
xlat
leave
jae
test
push
lea
nop
mov
pop
pop
insl
nop
mov
shlb
subb
push
aas
insl
enter
arpl
jp
sub
adc
hlt
js
add
add
jp
jnp
adc
pop
subb
loope
cmp
xor
mov
jmp
dec
andl
roll
pop
pop
inc
lock
ret
jge
xchg
xor
repz
xor
repnz
lock
push
pop
clc
add
sahf
xchg
movsl
sub
mov
mov
cmp
pop
pop
mov
and
dec
jg
and
je
xorl
xor
negl
jg
je
or
mov
popf
seta
and
icebp
lret
pusha
jbe
adc
jns
orb
jge
jb
mov
and
sbb
sbb
push
sbb
je
dec
inc
ds
enter
loop
addr16
push
ja
jae
jmp
xchg
cmp
test
dec
call
mov
out
enter
sysexit
shrl
ret
rcrl
and
pop
adcb
mov
insb
xor
andl
dec
in
pop
popa
mulb
or
sbb
rorl
mov
pop
shl
inc
stos
or
iret
andl
je
cltd
shlb
movsl
into
adc
aam
in
orl
cmpsb
jns
sub
mov
cmpsl
test
pop
xor
inc
push
lret
sub
mov
push
cmp
inc
fists
sub
sbb
scas
movsl
nop
in
xlat
loope
xchg
push
imul
pushf
pop
pop
subb
test
ret
add
add
xchg
repz
push
nop
fildll
pop
out
iret
xor
ror
jl
adc
cmpsl
rorl
and
pop
mov
xchg
ror
aad
cmp
fnstsw
inc
addl
decl
in
imul
lcall
shlb
aas
xchg
ret
mov
in
ret
pop
xor
pusha
into
add
dec
sarl
mov
lea
mov
cmp
addr16
loop
scas
mov
out
fstpt
scas
push
sbb
int3
mov
fwait
xchg
pop
bnd
sahf
xlat
xchg
je
ja
mov
xchg
idivl
push
xchg
pop
xor
or
mov
addr16
inc
sbb
scas
std
mov
mov
lds
lret
cmp
imul
pop
loope
shll
repnz
hlt
push
mov
mov
xchg
ret
sbb
fbld
popf
jbe
lcall
outsl
stos
mov
jge
in
dec
mov
push
add
fldcw
insb
xor
sbb
shlb
xchg
sarb
dec
mov
mov
mov
cs
pop
cmp
mov
push
push
movsl
xlat
dec
aas
arpl
imull
and
fdiv
mov
mov
and
sub
cmpb
adc
cmp
add
jle
aam
mov
sbb
cmp
cwtl
push
lods
push
xchg
fidivrl
aas
mov
mov
andb
std
das
cmpsl
loope
inc
add
mov
mov
scas
push
or
jns
lea
stc
je
clc
hlt
push
pop
mov
mov
outsl
mov
pop
xor
imul
dec
add
inc
jmp
sahf
rorb
jae
dec
adc
ss
stos
in
pop
or
lods
adc
inc
add
mov
jo
fwait
jbe
dec
dec
push
adc
or
outsb
std
mov
cltd
stos
loop
cld
gs
mov
add
jnp
xchg
dec
jo
test
push
adc
loope
mov
mov
or
aas
inc
int3
mov
out
xor
ja
and
lret
sub
inc
or
loope
ja
or
int3
cmp
outsb
repz
inc
in
ret
inc
inc
cli
out
jp
or
icebp
les
and
add
enter
fdivrl
xchg
jno
mov
stos
call
mov
sub
add
pop
jb
je
test
mov
adc
loope
jmp
clc
std
and
mov
shlb
push
aad
and
in
dec
scas
test
clc
jmp
pusha
adc
push
mov
movsl
inc
in
mov
lea
sub
pushf
mov
cli
pop
push
cmc
xor
push
lcall
call
xor
pop
mov
es
add
out
lds
cmp
ja
data16
std
fwait
inc
cs
pop
aad
fs
addb
mov
cld
repnz
jle
jb
ss
lds
imul
popf
inc
dec
mov
lock
rorb
aam
js
cmpsl
sar
test
sub
fidivrs
test
nop
clc
push
dec
sbb
cmp
popl
hlt
in
pop
mov
cli
sub
mov
shrl
dec
pop
cld
hlt
test
cmp
imul
loope
cltd
pop
xor
fadds
ret
cld
mov
mov
or
shll
xlat
dec
cs
and
rcr
jne
push
jmp
imul
sbb
or
nop
add
insb
cmp
xchg
mov
fcmovbe
xchg
loop
push
cmpsl
lret
ljmp
mov
sti
sub
push
mov
pop
cwtl
dec
test
and
cmp
jae
aam
cs
js
orl
jge
mov
lock
mov
scas
xor
mov
push
mov
insb
inc
sarl
test
push
mov
push
mov
out
cld
jae
xchg
lock
out
adc
jg
jbe
inc
add
lea
mov
or
lret
test
mov
dec
sbb
adc
adc
adc
dec
andl
add
cmc
aad
fldl
ud2
test
test
sbb
andl
and
jb
les
pop
lods
cltd
inc
cltd
jl
jae
sub
xor
xchg
dec
jg
outsl
push
mov
inc
test
push
add
ds
movsl
lock
mov
pushw
mov
mov
pop
dec
mov
cmpsl
pop
mov
cltd
cltd
cld
lods
cmpsb
insl
ljmp
stos
dec
add
push
fs
mov
xlat
mull
inc
cwtl
loopne
dec
xchg
lret
adc
xchg
cmp
mov
mov
push
int
test
sub
repnz
sbb
or
mov
aam
std
incb
lahf
and
pop
add
lahf
mov
pop
in
call
dec
or
push
popa
sub
push
repnz
mov
aas
mov
or
and
push
pop
inc
pushf
hlt
in
or
insb
jns
into
aad
stos
aas
addl
pop
outsb
mov
push
sti
push
call
addr16
cwtl
mov
jb
ja
ret
in
aas
es
pop
into
push
cmpsb
and
sub
xor
sbb
dec
push
add
cmc
mov
jb
mull
push
pop
lods
packsswb
mov
repnz
fcoms
sbb
arpl
xor
dec
sahf
push
xor
push
frstor
lods
xchg
add
jp
xor
add
push
hlt
out
movsl
and
dec
jge
jge
xor
sub
push
and
jg
incl
jne
in
mov
and
lods
mov
dec
lahf
fwait
ret
pushf
fcmove
pop
cmp
jl
test
jl
fwait
push
scas
pop
mov
cli
push
pusha
sbb
loop
jo
cmp
aad
idivl
lahf
cld
pop
fstl
shl
cmp
xchg
xchg
sub
jp
inc
lods
or
subl
in
or
cmc
jnp
ja
cmpl
in
negb
add
sahf
int3
adc
pop
out
mov
das
cmp
add
cli
imull
incb
mov
test
in
sbbl
scas
and
addl
lret
scas
outsb
mov
cli
adc
cvtdq2ps
clc
bound
bnd
aas
cmp
dec
push
je
fs
mov
pushf
cld
lahf
pop
stc
xor
jo
divps
js
ret
cmp
enter
xchg
add
and
das
nop
rcll
pop
insl
add
push
and
adc
sahf
inc
sar
jmp
jns
test
inc
stos
push
pop
mov
push
rcr
xchg
mov
pop
mov
enter
mov
dec
jecxz
ss
pop
loop
in
aam
outsb
mov
and
sarl
jb
xchg
jbe
imul
cmp
xor
or
mov
mov
or
out
pop
inc
xchg
loope
loopne
repnz
inc
stc
cmp
dec
adc
mov
cmp
adcb
inc
dec
adc
adc
sub
push
lock
push
mov
iret
int3
stc
push
pop
sub
fwait
adc
test
leave
sub
mov
xchg
outsl
mov
jmp
push
outsl
in
ja
loopne
aaa
pxor
out
scas
in
int3
lods
inc
inc
adc
sbb
fisubl
lcall
lods
or
icebp
gs
aam
inc
jge
test
and
test
sub
sbb
push
and
gs
dec
xor
arpl
xchg
cli
mov
movsl
lret
call
insb
les
jo
adc
nop
xchg
lods
addb
sahf
movsb
loopne
jae
mov
mov
dec
cmpsb
ret
xchg
jae
cli
push
bnd
test
xorl
pusha
mov
jbe
clc
test
sub
sub
test
data16
xor
int
loop
or
adc
rcll
push
repnz
xor
fcoml
pop
sbb
xchg
js
cmp
mov
in
cmpsl
jae
jp
out
pop
ja
cmp
push
pop
ss
rclb
sbb
mov
xor
jb
nop
mov
repz
lock
xor
xor
xchg
xchg
xchg
loopne
jmp
dec
sbb
push
lea
push
xchg
add
ljmp
jmp
push
cmp
clc
ljmp
add
popa
xchg
jae
stos
iret
cmp
stos
mov
and
pop
shlb
lret
fprem
adc
nop
inc
data16
cld
pop
pop
jl
pop
sbb
cmpsb
or
andps
jmp
insl
ss
out
cmp
mov
shlb
cmpsb
xchg
andb
movsb
hlt
push
fnstcw
sbbb
dec
lret
mov
arpl
adc
jge
aas
fdivs
imul
dec
stc
ss
cmp
je
fistps
sbb
insl
push
mov
pop
loop
nop
jno
repnz
and
mov
sarl
test
int
dec
or
sbb
mov
xchg
rorb
test
dec
jne
jmp
or
jmp
sub
xchg
push
icebp
mov
mov
mov
jecxz
jns
idivl
test
daa
orl
sbb
push
lea
add
dec
pop
adc
jne
push
adcl
cmc
repnz
pop
lret
stos
dec
shll
rcr
pop
lods
ret
xor
dec
mov
scas
enter
ja
xor
mov
jo
mov
insl
pop
push
xchg
mov
cmp
jmp
push
xchg
dec
xlat
adc
movsb
sub
test
movsl
xchg
jns
lahf
or
sbb
inc
or
mov
popf
cmp
xor
sbb
scas
ss
mov
jae
ja
in
xor
jecxz
xchg
pop
dec
pand
fs
jmp
test
adc
mov
std
pcmpgtb
sbb
add
mov
jnp
sbb
in
or
dec
push
sub
xchg
enter
outsb
push
push
jp
fildll
cltd
mov
test
mov
inc
ss
inc
stos
xchg
lock
imul
lods
push
inc
out
mov
cmp
sbb
xlat
inc
ljmp
lahf
lods
adc
mov
imul
push
inc
call
bound
xchg
xor
push
sbb
enter
test
imul
mov
xchg
mov
pop
cli
loope
jge
flds
and
sub
add
mov
int3
xchg
shl
outsl
push
xor
ret
or
mov
mov
jmp
fwait
jmp
dec
aaa
and
cwtl
jge
aaa
mov
leave
xor
fcoml
sub
dec
in
out
lods
sub
fidivs
pop
int
mov
pusha
mov
pop
push
into
sbb
pop
sub
mov
jle
out
insb
test
js
mov
and
push
fmull
dec
iret
pop
stos
xor
test
cmp
xor
mov
ja
outsl
sub
pop
mulb
adc
push
bound
jl
dec
stos
testb
data16
int3
inc
jns
jbe
or
insl
scas
std
fucomip
ficoms
nopl
sub
mov
mov
sbb
ja
jns
icebp
cmp
in
jne
aad
jecxz
xchg
push
repnz
scas
xchg
sbb
or
jg
xor
call
pop
adc
nop
gs
mov
add
out
dec
cvtps2pi
cmpb
mov
pop
iret
pop
lds
loop
cmp
cltd
push
inc
test
dec
cs
enter
mov
sbb
mov
add
and
add
cmp
xchg
nop
js
hlt
mov
fldenv
xor
enter
fwait
push
xlat
aam
nop
mov
ret
add
inc
pop
adc
stos
mov
mov
xlat
lods
lcall
cmp
adc
lods
cmp
shrb
dec
stc
cld
mov
scas
std
xchg
push
hlt
cmp
ret
mov
fcoms
jp
and
shl
jne
mov
hlt
xchg
lret
dec
pop
mov
or
faddl
xchg
pop
inc
fistpll
cld
xchg
lock
mov
or
jp
add
jbe
fisttps
push
inc
outsl
aad
lcall
addr16
fdivs
int3
je
ficompl
push
fistpll
mov
sub
xor
cmp
push
mov
stc
loop
inc
lea
xchg
fstpl
adc
cmp
xchg
dec
imul
xchg
cmp
stc
xor
xchg
int3
adc
aam
jns
xchg
or
jp
mov
sub
out
icebp
mov
aam
mov
fistpl
xor
outsb
lock
xor
add
pop
and
sbb
push
add
cmp
xor
in
cmpsl
ja
mov
cmp
lods
pop
fs
xor
push
test
add
xchg
fwait
dec
stc
cwtl
sub
fidivl
xlat
cmp
cmc
ja
pop
rcr
sahf
dec
xchg
jle
fcompl
xchg
mov
es
xor
sbb
sub
mov
cld
movsb
in
mov
lret
push
popa
xchg
inc
insl
xchg
push
dec
adc
adc
daa
das
lock
loopne
ss
ds
add
pop
lret
cli
stos
cmp
sub
flds
aaa
out
std
and
in
aaa
sub
push
shll
lret
inc
insl
push
inc
fdivl
aam
mov
popa
push
stc
xchg
pop
adc
pushf
sbb
in
jecxz
sbb
out
movsb
mov
adc
rcl
imul
or
data16
lock
adc
imul
and
sarb
xlat
mov
cmp
push
pop
pop
test
dec
sub
dec
dec
je
lock
rolb
xchg
xchg
movl
es
add
push
fidivrs
lds
lock
pushf
dec
mov
out
adcl
out
imul
mov
mov
fs
jp
hlt
mov
jg
jl
fadds
nop
arpl
fstps
mov
mov
or
ja
and
lret
fisttpl
sub
sahf
jns
enter
jg
out
adc
inc
fs
push
outsl
ss
in
pop
gs
repz
fstpt
ljmp
mov
dec
sub
adc
or
loop
iret
js
stc
mov
aam
outsl
insl
or
pop
and
jge
or
arpl
fs
jo
mov
sub
aad
xchg
inc
in
push
pusha
sbb
outsl
inc
test
inc
inc
mov
or
je
pop
mov
sub
into
mov
cmc
jae
inc
lcall
mov
pop
icebp
pop
cmc
mov
cmp
push
fnstsw
jne
push
mov
arpl
idivl
int
adc
in
jmp
cmp
jg
lahf
and
int
imul
xor
and
fcmovne
and
xor
popa
leave
lds
loope
movsl
clc
xor
cs
or
push
sbb
out
mov
aaa
mov
inc
dec
dec
or
jl
sbb
in
stos
fdivr
or
lcall
add
xchg
sbb
es
fnstenv
push
fstl
mov
dec
xor
lea
leave
enter
aam
out
pushf
xchg
xchg
sub
ja
sbb
inc
stos
jae
outsb
repz
rol
or
pop
std
or
jbe
pop
mov
fmull
add
mov
jno
inc
push
dec
stos
in
sub
push
cwtl
lods
or
sbb
mov
xchg
mov
xor
add
dec
fdivr
push
fs
sub
sarl
push
pop
or
cmc
lahf
sub
xor
cmp
scas
push
leave
mov
cmp
lods
clc
push
jl
arpl
nop
mov
sbb
lret
sub
aam
cmpsl
ret
sub
or
jb
ror
pop
inc
test
lret
add
mov
lea
add
orb
pop
cli
cs
lret
pop
mov
enter
add
push
je
loopne
push
or
ror
out
and
xor
sahf
sub
imul
insl
es
jl
inc
push
or
inc
fmulp
rclb
movsl
stos
add
repz
pop
jecxz
jl
lret
adc
fxch
mov
test
pop
test
into
ret
inc
imul
std
add
clc
add
adc
push
jnp
push
or
ret
sub
test
mov
stos
pop
aaa
cmpsb
xchg
sub
adc
mov
and
inc
sbb
scas
sbb
ret
cmpsb
sub
mov
mov
push
mov
leave
dec
jns
filds
shlb
ljmp
adc
sbb
sub
shl
push
mov
outsb
pop
or
aam
push
inc
fs
dec
scas
loopne
popa
notb
push
xchg
sbb
pop
scas
sbb
pop
adc
sbb
pop
pop
cltd
sbb
scas
dec
hlt
jbe
das
repnz
mov
mov
mov
stc
in
push
push
mov
jno
pop
les
mov
push
leave
movsb
in
mov
loopne
and
test
and
inc
mov
xchg
xchg
xchg
push
ss
fwait
test
divb
mov
pushf
jno
mov
inc
test
pop
or
repnz
push
jae
loope
mov
dec
test
pop
cbtw
push
into
pushf
fyl2x
in
or
imul
cmp
dec
mov
cmp
stos
and
fisttpll
or
and
push
lock
pop
add
dec
mov
sub
rolb
or
ret
adc
fisttps
daa
ja
jp
in
xor
mov
daa
mov
loopne
in
add
aaa
pop
roll
adc
pop
adc
sub
xor
lds
adc
sbb
imul
pop
or
adc
inc
cmp
add
dec
ss
cmp
sbb
popa
xchg
jmp
mov
add
ret
leave
imul
push
out
mov
loop
push
call
push
js
xor
movsl
fwait
call
or
xor
jecxz
mov
popf
jns
test
inc
aam
inc
out
dec
xor
inc
cmp
or
ja
dec
push
call
bound
dec
aam
jb
mov
pop
sub
popf
cmc
fwait
adc
xlat
in
push
rcr
fldcw
fwait
shll
sbb
jo
arpl
xchg
mov
insb
jne
rolb
jge
inc
xchg
adc
push
sub
je
add
or
push
or
cltd
repnz
adc
fwait
mov
sbb
je
add
mov
out
push
xor
mov
stos
inc
mov
ljmp
push
addl
sbb
add
rolb
cld
and
or
or
jg
dec
inc
cmovo
cwtl
jnp
add
cwtl
dec
sbb
loop
lcall
mov
jge
xchg
ljmp
and
xor
mov
out
jcxz
mov
push
rorl
aaa
mov
pusha
inc
cmpsl
pushf
pop
sbb
in
jg
leave
repz
push
xor
daa
aad
sbb
jecxz
in
inc
xchg
xchg
aaa
stc
jae
and
sbb
in
jmp
dec
jp
aad
clc
xchg
addr16
outsb
mov
jmp
mov
movsb
movsl
test
push
rolb
les
pop
sub
iret
sbb
mov
xchg
cld
and
dec
mov
xchg
dec
popa
or
dec
sbb
xchg
fbld
push
cmpsb
mov
repnz
sbb
loopne
ret
pop
je
repz
ljmp
sti
jbe
xor
mov
inc
arpl
pop
iret
add
inc
cltd
xor
mov
ret
cltd
xor
int3
pop
stos
xor
ljmp
lret
fwait
push
push
loope
je,pn
jb
lret
mov
jno
mov
test
sbb
enter
lret
loop
scas
pop
cltd
or
data16
inc
insl
imul
into
dec
xchg
sub
aaa
inc
mov
out
gs
dec
push
jns
xchg
dec
mov
inc
outsb
dec
mov
je
in
nop
pop
ljmp
cwtl
insl
adc
aas
mov
jmp
dec
jo
push
sti
add
mov
add
fcoml
mov
test
jnp
cmp
mov
sbb
and
dec
addb
pop
lret
mov
mov
out
outsl
adc
sahf
inc
out
fimuls
idiv
dec
cld
inc
outsl
int3
mov
push
xlat
test
mov
dec
sahf
cmpsb
ss
outsl
sub
mov
adc
ret
cld
fwait
aad
pop
push
js,pt
dec
fdivrs
push
cmpsb
pop
sbb
or
test
mov
pop
out
popa
stc
decl
popa
repz
xchg
dec
negl
jmp
movsl
int
sub
pop
pop
pusha
sbb
push
push
jns
push
aad
xor
adc
out
sarb
add
or
add
cld
inc
int
xlat
xor
cmpsb
loopne
mov
loop
jp
mov
cmp
fadds
testl
jb
loop
lahf
ja
call
lcall
fdivrl
inc
jb
push
cmpl
aam
repz
xchg
sbb
jbe
sarl
iret
test
aam
xchg
in
ret
test
add
cld
lret
mov
lods
int
mov
pop
dec
lods
mov
ficoms
hlt
mul
rclb
sbb
testb
or
add
rol
and
mov
xor
std
cmpsl
pop
and
add
mov
mov
icebp
fdivrs
and
jne
neg
stc
push
das
es
and
imull
xchg
pusha
mov
fcomps
dec
in
fsubrl
jl
and
in
pop
cld
lods
mov
popa
inc
test
sub
add
dec
jp
push
adc
dec
test
lods
add
dec
mov
push
into
mov
mov
lret
add
sub
std
mulb
scas
call
jnp
sahf
push
mov
mov
pop
bound
mov
fstl
push
mov
iret
test
add
mov
sub
dec
mov
mov
outsl
lea
stos
shrl
out
rorl
rcrl
aam
and
jno
pop
in
fiaddl
data16
faddl
cmp
mov
cwtl
test
mov
inc
scas
ds
scas
es
call
sub
mov
out
dec
pop
stos
repz
and
scas
nop
testl
scas
xor
stos
aas
mov
aam
stos
lock
mov
push
pop
stos
push
movsl
shll
pop
mov
int3
push
das
es
aaa
in
mov
fwait
cmp
pop
xchg
and
sbbb
js
pop
imul
sub
mov
mov
ljmp
or
mov
add
mov
add
dec
inc
push
push
aas
pop
dec
ret
aad
cmp
push
sbb
jno
lods
or
pop
and
out
enter
push
js
mov
out
fstps
cmp
mov
shll
ljmp
jns
jg
sub
ljmp
pushf
shrl
lret
mov
pusha
hlt
pop
sbb
rorb
sbb
test
mulb
imul
gs
mov
sbb
add
neg
paddsw
shrl
push
mov
mov
cmp
fcoml
out
lea
fisubrl
stc
add
add
dec
insl
in
repnz
xchg
fadds
jmp
and
add
pop
xchg
cmpsb
dec
out
popl
sahf
dec
mov
jp
push
mov
adc
aam
sbbb
mov
xor
pop
mov
mov
sahf
add
lret
xor
fsubrs
iret
xchg
loopne
mov
xchg
jp
les
lret
adc
adc
mov
fildll
repnz
lret
aaa
push
jbe
sbb
cwtl
cmp
pushl
push
insl
out
jge
sbb
jae
xchg
xor
sbb
jae
es
ss
dec
std
mov
frstor
xchg
je
and
mov
pop
and
arpl
xchg
jb
subb
stos
lret
rcrb
dec
jecxz
and
add
aad
popa
fs
ss
fs
cmp
into
jnp
sahf
das
mov
push
ret
xchg
inc
mov
stos
xchg
test
add
jmp
fnstcw
push
sub
stos
dec
sub
mov
les
imull
add
fsin
into
adc
mov
sarl
movsl
push
and
lea
sub
lcall
mov
pop
inc
repnz
dec
dec
ss
adc
cmpsl
fadd
adc
dec
cmp
xor
or
adc
out
add
iret
test
mov
test
inc
inc
mov
pop
neg
cli
dec
or
sbb
and
jne
mov
push
dec
mov
xchg
and
push
add
sub
xor
and
jmp
insl
sbb
icebp
mov
test
jno
or
push
mov
jle
icebp
inc
incl
sub
test
add
mov
jg
push
push
push
mov
inc
mov
outsl
ljmp
fimuls
mov
xchg
pop
pop
pop
inc
jne
sub
in
inc
bound
aaa
ja
add
fyl2x
in
push
jecxz
and
mov
sub
cmc
sbb
loop
push
mov
or
dec
push
dec
sti
pushf
dec
jnp
push
and
jno,pt
or
arpl
pusha
pop
psllw
imul
icebp
mov
mov
lods
loope
jnp
lds
mov
aad
add
push
mov
jnp
aas
push
sbb
jecxz
push
lcall
arpl
push
lret
pop
push
cli
mov
mov
ret
rclb
dec
dec
xchg
xor
mov
cld
adc
jecxz
fdivl
push
sbb
repnz
jmp
pop
aas
sub
ficoml
ss
mov
lahf
stos
test
nop
xor
mov
sahf
adc
cmc
xchg
lcall
pop
add
mov
lea
int3
notb
push
and
ss
leave
adc
push
xchg
cmpsl
outsl
mov
pushf
daa
es
inc
idivb
in
push
scas
mov
fistpl
loope
mov
inc
mov
test
imul
sub
push
and
outsb
sub
mov
lret
enter
or
es
sbb
lahf
add
movsb
push
test
outsb
dec
cmp
mov
pop
sbb
jecxz
sub
pop
inc
insb
inc
and
sbb
xorb
mov
loop
stos
mov
inc
inc
mov
cld
and
push
int3
sub
xchg
popa
adc
into
xchg
call
iret
test
in
fcmovnbe
jg
add
decl
push
xchg
sub
fmull
pop
fnstsw
cltd
push
push
jbe
inc
pop
fisttpll
loop
les
js
dec
ja
xor
jo
ja
inc
sub
xor
loop
cmp
push
sahf
push
in
in
dec
sub
fstps
clc
insl
leave
push
mov
bound
pop
flds
mov
cmp
sbb
adc
sbbb
lock
pop
outsb
ja
scas
inc
add
lea
add
push
adc
shll
jp
fs
mov
xchg
inc
mov
sbbl
and
in
or
dec
scas
popf
lods
movsl
in
or
pop
sahf
dec
push
push
insl
in
mov
psrlq
xchg
lret
rcrb
xchg
sbb
sub
bound
shr
leave
int3
lret
inc
cmpsl
mov
loopne
add
and
dec
icebp
dec
mov
mov
lock
xor
dec
cltd
jbe
sub
dec
enter
cmp
mov
mov
mov
push
or
cwtl
out
loopne
mov
les
sbb
adcb
pop
adc
sbbb
cmpsl
into
pop
inc
sub
rorl
sahf
fs
cwtl
xlat
call
in
push
mov
repz
js
dec
push
mov
inc
mov
pop
icebp
cmp
adc
sti
push
inc
xor
add
inc
sub
mov
sub
pop
cld
pop
testb
daa
popa
test
pop
out
insb
loope
add
leave
fcomip
pop
push
shrb
daa
mov
jge
xor
adc
loopne
cmp
dec
adc
inc
jnp
fnclex
fsub
or
mov
pop
xchg
rorl
adc
enter
inc
sub
sbb
ljmp
cmp
aaa
shll
mov
test
mov
out
xor
mov
idiv
outsl
aaa
adc
pushf
xchg
stc
mov
loop
or
xchg
sti
dec
push
nop
and
addb
cmp
movsb
inc
push
lahf
jb,pt
jle
inc
ljmp
dec
loopne
jae
fsubs
cs
lret
pop
push
pop
out
pop
scas
lret
xchg
mov
pop
mov
push
ljmp
xor
xor
ficoms
lret
cmp
cld
push
jno
cmp
dec
xor
dec
push
inc
cmp
cld
push
mov
push
cli
push
pminsw
xchg
test
mov
xchg
shlb
es
jge
ja
inc
lea
in
orl
dec
push
jl
ret
mov
jnp
shlb
cmp
jo
mov
sub
sbb
test
mov
cltd
xor
xchg
cmp
inc
insl
xor
mov
loop
jmp
incb
aaa
mov
pusha
ret
arpl
xchg
scas
xchg
test
cmp
push
mov
xor
adc
aas
xchg
mov
call
dec
ds
xor
scas
mov
in
and
aaa
dec
sbb
push
adc
fsts
ja
icebp
pop
mov
mov
adcl
ljmp
idivb
inc
jns
xchg
lea
sub
push
cltd
push
nop
lret
arpl
push
imul
popa
int
fcmovnu
pop
loopne
dec
jo
dec
pop
dec
push
add
jns
sbb
jne
sbb
cmp
rol
jbe
outsb
push
pop
leave
xchg
jl
fld
mov
push
adc
or
xchg
daa
sbb
sub
adc
add
mov
mov
dec
sub
je
jno
iret
push
fstps
or
add
xor
ror
ret
loopne
or
add
mov
lcall
adc
sub
pushf
jo
aas
push
mov
adc
xchg
int
mov
popf
push
add
xchg
outsb
fdivr
mov
outsl
dec
xchg
incl
ds
enter
pop
insb
pop
lret
add
mov
imul
roll
mov
xchg
jns
inc
fwait
mov
stos
fcomi
subb
fcoml
mov
pop
pusha
inc
imul
xchg
push
fwait
mov
insl
pop
enter
aam
lods
sub
push
inc
sub
mov
jl
mov
sub
mov
or
bound
mov
sbb
mov
adc
or
imul
test
cmp
and
sub
cmp
push
pop
push
pop
and
inc
mov
stos
lcall
ja
add
fsin
or
shll
and
ret
out
mov
xchg
xor
mov
int3
aaa
in
adc
push
pop
jns
xchg
mov
mov
xor
fsubrp
mov
mov
add
mov
movsb
pop
push
dec
and
sahf
hlt
push
adc
imul
test
mov
jge
xchg
repnz
popa
in
push
adc
inc
mov
cmpsl
adc
imul
and
in
adc
or
sbb
adc
enter
popf
cmpsb
es
ja
or
push
inc
mov
sub
sarw
jmp
mov
mov
lahf
mov
add
sub
or
aas
movsl
pusha
xchg
stos
popf
add
scas
jnp
clc
loope
cwtl
jns
loopne
dec
leave
pop
aaa
lcall
insl
pop
popa
imul
icebp
cmp
cmp
xchg
pusha
orl
xor
loope
push
inc
add
leave
mov
sub
repz
testl
test
jb
nop
mov
lock
jge
push
xchg
xchg
jecxz
xor
sub
and
pop
out
outsb
push
mov
outsb
cmp
clc
ss
push
and
dec
cmp
scas
jle
inc
gs
inc
in
arpl
jns
ja
xchg
dec
lea
lea
xchg
bound
out
sbb
and
cmp
push
mov
fbld
mov
je
push
popf
out
jns
pop
cld
jb
rcll
jo
wbinvd
fsubl
push
mov
daa
rcrl
mov
sub
addr16
mov
ja
mov
dec
nop
sbb
cmpsl
fsubl
lret
mov
mov
gs
jo
sub
mov
rcr
out
sbb
adc
inc
setge
mulb
sbb
test
stc
jno
cmpsb
test
in
stos
sub
mov
sub
pop
popa
cmc
cmp
push
repnz
js
xchg
adcb
pop
jge
or
mov
cpuid
int3
mov
jno
or
aaa
dec
rol
and
jno
push
xor
pop
push
lea
divb
stc
ja
imul
popf
cmp
sub
test
and
mov
jne
sub
lcall
loop
fists
inc
pop
scas
sub
inc
mov
movsb
push
and
scas
lahf
jmp
push
popa
pushf
xchg
jmp
ja
push
and
mov
xorb
mov
arpl
js
fwait
mov
mov
fs
aam
or
fwait
pop
movsb
mov
push
push
xlat
mov
insl
jbe
jl
add
mov
icebp
or
bound
push
aad
dec
ljmp
insb
lock
je
out
ss
cltd
ja
push
xchg
and
fcoml
mov
fwait
xor
sub
je
jnp
xchg
xor
fs
dec
mov
ss
outsb
add
mov
jl
mov
xchg
repz
cmp
xor
and
mov
inc
lds
and
cmc
push
cmp
cltd
xlat
add
xchg
js
mov
cmp
add
iret
mov
mov
bound
loope
sub
sbb
xchg
aaa
cmpsb
inc
push
ret
dec
ljmp
movb
mov
jb
add
mov
push
mov
inc
mov
cmp
iret
sti
roll
inc
data16
cmpsb
cmpsb
lock
push
cmp
movsl
jl
push
daa
rcrb
xchg
xor
sub
xor
sbb
push
lds
ds
pop
stc
xor
pop
jbe
test
or
lods
jnp
stos
aaa
xor
test
mov
jp
dec
xchg
fs
and
and
sub
aam
fnstcw
bound
lock
sub
jbe
andb
sbb
call
into
lret
fmul
imul
aad
ja
cmp
into
xchg
negl
aaa
sub
pop
dec
add
bound
and
not
aas
mov
gs
adc
xchg
ficoms
scas
aad
jo
push
dec
pop
dec
sub
push
and
repz
push
out
call
jmp
sbb
add
and
adc
sahf
mov
fsubrl
iret
jns
dec
adc
daa
cli
imul
xchg
fstps
xchg
mov
fwait
ljmp
addr16
xchg
das
sbb
movsl
cmc
xchg
pop
in
test
inc
cmc
mov
imul
call
aam
hlt
sbb
ljmp
and
xor
int
mov
out
mov
add
push
mov
fwait
mov
inc
jl
enter
gs
lods
cs
pop
daa
pop
shrl
xchg
div
iret
sbb
fistl
pop
pop
aaa
sbb
add
jbe
mov
xchg
inc
lret
call
push
mov
xor
adc
mov
sub
pushf
das
push
push
sbb
ja
fildll
or
data16
stos
insb
xchg
std
int3
into
or
mov
aas
pop
lock
aaa
pop
test
popl
push
repz
jns
mov
inc
fbstp
es
in
aam
adc
lret
addb
cmp
andb
in
cli
mov
loop
and
xchg
ljmp
cwtl
rcll
mulb
add
xor
cwtl
sbbl
push
mov
inc
cld
out
insl
lods
sbb
adc
add
dec
ds
dec
cvtps2pd
pop
and
testl
enter
aad
mov
mov
mov
pop
xchg
out
or
push
pop
out
out
sbb
push
adc
mov
mov
push
lods
mov
cmp
pop
dec
movsb
repnz
mov
shl
lods
push
jp
lret
and
xchg
repnz
pop
xchg
sbb
iret
fwait
test
dec
push
jne
repz
or
mov
push
stos
jno
push
xchg
mov
xchg
jno
sbbl
cltd
vmovd
dec
leave
mov
xchg
pushf
insl
mov
cmpsb
in
jae
mov
jno
xchg
mov
and
mov
sarb
int3
push
xchg
out
cmpl
lcall
lahf
mov
in
or
mov
mov
xchg
aad
jl
lahf
mov
mov
neg
mov
out
pop
cwtl
inc
sub
mov
xorb
cli
jnp
sbb
add
lret
add
enter
mov
push
pop
add
repnz
mov
xchg
iret
sub
push
jg
lock
mov
test
cwtl
stos
inc
and
loope
pushf
adc
adc
adc
shl
xchg
mov
jle
bound
pop
daa
mov
lock
pop
pop
push
xor
push
add
inc
jl
pop
pusha
jecxz
scas
and
or
out
xchg
cld
jb
sub
aas
mov
xor
mov
imul
mov
lock
jb
adc
inc
pop
sub
mov
pop
dec
or
out
pop
xchg
test
xor
and
cltd
popf
jnp
outsb
xchg
stos
popl
push
fisubrs
adc
mov
sbbb
cs
push
andl
das
xor
test
iret
mov
sub
and
push
addr16
jg
in
sbb
std
repnz
mov
jp
loopne
push
pop
popf
mov
fsubs
push
aaa
mov
inc
test
imul
pop
mov
inc
add
call
pop
add
mov
dec
popf
shlb
aaa
push
or
fwait
and
xor
xchg
pop
inc
movsb
push
jg
add
call
ds
pushf
imul
jae
jl
mov
ja
push
sahf
arpl
adc
outsl
jl
xorps
or
inc
scas
aaa
mov
pop
enter
push
scas
xor
cmp
lods
sbb
adc
in
xchg
and
push
sarl
insb
insl
and
xchg
sti
and
cmp
addl
jno
xchg
jl
xchg
clc
sbb
add
mov
push
and
push
xchg
shlb
push
xchg
xchg
inc
mov
mov
mov
adc
pmullw
sti
pop
mov
xchg
jmp
adc
jb
pop
cmp
stos
mov
test
test
add
sub
test
repz
insl
cld
inc
insb
dec
divb
subps
jmp
out
cmp
dec
xchg
inc
push
ja
subl
js
into
shlb
xchg
lcall
clc
mov
out
outsl
aas
mov
les
or
pop
nop
std
ret
pop
stos
adc
adc
enter
popf
jo
stc
mov
fstl
or
sti
popf
enter
ret
dec
dec
fadds
leave
sbb
stc
sub
arpl
adc
hlt
add
int3
lds
cmpsb
mov
pop
jno
adc
mov
sub
push
mov
lret
aad
adc
add
ficomps
sbb
dec
add
mov
mov
push
sbb
test
xchg
pop
cli
and
push
out
push
mov
add
mov
add
inc
shrb
mov
push
jecxz
sub
sub
jo
push
sbb
jge
push
dec
mov
and
daa
das
sbb
pushf
cs
mov
pop
xchg
scas
add
dec
mov
sbb
cmpsb
dec
enter
fst
xchg
rclb
fwait
jp
ret
adcl
xchg
sbb
mov
add
sub
inc
inc
adc
dec
in
jge
push
pop
test
les
rcrb
mov
push
rcrl
push
push
unpcklps
sub
not
fwait
mov
xor
in
push
dec
sub
push
xchg
push
jg
fisttpll
ds
adc
pushf
mov
out
add
shrb
lds
cwtl
int
sahf
xchg
lret
addr16
cltd
fs
sub
and
cmpsb
mov
outsb
lods
gs
sahf
ret
adc
test
mov
xor
cmpsl
or
sub
int3
cmpsb
je
outsb
pusha
mov
insl
push
sub
push
hlt
pop
nop
push
adc
imul
cmpsl
adc
xchg
xor
data16
xchg
mov
insl
inc
dec
mov
fadd
mov
adc
rcrb
push
jecxz
outsl
cmpsl
or
clc
xchg
xchg
rclb
lret
mov
jne
sub
dec
addb
movsb
mov
jae
nop
sub
or
arpl
sbb
lea
std
cmp
jmp
mov
mov
lock
int
cmp
std
iret
adc
or
imull
xchg
cld
bound
cmpsb
dec
xchg
loope
js
aas
xchg
outsl
mov
push
mov
add
adc
lock
adc
inc
stos
popa
push
jnp
jle
mov
aam
adc
and
insl
cmp
xchg
add
pop
divb
dec
jne
cmp
xchg
sarb
cmpsl
push
stos
leave
push
sbb
iret
aad
aaa
out
dec
xor
mov
xchg
ljmp
push
imul
shll
shrl
add
mov
sarb
fwait
inc
iret
sarl
xor
data16
push
mov
xor
jb
aad
hlt
add
jbe
mov
movsl
mov
out
insb
add
loope
lahf
iret
inc
iret
icebp
adc
loop
xor
sub
sti
mov
fidivs
fwait
adc
xchg
lahf
and
shr
push
xor
xchg
push
cmp
shll
loopne
pushl
das
dec
scas
add
mov
cli
rcrl
xchg
test
mov
fs
fisubs
mov
mov
push
pop
sub
and
aas
sbb
mov
loopne
lahf
sbb
sub
in
jecxz
aaa
sbb
dec
outsl
dec
ljmp
aad
adc
inc
in
or
mov
xchg
je
jmp
dec
loop
in
push
outsb
out
inc
popa
cli
inc
lret
ja
shrl
inc
lret
sub
push
or
movsl
jge
in
mov
xchg
and
xchg
sub
fcoms
cmpsl
push
pop
lcall
mov
mov
sub
mov
scas
sub
scas
js
xor
sub
clc
fwait
clc
pop
add
mov
push
bound
lds
inc
orl
or
jp
leave
dec
push
push
cltd
adc
pushf
popf
pop
sub
mov
mov
mov
add
sub
nop
test
loope
adc
adc
cmp
aam
or
mov
adc
das
sub
sbb
xorb
imul
notb
cld
fnstenv
ds
mov
push
sbb
test
fcoms
aam
mov
cltd
jmp
test
adc
xor
dec
add
fmuls
mov
or
fisubl
scas
sbb
stc
dec
inc
push
addb
scas
jbe
inc
pop
jecxz
pop
fstpl
lcall
data16
cli
js
and
xor
or
mull
jmp
mov
cmp
inc
repnz
and
std
cmp
inc
mov
inc
test
arpl
push
jno
test
push
shr
cmp
mov
xor
or
xor
adc
push
data16
clc
sub
lret
fs
lret
xor
jp
cmpb
dec
jl
jae
fcompl
cmp
or
lret
roll
rcrb
push
and
xchg
in
lahf
ret
cmp
arpl
push
arpl
cmp
ret
push
aam
mov
mov
stos
inc
cld
leave
cmc
pop
ret
out
and
out
or
add
popa
inc
aam
jp
daa
fidivs
repnz
xor
loope
or
repz
mov
js
jg
mov
mov
mov
jg
sahf
mov
loop
out
fsubl
es
lds
movsb
sar
cmp
push
stc
jns
jns
loop
or
loopne
dec
imul
nop
int
xchg
das
mov
test
ret
adc
ljmp
mov
mov
scas
mov
and
adc
test
push
add
xchg
pop
mov
scas
inc
leave
dec
outsl
orb
mov
lret
jmp
data16
shrb
mov
pop
nop
movsb
and
and
mov
test
sahf
jle
fbstp
lret
arpl
sbb
add
rcr
sbb
aam
sub
lock
in
dec
pop
lret
adc
jo
mov
push
orl
jmp
test
shrb
mov
hlt
inc
iret
icebp
rcrb
sub
push
inc
jno
enter
mov
mov
or
aas
sti
and
mov
push
test
xor
pop
es
pop
ljmp
push
dec
movsb
xor
jbe
fldcw
lock
lea
sbb
out
cmp
push
scas
xchg
fmuls
cmp
in
rol
out
gs
xor
testl
orl
gs
push
movsl
das
add
sub
dec
adc
fwait
sbb
insl
pushf
push
loope
push
xor
dec
shl
lods
mov
in
pop
xchg
in
or
ret
in
and
hlt
fdivrl
mov
scas
je
fwait
sbb
push
xor
jp
sub
xor
arpl
adc
dec
cmp
xor
out
lods
out
mov
push
jecxz
out
pop
adc
hlt
leave
push
fucomip
pop
mov
scas
cmp
mov
sbb
mov
or
mov
xor
sub
push
notb
lea
inc
pusha
pop
sbb
cli
dec
iret
int3
ss
lea
sahf
outsl
fisttpll
stos
subb
pop
ret
dec
and
arpl
jecxz
ret
inc
push
in
jl
out
subl
movsb
mov
mov
fmuls
mov
pop
mov
cmpsl
xlat
mov
push
jns
icebp
push
pop
negl
add
insb
aam
adc
loop
dec
add
aam
mov
sarl
adc
mov
fisttps
pop
out
inc
mov
cltd
sub
movsl
xchg
xchg
lods
jbe
cltd
push
int3
loopne
mov
subl
mov
sbb
hlt
nop
out
mov
add
mov
mov
test
loop
xor
jb
lea
cmp
ss
pushf
in
int
cwtl
fldt
nop
pushf
fdecstp
inc
lds
adc
outsl
filds
pusha
sbb
nop
lret
lcall
add
pop
outsl
into
aad
mov
adc
sub
pop
loope
cltd
lcall
mov
fcompl
test
aaa
mov
out
aas
dec
push
jmp
fsts
std
mov
pop
and
or
inc
mov
imul
lahf
mov
xor
cmpsb
sub
dec
mov
sub
mov
push
jmp
stos
jmp
pushf
push
iret
adc
loopne
push
push
mov
movsb
xor
inc
or
icebp
daa
push
push
sub
lcall
jecxz
mov
mov
loope
push
out
push
fs
cltd
or
into
test
insb
outsl
jns
mov
lret
jmp
cmp
mov
stc
mov
xchg
xchg
sub
leave
cmp
lret
js
jo
or
xchg
or
insb
push
jl
adc
pop
and
das
jb
mov
outsb
mov
adc
divb
add
mov
ja
jg
call
inc
sbb
gs
or
lret
test
add
push
les
sub
mov
sbb
rolb
arpl
xchg
fldt
push
mov
xlat
rolb
test
fwait
push
pop
pop
mov
mov
out
test
mov
lret
sbb
xor
or
mov
inc
rcrb
fldl
jp
xor
mov
outsb
imul
pop
add
movsl
loope
enter
lods
jl
push
popf
addr16
sub
fdivl
mov
push
leave
sub
cld
fs
aas
inc
and
shll
cmc
cwtl
mov
imul
mov
fcoms
jns
xor
sub
pop
stos
and
jle
dec
mov
jl
movsb
stc
adc
mov
push
inc
mov
jge
xchg
call
push
ja
and
mulb
pop
xor
call
daa
mov
movsb
inc
and
pop
and
fwait
or
enter
outsl
cmp
pop
or
stos
cld
and
or
lret
call
jg
xchg
cmp
shld
shl
lret
push
aam
aad
dec
pop
lods
lahf
lods
jb
sub
mov
cmp
sub
movsl
pop
pushf
inc
push
outsb
push
sub
push
int
jnp
inc
xor
push
push
out
push
pop
jne
mov
sub
cld
in
testl
dec
xor
nop
sbb
mov
bound
mov
scas
xchg
xchg
push
pop
cld
outsl
jbe
sbb
out
xor
test
mov
repnz
aad
sbb
push
cli
rorl
ja
xchg
testl
sub
movsb
or
ss
test
inc
arpl
jg
mov
fabs
fisubs
int
mov
iret
imul
dec
mov
inc
xchg
pop
idiv
mov
sub
xor
inc
es
sahf
sub
pusha
add
sbb
leave
nop
jb
ret
sub
mov
xchg
or
mov
sahf
xchg
adc
pop
sbb
cmp
mov
mov
xor
mov
stc
mov
fsub
add
inc
lahf
inc
test
repnz
mov
mov
ret
and
mov
scas
insb
arpl
lds
hlt
scas
mov
in
jecxz
push
call
xchg
cmp
repnz
dec
daa
mov
arpl
cwtl
xor
mov
jne
push
out
das
sbb
lods
adc
jbe
pop
mov
push
pop
and
sub
sahf
dec
lods
pcmpeqd
mov
imul
cmp
sbb
push
inc
aas
xchg
out
out
shl
std
push
out
lcall
out
push
nop
pop
lret
and
ret
fnsetpm(287
cmp
add
push
mov
mov
lret
add
xchg
mov
mov
aad
jmp
mov
mov
add
or
add
sub
fs
int3
xor
call
inc
aaa
mov
mov
pop
add
cwtl
cmp
in
mov
or
add
std
std
lcall
jo
aad
into
fcompl
push
mov
adc
mov
orl
jmp
dec
add
pop
test
mov
das
ret
mov
inc
pusha
cmp
mov
lea
rol
and
comiss
push
addr16
or
test
inc
cmp
sbb
fs
and
lea
sub
mov
and
push
mov
repnz
mov
fsubrs
jno
lahf
fcoml
cmp
enter
dec
test
test
mov
ds
cwtl
mov
push
arpl
imul
xor
jg
pushf
lea
or
push
and
iret
shlb
add
subb
gs
jns
int
push
inc
add
jg
shrl
shlb
or
int3
pop
xor
loope
ss
es
push
add
int3
ret
mov
icebp
sti
inc
xchg
sbb
adc
icebp
mov
test
mov
int
jo
dec
fbld
fnsave
shlb
sbb
cli
cltd
incl
imul
mov
jecxz
push
mov
addl
fisubs
es
mov
icebp
add
pop
test
cmp
stos
or
mov
ljmp
inc
cwtl
push
in
xchg
test
sbb
mov
inc
dec
mov
add
mov
push
scas
lret
bound
mov
mov
xlat
mov
xchg
and
mov
jge
mov
xor
adc
ljmp
pushf
dec
jns
sbb
push
mov
in
and
les
rcll
cmp
add
mov
cltd
insb
jb
subl
test
or
dec
mov
ror
shlb
mov
cmpsb
pop
stc
cmp
shl
mov
imul
lds
out
mov
scas
add
cwtl
stos
lods
outsb
pop
add
inc
lret
das
push
pop
cld
push
sub
mov
es
jbe
sahf
sti
cs
inc
outsb
pop
push
dec
jne
add
pushf
sub
or
inc
jne
pop
mov
and
pop
xchg
cmpsl
or
dec
fbstp
inc
imul
xchg
pop
mov
pop
dec
sbb
dec
sub
jbe
cwtl
mov
pusha
or
push
pop
mov
jb
aam
pop
dec
xor
cs
nop
mov
adc
arpl
or
and
sub
nop
test
les
jno
std
xor
loope
dec
sbb
pop
adc
lahf
cmc
orl
mov
pop
and
dec
test
lea
mulb
add
adc
rolb
lret
pop
dec
loope
push
es
xchg
and
push
imul
loope
adc
inc
roll
and
mov
or
int3
lcall
lret
push
sbb
dec
lahf
dec
shl
mov
lods
sbb
push
arpl
in
jae
iret
jl
adc
stos
xor
mov
xchg
mov
dec
aaa
in
rcrb
movsl
xchg
mov
pop
cmc
dec
loop
icebp
or
dec
loopne
cwtl
push
jb
push
jge
aad
xor
ret
push
inc
ret
and
gs
out
cmp
cmc
mov
ja
test
push
outsl
call
aaa
adc
aam
push
shl
cmpsl
stos
dec
out
xchg
fmul
push
mov
cmp
and
int
movsb
inc
sub
pop
test
or
scas
xchg
dec
dec
mov
pop
xchg
loope
fsubrp
inc
loop
jmp
in
or
and
fsts
or
fdivp
in
rorb
mov
inc
push
icebp
pop
sub
fwait
repz
mov
inc
imul
push
popa
or
cmp
jns
insb
mov
cmpsb
add
repz
adc
rcr
repz
testl
cwtl
push
jge
dec
fsubl
jno
pop
push
or
enter
sbb
enter
xchg
inc
orb
cs
cli
movsl
xor
repnz
imul
push
cmp
repz
rcr
cltd
ret
sbb
int
cmpsb
xor
fld
inc
adc
popa
sahf
xchg
fs
mov
sbb
push
add
mov
idivb
fbld
outsb
jl
cltd
sbb
cmpl
jmp
jge
lods
and
add
enter
xor
stos
aam
lods
push
popw
lea
dec
lret
sub
fimull
fdivl
ljmp
mov
jnp
shll
sahf
xchg
mov
rorl
out
call
push
pop
in
call
test
mov
jg
mov
mov
gs
fsubr
inc
or
dec
dec
cltd
jp
lea
in
inc
jmp
mov
aam
push
testb
jp
add
clc
fwait
mov
loope
les
cmc
sub
cmp
rcrl
std
bound
fldz
dec
push
add
inc
hlt
inc
jbe
stc
in
test
pop
movsb
out
cwtl
and
loopne
inc
pop
shrb
test
repz
gs
decb
inc
or
mov
js
in
aam
inc
in
xchg
out
sbb
daa
mov
adc
cltd
pop
jmp
mov
inc
mov
mov
shrb
daa
lea
outsl
inc
inc
jp
xor
sub
dec
cmp
push
or
dec
lret
and
xor
inc
mov
lds
jns
or
jge
movsb
jne
sub
aaa
cmpsb
adc
inc
popf
addr16
mov
xor
or
sti
or
inc
ljmp
xlat
pop
xor
ljmp
lods
cltd
movsb
movsl
sahf
daa
pushw
cmp
cli
testl
ss
lret
cmp
lock
repnz
cli
add
sub
xor
mov
mov
cltd
std
call
int
cld
ss
mov
aam
gs
xor
aaa
call
mov
adc
insb
mov
in
mov
jp
lret
xchg
mov
add
cmpb
or
adc
fwait
add
out
ja
das
pop
pop
jle
jno
hlt
push
mov
add
and
ror
sbb
cmp
cld
mov
push
fs
movsl
inc
sarb
add
insb
mov
sti
sbb
incl
xchg
push
adc
mov
imul
xor
insb
add
jb
ljmp
sbb
fimuls
ds
pop
adc
fmul
addb
lret
inc
cwtl
cs
pop
jle
into
pop
imul
jecxz
mov
pop
xor
pusha
lds
stos
aam
out
sub
ljmp
push
or
pop
xchg
in
xchg
aam
jle
cmpsb
add
stc
push
fs
and
push
mov
dec
xchg
mov
pusha
xchg
fwait
xchg
jmp
sub
dec
xor
mov
nop
or
dec
fidivrs
test
dec
jnp
cli
mov
sbb
ss
pop
fnstsw
insl
das
add
mov
cli
aam
cmp
or
push
and
mov
cld
inc
std
int3
jo
cltd
outsb
outsl
or
inc
out
push
xchg
leave
dec
mov
int
inc
sbb
imul
jp
std
or
popa
push
and
jae
adc
shlb
into
dec
cwtl
mov
adc
jns
ds
xor
cli
mov
jne
cmc
xchg
sub
cltd
sbb
fwait
and
scas
jg
push
cli
jmp
mov
rolb
add
dec
inc
jo
add
clc
fisttpl
cmpsb
add
push
jg
mov
test
pushf
add
cmp
xchg
sub
out
scas
mov
repz
push
fistpll
leave
sub
shll
stc
mov
fwait
push
gs
pop
lea
orl
out
lahf
mov
inc
je
in
push
add
sub
push
int
gs
cmp
pop
and
push
daa
inc
push
xor
fiaddl
push
xor
outsb
jno
popa
int3
adc
mov
mov
sub
lods
adc
xchg
fidivs
lds
cmpsb
xchg
adc
sub
push
movsl
pusha
lret
jno
std
add
mov
outsl
jae
push
and
mov
je
and
inc
cmp
repz
sbb
mov
pop
xor
dec
jno
scas
mov
dec
or
xchg
mov
mov
pop
std
lea
imul
in
cmpsl
pop
inc
pop
mov
pop
mov
arpl
lahf
sbbb
cmpsb
xchg
adc
loop
jne
sahf
das
vpcmpgtw
mov
inc
xchg
ds
aaa
test
mov
adc
call
aam
jnp
pause
dec
in
repz
cmpsl
fcomi
dec
jns
xchg
aad
cmp
mov
lds
cmpl
mov
inc
xor
dec
ret
xchg
dec
adc
out
aaa
movsl
lods
fidivs
xchg
adc
sub
stos
movsb
mov
test
aad
imulb
dec
dec
mov
pop
lods
xchg
mov
test
aad
subl
or
fndisi(8087
aas
sbb
in
xchg
add
push
out
adc
pop
pop
push
scas
cmpsb
mov
pop
test
insb
lods
mov
sub
mov
push
jge
push
push
xor
stos
movsl
sub
jae
daa
rcr
sbb
sub
push
adc
mov
dec
sbb
adcl
or
dec
int3
clc
pop
sub
mov
push
cli
mov
insl
pop
sbb
or
hlt
cmp
mov
jmp
inc
cmp
inc
repnz
int
add
ret
sub
into
pushf
push
mov
int3
push
mov
fnstcw
test
imul
aas
inc
inc
je
repnz
mov
pusha
push
into
xor
sahf
mov
inc
in
sub
mov
jecxz
jnp
cmp
mov
shl
aam
mov
sub
mov
inc
ficoml
movsl
cmp
enter
mov
mov
rclb
sbb
mov
mov
leave
and
orb
cli
aam
cmc
insb
ja
dec
xorb
das
cmp
pop
xchg
nop
test
insl
pop
int
in
int3
add
sub
fdivr
xchg
fwait
ja
push
xchg
popa
add
jg
sub
fisttps
add
pavgw
imulb
les
sbb
sub
test
ss
pop
and
jmp
xchg
push
jno
mov
call
pop
jns
or
rcll
mov
insl
add
pop
mov
mov
cmpps
jnp
cmp
jge
mov
imull
pop
fsubrs
cmc
xchg
stos
movsb
shl
mov
test
data16
mov
xchg
fistl
rorl
call
cmp
push
pushf
mov
insb
aas
and
es
mov
xchg
sbb
insb
xchg
nop
aam
pusha
push
fwait
jbe
cmc
cmp
in
and
pop
sahf
lods
mov
lret
rcr
push
adc
mov
dec
mov
and
adc
in
sbb
ror
out
cli
inc
xchg
adc
loopne
mov
sub
mov
ret
dec
rcll
push
or
and
add
lret
mov
lcall
sub
loope
test
cmp
mov
xchg
jecxz
mov
ss
mov
adc
notl
or
adc
xchg
jmp
cmp
xor
arpl
mov
lods
xor
xor
test
adc
and
xchg
adc
popf
and
pop
add
pop
popa
pop
inc
test
dec
enter
scas
push
add
push
repz
into
sub
lcall
jbe
push
pop
inc
mov
je
bound
fsubl
daa
les
mov
repnz
popa
xor
xor
inc
mov
aaa
mov
mov
add
jo
fbstp
mov
cmpsw
adc
push
cmp
aaa
ficoms
pusha
lret
add
cmp
cld
adc
pop
xor
insb
mov
hlt
and
mov
dec
push
push
scas
cmp
jge
or
and
xor
cmp
sub
push
arpl
test
dec
mov
ja
push
add
stos
jl
xor
in
lock
mov
jg
int
sti
and
pop
inc
push
test
xor
scas
jne,pn
fdivrp
pop
pop
mul
je
xor
sbbl
aaa
inc
mov
das
bound
mov
jnp
sti
jp
mov
cmp
mov
jge
rorl
xchg
add
cmc
pop
mov
repz
iret
pop
mov
and
add
test
rolb
mov
loop
cmp
ljmp
pop
ret
jae
outsl
test
repnz
jbe
out
xchg
into
xchg
mov
jbe
sub
mov
addb
in
dec
jnp
and
push
not
inc
mov
jmp
xchg
xchg
sbb
pop
and
js
dec
rorb
insb
arpl
aad
cmpsb
out
mov
leave
jle
arpl
gs
xor
testb
popa
sahf
scas
mov
shll
out
sbb
or
add
mov
pop
mov
add
test
mov
outsb
ret
icebp
add
jne
xchg
aam
out
ror
cwtl
imul
pushf
rcpps
imul
rcl
add
dec
sbb
xor
fbld
mov
movsl
sbb
jnp
in
pushf
xchg
adc
into
push
vpmacssdd
fidivrl
jb
pop
ljmp
mov
test
dec
clc
aaa
adc
repnz
push
push
cmpsb
int3
jno
jp
movsl
inc
xor
push
mov
in
out
imul
cmp
enter
aad
dec
mov
add
and
mov
into
ret
xor
aam
lods
cwtl
adc
add
cmpsl
cld
sub
enter
inc
loope
imul
xchg
mov
loop
mov
int3
imul
push
cmp
inc
lods
dec
es
lea
test
or
repz
cli
push
std
mov
fdivs
cmp
xchg
mov
pop
outsl
lar
movsl
imul
sbbl
inc
dec
or
shrb
decl
push
icebp
mov
adcl
mov
add
pop
scas
mov
xchg
ret
ja
mov
adc
push
xor
clc
test
adc
repz
add
or
pop
or
imul
pop
jb
ss
clc
mov
ret
xchg
push
lods
push
outsb
mov
rcrb
dec
leave
jecxz
cmp
fwait
into
popf
pop
and
fsubrs
test
mov
adc
fsubrp
je
adc
popf
jle
cmpl
insb
xor
aam
mov
sbb
xchg
jg
cmp
int3
pop
xor
dec
mov
inc
add
ror
out
dec
or
mov
cmp
sarb
aaa
push
into
imul
stos
xchg
repz
movsl
nop
jbe
xchg
mov
dec
and
sbb
clc
adc
jmp
movsb
dec
adc
loope
shll
mov
mov
dec
addr16
jg
test
pop
in
shrl
sti
push
mov
dec
sti
inc
pop
mov
xor
test
popa
das
sub
mov
mov
dec
sub
mov
pop
repnz
pop
dec
or
push
scas
push
in
mov
add
stos
xor
in
push
sbb
outsb
iret
inc
adc
ljmp
int3
test
or
shll
hlt
icebp
frstor
jns
inc
test
lods
sub
aas
dec
and
fsubrs
loop
sbb
adc
xchg
dec
add
fdivrs
adc
arpl
daa
cmp
scas
inc
pop
mov
test
and
ret
test
pop
push
mov
inc
enter
or
out
scas
push
mov
xchg
inc
jp
sub
je,pn
xor
mov
fiaddl
dec
mov
add
or
popa
repz
adc
stos
addl
push
gs
ljmp
push
lea
adc
cmp
sub
mov
aaa
outsb
outsl
dec
sbb
insb
cs
xchg
cmp
daa
and
rcl
add
xchg
cli
int
imul
jbe
popa
dec
cmp
adc
mov
mov
mov
dec
lret
xchg
push
adc
pushf
aam
test
pop
jbe
testl
pop
out
and
mov
xchg
nop
scas
mov
pusha
mov
aaa
gs
inc
in
cmpb
mov
nop
jb
adc
jae
dec
iret
out
cmp
hlt
inc
test
xchg
sbb
sbb
dec
xchg
cmp
faddp
call
mov
adc
mov
movsl
jnp
cltd
cmpsb
mov
outsb
cs
outsb
outsl
dec
shr
pop
mov
sbb
enter
mov
fs
pop
jle
aaa
add
negb
aad
jo
pop
flds
sti
repnz
mov
cmc
xor
cmp
fst
pop
jnp
rcr
sahf
adc
push
sub
xor
pop
adc
xchg
push
aaa
xor
sbb
aas
rcrl
in
add
popf
jle
bswap
mov
dec
lods
mov
cmpl
dec
fstps
sbb
add
mov
sbb
mov
in
mov
dec
jnp
mov
iret
xor
enter
mov
push
add
and
lock
mov
inc
and
outsb
jne
pop
mov
lea
lock
in
sub
mov
mov
aad
popf
in
add
push
sbb
or
stos
xchg
lods
int3
fadd
cmpsb
out
lret
outsb
sahf
sbb
or
scas
loop
and
xor
rclb
jmp
dec
shl
push
mov
stc
lock
sahf
lds
jp
push
iret
outsl
pop
cmp
clc
mov
cwtl
or
std
inc
mov
push
fmulp
push
rcl
mov
fs
cmp
filds
mov
jg
adc
adc
repz
ficomps
or
in
jecxz
rcrl
neg
stos
es
into
fcmovbe
mov
sub
inc
and
mov
cvtps2pi
fs
mov
sub
xor
mov
movsb
xlat
cmpsl
mov
add
daa
in
aas
aaa
cmpsb
lahf
cmp
cltd
mov
clc
inc
cs
dec
ficompl
test
mov
scas
mov
scas
dec
loop
stc
ret
mov
inc
dec
std
pop
mov
dec
mov
jb
sarl
call
xchg
idivl
adc
fcoms
xchg
and
fsub
notl
xchg
jno
xchg
push
sub
test
scas
sbb
mov
enter
clc
call
in
je
jge
aam
inc
add
iret
insl
cltd
adc
faddl
pop
into
fs
xchg
mov
mov
sbb
mov
inc
ljmp
fcoml
outsb
repz
outsl
sbb
and
dec
cwtl
aad
push
xor
ss
xlat
lea
push
ret
xchg
bound
jmp
call
outsl
xchg
cmc
loope
hlt
arpl
jnp
mov
push
or
int3
xchg
jb,pt
inc
adc
lock
pusha
and
mov
test
add
sub
jg
aaa
mov
add
call
mov
pop
dec
leave
lahf
sub
roll
enter
mov
jmp
push
and
es
mov
fs
outsb
and
cmp
sub
pop
dec
les
push
pushf
test
mov
adc
js
call
inc
pop
fnstenv
sbbl
push
or
in
cmpsl
pop
aas
fstps
mov
test
cld
pop
mov
mov
and
sbb
iret
fisubl
sub
enter
cmp
fildl
mov
jo
xor
imul
aas
cs
aas
inc
push
cmp
jae
aad
shl
jo
push
fucomi
push
mov
cwtl
lea
and
xchg
xor
call
sbb
pop
imull
popf
mov
and
pop
adc
or
mov
pop
clc
hlt
test
push
xor
jle
push
add
mov
or
icebp
pop
lods
jl
lcall
in
lea
andl
push
addb
pop
mov
cmp
add
aad
fmull
xchg
xchg
cmp
insl
push
iret
jge
mov
fcomps
jecxz
aaa
cmp
stos
lcall
ret
sbb
sbb
push
loopne
xchg
sbb
mov
adc
dec
mov
mov
pushl
xchg
mov
outsb
cmp
cmp
push
in
test
scas
add
mov
push
add
mov
lods
cld
mov
loopne
mov
jno
dec
xor
sahf
dec
repnz
incb
lcall
pop
mov
insl
xchg
jmp
mov
leave
xchg
bound
pop
int3
adc
pushf
jle
xchg
add
mov
mov
test
mov
es
jp
mov
xlat
mov
mov
jnp
xchg
movsb
add
xchg
xchg
mov
fwait
pop
pop
mov
shrb
dec
jecxz
sbb
rcl
xchg
mov
ret
jo
jae
or
pop
jne
push
inc
sub
xlat
lret
pushf
dec
xlat
fdivl
pop
lcall
mov
outsl
cmp
loope
cmp
jp
dec
stos
repz
sbb
push
shr
or
lahf
cmp
and
jge
not
jo
jb
aad
inc
dec
les
data16
pop
mov
sbb
jae
jns
not
shr
fnstsw
mov
cmpl
xchg
data16
mov
je
jns
addl
jecxz
outsl
pop
push
inc
pop
jno
enter
inc
xchg
dec
sbb
inc
lcall
ret
cltd
scas
repnz
rcr
pop
sbbl
or
inc
push
ret
mov
das
sub
pop
data16
mov
sbb
mov
repz
out
mov
xor
les
scas
mov
sbb
xor
dec
mov
pop
mov
or
in
dec
out
icebp
mov
insl
push
pop
pusha
sbb
push
and
insl
sti
aam
mov
pop
je,pt
inc
jo
mov
bts
gs
inc
mov
and
int
shll
xor
add
jne
and
out
and
adc
movl
add
iret
pop
xor
lds
mov
shrl
dec
mov
mov
sub
xchg
pop
push
int
stc
sbb
int3
repnz
ret
in
pop
lods
dec
xor
shl
bound
add
rcrb
xor
stos
inc
and
or
cwtl
add
lea
mov
mov
aaa
sbb
push
icebp
into
fstps
enter
push
cmp
fs
fdiv
adc
xorb
mov
test
pushf
fs
aam
fcoml
mov
push
jbe
lock
pop
xlat
std
lods
rorl
dec
or
push
jecxz
pop
add
call
loop
lds
pushf
push
sub
mov
imul
jo
cmp
mov
sbb
sub
daa
mov
mov
pop
cli
aaa
or
xchg
lcall
orl
inc
addl
lods
cmpl
inc
fwait
lret
mov
sub
pusha
jno
xlat
cwtl
faddl
jg
cld
cmc
xchg
shlb
pop
pop
or
xlat
mov
and
icebp
insb
adc
add
lret
aad
sub
cmp
ja
nop
dec
in
lret
sub
es
xor
adc
jge
insl
push
je
mov
pop
mov
in
stos
xor
sahf
jae
test
push
push
add
mov
fsubrs
in
scas
popa
testb
into
into
xchg
pop
adc
sub
mov
and
or
or
sub
add
xor
xor
sti
push
push
push
push
imull
adc
leave
aam
xchg
in
mov
mov
aaa
and
lret
push
rcl
call
push
fcos
mov
sbb
push
cmp
gs
popa
adc
cmpsl
mov
adc
jmp
loope
push
add
aaa
ljmp
xchg
xchg
push
fildll
aam
icebp
outsl
fimuls
test
int
sbb
out
jo
adc
or
jae
mov
sbb
pop
cmp
enter
shr
fcompl
sub
push
rclb
clc
adc
popa
inc
jge
mov
lock
pop
das
call
leave
aam
stos
cmp
jns
lret
test
mov
mov
push
add
pop
mov
mov
adc
inc
or
sbb
int
cltd
subb
andb
cmp
cltd
and
cli
stos
adc
adc
cltd
adc
xor
jne
je
mov
lret
fldenv
mov
and
fisubs
sbb
sbb
and
mov
aam
fsubs
test
inc
lods
inc
insl
mov
xchg
dec
cmp
addr16
lret
inc
out
ds
adc
push
mov
pop
inc
jp
in
mov
shrl
or
std
bound
out
xchg
add
sar
arpl
mov
outsb
add
mov
bound
loope
pop
test
rorb
je
test
sub
lods
sub
cmpsb
pop
pop
jecxz
ja
mov
add
subb
pop
sarb
inc
in
mov
fwait
cmp
mov
daa
sbb
cmpsl
cmc
fcoms
fnstsw
rep
jp
jno
adc
mov
or
xchg
andb
dec
mov
mov
or
aad
xchg
push
insb
daa
addr16
adc
loope
movsl
mov
inc
fistl
insb
mov
inc
adc
int
aas
iret
movsb
xchg
je
in
stos
and
inc
or
push
dec
shrl
in
xchg
push
cmp
ljmp
or
cmp
xor
mov
push
push
fs
jge
xor
les
repz
fnstcw
jmp
push
rcrl
out
pop
sub
scas
ud0
lret
es
push
push
mov
sbb
xor
dec
pop
fisubrl
mov
push
jmp
repz
mov
mov
cld
divl
stos
lahf
aad
push
sahf
pop
rcrb
mov
push
pusha
sbb
push
cmc
jae
cmp
inc
mov
jno
dec
rcrl
stos
test
push
loop
into
iret
cmc
xor
js
test
inc
testb
movsl
repnz
or
jmp
pop
or
sbb
lret
and
push
out
gs
xchg
jns
mov
push
out
push
dec
dec
mov
push
fmul
cwtl
push
insb
pushf
add
and
enter
push
lcall
inc
addr16
mov
hlt
repz
or
fsts
gs
jne
es
xlat
xor
jns
cli
aaa
push
jae
in
or
popf
ret
or
xor
push
jge
leave
inc
popf
sub
xchg
mov
in
mov
adc
mov
shrl
dec
roll
sub
mov
xor
imul
mov
xchg
and
dec
arpl
loop
mov
inc
test
daa
arpl
aad
sub
jmp
loope
lret
mov
mov
mov
and
inc
fs
mov
jmp
push
es
sbb
ja
fimuls
lock
cmpb
js
inc
ja
cmp
xor
sbb
es
gs
xor
pop
jo
xchg
mov
stos
jge
out
shlb
adc
divb
outsl
dec
pop
push
insl
or
jae
in
insl
in
inc
push
out
out
sbb
ds
lcall
sbb
xchg
gs
es
daa
add
insb
cmp
lcall
in
std
stc
cmp
dec
xchg
mov
dec
jmp
call
outsl
fs
imul
mov
dec
sti
xchg
pop
jns
xchg
lahf
mov
andl
decb
lock
mov
scas
xor
sub
fs
out
sbb
out
outsb
addl
lret
jne
addl
in
or
fwait
outsl
push
and
cmpsb
adc
dec
loope
int3
add
pushf
cli
mov
and
ret
pop
incb
pop
clc
stos
sarb
sbb
fdivs
sbb
xchg
sub
in
mov
and
pop
inc
pop
push
loop
jecxz
add
sbb
jge
insl
lcall
cs
or
and
outsl
pop
int3
test
not
arpl
jae
xor
into
in
jle
xchg
jns
cltd
jae
cmp
inc
loope
push
xorl
xor
xchg
popf
push
scas
mov
es
mov
mov
icebp
xchg
hlt
int
mov
bound
inc
mov
jnp
jl
cs
popf
fildll
pushf
pop
mov
xchg
mov
xchg
push
push
xor
dec
insb
pop
mov
sti
add
or
or
daa
add
arpl
sti
loope
ret
popf
repz
movups
jbe
pop
imul
cmp
pop
ja
push
push
inc
adcb
lods
sub
mov
jbe
repz
sub
div
add
dec
cmp
lods
pop
int
cli
adc
xchg
sub
fimull
pusha
fdivl
xor
xchg
mov
push
aam
shll
fcmovnb
out
pop
mov
inc
shl
xor
in
cmpsb
mov
xor
movsb
icebp
sub
cmp
roll
dec
sbb
jle
mov
movsb
xor
cmp
lcall
sbb
xor
lods
pop
mov
je
sbb
insl
call
push
adc
jbe
push
fimull
xchg
incl
stos
cmp
shrl
cmpb
lret
es
jle
mov
jmp
adc
loop
int
cmp
mov
sahf
loop
push
inc
xor
iret
fstps
pop
mov
xor
or
mov
mov
sbb
mov
sbb
mov
fwait
cmp
fcmovnb
test
iret
out
jmp
test
shrb
push
packssdw
aad
pop
and
fsubl
andb
stc
aaa
jae
ret
into
or
out
pop
ficoml
and
cltd
rolb
mov
push
add
mov
repz
ret
adc
pop
inc
jo
pop
in
in
jp
das
jecxz
mov
cltd
xchg
outsb
sbb
push
lahf
cmpsl
imul
sbb
pop
mov
leave
xchg
or
sub
insl
mov
in
mov
push
xor
shll
mov
loope
pusha
cmp
mov
inc
xchg
or
sub
mov
mov
adc
bound
orb
jae
out
dec
sti
mov
sub
adc
xchg
into
in
jmp
cmpsl
inc
insl
mov
iret
jae
or
cmpsb
mov
stc
sti
push
rolb
int3
add
lcall
pop
imul
icebp
movsl
mov
fwait
icebp
int3
xor
jbe
sbb
lahf
hlt
or
jbe
mov
aad
aaa
add
ror
inc
shrb
mov
jmp
das
mov
adcl
lea
negb
mov
xor
ret
sbb
dec
frndint
inc
dec
stos
mov
pop
and
adcb
sub
push
bound
and
das
jmp
aad
insl
enter
jnp
mov
call
outsl
loop
sub
scas
leave
and
fadds
mov
xchg
daa
aam
sub
cmpsl
bound
jo
add
repz
add
mov
std
dec
out
test
pop
decb
xchg
cmp
mov
pushf
ret
mov
mov
jp
arpl
popf
and
add
test
test
sub
jns
cmp
lahf
mov
dec
pop
stos
stos
testb
mov
popf
cmp
clc
cmc
mov
push
stos
pop
pop
jge
fnsave
push
xchg
ficoms
xchg
pop
fcomps
and
mov
xor
test
lret
mov
pop
loopne
pop
push
sub
inc
loopne
andl
pop
fs
aas
popaw
subb
fwait
dec
jl
mov
push
mov
cwtl
lret
push
xchg
sbb
lahf
adc
add
cli
jmp
xlat
addr16
pop
jp
loopne
pop
pop
test
nop
jno
add
gs
xchg
call
inc
add
mov
rorb
xchg
jnp
imul
enter
inc
push
loopne
lret
jnp
xor
sbb
orb
mov
dec
pop
xchg
shr
popa
inc
cmp
dec
mov
xor
imul
out
clc
or
pcmpgtw
jp
add
dec
add
pop
fcmovne
call
mov
test
mov
add
ds
mov
push
push
fstpl
cltd
test
xchg
cltd
mov
inc
lea
or
fidivs
push
std
out
repnz
pop
pop
adc
and
es
adc
aas
mov
push
cmc
mov
dec
insl
andl
and
imul
es
sub
lea
fisubrs
lret
ret
dec
sub
ljmp
push
add
or
jno
adc
lret
push
dec
movsl
cli
in
subl
rolb
cmp
das
mov
lret
adc
mov
jecxz
xor
adc
lods
push
mov
insb
add
in
cmpsl
loopne
jbe
rclb
movsb
jge
pop
ret
daa
mov
loop
inc
icebp
inc
out
popa
cltd
out
adc
inc
test
mov
cltd
rol
aam
cli
popa
inc
push
inc
pop
mov
dec
and
scas
in
int
lods
push
test
lea
jns
pop
sahf
lock
and
xor
dec
icebp
addr16
or
add
jo
loopne
push
xchg
in
out
rorl
mov
shll
xchg
fsubp
xchg
mov
mov
fwait
loope
fcoms
or
in
shlb
mov
iret
sbb
dec
bound
jns
je
or
cmp
shl
jae
push
in
daa
jo
mov
adc
in
sahf
mov
dec
add
jle
pop
or
pop
popw
cmp
mov
fs
test
pop
or
movsb
xchg
xlat
cmpsl
push
mov
fisubrl
jne
les
icebp
scas
dec
adc
add
mov
jmp
data16
rcrb
pop
sbb
cmp
xchg
pop
inc
out
shl
aaa
mov
sbb
and
xor
jnp
mov
xchg
jae
xchg
xchg
aad
mov
das
mov
nop
and
test
pop
jae
fwait
adc
hlt
mov
shll
lret
push
sub
push
xlat
decl
mov
pop
sbb
daa
je
in
sbb
test
xor
or
lahf
insb
in
or
int
add
mov
mov
movsb
outsb
xor
xlat
in
ja
imul
pop
imul
push
pop
add
cmp
inc
incb
sub
cmpsl
rcrb
popa
inc
enter
xchg
jb
loopne
sbb
mov
into
lods
mov
and
and
pop
xorb
dec
mov
and
popf
call
pop
push
jb
sbb
fwait
lods
out
shrl
in
add
in
lgs
pop
xor
shrb
repnz
mov
out
imul
jp
lcall
or
and
aas
mov
adc
jg
mov
in
pop
rol
dec
pop
jle
scas
xor
lahf
dec
mov
mov
inc
xchg
stc
out
xchg
jae
pop
pop
int
out
cli
cmp
jmp
lcall
pop
jle
imul
test
push
sbb
icebp
pop
adc
fmull
and
icebp
adc
push
mov
push
and
out
test
cmpsb
in
pop
cltd
movsl
cmp
add
xchg
cld
jnp
rcr
push
cmp
push
testb
jge
cmp
push
push
pop
test
cwtl
push
mov
pop
nop
test
mov
fldl
mov
jns
insb
sbb
inc
mov
push
and
daa
or
loope
add
dec
mov
fcoms
mov
sub
mov
push
leave
or
jo
mov
pop
adcl
fwait
pop
movsb
xchg
mov
xor
lahf
pop
test
inc
in
sub
lret
or
xor
xchg
push
pop
dec
inc
xlat
mov
orb
push
mov
or
jp
cltd
cmp
cmp
pop
pop
jne
xlat
jne
dec
cmp
adc
lcall
cmc
and
dec
mov
push
cmpsl
add
hlt
jge
ret
and
push
or
sub
mov
cltd
outsb
sbb
push
pushf
test
lea
cld
jge
pushf
arpl
lock
scas
inc
sub
scas
and
mov
lea
bnd
mov
cli
dec
movl
outsl
movq
ret
sub
lret
pop
scas
negb
ljmp
mov
inc
cmc
sbb
jns
xchg
adcl
aas
test
xor
mov
out
or
mov
cmc
sub
xchg
adcb
and
cmp
shll
sub
mov
mov
stc
jne
mov
cwtl
mov
mov
loopne
mov
loope
xor
data16
ss
sub
jge
cmp
punpckhbw
adc
push
pushf
cmp
and
cmpsb
jmp
jno
mov
inc
les
sti
cs
popw
scas
sbb
add
inc
adc
push
dec
inc
push
xor
cmpsl
xlat
call
aad
sahf
das
or
push
xor
pop
int3
dec
loop
xchg
sub
cwtl
inc
out
adc
mov
cmp
mov
add
add
inc
or
add
nop
or
icebp
sti
cmp
daa
lret
or
jo
nop
jl
and
push
imul
push
cmp
out
add
aas
inc
int3
cmp
push
sbb
stc
out
mov
sahf
lret
push
mull
aad
xlat
fstps
pusha
jns
popf
stc
dec
add
inc
sarl
rcrb
sub
sti
mov
pop
out
fmull
in
lea
mov
adc
xchg
jns
mov
cmp
mov
das
clc
adc
or
mov
insl
pop
add
rclb
mov
in
mov
int3
mov
jle
call
out
cmp
push
jo
outsl
cld
adc
sub
cmpsb
popf
addb
in
pop
das
in
sbb
pop
inc
cmpsl
inc
jo
jbe
xor
aaa
jbe
pop
rorl
cmp
sub
ja
fldenv
add
enter
xchg
popf
jmp
sbb
xor
dec
and
push
adc
call
xchg
adc
adc
or
and
mov
ret
pushf
int3
inc
dec
cmpsl
cmp
jnp
leave
hlt
pop
enter
std
or
mov
pop
inc
mov
cmp
or
fdivrp
dec
mov
push
mov
sahf
xrelease
mov
push
xchg
sub
mov
cmc
or
push
pop
je
les
xchg
jo
data16
stos
adc
mov
testl
mov
and
xchg
lods
jne
sbb
mov
pop
mov
jno
cli
lahf
into
stos
cmc
dec
pop
cld
mov
inc
jno
inc
cmp
pop
push
das
cwtl
js
mov
fmuls
insb
test
add
xor
mov
mov
and
movsb
xor
mov
adc
fcmove
dec
pushf
imul
fisttpl
push
sub
call
sub
xchg
cmpsl
xor
and
mov
mov
in
pop
test
movl
pusha
aas
loop
xlat
jg
bound
stos
in
add
dec
aaa
cmp
rcr
add
xlat
add
add
cmp
jg
les
lahf
sub
dec
cmp
or
and
inc
xchg
cmc
mov
pushl
push
dec
aad
popf
dec
mov
ret
ds
imul
sub
pop
data16
sahf
or
xor
lret
loope
movsl
scas
pop
ss
or
in
loopne
hlt
nop
push
call
or
and
adc
xchg
xchg
sub
add
addb
adc
data16
addr16
daa
movsl
not
dec
arpl
add
mov
in
add
ljmp
cwtl
js
sub
push
jecxz
push
mov
lock
repz
add
testb
jne
jle
fadd
loope
sbb
jb
add
daa
mov
sub
inc
and
mov
shrb
cmpsl
adc
daa
loope
test
mov
adc
enter
sbb
jnp
cltd
in
andl
jns
mov
jae
push
aas
lret
stos
mov
in
in
pushf
dec
cmp
dec
jecxz
sbb
in
pop
testb
out
popa
add
xchg
js
sbb
pop
xchg
ret
adcl
or
inc
fstpt
shll
mov
sti
cmp
inc
sbb
pop
lods
ljmp
push
add
add
add
adc
mov
test
mov
push
mov
rcll
int
dec
jae
adc
aas
sub
jnp
and
iret
imul
add
mov
cmp
pushl
fstps
addr16
push
filds
fadd
pop
jp
sahf
push
arpl
and
rolb
test
inc
cld
js
jge
push
xchg
mov
mov
add
fcomps
imul
adc
push
gs
xchg
push
and
out
or
or
int
leave
icebp
mov
in
mov
test
test
xchg
cmc
inc
mov
loopne
lret
pop
popa
dec
lahf
fimull
sub
cmpsb
cmp
xor
rcrb
dec
jg
or
and
fstpt
int
cli
and
test
imul
pushf
and
lds
cli
dec
cmpsl
add
fnstsw
push
xchg
daa
dec
ja
mov
mov
repnz
fsubrl
mov
sbb
fsubs
shr
mov
mov
add
stc
stc
add
frstor
adc
add
push
sarl
js
adc
icebp
aad
adc
mov
jl
sbb
mov
movsl
pushl
call
cmp
ret
add
stc
stos
add
push
dec
dec
lahf
or
xchg
mov
jle
sub
lods
in
pushf
mov
mov
sub
push
push
fwait
test
lret
shrl
das
leave
fxch
cld
data16
lcall
xchg
test
sbb
mov
ljmp
imul
cmp
fnstsw
cmpsl
orb
imul
adc
dec
mov
rcrb
imul
clc
mov
call
jns
in
sub
cmp
jg
adc
jbe
mov
inc
push
jle
jmp
mov
push
shrl
cmp
cmp
jp
stc
or
fnstsw
xchg
lds
dec
stos
xchg
xorl
loopne
add
iret
fcmove
push
cltd
insl
cmpsl
scas
dec
cmp
mov
or
or
inc
jns
inc
or
or
arpl
aad
mov
pop
push
sub
xchg
push
lret
adc
fisttps
sbb
sub
das
jecxz
push
arpl
inc
ljmp
mov
xor
jae
notb
mov
or
arpl
xorl
xchg
aad
insb
ja
add
rorl
jp
in
ret
jg
sar
mov
mov
xchg
shr
out
sub
rclb
cmp
adc
outsl
sbb
sbb
shrb
scas
pop
push
lcall
adc
dec
test
repnz
mov
in
hlt
out
pop
call
test
push
aam
lods
rorl
fbld
jg
dec
adc
inc
push
cli
dec
call
shll
hlt
mov
push
into
test
or
xchg
insl
cmp
es
adc
push
scas
pop
sarb
pop
fmuls
stos
test
jecxz
xchg
orb
mov
sub
mov
cmp
mov
bound
push
add
jecxz
cli
xchg
cmp
ds
inc
push
lahf
pop
push
add
fs
paddusb
in
pushf
inc
faddl
addb
lret
inc
sub
lcall
loopne
leave
fs
imul
popf
push
mov
mov
fcomi
xchg
xor
loopne
push
popf
idivb
push
pop
gs
jo
sub
popl
and
push
outsb
pop
pop
decb
xor
push
xchg
or
mov
mov
jb
packsswb
dec
clc
ret
fiadds
push
xor
jg
cs
inc
or
jae
lods
mov
or
fs
dec
push
fildl
std
pop
inc
fisttps
into
inc
sbb
in
inc
outsl
js
mov
jae
jnp
inc
cmc
pop
sub
mov
insl
mov
xchg
xchg
jp
int3
dec
mov
mov
movhps
or
mov
pop
jp
ud0
mov
cmc
xchg
in
orb
test
aam
ljmp
sahf
repz
repnz
or
xchg
jnp
arpl
mov
jl
popf
inc
push
andb
dec
mov
mov
mov
dec
imul
loopne
pop
stos
add
nopl
pusha
jmp
push
adc
jl
jmp
movsl
test
shl
push
add
mov
mov
lods
or
std
lea
ds
in
fidivl
sbb
pop
mov
test
jge
jo
xor
fnstsw
jnp
lds
inc
xlat
loop
bound
xlat
fistl
and
in
mov
in
sub
lea
mov
mov
or
lret
xchg
adc
push
and
in
inc
xor
movb
inc
jno
rorb
cmp
push
repz
mov
or
das
push
movsl
lea
shr
test
bts
mov
repnz
hlt
add
pop
int
scas
jmp
inc
dec
inc
jae
jbe
arpl
push
ljmp
mov
pusha
or
jae
xor
mov
insl
push
mov
xchg
fcmovbe
push
int
gs
sti
out
mov
ja
rolb
mov
push
push
mov
mov
adc
shl
sbb
xor
sub
pop
push
pop
rorb
add
loopne
in
out
sbb
jb
aam
sbb
and
push
mov
or
dec
sbb
xchg
lahf
mov
fidivs
movsl
mov
pop
out
ret
cmp
mov
or
sbb
ds
hlt
fdivp
push
bound
sahf
and
rclb
lods
xchg
adc
lds
loopne
sar
jns
ret
xchg
inc
in
sub
sub
cmp
lods
push
cmp
into
mov
cmp
in
lret
nop
and
rcll
nop
jbe
push
loop
pop
test
stos
lea
xchg
std
flds
dec
jge
lods
dec
pop
popf
inc
add
call
or
stos
imul
fwait
pop
mov
fdivs
inc
and
and
std
scas
jecxz
cmp
popf
mov
fmul
sbb
push
pop
sbb
push
rorl
lods
arpl
jg
daa
xlat
cmpsl
jno
pop
mov
mov
adc
ret
imul
lahf
and
popa
jg
loope
mov
lahf
call
int3
lock
cltd
xchg
dec
pop
pop
test
movsb
inc
jl
sub
cmpsb
int
fidivl
dec
out
sbb
nop
incl
cwtl
xchg
fdivr
inc
sub
cmp
sub
movl
aam
push
lods
scas
in
jl
cmc
test
in
and
adc
push
js
add
jne
fisubrs
pop
int3
mov
jp
inc
jb
sbb
xchg
bsr
fcmovne
fstl
in
in
xchg
xchg
inc
lret
orb
faddl
dec
adc
jnp
cmp
sub
and
andl
mov
push
jo
sub
or
jg
add
ja
inc
in
ja
jecxz
je
sbb
call
sub
pop
or
dec
clc
sub
inc
mov
sti
in
test
loopne
xchg
mov
dec
xchg
imul
push
lods
mov
cmpsb
dec
dec
fnsave
jp
int
mov
push
or
dec
imul
push
or
inc
test
push
in
xchg
lcall
sahf
leave
clc
arpl
repnz
fidivrs
fistpl
inc
rorl
and
outsl
lret
pop
mov
mov
sub
jbe
pop
dec
les
jae
pop
adcl
or
push
jbe
sub
loop
mov
inc
mov
test
lcall
dec
lret
mov
aas
sbb
and
call
xor
gs
les
pop
adc
in
outsl
mov
aas
jno
in
mov
sbb
inc
jb
imul
aas
and
into
jl
repnz
leave
js
hlt
outsb
push
test
xchg
inc
shr
xor
js
jns
or
push
mov
cltd
popf
xchg
mov
pop
gs
movsl
or
rorb
jecxz
inc
and
mov
sbbb
cmp
jbe
xchg
stos
js
inc
cmpsb
cs
adc
mov
les
jne
dec
dec
std
push
pop
gs
mov
test
pop
pop
dec
push
cli
loopne
mov
and
cmp
xor
iret
add
mov
jge
loopne
mov
xchg
cmc
push
jne
rclb
test
repnz
xor
adc
imul
xchg
inc
jmp
cmp
mov
pop
sbb
aad
ret
cs
movsb
fnsave
mov
test
mov
mov
sbb
adc
lds
mov
push
push
lock
xor
push
fwait
pop
fldenv
in
int
xchg
add
xchg
das
xor
nop
sbb
mov
cli
shll
sub
lret
aaa
inc
arpl
pop
sbb
ret
jp
nop
mov
dec
xchg
clc
loopne
or
xchg
sbb
pop
ret
test
xor
inc
add
xor
mov
dec
pop
test
ret
imul
rolb
add
sub
scas
movsl
push
xor
rolb
das
mov
jne
inc
or
enter
es
cmp
jb
sahf
push
mov
mov
and
cld
ljmp
push
fwait
hlt
mov
in
out
daa
sub
lahf
pop
notl
mov
xchg
aaa
aaa
xor
repnz
jae
hlt
out
xor
loopne
outsb
xor
pop
cmp
bound
cmp
pop
jg
jg
pop
and
pop
repz
adc
cmc
add
test
mov
lods
fidivs
movsb
js
ficompl
cwtl
sub
pusha
fstpl
inc
daa
pop
lods
ss
es
pop
cwtl
jno
mov
xchg
popa
dec
aam
xchg
push
cmp
mov
es
insb
loope
fcomp
jno
mov
push
xlat
fcmovnb
adc
adc
jp
pop
jecxz
sbb
xchg
aas
push
pop
and
sub
sbb
add
and
adc
rcrl
push
imul
ljmp
adc
xchg
jne
mov
test
sub
call
adc
ss
orb
stos
mov
push
clc
add
xchg
dec
movsl
xor
mov
ret
sub
sbb
sti
xlat
xchg
cmpl
call
out
lcall
sub
enter
loope
outsl
les
or
dec
gs
out
stos
mov
push
jle
lcall
fsubl
mov
inc
imul
aas
add
inc
jle
insl
jne
push
push
push
push
aam
cmpsb
adcl
xchg
sahf
lahf
in
push
mov
not
push
imul
loope
dec
cmp
add
sub
dec
jne
je
pushf
dec
and
daa
dec
xchg
add
jecxz
pop
ja
ljmp
cmp
xchg
insb
jns
shl
and
pop
mov
mov
sub
aas
mov
lods
mov
movsb
cmp
xor
fisttpl
jno
jl
aad
jmp
jmp
push
mov
scas
jo
fidivrl
and
test
call
xchg
enter
jae
stos
loope
sbb
jae
fwait
cmp
mov
nop
imul
dec
outsb
dec
xchg
insb
shrb
inc
cmp
mov
sub
adcb
ret
add
fstps
out
sub
dec
stc
addl
push
les
sub
mov
or
ret
xchg
xchg
mov
push
imul
in
movsb
inc
packuswb
mov
in
nop
push
addr16
sarl
popf
jge
dec
stos
test
jne
das
pop
dec
jge
pop
mov
imul
dec
es
ds
xchg
ds
pop
out
test
leave
js
adc
pop
mov
fstps
or
adc
test
repnz
nop
lahf
into
sbb
xchg
pop
push
loope
mov
fwait
and
adc
popf
in
mov
xchg
add
xchg
dec
pop
lods
mov
push
adc
mov
repnz
adc
ds
pop
xor
cmc
lcall
xchg
addr16
test
movsb
setge
outsb
xor
add
inc
mov
or
mov
lea
xor
and
out
or
xor
push
sub
pop
push
dec
pop
stos
or
scas
pop
jg
xor
bound
and
mov
jl
sti
aas
pop
xchg
mov
inc
dec
inc
cmpsl
ret
or
rolb
xchg
repnz
dec
loopne
xor
mov
sub
add
mov
adc
mov
dec
jns
mov
jp
xchg
jecxz
das
mov
movsl
mov
addr16
sbb
scas
mov
add
fs
shll
shl
cmpsl
mov
cmp
mov
mov
mov
jmp
fiadds
adc
xor
or
dec
rcrb
out
push
dec
push
sti
pop
filds
stos
inc
lods
rolb
mov
sub
inc
aad
jne
pop
into
iret
icebp
xor
push
testb
addr16
orb
lahf
mov
pop
lcall
mov
test
repnz
sub
popf
shl
or
xchg
sbb
aad
mov
fisttpl
leave
and
mov
cli
mov
andb
cmp
addr16
popa
fisttps
imulb
add
insb
sub
and
sbbb
jl
outsb
push
add
jp
cs
call
sti
ret
adc
push
test
inc
call
or
out
cltd
ss
cwtl
pop
xor
push
cwtl
cmp
or
cmpsl
and
dec
ljmp
mov
inc
jmp
out
push
cmp
jp
mov
clc
pop
cmp
outsl
add
aaa
mov
repnz
fwait
mov
lahf
out
push
lds
iret
sub
mov
loopne
inc
mov
push
cltd
dec
cs
ret
mov
pop
nop
cld
adc
push
pop
dec
xor
pop
cmp
insb
insl
cmp
fwait
sub
or
jge
aaa
dec
lahf
cmpsb
push
push
cmp
sbb
inc
mov
outsb
mov
std
jbe
jbe
jp,pt
or
dec
push
mov
inc
xchg
push
push
ds
xchg
dec
dec
hlt
xor
inc
stc
mov
sbb
aad
pop
xchg
add
jnp
popa
xor
idivl
das
push
xchg
xchg
mov
scas
pop
rclb
gs
sbb
adc
fstl
pop
js
daa
cmp
arpl
xor
imul
fdivl
and
xchg
jg
push
movsb
subb
push
xchg
pop
and
imul
clc
t1mskc
xchg
push
int
add
cmp
dec
mov
cmp
in
mov
jne
xlat
cli
fndisi(8087
add
jecxz
add
push
mov
pop
jae
push
or
stos
sahf
mov
loope
sbb
ret
jge
ret
ljmp
mov
add
push
mov
stos
gs
jbe
adc
sbb
in
add
movsl
cwtl
or
lea
movsb
add
imul
lods
addr16
xor
add
cmp
mov
jne
cmpsl
mov
push
hlt
jge
xor
cmpsb
inc
rcrb
nop
sub
outsl
mov
scas
mov
inc
insb
mov
push
popf
mov
sti
subl
repnz
stos
rol
and
jae
xchg
out
inc
jb
cld
push
push
jp
mov
xor
push
psubusw
adc
test
test
stos
mov
cmpsl
mov
adc
push
xor
add
inc
lock
stos
mov
ret
out
stos
mov
push
das
call
xchg
adc
inc
xchg
popa
loopne
pusha
dec
stos
leave
and
pop
mull
movsl
je
sbb
adcb
add
into
je
push
cmp
adc
or
jb
adc
pusha
jle
icebp
jecxz
in
pop
cmp
cld
pop
imul
ret
gs
push
adcb
xor
sbb
push
push
repz
inc
scas
push
jnp
sarb
adc
xchg
cwtl
aam
ss
or
cmpb
xchg
xchg
shr
push
call
mov
push
mov
rorl
mov
insl
and
mov
mov
adc
orl
adc
jns
push
mov
outsl
xchg
std
cli
shlb
cmpsb
jns
lret
mov
pop
push
jns
wrmsr
mov
fldl
mov
mov
sbb
test
pop
enter
sbb
shlb
ret
and
pop
leave
ds
mov
mov
or
cmp
mov
inc
pop
outsl
es
mov
outsb
add
imull
pushf
cmp
int3
pop
loop
aas
stos
or
je
aad
mov
incb
push
jne
leave
movsl
and
jo
jp
outsb
add
fidivs
out
test
shlb
test
inc
ret
mov
push
jge
in
cmp
jno
xchg
addr16
push
and
inc
data16
aas
xor
stos
mov
pop
popa
push
xlat
xchg
or
scas
pop
sub
orl
xchg
xchg
sub
and
jmp
pop
js
cltd
mov
mov
inc
mov
imul
and
push
test
icebp
inc
jns
cmpsl
leave
add
mov
outsl
cwtl
out
pop
or
aam
mov
jg
or
lock
xor
in
add
pushf
leave
xchg
jbe
and
scas
pusha
cmp
js
mov
call
mov
inc
mov
push
loop
lds
cmpsb
push
das
jp
mov
fdivs
mov
insb
leave
jl
insl
xor
andb
punpckldq
addr16
sti
push
sbb
dec
pop
push
and
mov
les
xor
sub
pop
mov
int
push
in
imul
repnz
xor
xor
dec
pop
test
int3
jg
push
outsl
sub
jns
xchg
ja
dec
scas
mov
mov
sub
int3
and
imul
pop
mov
pop
or
leave
les
sub
nop
popa
add
lret
pop
pop
and
aad
pushf
pmaddwd
push
in
pop
push
mov
xor
into
fnstcw
add
sub
loopne
andl
xchg
dec
test
push
push
add
in
aas
and
inc
and
testl
push
xchg
sub
cmp
mov
add
loope
shrl
or
fisubrl
inc
leave
test
les
mov
xchg
cmp
subb
and
xchg
pushf
pushf
das
jge
sbb
cmp
lods
int
or
jge
add
hlt
cmp
sbb
adc
aaa
les
stos
test
pusha
inc
push
lret
insl
sub
or
lcall
dec
das
jp
adc
lds
push
stos
add
enter
xchg
loop
cmpsb
ret
aam
ret
jecxz
je
lods
cli
rcrb
cltd
mov
jge
sahf
mov
pop
pop
mov
repz
es
imul
pop
sbb
dec
push
negb
add
mov
sub
jecxz
add
adc
lahf
mov
rorl
enter
sahf
lea
and
ficoml
cmp
dec
iret
push
aam
andb
inc
push
shrl
pop
ds
push
adc
xchg
clc
xor
push
pop
addr16
ja
lcall
add
pop
inc
ljmp
and
push
sahf
mov
flds
or
ss
mov
fdivrs
or
inc
lds
and
dec
jnp
out
mov
mov
xchg
scas
add
xchg
push
adc
xchg
xor
pop
xchg
sbb
fisttpl
subb
adc
sbb
jle
add
mov
shrl
roll
test
and
fiadds
test
push
fwait
jcxz
jp
in
sbb
shll
pushf
cmp
movl
mov
lcall
xchg
cltd
lods
add
xor
pushf
lock
enter
jle
mov
sarl
ret
out
scas
movsb
rcr
lods
fmull
cmp
sub
mov
fisubs
adc
inc
xchg
ret
movsl
add
sarl
cmp
sub
cltd
and
mov
shrl
das
outsl
call
fdecstp
jo
jno
and
mov
sbb
add
mov
sti
mov
stos
xchg
into
jae
movsb
dec
out
adc
mov
ret
pop
mov
inc
loope
jg
push
push
in
push
outsb
sahf
mov
sar
sahf
mov
xlat
mov
fsubs
clc
cmp
stos
negb
inc
mov
arpl
or
push
jp
xor
mov
mov
std
sub
dec
shll
vpsraw
sub
xor
mov
add
call
negl
ss
mov
stc
push
icebp
sub
jb
push
fwait
sti
sub
add
cmp
les
test
cli
fucomip
out
fldt
ljmp
stos
mov
push
cmc
repz
hlt
dec
fsts
mov
cmpsb
out
cmp
fwait
neg
lcall
and
in
mov
lods
push
mov
add
and
dec
pusha
lock
call
mov
icebp
lods
mov
fstpt
mov
out
sub
adc
mov
sbb
ljmp
fists
add
jo
rcrl
sub
mov
scas
outsl
insb
loopne
out
gs
aam
add
jecxz
lcall
mov
adc
adc
or
jae
jns
jp
or
inc
mov
xchg
xor
sbbb
cmp
jbe
cwtl
adc
outsl
jb
cmp
cmp
ret
dec
test
dec
std
cwtl
mov
fcmovb
push
mov
jecxz
jo
jg
pop
jae
sub
push
cmp
sub
cmp
in
pop
movsl
inc
push
jnp
movsb
jnp
cmp
jle
and
push
inc
mov
lcall
xor
dec
cwtl
or
cltd
loope
fldl
scas
adc
cmpsb
js
mov
pop
cmp
aas
shrb
ficompl
bnd
arpl
out
sbb
cltd
or
scas
gs
js
mov
mov
repnz
rolb
fnsave
ret
insb
add
push
jmp
aad
dec
fdivrs
aaa
outsb
aad
xchg
mov
out
stc
xchg
pusha
add
sub
rclb
mov
int3
jnp
mov
clc
push
pop
loopne
popa
iret
fdivs
mov
xlat
leave
pushw
imul
loopne
rorb
xor
adc
pop
inc
repnz
loopne
push
jmp
cmp
loop
insb
scas
sarl
and
ret
jmp
insb
push
sub
lods
movsl
mov
jl
xor
ret
shll
inc
jne
mov
decb
rorl
lock
mov
aas
mov
divl
imul
jmp
test
jl
pop
stc
jge
add
mov
or
dec
fldcw
loopne
mov
pop
int3
xchg
mov
jl
add
mov
sahf
xchg
cmc
in
mov
popa
in
test
lock
sub
stc
mov
mov
dec
pop
xchg
inc
and
xor
sahf
ret
cmp
xor
xor
nop
insl
pop
into
push
inc
xor
aaa
inc
add
mov
mov
add
cmp
pop
jbe
nop
in
repz
and
adc
stos
mov
jmp
xchg
in
mov
push
dec
xor
xchg
mov
imul
in
fdivrl
dec
sub
mov
insl
pop
and
jmp
jmp
dec
jmp
xchg
call
mov
xchg
fmul
xor
add
dec
hlt
sub
loopne
das
jbe
fdivl
movsl
jp
pop
xlat
mov
cs
ffreep
jb
ss
jno
or
mov
mov
xchg
fildll
ss
and
imul
cmp
in
xchg
pushf
adc
fs
sub
inc
inc
addr16
fldt
nop
and
xorb
mov
mov
push
adcl
js
dec
or
sbb
insl
sub
push
cmc
xchg
inc
popf
sbb
fildl
shll
jmp
push
inc
pushw
mov
jno
scas
shl
fisttpll
jns
outsb
mov
sti
cmp
pop
mov
aam
insb
cwtl
mov
dec
xchg
loopne
xchg
inc
pop
pop
xlat
jns
mov
mov
push
les
mov
add
out
inc
sbb
iret
dec
mov
lret
leave
pushf
test
subl
dec
mov
mov
and
mov
xchg
inc
xchg
sti
call
mov
lock
movsb
ljmp
sub
or
dec
sar
push
test
cld
mov
pop
or
in
mov
pushf
adc
fdivrp
fscale
add
cmp
xchg
popa
fidivl
jle
cltd
xchg
sub
and
ret
mov
movsb
mov
lock
mov
xchg
sbb
fdivl
pop
xchg
cmp
inc
xor
int
adcb
cmp
xchg
mov
sub
inc
clc
test
movb
sahf
jae
dec
imul
cmp
mov
xadd
int3
xor
pop
push
xor
repnz
or
adc
test
rorl
fwait
int
mov
fnstcw
mov
aad
ret
ja
nop
sti
incl
pop
cmc
addl
decb
pop
inc
mov
and
cmp
push
fwait
idivl
pop
cmp
scas
pop
js
mov
loope
shll
test
dec
and
mov
sbb
mov
mov
dec
or
push
js
xlat
cmp
popf
cmpsb
aaa
and
xchg
add
xor
lods
mov
fnstcw
cmp
push
push
aaa
push
sbb
inc
stc
mov
daa
arpl
fstl
sbb
dec
xor
jecxz
push
jmp
dec
mov
popf
pop
sub
fnstsw
cwtl
or
pop
pop
fsubrl
loopne
scas
sbb
addr16
test
mov
jmp
sbb
std
mov
iret
xor
call
sbb
cmp
in
dec
icebp
cmc
jg
inc
adc
add
testl
sub
shll
dec
call
test
jbe
adc
arpl
fildl
mov
aas
scas
sarb
xchg
dec
pop
jecxz
stos
stc
shll
mov
jns
adc
fnstcw
mov
inc
push
ret
pop
jne
fstpt
imul
aad
lds
pushf
das
out
or
mov
imul
xchg
out
jmp
call
sahf
mov
cmp
xor
or
mov
femms
in
adc
in
push
cmp
orl
fdiv
out
cmc
sbb
pop
imul
mov
sbb
dec
arpl
jnp
pop
mov
inc
divb
loop
fildl
fs
mov
lret
push
rcr
mov
cli
mov
imul
sub
pop
sub
inc
outsb
lret
js
mov
popf
faddp
push
xchg
insl
addr16
les
mov
popf
xchg
shlb
mov
cmp
js
mov
pop
js
mov
testb
lock
cmpsl
xlat
fisttps
shld
movsb
lret
and
rep
add
jg
jne
cwtl
sub
data16
fbld
clc
sub
loop
jecxz
repnz
imul
sub
xchg
jle
jecxz
out
mov
pop
xchg
out
add
or
std
ja
andl
push
mov
adcb
cmpl
xor
push
in
add
dec
sti
and
xchg
cmc
mov
sub
jge
mov
mov
jo
jmp
rclb
lret
mov
int
aad
sbb
jp
pusha
mov
psllw
lods
cs
cltd
insb
xchg
add
pop
xchg
pushf
mov
push
iret
lods
stos
inc
and
or
fsubr
fidivrl
dec
jle
or
inc
mov
ret
lods
filds
scas
cmpsb
push
lods
rcl
loope
mov
scas
mull
cmp
mov
mov
mov
cmp
jbe
int
mov
fmuls
stc
into
pop
mov
lret
inc
call
outsb
xor
aad
jns
and
test
dec
addr16
mov
xor
xor
mov
je
fs
add
int
lods
mov
push
or
sub
xchg
gs
pop
xor
jne
movb
inc
mov
mov
mov
jb
test
rcr
iret
insl
xchg
aaa
push
sub
xor
fcoms
dec
call
jns
mov
pop
pop
cld
xor
rcll
repz
and
js
or
repnz
cmp
sbb
mov
push
sbb
insb
cli
push
inc
push
dec
xor
fwait
cmp
lods
adc
dec
xchg
in
mov
int3
add
push
jle
sbb
stc
jae
xchg
shlb
ss
add
mov
dec
adc
fwait
mov
mov
cmc
push
inc
sub
dec
out
push
xor
std
xchg
insl
xor
dec
imul
sub
hlt
and
ss
mov
les
iret
pop
out
jbe
or
les
sbb
jbe
add
mov
sahf
mov
icebp
popa
dec
out
lret
pop
xchg
pop
es
ljmp
sbb
divl
dec
pop
nop
in
push
mov
hlt
jle,pn
fs
cmp
mov
sub
sbb
sub
sub
or
mov
mov
push
adc
mov
or
mov
or
xlat
mov
sti
sub
mov
xchg
popf
lods
jp
ret
xor
adc
inc
push
ror
aaa
push
lahf
in
lret
and
aas
pop
fstps
push
imul
xor
sbb
sbbb
mov
jnp
insl
ret
pop
sub
inc
adc
mov
sar
lret
pop
pushf
cmpl
inc
addr16
fwait
push
adc
mov
aas
pop
and
adc
loope
xchg
push
jae
fucomip
aaa
loop
and
mov
mov
inc
mov
pop
jno
mov
scas
mov
int3
sarl
fimull
xchg
lcall
xchg
adc
pop
jg
cltd
and
push
leave
xchg
or
sub
sbb
lods
repnz
and
add
xlat
shlb
je
pop
es
test
imul
dec
xor
jp
les
int3
push
inc
or
bnd
mov
inc
pop
pop
mov
adc
shr
jno
sbb
xchg
sub
pop
mov
mov
in
popf
xor
mov
sahf
out
fs
lods
stos
loopne
aam
sub
fcoml
repnz
mov
addl
push
ret
sti
dec
xchg
pop
pop
aam
push
jne
mov
in
es
daa
cmp
test
sbb
inc
test
loop
dec
leave
inc
and
ret
test
jle
xor
adc
ja
aaa
pop
dec
loop
sub
xor
insl
fstps
inc
call
imul
jbe
xchg
out
iret
ljmp
mov
je
jnp
sub
loopne
pop
sub
das
in
inc
lea
in
addr16
lods
mov
mov
repnz
pop
imul
lcall
fnsetpm(287
and
scas
fdivrl
insb
and
rorl
jg
leave
push
jl
inc
push
loope
sbb
sbb
aaa
xchg
imulb
shrb
dec
dec
iret
call
sbb
fwait
or
fnstsw
push
cmpsl
push
xor
adc
es
enter
adc
xchg
iret
jle
ljmp
loope
es
rcr
jmp
stos
xor
push
lea
push
sahf
stc
jp
icebp
adc
xchg
push
mov
cmp
lahf
pop
data16
cmc
inc
add
mov
dec
jmp
dec
or
sbb
pusha
add
mov
andb
out
jle
jbe
xor
das
lock
or
stos
sub
fs
std
jae
lret
in
jno
add
and
dec
xchg
xor
cli
jne
jns
cmp
mov
out
int3
pop
push
sbb
ds
in
shll
into
pop
adc
icebp
mov
jae
lods
xor
sahf
and
mov
mov
xor
jns
mov
sbb
fists
mov
sub
ss
sub
shlb
fcomps
adc
jge
sahf
enter
pop
cmp
mov
and
sbb
popf
jbe
dec
stc
pop
xchg
mov
popa
iret
pusha
call
stos
ja
jmp
cmc
xorl
loope
push
in
xor
inc
dec
sti
xchg
pop
jp
mov
push
mov
insl
repz
ljmp
inc
cmp
add
cmpb
jl
out
jle
lods
inc
mov
stc
imul
pop
les
sbb
push
js
inc
add
lret
and
loop
je
xchg
inc
mov
pop
popf
ficoms
jp
push
add
lds
inc
or
dec
or
je
adc
xchg
mov
xchg
ror
sbbb
testl
movsb
mov
jno
mov
and
jp
adc
jne
pushf
mov
mov
mov
mov
mov
out
xor
enter
xchg
push
jl
xor
sbb
aaa
push
add
mov
cld
mov
rclb
fwait
mov
shlb
mov
movsb
mov
cmp
imul
insl
xchg
mov
add
adc
push
push
ret
dec
ret
cmpb
ljmp
std
mov
cmpsl
mov
sub
cmpl
rolb
loope
mov
popa
movsb
movsl
pop
insl
or
sub
pop
xchg
popf
cmpsl
sahf
mov
dec
jo
cld
dec
faddl
loope
pop
pop
jle
push
adc
mov
push
jo
mov
lret
mov
mov
mov
stos
sub
int
jmp
sub
fcom
sbb
mov
test
sbb
cmp
mov
test
insl
stos
push
int
push
stos
and
jnp
and
adc
or
and
cmp
jg
mov
stos
das
pop
cli
xor
mov
push
mov
or
sbb
daa
pusha
pusha
add
movsl
or
mov
insl
ret
aaa
mov
cmp
cmp
leave
adc
arpl
lock
xchg
xor
push
mov
pusha
inc
cmp
adc
jl
xchg
mov
mov
cmpsb
scas
ss
add
adc
add
and
mov
jp
fistl
xor
enter
xorl
or
push
popf
jp
jbe
cmp
xchg
jl
mov
lret
fadds
and
shlb
movl
ljmp
cmp
xchg
iret
xchg
ljmp
subl
pop
fyl2x
inc
push
cli
std
push
in
mov
insb
std
jne
int3
inc
cwtl
and
adc
jns
adc
adc
add
imul
xor
sub
fs
cmc
sub
add
jns
mov
je
mov
xchg
inc
aad
ret
xlat
mov
xorb
test
fisubrl
enter
in
leave
sahf
push
mov
mov
pop
daa
les
andb
mov
sub
data16
inc
sub
int3
push
insb
cmpl
or
ss
aam
add
xor
jnp
dec
adc
cmpsb
shlb
out
in
cmp
mov
xor
adc
sarl
pop
xchg
popa
jno
xor
dec
inc
push
push
mov
mov
movsb
idivl
mov
adc
mov
inc
jbe
ret
and
ja
inc
cmpl
push
in
add
jmp
or
or
mov
pop
fxch
addr16
mov
cmpsb
push
test
adc
iret
test
xchg
popf
and
adc
jne
iret
rclb
lods
fbstp
mov
stos
insb
scas
mov
cwtl
dec
adc
neg
test
inc
iret
xchg
adc
mov
inc
jmp
pop
adc
notl
or
das
imul
shll
jbe
cmp
fwait
push
call
add
push
mov
arpl
test
sub
popa
fcmovu
pop
jae
in
orl
aad
sbb
push
jge
in
push
sbb
mov
mov
int3
lcall
dec
pop
push
jge
test
cmp
outsl
stos
cmpsb
cmovns
je,pn
ret
lock
mov
mov
test
push
mov
ja
adc
and
cmpl
loopne
aaa
xchg
sarb
add
in
and
aad
push
xor
fsubl
movsl
push
mov
pop
test
out
jbe
inc
xor
stos
sbb
ja
cmpsl
jae
fadds
rcll
pop
in
fsincos
je
addr16
popf
shrl
aas
ret
pop
jl
xlat
lret
adc
loopne
jns
adc
pop
mov
cmpsb
and
jno
mov
fadds
in
jo
cmp
shl
jle
xor
xchg
dec
in
sbb
cmpsl
outsl
adc
push
fwait
insl
in
cltd
test
rcrb
xchg
push
jl
adc
test
jo
or
ja
call
push
cmp
ljmp
mov
out
popa
adc
filds
scas
aam
mov
mov
cld
in
test
mov
out
cmp
add
mov
imul
xorb
iret
xchg
push
shll
adc
pop
je
jae
out
divb
mov
or
jg
add
shlb
scas
mov
xor
js
std
dec
sub
cmpsl
xor
lea
scas
arpl
mov
mov
cmp
xchg
cmp
stos
cmp
mov
sbb
outsl
mov
popa
das
loope
dec
scas
imul
ds
movsb
mov
lods
jns
pusha
bound
bound
popf
outsb
pushf
fnsave
pop
jnp
iret
jo
cmpsl
xor
add
push
sbb
jns
call
add
cmpsb
fxch
ss
shrb
mov
mov
into
sbb
fwait
lock
adc
xchg
jp
mov
lgs
sahf
cli
insl
xchg
test
jle
push
addr16
fnsave
hlt
fnstcw
fnstenv
repz
bound
leave
ret
cld
and
xor
jae
mov
arpl
lea
sub
icebp
sub
jmp
add
add
dec
das
xor
movsl
and
add
add
outsl
mov
fwait
cmp
lea
inc
and
mov
iret
add
int3
push
je
subb
andb
pop
push
xchg
xchg
jl
sbb
pusha
arpl
pushf
mov
fcmovnb
mov
inc
mov
mov
mov
xchg
repnz
sbb
gs
hlt
out
pop
out
xor
and
jp
mov
sub
shlb
xchg
outsl
xchg
jl
pusha
sbb
sbbl
jo
push
jl
dec
daa
adc
in
jns
shll
pop
jecxz
adc
dec
push
in
or
sbb
mov
adc
push
mov
stos
push
mov
pop
and
and
aaa
xchg
pop
jmp
sbb
mov
hlt
adc
jge
and
inc
pushf
jo
popf
xchg
or
add
sub
test
mov
push
mov
in
pop
out
cwtl
pop
xor
mov
pop
xchg
push
mov
sbb
xchg
pop
js
jae
sbb
inc
pop
loopne
or
dec
lock
xor
std
ja
fistl
int3
cmpsb
inc
outsl
lock
mov
lret
lds
push
adc
mov
cmpsb
xchg
dec
xor
lock
inc
pop
mov
cmpb
stos
pop
mov
daa
js
ffreep
daa
hlt
pop
stc
mov
pop
lods
cmovae
adc
cld
adc
testb
pop
cmp
or
dec
cmp
enter
popf
insb
sub
mov
cli
mov
stc
dec
inc
cmp
lea
outsl
push
in
test
lret
imul
pop
pop
popl
int
pop
push
jge
and
mov
icebp
rolb
in
cmpsl
frstor
loop
test
cs
or
cmc
adc
test
add
stos
mov
rcr
add
push
add
sub
or
jg
in
mov
fsubl
ljmp
dec
fists
mov
aad
inc
add
clc
sub
and
fistl
divl
push
fwait
cmp
rcrb
data16
dec
cli
xorb
fistps
adc
jge
fstl
dec
pusha
in
int3
hlt
adc
int
xchg
data16
outsl
push
pusha
idiv
lods
add
or
lret
int3
add
fisubl
adc
inc
mov
cmc
mov
cmp
jno
xor
jg
xchg
mov
gs
cmp
and
dec
pop
call
rclb
push
mov
jle
xchg
push
fisubl
fs
sbb
lret
cmp
dec
out
jbe
in
sbb
inc
outsb
mov
ja
pop
xchg
mov
clc
push
xor
xlat
adc
push
xor
add
mov
push
inc
pusha
sub
addr16
call
mov
lret
mov
enter
mov
mov
inc
aam
cmc
jge
leave
pop
std
mov
inc
test
mov
cmc
xchg
repz
clc
xlat
sbb
pop
xchg
sbb
stos
cmpsl
push
cmp
outsl
xor
push
mov
push
mov
jns
adc
pop
pop
jp
jg
faddl
insb
into
scas
cmp
jmp
jne
insl
out
test
pushf
cmpsl
testb
mov
mov
aam
inc
adc
test
sub
out
mov
dec
movaps
mov
pop
adc
les
ret
xor
xchg
outsl
dec
fsubp
out
jg
mov
scas
scas
fnstsw
sbb
cmpsb
fs
and
imul
icebp
sub
cld
lods
faddl
adc
andl
sub
icebp
stos
int3
scas
mov
les
add
adc
fs
loopne
xor
dec
sbb
jp
and
daa
mov
push
xchg
push
inc
and
inc
addr16
outsl
or
or
loopne
sub
imul
mov
lret
rol
jle
sti
and
inc
icebp
inc
movsb
cmpsb
fistps
add
popa
dec
mov
add
mov
adc
aas
push
cmpsl
in
iret
mov
arpl
mov
pop
and
inc
lods
mov
imul
mov
xchg
inc
sub
imul
sub
jl
les
enter
clc
repz
aam
lock
adc
outsl
push
push
jecxz
xor
lret
add
push
ja
mov
in
and
out
lahf
icebp
rorl
inc
adc
int3
pop
scas
adc
add
jl
loop
xlat
adc
xor
gs
stc
shlb
adc
dec
shll
xchg
pop
popf
xor
and
push
and
pusha
sub
push
aad
sub
xchg
pusha
lcall
repz
xor
faddl
aas
mov
sbb
out
test
lods
jb
mov
movsl
mov
cltd
stos
mov
xor
mov
jmp
subb
repz
inc
imul
mov
fs
push
sub
jl
xchg
sbb
insl
lret
icebp
scas
push
lea
scas
cld
lret
pop
dec
xchg
xchg
xor
mov
dec
leave
and
or
mov
sub
fs
arpl
push
cld
mov
mov
popf
add
ret
loope
inc
aaa
inc
xorb
dec
cmpsb
push
jmp
jl
jmp
jg
clc
inc
mov
jno
jge
or
mov
xor
pop
push
popf
mov
clc
mov
inc
add
jle
clc
negb
lea
fldenv
in
cmc
push
outsl
shl
xor
pushf
push
not
xchg
fiaddl
arpl
in
addr16
jp
or
pop
dec
mov
loope
pop
idivl
pop
int3
or
out
or
outsb
sbb
mov
fldenv
inc
sub
push
fdiv
pop
movsb
fwait
test
sahf
cli
inc
pop
xchg
in
dec
mov
lahf
mov
stos
mov
mov
insb
orb
fstps
pop
push
inc
mov
or
loopne
xchg
add
push
in
shll
test
nop
movsl
mov
mov
sub
mov
add
outsl
or
mov
mov
sarb
fisttpll
aam
bound
outsb
daa
or
jno
sub
fistpll
push
lahf
or
cmp
ds
loop
stc
into
add
cwtl
movsl
faddl
jp
fldl
pop
mov
lret
icebp
cmp
xchg
cld
rolb
fidivs
and
cmpsb
pusha
es
pushf
push
and
push
xchg
jge
cmp
push
and
out
xchg
sbb
in
dec
int
cmp
arpl
enter
stc
je
mov
dec
mov
inc
jbe
je
test
sti
shlb
jecxz
mul
mov
into
pop
imul
stos
sbb
testl
xor
lock
add
mov
xor
sbb
ficoml
mov
dec
sbb
pushf
lahf
fbld
mov
fwait
jno
jne
inc
xchg
and
loop
sbb
xor
and
push
push
xchg
mov
sub
mov
add
outsb
and
popf
hlt
popl
mov
nop
mov
mov
lahf
lods
bound
dec
push
testl
es
fiadds
shlb
addb
stc
mov
inc
or
sub
or
adc
and
cmpsl
pop
popa
push
cmpsl
cli
loope
test
cmp
inc
and
xlat
insl
jecxz
sub
and
in
andb
test
xor
or
and
jnp
fnsave
cmpsl
cmc
xchg
in
sbb
mov
aad
scas
or
xor
pop
in
fwait
inc
inc
add
sbb
and
mov
jmp
push
push
out
push
aad
test
jecxz
mov
pop
fnstsw
dec
mov
and
hlt
fldl
xor
ss
ja
idiv
fs
fdivs
mov
pop
jno
in
sub
ret
push
push
lea
push
cmp
and
loope
ret
mov
or
stos
lret
cmc
arpl
mov
adcb
cmp
fcmove
loopne
mov
dec
ss
add
inc
inc
cmp
jne
loopne
mov
push
jnp
sub
data16
or
mov
fmul
pop
fisubrl
jg
cltd
add
adc
rolb
in
cmp
dec
jno
xor
pop
and
cmp
pop
hlt
call
xchg
enter
cmp
mov
mov
test
pop
cmp
subb
cmpl
and
inc
sarb
cmp
dec
insl
fincstp
mov
xchg
insl
mov
call
jecxz
out
imul
cmpsb
mov
int
and
addb
faddl
and
push
sbb
fsubrl
pusha
popf
cltd
jp
andl
cmp
or
lcall
and
repz
inc
xchg
bound
inc
cmp
or
adc
pop
lods
lods
jnp
or
mov
out
jne
jbe
js
adc
xchg
push
fcomi
jmp
std
sbb
hlt
dec
nop
ret
jns
dec
ds
cltd
dec
jge
cwtl
add
inc
bound
sbb
fwait
in
pushf
test
cli
mov
inc
sbb
iret
mov
and
inc
jmp
test
jle
xchg
inc
lahf
iret
inc
shrb
pop
dec
or
jo
lods
jbe
pusha
dec
js
ja
or
jno
xchg
and
out
repnz
icebp
inc
pop
sbb
push
jbe
mov
stc
xchg
add
push
sub
dec
cmpsl
lods
mov
mulb
pop
mov
pushf
push
jp
inc
adc
sarb
call
pop
add
imul
in
test
dec
xor
xor
les
ds
dec
in
mov
ljmp
call
test
pop
xor
or
fwait
inc
push
sub
push
and
out
mov
dec
inc
fstps
mov
mov
jge
or
xchg
pop
pop
nop
out
pop
jnp
xchg
stos
xor
jmp
cwtl
sti
and
xor
mov
roll
or
jns
imul
insl
xlat
xchg
into
jg
mov
loope
xor
fst
rcr
loop
mov
adc
pop
movsl
leave
loope
lods
roll
in
repz
cwtl
ss
lods
mov
lret
push
dec
sbb
dec
jg
aam
pop
in
cmp
or
mov
jb
ljmp
daa
pop
pop
push
ja
mov
xor
push
stos
insb
in
add
ret
cli
rorb
xor
insb
gs
shll
nop
ja
repnz
fistps
cmp
jno
add
cmp
rolb
and
popa
cmpsl
xor
mov
test
fdivr
jmp
inc
sbb
sbb
push
pop
xlat
mov
insb
lea
xor
ljmp
outsl
inc
mov
out
xchg
das
mov
push
xchg
cmovle
test
jnp
ljmp
ss
leave
cmp
pop
loope
inc
lea
mov
je
mov
fs
xchg
adc
or
push
leave
lcall
loop
fsub
add
into
jo
push
sub
popa
jo
dec
out
out
daa
ja
sub
lock
repz
mov
jb
lret
mov
dec
sbb
or
stc
mov
in
inc
cmpsb
cmp
movb
movsl
lods
cmp
iret
inc
inc
roll
movb
mov
adc
jno
and
mov
loop
push
fisubrl
aas
cmpsb
movsb
mov
push
push
repnz
push
dec
adcb
dec
dec
xor
jle
push
incb
out
inc
sarl
cmp
int
adc
cmp
push
jmp
adc
negl
loope
adc
lods
enter
sarb
rclb
test
or
fidivl
and
push
add
dec
insl
ficoml
ficoml
insb
jmp
sti
stc
jmp
bound
adc
push
pop
cmp
or
pop
imul
jae
testb
es
ss
mov
jo
adc
inc
cmpsb
pop
ljmp
xlat
les
cs
fwait
dec
jnp
fisttpl
loopne
push
jnp
lds
sub
jo
cmpsl
jne
push
adc
outsb
mov
and
cmc
jmp
xchg
int3
and
loopne
in
or
jnp
pop
xchg
adc
fcmovnb
push
ja
push
pushf
xchg
add
faddl
dec
bound
lret
and
jecxz
into
rcll
fwait
mov
mov
mov
dec
sbb
xchg
loope
mov
bound
jnp
stos
into
mov
inc
and
leave
mov
cmc
push
sub
outsb
aad
xchg
popf
cs
xchg
jno
xchg
inc
test
mov
int
dec
push
mov
jge
jae
push
ret
and
xchg
fldl
fstpl
dec
shrb
aas
pop
mov
outsb
jl
ds
js
stos
push
xchg
and
pop
mov
dec
cmp
xchg
stc
mov
int
inc
push
notl
iret
dec
mov
xchg
dec
hlt
sahf
cltd
in
pop
movsl
in
xchg
sub
idiv
push
jae
jns
add
cmp
stos
sbb
xlat
int
out
imul
dec
and
push
jp
stc
arpl
jg
xor
dec
mov
push
push
xchg
dec
mov
stos
jmp
or
push
cmp
lock
sbb
js
aas
xchg
loop
push
xor
pop
je
add
jno
arpl
pop
andl
movsl
mov
xor
sbb
cs
decb
lods
push
inc
fcomp
cmp
pop
mov
cmp
icebp
xchg
sub
push
bound
pushf
push
enter
in
dec
or
rcll
mov
ljmp
mov
sub
insb
xchg
push
stos
lds
mov
ss
aas
mov
mov
incb
dec
xchg
jno
xchg
or
icebp
cmp
push
pop
cli
in
cltd
xchg
or
jp
cmp
xchg
ss
repz
xchg
and
mov
dec
outsl
filds
test
sbb
cmc
mov
fsubr
sahf
xchg
mov
stos
lcall
adc
dec
push
repnz
in
dec
mov
mov
sbbl
lock
mov
cmpsl
pop
mov
push
cmp
lock
push
inc
push
dec
sub
rolb
push
xor
iret
mov
mov
data16
mov
aaa
xchg
pop
cltd
out
bnd
mov
jp
mov
and
sub
andl
ud2
pop
mov
inc
sti
fucomi
xor
inc
jge
push
gs
inc
jbe
das
stos
dec
rorl
push
hlt
faddl
ljmp
mov
cmp
inc
mov
jl
aas
stos
inc
les
mov
sub
and
lcall
lcall
pop
fxam
add
xchg
or
push
sahf
jne
sbb
lahf
pop
ja
cld
shrl
aaa
dec
repz
test
mov
sbb
sub
orb
fldcw
cmpsb
je
pop
rclb
and
addr16
mov
jno
mov
mov
std
or
push
loop
and
stc
sbb
or
and
or
cmp
and
movsb
xor
inc
dec
gs
add
xchg
int3
adc
and
mov
inc
hlt
pop
dec
and
cmp
into
push
ljmp
clc
imul
xchg
xchg
xchg
in
loope
mov
push
jmp
subl
cmpsl
mov
imul
xchg
add
mov
xchg
sbb
cmp
sub
mov
jo
ret
jmp
cmp
sbb
xor
aas
in
dec
inc
adc
mov
out
mov
clc
push
add
and
jns
jecxz
dec
and
adc
lods
enter
add
sbb
faddl
xor
pshufw
divb
and
cs
sti
inc
movsl
inc
into
mov
int
mov
insl
jno
cli
stos
inc
sbb
add
into
dec
add
decl
or
int
xchg
sbb
mov
test
aam
es
setle
scas
and
shlb
mov
add
jns
ret
pop
jmp
push
lods
or
pop
mov
and
fucomip
and
insb
jle
push
shrb
ficoms
shr
sbb
sub
imul
cmp
push
aam
or
mov
inc
cmp
movsl
scas
lods
enter
push
loopne
pop
out
sub
mov
mov
xchg
push
mov
xor
mov
pop
loope
mov
push
iret
es
lahf
pop
imulb
sub
push
lds
lcall
inc
or
inc
sub
mov
or
dec
xor
mov
jbe
jmp
sub
jnp
pop
xor
mov
push
cmc
push
pop
xchg
mulb
add
nop
mov
ret
jl
dec
mov
fiadds
inc
lea
aaa
jl
roll
leave
aad
add
adc
xlat
lret
flds
pushf
addr16
and
stc
pop
rcr
sti
and
shrl
dec
xchg
es
adc
lods
pusha
shrb
adc
nop
pusha
je
inc
ss
sbb
dec
mov
fidivrl
sarl
mov
jle
shll
mov
mov
jno
test
push
ds
lea
cmp
ds
repz
iret
sbb
ret
xchg
cmp
fnsave
sub
nop
mov
cmc
lds
shrb
jb
ret
mov
push
stos
daa
push
je
jl
xchg
je
push
lret
or
popf
std
mov
add
es
lret
inc
xchg
and
int3
out
lret
insb
lret
mov
inc
pop
mov
mov
xor
lea
jl
sub
mov
and
xchg
and
shll
shrl
mov
sbb
mov
popa
lcall
in
add
movsl
enter
push
daa
in
inc
into
leave
in
sbb
xchg
fadds
lods
xlat
pop
jg
ficoml
sub
mov
insl
push
cltd
ja
es
xor
hlt
insl
sbb
bound
cwtl
add
aas
push
gs
mov
pop
pop
aaa
cmp
xchg
and
push
out
xchg
hlt
nop
sub
mov
pushf
mov
mov
mov
pop
addl
push
and
cmpsb
add
dec
cmpl
mov
push
lcall
push
scas
or
jae
in
adc
outsb
xor
outsl
out
mov
sbb
jmp
negb
into
subl
fsubs
jl
fwait
aaa
xorl
add
add
dec
xchg
inc
cmp
outsb
outsb
sub
cwtl
pop
sub
js
in
outsl
imul
das
add
mov
mov
jmp
hlt
or
in
push
frstor
adc
dec
mov
bound
xor
or
ja
fisttpl
mov
and
subl
mov
push
mov
andl
xor
and
lods
mov
lret
push
enter
subb
mov
stos
call
mov
cltd
xor
sbbl
test
arpl
sub
mov
pop
mov
gs
loopne
cld
gs
subl
aad
call
lret
jp
ds
mov
xchg
mov
in
and
jg
pop
cmp
aaa
push
ja
inc
xchg
dec
sahf
and
jge
mov
jbe
sub
out
or
jae
inc
imul
pop
and
aaa
loop
xor
and
dec
ss
and
add
adc
push
adc
jecxz
repnz
adc
pusha
nop
cmpsb
enter
xchg
dec
dec
mov
pop
shr
adc
mov
or
cltd
das
ret
and
jne
add
pop
jmp
icebp
push
mov
fildll
mov
cmp
mov
fwait
sbb
out
inc
clc
xchg
in
adc
jns
test
stc
mov
pop
test
data16
or
push
popf
sub
mov
fdivs
cmp
adc
sahf
xchg
dec
cli
shl
push
dec
gs
mov
push
and
pop
cmc
rcrl
and
sub
and
dec
and
arpl
rorl
mov
int3
xchg
movsb
adc
lock
xor
cwtl
jge
xlat
stos
xor
fs
rorl
add
inc
out
jg
mov
mov
or
int3
xor
and
clc
lea
push
pop
repnz
imul
jbe
cmp
ret
popa
add
cmp
jno
les
ljmp
arpl
stos
add
xchg
sub
lock
imul
add
and
jecxz
mov
call
addr16
lahf
pop
cmp
icebp
sbb
inc
jae
testl
mov
cwtl
hlt
mov
fcompl
test
cli
stos
movsl
sbb
xor
xor
mov
xor
mov
call
fnstcw
cmpsb
inc
cmp
jne
scas
adc
or
dec
inc
xor
jge
pop
jmp
fldcw
loopne
xor
pop
xchg
out
inc
pusha
pop
cwtl
pushf
or
loopne
inc
stc
mov
pop
mov
ret
add
scas
enter
push
fistl
cli
lods
pop
shl
jl
mov
into
in
nop
enter
je
stos
repz
mov
in
in
shl
xor
xchg
out
out
mov
lret
pop
jb
mov
pushf
cli
jp
cmp
mov
add
mov
lcall
in
into
aad
out
sbb
cmp
jmp
outsb
pop
cmp
or
sub
xor
xor
and
aam
rcll
add
sub
mov
pop
int
out
sti
jo
sbb
movsb
je
in
mov
shl
mov
imul
xor
sbb
sbb
sbb
inc
or
mov
ss
xchg
inc
loope
dec
mov
outsl
lock
mov
sbb
arpl
xor
subb
dec
xlat
movsl
push
lods
insl
push
mov
sub
negl
scas
ret
jmp
inc
sbb
enter
or
mov
or
pop
sbb
imul
movb
add
push
ret
scas
push
stos
jle
repnz
sub
xlat
pop
xchg
scas
cmp
sbb
or
int3
leave
cmc
das
repnz
pusha
push
pop
pop
sarl
js
lret
dec
ljmp
les
shll
dec
push
sbb
jp
push
mov
mov
aad
mov
test
xchg
test
or
fnstsw
jne
push
sbbb
pop
push
mov
adc
inc
push
in
lock
out
or
pusha
sbb
or
jge
stos
and
dec
sub
sbb
mov
dec
add
xor
bound
sub
push
test
mov
rcrb
mov
and
lods
cmp
push
mov
pop
ljmp
lret
push
xchg
sbb
pusha
jnp
or
xor
xor
add
jp
lcall
popf
loopne
mov
int
jp
popf
fdivrl
popa
dec
xchg
lock
clc
rorb
imull
xchg
loop
jbe
inc
pop
adc
fst
jns
pop
mov
bound
cld
mov
lret
stos
pop
xchg
bound
inc
test
sub
in
ds
dec
stos
int3
shl
inc
sub
adc
pushl
dec
cmpsb
cmp
add
xchg
stc
inc
daa
mov
mov
jecxz
or
push
sub
mov
pop
mov
sbb
push
inc
xchg
xor
xor
int
sbb
xlat
sub
lods
pusha
mov
push
sahf
movsb
addr16
sahf
andb
in
pop
push
int3
mov
dec
inc
add
cld
pusha
cmc
or
cmc
mov
jne
pushf
ret
add
cmp
cmp
hlt
mov
sbb
clc
mov
mov
int3
aad
pop
testb
inc
adc
fcmove
mov
inc
adc
insl
int
ret
stos
outsl
iret
adc
dec
sqrtps
mov
out
mov
test
inc
jbe
xchg
mov
mov
or
inc
mov
mov
icebp
sbb
jle
pushf
test
call
xor
test
jg
mov
lods
pop
push
and
out
xchg
jg
mov
cltd
xor
jbe
cmp
xor
lods
mov
mov
jecxz
addr16
add
fisubrl
sahf
seta
cmp
push
movsl
inc
movsl
mov
jecxz
adc
test
imul
repz
adc
adc
mov
ljmp
inc
fisttpll
mov
aam
roll
cli
xchg
fisttps
cltd
popa
inc
adc
jnp
inc
pushl
ja
xchg
adc
ret
or
fsubrs
or
jge
ret
decl
ss
insl
fnsave
xchg
xchg
xor
jmp
add
daa
cmp
mov
gs
mov
imul
or
pop
cld
test
adc
repz
popa
cmp
mov
fiaddl
sahf
add
xor
and
ret
or
repnz
ja
pop
adc
mov
dec
test
stos
popf
mov
mov
fidivs
sub
adcl
sbb
ss
hlt
inc
aam
pop
cmovnp
cbtw
fnstenv
push
push
or
xor
lea
dec
cmpb
stos
outsl
inc
dec
and
loop
out
lds
ljmp
sub
inc
jle
pop
dec
aas
cmpsb
cwtl
stos
mov
or
inc
mov
fistl
int
and
sbb
cmp
adc
int
inc
adc
shll
jl
mov
adc
push
ficoms
cmp
out
scas
test
push
adc
mov
lea
jns
xchg
gs
mov
rclb
repz
int3
pushf
mov
hlt
insb
clc
lods
sahf
xchg
adc
jge
insb
or
or
in
add
fucomp
lret
pop
pusha
shrl
pusha
shlb
movsb
cmpsb
cmp
sub
mov
and
cmc
sbb
cmp
jg
ljmp
pusha
stc
es
pushf
scas
adc
stos
jno
icebp
jg,pt
sub
addb
dec
test
pop
lods
cmp
dec
rorb
mov
inc
sub
and
pop
dec
fistpl
dec
push
loop
pop
cmp
or
imul
dec
push
popa
popf
and
xor
sub
and
xchg
add
mov
and
xor
lea
fsubr
cmp
jmp
xchg
insb
mov
ss
movsl
into
xchg
or
stos
jno
in
mov
lret
int3
xchg
sbb
loope
movsb
addr16
loope
or
orb
push
sub
ss
or
in
mov
sbb
movntq
out
jg
out
popa
push
stc
or
add
scas
pop
fcomip
push
je
cltd
rolb
mov
jo
jb
daa
mov
push
push
cs
sub
or
das
dec
loop
pop
or
xor
push
mov
out
sub
jmp
rcrb
popf
fists
mov
cmp
mov
dec
std
adc
mov
imul
testl
lret
mulps
jle
inc
or
outsl
inc
push
nop
mov
sti
inc
jae
and
lock
mov
dec
mov
clc
clc
inc
inc
add
or
rolb
dec
and
mov
in
nop
add
fwait
push
leave
mov
mov
out
mov
clc
ljmp
int
mov
mov
pop
sbb
sbb
lods
dec
arpl
pop
das
xchg
sti
add
mov
mov
and
jne
push
dec
int3
push
push
outsb
in
cmp
xor
test
dec
mov
loopne
and
and
inc
stos
stos
xor
add
cmpsl
in
adc
push
or
enter
popa
test
push
lea
insl
addr16
sbb
mov
sub
push
xor
jmp
mov
repnz
and
adc
push
and
cmp
dec
adc
imul
xor
push
out
stos
sar
pop
int
xor
mov
and
or
leave
mov
cli
and
push
jae
cld
mov
inc
imul
je
xchg
xor
aad
iret
mov
adc
inc
sbb
gs
mov
out
or
jae
inc
addb
stc
sbb
cs
jg
iret
pop
sbb
loopne
ds
jno
xchg
dec
sub
cmpsl
xchg
ret
out
imul
call
pushf
gs
jno
pusha
aas
cs
xor
mov
push
test
xchg
scas
cmp
and
mov
cmp
out
add
xchg
jmp
sub
jle
cs
ss
mov
mov
shlb
jo
aad
dec
pop
or
xchg
adc
jb
les
sbb
jne
imul
sub
not
cmc
push
push
push
pushf
xchg
hlt
aad
enter
and
rol
movsl
mov
add
adc
inc
inc
stos
cmpsb
dec
movb
lods
xchg
cmp
out
cmpl
sbb
negl
xchg
or
jb
add
aad
test
pop
pop
aaa
push
and
push
jo
movsb
jbe
pop
aas
ret
xchg
ret
adc
xor
sub
inc
movsb
mov
adc
pop
fcmovne
jg
cmp
into
sub
xchg
push
sub
sahf
movsb
xlat
add
ret
in
push
sahf
inc
sub
sub
inc
cmc
lahf
jae
mov
sbb
ret
mov
outsl
xor
cld
adc
daa
cmc
lret
lahf
adcb
sbb
popf
sahf
aas
adc
inc
fdivl
mov
push
xchg
push
lods
cwtl
das
ljmp
cmp
inc
cmpsl
out
lods
andl
into
daa
push
lret
pop
lods
push
xchg
mov
mov
ds
adc
push
movsl
pop
sub
dec
cmpsb
inc
adc
pusha
test
mov
xchg
repnz
dec
insl
outsb
aas
mov
hlt
and
mov
mov
jl
dec
jnp
xchg
or
add
and
cmp
cmc
xchg
cwtl
int
or
mov
adc
mov
cs
push
xor
shl
mov
ret
test
fucomip
mov
out
add
cmc
pop
jns
test
sub
cmpsb
icebp
std
mov
jecxz
and
mov
inc
pusha
sarb
push
aam
dec
shlb
dec
add
sbb
mov
push
fs
adc
or
mov
fbstp
rol
fnstsw
inc
js
cli
addr16
jno
fisubs
mov
das
xor
inc
sbb
das
mov
jmp
add
orl
fildl
orl
xor
cmpb
xor
aas
aaa
js
add
imul
or
les
inc
pop
mov
mov
pop
test
inc
cs
adc
jne
push
push
insl
fstpt
sub
inc
ds
mov
out
mov
pop
shll
repnz
adc
inc
mov
adc
lahf
rcll
pusha
popf
xlat
cmp
dec
cmp
fdivrs
xchg
fisttpl
jno
rcrl
pusha
jns
xchg
inc
inc
push
mov
sub
mov
sub
dec
fcoms
or
mov
imul
insl
loop
out
mov
mov
out
mov
jle
mov
xchg
js,pn
adc
mov
xorb
dec
jle
add
jp
jae
cmp
fs
mov
pop
xchg
xchg
mov
push
dec
cwtl
xor
add
push
mov
ljmp
cmpsl
cld
push
out
inc
dec
lret
clc
iret
xchg
mov
shrb
pop
cmc
aad
pop
sub
mov
outsb
in
pop
imul
pop
dec
dec
dec
jnp
xchg
xchg
cmp
sub
insb
jl
aad
jnp
das
ljmp
movb
cmp
xchg
and
xchg
mov
scas
push
jmp
inc
test
je
dec
cli
adc
pop
push
aad
pop
in
and
aas
hlt
test
jecxz
push
sahf
mov
test
push
cld
mov
jb
xchg
xchg
push
and
push
sbb
fsubs
jnp
std
adc
adc
jnp
adc
push
in
lret
faddp
bound
in
and
push
ja
mov
mov
mov
imul
mov
jo
dec
outsl
addr16
xchg
xor
pop
ffreep
mov
mov
int
andl
push
movsb
jns
sbb
int3
mov
push
mov
dec
fcmovnu
popa
sub
shr
adc
fbld
inc
int
cmp
push
push
sbb
scas
or
sub
mov
jae
add
dec
inc
js
outsb
jmp
inc
movsb
call
mov
xchg
lret
fsubl
adc
mov
inc
sahf
int
pop
mov
sub
dec
sbb
imul
mov
pop
add
jecxz
or
int
push
sub
ja
cmc
or
xor
in
xchg
jns
sbb
push
jmp
xchg
daa
or
cltd
js
lods
xor
fdivr
ret
adc
jo
jge
popa
mov
cmpsl
jae
fimull
pop
bound
jne
arpl
mov
sub
roll
sti
adc
inc
pop
pop
in
insb
inc
aad
das
loope
adc
dec
mov
mov
dec
out
rclb
popa
mov
mov
cs
cmc
cmp
xchg
push
cmpsb
push
lcall
stos
insb
pop
into
adc
jne
pop
or
fnstcw
mov
imul
sub
push
jg
sti
xchg
out
jmp
into
inc
test
push
aas
mov
xor
adc
sub
push
sbb
pop
xlat
and
mov
lods
sbb
push
cs
add
imul
adc
mov
add
xchg
cmpsl
mov
out
popa
mov
pop
and
ss
dec
jcxz
push
jno
and
mov
xchg
dec
pop
pushf
push
jne
dec
scas
rcrl
jno
mov
cmp
adc
lret
dec
pop
inc
or
push
xor
push
add
xchg
stos
add
lret
movsl
ret
int3
adc
mov
xlat
std
jp
out
rcrb
adc
lret
xlat
pop
mov
loope
repz
lea
stos
inc
int
fdiv
adc
sbb
aam
leave
dec
mov
mov
xor
ds
push
cmp
inc
mov
repz
out
xchg
shlb
add
cmp
lret
mov
mov
mov
leave
ret
daa
imul
sahf
rclb
mov
push
adc
sbb
cmp
ljmp
sahf
sub
adc
pushf
fcoml
xchg
jae
push
js
pop
pop
insb
call
subb
sbb
js
push
mov
cmp
jg
mov
mov
lret
les
dec
jmp
loope
or
loopne
stc
enter
popf
ja
cltd
incl
cmc
sti
daa
add
cld
out
lock
jae
xor
inc
daa
ja
mov
mov
call
pusha
iret
or
and
int
js
cmc
outsl
shlb
call
out
roll
repz
orl
mulb
inc
pushl
ljmp
jae
push
jo
and
sub
aas
fstps
inc
lahf
es
adc
jmp
push
jbe
add
aam
lret
rcll
mov
pop
int3
push
ret
test
push
push
call
pop
out
adc
pop
call
jae
bound
das
cwtl
outsb
adc
shr
shlb
int3
stos
dec
int
sub
out
arpl
xchg
popf
insb
movsb
mov
cmp
jmp
stos
ljmp
cmp
sub
xorl
in
jbe
scas
scas
pusha
and
pop
insb
mov
xor
in
jne
push
cmpsb
stc
mov
xchg
fistl
or
shll
icebp
fwait
out
lret
xchg
fucomp
es
xchg
add
mov
fsub
mov
imul
or
sbb
xor
mov
inc
dec
lret
leave
or
outsl
popf
leave
mov
jne
imul
pop
ss
sti
shl
dec
loopne
adc
mov
add
or
in
aam
into
fs
mov
es
adc
outsb
jmp
test
std
jno
pop
and
fwait
repnz
mov
push
push
and
outsb
movsb
cli
xor
add
testb
sahf
fildl
push
test
dec
je
in
jne
jmp
ret
lock
mov
adcl
out
sub
push
stc
push
mov
mov
add
xorb
cli
sbb
cmp
orl
fdivrl
lcall
xchg
adc
sub
pop
add
add
int
nop
xchg
push
xor
mov
mov
stc
mov
pop
and
loope
pop
js
cmc
jle
out
cmp
push
divb
loop
popa
push
and
mov
loop
ds
stc
dec
sbb
mov
test
jp
xorb
jge
pop
push
dec
dec
mov
sbb
adc
jo
push
jmp
push
pop
adc
fdivp
stos
lds
push
jo
push
movsl
add
xor
lods
or
enter
imul
and
stos
xor
mov
stos
repnz
popf
mov
xchg
sub
into
rcrb
xor
mov
jb
lcall
xor
inc
mov
fld
lods
sahf
test
aaa
lcall
add
cmpsb
loopne
in
mov
rcrb
mov
scas
adc
out
cmp
and
cmp
jg
xchg
enter
enter
push
loopne
push
xchg
sub
cmp
icebp
das
shrb
sbb
or
mov
ret
in
jl
inc
xor
jae
movsb
inc
sbb
or
cmp
cmpsl
out
enter
push
push
call
or
fsts
cmovno
xor
sarl
xchg
dec
lods
mov
or
mov
ret
cmp
cmp
insl
mov
ret
mov
xchg
in
add
pop
imul
xor
movsl
mov
mov
sar
mov
loope
or
aaa
jle
leave
mov
xor
rclb
ret
stos
imul
pop
ficomps
lock
cmp
icebp
mov
fidivs
in
sub
pop
loop
mov
scas
push
inc
out
popa
ficoml
add
pusha
int3
repnz
cs
icebp
sti
fnstcw
or
scas
mov
xor
es
aaa
adc
cmp
int3
lds
cmp
push
mov
push
xchg
adc
adc
fnstcw
xchg
shr
lret
mov
mov
add
sbb
adc
jae
push
xor
mov
xchg
push
xor
jo
fmull
jecxz
outsb
mov
movsb
test
lcall
mov
cmc
jge
test
loop
or
mov
pop
xchg
cld
mov
push
bound
xchg
jg
inc
cmpsl
fstpt
loop
add
and
sbb
inc
int
cmc
add
dec
inc
pushf
orb
insb
test
mov
push
sub
mov
adc
mov
mov
mov
outsl
cmpsb
jmp
jecxz
in
mov
ret
fsubrp
lcall
add
incb
je
push
cmp
dec
jne
test
jns
sbb
das
ret
repnz
or
xchg
xchg
sub
cmp
frstor
push
and
xchg
fisubrl
arpl
dec
jecxz
pop
test
mov
adc
sbb
push
adc
test
call
push
lret
adc
jp
add
mov
das
add
add
repz
ss
ja
mov
xor
xor
decl
stc
mov
push
push
xchg
xor
arpl
adc
imul
xchg
xor
mov
in
cmc
inc
daa
mov
clc
add
mov
test
insb
fldcw
stc
test
push
xor
nop
sub
cmpsb
scas
pusha
mov
into
mov
es
shrl
xor
mov
push
mov
push
mov
in
mov
test
fsubr
inc
pop
mov
add
mov
data16
and
jb
js
lods
xchg
ret
mov
lods
loopne
push
or
bswap
mov
outsb
mov
out
xchg
fstpl
fs
outsb
gs
or
xchg
mov
jb
in
lcall
aam
shlb
mov
gs
fs
cmpsb
mov
push
stos
mov
and
test
in
cmp
sahf
sarl
xchg
cmp
sysexit
pop
and
ja
iret
mov
xchg
adc
mov
imul
rcrb
inc
lock
das
lret
cmp
mov
call
jmp
push
imul
mov
mov
sbb
jge,pn
cwtl
rorl
cmp
loopne
fcomi
mov
icebp
lret
push
and
and
incl
mov
mov
pop
out
mov
mov
movsl
cmp
decb
cmp
repnz
push
jae
mov
lds
aas
daa
adcl
ss
hlt
lock
sub
aad
loope
or
outsl
out
jbe
sub
repnz
adc
dec
cmpsl
pop
jecxz,pn
jg
pop
sti
lock
divl
sub
lods
add
mov
and
sub
jno
dec
dec
jne
jns
or
mov
xchg
pusha
lods
cmp
call
mov
imul
mov
jae
xor
test
call
mov
cli
mov
scas
insb
add
cs
adc
ds
fcomip
sbb
mov
add
xor
mov
repnz
xor
jns
std
stos
iret
clc
xchg
push
stos
sbb
fst
out
rcrb
cmc
xchg
testb
xor
sub
loopne
dec
shlb
xor
xchg
int
aaa
sbb
cmpsl
aaa
mov
jmp
lea
jl
mov
jl
mov
inc
or
in
add
cmp
test
jmp
icebp
repz
add
pop
aad
cmp
and
daa
sbb
cmp
insl
cld
and
mov
jnp
xor
loope,pt
rcl
sbb
cmc
outsb
imul
pop
xchg
xchg
outsb
mov
js
push
xchg
aas
cld
outsb
dec
cmp
cmp
xor
jle
xor
mov
inc
xor
or
jns
inc
cmp
fimull
test
add
xor
xor
aas
lea
cmp
ja
lea
xlat
movsl
out
hlt
sub
add
add
inc
jbe
lret
pusha
out
and
pop
aas
xlat
xchg
jne
aaa
cmp
loop
cwtl
aam
sub
imull
jecxz
sbb
into
push
jne
test
movsl
in
mov
jno
orb
cmpsb
push
wbinvd
xchg
jl
adc
cmp
ss
xchg
int
sub
mov
lcall
sbb
je
cmp
cltd
leave
push
fucom
pop
aaa
shlb
scas
jns
xor
test
pop
insl
or
mov
push
xchg
pop
jmp
jae
movsb
outsb
cmpsb
stos
cmp
sbb
movsb
mov
mul
lahf
jge
int
rolb
dec
jns
outsl
sub
push
xlat
call
pop
fisubl
loope
add
mov
xchg
mov
imul
aam
arpl
out
cmp
lock
icebp
sbb
xor
dec
or
xchg
add
je
ljmp
xchg
stc
outsb
mov
cmp
mov
lods
aaa
push
popa
in
enter
pusha
pop
add
lods
fwait
rol
xchg
and
addr16
pop
push
push
ss
pop
lea
lahf
pop
ret
jmp
hlt
rcll
jb
xchg
das
call
adc
xlat
cltd
ss
cli
std
jmp
mov
fnstcw
or
movsb
mov
js
dec
add
roll
icebp
lods
xlat
xchg
xor
popf
fists
mov
push
and
sbb
xchg
mov
add
cmp
mov
push
jmp
scas
xlat
shrl
test
mov
push
dec
icebp
xor
jne
iret
scas
loopne
mov
push
mov
push
sbb
push
pusha
adc
enter
pop
popf
subb
pop
adc
pusha
inc
cmp
ljmp
xor
sbb
cwtl
mov
rorl
mov
xor
cmpsb
gs
shll
mov
out
dec
pop
repz
xchg
sar
sbb
sub
sub
sbbb
popa
fiaddl
cli
adc
dec
add
shll
ret
push
les
cmpsb
push
mov
ljmp
sub
inc
scas
negb
jge
pop
test
out
mov
dec
pop
sub
bound
je
insb
or
rcr
mov
adcl
sbb
adc
out
std
mov
in
pop
and
jb
pop
push
xor
sub
dec
lret
adc
movaps
sbb
mov
icebp
push
fstpt
add
pusha
dec
pop
out
cmpsl
jb
and
mov
data16
dec
push
or
daa
ror
mov
mov
push
insb
leave
test
repz
mov
insb
ret
out
or
cmp
int
adc
push
jae
push
dec
mov
add
cmp
pop
push
jmp
xor
addr16
cmp
sub
pushf
mov
jecxz
mov
clc
push
outsb
mov
mov
and
mov
mov
ja
cli
mov
mov
xor
jno
test
ja
push
sti
enter
push
cmp
ljmp
push
gs
jl
mov
in
test
fistpl
bound
insl
mov
jl
stc
push
push
add
and
in
cmp
sbb
cmc
jo
movsb
jae
movsb
jno
xor
mov
aam
mov
ja
enter
pop
dec
dec
icebp
adc
in
outsl
ljmp
inc
xchg
imul
es
xchg
aad
iret
ficomps
mov
push
jnp
push
shl
mov
sbb
notl
xor
mov
lret
lea
inc
jbe
je
adc
push
jnp
jmp
add
add
jae
dec
jecxz
aaa
pop
insl
and
xor
cmc
xlat
push
aas
inc
lock
movsb
pop
movsb
xlat
jbe
and
adc
mov
mov
movsl
in
sahf
adc
bound
mov
dec
out
push
xchg
inc
data16
rorl
fldenv
test
wbinvd
std
mov
ljmp
divl
stos
js
lahf
dec
mov
lods
xchg
cld
pop
in
inc
xorl
add
mov
xchg
in
popf
fstpl
mov
xchg
fnstcw
sub
fmull
pop
adc
push
call
mov
adcl
xchg
dec
out
insb
sbb
or
inc
out
mov
cmp
inc
inc
shl
fildll
inc
ss
jne
addr16
pop
enter
lahf
adc
mov
mov
roll
mov
test
lds
xchg
in
out
inc
mov
enter
cltd
aaa
xchg
xor
inc
push
lods
xchg
inc
sub
fucomi
inc
jne
cmp
cmpsl
push
or
pusha
pop
stc
cmpsl
insb
jecxz
dec
xor
pop
test
rorb
std
xchg
lcall
test
xchg
in
pushf
cli
cmp
scas
leave
stos
out
cmp
dec
mov
mov
jo
lods
xor
sub
loop
or
out
ljmp
xor
insb
inc
in
lret
lret
adc
pop
sub
ret
cmpsl
cs
mov
ss
inc
pop
daa
and
aam
sbb
mov
or
lods
fnsave
subb
mov
mov
aas
lods
inc
outsl
popf
mov
mov
ret
loop
mov
repz
sub
jge
cmp
push
jae
add
and
sub
ds
pop
lret
cwtl
jb
hlt
xor
pop
aad
out
dec
mov
aam
mov
dec
mov
cmc
data16
xchg
sub
jl
jge
xchg
lds
push
ret
mov
mul
addr16
scas
mov
jb
xchg
inc
jl
out
push
clc
jg
sbb
roll
cmp
push
push
dec
jmp
sbb
les
xchg
jmp
outsb
xchg
nop
sti
movsl
mov
xor
mov
xlat
lret
xorl
sbb
mov
pop
mov
inc
sbb
stos
fnstcw
sarb
jecxz
adc
ret
mov
fcmovnbe
in
addr16
int
push
test
add
or
rcrb
ret
fucomip
pop
and
push
dec
outsb
mov
sar
cltd
mov
pop
scas
aam
mov
fsubs
lcall
pop
sub
ljmp
push
std
mov
insl
pop
sahf
mov
movsl
mov
orb
in
push
add
adc
pop
leave
es
decl
rolb
repnz
mov
sub
imulb
inc
cmpsl
xor
pop
mov
fists
pop
pop
icebp
je
ljmp
jnp
ret
pop
push
push
insl
dec
xor
arpl
dec
loopne
push
arpl
cmp
rclb
pusha
loope
fwait
push
lahf
jbe
or
rcr
rcll
mov
mov
dec
cmp
jb
mov
jb
pop
push
stos
jnp
and
mov
push
test
push
mov
incl
mov
inc
or
lock
sbb
dec
add
adc
xor
mov
mov
movsl
in
test
push
jl
sbb
pop
pushf
jno
dec
sti
adc
mov
cmp
or
enter
std
lds
xchg
or
fisubrl
cli
es
test
adc
ljmp
das
xchg
sub
jb
pop
pop
sub
inc
imul
sub
addr16
fsub
pop
aaa
fiaddl
leave
movsb
pop
and
lea
mov
in
push
clc
sbbl
int
aaa
mov
and
pxor
cmp
sbbb
jmp
outsb
mov
pop
ljmp
push
dec
mov
stc
xor
mov
into
shlb
inc
pop
andb
xchg
test
sub
adc
gs
xchg
pop
cmc
or
rolb
adc
jl
ret
xchg
sub
add
fcomps
mov
arpl
mov
lods
arpl
inc
aad
push
in
push
mov
sub
jnp
xchg
mov
push
outsl
in
cmp
dec
cld
and
lret
loop
xchg
xlat
std
and
psubb
jno
outsb
cmp
pop
scas
stos
popa
pop
test
pop
cmpsb
lods
sarl
into
add
fs
push
sti
adc
int
sbb
insl
and
mov
mov
rolb
insb
loop
dec
push
inc
cmpsl
mov
inc
fisubl
jl
inc
sbb
xor
jmp
push
movsb
lods
leave
test
andl
scas
push
loopne
xor
mov
xlat
pop
lods
andb
inc
and
mov
in
xchg
pop
daa
cwtl
and
je
ror
testb
pop
sub
add
push
les
sbb
sub
lret
push
outsb
in
sub
jp
fucom
jl
mov
jle
ffreep
into
mov
lods
test
adcl
cmp
ret
aaa
orl
aas
scas
addr16
fists
adc
imul
mov
mov
pop
sbb
out
lahf
shlb
cmp
lret
pop
mov
int3
addl
xorb
fcmovnbe
out
jmp
xor
enter
lea
push
jge
cmc
adcb
pop
out
ss
pop
adc
aas
xchg
adc
lret
push
sub
ljmp
or
dec
pop
leave
mov
dec
mov
test
inc
test
push
or
or
sbb
xchg
int
jmp
lahf
jb
shrl
sub
xchg
sub
ficoml
iret
sub
hlt
xor
xchg
outsl
ffree
push
pop
cmpsb
lret
stc
mov
cmpb
popa
rcrl
sarb
js
in
popa
mov
and
push
and
adc
out
push
cld
pop
popa
mov
std
and
pop
mov
test
inc
push
ud2
jbe
dec
or
jb
add
add
push
ljmp
and
push
rcl
ja
and
outsl
mov
je
notl
fldenv
lods
sbb
inc
leave
cwtl
cmp
push
mov
pop
pop
cmp
and
xchg
lock
push
xlat
xor
dec
stos
add
stc
lock
adc
and
jae
pop
lret
add
orb
aas
leave
aaa
mov
mov
clc
mov
xorl
inc
outsl
mov
xchg
shrl
rorl
loop
push
mov
jp
mov
adc
and
iret
dec
adc
das
sti
repnz
and
lcall
mov
add
pop
dec
mov
repz
cmpb
dec
int3
je
into
jl
orl
pop
test
imul
jb
stos
rorl
negl
mov
cmp
jg
lods
lods
jecxz
inc
fsubrs
adc
lahf
ror
pop
add
ljmp
jle
cmp
pop
sub
pop
or
push
rolb
jo
fwait
insb
inc
mov
out
pop
mov
sub
adcb
lret
or
dec
and
sbb
lock
jp
xor
stos
add
xchg
jle
or
lret
into
cwtl
or
jns
or
xchg
outsl
sbb
mov
sbb
mov
dec
sbb
cld
loopne
xchg
aaa
push
mov
lods
popa
xchg
adc
ret
push
scas
aas
ljmp
fs
cmc
andl
cld
int
movsb
movsb
pop
inc
outsl
push
loopne
outsl
mov
out
and
push
pop
inc
xchg
insb
lods
sbb
jge
les
add
dec
int3
xor
cmpsl
out
cmpsl
nop
pop
ljmp
aas
jbe
push
mov
xchg
cmp
or
cmp
lea
pop
mov
insl
lods
dec
aam
arpl
lret
movsl
lcall
xor
mov
xchg
bound
lret
pop
xlat
jb
popa
stos
loopne
mov
lret
out
std
jecxz
sbbl
pop
inc
xchg
lock
xor
cltd
push
xchg
fs
mov
popa
decl
sbb
push
mov
out
sub
cmpsl
js
jge
call
mov
andb
add
aam
loop
mov
add
test
cmp
xchg
jle
out
xor
icebp
mov
pushf
dec
jae
aas
jmp
mov
jg
hlt
fmuls
insl
clc
cwtl
jae
xor
enter
jae
stos
fnstsw
loop
mov
mov
dec
bound
lods
mov
jmp
push
xchg
movsb
adc
ret
imul
clc
int
out
jle
jge
fwait
cmpsl
sbb
fisttpl
and
mov
addr16
inc
lea
add
dec
int
dec
sahf
and
xor
je
in
jmp
dec
loope
out
jg
in
mov
leave
out
rcrl
pop
aam
mov
pop
gs
mov
push
xchg
and
pop
adc
sbb
sbb
and
idivb
std
arpl
jl
adc
xchg
je
cmpsl
divl
hlt
mull
mov
adc
add
dec
add
mov
jg
loope
dec
pusha
roll
and
push
int
or
popf
clc
or
add
xchg
cmp
mov
push
sub
adc
jg
test
xchg
dec
cli
aad
dec
in
add
clc
jl
mov
add
sbb
push
enter
or
jns
add
mov
pop
push
and
js
pop
add
jl
sbb
cmp
add
fsubrl
shlb
ret
ljmp
mov
xchg
push
inc
inc
add
insb
fadds
add
mov
push
push
cltd
sahf
gs
mov
cmp
fnstenv
add
decl
add
loop
loopne
xchg
add
jo
adc
inc
ds
insb
popa
dec
loopne
imul
pop
testl
add
push
add
addr16
lds
cmp
jo
cltd
scas
cmc
divl
enter
add
fisubs
out
sarl
mov
shlb
pop
fwait
sub
pop
ficoms
sahf
or
or
subl
aam
addl
pop
rcl
adc
cmpsb
loop
decl
bound
and
add
pop
mov
sbb
adc
sub
loope
ljmp
pop
in
cmp
dec
aaa
jns
popf
xor
push
or
mov
ja
dec
jns
xor
in
mov
mov
lret
jl
nop
lahf
push
cmpsl
add
negl
out
mulb
aad
add
loopne
sbb
gs
push
inc
test
lods
add
aam
rorl
xor
ffreep
or
int
mov
mov
lea
and
sbbl
jp
pop
clc
add
lret
int3
lds
shr
inc
cmpl
jl
pop
je
push
push
insb
cld
insl
dec
dec
jo
sarl
arpl
jns
pop
or
lcall
adc
outsl
mov
cmp
xor
fildl
js
sub
push
dec
out
loope
faddl
cmp
movsl
test
aaa
or
repnz
mov
aas
add
inc
lret
movd
fidivrl
cmp
mov
sbb
xor
icebp
out
dec
mov
pusha
xchg
jne
cmp
inc
sti
ficompl
enter
or
hlt
ret
loopne
fsubrl
inc
mov
in
sub
int3
ss
xchg
je
lahf
push
mov
pop
hlt
inc
mov
xchg
lds
pop
or
adc
mov
add
sti
pop
lret
push
sub
stc
mov
or
fs
mov
pop
cmp
aam
xchg
notl
fldcw
xor
adc
xor
add
mov
out
popw
jbe
dec
push
test
pop
imul
jp
mov
xor
stos
loope
out
jmp
lods
cli
stos
fdivl
cmp
dec
sub
iret
popf
inc
enter
xchg
jb
pop
xchg
rclb
push
mov
je
insb
add
push
jle
mul
out
cmp
add
jge
repz
pop
or
fsubrl
add
sbb
sahf
mov
stc
sub
fdivs
dec
sub
outsl
xchg
rorl
jnp
cld
jae
xor
adcl
dec
mov
jmp
test
mov
arpl
js
in
dec
cmpsl
mov
aam
sub
pop
jp
inc
push
cmpb
mov
jo
fidivs
xchg
pop
lret
les
push
xchg
daa
xchg
aaa
mov
push
test
ds
add
iret
call
xor
xchg
pop
xchg
mov
xor
add
sti
or
aaa
mov
movsb
push
dec
xor
test
mov
pop
aaa
inc
xchg
jns
xor
sarb
inc
dec
gs
adc
dec
mov
clc
sbb
imul
in
xchg
and
xor
inc
dec
ja
in
imul
push
jle
cld
lds
loopne
pop
xchg
push
aaa
test
pop
fwait
jb
imul
sub
xor
add
mov
xchg
ja
inc
lock
jle
inc
imul
cmpps
jb
lea
push
inc
sbb
ljmp
pusha
cmp
push
icebp
int3
rol
xchg
cmp
ss
enter
or
nop
mov
pop
std
push
ret
imul
loopne
or
roll
or
jns
add
pop
test
fdivr
js
out
jae
outsl
pushf
mov
ja
leave
scas
shlb
jl
pop
loopne
scas
jno
sbb
repz
data16
dec
int3
and
add
aaa
add
js
xchg
push
jo
pushf
fldl
and
push
mov
stos
sub
mov
jmp
adc
xlat
xor
adc
mov
inc
addl
leave
jmp
add
loop
mov
pop
negl
or
sub
mov
pop
lods
dec
inc
sub
mov
loope
pushf
mov
xor
inc
or
xchg
negl
mov
adc
pop
insl
icebp
into
loop
cld
movsl
sahf
adc
pop
out
jmp
push
cmp
sub
mov
mov
xor
mov
insl
out
in
cmp
stos
setl
cmc
lret
mov
lods
jmp
scas
jle
sarb
xchg
test
xor
mov
insb
mov
mov
dec
aas
or
in
push
jnp
dec
inc
repnz
scas
scas
ja
push
pop
jne
jle
test
dec
and
stc
mov
movsl
push
es
lea
inc
mov
mov
repnz
in
adc
push
or
and
mov
std
enter
jo
add
insl
adc
push
adc
notl
push
mov
outsl
pusha
sahf
mov
rcll
mov
sub
es
fldt
inc
mov
popf
sub
pop
pop
pusha
imul
insl
add
sub
fcompl
stos
loop
pop
clc
jge
loop
xchg
aas
xchg
jmp
mov
and
leave
cwtl
xor
lret
push
outsb
test
push
negb
cmp
aam
pop
clts
mov
leave
pop
int3
cmp
or
xor
mov
or
stc
jle
mov
fnstsw
sub
xchg
call
repnz
ret
inc
push
loopne
stc
cmpsb
shl
aas
frstor
shrl
popf
jns
jmp
pcmpeqw
jge
inc
lock
xchg
dec
ds
inc
loope
jo
sahf
or
push
lea
jmp
dec
loop
iret
dec
repz
test
mov
or
sub
hlt
pop
mov
idivb
in
insb
in
mov
sbb
out
andb
imul
cmp
cwtl
sub
fisubrl
cs
dec
mov
pushf
mov
sub
popa
int3
enter
bnd
test
jecxz
imul
jge
pop
xchg
aas
push
cmp
inc
fnsave
std
dec
lods
xchg
enter
es
ljmp
sub
xchg
mov
js
jge
add
pop
dec
xor
call
or
mov
in
out
filds
fidivl
mov
cwtl
loop
jbe
mov
je
mov
lea
rcr
sub
arpl
shll
ss
aam
mov
loope
test
pusha
into
mov
repz
mov
pop
push
mov
pop
daa
roll
cmp
or
pop
xor
pushf
data16
mov
aas
test
cli
aad
aam
adc
sbb
shrb
or
test
mov
cmc
js
cmpsb
mov
fildll
cmp
xchg
add
lea
mov
cltd
aad
ja
imull
aaa
cli
pop
cs
pop
inc
sbb
in
test
fcmovu
or
and
rorb
xor
push
lahf
scas
or
icebp
das
dec
out
xor
xchg
mov
xor
dec
jns
inc
lahf
scas
xor
comiss
jl
dec
mov
adc
je
lahf
push
filds
mov
cwtl
or
lcall
pop
xchg
test
pop
gs
xchg
in
bound
call
mov
dec
inc
adcl
xchg
scas
mov
dec
dec
cmp
or
jns
ja
test
lret
addl
xlat
aam
data16
cmp
imul
inc
jle
inc
out
stos
sbb
dec
pop
add
mov
psllq
jmp
popa
cmpsl
mov
mov
cwtl
in
xchg
push
pop
jge
test
stos
clc
and
filds
xor
test
mov
fldl
lahf
add
ljmp
shll
mov
pop
mov
xor
jo
xchg
fs
jge
adcl
mov
mov
mov
jbe
mov
adcb
movsb
leave
fidivrs
or
call
xorl
les
xchg
nop
jne
pop
fists
xchg
sub
fs
into
js
fadd
jno
dec
stos
cmc
aaa
mov
sub
adc
pop
fidivrl
dec
xor
scas
dec
pop
insl
ds
lcall
jne
mov
popf
xor
cli
and
lcall
cli
cld
push
pusha
mov
mov
fs
stos
adc
cltd
cmp
sub
inc
fisubl
in
mov
xchg
mov
push
mov
push
mov
jg
jno
and
push
data16
pop
pop
push
jne
out
shlb
aam
movb
hlt
push
scas
mov
pusha
in
adc
andl
add
fs
iret
pop
pop
subb
dec
sub
out
push
lahf
cltd
sti
pop
and
stc
add
add
add
sub
shrb
ljmp
cmc
data16
push
pop
pop
mov
jle
jo
cltd
inc
jns
xchg
repnz
pop
jecxz
clc
pop
aam
sti
fildll
outsb
dec
jp
cltd
repz
imul
jbe
push
sub
add
inc
mov
stc
push
shlb
xchg
jo
cmp
sub
lret
jmp
mov
add
push
pop
sub
nop
mov
aam
test
jg
aad
ljmp
lret
and
aaa
dec
mov
add
test
repnz
das
jns
mov
dec
pop
inc
je
mov
mov
xchg
rep
aaa
fs
inc
js
add
int3
inc
or
mov
or
cmp
orl
sbb
sbbl
ljmp
pushf
jmp
push
mov
ds
jbe
push
std
dec
fldt
std
jmp
daa
mov
repz
mov
mov
push
pop
mov
inc
push
lahf
push
inc
aaa
fs
bound
daa
dec
pop
inc
gs
cmpsl
push
inc
dec
pop
mov
repnz
popf
or
push
mov
flds
lcall
fcompl
push
xlat
loopne
flds
xor
sbb
dec
inc
sahf
sub
sbb
cwtl
cs
sub
daa
mov
cmp
adc
enter
scas
pop
push
pop
std
fsubl
in
push
sbb
xchg
inc
pop
lcall
fsubrs
gs
push
push
aam
cwtl
mulb
inc
and
fs
push
cltd
add
js
push
in
jo
push
fiaddl
lret
xor
mov
loopne
mov
mov
mov
sbb
xor
xchg
hlt
jecxz
nop
inc
cmp
test
jmp
push
cltd
push
sub
or
cltd
iret
dec
inc
and
mov
mov
js
and
jge
aam
into
jno
sbbb
into
cmc
in
imul
sahf
fbld
jb
lods
lods
sti
enter
fsubs
nop
xor
xchg
jmp
out
and
popf
icebp
xchg
sub
push
loope
push
ror
std
nop
call
movsl
cmpsl
adc
jle
xchg
push
cmp
or
cmpsl
test
xor
xlat
and
push
mov
addr16
mov
sbb
lea
cli
and
xorb
imul
fdiv
sbb
inc
or
jae
lock
test
lahf
ss
xor
and
jp
push
inc
mov
test
fsub
mov
scas
rorl
pushf
cmc
clc
test
shl
clc
aam
outsb
xchg
je
test
sti
aad
inc
xchg
cmp
cmp
adc
add
jl
test
aad
jns
and
mov
inc
insb
clc
ss
hlt
les
fs
and
dec
xchg
xchg
push
jg
mov
dec
push
adc
cli
cltd
jne
sbb
scas
out
mov
xchg
sbb
mov
and
daa
xor
cld
jg
aaa
pop
icebp
pop
mov
dec
mov
mov
or
or
cmp
mov
adc
cltd
inc
cld
outsl
popa
dec
pop
lock
ds
add
sub
sub
stos
sbb
outsl
call
out
pusha
arpl
dec
adcb
xchg
mov
push
icebp
cmc
je
xchg
lea
std
push
loopne
fistps
cmp
cmp
or
addr16
stos
test
fistps
add
xchg
roll
mov
sbb
clc
fucom
or
xchg
lods
shll
lsl
add
out
into
cmpb
sub
sbbb
fs
loopne
adc
shl
sub
push
cmp
cmp
test
iret
inc
add
sub
adc
insb
test
cmpsl
push
out
jae
mov
lfs
data16
loopne
jbe
test
pusha
pushf
dec
fnstsw
sahf
ret
pop
mov
ljmp
mov
add
sahf
or
daa
inc
rcrb
cmp
imul
xchg
jns
add
stos
outsl
or
mov
iret
pop
fisubl
insb
bound
push
shl
jno
subl
xchg
pop
xchg
ret
pop
std
xor
jb
add
pop
sub
jbe
outsb
cwtl
adc
adc
or
mov
leave
movsl
pushf
pusha
adc
int3
sbb
daa
sub
cmp
fnsave
adc
or
mov
inc
ret
pop
xchg
sarl
add
and
fnstsw
pop
push
lods
sub
push
jmp
lods
dec
jge
mov
jl
outsb
xchg
xchg
daa
ja
xchg
popa
fwait
sub
shrl
enter
or
sub
add
aas
xor
insb
mov
push
aam
push
in
mov
notl
sti
adc
inc
mov
stos
push
inc
add
xor
inc
adc
jne
fs
bswap
cmpb
xchg
pop
mov
cmpsb
fcmovu
out
or
jne
inc
sub
xor
cmp
test
adc
lea
out
ffree
mov
imulb
mov
sub
leave
xlat
mov
add
xadd
addr16
jp
int
lods
adc
jge
call
nop
repnz
loop
xchg
push
xor
and
inc
push
sbb
sub
pushl
xor
push
sbb
jge
inc
push
add
pop
jp
dec
and
sbb
dec
enter
or
scas
adc
popf
dec
push
test
dec
jle
rorl
stos
lods
mov
arpl
stc
das
frstor
cmc
push
mov
sbbl
insl
int
inc
enter
dec
jns
in
xchg
push
or
notb
cmp
push
jo
orl
mov
pop
cld
mull
inc
int3
push
in
jge
adc
es
fs
jns
mov
jmp
push
jbe
daa
stos
int3
jmp
jae
shlb
push
es
fildl
mov
pop
mov
adc
imul
shl
mov
cmpsb
mov
aaa
inc
cmp
mov
mov
mov
adc
mov
lcall
rcll
jo
data16
pop
push
leave
outsb
je
roll
div
fdivrs
jecxz
pop
popa
stc
jle
movb
add
push
adc
sub
int3
inc
adc
lds
sub
popf
push
push
int
inc
sarb
mov
mov
movsb
cmp
and
lcall
dec
inc
jp
cmpsb
arpl
int
jae
into
add
iret
mov
mov
iret
sub
gs
mov
push
pop
stos
jb
fs
xchg
xchg
push
push
loope
add
cmpsl
mov
lea
push
stc
lret
into
pop
outsb
dec
imul
mov
sub
stos
inc
mov
fldcw
xchg
int
xchg
sbb
pop
fwait
push
inc
add
and
inc
cwtl
outsl
push
mov
xchg
aaa
ret
insl
int
cmc
lret
adc
sbb
mov
cmp
daa
data16
push
pop
cltd
addr16
pop
pop
mov
int3
or
xchg
jle
sub
pushf
fsubrl
jl
testl
sub
jns
inc
cmp
pop
push
ret
adc
dec
test
mov
jne
jmp
in
lds
add
mov
sub
xor
jne
inc
jle
in
pop
push
dec
lret
sub
cltd
ret
outsb
sub
pop
jmp
sub
push
inc
adc
mov
mov
ja
mov
cmp
insl
outsb
and
sbb
lahf
add
push
sub
shrb
mov
adc
xchg
pop
ret
test
fwait
nop
clc
jnp
les
rorb
inc
ficompl
jae
cwtl
xchg
enter
cmpsl
mov
pop
cmp
cmp
cmp
stos
shlb
sbb
in
cmp
pop
test
mov
fcomi
push
das
pop
jo
adc
scas
dec
xchg
outsl
mov
sahf
stos
popf
dec
cmp
je
xchg
scas
lret
pop
pop
int3
add
outsb
test
sbb
loopne
jp
pop
stos
aaa
dec
push
mov
addr16
ret
incb
push
sbb
movsl
lcall
cld
xor
leave
testl
push
mov
jecxz
mov
out
jge
xor
jo
adc
mov
cwtl
mov
mov
inc
cmpl
xchg
icebp
add
fldenv
out
imull
xchg
pop
aad
test
and
push
int3
or
push
pop
pop
inc
lea
shlb
iret
adc
mov
out
jb
xor
outsb
fldenv
xlat
add
icebp
jle
into
sub
sub
ds
in
cmp
xchg
cmpsl
dec
or
add
push
lret
int
push
mov
adc
lcall
add
sbb
int3
fcom
mov
mov
fmul
fwait
arpl
push
popf
lods
sbb
push
mov
sbb
test
movl
das
push
push
mov
clc
out
clc
in
aas
mov
mov
loope
js
rcr
push
sub
inc
xchg
das
mov
fisubl
sarb
nop
xor
sub
ret
mov
mull
outsl
push
xchg
xor
popf
sub
mov
adc
sub
je
into
mov
xor
pop
loopne
test
mov
and
jg
pop
dec
add
dec
imul
adc
push
in
push
add
cmp
push
ds
jns
cli
das
dec
call
jg
mov
sbbl
hlt
je
mov
push
push
outsb
push
testb
or
xor
pop
lods
mov
daa
insl
inc
ja
jle
nop
dec
ret
outsl
xor
mov
adc
mov
jae
test
mov
sbb
sub
test
push
je
nop
jp
rcrb
lret
xor
jmp
std
lahf
push
add
mov
xchg
add
or
add
mov
xchg
rorl
dec
in
fldt
std
fnstsw
lock
test
push
adc
inc
sahf
lods
mov
test
push
enter
pushf
add
and
testb
das
and
daa
jmp
addl
popa
and
out
fsubs
rclb
xlat
inc
iret
das
xchg
insb
lock
aas
lahf
gs
lcall
xor
in
sub
lods
and
movl
inc
and
and
jg
xchg
in
outsb
mov
stc
shr
insl
mov
pop
xchg
testl
das
idiv
sti
add
int
sbb
out
cmp
xor
cltd
cmp
xchg
mov
xchg
std
ret
pop
imul
xchg
popa
push
call
or
cltd
outsl
lret
xchg
or
das
mov
in
push
mov
out
jge
mov
fldcw
sub
jne
mov
sub
sbb
xor
push
int
negl
pop
hlt
inc
test
fistl
adc
ljmp
shl
pop
and
or
rorb
data16
cmp
or
int
ss
adc
pushf
out
xchg
out
xchg
dec
pop
mov
mov
rclb
pushw
icebp
fnsave
inc
jae
mov
xor
jae
sti
mov
clc
or
push
mov
xor
out
subb
rolb
xor
push
and
pop
xor
sub
cmp
push
xor
call
in
inc
cmpb
insl
into
aas
fidivs
sbb
outsb
subb
xchg
sub
add
jns
sahf
or
sarl
pop
add
addl
nop
push
mov
cmp
adc
lret
out
lods
inc
daa
sub
mov
ja
mov
imul
mov
xchg
and
add
sahf
pop
cmp
jne
jne
test
lret
repz
push
pop
mov
in
sbb
adc
add
push
out
mov
sbb
xchg
push
repz
sahf
and
xchg
jmp
ret
sbb
pop
and
push
inc
lret
adc
or
adc
mov
stc
push
jno
scas
xor
sahf
in
js
jbe
add
mov
jo
sbb
jecxz
jle
inc
mov
mov
in
lds
into
push
push
jl
mov
xor
mov
sub
in
andl
xchg
xchg
sarb
jge
aam
mov
xchg
outsl
aas
aaa
outsl
popf
xor
jmp
addl
insb
test
popa
cmp
adc
fisttps
dec
out
mov
shlb
in
ret
sub
jne
mov
or
sahf
or
pop
mov
icebp
and
cmp
sbb
or
mov
mov
and
mov
xchg
sti
push
push
mov
enter
mov
pop
push
push
cmp
in
dec
insb
xchg
ss
jmp
jmp
mov
lahf
adc
pop
subl
pop
inc
mov
imul
push
pop
mov
mov
mov
imul
nop
fistl
cmp
in
jle
pushf
test
mov
dec
mov
add
xor
jge
sub
or
cmp
xchg
push
xchg
jge
xchg
leave
sub
in
push
pop
out
dec
outsb
cmp
test
daa
movsl
push
fcoml
nop
cmc
mov
arpl
sub
js
fsubl
arpl
in
pop
pop
dec
aas
mov
adc
jl
dec
xchg
loope
adc
stc
sarl
or
mov
adc
sbb
les
scas
sbb
add
mov
lahf
jb
bsf
cmpsb
sub
into
test
insb
or
sti
sub
sub
lcall
adc
sti
xchg
flds
inc
lret
dec
negb
sub
jbe
pop
shrl
test
mull
push
adc
add
push
fsqrt
lcall
jg
aam
adc
cmp
stos
fadds
cmc
mov
cli
mov
xor
push
outsl
orl
js
pop
adc
aam
int3
stos
mov
jae
aam
popf
or
jb
or
pop
int3
daa
pusha
pusha
pop
popf
sub
pop
rcl
cmp
ffree
jnp
adc
pop
dec
inc
or
push
das
lods
jge
enter
scas
pop
rdmsr
ret
in
ja
xchg
fistl
mov
or
out
in
mov
push
test
addr16
in
add
int
incb
mov
mov
cmc
test
xor
in
scas
in
pop
dec
sbb
xor
repz
outsb
xor
stos
sbb
cltd
lds
jo
jmp
xchg
xor
aas
insl
adcl
cmp
cmpsl
je
out
mov
stos
add
mov
xor
rcrl
shll
jle
mov
push
icebp
inc
inc
sbb
push
or
sti
mov
imul
inc
fsubrl
in
test
cmp
pop
lods
mov
mov
movsl
in
dec
xor
test
xor
and
mov
fisttps
fistps
in
mov
push
mov
stos
orl
leave
pop
in
inc
inc
test
adc
rcll
pop
lret
sbb
cmp
xchg
aas
call
dec
xlat
push
adc
aad
out
sbb
sub
subl
fwait
ret
mov
inc
push
jg
mov
xlat
inc
rcrb
test
fwait
jne
outsl
cmp
push
lahf
test
ljmp
xchg
and
movsl
lcall
fdivrs
mov
push
sbb
hlt
jnp
mov
push
scas
inc
mov
cmc
mov
pop
sub
vmovhps
push
fidivrl
addr16
movsb
jmp
sbb
cwtl
sub
in
jle
jge
push
ljmp
adc
sarb
adc
fstl
adc
xor
dec
lret
data16
int
mov
mov
jb
jb
mov
or
imul
or
aaa
cmpsl
stos
shrl
jecxz
gs
and
lock
xchg
pop
sub
mov
pop
dec
js
add
inc
nop
pop
xchg
cld
sub
pop
in
push
into
pusha
dec
sub
push
mov
lds
dec
je
out
popf
cmpb
xchg
or
shll
or
movsl
inc
jno
les
insb
shll
jle
sahf
xchg
rolb
imul
in
xchg
stc
push
cmp
mov
jmp
cmc
or
je
call
fcompl
pop
call
loope
xchg
sub
sub
jae
testb
or
call
or
imull
xchg
xchg
dec
dec
pushl
adc
mov
jp
mov
jae
mov
test
cmp
xor
pusha
dec
testb
adc
mov
stc
inc
or
or
pop
mov
iret
fdivrp
sbb
mov
jle
in
dec
dec
js
lcall
sbb
mov
mov
pop
cmp
fs
mov
adc
xchg
add
cs
mov
adc
fmuls
jl
std
daa
cli
stc
mov
aas
xchg
sahf
push
aas
lahf
cld
dec
lret
xor
pop
mov
push
loop
jmp
sbb
movsl
pop
ljmp
in
cmp
jb
fyl2xp1
or
pop
stos
fsubr
push
loop
cmc
loopne
fisubrl
loope
repz
jge
loope
mov
loopne
stc
das
test
push
fistl
mov
jne
jb
pop
sub
sub
mov
mov
xor
out
sub
aam
lret
loop
bound
subl
jmp
insb
int3
pushf
pop
add
push
test
in
and
lods
loope
shll
repz
push
inc
mov
mov
sbb
test
inc
push
popa
repnz
jmp
jle
loop
xchg
adc
in
xor
popa
push
add
xor
fsubl
dec
or
lahf
jo
leave
sahf
flds
test
push
pop
movsl
fsubrl
dec
call
hlt
lret
addb
dec
jno
xchg
cmc
xchg
testb
mov
shlb
jl
adc
push
aas
jp
xor
test
aas
sbb
fwait
cmpsb
lret
lds
xorb
inc
test
dec
mov
shl
jne
push
lea
cmp
adc
outsl
push
lahf
add
inc
out
add
lods
cmpsb
outsl
je
gs
cmp
push
sahf
js
sub
lock
out
or
std
pop
sbbl
mov
jno
inc
lods
int
add
mov
aad
inc
ds
mov
ret
xor
jnp
pushf
fdivrs
mov
out
xchg
and
xor
or
mov
loopne
add
out
add
dec
mov
pop
jge
pop
cmpsl
lret
cmp
call
imul
enter
fcompl
xchg
insb
sbb
das
jecxz
inc
lds
push
lds
add
lock
mov
call
sbb
push
push
xchg
test
jbe
xchg
shlb
xchg
popa
dec
cmc
mov
add
jg
inc
rorl
test
loop
lock
push
lahf
pop
jle
mov
es
test
ret
and
xor
add
mov
push
out
arpl
xor
add
cli
mov
repnz
bound
out
ss
cmp
xor
jno
mov
adc
mov
imul
sbb
hlt
aad
push
adc
cmp
lods
je
mov
call
or
mov
in
jnp
daa
pushf
adcl
faddp
scas
jmp
mov
or
mov
dec
pop
jmp
jb
es
push
sbb
rorl
sbb
push
notl
mov
cmc
inc
add
dec
cmp
push
mov
insb
jnp
xor
pop
xchg
es
stos
pop
cmpl
jl
test
dec
enter
and
pop
sub
mov
and
xchg
aam
pop
cmp
fcomps
xor
or
mov
loop
and
lock
sub
pop
xor
and
mov
stc
mov
mov
mov
je
inc
mov
je
jne
aad
test
cmp
loop
js
xchg
cmpsl
repz
mov
ficomps
inc
lret
jb
popa
imul
inc
jae
jo
adc
test
xchg
jnp,pt
subl
cwtl
stc
fildll
aad
cmp
inc
adcb
xchg
pusha
cmp
aad
jge
mov
mov
addr16
fwait
adc
xchg
jnp
dec
inc
lret
dec
xchg
xchg
outsb
sub
jae
sbb
jle
sbb
mov
push
mov
push
xchg
in
out
mov
cmpsb
push
fcomp
stc
push
lahf
add
xchg
cmp
jns
mov
mov
iret
es
lcall
scas
jb
pop
adc
jnp
int
mov
pop
test
push
les
out
fiaddl
loopne
fchs
lret
fisubrl
add
lret
and
shlb
sahf
inc
cwtl
sub
test
les
cli
js
push
push
scas
sbb
sub
mov
lea
inc
xchg
das
fisttpll
scas
ds
test
mov
mov
push
jnp
or
lea
or
jo
sbb
aaa
lret
mov
push
push
loop
daa
xor
nop
cmp
and
jl
mov
loop
arpl
mov
aaa
add
icebp
test
or
outsb
dec
mov
mov
fs
xchg
mov
xor
sbb
sub
adc
les
cmp
inc
push
or
sub
pop
mov
repz
stos
jo
push
hlt
sub
stc
sbb
out
mov
shl
lds
push
pop
int3
addr16
push
xor
adc
jmp
pop
xor
pop
pop
scas
xorb
int
scas
out
inc
lret
mov
out
dec
ja
notl
inc
pop
xchg
sti
out
push
fcomps
pop
sub
jmp
adcl
insb
aas
pop
out
jbe
xorl
subb
scas
cmp
jnp
leave
dec
into
push
add
mov
and
addl
sub
xor
add
xor
popa
xor
int
xchg
imul
std
fisttpll
notb
gs
fwait
ss
mov
adc
jns
popf
pop
rcrb
into
push
fmul
push
in
fistpll
fistps
imul
pop
dec
jo
mov
push
jno
jns
xor
nop
inc
in
push
addl
dec
xchg
jl
or
mov
sub
ds
es
sbb
cwtl
mov
mov
inc
or
fst
or
push
test
cmp
dec
cld
sub
xchg
cltd
sbb
mov
xor
aas
imull
lahf
call
xchg
xchg
pop
jl
push
sub
mov
outsb
shr
pop
cwtl
ret
loop
aam
push
test
popa
push
add
stos
mov
mov
mov
xchg
or
sti
adc
in
xor
dec
enter
into
push
movsb
shll
add
sub
pusha
les
daa
repnz
mov
cwtl
jle
pop
mov
aad
sar
orb
cwtl
aad
sub
aaa
jnp
xchg
mov
mov
sub
xor
fstl
int3
outsl
and
insl
lret
inc
cwtl
jmp
inc
dec
scas
add
jmp
ret
icebp
int
mov
pop
jne
popf
xorl
dec
clc
cmp
loop
sub
push
xor
mov
loope
pop
lods
faddl
jo
add
pop
cltd
dec
in
sbb
aaa
pushf
mov
into
sbb
fstpt
sbb
pop
loop
dec
addl
push
call
cwtl
stos
test
js
xlat
add
mov
mov
mov
cmp
cmpsl
cld
jge
cli
mov
or
dec
imul
mov
pushf
idiv
jl
mov
push
mov
cmp
mov
test
lahf
jne
rclb
jle
out
inc
test
out
or
aad
adc
cli
mov
mov
das
inc
pop
repnz
movsb
and
xchg
sbbb
or
aas
fistl
dec
ds
rcr
addps
pop
shlb
xor
jbe
dec
xor
lds
adc
mov
xchg
mov
jne
test
cli
shrl
fmuls
add
mov
or
out
mov
inc
pusha
cmpsb
inc
fdivl
insl
push
adc
lock
call
add
loop
lcall
and
mov
sarb
pop
mov
rolb
sub
pop
pop
push
push
lock
xchg
icebp
dec
sub
mov
xchg
icebp
test
nop
xor
lock
inc
movsb
jle
scas
and
lods
lods
mov
lods
add
lcall
cmc
fldenv
jp
inc
ror
test
je
shrl
adc
movsl
mov
adc
icebp
loope
iret
aaa
loopne
mov
fbld
sub
daa
retw
mov
push
xchg
xchg
xor
icebp
aad
fcmovb
arpl
popa
repnz
test
out
xor
lds
pop
jo
aas
mov
scas
stos
push
pop
xor
js
mov
lret
fstps
dec
pop
cltd
cmpsb
sbb
xchg
adc
sub
mov
imul
cmp
mov
push
iret
add
sub
outsb
add
push
pop
out
xchg
clc
or
loope
cmp
pop
jno
rorb
jl
aas
jbe
fsts
jno
in
xor
xchg
icebp
outsl
shr
cmp
loope
loopne
call
mov
or
cld
test
test
addl
imul
jae
sbb
adc
pop
fmul
sub
out
lret
push
pop
and
xor
adcb
stos
aas
xchg
mov
cmp
pop
sbb
and
bound
popf
mov
dec
fdivp
inc
cmp
cmpsl
testb
imul
stos
lret
and
mov
jecxz
divb
iret
js
sub
icebp
ja
js
fidivrs
aaa
xchg
lcall
imul
outsb
movsb
daa
int
iret
lahf
xchg
in
call
sbb
push
les
rcrl
pusha
or
pop
xlat
mov
mov
sub
mov
fwait
sub
or
mov
rcl
out
dec
sub
xchg
or
jbe
inc
xor
jbe
inc
scas
jmp
je
adc
mov
jnp
sbb
shll
add
or
lods
iret
dec
adc
mov
aaa
jno
and
jne
in
mov
adc
popa
push
inc
mov
addb
push
xchg
jg
lock
adc
out
push
rcrl
push
lahf
loopne
inc
jmp
dec
xchg
dec
sub
adc
sub
adc
lahf
in
dec
push
mov
mov
lcall
les
xchg
adc
add
nop
dec
xor
sbb
mov
cmp
fisttpl
dec
into
sbb
or
sbb
jno
cli
mov
testb
test
imul
pop
into
cmpsl
in
clc
in
ficoms
in
jl,pt
dec
or
rorl
cmp
mov
ret
mov
bound
dec
loopne
into
adc
or
ds
and
mov
dec
sub
aas
sbb
mov
cmp
ret
hlt
xchg
and
popa
jecxz
jecxz
imul
push
out
fdivr
int
xor
call
das
inc
push
and
imull
xor
arpl
scas
les
mov
ds
les
or
pop
add
fcmovnu
inc
and
cmp
call
mov
cltd
adc
cmp
xchg
jl,pn
lods
int
fs
mov
mov
and
cmp
mov
sub
or
int3
add
in
inc
cmpsb
add
adc
pop
xchg
push
push
cmc
mov
mov
or
adc
inc
jns
in
loope
jae
inc
out
sub
scas
ss
push
lods
adc
adc
cmp
or
std
sbb
cmpb
notb
cld
adc
andb
and
push
xchg
add
cmp
mull
adc
xchg
iret
shr
pop
pop
repz
ljmp
cmp
enter
push
mov
fisubl
xor
sub
addl
sbb
pop
fs
cmp
movsl
mov
xor
das
jmp
jne
loope
xchg
clc
mov
xchg
cwtl
xor
scas
in
je
sbb
mov
push
fs
mov
sahf
ljmp
data16
pop
sahf
jbe
mov
inc
es
jns
add
imul
imul
jnp
ret
gs
out
sahf
jno
test
inc
in
jbe
pop
xor
inc
insl
stos
idivl
push
xchg
mov
cmp
jno
cmp
mulb
xchg
repz
movsl
movsl
dec
mov
fisubrl
mov
xor
scas
lods
popf
test
frstor
mov
aas
mov
push
mov
mov
mov
adc
and
aam
fsubp
loope
inc
or
stos
sbb
cwtl
pop
sar
cmp
scas
jmp
stc
fdivrl
ljmp
clc
push
mov
subb
insl
out
jns
push
pushf
mov
sbb
add
mov
pop
adc
mov
jge
jo
dec
push
arpl
movsl
push
aad
fadds
pop
adcl
sub
or
js
jno
add
push
sub
inc
popa
inc
sahf
or
mov
sub
mov
adc
ljmp
adc
outsl
in
mov
or
sbb
popf
xor
add
dec
sbb
shrb
sbb
fwait
or
push
rolb
pop
in
cmp
cmpb
mov
popf
mov
negb
mov
cli
scas
scas
mov
popf
lret
mov
test
jnp
js
in
fbstp
dec
add
dec
in
loop
dec
and
jb
clc
push
jne
sar
sbb
lods
fs
rcll
ret
jnp
ret
repnz
mov
jo
int3
imul
repnz
addr16
imul
loopne
adc
arpl
cmp
in
ds
int3
ljmp
popf
add
add
mov
fdiv
xor
popf
and
out
das
test
jecxz
jp
cmp
js
jg
add
adc
lret
xor
inc
mov
rolb
push
or
call
pop
std
stos
sub
mov
cld
inc
aas
repz
sub
stos
push
sub
xor
add
loop
inc
loopne
fwait
stos
mov
adc
test
iret
jecxz
notl
adc
push
ret
sarl
xchg
mov
aaa
pop
lods
fstpl
mov
jno
xchg
mov
imul
mov
inc
jnp
xchg
aaa
dec
iret
nop
in
and
jo
inc
ja,pt
sbb
push
jns
inc
lock
and
sub
xor
pop
jmp
or
stos
pusha
ljmp
dec
cmpsl
std
movsb
loopne
pusha
inc
jl
pop
xchg
rolb
add
int3
cld
imul
inc
jbe
loop
mov
cmpsl
pop
mov
adc
test
daa
dec
int
jns
inc
lods
dec
lahf
xchg
std
test
push
pop
repz
je
xchg
xor
test
cmp
in
inc
pop
adc
fists
cld
call
or
adc
cmp
ret
push
xchg
aas
xor
sahf
movsb
aad
pop
mov
push
add
ret
jmp
stos
cmp
int
addr16
push
cmp
mov
mov
incl
insb
jl
mov
pop
je
adc
jno
icebp
or
inc
daa
js
dec
rcrl
data16
push
add
mov
icebp
gs
fstpl
vpmacsdqh
jmp
movsl
ret
pusha
adc
and
insb
loopne
pop
push
mov
aam
jns
icebp
ljmp
cmp
mov
xchg
stc
loop
fidivs
sahf
mov
leave
push
inc
mov
andl
icebp
loope
scas
scas
icebp
xchg
mov
shrb
inc
xchg
subb
sub
int3
cmpsl
je
and
xor
lahf
cmpsl
mov
xchg
xlat
loopne
test
jmp
mov
jns
stc
lock
dec
loope
movsl
or
jecxz
inc
loope
fcoms
jmp
loope
mov
xor
and
pop
dec
xor
lock
sub
insl
push
or
addr16
mov
icebp
out
jbe
mov
ror
out
add
xchg
loopne
popa
cmc
and
inc
fstpl
jnp
dec
adc
or
cmpsb
movsl
sub
push
cld
popa
add
pop
add
enter
sbb
jbe
xor
mov
arpl
cli
lods
mov
fbld
add
dec
ret
mulb
mov
or
ljmp
mov
ds
cmp
dec
jbe
adc
mov
inc
xchg
mov
sahf
cli
add
std
jg
jmp
xor
ds
adc
jbe
cmp
mov
sub
lock
mov
test
jmp
jmp
repnz
mov
arpl
mov
sti
out
jb
adc
pusha
mov
in
aam
stos
test
data16
cli
cmp
jno
xchg
pop
jbe
dec
ret
jecxz
stos
xchg
mov
pop
int3
movaps
scas
xor
loope
lods
sub
fld
fnstsw
std
push
add
push
aam
mov
xchg
loopne
ds
sarl
sbb
aad
bound
mov
push
sub
cmp
test
dec
imul
inc
out
pop
jge
sub
in
xor
imul
xchg
or
adc
cli
fwait
sub
dec
jle
pop
jbe
pop
mov
cmp
test
inc
pop
adc
xorb
or
pop
pop
and
xor
adcb
jnp
lcall
fldl
dec
cld
dec
lds
push
cmpsb
inc
adc
icebp
jle,pn
mov
push
cld
inc
pushf
mov
movsl
mov
sbb
mov
jl
jecxz
hlt
andb
inc
fwait
shlb
mov
popf
psrld
arpl
leave
repz
ljmp
pop
test
mov
mov
out
lods
mov
aas
jae
add
test
mov
fsubrl
jge
jo
mov
push
mov
and
adc
jns
xor
cmp
push
add
jnp
les
jb
adc
dec
push
push
js
test
les
enter
or
fildl
ficoml
inc
into
pop
js
insb
int3
subl
pop
repnz
repnz
jg
test
or
fistpll
and
scas
rcll
loope
out
push
sub
out
inc
sbb
jle
lods
push
test
cmp
sar
pusha
lahf
inc
adc
les
jnp
cmp
sbb
int3
add
mov
fs
pop
xor
ss
add
das
and
xchg
lret
cmp
ja
lock
enter
ds
pushf
adc
cmpsb
rorl
sub
aad
inc
inc
call
jns
jmp
jb
pop
stc
cmpsb
mov
adc
lret
adcl
test
pop
xor
rclb
sarl
mov
imul
xor
das
mov
lock
sbb
inc
js
dec
insl
lahf
popf
xor
mov
mov
insb
cmp
scas
push
jp
mov
mov
pop
jle
aaa
mov
js
addr16
mov
push
cltd
sti
jo
fwait
orb
hlt
mov
pop
push
cwtl
jmp
popf
cmc
cmp
jns
push
pop
imul
push
mov
jle
shl
cmp
gs
xchg
call
mov
cli
sahf
jne
mov
repnz
sub
and
andb
loopne
xchg
aad
ret
ds
sub
mov
inc
xor
pop
xor
xor
mov
mov
pop
dec
mov
pop
daa
in
test
shlb
jmp
push
xor
fwait
repz
sub
nop
mov
add
aam
and
fcoms
shlb
mov
je
sbb
loop
mov
sbb
cmp
push
popf
mov
repnz
stos
mov
sarb
mov
mov
mov
loopne
loopne
aaa
aas
sbb
push
adcl
aaa
mov
faddl
shrl
xchg
jge
es
sbb
test
lcall
enter
add
pop
repnz
push
fs
mov
out
adc
jp
scas
and
int
mov
fistl
sbb
into
repz
sbb
push
aad
cmp
xor
fcompl
and
and
lcall
call
cmp
sti
fadd
inc
mov
sti
shrl
push
int
loopne
imul
leave
fwait
or
enter
out
inc
push
sub
mov
push
fstpl
movsl
push
je
pop
insl
mov
cmpsb
cmp
dec
call
pop
jmp
std
ret
sub
ficomps
add
mov
cmpsl
push
aas
gs
lret
shll
pop
les
mov
cmp
cwtl
pop
hlt
out
push
mov
test
push
lcall
mov
dec
cmp
clc
lods
xchg
lcall
or
repz
out
orb
pop
add
add
jmp
inc
xor
cmp
jno
mov
or
and
sti
in
shl
push
cld
add
loope
mov
add
mov
rorl
adc
mov
push
xor
xorl
punpckldq
imul
mov
or
inc
stc
sbb
mov
enter
mov
and
stos
lcall
dec
jae
sub
push
out
in
xchg
mov
inc
xchg
xchg
mov
rcll
iret
insb
shrb
sub
lods
shlb
sarl
push
mov
test
ret
rcll
sti
out
cld
mov
mov
ret
fsubrs
cmp
push
aas
loope
fsubr
adc
pop
jmp
xor
pop
stos
mov
outsl
cmp
push
dec
loope
inc
mov
xchg
push
ret
mov
ja
push
in
cmc
lret
xlat
pop
pop
or
xor
inc
mov
stc
mov
aaa
pop
pusha
gs
jns
lock
pop
fbstp
mov
aam
lods
dec
push
and
out
decb
add
mulb
rcrl
add
jmp
icebp
mov
int
das
pop
enter
outsb
inc
and
subl
dec
arpl
cmpb
dec
in
or
xchg
sti
test
or
pop
sbb
push
jno
add
in
xor
insb
mov
xchg
xor
or
add
rorb
cmpsl
fists
pop
jo
shr
es
ffreep
or
mov
inc
insb
dec
inc
cmp
fcmovu
xchg
mov
iret
adcb
push
fmul
rolb
sub
add
dec
add
and
add
pushf
mov
jnp
xchg
mov
loopne
sbb
icebp
data16
mov
inc
das
push
cs
pop
pop
mov
stc
imul
xor
mov
xor
cmp
aad
jg
std
pop
out
inc
jae
cwtl
inc
push
jnp
nop
push
xchg
inc
stos
fadds
js
ret
gs
and
movb
cwtl
push
or
sbb
pop
loop
clc
inc
data16
xor
jmp
mov
xchg
test
popl
ds
sub
ds
sub
and
cmp
mov
pop
inc
sarb
xor
mov
test
and
sub
mov
inc
fdivl
dec
fs
adc
or
sbb
adc
jg
mov
scas
mov
mov
dec
lret
push
cmpsb
in
push
push
mov
sbb
mov
sahf
adc
in
fsts
mov
loop
and
pop
xchg
mov
adc
sahf
sbb
mov
out
cli
pop
outsb
addr16
xlat
inc
xchg
cld
subl
push
mov
sub
adc
xor
jo
loop
mov
jbe
mov
mov
inc
jmp
fabs
lret
lahf
arpl
mov
bound
dec
cmp
inc
jo
sti
and
push
insl
inc
pop
dec
or
cli
inc
xor
fimuls
adc
icebp
fs
xchg
cmp
stos
mov
js
cmp
stos
sbb
loope
aam
push
push
sbb
out
inc
out
lods
mov
xchg
inc
and
dec
pop
bound
jb
out
sbb
sbb
xor
jns
insb
dec
adc
pop
and
xor
sub
je
adc
xchg
into
sub
dec
and
sbb
sub
insl
pop
fildl
push
loope
cltd
fdivrs
popa
cli
sub
adc
pop
out
dec
xchg
into
roll
sbb
jb
lds
mov
jbe
push
pop
out
or
lods
ret
ds
ja
push
or
rclb
sub
fnstsw
imul
sbb
cwtl
add
mov
mov
in
or
into
stos
ljmp
mul
cwtl
pop
jl
cmp
dec
pushf
xor
popf
jbe
and
push
mov
cmp
loopne
insb
xor
cmp
popa
movsb
mov
iret
addb
enter
pop
push
xchg
and
push
mov
jae
test
leave
mov
shll
js
pop
push
in
adc
orl
push
jmp
mov
add
or
testl
xlat
mov
add
imul
jne
pop
insb
pop
add
flds
cld
push
mov
subb
bound
pushf
dec
mov
jnp
adc
imul
cmp
jb
dec
add
test
nop
jne
inc
xchg
inc
sahf
fbld
jp
mov
dec
outsl
out
adc
xor
jo
fiadds
mov
jno
add
unpckhps
and
lahf
xchg
mov
lcall
in
cltd
cmpsb
leave
dec
je
mov
int3
xchg
mov
jp
lret
cmpsl
movsb
mov
loopne
jg
cmp
mov
mov
sub
in
push
inc
add
mov
ficoms
in
mov
cmp
roll
and
test
mov
mov
mulb
cwtl
enter
lods
mov
mov
scas
jle
push
sbb
lods
stos
rol
mov
mov
hlt
adc
insl
jecxz
fcmovbe
xor
mov
add
xor
imul
sub
mov
mov
inc
pop
icebp
push
arpl
inc
andl
mov
sbb
call
roll
xchg
mov
or
inc
popf
fdivr
stos
fistpll
dec
cmp
mov
es
push
cmpsl
daa
pop
cmc
pop
shrl
push
repnz
jg
jge
scas
por
push
lret
inc
or
inc
stos
cmp
xchg
imul
sub
sub
notl
push
es
nop
jp
in
dec
mov
cs
cmpsl
cmp
movsb
add
pop
sub
mov
adc
hlt
repnz
xchg
leave
push
iret
lods
loopne
mov
fiaddl
pop
xor
pop
movsl
lods
rcl
mul
aas
mov
push
jae
out
movsl
in
scas
cmp
dec
xchg
cmp
imul
lahf
pushf
jp
mov
movsl
fistpl
push
daa
xor
adc
sbb
or
call
inc
mov
mov
aad
outsl
push
iret
out
xor
les
jecxz
dec
jae
ret
mov
cs
pop
push
in
jnp
xchg
fisubl
dec
push
mov
inc
xchg
mov
fwait
iret
addr16
xchg
imul
sbb
mov
cltd
push
out
xchg
push
shrb
sarl
inc
movsb
dec
sbb
mov
jb
nop
and
and
popa
jg
bound
push
push
pop
outsl
test
testl
out
mov
add
leave
mov
jl
adc
dec
out
scas
into
xor
mov
mov
adc
call
lret
pushf
dec
icebp
scas
mov
subl
enter
inc
notb
mov
adc
aad
rorb
mov
enter
loopne
mov
mov
and
stc
movsb
insb
hlt
push
lock
sub
mov
mov
rorl
icebp
push
lods
mov
mov
xlat
int3
mov
and
sub
clc
iret
mov
xor
push
aad
lds
mov
add
push
sub
xchg
sbb
mov
lahf
sub
xchg
dec
inc
aaa
adc
lret
or
mov
fcmovnb
addr16
les
push
shlb
mov
addb
push
sbb
scas
cmp
outsl
push
mov
sub
mov
loopne
cld
add
jp
arpl
into
jo
flds
sarb
mov
fsubs
outsl
popa
cmpsl
ljmp
cld
dec
loop
xchg
aas
jmp
hlt
subl
fldl
je
jno
xor
dec
rcl
mov
cmp
ljmp
or
push
mov
mov
pop
cltd
jae
test
sbb
mov
insb
xchg
adc
fsub
jne
test
icebp
jne
mov
mov
pushf
jo
in
js
outsb
addr16
shll
sbb
test
sbb
push
nop
movsb
push
pop
movb
adc
xchg
test
fistpll
mov
outsb
lds
jg
and
test
aaa
fyl2x
xchg
ss
jmp
ljmp
mov
insl
cld
or
adc
push
mov
int3
cmc
dec
push
fs
in
dec
add
enter
jne
or
int
mov
imul
nop
sbb
repnz
inc
lea
push
imul
jge
inc
mov
fidivrl
pop
gs
mov
inc
in
mov
and
and
movsb
das
xchg
jp
cmpsb
dec
fists
or
cmp
jge,pn
push
sbb
std
mov
mov
or
jl
dec
xor
int3
aas
cmc
push
mov
sbb
xor
repnz
cld
lcall
pop
mov
push
in
xor
or
pop
adc
test
jg
xor
dec
ss
xchg
int3
enter
and
mov
std
fwait
hlt
lock
int3
sbb
jbe
cmpsl
addr16
iret
outsb
ds
imul
call
lods
mov
inc
inc
flds
jo
mov
sarl
out
xor
jp
mov
push
leave
or
jl
dec
pop
dec
sub
shl
push
lods
xchg
sub
lcall
ljmp
mov
and
adc
lahf
pushf
inc
jl
daa
sub
sub
out
rol
movb
aam
add
in
lret
adc
xor
out
std
addr16
cmp
jo
pop
lahf
jl
hlt
inc
lret
push
scas
mov
out
push
and
fmull
xlat
dec
jge
mov
xchg
mov
icebp
cmp
emms
jbe
adc
xchg
loope
jg
pop
dec
mov
scas
sbb
cwtl
sub
aas
je
shlb
and
cld
sahf
add
mov
or
nop
xchg
inc
in
clc
mov
pop
fldcw
in
popa
cmpsl
adc
in
daa
clc
adc
call
je
inc
enter
mov
xchg
scas
add
cmpsl
leave
pop
add
shr
test
js
and
mov
push
inc
push
mov
in
stc
inc
jmp
lods
cmp
dec
pop
add
sub
dec
test
test
cmp
icebp
cmp
inc
mov
adc
les
add
mov
testb
icebp
movsb
cld
lea
ficoms
cmp
push
call
pop
rcll
and
pop
fsubrl
jle
pop
dec
addl
push
sub
mov
add
xor
sti
dec
add
outsl
pop
fsubrp
mov
pop
out
lock
cmp
pop
jmp
cmp
pop
fiadds
add
fidivrl
repz
andb
mov
aam
int3
cmp
aam
stos
in
dec
mull
jle
push
inc
out
mov
lea
aas
inc
call
in
out
push
xchg
jnp
jmp
popa
xor
mov
jb
repnz
ljmp
or
mov
dec
and
js
jne
add
mov
dec
jge
insl
ss
mov
sti
cwtl
and
mov
inc
movsb
xchg
pop
mov
int3
fisubrl
mov
out
dec
inc
adc
and
iret
adc
shlb
rclb
push
ret
mov
or
in
aam
add
adc
adc
inc
fdivs
lods
pop
mov
mov
mov
lock
out
bound
pop
movb
test
xor
data16
inc
push
lret
xchg
aad
adc
xor
or
ja
and
decl
xlat
mov
fisubl
xor
loop
cli
push
call
stos
jp
ret
push
dec
push
jnp
xchg
push
imul
mov
push
jns
out
int3
bound
dec
mov
and
lcall
sbb
test
sbb
sbb
lods
jns
dec
les
push
mov
out
add
xor
jecxz
xchg
xlat
inc
push
insl
cmp
pop
out
int
cmpsl
int3
lock
aam
jge
dec
dec
pop
scas
xor
mov
mov
imul
imul
aaa
ret
imulb
jnp
fisttpl
adc
out
dec
nopl
fdivr
stos
cld
pop
in
add
and
cmpsl
inc
aas
jle
lods
cmc
movsl
push
out
pop
dec
aas
psubb
xor
fnstenv
inc
stos
pop
mov
imul
fmul
mov
adc
repz
push
js
add
cmpl
icebp
loop
call
aas
push
sahf
pusha
lods
out
sbbl
jne
stos
fs
lcall
mov
push
outsl
repz
mov
pop
pop
cmp
jg
jmp
enter
sarl
mov
pop
xchg
and
or
in
add
data16
cmp
dec
xchg
or
add
sub
fdivl
and
sahf
lcall
imul
cmpsb
mov
js
enter
inc
inc
stc
pop
push
xchg
pop
sbb
mov
adcb
pop
jg
movsb
mulb
push
in
iret
mov
loopne
outsl
pop
aaa
mov
or
loop
sub
pop
enter
sub
movsl
data16
mov
xor
stos
jle
cmp
pushf
das
sbb
dec
push
faddl
adc
xor
xchg
dec
fdivrp
out
mov
mov
ljmp
inc
jg
jae
push
and
jg
mov
enter
xor
pop
and
push
inc
lahf
dec
aam
sbb
nop
lcall
imulb
mov
push
call
and
pusha
loop
insl
loop
rcr
add
in
rorb
popa
and
cwtl
movsb
loop
mov
and
jae
lret
pop
cmp
sub
leave
dec
dec
jg
mul
cli
jno
jnp
into
mov
xor
mov
mov
out
aaa
imul
push
push
repnz
outsl
dec
icebp
jne
mov
into
cmp
test
adc
sbb
sti
jns
cmc
jl
add
ds
mov
das
add
jne
jae
mov
clc
sbb
mov
sahf
mov
jnp
insb
pushl
jecxz
xchg
push
nop
xor
pop
xchg
jnp
aam
popf
and
mov
mov
loope
dec
adc
sbb
cwtl
jo
pop
test
into
cwtl
rcrl
outsl
lret
push
sbb
dec
aas
xchg
jmp
loope
shll
outsl
pop
push
cwtl
jecxz
lds
hlt
lods
outsl
mov
pop
inc
cli
push
or
or
and
out
jg
in
fst
leave
jbe
cmp
in
mov
movsb
add
adc
dec
adc
movsb
jmp
inc
mov
mov
and
jo
jg
jne
mov
dec
bound
js
or
imul
dec
movsl
adc
lods
xchg
cmp
pop
mov
cmpsl
dec
int3
inc
popa
lods
enter
xlat
cwtl
insl
fwait
push
push
sbb
and
pop
cmp
inc
fst
out
jl
push
daa
pop
loopne
sub
inc
sub
cmp
stos
dec
add
ljmp
inc
cmp
inc
sbb
ret
pop
sbb
outsl
mov
adc
addr16
sbb
jmp
cmp
mov
out
pop
pop
jl
jb
inc
mov
adc
mov
fbstp
mov
inc
mov
test
call
negb
adc
inc
adc
lods
dec
ljmp
insl
rorb
add
les
les
orb
call
mov
xchg
ficoms
clc
ret
or
mov
and
scas
cmp
lret
hlt
lds
call
test
fwait
xchg
lods
dec
jo
call
add
decb
aas
aam
in
aad
jmp
cmp
cmp
inc
mov
cmp
addr16
out
adc
jl
mov
cli
jle
lret
daa
addr16
xchg
push
xor
jmp
addr16
add
in
mov
aam
sbb
arpl
xchg
and
or
pop
mov
xchg
aas
test
cld
call
mov
sbb
cmp
pop
ficoml
sbb
jmp
test
insl
push
shll
test
pop
push
sarb
xor
cmp
pop
adc
insb
add
test
push
dec
scas
xlat
imul
jbe
adc
dec
movsl
or
aaa
add
mov
mov
xlat
shll
incl
dec
movsl
jecxz
sbb
jmp
mov
xor
or
movsb
cs
mov
jmp
xor
imul
sub
into
sub
rcl
sbb
daa
sbb
cmc
lock
in
push
push
cs
mov
push
into
jmp
adc
push
sbb
aam
jo
fildl
lret
xchg
loop,pn
roll
push
add
push
out
cmovp
fmull
out
addr16
push
popa
data16
adc
call
fstpt
out
fs
fs
cmp
icebp
pop
lods
sbb
cmpb
rolb
pop
jecxz
add
cwtl
adc
out
xlat
cmp
pushf
cmp
mov
std
xor
add
add
sbb
push
stos
mov
popf
mov
push
and
sahf
stc
test
sti
or
popf
jl
push
cmp
mov
popf
hlt
push
inc
mov
out
icebp
je
adc
adc
shlb
jp
sub
xor
jge
fs
ss
int3
dec
in
dec
incb
pop
ffree
sbb
mov
jmp
sbb
dec
loop
scas
in
mov
fcomi
ret
outsl
mov
jae
daa
fs
sub
out
jno
xlat
and
inc
xor
out
cmp
inc
fs
xchg
mov
adc
pop
repnz
sarb
loopne
pop
cmpsb
add
leave
movb
and
xchg
adc
jl
lock
mov
push
mov
fisubrs
inc
les
add
movsl
cld
cmp
mov
jg
cld
push
stos
and
out
out
loop
mov
push
and
pop
leave
push
movsb
mov
test
cmpsl
sub
push
jno
adc
call
sub
add
je
mov
dec
inc
mov
in
outsb
xchg
adc
jl
movsb
insl
mov
jmp
repnz
pop
jbe
jo
ss
cmpsl
inc
push
ja
cmp
ja
push
adcl
pop
push
movsl
imul
call
jge
jge
fldcw
pop
cmp
push
out
xor
mov
mov
sbb
mov
in
jb,pn
testb
lcall
mov
aas
aas
jge
inc
cmp
push
lcall
mov
ds
and
adc
bound
mov
jmp
sub
mov
ds
jno
shlb
js
dec
jbe
push
in
out
fcompp
mov
or
imul
sahf
mov
pop
mov
jb
rcr
add
xchg
out
gs
popa
sub
sti
fisubrl
push
dec
in
imul
pop
xchg
hlt
xchg
sub
call
adc
cltd
lret
add
shrb
repnz
sub
fsubs
inc
mov
ret
dec
loopne
add
pop
mov
pop
mov
or
aaa
outsl
repz
sti
dec
and
cmp
jp
jbe
push
xor
std
addr16
dec
aaa
push
mov
sub
inc
inc
nop
add
jmp
mov
mov
or
xchg
and
and
rcll
mov
decl
adc
call
test
mov
mov
xchg
cmp
mov
cld
push
mov
int
push
inc
cmpsb
aam
or
sbb
xor
mov
in
jae
in
xorl
push
inc
cmpsb
dec
push
test
idivb
jbe
pop
xor
scas
xlat
movsb
pop
cmp
jae
adc
into
es
cmc
sahf
cmp
mov
repz
loop
sti
adc
test
int3
lock
mov
arpl
xchg
aad
cmpb
std
cltd
mov
mov
sub
cli
and
jo
lcall
or
addb
cmp
mov
aaa
mov
subb
cmc
out
dec
jne
clc
pop
sub
scas
mov
mov
mov
in
add
add
fwait
ljmp
add
in
ret
mov
adc
enter
push
pop
mov
jns
fstpt
faddp
in
lods
popa
push
hlt
hlt
out
popf
rolb
cmp
in
mov
addr16
repnz
pop
xor
cli
fstpt
inc
popa
push
xor
pop
cmpl
pop
xor
sti
pushf
and
mov
mov
lret
lods
pusha
leave
xchg
and
loop
pusha
and
mov
cmp
iret
shll
push
mov
and
in
popa
jp
hlt
pop
out
mov
ds
shl
or
xchg
mov
sub
mov
repz
popf
loop
mov
movsb
cld
xchg
mov
call
adc
jg
push
lahf
push
into
lret
jb
adc
test
enter
pusha
cltd
repz
popa
fwait
xchg
dec
jge
int3
mov
lahf
push
xchg
jno
jge
hlt
jge
cwtl
mull
xor
lret
or
clc
mov
dec
push
mov
xacquire
or
push
mov
push
cltd
in
mov
pop
push
inc
sbb
out
dec
leave
sbb
and
pushf
push
es
cmp
inc
icebp
mov
in
cmc
pop
add
jb
hlt
mov
and
in
inc
dec
in
sti
addr16
nop
or
cmp
ds
addl
xlat
add
inc
jg
adc
subl
sub
cmovo
push
ss
mov
lds
add
and
cld
popf
mov
cs
cmp
xchg
mov
sbb
pop
pop
hlt
lods
mov
test
add
out
mov
sub
pop
pop
inc
xor
and
hlt
push
cmp
cli
addr16
es
jno
in
pushl
inc
movsb
outsl
jp
pusha
decl
dec
dec
pop
int
lods
cmp
icebp
iret
dec
int3
insl
icebp
or
pop
mov
xchg
icebp
xor
push
mul
enter
popf
jns
adc
shll
test
jb
data16
test
fwait
scas
sbb
in
push
cmpsl
sbb
sub
popf
repz
pop
aas
adc
xor
loope
mov
dec
je
xor
xchg
xchg
add
push
cmpsb
xchg
push
dec
push
mov
insl
pop
mov
imul
aad
mov
mov
inc
in
adc
push
data16
popf
andl
dec
fmulp
lods
aad
out
inc
push
push
popa
orb
ret
cmp
pop
outsl
out
and
cmp
sbb
frstor
fisttpll
sbb
dec
hlt
pop
scas
aad
cmp
mov
add
loopne
cmpsl
arpl
cwtl
mov
adc
scas
mov
add
aaa
adc
push
cmp
repz
pop
divl
aad
les
jl
ret
push
loop
dec
js
inc
orb
movsb
push
popl
dec
cmpl
testl
iret
enter
sbb
mov
es
dec
push
imul
es
test
ds
rcrl
in
mul
mov
pop
test
or
cmpsb
sub
mov
mov
outsl
adcl
popf
xchg
sub
hlt
nop
jae
maskmovq
pop
imul
call
cmp
stos
in
int
imul
xor
rorb
push
inc
mov
mov
bound
push
adc
mov
imul
pop
pop
adc
repnz
cmp
fwait
stos
add
test
cld
std
es
inc
icebp
clc
mov
arpl
fwait
jb
dec
lods
pop
pop
and
push
loop
aas
xchg
popl
inc
addr16
pushf
mov
shl
in
mov
or
jbe
call
insb
pop
hlt
inc
dec
repnz
outsb
and
and
pop
scas
stos
les
sub
mov
jge
pop
mov
pop
pop
ja
scas
mov
or
aad
dec
mov
repz
jmp
sub
cmp
orl
cmpsb
sbb
jle
add
sbb
adc
andl
out
xchg
dec
push
pop
arpl
xchg
sub
push
pop
pop
mov
in
dec
nopl
adc
sbb
mov
movsb
add
mov
add
aas
push
dec
dec
pushf
fbstp
pop
or
jne
sbb
shr
xchg
mov
cli
cmp
push
pop
leave
fisubs
rcr
xor
lret
xchg
pop
xchg
enter
inc
push
fdivr
cmp
fstl
lahf
ja
mov
addr16
out
fisttpl
aad
push
fstl
jne
cmpsb
hlt
and
mov
push
push
cmp
mov
xor
test
jb
and
cs
bound
lahf
or
mov
push
cld
xor
adc
jno
jl
sbb
cmp
aas
jbe
insl
stos
jg
or
mov
data16
enter
stc
mov
xchg
or
sub
add
mov
dec
or
out
sub
cmp
and
add
insl
insl
mov
hlt
daa
xor
xchg
cltd
movsl
jl
rclb
scas
pop
gs
inc
sti
xchg
add
sbb
cmovb
pop
cmpsl
cmpl
ror
cld
int3
das
iret
test
fs
int3
add
bound
adc
in
pop
sbb
movsb
mov
subb
and
js
mov
movsb
xlat
inc
pushl
cwtl
in
ds
add
mov
fbld
cwtl
pop
pop
fldt
pop
sub
sbb
je
sarb
ret
enter
mov
aas
xor
adc
sub
insl
pushf
stos
mov
outsl
mov
cmp
jl
pop
hlt
icebp
adc
cmpsl
sub
jo
and
fsts
andl
xor
fmul
cmc
or
and
jl
iret
out
cmp
int3
pop
in
cmp
jl
sbb
loopne
ja
mov
dec
push
sub
mov
subb
sub
outsl
add
pop
jecxz
mov
hlt
loop
xor
sbb
push
mov
idiv
into
or
rcl
stos
clc
cmpsl
dec
loopne
dec
mov
mov
in
sub
or
mov
movsl
mov
pop
out
or
clc
out
lcall
dec
push
cmp
iret
push
sbb
sub
xor
or
xor
fistpl
pop
dec
in
cmp
bound
roll
push
fnstsw
jecxz
cvtps2pi
es
mov
xchg
je
lgs
mov
test
and
or
cmp
xchg
fcompl
in
ficoml
hlt
lahf
les
je
aad
fists
daa
push
cld
push
loop
out
xchg
jns
lock
scas
movsl
xchg
xorb
push
dec
loope
dec
xchg
push
nop
cltd
loopne
pop
push
sbb
xchg
in
mov
mov
jp
push
movsl
outsb
lahf
inc
and
sub
add
inc
cmp
xchg
mov
mov
pusha
loope
push
push
dec
jmp
dec
pop
mov
shrl
mov
inc
ss
lcallw
loope
add
ljmp
outsl
and
adc
mov
mov
sti
and
cmp
cmpsl
adc
sbb
xor
repz
sub
icebp
jl
or
shrb
test
mov
clc
bound
ret
cmp
dec
inc
lea
lods
mov
pop
cmc
push
into
cli
sbb
jg
and
vucomiss
sarl
mov
aaa
je
ds
cmp
xor
add
pop
insl
xor
ds
push
push
add
in
frstor
popa
xchg
fs
fisttpl
sbb
out
pop
repz
repnz
repnz
scas
cmp
inc
out
adc
adc
dec
mov
mov
aas
sbb
pusha
add
push
xchg
inc
lods
sub
fld
rclb
push
out
inc
adc
push
push
adc
mov
mov
pop
ficompl
pop
jno
sub
push
scas
or
in
stc
inc
cmpsl
and
aam
cltd
out
mov
pop
sub
movsl
push
enter
pop
mov
sarl
and
mov
jge
shlb
cld
testl
cmpsb
scas
paddusb
pop
int
xor
lock
insl
call
mov
in
mov
adc
dec
incl
jbe
fisubrl
inc
into
push
mov
cmp
cmpsb
mov
mov
sbb
test
call
pop
sub
lock
lcall
or
xor
orb
shlb
js
or
out
add
shlb
jae
mov
pop
out
cld
and
enter
push
nop
xor
adc
mov
jno
push
and
jo
and
xor
jecxz
pop
gs
scas
mov
inc
inc
add
int
cmp
push
shl
or
loope
sbb
shr
or
adc
and
and
movsl
roll
inc
or
cmp
push
jns
adc
std
pop
mov
in
aaa
sub
add
pop
sub
ss
sbb
mov
sahf
mov
insl
inc
fistl
sub
add
push
mov
xchg
mov
jg
inc
dec
subl
pop
sub
mov
pop
fstpt
stos
cmp
cmc
inc
jg
adcb
popf
lock
jge
mov
lret
add
jecxz
leave
add
leave
sub
je
add
push
rorb
or
rolb
mov
mov
lds
popf
test
icebp
jmp
dec
cltd
cmp
mov
mov
mov
jns
dec
in
push
mov
sub
iret
inc
adc
mov
fnstenv
in
xor
xchg
scas
mov
in
xchg
lock
pop
push
jle
and
jne
fldt
mov
icebp
in
sub
jbe
sub
je
test
mov
call
stos
cmp
aam
jle
dec
bound
pop
and
cld
pop
and
mov
sarb
jmp
mov
sub
or
pusha
mov
leave
rclb
mov
add
mov
out
push
in
int
ret
sbb
lret
cli
and
mov
mov
add
sbb
cmp
sbb
xor
cwtl
push
aaa
adc
in
hlt
or
sbb
stc
jbe
xchg
or
fstpt
add
xchg
jge
sbb
push
mov
or
inc
leave
inc
jno
lcall
pop
stos
in
dec
sub
sub
and
jno
push
rcll
jae
in
push
das
inc
pop
xchg
sti
cmp
test
iret
fstpl
in
popf
or
cmpsl
and
hlt
fistpl
clc
hlt
fwait
rep
sbb
add
and
sub
loopne
dec
imul
pop
js
stc
icebp
add
in
sbb
or
and
add
rcl
push
lea
je
sub
hlt
mov
sub
outsl
fstl
push
jmp
and
into
movsl
and
pop
inc
lods
mov
cmc
aas
in
push
ljmp
jge
loope
lds
and
inc
sarb
bound
cld
dec
lahf
add
dec
xlat
sub
int3
ret
je
je
mov
and
jno
imul
movsb
mov
aaa
out
jge
les
and
iret
jno
mov
add
jg
xchg
mov
jne
cmpsb
cmp
ffree
add
mov
push
cmpsb
xchg
movsb
cmpsb
cmp
fcmovbe
sahf
adc
stos
add
cmpsl
ja
dec
sbbb
imul
insb
fldl
mov
push
das
cmp
call
sub
je
lret
stos
adc
aaa
fldcw
mov
gs
test
pushf
out
push
cmc
sub
out
pop
add
or
sub
add
int
inc
mov
mov
jnp
cmp
incl
inc
sbb
fldt
cltd
roll
popf
push
mov
jne
mov
mov
int
xor
add
mov
xlat
lcall
xchg
ljmp
into
mov
xchg
sbb
popa
pop
pop
dec
rcll
jne
and
cs
stos
cmp
add
xor
daa
in
lret
push
xchg
push
mov
add
pushf
ds
xor
fs
outsb
and
sbb
xor
shl
loopne
jo
cli
cld
fisttpll
nop
scas
ret
gs
loop
stc
inc
adc
cmpsb
sub
jns
cwtl
cmp
je
push
pop
adc
jns
jns
mov
sub
mov
mov
insl
pop
pop
sbb
js
rorb
dec
xor
stc
add
pop
dec
add
iret
or
mov
fstp
and
sti
pop
xchg
stos
inc
inc
pop
clc
shll
andb
js
cmp
add
xor
lds
push
inc
pushf
sub
pushf
mov
orl
push
es
lods
addr16
xchg
cltd
pusha
add
stos
je
push
fcmovnbe
leave
dec
jb
addr16
adc
xchg
decb
pop
pop
lahf
sbb
in
jl
mov
pop
dec
ds
cmc
fwait
sbb
loopne
test
cltd
pop
out
adc
aam
arpl
fadds
mov
mov
cmpl
inc
insb
and
movsl
ficompl
pop
das
adc
cmc
sbb
dec
mov
xor
shll
lcall
mov
inc
imul
cmc
cmp
inc
xor
mov
das
sbb
add
dec
adc
cmpsl
push
xchg
roll
or
push
mov
shll
push
lods
mov
sub
hlt
movb
mov
dec
add
add
sbb
bound
repz
fwait
xor
movsl
insb
jo
sub
mov
or
into
mov
shrl
test
in
dec
test
pop
jp
notb
jge
std
xchg
add
xchg
pop
mov
out
add
sarb
cmp
jnp
pushf
imul
cli
dec
xor
lcall
sbb
loop
mov
pop
adc
jns
pop
insl
inc
xchg
pop
testl
repz
add
pusha
push
and
cmp
popa
push
jae
sub
mov
sub
std
add
dec
enter
dec
test
ds
movsb
sbb
mov
mov
xor
adc
shlb
push
orb
aam
mov
push
or
mov
lods
mov
xor
loopne
push
ljmp
mov
loope
ja
ret
dec
mov
pop
lods
testb
pop
pop
lds
sub
adc
addr16
pop
mov
insl
pusha
loop
inc
movsb
pop
mov
insb
mov
inc
mov
aad
dec
cmp
xor
arpl
arpl
inc
in
jno
cmp
int3
jecxz
jbe
fdivl
add
iret
je
in
sub
push
scas
sbb
adc
stos
std
call
mov
xor
push
shrb
fisubl
je
cmp
mov
sbbb
enter
popa
lret
int
popf
push
mov
jb
push
push
dec
add
shll
jnp
es
nop
xchg
xlat
mov
sbb
cmp
push
aaa
adc
cmp
jl
add
insb
sti
movsb
cmpsb
stos
xor
add
hlt
fs
and
lods
aas
fisttpll
data16
inc
sbb
addr16
movsb
push
push
lahf
sbb
sbbb
in
pop
xor
mov
stos
and
mov
and
stos
dec
push
push
sub
scas
pop
imul
or
movsl
cmc
mov
outsl
je
mov
jl
repnz
aad
cmpsl
icebp
add
jmp
adc
xchg
fcompl
das
mov
dec
outsb
jne
ss
inc
cwtl
push
pop
arpl
cmp
lds
mov
sbbl
mov
in
or
mov
arpl
dec
dec
fcomps
push
pop
insl
dec
push
int3
xor
pop
xor
mov
icebp
mov
sahf
leave
or
lret
mov
xchg
outsl
push
lds
cli
and
push
dec
shl
jb
lock
push
cmpsl
xchg
xor
inc
cwtl
push
in
rcrb
xchg
fsubrp
xchg
repnz
faddl
xlat
cli
xor
idivb
ret
call
jne
int
push
and
bound
fistpl
xor
fcomp
push
xor
cmpsb
mov
dec
cmp
cwtl
les
and
push
xchg
inc
jns
mov
cwtl
cli
add
sbb
fcmovnb
ret
mov
fidivs
imul
addr16
lods
out
enter
subl
or
jg
shrl
je
inc
push
js
enter
mov
cmp
shr
rol
ret
pop
sub
les
insb
jnp
inc
in
xor
incl
outsb
jge
mov
pop
popf
rcrb
pushf
lahf
icebp
ja
sub
rcr
mov
cwtl
ret
and
addr16
lds
fwait
cmpsl
mov
dec
or
jae
rol
pop
push
inc
push
mov
or
repnz
imul
mov
lcall
xchg
pop
movsb
adc
cmp
mov
mov
sbb
jg
pop
xchg
mov
cmpsb
push
mov
les
jno
xor
mov
fisubrl
xor
fstl
roll
push
ljmp
jle
cmc
rcll
push
data16
or
jg
fwait
outsb
inc
fwait
mov
scas
xchg
add
pop
popa
mov
aam
mov
inc
push
adc
movsb
add
or
mov
or
and
pop
dec
cmp
xor
push
cmp
jne
shl
jbe
and
push
pop
pop
cli
xor
inc
push
mov
inc
push
sti
add
xor
push
xchg
and
lods
add
and
sub
or
aaa
jnp
sub
push
lcall
jmp
in
pop
pop
push
cmpsb
mov
xchg
pop
insl
pop
arpl
adc
leave
fcmovnb
cmp
push
xor
lea
insb
add
stos
lds
xchg
dec
jbe
andl
stos
jge
ds
in
lods
out
mov
cmpsb
mov
insb
inc
in
lock
data16
xchg
mov
insl
jo
adc
subl
push
and
jecxz
jnp
in
lds
mov
mov
jl
sbb
sub
sbb
mov
inc
cltd
mov
xchg
mov
and
xor
xchg
fs
fstpt
shrl
xchg
aad
sub
jecxz
sbb
or
xlat
je
call
push
addb
fstpl
test
addr16
stos
cmp
sbb
sbb
ss
jnp
adc
cli
mov
jb
repnz
jns
fists
jae
xchg
sub
or
dec
mov
enter
dec
dec
xor
in
repz
popf
adc
pop
cmpb
mov
outsb
icebp
xor
repnz
push
lock
and
mov
jae
and
and
dec
addr16
mov
shrl
nop
cmp
push
ret
cltd
or
mov
jle
lahf
adc
lods
cltd
xlat
cmc
pop
mov
cs
mov
or
xor
andl
int
and
mov
xchg
cmpsb
mov
fcoml
fs
ljmp
lret
stc
mov
rcrb
rcrl
dec
jns
mov
push
adc
mov
adc
in
clc
jns
les
mov
mov
sbb
rclb
pop
stos
cmc
or
imul
pusha
fdivl
hlt
lea
cmp
fsubp
adc
dec
inc
scas
inc
cs
movsl
pop
add
inc
xor
cwtl
push
test
sub
jl
lods
in
adc
sub
dec
mov
cs
loop
mov
xchg
scas
jp
or
lea
and
jbe
cmp
mov
pop
int
xchg
mov
popa
xor
fnstcw
js
jle
out
or
movl
xchg
into
mov
sbb
sub
xor
jge
imul
je
stos
sub
mov
adc
ljmp
mov
jg
mov
push
pop
add
mov
leave
xchg
inc
inc
lea
aaa
jnp
pop
xor
pop
loopne
scas
nop
or
outsl
mov
sarl
cmp
aad
pop
lods
sbb
and
cmp
nop
je
jo
cmp
xchg
cmpsb
sbb
xor
lock
sahf
scas
aam
in
movsb
mov
bound
stos
jp
mov
sub
xchg
dec
test
pop
push
mov
mov
aas
add
icebp
add
jne
iret
js
cs
xchg
xchg
push
and
cwtl
outsl
call
incl
mov
xor
aad
jge
mov
pop
xchg
in
lret
xchg
out
jno
das
jmp
adc
fs
xlat
push
outsl
loop
cmpsb
mov
ja
pop
pop
dec
in
fadds
cmp
cli
in
mov
dec
and
push
push
push
cli
mov
jge
imul
inc
stos
lods
popa
lds
adc
jl
fwait
dec
orb
push
into
xor
xor
push
call
sbb
xchg
aas
in
mov
dec
fcmovnb
mov
pop
test
je
mov
add
or
sub
outsb
sbb
cmc
cld
int
xchg
mov
insb
push
orb
sbb
arpl
sbb
xor
mov
push
out
out
jge
mulb
mov
push
sbb
mov
mov
pop
xor
fdivl
cmc
cmpsb
inc
lods
sub
hlt
cltd
dec
adc
das
testl
pop
jp
ss
std
je
xchg
add
into
dec
ja
scas
dec
addr16
sub
bound
cs
ret
xlat
cwtl
sub
or
in
int3
push
aam
in
xor
xorb
fdivrp
cmp
fimull
and
lock
add
mov
mov
inc
push
ds
or
xchg
add
bound
mov
adc
leave
jp
xchg
dec
inc
int3
cmp
cmpsb
les
into
xlat
lods
test
das
mov
mov
rolb
mov
aaa
aam
jae
jp
mov
dec
or
and
and
cmp
add
xchg
or
lea
jbe
fbstp
loope
fidivl
ficoms
sub
jmp
stc
sarl
rcl
or
scas
fdivl
pop
scas
mov
mov
std
test
or
shrl
icebp
fdivrl
inc
arpl
decb
pop
insb
cmc
stos
call
fiaddl
cmpsl
shrl
dec
xchg
sub
pop
mov
push
or
mov
jno
push
inc
jg
pop
iret
add
sub
xchg
push
stos
test
hlt
rcl
fmuls
jb
mov
or
inc
sarb
imul
or
dec
and
or
rorb
addr16
imul
dec
inc
cmp
arpl
jns
adc
dec
loop
adc
cmc
jecxz
test
imul
sbb
pop
and
push
dec
movsl
lea
test
int3
ret
pusha
rorb
inc
bound
loop
in
xchg
xchg
push
sahf
data16
call
scas
jl
shr
and
aas
cmp
cmp
dec
adc
scas
gs
jne
adc
bound
cmp
lea
dec
fisubs
pop
fldt
int
cmpb
pushf
fld
pop
ja
inc
pusha
cmp
inc
fsubrs
lret
fwait
sub
jge
leave
shrl
mov
and
int
into
dec
mov
scas
imul
mov
adc
cmp
shl
add
inc
fs
sbb
rcrl
inc
xchg
ss
pushf
adc
jae
testb
or
push
mov
mov
mov
jo
adc
frstor
cmp
push
int
sub
ret
enter
add
dec
jno
pop
push
mov
push
lock
cwtl
push
jbe
in
push
sarl
aaa
xor
mov
ss
ret
inc
ret
jae
dec
push
call
mov
fcmovb
sub
loop
mov
pop
mov
push
mov
sub
shll
adc
in
imul
sub
mov
fwait
xchg
cld
dec
pop
dec
cmp
and
sub
shlb
ret
inc
lret
rclb
xchg
incl
mov
stos
test
mov
bound
push
adc
push
pop
and
int
outsb
sahf
sub
sahf
das
cli
inc
push
addr16
mov
lahf
movsb
sbb
sbb
xor
ret
jl
cli
ficoml
or
daa
fisttps
sub
push
inc
or
scas
or
adc
pop
adcl
cmc
add
fildll
adc
popf
jmp
pop
imull
mov
xchg
repnz
les
xor
out
sub
push
rol
cmpsb
decb
cli
out
out
sub
pop
xchg
rclb
into
cmp
or
push
push
ljmp
mov
popa
cli
mov
outsb
lock
pop
mov
fwait
test
lock
xchg
into
arpl
sub
and
popa
into
jne
enter
icebp
fstl
mov
es
jb
mov
xor
inc
idivb
cmpb
mulb
sbb
or
repnz
jp
clc
mov
cmp
inc
xor
loopne
cld
xchg
fsub
cmpsb
mov
insl
mov
sub
fdivrl
cmpsl
mov
repz
and
int
adc
or
call
pop
into
sub
in
xor
enter
adc
cmc
xor
push
sub
dec
xchg
fidivrl
sbb
inc
ds
jl
cltd
rolb
sub
in
aad
mov
cmp
cmp
push
fcmovnbe
cmp
dec
jae
adc
fdivr
inc
mov
jb
inc
jle
mov
pop
xchg
mov
scas
dec
adc
int3
test
xlat
or
push
stos
or
push
and
mov
cmc
pushf
and
xchg
push
sbb
push
dec
addr16
or
imul
dec
add
jo
inc
sahf
sbb
pop
fnstcw
std
sbb
test
pop
adc
mov
lock
loope
in
fdivr
inc
jae
jmp
push
ja
mov
mov
lret
rcll
cltd
lahf
and
insl
std
jne
dec
push
daa
push
ljmp
mov
inc
les
xor
sub
push
stc
cld
lods
pop
cmp
popa
subl
jg
mov
push
jp
mov
jmp
adcb
fdivrs
pusha
add
daa
pop
movsb
mov
push
test
clc
add
gs
dec
push
xor
xor
psrld
mov
fstl
adc
jge
jge
pop
js
ja
mov
pop
add
jne
cmpsb
notl
mov
rorl
add
leave
pop
mov
mov
fs
mov
loope
lea
jns
negb
dec
mov
cmp
std
xor
xor
lods
dec
sub
cmp
movsb
cmp
push
push
cmp
cmp
and
push
out
rsqrtps
adcb
addr16
mov
or
xor
aaa
cmc
jg
push
fsubl
stos
jge
sub
pop
hlt
sub
push
imul
add
fnstenv
call
mov
cmp
and
int3
stc
mov
xchg
jmp
jne
sbb
es
outsl
dec
xchg
aaa
sbb
jb
fwait
mov
movsl
and
loop
xchg
test
and
adc
mov
mov
shll
movsl
mov
or
adcb
stos
adc
out
out
or
jb
clc
jbe
jecxz
fistps
lahf
and
mov
loop
cmpb
cmp
mov
push
pop
xchg
in
fnstenv
mov
xor
fistpll
test
in
cmc
push
sub
pop
sahf
add
mov
test
jge
lea
test
cld
leave
push
mov
cmp
xchg
stc
data16
call
out
std
leave
movsl
arpl
repnz
push
shll
sbb
ficoml
sbb
lods
adc
or
sti
fs
push
ja
jl
pop
jns
jbe
arpl
mov
pop
ret
aad
mov
fistl
pop
fsub
sahf
and
cs
mov
cmp
xchg
jmp
pop
sub
or
inc
push
aam
xor
xor
add
push
cmpl
jg
mov
push
int3
fwait
mov
mov
xchg
pop
xor
pushf
sbbl
cmpb
mov
std
xor
mov
inc
jmp
add
or
pop
pusha
lret
mov
mov
sbb
cmp
sbb
sub
inc
fisttpl
pop
xchg
sbb
pushf
cmpl
inc
lods
mov
imul
in
jl
hlt
imul
or
lock
cmp
fs
lods
sub
adc
dec
inc
cld
mov
jp
fwait
pop
pop
into
add
addr16
jmp
adc
cli
inc
shll
dec
ret
testb
pop
dec
sti
mov
mov
or
orl
lcall
in
aas
stc
scas
push
and
in
imul
pushf
ja
enter
aaa
movsl
dec
jne
xchg
inc
test
int
sahf
shlb
fs
stos
lock
ret
push
inc
int3
sbb
fs
orw
addl
xor
mov
mov
pop
and
call
add
mov
rcrb
jns
xchg
repz
mov
adc
mov
and
and
push
or
add
mov
or
int
or
aas
lret
or
int3
adc
data16
lea
imul
pop
movsl
cmpsb
test
data16
and
jne
pop
and
xchg
push
inc
cmp
cli
dec
push
testl
or
std
dec
aam
popa
sbb
adc
mov
sbb
xor
jmp
es
dec
mov
jg
mov
xchg
js
pusha
cmp
fstl
xor
fistl
cmp
or
push
sahf
mov
push
and
into
push
sub
popa
lock
push
push
xchg
add
xchg
sub
and
pop
pushf
mov
test
je
push
sbb
push
or
fists
sti
mov
xor
ja
xchg
stc
and
std
shlb
mov
cmp
lods
push
xchg
dec
sub
es
lahf
add
mov
adc
js
add
xor
jl
add
imull
sbb
cmp
setl
push
mov
adc
push
sbbb
dec
or
in
pop
add
aaa
push
andl
jo
xor
add
dec
lea
lret
pop
clc
jl
cmp
mov
mov
lds
imul
jmp
test
lods
adc
sbb
pop
gs
jo
adc
sub
cmp
fadds
in
cmp
dec
mov
imul
out
daa
jg
mov
repz
ret
sub
inc
andl
loop
adc
outsb
cmpsl
rol
scas
popaw
arpl
wbinvd
mov
rcr
fiaddl
adc
loop
fildl
sti
lock
sbb
push
pop
lds
lds
mov
shll
jns
mov
mov
scas
adc
rclb
xchg
incl
fnsave
in
popa
dec
pop
shl
push
lds
fiaddl
inc
jo
ja
xchg
xchg
inc
add
in
or
mov
mov
dec
scas
cmp
pop
xor
jecxz
js
push
int3
ds
lds
or
in
push
jo
out
sbb
push
add
and
mov
cmpsl
mov
xor
cmpsb
adc
mov
pop
adc
cbtw
scas
loopne
mov
mov
ss
repnz
dec
inc
repz
in
jmp
gs
ds
fldt
lds
aam
inc
pop
addr16
loope
lret
jge
js
out
outsl
mov
daa
xchg
jne
jl
std
pop
movsb
jb
mov
pop
fucomp
lahf
gs
push
mov
mov
cs
movl
stos
or
stos
mov
lcall
stos
xchg
add
je
jnp
sub
enter
mov
mov
movsb
adcb
push
xor
imul
cli
dec
mov
jg
jge
ss
mov
test
pop
adc
pop
adc
pop
icebp
sbb
je
fsubl
jmp
jmp
cmp
std
cmp
xchg
popf
cmp
ror
push
xchg
ret
mov
add
inc
inc
sub
jns
and
insl
cmp
pop
mov
andb
xor
sbb
in
sub
add
cmp
inc
mov
xchg
lods
pop
adc
jl
jecxz
pop
jns
pop
in
xor
jb
jae
sbb
mov
and
icebp
xor
and
adc
cld
and
adc
pop
inc
fistpll
fxam
sbb
adcl
sub
add
out
imul
imul
shlb
and
jae
push
mov
or
in
lcall
or
mov
iret
repz
jmp
pop
aas
popf
js
push
stos
movsb
or
sti
pop
mov
cmp
mov
aad
movsl
xchg
xchg
inc
scas
ja
leave
ja
mov
insl
fimull
neg
fsubrs
dec
xor
inc
xchg
hlt
test
xlat
push
push
lock
idivb
sbbb
jmp
in
nop
int
in
stos
sbb
ja
pop
adc
imul
lock
js
jo
mov
in
ret
jae
test
lock
pop
add
mov
std
sar
fnstenv
jp
mov
jmp
dec
pusha
loopne
xor
cli
fs
add
loop
mov
mov
sub
add
stc
cwtl
push
mov
push
jle
pushf
in
add
imul
or
jmp
sahf
jb
xchg
pop
xchg
dec
and
shlb
fsubrl
and
dec
ja
cmp
dec
adc
adc
mov
fnstenv
mov
or
and
or
adc
call
out
js
pop
scas
iret
cmpl
dec
sahf
mov
pushf
scas
ja
scas
jmp
std
iret
dec
mov
imul
sub
inc
int3
cmpl
dec
cmp
es
dec
loopne
inc
enter
adc
stc
push
fwait
dec
cmpsl
daa
cmp
add
fsubrs
adc
mov
dec
ds
xchg
mov
or
dec
or
fnstcw
aas
inc
cmp
dec
jb
dec
push
adc
mov
loop
xor
push
pop
jne
fstp
jle
repnz
sbb
cmc
fstpl
jno
sub
popa
mov
inc
popf
loope
xchg
push
das
loopne
mov
xchg
je
inc
sub
rcll
or
push
es
xchg
push
test
fstps
adc
push
in
pop
or
lods
xchg
jle
inc
int3
out
jmp
jns
adc
movl
fistl
aaa
jae
test
and
cmpsb
xor
out
sub
and
add
lds
jg
fs
sub
ljmp
xchg
clc
sub
lods
push
and
adc
lods
jnp
mov
sarl
cmc
icebp
imul
cmpsl
pop
mov
xchg
mov
test
mov
lods
jns
inc
test
in
iret
mov
sbb
jne
repz
cmp
pop
dec
mov
iret
mov
ret
inc
mov
mov
pop
ficoml
cmpsb
in
cmp
pop
loopne
sbb
pop
mov
je
clc
jl
add
pop
fistpl
cli
add
iret
push
stos
cwtl
mov
jbe
sbb
mov
jl
popa
es
scas
push
repz
outsb
pop
aad
pop
mov
cmpl
push
xchg
jno
jno
cltd
jo
insb
in
rcrb
iret
das
imul
sub
dec
iret
stc
cld
add
xchg
jp
mov
pusha
mov
xor
enter
push
mov
fwait
rcr
cmp
cmpsl
loope
cmp
sahf
sub
enter
decb
mov
push
adc
xchg
jbe
push
adc
inc
mov
into
lea
imul
loope
arpl
lea
and
jg
pop
jae
pop
loop
mov
insb
sar
sbb
cli
pop
loopw
adc
out
mov
or
cmp
xor
pushf
mov
push
ficoms
pop
ss
call
mov
rorl
pop
sub
mov
sahf
or
into
adc
es
sbb
out
je
mov
imul
rorl
pop
sti
insb
sub
dec
js
and
lods
mov
mov
mov
push
or
and
orb
xchg
out
dec
leave
dec
test
repz
enter
lods
mov
push
popf
in
cmc
xchg
sahf
inc
pop
pusha
sub
jnp
flds
add
mov
movsb
mov
fs
data16
cmp
sub
pop
clc
loop
mov
xchg
scas
pop
mov
mov
pop
cmc
into
xor
jecxz
fs
lcall
and
xor
hlt
mov
popl
popf
mov
loop
pop
jbe
xor
cmp
stos
pop
lock
int
out
lock
push
cmc
jno
add
push
push
sahf
push
mov
xor
sub
inc
nop
les
das
pushf
pop
test
int3
xor
loopne
or
cld
add
sub
jae
stc
or
popf
popf
mov
pop
in
rclb
inc
adc
pop
mov
ficompl
outsb
shll
sub
mov
xchg
dec
lret
scas
xorb
jno
cld
scas
and
test
outsl
icebp
call
xorps
fs
mov
sub
out
and
sub
in
bound
stos
pop
cmpsl
xor
xorb
scas
scas
adc
mov
cld
pop
in
push
jo
mov
xor
push
into
jecxz
repz
push
xchg
mov
idivl
in
sarb
or
dec
test
cmp
clc
pusha
aad
cmc
ja
scas
rcrl
inc
shr
dec
sbb
lods
ror
mov
cmp
divl
push
mov
ds
push
xor
inc
hlt
dec
rcrl
ret
addb
pop
inc
pop
adc
lea
add
ljmp
aad
dec
add
cwtl
cltd
dec
or
sub
inc
in
mov
fcoml
add
and
jle
mov
repnz
push
loop
popw
push
daa
and
adc
fdiv
mov
addb
sar
mov
adc
xlat
xchg
nop
jnp
and
imul
jns
dec
ss
movl
sar
frstor
loopne
mov
push
adc
rclb
dec
out
add
cmp
call
das
jmp
pop
testl
xchg
orl
aas
cmp
xchg
add
rolb
jo
jo
jg
mov
xor
out
iret
fcom
popf
jmp
sbb
xor
push
mov
les
dec
sbb
xor
dec
clc
insl
loopne
das
mov
lret
mov
fdivr
adc
dec
mov
enter
int3
adc
out
sbb
imul
push
xor
cmpsl
mov
pusha
dec
out
xor
fisubrs
inc
leave
push
add
aad
inc
dec
lods
movb
xchg
outsl
pop
scas
out
iret
repnz
in
xorb
aaa
pop
movsb
fs
jle
jecxz
xor
dec
repz
fwait
cmpsl
aas
sti
xchg
test
inc
daa
ljmp
shl
xor
mov
icebp
or
push
fstps
stc
loop
sarl
lds
push
xchg
dec
out
cmp
cmp
bnd
mov
out
pop
mov
fucomi
shll
push
or
xchg
dec
dec
xchg
inc
data16
dec
xchg
popf
je
push
inc
and
cmp
scas
enter
xchg
inc
sub
movsb
or
mov
aaa
mov
mov
int
in
std
add
jb
jae
sbb
xchg
gs
jmp
xchg
jmp
cs
push
pop
ljmp
or
movsb
and
push
loopne
and
jmp
jl
scas
cmpsl
and
sti
jge
push
negb
cmpsb
ret
stc
out
push
dec
out
push
add
adc
ss
jl
pop
xor
out
lods
insb
mov
jae
sbb
mov
aaa
int
enter
pop
push
lret
xor
mov
enter
cmpl
pusha
adc
mov
pop
or
xchg
xchg
pop
mov
jle
push
adc
stc
pop
pop
inc
loop
cmp
inc
mov
xor
sti
aam
pop
test
inc
repnz
adc
negb
cmp
sbb
jmp
sbb
stc
out
lods
hlt
je
std
mov
scas
lcall
add
cmpb
not
lods
ljmp
adc
inc
add
mov
or
stos
and
test
mov
popl
jp
lcall
sar
subb
xchg
idivl
xchg
push
test
inc
shll
jle
sub
sub
pop
mov
sahf
xchg
mov
xorl
into
xchg
xor
out
je
push
ljmp
popa
fimull
lcall
out
adc
fwait
lret
dec
pop
je
adc
cmpsb
push
call
or
jne
and
mov
aas
sti
fisubs
pop
cmp
or
add
cli
les
lret
out
fdivrs
sarl
imul
sub
add
addr16
cs
jnp
in
pop
nop
fyl2x
js
pop
lret
mov
push
sbb
stos
mov
xchg
add
stc
push
lods
mov
cmc
pusha
sbb
dec
add
xchg
jmp
mov
testb
add
add
lods
in
ficoml
loopne
fisubs
les
fs
loop
aam
or
or
dec
push
cwtl
mov
sti
ljmp
and
dec
int
pop
mov
dec
and
ljmp
mov
punpcklwd
push
mov
mov
xchg
ljmp
add
adc
push
push
test
or
push
adc
cmpsl
pop
jne
nop
or
popf
lret
mov
push
push
sbbw
mov
push
mov
xchg
dec
div
xchg
xchg
aas
mov
pop
xchg
sti
jg
test
sub
dec
mov
add
push
imul
and
xchg
sbb
sahf
sbb
in
stc
add
mov
nop
or
add
add
dec
xchg
neg
xchg
push
adc
mov
cmp
lods
pop
push
sbb
les
movsl
push
or
mov
push
lods
push
inc
mov
sub
cmpb
push
sub
insl
shrl
shr
push
in
xor
aad
mull
push
adc
in
push
mov
inc
jmp
movsb
in
jp
mov
pop
mov
insl
cli
outsl
push
and
test
scas
loope
jbe
test
rcrb
push
mov
jns
push
sarb
fincstp
sub
dec
jb
je
adc
lock
lret
jmp
jl
xchg
cmp
pop
scas
loop
mov
lods
mov
push
dec
dec
jbe
jo
sbb
orb
int
jl
add
or
cltd
addr16
sbb
pop
fmulp
adc
sbb
xor
lcall
inc
xorl
or
push
adc
or
add
js
lea
fildll
inc
mov
fs
fdivrl
sbb
push
push
mov
jne
mov
push
sbb
or
aam
rcrl
jb
push
pusha
outsb
mov
ret
jne
add
pop
xlat
imul
test
rol
push
fs
or
fnsave
icebp
out
movsb
fwait
imul
push
push
pop
mov
add
test
jb
and
bound
sti
mov
imul
jmp
movsb
jno
add
push
mov
mov
jle
out
movsb
and
fcomi
xchg
mov
fs
addr16
or
jp
or
pop
fs
push
ljmp
insl
and
scas
dec
add
or
pop
dec
jne
push
xchg
daa
stc
inc
push
xchg
mull
js
ret
insb
out
test
in
movsl
outsb
jg
push
ljmp
mov
divb
push
pop
add
incl
lret
mov
cmp
ljmp
sbb
std
cmp
push
stos
frstor
out
mov
push
mov
fs
adc
lods
lods
push
inc
fcoms
push
jp
sarl
scas
cli
sub
pushl
outsl
outsb
inc
jne
icebp
add
push
mov
test
dec
adc
fwait
mov
pop
cmp
add
adc
lock
fstl
lea
lds
mov
sti
hlt
fwait
and
std
add
mov
dec
sub
mov
mov
pop
test
in
fbld
stos
and
lock
cwtl
movsl
or
fdivp
mov
inc
add
pusha
sahf
nop
push
dec
sub
add
or
add
ds
mov
push
cli
data16
pop
or
cs
sub
push
cmpsb
xor
insb
push
mov
dec
out
std
loop
jbe
shrb
pop
mov
push
fnstsw
idiv
pop
xor
ret
test
jb
inc
mov
xchg
inc
or
or
xor
aaa
mov
xchg
out
icebp
adc
and
sub
lcall
push
push
out
mov
addr16
or
ds
imul
sbb
es
es
insb
sbb
or
pop
mov
mov
stc
push
das
sbb
aad
cmc
std
std
into
push
pushf
in
inc
out
dec
add
arpl
jb
pop
mov
aaa
repz
ja
orb
adc
popf
cmpsl
and
dec
jb
scas
data16
repnz
dec
sbb
aam
adc
iret
mov
pop
xchg
sbb
inc
aam
cltd
std
mov
or
pop
aad
xor
repnz
push
test
jg
fucomip
clc
xlat
in
mov
ss
cmp
mov
dec
cld
xlat
test
out
fldenv
in
stos
ja
loope
cltd
and
scas
dec
clc
jge
inc
pop
xor
movsl
out
sub
lods
push
filds
scas
jns
shlb
lock
inc
adc
push
inc
push
cmp
lods
mov
dec
decb
mov
adc
cmpsl
ret
into
inc
cmp
ljmp
fmul
push
push
and
xchg
loope
adc
lods
jmp
inc
push
add
and
push
adc
repz
or
push
dec
xorl
pop
xchg
fstpl
cltd
cmpsb
inc
subb
lcall
aad
mov
mov
push
repnz
pop
mov
xor
call
aas
xlat
aad
jne
push
add
test
xchg
xchg
nop
es
jbe
ficoml
int3
mov
lcall
pop
pop
sub
push
mov
or
push
test
push
pop
ret
out
inc
sahf
scas
jbe
aas
mov
and
jo
aaa
in
mov
pop
sub
xchg
mov
pop
xor
pop
neg
push
pop
loope
push
fs
add
and
fstl
mov
insl
lea
push
mov
rclb
insb
cltd
jnp
rol
sbb
sbb
cmpsb
fs
push
sub
and
lds
push
mov
shrl
adc
jbe
mov
ja
fxch
dec
cmp
in
or
repz
enter
jbe
xor
cmp
out
mov
mov
rclb
scas
rcrb
sub
lahf
sti
icebp
and
mov
fimuls
stos
aas
or
or
idivl
sbb
nop
icebp
out
imul
scas
mov
xchg
lea
iret
adc
loopne
push
ss
push
movsl
fidivl
push
movsb
jno
adc
cld
inc
sbb
push
sti
pop
int
cltd
out
mov
stc
sub
hlt
ja
or
fsts
mov
pop
es
call
sub
popa
pop
int3
mov
or
lea
ss
stos
xor
shl
fcomps
outsb
xchg
dec
rcll
lcall
into
lds
add
push
insb
mov
push
in
inc
ja
push
fs
lock
jbe
lcall
mov
js
sub
cmp
fwait
dec
js
xchg
clc
mov
mov
shrb
mov
adc
or
cmp
cmpsl
and
jmp
lret
ret
out
add
xlat
int
adc
outsl
xrelease
inc
ret
or
in
clc
or
push
outsb
out
rcrl
or
mov
lcall
mov
mov
push
outsl
or
imul
pop
pop
adcb
test
push
adc
dec
mov
rorl
jmp
xor
push
sub
notl
out
push
jle
sbb
dec
dec
mov
dec
fsubrs
adc
stos
adc
push
pop
bound
test
orl
mov
sub
stos
xchg
movsb
stc
scas
jecxz
adc
imulb
icebp
testl
ljmp
icebp
js
subl
and
ljmp
ljmp
push
lds
pop
mov
imul
sbbl
cmp
test
fisubrl
mov
cmp
pushf
imul
vpaddusb
mov
fstpt
stos
loop
cltd
cmpsl
push
push
andb
pop
lahf
insl
jecxz
aad
push
inc
and
mov
js
psadbw
or
or
shl
fwait
jb
fs
mov
fimuls
in
mull
xchg
adc
cs
xchg
jg
mov
rorl
inc
and
inc
test
cmp
mov
rcll
or
push
jl
mov
rorl
pop
xor
lds
sbbb
out
sarb
repnz
mov
jnp
jg
mov
push
cmp
dec
or
ja
pop
stos
mov
pop
xchg
inc
and
out
xor
loope
popf
jl
mov
sahf
jae
or
loop
pop
pusha
sub
mov
mov
fisttpl
bound
and
cmpsb
ja
and
movb
mov
insb
pop
loope
push
fidivrs
pop
loope
or
adc
test
out
imul
and
test
es
add
popf
gs
int
inc
dec
xor
nop
lock
jp
mov
es
lea
or
mov
call
mov
push
cwtl
inc
loope
out
stos
sub
xchg
sbbb
daa
mov
popl
sti
std
stc
aam
inc
or
push
lret
mov
adc
and
lret
outsb
push
cmp
lods
sti
aam
pusha
xorps
mov
push
inc
cmp
mov
shrl
push
or
xor
pop
xlat
fstpt
add
cmp
out
mov
flds
pop
adc
add
sub
pop
adc
xchg
xlat
lods
adc
push
mov
ret
fisubrs
push
lods
xlat
lea
mov
pop
jae
loope
mov
dec
stc
data16
jmp
and
imul
inc
and
push
push
dec
imul
mov
xor
int
in
fs
dec
mov
scas
xchg
xor
mov
cmp
push
adc
cmpsl
in
mov
add
jmp
jb
xchg
xor
xchg
add
insb
mov
jno
push
xchg
andps
clc
lret
inc
sarb
aaa
sbb
mov
pop
pushf
scas
inc
shll
in
lret
push
scas
repnz
sub
mulb
dec
insb
mov
cmpsl
dec
pusha
fiaddl
enter
aaa
js
add
jg
mov
lret
lds
repz
mov
shll
call
and
dec
test
repnz
outsl
mov
pop
aad
mov
jns
stc
imul
mov
inc
in
ljmp
or
inc
dec
shll
clc
gs
sub
mov
xchg
fninit
mov
leave
sbb
stos
int
dec
inc
pusha
mov
stos
pop
aas
dec
test
mov
xchg
pusha
pop
rcr
sbb
dec
push
pop
sbb
add
push
sbb
push
cmp
or
pop
sub
mov
in
jbe
xchg
xorl
ret
cmp
adcb
sbb
loope
loop
mov
mov
test
sub
jo
lahf
cmp
pop
inc
adc
dec
dec
outsl
push
decb
test
jle
xor
sub
push
lock
lock
shl
jl
ret
sub
or
mov
mov
cmp
aad
mov
fisttpll
cwtl
cmpsl
rcl
incb
test
cmp
cltd
add
loope
jmp
cmp
pop
cmp
xchg
xor
fxch
sbb
subb
les
aas
push
idivl
xlat
mov
lcall
or
mov
fidivrs
push
rcll
addl
outsl
push
pop
inc
ss
mov
xchg
rorb
sub
out
in
cld
jp
and
fbstp
cwtl
mov
mov
push
dec
pop
pop
cmpsb
bound
jne
xor
and
clc
add
pop
leave
sbbb
test
jb
mov
sarl
out
fcmovnbe
decl
push
outsl
daa
lea
pop
mov
pushf
enter
xchg
test
popf
xor
enter
ljmp
and
popf
inc
data16
adc
mov
adc
push
fsubl
mov
jnp
stos
fsubrs
daa
ljmp
or
out
aas
and
or
arpl
sti
or
xchg
mov
xor
repz
fimuls
mov
div
test
loop
nop
mov
jo
or
sbb
xor
push
inc
adc
mov
or
ret
mov
xchg
cmpsl
inc
sti
jns
sbb
xor
shrl
ret
aam
mov
incb
pop
inc
cmpsl
cmc
je
ret
call
fsubs
and
jmp
sti
push
mov
sbb
add
pop
sbb
sub
jae
xchg
mov
inc
std
mov
jne
ficompl
inc
cmp
lret
pop
sbb
fs
and
push
out
or
shll
sbb
add
mov
pop
rorb
mov
sbb
cld
scas
cmpsb
nopl
mov
jne
stc
outsb
nop
test
xchg
push
pusha
adc
ja
insb
mov
jp
aam
inc
jle
mov
cmp
and
mov
xor
and
jb
ds
or
insb
or
lods
xchg
loopne
cmp
cmc
mov
sub
daa
repnz
pop
notl
fisubrl
out
push
cmpsl
and
adc
xchg
cmp
popa
mov
or
push
cmpl
xorb
sbb
push
fcmovnbe
adc
cld
mov
movsl
mov
pushf
stc
test
pop
inc
lods
popf
fldenv
cmp
adc
repnz
mov
inc
sbb
sahf
mov
icebp
lret
shrl
push
xor
pop
xchg
shrb
mov
nop
dec
sahf
fstp
lods
ljmp
cmp
or
lret
jbe
pusha
adc
mov
cmpsl
loopne
mov
adc
cmp
rcrb
xlat
adc
aad
push
jecxz
hlt
xor
cwtl
mov
xchg
shrb
imul
es
or
fidivl
out
xchg
mov
arpl
int
push
fdivrl
push
and
or
jp
xchg
int3
lcall
xchg
and
out
jns
push
jmp
push
aad
and
nop
clc
pop
mov
es
pop
pop
in
mov
lea
ljmp
jnp
add
mov
icebp
loop
ljmp
out
aam
hlt
lock
sub
inc
push
mov
outsl
jbe
push
loop
dec
pushf
in
jge
mov
sbb
gs
movsl
test
leavew
imul
add
push
dec
in
jg
mov
add
add
in
ss
xchg
ss
daa
clc
push
loopne
scas
sbbl
or
push
bound
xchg
cmp
neg
sbb
loopne
repz
sub
fwait
ret
int3
inc
pushl
xchg
test
mov
cmp
mov
xchg
cmp
ret
movsb
aad
sbb
xchg
or
xchg
adc
out
push
stos
xor
fmul
test
ja
pop
std
mov
dec
xor
sbb
pop
icebp
test
sbb
sub
hlt
or
pop
in
xchg
mov
movswl
cltd
addr16
sub
shll
sbb
test
pop
jge
mov
loopne
je
add
mov
push
add
push
sti
and
pop
mov
push
shr
mov
or
mov
daa
jecxz
es
aas
mov
aaa
fidivs
insb
hlt
test
or
cs
test
adc
int
cmp
int
jge
fstpt
mov
dec
mov
lcall
xor
mov
mov
jb
mov
test
pop
sbb
xchg
loop
rcll
imul
shlb
in
mov
adc
sbb
dec
int
mov
popf
xchg
push
jne
lret
sbb
rclb
inc
sub
xchg
fstpl
loope
fs
push
xchg
dec
jb
xor
loopne
pop
fldl
inc
and
ja
out
lret
jae
cmpsb
in
mov
scas
jbe
dec
push
inc
imul
mov
insb
xchg
lock
push
rcrb
adc
cs
and
aas
shll
mov
jl
sbb
scas
cs
test
je
mov
inc
dec
fistpll
jno
fisttps
fwait
pop
xlat
xchg
lahf
mov
clc
mov
and
push
push
jb
adc
pop
faddl
jo
loopne
ja
daa
or
mov
stos
adc
push
push
mov
ret
jle
je
loopne
jecxz
mov
lea
mov
sahf
iret
sbb
out
push
xchg
push
imul
data16
and
or
inc
xchg
and
push
imul
inc
mov
mov
adc
jg
xor
xchg
aaa
cmc
addr16
or
add
cmp
ja
or
push
cmpsb
int3
dec
push
imul
outsb
cwtl
hlt
mov
add
pop
into
or
in
mov
push
leave
and
pusha
shrb
ljmp
addr16
mov
xchg
mov
jno
jne
xchg
test
stos
movsb
ss
or
out
rcl
inc
test
or
xchg
xchg
dec
or
repnz
mov
mov
mov
lahf
rorl
outsb
mov
mov
cld
inc
ud2
push
imul
inc
or
sti
fildll
mov
sahf
ret
js
jle
dec
mov
leave
mov
or
fnstcw
cmp
bound
jmp
clc
mov
mov
pop
sub
ds
jo
outsb
cmp
or
xchg
in
cld
add
divl
mov
lods
xchg
cltd
pop
inc
mov
out
or
test
nop
and
lods
repnz
cltd
cmp
jo
inc
dec
mov
cmp
push
fldl2t
add
or
mov
mov
fisubs
or
imul
or
fwait
sbb
test
pop
cli
imul
out
mov
aas
push
jno
adc
outsl
outsl
pop
cwtl
or
xchg
sbb
inc
mov
popf
insb
es
cmp
ffree
iret
xor
mov
ja
sub
cli
and
sub
lods
insb
push
cmp
lcall
lds
das
add
imul
fists
inc
mov
mov
xor
xor
cmp
cmp
out
push
lock
out
lret
mov
xchg
fstps
loope
adc
jne
movl
cmpsl
test
clc
mov
incl
arpl
stos
out
and
je
insb
stos
add
loopne
fwait
xchg
or
push
dec
cmpsb
xor
out
xchg
imul
sbb
outsl
push
jmp
arpl
add
ljmp
pop
push
pop
mov
mov
lret
xchg
jo
das
or
mov
jno
adc
and
cmc
bound
lods
sub
in
iret
jbe
and
and
popa
xor
inc
dec
leave
mov
adc
idivl
xorb
mov
outsb
imul
push
es
std
aas
mov
dec
pop
jno
mov
loop
bound
stos
fdivrl
sbb
and
push
dec
inc
out
dec
cli
mov
xor
push
fwait
or
jmp
js
push
sub
stos
mov
xchg
rclb
pop
mov
mov
and
mov
lds
or
lock
mov
fdivr
shlb
testb
in
adc
xchg
nop
push
js
xor
mov
add
fbstp
repz
xchg
push
shl
ds
pop
xor
in
ja
adc
or
push
cld
adc
push
mov
int
fadds
insb
pop
ficoml
dec
jg
mov
cmc
dec
daa
in
fwait
xor
inc
jg
and
mov
int3
xchg
iret
xor
push
mov
add
adc
sub
pop
int
je
sub
mov
shl
mov
fimull
push
jmp
lahf
jbe
pop
push
daa
inc
inc
and
mov
mov
cmpsl
jge
mov
jle
pop
jmp
or
std
sub
push
daa
jb
mov
sbb
pop
lcall
andb
push
or
bnd
test
push
dec
loope
add
andl
mov
mov
mov
outsl
loopne
mov
jbe
xchg
in
sti
sbb
shll
cmp
xchg
aaa
insb
in
xor
cmp
lods
or
fsubrp
scas
push
out
pop
and
sub
cld
stos
rorb
daa
sti
mov
xchg
xchg
sub
inc
push
pop
fadd
lods
xor
ljmp
lcall
sub
ret
lds
mov
fstl
and
mov
inc
xchg
stc
call
xor
das
sbb
add
andl
pop
in
xchg
in
es
aas
push
pop
subl
arpl
popa
dec
shr
sbb
xchg
and
enter
push
int3
aam
mov
jb
popl
aaa
push
scas
mov
testb
insb
ret
cmp
mov
and
cmpsl
mov
pop
add
pop
pop
mov
out
cmpsb
in
aad
lret
push
in
jnp
jp
xchg
es
mov
pop
in
lea
outsl
adc
lock
aas
out
jnp
sbb
sbb
jo
push
popf
jmp
mov
dec
in
mov
push
nop
lods
mov
pushf
dec
testl
sbbl
popf
imul
loop
icebp
inc
scas
shr
cld
stos
aas
push
fidivrs
je
loop
sub
mov
jns
cwtl
lret
jb
hlt
dec
sbb
in
mov
and
out
test
dec
dec
aaa
popa
cmpsl
mov
pop
or
inc
mov
insb
adc
loopne
mov
icebp
pop
fstps
jmp
mov
in
movsl
rcrl
xchg
xor
imul
rcrl
jle
sub
mov
add
mov
adc
jp
pop
out
push
xchg
adc
inc
hlt
xor
inc
roll
fisttpl
add
mov
adc
adc
jg
push
jno
push
or
jo
sbbl
insb
push
xor
push
and
lods
js
je
gs
mov
mov
sub
lock
pop
add
popf
and
mov
cmpsb
pop
mov
outsb
cmp
pop
mov
inc
mov
add
popa
jb
cli
call
and
ret
jmp
jecxz
mov
cmpb
fldcw
add
cltd
xor
push
jle
push
fidivs
pop
push
sarl
enter
iret
adc
xorl
pop
cmp
loopne
xor
sbbb
test
add
mov
xor
mov
stos
mov
in
inc
mov
mull
mov
bound
fidivs
test
lahf
incb
inc
cld
mov
gs
es
test
lea
int3
inc
or
ret
sub
bound
mov
dec
lret
and
notb
addr16
aam
test
and
sarl
pushf
jno
or
aam
dec
pop
xor
popf
push
pusha
das
lods
sub
jns
add
enter
imul
je
cmp
das
test
adc
and
cwtl
inc
mov
std
mov
lock
ficomps
lods
bound
push
xor
mov
or
hlt
sbb
adc
jae
jno
dec
out
lock
push
dec
pop
pextrw
sub
mov
loope
dec
cmp
cmp
ss
pop
movsb
cmp
adc
cwtl
or
inc
mov
cmp
adc
aad
daa
lods
pop
jmp
xchg
fisttpll
lea
pop
jae
xchg
fcmovne
in
pop
mov
rcrl
in
dec
or
mov
dec
dec
and
pop
idivl
popa
mov
test
sbb
jle
add
clc
out
or
xlat
bound
and
and
mov
pusha
icebp
and
cmp
pop
into
push
lods
xor
sahf
inc
push
cmc
pop
mov
inc
jge
lret
ret
nop
in
pop
sarl
xchg
xor
inc
imul
call
pop
pop
cmc
inc
scas
pop
xor
fistpl
push
imul
push
out
jecxz
push
jbe
scas
xor
scas
ljmp
xlat
mov
inc
sub
outsb
ss
andl
sub
inc
fdivrl
cmpsb
mov
push
loopne
ljmp
cmpsb
mov
test
mov
into
mov
xchg
pop
and
add
inc
push
jp
dec
data16
cli
mov
mov
lret
pushf
xchg
mov
inc
lock
pop
rolb
mov
mov
mov
cli
out
dec
xchg
xchg
fbstp
mov
inc
add
ss
lock
sbb
repnz
call
jae
pop
xchg
repnz
dec
in
sbb
pop
stos
cmpb
dec
dec
popf
adc
sbb
bound
sub
daa
mov
sub
scas
xchg
or
cmc
mov
cmp
inc
or
ror
add
loopne
inc
push
mov
sbb
mov
pop
aad
cmp
decb
inc
fs
cld
jb
mov
push
sub
sub
mov
push
andb
push
and
push
pop
lock
mov
shrl
adc
push
mov
cmp
lds
xor
xchg
xchg
xchg
add
outsb
sbb
mov
and
fcoml
sbb
lods
je
sub
inc
pop
pop
sahf
leave
outsb
jno
or
cmp
sbb
call
lcall
imul
inc
sbb
fwait
popf
cmp
test
sub
repz
outsb
in
dec
scas
in
push
cmp
pop
adc
inc
xor
jmp
nop
mov
or
cs
scas
push
int
xor
fsts
sub
test
cmp
xor
aam
adc
sbb
mov
jp
stos
adc
mov
lea
insb
push
stc
mov
jle
pop
das
sar
or
push
mov
aaa
shrb
int3
adcl
cmp
push
pushf
enter
out
nop
cmpl
jp
jecxz
and
pop
push
xchg
fmull
sub
cs
lcall
adc
jnp
imul
popa
mov
stc
call
bound
and
aad
repz
inc
cmp
lods
das
mov
sub
mov
imul
in
jbe
pushf
imul
xor
into
out
xchg
mov
or
lcall
mov
push
and
dec
push
in
sbb
push
push
push
mov
and
inc
fdivl
fistl
andl
and
pop
call
xor
dec
or
sti
sbb
movsb
lods
mov
mov
dec
add
mov
mov
xlat
jns
mov
leave
arpl
cmp
std
jecxz
jg
pop
adc
xchg
in
xchg
inc
imul
fwait
scas
int3
mov
ds
fmuls
enter
popa
lock
enter
push
xor
repz
add
js
dec
cmp
or
adc
jb,pn
cwtl
addb
nop
fs
popa
mov
jmp
inc
test
fildll
lock
mov
inc
outsb
aaa
pop
cltd
mov
mov
jo
fs
popf
push
mov
aam
cltd
xchg
push
mov
dec
not
xor
mov
and
sbb
cmp
add
test
push
jbe
into
and
dec
gs
loopne
add
test
out
das
mov
pop
inc
divl
lcall
pop
sti
loop
pusha
pop
and
jecxz
jmp
pop
addr16
div
mov
imul
imul
jmp
lcall
sbb
cmpl
cmp
push
arpl
push
popf
xchg
les
aam
pusha
jp
add
outsb
sub
fsts
jl
out
mov
mov
clc
or
pop
dec
or
dec
xchg
xlat
xor
xchg
push
addl
add
pop
inc
je
or
push
cmpsl
jmp
xor
xchg
rcrl
mov
sbb
out
popf
sbb
aaa
push
insb
scas
rcll
btr
jecxz
jmp
mov
leave
inc
add
xchg
call
mov
pop
and
pop
ljmp
jbe
add
into
imul
sahf
pushf
push
mov
xchg
mov
inc
clc
dec
jns
cmp
mov
push
push
jmp
fdivrs
xlat
sub
in
adc
loopne
add
bound
cmpsb
mov
and
cmpsb
mov
arpl
and
ror
mov
sub
pop
mov
add
sbb
mov
push
and
aas
repnz
shr
add
inc
ljmp
sti
nop
ja
push
push
push
aam
pop
dec
mov
imul
mov
jmp
push
sub
jge
nop
mov
jmp
xchg
enter
test
pop
add
adc
pop
cmp
jmp
dec
mov
addl
jbe
cmpb
daa
jmp
je
adcb
dec
aaa
jne
loop,pt
mov
mov
out
xchg
das
and
inc
cmp
inc
jo
push
pop
and
inc
mov
sub
adc
fistps
pushl
sub
jne
sbb
mov
cmpsl
out
stos
nop
sub
pop
sbb
cmp
outsl
loopne
shlb
push
popa
scas
fisttpl
setg
out
mov
or
jp
jge
ja
inc
rorl
mov
popa
fs
lods
cli
in
xchg
or
sub
sbb
insl
jae
pop
sub
stos
frstor
pop
jge
sub
aad
jmpw
test
or
test
sub
mov
mov
nop
dec
mov
pop
mov
sub
or
lcall
xor
popa
jecxz
testb
outsl
out
push
mov
imul
sub
test
fwait
or
adc
fbstp
add
xchg
outsl
mov
mov
jns
add
psllq
out
xchg
sub
jo
lods
sbb
pusha
out
shll
repnz
notl
fdivrs
lods
inc
pop
lods
in
jg
cmp
adc
dec
mov
outsb
xchg
ret
std
pop
pop
imul
inc
cmp
sub
adc
jbe
and
test
popa
es
ds
sub
pop
xchg
int3
pop
dec
clc
nop
loop
sbb
cmp
sub
xchg
data16
dec
and
fldenv
sub
stc
mov
fstl
aas
sub
add
and
dec
jo
mov
cmp
mov
stos
add
movsl
jecxz
outsb
and
cli
pop
dec
xchg
out
into
insb
outsb
icebp
cmp
ljmp
xchg
outsb
push
adc
push
or
movsb
push
cmp
jo
jno
xchg
or
and
add
leave
push
lret
movsl
in
inc
out
add
adc
pop
xchg
mov
add
dec
inc
call
into
mov
shl
cmpsl
dec
arpl
mov
fcompl
fldl
ljmp
dec
orb
out
inc
sbb
sbb
xor
rorb
aam
fdivrs
cmp
and
jle
inc
inc
xchg
and
pop
aad
mov
lds
addr16
push
dec
lods
mov
cmp
mov
xor
sar
int
pusha
inc
in
sub
and
loop
lods
inc
loop
jne
mov
inc
pop
xchg
cmp
mov
ret
outsl
in
mov
mov
and
loope
and
dec
adc
sub
or
leave
ret
adc
fidivrl
subl
stc
stos
daa
xchg
in
mov
test
and
fs
subb
stos
in
rcrl
xchg
sbb
gs
lock
cmp
int
lahf
in
test
push
jecxz
mov
negb
ret
rclb
xchg
mov
or
sub
inc
mov
jae
xor
xchg
and
out
xchg
sahf
xor
lea
mov
int3
jns
push
add
dec
std
clc
and
sbb
gs
fcmove
popf
stc
fcoms
adc
daa
and
nop
out
decl
aas
sti
adc
lret
cmp
and
pop
xorl
les
rcrb
jno
inc
dec
xor
xchg
xchg
push
xlat
sub
sbb
sub
inc
dec
add
xchg
adc
cmc
roll
addr16
int
rclb
adc
repnz
vcvtdq2ps
and
bound
xlat
repz
sarb
rclb
fwait
std
adc
xchg
push
lahf
dec
cmp
aas
aaa
out
add
subl
push
adc
cmp
mov
std
inc
dec
dec
popl
inc
xlat
mov
es
aaa
add
jo
jl
inc
std
add
add
imul
scas
cmpsb
xlat
cltd
gs
adc
and
and
aad
cmpsb
cli
repnz
rclb
lock
mov
push
mov
gs
push
pop
xchg
dec
lahf
sbb
pushf
cmp
jo
pop
xor
push
sbb
or
hlt
jo
inc
addr16
movsb
pop
jb
and
jbe
cmp
movsb
sbb
jb
mov
scas
mov
ds
jge
jne
call
call
shlb
ds
pop
mov
add
dec
jl
ljmp
js
aam
xchg
outsl
push
cld
push
pop
add
loop
lret
lret
mull
jle
ret
jecxz
cmpsb
cmp
mov
popf
jg
push
loopne
hlt
cmc
sar
in
fldt
xorb
rorb
clc
push
mov
xchg
adc
sub
ret
outsb
inc
in
cld
dec
ds
lahf
andl
pop
cmpsl
jnp
push
daa
dec
imul
dec
movsl
cwtl
mov
mull
mov
je
int
cmp
ret
clc
sbb
movsl
inc
push
mov
push
jl
mov
sbb
mov
push
shll
cmp
jmp
inc
adc
sbb
pop
hlt
jp
loopne
add
inc
mov
sbb
sbb
cmp
aad
fbld
pop
test
fisubl
cmp
add
dec
out
cmp
std
cmp
pushf
imul
jmp
inc
mov
stos
sub
int
jle
jecxz
imul
pushf
xor
fcoms
push
lea
push
cmp
lret
int
or
out
push
jb
mov
test
imul
xor
jge
and
add
or
das
enter
xor
bound
cwtl
bound
jnp
or
pop
rol
sub
movsl
or
mov
sbb
mov
sub
adc
cmp
pop
add
pop
push
mov
sahf
pop
jmp
dec
push
push
pushf
ss
xchg
scas
push
fnstcw
push
push
xlat
outsb
fcoml
mov
adc
lret
jg
nop
sub
add
or
cmpsl
mov
sbb
jne
popa
push
xor
mov
mov
push
adc
stos
movsl
orb
pop
sub
out
sub
lret
mov
call
out
filds
xorb
dec
hlt
push
in
ret
fsubrl
xchg
jbe
pushf
loop
push
fidivrs
xchg
in
and
push
out
lret
mov
shl
or
pop
dec
mov
aas
call
clc
mov
lds
or
mov
addb
bound
out
or
in
les
subb
push
fnsave
or
out
jae
push
loop
pop
add
ror
shrl
lret
cwtl
mov
add
fdivrs
dec
cmp
dec
insb
lods
loope
pop
in
xchg
subb
add
int3
loop
das
adc
bound
int
mov
pusha
xchg
shll
sahf
dec
lock
adc
mov
and
mov
fwait
imul
and
sub
inc
pop
aad
sbb
mov
ds
sbb
adc
cmc
pop
pop
lret
mov
push
in
or
imul
arpl
xchg
jbe
add
arpl
pop
pop
shrl
sub
pop
sarb
jbe
ss
dec
mov
and
ds
pop
stos
adc
sbb
cmp
ss
aad
push
mov
pop
and
jp
dec
sti
or
mov
and
addr16
adc
std
and
out
push
push
xchg
ljmp
pop
iret
out
mov
movsl
in
or
loope
imul
xor
jle
fwait
lock
push
mov
mov
loop
sbb
sahf
mov
cmp
fwait
lret
movsl
mov
data16
xlat
outsl
cmpb
cmp
or
xchg
inc
in
ss
je
hlt
or
stos
mov
sbb
ja
std
mov
rclb
fsts
pop
mulb
dec
clc
pop
repz
push
and
data16
xchg
arpl
push
push
mov
cld
pushf
je
cmpsl
jnp
sub
push
adc
ja
cmp
or
je
in
cmp
mov
pop
cmc
sbb
pop
cmp
mov
mov
imul
xor
scas
add
cmpsl
insb
mov
cli
sub
iret
aas
dec
lock
icebp
hlt
and
push
adc
test
mov
cmpsb
decl
add
jle
and
out
shr
adc
xor
xchg
nop
mov
pop
dec
dec
hlt
pop
into
mov
les
add
mov
sub
lods
push
int
or
and
ds
je
stc
adc
mov
sbb
icebp
mov
cmp
xchg
lock
cmc
sub
xchg
cwtl
mov
cmc
mov
jns
test
test
add
sti
mov
loop
rol
call
mov
mov
fildll
lea
dec
add
jle
sub
arpl
stos
add
and
lcall
cmp
adc
push
push
sbbb
aas
or
adc
mov
cmp
in
andl
jbe
inc
pop
stos
push
mov
test
mov
stc
test
stos
xchg
movb
push
and
xorb
lcall
ret
push
jnp
lret
scas
and
cmc
je
lods
jmp
inc
add
les
or
xlat
cmpsb
inc
fistpll
push
lahf
jecxz
or
cmpsl
adc
sti
js
aas
ret
mov
loop
lahf
pusha
xchg
cmp
adc
jg
pop
mull
push
sbb
sbb
mov
add
stos
arpl
repz
sbb
iret
xor
dec
cs
mov
jo
popa
push
test
cmp
cli
and
je
jae
pop
imul
inc
cld
push
push
push
ljmp
enter
js
outsb
out
xor
mov
add
fidivrs
add
data16
insl
and
cld
movsb
js
xorb
in
jne
call
xchg
loop
std
pop
mov
mov
addr16
adc
fistps
jecxz
mov
ret
sub
mov
adc
cmc
loope
mov
jns
int
gs
push
add
fdivs
mov
xchg
pop
testb
jns
mov
or
imul
pop
mov
insb
int
outsb
inc
xchg
movsb
mov
pop
sub
sub
ret
ljmp
jg
adc
adc
inc
addr16
fisttpl
outsb
ret
out
inc
pop
inc
mov
adc
negb
push
popa
mov
cld
loop
xchg
or
pop
push
cmp
mov
pusha
mov
rclb
or
out
xchg
dec
clc
outsb
out
filds
xchg
jg
cmc
mov
addr16
addr16
adc
testb
pop
clc
popf
cmp
mov
xchg
mov
fisubrs
loope
adc
jne
xchg
sub
dec
mov
mov
mov
or
mov
pop
cld
mov
xor
cmpsl
mov
xor
cmpl
in
outsl
sbb
mov
les
rorb
xchg
add
popa
jb
push
sub
cmp
push
xorl
or
std
push
mov
and
adc
rcl
add
pop
dec
das
data16
rolb
inc
faddl
cmc
and
scas
test
xchg
pop
mov
sarl
lret
sub
push
push
fdivl
and
add
dec
aad
xor
lock
sub
cmpsl
pop
sti
cmp
cltd
ret
add
sbb
xorl
sbb
lcall
or
push
fnstsw
push
into
pop
sub
pusha
loop
insb
or
push
iret
mov
loop
out
test
rcll
pop
xor
jo
sbb
or
jbe
xor
cmp
lods
mov
lahf
shlb
loope
out
inc
aam
xchg
sbb
insl
jae
loope
or
scas
mov
loope
fsub
ret
stos
ljmp
mov
and
orl
lcall
rolb
out
xor
push
out
bound
sub
aad
fadd
add
xchg
xor
loop
xchg
sbb
push
fidivl
and
lcall
mov
jno
push
sub
push
repnz
stos
jmp
movsl
or
cmp
sbb
inc
cmc
test
imul
popf
out
imul
xor
xor
inc
jp
mov
and
cmp
xchg
lods
cmp
cmp
jl
fadd
in
js
mov
sub
fsubs
add
insb
movsb
fidivl
push
sub
sti
ljmp
mov
jmp
imul
mov
xlat
and
js
pop
add
pop
jle
pop
mov
stc
repz
add
xchg
fadd
pop
pop
lcall
inc
fnsave
adc
into
sti
imul
sbb
mov
mov
add
lcall
in
ret
sbb
push
dec
ss
cld
loopne
and
mul
imul
jne
fistpll
jbe
or
xchg
lahf
lock
adc
push
jmp
arpl
xchg
xchg
pop
ss
pushf
push
iret
test
inc
xor
add
imul
cmp
inc
test
shr
and
xor
or
scas
add
push
xor
lea
or
das
cmpsb
sti
nop
fs
data16
test
push
outsb
daa
jg
push
push
adc
jge
sbb
fistpl
les
cwtl
addr16
dec
shll
pop
adc
clc
dec
xchg
pop
xchg
add
cmp
adc
jecxz
jge
aas
insl
hlt
cmp
and
sar
xchg
lods
std
loope
out
or
rclb
aad
adc
xchg
inc
popa
fldl
mov
nop
stos
cmpl
testb
or
cmp
ljmp
enter
cli
xor
mov
jmp
jae
sbb
adc
into
jg
push
pushf
imul
or
imul
testb
in
imul
cmp
rcr
insl
mov
mov
mov
lods
outsb
ror
add
add
and
jne
sbb
outsb
sarl
mov
test
xorl
push
push
fistpll
lods
mov
rclb
cmp
dec
movsb
sub
jnp
add
mov
xor
xor
sub
roll
pop
adc
pusha
popf
xchg
dec
push
testl
inc
fiaddl
xchg
test
sub
stos
push
sub
in
jno
out
das
sbb
xor
and
sub
cwtl
aad
sti
popl
dec
bnd
lahf
inc
popl
mov
jno
repnz
mov
pushf
icebp
mov
cmp
sbb
sbb
or
imul
movl
sbb
jmp
pop
sbb
pop
xor
xor
or
add
cs
push
repz
and
sti
jno
push
dec
xor
add
dec
cli
shl
pop
jp
cmpsb
mov
hlt
xchg
mov
int
adc
aad
int3
enter
mov
cmpsb
cs
ljmp
inc
jne
hlt
adc
cmp
sub
dec
mov
loope
stos
cmc
mov
adc
mov
mov
adc
or
adc
ss
imul
push
adc
mov
and
xchg
mov
jmp
cli
pop
adc
int3
fs
sub
xchg
push
enter
aad
jnp
dec
mov
and
mov
xor
roll
out
cmpsl
arpl
xchg
push
ret
sbb
andb
ret
push
sahf
mov
mov
sahf
pushf
repnz
out
testl
arpl
repnz
int
sbb
test
cld
in
outsb
dec
cmp
mov
pop
cmp
mov
xchg
out
stc
les
std
sbb
fisubl
xchg
push
add
adc
dec
sub
lret
sub
xchg
mov
sub
and
subb
in
imul
pushf
jno
nop
jmp
daa
mov
or
mov
push
dec
fnstcw
cmp
jmp
xor
test
aam
int3
adc
add
ja
ret
push
xchg
adc
clc
pop
mov
js
mov
mov
fstpl
push
sbb
lcall
mov
das
jl
loopne
cs
lcall
push
clc
stc
sti
mov
out
inc
cli
ljmp
dec
or
sub
push
sahf
or
les
mov
adc
push
aaa
pop
push
fistpll
ficoms
adc
cmpl
xchg
std
je
cld
cmp
adc
bnd
or
xor
inc
arpl
xchg
mov
add
repnz
aas
and
xchg
loop
cltd
clc
push
arpl
filds
sarl
sub
mul
enter
out
push
imul
fmuls
dec
xchg
rclb
xchg
inc
or
cmp
mov
data16
push
xorl
jmp
nop
sarb
insl
sub
ljmp
cmp
dec
adc
dec
xor
hlt
dec
or
fdivr
inc
pusha
std
inc
cmp
and
and
inc
dec
mov
shll
dec
sbbl
out
fstp
je
into
dec
lret
dec
clc
pop
jo
in
mov
les
cld
ljmp
in
mov
adc
imul
inc
ds
fcmovu
dec
xchg
in
fsubl
xchg
shll
cmp
repz
inc
inc
jg
int3
in
pop
mov
movsb
adc
sub
mov
popf
and
imul
sub
pusha
ficompl
imul
push
aaa
stc
jmp
sub
insb
or
loop
pushf
mov
mov
push
lahf
push
and
fsts
imul
adc
lahf
jnp
pop
jbe
lret
add
xchg
and
cmc
scas
xchg
fcoms
mov
lods
fucompp
pop
fcomi
jne
xor
pop
aas
push
mov
jbe
push
or
adc
and
xchg
add
pusha
movsb
out
xor
sub
jb
pop
cli
jae
sub
cmpsb
or
ficomps
insl
pop
mov
add
inc
xchg
dec
pop
test
mov
pop
sub
fsts
add
push
mov
pop
mov
mov
xlat
shr
test
lea
lcall
rdpmc
mov
arpl
xchg
xor
fldcw
ss
mov
imul
cmc
cmpsl
ret
imul
jmpw
jmp
cmp
mov
jge
lock
arpl
cltd
pop
mov
push
test
inc
xchg
insl
addr16
jae
lfs
imul
jle
cmc
xchg
stc
sbb
xor
out
leave
add
loopne
xor
imul
adc
roll
in
push
lds
in
out
insb
xor
mov
std
in
mov
cli
inc
sbb
jae
mov
and
sub
cmp
imul
jne
xchg
push
inc
dec
jg
repz
mov
adc
je
decl
mov
dec
or
scas
mov
sbb
lcall
shl
fidivs
lea
test
add
js
push
enter
push
call
cmp
and
or
sub
outsb
ret
cmp
dec
or
pop
pop
sbbl
stos
jae
mov
mov
xor
fldenv
shl
cltd
fisubs
or
loop
inc
mov
mov
dec
sbb
pop
sbbl
aad
dec
mov
cmp
inc
mov
mov
into
pop
into
xor
in
mov
fs
pop
imul
push
jmp
jae
mov
mov
sub
push
scas
out
rorl
rclb
mov
aad
mov
daa
sbb
push
pop
das
push
sbb
push
mov
cmpsl
dec
shll
adc
mov
je
xchg
mov
pop
dec
sahf
mov
inc
cmp
push
jle
insb
aam
in
movsb
inc
stc
jns
push
jae
addb
rorl
and
sub
loop
and
adc
out
fcomp
push
fsubl
xchg
es
inc
push
shrl
lods
adc
xlat
gs
icebp
imul
leave
addl
cltd
xor
jae
push
test
stc
push
mov
push
push
push
push
into
mov
fwait
jo
add
push
pop
frstor
loopne
pop
dec
dec
xchg
out
inc
dec
or
sbb
and
fiadds
jmp
xor
xor
std
insb
pushf
addr16
les
jmp
pop
aaa
sbb
out
mov
push
iret
repnz
testl
pop
js
xchg
xchg
pop
pop
inc
out
adc
mov
clc
add
adc
and
adc
xchg
insb
ficomps
jle
pop
jne
fcoml
das
sub
inc
outsl
jmp
idivb
mov
pop
andb
daa
dec
js
sbb
cwtl
clc
mov
cmp
inc
dec
dec
les
imul
xchg
xchg
or
aaa
clc
pop
cmpsb
test
icebp
push
inc
mov
inc
mov
adc
dec
iret
pop
jo
lods
std
lret
mov
lcall
mov
push
mov
test
adc
faddl
pop
mov
out
outsl
das
rorl
mov
adc
mov
rorl
inc
dec
shll
add
add
jp
outsl
ja
push
add
test
sub
push
paddsw
push
cmp
inc
shr
or
mov
sbbl
idivb
xor
fwait
lds
call
pusha
pop
sub
outsl
rclb
pop
pop
xor
dec
or
fs
inc
loop
dec
cld
jnp
ds
sbb
inc
inc
sbb
xor
and
adc
mov
dec
aad
pop
adc
addr16
jge
jb
cwtl
mov
lret
xchg
repnz
outsb
mov
mov
pushf
popl
data16
or
jmp
bound
jg
push
arpl
sbb
inc
fisttps
fwait
pop
adc
outsb
mov
and
cmpsb
xor
push
push
mov
data16
adc
and
mov
xor
mov
adc
pop
hlt
jge
xchg
imul
mov
or
stc
jl
ret
push
psllq
mov
lret
call
inc
rclb
xchg
pop
fstps
das
adc
jo
scas
add
and
jbe
xor
cmp
and
lods
in
mov
sub
mov
xor
in
mov
rcl
insb
pop
sub
add
into
jg
sbb
sbb
rorl
inc
fwait
inc
arpl
lret
push
nop
mov
dec
lahf
push
sbb
inc
jo
pushf
mov
mov
sub
in
jle
add
xchg
das
push
inc
lock
push
pop
dec
fsubr
sbb
push
cmc
mov
mov
jmp
test
push
add
rcll
adc
push
sbb
mov
insb
sahf
mov
das
in
fmuls
sub
mov
aas
pushf
push
and
insl
cmpsl
mov
stos
or
xlat
gs
jl
cmp
popf
inc
mov
je
adc
stc
test
cmpsb
frstor
or
cmp
fcomp
cld
sbb
or
pop
sub
or
in
xor
cltd
pop
push
dec
mov
pushf
mov
cmp
hlt
add
repnz
js
jne
sbb
or
mov
pop
sub
add
adc
inc
sub
dec
lock
add
pop
aad
xchg
aaa
clc
and
sub
jp
fisttpl
in
leave
pop
and
pop
jge
repz
rcrl
fnstcw
out
imul
iret
jmp
xchg
jo
mov
jle
sub
dec
mov
cmp
dec
sahf
mov
or
cmpsl
mov
outsb
cmp
ret
cmp
jp
mov
ljmp
or
lret
push
add
loop
cmp
jno
cld
inc
lret
xchg
add
sub
xor
ret
addr16
push
pop
xchg
push
or
xchg
adc
insb
outsl
scas
int3
sbbl
fmuls
std
fisttpll
adc
enter
mov
adc
pop
jae
push
pop
add
jb
aad
sbb
and
pop
or
in
jno
lods
cmp
int3
mov
pop
pop
mov
sub
sub
jns
mov
and
ret
pop
mov
in
mov
mov
adc
sub
pushf
adc
xor
mov
in
subb
filds
insl
lds
inc
xchg
scas
ss
unpcklps
addr16
or
adc
ret
cmpsl
jb
mov
cwtl
sbb
inc
mov
cmpsb
mov
and
add
mov
insl
test
mov
mov
decl
cwtl
jle
mov
inc
insb
mov
push
xor
test
xor
adc
push
mov
loope
xchg
aas
sub
push
push
inc
inc
comiss
sbb
insl
cwtl
jnp
enter
cmp
jae
outsb
jg
hlt
cmpsb
sbb
in
push
or
inc
xchg
xchg
scas
imul
test
ja
repnz
ljmpw
sub
mov
or
sub
enter
xchg
add
pop
repz
and
dec
jno
xor
xchg
add
jecxz
in
mov
adc
into
pop
test
lret
in
cmp
movsl
dec
mov
imul
mov
sahf
es
js
f2xm1
mov
mov
pusha
and
adc
lcall
add
int
mov
rorl
xchg
sahf
add
or
lods
out
imul
cmp
push
push
lds
mov
aaa
or
movsb
lret
movsb
dec
in
xchg
shrl
sub
or
mov
add
push
push
sub
push
xchg
xchg
mov
ror
pop
jno
fcoms
or
xor
sub
adc
pop
push
add
out
sbb
into
add
scas
jp
stos
or
and
cmpsb
inc
sub
dec
test
sub
xchg
jge
mov
pusha
push
xchg
push
repz
scas
xchg
lcall
or
xor
movsb
inc
sub
xor
sbb
pop
icebp
loop
out
push
roll
cs
inc
ficoml
cmp
popf
rorl
mov
stc
jge
sbb
dec
mov
or
leave
das
inc
insl
push
push
aaa
dec
iret
aad
xchg
dec
lret
pop
lods
and
or
les
dec
js
jmp
mov
and
mov
pop
clc
adc
mov
rorl
sbbl
leave
dec
mull
je
sarl
xor
sub
inc
cld
jmp
lock
jmp
xor
aaa
pop
addr16
sub
daa
out
js
mov
repz
in
xchg
pop
add
lret
imul
push
mov
fldcw
movsl
ds
in
jbe
xchg
sbb
mov
mov
dec
lods
xor
mov
xchg
test
cmpl
data16
push
out
and
add
nop
xor
mov
and
imulb
test
mov
jl
sub
mov
xchg
mov
dec
and
cwtl
fidivl
add
fbld
cli
xchg
lea
and
inc
mov
mov
xchg
or
out
and
adc
sbb
lods
xchg
int3
cmp
daa
xchg
or
rol
pop
and
icebp
xorb
jo
cmpsb
mov
dec
jnp
xchg
adc
add
call
sbb
adc
into
jb
sbb
jecxz
mov
test
xlat
sbb
push
lea
int3
xor
insb
adc
fstl
mov
loope
sti
iret
mov
lret
and
aam
inc
and
test
imull
scas
mov
jg
enter
sahf
xchg
jae
loopne
adc
jbe
test
clc
sbb
dec
mov
push
aas
fistpll
neg
pop
inc
mov
lods
out
jmp
cmp
lret
adc
add
cmc
movsl
aam
xor
movsl
pop
mov
inc
pop
pop
gs
stc
call
fldenv
js
push
push
mov
pop
xchg
push
cmp
mov
jb
nop
add
add
es
or
loop
pop
outsl
dec
int
jne
out
xlat
jns
jno
sub
out
inc
outsb
shrb
adc
jp
cs
inc
ret
mov
xchg
mov
sub
mov
mov
and
pop
arpl
dec
movsb
sub
ret
sbb
inc
pop
push
xchg
pop
push
xor
xor
sub
and
movsb
jae
xor
nop
pusha
movsl
mov
ficoms
popf
adc
jle
xchg
cs
js
mov
adc
mov
out
icebp
inc
into
and
mov
add
das
sbb
push
mov
fs
call
xor
add
or
pushf
test
push
cmpsb
clc
outsb
dec
cmp
shlb
loopne
insb
outsl
es
in
and
mov
fbld
cmp
adc
rolb
data16
jb
mov
add
loopne
loopne
xchg
in
cs
mov
mov
push
jl
jecxz
fcomp
ja
mov
dec
movsb
jl
push
pop
sbb
hlt
leave
sub
xorl
cmpsl
mov
pop
dec
test
out
in
jg
add
jp
adc
icebp
lds
das
mov
cmc
stos
or
inc
xor
push
sarb
lds
push
jbe
push
adc
xchg
imul
mov
fadd
movsl
push
mov
std
jbe
mov
enter
add
inc
mov
xchg
xchg
mov
icebp
jne
mov
dec
mov
pop
ret
mov
pcmpgtd
sub
xlat
xor
inc
pop
iret
xchg
jb
sub
ret
and
cmp
lret
pop
les
lret
xchg
jbe
fs
cmp
js
sti
movsb
xchg
push
sub
fisttpl
and
mov
sub
sbb
xor
lods
test
out
xchg
mov
shl
jmp
roll
xchg
cmp
cmp
lcall
jle
pop
xor
mov
and
pop
in
xor
repnz
xor
lds
or
stos
dec
ds
mov
xchg
mov
testb
gs
push
adc
push
or
add
inc
xor
push
out
call
or
daa
mov
test
mov
loope
loopne
icebp
popf
push
ss
mov
ror
test
inc
pop
push
ror
xchg
shlb
rol
or
jge
mov
jge
lahf
mov
bound
pop
xchg
mov
fnstenv
stc
push
lahf
das
aad
sub
andb
bound
in
push
pop
dec
lcall
sbbb
dec
push
clc
mov
push
int
mov
mov
mov
push
cwtl
dec
into
loop
scas
mov
ss
xchg
mov
aaa
xor
mov
inc
mov
aad
jae
roll
gs
mov
pop
lret
mov
push
and
in
nop
out
add
shrb
into
ret
test
repz
mov
dec
or
adc
dec
push
cmpl
fisttpll
dec
or
push
xor
pop
or
and
les
xchg
jmp
shlb
insl
jmp
nop
stc
push
iret
inc
mov
es
cmpsb
sarl
in
mov
mov
xchg
cmp
scas
dec
arpl
inc
jns
insl
pop
xchg
sbb
test
cmp
shr
popa
lock
jmp
push
push
rclb
xchg
push
mov
loop
push
shrb
das
popa
mov
pusha
xchg
dec
push
xchg
mov
mov
aad
xchg
je
ljmp
or
inc
pop
sbb
lock
imul
xchg
aas
imul
cmp
mov
insb
shrb
add
inc
pop
scas
outsb
lret
out
int3
aam
sbb
adc
daa
or
sbb
mov
mov
jae
jl
fnstcw
imul
cltd
inc
sub
test
sbb
cld
push
fistpll
imul
xor
pop
out
adc
ret
imulb
shrb
ret
int
fildll
dec
stos
das
cmp
push
sub
lahf
sub
aad
pop
adc
cs
cmpsb
sbb
mov
pop
sub
std
cmp
leave
nop
pop
xor
aas
push
out
mov
dec
push
scas
pop
mov
andl
mov
or
mov
call
test
imul
push
sbb
sbb
sahf
data16
add
or
or
push
sbb
call
pop
aad
cltd
rcrb
andl
sbb
add
pop
mov
shrl
cmpsb
cmpsb
xchg
sbb
xchg
cmpsb
cltd
call
mov
mov
push
insl
rorl
pop
mov
mov
es
mov
xor
sti
mov
in
adc
lea
push
fwait
pop
cmp
outsb
adc
or
dec
jmp
ficoms
movsl
cli
lahf
adc
mov
and
aad
outsl
imul
mov
cmp
js
jne
jmp
movsb
stos
add
loope
lahf
in
leave
rcr
mov
mov
and
call
shrl
mov
xor
mov
pop
and
sub
mov
xor
es
fiadds
outsb
dec
sbb
xchg
imul
push
in
xchg
movsb
push
lahf
ja
inc
imul
or
mov
push
jl
shl
cmpsl
pop
jne
in
fcomps
outsl
inc
sub
pop
jecxz
loope
sahf
imul
aaa
stos
mov
mov
call
push
outsl
cmp
or
push
sbb
fs
arpl
call
lock
cmpl
sbb
sub
cmp
dec
rorb
or
push
jmp
ja
xchg
iret
lds
jnp
mov
enter
mov
add
sub
fwait
dec
sbb
mul
insb
outsb
mov
mov
pop
insb
pop
pusha
lds
xchg
dec
push
jno
adc
ljmp
pop
test
rclb
sub
cltd
add
sbb
fcompl
add
cmp
mov
xchg
mov
sbb
stc
inc
iret
sbb
fdivrs
inc
clc
inc
fbld
loope
jb
jl
dec
ficoms
jmp
repz
pop
or
and
ja
and
adc
jbe
imul
es
jge
push
cli
je
adc
ljmp
dec
in
jl
popf
xchg
ret
mov
sub
icebp
shrl
jg
adc
fidivs
loop
imul
js
bound
inc
pusha
sub
bound
movsl
mov
push
ret
inc
sub
sub
jb
shl
out
sbb
push
imul
cmpsb
adc
jmp
lcall
dec
dec
rcrb
loop
or
test
lahf
jbe
or
adc
loope
mov
lods
pop
xchg
bound
mov
es
daa
xor
pop
rcll
cmp
and
cmpsl
xlat
ljmp
dec
push
and
jae
mov
lock
push
sar
cmp
cmp
xlat
int3
jae
sub
inc
sbb
mov
sub
jecxz
dec
pushf
pop
jno
mov
mov
and
insl
add
adc
mov
mov
cmpl
inc
mov
cmpsl
fdivrp
leave
mov
pop
les
fcmove
movsb
mov
aaa
int3
jp
std
imul
push
dec
mov
jg
and
push
cmc
icebp
sbb
es
jno
xor
div
lret
push
jmp
mov
imul
cmpsl
xor
xchg
mov
adc
sub
fdivl
jns
push
xchg
inc
jno
sahf
mov
add
jecxz
cwtl
movsb
insl
in
jp
clc
pusha
mov
jns
aaa
ret
jg
sbb
ds
out
dec
pop
orl
clc
or
and
jl
push
push
inc
push
xchg
test
or
inc
out
bound
mov
push
jbe
xor
test
loop
mov
js
clc
cmp
push
mov
mov
rol
jle
movsb
lcall
adc
or
dec
repnz
in
xchg
add
leave
test
or
ds
pusha
inc
sarb
jbe
add
imul
fstps
and
mov
out
outsl
lds
lods
mov
mov
stos
outsb
mov
outsb
out
sbb
lahf
or
shll
arpl
jg
in
pop
nop
jecxz
int3
mov
fnstenv
jl
xchg
lahf
in
into
loop
xor
mov
push
add
stc
lcall
sub
and
daa
cmpsl
shll
or
pusha
sar
movsb
cmpsb
out
andl
inc
shrl
arpl
mov
cmpsb
icebp
rorl
inc
ret
adc
loop
adc
push
std
out
cmp
push
and
rcrl
ja
pop
mov
cmp
testb
inc
cltd
cmp
pusha
and
push
jb
push
sub
and
sahf
mov
jb
pop
psubsw
int3
fsubs
xchg
pop
mov
insb
add
push
sbb
and
inc
nop
clc
xchg
fdivrl
and
mov
cmp
pop
lods
xchg
push
mov
add
mov
cmp
dec
sbb
test
addr16
cmp
xchg
fsub
jmp
cli
cmpsl
cli
fstps
arpl
leave
cmc
mov
in
push
js
xlat
icebp
sbb
cli
adc
in
lea
lods
jge
and
mov
xor
lods
xchg
jae
sbb
imul
pop
lds
out
mov
cmp
test
fsubrs
bound
es
sub
sub
shll
test
loop
inc
and
fwait
push
in
mov
lock
add
loope
add
cmp
lahf
cmp
dec
cltd
out
or
or
mov
repnz
push
stos
call
loope
xchg
xchg
cmp
or
hlt
and
lret
pop
je
adc
repz
mov
rdtsc
xchg
sbb
sbb
fcmovb
lahf
leave
scas
shrl
xor
push
push
orl
subb
dec
in
out
sbb
xchg
or
rcll
adc
jmp
xor
lea
sarb
xchg
cmp
frstor
bound
popa
cmp
aad
push
dec
mov
out
icebp
inc
push
mov
sbb
stos
jecxz
fcmovb
movsl
sub
push
shll
sti
dec
mov
sbb
mov
push
outsb
loop
push
mov
xor
mov
dec
jmp
add
loop
psubd
push
mov
jle
mov
xchg
cltd
jns
inc
enter
lds
fdivs
outsb
subl
and
out
cmp
ret
pop
sti
fadd
int3
mov
leave
jl
sbb
jp
mov
filds
gs
aas
mov
xchg
inc
dec
and
pop
jbe
push
loope
jb
inc
pop
fcompl
addl
lods
jecxz
gs
into
mov
jge
sarb
push
int
das
fcmovnu
inc
and
aas
mov
push
repz
movsl
aas
pop
add
xchg
mov
pushf
fldt
in
mov
pop
in
pop
sarl
sbb
negb
jmp
fld
dec
notl
movsl
in
orb
jns
inc
jns
pop
repz
fucomp
lock
das
push
int
mov
jb
sub
sbb
or
cmpsb
adc
dec
mov
and
into
sbb
movsb
and
push
rol
jl
cmc
xorb
mov
dec
xor
cmc
and
sti
fwait
int
jno
insb
fcmovnbe
arpl
loopne
popf
mov
dec
dec
jge
mov
ja
std
mov
xor
pop
out
frstor
xor
in
aaa
sbb
ja
inc
call
stos
popf
pushl
arpl
fs
mov
sbb
cltd
push
test
arpl
inc
mov
lods
jbe
and
stc
sub
int3
frstor
shll
inc
adc
rorb
dec
lcall
mov
fsubp
rorl
rorb
mov
inc
cmp
inc
aad
and
jecxz
adc
cmp
jb
fdivs
sti
jae
rorl
mov
incb
fsts
pop
lret
pop
cmpsb
ret
xor
add
or
fidivrs
and
dec
gs
ret
ja
adc
and
lcall
dec
imul
loop
adc
idivl
xor
mov
push
rcrl
jge
dec
push
int3
test
pop
rorl
popa
leave
test
push
mov
or
jmp
out
cwtl
rcl
sbb
pop
arpl
sub
cwtl
lret
test
mov
int3
pop
dec
push
and
push
inc
das
nop
sti
jns
fs
jno
and
popf
insl
add
push
jl
dec
add
sarb
stos
sbb
out
pop
aam
mov
mov
jnp
es
lods
and
dec
stos
arpl
add
cmp
test
cltd
and
xchg
lds
lahf
pushf
adc
cs
out
or
pop
fsubr
inc
xchg
aad
idivl
mov
subb
mov
and
pop
mov
hlt
mov
pop
cmpsb
sbb
add
dec
add
icebp
jecxz
test
jne
and
lods
pushf
xor
xchg
roll
pop
enter
stos
out
dec
js
aaa
loope
and
lods
jo
or
aaa
repnz
sub
push
outsb
mov
rorl
rorb
push
popa
xchg
mov
xor
xor
and
stos
and
aas
and
data16
add
pop
fdivrs
je
scas
popa
jne
hlt
push
jle
push
inc
pop
out
or
aaa
dec
add
jmp
push
outsb
sbb
gs
pushf
repz
add
divb
outsb
into
insb
pop
inc
ja
cmpsl
inc
cmc
sbb
and
or
test
pushf
stc
pop
sub
sub
aaa
sti
jg
or
fiaddl
movsb
push
hlt
cmc
pusha
adc
mov
dec
xchg
jp
dec
mov
scas
or
mov
cmp
and
ret
nop
xchg
arpl
jmp
in
push
inc
fwait
in
test
aas
sub
dec
aad
adc
sbb
sbb
sahf
jmp
repnz
adc
xchg
movsb
adc
jae
imul
nop
pop
mov
push
daa
push
xchg
mov
popa
mov
je
movl
testl
lods
imul
fildl
scas
cmp
cltd
aas
test
adc
cmc
ret
mov
loop
enter
cmc
pop
mov
jo
leave
and
mov
outsb
or
leave
lods
xchg
jmp
xchg
inc
inc
movsb
pop
mov
add
out
xchg
mov
repz
lea
pop
movsb
ss
xor
add
inc
leave
repnz
iret
pop
inc
icebp
in
syscall
adc
xchg
mov
loopne
inc
jb
sbb
add
dec
out
fadds
xchg
mov
cmp
in
push
mov
or
mov
xchg
mov
mov
pop
xor
xor
enter
addr16
inc
popf
in
jmp
lods
iret
inc
xchg
push
push
push
adc
rclb
adc
push
or
push
mov
cmpl
inc
lret
addr16
jg
repz
loopne
into
ret
iret
mov
lods
pusha
pop
clc
adc
mov
je
cmp
popf
es
mov
in
in
inc
adc
or
push
inc
add
pusha
pop
xchg
mov
das
stos
mov
jae
adc
cmp
jbe
je
mov
jae
dec
xchg
xor
fdivl
pop
xor
or
sarl
ljmp
inc
xchg
dec
hlt
rcrb
sub
mov
pop
mov
sbb
xchg
loope
fprem1
sub
cmp
pusha
aaa
int3
repnz
push
xchg
sub
insl
stos
jmp
push
jle
adc
mov
movsl
std
xlat
jnp
mov
dec
jp
out
sar
dec
mov
call
fbld
cmp
pop
fadd
pop
xor
jb
inc
insb
mov
inc
data16
jle
and
mov
rcl
push
push
jmp
or
stos
cli
inc
jmp
cmc
pushf
and
sub
loopne
int3
sub
or
add
mov
mov
test
push
mov
mov
jle
iret
lahf
loop
ds
mov
sub
and
les
hlt
pop
leave
int
adc
sbb
xor
data16
sbb
lahf
xchg
imul
les
out
insb
sub
leave
je
jb
scas
jne
scas
sub
hlt
xchg
and
lock
testl
or
jl
jge
or
cwtl
cwtl
push
idivb
loope
dec
cmp
insb
pause
in
jle
pop
push
andl
mov
aam
dec
rclb
test
pop
sub
arpl
or
into
ss
aas
adcl
sbb
fstps
pop
stc
jecxz
or
shrl
test
outsl
in
clc
or
repz
jnp
xchg
pushl
sahf
outsb
cltd
add
nop
push
mov
in
mov
xor
cwtl
adc
xchg
xchg
out
sub
jmp
and
cmp
int
das
sbb
adc
imul
out
bound
clc
iret
outsl
jp
or
in
inc
bound
adc
insb
dec
jae
loop
jnp
xlat
cmp
imul
outsl
mov
xchg
push
or
scas
ja
cli
add
fwait
rolb
aaa
aad
xor
ud1
push
sub
sbb
pop
jmp
sub
push
pop
sub
sub
fcoms
mov
pop
je
push
push
jp
jbe
sarb
dec
push
incb
and
xchg
mov
int
sub
mov
bnd
jge
fsubrl
cmpsl
sbb
divl
cli
cld
jns
adc
shlb
sbb
push
xchg
ja
sti
inc
iret
mov
stos
stos
nop
repnz
cmp
pmulhw
cltd
ret
adc
popa
push
fwait
pop
dec
xchg
test
jnp
sbbl
adc
adc
inc
xor
xchg
jp
or
xorb
jmp
xor
adc
sbb
out
add
movsl
push
movsb
fwait
mov
push
outsb
test
sub
mov
sub
out
stc
xorl
or
xor
icebp
shrl
cmp
es
jecxz
push
mov
mov
xor
loop
aam
int
adc
jno
pusha
ja
pop
cmp
cmp
pusha
sbb
shlb
rcr
jne
dec
inc
mov
je
xchg
push
pop
loopne
test
xchg
or
inc
sub
jle
inc
and
cmpl
push
xlat
stos
nop
mov
js
and
fistpl
cmp
push
rcrl
dec
imul
test
sbb
imul
aad
imull
xchg
in
xor
in
rol
test
and
push
imul
leave
test
dec
leave
ror
lcall
lahf
cmc
sub
xchg
sub
push
fbld
cmc
lcall
and
cmp
pop
cmpsl
sbb
add
adc
rol
adc
rcrb
sub
shl
fidivrs
mov
inc
mov
mull
push
ljmp
jmp
outsl
sarb
aam
lahf
mov
in
mov
sahf
jns
push
stc
inc
and
out
cmc
enter
adc
push
push
cs
mov
rcrb
in
stos
lret
sub
shrl
fcompl
xchg
jo
inc
lahf
je
jo
push
xchg
js
mov
jle
data16
fildl
mov
jb
cmp
cmp
int
aas
push
sub
xchg
dec
ss
loope
xchg
or
pusha
xor
std
sbb
mov
pop
fiadds
sbb
add
push
ljmp
mov
cmp
push
std
xor
fcmovnb
sub
outsb
nop
aam
sbb
xorl
push
mov
dec
mov
adc
mov
dec
je
mov
call
add
hlt
movsl
push
hlt
pop
hlt
mov
std
xchg
push
daa
lret
mov
outsb
mov
jmp
mov
fcmovnu
jb
or
inc
xor
sub
sbb
sub
test
fdivr
dec
outsb
sub
mov
fcmovnu
in
jge
orl
pop
sub
add
js
or
xor
mov
xor
data16
inc
les
lods
xchg
pop
pop
lret
ret
or
xchg
dec
rclb
adc
mov
or
inc
lahf
and
mov
or
loop
cld
mov
push
into
rcr
cmp
jmp
sub
push
push
mov
fildl
pop
pop
movsb
mov
dec
push
mov
orb
cmp
mov
or
mov
loope
popf
cmc
xchg
mov
pushf
call
arpl
bound
aaa
mov
mov
mov
in
adc
jns
hlt
loopne
rclb
imul
das
xorl
lock
push
xchg
imul
icebp
xchg
mov
hlt
cmp
mov
aaa
jge
test
pushf
out
pop
add
sub
push
int
jnp
xchg
leave
fs
dec
nop
xor
lcall
fld
cli
push
pop
xchg
orb
and
ss
sub
add
mov
add
cwtl
arpl
or
idivb
mov
cmpsb
mov
gs
sbb
jp
lea
xchg
andb
jge
add
call
subb
testl
repnz
testb
loop
sbb
fs
in
loope
vpmaxsw
out
mov
xchg
dec
fidivl
add
lahf
inc
and
push
or
xchg
adc
mov
add
imul
push
pushf
outsb
into
xor
cmpsl
xlat
add
push
mov
push
subl
aam
sub
fidivl
lahf
repnz
sti
loop
xor
cmp
inc
lea
jo
in
sub
stos
imul
fildl
adc
es
nop
pop
jno
addr16
jbe
adc
jne
ljmp
inc
and
sbb
mov
gs
pop
and
inc
pop
das
or
sbb
popf
or
sbbb
dec
ss
les
enter
cmpsb
decb
rcr
cmpsb
dec
movsb
popa
cmp
adc
or
pop
addr16
scas
scas
jp
sub
jb
out
jae
rclb
xor
imul
js
sti
pop
mov
rcll
das
xchg
enter
push
cs
dec
stc
int
popf
cmpsb
inc
cmpsl
mov
rorl
mov
xor
aaa
dec
xor
pop
scas
jb
jmp
or
int
popf
fistps
repnz
inc
or
sahf
out
stos
repz
cltd
daa
repnz
sbb
cmp
fwait
mov
outsb
sahf
jg
cmpsl
and
iret
aad
pop
jecxz,pt
jne
imul
fisubl
sub
sub
or
sti
arpl
lea
sub
jle
enter
std
in
jg
sub
ss
fiaddl
xor
and
test
mov
lock
outsl
lds
mov
adc
push
dec
sub
mov
jbe
addr16
jo
je
popf
les
jns
daa
lret
sbbl
and
insl
jmp
push
mov
rorl
mov
jp
mov
lods
mov
jae
and
push
mov
push
xchg
mov
push
cmc
inc
mov
lods
xchg
out
adc
jl
push
roll
lea
mov
stc
jnp
cltd
in
cmpl
mov
loopne
rcl
ds
push
out
jl
fidivrs
ret
rcrl
and
jne
mov
add
lahf
lock
fwait
mov
jle
andl
adc
jle
sbb
fs
fcmovnbe
and
lahf
dec
mov
pop
lahf
jb
push
insb
xor
movsl
jns
aad
imul
imul
lcall
xor
fisubrs
fcomip
bound
stos
cs
fnstsw
sbb
cs
outsl
es
add
inc
insb
pop
ficompl
mov
imul
adc
add
inc
pop
jbe
xchg
data16
inc
mov
xor
adc
nop
test
inc
dec
in
and
lods
pop
sub
pushf
dec
clc
dec
adc
push
sub
push
xchg
pusha
stc
mov
xor
daa
insb
mov
aas
jno
mov
jbe
loope
jb
mov
pop
push
sbb
jne
sub
in
mov
mov
inc
mov
lock
dec
push
rorl
scas
rcl
stos
clc
mov
cld
outsl
xlat
popf
ret
jbe
jns
mov
push
and
add
xchg
adc
fs
bound
dec
aad
stos
mov
sbb
or
inc
fldcw
pop
xor
loop
dec
insl
adc
test
xor
adc
mov
cmp
jmp
inc
insb
dec
mov
test
mov
jge
add
hlt
int3
xorl
stos
or
cmp
lcall
mov
sbb
inc
jbe
int3
inc
ja
stc
xor
cmp
pushf
test
xchg
rcr
sti
mov
pop
cld
testl
sti
notl
js
test
jae
movsb
mov
lea
inc
cwtl
int3
int
push
inc
dec
xor
sbb
fdivrl
adc
xor
mov
mov
mov
testb
int3
pop
push
sbb
cmp
popf
in
jb
outsb
enter
mov
and
fmull
pop
aaa
jl
push
arpl
fnstcw
fstpt
mov
scas
inc
inc
xchg
push
cmpsl
add
cmpsb
imul
int
call
out
xchg
push
sub
inc
cmp
dec
jge
out
sahf
in
cmpsb
fwait
mov
addb
cmp
mov
mov
or
incl
cmpsb
sub
adc
es
push
pop
cltd
jle
inc
or
sbb
add
insl
gs
push
xor
popf
jns
rcll
cli
std
adc
xor
add
pop
stc
in
sub
scas
xor
cmp
jbe
ret
aam
mov
jmp
lods
lret
mov
cmp
aam
and
pop
and
fdivp
clc
scas
adc
sbb
enter
and
push
push
lret
mov
push
scas
jmp
test
ret
cmp
and
call
jle
dec
dec
or
dec
out
mov
xchg
inc
mov
pop
push
pop
and
mov
sub
out
outsl
pop
fisubl
addr16
pop
xor
jo
enter
aaa
jae
sbb
outsl
cmp
mov
xchg
add
in
pop
insb
or
iret
out
jne
fadds
popf
xlat
inc
shrb
loope
cmc
add
push
je
test
add
sbb
mov
fwait
lods
js
aad
stos
jl
jg
dec
lret
mov
pop
dec
hlt
test
pop
test
pop
push
stos
push
jge
pop
jp
test
add
dec
jmp
jge
xchg
push
mul
sub
xor
int3
sub
adcb
rorl
mov
inc
aad
das
scas
push
jae
cmp
clc
lcall
xchg
out
push
int3
sbb
push
inc
repnz
stc
and
cli
or
sub
call
out
dec
push
imul
pop
xchg
push
pop
outsl
push
cld
fxtract
jbe
jb
push
jmp
jb
ds
aas
cmp
sbb
test
or
adc
push
sub
ljmp
pop
cltd
in
mov
into
jl
jg
pop
loope
imul
arpl
arpl
mov
fs
outsl
fmuls
xor
std
mov
outsb
xor
enter
xor
mov
mov
popf
out
enter
icebp
push
daa
push
lea
push
pop
jl
je
xor
sbb
lds
into
loopne
fisttpl
test
call
adc
jnp
jno
cmc
xchg
cmp
in
test
aaa
ds
push
iret
dec
pop
scas
pop
mov
dec
dec
lock
push
call
dec
out
andl
lods
jae
insl
xor
or
movsb
pop
and
pop
push
cs
add
ja
and
insl
xor
das
into
mov
or
outsl
out
inc
or
and
xor
jp
or
out
out
or
add
adc
ret
xchg
imul
xchg
or
sahf
jbe
mov
xor
inc
mov
outsb
inc
sbb
les
fidivs
sub
loopne
loop
sbb
fbstp
pop
inc
in
jns
sbb
lahf
loope
jle
sub
fisubrs
cmpsb
shl
out
push
movsl
insl
leave
xor
jg
sub
rcrl
inc
jns
cmp
sbb
pop
mov
in
sbb
push
fs
xor
push
in
add
loope
repz
dec
repz
out
or
arpl
and
rcl
jmp
js
mov
jge
dec
cmp
insl
or
adc
cmp
dec
or
jle
adc
adc
mov
adc
add
stos
dec
test
rorl
frstor
or
adc
fldt
pusha
clc
iret
outsb
mov
cld
faddl
mov
xchg
or
or
jo
inc
fcoms
sub
jo
stos
sub
ret
sub
shrl
outsl
mov
dec
fnstcw
cwtl
out
xor
jle
outsb
rclb
outsb
inc
jge
test
mov
and
pop
sub
jnp
out
inc
lock
push
ljmp
mov
mov
lcall
xor
and
clc
int
push
jb
mov
inc
xorb
mov
call
jae
hlt
ficoml
popa
push
mov
leave
add
cmp
mov
into
jg
insl
out
add
icebp
mov
jne
dec
mov
mov
jae
out
and
push
xor
cld
sahf
mov
lea
sarl
fstps
loop
ss
in
push
scas
aaa
pop
push
out
push
add
push
pop
iret
mov
sub
scas
call
jns
mov
or
in
imul
loopne
adcb
out
sbb
push
or
aam
xor
inc
xor
sti
dec
js
orb
ds
mov
push
lea
das
jns
inc
jae
enter
lcall
call
mov
mov
jo
jp
sbb
jo
mov
push
bound
imul
mov
popa
test
lret
jbe
or
dec
dec
sub
xor
loopne
rcll
jb
into
xchg
sub
movsb
pop
add
nop
adcb
mov
dec
fcoml
lret
xchg
mov
lods
fsubrs
jle
cmpsl
iret
sbb
mov
cmp
popa
fcompl
daa
push
divl
add
vpsrlq
or
jg
dec
hlt
pop
push
decb
xor
into
dec
ja
xchg
cli
jo
jbe
and
adc
dec
ficompl
inc
sub
ret
or
shl
mov
ja
clc
int
rorl
test
jae
xchg
and
cmp
outsb
ljmp
rorl
jp
xchg
rclb
repz
aaa
cmpb
push
jmp
call
jl
push
lcall
ja
test
decl
inc
inc
movl
test
adc
mov
in
pop
push
aas
cmp
iret
adc
or
pusha
pop
outsl
mov
dec
xchg
inc
in
sbb
mov
pusha
adc
iret
xor
call
sti
sahf
jno
aaa
xchg
cwtl
pop
lcall
mov
andl
lods
push
cltd
rcrb
inc
mov
sbb
xchg
popf
mov
mov
mov
jo
lds
adc
dec
addl
cmp
outsl
lods
bound
sub
das
xor
mov
xchg
adc
sub
inc
add
hlt
xor
mov
cmp
jnp
push
repnz
scas
inc
popa
jne
aam
icebp
xor
das
arpl
inc
mov
pop
jle
xor
fsubrl
testb
enter
jecxz
in
mov
jne
frstor
sbb
dec
fdivr
inc
adc
jg
push
cld
pop
fisttpl
js
xchg
stos
movsb
xchg
push
shll
and
inc
loopne
not
cmpsb
test
mov
aam
daa
inc
movsb
test
jae
fs
mov
adc
xorl
scas
popf
int3
negl
mov
es
int
dec
test
jno
lds
xor
in
shll
xor
stos
mov
stos
fldpi
or
out
daa
ljmp
fsubrl
popa
je
outsb
pop
jnp
cs
mov
or
in
idiv
mov
xchg
out
jge
in
movsl
jle
insl
push
orb
ss
rcrl
adc
mov
push
loop
cmp
xchg
pop
mov
lods
adc
aaa
mov
mov
mov
scas
jl
adc
out
scas
and
iret
mov
test
sti
int
mov
rcr
lock
jnp
mov
jo
sbb
sbb
mov
and
mov
filds
xor
test
filds
dec
out
jle
or
jns
sbb
ss
mov
inc
scas
out
sbb
jae
and
pop
mov
cmp
int3
mov
jo
rorb
cmc
roll
mov
idivl
push
xchg
mov
in
ds
popa
push
jns
loope
xor
mov
inc
mov
inc
ds
daa
add
add
jp
and
shll
adc
cmpsl
mov
fimuls
movsb
inc
mov
sub
clc
mov
imul
clc
push
xchg
xchg
in
loope
push
in
jmp
jmp
inc
or
and
jo
pop
pushl
int
adc
xchg
cmp
in
jecxz
aad
or
iret
rcrl
idivl
adc
imul
jbe
movsb
mov
ficoml
lret
lcall
fucom
pop
push
dec
sbbb
xchg
call
push
ja
mulb
andl
arpl
fists
lea
cmc
idivl
mov
adc
neg
cmp
lea
jge
inc
mov
xchg
add
in
aam
cltd
gs
mov
push
cld
pop
ret
and
in
aaa
push
dec
out
inc
into
notl
repz
xor
sub
mov
sbb
cmp
les
sub
addb
mov
sub
fisttpll
pop
pop
and
add
cmp
repz
pop
iret
lock
add
dec
mov
inc
mov
call
aad
lahf
xchg
add
mov
inc
cmp
lahf
mov
pop
aaa
lret
scas
gs
fstl
dec
pop
sub
inc
mov
jbe
out
movsl
adc
push
ja
mov
movsb
xchg
imul
scas
jo
inc
xlat
pop
or
in
adc
mov
sub
pop
jl
or
aam
out
mov
xchg
push
orl
psrld
xor
add
xorl
mov
iret
mov
mov
adc
adc
js
cmpsl
lcall
hlt
sbb
or
pop
or
pop
into
idivb
sub
repz
lock
shl
shll
stos
cli
mov
shrl
fwait
jbe
dec
cwtl
jmp
out
ret
fnstsw
cmp
jnp
cli
rcrl
in
sbb
or
insl
cmp
sbb
add
cmp
xchg
xchg
jl
dec
xor
lea
mov
push
jg
lea
aad
push
inc
or
add
push
pop
movsl
jl
int
loopne
xchg
adc
lds
jne
insb
add
or
xor
xchg
sbb
arpl
fsub
push
dec
loope
inc
or
cli
cwtl
sbb
dec
inc
pushf
sub
mov
ret
in
cmp
gs
jg
shrb
push
cli
enter
test
test
xchg
ljmp
mov
mov
ret
imul
pop
jecxz
lahf
je
divl
insl
subl
call
jge
lock
adc
jae
lods
lock
iret
out
in
xchg
negb
mov
shl
clc
add
mov
cmp
dec
sbb
and
cmp
pop
lcall
dec
adc
enter
sub
pop
addb
xor
mov
scas
sub
push
cmp
ds
lock
mov
popf
and
in
jg
pmulhw
mov
ret
fsubrl
adc
sarl
and
jns
mov
les
in
cmpsb
mov
lods
das
xor
inc
xor
out
ret
bound
mov
add
inc
cmpb
lods
dec
out
dec
pop
es
inc
aas
cmp
icebp
mov
sahf
scas
lahf
imul
inc
mov
icebp
aad
jecxz
imul
pushf
lods
or
dec
mov
addl
test
fcoms
xor
sbb
enter
lret
cs
mov
sbb
ror
fwait
inc
movsl
lret
jb
test
in
push
popa
repz
jge
dec
dec
dec
test
ja
pop
and
mov
dec
cli
repnz
test
nop
fsubrs
cmpsb
push
js
out
pop
xor
shrb
aaa
inc
in
faddl
dec
jns
mov
jp
ss
fnstcw
test
push
push
dec
rolb
fs
xlat
push
pop
ss
imul
pop
push
out
loope
shlb
out
mov
aad
fsubrp
jmp
jmp
push
adcl
cmp
repz
mov
mov
mov
jge
cmpsl
xor
fdivl
pop
aam
xor
jae
lock
add
or
cmpsl
mov
cmc
pusha
push
xchg
mov
test
mov
out
lock
fisubs
add
inc
test
shrb
cwtl
iret
lret
dec
sarb
xchg
jmp
xchg
es
repnz
or
push
arpl
xchg
xchg
push
cmc
pop
xor
les
mov
fisttpl
mov
add
out
pop
jno
cmp
stos
negl
mov
sbb
cmpsl
stos
movsb
fnsave
daa
sub
jmp
inc
in
push
sti
lahf
jo
xchg
aad
mov
mov
stos
sub
sahf
dec
out
inc
jecxz
insl
adc
jae
jg
fucom
ljmp
and
pop
mov
push
and
or
inc
jns
test
dec
jno
xchg
jg
jg
sub
sbb
xor
fs
iret
or
test
jae
jne
pop
lcall
les
sub
arpl
fisttps
rcll
lea
inc
lods
sub
ret
mov
lock
xchg
sbb
addr16
rclb
push
inc
or
lods
ret
dec
out
ja
stc
loopne
imul
loop
popf
ret
lret
daa
mov
in
inc
mov
mull
sbb
les
sub
push
les
sub
jbe
mov
and
and
in
inc
imul
stc
lcall
cmp
jg
ja
repz
mov
dec
pop
test
adc
fiadds
loop
into
xchg
xchg
out
push
loope
add
add
cwtl
aam
fidivs
and
jb
xchg
jo
fucom
lods
xchg
or
lret
cli
imul
aaa
loope
cmc
inc
or
mov
cmp
les
sbb
xor
loopne
jae
pop
repnz
push
pop
jle
mov
int
leave
sub
pop
push
inc
push
dec
pop
jge
jns
jge
pushf
mov
sti
lcall
repnz
mov
add
sub
std
pop
icebp
adc
mov
pusha
aad
cmp
jbe
movsl
jp
push
imul
dec
or
inc
or
aas
cld
and
adc
mov
dec
jmp
or
insb
mov
aad
fists
add
hlt
push
ljmp
or
dec
sbb
jae
into
sarb
push
bound
or
in
xchg
lods
jo
lret
insb
or
lods
mov
mov
mov
mov
xor
nop
ds
pop
in
in
add
lods
leave
mov
out
xor
ja
sub
out
adc
enter
clc
rol
push
mov
cs
xchg
lret
xor
popf
xlat
dec
dec
jp
cmp
fwait
or
cwtl
pop
sub
mov
stc
pushf
sbbb
arpl
daa
and
adc
pop
cmp
sbb
dec
scas
and
inc
fisttpll
pop
les
inc
jo
jae
out
test
mov
xor
pop
dec
ljmp
push
fwait
pop
dec
jnp
adcb
inc
adcl
sub
movsl
dec
mov
jl
xchg
adc
int
arpl
adc
pop
mov
push
in
iret
aaa
iret
jl
inc
clc
xor
mov
stos
mov
sub
decl
cmp
adc
mov
repz
xchg
lods
aad
lret
push
add
icebp
fisttps
add
mov
jb
dec
adc
lcall
dec
xchg
jecxz
fildll
or
adc
iret
mov
ss
sbb
bound
loop
inc
test
test
add
cmpsl
ficoms
cld
dec
sub
fcmovnb
mov
pop
enter
rcll
ds
cld
fwait
xchg
mov
lds
into
int3
mov
mov
push
sub
dec
mov
mov
lock
adc
int3
fstl
dec
inc
and
jmp
out
sub
je
bound
xor
insb
jnp
mov
imul
loop
sub
xchg
nop
es
arpl
cwtl
ret
sub
lahf
daa
mov
xchg
dec
leave
and
das
add
cld
pop
jmp
mov
in
sbb
mov
add
sarl
adc
mov
mull
repnz
ret
mov
push
pop
imul
test
es
dec
lods
jg
push
jns
sub
scas
ret
sbb
sub
push
imul
out
icebp
pop
sbb
mov
movsl
popa
mov
push
cwtl
movb
jbe
or
ror
movb
call
mov
mov
or
pop
sbb
aaa
xchg
je
out
dec
das
scas
and
testl
int3
cmpsl
hlt
fcmovb
push
sahf
fstpl
add
cwtl
mov
and
sbb
sbb
inc
adc
rclb
xchg
fadds
push
outsl
mov
scas
jmp
xchg
rcrl
out
mov
xor
fnstcw
sub
or
loop
cmp
pusha
jae
xor
fnclex
stc
jne
mov
cmp
cmp
xor
lea
mov
std
mov
mov
sub
or
and
push
ja
sbb
enter
andb
iret
call
movsl
jp
cmp
clc
mov
insl
loop
scas
and
lahf
push
fcmovnb
lcall
in
jno
sub
add
dec
sbb
shr
insb
stc
xchg
inc
fbstp
movsb
sub
bound
push
adc
daa
sub
lds
mov
and
aad
sbbl
sbbl
jne
sti
fyl2x
aas
cmp
in
add
addr16
int
je
adcb
add
ror
nop
and
xchg
in
jne
push
mov
mov
sub
imul
dec
inc
insb
adc
lret
xor
jge
out
inc
mov
in
aam
stc
cwtl
pusha
adc
pop
lret
mov
or
call
daa
mov
mov
test
mov
test
arpl
in
int
mull
mov
adc
lret
cmp
dec
arpl
mov
inc
fsubl
and
fs
cmp
rclb
ror
inc
pop
pop
and
aad
push
sbb
scas
sub
int3
and
dec
out
xor
xor
xor
ret
and
push
loope
lahf
sbb
movsb
mov
ss
iret
inc
cld
out
fs
push
jbe
sbb
add
loop
add
mov
push
fcmovu
pop
add
pop
pop
int3
mov
daa
rorb
repz
shlb
sti
or
jbe
xor
xchg
es
and
fcmovnb
sbb
mov
mov
popa
mov
aas
arpl
dec
and
lahf
or
lret
test
and
fldenv
rolb
sub
movsb
sahf
adc
mov
arpl
test
shr
push
stc
roll
xchg
jge
mov
jmp
inc
adcb
or
fsubl
cmpsl
xchg
insl
mov
add
add
adc
xchg
push
in
pop
call
ljmp
repz
out
jmp
stc
mov
int3
inc
lea
mov
js
in
inc
cld
cmpsb
xchg
cld
jno
push
sbb
enter
jecxz
fiadds
and
gs
mov
maxps
pop
pop
sti
sub
dec
mov
into
pop
into
maxps
pop
aaa
pop
add
mov
mov
jb
in
cltd
jb
rep
loopne
dec
jno
jmp
std
inc
orb
jg
daa
jp
sti
rorl
enter
sub
or
subb
jno
push
pop
push
repz
lea
lods
and
jnp
movsb
std
fsubs
jbe
sbbb
aad
jbe
push
lret
mov
adc
scas
fwait
cmp
fisubrs
dec
pop
cmp
popf
push
cmp
adc
cltd
fwait
in
and
faddl
je
and
adc
jne
movsb
gs
adc
add
adc
gs
stos
mov
arpl
cmp
sub
es
adc
pop
push
shlb
orps
push
xor
out
xchg
push
test
inc
loope
int
pop
mov
bnd
pop
hlt
loopne
push
mov
out
clc
mov
xor
lods
cmp
enter
mov
adc
add
jmp
loopne
repz
and
cwtl
scas
xchg
call
xchg
pop
je
movsl
repz
xchg
aaa
inc
ficompl
lcall
sub
les
sub
cli
dec
mov
xchg
addr16
cmp
lcall
cwtl
xchg
mov
xor
push
hlt
sub
insl
lods
xchg
adc
lret
sbb
roll
pop
jno
or
test
stc
sub
xchg
rcrb
add
nop
mov
aam
cmp
mov
dec
cmp
imul
jmp
sub
mov
jp
adc
mov
jae
leave
or
negb
roll
daa
jp
jbe
pusha
xchg
inc
add
push
push
push
dec
or
rcl
rcrb
mov
push
in
ret
loope
pop
cli
dec
or
aad
cmp
pop
pop
adc
negb
orb
jb
sti
or
push
mov
cld
arpl
jbe
andb
ret
xor
dec
ss
lret
cmp
ja
decb
and
inc
mov
and
sub
inc
es
repnz
pop
pop
aaa
mov
add
fcompl
insb
adc
add
dec
push
adc
dec
aad
sub
test
sub
aas
cmpsl
lahf
inc
cmp
loop
test
pop
repnz
loopne
mov
cmp
or
push
je
out
nop
loopne
lret
pop
mov
clc
xor
mov
std
mov
cmpsl
xor
incl
stos
stos
clc
test
mov
in
and
in
call
sbb
sub
scas
push
mov
push
nop
addb
xor
mov
adcl
fisubl
push
scas
adc
or
mov
push
nop
bound
xor
mov
mov
inc
iret
lcall
xor
ret
cld
jmp
loop
dec
enter
sti
inc
sbb
xchg
dec
out
int3
mov
out
fisubl
mov
push
adc
movsb
jl
and
jb
push
xchg
push
shll
loop
test
dec
hlt
popa
mov
cmpsb
jne
add
xor
pop
aas
cmp
pusha
push
psubq
xchg
mov
jbe
hlt
mov
push
lea
pop
push
xor
mov
aas
push
mov
and
enter
inc
xor
sub
ljmp
scas
lods
pop
mov
fwait
movsl
jecxz
repz
popf
lcall
push
adc
outsl
pop
cli
iret
mov
out
push
dec
repz
call
and
push
into
call
popa
cmc
fistpl
jae
lret
add
iret
jmp
cmovg
pushf
push
incb
cwtl
imul
sarl
or
sbb
sahf
fst
sub
lahf
push
cmp
inc
and
pop
loopne
xchg
mov
fwait
cs
jbe
mov
or
push
lods
pop
xchg
idiv
add
shl
insl
addr16
in
cmp
jge
mov
pop
aam
cmp
ds
xchg
out
jmp
sub
mov
push
inc
into
or
loop
inc
xchg
lcall
dec
rep
pop
jg
subb
mov
mov
jl
outsl
adc
hlt
mov
iret
test
adc
mov
jb
jno
fs
loope
jg
inc
mov
mov
xchg
ja
xchg
lahf
lods
add
and
fmull
jmp
jmp
clc
mov
outsb
cmpsb
mov
mov
loope
mov
adc
jmp
sub
sbbl
int
cmc
push
push
lds
imul
arpl
int
xlat
mov
sbb
fwait
mov
inc
aam
lcall
orl
sbb
fcmovu
cmp
pop
cli
aam
adc
dec
adcl
or
jmp
sbb
int
or
xchg
lods
xchg
sbb
in
jbe
adc
ss
test
in
and
pop
and
and
sti
cwtl
mov
dec
sub
jo
cli
fcomps
shrb
aam
mov
rorl
and
jle
inc
push
test
bound
or
mov
fsubrl
aas
ds
insl
int3
sbb
aad
pop
fcmovnb
adc
mov
orb
std
adc
push
stos
lret
jecxz
jge
mov
lds
int
mov
xchg
insl
cli
mov
mov
cld
divps
jne
dec
inc
inc
shr
xchg
mov
fdivrp
mov
lock
inc
lock
xor
repnz
sahf
ljmp
fiaddl
sbb
in
xor
jmp
xor
mov
mov
adc
out
sbb
std
lock
xchg
aas
fisubrs
in
or
jae
ret
shlb
cld
popa
jle
push
aad
adc
movsb
out
add
pop
push
adc
shl
push
lea
pop
cmp
and
adc
rorb
add
pop
sub
lwpval
call
adc
lret
push
subl
jb
inc
cmpsl
shrb
sbb
xchg
pop
mov
shr
fidivrs
loopne
push
pop
jecxz
testl
fistl
je
es
popf
sbb
dec
shlb
adc
inc
int3
out
orb
das
aas
cli
mov
js
push
pop
inc
out
sub
push
jmp
mov
lods
je
ja
dec
fldl
add
loopne
sub
push
mov
xchg
jg
clc
push
sbb
xor
cwtl
lret
mov
pop
dec
in
aad
sarl
sbb
add
inc
mov
xlat
add
mov
pushf
pop
scas
lods
adc
jbe
cmp
lea
jnp
stos
push
cmp
test
mov
cmp
push
adc
sub
fsubr
mov
lret
outsb
pusha
aas
out
cmp
movsl
jae
mov
lods
inc
sahf
cmp
leave
mov
xlat
push
mov
mov
out
adc
jg
jb
mov
leave
jo
mov
xchg
insl
xchg
mov
sbb
pop
xlat
and
popa
and
nopl
jp
subl
iret
fistl
stos
imul
incl
imul
test
pop
sbb
mov
shll
pop
xchg
adcb
out
int
jle
orb
lods
add
pop
sub
mov
cmp
std
mov
mov
int
frstpm(287
data16
pop
or
and
sbb
lret
jnp
test
mov
sub
jp
push
dec
in
jne
jo
insb
lea
ret
mov
push
aad
add
leave
bound
inc
repnz
les
and
sub
lds
and
and
add
cmp
js
insl
cld
and
or
scas
xchg
mov
adc
in
and
out
in
pusha
in
sub
xor
test
push
sub
mov
std
xor
insl
repz
stc
incl
sbb
loope
rcll
loopne
push
fcoms
data16
cmp
push
ds
lea
lcall
pusha
pop
push
loopne
sbb
js
adc
add
cs
nop
push
sbb
inc
jle
jl
roll
push
add
inc
in
push
inc
scas
mov
or
scas
aad
mov
fwait
aam
fistps
rclb
mov
xchg
sarl
leave
sbb
xchg
cmp
sub
lret
xor
jg
xor
mov
dec
mov
dec
mov
jae
cmp
js
shrl
mov
push
sub
shll
jecxz
divl
pushf
lods
ffree
nop
or
mov
push
mov
outsb
lods
roll
insl
lahf
jns
pop
xorb
clc
cmp
adc
mov
scas
pop
jbe
lock
pop
fidivrl
in
dec
andl
mov
inc
mov
lods
and
dec
xchg
inc
sbb
ja
sbb
ret
mov
fadd
in
hlt
jmp
jbe
mov
or
flds
movnti
mov
adcl
push
mov
xor
push
mov
pop
add
fcomps
dec
xor
mov
arpl
shr
loope
out
out
setle
xor
fstps
sub
data16
stos
xchg
mov
sbb
lods
int
fsubl
pop
fsubrs
xchg
ljmp
addr16
xchg
std
jnp
inc
mov
arpl
enter
fs
inc
pop
fisubs
call
inc
clc
gs
pusha
lret
aam
ss
cmp
sbb
sbb
xchg
sbb
cmp
xor
ret
sbb
xlat
push
mov
mov
push
pop
and
xchg
repnz
aas
movsl
push
xor
cmpsb
addr16
add
and
jmp
cmp
sub
pushf
inc
mov
outsl
dec
mov
pop
or
push
xchg
xchg
ljmp
loop
stos
sarb
imul
add
sahf
enter
loope
mov
or
in
cmp
adc
lret
sbb
inc
mov
and
sbb
add
inc
mov
outsl
fisttpll
rcll
cmp
rcrb
and
pop
sar
loope
sarl
ja
enter
daa
clc
call
insb
pop
lcall
fs
jb
push
arpl
push
mov
xchg
iret
popl
std
mov
imul
rcrl
pop
adc
bound
loope
aam
fimull
fistpl
sti
sbb
jo
stos
mov
lcall
ret
or
sti
xchg
xor
arpl
sbb
fimuls
xor
jle
test
pop
and
mov
stos
in
fstps
or
imul
pop
in
cwtl
inc
pop
pop
outsl
test
or
mov
aaa
pop
pop
pop
insl
and
pop
insl
dec
sub
in
lds
jo
pop
shlb
data16
xchg
gs
jmp
subb
sub
shll
int3
popf
xor
and
sub
or
in
jbe
ds
nop
dec
out
leave
lods
xor
loop
testl
and
push
insb
idivl
xor
fstl
aas
cmp
jno
pop
cmp
and
aaa
daa
jne
xchg
dec
push
pop
cmp
add
jmp
ret
mov
ffree
lods
xchg
movsb
cs
jo
jg
mov
lret
inc
mov
addr16
push
jbe
clc
add
fimuls
mov
sbb
nop
sbb
mov
sub
lds
xor
xor
jmp
inc
push
dec
xchg
xor
pop
vpsrld
loopne
xchg
sahf
cmp
addr16
cmpsb
icebp
ret
nop
cmp
jmp
mov
mov
stc
jge
or
cltd
rcll
je
addl
push
dec
cli
lds
mov
cs
or
xor
clc
lret
xchg
xchg
mov
fcmovnu
mov
jo
into
pop
fcmovb
aaa
push
xor
call
push
xchg
push
mov
fs
cmp
ss
fwait
mov
fnstcw
or
popf
aam
sub
and
xchg
mov
jb
subb
dec
mov
xchg
stc
cmpsb
adc
into
jp
out
xorb
xor
jns
outsb
imul
push
subb
jmp
push
push
xchg
mov
cmc
xchg
mov
push
cmp
adc
inc
imul
jp
mov
jecxz
sub
pusha
popa
mov
lods
out
xchg
test
ficoml
sbb
push
roll
out
popf
pop
xchg
setnp
xchg
sub
fadds
sarb
and
mov
cmp
cltd
lret
in
lods
insb
sbbl
push
stos
ljmp
adc
lds
pxor
in
test
ds
sti
fsubs
lret
ret
pusha
lcall
bound
jb
push
push
shll
mov
mov
sub
in
fsubl
mov
or
xor
pop
cmpsl
ss
bound
aaa
ja
xchg
add
outsl
and
or
in
pop
dec
shll
jge
mov
dec
fmull
std
into
neg
test
jbe
lcall
and
out
lea
jmp
cmp
movsl
mov
xchg
mov
pushf
aas
xor
ret
push
xor
arpl
fs
adc
fcoms
je
xorb
call
mov
pop
shrb
imul
sbb
sub
or
xchg
cmp
ds
push
cltd
lea
movsl
sub
stos
cmc
push
enter
addr16
jns
imull
push
aad
mov
lret
inc
pusha
mov
xor
cli
xor
lea
fistl
in
enter
ja
stos
xor
jge
stc
or
test
xor
mov
xchg
jnp
fsub
push
xor
mov
lcall
jp
ret
inc
xor
roll
rolb
mov
cmp
push
pop
push
stc
popf
lret
lods
push
jecxz
je
lds
cltd
hlt
in
outsb
push
pop
xor
es
cld
and
arpl
out
jl
test
lea
mov
sbb
test
popf
push
mov
lret
dec
mov
fstps
ja
sbb
xchg
nop
jns
push
repnz
bound
push
mov
jne
sbb
je
test
sub
mov
fsubr
jbe
jbe
jne
dec
fsts
dec
push
inc
mov
cs
loop,pt
adc
push
fwait
jmp
xor
mov
repz
sub
pop
test
int3
mov
or
inc
loop
scas
sbb
fists
sbb
pop
adc
push
cld
pop
sub
push
mov
into
cmp
shl
add
adc
outsb
iret
hlt
rdtsc
mov
test
inc
mov
mov
je
enter
pusha
rorl
mov
ja
shl
test
and
sub
push
leave
insl
cmpsl
mov
fs
add
out
and
cmp
and
call
xor
loope
sub
mov
notb
push
sub
repnz
or
nop
mov
adc
and
std
pop
sahf
ss
mov
cmpb
push
dec
inc
add
loopne
adc
out
pop
or
mull
lock
cmp
notl
xor
mov
jge
xchg
inc
daa
add
ljmp
push
movsl
xchg
in
and
mov
ret
xor
loop
cwtl
hlt
mov
mov
jne
leave
mov
or
inc
mov
lret
out
add
jp
dec
pushf
sbb
lea
dec
cld
jmp
dec
fs
add
dec
xchg
fsub
js
push
aaa
fimull
mov
bound
sti
aaa
sbb
mov
sti
stos
sbb
or
into
lcall
cmp
pop
and
popa
cmpsl
je
push
and
scas
cmpsl
mov
cmp
xlat
jae
xchg
das
cmp
test
mov
mov
xchg
push
popa
repnz
test
xor
lods
mov
push
mov
mov
xchg
jne
jns
jae
mov
out
jp
dec
pop
mov
sahf
lods
xchg
rolb
fisttpl
push
loopne
stc
rcl
fdivrp
fisubs
ret
call
aaa
lahf
data16
xlat
mov
in
subb
jb
mov
out
std
addr16
xorb
imul
xchg
cs
xchg
xor
add
movsb
rolb
iret
mov
mov
outsl
inc
xor
inc
fsubrs
rcrb
in
pop
outsb
push
xor
stos
push
sbbl
mov
mov
dec
fsubs
ljmp
stos
js
push
faddl
add
sbb
ss
cmpsb
mov
mov
shrb
jb
inc
scas
lret
out
fs
lods
xchg
inc
mov
gs
imul
repnz
aaa
or
xor
popf
repnz
shrb
xchg
or
add
push
sbb
jns
xchg
cmp
lcall
aad
xor
lea
sbb
xchg
fisubl
in
adc
jno
or
and
pop
push
ror
jp
repz
dec
arpl
mov
das
lret
enter
cmpsb
inc
xor
daa
push
lahf
push
xchg
inc
enter
mov
pop
mov
loope
in
sahf
sub
imul
dec
loopne
cmp
add
pop
fisttpll
scas
loopne
sub
mov
loop
mov
or
shr
mov
sub
test
mov
xchg
cs
mov
je
pop
jbe
fisubrs
inc
in
push
or
lods
and
xchg
sti
mov
cmp
repz
pop
in
adc
aas
std
shrb
popf
pop
xchg
push
dec
ret
call
gs
jg
mov
pop
and
or
lret
ja
dec
lea
stos
rcrl
hlt
nop
divl
addb
xchg
andb
xor
push
in
mov
rorl
outsl
pop
lret
jge
sub
mov
jg
fwait
cmp
scas
in
in
push
and
loopne
stos
loope
lods
imul
pop
xchg
repnz
jnp
pop
xor
lahf
dec
push
dec
or
adc
lret
dec
sub
sahf
jl
sub
mov
rcl
mov
mov
sbb
das
ret
inc
popf
into
xchg
pop
and
movsb
lods
or
jle
sub
aam
cmp
pushf
enter
fadds
es
cmpsl
push
rolb
push
xchg
push
push
fcmovne
sub
cmp
mov
jp
and
int3
pop
sub
pop
aad
and
jns
xlat
or
or
sub
mov
xchg
cmpsb
or
mov
mov
aam
or
int
mov
aad
or
mov
cmpsb
and
sbb
xchg
icebp
dec
add
lcall
xchg
xor
fstps
adc
sbb
mov
in
cmp
fadds
test
int3
cmp
arpl
insb
sbb
add
lcall
cmp
rcl
sbb
cli
sub
inc
iret
ret
pusha
mull
jmp
out
add
sbb
and
cmp
lock
mov
xchg
mov
push
adc
jl
mov
pop
rol
fidivrs
or
add
enter
mov
arpl
loope
sar
imul
in
fldt
arpl
cmp
sarl
xor
sti
mov
xchg
xor
and
sbb
aas
fwait
jns
xor
add
mov
insl
pop
rorb
in
dec
cwtl
jne
inc
mov
jno
xchg
cli
dec
push
xchg
push
arpl
xlat
mov
inc
xchg
stc
stos
out
fdivrl
pop
inc
and
dec
push
xor
cmp
cwtl
pop
push
jb
dec
push
xchg
repz
adc
cmp
mov
cmpsl
jo
jg
mov
rcrb
adc
mov
xor
jecxz
cltd
cld
mov
or
rorb
and
mov
or
ja
call
test
or
or
cld
mov
xchg
mov
mov
cmc
mov
lahf
pushf
rcrb
sahf
cltd
pushl
cli
cmp
jne
xor
addr16
movsb
pop
pop
fwait
mov
in
pop
sub
add
int
bound
mov
mov
jmp
lds
mov
test
cmp
gs
xchg
sbb
pop
cmpsb
inc
xor
pop
sub
wbinvd
js
aas
jbe
cmp
lret
adc
mov
jge
popf
push
cld
mov
movsb
cmp
cmp
cmp
mov
jno
cmp
andb
dec
push
ljmp
lcall
std
pop
sub
dec
lods
xchg
fxch
add
stc
lahf
loope
arpl
push
dec
xchg
clc
imul
add
mov
ds
scas
add
sub
lock
in
notb
or
ficomps
fisubrl
push
fwait
sub
sbb
in
jecxz
into
mov
xor
mov
mov
repnz
mov
mov
jmp
xor
fsubrs
dec
movsb
inc
jb
adc
pusha
int3
push
arpl
lock
add
adc
mov
sahf
fsubl
sbb
xlat
loopne
sub
jl
jle
mov
popa
pop
xchg
inc
dec
pop
in
lock
or
and
pop
jmp
cwtl
inc
xor
shrb
je
add
fmul
icebp
push
sbb
lret
xchg
test
test
rcrl
cli
sub
lea
adc
xchg
cmp
adc
imul
nop
scas
nop
mov
mov
xchg
jnp
xlat
movsl
nop
fisubrl
in
xchg
stos
add
pop
inc
xor
hlt
mov
pop
mov
jl
fidivs
push
sbb
stos
dec
xchg
xor
push
cmp
shrl
clc
orb
dec
imul
cmpsl
fld
pop
and
jecxz
xor
in
mov
or
dec
lcall
inc
dec
es
push
add
mov
mov
pop
ja
jnp
adc
rcrl
and
iret
inc
jnp
mov
add
mov
fsubrl
fcomps
scas
inc
push
mov
nop
dec
cmp
ss
xor
jno
inc
lcall
push
int
movl
jno
dec
lret
fistl
pusha
outsl
cwtl
les
mov
dec
and
push
add
jp
and
ss
into
jp
and
loop
xor
pop
adc
mov
inc
mov
sarb
mov
jl
xchg
cmpsl
enter
in
imul
popa
outsl
ficoml
fs
arpl
sub
dec
mov
push
idivl
cmp
mov
dec
mov
test
mov
mulb
fdivl
test
xlat
loopne
xor
jge
jp
arpl
in
leave
loopne
push
and
fidivrs
scas
loope
dec
je
and
loopne
inc
out
clc
sbbb
sub
jne
out
ds
ss
pusha
and
addr16
bswap
pushf
jno
sub
sahf
jnp
and
sahf
dec
jmp
pop
aaa
jg
sti
idivl
sbb
mov
push
cmp
push
sub
lahf
and
aaa
sbb
mov
fcomps
mov
sarb
fcompl
mov
ficompl
lcall
lret
repnz
psubq
add
cmp
cmp
insl
xchg
fldlg2
add
cwtl
sub
adc
pop
lahf
mov
jecxz
xchg
xor
xchg
or
push
rclb
ja
sahf
int3
repnz
test
les
and
out
std
in
decl
pop
xlat
mov
adc
icebp
adc
stos
aad
aad
arpl
push
cmp
sub
or
fidivrs
test
sbb
pop
cmp
cmp
fmuls
sbb
mov
cmc
sub
outsb
sub
into
add
popf
mov
jp
outsb
in
faddl
sbb
imul
in
test
xlat
mov
js
popl
sub
mov
lea
pop
test
push
mov
loop
stos
dec
push
cs
adc
mov
test
inc
dec
cmp
add
fistps
lea
je
addl
test
sbb
or
inc
xor
nop
push
gs
jg
aaa
push
sahf
inc
mov
dec
push
repz
jne
mov
pause
and
ds
cmp
in
hlt
lods
xchg
enter
xorb
pop
stos
movsl
ret
clc
stos
mov
sbb
in
sub
mov
xchg
sbb
mov
mov
loopne
jmp
push
int
shlb
pop
fdivl
sbb
push
cmp
andl
xchg
sub
rorb
xlat
pop
jecxz
lahf
repnz
add
add
fbld
insl
xchg
push
sub
inc
adc
xchg
pop
fdivs
ss
jg
lock
shl
adc
xchg
cwtl
mov
aaa
cmp
mov
mov
jge
cli
or
mov
cmp
mov
jge
adc
test
ret
or
sub
and
jns
inc
mov
es
mulb
push
adc
loopne
pop
adc
enter
inc
push
lods
gs
push
andb
call
cmc
dec
leave
mov
inc
insb
shrl
popf
test
stos
hlt
shlb
test
and
mov
xchg
jge
fsubrs
mov
inc
push
jl
xchg
scas
sbb
into
imul
and
xchg
dec
jns
push
or
pusha
mov
mov
mov
jo
shll
cmpsb
adc
sbb
mov
into
insl
repz
dec
add
adc
xor
pop
dec
loopne
call
cltd
sbb
mov
sbb
aaa
mov
ja
cmp
jmp
dec
mov
aad
out
in
dec
mov
dec
popf
pop
frstor
and
mov
std
in
lret
mov
push
add
mov
pusha
fcmovne
push
jmp
insb
add
inc
sbb
xor
shrb
jecxz
or
mov
cmp
or
ljmp
or
enter
icebp
fldenv
push
shrl
sub
jmp
fs
add
push
jb
mov
rol
in
mov
mov
jg
add
sbb
sub
adc
test
loope
jg
mov
sahf
add
ret
call
sbb
fdivrl
cmpsl
cmp
or
push
hlt
lcall
push
out
cmc
das
pop
xchg
je
pushf
stos
cli
push
pop
mov
rcrl
cld
push
imul
mov
dec
test
fs
ss
scas
stc
es
loopne
in
mov
mov
mov
icebp
call
adc
push
test
fimuls
mov
orl
dec
cmp
cli
pop
stos
mov
sub
xor
adc
imul
push
sub
inc
mov
cld
scas
cltd
std
pop
int3
insb
mov
pop
add
mov
dec
sbb
sbbl
les
mov
inc
push
push
pop
arpl
enter
xlat
jp
dec
mov
dec
mov
in
cld
test
call
int3
add
xor
fsubrl
jo
add
mov
mov
hlt
fists
push
sbb
aas
dec
jmp
ret
outsl
dec
push
std
outsl
mov
incb
out
fnstenv
fists
adc
push
pop
mov
mov
jae
pop
jne
aam
sub
sbb
arpl
das
call
sub
push
lret
sub
jns
addr16
inc
jae
pop
cld
out
add
pop
cmp
daa
add
xor
jle
mov
sbb
or
push
inc
lea
xlat
pop
cmp
jp
add
jo
into
jl
cmp
loop
out
adc
mov
daa
in
pop
iret
jge
jp
aam
dec
ret
push
mov
pop
mov
fistpll
add
inc
jo
and
fstl
pop
add
sbb
xchg
push
shrl
or
gs
adc
push
lods
pop
shl
lret
aam
and
jb
pop
into
stos
jecxz
jb
test
fistpll
mov
xlat
xor
xor
pop
adc
push
fldenv
add
mov
out
or
pop
push
cs
aad
push
ror
ret
cmp
pop
fists
or
fsub
out
sub
lret
ds
sarb
sub
xorl
mov
test
adc
into
insb
pop
gs
outsb
cli
cmp
insb
mov
icebp
or
push
orl
gs
and
test
fldl
orps
aaa
pushl
pushf
jmp
cli
lds
adcb
cwtl
jb
mov
js
mov
mov
xchg
enter
jp
dec
popf
lods
mov
lods
in
sbb
js
dec
sbb
stos
leave
out
test
mov
stos
sub
jb
push
decb
mov
imul
push
push
popa
pop
frstor
xchg
xchg
xchg
iret
dec
scas
dec
push
sub
fbstp
xor
mov
xchg
or
test
fsub
cmp
pusha
pop
add
dec
ss
add
enter
pop
aad
inc
ljmp
jmp
jge
fisubrl
rolb
int
mov
daa
shrl
jl
jo
mov
in
xchg
imul
stos
pop
repnz
enter
adc
adc
lahf
ret
icebp
dec
andl
pop
stos
add
faddl
rolb
mov
cmpsb
jbe
cmp
mov
xchg
aaa
pop
imul
xchg
jp
imul
jno
cmp
pop
adc
or
movsb
xor
xor
fcoms
inc
daa
and
and
test
and
rorb
addr16
dec
lock
sub
out
hlt
inc
dec
repnz
in
push
or
fidivl
sahf
jp
rorb
ret
dec
out
sti
adc
lfs
mov
loopne
fwait
pop
repz
stc
add
adc
fcomp
fsubr
mov
xchg
lods
pop
adc
push
in
jecxz
aad
cli
les
in
insl
jge
and
daa
icebp
add
ljmp
jae
lcall
xor
jge
decl
int
rcrl
push
mov
cltd
sub
aaa
and
fildl
cltd
stc
imul
nop
jl
push
xchg
icebp
lahf
add
add
shl
push
mov
ret
movsl
lods
mov
into
in
jbe
aam
movsb
inc
int3
outsb
loop
cmp
outsl
and
arpl
mov
ds
lds
jnp
jo
jl
inc
pop
loopne
or
sbb
pop
push
jmp
mov
sub
fistps
fisubrl
and
nop
addr16
pushf
xchg
xchg
repz
push
sub
jno
and
mov
addb
pop
jo
popa
sub
gs
les
lea
std
call
mov
jae
divl
mov
cmpsb
sub
js
ljmp
dec
add
sub
jo
ljmp
lds
lock
scas
leave
std
xchg
cltd
mov
inc
addb
sub
addl
dec
cmc
into
clc
mov
xchg
stos
je
lahf
push
jne
icebp
das
pop
orb
add
push
inc
jp
adc
or
add
push
aad
cwtl
arpl
cmp
movsb
mov
pop
sbb
jnp
into
mov
pop
adc
std
mov
mov
ljmp
lock
pop
aad
sbb
test
loop
je
xchg
popa
sti
insl
add
cmc
push
mov
in
aad
sahf
or
jb
movsl
mov
jns
add
jle
push
cmp
out
loopne
mov
dec
cmp
xor
popa
inc
cmp
jns
je
hlt
sarl
add
lret
fs
out
sbb
roll
rcr
ficoml
int
pop
xchg
fcomp
pop
in
cmc
sub
imul
cld
lds
xor
int
imul
pop
xor
ja
or
inc
mov
shr
mov
shrb
or
je
nop
or
push
and
jmp
and
pushf
mov
and
cmp
dec
and
adc
inc
xor
mov
mov
and
pop
sub
mov
sbb
lock
push
mov
stos
popf
pop
push
lea
out
shlb
inc
jb
je
push
adc
loop
out
aaa
inc
dec
pop
js
xchg
jle
push
mov
inc
fildll
rcll
mov
add
mov
enter
loope
into
xchg
popf
bound
cltd
stos
outsl
divps
push
and
stc
mov
int3
jle
mov
fcoms
addr16
mov
xchg
add
ds
jle
scas
dec
loop
std
add
das
leave
je
add
lcall
inc
ret
adc
movsb
push
clc
xor
sarl
inc
dec
icebp
cwtl
imul
pop
pop
sbbl
mov
or
popf
lea
cmp
ljmp
pusha
rclb
cmp
add
test
xchg
shll
pop
movsl
and
mov
cld
cmp
cmp
and
insl
cmpsb
sbb
test
mov
cltd
xchg
cmp
adc
push
mov
and
into
and
mov
lret
mov
sbb
cmp
aas
add
pop
fdivl
sub
add
mov
hlt
cmp
popf
mov
push
mov
mov
and
or
adc
nop
sub
dec
sbb
in
xor
jae
lock
clc
imul
scas
sbb
loop
mov
dec
mov
jmp
push
or
loopne
and
mov
add
repz
int
xchg
push
stmxcsr
sub
and
jecxz
pop
adc
pop
sbb
lods
test
jle
push
add
push
fcoms
jecxz
lea
mov
mov
pushf
dec
inc
adc
sbb
roll
popf
jle
lock
xchg
jae
jmp
mov
cmpsb
adc
lock
sub
ss
and
test
mov
lods
lcall
mov
pop
xchg
stos
adc
pop
inc
dec
push
dec
push
inc
sub
cmpsb
andl
adcl
mov
add
jnp
mov
cmpsl
mov
mov
sub
xchg
arpl
in
insb
mov
mov
push
jo
imul
fwait
icebp
int
dec
sbb
addl
add
mov
dec
push
std
sbb
outsl
ret
loopne
mov
mov
in
cmc
nop
or
mov
push
push
inc
or
lret
fadd
je
into
xchg
scas
sbb
rorb
mov
push
xor
cmpsb
lds
xor
call
sbb
dec
mov
jle
jmp
rcl
dec
inc
fcoms
mov
pop
repz
int3
stos
lahf
jbe
mov
mov
mov
mov
lahf
leave
add
pop
mov
cltd
out
stos
sbb
hlt
test
and
adc
mov
cmpl
repnz
ja
addl
cli
add
idivl
mov
jl
mov
jl
xor
movsb
daa
out
bound
cld
cltd
ret
aas
in
xchg
aam
cmp
or
bound
lret
dec
cld
adc
stos
push
mov
int3
mov
cli
sbb
ret
jns
mov
movsl
adc
outsb
xchg
rcll
and
or
cli
movb
pop
mov
cmp
out
test
hlt
mov
stos
xor
lea
dec
aam
cmpsl
mov
and
or
fcmovnbe
movsl
clc
ds
aad
out
lret
mov
pop
mov
jmp
ror
repnz
lea
leave
lahf
push
mov
pop
adc
push
loope
add
sub
sbb
and
sbb
jno
pop
mov
daa
imul
cmc
mov
out
cmp
jo
lds
loope
pop
add
cmpsb
push
shll
jnp
dec
pop
fs
push
andb
add
lahf
xchg
cmp
lea
fnsave
cmc
ljmp
cli
mov
and
iret
jns
fsubrl
pop
jge
add
inc
js
mov
nop
int3
out
clc
mov
jmp
ss
xor
pop
pop
outsl
jg
mov
pusha
je
cmp
inc
add
dec
call
cvtps2pi
cmpsb
cltd
imul
jecxz
adc
cmp
sbb
std
cmpsl
popa
insb
rcll
out
dec
add
leave
sahf
pop
in
lret
mov
pusha
or
pop
dec
pop
xchg
stc
dec
test
sti
mov
and
push
imul
mov
mov
cmp
push
add
daa
clc
sub
stos
add
adc
push
jle
stos
mov
and
adc
or
fimull
adcl
subb
fcoms
jecxz
pushf
xor
push
std
inc
test
cmpsl
aam
aaa
std
cmp
int3
xchg
iret
jno
push
dec
cmp
xchg
xchg
insl
inc
lahf
pushf
cs
cmpsb
mov
xchg
std
cmpsb
jne
and
sub
cmpsl
adc
push
daa
sbb
stos
pop
in
gs
aam
xchg
mov
pop
aas
je
and
mov
faddl
jmp
sub
pop
pop
dec
icebp
cmp
xlat
or
or
sbb
sbb
xchg
mov
pushf
push
fs
inc
neg
and
mov
enter
pusha
mov
jle
add
xlat
mov
fisttps
inc
repz
and
cmp
pop
divl
aaa
pop
push
inc
and
and
mov
xlat
scas
cmp
mov
cli
xor
xor
xor
mov
dec
add
sbb
cmp
mov
pop
xchg
cmpb
fxch
sub
jo
push
std
in
pop
repz
sahf
out
stc
cwtl
cli
and
rclb
and
mov
mov
cmp
dec
shlb
xchg
inc
rclb
bswap
xor
jno
ret
inc
js
mov
cld
loopne
fstpl
adc
scas
jno
insb
mov
add
mov
adc
xchg
pop
mov
inc
pop
mov
aaa
mov
mov
jmp
mov
cltd
lds
inc
sahf
pop
arpl
cmpsb
popa
sub
ss
adc
mov
pusha
mov
push
std
outsb
push
mov
dec
leave
in
jo
cltd
icebp
mov
sti
sub
lret
sub
ljmp
iret
ret
push
movsb
mov
notl
sub
lods
xor
inc
mov
xor
or
test
adcl
ja
es
mov
add
stos
and
int3
xor
sub
jnp
dec
daa
sub
pop
enter
adc
pushf
pop
das
inc
icebp
mov
pop
dec
cmc
fisubs
and
and
or
cmc
xchg
inc
hlt
dec
sbb
xchg
les
xor
int3
xchg
outsb
and
arpl
xchg
addr16
sub
mov
cmc
jne
xor
testl
aad
sub
inc
shll
mov
int
movsl
out
or
loop
loope
cmp
hlt
adc
sbb
add
popa
push
iret
enter
dec
call
and
xchg
fdivrs
test
or
stos
sub
jp
pusha
in
pop
fstpt
inc
arpl
jo
bound
adc
and
mov
popa
xlat
adc
popa
sbb
mov
mov
dec
ss
divb
scas
add
fisubl
jnp
dec
xor
push
xor
jae
cmp
pop
mov
xchg
or
mov
xor
or
xchg
outsb
xchg
test
flds
divb
jecxz
pop
inc
mov
jno
insl
pop
loop
xor
fstps
std
push
mov
push
push
and
mov
test
mov
push
or
mov
data16
mov
popf
fisttpll
xchg
add
out
xchg
push
add
jns
ja
lcall
adc
and
sub
mov
fcmovbe
sbb
mov
mov
scas
or
jnp
pop
inc
in
hlt
cwtl
repnz
jp
call
lcall
stos
push
test
xor
rclb
je
xchg
and
adc
fidivl
sbb
push
add
inc
jg
xchg
jne
lods
push
dec
xor
jg
loop
jecxz
xor
push
mov
std
mov
insl
xor
ja
jb
sar
cmpsb
jo
push
push
mov
sub
push
sbb
cmc
fdivp
pop
xchg
inc
daa
mov
icebp
mov
inc
les
and
push
in
mov
push
push
sbb
xor
push
ds
push
scas
jo
repz
aad
xor
lret
lods
scas
push
roll
add
xchg
scas
xor
lret
notb
push
fs
and
xchg
andb
fdivrs
pop
addr16
fmuls
pushf
cwtl
jg
xor
cmc
mov
cmpsl
loop
sub
or
fmul
lahf
inc
adc
push
xlat
dec
adcl
lods
and
push
test
sub
or
or
fiadds
xor
pop
adc
out
push
cmpsl
jno
andb
fucom
or
sub
jg
pop
xlat
add
sarl
stc
shrl
out
adcl
push
jg
shlb
push
lret
add
in
mov
mov
sbb
ret
mov
sbbb
push
inc
mov
adcb
or
lret
mov
mov
inc
mov
decb
hlt
push
dec
xor
add
pop
imul
xor
jno
xchg
outsl
xor
ljmp
std
repnz
aad
adc
push
gs
int3
in
repz
dec
inc
sub
jb
mov
in
mov
xor
fmul
punpckhbw
lea
out
inc
push
mov
jmp
into
js
es
gs
cld
pop
jecxz
dec
xchg
out
mov
test
sub
sbb
out
add
ret
pop
in
cmpb
pusha
jae
xchg
mov
out
adc
lret
aad
aam
in
shl
sbbl
hlt
sub
mov
sub
mov
push
std
push
xchg
imul
pop
psubw
sub
aas
cmpsb
ret
outsl
int
je
mov
xor
sbb
loope
imul
fdiv
mov
lock
pop
sub
repnz
jge
pop
inc
xor
xor
mov
xchg
icebp
adc
insb
ret
lods
lret
testb
jle
in
pop
jecxz
sti
in
adc
pop
mov
ja
test
mov
flds
dec
jge
sti
xor
pop
lods
inc
push
adc
jne
or
shr
cld
xchg
sti
in
xchg
mov
mov
inc
sbb
clc
lret
movsb
mov
enter
or
jb
ss
mov
lods
mov
icebp
js
test
jo
shrl
addr16
leave
insb
pop
inc
fldenv
ret
hlt
ficoms
push
dec
xchg
nop
mov
jp
inc
lret
cwtl
jae
push
adc
and
fcomip
mov
xchg
add
add
xchg
mov
inc
daa
xchg
jae
sub
lahf
std
mov
cmp
push
ret
insb
sub
push
cmpsb
sbb
imul
inc
out
or
and
xchg
testb
int3
jnp
adc
adc
adc
repz
xchg
cld
loopne
stos
jne
jle
jecxz
aam
xor
cltd
pop
insb
jecxz
add
mov
jge
sbb
add
and
cmp
adc
lds
push
cmp
jne
inc
xchg
or
sub
mov
and
sub
or
jb
cmpsb
or
enter
ss
cmc
jne
fucomip
xchg
cmovns
mov
or
in
cmp
leave
jne
sub
adc
sbb
adc
xor
mov
cvttps2pi
fs
mov
in
dec
cmp
icebp
xchg
xchg
inc
mov
fsubs
add
add
lods
mov
and
push
test
ds
subw
xor
add
mov
inc
sti
in
sub
push
mov
adc
mov
mov
leave
sbb
mov
mov
inc
out
sbbl
cwtl
xchg
nop
xor
mov
lea
shll
subl
adc
in
sti
aad
hlt
data16
jecxz
pop
orl
js
mov
fdivl
repnz
clc
mov
fdivrs
repnz
pop
inc
cmp
pushf
push
mov
loope
div
push
xor
loop
sub
mov
push
mov
adc
adc
aam
sub
scas
dec
push
aad
xchg
mov
mov
in
or
mov
scas
xchg
and
fadds
jae
sub
mov
test
ss
mov
rcrb
mov
fisubrs
sub
push
jmp
xchg
bound
ja
mov
fwait
and
xor
push
loope
cli
inc
std
repz
loope
data16
sbb
ja
adc
xchg
dec
mov
fnsave
daa
push
xchg
dec
xor
fistpl
mov
or
rcll
push
mov
inc
jecxz
iret
xlat
jns
std
shlb
jno
scas
adc
lret
bound
sub
xor
xor
inc
adc
and
xor
mov
testb
in
mov
pop
ja
cmpsb
jecxz
mov
call
subl
addb
fs
psubsw
pushl
ficomps
out
jbe
adc
push
and
data16
pop
mov
mov
xlat
mov
add
das
adc
sbb
dec
jl
cwtl
jne
scas
out
jnp
inc
inc
cld
jb
mov
mov
mov
push
loope
aaa
nop
outsb
adc
pop
rcl
leave
pop
in
jg
mov
cwtl
cli
jmp
adcl
outsb
mov
jns
lds
sub
clc
cmc
iret
stc
push
mov
leave
dec
rorl
inc
loopne
xor
sbb
out
outsb
dec
imul
xchg
int
out
cwtl
pop
nop
sbb
popa
sbb
jg
mov
in
loopne
sub
pop
jge
mov
inc
sbb
and
shlb
cmp
scas
scas
pop
xchg
or
adc
pop
cld
fwait
xchg
les
pop
ret
lds
lret
and
mov
pop
aam
cmpl
xor
andl
jo
data16
push
mov
pop
pop
das
dec
movsl
ja
add
pop
sub
xlat
clc
adc
add
adc
xchg
stos
jno
les
lods
xor
scas
xor
movsl
add
mov
pop
shlb
add
jae
push
pop
dec
fiaddl
js
inc
shlb
mov
inc
adc
xor
xchg
sub
cmpsb
aaa
adc
out
mov
sub
push
cli
sub
popf
orb
ds
hlt
mov
in
scas
push
xchg
outsb
lods
js
xor
sbb
sub
leave
movsl
sub
and
loope
push
mov
scas
nop
push
pop
imul
dec
jno
gs
cmc
mov
icebp
pop
mov
mov
call
rol
and
je
xlat
fsubrl
mov
movsl
mov
mov
gs
into
sbb
xchg
enter
data16
sbb
xor
dec
lods
lcall
xor
mov
add
loop
push
rolb
sub
pop
mov
into
js
pop
sub
shr
inc
xchg
bound
xchg
insb
xor
imul
test
inc
fwait
inc
and
sahf
subl
repnz
jbe
xchg
mov
movsb
pop
pop
xchg
test
jns
leave
cmp
lcall
sbb
cli
mov
cld
xor
sub
pusha
add
mov
outsl
jmp
pushf
inc
sub
mov
test
xchg
xchg
jle
add
and
mov
and
hlt
popf
and
or
add
adcb
ret
jne
mov
or
jg
mov
inc
lcall
cmp
mov
xchg
loope
mul
nop
in
lahf
sub
subl
xchg
out
inc
loope
imul
mov
enter
lods
pop
xor
sti
pop
lods
add
add
aas
lds
sahf
fldt
push
pop
add
cmp
mov
inc
add
mov
fidivrs
dec
leave
scas
add
sbb
out
inc
push
push
inc
loopne
jge
pop
and
and
movsl
dec
mov
mov
mov
mov
add
fisttpll
xor
sbb
insl
loope
mov
mov
push
add
imul
push
add
mov
pminub
loopne
ja
bound
dec
or
or
pop
xor
and
push
mov
lds
cwtl
dec
outsb
stos
pop
faddl
adc
xchg
push
inc
xchg
dec
mov
arpl
xchg
ja
nop
test
inc
sbb
push
mov
pop
repz
push
sarl
sub
mov
nop
outsb
pusha
ja
popf
cs
pop
fimuls
insl
mov
push
adc
into
jg
add
mov
test
mov
xchg
js
lods
mov
lods
ljmp
call
and
mov
lret
incb
out
mov
adc
add
dec
xchg
mov
xor
dec
mov
popf
es
popf
out
cwtl
cmc
sahf
sub
pop
pop
xchg
add
jbe
add
xchg
jle
push
xor
xor
in
and
jg
pushf
adc
hlt
xchg
ret
push
xor
data16
cmp
push
jns
sub
mov
lret
jl
stc
lcall
nop
mov
jp
stos
jecxz
sarl
repz
rcll
sbb
lods
push
sub
jo
sub
pop
mov
stc
sbb
adc
out
jno
push
xor
repz
jecxz
mov
cmpsl
shlb
icebp
sar
insb
adc
lock
outsl
pushw
and
push
pop
adc
std
cli
inc
sub
pop
mov
sbb
pop
mov
cmp
fdivr
cltd
insb
lea
xor
cmp
push
stos
out
insb
fs
test
jge
fsubrl
xor
stc
cltd
jne
js
dec
fbld
fs
sar
mov
pop
or
inc
push
lret
or
sbb
push
dec
or
xlat
dec
sbb
dec
stos
or
cmc
andl
rorl
xor
pop
mov
xchg
shll
imul
lret
xchg
push
das
and
pop
jg
addr16
inc
fistpll
out
inc
outsb
dec
sub
test
aad
stc
add
je
iret
repnz
andl
fisttpll
imul
pop
data16
stc
js
idivl
xchg
mov
fdivr
jl
fidivs
cltd
lea
popa
leave
mov
dec
sub
or
lret
fsubs
scas
or
and
lds
ss
lods
fs
lds
mov
jno
test
movsl
aaa
loope
fstpt
push
or
popw
and
xor
mov
fcomi
xlat
push
mov
daa
mov
mov
sub
aam
das
lock
mov
sub
xor
bound
fwait
fwait
mov
pop
outsb
inc
mov
or
sbb
mov
das
ret
addl
sub
fldcw
pushf
lret
sahf
add
or
pop
popf
test
add
cmp
xor
sbb
push
jnp
lahf
inc
ja
adc
push
pop
or
or
sbb
outsb
xor
in
repnz
fdivrs
pop
cltd
and
hlt
xor
fwait
push
push
cmc
outsb
and
adc
out
xchg
push
xchg
mov
sbb
shlb
pop
mov
nop
inc
sbb
inc
xchg
xor
xchg
mov
mov
dec
lcall
cwtl
daa
or
cmc
cmpl
insb
negl
jo
add
out
lahf
mov
inc
dec
sub
push
xor
out
push
fisubrl
push
jne
cmp
subl
dec
sub
loop
xchg
sbb
lahf
mov
or
aam
sbb
mov
mov
xor
iret
sbb
sbb
jmp
sarb
faddl
push
and
push
cmp
daa
mov
xor
cmp
xchg
xchg
cwtl
insl
fcom
ljmp
std
es
sbb
mov
push
out
stc
ficoms
pusha
mov
fistpl
or
mov
out
lahf
push
cmp
or
adc
pop
lods
jp
fstps
mov
cmpsl
ret
cmpsb
lea
sub
mov
pop
clc
jge,pt
call
mov
cmp
xor
inc
or
sti
mov
in
mov
add
sub
daa
mov
ja
int
xchg
xor
icebp
aam
aam
bound
test
mov
or
add
xor
imul
aaa
pop
popf
cld
rolb
popf
mov
aas
mov
cwtl
mov
adc
mov
imul
adc
movsb
adc
push
pop
mov
dec
mov
negl
sub
push
mov
or
imul
out
rcrb
iret
sbbb
cmc
cmpsl
js
adcb
int
xchg
sub
xchg
inc
mov
jo
ds
jg
and
cmp
mov
pop
aas
jnp
xchg
push
leave
mov
ljmp
fisttps
repz
out
push
inc
repz
jmp
cmp
dec
jg
xor
repnz
or
jo
push
and
adc
fs
jmp
enter
jp
std
or
mov
js
repz
cmp
sbb
mov
sub
push
ret
push
addr16
push
sub
sbb
jnp
pop
cli
jle
mov
mov
push
rcrb
movsl
out
add
inc
mov
ret
xor
jne
test
pop
cmp
movsl
aam
inc
sub
or
and
mov
shlb
inc
push
jmp
ret
pushw
cli
add
in
fstl
loop
jecxz
pop
int
in
ret
xchg
pop
test
push
mov
add
shl
loop
gs
add
or
push
fisttpl
and
adc
in
iret
sti
cmpsb
je
mov
mov
fisttps
add
mov
mov
aaa
cwtl
mov
mov
and
repz
lds
xor
leave
lret
add
psubq
daa
adc
mov
or
sub
lods
movsb
mov
dec
xor
sahf
iret
pop
xchg
adc
pop
add
les
mov
inc
or
sti
pop
or
es
lods
xchg
push
sbb
push
movsb
mov
ret
pop
lahf
push
inc
ljmp
imul
outsb
mov
cmp
pop
cmp
pop
xor
nop
roll
imul
push
fdivrs
mov
lds
ficompl
xchg
mov
in
xchg
sar
mov
mov
push
stos
lea
into
gs
and
mov
dec
inc
lds
mov
and
fisubrl
pushf
repnz
loop
or
sbb
or
das
mov
cld
icebp
cmp
jno
jnp
sub
dec
outsb
inc
dec
test
imull
jp
adcb
test
nop
das
dec
push
inc
stc
pop
and
fsubrl
push
stos
mov
dec
mov
in
push
jg
aaa
cmp
push
xchg
das
cltd
std
mov
loope
pop
mov
fisubl
ljmp
adc
cmp
lods
adc
mov
dec
adc
adc
ficompl
out
xchg
mov
repnz
inc
iretw
sbb
lea
cmp
inc
mov
fsubs
je
xchg
cwtl
test
int3
mov
mov
cmp
ja
jmp
mov
hlt
adcb
mov
add
cmp
mov
mov
add
leave
mov
push
jne
mov
gs
lods
cld
fsub
mov
cmp
sahf
fs
fsts
or
cmp
xor
cli
inc
cmp
cmpsb
jp
and
cmp
or
push
stos
add
fstpt
xlat
jg
stc
push
lock
inc
roll
out
xor
scas
mov
ffree
imul
adc
scas
sbb
fistpl
fstps
pop
or
sub
stos
shrl
fisubrl
arpl
daa
pop
adc
mov
stc
jge
dec
mov
push
xor
xor
outsb
in
and
cmp
je
lea
mov
mov
or
lret
inc
mov
cmpsl
leave
and
adc
and
fmull
jmp
and
xor
adc
fcmovne
pop
mov
xor
mov
cli
imul
xor
lea
xor
ljmp
inc
data16
enter
stos
inc
lahf
add
test
inc
mov
push
mov
mov
outsl
out
shrb
and
mov
hlt
cmp
test
add
pop
lahf
mull
xchg
cwtl
insb
dec
jae
ljmp
pop
out
mov
hlt
fucom
cmpb
addr16
cli
aas
xor
call
xchg
pusha
cmp
sub
xor
adc
cmc
pop
xchg
enter
ljmp
and
dec
mov
cmp
xchg
mov
rclb
mov
fsts
mov
pop
sti
in
dec
mov
fcoml
cmpb
xchg
mov
sub
mov
test
pop
cli
cmp
mov
adc
imul
pop
jnp
sub
mov
or
arpl
inc
dec
popf
inc
ljmp
fcmovnbe
dec
sub
or
mov
and
pop
sub
and
ficoml
push
inc
pusha
inc
repnz
outsl
cmp
jmp
mov
shl
sub
and
mov
arpl
std
add
daa
xchg
mov
dec
imul
xchg
lahf
aad
in
movsb
xor
jae
ss
iret
mov
dec
xchg
fldenv
mov
dec
mov
jo
cmp
test
sbb
test
xchg
lcall
mov
or
add
fs
les
sub
sbb
call
dec
jbe
push
mov
lods
int3
fwait
mov
test
cmp
lret
push
add
lods
jle
dec
shll
aas
scas
lret
into
xor
jecxz
fbld
popf
sti
cmc
xor
mov
pushf
xchg
adc
mov
cmovns
js
movsl
lea
lds
vpmullw
sbb
pusha
sbb
mov
scas
jge
adc
xchg
cwtl
jg
movsb
mov
mov
xchg
ret
cli
push
test
clc
jmp
inc
or
dec
mov
cmp
mov
into
push
mov
repz
push
add
mov
adc
mov
in
imul
lods
push
inc
mov
xor
add
sti
dec
add
inc
pop
icebp
mov
pop
daa
mov
inc
int3
idiv
in
mov
or
push
jl
insb
nop
daa
push
mov
fs
jle
dec
fimuls
dec
daa
mov
sbb
cltd
jmp
jle
adc
dec
push
mov
lods
jbe
test
push
mov
or
pop
dec
or
xchg
fwait
jne
iret
pop
cmp
mov
sbb
lods
mov
enter
or
push
notb
jge
push
mov
adc
add
cld
imulb
push
lahf
ficompl
mov
sbb
loop
es
inc
xor
repnz
sub
or
push
fildll
imul
fnsave
test
xchg
les
push
test
xchg
dec
incl
rorl
xchg
and
xchg
pop
hlt
aas
xchg
add
aad
adc
loope
cld
or
dec
fisttpll
and
outsb
xchg
xor
jl
aam
pop
pop
jg
dec
jae
xchg
fildl
in
push
call
sahf
aaa
xor
push
orl
add
xor
cmp
or
jo
ss
test
or
out
fsubrp
je
adc
movzbl
lcall
mov
and
push
mov
or
mov
in
mov
mov
cmp
cmp
subb
or
fwait
imul
sbb
andl
clc
push
lock
xlat
add
push
pop
mov
movsb
push
cmp
icebp
add
fmul
mov
lock
std
mov
sbb
gs
xor
shrb
cmp
push
xchg
packssdw
or
mov
test
in
ljmp
lret
mov
mov
xchg
imul
pusha
pop
ret
pop
mov
insb
adc
or
lahf
or
dec
or
out
mov
ljmp
rcll
pop
inc
and
or
mov
int
sub
daa
loop
fsubl
jecxz
jp
and
dec
sarb
adc
mov
vfixupimmsd
fs
mov
lret
inc
fildll
adc
mov
popa
mov
push
sub
div
or
jo
dec
jge
mov
iret
push
rclb
pushl
fdivrp
repnz
jmp
je
pop
lcall
inc
pushf
and
ljmp
mov
fsubrs
sbb
pusha
dec
jb
enter
hlt
add
idivl
lret
fsincos
fidivs
mov
mov
or
ret
adc
xchg
imul
mov
rcrb
out
ret
xchg
xor
push
mov
into
stos
jecxz
aas
mov
adc
repnz
popf
imul
sahf
pop
jle
push
test
push
nop
mov
inc
mov
adc
push
push
lods
mov
out
adc
inc
loopne
test
pop
decl
and
jae
push
sub
shll
cmp
insb
iret
lods
jae
add
cmp
jmp
or
dec
jne
pushf
add
cmp
push
push
rorl
adc
psraw
mov
daa
and
js
mov
lods
dec
test
mov
jmp
negb
adc
jle
mov
leave
lds
cmpsl
push
int
mov
xchg
pop
jg
cmp
fwait
mov
repnz
sti
adc
gs
popf
or
dec
add
sub
ficoml
pop
imul
icebp
xchg
mov
hlt
xchg
out
arpl
dec
mov
pop
leave
loopne
imul
lods
mov
call
mov
fs
push
jge
inc
mov
dec
jns
mov
xor
iret
xchg
fstpt
pop
data16
adc
push
pop
out
movsl
mov
shrb
push
xlat
mov
jb
mov
cli
lods
jle,pn
adc
imul
pop
call
ds
inc
dec
push
or
iret
rclb
or
jbe
mov
movsb
jo
pop
mov
cmp
sub
xchg
sti
jo
ljmp
cmp
mov
xchg
sub
scas
add
sbb
jmp
lret
or
jbe
dec
mov
dec
jmp
ret
in
scas
pop
mov
outsl
mulb
or
mov
lcall
les
data16
cmp
sub
adc
clc
rcrl
out
insb
or
cmp
cmp
jle
stos
jmp
stos
shlb
inc
push
push
mov
nop
and
xchg
cmp
adc
mov
cmp
out
sub
pop
aad
push
xchg
cltd
int3
mov
popf
and
ffree
sti
push
add
out
jp
sub
data16
mov
adc
or
je
std
imul
sub
in
mov
loope
push
or
push
iret
mov
out
and
out
and
out
xchg
leave
add
jle
cmp
fucomip
push
xlat
outsb
xchg
jae
rorb
sub
mov
push
jno
test
or
jle
popa
bound
sbb
dec
insl
mov
jecxz
cltd
pop
jns
insb
mov
push
cmp
in
jnp
in
jnp
dec
add
and
jns
cltd
dec
aas
add
repz
mov
xchg
sbb
lods
xchg
ret
jg
and
sbb
cld
ficoms
iret
fcmove
loopne
or
dec
lahf
cli
rolb
aas
nop
xlat
fcoml
dec
mov
lret
pop
aas
or
clc
iret
and
stos
addr16
and
cmp
sub
shrl
cmp
pop
cltd
inc
test
mov
test
cwtl
insl
jle
rcrb
or
loop
popl
jecxz
rcrb
dec
cs
das
push
xor
incb
aad
push
addr16
iret
mov
adc
adc
mov
test
pop
movsl
rcll
adc
scas
sbb
push
sub
repnz
mov
sub
push
jae
dec
fdivr
rolb
cli
adc
aad
add
icebp
das
subl
test
jno
add
sub
call
inc
jnp
dec
adc
mov
cmc
jb
fwait
lods
fwait
aas
mov
and
sub
data16
mov
lods
add
sbb
call
out
sbb
sub
xor
ds
cmp
mov
adc
mov
or
mov
xor
mov
xchg
addr16
adc
mov
ret
test
mov
mov
cmp
jp
test
push
mov
or
xchg
mov
push
into
andl
cmpl
jl
insl
mov
leave
lcall
int3
cli
mov
jnp
fisubrs
lods
in
mov
in
stos
dec
arpl
shl
pop
dec
out
pop
xchg
jnp
fcoml
jle
popf
adc
sub
iret
repz
sti
pop
cmpsb
xchg
mov
icebp
mov
sub
cli
mov
pop
add
stos
cmp
mov
jno
push
inc
lds
fs
cmpl
xchg
push
fwait
aaa
int
mov
mov
pop
nop
cli
fwait
imul
sarb
int3
lret
mov
or
lds
inc
popa
in
pop
or
enter
rcrl
inc
mov
daa
out
out
repnz
cmpb
mov
ret
into
lret
inc
insl
sbb
nop
xchg
xchg
inc
mov
int3
mov
or
pop
cli
adc
adc
repz
mov
cmp
ja
lret
mov
dec
and
incb
pop
int
je
pop
outsb
dec
test
pop
add
xchg
mov
fcompl
mov
mov
and
xlat
xchg
nop
xor
and
out
int3
or
shl
loop
xchg
out
popf
lds
and
inc
lahf
outsb
jnp
add
mov
push
push
sub
sub
mov
mov
jg
mov
arpl
daa
mov
subl
scas
pop
mov
xchg
fistpll
and
add
jp
jp
mov
jns
push
mov
bound
out
add
into
ss
ficompl
push
mov
mov
pop
adc
mov
cmpsl
mov
add
bound
jl
cmove
sbb
or
dec
jmp
roll
jge
inc
pop
xor
ss
sahf
mov
add
sbb
arpl
and
jbe
xor
into
scas
push
je
jecxz
movhps
pusha
dec
jecxz
dec
sahf
not
or
xchg
inc
dec
pop
into
out
repnz
jge
call
cs
cmpsl
imul
test
jnp
cmpsl
mov
scas
adc
inc
jne
xor
ja
jp
mov
fimull
and
shr
fs
jg
stos
cmpsl
fisubrs
xchg
sbb
mov
testl
jne
jge
clc
cld
mov
dec
cmp
xchg
xchg
jmp
mov
mov
pop
lds
es
cmpb
cmp
pop
aam
mov
dec
loope
jno
and
jns
ficoml
popa
mov
repz
scas
mov
push
adc
cmpsb
fnstsw
sub
mov
jne
push
loopne
scas
fmul
insb
pusha
in
test
jae
jmp
lea
rcr
xchg
and
pop
add
repnz
sub
pop
pop
loope
mov
and
lds
rcl
push
sub
jae
cwtd
push
push
out
iret
outsl
adc
pop
push
xchg
mov
cs
sub
dec
or
add
push
out
shlb
mov
pop
mov
aad
inc
mov
push
push
xorl
sub
pop
roll
sub
add
es
jnp
mov
jbe
fsubr
outsb
sub
std
xchg
mov
add
bndldx
and
adc
xlat
inc
incl
sbb
das
cmp
push
or
sub
mov
shl
pushl
popa
dec
mov
sub
fdivrl
dec
xor
xchg
mov
push
adc
out
and
popa
sub
leave
push
sub
in
fdivl
out
and
and
xor
lods
out
sub
stos
ret
cmp
pop
dec
loope
sbb
dec
push
mov
cmpsb
adc
roll
cmpsl
loop
outsl
mov
jp
cli
xlat
rcrb
lea
fcmovnu
add
cmc
mov
pop
add
aam
mov
and
js
gs
fs
fdivl
bound
pop
jno
pop
xor
lods
xlat
aad
xchg
cmp
cltd
xchg
inc
inc
sub
xor
nop
prefetchw
mov
fdivrl
xchg
push
mov
cmpsb
push
mov
mov
lcall
std
push
outsb
push
bound
cli
out
adc
fdivs
pop
push
adcl
dec
xchg
mov
push
add
mov
test
bound
cmp
pop
ja
mov
out
mov
in
xchg
dec
mov
mov
jae
cmpsl
push
cs
fs
ljmp
outsb
shlb
push
cmp
mov
cltd
lock
pop
sahf
nop
xor
mov
mov
sbb
push
sub
add
xchg
adc
jle
mov
out
xor
push
and
out
cmpsl
mov
call
pop
push
bnd
or
or
std
mov
xchg
jl
outsb
inc
mov
dec
outsl
aad
adc
mov
cli
jbe
or
inc
inc
add
int3
cmp
test
fsubs
dec
es
bound
or
out
or
mov
sbb
jb
fsubrs
cli
pop
adc
loopne
mov
dec
je
imul
test
add
adc
jle
cmc
mov
dec
xlat
cmpsl
jle
les
lods
nop
bts
add
lret
jl
aaa
xor
xor
xor
cltd
int3
adc
mov
sub
adc
push
movsb
pushf
jmp
loope
lds
sbb
in
dec
ljmp
mov
xlat
jns
negb
mov
stos
fiaddl
loopne
push
iret
subb
imul
sahf
scas
xor
mov
xchg
imul
cmpsl
lret
inc
hlt
arpl
or
std
fsubl
shll
dec
inc
fsub
ret
mov
mov
cmpsl
push
ds
rcll
dec
xchg
sbb
dec
mov
jmp
in
mov
aas
arpl
arpl
cmp
xchg
inc
add
jle
xor
fs
call
insl
jmp
dec
add
cmpsb
jmp
bound
lahf
inc
add
lds
adc
or
shl
je
hlt
add
subb
mov
add
in
cltd
push
sub
push
fstl
push
fdivrs
ret
inc
jl
push
pop
xor
and
test
pop
mov
adc
mov
test
fstps
xor
stc
dec
xchg
push
test
dec
call
call
je
mov
mov
cwtl
out
loop
hlt
call
push
jmp
out
mov
imul
add
decl
shrb
sbb
mov
imulb
popa
mov
test
xchg
xchg
add
add
daa
pusha
mov
rdpmc
push
and
cmp
add
fildll
stos
jb
xchg
mov
mov
or
jmp
pop
push
xlat
dec
out
test
sbb
outsl
pusha
cli
pop
mov
adc
jmp
pop
push
mov
fdivrl
out
aam
add
push
mov
repz
daa
dec
xchg
mov
jmp
test
rorl
dec
push
ficoml
aam
mov
xchg
and
lods
in
cs
inc
clc
movsb
test
mov
ret
in
nop
ljmp
and
sti
ja
mov
pop
scas
shlb
jo
movsb
sti
jns
xchg
dec
adc
cmp
inc
cmp
sub
dec
andl
mov
add
enter
add
xchg
jle
popa
scas
mov
dec
jbe
push
push
and
and
sub
xchg
mov
adcl
mov
mov
add
inc
jns
cmpsb
mov
inc
repnz
pop
int
pop
je
cmp
mov
addr16
ja
jecxz
loopne
add
sub
xchg
scas
or
dec
test
mov
mov
pop
cli
add
test
aaa
loope
adc
outsb
inc
ja
add
sbb
xor
jb
pop
inc
inc
mov
sbb
adc
mov
push
cwtl
stos
pop
test
push
xchg
dec
cmp
mov
fidivs
out
dec
and
xchg
xchg
mov
mov
push
hlt
insb
or
mov
hlt
cmp
pop
and
jmp
roll
mov
addr16
dec
in
sbb
int
add
push
mov
push
inc
clc
out
push
adcb
xchg
cmpsb
xchg
mov
mov
stc
pop
test
dec
mov
pop
push
sbbb
aas
je
dec
sbb
xchg
mov
pop
fisttps
into
inc
push
fwait
xchg
adc
pop
shlb
movsl
js
xlat
inc
icebp
mov
add
xchg
push
sub
sti
lods
xchg
push
cmp
test
pop
data16
scas
decl
es
sbbb
jecxz
enter
push
or
mov
lahf
xchg
push
xchg
loope
es
orl
xor
mov
push
popf
push
fs
jne
jo
jge
lea
adc
les
push
in
pop
subl
sbb
hlt
mov
jns
imul
jge
mov
cmc
sub
or
or
call
pushf
pop
imul
mov
out
dec
xorl
add
ja
xor
inc
insl
cld
xor
xchg
xchg
mov
jne
add
jmp
and
mov
xchg
push
movsb
loop
dec
xor
stos
scas
mov
xor
jns
mov
push
cs
clc
cmpsl
lcall
pop
mov
push
jecxz
imul
cwtl
xchg
dec
sbb
adc
mov
data16
push
mov
notb
fstpl
dec
cmpsb
mov
mov
dec
dec
jae
mov
xchg
mov
bnd
daa
sti
jle
push
cmp
xchg
lahf
jg
addr16
xlat
jb
inc
and
jmp
test
mov
jge
mov
ret
push
inc
test
sti
addr16
add
dec
call
push
out
cmpsl
sahf
fst
test
pushl
and
pop
cmp
dec
lock
enter
jmp
pop
jne
or
nop
int
scas
aas
inc
and
and
xor
imul
mov
pusha
jge
lods
mov
daa
stos
sarl
fidivrs
sbb
sahf
cmp
mov
lds
sbb
sbb
and
adc
jl
or
pmaddwd
les
jge
stos
adc
pop
pop
mov
jl
shlb
repz
mov
add
test
push
xor
repnz
add
pushf
cmp
xchg
outsb
cmp
or
fcompl
inc
dec
fnstcw
aad
aaa
dec
mov
add
aas
hlt
and
das
sbb
or
lea
jle
fists
mov
xchg
dec
sar
xor
inc
sub
xor
sarl
ljmp
or
out
add
shl
cmp
mov
fmuls
or
or
adc
sub
fdivs
ljmp
dec
ret
orl
or
pop
insl
adc
pushf
leave
push
loope
push
xchg
leave
scas
jg
je
outsl
imul
mov
in
xchg
test
push
mov
jae
adc
orl
sahf
push
cmp
push
pop
cli
movsb
adc
sbb
mov
das
fwait
push
aad
lret
cmp
pop
insl
or
call
mov
xchg
fbld
insl
in
lds
cmp
pop
cmp
dec
push
cmp
jo
jmp
mov
addb
jnp
mov
ja
int3
imul
dec
add
or
and
and
stos
dec
insl
xchg
data16
jp
xor
daa
inc
xor
mov
cmp
je
imul
dec
inc
cltd
sub
scas
sub
clc
jnp
in
mov
or
add
jne
pop
lahf
ja
mov
inc
mov
cmp
std
inc
cwtl
into
mov
int
add
lcall
or
mov
pop
adc
sub
jo
outsl
call
jnp
les
std
jne
dec
lcall
jp
call
cmpsl
push
sti
pop
sbb
sbb
inc
cmp
adc
pop
cmp
pop
shrl
jae
dec
pusha
adc
loop
mov
mov
dec
fs
jno
outsb
xor
flds
dec
lock
mov
and
repz
bound
notl
xor
scas
and
int
push
pop
mov
mov
js
lret
orb
mov
push
movl
and
hlt
and
and
dec
lock
push
xor
cwtl
lods
imul
aas
lock
dec
fsubrs
inc
jae
sub
add
mov
push
inc
fstl
std
push
arpl
mov
cmpsl
jle
pop
jnp
dec
test
push
push
jnp
aas
test
pushf
sub
aas
inc
arpl
fs
fiadds
or
mov
mov
movsl
mov
loope
lds
popa
pop
inc
mov
pushf
cwtl
rep
mov
mov
daa
enter
cmp
mov
lock
or
jle
insl
cmp
dec
fcmove
xor
mov
mov
xor
xlat
leave
ud0
jnp
cmp
fldt
sub
movsl
rorl
rcrb
lahf
movsl
or
push
into
loop
or
int3
fwait
sbb
int3
mov
adcb
and
add
gs
sbb
and
fsubs
popa
and
mov
jo
sub
sbb
mov
push
mov
aad
sahf
mov
test
dec
orl
pushf
inc
lret
pop
xchg
aas
subb
ret
inc
push
scas
fadds
cbtw
inc
setge
outsb
loope
dec
jp
dec
inc
inc
xchg
mov
pop
daa
xchg
shl
and
jno
cwtl
rclb
push
mov
or
mov
clc
cmp
pop
in
ficoms
mov
lds
cs
sub
sbb
mov
fwait
jns
xor
popf
jge
fistl
cmpsl
xchg
dec
cwtl
clc
imul
imul
mov
movsb
push
adc
iret
mov
sbb
jge
neg
addb
mov
in
data16
and
adc
pop
dec
push
das
xor
inc
cmp
jo
and
cmp
stos
xchg
bound
xchg
pop
inc
insl
pop
cwtl
mov
sti
push
repz
iret
mov
inc
aaa
dec
popa
cmp
addr16
jg,pt
fiaddl
aaa
orb
stos
aaa
push
outsb
sti
divb
mov
js
pop
pop
push
push
mov
mov
push
pop
ja
pop
cmp
arpl
das
mov
mov
mov
js
cmp
sub
stos
xor
pop
add
or
repz
sbb
pusha
xchg
in
xchg
fxrstor
stc
inc
xchg
aaa
nop
arpl
scas
mov
orb
clc
inc
movb
xlat
inc
daa
test
pop
mov
jecxz
mov
ffreep
jge
dec
pop
pop
call
xor
lea
popf
inc
mov
xor
divb
adc
or
ljmp
insb
call
lods
les
sbb
mov
push
negb
push
lds
sbb
pushf
fimuls
movsb
outsl
fnstenv
js
xor
stc
jp
pusha
in
fmuls
aaa
adc
mov
xchg
push
fcomps
xchg
push
jne
push
std
aam
mov
adc
inc
cmp
ret
dec
cmc
xchg
sub
fwait
and
add
pusha
outsl
roll
leave
mov
lods
daa
shl
ror
adcb
xchg
dec
rorb
jmp
pop
aaa
jmp
mov
cli
add
add
pop
roll
jns
cmpl
cmp
jnp
test
sbb
jno
add
cltd
inc
and
lds
push
mov
dec
popf
mov
adc
hlt
mov
pushf
mov
ret
mov
xchg
aad
imull
rcr
sbb
jg
sarl
add
sub
push
jp
mov
bnd
pop
mov
dec
mov
mov
cltd
test
fdivrl
jb
mov
popa
andl
cmp
movsb
push
cli
xchg
push
jmp
fstps
sub
mov
push
sub
call
sub
fsub
pop
fnstsw
movsb
xchg
push
aad
push
cs
push
in
sbb
aas
and
mov
push
shlb
jns
push
mov
jne
test
es
out
bound
xchg
out
insb
ljmp
mov
mov
lret
push
repnz
ret
aam
cltd
mov
inc
mov
inc
and
xor
leave
je
mov
orb
dec
adc
xchg
or
xchg
adc
push
push
jns
add
out
call
and
mov
mov
sub
pop
jb
dec
jbe
push
mov
notb
test
outsb
stc
aas
inc
mov
ljmp
lods
das
and
adc
out
or
dec
int3
fs
mov
lret
dec
fcmovnu
das
jbe
or
mov
popa
repnz
in
lock
iret
sbb
push
jno
sub
addb
and
ret
or
mov
or
jne
add
sbb
fstpl
fwait
les
jae
mov
hlt
outsl
fisubrs
in
and
bound
mov
ss
pop
dec
ds
mov
daa
loopne
xchg
mov
hlt
popf
push
dec
jnp
lods
xchg
imul
and
sbb
imul
subb
push
cmp
ficoml
adc
xchg
les
sub
repz
jb
in
xor
and
stc
xor
dec
lcall
aam
lods
ret
or
cmp
jmp
movsl
push
sbb
mov
call
test
xchg
mov
andl
fsubrp
pop
flds
dec
stc
mov
mov
xlat
outsb
xchg
pop
sub
lcall
cmp
push
inc
xor
inc
nop
imul
xorb
repnz
inc
mov
sub
idivb
pop
adc
add
addb
incl
sub
test
dec
cs
cld
loopne
andl
mull
mov
fwait
push
cmp
fxch
in
jno
cltd
mov
and
pop
sbb
pop
fdivl
out
push
insl
add
mov
stc
in
andl
jmp
lods
insb
aaa
cmpsb
lods
aas
or
adc
mov
js
aam
push
adc
std
and
jmp
lods
pop
push
dec
push
ret
mov
lods
inc
iret
cltd
sbb
lods
shll
iret
popl
pop
aaa
test
lods
adc
cmpsb
pop
faddp
pop
sub
divb
inc
jns
jo
mov
dec
sahf
push
lods
cld
inc
hlt
cs
mov
jg
dec
sub
idiv
adc
inc
sub
es
and
insb
xchg
fwait
add
out
cmp
mov
mov
in
aam
popa
ja
or
fisubrl
xchg
dec
push
inc
xchg
daa
fidivrl
pop
lahf
push
fisubrs
push
aam
jle
test
or
dec
dec
push
in
sbb
mov
sbb
outsb
cmpsl
pop
cmp
dec
imulb
sub
cmpsl
or
int
lahf
push
dec
mov
psubq
cmp
ss
fcompl
mov
sbb
jg
hlt
es
or
and
jns
pop
sub
xlat
outsl
add
sub
pusha
or
out
sub
and
jp
decl
pusha
repz
loope
dec
fisubrl
into
mov
push
pop
sbb
pop
hlt
push
mov
lods
cmpsl
inc
cmp
in
or
inc
push
and
out
jmp
sub
xor
test
pop
cmp
push
popf
add
cmp
mov
out
imul
sub
dec
rorb
xor
enter
ret
push
xor
popf
dec
xchg
xor
mov
rcrl
repz
jmp
jp
inc
lea
and
out
dec
sti
jno
pop
or
mov
popf
pusha
lret
dec
xor
xchg
mov
cmpxchg
sbb
mov
mov
add
pusha
jge
mov
cmc
push
mov
movsb
mov
xchg
jnp
pop
adc
insl
fwait
xchg
bound
les
mov
lcall
and
mov
sbb
inc
sti
xlat
ficoms
push
loop
jbe
testb
leave
mov
fdiv
and
sbb
inc
dec
subb
test
addr16
mov
sub
fmull
xchg
mov
inc
xor
cmp
jne
leave
bound
mov
sub
cmpsl
mov
push
ja
dec
in
imul
ret
insl
popf
xor
sbb
loope
ret
clc
cmpsb
add
stos
mov
mov
jne
daa
xchg
pop
xchg
lahf
sarl
inc
gs
mov
test
mov
shr
xchg
daa
adc
shrl
test
add
jle
xor
sti
rcrl
jne
js
lea
out
dec
cltd
pop
iret
dec
shll
mov
gs
fisubs
add
test
mov
pushf
mov
mov
pop
adc
pushf
jne
pop
out
fsubrp
incl
das
test
mov
out
mov
ja
test
scas
push
pop
int
mov
inc
sub
cmp
aaa
sbb
jmp
inc
repnz
or
pop
outsl
jne
mov
push
adc
mov
adc
push
adc
jecxz
jle
jnp
faddp
inc
js,pt
enter
jp
fwait
mov
lea
pop
repz
movhps
gs
mov
lahf
cmpsl
inc
jae
add
or
xor
mov
movsl
shll
jnp
push
inc
shll
cwtl
add
cltd
jbe
sub
fisubs
ret
arpl
mov
sub
jns
cmp
cli
dec
mov
leave
cld
test
cmc
leave
xor
js
cmp
popa
and
and
leave
leave
in
insl
test
std
sub
cmc
mov
dec
and
je
ja
or
out
sbb
hlt
and
pop
or
add
daa
jecxz
and
lea
xor
lcall
add
push
or
sub
add
hlt
pushf
inc
iret
sub
pop
xorl
and
fdivl
dec
mov
aad
push
popf
aad
test
jo
add
outsl
cmp
sub
mov
sbb
test
sbb
jo
mov
insb
pop
loope
mov
xchg
adc
data16
orl
cmc
xchg
mov
js
test
xchg
mov
mov
or
jno
clc
enter
xorb
cli
iret
lds
test
xor
sbb
xlat
sbb
jl
test
sbbb
ljmp
lret
imul
adc
out
mov
cld
dec
cli
push
pushf
dec
rcrb
ja
cmc
push
inc
movsb
in
xchg
jmp
and
sti
jg
out
cmpl
cli
addr16
insb
jge
xchg
inc
cmc
xchg
enter
jle
push
ret
icebp
cmc
mov
dec
insb
xor
pop
and
rcll
stos
and
dec
or
stc
mov
arpl
pop
and
scas
or
sub
pop
jp
mov
test
mov
mov
adc
outsb
cmpsl
cmpsl
arpl
sub
testl
sub
xor
pop
dec
pop
push
scas
shlb
lret
pop
cli
adc
out
int
out
jmp
mov
mov
je
or
xor
loop
das
scas
mov
nop
and
lock
xor
xlat
js
or
push
mov
jge
add
aaa
cmpsl
sub
mov
xchg
jmp
pusha
into
fldt
and
shr
addl
xor
arpl
fstpl
arpl
lcall
pop
push
addr16
mov
jns
or
test
scas
dec
cmp
enter
mov
push
clc
out
sti
popf
out
mov
mov
cwtl
pop
sbb
mov
cmpsb
test
cli
rolb
push
fcoms
cmp
int
sub
or
insl
adc
mov
jmp
inc
out
cmp
js
movq
or
xchg
aas
stos
iret
push
xor
je
mov
add
fimull
add
insb
das
adcb
daa
call
sub
sub
pop
dec
das
xor
fidivs
movsb
jnp
cmp
sub
lock
shll
dec
fwait
cmp
in
addr16
inc
mov
mov
xlat
cwtl
jmp
ds
ret
lret
nop
rcrb
add
jmp
mull
or
adc
stos
inc
dec
shr
test
popa
lods
imul
ret
test
movsb
dec
push
iretw
jnp
out
loop
iret
popf
add
popa
shll
jbe
pop
jnp
and
pop
popa
subl
xchg
cmp
xchg
testb
clc
das
mov
mov
imul
dec
scas
adc
lret
jmp
dec
mov
ret
dec
add
imul
sbb
xorl
out
xchg
int3
push
cmp
in
sbb
xor
testl
enter
insl
fs
xchg
fbld
sbb
push
mov
adc
shr
sub
jge
js
dec
dec
dec
dec
jmp
push
addr16
out
push
ljmp
iret
cwtl
scas
mov
cld
adc
out
rcrl
fs
xchg
aad
mov
int3
aam
outsb
movsl
std
inc
xchg
pop
lret
loopne
jl
or
xlat
call
cmp
or
adc
and
adc
pusha
shlb
es
jge
das
push
in
stos
mov
add
int3
arpl
cld
xchg
ljmp
loope
add
pop
jmp
push
xchg
cmp
mov
or
nop
mov
mov
test
fcompl
jp
or
sti
jecxz
das
imul
ja
shr
mov
fucomp
inc
mov
inc
and
lea
jmp
adc
dec
mov
rcrb
and
pop
sbb
mov
js
pop
xchg
cmp
dec
outsb
in
stc
cli
sub
fimull
test
add
xchg
insb
int3
scas
mov
xor
ds
or
or
dec
ss
mov
stos
push
lods
mov
sub
dec
push
aaa
sub
dec
pop
and
jp
sbb
dec
loope
xor
pop
andb
jo
dec
sbbl
lahf
in
mov
pop
call
lahf
and
inc
lret
and
fwait
mov
mov
and
test
imul
xchg
push
dec
orb
iret
jno
aas
enter
dec
or
and
push
pop
ja
loopne
pop
cmpsl
add
adc
or
dec
andnps
or
sub
jnp
dec
sbb
xor
mov
mov
leave
and
insb
pushf
sti
ret
subl
mov
in
add
aaa
cli
icebp
push
js
xchg
and
push
cmp
test
lock
inc
xchg
jp
push
repz
sub
decb
or
aaa
out
cmp
or
dec
decl
dec
and
sti
jge
loop
outsb
jo
pop
or
movsl
inc
repz
in
int3
or
jb
data16
fisubrl
repz
dec
hlt
cli
mov
jmp
mov
icebp
test
lret
dec
mov
mov
jle
dec
cmpsb
jbe
add
sub
and
nop
mov
addr16
ja
adc
xor
xchg
pushf
testl
cmpsb
cs
push
adc
leave
icebp
pop
out
sbb
popa
add
shrb
ret
mov
cmc
sbb
fwait
xor
mov
in
add
repz
clc
mov
stc
loopne
push
aam
mov
cmp
jge
jo
push
sub
inc
call
es
jmp
push
cli
sbb
or
in
mov
sub
lret
push
stos
add
push
add
jle
popf
fcmovnu
out
adc
inc
dec
jle
lret
pusha
mov
xor
mov
adc
and
push
jp
and
push
fists
or
fldenv
scas
pop
icebp
aad
mov
adc
popf
xor
inc
bnd
stos
bound
add
inc
lret
jne
mov
pop
cltd
push
jnp
push
imul
jno
jge
pop
rdpmc
mov
lea
adc
sub
mov
lret
mov
dec
clc
jbe
call
mov
stos
fadds
sbb
fwait
test
mov
outsb
adc
stc
jb
pushf
aas
pop
jns
mov
xor
repz
mov
push
daa
mov
and
push
int
scas
jmp
adc
shr
sbbl
jno
dec
pop
push
or
popf
cmp
sti
idivb
loop
rolb
cmp
mov
js
gs
xor
ret
mov
lds
imul
and
sbb
jmp
cld
push
in
push
or
shrb
push
pop
ljmp
mov
outsb
in
or
mov
inc
std
mov
lret
insb
hlt
jmp
mov
inc
sub
mov
push
sub
push
ror
rcl
mov
mov
mov
adc
lahf
scas
leave
rcrl
hlt
imul
fwait
aaa
in
dec
adc
push
dec
ljmp
les
push
fucomip
scas
ret
jmp
mov
push
pop
loope
leave
sbb
mov
push
inc
push
js
add
es
mov
cli
adc
loope
stc
mov
and
cmp
mov
jecxz
xchg
in
add
mov
jb
xor
or
sti
stc
jle
push
scas
push
pop
nop
mov
jb
fdivr
jb
pop
imul
ljmp
mov
aad
insl
addr16
and
fsubrs
in
fxam
aas
xor
dec
inc
fsubrl
dec
dec
xor
dec
mov
ljmp
push
ja
shlb
icebp
dec
loope
jns
push
cmpsb
jge
xor
stos
es
stc
push
pop
pop
out
in
enter
subl
pushl
sbb
push
adc
fwait
sahf
fcoml
into
out
xchg
cmp
pop
push
clc
push
or
or
cmp
test
fmuls
xor
dec
mov
pop
jbe
fsubrl
and
pusha
push
in
xor
cmpl
adc
cmpsb
xor
cltd
jb
insb
cmp
test
cmp
adc
cmp
popf
cmp
pop
sarb
fists
into
jg
in
mov
cmpsl
pop
iret
sarb
xchg
fisubl
mov
mov
gs
shl
add
imul
mov
and
arpl
jne
sbb
pop
je
add
adc
inc
sub
mov
xor
imul
pop
lcall
push
call
or
cmpsb
lahf
shll
orl
and
mov
out
xor
outsb
jne
or
nop
stos
pop
fisubrs
sub
cmp
cmc
scas
xor
push
cmpsb
dec
push
lods
out
out
adc
ja
add
dec
lret
jbe
or
leave
pop
add
lods
fs
xchg
push
ds
hlt
nop
mov
xchg
sti
and
xor
test
and
btr
repz
pop
js
out
add
lret
sub
or
mov
repz
cs
cwtl
fidivrs
sub
test
in
outsb
std
je
ljmp
jo
and
sbb
bound
enter
lcall
xchg
and
inc
popf
xchg
cwtl
mov
int3
lcall
xchg
sbb
mov
cwtl
dec
sbb
sbb
outsb
pop
addr16
outsl
add
or
pop
aas
imull
mov
mov
sub
sbb
cmpsl
push
mov
test
adc
xchg
shrb
test
push
mov
push
mov
inc
repnz
fadds
mov
int3
movsb
xchg
inc
ljmp
out
pushf
push
popa
sbb
sub
js
lods
aad
lahf
aam
addr16
jo,pn
mov
hlt
dec
in
xchg
push
shl
sbb
mov
pop
cmp
fisttps
jmp
xor
or
loope
mulb
mov
je,pn
repz
repz
cwtl
fldenv
stc
mov
push
shll
mov
add
add
inc
mov
insb
push
xchg
in
fidivrs
cmp
hlt
mov
sub
dec
dec
ficoms
xor
in
sub
shr
insb
sub
jecxz
mov
xchg
dec
xchg
pushf
iret
push
test
leave
xorl
loop
cli
dec
mov
scas
mov
sub
scas
inc
xlat
push
mov
or
sbb
mov
shr
or
scas
sar
mov
pop
xchg
add
push
jb
rcrb
sub
lahf
dec
lods
sbb
pop
mov
mov
lahf
int
adc
fldenv
mov
loop
pmaxub
jecxz
add
jns
sbbb
jae
cwtl
rorb
jo
jl
dec
sub
cltd
and
dec
out
ss
or
push
out
sub
cs
sbb
jmp
mov
push
addb
out
jbe
and
xchg
std
cmp
sbb
add
or
ljmp
or
xchg
mov
icebp
cli
add
test
sub
addb
lds
mov
push
xchg
in
inc
loope
mov
inc
ja
jb
ret
add
lcall
ljmp
imul
or
add
adc
push
jne
daa
mov
jg
sub
xchg
lods
cltd
fildll
pop
scas
sbb
sbb
das
and
pop
jns
xor
ficoms
mov
mov
int
subl
cmp
inc
ret
jno
and
push
shl
testl
dec
scas
ficomps
mov
or
int3
adc
mov
xor
xor
out
test
loop
dec
or
jae
xor
hlt
sbb
sub
shr
pushf
cmp
test
cmp
clc
or
jl
call
push
inc
popf
dec
lcall
aad
cmp
scas
xor
jg
test
js
decl
sarl
jne
shlb
sarb
cmp
push
pop
into
cmc
bound
pop
shlb
mov
sahf
hlt
js
loope
insb
loope
jnp
cltd
add
cmpsb
clc
inc
pop
or
push
xchg
mov
fstpt
push
jmp
sarb
cs
mov
adcl
add
add
cmp
cmp
mov
add
stos
out
aaa
mov
shlb
fcmovbe
mov
adc
pop
mov
xchg
jle
xor
sti
inc
fstpl
arpl
push
test
ljmp
mov
dec
cmp
xlat
pop
and
insb
mov
and
xchg
and
jno
call
push
ljmp
push
bound
sbb
ror
leave
sahf
push
aaa
loopne
push
rcr
mov
idiv
fisubrs
ljmp
jae
lret
test
mov
xor
loop
mov
lahf
imul
adc
cwtl
inc
sub
pop
es
xor
shlb
mov
jmp
adc
mov
fwait
or
or
jo
adc
and
add
ljmp
mov
inc
xchg
inc
popa
push
jne
shl
sub
xor
xchg
dec
cwtl
or
sbb
and
mov
ds
push
inc
jae
push
pop
sub
outsl
rorb
cmp
test
sub
pop
out
rcr
adc
sub
mov
insl
loope
push
enter
or
mov
or
std
js
xlat
push
mov
push
inc
fucom
imul
and
movsl
adc
lret
sahf
push
rol
fstl
inc
cmp
or
rcrb
or
rcr
mov
stos
push
addr16
popf
adc
mov
dec
cmc
dec
lcall
jle
insb
aam
rclb
and
sahf
fldl
inc
mov
rcr
lea
inc
adc
xchg
test
pop
jp
jae
pop
in
fdivrl
test
test
divl
ficomps
and
and
hlt
aas
and
call
and
fs
ret
mov
push
in
mov
enter
cmc
sbb
xorb
fistl
imul
outsl
roll
call
lea
jo
fmulp
fcomi
aas
jge
jmp
jae
or
inc
or
gs
lahf
lret
ret
push
icebp
mov
int
in
and
xchg
ficomps
pop
aaa
xchg
popf
mov
or
push
inc
test
mov
outsb
jl
pop
fsubrs
loopne
cmp
xchg
mull
int
push
lds
out
es
push
test
push
in
test
jo
mov
icebp
inc
lds
sbb
inc
test
neg
inc
test
fcmovne
mov
dec
dec
xchg
nop
jmp
cmp
cmp
xor
or
into
mov
ds
jl
out
shll
mov
add
clc
xor
pushf
out
jge
shrb
lahf
mov
sahf
das
and
mov
ljmp
or
mov
inc
xchg
cmp
aad
aam
ds
testb
int3
jno
xor
and
adc
mov
cwtl
jmp
mov
testb
adc
pop
sbb
push
clc
add
inc
xor
push
sub
mov
mov
xor
mov
outsl
cmc
mov
dec
jl
push
bound
shll
ret
and
mov
xor
fisubrs
test
sub
sub
adc
bound
inc
cmp
outsb
mov
push
ds
jmp
jg
adc
pop
mov
stos
mov
aas
xorb
loope
sub
lock
mov
repnz
sti
mov
xor
push
and
inc
push
push
push
xchg
cmp
sti
and
imull
icebp
les
cmp
movl
jb
test
into
test
stos
and
sahf
sarb
dec
dec
sub
xchg
stc
outsb
fisttpl
jns
jmp
insb
sub
cmp
mov
lds
loop
sub
cs
mov
push
jo
inc
xchg
sub
mov
mov
outsb
mov
out
mov
stos
xchg
les
jg
mov
xor
mov
dec
xlat
sbbl
mov
fisttpl
subl
ret
sarb
aam
lcall
aam
dec
arpl
rclb
call
cmpsb
cmpsl
daa
mov
adc
ret
inc
push
ljmp
pop
scas
std
or
cld
adc
push
xchg
sarl
bound
xchg
into
or
and
mov
shlb
cmp
iret
pop
mov
adc
inc
pop
xchg
popf
dec
push
adc
fs
mov
and
sub
mov
or
mov
mov
jmp
and
cwtl
jle
les
notb
pop
jo
fidivrs
xchg
pop
ret
in
cmp
inc
mov
aam
sub
sub
insb
xchg
push
lret
cld
loopne
sub
pop
xlat
loopne
iret
cmp
addr16
pop
sub
and
jecxz
xlat
pop
test
sub
pop
and
ja
iret
test
mov
repnz
mov
sbb
pop
pusha
test
jle
xchg
or
lods
in
mov
adc
movsb
inc
or
adc
xchg
fsubs
xchg
inc
in
cmove
and
into
xor
cwtl
loop
outsl
aam
imul
gs
mov
out
ds
jge
sbb
pop
es
adc
xchg
lahf
sub
pushf
jae
sahf
and
repz
xorb
mov
fstps
push
es
insb
nop
xor
inc
inc
fwait
or
nop
mov
cltd
jbe
xchg
jns
lods
ficompl
imul
je
adc
das
cmp
inc
orl
rorl
xor
out
jno
addr16
cli
cmp
jo
mov
notl
fcomi
cwtl
dec
imul
xorb
mov
xchg
push
and
ljmp
aas
xor
and
pop
fsubs
push
jge
push
lcall
ljmp
lods
mov
mov
out
dec
cmp
add
mov
les
cld
jb
jnp
mov
lahf
xor
jb
dec
frstor
inc
test
sub
xchg
ficoms
pop
je
sbb
pop
sti
dec
cmp
lods
sub
aaa
fdivrl
jg
cwtl
inc
mov
or
inc
inc
mov
dec
or
gs
bound
cmc
xor
inc
pop
loope
mov
outsb
xchg
and
fisubrl
ljmp
icebp
xchg
hlt
inc
xor
or
mov
xchg
xchg
lcall
pop
inc
sbb
mov
nop
xchg
add
es
xchg
pop
sbb
ret
mov
in
sub
cmc
sub
push
mov
xor
adc
and
hlt
popf
pop
or
dec
xchg
and
insl
add
add
xchg
inc
lds
rcll
sub
adc
movsl
push
mov
iret
movd
xor
cli
xor
pop
xor
xchg
test
dec
sub
xchg
push
in
dec
pop
adc
add
cmp
stos
sub
lret
dec
inc
cli
or
adc
test
stos
enter
rcr
lret
xor
sbb
jl
or
stos
and
loope
adc
pop
pop
out
mov
sti
add
push
fisubrs
xor
jmp
repz
mov
sbb
sbb
sbb
leave
push
pop
scas
std
sub
lcall
and
xlat
mov
sbb
jne,pn
int
pop
jp
mov
jbe
xor
xor
mov
cmpl
aad
iret
push
sub
mov
cmc
sbb
sub
popa
dec
add
ret
int
ljmp
rclb
aad
mov
scas
imul
lods
jmp
pop
mov
outsl
and
pop
icebp
mov
aas
mov
or
out
fldl
mull
jg
and
xor
ret
adc
cmc
fisttpll
inc
mov
das
cmp
or
mov
add
jecxz
movsl
add
push
pop
xchg
cmp
aaa
jle
dec
pop
ja
xchg
pop
mov
and
imul
jp
dec
inc
jo
clc
aas
jle
push
lea
add
and
pusha
into
aaa
stos
scas
xor
loopne
pop
stos
shrb
popf
cmpsb
mov
mov
pushf
out
gs
pop
pmullw
cmp
xchg
or
add
mov
bound
add
dec
out
hlt
test
cmp
pushl
cmp
in
mov
mov
jmp
enter
fbld
xchg
fs
or
data16
mov
mov
push
stos
in
paddb
fs
jg
and
push
push
cmp
mov
sbb
and
iret
cmp
leave
lods
cli
movsb
std
lret
add
and
insl
std
sub
jnp
fildl
lea
inc
std
and
adc
repnz
int
stc
adc
ds
movsl
imul
dec
lods
mov
fst
and
stos
in
sub
push
mov
sbb
out
push
dec
test
cmp
icebp
adc
stos
rorb
out
js
inc
ror
fiaddl
sub
mov
push
gs
jns
pop
bound
or
cmp
adc
add
dec
pop
sbb
fbld
out
inc
add
cmp
scas
scas
int
lret
lds
adc
inc
scas
rolb
mov
or
xchg
and
mull
sbb
lock
add
or
sbb
rcl
data16
add
stos
in
add
jle
adc
or
bound
and
andl
sbb
stos
sbb
fisubl
xchg
push
test
pushf
fistpl
fnsave
out
lods
ljmp
mov
dec
fidivrl
inc
cld
nop
pop
cmpsl
mov
out
pop
mov
test
dec
xchg
call
and
ja
jp
popa
inc
loope
xchg
or
mov
mull
frstor
ljmp
aad
bound
adc
push
adc
pop
mov
push
ficomps
rclb
add
sub
adc
xor
movsl
xchg
mov
pop
and
iret
mov
jo
pop
pop
not
notl
popf
sub
adc
jle
out
dec
pop
outsb
xor
addr16
ljmp
nop
sub
clc
sub
bound
pop
pop
lcall
push
mov
nop
push
jmp
mov
or
push
jg
xorl
inc
xchg
in
mov
xchg
mov
nop
mov
or
cs
shll
loop
xor
mov
mov
rcrb
xchg
inc
xor
sbb
and
mov
int
out
lcall
sbb
mov
test
xor
cwtl
rclb
mov
aaa
stos
loop
and
and
lock
push
ds
les
and
xchg
lea
ror
xchg
ret
and
mov
lcall
sub
inc
jae
out
shll
dec
jmp
mov
testl
les
in
adc
in
loopne
or
mov
jne
int3
fwait
jmp
mov
mov
mov
out
fstps
or
adc
aad
lahf
mov
stc
push
popa
adc
fistl
dec
and
pop
inc
fcoml
enter
lods
sbb
stos
or
push
xchg
adc
sub
mov
gs
xor
inc
jp
and
imul
cmpsb
sub
xor
sub
dec
test
repnz
jbe
sbb
or
xchg
mov
movsb
pop
pushf
fwait
insb
cmp
push
mov
pop
xchg
adc
orl
movsl
xchg
fs
cwtl
dec
loop
fsubrl
insb
cli
ja
loop
jl
not
rcr
push
inc
out
bt
fsts
loop
jno
mov
fwait
push
push
call
push
mov
sbb
sub
or
mov
clc
fisttpl
popf
ljmp
insb
stc
dec
movsl
cmpsl
aad
in
test
pop
je
jno
adc
sbb
mov
es
lcall
aam
fstcw
push
adc
mov
addr16
lea
fwait
in
cmpsb
mov
push
pop
mov
or
adc
mov
das
lods
and
mov
push
lcall
dec
inc
arpl
dec
push
xchg
cmp
pusha
ss
pop
adc
lcall
test
lcall
push
mov
sbb
or
push
push
mov
roll
dec
cltd
push
xchg
stc
jbe
push
sbb
aaa
sub
pusha
outsb
jns
popa
fiadds
pop
and
mov
pop
stos
and
push
outsl
fcomi
pop
xor
fcmovb
cltd
dec
push
fwait
or
cmp
xor
movsb
fdivrl
mov
dec
test
outsb
cmp
je
aam
jne
jecxz
mov
ljmp
sbb
pop
inc
dec
mov
imul
dec
pop
in
pushf
lea
fidivl
mov
cld
cs
xchg
imul
push
sub
mov
xor
xchg
adc
dec
std
dec
pop
pushf
xchg
and
mov
imul
jecxz
dec
scas
or
jbe
or
fcmovbe
push
mov
outsl
sub
mov
xchg
out
mov
repnz
and
push
cmpsl
sbb
clc
mov
mov
shlb
xor
test
cmp
push
dec
cmpsl
cld
leave
lea
fisttpll
cli
cmp
popf
dec
inc
jmp
fidivrl
sub
xchg
mov
decl
sbb
pusha
push
sbb
stos
push
popf
xlat
push
lods
mov
bound
pop
leave
push
mov
sub
mov
ficomps
add
xor
les
ja
or
xchg
push
ret
mov
std
sub
jp
adc
lock
out
pop
sub
hlt
inc
push
or
push
mov
pop
mov
sahf
sbb
ffree
inc
lods
jecxz
inc
sub
stos
movsb
nop
dec
pop
push
rorl
aaa
es
aaa
mov
pop
mov
lods
sub
call
setne
sbb
push
dec
in
aaa
scas
inc
xor
dec
xor
loopne
shll
popa
int
lods
in
sub
pop
pmullw
ret
test
push
fisubrs
xchg
push
aad
push
mov
out
cs
xor
push
or
mov
movsl
cs
xor
mov
jo
inc
out
aas
jecxz
add
mov
fiaddl
push
outsl
and
mov
dec
lods
add
std
fs
and
sub
ja
daa
aam
xor
cmp
mov
cmp
ja
mov
fldl2t
sarl
adc
or
add
imul
mov
push
hlt
add
into
and
jge
subb
inc
xchg
aam
xchg
clc
jo
xchg
stos
push
lret
mov
movsb
sub
aam
xor
add
sbb
imulb
xchg
add
mov
lods
and
or
mov
insb
popa
mov
xor
or
pop
je
and
add
cwtl
push
mov
lahf
and
cmp
mov
xchg
ss
pusha
aas
enter
stc
xor
mov
dec
jmp
adc
sbb
mov
cs
push
pusha
adc
sub
lea
cli
scas
das
sets
push
fs
scas
iret
mov
test
jns
test
cmpsb
scas
xchg
cmp
mov
xchg
in
gs
insb
data16
adc
fs
lret
mov
movsl
xor
pusha
sbb
mov
fiaddl
xchg
or
xorb
rorb
loopne
test
mov
pop
lahf
dec
in
jg
adc
add
adc
gs
xchg
cli
lret
movsl
jb
pop
pop
idiv
mov
testb
cmp
cmp
xlat
or
push
sub
jge
mov
mov
inc
jb
ret
lret
push
lods
xchg
outsl
ja
cltd
cmp
aam
sbb
xchg
stos
push
cmp
or
arpl
or
cmc
lret
mov
hlt
dec
sbb
cli
lock
cmpl
cmp
shll
lea
sub
cld
mov
sbb
movsl
mov
mov
lea
adc
sbb
psubsw
jg
inc
fldcw
push
ficoms
or
xor
mov
mov
jmp
stos
mov
dec
jp
lods
xor
insl
or
jp
sub
cmp
adc
cld
mov
ret
insb
and
xor
push
std
jne
sub
and
je
xor
inc
cld
sub
ja
adc
sar
aam
xchg
stc
pop
xchg
mov
pop
imul
mov
insl
mov
pop
push
xchg
or
pop
jge
add
xchg
mov
hlt
or
push
or
xchg
pop
ffree
popa
hlt
dec
and
and
pop
mov
rol
or
push
or
xchg
mov
shll
add
mov
xchg
jne
mov
or
pop
popf
sbb
adc
pop
pop
push
dec
leave
or
nop
xchg
pop
xchg
jns
add
mov
cmpsl
jne
push
xchg
pop
dec
cmp
mov
arpl
adc
mov
imul
jl
ror
mov
in
jp
cmpsl
inc
nop
xchg
out
jmp
adcb
stos
dec
aam
mov
sbb
sti
fbstp
mov
subl
push
jb
lret
jecxz
xor
fcmovu
pop
dec
fdivrs
fcmove
popf
das
cmc
or
sbb
insl
out
push
mov
xchg
roll
inc
cltd
insb
xchg
pop
adc
push
inc
sub
loope
fsubrl
inc
mov
and
mov
xor
fs
cwtl
mov
jmp
adc
std
pop
adc
into
xchg
inc
add
sbb
or
je
dec
sub
mov
loope
and
mov
dec
add
dec
mov
flds
ror
imul
or
sarl
mov
jno
cmp
or
imul
lods
into
inc
add
mov
sbb
cmp
xchg
mov
add
hlt
pop
loopne
inc
mov
push
jp
jmp
push
jb
cmp
mov
xlat
lock
leave
cmp
cmp
int
fnstenv
jns
leave
adc
mov
push
add
pushf
jb
call
rcll
sbb
cli
stos
iret
dec
outsl
adc
or
pop
adc
icebp
sbb
into
and
lea
lret
pusha
or
and
data16
mov
sbb
andl
mov
mov
mov
fwait
xor
dec
mov
and
sbb
sub
ret
or
ljmp
pop
jns
or
mov
mov
stos
sub
jle
fisubrs
mov
mov
loope
adc
jo
clc
dec
sub
repnz
push
fstps
mov
mov
divl
pop
mov
dec
sbb
mull
std
sub
in
mov
fsubl
mov
and
sbb
and
nop
jns
in
push
inc
mov
sbb
inc
add
imul
xchg
cmp
lahf
and
mov
pusha
nop
das
xadd
add
push
loopne
popf
int3
into
xchg
mov
sbbl
mov
adc
and
ret
shl
cmp
cltd
jo
pop
mov
lret
cmp
lret
mov
pop
pop
mov
adc
inc
in
dec
and
scas
call
lods
push
bound
cli
cmp
loopne
cmp
sub
mov
jmp
mov
xchg
arpl
repnz
and
add
lods
int3
insb
mov
jne
outsl
jge
pop
loopne
fsubl
sub
sbb
inc
in
xchg
push
pusha
mov
cs
insl
jns
dec
cli
mov
mov
mov
aam
jne
xchg
sub
arpl
jecxz
and
push
loope
call
xchg
sub
test
into
fs
fs
pushf
mov
xchg
ret
xor
cmpsl
mov
sbb
adc
mov
std
adc
pop
push
or
pop
mov
pop
sub
lods
xor
adc
loope
push
rclb
fdivp
addr16
ja
jle
lcall
int
adc
cmp
xor
add
mov
pop
mov
mov
mov
iret
adc
ds
mov
in
scas
pushf
mov
ret
outsl
movsb
mov
add
pop
add
dec
icebp
and
fstpl
int3
lods
jg
cmp
mov
loope
xchg
dec
repz
mov
iret
lods
lock
xor
push
repz
addr16
add
fwait
jmp
movswl
xchg
leave
sbb
push
mov
jmp
xorl
arpl
into
pushf
adc
add
add
icebp
andb
mov
inc
fs
test
testb
pop
mov
mov
and
jns
test
imul
inc
aad
mov
jno
cmpsl
mov
and
dec
stc
xchg
inc
cli
xor
pop
cmpsl
mov
inc
xchg
addr16
or
pop
sbb
cltd
cmc
stos
xchg
mov
or
ret
adc
imul
fstpt
or
lods
push
imul
cs
pop
push
mov
shrb
ret
fsubs
neg
dec
clc
jae
hlt
pop
lock
rclb
sbb
push
js
lock
lret
xor
mov
stc
sub
mov
inc
push
fstl
sbb
jmp
inc
mov
jl
lods
fnstenv
push
mov
adc
int3
sub
in
jno
repz
push
orl
push
adc
inc
xor
xchg
and
inc
xchg
test
xchg
xorb
lock
test
mov
dec
inc
xchg
cmc
cmpsb
shl
int
push
test
pusha
jno
jb
and
mov
testb
inc
dec
cltd
jg
imul
inc
stos
push
jmp
xor
mov
js
lods
sbb
dec
push
push
adc
mov
int3
leave
xor
adcb
shrb
fldt
mov
jb
inc
in
out
lds
push
jge
pop
mov
movsb
or
inc
pusha
nop
fisttpl
ds
mov
mov
jae
mov
ret
dec
jno
xchg
inc
in
out
pop
and
xchg
enter
mov
xchg
arpl
inc
sbb
xchg
or
out
into
adc
ljmp
pop
cmp
inc
and
shl
cld
xchg
xchg
lret
xor
shll
jecxz
shl
cwtl
lret
in
add
inc
idivl
xor
test
test
sbb
and
dec
mov
jp
jle
fdivrs
push
in
add
stos
sarl
test
xchg
cmp
or
mov
inc
cmpsb
push
sub
in
pop
mov
mov
jne
scas
or
in
xchg
cs
xor
test
lods
call
xchg
mov
dec
jge
push
lods
sbb
lods
push
cmpsb
mov
pop
cmp
enter
addb
into
cmpsb
scas
dec
cmp
jae
xchg
fcomps
in
jbe
aas
xor
hlt
push
sbb
mov
add
scas
sbb
subb
mov
add
mov
stos
xchg
or
xchg
call
mov
rcrb
mov
mov
lret
imul
sbb
lods
cmpxchg
sub
mov
cmp
and
mov
imul
out
xor
push
and
arpl
xchg
arpl
jmp
or
xchg
hlt
xchg
fistpl
jmp
jno
add
int
push
pushf
leave
insb
push
negb
dec
push
mov
mov
or
ja
add
stos
adc
lods
inc
out
lretw
xor
sub
call
dec
out
fs
and
sti
jp
pusha
popa
jmp
and
mov
dec
mov
mov
xor
out
cs
jmp
xor
xor
out
xor
pop
int
subl
scas
or
sub
pop
les
mov
rorb
adc
mov
push
fsubrs
pop
ret
ljmp
repz
cmp
jg
arpl
mov
inc
outsl
jmp
jo
pushfw
div
scas
lods
scas
fcmove
test
das
popf
jbe
cmp
or
push
cli
jno
push
int
adc
cwtl
mov
lds
push
pop
nop
jae
mov
popa
sbb
popf
inc
jg
xor
inc
mov
push
popf
mov
mov
in
cltd
lock
mov
and
sti
push
jcxz
and
adc
cmp
fistpll
in
lcall
pop
fdivrl
sub
ss
xchg
movsl
fidivs
movsl
push
cltd
mov
jne
sub
shrb
sub
les
fstpl
inc
lcall
lcall
test
ja
es
xchg
push
mov
jmp
lock
jnp
add
dec
leave
out
and
repnz
mov
movntq
add
inc
je
and
cltd
push
fsubs
or
sbb
sbb
popf
lahf
ljmp
in
adc
notl
test
fcoml
das
fcmovne
mov
inc
out
mov
mov
mov
iret
push
add
stos
sahf
insb
push
jmp
mov
adc
sarb
sbbl
cltd
and
mov
xchg
lock
cmpsl
xchg
fmull
xor
adc
cmp
mov
cld
cmp
push
ds
mov
xchg
push
enter
or
push
fwait
repnz
add
scas
ljmp
jl
fadd
pop
adc
inc
adc
std
add
push
pushf
push
adc
push
rcll
popa
sub
jmp
cmp
jmp
fwait
sbb
adc
outsl
sbb
out
push
sarb
jl
add
fs
push
outsl
into
dec
mov
popa
pop
cmp
in
negb
std
xor
int
rolb
ja
shll
test
mov
or
fs
sub
adc
push
cmp
jo
lahf
and
sub
jbe
out
mov
lea
xchg
pop
adc
test
mov
xor
or
push
loope
jl
je
addr16
cld
mov
lock
aas
ficomps
mov
scas
inc
mov
inc
sbb
xor
push
je
dec
cld
push
lcall
add
mov
test
xor
or
loopne
dec
jns
andl
inc
pop
call
mov
stos
jecxz
sahf
mov
inc
pop
inc
xchg
xor
xchg
push
ja
cmp
bound
push
bswap
mov
shll
cmp
daa
lret
adc
xchg
popf
mov
push
cmpsl
mov
ret
mov
je
cwtl
cltd
scas
cmpsl
mov
and
negl
jnp
in
insb
or
sub
mov
fsub
cmp
dec
dec
adc
repnz
cmovno
sahf
or
mov
pop
and
movl
jnp
sbb
enter
xchg
stos
mov
mov
aam
jns
daa
js
mov
inc
xchg
loope
pop
fildl
aas
dec
repz
push
jno
adc
mov
aad
sahf
or
fdivrs
push
scas
outsb
daa
jb
insl
lods
push
push
cmp
xchg
inc
mov
push
data16
dec
lret
jns
xchg
mov
loopne
pop
adc
cmp
sbb
das
gs
pushf
sub
sti
inc
cwtl
add
shr
mov
loop
sub
jle
inc
dec
or
adc
jno
inc
mov
rcr
addr16
dec
rol
les
mov
mov
push
andb
cmp
dec
insb
jne
std
nop
rcrb
icebp
mov
out
into
jge
jno
xor
xor
negl
jmp
sarb
add
lret
subb
enter
adc
cmc
test
cld
push
push
in
jle
add
pusha
test
into
or
js
lods
call
icebp
in
js
xor
or
decl
lds
sbb
cmpsl
or
mov
stos
inc
mov
sub
in
fimull
and
jge
inc
pusha
jo
cmp
fidivrs
xchg
int
push
lods
mov
and
or
adc
sbb
pop
lret
or
cltd
sbb
pushl
outsb
inc
out
rol
sahf
lret
in
sub
stos
push
roll
push
outsb
push
stos
jnp
jae
xchg
sub
aaa
test
inc
adc
mov
cmp
ret
fsts
jo
notl
and
ret
vmread
push
fadds
lds
inc
or
pop
adc
inc
stos
inc
sbb
call
and
aas
pop
pop
mov
cmp
es
sqrtps
fadd
lahf
xchg
jge
inc
test
sahf
mov
repnz
jb
inc
mov
jecxz
lcall
call
cmpsl
std
adc
in
scas
movsl
adcb
mov
push
push
cmpsb
rorl
jmp
test
jno
jno
inc
mov
pushw
jbe
inc
inc
adc
fadds
sub
xlat
sbb
or
addr16
jno
jne
daa
xchg
ds
dec
or
lods
push
sahf
icebp
aam
cs
jmp
fs
jae
mov
cltd
negb
jp
mov
jae
pop
sbb
mov
testb
sub
jbe
mov
aad
lcall
mov
push
and
aaa
mov
je
repz
inc
es
dec
pop
js
stos
jl
aas
inc
cmp
push
int
dec
leave
movsb
pop
nop
mov
inc
cs
jp
pop
and
hlt
pop
ret
pusha
out
adc
xor
inc
mov
int
push
roll
movsl
inc
xchg
inc
sub
xor
jmp
shlb
ja
orb
outsl
sub
ljmp
stc
mov
jp
xchg
cmp
jo
jp
adc
ds
mov
adc
pop
push
fsts
outsl
add
pushw
adc
xchg
sub
jno
inc
outsl
dec
loop
pop
pop
cmp
pop
sarb
aas
xor
adc
jl
sti
and
xchg
add
pop
neg
mov
inc
mov
inc
insl
sbb
mov
jnp
sarb
inc
pop
cmp
aad
and
fnsave
cmp
mov
fwait
mov
scas
xor
inc
fildl
xchg
in
jbe
inc
xchg
out
dec
xlat
xlat
dec
sub
loope
mov
sub
dec
out
fwait
inc
jmp
fwait
in
pop
jb
repz
out
push
fisubrl
mov
cltd
cmp
sbb
loopne
sahf
add
adc
mov
pop
mov
in
xchg
mov
or
mov
enter
test
xchg
out
fwait
pop
or
in
jecxz
pop
push
jmp
ret
jmp
mull
mov
mov
mov
mov
nop
sub
jns
incl
pop
sbb
add
repnz
cmp
rcrb
mov
repnz
jl
rol
mov
mov
shlb
mov
push
ds
adc
cld
dec
pop
push
test
lods
dec
cwtl
cmpsl
push
fsubs
test
cmpsb
push
cmc
cmp
push
or
imul
mov
adc
sub
fisubrs
jle
jmp
mov
lret
mov
cmp
mov
jne
inc
cwtl
stos
sbb
cmp
jecxz
xchg
and
dec
out
or
into
mov
adc
pop
mov
xchg
sarl
lret
push
push
scas
xchg
cmpsb
loop
pop
sbb
dec
dec
dec
test
es
push
insb
xor
mov
add
fwait
out
push
mov
orl
stos
mov
lods
cmp
adc
xchg
mov
mov
std
cmp
or
daa
pop
dec
rcrb
cmp
clc
and
xor
repz
jns
loopne
imul
mov
int
repnz
push
aaa
jns
xor
mov
adcb
dec
lahf
mov
push
sbb
mov
cmp
xchg
and
push
inc
sarb
inc
insb
call
js
cmp
adc
ljmp
sahf
sub
insl
jns
inc
in
xchg
inc
push
nop
fnstcw
or
and
dec
dec
fcomps
adc
push
mov
fidivrl
cltd
aas
stos
ret
ja
cmc
dec
stos
mov
sbb
add
cs
jne
stos
int
lods
cwtl
inc
test
test
or
fistpll
ffree
sub
xchg
in
mov
or
lahf
jp
addl
daa
fdivrs
adc
fmull
jmp
and
mov
add
ss
or
mov
cmp
in
insb
xchg
bound
int3
add
mov
nop
les
scas
cmp
ret
jns,pn
xor
mov
xorb
insl
cmpb
xor
or
dec
xor
leave
rclb
fnstcw
sub
xchg
mov
ret
loope
lahf
jle
nop
rcll
lock
dec
xlat
gs
jl
or
imul
fildll
sbb
fsubrp
cmp
cs
mov
xchg
sbb
lahf
hlt
imul
outsl
call
mov
mov
push
jo
in
add
sub
pop
or
pushf
mov
dec
jg
xor
and
mov
shlb
ljmp
jmp
jle
mov
sbb
das
xor
cmp
popf
jp
push
test
outsl
fidivl
xchg
notl
popl
sbb
ss
mov
cmpsb
xlat
push
out
repz
adc
call
testb
mov
lods
inc
mov
pop
push
or
stos
and
mov
or
in
sbb
aam
mov
inc
rep
xor
mov
inc
test
jp
loope
sub
test
cltd
daa
add
out
jns
cmp
cmp
idivb
rorl
lcall
mov
mov
mov
cli
mov
dec
repnz
cli
adc
dec
js
stc
push
and
and
mov
cld
dec
fs
push
jp
jno
int
mov
les
jne
notl
js
pop
aad
rclb
and
mov
fxch
jp
or
out
stos
push
les
or
inc
out
mov
incb
mov
sbb
or
cmp
scas
movsl
outsb
add
mov
add
lea
leave
nop
mov
xor
push
stos
cmc
std
in
sbb
jmp
je
pop
in
adc
iret
push
push
cmp
in
lock
or
lods
hlt
xor
add
scas
addr16
cmpsl
cmp
call
lcall
enter
pop
jno
adc
jg
cmpsb
inc
insl
scas
sti
fists
add
pop
or
mov
into
ja
hlt
ret
inc
jne
hlt
imul
jnp
push
mov
clc
js
cmc
fstl
fstpl
fwait
js
bound
or
inc
cltd
or
cwtl
fisubrs
dec
or
pop
jbe
les
dec
cmpl
js
icebp
xchg
arpl
pop
in
and
dec
scas
mov
mov
jne
adc
sbb
es
int
rcr
repz
xor
cmp
mov
pop
aad
push
jo
out
and
mov
sahf
or
jno
xorl
repz
lahf
aaa
ss
jbe
adc
rolb
inc
in
jbe
insb
xor
ret
and
aas
sub
fs
adcb
fs
pop
dec
cmp
mov
and
ret
mov
pop
cmpsl
in
ret
sbb
mov
aaa
or
mov
fs
dec
push
mov
dec
sub
test
iret
inc
or
add
pushf
jns
lret
test
xor
mov
les
add
jno
push
and
pop
xchg
adc
movsb
jmp
lods
in
add
movsl
pushf
in
inc
cmp
mov
sbb
insl
std
or
repz
sub
cmp
aam
sti
xchg
mov
mov
push
sbb
jge
adc
inc
jl
xor
xchg
rcrb
dec
adc
sbb
ljmp
cmpsb
rcrb
js
loop
mov
xor
jae
outsl
jb
nop
out
outsb
dec
push
jbe
xlat
xor
push
dec
xchg
xchg
inc
and
pop
add
jne
inc
pop
out
dec
shrl
lock
push
add
je
test
ss
pop
cltd
dec
add
rol
repnz
testb
in
mov
imul
jg
mov
fdivrs
pop
mov
popf
out
sti
jns
mov
dec
sbb
or
mov
inc
imul
cli
jge
hlt
fs
mov
fucomip
outsb
or
test
dec
cmp
or
or
lods
push
pop
xor
scas
sub
cmpsb
addr16
xchg
mov
lods
ljmp
out
adc
leave
hlt
mov
cmp
dec
ret
pop
mov
adc
ljmp
pop
sbb
sub
or
push
call
jb
push
xchg
ret
and
xor
mov
aaa
and
paddd
js
dec
cmp
cmp
out
adc
pop
or
ret
cmpsb
dec
xor
test
push
add
sbb
ret
jae
sbb
push
pusha
ds
jb
movsl
out
or
in
jecxz
insl
or
gs
fs
decb
fisubs
iret
cmpsl
push
loop
pop
jmp
fcompl
adc
fdivrs
mov
cmp
addb
stc
adc
cmpsb
sub
je
jp
add
mov
cmpsl
mov
and
jmp
call
inc
xorb
jno
push
test
icebp
jl
int3
sahf
bound
jb
sbb
jmp
lahf
add
fbld
push
insb
mulb
pop
popa
out
jbe
loopne
scas
mov
and
lea
imul
call
mov
mov
inc
and
cmp
test
push
mul
pop
sub
add
inc
mov
xlat
mov
rcr
imul
pusha
and
pop
test
aas
jle
xchg
pmaxub
jb
mov
lret
cmpsl
lret
outsl
cmpb
jg
out
mov
adcb
test
popa
iret
cmc
outsl
or
push
xor
scas
out
cmp
add
cmp
mov
dec
movsb
out
js
fisttpl
jnp
and
or
mull
push
lret
xchg
fsts
cmp
xchg
add
fisubs
aas
lahf
add
movsb
xchg
xchg
pop
cwtl
push
jecxz
sti
gs
jns
icebp
icebp
cli
inc
int
insl
cmp
xchg
sub
jae
sub
mov
roll
aas
mov
das
out
inc
xchg
bound
sbb
jae
cmc
mov
xchg
cmpsb
add
out
aam
das
stos
push
ds
mov
das
mov
pop
call
add
jge
aas
call
mov
push
hlt
mov
push
rclb
push
mov
dec
lahf
nop
cld
aaa
mov
push
push
test
fsubs
push
outsl
mov
mov
adcl
mov
jbe
aam
push
jno
sbb
pop
or
jnp
decl
lods
jp
loop
scas
sub
adcb
mov
mov
xchg
lds
popf
sbb
ss
mov
dec
sub
arpl
out
mov
call
push
rcpps
scas
push
fstps
push
jb
call
xchg
mov
push
pushf
lods
dec
jg
and
mov
bound
ds
stc
push
mov
cmp
cmp
cs
cmpsb
lcall
mov
cmp
jno
icebp
int
lock
sahf
test
das
mov
inc
addr16
jae
sub
mov
mov
mov
dec
dec
ja
push
mov
scas
and
sbb
enter
inc
idivl
inc
ret
stos
test
dec
sub
jne
cli
out
loopne
ficoml
cmp
addr16
test
push
les
dec
in
andl
and
ret
adc
lret
jg
xor
push
pop
cli
dec
sbb
fsubrs
mov
jnp
sub
out
adc
cmc
push
jne
jecxz
das
nop
loop
xchg
repnz
mov
xchg
fsubl
mov
xchg
inc
jg
sub
fidivrs
out
push
lods
pop
lcall
sbb
clc
inc
repnz
xor
xor
push
xchg
bound
or
out
sbb
lret
pop
mov
pop
popa
aad
add
pop
or
mov
cmpsl
out
or
testb
call
jge
stos
rorl
jp
shl
sub
std
ret
out
cmp
cmc
outsl
testb
cmc
mov
push
sbb
ss
call
pop
fidivrs
shlb
or
sbb
mov
pop
std
insb
stc
xchg
pop
test
jmp
jno
imul
rcrl
adc
sbb
mov
xor
outsl
xchg
enter
fidivrl
in
mov
shrb
in
orb
dec
in
pop
sahf
push
or
iret
ja
insl
dec
or
dec
imul
popf
ja
mov
adc
repnz
mov
insb
jb
pop
mov
aam
sbb
sub
dec
andb
rorb
xor
daa
cli
inc
loop
jae
movsl
repnz
in
int3
push
inc
pop
pop
xor
xor
mov
inc
mov
out
adc
aas
stos
rclb
sub
adc
pop
mov
xor
adc
inc
movsl
shlb
xchg
mov
lahf
cltd
mov
adc
jle
inc
outsl
pop
jl
mov
or
movsl
add
mov
pop
or
cmp
std
enter
dec
in
pop
mov
add
fisttpll
movsl
mov
and
sti
xchg
or
mov
jns
jbe
loop
mov
mov
push
fisttpll
mov
adc
jbe,pt
mov
xlat
sar
mov
out
cmpl
cltd
mov
dec
xor
and
iret
pop
mov
sub
vpmulhw
or
add
jns
popa
sub
dec
mov
lret
sbb
mov
test
cmp
xor
mov
stos
in
out
jno
or
into
inc
mov
rcll
cmp
sbb
addr16
or
dec
push
push
push
insb
add
arpl
leavew
or
sub
cwtl
je
jmp
fwait
pop
xor
and
jge
lock
adc
rol
clc
into
mov
sub
mov
pop
inc
and
lahf
repz
dec
sub
or
sub
out
cltd
xor
mov
jbe
sub
xchg
inc
arpl
pop
mov
pop
push
gs
add
cltd
cmc
and
or
xlat
inc
hlt
jb
mov
int3
lods
add
xchg
jbe
mov
dec
dec
add
scas
jo
jecxz
and
addl
scas
cmp
loope
mov
std
pop
scas
push
pop
mov
bound
push
pop
test
int
cli
leave
mov
adc
dec
pushf
movsl
dec
subb
adc
mov
scas
inc
cmp
sub
jae
pop
stos
loop
out
jmp
orl
pop
clc
push
push
mov
jae
jae
sti
sti
jb
mov
stc
xchg
push
inc
adc
adc
je
cmp
inc
fbld
and
inc
mov
jle
je
dec
mov
sub
js
addr16
and
jb
cltd
popa
fbstp
fldenv
sub
popa
out
jnp
mov
jns
js
dec
push
add
jnp
scas
push
lock
pushf
inc
iret
adc
imul
adc
div
sbb
pop
dec
outsb
mov
pushf
loopne
push
lods
stos
jno
into
and
sbb
lahf
jne
cmp
pop
stos
cmp
es
stc
mov
add
sbb
insl
jb
repz
fsubrs
xor
jb
dec
ret
jns
add
jo
pop
push
jno
add
xchg
mov
pop
cwtl
or
jbe
mov
sbb
scas
test
fisubrs
lret
iret
push
mov
dec
clts
sbb
adc
jo,pn
repz
xchg
or
mov
jb
xchg
jp
fdivs
cmp
dec
pop
jmp
or
jmp
xor
sub
dec
or
addl
add
jmp
arpl
stos
fsubl
sbb
jmp
push
pop
xchg
clc
cmpsb
dec
adc
xor
out
ljmp
or
jg
jo
lahf
inc
xchg
popf
push
daa
ret
popf
pop
stc
mov
std
repz
mov
stos
pushf
and
arpl
mov
shrb
jno
dec
mov
outsl
jle
pop
pop
aas
outsl
ss
ja
into
xor
mov
test
mov
cld
scas
repnz
mov
rol
mov
pushl
lods
xorb
mov
push
push
jecxz
inc
dec
lret
xchg
mov
cmc
mov
insb
mov
dec
xchg
sbb
sbb
sbb
cmp
or
sub
fidivs
shll
inc
test
dec
push
and
ss
dec
jbe
pop
fdivrl
push
mov
xor
frstor
imul
insb
loop
cld
ffreep
test
aam
jecxz
xor
add
mov
mov
push
rcrb
cmp
adc
out
pop
test
fs
jecxz
insb
sbb
sarl
inc
mov
push
pusha
mov
mov
xor
and
mov
inc
sti
jp
dec
inc
outsl
and
push
sub
inc
adc
inc
fucomi
insl
out
fldl
mov
ss
sbb
mov
fwait
in
aaa
cltd
dec
jmp
icebp
cmp
inc
xor
das
sbb
mov
sub
jo
ret
jle
mov
pop
xchg
aaa
pop
dec
add
dec
movsb
rcll
jecxz
sbb
stos
gs
adc
ret
push
pop
loope
nop
xor
movsl
adc
lock
mov
mov
xchg
mov
test
pusha
and
push
xor
push
add
out
jb
ret
mov
dec
roll
mov
pop
xor
push
sub
cmp
loopne
enter
lahf
mov
mov
bsr
out
jo
mov
sbb
mov
cwtl
insb
pop
jp
pop
test
mov
pusha
in
divl
cmp
daa
cwtl
mov
fsub
test
sbb
dec
mov
lret
imul
or
sbb
xor
scas
fs
aas
mov
jne
jg
or
mov
iret
or
mov
jg
mov
popa
mov
sbb
pop
xor
push
in
out
mov
lds
cmp
mov
push
arpl
pop
movsb
std
adc
addb
xchg
mov
mov
in
stos
jl
lahf
mov
push
sbb
xchg
xchg
xor
jnp
out
je
and
mov
ret
cmpl
pop
and
stc
add
mov
cli
cmp
pop
scas
pusha
test
fcmovbe
sbb
arpl
inc
xor
pop
imul
sti
sub
lods
add
jno
popa
mov
arpl
je
add
repz
xor
pop
push
cmp
mov
push
dec
repz
mov
sbb
shll
push
sub
stc
sbb
mov
xor
push
test
pop
lcall
and
outsl
push
lcall
push
cmp
sub
idiv
outsb
jmp
cli
negb
cmpsl
jmp
scas
adc
and
in
sub
inc
orl
cmp
addr16
or
fstpl
mov
aam
lea
movzbl
imul
jmp
iret
cmc
cmp
repz
cmp
cmpsl
jo
add
lret
sbb
cmpsl
mov
xor
leave
stos
cli
cmp
stc
shl
div
mov
mov
aaa
sbb
or
imul
rcrb
xchg
cmp
insl
pusha
ret
iret
pop
pop
lods
imull
je
sub
xchg
push
xor
stos
mov
inc
push
cmpb
dec
cmp
inc
mov
loopne
and
xor
cmc
les
mov
mov
mov
inc
cmp
jmp
push
jns
cmp
jge
mov
fidivs
stos
enter
fisubrs
stos
cmp
stos
push
jmp
sub
mov
int3
add
hlt
jmp
or
inc
xor
lahf
and
leave
aas
test
pop
sbb
movsb
push
cmc
js
mov
or
mov
out
inc
pop
int
repz
dec
mov
stc
mov
cltd
mov
adc
popf
push
push
lock
popf
sbb
hlt
mov
pop
mov
push
fwait
add
cmp
sub
push
enter
jns
inc
repnz
test
jo
lcall
outsb
cmpsl
lods
das
test
pop
mov
mov
push
mov
and
cmpb
aaa
cmp
cli
in
jmp
nop
aas
rcll
cltd
adc
in
testb
loopne
adc
iret
xor
les
jmp
mov
adc
sbb
inc
std
sbb
inc
xor
rclb
xchg
rorb
pop
in
push
adc
dec
addr16
sbb
jb
test
ljmp
jmp
mov
cmc
test
loopne
out
rsqrtps
dec
and
mov
xchg
adc
push
mov
mov
in
mov
xorb
push
rolb
lds
in
sbb
and
adc
jecxz
push
data16
pop
jmp
ja
jae
dec
xchg
xchg
sahf
push
add
push
add
rorb
sub
or
mov
data16
add
fdivrp
jae
aas
pop
les
ss
push
lock
add
lods
inc
add
push
jb
jmp
loope
mov
inc
insl
lcall
cli
push
cmpsl
dec
inc
adc
mov
cltd
push
xchg
call
jle
mov
dec
icebp
xchg
sbb
push
xor
leave
pop
xchg
ret
orb
sub
mov
add
cltd
cmp
sbb
sbb
or
stos
ss
ret
add
dec
cld
sub
mov
icebp
in
cld
push
lcall
jo
icebp
dec
cwtl
fbstp
fwait
or
cwtl
fidivl
adc
aaa
test
pop
test
test
ljmp
sbb
pmaxub
push
xchg
nop
dec
fstps
cmpsb
dec
pop
fldt
mov
enter
inc
es
in
xor
shlb
push
mov
movsl
or
ret
sbb
lods
clc
xor
cmp
popf
dec
bound
or
lock
inc
mov
cmc
cwtl
cmp
scas
aad
dec
insl
rcrb
sbbb
xorl
dec
push
sub
pop
clc
mov
out
gs
nop
out
lods
test
das
mov
call
mov
mov
mov
mov
into
inc
mov
mov
jp
in
pop
lds
rcrb
test
mov
push
jb
movsl
sbb
mov
mov
mov
cmc
sub
pushf
lahf
arpl
mov
or
fucompp
xor
inc
ja
jl
pop
jmp
dec
ret
scas
faddl
xchg
dec
aad
adc
sahf
pusha
sbb
mov
sbb
or
xor
pop
icebp
xchg
jo
inc
adc
div
and
int3
xor
jg
dec
imul
loope
add
out
mov
in
inc
and
sbb
aas
data16
mov
pushf
jae
fnstsw
push
push
inc
sti
lret
push
and
scas
std
dec
lcall
push
mov
and
pop
sahf
outsb
jae
sub
iret
jmp
loope
jmp
cmp
mov
pop
add
cmpsl
xchg
mov
lock
adcl
jle
pop
mov
cmp
sub
sti
jmp
jmp
mov
push
mov
int
cmp
call
mov
dec
fistpl
pop
sti
sub
out
ja
lret
inc
ds
and
mov
pushl
ds
sahf
push
jecxz
add
lods
push
gs
ljmp
mov
ud2
outsb
mov
fs
jae
pop
imul
sbb
sahf
mov
pop
repz
frstor
outsl
ret
imul
sarb
jl
dec
stos
fwait
and
jmp
stos
enter
add
sub
scas
out
mov
add
push
add
into
inc
xchg
lret
xchg
int3
das
loope
movsl
pop
in
mov
inc
jecxz
sub
cmp
xchg
cmp
ds
ret
xlat
xchg
pop
in
jae
jne
xlat
or
scas
std
mov
or
xchg
aad
fcomps
lods
dec
add
arpl
dec
pop
pop
sbb
cs
xchg
sub
aaa
in
dec
cld
mov
movsl
xchg
dec
xchg
mov
mov
mov
cmp
and
mulb
inc
test
lods
or
imul
insl
je
adc
gs
fldenv
loop
add
xor
inc
fldt
jae
cmp
sahf
repz
pop
mov
push
outsb
ds
cmp
mov
dec
dec
pop
cmp
push
stos
pop
cld
inc
sbb
call
shrb
imul
inc
out
mov
rorl
cmp
out
stos
mov
add
shl
xchg
cmp
cmp
stos
mov
lods
cmp
jne
daa
loopne
outsb
out
cld
mov
or
and
push
pop
cmpsb
stos
call
ss
sbb
pop
test
pop
sbb
rcll
sub
shr
mov
or
lods
adc
out
jl
rcl
sbb
sub
loope
dec
dec
dec
testl
divl
cmp
mov
popa
push
sahf
xchg
leave
push
mov
or
stc
mov
mov
jns
test
stos
subb
jns
sarb
mov
std
or
push
scas
xchg
cmpsb
cli
jb
dec
rorb
or
jg
ljmp
bswap
jl
cld
test
add
outsl
sub
pop
adc
sub
test
sub
dec
cmp
rol
popa
rorl
ret
int3
adc
sbb
sbbb
and
cli
sbb
in
out
pop
adc
repnz
lea
movsb
push
aas
pop
pusha
add
mov
int3
mov
mov
lahf
mov
xchg
inc
adc
inc
stc
add
or
iret
xor
and
dec
xchg
imul
push
adc
in
lods
test
adc
sub
jb
sbbb
mov
or
cld
ret
mov
les
xchg
std
mov
fwait
jb
fisubrl
enter
stos
add
pop
cmp
push
mov
cmpsl
daa
xchg
and
lods
cmp
jbe
scas
imul
lret
loopne
cltd
dec
lods
mov
std
aaa
mov
popa
andb
push
imul
loopne
fisttps
xchg
jae
sbb
lcall
push
sarl
in
out
xchg
inc
dec
popf
in
push
test
adc
cmc
inc
pusha
int
adc
cwtl
rorb
daa
pop
adc
sbb
rcll
lahf
incl
stc
jo
jae
mov
cmp
adc
xchg
cmp
jecxz
faddl
mov
out
mov
mov
adc
adcb
xchg
push
fdivs
inc
movsb
stos
in
pop
pop
adc
mov
sti
jmp
stos
xorb
aaa
mov
add
movsb
jp
fnstcw
adc
ljmp
ja
gs
push
icebp
nop
rorl
mov
aad
call
scas
mov
dec
cli
pop
push
or
repz
mov
int3
jle
push
xchg
je
pop
leave
cltd
xor
stc
add
xor
in
inc
adc
cltd
ret
outsb
inc
iret
in
ss
aam
daa
addr16
xchg
bound
andl
and
fldcw
and
and
outsb
addr16
mov
push
insl
stos
jns
mov
pop
lret
ss
arpl
daa
dec
xchg
mov
jecxz
fistpl
in
xor
test
fmull
cmpsl
stos
call
cmp
adc
lahf
pop
mov
push
aad
repnz
sub
inc
add
or
xor
cmp
scas
sub
cmc
lods
lret
sahf
push
push
pop
push
icebp
popf
xchg
push
inc
in
loope
loop
mov
in
shlb
mov
pushw
mov
jne
or
xor
repnz
imul
mov
addb
repnz
loopne
in
lcall
mov
xor
shlb
aad
dec
fldcw
packsswb
fcmovnb
pop
scas
jecxz
xor
pop
sbb
aas
insl
mov
stos
fldl
pop
into
add
or
push
decb
mov
ret
push
fs
sahf
movsb
insl
jp
xchg
test
xchg
jl
jl
jp
inc
pop
add
outsb
leave
pop
cli
into
pop
cmp
inc
or
push
das
inc
fbstp
adc
cmpsl
data16
cmpsb
test
dec
insb
movsl
dec
adcl
fbld
mov
ja
inc
lds
jl
inc
add
lods
jb
jle
gs
cmp
sti
bound
mov
mov
ss
push
fdivl
enter
ds
cmp
icebp
mov
mov
adcb
jae
popa
fistpll
cmc
inc
sti
push
push
lea
bound
and
cmp
scas
mov
sbb
ret
dec
pop
add
inc
gs
stos
and
add
add
jae
sub
jmp
cmp
outsl
mov
les
gs
sub
pcmpgtd
adcb
imul
int3
cld
leave
xor
stc
add
or
pushf
xchg
or
xor
popa
das
jne
mov
push
push
nop
shrb
mov
pop
dec
mov
pop
je
lcall
stc
out
jae
sbb
sub
call
fdivs
cmpsb
mov
leave
mov
int
les
rclb
dec
cmp
arpl
jl
adc
js
xor
popa
push
push
jg
bound
cwtl
arpl
push
mov
cmp
movsb
into
jno
dec
xchg
mov
xchg
ficompl
adc
mov
push
out
mov
cwtl
mov
movsb
pop
add
test
mov
jecxz
icebp
xchg
enter
stos
sahf
mov
dec
mov
cld
cmpsl
jge
or
js
push
push
sub
jmp
push
jbe
push
clc
pop
cwtl
pop
icebp
dec
push
shrb
loopne
cld
jl
insl
mov
pop
cld
adc
das
imul
pop
push
insl
dec
inc
mov
notb
pop
push
push
mov
mov
fiadds
sub
popf
fistps
data16
push
dec
mov
jbe
test
les
ljmp
jbe
pop
and
or
add
dec
xor
test
sti
push
outsl
out
fstps
rorl
pop
enter
imul
fsubs
scas
test
xchg
jnp
inc
pop
inc
and
into
repz
or
and
lock
in
sub
lods
ficomps
repz
pop
mov
cmc
sub
xor
push
sub
addl
sub
inc
mov
cmp
add
cmp
jg
and
mov
out
push
dec
sti
ret
push
mov
mulb
jbe
lret
in
movsb
adc
xorl
mov
lock
lock
or
mov
dec
pusha
lcall
xchg
pop
lds
or
int3
jno
push
test
jnp
sub
loop
mov
jnp
jae
pushf
jle
jno
add
stos
jmp
scas
xor
out
bound
ret
test
mov
rcl
lds
jg
xchg
xchg
dec
ret
mov
lret
inc
shlb
xchg
call
pop
insb
mov
jp
xor
pop
clc
cmpsb
sarl
jp
lock
pop
daa
je
pop
addl
mov
mov
popf
aaa
sub
fneni(8087
cmp
adc
test
out
mov
push
jmp
mov
popf
fdivrs
scas
mov
gs
sbb
push
xor
sahf
inc
mov
sbb
xor
xchg
cli
sarb
mov
inc
inc
pop
movsl
pop
mov
mov
push
or
out
insl
jbe
dec
xchg
push
aad
mov
or
mov
lods
lcall
lcall
divl
inc
ret
clc
inc
rcrb
cmp
test
inc
cmp
add
pop
loopne
xchg
and
mov
loope
in
push
dec
jb
outsb
ret
pop
mov
stos
mov
and
cmp
sti
stc
sub
mov
movsb
testl
and
cwtl
ds
lret
xchg
repz
or
addr16
insl
loope
call
loopne
sub
mov
arpl
push
lock
in
in
add
pop
push
vcmpps
push
mov
mov
mov
icebp
and
out
std
stos
scas
call
cltd
xchg
popa
mov
inc
add
test
sbb
jle
stos
dec
popf
fwait
pop
movsb
aas
or
movsl
jge
jge
jmp
insl
or
mov
test
mov
or
xor
pop
iret
sbb
in
push
and
mov
xchg
out
cmp
cmp
jge
jecxz
ljmp
inc
fcmovu
lcall
data16
sbb
out
xor
fnstcw
rcrb
mov
dec
jl
xchg
mov
add
inc
add
out
scas
jp
xchg
xor
icebp
cmp
mov
or
pop
mov
push
aas
movsb
lea
icebp
movsb
cli
xchg
test
fisubrs
push
mov
pop
test
imul
inc
pop
sbb
xor
cli
mov
pop
mov
mov
push
movsl
mov
lea
sub
mov
xorl
add
jecxz
addr16
call
jns
test
je
mov
cld
and
les
je
jo
rcll
jp
rorl
pop
mov
pop
call
shl
shll
pop
insb
and
mov
sub
subl
test
pop
inc
jnp
bound
sbb
adc
scas
cmp
sub
cmp
into
jg
mov
jp
pop
nop
xor
stc
mov
push
mov
daa
and
jo
ds
add
xor
jb
leave
lahf
int3
pop
sub
cmp
add
ds
adc
inc
incb
test
icebp
sub
or
ss
inc
adc
cmp
insb
ret
mov
movsb
push
dec
jne
push
ret
loop
push
dec
xlat
xchg
fstps
cmpsl
divl
push
leave
dec
sbb
mov
shll
shrb
mov
mov
adc
xchg
mov
sub
mov
imul
or
sub
ss
jp
mov
adc
cwtl
and
fnsave
xchg
psllq
in
pop
negl
pop
out
sub
ret
lock
and
push
xchg
gs
outsb
dec
mov
pop
push
push
mov
mov
repnz
jnp
leave
ret
xchg
popa
inc
nop
lea
fs
jno
cmp
jne
sub
dec
insb
ljmp
sar
pop
idiv
jmp
pop
push
mov
push
xor
lcall
cmp
rcrb
fdivs
repnz
xchg
sahf
jb
aas
mov
test
sbb
aas
add
mov
repnz
mov
cld
add
cmp
inc
adc
call
bound
xor
jnp
jno
xchg
push
mov
je
dec
stos
cmp
inc
stos
leave
repnz
test
xchg
dec
and
adc
iret
xchg
lcall
xchg
xor
aas
mov
test
mov
mov
ret
push
dec
test
xchg
out
les
mov
inc
int
ljmp
sub
mov
popa
pop
xchg
dec
add
jge
jbe
xchg
or
loope
fmuls
push
fisubl
cmp
fs
inc
fsubrs
das
mov
mov
or
lea
loopne
ret
nop
pushf
inc
int3
xlat
pop
stos
mov
inc
add
pop
add
adc
subb
mov
adc
idivl
sub
mov
push
pop
ret
pop
and
inc
adc
iret
aad
pop
std
ficoml
fldenv
dec
and
es
aaa
ja
addl
lea
push
filds
mov
cwtl
pusha
xchg
adc
pop
jg
fisttpl
in
ja
int3
xchg
ret
jbe
add
ficoms
cmp
shr
or
sarb
loopne
addr16
mov
imul
jp
pop
pop
test
adc
xchg
fwait
loopne
inc
shl
push
push
mov
addb
sub
cmp
leave
push
pushl
repz
or
lcall
outsb
add
mov
imul
scas
or
pop
out
mov
and
movsb
mov
mov
jp
jb
daa
jb
sbb
jne
rcll
out
adc
movsl
mov
jle
int3
cltd
mov
mov
data16
or
push
scas
lods
loop
fstl
outsl
rorl
lods
fdivrs
stos
pop
data16
xor
xor
xor
ja
cltd
cmp
adc
and
xlat
test
mov
adc
sub
insb
addb
jle
aam
xor
mov
rorl
and
mov
fwait
ja
outsl
mov
cwtl
mov
xor
and
xchg
lea
aam
std
mov
add
jns
mov
pusha
mov
sub
sub
sub
inc
and
cmp
xchg
pop
sti
ret
popa
scas
lock
test
testl
cltd
sub
push
dec
pop
ret
ljmp
test
jae
mov
and
iret
xor
out
dec
jns
cmp
xor
pop
mov
push
sti
mov
cmpsb
push
daa
loope
fcomps
pop
subl
testb
add
das
push
sti
add
and
sub
adc
mov
in
pop
push
push
das
pop
aaa
ret
push
testl
jecxz
outsl
cmp
add
adc
repnz
pop
es
leave
cli
and
std
les
imulb
enter
aaa
xchg
pop
push
sbb
pop
push
enter
dec
mov
pop
xor
sub
stc
insb
out
sar
rorl
xor
loop
mov
std
inc
movsb
cmp
das
xor
insb
rcll
and
je
push
push
idivb
imul
insl
cs
cmpsl
shlb
ret
icebp
mov
pushf
nop
test
pop
adc
scas
icebp
aas
shlb
dec
inc
xchg
push
pusha
idiv
mov
cltd
ss
fs
int3
lret
push
ret
idivl
mov
aad
xchg
jno
int3
push
scas
mov
mov
shll
addb
jne
sbb
jg
mov
mov
mov
aam
cmp
xlat
pop
lods
xor
shl
xor
or
les
mov
faddl
aad
sub
jle
inc
jns
outsb
add
sahf
clc
lea
cld
scas
fs
pushf
cltd
fldcw
or
stos
mov
lret
in
leave
rolb
loope
mov
pop
dec
imul
sti
jno
lea
shll
lds
pushf
xor
imul
xchg
jb
push
mov
in
les
dec
jg
jmpw
lret
jl
into
add
xor
xlat
jg
xchg
in
pop
dec
pop
ficoml
jae
and
mov
adcb
lret
repnz
ret
pop
mov
pop
mov
jns
loopne
data16
rorb
add
test
notb
mov
xchg
inc
int
out
cmp
lret
das
mov
nop
dec
inc
mov
es
in
fistl
test
icebp
mov
movsb
xchg
lahf
in
pop
push
outsb
cmpsb
pop
popa
in
outsb
xor
cmpsl
push
fmul
push
xchg
push
pop
loop
mov
call
rol
add
adc
adc
mov
decb
xor
push
in
addr16
scas
out
xchg
stos
jle
out
outsl
xor
sub
ljmp
cld
cli
push
xlat
dec
loope
cmpsl
mov
mov
aam
jl
xor
xor
daa
sub
lahf
sbb
mov
cmpb
cs
sub
adc
mov
loope
lcall
je
or
dec
loopne
popf
mov
loop
test
jo
insl
push
ss
sahf
push
arpl
movsl
or
push
inc
ffree
sub
lods
xor
ret
mov
dec
repz
fcmovnbe
mov
ret
int
fidivl
inc
lock
fsts
cmp
movsl
push
or
loopne
fiadds
gs
mov
push
sbb
lods
jg
imul
push
sbb
or
jo
ja
je
cmp
sub
sub
pop
or
or
stos
adcl
jno
sbb
cli
ljmp
sbb
inc
jo
fadds
pop
mov
fcmovbe
xor
xor
inc
cmp
cmp
xor
xchg
pop
movsb
push
sub
or
push
lcall
jne
push
pop
sub
add
fbld
lcall
add
sbb
cmpsb
and
es
arpl
and
cli
mov
popa
sahf
mov
xchg
jb
enter
add
cwtl
aaa
sub
inc
jg
fcmovnu
loop
mov
jbe
pop
icebp
in
subl
add
mov
xchg
out
outsb
jecxz
sub
sub
push
in
pushf
outsb
mov
xchg
rcll
dec
je
test
dec
cwtl
adc
mov
sbb
mov
xchg
push
mov
ffreep
fiadds
pop
into
es
out
inc
jno
add
add
and
mov
inc
aad
adc
stc
std
mov
cmp
leave
push
cmc
push
in
fdivl
sbb
lods
cmp
mov
aas
loop
xchg
cs
movsb
out
pop
ds
pop
insb
leave
arpl
scas
adc
shr
jcxz
push
fwait
lret
dec
jbe
mov
cld
outsb
xchg
enter
mov
pop
add
mov
lods
sti
out
or
xor
repz
aaa
cmp
cmc
mov
dec
dec
icebp
mov
mov
js
push
sbb
jb
pop
loope
aad
popa
cmp
sub
or
negl
add
int3
inc
into
pop
adc
xchg
scas
into
rcl
fstps
mov
mov
and
adc
cmp
sub
mov
push
mov
test
mov
and
push
pop
inc
lcall
sub
cs
stos
mov
insb
stc
lds
push
push
push
incl
shlb
pop
lock
mov
out
xor
jo
outsb
lock
loope
enter
sti
loope
and
mov
in
or
jl
hlt
in
dec
cmp
sbb
mov
xchg
cmp
into
call
jmp
mov
mov
dec
bound
inc
in
mov
or
repz
xchg
mov
ret
sub
scas
loop
adc
dec
or
subl
inc
loopne
pop
mov
jno
jge
push
pop
pop
cmp
mov
inc
cmp
shlb
jmp
or
push
ja
mov
mov
mov
shl
push
outsl
mov
aam
das
rcl
pop
pop
pushf
mov
arpl
or
sbb
data16
test
sbb
sarb
pop
subb
adc
lea
inc
pop
xorb
out
or
icebp
hlt
sarl
mov
shlb
xchg
repnz
in
pop
insl
dec
add
push
push
into
dec
pop
mov
shl
ret
dec
std
jae
fs
pop
inc
inc
pusha
inc
xlat
cmpsb
in
out
mov
shr
or
stc
pop
das
jbe
mov
inc
and
xchg
test
jmp
push
push
loop
ffreep
push
xlat
push
cmpsl
xor
scas
js
testl
sbb
stc
popa
push
cmpsb
rsm
jmp
sub
cmp
clc
jne
mov
das
in
xor
stc
xor
xchg
inc
inc
pushf
lods
xchg
popf
mov
mov
or
and
mov
nop
test
sub
jns
out
mov
mov
scas
out
push
lcall
aam
repz
sarb
add
repnz
jp
add
rolb
das
fldenv
adc
pusha
fld
push
mov
out
adc
inc
test
out
leave
mov
pop
sbb
pop
pop
push
rorl
xchg
xchg
mov
mov
and
mov
sahf
mov
inc
lock
movsl
icebp
jo
aad
jg
sub
cmp
ficompl
out
lds
scas
mov
nop
or
pop
adc
inc
or
imul
lret
popa
mov
mov
dec
imul
pushf
xchg
out
fbstp
std
xor
sub
xor
adcl
popf
mov
in
sbb
sub
aad
sti
lods
mov
and
adcl
jne
in
cmp
jne
push
addl
sarb
sbb
enterw
jne
lret
inc
into
cld
insb
lret
inc
mov
inc
jnp
nop
cmp
stos
push
data16
outsl
sub
loope
push
sub
cmpsl
jnp
add
cmp
mov
outsl
mov
sub
mov
pushf
loope
aad
push
mov
shll
mov
xchg
xor
xor
jae
pop
mov
lahf
rorb
cld
push
test
in
outsb
dec
and
jne
push
push
sbb
or
dec
daa
dec
dec
mov
push
pop
fwait
jns
lods
lret
outsl
xor
fldt
into
in
stc
or
jmp
xlat
push
push
xchg
sti
inc
dec
sub
and
push
mov
enter
stos
shr
mov
xsaveopt
adc
decl
in
loopne
pop
jne
out
pop
stos
push
or
and
les
pusha
mov
xchg
push
enter
bound
shl
xchg
jns
inc
mov
inc
ljmp
fsubrl
adc
pop
mov
adc
cmp
outsb
jl
inc
mov
fnstcw
add
sub
mov
rcr
cmp
jnp
ss
imull
push
and
dec
and
out
insb
je
scas
jle
sahf
add
repnz
rorb
insb
fwait
xlat
push
lds
repnz
cmp
lods
mov
clc
jge
mov
lret
xchg
jbe
mov
dec
push
pop
inc
mov
pushf
pop
fidivl
dec
ljmp
movsb
shll
or
out
add
sub
jo
and
mov
inc
cmp
sub
fisubrl
or
jne
cmp
insl
mov
cmp
push
insb
xchg
cltd
gs
je
ret
ds
pop
jmp
or
out
lock
imul
lods
inc
dec
loopne
out
adc
imul
shl
ss
xchg
cmpsb
jo
xor
jo
lcall
dec
jnp
fs
popf
adcb
cmp
negb
imul
out
fwait
repnz
in
cmp
adc
aad
popa
mov
xchg
les
mov
jmp
outsl
hlt
add
and
sti
pop
sub
aad
in
mov
popf
dec
lahf
and
sub
mov
mov
push
adc
test
or
pop
gs
cmpb
mov
xchg
xlat
adcb
lods
push
dec
out
mov
sbb
fwait
dec
push
bound
stos
ljmp
push
cwtl
hlt
adc
out
mov
push
mov
rcrl
push
cli
jge
iret
jo
pop
mov
mov
aam
cmp
gs
xor
sbb
lods
test
out
and
xchg
cmp
outsb
jmp
into
call
clc
pushf
aad
sub
loopne
adc
out
xor
sbb
pop
jg
jo
pop
mov
aam
out
in
outsl
pop
jnp
fisubrl
movd
or
push
mov
shl
push
pop
hlt
and
call
es
not
rcl
lock
jp
stc
pop
adc
inc
lcall
lret
jle
xchg
inc
std
mov
jmp
pavgb
xchg
lock
scas
imul
xchg
rcrl
in
xchg
popa
lods
test
push
sbb
or
mov
enter
jg
xor
cmc
cmpsl
pop
jno
test
jmp
and
popf
fldcw
mov
jne
push
dec
mov
sbb
jmp
test
push
int3
xchg
or
sbb
jge
ljmp
pop
and
sub
adc
fs
dec
ds
or
mov
mov
fistpl
or
jecxz
cmp
lds
setp
pop
fidivrs
push
pop
mov
mov
in
test
add
jnp
aam
test
add
ja
add
lods
dec
or
xchg
data16
mov
jno
or
cwtl
and
push
mov
sbb
mov
cmpsb
ja
mov
ss
mov
das
push
sbb
insb
sbb
sub
fs
out
inc
movsb
outsl
xlat
stos
jle
std
outsl
das
pushf
adc
sub
lock
sahf
or
adc
test
jmp
shl
adc
xchg
dec
jns
fiaddl
test
outsb
shrl
decb
push
mov
dec
mov
js
cmp
cltd
dec
push
inc
test
jae
fstpt
movsb
push
adc
inc
idivl
mov
dec
inc
pop
repnz
pusha
jmp
fdivrp
push
pushf
rdmsr
adc
pop
sbb
daa
insl
xor
cmp
bound
inc
in
xchg
lahf
imul
xor
add
xchg
sbb
sbb
imul
popa
and
inc
mov
js
pop
addb
or
into
leave
jae
mov
sahf
subb
pop
mov
pop
or
pop
add
jb
fdivr
inc
outsb
decl
ds
ds
xlat
pop
test
or
mov
daa
mov
enter
jne
xor
test
dec
add
ja
pop
xor
or
pop
push
lods
or
mov
dec
adc
mov
mov
pop
push
fsubs
xor
adcb
fiadds
and
xor
jae
mov
xor
adc
les
cmp
movsb
fidivrl
push
pop
pop
xor
aam
pop
inc
mov
pop
aaa
dec
push
mov
imul
mov
adc
xchg
add
sub
push
sbb
loopne
push
mov
pop
mov
and
mov
pop
mov
fmul
inc
movl
fisubl
mov
sub
xorb
and
movsl
push
arpl
outsb
mov
xchg
adc
xchg
xor
mov
dec
out
dec
xchg
fldl
loope
sbb
mov
test
cmp
add
mov
shrb
and
mov
inc
xchg
movb
and
jecxz
sbb
jp
pop
jnp
pop
out
ss
xor
add
pushf
add
jg
push
out
and
adc
mov
fwait
leave
test
cmp
cmp
dec
imul
imul
ss
push
xchg
xchg
cmpl
jle
fcoml
roll
stc
fnstsw
push
cmc
notl
enter
fildl
rcrl
jbe
mov
movsl
mov
inc
mov
scas
add
mov
xchg
outsl
fs
mov
push
add
push
mov
rcr
or
stos
adc
push
xchg
pop
sbb
imul
or
mov
ret
pusha
and
mov
jmp
aam
dec
shlb
cmpsl
lods
mov
mov
arpl
fs
daa
add
cli
ret
sbb
lods
rcrl
hlt
sti
aad
cmc
mov
aam
mov
jnp
aas
nop
jno
push
mov
adc
imul
pop
lret
sub
adc
fs
shrl
push
jp
sub
mov
sbb
ficomps
jb
xor
cwtl
aas
push
cld
xchg
lahf
cmp
sbb
imul
inc
cmp
lods
adc
outsb
sub
shlb
mov
fsubrs
mov
in
lcall
push
mov
mov
push
cmpb
call
fwait
sbb
lods
push
call
aas
xor
xor
xchg
ljmp
out
call
in
ficomps
mov
lock
into
jbe
lret
fsubl
outsl
das
sbb
mov
test
ss
xor
movsl
dec
testb
mov
push
arpl
jg
sbb
mov
mov
or
mov
xchg
mov
push
scas
xchg
inc
sbb
dec
add
enter
xlat
pop
ja
mov
dec
popf
and
push
jp
rcll
and
sub
fwait
push
push
fwait
stos
int3
xor
inc
fcmove
in
xchg
add
jecxz
and
jl
sbb
push
pop
leave
mov
sbb
lcall
or
xchg
mov
push
add
test
sbb
jle
mov
cmp
sbb
lea
pusha
out
pusha
ss
sub
test
mov
movsl
test
jbe
fucomp
outsb
addr16
fisubs
jl
fidivrs
cvtps2pi
xchg
fidivrl
cli
pop
icebp
fucomp
fbld
push
cmpsl
call
imul
xchg
push
clc
xor
adc
mov
add
push
xor
mov
daa
dec
out
pop
jge
jae
and
inc
icebp
mov
lahf
xchg
imul
fisubrs
inc
enter
push
inc
sti
cmpsl
xorb
add
mov
add
insb
xchg
ret
pop
jb
mov
loop
clc
sub
cmp
mov
push
outsb
cmp
push
iret
push
xchg
dec
mov
mov
mov
jl
mov
out
mov
jne
push
daa
movsl
cmpl
push
daa
push
add
test
and
call
hlt
adc
push
pop
jp
mov
popl
icebp
cmp
inc
stos
cmp
movsl
push
in
sub
adc
dec
int
ret
iret
ss
scas
xchg
shll
mov
fsubl
int3
push
iret
xchg
faddp
cmc
mov
cwtl
or
cmpsl
add
iret
icebp
pop
dec
jns
pop
clc
adc
fs
push
inc
add
imul
and
fisubrs
push
mov
cmpsl
mov
sub
xor
lret
lds
dec
inc
aam
aad
adc
inc
outsb
mov
mov
xlat
incl
je
out
adc
orl
js
in
setb
bound
pop
xor
fdivs
lock
sbb
cmpsl
xchg
test
jle
sbb
lods
cli
xor
addr16
fs
sti
or
fisubrs
lret
pop
movsl
lds
mov
mov
cmc
popf
jmp
add
lods
test
dec
inc
cld
mov
jb
jl
ret
mov
imul
rclb
sub
cmc
pushf
xor
imulb
mov
lods
popl
sti
addl
adcb
mov
mov
lea
xlat
mov
sbb
push
mov
sub
or
test
xor
repnz
out
lret
hlt
push
in
imul
lret
fwait
mov
dec
cs
imul
cmp
lret
stos
cli
lcall
cwtl
cmpsl
lahf
call
push
mov
mov
push
jo
cmp
pop
push
push
or
sub
test
lahf
cli
adc
xchg
ret
cld
jmp
mov
add
pop
jne
pushf
add
dec
call
inc
and
sbb
push
mov
jp
outsl
mov
shll
repz
mov
jecxz
mov
lret
xchg
sub
into
jns
fucompp
xchg
outsl
push
adc
shl
mov
lahf
dec
pop
add
adc
mov
lods
decb
adc
andb
push
lahf
push
mov
outsl
xor
mov
clc
xchg
push
sub
fstpl
jb
add
adc
insb
push
xchg
mov
xchg
imul
push
aad
scas
push
arpl
insb
push
dec
sahf
adc
cmpsb
jae
das
inc
sbb
mov
pusha
jg
int3
xchg
mov
xor
rcrl
mov
jg
fwait
lods
and
jg
fisttpll
push
lret
fidivrs
cmc
xor
sub
xchg
and
cld
adc
adc
sbb
jmp
push
ljmp
mov
push
rclb
add
loope
out
cs
push
jmp
rolb
daa
pop
jmp
pop
leave
and
pop
pop
inc
cld
mov
jge
jle
pop
xchg
pop
push
mov
in
jns
imul
mov
sbb
mov
push
cltd
ds
mov
and
lret
popf
dec
mov
lods
push
mov
pop
lods
pop
dec
int3
push
pop
mov
add
xchg
xorl
data16
inc
jmp
hlt
subl
and
sbbl
icebp
pop
scas
call
aam
pushf
xchg
or
dec
xor
fst
and
add
adc
adc
push
test
mov
pusha
xchg
adc
inc
test
pushf
hlt
test
add
mov
inc
mov
aas
loop
js
add
out
mov
mov
mul
jp
je
cmp
push
or
xchg
aas
inc
cmp
imul
xor
addb
das
mov
jne
jge
or
xchg
mov
outsb
inc
add
push
xor
inc
incb
xlat
sub
mov
clc
pop
xlat
ja
outsb
aaa
lods
mov
lods
pop
lds
scas
cmpsb
and
cmp
in
dec
pushf
sbb
or
xor
mov
pop
xchg
enter
mov
jle
ficompl
fs
xlat
xor
pop
xchg
notb
cmp
sub
addr16
mov
or
and
jb
aad
stos
lret
ret
push
xchg
in
inc
jmp
add
test
pop
icebp
mov
sar
int
ss
int3
fiaddl
push
adc
jnp
sbb
sti
jno
test
int
push
mov
int3
rorl
clc
ffree
sahf
and
adc
xor
sub
ljmp
shll
jb
inc
push
cmpsl
filds
cmpsl
andb
into
cwtl
je
push
jmp
add
outsb
inc
xchg
cld
push
mov
js
clc
sub
pusha
int
mov
dec
test
mov
sub
inc
and
mov
lods
cmp
repnz
mov
movsb
sbb
rolw
push
pop
mov
inc
sbb
pop
test
inc
xchg
xchg
pop
andb
adc
loopne
mov
adc
cld
cld
and
jb
mov
mov
push
mov
ret
dec
rorb
fwait
xchg
popf
cmpsb
adc
sti
push
xor
fdivs
not
ds
sbb
incl
xchg
xchg
test
out
push
xor
or
cwtl
fldenv
out
nop
fwait
xchg
mov
ljmp
fdivrs
dec
lcall
and
imul
in
cmp
lods
sub
jmp
xor
rcrb
stc
sub
adc
xor
push
call
lods
add
and
mov
xchg
sar
xor
lods
lcall
sbb
loope
xor
icebp
mov
push
imul
adc
sub
xchg
adc
stos
jecxz
jno
inc
pop
add
ja
test
jb
cmp
jae
addb
inc
sub
arpl
pop
cs
jnp
inc
xchg
pushf
push
lods
push
cli
cmpsb
jl
rcr
or
mov
icebp
ret
lods
cwtl
mov
nop
dec
andl
pop
scas
fadds
mov
rorl
fwait
jbe
mov
gs
mov
pop
repnz
lods
mov
add
test
out
test
mov
mov
adc
jno
aad
xor
sub
xchg
mov
das
mov
lret
mov
push
xor
and
push
adc
pop
test
jl
xor
testl
push
cmp
shr
lods
push
xor
movsb
sub
mov
ja
pusha
sub
mov
add
cmp
push
or
nop
adc
sbb
adc
movsl
sbb
fwait
xor
dec
sahf
mov
int
xchg
test
dec
test
mov
andl
push
ja
mov
or
push
mov
push
sbb
dec
outsb
int
loope
mov
mov
lcall
jle
fldcw
push
sub
push
xor
ret
mov
ljmp
data16
mov
dec
testl
mov
ja
test
in
pop
das
rorb
xor
negl
jb
mov
or
cmp
mov
mov
pop
int3
or
ret
push
push
inc
push
cmc
adc
cmp
mov
lret
push
fcompl
sub
xchg
cwtl
dec
mov
fldcw
xor
xor
popf
into
add
es
test
jo
dec
lods
rorl
push
bound
pop
xor
out
dec
sbb
inc
or
xor
jge
mov
push
mov
sarl
xor
mov
xor
cmc
sub
repnz
jns
iret
push
push
dec
mov
xor
stc
or
cmp
mov
xor
in
inc
lods
jl
pop
int
jnp
mov
adcl
lods
push
inc
and
push
loop
out
sub
sbb
or
aam
lea
fs
es
pop
inc
pop
cmp
loope
inc
pop
lcall
nop
pop
and
aas
addr16
movsl
mov
sbb
push
dec
xchg
xchg
sbb
cmpsl
stos
cmp
jecxz
mov
jo
jnp
pop
stos
cmpl
jo
cmp
stc
sarl
pusha
xchg
pop
jge
pop
and
mov
lret
repnz
push
fbld
rorb
andl
or
in
pop
nop
lret
sbb
or
xchg
push
push
icebp
movsl
mov
iret
pop
test
adc
mov
adc
mov
push
or
mov
inc
adc
in
repz
jo
add
je
and
jecxz
mov
lods
movsl
pop
mov
jmp
rolb
xchg
out
es
ljmp
cwtl
shrl
jg
or
adc
pop
cltd
pop
into
add
push
and
cmpsl
popf
stos
mov
lret
sbb
jmp
mov
xchg
fbstp
lock
jne
jecxz
mov
mov
jns
mov
jmp
pop
adc
int
adc
cltd
lret
std
aaa
or
ret
icebp
push
push
rep
jp
or
movsb
mov
out
lock
mov
int3
and
xchg
aas
xor
cmc
call
fcomip
mov
xlat
pop
movsl
mov
es
mov
mov
lds
push
leave
adc
sub
push
adc
mov
fiaddl
sbb
pop
fisubl
mov
mov
lea
xchg
aad
dec
xchg
jne
lret
sub
ja
loope
dec
adc
xor
sub
mov
sti
mov
arpl
sub
subl
fldcw
mov
pop
sub
loope
jp
js
push
outsl
je
dec
stos
sub
test
jmp
xchg
pop
jmp
repnz
jecxz
adc
shlb
in
inc
test
push
scas
add
rcll
cmp
push
inc
add
jb
mov
into
in
popa
sbb
mov
out
stc
push
scas
jns
pop
enter
jae
push
or
clc
cmpsl
in
mov
in
xchg
mov
shl
aad
jp
adc
outsl
jl
ss
or
push
je
outsl
add
lock
std
mov
es
mov
xchg
sbbl
pop
xor
into
sbb
and
sahf
inc
leave
lea
mov
iret
xor
mov
testl
pop
mov
xor
addr16
jae
sarb
bound
xchg
xor
aas
pop
out
jb,pn
enter
cmp
push
iret
fcmovnb
ljmp
aam
test
int
notl
mov
cmp
cwtl
inc
add
test
mov
dec
adc
mov
andl
popf
push
sti
push
imul
adc
arpl
xor
sbb
sub
push
cmpsl
arpl
jmp
push
addr16
push
inc
cwtl
lds
insb
subb
sbb
fcmovu
movb
adc
popa
pop
dec
inc
stos
jmp
jnp
and
push
scas
lahf
push
imul
jno
mov
push
mov
xchg
pop
pop
inc
ss
push
imul
xchg
in
xchg
sub
adc
lods
repz
mov
and
xchg
cltd
add
iret
dec
les
add
lret
sub
push
mov
and
hlt
pop
sti
inc
push
push
lcall
inc
push
mov
sbb
cmpsl
pop
pop
loop
out
jbe
ss
shll
dec
das
fmuls
dec
jo
mov
and
negl
shrl
loop
mov
xchg
outsb
jnp
roll
inc
fisubrs
in
mov
in
add
or
je
sti
call
adc
xchg
or
cmp
and
test
mov
push
add
cli
dec
dec
mov
mov
decl
inc
lcall
clc
insb
fdivrs
jmp
xchg
rcl
mov
mul
pop
and
dec
xor
add
pop
pop
xchg
sbb
cmpsb
xchg
sahf
xchg
or
ljmp
sahf
shll
stos
adc
sbb
out
fistpll
cmpl
inc
aam
jl
sub
ss
inc
sbb
cmp
xor
jo
lret
sub
aam
clc
lds
sbb
add
pop
cmpsb
adc
or
mov
push
fbstp
add
or
inc
push
shl
mov
jbe
mov
stc
cmp
mov
dec
mov
psrld
aam
jp
mov
sbb
lea
out
les
in
ret
enter
std
or
aad
in
test
pushf
pop
inc
sub
adc
dec
push
mov
pop
fdivrs
sbb
outsb
loop
mov
fbld
jnp
mov
gs
ficoml
and
push
pop
mov
aad
push
xor
xor
sub
mov
xchg
arpl
mov
mov
xor
scas
jg
sbb
jmp
dec
aas
mov
filds
rolb
xchg
dec
or
inc
pusha
xor
sahf
and
je
jae
jle
insl
inc
or
call
pop
mov
sub
in
xor
ja
cmovbe
cmc
push
roll
add
les
jo
adc
popa
lods
cmp
sub
in
or
shlb
aas
pop
adc
lahf
inc
or
dec
pusha
test
sub
and
mov
xchg
inc
leave
pushw
sti
dec
adc
rorb
test
add
test
and
test
mov
mov
push
addl
adc
sub
daa
in
pop
dec
aam
stos
mov
xchg
inc
bound
jg
push
sbb
pop
ljmp
pop
xchg
pop
out
movsl
inc
push
mov
sahf
je
mov
push
test
loopne
lods
dec
ret
jp
shll
enter
mov
dec
xor
addb
push
and
sub
addr16
shrb
scas
out
jecxz
je
adc
mov
aas
cmpsl
adc
dec
sarl
out
mov
arpl
adc
stos
lcall
mov
and
pop
dec
iret
cmp
fcmovnu
fcmovbe
or
xchg
fdiv
pop
xor
sidtl
dec
test
and
xchg
add
xor
add
cld
push
fisubs
popa
insl
fstpt
fwait
lahf
jno
sub
and
and
pop
pop
pop
repz
xor
out
or
out
pop
std
fistl
mov
iret
adc
mov
jp
mov
shll
mov
xchg
stos
pusha
jp
xchg
pop
lahf
push
mov
cmpsb
mov
pop
and
es
or
popf
imulb
call
stos
xchg
arpl
and
cmpsb
or
sub
pop
aad
out
push
stc
lods
ror
leave
ja
insl
push
pushf
addr16
sbbl
mov
lcall
mov
mov
pop
sub
test
pop
fdivrs
pop
test
lea
or
mov
pop
push
pop
js
mov
lahf
fcoms
pop
sbb
adc
repnz
mov
rcrb
xor
pop
fs
pop
pop
adc
inc
sub
cmpsb
aaa
fcoms
push
pop
jne
pushf
cmpsl
adc
dec
and
inc
cmp
inc
xor
cld
aad
sbb
push
xor
cmp
mov
dec
shlb
cli
xor
ds
jle
sub
xor
cmc
sub
out
xor
jmp
movsb
inc
cmp
aaa
sbb
mov
sti
adc
xor
mov
scas
jmp
repz
lods
or
xor
dec
jp
jg
ret
xchg
movsl
mov
jns
cmp
mov
testl
pop
sub
mov
jmp
mov
cld
mov
mov
xchg
mov
dec
jne
and
int
mov
js
jle
adc
in
or
adc
sbb
inc
lds
push
jl
xor
pop
mov
xor
pop
repz
popa
pop
jge
nop
nop
int
mov
aas
sbbb
cwtl
adc
cmp
das
dec
inc
divb
jg
std
je
sbbl
cmp
jae
inc
leave
push
data16
xor
mov
cmp
stos
js
or
sbb
lds
cmc
andl
dec
push
ret
sbb
cmpsl
loopne
push
loopne
xor
je
push
mov
xchg
and
fisttps
sbb
or
xor
scas
sbb
cmp
orb
xchg
pop
call
jnp
or
jno
sarl
inc
fs
hlt
push
dec
ja
pop
sbb
xchg
out
mov
cltd
dec
clc
fisubrl
iret
ffree
mov
jns
idivb
decl
iret
mov
ret
and
pop
pop
adc
cmp
cmp
jbe
fdivrl
mov
xchg
adc
xor
cs
stos
adc
jp
std
mov
jecxz
add
repz
jo
mov
es
nop
push
lcall
aas
in
pushf
adc
arpl
mov
jae
out
aas
mov
sbb
sub
fistps
leave
xor
and
fiadds
bound
push
sub
enter
aad
fisubs
mov
jae
and
test
aam
popa
fstps
test
iret
pop
and
xchg
jnp
pop
icebp
outsb
scas
and
subb
mov
lods
and
shrl
vpunpckhdq
inc
sub
push
ljmp
jb
iret
or
sub
sub
jns
iret
inc
stos
inc
or
add
into
sub
test
scas
push
es
lods
inc
push
in
ss
xchg
ret
xchg
sub
sub
or
jge
movsl
pop
leave
push
jg
mov
jae
mul
sub
into
pop
sub
cmpsb
sbb
imul
pop
push
into
cld
mov
xchg
jmp
pop
pop
test
rorb
xchg
mov
out
popf
inc
pop
xchg
ret
arpl
rep
sub
xor
mov
imul
add
or
add
lods
push
xchg
push
fisubrl
or
mov
outsl
mov
push
xchg
push
cmpl
pop
pop
popf
and
and
add
xchg
sub
loopne
call
or
daa
or
jecxz
push
shrl
hlt
lcall
xchg
fs
fcomps
jp
push
addr16
cmpsb
xor
data16
pop
pop
int
sbb
sub
pop
aad
insb
faddl
pop
adcb
sbb
or
sbb
push
push
cmp
nop
jnp
sub
ret
sbb
pusha
test
fisttpll
in
adcl
adc
adc
or
loopne
jb
jmp
mov
push
xor
test
and
adc
int
cmpsb
movsb
imull
sub
repz
imul
or
add
cld
adc
hlt
scas
imul
mov
and
sbb
push
xor
lret
xchg
addr16
add
repnz
pop
lock
cwtl
das
xor
xchg
push
and
lahf
xchg
stos
sbb
ja
fnsave
add
xor
add
ret
es
mov
push
imul
inc
adc
hlt
xor
inc
popa
push
addr16
add
pop
pop
cmpsl
gs
push
lods
cli
ja
push
test
xlat
sbb
cmp
jmp
push
jmp
inc
mov
in
ja
mov
frstor
lcall
subl
andl
ret
mov
xlat
sbbl
test
adc
clc
mov
call
xchg
add
leave
fldcw
lret
repnz
fucomi
icebp
add
push
cmpsl
dec
js
pop
xor
xchg
jbe
roll
imul
jns
into
fs
jno
stos
fmulp
les
fpatan
test
test
pop
xchg
or
lds
mov
sbb
sub
mov
orb
sub
dec
sbb
in
jmp
clc
sbb
xlat
mov
or
movsb
sarb
sbb
sub
or
popa
cwtl
sti
lcall
jo
lret
mov
fcoml
xchg
fcmovnb
xchg
mov
mov
and
mov
push
rorl
adcl
mov
cmp
sub
xor
push
insb
ss
cmp
xchg
mov
mov
xchg
loopne
loopne
sub
xor
inc
int
mov
dec
loop
mov
aas
repz
movsb
rcr
imul
jne
cltd
adc
push
xchg
inc
shrl
out
mov
incb
add
mov
inc
mov
mov
ja
xor
lret
fwait
cmp
insb
ret
push
mov
movsb
jne
pop
jp
imul
cld
xchg
fisubl
repz
mov
test
les
jg
aam
mov
mov
stc
insl
and
sub
jle,pt
and
std
mov
enter
or
cmc
lahf
mov
jge
sahf
and
mov
xor
pusha
movsl
jns
jmp
sbb
mov
xchg
sub
int3
mov
daa
gs
push
lods
in
lds
das
cmp
andb
push
pop
mov
data16
fisubl
subb
mov
mov
jno
mul
sub
sbb
mov
cmc
sti
cmp
pop
ret
stc
incl
loope
and
push
inc
popf
add
mov
das
stos
cmp
cli
mov
imul
jecxz
mov
fyl2x
push
dec
pop
adc
push
insb
daa
sbb
pop
push
mov
pop
sbb
cli
pop
adc
outsb
js
ffreep
lea
icebp
inc
mov
push
jb
lahf
sub
or
add
push
sub
inc
cmpl
scas
lds
mov
mov
lret
leave
scas
loope
cmp
mov
jecxz
mov
sbb
int3
data16
dec
lret
mov
dec
xor
sub
mov
int
xor
adc
jg
inc
inc
cmp
inc
sahf
int
lahf
test
push
lods
cld
jno
leave
mov
pop
movsb
sub
add
out
ss
cmp
pusha
out
mov
xchg
push
push
jno
add
imul
pop
xor
shll
lcall
repnz
jnp
and
mov
xchg
ja
push
mov
and
imul
mov
adc
jno
jbe
insb
or
out
fnstcw
lock
mov
sbb
aad
enter
sub
push
pop
ret
sub
sarb
imul
adc
add
or
les
ljmp
shlb
popf
lret
movsb
movsb
inc
push
test
inc
ljmp
mov
fsts
cmpsb
sbb
scas
lret
xchg
inc
lods
imul
xor
xchg
lahf
and
pop
jne
out
adc
es
prefetchwt1
stc
mov
stc
pop
lcall
jl
xchg
push
rorl
loope
push
ja
sbb
and
add
scas
iret
fwait
cli
mov
inc
push
ss
shl
lea
pop
push
nop
insb
outsl
rorb
mov
add
mov
aas
push
jne
sub
adc
cmc
cmp
fisttpll
jmp
and
xchg
push
push
inc
mov
xlat
inc
push
push
cmp
xor
cli
popf
into
mov
mov
jo
sbb
mov
pusha
outsl
xor
dec
je
arpl
mov
movsb
das
data16
and
mov
hlt
test
cmp
push
xchg
sbb
xchg
xchg
xchg
fdivl
mov
frstor
out
and
in
jg
add
mov
into
punpckhwd
mov
xchg
sub
fwait
sub
aam
ret
jnp
call
jns
mov
icebp
ss
xchg
test
mov
lods
fsubrl
pmaddwd
cmp
mov
fs
cmp
das
sbb
pop
sbb
fucomp
adc
pop
inc
mov
lret
ret
cmpsb
out
fchs
dec
push
mov
std
pop
mov
shll
and
sbb
cmp
cmp
inc
iret
ret
enter
xor
pusha
xchg
push
add
repz
hlt
and
or
cwtl
mov
mov
xchg
popf
arpl
mov
xchg
ja
into
sub
xchg
jno
lods
cmpsb
popf
loopne
lods
add
jp
stc
mov
cmp
call
int3
imul
push
fnstcw
cltd
adc
pop
jbe
adc
sbb
sub
jle
and
add
popl
xor
rclw
lcall
pop
jge
cmp
sarl
mov
inc
scas
stos
inc
jb
and
fsubrl
cs
into
aas
fwait
sub
pop
pop
adc
sub
sub
cmp
rclb
add
cmp
xchg
xchg
add
push
outsl
mov
loope
fstl
testl
adc
ret
cmp
jge
xor
jo
xchg
movsl
addr16
adc
cmp
sbb
nop
mov
mov
addr16
push
push
fwait
ss
cmpsb
lahf
ret
bound
mov
sahf
add
mov
loope
push
mov
loope
xchg
xor
xor
test
xlat
xchg
push
jae
mull
push
push
adc
popf
ret
cmc
sub
sub
cli
sbb
adc
xchg
push
xlat
jle
mov
rol
jecxz
int3
sub
mov
cli
sahf
fdiv
popa
out
add
scas
out
repz
push
jbe
mov
xchg
popf
jmp
enter
shll
ljmp
cld
gs
xor
pop
jbe
sbb
push
pop
push
test
aad
test
daa
dec
mov
loopne
jnp
outsb
rcrl
loopne
cli
mov
or
test
shlb
jmp
pop
jnp
cwtl
mov
rol
mov
mov
lods
nop
push
mov
mov
das
jg
push
inc
mov
adc
aam
ljmp
add
mov
sbb
imul
or
fwait
mov
and
aam
cmp
xchg
pxor
sarl
andl
mov
ja
jne
ret
in
mov
scas
mov
adc
xchg
mov
les
push
mov
cwtl
mov
lds
sbb
aad
and
andl
cmp
mov
aas
mov
enter
jg
mov
xchg
or
in
fadds
mov
clc
jecxz
cmp
jae
jle
adc
leave
adc
xor
and
push
xchg
mov
pop
enter
popa
addr16
fidivs
aam
iret
int3
or
cmp
mov
inc
fdivl
out
add
out
test
push
cli
fwait
pop
outsb
fwait
dec
sbb
pop
das
inc
adcl
cs
aas
jns
mov
jbe
pop
and
mov
jp
and
dec
push
pop
rcl
rcll
andl
inc
sbb
sbb
fwait
sbb
adc
sub
xor
test
mov
scas
adc
push
pop
jp
addr16
inc
test
aas
mov
in
lds
and
cmpsb
sbb
pop
mov
mov
or
gs
mov
out
push
push
add
adc
loop
mov
aas
jne
icebp
and
mov
jl
jle
jb
daa
sub
jmp
call
dec
push
sbb
mov
or
aad
cmp
aam
loop
rol
loope
cmp
push
push
popa
adc
and
lret
movsl
inc
adcw
out
icebp
cmp
das
pop
fnstenv
mov
roll
outsb
pop
stc
in
xchg
lahf
xchg
outsb
outsl
jp
cmp
cmpb
xor
imul
std
jno
mov
ljmp
sub
adc
je
push
pop
xor
popa
adc
lret
jl
ficoml
mov
cmpsl
lcall
movsb
adc
fdivl
xor
push
inc
scas
enter
or
push
jno
xor
rcl
jl
rcll
movsb
xor
adc
int3
shll
add
and
pop
mov
out
or
xchg
stos
cwtl
dec
xor
das
jmp
adc
jecxz
pop
mov
inc
jecxz
stos
xchg
enter
xchg
jbe
jae
xor
push
inc
mov
test
ret
sub
mov
cmp
xchg
dec
lcall
adc
pop
sbb
push
mov
fldl
daa
test
xchg
inc
hlt
orl
pushf
mov
sbb
xor
cmp
mov
xor
pop
pop
lods
and
jbe
std
add
and
sbb
adcb
dec
mov
xor
mov
jae
lods
test
fisttpll
sbb
sbb
push
xor
lcall
adc
sub
push
mov
and
pop
and
movaps
inc
cmp
xlat
adc
cltd
hlt
dec
sub
fs
fmull
push
repz
pop
jmp
pop
aam
cs
inc
ret
pop
add
dec
jns
fisttps
movsl
in
cmp
sbb
int
fsubrs
test
mov
add
stos
scas
lret
sub
jge
mov
dec
fsubrp
fdivrp
dec
cltd
fstl
cmp
addr16
movsl
push
or
mov
push
out
enter
cmp
popa
xlat
push
popa
sbb
icebp
xchg
jb
sbb
adc
inc
xlat
xchg
adc
imul
loop
jecxz
mov
subb
stos
cmp
movsb
pop
lahf
mov
arpl
cmc
dec
mov
pop
sub
xor
fisubl
aaa
je
clc
sbb
add
roll
out
rcrb
pop
push
xchg
nop
sub
push
xchg
sbb
mov
and
jp
popf
jnp
lcall
std
imul
push
aas
cwtl
sub
std
dec
gs
aaa
push
aas
xlat
fisubrs
xchg
lods
addr16
xlat
pop
std
fwait
push
mov
pop
in
pop
jo
mov
or
sbb
cmp
mov
mov
iret
pop
repz
xlat
cmp
sbb
and
insl
jg
orb
ret
sbb
push
push
arpl
cs
shlb
jmp
int3
mov
cld
xchg
push
icebp
ljmp
push
inc
jae
nop
push
repz
call
rorl
ss
mov
xchg
push
loop
out
inc
cltd
rolb
out
fistpll
push
sub
ja
in
addb
sub
lock
stc
icebp
scas
das
jmp
fcmovnbe
dec
sar
out
jle
fsubs
cld
and
aas
fs
adc
pop
add
in
in
mov
or
xor
cmp
jno
or
loopne
add
sbb
std
mov
leave
mov
lock
jne
xchg
idivl
stos
inc
add
lret
iret
ds
sbb
lcall
cmpsb
push
pop
mov
inc
nop
fwait
es
mov
cmp
push
popa
add
pop
jle
jle
lea
ljmp
sub
xor
push
je
xchg
testb
mov
outsl
push
mov
divl
stc
sbb
int3
arpl
or
mov
add
sti
jle,pt
push
jae
lret
scas
dec
inc
or
leave
test
jmp
pusha
data16
push
lret
es
adcl
es
add
mov
movsb
in
out
mov
shlb
mov
repnz
xchg
sbb
test
jl
enter
pop
and
mov
dec
xchg
sbb
and
push
cmc
adc
jecxz
dec
adc
sbb
add
mov
adc
out
xchg
cmp
inc
mov
mov
or
dec
loopne
lret
push
push
mov
aas
lods
in
inc
mov
cmc
in
cmpsb
dec
or
insb
cmpl
ljmp
daa
mov
inc
out
mov
lods
or
jo
xor
push
adc
sbb
add
lahf
mov
aaa
rorl
sti
and
std
xor
leave
je
sbb
or
clc
loop
cli
sub
int
test
and
push
shll
les
cmp
sub
mov
mov
hlt
loope
jg
adc
pop
movsl
lcall
ret
aam
andl
jmp
stc
in
stos
jb
into
repz
mov
inc
mov
jb
adc
sti
mov
cmp
cld
inc
fbld
xor
sub
pop
mov
dec
in
movsl
outsb
outsl
out
repnz
mov
das
add
or
enter
mov
sub
ret
push
fwait
mov
add
push
mov
cltd
je
les
mov
in
idivb
jae
add
fldenv
mov
cmpsb
gs
xor
inc
mov
add
inc
outsl
bound
dec
lods
addb
push
sbb
sbb
adc
incb
push
push
jge
sub
popa
ret
out
mov
sub
sub
ret
jl
repnz
in
insb
jmp
adc
sub
mov
xorb
das
mov
clc
aad
stos
xchg
scas
or
sub
pop
xchg
jecxz
sbb
add
pop
sub
xchg
xchg
pop
ret
loop
cmpsl
or
leave
pop
daa
sub
int
lcall
adc
in
adc
xlat
and
or
test
adc
pop
enter
jl
push
insb
jl
adc
iret
mov
dec
pop
rcrb
enter
fcom
pop
sti
cmp
mov
rclb
imul
fadd
in
mov
mov
push
xor
outsl
sti
shrb
pushf
push
lret
xor
int3
sbb
dec
or
mov
inc
lret
push
mov
mov
fiadds
js
pushf
jge
jle
popa
int3
negl
mov
das
add
scas
adc
daa
xchg
mov
adc
lods
adc
xor
sub
addl
fadds
xor
cmp
inc
adcb
mov
popf
int
les
or
dec
cmp
out
stc
int3
mov
loope
sbb
lcall
mov
mov
sbbl
mov
adc
xchg
sbb
ss
pop
negb
or
sbb
ret
sar
cmp
lcall
in
lea
lods
shl
bound
aaa
push
mov
jae
lods
jp
xchg
jge
call
addr16
pop
daa
jl
fsts
push
aaa
or
rol
pop
xor
fcoms
lret
dec
scas
mov
adc
and
popf
add
les
repnz
push
dec
dec
or
fdivl
and
sbb
xchg
sub
cld
or
sbb
mov
aam
xlat
in
mov
sbb
leave
mov
arpl
inc
stos
jne
mov
and
fidivl
dec
mov
fistpll
in
adc
mov
xor
push
sbb
jns
dec
xor
iret
jge
mov
push
cmp
mov
je
sbb
cmp
or
cmc
jno
int
xchg
mov
ret
int3
jne
data16
pop
push
imulb
inc
pop
cmp
nop
js
dec
fnstcw
call
in
xchg
test
cld
sbb
cwtl
ficomps
sub
in
pop
mov
lcall
jecxz
mov
mov
and
je
enter
aaa
fwait
in
pop
push
out
bnd
loop
mov
mov
lret
xchg
push
xor
and
shrl
add
add
cmp
push
mov
xor
popf
les
repnz
lea
add
sbb
je
iret
ja
test
outsl
add
pop
or
inc
mov
mov
push
scas
pop
fldcw
jle
adc
loopne
mov
das
mov
dec
jae
dec
mov
push
subb
aas
pop
int
adc
imul
push
scas
dec
xor
out
cmpsl
lret
or
xor
mov
push
jbe
jge
sub
or
dec
mov
js
sti
jge
xor
inc
cwtl
nop
hlt
nop
imul
or
aaa
rol
or
push
fldl
rcrb
dec
fldcw
shl
jo
stos
jns
push
rcll
and
sarl
daa
test
out
push
fcomp
fnstcw
and
hlt
roll
jno
enter
xlat
std
mov
mov
iret
xor
xchg
jno
stc
int
mov
out
mov
sub
mov
pop
jecxz
clc
mov
clc
clc
pushf
adc
testb
pop
cld
cs
aaa
cmp
outsl
shlb
ficomps
stc
les
ret
fistps
jbe
std
cli
xor
and
mov
stos
sahf
sub
cld
inc
aaa
hlt
and
and
push
das
outsl
sub
cmpsb
sub
es
daa
mov
jno
sbb
out
jae
icebp
flds
mov
and
mov
mov
sbb
fistl
enter
scas
xor
lahf
jae
rcll
adc
mov
adc
rolb
push
jne
jbe
nop
inc
in
shr
mov
stos
xchg
jns
sti
push
in
jns
movsl
or
loope
cmpl
xor
aam
cld
scas
loope
push
das
mov
inc
jmp
jns
aas
dec
cmp
mov
jbe
sub
popa
xor
in
push
ss
xchg
pushf
push
inc
insb
mov
repnz
fcomps
scas
mov
outsl
xchg
and
mov
nop
jne
pop
jecxz
cmpb
pop
jle
ret
addr16
sti
or
or
rolb
sahf
sbb
sbb
gs
xor
rcrb
and
inc
lcall
test
jecxz
fildl
mov
push
jb
dec
jbe
pop
dec
rcll
lahf
pop
push
sbb
inc
mov
in
push
stos
test
cmc
es
orl
jle
es
or
cld
jl
lods
mov
xchg
mov
lret
mov
lods
mov
outsl
mov
sbb
ds
pxor
sbb
pop
xchg
jne
add
sub
in
scas
inc
into
jecxz
mov
int
sbb
xor
ja
es
in
cltd
push
mov
addb
hlt
adc
adc
push
mov
fidivs
mov
daa
mov
push
ss
repz
addb
adc
mov
mov
mov
jg
mov
push
push
mov
ret
fsubrl
dec
lret
inc
mov
in
shll
incl
pop
fbstp
in
cmc
jge
inc
cwtl
fildl
dec
and
pop
mov
test
push
and
sub
subps
sbb
jnp
in
dec
fbstp
xor
pushf
adc
rcr
mov
data16
stc
dec
repnz
dec
rolb
pop
and
push
pop
push
jb
shll
dec
ljmp
ja
ss
add
adc
lahf
test
jae
push
popf
movsl
dec
aas
mov
loop
cmp
push
into
xor
jne
mov
mov
jns
je
mov
xchg
adc
popa
push
out
addr16
rcr
add
fisttpl
mov
sarl
jge
lea
push
ss
insb
iret
add
xchg
xchg
faddl
or
xchg
adc
ficoml
sbb
and
test
push
push
ret
push
adc
pop
cmpsb
idivb
sub
add
add
xchg
test
cwtl
or
pop
js
add
mov
jae
pop
testl
insl
pop
mov
push
aaa
or
dec
ret
push
and
fldcw
xchg
sub
icebp
lock
cwtl
shr
mov
shr
mov
adc
xchg
xor
notl
popa
shrb
enter
dec
jno
movsl
fisttps
add
ds
dec
test
add
mov
pusha
cltd
lret
popw
out
mov
addr16
gs
sub
add
fmull
cmp
test
add
icebp
xor
push
testl
loope
xor
mov
push
jmp
xchg
cmp
or
clc
jecxz
and
mov
or
xchg
push
orb
into
or
dec
push
inc
dec
push
jb
test
pop
xor
xchg
add
mov
mov
add
xchg
or
lock
sub
popa
mov
test
stos
add
das
adc
dec
sub
fstpl
sub
or
fistpll
stos
sarl
lea
jo
xor
js
dec
scas
in
fbld
cmp
jnp
shll
push
roll
mov
xchg
mov
ret
xchg
add
ds
in
sub
sbb
data16
pop
mov
in
pop
jl
mov
add
mov
js
sbb
stos
dec
and
push
inc
mulb
cwtl
or
push
fsts
test
movsl
mov
std
xor
xor
jl
pusha
push
loopne
push
fnstcw
arpl
mov
pop
jl
inc
dec
push
and
imul
or
les
test
roll
lds
lahf
adc
push
push
loop
stos
cwtl
dec
and
dec
mov
xchg
aad
dec
ja
cmp
push
bound
cltd
leave
and
mov
lcall
test
mov
mov
pop
mov
dec
jl
test
dec
repnz
mov
and
dec
dec
or
outsl
outsl
dec
add
xor
mov
daa
xor
lret
jle
sbb
or
adc
cli
out
jmp
bswap
js
pinsrw
adc
xchg
cmp
xchg
dec
popa
push
repnz
pop
jl
aam
mov
dec
jle
mov
mov
lods
or
out
in
sahf
cmpsl
stc
aaa
out
jb
aam
cmpsl
pop
jb
in
jns
sahf
xor
ret
pop
dec
iret
dec
sub
xor
outsb
gs
mov
into
outsb
push
mov
lock
dec
lahf
push
sbb
mov
add
addr16
bound
mov
mov
or
jge
cld
add
sti
pop
sub
jb
push
imul
nop
int3
les
mov
sub
movsb
mov
lock
fcmovne
jp
inc
leave
outsb
cmp
lods
inc
jmp
sbb
ss
mov
rorb
and
das
mov
aas
test
repnz
inc
lret
adc
in
lret
push
fcmovnb
push
lock
hlt
jae
decb
mov
out
shr
pusha
adc
cmpsb
gs
pop
mov
pop
xchg
mov
xchg
jne
mov
mov
iret
pop
dec
insl
mov
xor
xchg
scas
or
jo
fldenv
sub
imul
loopne
in
inc
es
sub
mov
movsl
jl,pn
js
mov
cmp
lret
iret
cmp
mov
mov
pop
xor
lret
cwtl
or
sbb
orl
jge
mov
and
test
mov
mov
pop
ret
das
pop
mov
daa
xchg
mov
adcl
mov
cmp
jg
sbb
inc
xor
dec
iret
ja
jb
test
mov
inc
aam
push
outsb
lock
loopne
es
imul
dec
inc
addl
and
jo
sub
xchg
jbe
orb
jne
mov
push
mov
sbb
cld
sti
adc
cld
int3
mov
popf
repz
and
adc
xchg
cmp
jmp
inc
mov
les
xchg
or
and
mov
les
cmp
std
mov
cltd
repz
bound
js
test
sbb
jp
inc
adc
jae
iret
mov
mov
xchg
xor
cmp
outsb
pop
pop
sub
ss
mov
js
or
push
mov
cwtl
icebp
mov
shlb
mov
jo
or
std
leave
push
les
or
imul
sbb
add
aaa
leave
lods
call
add
pop
stos
shlb
xchg
jns
sub
out
cmp
mov
mov
and
ja
ss
fstpl
test
repz
adc
out
dec
ror
inc
das
pop
xchg
xor
mov
add
in
jno
pop
aas
daa
cmp
fwait
sar
daa
inc
jg
iret
xchg
inc
sub
xor
mov
lock
sti
js
inc
jecxz
pushf
sub
xchg
jg
jmp
mov
fwait
push
dec
mov
lods
ja
push
inc
bound
fucomip
sbb
push
xlat
mov
fdivrs
xor
xchg
push
mov
frstor
push
scas
scas
sbbb
add
fidivl
in
cmp
sub
mov
ret
fcoms
stc
movsb
xor
mov
scas
fsts
mov
push
jl
and
dec
mov
sahf
or
test
mov
xorb
dec
sub
repnz
negl
pop
jmp
in
ror
mov
arpl
pusha
push
test
fdivs
lret
mov
xchg
shlb
aad
pop
cmp
lea
cmp
lahf
out
push
rorl
xor
or
or
push
adc
popa
out
rorl
in
mov
xchg
push
pop
mov
andb
insl
adc
push
inc
and
rcrl
mov
mov
xchg
mov
sahf
mov
pop
orl
hlt
xorl
scas
mov
inc
xchg
nop
orl
call
js
xchg
or
push
jno
insl
sbb
xor
adc
dec
shl
inc
outsb
lods
test
loopne
fneni(8087
ret
rcr
mov
cs
or
movsb
repz
mov
adc
inc
addr16
mov
sar
mov
dec
jle
shll
mov
add
aad
sub
jmp
add
adc
lret
mov
les
inc
lret
xchg
xor
xor
ja
test
les
pop
push
adc
push
fcoml
add
je
bound
mov
and
sti
lcall
pop
imul
in
outsl
dec
xor
add
adc
mov
ljmp
cmp
adc
sbb
add
rorl
pop
push
cmp
outsl
mov
jne
pop
jb
ja
jnp
push
sbb
sub
pop
cmp
jne
aaa
int3
cmpb
aas
push
je
pop
xchg
or
lcall
add
insl
jns
pop
in
fsubr
popa
xor
imul
push
loope
add
int3
mov
jnp
test
fcomp
ds
stos
scas
lret
sbbb
imul
xor
mov
cld
sbb
push
mul
jo
leave
sbb
sarl
movsb
jge
aaa
lds
fs
inc
scas
ja
lods
out
add
lret
dec
daa
and
in
dec
add
pop
rclb
and
popa
aaa
je
mov
fwait
push
cmp
xchg
test
xor
das
mov
and
sub
xchg
push
inc
adc
mov
push
outsl
sbb
inc
aam
lret
and
subb
out
cmp
shll
mov
inc
xchg
pop
push
ss
fildl
pop
js
sub
fnstsw
jp
lea
test
arpl
inc
fisttpl
mov
inc
es
inc
pop
push
mov
mov
fmuls
pop
sub
and
or
insl
add
add
cmp
ds
cmc
pushf
adc
cltd
sbb
dec
mov
fwait
test
stos
fisubl
and
jae
push
adc
cmpsb
cwtl
stos
sbb
xchg
adc
lds
clc
test
sub
aam
dec
mov
jg
popa
dec
cli
mov
ljmp
mov
leave
xor
sahf
sub
mov
fwait
rorl
xor
daa
or
dec
add
and
test
xchg
cmpl
das
xchg
mov
cmc
pop
aad
outsl
jle
test
jbe
inc
scas
or
sti
pop
sarl
stos
ret
mov
pop
shlb
xor
inc
push
andb
add
fiaddl
or
aas
mov
xchg
mov
mov
lock
xor
stos
je
xchg
test
mov
fsubrp
mov
dec
sbb
dec
xchg
push
or
pop
out
push
lea
cmp
inc
mov
imul
icebp
jnp
xchg
clc
stos
stos
test
ds
imul
sbb
lret
pop
xlat
mov
push
mov
or
jle
xlat
rcl
das
push
lods
insb
and
mov
xchg
icebp
lcall
sbb
add
pop
mov
xchg
push
sbbl
hlt
xor
inc
fisubs
lock
add
test
out
ljmp
dec
lds
mov
in
outsl
outsb
mov
ret
sbb
ret
pop
mov
jne
mov
add
pop
jb
stc
dec
in
add
mov
clc
aad
inc
sub
cld
aaa
mov
xchg
jo
adc
outsb
push
mov
pop
aaa
add
popa
arpl
mov
aaa
dec
dec
stos
cmp
lods
stc
out
push
xlat
dec
arpl
ljmp
ja
pop
mov
insl
pop
gs
iret
inc
roll
bound
iret
pop
test
sub
stos
jg
sti
push
push
xchg
or
mov
cmp
ror
ret
into
and
cmp
pop
jne
scas
out
lods
xchg
roll
sub
pop
push
aas
loop
adc
sub
xchg
pop
rorl
xlat
ss
add
aad
jle
pop
dec
aas
add
in
sbb
orl
btr
in
cmp
jno
in
jmp
stos
add
mov
in
repz
loope
jbe
imul
rcrb
adc
cmp
dec
mov
or
out
lods
sti
push
leave
xor
fnstcw
pop
lods
push
xor
cltd
xlat
fstl
sub
bound
mov
addl
xor
or
push
pop
mov
xor
lds
sub
cmc
shrb
lds
icebp
std
push
mov
icebp
in
pusha
rcl
mov
bound
repnz
xchg
in
hlt
ds
pushl
popa
push
mov
pop
test
gs
adc
adc
jecxz
test
mov
or
xor
leave
sub
movsl
std
inc
cld
xor
mov
movsl
fsubrl
xchg
outsl
iret
in
fs
movsb
and
mov
in
sub
pop
adc
sahf
inc
mov
gs
dec
add
add
mov
push
adc
fcoml
jo
add
test
mov
in
xchg
push
pop
in
or
mov
adc
sbb
pop
xor
stc
hlt
imul
and
subb
mov
mov
loop
imul
jecxz
and
adc
int
lds
popa
popf
adc
sub
movsl
in
pop
mov
pop
cltd
mov
xor
add
mov
xor
or
insl
out
sbb
daa
jno
out
imul
mov
imul
xchg
xor
push
insl
clc
xchg
cmp
pop
aaa
xor
push
aam
int3
push
jle
jb
or
jge
mov
jmp
rcll
adc
mov
push
lea
mov
push
push
add
int
fidivl
jecxz
mov
mov
cmpsb
adc
jmp
scas
in
sub
pop
divb
pop
pop
sub
and
scas
mov
scas
sub
mov
pop
jbe
dec
lahf
lea
out
xor
xchg
dec
mov
inc
xor
lret
das
ret
sbb
fisubrs
fucomip
cltd
shlb
cs
pop
sbb
pop
movsb
xchg
mov
inc
cmp
cmp
fwait
add
cwtl
jle
call
ret
add
out
leave
orl
cmp
pop
xchg
shll
mov
fistpl
jge
xchg
pop
int
add
leave
xchg
push
fistl
fwait
mov
dec
or
fcmovnbe
xchg
xchg
test
aad
or
shlb
cli
pop
mov
xchg
jno
shll
push
push
jb
jns
jp
ret
pop
xchg
inc
mov
popa
jo
cmpsb
popa
pop
in
fcmovbe
inc
inc
xchg
jns
test
jne
xchg
push
xchg
mov
jl
bound
andl
imull
sbb
call
leave
push
xor
pop
mov
adc
xchg
mov
iret
jle
in
neg
and
movsb
jae
imul
xchg
js
adc
xchg
sbb
es
std
cmp
icebp
shr
lahf
jle
pop
or
ret
mov
push
xchg
add
mov
test
or
push
out
into
pop
or
push
repnz
scas
les
xchg
mov
mov
pusha
rcrl
or
jmp
aas
lret
sbb
ss
shr
out
mov
cli
repz
cmp
mov
rcr
mov
in
dec
pop
stos
leave
fdivl
inc
and
lods
inc
cli
push
mov
in
stos
xchg
fwait
dec
jecxz
popf
notl
testb
pop
repnz
mov
sti
es
jge
mov
mov
and
loop
sbb
addr16
pop
push
mov
subb
leave
fistl
pusha
out
sbb
jp
push
sbb
push
daa
sarl
cmpb
int3
cmpsl
inc
out
and
rorb
adc
jle
dec
pop
xlat
lods
dec
loop
les
popf
out
mov
inc
cmpsl
lret
push
xchg
out
add
nop
arpl
mov
arpl
inc
movsl
pop
xor
fisubrl
add
mull
decl
cmp
cwtl
repnz
push
lahf
xchg
lret
clc
divb
jb
cwtl
and
shll
jb
xchg
push
in
pop
sbb
xor
mov
cmc
inc
jns
jne
lds
mov
in
push
pop
jne
lea
mull
mov
pushf
pop
jge
lret
adc
dec
and
or
jmp
jno
add
pushf
sti
fistpl
xor
dec
or
out
pop
into
addl
mov
outsl
xlat
or
sub
lahf
pop
mov
popa
insb
in
shll
mov
xchg
fdivr
in
or
xor
sbb
mov
repz
mov
and
mov
dec
cltd
push
repnz
jg
ljmp
gs
cmp
stos
push
push
sti
xlat
jle
dec
jnp
into
jmp
pop
jb
sbb
mov
jecxz
mov
push
push
aad
dec
loope
insb
or
sbb
push
sbb
dec
add
fists
dec
push
xor
xchg
or
clc
ja
add
popf
mov
mov
sub
xorl
add
popl
lea
aad
ja
das
pop
das
lods
xchg
lods
push
call
inc
movsl
inc
pop
dec
mov
lahf
cmp
push
stos
sahf
inc
insl
dec
fldl
cmp
shrb
jnp
andb
xor
out
mov
arpl
push
je
sub
stos
jle
cmp
fcmovnbe
add
or
sti
adc
pop
ds
mov
pop
pop
xchg
test
jmp
fldenv
cmpl
jnp
cmpsl
test
ret
mov
adc
adc
out
jge
jp
out
bound
jmp
movsb
icebp
loope
pop
sbb
add
shll
into
push
int
pop
in
insb
mov
imul
jns
cs
psubusw
xor
int3
cmp
xor
or
out
and
dec
stos
xchg
addr16
inc
insb
jmp
mov
rcrb
dec
jp
adc
inc
add
das
orl
or
mov
cli
fldl
jl
cli
sbb
dec
dec
sub
std
incb
jmp
stos
inc
lcall
cmp
mov
fistps
bound
add
push
lret
xor
mov
jo
repnz
stc
mov
jl
jp
mov
pop
sbb
adc
and
fsubs
pop
loopne
cmp
pop
mov
sub
inc
outsb
adc
popa
adc
int
adc
mov
stos
lret
and
adc
test
pop
movsw
add
inc
orl
push
add
and
iret
shr
inc
leave
dec
fbld
pop
mov
sahf
inc
jp
sti
pop
xchg
ret
mov
lods
aas
popa
rolb
mov
stc
dec
adc
and
fs
push
fdivs
mov
aas
dec
mov
cmp
fldcw
andl
cmp
push
stos
inc
xor
loopne
cmp
mov
or
stos
clc
int
test
sbb
rclb
repnz
xchg
mov
pop
ds
sub
adc
pop
dec
aas
pop
jae
fnstenv
sub
push
mov
sbb
fisubl
adc
int
cwtl
rcr
ret
rcr
popf
pop
mov
out
in
jle
aas
adc
cltd
stc
xchg
movsl
push
ja
xor
sbb
jo
adc
mov
and
adc
inc
push
test
pop
fimuls
test
fwait
insb
add
ljmp
inc
or
ds
mov
int
out
xchg
mov
shl
inc
and
in
pop
jne
cmp
push
mov
push
sub
arpl
sbb
inc
push
jl
pop
jnp
ds
pop
jne
adc
sbb
test
mov
movsb
cmp
jmp
sub
aaa
xchg
add
xlat
xchg
mov
movsb
in
cmp
jg
dec
insb
pop
lock
and
mov
xchg
or
cmp
push
xchg
outsb
and
test
jae
xchg
jecxz,pt
daa
or
lds
sbb
cmpsl
cld
lcall
repz
test
sub
loope
les
lods
or
jge
xchg
stos
filds
cmp
sbb
clc
xor
arpl
or
repnz
xchg
push
jecxz
addb
fcomps
pop
add
xchg
mov
fmull
pop
adc
inc
jp
xchg
lds
cli
sarl
lods
xor
outsb
xchg
pop
mov
int3
inc
cmp
test
mov
jno
sub
in
cmpsb
mov
sbb
push
jns
add
jns
xor
jp
aad
sahf
imul
loopne
out
test
ficoml
add
adc
push
rolb
or
mov
shlb
and
mov
ja
or
sbb
cmpsl
pop
push
mov
xchg
je
push
outsb
ja
and
inc
push
jp
gs
adc
sbb
bnd
pushf
push
xlat
rcl
jl
push
mov
imul
add
shll
fwait
mov
rorb
nop
push
shrb
push
loopne
jle
inc
es
shrl
loop
dec
xor
clc
inc
addr16
jmp
inc
vpmaxub
pop
int3
rclb
js
jo
stos
push
shlb
jecxz
in
leave
pop
movb
push
lods
push
dec
lods
cmpsb
xchg
in
push
and
mov
mov
cs
test
or
and
movsb
dec
lret
pushf
adc
mov
push
jno
leave
sub
add
jle
pop
push
into
push
xchg
sbbl
xchg
push
test
push
pop
scas
and
insb
not
scas
mov
xchg
lods
insb
adc
lock
imul
add
gs
ljmp
das
jo
cwtl
decb
es
ds
pop
int3
mov
xchg
sub
mov
jbe
mov
mov
or
fldt
lods
inc
sbb
xor
push
sbb
add
mov
mov
push
popa
mov
out
test
mov
and
filds
pop
cli
ljmp
xlat
ret
ret
rolb
dec
data16
pop
xchg
xor
mov
into
outsb
arpl
sarl
jb
insb
fcmovbe
xchg
das
mov
loopne
fsubs
inc
xlat
xlat
lods
add
xchg
lahf
and
gs
ret
divb
shl
push
test
pop
js
mov
push
adc
pop
sub
out
or
es
sbb
sub
out
xchg
sahf
mov
sbb
and
outsb
fisttps
xchg
jns
ljmp
sub
ja
pop
cmc
inc
add
fs
outsl
in
rcrl
jecxz
mov
push
dec
int3
sbb
dec
movb
bound
dec
daa
sub
and
aas
sub
jmp
xor
repz
enter
imul
dec
into
push
aam
shlb
enter
lea
add
pop
inc
inc
movsl
dec
adc
add
es
in
xor
cli
adc
inc
jo
movsb
jbe
mov
jmp
mov
movb
lret
addr16
movsb
das
pushf
push
mov
cmp
cmp
mov
stc
mov
xor
test
orl
add
cmpsl
aas
xchg
enterw
xchg
cmp
mov
add
mov
cmp
lret
aaa
andl
sbb
pusha
fs
outsl
lds
push
inc
cmp
in
stos
andl
inc
out
add
pushf
pop
cmp
push
in
push
lret
jbe
cmp
add
pop
sar
mov
jg
movsl
mov
mov
test
push
mov
shl
addr16
jb
hlt
jmp
jge
bound
sub
fucomp
fisubs
fnstenv
mov
pop
shlb
mov
arpl
test
push
sar
xchg
iret
sbb
lods
sub
pusha
cli
pop
cli
sahf
inc
jno
cwtl
push
mov
pop
adc
pusha
mov
decl
jns
es
stos
shrb
lock
loope
dec
hlt
sbb
adc
lret
sbb
cmp
dec
jle
ljmp
ljmp
inc
bound
loope
jl
mov
dec
cmpsb
clc
pop
clc
out
fwait
xchg
cmpsb
or
or
xorl
aad
stc
and
pop
subl
inc
cld
jg
inc
fistl
dec
rol
movl
push
and
jmp
push
lods
xor
call
xor
lods
sbb
imul
push
adc
std
mov
ffree
mov
and
in
subl
mov
call
inc
rolb
fucomi
sbb
arpl
out
rcll
pop
imul
jbe
xchg
ss
xorl
mov
in
and
divl
adc
adc
or
shlb
popf
sub
popf
ss
vmovaps
pop
mov
mov
bound
call
or
push
mov
add
shll
add
mov
lods
clc
sbb
mov
sub
scas
ret
outsl
push
out
sti
mov
xor
mov
xchg
fistpll
xor
jecxz
sub
xchg
jb
sti
pop
xchg
jp
ss
add
aad
mov
jno
hlt
rorb
popf
adc
ret
sbb
fisttpll
mov
xor
in
lods
inc
sub
mov
xor
lret
pusha
das
pop
add
out
mov
ljmp
mov
aas
arpl
hlt
aad
stos
xchg
leave
sub
popa
mov
lods
outsl
and
or
movsl
stc
outsl
or
add
dec
enter
add
shll
xor
xchg
cmp
ficompl
xchg
bound
jmp
stos
les
sbb
mov
adc
hlt
dec
inc
pusha
and
push
pop
in
addb
jb
fsubrl
les
leave
push
mov
pop
mov
popa
push
iret
fcoms
lret
push
mov
push
mov
int
in
jg
aam
xchg
out
adc
bound
in
jne
into
push
adc
fnstcw
int3
xchg
loopne
cmp
outsb
pushf
ja
std
inc
inc
xchg
xchg
sub
aad
divl
jo
cwtl
push
les
push
jecxz
les
inc
pop
cmpsl
outsl
cld
gs
mov
mov
popa
cmp
push
pop
mov
out
lds
xor
test
aam
xchg
fxch
fdiv
and
jg
testw
outsl
cmp
jmp
in
push
nop
fisubrs
stos
stos
ja
sbb
xchg
push
xchg
add
je
pop
dec
addr16
sub
in
mov
and
mov
arpl
sbb
mov
jl
mov
outsb
mov
int3
push
mov
out
loope
push
adc
lcall
adc
mov
jnp
js
sbb
sbb
std
enter
or
push
clc
cld
rol
out
xchg
mov
cwtl
mov
push
push
loope
mov
sub
jb
neg
cmp
adc
mov
cmp
daa
push
inc
jns
arpl
gs
push
rcr
adc
inc
jno
dec
pushf
mov
or
stc
cmc
push
jmp
sbb
fst
out
insb
inc
stos
out
cmp
out
push
rorl
push
mov
test
cwtl
or
and
adc
lods
cs
mov
sbb
adc
dec
jp
fldenv
rcrb
icebp
loop
fiaddl
call
push
mov
or
push
mov
lods
pop
pushf
xor
in
jg
jecxz
pushl
cmc
push
aaa
test
pop
stc
aam
fisttpl
test
clc
js
in
xor
mov
rcr
adc
jl
jmp
and
mov
addb
mov
movsb
jns
cltd
pop
iret
or
icebp
lea
loope
loope
dec
in
push
bound
mov
insl
or
push
hlt
stos
cmp
cmc
sbbl
xchg
fucomi
xchg
fdivp
push
pusha
xchg
and
mov
pushf
dec
mov
cli
lods
add
loop
aas
std
push
addr16
ds
xchg
sbb
mov
ficoms
fimull
sbbb
xchg
mov
cmc
jns
cld
stos
int
mov
cmp
ret
sbb
add
push
and
popa
or
std
adc
es
ss
in
mov
cs
push
lcall
jle
fildl
lock
sub
pushf
push
movsb
mov
loopne
xlat
ds
test
mov
xor
pop
mov
adc
cltd
ret
mov
lret
cmp
add
daa
dec
push
lret
push
loope
sbb
imul
clc
sbb
shlb
fcmovbe
in
mov
arpl
stos
fcom
xchg
gs
and
lahf
dec
addr16
mov
cmpsb
push
xchg
out
pop
aam
cwtl
push
pop
xchg
data16
jae
xchg
loope
in
adc
ret
dec
iret
and
sub
xchg
mulb
xor
mov
add
addr16
mov
add
inc
roll
jmp
repnz
sbb
mov
fnstcw
xchg
imulb
sbb
sbb
xchg
fists
mov
das
pop
sub
out
mov
mov
mov
and
mov
mov
cltd
jne
scas
xlat
in
jo
push
lds
push
cmpsb
mov
insb
inc
dec
repnz
push
jmp
mov
lods
pop
test
scas
int3
sub
adc
mov
incl
in
sub
shl
ret
xor
negl
add
cli
std
pop
pop
mov
movsl
adc
jecxz
ret
aaa
adc
aad
mov
add
jecxz
adc
mov
ds
je
int
aad
fimuls
cmpsb
cmp
fidivrl
arpl
adc
cmpsl
fisttpl
jo
repnz
mov
push
ret
cmp
iret
push
lcall
cmp
sbb
cmp
imul
mov
push
mov
in
inc
out
stos
and
sub
sbb
outsb
cwtl
inc
popa
nopl
loop
or
xchg
and
orb
ret
jl
flds
adc
mov
test
dec
mov
add
in
in
outsb
sbb
pop
adc
lock
inc
cmc
das
testl
xchg
imul
bound
sbb
inc
push
jecxz
mov
add
adc
xor
adc
xor
push
mov
xchg
bound
popf
bound
dec
adcl
mov
dec
cmc
fldenv
cmp
repnz
lcall
cld
add
adc
fbstp
dec
test
stc
mov
fcos
push
xor
mov
or
push
adc
popa
add
jecxz
push
in
scas
inc
dec
mov
dec
aas
lods
jge
in
in
shlb
mov
push
in
dec
mov
enter
cmp
aaa
call
jnp
xchg
xor
push
pop
sahf
xchg
pop
enter
xchg
cli
mov
lock
mov
fbstp
repnz
pop
push
int3
test
ret
imul
clc
pop
mov
or
dec
cmc
rcrb
mov
sbb
sub
inc
into
jp
pushf
mov
in
push
cwtl
loopne
cli
or
mov
repz
pop
leave
das
mov
or
aaa
jae
enter
nop
push
ror
lds
add
shl
xor
mov
out
push
inc
adc
inc
push
out
mov
dec
mov
mov
out
xor
pop
adc
repnz
into
inc
sbb
dec
sbb
mov
mov
icebp
test
inc
push
test
cmpsl
test
pop
sub
loop
mov
outsb
scas
adc
jmp
inc
scas
jmp
push
and
dec
jae
sbb
dec
mov
and
and
cmp
fimull
push
xlat
xor
and
je
iret
inc
push
int
mov
stos
dec
ss
adc
mov
mov
push
mov
sbb
jg
push
pop
in
ds
mov
fistl
test
mov
and
loopne
sbb
stos
cmpsb
add
and
imul
insl
jmp
push
cmp
repz
les
xchg
popa
sbb
dec
dec
cmp
push
and
sbbb
adc
into
mov
fsubrl
push
js
jnp
sbb
mov
std
dec
and
mov
pop
shl
jo
mov
cwtl
push
mov
xlat
push
xchg
test
adc
fdivs
fsts
bound
ret
xchg
fbld
les
sti
in
cs
mov
lret
fdivrp
movsb
in
pop
add
push
mov
and
push
insb
xchg
mull
fisttpll
in
rcl
ror
popf
rcrl
pop
jmp
bound
dec
sbb
xlat
call
movsl
out
dec
das
push
popf
pop
sarb
pop
add
loop
fldcw
xor
dec
fisttpl
xor
push
xchg
cld
stc
xchg
inc
sbb
add
mov
lret
xchg
test
repz
push
mov
cmp
or
mov
mov
adc
add
dec
jmp
mov
das
nop
dec
pop
call
xchg
jae
and
jbe
jae
inc
inc
int
lcall
sub
xchg
aad
pop
xor
out
pop
popf
or
ljmp
pushf
sub
test
popa
arpl
jne
es
xchg
fldt
inc
sub
pop
jnp
popa
dec
scas
popa
loopne
add
cmc
aas
sbb
adc
or
jbe
icebp
sub
cmp
inc
insb
and
dec
fisttps
ja
mov
pusha
mov
mov
sub
pop
adc
sbb
sub
adc
or
add
adc
mov
xchg
cld
pop
lods
and
and
loopne
mov
jno
xchg
jno
add
outsl
scas
xchg
push
js
nop
pop
mull
and
stc
popf
int
fiaddl
push
lock
fldt
sbb
popa
jg
es
push
push
push
movsb
jno
or
xor
test
xor
jmp
faddl
dec
or
and
add
lret
push
xchg
jle
or
mov
jg
stc
ja
nop
cmc
cmpsl
test
sbb
inc
push
cmpsl
jbe
mov
aas
das
shll
sbbb
leave
cmp
add
mov
adc
cmp
lret
pop
sub
mov
inc
add
les
inc
xchg
dec
dec
pop
push
fsubrp
mov
pop
cs
shll
cmp
out
push
imul
sarb
ret
gs
into
pop
xchg
jg
cmpb
mov
dec
mov
push
xchg
add
or
jns
ret
xchg
cltd
add
lds
xor
xlat
inc
das
cltd
mov
xor
sub
jne
arpl
xor
jne
jo
mov
cmp
or
addl
dec
loopne
xor
iret
mov
int
jo
fisubs
jne
dec
adc
aas
inc
imul
adc
sub
arpl
jg
jbe
fwait
pop
repz
inc
pop
mov
lea
cmp
inc
ds
adcb
loop
mov
cld
andb
add
cmpsl
adc
mov
jmp
mov
mov
mov
pop
in
and
stos
iret
and
sub
fidivl
jns
lea
sub
push
cli
enter
pop
jne
sbb
sub
shrb
pop
lea
pop
push
mov
arpl
push
mov
mov
leave
sti
xor
lods
xor
mov
loopne
fadds
push
in
lds
aas
push
popf
mov
popf
nop
roll
fistpll
outsb
xchg
pop
pop
into
sbb
hlt
pop
fldt
and
fdivl
ret
xor
clc
add
out
push
add
sub
ss
pop
xor
rorb
test
xor
sbb
aaa
or
daa
mov
fnstsw
hlt
adcl
jb
add
fcmovnbe
ret
mov
rcrl
pop
cmp
mov
sbb
ficoml
scas
add
cltd
in
stos
fisubrs
mov
mov
jecxz
insl
sbb
call
fs
jno
call
add
iret
fidivl
movsl
stos
dec
clc
xchg
call
add
adcb
dec
cli
repnz
cmpsb
je
in
inc
push
xor
shll
cwtl
in
add
lret
push
mov
aaa
pop
aam
cmpsb
xchg
pop
or
movsl
push
mov
fisubrs
notb
sbb
sti
mov
xor
mov
ss
dec
inc
xchg
dec
jno
sub
adc
divb
rcll
sbb
adc
mov
addr16
push
lret
jo
mov
cmp
inc
cs
cmp
clc
in
rorb
cli
xor
jg
stos
out
fisttpll
jl
int
push
inc
sbb
loope
dec
ljmp
sub
orl
out
ret
leave
arpl
cmpsl
push
fsubp
cmp
jmp
xorb
enter
push
out
push
imul
cmc
xchg
cmp
jp
into
test
cmp
mov
or
cmp
cmc
jl
jno
pop
inc
mov
inc
mov
jne
cltd
mov
mov
push
daa
pop
shl
push
adc
mov
push
movsb
dec
bound
sub
dec
sub
loop
add
call
push
push
cwtl
and
mov
or
pop
inc
jge
les
xor
rolb
mov
sbb
imul
nop
dec
sahf
mov
movsb
movsl
movsb
into
push
or
mov
push
mov
iret
test
hlt
mov
mov
out
inc
and
fwait
pushl
sti
add
aaa
mov
sub
pusha
push
repnz
stos
cmc
cmp
mov
cmp
adc
sub
mov
adc
add
daa
cmp
pop
inc
sbb
filds
mov
les
in
iret
pop
xchg
lcall
aas
fidivs
mov
xor
cmp
pop
xchg
xor
or
cmp
push
pop
imul
xor
lcall
push
jo
out
add
sbb
arpl
sbb
movsl
lcall
roll
pop
test
dec
xor
dec
sub
scas
inc
test
movsb
jb
test
jmp
jle
ret
addr16
ljmp
mov
fmull
popf
jnp
ficoml
out
pop
dec
add
arpl
enter
mov
jge
jne
stc
push
xchg
or
sbb
jecxz
sbb
mov
popf
adc
push
fstpl
addr16
in
stos
das
xor
icebp
out
adc
pop
xchg
popa
pop
pushl
test
addb
pop
pop
xchg
and
int
cmp
imul
stos
or
insb
pop
jb
pop
test
add
imull
inc
stos
sub
pop
pusha
negb
fstps
dec
arpl
mov
ds
cmp
sbb
adcb
cmp
fidivs
inc
pop
push
out
sbb
inc
fucomip
push
xchg
insl
and
xchg
cli
dec
xor
add
mov
push
call
and
arpl
sbb
push
sahf
stc
inc
loope
popf
div
cmpsb
add
hlt
cmp
mov
sahf
mov
and
pop
mov
outsb
imul
xor
mov
nop
dec
xor
je
mov
rcr
mov
ret
adc
sbb
loopne
in
lods
mov
arpl
fs
rclb
xor
psubsw
sbb
xchg
adc
or
inc
mov
jp
xchg
popa
popf
cld
roll
mov
adc
mov
cmp
jmp
and
outsl
mov
or
mov
mov
cltd
inc
xchg
mov
jecxz
in
jne
adc
aam
jno
mov
and
xchg
mov
pop
repz
ja
notb
cmpsb
and
imul
cmpsl
aad
sub
cmpsb
jge
hlt
shlb
xor
data16
pop
cmp
adcb
add
mov
loope
push
mov
imulb
push
scas
add
pop
adc
sti
rorl
mov
loopne,pn
push
sbb
je
lea
sbb
cmp
stc
in
lret
cmp
push
adc
jg
sub
dec
dec
mov
inc
mov
adc
jmp
xchg
add
lds
stos
or
stos
mov
inc
sub
jns
cmp
jg
fistl
ror
cmp
ret
insb
loopne
stc
stos
andl
adc
or
pop
jo
sbb
push
jns
lock
mov
cmc
imul
or
scas
mov
xchg
in
fmuls
sub
jge
xchg
mov
sahf
lret
ss
lea
js
push
adc
pop
ret
ss
rolb
and
jno
imul
xchg
and
push
push
push
data16
xlat
gs
sahf
jg
shrb
push
cmpsb
aaa
insl
loope
imul
mov
inc
xchg
xchg
xor
fsubrl
sbb
repnz
cmp
sbb
xor
clc
jns
xchg
fsubr
inc
aas
mov
pop
bound
scas
jmp
shl
xchg
add
push
mov
pop
loop
stc
fsubrs
call
in
jp
out
stos
iret
scas
sub
loopne
sbb
in
inc
sub
push
dec
mov
pushf
cld
sub
xchg
pushf
cld
fcmove
and
std
xchg
cltd
cmp
mov
inc
outsl
and
push
stos
lds
ds
stos
add
shld
outsl
cmpsb
add
sbb
insl
push
add
int
lds
mov
les
xchg
xchg
push
mov
insl
dec
pop
push
sbb
insl
loop
sub
sbb
int
or
push
jmp
loop
jns
popf
shll
repz
scas
mov
int3
push
cmc
imul
jnp
int3
loope
inc
pop
add
jns
push
outsb
hlt
outsb
gs
lahf
dec
testl
ror
inc
popf
sub
cmp
add
repnz
mov
cmp
dec
xchg
lret
aaa
lods
xchg
andb
lods
int3
or
data16
or
pop
xchg
mov
xor
in
andb
fwait
pop
pop
cltd
dec
xchg
sbb
xchg
or
jbe
out
cmp
adc
es
outsl
pop
shll
add
sbb
inc
andb
faddl
aad
subl
mov
jno
xor
cli
dec
lods
pop
repz
inc
int3
into
pop
mov
lret
scas
out
out
pop
dec
jbe
xchg
incl
daa
les
dec
jecxz
or
mov
add
insb
stos
dec
insl
scas
mov
push
lahf
adc
lods
popa
mov
iret
test
fcompl
jp
loope
loop
lret
mov
pop
stos
push
testl
and
popa
cs
push
inc
and
jne
inc
cld
jp
push
xor
mov
xchg
rcrl
lock
lcall
sarb
aam
or
mov
sbb
xor
pop
fimull
mov
loopne
mov
lret
shl
mov
das
lock
nop
test
cmp
stos
pushf
in
dec
mov
loope
divb
scas
add
lahf
push
in
orl
and
jne
or
add
js
push
dec
out
jg
icebp
push
mov
cmp
pop
out
lret
mov
mov
sbb
rorl
imul
mov
out
pusha
lcall
xor
or
sahf
sbb
push
test
int3
dec
out
pusha
ja
push
outsl
hlt
add
sub
bound
sarb
aam
or
nop
movsl
in
test
std
xlat
add
inc
mov
lahf
mov
jnp
push
pop
dec
hlt
test
call
fiadds
mov
stos
jmp
and
test
xchg
and
sahf
cmp
push
xor
add
sarb
loope
cmp
ror
adc
mov
jno
mov
ss
out
push
lcall
adcl
fsubs
add
jae
lods
inc
fldl
cmp
xlat
test
or
jno
lcall
mov
fdivrl
xchg
test
mov
pop
addr16
sbb
mov
pop
mov
dec
loope
cmpsl
out
cli
js
mov
cmp
movsl
aad
out
pop
and
pop
lock
xchg
and
test
mov
jbe
popa
lock
out
inc
jge
jbe
mov
ret
out
or
int
pop
add
decb
mov
push
add
xchg
into
stc
into
xchg
push
pop
jl
movsl
lds
mov
popf
jae
dec
xchg
ss
dec
notl
inc
pushf
or
idivb
scas
cwtl
outsw
xchg
into
sub
test
into
mov
xchg
push
sub
insb
rorl
int
mov
cmp
xchg
mov
or
or
adc
es
or
mov
mov
adc
pop
popa
cltd
push
and
jge
out
push
lret
adc
leave
push
mov
pop
lods
push
enter
sub
xor
rcrb
jno
jnp
mov
fidivrs
adc
jle
int
sarb
add
imul
mov
loope
xlat
scas
lds
xor
pop
cmp
add
xor
mov
xchg
jp
jp
xchg
or
jmp
mov
and
sbb
imul
dec
pop
stc
lea
cmpsl
stos
cmp
or
sbbb
aad
in
jmp
scas
bound
add
sub
shll
mov
ds
pop
push
rcrl
inc
add
add
inc
cmp
and
addb
mov
inc
or
aam
mov
stos
int3
xchg
std
cmpsl
lds
inc
and
dec
test
mov
pushf
mov
inc
inc
in
movsl
sub
xchg
incl
mov
jae
xor
pushl
pushf
inc
enter
adc
ret
fdivrl
dec
mov
sub
ret
mov
clc
aaa
cmp
in
adc
or
shlb
stos
icebp
add
mov
fnstcw
sub
gs
aas
movsb
pop
aad
adc
or
jecxz
in
jle
leave
dec
repnz
push
aad
call
sbb
gs
andb
nop
or
out
icebp
xchg
imul
jp
dec
or
lret
xchg
dec
lahf
adc
pop
test
push
scas
sbb
inc
sbb
inc
into
nop
les
or
mov
adc
mov
jmp
fs
pop
cmp
xchg
icebp
js
push
ja
idivb
push
test
testl
add
inc
pusha
xor
ljmp
in
fidivs
cli
mov
xor
mov
push
sbb
aad
shr
jns
arpl
cmp
stc
or
and
push
pop
or
pop
leave
push
jp
xor
fidivrl
fucomip
pop
imul
push
push
ss
xlat
sbb
cli
test
fimull
inc
aad
jne
es
and
sbb
jl
xchg
loopne
xchg
daa
in
sbb
jmp
js
mov
les
inc
mov
cmpb
stc
jb
lcall
add
movsb
sub
jnp
lock
lds
mov
repz
push
ret
sbbb
or
inc
sbb
push
ss
dec
out
add
xchg
add
jns
cmpsb
adc
cmpsb
inc
leave
and
ret
add
push
push
inc
movsb
or
pop
test
daa
or
mov
testl
inc
mov
xchg
insl
or
int
inc
mov
cs
xor
subb
ja
push
insb
aad
cmp
out
lds
jae
mov
scas
inc
pop
push
orl
add
sets
sarl
xchg
ret
test
xlat
outsb
mov
jp
jp
lret
bound
popl
faddp
jecxz
loope
mov
out
fcoml
add
cmc
into
lret
in
xchg
xor
daa
clc
jg
ds
jbe
inc
lock
imul
adc
nop
or
inc
lds
and
stc
xchg
sbb
daa
and
cli
xchg
ljmp
enter
in
and
nopl
mov
mov
incl
faddp
sar
push
add
inc
pop
cmp
loopne
ret
jge
adc
push
aas
push
mov
push
insb
xchg
stc
mov
js
test
adc
in
into
cs
scas
or
sahf
aas
xlat
mov
cmc
loope
jge
daa
lds
lods
sbb
push
aam
iret
or
mov
fldcw
xchg
les
jno
mov
jne
bound
dec
test
sub
into
push
out
cltd
add
push
fildll
mov
push
xchg
xor
fcompl
pop
sbb
xor
lahf
add
movsl
xor
adc
into
pushf
adc
jb
mov
xor
cs
xchg
jb
xor
and
xchg
fbstp
inc
ret
cmp
sub
xor
insl
shlb
xor
pop
mov
jnp
es
add
cmp
shll
mov
dec
xor
add
ja
and
and
aad
insl
popa
ja
push
cmp
daa
imul
aaa
adc
mov
pop
sarb
call
jmp
jp
mov
int
aaa
push
sbb
out
mov
shll
add
xor
out
gs
jmp
test
sti
mov
in
jp
addr16
arpl
das
push
mov
push
dec
lret
loope
or
nop
pop
dec
and
and
sub
fcoml
mov
lret
sub
test
cmp
inc
addr16
mov
popa
sub
cs
std
insl
jl
jnp
movsl
loop
mov
adcl
js
add
push
loopne
push
out
out
push
pop
push
es
lds
stos
incl
insl
ds
mov
rorl
push
adc
and
aad
out
mov
cltd
movb
dec
mov
lds
test
out
mov
cld
xor
jmp
cmp
stc
sbb
sub
mov
push
fidivs
mov
push
mov
lds
iret
pop
iret
idivl
insl
cmp
xchg
sti
push
inc
rcr
test
cltd
rcl
sarl
jp
aad
cmp
dec
cli
outsl
loope
push
icebp
push
movsb
lret
lods
addr16
mov
push
sub
icebp
and
mov
outsl
or
mov
xchg
andl
push
adcl
pushf
icebp
push
pushf
pop
mov
fisubrs
adc
mov
pop
cltd
mov
sub
adc
popa
repnz
cmpsb
jle
iret
dec
or
inc
loop
jecxz
notl
sbb
pop
xchg
lahf
hlt
push
xlat
add
out
and
push
imul
pop
pop
mov
jecxz
data16
fs
mov
push
add
jo
adc
push
lock
jnp
hlt
test
xor
shrl
movsl
or
lock
pop
pop
sti
test
pop
xchg
lock
cmp
test
sub
sbb
sbb
push
pop
mov
sub
fwait
push
cmp
insb
call
pop
gs
jge
inc
aas
push
sub
call
ret
push
jp
cltd
aas
add
inc
sub
std
xchg
sub
outsl
gs
mov
push
pop
inc
enter
shll
mov
fs
mov
dec
sub
add
xchg
sub
mov
add
lahf
push
in
pop
sbb
sub
pusha
mov
iret
push
mov
pop
cs
insb
add
cmc
in
out
int
cltd
mov
repz
sub
stc
jae
je
outsb
hlt
movsl
sbb
sub
cmp
pop
cmp
xor
mov
ja
mov
push
cli
fsubs
imul
xor
mov
cli
ljmp
lods
fistpll
popa
jo
mov
push
pop
dec
mov
aas
sub
inc
jmp
push
xor
jne
push
shll
lds
dec
arpl
mov
imul
daa
push
loope
fwait
mov
jnp
adc
hlt
add
shll
inc
out
fnsave
mov
sub
mov
shll
sti
aam
xorl
sub
xchg
adc
cltd
jno
int3
je
std
dec
sbb
jle
push
rorl
xchg
movsl
lret
dec
nop
xchg
sub
inc
lret
das
inc
mov
xchg
lock
imul
dec
loope
dec
xor
inc
mov
jae
xchg
inc
enter
fsincos
lods
mov
outsl
iret
inc
mov
or
sub
ljmp
mov
aaa
xchg
jb
ret
outsb
sbb
xchg
lock
adc
movsb
adc
mov
mov
ficoml
fcompl
dec
rolb
stc
push
ret
int3
das
div
xor
mov
scas
xchg
sbbl
clc
jns
scas
or
push
add
push
pop
push
inc
ljmp
push
jo
pop
jne
jle
push
mov
lea
js
sahf
push
jecxz
imul
repz
and
dec
lahf
and
adc
clc
jne
mov
mov
scas
fnstsw
sbb
jae
mov
cld
sub
aaa
repnz
popa
nop
push
scas
and
sbbl
lea
or
mov
popa
mov
sahf
out
in
rclb
loop
je
sub
or
in
nop
push
insl
jne
and
adc
cs
xchg
push
cmpsl
sbb
clc
icebp
cmp
out
sub
std
and
cmpsl
daa
mov
jno
gs
lods
cli
sbbl
ds
add
lea
imul
mov
inc
cs
icebp
sbb
sbb
fisubs
xchg
jecxz
loope
or
or
add
mov
push
fdivl
adc
jle
push
sbb
mov
mov
add
in
popa
sbb
xchg
dec
mov
sbb
mov
mov
cmp
mov
clc
popf
mov
mov
rolb
js
call
or
add
inc
je
nop
pop
inc
or
xor
aad
ja
sub
or
punpckhdq
add
push
nop
push
mov
dec
inc
push
mov
in
cmpsl
dec
and
sbb
xchg
mov
and
sbb
xchg
lods
adc
std
pop
stos
aaa
sbb
mov
es
dec
mov
sub
clc
fisttps
loop
fwait
sarb
into
shl
xchg
push
shlb
test
rorb
imul
loopne
pop
dec
shrb
int3
outsb
pop
sbb
push
rolb
push
sub
mov
mov
aaa
pop
decb
sti
xchg
inc
cwtl
ret
lret
les
jecxz
in
mov
divl
xchg
jg
inc
cmpsb
shll
lods
movl
jb
fisubrs
shr
rorb
push
xor
sbb
pop
int3
mov
jno
in
mov
outsl
add
xchg
xchg
xchg
data16
xchg
jmp
push
lods
aaa
testb
pop
fdiv
dec
in
jno
negb
or
lods
xlat
outsb
cmp
add
jg
je
mov
push
test
fnstenv
out
mov
jno
push
shll
pop
mov
xlat
pop
push
xor
cld
orl
xchg
sbb
jnp
sbb
in
inc
lret
imul
negb
aam
imul
xlat
pushf
push
test
pop
sahf
jmp
xchg
lahf
testl
inc
sahf
xchg
ja
test
rcrb
ficomps
outsl
pop
push
cmp
xorl
icebp
aaa
push
inc
push
lret
movsb
orb
xor
and
pushf
stc
jl
movsb
or
lods
loopne
repz
cmp
imul
xor
divl
xchg
and
out
or
addr16
cmpsb
js
stc
mov
mov
push
pop
lahf
inc
mov
ja
xor
mulb
pusha
mov
push
pop
lahf
and
shl
test
enter
mov
mov
aad
adc
icebp
push
xchg
or
mov
xchg
xchg
pusha
out
jno
outsb
fcmovnbe
dec
push
imul
adc
or
or
nop
push
mov
push
and
bound
mov
push
stos
lock
sub
xor
xchg
or
das
inc
movsl
mov
xchg
sbb
stc
jle
ret
ljmp
clc
mov
pop
inc
jl
loop
or
jle
adc
xor
add
add
push
lds
popw
dec
cmp
bound
dec
in
mov
js
lock
sub
cmp
test
movsl
jb
push
xchg
lods
fwait
mov
jp
enter
dec
inc
cmpb
rolb
test
ja
ret
jmp
pop
mov
and
mov
lds
xor
testb
and
push
subb
mov
xchg
dec
roll
adc
mov
xchg
inc
and
outsb
orb
aam
jbe
dec
test
lea
dec
imul
fimuls
sbb
lock
fdivrs
inc
lret
jns
xchg
repz
adc
cmp
clc
mov
bound
jnp
imul
adc
lcall
fdivp
cmp
fwait
data16
negb
or
push
sub
mov
leave
inc
and
and
xchg
and
push
xchg
imul
enter
push
xlat
lds
jbe
and
icebp
sarl
icebp
mov
movsb
shl
iret
mov
popf
jo
in
cmpl
data16
inc
and
ja
push
jb
insb
nop
jle
sti
shr
pop
mov
pop
ret
fcompl
lret
mov
or
xchg
pusha
cld
adc
push
lret
push
repz
pop
daa
xor
repz
or
je
cwtl
js
cmpsb
lcall
call
inc
cmp
lret
push
or
fiadds
and
leave
scas
sti
in
std
jne
cmp
and
inc
loope
inc
out
sub
cmpsl
xor
mov
or
inc
dec
fnstcw
cmp
push
pushf
je
clc
cmpsb
mov
inc
or
popf
testl
add
repnz
shrb
adc
xor
in
popa
fcomp
mov
outsl
cwtl
sar
add
mov
shl
inc
fisubrs
fstpl
cmp
call
arpl
test
push
repz
add
stos
mov
lcall
insb
dec
ljmp
ljmp
imul
aam
mov
fcomps
pop
sub
mov
lods
fstpl
inc
mov
in
sub
or
adc
pop
dec
daa
pop
cltd
out
cmp
in
mov
mov
sbb
mov
xor
into
sbb
inc
jns
xor
sub
mov
xchg
xchg
xchg
jae
sbb
das
call
cmpsb
sub
js
xor
sub
inc
fcoml
inc
and
dec
push
add
insl
mov
pop
mov
fimull
dec
push
mov
in
ret
clc
es
pop
xor
add
add
adc
pop
scas
mov
or
clc
repnz
arpl
fildl
jecxz
lea
mov
cld
pop
pop
rcr
pusha
lahf
xchg
addr16
invd
dec
lea
sti
xor
sub
int3
and
out
scas
cmc
push
push
xchg
stc
add
jnp
gs
or
dec
into
idiv
xchg
enter
inc
add
cwtl
test
pop
or
lea
xchg
sti
cmpsb
sub
and
fidivl
xor
aas
dec
faddl
mov
push
inc
mov
enter
into
push
and
mov
ja
imul
lods
xchg
jle
xchg
xchg
enter
xchg
dec
push
dec
push
arpl
lret
push
xchg
push
filds
adc
popf
sbb
cmp
jmp
movsl
in
test
shll
xor
adc
sti
ror
mov
movsl
add
test
push
call
pop
inc
jle
cmp
insb
shrl
mov
stc
push
sbb
loope
add
xor
inc
outsb
xchg
adc
xor
jecxz
push
cmp
xchg
adc
xchg
and
movsb
push
fcomi
xor
movd
aas
fildll
sbb
paddd
cmp
lock
xor
rolb
cmp
stc
adcl
mov
data16
pop
xor
push
dec
stc
andl
xchg
xchg
cld
enter
adc
bound
xchg
repz
xchg
jbe
sahf
ds
jne
sbb
mov
outsl
sahf
icebp
das
pop
aad
fsubrs
mov
fstl
clc
mov
jb
test
mov
je
and
jmp
cmp
fstpt
add
sub
into
mov
cmpsl
sbb
sub
movsl
and
mov
mulb
mov
cwtl
lret
adc
sub
testb
cld
lock
cwtl
pop
fs
push
push
mov
pop
sbb
lds
mov
ds
xchg
mov
ret
popa
jb
int3
xchg
aam
out
xor
sarl
jp
add
std
aas
add
insl
pop
sub
cmp
jle
popf
das
mov
sbb
fmull
or
aas
movsb
jb
sub
rorb
xchg
inc
mov
repnz
jne
mov
js
out
push
or
xchg
cmp
popl
stc
ds
orb
lods
rcl
dec
cmp
sbb
fwait
cmp
in
imul
cld
fnsave
cmp
repz
mov
push
cmp
stos
data16
movsb
sahf
aam
xchg
adc
lods
mov
mov
scas
jb
div
fs
test
jns
adc
pushf
mov
xor
mov
movsb
lret
add
leave
bound
stos
pushf
push
in
pop
lds
orb
push
loop
mov
in
cmpsb
or
fs
xchg
mov
inc
ja
movsl
movsb
dec
mov
inc
xor
lret
out
movsl
dec
daa
push
or
mov
mov
fs
jb
imul
in
jo
popf
divl
and
out
pusha
fmull
lock
je
fcomps
insb
movsb
adc
jns
imul
shlb
jl
test
int3
imull
push
lahf
jmp
in
xorl
xchg
xor
ficomps
pop
or
or
or
mov
add
in
loope
or
push
hlt
adc
push
sbb
dec
adcb
mov
pop
cmp
jb
ss
fs
inc
add
leave
lret
push
inc
lret
xchg
jmp
shr
jl
rcll
sbb
add
lds
lock
js
mov
in
enter
test
pop
adc
ljmp
divl
mov
xlat
mov
push
ja
lcall
sbb
mov
dec
jle
xor
ret
movsl
dec
outsb
sub
in
adcb
jns
fidivl
push
sbb
ret
xchg
sbb
cmp
out
shl
cmc
sbb
jnp
lea
mov
add
into
ficompl
movsb
push
ret
xchg
push
jns
push
call
cmpsb
mov
lods
call
mov
push
jbe
aas
mov
repz
jnp
adc
stos
mov
and
cmpsb
test
das
pop
push
in
pop
mov
xor
dec
hlt
xor
push
scas
xchg
in
mov
mov
scas
and
rorl
mov
mov
jb
fistpl
pop
mov
jae,pn
imul
cmp
stc
xor
xchg
pop
mov
arpl
lods
aaa
xchg
dec
popa
mov
and
movsl
dec
loope
xor
movsl
shll
fstps
lcall
out
out
adc
jne
cmc
add
loopne
cmpl
xor
pop
xchg
dec
mov
mov
inc
xchg
stc
movsl
scas
sub
cmpsb
sti
ja
stos
pop
pop
ficomps
aas
add
add
pop
pop
loopne
cs
jle
inc
call
or
lret
daa
cmp
data16
mov
iret
push
or
movsl
cmp
loop
imul
test
adc
push
adc
xchg
sbb
adc
xchg
jle
push
mov
into
push
adc
pop
and
mov
cli
subl
jns
sahf
cmp
imul
add
fs
out
das
add
repnz
push
pop
out
imul
arpl
sbb
xlat
fadd
das
leave
lods
sbb
jge
sub
mov
inc
loope
addr16
sbb
jno
mulb
and
adc
out
jns
cmp
jp
loopne
mov
cmc
mov
and
sub
cs
or
jle
mov
dec
pusha
insl
mov
xchg
lock
sahf
stos
sbb
add
sbbb
or
cmp
pop
pop
xor
shll
loopne
sub
push
scas
rclb
sub
adcb
ds
jp
lods
xor
inc
stos
mov
xor
mov
aam
mov
fsts
cmpsb
jg
lods
jne
cmc
in
shll
fldenv
not
jp
pop
lock
dec
out
sti
sbb
shrb
sbb
xchg
lahf
sbb
push
pushf
popf
loopne
push
add
push
dec
mov
jl
xor
xchg
or
or
or
imul
xor
cs
into
push
mov
nop
test
out
xor
scas
aam
sbb
pop
mov
lahf
push
test
xchg
cmp
sub
ds
push
add
clc
fyl2x
stos
xchg
mov
aad
repnz
mov
popf
and
imulb
xchg
mov
add
ret
push
out
cmpsl
mov
imul
cwtl
inc
mov
sahf
mov
lds
jp
push
sub
out
push
jns
fldl
aad
pop
cmpsb
mov
jmp
fistl
int3
cmp
adc
fnstcw
jns
fadds
fsubs
sbb
inc
jle
or
or
pop
xchg
xchg
or
jo
adc
inc
cmp
imul
cs
fstps
cmp
pusha
addr16
cmp
mov
xor
test
sarl
push
mov
ds
or
push
xor
pop
add
adc
mov
adc
loopne
xor
push
cmp
cmc
es
jne
xchg
add
cltd
test
int
je
cmpsl
ja
push
cmp
ja
push
test
sub
pop
cmp
pop
mov
mov
addr16
les
push
les
sub
sub
je
add
push
xor
jmp
ljmp
lea
ljmp
jns
int3
aas
cmp
clc
jb
pop
jmp
call
cmpsl
mov
outsb
push
mov
fmuls
xor
clc
sbb
mov
call
loopne
outsw
mov
popf
jns
or
push
sub
push
jb
and
rcrl
std
sbb
push
aaa
pop
lea
dec
movsb
test
push
negl
in
cmp
xor
stc
pop
icebp
push
popl
aam
jns
std
lret
sub
and
sbb
repnz
jo
jl
adc
sbb
or
add
lcall
imul
rorl
ficompl
aam
inc
push
push
add
mov
pop
or
mov
adc
and
fiadds
lds
mov
jo
mov
adc
cmp
shr
jbe
subl
shll
inc
mov
pop
gs
xor
lahf
scas
test
leave
jle
in
aas
cmp
ds
popa
cli
push
fcoms
and
dec
xor
mov
sbb
mov
jno
and
and
add
mov
pop
pusha
nop
lods
insl
ja
lret
stc
dec
aas
dec
std
sbbl
adc
mov
sub
aad
mov
shl
dec
push
push
or
cltd
lds
and
outsb
jle
pop
adc
xchg
sahf
push
xor
and
adc
xchg
popa
lock
pop
mov
inc
clc
push
xchg
lahf
dec
icebp
pushf
aas
bnd
negl
cli
xorb
aaa
mov
add
arpl
inc
pusha
and
mov
fsubr
pop
sbb
xor
inc
sbb
mov
lcall
mov
xor
xor
push
gs
and
pop
cld
inc
xor
in
sbb
adc
sub
push
jae
xchg
cwtl
sub
and
xor
div
fucom
mov
push
push
adc
jnp
sub
and
cmpsb
daa
shlb
pop
jp
std
jge
imul
fisttpll
addl
adc
mov
jno
stos
cli
jmp
jbe
pop
sahf
cmc
imul
push
mov
es
jno
push
or
sub
test
jecxz
adc
pusha
push
aas
inc
or
or
inc
xor
ds
mov
mov
pop
out
mov
es
cmp
scas
push
adc
push
add
test
addb
cmp
cmp
mov
jl
xor
sahf
pushf
jns
test
ficoms
test
push
mov
dec
mov
pop
cli
nop
fnsave
xor
pop
adc
push
jge
jnp
xor
and
aas
sub
in
fidivl
ja
add
jp
in
js
xor
sbb
movsb
iret
add
cmc
sti
fdivl
pop
adc
repnz
mov
in
xor
lret
jne
mov
leave
ficoml
xor
addb
jge
push
jnp
adc
fnstenv
push
pop
jbe
pop
aas
data16
cmp
in
scas
mov
inc
js
push
mov
add
pop
xor
jae
mov
add
dec
cli
imulb
mov
dec
movsl
aaa
dec
mov
sub
cmp
lock
in
fldl
xor
add
lods
ljmp
shr
xchg
adc
or
aas
push
push
mov
sub
loopne
rorl
push
mov
js
mov
sarl
add
std
sbb
cld
lods
sub
sbb
adc
in
imul
shll
adc
in
mov
hlt
ja
or
cmp
ja
lret
js
imul
imul
mov
lcall
and
sub
and
pop
sbb
jno
sbb
stc
int3
js
pop
xchg
daa
scas
fwait
ds
push
pop
mov
pop
shll
frstors
inc
add
mov
pop
mov
add
add
adc
add
ds
out
sub
out
rorb
mov
je
aad
push
imulb
int3
mov
mov
js
sub
data16
pop
mov
std
cmp
ficoml
pop
mov
pop
mov
in
mov
jbe
dec
lret
das
out
ret
cmp
pop
imul
outsb
jle
pop
adc
js
mov
lea
pop
pop
xchg
xor
xor
jns
add
pop
in
lcall
cmp
push
cmp
test
dec
and
jp
dec
adc
push
xchg
lret
scas
ljmp
jne
or
ljmp
fistps
cwtl
ljmp
jg
sub
jns
je
icebp
aaa
push
aad
xchg
xchg
jae
xor
inc
mov
insb
shl
imul
pop
xlat
lahf
or
out
cmp
mov
add
push
sahf
cmc
pushf
fwait
ljmp
dec
mov
scas
push
push
mov
sub
fisttpll
cmp
mov
std
mov
pushf
dec
cmpsb
movsl
movb
shll
fists
mov
mov
ret
push
in
aam
outsl
insl
lret
pusha
sahf
mov
aas
or
mov
jg
dec
inc
rol
out
repnz
pop
fsts
clc
das
shr
cmp
inc
mov
cmp
xchg
xlat
push
aaa
cmp
or
inc
add
push
lcall
inc
or
mov
movsb
out
adc
bound
dec
fs
movsl
or
inc
shl
imul
mov
enter
fstpl
cmp
sub
bnd
les
dec
mov
sub
cmc
negl
mov
nop
daa
imul
stc
test
sti
mov
mov
inc
sub
loopne
ret
mov
flds
or
push
std
dec
cmp
lret
mov
cltd
adc
mov
push
mov
call
hlt
call
xor
pop
out
sbb
outsb
arpl
iret
lods
cmp
bound
mov
fsts
xor
in
pop
clc
push
jnp
test
mov
ja
cmpsb
push
sub
xor
outsl
pop
and
adc
and
in
mov
ss
es
test
pop
lea
pop
mov
inc
add
ds
or
jne
sub
imull
imul
xchg
cwtl
idivl
cltd
incb
testb
out
pop
outsl
gs
push
shll
scas
enter
mov
int
clc
mov
aaa
inc
out
mov
mov
pop
data16
mov
push
movsb
aam
mov
rcl
or
xor
adc
pop
jl
pop
test
imul
rorb
jbe
imul
cmpsb
mov
jae
fldt
dec
loop
mov
mov
sbb
inc
ja
xor
orl
movsl
xchg
pop
ret
ss
xchg
leave
add
mov
das
das
mov
sub
mov
and
add
mov
in
sahf
stos
xor
cld
loop
movsl
push
mov
lock
xlat
out
mov
sub
add
push
pop
push
jae
insb
and
outsl
mov
sbb
jge
repz
stos
push
movsl
xchg
add
scas
inc
nop
sbb
push
gs
sub
scas
jmp
fwait
gs
ljmp
lahf
je
cltd
int3
sbb
ja
sub
out
out
mov
cwtl
fiaddl
rol
sbb
scas
bound
xchg
sbb
sbb
mov
xor
inc
push
hlt
mov
add
mov
addr16
add
mov
std
dec
aam
les
insb
mov
inc
and
dec
pop
and
repnz
or
fisttpl
clc
repz
fisubl
xchg
mov
mov
scas
testb
out
cmp
test
xchg
pop
mov
push
in
dec
gs
fs
add
pop
or
pop
fdivrl
cld
pop
xor
mov
mov
sarl
push
sbb
into
rcll
inc
sbb
mov
sub
in
scas
sub
dec
cld
mov
cmovl
cmc
cmp
fstps
clc
xchg
lock
and
and
insb
insl
sbbl
inc
mov
lods
mov
inc
into
mov
jnp
in
push
sti
cmp
mov
add
adc
mov
and
lods
mov
jg,pt
xlat
imulb
lcall
sub
mov
lcall
push
insl
popa
push
jno
sub
hlt
jne
mov
lret
mov
cmp
mov
outsl
pand
xchg
jp
ret
call
mov
ret
rcll
in
mov
int3
je
mov
cmp
xor
push
sbbl
aad
in
mov
cmpb
push
mov
inc
int
adc
ret
or
pop
xor
xchg
loope
jb
jmp
in
or
mov
mov
test
cld
mov
xchg
mov
cmpsb
insl
and
sub
or
cmp
pop
inc
cmp
jns
mov
sbb
cs
mov
jae
and
negb
into
push
dec
dec
jmp
cmp
lods
jbe
into
popa
xchg
pop
out
imul
test
sahf
in
dec
sarl
cmp
mov
push
cmpsb
push
cltd
jae
dec
outsb
jl
in
mov
mov
rorl
ret
jbe
sar
nop
stos
lea
in
aas
inc
jno
mov
out
push
outsb
nopl
jmp
fucomip
mov
mov
push
cs
jae
push
in
and
push
icebp
js
mov
jp
mov
jo
xchg
lods
mov
test
aaa
mov
fbstp
shrl
xorb
cmp
inc
cmp
rorl
or
insb
repz
je
sbb
or
xchg
push
mov
sbb
lret
xchg
or
lcall
insl
test
jl
aas
add
int3
std
ja
movl
imul
xorl
pusha
xchg
in
mov
xor
mov
inc
inc
ljmp
or
cltd
or
out
inc
sbb
cmp
inc
xchg
cs
rcr
or
xor
ret
pop
arpl
add
cmp
mov
jmp
mov
out
movswl
cmc
in
out
mov
mov
mov
and
mov
scas
mov
insl
notl
cwtl
pop
cltd
gs
inc
mov
and
xor
inc
loopne
fs
dec
cmp
addr16
in
movsl
and
ret
call
enter
adc
movl
loope
leave
dec
add
cwtl
popf
cmpsb
mov
push
pusha
stos
mov
dec
sbb
adc
cld
push
cwtl
xchg
dec
cli
test
pop
dec
mov
lock
jl
mov
mov
dec
icebp
xor
icebp
cmp
push
cmp
stos
imul
fstpl
adc
xchg
stc
sbb
ret
popf
mov
push
popf
mov
mov
push
fisubs
sti
lcall
pop
shrb
iret
jmp
leave
xchg
jo
outsb
xchg
inc
loope
lahf
popf
popf
repnz
repnz
cwtl
ret
dec
sub
and
out
jl
sbb
ret
hlt
xor
loopne
add
mov
add
data16
add
jge
pop
push
cvtpi2ps
icebp
jae
mulb
fildl
add
dec
out
xchg
lahf
dec
xchg
popa
dec
push
nop
fiaddl
scas
loop
loop
ret
push
xor
sbb
inc
jb
pop
sbb
in
push
fwait
add
mov
ljmp
add
push
jecxz
cmp
pop
rorl
cli
cmp
out
dec
dec
mov
sbb
adc
mov
in
inc
lret
aad
add
popf
arpl
adc
xor
and
fistpll
filds
das
test
aam
cmpsl
icebp
stos
and
pop
jnp
jno
ret
mov
xchg
mov
lret
mov
or
int3
test
push
push
mov
pop
in
addr16
push
movb
int3
lods
ja
sub
das
push
cmpsl
lock
test
mov
inc
mov
lcall
or
lret
lcall
push
cmp
add
je
mov
pop
and
into
loopne
adc
jne
aaa
mov
push
cmp
xchg
scas
dec
add
popf
in
outsl
mov
loope
mov
arpl
pop
push
sub
pushl
or
rcl
mov
std
subb
inc
lea
mov
inc
cmp
daa
inc
mov
lds
mov
jp
pop
in
push
cmp
mov
sbbl
sbb
dec
stos
dec
or
loope
arpl
jl
scas
js
xor
es
adc
mov
cmc
cli
mov
sub
shrb
pop
repnz
mov
imul
addr16
pop
inc
popa
cs
push
mov
inc
call
jnp
repz
push
mov
outsl
jnp
jo
shl
mov
in
fwait
inc
in
fiaddl
mov
hlt
mov
repnz
jge
loop
rclb
or
fstpl
jmp
xor
sbb
mov
mov
loop
es
ret
sbb
inc
imul
cmp
test
cld
push
les
imul
imul
dec
xlat
lcall
xchg
fisttpll
sub
testb
movsl
insl
lea
lods
add
into
ds
out
add
pop
and
add
push
push
ss
lods
int3
clc
shll
xchg
jmp
sub
fsts
in
sbb
imul
or
push
push
jmp
adc
pop
pop
aas
fisttpl
shll
xlat
sbb
leavew
jns
jg
sar
call
andl
mov
fs
sub
dec
aam
add
pop
push
adc
add
mov
dec
imul
cmp
sub
add
ljmp
inc
cmp
pop
les
cmp
mov
sarb
xor
mov
aam
addl
lret
stos
jne
adc
mov
mov
test
xor
adc
xchg
mov
in
pop
pop
daa
inc
shlb
adc
in
and
popf
test
aad
mov
mov
jge
mov
insl
pop
lcall
in
ja
cli
cld
xor
add
mov
mov
xchg
mov
aaa
ret
cmp
jb
faddl
push
cwtl
shrl
mov
pop
fimuls
pop
dec
push
xor
adc
pushf
data16
pop
or
dec
dec
mov
dec
xchg
lea
adc
xchg
xor
aaa
sti
or
sub
mov
in
lea
icebp
in
cmp
or
arpl
andb
mov
jns
lea
mov
les
push
sbb
mov
cli
jno
leave
test
shlb
fwait
je
or
daa
sarb
std
out
mov
aaa
ja
xchg
pop
dec
xor
xchg
lods
pop
ret
pop
and
aad
cltd
mov
shlb
mov
iret
mov
pop
sbb
aas
gs
movsb
std
outsl
mov
mov
push
int3
jg
mov
cmp
std
push
sub
cmp
add
mov
mov
pop
and
loope
push
movsb
adc
call
out
sbb
loopne
sub
cmpl
fsubl
cmp
mov
jnp
sbb
or
jg
xor
cmc
mov
mov
xor
or
jl
jle
fcomp
dec
add
lret
jae
cmp
mov
outsl
outsb
sub
faddp
stc
sbb
mov
cwtl
adc
stc
outsl
or
popa
jg
cmp
aaa
jnp
pop
repnz
sbb
cmp
fadds
aad
dec
roll
fsubp
inc
movsl
pop
xchg
lret
or
aas
int3
xchg
pop
daa
cmp
and
aas
lahf
sub
aad
fwait
test
stos
fstps
lret
bound
push
add
es
mov
cs
jnp
movzbl
mov
mov
adc
cmp
jg
stos
xlat
lds
das
dec
push
js
pop
or
mov
sbbl
into
xchg
xchg
cmp
gs
jmp
loopne
stos
mov
mov
add
stc
push
scas
ficoml
mov
or
into
dec
rcrl
ret
cltd
ss
sub
sbb
ds
mov
pop
xlat
jbe
cmc
insb
pop
cmp
ss
dec
xor
test
out
cmpsb
das
aad
into
add
xchg
insb
jmp
jle
xchg
or
arpl
and
and
fbstp
je
pop
xchg
sub
or
popf
imul
mov
ss
test
sbb
push
cmp
dec
ret
pop
xchg
ljmp
stos
ror
mov
lods
pop
movsb
add
add
fstps
idivl
lea
mov
int3
dec
test
push
pop
xchg
lret
add
in
int
push
jp
outsl
pushl
shrl
aas
pop
and
imul
push
push
adc
inc
or
iret
xchg
add
test
mov
sbb
iret
lods
popa
leave
popf
mov
insb
in
jmp
jb
cvttsd2si
cmp
imul
pop
push
scas
bound
cmpsb
aad
push
cwtl
stos
leave
ljmp
shlb
mov
sub
adc
sbb
inc
pop
jnp
adc
out
mov
fcoms
cmp
cmc
test
test
or
shrb
mov
fdivs
jp
out
adc
lods
inc
lods
add
ds
adc
mov
clc
aam
push
in
and
cmp
cmc
std
cwtl
xor
xor
jnp
pop
xor
inc
push
cmp
mov
push
cmpsl
dec
xchg
out
call
and
sbb
jmp
aas
pop
xor
hlt
push
xchg
sbb
push
dec
lret
fildll
fdivr
imul
mov
call
cmp
cmc
hlt
sti
outsl
or
jle
sbb
inc
les
lcall
xchg
sbbb
jns
fsubrs
xchg
mov
or
daa
out
sbb
ret
insl
cwtl
and
dec
sub
imul
inc
jmp
pop
mov
icebp
dec
mov
sub
fstpl
in
mov
xor
cmp
sahf
imul
orb
mov
les
imul
xchg
inc
jmp
inc
adc
aaa
mov
sbb
into
add
cmp
ficoms
test
inc
push
mov
jg
cmpsl
push
cmc
sub
mov
jne
add
xor
test
rcrl
stos
push
stc
mov
sti
ret
or
sub
sub
push
pop
inc
sbb
pop
cli
aad
repnz
jnp
dec
inc
lds
add
das
ds
adc
sbb
in
gs
jp
sub
and
inc
cmp
fs
test
push
sahf
mov
mov
out
mov
fiadds
jns
cmp
xchg
ret
dec
inc
aaa
or
pop
mov
pop
add
ds
mov
enter
and
xchg
repz
sbb
or
sbb
sub
add
jecxz
jnp
lret
mov
mov
jnp
popa
push
adc
jbe
xlat
cmp
sti
inc
dec
lock
leave
ljmp
in
out
lea
pop
adc
leave
add
out
mov
or
sub
add
jae
sti
adc
xchg
pop
mov
shl
add
and
inc
push
call
inc
xchg
out
sub
bound
sbb
jnp
je
test
mov
add
call
nop
ljmp
hlt
sbb
int
mov
cmp
jmp
mov
xchg
lds
xchg
jg
sbb
jecxz
pop
leave
addb
lods
out
pop
in
sub
sbb
mov
pop
mov
pop
loope
and
jnp
pop
mov
into
pushf
jno
dec
cmp
jge
push
addr16
sbb
pinsrw
in
stos
ja
mov
in
pop
outsb
lds
ret
movsb
sub
out
push
call
and
clc
mov
adc
scas
lcall
insb
ret
mov
fstl
and
mov
mov
icebp
add
js
dec
fldcw
jp
mov
or
int
jne
or
loopne
aam
sub
mov
mov
mov
dec
push
pop
inc
xor
xchg
mov
je
das
cmp
adc
xchg
lret
je
mov
dec
cs
xor
lock
mov
mov
dec
xchg
pop
movsb
jmp
or
xchg
ja
lret
sub
push
jne
fnsave
xor
hlt
fdivl
xor
jns
aam
adc
xchg
orb
cmp
dec
mov
es
ss
lock
mov
roll
test
movl
test
inc
jb
nop
xchg
or
push
push
stos
aad
pop
lret
repnz
das
add
dec
stos
adc
and
mov
and
das
ficoml
aaa
nop
mov
mov
hlt
xor
inc
push
mov
xor
jl,pn
and
incb
cmpl
jnp
mov
sbb
add
add
shll
loop
pop
mov
and
pop
xor
test
cli
fwait
shlb
pushf
push
fs
jl
push
sahf
call
fimuls
mov
pushl
push
dec
push
dec
aas
and
scas
inc
lods
aaa
pushf
push
mov
add
jg
cltd
xor
cmp
hlt
adc
call
and
test
jo
add
mov
inc
adc
or
cmovnp
cmp
xor
inc
enter
adc
inc
xor
fcomps
imul
in
insl
push
inc
sbb
jmp
sbb
pop
mov
ss
shrb
sbb
add
daa
fisttpll
mov
push
jmp
lea
jecxz
lcall
sub
push
push
push
pop
test
rcll
pop
pop
and
cltd
into
cmpsl
inc
xor
dec
inc
cmpsb
rcrl
rcll
subb
nop
or
pop
lcall
leave
jmp
sub
in
or
and
sub
sub
cmp
push
xor
mov
divl
fistl
pop
inc
push
daa
mov
cmp
adc
jo
add
mov
inc
jae
out
inc
push
pop
sbb
stc
xchg
dec
ljmp
dec
sub
outsl
sbb
imul
jno
adc
dec
dec
add
jne
push
pop
cmpsb
sbb
popf
cmpsb
sub
sbb
shll
sub
jbe
js
sbb
stc
roll
cmp
push
adc
out
jo
add
sbb
fsubs
xchg
in
mov
fcomi
push
fdivs
je
pop
cld
pop
sar
cltd
mov
pop
jmp
icebp
pop
popa
pushf
int
scas
push
test
or
push
scas
push
andl
sar
jno
leave
mov
outsl
mov
push
pop
mov
inc
inc
push
push
xchg
mov
jecxz
or
mov
pusha
mov
lahf
sbb
push
inc
insl
lods
jno
aad
cli
xchg
jne
out
rorl
or
scas
xor
arpl
test
lahf
stc
jnp
test
flds
push
lcall
jbe
out
test
cmc
cmp
add
or
stos
push
scas
inc
insb
push
jne
fcomps
dec
test
dec
das
js
lock
iret
mov
cmp
or
dec
lahf
and
fistpll
inc
inc
add
or
in
push
incb
jmp
aam
mov
int
mov
popa
adc
pop
sbb
ljmp
outsb
dec
mov
ljmp
testl
xchg
mov
movsl
out
xchg
sbb
inc
cmp
test
cmpsl
mov
into
sub
iret
cmp
hlt
pop
in
repz
je
adc
fs
bound
lcall
push
cmc
shrb
gs
das
sub
push
imul
pop
xorl
or
or
sub
mov
lds
enter
xchg
xchg
test
lds
popa
xlat
sub
pop
xlat
jecxz
mov
and
loopne
test
clc
cli
pop
mov
push
dec
je
mov
add
aaa
mov
out
loope
and
sub
imul
in
inc
mov
movsl
in
mov
cmp
sub
mov
es
pop
rorl
xchg
sbb
sub
jecxz
int
pop
sbb
push
xor
sub
jl
jp
xchg
xchg
mov
jns
push
gs
outsl
jbe
xor
leave
in
ss
and
rcpps
aad
sbb
inc
cltd
pop
push
cld
jge
xchg
dec
push
xchg
sti
xchg
and
pusha
fistpl
ja
dec
hlt
js
or
mov
inc
test
mov
sub
insl
push
mov
mov
sub
jp
or
mov
inc
repz
pop
shl
notl
movsl
inc
push
sbb
cmp
lahf
mov
sub
xchg
inc
mov
and
sbb
jg
jmp
jno
sub
outsb
lret
into
or
lods
outsl
add
sbb
xchg
in
inc
insb
push
pop
cmp
jle
or
add
mov
dec
rcll
out
cli
in
pop
stc
mov
ficoms
in
cmpsl
lahf
fidivrs
das
jns
repz
pop
sbb
mulb
dec
lret
lret
js
andl
pop
movsb
sbb
or
mov
and
lock
push
mov
mov
lahf
xchg
and
mov
or
cmp
shll
movsl
je
pop
xchg
push
hlt
shl
or
push
push
clc
xchg
mov
dec
pop
cmpsl
lods
shlb
xchg
lock
fildll
push
pop
or
jbe
cmp
and
lret
iret
dec
jno
mov
aad
adc
jno
sub
aam
xor
cmc
add
test
nopl
add
mov
cmp
pop
inc
jp
ret
iret
popa
mov
hlt
push
repnz
or
mov
pop
insb
into
jne
inc
fcomi
cmpsb
std
fwait
inc
mov
mov
fimull
cld
dec
jge
xchg
cmp
fidivrs
je
pop
lock
and
mov
mov
div
imul
sub
lret
lock
rcrl
sbb
cmp
ss
mov
mov
fildl
mov
and
lds
shl
cmp
in
jl
xchg
lahf
jp
pushf
mov
sbb
mov
jb
sbb
sahf
into
inc
xor
inc
add
push
mov
jb
lret
pop
test
popf
or
add
nop
push
jp
aad
scas
inc
lods
push
sbbb
hlt
clc
data16
test
jb
sahf
inc
xor
and
xchg
loop
popa
mov
sahf
dec
out
cmpsb
and
pop
test
es
cmp
into
mov
push
outsb
jnp
mov
aas
les
mov
pop
xchg
icebp
arpl
das
dec
inc
cli
jns
jae
or
xchg
mov
adc
fcomi
sub
and
push
pop
and
daa
push
mov
fmull
stos
mov
in
aaa
xchg
fdivrl
inc
aam
fsts
fld
fdivrl
lcall
jns
xor
or
cmc
cmp
lahf
inc
inc
aaa
aas
xchg
es
imul
stos
loope
imul
jle
mov
arpl
mov
push
shr
pop
sbb
rol
les
pop
sti
adc
jmp
fnstcw
push
bound
fistpl
sbbl
push
mull
ret
das
and
test
enter
outsw
stos
xor
loop
outsl
sbb
ret
mov
mov
mov
pushf
rcrb
js
mov
in
addr16
sbbb
pop
popf
mov
jmp
mov
dec
adc
cli
or
xlat
aas
pop
rol
int3
in
imul
xor
loop
out
push
inc
jae
clc
pop
cmp
in
lret
xchg
xchg
lock
hlt
cmp
cs
je
inc
nop
fildll
cmp
rcl
push
cmc
jnp,pn
jmp
and
hlt
xchg
hlt
pushw
xor
inc
pop
or
adcl
pop
inc
dec
xchg
sarl
cmp
insl
pop
shl
scas
es
mov
cmp
cmp
fnsave
je
lea
push
cmc
sbbl
aad
dec
popf
push
pop
jne
popa
xor
inc
sbb
pushf
clc
xchg
push
adc
jmp
rep
cmp
xor
stc
push
mov
leave
lea
push
imul
jbe
xchg
stos
mov
or
dec
out
sub
enter
inc
mov
lret
inc
xchg
imul
push
mov
sti
gs
push
adc
and
xchg
pop
call
sbb
sbb
ds
push
sbb
add
mov
cli
pop
dec
sub
cmp
dec
add
push
sbb
dec
and
js
repz
jbe
sub
in
xchg
sub
loopne
stc
mov
insl
inc
notb
cmpsl
popa
in
inc
jg
pop
popa
adc
hlt
cltd
and
and
fstpl
fdivl
fstpl
cmc
add
mov
add
mov
sbb
sub
pusha
and
das
lret
lods
mov
mov
cmp
jl
fisttpll
pop
mov
pop
mov
push
push
or
mov
andl
xchg
cmpsl
jmp
dec
scas
lcall
sbb
imul
imul
or
fwait
sti
jbe
xchg
shl
or
ds
pusha
hlt
adc
mov
lds
lds
adc
cmpsb
adc
daa
xchg
and
sub
roll
das
sub
and
leave
xchg
jno
and
das
and
mov
xlat
cmpb
xchg
inc
adc
jg
sahf
ss
js
dec
arpl
les
xor
shrb
lcall
iret
push
enter
enter
sbb
loope
xchg
or
inc
vxorpd
cmc
mov
jle
inc
jmp
xchg
subl
push
test
push
inc
ja
imul
aam
xchg
push
mov
mov
lds
dec
pushw
daa
repnz
or
pop
out
pusha
cs
loop
mov
inc
loop
test
dec
mov
adc
das
mov
push
orl
aas
cmpsl
and
test
scas
mov
ret
pop
pop
ja
push
pop
orl
ret
test
paddusw
es
pop
rcll
mov
cpuid
cmp
and
xor
lods
mov
cld
les
fisttps
push
push
add
lods
add
xchg
cmpsb
mov
mov
call
out
or
jbe
push
ds
lds
subl
inc
addr16
ficoml
add
xor
cmpsl
push
negl
sbb
mov
push
pop
mov
add
jge
jo
mov
cmpsl
fsubs
ret
lock
adc
or
dec
mov
data16
dec
enter
pop
add
popf
in
movsl
jg
mov
push
jbe
pop
mov
cmc
inc
cmc
inc
icebp
popa
lock
mov
insb
dec
enter
notb
pop
fists
cs
push
addr16
mov
or
xlat
or
pop
jmp
xchg
punpckhbw
outsb
dec
pop
inc
adc
outsb
xor
lods
dec
cmp
jno
rcll
clc
dec
pop
subl
xor
sub
subl
pop
jmp
or
add
loopne
add
cmp
mov
aas
adc
arpl
push
outsb
outsb
mov
push
mov
fwait
lcall
sub
sarb
fdivl
clc
adcl
cmp
dec
fisubrs
inc
or
outsb
mov
aad
ds
mov
or
mov
roll
pop
imul
nop
rol
push
sub
cmp
mov
cld
adc
adc
mov
fsubs
dec
inc
js
in
in
inc
popf
add
dec
imulb
sbb
int
mov
fs
clc
jecxz
loop
cmp
ss
cmpb
pushf
fnstsw
pop
pop
xor
cmp
sahf
adc
out
sbb
sbb
cmpsl
jnp
je
sub
sbbb
pop
xchg
inc
xchg
int3
ds
in
push
stos
pop
push
call
mov
inc
lahf
pop
aam
mov
aam
push
jb
dec
or
jns
pop
fimuls
ss
jne
pcmpeqb
xor
movsl
jp
xchg
push
and
jp
add
xchg
sbb
mov
cmp
or
and
cmpsb
cmp
lock
mov
mov
test
test
mov
repnz
xchg
cmp
xor
sbb
cli
jbe
lahf
out
imul
test
jbe
test
jp
sbb
inc
jb
fimuls
out
jo
adc
xchg
shr
jne
jne
scas
sar
cli
iret
sti
add
lea
cmp
cltd
test
cmp
fbstp
sbb
imul
int3
adc
call
lret
jp
into
into
cmpb
push
xchg
cmc
add
rolb
fcoms
test
push
int
pop
and
dec
xor
imul
xlat
xor
stos
pop
sbb
imul
and
inc
outsl
mov
jp
xor
sahf
or
movl
sti
inc
jae
stc
pop
testb
pushf
fs
adc
lods
lea
jge
leave
lods
pop
nop
mov
and
rcrb
out
xchg
sub
mov
filds
sub
sbb
in
loope
dec
popf
cli
gs
in
sbbl
adc
or
mov
add
cmp
pop
push
fbld
in
dec
xchg
ljmpw
cld
jnp
in
mov
pop
es
pop
nop
inc
mov
or
mov
or
sub
pop
dec
subps
mov
scas
clc
gs
adc
cmp
add
inc
xorb
movsb
mov
sbb
jo
sub
stos
xchg
mov
cli
mov
loope
adc
inc
sub
sti
fsts
jae
xchg
add
adc
test
stos
fsub
mov
fbld
sub
fcoms
loopne
and
jmp
mov
popa
sbbl
mov
mov
mov
xchg
aam
in
sar
daa
push
out
jl
rcrb
gs
test
mov
insl
je
cld
jl
stc
das
or
sbb
sbb
aas
xchg
pop
xor
lods
adc
sub
mov
sub
xchg
lock
pop
dec
insl
scas
fidivrs
lahf
and
out
sahf
je
sub
orl
adc
test
xor
push
sbb
sarl
mov
pop
push
test
pop
cltd
adc
jg
push
cmc
or
repnz
je
add
loope
push
xchg
push
ja
in
pop
push
clc
mov
lret
sub
add
jg
mov
arpl
or
scas
hlt
daa
dec
lcall
xor
ljmp
mov
repnz
in
sub
mov
xor
sbb
int
add
jle
inc
jp
or
fsubs
mov
fcom
add
test
cwtl
pop
test
mov
push
jns
mov
pop
movsl
imul
adcl
lret
gs
sub
xchg
push
fbld
sub
add
lcall
daa
add
mov
popf
push
ja
cmp
xor
lods
out
leave
adc
lret
mov
cli
imul
out
in
js
lods
dec
stos
popf
fidivrs
jl
je
stc
adcl
ret
popa
add
xlat
pop
lahf
sub
and
pop
sti
mov
mov
and
inc
jmp
or
stc
inc
sub
jno
rclb
jl
roll
outsl
or
mov
push
mov
xor
xor
leave
xor
add
scas
add
pop
test
sarl
in
xor
xor
jb
cmp
fnstcw
cwtl
xchg
add
pop
bound
push
add
dec
mov
mov
movsl
pop
testl
sbb
cs
mov
lret
adc
lret
ss
popf
push
push
xchg
dec
dec
mov
aas
cwtl
pop
inc
aam
cmp
jmp
clc
mov
xchg
add
in
adc
sub
sahf
push
xor
mov
sub
and
mov
mov
lods
test
clc
push
ret
in
xor
fisubl
mov
sbb
mov
sub
imul
push
cmp
outsl
outsb
stos
inc
adc
sar
lret
xchg
mov
xchg
pop
roll
jbe
pop
sub
inc
fdivs
stos
sbb
mov
out
lock
sub
xor
and
cmc
out
mov
fcoms
jmp
cli
mov
mov
dec
outsb
jb
rorb
stos
push
xor
loopne
push
ds
cmpsb
jne
cmp
push
push
pop
pop
xor
mov
push
cli
pop
outsb
mov
sbb
jns
iret
add
movsb
add
stos
adc
mov
xor
hlt
test
lods
scas
pop
sarb
pop
xor
nop
mov
mov
mov
out
mov
mov
data16
mov
adc
div
push
xor
xor
imul
lods
mov
cmp
inc
pop
push
iret
outsb
xchg
and
inc
jns
push
mov
or
inc
mov
adc
stos
push
andb
ds
push
push
sti
cmove
test
cltd
clc
dec
out
and
or
gs
push
fcomp
mov
out
fcoms
push
rorb
xor
jbe
sub
cmp
inc
jge
adc
fsubs
sub
mov
lcall
mov
cmc
inc
xchg
pop
and
push
bound
imul
out
lahf
mov
int
or
and
mov
rcrb
leave
fistpll
pop
mov
stc
xchg
repnz
imul
lea
cmpb
out
jg
dec
xor
pop
sub
dec
aaa
pop
sbb
ret
mov
leave
jbe
pop
lds
out
daa
jno
or
mov
and
xchg
int
push
lcall
lahf
shll
sbb
jae
and
push
and
push
dec
lods
adc
lahf
or
pop
add
dec
shrl
and
cmp
out
in
jo
push
sub
sbb
idivl
filds
xor
in
fwait
jp
xor
imul
repz
mov
xchg
jne
and
push
and
adc
and
je
loop
mov
maxps
cli
push
pop
loope
movb
stos
adc
mov
cmc
pop
pusha
add
in
xor
lock
rol
dec
imul
jb
pop
daa
jp
add
mov
jne
mov
cli
lret
xlat
pusha
lea
adc
fsub
incl
js
add
cmovge
push
sub
mov
inc
addl
insb
aas
outsl
popa
icebp
pusha
cmp
mov
out
les
gs
xor
inc
mov
dec
pop
outsb
int3
push
lcall
push
xlat
jns
push
pop
cmp
xchg
mov
icebp
repz
cmp
inc
push
aas
cmp
adc
pushf
out
repz
dec
fucomi
and
add
dec
pop
pop
test
sti
fs
adc
scas
add
mov
repz
mov
int
mov
test
xor
roll
stc
inc
in
sub
cmc
dec
xchg
test
push
out
int3
mov
fs
andl
inc
loopne
xchg
cmp
addl
push
xchg
dec
lds
testl
dec
inc
fmull
mov
int
push
jp
or
inc
lret
test
pop
xorb
out
sbb
dec
call
das
mov
mov
ja
pop
jb
fidivl
insl
into
in
sbb
fwait
xor
jmp
cltd
pop
or
insb
or
je
xor
outsb
je
imul
inc
divl
fnstcw
xor
xchg
mov
push
mov
scas
inc
or
outsb
loopne
mov
test
sarl
xorb
jmp
rcrb
in
daa
cmpsl
iret
cmp
jmp
dec
add
xchg
leave
hlt
cld
loop
xchg
jae
cmp
shlb
int
jbe
fimuls
cmp
leave
ret
jae
add
pop
mov
mov
imulb
aas
and
fstl
in
jg
xor
cmpsb
mov
dec
movsb
xlat
in
hlt
stc
lds
shlb
xchg
mov
mov
je
aam
jns
jmp
std
xchg
pop
push
cmp
jg
imul
stos
push
add
sub
mov
cli
and
mov
jl
mov
sarb
inc
cmp
sbb
test
add
outsb
mov
xor
stc
lret
in
in
divb
push
jb
or
dec
stc
jno
push
stos
nop
or
dec
dec
dec
repnz
shrl
adc
xlat
int
out
les
pushf
mov
and
das
add
adc
ss
jnp
mov
or
loopne
loop
xlat
jo
mov
sub
std
lds
daa
jl
cmpsl
xchg
lods
stc
les
push
ret
push
jmp
cmp
sbbb
pop
mov
jl
jl
jle
movsl
test
jecxz
jg
pop
xor
mov
into
scas
sub
imulb
fildll
mov
pop
fucomi
mov
int
sbb
inc
cmp
sub
mov
and
gs
nop
enter
cltd
aas
out
inc
pop
adc
insb
mov
xchg
stos
push
sti
out
in
sbb
popa
shrd
stos
push
fisubrl
cmp
pop
pop
xor
mov
popa
adc
xor
jl
mov
jo
mov
pop
icebp
fwait
dec
call
mov
push
fildl
push
lds
insb
shlb
es
mul
addr16
inc
bound
inc
mov
mov
adc
cmpl
lcall
sbb
popl
loope
lods
loope
or
ds
jno
jns
loopne
mov
mov
mov
scas
mov
sbbl
inc
mov
xchg
mov
sub
cmp
in
in
push
mov
lcall
sahf
or
xchg
mov
xchg
mov
xchg
pop
iret
cmp
mov
xchg
mov
push
mov
mov
xchg
cltd
xor
fiadds
xor
out
lods
jo
jl
sbb
orb
or
clc
xchg
enter
jae
fs
test
jae
cmp
push
stos
jecxz
stc
outsl
add
inc
cltd
add
cld
cmpsl
adc
clc
push
bound
mov
mov
imull
aam
pop
dec
cmp
mov
outsb
cli
mov
sub
mov
xchg
scas
fidivrl
andl
test
jbe
sbb
push
sbb
fnstcw
ficomps
sbb
mov
cli
lea
and
push
lds
cmc
ja
rcll
mov
mov
lods
pushf
or
dec
jp
mov
adc
not
nop
push
push
sahf
xor
int3
ret
ret
movsl
cs
pop
out
test
insb
sbb
ret
shll
enter
pop
dec
mov
xchg
dec
aad
leave
or
fimull
stos
lretw
mov
out
sbb
test
push
pop
addr16
aad
jae
or
sbb
call
mov
pop
jae
sbb
js
adc
int
mov
js
and
fnstsw
jno
mov
dec
cmpsl
dec
add
movsb
outsb
add
imul
pop
mov
aam
pop
cmp
imul
push
dec
icebp
sub
mov
rorb
sub
adc
std
cmp
add
dec
out
out
pusha
cmp
cmp
jo
pop
les
sub
push
out
add
sub
inc
lret
pushf
scas
sbb
daa
sub
test
or
enter
pop
add
push
cmpsl
in
dec
add
push
pop
je
jae
data16
imul
imul
fimull
adc
out
jno
fs
xor
iret
xchg
pop
cmpsl
cmp
aam
fiadds
xchg
stos
aas
jno
adc
imul
adc
shrb
fldenv
addb
mov
popa
hlt
or
outsl
push
adc
and
test
mov
push
pop
jbe
mov
cltd
and
arpl
stos
repnz
pop
push
dec
jg
inc
add
mov
adc
sti
and
dec
je
cmpsl
sbb
mov
push
mov
lods
std
stc
in
mov
mov
push
insb
adc
xor
clc
sbb
jg
sub
fldt
nop
xor
push
lea
insl
test
xchg
mov
pop
inc
ss
loope
or
push
mov
dec
hlt
sahf
jno
sub
or
dec
jo
mov
push
push
es
xor
mov
lcall
decl
aaa
xor
push
jp
sarb
adc
popf
stc
bound
push
icebp
xchg
and
sbb
sti
pop
lret
push
sbbb
add
xor
mov
pop
pop
std
mov
sbb
std
pop
aaa
or
push
mov
inc
pop
sub
push
stos
inc
test
push
or
test
mov
xchg
das
sti
jge
cmp
pop
iret
push
or
aas
inc
stos
clc
fsubrs
pop
lret
inc
mov
aam
outsb
sub
data16
cmc
inc
cld
adc
ret
insb
loop
jbe
dec
test
dec
stos
adcl
and
lahf
mov
sbb
adc
outsb
inc
iret
fstpl
lods
test
rcll
ret
and
fildl
xor
pop
jp
jmp
je
cmpsl
dec
push
mov
test
in
jl
cmc
or
mov
inc
test
int
or
or
push
dec
adc
loopne
jbe
lds
mov
enter
or
pop
ficoms
jb
aas
test
mov
insl
mov
out
or
dec
stc
cmp
jo
mov
xor
jb
sbbb
add
leave
cmp
push
stos
push
mov
dec
adc
mov
cld
jecxz
adc
movlps
lods
or
xchg
xchg
jmp
ds
mov
xor
mov
shrl
gs
test
aaa
loopne
mov
mov
lea
or
add
repz
mov
in
sbb
push
adc
jb
jo
test
or
scas
pushf
test
cmp
add
popl
setne
mov
mov
sarb
or
mov
test
xchg
adc
cmp
and
inc
dec
js
mov
jnp
mov
adc
mov
ljmp
or
add
fidivs
iret
rclb
popf
mov
pusha
sbb
lcall
and
mov
nop
js
dec
jae
push
cltd
push
mov
sbb
into
les
inc
and
or
and
scas
or
incl
aad
xor
test
jno
std
mov
ds
mov
cmp
repnz
fadd
pop
mov
adc
sbb
xchg
jnp
js
jb
push
aad
pop
mov
imul
adc
icebp
cmp
push
adc
cli
in
test
jo
mov
movsl
mov
iret
inc
test
aaa
push
fnstcw
mov
rclb
insl
lahf
popf
mov
test
repnz
mov
out
sub
decl
je
rorl
or
mov
push
lods
inc
aad
movsb
cmp
xor
inc
sub
mov
ss
insl
or
fucomp
pop
bound
sub
push
or
fcmovnbe
mov
gs
xchg
or
stos
mov
leave
or
sub
sti
out
in
mov
fwait
xor
loop
inc
dec
ljmp
andb
pop
mov
or
push
jb
movsb
cmpl
testb
mov
ja
dec
ljmp
inc
fisttpl
dec
or
test
push
add
jb
xacquire
in
out
jbe
scas
xchg
push
clc
arpl
jne
das
adc
loop
xlat
mov
or
xor
ds
mov
lcall
adc
and
mov
subb
pop
fsincos
jb
aas
mov
dec
or
or
into
jle
or
mov
xor
sahf
xchg
das
mov
push
jecxz
push
ja
fdivs
xchg
push
cmp
mov
popf
das
mov
sbb
cmp
mov
mov
adc
mov
dec
fcomp
push
sub
jns
shrb
leave
xchg
pushf
pusha
pop
bound
cmp
pminub
push
sub
arpl
stc
mov
sarl
ret
push
fdivl
pushf
leave
jmp
push
sti
sub
dec
pop
and
add
or
ss
lea
push
popf
push
test
aaa
pop
adc
ret
mov
and
and
popf
cmp
inc
mov
cmc
fiadds
fnstcw
jl
push
test
inc
push
mov
fadds
jg
jl
inc
xchg
icebp
mov
shrl
testb
push
insl
xchg
adc
push
or
inc
cltd
adc
sub
dec
pop
add
call
loope
das
dec
jmp
and
stc
inc
sti
popa
movsl
sbb
sub
testb
push
add
lret
cmc
int3
or
xchg
out
xlat
sub
mov
mov
sbb
fwait
jp
dec
jbe
loop
cld
xlat
sub
push
jge
int
sti
cmp
jae
push
add
les
add
inc
stos
xor
jb
pop
xchg
popa
pop
pop
in
outsb
cld
stc
and
pop
movsl
fisubrs
int
sub
and
fstpt
jge
popf
lock
xchg
inc
scas
mov
mov
ret
mov
je
gs
lods
mov
mov
mov
sbb
adc
mov
fs
test
mov
pushf
add
ljmp
lcall
push
adc
pmaxub
je
movsb
std
arpl
jae
jmp
cli
jne
push
test
test
mov
imul
divb
push
sbb
pop
jmp
loopne
inc
cli
adcb
jl
pop
js
xor
mov
dec
cmp
mov
cmp
add
repz
imul
leave
jbe
and
sub
mov
jnp
roll
sub
ja
mov
daa
pop
inc
adc
push
xor
lock
repnz
fiadds
enter
cmp
xor
push
js
sub
lea
xchg
repz
mov
or
or
stos
mov
fidivrl
cwtl
aad
add
mov
and
pop
ds
test
push
xchg
sub
fisubrl
mov
scas
mov
loope
imull
sub
mov
sub
adc
dec
or
cltd
and
or
cwtl
mov
sub
xor
dec
shrb
das
out
lds
hlt
dec
popf
sbb
push
sub
jmp
sub
mov
leave
xchg
inc
or
pop
daa
jle
xor
pushf
jnp
push
movsl
rcrb
js
lods
push
xor
orb
aaa
cmp
out
mov
movsl
std
adc
not
js
xchg
push
push
add
cmpsb
divl
rorl
mov
cmc
lcall
xor
ret
push
lods
mov
test
mov
shrb
mov
mov
push
mov
xor
movsl
mov
sbb
iret
loope
repnz
add
and
ljmp
add
sub
xor
cmpsl
lds
shll
int
xchg
sub
jg
idiv
sub
adc
sub
and
hlt
sub
das
hlt
mov
jecxz
sub
fimull
cs
inc
test
inc
add
sub
ffreep
mov
popf
xchg
fs
push
lret
xchg
hlt
sti
nop
dec
fstpt
jbe
ljmp
inc
dec
int
mov
mov
ret
inc
jle
jns
adc
cmp
adc
mov
icebp
in
cmc
cmp
imul
fistpl
movsb
cmovg
stos
xchg
xor
jmp
lods
pop
sbb
in
std
mov
mov
fsubs
xor
push
lds
sbb
int
mov
sbb
mov
lcall
out
jno
xorl
mov
stc
jge
ljmp
in
ljmp
pop
push
mov
pop
xor
stos
test
adc
pusha
sbb
repnz
pop
es
pusha
mov
jb
pop
cmp
dec
mov
shrl
aaa
push
gs
mov
cmp
sbb
xor
repz
inc
jbe
outsb
aaa
xor
mov
imul
insb
divb
movsl
shll
cmp
xchg
lcall
mov
rolb
fists
js
aam
imul
xchg
pop
and
push
jl
mov
insl
sbb
inc
inc
push
jnp
dec
test
fs
fisubrl
cld
add
sbb
int3
in
pop
and
test
dec
mov
pop
insl
add
sbb
es
add
pop
imul
add
mov
ret
xchg
std
push
pop
adc
loopne
inc
mov
push
movsl
push
lahf
and
cld
mov
call
jle
jmp
ja
psubsb
cwtl
push
aaa
fs
ficomps
ret
test
jecxz
xor
loope
cmp
das
in
mov
and
xlat
inc
jne
mov
add
push
inc
or
mov
sub
sbb
dec
push
int
xor
mov
dec
mov
sti
addr16
xchg
repnz
imul
fucom
out
ljmp
mov
pop
rorl
repnz
sbb
lods
push
push
xchg
sub
add
js
mov
jl
int
adc
mov
adc
xlat
pop
adc
aam
mov
pop
flds
punpckhbw
lret
scas
jecxz
lods
ljmp
ja
adc
jmp
mov
adc
adc
incb
lcall
and
clc
and
xor
inc
and
lcall
jle
jle
push
push
push
sbb
pusha
shlb
push
lds
leave
pop
lods
nop
scas
jb
lahf
xor
cmp
repz
enter
in
stos
mov
xchg
into
leave
jbe
pop
cmp
pop
clc
or
or
push
mov
mov
inc
repz
es
ds
ljmp
mov
mov
repz
mov
pop
lods
orb
je
and
insb
insb
add
cmp
sbbl
arpl
lds
jo
cmp
sbb
int
dec
mov
cmp
jns
mov
sub
sub
fdivrs
cmp
adc
ret
fwait
inc
mov
inc
pop
pop
jl
jmp
dec
cmc
hlt
neg
sahf
test
lods
clc
ja
xor
sub
sahf
scas
mov
xchg
add
mov
das
idivl
pop
cltd
in
popa
lock
iret
lret
sub
pop
pop
lods
mov
cwtl
jle
adcl
pushf
pop
cltd
imul
pushf
jns
and
vmovdqa
or
adc
imul
or
stos
insl
adc
in
mov
fldenv
into
ficoml
xor
mov
jo
add
push
xor
add
stos
fnsave
sbb
dec
clc
ror
pop
cmp
jecxz
mulb
mov
xchg
mov
test
shll
adc
sub
insb
cs
push
push
mov
int
das
and
adc
lahf
mov
xchg
sbb
test
push
dec
or
cwtl
sub
adc
jnp
pop
lcall
data16
push
pushf
or
adc
cmpsl
inc
cmpsb
repz
lock
aad
jg
pop
mov
pop
mov
or
and
fldcw
xchg
inc
into
popa
push
xor
cmp
sbbl
and
into
sbb
ficomps
pushf
mov
jae
scas
pop
cmp
ja
pop
or
pop
cmp
xchg
adc
push
sbb
arpl
jnp
repnz
and
and
mov
cmpsb
rol
adc
inc
jns
sub
test
mov
xor
add
sti
repnz
inc
cmp
popa
scas
add
and
xchg
inc
jecxz
xchg
enter
and
dec
testl
add
cmp
mov
cmpsb
dec
shlb
jns
sbb
add
jmp
addr16
adc
dec
jge
jg
add
mov
ja
in
insl
mov
mov
pop
pushf
xor
stc
std
add
pop
sbb
adc
rcrb
dec
fdivr
scas
mov
popf
or
das
push
call
dec
xchg
loopne
cld
movsl
stc
in
push
js
and
or
xor
lret
and
add
jne
push
pusha
out
stos
cld
mov
fisubl
push
ret
movsl
jmp
xor
sbb
int
sahf
mov
jg
clc
stc
call
and
xor
std
jbe
dec
dec
dec
fistps
jecxz
sbb
test
daa
xor
movsl
inc
jae
adc
inc
and
xchg
ja
mulb
cwtl
jl
insl
add
add
and
scas
mov
imul
dec
inc
imul
lods
arpl
dec
jmp
pop
test
adc
cmpsl
in
sub
sbbb
jecxz
pop
decl
ret
dec
or
insb
jg
xchg
mov
loop
pop
xchg
jne
scas
add
sub
adc
iret
test
xor
lods
xchg
inc
sub
into
or
cmp
push
loopne
adc
dec
jnp
mov
ljmp
mov
aaa
test
add
pop
inc
stc
cli
add
inc
cmp
imul
push
int
push
add
xchg
loopne
add
arpl
pop
push
bnd
jb
xor
nop
and
sub
add
sar
faddp
out
sbb
xor
outsb
into
adc
sub
rorb
idivl
das
dec
or
std
adc
add
push
in
mov
inc
mov
leave
jnp
repz
adc
js
aad
mov
lcall
cltd
dec
cmc
pop
pop
fbstp
mov
popf
jmp
xor
mov
adc
outsb
mov
jp
xchg
loope
stc
fidivl
int
cltd
test
test
sbb
jge
lahf
sub
and
sbb
test
shl
push
mov
ja
dec
cmpb
insl
loopne
mull
sahf
add
pop
mov
stos
push
jo
and
lods
out
sbb
and
lods
push
push
xchg
pushf
ljmp
adc
adc
ret
cmp
jbe
inc
in
test
dec
jp
les
mov
aaa
push
loop
les
dec
jae
lods
pop
sub
mov
jmp
mov
sti
adc
les
mov
in
cmp
loopne
aad
cmpsb
scas
ret
mov
and
sahf
call
jle
int
dec
mov
mov
jne
jb
mov
push
enter
fidivrs
dec
loop
xchg
dec
xchg
test
mulb
ret
jp
mov
inc
inc
pop
movsl
xchg
dec
cmpsl
loopne
dec
in
cmp
stos
loope
test
mov
cmpsb
add
or
es
xor
mov
sarl
jae
orb
push
mov
pop
das
rorl
pop
in
mov
mov
adc
sub
leave
jbe
xchg
aad
imul
imul
push
mov
adc
xor
mov
mov
fsts
sbb
push
add
inc
testl
jb
add
adc
gs
push
adcb
lret
jle
add
sub
outsl
pop
repnz
ficomps
mov
lret
xchg
pop
in
pop
fsubl
dec
xor
xchg
mov
int
or
sbb
push
mov
adc
mov
adc
pop
jo
pop
insb
dec
pop
mov
jbe
adc
add
or
fisubs
sub
ds
xchg
jmp
into
ficompl
stc
loopne
loop
std
lods
jne
inc
mov
inc
pushf
inc
mov
outsb
pusha
pop
push
lods
add
push
ja
popf
aaa
nop/reserved
mov
add
loopne
shr
scas
faddl
add
pushf
shlb
and
adc
pop
adc
ret
cltd
cmpsl
mov
insl
rcrl
in
in
insl
mov
jp
in
mov
sbb
into
sahf
add
fxch
lock
mov
fldl
add
mov
pop
loope
movsl
mov
rcrb
and
push
pop
xorb
and
lret
jb
pop
inc
test
jge
pslld
push
insb
jo
dec
sub
stc
cwtl
push
push
pop
arpl
loopne
dec
scas
nop
cmpsb
lods
lea
push
enter
mov
iret
out
dec
movsb
hlt
push
hlt
pop
jo
cs
fcmovne
je
add
fnstcw
clc
mov
maskmovq
idivl
lods
mov
lods
std
fiaddl
pop
mov
sbb
cmpb
pop
popa
stos
hlt
add
rcr
jecxz
dec
push
adc
xor
push
out
pop
js
mov
inc
mov
push
cmc
stc
cmp
aaa
cmpsw
std
add
out
sbb
push
and
sub
xchg
scas
aas
in
inc
cli
call
iret
xchg
adc
pop
inc
sub
xchg
mov
imul
mov
cmp
test
sub
add
jg
inc
pop
mov
inc
cmpl
push
or
mov
shrb
hlt
icebp
mov
mul
jno
fildl
xor
fisubl
push
jg
xor
mov
push
out
mov
data16
fidivs
mov
mov
aas
retw
jp
int3
inc
jae
test
and
fcmovnbe
jno
ljmp
decl
and
lret
sub
rsm
das
push
dec
fwait
pop
and
adc
fwait
push
lea
mov
fwait
or
daa
addr16
addr16
xor
pop
sub
not
xor
xchg
imul
inc
sbb
pop
jmp
jle
icebp
aas
inc
pop
jne
cltd
punpckhwd
inc
pop
mov
jno
mov
sbbb
leave
leave
xchg
sahf
mov
or
pop
loope
push
imul
sub
and
jo
jb
xor
mov
addr16
jl
adcb
pop
out
in
push
dec
cmp
adc
cwtl
mov
push
mov
push
imul
mov
jns
js
cmpsl
rolb
shlb
sbb
ret
ret
sbb
iret
and
cmp
scas
mov
fimull
out
movsb
inc
js
or
add
ss
push
sub
mov
mov
movl
test
popa
outsb
shrb
or
xchg
pop
add
push
sub
dec
xor
js
sbb
lock
outsb
jb
push
movsl
stos
mov
test
out
mov
inc
pushf
xchg
scas
adc
data16
test
and
inc
hlt
or
out
push
cmp
shll
adc
sti
jnp
pop
jbe
fcomi
push
out
ss
xor
cmpsl
push
adc
mov
daa
es
aad
int3
cmp
maxps
mov
add
sub
rcl
pop
add
mov
mov
jp
cmpsb
mov
sub
lahf
jecxz
lock
mov
push
test
leave
mov
jecxz
popa
pop
in
loope
pusha
ss
sub
mov
pushf
mov
movsl
and
jecxz
mov
mov
jns
ret
cmp
aas
mov
inc
inc
ret
and
cltd
out
in
sub
aam
shlb
jae
stos
cmp
ucomiss
cmp
and
testb
enter
jne
sub
sti
rcrb
mov
int3
popf
arpl
loopne
pop
idivl
testl
call
add
int3
je
imul
xchg
jo
out
js
dec
fisttps
mov
mov
mov
jmp
pop
shrl
push
in
jle
mov
inc
call
xor
cmp
sub
sub
jno
push
pop
mov
mov
add
sbb
notl
mulb
mov
mov
jecxz
inc
mov
or
pop
aam
jb
add
pop
mov
mov
sbb
cmp
insl
lds
inc
outsl
xor
sub
cmp
cmp
hlt
push
shrl
leave
xchg
pop
cmp
sub
mov
movsl
inc
and
and
sbb
fiadds
sahf
add
hlt
movsb
dec
out
fldcw
cmc
sbb
mov
sub
loop
pop
cmpsb
imul
mov
add
inc
cmp
and
and
stos
sbb
xor
outsb
push
aam
adc
arpl
int3
lds
clc
cmp
mov
pusha
out
cmpsb
shrb
jg
mov
mov
out
inc
cmp
xchg
push
enter
in
or
sbb
rclb
push
mov
cmp
or
push
sbb
sahf
and
les
xchg
dec
cwtl
test
out
push
xchg
push
repnz
nop
out
aad
add
roll
inc
fwait
popf
xor
loopne
rorb
fwait
lcall
mov
inc
cltd
mov
pop
loopne
pop
repnz
mov
xchg
inc
dec
mov
test
sbb
ret
ret
adc
in
addr16
add
in
cli
pushw
sbb
fwait
nop
inc
ficoms
jae
add
jns
cltd
insl
mov
sbbb
pop
and
lcall
and
and
add
insb
xchg
mov
out
ret
dec
jno
mov
xchg
popf
xor
scas
mulb
xchg
ret
or
rclb
push
out
add
cmp
add
xor
push
fsubrl
out
sti
jae
sarl
fmuls
xlat
cmp
sbbb
shll
xchg
inc
in
or
sbb
pushf
dec
in
imull
ss
or
movsb
fabs
inc
adc
push
pop
dec
jle
mov
in
das
test
jae
push
ljmp
imul
movsb
repz
stc
jle
leave
ficompl
mov
test
daa
jne
xchg
lahf
je
scas
and
jg
mov
pop
in
add
sub
daa
int3
dec
pop
ja
int
lock
xor
or
xchg
sbb
int
test
cwtl
cwtl
mov
lcall
mov
inc
add
add
nop
das
cmp
repnz
push
dec
xor
mov
sub
es
add
fildl
enter
das
mulps
sahf
loopne
add
xchg
xchg
sub
in
sti
inc
jb
lahf
xchg
push
sahf
push
jp
mov
jne
push
loopne
jb
add
fisttpll
mov
cmp
mov
lret
jae
outsl
negl
shrb
mov
mov
pop
sub
mov
mov
push
std
lahf
push
rcrb
lcall
push
inc
push
in
in
dec
sbb
sbb
dec
jmp
mov
call
mov
out
cmp
out
mov
mov
icebp
fimull
fcoms
into
test
jle
out
pop
cmp
cmp
push
inc
and
call
xchg
xlat
lret
in
ret
mov
inc
cmp
pop
add
call
test
adc
cmp
adc
mov
push
push
add
push
mov
imul
pop
mov
jg
repnz
push
xlat
xchg
out
xchg
and
jb
cli
iret
sbb
rcl
subl
pop
data16
cli
xchg
ds
xor
ret
mov
je
cmc
push
ss
nop
mov
inc
inc
push
pop
and
loope
and
adc
faddl
inc
dec
mov
cmpsb
lock
mov
mov
shl
enter
stos
movsl
dec
mov
cli
sbbl
leave
lods
xlat
pop
inc
dec
pusha
cltd
out
mov
popf
and
adc
out
push
mov
jle
or
ret
je
adc
fmuls
lods
or
sbb
and
scas
pop
or
lret
adc
pop
jecxz
mov
das
sub
cmp
sub
test
cwtl
dec
and
dec
and
pop
or
in
daa
and
xor
inc
push
arpl
movsl
mov
aas
sbb
jbe
in
test
pop
pop
mov
ret
in
push
scas
mov
aaa
xor
jb
add
lret
cs
push
push
sbb
mov
jnp
into
xchg
and
mov
test
arpl
lcall
dec
add
mov
or
jnp
pop
push
lret
adc
push
ret
js
sub
repnz
mov
mov
adc
lea
bound
dec
xchg
pop
sti
jnp
stc
adc
dec
test
mov
lock
ja
mov
inc
ret
add
out
dec
lds
sbb
pop
xor
imul
ss
xchg
adc
sahf
ljmp
jne
mov
mov
sbb
bswap
pop
movsl
cmc
inc
movsb
mov
es
outsl
test
push
dec
adc
loopne
pop
test
inc
mov
ret
cmp
pusha
aas
jp
mov
test
lods
mov
sub
jmp
call
fsubrl
adc
insb
cmp
sub
inc
adc
mov
lds
lahf
jae
cmpsl
or
jecxz
adc
out
pop
data16
adc
and
inc
sbb
xlat
loop
jecxz
loope
in
iret
mov
xchg
cmp
push
jbe
loopne
lds
jmp
xor
enter
xor
out
sar
adc
cwtl
cld
ficompl
sbb
cli
push
adc
jp
nop
pop
xchg
jo
xchg
movsl
xor
insb
scas
popa
push
mov
notb
nop
xor
addl
or
jl
mov
pop
pushf
xorl
dec
xchg
imulb
inc
ret
sub
push
or
outsl
fldcw
lds
repz
popa
loopne
inc
ret
rcr
dec
fs
pop
mov
mov
cltd
iret
int
inc
mov
xor
movsl
sub
sub
clc
scas
int
test
jmp
lds
pop
lret
xchg
inc
cs
dec
xor
sbbl
movsb
sub
addr16
enter
push
dec
in
in
xchg
pusha
xor
pushf
movsl
cmp
cmp
in
cwtl
mov
push
ss
ja
cltd
add
pop
sbb
jbe
adc
ljmp
jl
addb
xchg
cs
jae
pop
repz
sbb
push
mov
jo
cmpsb
in
enter
add
push
int
lods
addr16
sub
jl
adc
add
xor
add
dec
sub
psubusw
aam
xchg
cmp
sub
mov
or
pop
xchg
mov
cs
mov
hlt
out
xor
lea
mov
repnz
shl
sub
js
dec
jle
out
mov
inc
push
dec
dec
dec
mov
xor
shl
push
test
rcrb
insb
cmp
adc
or
iret
xor
inc
lcall
pop
cmc
mov
out
add
jno
nop
pop
or
fwait
mov
mov
shrl
loope
or
mov
negl
fidivl
cwtl
and
pop
roll
fnstenv
mov
ret
add
sti
je
popf
subb
mov
or
out
add
in
rclb
pop
xchg
bound
pusha
repnz
push
xor
xchg
cli
rclb
inc
into
in
or
pop
test
in
dec
icebp
aas
pop
pop
pushf
pop
lahf
mov
dec
cmp
cli
pop
cmp
addr16
xchg
jo
mov
mov
pop
add
pushf
mov
or
sahf
in
pop
sub
pop
fisttpl
push
cmp
inc
add
idiv
xchg
jae
dec
shrl
sbb
fsubr
rcll
sub
sbb
lds
sbb
sub
and
jb
sub
jecxz
cs
repz
mov
or
jno
xchg
fnsave
dec
mov
scas
dec
mov
bound
jnp
sub
cmp
in
dec
mov
roll
in
xchg
xor
and
cmp
pop
push
mov
sbbl
pop
add
push
andb
ret
sbb
jle
dec
insl
inc
insl
lcall
mov
sbb
pop
jl
mov
cmp
clc
dec
in
jmp
adc
fisubrs
mov
cwtl
jmp
shrb
movsb
shrl
push
mov
xorb
hlt
hlt
xchg
mov
call
sbb
les
pop
xchg
ljmp
jae
and
stos
mov
mov
lret
xchg
mov
xchg
cli
nop
mov
sahf
cmp
sarl
ss
push
push
mov
sub
pushf
into
and
inc
xchg
push
dec
dec
fisubl
mov
xlat
add
dec
mov
mov
cli
addr16
aad
dec
fidivrs
js
jae
stc
xor
mov
sti
es
lcall
add
out
sbb
lea
ja
les
push
out
jae
adc
mov
aas
pusha
add
push
and
push
addr16
or
out
lds
ljmp
push
ljmp
jo
stos
cmpsb
arpl
cmp
pop
push
cli
or
inc
add
dec
push
inc
mov
mov
les
cs
mov
sub
xchg
jb
jg
outsl
mulb
addl
mov
cs
mov
test
aaa
cmpsl
sbb
xchg
mov
adc
pop
sub
fdivl
movsb
fsubrl
in
in
adc
gs
and
fstps
test
das
mov
and
jecxz
and
daa
and
ss
hlt
cli
les
fadds
aas
sub
push
adc
popa
cmp
mov
dec
sbb
sub
imull
pop
or
push
sbb
lcall
idiv
pop
hlt
sarl
or
orl
outsb
nop
or
cmp
mov
int
arpl
push
or
scas
fbld
das
sti
adc
dec
fcoml
fmulp
popf
pop
xor
mov
adc
fwait
test
vucomisd
xchg
fsts
sbb
test
pop
movsb
jno
mov
sub
pop
mov
xchg
or
dec
xchg
lret
push
lock
loop
and
fisubrl
mov
js
push
jl
es
cmp
hlt
ret
xor
repz
sbb
test
sbb
jae
pop
sbb
ja
mov
or
inc
or
pop
and
pop
xchg
mov
scas
leave
add
jbe
adc
in
xorb
cs
adc
push
cwtl
xor
push
sub
jno
leave
mov
std
bound
call
dec
mov
leave
test
outsb
jmp
iret
push
push
int
test
jmp
lds
jmp
test
mov
pop
aam
add
jmp
jecxz
sbb
insb
lcall
dec
add
out
mov
stc
andl
and
mov
jne
xchg
add
mov
loope
loope
aam
add
dec
pop
dec
cmpsl
jno
push
and
aas
cmc
xor
enter
xchg
add
jae
adc
dec
std
insl
cltd
xchg
repz
rclb
call
decl
insl
xchg
mov
arpl
push
inc
jg
pop
adc
loop
pusha
fcoms
sbb
jns
outsl
out
inc
test
dec
loope
jo
rcl
inc
push
pop
inc
in
jge
cld
cli
into
or
add
shll
jno
in
cmp
sub
sub
jecxz
lds
and
into
ljmp
lret
pop
imul
stc
xor
xor
mov
adc
iret
outsb
mov
adc
or
aad
jae
iret
jp
mov
dec
jb
and
fisubrs
or
das
fadd
push
mov
clc
and
dec
and
jae
das
mov
mov
mov
mov
xchg
add
aad
cmpsl
pop
in
std
xchg
aaa
inc
nop
sahf
xor
fs
pusha
push
sub
mov
mov
ljmp
cmp
rcrb
mov
sbb
lods
add
pop
rcrl
fwait
or
sbb
sub
jmp
call
in
dec
mov
fistps
push
and
adc
xor
incb
jmp
and
push
pushf
pushl
mov
xchg
mov
clc
stos
or
in
lret
xchg
jp
clc
loop
bound
mov
test
lds
pop
jecxz
pusha
xchg
mov
push
adc
mov
jle
pop
popa
lret
push
push
push
mov
testb
sti
pop
xchg
std
push
and
xor
lahf
ds
cmpl
cs
iret
xor
cmpsl
push
inc
pop
pop
mov
push
pop
sub
rcrb
std
cmpsl
pop
aam
mov
lea
lods
pop
shlb
test
inc
or
insl
xchg
test
loop
mov
pop
cli
cmc
fs
jecxz
xchg
fisttps
in
ficomps
repnz
inc
pop
inc
mov
dec
mov
jae
les
lcall
mov
jl
fistps
fs
into
movsl
mov
pop
shlb
sub
xor
dec
cmp
jl
popa
jle
iret
xchg
in
sub
adc
push
nop
rclb
ret
xor
pop
clc
mov
cmpsb
flds
outsb
jmp
sbb
ljmp
loopne
ret
popf
out
nop
mov
int
cli
popa
pop
mov
imul
pusha
movsb
pop
lcall
or
sarl
cmp
ja
pop
data16
je
xorl
mov
xor
pop
aas
sbb
std
jns
inc
enter
es
jne
jp
popf
adc
stos
test
mov
xor
dec
and
imul
push
inc
test
dec
rolb
ds
inc
push
pop
xor
sub
ret
or
add
stos
outsb
cmp
push
call
jno
test
int3
xchg
jecxz,pn
iret
push
fidivrl
into
lcall
add
js
xchg
fists
sub
lret
aad
sahf
dec
stos
les
push
push
sbb
xlat
jb
push
pop
lea
sub
out
stc
daa
hlt
inc
adc
in
aaa
add
imul
repz
cltd
outsl
test
scas
jnp
jle
sub
mov
les
cmp
enter
aas
adc
jne
jp
adc
mov
sbb
in
ret
jge
mov
dec
add
dec
jns
xor
popf
xor
lahf
loope
and
and
cli
and
imul
push
or
iret
fcomp
xchg
fdivrs
outsb
jnp
fs
lret
jns
mov
xchg
iret
add
pop
test
push
addr16
jle
cmpsb
loop
dec
pop
or
add
mov
nop
stos
lock
mov
inc
ret
sbb
loop
lods
test
jg
mov
push
xor
push
imul
cmp
shrb
and
push
sbb
dec
jecxz
mov
add
pusha
mov
pop
push
flds
push
add
push
les
adc
repz
in
inc
ljmp
shr
loop
sbb
inc
mov
ds
fxch
push
sub
add
pop
dec
movsl
mov
ds
shll
xor
pop
add
inc
xchg
or
pushf
push
mov
mov
dec
add
sub
and
xlat
aad
les
xor
and
scas
lret
pop
outsl
stos
flds
xor
xor
mov
sbb
pop
jmp
addr16
das
js
std
bound
sbb
dec
cmp
push
sbb
aam
mov
ret
inc
call
adc
pop
lock
mov
push
pusha
sbb
mov
cmc
pushf
mov
fistl
les
mov
pop
loope
fstpt
mov
mov
or
and
add
sub
jae
arpl
pop
sub
mov
lock
stos
pop
sbb
sahf
mov
sbb
add
mov
outsb
jmp
xchg
pop
jge
mov
repz
mov
icebp
or
lret
xchg
push
arpl
adc
jl
lds
push
mov
mov
jmp
pop
inc
cmp
arpl
xchg
repz
add
mov
push
int3
push
mov
xor
jnp
sub
and
ja
mov
inc
push
ja
insb
scas
shll
movsb
fs
push
jle
out
jecxz
outsb
fistl
pop
cltd
add
paddusb
or
bound
pop
pop
add
aaa
fistpl
cld
inc
push
andb
jns
cwtl
adc
pop
testl
jmp
int3
loopne
jecxz
subl
and
sahf
out
inc
data16
out
jno
add
out
incl
orl
inc
movsb
dec
pop
lock
lods
int3
add
inc
pop
data16
dec
push
repnz
cltd
test
insb
cmpsb
out
lahf
push
popf
test
test
cmp
xlat
inc
and
mov
ds
add
ja
out
clc
lock
int3
adc
je
sahf
push
push
lods
imul
mull
sbb
jge
push
sub
fiadds
mov
int
pop
sub
ret
insb
add
nop
push
sbb
lds
mov
ret
jecxz
dec
add
push
mov
mov
sbb
neg
cmpsl
mov
in
cmp
jno
mov
jle
jecxz
cltd
in
inc
xor
push
or
lods
adc
enter
mov
movsl
nop
call
outsl
mov
xor
add
test
pop
ljmp
sbb
xor
lret
xor
adc
scas
arpl
dec
aaa
xchg
ret
ljmpw
add
dec
add
ljmp
movl
outsb
pop
jae
mov
sbb
sti
sbb
pusha
movsl
mov
test
xor
or
pop
dec
sub
xchg
cmp
daa
jge
inc
xchg
fcmovbe
or
rol
sub
xchg
mov
adc
repnz
adc
push
aad
push
jmp
mov
jns
in
adc
mov
stc
push
enter
js
fdivl
lods
in
subb
pop
fbld
insl
mov
xchg
dec
adc
or
or
std
imul
fcmovnb
into
jbe
ret
cld
roll
mov
in
in
sbb
in
jecxz
out
inc
lock
push
add
push
mov
pop
insl
popf
bound
sbb
push
jne
push
ss
pop
xchg
xchg
add
adc
dec
xchg
ret
cmp
mov
jge
std
ds
dec
pop
arpl
ds
cwtl
repz
stos
mov
rclb
mov
cmp
test
pop
clc
lret
or
pop
sbb
cmp
fmull
fildll
adc
data16
sub
adc
sahf
or
pushf
lods
stc
lods
lock
xchg
aas
jmp
xchg
lahf
icebp
xor
mov
dec
jge
mov
sahf
cmp
sbb
cs
lds
stos
ret
mov
cwtl
jnp
shlb
jg
cli
iret
pop
call
dec
stos
pushf
sub
jb
cmp
jne
dec
cmp
or
sbb
nop
cmp
aad
rcr
shl
or
cmp
imul
call
inc
mov
lcall
mov
xor
cmp
fnstenv
pop
repz
clc
rcrl
cmpsl
rolb
push
jmp
test
jae
sti
inc
setns
dec
xchg
js
icebp
mov
jnp
dec
loopne
ja
push
adc
in
push
or
adc
daa
push
icebp
sbb
mov
push
jl
stos
xchg
pop
fwait
mov
in
and
scas
mov
stos
adc
fiadds
mov
rcl
hlt
notb
xorb
int3
outsb
mov
and
xchg
xchg
jmp
jbe
lock
dec
test
lea
mov
or
jne
stos
cltd
incb
les
in
sbb
dec
dec
dec
lds
loop
jbe
jg
stc
adc
xor
add
fstpt
add
int3
jmp
pushl
mov
xchg
sub
dec
mov
and
loope
std
jmp
cmp
dec
xchg
testl
push
ret
jno
hlt
decb
sub
jecxz
inc
rcrl
xchg
sbb
inc
and
pushf
push
jecxz
sar
scas
cmpsl
in
lahf
gs
mov
mov
std
cmp
int
sbbb
pop
jge
dec
out
push
xchg
dec
es
pop
push
push
das
fs
rorb
push
jo
mov
shlb
mov
xor
dec
jg
sub
stc
fmull
mov
jecxz
mov
xchg
push
cmpsb
sbb
dec
and
xchg
inc
mov
shl
ljmp
aaa
in
adc
pop
sbb
mov
clc
mov
mov
push
sarl
xor
in
lods
sbb
dec
mov
push
mov
add
fcoms
sub
mov
mov
push
xchg
dec
iret
int
out
sub
out
nop
sbb
cmpsl
jp
inc
pop
aam
mov
mov
fmuls
sub
push
iret
sbb
mov
aaa
and
dec
mov
stos
push
in
mov
notl
add
out
or
pop
cmp
mov
jle
test
push
mov
inc
rcrl
imul
leave
int3
sbb
fstps
int
mov
inc
cmc
pop
lods
mov
cmp
sbb
xor
dec
add
xchg
ret
mov
push
xchg
sub
call
jbe
mov
xchg
add
jno
ja
cwtl
xchg
ret
lods
sub
jmp
dec
jmp
in
insl
sbb
xchg
js
sbb
in
ds
pop
pop
scas
mov
mov
call
mov
xchg
aad
jecxz
mov
jb
dec
xchg
cmp
loop,pt
mov
adc
frstpm(287
cmpsb
jecxz
shl
vpaddw
mov
xor
jae
inc
mov
cmc
cli
sub
leave
loop
xchg
lahf
xor
call
and
test
dec
js
stc
sub
ss
lods
das
in
aad
jecxz
iret
adcl
daa
xchg
and
sbb
xor
aas
and
and
out
xchg
out
loope
and
aas
push
pop
repz
add
jne
jle
sbb
inc
sub
adc
push
addr16
sbb
inc
repnz
hlt
push
jmp
cmpsl
and
cmp
sub
mov
cwtl
fadds
ja
aad
dec
ss
cmc
int3
not
cld
add
mov
mov
das
jle
push
mov
mov
xchg
push
das
xchg
sub
adc
and
test
fwait
in
hlt
dec
data16
inc
cli
les
jno
dec
push
jmp
and
lods
and
push
test
xchg
icebp
test
mov
fwait
push
in
js
sbb
imulb
dec
push
outsb
xchg
cmpsl
sub
outsl
or
pop
push
mov
mov
inc
bound
jecxz
lock
in
jne
or
in
popf
pop
jg
and
xor
test
paddb
fstl
adcl
mov
mulb
sub
dec
fisttpll
mov
out
lods
es
stos
sar
mov
pop
mov
jle
sbb
shrl
test
add
mov
shl
adc
cmpsb
loope
inc
mov
jns
and
jmp
pop
repz
pushf
dec
outsb
leave
add
jecxz
out
lcall
popa
xchg
jecxz
mov
cmp
test
fs
popf
repz
std
pop
pop
mov
push
nop
pop
push
xor
xlat
and
sbb
icebp
clc
mov
shlb
out
jne
lea
push
and
mov
ss
ss
mov
and
js
out
in
inc
pop
adc
in
aaa
pop
sbb
xchg
mov
ret
dec
dec
adc
imul
movsb
sub
movsl
ja
add
ret
fsubrl
xor
xor
pop
aas
inc
insl
out
sub
lcall
mov
sbb
popa
and
add
push
fldl
lock
je
xchg
xor
cmp
imul
xor
out
mov
repnz
pushf
pushf
sbb
test
sub
cwtl
adc
nop
sti
nop
stos
push
pushw
loopne
in
fwait
data16
loopne
push
mov
mov
int
data16
inc
imul
je
or
sub
xchg
test
into
outsl
adc
and
cltd
or
pop
pop
mov
test
mov
mull
ljmp
cmp
int
rclb
js
fsubp
fiaddl
mov
rcl
push
push
jmp
jae
sub
imul
lcall
addr16
mov
sbb
jecxz
fiaddl
stos
xor
data16
stc
movsb
int
jge
jg
frstor
mov
movsl
push
loop
mov
mov
jb
fucom
insl
sub
pop
adc
xlat
push
ret
fistpll
pop
repz
jecxz
mov
dec
out
jae
movsl
inc
gs
xorl
xchg
lods
cmp
push
popf
add
imul
gs
out
push
mov
call
jle
inc
mov
ds
xchg
pusha
dec
or
mov
jo
cmp
pop
lcall
adc
popa
cli
in
cmc
xchg
xlat
push
lret
cmp
sarb
shrl
pusha
or
pop
fadds
adc
adc
test
sub
adc
mov
xchg
sahf
test
jmp
push
inc
pop
or
add
add
push
pop
sbb
divb
jge
inc
sbb
mov
xchg
sbb
stc
pop
stos
icebp
in
addr16
mov
push
adcb
iret
xchg
pop
xor
xchg
decb
dec
movsl
jp
dec
mov
es
cwtl
shrb
aas
jp
sub
push
lock
pop
aaa
sahf
adc
pop
push
push
xchg
xor
cltd
int
cmp
cli
addr16
mov
dec
lock
xor
mov
inc
push
fldcw
rol
sub
cwtl
cltd
mov
sbb
cmpsb
frstor
dec
test
ja
dec
in
dec
mov
xor
mov
imul
xchg
movsl
add
iret
xchg
and
or
cmc
xor
cltd
test
cwtl
fists
stos
dec
cmp
xor
iret
inc
pop
pxor
mov
inc
je
cli
add
insl
xchg
pushf
pop
in
push
mov
lock
bound
inc
mov
std
mov
xchg
fidivl
into
stos
in
mov
test
xchg
and
push
cld
xor
imul
ja
push
or
add
jge
subl
outsb
lock
outsb
mov
loopne
int
test
test
imul
jecxz
push
and
add
cli
push
jo
jo
xchg
dec
stos
push
push
push
in
push
jb
rorl
loop
pop
cs
cmpsl
push
sbb
or
add
inc
mov
or
es
fnstsw
shll
enterw
jbe
fadds
and
sbb
dec
inc
xor
xlat
icebp
xorl
dec
mov
mov
and
cmpsl
and
pop
mov
xchg
movsl
test
inc
pop
fildll
inc
lahf
test
pop
iret
xchg
mov
daa
xor
jl
ficoms
push
shll
dec
lock
add
inc
out
nop
pop
popf
jbe
mov
mov
je
sbb
daa
shlb
mov
mov
or
adc
inc
or
test
enter
pop
call
pusha
ds
roll
xchg
xor
xor
push
inc
cmpsb
push
add
xor
jp
repnz
stc
es
mov
adc
xchg
pop
inc
ljmp
mov
cmpsl
adc
xchg
cs
cwtl
push
push
arpl
scas
in
sahf
cld
arpl
pop
inc
stos
ret
jp
push
cwtl
loop
mov
dec
sarb
outsb
mov
imul
repnz
orb
test
pop
push
lea
mov
or
inc
addb
lcall
xchg
push
push
cli
into
cmpsl
dec
fisubrs
jmp
cmc
int3
sbb
mov
sbb
mov
xor
inc
mov
or
cmp
repz
pop
jge
movsl
shl
cmp
negb
int3
add
sbb
or
xchg
xchg
jmp
xchg
in
jg
xchg
pop
cmp
mov
pop
jl
and
mov
divps
xorb
inc
and
adc
mov
mov
pop
cmp
or
mulb
leave
mov
movsb
jge
call
insl
jbe
repnz
inc
cmpsb
dec
xorb
sub
testl
push
mov
lds
xor
das
add
adc
and
or
or
test
les
jmp
hlt
stos
push
push
mov
test
clc
inc
out
xchg
inc
movsl
pushf
cmp
and
inc
movsl
xchg
push
fwait
pop
test
cltd
push
and
stos
fs
andl
loope
xor
fcoms
sbb
aam
outsl
out
call
rorb
lret
mov
xchg
mov
in
je
insb
arpl
xchg
and
jnp
scas
lods
in
xchg
ret
aam
adc
mov
cmpsl
lahf
ret
in
mov
dec
loop
lods
or
pushf
push
out
adc
mov
test
aam
sub
js
rcll
add
fdivl
mov
out
mov
cmp
mov
lahf
stc
xchg
rcr
add
sub
push
mov
out
or
sbb
adc
in
ss
fwait
lret
mov
inc
das
mov
sti
jae
or
aaa
jne
lret
and
popf
shlb
movl
lds
test
pop
idivb
push
fcoms
je
cld
stos
mov
in
jmp
sti
or
sub
cli
das
mov
ret
loopne
scas
lahf
aam
sbb
mov
scas
cmp
cmp
push
jo
test
xchg
xor
push
mov
cmp
das
je
cmpsl
jne
cmp
cmp
outsl
or
popf
cltd
or
dec
imul
mov
insb
mov
ss
lret
and
cmp
add
push
aad
xchg
cs
dec
cltd
fisubl
dec
pop
divl
mov
fisttps
cmp
and
dec
or
sub
add
mov
incb
out
inc
in
ret
lahf
pop
adc
sub
lds
cmp
add
popf
mov
mov
sbb
mov
cmp
inc
or
jne
add
jne
pop
mov
pusha
jecxz
aad
jns
lcall
push
mov
test
jmp
mov
xchg
sbb
mov
sub
ss
sub
push
push
rol
adc
adc
mov
sahf
push
and
aam
sti
mov
push
test
enter
hlt
pop
jl
dec
jl
in
pusha
and
mov
add
in
lods
mov
popf
dec
and
push
mov
pop
xchg
add
adc
dec
xchg
enter
push
sti
mov
scas
dec
aad
or
insb
movsb
jne
subl
ds
jnp
push
insl
fwait
aam
inc
mov
out
rclb
arpl
and
or
out
pop
push
mov
pop
add
iret
sti
iret
or
add
jnp
sub
add
test
icebp
insl
stos
mov
lahf
cmp
outsb
repnz
add
mov
loopne
jb
aam
jg
adc
add
lds
jg
inc
inc
cltd
aas
loop
pop
sub
stc
xchg
aas
mov
ficoml
mov
pushf
sub
loop
push
xchg
in
push
jne
pop
inc
pop
lret
std
xchg
iret
xchg
mov
dec
scas
sarb
aam
or
pop
and
lret
mov
hlt
add
push
fisubrs
jbe
sbb
inc
out
sbb
cs
inc
inc
sbb
movsb
sub
xor
push
dec
xor
inc
imul
dec
push
popa
jg
push
adc
xchg
add
popl
scas
aas
xor
pop
cmpsl
fwait
or
fcmovu
pop
sub
or
mov
fstpt
or
cld
jge
outsl
cltd
std
out
jno
jbe
adc
daa
cmp
clc
shrl
jb
mov
cmp
add
cmp
mov
xchg
hlt
dec
adc
incl
cmpl
push
lock
scas
lret
inc
testl
xchg
loop
dec
jns
push
cld
add
cmc
sbb
or
mov
mov
jnp
scas
rcll
and
mov
add
jge
cmp
cmp
xchg
iret
imul
jne
sbb
insb
int
mov
pop
mov
mov
test
or
xchg
mov
and
or
gs
add
dec
pop
scas
push
sub
iret
outsl
pop
incb
mov
andb
testb
cmp
loope
push
xchg
add
test
mov
inc
add
je
adcb
in
sbb
bnd
imul
test
mov
sbb
xchg
loop
xor
push
push
cmp
mov
adc
mov
and
push
push
sub
lock
or
scas
ja
inc
add
or
push
call
fiaddl
inc
loopne
ljmp
and
sbb
out
or
adc
in
enter
xchg
lock
or
gs
out
sub
xor
lock
add
clc
ret
pop
mov
xchg
sub
in
pop
push
stc
xchg
push
jbe
jl
aad
in
inc
push
in
inc
and
int
sub
or
push
rcll
dec
test
movsl
cmpsl
xor
mov
ljmp
js
push
pop
and
test
scas
nop
hlt
lret
aam
mov
inc
adc
pop
xchg
push
inc
pop
fcoms
sbb
adc
adc
cmp
cmpsl
or
mov
enter
lods
push
popf
ficoml
ret
je
cmp
jecxz
mov
pushl
cltd
mov
push
ret
jl
adc
push
cwtl
and
xchg
mov
xchg
jl
fsubrl
sub
mov
push
scas
fisttps
int
lea
sti
dec
push
loopne
and
dec
or
cmp
incb
or
mov
sbb
andb
test
cmpsl
out
and
sub
rcrl
xchg
or
sarl
loopne
pop
scas
call
mov
pop
mov
lods
cmpsl
sahf
jmp
jmp
aad
and
inc
pushf
cmp
sub
mov
stc
jg,pt
fdivrl
jne
lahf
adc
add
test
je
stos
xorl
push
push
in
sarb
mov
in
je
jb
int
pop
cmp
adc
sarb
repz
sbb
pop
jno
cmp
out
jbe
lret
pop
subb
cmp
mov
mov
push
test
test
mov
push
xchg
rorb
mov
icebp
sahf
js
cld
test
dec
mov
xchg
ljmp
out
shl
pop
sub
int3
pop
insb
and
jbe
add
call
imul
push
addr16
les
xchg
jae
jp
stc
jb
leave
inc
or
popf
into
sub
or
add
dec
sub
pop
push
enter
cmc
cmp
out
aaa
mov
sub
add
int
mov
xchg
lods
sbb
push
pop
rcll
shrb
or
and
adc
pop
push
mov
adc
mov
lods
bound
cmp
fimuls
faddl
mov
xchg
ja
enter
in
dec
pop
mov
mov
aaa
ljmp
push
cltd
pop
js
ja
mov
pop
iret
or
cwtl
lahf
in
and
daa
dec
fiadds
in
xor
xchg
adc
push
test
dec
jnp
dec
lcall
stc
ljmp
sti
ret
shrl
mov
sub
and
ds
into
mov
and
and
in
vpshld
jne
sub
dec
dec
pop
push
inc
sub
pop
shl
lahf
jecxz
sahf
pop
and
inc
pop
pop
and
add
and
std
cli
jle
add
cmp
stos
and
out
xchg
fisttps
xchg
mov
pop
call
lahf
mov
mov
ds
lods
out
xchg
cmc
nop
or
cli
xchg
imul
dec
adc
mov
xchg
popf
pushf
push
and
cmpsl
mov
movsb
in
mov
and
adc
repnz
xor
aaa
or
sub
and
scas
mov
repz
or
push
cmpsl
test
push
or
cmpsl
lods
gs
push
xchg
or
movsb
sbb
sarb
and
and
push
scas
pop
adc
lods
inc
ret
insb
xchg
or
out
lret
mov
test
in
stos
pop
push
movsl
jne
cltd
js
adc
cmp
mov
sbb
sbb
sub
sub
mov
adc
add
sbb
dec
pop
stos
dec
xchg
dec
dec
fcoml
jns
sbbl
arpl
mov
leave
or
movsl
daa
add
das
mov
fildll
pop
addl
cld
jae
cld
jl
test
jns
fcompl
outsl
xchg
cltd
sub
mov
shlb
add
arpl
push
cmc
mov
int3
je
aas
pop
push
movsb
mov
jmp
pop
mov
in
mov
sbb
cld
mov
inc
mov
or
push
jge
pop
xor
sbb
jne
push
xor
push
pop
jns
call
xchg
lahf
xor
out
xchg
in
out
pop
jl
dec
cld
mov
int
xchg
dec
jb
push
insl
push
jae
imul
cmp
adc
and
cmpsl
jl
sub
inc
shll
xor
in
in
cwtl
xchg
sti
xor
push
xorl
mov
jne
daa
pop
aas
inc
daa
ljmp
aad
and
mov
adc
push
xchg
sbb
sub
out
sub
jb
imul
aaa
test
mov
popa
push
mov
ljmp
cmp
sub
add
cld
stc
pop
jne
pop
add
mov
pop
cli
dec
movsl
or
or
sub
sbb
fsubs
addr16
leave
aaa
movsl
xchg
push
bound
sub
push
jp
shlb
push
or
push
rclb
and
cli
jp
sub
insl
je
pushl
cmp
add
xchg
aaa
outsb
push
inc
call
push
mov
push
aad
ja
aaa
fidivl
es
sbb
add
add
and
jle
fdivl
andl
adcl
stos
and
aaa
lret
mov
fdivrs
push
xchg
sbb
mov
xor
mov
xor
and
movsb
adc
push
inc
xlat
pop
pop
ret
xor
cs
addb
cmpsb
loope
push
fidivrs
or
add
sahf
loope
pop
pop
dec
mov
mov
clc
test
mov
and
ss
or
xchg
incl
cmp
sbb
xchg
aad
imul
jno
fsts
addr16
or
pop
aas
dec
pop
lds
nop
test
popa
push
in
mov
popa
mov
jb
out
push
sub
mov
xchg
mov
loop
dec
sub
decl
rorl
push
push
leave
dec
fdivrl
ss
cmc
xchg
sbb
and
xchg
inc
lods
pop
cmp
mov
in
xor
sub
fmuls
sbb
inc
push
stos
sub
xchg
add
vpsubusw
call
aas
test
mov
aam
lret
sbb
pushw
das
pop
popf
js
xchg
mov
dec
mov
jl
iret
push
stc
sbb
push
or
pushf
in
into
addr16
cmp
loopne
cli
iret
inc
lds
pshufw
aam
gs
push
sahf
push
lahf
xchg
cmpsb
loopne
nop
xchg
jg
rolb
addl
fmull
stc
test
mov
xor
jmp
out
inc
ljmp
sbb
cmp
loope
cmpsb
cmp
iret
stc
imul
stos
lahf
and
adc
sub
scas
pop
pop
add
scas
scas
add
push
outsl
add
xchg
jns
push
mov
sbb
outsb
push
xor
out
add
stos
and
fstpl
dec
sub
ja
roll
dec
xchg
repnz
aaa
xchg
sarb
sbb
lock
dec
stos
ss
xor
cmc
inc
insl
dec
aam
lcall
mov
cmp
loop
test
cmp
fwait
scas
ret
test
xor
cmp
or
adc
jl
pop
bound
inc
cmp
insb
or
fidivrs
sbb
lds
sub
mov
cmp
push
das
addr16
sub
aad
push
ret
inc
lock
leave
out
push
xchg
mov
repnz
dec
dec
je
adc
dec
xchg
fs
lea
jecxz
sbb
lret
addr16
xchg
and
push
or
jbe
shrl
enter
cwtl
sub
pop
std
and
add
rolb
imul
shll
cli
pop
cmp
inc
mov
xchg
mov
insl
jno
jne
push
dec
cwtl
dec
stos
and
iret
dec
mov
hlt
xor
push
in
pop
dec
xor
fsubl
jo
fadds
jl
sbb
in
push
scas
jl
filds
lea
xchg
sbb
shrl
jnp
mov
ucomiss
adc
cwtl
adc
stc
push
and
dec
xchg
and
aaa
pop
addb
ljmp
aam
xchg
add
into
and
sbb
flds
xor
push
pusha
pop
mov
sbb
adc
lret
addr16
mov
xchg
or
jno
addb
and
ret
sbb
gs
cmc
inc
roll
cli
adc
sbb
mov
mov
aas
pop
push
add
fmull
cld
clc
add
mov
insb
push
inc
add
das
add
int3
push
call
dec
and
or
xchg
push
and
js
jecxz
das
mov
test
jae
mov
cs
mov
gs
ja
pushf
cmp
jbe
testb
push
fiaddl
aaa
dec
loop
icebp
sti
insb
ret
sub
add
or
xchg
inc
fists
lock
xchg
inc
inc
push
jo
dec
add
int3
xchg
mov
out
mov
jl
jg
inc
xchg
leave
mov
push
mov
decl
push
jne
mov
or
mov
cs
movsl
into
pop
mov
push
inc
outsb
push
rorb
insb
out
mov
dec
xor
sarb
pop
dec
cmp
adc
cmp
aam
js
fchs
mov
bound
cli
xor
lods
pop
cmpl
push
push
orb
mov
dec
and
adc
adc
ret
mov
mov
sub
xor
mov
sub
rolb
and
sub
repnz
and
or
outsb
iret
sub
pop
ljmp
push
sub
mov
popa
pop
mov
shrb
sub
int
jno
jmp
push
ficompl
dec
shll
leave
int3
mul
push
jle
sub
jae
mov
lahf
adc
aad
repz
lahf
push
jp
ljmp
gs
sbb
mov
xchg
cli
popf
pop
dec
pushf
sarb
mov
imul
adc
inc
jnp
mov
mov
int3
out
push
lea
push
cmp
xchg
lods
push
loope
iret
ljmp
ja,pn
js
jno
nop
cli
movsb
pop
jmp
loop
ret
sarb
push
fidivl
and
stos
push
orl
pop
lds
test
xchg
ljmp
enter
lahf
pop
insl
push
mov
xor
std
outsl
mov
lret
cmp
mov
xchg
xor
fs
je
int3
push
ret
mov
add
pop
sub
pop
inc
sub
or
mov
test
and
daa
mov
iret
cmpsb
and
or
cld
lods
fwait
rolb
pop
divb
outsb
in
mov
test
xor
sub
jmp
out
insb
dec
in
leave
push
hlt
add
cmc
leave
cwtl
loope
push
out
dec
fdivl
pop
out
mov
scas
mov
rcrb
cwtl
jg
fadds
cli
mov
or
in
cmp
jle
out
pop
pop
sub
sbbb
mov
cmpsb
cmp
jmp
sbbb
xchg
lea
inc
jecxz
mov
dec
adc
xchg
or
les
cmp
cld
mov
fs
js
and
fcmovbe
add
inc
enter
jle
shrb
or
pop
push
and
fs
sbb
loope
shll
mov
jle
ja
dec
mov
jnp
jne
outsb
mov
xor
adc
enter
in
sbb
inc
fstl
fdivrp
xchg
adc
dec
sub
adc
int
movb
pop
fmuls
mov
out
dec
adc
shrl
mov
sbb
mov
dec
jnp
add
xchg
stos
adc
inc
cmp
repnz
mov
pop
jp
jl
and
push
ficoms
in
ret
sahf
pop
push
loope
pusha
pusha
cmp
dec
mov
sbb
insb
jae
add
mov
sti
sub
xchg
dec
and
xor
push
jge
ss
cs
cmpsl
addl
stos
call
jmp
xchg
mov
mov
frstor
hlt
push
out
ret
add
fsts
push
add
jl
movsl
mov
adc
sbb
xor
push
pop
push
gs
mov
jg
scas
test
mov
mov
and
push
pop
xchg
aad
int
pop
aas
xor
add
and
sbb
add
out
pushf
ljmp
xorb
pop
mov
lds
fdivrs
inc
mov
cltd
sbb
mov
std
fsubs
inc
and
shrl
int
testb
pusha
call
mov
xchg
dec
fwait
push
nop
mov
js
leave
xor
scas
aas
fidivrs
lods
lods
push
sbb
jmp
and
inc
shl
popa
push
insb
mov
jg
in
inc
out
test
cmp
in
clc
pop
xor
sbb
fadds
je
add
lcall
mov
pop
mov
push
inc
ljmp
insl
xor
stos
jge
push
lods
cmc
insb
pop
xor
jno
xor
fistpl
mov
sbb
je
data16
lcall
push
in
xchg
js
xor
mov
sar
add
mov
jnp
jg
test
jns
adc
and
sbb
mov
push
movsl
push
add
push
mov
sbb
je
cmc
popa
adc
out
test
fmull
mov
mov
cld
add
pusha
mov
leave
push
int3
mov
in
ret
pop
shr
push
das
insb
and
idivl
xchg
mov
loopne
mov
aas
int
adc
movsl
mov
sar
sbb
dec
mov
jmp
ja
imul
sbb
aad
or
push
pop
das
in
xchg
cmc
mov
pop
jmp
sahf
push
push
enter
leave
inc
into
mov
push
pop
jbe
cmp
jle
fisubrs
xchg
adc
mov
sahf
icebp
mov
loop
fdivrp
movsl
stos
mov
mov
inc
in
lock
pop
mov
push
or
test
add
jnp
mov
push
add
ds
sarb
imul
jl
gs
hlt
dec
test
lret
pushf
jb
fst
test
mov
fsubrl
mov
ficompl
sbb
scas
dec
add
cmp
inc
bound
push
repz
jne
pop
iret
xorb
mov
sti
popf
repnz
xchg
cwtl
es
sbb
loope
inc
pop
outsl
scas
lock
leave
out
das
cmp
sbb
cli
jnp
inc
push
jecxz
sbb
pop
or
lcall
mov
stc
adc
fsubrs
push
add
repz
mov
enter
sbb
into
gs
jmp
or
into
sub
and
jmp
dec
outsl
loop
sub
addr16
xchg
fwait
test
jo
stc
mov
mov
popa
jp
aaa
sti
mov
in
lods
jmp
xor
dec
mov
inc
sbb
mov
lds
mov
fildll
popa
jle
xor
das
aaa
fsubs
int
cli
ret
call
sub
sbb
scas
cmpsb
mov
cmp
std
int
rorb
pusha
sbb
mov
out
lcall
xchg
push
popf
jne
jnp
xchg
mov
mov
xor
sbb
push
repz
scas
jo
out
sbb
lea
add
jge
or
inc
dec
dec
inc
int
xchg
xor
ss
mov
repz
icebp
mov
adcb
mov
sbb
sub
lock
js
out
repnz
lcall
jp,pn
push
and
add
mov
fidivs
xchg
icebp
mov
sub
xchg
mov
aaa
inc
andb
mov
pushf
lahf
dec
sub
test
inc
mov
aad
clc
ss
xor
jnp
inc
es
cmp
test
test
mov
inc
mov
sbb
repz
and
xchg
fcmovbe
jge
sub
push
sahf
dec
adcb
test
jp
dec
push
inc
mov
pop
inc
aad
jns
scas
fwait
ret
daa
jnp
add
in
pop
and
sbb
rcrl
fsub
dec
pop
jae
insl
add
sti
out
or
dec
mov
shlb
pop
inc
mov
jle
mov
push
mov
add
shlb
sbb
or
lock
xor
in
enter
shrl
xorl
push
out
xor
push
push
add
mov
imul
ficoml
mov
fisubl
sbb
push
testb
push
and
xor
int3
dec
and
mov
inc
add
fxch
bound
clc
inc
loopne
dec
jp
lea
pushf
call
mov
jnp
mov
in
movsl
push
lcall
sub
std
lahf
jp
into
mov
cmpsb
fists
out
xchg
adc
jns
or
mov
mov
clc
jns
loop
sub
push
and
leave
bound
fs
mov
cmp
mov
pop
push
or
dec
bound
sub
out
push
jle
div
scas
mov
mov
xchg
loop
push
test
adc
daa
pop
pop
sub
mov
bound
scas
les
mov
mov
jecxz
mov
bound
mulb
lds
cmc
sub
mov
mov
pushf
xchg
outsl
xor
inc
mov
iret
enter
jp
xor
inc
fisubrl
pop
pop
or
push
mov
cmp
es
outsl
gs
fisubrl
push
aad
push
fidivrl
push
push
mov
mov
cmpsb
dec
cmp
cmp
lret
mov
pop
aas
mov
imul
out
jle
je
xor
push
and
stc
sbb
add
jg
pop
fistpll
cwtl
push
add
out
mov
pusha
outsl
aas
mov
jl
mov
xchg
stos
jg
or
dec
nop
and
cmpsb
mov
mov
orb
or
cltd
mov
aad
mov
jg
sbb
pop
jns
inc
dec
adc
xor
movsb
sub
push
push
dec
mov
cltd
sti
imul
inc
xchg
xchg
pop
adc
xor
cmp
pushf
xchg
in
je
adc
in
div
js
out
sbb
movsl
stos
andb
or
nop
mov
loop
add
call
xchg
pop
aaa
cmpsl
std
cmp
add
cs
xorb
sub
jmp
push
and
mov
fiadds
pop
aaa
push
jge
inc
push
out
add
sub
push
and
pop
inc
mov
jae
cmpb
adc
mov
dec
fs
fs
add
imul
das
adc
mov
adc
out
mov
adc
sub
std
push
in
sbb
push
adc
andb
inc
stos
movl
notl
dec
incb
mov
pop
int
add
cld
xorb
ja
dec
movsl
and
out
das
xchg
cmpsl
jge
scas
fucom
mov
or
sarb
leave
aad
call
clc
movsl
test
adc
arpl
pop
test
jns
mov
push
pop
xchg
mov
inc
push
js
dec
push
mul
pushf
xor
mov
xor
data16
add
xchg
fsubp
cmpb
pop
inc
sub
sub
daa
cmpsb
pop
and
xor
ret
mov
inc
sbb
push
mov
daa
gs
push
mov
shll
inc
mov
inc
adc
sub
mov
out
lods
add
mov
jns
push
dec
lcall
out
sub
mov
mov
daa
pop
xor
jnp
jae
push
dec
or
jl
fildl
dec
pop
adcl
push
mov
and
cmp
mov
int
sub
loopne
scas
lahf
xchg
push
cli
and
dec
dec
outsl
stos
inc
fidivrs
imul
pop
test
mov
add
push
ja
shll
aaa
ret
mov
mov
mov
mov
and
mull
adc
scas
movsl
outsb
push
add
rorb
cltd
sbb
ja
movsl
ja
loopne
imul
clc
push
adc
popf
hlt
mov
sbb
push
mov
cli
mov
out
push
clc
xlat
ficoml
lahf
sbb
xor
pop
sbb
lods
push
das
add
rol
test
andb
cmpsl
or
and
inc
or
adc
mov
adc
cmp
cmc
jns
jnp
lret
aas
in
mov
rol
xor
mov
insl
fs
fcmovb
cmp
aam
pop
test
push
mov
test
sub
fwait
mov
sub
shl
push
rcl
testl
sti
pop
xor
aas
js
jmp
insb
int3
and
popa
cmp
repz
sbb
sub
inc
pop
cmp
cli
lds
mov
test
data16
fcomps
and
xor
pop
adc
stc
lods
inc
adc
outsb
mov
imul
in
xchg
leave
cwtl
scas
mov
cmp
or
es
mov
xchg
xor
addr16
imulb
lds
xor
adc
imul
andl
outsb
mov
xchg
pop
xchg
jo
lret
mov
sbb
rclb
mov
movsl
int3
sbb
jmp
pop
shrl
sahf
cs
aaa
push
ror
jno
dec
movsl
sbb
scas
mov
mov
and
loopne
add
jmp
andl
push
add
pop
jnp
sar
sbb
pop
roll
lds
mov
pushf
sbb
hlt
inc
addb
lds
fidivl
inc
sbb
xchg
cmp
cmpsb
push
add
add
xor
or
pop
sarb
and
imul
sbb
addr16
mov
lods
pop
mov
sub
fidivrl
or
negl
sub
inc
int
mov
inc
loopne
mov
cmp
iret
push
mov
mov
sbb
testb
jns
fistps
pop
mov
mov
fists
popa
jb
xchg
push
dec
enter
test
and
push
addr16
lock
inc
add
sub
mull
xor
fs
test
mov
mov
dec
and
or
jae
pop
popa
fcoml
push
inc
lock
push
push
fdivrp
pop
mov
mov
out
lret
cmpsb
jmp
dec
adc
or
mov
pop
ret
repnz
popf
popf
xchg
sub
cmc
mov
sub
movb
mov
push
mov
mov
and
mov
test
xlat
imul
sbbb
cltd
lret
test
roll
cmp
pusha
mov
jge
leave
test
outsb
sti
imul
test
jo
jo
mov
sub
jg
fmul
sub
inc
push
popf
cmc
std
testl
test
sbb
adc
mov
scas
adc
hlt
jbe
ljmp
inc
mov
cmpsl
dec
leave
inc
adc
fdivs
repnz
outsl
movb
aam
sub
pop
add
frstor
fdivrl
mov
mov
std
mov
arpl
out
clc
cmp
push
rolb
hlt
outsl
inc
lcall
xchg
mov
xlat
xor
xchg
test
xchg
ss
dec
sbb
pop
in
ret
push
or
dec
adc
ret
mov
inc
movsl
pop
adc
push
adc
jb
dec
dec
adc
mov
pop
js
rcrl
and
test
xchg
icebp
popf
sbb
fsubrs
adc
subl
ret
sub
adc
fbld
push
or
repz
push
pop
ds
push
mov
adc
sbb
in
sarl
les
movsb
sbb
jp
and
inc
fwait
xchg
xorl
xchg
xchg
mov
and
sbb
insl
push
mov
enter
pop
dec
repnz
cmp
pop
mov
loopne
dec
push
push
cmc
adc
es
pop
loop
popa
jecxz
adc
jecxz
add
fsubs
ss
mov
mov
or
jecxz
ss
stc
and
hlt
add
mov
jle
mov
out
push
mov
imul
cmc
mov
loop
jnp
mov
xchg
enter
xchg
push
push
gs
add
or
jmp
bound
ret
pop
mov
dec
inc
inc
or
inc
and
jg
jmp
dec
push
sub
push
dec
cmc
lods
dec
aas
ret
or
test
stos
jbe
jns
add
adcl
ja
ret
scas
push
inc
push
jmp
xchg
imul
gs
dec
call
data16
outsl
popa
inc
dec
fistpl
scas
bound
insb
push
rcrl
inc
js
stos
jnp
add
sub
add
test
mov
repnz
je
inc
lret
push
fistps
cs
jae
out
sbb
or
enter
shlb
jno
push
add
xchg
ljmp
fs
push
leave
dec
movsb
rol
xor
pop
dec
decb
add
dec
sbb
mov
add
sahf
mov
xchg
test
das
add
sub
cltd
add
addr16
rcrb
and
lods
xchg
mov
sahf
arpl
scas
jle
sub
push
adc
das
mov
adc
nop
inc
stc
mov
scas
adc
incl
dec
addl
daa
in
movb
dec
sbb
loopne
fistpll
test
xor
lods
mov
fiadds
and
out
pop
mov
fmulp
cltd
fs
cmpsl
les
call
or
mov
jns
mov
dec
imul
add
inc
sbb
mov
and
jno
xchg
add
addr16
repz
mov
std
enter
sbb
sarl
in
pop
jne
outsb
or
daa
testb
dec
jge
pop
dec
popf
push
dec
xchg
sbb
test
jmp
or
mov
mov
and
mov
jle
in
lds
inc
and
dec
and
loope
js
addr16
cltd
js
push
dec
inc
xchg
imul
mov
xchg
push
test
arpl
adc
fildll
addr16
pop
pop
data16
inc
aaa
sub
fdivl
xchg
div
es
insl
mov
dec
flds
loopne
pop
sbb
lock
xchg
jmp
push
gs
mov
imul
cmp
push
sub
fimuls
bound
cmpsb
dec
adc
das
and
in
outsb
jmp
ret
out
or
sbb
rcrb
adc
lret
aas
gs
lret
inc
hlt
or
fs
sbb
push
jae
cli
mov
and
push
push
xchg
adc
shr
jp
fsubl
jns
mov
in
jg
scas
mov
add
cltd
sbb
sub
mov
mov
dec
mov
dec
xor
je
mov
addr16
xor
lahf
dec
out
or
fisttpl
pop
adcl
xlat
das
cmp
stc
xchg
mov
test
mov
mov
cld
xchg
xor
sarl
lret
addl
push
icebp
loope,pn
dec
pushf
fwait
out
mov
out
jg
pop
jg
cmp
in
or
cwtl
mov
xor
int
fbstp
pop
aam
add
lret
dec
sub
add
mov
inc
mov
rcr
sub
and
mov
rclb
fs
sbb
mov
insl
cld
sbb
rcl
outsb
inc
sbb
popf
andb
pop
jmp
inc
inc
dec
testb
mul
sahf
push
aas
scas
subb
add
adcb
out
mov
je
les
sub
mov
scas
ret
adc
or
xchg
pop
cmpsl
cmpsl
jae
rcr
add
imul
mov
je
fs
inc
push
rorb
inc
add
int3
sub
jno
xor
lods
cmp
in
xchg
xchg
or
in
pusha
pop
lds
jno
xor
and
mov
aad
into
fdivs
out
and
jbe
rcr
pop
test
xchg
lea
dec
mov
stos
cltd
xchg
pop
mov
clc
iret
jno
lret
xorl
lea
imul
icebp
in
mov
imul
or
iret
call
and
imul
into
fs
fnstcw
lods
push
sbb
ds
mov
lods
mov
sbbl
xchg
sub
lods
jg
push
bound
xor
or
jnp
jne
cmp
addb
into
int
cmp
pop
xchg
cmp
adcb
bound
outsb
in
cs
pusha
mov
adc
js
adc
sti
cmp
or
in
sbb
dec
mov
shll
testl
jp
outsl
jno
xchg
and
repz
jns
fwait
daa
aad
call
lret
outsl
mov
lods
mov
and
xchg
scas
cs
sbb
xchg
test
int
mov
fnstsw
cmp
sbb
js
cld
ljmp
sbb
aas
mov
mov
and
iret
pop
xchg
add
cmpsl
or
jno
ret
mov
xor
mov
test
mov
push
pop
jl
cmpsb
or
dec
sbb
cmc
mov
shll
sbb
cs
js
movsl
push
rcrb
adc
xchg
mov
mov
sbb
les
lahf
cmc
fidivrs
add
push
popa
and
std
adc
nop
inc
lret
pop
incb
mov
das
mov
fwait
mov
push
fidivl
cmp
fisttpll
sti
or
cmp
mov
add
xor
xchg
add
out
sbb
mov
or
push
test
repnz
pop
and
dec
in
mov
hlt
dec
shlb
inc
in
nop
fnstsw
insb
xchg
loope
fisttpl
call
push
aam
mov
ret
scas
xchg
dec
pop
mov
mov
dec
adc
xor
cmpsb
fcomps
in
xchg
cmp
dec
daa
lock
divl
aad
add
jmp
in
orb
les
inc
and
pop
cwtl
add
shl
mov
pop
les
lds
and
lods
pop
aaa
xchg
stos
stc
in
rep
cmp
sbb
push
mov
loopw
ds
inc
mov
dec
test
notl
lret
inc
fcomp
push
ds
insb
ja
dec
iret
mov
mov
ljmp
out
sti
aas
fildl
push
push
aad
cmp
jmp
xchg
sub
or
xchg
push
inc
jle
cmp
cwtl
pop
fcmovu
mov
mov
hlt
xor
int
jb
ret
ficompl
lahf
xor
lret
and
leave
cmpsb
xchg
jecxz
rcrb
xchg
sbb
xchg
dec
cmp
xchg
outsb
add
int
sbb
inc
push
andl
imul
xor
enter
bound
movl
jae
stos
add
leave
and
rcrb
sub
mov
and
adc
cmc
xchg
lea
mov
push
inc
test
xor
mov
cmpsb
mov
ljmp
stos
pop
cmp
jb
xchg
ds
cmp
fdivrl
push
mov
add
fsts
mov
mov
cwtl
pop
push
adc
out
std
sbbl
les
dec
or
cli
addb
aaa
idivb
inc
jbe
inc
mov
mov
cmpsl
or
rcl
dec
out
xor
xor
pop
ljmp
push
inc
ljmp
lret
xchg
call
or
dec
fs
xchg
rcrb
out
and
mov
xchg
mov
push
mov
or
sarl
push
outsb
addr16
shll
dec
mov
insl
xlat
pop
loop
pop
inc
js
jmp
inc
js
jne
lret
icebp
push
pop
out
mov
push
or
cmp
roll
cli
test
mov
loopne
fidivl
mov
loope
mov
outsb
cmp
mov
lods
out
mov
pop
and
rol
in
or
sub
push
ljmp
sahf
mov
int
cmpl
cmpsl
lahf
popf
jge
nop
mov
sbb
dec
mov
in
adc
mov
mov
rorl
mov
mov
push
cs
ret
fsubrs
sahf
lock
add
das
inc
jbe
rolb
mov
icebp
xchg
cmp
sbb
inc
insl
and
je
fwait
inc
mov
or
push
clc
fwait
cmp
out
add
jecxz
maskmovq
divl
xchg
xor
jge
test
cmpsb
outsb
aam
mov
xor
or
out
shrl
inc
fwait
jo
cwtl
out
sbb
pop
mov
iret
sbb
jmp
push
in
and
pop
or
xchg
and
sbb
and
cmpsb
push
pushf
mov
aas
adc
fstpl
push
das
and
sbb
and
jecxz
xchg
test
lods
hlt
test
popf
roll
lret
mov
add
stc
sub
outsl
inc
fadds
fstpl
cmp
push
jle
add
movsb
sub
pop
or
sub
movsb
adc
xor
in
in
repnz
fsubrs
outsb
lret
mov
add
jg
mov
lea
in
shlb
jp
stc
lods
mov
jmp
jle
xchg
mov
pusha
ret
push
scas
mov
mov
std
mov
lock
data16
xchg
inc
ljmp
mov
in
lods
cltd
fidivl
das
sahf
mov
leave
adc
xchg
shlb
pop
xor
and
mov
loopne
sahf
xor
sbb
mov
mov
jns
arpl
sahf
rcrb
lods
cmp
and
mov
inc
dec
xchg
idiv
outsl
fwait
pop
jne
fwait
cmp
scas
outsl
pop
cwtl
ret
dec
inc
or
cmp
loop
sbb
je
jno
iret
pop
cmpsl
lahf
sub
add
loop
daa
xchg
push
mov
loop
and
inc
sub
push
xlat
push
add
les
test
sbbb
popf
sbb
pop
push
je
mov
add
shlb
icebp
jnp
mov
add
mov
sbb
sub
rcrl
cmp
mov
jmp
daa
test
mov
rcrb
dec
shrb
mov
lahf
sub
mov
hlt
shll
aad
int3
cmc
insl
pop
insb
addr16
aam
int
dec
xchg
aad
fcmovnbe
xor
sub
ror
dec
rorb
sbb
into
hlt
les
push
add
into
insl
fnstsw
out
and
scas
hlt
jge
sub
movsl
push
add
lcall
imulb
jb
mulb
ret
test
or
fnstsw
mulb
in
ljmp
xor
shlb
fistl
and
jp
cwtl
sbb
mov
or
cmpsb
aad
pop
push
cmc
test
add
nop
mov
cmc
push
jo
fcomps
cli
scas
xor
pop
leave
xchg
and
dec
dec
mov
or
xchg
repnz
out
insb
aad
push
cld
rclb
int
fiaddl
inc
test
pop
loope
call
mov
stc
push
shrb
pop
sub
int3
pop
mov
ja
andb
lahf
xchg
test
outsl
int
xlat
mov
es
scas
mov
imul
xor
dec
pop
xchg
mov
frstor
push
push
cld
loope
add
and
mov
out
int
out
push
lcall
sbb
mov
leave
rclb
movsb
ss
sbb
nop
fmull
adc
jmp
aaa
mov
xor
int
addr16
out
int3
and
int3
das
loopne
sbb
iret
outsb
lahf
xchg
mov
xor
xchg
stos
cltd
jne
sbb
shrb
mov
jmp
dec
mov
cmpsb
sbb
mov
cli
jns
insl
loopne
cmpsl
fiadds
xchg
sbb
push
scas
imul
bound
or
mov
test
xchg
adc
jmp
ficomps
mov
jae
cmc
pop
shr
xor
xor
mov
dec
je
repz
loope
cltd
and
adc
and
adc
movsl
push
test
outsb
imul
and
test
pop
mov
lret
in
add
push
popl
pop
sub
add
add
or
push
dec
test
xor
mov
stc
fs
mov
add
or
enter
mov
inc
bound
xchg
scas
out
scas
jecxz
xor
mov
mov
das
scas
xchg
popf
dec
addr16
mov
pcmpeqw
popf
gs
inc
jo
or
fidivl
mov
wbinvd
movsb
jb
add
fcos
xor
jmp
pop
jne
sbb
scas
xchg
and
xchg
push
lcall
jge
inc
jl
test
sbb
inc
hlt
xor
fstpl
mov
xchg
jle
inc
xor
ror
fucomip
adcb
jnp
loope
xor
arpl
call
arpl
add
popf
push
mov
data16
push
jmp
loope
mov
push
cmp
mov
fwait
pop
mov
leave
push
notl
mov
pop
test
adc
jbe
imul
jnp,pt
sbb
xorb
testl
pop
mov
jne
sbb
ret
lock
or
xor
shlb
mov
push
outsl
xchg
iret
dec
sbb
mov
adc
xor
fstl
rolb
mov
ljmp
push
ljmp
aad
sbb
and
sar
sti
cwtl
call
dec
into
pop
sub
pop
fiadds
outsb
lock
mov
push
aas
mov
lret
push
nop
bound
jp
mov
aad
repz
mov
mov
sub
xor
xchg
push
and
mov
gs
popf
or
mov
lods
push
pop
aam
aaa
mov
inc
xor
negb
xchg
pop
push
push
loope
test
dec
shll
mov
mov
xor
sbb
sub
mov
cltd
scas
xor
jo
dec
imul
rclb
fidivrl
or
sbb
jmp
movsb
inc
inc
xchg
insb
push
push
xchg
outsb
fistps
lret
mov
adcl
mov
mov
and
insl
mov
mov
jge
insl
pop
push
je
popl
add
das
pop
out
mov
cmpb
jecxz
push
outsl
mov
push
fdivs
into
mov
xchg
subl
xchg
or
cmp
cmpsl
popa
push
xchg
shl
bound
aas
fidivl
sbb
dec
sbb
testb
aam
xchg
pop
add
xchg
push
or
lahf
push
adc
das
pop
gs
outsb
popa
sbb
pop
mov
add
pop
inc
inc
sbb
ffreep
dec
loope
pop
and
xchg
rcl
push
mov
pop
mov
in
jne
xor
or
adc
repnz
movsb
xchg
data16
out
mov
and
pop
xor
or
cmp
inc
les
pop
test
rcrb
push
pushfw
shll
popa
rcr
xor
pop
dec
sub
test
aas
mov
mov
mov
cmp
sahf
outsl
aaa
out
cmp
cwtl
push
and
add
inc
sub
pop
pop
ficoml
sbb
test
cli
xchg
scas
gs
addr16
movsl
rcl
in
aas
and
mov
cld
hlt
jg
or
inc
cmpsl
dec
js
adc
insb
mov
or
push
imul
mov
hlt
test
outsl
push
ljmp
shl
fmulp
jl
xor
lock
out
cmp
pop
ret
add
into
sub
sub
int
out
mov
rcll
pusha
cli
adc
stos
jne
test
sahf
stos
fwait
test
aam
and
add
jns
push
adc
add
pop
pop
int3
inc
movb
inc
push
adc
scas
shll
dec
sub
push
dec
sbb
ss
repnz
jecxz
incb
aad
xchg
cmp
je
or
or
sbb
sbbb
mov
adc
or
in
push
fucomp
scas
or
push
jle
push
sub
out
loope
jecxz
xchg
loope
imul
mov
push
push
bound
dec
lea
cmp
enter
pop
xchg
popa
push
mov
decb
clc
xchg
fstpl
mov
fs
mov
mov
adc
std
mov
lahf
jo
fdivrs
xor
mov
rorl
ljmp
aas
ret
add
call
jp
je
leave
dec
pop
dec
adc
movsl
out
xchg
mov
imull
pop
jb
aam
loope
sbb
xchg
pop
into
loop
outsb
jle
gs
movsb
arpl
das
push
xor
push
inc
push
or
mov
aam
mov
popaw
cwtl
enter
push
adc
push
and
sbb
xor
cmp
lods
call
mov
push
nop
das
sbb
nop
lcall
mov
sbb
js
in
jns
iret
mov
push
sbb
fs
out
sbb
les
push
jns
lcall
cmpsb
mov
popf
pop
mov
loopne
mov
fsubp
out
add
lea
dec
aad
stos
fs
mov
subl
adc
push
xor
mov
xor
repnz
and
std
mov
int3
loopne
out
and
hlt
push
xorb
xor
push
leave
inc
xor
and
sahf
sub
leave
mov
pop
push
sbb
test
sahf
aam
es
out
addl
cltd
out
sarb
leave
push
xor
push
or
adc
push
lods
or
mov
pop
test
popf
ljmp
mov
lea
jae
les
sbb
loopne
shlb
pop
pop
pop
js
dec
cmp
mov
lock
sti
push
cmovg
int3
in
jo
ret
lcall
sarb
sahf
out
jae
fsubr
nop
xchg
mov
mov
imul
test
rorb
aas
adc
jnp
mov
mov
sbb
or
pop
pop
sub
rcl
out
mov
js
scas
mov
movsl
add
push
les
fstps
sahf
push
cmpsl
jmp
push
mov
ss
sub
insb
adc
cli
scas
push
mov
into
es
leave
sbb
push
ja
es
sti
jae
jo
cmp
or
pop
push
xor
mov
cmp
subl
in
insl
push
clc
jbe
fsts
fidivrs
rclb
jno
and
sub
jne
mov
mov
into
xor
push
cmp
dec
mov
jbe
pop
jl
int
imul
mov
mov
int
cmp
dec
rcrb
adc
pushf
movsb
xor
pop
jge
xchg
sub
ds
aaa
xchg
lds
mov
loope
lahf
daa
test
xlat
pop
push
or
mov
in
shll
and
mov
push
hlt
scas
mov
loop
sub
out
lahf
leave
out
inc
push
jne
vpsubd
fwait
mov
mov
das
cmpsl
sahf
jle
cmpsl
jns
sbb
push
push
mov
xchg
negb
xor
cmc
xor
popf
je
aad
aaa
mov
push
jp
aad
sub
push
cmpsl
aad
sub
jnp
int
pop
adc
loope
sub
insb
fs
fdivrs
mov
and
movb
arpl
mov
ds
stos
mov
bnd
das
loope
xchg
loope
int3
inc
inc
mov
fnstcw
jle
sub
jbe
xchg
dec
in
call
cmc
cmp
ds
adcl
sub
mov
cwtl
xor
jecxz
or
push
xor
cmpsl
imul
mov
negb
outsl
push
sbb
jae
outsl
cld
insl
sbb
pop
mov
jg
aaa
sbb
int
add
test
fwait
inc
rcl
arpl
addb
xchg
cmp
aad
pop
faddl
out
orl
addb
das
add
or
mov
mov
mov
fcomps
ljmp
sbb
jmp
mov
mov
repz
lea
push
xchg
out
jae
repz
pop
pop
int
aad
or
std
cld
pop
push
bound
icebp
sub
outsb
mov
scas
aas
inc
test
pop
cmc
inc
or
outsl
icebp
ljmp
rclb
loope
sysret
xchg
xchg
sbb
mov
cmpsl
add
pop
stos
scas
js
mov
push
xchg
stos
cmpb
pop
pop
out
aad
mov
scas
push
xor
pop
mov
pop
leave
repz
pushf
push
sbb
dec
gs
ds
sarl
ret
out
jmp
orb
scas
adc
add
in
dec
jmp
mov
add
xchg
dec
pop
bswap
add
aad
push
int
mov
sub
mov
sti
jo
mov
ljmp
mov
xchg
mov
cld
push
push
maskmovq
testl
dec
rcrl
lret
mov
jecxz
outsb
cmpsb
adc
outsb
in
sub
andb
xchg
shr
mov
inc
stc
ret
lcall
popa
sub
and
inc
jb
shll
sbb
jmp
fstps
push
call
fcoml
sub
jl
push
les
push
mov
js
pushf
mov
sub
cmp
jbe
add
cmpb
fwait
movsl
clc
jmp
testb
rcrb
inc
xchg
js
cld
jbe
repz
inc
adc
push
xchg
mov
repz
mov
dec
and
and
popa
test
sub
add
dec
jnp
sahf
pop
adc
lds
xor
aas
add
es
jge
adc
fwait
jg
rcr
inc
mov
mov
incb
xchg
pop
mulb
jo
mov
out
xchg
mov
psubb
mov
xchg
fnsave
dec
push
jnp
push
dec
inc
aad
repz
cwtl
and
dec
flds
mov
movsb
cmp
and
push
das
add
xor
stos
dec
xor
jae
test
mov
jne
sbb
pop
xchg
outsl
sub
andb
inc
dec
jne
das
imul
popl
pop
mov
adc
outsb
or
xchg
jo
xchg
mov
leave
or
add
mov
andnps
add
pop
xchg
push
mov
push
mov
pop
pop
call
sbb
mov
call
and
iret
adc
and
ds
cmp
jmp
xor
dec
cmp
lds
fldcw
cmp
push
dec
ja
xor
sub
rorb
jp
icebp
int
ljmp
mov
outsb
testb
cwtl
lds
push
add
push
jae
cmpsb
xor
pop
pop
loop
data16
dec
mov
insl
mov
cli
mov
insl
int
and
pop
push
dec
js
orl
ds
mov
popa
or
mov
pop
call
je
outsl
in
ss
xor
jnp
lds
negb
jno
ja
aam
loopne
lahf
mov
lret
jne
cmpsl
les
inc
pushf
outsb
jmp
jo
adc
jne
bnd
dec
pop
pop
clc
jne
adc
and
inc
loop
jecxz
mov
push
and
add
lods
lret
inc
fldenv
and
ret
push
dec
cmp
dec
repnz
push
insl
scas
inc
test
imul
sbb
pushf
lret
push
insl
mov
rclb
mov
arpl
test
lahf
sub
adc
mov
js
sub
int3
mov
aaa
loope
xor
mov
add
aam
repnz
xchg
lcall
mov
pop
inc
popf
push
jae
cld
xchg
push
loope
js
pop
cltd
mov
cmp
adc
sub
fwait
mov
js
pop
adc
loope
movsb
addb
negb
orb
xchg
popf
iret
mov
pop
mov
inc
cmpsb
das
cmp
mov
pusha
fiaddl
dec
xor
test
push
adc
mov
push
inc
push
sbb
inc
imul
clc
adc
add
mov
cli
sbb
mov
pop
leave
adc
push
iret
int3
jmp
jmp
mov
xchg
pop
sbb
adc
scas
mov
iret
scas
mov
inc
in
adc
push
push
pushf
push
sub
pop
movsl
mov
inc
xchg
les
push
in
int3
mov
sbb
test
add
clc
sub
inc
inc
jne
xor
imul
sarl
inc
or
ds
jge
insl
adc
push
sbb
and
xor
mov
push
pop
pop
mov
xchg
stos
cmp
or
repz
xchg
jns
adc
xchg
out
bound
leave
shrl
cltd
pop
adc
pop
std
into
or
inc
pop
xor
xchg
decb
movsb
rorb
stos
adc
or
dec
mov
mov
mov
shrb
push
mov
sbbl
ret
and
pusha
dec
mov
jp
sahf
fs
pop
movsb
adc
std
lahf
cmp
inc
inc
and
aaa
mov
mov
mov
dec
ds
mov
xchg
repz
xchg
push
jo
jle
gs
mov
hlt
mov
shrb
sub
xchg
or
mov
insl
mov
orb
lock
aad
xor
sar
pop
push
cmpsl
jns
mov
stc
xor
add
and
pop
mov
or
mov
je
insb
js
sbb
mov
test
xor
pop
and
jae
sub
mov
xchg
lahf
out
test
ds
iret
xchg
or
pop
mov
arpl
mov
mov
mov
lea
pop
pop
std
push
inc
lcall
push
and
jp
mov
shrl
push
mov
mov
gs
mov
shrb
out
loopne
xor
xchg
in
or
push
dec
jne
pop
pop
nop
cli
sbb
sub
sub
paddw
add
cmp
lret
jge
push
enter
dec
fcoms
lret
pop
movsb
jmp
mov
das
add
dec
test
out
dec
mov
jmp
mov
test
sti
ljmp
clc
jne
sbb
dec
scas
inc
xor
add
adc
test
lds
jne
insl
out
arpl
adc
nop
dec
aaa
pop
loope
mov
cmp
dec
push
dec
xchg
ljmp
aad
lock
inc
pop
call
jnp
repnz
push
or
int
add
xchg
and
stos
inc
pop
fistps
cmc
out
imul
lods
adc
xor
data16
cmp
adc
or
push
hlt
inc
arpl
stc
in
pop
xor
or
cwtl
pop
push
pop
adc
or
and
push
aad
sbb
pop
cwtl
loope
adc
jno
sub
lods
mov
sub
loop
orb
in
fcomp
xchg
sbb
scas
dec
lods
fidivl
nop
rorl
cs
xchg
cltd
or
and
dec
push
jp
ljmp
mov
or
xchg
sbb
loopne
push
sti
push
sbb
out
cmp
add
ret
and
xchg
pop
push
pop
test
sub
out
test
das
pop
fldcw
fstps
dec
and
cwtl
add
sahf
mov
mov
out
shrb
add
mov
lret
bound
sahf
inc
lcall
pusha
pop
dec
pop
push
jbe
imul
add
xor
push
fistpll
cmp
sub
mov
fldcw
or
ja
mov
jbe
imul
daa
imul
mov
pop
pop
push
push
or
xchg
hlt
roll
stos
pop
cmp
mov
jno
cli
iret
cmp
ret
std
lret
dec
xchg
ficoml
imul
or
rcrl
mov
out
dec
inc
cmp
in
aas
sub
stos
pop
outsb
mov
addl
pusha
cmp
jb
mov
dec
dec
or
out
sarl
push
lds
jmp
and
popa
jbe
push
pop
adc
sub
add
ss
jg
int
mov
mov
lock
and
sbb
mov
mov
lds
das
in
xor
movsl
push
pushf
mov
add
inc
aam
inc
in
jbe
test
pop
aaa
imul
cmp
rcrl
dec
test
cwtl
aam
xor
gs
add
lea
call
dec
xor
pop
data16
lcall
int3
es
gs
cmp
les
ss
or
inc
or
cmp
push
push
mov
cltd
cmp
inc
push
inc
test
xor
cmpsb
push
scas
popa
and
push
sub
push
push
clc
lahf
dec
dec
rcr
add
ficoms
lret
in
xchg
aam
or
ret
test
sti
pop
and
xchg
cs
cmp
mov
leave
fs
ljmp
cld
mov
mov
int
xlat
flds
outsl
andb
ret
cmp
je
std
add
jns
dec
pop
cmp
test
outsl
stos
mov
rol
push
cmp
stc
mov
mov
xchg
out
and
add
dec
outsl
outsl
lcall
push
js
add
or
xor
add
lods
pop
xchg
out
rorb
mov
push
push
cmp
out
push
jle
push
jnp
dec
dec
shll
mov
mov
ficompl
cmp
mov
loopne
pop
xor
dec
cmpsb
mov
out
jns
mov
inc
les
and
addl
cltd
lock
cs
dec
into
cltd
scas
lock
lret
mov
insb
outsb
pop
inc
mov
in
je
sahf
inc
popa
mov
test
sbb
out
roll
clc
orb
lea
fwait
ret
lahf
fcomp
xchg
bound
clc
cwtl
mov
xchg
dec
fisubl
fstpt
in
mov
jg
ja
mov
aam
ljmp
push
xchg
mov
sti
fildl
inc
inc
mov
es
out
cs
dec
mov
sti
sub
popa
pop
rcl
cmc
ret
lock
sbb
test
test
in
stos
sahf
push
pop
imul
xor
out
fwait
xor
mov
inc
ss
mov
sbb
xlat
cmc
scas
jle
leave
aad
adc
xchg
cmp
cmp
mov
ret
xchg
cli
sti
ljmp
es
rolb
out
sub
pop
sbb
cmp
scas
adc
lret
mov
repnz
int3
jno
bound
ja
je
sbb
cltd
mov
lret
xchg
dec
xchg
xchg
and
xchg
jbe
andb
xor
inc
mov
out
push
add
in
out
out
sbb
mov
add
inc
lcall
dec
in
lods
xchg
sub
repz
test
xchg
sub
bound
mov
rcrl
jle
sbb
aad
in
test
fstp
mov
add
adc
sub
jne
movsl
je
imul
ja
push
and
aas
adc
mov
jo
nop
pop
adc
jbe
in
inc
adc
mov
jge
test
inc
lods
movsl
fdivs
or
mov
pushf
shlb
cmpsb
jecxz
loop
fwait
sbb
mov
push
fcompl
xor
fidivl
xchg
cmp
sbb
lods
cmp
sbb
mov
fsubs
cmpsl
out
lock
xchg
jbe
xchg
cs
add
sub
mov
cmp
cmp
ss
sbb
jbe
daa
out
cld
data16
stc
xchg
xchg
jb
js
imul
hlt
aad
cmp
addl
loope
sahf
arpl
xchg
pop
jbe
int
imul
notl
mov
jne
push
cli
fldl
and
jbe
into
or
ds
sub
negb
cmp
rorb
roll
bound
pop
sub
loopne
scas
out
and
or
mulb
sbb
fiaddl
fwait
test
push
jo
std
ja
out
xchg
inc
cld
aaa
dec
push
mov
les
jp
loope
mov
insb
xor
pop
cld
imul
cmpsb
and
bnd
shll
lea
cmp
mov
lds
add
cwtl
and
ss
cmp
or
jnp
push
fiaddl
xchg
mov
clc
cli
jmp
lods
lds
bound
pop
xchg
or
adc
jge
fidivrl
ficompl
nop
push
ss
pop
pop
gs
inc
je
push
out
ljmp
insl
movsl
mov
push
cmp
dec
and
inc
inc
pop
push
xchg
int
fbld
imul
pop
inc
pop
dec
shlb
std
psubusw
mov
mov
adc
filds
pop
and
rolb
and
daa
push
cmp
jle
or
or
mov
dec
push
les
adc
adc
push
rorb
ljmp
outsb
add
rolb
add
or
outsb
ret
stos
mov
cmp
rclb
push
sbb
xchg
mov
daa
dec
arpl
fdivrl
fwait
out
sbb
mov
pop
add
dec
popf
ja
sub
sub
sarb
sti
push
out
jnp
mov
inc
jmp
or
jb
mov
imul
outsl
in
iret
mov
cmp
gs
pop
pop
sub
out
test
test
rorl
test
inc
adc
sub
js
and
int3
xchg
xchg
jne
lods
mov
subl
sub
adc
inc
into
dec
inc
in
jno,pt
cmpl
in
subl
and
test
dec
and
test
mov
add
out
popa
inc
addr16
clc
notw
aas
push
adc
pop
adc
inc
rcr
inc
gs
add
mov
cmpsb
jnp
test
sub
clc
sbb
adc
sub
aaa
pop
sbb
test
aam
test
mov
ljmp
lods
sub
repz
add
inc
pop
ljmp
or
xlat
add
lahf
in
push
sbb
mov
iret
inc
mov
inc
or
jecxz
sub
ret
cmp
mov
push
lcall
pop
out
sub
sbb
stc
sbb
flds
mov
lods
jecxz
jns
movsb
mov
add
clc
fwait
and
mov
adc
jbe
lods
jo
pop
and
add
xchg
ja
test
cmc
pop
xchg
adc
mov
xchg
cs
mov
ss
xchg
mov
cmp
shlb
xchg
jge
xor
hlt
jae
dec
nop
or
adc
mov
xchg
outsb
cmp
call
or
and
sahf
or
popa
adc
mov
or
sub
push
sub
cmpsb
push
dec
sub
testl
lret
call
xchg
jmp
push
rorl
mov
adc
movswl
ror
xor
mov
mov
xchg
dec
icebp
mov
add
lcall
xchg
pop
mov
sub
fldt
addr16
shll
sti
push
lods
pushl
in
inc
adc
js
es
cmp
pop
adc
cmp
mov
pop
movsl
xor
fnstcw
mov
fbstp
xor
adc
adcl
repnz
push
xor
test
mov
sbb
jge
out
mov
js
lahf
cmp
loopne
and
jo
cmp
push
loope
mov
push
jae
mov
pop
jge
fists
push
cmpsl
and
subb
pop
sub
ljmp
lock
lea
jp
in
jecxz
inc
and
scas
and
push
loopne
sub
mov
mov
insl
push
cwtl
mov
mov
dec
shll
and
mov
mov
mov
sub
test
out
icebp
andb
in
shll
sti
sub
mov
jecxz
loope
ljmp
repz
mov
leave
push
jp
cmpsb
sbb
out
lea
rcrb
mov
and
imul
jle
pop
cs
fldl
jbe
pmullw
dec
sub
inc
dec
stos
mov
xchg
sbb
xorb
cmpsb
xor
out
call
shl
pop
jmp
pusha
xlat
faddp
pop
add
stc
popa
mov
xchg
cmp
lods
mov
fildll
jne
inc
mov
add
popa
cmp
outsb
aaa
mov
aaa
mov
outsl
jmp
orl
inc
push
jae
add
push
outsl
cmp
icebp
or
les
mov
xor
and
pushf
xor
or
jle
lods
dec
test
jmp
dec
loopw
fdivrs
lea
cmpsl
ret
inc
cmp
negl
or
pushf
fsubs
rcll
pop
sbb
dec
mov
mov
out
fldz
inc
js
and
inc
rcrb
in
add
test
and
pop
sub
xchg
jae
push
xor
xchg
sti
inc
loop
inc
push
test
lahf
jae
mov
or
or
mov
in
andb
jno
fsts
mov
std
push
jbe
loope
and
call
sbb
or
push
jmp
cmp
loopne
and
inc
icebp
idivb
pushf
iret
clc
cltd
pop
push
das
in
popa
cmp
inc
xchg
jns
inc
test
push
lds
lds
mov
jne
mov
loopne
sahf
enter
inc
jp
lds
andb
imul
fsubrl
nop
mov
popa
push
xchg
pop
sbb
ljmp
xor
enter
xchg
int3
insl
imul
pop
mov
adc
dec
mov
mov
lret
andl
imul
test
mov
repz
lea
fs
pop
and
xchg
add
mov
mov
jge
add
jo
mov
ret
mov
cmpsl
cmp
and
add
pop
lcall
jp
jmp
test
dec
inc
mov
lahf
sti
shrb
lds
push
in
cmp
jge
jle
stos
sub
rcll
cmc
mov
and
test
insl
stos
mov
aas
sub
mov
addr16
cmpsb
dec
mov
imul
push
xchg
push
in
push
test
cltd
xor
inc
add
xchg
movsl
dec
mov
adc
mov
sbbb
xor
mov
xchg
in
pop
pop
popl
test
clc
imul
clc
and
fwait
dec
jp
rorl
jb
cltd
lds
mov
xchg
xor
adc
movsb
push
push
fstpl
jg
jle
push
stos
inc
repz
inc
lret
dec
xchg
mov
repz
sbb
dec
leave
pop
mov
xlat
inc
xchg
and
dec
or
jge
lret
popf
loope
push
es
sub
xchg
xorb
loope
xor
arpl
xor
mov
cmp
test
inc
mov
fsts
leave
pop
mov
popf
fnsave
loopne
dec
push
sub
cmp
push
mov
jmp
sub
jo
jo
push
subl
scas
fs
popa
or
aaa
cltd
repz
push
mov
hlt
jle
xchg
push
outsb
fdivr
sub
mov
stc
js
jno
mov
push
mov
mov
add
and
and
jne
inc
in
push
and
inc
xchg
sbb
int
and
rolb
mov
sbb
mov
xlat
and
ja
dec
pushf
jb
call
pop
cmp
push
pusha
lods
jno
in
fidivrs
arpl
loope
scas
popf
daa
clc
cltd
xchg
popf
or
xchg
mov
push
jae
cmp
mov
cmc
jle
inc
mov
movsb
data16
sbb
cmpsb
sub
in
loope
sbb
pop
sti
and
lods
push
xchg
adc
push
adc
xor
clc
adc
push
cmpl
cmc
in
xchg
iret
sbb
test
insl
sub
jnp
mov
add
jbe
add
sbb
repz
adc
sub
push
ffree
je
ljmp
push
pop
xchg
pop
shll
and
in
pop
fistl
call
sahf
push
mov
ficoms
jge
aaa
mov
xchg
mov
popf
or
xor
lret
mov
lods
adc
mov
ds
das
jmp
fistpll
mov
mov
add
or
movups
add
cmp
std
into
sbb
xchg
pop
rorb
mov
js
fwait
xchg
and
repz
sub
mov
out
movsl
in
dec
cwtl
push
dec
jmp
add
fs
push
sbb
sbb
es
insl
push
jle
xchg
inc
sub
mov
call
cmp
pop
fdivrs
push
orb
xchg
xlat
outsb
mov
mov
fstps
inc
push
lods
sbb
ja
xchg
push
pop
jecxz
or
sbb
jl
or
loop
imull
sbb
movsl
popa
movsl
push
add
shll
mov
xor
jl
cwtl
sbbl
ds
lods
aam
sub
pushf
jp
jmp
mov
faddl
insb
stc
ret
dec
mov
popa
iret
out
jne
shll
in
sbb
mov
adc
and
notl
push
mov
ficomps
in
stos
call
push
cltd
in
stc
mov
pusha
sub
sub
notl
cmp
jmp
fwait
sub
arpl
fnstcw
dec
adc
cmpsl
mov
repnz
xchg
mov
and
lcall
arpl
scas
xor
fildl
mov
ret
sub
jae
jp
push
push
into
inc
cmp
shll
xor
pop
lea
mov
add
push
pop
fs
adc
ljmp
out
sbb
dec
or
dec
pop
push
sbb
jo
ss
loop
cmp
jmp
iret
and
push
jmp
cmp
lods
jg
loop
sbb
pushf
mov
das
aas
dec
and
jbe
inc
shr
mov
leave
or
lcall
in
int
sbb
sbb
cltd
mov
pusha
jl
dec
xchg
pushw
mov
mov
addr16
imul
dec
cltd
aam
cltd
push
icebp
or
jo
sbb
mov
icebp
add
outsl
push
icebp
pop
jg
pushf
inc
popf
enter
pushf
out
sub
out
jno
sbbl
lret
pop
loopne
lea
ljmp
ljmp
push
popf
loopne
loope
movsl
sahf
adc
sbb
mov
hlt
scas
lcall
and
fnsave
add
lods
mov
sub
pop
mov
rcll
xor
xor
ret
lcall
out
add
adc
sbb
bnd
mov
popf
mov
js
bound
imul
pop
and
push
xchg
scas
mov
js
xor
mov
cmpsb
mov
sbbb
cmpsl
movsl
dec
mov
mov
mov
outsb
test
andb
imul
aad
ret
insb
scas
push
dec
xchg
into
popa
and
andb
mov
mov
out
mov
imull
scas
pop
sub
pushf
lock
ss
movsl
int3
and
mov
mov
and
hlt
mov
xor
data16
int3
subl
mov
push
cmp
push
bound
ljmp
jae
pop
movsl
add
sarl
jl
jo
les
les
shrl
jbe
lahf
jecxz
cmc
fadd
popa
lret
testl
ss
xchg
add
push
mov
ljmp
jno
or
xchg
mov
aad
cmp
loope
mov
push
pop
inc
int3
dec
or
add
jae
dec
mov
mov
mov
and
xchg
stos
cmpsl
fsubs
sub
or
ljmp
inc
fdivr
ja
out
and
adc
add
hlt
mov
xchg
lcall
mov
inc
nop
mov
adc
mov
jno
movsb
xchg
inc
mov
or
pop
pop
dec
dec
int
repnz
fs
sub
xchg
int
push
fimull
adc
aam
or
je
adc
icebp
xor
arpl
xchg
pop
and
cmpsb
aam
movsl
jb
xchg
add
lret
bound
int3
mov
inc
adc
sub
mov
mov
jp
mov
fnstcw
xchg
test
mov
scas
or
loopne
mov
or
ret
aam
add
push
cmpsb
sub
repz
fisubl
scas
push
cmovno
sarl
int3
movsl
adc
stc
icebp
mov
xadd
pop
hlt
or
nop
jmp
pop
incl
sub
xchg
imul
mov
xor
xchg
dec
stc
jle
dec
cmp
into
in
mov
test
add
ljmp
pand
sub
mov
jge
mov
adc
mov
divl
push
test
add
and
mov
cli
sbb
int
ret
pop
push
je
xor
out
dec
dec
orb
xchg
movsb
out
or
aad
setg
or
pop
stc
push
pop
bound
int
sub
pop
scas
add
cmpsb
insb
mov
into
mov
push
test
sbb
lea
adc
addl
pop
fnstsw
xchg
aad
ss
add
cltd
les
push
cmp
push
test
jle
sbb
cmp
lock
mov
lret
lods
mov
dec
cwtl
cmc
add
pop
add
adc
and
call
loope
dec
cmp
cmc
cmp
addl
out
fistps
inc
mov
fiadds
inc
popa
inc
cmc
pop
dec
add
xchg
test
fsubrs
pop
dec
stc
dec
push
or
rcrl
shlb
cmc
pop
rep
adc
out
scas
clc
hlt
shlb
and
sub
add
sbb
dec
mov
push
scas
je
xchg
or
ret
add
outsb
je
das
stos
pop
into
call
sbb
lea
and
xor
repz
cmpsb
iret
cmp
jmp
mov
mov
in
test
and
xor
or
mov
mov
dec
xchg
jns
dec
movsl
or
cmpsl
xchg
mov
push
pop
gs
pop
or
fistpl
bound
sbb
jmp
mov
and
rcrl
ljmp
shrl
sbb
pop
push
je
add
fdivrl
imul
sbbl
imul
and
je
mov
sub
push
rcl
dec
rclb
stc
inc
mov
and
inc
and
js
sbb
test
lahf
inc
add
sahf
xchg
mov
mov
mov
xchg
cmpsb
jns
js
gs
inc
pop
inc
cmc
loop
cmpsl
aaa
push
sub
data16
jl
mov
dec
inc
push
mov
adcb
push
inc
push
pop
sub
and
xor
ret
mov
or
cmp
and
or
inc
mov
inc
rol
loopne
out
push
jmp
push
xorl
mov
das
or
cmpsb
in
sti
in
mov
cwtl
dec
lret
mov
jbe
or
les
push
mov
mov
fbld
hlt
xor
xor
lret
xchg
dec
data16
ljmp
call
push
loop
mov
leave
loopne
cmp
inc
aam
int
lret
fstpl
cli
add
pop
sbb
cmp
pop
pop
or
scas
fs
out
das
adc
lret
mov
iret
aaa
xchg
cmpsl
mov
ja
xchg
jge
sub
ljmp
add
mov
or
popf
pushf
sbb
cwtl
lret
dec
push
stc
pop
imul
arpl
mov
lret
lret
sbb
sbb
push
fwait
pop
add
cmp
in
push
dec
pop
inc
xchg
xchg
dec
push
pop
out
fstpt
jb
mov
jnp
or
sub
js
xchg
rcrb
lods
outsb
rcl
xchg
enter
call
push
pop
test
bound
fldt
xchg
inc
repz
dec
pop
jns
bnd
and
mov
dec
lock
jb
push
xor
iret
dec
cmp
mov
fucom
add
dec
cmpsl
cmpsl
loop
iret
sbb
and
inc
scas
daa
mov
mov
mov
xchg
and
dec
inc
ds
cs
dec
xor
loope
lods
inc
cmc
xor
fsubs
push
scas
fsubs
sbb
jno
adc
jp
sbb
mov
stc
scas
jmp
sti
pop
outsb
mulb
std
inc
push
iret
ljmp
out
das
ljmp
aas
inc
cmp
les
pusha
push
sub
bound
push
or
push
mov
dec
pop
pusha
fwait
or
adc
cmp
inc
shlb
mov
mov
xchg
repnz
mov
pop
cmpsb
xchg
lahf
jns
add
dec
xchg
daa
push
bound
jns
enter
pop
fldcw
testb
clc
sub
out
mov
int
aam
inc
push
cmpsl
lea
pop
cld
leave
mov
lods
push
shll
sbb
faddp
push
dec
mov
mov
js
pop
push
xchg
mov
test
bound
data16
outsb
rcrb
add
inc
push
add
call
sbb
in
and
dec
jg
ret
ret
out
inc
popa
shrl
or
ds
fdivs
faddl
call
jge
mov
lahf
pop
sub
hlt
je
inc
mov
push
lahf
in
outsb
fisubrs
incl
xor
js
pop
xorb
mov
sbb
addr16
adc
mov
push
pusha
sub
or
sub
lret
sub
pop
enter
inc
sahf
mov
and
dec
insl
cmp
imul
add
imul
xchg
mov
cltd
sbb
cmp
fildl
addr16
add
mov
loopne
in
cmp
and
mov
jbe
sbb
fs
in
lcall
pop
adc
ret
sub
sbbl
scas
xchg
in
clc
mov
and
jecxz
rorb
jnp
jp
pop
fwait
bound
inc
ret
and
or
sti
push
mov
jmp
jbe
mov
sbb
adc
mov
sahf
cmp
jge
jbe
rolb
popa
js
xlat
mov
loop
inc
fidivl
ja,pt
or
adcb
push
sub
or
lea
sbb
lods
orb
mov
popf
push
inc
sub
fdivrl
lahf
mov
inc
clc
mov
movsb
or
mov
and
or
out
and
mov
ss
jge
stos
sub
lea
sbb
ret
call
ljmp
xlat
enter
jnp
mov
add
icebp
scas
fsubrs
sub
in
fisttpl
or
mov
and
and
push
xchg
sub
mov
outsb
mov
xchg
test
pusha
fisubs
push
addr16
addr16
or
in
sbb
xchg
fcomps
cli
adc
cli
add
jb
jecxz
sahf
arpl
shufps
jmp
loopne
imul
sbb
mov
incb
popa
adc
imul
sbb
test
adc
inc
cmp
lahf
andps
mov
in
and
loope
cmp
out
push
push
mov
xchg
add
mov
mov
mov
sub
push
dec
or
pop
xor
inc
jns
out
push
adc
xchg
and
lret
movsl
mov
adc
test
pusha
in
and
jne
pop
inc
sub
mov
fstps
test
jb
ret
dec
jne
jae
bound
adc
pop
sub
test
loope
mov
jns
dec
jbe
lcall
sbb
stc
push
xchg
pushf
jg
cld
fsubl
lcall
jge
or
adc
hlt
adcl
test
decb
and
mov
mov
or
xor
mov
jge
test
jmp
mov
adc
lods
adc
sub
stos
loop
imul
sbb
fnstsw
xchg
and
mov
aaa
lcall
push
dec
mov
inc
push
mov
pop
add
clc
jmp
dec
add
outsl
in
sbb
stc
hlt
add
div
out
clc
je
mov
xor
and
jbe
pushf
mov
xchg
lret
insl
ficomps
mov
mov
mov
dec
sbb
sub
xchg
out
test
jle
jg
add
fidivrs
xor
xchg
test
int3
sub
jno
cmp
cli
in
lcall
push
pop
out
mulb
cmpsl
shlb
pop
into
loop
and
jge
test
ss
push
leave
aad
push
insb
addr16
xor
imul
mov
lods
and
sar
mov
popa
mov
mov
adc
and
scas
test
pusha
frstor
inc
enter
js
pop
pop
jne
jb
imul
repz
enter
push
pop
test
mov
out
arpl
cmp
test
mov
xchg
push
mov
test
js
push
pop
pop
ret
pop
push
pop
cmp
xchg
movsl
cmp
sbb
or
cwtl
cmp
and
jnp
push
pop
dec
fwait
test
clc
jne
loope
xor
pop
nop
cmp
test
pop
les
enter
iret
xchg
fists
cmpsl
out
cmp
pop
in
mov
or
xlat
mov
cmpl
push
mov
push
arpl
mov
push
sub
in
push
and
aas
mov
pop
andl
aam
pause
inc
mov
xchg
lods
mov
mov
mov
data16
cmp
mov
js
and
xchg
fimull
lcall
into
jle
sbb
in
xchg
imul
jge
dec
into
ss
popf
shrl
cmc
loopne
dec
inc
dec
into
pop
fisubl
adc
mov
clc
pop
pop
dec
outsb
mov
insb
mov
repz
and
adc
mov
lods
pop
test
dec
fdiv
lret
xlat
or
mov
in
inc
into
jno
stos
mov
push
sti
and
mov
sub
enter
out
xchg
les
push
jecxz
hlt
dec
pop
mov
aam
mov
aas
and
jo
scas
adc
rclb
xor
hlt
xchg
ja
fbld
jnp
in
daa
repz
addr16
xor
xor
add
cmpsl
adc
fnstsw
mov
adc
rcrb
jae
mov
lret
pop
cli
lds
fmulp
dec
or
jp
sti
jne
lcall
or
arpl
mov
jne
mov
mov
fs
std
into
daa
jbe
push
loope
repz
dec
pop
idiv
pusha
dec
sti
push
add
sub
jb
popf
fs
fadd
cwtl
xchg
jo
loope
aas
xor
mov
test
lods
bound
xor
pop
out
xor
jns
add
out
outsb
cmp
mov
in
in
pop
sti
aas
mov
add
rcrl
inc
ret
pop
or
int3
mov
dec
rcr
mov
test
inc
es
inc
or
add
mov
neg
xchg
mov
dec
loope
rorb
inc
iret
mov
in
lret
jp
insl
lretw
cltd
hlt
mov
fld
fwait
out
neg
out
dec
dec
mov
lea
pop
and
shlb
pop
add
fwait
inc
xor
fistpl
cmp
cli
cmpsl
push
add
rol
or
dec
adc
dec
test
imul
dec
in
xor
and
xchg
in
fisttpl
js
adc
lahf
xchg
mov
push
fcomp
sub
scas
in
mov
inc
mov
push
lret
lods
jae
es
pop
dec
adc
lods
mov
add
out
fisubrs
lret
cmp
xchg
xchg
dec
push
int3
sub
test
sub
push
je
push
or
mov
jae
es
inc
test
sub
outsl
je
add
jo
xchg
sub
in
iret
xchg
daa
dec
jp
mov
outsb
push
daa
add
ljmp
fldt
ds
jp
test
inc
cwtl
push
fst
repz
add
test
add
fdivs
ret
lcall
lret
hlt
leave
cmpsb
popa
lea
kunpckwd
xor
mov
sbb
and
add
or
jo
adc
leave
mov
mov
sti
inc
test
xor
call
arpl
dec
adc
in
dec
cli
add
nop
cmpsb
repz
in
dec
sub
dec
in
lock
cwtl
dec
dec
cmp
inc
jae
hlt
push
dec
lret
sub
lds
icebp
mov
ret
in
enter
mov
gs
ja
shrb
ljmp
push
inc
mov
cmp
inc
sub
push
pop
imul
pop
inc
scas
gs
dec
jmp
filds
sbb
repnz
xchg
and
cltd
cmp
lahf
jno
fdivs
pusha
shrb
test
mov
lret
push
mulb
dec
out
inc
push
sub
sub
or
icebp
mov
test
sbb
jne
cmp
repnz
cmp
test
mov
ret
lea
dec
call
mov
or
xchg
test
jecxz
jge
sbb
aam
ja
cmpsl
ret
das
iret
adc
lods
insl
ss
adcl
clc
xchg
cmc
and
sahf
and
clc
inc
sbb
jl
or
aam
lret
lods
fsub
adc
pop
adc
shl
inc
jmp
jb
daa
ret
inc
add
mov
test
sub
adc
push
mov
repnz
cmp
out
or
or
nop
sub
mov
rcl
and
sub
or
push
pop
test
mov
push
adc
ret
bound
outsb
push
jg
sbb
ret
aad
jb
xchg
mov
push
xor
mov
test
movsl
xchg
mov
aad
dec
mov
test
pop
pop
jo
and
mov
mov
loope
push
adc
mov
xor
fdivrp
lcall
fwait
aas
stos
push
inc
pushl
sbb
int3
call
jo
lods
push
jge
mov
mov
rorl
dec
addl
jns
clc
xchg
jbe
sub
sbb
inc
xchg
aam
mov
push
test
das
jmp
int
sub
mov
lods
xchg
sub
xchg
xchg
or
or
out
push
xor
jge
or
add
adc
aas
into
lods
sub
out
sbb
das
sub
rcll
xchg
mov
and
push
ret
sub
popa
add
lds
addr16
xchg
pop
sbb
ljmp
js
loop
xlat
fcoms
push
shlb
add
push
mov
outsl
popf
push
adc
push
push
out
dec
jl
mov
shll
std
mov
mov
add
cltd
and
cmp
pop
cmc
aaa
xorb
cld
call
jmp
jbe
stc
loopne
aad
jno
mov
mov
jns
cmp
cmp
mov
imul
rcrl
testb
lds
sub
lock
movsb
stos
push
nop
mov
lods
fsubl
nop
pop
jl
hlt
jle
mov
cmp
jg
and
int3
mov
cmp
and
lret
data16
mov
sub
andl
dec
lret
pusha
inc
lret
mov
sub
les
sbb
cwtl
add
cmpsb
sbb
pop
push
jge
cmc
ss
inc
pop
int
lahf
and
ret
mov
mov
sbb
add
ret
mov
dec
insl
inc
cmc
loopne
shlb
subb
add
cmp
add
sahf
lods
sbb
pop
push
shlb
test
mov
fsubrl
dec
cmp
cli
mov
sub
in
push
dec
imul
mov
cmp
fucomi
xchg
lods
pop
jno
jg
pop
and
add
xchg
or
dec
cmp
popf
popf
mov
ljmp
mov
fisubl
lock
mov
mov
mov
stos
stos
or
mov
loope
mov
leave
xor
mov
stos
cmpsl
out
mov
xor
pop
add
fildll
call
leave
clc
repnz
xor
mov
mov
adc
push
sbb
loope
cmpb
inc
adc
sub
fstps
inc
inc
loop
add
mov
sbb
sub
hlt
outsl
aaa
inc
push
pop
outsl
mov
adc
jne
jmp
sbb
or
pop
stos
push
xor
daa
dec
sti
push
gs
push
sbb
mov
adc
enter
mov
pusha
xchg
lods
aas
lret
push
or
mov
imul
mov
sub
fsubrs
xchg
bound
or
mov
aaa
in
ds
pop
lahf
scas
inc
scas
outsl
cltd
pop
sbbl
pushf
pop
es
cs
scas
pop
jno
les
dec
cld
xchg
orb
leave
or
jns
in
ss
leave
jp
sub
push
lock
cmp
xchg
cltd
enter
dec
ljmp
stos
ret
bound
mov
jae
push
jmp
xchg
inc
mov
fidivrs
jle
push
xlat
loope
and
jmp
xor
lahf
ds
sahf
mov
cld
sub
leave
lret
jg
dec
cmp
dec
pop
mov
and
sbb
ds
fs
pop
ret
bound
push
sub
adc
xchg
movsb
outsl
test
cmp
xchg
mov
daa
imulb
jnp
add
sahf
mov
mov
movsl
aam
mov
jo
lret
ret
mov
rcr
inc
rcll
fbld
loopne
jno
and
jl
or
scas
leave
xchg
dec
arpl
and
notl
fsubs
or
lea
push
push
inc
add
in
mov
mov
les
pop
dec
aam
pusha
xchg
lea
ljmp
mov
flds
dec
and
fwait
stc
mov
aad
mov
outsb
jbe
icebp
pop
pextrw
mov
and
bound
mov
add
sbb
dec
push
sub
push
in
pusha
mov
orl
in
dec
jbe
aas
push
pop
and
shll
fldenv
xor
cld
jp
aaa
and
xchg
es
dec
xchg
aaa
push
mov
jnp
cmc
pop
cli
shlb
cmp
iret
and
loopne
push
xchg
cmp
mov
sbb
or
jmp
fs
icebp
das
ret
adc
scas
push
jmp
movl
mov
add
shr
ficoml
xchg
xchg
ja
xchg
clc
js
leave
and
repz
push
pop
jo
test
dec
pop
inc
push
mov
rcll
mov
in
movsl
or
int3
loopne
mov
mov
push
lret
cli
rol
and
mov
mov
mov
push
scas
dec
test
push
push
mov
insb
mov
push
or
jb
mov
movb
lods
xorb
add
clc
mov
ret
filds
dec
and
or
fcoml
adc
inc
add
into
rorl
and
pushf
test
mov
pop
dec
sub
dec
iret
and
jne
sub
mov
adc
stos
lods
in
jmp
scas
in
cmc
cld
jecxz
add
popl
das
call
test
add
jbe
mov
xchg
filds
or
push
in
clc
add
ss
adc
cld
cmpsb
lods
sub
xor
out
stos
jb
ret
xorl
cmp
movsl
insb
push
fwait
jmp
inc
stc
outsb
mov
fistps
int3
add
sub
cmpsl
mov
cmp
fsts
inc
dec
mov
cmp
fiaddl
inc
leave
sbb
mov
dec
add
insb
adc
leave
fstpl
xchg
mov
mov
push
push
into
jle
fcompl
xchg
test
mov
mov
xchg
lcall
int3
pop
fmull
lret
and
call
pusha
ljmp
cmp
icebp
mov
adc
sbb
dec
mov
xchg
mov
xchg
das
pusha
in
adc
push
scas
lahf
jecxz
add
sbb
cmp
sub
shll
lret
jbe
jo
rorb
std
push
push
aaa
andps
xchg
push
add
push
lods
fldt
xchg
lret
cmp
mov
jne
pop
or
les
aam
mov
cmpb
sbb
shr
push
repnz
dec
nop
lret
lcall
mov
and
es
fwait
out
lds
push
lea
mov
mov
fcoms
sbb
or
shll
cli
pop
ljmp
xchg
sti
dec
pop
std
mov
ret
or
jns
inc
cmp
out
movsb
cmp
fisttpll
push
inc
outsl
mov
leave
js
stos
test
jae
lods
sti
cli
mov
mov
loope
add
dec
push
test
aad
outsl
data16
dec
cli
shl
mov
xor
roll
subb
jns
xor
test
clc
and
jmp
repz
pop
xlat
and
mov
dec
mov
mov
pop
xor
jle
jne
jecxz
and
fistpll
pusha
push
jmp
out
lods
xchg
jbe
xchg
insb
mov
cmp
xchg
jnp
or
mov
fisubl
xor
mov
xchg
push
jp
mov
xor
add
xchg
movsb
xchg
es
insb
inc
dec
sahf
cmp
mov
xchg
mov
pop
sbb
inc
dec
xchg
adc
ret
mov
inc
xchg
arpl
aam
les
shlb
test
loop
imul
push
sub
ret
sbb
mov
jnp
jns
jg
inc
pop
addr16
mov
vmwrite
mov
mov
mov
lods
rol
dec
into
mov
in
mov
scas
xor
cli
loop
cmpl
psubb
ss
lret
add
scas
jo
push
cmp
icebp
cmp
sti
jb
addr16
shrb
xchg
cmp
fldcw
and
scas
cmpsl
idivb
cmpsb
cmp
add
xchg
fstpl
pop
and
out
dec
adc
insl
mov
stos
sbb
or
sbb
in
popa
push
insb
popf
mov
and
mov
push
lea
xor
cltd
cld
push
pop
sbb
jg
adc
jle
in
in
inc
cmc
dec
es
push
test
mov
lods
sarl
inc
pop
mov
mov
xchg
outsl
mov
faddl
pusha
mov
movsl
or
lods
mov
dec
aas
movsb
pop
inc
lcall
aaa
and
push
dec
sbb
jae
and
xchg
jmp
std
or
sarl
adc
inc
in
cltd
mov
fcomps
adc
std
pop
in
push
ja
adc
push
sbb
insb
cmpsl
shl
xchg
adc
mov
pop
pop
and
fbstp
scas
loop
clc
pop
arpl
test
int3
ret
push
mov
pop
xchg
fmuls
imul
add
sub
xchg
imul
pop
add
xchg
iret
pop
out
in
jns
xchg
inc
jo
push
mov
jmp
xchg
sahf
push
xchg
sub
sub
or
mov
ljmp
aad
cmp
cs
and
insb
je
lea
pop
imul
sbb
jge
pushf
mov
or
addr16
pop
pop
outsl
jmp
mov
add
adc
lods
add
or
push
jmp
scas
cmp
jne
xor
adc
and
out
mov
xor
mov
sbb
jle
aad
fbld
jb
xor
sub
idivl
cmp
mov
insb
xchg
jb
and
or
test
sti
and
pop
dec
dec
xchg
roll
mov
jbe
add
aas
cmc
rorl
scas
addl
xchg
mov
inc
insl
pop
outsl
ret
add
out
stos
sbb
xchg
lcall
cmp
les
lcall
inc
lock
jp
mov
adc
pop
lods
enter
jo
dec
inc
pop
pop
dec
in
mov
fwait
nop
movsb
push
jne
mov
xor
outsb
cs
call
insb
imul
cs
xchg
adc
pop
mov
imull
adc
mov
lret
mov
inc
ljmp
xchg
mov
jno
pushw
aaa
cld
test
and
shll
fisubrl
out
push
jbe
mov
xchg
loopne
pop
test
dec
in
or
cltd
push
add
inc
test
jno
adc
xchg
add
push
sbb
cltd
andl
pop
mov
jno
push
pop
daa
pop
loop
lods
lods
inc
xchg
shl
mov
inc
mov
mov
and
jae
lods
or
out
push
push
dec
push
mov
out
aad
xchg
jno
add
xor
push
adc
sub
enter
jg
lods
aaa
push
scas
mov
repnz
dec
sbb
jnp
sub
leave
and
aaa
add
insb
pop
xor
pop
outsl
and
test
fldt
cli
push
cld
xchg
rcll
pushf
cmp
arpl
and
iret
fidivrl
mov
jl
in
mov
shr
dec
pop
inc
sbb
xchg
push
dec
stc
lods
dec
adc
cmp
dec
gs
and
mov
out
inc
rorl
loope
int3
mov
jl
arpl
cmpsb
mov
ret
insl
cld
lcall
or
jecxz
jns
sub
and
ljmp
xorb
stos
mov
cmp
shlb
jge
decb
fistpl
xor
mov
pop
mov
packssdw
sbb
xchg
adc
cmp
or
outsb
js
inc
fwait
inc
cmp
pusha
rorl
and
pop
movsl
cmp
ret
adc
scas
xchg
mov
test
mov
cwtl
push
movsl
mov
jnp
or
jg
movl
out
mov
mov
ffree
addb
lea
filds
lret
mov
leave
clc
jl
mov
push
pop
movsl
aas
out
mov
inc
ret
hlt
lret
jg
mov
mov
sbb
pop
in
add
xchg
pop
fldenv
ja
sub
lea
outsl
pop
jp
lods
push
xchg
test
cmp
jmp
push
lret
aam
fnop
mov
cld
push
loopne
and
dec
mov
mov
imul
add
xchg
pop
rclb
xor
adc
jns
cmp
imulb
rorb
xchg
jecxz
push
lret
iret
lret
popf
arpl
sbb
mov
je
enter
xor
sub
rcl
sti
das
mov
clc
pop
gs
in
xor
rcl
mov
mov
pop
xor
mov
idivb
pushf
inc
jg
mov
and
les
pop
test
and
push
and
xchg
std
call
dec
ret
add
jo
mov
ja
ja
ds
cmp
aam
and
iret
cld
or
jge
icebp
jnp
sbb
popa
or
pop
inc
push
and
sbb
popa
out
jnp
ljmp
jmp
jb
mov
pop
push
enter
jp
push
arpl
add
sub
push
pop
stos
sbb
sbb
inc
mov
insl
adc
push
push
iret
fildll
pop
mov
jnp
cmc
jbe
cli
push
and
cmp
mov
pop
movsl
xor
mov
mov
pushf
mov
lret
fs
xchg
lods
cs
cmp
sbb
in
and
dec
cltd
or
mov
cmpsl
ret
dec
push
test
xor
cmpsb
sub
xchg
sbb
jbe
outsl
push
inc
inc
push
stos
rorb
loope
xchg
ss
imul
pusha
jnp
arpl
scas
pop
dec
sub
xchg
dec
leave
mov
cmc
rcl
xor
leave
leave
mov
into
inc
ret
fwait
mov
sarl
add
sti
jns
inc
outsb
mov
pop
les
xor
mov
call
inc
xor
paddusw
jle
jl
ss
mov
or
mov
jo
xchg
jmp
fisubrs
xor
xor
add
in
inc
cmp
push
pop
inc
cmpsl
mov
push
incl
out
movsb
mov
sbb
jnp
jbe
into
cmc
mov
xchg
into
cmp
pop
gs
mov
lock
fs
push
jbe
mov
aad
ret
push
pop
fs
sub
out
test
loop
bound
ret
jb
and
push
dec
aad
in
dec
mov
cmc
into
adc
loopne
or
pinsrw
cmpxchg
inc
fsubrl
push
mov
mov
mov
jne
sub
push
test
push
in
scas
lahf
cmpsl
inc
add
pusha
pop
imul
pushf
push
mov
rorl
movb
mov
xchg
ja
mov
ja
enter
loopne
fwait
push
xor
andnps
add
dec
loope
lds
mov
mov
scas
dec
es
push
cmp
rcl
xchg
mov
out
mov
mov
add
or
xchg
inc
or
push
jnp
adc
call
push
jp
test
xchg
ret
lahf
push
les
xchg
add
dec
dec
fcompl
pop
fistps
jns
dec
jle
lods
or
or
push
clc
mov
xchg
iret
xchg
scas
mov
dec
mov
frstor
ror
add
xchg
ret
or
adc
mov
loope
push
aaa
outsb
mov
cli
inc
dec
imul
mov
cmp
test
sbb
pop
sbb
mov
mov
fcmovbe
js
mov
add
rorb
cmp
dec
push
inc
ljmp
mov
loopne
dec
cmp
dec
in
mov
push
and
add
pop
out
jno
into
sbb
cmpsb
xchg
push
dec
or
stc
popa
pop
decb
inc
sub
int
xchg
or
cli
test
cmp
jmp
test
add
push
lods
mov
jg
or
pop
pop
aas
negb
mov
adc
add
pop
mov
mov
xor
sbb
insb
aaa
das
xchg
push
xchg
scas
leave
inc
push
in
push
mov
hlt
leave
inc
je
sti
push
aaa
xor
insl
mov
sbb
or
lds
xor
sub
sbb
nop
into
into
add
cmp
sbb
jmp
dec
sbb
pop
pop
jl
xor
push
pop
call
dec
inc
loope
jmp
fistpll
mov
cmp
nop
cmp
in
mov
out
cmp
fwait
out
xchg
bound
add
push
outsb
push
cmp
add
sahf
xchg
jle
ret
addr16
xorl
push
xor
xchg
stc
cmpl
and
ret
xchg
sbb
and
dec
xor
cmp
pop
int
push
mov
dec
cmp
outsl
aam
ss
nop
data16
out
pop
inc
mov
inc
negb
dec
icebp
push
mov
idivb
inc
stc
fistpll
lcall
inc
sbb
or
sub
sub
clc
mov
dec
dec
adc
push
or
sbb
ror
inc
ret
mov
inc
xchg
adc
jae
in
ss
mov
mov
mov
dec
mov
sbb
inc
pop
push
jecxz
out
jl
mov
clc
dec
pop
mov
outsb
dec
mov
xchg
push
inc
xor
jl
rcl
mov
add
leave
add
jne
aas
dec
or
cmc
das
cmp
aam
and
cld
out
mov
cwtl
imul
mov
pushf
sub
pop
add
stos
popl
roll
xor
fisttps
xchg
mov
fdivrp
push
fiadds
pop
xchg
dec
test
pusha
sbb
xchg
fs
cmp
mov
lahf
xor
in
inc
cmp
dec
push
push
jo
fsub
dec
push
sbbl
mov
jbe
leave
lret
sub
pop
jnp
hlt
lock
pop
pop
ljmp
repz
lret
addb
push
push
aam
cli
gs
pushf
pop
sub
imul
lods
aam
test
adc
cld
aam
pop
pop
pop
mov
add
add
inc
shlb
inc
push
cmp
push
mov
sub
adc
out
movsb
clc
lret
push
inc
adc
dec
fidivrs
gs
ret
lods
and
out
sub
loop
in
and
push
lock
adc
lea
or
xchg
adc
dec
sub
pop
add
cmpsl
jp
jmp
mov
xchg
add
mov
fwait
sub
mov
idivl
xchg
adc
stc
push
xlat
scas
push
into
js
sahf
lahf
mov
gs
fs
dec
imul
xorl
lret
in
lods
fdivrl
insb
test
mov
lea
mov
loope
jg
add
cmp
fnstenv
and
xchg
and
roll
sub
sub
mov
scas
inc
inc
push
sti
daa
cltd
xor
lock
cmpb
cs
addr16
ljmp
scas
xor
dec
add
les
in
adc
pop
sbb
in
inc
mov
out
mov
cld
xchg
fstps
jae
mov
je
cmc
ror
or
nop
inc
es
imul
out
add
out
push
mov
loopne
adc
jp
pop
daa
lcall
jmp
jle
sbb
pop
adc
stos
push
and
rclb
xchg
push
xor
pop
ficoms
cwtl
pop
push
push
mov
lods
bound
outsl
xchg
ja
sarl
hlt
mov
int
add
xor
insb
repnz
js
aaa
ljmp
jmp
adc
daa
push
jmp
stc
mov
mov
sub
xorl
loopne
stc
jo
int
mov
adc
xorl
enter
xchg
mov
inc
popf
rcr
jle
mov
xor
mov
popa
mov
imul
jne
subl
mov
jg
cmp
dec
lock
ror
shl
cmp
cli
mov
cmp
pop
inc
push
sbb
mov
leave
inc
mov
cwtl
cmp
pop
fstps
push
dec
and
push
arpl
aam
cmp
std
jb
mov
or
cmp
out
scas
sbb
hlt
ja
sbbb
lods
aaa
insb
outsb
inc
enter
cmp
pop
test
test
loope
push
push
pop
push
cli
or
repnz
in
orb
sahf
sbb
lret
sbb
imul
push
mov
js
lret
or
push
nop
pop
sbb
xor
fidivrs
jmp
ds
daa
fildll
sbb
push
stos
in
add
stos
adc
hlt
jmp
push
inc
into
into
sbb
call
mov
xchg
cmp
addl
push
push
pop
jl
je
jb
mov
stos
lret
and
call
jl
dec
fcomp
addr16
ja
and
xchg
je
dec
add
stos
cmp
cltd
lret
jg
push
push
insl
jo
mov
or
sbb
mov
or
or
sbb
xchg
shl
pop
flds
inc
xor
add
sbb
inc
call
ret
call
std
xchg
push
pop
es
add
add
push
pushf
les
mov
or
addr16
cwtl
pop
ret
jb
mov
or
and
int3
popa
push
inc
adc
inc
push
inc
dec
in
cmp
andps
push
repz
jge
inc
adc
push
ljmp
dec
scas
test
ret
mov
cmp
test
in
mov
cmpsl
fldt
test
mov
mov
inc
cmp
scas
idivb
sub
aaa
scas
cld
jno
mov
or
loop
sbb
pop
mov
aam
dec
dec
mov
outsl
xor
jne
mov
and
jmp
xor
out
outsl
push
inc
shll
mov
or
orb
das
xchg
pushf
imul
adc
inc
ficoms
cmp
inc
ret
pop
and
mul
or
mov
addr16
pop
xor
or
inc
push
pop
inc
pop
push
cmc
sbb
pop
push
inc
jle
stc
or
sub
fcompl
push
decb
sbb
push
inc
push
fsts
sarl
or
or
mov
pop
and
hlt
aas
lret
shlb
pop
dec
pop
fs
adc
push
mov
push
xorl
popa
add
movsl
das
jb
sbb
imul
das
loopne
and
mov
int3
cwtl
vpunpckhdq
hlt
shll
xchg
pop
dec
cmp
stc
inc
pop
sarb
pop
add
add
mov
stc
out
call
pop
mov
push
and
xchg
dec
and
cltd
xchg
mov
cltd
cmc
mov
in
or
stos
fs
pop
es
jmp
fs
mov
xorb
push
das
repnz
aaa
ffreep
outsb
inc
xor
mov
scas
mov
cmc
push
xchg
in
fcom
push
mov
mov
xchg
or
dec
call
push
sub
call
lea
mov
pop
outsb
jo
lods
or
int
clc
push
adc
xchg
pop
push
mov
pop
inc
inc
inc
aaa
xor
jecxz
fisubrl
arpl
stos
add
lock
jl
push
fstpl
cs
pushf
push
and
daa
pop
sub
stc
insb
push
add
mov
xor
and
mov
imul
mov
xchg
mov
xchg
mov
push
pop
mov
shlb
lock
stos
add
push
mov
cmp
filds
adc
mov
ret
push
jns
push
mov
ret
xchg
jnp
inc
imul
loope
jne
movsl
bound
fidivrl
lcall
pop
jecxz
push
push
pop
dec
sub
xor
loope
icebp
stc
and
add
or
mov
into
lcall
jl
push
sub
dec
add
push
mov
mov
notl
push
mov
dec
stos
fbld
xchg
lods
lods
pop
mov
cltd
pusha
mov
push
and
arpl
push
push
stos
cmp
jge
sysenter
jo
lds
add
push
rcrl
std
mov
cmc
pop
fisubl
insl
mov
jo
pop
ss
push
mov
mov
fnsave
js
push
pop
sbb
test
adc
add
cmp
push
lea
and
add
jecxz
or
pop
repnz
test
sub
lret
pop
and
push
pop
xchg
dec
sbbl
dec
inc
enter
adc
les
push
sbb
sbbb
fidivs
xchg
jge
rcll
pop
cld
push
int
popf
sbb
jbe
pop
popf
imul
and
mov
xor
mov
or
ret
in
cmp
insl
dec
pop
inc
icebp
into
cmp
repnz
movl
outsb
ja
xchg
pop
cli
dec
pusha
cmovno
leave
xorl
pop
ja
sub
or
lahf
dec
aas
popa
adc
sbb
pop
addr16
inc
mov
les
sub
into
jecxz
inc
mov
jecxz
and
or
mov
cmp
pusha
xor
push
adc
add
jle
jno
aas
in
int3
int3
mov
les
sbb
cltd
mov
rdpmc
ret
pushf
or
push
mov
push
jb
add
stos
inc
mov
xor
push
rcrl
pop
dec
stc
xchg
cmp
sub
cmp
in
jo
jnp
lock
jg
dec
icebp
pushf
int
jnp
jns
cwtl
cmp
jmp
lods
mov
outsl
xlat
cmpsl
out
push
stc
jno
mov
scas
mov
aam
ret
mov
push
push
mov
mov
dec
or
insb
and
lret
pop
cltd
pusha
push
xlat
sub
mov
jge
arpl
ss
sti
cmc
lcall
and
and
sahf
push
pop
sti
inc
int
enter
or
adc
dec
andb
mov
js
ficoms
cmp
popa
je
xchg
jecxz
add
mov
ljmp
adc
jle
sarl
pop
leave
or
loope
call
les
sbb
dec
in
sub
in
and
jno
inc
scas
jno,pt
cmpsl
mov
lahf
or
xor
rclb
jp
lock
pop
inc
mov
mov
adc
mov
push
sub
ds
dec
xchg
add
xor
enter
mov
aad
add
leave
arpl
loopew
pop
add
sbb
mov
loope
fnstenv
arpl
xor
daa
mov
push
adc
fidivs
add
sbb
cmp
add
jecxz
dec
pop
enter
jmp
sarl
cmpsb
repnz
ret
dec
or
out
add
arpl
adc
mov
push
add
push
insb
or
mov
mov
cmp
jb,pt
mov
imul
jecxz
ss
and
leave
or
imul
outsb
mov
cmp
aad
iret
jg
ljmp
sahf
mov
pop
pop
jl
icebp
iret
cs
ljmp
mov
fstp
sub
loope
stos
orl
jle
pop
push
cwtl
inc
fcmovne
mov
pop
cmpsb
add
add
ljmp
insb
push
aas
repnz
dec
out
gs
sbb
sub
out
cmp
jae
dec
ljmp
push
shl
lret
sbb
xchg
sbb
cmp
jge
push
mov
hlt
bound
sub
aad
push
jno
dec
push
fisttpll
icebp
fwait
pop
sub
add
dec
push
lcall
pop
jne
mov
cmpsl
pop
and
add
pop
icebp
inc
xchg
mov
jnp
fadd
lock
dec
mov
xor
sarb
cmp
push
mov
or
xor
cmp
stos
hlt
mov
mov
inc
jecxz
cli
aas
xchg
cmp
neg
mov
insl
andl
aaa
fs
stos
inc
mov
int
aam
mov
int
pop
in
jnp
or
sbb
dec
daa
enter
repnz
and
push
and
stc
leave
xchg
outsb
iret
mov
mov
push
out
aaa
dec
xlat
stos
sti
adc
icebp
mov
dec
dec
mov
adc
call
pop
xor
es
in
out
mov
mov
mov
pusha
outsb
sub
jnp,pn
push
cmp
fldt
test
lea
xchg
inc
shlb
out
aas
daa
cld
mov
ljmp
dec
or
xorb
insl
dec
stos
test
pop
rorb
mov
mov
or
shll
xor
dec
stos
jl
sbb
mov
cmp
aam
mov
sbb
push
mov
mov
int3
sub
insb
add
popa
adc
aaa
iret
dec
dec
enter
insb
adc
aad
sub
adc
hlt
dec
movsb
fmuls
ljmp
mov
cmpsl
mov
add
xchg
sbb
jns
add
push
push
push
xchg
lods
aad
pop
imul
adc
int
andb
out
sbb
cmc
cwtl
test
mov
ds
inc
fcoms
mov
inc
outsb
test
xchg
shrb
sbb
mov
mov
push
lret
ret
dec
in
xchg
test
test
pusha
adc
int3
add
out
push
lock
mov
xchg
pop
mov
ret
sbbb
shlb
leave
and
shlb
stos
lret
push
fwait
or
scas
mov
or
cld
sbbl
aam
test
out
pusha
push
in
mov
mov
call
push
add
push
lods
xchg
sub
adc
fldl2t
cmp
xchg
roll
data16
xchg
and
notb
lods
test
and
int3
bound
stos
add
and
mov
loopne
xor
lahf
inc
mov
bound
mov
cli
loopne
cvtps2pi
xor
xor
fwait
icebp
sarl
sti
dec
sbb
inc
mov
test
mov
scas
mov
push
in
push
jle
fstl
xchg
mov
or
adc
sbb
imul
push
jp
out
pop
jmp
sub
xor
loop
cmp
cld
movsb
cmpsb
or
jne
dec
fcmovnbe
popa
xor
movsb
fcomp
xchg
lcall
lret
jb
imul
or
out
dec
mov
adc
mov
push
sahf
mov
cmp
out
lcall
or
sub
aad
jmp
xchg
push
mov
xchg
adc
dec
insb
data16
cmp
fs
repnz
inc
mov
jns
mov
dec
insb
cmpsl
sbb
popa
movsl
push
std
jecxz
jmp
xchg
cmp
popa
push
dec
mov
pop
rclb
call
sbb
mov
into
aas
pop
inc
fstp
push
cmpsl
imul
mov
scas
repz
lock
or
cmpsl
lcall
xor
testb
repnz
in
xchg
decl
iret
xchg
mov
pop
imul
xor
lahf
mov
mov
add
fmull
addl
icebp
sub
mov
xchg
sbb
xchg
push
dec
mov
pop
shlb
and
add
pop
push
in
loopne
mov
movsb
mov
mov
pop
mov
adc
stos
push
pop
nop
daa
xor
data16
pop
xchg
sbb
xchg
sbb
lods
outsl
xchg
pop
ljmp
sub
call
cld
sbbl
push
jb
add
lods
mov
nop
inc
in
and
pushw
jno
daa
jmp
pop
outsl
jae
xchg
push
into
fimull
mov
add
jmp
jmp
sbbl
push
mov
xchg
incl
mov
add
dec
mov
loopne
push
imul
push
inc
lea
in
push
lret
mov
jecxz
cld
mov
dec
iret
imul
and
mov
mov
adc
icebp
or
dec
loope
add
and
mov
xchg
push
test
movsb
sbb
mov
aad
fwait
jp
mov
adc
movsl
sahf
movsl
inc
pop
in
jp
dec
sub
andb
nop
enter
push
in
loop
loop
les
jle
dec
push
sub
ret
mov
jnp
and
mov
sahf
fdivrs
out
fcompl
aam
ja
jle
fucomp
mov
cs
and
push
ss
stos
rcll
in
aad
repnz
xchg
fbld
pop
bound
pop
fwait
in
mov
ffreep
mov
addr16
xchg
add
and
cli
dec
mov
shr
ror
inc
jb
mov
arpl
sub
jge
push
mov
xchg
xlat
xlat
out
call
repz
jnp
call
and
iret
add
mov
xor
add
cwtl
or
pop
icebp
add
fs
stos
hlt
mov
fstpl
das
call
sbb
push
jle
nop
sub
lds
inc
dec
notl
jbe
dec
push
push
in
sahf
test
loop
push
sbb
mov
sbb
cmpsl
push
sub
mov
add
test
ljmp
pop
out
mov
add
cld
sub
sub
dec
inc
ss
and
pop
arpl
sub
and
cmp
cmp
aaa
jne
popa
adc
cs
test
push
sub
std
je
cmp
mov
es
cmpsl
add
jg
test
movsb
in
adc
hlt
jns
jmp
je
mov
xor
mov
lea
adc
jecxz
fsubr
xchg
mov
cmp
mov
lret
mov
sub
mov
jns
xchg
push
ja
or
and
insl
push
and
mov
movsb
sbb
adc
mov
xchg
test
jmp
jmp
or
popa
adc
insb
in
xchg
pop
addr16
ds
lds
iret
or
mov
ljmp
lcall
movsb
push
push
cmp
jmp
pushf
pop
dec
aaa
push
mov
jo
daa
sti
mov
sub
or
hlt
sti
or
dec
imul
sub
jae
dec
aam
repz
cmp
inc
push
rol
sbb
xor
dec
mov
and
xchg
loop
rclb
jns
sti
inc
xor
sub
adc
push
idivl
sbb
flds
hlt
jp
mov
xchg
rorl
cmp
sarb
sahf
int
sbb
xor
dec
scas
xchg
jae
test
jo
pop
lcall
pop
cmpsl
adc
inc
call
cmp
hlt
stos
jno
push
bound
int3
js
jg
cmp
mov
mov
lock
cwtl
xor
in
icebp
dec
mov
shrl
icebp
sub
ss
jg
mov
and
cmp
cwtl
and
imul
es
test
cltd
adc
cmp
out
pop
lcall
lcall
fcmovnbe
mov
repz
adc
les
nop
adc
rcll
sbb
aad
push
lods
adc
jle,pn
dec
incb
xchg
cli
inc
shll
dec
sbb
cltd
loope
scas
mov
push
insb
jg
xchg
dec
out
gs
outsb
arpl
mov
mov
mov
mov
outsb
gs
out
push
xchg
movsl
into
ret
ja
outsl
sbb
dec
imul
dec
cmpsb
mov
scas
dec
and
icebp
out
jnp
xchg
add
iretw
test
jmp
jmp
jno
call
pop
sahf
jmp
mov
andl
je
andl
push
xor
inc
inc
jmp
xchg
jns
xor
add
rcr
test
aam
sbb
xor
cmp
lods
les
mov
dec
lock
incb
cmp
mov
jle
jp
fwait
outsl
jo
sub
leave
inc
in
sahf
leave
mov
push
jle
sub
lret
or
or
or
jno
dec
push
push
push
jl,pt
push
mov
sti
mov
cmpsb
movsb
jnp
xor
sbb
sub
ret
cs
es
inc
in
mov
jno
or
mov
cmc
movl
in
es
pop
xor
pop
sbb
sahf
and
pushf
xor
mov
push
bnd
ficomps
or
orb
dec
mov
mov
gs
cmpsl
inc
fsubl
loop
mov
fsubrl
fmul
mov
lret
daa
leave
push
std
fwait
push
push
lock
mov
sub
push
mov
mov
add
pop
cmp
cmp
inc
pop
stc
clc
sbb
jle
lods
mov
cmpsl
xchg
rcrl
fdivs
mov
cmpsl
or
jns
es
andb
xor
sub
cmc
mov
pusha
leave
jbe
mov
cwtl
rol
fldln2
imulb
ret
aam
out
pushf
loop
jne
lds
outsl
addr16
xor
test
inc
push
sbb
shll
addr16
loope
cwtl
inc
out
and
jmp
and
in
push
mov
mov
add
xchg
dec
add
mov
cltd
add
mov
stc
adc
imulb
repz
mov
cltd
fildl
add
das
out
imul
out
out
dec
jb
pop
repz
sbb
dec
xchg
movl
push
ss
add
lcall
dec
movsl
lds
inc
call
mov
repnz
xchg
lret
jle
sub
test
push
jg
pop
xchg
sbb
cmp
xor
outsl
add
xchg
call
nop
jle
lret
in
xchg
sub
dec
cmp
sbb
not
out
subl
or
imul
or
clc
xchg
mov
adc
sbb
mov
jle
pusha
mov
jae
pushf
push
sbb
scas
xchg
pop
push
aaa
push
test
lods
movsb
cmpsl
aas
cmpsb
mov
aam
mov
sbb
mov
mov
lret
add
push
sub
in
push
jl
insb
sti
jp
mov
clc
sbb
jnp
sbb
or
cld
ds
sbb
mov
out
nop
filds
enter
out
add
push
clc
dec
mov
push
lods
or
movsb
add
mov
sub
xchg
mov
inc
xchg
ficompl
xorb
push
xor
pop
xor
push
sbb
dec
inc
in
cmp
mov
pop
jns
rcl
xchg
dec
imul
ja
hlt
fucomip
inc
and
and
enter
std
push
frstor
pop
push
sub
outsl
call
neg
xor
inc
push
pop
xchg
lods
dec
mov
xchg
icebp
and
fildl
fs
rolb
lret
sahf
data16
ret
mov
sbb
xchg
and
cli
inc
pop
aam
sbb
es
jg
xchg
rcrb
xor
pop
push
jno
cmp
xor
mov
in
sbb
xor
mov
pop
lret
sbb
and
pop
pushf
pop
jne
xlat
enter
xchg
push
jo
insl
sbb
lret
cmpsl
scas
es
inc
sbb
push
xor
push
or
pop
cmc
jmp
mov
push
sbb
loopne
fcomi
xchg
lea
jg
stos
js
fs
imull
idiv
fisubrl
hlt
xchg
mov
mov
ja
rcl
push
jl
clc
jne
dec
insb
or
loopne
das
in
and
jp
mov
mov
xor
xchg
push
pop
mov
lods
das
into
scas
jp
or
cmc
mov
sbb
inc
cmp
pop
mov
daa
movsb
push
divb
xchg
push
sbb
xchg
insl
sub
insb
icebp
scas
call
ficompl
lods
loopne
add
es
xchg
loop
or
and
mov
cmp
xchg
jns
mov
lcall
fldt
in
and
icebp
and
test
ds
das
inc
sbb
xchg
fwait
je
or
shr
mov
jp
loop
sub
fidivrl
xor
jg
and
sar
loopne
outsl
fisttps
xchg
and
ret
cmpsl
stos
imul
sarb
gs
pop
push
cmc
and
jb
or
out
push
xchg
icebp
stc
jg
mov
sbbb
call
in
insl
inc
movsl
rcrl
xor
cmpsl
out
call
stos
mov
out
inc
nop
xor
or
cmpl
loope
xor
push
stc
out
inc
loopne
adc
cli
inc
pop
mov
mov
jge
movl
push
lods
add
mov
or
adc
in
les
call
and
cmc
lcall
call
pop
repnz
loopne
lock
jp
ds
dec
jge,pn
push
pop
fs
mov
and
xor
call
mov
mov
cmc
inc
fcom
sbb
mov
les
mov
hlt
xchg
xor
mov
lahf
xchg
icebp
or
mov
add
fs
add
and
adc
not
subl
pop
xchg
lods
add
call
add
inc
lretw
mov
push
sbbl
jecxz
jl
push
jns
test
ja
sub
imul
sbb
ss
and
mov
repz
cs
adc
cwtl
fmul
outsb
je
pop
aam
test
and
jp
jecxz
out
sbb
dec
shl
and
jns
xchg
adc
push
popa
jecxz
inc
sub
jle
call
sub
cmpl
jb
inc
aaa
mov
inc
out
sahf
fistl
jns
pop
xchg
add
push
shl
cmp
pop
jne
lret
and
inc
sub
rcll
add
push
xchg
into
andb
test
or
pop
xor
cmp
jbe
mov
popf
jno
lea
add
loopne
sub
push
cmpsb
mov
inc
insl
cmpsl
outsb
mov
cwtl
addr16
push
cmpsb
or
add
shll
dec
cmc
mov
mov
dec
mov
lahf
int
aad
nop
fldl
xchg
insl
int3
or
jo
ficompl
aas
mov
pop
bound
lds
fbld
mov
cwtl
dec
push
xchg
or
and
test
cmp
out
and
out
lcall
xchg
push
out
cmpl
sbb
lret
movq
or
adcb
sahf
loope
imul
negl
pop
icebp
sub
mov
insb
stos
cmp
int
mov
fistpl
shlb
mov
mov
lea
out
fs
jp
loopne
lods
sub
inc
test
push
dec
cmpsl
mov
cmc
std
dec
fwait
push
clc
jle
or
sub
ret
inc
add
aaa
rcr
mov
pop
int3
and
dec
nop
test
pop
and
lahf
jp
ljmp
mov
pop
test
mov
jne
sar
out
mov
xor
or
jbe
jno
sub
mov
jp
dec
sbb
xchg
dec
adc
leave
sub
mov
fdivr
mov
xchg
pushf
sti
loopne
adc
daa
call
out
or
mov
pop
iret
adc
and
and
xchg
xchg
ja
daa
or
lock
not
xchg
mov
mov
rorl
fwait
arpl
data16
xlat
aas
mov
movsl
dec
push
mov
sti
cmpsl
pusha
idivl
lret
jg
pop
add
or
xor
lea
jmp
push
jbe
leave
and
je
and
xor
aas
push
faddp
add
xchg
enter
into
mov
ret
mov
sahf
popf
aaa
mov
leave
lcall
call
enter
add
jnp
dec
stos
repnz
icebp
push
dec
ss
inc
out
cmc
insl
aas
cmp
stos
jecxz
mov
ja
mov
lock
ror
jnp
fcompl
dec
add
flds
pusha
inc
in
mov
sti
inc
adc
adc
push
fidivrs
fcompl
xor
inc
or
pop
andb
or
xor
fs
sbb
call
xchg
data16
out
jae
jne
inc
add
or
cmp
xchg
cmp
jnp
cmp
push
mov
sbb
mov
mov
and
jbe
fiadds
stc
mov
jecxz
subl
dec
inc
out
dec
push
movsb
inc
ret
mov
lock
push
xor
into
int
pop
mov
mov
lds
test
pop
test
or
xchg
imul
and
push
lret
mov
pop
pushf
sahf
and
adc
or
leave
iret
xlat
xchg
mov
cmp
call
adc
inc
insl
xchg
cmp
es
fldl
in
sub
inc
xor
mov
mov
aad
or
setle
lods
xor
ret
shrl
and
loope
mov
push
xor
fstl
push
and
mov
int3
and
sbb
add
ss
test
popf
dec
jbe
pushf
push
pop
lret
sub
mov
and
sbbb
imul
loopne
xor
stc
hlt
je
sbb
xchg
aaa
aad
mov
sub
xor
cmp
lahf
cmpsb
rolb
add
lahf
mov
inc
stc
push
cmp
mov
and
push
and
sbb
gs
xor
mov
xchg
sbb
cmp
mov
push
adc
adc
lods
xor
ds
leave
xor
aam
stc
jmp
pop
jp
imul
lock
sub
jne
xchg
in
int3
mov
adc
aaa
stc
cwtl
xchg
pop
in
sbb
push
jge
xchg
sub
inc
ret
loop
mov
into
nop
dec
push
dec
sbb
call
rcl
dec
hlt
sbb
mov
dec
add
pop
lret
jo
or
jbe
cli
ret
adc
add
jecxz
addl
add
inc
jno
scas
xor
stos
mov
pop
pushf
jnp
xchg
cmp
jns
fs
jmp
inc
mov
add
sub
scas
inc
loope
jbe
rcll
dec
adcl
mov
add
testl
aad
inc
lret
es
in
lock
inc
jle
fadds
push
or
xor
insl
sub
test
dec
insl
inc
pop
mov
lret
jp
int3
pop
hlt
jmp
dec
sub
sbb
enter
int
es
sahf
mov
mov
sub
xchg
aad
jge
lods
cmp
jp
test
lret
dec
mov
shll
lret
cmc
and
pusha
js
inc
sub
fidivrl
adc
nop
jecxz
jecxz
push
loope
dec
pop
pop
sub
mov
mov
xor
mov
shll
in
or
in
adc
pop
mov
mov
inc
out
mov
sbb
subb
out
cmp
into
or
sbb
mov
xchg
push
jns
mov
dec
jle
mov
xlat
iret
scas
out
sub
xchg
test
cwtl
dec
or
push
outsb
stos
popf
add
xor
adc
mov
sub
sub
pushl
repnz
adc
out
push
lods
and
mov
fisubs
into
in
xlat
cmp
mov
sbb
mov
int
jg,pt
imul
adc
fldenv
call
mov
jmp
lods
pop
xchg
rolb
dec
jnp
pop
push
incb
lock
mov
sbb
pop
sub
mov
or
in
insl
mov
add
pop
fisubl
xchg
jmp
xor
fisttpl
pushf
pusha
aad
xor
fistl
cmc
in
xor
outsl
stos
mov
sub
imul
push
cmp
push
mov
sbb
andb
cmp
mov
cli
push
outsl
jg
bound
mov
rcrb
stos
ror
push
xchg
shr
scas
stos
clc
lahf
xchg
fs
xor
lods
sbb
in
dec
pop
pop
jl
daa
xlat
push
and
pushf
rcrl
cmp
imul
cmpsl
xchg
in
inc
push
xor
jmp
and
push
scas
lods
jle
data16
sub
out
pop
cs
adc
or
push
cmpsl
or
pop
js
fimull
adc
out
dec
sbb
add
dec
addr16
ss
ret
sbb
add
cmp
test
and
mov
sbb
in
and
loopne
gs
mov
jl
mov
cmc
xor
jle
pop
and
pop
fldenv
jp
in
dec
rcll
call
inc
ret
mov
ret
loopne
xchg
lahf
xchg
jg
mov
mov
mov
mov
lock
das
sub
cmp
aaa
fisubrs
in
adc
fistl
out
jb
jne
lock
repnz
popf
mov
movsl
sarb
sbb
and
inc
loop
jle
lock
xchg
jno
sbb
clc
ljmp
ja
cmc
leave
das
or
out
lods
xchg
out
push
sbb
push
pop
mov
push
pop
je
out
mov
adc
sbb
cmpsb
fildl
mov
rcll
data16
add
inc
mov
pop
idivl
mov
int
addr16
dec
cmpsl
sub
jno
data16
insb
xor
sbb
mov
jl
mov
mov
jge
fwait
xchg
aam
insb
adc
adc
imul
lock
cwtl
clc
loope
dec
or
gs
mov
cld
aad
or
cmp
mov
push
adc
ret
mov
test
cmpsb
cmpsb
push
test
jmp
push
dec
scas
sbb
int
sar
mov
xchg
sahf
cwtl
mov
les
shlb
jle
add
test
fstps
inc
outsb
repnz
clc
mov
into
stos
in
jmp
lret
cmp
jne
sub
mov
int3
dec
xor
mov
xchg
ret
cli
test
popa
test
ds
push
pop
and
sbb
loope
inc
push
out
push
test
cmp
cmp
pop
pop
sub
jae
and
cmp
js
in
sbb
ror
inc
mov
ret
pop
pushf
movsl
mov
inc
mov
in
je
sahf
xor
movsl
adc
dec
imul
xor
or
jbe
jle
out
imul
add
mov
and
leave
cmc
cmpb
push
cs
adc
insl
mov
lods
insb
pop
jnp
mov
ficompl
lahf
mov
rcrb
xchg
bound
cli
lods
adc
shlb
insl
pop
adc
nop
sub
iret
push
jne
mov
sbb
les
les
push
cmp
popa
leave
sbb
aaa
test
or
shl
pop
xlat
dec
xchg
or
inc
lcall
sarl
push
sub
dec
mov
dec
sbbl
enter
mov
jo
sahf
ret
rorl
and
movb
ja
pushf
dec
push
mov
ds
pop
call
fwait
and
dec
lea
add
xchg
aam
repnz
xchg
jno
add
and
xchg
add
sbb
addr16
imulb
jmp
data16
cmp
inc
addr16
mov
nop
sbb
cltd
push
adc
ret
dec
push
mov
adc
arpl
sar
push
pop
pop
push
push
leave
inc
adc
ret
sbb
mov
cli
sbb
jne
and
pop
lea
rcrl
leave
stos
pop
into
sub
insb
push
mov
cmpsb
sub
incl
loope
sbb
leave
iret
adc
sbb
fcmovbe
sbb
jb
cmp
pushf
dec
or
ljmp
pop
pop
mov
mov
pop
pop
mov
aas
popf
loopne
jno
inc
xchg
sbb
add
pop
push
mov
pop
daa
adc
lds
xor
push
rcrb
cwtl
push
cld
in
int3
inc
stos
js
fidivs
in
lahf
pop
lcall
adc
adc
dec
filds
loopne
add
stos
stc
sub
imul
daa
jo
xor
out
sarl
mov
enter
push
push
fistps
cmpl
dec
fwait
rclb
mov
shrl
andl
sbb
jmp
insl
jl
jae
lea
sbb
outsb
enter
out
or
in
lods
xbegin
loop
jo
push
add
lret
mov
les
fistpll
imul
test
xchg
enter
ret
cmp
mov
insb
pop
cmp
or
mov
pop
rcrl
mov
cmc
into
aad
orl
in
mov
enter
hlt
aas
add
dec
sub
dec
lods
incb
cwtl
fwait
test
cltd
dec
push
jns
add
jne
mov
pop
inc
sarl
mov
repz
in
int3
mov
sbb
in
ss
dec
cmpsb
fistl
aas
cmp
clc
mov
test
ljmp
jecxz
gs
jo
jb
fisttpl
shll
aas
fimuls
mov
push
mov
sahf
scas
and
jne
sbb
pop
dec
nop
call
lock
push
xlat
mov
and
loop
mov
push
ret
push
xor
add
test
inc
sbb
pop
and
cwtl
jno
push
call
notb
je
pavgb
call
and
jmp
jb
jae
cs
sbb
outsb
lret
push
mov
add
push
and
add
loope
and
test
push
fldl
mov
mov
mov
addr16
test
mov
shlb
shll
sub
int3
push
mov
nop
and
pushf
xchg
dec
pushf
pop
and
fnsave
test
int3
js
jo
sti
je
stos
test
add
ja
inc
cmpb
scas
inc
lds
sti
sub
fisttps
mov
add
ret
push
add
sbb
push
sti
dec
dec
push
pushf
mov
cmp
pop
fwait
and
not
or
fsts
mov
sti
cli
pop
push
mov
ds
scas
push
sbbl
adc
sub
mov
adc
push
dec
xchg
jb
test
inc
insb
enter
jno
push
sub
fdivs
outsl
mov
add
xor
jg
sbb
in
push
call
stos
sbb
fs
push
adcb
int
out
pushf
jecxz
mov
pcmpgtd
scas
jg
mov
dec
xchg
cmpsl
pop
imul
cwtl
clc
adc
repz
fidivl
xor
adc
and
hlt
mov
inc
lods
aam
add
push
cli
ret
aam
into
jae
loop
jnp
adc
out
adc
cmp
push
out
cld
stc
shll
adc
in
js
test
push
push
cwtl
sbb
push
lret
mov
test
mov
insb
call
shrb
out
outsl
push
push
xchg
stc
lods
mov
mov
scas
mov
pop
push
jmp
pop
cmc
gs
sbb
les
aam
mov
dec
std
jb
hlt
movsl
imul
cld
incl
les
pop
imul
adc
dec
inc
pop
adc
jg
cli
cmp
mov
mov
xchg
repz
sbb
pop
mov
fldt
mov
fcmovnbe
in
fadds
dec
ja
divb
pop
pop
and
sbb
iret
cmc
add
and
inc
push
or
xor
lret
and
fists
push
stos
jmp
clc
add
adc
outsb
in
js
lods
pop
push
sub
mov
jp
enter
into
js
sbb
cld
jns
pop
jns
pop
lahf
lahf
inc
inc
rclb
in
hlt
cmpb
or
and
xchg
fbstp
or
call
xor
loop
inc
mov
pop
sti
not
mov
ss
and
jecxz
repz
ror
pop
inc
jns
mov
out
ficompl
inc
ljmp
inc
data16
mov
pop
stos
add
sbb
adc
sbb
push
cltd
mov
fnsave
push
jge
cs
xlat
push
xor
in
pop
xchg
lock
cmp
lods
pusha
cwtl
jbe
xchg
mov
sub
loop
aam
push
fs
insb
insb
iret
sbb
aad
lahf
push
sahf
xor
lret
aam
add
int
ss
sarl
lods
int
pop
sub
dec
in
test
xor
cli
cmp
push
jno
popf
gs
sub
xchg
mov
rcll
mov
jae
pusha
and
sub
inc
in
sub
cmp
dec
lds
pop
and
cmp
out
mov
mov
das
bnd
inc
cmpsl
cmp
fs
sub
insl
ret
aaa
pop
and
mov
mov
jp
dec
inc
aaa
jo
inc
mov
jp
icebp
js
int3
and
aaa
fdiv
push
daa
jae
subl
outsl
into
push
loop
sub
out
shr
arpl
xchg
inc
pavgb
out
repz
lcall
mov
pop
mov
aad
fstpl
iret
cltd
add
xchg
inc
ss
xlat
push
repz
adc
push
mov
cmp
daa
movsb
pop
push
imul
adc
iret
sti
inc
inc
outsl
jae
pop
and
scas
orb
mov
pop
sbb
pop
pop
jecxz
adc
sub
mov
sti
cmpsl
xchg
dec
loope
in
loopne
jmp
mov
repnz
cmp
mov
sub
or
inc
aas
cmp
movsb
loope
mov
popf
inc
push
iret
xlat
sbb
repnz
xchg
and
sub
pop
jge
int3
stc
jg
dec
cwtl
std
mov
lds
sub
ror
mov
jg
pusha
mov
inc
mov
cmp
mov
pop
mov
arpl
bound
inc
adc
outsl
cmp
cltd
push
hlt
xchg
mov
pusha
cs
mov
push
jp
jbe
jo
jge
or
xchg
xor
xchg
xchg
fisubs
fst
mov
aad
rcll
jo
pusha
shl
dec
lret
cli
ss
or
in
adc
mov
test
mov
lods
aad
sarl
mov
enter
or
shl
enter
push
inc
test
gs
xor
fmull
cmp
inc
out
xor
and
push
add
inc
test
jno
in
push
adc
test
cli
dec
sbb
mov
add
push
ljmp
ret
jns
inc
aam
inc
xchg
add
lret
out
cs
sbb
ret
sbb
movsb
cmp
cmp
imul
shrl
cmp
mov
jle
fdivl
in
jmp
test
add
scas
insb
leave
insb
int3
mov
mov
cmp
out
mov
leave
and
incl
adc
outsl
into
movsb
daa
pop
movsl
cwtl
sub
xchg
paddsb
xor
in
or
or
xchg
add
or
push
push
jg
mov
pop
in
xchg
dec
xchg
dec
xlat
bound
cmp
mov
int
or
jb
mov
rcrl
push
sti
mov
pminsw
push
loop
dec
dec
cmp
mov
dec
ja
lahf
mulb
and
cld
mov
mov
cmp
sbb
das
xor
pop
sbb
int3
add
jl
jne
cmp
add
in
mov
ljmp
or
bound
out
adc
mov
out
mov
jbe
cmpsl
push
dec
das
dec
dec
ret
scas
push
add
leave
fnstsw
push
out
scas
imul
loopne
pop
rcrl
pop
cmp
add
cld
imul
insb
and
cli
push
movsb
xor
rolb
mov
jp
cmp
cmp
in
jp
push
xorb
inc
shrb
movsl
add
aam
sahf
mov
testl
push
or
int3
inc
jecxz
es
fcoms
pop
cmc
xor
je
mov
or
dec
adc
xlat
mov
sbb
cmp
push
movsl
in
xor
dec
sbb
sbb
outsb
in
in
mov
fsubrl
pop
xchg
stos
js
addr16
xchg
mov
imul
inc
mov
jmp
xchg
cmp
jge
loop
std
inc
dec
inc
sbb
inc
adc
stos
mov
add
jne
push
sar
mov
push
mov
pop
mov
faddl
pop
sub
sub
cld
push
test
lcall
out
sbb
mov
test
dec
inc
or
icebp
cmc
jle
negb
xchg
clc
outsl
adc
or
cmc
test
jp
lea
insl
pop
add
js
mov
push
rclb
pusha
xor
mov
pop
rclb
cs
sub
push
and
dec
insl
clc
pop
push
dec
mov
fdivl
xor
or
lret
lret
jmp
sub
stc
aas
gs
push
xor
mov
je
and
xor
and
fs
pop
and
cmp
fwait
inc
lcall
xchg
hlt
mov
mov
mov
and
or
invd
cmp
insb
fs
xor
in
sbb
rorb
enter
pusha
jmp
scas
xor
pop
jg
mov
lock
cwtl
mov
cmp
mov
mov
or
in
mov
push
xchg
int3
and
cmp
lods
pop
dec
lret
orb
xchg
dec
mov
cmp
jne
mov
cmp
out
mov
sub
lods
stos
or
xchg
mov
inc
mov
stos
xor
out
mov
test
push
add
jle
jnp
xchg
stos
mov
outsl
lods
hlt
jnp
or
jp
insl
loope
cmp
shll
inc
out
insb
je
lods
mov
aaa
ljmp
sub
dec
jns
mov
jge
fisttpll
and
pop
or
out
push
call
xchg
int3
scas
push
jg
or
push
insb
pop
and
jno
mov
xor
pop
insl
imul
shll
into
jnp
add
mov
lods
mov
mov
pop
loop
lahf
test
lahf
addr16
adc
push
or
jp
or
push
cwtl
call
mov
cmpsl
ds
lret
and
mov
nop
mov
iret
add
into
push
aad
xchg
in
fadd
in
xor
fcomps
xchg
enter
out
adc
movups
movups
and
scas
fistl
into
cwtl
sbb
xor
enter
add
pop
clc
stos
xchg
push
shll
test
mov
xchg
jns
inc
adc
mov
dec
inc
enter
aas
xchg
cwtl
fisubl
rcll
cs
sub
test
sub
cmc
cmp
xor
push
or
mov
inc
pop
push
pop
or
pusha
or
imul
in
ss
pusha
and
nop
test
mov
pop
jne
jae
inc
sub
in
fwait
dec
and
adc
jle
xchg
push
and
sbb
or
jge
xchg
cwtl
push
fcmovnbe
and
xor
cmc
pop
ljmp
pop
fldcw
bound
jbe
adcl
pop
mov
test
dec
or
sub
cmpsb
aaa
movsb
sti
addl
push
pop
fsubrs
cmp
mov
push
fs
insl
mov
aam
lock
xchg
lret
jns
sub
mov
jle
sub
or
inc
adc
inc
div
hlt
out
outsb
std
or
int
jp
adc
cwtl
les
fcmovne
mov
dec
es
jnp
fwait
je
test
push
es
xchg
add
pop
test
mov
decb
pop
push
xor
lock
or
mov
mov
fdivs
movl
jp
loope
add
inc
out
sub
jb
orb
andb
or
insb
jge
pushf
imul
outsb
cmpsb
inc
pop
xchg
push
jae
addr16
sub
mov
sbb
sarl
shr
and
cld
jl
orb
ss
js
mov
les
and
arpl
outsl
xor
aad
addb
add
xor
xchg
enter
call
outsl
jge
push
bound
ret
inc
cmp
sub
xchg
js
xor
addb
test
out
or
inc
cmpsb
les
add
loop
cmp
aas
leave
add
popa
ds
adc
and
mov
cmp
dec
cmp
mov
clc
loop
roll
mov
sarl
push
adc
aad
ret
enter
mov
sub
shrb
push
push
sar
push
xchg
fucomip
jecxz
ja
adc
adc
xchg
or
sti
xor
scas
xor
fsubs
xchg
rorl
jae
insl
mov
add
into
scas
sarb
sub
jle
and
hlt
mov
test
int
addr16
mov
fisttpl
cmp
hlt
mov
cli
cli
cmp
xlat
fs
mov
arpl
jl
fadds
or
icebp
mov
lea
xchg
int3
lock
mov
rcrb
xor
lahf
push
mov
xchg
or
sbb
pop
push
sub
mov
xor
lock
mov
or
sahf
xchg
popf
jbe
nop
in
lahf
push
cmpsb
mov
push
fnstenv
sub
cmpsb
call
cmp
iret
cmpsb
icebp
xorl
jo
aaa
in
and
xlat
jno
daa
cmpsl
cld
dec
add
out
dec
sub
clc
mov
xchg
adc
push
orb
pop
dec
out
add
and
or
lods
jne
mov
or
adc
je
mov
pusha
mov
sub
adc
cli
fldt
adc
mov
adc
add
add
mov
xor
lcall
daa
mov
repz
addl
inc
out
outsl
rcrl
or
xor
je
sub
out
cmp
push
cmp
mov
shll
stos
cld
pop
cmp
xor
lods
fidivrs
mov
inc
add
jae
lea
iret
xlat
mov
mov
sahf
cmp
fdivrl
or
imul
out
in
out
cld
pop
push
push
cmovbe
add
into
push
mov
mov
push
loopne
and
leave
incb
bound
shll
inc
jecxz
xchg
loop
mov
jge
mov
xor
clc
cmp
pushl
scas
hlt
scas
xchg
lds
push
outsl
xor
loop
cld
cmp
movsl
pop
lcall
cmp
cmpsb
iret
ds
es
adc
xor
mov
cmpsb
stc
in
mov
push
inc
push
lret
dec
xor
and
pop
adc
ljmp
dec
lods
inc
les
sbb
mov
dec
cmpsl
outsb
mov
lods
jbe
jg
and
add
or
or
aas
adc
imul
lock
xchg
push
movsl
out
bound
dec
shld
ds
cmp
pop
pop
aas
fiadds
or
stos
out
iret
xor
jl
push
sar
xchg
fdivl
xchg
push
in
cmpsw
leave
xchg
gs
mov
push
xchg
mov
sub
xor
outsl
cmp
in
pop
pop
xor
mov
call
mov
jnp
insb
xchg
and
sbb
int3
subl
push
fwait
jo
inc
sub
dec
sub
test
sarb
add
lods
cs
das
pop
stc
cmpb
xchg
or
jp
into
cli
xchg
fisubl
scas
fldl
shrl
jp
lahf
js
cmpsb
mov
stc
sbb
xchg
lret
call
sti
int
add
cmp
mov
inc
popf
xor
je
mov
xlat
xlat
cmpsb
pop
mov
pushf
pusha
cmp
jecxz
cmp
and
imul
or
aaa
out
pop
addr16
pop
xchg
in
mov
ret
xor
fwait
and
ss
ds
push
or
jle
add
sti
mov
hlt
int3
imul
pusha
mov
push
mov
hlt
je
bound
xchg
mov
mov
pop
inc
xchg
or
stos
fcmovb
or
adc
dec
fwait
insb
adc
dec
xor
popa
xor
gs
mov
inc
or
sub
data16
test
nop
inc
icebp
call
adc
sbb
test
sub
push
cwtl
movsl
int3
movsb
sub
jg
push
enter
cli
adc
mov
mov
adc
mov
ds
imul
pop
int3
out
je
mov
aas
mov
mov
jecxz
mov
add
fsubr
sub
mov
adc
jae
mov
mov
data16
scas
stos
mov
pop
lahf
testb
jge
adc
dec
int
loopne
divl
scas
mov
pusha
jo
lahf
subl
inc
jge
xlat
cmp
pop
es
aas
jge
add
inc
sbb
loope
pop
or
sbb
leave
rcl
cltd
xor
sahf
mov
ds
sub
lahf
mov
gs
addr16
test
das
push
and
call
sarb
dec
sub
push
sub
and
jle
aad
repnz
je
xchg
mov
mov
pop
jle
cmp
jge
pop
movsb
pop
nop
in
or
mov
dec
cltd
adc
mov
sarb
sbb
out
jns
xlat
cwtl
xor
rolb
repnz
les
jge
adcl
xchg
outsl
mov
fsts
sbb
aad
mov
out
shr
sahf
cli
dec
adc
sub
enter
push
or
pop
aam
add
fwait
outsb
enter
mov
add
lahf
push
jl
jae
pop
mov
enter
je
int
insl
lods
pop
hlt
inc
or
xchg
add
int3
fimuls
mov
dec
gs
sti
fs
idiv
popf
mov
adc
repz
addl
stc
iret
and
int
stos
inc
ja
add
or
jge
mov
int
ljmp
add
xor
call
or
lea
out
movsl
inc
into
lods
mov
dec
mov
mov
into
jg
scas
lret
jnp
fsubs
push
jg
aad
mov
cmp
push
mov
iret
adc
adc
dec
scas
out
inc
inc
jle
adc
mov
call
cmp
stc
mov
mov
lea
in
ret
test
cmp
icebp
adc
inc
daa
xor
push
xor
inc
iret
int
in
adc
fdivr
pop
stc
mov
into
xchg
in
movsl
xchg
jb
je
lock
testl
mov
sti
inc
insl
js
ds
sbb
sub
movsb
sbb
in
adc
sti
adc
fwait
or
stos
icebp
decb
frstor
fisubl
stos
cs
dec
outsb
inc
xchg
movsb
ficompl
sbb
fwait
bound
les
in
mov
pop
xchg
or
call
jmp
adc
sti
ljmp
cltd
jns
fisttpll
pop
sbb
cmp
stos
cli
rclb
mov
pop
fidivrs
mov
lcall
cmovne
enter
cmpsl
rclb
xor
movsl
out
mov
gs
fsubs
movsb
js
enter
imul
ret
adc
ret
in
push
mov
das
xchg
mov
or
mov
das
add
adc
push
fisubl
test
rorl
xor
out
pop
push
mov
imul
or
mov
addr16
rolb
push
dec
fcmovu
cmp
mov
mov
sub
sbb
adc
icebp
repz
cltd
arpl
test
cwtl
or
pop
inc
loope
out
inc
fcmovnb
leave
stc
pop
jnp
jl
es
and
aad
and
and
adc
pushf
dec
push
popf
mov
cmp
cmpsl
inc
xchg
sbb
test
pop
ds
push
adc
lea
cltd
jp
clc
pushf
loopne
xchg
push
data16
jns
mov
lods
cmpsl
outsb
sub
xor
pop
sarl
daa
clc
leave
jbe
mov
and
xor
movsb
ja
push
jbe
fadd
mov
imull
cmp
mov
test
pusha
mov
sbb
xor
jns
dec
push
cmp
and
mov
fsubl
sbb
xor
fadds
mov
in
sahf
mov
stos
pop
add
xchg
add
outsb
sub
stc
outsl
loope
in
mov
pop
mov
ret
cmpsl
jnp
and
fcoml
xor
lds
das
test
lret
orb
fwait
or
insb
xchg
dec
stos
addr16
xchg
lock
ret
icebp
hlt
cwtl
xor
aas
mov
inc
cmp
pop
test
inc
push
lds
hlt
xchg
shlb
stos
jg
xor
xchg
int
pusha
or
loope
inc
xor
int
cwtl
jg
sbb
push
xchg
addr16
adc
pop
pop
add
xorb
dec
in
cmpsb
and
push
xor
sbb
sbb
in
ss
xor
jo
mov
inc
sub
cmc
outsl
rcr
ret
movl
mov
adc
adc
test
ja
rclb
loop
sub
jl
jg
sti
out
xchg
faddl
rcr
pop
mov
sub
or
das
add
ret
ljmp
sub
out
push
cs
lock
cmp
and
lahf
mov
jle
mov
pop
xchg
cltd
push
test
dec
int
inc
cmp
sub
nop
ja
mov
add
lret
push
ss
iret
adc
add
sbb
pushf
jno
jae
sbb
or
fcomp
mov
int3
fbstp
push
xchg
push
or
fidivrl
fwait
dec
pop
lret
cmpsb
xor
add
mov
cmp
inc
adc
xor
cmp
adc
dec
or
push
outsl
test
pop
xchg
xor
cmp
sbb
jg
int
iret
pop
loope
sbb
dec
addr16
and
popa
or
ljmp
lds
in
and
movsl
dec
push
jmp
jne
xchg
or
insl
and
sbb
bound
rorb
lods
inc
or
mov
jle
jp
lea
jnp
cwtl
ss
out
dec
sarb
adc
xchg
inc
jnp
mov
iret
mov
lods
inc
pop
dec
jb
mov
rorl
mov
and
sahf
shrb
dec
fwait
imul
lahf
jle
test
add
push
add
jb
fldenv
mov
add
lcall
xchg
repz
dec
lods
out
mov
cmp
scas
mov
and
addr16
push
insb
lea
inc
xchg
and
jno
flds
test
pop
push
cmp
clc
pop
xchg
stc
mov
and
mov
cmpl
jo
and
and
clc
sbb
push
sti
shlb
mov
fisttps
out
incb
ja
mov
xchg
sub
hlt
repz
int3
push
sbb
jb
dec
mov
jl
or
xlat
mov
ja
mov
lcall
fdivs
cmpsl
movsb
jae
dec
push
push
mov
shrl
frstor
xchg
sahf
shl
pop
ror
add
into
jge
scas
out
mov
xchg
out
mov
dec
adc
out
scas
outsb
test
iret
jl
je
cltd
fcmovnb
scas
jbe
fs
stos
leave
int
mov
jmp
sbb
inc
jp,pt
or
jb
fcmove
pop
in
and
mov
in
lret
mov
mov
arpl
out
dec
shll
ljmp
pop
xor
and
xor
lea
mov
lods
sbb
mov
fistl
mov
stc
jecxz
cwtl
mov
rcr
fcomps
rclb
jge
sub
xchg
sbb
lock
cmp
aam
add
repz
push
fistpl
add
xchg
imul
sti
adc
loopne
mov
or
psubsb
pop
or
adc
adc
jmp
sahf
lcall
test
dec
ds
lcall
out
sbb
into
shl
inc
fbstp
sbb
sub
cltd
jb
cltd
loop
rclb
dec
push
and
iret
jne
test
mov
repnz
pop
dec
sti
sub
je
das
leave
lret
call
ljmp
lret
imul
pop
add
cmp
sub
cmp
mov
dec
hlt
sub
cmp
push
jae
sbb
adc
xchg
cli
std
ljmp
test
sbb
adc
cmp
lret
dec
scas
loope
notb
mov
add
notl
cmp
into
cmp
fistpll
xchg
fldl
xchg
nop
cmove
xor
jle
add
dec
dec
mov
test
lret
sbb
movsb
adc
adc
mov
pusha
cmp
xchg
mov
mov
jg
dec
inc
out
mov
cwtl
dec
jb
or
xor
mov
xchg
out
mov
sbb
les
shrb
push
aad
mov
repz
stos
movsl
xor
mul
mov
lods
jns
cs
fidivs
xlat
rcrb
xor
pushl
inc
pop
in
and
jp
scas
aam
jle
ret
imulb
jg
cltd
imul
int
mov
push
les
pop
inc
push
loop
ret
cmp
add
pop
je
xchg
fsubrl
pop
mov
fwait
test
push
insb
lds
in
hlt
sarb
repnz
pop
into
lcall
in
es
add
dec
or
mov
pop
cmp
or
out
scas
xlat
clc
mov
js
mov
pop
aam
aad
cltd
out
inc
sbb
add
sbb
test
xor
pop
repnz
sbb
mov
shufps
stos
addl
sbb
adc
jl
aam
sub
add
dec
add
inc
insl
pop
jae
test
in
inc
fs
xor
mov
roll
cs
pop
sub
loopne
cld
sub
mov
jae
xchg
repz
ss
into
cli
dec
fwait
out
fsubp
mov
dec
sarl
push
imull
cmp
and
and
adc
jle
pop
jle
decl
bound
in
pop
addr16
lock
jbe
scas
movsb
and
fstl
inc
mov
mov
push
cld
inc
adc
cmp
inc
xchg
jge
xor
es
cld
in
movsb
xchg
and
divb
shll
xor
inc
and
repz
cmp
in
and
pushf
jmp
xor
inc
pop
mov
hlt
je
mov
mov
icebp
std
testb
shlb
sub
add
arpl
jae
gs
int
test
pop
js
pop
lret
pop
mov
setle
xor
jbe
or
sbb
ss
cltd
test
inc
jno
pushf
lcall
adc
push
movw
or
fs
or
jmp
psubusb
mov
fs
mov
insb
cmp
es
enter
gs
or
adc
iret
or
or
les
pop
loop
std
dec
dec
push
outsb
cmpsb
sti
jb
sub
and
sub
jp
rcll
out
mov
loopne
ret
sub
shr
in
mov
sub
gs
lods
adc
jle
xor
sti
mov
bound
push
jge,pn
mov
push
notl
ret
ja
bound
xchg
pop
lods
int
pushf
fistpll
mov
sti
add
aas
mov
lods
fcomps
or
cmp
les
xchg
ret
xor
adc
insl
dec
adc
cwtl
push
mov
rcrb
xchg
sar
inc
pop
cmp
insb
sar
iret
dec
pop
pop
pcmpeqb
rorl
cwtl
lret
or
xlat
jb
imul
mov
ret
dec
std
fiaddl
xchg
jmp
xchg
fidivrs
cmp
jns
stos
mov
dec
div
and
dec
out
push
imul
addr16
imull
cmpb
lcall
cmp
pop
dec
dec
sub
arpl
pop
and
shlb
int3
push
mov
stc
fs
in
mov
test
jge
push
mov
push
inc
push
mov
fidivs
aad
mov
aas
inc
mov
or
ds
sub
add
add
or
mov
adc
lock
rcll
mov
in
pop
mov
arpl
or
cmc
mov
hlt
pop
jae
rorl
mov
push
cmp
dec
adc
lahf
jle
mov
cmp
add
sar
adc
test
cld
and
sub
cmp
test
mov
loope
dec
stos
pop
adc
aad
testl
fnsave
or
and
cmp
or
mov
ds
orb
push
in
lcall
mov
cli
push
mov
cmp
repz
xchg
jb
jmp
aas
pop
es
repz
test
inc
push
repz
sbb
xchg
pop
add
incb
dec
fstps
ret
outsb
mov
dec
sub
scas
clc
jns
mov
cwtl
jg
lcall
clc
cltd
inc
add
pop
lret
in
add
xchg
rcr
sub
aaa
inc
inc
xchg
in
adc
jb
shll
and
popf
sub
cs
sbb
test
lock
test
cmp
icebp
mov
mov
in
push
stos
insl
ret
movsl
mov
movsb
mov
mov
mov
sbb
mov
sbb
xor
mov
xchg
mov
push
push
push
iret
adc
adc
ljmp
xor
sub
cmpsb
das
add
out
cmpsl
jns
cld
jle
es
aad
jno
mov
mov
out
inc
pop
stos
mov
rcrb
mov
xor
mov
in
mov
xor
mov
pusha
jge
xchg
fisttpll
imul
inc
je
push
inc
loope
or
or
insl
xchg
mov
ret
push
push
sti
mov
pop
pop
les
fadd
adc
hlt
insb
cbtw
jmp
je
lret
mov
fisttps
sbb
popf
in
xchg
fisttpll
cmp
outsb
test
mov
push
cmpsb
jne
sahf
scas
repz
adc
aas
fwait
loope
cmp
xlat
aam
cmp
and
cli
scas
cwtl
pushf
ret
and
sbb
in
lds
xchg
pop
push
cmpsl
orl
lret
scas
rclb
cld
fsts
xchg
outsb
jge
dec
ss
mov
aad
cli
mov
push
mov
xor
lds
cmp
sbb
push
out
inc
clc
cmpsb
jne
mov
mov
ss
test
mov
sub
inc
ja
fstps
je
loop
inc
cmp
pop
je
mov
ja
jp
adc
out
inc
lret
pop
mov
xchg
adc
je
shrb
sub
insb
cmp
aam
inc
stos
jecxz
cmp
inc
push
repnz
in
int3
test
xor
or
dec
adc
cmpsl
xor
adc
cmpsb
out
addr16
int3
fs
push
mov
jg
loopne
adc
add
mov
add
hlt
mov
cmp
dec
fldenv
shlb
iret
pop
dec
or
push
cmc
cmpl
int
and
sbb
dec
out
adc
dec
add
outsl
in
sbb
fdivl
test
repz
outsb
mov
or
xor
lcall
xchg
decl
mov
aaa
and
push
clc
inc
addr16
rorb
rcr
sub
pop
xchg
loope
daa
xor
subb
iret
pop
loop
mov
imul
pusha
repnz
push
mov
mov
arpl
mov
cmp
cmp
inc
or
inc
cmc
dec
loop
cltd
sahf
and
and
xor
loopne
out
mov
cs
xchg
out
jo
xorb
adc
push
aaa
mov
out
dec
insb
out
adc
mov
negb
mov
adc
out
test
icebp
into
rolb
bound
icebp
cmp
gs
and
lahf
sbbb
or
pop
bound
pop
xchg
mov
jle
in
pop
aas
mov
inc
ss
repnz
ret
test
push
jnp
fmull
mov
or
das
mov
and
add
ljmp
jge
loop
sti
mov
orb
xchg
repz
xchg
fidivl
mov
xchg
in
mov
mov
mov
pop
loopne
lret
std
enter
add
inc
push
jmp
adcb
cmp
outsl
fs
imul
jecxz
roll
cmp
jae
fs
and
adc
fmull
sarb
fwait
dec
out
jle
enter
cwtl
add
add
js
int3
movsb
sub
ret
cmpsl
out
mov
mov
scas
push
push
in
dec
push
cmp
outsb
cmp
inc
cmpsl
cltd
mov
sub
rcrl
or
mov
or
movsl
cmpsb
dec
loope
sbb
push
stos
or
sarb
xchg
pop
push
fnstenv
fists
dec
and
je
enter
dec
mov
popf
sub
mov
daa
mov
mov
mov
sbb
imul
cmp
arpl
pushf
lods
dec
mov
adc
add
test
pop
add
mov
xchg
jecxz
dec
test
rcl
and
inc
lcall
dec
mov
sub
mov
je
shrb
mov
mov
mov
fistps
lret
dec
clc
mov
push
cwtl
adc
inc
and
sub
cld
jbe
adcb
inc
dec
cmp
add
leave
outsl
inc
sbb
pushl
and
mov
mov
pop
lcall
mov
shll
cli
xchg
inc
cmp
dec
push
inc
dec
pop
mov
jge
xchg
std
xor
addr16
movlhps
add
ficoml
pop
pop
leave
sbb
cs
mov
xor
addl
rorb
cmp
cwtl
mov
sbb
roll
push
jg
iret
mov
jge
icebp
aad
sarb
dec
test
push
fcomps
idivl
fisubrs
sub
ficompl
jb
mov
push
jne
mov
movsb
vpcmpgtw
lret
cmc
rorb
lock
add
fadds
jl
pop
or
dec
mov
jge
sub
cmp
fs
sti
mov
jp
jno
out
jmp
xchg
orb
pusha
push
sti
inc
pop
inc
fsubp
aas
call
xchg
fists
lea
shl
and
cmp
sbb
xchg
jne
ret
outsb
sub
in
ss
in
in
jg
stc
lret
jb
lahf
sub
mov
or
jno
insb
mov
push
jo
mov
pop
inc
and
bound
adc
and
xlat
xor
mov
jmp
push
loopne
test
aad
fimuls
lret
jns
test
cmpsl
add
repnz
dec
popf
xor
in
cmpsb
aad
xchg
sub
or
add
ja
ss
dec
jmp
cmc
sahf
bound
cmp
or
xchg
adc
jb
sbb
xchg
push
sti
aas
jmp
inc
fisttpll
mov
movsl
and
fwait
sub
dec
sbb
and
cmp
es
mov
sub
orb
sbb
fs
xchg
sbb
enter
mov
mov
negl
jp
adc
pop
mov
pushl
aam
sub
xchg
jmp
pop
imul
jae
les
ljmp
mov
lcall
andl
push
mov
lcall
lret
insb
scas
dec
jmp
cmp
test
repz
cmp
lods
outsb
daa
lods
fs
mov
jp
adc
pop
enter
inc
jg
jl
add
inc
push
ds
jmp
jae
adcb
sbb
xchg
add
sbb
js
pop
pop
pop
mov
dec
sub
cmc
je
int
sbb
jmp
fsubp
ds
js
inc
pop
inc
jnp
jb
iret
mov
cmp
cwtl
xor
test
inc
mov
movsb
addr16
movsl
sbb
cmp
std
inc
loopne
mov
adc
mov
inc
pushf
add
jo
push
gs
cwtl
test
jns
cltd
clc
daa
dec
xchg
xchg
dec
aaa
das
mov
aas
push
cltd
mov
mov
adc
negb
inc
dec
popf
out
js
push
movsl
inc
addr16
int3
push
aam
sbb
pop
hlt
ret
sbb
mov
je
stc
fldt
mov
inc
and
mov
daa
mov
mov
outsb
lock
sbb
sarl
mov
cs
xchg
lods
jmp
lret
out
cwtl
lea
and
mov
and
pop
dec
push
out
mov
mov
pop
cmpsb
movsb
std
scas
loope
inc
call
js
ljmp
mov
mov
mov
xchg
mov
es
test
gs
out
sbb
cmc
cmp
xlat
push
mov
inc
out
pop
inc
into
rorl
in
test
mov
enter
cmp
dec
enter
add
cmpl
scas
adc
adc
push
bound
jno
lock
sbb
sti
push
bound
push
push
lret
mov
fmuls
xor
sub
inc
mov
xchg
mov
cs
fcmovnb
imul
pop
mov
cltd
ficoml
add
insl
xchg
out
lahf
aas
loope
shll
inc
sub
fmul
daa
jae
sbb
cmpsl
xorl
test
jle
subl
mov
sub
push
dec
push
inc
xor
add
imul
lret
imul
pop
jns
xchg
sbb
mov
nop
mov
cmp
jle
insb
mov
or
scas
cmp
bound
xacquire
stos
in
cmp
pop
in
test
fistps
stc
push
repnz
xchg
leave
sub
mov
xchg
mov
sbb
movsb
rcl
out
int3
sahf
pop
pop
jns
mov
int3
jne
fucomp
jb
sub
cli
aam
das
int
sub
pop
sub
in
clc
mov
adc
ret
sbb
fs
rcr
pop
cmp
dec
adcb
push
loop
orl
jne
mov
fdivrs
lock
or
iret
cmp
call
inc
dec
mov
stc
ss
out
sti
jmp
dec
cmp
xor
cltd
push
push
cmpl
pop
inc
test
repz
add
jecxz
adc
dec
or
daa
in
movsb
icebp
lea
push
aam
xchg
fdivl
mov
cmc
xchg
xchg
xorb
fdivrs
xor
jmp
add
xlat
and
xlat
loop
dec
out
scas
gs
dec
inc
idivb
mov
mov
cmp
add
cmc
or
or
les
adc
adc
leave
aas
pop
int
mov
push
push
pop
inc
cmp
dec
or
add
loopne
ds
fimuls
in
mov
xchg
mov
out
fistps
adc
cmp
les
je
lock
jb
pusha
gs
xchg
in
cltd
cmpb
pushf
xchg
popl
fs
je
fcomps
add
inc
insl
sub
xchg
add
dec
or
cltd
xchg
mov
imul
jl
mov
pushf
add
ficoml
popa
repz
shrl
push
sub
test
push
jns
xchg
push
mov
inc
int
ss
cltd
jg
dec
dec
mov
jns
sub
cld
adc
out
inc
push
mov
pusha
sub
mov
jl
repz
test
fnstenv
pop
stos
dec
xchg
sub
push
xlat
sbb
in
mov
mov
xchg
add
inc
push
scas
push
lret
adc
cmc
cld
dec
call
sbb
lahf
aad
jnp
orb
push
aaa
fstp
inc
sub
sbb
inc
mov
jecxz
outsl
mov
movsb
push
adc
aad
and
xorl
jecxz
out
cmp
jnp
movsl
push
sub
or
pop
mov
xchg
nop
decb
pop
mov
insl
in
pop
test
mov
ret
xchg
arpl
add
out
cmp
test
mov
sub
ficomps
pop
adc
adc
sub
jmp
movsb
dec
mov
mov
push
lahf
fidivrl
aam
jl
in
adcb
scas
xor
mov
popa
inc
pop
push
mov
xor
test
mov
mov
inc
fnstsw
pop
pop
insb
lods
sbb
sbb
push
push
jle
pop
test
out
subb
inc
and
adc
test
cmp
int3
aam
xor
out
mov
sbb
xchg
nop
xor
push
test
sub
xchg
cmp
fcompl
loopne
xor
pop
mov
sbb
addb
dec
jnp
add
adc
adc
sub
mov
jl
dec
lret
cmpsl
lahf
pusha
jl
jnp
pandn
test
add
loop
mov
notl
jge
mov
xchg
insb
mov
scas
in
test
outsb
int3
pop
sub
add
mov
or
test
pop
out
aas
pop
xlat
xchg
hlt
push
imul
adcb
push
pop
gs
incl
ror
enter
and
scas
sub
mov
xor
aam
jno
jmp
divb
test
test
mov
jb
jg
mov
fnstsw
mov
mov
das
or
push
jp
push
add
xchg
pop
jne
fs
sbb
in
xchg
sbb
pop
adc
cmp
dec
add
sahf
cmc
lret
jbe
mov
stos
das
scas
fistpll
inc
je
popf
dec
dec
in
jns
pop
in
hlt
sbb
mov
mov
sahf
push
add
add
xchg
psubb
sub
add
mov
adc
popa
adc
stos
pop
rclb
std
inc
adc
adc
loopw
ja
dec
cmp
shll
push
lahf
mov
and
push
ja
outsb
inc
lahf
pop
sbb
les
mov
jmp
inc
test
xor
fisubrs
repnz
push
out
cmp
push
mov
ja
xor
add
dec
jp
shl
stos
orl
pop
scas
scas
adc
mov
mov
sub
or
pop
std
or
fstpl
sarb
adcb
mov
add
pop
push
mov
xor
push
xchg
push
xchg
repz
and
cmpsb
pop
test
lock
clc
out
hlt
pusha
addr16
movsl
mov
mov
and
aad
lods
mov
inc
lock
pop
xchg
aam
test
aaa
popa
jo
icebp
add
sbb
adc
stos
ja
adc
mov
js
jecxz,pt
jnp
mov
jecxz
pop
cmp
dec
pusha
bound
cmp
push
inc
outsb
inc
sti
cwtl
arpl
call
rcll
pop
in
sbb
out
add
sahf
mov
sbb
add
sub
nop
cmp
ds
roll
adc
mov
out
jne
loope
outsb
mov
mov
movsb
jecxz
test
xchg
movsl
sub
je
in
insl
mov
mov
jb
test
notl
call
add
sbb
in
mov
cmpb
stos
adc
pop
rcr
stc
pusha
aas
ds
add
out
mov
cmp
inc
inc
dec
jo
in
cmp
push
push
mov
mov
mov
sbb
imul
stos
repz
dec
iret
leave
sub
pop
pop
testl
cli
adc
mov
jmp
cmp
lods
pop
jo
jno
mov
fwait
mov
sub
movsb
mov
adc
cli
adc
jae
int3
sub
loopne
jo
pop
xor
or
jae
cs
sarb
pop
daa
arpl
les
push
rcll
mov
aas
mov
lret
lods
cmpsb
fmuls
movsl
jl
xchg
pop
push
sub
insl
inc
stc
jo
xchg
scas
mov
pop
dec
and
daa
cmc
dec
jg
ljmp
popa
mov
and
aas
pop
xchg
xchg
lret
xchg
lods
adc
out
lret
mov
fcomi
out
jecxz
notb
pop
inc
fwait
jg
dec
xchg
pop
mov
sti
push
mov
xor
lahf
mov
lcall
or
maskmovq
testl
mov
enter
push
stc
pop
fdivrs
dec
inc
rcrl
jae
push
mov
add
popf
cmp
sar
mov
popa
add
stos
mov
sbb
xchg
andl
sbb
dec
repnz
push
sbb
mov
sbb
xor
gs
icebp
bound
aam
and
ljmp
xchg
push
fisubrs
in
cmpsl
xchg
aas
xchg
cmpsb
push
adc
cmp
mov
gs
or
or
out
and
hlt
ss
xor
mov
int
shlb
mov
mov
jge
pop
push
clc
pop
outsb
push
movsb
dec
pop
sub
xor
add
mov
fs
sub
mov
scas
jge
loope
mov
jnp
sbb
sub
repz
sub
mov
cmp
test
pushf
push
cmp
mov
or
out
out
aas
loopne
pop
repnz
iret
in
aad
cltd
dec
stos
mov
fidivrl
sub
push
repnz
mov
push
jbe
das
sti
add
sbb
add
ds
mov
je
lcall
cwtl
mov
push
sub
cmpsb
sbbb
repz
js
jecxz
ret
popa
xchg
xchg
in
not
aad
rorb
dec
xorl
cmp
outsl
jo
jno
pop
jg
shl
dec
jl
or
push
adc
sub
imul
rcll
sbb
mov
cmpsl
in
scas
sar
ficoml
in
sbb
mov
jmp
out
scas
lds
jecxz
mov
mov
imul
adc
xchg
jnp
ret
daa
mov
cli
xor
imul
je
popa
pop
stc
inc
mov
ljmp
sbb
mov
push
mov
xchg
sbb
test
sbb
psubw
jne
int
gs
mov
call
sbb
inc
fwait
pop
repz
mov
cmpsb
push
dec
adcb
shl
xchg
mov
lret
push
outsl
and
add
stos
lods
xor
testl
lret
push
sub
fucomp
xor
add
xchg
sbb
sub
inc
fnstcw
or
hlt
call
ret
sub
xor
mov
dec
loopne
cli
jb
jg
dec
ret
adcl
aam
fdivs
dec
das
and
out
lds
cmc
jmp
adc
xchg
outsb
insl
rclb
or
jne
mov
stos
orb
sbb
inc
cmp
pop
inc
push
lods
inc
xor
jb
and
insl
fucomip
adc
sub
aaa
into
jns
inc
shl
adc
cmp
add
push
aad
aas
cmpl
dec
into
imul
jnp
pop
jae
ret
rcll
fcoms
jbe
loope
movsb
lods
lret
jae
jb
imul
cmp
mov
sub
jle
ret
sbb
push
sub
push
jno
push
jmp
cmc
bswap
aad
insb
jle
sub
lahf
jnp
scas
add
std
jns
loope
insl
cmp
out
mov
repnz
add
rclb
cltd
out
cmpsb
cmp
fnsave
setae
push
jnp
adc
jle
sbb
mov
and
clc
ljmp
cld
xchg
fwait
out
cli
jb
adc
aas
sub
jne
in
mov
sbb
push
sbb
sbb
lret
push
lcall
adc
and
jecxz
testl
push
fmuls
das
push
jge
xor
mov
xor
dec
push
sub
cli
or
stos
repnz
pop
cmpsb
jg
add
or
pushf
fbstp
cmp
dec
or
nop
xor
sarl
sbb
pop
loope
mov
mov
dec
adc
dec
xor
mov
lods
xchg
insb
inc
add
sbb
fstl
imul
jecxz
imul
inc
mov
scas
gs
and
fistpl
jg
mov
xchg
xchg
andb
push
lds
pop
pushf
xor
dec
push
fs
sbb
mov
cmp
jg
rorl
xchg
mov
cld
or
mov
xchg
dec
out
mov
add
pushf
jns
push
mov
aam
lahf
test
rcll
add
push
mov
out
mov
add
push
mov
popa
pop
pop
int
jmp
push
mov
aad
test
enter
or
fnstenv
jbe
loop
add
jns
mov
inc
mov
push
lcall
inc
inc
sbb
icebp
push
inc
xchg
mov
or
scas
fisttps
mov
push
popf
jno
or
icebp
insb
scas
test
lret
leave
subb
hlt
push
pop
mov
movl
pop
loope
jge
int
cmc
lea
or
sbb
xchg
add
mov
jg
inc
insb
out
out
sbb
adc
push
cmpsl
add
jns
ja
insb
fsub
stos
xchg
lcall
dec
mov
sarl
in
in
jmp
lcall
imul
mov
movsb
mov
out
cmp
movb
dec
mov
cwtl
aam
cmp
push
cmp
push
sbb
hlt
cmp
in
loopne
stc
push
push
in
xchg
cmp
outsl
cmc
cs
pop
dec
adc
es
mov
pusha
mov
xchg
lods
pop
push
das
pop
call
add
push
push
inc
mov
or
mov
test
add
aas
jmp
sar
jle
test
xchg
lret
xor
fsubr
push
aad
fistl
xchg
jnp
out
adc
shl
scas
mov
inc
jo
xchg
and
dec
aas
mov
lahf
cmpsb
insl
in
lret
cmp
or
sub
xor
imul
shrb
orl
cmovl
xchg
jmp
sbb
jge
pop
cmpsb
adc
sub
insl
push
fsubs
cli
test
das
addl
mov
cltd
fidivrl
cld
in
sbb
sbb
add
and
mov
movsb
int
ja
ret
mov
sbb
es
jg
dec
clc
adc
ret
js
int3
and
sbb
sbb
outsl
je
imul
mov
lret
lea
pusha
rorl
aas
popa
lret
mov
xor
ja
push
lahf
and
in
mov
pop
mov
push
sbb
push
testl
aad
pop
add
mov
push
sbb
addr16
pop
xor
dec
sbb
aad
jne
push
inc
dec
inc
adc
xor
ret
lahf
ret
movsl
cmp
mov
mov
xor
outsb
xchg
mov
shr
add
push
lods
pop
fidivs
mov
push
insl
xchg
lahf
jg
cld
clc
cmp
sub
jp
mov
fists
popa
fwait
mov
mov
and
and
and
cltd
call
sbb
jge,pn
scas
test
les
sbb
add
push
daa
fs
inc
jbe
inc
into
or
push
lods
aad
xor
pop
mov
add
dec
cmp
mov
pop
lcall
jge
leave
pusha
push
inc
dec
sti
pop
mov
dec
in
mov
es
or
dec
popf
and
scas
in
cmpsl
je
mov
jae
sub
outsb
pop
sbb
jecxz
xchg
mov
in
out
sub
sarb
imul
lea
mov
lahf
fs
xor
pop
stos
or
cli
mov
or
and
dec
lahf
and
lds
cli
jnp
push
jle
mov
pop
sti
jecxz
fchs
and
addr16
pop
mov
mov
add
dec
jb
fs
nop
out
or
clc
lret
mov
jnp
and
jns
mov
pop
xchg
test
test
sbb
out
and
inc
pop
adc
add
addb
rorl
es
sbb
xchg
lock
sbb
inc
jo
nop
insb
inc
je
jmp
out
bound
jp
aad
push
and
add
sbb
xchg
iret
xor
and
xlat
sbb
fwait
sbbb
scas
dec
pop
mov
vandnps
sarl
je
in
incb
xor
jp
int
pop
pop
fwait
insl
lea
inc
push
pop
ljmp
mov
pop
cmp
dec
adcb
cmpsl
scas
xchg
xchg
insl
xor
mov
std
jecxz
xor
inc
or
add
mov
fsubl
sub
je
jne
pop
xor
cmp
or
add
inc
jnp
xchg
lods
cmp
imul
xlat
push
add
rorl
andb
cmpsb
std
in
inc
arpl
adc
aas
jnp
pop
je
shrl
loop
mov
cmp
or
push
or
cmp
stos
ret
cmpsb
stos
in
fldt
test
popf
out
aaa
mov
sub
cld
mov
pop
stc
xor
or
and
stos
mov
pop
enter
push
loop
std
cmp
popa
lods
mov
jmp
sub
in
sub
popa
lods
js,pt
rcr
stc
lcall
xor
or
jno
sub
mov
ret
lods
adc
bound
jbe
loopne
inc
xchg
mov
push
inc
cmp
push
stos
insb
jns
mov
add
sbb
fs
pop
cmp
call
sub
fnstenv
inc
add
and
xchg
ljmp
hlt
mov
out
push
sub
pop
inc
dec
inc
add
pop
shll
scas
cltd
clc
test
xchg
cmp
xor
mov
aad
push
sahf
mov
and
lret
out
aaa
adcl
es
inc
inc
and
push
adc
sbb
lahf
cmpsb
pop
pop
jbe
outsb
rolb
jo
adc
xor
stc
push
add
scas
pop
icebp
jp
jnp
pop
push
ss
dec
std
xchg
pop
sbb
pop
decb
pop
rorb
adc
test
fisttps
out
les
cmp
fstpt
loop
and
hlt
jne
dec
inc
adc
jno
sub
jg
test
enter
lock
mov
cld
pop
xor
in
pushl
sbb
or
jle
xchg
subl
xchg
into
pop
jns
xchg
cmp
inc
dec
adcb
and
cmp
xor
jl
es
sbbl
lds
es
in
aad
jb
jecxz
or
sbb
andb
mov
aad
inc
fbstp
xor
push
stos
or
jbe
cmpsb
cmp
es
and
fiadds
jb
xor
iret
outsb
loopne
sbb
lds
and
movsb
mov
add
cmpb
je
jp
int3
push
sbb
or
pop
jae
dec
cltd
leave
cmp
jp
fldl
xor
jne
and
mov
insb
xchg
sar
fsubs
cwtl
xor
imul
xchg
jge
dec
mov
mov
push
shlb
pop
lahf
mov
push
cli
popf
ret
jbe
popf
dec
mov
sbb
dec
ds
sbb
dec
pushf
and
sub
inc
hlt
mov
dec
stos
add
inc
movsb
inc
into
loop
inc
ja
jbe
pop
mov
mov
andb
cmp
clc
out
push
cmpsl
std
dec
dec
movsl
push
or
aad
dec
shlb
stos
in
ja
sbb
xor
xchg
add
ret
jns
popa
int3
shll
out
int3
cmp
and
fwait
bnd
push
adc
shrl
xlat
lods
mov
inc
jp
insl
xchg
jo
popa
and
lock
mov
sub
sub
mov
pushf
scas
inc
int
lock
out
sub
fistl
scas
add
pushf
sarb
shll
adc
inc
mov
clc
insl
pop
mov
cmp
mov
fimull
call
sbb
ja
fbstp
push
repz
or
add
adc
pusha
cmp
push
mull
addb
cmp
adcl
pop
push
imul
push
imul
sub
pop
push
aam
test
adc
lahf
push
subl
jb
xor
mov
xor
scas
pushf
and
sbb
jecxz
inc
push
loop
jecxz
repz
rep
fidivrs
fiaddl
mov
push
mov
lock
imul
adc
xorl
add
xor
stos
ret
pop
dec
fdivrl
pushf
imul
inc
enter
nop
add
int
fwait
xor
sbb
mov
xor
loope
and
loopne
lret
sbb
aas
push
cmpb
push
sahf
adc
jbe
stc
dec
mov
xchg
dec
pop
test
icebp
insb
fwait
sub
in
cmp
or
sar
or
cli
call
pop
add
jnp
or
fdivs
clc
aad
mov
arpl
xchg
fsubl
mov
ret
sbb
jle
dec
mov
lea
cwtl
cmp
imul
adc
dec
sbb
xchg
sub
or
cwtl
xchg
mov
imul
lcall
std
addb
sub
stc
stos
add
je
fmuls
outsb
jl
push
testl
pop
jmp
mov
cmp
add
xor
sub
imul
lea
rcll
mov
inc
push
add
jmp
cld
out
stos
gs
sub
cmc
jg
sub
jmp
idiv
push
push
sub
adc
aam
mov
stos
pop
call
dec
test
mov
inc
xchg
push
xor
inc
leave
fwait
dec
lcall
adc
push
mov
lds
mov
jbe
fnsave
inc
ret
sub
sub
or
repz
out
repz
mov
ljmp
out
jl
push
xchg
in
push
mov
mov
jmp
jno
jo
push
pop
dec
cwtl
cmpsl
xchg
and
stos
adc
std
adc
arpl
popa
dec
cmp
and
shll
rcll
mov
mov
or
sub
leave
cli
ret
imul
jmp
out
mov
loope
nop
adc
or
movsl
mov
iret
add
sub
fwait
outsl
pop
stos
imul
ss
roll
adc
mov
imul
inc
test
cmp
shlb
jmp
movsb
test
add
or
cmp
shll
sti
out
jle
loop
inc
push
mov
and
jp
mov
out
jo
orb
shlb
cmp
pop
movsb
jmp
addr16
nop
jo
mov
and
xchg
in
lock
xchg
push
cmc
and
aaa
dec
adc
mov
pop
push
cld
dec
and
jne
mov
sahf
insl
in
int
jo
xchg
xor
lds
jne
adc
jmp
sub
fnstcw
stos
xchg
xchg
decb
add
mov
in
test
ret
inc
decb
test
stc
xchg
mov
or
dec
mov
subb
cld
push
fimuls
xchg
or
push
add
insl
mov
dec
ljmp
es
test
aam
sbb
xchg
sub
stos
enter
mov
lds
fwait
jno
fwait
inc
cmp
cmp
je
data16
sub
xchg
rcrb
cmp
and
and
or
pop
mov
mov
es
xor
or
push
aas
mov
or
shll
test
xchg
enter
shll
mov
aaa
lea
push
cmp
aad
pop
jno
testb
out
or
inc
push
test
jg
or
mov
outsb
lods
loopne
test
das
cmp
imul
fildl
cmp
push
add
and
and
xchg
xchg
cmp
pop
stc
ficoms
ja
sub
orb
or
cmp
add
leave
pop
and
dec
lret
subl
movsl
mov
cmp
sub
fs
lds
add
inc
ds
mov
and
dec
jns
jg
aad
pop
stos
push
aas
test
xlat
inc
jno
or
push
sbbb
pop
filds
mov
popf
push
loopne
enter
lods
std
fcmove
inc
hlt
cmpsl
scas
sarb
into
roll
xlat
jmp
movsl
test
xchg
sub
lea
pop
test
out
sbb
shll
in
or
mov
ffree
lea
jge
mov
pushf
sbb
dec
mov
cli
aad
daa
lcall
xlat
scas
pop
mov
subb
pushw
mov
jns
or
lahf
cs
cmc
into
adcl
mul
push
mov
jne
or
and
xor
mov
sbb
cwtl
cmpb
leave
pop
xchg
repz
mov
test
mov
in
sbb
jae
iret
fwait
mov
sub
xchg
xchg
es
mov
or
adc
lea
xor
adc
ss
std
or
ja
or
fldenv
inc
repnz
enter
adcl
mov
adc
add
notl
daa
imul
ja
sahf
mov
imul
dec
mov
stc
xchg
pop
adc
call
popa
mov
test
mov
push
push
orb
scas
leave
scas
xchg
mov
cmp
mov
int3
adc
cltd
sbb
je
xchg
jne
sbb
push
push
js
out
mov
cmp
test
adc
js
jecxz
ss
push
mov
cmc
mov
inc
dec
push
lods
test
in
fst
mov
sbb
mov
loopne
dec
mov
pop
fnstsw
gs
sub
mov
int3
sbb
push
std
in
or
cmp
stc
adc
jb
repnz
rorl
mov
cmpsl
sbb
in
clc
pop
fldcw
repz
lea
movsl
add
test
cld
insl
jecxz
mov
dec
ljmp
inc
push
imul
mov
out
das
jns
xor
xchg
inc
pusha
pop
mov
sub
jno
jge
and
loope
sub
sub
mov
and
pop
movsl
js
and
pushf
repnz
pushf
sub
clc
out
repnz
sub
mov
cli
mov
jae
xchg
push
adc
dec
mov
jge
test
sub
sub
push
xchg
inc
fs
call
jns
xor
ss
imul
imul
cmp
popa
cwtl
inc
inc
jo
adc
inc
lods
fwait
mov
jae
pop
call
adc
xor
mov
add
stos
lock
inc
jecxz
xor
sahf
es
mov
jnp
out
imul
jnp
hlt
ljmp
outsb
mov
push
loopne
xchg
bound
jl
pushf
lcall
inc
stc
les
mov
xchg
jae
xchg
dec
dec
sub
push
pop
cmp
dec
jp
inc
ficomps
fnstcw
or
loopne
lods
call
push
sbb
repz
in
adc
in
jle
mov
dec
sarl
pop
je
cld
cmp
push
push
push
sbb
mov
xlat
iret
pop
dec
daa
jge
dec
pop
inc
xor
rcr
test
in
js
cmp
sub
and
add
es
cmp
push
fisttpl
add
enter
push
movsb
xchg
out
mov
out
or
aad
int3
xchg
mov
or
sbb
mov
lods
sti
push
adc
daa
loop
icebp
mov
cs
das
ljmp
loopne
mov
pop
adc
push
cmp
insb
dec
push
push
mov
cmp
leave
into
sub
xchg
sbb
sbb
add
test
dec
stos
mov
bound
add
mov
sbb
scas
inc
in
fstsw
pusha
push
xchg
rolb
cmpl
xor
inc
test
in
xchg
mov
jbe
imul
cmp
sub
movsb
xchg
cmp
arpl
loopne
xchg
loopne
sbb
mov
pusha
ja
test
sub
test
hlt
xor
push
in
lret
xchg
mov
sbb
sbb
movsl
mov
rcll
cmc
popf
into
nop
adcb
push
fbld
dec
test
or
orl
negl
adc
and
mov
dec
push
mov
jmp
pop
daa
es
xor
pop
pop
cmp
cltd
int3
sbb
adc
pop
hlt
inc
pop
sub
insb
imul
aaa
pop
js
add
mov
js
test
mov
inc
push
push
xor
fistps
xlat
push
pop
out
cli
sbb
fwait
leave
pop
out
or
imul
outsl
xor
aas
pop
addr16
xlat
lock
sbb
rcrl
mov
sbb
in
push
xor
dec
mov
test
cmp
mov
fs
test
jbe
pop
gs
xorb
in
aad
repnz
or
inc
xchg
jge
repz
or
fcoms
dec
xor
jns
scas
out
and
push
push
ret
lds
lds
cs
xchg
or
cmpsb
sbb
mov
sub
xchg
and
and
mov
in
jmp
inc
xorb
insb
xchg
or
mov
xchg
mov
in
xchg
movsb
pop
jl
outsb
push
mov
jmp
scas
mov
mov
loopne
mov
cli
sbb
lret
dec
inc
ret
mov
imul
jns
rorb
pop
out
daa
sub
xlat
push
ja
orb
dec
mov
mov
arpl
sub
mov
rclb
push
add
adc
sub
jo
sub
or
jp
cld
and
push
js
dec
scas
shlb
lds
hlt
insb
push
and
sahf
adc
mov
inc
imul
or
xchg
add
movsl
mov
jno
fucom
fs
jno
in
cmp
stc
xchg
out
cmc
lea
pop
rorb
mov
sbb
or
in
dec
ja
mov
inc
adc
test
ret
loop
and
addr16
into
push
call
shll
aam
mov
push
gs
hlt
imul
popa
cltd
test
mov
unpckhps
test
jmp
into
push
divl
fstp
and
pusha
ja
xchg
pushf
dec
pushf
adc
jne
cltd
push
push
mov
adc
movsl
lahf
mov
add
jge
inc
fcoms
or
psubd
sub
jns
jno
sbb
xchg
divl
push
movsb
lcall
sub
shrb
sub
cmp
fdivr
cld
mov
pop
push
pop
push
push
pop
repnz
mov
cmc
jmp
es
clc
outsb
dec
inc
fadd
std
jns
int
les
je
loopne
in
inc
jnp
loope
add
inc
rcr
dec
xchg
repnz
mov
cwtl
fcmovnu
das
in
adc
cs
push
test
sub
push
jecxz
shll
and
test
mov
or
mov
inc
ffreep
fdivl
into
and
sbb
cmpsb
cmc
push
push
cmp
pop
xchg
daa
mov
jno
mov
hlt
movsl
sbb
mov
stos
inc
xor
dec
movsl
repz
push
lahf
sbb
fs
imul
xor
jne
lds
lods
xorl
cmp
xlat
lcall
adc
insb
test
dec
or
clc
sub
jmp
xchg
arpl
icebp
dec
rcrl
cmp
fsubrl
stc
mov
or
dec
rorl
fwait
rclb
lcall
add
sbb
jnp
or
adc
cli
clc
push
and
mov
cld
and
shlb
or
sub
jg
mov
jl
push
jmp
inc
das
or
add
xchg
decl
dec
aaa
enter
xor
mov
movsb
and
xorb
lahf
pop
cmp
push
xlat
push
call
jl
insb
adc
xor
enter
mov
pop
dec
mov
lcall
sbb
outsb
push
int
mov
lret
ror
sbb
stc
add
cmp
push
inc
sbb
and
pusha
mov
rcr
out
shlb
xchg
push
test
sbb
addr16
cmpsl
sbb
mov
ds
jb
es
add
iret
lahf
pushf
aad
lods
or
and
nop
nop
mov
push
int3
jnp
push
fists
lods
loopne
jecxz
out
dec
addl
dec
mov
fs
repnz
mov
cmpsl
jns
xchg
dec
scas
hlt
pusha
test
sbb
bound
pop
sub
fiadds
xchg
das
mov
cld
pop
xor
inc
inc
out
push
xchg
orl
add
mov
push
aad
push
xchg
xor
pop
sbb
mov
push
fcmovnb
and
jns
inc
int3
push
xlat
inc
and
sub
in
lods
add
fsts
sahf
hlt
mov
cmp
add
rorb
mov
daa
sahf
or
dec
les
add
pop
cmp
testb
xor
cmp
or
or
pop
fcmovbe
mov
adc
insl
mov
jno
pop
les
insb
pop
repz
es
and
repnz
fwait
lea
repz
test
test
adc
xor
out
pop
mov
sub
or
lcall
mov
rcll
notb
cmp
mov
test
jnp
dec
shll
adc
ret
inc
lret
inc
jmp
lea
jge
mov
popl
mov
imul
sub
mov
pop
jnp
insl
and
sbb
xlat
or
jg
loop
icebp
mov
jge
in
inc
dec
rcll
outsl
xor
mov
xchg
push
js
sub
je
mov
js
sbb
fcomps
pop
bound
jnp
mov
popf
xchg
jle
or
jno
mov
enter
xchg
es
pop
jge
xorl
sub
mov
mov
les
dec
imul
js
push
pop
js
add
cmp
or
fistl
call
imul
lea
add
aam
push
xchg
xchg
ss
cltd
pop
ljmp
sub
cli
dec
fimull
pop
push
mov
stc
mulb
mov
in
add
repnz
xor
xchg
insb
cmpsb
popa
jg
mov
sbb
loopne
dec
pop
adc
jne
mov
loope
loop
mov
imul
cmp
int
mov
cmp
cmpsl
das
add
ret
std
ljmp
or
popf
inc
stos
mov
adc
popa
fdivl
dec
and
push
pmaddwd
xchg
stos
dec
ds
in
mov
fwait
in
pusha
add
fnsave
in
cmp
or
das
sub
mov
fwait
aaa
dec
popl
rcll
mov
test
jmp
and
mov
push
in
popa
add
sub
mov
sahf
cmc
out
daa
mov
mov
scas
shlb
fcmove
dec
std
sub
add
sti
inc
movsl
jae
xor
cmpsl
into
shll
sar
insl
jmp
inc
jo
cmc
jno
ror
sbb
push
pop
in
shrl
jne
pop
dec
cmp
into
jge
scas
inc
out
xchg
jo
inc
in
and
inc
push
sbbb
sbb
call
arpl
ficomps
sub
or
shr
lret
in
cld
ja
sbb
xchg
outsl
adc
sbb
jae
fisubrs
sub
js
sbb
sbb
adc
es
mov
outsl
push
rcrl
aaa
fnstenv
sbb
xchg
lea
sub
pop
pop
push
mov
cmc
inc
mov
push
arpl
fisubs
hlt
dec
fstp
insl
adc
stos
mov
jno
es
push
stos
popa
add
call
xchg
lahf
clc
imul
xchg
es
pop
outsl
jg
dec
jl
mov
shr
sub
jne
insl
icebp
imul
jno
push
sti
dec
jno
push
xchg
sbb
push
and
sbb
int
pop
ret
pop
enter
bound
into
scas
in
test
out
loopne
shlb
xchg
pop
jne
sub
cld
mov
inc
and
pushf
iret
cmp
push
cmp
push
xchg
shll
cmp
ljmp
inc
sub
aaa
mov
sub
cmc
mov
adc
adc
fwait
xchg
cs
adc
mov
sub
fbld
ror
inc
cs
add
out
mov
pusha
nop
inc
popl
cli
mov
jb
mov
and
sahf
adc
scas
loop
movsb
mov
mov
sub
pop
loope
aaa
fcoml
cltd
push
les
out
imul
push
mov
cmp
mov
push
neg
fbstp
imul
out
mov
add
pushf
pop
jp
push
in
repz
into
cli
sbb
sti
and
stc
test
or
mov
or
cmp
lods
lret
nop
bound
jne
push
cmpsb
and
hlt
mov
insb
push
icebp
lock
fidivrl
mov
clc
dec
outsl
push
cmp
das
aaa
cmp
add
jne
or
pop
out
jno
inc
ja
mov
pop
loopne
lret
test
loope
lret
xor
xor
fmull
scas
adc
outsb
es
sahf
fdivr
ljmp
loopne
push
mov
push
adc
fsub
divb
inc
push
daa
inc
mov
lock
or
xchg
rorb
adc
or
aam
jo
aas
mov
xchg
rclb
inc
push
cmp
out
mov
nop
inc
xor
adc
add
scas
sbbb
lret
and
lds
mov
outsb
inc
pusha
lea
iret
into
xor
leave
pusha
decl
mov
or
fisubs
mov
add
xchg
loop
mov
inc
filds
sbb
fwait
mov
add
jecxz
and
movsb
push
data16
or
fs
incb
sbb
shrb
lock
insl
adc
xchg
pusha
arpl
pop
adcb
mov
dec
push
adc
push
or
scas
mov
inc
ret
dec
xor
mov
in
sub
rcll
lds
out
aam
dec
add
outsl
pop
imul
mov
addl
jno
js
cmp
adc
out
sbb
std
repz
aam
xchg
mov
mov
fisttpl
pop
fisttps
and
pop
sbb
faddp
push
mov
roll
jbe
mov
lods
pop
hlt
mov
xchg
sar
pop
aas
loop
out
xchg
scas
ds
movsb
push
mov
bound
shrl
or
movsl
add
lods
call
sarb
push
movsb
test
push
push
inc
jmp
sbb
mov
xchg
fldl
cmp
sub
mov
xchg
cmp
add
cmp
insl
adc
shl
jg
add
es
jb
xchg
jecxz
add
into
add
or
cmpb
mov
xchg
pop
es
sub
xchg
in
sub
inc
lret
pop
aas
mov
jb
in
dec
or
fsubl
sbb
mov
pop
pop
add
and
jle
dec
push
lahf
sbb
stc
mov
stos
or
test
inc
mov
fnstenv
loop
scas
dec
xor
daa
pop
push
mov
pushf
sub
and
add
dec
mov
sub
roll
repz
mov
pop
gs
pushl
fs
pop
push
aam
sahf
xor
js
lcall
mov
pop
mov
sbb
add
mov
fstl
jg
mov
push
xchg
jmp
je
ljmp
fadd
outsb
into
shll
push
sbbb
scas
stos
mov
arpl
aad
movl
dec
out
sbb
xchg
xor
or
push
push
and
bound
outsb
mov
cli
adcl
lds
pop
jg
mov
mov
ret
je
setb
cmp
bound
mov
dec
jnp
pop
mov
xchg
test
rol
xchg
jle
test
cltd
fdivrs
shrb
mov
sbb
inc
fnsave
pop
out
cmc
ljmp
ret
lret
aad
cltd
jl
jg
stos
mov
enter
rorl
icebp
aad
ja
jnp
sbb
mov
cli
popf
mov
fisubs
dec
daa
sbb
out
or
jbe
fimuls
jge
outsl
je
in
push
jno
loope
jl
inc
loopne
mov
sub
cmp
jmp
sbb
mov
les
outsb
pop
push
aam
call
xchg
xchg
cmpsb
loope
in
mov
clc
stos
sahf
scas
aam
repz
scas
inc
ficoms
in
add
mov
inc
les
mov
int3
xchg
aam
sbbb
call
push
add
push
add
adc
inc
aam
jns
mov
pandn
jbe
add
sub
adc
mov
ret
jbe
push
pop
jge
test
ljmp
gs
mov
dec
repz
insb
cmpsb
lret
add
sbb
mov
shrb
fmuls
cmp
mov
cmp
iret
psubb
je
mov
mov
or
xchg
dec
mov
mov
aaa
cmpsl
test
rolb
xor
add
mov
popa
repz
mov
pop
stc
fsubr
out
call
mov
imull
cwtl
out
enter
xor
and
pushl
sbb
popf
movsl
lcall
cltd
cmp
cmp
mov
andb
fcom
and
sti
add
repnz
repz
lahf
add
cld
push
push
test
std
mov
push
xchg
jno
jp
or
inc
jbe
mov
xor
in
sub
xor
mov
fidivl
pop
leave
push
jle
dec
add
mov
sub
les
cmp
push
roll
and
add
push
orb
xor
xlat
popf
cmp
xchg
and
sti
idivb
sub
arpl
imul
jne
arpl
add
dec
mov
mov
incb
and
push
dec
pop
lcall
mov
jmp
out
dec
jne
jnp
mov
mov
jae
movsl
movsb
sbb
cmp
cmp
xor
icebp
jno
std
inc
sbb
and
mov
jl
jmp
adc
inc
out
fld1
sbb
dec
aam
xchg
pop
pop
push
mov
xor
xor
inc
dec
rcl
ds
int3
jae
mov
mov
mov
je
lea
fistl
inc
adc
dec
sub
mov
add
xchg
andb
adc
cmp
push
lahf
mov
imul
in
lret
addr16
lahf
bound
jge
push
push
movl
sub
icebp
cwtl
mov
push
or
gs
ffreep
push
xchg
mov
dec
out
sbb
popa
rcrl
pop
jmp
in
mov
call
int
dec
fisttpll
adc
popf
dec
mov
incb
adc
sub
xor
enter
leave
jo
lods
vmovaps
imulb
and
mov
or
sbb
aam
push
jns
mov
mov
js
in
test
addr16
jle
je
xchg
jae
adc
movsl
or
mov
fwait
and
cmpsb
mov
pushf
sbb
test
dec
pop
mov
rcll
sbb
jmp
pop
fsts
cli
movsb
aas
add
imul
insl
enter
int
insl
mov
push
popf
xchg
xchg
clc
push
mov
xlat
xchg
dec
clc
xchg
lods
mov
xchg
push
mov
xor
mov
popa
ret
jne
dec
adc
xchg
lock
pop
xchg
push
ds
aad
lea
or
lea
cmc
les
into
pop
sub
loop
sbb
popf
or
int
or
and
pop
adc
push
arpl
adc
xchg
dec
and
mov
push
shl
sbb
push
ret
aam
and
sbb
pop
mov
xor
add
scas
sbb
das
mov
inc
jbe
pushf
or
mov
insl
mov
pushf
add
imul
push
out
testb
sub
ror
inc
repz
ret
stos
mov
mov
sub
pop
test
lret
jge
xor
ucomiss
cmpsl
fistps
les
push
jge
orl
push
iret
jbe
push
lds
pushf
sbb
shl
insb
xor
test
ss
notl
xchg
jge,pn
sahf
dec
lds
movsl
ficomps
dec
sbb
mov
push
jl
fistpll
sbb
out
jp
mov
sbb
in
sub
cwtl
fimull
mov
and
fstps
repz
test
mov
in
xchg
cmp
aam
pop
jo
and
xorb
mov
mov
mov
outsb
shl
pop
lea
out
fmul
mov
jg
pop
cmp
cmp
outsb
jmp
js
js
pop
mov
inc
mov
mov
cmp
xchg
jnp
in
sub
mov
inc
bound
dec
insl
addr16
gs
insl
fbstp
jae
sti
add
push
push
push
push
rcll
mov
sub
gs
ret
frstor
jnp
cmp
adc
xchg
xchg
fs
mov
push
adc
cmc
jp
negb
add
push
xchg
push
xchg
mov
xlat
mov
nop
stc
test
push
cmp
jg
mov
xchg
mov
adc
pushf
out
adc
jbe
xor
test
lcall
clc
xchg
push
jno
nop
pop
xchg
push
sub
jmp
adc
push
pop
movsl
mov
push
fdiv
aad
dec
jl
push
mov
and
sahf
hlt
mov
push
into
insb
or
push
add
or
jle
lea
sbb
jle
pop
or
fimuls
adc
sub
add
bound
mov
arpl
roll
sub
cmp
add
push
or
popa
xor
aaa
ret
or
adc
sbb
xchg
jno
dec
in
es
stc
push
cltd
inc
mov
repnz
in
hlt
cmp
add
cmp
stc
fiaddl
in
mov
dec
cwtl
fwait
adc
xor
jo
sete
xchg
push
cmp
pushf
enter
nop
inc
push
sbb
aad
mov
and
push
cmp
adc
push
insl
xor
sbb
dec
and
adc
ja
jp
inc
cwtl
fisubs
sbb
sub
xchg
inc
jae
je
xor
jecxz
clc
pop
pop
nop
adc
idiv
mov
dec
imul
lock
xor
jmp
clc
mov
jmp
cltd
cltd
and
and
add
adc
xor
xor
stc
rcr
cmp
inc
mov
mov
fld
in
pop
cmpsl
mov
in
adc
pushf
cwtl
orl
or
pushf
jne
jmp
or
stc
in
andb
mov
fisubs
xchg
repnz
add
pop
pop
mov
loopne
lds
mov
pop
jb
adc
lcall
mov
mov
mov
or
jle
xchg
repz
clc
pushf
push
mov
sub
sbb
mov
flds
add
inc
repz
je
pusha
imul
js
repnz
mov
fildll
addl
jp
fnstcw
scas
xchg
lods
xchg
cli
call
sub
popf
add
and
fmull
or
shlb
cmp
outsl
data16
icebp
pop
cmpsb
xlat
andb
sahf
cmpsb
int
pop
jmp
fsubp
jecxz
or
in
push
stc
dec
mov
xchg
and
or
mov
and
push
xchg
stos
and
sbb
fwait
mov
jmp
fst
lret
inc
push
loop
mov
in
or
sbb
xorb
outsb
out
mov
divb
cli
pop
loope
inc
movsb
pop
push
popf
sbb
mov
xchg
aas
leave
call
jno
fdivrl
jnp
nop
push
push
dec
aas
xchg
fldl
sub
ds
icebp
arpl
sahf
adc
lds
push
xchg
push
xchg
rclb
adc
dec
xchg
frstor
mov
adc
in
dec
pop
ljmp
xchg
scas
mov
sbb
fwait
add
in
lahf
popf
mov
mov
andl
loopne
sub
inc
inc
jg
jmp
ds
out
scas
adc
cmp
push
push
pop
jns
xor
sbb
cli
ficoml
sub
push
jle
andb
shll
sbb
mov
imul
jl
fcmove
lcall
test
sbb
lock
xor
mov
adc
fistpll
outsl
stc
and
les
mov
repz
cmc
daa
pop
jmp
xchg
push
jle
out
and
ret
pop
lcall
pop
test
adc
out
inc
cmp
mov
std
lock
into
mov
pop
dec
pop
adc
ja
cmovne
lcall
dec
or
jne
sub
adc
or
cmc
xor
notb
iret
cmp
shrb
pop
mul
es
mov
jle
rcrl
sbb
cmp
mov
mov
pop
clc
push
sbb
popa
mov
pusha
sub
or
pop
mov
push
je
pop
int3
cmpsb
out
mov
ss
pop
jae
jo
notl
push
pop
mov
mov
dec
xchg
inc
sti
inc
loop
mov
dec
push
shlb
add
mov
mov
xchg
sub
cmpsl
jmp
adc
inc
inc
lcall
pushf
mov
push
and
inc
cli
push
mov
nop
fwait
sub
push
xor
dec
xchg
into
fcmovbe
in
call
push
xchg
and
add
xchg
pop
and
imul
pop
pop
sahf
cmpsl
lods
mov
lods
mov
and
stc
xchg
jne
sbb
leave
jne
lret
jnp
dec
call
sub
sub
jnp
pop
mov
ja
mov
pop
add
mulb
mov
jae
into
mov
jmp
inc
gs
xlat
test
add
pop
incb
sub
xchg
dec
inc
mov
lods
pop
test
adc
jne
push
int3
mov
mov
js
push
sbb
arpl
je
in
cmp
sub
sti
scas
cmp
insb
mov
loopne
push
xor
cmp
sub
aas
hlt
fs
bound
rorb
fstp
cmp
into
and
dec
jae
jl
leave
mov
pop
hlt
sbb
mov
addl
movsb
cmp
mov
mov
inc
jle
and
and
fsubrl
jo
loop
push
je
pop
mov
jo
pop
pop
addr16
es
cmp
mov
enter
xor
push
jmp
fidivl
ficoml
add
and
push
in
mov
xchg
lock
xchg
call
dec
fimull
dec
rolb
adc
in
cli
mov
repz
xlat
jge
les
in
lcall
nop
xor
xchg
xchg
inc
sbb
in
aam
dec
stos
xor
es
insb
adc
negl
push
sub
shlb
dec
das
inc
sub
adc
cwtl
jns
lahf
mov
fwait
dec
dec
shlb
xchg
push
mov
mov
outsl
sub
xor
xor
dec
dec
adc
sti
outsb
add
and
sub
push
in
lcall
std
pop
sub
rcr
mov
sbb
sub
in
cmp
inc
pop
sbb
sub
cld
fst
adc
outsl
insb
int
cmp
fcoml
mov
pop
or
lret
test
icebp
stc
sub
cmpb
fildll
gs
or
add
hlt
adc
outsb
outsb
sub
and
es
mov
pop
add
mov
fs
pusha
shll
int3
push
xchg
mov
add
jp
jmp
std
imul
repnz
pop
iret
imul
rcrl
xchg
push
jl
cmpsl
adc
rclb
mov
sbb
push
iret
mov
xor
inc
data16
out
adcb
fbstp
frstor
mov
adc
mov
inc
lods
mov
and
xor
aaa
cmp
push
or
and
cmpsb
sub
int
mov
mov
sbb
add
and
bound
and
pop
out
int
inc
xor
sbb
push
pop
call
mov
xchg
mov
mov
cmpsl
stc
mov
mov
jge
leave
lcall
mov
lea
sbb
fildll
ds
pop
xor
sub
xchg
add
mov
inc
and
jp
loope
leave
mov
mov
outsl
and
mov
push
xlat
addb
adc
inc
lods
call
or
push
fisttps
mov
jg
repz
jmp
sbb
cmpl
outsb
fcompl
nop
push
test
pop
cmp
jbe
hlt
mov
nop
addr16
adc
dec
pop
dec
fld
mov
or
scas
cmovae
loop
adc
clc
stos
mov
mov
lods
and
in
pop
test
push
in
fnstsw
mov
sub
xor
or
into
push
fiaddl
xor
stos
mov
loope
shl
in
cmp
push
out
xchg
outsl
dec
xor
lret
cltd
inc
inc
popa
push
fdivs
mov
stc
adc
sti
int3
push
dec
aaa
xchg
icebp
mov
test
outsl
call
insl
out
out
pop
push
adc
decl
push
pop
cmovg
daa
mov
or
dec
jns
xlat
push
xorb
imul
jbe
dec
adc
mov
push
scas
dec
lahf
rcrl
leave
test
negl
lret
hlt
rcrl
add
mov
out
add
mov
mov
test
xor
push
xchg
es
hlt
insl
cmp
inc
lods
fistpll
imul
roll
popf
pop
sbb
dec
pushf
push
xchg
push
ret
test
jge
cld
int3
pop
sbb
inc
jnp
or
push
jmp
jne
fwait
aaa
aas
mov
pop
sbb
sarl
cs
fucom
mov
ret
shlb
ror
adc
pop
scas
sub
jl
scas
js
adc
sub
jne,pt
inc
mov
xor
adc
mov
aad
leave
sbb
xchg
jno
in
clc
mov
fs
lahf
or
loopne
push
jp
mov
cltd
mov
dec
popf
push
mov
nop
lcall
lret
pop
sti
out
xchg
push
mov
mov
jne
out
cmp
arpl
daa
and
add
sbb
and
xchg
icebp
rcrl
mov
mov
pmullw
fists
cs
lods
sub
cmp
push
jbe
push
or
xor
dec
mov
or
jnp
and
loope
les
iret
movb
aaa
jo
sbb
mov
or
xor
in
stos
adc
mov
fwait
push
loop
mov
jae
js
stos
or
inc
leave
test
addr16
dec
lret
insb
sti
or
sub
in
shlb
sub
jecxz
adc
mov
rorl
pop
bound
mov
das
adc
inc
shrl
fndisi(8087
adc
mov
jne
sub
and
leave
inc
das
cmc
mov
loopne
ja
cwtl
sub
mov
inc
xor
orl
dec
pop
popf
or
sub
adc
dec
sahf
enter
stc
or
xchg
pop
repz
cwtl
push
outsl
incl
add
loop
insl
scas
add
mov
movsl
jae
outsl
mov
idiv
shll
sbb
and
lock
jnp
pop
in
flds
mov
push
push
and
adc
mov
pop
xor
cltd
in
cmp
fimuls
cmpsl
loopne
xchg
cmp
roll
stc
jb
popf
pop
push
hlt
jbe
pop
and
push
les
in
sbb
mov
mov
pop
ja
sbb
sbb
add
inc
mov
or
cmpsl
cli
push
repz
xlat
cmpsb
and
mov
cld
inc
ljmp
and
pop
ljmp
push
lods
jmp
xor
js
and
je
inc
xchg
fcom
mov
mov
mov
inc
test
int3
or
jle
pop
and
dec
xchg
or
push
push
out
mov
fwait
repz
jmp
add
clc
mov
icebp
xchg
dec
pop
or
push
adc
inc
xchg
cmp
dec
or
pop
cltd
mov
popf
ret
xchg
stos
jg
scas
jmp
iret
mov
sub
jns
fadds
mov
pushf
mov
das
inc
inc
mov
addr16
push
cli
shr
jle
fadd
pop
xchg
jmp
dec
inc
imul
pop
mov
ljmp
push
sub
cli
test
or
dec
fsubrs
inc
roll
xor
jno
loop
test
push
pop
int3
ja
push
push
pop
sbb
sub
push
or
fiaddl
cli
fists
dec
cmpsb
xorl
leave
jo
add
fs
cmpsb
jmp
movsb
cmpsb
mov
pop
aas
inc
pop
outsb
push
jo
jbe
jbe
lcall
fnstcw
arpl
loopne
or
xchg
test
pushf
jbe
loopne
in
xorb
mov
sbb
mov
bound
inc
ds
into
fstps
mov
dec
mov
mov
jmp
jno
pop
mov
inc
cmp
jge
inc
sar
pop
ficoml
mov
inc
je
mov
icebp
mov
xchg
loope
clc
jp
mov
movsb
rcrl
enter
cmpsb
mov
movsb
inc
and
jmp
addr16
ret
call
lds
mov
push
inc
out
hlt
aaa
and
int3
push
pop
iret
jnp
mov
adc
xchg
sub
ljmp
outsb
xchg
cmp
push
cmpsl
mov
jne
pop
push
pop
xor
push
ret
call
ljmp
sbb
mov
sbb
jb
push
out
jbe
cmp
lods
stos
mov
pop
inc
jne
aaa
std
fucomip
rclb
and
sbb
push
xchg
cmpsb
test
xor
ret
and
cmc
push
cmp
xor
mov
and
or
and
enter
xor
push
mov
cmpsb
lods
pop
push
imul
xchg
pop
cmp
outsl
or
sbb
jno
hlt
or
sub
xchg
jg
test
nop
or
inc
stos
in
pop
shlb
dec
and
fwait
mov
jle
loop
sti
cmp
ljmp
repnz
out
push
into
xor
xor
push
mov
fwait
inc
mov
pop
lods
cmp
cmpsb
and
mov
leave
mov
inc
jbe
lock
inc
loope
jnp
jno
loope
dec
or
push
push
xor
in
out
xchg
orl
sub
movsl
pop
jl
xchg
add
mov
sub
push
cmpb
and
xchg
aam
mov
subb
hlt
jg
mov
jecxz
cmpsl
jmp
mov
xchg
mov
mov
scas
arpl
notl
mov
shrl
mov
sbb
popf
imul
sub
std
lcall
rorb
je
test
lock
cmpsl
mov
stos
bound
fimull
dec
xor
ret
fmulp
sub
clc
test
xchg
xchg
and
mov
xchg
inc
movsl
jno
outsl
or
xchg
cmc
hlt
push
sahf
jp
and
inc
lret
pop
repz
imul
or
je
jl
and
leave
je
cmp
ljmp
leave
testb
jmp
in
pop
and
imul
or
fwait
test
daa
std
xchg
xor
sbb
insl
mov
xor
js
gs
sti
loop
insb
push
sti
sbb
scas
mov
cltd
sub
or
sbb
jno
cmpsl
loop
mov
in
lcall
fbstp
push
mov
sub
pop
das
mov
inc
mov
or
cmp
push
and
gs
cmp
aaa
dec
loope
inc
lea
and
mov
into
lock
and
push
fld
mov
pushf
mov
pop
cmpsb
hlt
mov
aad
push
jge
cmp
cmp
mov
stos
repnz
inc
call
mov
and
add
sbb
xor
xchg
mov
rorb
mov
sub
mov
fcmovbe
mov
fs
enter
pop
adc
xor
cmp
out
jns
popa
mov
xchg
mov
es
out
pop
add
push
jno
scas
cmp
cmp
or
mov
testb
repz
mov
rorb
adc
jle
mov
push
mov
adc
inc
adc
xor
mov
pop
outsb
jo
jno
xor
add
lret
push
inc
into
xchg
loop
mov
jl
jge
les
fcmovnbe
mov
sbb
fmull
and
les
js
and
inc
push
dec
cmpsb
sahf
and
ret
movsb
daa
movsl
xchg
ds
xchg
mov
and
add
into
ljmp
stc
test
dec
insl
xchg
push
aad
gs
ljmp
les
push
mov
sbb
mov
cmc
jge
nop
push
cmpsb
enter
pusha
sbb
cmp
push
mov
cli
mull
stos
lock
pop
mov
mov
pop
xor
jg
and
lock
mov
arpl
mov
dec
xor
sub
call
lock
and
lahf
push
add
push
insb
bound
dec
push
or
bound
push
adc
fdivl
fcmovnb
mov
in
pop
aas
ljmp
xor
les
cmp
popa
nop
add
fcoml
rorl
ja
imul
jne
and
ret
in
pop
movsb
loopne
leave
pop
aad
ljmp
pushf
cmp
adc
das
jecxz
imul
and
dec
add
add
mov
xchg
js
call
jmp
fidivs
outsl
mov
or
popa
fists
adc
dec
mov
jg
addr16
push
outsb
shl
and
jns
dec
in
fidivl
jb
dec
das
lcall
test
fwait
push
or
stos
stos
movsl
mov
cmpsb
mov
in
aam
imul
fidivs
icebp
adc
jne
and
lods
adc
insl
jecxz
dec
jbe
adc
and
inc
mov
push
cmp
loopne
inc
lcall
inc
add
stos
mov
add
and
div
and
mov
jg
or
fisubrs
faddl
cltd
in
stc
pop
mov
aad
lahf
movsl
push
xchg
push
adc
pop
daa
mov
sbb
cwtl
movsb
cmp
out
adc
stc
jb
jl
data16
repz
imul
test
negl
ja
cmpsb
add
pop
enter
fisttps
jnp
imul
push
aam
sub
adc
jae
bound
pop
sbb
push
mov
add
pop
xor
mov
mov
push
cmp
bound
les
adc
icebp
popa
sbb
xchg
and
push
gs
popa
icebp
inc
dec
es
add
adc
sti
notl
mov
cmp
jl
imul
inc
test
cmp
loopne
nop
pop
ss
push
test
imul
insl
cmpsb
pop
fwait
xchg
pop
mov
int3
gs
mov
xor
mull
lahf
xor
lods
jmp
pop
xor
popa
addr16
fdivrs
dec
das
push
test
or
je
gs
xchg
push
leave
adc
sbb
cmp
inc
cli
sub
stos
decb
loope
lret
lods
or
ret
call
push
push
cld
aas
imul
jno
sbbb
jl
mov
mov
dec
add
rcrl
popl
mov
jnp
scas
and
pop
scas
shrl
xchg
and
xor
jg
pop
das
and
rcll
xchg
mov
insl
mov
fwait
dec
or
add
sbb
out
add
push
aaa
shl
jnp
sub
jl
xlat
dec
xchg
adc
sub
aaa
dec
push
adc
jb
pop
adc
clc
push
popl
sub
ficoms
es
cmc
xor
imull
inc
stos
test
dec
mov
xlat
add
dec
sbb
leave
mov
and
push
cltd
stos
insl
xor
into
ret
add
mov
jle
fldenv
cmp
mov
sbb
std
mov
fsubl
daa
sarb
addr16
sub
jb
ss
or
ja
repz
fildl
test
adc
push
les
xchg
cmp
mov
shr
mov
dec
mov
repz
mov
lds
in
dec
push
jb
push
mov
mov
cmpsl
les
mov
mov
push
jbe
in
xor
cmpsb
or
pop
fsubrs
jne
dec
mov
xor
dec
xor
fistps
xchg
and
insb
xor
jne
xor
add
idiv
dec
and
mov
push
jmp
test
sbb
mov
mov
daa
xchg
cmp
adc
mov
test
xchg
mov
cmp
inc
sub
mov
dec
jl
mov
lcall
pop
jge
jnp
ss
push
movsb
pop
xchg
sbb
scas
ss
cmp
outsl
xchg
pop
int3
outsl
lea
out
movsl
aam
roll
loopne
hlt
dec
nop
scas
mov
in
or
je
adc
dec
inc
inc
xor
lahf
enter
ja
call
pop
and
es
pop
movsb
ja
cmp
cwtl
push
xchg
jnp
add
ja
popw
movsl
add
pop
lea
in
cmp
pop
hlt
xor
frstor
inc
repz
add
faddl
test
cmpsl
mov
xchg
sub
insl
shrl
ss
int3
imul
sbb
push
std
mov
std
mov
pop
inc
roll
call
mov
xchg
cli
fcoms
fidivs
cmp
push
and
mov
or
lahf
sbb
icebp
xchg
cmp
imul
ret
imul
push
jp
daa
sub
fucom
ljmp
aaa
xchg
xchg
mov
jbe
scas
adc
adc
or
dec
sbb
test
xorl
pop
push
push
sub
imul
mov
outsb
cvtps2pd
fstps
outsl
sub
lock
lret
push
gs
pop
jg
adc
stc
dec
inc
hlt
aaa
movsb
adc
enter
out
or
jg
and
inc
sbb
ret
gs
jb
adcb
inc
push
and
sub
ljmp
mov
iret
lahf
lea
cmp
or
jg
inc
movsl
stc
adc
push
inc
ficomps
data16
rolb
and
fnstsw
orl
pop
mov
jecxz
repnz
add
sahf
dec
inc
mov
clc
sbb
or
stos
push
fisubs
cmp
cmp
jb
inc
and
add
sti
imul
aas
pop
xchg
sub
jmp
pop
aaa
xor
das
pop
in
pop
in
pushf
xchg
dec
lahf
jns
mov
aam
xchg
int3
shlb
push
subb
sub
ljmp
pop
push
lcall
pop
mov
mulb
aaa
fsubrl
add
jb
fstpl
sub
mov
mov
xchg
jb
push
loopne
mov
popa
outsb
pushf
ja
mov
idivl
pop
mov
dec
shlb
mov
repnz
inc
sub
xchg
scas
repz
pop
fisttpl
adc
ret
cmp
ffreep
dec
mov
das
aam
jmp
push
dec
sbb
add
repnz
jp
int
daa
jmp
add
adc
jge
sbb
add
jo
roll
mov
fcmovbe
lds
xor
negb
jnp
hlt
dec
xchg
std
data16
push
jnp
sti
mov
fmul
les
int3
jg
out
hlt
cmpsb
scas
dec
cmp
mov
call
std
stos
mov
in
fcoml
test
mov
pop
fimull
sbb
int3
popf
fbld
pop
cltd
inc
popa
push
jnp
out
and
mov
leave
and
lods
aas
mov
jns
cmp
invd
sbb
popa
lds
fdivs
insb
ret
ljmp
repnz
ret
jmp
scas
adc
sbb
mov
outsb
jne
mov
add
jo
cwtl
xchg
int3
or
add
sbb
push
ja
loope
les
inc
cmpsl
or
xchg
add
movsb
insb
xchg
scas
daa
and
xor
loope
aaa
ret
scas
mov
ret
sbb
shlb
test
test
lds
ficomps
xor
jnp
add
in
cmc
adc
iret
mov
adc
ss
cmpl
nop
icebp
pop
add
dec
mov
mov
pop
ljmp
lahf
lock
in
scas
fucomip
dec
loop
cwtl
popf
cmp
test
imul
xchg
inc
jne
xchg
or
pop
cwtl
push
fisttpll
dec
cltd
push
mov
sbb
rcrb
outsb
push
inc
add
idiv
xchg
ss
mov
cli
popf
xchg
test
mov
mov
mull
ficomps
xchg
nop
push
inc
or
imul
xchg
fucomip
ljmp
cld
add
mov
xchg
or
fildl
jo
imul
dec
jno
sbb
rcrb
jns
rclb
lock
in
jmp
dec
scas
dec
je
stc
cmp
adc
shll
dec
mov
jp
or
lahf
or
test
test
push
push
aam
mov
jo
loope
xchg
and
mov
mov
adc
sub
lret
cld
ss
xchg
lcall
out
test
cmpl
dec
lds
test
dec
call
push
fstpl
jge
fcmove
push
test
insb
data16
enter
jmp
pusha
je
mov
push
ljmp
or
adc
cmpsb
adc
shrb
dec
mov
jo
mov
pop
pop
cmpsb
mov
xchg
push
push
push
insl
add
sub
hlt
stc
mov
sahf
mov
je
xchg
jmp
cld
adc
test
xchg
mov
pop
sub
xor
int3
and
or
bswap
cmpsb
mov
inc
push
cmp
sbb
jmp
and
fistps
movsb
dec
mov
jnp
stos
sbb
mov
dec
xchg
xchg
scas
enter
mov
movsb
push
sahf
pop
loope
or
push
xor
adc
mov
push
pop
push
jmp
pop
sbb
or
mov
cmp
mov
xor
push
cmp
pop
rorb
enter
in
insb
sbb
arpl
mov
movsl
dec
loop
test
sbb
dec
call
jle
addb
jecxz
bound
fwait
scas
loop
pop
mov
fidivrs
out
in
jge
cld
fistpl
jbe
pop
jle
add
popf
loope
add
add
outsl
push
mov
popa
fwait
lret
xchg
aad
xchg
xor
dec
push
mov
sub
mov
push
fisttpll
aad
popaw
js
mov
sub
fstpt
subb
rclb
dec
div
cs
xchg
xor
das
inc
lahf
pop
cmp
dec
mov
pop
lds
aad
mov
push
addl
mov
xor
es
jecxz
jp
lods
leave
dec
mov
adc
inc
jno
jae
mov
jg
ljmp
sub
xor
test
inc
ds
ljmp
cmpsb
iret
mov
test
fistpll
sti
xchg
mov
dec
fdivrl
mov
int3
push
or
hlt
insl
xor
subl
int3
shll
jno
jle
lahf
out
add
jbe
and
adc
add
xor
mov
popa
push
sbb
pop
adc
push
adc
and
add
dec
pop
cmpsb
pop
loope
sti
add
sbb
pusha
and
pop
jmp
pop
jbe
or
ljmp
scas
imul
or
icebp
adc
nop
sti
cli
test
sub
lds
cmpsl
or
or
mov
and
stc
mov
nop
icebp
add
fiaddl
lahf
cwtl
cs
cwtl
mov
lret
push
int
iret
inc
les
data16
sub
cmp
jg
mov
mov
lcall
push
lock
lds
in
push
ja
pop
cmp
inc
jae
int
and
mov
mov
inc
or
add
pusha
popa
mov
test
xchg
and
push
xor
mov
cmpsl
int3
push
adc
ret
pop
adc
lods
xchg
pop
decl
js
inc
loop
jne
call
lods
mov
loopne
stos
sti
add
pop
xchg
xor
insb
xor
aas
inc
test
jge
mov
cmp
jg
pop
sahf
cmc
outsb
sti
adc
hlt
and
add
rolb
xor
push
adc
popa
pop
mov
hlt
shlb
fnstenv
mov
mov
mov
roll
jp
aas
jecxz
dec
out
dec
xor
cli
inc
pop
push
das
dec
dec
sbb
ss
aad
mov
repz
mov
insb
jne
add
hlt
sbbl
jne
xor
js
pusha
pop
sub
xor
loopne
xor
push
gs
cld
enter
ja
das
leave
pop
mov
jecxz
push
or
sub
mov
ljmp
xor
in
orb
dec
in
scas
push
add
or
cli
call
and
xchg
dec
xlat
jb
cmpsb
dec
cmp
sub
into
cmp
mov
outsb
stos
bound
iret
rorl
loope
add
and
xchg
in
in
repnz
sti
sbb
jmp
rorb
cltd
gs
rcll
scas
sbb
int
lret
jp
ret
bound
inc
out
mov
mov
sub
push
pop
xor
inc
fwait
push
sbbb
daa
test
mov
lods
jne
dec
xor
xchg
add
mov
push
lahf
mov
cmpsb
sub
mov
test
sbb
jne
pop
cmp
inc
push
sub
add
sti
and
enter
and
cld
or
clc
dec
add
jns
add
insl
loope
rcl
inc
out
lods
sti
rorl
pop
adc
mov
mov
push
sbb
cmpsl
pop
loope
lcall
push
into
inc
mov
out
mov
fdivr
inc
filds
adcl
stc
cmp
jns
mov
dec
lea
inc
ret
insb
push
lcall
inc
sahf
call
mov
dec
leave
sbb
sbb
adc
push
adc
out
cld
out
push
ficoms
sti
sti
pop
fwait
rcll
inc
imul
mov
je
mov
sub
shll
lcall
and
jnp
sarb
test
roll
loop
mov
ret
mov
cmpsb
scas
ficoms
imul
and
sub
xchg
adc
and
shlb
das
fdivrs
out
sub
fsubrp
shrl
pop
xchg
fisubrl
shrb
flds
push
shr
ret
ud1
push
enter
fs
jle
lcall
clc
filds
lret
sbb
add
add
sub
pop
stos
mov
jmp
push
add
jbe
inc
jge
dec
push
movsl
adc
cmp
push
sti
mov
xchg
das
cmp
sbb
les
sub
mov
inc
clc
mov
jae
outsl
add
adc
cmpsb
mov
ja
pushf
fwait
cld
mov
pushf
cmp
ljmp
mov
add
insl
das
int
adc
mov
push
cmpsl
icebp
jo
and
pop
fwait
cmp
shl
bound
ret
gs
mov
rolb
scas
sub
loope
nop
adc
leave
jg
adc
jmp
je
out
in
xor
and
xchg
sub
and
xchg
push
ret
cmp
outsb
pop
loope
arpl
add
scas
aaa
nop
data16
jno
dec
push
out
out
bound
inc
mov
andb
adc
stos
xlat
ficomps
loope
hlt
push
add
enter
fstl
rclb
mov
loope
push
nop
xchg
scas
or
inc
mov
movsl
xlat
jne
xor
jb
shr
push
outsl
pop
mov
repz
shll
inc
mov
add
lds
xor
ret
push
int
cmpsl
jns
push
hlt
mov
sub
les
fists
dec
sbb
mov
add
lock
sahf
pop
jae
mov
mov
out
sub
xchg
sub
dec
or
pop
add
mov
pushf
sahf
scas
sub
push
inc
and
cmp
xchg
cmp
gs
out
es
ja
cmp
icebp
and
aaa
xor
sbb
lcall
aad
xchg
in
pop
or
and
mov
andb
ljmp
mov
fwait
aam
js
cwtl
mov
jne
push
xor
dec
mov
lds
inc
in
movsb
leave
or
and
and
repz
filds
adc
push
subl
push
sub
imulb
and
pop
fldt
in
xchg
leave
pop
fidivrs
and
inc
movsl
mov
jo
aaa
mov
out
mov
int3
popa
data16
mov
in
in
jo
xchg
sub
sub
jl
mov
mov
imul
stos
ljmp
and
jno
mov
xchg
xchg
xor
inc
xlat
es
pop
push
fs
movsb
xchg
inc
ss
mov
rolb
xor
mov
and
cs
lahf
pop
adc
je
sbb
xchg
pop
jae
xchg
repnz
rorl
sbb
xchg
xor
jecxz
dec
add
in
cmpsb
clc
testl
inc
sub
dec
mov
and
jnp
pop
and
dec
lahf
mulb
and
mov
add
jl
jb
fwait
xchg
or
cltd
cld
repz
idivb
mov
test
sbb
pop
mov
sbb
xchg
xchg
push
mov
int3
sub
lea
sub
inc
idivl
cmc
sahf
cmp
inc
ss
testl
hlt
fstl
stc
jle
ja
sbb
mov
jecxz
in
mov
clc
pop
sbb
and
lcall
inc
dec
sub
jecxz
mov
scas
mov
outsb
push
insw
push
push
xorl
mov
in
xchg
sub
cmpb
stos
lods
ret
enter
inc
and
ja
pushf
jne
int
inc
adc
jecxz
mov
and
mov
arpl
fwait
mov
test
jo
daa
xchg
std
fnstenv
pushf
mov
push
or
or
mov
stos
aas
clc
pop
ficomps
testb
movsb
mov
mov
push
sub
sub
inc
daa
push
mov
dec
jb
les
test
cmp
imul
xchg
insb
inc
xchg
inc
mov
jo
or
push
cli
jecxz
ret
sbbb
and
mov
int
jae
jmp
mov
xchg
fists
jbe
cwtl
pushf
in
and
pop
mov
mov
and
jle
push
aas
lret
repnz
sbb
xor
push
cmp
loopne
into
aam
sbb
sbb
jae
push
or
nop
pop
sti
lock
cmovo
test
ja
mov
fnstcw
xchg
pop
xchg
add
xor
orb
rorb
mov
mov
test
stos
jmp
dec
inc
daa
adc
rcr
xchg
lret
and
test
repnz
pop
jnp
decl
dec
mov
jmp
bound
ja
popf
lods
inc
stos
mov
cmpb
aam
pop
adc
lahf
cmp
lea
cld
pop
sbb
push
push
dec
cmp
pushf
xchg
xor
cmpsl
cs
or
cmp
xor
outsl
jae
jb
repnz
add
push
jae
sbb
inc
mov
sahf
imul
pop
jne
mov
xchg
shrb
fs
jno
jbe
mov
cmp
sbb
mov
lret
xacquire
lods
loope
les
jb
add
scas
xlat
cli
adc
jg
pop
lock
mov
add
sub
and
xchg
and
mov
rcr
push
sbb
xor
cmp
push
sbb
push
sbb
and
ja
icebp
sahf
and
jmp
fstl
andl
icebp
xchg
sub
push
mov
push
arpl
in
sarb
or
inc
sub
xchg
xchg
mov
xchg
rclb
mov
nop
mov
sahf
pop
mov
imul
and
aaa
mov
insb
mov
mov
adc
mov
popf
rcrb
mov
or
mov
ljmp
push
inc
shrb
push
dec
ja
mov
roll
fs
out
and
mov
pusha
aad
mov
lea
cld
or
out
xor
aam
or
in
pushw
mov
icebp
or
add
pusha
or
mov
dec
out
or
loop
sub
pop
sub
cs
imul
pop
fcoml
fdivrs
adc
sbb
pop
mov
repz
sahf
test
imul
pop
mov
sbb
jae
dec
sub
xor
sub
adc
arpl
incb
fwait
je
xor
sub
sbb
mov
in
xchg
pop
mov
sub
cmp
andl
cmp
hlt
jmp
mov
call
cwtl
popa
pcmpeqw
int3
and
mov
arpl
outsl
dec
pop
or
add
int
repnz
lret
mov
lods
cld
push
xchg
bound
lods
lds
fwait
xchg
test
ja
xor
cmp
pusha
xchg
jecxz
rcll
jmp
lcall
daa
mov
pop
jne
sub
movsl
popf
jbe
jg
arpl
mov
dec
int3
mov
imul
notb
lods
and
sub
dec
and
imul
mov
adc
pop
out
xchg
xchg
dec
div
xchg
roll
int3
stc
mov
or
es
pusha
xchg
or
jmp
or
pop
dec
flds
push
loopne
outsl
add
negl
push
lods
jle
add
test
icebp
sbb
rcrb
mov
iret
sub
gs
ret
sub
daa
dec
push
stos
out
shrl
aam
aam
pop
lret
rolb
mov
enter
fwait
stos
adc
push
sbb
dec
mov
xchg
adc
mov
sarb
cmp
mov
and
ror
je
scas
pop
mov
mov
pop
or
and
mov
adc
mov
test
test
fs
mov
jo
div
xchg
in
lds
imul
mov
pop
jae
lcall
push
popa
dec
push
ds
push
push
mov
and
push
xchg
cwtl
lds
xchg
xchg
or
jle
aas
scas
seto
jns
sub
jae
mov
rolb
add
push
adc
dec
push
lret
pop
dec
mov
lock
sub
ret
push
imul
repnz
dec
out
mov
xchg
lods
insb
and
push
or
cltd
add
inc
nop
fdivp
sub
pushf
test
jb
fistpll
mov
xor
add
adc
inc
shlb
aam
into
mov
jge
popf
add
arpl
fwait
insb
and
and
outsl
popf
inc
mov
jno
cmp
xchg
inc
push
mov
mov
mov
adc
in
mov
pushf
cmp
add
lret
lea
inc
insb
add
sbb
pop
loope
and
pop
or
or
jnp
add
cmp
mov
jo
ficoms
ljmp
inc
push
int
and
ret
mov
mov
enter
std
aaa
mov
push
cmp
push
cmp
sub
stos
das
push
inc
out
rol
test
fildl
insb
inc
dec
dec
push
push
mov
fstpt
aam
cli
or
notl
dec
jae
xchg
mov
insb
dec
mov
mov
mov
push
sbb
sbb
cld
imul
and
arpl
mov
loope
jb
inc
mov
adc
mov
jp
xchg
clc
faddl
sarb
mov
add
push
out
adc
out
mov
cltd
or
fcmovnu
test
mov
push
jmp
clc
lock
push
xor
gs
lcall
nop
shrw
mov
ffreep
mov
adc
mov
jle
aam
stos
scas
fwait
jl
mov
jno
mov
jnp
mov
sbb
jns
pop
sbb
pop
jbe
movsb
jae
jmp
repnz
repz
shr
iret
ficompl
pop
pop
lea
in
jge
xor
mov
sbb
or
or
pop
fdivr
sub
aam
jbe
imul
xchg
and
pop
dec
mov
and
jl
or
rolb
and
fldenv
push
pop
sarl
adc
cmc
mov
inc
push
inc
clc
sub
aas
in
rcrl
fwait
mov
jno
pop
in
push
popa
mov
mov
out
or
mov
push
dec
js
inc
adc
mulb
ds
jae
lret
lcall
mov
call
pop
fsts
jl
xchg
and
mov
mov
gs
out
aam
adc
adc
fwait
dec
cmp
mov
dec
push
daa
jnp
cld
mov
les
pop
mov
mov
pop
cltd
xor
and
or
in
arpl
jg
add
sub
cmp
dec
and
xor
mov
add
mov
int
aaa
push
insl
punpckhdq
mov
sbb
add
mov
call
lret
aaa
out
inc
das
dec
lret
inc
dec
add
test
sbb
stos
hlt
mov
addr16
fimuls
sbb
and
xor
das
inc
and
cltd
popf
sub
in
insl
bound
pop
add
mov
add
mov
test
testl
sbbl
adc
jp
mov
xor
xchg
lcall
jne
int
cmp
pushf
js
mov
fdivs
ljmp
dec
add
das
push
inc
and
ss
mov
push
mov
cld
das
jecxz
scas
dec
mov
jne
fwait
and
andl
jg
mov
loopne
aaa
jl
in
dec
xchg
dec
xor
dec
les
repnz
and
sbb
ss
pop
fsubp
call
cbtw
mov
not
xchg
scas
cs
xchg
mov
lcall
xchg
jecxz
sub
and
imul
dec
push
push
push
stc
fiaddl
sbb
fadds
or
xchg
aas
mov
or
jnp
int3
pushl
inc
sbb
mov
mov
dec
pop
push
push
push
popa
imul
push
fsubl
add
stos
xchg
jl
xchg
clc
push
sarl
js
add
sbb
femms
iret
call
fidivs
or
mov
and
fld
xor
push
aam
das
shl
in
jo
lcall
inc
shl
stc
sbb
mov
ret
sarb
jmp
ret
cmc
adc
or
shll
data16
cmp
out
pop
push
outsb
sahf
xchg
mov
imul
int3
xor
xor
rol
in
mov
sbb
out
push
push
sbb
add
and
ret
cmpsb
mov
inc
jb
pusha
stos
mov
adc
pop
cmp
sarl
and
dec
leave
xchg
adc
xchg
sbb
or
lahf
sbb
jp
iret
loop
lret
fistpll
and
jg
push
xchg
in
in
stos
xor
inc
xchg
xor
xor
dec
jp
inc
dec
push
mov
dec
inc
cmp
mov
push
test
cmpsl
adc
dec
loope
popf
testl
popa
pop
push
mov
sbb
inc
and
fwait
mov
iret
pop
push
enter
sub
stos
pushf
push
jo
pop
fdivrl
das
movsl
jno
pop
pop
stc
xor
inc
mov
cmc
push
lods
aas
sbb
pop
jae
lock
lea
fdivrl
push
ljmp
mov
popa
in
lret
adc
pusha
dec
popf
lcall
call
jbe
inc
pop
scas
in
std
inc
push
sbb
dec
dec
mov
flds
mov
jns
addb
fistpl
iret
fcmovb
push
and
int
mov
ret
sbb
push
mov
and
lds
fistpl
mov
loopne
jnp
mov
dec
in
fstpt
mov
jmp
jmp
lahf
cmp
sub
icebp
pop
movsl
jp
divb
or
gs
shll
inc
inc
cmp
mov
inc
jnp
sar
je
insl
xchg
sbb
jge
sbb
fcomps
loopne
fmull
or
clc
test
push
ljmp
es
imull
icebp
out
jo
mov
repz
adc
call
push
and
stc
push
dec
test
push
jb
gs
dec
imul
and
xchg
xor
lods
sub
mov
enter
add
cmpsl
or
push
cli
stc
add
add
adc
pop
out
shll
in
adc
into
insl
mov
add
test
fnstenv
xchg
sti
push
inc
sub
cwtl
inc
dec
gs
push
mov
pop
dec
sbb
lock
or
out
repnz
push
aad
push
xchg
aad
push
xchg
pop
data16
popa
dec
jle
sahf
jns
pop
adc
jne
pushf
cmp
mov
aas
jbe
lret
outsl
sbb
adc
movsl
xor
or
cs
inc
ds
dec
mov
mov
sbb
loop
jne
jle
inc
shll
adc
add
mov
dec
test
adc
imul
push
out
gs
push
in
pop
jbe
mov
in
es
lret
lods
jge
add
mov
movl
outsl
cmp
push
mov
pop
sub
mov
repz
xor
inc
xchg
add
outsb
push
inc
jo
adc
shll
pop
sbb
into
fisubrl
loop
insl
mov
rorb
xor
xchg
inc
push
dec
mov
mov
leave
adc
xchg
push
int
mov
mov
fiaddl
xchg
in
xor
pop
cmpsl
jns
arpl
and
mov
sub
xchg
jge
dec
pop
std
ljmp
mov
pop
jae
mov
repz
leave
lret
add
pop
sbb
aad
aas
rsqrtps
inc
sbb
lods
mov
out
sbb
xchg
pop
xor
jl
ja
lock
adc
inc
add
pop
mov
ss
push
push
lods
pop
inc
iret
imul
xchg
xchg
daa
dec
push
adc
leave
jae
es
inc
fs
lods
mov
in
rorl
xor
in
in
incl
mov
pusha
xchg
jl
sub
inc
jp
imul
cmp
xchg
mov
xchg
mov
dec
fimull
adc
add
ljmp
lock
push
mov
jno
ljmp
gs
add
pop
jg
dec
rorl
andl
xor
xor
mov
jo
push
sahf
faddl
sbb
mov
adc
add
dec
enter
pushf
test
out
mov
inc
add
iret
dec
cmp
mov
test
inc
leave
ret
xchg
insl
outsb
stc
dec
mov
xchg
rorl
pop
adc
xchg
xchg
xor
mov
test
int3
fwait
lcall
xchg
fs
dec
daa
mov
pop
sub
pop
iret
xchg
pop
mov
push
mov
xchg
xor
rcr
call
push
or
adc
adc
and
mov
jns
cmpl
mov
lahf
insb
mov
inc
mov
daa
arpl
mov
xlat
stc
mov
sub
pop
adc
fcomps
sub
cmp
add
fwait
xor
and
mov
aad
jecxz
xchg
and
mov
test
xchg
jne
outsb
mull
int
jno
loop
addb
dec
sahf
sub
sub
mov
fwait
outsl
iret
out
sub
push
add
lods
sub
and
dec
mov
data16
mov
xlat
sar
push
jne
push
pop
dec
lcall
mov
and
fmuls
mov
popa
das
sbb
jnp
pop
xor
mov
sahf
movsb
movsb
std
pop
sub
mov
sub
pop
pop
mov
xchg
dec
andl
in
fstl
xchg
cmp
mov
xchg
and
enter
sub
popf
pop
fcmovu
push
jae
jns
push
pop
loop
dec
mov
in
inc
int
or
sarl
inc
xchg
leave
jl
insb
arpl
or
jno
xlat
xlat
mov
pop
sub
sbb
jecxz
jl,pt
loopne
les
sbb
loop
nop
outsl
int3
add
push
loope
daa
ret
sbbl
push
in
iret
lods
js
cli
cmp
es
std
fidivs
outsl
sbb
rolb
pusha
loop
mov
popf
jp
jmp
insb
pop
rol
leave
es
ss
pop
xchg
movsb
mov
cmp
dec
gs
ljmp
cmp
lret
das
mov
jl
fcoms
and
insl
lret
fisubrl
cmp
mov
out
and
outsl
loopne
fs
lret
out
mov
cmp
stos
xchg
repz
lahf
inc
insb
int
repz
jno
frstor
cmp
out
push
pop
sbb
shll
mov
jg
xchg
jne
inc
scas
adc
imul
test
ds
cmp
test
add
or
in
std
ret
repz
out
adc
mov
std
pop
cmc
psubusw
out
push
lcall
lea
xor
fs
inc
jno
mov
sub
or
adc
cmc
mov
dec
scas
pop
lods
movsb
dec
jbe
cltd
scas
cli
xchg
loopne
stc
pop
xor
pop
inc
xchg
fs
inc
push
stos
jg
ds
adc
mov
pop
push
mov
sub
push
outsb
inc
dec
push
adc
hlt
shll
int3
ljmp
in
lahf
xchg
push
push
mov
sub
fmull
cld
stc
sub
cmpsb
repnz
stc
loop
int
movsb
aaa
fdiv
sbb
fcoml
pop
sbb
sbb
jnp
popf
or
test
xchg
inc
repz
test
jns
adc
imul
sahf
das
dec
cli
cmc
jbe
insb
jle
push
xor
cltd
lods
mov
mov
and
cmpb
sbb
mov
enter
out
jl
cmc
gs
lds
mov
mov
xchg
push
arpl
jno
insl
mov
cli
pop
add
and
repz
mov
push
mov
mov
loope
data16
mov
add
pop
pop
xchg
fcoms
push
cld
addr16
test
call
mov
mov
js
sti
push
lods
push
ret
adc
popf
or
mov
int
sbb
stos
aad
hlt
cmp
push
in
imul
mov
sub
pusha
int3
xor
sbb
xchg
jns
into
cmc
outsl
cmpsl
mov
fisubrl
incb
cld
and
sarb
cmp
jl
adcb
scas
mov
popl
je
mov
int3
mov
mov
out
inc
inc
add
fistpll
int3
stos
xor
lret
fidivrl
mul
or
mov
add
mov
lea
adc
std
ljmp
mov
je
adc
lahf
sbb
or
sbbb
mov
push
xchg
mov
inc
dec
adc
lahf
mov
imul
xchg
xchg
lret
shrb
jmp
xor
fcomps
push
mov
dec
xor
dec
dec
adc
shl
and
test
push
lods
je
cmp
nop
sbbl
andb
and
or
mov
jae
cld
repz
push
pop
add
sub
add
repnz
lock
lret
mov
adc
mov
std
cmc
rcrl
imul
jnp
jnp
jns
sub
pop
sbb
insl
push
or
popa
jnp
shlb
lods
leave
mov
mulb
mov
mov
cmp
adc
cmpsb
shlb
js
mov
add
cmp
add
pusha
idivl
leave
fbstp
push
or
movl
js
ud1
add
call
cmp
mov
cmpsl
mov
adc
pop
imul
mov
decl
mov
sti
aad
mov
lods
jp
fcoml
mov
inc
pop
into
cli
fisubl
inc
popa
jge
jne
inc
fstpl
mov
sbb
adc
inc
add
sbb
orl
mov
xor
xchg
jnp
cld
jnp
cmp
dec
jno
sub
jle
hlt
inc
jno
jne
lods
cmpsl
shrb
mov
mov
out
jp
in
pop
mov
dec
mov
repnz
mov
jne
adc
repz
adc
pop
lods
repz
jmp
lods
inc
cmp
adc
jp
lret
or
lods
cmpsl
jo
enter
add
out
cmp
cmc
pop
scas
mov
lods
les
out
or
jnp
mov
mov
jbe
xor
insl
inc
aas
inc
dec
inc
dec
test
test
fadd
mov
sub
or
cld
adc
cltd
pop
sti
inc
push
cli
sbb
cmp
jmp
jb
jle
push
fdivs
and
neg
test
adc
lods
sbb
sbb
push
int
bound
xchg
xlat
call
xchg
fwait
ret
pop
xor
cmp
into
push
out
xor
out
jecxz
daa
jnp
pop
mov
pop
add
test
adc
hlt
mov
dec
dec
xchg
lret
das
push
inc
cmpsl
sbb
stos
lret
imul
clc
jmp
push
pop
repnz
mov
xor
inc
fdivr
xchg
adc
jecxz
and
adc
fwait
cs
push
ljmp
cmpsl
lods
daa
rorl
cmc
xchg
iret
pop
dec
dec
cltd
and
js
cmpl
in
lods
push
jmp
xchg
pop
shll
push
cmp
call
in
mov
mov
sub
mov
fmul
lret
xor
jp
jo
inc
imul
xchg
daa
dec
mov
add
mov
mov
mov
dec
inc
popf
pop
lock
arpl
aad
insb
inc
cld
sbb
and
push
inc
outsb
incl
out
and
push
pop
ljmp
cmp
push
roll
andl
xchg
lds
push
cmp
or
test
cli
pushf
fldt
cmpsb
imul
xor
mov
jae
add
call
push
pop
cmp
or
je
or
mov
xor
xchg
in
mov
mov
and
fs
xor
or
fisttpll
mov
sub
arpl
lret
adc
insb
lret
jecxz
mov
jle
mov
sahf
jne
out
cltd
mov
jmp
xchg
or
cmc
or
out
sub
mov
push
inc
fdiv
mov
std
cmpsl
xchg
adc
jne
xor
mov
ja
popf
jge
sub
sub
sub
dec
cmp
cmp
add
and
mov
jno
jo
mov
mov
dec
add
daa
and
inc
push
inc
imul
insl
pop
cmpsb
fst
insb
test
adc
mov
dec
push
loopne
and
dec
and
fadd
lret
fadd
int3
bound
das
rol
xchg
inc
and
cmove
add
fsubl
cmc
test
mov
xchg
mov
fucomip
xchg
jne
xchg
xchg
ss
out
js
into
nop
outsb
popa
push
mov
mov
arpl
cmp
xchg
lret
inc
xchg
ljmp
mov
and
lock
dec
mov
mov
mov
pop
scas
div
outsb
jp
jb
inc
cmp
das
dec
subb
push
cmp
cli
and
inc
pop
adc
pop
dec
clc
sbb
rol
add
aaa
xchg
mov
mov
inc
and
jns
lcall
stc
test
sub
imul
or
jne
mov
lds
jecxz
inc
cmpsb
xor
and
int3
into
jns
lods
cmp
out
shl
pop
int
sub
add
lods
psubsw
dec
mul
lods
and
test
mov
xor
push
push
xor
cmc
enter
jnp
or
das
sbb
test
imul
sbb
adc
cltd
gs
xor
ret
pusha
dec
ss
out
adc
aas
jle
das
ds
repz
lods
pop
test
sub
push
push
int3
sub
push
pushf
jg
daa
lea
dec
pushf
cmp
jnp
fs
jg
push
mov
mov
mov
dec
ja
fdivr
insl
outsb
in
or
pop
data16
mov
fimull
add
add
pop
testb
repnz
test
testb
test
jo
clc
jne
popf
out
mov
xchg
cmp
inc
xchg
roll
dec
mov
sbb
cmpsl
cwtl
adcl
aam
mov
mov
pop
cmp
push
sbb
mov
movsl
pop
mov
leave
pop
leave
mov
outsb
sbb
imul
jmp
cmpsb
popa
jge
cmp
mov
push
ja
xlat
jns
setg
fstp
subb
mov
ret
pop
inc
std
test
xor
sbb
cmpsl
dec
xor
lods
test
mov
pop
cs
fadds
mov
dec
mov
inc
sbb
lcall
ds
dec
pop
sub
into
in
orl
lahf
loop
in
push
lds
imul
push
aam
pusha
in
pop
push
push
dec
jmp
cmpsb
repz
fwait
sub
call
xor
adc
mul
pop
fsubrs
mov
cli
inc
ja
roll
pop
dec
sbb
or
mov
lcall
cltd
jmp
or
xchg
add
and
mov
xchg
test
jnp
jbe
add
jl
cmp
test
push
and
or
push
testl
lret
mov
sbb
inc
cwtl
cmp
xchg
push
mov
xchg
xchg
push
insb
out
aaa
push
jle
fldenv
ret
sti
orl
push
rcrl
clc
loope
loop
and
test
shr
aas
fs
stos
mov
push
pushf
or
sub
or
pop
adc
add
je
jge
arpl
dec
xchg
add
mov
subb
fstpl
mov
clc
sbb
mov
sahf
inc
lods
adc
mov
aaa
pop
ljmp
hlt
push
mov
fs
adc
and
lcall
outsl
dec
mov
adc
movsb
mov
aas
pop
and
mov
and
mov
mov
ret
jns
cmp
lock
xchg
jnp
hlt
ja
mov
mov
lcall
and
loope
sahf
cltd
push
mov
inc
xchg
sub
mov
lret
cmpsb
add
iret
cli
mov
ljmp
or
push
push
mov
or
pop
push
xor
add
jmp
mov
je
jns
or
fimuls
xchg
jno
icebp
pushl
mov
data16
fdivrp
mov
in
scas
sar
arpl
dec
adc
frstor
scas
pop
icebp
inc
popa
lds
movsb
mov
test
mov
sub
test
int
fwait
stos
and
and
lahf
jns
out
pop
or
repnz
push
or
call
popl
jge
cmp
mov
rolb
dec
cmp
xchg
jbe
mov
stos
adc
adc
pop
adc
cltd
pop
push
jnp
in
mov
lea
pusha
ficoml
icebp
push
andb
xlat
adc
ljmp
cmp
stos
call
mov
jno
sti
scas
bound
fstps
out
clc
int
movl
std
fwait
ljmp
daa
clc
mov
or
and
scas
fs
test
add
test
jbe
call
movsb
aaa
mov
fidivl
sbb
cs
dec
mov
test
mov
push
stc
ja
ljmp
add
rcrb
clc
sub
sub
inc
adc
fs
lds
push
dec
lods
test
or
cmpsb
inc
push
clc
imul
in
imul
dec
jne
inc
dec
in
test
inc
orb
adc
lcall
push
icebp
push
jo
repnz
cmc
idivb
cmc
mov
lods
test
push
add
jnp
push
out
inc
loope
mov
jbe
arpl
dec
xchg
mov
jle
lods
push
and
inc
push
lret
add
sti
stc
pop
xchg
and
in
dec
mov
sbb
mov
enter
add
mov
iret
xchg
std
ret
fnstsw
in
jno
xchg
add
push
jo
ljmp
in
xchg
adc
mov
repz
inc
in
adcb
in
clc
mov
in
xor
add
loopne
and
ja
jmp
push
inc
int3
stos
aas
sub
jge
inc
pop
mov
aaa
inc
pop
xor
out
push
inc
ss
fwait
clc
loope
inc
test
cmp
dec
xor
ret
add
xchg
sbb
xchg
dec
enter
pop
lea
mov
jns
push
fidivl
and
iret
insl
pop
sti
add
sbb
shll
or
shlb
adc
daa
test
inc
mov
in
fldcw
test
dec
fbld
pop
gs
xor
jns
mov
mov
loopne
shl
inc
int
out
mov
mov
outsb
jmp
inc
in
cmp
mov
iret
mov
cltd
inc
jae
fstps
jb
pop
xchg
in
mov
xor
xchg
ja
dec
scas
xchg
adc
clc
ljmp
add
add
in
mov
icebp
or
dec
sub
out
clc
into
fiadds
xchg
dec
lea
repz
inc
cwtl
stc
or
loopne
stc
xchg
or
mov
sub
sbb
js
shl
or
push
push
adc
lods
jae
sub
push
cmp
hlt
cmp
nop
mov
outsl
pop
ret
std
mov
ret
xchg
mov
lahf
iret
mov
adc
mov
push
xchg
out
mov
mov
lret
into
dec
dec
cltd
in
mov
pop
cmc
cld
clc
das
sbb
or
jae
sub
outsb
sub
ja
sub
and
mov
jno
cltd
xorl
test
adc
push
stos
ret
cmp
xor
dec
xchg
aas
fidivrl
in
les
xor
add
pop
mov
shr
repnz
mov
adc
repnz
addl
call
scas
clc
mov
inc
frstor
mov
daa
fsubs
ljmp
adc
jle
xchg
pop
das
pop
popl
push
clc
subb
push
or
inc
push
mov
jmp
sbb
and
ss
es
inc
mov
gs
fnsave
ret
rcr
ss
sbb
sbb
int
jnp
popa
cmpsl
jge
mov
shrb
loop
mov
and
xchg
movsl
hlt
mov
rcrl
sub
sbbl
cmp
xor
mov
pop
aaa
fwait
or
jl
cmp
pop
ljmp
adc
adc
add
fsubl
push
mov
cmp
push
leave
inc
cmp
idiv
out
sbb
or
int3
cmp
adc
andl
pop
or
inc
mov
rcrl
jns
sbb
pop
mov
pop
fs
jle
out
out
jo
sub
nop
fwait
xor
mov
stos
loop
jge
les
jg
jmp
dec
push
mov
xchg
in
and
scas
sub
es
sahf
push
xor
ja
dec
mov
mov
fs
or
stc
adc
xor
ret
fadd
je
sbb
dec
test
stc
jo
jp
and
addr16
mov
je
aas
xchg
inc
sub
ficoms
stos
jb
mov
out
jl
sub
sub
shr
sub
mov
push
push
and
data16
sbb
jmp
inc
sub
dec
pop
cmp
loopne
jg
push
lcall
hlt
push
in
dec
aam
icebp
inc
movsl
pop
lret
inc
ret
pop
ja
popa
mov
pop
ja
pop
frstor
push
mov
int
js
xor
mov
lods
cmp
out
sbb
test
cltd
add
scas
pop
sub
cmp
popa
and
inc
mov
stos
mov
popf
divb
sbb
push
jns
gs
jecxz
lahf
jg
add
mov
push
ja
xchg
aam
fidivs
movsl
addr16
out
fldl
mov
fwait
adc
div
enter
in
cmp
ja
icebp
xor
dec
inc
test
push
test
scas
ds
repz
stc
fsubrl
cmpl
lea
iret
inc
shll
push
pop
sar
push
std
fnstenv
jp
je
inc
enter
ljmp
inc
subb
scas
sbbb
cmc
pop
imul
stos
sbb
mov
sbb
xlat
out
xchg
dec
std
leave
mov
fdivs
clc
sbb
adc
sbb
and
mov
jne
arpl
add
push
jecxz
dec
ljmp
and
cmc
mov
sbb
out
xchg
imul
pop
cltd
mov
push
xor
pop
and
mov
enter
imul
push
in
out
sbb
adc
sti
add
in
sub
cltd
mov
sub
sub
idivb
clc
mov
out
addr16
cli
in
fmull
dec
dec
outsb
pop
pop
imul
xor
or
sub
xchg
imul
add
inc
cmp
dec
test
push
push
scas
leave
pop
stc
rcrl
cltd
push
dec
push
pop
xchg
mov
dec
mov
add
enter
in
imul
es
xchg
je
out
rol
mov
pop
out
pop
es
jl
hlt
sbb
dec
inc
mov
mov
inc
xchg
sbb
jecxz
pop
iret
dec
test
push
arpl
fs
jns
adc
xchg
mov
inc
addl
cmp
jge
cmc
aam
push
jge
stc
popa
out
xchg
add
pop
out
popa
test
popf
xor
add
and
adc
pop
pop
mov
or
dec
shll
fcomps
jnp
pop
jns
incl
dec
enter
mov
movsb
gs
test
rcll
jae
jo
and
mov
bndstx
lock
stc
ds
cmpsb
add
mov
inc
jbe
jl
pop
mov
test
mov
repz
bound
dec
outsb
and
add
cmp
cmp
pop
cld
nop
addb
xchg
pusha
mov
pop
pop
inc
pop
jl
jge
push
jl
fwait
rclb
xchg
loopne
mov
push
pop
js
xchg
add
sbbl
xchg
mov
xor
clc
cmp
xchg
mov
icebp
and
jb
iret
mov
add
rclb
pusha
push
shlb
sub
jno
xchg
cwtl
jmp
imul
mov
rcr
nop
xchg
push
inc
dec
sahf
in
and
mov
pop
or
ficompl
or
lcall
mov
js
mov
aam
add
stos
out
inc
outsb
fs
lods
jge
mov
test
sub
jg
jp
mov
mov
cmp
inc
sub
mov
adc
jmp
xchg
cmp
das
push
pop
mov
icebp
pop
xor
mov
xchg
adc
adcl
dec
adc
in
rorl
and
jmp
inc
fwait
inc
dec
pop
les
and
mov
adc
iret
and
inc
push
in
mov
test
loopne
push
push
pusha
dec
aam
xor
or
pop
addb
pop
lea
daa
xchg
sahf
sub
jl
cmpsb
mov
cmp
pop
and
adc
add
gs
inc
scas
and
add
push
inc
lahf
imul
sbb
jmp
ljmp
test
test
es
dec
lods
cmpsl
test
mov
sub
outsb
xchg
mov
mov
movsl
sahf
and
test
shlb
mov
or
add
out
jno
mov
add
lods
sbb
mov
test
add
xor
bound
imul
mov
call
fcomip
mov
inc
or
orb
jp
xor
xor
pop
mov
pushf
into
jl
outsb
jecxz
and
ds
xchg
pop
in
xor
or
inc
lret
daa
push
dec
js
mov
ja
sbbb
inc
sbb
pop
sub
jnp
lock
mov
cmc
sbb
push
xlat
fstpt
rorb
jmp
int
mov
ss
push
mov
into
xchg
jne
addr16
leave
movsb
jae
clc
mov
jnp
xor
or
hlt
push
cmp
sub
dec
adc
sti
sbbb
mov
into
rcr
xchg
bound
mov
movsl
sub
cmpb
mov
add
movsl
std
ret
pop
xlat
cmpsb
push
fs
pop
test
outsb
lea
int3
dec
in
lea
ficomps
lock
repz
insl
mov
and
arpl
add
cmp
mov
adc
jbe
mov
xchg
inc
cs
clc
in
adc
enter
ret
push
xchg
mov
push
lock
loopne
mov
movlps
test
and
call
push
das
mov
pop
rorl
mov
mov
sub
adc
fdivp
mov
mov
xor
add
js
imul
ret
fstps
dec
jge
mov
repz
inc
mov
jp
xchg
xor
mov
leave
xlat
mov
push
mov
inc
push
scas
icebp
stos
ror
pushf
jmp
cltd
push
cmp
daa
push
movsb
cmpb
or
add
rolb
or
jmp
mov
imul
sahf
inc
inc
or
jmp
cmp
pop
jbe
mov
dec
pop
mov
push
sahf
and
pop
aaa
mov
mov
jo
addr16
mov
lcall
jmp
notl
adc
xchg
les
insb
cmp
in
lcall
imul
mov
push
loope
mov
sub
dec
je
testb
cld
pop
cmp
lock
push
in
outsb
nop
gs
shll
pop
or
in
xlat
mov
incl
das
fcomp
push
clc
loopne
test
call
outsl
mov
repnz
mov
mov
test
adc
mov
inc
test
shl
adc
cwtl
jno
test
jmp
xchg
sbb
sbb
movsb
sub
xchg
sbb
jae
js
pop
ficoml
mov
idivl
bound
pop
lea
sbb
nop
popa
ja
lret
adc
add
add
outsb
rcr
mov
test
ja
xor
mov
shl
sub
dec
xchg
adc
mov
fadds
leave
clc
insl
dec
mov
fistl
dec
xor
gs
push
icebp
inc
mov
mov
leave
xchg
imul
mov
push
and
nop
xchg
mov
pop
stos
jg
or
pop
jle
decb
push
pop
mov
fiadds
shl
xor
shl
pushf
stos
enter
outsb
andb
mov
cmpsb
scas
pop
jge
fs
jge
xor
and
mov
or
nop
adc
sbb
mov
xchg
add
pop
out
mov
push
sbb
fsubl
icebp
leave
push
xchg
pop
sahf
push
pop
xor
ss
inc
mov
insl
jge
add
imul
inc
mov
push
pop
out
xchg
lea
add
and
push
fwait
add
rorb
cs
mov
ds
mov
or
cmpsl
push
inc
lods
push
push
mov
repz
or
in
pop
mov
fnstsw
bound
inc
jle
mov
rclb
mov
pop
pop
dec
inc
mov
and
out
add
adc
mov
dec
push
xor
jae
fs
test
rolb
pop
jne
mov
enter
mov
hlt
fidivrs
inc
out
andps
push
lahf
int
or
dec
fstpl
jmp
dec
cmpsb
out
and
dec
sub
imul
into
jecxz
enter
and
movb
lock
or
gs
pop
add
mov
mov
mov
js
stc
inc
xchg
inc
xor
fists
icebp
call
in
adc
cmpsb
jp
pop
xor
int
adc
add
fs
cli
or
jmp
push
pushl
and
aaa
xor
sbb
out
and
dec
push
aas
scas
es
sub
dec
cs
add
cmp
call
adc
shr
sahf
jne
repz
mov
jecxz
lea
ja
pusha
int3
or
add
orl
cld
and
mov
pop
xor
push
xchg
fcomp
xor
movsl
inc
sbb
or
mov
ss
shll
pop
lret
les
inc
add
loope
sti
dec
mov
cwtl
pop
cmp
mov
jae
dec
in
sbb
add
jp
xchg
enter
jle
insl
popa
add
push
dec
xor
lock
add
lods
je
jecxz
jbe
jg
mov
jl
push
mov
xchg
mov
nop
push
cmp
std
cs
fxch
loopne
dec
inc
pop
nop
ret
stc
and
stos
subb
mov
mov
iret
mov
xor
andb
cmp
push
sub
pushf
push
push
lret
ja
adc
mov
in
jne
sub
movsb
lds
xchg
ds
movsl
xor
cmp
aad
jp
xor
out
jo
ds
jge
pop
push
out
aam
out
and
fbstp
test
and
loopne
sarl
mov
or
cmp
jecxz
vcvtsd2si
lds
mov
mov
imul
fwait
loope
adc
int
shrb
lret
cmpsl
sarl
lock
mov
sarl
pop
jp
xor
popa
xchg
rorb
sbb
lea
jnp
mov
inc
mov
dec
adc
in
push
pop
loop
sbb
insl
out
cwtl
sti
pop
pop
or
test
aam
popf
dec
mov
mov
mov
inc
sbb
add
xchg
push
insb
fxtract
push
inc
mov
ficompl
sbb
stos
add
inc
or
mov
loop
movsl
out
ret
arpl
int3
popa
clc
clc
push
imul
pop
int3
aad
out
fdiv
cmp
js
aas
inc
clc
faddl
or
push
mov
mov
mov
sub
jg
in
jo
push
mov
sbb
fdivl
movb
rcrb
dec
and
in
aaa
loop
jne
popa
ds
add
xor
pop
clc
and
dec
flds
cs
testl
sbb
mov
lret
ds
xchg
sub
imul
jmp
inc
es
stos
iret
push
inc
pop
popa
pop
xchg
incl
xor
pop
imul
aas
push
arpl
out
mov
sbb
stc
jl
xor
push
js
ja
lret
add
mov
jp
fisttpl
repz
xlat
es
scas
fs
cmc
push
push
lods
cs
jle
xchg
js
push
imul
jecxz
int3
iret
xchg
push
bound
cmpsb
or
lcall
jecxz
push
adc
movsl
sub
das
mov
insb
call
outsl
and
pop
pop
jno
fbld
repz
dec
mov
ljmp
lcall
pop
or
cmp
jmp
xchg
mov
in
mov
std
in
jne
mov
outsb
aaa
sahf
mov
ljmp
test
fnstsw
mov
outsb
fs
mov
adc
and
sbb
push
mov
jp
cwtl
cmpsb
jnp
lock
iret
int3
adc
es
sbb
hlt
neg
ds
or
shlb
imul
sbb
dec
into
clc
adc
sar
push
push
push
call
cmp
leave
aam
sub
xchg
paddusw
addr16
inc
jp
call
daa
dec
dec
lods
xsaveopt
out
xor
sub
add
jno
xchg
cmp
mov
out
mov
cmpsb
ss
out
push
cmp
mov
cmp
mov
out
icebp
xchg
arpl
push
cmp
push
adc
in
ret
retw
lahf
shll
push
push
mov
adc
push
repnz
sub
lods
je
outsl
cmc
dec
mov
dec
ret
xorl
push
xor
or
inc
icebp
dec
iret
addr16
sti
mov
adc
shlb
jmp
inc
jo
mov
not
int3
popa
ja
dec
aam
arpl
add
jb
pop
xor
scas
inc
jns
or
imul
push
rorb
sahf
xlat
mov
sub
fwait
fs
dec
scas
nop
cltd
add
js
push
into
jl
inc
pop
add
pop
dec
cs
lret
ret
popl
cmc
arpl
lock
cmp
bound
and
je
or
inc
jno
inc
mov
gs
repz
inc
jno
in
roll
xchg
push
gs
xor
jmp
add
idivl
push
pop
mov
jle
inc
ds
xchg
mov
cmp
and
divb
inc
popa
adc
and
out
pop
shrb
dec
pop
cmp
xor
pushl
ret
xchg
adc
cmpsb
push
dec
test
and
pushf
loopne
movsb
xchg
bnd
gs
hlt
add
push
xor
stos
xchg
adc
adc
lods
in
jecxz
out
imul
xor
rorb
mov
lods
mov
cmp
dec
cwtl
test
addb
adc
popa
xchg
dec
xchg
mov
xlat
xchg
arpl
sbb
or
int3
adc
fstpt
ret
inc
adc
fidivs
in
dec
in
dec
lds
inc
sbb
pusha
mov
stos
pop
pop
std
cmp
adc
jg
adc
into
dec
ss
loope
std
dec
sub
cmc
dec
dec
jnp
jnp,pn
in
popa
icebp
mov
pop
jmp
adc
or
adc
jne
mov
in
mov
add
xchg
inc
rcrb
std
mov
int
pop
ljmp
pop
into
sub
jb
mov
mov
repz
scas
insb
rcrb
add
mov
flds
ret
icebp
cld
and
cli
scas
mov
sbb
shll
lods
out
imul
loop
mov
fcoms
pop
adc
lods
sbb
and
mov
push
mov
aas
push
lret
insl
cwtl
int
dec
jne
mov
negl
ret
fisubrs
push
adc
outsb
jle
leave
and
sub
into
icebp
mov
add
push
mov
sub
lea
push
push
cltd
or
pop
daa
in
push
or
enter
sub
push
mov
add
fwait
xchg
ja
dec
xor
and
into
mov
repnz
mov
dec
arpl
fstl
int3
mov
cmc
cmp
push
jge
lods
and
xchg
inc
or
jmp
mov
jb
mov
add
sbb
pop
inc
cmp
mov
cmp
mov
aam
fcoml
pop
insl
sarb
scas
jmp
cmpsb
jns
test
fs
fucomp
imulb
ret
cmovno
xchg
fsts
cs
ljmp
cmpsl
mov
gs
adc
je
lods
out
push
xchg
stos
outsb
adc
mov
push
dec
test
mov
cmc
out
pop
lea
test
jle
or
sbb
bound
lds
adc
sub
mov
scas
jo
inc
icebp
push
or
loopne
in
fsubrp
pop
test
add
enter
std
fmuls
lds
shlb
mov
jl
cmc
mov
data16
xchg
cld
aam
sbb
iret
mov
inc
mov
nop
and
stc
inc
mov
or
cmp
pop
push
jae
or
out
es
aam
inc
repz
sbb
into
and
dec
out
cli
sub
popa
and
sub
pop
mov
lahf
pop
outsl
clc
push
ss
mov
sub
pop
lea
sbb
pusha
test
mov
sub
test
mov
dec
push
push
inc
repz
pop
xlat
xchg
lahf
test
cmpsl
pop
int
std
xor
and
lret
xorl
repz
call
push
enter
filds
int
in
aaa
cltd
or
subl
lret
and
shl
pop
jne
les
clc
ds
push
push
pop
push
add
jmp
pop
push
mov
iret
push
into
cs
test
outsl
xor
jg
mov
pop
andb
xchg
ds
mov
xchg
int
movsb
stc
sub
mov
inc
pusha
lea
rolb
shll
xchg
iret
inc
stc
pop
cwtl
sti
inc
testb
test
pop
xchg
enter
and
lods
or
inc
fisubrl
xlat
rclb
outsb
inc
outsl
mov
cmp
sbb
xor
imul
scas
daa
jp
xchg
call
pop
xchg
jno
loope
mov
in
lahf
ror
mov
push
pusha
rorl
push
pop
mov
daa
repz
test
mov
in
nop
jmp
xchg
shll
negb
fcoms
cmp
lret
movsb
js
mov
inc
xchg
stc
dec
xor
test
jno
dec
js
lock
call
inc
mov
pop
out
mov
mov
ja
fisubrl
cmp
movsl
scas
xchg
dec
out
cmpsl
out
incb
jp
adc
jbe
sbb
sbb
push
je
sub
lods
lea
repnz
shlb
sbb
mov
mov
outsb
mov
clc
push
push
in
aaa
push
scas
cmp
cmp
lock
orps
fst
pop
push
jno
movsb
in
inc
lea
clc
sbb
push
lahf
pop
lea
sbb
std
lds
sbbl
push
ret
insl
aaa
sbb
dec
loopne
iret
ss
add
adc
jb
pop
inc
mov
orb
jp
je
adc
hlt
push
jbe
cmp
aam
leave
fs
sar
imul
mov
xchg
test
andb
adc
push
mov
mov
fwait
xchg
push
mov
inc
push
test
idiv
test
pop
xor
jne
repnz
mov
sub
xor
les
sahf
mov
pop
movsl
stos
int
mov
and
nop
or
dec
push
adc
cmpsl
fstpt
push
push
and
call
je
je
mov
repz
sti
jmp
sti
push
adc
cwtl
cmp
out
aaa
ficomps
ss
jae
cs
sub
mov
add
stc
leave
iret
xorb
ret
sub
mov
sbb
vcvttsd2si
mov
subl
imul
jmp
sub
ja
enter
imul
and
xchg
dec
les
clc
jg
test
aad
sub
jnp
clc
adc
les
arpl
lock
test
rclb
lahf
and
adc
shr
mov
add
fdivrl
inc
jno
add
sbb
imul
push
les
fildl
pop
test
movsb
inc
xlat
mov
icebp
mov
push
jns
cli
mov
mov
mov
or
iret
pusha
lret
lods
stc
ja
jle
and
push
sar
and
dec
aam
cmp
test
lods
jae
inc
daa
sub
leave
jmp
fldcw
mov
repnz
push
hlt
cmp
jae
mov
jb
xlat
aad
sahf
adc
mov
fdivl
mov
inc
cmc
cmp
cmp
dec
mov
int
lret
pushf
add
andb
outsl
ret
pop
push
idivb
lahf
push
inc
jl
movsb
adc
pop
sub
jecxz
cs
shl
subb
arpl
popf
jnp
cmp
pop
mov
loope
xor
outsl
mov
add
and
insb
jnp
sub
add
mov
mov
pop
sbb
jle
push
aas
sbb
dec
cli
lock
hlt
cmc
leave
ret
imul
xchg
pop
push
mov
mov
stc
push
sbb
fs
loope
lods
fwait
and
arpl
das
int
adc
pop
cmpsb
dec
mov
add
sbb
pop
test
push
sub
iret
into
adc
dec
std
push
rorl
test
mov
jle
jo
jne
stc
shlb
data16
pop
jmp
jle
xchg
popf
movl
lods
xchg
cmp
in
inc
push
jbe
repz
mov
enter
jo
mov
into
ja
lea
inc
loopne
aad
cmpb
inc
scas
add
cmp
push
mov
lcall
aaa
insl
shl
lahf
popf
mov
adc
test
int3
int3
mov
pop
std
and
sub
sbb
pop
mov
push
jb
testb
jo
or
push
jo
cmp
es
sub
jae
sbb
jle
inc
push
push
out
jae
stos
dec
ss
lret
mov
cmp
in
mov
add
ljmp
out
movsl
or
nop
or
xchg
mov
aad
xor
mov
je
pop
mov
int
sbb
jne
les
pop
sbb
jecxz
and
lret
bnd
pop
push
test
inc
aad
jge
das
sbb
mov
pop
mov
gs
sbb
adc
add
cld
out
adc
and
psraw
push
fcmovnb
icebp
std
icebp
out
mov
xor
sbb
inc
out
adc
in
cmp
jne
xor
les
sti
sbb
cmp
int3
and
jl
shl
dec
fcoms
sbb
lcall
sub
daa
and
xchg
jnp
orl
in
movsb
inc
cmp
lea
movsl
andb
repz
xor
in
mov
sar
mov
enter
jne
xor
shll
bnd
dec
je
push
sbb
sbb
addr16
pushf
imul
lahf
inc
add
mov
movsb
cmp
cmp
imul
pop
in
sub
jo
add
mov
in
scas
sbb
inc
lods
cmc
lret
xor
mov
mov
mov
mov
lret
les
orb
xor
mov
pop
sbb
cmpsb
dec
insb
jle
adc
mov
mov
leave
jmp
sbb
rcll
dec
mov
lock
cmpsb
nop
ja
pop
push
mov
popf
sbb
scas
jo
fimull
sahf
bound
or
shl
lea
movsb
mov
inc
loopne
mov
repnz
cmp
mov
bound
rorb
mov
xchg
fistpl
aaa
sbb
cmpsl
fs
xchg
mov
ret
ret
mov
cmp
add
pushf
mov
repnz
pop
std
mov
sub
fxch
pushf
loopne
dec
test
xchg
dec
leave
iret
xor
mov
jno
neg
std
data16
enter
in
ja
cmpsl
inc
imul
inc
add
mov
shrl
jmp
sti
add
aam
push
cltd
or
xchg
push
sbb
mov
pop
arpl
dec
lret
push
sbb
dec
cld
sub
stos
outsl
inc
rclb
test
test
in
enter
sahf
data16
outsl
mov
mov
jmp
movsl
add
call
push
mov
xchg
sub
pop
gs
and
inc
sti
pop
mov
adc
je
popa
cld
xlat
or
push
int3
push
addl
in
inc
into
mov
repnz
or
jmp
fdiv
xchg
add
add
lock
outsl
xor
clc
jo
add
aas
sbb
imul
and
and
ja
xor
push
dec
xlat
push
or
mov
mov
or
shld
adcb
movups
jge
fisttpll
mov
jne
es
mov
xor
add
inc
add
imul
hlt
rclb
adc
jne
vpcmpeqd
pop
repnz
pop
rclb
dec
mov
jg
test
aam
call
popf
inc
sub
inc
jge
xchg
push
lret
inc
out
xor
mov
movsl
mov
ret
add
loopne
js
pop
jecxz
inc
add
nop
repnz
jae
test
mov
sbb
or
lret
jns
push
mov
imul
add
jae
cs
sub
push
push
mov
and
adc
movsb
and
sub
ljmp
test
movsb
repz
cld
adcb
jae
lea
movsl
sbb
pop
pop
insb
add
in
paddusw
inc
push
mov
sub
jae
in
add
rorb
icebp
hlt
adc
std
ror
cmp
dec
std
lcall
out
mov
inc
sbb
pop
cmc
orl
clc
push
sbb
les
pop
divl
jle
icebp
daa
fdivrs
inc
and
out
sub
imul
mov
push
dec
aad
push
fwait
xor
mov
sub
xchg
push
outsb
imul
mov
xor
hlt
push
lret
jno
cmp
movsl
cmc
daa
and
ljmp
ret
sbb
cli
imul
bound
lahf
or
mov
dec
lret
pop
aaa
popf
dec
das
loope
hlt
fcom
xlat
imul
cld
sbb
mov
out
xor
fisubrl
shlb
sahf
sbb
in
pop
fs
or
inc
cmpsb
jmp
lea
cwtl
movsb
repnz
call
imull
fnstsw
call
jg
jns
fnsave
push
mov
movsb
notl
mov
push
ja
outsb
xchg
inc
xor
iret
jnp
and
pop
sbb
lcall
push
or
add
push
mov
mov
int
fcmovb
ljmp
lahf
add
stos
pop
add
sub
call
leave
sbb
rolb
wbinvd
sbb
push
jecxz
and
inc
mov
sub
pop
inc
mov
cmp
cmp
and
pop
push
ds
adc
push
sub
jecxz
or
jb
mov
dec
fdivp
test
fiadds
push
and
movsb
aad
mov
push
jo
in
test
ja
xlat
pusha
int3
adc
inc
ss
mov
mov
ret
mov
jmp
sbb
ret
jnp
cmpsb
cltd
inc
push
sub
sahf
icebp
cmp
mov
cli
insb
js
cs
shrl
lret
mov
aas
and
shl
push
xchg
lret
cwtl
cmp
mov
or
mov
xchg
inc
cmp
inc
xor
aas
sub
movsl
inc
test
push
and
orl
dec
clc
xchg
adc
test
cmp
pop
and
dec
sub
cltd
fsubp
dec
cmp
cmpsl
push
cmpsl
insb
or
cld
fstpt
ss
jnp
sub
fiadds
imul
lret
pop
and
int3
scas
into
pop
push
lea
inc
ds
in
icebp
aad
push
shr
loop
ss
cmp
ret
stos
cmp
jne
leave
push
jne
fimull
lea
testb
inc
aam
cmpxchg
sub
scas
and
mov
push
push
je
pop
outsb
sub
inc
in
ds
out
hlt
and
je
add
imul
mov
test
out
cld
push
lahf
ljmp
and
xchg
fcmove
in
fidivs
sub
mov
inc
push
jge
sbb
shl
jno
sbb
loopne
and
loop
mov
inc
aaa
lret
inc
cltd
sbb
leave
dec
inc
mov
dec
push
cwtl
mov
sub
hlt
ljmp
xchg
mov
js
out
xchg
inc
imull
and
push
pop
or
ret
ds
push
jbe
mov
sarl
js
sarb
adc
dec
stc
out
sub
das
sbb
dec
pusha
ds
mov
push
outsb
out
and
popa
sar
out
mov
ds
fmull
dec
xchg
xchg
sbb
fdivl
cli
ljmp
xchg
pop
push
clc
sbb
pop
repnz
stc
leave
call
jno
in
xorl
inc
xchg
jo
mov
push
lods
call
and
push
and
cmc
lcall
sub
into
loope
subb
call
xchg
hlt
stc
imul
xorl
xor
jg
out
fwait
cmp
ss
cmp
inc
pop
stos
stc
cmc
jnp
fistpl
inc
and
adc
mov
or
mov
shrl
jns
lds
mov
pop
cmp
adc
dec
jmp
insb
mov
mov
inc
push
popf
dec
js
stc
xchg
ret
xor
nop
fstl
mov
pop
push
cmp
popf
test
fbld
and
aaa
add
dec
rorb
push
ljmp
dec
jmp
cmc
hlt
adc
popa
and
push
lea
sbb
sub
lret
xor
sub
jo
push
dec
mov
daa
xlat
iret
repz
dec
sub
push
jge
cltd
pop
xor
pushf
pop
out
xor
call
pop
push
rcll
std
ret
inc
inc
in
notb
rcrl
mov
push
sti
outsb
xor
fnstsw
cmc
xlat
scas
pop
xchg
jp
jecxz
cld
and
sbbl
mov
mov
add
js
adc
sub
nop
lods
lods
xchg
xchg
inc
dec
jge
fisubs
inc
stos
pop
pusha
lds
mov
jl
cmp
vunpcklps
xor
testb
or
shr
pusha
cmc
cli
add
dec
xor
scas
and
cmp
and
cmc
sub
inc
out
inc
mov
ja
stos
ljmp
sbb
out
jmp
mov
xchg
jle
lcall
xor
pop
push
mov
dec
lock
outsl
ds
out
mov
mov
movsb
daa
into
daa
lods
sub
imul
xchg
mov
test
mov
mov
scas
rol
ucomiss
and
sbb
cmp
pop
xor
mov
std
loopne
sbb
inc
ja
mov
or
xor
mov
push
addr16
mov
pop
mov
cmp
xor
jge
inc
xchg
jmp
imul
mov
ljmp
mov
rcrl
inc
mov
ret
pushf
push
add
out
fcompl
scas
jo
inc
call
xchg
pop
lods
push
mov
stos
adc
addl
in
pop
imul
pop
cld
mov
cmp
fildl
es
stos
jns
lods
shr
je
push
or
add
mov
cltd
stc
jmp
dec
jno
dec
push
pushf
subl
inc
push
push
jg
add
xchg
gs
sub
pop
push
shr
aas
lcall
out
movsl
push
cmc
out
imul
ret
repnz
loopne
inc
jbe
dec
leave
dec
dec
and
cmp
dec
mov
pop
nop
arpl
mov
adc
fsubl
adc
xchg
jnp
test
out
movzwl
fnstcw
daa
test
ja
arpl
ret
aas
lret
mov
in
cmp
mov
ja
xlat
add
cmpsl
jo
int
adc
ja
test
flds
add
pop
sbb
cltd
jmp
test
addl
adc
xor
fistpl
add
andb
xlat
std
lods
xchg
xchg
xchg
imul
or
aas
dec
lock
cli
sbb
out
inc
pop
cmp
in
sbb
into
int
lock
test
mov
cmpsb
xor
rorb
icebp
add
mov
and
insb
sub
cmpsb
or
mov
mov
cmp
fimuls
ficomps
sti
add
lds
sbb
xor
inc
adc
jo
fld
jmp
aad
lret
xor
mov
cs
inc
add
mov
adc
sbb
adc
push
ss
mov
mov
pop
out
data16
mov
nop
roll
leave
xorl
jae
mov
push
mov
mov
inc
sbb
jmp
pop
adc
aaa
divb
jno
loopnew
xchg
jbe
or
pop
xor
push
mov
adc
cld
aaa
js
sub
sbb
pop
stc
lock
int3
sub
pop
pop
loopne
orl
mov
call
std
pop
and
mov
inc
mov
pop
push
shl
or
and
sar
repnz
lea
xor
inc
sahf
clc
movsb
dec
jo
jecxz
adc
test
push
andl
je
imul
jmp
add
and
push
xchg
mov
aaa
jl
pusha
mov
or
dec
inc
mov
pop
add
ss
testl
shr
push
or
lock
popf
jnp
sbbl
mov
jge
mov
adc
sub
stc
call
mov
pop
sub
xchg
das
repnz
inc
ds
ds
cmp
sub
mov
jge
push
in
mov
pushf
outsb
jo
pop
lret
outsb
jle
loope
add
or
jle
mov
add
rorb
repz
cli
push
movb
and
pop
test
push
jmp
icebp
xchg
in
push
cltd
pop
and
cs
frstor
cmc
outsl
or
pop
and
imul
pop
ficoml
pushf
xor
pop
shr
inc
sub
test
int3
push
lcall
mov
data16
divl
xchg
mov
sbb
stc
add
jo
inc
xorl
test
shl
sahf
lret
stos
cs
call
push
push
mov
push
outsb
push
in
sub
jle
lret
jecxz
push
clc
aas
mov
adc
and
sbb
in
sub
lcall
xor
xor
mov
inc
repnz
mov
mov
pop
pop
or
aas
loope
shrl
fwait
int3
cltd
mov
fildl
loope
stos
loop
stc
lds
mov
in
loopne
mov
jge
mov
jbe
xor
dec
test
mov
and
call
mov
pop
pushl
lea
aas
scas
das
aas
ljmp
jecxz
jp
mov
shr
mov
push
nop
cwtl
nop
lret
movzwl
mov
mov
into
inc
arpl
xchg
mov
xor
outsl
je
push
xor
ljmp
push
or
pop
xchg
adc
mov
pop
cmp
inc
or
add
stc
pop
rolb
mov
lret
pop
add
jmp
mov
cmp
mov
fs
dec
repz
aad
jo
sub
and
cmp
push
jnp
xchg
sbb
push
popf
clc
scas
mov
sahf
xchg
add
push
push
mov
mov
test
pop
in
fiaddl
cld
xor
arpl
inc
repz
pop
call
jp
cmp
mov
insl
addr16
sub
xor
sbb
cmpsl
loope
roll
add
push
leave
andb
inc
xor
jle
add
cmc
xchg
xor
dec
movsb
xor
adc
fucomip
jmp
insb
divl
add
pop
adc
fbstp
ja
cld
cs
pop
in
mov
popa
test
andl
sbb
mov
mov
hlt
repz
or
into
add
push
js
push
pop
mov
xor
xor
push
inc
pop
repz
stos
or
mov
xor
icebp
test
sbb
mov
pop
sbb
subl
idivb
mov
lods
outsl
sub
xchg
jl
xor
in
xchg
sub
inc
sub
jns
je
ds
lds
push
mov
es
mov
mov
push
mov
rcl
sub
jae
mov
dec
pop
jns
push
add
adc
scas
and
fstpt
test
or
pop
imul
push
cld
dec
inc
jge
adcl
adc
hlt
in
subl
in
das
scas
jne
xchg
icebp
or
hlt
shrl
lea
jl
ret
push
xor
icebp
clc
repnz
icebp
cmc
xchg
pop
insb
push
data16
jnp
push
enter
icebp
or
jmp
scas
and
jl
fwait
xchg
clc
cmpsb
inc
or
lcall
jno
loop
subl
movsl
jae
push
dec
rorb
inc
adc
nop
test
mov
jp
out
inc
cltd
sahf
cs
sub
mov
scas
out
cmp
mov
outsb
mov
test
nop
stos
xchg
imul
setb
prefetch
fmuls
xchg
mov
stos
and
push
and
cmp
mov
mov
lds
fcom
outsb
lret
push
insb
ss
lahf
lds
loope
cmp
div
mov
aaa
loop
or
sub
das
dec
pop
dec
fucomip
fptan
jge
jmp
loopne
rolb
jmp
loope
adc
adc
cmpsl
push
xchg
stc
shll
or
pushf
cmpsb
or
sbb
cli
xor
dec
dec
xchg
lcall
loope
aad
stos
movsl
mov
mov
mov
cmp
decb
out
mov
std
pushf
orb
imul
inc
push
jle
nop
push
insb
orb
in
scas
cmp
sbbl
adc
jge
repz
xor
shl
test
aad
xchg
imul
pop
cmp
lcall
stos
cmp
inc
icebp
pop
rep
jns
inc
fs
cmp
sub
ror
pop
cmp
mov
pop
cs
sub
dec
sbb
add
cmp
in
ss
insl
fildll
ds
push
adc
mul
lcall
imul
dec
jo
mov
push
test
jne
test
loop
dec
out
loopne
cmpsb
imul
or
in
scas
ror
aaa
sbb
loop
pop
mov
or
mov
icebp
push
push
ret
sub
mov
xor
cmp
jo
push
and
icebp
mov
push
notl
xchg
mov
xchg
dec
push
jge
adc
test
jbe
mov
cmp
stos
cmp
mov
stos
or
mov
mov
push
inc
call
xor
sbbb
pop
jb
jmp
sub
pusha
test
test
dec
and
fwait
call
sub
aas
sbb
nop
adc
movsl
dec
xchg
daa
xor
jnp
insb
sbb
jp
lds
mov
pop
cmp
xor
inc
es
pop
adc
xlat
pop
jnp
xor
das
add
inc
loopne
or
mov
scas
iret
lahf
lods
sbb
test
jge
sub
cld
mov
iret
push
mov
sahf
in
call
es
loope
cmpsb
pop
leave
cmpsb
mov
iret
ja
cmp
xchg
loope
xor
push
adc
and
xchg
lods
pop
pop
fs
mov
pusha
sub
cmp
mov
mov
repnz
aaa
shlb
bound
insl
mov
xlat
pop
call
das
lea
test
push
leave
in
lods
loopne
pop
fidivs
addb
mov
out
stc
std
adc
or
mov
and
adc
xchg
int3
scas
mov
inc
adc
das
daa
cmp
pop
push
loop
loopne
std
out
inc
xor
mov
stc
sub
int3
das
loopne
jge
mov
or
or
in
dec
call
leavew
lods
add
or
sub
or
div
cwtl
lcall
mov
dec
and
sbb
dec
insb
fwait
cmp
dec
add
aaa
sahf
push
repnz
and
mov
mov
sbbb
mov
mov
arpl
and
xor
mov
jne
dec
cltd
jbe
outsl
inc
pusha
mov
in
mov
mov
adc
sbb
adc
das
ja
shr
jmp
orb
std
mov
in
outsb
aam
je
les
fisubs
inc
or
stos
mov
xor
push
lea
jnp
xchg
or
pop
jl
jb
dec
imul
sbb
call
aas
jo
aad
xor
and
rorb
testb
insl
leave
aaa
and
mov
dec
or
lcall
fistl
pop
sbb
mov
push
into
ja
test
scas
pop
xchg
sbb
mov
mov
ret
lcall
dec
stos
aad
adcb
mov
push
jmp
cmp
add
sbb
clc
and
lods
stc
lahf
pop
imul
pop
imul
push
ljmp
lea
pusha
ja
push
xchg
pop
xchg
lahf
jg
mov
stos
repz
mov
mov
jle
scas
inc
dec
xchg
dec
sub
sub
sbb
insl
cmp
rcl
adc
hlt
xchg
pop
nop
xor
das
sbbl
sub
adc
insl
ret
pop
int
add
test
hlt
insb
in
cli
sub
mov
cltd
sbb
xor
call
add
aas
jg
pushf
shl
dec
pop
mov
loopne
lret
inc
mull
mov
ljmp
xchg
inc
xchg
stc
xor
cmp
lods
shll
fmuls
jns
leave
dec
jo
pop
in
int
adc
insl
cwtl
ja
hlt
and
outsl
xchg
add
fwait
add
xchg
inc
cmc
mov
mov
lret
adc
std
cmp
mov
push
sub
pop
out
je
inc
mov
fsubr
lret
repz
and
inc
out
mov
ja
fnstcw
push
mov
sub
mov
lock
aas
lods
jge
dec
scas
std
pop
outsb
cltd
pop
iret
rcrl
outsl
ret
add
popf
fisubs
push
out
cmp
dec
pop
adc
out
mov
xchg
sar
fs
lds
rcrl
jo
neg
sub
scas
mov
rcll
push
test
loop
or
sub
adc
ss
xchg
push
out
lahf
and
mov
mov
addl
jmp
test
test
jne
repz
stc
test
popf
cmpsl
sbb
sbb
jge
es
in
lods
jle
gs
mov
inc
ret
inc
int3
mov
push
mov
lock
and
jmp
fbstp
inc
sbb
sbb
lods
add
and
out
push
shl
push
popw
test
stos
and
loope
pop
test
in
adc
mov
xor
inc
or
out
lcall
lret
jl
push
movsl
mov
in
sbb
push
add
sub
cmc
test
add
add
and
cmc
stos
dec
or
imulb
fadds
mov
mov
push
stos
xchg
icebp
scas
adc
ss
sub
shll
movsb
ss
repz
jle
repnz
cmp
mov
outsl
mov
mov
aas
addl
dec
and
outsl
xchg
rolb
xchg
movsl
fs
daa
push
push
jecxz
stc
fiadds
cli
arpl
aaa
hlt
adc
sahf
es
sub
add
pushw
daa
jns
push
sbb
notb
inc
cmpsl
daa
and
push
push
mov
dec
push
sbb
mov
sbb
inc
mov
test
stc
mov
xchg
cs
js
out
cmp
and
cmp
cs
insl
lds
sbb
out
movsb
loop
hlt
mov
jnp
push
cmp
push
fwait
popf
and
xchg
sbb
decl
int
cmp
ss
shll
jne
aam
and
aam
testb
sub
xchg
jno
cs
adc
jno
in
je
je
fmull
xchg
lcall
out
es
jp
cltd
inc
orb
push
addb
cmp
push
push
out
stos
cmp
add
fcoms
pop
pushf
sbb
mov
lea
pushf
fcoms
jle
mov
xlat
addr16
cmp
mov
or
xchg
xor
push
ja
push
jmp
stos
hlt
mov
test
sbb
xor
sub
fistpl
aaa
mov
xchg
cmp
xor
push
jp
into
int3
mov
pop
adc
pop
arpl
addl
idivb
adc
test
fs
jo
push
clc
mov
pop
lds
xchg
scas
push
mov
pop
or
jp
inc
xchg
xor
add
les
inc
clc
inc
lahf
mov
mov
mov
mov
mov
loopne
les
sub
addr16
adc
mov
lods
js
push
mov
cmp
push
leave
xor
sub
mov
pop
in
fsub
popf
jo
jns
jl
in
adc
das
icebp
fcompl
and
mov
and
adc
jb
imul
and
std
xchg
mov
jl
movb
dec
xor
lahf
fs
clc
push
mov
mov
fnstcw
or
xchg
mov
add
push
adc
xchg
lret
insb
xchg
stos
jle
xchg
sub
data16
bound
jne
sub
mov
sub
xor
mov
sbb
lret
cmp
pop
sahf
lds
sysexit
cltd
push
fwait
insl
mov
push
sbb
cld
xor
add
dec
and
inc
sub
xlat
inc
cmp
fcmovnb
xchg
inc
mov
xchg
scas
sbb
xor
xlat
jb
cmpsl
out
cmp
sub
adc
and
jne
or
add
ds
jnp
jl,pt
sarl
add
adc
pop
pop
inc
add
mov
pop
je
stc
jmp
sub
add
cltd
bound
mov
xchg
sbb
les
or
mov
xor
das
pop
lods
xchg
add
in
test
and
xrelease
outsb
or
scas
push
add
out
sti
adcb
mov
cmp
aaa
jne
cmp
xlat
es
scas
loope
sti
gs
inc
rcrb
mov
in
mov
xchg
cmpl
bound
mov
mov
cli
inc
test
aad
or
mov
pop
and
and
fdivs
popf
mov
xor
in
add
fbstp
insl
adc
cmp
bound
flds
and
cs
inc
sub
xor
jb
insl
in
xor
mov
ffreep
and
jo
std
jne
mov
mov
call
add
ja
pop
rorb
mov
les
push
call
stos
jecxz
cmovno
pop
fwait
xorl
arpl
add
xchg
stos
mov
out
lock
es
lea
sti
repnz
out
es
dec
in
fwait
inc
xor
dec
pop
dec
fwait
je
andb
cmp
push
mov
jbe
aas
push
aaa
inc
push
mov
adc
xor
out
nop
sbb
sbbl
and
or
test
push
popf
cmpsb
cmc
push
pop
and
mov
lods
fidivs
rcll
rol
mov
cmp
fidivs
mov
rcll
mov
arpl
jmp
jo
leave
fnstsw
lgs
shr
jae
sti
ficompl
mov
and
jns
xchg
dec
cmp
jo
pop
mov
imul
sarl
push
mov
addr16
jg
push
test
in
and
lods
xchg
push
pop
or
or
xchg
popf
cmp
cmp
xchg
je
popa
jp
push
mov
dec
icebp
ja
call
js
push
out
jg
jb
pop
push
nop
mov
push
addl
mov
xchg
ret
stos
mov
inc
push
outsb
arpl
xchg
int
shl
push
push
adc
in
out
movsb
movsb
or
xchg
testl
repnz
pop
jl
pop
imul
cmpsl
pop
and
inc
xchg
mov
scas
lcall
ret
mov
pusha
fwait
sub
in
in
and
mov
mov
aad
loope
fwait
push
xchg
frstor
sbb
mov
repnz
mov
jmp
ret
mov
int
xchg
mov
std
pop
cmpsb
push
xor
int
lods
fdivl
mov
pop
test
pop
lods
push
clc
leave
ds
adc
imul
bound
mov
clc
ret
or
cmp
outsb
mov
pusha
fs
out
pop
push
sub
xchg
mov
and
jecxz
sbb
or
loope
sub
push
stc
mov
sbb
pop
insl
leave
into
inc
or
mov
and
or
adc
mov
push
jnp
pop
cmpsl
mov
jge
mov
cmpsl
dec
mov
loop
int
sahf
mov
roll
pop
lds
cmc
fisttpll
mov
cltd
test
add
icebp
sub
sub
enter
gs
push
cmp
adc
cmp
test
andb
mov
cld
jne
sub
inc
cmc
loope
filds
mov
or
cmp
in
pop
adc
test
jne
pop
mov
pop
test
addr16
call
jle
xchg
decb
cmp
mov
xchg
push
in
ret
shll
pop
inc
rcrb
pop
inc
sbb
popa
jo
adc
dec
mov
ret
or
mov
jae
loope
ss
pop
pop
cli
dec
push
lcall
mov
jnp
xchg
pop
daa
xor
adc
mov
jnp
sub
xchg
mov
pop
pop
cmpsb
lock
cs
pop
dec
mov
ret
ss
dec
jb
jno
xor
rolb
cmp
pop
sbb
mov
mov
repz
test
push
cs
push
push
hlt
test
xchg
mov
aam
sbb
fcoml
lahf
rorb
fxch
lret
lods
int
andb
push
inc
outsl
jp
xchg
xchg
cwtl
mov
sub
adc
xchg
rcrb
mov
sbb
das
push
and
adc
mov
sub
fucom
sbb
lcall
or
jnp
pop
jmp
fs
sub
sti
dec
outsl
adc
out
and
ds
pop
fwait
sub
push
jl
aaa
xchg
mov
push
fistpll
stos
int3
jno
out
sarl
mov
inc
add
mov
mov
cli
call
in
clc
dec
dec
or
lods
fdivrs
jae
add
shrl
mov
into
mov
pop
or
cltd
movsl
fnstsw
cs
push
neg
inc
add
dec
and
mov
pop
xchg
mov
mov
lcall
lret
adc
loopne
sbb
orb
and
sub
jb
jecxz
addr16
mov
cs
les
xlat
push
xchg
add
rolb
cmp
mov
lcall
arpl
out
xor
lods
xlat
sub
test
jge
mov
aad
mov
leave
int3
daa
and
cmp
dec
in
cmpb
pop
sbb
jmp
int
mov
push
ret
dec
push
cld
push
repz
xchg
fcmovu
loopne
mov
repnz
xchg
xchg
adc
arpl
scas
out
or
frstor
jmp
add
ret
daa
fidivs
dec
je
mov
lods
mov
mov
into
xor
mov
push
je
loop
ficoml
xor
out
out
mov
mov
mov
or
ss
push
shrb
dec
movsb
inc
sbb
jb,pt
dec
mov
roll
mov
aas
xchg
ret
mov
lahf
and
fnstenv
fs
and
fldl
inc
xor
pop
cmp
in
and
cmp
pop
bound
pop
push
cmpsb
lcall
jge
jecxz
bound
sbb
arpl
mov
dec
and
stos
into
pop
xchg
jbe
cmp
call
daa
mov
jns
sub
aaa
cmpsb
push
mov
dec
ds
pop
aad
mov
andl
roll
mov
addb
ja
dec
outsb
fdivp
addb
xor
inc
dec
gs
fwait
pushf
xchg
fisubs
das
cmp
arpl
inc
popa
pushf
or
inc
mov
sbb
xchg
rcll
cmp
aas
jge
aam
int3
or
inc
push
add
out
xor
loope
lock
push
insb
mov
scas
pop
ljmp
jl
sahf
add
inc
pop
insb
leave
out
mov
insb
out
adc
sub
in
adc
in
pop
pop
add
imulb
aaa
add
add
mov
cmp
cmp
dec
in
mov
mov
push
bound
mov
call
mulb
xor
dec
fistps
dec
mov
fs
out
and
sahf
pop
test
daa
iret
lret
add
movsb
lds
inc
fistpl
push
loopne
cmpsl
and
mov
inc
ret
mov
push
repz
cmc
or
or
pop
cltd
mov
lock
test
aam
repz
orl
or
dec
push
loope
daa
lcallw
mov
add
jl
insb
push
pop
dec
loopne
sarl
sub
xchg
hlt
popf
mov
sub
out
fldcw
add
pop
dec
ljmp
adc
das
xchg
jns
jecxz
sbb
xor
decb
cld
outsb
icebp
into
jo
xchg
icebp
fsub
loopnew
xor
cmpsl
or
cmp
mov
adc
cltd
mov
movsb
aad
xlat
and
fnsave
fs
ljmp
gs
lea
dec
int3
pop
clc
or
mov
push
call
and
cmp
xchg
ret
shlb
add
in
jl
jae
sub
sub
arpl
jmp
mov
xchg
pop
inc
sahf
mov
lret
mov
stc
xchg
test
xchg
cli
push
test
push
mov
shlb
fcoms
jecxz
mov
mov
push
xchg
or
or
xor
jae
movsb
sarl
or
cld
mov
fidivl
mov
adc
iretw
mov
xchg
push
mov
cmp
xchg
mov
mov
in
xchg
stos
mov
mov
daa
push
ljmp
addl
loope
rorl
jecxz
pusha
jmp
pop
imul
movsb
add
mov
pushf
inc
aad
sbb
dec
add
loope
add
jg
mov
lcall
shrl
lea
adc
dec
in
dec
std
bound
popa
cli
sub
inc
test
scas
aad
push
sbb
mov
jmp
mov
cmpsl
popf
pop
ret
outsb
fiaddl
fisttpll
lods
push
inc
pusha
sub
mov
push
pop
and
mov
sbb
push
push
inc
cmp
pop
cld
sub
out
jl
mov
sbb
lcall
fildll
dec
inc
lea
dec
insl
cmp
leave
inc
inc
test
adc
outsb
lcall
pop
loopne
mov
xchg
add
stos
into
jp
pusha
ss
push
mov
nop
mov
pushf
call
xchg
dec
mov
mov
pop
xor
cmpsb
or
stc
ja,pn
das
cli
xchg
jmp
add
pushf
push
mov
insb
or
aaa
mov
insb
lock
push
jl
or
xor
jle
ffreep
ds
pop
ret
pop
push
mov
das
and
dec
repz
je
pop
xchg
xchg
das
push
lds
xor
rorb
in
mov
stc
cld
or
into
xor
inc
jae
adc
push
sub
xor
jns
sbbl
dec
dec
xchg
popa
inc
mov
dec
popf
rcrl
int3
pusha
out
jmp
push
adc
daa
or
dec
popa
lods
dec
pop
es
not
sub
mov
pop
push
sub
sbb
iret
mov
imul
cli
or
je
int
daa
lret
inc
cmp
aaa
cmp
mov
mov
icebp
call
sbb
adc
aad
in
les
test
cmp
jp
jle
movsb
cmp
xlat
pop
insb
jns
sub
out
cmp
push
push
dec
popa
xor
pusha
adc
movsb
pop
scas
leave
popf
lds
jmp
xchg
add
arpl
xor
icebp
mov
js
flds
shlb
cli
faddl
dec
xchg
push
int3
jmp
data16
mov
jecxz
dec
js
xor
movsl
or
adc
adc
icebp
sbb
cmp
lret
aas
sub
leave
loopne
out
std
jns
dec
fstps
es
lods
test
xchg
xlat
sbb
ret
xchg
int3
std
pop
into
loope
or
lods
jnp
xchg
jne
or
das
adc
aad
pop
rcrl
push
lock
mov
dec
mov
or
jmp
sbb
xchg
dec
sbb
jb
mov
pop
and
fbstp
xor
and
lods
arpl
subl
lret
jno
test
jne
and
mov
jecxz
cmc
adc
inc
stc
cmpsb
icebp
cmp
push
shll
mov
add
mov
test
adc
hlt
sbb
sahf
imul
or
push
leave
dec
test
stos
addl
out
jno
jbe
jecxz
fcomps
pop
lret
pop
sbb
mov
cmp
iret
pushf
push
sub
loopne
adc
jns
loop
icebp
into
add
lds
or
or
mov
mov
add
jbe
jmp
mov
sub
pop
mov
xlat
sti
or
xchg
outsl
pop
cmp
sub
sbb
inc
in
mov
mov
andb
call
pop
xor
mov
cmp
dec
mov
adc
fs
in
sbb
xchg
sub
aaa
dec
outsb
mov
dec
mov
jge
in
push
sbb
stos
rolb
fs
sti
pop
xchg
or
jbe
sti
ja
fiadds
lret
sub
mov
push
ljmp
push
repz
rep
xor
fnstcw
mov
adc
js
call
xlat
cmp
pop
inc
sbb
mov
push
mov
cwtl
jo
mov
xchg
adc
push
mov
scas
movsb
aas
push
xchg
xor
mov
inc
mov
and
in
mov
mov
outsb
test
in
leave
andnps
cmpsb
jge
call
shrb
fcoml
mov
push
fisubrs
add
lea
or
fdivl
div
imull
pop
mov
push
lea
cltd
lock
cmpl
loope
mov
mov
scas
xchg
inc
jb
ljmp
adc
cld
inc
cmp
inc
je
jg
inc
cmp
movsl
or
shl
je
fisttps
scas
stc
test
jae
pushf
pop
adc
jle
insb
push
hlt
pcmpgtw
repnz
dec
decb
cmp
xor
lods
xchg
cmc
ret
rorl
xor
push
lahf
push
rorl
movsb
xor
cltd
mov
push
cmp
or
iret
testl
mov
sub
psrad
jae
aad
in
or
into
aas
addb
cmp
or
ffreep
add
adc
std
pop
fstpl
loope
xor
mov
push
inc
adc
cmp
and
imul
xchg
sahf
shlb
pop
xor
lock
pop
mov
sbb
jge
mov
mov
in
push
pop
xor
push
xor
mov
lods
aad
rcl
sbbb
push
sti
pop
aaa
call
xor
add
loopne
imul
sbb
xchg
ss
push
lret
cmp
dec
xor
ret
mov
jecxz
addr16
call
int3
xchg
sbb
inc
jbe
sub
jge
xor
imul
stos
rcl
sbb
je
push
xchg
jne
pop
outsb
mov
mov
sub
push
mov
sbb
mov
pop
in
shll
dec
cli
fisubl
add
int3
mov
lahf
or
xchg
addr16
mov
dec
push
or
mov
les
mov
mov
xlat
shrl
push
rorb
inc
bound
lcall
cmp
xor
push
mov
dec
jo
xchg
mov
dec
fstpl
adc
add
ret
jge
enter
rolb
jae
test
pop
packsswb
mov
mov
sbb
cmp
addb
dec
or
inc
or
inc
dec
fadds
jge
mov
rcrb
sub
pop
add
loopne
lea
add
cmp
sub
std
jecxz
imul
movsl
or
test
ja
pop
sti
cmpsl
fisubs
jmp
or
xchg
push
push
sbb
xor
and
stos
xchg
clc
sbb
sbb
stos
mov
mov
mov
push
int
das
jmp
push
push
jno
inc
jmp
nop
pop
scas
pop
lcall
ljmp
cwtl
mov
adc
and
das
push
sbb
stos
pop
sti
out
sahf
adc
push
dec
test
sbb
mov
daa
xchg
lret
fadd
inc
iret
xchg
cmp
xor
push
xchg
lahf
inc
cli
jmp
mov
adc
mov
mov
xor
rolb
xchg
mov
pop
enter
adc
and
out
outsl
mov
ljmp
xchg
push
stc
out
inc
testb
jmp
setns
mov
out
cmpsb
pop
fldl
in
bnd
add
call
sbb
stos
add
cmp
lock
jae
aaa
mov
push
in
ret
xchg
insl
pop
mov
jbe
jl
cmp
lds
call
in
pop
cltd
stc
jo
push
les
pusha
iret
mov
ret
inc
or
mov
shrl
std
stos
dec
incl
and
xor
inc
mov
leave
mov
shrb
mov
pop
int3
jne
int
or
imul
dec
ret
std
ss
cmc
scas
adc
roll
gs
mov
or
adc
es
sarb
iret
js
call
ret
xchg
adc
aaa
mov
xchg
adc
jl
sbb
mov
cmp
push
dec
jne
test
or
mov
daa
pop
lcall
sbb
add
mov
or
pop
roll
and
aas
fs
dec
mov
sub
mov
test
jae
aaa
cmc
in
push
and
inc
xchg
dec
pop
insl
int
inc
cmp
stos
mov
adc
aam
push
fadds
shll
and
pop
mov
hlt
mov
rorb
scas
inc
mov
adc
or
les
bound
pop
inc
andb
mov
popf
sti
sub
and
jno
mov
jbe
cmpsl
mov
jle
mov
stos
cmp
test
dec
ljmp
dec
jnp
jns
and
pop
xor
mov
in
mov
icebp
xor
lea
mov
jecxz
jmp
pushl
shll
mov
xchg
loop
mull
shlb
shll
popa
cwtl
fs
lahf
jns
rclb
fwait
mov
aaa
test
icebp
fsubp
pop
mov
sub
test
jo
in
call
ljmp
lods
lds
sbb
enter
pusha
adc
sti
scas
ret
xchg
and
cmp
dec
popf
add
mov
pushf
mov
sbbl
sbb
pop
test
mov
int
rclb
pop
add
or
mov
xchg
pushf
jmp
mov
cmpb
filds
and
mov
pop
pop
add
das
dec
jnp
mov
dec
cli
ds
arpl
pop
cld
and
bound
push
imul
fmull
test
adc
sbb
popf
xor
cltd
jmp
ret
fucomp
repz
add
or
mul
or
add
test
iret
imul
data16
fwait
jae
sbb
add
adc
es
aad
es
les
sbb
xor
scas
jns
jle
push
fdivrp
aad
dec
and
pop
out
scas
mov
adc
jb
hlt
aam
adc
jg,pt
dec
inc
lea
test
dec
xor
jnp
lret
mov
push
mov
jecxz
xchg
daa
mov
test
aas
movb
mov
fprem1
sub
lea
das
pop
cmp
xor
repnz
out
out
xor
insb
pop
push
push
mov
fs
cmpsb
push
lcall
pop
fs
cs
fcompl
push
mov
cmpsl
into
lret
ja
jecxz
cmc
into
pushl
cmpsl
xchg
aas
cltd
mov
mov
out
sbb
sbb
pop
cmp
loop
fldt
push
adc
cmp
push
insl
dec
js
push
es
adc
out
cmpb
rolb
int
fs
les
test
and
cmpb
add
arpl
mov
insl
mov
ljmp
mov
sbb
xchg
mov
xchg
jne
xchg
dec
rcr
mov
jae
js
mov
je
mov
icebp
clc
mov
xchg
lret
jb
xor
jae
imul
cs
insl
pop
push
cld
pop
inc
pop
xchg
push
and
movsb
sbb
adc
je
lods
and
adc
subb
loopne
xor
movsl
stc
shlb
shll
add
subb
gs
dec
or
sub
addr16
and
or
into
cld
inc
cmpsb
loopne
add
je
std
mov
push
mov
aaa
test
daa
pop
mov
rep
fwait
and
jecxz
cmp
pop
or
subl
daa
jecxz
nop
xchg
mov
mov
loope
push
lds
jno
pop
ja
mov
clc
add
scas
lahf
inc
int3
jl
cmpsl
ss
xor
mov
cli
aaa
aas
jmp
adc
xlat
xor
xchg
lds
pop
pop
jo
loope
push
mov
jns
cmp
cmpsl
xchg
fwait
push
insb
int3
dec
or
lds
push
mov
inc
jecxz
cmp
lcall
mul
ds
dec
fcoms
and
mov
adcb
das
fdivp
lret
in
pop
ljmp
adc
mov
jp
loopne
mov
mov
test
cmp
popa
dec
jmp
andb
dec
and
mov
cltd
out
or
leave
jle
dec
stos
adc
lret
push
pop
adc
lcall
sub
shll
inc
rcll
lods
stos
clc
out
daa
jp
xor
stc
cmpsl
sub
aas
inc
add
jecxz
push
add
mov
pop
or
jle
jno
mov
in
push
jae
lods
loopne
and
fbld
xchg
lahf
dec
jbe
cltd
add
loop
mov
adcl
xchg
outsb
syscall
mov
fsts
mov
bound
test
inc
mov
mov
pop
pop
jecxz
addr16
jno
call
aaa
inc
inc
add
loop
aaa
mov
pop
xor
cmp
mov
mov
jge
icebp
pop
test
ss
lock
shrb
fcmovnb
or
mov
mov
inc
push
lahf
imulb
jno
loopne
or
pop
jb
mov
hlt
cmp
jo
or
std
push
int
daa
sbb
push
xchg
std
test
mov
mov
outsl
lcall
mov
push
adc
jns
or
xchg
push
mov
arpl
mov
test
scas
dec
bound
in
mov
test
out
test
xor
outsl
rolb
dec
sbb
lods
jbe
mov
lea
fldcw
psllw
inc
test
push
les
sbb
mov
pop
and
xchg
mov
hlt
test
xor
mov
stc
arpl
lcall
lret
mov
mov
arpl
sbb
ss
pusha
mov
cmpsb
loope
mov
outsb
inc
sbb
imul
and
sbb
pop
stos
mov
pop
scas
sbb
inc
jg
xor
pop
sbb
jo
sbb
adc
jl
mov
dec
in
xchg
int3
fistl
or
lcall
jae
add
je
sbb
xor
push
pushf
loopne
popa
fstpl
xchg
cmp
daa
xor
jmp
ret
xlat
mov
repz
xor
sti
jmp
sub
rcl
imul
out
lret
outsl
imul
mov
iret
adc
sub
or
cmp
sub
gs
sti
stos
mov
xor
add
jle
shll
sahf
add
xor
adc
xchg
test
divb
adc
cli
fs
xchg
and
repnz
hlt
sub
pop
jle
mov
mov
fldt
les
push
inc
subl
fidivrs
push
imul
jb
in
mov
and
ret
loopne
jo
nop
inc
add
stos
dec
rcrb
es
enter
sub
loope
mov
or
fistpl
jae
outsb
ret
cmp
fsubs
mov
dec
iret
shr
mov
cwtl
pop
sub
lods
cwtl
out
imul
dec
dec
loope
add
dec
xor
jbe
cli
dec
orl
xor
mov
call
push
and
sahf
movsl
mov
add
loope
loopne
xchg
xchg
clc
rcrb
mov
pop
inc
mov
push
fisubrs
sub
mov
dec
call
xchg
mov
sbb
jl
adc
cli
pop
xor
jge
jecxz
mov
and
data16
lret
inc
ret
test
sub
sub
fdivs
add
imul
xor
push
jg
mov
fstp
cmp
mov
daa
lds
or
pop
sub
aas
push
lock
lret
inc
out
js
push
sub
cld
mov
in
sbb
enter
les
pop
dec
sbb
and
ljmp
inc
inc
outsl
ja
mov
pop
jmp
or
cld
mov
mov
je
cmp
rcrl
icebp
sbb
repz
fs
and
lret
popa
mov
mov
lock
xor
mov
add
sbb
or
mov
mov
test
lods
imul
and
int3
ffree
jg
enter
pop
in
mov
push
lret
jb
inc
popf
int
je
add
jecxz
mov
jl
arpl
fistpl
dec
push
push
lock
aas
xchg
stc
stc
mov
jns
or
ja
xchg
or
cltd
and
jmp
lods
inc
push
into
repnz
lcall
jo
sbb
jno
or
fsubs
mov
sbb
test
std
mov
jne
test
inc
test
in
lahf
std
daa
and
stos
adc
nop
push
cmpl
movsb
dec
shlb
xchg
jbe
add
pushf
aad
jge
mov
lret
in
dec
mov
popf
mov
push
cmpsb
imul
mov
shrb
xchg
jno
pushw
addb
add
add
cmp
dec
lahf
sti
and
and
stos
fs
mov
sub
and
mov
and
dec
jmp
mov
mov
push
adc
dec
dec
xlat
cs
test
lret
decl
pop
in
lahf
mov
cld
mov
sbb
mov
adc
addr16
jo
mov
pop
pop
jmp
mov
dec
dec
shl
negb
pop
sbb
dec
cli
xor
inc
jo
push
adc
fisubl
sti
xchg
mov
fidivl
and
and
shl
inc
cs
mov
call
sbb
notb
cmp
mov
rcr
scas
mov
xchg
repz
mov
pop
out
pop
mov
mov
inc
repnz
mov
xchg
stc
stos
pop
xor
inc
xchg
and
or
cmpsl
sbb
fisttpl
cmp
movl
mov
jnp
test
enter
inc
mov
mov
movsb
mov
pop
mov
bound
jnp
jo
incl
mov
out
mov
fiadds
fcomps
dec
xchg
scas
push
jbe
add
ljmp
xor
es
movsb
aas
xor
cmpsl
push
xchg
cmpsb
push
mov
adc
push
push
pop
adc
fistpll
xchg
cltd
cmp
inc
in
popa
es
inc
cs
mulb
hlt
test
out
mov
sbb
mov
std
fmuls
adc
cmpsb
js
lcall
fmull
mov
cmp
or
test
call
dec
repnz
jg
imul
add
xor
nop
adc
xchg
bound
jnp
push
cmp
lds
shl
mov
jno
mov
dec
iret
ja
notb
std
scas
cld
push
testb
cmpsb
movsl
ljmp
dec
cs
insl
dec
inc
add
jmp
test
mov
je
jb
xchg
xchg
fdivs
inc
in
aam
push
inc
push
sbb
call
or
lods
xchg
out
add
repz
bnd
notl
mov
leave
mov
cmpl
mov
hlt
loop
aam
sbb
icebp
pop
push
fidivrs
std
pop
or
lea
lods
scas
nop
jns
jo
push
and
pop
cld
fwait
or
ds
mov
inc
jb
jmp
xor
lds
mov
cld
mov
in
push
stos
xor
or
clc
pop
jge
jnp
jmp
ss
pop
jecxz
push
add
scas
lcall
inc
imul
in
mov
cmp
out
aaa
bound
leave
push
icebp
sub
xor
xchg
in
rcrb
je
add
sub
vmovd
or
arpl
and
scas
jno
dec
movsl
stc
das
push
push
out
int
inc
mov
xchg
or
jns
or
add
dec
cwtl
dec
jno
addr16
sbb
les
repnz
sti
sbb
adc
ljmp
mov
subl
clc
sub
mov
lds
push
insl
dec
test
imul
cmp
push
add
fisubl
pop
xlat
ss
jecxz
insl
in
or
out
orb
lods
int
xor
push
xlat
mov
lret
xchg
add
inc
fs
cmpsl
sbb
cwtl
test
jo
adc
es
push
out
insl
aad
or
or
insl
fmulp
dec
add
push
sar
xor
sbb
jo
inc
and
push
daa
mov
stos
loop
push
and
mov
jl
push
and
xor
call
mov
ret
jo
dec
sbb
and
repz
add
cltd
mov
mov
jno
cmp
push
arpl
popf
cmp
mov
hlt
push
enter
jns
xlat
adc
sar
movsb
fwait
mov
outsl
icebp
adc
and
aas
lcall
ljmp
rcr
jl
and
mov
jns
lcall
dec
arpl
lahf
xchg
pushf
stos
sbb
jae
xchg
inc
add
jp
pop
dec
xor
mov
inc
ja
mov
js
sbb
cmp
mov
jp
in
dec
mov
imull
sarb
fwait
and
mov
call
lret
clc
and
fisubl
addr16
fldl
push
push
inc
xchg
jns
divl
fcomp
aad
loope
scas
cmp
ja
lret
lcall
sbb
cmp
clc
pop
mov
jmp
cltd
cmpsb
sbb
add
jne
sbbb
lahf
adc
mov
shll
out
mov
mov
scas
in
rolb
shl
mov
repz
pop
sub
pushf
dec
stos
loopne,pt
sbb
mov
sub
xor
add
xchg
push
in
out
mov
and
dec
cmp
stos
adc
cmp
in
sub
out
xchg
movzwl
test
adc
inc
dec
clc
shrb
sub
cmpsb
adc
pcmpgtw
mov
lods
pop
mov
xor
pop
mov
mov
mov
jae
adc
push
leave
jmp
repnz
test
dec
outsl
shr
dec
jmp
and
cmp
mov
push
movsl
xchg
stc
adcl
xor
rcrl
fmull
mov
xchg
push
popf
jns
call
sub
test
test
xor
jo
sti
sub
jmp
or
push
data16
cwtl
fildll
in
fs
mov
leave
jno
sbb
jg
incb
pop
pop
sub
jge
inc
call
or
cmp
and
mov
and
data16
sub
ret
imul
mov
enter
push
clc
lea
ds
xchg
or
shll
dec
pop
int
mov
mov
mov
inc
iret
inc
inc
testl
leave
into
or
adc
stos
push
sub
insb
jg
fbld
or
jns
in
mov
cmp
push
mov
cmpsl
test
mov
lahf
hlt
ss
mov
adc
mov
mov
out
add
addr16
and
add
cld
xchg
pop
xchg
pop
repz
aaa
xor
adc
dec
mov
shrl
inc
jle
movsb
sub
xchg
sbb
mov
loopne
push
or
mov
cmp
cmp
mov
push
push
xchg
mov
cltd
aam
or
and
push
notl
ja
push
daa
mov
pushf
xchg
clc
or
fsubrs
or
jl
and
cmp
scas
popa
pop
inc
push
push
pop
mov
icebp
xchg
outsb
into
das
pop
aaa
inc
pop
push
fs
and
loope
push
cmpsb
adc
xor
adc
push
jns
fsubrl
hlt
ljmp
aad
mov
xchg
xlat
adc
or
pop
add
adc
mov
les
mov
lock
lret
arpl
adc
mov
push
mov
sahf
mov
add
test
jns
xor
in
scas
icebp
outsb
out
jle
rolb
int
push
pop
cmp
mov
test
popa
and
sub
push
inc
add
icebp
movsb
cmpsl
ja
and
in
inc
sub
rcll
inc
mov
fcoms
push
xor
jle
fcompl
repnz
jecxz
pop
mov
pop
or
pop
or
fildl
scas
mov
pop
pop
mov
inc
ja
pop
xor
cld
cmp
mov
shll
lret
negb
inc
in
fwait
push
shrb
fmull
and
sbb
sub
inc
jg
movsb
add
mov
xchg
xchg
jmp
dec
outsl
lcall
in
or
inc
andb
pop
fistpl
mov
les
pop
call
aas
jmp
jecxz
mov
loopne
and
adc
pop
jle
sbb
lcall
das
inc
fldl
jns
fisubs
mov
mov
cmp
hlt
mov
mov
aaa
cmp
pop
scas
fs
in
xor
movsl
sbb
fdivs
ss
les
mov
sub
jg
ja
rolb
mov
test
cmp
sar
movsb
daa
je
cs
aad
dec
sti
outsl
imul
sub
dec
pop
push
movsb
stos
xchg
push
loop
in
test
sub
pusha
cmp
or
cmp
mov
pushf
ret
stos
or
lods
jle
adc
mov
pop
adcb
cmp
sbb
xor
in
mov
push
inc
jl
xchg
insl
or
jmp
sbb
add
adcb
les
cmpsl
popl
mov
in
stc
xchg
sbb
push
push
mov
inc
fldt
js
add
std
mov
ret
inc
or
push
aad
sbb
sar
pop
daa
cld
lcall
or
adc
push
or
fstps
shlb
jbe
push
mov
xchg
std
fisubrl
inc
dec
dec
and
ljmp
aam
test
and
popa
mov
fiaddl
jg
cmp
ret
lahf
jbe
xchg
movsl
ja
adcb
call
sbb
mov
icebp
xor
repz
lock
mov
mov
hlt
arpl
movsb
sub
mov
cltd
stc
dec
ret
ret
push
cli
fwait
mov
popa
mov
std
das
rcl
push
or
icebp
cmp
repz
jp
inc
lods
jne
dec
jmp
popa
sbb
leave
mov
sbb
mov
enter
rolb
sti
lods
adc
das
and
test
lret
adc
idiv
pushl
ljmp
push
push
repnz
push
mov
add
jecxz
pop
fildll
int
fwait
shll
or
cmp
mov
shrl
jb
es
mov
decb
xchg
hlt
push
dec
push
sbb
aam
mov
out
aam
mov
push
repz
push
nop
lock
add
jo
sbb
adc
cmp
packsswb
cld
adc
jb
add
pop
mov
dec
icebp
cmp
mov
scas
jns
adc
pop
push
pop
ja
shll
ret
dec
test
pop
out
ds
inc
fsubs
test
xor
push
or
movsb
fprem
mov
inc
stos
xor
scas
xchg
ja
cmp
ret
ds
cmp
pop
add
push
nop
adc
pop
jb
popf
jae
dec
lods
popf
mov
ds
sbb
xchg
mov
mov
or
inc
out
inc
aas
and
sbb
xor
jnp
mov
andl
inc
data16
cs
push
and
sub
fstl
mov
xchg
ljmp
pushf
pop
or
dec
ss
jecxz
cli
pop
movsl
icebp
mov
in
out
mov
push
ss
adc
mov
inc
ja
mov
mov
sub
sbb
cmp
mov
push
push
xchg
rolb
lock
and
lods
pop
aam
dec
lods
and
int
inc
shrl
push
add
and
pop
dec
subl
inc
inc
mov
cld
sbb
mov
sahf
and
push
sub
xchg
inc
shlb
cmpl
jg
nop
or
push
aad
insb
and
in
adc
and
jmp
out
adc
cwtl
into
out
jne
clc
push
pop
sub
loope
cmp
and
dec
mov
or
mov
inc
xchg
sub
iret
mov
movsb
lahf
pop
mov
cmp
pop
roll
insl
jg
mov
shlb
sub
notl
push
cs
icebp
lock
out
inc
mov
pop
rorb
cmp
lahf
pop
mov
lods
les
mov
xchg
pop
inc
adc
pop
outsl
xchg
cmpsl
jno
insl
sbb
incb
cmpsl
subb
add
jo
pop
inc
popa
and
jge
sti
int
push
mov
xchg
je
popf
imul
cli
nop
or
sbb
or
fisubrl
push
mov
cmpl
mov
sbb
lcall
cmp
mov
scas
xchg
or
fdivs
inc
hlt
hlt
cmp
out
dec
sahf
inc
xchg
sub
sub
adcl
sub
pop
dec
add
pop
and
and
scas
xchg
dec
rcll
out
inc
movl
pop
rorl
pop
add
or
cltd
out
nop
and
mov
xor
leave
pop
sub
xchg
jg
dec
and
cmp
or
add
cli
xchg
call
add
lea
mov
add
orb
pop
fcmovnb
clc
fisubs
out
dec
psraw
push
inc
sbb
sarl
mov
pusha
xchg
nop
sahf
mov
add
push
faddl
sub
mov
push
add
jns
sbbl
xlat
lods
ljmp
stc
and
subl
shll
repnz
fwait
or
pop
mov
hlt
sbb
test
out
out
movsb
mov
cmp
jmp
loopne
sbb
lcall
cli
jp
sub
andps
mov
jp
mov
ret
inc
mov
pop
pusha
pop
sub
dec
test
or
jg
push
pop
aas
cwtl
es
and
nop
cmpb
and
fildl
lea
xchg
pop
in
in
add
or
test
into
push
rorb
icebp
dec
mov
repz
rolb
test
popa
xchg
insl
dec
sti
and
add
adc
data16
mov
push
jecxz
mov
pop
fs
and
int
jle
cli
mull
les
testb
ljmp
popl
push
shrb
and
xchg
stos
xchg
jmp
dec
nop
je
test
insb
jbe
dec
loopne
fdivs
adc
or
out
mov
cld
push
and
call
jmp
popl
clc
xor
jmp
dec
stos
stos
and
mov
push
push
movsl
cli
fbstp
std
cmp
xor
rcl
decl
jns
xor
inc
jno
sbb
test
int3
fidivs
cmpsl
daa
test
icebp
mov
aas
xor
mov
scas
pop
or
std
xor
loop
sub
mov
inc
insb
je
push
pop
fildl
xorb
pop
push
adcb
and
jl
xor
fisubrs
iret
sbb
mov
lea
pop
div
sub
insb
or
mov
pop
push
xor
sub
xor
jb
int3
cltd
dec
sub
add
pop
push
insb
mov
mov
xchg
mov
fdivs
or
cmp
inc
push
sbb
cmp
out
sub
clc
adc
test
out
sub
pop
jno
dec
pop
call
cld
push
shlb
out
mov
cwtl
xchg
xor
outsb
push
ss
mov
cmc
mov
jg
add
mov
lea
pop
das
in
imul
inc
jp
in
or
pop
dec
mov
pop
sub
dec
push
imul
jecxz
push
rcrl
out
test
cmp
dec
push
xlat
ret
sti
add
xchg
jnp
add
lahf
daa
inc
xchg
add
addr16
rcrl
scas
mov
push
cmp
stos
leave
pop
js
aas
orb
xchg
fmuls
orb
jmp
lahf
popa
mov
jnp
test
sub
pushf
pop
xchg
jle
mov
test
push
rcrb
test
ret
mov
pop
push
sbb
jecxz
push
and
mov
sarl
or
fidivrs
lods
pop
jmp
outsb
lret
sar
mov
notb
arpl
cmp
and
xor
inc
xor
and
int
divl
in
xchg
sub
pop
push
das
aas
cmp
in
sbb
lea
cwtl
ret
jne
mov
sbb
filds
test
in
out
pop
xor
sahf
jo
adc
stos
xor
cmp
sti
sub
sbb
lcall
fxch
fiadds
js
mov
je
mov
push
and
xchg
push
in
call
jbe
pushl
aas
ret
mov
js
pushf
inc
jle
and
ss
adc
out
sti
add
inc
movsb
mov
inc
ljmp
outsb
out
stc
and
addr16
cmp
or
in
sbb
dec
stos
xchg
sub
sub
movsb
fdivs
enter
push
pop
mulb
cmpsb
jne
test
nop
jo
lods
pop
mov
outsl
sbb
xchg
push
clc
pop
repnz
or
fmull
aaa
push
shlb
or
sahf
sub
in
add
and
rcrl
sbb
and
xchg
enter
movnti
cmc
pop
and
ret
push
xor
or
xor
sub
sti
or
pop
repnz
and
outsb
cmp
fldcw
xchg
arpl
ljmp
push
hlt
dec
adc
add
int3
pusha
aam
or
inc
dec
add
sub
add
test
jge
cmpsl
lods
jl
inc
mov
inc
or
call
xor
pop
iret
pop
or
mov
add
pop
sub
sub
subb
ja
inc
movsl
sub
jo
divb
fstpt
scas
xchg
enter
mulb
mov
dec
dec
stos
aad
insl
mov
xorl
adc
js
jl
lahf
sub
mov
jl
cmp
jecxz
shll
call
xchg
pop
sbb
mov
lea
mov
out
add
movsl
sbb
cmp
pop
mov
orb
ret
arpl
pop
cmp
jno
xchg
pop
and
loop
cmp
inc
dec
std
imul
and
lcall
and
jo
stos
pop
sub
lret
popa
xchg
xchg
add
sub
icebp
inc
test
pop
or
aad
adc
les
enter
dec
call
fwait
negb
les
jl
and
push
inc
push
sbb
push
pop
push
dec
sbb
outsb
dec
push
rcrl
rcr
je
cwtl
mov
shrb
lods
push
aaa
jnp
int3
mov
data16
inc
or
ds
xchg
cmp
dec
and
sbb
add
pop
ss
jnp
xchg
add
sti
add
lret
sub
movsl
mov
orl
out
mov
adc
movsl
xor
fsubrs
cmp
mov
and
ds
call
faddp
and
das
cmp
out
iret
inc
ucomiss
jns
xchg
xor
or
rclb
das
or
jno
insb
das
add
dec
inc
imul
add
data16
mov
mov
cmpsl
arpl
pusha
in
add
mov
jge
in
adc
shr
cld
mov
and
pop
jo
push
enter
insb
lcall
jae
aam
dec
and
ds
or
loopne
jg
jo
pop
shrb
mov
addr16
inc
lea
add
cmp
inc
mov
inc
add
out
leave
and
push
dec
or
xchg
xchg
dec
shlb
or
pop
inc
pop
loopne
jne
and
sbb
dec
lods
repz
add
fisubrl
ret
jmp
push
inc
xor
lock
adcb
xchg
xor
xor
sbb
inc
data16
or
jae
not
pop
pop
inc
xchg
movups
mov
push
iret
adc
push
enter
in
nop
test
es
push
inc
movsl
adcb
cmp
aad
sub
jle
fstpl
fadds
in
adc
ja
push
ficoml
ljmp
scas
arpl
and
lea
lds
and
lret
insl
mov
leave
lcall
sti
lods
int3
scas
incl
les
call
or
outsb
mov
jmp
clc
xchg
roll
shll
push
push
jbe
xchg
fwait
ret
jne
sbb
out
jge
aas
in
ds
push
in
sub
inc
sbb
adc
pop
aad
xchg
insl
pop
xchg
int
jbe
fldenv
shlb
int
mov
jbe
adc
cmp
lcall
and
cmp
fiaddl
int
push
xor
fiadds
mov
jle
push
or
xor
mov
aad
cmp
mov
outsb
or
mov
dec
neg
jg
sahf
xchg
in
fcmovnu
sub
data16
pop
mov
jge
rcll
xor
add
repz
xchg
pop
mov
cmp
dec
and
in
xor
sub
je
sub
lds
sbb
adc
mov
adc
sti
jae
jecxz
imul
neg
adc
rcrb
cmovg
pushf
adc
push
dec
push
pop
sbb
ret
dec
push
lock
repz
add
sahf
rorb
mov
repnz
jge
cmp
test
inc
loopne
iret
cld
in
jmp
mov
inc
arpl
es
lds
mov
adc
mov
add
notl
cmpsb
jne
jae
test
mov
pop
jle
jle
jne
out
inc
and
fwait
in
mov
imull
mov
and
out
inc
test
push
xor
hlt
push
or
insb
subl
cmpsl
xchg
xor
inc
push
mov
mov
xchg
mov
dec
pushf
push
sbb
and
lds
and
push
jge
shll
std
fcomip
pop
lret
fucomip
mov
jmp
cmp
jns
popa
cld
mov
jns
js
and
std
xchg
sar
push
rcrl
repnz
gs
xor
pop
jo
mov
lahf
clts
push
lcall
xchg
cld
and
movl
inc
ficoms
xlat
mov
cli
or
lret
adc
lahf
jmp
mov
imull
push
leave
fisttpl
jmp
cmpsb
fwait
sbb
in
outsl
inc
add
mov
lahf
and
in
cmp
arpl
mov
adc
pop
add
xchg
or
mov
loope
xor
std
mov
out
push
sbb
adc
xchg
jb
sti
xorb
arpl
pop
cmp
cmp
adc
mov
call
daa
mov
into
sahf
push
jnp
outsb
fisubs
dec
fcmovb
mov
jge
and
pop
adc
sbb
jno
icebp
mov
xchg
cwtl
mov
push
jno
mov
pop
and
leave
jae
icebp
outsl
fdivrp
loope
push
inc
pop
ret
das
aam
add
and
sbb
rolb
xchg
xchg
sbb
pop
shll
mov
mov
lcall
fsub
pusha
cmpsb
xor
enter
dec
je
mov
iret
or
je
sti
aad
adc
mov
inc
and
dec
lods
dec
add
lods
iret
nop
adc
mov
inc
dec
movsb
sub
add
sbb
mov
inc
inc
clc
testb
mov
repz
sbb
imul
inc
flds
andl
incb
dec
jmp
inc
daa
jmp
int3
and
movntps
imul
jg
lahf
pop
mov
sbb
addr16
decb
sarl
div
push
or
and
lret
rorl
inc
xor
pop
movsl
dec
mov
xor
cmp
mov
xor
sbb
imul
scas
jne
sub
insl
lret
pop
mov
add
ljmp
xchg
lods
jg
mov
add
or
arpl
cmp
push
fwait
test
push
cmp
nop
iret
popa
cltd
gs
push
pop
stos
push
stc
testb
pop
nop
fmuls
scas
je
xor
xor
and
xor
sub
pop
sahf
xor
daa
dec
cmpsl
xor
fsubs
lock
sbb
fnsetpm(287
outsb
ja
and
or
fstpl
cmpsl
push
xchg
out
mov
mov
and
insl
pop
gs
mov
imul
stos
jno
mov
jo
in
negl
ljmp
pushf
xorl
test
in
xchg
xorb
jl
lea
shl
dec
rcll
ret
fidivs
lods
movsb
movsl
fs
and
repz
lods
xor
lahf
lcall
sahf
push
ret
lock
mov
mov
inc
xchg
xchg
and
shl
jno
gs
inc
push
mov
ficoms
push
fwait
sahf
cmp
xor
movsl
data16
ljmp
sbb
out
cmp
or
cltd
lahf
dec
jge
mov
sbb
sbb
mov
xor
imul
lds
outsb
arpl
adc
and
push
push
mov
jae
mov
ret
sbb
dec
xchg
add
aam
xchg
and
clc
or
outsl
or
jmp
adc
mov
rolb
xor
data16
dec
mov
or
aam
sbb
fst
and
cld
loopne
mov
inc
push
in
in
add
jbe
xor
pop
lea
jb
mov
lahf
popl
cltd
mov
out
add
repnz
cmp
mov
add
cwtl
mov
and
int3
iret
dec
sbb
nop
add
in
mov
inc
pushw
add
or
imul
dec
das
mov
leave
mov
cmp
cmp
xchg
in
cltd
xchg
mov
cmpsl
fs
inc
sbb
mov
xchg
push
movsl
cmpb
es
dec
shr
jl
mov
js
pop
je
dec
inc
pop
fcomp
mov
cs
mov
or
pop
inc
xor
in
ret
in
ljmp
inc
mov
clc
inc
jg
jl
rcrb
int
aad
scas
gs
mov
and
adcb
xchg
dec
das
out
ret
insl
sub
dec
mov
push
or
or
in
test
cld
clc
sti
adc
pop
cli
cmc
push
cmp
rcl
repnz
adc
pop
lret
jno
fmul
pop
dec
dec
xchg
dec
mov
clc
js
lods
inc
nop
jge
xchg
lock
into
shrl
xor
fwait
loope
clc
cmp
nop
call
fisubs
mov
push
add
pusha
and
pop
into
adc
inc
lock
outsb
mov
lds
int3
addb
adc
xchg
jnp
dec
adc
pop
fabs
xor
xchg
sub
mov
jle
push
jns
jmp
pop
iret
lds
mov
shlb
pop
mov
enter
ss
dec
mov
sbb
in
loope
movsl
in
popw
mov
cmp
xchg
sbbb
outsl
and
add
mov
inc
lock
sti
fdiv
push
repnz
fxch
push
cmpsb
dec
out
and
push
cmp
je
rcrb
push
xor
mov
arpl
lods
clc
jg
mov
shll
out
inc
shrl
pop
xchg
jb
int
xor
shlb
imul
in
scas
sbb
stos
sbbb
mov
std
and
aad
pop
pusha
push
cmp
adc
aaa
or
aad
test
movsb
mov
cmp
fwait
push
xchg
cmpsb
mov
ss
lret
mov
les
or
dec
cmpsb
jne
push
or
inc
vmovd
inc
pop
push
mov
mov
pop
xor
jb
sti
mov
and
ss
mov
jbe
cmp
inc
stos
cwtl
add
cltd
daa
cmp
mov
not
lods
jno
call
xchg
jmp
les
out
incb
jo
jnp
insb
in
sbb
pop
adc
pop
std
outsl
mov
dec
add
or
mov
mov
leave
sbb
and
shrb
lcall
push
mov
push
in
mov
cli
fdivp
mov
cmp
jecxz
jle
fidivrs
ret
cmp
in
xor
push
arpl
cmp
push
int3
scas
pop
imul
mov
lret
cmp
ja
out
add
nop
mov
mov
iret
jge
shl
fistpll
hlt
rsm
hlt
jle
insl
sub
sarb
and
and
fisttpl
sbb
pop
bound
lea
mov
sub
push
testl
int
xlat
push
rol
sub
les
pop
loopne
repnz
cmpsb
shll
jae
hlt
shlb
dec
mov
jle
jmp
dec
and
bound
dec
lock
scas
mov
push
icebp
faddl
push
pop
mov
and
addb
shrb
inc
lahf
mov
dec
cmp
xor
xchg
inc
in
push
xchg
adc
in
xlat
ja
add
mov
jl
jp
sbb
push
test
lahf
sbb
clc
jo
mov
mov
ret
aaa
xlat
mov
mov
pop
inc
scas
push
cmp
pop
jae
xchg
je
and
xor
imul
cmp
jae
hlt
rolb
jbe
repz
pop
mov
push
adc
mov
xchg
addr16
mov
jae
cmp
jb
jle
pop
cmp
cmc
jl
cmpsb
in
jns
loope
jmp
pop
mov
or
xor
stos
or
repnz
insb
add
cmp
rolb
add
adc
aam
xchg
mov
sub
inc
test
pop
hlt
jge
pop
into
aad
movsb
insb
mov
mov
movsl
mov
lcall
dec
mov
mov
loop
push
loop
mov
mov
sahf
push
sbb
movsb
dec
jns
push
test
xchg
and
xchg
pusha
stc
shl
outsl
jecxz
call
sub
xchg
test
fwait
andb
ss
mov
lret
mov
cmp
inc
xchg
add
push
mov
jae
push
dec
xchg
mov
add
jmp
inc
mov
test
aad
dec
mov
mov
int3
jb
add
mulps
mov
fstpt
rcl
or
repz
addb
mov
outsb
adc
and
xchg
ret
movsl
in
popf
pop
imul
jg
mov
push
xor
test
mov
ds
data16
popf
push
dec
or
inc
cmp
frstor
je
mov
or
mov
data16
cmpsb
pop
std
inc
ds
mov
add
dec
sar
xchg
fisubl
fs
decl
fwait
mov
mov
push
inc
push
jns
and
mov
inc
mov
fisttpll
popf
mov
xlat
decl
dec
shl
add
loopne
ljmp
or
in
popf
les
sar
adc
stos
dec
ficoms
xchg
sub
fbld
pop
cmp
sbb
ja
push
pop
xchg
out
dec
fsubp
fldenv
testb
cmpsl
and
inc
mov
cmp
in
outsb
xchg
icebp
mov
call
into
mulps
push
or
pop
push
test
adcb
ss
inc
roll
jp
sti
daa
lret
xchg
test
out
lcall
jmp
jp
or
and
and
jl
xchg
mov
stos
jne
push
test
jl
adc
std
push
lret
das
and
jecxz
repz
pop
jbe
push
xchg
mov
jp
ret
dec
xor
loop
imul
je
scas
std
aaa
dec
push
jp
xor
xchg
pop
push
dec
mov
ret
mov
adc
sbb
dec
or
addb
ja
addr16
aam
and
push
fidivrs
out
cltd
test
dec
sbb
jbe
mov
jnp
cltd
pop
mov
mov
ds
pop
mov
int
cltd
in
jns
loope
jmp
lcall
and
lods
ljmp
loope
callw
test
mov
notl
adc
mov
ss
repz
push
cltd
pop
push
stos
dec
loope
sub
dec
mov
imul
out
sbb
xchg
movsb
out
push
popa
arpl
adc
fildl
mov
xor
inc
cmc
mov
cmc
jne
push
xlat
icebp
mov
imull
cmp
xchg
outsl
test
in
push
cltd
or
andb
pop
xor
lea
outsb
scas
sub
dec
jle
ret
mov
in
sub
inc
inc
xchg
mov
mov
lds
pusha
popf
ret
sahf
fs
mov
sub
iret
mov
hlt
mov
adc
shlb
insb
fs
mov
mov
mov
push
or
xchg
aas
xchg
gs
jnp
aaa
orl
faddl
mov
mov
mov
fwait
loop
pop
adc
lds
nop
ss
daa
hlt
mov
movsb
pop
sarb
push
inc
sbb
popl
stos
rol
sub
jmp
xchg
adc
mov
cmp
pop
mov
jmp
ja
test
jecxz
imul
mov
jbe
xor
inc
leave
cmp
test
imul
mov
jbe
lahf
imul
or
mov
jae
sbb
rcll
test
ss
jno
stos
std
xor
stc
and
sub
in
cwtl
adc
stos
and
xor
xlat
pop
data16
inc
add
or
push
ja
and
icebp
cmp
pushf
cmp
xlat
cs
xchg
jbe
insl
mov
les
scas
add
test
sbb
push
and
jl
jp
scas
bndldx
nop
jmp
aaa
cli
xchg
dec
cmp
add
xlat
dec
cmp
lods
pop
int3
cmpsb
jne
xor
fdivp
arpl
xorb
int3
jo
cmp
mov
inc
sbb
sbb
cmp
test
inc
incl
ss
sub
adc
sub
leave
lock
mov
jmp
inc
add
lahf
enter
clc
and
inc
aad
jge
insb
adc
lea
shll
mov
jb
xchg
pop
cmp
add
sub
lret
mov
insl
sti
cmp
jno
shlb
xchg
or
inc
pop
or
repnz
call
mov
inc
push
pop
sbbl
popf
fimuls
sbb
mov
loopne
add
jnp
mov
cld
fistpll
js
stc
pop
jge
xchg
jmp
rolb
xor
adc
mov
adc
adc
sbb
mov
xor
xor
fiaddl
cld
iret
mov
out
mov
call
push
add
mov
out
sbb
add
jae
imul
test
pop
pusha
mov
cmc
sbb
xchg
mov
mov
in
pop
je
pop
and
lret
into
xor
addr16
int3
shrb
in
sub
xor
rcrb
push
push
xor
fidivrl
sub
and
dec
lcall
test
and
add
cld
jne
mov
xlat
frstor
cmpb
mov
iret
std
test
mov
adc
cmp
adcl
xchg
inc
sbb
scas
repnz
inc
es
adc
cs
cmc
rcr
push
adc
jae
rol
jecxz
sti
push
aam
pop
jo
pop
andl
pop
into
mov
sbb
mov
in
das
inc
add
into
imulb
idivl
push
mov
mov
xchg
mov
and
out
jb
loopne
addl
aam
fstl
mov
gs
push
add
cmpb
jmp
lcall
jmp
inc
fiadds
lock
aam
test
xor
enter
bound
pop
shlb
test
aaa
ret
sahf
pop
les
mov
cwtl
mov
test
test
mov
in
and
jl
inc
pusha
mov
mov
mov
push
cmp
or
fdivrl
dec
pop
stos
cwtl
js
loopne
ds
sbb
adc
pop
xchg
pop
push
pop
nop
ja
in
jnp
mov
adc
iret
mov
test
cmp
flds
ret
sub
lea
push
push
aas
jae
in
and
test
cmp
and
loopne
jge
mov
aaa
jne
jmp
xchg
adc
cli
inc
inc
pushf
idivb
xchg
cmp
je
mov
scas
jmp
jg
and
xchg
lds
popf
es
mov
push
dec
roll
fsubs
arpl
and
inc
inc
cmp
fs
lds
fs
push
push
cmp
inc
mov
mov
frstor
mov
hlt
fidivl
jl
lods
mov
jle
sahf
xchg
sahf
sub
pop
cli
cmp
and
sbb
dec
movsb
cs
popa
mov
mov
push
pop
enter
and
data16
ret
xchg
fidivrs
out
sti
adc
lret
fnstcw
inc
mov
dec
xor
loopne
pop
lock
dec
and
aam
fwait
and
test
cmp
test
ret
aas
jae
out
movsb
inc
dec
dec
sbb
adc
jg
dec
cli
pusha
movsb
mov
into
hlt
movsb
jle
hlt
add
mov
mov
mov
dec
mov
sub
push
imul
inc
bound
mov
jp
pushf
xchg
and
push
mov
cmp
das
or
mov
dec
mov
or
push
outsl
push
iret
shll
sub
ret
inc
aas
mov
fnstenv
and
lds
jno
mov
pop
sub
sub
lret
cld
pop
pop
mov
xor
pop
sub
cltd
inc
punpckhbw
mov
lds
dec
rcrl
inc
outsb
pop
mov
jb
pop
ffree
arpl
push
into
lods
out
aam
pop
or
and
popl
dec
or
movsl
pop
loop
in
and
mov
xor
adc
gs
cmc
es
into
testl
inc
xchg
pminsw
test
dec
mov
loope
sub
mov
add
mov
outsb
add
js
jmp
cmp
xchg
nop
jb
xchg
xor
push
movsb
movsl
and
mov
les
sub
clc
pop
mov
inc
add
mov
pop
dec
mov
jge
mov
loop
fldt
aad
sub
xor
or
repnz
addr16
pop
movsl
cltd
ret
add
lea
aad
ds
cmpb
mov
lds
or
xchg
aad
dec
mov
andb
andb
and
stos
xor
in
mov
aad
adc
xchg
lcall
xor
stc
iret
rcll
out
and
ljmp
ljmp
push
popf
mov
aad
xor
cmp
add
ljmp
rolb
jbe
adc
nop
lock
mov
pop
add
inc
sbb
sbb
pop
dec
jno,pt
or
ror
add
cld
nop
fsts
jmp
out
jbe
sub
orb
les
mov
inc
mov
or
and
shrb
ja
stos
cs
sub
mov
inc
jns
add
mov
jge
push
in
sti
daa
fs
je
fwait
add
addr16
mov
sbb
mov
addr16
cmp
ja
mov
xchg
jb
adc
leave
lcall
jge
push
lods
movsb
andl
sub
iret
or
inc
jbe
mov
jp
xor
aad
push
cli
mov
adc
movsb
aam
add
xor
jbe
roll
ror
insl
rcrl
ret
push
and
mov
xchg
cmp
lcall
into
cmpsb
popa
pop
push
fs
or
call
xchg
xchg
iret
roll
sti
sarb
in
mull
aad
mov
inc
pop
movsb
xor
xor
movsb
mov
push
mov
das
roll
dec
es
inc
mov
fwait
pop
ds
xchg
jns
movsb
cmpsl
dec
insl
dec
mov
mov
ret
stc
jnp
iret
xor
cld
nop
outsb
stos
test
cwtl
aam
jmp
xchg
sbb
lds
push
test
int3
popf
loop
repz
mov
sub
sbb
add
inc
inc
fisttpl
and
sbb
push
xor
int
int3
mov
add
stos
mov
mov
cmpsb
add
daa
sbb
xor
and
or
shlb
std
jbe
fsqrt
add
push
xor
lret
cmp
adc
or
movsl
cmc
test
xor
or
sbb
ret
add
lods
movsl
adc
hlt
lods
or
pop
jnp
push
dec
test
sbb
cmp
cmp
orl
out
mov
xor
dec
outsb
jbe
cmp
mov
sub
mov
jp
xor
inc
les
daa
outsb
ror
push
mov
or
aam
jmp
jl
jecxz
jno
enter
pop
in
into
orb
rcll
push
mov
out
mov
fcoms
scas
dec
xchg
and
inc
insb
hlt
out
mov
cltd
push
insb
int3
scas
sub
cli
pop
gs
movsl
je
out
out
shlb
sbbb
pop
jl
cmp
inc
xor
pop
and
outsb
mov
inc
xchg
lods
add
and
ret
outsl
dec
ja
pusha
pushf
dec
daa
jmp
test
es
or
or
push
sbb
sub
push
fisttpl
stc
sub
cld
pop
push
es
mov
and
xor
je
mov
xchg
fwait
ss
fldenv
int3
inc
rclb
sbb
push
pop
xor
push
and
in
push
push
or
or
jb
xchg
adc
rorl
scas
jmp
fs
add
jno
call
cld
or
push
aaa
stc
xchg
hlt
mov
negl
xor
stc
push
inc
and
ljmp
rorb
pop
pmulhw
bound
xchg
mov
mov
outsl
xchg
cmp
lcall
push
pop
xchg
jne
in
gs
xchg
mov
mov
fistps
js
lret
and
push
out
cmp
fildll
pop
loop,pt
fmuls
and
pop
and
fisubrl
xchg
cmp
enter
ds
mov
dec
mov
mov
test
ljmp
je
inc
repz
sub
jp
or
je
or
stc
add
jmp
ficompl
mov
inc
push
ss
push
push
add
sbb
pop
cmp
sub
pop
mov
shrl
loope
mov
dec
inc
add
sbb
mov
and
or
lea
cwtl
push
push
inc
popa
dec
popl
adc
roll
push
jnp
stc
push
in
mov
xor
or
push
add
jo
sbb
push
pushf
inc
hlt
in
popa
or
pop
lahf
cmp
xor
push
movsb
cmp
inc
adc
jno
xchg
mov
test
cltd
dec
pushf
ljmp
mov
jl
cmpsb
imul
cmp
cmp
adcb
jge
mov
outsl
pop
ss
bound
mov
cld
push
xor
outsb
fadd
popa
loope
nop
adc
inc
sbb
cmp
mov
mov
mov
ss
sub
outsb
sbb
pop
mov
nop
jne
add
and
push
sti
mov
cmp
aas
and
pop
insl
sub
flds
inc
jbe
push
test
push
ljmp
pop
dec
into
adc
sub
inc
fs
mov
int
inc
enter
cmp
insb
jnp
push
adc
mov
dec
mov
xorb
in
rcr
cmpsl
fsub
ret
sbb
inc
cwtl
xor
aam
ss
neg
je
mov
pusha
push
adc
dec
xor
fldl
stc
mov
movb
shll
inc
imul
push
jge
clc
jecxz
push
faddl
imul
in
inc
pop
push
fstpt
stos
sub
test
or
sub
repz
inc
mov
test
js
xchg
outsl
xchg
xchg
ss
lods
imul
arpl
cmp
int3
adc
shll
lock
push
icebp
fs
addl
push
and
stos
cmp
jl
mov
xchg
shll
loopne
jo
test
dec
inc
cltd
or
xchg
lods
pusha
xchg
cltd
js
mov
je
pop
jnp
sbb
lcall
jg
cmc
scas
icebp
filds
push
pop
mov
jbe
pop
addr16
lahf
jmp
stos
mov
jne
rorl
mov
add
lods
fwait
jecxz
test
rcll
das
pushf
pop
std
inc
inc
add
cmpsb
incl
std
fwait
inc
mov
mull
sub
fldl
rcrl
in
cld
jg
xor
jnp
ret
push
cmp
push
mov
loop
xorb
andb
rorl
ret
cmc
add
ror
mov
inc
jbe
or
lods
shrl
je
sbb
cli
cmp
pop
scas
jae
jno
movl
insb
cmc
push
mov
pop
and
inc
addb
mov
sbb
push
push
daa
fisttpll
sub
pop
test
mov
mov
mov
stc
arpl
jp
xor
dec
lahf
jns
sub
test
and
lods
sub
sti
cmp
lods
mov
fcmovnb
stos
cmp
test
jbe
outsb
fidivrs
cmp
ret
mov
movsb
xor
jno
xor
dec
add
sahf
cmp
sub
mov
popa
mov
mov
dec
mov
xchg
jg
test
cli
or
loop
cmc
jp
dec
dec
les
cmpsl
mov
mov
adc
test
xor
adc
pop
js
fcomps
mov
popa
fdivl
xor
dec
xchg
lcall
sub
sub
gs
cmp
cmpsl
cmp
scas
shrl
ds
lods
jbe
jmp
stc
int3
jbe
repnz
sbb
push
mov
push
lcall
in
lret
enter
jl
insl
cmp
lcall
xchg
inc
es
sbb
dec
add
mov
mov
sbb
lds
shll
ret
lods
xor
call
push
imul
push
dec
push
jl
mov
push
adc
fstpt
into
jo
lods
stos
jle
sub
adc
mulb
outsl
test
xor
icebp
pop
jle
pop
aas
jno
jge
repnz
sahf
addl
lock
sub
xchg
aam
mov
mov
inc
lcall
das
rsm
enter
pop
ja
loop
mov
pop
je
push
jo
imul
mov
xor
dec
arpl
cwtl
xor
add
cmp
test
sub
and
mov
inc
adc
push
out
sub
addl
push
loope
cmp
cltd
ds
jbe
inc
xchg
mov
mov
stos
popf
jae
loopne
fs
hlt
dec
call
in
jge
jbe
cld
fwait
push
add
fcoms
mov
and
pop
in
lea
jne
ds
sub
push
add
pusha
cld
push
pop
das
mov
adc
jo
int3
sub
out
inc
repz
cltd
push
xor
dec
inc
repnz
fisubl
jl
gs
inc
notl
and
popa
lret
dec
test
xchg
push
fildl
les
imul
outsl
mov
mov
insl
cmp
push
xchg
mov
stc
adc
cmp
or
lods
xchg
inc
ffree
stos
out
mov
mov
bound
cs
out
popa
jb
xor
idivl
inc
pop
inc
sahf
orb
xchg
loop
mov
out
push
and
xlat
jae
aad
jle
sub
xchg
xchg
dec
add
aam
xlat
cld
add
cmp
pop
std
testb
sub
in
hlt
sbb
push
mov
inc
mov
ljmp
lcall
mov
sbbl
sub
dec
out
and
mov
xor
cmp
inc
pop
outsb
push
jno
xor
push
and
sub
out
js
and
icebp
fldenv
sub
jae
out
pop
sbb
inc
je
ret
push
fidivl
cmp
add
das
jp
sub
and
jmp
dec
xchg
xchg
mov
lret
jb
fstps
pop
mov
add
sub
popf
aaa
adc
lds
loopne
cmp
icebp
adc
inc
enter
adc
sub
lret
imul
cltd
push
mov
mov
cmpl
xor
mov
rclb
mov
sbb
cmp
lds
push
test
sahf
jns
pusha
or
jmp
les
or
push
dec
xchg
pop
js
shlb
gs
mov
sbb
int3
push
in
jp
ret
jecxz
iret
scas
xor
mov
rorl
cmpsb
pop
mov
push
jbe
ret
pop
js
aad
enter
inc
sub
nop
imul
dec
mov
pop
adc
popf
mov
jmp
test
fs
ljmp
xlat
scas
cmc
mov
mov
icebp
xchg
sub
push
xchg
jl
or
nop
sahf
xlat
je
inc
out
xor
lret
lcall
adc
inc
sti
ficoml
fistl
push
inc
sub
pop
cli
inc
leave
fldcw
mov
iret
outsb
mov
je
leave
pusha
jl
add
mov
adc
adc
jns
mov
es
mov
dec
pop
fdivr
mov
cs
push
mov
adc
lea
mov
cmp
leave
mov
add
bound
flds
addr16
test
fs
out
les
lret
push
and
lret
dec
inc
movsb
dec
xchg
jae
imulb
cs
call
jno
inc
mov
test
cltd
cmp
xorl
or
inc
les
dec
and
cli
cltd
fbstp
xrelease
cmp
dec
stos
fisubl
mov
adcb
push
leave
xchg
aad
inc
jno
repnz
cmc
jnp
and
add
pushf
pop
or
nop
cli
jge
mulb
or
push
scas
mov
mov
mov
out
clc
iret
xor
adcb
xchg
cmp
cmp
mov
sarb
leave
imul
insl
cmp
mov
cmpsl
xchg
faddl
fstpt
mov
and
insl
lret
add
fdivrp
push
jmp
and
mov
mov
lret
imul
mov
mov
je
pop
sub
icebp
cmpsl
dec
and
das
stc
arpl
push
test
outsl
lcall
sbb
scas
add
in
inc
xchg
std
bound
dec
fadds
sub
test
and
xchg
dec
jmp
lahf
loopne
jmp
cmp
fsubl
mov
mov
dec
push
push
imul
inc
ja
xor
pusha
xor
mov
jo
jbe
gs
jecxz
fidivl
add
loope
and
xchg
pop
bnd
aaa
dec
cmp
test
xor
fs
adc
inc
push
mov
les
xchg
adc
dec
dec
push
repnz
insb
sbb
jge
push
dec
leave
pop
fldcw
jno
mov
mov
sbb
scas
sbb
xchg
and
pop
faddp
je
mov
test
fildll
jmp
jg
jl
mov
pop
popa
fists
mov
daa
adc
adc
xlat
in
mov
lret
fstl
mov
in
pop
xchg
jle
sarb
or
loopne
mov
dec
lods
stos
popa
data16
pushf
xorb
out
insb
scas
push
push
push
or
cmc
cmp
sub
ljmp
rcll
jg
cli
pop
sahf
jb
sub
das
dec
xchg
add
loop
push
sub
push
into
ljmp
pop
pop
pop
int
dec
cmp
jp
fs
adc
shll
xor
xchg
mov
dec
aas
pushf
fdivrp
or
stos
rcll
insb
xor
in
das
push
inc
mov
mov
mov
cli
insb
cmp
loope
or
aam
scas
xchg
mov
loopne
pop
mov
adc
jg
mov
js
mov
xor
mov
pop
aas
imul
dec
ffreep
adc
mov
pop
mov
pop
jnp
das
or
popa
jle
rcl
xchg
fbstp
jp
inc
and
dec
rcrl
inc
rcr
pusha
cmpsl
jl
add
inc
loope
pop
lock
mov
xchg
mov
inc
sub
out
mov
push
in
xchg
lock
notb
aam
mov
pop
mov
mov
lods
mov
lret
stos
mov
stc
icebp
addr16
jmp
test
push
repz
jmp
xchg
adc
inc
lods
in
push
mov
mov
sbb
movsl
mov
jnp
pop
imul
sbb
ja
or
or
jmp
enter
je
popf
jo
cli
mov
push
mov
push
push
stos
and
pop
int3
out
add
dec
jmp
fwait
rcll
mov
hlt
scas
lods
arpl
notl
and
xchg
sbb
mov
mov
push
int3
and
bnd
add
sub
pop
cmp
aas
popf
arpl
push
jns
xchg
scas
xchg
and
enter
jp
ljmp
xchg
push
add
mov
int3
or
jns
jmp
jle
xor
cmp
rorb
mov
add
fiadds
lret
subl
xchg
fsubp
xor
pop
mov
mov
lret
cmp
lods
sub
and
test
out
and
dec
push
jae
mov
jo
sbb
or
jns
in
rorl
push
testb
das
into
sub
fisubrl
dec
sub
insl
jno
fadds
aad
adc
add
jb
ss
mov
sarb
rclb
and
push
test
flds
mov
push
iret
xchg
sbb
add
xchg
mov
jb
out
pop
into
loope
lahf
inc
and
cmp
or
imul
lods
push
scas
sbb
mov
fisttpll
sub
adc
adc
lods
and
arpl
mov
in
xor
movsb
jno
xor
add
dec
mov
mov
pop
pop
pop
pop
out
push
mov
mov
mov
movsl
test
pop
or
fadds
jnp
xchg
xchg
add
add
dec
jmp
inc
out
dec
cmp
mov
push
push
lret
jbe
std
pop
cs
xor
mov
pop
js
loop
lcall
cltd
push
daa
jae
test
mov
sbb
movsl
xlat
mov
loop
jae
loope
jbe
aas
std
jg
mov
cmpsb
pop
and
mov
lret
and
loop
adc
int
movsl
add
shll
add
sbb
and
mov
jle
cs
jle
jno
es
loopne
sbb
leave
push
call
jb
aaa
jmp
scas
sub
fildll
aas
pusha
fsubl
mov
pop
or
push
jg
and
mov
xchg
repnz
mov
and
sub
xchg
lahf
sub
into
test
sub
inc
frstor
out
inc
jns
popf
test
mov
mov
popa
lahf
push
js
mov
insl
xor
das
enter
icebp
push
mov
push
aaa
and
jecxz
mov
pop
fnstsw
out
aam
jbe
mov
subb
push
mov
pop
mov
xchg
in
push
fwait
fwait
dec
enter
sarl
inc
adc
pop
jmp
add
jno
mov
pop
xchg
push
or
jle
shlb
test
das
xchg
dec
lds
cmpl
orl
call
fcompl
flds
shl
fs
lods
sbb
jg
pop
ss
push
aam
jae
roll
sahf
xchg
ss
cmp
scas
enter
cmp
push
dec
ljmp
cld
ljmp
repz
adc
adc
int3
das
out
mov
lahf
add
js
push
aas
mov
pusha
dec
mov
push
in
add
xchg
jle
sahf
fdivl
add
xor
push
ret
push
dec
sbb
scas
cmp
cmp
popf
int
cmp
mov
ficoms
sbb
inc
jae
inc
cmp
add
inc
cmp
sub
dec
cmp
lret
or
scas
pminsw
aad
cvtps2pd
adc
gs
gs
stos
mov
imul
movsb
in
je
and
xor
add
jb
out
mov
hlt
jbe
out
pop
int
lret
cltd
jl
pop
sbb
imul
aad
inc
xor
out
into
xchg
movsl
cltd
adc
inc
push
stos
cmp
test
gs
or
lcall
and
sub
push
jns
push
pop
jns
iret
in
int3
shl
xchg
xor
push
cmp
repnz
arpl
adc
andb
xchg
mov
or
jecxz
fstps
mov
js
xor
repnz
dec
mov
adc
jae
push
dec
in
sti
pushf
add
std
sub
pop
mov
inc
outsl
adcl
test
dec
mov
js
fidivrl
cmpsb
je
testb
jmp
and
leave
loop
jg
icebp
jecxz
xchg
xor
and
les
mov
jne
mov
shlb
inc
push
bnd
xchg
fwait
lret
cmp
adc
outsb
inc
dec
je
mov
adc
stos
jo
push
adc
arpl
jl
mov
jae
adc
in
lcall
and
and
jae
pop
je
cmp
enter
cld
imul
pop
cs
movsl
add
push
push
cmp
and
jge
mov
and
add
add
mov
adc
xchg
jle
cmc
scas
fadds
jle
inc
shr
jle
lcall
lods
mov
mov
pushf
loop
data16
jo
pop
xor
lods
push
mov
rcr
int
push
pusha
pop
mov
jno
push
fnsave
jecxz
dec
and
int3
out
xchg
cltd
mov
xor
pop
out
mov
push
int
lcall
add
or
imul
dec
xchg
sar
mov
dec
mov
into
pop
aaa
pop
shll
push
in
and
jp
push
jno
jge
scas
sub
push
mov
inc
outsl
lods
push
test
mov
pop
pop
mov
rol
and
and
xchg
push
std
stos
and
sbb
pop
jns
xchg
inc
iretw
adc
insb
cmp
rcr
add
jmp
sbb
dec
dec
mov
es
mov
push
fdivr
testb
imul
shlb
test
cmp
test
push
test
adc
jmp
movsb
xchg
aaa
mov
adc
je
cld
xlat
jge
mov
dec
xchg
mov
stos
cmp
dec
stos
pop
mov
xor
xchg
sbb
jo
pushf
adc
cli
sti
add
and
pop
mov
int3
cmpsb
xchg
lds
cmp
mov
fsts
jl
add
push
movsb
mov
mov
sub
movsl
inc
imul
fstps
and
inc
xor
adc
iret
idivb
arpl
jl
lods
outsb
out
pop
inc
cmpsl
jne
test
fisttpll
mov
movl
push
lret
js
into
mov
mov
and
pusha
and
dec
rolb
inc
cmc
pop
sub
stc
push
inc
jbe
jmp
fbstp
push
sub
rolb
mov
dec
or
xor
push
pop
jge
mov
decb
sub
and
inc
cmp
fidivrs
sbb
mov
add
mov
clc
mov
cmpsb
test
mov
repz
mov
mov
push
into
inc
test
inc
aas
int
adc
mov
cmp
fcoml
jp
sub
inc
mov
and
push
sub
sub
ss
jnp
ret
add
xor
or
cmp
fmuls
dec
xchg
sbb
dec
inc
jge
or
xchg
aaa
int
in
aam
lock
sbb
push
test
fsubr
dec
push
mov
or
fwait
cld
in
or
ds
daa
push
mov
je
cmpsl
daa
addl
mov
lods
scas
cmp
add
stos
dec
xlat
shrb
pop
enter
fstl
sbbl
jle
enter
leave
shll
bound
cmpsl
mov
rcll
cmp
xchg
or
mov
into
mov
lcall
and
jo
sbb
lods
std
shrb
mov
xor
ja
cwtl
lods
stc
mov
aam
das
fidivrl
cmpsb
rcrl
cmp
mov
xchg
mov
movsl
mov
ds
cli
cmc
sahf
push
adcl
or
pop
fisttps
cmp
insl
enter
test
icebp
outsl
sbb
pop
xor
lcall
mov
jmp
xchg
loop
xchg
push
jne
lret
push
adc
loope
decb
mov
and
sti
pop
test
addl
loop
push
loopne
jnp
dec
pop
fs
sub
xlat
mov
cmp
sub
loope
call
add
push
jnp
mov
lods
or
in
pop
test
loope
fisubrs
sbb
sbb
neg
sarl
cwtl
fwait
push
push
repz
imul
bound
aaa
mov
pop
ljmp
adc
cwtl
jne
out
jns
dec
mov
outsl
in
fisubl
loope
fdivrp
fimull
mov
pop
scas
pop
gs
sbb
lcall
sub
pop
xor
into
sbb
loopne
sub
jno
idivb
cltd
and
jo
or
cli
jp
adc
cmp
ret
ficoml
inc
add
dec
jp
cltd
test
test
sub
jmp
bnd
add
adcl
cmp
sbb
pop
test
mov
or
mov
int
mov
inc
test
lods
test
sub
fmul
xchg
push
mov
sub
jmp
adc
cmp
mov
gs
outsl
add
stos
scas
sbb
enter
mov
int
xchg
mov
ret
repz
stos
sti
pop
or
sub
hlt
gs
in
fnstcw
pop
cmp
enter
cld
je
ss
hlt
iret
ss
in
dec
stos
mov
mov
mov
leave
js
cli
shll
push
rorl
test
mov
xlat
lahf
xor
nop
push
icebp
loope
and
dec
das
aas
adc
jl
mov
jl
inc
gs
jg
pushf
aad
xor
loope
sbb
inc
lcall
inc
cs
jg
cld
cmpsb
mov
xchg
sbb
jmp
daa
ffree
sar
dec
add
enter
and
test
jns
mov
icebp
shrl
loop
out
sahf
hlt
je
fistps
and
imul
push
pmaddwd
or
pop
fwait
dec
xchg
jecxz
addr16
arpl
inc
out
es
sub
dec
stc
ret
add
mov
pusha
jae
popa
push
ffree
lea
imul
sbb
out
fcomps
cmpsb
fdivs
xchg
clc
cli
add
imul
mov
sbb
push
test
shr
out
insb
out
loop
aam
inc
scas
int3
rcrb
rclb
adc
mov
dec
scas
cmc
fcmovnbe
mov
push
shlb
iret
pop
mov
push
loop
test
or
loopne
loopne
test
insl
std
lahf
xchg
xchg
jp
lahf
pop
dec
in
fs
movsb
sub
inc
jnp
jmp
sbb
xor
cs
inc
dec
xchg
xchg
mov
sbb
push
jbe
sarl
lahf
pop
scas
cmc
push
cld
xchg
add
adc
aam
test
mov
fimuls
roll
pop
xchg
cmp
dec
fdivr
aas
rorl
sub
add
or
cltd
jb
int3
push
or
jbe
adc
adcl
mov
cs
dec
js
mov
call
and
outsb
xor
jge
movsb
dec
ret
dec
adc
imulb
sub
stos
loopne
sub
sbbb
cwtl
das
or
addr16
cmp
ret
dec
mov
jnp
popa
movsb
cli
mov
popf
or
xor
jo
testl
mov
push
sbb
pop
pop
int3
sub
or
in
cmp
mov
hlt
stc
aad
dec
roll
add
xor
das
or
test
fistps
or
sub
cmpsb
jae
gs
adc
dec
fidivl
pop
cli
fimuls
hlt
inc
xlat
or
bound
mov
pop
mov
add
inc
dec
insl
daa
dec
clc
mov
rcll
sahf
adc
in
mov
repz
pop
aam
mov
gs
cmp
push
data16
sbb
inc
test
in
inc
and
push
mov
or
sbb
scas
inc
bound
jg
inc
xchg
mov
push
mov
push
mov
sarb
subl
push
push
cmp
mov
popa
adc
or
inc
pop
insl
lret
pop
jne
cmpb
and
jge
push
or
pop
loope
cmpb
adc
pop
pop
ds
mov
mov
push
fcomi
sub
mov
or
daa
mov
out
ds
pop
test
add
jo
rcrb
mov
insb
iret
cmp
icebp
mov
into
adc
sbb
sbb
cmp
frstor
test
fs
mov
addr16
xlat
cmc
and
in
pop
loop
lds
xor
xorl
xchg
fsubrp
cmp
adc
fdivs
les
imul
push
mov
ret
std
inc
stc
and
pop
imul
sub
movsb
xchg
mov
das
xor
mov
imull
push
push
add
add
xchg
add
leave
lods
lahf
mov
nop
ret
ljmp
sub
pop
xchg
daa
jno
lds
mov
dec
sbb
cmp
insb
inc
nop
mov
rorl
add
icebp
je
mov
mov
add
adc
mov
cltd
mov
jmp
fcmovnbe
addr16
fsubp
in
rol
cmp
push
or
cmpsb
stos
es
aas
popa
jle
fstps
or
test
dec
jae
scas
push
adc
insl
dec
lahf
or
xchg
sub
das
jmp
cmp
leave
outsl
add
push
fwait
cmpsl
pop
out
xchg
pop
mov
rolb
add
or
fs
push
or
lcall
loopne
rclb
adc
in
cmp
andl
popf
frstor
xchg
sarl
fisubs
mov
inc
aaa
fnstcw
cmpb
lret
hlt
aas
and
cmpsb
fildll
inc
adc
pop
pop
mov
aad
outsb
in
pop
imul
jne
gs
fidivs
jp
arpl
inc
hlt
fwait
clc
xlat
lods
in
mov
jp
out
or
cwtl
inc
xor
sbb
mov
in
leave
dec
cmp
push
mov
lock
jecxz
push
push
insb
xchg
inc
bound
xchg
pop
adc
push
lods
aad
shlb
fisubs
xor
and
add
jb
cmp
xchg
adc
adc
jbe
repz
outsl
test
cmpl
jmp
sub
mov
daa
sub
ret
dec
loop
lret
pop
loope,pt
jae
pop
cld
fnstsw
sub
adc
out
nop
jle
pop
or
fidivrl
daa
dec
aaa
jle
pop
push
je
mov
xchg
ret
dec
mov
addb
or
lock
mov
addr16
mul
and
pop
aad
loop
cltd
add
mov
ret
inc
out
in
mov
pop
adc
rcrb
lods
dec
xchg
shr
inc
dec
icebp
adc
and
arpl
lods
pop
sarl
pop
lods
ret
outsb
jmp
pop
dec
sbb
push
xor
orb
scas
ret
dec
mov
fnsave
data16
test
hlt
and
push
xor
lret
push
insb
repnz
cwtl
xchg
push
and
shrb
jmp
fisubl
ret
inc
aaa
cmpsl
jmp
lcall
push
mov
pop
insb
icebp
aam
pop
xchg
in
pushl
cli
insb
subl
lret
push
push
mov
inc
cmp
mov
stc
stos
mov
loope
punpcklbw
push
loopne
inc
mov
xchg
mov
dec
jae
pop
inc
cmp
test
aad
or
cltd
cmp
loopne
clc
ljmp
or
in
out
inc
imul
add
mov
out
xor
pop
add
pop
mov
orb
push
mov
test
and
test
and
xor
push
jmp
mov
mov
mov
adc
sbb
or
jge
push
jge
divb
jmp
push
xor
scas
aas
push
and
out
mov
jb
push
daa
fcoms
mov
out
movb
sbb
pop
cld
mov
shlb
inc
hlt
call
jp
adc
nop
daa
and
shrb
pop
mov
push
sbb
dec
lods
insl
or
push
les
jle
nop
jb
fistpll
cmp
pop
fwait
stc
in
lea
push
mov
push
nop
into
xlat
je
mov
adc
dec
xchg
adc
and
xchg
push
lret
cwtl
mov
outsl
es
fcmovb
adc
xor
jnp
jecxz
xor
scas
inc
sub
mov
adc
add
and
repz
fs
mov
mov
je
popa
inc
xchg
in
push
stos
sub
sbb
and
jb
fsub
ret
js
and
add
pop
adc
fadd
xchg
push
es
inc
push
call
or
jg
cmp
xchg
mov
test
popa
xchg
cmpsl
rcrl
lock
push
pop
shlb
in
or
lahf
into
lea
xor
into
pop
orb
mov
add
ret
mov
nop
shlb
xor
loop
mov
or
movb
inc
cmp
out
adc
cmpsl
push
or
loop
lahf
xchg
push
push
xor
imul
aaa
and
jle
test
mov
jg
jb
gs
rdtsc
xor
jb
test
mov
pop
inc
xchg
cwtl
mov
sti
push
add
hlt
out
pop
cmp
test
jl
mov
stos
mov
inc
push
pop
or
mov
aam
lods
insb
or
fadd
subl
xorl
mov
xchg
sub
std
cli
pushl
frstor
jl
and
pop
inc
pop
cmpsl
xor
lods
xchg
popf
stos
loope
out
push
xchg
int
iret
in
jbe
out
adc
daa
pop
stos
dec
repnz
mov
dec
test
les
mov
mov
cmp
cmp
xor
movsl
sbb
rcrb
dec
cli
aas
inc
insl
xor
push
fdivrs
decb
out
pop
ja
test
jl
or
mov
dec
mov
dec
inc
out
cltd
add
pop
cmp
lods
push
inc
stos
cmp
adc
and
arpl
mov
xor
movsb
scas
xchg
push
out
cmp
adc
inc
clc
js
fcoml
mov
bnd
mov
cmp
inc
test
sbb
push
sbb
mov
clc
mov
fisubrs
jecxz
stos
sub
shrb
movsl
mov
or
stos
cmpb
mov
int3
repnz
xchg
xchg
addr16
push
loopne
push
movsl
je
mov
xchg
cmc
xchg
test
push
pop
mov
push
xor
sbb
mov
insb
loop
movsb
repnz
mov
sbb
sub
data16
mov
js
aad
pop
es
dec
cmp
sub
lret
daa
pop
jnp
cmp
cmp
lcall
in
mov
adc
aaa
fisttpll
std
jns
loop
xor
insb
loop
adc
mov
mov
mov
ficoms
push
mov
out
xor
es
xchg
xchg
mov
cwtl
shlb
cmp
fcom
xchg
jns
mov
xor
idivl
ds
mov
sbb
pop
ds
out
test
ljmp
scas
lods
mov
push
ljmp
jne
icebp
in
inc
fldcw
xchg
dec
inc
int
jl
clc
pusha
sub
cli
shll
mov
call
add
jle
inc
dec
xchg
sarl
adc
or
out
outsl
add
movsl
xchg
mov
adc
gs
push
fsubrp
add
lods
lods
add
push
sti
add
mov
xor
les
call
mov
sbb
insb
inc
pop
sub
add
stos
xchg
pop
push
repz
inc
xor
adc
shll
inc
sbb
pop
jo
jge
fs
loopne
xchg
lods
js
fsubp
jbe
out
sbb
xchg
out
fmul
ror
sbb
and
and
xor
push
pop
in
popa
test
pop
loop
or
fsts
xor
inc
ljmp
xchg
jnp
lea
mov
jl
sbb
mov
dec
cmp
mov
jmp
adc
push
cmp
and
arpl
mov
mov
xor
in
inc
aad
lcall
add
lds
xor
mov
push
pop
mov
out
repz
inc
fisubrl
icebp
das
imul
jno
jne
test
int3
cmc
pop
xchg
jp
frstor
bound
adc
sub
jecxz,pt
cs
nop
cli
shll
jbe
sbb
push
nop
fwait
stos
or
lret
pop
lock
adc
pop
cmp
jne
pop
push
mov
jb
mov
in
dec
test
scas
imul
cmp
pop
in
jb
sbb
sub
cmp
sarl
sbb
xchg
mov
cli
int
dec
dec
mov
roll
xchg
add
stos
movsl
push
pushf
ss
xor
test
outsb
mov
sub
or
mov
xor
clc
jo
or
push
and
into
inc
mov
push
inc
jg
out
std
sub
jns
push
mov
mov
scas
ret
mov
or
cltd
pop
shlb
cli
jg
divl
sub
fidivl
jecxz
add
add
lret
repz
push
leave
pop
pop
test
cmp
jecxz
jl
add
pop
lahf
jge
pop
lods
aaa
xchg
outsl
mov
xor
cmp
jnp
sub
aaa
fld
mov
rcrl
xor
xchg
cs
mov
movsl
inc
cmp
clc
fsubs
push
jbe
push
inc
cmp
stc
add
movb
sbb
adc
cli
ss
jb
pop
int3
mov
ds
bound
aas
daa
mov
inc
mov
mov
dec
pop
imul
movb
push
cmp
xlat
jne
call
in
sbb
rorl
pop
jb
push
cld
roll
jg
arpl
roll
ljmp
out
adc
dec
inc
mov
jmp
mov
xchg
mov
pop
pop
or
scas
into
hlt
fstpt
push
sahf
mov
dec
xor
leave
xchg
ret
loop
sub
inc
sub
xor
loopne
mov
sub
sub
stos
popf
mov
lret
inc
push
out
pcmpeqw
sbb
jmp
inc
and
das
pushl
jno
dec
pop
or
enter
ret
in
xchg
out
sbbb
inc
dec
add
xor
inc
and
iret
shlb
insl
int
int
shrl
jbe
xor
shrl
jmp
pop
sbb
jge
lar
das
setg
add
cmp
fs
xor
lret
add
scas
out
push
leave
dec
jbe,pt
stc
sbb
cltd
jle
mov
xchg
lock
push
shrb
pusha
add
or
sti
cltd
inc
lcall
sbb
add
notb
sub
sub
fsubl
and
or
imul
push
rcll
pop
mov
mov
push
jno
pop
xor
jmp
out
mov
inc
jmp
jmp
pop
sbb
adc
repnz
jne
jg
mov
jb
xchg
and
lret
cli
ja
xchg
repnz
jb
inc
outsl
ljmp
aaa
dec
fildll
ss
inc
into
push
aas
shll
fstps
outsb
in
pop
sub
jne
cmp
push
ss
xor
xor
mov
addr16
or
add
out
loopne
xchg
and
pop
xlat
jbe
jmp
xchg
mov
imul
test
imul
call
jnp
sbb
pop
and
lcall
bound
into
lods
sahf
or
xlat
bound
call
lret
inc
sub
mov
push
inc
jg
stos
out
int3
pushf
jb
nop
xchg
sbb
or
sbb
xchg
pop
lahf
push
addl
andl
pop
jnp
ss
inc
int3
mov
adc
loopne
xchg
test
jmp
fstpl
andl
and
fxch
pop
adc
arpl
xor
push
jg
sbb
cli
leave
jge
mov
mov
jp
lret
jge
push
push
sbb
dec
mov
xchg
ja
jo
loope
outsb
gs
hlt
dec
clc
sub
xchg
and
lock
mov
xlat
sbb
cmp
push
out
ja
adc
xor
stc
push
clc
enter
push
stos
outsb
jns
and
int
mov
lret
into
mov
jmp
ja
lods
inc
in
test
mov
pop
pop
ljmp
jne
in
and
js
imul
movsl
cmp
jns
roll
popa
js
dec
or
adc
stc
cmpsb
mov
nop
fcmovnb
fsubs
scas
sbb
xchg
add
scas
ja
push
mov
push
out
mov
or
mov
adc
add
jmp
out
mov
and
mov
mov
and
sub
pop
rolb
mov
out
andb
mov
jne
mov
test
imul
dec
push
out
fstps
lcall
xchg
lret
cmp
stc
js
jl
fwait
call
push
push
mov
pop
aad
mov
cmpsb
mov
pop
cld
jbe
cmc
sub
cmp
ss
mov
mov
or
sub
push
xchg
test
js
mov
stc
cmp
sarl
add
mov
add
push
pop
and
rcl
mov
mov
xlat
xchg
test
sub
mov
adc
mov
mov
sahf
jo
push
or
movq
adc
mov
jns
fnstenv
lds
push
and
or
jo
xchg
jb
xlat
add
mov
adc
data16
mov
arpl
fs
xchg
shrb
pop
mov
stc
arpl
aaa
nop
cmp
mov
push
xchg
jno
popa
mov
je
xor
ret
das
sbb
xor
push
and
xchg
mov
cmp
xlat
inc
pop
into
cmp
mov
sbb
ret
add
enter
push
cmpsl
and
frstor
dec
sbb
out
adc
sub
push
dec
xchg
lock
cmp
xor
push
cmc
adc
pusha
jae
loopne
add
lcall
orb
lahf
call
dec
and
xor
adc
lock
scas
movsb
sub
mov
int
das
sub
push
pop
and
shr
mov
fsubrs
jmp
pop
mov
aam
mov
push
mov
cmp
jb
mov
xor
xchg
leave
ds
lock
in
test
jb
jecxz
arpl
xchg
inc
adc
dec
jae
in
aam
mov
push
js
adc
add
jno
fs
sbb
mov
inc
cli
xchg
and
jnp
xchg
mov
xor
repnz
loop
sti
movsl
sar
mov
mov
push
sbb
add
sbb
mov
or
cmp
jno
cmp
js
stos
daa
bnd
cmp
imul
fcmovnb
decl
ret
inc
out
or
cmp
lods
test
and
das
leave
fmull
push
cmp
test
out
lret
mov
sub
mov
inc
inc
push
jl
lcall
pushf
out
push
shrb
xor
xchg
lahf
pop
test
add
loopne
lods
sub
cltd
ss
mov
out
or
and
jno
enter
in
xchg
fstps
dec
pushf
jno
or
divb
loope
mov
and
fsubr
mov
hlt
aam
ja
push
pop
xchg
pop
imul
test
cmpl
xchg
leave
inc
and
test
insl
loopnew
jo
mov
or
lea
push
fcoms
test
mul
xchg
js
aam
out
repnz
pop
fnstsw
add
inc
mov
mov
mov
pop
in
sti
or
and
test
sbb
mov
pop
fs
cmp
pop
sbb
add
mov
xchg
xchg
ret
or
out
je
cmp
nop
mov
lods
arpl
cld
movsb
push
inc
cld
push
jne
ja
repz
mov
push
icebp
mov
pop
mov
jns
leave
cmc
sbb
scas
xlat
cmp
out
xchg
dec
les
mov
mov
mov
stc
rclb
xchg
test
adc
xchg
mov
mov
adc
icebp
cmpsl
aad
xor
sbb
cltd
fxrstor
cmp
aam
cwtl
mov
rorb
mov
dec
push
xchg
sti
scas
pop
xor
sahf
pop
iret
cwtl
fcomps
mov
loope
xor
mov
dec
mov
jbe
mov
pushf
movlps
leave
ret
fwait
imul
imul
arpl
fldcw
repz
adc
mov
popf
shr
cltd
call
test
jmp
or
out
fidivs
xchg
lahf
test
jmp
in
cmp
adc
sbb
call
cld
ljmp
push
repz
fs
adc
outsl
jns
out
xchg
ficompl
xor
fcomps
iret
push
out
rclb
xor
adc
sbb
pop
adc
add
cld
test
or
and
sbb
inc
mov
pop
adc
je
cli
lock
cmp
jge
pop
fildl
or
sub
mov
xlat
out
push
xchg
push
mov
xlat
mov
scas
out
insl
out
inc
adc
mov
lcall
pop
jmp
dec
mov
lcall
enter
in
out
xchg
and
sbb
or
cmpsl
inc
or
sbb
dec
cmc
lds
sub
xchg
mov
cltd
pop
inc
xchg
aam
cmp
push
push
sub
fldcw
gs
push
sub
pop
out
shll
in
pop
xor
xor
pop
xor
outsb
pop
insb
mov
adc
into
int3
insb
in
jecxz
push
out
adc
and
fwait
mov
add
repz
mov
cmp
mov
scas
mov
arpl
xchg
jmp
out
cmp
dec
adc
jecxz
cmp
xchg
ljmp
jge
or
ja
aaa
adc
movsb
cmc
movsb
mov
enter
test
aad
xchg
mov
xor
cld
add
movsl
ljmp
stc
movsb
xchg
and
cltd
aam
adc
jmp
xchg
jl
rorb
jp
jp
sub
jo
aaa
xchg
mov
out
arpl
mov
fwait
fwait
sub
adc
ljmp
inc
iret
in
or
pop
cmpsl
cld
cmpsl
pop
mov
sub
test
inc
fimuls
xchg
cvtps2pi
mov
push
out
into
les
loop
pop
stos
lcall
clc
imul
clc
or
and
mov
rcrb
fisttpll
int3
pop
mov
stos
out
lods
or
dec
dec
stc
fs
or
stos
ret
push
in
fidivs
aad
or
lock
leave
insl
inc
test
nop
sbb
ret
add
inc
push
push
shrl
in
pop
sub
dec
cmc
dec
or
test
dec
pop
hlt
inc
jmp
and
scas
dec
or
sub
inc
xor
push
dec
test
clc
leave
fimuls
push
call
inc
mov
filds
jne
fildl
imul
and
mov
nop
pop
jne
jle
fidivrl
xchg
adc
fistpl
roll
mov
mov
lods
or
mov
test
inc
sbb
sbb
outsb
adc
push
rcrl
or
lcall
and
push
fcmovnb
xor
mov
lods
movsb
bound
inc
add
popf
pop
mov
in
jge
ss
sub
pop
mov
lcall
in
ret
and
xor
pop
dec
and
dec
cmc
add
test
data16
mov
jb
hlt
sub
lea
lahf
test
pop
in
xchg
push
jl
mov
js
sbb
xor
outsl
cld
push
and
mov
mov
aam
repnz
iret
mov
push
mov
clc
addr16
mov
jne
add
movsb
mov
jp
ret
out
testl
test
adc
pusha
or
vpackuswb
or
jp
jno
mov
xchg
cs
mov
in
in
mov
or
in
or
jge
cs
xchg
shl
xor
add
mov
fucomp
cmp
cmp
mov
sahf
pop
and
cld
add
mov
dec
mov
aas
je
jecxz
orb
pop
dec
add
ds
push
test
dec
sbb
sahf
mov
aad
lret
adc
xchg
or
ds
addr16
in
cmp
xchg
xchg
sub
and
ljmp
stos
faddl
fwait
and
pop
pop
or
dec
not
xor
in
imul
dec
lret
js
rorb
push
xor
enter
repnz
popl
mov
pop
jbe
add
loopne
je
in
and
push
sbb
or
and
push
or
xchg
dec
mov
imul
ret
loop
sub
pushf
push
fimuls
jmp
sbb
popa
mov
lods
fldlg2
mov
mov
pop
mov
mov
inc
xor
xchg
cmp
lds
addr16
mov
mov
lea
scas
loop
inc
std
sahf
inc
in
dec
cmc
movsl
fistpll
sbb
push
xor
int
test
lock
in
xor
adc
jge
inc
sub
mov
int3
imul
repnz
or
das
dec
xor
addr16
lods
pop
gs
mov
pop
add
push
iret
push
outsl
icebp
cmp
cltd
lret
stos
clc
sbb
addr16
xorb
sbb
add
xchg
das
scas
mov
and
lea
test
lds
movsl
mov
mov
inc
data16
sub
pop
jg
xor
dec
sbb
mov
nop
or
outsb
add
mov
sbb
int
test
jecxz
into
mov
jl
pop
inc
add
mov
push
ffreep
xor
aam
dec
test
arpl
mov
cld
push
push
cmp
add
lds
jae
fdiv
adc
mov
lahf
ret
cs
je
adc
into
fidivrs
js
mov
adc
jmp
daa
cmovae
loopne
push
in
in
movsb
ss
cli
sbb
cmp
adc
repz
stc
sbb
orb
call
cmp
jp
push
sub
cmp
mov
or
arpl
aad
or
pop
movsl
scas
dec
cltd
and
mov
fidivrl
adc
cltd
cmp
dec
sbb
cmp
pop
rol
insl
sbb
in
bound
enter
adc
sbb
mov
jne
mov
mov
fldt
jp
repnz
femms
push
popa
insb
aad
inc
mov
ss
test
repnz
dec
add
stc
loopne
cmp
push
pop
adc
pop
rcrb
adcb
push
add
popl
sub
pop
cmp
jno
sbb
mov
cmp
and
stc
mov
fadd
pop
xlat
sbb
sub
add
sbb
out
xor
ret
xchg
into
inc
ljmp
aad
push
pushf
stc
repnz
out
loope
imul
pop
xchg
cmp
adc
xchg
lds
push
xchg
repz
stos
insb
cmp
rcl
push
rol
jns
pushf
jp
cs
sahf
sbb
mov
mov
ljmp
scas
push
in
xor
hlt
sbb
mov
mov
data16
into
js
popa
fdiv
mov
mov
xchg
pusha
sahf
jb
lret
cmp
dec
fs
imul
mov
jno
adc
pop
inc
in
data16
ljmp
adc
int3
mov
add
push
scas
sbb
pop
adc
insb
sub
inc
or
mov
or
cmp
popa
mov
or
sahf
pop
xchg
jmp
pop
sbb
pop
pop
fistpll
push
dec
push
or
mov
pop
ret
popa
rorl
or
xchg
mov
daa
jle
jecxz
xor
stos
loope
icebp
je
inc
adc
mov
cmpsl
jb
test
out
popf
pop
test
insb
aam
sub
sti
xor
sub
out
insl
add
lahf
fldcw
das
xchg
outsl
xchg
insl
lds
daa
mov
loope
and
popf
imul
jno
cmp
lcall
push
xor
cmpb
pop
mov
xor
jle
repz
pop
xchg
addb
rorb
sbb
pop
xchg
ljmp
outsl
dec
enter
mov
inc
pop
shrb
sub
push
push
aam
lcall
xchg
loopne
adcl
inc
lods
movsb
push
lock
pop
scas
xchg
push
scas
addr16
lret
inc
push
dec
xchg
inc
jno
xor
test
jne
xor
dec
ja
pushf
adc
push
out
sub
insb
ficoms
xor
loope
bound
insb
cmc
push
push
adc
je
mov
xor
jl
outsl
add
add
inc
sahf
sbb
sti
push
cmp
or
arpl
pop
pop
frstor
mov
sub
mov
cmpsb
sub
and
inc
mov
movsb
lret
mov
jnp
test
fldt
ja
xor
mov
jb
and
cmp
popa
ja
xchg
lahf
or
xor
bound
pop
fistpll
in
out
sbb
jno
push
mov
xchg
aad
push
adc
mov
or
lock
cmp
jae
xchg
pop
fstp
push
int3
cmp
lahf
mov
or
pusha
xorl
jo
jp
add
mov
data16
repnz
add
sti
rcl
fs
ds
in
outsb
xlat
lds
aaa
mov
cmp
mov
arpl
repz
xor
sahf
sbb
test
movsl
jae
je
cmp
cld
push
cmp
pusha
out
mov
sbb
or
push
mov
jg
xchg
jns
dec
add
xor
or
insb
rclb
addb
pop
aad
outsb
scas
adc
repnz
cli
xchg
mov
and
adc
push
gs
mov
adc
imul
cmp
sub
jne
and
push
xchg
divl
push
loop
in
int
enter
cmp
fwait
loope
xor
cld
adc
loop
inc
stos
or
stos
cmp
xchg
in
xchg
mov
andb
and
sbb
push
into
repnz
and
or
stos
popf
dec
shl
inc
pushl
mov
fidivs
sub
enter
loopne
or
ud0
fwait
enter
fidivl
push
into
into
mov
lock
test
aaa
jnp
dec
jge
aad
inc
sub
dec
nop
out
push
pop
jno
cmp
movl
imul
add
pop
test
or
stc
sahf
outsb
push
movsb
shrl
and
jnp
mov
inc
xchg
dec
fwait
leave
cmpsl
nop
sahf
or
test
and
stos
lods
shll
jnp
fs
adc
test
mov
dec
cwtl
loope
xchg
add
jecxz
repz
neg
in
mov
ficoms
xor
movsb
dec
xor
mov
jge
dec
imul
push
inc
add
jae
pop
push
frstor
cmpb
cmp
mov
mov
rcrl
int
mov
cs
push
mov
push
mov
mov
js
pop
mov
jae
cmpsl
xchg
adc
xor
xchg
stc
outsb
addr16
cmp
add
imul
lret
lds
leave
cmp
pushf
out
in
xchg
cmp
pop
sub
sbb
xchg
jo
leave
add
xchg
mov
jl
adc
test
mov
fsubrl
pusha
pushf
mov
xchg
shrb
cmp
ja
mov
aas
xchg
push
cmp
xlat
dec
les
data16
out
jnp
add
sbbl
cmp
lds
push
sbb
mov
popa
dec
adc
lcall
xchg
jmp
dec
scas
fstpl
cltd
pushf
mov
mov
mov
cwtl
gs
aas
inc
or
pop
iret
mov
xchg
mov
iret
add
aam
mov
flds
test
sub
sub
pushf
adc
js
mov
fwait
jae
push
or
sub
xor
outsl
mov
mov
jae
fwait
inc
call
lret
pop
sbb
jo
and
cli
or
divb
loop
sbb
nop
mov
sub
pop
les
push
inc
push
andl
mov
pop
push
mov
push
mov
out
mov
xor
inc
mov
int3
stos
scas
clc
dec
sbb
shlb
aas
adc
mov
adc
jnp
pushf
sub
fstpl
sub
mov
adc
dec
and
pop
add
cwtl
adc
mov
and
fsts
imul
cmc
pop
push
leave
mov
dec
mov
cmp
inc
test
jae
sub
mov
lock
jns
sub
and
xor
inc
pop
insl
in
xchg
lods
dec
or
mov
pop
jne
pop
jg
lods
outsl
stos
cmp
out
push
add
lock
dec
aad
push
vpshad
lcall
clc
out
fwait
dec
in
mov
jo
in
inc
mov
lds
mov
jo
ret
mov
enter
dec
mov
pop
push
mov
xchg
xor
sbb
pop
xchg
popa
sub
mov
adcb
int3
and
sbb
mov
mov
movsb
cwtl
sbb
divl
push
sbb
jns
xlat
and
idivb
add
inc
insb
xchg
loopne
mov
and
and
adcb
push
aam
fs
sarl
dec
out
adc
loope
and
push
jg
insl
jns
repnz
scas
arpl
test
ja
in
mov
xchg
arpl
scas
jp
outsb
dec
xchg
mov
ds
mov
adc
shll
dec
lds
mov
dec
add
dec
xorl
jle
out
xchg
jo
jecxz
mov
sub
push
push
int3
jge
xchg
out
adc
xchg
and
jnp
xor
sbb
jns
inc
dec
out
and
or
test
repz
xchg
adc
in
push
outsl
loope
jo,pn
mov
add
cltd
mov
popa
leave
lock
jb
dec
roll
mov
jns
dec
sti
sub
push
sbb
cmp
repnz
shrl
cmpsl
xor
pop
add
pop
mov
fists
arpl
aam
shrb
push
add
push
imul
dec
mov
loop
sub
xchg
jmp
call
lock
lret
cmp
dec
mov
loope
inc
inc
inc
push
jb
dec
notl
mov
int3
and
adc
cmp
cmp
fisubl
dec
sahf
add
cmpl
and
cmp
lods
scas
add
adc
jecxz
mov
sbb
outsb
dec
xchg
push
push
pop
loope
push
sbb
pushf
ret
lds
mov
xlat
mov
aaa
jns
xor
dec
dec
stos
adc
cld
sub
jnp
mov
es
test
in
mov
inc
sub
xchg
hlt
pusha
cli
hlt
pop
push
or
mov
imul
pop
lret
aaa
mov
ret
mov
stos
xlat
fidivl
fisubs
adc
andb
xchg
ficompl
loop
xchg
jg
mov
popa
cmp
lcall
pusha
cmp
xchg
cli
neg
mov
rcrb
ret
or
mov
jns
scas
jge
xor
leave
cs
lock
and
arpl
aad
fimuls
lds
popf
mov
inc
xchg
sub
and
dec
loop
pop
repz
add
notb
adc
jg
lods
int3
cmc
inc
xor
and
iret
pop
inc
xor
mov
shlb
push
mov
mov
mov
push
in
sbb
lret
cmpsl
into
loop
add
mov
xchg
lcall
adc
in
sub
je
cwtl
sub
iret
pop
cmp
pop
in
stos
sub
aaa
adc
pop
pop
cld
cld
mov
mov
pushf
insl
lea
cmp
lret
scas
inc
int3
sbb
outsb
dec
push
jecxz
repz
cltd
out
push
pop
repnz
xor
mov
aaa
int
mov
and
popa
outsb
dec
adc
cmpsb
push
out
jne
rclb
sub
scas
push
cmpsl
jne
dec
dec
test
jmp
sahf
add
sub
mov
sti
xor
adc
jge
xor
shrl
push
push
in
push
sbb
inc
mov
ljmp
xchg
sbb
popa
loopne
and
dec
and
stos
cmp
jns
lock
std
sbb
cmp
push
mov
sbb
mov
add
icebp
pushf
shlb
dec
imul
shrl
add
addl
xchg
shll
enter
jmp
mov
clc
xlat
clc
mov
push
xor
popa
out
pop
dec
or
jae
iret
dec
adc
xchg
cltd
dec
jl
jmp
test
nop
push
stos
pop
fisubs
or
rclb
mov
cmp
mov
add
jno
push
adcb
jne
cmc
adc
mov
push
or
data16
das
xor
adc
push
mov
mov
mov
mov
dec
mov
jl
jo
iret
loope
shll
addr16
push
xor
adc
data16
hlt
sub
ja
mov
lds
mov
imul
cmp
inc
movsl
in
xchg
jl,pn
sbb
and
decl
pop
fistps
faddl
push
lods
pushl
daa
or
lock
pushf
xor
inc
xchg
cmp
dec
adc
dec
mov
mov
sub
ss
jnp
cmp
int
cmp
lea
js
sbb
xchg
clc
inc
std
jne
cmpsl
or
cmp
xchg
xchg
scas
popa
adc
xchg
lcall
xchg
std
cmp
pop
xchg
inc
fbstp
movsl
fwait
call
loop
jecxz
cs
inc
imul
ror
mov
sbb
or
xchg
std
mov
fmull
jle
out
cwtl
pop
dec
fmuls
aaa
enter
imul
cmp
cmpsl
adc
fnstsw
aad
cmc
push
jp
loop
aas
inc
ss
call
or
je
fimull
aaa
dec
push
xor
inc
lock
bound
imull
int3
gs
hlt
out
push
aas
pop
xor
mov
test
sub
call
pop
add
mov
push
subb
in
adc
nop
movzwl
dec
adc
push
aaa
stc
xchg
lcall
add
mov
jns
sub
adc
enter
push
mov
call
nop
in
cmpsl
or
jecxz
rcl
or
cmc
xchg
cld
xchg
dec
xchg
ljmp
mov
push
jne
push
mov
fwait
dec
lret
fisubl
stos
jg
pushf
fstpl
cwtl
jp
adc
and
jmp
add
popf
sbb
and
call
ds
cwtl
cmp
and
outsb
outsb
jb
mov
mov
xchg
jmp
xor
ret
popa
and
sarl
bound
push
fcmove
test
mov
sbb
inc
xlat
or
pop
adc
sub
sbb
lods
xor
lea
nop
int
loopne
or
mov
push
test
xchg
jl
push
ljmp
insl
mov
or
mov
pop
sub
jae
mov
ja
ss
mov
dec
pusha
int3
gs
insb
xchg
pop
sub
js
rorb
sbb
add
cmp
jg
xchg
fmull
mov
xchg
push
jl
mov
test
cmp
pop
mov
movsl
cmc
mov
popa
mov
cmp
push
adc
outsl
out
add
and
mov
bswap
or
andl
push
mov
in
jae
jecxz
in
loopne
xor
test
pusha
push
mov
xchg
inc
xchg
jecxz
in
pop
cltd
push
shrb
inc
fs
int
mov
xor
push
subl
or
mov
fcompl
cltd
je
enter
cmpsb
jmp
fdivrs
in
les
dec
movl
mov
mov
icebp
push
push
xchg
sbb
shl
les
xchg
ljmp
mov
aas
cmp
cli
cld
sbb
stc
out
sti
push
das
stc
dec
adc
dec
ret
dec
jbe
and
xor
loop
mov
cmp
cwtl
test
pop
fcmovu
in
pop
sbb
pop
repz
jmp
dec
jle
or
sbb
sbb
xchg
mov
test
mov
pop
aad
pop
jns
mov
inc
pop
shlb
pop
stos
xchg
out
aam
les
xchg
jle
dec
pop
mov
add
addr16
mov
and
mov
inc
loop
or
cmp
fdivl
cmpsb
sub
cmpsl
xchg
mov
sub
or
inc
das
dec
enter
push
mov
and
mov
sub
fisttpl
adc
gs
pop
mov
sbb
inc
nop
pop
in
lods
subl
lds
ljmp
push
sbb
sub
in
and
dec
inc
add
adc
int3
fistps
sbb
pop
mov
mov
or
dec
arpl
jbe
clc
stc
call
cmp
cmp
outsb
xchg
cmp
mov
jmp
xchg
sbbl
add
orl
fsubrl
ret
xor
aad
dec
pop
ficompl
cmc
mov
and
cli
sbb
inc
out
add
shlb
lret
cmc
mov
add
mov
arpl
push
ret
into
aad
repz
aam
pop
lcall
lcall
cmp
push
popa
or
rorl
and
lock
mov
mov
inc
adc
jg
jl
cli
lods
ffree
insl
inc
shlb
nop
gs
loope
pop
jbe
push
sub
fadds
mov
adc
jmp
pop
jecxz
adc
xlat
arpl
sub
pushl
xchg
mov
inc
mov
push
xor
pop
sbb
cli
insb
fwait
add
call
cmpsl
pushf
xchg
xor
sub
mov
sbb
jmp
test
xchg
and
push
push
jge
or
into
mov
ret
xchg
pop
cli
imulb
jo
push
jmp
push
stos
in
jb
mov
add
cmpsl
push
aas
adc
pop
inc
mov
pusha
mov
add
or
cmp
das
loopne
pop
add
lock
sub
cmpxchg
or
das
mov
addr16
fstps
repz
jecxz
or
push
pop
mov
sbb
xor
pop
lret
jno
dec
aas
mov
adc
fwait
popa
xchg
lret
mov
popf
pop
insb
lcall
addl
cld
imul
mov
cmp
repnz
jne
movsl
mov
inc
outsb
sub
movsbl
xchg
mov
ficoms
fucomi
add
stc
and
loop
ds
mov
add
rclb
mov
addr16
pop
push
or
jbe
in
rorb
daa
ret
dec
jg
add
adc
xchg
int
and
cltd
int
xlat
outsl
adc
and
inc
aam
mov
je
or
pop
or
jl
sbb
fdivs
frstor
and
imul
pop
sbb
jl
mov
js
xor
test
adc
cmp
test
inc
adc
es
jmp
mov
dec
repnz
mov
push
adc
pop
imul
cmp
sub
xor
incl
or
dec
fdivrs
pop
data16
fstl
fidivrl
xchg
out
sbb
pop
or
mov
iret
pop
xchg
sub
mov
in
inc
jg
mov
or
icebp
cmp
add
jge
or
or
sub
or
int3
adc
mov
test
das
push
fistpl
mov
mov
test
push
les
leave
ss
aaa
mov
sbb
into
addr16
and
pop
cmp
imul
sbb
sub
xchg
xor
imul
xor
mov
ret
sbb
loopne
jl
icebp
sub
fcoms
loope
movsb
rcrb
fmull
enter
sar
subl
in
sbb
cmpsl
cltd
cwtl
fsts
cmp
dec
jecxz
adc
icebp
jecxz
lock
scas
out
call
aam
arpl
push
sahf
cmp
xchg
fimuls
clc
xchg
add
dec
mov
mov
ljmp
jmp
leave
dec
push
cs
jb
sbb
add
inc
cs
mov
add
lahf
lds
jbe
daa
dec
in
movsb
shll
gs
popa
dec
mov
cmp
insl
pop
push
push
xlat
data16
mov
xchg
fldl
js
push
push
mov
addl
mov
and
popf
jge
adc
out
sti
dec
sbbb
xchg
ljmp
daa
iret
inc
xchg
mov
xchg
pop
add
adc
dec
cmpsb
xchg
imul
push
dec
pop
fs
sahf
iret
sub
jne
mov
jae
call
sbb
nop
mov
sub
adc
roll
pop
xchg
test
jnp
cmp
mov
mov
dec
xchg
xchg
cmp
sub
mov
pop
je
or
adc
lods
adcb
pop
and
jmp
xchg
jb
ja
inc
inc
and
jb
imull
xor
xchg
xchg
xchg
or
mov
imul
cld
orl
add
dec
insb
mov
xor
shlb
mov
std
inc
stos
inc
add
out
out
pop
pop
push
ret
int3
inc
stc
dec
cmp
scas
inc
sbb
in
add
into
xchg
sub
xchg
mov
cli
enter
sbb
dec
scas
inc
jno
scas
push
or
mov
adc
ja
sub
jb
out
aaa
std
mov
lahf
loopne
push
push
inc
xor
inc
fisttpl
mov
fcomps
or
mov
jno
je
lret
hlt
orps
sbb
into
pushf
cltd
adcb
mov
sbb
out
dec
adc
mov
icebp
cli
test
movsl
shlb
add
xorb
xchg
lret
les
xchg
push
dec
out
in
dec
lds
imul
mov
mov
sbb
cmp
and
mov
mov
sub
adc
lret
loopne
xor
and
pop
icebp
fs
inc
and
loop
mov
add
jnp
ret
mov
add
int3
mov
mov
push
cmp
mov
fs
loopne
in
test
sbb
jg
dec
xchg
pop
es
test
andl
pusha
mov
test
mov
push
cmpsl
jo
push
mov
jno
shl
bound
rclb
nop
aam
dec
lcall
pop
mov
sub
pop
out
xchg
ss
pop
adc
push
lods
inc
xchg
xchg
mov
jmp
jbe
clc
dec
fwait
xchg
jnp
test
movsl
rolb
fdivl
lea
mov
xchg
pusha
pop
xor
out
fiaddl
push
shr
out
pop
mov
iret
mov
mov
sbb
add
sahf
or
nop
mov
int3
pop
cmc
pop
inc
pop
mov
mov
outsl
and
add
imul
in
or
movsb
pop
in
aam
jae
push
jne
fwait
mov
xlat
cmp
inc
ficompl
test
pop
popa
loopne
movsb
test
notl
ljmp
push
pop
std
fisttpl
fmull
int3
cmp
xor
mov
andl
mov
cmc
pop
push
out
xchg
or
in
int
sbb
jbe
or
sub
lcall
imul
stos
stos
loopne
dec
pop
adc
mov
jno
and
xchg
dec
sub
cmp
mov
or
sarb
pop
cmp
push
jg
les
insl
ror
sub
pop
mov
fwait
jg
push
imul
or
data16
pop
rcr
scas
pop
fwait
sti
or
daa
daa
xchg
pushf
fsubrl
mov
dec
call
jns
lods
lahf
add
daa
inc
call
sbb
imul
int
dec
lock
leave
or
and
shl
and
cmp
sub
xor
push
inc
xor
mov
popa
xchg
mov
inc
mov
mov
out
xchg
loopne
mov
out
fiaddl
inc
rolb
cs
test
and
test
inc
jmp
dec
mov
bswap
pop
mov
js
sub
sub
pusha
imul
or
pop
sbb
mov
xchg
sahf
mov
popf
add
mov
pop
xchg
mov
jnp
sbb
mov
rcrb
xchg
pop
dec
pop
je
cld
mov
add
inc
push
aad
stos
push
repz
push
sbb
lea
insl
xlat
scas
xlat
push
inc
dec
cwtl
cmpb
jmp
jge
push
bound
inc
mov
push
imul
out
js
out
lret
xlat
aas
pop
int3
jne
in
adc
pop
push
rcr
shrb
out
sbb
push
ficoml
lret
popa
dec
imul
and
mov
inc
and
cwtl
mov
jns
adc
cld
xorl
scas
inc
inc
sahf
adc
lods
fstpl
sbb
push
les
mov
jnp
dec
dec
cwtl
add
sbb
sub
jns
and
xor
pop
add
adcb
call
push
imul
and
fdivrp
xor
loopne
lock
enter
fists
movsl
adc
add
push
pop
push
mov
mov
adc
lods
and
test
fcmovu
xlat
or
pop
repz
jp
loope
mov
xor
popa
jno
cmpsl
mov
push
clc
cmpsl
es
aam
std
cmp
mov
fiadds
je
subl
sub
mov
adc
in
ds
xchg
int3
icebp
imull
icebp
jns
iret
sub
cli
lret
xor
sti
xchg
cmp
xor
dec
lcall
xchg
push
fstpl
sahf
mov
add
xchg
pop
push
dec
sbb
inc
aad
fsubs
cli
xchg
and
into
cmp
xchg
stos
sbb
inc
jecxz
dec
stos
fs
into
jmp
std
stos
ljmp
inc
cwtl
in
sti
out
rorb
push
test
xchg
in
imul
adc
lods
je
xchg
and
push
pop
and
loop
dec
inc
push
aas
and
sbb
insl
fists
sarl
ja
lods
or
shr
loopne
test
add
mov
cmp
mov
repz
sbb
or
sbb
and
push
add
sub
ret
add
xor
jmp
movaps
in
add
inc
adc
jp
test
cld
popa
sbb
pop
dec
push
imul
divl
fisubl
fiadds
cmp
xchg
add
push
hlt
and
int3
push
xchg
in
inc
pop
fwait
pop
add
test
jb
jp
jg
jo
jb
mov
push
je
repnz
sbb
loop
fdiv
xlat
adc
mov
dec
mov
mov
out
xchg
adc
aaa
mov
push
xlat
jae
lahf
mov
inc
fimuls
ljmp
cmp
jbe
add
insl
cli
stos
jle
imul
xor
pop
mov
into
fidivs
pop
shll
cmp
jmp
dec
insb
xor
cmp
shlb
jne
in
pop
or
mov
pop
sub
jns
inc
ss
bound
cmp
jge
cmc
shlb
cli
jecxz
xor
cmpsb
jnp
loop
ds
out
sub
repnz
idivb
pop
mov
jnp
mov
sub
pop
cmp
js
sbb
push
jae
inc
sub
sub
push
in
sub
jb
pop
ret
scas
mov
pop
cmp
push
adc
not
sbb
daa
aad
inc
cmp
cmp
iret
js
cmc
jp
cmp
or
cmpl
fwait
push
rcrl
inc
fbstp
push
jecxz
push
int
orl
inc
xchg
push
scas
adc
jb
pop
lods
dec
and
mov
sbb
lds
and
mov
ret
loopne
mov
cmp
stos
jb
out
cwtl
and
adc
std
jge
or
cltd
push
push
jns
fdivl
nop
and
jae
ret
call
mov
xlat
iret
jl
ljmp
bound
adc
inc
enter
push
dec
add
mov
popf
cmpsb
inc
jne
cmp
add
lcall
sbb
stos
jae
add
mov
xchg
inc
sub
mov
mov
in
test
stc
sub
stos
mov
pushf
or
push
inc
movsb
mov
das
ljmp
lock
jecxz
cmc
cmpsb
call
cs
mov
and
pop
mov
inc
ja
add
xor
setge
sbb
outsl
mov
cmp
repnz
mov
and
je
lds
ret
cltd
and
xor
test
sahf
inc
cmpsb
popf
sahf
hlt
jmp
lods
sbb
bound
mov
push
div
clc
xor
inc
popa
xchg
inc
in
std
push
nop
loope
imul
std
sti
or
adc
sub
push
mov
clc
fsubr
insl
jnp
cwtl
mov
out
loope
mov
sub
std
push
out
push
mov
shlb
adc
es
sti
iret
fisttps
cltd
jns
push
mov
in
fsubrs
ja
add
pop
xchg
lock
and
cmp
ds
inc
enter
dec
and
or
cld
push
jb
sub
leave
mov
in
sbb
and
in
or
notl
xchg
pusha
mov
cltd
icebp
sbb
rol
cltd
clc
cmp
add
ret
jecxz
pop
data16
daa
loopne
push
dec
push
mov
sbb
or
mov
mov
push
push
sub
lods
cltd
ror
inc
inc
fldz
lret
xchg
sbb
lods
cmp
and
pop
outsb
inc
arpl
test
test
fwait
xchg
int
xchg
cltd
aad
adc
push
es
jae
jne
add
adc
fstpt
and
out
in
out
movsl
push
scas
loopne
ds
test
rcrl
repz
aad
leave
cwtl
nop
insl
xor
dec
xor
or
pushl
sti
adc
and
out
test
cmp
cmp
in
lret
and
xchg
sbbl
lods
add
adc
pushl
out
mov
pop
xchg
scas
fisttpll
rorb
in
cmovnp
add
flds
push
jle
cmp
daa
fisttpll
fidivl
mov
cmp
icebp
hlt
push
mov
jno
dec
dec
mov
sub
arpl
int3
xchg
xchg
mov
ficoms
cmp
daa
pushf
mov
rorb
stos
pop
adc
add
inc
test
or
or
sub
fwait
adc
das
push
repnz
adc
jne
jnp
aaa
pop
imul
imul
popf
pop
sub
aad
jbe
mov
jno
scas
popa
cmp
inc
mov
fisubrl
enter
leave
push
dec
xchg
inc
out
push
into
cmp
mov
iret
outsb
mov
aad
pop
push
jb
in
mov
iret
push
xchg
mov
or
clc
xchg
fdivrl
dec
add
mov
or
test
push
cmpsb
inc
pushf
or
imul
xchg
vunpckhps
ficomps
push
push
dec
das
push
mov
je
stc
cltd
push
sbb
sbb
sbb
sbb
pop
outsl
rclb
push
scas
xor
and
shrb
pop
ffreep
shrl
hlt
sbb
fdivrs
lcall
push
das
enter
push
loope
push
adc
jge
test
enter
jecxz
cmp
ret
and
ud1
in
push
in
jbe
xchg
jge
lea
fsubp
sbb
inc
aaa
hlt
cli
mov
jmp
cltd
mov
xor
cmp
and
and
lods
xor
loope
adc
jb
jmp
das
or
sub
shr
mov
jge
push
pop
mov
enter
in
cmp
popa
ficoml
push
push
dec
das
sub
adc
xchg
stos
add
mov
stos
mov
sbb
xchg
and
iret
jne
popa
xchg
loope
jmp
mov
test
das
movsl
loopne,pn
add
pop
push
xor
mov
mov
sarl
mov
out
std
inc
enter
xchg
push
jnp
lock
pushf
mov
inc
test
jae
out
pop
or
data16
cmp
push
sbb
stos
lret
in
and
push
mov
sub
clc
out
outsb
lods
or
cmpsb
add
dec
xchg
pop
jge
aaa
sub
test
push
filds
lahf
iret
adc
push
mov
inc
sbb
sbb
adc
comiss
mov
sarl
xchg
jg
shll
jmp
mov
inc
and
add
inc
xchg
mov
pop
aam
mov
and
add
scas
adc
lods
pop
or
jmp
xchg
push
aas
push
mov
js
fnsave
adc
leave
lods
adc
mov
repz
push
into
push
add
xchg
out
stos
sbb
enter
repz
repz
loopne
inc
or
fwait
aam
mov
aas
dec
mov
pop
stos
jl
ss
cmp
inc
mov
imul
into
sbb
gs
or
subb
test
loop
test
lahf
mov
out
insl
aad
or
pop
ss
fisubs
mov
imul
jge
lahf
adc
pop
pop
xor
std
mov
repnz
mov
sbb
lcall
incb
loopne
pop
mov
dec
notb
js
or
aad
in
out
fdivrl
mov
mov
cmp
mov
js
fld
jecxz
jno
testb
ss
jbe
jmp
cmp
rorb
popf
imul
sbb
push
inc
xchg
dec
xor
add
add
stc
addr16
jnp
jbe
xchg
jecxz
xor
insl
in
xor
movb
lods
xor
sahf
pop
xor
je,pt
or
xor
mov
subb
cmp
inc
and
into
stos
push
enter
std
mov
sbb
and
and
push
mov
shll
adc
imul
sub
push
es
xlat
das
or
pop
lock
imul
and
std
test
ret
mov
paddusb
mov
jg
xor
popf
fwait
loop
xor
xchg
mov
insl
dec
jae
nop
mov
pop
dec
adc
jne
fcoml
lahf
push
lret
mov
push
aam
and
inc
sub
insb
xchg
mov
push
jno
out
bound
mov
movsb
mov
push
arpl
repz
xchg
and
js
mov
in
add
cmp
repz
inc
loope
popf
subb
out
xchg
push
aas
std
adc
ja
ds
pop
or
pop
jae
pop
cmp
or
mov
shl
jb
jg
adc
aas
pop
push
movsl
mov
jns
in
add
ja
roll
jnp
ja
xor
lret
adc
ljmp
sub
mov
out
inc
addr16
icebp
jns
enter
sahf
jmp
sub
notb
inc
jg
xor
test
inc
xchg
test
mov
sbb
inc
ret
adc
push
adc
mov
out
inc
jae
cmp
iret
or
arpl
aas
mov
popf
dec
pop
ss
or
inc
adc
jge
rorl
loopne
mov
adc
jno
enter
repnz
mov
or
imul
adcb
jns
xchg
jae
cmpsl
mov
out
pop
enter
xchg
dec
shrl
sub
adc
and
pop
mov
pop
pshufw
push
loopne
aaa
cli
cmp
jl
xchg
mov
scas
popa
repnz
movsb
or
add
jecxz
jo
in
add
lods
mov
jns
xor
pop
xchg
int
sbb
lock
test
mov
aad
into
lahf
and
adc
jecxz
subl
and
cld
lret
popf
pop
mov
aam
mov
xchg
jp
movsb
inc
mov
mov
fwait
mov
fdivrl
cmp
mov
dec
stos
jnp
mov
add
xchg
pop
sub
cmp
addr16
out
jmp
pop
mov
out
arpl
inc
ffreep
jbe
popa
pop
stos
lret
lcall
xchg
cmpsb
insb
xchg
dec
dec
and
jns
push
dec
and
test
sbb
inc
movsb
xor
dec
pop
insl
cmp
add
mov
xlat
pop
sbb
sbb
pushf
pop
xchg
fistpl
in
cs
daa
sub
call
pop
xor
ffree
rclb
cmp
cmpsl
arpl
sub
cmp
jno
pop
cmp
and
xorl
pop
jp
jg
cli
sbb
add
mov
mov
das
add
add
xor
pushf
sub
jbe
add
add
call
push
mov
push
pusha
imul
push
int
push
add
mul
or
mov
pop
or
push
xor
dec
mov
mov
jp
pop
fdiv
inc
xchg
fcmovb
inc
call
aam
ds
sahf
ret
mov
cmpsb
loop
ja
xchg
xor
mov
jmp
inc
pop
xorl
and
aaa
cmc
adc
or
mov
push
push
incl
sbb
dec
shrb
out
pop
rolb
mov
lods
sbb
imul
jle
cmc
lock
dec
out
les
dec
rcll
dec
inc
loop
xor
stos
push
test
scas
dec
xchg
add
insl
lea
data16
xchg
mov
repnz
push
push
xor
jo
fcoms
xor
lea
push
popf
std
ds
daa
mov
jmp
fldenv
icebp
stc
mov
stos
cmp
arpl
pop
xchg
pop
movq
sub
or
sub
incl
and
insl
xchg
aaa
jns
cltd
bound
xchg
gs
pop
pop
mov
adc
clc
aas
into
outsb
js
int3
orb
lcall
cld
push
js
test
pusha
inc
adc
das
lods
sbb
cmp
test
outsl
pop
sbb
mov
pushf
or
fcomps
cmpsb
push
xor
pushf
cmp
inc
shrl
or
faddp
repz
mov
loopne
sub
dec
cmp
ret
xchg
cmp
gs
divb
jle
sub
out
ficomps
gs
sti
cs
ret
out
dec
and
jl
gs
sub
aaa
mov
std
testl
es
int3
dec
xchg
fcmovbe
out
inc
test
or
cmp
fnstcw
inc
into
into
aam
xchg
pop
lock
stos
or
lds
adc
dec
sbb
push
cmpsb
movsl
ret
in
fsubrs
and
out
and
inc
jl
pop
mov
pop
xlat
aas
aas
pop
sti
ja
andl
xchg
fneni(8087
shr
rclb
outsb
sub
sub
pop
xor
push
jo
sub
gs
xchg
loop
dec
push
jbe
adc
aaa
movsl
xor
or
test
mov
push
jae
cmp
push
dec
sti
roll
mov
outsl
ret
into
push
jne
mov
and
xlat
jne
cwtl
aad
fsubrl
pushf
cmp
adc
jno
ja
fcmovb
shrb
xlat
mov
scas
add
dec
xor
scas
push
cld
repz
cwtl
mov
outsl
sub
repz
lock
mov
cmp
imul
std
pushl
mov
shll
cmp
jmp
xor
into
mov
fcmovnu
stos
or
mov
test
insl
or
insl
sub
inc
sub
pop
notl
mov
xchg
jl
cmp
fwait
sub
stos
scas
fdivrs
cli
xlat
inc
mov
mov
rcl
adc
dec
inc
into
inc
aad
lods
lds
xchg
popa
imul
mov
jnp
cmpsb
pop
pushf
jp
add
fsubs
push
push
fldt
popf
pop
mov
pusha
std
xchg
int3
lahf
call
pop
loop
and
inc
ds
jae
mov
aas
out
jle
cwtl
lret
rcrb
or
cmp
in
mov
fnsave
in
mov
das
jge
fisubl
loopne
cmp
out
cmp
icebp
imul
and
dec
dec
std
gs
sub
xchg
jmp
loop
imul
rcrl
ja
pop
mov
pop
movsl
movsb
cmp
add
js
and
test
push
leave
inc
cmp
or
adc
xlat
mov
repz
jp
pusha
xchg
call
jecxz
imul
add
mov
call
cmp
jo
mov
sbb
in
out
cwtl
cmc
cmp
shll
les
lock
mov
stos
pop
mov
sbb
inc
xchg
xchg
scas
inc
ja
test
int3
xchg
dec
adc
rclb
jne
sbb
xchg
insb
clc
fwait
orb
ret
sub
sbb
push
int
scas
movsl
sbb
stos
lock
loopne
nop
push
loope
inc
inc
lea
inc
mov
pop
add
mov
insl
stos
sub
pop
jae
movsl
imulb
xor
stos
push
js
cmp
fcoml
scas
daa
adc
push
jle
lret
inc
adc
insb
xchg
ret
jne
mov
imul
imul
test
cmp
pop
fldcw
fimull
inc
add
fstl
jl
and
mov
pusha
mov
jle
lds
rcrb
mov
pop
adc
jb
dec
push
mov
push
out
mov
jp
fmuls
cmp
movq
lods
jmp
stc
and
cli
stos
int3
ss
and
sbb
shll
into
xor
sub
xor
dec
pop
inc
sbb
mov
jne
out
sub
pop
pop
add
mov
sub
inc
push
sbb
inc
jp,pn
fstpl
inc
sti
fsub
ja
out
mov
xor
fcmovne
xor
push
lods
pop
xor
mov
push
xor
and
jne
push
ja,pn
cmpb
jb
or
mov
nop
mov
xchg
pop
sahf
cmpsl
or
clc
addr16
adc
xchg
addl
test
cmc
cmc
fcmovbe
push
das
jns
jnp
xor
popf
lret
cmpsb
mov
push
cmp
pop
test
loop
lahf
pop
pop
jae
std
mov
loopne
stos
jo
inc
mov
mov
arpl
xchg
arpl
sahf
loopne
scas
fdivr
shl
xlat
and
mov
mov
lcall
lret
xchg
pop
sub
mov
push
popf
mov
stos
ret
mov
lcall
xorb
mov
add
ljmp
insb
fimull
popa
and
push
leave
lret
std
jp
das
and
les
inc
idivl
into
je
or
lds
aas
loopne
mov
je
add
jnp
pop
mov
xchg
dec
aad
mov
sahf
aam
mov
mov
sbb
stos
loope
inc
or
pop
mov
xor
xchg
dec
movsl
mov
adc
adc
and
pop
xchg
push
jbe
push
mov
pushf
aaa
push
dec
bound
imul
lcall
pop
push
xor
jg
mov
pop
js
cwtl
add
dec
ret
addl
xor
popf
mov
pop
js
lods
jns
and
mov
mov
lret
imul
adc
inc
jecxz
add
mov
cmpsl
fists
stos
mov
and
cli
pop
ja
nop
dec
mov
fdivs
insl
sub
xor
mov
ds
and
pop
cmp
fidivrl
imul
sti
lcall
pushf
pop
mov
sub
or
lods
out
xor
pop
and
cld
jbe
lds
pop
sar
push
pusha
xchg
repz
dec
pop
icebp
jno
mov
pop
ds
xchg
fists
mul
mov
xchg
pop
push
push
cli
movsl
addb
jmp
je
cmpsl
sarb
int3
xchg
lock
mov
mov
mov
jns
pop
fdivrl
out
and
imul
into
outsb
aad
jp
jmp
inc
mov
iret
xchg
call
xor
push
push
cltd
push
das
xchg
data16
nop
mov
ja
lock
xchg
mov
mov
dec
setno
pop
pop
lret
mov
pop
jmp
inc
cmpsb
pop
jo
mov
ds
lret
mov
jl
push
or
scas
push
dec
stos
sbb
imul
lds
test
lods
and
repz
iret
out
shll
adcl
lods
mov
xchg
mov
sub
into
ds
test
and
inc
into
mov
sbbl
les
movsl
iret
je
or
mov
push
or
es
loope
loopne
popa
jecxz
ja
add
inc
inc
lock
jne
daa
rcr
and
jecxz
jecxz
lods
xor
or
push
mov
adc
mov
xor
ja
sub
and
ror
call
jbe
jle
stos
mov
out
jnp
sub
or
addb
rcll
xor
xor
imul
cpuid
xor
loop
jle
jge
aaa
lock
out
clc
bndstx
loop
inc
ljmp
popf
not
test
push
popf
push
inc
fbstp
inc
cmp
mov
movsl
adc
inc
pop
inc
shlb
fisttpl
sbb
loopne
in
sub
ret
xchg
jp
xor
jns
and
loopne
xchg
movsb
int
shll
xor
adc
mov
jge
jp
mov
fcoms
sarb
push
test
in
inc
mov
mov
push
ljmp
and
pop
lahf
in
jnp
pop
mov
push
mull
pop
scas
xor
sub
sub
push
mov
add
insl
jle
cmp
and
popa
inc
add
jmp
jns
arpl
dec
xlat
jb
push
inc
jmp
add
fsubr
push
out
jp
jg
je
xchg
inc
mov
insl
dec
je
inc
iret
mov
push
mov
outsb
pop
mov
mov
fimuls
lds
sahf
shll
insb
fcomps
cltd
mov
sub
sbb
aad
shll
jp
cld
ret
aam
jmp
inc
cmp
loop
pop
inc
inc
sub
mov
xchg
pop
or
pop
ja
mov
pusha
pop
inc
mov
jg
movsb
mov
xchg
scas
xor
in
loop
clc
xor
nop
mov
stos
lea
imul
sub
push
loop
lds
jo
push
jmp
push
mov
mov
sub
and
mov
jecxz
cmp
xchg
push
dec
decb
sub
outsl
xor
cmpsb
pop
bound
test
jle
sbb
fsubrs
cmp
xchg
add
pop
loope
sbb
dec
repz
lahf
scas
mov
cmp
push
fs
imul
adcl
mov
addl
dec
mov
pop
popf
shll
std
jo
push
daa
inc
mov
xchg
bound
pop
jns
adc
cwtl
scas
or
push
sbb
shrb
test
scas
rep
add
mov
xor
mov
aam
addl
push
mov
aaa
cld
jae
inc
dec
or
mov
rcll
sarl
dec
cmp
incb
mov
mov
pop
jo
mov
inc
sub
sub
sbb
arpl
pop
mov
movsl
pop
mov
xchg
cmp
ja
pop
xor
lds
aas
in
xchg
cmpsb
shlb
pop
mov
sub
shlb
xor
ret
mov
ljmp
jp
mov
push
repnz
in
jp
insb
xor
xchg
aad
int
sbb
dec
fstl
aam
and
out
popf
xor
push
lcall
add
clc
pop
inc
push
xchg
and
adc
pop
cwtl
roll
xchg
les
mov
stc
mov
push
or
mov
add
jb
mov
enter
inc
lods
jl
add
aam
repz
or
aas
je
rol
pop
ret
inc
in
sarb
push
shl
cmc
jo
data16
loopne
xchg
leave
mov
mov
push
out
mov
mov
ds
mov
dec
flds
dec
mov
xchg
cmp
pop
xchg
xlat
sbb
and
and
cs
addr16
xchg
scas
mov
jns
xlat
movsl
or
adc
bound
inc
or
mov
call
adc
insb
loope
mov
loope
rcll
orb
lcall
into
or
inc
push
aas
aaa
jae
push
int
int
fs
aam
xchg
sub
addr16
mov
adc
push
xchg
fiadds
jecxz
jb
fcmovne
rolb
xchg
jmp
mov
lret
pop
sahf
add
push
mov
xchg
arpl
jae
xorb
hlt
out
add
loopne
es
ret
cmp
or
mov
mov
and
sti
xchg
mov
insl
cmp
fsubrl
mov
sub
push
jle
push
es
pop
div
mov
add
mov
add
jbe
pop
lea
aam
pop
push
mov
push
test
push
push
jg
mov
cmp
in
dec
movsb
jmp
and
adc
test
idivb
mov
lock
subb
aaa
mov
jae
adc
jb
add
pop
roll
call
mov
test
jg
cs
out
addb
jmp
repnz
cli
jo
jmp
pop
inc
mov
mov
outsl
jp
dec
mov
push
ljmp
imull
out
jnp
or
jnp
cmpsl
sub
or
and
xchg
inc
jo
jmp
